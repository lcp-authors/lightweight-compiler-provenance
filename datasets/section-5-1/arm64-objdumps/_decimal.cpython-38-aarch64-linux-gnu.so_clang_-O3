
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006388 <.init>:
    6388:	stp	x29, x30, [sp, #-16]!
    638c:	mov	x29, sp
    6390:	bl	69e0 <PyFloat_FromString@plt+0x10>
    6394:	ldp	x29, x30, [sp], #16
    6398:	ret

Disassembly of section .plt:

00000000000063a0 <memcpy@plt-0x20>:
    63a0:	stp	x16, x30, [sp, #-16]!
    63a4:	adrp	x16, 56000 <PyInit__decimal@@Base+0x4f54c>
    63a8:	ldr	x17, [x16, #4088]
    63ac:	add	x16, x16, #0xff8
    63b0:	br	x17
    63b4:	nop
    63b8:	nop
    63bc:	nop

00000000000063c0 <memcpy@plt>:
    63c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    63c4:	ldr	x17, [x16]
    63c8:	add	x16, x16, #0x0
    63cc:	br	x17

00000000000063d0 <PyUnicode_FromFormat@plt>:
    63d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    63d4:	ldr	x17, [x16, #8]
    63d8:	add	x16, x16, #0x8
    63dc:	br	x17

00000000000063e0 <memmove@plt>:
    63e0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    63e4:	ldr	x17, [x16, #16]
    63e8:	add	x16, x16, #0x10
    63ec:	br	x17

00000000000063f0 <PyList_New@plt>:
    63f0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    63f4:	ldr	x17, [x16, #24]
    63f8:	add	x16, x16, #0x18
    63fc:	br	x17

0000000000006400 <_PyUnicode_Ready@plt>:
    6400:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6404:	ldr	x17, [x16, #32]
    6408:	add	x16, x16, #0x20
    640c:	br	x17

0000000000006410 <PyDict_SetItemString@plt>:
    6410:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6414:	ldr	x17, [x16, #40]
    6418:	add	x16, x16, #0x28
    641c:	br	x17

0000000000006420 <strlen@plt>:
    6420:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6424:	ldr	x17, [x16, #48]
    6428:	add	x16, x16, #0x30
    642c:	br	x17

0000000000006430 <PyDict_Size@plt>:
    6430:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6434:	ldr	x17, [x16, #56]
    6438:	add	x16, x16, #0x38
    643c:	br	x17

0000000000006440 <mbstowcs@plt>:
    6440:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6444:	ldr	x17, [x16, #64]
    6448:	add	x16, x16, #0x40
    644c:	br	x17

0000000000006450 <raise@plt>:
    6450:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6454:	ldr	x17, [x16, #72]
    6458:	add	x16, x16, #0x48
    645c:	br	x17

0000000000006460 <PyArg_ParseTupleAndKeywords@plt>:
    6460:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6464:	ldr	x17, [x16, #80]
    6468:	add	x16, x16, #0x50
    646c:	br	x17

0000000000006470 <PyList_AsTuple@plt>:
    6470:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16, #88]
    6478:	add	x16, x16, #0x58
    647c:	br	x17

0000000000006480 <strtoll@plt>:
    6480:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #96]
    6488:	add	x16, x16, #0x60
    648c:	br	x17

0000000000006490 <PyObject_CallMethod@plt>:
    6490:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #104]
    6498:	add	x16, x16, #0x68
    649c:	br	x17

00000000000064a0 <PyMem_Free@plt>:
    64a0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #112]
    64a8:	add	x16, x16, #0x70
    64ac:	br	x17

00000000000064b0 <PyUnicode_FromWideChar@plt>:
    64b0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #120]
    64b8:	add	x16, x16, #0x78
    64bc:	br	x17

00000000000064c0 <PyObject_GetAttrString@plt>:
    64c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #128]
    64c8:	add	x16, x16, #0x80
    64cc:	br	x17

00000000000064d0 <__cxa_finalize@plt>:
    64d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #136]
    64d8:	add	x16, x16, #0x88
    64dc:	br	x17

00000000000064e0 <_PyLong_New@plt>:
    64e0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #144]
    64e8:	add	x16, x16, #0x90
    64ec:	br	x17

00000000000064f0 <fputc@plt>:
    64f0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #152]
    64f8:	add	x16, x16, #0x98
    64fc:	br	x17

0000000000006500 <PyUnicode_AsUTF8String@plt>:
    6500:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #160]
    6508:	add	x16, x16, #0xa0
    650c:	br	x17

0000000000006510 <_Py_Dealloc@plt>:
    6510:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #168]
    6518:	add	x16, x16, #0xa8
    651c:	br	x17

0000000000006520 <PyErr_NoMemory@plt>:
    6520:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #176]
    6528:	add	x16, x16, #0xb0
    652c:	br	x17

0000000000006530 <PyErr_SetObject@plt>:
    6530:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #184]
    6538:	add	x16, x16, #0xb8
    653c:	br	x17

0000000000006540 <__ctype_tolower_loc@plt>:
    6540:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #192]
    6548:	add	x16, x16, #0xc0
    654c:	br	x17

0000000000006550 <snprintf@plt>:
    6550:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #200]
    6558:	add	x16, x16, #0xc8
    655c:	br	x17

0000000000006560 <log10@plt>:
    6560:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #208]
    6568:	add	x16, x16, #0xd0
    656c:	br	x17

0000000000006570 <localeconv@plt>:
    6570:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #216]
    6578:	add	x16, x16, #0xd8
    657c:	br	x17

0000000000006580 <malloc@plt>:
    6580:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #224]
    6588:	add	x16, x16, #0xe0
    658c:	br	x17

0000000000006590 <PyErr_SetString@plt>:
    6590:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #232]
    6598:	add	x16, x16, #0xe8
    659c:	br	x17

00000000000065a0 <PyObject_IsInstance@plt>:
    65a0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #240]
    65a8:	add	x16, x16, #0xf0
    65ac:	br	x17

00000000000065b0 <memset@plt>:
    65b0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #248]
    65b8:	add	x16, x16, #0xf8
    65bc:	br	x17

00000000000065c0 <PyContextVar_Set@plt>:
    65c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #256]
    65c8:	add	x16, x16, #0x100
    65cc:	br	x17

00000000000065d0 <PyObject_Free@plt>:
    65d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #264]
    65d8:	add	x16, x16, #0x108
    65dc:	br	x17

00000000000065e0 <PyLong_FromSsize_t@plt>:
    65e0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #272]
    65e8:	add	x16, x16, #0x110
    65ec:	br	x17

00000000000065f0 <PyFloat_FromDouble@plt>:
    65f0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #280]
    65f8:	add	x16, x16, #0x118
    65fc:	br	x17

0000000000006600 <PyType_Ready@plt>:
    6600:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #288]
    6608:	add	x16, x16, #0x120
    660c:	br	x17

0000000000006610 <calloc@plt>:
    6610:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #296]
    6618:	add	x16, x16, #0x128
    661c:	br	x17

0000000000006620 <PyLong_FromLong@plt>:
    6620:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #304]
    6628:	add	x16, x16, #0x130
    662c:	br	x17

0000000000006630 <PyLong_AsSsize_t@plt>:
    6630:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #312]
    6638:	add	x16, x16, #0x138
    663c:	br	x17

0000000000006640 <_PyLong_GCD@plt>:
    6640:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #320]
    6648:	add	x16, x16, #0x140
    664c:	br	x17

0000000000006650 <PyErr_NewException@plt>:
    6650:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #328]
    6658:	add	x16, x16, #0x148
    665c:	br	x17

0000000000006660 <realloc@plt>:
    6660:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #336]
    6668:	add	x16, x16, #0x150
    666c:	br	x17

0000000000006670 <PyErr_Clear@plt>:
    6670:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #344]
    6678:	add	x16, x16, #0x158
    667c:	br	x17

0000000000006680 <PyContextVar_Get@plt>:
    6680:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #352]
    6688:	add	x16, x16, #0x160
    668c:	br	x17

0000000000006690 <PyBool_FromLong@plt>:
    6690:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #360]
    6698:	add	x16, x16, #0x168
    669c:	br	x17

00000000000066a0 <PyContextVar_New@plt>:
    66a0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #368]
    66a8:	add	x16, x16, #0x170
    66ac:	br	x17

00000000000066b0 <PyList_Append@plt>:
    66b0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #376]
    66b8:	add	x16, x16, #0x178
    66bc:	br	x17

00000000000066c0 <__gmon_start__@plt>:
    66c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #384]
    66c8:	add	x16, x16, #0x180
    66cc:	br	x17

00000000000066d0 <PyObject_CallFunction@plt>:
    66d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #392]
    66d8:	add	x16, x16, #0x188
    66dc:	br	x17

00000000000066e0 <PyTuple_New@plt>:
    66e0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #400]
    66e8:	add	x16, x16, #0x190
    66ec:	br	x17

00000000000066f0 <PyObject_GenericGetAttr@plt>:
    66f0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #408]
    66f8:	add	x16, x16, #0x198
    66fc:	br	x17

0000000000006700 <abort@plt>:
    6700:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #416]
    6708:	add	x16, x16, #0x1a0
    670c:	br	x17

0000000000006710 <Py_BuildValue@plt>:
    6710:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #424]
    6718:	add	x16, x16, #0x1a8
    671c:	br	x17

0000000000006720 <PyErr_Occurred@plt>:
    6720:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #432]
    6728:	add	x16, x16, #0x1b0
    672c:	br	x17

0000000000006730 <PyModule_Create2@plt>:
    6730:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #440]
    6738:	add	x16, x16, #0x1b8
    673c:	br	x17

0000000000006740 <_PyUnicode_IsWhitespace@plt>:
    6740:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #448]
    6748:	add	x16, x16, #0x1c0
    674c:	br	x17

0000000000006750 <puts@plt>:
    6750:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #456]
    6758:	add	x16, x16, #0x1c8
    675c:	br	x17

0000000000006760 <PyLong_AsLong@plt>:
    6760:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #464]
    6768:	add	x16, x16, #0x1d0
    676c:	br	x17

0000000000006770 <PyImport_ImportModule@plt>:
    6770:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #472]
    6778:	add	x16, x16, #0x1d8
    677c:	br	x17

0000000000006780 <PyObject_CallObject@plt>:
    6780:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #480]
    6788:	add	x16, x16, #0x1e0
    678c:	br	x17

0000000000006790 <PyObject_CallFunctionObjArgs@plt>:
    6790:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #488]
    6798:	add	x16, x16, #0x1e8
    679c:	br	x17

00000000000067a0 <strcmp@plt>:
    67a0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #496]
    67a8:	add	x16, x16, #0x1f0
    67ac:	br	x17

00000000000067b0 <PyDict_GetItemString@plt>:
    67b0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #504]
    67b8:	add	x16, x16, #0x1f8
    67bc:	br	x17

00000000000067c0 <__ctype_b_loc@plt>:
    67c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #512]
    67c8:	add	x16, x16, #0x200
    67cc:	br	x17

00000000000067d0 <PyUnicode_CompareWithASCIIString@plt>:
    67d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #520]
    67d8:	add	x16, x16, #0x208
    67dc:	br	x17

00000000000067e0 <PyUnicode_DecodeUTF8@plt>:
    67e0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #528]
    67e8:	add	x16, x16, #0x210
    67ec:	br	x17

00000000000067f0 <_PyUnicode_ToDecimalDigit@plt>:
    67f0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #536]
    67f8:	add	x16, x16, #0x218
    67fc:	br	x17

0000000000006800 <PyFloat_AsDouble@plt>:
    6800:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #544]
    6808:	add	x16, x16, #0x220
    680c:	br	x17

0000000000006810 <PyObject_IsTrue@plt>:
    6810:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #552]
    6818:	add	x16, x16, #0x228
    681c:	br	x17

0000000000006820 <PyArg_ParseTuple@plt>:
    6820:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #560]
    6828:	add	x16, x16, #0x230
    682c:	br	x17

0000000000006830 <free@plt>:
    6830:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #568]
    6838:	add	x16, x16, #0x238
    683c:	br	x17

0000000000006840 <PyUnicode_Compare@plt>:
    6840:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #576]
    6848:	add	x16, x16, #0x240
    684c:	br	x17

0000000000006850 <PyList_Size@plt>:
    6850:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #584]
    6858:	add	x16, x16, #0x248
    685c:	br	x17

0000000000006860 <PyDict_New@plt>:
    6860:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #592]
    6868:	add	x16, x16, #0x250
    686c:	br	x17

0000000000006870 <fwrite@plt>:
    6870:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #600]
    6878:	add	x16, x16, #0x258
    687c:	br	x17

0000000000006880 <PyLong_FromUnsignedLong@plt>:
    6880:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #608]
    6888:	add	x16, x16, #0x260
    688c:	br	x17

0000000000006890 <_PyObject_New@plt>:
    6890:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #616]
    6898:	add	x16, x16, #0x268
    689c:	br	x17

00000000000068a0 <PyUnicode_FromString@plt>:
    68a0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #624]
    68a8:	add	x16, x16, #0x270
    68ac:	br	x17

00000000000068b0 <PyModule_AddStringConstant@plt>:
    68b0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #632]
    68b8:	add	x16, x16, #0x278
    68bc:	br	x17

00000000000068c0 <PyUnicode_InternFromString@plt>:
    68c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #640]
    68c8:	add	x16, x16, #0x280
    68cc:	br	x17

00000000000068d0 <PyModule_AddObject@plt>:
    68d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #648]
    68d8:	add	x16, x16, #0x288
    68dc:	br	x17

00000000000068e0 <PyDict_SetItem@plt>:
    68e0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #656]
    68e8:	add	x16, x16, #0x290
    68ec:	br	x17

00000000000068f0 <PyObject_GenericSetAttr@plt>:
    68f0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #664]
    68f8:	add	x16, x16, #0x298
    68fc:	br	x17

0000000000006900 <PyType_IsSubtype@plt>:
    6900:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #672]
    6908:	add	x16, x16, #0x2a0
    690c:	br	x17

0000000000006910 <PyUnicode_AsUTF8AndSize@plt>:
    6910:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #680]
    6918:	add	x16, x16, #0x2a8
    691c:	br	x17

0000000000006920 <PyTuple_Size@plt>:
    6920:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #688]
    6928:	add	x16, x16, #0x2b0
    692c:	br	x17

0000000000006930 <PyComplex_AsCComplex@plt>:
    6930:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #696]
    6938:	add	x16, x16, #0x2b8
    693c:	br	x17

0000000000006940 <PyComplex_FromDoubles@plt>:
    6940:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #704]
    6948:	add	x16, x16, #0x2c0
    694c:	br	x17

0000000000006950 <PyErr_Format@plt>:
    6950:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #712]
    6958:	add	x16, x16, #0x2c8
    695c:	br	x17

0000000000006960 <__errno_location@plt>:
    6960:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #720]
    6968:	add	x16, x16, #0x2d0
    696c:	br	x17

0000000000006970 <PyList_GetItem@plt>:
    6970:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #728]
    6978:	add	x16, x16, #0x2d8
    697c:	br	x17

0000000000006980 <PyMem_Malloc@plt>:
    6980:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #736]
    6988:	add	x16, x16, #0x2e0
    698c:	br	x17

0000000000006990 <PyUnicode_New@plt>:
    6990:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #744]
    6998:	add	x16, x16, #0x2e8
    699c:	br	x17

00000000000069a0 <PyTuple_Pack@plt>:
    69a0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #752]
    69a8:	add	x16, x16, #0x2f0
    69ac:	br	x17

00000000000069b0 <fprintf@plt>:
    69b0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #760]
    69b8:	add	x16, x16, #0x2f8
    69bc:	br	x17

00000000000069c0 <PyDict_GetItemWithError@plt>:
    69c0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #768]
    69c8:	add	x16, x16, #0x300
    69cc:	br	x17

00000000000069d0 <PyFloat_FromString@plt>:
    69d0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #776]
    69d8:	add	x16, x16, #0x308
    69dc:	br	x17

Disassembly of section .text:

00000000000069e0 <PyInit__decimal@@Base-0xd4>:
    69e0:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    69e4:	ldr	x0, [x0, #3984]
    69e8:	cbz	x0, 69f0 <PyFloat_FromString@plt+0x20>
    69ec:	b	66c0 <__gmon_start__@plt>
    69f0:	ret
    69f4:	nop
    69f8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    69fc:	add	x0, x0, #0x570
    6a00:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    6a04:	add	x1, x1, #0x570
    6a08:	cmp	x1, x0
    6a0c:	b.eq	6a24 <PyFloat_FromString@plt+0x54>  // b.none
    6a10:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
    6a14:	ldr	x1, [x1, #3856]
    6a18:	cbz	x1, 6a24 <PyFloat_FromString@plt+0x54>
    6a1c:	mov	x16, x1
    6a20:	br	x16
    6a24:	ret
    6a28:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    6a2c:	add	x0, x0, #0x570
    6a30:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    6a34:	add	x1, x1, #0x570
    6a38:	sub	x1, x1, x0
    6a3c:	lsr	x2, x1, #63
    6a40:	add	x1, x2, x1, asr #3
    6a44:	cmp	xzr, x1, asr #1
    6a48:	asr	x1, x1, #1
    6a4c:	b.eq	6a64 <PyFloat_FromString@plt+0x94>  // b.none
    6a50:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
    6a54:	ldr	x2, [x2, #4056]
    6a58:	cbz	x2, 6a64 <PyFloat_FromString@plt+0x94>
    6a5c:	mov	x16, x2
    6a60:	br	x16
    6a64:	ret
    6a68:	stp	x29, x30, [sp, #-32]!
    6a6c:	mov	x29, sp
    6a70:	str	x19, [sp, #16]
    6a74:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
    6a78:	ldrb	w0, [x19, #1392]
    6a7c:	cbnz	w0, 6aa4 <PyFloat_FromString@plt+0xd4>
    6a80:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    6a84:	ldr	x0, [x0, #3896]
    6a88:	cbz	x0, 6a98 <PyFloat_FromString@plt+0xc8>
    6a8c:	adrp	x0, 57000 <PyInit__decimal@@Base+0x5054c>
    6a90:	ldr	x0, [x0, #784]
    6a94:	bl	64d0 <__cxa_finalize@plt>
    6a98:	bl	69f8 <PyFloat_FromString@plt+0x28>
    6a9c:	mov	w0, #0x1                   	// #1
    6aa0:	strb	w0, [x19, #1392]
    6aa4:	ldr	x19, [sp, #16]
    6aa8:	ldp	x29, x30, [sp], #32
    6aac:	ret
    6ab0:	b	6a28 <PyFloat_FromString@plt+0x58>

0000000000006ab4 <PyInit__decimal@@Base>:
    6ab4:	sub	sp, sp, #0x80
    6ab8:	stp	x29, x30, [sp, #32]
    6abc:	stp	x28, x27, [sp, #48]
    6ac0:	stp	x26, x25, [sp, #64]
    6ac4:	stp	x24, x23, [sp, #80]
    6ac8:	stp	x22, x21, [sp, #96]
    6acc:	stp	x20, x19, [sp, #112]
    6ad0:	add	x29, sp, #0x20
    6ad4:	adrp	x11, 56000 <PyInit__decimal@@Base+0x4f54c>
    6ad8:	adrp	x13, 56000 <PyInit__decimal@@Base+0x4f54c>
    6adc:	adrp	x17, 56000 <PyInit__decimal@@Base+0x4f54c>
    6ae0:	ldr	x11, [x11, #4064]
    6ae4:	ldr	x13, [x13, #3944]
    6ae8:	ldr	x17, [x17, #3888]
    6aec:	adrp	x9, 7000 <PyInit__decimal@@Base+0x54c>
    6af0:	adrp	x15, 21000 <PyInit__decimal@@Base+0x1a54c>
    6af4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6af8:	add	x9, x9, #0x968
    6afc:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
    6b00:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
    6b04:	adrp	x14, 59000 <PyInit__decimal@@Base+0x5254c>
    6b08:	add	x15, x15, #0xe48
    6b0c:	adrp	x16, 59000 <PyInit__decimal@@Base+0x5254c>
    6b10:	mov	w0, #0x4                   	// #4
    6b14:	str	x9, [x8, #1336]
    6b18:	str	x11, [x10, #1352]
    6b1c:	str	x13, [x12, #1360]
    6b20:	str	x15, [x14, #1368]
    6b24:	str	x17, [x16, #1376]
    6b28:	bl	1d78c <PyInit__decimal@@Base+0x16cd8>
    6b2c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    6b30:	add	x0, x0, #0xa0c
    6b34:	mov	x1, xzr
    6b38:	bl	66a0 <PyContextVar_New@plt>
    6b3c:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
    6b40:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
    6b44:	adrp	x28, 59000 <PyInit__decimal@@Base+0x5254c>
    6b48:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    6b4c:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
    6b50:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
    6b54:	adrp	x25, 59000 <PyInit__decimal@@Base+0x5254c>
    6b58:	str	x0, [x23, #1400]
    6b5c:	cbz	x0, 7278 <PyInit__decimal@@Base+0x7c4>
    6b60:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    6b64:	ldr	x20, [x20, #4040]
    6b68:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
    6b6c:	add	x10, x10, #0x580
    6b70:	adrp	x11, 56000 <PyInit__decimal@@Base+0x4f54c>
    6b74:	ldr	x8, [x20, #96]
    6b78:	mov	x27, x26
    6b7c:	mov	x26, x25
    6b80:	adrp	x25, 59000 <PyInit__decimal@@Base+0x5254c>
    6b84:	ldr	x9, [x8, #16]
    6b88:	str	x9, [x10]
    6b8c:	ldr	x9, [x8, #232]
    6b90:	ldr	x11, [x11, #3864]
    6b94:	str	x9, [x10, #8]
    6b98:	ldr	x8, [x8, #40]
    6b9c:	ldr	x9, [x11, #96]
    6ba0:	str	x8, [x10, #16]
    6ba4:	ldr	x9, [x9, #64]
    6ba8:	ldr	x8, [x11, #232]
    6bac:	str	x9, [x10, #24]
    6bb0:	cbz	x8, 6bec <PyInit__decimal@@Base+0x138>
    6bb4:	ldr	x1, [x8]
    6bb8:	cbz	x1, 6bec <PyInit__decimal@@Base+0x138>
    6bbc:	adrp	x19, 43000 <PyInit__decimal@@Base+0x3c54c>
    6bc0:	add	x21, x8, #0x10
    6bc4:	add	x19, x19, #0xa1c
    6bc8:	mov	x0, x19
    6bcc:	bl	67a0 <strcmp@plt>
    6bd0:	cbz	w0, 6be4 <PyInit__decimal@@Base+0x130>
    6bd4:	ldr	x1, [x21, #16]
    6bd8:	add	x21, x21, #0x20
    6bdc:	cbnz	x1, 6bc8 <PyInit__decimal@@Base+0x114>
    6be0:	b	6bec <PyInit__decimal@@Base+0x138>
    6be4:	ldrb	w8, [x21]
    6be8:	tbnz	w8, #2, 6c3c <PyInit__decimal@@Base+0x188>
    6bec:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    6bf0:	ldr	x8, [x8, #3920]
    6bf4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6bf8:	adrp	x2, 43000 <PyInit__decimal@@Base+0x3c54c>
    6bfc:	add	x1, x1, #0xb4c
    6c00:	ldr	x0, [x8]
    6c04:	add	x2, x2, #0xa1c
    6c08:	mov	x19, x22
    6c0c:	bl	6950 <PyErr_Format@plt>
    6c10:	mov	x20, xzr
    6c14:	mov	x21, xzr
    6c18:	mov	x22, xzr
    6c1c:	stur	xzr, [x29, #-8]
    6c20:	str	xzr, [x25, #1440]
    6c24:	mov	x25, x26
    6c28:	mov	x26, x27
    6c2c:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
    6c30:	ldr	x0, [x24, #1456]
    6c34:	cbnz	x0, 7294 <PyInit__decimal@@Base+0x7e0>
    6c38:	b	72ac <PyInit__decimal@@Base+0x7f8>
    6c3c:	ldur	x8, [x21, #-8]
    6c40:	str	x8, [x25, #1440]
    6c44:	cbz	x8, 6c8c <PyInit__decimal@@Base+0x1d8>
    6c48:	ldr	x8, [x20, #232]
    6c4c:	mov	x25, x26
    6c50:	mov	x26, x27
    6c54:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
    6c58:	cbz	x8, 6cac <PyInit__decimal@@Base+0x1f8>
    6c5c:	ldr	x1, [x8]
    6c60:	cbz	x1, 6cac <PyInit__decimal@@Base+0x1f8>
    6c64:	adrp	x19, 43000 <PyInit__decimal@@Base+0x3c54c>
    6c68:	add	x20, x8, #0x10
    6c6c:	add	x19, x19, #0xa2d
    6c70:	mov	x0, x19
    6c74:	bl	67a0 <strcmp@plt>
    6c78:	cbz	w0, 6ca4 <PyInit__decimal@@Base+0x1f0>
    6c7c:	ldr	x1, [x20, #16]
    6c80:	add	x20, x20, #0x20
    6c84:	cbnz	x1, 6c70 <PyInit__decimal@@Base+0x1bc>
    6c88:	b	6cac <PyInit__decimal@@Base+0x1f8>
    6c8c:	mov	x19, x22
    6c90:	stur	xzr, [x29, #-8]
    6c94:	mov	x20, xzr
    6c98:	mov	x21, xzr
    6c9c:	mov	x22, xzr
    6ca0:	b	6c24 <PyInit__decimal@@Base+0x170>
    6ca4:	ldrb	w8, [x20]
    6ca8:	tbnz	w8, #2, 6cf4 <PyInit__decimal@@Base+0x240>
    6cac:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    6cb0:	ldr	x8, [x8, #3920]
    6cb4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6cb8:	adrp	x2, 43000 <PyInit__decimal@@Base+0x3c54c>
    6cbc:	add	x1, x1, #0xb4c
    6cc0:	ldr	x0, [x8]
    6cc4:	add	x2, x2, #0xa2d
    6cc8:	mov	x19, x22
    6ccc:	bl	6950 <PyErr_Format@plt>
    6cd0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6cd4:	stur	xzr, [x29, #-8]
    6cd8:	mov	x20, xzr
    6cdc:	mov	x21, xzr
    6ce0:	mov	x22, xzr
    6ce4:	str	xzr, [x8, #1448]
    6ce8:	ldr	x0, [x24, #1456]
    6cec:	cbnz	x0, 7294 <PyInit__decimal@@Base+0x7e0>
    6cf0:	b	72ac <PyInit__decimal@@Base+0x7f8>
    6cf4:	ldur	x8, [x20, #-8]
    6cf8:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
    6cfc:	str	x8, [x9, #1448]
    6d00:	cbz	x8, 7278 <PyInit__decimal@@Base+0x7c4>
    6d04:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    6d08:	ldr	x8, [x8, #4032]
    6d0c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    6d10:	add	x0, x0, #0xe60
    6d14:	str	x8, [x0, #256]
    6d18:	str	x8, [x0, #672]
    6d1c:	str	x8, [x0, #1088]
    6d20:	str	x8, [x0, #1504]
    6d24:	bl	6600 <PyType_Ready@plt>
    6d28:	tbnz	w0, #31, 7278 <PyInit__decimal@@Base+0x7c4>
    6d2c:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
    6d30:	add	x19, x19, #0x0
    6d34:	mov	x0, x19
    6d38:	bl	6600 <PyType_Ready@plt>
    6d3c:	tbnz	w0, #31, 7278 <PyInit__decimal@@Base+0x7c4>
    6d40:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    6d44:	add	x0, x0, #0x340
    6d48:	bl	6600 <PyType_Ready@plt>
    6d4c:	tbnz	w0, #31, 7278 <PyInit__decimal@@Base+0x7c4>
    6d50:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    6d54:	add	x0, x0, #0x1a0
    6d58:	bl	6600 <PyType_Ready@plt>
    6d5c:	tbnz	w0, #31, 7278 <PyInit__decimal@@Base+0x7c4>
    6d60:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
    6d64:	add	x0, x0, #0x1bc
    6d68:	bl	68a0 <PyUnicode_FromString@plt>
    6d6c:	mov	x21, x0
    6d70:	cbz	x0, 743c <PyInit__decimal@@Base+0x988>
    6d74:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    6d78:	ldr	x0, [x8, #3944]
    6d7c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6d80:	add	x1, x1, #0xa38
    6d84:	mov	x2, x21
    6d88:	bl	6410 <PyDict_SetItemString@plt>
    6d8c:	tbnz	w0, #31, 7404 <PyInit__decimal@@Base+0x950>
    6d90:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6d94:	ldr	x0, [x8, #264]
    6d98:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6d9c:	add	x1, x1, #0xa38
    6da0:	mov	x2, x21
    6da4:	bl	6410 <PyDict_SetItemString@plt>
    6da8:	tbnz	w0, #31, 7404 <PyInit__decimal@@Base+0x950>
    6dac:	ldr	x8, [x21]
    6db0:	mov	x24, x19
    6db4:	subs	x8, x8, #0x1
    6db8:	str	x8, [x21]
    6dbc:	b.ne	6dc8 <PyInit__decimal@@Base+0x314>  // b.any
    6dc0:	mov	x0, x21
    6dc4:	bl	6510 <_Py_Dealloc@plt>
    6dc8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    6dcc:	add	x0, x0, #0xa43
    6dd0:	bl	6770 <PyImport_ImportModule@plt>
    6dd4:	mov	x20, x0
    6dd8:	cbz	x0, 7498 <PyInit__decimal@@Base+0x9e4>
    6ddc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6de0:	add	x1, x1, #0xa4b
    6de4:	mov	x0, x20
    6de8:	bl	64c0 <PyObject_GetAttrString@plt>
    6dec:	mov	x19, x0
    6df0:	cbz	x0, 7458 <PyInit__decimal@@Base+0x9a4>
    6df4:	adrp	x23, 58000 <PyInit__decimal@@Base+0x5154c>
    6df8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6dfc:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    6e00:	add	x23, x23, #0xe60
    6e04:	add	x1, x1, #0xa52
    6e08:	add	x2, x2, #0x211
    6e0c:	mov	x0, x19
    6e10:	mov	x3, x23
    6e14:	bl	6490 <PyObject_CallMethod@plt>
    6e18:	cbz	x0, 7458 <PyInit__decimal@@Base+0x9a4>
    6e1c:	ldr	x8, [x0]
    6e20:	subs	x8, x8, #0x1
    6e24:	str	x8, [x0]
    6e28:	b.ne	6e30 <PyInit__decimal@@Base+0x37c>  // b.any
    6e2c:	bl	6510 <_Py_Dealloc@plt>
    6e30:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6e34:	add	x1, x1, #0xa5b
    6e38:	mov	x0, x20
    6e3c:	bl	64c0 <PyObject_GetAttrString@plt>
    6e40:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6e44:	str	x0, [x8, #1456]
    6e48:	cbz	x0, 7458 <PyInit__decimal@@Base+0x9a4>
    6e4c:	ldr	x8, [x20]
    6e50:	subs	x8, x8, #0x1
    6e54:	str	x8, [x20]
    6e58:	b.ne	6e64 <PyInit__decimal@@Base+0x3b0>  // b.any
    6e5c:	mov	x0, x20
    6e60:	bl	6510 <_Py_Dealloc@plt>
    6e64:	ldr	x8, [x19]
    6e68:	subs	x8, x8, #0x1
    6e6c:	str	x8, [x19]
    6e70:	b.ne	6e7c <PyInit__decimal@@Base+0x3c8>  // b.any
    6e74:	mov	x0, x19
    6e78:	bl	6510 <_Py_Dealloc@plt>
    6e7c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    6e80:	add	x0, x0, #0xa64
    6e84:	bl	6770 <PyImport_ImportModule@plt>
    6e88:	mov	x20, x0
    6e8c:	cbz	x0, 7498 <PyInit__decimal@@Base+0x9e4>
    6e90:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6e94:	adrp	x2, 43000 <PyInit__decimal@@Base+0x3c54c>
    6e98:	adrp	x3, 43000 <PyInit__decimal@@Base+0x3c54c>
    6e9c:	adrp	x4, 43000 <PyInit__decimal@@Base+0x3c54c>
    6ea0:	add	x1, x1, #0xa70
    6ea4:	add	x2, x2, #0xa7b
    6ea8:	add	x3, x3, #0xa80
    6eac:	add	x4, x4, #0xa8d
    6eb0:	mov	x0, x20
    6eb4:	bl	6490 <PyObject_CallMethod@plt>
    6eb8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6ebc:	str	x0, [x8, #1464]
    6ec0:	cbz	x0, 7498 <PyInit__decimal@@Base+0x9e4>
    6ec4:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
    6ec8:	add	x0, x0, #0x1bc
    6ecc:	bl	68a0 <PyUnicode_FromString@plt>
    6ed0:	mov	x21, x0
    6ed4:	cbz	x0, 74cc <PyInit__decimal@@Base+0xa18>
    6ed8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6edc:	ldr	x8, [x8, #1464]
    6ee0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6ee4:	add	x1, x1, #0xa38
    6ee8:	mov	x2, x21
    6eec:	ldr	x0, [x8, #264]
    6ef0:	bl	6410 <PyDict_SetItemString@plt>
    6ef4:	tbnz	w0, #31, 74d4 <PyInit__decimal@@Base+0xa20>
    6ef8:	ldr	x8, [x21]
    6efc:	subs	x8, x8, #0x1
    6f00:	str	x8, [x21]
    6f04:	b.ne	6f10 <PyInit__decimal@@Base+0x45c>  // b.any
    6f08:	mov	x0, x21
    6f0c:	bl	6510 <_Py_Dealloc@plt>
    6f10:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    6f14:	add	x0, x0, #0xaa2
    6f18:	bl	6770 <PyImport_ImportModule@plt>
    6f1c:	mov	x21, x0
    6f20:	cbz	x0, 74cc <PyInit__decimal@@Base+0xa18>
    6f24:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6f28:	add	x1, x1, #0xab2
    6f2c:	mov	x0, x21
    6f30:	bl	64c0 <PyObject_GetAttrString@plt>
    6f34:	mov	x22, x0
    6f38:	cbz	x0, 74f8 <PyInit__decimal@@Base+0xa44>
    6f3c:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    6f40:	ldr	x0, [x0, #4000]
    6f44:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    6f48:	adrp	x2, 43000 <PyInit__decimal@@Base+0x3c54c>
    6f4c:	adrp	x3, 59000 <PyInit__decimal@@Base+0x5254c>
    6f50:	add	x1, x1, #0xac1
    6f54:	add	x2, x2, #0xac9
    6f58:	add	x3, x3, #0x340
    6f5c:	mov	x4, x22
    6f60:	bl	66d0 <PyObject_CallFunction@plt>
    6f64:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    6f68:	str	x0, [x8, #1472]
    6f6c:	cbz	x0, 74f8 <PyInit__decimal@@Base+0xa44>
    6f70:	ldr	x8, [x20]
    6f74:	subs	x8, x8, #0x1
    6f78:	str	x8, [x20]
    6f7c:	b.eq	7500 <PyInit__decimal@@Base+0xa4c>  // b.none
    6f80:	ldr	x8, [x21]
    6f84:	subs	x8, x8, #0x1
    6f88:	str	x8, [x21]
    6f8c:	b.eq	7518 <PyInit__decimal@@Base+0xa64>  // b.none
    6f90:	ldr	x8, [x22]
    6f94:	subs	x8, x8, #0x1
    6f98:	str	x8, [x22]
    6f9c:	b.eq	7530 <PyInit__decimal@@Base+0xa7c>  // b.none
    6fa0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    6fa4:	add	x0, x0, #0xbf8
    6fa8:	mov	w1, #0x3f5                 	// #1013
    6fac:	bl	6730 <PyModule_Create2@plt>
    6fb0:	stur	x0, [x29, #-8]
    6fb4:	cbz	x0, 748c <PyInit__decimal@@Base+0x9d8>
    6fb8:	ldr	x8, [x23]
    6fbc:	ldur	x0, [x29, #-8]
    6fc0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    6fc4:	add	x1, x1, #0x567
    6fc8:	add	x8, x8, #0x1
    6fcc:	mov	x2, x23
    6fd0:	str	x8, [x23]
    6fd4:	bl	68d0 <PyModule_AddObject@plt>
    6fd8:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    6fdc:	ldr	x8, [x24]
    6fe0:	ldur	x0, [x29, #-8]
    6fe4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    6fe8:	mov	x2, x24
    6fec:	add	x8, x8, #0x1
    6ff0:	add	x1, x1, #0x36d
    6ff4:	str	x8, [x24]
    6ff8:	bl	68d0 <PyModule_AddObject@plt>
    6ffc:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7000:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7004:	ldr	x2, [x8, #1464]
    7008:	ldur	x0, [x29, #-8]
    700c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7010:	add	x1, x1, #0xa80
    7014:	ldr	x8, [x2]
    7018:	add	x8, x8, #0x1
    701c:	str	x8, [x2]
    7020:	bl	68d0 <PyModule_AddObject@plt>
    7024:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7028:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    702c:	ldr	x8, [x8, #3960]
    7030:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    7034:	add	x0, x0, #0xad4
    7038:	mov	x2, xzr
    703c:	ldr	x1, [x8]
    7040:	bl	6650 <PyErr_NewException@plt>
    7044:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    7048:	str	x0, [x22, #1480]
    704c:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7050:	ldr	x8, [x0]
    7054:	mov	x2, x0
    7058:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    705c:	add	x1, x1, #0xadc
    7060:	add	x8, x8, #0x1
    7064:	str	x8, [x0]
    7068:	ldur	x0, [x29, #-8]
    706c:	bl	68d0 <PyModule_AddObject@plt>
    7070:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7074:	mov	w0, #0x9                   	// #9
    7078:	bl	66e0 <PyTuple_New@plt>
    707c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7080:	str	x0, [x8, #1488]
    7084:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7088:	adrp	x21, 56000 <PyInit__decimal@@Base+0x4f54c>
    708c:	adrp	x25, 56000 <PyInit__decimal@@Base+0x4f54c>
    7090:	ldr	x21, [x21, #4016]
    7094:	ldr	x25, [x25, #3936]
    7098:	adrp	x23, 58000 <PyInit__decimal@@Base+0x5154c>
    709c:	adrp	x26, 58000 <PyInit__decimal@@Base+0x5154c>
    70a0:	adrp	x27, 58000 <PyInit__decimal@@Base+0x5154c>
    70a4:	add	x23, x23, #0xe38
    70a8:	mov	w24, #0xb                   	// #11
    70ac:	add	x26, x26, #0xdf8
    70b0:	add	x27, x27, #0xdd8
    70b4:	ldur	w8, [x23, #-8]
    70b8:	cmp	w8, #0x7ff
    70bc:	b.gt	70dc <PyInit__decimal@@Base+0x628>
    70c0:	cmp	w8, #0x4
    70c4:	b.eq	7104 <PyInit__decimal@@Base+0x650>  // b.none
    70c8:	cmp	w8, #0x400
    70cc:	b.ne	7124 <PyInit__decimal@@Base+0x670>  // b.any
    70d0:	ldr	x1, [x22, #1480]
    70d4:	ldr	x2, [x25]
    70d8:	b	7118 <PyInit__decimal@@Base+0x664>
    70dc:	cmp	w8, #0x800
    70e0:	b.eq	7110 <PyInit__decimal@@Base+0x65c>  // b.none
    70e4:	cmp	w8, #0x4, lsl #12
    70e8:	b.ne	7124 <PyInit__decimal@@Base+0x670>  // b.any
    70ec:	ldr	x1, [x27, #32]
    70f0:	ldr	x2, [x27, #64]
    70f4:	ldr	x3, [x27]
    70f8:	mov	w0, #0x3                   	// #3
    70fc:	bl	69a0 <PyTuple_Pack@plt>
    7100:	b	7130 <PyInit__decimal@@Base+0x67c>
    7104:	ldr	x1, [x22, #1480]
    7108:	ldr	x2, [x21]
    710c:	b	7118 <PyInit__decimal@@Base+0x664>
    7110:	ldr	x1, [x26]
    7114:	ldr	x2, [x26, #32]
    7118:	mov	w0, #0x2                   	// #2
    711c:	bl	69a0 <PyTuple_Pack@plt>
    7120:	b	7130 <PyInit__decimal@@Base+0x67c>
    7124:	ldr	x1, [x22, #1480]
    7128:	mov	w0, #0x1                   	// #1
    712c:	bl	69a0 <PyTuple_Pack@plt>
    7130:	mov	x20, x0
    7134:	cbz	x0, 749c <PyInit__decimal@@Base+0x9e8>
    7138:	ldur	x0, [x23, #-16]
    713c:	mov	x1, x20
    7140:	mov	x2, xzr
    7144:	bl	6650 <PyErr_NewException@plt>
    7148:	str	x0, [x23]
    714c:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7150:	ldr	x8, [x20]
    7154:	mov	x2, x0
    7158:	subs	x8, x8, #0x1
    715c:	str	x8, [x20]
    7160:	b.ne	7170 <PyInit__decimal@@Base+0x6bc>  // b.any
    7164:	mov	x0, x20
    7168:	bl	6510 <_Py_Dealloc@plt>
    716c:	ldr	x2, [x23]
    7170:	ldr	x8, [x2]
    7174:	ldur	x0, [x29, #-8]
    7178:	add	x8, x8, #0x1
    717c:	str	x8, [x2]
    7180:	ldur	x1, [x23, #-24]
    7184:	bl	68d0 <PyModule_AddObject@plt>
    7188:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    718c:	ldr	x9, [x23], #-32
    7190:	ldr	x8, [x9]
    7194:	add	x8, x8, #0x1
    7198:	str	x8, [x9]
    719c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    71a0:	ldr	x8, [x8, #1488]
    71a4:	str	x9, [x8, x24, lsl #3]
    71a8:	sub	x24, x24, #0x1
    71ac:	cmp	x24, #0x2
    71b0:	b.ne	70b4 <PyInit__decimal@@Base+0x600>  // b.any
    71b4:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    71b8:	add	x8, x8, #0xc78
    71bc:	ldr	x1, [x8, #192]
    71c0:	ldr	x9, [x8, #8]
    71c4:	str	x1, [x8]
    71c8:	cbz	x9, 753c <PyInit__decimal@@Base+0xa88>
    71cc:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    71d0:	add	x22, x22, #0xca0
    71d4:	adrp	x23, 58000 <PyInit__decimal@@Base+0x5154c>
    71d8:	ldur	w8, [x22, #-16]
    71dc:	cmp	w8, #0x10
    71e0:	b.eq	71f0 <PyInit__decimal@@Base+0x73c>  // b.none
    71e4:	mov	w0, #0x1                   	// #1
    71e8:	bl	69a0 <PyTuple_Pack@plt>
    71ec:	b	71fc <PyInit__decimal@@Base+0x748>
    71f0:	ldr	x2, [x21]
    71f4:	mov	w0, #0x2                   	// #2
    71f8:	bl	69a0 <PyTuple_Pack@plt>
    71fc:	mov	x20, x0
    7200:	cbz	x0, 749c <PyInit__decimal@@Base+0x9e8>
    7204:	ldur	x0, [x22, #-24]
    7208:	mov	x1, x20
    720c:	mov	x2, xzr
    7210:	bl	6650 <PyErr_NewException@plt>
    7214:	stur	x0, [x22, #-8]
    7218:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    721c:	ldr	x8, [x20]
    7220:	mov	x2, x0
    7224:	subs	x8, x8, #0x1
    7228:	str	x8, [x20]
    722c:	b.ne	723c <PyInit__decimal@@Base+0x788>  // b.any
    7230:	mov	x0, x20
    7234:	bl	6510 <_Py_Dealloc@plt>
    7238:	ldur	x2, [x22, #-8]
    723c:	ldr	x8, [x2]
    7240:	ldur	x0, [x29, #-8]
    7244:	add	x8, x8, #0x1
    7248:	str	x8, [x2]
    724c:	ldur	x1, [x22, #-32]
    7250:	bl	68d0 <PyModule_AddObject@plt>
    7254:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7258:	ldr	x8, [x22]
    725c:	cbz	x8, 753c <PyInit__decimal@@Base+0xa88>
    7260:	ldr	x1, [x23, #3384]
    7264:	add	x22, x22, #0x20
    7268:	ldur	w8, [x22, #-16]
    726c:	cmp	w8, #0x10
    7270:	b.ne	71e4 <PyInit__decimal@@Base+0x730>  // b.any
    7274:	b	71f0 <PyInit__decimal@@Base+0x73c>
    7278:	mov	x19, x22
    727c:	stur	xzr, [x29, #-8]
    7280:	mov	x20, xzr
    7284:	mov	x21, xzr
    7288:	mov	x22, xzr
    728c:	ldr	x0, [x24, #1456]
    7290:	cbz	x0, 72ac <PyInit__decimal@@Base+0x7f8>
    7294:	str	xzr, [x24, #1456]
    7298:	ldr	x8, [x0]
    729c:	subs	x8, x8, #0x1
    72a0:	str	x8, [x0]
    72a4:	b.ne	72ac <PyInit__decimal@@Base+0x7f8>  // b.any
    72a8:	bl	6510 <_Py_Dealloc@plt>
    72ac:	cbz	x20, 72c8 <PyInit__decimal@@Base+0x814>
    72b0:	ldr	x8, [x20]
    72b4:	subs	x8, x8, #0x1
    72b8:	str	x8, [x20]
    72bc:	b.ne	72c8 <PyInit__decimal@@Base+0x814>  // b.any
    72c0:	mov	x0, x20
    72c4:	bl	6510 <_Py_Dealloc@plt>
    72c8:	cbz	x21, 72e4 <PyInit__decimal@@Base+0x830>
    72cc:	ldr	x8, [x21]
    72d0:	subs	x8, x8, #0x1
    72d4:	str	x8, [x21]
    72d8:	b.ne	72e4 <PyInit__decimal@@Base+0x830>  // b.any
    72dc:	mov	x0, x21
    72e0:	bl	6510 <_Py_Dealloc@plt>
    72e4:	cbz	x22, 7300 <PyInit__decimal@@Base+0x84c>
    72e8:	ldr	x8, [x22]
    72ec:	subs	x8, x8, #0x1
    72f0:	str	x8, [x22]
    72f4:	b.ne	7300 <PyInit__decimal@@Base+0x84c>  // b.any
    72f8:	mov	x0, x22
    72fc:	bl	6510 <_Py_Dealloc@plt>
    7300:	ldr	x0, [x28, #1488]
    7304:	cbz	x0, 7320 <PyInit__decimal@@Base+0x86c>
    7308:	str	xzr, [x28, #1488]
    730c:	ldr	x8, [x0]
    7310:	subs	x8, x8, #0x1
    7314:	str	x8, [x0]
    7318:	b.ne	7320 <PyInit__decimal@@Base+0x86c>  // b.any
    731c:	bl	6510 <_Py_Dealloc@plt>
    7320:	ldr	x0, [x19, #1464]
    7324:	cbz	x0, 7340 <PyInit__decimal@@Base+0x88c>
    7328:	str	xzr, [x19, #1464]
    732c:	ldr	x8, [x0]
    7330:	subs	x8, x8, #0x1
    7334:	str	x8, [x0]
    7338:	b.ne	7340 <PyInit__decimal@@Base+0x88c>  // b.any
    733c:	bl	6510 <_Py_Dealloc@plt>
    7340:	ldr	x0, [x27, #1496]
    7344:	cbz	x0, 7360 <PyInit__decimal@@Base+0x8ac>
    7348:	str	xzr, [x27, #1496]
    734c:	ldr	x8, [x0]
    7350:	subs	x8, x8, #0x1
    7354:	str	x8, [x0]
    7358:	b.ne	7360 <PyInit__decimal@@Base+0x8ac>  // b.any
    735c:	bl	6510 <_Py_Dealloc@plt>
    7360:	ldr	x0, [x26, #1504]
    7364:	ldur	x19, [x29, #-8]
    7368:	cbz	x0, 7384 <PyInit__decimal@@Base+0x8d0>
    736c:	str	xzr, [x26, #1504]
    7370:	ldr	x8, [x0]
    7374:	subs	x8, x8, #0x1
    7378:	str	x8, [x0]
    737c:	b.ne	7384 <PyInit__decimal@@Base+0x8d0>  // b.any
    7380:	bl	6510 <_Py_Dealloc@plt>
    7384:	ldr	x0, [x25, #1512]
    7388:	cbz	x0, 73a4 <PyInit__decimal@@Base+0x8f0>
    738c:	str	xzr, [x25, #1512]
    7390:	ldr	x8, [x0]
    7394:	subs	x8, x8, #0x1
    7398:	str	x8, [x0]
    739c:	b.ne	73a4 <PyInit__decimal@@Base+0x8f0>  // b.any
    73a0:	bl	6510 <_Py_Dealloc@plt>
    73a4:	ldr	x0, [x23, #1400]
    73a8:	cbz	x0, 73c4 <PyInit__decimal@@Base+0x910>
    73ac:	str	xzr, [x23, #1400]
    73b0:	ldr	x8, [x0]
    73b4:	subs	x8, x8, #0x1
    73b8:	str	x8, [x0]
    73bc:	b.ne	73c4 <PyInit__decimal@@Base+0x910>  // b.any
    73c0:	bl	6510 <_Py_Dealloc@plt>
    73c4:	cbz	x19, 73e0 <PyInit__decimal@@Base+0x92c>
    73c8:	ldr	x8, [x19]
    73cc:	subs	x8, x8, #0x1
    73d0:	str	x8, [x19]
    73d4:	b.ne	73e0 <PyInit__decimal@@Base+0x92c>  // b.any
    73d8:	mov	x0, x19
    73dc:	bl	6510 <_Py_Dealloc@plt>
    73e0:	mov	x0, xzr
    73e4:	ldp	x20, x19, [sp, #112]
    73e8:	ldp	x22, x21, [sp, #96]
    73ec:	ldp	x24, x23, [sp, #80]
    73f0:	ldp	x26, x25, [sp, #64]
    73f4:	ldp	x28, x27, [sp, #48]
    73f8:	ldp	x29, x30, [sp, #32]
    73fc:	add	sp, sp, #0x80
    7400:	ret
    7404:	mov	x20, xzr
    7408:	stur	xzr, [x29, #-8]
    740c:	ldr	x8, [x21]
    7410:	mov	x19, x22
    7414:	subs	x8, x8, #0x1
    7418:	str	x8, [x21]
    741c:	b.ne	7284 <PyInit__decimal@@Base+0x7d0>  // b.any
    7420:	mov	x0, x21
    7424:	bl	6510 <_Py_Dealloc@plt>
    7428:	mov	x21, xzr
    742c:	mov	x22, xzr
    7430:	ldr	x0, [x24, #1456]
    7434:	cbnz	x0, 7294 <PyInit__decimal@@Base+0x7e0>
    7438:	b	72ac <PyInit__decimal@@Base+0x7f8>
    743c:	mov	x19, x22
    7440:	stur	xzr, [x29, #-8]
    7444:	mov	x20, xzr
    7448:	mov	x22, xzr
    744c:	ldr	x0, [x24, #1456]
    7450:	cbnz	x0, 7294 <PyInit__decimal@@Base+0x7e0>
    7454:	b	72ac <PyInit__decimal@@Base+0x7f8>
    7458:	ldr	x8, [x20]
    745c:	subs	x8, x8, #0x1
    7460:	str	x8, [x20]
    7464:	b.ne	7470 <PyInit__decimal@@Base+0x9bc>  // b.any
    7468:	mov	x0, x20
    746c:	bl	6510 <_Py_Dealloc@plt>
    7470:	cbz	x19, 748c <PyInit__decimal@@Base+0x9d8>
    7474:	ldr	x8, [x19]
    7478:	subs	x8, x8, #0x1
    747c:	str	x8, [x19]
    7480:	b.ne	748c <PyInit__decimal@@Base+0x9d8>  // b.any
    7484:	mov	x0, x19
    7488:	bl	6510 <_Py_Dealloc@plt>
    748c:	stur	xzr, [x29, #-8]
    7490:	mov	x20, xzr
    7494:	b	749c <PyInit__decimal@@Base+0x9e8>
    7498:	stur	xzr, [x29, #-8]
    749c:	mov	x21, xzr
    74a0:	mov	x22, xzr
    74a4:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
    74a8:	adrp	x25, 59000 <PyInit__decimal@@Base+0x5254c>
    74ac:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
    74b0:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
    74b4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
    74b8:	adrp	x28, 59000 <PyInit__decimal@@Base+0x5254c>
    74bc:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
    74c0:	ldr	x0, [x24, #1456]
    74c4:	cbnz	x0, 7294 <PyInit__decimal@@Base+0x7e0>
    74c8:	b	72ac <PyInit__decimal@@Base+0x7f8>
    74cc:	stur	xzr, [x29, #-8]
    74d0:	b	74a0 <PyInit__decimal@@Base+0x9ec>
    74d4:	stur	xzr, [x29, #-8]
    74d8:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
    74dc:	adrp	x25, 59000 <PyInit__decimal@@Base+0x5254c>
    74e0:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
    74e4:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
    74e8:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    74ec:	adrp	x28, 59000 <PyInit__decimal@@Base+0x5254c>
    74f0:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
    74f4:	b	740c <PyInit__decimal@@Base+0x958>
    74f8:	stur	xzr, [x29, #-8]
    74fc:	b	74a4 <PyInit__decimal@@Base+0x9f0>
    7500:	mov	x0, x20
    7504:	bl	6510 <_Py_Dealloc@plt>
    7508:	ldr	x8, [x21]
    750c:	subs	x8, x8, #0x1
    7510:	str	x8, [x21]
    7514:	b.ne	6f90 <PyInit__decimal@@Base+0x4dc>  // b.any
    7518:	mov	x0, x21
    751c:	bl	6510 <_Py_Dealloc@plt>
    7520:	ldr	x8, [x22]
    7524:	subs	x8, x8, #0x1
    7528:	str	x8, [x22]
    752c:	b.ne	6fa0 <PyInit__decimal@@Base+0x4ec>  // b.any
    7530:	mov	x0, x22
    7534:	bl	6510 <_Py_Dealloc@plt>
    7538:	b	6fa0 <PyInit__decimal@@Base+0x4ec>
    753c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    7540:	add	x0, x0, #0x0
    7544:	mov	x1, xzr
    7548:	bl	6780 <PyObject_CallObject@plt>
    754c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7550:	str	x0, [x8, #1496]
    7554:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7558:	ldr	x8, [x0]
    755c:	mov	x2, x0
    7560:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7564:	add	x1, x1, #0xaed
    7568:	add	x8, x8, #0x1
    756c:	str	x8, [x0]
    7570:	ldur	x0, [x29, #-8]
    7574:	bl	68d0 <PyModule_AddObject@plt>
    7578:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    757c:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
    7580:	ldr	x2, [x2, #4024]
    7584:	ldur	x0, [x29, #-8]
    7588:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    758c:	add	x1, x1, #0xafc
    7590:	ldr	x8, [x2]
    7594:	add	x8, x8, #0x1
    7598:	str	x8, [x2]
    759c:	bl	68d0 <PyModule_AddObject@plt>
    75a0:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    75a4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    75a8:	add	x0, x0, #0x0
    75ac:	mov	x1, xzr
    75b0:	bl	6780 <PyObject_CallObject@plt>
    75b4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    75b8:	str	x0, [x8, #1504]
    75bc:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    75c0:	mov	w9, #0x4bbf                	// #19391
    75c4:	adrp	x20, 43000 <PyInit__decimal@@Base+0x3c54c>
    75c8:	str	w9, [x0, #40]
    75cc:	mov	x9, #0x100000000           	// #4294967296
    75d0:	add	x20, x20, #0x820
    75d4:	str	x9, [x0, #56]
    75d8:	ldr	x9, [x0]
    75dc:	mov	w8, #0x9                   	// #9
    75e0:	ldr	q0, [x20]
    75e4:	str	x8, [x0, #16]
    75e8:	mov	w8, #0x4                   	// #4
    75ec:	str	w8, [x0, #52]
    75f0:	mov	w8, #0x1                   	// #1
    75f4:	str	w8, [x0, #80]
    75f8:	add	x8, x9, #0x1
    75fc:	mov	x2, x0
    7600:	stur	xzr, [x0, #44]
    7604:	stur	q0, [x0, #24]
    7608:	str	x8, [x0]
    760c:	ldur	x0, [x29, #-8]
    7610:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7614:	add	x1, x1, #0xb09
    7618:	str	q0, [sp]
    761c:	bl	68d0 <PyModule_AddObject@plt>
    7620:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7624:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    7628:	add	x0, x0, #0x0
    762c:	mov	x1, xzr
    7630:	bl	6780 <PyObject_CallObject@plt>
    7634:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7638:	str	x0, [x8, #1512]
    763c:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7640:	ldr	q0, [sp]
    7644:	ldr	x11, [x0]
    7648:	ldr	w9, [x20, #36]
    764c:	mov	w8, #0x9                   	// #9
    7650:	stur	q0, [x0, #24]
    7654:	ldur	q0, [x20, #20]
    7658:	mov	w10, #0x1                   	// #1
    765c:	str	x8, [x0, #16]
    7660:	add	x8, x11, #0x1
    7664:	mov	x2, x0
    7668:	str	wzr, [x0, #40]
    766c:	str	w10, [x0, #80]
    7670:	str	w9, [x0, #60]
    7674:	stur	q0, [x0, #44]
    7678:	str	x8, [x0]
    767c:	ldur	x0, [x29, #-8]
    7680:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7684:	add	x1, x1, #0xb16
    7688:	bl	68d0 <PyModule_AddObject@plt>
    768c:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7690:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
    7694:	movk	x0, #0xb6b3, lsl #32
    7698:	movk	x0, #0xde0, lsl #48
    769c:	bl	65e0 <PyLong_FromSsize_t@plt>
    76a0:	mov	x21, x0
    76a4:	cbz	x0, 7958 <PyInit__decimal@@Base+0xea4>
    76a8:	ldur	x0, [x29, #-8]
    76ac:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    76b0:	add	x1, x1, #0x9a1
    76b4:	mov	x2, x21
    76b8:	bl	68d0 <PyModule_AddObject@plt>
    76bc:	tbnz	w0, #31, 7960 <PyInit__decimal@@Base+0xeac>
    76c0:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
    76c4:	movk	x0, #0xb6b3, lsl #32
    76c8:	movk	x0, #0xde0, lsl #48
    76cc:	bl	65e0 <PyLong_FromSsize_t@plt>
    76d0:	mov	x21, x0
    76d4:	cbz	x0, 7958 <PyInit__decimal@@Base+0xea4>
    76d8:	ldur	x0, [x29, #-8]
    76dc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    76e0:	add	x1, x1, #0x9aa
    76e4:	mov	x2, x21
    76e8:	bl	68d0 <PyModule_AddObject@plt>
    76ec:	tbnz	w0, #31, 7960 <PyInit__decimal@@Base+0xeac>
    76f0:	mov	x0, #0x1                   	// #1
    76f4:	movk	x0, #0x589c, lsl #16
    76f8:	movk	x0, #0x494c, lsl #32
    76fc:	movk	x0, #0xf21f, lsl #48
    7700:	bl	65e0 <PyLong_FromSsize_t@plt>
    7704:	mov	x21, x0
    7708:	cbz	x0, 7958 <PyInit__decimal@@Base+0xea4>
    770c:	ldur	x0, [x29, #-8]
    7710:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    7714:	add	x1, x1, #0x9b3
    7718:	mov	x2, x21
    771c:	bl	68d0 <PyModule_AddObject@plt>
    7720:	tbnz	w0, #31, 7960 <PyInit__decimal@@Base+0xeac>
    7724:	mov	x0, #0x3                   	// #3
    7728:	movk	x0, #0xb138, lsl #16
    772c:	movk	x0, #0x9298, lsl #32
    7730:	movk	x0, #0xe43e, lsl #48
    7734:	bl	65e0 <PyLong_FromSsize_t@plt>
    7738:	mov	x21, x0
    773c:	cbz	x0, 7958 <PyInit__decimal@@Base+0xea4>
    7740:	ldur	x0, [x29, #-8]
    7744:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    7748:	add	x1, x1, #0x9bc
    774c:	mov	x2, x21
    7750:	bl	68d0 <PyModule_AddObject@plt>
    7754:	tbnz	w0, #31, 7960 <PyInit__decimal@@Base+0xeac>
    7758:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    775c:	ldr	x0, [x20, #1248]
    7760:	bl	68c0 <PyUnicode_InternFromString@plt>
    7764:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7768:	str	x0, [x8, #1520]
    776c:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7770:	ldr	x8, [x0]
    7774:	mov	x2, x0
    7778:	add	x8, x8, #0x1
    777c:	str	x8, [x0]
    7780:	ldr	x1, [x20, #1248]
    7784:	ldur	x0, [x29, #-8]
    7788:	bl	68d0 <PyModule_AddObject@plt>
    778c:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7790:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    7794:	ldr	x0, [x20, #1256]
    7798:	bl	68c0 <PyUnicode_InternFromString@plt>
    779c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    77a0:	str	x0, [x8, #1528]
    77a4:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    77a8:	ldr	x8, [x0]
    77ac:	mov	x2, x0
    77b0:	add	x8, x8, #0x1
    77b4:	str	x8, [x0]
    77b8:	ldr	x1, [x20, #1256]
    77bc:	ldur	x0, [x29, #-8]
    77c0:	bl	68d0 <PyModule_AddObject@plt>
    77c4:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    77c8:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    77cc:	ldr	x0, [x20, #1264]
    77d0:	bl	68c0 <PyUnicode_InternFromString@plt>
    77d4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    77d8:	str	x0, [x8, #1536]
    77dc:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    77e0:	ldr	x8, [x0]
    77e4:	mov	x2, x0
    77e8:	add	x8, x8, #0x1
    77ec:	str	x8, [x0]
    77f0:	ldr	x1, [x20, #1264]
    77f4:	ldur	x0, [x29, #-8]
    77f8:	bl	68d0 <PyModule_AddObject@plt>
    77fc:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7800:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    7804:	ldr	x0, [x20, #1272]
    7808:	bl	68c0 <PyUnicode_InternFromString@plt>
    780c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7810:	str	x0, [x8, #1544]
    7814:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7818:	ldr	x8, [x0]
    781c:	mov	x2, x0
    7820:	add	x8, x8, #0x1
    7824:	str	x8, [x0]
    7828:	ldr	x1, [x20, #1272]
    782c:	ldur	x0, [x29, #-8]
    7830:	bl	68d0 <PyModule_AddObject@plt>
    7834:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7838:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    783c:	ldr	x0, [x20, #1280]
    7840:	bl	68c0 <PyUnicode_InternFromString@plt>
    7844:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7848:	str	x0, [x8, #1552]
    784c:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7850:	ldr	x8, [x0]
    7854:	mov	x2, x0
    7858:	add	x8, x8, #0x1
    785c:	str	x8, [x0]
    7860:	ldr	x1, [x20, #1280]
    7864:	ldur	x0, [x29, #-8]
    7868:	bl	68d0 <PyModule_AddObject@plt>
    786c:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7870:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    7874:	ldr	x0, [x20, #1288]
    7878:	bl	68c0 <PyUnicode_InternFromString@plt>
    787c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7880:	str	x0, [x8, #1560]
    7884:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    7888:	ldr	x8, [x0]
    788c:	mov	x2, x0
    7890:	add	x8, x8, #0x1
    7894:	str	x8, [x0]
    7898:	ldr	x1, [x20, #1288]
    789c:	ldur	x0, [x29, #-8]
    78a0:	bl	68d0 <PyModule_AddObject@plt>
    78a4:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    78a8:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    78ac:	ldr	x0, [x20, #1296]
    78b0:	bl	68c0 <PyUnicode_InternFromString@plt>
    78b4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    78b8:	str	x0, [x8, #1568]
    78bc:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    78c0:	ldr	x8, [x0]
    78c4:	mov	x2, x0
    78c8:	add	x8, x8, #0x1
    78cc:	str	x8, [x0]
    78d0:	ldr	x1, [x20, #1296]
    78d4:	ldur	x0, [x29, #-8]
    78d8:	bl	68d0 <PyModule_AddObject@plt>
    78dc:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    78e0:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
    78e4:	ldr	x0, [x20, #1304]
    78e8:	bl	68c0 <PyUnicode_InternFromString@plt>
    78ec:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    78f0:	str	x0, [x8, #1576]
    78f4:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    78f8:	ldr	x8, [x0]
    78fc:	mov	x2, x0
    7900:	add	x8, x8, #0x1
    7904:	str	x8, [x0]
    7908:	ldr	x1, [x20, #1304]
    790c:	ldur	x0, [x29, #-8]
    7910:	bl	68d0 <PyModule_AddObject@plt>
    7914:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7918:	ldur	x0, [x29, #-8]
    791c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7920:	adrp	x2, 43000 <PyInit__decimal@@Base+0x3c54c>
    7924:	add	x1, x1, #0xb26
    7928:	add	x2, x2, #0xb32
    792c:	bl	68b0 <PyModule_AddStringConstant@plt>
    7930:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7934:	bl	22328 <PyInit__decimal@@Base+0x1b874>
    7938:	mov	x2, x0
    793c:	ldur	x0, [x29, #-8]
    7940:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7944:	add	x1, x1, #0xb37
    7948:	bl	68b0 <PyModule_AddStringConstant@plt>
    794c:	tbnz	w0, #31, 7490 <PyInit__decimal@@Base+0x9dc>
    7950:	ldur	x0, [x29, #-8]
    7954:	b	73e4 <PyInit__decimal@@Base+0x930>
    7958:	mov	x20, xzr
    795c:	b	74a0 <PyInit__decimal@@Base+0x9ec>
    7960:	mov	x20, xzr
    7964:	b	74d8 <PyInit__decimal@@Base+0xa24>
    7968:	ret
    796c:	stp	x29, x30, [sp, #-32]!
    7970:	str	x19, [sp, #16]
    7974:	mov	x29, sp
    7978:	mov	x19, x0
    797c:	add	x0, x0, #0x18
    7980:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    7984:	ldr	x8, [x19, #8]
    7988:	mov	x0, x19
    798c:	ldr	x19, [sp, #16]
    7990:	ldr	x1, [x8, #320]
    7994:	ldp	x29, x30, [sp], #32
    7998:	br	x1
    799c:	sub	sp, sp, #0x40
    79a0:	stp	x29, x30, [sp, #16]
    79a4:	stp	x22, x21, [sp, #32]
    79a8:	stp	x20, x19, [sp, #48]
    79ac:	add	x29, sp, #0x10
    79b0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    79b4:	ldr	x8, [x21, #1400]
    79b8:	mov	x19, x0
    79bc:	add	x2, sp, #0x8
    79c0:	mov	x1, xzr
    79c4:	mov	x0, x8
    79c8:	bl	6680 <PyContextVar_Get@plt>
    79cc:	tbnz	w0, #31, 7aa4 <PyInit__decimal@@Base+0xff0>
    79d0:	ldr	x20, [sp, #8]
    79d4:	cbz	x20, 7a24 <PyInit__decimal@@Base+0xf70>
    79d8:	ldr	x8, [x20]
    79dc:	subs	x8, x8, #0x1
    79e0:	str	x8, [x20]
    79e4:	b.eq	7a88 <PyInit__decimal@@Base+0xfd4>  // b.none
    79e8:	ldr	w1, [x20, #80]
    79ec:	add	x0, x19, #0x18
    79f0:	bl	1f8a4 <PyInit__decimal@@Base+0x18df0>
    79f4:	cbz	x0, 7aa0 <PyInit__decimal@@Base+0xfec>
    79f8:	mov	x19, x0
    79fc:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    7a00:	add	x0, x0, #0xb85
    7a04:	mov	x1, x19
    7a08:	bl	63d0 <PyUnicode_FromFormat@plt>
    7a0c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7a10:	ldr	x8, [x8, #1376]
    7a14:	mov	x20, x0
    7a18:	mov	x0, x19
    7a1c:	blr	x8
    7a20:	b	7aa8 <PyInit__decimal@@Base+0xff4>
    7a24:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7a28:	ldr	x22, [x8, #1496]
    7a2c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    7a30:	add	x0, x0, #0x0
    7a34:	mov	x1, xzr
    7a38:	bl	6780 <PyObject_CallObject@plt>
    7a3c:	cbz	x0, 7aa4 <PyInit__decimal@@Base+0xff0>
    7a40:	ldp	q1, q0, [x22, #32]
    7a44:	ldr	q2, [x22, #16]
    7a48:	mov	x20, x0
    7a4c:	mov	x1, x20
    7a50:	stp	q1, q0, [x0, #32]
    7a54:	str	q2, [x0, #16]
    7a58:	ldr	w8, [x22, #80]
    7a5c:	stp	wzr, wzr, [x0, #44]
    7a60:	str	w8, [x0, #80]
    7a64:	ldr	x0, [x21, #1400]
    7a68:	bl	65c0 <PyContextVar_Set@plt>
    7a6c:	cbz	x0, 7ac0 <PyInit__decimal@@Base+0x100c>
    7a70:	ldr	x8, [x0]
    7a74:	subs	x8, x8, #0x1
    7a78:	str	x8, [x0]
    7a7c:	b.ne	79d8 <PyInit__decimal@@Base+0xf24>  // b.any
    7a80:	bl	6510 <_Py_Dealloc@plt>
    7a84:	b	79d8 <PyInit__decimal@@Base+0xf24>
    7a88:	mov	x0, x20
    7a8c:	bl	6510 <_Py_Dealloc@plt>
    7a90:	ldr	w1, [x20, #80]
    7a94:	add	x0, x19, #0x18
    7a98:	bl	1f8a4 <PyInit__decimal@@Base+0x18df0>
    7a9c:	cbnz	x0, 79f8 <PyInit__decimal@@Base+0xf44>
    7aa0:	bl	6520 <PyErr_NoMemory@plt>
    7aa4:	mov	x20, xzr
    7aa8:	mov	x0, x20
    7aac:	ldp	x20, x19, [sp, #48]
    7ab0:	ldp	x22, x21, [sp, #32]
    7ab4:	ldp	x29, x30, [sp, #16]
    7ab8:	add	sp, sp, #0x40
    7abc:	ret
    7ac0:	ldr	x8, [x20]
    7ac4:	subs	x8, x8, #0x1
    7ac8:	str	x8, [x20]
    7acc:	b.ne	7aa4 <PyInit__decimal@@Base+0xff0>  // b.any
    7ad0:	mov	x0, x20
    7ad4:	bl	6510 <_Py_Dealloc@plt>
    7ad8:	b	7aa4 <PyInit__decimal@@Base+0xff0>
    7adc:	sub	sp, sp, #0x120
    7ae0:	stp	x29, x30, [sp, #224]
    7ae4:	stp	x28, x23, [sp, #240]
    7ae8:	stp	x22, x21, [sp, #256]
    7aec:	stp	x20, x19, [sp, #272]
    7af0:	add	x29, sp, #0xe0
    7af4:	ldr	x22, [x0, #16]
    7af8:	cmn	x22, #0x1
    7afc:	b.ne	7dd4 <PyInit__decimal@@Base+0x1320>  // b.any
    7b00:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
    7b04:	mov	w10, #0x90                  	// #144
    7b08:	stur	x9, [x29, #-8]
    7b0c:	mov	w9, #0x1                   	// #1
    7b10:	dup	v0.2d, x9
    7b14:	adrp	x9, 3e000 <PyInit__decimal@@Base+0x3754c>
    7b18:	sturb	w10, [x29, #-56]
    7b1c:	strb	w10, [sp, #112]
    7b20:	strb	w10, [sp, #56]
    7b24:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
    7b28:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    7b2c:	mov	x19, x0
    7b30:	ldr	q1, [x9, #1504]
    7b34:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
    7b38:	ldr	q2, [x10, #1520]
    7b3c:	ldr	x0, [x21, #1400]
    7b40:	movk	x9, #0x1ccc, lsl #48
    7b44:	stur	x9, [x29, #-64]
    7b48:	mov	w9, #0xa                   	// #10
    7b4c:	add	x10, sp, #0x68
    7b50:	add	x8, sp, #0x70
    7b54:	stp	x10, x9, [sp, #96]
    7b58:	sub	x9, x29, #0x8
    7b5c:	sub	x10, x29, #0x40
    7b60:	mov	x2, sp
    7b64:	mov	x1, xzr
    7b68:	stur	q0, [x8, #24]
    7b6c:	str	x10, [sp, #152]
    7b70:	stp	q2, q0, [sp, #64]
    7b74:	stp	q1, q0, [x8, #64]
    7b78:	stur	x9, [x29, #-16]
    7b7c:	stur	q1, [sp, #120]
    7b80:	str	wzr, [sp, #52]
    7b84:	bl	6680 <PyContextVar_Get@plt>
    7b88:	tbnz	w0, #31, 7dcc <PyInit__decimal@@Base+0x1318>
    7b8c:	ldr	x20, [sp]
    7b90:	cbz	x20, 7bdc <PyInit__decimal@@Base+0x1128>
    7b94:	ldr	x8, [x20]
    7b98:	subs	x8, x8, #0x1
    7b9c:	str	x8, [x20]
    7ba0:	b.eq	7c40 <PyInit__decimal@@Base+0x118c>  // b.none
    7ba4:	add	x22, x19, #0x18
    7ba8:	mov	x0, x22
    7bac:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
    7bb0:	cbz	w0, 7c58 <PyInit__decimal@@Base+0x11a4>
    7bb4:	mov	x0, x22
    7bb8:	bl	22800 <PyInit__decimal@@Base+0x1bd4c>
    7bbc:	cbz	w0, 7d88 <PyInit__decimal@@Base+0x12d4>
    7bc0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    7bc4:	ldr	x8, [x8, #3936]
    7bc8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7bcc:	add	x1, x1, #0xc74
    7bd0:	ldr	x0, [x8]
    7bd4:	bl	6590 <PyErr_SetString@plt>
    7bd8:	b	7dcc <PyInit__decimal@@Base+0x1318>
    7bdc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7be0:	ldr	x22, [x8, #1496]
    7be4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    7be8:	add	x0, x0, #0x0
    7bec:	mov	x1, xzr
    7bf0:	bl	6780 <PyObject_CallObject@plt>
    7bf4:	cbz	x0, 7dcc <PyInit__decimal@@Base+0x1318>
    7bf8:	ldp	q1, q0, [x22, #32]
    7bfc:	ldr	q2, [x22, #16]
    7c00:	mov	x20, x0
    7c04:	mov	x1, x20
    7c08:	stp	q1, q0, [x0, #32]
    7c0c:	str	q2, [x0, #16]
    7c10:	ldr	w8, [x22, #80]
    7c14:	stp	wzr, wzr, [x0, #44]
    7c18:	str	w8, [x0, #80]
    7c1c:	ldr	x0, [x21, #1400]
    7c20:	bl	65c0 <PyContextVar_Set@plt>
    7c24:	cbz	x0, 7da4 <PyInit__decimal@@Base+0x12f0>
    7c28:	ldr	x8, [x0]
    7c2c:	subs	x8, x8, #0x1
    7c30:	str	x8, [x0]
    7c34:	b.ne	7b94 <PyInit__decimal@@Base+0x10e0>  // b.any
    7c38:	bl	6510 <_Py_Dealloc@plt>
    7c3c:	b	7b94 <PyInit__decimal@@Base+0x10e0>
    7c40:	mov	x0, x20
    7c44:	bl	6510 <_Py_Dealloc@plt>
    7c48:	add	x22, x19, #0x18
    7c4c:	mov	x0, x22
    7c50:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
    7c54:	cbnz	w0, 7bb4 <PyInit__decimal@@Base+0x1100>
    7c58:	mov	x0, sp
    7c5c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
    7c60:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
    7c64:	cbz	x0, 7d9c <PyInit__decimal@@Base+0x12e8>
    7c68:	mov	x20, x0
    7c6c:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
    7c70:	cbz	x0, 7dc0 <PyInit__decimal@@Base+0x130c>
    7c74:	ldr	x8, [x19, #32]
    7c78:	add	x9, sp, #0x70
    7c7c:	add	x10, sp, #0x38
    7c80:	mov	x2, sp
    7c84:	cmp	x8, #0x0
    7c88:	cneg	x1, x8, mi  // mi = first
    7c8c:	add	x3, sp, #0x34
    7c90:	mov	x21, x0
    7c94:	csel	x23, x10, x9, ge  // ge = tcont
    7c98:	bl	23404 <PyInit__decimal@@Base+0x1c950>
    7c9c:	sub	x3, x29, #0x38
    7ca0:	mov	x4, sp
    7ca4:	add	x5, sp, #0x34
    7ca8:	mov	x0, x20
    7cac:	mov	x1, x23
    7cb0:	mov	x2, x21
    7cb4:	bl	34fc4 <PyInit__decimal@@Base+0x2e510>
    7cb8:	add	x2, sp, #0x34
    7cbc:	mov	x0, x21
    7cc0:	mov	x1, x22
    7cc4:	bl	24490 <PyInit__decimal@@Base+0x1d9dc>
    7cc8:	cbz	w0, 7e08 <PyInit__decimal@@Base+0x1354>
    7ccc:	mov	x0, x21
    7cd0:	str	xzr, [x21, #8]
    7cd4:	bl	22e30 <PyInit__decimal@@Base+0x1c37c>
    7cd8:	mov	x8, #0x14                  	// #20
    7cdc:	movk	x8, #0xa764, lsl #16
    7ce0:	mov	x9, #0xffec                	// #65516
    7ce4:	movk	x8, #0xb6b3, lsl #32
    7ce8:	movk	x9, #0x589b, lsl #16
    7cec:	movk	x8, #0xde0, lsl #48
    7cf0:	movk	x9, #0x494c, lsl #32
    7cf4:	movk	x9, #0xf21f, lsl #48
    7cf8:	dup	v0.2d, x8
    7cfc:	mov	x3, sp
    7d00:	add	x4, sp, #0x34
    7d04:	mov	x0, x21
    7d08:	mov	x1, x21
    7d0c:	mov	x2, x20
    7d10:	str	q0, [sp]
    7d14:	str	x9, [sp, #16]
    7d18:	bl	2ffb0 <PyInit__decimal@@Base+0x294fc>
    7d1c:	sub	x2, x29, #0x38
    7d20:	mov	x3, sp
    7d24:	add	x4, sp, #0x34
    7d28:	mov	x0, x21
    7d2c:	mov	x1, x21
    7d30:	bl	36138 <PyInit__decimal@@Base+0x2f684>
    7d34:	add	x1, sp, #0x34
    7d38:	mov	x0, x21
    7d3c:	bl	241ac <PyInit__decimal@@Base+0x1d6f8>
    7d40:	mov	x23, x0
    7d44:	mov	x0, x22
    7d48:	bl	227d8 <PyInit__decimal@@Base+0x1bd24>
    7d4c:	cmp	w0, #0x0
    7d50:	ldr	w8, [sp, #52]
    7d54:	cneg	x9, x23, eq  // eq = none
    7d58:	cmn	x9, #0x1
    7d5c:	mov	x10, #0xfffffffffffffffe    	// #-2
    7d60:	csel	x22, x10, x9, eq  // eq = none
    7d64:	cbz	w8, 7e10 <PyInit__decimal@@Base+0x135c>
    7d68:	tbnz	w8, #9, 7e08 <PyInit__decimal@@Base+0x1354>
    7d6c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    7d70:	ldr	x8, [x8, #3920]
    7d74:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    7d78:	add	x1, x1, #0xc96
    7d7c:	ldr	x0, [x8]
    7d80:	bl	6590 <PyErr_SetString@plt>
    7d84:	b	7e0c <PyInit__decimal@@Base+0x1358>
    7d88:	mov	x0, x22
    7d8c:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
    7d90:	cbz	w0, 7df0 <PyInit__decimal@@Base+0x133c>
    7d94:	mov	x22, xzr
    7d98:	b	7dd0 <PyInit__decimal@@Base+0x131c>
    7d9c:	bl	6520 <PyErr_NoMemory@plt>
    7da0:	b	7dcc <PyInit__decimal@@Base+0x1318>
    7da4:	ldr	x8, [x20]
    7da8:	subs	x8, x8, #0x1
    7dac:	str	x8, [x20]
    7db0:	b.ne	7dcc <PyInit__decimal@@Base+0x1318>  // b.any
    7db4:	mov	x0, x20
    7db8:	bl	6510 <_Py_Dealloc@plt>
    7dbc:	b	7dcc <PyInit__decimal@@Base+0x1318>
    7dc0:	bl	6520 <PyErr_NoMemory@plt>
    7dc4:	mov	x0, x20
    7dc8:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    7dcc:	mov	x22, #0xffffffffffffffff    	// #-1
    7dd0:	str	x22, [x19, #16]
    7dd4:	mov	x0, x22
    7dd8:	ldp	x20, x19, [sp, #272]
    7ddc:	ldp	x22, x21, [sp, #256]
    7de0:	ldp	x28, x23, [sp, #240]
    7de4:	ldp	x29, x30, [sp, #224]
    7de8:	add	sp, sp, #0x120
    7dec:	ret
    7df0:	mov	x0, x22
    7df4:	bl	22910 <PyInit__decimal@@Base+0x1be5c>
    7df8:	mov	w8, #0xcb2f                	// #52015
    7dfc:	movk	w8, #0x4, lsl #16
    7e00:	smull	x22, w0, w8
    7e04:	b	7dd0 <PyInit__decimal@@Base+0x131c>
    7e08:	bl	6520 <PyErr_NoMemory@plt>
    7e0c:	mov	x22, #0xffffffffffffffff    	// #-1
    7e10:	mov	x0, x20
    7e14:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    7e18:	mov	x0, x21
    7e1c:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    7e20:	b	7dd0 <PyInit__decimal@@Base+0x131c>
    7e24:	sub	sp, sp, #0x40
    7e28:	stp	x29, x30, [sp, #16]
    7e2c:	stp	x22, x21, [sp, #32]
    7e30:	stp	x20, x19, [sp, #48]
    7e34:	add	x29, sp, #0x10
    7e38:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    7e3c:	ldr	x8, [x21, #1400]
    7e40:	mov	x19, x0
    7e44:	add	x2, sp, #0x8
    7e48:	mov	x1, xzr
    7e4c:	mov	x0, x8
    7e50:	bl	6680 <PyContextVar_Get@plt>
    7e54:	tbnz	w0, #31, 7f1c <PyInit__decimal@@Base+0x1468>
    7e58:	ldr	x20, [sp, #8]
    7e5c:	cbz	x20, 7eb4 <PyInit__decimal@@Base+0x1400>
    7e60:	ldr	x8, [x20]
    7e64:	subs	x8, x8, #0x1
    7e68:	str	x8, [x20]
    7e6c:	b.ne	7e78 <PyInit__decimal@@Base+0x13c4>  // b.any
    7e70:	mov	x0, x20
    7e74:	bl	6510 <_Py_Dealloc@plt>
    7e78:	ldr	w2, [x20, #80]
    7e7c:	add	x1, x19, #0x18
    7e80:	add	x0, sp, #0x8
    7e84:	bl	1fe20 <PyInit__decimal@@Base+0x1936c>
    7e88:	tbnz	x0, #63, 7f18 <PyInit__decimal@@Base+0x1464>
    7e8c:	ldr	x21, [sp, #8]
    7e90:	mov	w1, #0x7f                  	// #127
    7e94:	mov	x20, x0
    7e98:	bl	6990 <PyUnicode_New@plt>
    7e9c:	mov	x19, x0
    7ea0:	cbz	x0, 7f40 <PyInit__decimal@@Base+0x148c>
    7ea4:	ldr	w8, [x19, #32]
    7ea8:	tbnz	w8, #5, 7f24 <PyInit__decimal@@Base+0x1470>
    7eac:	ldr	x0, [x19, #72]
    7eb0:	b	7f34 <PyInit__decimal@@Base+0x1480>
    7eb4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7eb8:	ldr	x22, [x8, #1496]
    7ebc:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    7ec0:	add	x0, x0, #0x0
    7ec4:	mov	x1, xzr
    7ec8:	bl	6780 <PyObject_CallObject@plt>
    7ecc:	cbz	x0, 7f1c <PyInit__decimal@@Base+0x1468>
    7ed0:	ldp	q1, q0, [x22, #32]
    7ed4:	ldr	q2, [x22, #16]
    7ed8:	mov	x20, x0
    7edc:	mov	x1, x20
    7ee0:	stp	q1, q0, [x0, #32]
    7ee4:	str	q2, [x0, #16]
    7ee8:	ldr	w8, [x22, #80]
    7eec:	stp	wzr, wzr, [x0, #44]
    7ef0:	str	w8, [x0, #80]
    7ef4:	ldr	x0, [x21, #1400]
    7ef8:	bl	65c0 <PyContextVar_Set@plt>
    7efc:	cbz	x0, 7f68 <PyInit__decimal@@Base+0x14b4>
    7f00:	ldr	x8, [x0]
    7f04:	subs	x8, x8, #0x1
    7f08:	str	x8, [x0]
    7f0c:	b.ne	7e60 <PyInit__decimal@@Base+0x13ac>  // b.any
    7f10:	bl	6510 <_Py_Dealloc@plt>
    7f14:	b	7e60 <PyInit__decimal@@Base+0x13ac>
    7f18:	bl	6520 <PyErr_NoMemory@plt>
    7f1c:	mov	x19, xzr
    7f20:	b	7f50 <PyInit__decimal@@Base+0x149c>
    7f24:	add	x9, x19, #0x30
    7f28:	add	x10, x19, #0x48
    7f2c:	tst	w8, #0x40
    7f30:	csel	x0, x10, x9, eq  // eq = none
    7f34:	mov	x1, x21
    7f38:	mov	x2, x20
    7f3c:	bl	63c0 <memcpy@plt>
    7f40:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    7f44:	ldr	x8, [x8, #1376]
    7f48:	ldr	x0, [sp, #8]
    7f4c:	blr	x8
    7f50:	mov	x0, x19
    7f54:	ldp	x20, x19, [sp, #48]
    7f58:	ldp	x22, x21, [sp, #32]
    7f5c:	ldp	x29, x30, [sp, #16]
    7f60:	add	sp, sp, #0x40
    7f64:	ret
    7f68:	ldr	x8, [x20]
    7f6c:	subs	x8, x8, #0x1
    7f70:	str	x8, [x20]
    7f74:	b.ne	7f1c <PyInit__decimal@@Base+0x1468>  // b.any
    7f78:	mov	x0, x20
    7f7c:	bl	6510 <_Py_Dealloc@plt>
    7f80:	b	7f1c <PyInit__decimal@@Base+0x1468>
    7f84:	sub	sp, sp, #0xa0
    7f88:	stp	d9, d8, [sp, #48]
    7f8c:	stp	x29, x30, [sp, #64]
    7f90:	str	x27, [sp, #80]
    7f94:	stp	x26, x25, [sp, #96]
    7f98:	stp	x24, x23, [sp, #112]
    7f9c:	stp	x22, x21, [sp, #128]
    7fa0:	stp	x20, x19, [sp, #144]
    7fa4:	add	x29, sp, #0x30
    7fa8:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
    7fac:	mov	x21, x0
    7fb0:	ldr	x0, [x23, #1400]
    7fb4:	mov	w19, w2
    7fb8:	mov	x22, x1
    7fbc:	mov	x2, sp
    7fc0:	mov	x1, xzr
    7fc4:	str	wzr, [x29, #40]
    7fc8:	bl	6680 <PyContextVar_Get@plt>
    7fcc:	tbnz	w0, #31, 824c <PyInit__decimal@@Base+0x1798>
    7fd0:	ldr	x20, [sp]
    7fd4:	cbz	x20, 80e4 <PyInit__decimal@@Base+0x1630>
    7fd8:	ldr	x8, [x20]
    7fdc:	subs	x8, x8, #0x1
    7fe0:	str	x8, [x20]
    7fe4:	b.ne	7ff0 <PyInit__decimal@@Base+0x153c>  // b.any
    7fe8:	mov	x0, x20
    7fec:	bl	6510 <_Py_Dealloc@plt>
    7ff0:	ldr	x0, [x22, #8]
    7ff4:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    7ff8:	add	x8, x8, #0xe60
    7ffc:	cmp	x0, x8
    8000:	b.eq	8014 <PyInit__decimal@@Base+0x1560>  // b.none
    8004:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    8008:	add	x1, x1, #0xe60
    800c:	bl	6900 <PyType_IsSubtype@plt>
    8010:	cbz	w0, 8148 <PyInit__decimal@@Base+0x1694>
    8014:	ldr	x8, [x22]
    8018:	mov	x24, x21
    801c:	add	x8, x8, #0x1
    8020:	str	x8, [x22]
    8024:	cbz	x22, 8250 <PyInit__decimal@@Base+0x179c>
    8028:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    802c:	ldr	x8, [x8, #3912]
    8030:	cmp	x22, x8
    8034:	b.eq	8250 <PyInit__decimal@@Base+0x179c>  // b.none
    8038:	cmp	x24, x21
    803c:	b.ne	804c <PyInit__decimal@@Base+0x1598>  // b.any
    8040:	ldr	x8, [x21]
    8044:	add	x8, x8, #0x1
    8048:	str	x8, [x21]
    804c:	add	x21, x24, #0x18
    8050:	mov	x0, x21
    8054:	bl	22800 <PyInit__decimal@@Base+0x1bd4c>
    8058:	add	x26, x22, #0x18
    805c:	mov	w23, w0
    8060:	mov	x0, x26
    8064:	bl	22800 <PyInit__decimal@@Base+0x1bd4c>
    8068:	mov	w25, w0
    806c:	add	x2, x29, #0x28
    8070:	mov	x0, x21
    8074:	mov	x1, x26
    8078:	bl	255bc <PyInit__decimal@@Base+0x1eb08>
    807c:	ldr	x8, [x24]
    8080:	mov	w21, w0
    8084:	subs	x8, x8, #0x1
    8088:	str	x8, [x24]
    808c:	b.eq	81bc <PyInit__decimal@@Base+0x1708>  // b.none
    8090:	ldr	x8, [x22]
    8094:	subs	x8, x8, #0x1
    8098:	str	x8, [x22]
    809c:	b.eq	81d4 <PyInit__decimal@@Base+0x1720>  // b.none
    80a0:	mov	w8, #0x7fffffff            	// #2147483647
    80a4:	cmp	w21, w8
    80a8:	b.ne	81e8 <PyInit__decimal@@Base+0x1734>  // b.any
    80ac:	orr	w8, w19, #0x1
    80b0:	cmp	w8, #0x3
    80b4:	b.ne	80c0 <PyInit__decimal@@Base+0x160c>  // b.any
    80b8:	orr	w8, w25, w23
    80bc:	cbz	w8, 80d0 <PyInit__decimal@@Base+0x161c>
    80c0:	ldr	w1, [x29, #40]
    80c4:	mov	x0, x20
    80c8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    80cc:	cbnz	w0, 824c <PyInit__decimal@@Base+0x1798>
    80d0:	cmp	w19, #0x3
    80d4:	b.ne	8278 <PyInit__decimal@@Base+0x17c4>  // b.any
    80d8:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    80dc:	ldr	x22, [x22, #4024]
    80e0:	b	8280 <PyInit__decimal@@Base+0x17cc>
    80e4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    80e8:	ldr	x24, [x8, #1496]
    80ec:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    80f0:	add	x0, x0, #0x0
    80f4:	mov	x1, xzr
    80f8:	bl	6780 <PyObject_CallObject@plt>
    80fc:	cbz	x0, 824c <PyInit__decimal@@Base+0x1798>
    8100:	ldp	q1, q0, [x24, #32]
    8104:	ldr	q2, [x24, #16]
    8108:	mov	x20, x0
    810c:	mov	x1, x20
    8110:	stp	q1, q0, [x0, #32]
    8114:	str	q2, [x0, #16]
    8118:	ldr	w8, [x24, #80]
    811c:	stp	wzr, wzr, [x0, #44]
    8120:	str	w8, [x0, #80]
    8124:	ldr	x0, [x23, #1400]
    8128:	bl	65c0 <PyContextVar_Set@plt>
    812c:	cbz	x0, 8234 <PyInit__decimal@@Base+0x1780>
    8130:	ldr	x8, [x0]
    8134:	subs	x8, x8, #0x1
    8138:	str	x8, [x0]
    813c:	b.ne	7fd8 <PyInit__decimal@@Base+0x1524>  // b.any
    8140:	bl	6510 <_Py_Dealloc@plt>
    8144:	b	7fd8 <PyInit__decimal@@Base+0x1524>
    8148:	ldr	x0, [x22, #8]
    814c:	ldrb	w8, [x0, #171]
    8150:	tbnz	w8, #0, 8214 <PyInit__decimal@@Base+0x1760>
    8154:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    8158:	ldr	x8, [x8, #3864]
    815c:	cmp	x0, x8
    8160:	b.eq	8174 <PyInit__decimal@@Base+0x16c0>  // b.none
    8164:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
    8168:	ldr	x1, [x1, #3864]
    816c:	bl	6900 <PyType_IsSubtype@plt>
    8170:	cbz	w0, 82d4 <PyInit__decimal@@Base+0x1820>
    8174:	orr	w8, w19, #0x1
    8178:	cmp	w8, #0x3
    817c:	b.eq	8190 <PyInit__decimal@@Base+0x16dc>  // b.none
    8180:	mov	w1, #0x400                 	// #1024
    8184:	mov	x0, x20
    8188:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    818c:	cbnz	w0, 824c <PyInit__decimal@@Base+0x1798>
    8190:	ldr	w8, [x20, #44]
    8194:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8198:	add	x0, x0, #0xe60
    819c:	mov	x1, x22
    81a0:	orr	w8, w8, #0x400
    81a4:	mov	x2, x20
    81a8:	str	w8, [x20, #44]
    81ac:	bl	af58 <PyInit__decimal@@Base+0x44a4>
    81b0:	mov	x22, x0
    81b4:	mov	x24, x21
    81b8:	b	8024 <PyInit__decimal@@Base+0x1570>
    81bc:	mov	x0, x24
    81c0:	bl	6510 <_Py_Dealloc@plt>
    81c4:	ldr	x8, [x22]
    81c8:	subs	x8, x8, #0x1
    81cc:	str	x8, [x22]
    81d0:	b.ne	80a0 <PyInit__decimal@@Base+0x15ec>  // b.any
    81d4:	mov	x0, x22
    81d8:	bl	6510 <_Py_Dealloc@plt>
    81dc:	mov	w8, #0x7fffffff            	// #2147483647
    81e0:	cmp	w21, w8
    81e4:	b.eq	80ac <PyInit__decimal@@Base+0x15f8>  // b.none
    81e8:	cmp	w19, #0x5
    81ec:	b.hi	82c4 <PyInit__decimal@@Base+0x1810>  // b.pmore
    81f0:	adrp	x9, 3e000 <PyInit__decimal@@Base+0x3754c>
    81f4:	mov	w8, w19
    81f8:	add	x9, x9, #0x620
    81fc:	adr	x10, 820c <PyInit__decimal@@Base+0x1758>
    8200:	ldrb	w11, [x9, x8]
    8204:	add	x10, x10, x11, lsl #2
    8208:	br	x10
    820c:	cmn	w21, #0x1
    8210:	b	82b4 <PyInit__decimal@@Base+0x1800>
    8214:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8218:	add	x0, x0, #0xe60
    821c:	mov	x1, x22
    8220:	mov	x2, x20
    8224:	bl	abdc <PyInit__decimal@@Base+0x4128>
    8228:	mov	x22, x0
    822c:	mov	x24, x21
    8230:	b	8024 <PyInit__decimal@@Base+0x1570>
    8234:	ldr	x8, [x20]
    8238:	subs	x8, x8, #0x1
    823c:	str	x8, [x20]
    8240:	b.ne	824c <PyInit__decimal@@Base+0x1798>  // b.any
    8244:	mov	x0, x20
    8248:	bl	6510 <_Py_Dealloc@plt>
    824c:	mov	x22, xzr
    8250:	mov	x0, x22
    8254:	ldp	x20, x19, [sp, #144]
    8258:	ldp	x22, x21, [sp, #128]
    825c:	ldp	x24, x23, [sp, #112]
    8260:	ldp	x26, x25, [sp, #96]
    8264:	ldr	x27, [sp, #80]
    8268:	ldp	x29, x30, [sp, #64]
    826c:	ldp	d9, d8, [sp, #48]
    8270:	add	sp, sp, #0xa0
    8274:	ret
    8278:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    827c:	ldr	x22, [x22, #3976]
    8280:	ldr	x8, [x22]
    8284:	add	x8, x8, #0x1
    8288:	str	x8, [x22]
    828c:	b	8250 <PyInit__decimal@@Base+0x179c>
    8290:	cmp	w21, #0x1
    8294:	cset	w21, lt  // lt = tstop
    8298:	b	82c4 <PyInit__decimal@@Base+0x1810>
    829c:	cmp	w21, #0x0
    82a0:	b	82b4 <PyInit__decimal@@Base+0x1800>
    82a4:	cmp	w21, #0x0
    82a8:	cset	w21, ne  // ne = any
    82ac:	b	82c4 <PyInit__decimal@@Base+0x1810>
    82b0:	cmp	w21, #0x1
    82b4:	cset	w21, eq  // eq = none
    82b8:	b	82c4 <PyInit__decimal@@Base+0x1810>
    82bc:	mvn	w8, w21
    82c0:	lsr	w21, w8, #31
    82c4:	sxtw	x0, w21
    82c8:	bl	6690 <PyBool_FromLong@plt>
    82cc:	mov	x22, x0
    82d0:	b	8250 <PyInit__decimal@@Base+0x179c>
    82d4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    82d8:	ldr	x0, [x22, #8]
    82dc:	ldr	x8, [x8, #3952]
    82e0:	cmp	x0, x8
    82e4:	b.eq	82f8 <PyInit__decimal@@Base+0x1844>  // b.none
    82e8:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
    82ec:	ldr	x1, [x1, #3952]
    82f0:	bl	6900 <PyType_IsSubtype@plt>
    82f4:	cbz	w0, 8384 <PyInit__decimal@@Base+0x18d0>
    82f8:	orr	w8, w19, #0x1
    82fc:	cmp	w8, #0x3
    8300:	b.ne	8384 <PyInit__decimal@@Base+0x18d0>  // b.any
    8304:	mov	x0, x22
    8308:	bl	6930 <PyComplex_AsCComplex@plt>
    830c:	mov	v8.16b, v0.16b
    8310:	fmov	d0, #-1.000000000000000000e+00
    8314:	fcmp	d8, d0
    8318:	mov	v9.16b, v1.16b
    831c:	b.ne	8328 <PyInit__decimal@@Base+0x1874>  // b.any
    8320:	bl	6720 <PyErr_Occurred@plt>
    8324:	cbnz	x0, 824c <PyInit__decimal@@Base+0x1798>
    8328:	fcmp	d9, #0.0
    832c:	b.ne	8404 <PyInit__decimal@@Base+0x1950>  // b.any
    8330:	mov	v0.16b, v8.16b
    8334:	bl	65f0 <PyFloat_FromDouble@plt>
    8338:	cbz	x0, 824c <PyInit__decimal@@Base+0x1798>
    833c:	ldr	w8, [x20, #44]
    8340:	mov	x23, x0
    8344:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8348:	add	x0, x0, #0xe60
    834c:	orr	w8, w8, #0x400
    8350:	mov	x1, x23
    8354:	mov	x2, x20
    8358:	str	w8, [x20, #44]
    835c:	bl	af58 <PyInit__decimal@@Base+0x44a4>
    8360:	ldr	x8, [x23]
    8364:	mov	x22, x0
    8368:	subs	x8, x8, #0x1
    836c:	str	x8, [x23]
    8370:	b.ne	837c <PyInit__decimal@@Base+0x18c8>  // b.any
    8374:	mov	x0, x23
    8378:	bl	6510 <_Py_Dealloc@plt>
    837c:	mov	x24, x21
    8380:	b	8024 <PyInit__decimal@@Base+0x1570>
    8384:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    8388:	ldr	x1, [x8, #1456]
    838c:	mov	x0, x22
    8390:	bl	65a0 <PyObject_IsInstance@plt>
    8394:	tbnz	w0, #31, 824c <PyInit__decimal@@Base+0x1798>
    8398:	cbz	w0, 8404 <PyInit__decimal@@Base+0x1950>
    839c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    83a0:	add	x1, x1, #0xcdc
    83a4:	mov	x0, x22
    83a8:	bl	64c0 <PyObject_GetAttrString@plt>
    83ac:	cbz	x0, 824c <PyInit__decimal@@Base+0x1798>
    83b0:	mov	x24, x0
    83b4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    83b8:	add	x0, x0, #0xe60
    83bc:	mov	x1, x24
    83c0:	mov	x2, x20
    83c4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    83c8:	ldr	x8, [x24]
    83cc:	mov	x23, x0
    83d0:	subs	x8, x8, #0x1
    83d4:	str	x8, [x24]
    83d8:	b.ne	83e4 <PyInit__decimal@@Base+0x1930>  // b.any
    83dc:	mov	x0, x24
    83e0:	bl	6510 <_Py_Dealloc@plt>
    83e4:	cbz	x23, 824c <PyInit__decimal@@Base+0x1798>
    83e8:	add	x24, x21, #0x18
    83ec:	mov	x0, x24
    83f0:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
    83f4:	cbz	w0, 8410 <PyInit__decimal@@Base+0x195c>
    83f8:	mov	x24, x21
    83fc:	mov	x22, x23
    8400:	b	8024 <PyInit__decimal@@Base+0x1570>
    8404:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    8408:	ldr	x22, [x22, #3912]
    840c:	b	8280 <PyInit__decimal@@Base+0x17cc>
    8410:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    8414:	add	x1, x1, #0xce6
    8418:	mov	x0, x22
    841c:	str	wzr, [x29, #44]
    8420:	bl	64c0 <PyObject_GetAttrString@plt>
    8424:	cbz	x0, 8574 <PyInit__decimal@@Base+0x1ac0>
    8428:	mov	x25, x0
    842c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8430:	add	x0, x0, #0xe60
    8434:	mov	x1, x25
    8438:	mov	x2, x20
    843c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    8440:	ldr	x8, [x25]
    8444:	mov	x22, x0
    8448:	subs	x8, x8, #0x1
    844c:	str	x8, [x25]
    8450:	b.ne	845c <PyInit__decimal@@Base+0x19a8>  // b.any
    8454:	mov	x0, x25
    8458:	bl	6510 <_Py_Dealloc@plt>
    845c:	cbz	x22, 8574 <PyInit__decimal@@Base+0x1ac0>
    8460:	mov	x0, x24
    8464:	bl	252f8 <PyInit__decimal@@Base+0x1e844>
    8468:	cbz	x0, 8534 <PyInit__decimal@@Base+0x1a80>
    846c:	mov	x25, x0
    8470:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8474:	add	x0, x0, #0xe60
    8478:	bl	6890 <_PyObject_New@plt>
    847c:	cbz	x0, 8554 <PyInit__decimal@@Base+0x1aa0>
    8480:	mov	w8, #0x30                  	// #48
    8484:	mov	x26, x0
    8488:	strb	w8, [x26, #24]!
    848c:	mov	x24, x0
    8490:	mov	x9, #0xffffffffffffffff    	// #-1
    8494:	mov	w10, #0x4                   	// #4
    8498:	add	x8, x26, #0x30
    849c:	mov	x0, sp
    84a0:	stur	x9, [x26, #-8]
    84a4:	stp	xzr, xzr, [x26, #8]
    84a8:	stp	xzr, x10, [x26, #24]
    84ac:	str	x8, [x26, #40]
    84b0:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
    84b4:	ldr	x27, [x25, #8]
    84b8:	add	x2, x22, #0x18
    84bc:	mov	x3, sp
    84c0:	add	x4, x29, #0x2c
    84c4:	mov	x0, x26
    84c8:	mov	x1, x25
    84cc:	str	xzr, [x25, #8]
    84d0:	bl	2ffb0 <PyInit__decimal@@Base+0x294fc>
    84d4:	str	x27, [x26, #8]
    84d8:	ldr	x8, [x22]
    84dc:	subs	x8, x8, #0x1
    84e0:	str	x8, [x22]
    84e4:	b.ne	84f0 <PyInit__decimal@@Base+0x1a3c>  // b.any
    84e8:	mov	x0, x22
    84ec:	bl	6510 <_Py_Dealloc@plt>
    84f0:	mov	x0, x25
    84f4:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    84f8:	ldr	w8, [x29, #44]
    84fc:	cbz	w8, 83fc <PyInit__decimal@@Base+0x1948>
    8500:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    8504:	ldr	x8, [x8, #3928]
    8508:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    850c:	add	x1, x1, #0xcf2
    8510:	ldr	x0, [x8]
    8514:	bl	6590 <PyErr_SetString@plt>
    8518:	ldr	x8, [x24]
    851c:	subs	x8, x8, #0x1
    8520:	str	x8, [x24]
    8524:	b.ne	8574 <PyInit__decimal@@Base+0x1ac0>  // b.any
    8528:	mov	x0, x24
    852c:	bl	6510 <_Py_Dealloc@plt>
    8530:	b	8574 <PyInit__decimal@@Base+0x1ac0>
    8534:	ldr	x8, [x22]
    8538:	subs	x8, x8, #0x1
    853c:	str	x8, [x22]
    8540:	b.ne	854c <PyInit__decimal@@Base+0x1a98>  // b.any
    8544:	mov	x0, x22
    8548:	bl	6510 <_Py_Dealloc@plt>
    854c:	bl	6520 <PyErr_NoMemory@plt>
    8550:	b	8574 <PyInit__decimal@@Base+0x1ac0>
    8554:	ldr	x8, [x22]
    8558:	subs	x8, x8, #0x1
    855c:	str	x8, [x22]
    8560:	b.ne	856c <PyInit__decimal@@Base+0x1ab8>  // b.any
    8564:	mov	x0, x22
    8568:	bl	6510 <_Py_Dealloc@plt>
    856c:	mov	x0, x25
    8570:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    8574:	ldr	x8, [x23]
    8578:	subs	x8, x8, #0x1
    857c:	str	x8, [x23]
    8580:	b.ne	824c <PyInit__decimal@@Base+0x1798>  // b.any
    8584:	mov	x0, x23
    8588:	b	8248 <PyInit__decimal@@Base+0x1794>
    858c:	sub	sp, sp, #0x80
    8590:	stp	x29, x30, [sp, #80]
    8594:	stp	x22, x21, [sp, #96]
    8598:	stp	x20, x19, [sp, #112]
    859c:	add	x29, sp, #0x50
    85a0:	str	xzr, [sp, #16]
    85a4:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
    85a8:	ldr	x19, [x19, #4008]
    85ac:	mov	x8, x2
    85b0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    85b4:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    85b8:	mov	x20, x0
    85bc:	add	x2, x2, #0x7c
    85c0:	add	x3, x3, #0xb38
    85c4:	add	x4, sp, #0x10
    85c8:	add	x5, sp, #0x8
    85cc:	mov	x0, x1
    85d0:	mov	x1, x8
    85d4:	str	x19, [sp, #8]
    85d8:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    85dc:	cbz	w0, 89c8 <PyInit__decimal@@Base+0x1f14>
    85e0:	ldr	x8, [sp, #8]
    85e4:	cmp	x8, x19
    85e8:	b.eq	862c <PyInit__decimal@@Base+0x1b78>  // b.none
    85ec:	ldr	x0, [x8, #8]
    85f0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    85f4:	add	x8, x8, #0x0
    85f8:	cmp	x0, x8
    85fc:	b.eq	8668 <PyInit__decimal@@Base+0x1bb4>  // b.none
    8600:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    8604:	add	x1, x1, #0x0
    8608:	bl	6900 <PyType_IsSubtype@plt>
    860c:	cbnz	w0, 8668 <PyInit__decimal@@Base+0x1bb4>
    8610:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    8614:	ldr	x8, [x8, #3936]
    8618:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    861c:	add	x1, x1, #0xf61
    8620:	ldr	x0, [x8]
    8624:	bl	6590 <PyErr_SetString@plt>
    8628:	b	89c8 <PyInit__decimal@@Base+0x1f14>
    862c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    8630:	ldr	x0, [x21, #1400]
    8634:	add	x2, sp, #0x18
    8638:	mov	x1, xzr
    863c:	bl	6680 <PyContextVar_Get@plt>
    8640:	tbnz	w0, #31, 8908 <PyInit__decimal@@Base+0x1e54>
    8644:	ldr	x19, [sp, #24]
    8648:	cbz	x19, 8824 <PyInit__decimal@@Base+0x1d70>
    864c:	str	x19, [sp, #8]
    8650:	ldr	x8, [x19]
    8654:	subs	x8, x8, #0x1
    8658:	str	x8, [x19]
    865c:	b.ne	8668 <PyInit__decimal@@Base+0x1bb4>  // b.any
    8660:	mov	x0, x19
    8664:	bl	6510 <_Py_Dealloc@plt>
    8668:	ldp	x21, x19, [sp, #8]
    866c:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    8670:	add	x22, x22, #0xe60
    8674:	cbz	x19, 86bc <PyInit__decimal@@Base+0x1c08>
    8678:	ldr	x0, [x19, #8]
    867c:	cmp	x0, x22
    8680:	b.eq	8694 <PyInit__decimal@@Base+0x1be0>  // b.none
    8684:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    8688:	add	x1, x1, #0xe60
    868c:	bl	6900 <PyType_IsSubtype@plt>
    8690:	cbz	w0, 8764 <PyInit__decimal@@Base+0x1cb0>
    8694:	cmp	x20, x22
    8698:	str	wzr, [sp, #24]
    869c:	b.eq	86e4 <PyInit__decimal@@Base+0x1c30>  // b.none
    86a0:	ldr	x8, [x20, #304]
    86a4:	mov	x0, x20
    86a8:	mov	x1, xzr
    86ac:	blr	x8
    86b0:	mov	x20, x0
    86b4:	cbnz	x0, 8704 <PyInit__decimal@@Base+0x1c50>
    86b8:	b	89c8 <PyInit__decimal@@Base+0x1f14>
    86bc:	cmp	x20, x22
    86c0:	stur	wzr, [x29, #-4]
    86c4:	b.eq	87a0 <PyInit__decimal@@Base+0x1cec>  // b.none
    86c8:	ldr	x8, [x20, #304]
    86cc:	mov	x0, x20
    86d0:	mov	x1, xzr
    86d4:	blr	x8
    86d8:	mov	x19, x0
    86dc:	cbnz	x0, 87b4 <PyInit__decimal@@Base+0x1d00>
    86e0:	b	89cc <PyInit__decimal@@Base+0x1f18>
    86e4:	ldr	x8, [x19, #8]
    86e8:	cmp	x8, x22
    86ec:	b.eq	88c8 <PyInit__decimal@@Base+0x1e14>  // b.none
    86f0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    86f4:	add	x0, x0, #0xe60
    86f8:	bl	6890 <_PyObject_New@plt>
    86fc:	mov	x20, x0
    8700:	cbz	x0, 89c8 <PyInit__decimal@@Base+0x1f14>
    8704:	mov	w8, #0x30                  	// #48
    8708:	mov	x0, x20
    870c:	strb	w8, [x0, #24]!
    8710:	mov	x9, #0xffffffffffffffff    	// #-1
    8714:	mov	w10, #0x4                   	// #4
    8718:	add	x8, x0, #0x30
    871c:	add	x1, x19, #0x18
    8720:	add	x2, sp, #0x18
    8724:	stur	x9, [x0, #-8]
    8728:	stp	xzr, xzr, [x0, #8]
    872c:	stp	xzr, x10, [x0, #24]
    8730:	str	x8, [x0, #40]
    8734:	bl	24490 <PyInit__decimal@@Base+0x1d9dc>
    8738:	ldr	w1, [sp, #24]
    873c:	mov	x0, x21
    8740:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8744:	cbz	w0, 8888 <PyInit__decimal@@Base+0x1dd4>
    8748:	ldr	x8, [x20]
    874c:	subs	x8, x8, #0x1
    8750:	str	x8, [x20]
    8754:	b.ne	89c8 <PyInit__decimal@@Base+0x1f14>  // b.any
    8758:	mov	x0, x20
    875c:	bl	6510 <_Py_Dealloc@plt>
    8760:	b	89c8 <PyInit__decimal@@Base+0x1f14>
    8764:	ldr	x0, [x19, #8]
    8768:	ldr	x8, [x0, #168]
    876c:	tbnz	w8, #28, 8890 <PyInit__decimal@@Base+0x1ddc>
    8770:	tbnz	w8, #24, 88d8 <PyInit__decimal@@Base+0x1e24>
    8774:	tst	x8, #0x6000000
    8778:	b.eq	8914 <PyInit__decimal@@Base+0x1e60>  // b.none
    877c:	tbnz	w8, #26, 895c <PyInit__decimal@@Base+0x1ea8>
    8780:	tbnz	w8, #25, 896c <PyInit__decimal@@Base+0x1eb8>
    8784:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    8788:	ldr	x8, [x8, #3936]
    878c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    8790:	add	x1, x1, #0x23f
    8794:	ldr	x0, [x8]
    8798:	bl	6590 <PyErr_SetString@plt>
    879c:	b	89c8 <PyInit__decimal@@Base+0x1f14>
    87a0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    87a4:	add	x0, x0, #0xe60
    87a8:	bl	6890 <_PyObject_New@plt>
    87ac:	mov	x19, x0
    87b0:	cbz	x0, 89cc <PyInit__decimal@@Base+0x1f18>
    87b4:	mov	w8, #0x30                  	// #48
    87b8:	mov	x20, x19
    87bc:	strb	w8, [x20, #24]!
    87c0:	mov	x9, #0xffffffffffffffff    	// #-1
    87c4:	mov	w10, #0x4                   	// #4
    87c8:	add	x8, x20, #0x30
    87cc:	add	x0, sp, #0x18
    87d0:	stur	x9, [x20, #-8]
    87d4:	stp	xzr, xzr, [x20, #8]
    87d8:	stp	xzr, x10, [x20, #24]
    87dc:	str	x8, [x20, #40]
    87e0:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
    87e4:	add	x2, sp, #0x18
    87e8:	sub	x3, x29, #0x4
    87ec:	mov	x0, x20
    87f0:	mov	x1, xzr
    87f4:	bl	23aa0 <PyInit__decimal@@Base+0x1cfec>
    87f8:	ldur	w1, [x29, #-4]
    87fc:	mov	x0, x21
    8800:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8804:	cbz	w0, 89cc <PyInit__decimal@@Base+0x1f18>
    8808:	ldr	x8, [x19]
    880c:	subs	x8, x8, #0x1
    8810:	str	x8, [x19]
    8814:	b.ne	89c8 <PyInit__decimal@@Base+0x1f14>  // b.any
    8818:	mov	x0, x19
    881c:	bl	6510 <_Py_Dealloc@plt>
    8820:	b	89c8 <PyInit__decimal@@Base+0x1f14>
    8824:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    8828:	ldr	x22, [x8, #1496]
    882c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    8830:	add	x0, x0, #0x0
    8834:	mov	x1, xzr
    8838:	bl	6780 <PyObject_CallObject@plt>
    883c:	cbz	x0, 8908 <PyInit__decimal@@Base+0x1e54>
    8840:	ldp	q1, q0, [x22, #32]
    8844:	ldr	q2, [x22, #16]
    8848:	mov	x19, x0
    884c:	mov	x1, x19
    8850:	stp	q1, q0, [x0, #32]
    8854:	str	q2, [x0, #16]
    8858:	ldr	w8, [x22, #80]
    885c:	stp	wzr, wzr, [x0, #44]
    8860:	str	w8, [x0, #80]
    8864:	ldr	x0, [x21, #1400]
    8868:	bl	65c0 <PyContextVar_Set@plt>
    886c:	cbz	x0, 88f0 <PyInit__decimal@@Base+0x1e3c>
    8870:	ldr	x8, [x0]
    8874:	subs	x8, x8, #0x1
    8878:	str	x8, [x0]
    887c:	b.ne	864c <PyInit__decimal@@Base+0x1b98>  // b.any
    8880:	bl	6510 <_Py_Dealloc@plt>
    8884:	b	864c <PyInit__decimal@@Base+0x1b98>
    8888:	mov	x19, x20
    888c:	b	89cc <PyInit__decimal@@Base+0x1f18>
    8890:	mov	w1, #0x1                   	// #1
    8894:	mov	w2, #0x1                   	// #1
    8898:	mov	x0, x19
    889c:	bl	13100 <PyInit__decimal@@Base+0xc64c>
    88a0:	cbz	x0, 89c8 <PyInit__decimal@@Base+0x1f14>
    88a4:	mov	x22, x0
    88a8:	mov	x0, x20
    88ac:	mov	x1, x22
    88b0:	mov	x2, x21
    88b4:	bl	134c4 <PyInit__decimal@@Base+0xca10>
    88b8:	mov	x19, x0
    88bc:	mov	x0, x22
    88c0:	bl	64a0 <PyMem_Free@plt>
    88c4:	b	89cc <PyInit__decimal@@Base+0x1f18>
    88c8:	ldr	x8, [x19]
    88cc:	add	x8, x8, #0x1
    88d0:	str	x8, [x19]
    88d4:	b	89cc <PyInit__decimal@@Base+0x1f18>
    88d8:	mov	x0, x20
    88dc:	mov	x1, x19
    88e0:	mov	x2, x21
    88e4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    88e8:	mov	x19, x0
    88ec:	b	89cc <PyInit__decimal@@Base+0x1f18>
    88f0:	ldr	x8, [x19]
    88f4:	subs	x8, x8, #0x1
    88f8:	str	x8, [x19]
    88fc:	b.ne	8908 <PyInit__decimal@@Base+0x1e54>  // b.any
    8900:	mov	x0, x19
    8904:	bl	6510 <_Py_Dealloc@plt>
    8908:	mov	x19, xzr
    890c:	str	xzr, [sp, #8]
    8910:	b	89cc <PyInit__decimal@@Base+0x1f18>
    8914:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    8918:	ldr	x8, [x8, #3864]
    891c:	cmp	x0, x8
    8920:	b.eq	8934 <PyInit__decimal@@Base+0x1e80>  // b.none
    8924:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
    8928:	ldr	x1, [x1, #3864]
    892c:	bl	6900 <PyType_IsSubtype@plt>
    8930:	cbz	w0, 89a8 <PyInit__decimal@@Base+0x1ef4>
    8934:	mov	w1, #0x400                 	// #1024
    8938:	mov	x0, x21
    893c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8940:	cbnz	w0, 89c8 <PyInit__decimal@@Base+0x1f14>
    8944:	mov	x0, x20
    8948:	mov	x1, x19
    894c:	mov	x2, x21
    8950:	bl	af58 <PyInit__decimal@@Base+0x44a4>
    8954:	mov	x19, x0
    8958:	b	89cc <PyInit__decimal@@Base+0x1f18>
    895c:	ldr	x8, [x19]
    8960:	add	x8, x8, #0x1
    8964:	str	x8, [x19]
    8968:	b	897c <PyInit__decimal@@Base+0x1ec8>
    896c:	mov	x0, x19
    8970:	bl	6470 <PyList_AsTuple@plt>
    8974:	mov	x19, x0
    8978:	cbz	x0, 89cc <PyInit__decimal@@Base+0x1f18>
    897c:	mov	x0, x19
    8980:	bl	135d4 <PyInit__decimal@@Base+0xcb20>
    8984:	ldr	x8, [x19]
    8988:	mov	x22, x0
    898c:	subs	x8, x8, #0x1
    8990:	str	x8, [x19]
    8994:	b.ne	89a0 <PyInit__decimal@@Base+0x1eec>  // b.any
    8998:	mov	x0, x19
    899c:	bl	6510 <_Py_Dealloc@plt>
    89a0:	cbnz	x22, 88a8 <PyInit__decimal@@Base+0x1df4>
    89a4:	b	89c8 <PyInit__decimal@@Base+0x1f14>
    89a8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    89ac:	ldr	x8, [x19, #8]
    89b0:	ldr	x9, [x9, #3936]
    89b4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    89b8:	add	x1, x1, #0xb93
    89bc:	ldr	x2, [x8, #24]
    89c0:	ldr	x0, [x9]
    89c4:	bl	6950 <PyErr_Format@plt>
    89c8:	mov	x19, xzr
    89cc:	mov	x0, x19
    89d0:	ldp	x20, x19, [sp, #112]
    89d4:	ldp	x22, x21, [sp, #96]
    89d8:	ldp	x29, x30, [sp, #80]
    89dc:	add	sp, sp, #0x80
    89e0:	ret
    89e4:	stp	x29, x30, [sp, #-32]!
    89e8:	str	x19, [sp, #16]
    89ec:	mov	x29, sp
    89f0:	mov	x19, x0
    89f4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    89f8:	add	x0, x0, #0x0
    89fc:	mov	x1, xzr
    8a00:	bl	6780 <PyObject_CallObject@plt>
    8a04:	cbz	x0, 8a24 <PyInit__decimal@@Base+0x1f70>
    8a08:	ldp	q1, q0, [x19, #32]
    8a0c:	ldr	q2, [x19, #16]
    8a10:	stp	q1, q0, [x0, #32]
    8a14:	str	q2, [x0, #16]
    8a18:	str	wzr, [x0, #48]
    8a1c:	ldr	w8, [x19, #80]
    8a20:	str	w8, [x0, #80]
    8a24:	ldr	x19, [sp, #16]
    8a28:	ldp	x29, x30, [sp], #32
    8a2c:	ret
    8a30:	sub	sp, sp, #0x50
    8a34:	stp	x29, x30, [sp, #16]
    8a38:	str	x23, [sp, #32]
    8a3c:	stp	x22, x21, [sp, #48]
    8a40:	stp	x20, x19, [sp, #64]
    8a44:	add	x29, sp, #0x10
    8a48:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    8a4c:	mov	x20, x0
    8a50:	ldr	x0, [x22, #1400]
    8a54:	mov	x19, x1
    8a58:	add	x2, x29, #0x18
    8a5c:	mov	x1, xzr
    8a60:	stur	wzr, [x29, #-4]
    8a64:	bl	6680 <PyContextVar_Get@plt>
    8a68:	tbnz	w0, #31, 8cd0 <PyInit__decimal@@Base+0x221c>
    8a6c:	ldr	x21, [x29, #24]
    8a70:	cbz	x21, 8b64 <PyInit__decimal@@Base+0x20b0>
    8a74:	ldr	x8, [x21]
    8a78:	subs	x8, x8, #0x1
    8a7c:	str	x8, [x21]
    8a80:	b.ne	8a8c <PyInit__decimal@@Base+0x1fd8>  // b.any
    8a84:	mov	x0, x21
    8a88:	bl	6510 <_Py_Dealloc@plt>
    8a8c:	ldr	x0, [x20, #8]
    8a90:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    8a94:	add	x22, x22, #0xe60
    8a98:	cmp	x0, x22
    8a9c:	b.eq	8ab0 <PyInit__decimal@@Base+0x1ffc>  // b.none
    8aa0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    8aa4:	add	x1, x1, #0xe60
    8aa8:	bl	6900 <PyType_IsSubtype@plt>
    8aac:	cbz	w0, 8bf8 <PyInit__decimal@@Base+0x2144>
    8ab0:	ldr	x8, [x20]
    8ab4:	add	x8, x8, #0x1
    8ab8:	str	x8, [x20]
    8abc:	ldr	x0, [x19, #8]
    8ac0:	cmp	x0, x22
    8ac4:	b.eq	8ad8 <PyInit__decimal@@Base+0x2024>  // b.none
    8ac8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    8acc:	add	x1, x1, #0xe60
    8ad0:	bl	6900 <PyType_IsSubtype@plt>
    8ad4:	cbz	w0, 8c1c <PyInit__decimal@@Base+0x2168>
    8ad8:	ldr	x8, [x19]
    8adc:	add	x8, x8, #0x1
    8ae0:	str	x8, [x19]
    8ae4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8ae8:	add	x0, x0, #0xe60
    8aec:	bl	6890 <_PyObject_New@plt>
    8af0:	cbz	x0, 8bc8 <PyInit__decimal@@Base+0x2114>
    8af4:	mov	w8, #0x30                  	// #48
    8af8:	mov	x22, x0
    8afc:	strb	w8, [x0, #24]!
    8b00:	mov	x9, #0xffffffffffffffff    	// #-1
    8b04:	mov	w10, #0x4                   	// #4
    8b08:	add	x1, x20, #0x18
    8b0c:	add	x2, x19, #0x18
    8b10:	add	x8, x0, #0x30
    8b14:	add	x3, x21, #0x10
    8b18:	sub	x4, x29, #0x4
    8b1c:	stur	x9, [x0, #-8]
    8b20:	stp	xzr, xzr, [x0, #8]
    8b24:	stp	xzr, x10, [x0, #24]
    8b28:	str	x8, [x0, #40]
    8b2c:	bl	2a244 <PyInit__decimal@@Base+0x23790>
    8b30:	ldr	x8, [x20]
    8b34:	subs	x8, x8, #0x1
    8b38:	str	x8, [x20]
    8b3c:	b.eq	8c50 <PyInit__decimal@@Base+0x219c>  // b.none
    8b40:	ldr	x8, [x19]
    8b44:	subs	x8, x8, #0x1
    8b48:	str	x8, [x19]
    8b4c:	b.eq	8c68 <PyInit__decimal@@Base+0x21b4>  // b.none
    8b50:	ldur	w1, [x29, #-4]
    8b54:	mov	x0, x21
    8b58:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8b5c:	cbnz	w0, 8c80 <PyInit__decimal@@Base+0x21cc>
    8b60:	b	8cd4 <PyInit__decimal@@Base+0x2220>
    8b64:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    8b68:	ldr	x23, [x8, #1496]
    8b6c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    8b70:	add	x0, x0, #0x0
    8b74:	mov	x1, xzr
    8b78:	bl	6780 <PyObject_CallObject@plt>
    8b7c:	cbz	x0, 8cd0 <PyInit__decimal@@Base+0x221c>
    8b80:	ldp	q1, q0, [x23, #32]
    8b84:	ldr	q2, [x23, #16]
    8b88:	mov	x21, x0
    8b8c:	mov	x1, x21
    8b90:	stp	q1, q0, [x0, #32]
    8b94:	str	q2, [x0, #16]
    8b98:	ldr	w8, [x23, #80]
    8b9c:	stp	wzr, wzr, [x0, #44]
    8ba0:	str	w8, [x0, #80]
    8ba4:	ldr	x0, [x22, #1400]
    8ba8:	bl	65c0 <PyContextVar_Set@plt>
    8bac:	cbz	x0, 8cb8 <PyInit__decimal@@Base+0x2204>
    8bb0:	ldr	x8, [x0]
    8bb4:	subs	x8, x8, #0x1
    8bb8:	str	x8, [x0]
    8bbc:	b.ne	8a74 <PyInit__decimal@@Base+0x1fc0>  // b.any
    8bc0:	bl	6510 <_Py_Dealloc@plt>
    8bc4:	b	8a74 <PyInit__decimal@@Base+0x1fc0>
    8bc8:	ldr	x8, [x20]
    8bcc:	subs	x8, x8, #0x1
    8bd0:	str	x8, [x20]
    8bd4:	b.ne	8be0 <PyInit__decimal@@Base+0x212c>  // b.any
    8bd8:	mov	x0, x20
    8bdc:	bl	6510 <_Py_Dealloc@plt>
    8be0:	ldr	x8, [x19]
    8be4:	subs	x8, x8, #0x1
    8be8:	str	x8, [x19]
    8bec:	b.ne	8cd0 <PyInit__decimal@@Base+0x221c>  // b.any
    8bf0:	mov	x0, x19
    8bf4:	b	8ccc <PyInit__decimal@@Base+0x2218>
    8bf8:	ldr	x8, [x20, #8]
    8bfc:	ldrb	w8, [x8, #171]
    8c00:	tbnz	w8, #0, 8c98 <PyInit__decimal@@Base+0x21e4>
    8c04:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    8c08:	ldr	x22, [x22, #3912]
    8c0c:	ldr	x8, [x22]
    8c10:	add	x8, x8, #0x1
    8c14:	str	x8, [x22]
    8c18:	b	8cd4 <PyInit__decimal@@Base+0x2220>
    8c1c:	ldr	x8, [x19, #8]
    8c20:	ldrb	w8, [x8, #171]
    8c24:	tbnz	w8, #0, 8cf0 <PyInit__decimal@@Base+0x223c>
    8c28:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    8c2c:	ldr	x22, [x22, #3912]
    8c30:	ldr	x8, [x22]
    8c34:	add	x8, x8, #0x1
    8c38:	str	x8, [x22]
    8c3c:	ldr	x8, [x20]
    8c40:	subs	x8, x8, #0x1
    8c44:	str	x8, [x20]
    8c48:	b.ne	8cd4 <PyInit__decimal@@Base+0x2220>  // b.any
    8c4c:	b	8d20 <PyInit__decimal@@Base+0x226c>
    8c50:	mov	x0, x20
    8c54:	bl	6510 <_Py_Dealloc@plt>
    8c58:	ldr	x8, [x19]
    8c5c:	subs	x8, x8, #0x1
    8c60:	str	x8, [x19]
    8c64:	b.ne	8b50 <PyInit__decimal@@Base+0x209c>  // b.any
    8c68:	mov	x0, x19
    8c6c:	bl	6510 <_Py_Dealloc@plt>
    8c70:	ldur	w1, [x29, #-4]
    8c74:	mov	x0, x21
    8c78:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8c7c:	cbz	w0, 8cd4 <PyInit__decimal@@Base+0x2220>
    8c80:	ldr	x8, [x22]
    8c84:	subs	x8, x8, #0x1
    8c88:	str	x8, [x22]
    8c8c:	b.ne	8cd0 <PyInit__decimal@@Base+0x221c>  // b.any
    8c90:	mov	x0, x22
    8c94:	b	8ccc <PyInit__decimal@@Base+0x2218>
    8c98:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8c9c:	add	x0, x0, #0xe60
    8ca0:	mov	x1, x20
    8ca4:	mov	x2, x21
    8ca8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    8cac:	mov	x20, x0
    8cb0:	cbnz	x0, 8abc <PyInit__decimal@@Base+0x2008>
    8cb4:	b	8cd0 <PyInit__decimal@@Base+0x221c>
    8cb8:	ldr	x8, [x21]
    8cbc:	subs	x8, x8, #0x1
    8cc0:	str	x8, [x21]
    8cc4:	b.ne	8cd0 <PyInit__decimal@@Base+0x221c>  // b.any
    8cc8:	mov	x0, x21
    8ccc:	bl	6510 <_Py_Dealloc@plt>
    8cd0:	mov	x22, xzr
    8cd4:	mov	x0, x22
    8cd8:	ldp	x20, x19, [sp, #64]
    8cdc:	ldp	x22, x21, [sp, #48]
    8ce0:	ldr	x23, [sp, #32]
    8ce4:	ldp	x29, x30, [sp, #16]
    8ce8:	add	sp, sp, #0x50
    8cec:	ret
    8cf0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8cf4:	add	x0, x0, #0xe60
    8cf8:	mov	x1, x19
    8cfc:	mov	x2, x21
    8d00:	bl	abdc <PyInit__decimal@@Base+0x4128>
    8d04:	mov	x19, x0
    8d08:	cbnz	x0, 8ae4 <PyInit__decimal@@Base+0x2030>
    8d0c:	mov	x22, xzr
    8d10:	ldr	x8, [x20]
    8d14:	subs	x8, x8, #0x1
    8d18:	str	x8, [x20]
    8d1c:	b.ne	8cd4 <PyInit__decimal@@Base+0x2220>  // b.any
    8d20:	mov	x0, x20
    8d24:	bl	6510 <_Py_Dealloc@plt>
    8d28:	b	8cd4 <PyInit__decimal@@Base+0x2220>
    8d2c:	sub	sp, sp, #0x50
    8d30:	stp	x29, x30, [sp, #16]
    8d34:	str	x23, [sp, #32]
    8d38:	stp	x22, x21, [sp, #48]
    8d3c:	stp	x20, x19, [sp, #64]
    8d40:	add	x29, sp, #0x10
    8d44:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    8d48:	mov	x20, x0
    8d4c:	ldr	x0, [x22, #1400]
    8d50:	mov	x19, x1
    8d54:	add	x2, x29, #0x18
    8d58:	mov	x1, xzr
    8d5c:	stur	wzr, [x29, #-4]
    8d60:	bl	6680 <PyContextVar_Get@plt>
    8d64:	tbnz	w0, #31, 8fcc <PyInit__decimal@@Base+0x2518>
    8d68:	ldr	x21, [x29, #24]
    8d6c:	cbz	x21, 8e60 <PyInit__decimal@@Base+0x23ac>
    8d70:	ldr	x8, [x21]
    8d74:	subs	x8, x8, #0x1
    8d78:	str	x8, [x21]
    8d7c:	b.ne	8d88 <PyInit__decimal@@Base+0x22d4>  // b.any
    8d80:	mov	x0, x21
    8d84:	bl	6510 <_Py_Dealloc@plt>
    8d88:	ldr	x0, [x20, #8]
    8d8c:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    8d90:	add	x22, x22, #0xe60
    8d94:	cmp	x0, x22
    8d98:	b.eq	8dac <PyInit__decimal@@Base+0x22f8>  // b.none
    8d9c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    8da0:	add	x1, x1, #0xe60
    8da4:	bl	6900 <PyType_IsSubtype@plt>
    8da8:	cbz	w0, 8ef4 <PyInit__decimal@@Base+0x2440>
    8dac:	ldr	x8, [x20]
    8db0:	add	x8, x8, #0x1
    8db4:	str	x8, [x20]
    8db8:	ldr	x0, [x19, #8]
    8dbc:	cmp	x0, x22
    8dc0:	b.eq	8dd4 <PyInit__decimal@@Base+0x2320>  // b.none
    8dc4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    8dc8:	add	x1, x1, #0xe60
    8dcc:	bl	6900 <PyType_IsSubtype@plt>
    8dd0:	cbz	w0, 8f18 <PyInit__decimal@@Base+0x2464>
    8dd4:	ldr	x8, [x19]
    8dd8:	add	x8, x8, #0x1
    8ddc:	str	x8, [x19]
    8de0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8de4:	add	x0, x0, #0xe60
    8de8:	bl	6890 <_PyObject_New@plt>
    8dec:	cbz	x0, 8ec4 <PyInit__decimal@@Base+0x2410>
    8df0:	mov	w8, #0x30                  	// #48
    8df4:	mov	x22, x0
    8df8:	strb	w8, [x0, #24]!
    8dfc:	mov	x9, #0xffffffffffffffff    	// #-1
    8e00:	mov	w10, #0x4                   	// #4
    8e04:	add	x1, x20, #0x18
    8e08:	add	x2, x19, #0x18
    8e0c:	add	x8, x0, #0x30
    8e10:	add	x3, x21, #0x10
    8e14:	sub	x4, x29, #0x4
    8e18:	stur	x9, [x0, #-8]
    8e1c:	stp	xzr, xzr, [x0, #8]
    8e20:	stp	xzr, x10, [x0, #24]
    8e24:	str	x8, [x0, #40]
    8e28:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
    8e2c:	ldr	x8, [x20]
    8e30:	subs	x8, x8, #0x1
    8e34:	str	x8, [x20]
    8e38:	b.eq	8f4c <PyInit__decimal@@Base+0x2498>  // b.none
    8e3c:	ldr	x8, [x19]
    8e40:	subs	x8, x8, #0x1
    8e44:	str	x8, [x19]
    8e48:	b.eq	8f64 <PyInit__decimal@@Base+0x24b0>  // b.none
    8e4c:	ldur	w1, [x29, #-4]
    8e50:	mov	x0, x21
    8e54:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8e58:	cbnz	w0, 8f7c <PyInit__decimal@@Base+0x24c8>
    8e5c:	b	8fd0 <PyInit__decimal@@Base+0x251c>
    8e60:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    8e64:	ldr	x23, [x8, #1496]
    8e68:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    8e6c:	add	x0, x0, #0x0
    8e70:	mov	x1, xzr
    8e74:	bl	6780 <PyObject_CallObject@plt>
    8e78:	cbz	x0, 8fcc <PyInit__decimal@@Base+0x2518>
    8e7c:	ldp	q1, q0, [x23, #32]
    8e80:	ldr	q2, [x23, #16]
    8e84:	mov	x21, x0
    8e88:	mov	x1, x21
    8e8c:	stp	q1, q0, [x0, #32]
    8e90:	str	q2, [x0, #16]
    8e94:	ldr	w8, [x23, #80]
    8e98:	stp	wzr, wzr, [x0, #44]
    8e9c:	str	w8, [x0, #80]
    8ea0:	ldr	x0, [x22, #1400]
    8ea4:	bl	65c0 <PyContextVar_Set@plt>
    8ea8:	cbz	x0, 8fb4 <PyInit__decimal@@Base+0x2500>
    8eac:	ldr	x8, [x0]
    8eb0:	subs	x8, x8, #0x1
    8eb4:	str	x8, [x0]
    8eb8:	b.ne	8d70 <PyInit__decimal@@Base+0x22bc>  // b.any
    8ebc:	bl	6510 <_Py_Dealloc@plt>
    8ec0:	b	8d70 <PyInit__decimal@@Base+0x22bc>
    8ec4:	ldr	x8, [x20]
    8ec8:	subs	x8, x8, #0x1
    8ecc:	str	x8, [x20]
    8ed0:	b.ne	8edc <PyInit__decimal@@Base+0x2428>  // b.any
    8ed4:	mov	x0, x20
    8ed8:	bl	6510 <_Py_Dealloc@plt>
    8edc:	ldr	x8, [x19]
    8ee0:	subs	x8, x8, #0x1
    8ee4:	str	x8, [x19]
    8ee8:	b.ne	8fcc <PyInit__decimal@@Base+0x2518>  // b.any
    8eec:	mov	x0, x19
    8ef0:	b	8fc8 <PyInit__decimal@@Base+0x2514>
    8ef4:	ldr	x8, [x20, #8]
    8ef8:	ldrb	w8, [x8, #171]
    8efc:	tbnz	w8, #0, 8f94 <PyInit__decimal@@Base+0x24e0>
    8f00:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    8f04:	ldr	x22, [x22, #3912]
    8f08:	ldr	x8, [x22]
    8f0c:	add	x8, x8, #0x1
    8f10:	str	x8, [x22]
    8f14:	b	8fd0 <PyInit__decimal@@Base+0x251c>
    8f18:	ldr	x8, [x19, #8]
    8f1c:	ldrb	w8, [x8, #171]
    8f20:	tbnz	w8, #0, 8fec <PyInit__decimal@@Base+0x2538>
    8f24:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    8f28:	ldr	x22, [x22, #3912]
    8f2c:	ldr	x8, [x22]
    8f30:	add	x8, x8, #0x1
    8f34:	str	x8, [x22]
    8f38:	ldr	x8, [x20]
    8f3c:	subs	x8, x8, #0x1
    8f40:	str	x8, [x20]
    8f44:	b.ne	8fd0 <PyInit__decimal@@Base+0x251c>  // b.any
    8f48:	b	901c <PyInit__decimal@@Base+0x2568>
    8f4c:	mov	x0, x20
    8f50:	bl	6510 <_Py_Dealloc@plt>
    8f54:	ldr	x8, [x19]
    8f58:	subs	x8, x8, #0x1
    8f5c:	str	x8, [x19]
    8f60:	b.ne	8e4c <PyInit__decimal@@Base+0x2398>  // b.any
    8f64:	mov	x0, x19
    8f68:	bl	6510 <_Py_Dealloc@plt>
    8f6c:	ldur	w1, [x29, #-4]
    8f70:	mov	x0, x21
    8f74:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    8f78:	cbz	w0, 8fd0 <PyInit__decimal@@Base+0x251c>
    8f7c:	ldr	x8, [x22]
    8f80:	subs	x8, x8, #0x1
    8f84:	str	x8, [x22]
    8f88:	b.ne	8fcc <PyInit__decimal@@Base+0x2518>  // b.any
    8f8c:	mov	x0, x22
    8f90:	b	8fc8 <PyInit__decimal@@Base+0x2514>
    8f94:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8f98:	add	x0, x0, #0xe60
    8f9c:	mov	x1, x20
    8fa0:	mov	x2, x21
    8fa4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    8fa8:	mov	x20, x0
    8fac:	cbnz	x0, 8db8 <PyInit__decimal@@Base+0x2304>
    8fb0:	b	8fcc <PyInit__decimal@@Base+0x2518>
    8fb4:	ldr	x8, [x21]
    8fb8:	subs	x8, x8, #0x1
    8fbc:	str	x8, [x21]
    8fc0:	b.ne	8fcc <PyInit__decimal@@Base+0x2518>  // b.any
    8fc4:	mov	x0, x21
    8fc8:	bl	6510 <_Py_Dealloc@plt>
    8fcc:	mov	x22, xzr
    8fd0:	mov	x0, x22
    8fd4:	ldp	x20, x19, [sp, #64]
    8fd8:	ldp	x22, x21, [sp, #48]
    8fdc:	ldr	x23, [sp, #32]
    8fe0:	ldp	x29, x30, [sp, #16]
    8fe4:	add	sp, sp, #0x50
    8fe8:	ret
    8fec:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    8ff0:	add	x0, x0, #0xe60
    8ff4:	mov	x1, x19
    8ff8:	mov	x2, x21
    8ffc:	bl	abdc <PyInit__decimal@@Base+0x4128>
    9000:	mov	x19, x0
    9004:	cbnz	x0, 8de0 <PyInit__decimal@@Base+0x232c>
    9008:	mov	x22, xzr
    900c:	ldr	x8, [x20]
    9010:	subs	x8, x8, #0x1
    9014:	str	x8, [x20]
    9018:	b.ne	8fd0 <PyInit__decimal@@Base+0x251c>  // b.any
    901c:	mov	x0, x20
    9020:	bl	6510 <_Py_Dealloc@plt>
    9024:	b	8fd0 <PyInit__decimal@@Base+0x251c>
    9028:	sub	sp, sp, #0x50
    902c:	stp	x29, x30, [sp, #16]
    9030:	str	x23, [sp, #32]
    9034:	stp	x22, x21, [sp, #48]
    9038:	stp	x20, x19, [sp, #64]
    903c:	add	x29, sp, #0x10
    9040:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    9044:	mov	x20, x0
    9048:	ldr	x0, [x22, #1400]
    904c:	mov	x19, x1
    9050:	add	x2, x29, #0x18
    9054:	mov	x1, xzr
    9058:	stur	wzr, [x29, #-4]
    905c:	bl	6680 <PyContextVar_Get@plt>
    9060:	tbnz	w0, #31, 92c8 <PyInit__decimal@@Base+0x2814>
    9064:	ldr	x21, [x29, #24]
    9068:	cbz	x21, 915c <PyInit__decimal@@Base+0x26a8>
    906c:	ldr	x8, [x21]
    9070:	subs	x8, x8, #0x1
    9074:	str	x8, [x21]
    9078:	b.ne	9084 <PyInit__decimal@@Base+0x25d0>  // b.any
    907c:	mov	x0, x21
    9080:	bl	6510 <_Py_Dealloc@plt>
    9084:	ldr	x0, [x20, #8]
    9088:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    908c:	add	x22, x22, #0xe60
    9090:	cmp	x0, x22
    9094:	b.eq	90a8 <PyInit__decimal@@Base+0x25f4>  // b.none
    9098:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    909c:	add	x1, x1, #0xe60
    90a0:	bl	6900 <PyType_IsSubtype@plt>
    90a4:	cbz	w0, 91f0 <PyInit__decimal@@Base+0x273c>
    90a8:	ldr	x8, [x20]
    90ac:	add	x8, x8, #0x1
    90b0:	str	x8, [x20]
    90b4:	ldr	x0, [x19, #8]
    90b8:	cmp	x0, x22
    90bc:	b.eq	90d0 <PyInit__decimal@@Base+0x261c>  // b.none
    90c0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    90c4:	add	x1, x1, #0xe60
    90c8:	bl	6900 <PyType_IsSubtype@plt>
    90cc:	cbz	w0, 9214 <PyInit__decimal@@Base+0x2760>
    90d0:	ldr	x8, [x19]
    90d4:	add	x8, x8, #0x1
    90d8:	str	x8, [x19]
    90dc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    90e0:	add	x0, x0, #0xe60
    90e4:	bl	6890 <_PyObject_New@plt>
    90e8:	cbz	x0, 91c0 <PyInit__decimal@@Base+0x270c>
    90ec:	mov	w8, #0x30                  	// #48
    90f0:	mov	x22, x0
    90f4:	strb	w8, [x0, #24]!
    90f8:	mov	x9, #0xffffffffffffffff    	// #-1
    90fc:	mov	w10, #0x4                   	// #4
    9100:	add	x1, x20, #0x18
    9104:	add	x2, x19, #0x18
    9108:	add	x8, x0, #0x30
    910c:	add	x3, x21, #0x10
    9110:	sub	x4, x29, #0x4
    9114:	stur	x9, [x0, #-8]
    9118:	stp	xzr, xzr, [x0, #8]
    911c:	stp	xzr, x10, [x0, #24]
    9120:	str	x8, [x0, #40]
    9124:	bl	2ffb0 <PyInit__decimal@@Base+0x294fc>
    9128:	ldr	x8, [x20]
    912c:	subs	x8, x8, #0x1
    9130:	str	x8, [x20]
    9134:	b.eq	9248 <PyInit__decimal@@Base+0x2794>  // b.none
    9138:	ldr	x8, [x19]
    913c:	subs	x8, x8, #0x1
    9140:	str	x8, [x19]
    9144:	b.eq	9260 <PyInit__decimal@@Base+0x27ac>  // b.none
    9148:	ldur	w1, [x29, #-4]
    914c:	mov	x0, x21
    9150:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9154:	cbnz	w0, 9278 <PyInit__decimal@@Base+0x27c4>
    9158:	b	92cc <PyInit__decimal@@Base+0x2818>
    915c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    9160:	ldr	x23, [x8, #1496]
    9164:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    9168:	add	x0, x0, #0x0
    916c:	mov	x1, xzr
    9170:	bl	6780 <PyObject_CallObject@plt>
    9174:	cbz	x0, 92c8 <PyInit__decimal@@Base+0x2814>
    9178:	ldp	q1, q0, [x23, #32]
    917c:	ldr	q2, [x23, #16]
    9180:	mov	x21, x0
    9184:	mov	x1, x21
    9188:	stp	q1, q0, [x0, #32]
    918c:	str	q2, [x0, #16]
    9190:	ldr	w8, [x23, #80]
    9194:	stp	wzr, wzr, [x0, #44]
    9198:	str	w8, [x0, #80]
    919c:	ldr	x0, [x22, #1400]
    91a0:	bl	65c0 <PyContextVar_Set@plt>
    91a4:	cbz	x0, 92b0 <PyInit__decimal@@Base+0x27fc>
    91a8:	ldr	x8, [x0]
    91ac:	subs	x8, x8, #0x1
    91b0:	str	x8, [x0]
    91b4:	b.ne	906c <PyInit__decimal@@Base+0x25b8>  // b.any
    91b8:	bl	6510 <_Py_Dealloc@plt>
    91bc:	b	906c <PyInit__decimal@@Base+0x25b8>
    91c0:	ldr	x8, [x20]
    91c4:	subs	x8, x8, #0x1
    91c8:	str	x8, [x20]
    91cc:	b.ne	91d8 <PyInit__decimal@@Base+0x2724>  // b.any
    91d0:	mov	x0, x20
    91d4:	bl	6510 <_Py_Dealloc@plt>
    91d8:	ldr	x8, [x19]
    91dc:	subs	x8, x8, #0x1
    91e0:	str	x8, [x19]
    91e4:	b.ne	92c8 <PyInit__decimal@@Base+0x2814>  // b.any
    91e8:	mov	x0, x19
    91ec:	b	92c4 <PyInit__decimal@@Base+0x2810>
    91f0:	ldr	x8, [x20, #8]
    91f4:	ldrb	w8, [x8, #171]
    91f8:	tbnz	w8, #0, 9290 <PyInit__decimal@@Base+0x27dc>
    91fc:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    9200:	ldr	x22, [x22, #3912]
    9204:	ldr	x8, [x22]
    9208:	add	x8, x8, #0x1
    920c:	str	x8, [x22]
    9210:	b	92cc <PyInit__decimal@@Base+0x2818>
    9214:	ldr	x8, [x19, #8]
    9218:	ldrb	w8, [x8, #171]
    921c:	tbnz	w8, #0, 92e8 <PyInit__decimal@@Base+0x2834>
    9220:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    9224:	ldr	x22, [x22, #3912]
    9228:	ldr	x8, [x22]
    922c:	add	x8, x8, #0x1
    9230:	str	x8, [x22]
    9234:	ldr	x8, [x20]
    9238:	subs	x8, x8, #0x1
    923c:	str	x8, [x20]
    9240:	b.ne	92cc <PyInit__decimal@@Base+0x2818>  // b.any
    9244:	b	9318 <PyInit__decimal@@Base+0x2864>
    9248:	mov	x0, x20
    924c:	bl	6510 <_Py_Dealloc@plt>
    9250:	ldr	x8, [x19]
    9254:	subs	x8, x8, #0x1
    9258:	str	x8, [x19]
    925c:	b.ne	9148 <PyInit__decimal@@Base+0x2694>  // b.any
    9260:	mov	x0, x19
    9264:	bl	6510 <_Py_Dealloc@plt>
    9268:	ldur	w1, [x29, #-4]
    926c:	mov	x0, x21
    9270:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9274:	cbz	w0, 92cc <PyInit__decimal@@Base+0x2818>
    9278:	ldr	x8, [x22]
    927c:	subs	x8, x8, #0x1
    9280:	str	x8, [x22]
    9284:	b.ne	92c8 <PyInit__decimal@@Base+0x2814>  // b.any
    9288:	mov	x0, x22
    928c:	b	92c4 <PyInit__decimal@@Base+0x2810>
    9290:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9294:	add	x0, x0, #0xe60
    9298:	mov	x1, x20
    929c:	mov	x2, x21
    92a0:	bl	abdc <PyInit__decimal@@Base+0x4128>
    92a4:	mov	x20, x0
    92a8:	cbnz	x0, 90b4 <PyInit__decimal@@Base+0x2600>
    92ac:	b	92c8 <PyInit__decimal@@Base+0x2814>
    92b0:	ldr	x8, [x21]
    92b4:	subs	x8, x8, #0x1
    92b8:	str	x8, [x21]
    92bc:	b.ne	92c8 <PyInit__decimal@@Base+0x2814>  // b.any
    92c0:	mov	x0, x21
    92c4:	bl	6510 <_Py_Dealloc@plt>
    92c8:	mov	x22, xzr
    92cc:	mov	x0, x22
    92d0:	ldp	x20, x19, [sp, #64]
    92d4:	ldp	x22, x21, [sp, #48]
    92d8:	ldr	x23, [sp, #32]
    92dc:	ldp	x29, x30, [sp, #16]
    92e0:	add	sp, sp, #0x50
    92e4:	ret
    92e8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    92ec:	add	x0, x0, #0xe60
    92f0:	mov	x1, x19
    92f4:	mov	x2, x21
    92f8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    92fc:	mov	x19, x0
    9300:	cbnz	x0, 90dc <PyInit__decimal@@Base+0x2628>
    9304:	mov	x22, xzr
    9308:	ldr	x8, [x20]
    930c:	subs	x8, x8, #0x1
    9310:	str	x8, [x20]
    9314:	b.ne	92cc <PyInit__decimal@@Base+0x2818>  // b.any
    9318:	mov	x0, x20
    931c:	bl	6510 <_Py_Dealloc@plt>
    9320:	b	92cc <PyInit__decimal@@Base+0x2818>
    9324:	sub	sp, sp, #0x50
    9328:	stp	x29, x30, [sp, #16]
    932c:	str	x23, [sp, #32]
    9330:	stp	x22, x21, [sp, #48]
    9334:	stp	x20, x19, [sp, #64]
    9338:	add	x29, sp, #0x10
    933c:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    9340:	mov	x20, x0
    9344:	ldr	x0, [x22, #1400]
    9348:	mov	x19, x1
    934c:	add	x2, x29, #0x18
    9350:	mov	x1, xzr
    9354:	stur	wzr, [x29, #-4]
    9358:	bl	6680 <PyContextVar_Get@plt>
    935c:	tbnz	w0, #31, 95c4 <PyInit__decimal@@Base+0x2b10>
    9360:	ldr	x21, [x29, #24]
    9364:	cbz	x21, 9458 <PyInit__decimal@@Base+0x29a4>
    9368:	ldr	x8, [x21]
    936c:	subs	x8, x8, #0x1
    9370:	str	x8, [x21]
    9374:	b.ne	9380 <PyInit__decimal@@Base+0x28cc>  // b.any
    9378:	mov	x0, x21
    937c:	bl	6510 <_Py_Dealloc@plt>
    9380:	ldr	x0, [x20, #8]
    9384:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    9388:	add	x22, x22, #0xe60
    938c:	cmp	x0, x22
    9390:	b.eq	93a4 <PyInit__decimal@@Base+0x28f0>  // b.none
    9394:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    9398:	add	x1, x1, #0xe60
    939c:	bl	6900 <PyType_IsSubtype@plt>
    93a0:	cbz	w0, 94ec <PyInit__decimal@@Base+0x2a38>
    93a4:	ldr	x8, [x20]
    93a8:	add	x8, x8, #0x1
    93ac:	str	x8, [x20]
    93b0:	ldr	x0, [x19, #8]
    93b4:	cmp	x0, x22
    93b8:	b.eq	93cc <PyInit__decimal@@Base+0x2918>  // b.none
    93bc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    93c0:	add	x1, x1, #0xe60
    93c4:	bl	6900 <PyType_IsSubtype@plt>
    93c8:	cbz	w0, 9510 <PyInit__decimal@@Base+0x2a5c>
    93cc:	ldr	x8, [x19]
    93d0:	add	x8, x8, #0x1
    93d4:	str	x8, [x19]
    93d8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    93dc:	add	x0, x0, #0xe60
    93e0:	bl	6890 <_PyObject_New@plt>
    93e4:	cbz	x0, 94bc <PyInit__decimal@@Base+0x2a08>
    93e8:	mov	w8, #0x30                  	// #48
    93ec:	mov	x22, x0
    93f0:	strb	w8, [x0, #24]!
    93f4:	mov	x9, #0xffffffffffffffff    	// #-1
    93f8:	mov	w10, #0x4                   	// #4
    93fc:	add	x1, x20, #0x18
    9400:	add	x2, x19, #0x18
    9404:	add	x8, x0, #0x30
    9408:	add	x3, x21, #0x10
    940c:	sub	x4, x29, #0x4
    9410:	stur	x9, [x0, #-8]
    9414:	stp	xzr, xzr, [x0, #8]
    9418:	stp	xzr, x10, [x0, #24]
    941c:	str	x8, [x0, #40]
    9420:	bl	36138 <PyInit__decimal@@Base+0x2f684>
    9424:	ldr	x8, [x20]
    9428:	subs	x8, x8, #0x1
    942c:	str	x8, [x20]
    9430:	b.eq	9544 <PyInit__decimal@@Base+0x2a90>  // b.none
    9434:	ldr	x8, [x19]
    9438:	subs	x8, x8, #0x1
    943c:	str	x8, [x19]
    9440:	b.eq	955c <PyInit__decimal@@Base+0x2aa8>  // b.none
    9444:	ldur	w1, [x29, #-4]
    9448:	mov	x0, x21
    944c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9450:	cbnz	w0, 9574 <PyInit__decimal@@Base+0x2ac0>
    9454:	b	95c8 <PyInit__decimal@@Base+0x2b14>
    9458:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    945c:	ldr	x23, [x8, #1496]
    9460:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    9464:	add	x0, x0, #0x0
    9468:	mov	x1, xzr
    946c:	bl	6780 <PyObject_CallObject@plt>
    9470:	cbz	x0, 95c4 <PyInit__decimal@@Base+0x2b10>
    9474:	ldp	q1, q0, [x23, #32]
    9478:	ldr	q2, [x23, #16]
    947c:	mov	x21, x0
    9480:	mov	x1, x21
    9484:	stp	q1, q0, [x0, #32]
    9488:	str	q2, [x0, #16]
    948c:	ldr	w8, [x23, #80]
    9490:	stp	wzr, wzr, [x0, #44]
    9494:	str	w8, [x0, #80]
    9498:	ldr	x0, [x22, #1400]
    949c:	bl	65c0 <PyContextVar_Set@plt>
    94a0:	cbz	x0, 95ac <PyInit__decimal@@Base+0x2af8>
    94a4:	ldr	x8, [x0]
    94a8:	subs	x8, x8, #0x1
    94ac:	str	x8, [x0]
    94b0:	b.ne	9368 <PyInit__decimal@@Base+0x28b4>  // b.any
    94b4:	bl	6510 <_Py_Dealloc@plt>
    94b8:	b	9368 <PyInit__decimal@@Base+0x28b4>
    94bc:	ldr	x8, [x20]
    94c0:	subs	x8, x8, #0x1
    94c4:	str	x8, [x20]
    94c8:	b.ne	94d4 <PyInit__decimal@@Base+0x2a20>  // b.any
    94cc:	mov	x0, x20
    94d0:	bl	6510 <_Py_Dealloc@plt>
    94d4:	ldr	x8, [x19]
    94d8:	subs	x8, x8, #0x1
    94dc:	str	x8, [x19]
    94e0:	b.ne	95c4 <PyInit__decimal@@Base+0x2b10>  // b.any
    94e4:	mov	x0, x19
    94e8:	b	95c0 <PyInit__decimal@@Base+0x2b0c>
    94ec:	ldr	x8, [x20, #8]
    94f0:	ldrb	w8, [x8, #171]
    94f4:	tbnz	w8, #0, 958c <PyInit__decimal@@Base+0x2ad8>
    94f8:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    94fc:	ldr	x22, [x22, #3912]
    9500:	ldr	x8, [x22]
    9504:	add	x8, x8, #0x1
    9508:	str	x8, [x22]
    950c:	b	95c8 <PyInit__decimal@@Base+0x2b14>
    9510:	ldr	x8, [x19, #8]
    9514:	ldrb	w8, [x8, #171]
    9518:	tbnz	w8, #0, 95e4 <PyInit__decimal@@Base+0x2b30>
    951c:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    9520:	ldr	x22, [x22, #3912]
    9524:	ldr	x8, [x22]
    9528:	add	x8, x8, #0x1
    952c:	str	x8, [x22]
    9530:	ldr	x8, [x20]
    9534:	subs	x8, x8, #0x1
    9538:	str	x8, [x20]
    953c:	b.ne	95c8 <PyInit__decimal@@Base+0x2b14>  // b.any
    9540:	b	9614 <PyInit__decimal@@Base+0x2b60>
    9544:	mov	x0, x20
    9548:	bl	6510 <_Py_Dealloc@plt>
    954c:	ldr	x8, [x19]
    9550:	subs	x8, x8, #0x1
    9554:	str	x8, [x19]
    9558:	b.ne	9444 <PyInit__decimal@@Base+0x2990>  // b.any
    955c:	mov	x0, x19
    9560:	bl	6510 <_Py_Dealloc@plt>
    9564:	ldur	w1, [x29, #-4]
    9568:	mov	x0, x21
    956c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9570:	cbz	w0, 95c8 <PyInit__decimal@@Base+0x2b14>
    9574:	ldr	x8, [x22]
    9578:	subs	x8, x8, #0x1
    957c:	str	x8, [x22]
    9580:	b.ne	95c4 <PyInit__decimal@@Base+0x2b10>  // b.any
    9584:	mov	x0, x22
    9588:	b	95c0 <PyInit__decimal@@Base+0x2b0c>
    958c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9590:	add	x0, x0, #0xe60
    9594:	mov	x1, x20
    9598:	mov	x2, x21
    959c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    95a0:	mov	x20, x0
    95a4:	cbnz	x0, 93b0 <PyInit__decimal@@Base+0x28fc>
    95a8:	b	95c4 <PyInit__decimal@@Base+0x2b10>
    95ac:	ldr	x8, [x21]
    95b0:	subs	x8, x8, #0x1
    95b4:	str	x8, [x21]
    95b8:	b.ne	95c4 <PyInit__decimal@@Base+0x2b10>  // b.any
    95bc:	mov	x0, x21
    95c0:	bl	6510 <_Py_Dealloc@plt>
    95c4:	mov	x22, xzr
    95c8:	mov	x0, x22
    95cc:	ldp	x20, x19, [sp, #64]
    95d0:	ldp	x22, x21, [sp, #48]
    95d4:	ldr	x23, [sp, #32]
    95d8:	ldp	x29, x30, [sp, #16]
    95dc:	add	sp, sp, #0x50
    95e0:	ret
    95e4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    95e8:	add	x0, x0, #0xe60
    95ec:	mov	x1, x19
    95f0:	mov	x2, x21
    95f4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    95f8:	mov	x19, x0
    95fc:	cbnz	x0, 93d8 <PyInit__decimal@@Base+0x2924>
    9600:	mov	x22, xzr
    9604:	ldr	x8, [x20]
    9608:	subs	x8, x8, #0x1
    960c:	str	x8, [x20]
    9610:	b.ne	95c8 <PyInit__decimal@@Base+0x2b14>  // b.any
    9614:	mov	x0, x20
    9618:	bl	6510 <_Py_Dealloc@plt>
    961c:	b	95c8 <PyInit__decimal@@Base+0x2b14>
    9620:	sub	sp, sp, #0x60
    9624:	stp	x29, x30, [sp, #16]
    9628:	stp	x26, x25, [sp, #32]
    962c:	stp	x24, x23, [sp, #48]
    9630:	stp	x22, x21, [sp, #64]
    9634:	stp	x20, x19, [sp, #80]
    9638:	add	x29, sp, #0x10
    963c:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    9640:	mov	x20, x0
    9644:	ldr	x0, [x22, #1400]
    9648:	mov	x19, x1
    964c:	add	x2, sp, #0x8
    9650:	mov	x1, xzr
    9654:	str	wzr, [sp, #4]
    9658:	bl	6680 <PyContextVar_Get@plt>
    965c:	tbnz	w0, #31, 9984 <PyInit__decimal@@Base+0x2ed0>
    9660:	ldr	x21, [sp, #8]
    9664:	cbz	x21, 97ac <PyInit__decimal@@Base+0x2cf8>
    9668:	ldr	x8, [x21]
    966c:	subs	x8, x8, #0x1
    9670:	str	x8, [x21]
    9674:	b.ne	9680 <PyInit__decimal@@Base+0x2bcc>  // b.any
    9678:	mov	x0, x21
    967c:	bl	6510 <_Py_Dealloc@plt>
    9680:	ldr	x0, [x20, #8]
    9684:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    9688:	add	x22, x22, #0xe60
    968c:	cmp	x0, x22
    9690:	b.eq	96a4 <PyInit__decimal@@Base+0x2bf0>  // b.none
    9694:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    9698:	add	x1, x1, #0xe60
    969c:	bl	6900 <PyType_IsSubtype@plt>
    96a0:	cbz	w0, 9834 <PyInit__decimal@@Base+0x2d80>
    96a4:	ldr	x8, [x20]
    96a8:	add	x8, x8, #0x1
    96ac:	str	x8, [x20]
    96b0:	ldr	x0, [x19, #8]
    96b4:	cmp	x0, x22
    96b8:	b.eq	96cc <PyInit__decimal@@Base+0x2c18>  // b.none
    96bc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    96c0:	add	x1, x1, #0xe60
    96c4:	bl	6900 <PyType_IsSubtype@plt>
    96c8:	cbz	w0, 9858 <PyInit__decimal@@Base+0x2da4>
    96cc:	ldr	x8, [x19]
    96d0:	add	x8, x8, #0x1
    96d4:	str	x8, [x19]
    96d8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    96dc:	add	x0, x0, #0xe60
    96e0:	bl	6890 <_PyObject_New@plt>
    96e4:	cbz	x0, 9810 <PyInit__decimal@@Base+0x2d5c>
    96e8:	mov	w25, #0x30                  	// #48
    96ec:	mov	x24, x0
    96f0:	mov	x22, x0
    96f4:	mov	w8, #0x4                   	// #4
    96f8:	strb	w25, [x24, #24]!
    96fc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9700:	mov	x26, #0xffffffffffffffff    	// #-1
    9704:	stp	xzr, x8, [x24, #24]
    9708:	add	x8, x24, #0x30
    970c:	add	x0, x0, #0xe60
    9710:	stur	x26, [x24, #-8]
    9714:	stp	xzr, xzr, [x24, #8]
    9718:	str	x8, [x24, #40]
    971c:	bl	6890 <_PyObject_New@plt>
    9720:	cbz	x0, 987c <PyInit__decimal@@Base+0x2dc8>
    9724:	mov	x1, x0
    9728:	mov	w8, #0x4                   	// #4
    972c:	strb	w25, [x1, #24]!
    9730:	mov	x23, x0
    9734:	add	x2, x20, #0x18
    9738:	add	x3, x19, #0x18
    973c:	stp	xzr, x8, [x1, #24]
    9740:	add	x8, x1, #0x30
    9744:	add	x4, x21, #0x10
    9748:	add	x5, sp, #0x4
    974c:	mov	x0, x24
    9750:	stur	x26, [x1, #-8]
    9754:	stp	xzr, xzr, [x1, #8]
    9758:	str	x8, [x1, #40]
    975c:	bl	2bed4 <PyInit__decimal@@Base+0x25420>
    9760:	ldr	x8, [x20]
    9764:	subs	x8, x8, #0x1
    9768:	str	x8, [x20]
    976c:	b.eq	98ec <PyInit__decimal@@Base+0x2e38>  // b.none
    9770:	ldr	x8, [x19]
    9774:	subs	x8, x8, #0x1
    9778:	str	x8, [x19]
    977c:	b.eq	9904 <PyInit__decimal@@Base+0x2e50>  // b.none
    9780:	ldr	w1, [sp, #4]
    9784:	mov	x0, x21
    9788:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    978c:	cbz	w0, 991c <PyInit__decimal@@Base+0x2e68>
    9790:	ldr	x8, [x23]
    9794:	subs	x8, x8, #0x1
    9798:	str	x8, [x23]
    979c:	b.ne	989c <PyInit__decimal@@Base+0x2de8>  // b.any
    97a0:	mov	x0, x23
    97a4:	bl	6510 <_Py_Dealloc@plt>
    97a8:	b	989c <PyInit__decimal@@Base+0x2de8>
    97ac:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    97b0:	ldr	x23, [x8, #1496]
    97b4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    97b8:	add	x0, x0, #0x0
    97bc:	mov	x1, xzr
    97c0:	bl	6780 <PyObject_CallObject@plt>
    97c4:	cbz	x0, 9984 <PyInit__decimal@@Base+0x2ed0>
    97c8:	ldp	q1, q0, [x23, #32]
    97cc:	ldr	q2, [x23, #16]
    97d0:	mov	x21, x0
    97d4:	mov	x1, x21
    97d8:	stp	q1, q0, [x0, #32]
    97dc:	str	q2, [x0, #16]
    97e0:	ldr	w8, [x23, #80]
    97e4:	stp	wzr, wzr, [x0, #44]
    97e8:	str	w8, [x0, #80]
    97ec:	ldr	x0, [x22, #1400]
    97f0:	bl	65c0 <PyContextVar_Set@plt>
    97f4:	cbz	x0, 98d4 <PyInit__decimal@@Base+0x2e20>
    97f8:	ldr	x8, [x0]
    97fc:	subs	x8, x8, #0x1
    9800:	str	x8, [x0]
    9804:	b.ne	9668 <PyInit__decimal@@Base+0x2bb4>  // b.any
    9808:	bl	6510 <_Py_Dealloc@plt>
    980c:	b	9668 <PyInit__decimal@@Base+0x2bb4>
    9810:	ldr	x8, [x20]
    9814:	subs	x8, x8, #0x1
    9818:	str	x8, [x20]
    981c:	b.eq	9964 <PyInit__decimal@@Base+0x2eb0>  // b.none
    9820:	ldr	x8, [x19]
    9824:	subs	x8, x8, #0x1
    9828:	str	x8, [x19]
    982c:	b.ne	9984 <PyInit__decimal@@Base+0x2ed0>  // b.any
    9830:	b	997c <PyInit__decimal@@Base+0x2ec8>
    9834:	ldr	x8, [x20, #8]
    9838:	ldrb	w8, [x8, #171]
    983c:	tbnz	w8, #0, 98b4 <PyInit__decimal@@Base+0x2e00>
    9840:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
    9844:	ldr	x19, [x19, #3912]
    9848:	ldr	x8, [x19]
    984c:	add	x8, x8, #0x1
    9850:	str	x8, [x19]
    9854:	b	9988 <PyInit__decimal@@Base+0x2ed4>
    9858:	ldr	x8, [x19, #8]
    985c:	ldrb	w8, [x8, #171]
    9860:	tbnz	w8, #0, 99a8 <PyInit__decimal@@Base+0x2ef4>
    9864:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
    9868:	ldr	x19, [x19, #3912]
    986c:	ldr	x8, [x19]
    9870:	add	x8, x8, #0x1
    9874:	str	x8, [x19]
    9878:	b	99c4 <PyInit__decimal@@Base+0x2f10>
    987c:	ldr	x8, [x20]
    9880:	subs	x8, x8, #0x1
    9884:	str	x8, [x20]
    9888:	b.eq	99e0 <PyInit__decimal@@Base+0x2f2c>  // b.none
    988c:	ldr	x8, [x19]
    9890:	subs	x8, x8, #0x1
    9894:	str	x8, [x19]
    9898:	b.eq	99f8 <PyInit__decimal@@Base+0x2f44>  // b.none
    989c:	ldr	x8, [x22]
    98a0:	subs	x8, x8, #0x1
    98a4:	str	x8, [x22]
    98a8:	b.ne	9984 <PyInit__decimal@@Base+0x2ed0>  // b.any
    98ac:	mov	x0, x22
    98b0:	b	9980 <PyInit__decimal@@Base+0x2ecc>
    98b4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    98b8:	add	x0, x0, #0xe60
    98bc:	mov	x1, x20
    98c0:	mov	x2, x21
    98c4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    98c8:	mov	x20, x0
    98cc:	cbnz	x0, 96b0 <PyInit__decimal@@Base+0x2bfc>
    98d0:	b	9984 <PyInit__decimal@@Base+0x2ed0>
    98d4:	ldr	x8, [x21]
    98d8:	subs	x8, x8, #0x1
    98dc:	str	x8, [x21]
    98e0:	b.ne	9984 <PyInit__decimal@@Base+0x2ed0>  // b.any
    98e4:	mov	x0, x21
    98e8:	b	9980 <PyInit__decimal@@Base+0x2ecc>
    98ec:	mov	x0, x20
    98f0:	bl	6510 <_Py_Dealloc@plt>
    98f4:	ldr	x8, [x19]
    98f8:	subs	x8, x8, #0x1
    98fc:	str	x8, [x19]
    9900:	b.ne	9780 <PyInit__decimal@@Base+0x2ccc>  // b.any
    9904:	mov	x0, x19
    9908:	bl	6510 <_Py_Dealloc@plt>
    990c:	ldr	w1, [sp, #4]
    9910:	mov	x0, x21
    9914:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9918:	cbnz	w0, 9790 <PyInit__decimal@@Base+0x2cdc>
    991c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    9920:	add	x0, x0, #0xc03
    9924:	mov	x1, x22
    9928:	mov	x2, x23
    992c:	bl	6710 <Py_BuildValue@plt>
    9930:	ldr	x8, [x23]
    9934:	mov	x19, x0
    9938:	subs	x8, x8, #0x1
    993c:	str	x8, [x23]
    9940:	b.ne	994c <PyInit__decimal@@Base+0x2e98>  // b.any
    9944:	mov	x0, x23
    9948:	bl	6510 <_Py_Dealloc@plt>
    994c:	ldr	x8, [x22]
    9950:	subs	x8, x8, #0x1
    9954:	str	x8, [x22]
    9958:	b.ne	9988 <PyInit__decimal@@Base+0x2ed4>  // b.any
    995c:	mov	x0, x22
    9960:	b	99d8 <PyInit__decimal@@Base+0x2f24>
    9964:	mov	x0, x20
    9968:	bl	6510 <_Py_Dealloc@plt>
    996c:	ldr	x8, [x19]
    9970:	subs	x8, x8, #0x1
    9974:	str	x8, [x19]
    9978:	b.ne	9984 <PyInit__decimal@@Base+0x2ed0>  // b.any
    997c:	mov	x0, x19
    9980:	bl	6510 <_Py_Dealloc@plt>
    9984:	mov	x19, xzr
    9988:	mov	x0, x19
    998c:	ldp	x20, x19, [sp, #80]
    9990:	ldp	x22, x21, [sp, #64]
    9994:	ldp	x24, x23, [sp, #48]
    9998:	ldp	x26, x25, [sp, #32]
    999c:	ldp	x29, x30, [sp, #16]
    99a0:	add	sp, sp, #0x60
    99a4:	ret
    99a8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    99ac:	add	x0, x0, #0xe60
    99b0:	mov	x1, x19
    99b4:	mov	x2, x21
    99b8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    99bc:	mov	x19, x0
    99c0:	cbnz	x0, 96d8 <PyInit__decimal@@Base+0x2c24>
    99c4:	ldr	x8, [x20]
    99c8:	subs	x8, x8, #0x1
    99cc:	str	x8, [x20]
    99d0:	b.ne	9988 <PyInit__decimal@@Base+0x2ed4>  // b.any
    99d4:	mov	x0, x20
    99d8:	bl	6510 <_Py_Dealloc@plt>
    99dc:	b	9988 <PyInit__decimal@@Base+0x2ed4>
    99e0:	mov	x0, x20
    99e4:	bl	6510 <_Py_Dealloc@plt>
    99e8:	ldr	x8, [x19]
    99ec:	subs	x8, x8, #0x1
    99f0:	str	x8, [x19]
    99f4:	b.ne	989c <PyInit__decimal@@Base+0x2de8>  // b.any
    99f8:	mov	x0, x19
    99fc:	bl	6510 <_Py_Dealloc@plt>
    9a00:	ldr	x8, [x22]
    9a04:	subs	x8, x8, #0x1
    9a08:	str	x8, [x22]
    9a0c:	b.ne	9984 <PyInit__decimal@@Base+0x2ed0>  // b.any
    9a10:	b	98ac <PyInit__decimal@@Base+0x2df8>
    9a14:	sub	sp, sp, #0x50
    9a18:	stp	x29, x30, [sp, #16]
    9a1c:	stp	x24, x23, [sp, #32]
    9a20:	stp	x22, x21, [sp, #48]
    9a24:	stp	x20, x19, [sp, #64]
    9a28:	add	x29, sp, #0x10
    9a2c:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
    9a30:	mov	x20, x0
    9a34:	ldr	x0, [x23, #1400]
    9a38:	mov	x21, x2
    9a3c:	mov	x19, x1
    9a40:	add	x2, sp, #0x8
    9a44:	mov	x1, xzr
    9a48:	str	wzr, [sp, #4]
    9a4c:	bl	6680 <PyContextVar_Get@plt>
    9a50:	tbnz	w0, #31, 9e0c <PyInit__decimal@@Base+0x3358>
    9a54:	ldr	x22, [sp, #8]
    9a58:	cbz	x22, 9b08 <PyInit__decimal@@Base+0x3054>
    9a5c:	ldr	x8, [x22]
    9a60:	subs	x8, x8, #0x1
    9a64:	str	x8, [x22]
    9a68:	b.ne	9a74 <PyInit__decimal@@Base+0x2fc0>  // b.any
    9a6c:	mov	x0, x22
    9a70:	bl	6510 <_Py_Dealloc@plt>
    9a74:	ldr	x0, [x20, #8]
    9a78:	adrp	x23, 58000 <PyInit__decimal@@Base+0x5154c>
    9a7c:	add	x23, x23, #0xe60
    9a80:	cmp	x0, x23
    9a84:	b.eq	9a98 <PyInit__decimal@@Base+0x2fe4>  // b.none
    9a88:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    9a8c:	add	x1, x1, #0xe60
    9a90:	bl	6900 <PyType_IsSubtype@plt>
    9a94:	cbz	w0, 9c30 <PyInit__decimal@@Base+0x317c>
    9a98:	ldr	x8, [x20]
    9a9c:	add	x8, x8, #0x1
    9aa0:	str	x8, [x20]
    9aa4:	ldr	x0, [x19, #8]
    9aa8:	cmp	x0, x23
    9aac:	b.eq	9ac0 <PyInit__decimal@@Base+0x300c>  // b.none
    9ab0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    9ab4:	add	x1, x1, #0xe60
    9ab8:	bl	6900 <PyType_IsSubtype@plt>
    9abc:	cbz	w0, 9c54 <PyInit__decimal@@Base+0x31a0>
    9ac0:	ldr	x8, [x19]
    9ac4:	add	x8, x8, #0x1
    9ac8:	str	x8, [x19]
    9acc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    9ad0:	ldr	x8, [x8, #4008]
    9ad4:	cmp	x21, x8
    9ad8:	b.eq	9b6c <PyInit__decimal@@Base+0x30b8>  // b.none
    9adc:	ldr	x0, [x21, #8]
    9ae0:	cmp	x0, x23
    9ae4:	b.eq	9af8 <PyInit__decimal@@Base+0x3044>  // b.none
    9ae8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    9aec:	add	x1, x1, #0xe60
    9af0:	bl	6900 <PyType_IsSubtype@plt>
    9af4:	cbz	w0, 9ce0 <PyInit__decimal@@Base+0x322c>
    9af8:	ldr	x8, [x21]
    9afc:	add	x8, x8, #0x1
    9b00:	str	x8, [x21]
    9b04:	b	9b70 <PyInit__decimal@@Base+0x30bc>
    9b08:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    9b0c:	ldr	x24, [x8, #1496]
    9b10:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    9b14:	add	x0, x0, #0x0
    9b18:	mov	x1, xzr
    9b1c:	bl	6780 <PyObject_CallObject@plt>
    9b20:	cbz	x0, 9e0c <PyInit__decimal@@Base+0x3358>
    9b24:	ldp	q1, q0, [x24, #32]
    9b28:	ldr	q2, [x24, #16]
    9b2c:	mov	x22, x0
    9b30:	mov	x1, x22
    9b34:	stp	q1, q0, [x0, #32]
    9b38:	str	q2, [x0, #16]
    9b3c:	ldr	w8, [x24, #80]
    9b40:	stp	wzr, wzr, [x0, #44]
    9b44:	str	w8, [x0, #80]
    9b48:	ldr	x0, [x23, #1400]
    9b4c:	bl	65c0 <PyContextVar_Set@plt>
    9b50:	cbz	x0, 9cc8 <PyInit__decimal@@Base+0x3214>
    9b54:	ldr	x8, [x0]
    9b58:	subs	x8, x8, #0x1
    9b5c:	str	x8, [x0]
    9b60:	b.ne	9a5c <PyInit__decimal@@Base+0x2fa8>  // b.any
    9b64:	bl	6510 <_Py_Dealloc@plt>
    9b68:	b	9a5c <PyInit__decimal@@Base+0x2fa8>
    9b6c:	mov	x21, xzr
    9b70:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9b74:	add	x0, x0, #0xe60
    9b78:	bl	6890 <_PyObject_New@plt>
    9b7c:	cbz	x0, 9c08 <PyInit__decimal@@Base+0x3154>
    9b80:	mov	w8, #0x30                  	// #48
    9b84:	mov	x23, x0
    9b88:	strb	w8, [x0, #24]!
    9b8c:	mov	x9, #0xffffffffffffffff    	// #-1
    9b90:	mov	w10, #0x4                   	// #4
    9b94:	add	x1, x20, #0x18
    9b98:	add	x8, x0, #0x30
    9b9c:	add	x2, x19, #0x18
    9ba0:	stur	x9, [x0, #-8]
    9ba4:	stp	xzr, xzr, [x0, #8]
    9ba8:	stp	xzr, x10, [x0, #24]
    9bac:	str	x8, [x0, #40]
    9bb0:	cbz	x21, 9c88 <PyInit__decimal@@Base+0x31d4>
    9bb4:	add	x3, x21, #0x18
    9bb8:	add	x4, x22, #0x10
    9bbc:	add	x5, sp, #0x4
    9bc0:	bl	34fc4 <PyInit__decimal@@Base+0x2e510>
    9bc4:	ldr	x8, [x21]
    9bc8:	subs	x8, x8, #0x1
    9bcc:	str	x8, [x21]
    9bd0:	b.eq	9d70 <PyInit__decimal@@Base+0x32bc>  // b.none
    9bd4:	ldr	x8, [x20]
    9bd8:	subs	x8, x8, #0x1
    9bdc:	str	x8, [x20]
    9be0:	b.eq	9d88 <PyInit__decimal@@Base+0x32d4>  // b.none
    9be4:	ldr	x8, [x19]
    9be8:	subs	x8, x8, #0x1
    9bec:	str	x8, [x19]
    9bf0:	b.eq	9da0 <PyInit__decimal@@Base+0x32ec>  // b.none
    9bf4:	ldr	w1, [sp, #4]
    9bf8:	mov	x0, x22
    9bfc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9c00:	cbnz	w0, 9db8 <PyInit__decimal@@Base+0x3304>
    9c04:	b	9e10 <PyInit__decimal@@Base+0x335c>
    9c08:	ldr	x8, [x20]
    9c0c:	subs	x8, x8, #0x1
    9c10:	str	x8, [x20]
    9c14:	b.eq	9dd0 <PyInit__decimal@@Base+0x331c>  // b.none
    9c18:	ldr	x8, [x19]
    9c1c:	subs	x8, x8, #0x1
    9c20:	str	x8, [x19]
    9c24:	b.eq	9de8 <PyInit__decimal@@Base+0x3334>  // b.none
    9c28:	cbnz	x21, 9df4 <PyInit__decimal@@Base+0x3340>
    9c2c:	b	9e0c <PyInit__decimal@@Base+0x3358>
    9c30:	ldr	x8, [x20, #8]
    9c34:	ldrb	w8, [x8, #171]
    9c38:	tbnz	w8, #0, 9ca8 <PyInit__decimal@@Base+0x31f4>
    9c3c:	adrp	x23, 56000 <PyInit__decimal@@Base+0x4f54c>
    9c40:	ldr	x23, [x23, #3912]
    9c44:	ldr	x8, [x23]
    9c48:	add	x8, x8, #0x1
    9c4c:	str	x8, [x23]
    9c50:	b	9e10 <PyInit__decimal@@Base+0x335c>
    9c54:	ldr	x8, [x19, #8]
    9c58:	ldrb	w8, [x8, #171]
    9c5c:	tbnz	w8, #0, 9d34 <PyInit__decimal@@Base+0x3280>
    9c60:	adrp	x23, 56000 <PyInit__decimal@@Base+0x4f54c>
    9c64:	ldr	x23, [x23, #3912]
    9c68:	ldr	x8, [x23]
    9c6c:	add	x8, x8, #0x1
    9c70:	str	x8, [x23]
    9c74:	ldr	x8, [x20]
    9c78:	subs	x8, x8, #0x1
    9c7c:	str	x8, [x20]
    9c80:	b.ne	9e10 <PyInit__decimal@@Base+0x335c>  // b.any
    9c84:	b	9d64 <PyInit__decimal@@Base+0x32b0>
    9c88:	add	x3, x22, #0x10
    9c8c:	add	x4, sp, #0x4
    9c90:	bl	333b0 <PyInit__decimal@@Base+0x2c8fc>
    9c94:	ldr	x8, [x20]
    9c98:	subs	x8, x8, #0x1
    9c9c:	str	x8, [x20]
    9ca0:	b.ne	9be4 <PyInit__decimal@@Base+0x3130>  // b.any
    9ca4:	b	9d88 <PyInit__decimal@@Base+0x32d4>
    9ca8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9cac:	add	x0, x0, #0xe60
    9cb0:	mov	x1, x20
    9cb4:	mov	x2, x22
    9cb8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    9cbc:	mov	x20, x0
    9cc0:	cbnz	x0, 9aa4 <PyInit__decimal@@Base+0x2ff0>
    9cc4:	b	9e0c <PyInit__decimal@@Base+0x3358>
    9cc8:	ldr	x8, [x22]
    9ccc:	subs	x8, x8, #0x1
    9cd0:	str	x8, [x22]
    9cd4:	b.ne	9e0c <PyInit__decimal@@Base+0x3358>  // b.any
    9cd8:	mov	x0, x22
    9cdc:	b	9e08 <PyInit__decimal@@Base+0x3354>
    9ce0:	ldr	x8, [x21, #8]
    9ce4:	ldrb	w8, [x8, #171]
    9ce8:	tbnz	w8, #0, 9e2c <PyInit__decimal@@Base+0x3378>
    9cec:	adrp	x23, 56000 <PyInit__decimal@@Base+0x4f54c>
    9cf0:	ldr	x23, [x23, #3912]
    9cf4:	ldr	x8, [x23]
    9cf8:	add	x8, x8, #0x1
    9cfc:	str	x8, [x23]
    9d00:	ldr	x8, [x20]
    9d04:	subs	x8, x8, #0x1
    9d08:	str	x8, [x20]
    9d0c:	b.ne	9d18 <PyInit__decimal@@Base+0x3264>  // b.any
    9d10:	mov	x0, x20
    9d14:	bl	6510 <_Py_Dealloc@plt>
    9d18:	ldr	x8, [x19]
    9d1c:	subs	x8, x8, #0x1
    9d20:	str	x8, [x19]
    9d24:	b.ne	9e10 <PyInit__decimal@@Base+0x335c>  // b.any
    9d28:	mov	x0, x19
    9d2c:	bl	6510 <_Py_Dealloc@plt>
    9d30:	b	9e10 <PyInit__decimal@@Base+0x335c>
    9d34:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9d38:	add	x0, x0, #0xe60
    9d3c:	mov	x1, x19
    9d40:	mov	x2, x22
    9d44:	bl	abdc <PyInit__decimal@@Base+0x4128>
    9d48:	mov	x19, x0
    9d4c:	cbnz	x0, 9acc <PyInit__decimal@@Base+0x3018>
    9d50:	mov	x23, xzr
    9d54:	ldr	x8, [x20]
    9d58:	subs	x8, x8, #0x1
    9d5c:	str	x8, [x20]
    9d60:	b.ne	9e10 <PyInit__decimal@@Base+0x335c>  // b.any
    9d64:	mov	x0, x20
    9d68:	bl	6510 <_Py_Dealloc@plt>
    9d6c:	b	9e10 <PyInit__decimal@@Base+0x335c>
    9d70:	mov	x0, x21
    9d74:	bl	6510 <_Py_Dealloc@plt>
    9d78:	ldr	x8, [x20]
    9d7c:	subs	x8, x8, #0x1
    9d80:	str	x8, [x20]
    9d84:	b.ne	9be4 <PyInit__decimal@@Base+0x3130>  // b.any
    9d88:	mov	x0, x20
    9d8c:	bl	6510 <_Py_Dealloc@plt>
    9d90:	ldr	x8, [x19]
    9d94:	subs	x8, x8, #0x1
    9d98:	str	x8, [x19]
    9d9c:	b.ne	9bf4 <PyInit__decimal@@Base+0x3140>  // b.any
    9da0:	mov	x0, x19
    9da4:	bl	6510 <_Py_Dealloc@plt>
    9da8:	ldr	w1, [sp, #4]
    9dac:	mov	x0, x22
    9db0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9db4:	cbz	w0, 9e10 <PyInit__decimal@@Base+0x335c>
    9db8:	ldr	x8, [x23]
    9dbc:	subs	x8, x8, #0x1
    9dc0:	str	x8, [x23]
    9dc4:	b.ne	9e0c <PyInit__decimal@@Base+0x3358>  // b.any
    9dc8:	mov	x0, x23
    9dcc:	b	9e08 <PyInit__decimal@@Base+0x3354>
    9dd0:	mov	x0, x20
    9dd4:	bl	6510 <_Py_Dealloc@plt>
    9dd8:	ldr	x8, [x19]
    9ddc:	subs	x8, x8, #0x1
    9de0:	str	x8, [x19]
    9de4:	b.ne	9c28 <PyInit__decimal@@Base+0x3174>  // b.any
    9de8:	mov	x0, x19
    9dec:	bl	6510 <_Py_Dealloc@plt>
    9df0:	cbz	x21, 9e0c <PyInit__decimal@@Base+0x3358>
    9df4:	ldr	x8, [x21]
    9df8:	subs	x8, x8, #0x1
    9dfc:	str	x8, [x21]
    9e00:	b.ne	9e0c <PyInit__decimal@@Base+0x3358>  // b.any
    9e04:	mov	x0, x21
    9e08:	bl	6510 <_Py_Dealloc@plt>
    9e0c:	mov	x23, xzr
    9e10:	mov	x0, x23
    9e14:	ldp	x20, x19, [sp, #64]
    9e18:	ldp	x22, x21, [sp, #48]
    9e1c:	ldp	x24, x23, [sp, #32]
    9e20:	ldp	x29, x30, [sp, #16]
    9e24:	add	sp, sp, #0x50
    9e28:	ret
    9e2c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9e30:	add	x0, x0, #0xe60
    9e34:	mov	x1, x21
    9e38:	mov	x2, x22
    9e3c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    9e40:	mov	x21, x0
    9e44:	cbnz	x0, 9b70 <PyInit__decimal@@Base+0x30bc>
    9e48:	mov	x23, xzr
    9e4c:	ldr	x8, [x20]
    9e50:	subs	x8, x8, #0x1
    9e54:	str	x8, [x20]
    9e58:	b.ne	9d18 <PyInit__decimal@@Base+0x3264>  // b.any
    9e5c:	b	9d10 <PyInit__decimal@@Base+0x325c>
    9e60:	sub	sp, sp, #0x40
    9e64:	stp	x29, x30, [sp, #16]
    9e68:	stp	x22, x21, [sp, #32]
    9e6c:	stp	x20, x19, [sp, #48]
    9e70:	add	x29, sp, #0x10
    9e74:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    9e78:	mov	x19, x0
    9e7c:	ldr	x0, [x21, #1400]
    9e80:	add	x2, sp, #0x8
    9e84:	mov	x1, xzr
    9e88:	str	wzr, [sp, #4]
    9e8c:	bl	6680 <PyContextVar_Get@plt>
    9e90:	tbnz	w0, #31, 9fa4 <PyInit__decimal@@Base+0x34f0>
    9e94:	ldr	x20, [sp, #8]
    9e98:	cbz	x20, 9f28 <PyInit__decimal@@Base+0x3474>
    9e9c:	ldr	x8, [x20]
    9ea0:	subs	x8, x8, #0x1
    9ea4:	str	x8, [x20]
    9ea8:	b.ne	9eb4 <PyInit__decimal@@Base+0x3400>  // b.any
    9eac:	mov	x0, x20
    9eb0:	bl	6510 <_Py_Dealloc@plt>
    9eb4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    9eb8:	add	x0, x0, #0xe60
    9ebc:	bl	6890 <_PyObject_New@plt>
    9ec0:	mov	x21, x0
    9ec4:	cbz	x0, 9fa8 <PyInit__decimal@@Base+0x34f4>
    9ec8:	mov	w8, #0x30                  	// #48
    9ecc:	mov	x0, x21
    9ed0:	strb	w8, [x0, #24]!
    9ed4:	mov	x9, #0xffffffffffffffff    	// #-1
    9ed8:	mov	w10, #0x4                   	// #4
    9edc:	add	x1, x19, #0x18
    9ee0:	add	x8, x0, #0x30
    9ee4:	add	x2, x20, #0x10
    9ee8:	add	x3, sp, #0x4
    9eec:	stur	x9, [x0, #-8]
    9ef0:	stp	xzr, xzr, [x0, #8]
    9ef4:	stp	xzr, x10, [x0, #24]
    9ef8:	str	x8, [x0, #40]
    9efc:	bl	29ea4 <PyInit__decimal@@Base+0x233f0>
    9f00:	ldr	w1, [sp, #4]
    9f04:	mov	x0, x20
    9f08:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    9f0c:	cbz	w0, 9fa8 <PyInit__decimal@@Base+0x34f4>
    9f10:	ldr	x8, [x21]
    9f14:	subs	x8, x8, #0x1
    9f18:	str	x8, [x21]
    9f1c:	b.ne	9fa4 <PyInit__decimal@@Base+0x34f0>  // b.any
    9f20:	mov	x0, x21
    9f24:	b	9fa0 <PyInit__decimal@@Base+0x34ec>
    9f28:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    9f2c:	ldr	x22, [x8, #1496]
    9f30:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    9f34:	add	x0, x0, #0x0
    9f38:	mov	x1, xzr
    9f3c:	bl	6780 <PyObject_CallObject@plt>
    9f40:	cbz	x0, 9fa4 <PyInit__decimal@@Base+0x34f0>
    9f44:	ldp	q1, q0, [x22, #32]
    9f48:	ldr	q2, [x22, #16]
    9f4c:	mov	x20, x0
    9f50:	mov	x1, x20
    9f54:	stp	q1, q0, [x0, #32]
    9f58:	str	q2, [x0, #16]
    9f5c:	ldr	w8, [x22, #80]
    9f60:	stp	wzr, wzr, [x0, #44]
    9f64:	str	w8, [x0, #80]
    9f68:	ldr	x0, [x21, #1400]
    9f6c:	bl	65c0 <PyContextVar_Set@plt>
    9f70:	cbz	x0, 9f8c <PyInit__decimal@@Base+0x34d8>
    9f74:	ldr	x8, [x0]
    9f78:	subs	x8, x8, #0x1
    9f7c:	str	x8, [x0]
    9f80:	b.ne	9e9c <PyInit__decimal@@Base+0x33e8>  // b.any
    9f84:	bl	6510 <_Py_Dealloc@plt>
    9f88:	b	9e9c <PyInit__decimal@@Base+0x33e8>
    9f8c:	ldr	x8, [x20]
    9f90:	subs	x8, x8, #0x1
    9f94:	str	x8, [x20]
    9f98:	b.ne	9fa4 <PyInit__decimal@@Base+0x34f0>  // b.any
    9f9c:	mov	x0, x20
    9fa0:	bl	6510 <_Py_Dealloc@plt>
    9fa4:	mov	x21, xzr
    9fa8:	mov	x0, x21
    9fac:	ldp	x20, x19, [sp, #48]
    9fb0:	ldp	x22, x21, [sp, #32]
    9fb4:	ldp	x29, x30, [sp, #16]
    9fb8:	add	sp, sp, #0x40
    9fbc:	ret
    9fc0:	sub	sp, sp, #0x40
    9fc4:	stp	x29, x30, [sp, #16]
    9fc8:	stp	x22, x21, [sp, #32]
    9fcc:	stp	x20, x19, [sp, #48]
    9fd0:	add	x29, sp, #0x10
    9fd4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    9fd8:	mov	x19, x0
    9fdc:	ldr	x0, [x21, #1400]
    9fe0:	add	x2, sp, #0x8
    9fe4:	mov	x1, xzr
    9fe8:	str	wzr, [sp, #4]
    9fec:	bl	6680 <PyContextVar_Get@plt>
    9ff0:	tbnz	w0, #31, a104 <PyInit__decimal@@Base+0x3650>
    9ff4:	ldr	x20, [sp, #8]
    9ff8:	cbz	x20, a088 <PyInit__decimal@@Base+0x35d4>
    9ffc:	ldr	x8, [x20]
    a000:	subs	x8, x8, #0x1
    a004:	str	x8, [x20]
    a008:	b.ne	a014 <PyInit__decimal@@Base+0x3560>  // b.any
    a00c:	mov	x0, x20
    a010:	bl	6510 <_Py_Dealloc@plt>
    a014:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a018:	add	x0, x0, #0xe60
    a01c:	bl	6890 <_PyObject_New@plt>
    a020:	mov	x21, x0
    a024:	cbz	x0, a108 <PyInit__decimal@@Base+0x3654>
    a028:	mov	w8, #0x30                  	// #48
    a02c:	mov	x0, x21
    a030:	strb	w8, [x0, #24]!
    a034:	mov	x9, #0xffffffffffffffff    	// #-1
    a038:	mov	w10, #0x4                   	// #4
    a03c:	add	x1, x19, #0x18
    a040:	add	x8, x0, #0x30
    a044:	add	x2, x20, #0x10
    a048:	add	x3, sp, #0x4
    a04c:	stur	x9, [x0, #-8]
    a050:	stp	xzr, xzr, [x0, #8]
    a054:	stp	xzr, x10, [x0, #24]
    a058:	str	x8, [x0, #40]
    a05c:	bl	2a078 <PyInit__decimal@@Base+0x235c4>
    a060:	ldr	w1, [sp, #4]
    a064:	mov	x0, x20
    a068:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    a06c:	cbz	w0, a108 <PyInit__decimal@@Base+0x3654>
    a070:	ldr	x8, [x21]
    a074:	subs	x8, x8, #0x1
    a078:	str	x8, [x21]
    a07c:	b.ne	a104 <PyInit__decimal@@Base+0x3650>  // b.any
    a080:	mov	x0, x21
    a084:	b	a100 <PyInit__decimal@@Base+0x364c>
    a088:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    a08c:	ldr	x22, [x8, #1496]
    a090:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    a094:	add	x0, x0, #0x0
    a098:	mov	x1, xzr
    a09c:	bl	6780 <PyObject_CallObject@plt>
    a0a0:	cbz	x0, a104 <PyInit__decimal@@Base+0x3650>
    a0a4:	ldp	q1, q0, [x22, #32]
    a0a8:	ldr	q2, [x22, #16]
    a0ac:	mov	x20, x0
    a0b0:	mov	x1, x20
    a0b4:	stp	q1, q0, [x0, #32]
    a0b8:	str	q2, [x0, #16]
    a0bc:	ldr	w8, [x22, #80]
    a0c0:	stp	wzr, wzr, [x0, #44]
    a0c4:	str	w8, [x0, #80]
    a0c8:	ldr	x0, [x21, #1400]
    a0cc:	bl	65c0 <PyContextVar_Set@plt>
    a0d0:	cbz	x0, a0ec <PyInit__decimal@@Base+0x3638>
    a0d4:	ldr	x8, [x0]
    a0d8:	subs	x8, x8, #0x1
    a0dc:	str	x8, [x0]
    a0e0:	b.ne	9ffc <PyInit__decimal@@Base+0x3548>  // b.any
    a0e4:	bl	6510 <_Py_Dealloc@plt>
    a0e8:	b	9ffc <PyInit__decimal@@Base+0x3548>
    a0ec:	ldr	x8, [x20]
    a0f0:	subs	x8, x8, #0x1
    a0f4:	str	x8, [x20]
    a0f8:	b.ne	a104 <PyInit__decimal@@Base+0x3650>  // b.any
    a0fc:	mov	x0, x20
    a100:	bl	6510 <_Py_Dealloc@plt>
    a104:	mov	x21, xzr
    a108:	mov	x0, x21
    a10c:	ldp	x20, x19, [sp, #48]
    a110:	ldp	x22, x21, [sp, #32]
    a114:	ldp	x29, x30, [sp, #16]
    a118:	add	sp, sp, #0x40
    a11c:	ret
    a120:	sub	sp, sp, #0x40
    a124:	stp	x29, x30, [sp, #16]
    a128:	stp	x22, x21, [sp, #32]
    a12c:	stp	x20, x19, [sp, #48]
    a130:	add	x29, sp, #0x10
    a134:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    a138:	mov	x19, x0
    a13c:	ldr	x0, [x21, #1400]
    a140:	add	x2, sp, #0x8
    a144:	mov	x1, xzr
    a148:	str	wzr, [sp, #4]
    a14c:	bl	6680 <PyContextVar_Get@plt>
    a150:	tbnz	w0, #31, a264 <PyInit__decimal@@Base+0x37b0>
    a154:	ldr	x20, [sp, #8]
    a158:	cbz	x20, a1e8 <PyInit__decimal@@Base+0x3734>
    a15c:	ldr	x8, [x20]
    a160:	subs	x8, x8, #0x1
    a164:	str	x8, [x20]
    a168:	b.ne	a174 <PyInit__decimal@@Base+0x36c0>  // b.any
    a16c:	mov	x0, x20
    a170:	bl	6510 <_Py_Dealloc@plt>
    a174:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a178:	add	x0, x0, #0xe60
    a17c:	bl	6890 <_PyObject_New@plt>
    a180:	mov	x21, x0
    a184:	cbz	x0, a268 <PyInit__decimal@@Base+0x37b4>
    a188:	mov	w8, #0x30                  	// #48
    a18c:	mov	x0, x21
    a190:	strb	w8, [x0, #24]!
    a194:	mov	x9, #0xffffffffffffffff    	// #-1
    a198:	mov	w10, #0x4                   	// #4
    a19c:	add	x1, x19, #0x18
    a1a0:	add	x8, x0, #0x30
    a1a4:	add	x2, x20, #0x10
    a1a8:	add	x3, sp, #0x4
    a1ac:	stur	x9, [x0, #-8]
    a1b0:	stp	xzr, xzr, [x0, #8]
    a1b4:	stp	xzr, x10, [x0, #24]
    a1b8:	str	x8, [x0, #40]
    a1bc:	bl	29e18 <PyInit__decimal@@Base+0x23364>
    a1c0:	ldr	w1, [sp, #4]
    a1c4:	mov	x0, x20
    a1c8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    a1cc:	cbz	w0, a268 <PyInit__decimal@@Base+0x37b4>
    a1d0:	ldr	x8, [x21]
    a1d4:	subs	x8, x8, #0x1
    a1d8:	str	x8, [x21]
    a1dc:	b.ne	a264 <PyInit__decimal@@Base+0x37b0>  // b.any
    a1e0:	mov	x0, x21
    a1e4:	b	a260 <PyInit__decimal@@Base+0x37ac>
    a1e8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    a1ec:	ldr	x22, [x8, #1496]
    a1f0:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    a1f4:	add	x0, x0, #0x0
    a1f8:	mov	x1, xzr
    a1fc:	bl	6780 <PyObject_CallObject@plt>
    a200:	cbz	x0, a264 <PyInit__decimal@@Base+0x37b0>
    a204:	ldp	q1, q0, [x22, #32]
    a208:	ldr	q2, [x22, #16]
    a20c:	mov	x20, x0
    a210:	mov	x1, x20
    a214:	stp	q1, q0, [x0, #32]
    a218:	str	q2, [x0, #16]
    a21c:	ldr	w8, [x22, #80]
    a220:	stp	wzr, wzr, [x0, #44]
    a224:	str	w8, [x0, #80]
    a228:	ldr	x0, [x21, #1400]
    a22c:	bl	65c0 <PyContextVar_Set@plt>
    a230:	cbz	x0, a24c <PyInit__decimal@@Base+0x3798>
    a234:	ldr	x8, [x0]
    a238:	subs	x8, x8, #0x1
    a23c:	str	x8, [x0]
    a240:	b.ne	a15c <PyInit__decimal@@Base+0x36a8>  // b.any
    a244:	bl	6510 <_Py_Dealloc@plt>
    a248:	b	a15c <PyInit__decimal@@Base+0x36a8>
    a24c:	ldr	x8, [x20]
    a250:	subs	x8, x8, #0x1
    a254:	str	x8, [x20]
    a258:	b.ne	a264 <PyInit__decimal@@Base+0x37b0>  // b.any
    a25c:	mov	x0, x20
    a260:	bl	6510 <_Py_Dealloc@plt>
    a264:	mov	x21, xzr
    a268:	mov	x0, x21
    a26c:	ldp	x20, x19, [sp, #48]
    a270:	ldp	x22, x21, [sp, #32]
    a274:	ldp	x29, x30, [sp, #16]
    a278:	add	sp, sp, #0x40
    a27c:	ret
    a280:	stp	x29, x30, [sp, #-16]!
    a284:	mov	x29, sp
    a288:	add	x0, x0, #0x18
    a28c:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
    a290:	cmp	w0, #0x0
    a294:	cset	w0, eq  // eq = none
    a298:	ldp	x29, x30, [sp], #16
    a29c:	ret
    a2a0:	sub	sp, sp, #0x40
    a2a4:	stp	x29, x30, [sp, #16]
    a2a8:	stp	x22, x21, [sp, #32]
    a2ac:	stp	x20, x19, [sp, #48]
    a2b0:	add	x29, sp, #0x10
    a2b4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    a2b8:	ldr	x8, [x21, #1400]
    a2bc:	mov	x19, x0
    a2c0:	add	x2, sp, #0x8
    a2c4:	mov	x1, xzr
    a2c8:	mov	x0, x8
    a2cc:	bl	6680 <PyContextVar_Get@plt>
    a2d0:	tbnz	w0, #31, a384 <PyInit__decimal@@Base+0x38d0>
    a2d4:	ldr	x20, [sp, #8]
    a2d8:	cbz	x20, a308 <PyInit__decimal@@Base+0x3854>
    a2dc:	ldr	x8, [x20]
    a2e0:	subs	x8, x8, #0x1
    a2e4:	str	x8, [x20]
    a2e8:	b.ne	a2f4 <PyInit__decimal@@Base+0x3840>  // b.any
    a2ec:	mov	x0, x20
    a2f0:	bl	6510 <_Py_Dealloc@plt>
    a2f4:	mov	w2, #0x1                   	// #1
    a2f8:	mov	x0, x19
    a2fc:	mov	x1, x20
    a300:	bl	adc0 <PyInit__decimal@@Base+0x430c>
    a304:	b	a388 <PyInit__decimal@@Base+0x38d4>
    a308:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    a30c:	ldr	x22, [x8, #1496]
    a310:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    a314:	add	x0, x0, #0x0
    a318:	mov	x1, xzr
    a31c:	bl	6780 <PyObject_CallObject@plt>
    a320:	cbz	x0, a384 <PyInit__decimal@@Base+0x38d0>
    a324:	ldp	q1, q0, [x22, #32]
    a328:	ldr	q2, [x22, #16]
    a32c:	mov	x20, x0
    a330:	mov	x1, x20
    a334:	stp	q1, q0, [x0, #32]
    a338:	str	q2, [x0, #16]
    a33c:	ldr	w8, [x22, #80]
    a340:	stp	wzr, wzr, [x0, #44]
    a344:	str	w8, [x0, #80]
    a348:	ldr	x0, [x21, #1400]
    a34c:	bl	65c0 <PyContextVar_Set@plt>
    a350:	cbz	x0, a36c <PyInit__decimal@@Base+0x38b8>
    a354:	ldr	x8, [x0]
    a358:	subs	x8, x8, #0x1
    a35c:	str	x8, [x0]
    a360:	b.ne	a2dc <PyInit__decimal@@Base+0x3828>  // b.any
    a364:	bl	6510 <_Py_Dealloc@plt>
    a368:	b	a2dc <PyInit__decimal@@Base+0x3828>
    a36c:	ldr	x8, [x20]
    a370:	subs	x8, x8, #0x1
    a374:	str	x8, [x20]
    a378:	b.ne	a384 <PyInit__decimal@@Base+0x38d0>  // b.any
    a37c:	mov	x0, x20
    a380:	bl	6510 <_Py_Dealloc@plt>
    a384:	mov	x0, xzr
    a388:	ldp	x20, x19, [sp, #48]
    a38c:	ldp	x22, x21, [sp, #32]
    a390:	ldp	x29, x30, [sp, #16]
    a394:	add	sp, sp, #0x40
    a398:	ret
    a39c:	stp	x29, x30, [sp, #-32]!
    a3a0:	stp	x20, x19, [sp, #16]
    a3a4:	mov	x29, sp
    a3a8:	add	x19, x0, #0x18
    a3ac:	mov	x20, x0
    a3b0:	mov	x0, x19
    a3b4:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
    a3b8:	cbz	w0, a3f4 <PyInit__decimal@@Base+0x3940>
    a3bc:	mov	x0, x19
    a3c0:	bl	22800 <PyInit__decimal@@Base+0x1bd4c>
    a3c4:	cbz	w0, a408 <PyInit__decimal@@Base+0x3954>
    a3c8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    a3cc:	ldr	x8, [x8, #3928]
    a3d0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    a3d4:	add	x1, x1, #0xc49
    a3d8:	ldr	x0, [x8]
    a3dc:	bl	6590 <PyErr_SetString@plt>
    a3e0:	mov	x20, xzr
    a3e4:	mov	x0, x20
    a3e8:	ldp	x20, x19, [sp, #16]
    a3ec:	ldp	x29, x30, [sp], #32
    a3f0:	ret
    a3f4:	mov	x0, x20
    a3f8:	bl	7e24 <PyInit__decimal@@Base+0x1370>
    a3fc:	mov	x19, x0
    a400:	cbnz	x0, a428 <PyInit__decimal@@Base+0x3974>
    a404:	b	a470 <PyInit__decimal@@Base+0x39bc>
    a408:	mov	x0, x19
    a40c:	bl	227cc <PyInit__decimal@@Base+0x1bd18>
    a410:	cbz	w0, a45c <PyInit__decimal@@Base+0x39a8>
    a414:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    a418:	add	x0, x0, #0xc6f
    a41c:	bl	68a0 <PyUnicode_FromString@plt>
    a420:	mov	x19, x0
    a424:	cbz	x0, a470 <PyInit__decimal@@Base+0x39bc>
    a428:	mov	x0, x19
    a42c:	bl	69d0 <PyFloat_FromString@plt>
    a430:	ldr	x8, [x19]
    a434:	mov	x20, x0
    a438:	subs	x8, x8, #0x1
    a43c:	str	x8, [x19]
    a440:	b.ne	a3e4 <PyInit__decimal@@Base+0x3930>  // b.any
    a444:	mov	x0, x19
    a448:	bl	6510 <_Py_Dealloc@plt>
    a44c:	mov	x0, x20
    a450:	ldp	x20, x19, [sp, #16]
    a454:	ldp	x29, x30, [sp], #32
    a458:	ret
    a45c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
    a460:	add	x0, x0, #0xc70
    a464:	bl	68a0 <PyUnicode_FromString@plt>
    a468:	mov	x19, x0
    a46c:	cbnz	x0, a428 <PyInit__decimal@@Base+0x3974>
    a470:	mov	x20, xzr
    a474:	mov	x0, x20
    a478:	ldp	x20, x19, [sp, #16]
    a47c:	ldp	x29, x30, [sp], #32
    a480:	ret
    a484:	sub	sp, sp, #0x50
    a488:	stp	x29, x30, [sp, #16]
    a48c:	str	x23, [sp, #32]
    a490:	stp	x22, x21, [sp, #48]
    a494:	stp	x20, x19, [sp, #64]
    a498:	add	x29, sp, #0x10
    a49c:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    a4a0:	mov	x20, x0
    a4a4:	ldr	x0, [x22, #1400]
    a4a8:	mov	x19, x1
    a4ac:	add	x2, x29, #0x18
    a4b0:	mov	x1, xzr
    a4b4:	stur	wzr, [x29, #-4]
    a4b8:	bl	6680 <PyContextVar_Get@plt>
    a4bc:	tbnz	w0, #31, a724 <PyInit__decimal@@Base+0x3c70>
    a4c0:	ldr	x21, [x29, #24]
    a4c4:	cbz	x21, a5b8 <PyInit__decimal@@Base+0x3b04>
    a4c8:	ldr	x8, [x21]
    a4cc:	subs	x8, x8, #0x1
    a4d0:	str	x8, [x21]
    a4d4:	b.ne	a4e0 <PyInit__decimal@@Base+0x3a2c>  // b.any
    a4d8:	mov	x0, x21
    a4dc:	bl	6510 <_Py_Dealloc@plt>
    a4e0:	ldr	x0, [x20, #8]
    a4e4:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    a4e8:	add	x22, x22, #0xe60
    a4ec:	cmp	x0, x22
    a4f0:	b.eq	a504 <PyInit__decimal@@Base+0x3a50>  // b.none
    a4f4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    a4f8:	add	x1, x1, #0xe60
    a4fc:	bl	6900 <PyType_IsSubtype@plt>
    a500:	cbz	w0, a64c <PyInit__decimal@@Base+0x3b98>
    a504:	ldr	x8, [x20]
    a508:	add	x8, x8, #0x1
    a50c:	str	x8, [x20]
    a510:	ldr	x0, [x19, #8]
    a514:	cmp	x0, x22
    a518:	b.eq	a52c <PyInit__decimal@@Base+0x3a78>  // b.none
    a51c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    a520:	add	x1, x1, #0xe60
    a524:	bl	6900 <PyType_IsSubtype@plt>
    a528:	cbz	w0, a670 <PyInit__decimal@@Base+0x3bbc>
    a52c:	ldr	x8, [x19]
    a530:	add	x8, x8, #0x1
    a534:	str	x8, [x19]
    a538:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a53c:	add	x0, x0, #0xe60
    a540:	bl	6890 <_PyObject_New@plt>
    a544:	cbz	x0, a61c <PyInit__decimal@@Base+0x3b68>
    a548:	mov	w8, #0x30                  	// #48
    a54c:	mov	x22, x0
    a550:	strb	w8, [x0, #24]!
    a554:	mov	x9, #0xffffffffffffffff    	// #-1
    a558:	mov	w10, #0x4                   	// #4
    a55c:	add	x1, x20, #0x18
    a560:	add	x2, x19, #0x18
    a564:	add	x8, x0, #0x30
    a568:	add	x3, x21, #0x10
    a56c:	sub	x4, x29, #0x4
    a570:	stur	x9, [x0, #-8]
    a574:	stp	xzr, xzr, [x0, #8]
    a578:	stp	xzr, x10, [x0, #24]
    a57c:	str	x8, [x0, #40]
    a580:	bl	2d0dc <PyInit__decimal@@Base+0x26628>
    a584:	ldr	x8, [x20]
    a588:	subs	x8, x8, #0x1
    a58c:	str	x8, [x20]
    a590:	b.eq	a6a4 <PyInit__decimal@@Base+0x3bf0>  // b.none
    a594:	ldr	x8, [x19]
    a598:	subs	x8, x8, #0x1
    a59c:	str	x8, [x19]
    a5a0:	b.eq	a6bc <PyInit__decimal@@Base+0x3c08>  // b.none
    a5a4:	ldur	w1, [x29, #-4]
    a5a8:	mov	x0, x21
    a5ac:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    a5b0:	cbnz	w0, a6d4 <PyInit__decimal@@Base+0x3c20>
    a5b4:	b	a728 <PyInit__decimal@@Base+0x3c74>
    a5b8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    a5bc:	ldr	x23, [x8, #1496]
    a5c0:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    a5c4:	add	x0, x0, #0x0
    a5c8:	mov	x1, xzr
    a5cc:	bl	6780 <PyObject_CallObject@plt>
    a5d0:	cbz	x0, a724 <PyInit__decimal@@Base+0x3c70>
    a5d4:	ldp	q1, q0, [x23, #32]
    a5d8:	ldr	q2, [x23, #16]
    a5dc:	mov	x21, x0
    a5e0:	mov	x1, x21
    a5e4:	stp	q1, q0, [x0, #32]
    a5e8:	str	q2, [x0, #16]
    a5ec:	ldr	w8, [x23, #80]
    a5f0:	stp	wzr, wzr, [x0, #44]
    a5f4:	str	w8, [x0, #80]
    a5f8:	ldr	x0, [x22, #1400]
    a5fc:	bl	65c0 <PyContextVar_Set@plt>
    a600:	cbz	x0, a70c <PyInit__decimal@@Base+0x3c58>
    a604:	ldr	x8, [x0]
    a608:	subs	x8, x8, #0x1
    a60c:	str	x8, [x0]
    a610:	b.ne	a4c8 <PyInit__decimal@@Base+0x3a14>  // b.any
    a614:	bl	6510 <_Py_Dealloc@plt>
    a618:	b	a4c8 <PyInit__decimal@@Base+0x3a14>
    a61c:	ldr	x8, [x20]
    a620:	subs	x8, x8, #0x1
    a624:	str	x8, [x20]
    a628:	b.ne	a634 <PyInit__decimal@@Base+0x3b80>  // b.any
    a62c:	mov	x0, x20
    a630:	bl	6510 <_Py_Dealloc@plt>
    a634:	ldr	x8, [x19]
    a638:	subs	x8, x8, #0x1
    a63c:	str	x8, [x19]
    a640:	b.ne	a724 <PyInit__decimal@@Base+0x3c70>  // b.any
    a644:	mov	x0, x19
    a648:	b	a720 <PyInit__decimal@@Base+0x3c6c>
    a64c:	ldr	x8, [x20, #8]
    a650:	ldrb	w8, [x8, #171]
    a654:	tbnz	w8, #0, a6ec <PyInit__decimal@@Base+0x3c38>
    a658:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    a65c:	ldr	x22, [x22, #3912]
    a660:	ldr	x8, [x22]
    a664:	add	x8, x8, #0x1
    a668:	str	x8, [x22]
    a66c:	b	a728 <PyInit__decimal@@Base+0x3c74>
    a670:	ldr	x8, [x19, #8]
    a674:	ldrb	w8, [x8, #171]
    a678:	tbnz	w8, #0, a744 <PyInit__decimal@@Base+0x3c90>
    a67c:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    a680:	ldr	x22, [x22, #3912]
    a684:	ldr	x8, [x22]
    a688:	add	x8, x8, #0x1
    a68c:	str	x8, [x22]
    a690:	ldr	x8, [x20]
    a694:	subs	x8, x8, #0x1
    a698:	str	x8, [x20]
    a69c:	b.ne	a728 <PyInit__decimal@@Base+0x3c74>  // b.any
    a6a0:	b	a774 <PyInit__decimal@@Base+0x3cc0>
    a6a4:	mov	x0, x20
    a6a8:	bl	6510 <_Py_Dealloc@plt>
    a6ac:	ldr	x8, [x19]
    a6b0:	subs	x8, x8, #0x1
    a6b4:	str	x8, [x19]
    a6b8:	b.ne	a5a4 <PyInit__decimal@@Base+0x3af0>  // b.any
    a6bc:	mov	x0, x19
    a6c0:	bl	6510 <_Py_Dealloc@plt>
    a6c4:	ldur	w1, [x29, #-4]
    a6c8:	mov	x0, x21
    a6cc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    a6d0:	cbz	w0, a728 <PyInit__decimal@@Base+0x3c74>
    a6d4:	ldr	x8, [x22]
    a6d8:	subs	x8, x8, #0x1
    a6dc:	str	x8, [x22]
    a6e0:	b.ne	a724 <PyInit__decimal@@Base+0x3c70>  // b.any
    a6e4:	mov	x0, x22
    a6e8:	b	a720 <PyInit__decimal@@Base+0x3c6c>
    a6ec:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a6f0:	add	x0, x0, #0xe60
    a6f4:	mov	x1, x20
    a6f8:	mov	x2, x21
    a6fc:	bl	abdc <PyInit__decimal@@Base+0x4128>
    a700:	mov	x20, x0
    a704:	cbnz	x0, a510 <PyInit__decimal@@Base+0x3a5c>
    a708:	b	a724 <PyInit__decimal@@Base+0x3c70>
    a70c:	ldr	x8, [x21]
    a710:	subs	x8, x8, #0x1
    a714:	str	x8, [x21]
    a718:	b.ne	a724 <PyInit__decimal@@Base+0x3c70>  // b.any
    a71c:	mov	x0, x21
    a720:	bl	6510 <_Py_Dealloc@plt>
    a724:	mov	x22, xzr
    a728:	mov	x0, x22
    a72c:	ldp	x20, x19, [sp, #64]
    a730:	ldp	x22, x21, [sp, #48]
    a734:	ldr	x23, [sp, #32]
    a738:	ldp	x29, x30, [sp, #16]
    a73c:	add	sp, sp, #0x50
    a740:	ret
    a744:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a748:	add	x0, x0, #0xe60
    a74c:	mov	x1, x19
    a750:	mov	x2, x21
    a754:	bl	abdc <PyInit__decimal@@Base+0x4128>
    a758:	mov	x19, x0
    a75c:	cbnz	x0, a538 <PyInit__decimal@@Base+0x3a84>
    a760:	mov	x22, xzr
    a764:	ldr	x8, [x20]
    a768:	subs	x8, x8, #0x1
    a76c:	str	x8, [x20]
    a770:	b.ne	a728 <PyInit__decimal@@Base+0x3c74>  // b.any
    a774:	mov	x0, x20
    a778:	bl	6510 <_Py_Dealloc@plt>
    a77c:	b	a728 <PyInit__decimal@@Base+0x3c74>
    a780:	sub	sp, sp, #0x50
    a784:	stp	x29, x30, [sp, #16]
    a788:	str	x23, [sp, #32]
    a78c:	stp	x22, x21, [sp, #48]
    a790:	stp	x20, x19, [sp, #64]
    a794:	add	x29, sp, #0x10
    a798:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    a79c:	mov	x20, x0
    a7a0:	ldr	x0, [x22, #1400]
    a7a4:	mov	x19, x1
    a7a8:	add	x2, x29, #0x18
    a7ac:	mov	x1, xzr
    a7b0:	stur	wzr, [x29, #-4]
    a7b4:	bl	6680 <PyContextVar_Get@plt>
    a7b8:	tbnz	w0, #31, aa20 <PyInit__decimal@@Base+0x3f6c>
    a7bc:	ldr	x21, [x29, #24]
    a7c0:	cbz	x21, a8b4 <PyInit__decimal@@Base+0x3e00>
    a7c4:	ldr	x8, [x21]
    a7c8:	subs	x8, x8, #0x1
    a7cc:	str	x8, [x21]
    a7d0:	b.ne	a7dc <PyInit__decimal@@Base+0x3d28>  // b.any
    a7d4:	mov	x0, x21
    a7d8:	bl	6510 <_Py_Dealloc@plt>
    a7dc:	ldr	x0, [x20, #8]
    a7e0:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    a7e4:	add	x22, x22, #0xe60
    a7e8:	cmp	x0, x22
    a7ec:	b.eq	a800 <PyInit__decimal@@Base+0x3d4c>  // b.none
    a7f0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    a7f4:	add	x1, x1, #0xe60
    a7f8:	bl	6900 <PyType_IsSubtype@plt>
    a7fc:	cbz	w0, a948 <PyInit__decimal@@Base+0x3e94>
    a800:	ldr	x8, [x20]
    a804:	add	x8, x8, #0x1
    a808:	str	x8, [x20]
    a80c:	ldr	x0, [x19, #8]
    a810:	cmp	x0, x22
    a814:	b.eq	a828 <PyInit__decimal@@Base+0x3d74>  // b.none
    a818:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    a81c:	add	x1, x1, #0xe60
    a820:	bl	6900 <PyType_IsSubtype@plt>
    a824:	cbz	w0, a96c <PyInit__decimal@@Base+0x3eb8>
    a828:	ldr	x8, [x19]
    a82c:	add	x8, x8, #0x1
    a830:	str	x8, [x19]
    a834:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a838:	add	x0, x0, #0xe60
    a83c:	bl	6890 <_PyObject_New@plt>
    a840:	cbz	x0, a918 <PyInit__decimal@@Base+0x3e64>
    a844:	mov	w8, #0x30                  	// #48
    a848:	mov	x22, x0
    a84c:	strb	w8, [x0, #24]!
    a850:	mov	x9, #0xffffffffffffffff    	// #-1
    a854:	mov	w10, #0x4                   	// #4
    a858:	add	x1, x20, #0x18
    a85c:	add	x2, x19, #0x18
    a860:	add	x8, x0, #0x30
    a864:	add	x3, x21, #0x10
    a868:	sub	x4, x29, #0x4
    a86c:	stur	x9, [x0, #-8]
    a870:	stp	xzr, xzr, [x0, #8]
    a874:	stp	xzr, x10, [x0, #24]
    a878:	str	x8, [x0, #40]
    a87c:	bl	2b290 <PyInit__decimal@@Base+0x247dc>
    a880:	ldr	x8, [x20]
    a884:	subs	x8, x8, #0x1
    a888:	str	x8, [x20]
    a88c:	b.eq	a9a0 <PyInit__decimal@@Base+0x3eec>  // b.none
    a890:	ldr	x8, [x19]
    a894:	subs	x8, x8, #0x1
    a898:	str	x8, [x19]
    a89c:	b.eq	a9b8 <PyInit__decimal@@Base+0x3f04>  // b.none
    a8a0:	ldur	w1, [x29, #-4]
    a8a4:	mov	x0, x21
    a8a8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    a8ac:	cbnz	w0, a9d0 <PyInit__decimal@@Base+0x3f1c>
    a8b0:	b	aa24 <PyInit__decimal@@Base+0x3f70>
    a8b4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    a8b8:	ldr	x23, [x8, #1496]
    a8bc:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    a8c0:	add	x0, x0, #0x0
    a8c4:	mov	x1, xzr
    a8c8:	bl	6780 <PyObject_CallObject@plt>
    a8cc:	cbz	x0, aa20 <PyInit__decimal@@Base+0x3f6c>
    a8d0:	ldp	q1, q0, [x23, #32]
    a8d4:	ldr	q2, [x23, #16]
    a8d8:	mov	x21, x0
    a8dc:	mov	x1, x21
    a8e0:	stp	q1, q0, [x0, #32]
    a8e4:	str	q2, [x0, #16]
    a8e8:	ldr	w8, [x23, #80]
    a8ec:	stp	wzr, wzr, [x0, #44]
    a8f0:	str	w8, [x0, #80]
    a8f4:	ldr	x0, [x22, #1400]
    a8f8:	bl	65c0 <PyContextVar_Set@plt>
    a8fc:	cbz	x0, aa08 <PyInit__decimal@@Base+0x3f54>
    a900:	ldr	x8, [x0]
    a904:	subs	x8, x8, #0x1
    a908:	str	x8, [x0]
    a90c:	b.ne	a7c4 <PyInit__decimal@@Base+0x3d10>  // b.any
    a910:	bl	6510 <_Py_Dealloc@plt>
    a914:	b	a7c4 <PyInit__decimal@@Base+0x3d10>
    a918:	ldr	x8, [x20]
    a91c:	subs	x8, x8, #0x1
    a920:	str	x8, [x20]
    a924:	b.ne	a930 <PyInit__decimal@@Base+0x3e7c>  // b.any
    a928:	mov	x0, x20
    a92c:	bl	6510 <_Py_Dealloc@plt>
    a930:	ldr	x8, [x19]
    a934:	subs	x8, x8, #0x1
    a938:	str	x8, [x19]
    a93c:	b.ne	aa20 <PyInit__decimal@@Base+0x3f6c>  // b.any
    a940:	mov	x0, x19
    a944:	b	aa1c <PyInit__decimal@@Base+0x3f68>
    a948:	ldr	x8, [x20, #8]
    a94c:	ldrb	w8, [x8, #171]
    a950:	tbnz	w8, #0, a9e8 <PyInit__decimal@@Base+0x3f34>
    a954:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    a958:	ldr	x22, [x22, #3912]
    a95c:	ldr	x8, [x22]
    a960:	add	x8, x8, #0x1
    a964:	str	x8, [x22]
    a968:	b	aa24 <PyInit__decimal@@Base+0x3f70>
    a96c:	ldr	x8, [x19, #8]
    a970:	ldrb	w8, [x8, #171]
    a974:	tbnz	w8, #0, aa40 <PyInit__decimal@@Base+0x3f8c>
    a978:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
    a97c:	ldr	x22, [x22, #3912]
    a980:	ldr	x8, [x22]
    a984:	add	x8, x8, #0x1
    a988:	str	x8, [x22]
    a98c:	ldr	x8, [x20]
    a990:	subs	x8, x8, #0x1
    a994:	str	x8, [x20]
    a998:	b.ne	aa24 <PyInit__decimal@@Base+0x3f70>  // b.any
    a99c:	b	aa70 <PyInit__decimal@@Base+0x3fbc>
    a9a0:	mov	x0, x20
    a9a4:	bl	6510 <_Py_Dealloc@plt>
    a9a8:	ldr	x8, [x19]
    a9ac:	subs	x8, x8, #0x1
    a9b0:	str	x8, [x19]
    a9b4:	b.ne	a8a0 <PyInit__decimal@@Base+0x3dec>  // b.any
    a9b8:	mov	x0, x19
    a9bc:	bl	6510 <_Py_Dealloc@plt>
    a9c0:	ldur	w1, [x29, #-4]
    a9c4:	mov	x0, x21
    a9c8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    a9cc:	cbz	w0, aa24 <PyInit__decimal@@Base+0x3f70>
    a9d0:	ldr	x8, [x22]
    a9d4:	subs	x8, x8, #0x1
    a9d8:	str	x8, [x22]
    a9dc:	b.ne	aa20 <PyInit__decimal@@Base+0x3f6c>  // b.any
    a9e0:	mov	x0, x22
    a9e4:	b	aa1c <PyInit__decimal@@Base+0x3f68>
    a9e8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    a9ec:	add	x0, x0, #0xe60
    a9f0:	mov	x1, x20
    a9f4:	mov	x2, x21
    a9f8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    a9fc:	mov	x20, x0
    aa00:	cbnz	x0, a80c <PyInit__decimal@@Base+0x3d58>
    aa04:	b	aa20 <PyInit__decimal@@Base+0x3f6c>
    aa08:	ldr	x8, [x21]
    aa0c:	subs	x8, x8, #0x1
    aa10:	str	x8, [x21]
    aa14:	b.ne	aa20 <PyInit__decimal@@Base+0x3f6c>  // b.any
    aa18:	mov	x0, x21
    aa1c:	bl	6510 <_Py_Dealloc@plt>
    aa20:	mov	x22, xzr
    aa24:	mov	x0, x22
    aa28:	ldp	x20, x19, [sp, #64]
    aa2c:	ldp	x22, x21, [sp, #48]
    aa30:	ldr	x23, [sp, #32]
    aa34:	ldp	x29, x30, [sp, #16]
    aa38:	add	sp, sp, #0x50
    aa3c:	ret
    aa40:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    aa44:	add	x0, x0, #0xe60
    aa48:	mov	x1, x19
    aa4c:	mov	x2, x21
    aa50:	bl	abdc <PyInit__decimal@@Base+0x4128>
    aa54:	mov	x19, x0
    aa58:	cbnz	x0, a834 <PyInit__decimal@@Base+0x3d80>
    aa5c:	mov	x22, xzr
    aa60:	ldr	x8, [x20]
    aa64:	subs	x8, x8, #0x1
    aa68:	str	x8, [x20]
    aa6c:	b.ne	aa24 <PyInit__decimal@@Base+0x3f70>  // b.any
    aa70:	mov	x0, x20
    aa74:	bl	6510 <_Py_Dealloc@plt>
    aa78:	b	aa24 <PyInit__decimal@@Base+0x3f70>
    aa7c:	stp	x29, x30, [sp, #-48]!
    aa80:	stp	x22, x21, [sp, #16]
    aa84:	stp	x20, x19, [sp, #32]
    aa88:	mov	x29, sp
    aa8c:	ldp	w8, w9, [x0, #40]
    aa90:	orr	w10, w8, #0x200
    aa94:	orr	w9, w9, w1
    aa98:	tst	w10, w1
    aa9c:	str	w9, [x0, #44]
    aaa0:	b.eq	aaf0 <PyInit__decimal@@Base+0x403c>  // b.none
    aaa4:	tbnz	w1, #9, ab04 <PyInit__decimal@@Base+0x4050>
    aaa8:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
    aaac:	ldr	x9, [x9, #3360]
    aab0:	cbz	x9, aad4 <PyInit__decimal@@Base+0x4020>
    aab4:	and	w21, w8, w1
    aab8:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    aabc:	add	x8, x8, #0xd40
    aac0:	ldur	w9, [x8, #-16]
    aac4:	tst	w21, w9
    aac8:	b.ne	ab1c <PyInit__decimal@@Base+0x4068>  // b.any
    aacc:	ldr	x9, [x8], #32
    aad0:	cbnz	x9, aac0 <PyInit__decimal@@Base+0x400c>
    aad4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    aad8:	ldr	x8, [x8, #3920]
    aadc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    aae0:	add	x1, x1, #0xbde
    aae4:	ldr	x0, [x8]
    aae8:	bl	6590 <PyErr_SetString@plt>
    aaec:	b	ab08 <PyInit__decimal@@Base+0x4054>
    aaf0:	mov	w0, wzr
    aaf4:	ldp	x20, x19, [sp, #32]
    aaf8:	ldp	x22, x21, [sp, #16]
    aafc:	ldp	x29, x30, [sp], #48
    ab00:	ret
    ab04:	bl	6520 <PyErr_NoMemory@plt>
    ab08:	mov	w0, #0x1                   	// #1
    ab0c:	ldp	x20, x19, [sp, #32]
    ab10:	ldp	x22, x21, [sp, #16]
    ab14:	ldp	x29, x30, [sp], #48
    ab18:	ret
    ab1c:	ldur	x20, [x8, #-8]
    ab20:	cbz	x20, ab08 <PyInit__decimal@@Base+0x4054>
    ab24:	mov	x0, xzr
    ab28:	bl	63f0 <PyList_New@plt>
    ab2c:	cbz	x0, ab08 <PyInit__decimal@@Base+0x4054>
    ab30:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    ab34:	ldr	x8, [x8, #3168]
    ab38:	mov	x19, x0
    ab3c:	cbz	x8, ab74 <PyInit__decimal@@Base+0x40c0>
    ab40:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    ab44:	add	x22, x22, #0xc80
    ab48:	b	ab54 <PyInit__decimal@@Base+0x40a0>
    ab4c:	ldr	x8, [x22], #32
    ab50:	cbz	x8, ab74 <PyInit__decimal@@Base+0x40c0>
    ab54:	ldur	w8, [x22, #-16]
    ab58:	tst	w8, w21
    ab5c:	b.eq	ab4c <PyInit__decimal@@Base+0x4098>  // b.none
    ab60:	ldur	x1, [x22, #-8]
    ab64:	mov	x0, x19
    ab68:	bl	66b0 <PyList_Append@plt>
    ab6c:	tbz	w0, #31, ab4c <PyInit__decimal@@Base+0x4098>
    ab70:	b	abc0 <PyInit__decimal@@Base+0x410c>
    ab74:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    ab78:	ldr	x8, [x8, #3392]
    ab7c:	cbz	x8, abb4 <PyInit__decimal@@Base+0x4100>
    ab80:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    ab84:	add	x22, x22, #0xd60
    ab88:	b	ab94 <PyInit__decimal@@Base+0x40e0>
    ab8c:	ldr	x8, [x22], #32
    ab90:	cbz	x8, abb4 <PyInit__decimal@@Base+0x4100>
    ab94:	ldur	w8, [x22, #-16]
    ab98:	tst	w8, w21
    ab9c:	b.eq	ab8c <PyInit__decimal@@Base+0x40d8>  // b.none
    aba0:	ldur	x1, [x22, #-8]
    aba4:	mov	x0, x19
    aba8:	bl	66b0 <PyList_Append@plt>
    abac:	tbz	w0, #31, ab8c <PyInit__decimal@@Base+0x40d8>
    abb0:	b	abc0 <PyInit__decimal@@Base+0x410c>
    abb4:	mov	x0, x20
    abb8:	mov	x1, x19
    abbc:	bl	6530 <PyErr_SetObject@plt>
    abc0:	ldr	x8, [x19]
    abc4:	subs	x8, x8, #0x1
    abc8:	str	x8, [x19]
    abcc:	b.ne	ab08 <PyInit__decimal@@Base+0x4054>  // b.any
    abd0:	mov	x0, x19
    abd4:	bl	6510 <_Py_Dealloc@plt>
    abd8:	b	ab08 <PyInit__decimal@@Base+0x4054>
    abdc:	sub	sp, sp, #0x70
    abe0:	stp	x29, x30, [sp, #64]
    abe4:	stp	x22, x21, [sp, #80]
    abe8:	stp	x20, x19, [sp, #96]
    abec:	add	x29, sp, #0x40
    abf0:	stur	wzr, [x29, #-4]
    abf4:	ldr	x8, [x1, #8]
    abf8:	ldrb	w8, [x8, #171]
    abfc:	tbnz	w8, #0, ac1c <PyInit__decimal@@Base+0x4168>
    ac00:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ac04:	ldr	x8, [x8, #3936]
    ac08:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ac0c:	add	x1, x1, #0xbc2
    ac10:	ldr	x0, [x8]
    ac14:	bl	6590 <PyErr_SetString@plt>
    ac18:	b	ad78 <PyInit__decimal@@Base+0x42c4>
    ac1c:	mov	x20, x0
    ac20:	add	x0, sp, #0x8
    ac24:	mov	x19, x2
    ac28:	mov	x22, x1
    ac2c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
    ac30:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    ac34:	add	x8, x8, #0xe60
    ac38:	cmp	x20, x8
    ac3c:	b.eq	ac5c <PyInit__decimal@@Base+0x41a8>  // b.none
    ac40:	ldr	x8, [x20, #304]
    ac44:	mov	x0, x20
    ac48:	mov	x1, xzr
    ac4c:	blr	x8
    ac50:	mov	x20, x0
    ac54:	cbnz	x0, ac70 <PyInit__decimal@@Base+0x41bc>
    ac58:	b	ad7c <PyInit__decimal@@Base+0x42c8>
    ac5c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    ac60:	add	x0, x0, #0xe60
    ac64:	bl	6890 <_PyObject_New@plt>
    ac68:	mov	x20, x0
    ac6c:	cbz	x0, ad7c <PyInit__decimal@@Base+0x42c8>
    ac70:	mov	w8, #0x30                  	// #48
    ac74:	mov	x21, x20
    ac78:	strb	w8, [x21, #24]!
    ac7c:	mov	x9, #0xffffffffffffffff    	// #-1
    ac80:	mov	w10, #0x4                   	// #4
    ac84:	add	x8, x21, #0x30
    ac88:	stur	x9, [x21, #-8]
    ac8c:	stp	xzr, xzr, [x21, #8]
    ac90:	stp	xzr, x10, [x21, #24]
    ac94:	str	x8, [x21, #40]
    ac98:	ldr	x9, [x22, #16]
    ac9c:	cbz	x9, ad00 <PyInit__decimal@@Base+0x424c>
    aca0:	cmp	x9, #0x0
    aca4:	cneg	x2, x9, mi  // mi = first
    aca8:	cmp	x2, #0x1
    acac:	lsr	x3, x9, #63
    acb0:	b.ne	ad94 <PyInit__decimal@@Base+0x42e0>  // b.any
    acb4:	ldr	w9, [x22, #24]
    acb8:	mov	w10, #0x1                   	// #1
    acbc:	mov	x0, x21
    acc0:	mov	w1, w3
    acc4:	str	x9, [x8]
    acc8:	str	x10, [x21, #24]
    accc:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
    acd0:	mov	x0, x21
    acd4:	str	xzr, [x21, #8]
    acd8:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
    acdc:	add	x1, sp, #0x8
    ace0:	sub	x2, x29, #0x4
    ace4:	mov	x0, x21
    ace8:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
    acec:	ldur	w8, [x29, #-4]
    acf0:	mov	w9, #0x1041                	// #4161
    acf4:	tst	w8, w9
    acf8:	b.ne	ad34 <PyInit__decimal@@Base+0x4280>  // b.any
    acfc:	b	ad48 <PyInit__decimal@@Base+0x4294>
    ad00:	str	xzr, [x8]
    ad04:	mov	w8, #0x1                   	// #1
    ad08:	mov	x0, x21
    ad0c:	mov	w1, wzr
    ad10:	str	x8, [x21, #24]
    ad14:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
    ad18:	mov	x0, x21
    ad1c:	str	xzr, [x21, #8]
    ad20:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
    ad24:	ldur	w8, [x29, #-4]
    ad28:	mov	w9, #0x1041                	// #4161
    ad2c:	tst	w8, w9
    ad30:	b.eq	ad48 <PyInit__decimal@@Base+0x4294>  // b.none
    ad34:	sub	x2, x29, #0x4
    ad38:	mov	w1, #0x100                 	// #256
    ad3c:	mov	x0, x21
    ad40:	bl	23368 <PyInit__decimal@@Base+0x1c8b4>
    ad44:	ldur	w8, [x29, #-4]
    ad48:	mov	w9, #0x3be                 	// #958
    ad4c:	and	w1, w8, w9
    ad50:	mov	x0, x19
    ad54:	stur	w1, [x29, #-4]
    ad58:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    ad5c:	cbz	w0, ad7c <PyInit__decimal@@Base+0x42c8>
    ad60:	ldr	x8, [x20]
    ad64:	subs	x8, x8, #0x1
    ad68:	str	x8, [x20]
    ad6c:	b.ne	ad78 <PyInit__decimal@@Base+0x42c4>  // b.any
    ad70:	mov	x0, x20
    ad74:	bl	6510 <_Py_Dealloc@plt>
    ad78:	mov	x20, xzr
    ad7c:	mov	x0, x20
    ad80:	ldp	x20, x19, [sp, #96]
    ad84:	ldp	x22, x21, [sp, #80]
    ad88:	ldp	x29, x30, [sp, #64]
    ad8c:	add	sp, sp, #0x70
    ad90:	ret
    ad94:	add	x1, x22, #0x18
    ad98:	add	x5, sp, #0x8
    ad9c:	sub	x6, x29, #0x4
    ada0:	mov	w4, #0x40000000            	// #1073741824
    ada4:	mov	x0, x21
    ada8:	bl	3a884 <PyInit__decimal@@Base+0x33dd0>
    adac:	ldur	w8, [x29, #-4]
    adb0:	mov	w9, #0x1041                	// #4161
    adb4:	tst	w8, w9
    adb8:	b.ne	ad34 <PyInit__decimal@@Base+0x4280>  // b.any
    adbc:	b	ad48 <PyInit__decimal@@Base+0x4294>
    adc0:	sub	sp, sp, #0x80
    adc4:	stp	x29, x30, [sp, #80]
    adc8:	stp	x22, x21, [sp, #96]
    adcc:	stp	x20, x19, [sp, #112]
    add0:	add	x29, sp, #0x50
    add4:	add	x21, x0, #0x18
    add8:	mov	x0, x21
    addc:	mov	w22, w2
    ade0:	mov	x20, x1
    ade4:	str	wzr, [sp, #12]
    ade8:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
    adec:	cbz	w0, ae10 <PyInit__decimal@@Base+0x435c>
    adf0:	mov	x0, x21
    adf4:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
    adf8:	cbz	w0, ae5c <PyInit__decimal@@Base+0x43a8>
    adfc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ae00:	ldr	x8, [x8, #3928]
    ae04:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ae08:	add	x1, x1, #0xc08
    ae0c:	b	ae6c <PyInit__decimal@@Base+0x43b8>
    ae10:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
    ae14:	cbz	x0, ae90 <PyInit__decimal@@Base+0x43dc>
    ae18:	ldp	q1, q0, [x20, #32]
    ae1c:	ldr	q2, [x20, #16]
    ae20:	add	x2, sp, #0x10
    ae24:	add	x3, sp, #0xc
    ae28:	mov	x1, x21
    ae2c:	mov	x19, x0
    ae30:	stp	q1, q0, [sp, #32]
    ae34:	str	q2, [sp, #16]
    ae38:	str	w22, [sp, #52]
    ae3c:	bl	3611c <PyInit__decimal@@Base+0x2f668>
    ae40:	ldr	w1, [sp, #12]
    ae44:	mov	x0, x20
    ae48:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    ae4c:	cbz	w0, ae98 <PyInit__decimal@@Base+0x43e4>
    ae50:	mov	x0, x19
    ae54:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    ae58:	b	ae74 <PyInit__decimal@@Base+0x43c0>
    ae5c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ae60:	ldr	x8, [x8, #3992]
    ae64:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ae68:	add	x1, x1, #0xc26
    ae6c:	ldr	x0, [x8]
    ae70:	bl	6590 <PyErr_SetString@plt>
    ae74:	mov	x20, xzr
    ae78:	mov	x0, x20
    ae7c:	ldp	x20, x19, [sp, #112]
    ae80:	ldp	x22, x21, [sp, #96]
    ae84:	ldp	x29, x30, [sp, #80]
    ae88:	add	sp, sp, #0x80
    ae8c:	ret
    ae90:	bl	6520 <PyErr_NoMemory@plt>
    ae94:	b	ae74 <PyInit__decimal@@Base+0x43c0>
    ae98:	sub	x0, x29, #0x8
    ae9c:	add	x4, sp, #0xc
    aea0:	mov	w2, #0x40000000            	// #1073741824
    aea4:	mov	x1, xzr
    aea8:	mov	x3, x19
    aeac:	str	wzr, [sp, #12]
    aeb0:	stur	xzr, [x29, #-8]
    aeb4:	bl	39f90 <PyInit__decimal@@Base+0x334dc>
    aeb8:	cmn	x0, #0x1
    aebc:	b.eq	af34 <PyInit__decimal@@Base+0x4480>  // b.none
    aec0:	mov	x21, x0
    aec4:	bl	64e0 <_PyLong_New@plt>
    aec8:	mov	x20, x0
    aecc:	cbz	x0, af3c <PyInit__decimal@@Base+0x4488>
    aed0:	ldur	x22, [x29, #-8]
    aed4:	add	x0, x20, #0x18
    aed8:	lsl	x2, x21, #2
    aedc:	mov	x1, x22
    aee0:	bl	63c0 <memcpy@plt>
    aee4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    aee8:	ldr	x8, [x8, #1376]
    aeec:	mov	x0, x22
    aef0:	blr	x8
    aef4:	add	x8, x20, #0x14
    aef8:	mov	x22, x21
    aefc:	subs	x21, x21, #0x1
    af00:	b.lt	af0c <PyInit__decimal@@Base+0x4458>  // b.tstop
    af04:	ldr	w9, [x8, x22, lsl #2]
    af08:	cbz	w9, aef8 <PyInit__decimal@@Base+0x4444>
    af0c:	mov	x0, x19
    af10:	str	x22, [x20, #16]
    af14:	bl	227cc <PyInit__decimal@@Base+0x1bd18>
    af18:	cbz	w0, af4c <PyInit__decimal@@Base+0x4498>
    af1c:	mov	x0, x19
    af20:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
    af24:	cbnz	w0, af4c <PyInit__decimal@@Base+0x4498>
    af28:	neg	x8, x22
    af2c:	str	x8, [x20, #16]
    af30:	b	af4c <PyInit__decimal@@Base+0x4498>
    af34:	bl	6520 <PyErr_NoMemory@plt>
    af38:	b	ae50 <PyInit__decimal@@Base+0x439c>
    af3c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    af40:	ldr	x8, [x8, #1376]
    af44:	ldur	x0, [x29, #-8]
    af48:	blr	x8
    af4c:	mov	x0, x19
    af50:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    af54:	b	ae78 <PyInit__decimal@@Base+0x43c4>
    af58:	sub	sp, sp, #0xa0
    af5c:	stp	x29, x30, [sp, #96]
    af60:	stp	x24, x23, [sp, #112]
    af64:	stp	x22, x21, [sp, #128]
    af68:	stp	x20, x19, [sp, #144]
    af6c:	add	x29, sp, #0x60
    af70:	stur	wzr, [x29, #-4]
    af74:	ldr	x8, [x1, #8]
    af78:	mov	x20, x2
    af7c:	mov	x21, x1
    af80:	mov	x19, x0
    af84:	ldrb	w9, [x8, #171]
    af88:	tbnz	w9, #0, b158 <PyInit__decimal@@Base+0x46a4>
    af8c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    af90:	ldr	x9, [x9, #3864]
    af94:	cmp	x8, x9
    af98:	b.eq	afb0 <PyInit__decimal@@Base+0x44fc>  // b.none
    af9c:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
    afa0:	ldr	x1, [x1, #3864]
    afa4:	mov	x0, x8
    afa8:	bl	6900 <PyType_IsSubtype@plt>
    afac:	cbz	w0, b170 <PyInit__decimal@@Base+0x46bc>
    afb0:	mov	x0, x21
    afb4:	bl	6800 <PyFloat_AsDouble@plt>
    afb8:	fmov	d1, #-1.000000000000000000e+00
    afbc:	fcmp	d0, d1
    afc0:	str	q0, [sp, #16]
    afc4:	b.ne	afd4 <PyInit__decimal@@Base+0x4520>  // b.any
    afc8:	bl	6720 <PyErr_Occurred@plt>
    afcc:	ldr	q0, [sp, #16]
    afd0:	cbnz	x0, b23c <PyInit__decimal@@Base+0x4788>
    afd4:	movi	v2.2d, #0x0
    afd8:	fmov	d1, #1.000000000000000000e+00
    afdc:	fneg	v2.2d, v2.2d
    afe0:	fcmp	d0, d0
    afe4:	bit	v1.16b, v0.16b, v2.16b
    afe8:	str	q1, [sp]
    afec:	b.vs	b190 <PyInit__decimal@@Base+0x46dc>
    aff0:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
    aff4:	fabs	d2, d0
    aff8:	fmov	d1, x8
    affc:	fcmp	d2, d1
    b000:	b.eq	b190 <PyInit__decimal@@Base+0x46dc>  // b.none
    b004:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b008:	ldr	x8, [x8, #1432]
    b00c:	mov	x0, x21
    b010:	blr	x8
    b014:	cbz	x0, b23c <PyInit__decimal@@Base+0x4788>
    b018:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b01c:	ldr	x8, [x8, #1440]
    b020:	mov	x1, xzr
    b024:	mov	x21, x0
    b028:	blr	x8
    b02c:	ldr	x8, [x21]
    b030:	mov	x22, x0
    b034:	subs	x8, x8, #0x1
    b038:	str	x8, [x21]
    b03c:	b.ne	b048 <PyInit__decimal@@Base+0x4594>  // b.any
    b040:	mov	x0, x21
    b044:	bl	6510 <_Py_Dealloc@plt>
    b048:	cbz	x22, b23c <PyInit__decimal@@Base+0x4788>
    b04c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b050:	ldp	x23, x0, [x22, #24]
    b054:	ldr	x8, [x8, #1448]
    b058:	mov	x1, xzr
    b05c:	blr	x8
    b060:	cbz	x0, b22c <PyInit__decimal@@Base+0x4778>
    b064:	mov	x24, x0
    b068:	bl	6630 <PyLong_AsSsize_t@plt>
    b06c:	ldr	x8, [x24]
    b070:	mov	x21, x0
    b074:	subs	x8, x8, #0x1
    b078:	str	x8, [x24]
    b07c:	b.ne	b088 <PyInit__decimal@@Base+0x45d4>  // b.any
    b080:	mov	x0, x24
    b084:	bl	6510 <_Py_Dealloc@plt>
    b088:	cmn	x21, #0x1
    b08c:	b.eq	b224 <PyInit__decimal@@Base+0x4770>  // b.none
    b090:	mov	x0, x19
    b094:	mov	x1, x23
    b098:	mov	x2, x20
    b09c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    b0a0:	ldr	x8, [x22]
    b0a4:	mov	x19, x0
    b0a8:	subs	x8, x8, #0x1
    b0ac:	str	x8, [x22]
    b0b0:	b.ne	b0bc <PyInit__decimal@@Base+0x4608>  // b.any
    b0b4:	mov	x0, x22
    b0b8:	bl	6510 <_Py_Dealloc@plt>
    b0bc:	cbz	x19, b240 <PyInit__decimal@@Base+0x478c>
    b0c0:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
    b0c4:	cbz	x0, b274 <PyInit__decimal@@Base+0x47c0>
    b0c8:	mov	x22, x0
    b0cc:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
    b0d0:	cbz	x0, b26c <PyInit__decimal@@Base+0x47b8>
    b0d4:	mov	x23, x0
    b0d8:	add	x0, sp, #0x28
    b0dc:	sub	x24, x21, #0x1
    b0e0:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
    b0e4:	add	x2, sp, #0x28
    b0e8:	sub	x3, x29, #0x4
    b0ec:	mov	w1, #0x5                   	// #5
    b0f0:	mov	x0, x22
    b0f4:	bl	23b44 <PyInit__decimal@@Base+0x1d090>
    b0f8:	add	x2, sp, #0x28
    b0fc:	sub	x3, x29, #0x4
    b100:	mov	x0, x23
    b104:	mov	x1, x24
    b108:	bl	23aa0 <PyInit__decimal@@Base+0x1cfec>
    b10c:	add	x3, sp, #0x28
    b110:	sub	x4, x29, #0x4
    b114:	mov	x0, x22
    b118:	mov	x1, x22
    b11c:	mov	x2, x23
    b120:	bl	333b0 <PyInit__decimal@@Base+0x2c8fc>
    b124:	ldur	w1, [x29, #-4]
    b128:	mov	x0, x20
    b12c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    b130:	cbz	w0, b298 <PyInit__decimal@@Base+0x47e4>
    b134:	mov	x0, x22
    b138:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    b13c:	mov	x0, x23
    b140:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    b144:	ldr	x8, [x19]
    b148:	subs	x8, x8, #0x1
    b14c:	str	x8, [x19]
    b150:	b.ne	b23c <PyInit__decimal@@Base+0x4788>  // b.any
    b154:	b	b2e4 <PyInit__decimal@@Base+0x4830>
    b158:	mov	x0, x19
    b15c:	mov	x1, x21
    b160:	mov	x2, x20
    b164:	bl	abdc <PyInit__decimal@@Base+0x4128>
    b168:	mov	x19, x0
    b16c:	b	b240 <PyInit__decimal@@Base+0x478c>
    b170:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    b174:	ldr	x8, [x8, #3936]
    b178:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    b17c:	add	x1, x1, #0xcbe
    b180:	ldr	x0, [x8]
    b184:	bl	6590 <PyErr_SetString@plt>
    b188:	mov	x19, xzr
    b18c:	b	b240 <PyInit__decimal@@Base+0x478c>
    b190:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
    b194:	add	x8, x8, #0xe60
    b198:	cmp	x19, x8
    b19c:	b.eq	b1c0 <PyInit__decimal@@Base+0x470c>  // b.none
    b1a0:	ldr	x8, [x19, #304]
    b1a4:	mov	x0, x19
    b1a8:	mov	x1, xzr
    b1ac:	blr	x8
    b1b0:	ldr	q0, [sp, #16]
    b1b4:	mov	x19, x0
    b1b8:	cbnz	x0, b1d8 <PyInit__decimal@@Base+0x4724>
    b1bc:	b	b240 <PyInit__decimal@@Base+0x478c>
    b1c0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    b1c4:	add	x0, x0, #0xe60
    b1c8:	bl	6890 <_PyObject_New@plt>
    b1cc:	ldr	q0, [sp, #16]
    b1d0:	mov	x19, x0
    b1d4:	cbz	x0, b240 <PyInit__decimal@@Base+0x478c>
    b1d8:	mov	w8, #0x30                  	// #48
    b1dc:	mov	x0, x19
    b1e0:	strb	w8, [x0, #24]!
    b1e4:	mov	x9, #0xffffffffffffffff    	// #-1
    b1e8:	mov	w10, #0x4                   	// #4
    b1ec:	add	x8, x0, #0x30
    b1f0:	fcmp	d0, d0
    b1f4:	stur	x9, [x0, #-8]
    b1f8:	stp	xzr, xzr, [x0, #8]
    b1fc:	stp	xzr, x10, [x0, #24]
    b200:	str	x8, [x0, #40]
    b204:	b.vs	b314 <PyInit__decimal@@Base+0x4860>
    b208:	ldr	q1, [sp]
    b20c:	fmov	d0, #1.000000000000000000e+00
    b210:	mov	w2, #0x2                   	// #2
    b214:	fcmp	d1, d0
    b218:	cset	w1, ne  // ne = any
    b21c:	bl	232d4 <PyInit__decimal@@Base+0x1c820>
    b220:	b	b240 <PyInit__decimal@@Base+0x478c>
    b224:	bl	6720 <PyErr_Occurred@plt>
    b228:	cbz	x0, b090 <PyInit__decimal@@Base+0x45dc>
    b22c:	ldr	x8, [x22]
    b230:	subs	x8, x8, #0x1
    b234:	str	x8, [x22]
    b238:	b.eq	b25c <PyInit__decimal@@Base+0x47a8>  // b.none
    b23c:	mov	x19, xzr
    b240:	mov	x0, x19
    b244:	ldp	x20, x19, [sp, #144]
    b248:	ldp	x22, x21, [sp, #128]
    b24c:	ldp	x24, x23, [sp, #112]
    b250:	ldp	x29, x30, [sp, #96]
    b254:	add	sp, sp, #0xa0
    b258:	ret
    b25c:	mov	x0, x22
    b260:	bl	6510 <_Py_Dealloc@plt>
    b264:	mov	x19, xzr
    b268:	b	b240 <PyInit__decimal@@Base+0x478c>
    b26c:	mov	x0, x22
    b270:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    b274:	ldr	x8, [x19]
    b278:	subs	x8, x8, #0x1
    b27c:	str	x8, [x19]
    b280:	b.ne	b28c <PyInit__decimal@@Base+0x47d8>  // b.any
    b284:	mov	x0, x19
    b288:	bl	6510 <_Py_Dealloc@plt>
    b28c:	bl	6520 <PyErr_NoMemory@plt>
    b290:	mov	x19, xzr
    b294:	b	b240 <PyInit__decimal@@Base+0x478c>
    b298:	add	x24, x19, #0x18
    b29c:	add	x3, sp, #0x28
    b2a0:	sub	x4, x29, #0x4
    b2a4:	mov	x0, x24
    b2a8:	mov	x1, x24
    b2ac:	mov	x2, x22
    b2b0:	bl	2ffb0 <PyInit__decimal@@Base+0x294fc>
    b2b4:	mov	x0, x22
    b2b8:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    b2bc:	mov	x0, x23
    b2c0:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
    b2c4:	ldur	w1, [x29, #-4]
    b2c8:	mov	x0, x20
    b2cc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    b2d0:	cbz	w0, b2ec <PyInit__decimal@@Base+0x4838>
    b2d4:	ldr	x8, [x19]
    b2d8:	subs	x8, x8, #0x1
    b2dc:	str	x8, [x19]
    b2e0:	b.ne	b23c <PyInit__decimal@@Base+0x4788>  // b.any
    b2e4:	mov	x0, x19
    b2e8:	b	b260 <PyInit__decimal@@Base+0x47ac>
    b2ec:	ldr	q1, [sp]
    b2f0:	fmov	d0, #1.000000000000000000e+00
    b2f4:	mov	x0, x24
    b2f8:	fcmp	d1, d0
    b2fc:	cset	w1, ne  // ne = any
    b300:	bl	22dbc <PyInit__decimal@@Base+0x1c308>
    b304:	mov	w8, #0x1                   	// #1
    b308:	sub	x8, x8, x21
    b30c:	str	x8, [x24, #8]
    b310:	b	b240 <PyInit__decimal@@Base+0x478c>
    b314:	mov	w2, #0x4                   	// #4
    b318:	mov	w1, wzr
    b31c:	bl	232d4 <PyInit__decimal@@Base+0x1c820>
    b320:	b	b240 <PyInit__decimal@@Base+0x478c>
    b324:	sub	sp, sp, #0x50
    b328:	stp	x29, x30, [sp, #32]
    b32c:	stp	x22, x21, [sp, #48]
    b330:	stp	x20, x19, [sp, #64]
    b334:	add	x29, sp, #0x20
    b338:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    b33c:	ldr	x20, [x20, #4008]
    b340:	mov	x8, x2
    b344:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    b348:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    b34c:	mov	x19, x0
    b350:	add	x2, x2, #0xac
    b354:	add	x3, x3, #0x878
    b358:	add	x4, sp, #0x10
    b35c:	mov	x0, x1
    b360:	mov	x1, x8
    b364:	str	x20, [sp, #16]
    b368:	str	wzr, [sp, #12]
    b36c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b370:	cbz	w0, b474 <PyInit__decimal@@Base+0x49c0>
    b374:	ldr	x8, [sp, #16]
    b378:	cmp	x8, x20
    b37c:	b.eq	b3c0 <PyInit__decimal@@Base+0x490c>  // b.none
    b380:	ldr	x0, [x8, #8]
    b384:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b388:	add	x8, x8, #0x0
    b38c:	cmp	x0, x8
    b390:	b.eq	b3fc <PyInit__decimal@@Base+0x4948>  // b.none
    b394:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    b398:	add	x1, x1, #0x0
    b39c:	bl	6900 <PyType_IsSubtype@plt>
    b3a0:	cbnz	w0, b3fc <PyInit__decimal@@Base+0x4948>
    b3a4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    b3a8:	ldr	x8, [x8, #3936]
    b3ac:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    b3b0:	add	x1, x1, #0xf61
    b3b4:	ldr	x0, [x8]
    b3b8:	bl	6590 <PyErr_SetString@plt>
    b3bc:	b	b474 <PyInit__decimal@@Base+0x49c0>
    b3c0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    b3c4:	ldr	x0, [x21, #1400]
    b3c8:	sub	x2, x29, #0x8
    b3cc:	mov	x1, xzr
    b3d0:	bl	6680 <PyContextVar_Get@plt>
    b3d4:	tbnz	w0, #31, b50c <PyInit__decimal@@Base+0x4a58>
    b3d8:	ldur	x20, [x29, #-8]
    b3dc:	cbz	x20, b490 <PyInit__decimal@@Base+0x49dc>
    b3e0:	str	x20, [sp, #16]
    b3e4:	ldr	x8, [x20]
    b3e8:	subs	x8, x8, #0x1
    b3ec:	str	x8, [x20]
    b3f0:	b.ne	b3fc <PyInit__decimal@@Base+0x4948>  // b.any
    b3f4:	mov	x0, x20
    b3f8:	bl	6510 <_Py_Dealloc@plt>
    b3fc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    b400:	add	x0, x0, #0xe60
    b404:	bl	6890 <_PyObject_New@plt>
    b408:	mov	x20, x0
    b40c:	cbz	x0, b478 <PyInit__decimal@@Base+0x49c4>
    b410:	mov	w8, #0x30                  	// #48
    b414:	mov	x0, x20
    b418:	strb	w8, [x0, #24]!
    b41c:	mov	x9, #0xffffffffffffffff    	// #-1
    b420:	mov	w10, #0x4                   	// #4
    b424:	add	x8, x0, #0x30
    b428:	stur	x9, [x0, #-8]
    b42c:	stp	xzr, xzr, [x0, #8]
    b430:	stp	xzr, x10, [x0, #24]
    b434:	str	x8, [x0, #40]
    b438:	ldr	x8, [sp, #16]
    b43c:	add	x1, x19, #0x18
    b440:	add	x3, sp, #0xc
    b444:	add	x2, x8, #0x10
    b448:	bl	2d8c4 <PyInit__decimal@@Base+0x26e10>
    b44c:	ldr	x0, [sp, #16]
    b450:	ldr	w1, [sp, #12]
    b454:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    b458:	cbz	w0, b478 <PyInit__decimal@@Base+0x49c4>
    b45c:	ldr	x8, [x20]
    b460:	subs	x8, x8, #0x1
    b464:	str	x8, [x20]
    b468:	b.ne	b474 <PyInit__decimal@@Base+0x49c0>  // b.any
    b46c:	mov	x0, x20
    b470:	bl	6510 <_Py_Dealloc@plt>
    b474:	mov	x20, xzr
    b478:	mov	x0, x20
    b47c:	ldp	x20, x19, [sp, #64]
    b480:	ldp	x22, x21, [sp, #48]
    b484:	ldp	x29, x30, [sp, #32]
    b488:	add	sp, sp, #0x50
    b48c:	ret
    b490:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b494:	ldr	x22, [x8, #1496]
    b498:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    b49c:	add	x0, x0, #0x0
    b4a0:	mov	x1, xzr
    b4a4:	bl	6780 <PyObject_CallObject@plt>
    b4a8:	cbz	x0, b50c <PyInit__decimal@@Base+0x4a58>
    b4ac:	ldp	q1, q0, [x22, #32]
    b4b0:	ldr	q2, [x22, #16]
    b4b4:	mov	x20, x0
    b4b8:	mov	x1, x20
    b4bc:	stp	q1, q0, [x0, #32]
    b4c0:	str	q2, [x0, #16]
    b4c4:	ldr	w8, [x22, #80]
    b4c8:	stp	wzr, wzr, [x0, #44]
    b4cc:	str	w8, [x0, #80]
    b4d0:	ldr	x0, [x21, #1400]
    b4d4:	bl	65c0 <PyContextVar_Set@plt>
    b4d8:	cbz	x0, b4f4 <PyInit__decimal@@Base+0x4a40>
    b4dc:	ldr	x8, [x0]
    b4e0:	subs	x8, x8, #0x1
    b4e4:	str	x8, [x0]
    b4e8:	b.ne	b3e0 <PyInit__decimal@@Base+0x492c>  // b.any
    b4ec:	bl	6510 <_Py_Dealloc@plt>
    b4f0:	b	b3e0 <PyInit__decimal@@Base+0x492c>
    b4f4:	ldr	x8, [x20]
    b4f8:	subs	x8, x8, #0x1
    b4fc:	str	x8, [x20]
    b500:	b.ne	b50c <PyInit__decimal@@Base+0x4a58>  // b.any
    b504:	mov	x0, x20
    b508:	bl	6510 <_Py_Dealloc@plt>
    b50c:	mov	x20, xzr
    b510:	str	xzr, [sp, #16]
    b514:	b	b478 <PyInit__decimal@@Base+0x49c4>
    b518:	sub	sp, sp, #0x50
    b51c:	stp	x29, x30, [sp, #32]
    b520:	stp	x22, x21, [sp, #48]
    b524:	stp	x20, x19, [sp, #64]
    b528:	add	x29, sp, #0x20
    b52c:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    b530:	ldr	x20, [x20, #4008]
    b534:	mov	x8, x2
    b538:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    b53c:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    b540:	mov	x19, x0
    b544:	add	x2, x2, #0xac
    b548:	add	x3, x3, #0x888
    b54c:	add	x4, sp, #0x10
    b550:	mov	x0, x1
    b554:	mov	x1, x8
    b558:	str	x20, [sp, #16]
    b55c:	str	wzr, [sp, #12]
    b560:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b564:	cbz	w0, b668 <PyInit__decimal@@Base+0x4bb4>
    b568:	ldr	x8, [sp, #16]
    b56c:	cmp	x8, x20
    b570:	b.eq	b5b4 <PyInit__decimal@@Base+0x4b00>  // b.none
    b574:	ldr	x0, [x8, #8]
    b578:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b57c:	add	x8, x8, #0x0
    b580:	cmp	x0, x8
    b584:	b.eq	b5f0 <PyInit__decimal@@Base+0x4b3c>  // b.none
    b588:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    b58c:	add	x1, x1, #0x0
    b590:	bl	6900 <PyType_IsSubtype@plt>
    b594:	cbnz	w0, b5f0 <PyInit__decimal@@Base+0x4b3c>
    b598:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    b59c:	ldr	x8, [x8, #3936]
    b5a0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    b5a4:	add	x1, x1, #0xf61
    b5a8:	ldr	x0, [x8]
    b5ac:	bl	6590 <PyErr_SetString@plt>
    b5b0:	b	b668 <PyInit__decimal@@Base+0x4bb4>
    b5b4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    b5b8:	ldr	x0, [x21, #1400]
    b5bc:	sub	x2, x29, #0x8
    b5c0:	mov	x1, xzr
    b5c4:	bl	6680 <PyContextVar_Get@plt>
    b5c8:	tbnz	w0, #31, b700 <PyInit__decimal@@Base+0x4c4c>
    b5cc:	ldur	x20, [x29, #-8]
    b5d0:	cbz	x20, b684 <PyInit__decimal@@Base+0x4bd0>
    b5d4:	str	x20, [sp, #16]
    b5d8:	ldr	x8, [x20]
    b5dc:	subs	x8, x8, #0x1
    b5e0:	str	x8, [x20]
    b5e4:	b.ne	b5f0 <PyInit__decimal@@Base+0x4b3c>  // b.any
    b5e8:	mov	x0, x20
    b5ec:	bl	6510 <_Py_Dealloc@plt>
    b5f0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    b5f4:	add	x0, x0, #0xe60
    b5f8:	bl	6890 <_PyObject_New@plt>
    b5fc:	mov	x20, x0
    b600:	cbz	x0, b66c <PyInit__decimal@@Base+0x4bb8>
    b604:	mov	w8, #0x30                  	// #48
    b608:	mov	x0, x20
    b60c:	strb	w8, [x0, #24]!
    b610:	mov	x9, #0xffffffffffffffff    	// #-1
    b614:	mov	w10, #0x4                   	// #4
    b618:	add	x8, x0, #0x30
    b61c:	stur	x9, [x0, #-8]
    b620:	stp	xzr, xzr, [x0, #8]
    b624:	stp	xzr, x10, [x0, #24]
    b628:	str	x8, [x0, #40]
    b62c:	ldr	x8, [sp, #16]
    b630:	add	x1, x19, #0x18
    b634:	add	x3, sp, #0xc
    b638:	add	x2, x8, #0x10
    b63c:	bl	2ffec <PyInit__decimal@@Base+0x29538>
    b640:	ldr	x0, [sp, #16]
    b644:	ldr	w1, [sp, #12]
    b648:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    b64c:	cbz	w0, b66c <PyInit__decimal@@Base+0x4bb8>
    b650:	ldr	x8, [x20]
    b654:	subs	x8, x8, #0x1
    b658:	str	x8, [x20]
    b65c:	b.ne	b668 <PyInit__decimal@@Base+0x4bb4>  // b.any
    b660:	mov	x0, x20
    b664:	bl	6510 <_Py_Dealloc@plt>
    b668:	mov	x20, xzr
    b66c:	mov	x0, x20
    b670:	ldp	x20, x19, [sp, #64]
    b674:	ldp	x22, x21, [sp, #48]
    b678:	ldp	x29, x30, [sp, #32]
    b67c:	add	sp, sp, #0x50
    b680:	ret
    b684:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b688:	ldr	x22, [x8, #1496]
    b68c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    b690:	add	x0, x0, #0x0
    b694:	mov	x1, xzr
    b698:	bl	6780 <PyObject_CallObject@plt>
    b69c:	cbz	x0, b700 <PyInit__decimal@@Base+0x4c4c>
    b6a0:	ldp	q1, q0, [x22, #32]
    b6a4:	ldr	q2, [x22, #16]
    b6a8:	mov	x20, x0
    b6ac:	mov	x1, x20
    b6b0:	stp	q1, q0, [x0, #32]
    b6b4:	str	q2, [x0, #16]
    b6b8:	ldr	w8, [x22, #80]
    b6bc:	stp	wzr, wzr, [x0, #44]
    b6c0:	str	w8, [x0, #80]
    b6c4:	ldr	x0, [x21, #1400]
    b6c8:	bl	65c0 <PyContextVar_Set@plt>
    b6cc:	cbz	x0, b6e8 <PyInit__decimal@@Base+0x4c34>
    b6d0:	ldr	x8, [x0]
    b6d4:	subs	x8, x8, #0x1
    b6d8:	str	x8, [x0]
    b6dc:	b.ne	b5d4 <PyInit__decimal@@Base+0x4b20>  // b.any
    b6e0:	bl	6510 <_Py_Dealloc@plt>
    b6e4:	b	b5d4 <PyInit__decimal@@Base+0x4b20>
    b6e8:	ldr	x8, [x20]
    b6ec:	subs	x8, x8, #0x1
    b6f0:	str	x8, [x20]
    b6f4:	b.ne	b700 <PyInit__decimal@@Base+0x4c4c>  // b.any
    b6f8:	mov	x0, x20
    b6fc:	bl	6510 <_Py_Dealloc@plt>
    b700:	mov	x20, xzr
    b704:	str	xzr, [sp, #16]
    b708:	b	b66c <PyInit__decimal@@Base+0x4bb8>
    b70c:	sub	sp, sp, #0x50
    b710:	stp	x29, x30, [sp, #32]
    b714:	stp	x22, x21, [sp, #48]
    b718:	stp	x20, x19, [sp, #64]
    b71c:	add	x29, sp, #0x20
    b720:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    b724:	ldr	x20, [x20, #4008]
    b728:	mov	x8, x2
    b72c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    b730:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    b734:	mov	x19, x0
    b738:	add	x2, x2, #0xac
    b73c:	add	x3, x3, #0x898
    b740:	add	x4, sp, #0x10
    b744:	mov	x0, x1
    b748:	mov	x1, x8
    b74c:	str	x20, [sp, #16]
    b750:	str	wzr, [sp, #12]
    b754:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b758:	cbz	w0, b85c <PyInit__decimal@@Base+0x4da8>
    b75c:	ldr	x8, [sp, #16]
    b760:	cmp	x8, x20
    b764:	b.eq	b7a8 <PyInit__decimal@@Base+0x4cf4>  // b.none
    b768:	ldr	x0, [x8, #8]
    b76c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b770:	add	x8, x8, #0x0
    b774:	cmp	x0, x8
    b778:	b.eq	b7e4 <PyInit__decimal@@Base+0x4d30>  // b.none
    b77c:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    b780:	add	x1, x1, #0x0
    b784:	bl	6900 <PyType_IsSubtype@plt>
    b788:	cbnz	w0, b7e4 <PyInit__decimal@@Base+0x4d30>
    b78c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    b790:	ldr	x8, [x8, #3936]
    b794:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    b798:	add	x1, x1, #0xf61
    b79c:	ldr	x0, [x8]
    b7a0:	bl	6590 <PyErr_SetString@plt>
    b7a4:	b	b85c <PyInit__decimal@@Base+0x4da8>
    b7a8:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    b7ac:	ldr	x0, [x21, #1400]
    b7b0:	sub	x2, x29, #0x8
    b7b4:	mov	x1, xzr
    b7b8:	bl	6680 <PyContextVar_Get@plt>
    b7bc:	tbnz	w0, #31, b8f4 <PyInit__decimal@@Base+0x4e40>
    b7c0:	ldur	x20, [x29, #-8]
    b7c4:	cbz	x20, b878 <PyInit__decimal@@Base+0x4dc4>
    b7c8:	str	x20, [sp, #16]
    b7cc:	ldr	x8, [x20]
    b7d0:	subs	x8, x8, #0x1
    b7d4:	str	x8, [x20]
    b7d8:	b.ne	b7e4 <PyInit__decimal@@Base+0x4d30>  // b.any
    b7dc:	mov	x0, x20
    b7e0:	bl	6510 <_Py_Dealloc@plt>
    b7e4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    b7e8:	add	x0, x0, #0xe60
    b7ec:	bl	6890 <_PyObject_New@plt>
    b7f0:	mov	x20, x0
    b7f4:	cbz	x0, b860 <PyInit__decimal@@Base+0x4dac>
    b7f8:	mov	w8, #0x30                  	// #48
    b7fc:	mov	x0, x20
    b800:	strb	w8, [x0, #24]!
    b804:	mov	x9, #0xffffffffffffffff    	// #-1
    b808:	mov	w10, #0x4                   	// #4
    b80c:	add	x8, x0, #0x30
    b810:	stur	x9, [x0, #-8]
    b814:	stp	xzr, xzr, [x0, #8]
    b818:	stp	xzr, x10, [x0, #24]
    b81c:	str	x8, [x0, #40]
    b820:	ldr	x8, [sp, #16]
    b824:	add	x1, x19, #0x18
    b828:	add	x3, sp, #0xc
    b82c:	add	x2, x8, #0x10
    b830:	bl	3126c <PyInit__decimal@@Base+0x2a7b8>
    b834:	ldr	x0, [sp, #16]
    b838:	ldr	w1, [sp, #12]
    b83c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    b840:	cbz	w0, b860 <PyInit__decimal@@Base+0x4dac>
    b844:	ldr	x8, [x20]
    b848:	subs	x8, x8, #0x1
    b84c:	str	x8, [x20]
    b850:	b.ne	b85c <PyInit__decimal@@Base+0x4da8>  // b.any
    b854:	mov	x0, x20
    b858:	bl	6510 <_Py_Dealloc@plt>
    b85c:	mov	x20, xzr
    b860:	mov	x0, x20
    b864:	ldp	x20, x19, [sp, #64]
    b868:	ldp	x22, x21, [sp, #48]
    b86c:	ldp	x29, x30, [sp, #32]
    b870:	add	sp, sp, #0x50
    b874:	ret
    b878:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b87c:	ldr	x22, [x8, #1496]
    b880:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    b884:	add	x0, x0, #0x0
    b888:	mov	x1, xzr
    b88c:	bl	6780 <PyObject_CallObject@plt>
    b890:	cbz	x0, b8f4 <PyInit__decimal@@Base+0x4e40>
    b894:	ldp	q1, q0, [x22, #32]
    b898:	ldr	q2, [x22, #16]
    b89c:	mov	x20, x0
    b8a0:	mov	x1, x20
    b8a4:	stp	q1, q0, [x0, #32]
    b8a8:	str	q2, [x0, #16]
    b8ac:	ldr	w8, [x22, #80]
    b8b0:	stp	wzr, wzr, [x0, #44]
    b8b4:	str	w8, [x0, #80]
    b8b8:	ldr	x0, [x21, #1400]
    b8bc:	bl	65c0 <PyContextVar_Set@plt>
    b8c0:	cbz	x0, b8dc <PyInit__decimal@@Base+0x4e28>
    b8c4:	ldr	x8, [x0]
    b8c8:	subs	x8, x8, #0x1
    b8cc:	str	x8, [x0]
    b8d0:	b.ne	b7c8 <PyInit__decimal@@Base+0x4d14>  // b.any
    b8d4:	bl	6510 <_Py_Dealloc@plt>
    b8d8:	b	b7c8 <PyInit__decimal@@Base+0x4d14>
    b8dc:	ldr	x8, [x20]
    b8e0:	subs	x8, x8, #0x1
    b8e4:	str	x8, [x20]
    b8e8:	b.ne	b8f4 <PyInit__decimal@@Base+0x4e40>  // b.any
    b8ec:	mov	x0, x20
    b8f0:	bl	6510 <_Py_Dealloc@plt>
    b8f4:	mov	x20, xzr
    b8f8:	str	xzr, [sp, #16]
    b8fc:	b	b860 <PyInit__decimal@@Base+0x4dac>
    b900:	sub	sp, sp, #0x50
    b904:	stp	x29, x30, [sp, #32]
    b908:	stp	x22, x21, [sp, #48]
    b90c:	stp	x20, x19, [sp, #64]
    b910:	add	x29, sp, #0x20
    b914:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    b918:	ldr	x20, [x20, #4008]
    b91c:	mov	x8, x2
    b920:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    b924:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    b928:	mov	x19, x0
    b92c:	add	x2, x2, #0xac
    b930:	add	x3, x3, #0x8a8
    b934:	add	x4, sp, #0x10
    b938:	mov	x0, x1
    b93c:	mov	x1, x8
    b940:	str	x20, [sp, #16]
    b944:	str	wzr, [sp, #12]
    b948:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b94c:	cbz	w0, ba50 <PyInit__decimal@@Base+0x4f9c>
    b950:	ldr	x8, [sp, #16]
    b954:	cmp	x8, x20
    b958:	b.eq	b99c <PyInit__decimal@@Base+0x4ee8>  // b.none
    b95c:	ldr	x0, [x8, #8]
    b960:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    b964:	add	x8, x8, #0x0
    b968:	cmp	x0, x8
    b96c:	b.eq	b9d8 <PyInit__decimal@@Base+0x4f24>  // b.none
    b970:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    b974:	add	x1, x1, #0x0
    b978:	bl	6900 <PyType_IsSubtype@plt>
    b97c:	cbnz	w0, b9d8 <PyInit__decimal@@Base+0x4f24>
    b980:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    b984:	ldr	x8, [x8, #3936]
    b988:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    b98c:	add	x1, x1, #0xf61
    b990:	ldr	x0, [x8]
    b994:	bl	6590 <PyErr_SetString@plt>
    b998:	b	ba50 <PyInit__decimal@@Base+0x4f9c>
    b99c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    b9a0:	ldr	x0, [x21, #1400]
    b9a4:	sub	x2, x29, #0x8
    b9a8:	mov	x1, xzr
    b9ac:	bl	6680 <PyContextVar_Get@plt>
    b9b0:	tbnz	w0, #31, bae8 <PyInit__decimal@@Base+0x5034>
    b9b4:	ldur	x20, [x29, #-8]
    b9b8:	cbz	x20, ba6c <PyInit__decimal@@Base+0x4fb8>
    b9bc:	str	x20, [sp, #16]
    b9c0:	ldr	x8, [x20]
    b9c4:	subs	x8, x8, #0x1
    b9c8:	str	x8, [x20]
    b9cc:	b.ne	b9d8 <PyInit__decimal@@Base+0x4f24>  // b.any
    b9d0:	mov	x0, x20
    b9d4:	bl	6510 <_Py_Dealloc@plt>
    b9d8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    b9dc:	add	x0, x0, #0xe60
    b9e0:	bl	6890 <_PyObject_New@plt>
    b9e4:	mov	x20, x0
    b9e8:	cbz	x0, ba54 <PyInit__decimal@@Base+0x4fa0>
    b9ec:	mov	w8, #0x30                  	// #48
    b9f0:	mov	x0, x20
    b9f4:	strb	w8, [x0, #24]!
    b9f8:	mov	x9, #0xffffffffffffffff    	// #-1
    b9fc:	mov	w10, #0x4                   	// #4
    ba00:	add	x8, x0, #0x30
    ba04:	stur	x9, [x0, #-8]
    ba08:	stp	xzr, xzr, [x0, #8]
    ba0c:	stp	xzr, x10, [x0, #24]
    ba10:	str	x8, [x0, #40]
    ba14:	ldr	x8, [sp, #16]
    ba18:	add	x1, x19, #0x18
    ba1c:	add	x3, sp, #0xc
    ba20:	add	x2, x8, #0x10
    ba24:	bl	32b10 <PyInit__decimal@@Base+0x2c05c>
    ba28:	ldr	x0, [sp, #16]
    ba2c:	ldr	w1, [sp, #12]
    ba30:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    ba34:	cbz	w0, ba54 <PyInit__decimal@@Base+0x4fa0>
    ba38:	ldr	x8, [x20]
    ba3c:	subs	x8, x8, #0x1
    ba40:	str	x8, [x20]
    ba44:	b.ne	ba50 <PyInit__decimal@@Base+0x4f9c>  // b.any
    ba48:	mov	x0, x20
    ba4c:	bl	6510 <_Py_Dealloc@plt>
    ba50:	mov	x20, xzr
    ba54:	mov	x0, x20
    ba58:	ldp	x20, x19, [sp, #64]
    ba5c:	ldp	x22, x21, [sp, #48]
    ba60:	ldp	x29, x30, [sp, #32]
    ba64:	add	sp, sp, #0x50
    ba68:	ret
    ba6c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    ba70:	ldr	x22, [x8, #1496]
    ba74:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    ba78:	add	x0, x0, #0x0
    ba7c:	mov	x1, xzr
    ba80:	bl	6780 <PyObject_CallObject@plt>
    ba84:	cbz	x0, bae8 <PyInit__decimal@@Base+0x5034>
    ba88:	ldp	q1, q0, [x22, #32]
    ba8c:	ldr	q2, [x22, #16]
    ba90:	mov	x20, x0
    ba94:	mov	x1, x20
    ba98:	stp	q1, q0, [x0, #32]
    ba9c:	str	q2, [x0, #16]
    baa0:	ldr	w8, [x22, #80]
    baa4:	stp	wzr, wzr, [x0, #44]
    baa8:	str	w8, [x0, #80]
    baac:	ldr	x0, [x21, #1400]
    bab0:	bl	65c0 <PyContextVar_Set@plt>
    bab4:	cbz	x0, bad0 <PyInit__decimal@@Base+0x501c>
    bab8:	ldr	x8, [x0]
    babc:	subs	x8, x8, #0x1
    bac0:	str	x8, [x0]
    bac4:	b.ne	b9bc <PyInit__decimal@@Base+0x4f08>  // b.any
    bac8:	bl	6510 <_Py_Dealloc@plt>
    bacc:	b	b9bc <PyInit__decimal@@Base+0x4f08>
    bad0:	ldr	x8, [x20]
    bad4:	subs	x8, x8, #0x1
    bad8:	str	x8, [x20]
    badc:	b.ne	bae8 <PyInit__decimal@@Base+0x5034>  // b.any
    bae0:	mov	x0, x20
    bae4:	bl	6510 <_Py_Dealloc@plt>
    bae8:	mov	x20, xzr
    baec:	str	xzr, [sp, #16]
    baf0:	b	ba54 <PyInit__decimal@@Base+0x4fa0>
    baf4:	sub	sp, sp, #0x50
    baf8:	stp	x29, x30, [sp, #32]
    bafc:	stp	x22, x21, [sp, #48]
    bb00:	stp	x20, x19, [sp, #64]
    bb04:	add	x29, sp, #0x20
    bb08:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    bb0c:	ldr	x20, [x20, #4008]
    bb10:	mov	x8, x2
    bb14:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    bb18:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    bb1c:	mov	x19, x0
    bb20:	add	x2, x2, #0xac
    bb24:	add	x3, x3, #0x8b8
    bb28:	add	x4, sp, #0x10
    bb2c:	mov	x0, x1
    bb30:	mov	x1, x8
    bb34:	str	x20, [sp, #16]
    bb38:	str	wzr, [sp, #12]
    bb3c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    bb40:	cbz	w0, bc44 <PyInit__decimal@@Base+0x5190>
    bb44:	ldr	x8, [sp, #16]
    bb48:	cmp	x8, x20
    bb4c:	b.eq	bb90 <PyInit__decimal@@Base+0x50dc>  // b.none
    bb50:	ldr	x0, [x8, #8]
    bb54:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    bb58:	add	x8, x8, #0x0
    bb5c:	cmp	x0, x8
    bb60:	b.eq	bbcc <PyInit__decimal@@Base+0x5118>  // b.none
    bb64:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    bb68:	add	x1, x1, #0x0
    bb6c:	bl	6900 <PyType_IsSubtype@plt>
    bb70:	cbnz	w0, bbcc <PyInit__decimal@@Base+0x5118>
    bb74:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    bb78:	ldr	x8, [x8, #3936]
    bb7c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    bb80:	add	x1, x1, #0xf61
    bb84:	ldr	x0, [x8]
    bb88:	bl	6590 <PyErr_SetString@plt>
    bb8c:	b	bc44 <PyInit__decimal@@Base+0x5190>
    bb90:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    bb94:	ldr	x0, [x21, #1400]
    bb98:	sub	x2, x29, #0x8
    bb9c:	mov	x1, xzr
    bba0:	bl	6680 <PyContextVar_Get@plt>
    bba4:	tbnz	w0, #31, bcdc <PyInit__decimal@@Base+0x5228>
    bba8:	ldur	x20, [x29, #-8]
    bbac:	cbz	x20, bc60 <PyInit__decimal@@Base+0x51ac>
    bbb0:	str	x20, [sp, #16]
    bbb4:	ldr	x8, [x20]
    bbb8:	subs	x8, x8, #0x1
    bbbc:	str	x8, [x20]
    bbc0:	b.ne	bbcc <PyInit__decimal@@Base+0x5118>  // b.any
    bbc4:	mov	x0, x20
    bbc8:	bl	6510 <_Py_Dealloc@plt>
    bbcc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    bbd0:	add	x0, x0, #0xe60
    bbd4:	bl	6890 <_PyObject_New@plt>
    bbd8:	mov	x20, x0
    bbdc:	cbz	x0, bc48 <PyInit__decimal@@Base+0x5194>
    bbe0:	mov	w8, #0x30                  	// #48
    bbe4:	mov	x0, x20
    bbe8:	strb	w8, [x0, #24]!
    bbec:	mov	x9, #0xffffffffffffffff    	// #-1
    bbf0:	mov	w10, #0x4                   	// #4
    bbf4:	add	x8, x0, #0x30
    bbf8:	stur	x9, [x0, #-8]
    bbfc:	stp	xzr, xzr, [x0, #8]
    bc00:	stp	xzr, x10, [x0, #24]
    bc04:	str	x8, [x0, #40]
    bc08:	ldr	x8, [sp, #16]
    bc0c:	add	x1, x19, #0x18
    bc10:	add	x3, sp, #0xc
    bc14:	add	x2, x8, #0x10
    bc18:	bl	32e8c <PyInit__decimal@@Base+0x2c3d8>
    bc1c:	ldr	x0, [sp, #16]
    bc20:	ldr	w1, [sp, #12]
    bc24:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    bc28:	cbz	w0, bc48 <PyInit__decimal@@Base+0x5194>
    bc2c:	ldr	x8, [x20]
    bc30:	subs	x8, x8, #0x1
    bc34:	str	x8, [x20]
    bc38:	b.ne	bc44 <PyInit__decimal@@Base+0x5190>  // b.any
    bc3c:	mov	x0, x20
    bc40:	bl	6510 <_Py_Dealloc@plt>
    bc44:	mov	x20, xzr
    bc48:	mov	x0, x20
    bc4c:	ldp	x20, x19, [sp, #64]
    bc50:	ldp	x22, x21, [sp, #48]
    bc54:	ldp	x29, x30, [sp, #32]
    bc58:	add	sp, sp, #0x50
    bc5c:	ret
    bc60:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    bc64:	ldr	x22, [x8, #1496]
    bc68:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    bc6c:	add	x0, x0, #0x0
    bc70:	mov	x1, xzr
    bc74:	bl	6780 <PyObject_CallObject@plt>
    bc78:	cbz	x0, bcdc <PyInit__decimal@@Base+0x5228>
    bc7c:	ldp	q1, q0, [x22, #32]
    bc80:	ldr	q2, [x22, #16]
    bc84:	mov	x20, x0
    bc88:	mov	x1, x20
    bc8c:	stp	q1, q0, [x0, #32]
    bc90:	str	q2, [x0, #16]
    bc94:	ldr	w8, [x22, #80]
    bc98:	stp	wzr, wzr, [x0, #44]
    bc9c:	str	w8, [x0, #80]
    bca0:	ldr	x0, [x21, #1400]
    bca4:	bl	65c0 <PyContextVar_Set@plt>
    bca8:	cbz	x0, bcc4 <PyInit__decimal@@Base+0x5210>
    bcac:	ldr	x8, [x0]
    bcb0:	subs	x8, x8, #0x1
    bcb4:	str	x8, [x0]
    bcb8:	b.ne	bbb0 <PyInit__decimal@@Base+0x50fc>  // b.any
    bcbc:	bl	6510 <_Py_Dealloc@plt>
    bcc0:	b	bbb0 <PyInit__decimal@@Base+0x50fc>
    bcc4:	ldr	x8, [x20]
    bcc8:	subs	x8, x8, #0x1
    bccc:	str	x8, [x20]
    bcd0:	b.ne	bcdc <PyInit__decimal@@Base+0x5228>  // b.any
    bcd4:	mov	x0, x20
    bcd8:	bl	6510 <_Py_Dealloc@plt>
    bcdc:	mov	x20, xzr
    bce0:	str	xzr, [sp, #16]
    bce4:	b	bc48 <PyInit__decimal@@Base+0x5194>
    bce8:	sub	sp, sp, #0x50
    bcec:	stp	x29, x30, [sp, #32]
    bcf0:	stp	x22, x21, [sp, #48]
    bcf4:	stp	x20, x19, [sp, #64]
    bcf8:	add	x29, sp, #0x20
    bcfc:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    bd00:	ldr	x20, [x20, #4008]
    bd04:	mov	x8, x2
    bd08:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    bd0c:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    bd10:	mov	x19, x0
    bd14:	add	x2, x2, #0xac
    bd18:	add	x3, x3, #0x8c8
    bd1c:	add	x4, sp, #0x10
    bd20:	mov	x0, x1
    bd24:	mov	x1, x8
    bd28:	str	x20, [sp, #16]
    bd2c:	str	wzr, [sp, #12]
    bd30:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    bd34:	cbz	w0, be38 <PyInit__decimal@@Base+0x5384>
    bd38:	ldr	x8, [sp, #16]
    bd3c:	cmp	x8, x20
    bd40:	b.eq	bd84 <PyInit__decimal@@Base+0x52d0>  // b.none
    bd44:	ldr	x0, [x8, #8]
    bd48:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    bd4c:	add	x8, x8, #0x0
    bd50:	cmp	x0, x8
    bd54:	b.eq	bdc0 <PyInit__decimal@@Base+0x530c>  // b.none
    bd58:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    bd5c:	add	x1, x1, #0x0
    bd60:	bl	6900 <PyType_IsSubtype@plt>
    bd64:	cbnz	w0, bdc0 <PyInit__decimal@@Base+0x530c>
    bd68:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    bd6c:	ldr	x8, [x8, #3936]
    bd70:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    bd74:	add	x1, x1, #0xf61
    bd78:	ldr	x0, [x8]
    bd7c:	bl	6590 <PyErr_SetString@plt>
    bd80:	b	be38 <PyInit__decimal@@Base+0x5384>
    bd84:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    bd88:	ldr	x0, [x21, #1400]
    bd8c:	sub	x2, x29, #0x8
    bd90:	mov	x1, xzr
    bd94:	bl	6680 <PyContextVar_Get@plt>
    bd98:	tbnz	w0, #31, bed0 <PyInit__decimal@@Base+0x541c>
    bd9c:	ldur	x20, [x29, #-8]
    bda0:	cbz	x20, be54 <PyInit__decimal@@Base+0x53a0>
    bda4:	str	x20, [sp, #16]
    bda8:	ldr	x8, [x20]
    bdac:	subs	x8, x8, #0x1
    bdb0:	str	x8, [x20]
    bdb4:	b.ne	bdc0 <PyInit__decimal@@Base+0x530c>  // b.any
    bdb8:	mov	x0, x20
    bdbc:	bl	6510 <_Py_Dealloc@plt>
    bdc0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    bdc4:	add	x0, x0, #0xe60
    bdc8:	bl	6890 <_PyObject_New@plt>
    bdcc:	mov	x20, x0
    bdd0:	cbz	x0, be3c <PyInit__decimal@@Base+0x5388>
    bdd4:	mov	w8, #0x30                  	// #48
    bdd8:	mov	x0, x20
    bddc:	strb	w8, [x0, #24]!
    bde0:	mov	x9, #0xffffffffffffffff    	// #-1
    bde4:	mov	w10, #0x4                   	// #4
    bde8:	add	x8, x0, #0x30
    bdec:	stur	x9, [x0, #-8]
    bdf0:	stp	xzr, xzr, [x0, #8]
    bdf4:	stp	xzr, x10, [x0, #24]
    bdf8:	str	x8, [x0, #40]
    bdfc:	ldr	x8, [sp, #16]
    be00:	add	x1, x19, #0x18
    be04:	add	x3, sp, #0xc
    be08:	add	x2, x8, #0x10
    be0c:	bl	36bfc <PyInit__decimal@@Base+0x30148>
    be10:	ldr	x0, [sp, #16]
    be14:	ldr	w1, [sp, #12]
    be18:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    be1c:	cbz	w0, be3c <PyInit__decimal@@Base+0x5388>
    be20:	ldr	x8, [x20]
    be24:	subs	x8, x8, #0x1
    be28:	str	x8, [x20]
    be2c:	b.ne	be38 <PyInit__decimal@@Base+0x5384>  // b.any
    be30:	mov	x0, x20
    be34:	bl	6510 <_Py_Dealloc@plt>
    be38:	mov	x20, xzr
    be3c:	mov	x0, x20
    be40:	ldp	x20, x19, [sp, #64]
    be44:	ldp	x22, x21, [sp, #48]
    be48:	ldp	x29, x30, [sp, #32]
    be4c:	add	sp, sp, #0x50
    be50:	ret
    be54:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    be58:	ldr	x22, [x8, #1496]
    be5c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    be60:	add	x0, x0, #0x0
    be64:	mov	x1, xzr
    be68:	bl	6780 <PyObject_CallObject@plt>
    be6c:	cbz	x0, bed0 <PyInit__decimal@@Base+0x541c>
    be70:	ldp	q1, q0, [x22, #32]
    be74:	ldr	q2, [x22, #16]
    be78:	mov	x20, x0
    be7c:	mov	x1, x20
    be80:	stp	q1, q0, [x0, #32]
    be84:	str	q2, [x0, #16]
    be88:	ldr	w8, [x22, #80]
    be8c:	stp	wzr, wzr, [x0, #44]
    be90:	str	w8, [x0, #80]
    be94:	ldr	x0, [x21, #1400]
    be98:	bl	65c0 <PyContextVar_Set@plt>
    be9c:	cbz	x0, beb8 <PyInit__decimal@@Base+0x5404>
    bea0:	ldr	x8, [x0]
    bea4:	subs	x8, x8, #0x1
    bea8:	str	x8, [x0]
    beac:	b.ne	bda4 <PyInit__decimal@@Base+0x52f0>  // b.any
    beb0:	bl	6510 <_Py_Dealloc@plt>
    beb4:	b	bda4 <PyInit__decimal@@Base+0x52f0>
    beb8:	ldr	x8, [x20]
    bebc:	subs	x8, x8, #0x1
    bec0:	str	x8, [x20]
    bec4:	b.ne	bed0 <PyInit__decimal@@Base+0x541c>  // b.any
    bec8:	mov	x0, x20
    becc:	bl	6510 <_Py_Dealloc@plt>
    bed0:	mov	x20, xzr
    bed4:	str	xzr, [sp, #16]
    bed8:	b	be3c <PyInit__decimal@@Base+0x5388>
    bedc:	sub	sp, sp, #0x80
    bee0:	stp	x29, x30, [sp, #64]
    bee4:	str	x23, [sp, #80]
    bee8:	stp	x22, x21, [sp, #96]
    beec:	stp	x20, x19, [sp, #112]
    bef0:	add	x29, sp, #0x40
    bef4:	adrp	x21, 56000 <PyInit__decimal@@Base+0x4f54c>
    bef8:	ldr	x21, [x21, #4008]
    befc:	mov	x8, x2
    bf00:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    bf04:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    bf08:	mov	x19, x0
    bf0c:	add	x2, x2, #0x7c
    bf10:	add	x3, x3, #0x958
    bf14:	add	x4, x29, #0x18
    bf18:	sub	x5, x29, #0x8
    bf1c:	mov	x0, x1
    bf20:	mov	x1, x8
    bf24:	str	x21, [x29, #24]
    bf28:	stur	x21, [x29, #-8]
    bf2c:	stur	wzr, [x29, #-12]
    bf30:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    bf34:	cbz	w0, c080 <PyInit__decimal@@Base+0x55cc>
    bf38:	ldur	x8, [x29, #-8]
    bf3c:	cmp	x8, x21
    bf40:	b.eq	bf7c <PyInit__decimal@@Base+0x54c8>  // b.none
    bf44:	ldr	x0, [x8, #8]
    bf48:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    bf4c:	add	x8, x8, #0x0
    bf50:	cmp	x0, x8
    bf54:	b.eq	bfb8 <PyInit__decimal@@Base+0x5504>  // b.none
    bf58:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    bf5c:	add	x1, x1, #0x0
    bf60:	bl	6900 <PyType_IsSubtype@plt>
    bf64:	cbnz	w0, bfb8 <PyInit__decimal@@Base+0x5504>
    bf68:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    bf6c:	ldr	x8, [x8, #3936]
    bf70:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    bf74:	add	x1, x1, #0xf61
    bf78:	b	c078 <PyInit__decimal@@Base+0x55c4>
    bf7c:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    bf80:	ldr	x0, [x22, #1400]
    bf84:	mov	x2, sp
    bf88:	mov	x1, xzr
    bf8c:	bl	6680 <PyContextVar_Get@plt>
    bf90:	tbnz	w0, #31, c11c <PyInit__decimal@@Base+0x5668>
    bf94:	ldr	x20, [sp]
    bf98:	cbz	x20, c0a0 <PyInit__decimal@@Base+0x55ec>
    bf9c:	stur	x20, [x29, #-8]
    bfa0:	ldr	x8, [x20]
    bfa4:	subs	x8, x8, #0x1
    bfa8:	str	x8, [x20]
    bfac:	b.ne	bfb8 <PyInit__decimal@@Base+0x5504>  // b.any
    bfb0:	mov	x0, x20
    bfb4:	bl	6510 <_Py_Dealloc@plt>
    bfb8:	ldur	x8, [x29, #-8]
    bfbc:	ldr	x0, [x29, #24]
    bfc0:	ldp	q0, q1, [x8, #16]
    bfc4:	ldr	q2, [x8, #48]
    bfc8:	cmp	x0, x21
    bfcc:	stp	q0, q1, [sp]
    bfd0:	str	q2, [sp, #32]
    bfd4:	b.eq	bff0 <PyInit__decimal@@Base+0x553c>  // b.none
    bfd8:	bl	12ed8 <PyInit__decimal@@Base+0xc424>
    bfdc:	tbnz	w0, #31, c080 <PyInit__decimal@@Base+0x55cc>
    bfe0:	mov	w1, w0
    bfe4:	mov	x0, sp
    bfe8:	bl	1db40 <PyInit__decimal@@Base+0x1708c>
    bfec:	cbz	w0, c068 <PyInit__decimal@@Base+0x55b4>
    bff0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    bff4:	add	x0, x0, #0xe60
    bff8:	bl	6890 <_PyObject_New@plt>
    bffc:	mov	x20, x0
    c000:	cbz	x0, c084 <PyInit__decimal@@Base+0x55d0>
    c004:	mov	w8, #0x30                  	// #48
    c008:	mov	x0, x20
    c00c:	strb	w8, [x0, #24]!
    c010:	mov	x9, #0xffffffffffffffff    	// #-1
    c014:	mov	w10, #0x4                   	// #4
    c018:	add	x8, x0, #0x30
    c01c:	add	x1, x19, #0x18
    c020:	mov	x2, sp
    c024:	sub	x3, x29, #0xc
    c028:	stur	x9, [x0, #-8]
    c02c:	stp	xzr, xzr, [x0, #8]
    c030:	stp	xzr, x10, [x0, #24]
    c034:	str	x8, [x0, #40]
    c038:	bl	3611c <PyInit__decimal@@Base+0x2f668>
    c03c:	ldur	x0, [x29, #-8]
    c040:	ldur	w1, [x29, #-12]
    c044:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    c048:	cbz	w0, c084 <PyInit__decimal@@Base+0x55d0>
    c04c:	ldr	x8, [x20]
    c050:	subs	x8, x8, #0x1
    c054:	str	x8, [x20]
    c058:	b.ne	c080 <PyInit__decimal@@Base+0x55cc>  // b.any
    c05c:	mov	x0, x20
    c060:	bl	6510 <_Py_Dealloc@plt>
    c064:	b	c080 <PyInit__decimal@@Base+0x55cc>
    c068:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    c06c:	ldr	x8, [x8, #3920]
    c070:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c074:	add	x1, x1, #0xf8e
    c078:	ldr	x0, [x8]
    c07c:	bl	6590 <PyErr_SetString@plt>
    c080:	mov	x20, xzr
    c084:	mov	x0, x20
    c088:	ldp	x20, x19, [sp, #112]
    c08c:	ldp	x22, x21, [sp, #96]
    c090:	ldr	x23, [sp, #80]
    c094:	ldp	x29, x30, [sp, #64]
    c098:	add	sp, sp, #0x80
    c09c:	ret
    c0a0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c0a4:	ldr	x23, [x8, #1496]
    c0a8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    c0ac:	add	x0, x0, #0x0
    c0b0:	mov	x1, xzr
    c0b4:	bl	6780 <PyObject_CallObject@plt>
    c0b8:	cbz	x0, c11c <PyInit__decimal@@Base+0x5668>
    c0bc:	ldp	q1, q0, [x23, #32]
    c0c0:	ldr	q2, [x23, #16]
    c0c4:	mov	x20, x0
    c0c8:	mov	x1, x20
    c0cc:	stp	q1, q0, [x0, #32]
    c0d0:	str	q2, [x0, #16]
    c0d4:	ldr	w8, [x23, #80]
    c0d8:	stp	wzr, wzr, [x0, #44]
    c0dc:	str	w8, [x0, #80]
    c0e0:	ldr	x0, [x22, #1400]
    c0e4:	bl	65c0 <PyContextVar_Set@plt>
    c0e8:	cbz	x0, c104 <PyInit__decimal@@Base+0x5650>
    c0ec:	ldr	x8, [x0]
    c0f0:	subs	x8, x8, #0x1
    c0f4:	str	x8, [x0]
    c0f8:	b.ne	bf9c <PyInit__decimal@@Base+0x54e8>  // b.any
    c0fc:	bl	6510 <_Py_Dealloc@plt>
    c100:	b	bf9c <PyInit__decimal@@Base+0x54e8>
    c104:	ldr	x8, [x20]
    c108:	subs	x8, x8, #0x1
    c10c:	str	x8, [x20]
    c110:	b.ne	c11c <PyInit__decimal@@Base+0x5668>  // b.any
    c114:	mov	x0, x20
    c118:	bl	6510 <_Py_Dealloc@plt>
    c11c:	mov	x20, xzr
    c120:	stur	xzr, [x29, #-8]
    c124:	b	c084 <PyInit__decimal@@Base+0x55d0>
    c128:	sub	sp, sp, #0x80
    c12c:	stp	x29, x30, [sp, #64]
    c130:	str	x23, [sp, #80]
    c134:	stp	x22, x21, [sp, #96]
    c138:	stp	x20, x19, [sp, #112]
    c13c:	add	x29, sp, #0x40
    c140:	adrp	x21, 56000 <PyInit__decimal@@Base+0x4f54c>
    c144:	ldr	x21, [x21, #4008]
    c148:	mov	x8, x2
    c14c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    c150:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    c154:	mov	x19, x0
    c158:	add	x2, x2, #0x7c
    c15c:	add	x3, x3, #0x970
    c160:	add	x4, x29, #0x18
    c164:	sub	x5, x29, #0x8
    c168:	mov	x0, x1
    c16c:	mov	x1, x8
    c170:	str	x21, [x29, #24]
    c174:	stur	x21, [x29, #-8]
    c178:	stur	wzr, [x29, #-12]
    c17c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c180:	cbz	w0, c2cc <PyInit__decimal@@Base+0x5818>
    c184:	ldur	x8, [x29, #-8]
    c188:	cmp	x8, x21
    c18c:	b.eq	c1c8 <PyInit__decimal@@Base+0x5714>  // b.none
    c190:	ldr	x0, [x8, #8]
    c194:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c198:	add	x8, x8, #0x0
    c19c:	cmp	x0, x8
    c1a0:	b.eq	c204 <PyInit__decimal@@Base+0x5750>  // b.none
    c1a4:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    c1a8:	add	x1, x1, #0x0
    c1ac:	bl	6900 <PyType_IsSubtype@plt>
    c1b0:	cbnz	w0, c204 <PyInit__decimal@@Base+0x5750>
    c1b4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    c1b8:	ldr	x8, [x8, #3936]
    c1bc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c1c0:	add	x1, x1, #0xf61
    c1c4:	b	c2c4 <PyInit__decimal@@Base+0x5810>
    c1c8:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    c1cc:	ldr	x0, [x22, #1400]
    c1d0:	mov	x2, sp
    c1d4:	mov	x1, xzr
    c1d8:	bl	6680 <PyContextVar_Get@plt>
    c1dc:	tbnz	w0, #31, c368 <PyInit__decimal@@Base+0x58b4>
    c1e0:	ldr	x20, [sp]
    c1e4:	cbz	x20, c2ec <PyInit__decimal@@Base+0x5838>
    c1e8:	stur	x20, [x29, #-8]
    c1ec:	ldr	x8, [x20]
    c1f0:	subs	x8, x8, #0x1
    c1f4:	str	x8, [x20]
    c1f8:	b.ne	c204 <PyInit__decimal@@Base+0x5750>  // b.any
    c1fc:	mov	x0, x20
    c200:	bl	6510 <_Py_Dealloc@plt>
    c204:	ldur	x8, [x29, #-8]
    c208:	ldr	x0, [x29, #24]
    c20c:	ldp	q0, q1, [x8, #16]
    c210:	ldr	q2, [x8, #48]
    c214:	cmp	x0, x21
    c218:	stp	q0, q1, [sp]
    c21c:	str	q2, [sp, #32]
    c220:	b.eq	c23c <PyInit__decimal@@Base+0x5788>  // b.none
    c224:	bl	12ed8 <PyInit__decimal@@Base+0xc424>
    c228:	tbnz	w0, #31, c2cc <PyInit__decimal@@Base+0x5818>
    c22c:	mov	w1, w0
    c230:	mov	x0, sp
    c234:	bl	1db40 <PyInit__decimal@@Base+0x1708c>
    c238:	cbz	w0, c2b4 <PyInit__decimal@@Base+0x5800>
    c23c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    c240:	add	x0, x0, #0xe60
    c244:	bl	6890 <_PyObject_New@plt>
    c248:	mov	x20, x0
    c24c:	cbz	x0, c2d0 <PyInit__decimal@@Base+0x581c>
    c250:	mov	w8, #0x30                  	// #48
    c254:	mov	x0, x20
    c258:	strb	w8, [x0, #24]!
    c25c:	mov	x9, #0xffffffffffffffff    	// #-1
    c260:	mov	w10, #0x4                   	// #4
    c264:	add	x8, x0, #0x30
    c268:	add	x1, x19, #0x18
    c26c:	mov	x2, sp
    c270:	sub	x3, x29, #0xc
    c274:	stur	x9, [x0, #-8]
    c278:	stp	xzr, xzr, [x0, #8]
    c27c:	stp	xzr, x10, [x0, #24]
    c280:	str	x8, [x0, #40]
    c284:	bl	37f44 <PyInit__decimal@@Base+0x31490>
    c288:	ldur	x0, [x29, #-8]
    c28c:	ldur	w1, [x29, #-12]
    c290:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    c294:	cbz	w0, c2d0 <PyInit__decimal@@Base+0x581c>
    c298:	ldr	x8, [x20]
    c29c:	subs	x8, x8, #0x1
    c2a0:	str	x8, [x20]
    c2a4:	b.ne	c2cc <PyInit__decimal@@Base+0x5818>  // b.any
    c2a8:	mov	x0, x20
    c2ac:	bl	6510 <_Py_Dealloc@plt>
    c2b0:	b	c2cc <PyInit__decimal@@Base+0x5818>
    c2b4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    c2b8:	ldr	x8, [x8, #3920]
    c2bc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    c2c0:	add	x1, x1, #0x4d
    c2c4:	ldr	x0, [x8]
    c2c8:	bl	6590 <PyErr_SetString@plt>
    c2cc:	mov	x20, xzr
    c2d0:	mov	x0, x20
    c2d4:	ldp	x20, x19, [sp, #112]
    c2d8:	ldp	x22, x21, [sp, #96]
    c2dc:	ldr	x23, [sp, #80]
    c2e0:	ldp	x29, x30, [sp, #64]
    c2e4:	add	sp, sp, #0x80
    c2e8:	ret
    c2ec:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c2f0:	ldr	x23, [x8, #1496]
    c2f4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    c2f8:	add	x0, x0, #0x0
    c2fc:	mov	x1, xzr
    c300:	bl	6780 <PyObject_CallObject@plt>
    c304:	cbz	x0, c368 <PyInit__decimal@@Base+0x58b4>
    c308:	ldp	q1, q0, [x23, #32]
    c30c:	ldr	q2, [x23, #16]
    c310:	mov	x20, x0
    c314:	mov	x1, x20
    c318:	stp	q1, q0, [x0, #32]
    c31c:	str	q2, [x0, #16]
    c320:	ldr	w8, [x23, #80]
    c324:	stp	wzr, wzr, [x0, #44]
    c328:	str	w8, [x0, #80]
    c32c:	ldr	x0, [x22, #1400]
    c330:	bl	65c0 <PyContextVar_Set@plt>
    c334:	cbz	x0, c350 <PyInit__decimal@@Base+0x589c>
    c338:	ldr	x8, [x0]
    c33c:	subs	x8, x8, #0x1
    c340:	str	x8, [x0]
    c344:	b.ne	c1e8 <PyInit__decimal@@Base+0x5734>  // b.any
    c348:	bl	6510 <_Py_Dealloc@plt>
    c34c:	b	c1e8 <PyInit__decimal@@Base+0x5734>
    c350:	ldr	x8, [x20]
    c354:	subs	x8, x8, #0x1
    c358:	str	x8, [x20]
    c35c:	b.ne	c368 <PyInit__decimal@@Base+0x58b4>  // b.any
    c360:	mov	x0, x20
    c364:	bl	6510 <_Py_Dealloc@plt>
    c368:	mov	x20, xzr
    c36c:	stur	xzr, [x29, #-8]
    c370:	b	c2d0 <PyInit__decimal@@Base+0x581c>
    c374:	sub	sp, sp, #0x50
    c378:	stp	x29, x30, [sp, #32]
    c37c:	stp	x22, x21, [sp, #48]
    c380:	stp	x20, x19, [sp, #64]
    c384:	add	x29, sp, #0x20
    c388:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    c38c:	ldr	x20, [x20, #4008]
    c390:	mov	x8, x2
    c394:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    c398:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    c39c:	mov	x19, x0
    c3a0:	add	x2, x2, #0xac
    c3a4:	add	x3, x3, #0x8d8
    c3a8:	add	x4, sp, #0x10
    c3ac:	mov	x0, x1
    c3b0:	mov	x1, x8
    c3b4:	str	x20, [sp, #16]
    c3b8:	str	wzr, [sp, #12]
    c3bc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c3c0:	cbz	w0, c4c4 <PyInit__decimal@@Base+0x5a10>
    c3c4:	ldr	x8, [sp, #16]
    c3c8:	cmp	x8, x20
    c3cc:	b.eq	c410 <PyInit__decimal@@Base+0x595c>  // b.none
    c3d0:	ldr	x0, [x8, #8]
    c3d4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c3d8:	add	x8, x8, #0x0
    c3dc:	cmp	x0, x8
    c3e0:	b.eq	c44c <PyInit__decimal@@Base+0x5998>  // b.none
    c3e4:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    c3e8:	add	x1, x1, #0x0
    c3ec:	bl	6900 <PyType_IsSubtype@plt>
    c3f0:	cbnz	w0, c44c <PyInit__decimal@@Base+0x5998>
    c3f4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    c3f8:	ldr	x8, [x8, #3936]
    c3fc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c400:	add	x1, x1, #0xf61
    c404:	ldr	x0, [x8]
    c408:	bl	6590 <PyErr_SetString@plt>
    c40c:	b	c4c4 <PyInit__decimal@@Base+0x5a10>
    c410:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    c414:	ldr	x0, [x21, #1400]
    c418:	sub	x2, x29, #0x8
    c41c:	mov	x1, xzr
    c420:	bl	6680 <PyContextVar_Get@plt>
    c424:	tbnz	w0, #31, c55c <PyInit__decimal@@Base+0x5aa8>
    c428:	ldur	x20, [x29, #-8]
    c42c:	cbz	x20, c4e0 <PyInit__decimal@@Base+0x5a2c>
    c430:	str	x20, [sp, #16]
    c434:	ldr	x8, [x20]
    c438:	subs	x8, x8, #0x1
    c43c:	str	x8, [x20]
    c440:	b.ne	c44c <PyInit__decimal@@Base+0x5998>  // b.any
    c444:	mov	x0, x20
    c448:	bl	6510 <_Py_Dealloc@plt>
    c44c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    c450:	add	x0, x0, #0xe60
    c454:	bl	6890 <_PyObject_New@plt>
    c458:	mov	x20, x0
    c45c:	cbz	x0, c4c8 <PyInit__decimal@@Base+0x5a14>
    c460:	mov	w8, #0x30                  	// #48
    c464:	mov	x0, x20
    c468:	strb	w8, [x0, #24]!
    c46c:	mov	x9, #0xffffffffffffffff    	// #-1
    c470:	mov	w10, #0x4                   	// #4
    c474:	add	x8, x0, #0x30
    c478:	stur	x9, [x0, #-8]
    c47c:	stp	xzr, xzr, [x0, #8]
    c480:	stp	xzr, x10, [x0, #24]
    c484:	str	x8, [x0, #40]
    c488:	ldr	x8, [sp, #16]
    c48c:	add	x1, x19, #0x18
    c490:	add	x3, sp, #0xc
    c494:	add	x2, x8, #0x10
    c498:	bl	391c4 <PyInit__decimal@@Base+0x32710>
    c49c:	ldr	x0, [sp, #16]
    c4a0:	ldr	w1, [sp, #12]
    c4a4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    c4a8:	cbz	w0, c4c8 <PyInit__decimal@@Base+0x5a14>
    c4ac:	ldr	x8, [x20]
    c4b0:	subs	x8, x8, #0x1
    c4b4:	str	x8, [x20]
    c4b8:	b.ne	c4c4 <PyInit__decimal@@Base+0x5a10>  // b.any
    c4bc:	mov	x0, x20
    c4c0:	bl	6510 <_Py_Dealloc@plt>
    c4c4:	mov	x20, xzr
    c4c8:	mov	x0, x20
    c4cc:	ldp	x20, x19, [sp, #64]
    c4d0:	ldp	x22, x21, [sp, #48]
    c4d4:	ldp	x29, x30, [sp, #32]
    c4d8:	add	sp, sp, #0x50
    c4dc:	ret
    c4e0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c4e4:	ldr	x22, [x8, #1496]
    c4e8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    c4ec:	add	x0, x0, #0x0
    c4f0:	mov	x1, xzr
    c4f4:	bl	6780 <PyObject_CallObject@plt>
    c4f8:	cbz	x0, c55c <PyInit__decimal@@Base+0x5aa8>
    c4fc:	ldp	q1, q0, [x22, #32]
    c500:	ldr	q2, [x22, #16]
    c504:	mov	x20, x0
    c508:	mov	x1, x20
    c50c:	stp	q1, q0, [x0, #32]
    c510:	str	q2, [x0, #16]
    c514:	ldr	w8, [x22, #80]
    c518:	stp	wzr, wzr, [x0, #44]
    c51c:	str	w8, [x0, #80]
    c520:	ldr	x0, [x21, #1400]
    c524:	bl	65c0 <PyContextVar_Set@plt>
    c528:	cbz	x0, c544 <PyInit__decimal@@Base+0x5a90>
    c52c:	ldr	x8, [x0]
    c530:	subs	x8, x8, #0x1
    c534:	str	x8, [x0]
    c538:	b.ne	c430 <PyInit__decimal@@Base+0x597c>  // b.any
    c53c:	bl	6510 <_Py_Dealloc@plt>
    c540:	b	c430 <PyInit__decimal@@Base+0x597c>
    c544:	ldr	x8, [x20]
    c548:	subs	x8, x8, #0x1
    c54c:	str	x8, [x20]
    c550:	b.ne	c55c <PyInit__decimal@@Base+0x5aa8>  // b.any
    c554:	mov	x0, x20
    c558:	bl	6510 <_Py_Dealloc@plt>
    c55c:	mov	x20, xzr
    c560:	str	xzr, [sp, #16]
    c564:	b	c4c8 <PyInit__decimal@@Base+0x5a14>
    c568:	sub	sp, sp, #0x50
    c56c:	stp	x29, x30, [sp, #32]
    c570:	stp	x22, x21, [sp, #48]
    c574:	stp	x20, x19, [sp, #64]
    c578:	add	x29, sp, #0x20
    c57c:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    c580:	ldr	x20, [x20, #4008]
    c584:	mov	x8, x2
    c588:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    c58c:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    c590:	mov	x19, x0
    c594:	add	x2, x2, #0xab
    c598:	add	x3, x3, #0x988
    c59c:	add	x4, sp, #0x10
    c5a0:	add	x5, sp, #0x8
    c5a4:	mov	x0, x1
    c5a8:	mov	x1, x8
    c5ac:	str	x20, [sp, #8]
    c5b0:	str	wzr, [sp, #4]
    c5b4:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c5b8:	cbz	w0, c8b4 <PyInit__decimal@@Base+0x5e00>
    c5bc:	ldr	x8, [sp, #8]
    c5c0:	cmp	x8, x20
    c5c4:	b.eq	c608 <PyInit__decimal@@Base+0x5b54>  // b.none
    c5c8:	ldr	x0, [x8, #8]
    c5cc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c5d0:	add	x8, x8, #0x0
    c5d4:	cmp	x0, x8
    c5d8:	b.eq	c644 <PyInit__decimal@@Base+0x5b90>  // b.none
    c5dc:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    c5e0:	add	x1, x1, #0x0
    c5e4:	bl	6900 <PyType_IsSubtype@plt>
    c5e8:	cbnz	w0, c644 <PyInit__decimal@@Base+0x5b90>
    c5ec:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    c5f0:	ldr	x8, [x8, #3936]
    c5f4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c5f8:	add	x1, x1, #0xf61
    c5fc:	ldr	x0, [x8]
    c600:	bl	6590 <PyErr_SetString@plt>
    c604:	b	c8b4 <PyInit__decimal@@Base+0x5e00>
    c608:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    c60c:	ldr	x0, [x21, #1400]
    c610:	sub	x2, x29, #0x8
    c614:	mov	x1, xzr
    c618:	bl	6680 <PyContextVar_Get@plt>
    c61c:	tbnz	w0, #31, c8e8 <PyInit__decimal@@Base+0x5e34>
    c620:	ldur	x20, [x29, #-8]
    c624:	cbz	x20, c7fc <PyInit__decimal@@Base+0x5d48>
    c628:	str	x20, [sp, #8]
    c62c:	ldr	x8, [x20]
    c630:	subs	x8, x8, #0x1
    c634:	str	x8, [x20]
    c638:	b.ne	c644 <PyInit__decimal@@Base+0x5b90>  // b.any
    c63c:	mov	x0, x20
    c640:	bl	6510 <_Py_Dealloc@plt>
    c644:	ldr	x0, [x19, #8]
    c648:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    c64c:	add	x21, x21, #0xe60
    c650:	cmp	x0, x21
    c654:	b.eq	c66c <PyInit__decimal@@Base+0x5bb8>  // b.none
    c658:	ldr	x20, [sp, #8]
    c65c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    c660:	add	x1, x1, #0xe60
    c664:	bl	6900 <PyType_IsSubtype@plt>
    c668:	cbz	w0, c75c <PyInit__decimal@@Base+0x5ca8>
    c66c:	ldr	x8, [x19]
    c670:	add	x8, x8, #0x1
    c674:	str	x8, [x19]
    c678:	ldr	x20, [sp, #16]
    c67c:	ldr	x0, [x20, #8]
    c680:	cmp	x0, x21
    c684:	b.eq	c69c <PyInit__decimal@@Base+0x5be8>  // b.none
    c688:	ldr	x21, [sp, #8]
    c68c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    c690:	add	x1, x1, #0xe60
    c694:	bl	6900 <PyType_IsSubtype@plt>
    c698:	cbz	w0, c788 <PyInit__decimal@@Base+0x5cd4>
    c69c:	ldr	x8, [x20]
    c6a0:	add	x8, x8, #0x1
    c6a4:	str	x8, [x20]
    c6a8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    c6ac:	add	x0, x0, #0xe60
    c6b0:	bl	6890 <_PyObject_New@plt>
    c6b4:	cbz	x0, c72c <PyInit__decimal@@Base+0x5c78>
    c6b8:	mov	w8, #0x30                  	// #48
    c6bc:	mov	x21, x0
    c6c0:	strb	w8, [x0, #24]!
    c6c4:	mov	x9, #0xffffffffffffffff    	// #-1
    c6c8:	mov	w10, #0x4                   	// #4
    c6cc:	add	x8, x0, #0x30
    c6d0:	stur	x9, [x0, #-8]
    c6d4:	stp	xzr, xzr, [x0, #8]
    c6d8:	stp	xzr, x10, [x0, #24]
    c6dc:	str	x8, [x0, #40]
    c6e0:	ldr	x8, [sp, #8]
    c6e4:	add	x1, x19, #0x18
    c6e8:	add	x2, x20, #0x18
    c6ec:	add	x4, sp, #0x4
    c6f0:	add	x3, x8, #0x10
    c6f4:	bl	257a4 <PyInit__decimal@@Base+0x1ecf0>
    c6f8:	ldr	x8, [x19]
    c6fc:	subs	x8, x8, #0x1
    c700:	str	x8, [x19]
    c704:	b.eq	c7b4 <PyInit__decimal@@Base+0x5d00>  // b.none
    c708:	ldr	x8, [x20]
    c70c:	subs	x8, x8, #0x1
    c710:	str	x8, [x20]
    c714:	b.eq	c7cc <PyInit__decimal@@Base+0x5d18>  // b.none
    c718:	ldr	x0, [sp, #8]
    c71c:	ldr	w1, [sp, #4]
    c720:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    c724:	cbnz	w0, c7e4 <PyInit__decimal@@Base+0x5d30>
    c728:	b	c8b8 <PyInit__decimal@@Base+0x5e04>
    c72c:	ldr	x8, [x19]
    c730:	subs	x8, x8, #0x1
    c734:	str	x8, [x19]
    c738:	b.ne	c744 <PyInit__decimal@@Base+0x5c90>  // b.any
    c73c:	mov	x0, x19
    c740:	bl	6510 <_Py_Dealloc@plt>
    c744:	ldr	x8, [x20]
    c748:	subs	x8, x8, #0x1
    c74c:	str	x8, [x20]
    c750:	b.ne	c8b4 <PyInit__decimal@@Base+0x5e00>  // b.any
    c754:	mov	x0, x20
    c758:	b	c8b0 <PyInit__decimal@@Base+0x5dfc>
    c75c:	ldr	x8, [x19, #8]
    c760:	ldrb	w9, [x8, #171]
    c764:	tbnz	w9, #0, c860 <PyInit__decimal@@Base+0x5dac>
    c768:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    c76c:	ldr	x9, [x9, #3936]
    c770:	ldr	x2, [x8, #24]
    c774:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c778:	add	x1, x1, #0xb93
    c77c:	ldr	x0, [x9]
    c780:	bl	6950 <PyErr_Format@plt>
    c784:	b	c8b4 <PyInit__decimal@@Base+0x5e00>
    c788:	ldr	x8, [x20, #8]
    c78c:	ldrb	w9, [x8, #171]
    c790:	tbnz	w9, #0, c880 <PyInit__decimal@@Base+0x5dcc>
    c794:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    c798:	ldr	x9, [x9, #3936]
    c79c:	ldr	x2, [x8, #24]
    c7a0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c7a4:	add	x1, x1, #0xb93
    c7a8:	ldr	x0, [x9]
    c7ac:	bl	6950 <PyErr_Format@plt>
    c7b0:	b	c89c <PyInit__decimal@@Base+0x5de8>
    c7b4:	mov	x0, x19
    c7b8:	bl	6510 <_Py_Dealloc@plt>
    c7bc:	ldr	x8, [x20]
    c7c0:	subs	x8, x8, #0x1
    c7c4:	str	x8, [x20]
    c7c8:	b.ne	c718 <PyInit__decimal@@Base+0x5c64>  // b.any
    c7cc:	mov	x0, x20
    c7d0:	bl	6510 <_Py_Dealloc@plt>
    c7d4:	ldr	x0, [sp, #8]
    c7d8:	ldr	w1, [sp, #4]
    c7dc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    c7e0:	cbz	w0, c8b8 <PyInit__decimal@@Base+0x5e04>
    c7e4:	ldr	x8, [x21]
    c7e8:	subs	x8, x8, #0x1
    c7ec:	str	x8, [x21]
    c7f0:	b.ne	c8b4 <PyInit__decimal@@Base+0x5e00>  // b.any
    c7f4:	mov	x0, x21
    c7f8:	b	c8b0 <PyInit__decimal@@Base+0x5dfc>
    c7fc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c800:	ldr	x22, [x8, #1496]
    c804:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    c808:	add	x0, x0, #0x0
    c80c:	mov	x1, xzr
    c810:	bl	6780 <PyObject_CallObject@plt>
    c814:	cbz	x0, c8e8 <PyInit__decimal@@Base+0x5e34>
    c818:	ldp	q1, q0, [x22, #32]
    c81c:	ldr	q2, [x22, #16]
    c820:	mov	x20, x0
    c824:	mov	x1, x20
    c828:	stp	q1, q0, [x0, #32]
    c82c:	str	q2, [x0, #16]
    c830:	ldr	w8, [x22, #80]
    c834:	stp	wzr, wzr, [x0, #44]
    c838:	str	w8, [x0, #80]
    c83c:	ldr	x0, [x21, #1400]
    c840:	bl	65c0 <PyContextVar_Set@plt>
    c844:	cbz	x0, c8d0 <PyInit__decimal@@Base+0x5e1c>
    c848:	ldr	x8, [x0]
    c84c:	subs	x8, x8, #0x1
    c850:	str	x8, [x0]
    c854:	b.ne	c628 <PyInit__decimal@@Base+0x5b74>  // b.any
    c858:	bl	6510 <_Py_Dealloc@plt>
    c85c:	b	c628 <PyInit__decimal@@Base+0x5b74>
    c860:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    c864:	add	x0, x0, #0xe60
    c868:	mov	x1, x19
    c86c:	mov	x2, x20
    c870:	bl	abdc <PyInit__decimal@@Base+0x4128>
    c874:	mov	x19, x0
    c878:	cbnz	x0, c678 <PyInit__decimal@@Base+0x5bc4>
    c87c:	b	c8b4 <PyInit__decimal@@Base+0x5e00>
    c880:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    c884:	add	x0, x0, #0xe60
    c888:	mov	x1, x20
    c88c:	mov	x2, x21
    c890:	bl	abdc <PyInit__decimal@@Base+0x4128>
    c894:	mov	x20, x0
    c898:	cbnz	x0, c6a8 <PyInit__decimal@@Base+0x5bf4>
    c89c:	ldr	x8, [x19]
    c8a0:	subs	x8, x8, #0x1
    c8a4:	str	x8, [x19]
    c8a8:	b.ne	c8b4 <PyInit__decimal@@Base+0x5e00>  // b.any
    c8ac:	mov	x0, x19
    c8b0:	bl	6510 <_Py_Dealloc@plt>
    c8b4:	mov	x21, xzr
    c8b8:	mov	x0, x21
    c8bc:	ldp	x20, x19, [sp, #64]
    c8c0:	ldp	x22, x21, [sp, #48]
    c8c4:	ldp	x29, x30, [sp, #32]
    c8c8:	add	sp, sp, #0x50
    c8cc:	ret
    c8d0:	ldr	x8, [x20]
    c8d4:	subs	x8, x8, #0x1
    c8d8:	str	x8, [x20]
    c8dc:	b.ne	c8e8 <PyInit__decimal@@Base+0x5e34>  // b.any
    c8e0:	mov	x0, x20
    c8e4:	bl	6510 <_Py_Dealloc@plt>
    c8e8:	mov	x21, xzr
    c8ec:	str	xzr, [sp, #8]
    c8f0:	b	c8b8 <PyInit__decimal@@Base+0x5e04>
    c8f4:	sub	sp, sp, #0x50
    c8f8:	stp	x29, x30, [sp, #32]
    c8fc:	stp	x22, x21, [sp, #48]
    c900:	stp	x20, x19, [sp, #64]
    c904:	add	x29, sp, #0x20
    c908:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    c90c:	ldr	x20, [x20, #4008]
    c910:	mov	x8, x2
    c914:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    c918:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    c91c:	mov	x19, x0
    c920:	add	x2, x2, #0xab
    c924:	add	x3, x3, #0x9a0
    c928:	add	x4, sp, #0x10
    c92c:	add	x5, sp, #0x8
    c930:	mov	x0, x1
    c934:	mov	x1, x8
    c938:	str	x20, [sp, #8]
    c93c:	str	wzr, [sp, #4]
    c940:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c944:	cbz	w0, cc40 <PyInit__decimal@@Base+0x618c>
    c948:	ldr	x8, [sp, #8]
    c94c:	cmp	x8, x20
    c950:	b.eq	c994 <PyInit__decimal@@Base+0x5ee0>  // b.none
    c954:	ldr	x0, [x8, #8]
    c958:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    c95c:	add	x8, x8, #0x0
    c960:	cmp	x0, x8
    c964:	b.eq	c9d0 <PyInit__decimal@@Base+0x5f1c>  // b.none
    c968:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    c96c:	add	x1, x1, #0x0
    c970:	bl	6900 <PyType_IsSubtype@plt>
    c974:	cbnz	w0, c9d0 <PyInit__decimal@@Base+0x5f1c>
    c978:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    c97c:	ldr	x8, [x8, #3936]
    c980:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    c984:	add	x1, x1, #0xf61
    c988:	ldr	x0, [x8]
    c98c:	bl	6590 <PyErr_SetString@plt>
    c990:	b	cc40 <PyInit__decimal@@Base+0x618c>
    c994:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    c998:	ldr	x0, [x21, #1400]
    c99c:	sub	x2, x29, #0x8
    c9a0:	mov	x1, xzr
    c9a4:	bl	6680 <PyContextVar_Get@plt>
    c9a8:	tbnz	w0, #31, cc74 <PyInit__decimal@@Base+0x61c0>
    c9ac:	ldur	x20, [x29, #-8]
    c9b0:	cbz	x20, cb88 <PyInit__decimal@@Base+0x60d4>
    c9b4:	str	x20, [sp, #8]
    c9b8:	ldr	x8, [x20]
    c9bc:	subs	x8, x8, #0x1
    c9c0:	str	x8, [x20]
    c9c4:	b.ne	c9d0 <PyInit__decimal@@Base+0x5f1c>  // b.any
    c9c8:	mov	x0, x20
    c9cc:	bl	6510 <_Py_Dealloc@plt>
    c9d0:	ldr	x0, [x19, #8]
    c9d4:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    c9d8:	add	x21, x21, #0xe60
    c9dc:	cmp	x0, x21
    c9e0:	b.eq	c9f8 <PyInit__decimal@@Base+0x5f44>  // b.none
    c9e4:	ldr	x20, [sp, #8]
    c9e8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    c9ec:	add	x1, x1, #0xe60
    c9f0:	bl	6900 <PyType_IsSubtype@plt>
    c9f4:	cbz	w0, cae8 <PyInit__decimal@@Base+0x6034>
    c9f8:	ldr	x8, [x19]
    c9fc:	add	x8, x8, #0x1
    ca00:	str	x8, [x19]
    ca04:	ldr	x20, [sp, #16]
    ca08:	ldr	x0, [x20, #8]
    ca0c:	cmp	x0, x21
    ca10:	b.eq	ca28 <PyInit__decimal@@Base+0x5f74>  // b.none
    ca14:	ldr	x21, [sp, #8]
    ca18:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    ca1c:	add	x1, x1, #0xe60
    ca20:	bl	6900 <PyType_IsSubtype@plt>
    ca24:	cbz	w0, cb14 <PyInit__decimal@@Base+0x6060>
    ca28:	ldr	x8, [x20]
    ca2c:	add	x8, x8, #0x1
    ca30:	str	x8, [x20]
    ca34:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    ca38:	add	x0, x0, #0xe60
    ca3c:	bl	6890 <_PyObject_New@plt>
    ca40:	cbz	x0, cab8 <PyInit__decimal@@Base+0x6004>
    ca44:	mov	w8, #0x30                  	// #48
    ca48:	mov	x21, x0
    ca4c:	strb	w8, [x0, #24]!
    ca50:	mov	x9, #0xffffffffffffffff    	// #-1
    ca54:	mov	w10, #0x4                   	// #4
    ca58:	add	x8, x0, #0x30
    ca5c:	stur	x9, [x0, #-8]
    ca60:	stp	xzr, xzr, [x0, #8]
    ca64:	stp	xzr, x10, [x0, #24]
    ca68:	str	x8, [x0, #40]
    ca6c:	ldr	x8, [sp, #8]
    ca70:	add	x1, x19, #0x18
    ca74:	add	x2, x20, #0x18
    ca78:	add	x4, sp, #0x4
    ca7c:	add	x3, x8, #0x10
    ca80:	bl	259b8 <PyInit__decimal@@Base+0x1ef04>
    ca84:	ldr	x8, [x19]
    ca88:	subs	x8, x8, #0x1
    ca8c:	str	x8, [x19]
    ca90:	b.eq	cb40 <PyInit__decimal@@Base+0x608c>  // b.none
    ca94:	ldr	x8, [x20]
    ca98:	subs	x8, x8, #0x1
    ca9c:	str	x8, [x20]
    caa0:	b.eq	cb58 <PyInit__decimal@@Base+0x60a4>  // b.none
    caa4:	ldr	x0, [sp, #8]
    caa8:	ldr	w1, [sp, #4]
    caac:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    cab0:	cbnz	w0, cb70 <PyInit__decimal@@Base+0x60bc>
    cab4:	b	cc44 <PyInit__decimal@@Base+0x6190>
    cab8:	ldr	x8, [x19]
    cabc:	subs	x8, x8, #0x1
    cac0:	str	x8, [x19]
    cac4:	b.ne	cad0 <PyInit__decimal@@Base+0x601c>  // b.any
    cac8:	mov	x0, x19
    cacc:	bl	6510 <_Py_Dealloc@plt>
    cad0:	ldr	x8, [x20]
    cad4:	subs	x8, x8, #0x1
    cad8:	str	x8, [x20]
    cadc:	b.ne	cc40 <PyInit__decimal@@Base+0x618c>  // b.any
    cae0:	mov	x0, x20
    cae4:	b	cc3c <PyInit__decimal@@Base+0x6188>
    cae8:	ldr	x8, [x19, #8]
    caec:	ldrb	w9, [x8, #171]
    caf0:	tbnz	w9, #0, cbec <PyInit__decimal@@Base+0x6138>
    caf4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    caf8:	ldr	x9, [x9, #3936]
    cafc:	ldr	x2, [x8, #24]
    cb00:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    cb04:	add	x1, x1, #0xb93
    cb08:	ldr	x0, [x9]
    cb0c:	bl	6950 <PyErr_Format@plt>
    cb10:	b	cc40 <PyInit__decimal@@Base+0x618c>
    cb14:	ldr	x8, [x20, #8]
    cb18:	ldrb	w9, [x8, #171]
    cb1c:	tbnz	w9, #0, cc0c <PyInit__decimal@@Base+0x6158>
    cb20:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    cb24:	ldr	x9, [x9, #3936]
    cb28:	ldr	x2, [x8, #24]
    cb2c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    cb30:	add	x1, x1, #0xb93
    cb34:	ldr	x0, [x9]
    cb38:	bl	6950 <PyErr_Format@plt>
    cb3c:	b	cc28 <PyInit__decimal@@Base+0x6174>
    cb40:	mov	x0, x19
    cb44:	bl	6510 <_Py_Dealloc@plt>
    cb48:	ldr	x8, [x20]
    cb4c:	subs	x8, x8, #0x1
    cb50:	str	x8, [x20]
    cb54:	b.ne	caa4 <PyInit__decimal@@Base+0x5ff0>  // b.any
    cb58:	mov	x0, x20
    cb5c:	bl	6510 <_Py_Dealloc@plt>
    cb60:	ldr	x0, [sp, #8]
    cb64:	ldr	w1, [sp, #4]
    cb68:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    cb6c:	cbz	w0, cc44 <PyInit__decimal@@Base+0x6190>
    cb70:	ldr	x8, [x21]
    cb74:	subs	x8, x8, #0x1
    cb78:	str	x8, [x21]
    cb7c:	b.ne	cc40 <PyInit__decimal@@Base+0x618c>  // b.any
    cb80:	mov	x0, x21
    cb84:	b	cc3c <PyInit__decimal@@Base+0x6188>
    cb88:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    cb8c:	ldr	x22, [x8, #1496]
    cb90:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    cb94:	add	x0, x0, #0x0
    cb98:	mov	x1, xzr
    cb9c:	bl	6780 <PyObject_CallObject@plt>
    cba0:	cbz	x0, cc74 <PyInit__decimal@@Base+0x61c0>
    cba4:	ldp	q1, q0, [x22, #32]
    cba8:	ldr	q2, [x22, #16]
    cbac:	mov	x20, x0
    cbb0:	mov	x1, x20
    cbb4:	stp	q1, q0, [x0, #32]
    cbb8:	str	q2, [x0, #16]
    cbbc:	ldr	w8, [x22, #80]
    cbc0:	stp	wzr, wzr, [x0, #44]
    cbc4:	str	w8, [x0, #80]
    cbc8:	ldr	x0, [x21, #1400]
    cbcc:	bl	65c0 <PyContextVar_Set@plt>
    cbd0:	cbz	x0, cc5c <PyInit__decimal@@Base+0x61a8>
    cbd4:	ldr	x8, [x0]
    cbd8:	subs	x8, x8, #0x1
    cbdc:	str	x8, [x0]
    cbe0:	b.ne	c9b4 <PyInit__decimal@@Base+0x5f00>  // b.any
    cbe4:	bl	6510 <_Py_Dealloc@plt>
    cbe8:	b	c9b4 <PyInit__decimal@@Base+0x5f00>
    cbec:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    cbf0:	add	x0, x0, #0xe60
    cbf4:	mov	x1, x19
    cbf8:	mov	x2, x20
    cbfc:	bl	abdc <PyInit__decimal@@Base+0x4128>
    cc00:	mov	x19, x0
    cc04:	cbnz	x0, ca04 <PyInit__decimal@@Base+0x5f50>
    cc08:	b	cc40 <PyInit__decimal@@Base+0x618c>
    cc0c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    cc10:	add	x0, x0, #0xe60
    cc14:	mov	x1, x20
    cc18:	mov	x2, x21
    cc1c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    cc20:	mov	x20, x0
    cc24:	cbnz	x0, ca34 <PyInit__decimal@@Base+0x5f80>
    cc28:	ldr	x8, [x19]
    cc2c:	subs	x8, x8, #0x1
    cc30:	str	x8, [x19]
    cc34:	b.ne	cc40 <PyInit__decimal@@Base+0x618c>  // b.any
    cc38:	mov	x0, x19
    cc3c:	bl	6510 <_Py_Dealloc@plt>
    cc40:	mov	x21, xzr
    cc44:	mov	x0, x21
    cc48:	ldp	x20, x19, [sp, #64]
    cc4c:	ldp	x22, x21, [sp, #48]
    cc50:	ldp	x29, x30, [sp, #32]
    cc54:	add	sp, sp, #0x50
    cc58:	ret
    cc5c:	ldr	x8, [x20]
    cc60:	subs	x8, x8, #0x1
    cc64:	str	x8, [x20]
    cc68:	b.ne	cc74 <PyInit__decimal@@Base+0x61c0>  // b.any
    cc6c:	mov	x0, x20
    cc70:	bl	6510 <_Py_Dealloc@plt>
    cc74:	mov	x21, xzr
    cc78:	str	xzr, [sp, #8]
    cc7c:	b	cc44 <PyInit__decimal@@Base+0x6190>
    cc80:	sub	sp, sp, #0x50
    cc84:	stp	x29, x30, [sp, #32]
    cc88:	stp	x22, x21, [sp, #48]
    cc8c:	stp	x20, x19, [sp, #64]
    cc90:	add	x29, sp, #0x20
    cc94:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    cc98:	ldr	x20, [x20, #4008]
    cc9c:	mov	x8, x2
    cca0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    cca4:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    cca8:	mov	x19, x0
    ccac:	add	x2, x2, #0xab
    ccb0:	add	x3, x3, #0x9b8
    ccb4:	add	x4, sp, #0x10
    ccb8:	add	x5, sp, #0x8
    ccbc:	mov	x0, x1
    ccc0:	mov	x1, x8
    ccc4:	str	x20, [sp, #8]
    ccc8:	str	wzr, [sp, #4]
    cccc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    ccd0:	cbz	w0, cfcc <PyInit__decimal@@Base+0x6518>
    ccd4:	ldr	x8, [sp, #8]
    ccd8:	cmp	x8, x20
    ccdc:	b.eq	cd20 <PyInit__decimal@@Base+0x626c>  // b.none
    cce0:	ldr	x0, [x8, #8]
    cce4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    cce8:	add	x8, x8, #0x0
    ccec:	cmp	x0, x8
    ccf0:	b.eq	cd5c <PyInit__decimal@@Base+0x62a8>  // b.none
    ccf4:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    ccf8:	add	x1, x1, #0x0
    ccfc:	bl	6900 <PyType_IsSubtype@plt>
    cd00:	cbnz	w0, cd5c <PyInit__decimal@@Base+0x62a8>
    cd04:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    cd08:	ldr	x8, [x8, #3936]
    cd0c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    cd10:	add	x1, x1, #0xf61
    cd14:	ldr	x0, [x8]
    cd18:	bl	6590 <PyErr_SetString@plt>
    cd1c:	b	cfcc <PyInit__decimal@@Base+0x6518>
    cd20:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    cd24:	ldr	x0, [x21, #1400]
    cd28:	sub	x2, x29, #0x8
    cd2c:	mov	x1, xzr
    cd30:	bl	6680 <PyContextVar_Get@plt>
    cd34:	tbnz	w0, #31, d000 <PyInit__decimal@@Base+0x654c>
    cd38:	ldur	x20, [x29, #-8]
    cd3c:	cbz	x20, cf14 <PyInit__decimal@@Base+0x6460>
    cd40:	str	x20, [sp, #8]
    cd44:	ldr	x8, [x20]
    cd48:	subs	x8, x8, #0x1
    cd4c:	str	x8, [x20]
    cd50:	b.ne	cd5c <PyInit__decimal@@Base+0x62a8>  // b.any
    cd54:	mov	x0, x20
    cd58:	bl	6510 <_Py_Dealloc@plt>
    cd5c:	ldr	x0, [x19, #8]
    cd60:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    cd64:	add	x21, x21, #0xe60
    cd68:	cmp	x0, x21
    cd6c:	b.eq	cd84 <PyInit__decimal@@Base+0x62d0>  // b.none
    cd70:	ldr	x20, [sp, #8]
    cd74:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    cd78:	add	x1, x1, #0xe60
    cd7c:	bl	6900 <PyType_IsSubtype@plt>
    cd80:	cbz	w0, ce74 <PyInit__decimal@@Base+0x63c0>
    cd84:	ldr	x8, [x19]
    cd88:	add	x8, x8, #0x1
    cd8c:	str	x8, [x19]
    cd90:	ldr	x20, [sp, #16]
    cd94:	ldr	x0, [x20, #8]
    cd98:	cmp	x0, x21
    cd9c:	b.eq	cdb4 <PyInit__decimal@@Base+0x6300>  // b.none
    cda0:	ldr	x21, [sp, #8]
    cda4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    cda8:	add	x1, x1, #0xe60
    cdac:	bl	6900 <PyType_IsSubtype@plt>
    cdb0:	cbz	w0, cea0 <PyInit__decimal@@Base+0x63ec>
    cdb4:	ldr	x8, [x20]
    cdb8:	add	x8, x8, #0x1
    cdbc:	str	x8, [x20]
    cdc0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    cdc4:	add	x0, x0, #0xe60
    cdc8:	bl	6890 <_PyObject_New@plt>
    cdcc:	cbz	x0, ce44 <PyInit__decimal@@Base+0x6390>
    cdd0:	mov	w8, #0x30                  	// #48
    cdd4:	mov	x21, x0
    cdd8:	strb	w8, [x0, #24]!
    cddc:	mov	x9, #0xffffffffffffffff    	// #-1
    cde0:	mov	w10, #0x4                   	// #4
    cde4:	add	x8, x0, #0x30
    cde8:	stur	x9, [x0, #-8]
    cdec:	stp	xzr, xzr, [x0, #8]
    cdf0:	stp	xzr, x10, [x0, #24]
    cdf4:	str	x8, [x0, #40]
    cdf8:	ldr	x8, [sp, #8]
    cdfc:	add	x1, x19, #0x18
    ce00:	add	x2, x20, #0x18
    ce04:	add	x4, sp, #0x4
    ce08:	add	x3, x8, #0x10
    ce0c:	bl	31e1c <PyInit__decimal@@Base+0x2b368>
    ce10:	ldr	x8, [x19]
    ce14:	subs	x8, x8, #0x1
    ce18:	str	x8, [x19]
    ce1c:	b.eq	cecc <PyInit__decimal@@Base+0x6418>  // b.none
    ce20:	ldr	x8, [x20]
    ce24:	subs	x8, x8, #0x1
    ce28:	str	x8, [x20]
    ce2c:	b.eq	cee4 <PyInit__decimal@@Base+0x6430>  // b.none
    ce30:	ldr	x0, [sp, #8]
    ce34:	ldr	w1, [sp, #4]
    ce38:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    ce3c:	cbnz	w0, cefc <PyInit__decimal@@Base+0x6448>
    ce40:	b	cfd0 <PyInit__decimal@@Base+0x651c>
    ce44:	ldr	x8, [x19]
    ce48:	subs	x8, x8, #0x1
    ce4c:	str	x8, [x19]
    ce50:	b.ne	ce5c <PyInit__decimal@@Base+0x63a8>  // b.any
    ce54:	mov	x0, x19
    ce58:	bl	6510 <_Py_Dealloc@plt>
    ce5c:	ldr	x8, [x20]
    ce60:	subs	x8, x8, #0x1
    ce64:	str	x8, [x20]
    ce68:	b.ne	cfcc <PyInit__decimal@@Base+0x6518>  // b.any
    ce6c:	mov	x0, x20
    ce70:	b	cfc8 <PyInit__decimal@@Base+0x6514>
    ce74:	ldr	x8, [x19, #8]
    ce78:	ldrb	w9, [x8, #171]
    ce7c:	tbnz	w9, #0, cf78 <PyInit__decimal@@Base+0x64c4>
    ce80:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    ce84:	ldr	x9, [x9, #3936]
    ce88:	ldr	x2, [x8, #24]
    ce8c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ce90:	add	x1, x1, #0xb93
    ce94:	ldr	x0, [x9]
    ce98:	bl	6950 <PyErr_Format@plt>
    ce9c:	b	cfcc <PyInit__decimal@@Base+0x6518>
    cea0:	ldr	x8, [x20, #8]
    cea4:	ldrb	w9, [x8, #171]
    cea8:	tbnz	w9, #0, cf98 <PyInit__decimal@@Base+0x64e4>
    ceac:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    ceb0:	ldr	x9, [x9, #3936]
    ceb4:	ldr	x2, [x8, #24]
    ceb8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    cebc:	add	x1, x1, #0xb93
    cec0:	ldr	x0, [x9]
    cec4:	bl	6950 <PyErr_Format@plt>
    cec8:	b	cfb4 <PyInit__decimal@@Base+0x6500>
    cecc:	mov	x0, x19
    ced0:	bl	6510 <_Py_Dealloc@plt>
    ced4:	ldr	x8, [x20]
    ced8:	subs	x8, x8, #0x1
    cedc:	str	x8, [x20]
    cee0:	b.ne	ce30 <PyInit__decimal@@Base+0x637c>  // b.any
    cee4:	mov	x0, x20
    cee8:	bl	6510 <_Py_Dealloc@plt>
    ceec:	ldr	x0, [sp, #8]
    cef0:	ldr	w1, [sp, #4]
    cef4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    cef8:	cbz	w0, cfd0 <PyInit__decimal@@Base+0x651c>
    cefc:	ldr	x8, [x21]
    cf00:	subs	x8, x8, #0x1
    cf04:	str	x8, [x21]
    cf08:	b.ne	cfcc <PyInit__decimal@@Base+0x6518>  // b.any
    cf0c:	mov	x0, x21
    cf10:	b	cfc8 <PyInit__decimal@@Base+0x6514>
    cf14:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    cf18:	ldr	x22, [x8, #1496]
    cf1c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    cf20:	add	x0, x0, #0x0
    cf24:	mov	x1, xzr
    cf28:	bl	6780 <PyObject_CallObject@plt>
    cf2c:	cbz	x0, d000 <PyInit__decimal@@Base+0x654c>
    cf30:	ldp	q1, q0, [x22, #32]
    cf34:	ldr	q2, [x22, #16]
    cf38:	mov	x20, x0
    cf3c:	mov	x1, x20
    cf40:	stp	q1, q0, [x0, #32]
    cf44:	str	q2, [x0, #16]
    cf48:	ldr	w8, [x22, #80]
    cf4c:	stp	wzr, wzr, [x0, #44]
    cf50:	str	w8, [x0, #80]
    cf54:	ldr	x0, [x21, #1400]
    cf58:	bl	65c0 <PyContextVar_Set@plt>
    cf5c:	cbz	x0, cfe8 <PyInit__decimal@@Base+0x6534>
    cf60:	ldr	x8, [x0]
    cf64:	subs	x8, x8, #0x1
    cf68:	str	x8, [x0]
    cf6c:	b.ne	cd40 <PyInit__decimal@@Base+0x628c>  // b.any
    cf70:	bl	6510 <_Py_Dealloc@plt>
    cf74:	b	cd40 <PyInit__decimal@@Base+0x628c>
    cf78:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    cf7c:	add	x0, x0, #0xe60
    cf80:	mov	x1, x19
    cf84:	mov	x2, x20
    cf88:	bl	abdc <PyInit__decimal@@Base+0x4128>
    cf8c:	mov	x19, x0
    cf90:	cbnz	x0, cd90 <PyInit__decimal@@Base+0x62dc>
    cf94:	b	cfcc <PyInit__decimal@@Base+0x6518>
    cf98:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    cf9c:	add	x0, x0, #0xe60
    cfa0:	mov	x1, x20
    cfa4:	mov	x2, x21
    cfa8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    cfac:	mov	x20, x0
    cfb0:	cbnz	x0, cdc0 <PyInit__decimal@@Base+0x630c>
    cfb4:	ldr	x8, [x19]
    cfb8:	subs	x8, x8, #0x1
    cfbc:	str	x8, [x19]
    cfc0:	b.ne	cfcc <PyInit__decimal@@Base+0x6518>  // b.any
    cfc4:	mov	x0, x19
    cfc8:	bl	6510 <_Py_Dealloc@plt>
    cfcc:	mov	x21, xzr
    cfd0:	mov	x0, x21
    cfd4:	ldp	x20, x19, [sp, #64]
    cfd8:	ldp	x22, x21, [sp, #48]
    cfdc:	ldp	x29, x30, [sp, #32]
    cfe0:	add	sp, sp, #0x50
    cfe4:	ret
    cfe8:	ldr	x8, [x20]
    cfec:	subs	x8, x8, #0x1
    cff0:	str	x8, [x20]
    cff4:	b.ne	d000 <PyInit__decimal@@Base+0x654c>  // b.any
    cff8:	mov	x0, x20
    cffc:	bl	6510 <_Py_Dealloc@plt>
    d000:	mov	x21, xzr
    d004:	str	xzr, [sp, #8]
    d008:	b	cfd0 <PyInit__decimal@@Base+0x651c>
    d00c:	sub	sp, sp, #0x50
    d010:	stp	x29, x30, [sp, #32]
    d014:	stp	x22, x21, [sp, #48]
    d018:	stp	x20, x19, [sp, #64]
    d01c:	add	x29, sp, #0x20
    d020:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    d024:	ldr	x20, [x20, #4008]
    d028:	mov	x8, x2
    d02c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    d030:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    d034:	mov	x19, x0
    d038:	add	x2, x2, #0xab
    d03c:	add	x3, x3, #0x9d0
    d040:	add	x4, sp, #0x10
    d044:	add	x5, sp, #0x8
    d048:	mov	x0, x1
    d04c:	mov	x1, x8
    d050:	str	x20, [sp, #8]
    d054:	str	wzr, [sp, #4]
    d058:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    d05c:	cbz	w0, d358 <PyInit__decimal@@Base+0x68a4>
    d060:	ldr	x8, [sp, #8]
    d064:	cmp	x8, x20
    d068:	b.eq	d0ac <PyInit__decimal@@Base+0x65f8>  // b.none
    d06c:	ldr	x0, [x8, #8]
    d070:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    d074:	add	x8, x8, #0x0
    d078:	cmp	x0, x8
    d07c:	b.eq	d0e8 <PyInit__decimal@@Base+0x6634>  // b.none
    d080:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    d084:	add	x1, x1, #0x0
    d088:	bl	6900 <PyType_IsSubtype@plt>
    d08c:	cbnz	w0, d0e8 <PyInit__decimal@@Base+0x6634>
    d090:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    d094:	ldr	x8, [x8, #3936]
    d098:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d09c:	add	x1, x1, #0xf61
    d0a0:	ldr	x0, [x8]
    d0a4:	bl	6590 <PyErr_SetString@plt>
    d0a8:	b	d358 <PyInit__decimal@@Base+0x68a4>
    d0ac:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    d0b0:	ldr	x0, [x21, #1400]
    d0b4:	sub	x2, x29, #0x8
    d0b8:	mov	x1, xzr
    d0bc:	bl	6680 <PyContextVar_Get@plt>
    d0c0:	tbnz	w0, #31, d38c <PyInit__decimal@@Base+0x68d8>
    d0c4:	ldur	x20, [x29, #-8]
    d0c8:	cbz	x20, d2a0 <PyInit__decimal@@Base+0x67ec>
    d0cc:	str	x20, [sp, #8]
    d0d0:	ldr	x8, [x20]
    d0d4:	subs	x8, x8, #0x1
    d0d8:	str	x8, [x20]
    d0dc:	b.ne	d0e8 <PyInit__decimal@@Base+0x6634>  // b.any
    d0e0:	mov	x0, x20
    d0e4:	bl	6510 <_Py_Dealloc@plt>
    d0e8:	ldr	x0, [x19, #8]
    d0ec:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    d0f0:	add	x21, x21, #0xe60
    d0f4:	cmp	x0, x21
    d0f8:	b.eq	d110 <PyInit__decimal@@Base+0x665c>  // b.none
    d0fc:	ldr	x20, [sp, #8]
    d100:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    d104:	add	x1, x1, #0xe60
    d108:	bl	6900 <PyType_IsSubtype@plt>
    d10c:	cbz	w0, d200 <PyInit__decimal@@Base+0x674c>
    d110:	ldr	x8, [x19]
    d114:	add	x8, x8, #0x1
    d118:	str	x8, [x19]
    d11c:	ldr	x20, [sp, #16]
    d120:	ldr	x0, [x20, #8]
    d124:	cmp	x0, x21
    d128:	b.eq	d140 <PyInit__decimal@@Base+0x668c>  // b.none
    d12c:	ldr	x21, [sp, #8]
    d130:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    d134:	add	x1, x1, #0xe60
    d138:	bl	6900 <PyType_IsSubtype@plt>
    d13c:	cbz	w0, d22c <PyInit__decimal@@Base+0x6778>
    d140:	ldr	x8, [x20]
    d144:	add	x8, x8, #0x1
    d148:	str	x8, [x20]
    d14c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d150:	add	x0, x0, #0xe60
    d154:	bl	6890 <_PyObject_New@plt>
    d158:	cbz	x0, d1d0 <PyInit__decimal@@Base+0x671c>
    d15c:	mov	w8, #0x30                  	// #48
    d160:	mov	x21, x0
    d164:	strb	w8, [x0, #24]!
    d168:	mov	x9, #0xffffffffffffffff    	// #-1
    d16c:	mov	w10, #0x4                   	// #4
    d170:	add	x8, x0, #0x30
    d174:	stur	x9, [x0, #-8]
    d178:	stp	xzr, xzr, [x0, #8]
    d17c:	stp	xzr, x10, [x0, #24]
    d180:	str	x8, [x0, #40]
    d184:	ldr	x8, [sp, #8]
    d188:	add	x1, x19, #0x18
    d18c:	add	x2, x20, #0x18
    d190:	add	x4, sp, #0x4
    d194:	add	x3, x8, #0x10
    d198:	bl	320d0 <PyInit__decimal@@Base+0x2b61c>
    d19c:	ldr	x8, [x19]
    d1a0:	subs	x8, x8, #0x1
    d1a4:	str	x8, [x19]
    d1a8:	b.eq	d258 <PyInit__decimal@@Base+0x67a4>  // b.none
    d1ac:	ldr	x8, [x20]
    d1b0:	subs	x8, x8, #0x1
    d1b4:	str	x8, [x20]
    d1b8:	b.eq	d270 <PyInit__decimal@@Base+0x67bc>  // b.none
    d1bc:	ldr	x0, [sp, #8]
    d1c0:	ldr	w1, [sp, #4]
    d1c4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    d1c8:	cbnz	w0, d288 <PyInit__decimal@@Base+0x67d4>
    d1cc:	b	d35c <PyInit__decimal@@Base+0x68a8>
    d1d0:	ldr	x8, [x19]
    d1d4:	subs	x8, x8, #0x1
    d1d8:	str	x8, [x19]
    d1dc:	b.ne	d1e8 <PyInit__decimal@@Base+0x6734>  // b.any
    d1e0:	mov	x0, x19
    d1e4:	bl	6510 <_Py_Dealloc@plt>
    d1e8:	ldr	x8, [x20]
    d1ec:	subs	x8, x8, #0x1
    d1f0:	str	x8, [x20]
    d1f4:	b.ne	d358 <PyInit__decimal@@Base+0x68a4>  // b.any
    d1f8:	mov	x0, x20
    d1fc:	b	d354 <PyInit__decimal@@Base+0x68a0>
    d200:	ldr	x8, [x19, #8]
    d204:	ldrb	w9, [x8, #171]
    d208:	tbnz	w9, #0, d304 <PyInit__decimal@@Base+0x6850>
    d20c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    d210:	ldr	x9, [x9, #3936]
    d214:	ldr	x2, [x8, #24]
    d218:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d21c:	add	x1, x1, #0xb93
    d220:	ldr	x0, [x9]
    d224:	bl	6950 <PyErr_Format@plt>
    d228:	b	d358 <PyInit__decimal@@Base+0x68a4>
    d22c:	ldr	x8, [x20, #8]
    d230:	ldrb	w9, [x8, #171]
    d234:	tbnz	w9, #0, d324 <PyInit__decimal@@Base+0x6870>
    d238:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    d23c:	ldr	x9, [x9, #3936]
    d240:	ldr	x2, [x8, #24]
    d244:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d248:	add	x1, x1, #0xb93
    d24c:	ldr	x0, [x9]
    d250:	bl	6950 <PyErr_Format@plt>
    d254:	b	d340 <PyInit__decimal@@Base+0x688c>
    d258:	mov	x0, x19
    d25c:	bl	6510 <_Py_Dealloc@plt>
    d260:	ldr	x8, [x20]
    d264:	subs	x8, x8, #0x1
    d268:	str	x8, [x20]
    d26c:	b.ne	d1bc <PyInit__decimal@@Base+0x6708>  // b.any
    d270:	mov	x0, x20
    d274:	bl	6510 <_Py_Dealloc@plt>
    d278:	ldr	x0, [sp, #8]
    d27c:	ldr	w1, [sp, #4]
    d280:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    d284:	cbz	w0, d35c <PyInit__decimal@@Base+0x68a8>
    d288:	ldr	x8, [x21]
    d28c:	subs	x8, x8, #0x1
    d290:	str	x8, [x21]
    d294:	b.ne	d358 <PyInit__decimal@@Base+0x68a4>  // b.any
    d298:	mov	x0, x21
    d29c:	b	d354 <PyInit__decimal@@Base+0x68a0>
    d2a0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    d2a4:	ldr	x22, [x8, #1496]
    d2a8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    d2ac:	add	x0, x0, #0x0
    d2b0:	mov	x1, xzr
    d2b4:	bl	6780 <PyObject_CallObject@plt>
    d2b8:	cbz	x0, d38c <PyInit__decimal@@Base+0x68d8>
    d2bc:	ldp	q1, q0, [x22, #32]
    d2c0:	ldr	q2, [x22, #16]
    d2c4:	mov	x20, x0
    d2c8:	mov	x1, x20
    d2cc:	stp	q1, q0, [x0, #32]
    d2d0:	str	q2, [x0, #16]
    d2d4:	ldr	w8, [x22, #80]
    d2d8:	stp	wzr, wzr, [x0, #44]
    d2dc:	str	w8, [x0, #80]
    d2e0:	ldr	x0, [x21, #1400]
    d2e4:	bl	65c0 <PyContextVar_Set@plt>
    d2e8:	cbz	x0, d374 <PyInit__decimal@@Base+0x68c0>
    d2ec:	ldr	x8, [x0]
    d2f0:	subs	x8, x8, #0x1
    d2f4:	str	x8, [x0]
    d2f8:	b.ne	d0cc <PyInit__decimal@@Base+0x6618>  // b.any
    d2fc:	bl	6510 <_Py_Dealloc@plt>
    d300:	b	d0cc <PyInit__decimal@@Base+0x6618>
    d304:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d308:	add	x0, x0, #0xe60
    d30c:	mov	x1, x19
    d310:	mov	x2, x20
    d314:	bl	abdc <PyInit__decimal@@Base+0x4128>
    d318:	mov	x19, x0
    d31c:	cbnz	x0, d11c <PyInit__decimal@@Base+0x6668>
    d320:	b	d358 <PyInit__decimal@@Base+0x68a4>
    d324:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d328:	add	x0, x0, #0xe60
    d32c:	mov	x1, x20
    d330:	mov	x2, x21
    d334:	bl	abdc <PyInit__decimal@@Base+0x4128>
    d338:	mov	x20, x0
    d33c:	cbnz	x0, d14c <PyInit__decimal@@Base+0x6698>
    d340:	ldr	x8, [x19]
    d344:	subs	x8, x8, #0x1
    d348:	str	x8, [x19]
    d34c:	b.ne	d358 <PyInit__decimal@@Base+0x68a4>  // b.any
    d350:	mov	x0, x19
    d354:	bl	6510 <_Py_Dealloc@plt>
    d358:	mov	x21, xzr
    d35c:	mov	x0, x21
    d360:	ldp	x20, x19, [sp, #64]
    d364:	ldp	x22, x21, [sp, #48]
    d368:	ldp	x29, x30, [sp, #32]
    d36c:	add	sp, sp, #0x50
    d370:	ret
    d374:	ldr	x8, [x20]
    d378:	subs	x8, x8, #0x1
    d37c:	str	x8, [x20]
    d380:	b.ne	d38c <PyInit__decimal@@Base+0x68d8>  // b.any
    d384:	mov	x0, x20
    d388:	bl	6510 <_Py_Dealloc@plt>
    d38c:	mov	x21, xzr
    d390:	str	xzr, [sp, #8]
    d394:	b	d35c <PyInit__decimal@@Base+0x68a8>
    d398:	sub	sp, sp, #0x50
    d39c:	stp	x29, x30, [sp, #32]
    d3a0:	stp	x22, x21, [sp, #48]
    d3a4:	stp	x20, x19, [sp, #64]
    d3a8:	add	x29, sp, #0x20
    d3ac:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    d3b0:	ldr	x20, [x20, #4008]
    d3b4:	mov	x8, x2
    d3b8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    d3bc:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    d3c0:	mov	x19, x0
    d3c4:	add	x2, x2, #0xab
    d3c8:	add	x3, x3, #0x9e8
    d3cc:	add	x4, sp, #0x10
    d3d0:	add	x5, sp, #0x8
    d3d4:	mov	x0, x1
    d3d8:	mov	x1, x8
    d3dc:	str	x20, [sp, #8]
    d3e0:	str	wzr, [sp, #4]
    d3e4:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    d3e8:	cbz	w0, d6e4 <PyInit__decimal@@Base+0x6c30>
    d3ec:	ldr	x8, [sp, #8]
    d3f0:	cmp	x8, x20
    d3f4:	b.eq	d438 <PyInit__decimal@@Base+0x6984>  // b.none
    d3f8:	ldr	x0, [x8, #8]
    d3fc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    d400:	add	x8, x8, #0x0
    d404:	cmp	x0, x8
    d408:	b.eq	d474 <PyInit__decimal@@Base+0x69c0>  // b.none
    d40c:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    d410:	add	x1, x1, #0x0
    d414:	bl	6900 <PyType_IsSubtype@plt>
    d418:	cbnz	w0, d474 <PyInit__decimal@@Base+0x69c0>
    d41c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    d420:	ldr	x8, [x8, #3936]
    d424:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d428:	add	x1, x1, #0xf61
    d42c:	ldr	x0, [x8]
    d430:	bl	6590 <PyErr_SetString@plt>
    d434:	b	d6e4 <PyInit__decimal@@Base+0x6c30>
    d438:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    d43c:	ldr	x0, [x21, #1400]
    d440:	sub	x2, x29, #0x8
    d444:	mov	x1, xzr
    d448:	bl	6680 <PyContextVar_Get@plt>
    d44c:	tbnz	w0, #31, d718 <PyInit__decimal@@Base+0x6c64>
    d450:	ldur	x20, [x29, #-8]
    d454:	cbz	x20, d62c <PyInit__decimal@@Base+0x6b78>
    d458:	str	x20, [sp, #8]
    d45c:	ldr	x8, [x20]
    d460:	subs	x8, x8, #0x1
    d464:	str	x8, [x20]
    d468:	b.ne	d474 <PyInit__decimal@@Base+0x69c0>  // b.any
    d46c:	mov	x0, x20
    d470:	bl	6510 <_Py_Dealloc@plt>
    d474:	ldr	x0, [x19, #8]
    d478:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    d47c:	add	x21, x21, #0xe60
    d480:	cmp	x0, x21
    d484:	b.eq	d49c <PyInit__decimal@@Base+0x69e8>  // b.none
    d488:	ldr	x20, [sp, #8]
    d48c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    d490:	add	x1, x1, #0xe60
    d494:	bl	6900 <PyType_IsSubtype@plt>
    d498:	cbz	w0, d58c <PyInit__decimal@@Base+0x6ad8>
    d49c:	ldr	x8, [x19]
    d4a0:	add	x8, x8, #0x1
    d4a4:	str	x8, [x19]
    d4a8:	ldr	x20, [sp, #16]
    d4ac:	ldr	x0, [x20, #8]
    d4b0:	cmp	x0, x21
    d4b4:	b.eq	d4cc <PyInit__decimal@@Base+0x6a18>  // b.none
    d4b8:	ldr	x21, [sp, #8]
    d4bc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    d4c0:	add	x1, x1, #0xe60
    d4c4:	bl	6900 <PyType_IsSubtype@plt>
    d4c8:	cbz	w0, d5b8 <PyInit__decimal@@Base+0x6b04>
    d4cc:	ldr	x8, [x20]
    d4d0:	add	x8, x8, #0x1
    d4d4:	str	x8, [x20]
    d4d8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d4dc:	add	x0, x0, #0xe60
    d4e0:	bl	6890 <_PyObject_New@plt>
    d4e4:	cbz	x0, d55c <PyInit__decimal@@Base+0x6aa8>
    d4e8:	mov	w8, #0x30                  	// #48
    d4ec:	mov	x21, x0
    d4f0:	strb	w8, [x0, #24]!
    d4f4:	mov	x9, #0xffffffffffffffff    	// #-1
    d4f8:	mov	w10, #0x4                   	// #4
    d4fc:	add	x8, x0, #0x30
    d500:	stur	x9, [x0, #-8]
    d504:	stp	xzr, xzr, [x0, #8]
    d508:	stp	xzr, x10, [x0, #24]
    d50c:	str	x8, [x0, #40]
    d510:	ldr	x8, [sp, #8]
    d514:	add	x1, x19, #0x18
    d518:	add	x2, x20, #0x18
    d51c:	add	x4, sp, #0x4
    d520:	add	x3, x8, #0x10
    d524:	bl	32384 <PyInit__decimal@@Base+0x2b8d0>
    d528:	ldr	x8, [x19]
    d52c:	subs	x8, x8, #0x1
    d530:	str	x8, [x19]
    d534:	b.eq	d5e4 <PyInit__decimal@@Base+0x6b30>  // b.none
    d538:	ldr	x8, [x20]
    d53c:	subs	x8, x8, #0x1
    d540:	str	x8, [x20]
    d544:	b.eq	d5fc <PyInit__decimal@@Base+0x6b48>  // b.none
    d548:	ldr	x0, [sp, #8]
    d54c:	ldr	w1, [sp, #4]
    d550:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    d554:	cbnz	w0, d614 <PyInit__decimal@@Base+0x6b60>
    d558:	b	d6e8 <PyInit__decimal@@Base+0x6c34>
    d55c:	ldr	x8, [x19]
    d560:	subs	x8, x8, #0x1
    d564:	str	x8, [x19]
    d568:	b.ne	d574 <PyInit__decimal@@Base+0x6ac0>  // b.any
    d56c:	mov	x0, x19
    d570:	bl	6510 <_Py_Dealloc@plt>
    d574:	ldr	x8, [x20]
    d578:	subs	x8, x8, #0x1
    d57c:	str	x8, [x20]
    d580:	b.ne	d6e4 <PyInit__decimal@@Base+0x6c30>  // b.any
    d584:	mov	x0, x20
    d588:	b	d6e0 <PyInit__decimal@@Base+0x6c2c>
    d58c:	ldr	x8, [x19, #8]
    d590:	ldrb	w9, [x8, #171]
    d594:	tbnz	w9, #0, d690 <PyInit__decimal@@Base+0x6bdc>
    d598:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    d59c:	ldr	x9, [x9, #3936]
    d5a0:	ldr	x2, [x8, #24]
    d5a4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d5a8:	add	x1, x1, #0xb93
    d5ac:	ldr	x0, [x9]
    d5b0:	bl	6950 <PyErr_Format@plt>
    d5b4:	b	d6e4 <PyInit__decimal@@Base+0x6c30>
    d5b8:	ldr	x8, [x20, #8]
    d5bc:	ldrb	w9, [x8, #171]
    d5c0:	tbnz	w9, #0, d6b0 <PyInit__decimal@@Base+0x6bfc>
    d5c4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    d5c8:	ldr	x9, [x9, #3936]
    d5cc:	ldr	x2, [x8, #24]
    d5d0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d5d4:	add	x1, x1, #0xb93
    d5d8:	ldr	x0, [x9]
    d5dc:	bl	6950 <PyErr_Format@plt>
    d5e0:	b	d6cc <PyInit__decimal@@Base+0x6c18>
    d5e4:	mov	x0, x19
    d5e8:	bl	6510 <_Py_Dealloc@plt>
    d5ec:	ldr	x8, [x20]
    d5f0:	subs	x8, x8, #0x1
    d5f4:	str	x8, [x20]
    d5f8:	b.ne	d548 <PyInit__decimal@@Base+0x6a94>  // b.any
    d5fc:	mov	x0, x20
    d600:	bl	6510 <_Py_Dealloc@plt>
    d604:	ldr	x0, [sp, #8]
    d608:	ldr	w1, [sp, #4]
    d60c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    d610:	cbz	w0, d6e8 <PyInit__decimal@@Base+0x6c34>
    d614:	ldr	x8, [x21]
    d618:	subs	x8, x8, #0x1
    d61c:	str	x8, [x21]
    d620:	b.ne	d6e4 <PyInit__decimal@@Base+0x6c30>  // b.any
    d624:	mov	x0, x21
    d628:	b	d6e0 <PyInit__decimal@@Base+0x6c2c>
    d62c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    d630:	ldr	x22, [x8, #1496]
    d634:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    d638:	add	x0, x0, #0x0
    d63c:	mov	x1, xzr
    d640:	bl	6780 <PyObject_CallObject@plt>
    d644:	cbz	x0, d718 <PyInit__decimal@@Base+0x6c64>
    d648:	ldp	q1, q0, [x22, #32]
    d64c:	ldr	q2, [x22, #16]
    d650:	mov	x20, x0
    d654:	mov	x1, x20
    d658:	stp	q1, q0, [x0, #32]
    d65c:	str	q2, [x0, #16]
    d660:	ldr	w8, [x22, #80]
    d664:	stp	wzr, wzr, [x0, #44]
    d668:	str	w8, [x0, #80]
    d66c:	ldr	x0, [x21, #1400]
    d670:	bl	65c0 <PyContextVar_Set@plt>
    d674:	cbz	x0, d700 <PyInit__decimal@@Base+0x6c4c>
    d678:	ldr	x8, [x0]
    d67c:	subs	x8, x8, #0x1
    d680:	str	x8, [x0]
    d684:	b.ne	d458 <PyInit__decimal@@Base+0x69a4>  // b.any
    d688:	bl	6510 <_Py_Dealloc@plt>
    d68c:	b	d458 <PyInit__decimal@@Base+0x69a4>
    d690:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d694:	add	x0, x0, #0xe60
    d698:	mov	x1, x19
    d69c:	mov	x2, x20
    d6a0:	bl	abdc <PyInit__decimal@@Base+0x4128>
    d6a4:	mov	x19, x0
    d6a8:	cbnz	x0, d4a8 <PyInit__decimal@@Base+0x69f4>
    d6ac:	b	d6e4 <PyInit__decimal@@Base+0x6c30>
    d6b0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d6b4:	add	x0, x0, #0xe60
    d6b8:	mov	x1, x20
    d6bc:	mov	x2, x21
    d6c0:	bl	abdc <PyInit__decimal@@Base+0x4128>
    d6c4:	mov	x20, x0
    d6c8:	cbnz	x0, d4d8 <PyInit__decimal@@Base+0x6a24>
    d6cc:	ldr	x8, [x19]
    d6d0:	subs	x8, x8, #0x1
    d6d4:	str	x8, [x19]
    d6d8:	b.ne	d6e4 <PyInit__decimal@@Base+0x6c30>  // b.any
    d6dc:	mov	x0, x19
    d6e0:	bl	6510 <_Py_Dealloc@plt>
    d6e4:	mov	x21, xzr
    d6e8:	mov	x0, x21
    d6ec:	ldp	x20, x19, [sp, #64]
    d6f0:	ldp	x22, x21, [sp, #48]
    d6f4:	ldp	x29, x30, [sp, #32]
    d6f8:	add	sp, sp, #0x50
    d6fc:	ret
    d700:	ldr	x8, [x20]
    d704:	subs	x8, x8, #0x1
    d708:	str	x8, [x20]
    d70c:	b.ne	d718 <PyInit__decimal@@Base+0x6c64>  // b.any
    d710:	mov	x0, x20
    d714:	bl	6510 <_Py_Dealloc@plt>
    d718:	mov	x21, xzr
    d71c:	str	xzr, [sp, #8]
    d720:	b	d6e8 <PyInit__decimal@@Base+0x6c34>
    d724:	sub	sp, sp, #0x50
    d728:	stp	x29, x30, [sp, #32]
    d72c:	stp	x22, x21, [sp, #48]
    d730:	stp	x20, x19, [sp, #64]
    d734:	add	x29, sp, #0x20
    d738:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    d73c:	ldr	x20, [x20, #4008]
    d740:	mov	x8, x2
    d744:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    d748:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    d74c:	mov	x19, x0
    d750:	add	x2, x2, #0xab
    d754:	add	x3, x3, #0xa00
    d758:	add	x4, sp, #0x10
    d75c:	add	x5, sp, #0x8
    d760:	mov	x0, x1
    d764:	mov	x1, x8
    d768:	str	x20, [sp, #8]
    d76c:	str	wzr, [sp, #4]
    d770:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    d774:	cbz	w0, da70 <PyInit__decimal@@Base+0x6fbc>
    d778:	ldr	x8, [sp, #8]
    d77c:	cmp	x8, x20
    d780:	b.eq	d7c4 <PyInit__decimal@@Base+0x6d10>  // b.none
    d784:	ldr	x0, [x8, #8]
    d788:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    d78c:	add	x8, x8, #0x0
    d790:	cmp	x0, x8
    d794:	b.eq	d800 <PyInit__decimal@@Base+0x6d4c>  // b.none
    d798:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    d79c:	add	x1, x1, #0x0
    d7a0:	bl	6900 <PyType_IsSubtype@plt>
    d7a4:	cbnz	w0, d800 <PyInit__decimal@@Base+0x6d4c>
    d7a8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    d7ac:	ldr	x8, [x8, #3936]
    d7b0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d7b4:	add	x1, x1, #0xf61
    d7b8:	ldr	x0, [x8]
    d7bc:	bl	6590 <PyErr_SetString@plt>
    d7c0:	b	da70 <PyInit__decimal@@Base+0x6fbc>
    d7c4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    d7c8:	ldr	x0, [x21, #1400]
    d7cc:	sub	x2, x29, #0x8
    d7d0:	mov	x1, xzr
    d7d4:	bl	6680 <PyContextVar_Get@plt>
    d7d8:	tbnz	w0, #31, daa4 <PyInit__decimal@@Base+0x6ff0>
    d7dc:	ldur	x20, [x29, #-8]
    d7e0:	cbz	x20, d9b8 <PyInit__decimal@@Base+0x6f04>
    d7e4:	str	x20, [sp, #8]
    d7e8:	ldr	x8, [x20]
    d7ec:	subs	x8, x8, #0x1
    d7f0:	str	x8, [x20]
    d7f4:	b.ne	d800 <PyInit__decimal@@Base+0x6d4c>  // b.any
    d7f8:	mov	x0, x20
    d7fc:	bl	6510 <_Py_Dealloc@plt>
    d800:	ldr	x0, [x19, #8]
    d804:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    d808:	add	x21, x21, #0xe60
    d80c:	cmp	x0, x21
    d810:	b.eq	d828 <PyInit__decimal@@Base+0x6d74>  // b.none
    d814:	ldr	x20, [sp, #8]
    d818:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    d81c:	add	x1, x1, #0xe60
    d820:	bl	6900 <PyType_IsSubtype@plt>
    d824:	cbz	w0, d918 <PyInit__decimal@@Base+0x6e64>
    d828:	ldr	x8, [x19]
    d82c:	add	x8, x8, #0x1
    d830:	str	x8, [x19]
    d834:	ldr	x20, [sp, #16]
    d838:	ldr	x0, [x20, #8]
    d83c:	cmp	x0, x21
    d840:	b.eq	d858 <PyInit__decimal@@Base+0x6da4>  // b.none
    d844:	ldr	x21, [sp, #8]
    d848:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    d84c:	add	x1, x1, #0xe60
    d850:	bl	6900 <PyType_IsSubtype@plt>
    d854:	cbz	w0, d944 <PyInit__decimal@@Base+0x6e90>
    d858:	ldr	x8, [x20]
    d85c:	add	x8, x8, #0x1
    d860:	str	x8, [x20]
    d864:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    d868:	add	x0, x0, #0xe60
    d86c:	bl	6890 <_PyObject_New@plt>
    d870:	cbz	x0, d8e8 <PyInit__decimal@@Base+0x6e34>
    d874:	mov	w8, #0x30                  	// #48
    d878:	mov	x21, x0
    d87c:	strb	w8, [x0, #24]!
    d880:	mov	x9, #0xffffffffffffffff    	// #-1
    d884:	mov	w10, #0x4                   	// #4
    d888:	add	x8, x0, #0x30
    d88c:	stur	x9, [x0, #-8]
    d890:	stp	xzr, xzr, [x0, #8]
    d894:	stp	xzr, x10, [x0, #24]
    d898:	str	x8, [x0, #40]
    d89c:	ldr	x8, [sp, #8]
    d8a0:	add	x1, x19, #0x18
    d8a4:	add	x2, x20, #0x18
    d8a8:	add	x4, sp, #0x4
    d8ac:	add	x3, x8, #0x10
    d8b0:	bl	32658 <PyInit__decimal@@Base+0x2bba4>
    d8b4:	ldr	x8, [x19]
    d8b8:	subs	x8, x8, #0x1
    d8bc:	str	x8, [x19]
    d8c0:	b.eq	d970 <PyInit__decimal@@Base+0x6ebc>  // b.none
    d8c4:	ldr	x8, [x20]
    d8c8:	subs	x8, x8, #0x1
    d8cc:	str	x8, [x20]
    d8d0:	b.eq	d988 <PyInit__decimal@@Base+0x6ed4>  // b.none
    d8d4:	ldr	x0, [sp, #8]
    d8d8:	ldr	w1, [sp, #4]
    d8dc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    d8e0:	cbnz	w0, d9a0 <PyInit__decimal@@Base+0x6eec>
    d8e4:	b	da74 <PyInit__decimal@@Base+0x6fc0>
    d8e8:	ldr	x8, [x19]
    d8ec:	subs	x8, x8, #0x1
    d8f0:	str	x8, [x19]
    d8f4:	b.ne	d900 <PyInit__decimal@@Base+0x6e4c>  // b.any
    d8f8:	mov	x0, x19
    d8fc:	bl	6510 <_Py_Dealloc@plt>
    d900:	ldr	x8, [x20]
    d904:	subs	x8, x8, #0x1
    d908:	str	x8, [x20]
    d90c:	b.ne	da70 <PyInit__decimal@@Base+0x6fbc>  // b.any
    d910:	mov	x0, x20
    d914:	b	da6c <PyInit__decimal@@Base+0x6fb8>
    d918:	ldr	x8, [x19, #8]
    d91c:	ldrb	w9, [x8, #171]
    d920:	tbnz	w9, #0, da1c <PyInit__decimal@@Base+0x6f68>
    d924:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    d928:	ldr	x9, [x9, #3936]
    d92c:	ldr	x2, [x8, #24]
    d930:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d934:	add	x1, x1, #0xb93
    d938:	ldr	x0, [x9]
    d93c:	bl	6950 <PyErr_Format@plt>
    d940:	b	da70 <PyInit__decimal@@Base+0x6fbc>
    d944:	ldr	x8, [x20, #8]
    d948:	ldrb	w9, [x8, #171]
    d94c:	tbnz	w9, #0, da3c <PyInit__decimal@@Base+0x6f88>
    d950:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    d954:	ldr	x9, [x9, #3936]
    d958:	ldr	x2, [x8, #24]
    d95c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    d960:	add	x1, x1, #0xb93
    d964:	ldr	x0, [x9]
    d968:	bl	6950 <PyErr_Format@plt>
    d96c:	b	da58 <PyInit__decimal@@Base+0x6fa4>
    d970:	mov	x0, x19
    d974:	bl	6510 <_Py_Dealloc@plt>
    d978:	ldr	x8, [x20]
    d97c:	subs	x8, x8, #0x1
    d980:	str	x8, [x20]
    d984:	b.ne	d8d4 <PyInit__decimal@@Base+0x6e20>  // b.any
    d988:	mov	x0, x20
    d98c:	bl	6510 <_Py_Dealloc@plt>
    d990:	ldr	x0, [sp, #8]
    d994:	ldr	w1, [sp, #4]
    d998:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    d99c:	cbz	w0, da74 <PyInit__decimal@@Base+0x6fc0>
    d9a0:	ldr	x8, [x21]
    d9a4:	subs	x8, x8, #0x1
    d9a8:	str	x8, [x21]
    d9ac:	b.ne	da70 <PyInit__decimal@@Base+0x6fbc>  // b.any
    d9b0:	mov	x0, x21
    d9b4:	b	da6c <PyInit__decimal@@Base+0x6fb8>
    d9b8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    d9bc:	ldr	x22, [x8, #1496]
    d9c0:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    d9c4:	add	x0, x0, #0x0
    d9c8:	mov	x1, xzr
    d9cc:	bl	6780 <PyObject_CallObject@plt>
    d9d0:	cbz	x0, daa4 <PyInit__decimal@@Base+0x6ff0>
    d9d4:	ldp	q1, q0, [x22, #32]
    d9d8:	ldr	q2, [x22, #16]
    d9dc:	mov	x20, x0
    d9e0:	mov	x1, x20
    d9e4:	stp	q1, q0, [x0, #32]
    d9e8:	str	q2, [x0, #16]
    d9ec:	ldr	w8, [x22, #80]
    d9f0:	stp	wzr, wzr, [x0, #44]
    d9f4:	str	w8, [x0, #80]
    d9f8:	ldr	x0, [x21, #1400]
    d9fc:	bl	65c0 <PyContextVar_Set@plt>
    da00:	cbz	x0, da8c <PyInit__decimal@@Base+0x6fd8>
    da04:	ldr	x8, [x0]
    da08:	subs	x8, x8, #0x1
    da0c:	str	x8, [x0]
    da10:	b.ne	d7e4 <PyInit__decimal@@Base+0x6d30>  // b.any
    da14:	bl	6510 <_Py_Dealloc@plt>
    da18:	b	d7e4 <PyInit__decimal@@Base+0x6d30>
    da1c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    da20:	add	x0, x0, #0xe60
    da24:	mov	x1, x19
    da28:	mov	x2, x20
    da2c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    da30:	mov	x19, x0
    da34:	cbnz	x0, d834 <PyInit__decimal@@Base+0x6d80>
    da38:	b	da70 <PyInit__decimal@@Base+0x6fbc>
    da3c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    da40:	add	x0, x0, #0xe60
    da44:	mov	x1, x20
    da48:	mov	x2, x21
    da4c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    da50:	mov	x20, x0
    da54:	cbnz	x0, d864 <PyInit__decimal@@Base+0x6db0>
    da58:	ldr	x8, [x19]
    da5c:	subs	x8, x8, #0x1
    da60:	str	x8, [x19]
    da64:	b.ne	da70 <PyInit__decimal@@Base+0x6fbc>  // b.any
    da68:	mov	x0, x19
    da6c:	bl	6510 <_Py_Dealloc@plt>
    da70:	mov	x21, xzr
    da74:	mov	x0, x21
    da78:	ldp	x20, x19, [sp, #64]
    da7c:	ldp	x22, x21, [sp, #48]
    da80:	ldp	x29, x30, [sp, #32]
    da84:	add	sp, sp, #0x50
    da88:	ret
    da8c:	ldr	x8, [x20]
    da90:	subs	x8, x8, #0x1
    da94:	str	x8, [x20]
    da98:	b.ne	daa4 <PyInit__decimal@@Base+0x6ff0>  // b.any
    da9c:	mov	x0, x20
    daa0:	bl	6510 <_Py_Dealloc@plt>
    daa4:	mov	x21, xzr
    daa8:	str	xzr, [sp, #8]
    daac:	b	da74 <PyInit__decimal@@Base+0x6fc0>
    dab0:	sub	sp, sp, #0x50
    dab4:	stp	x29, x30, [sp, #32]
    dab8:	stp	x22, x21, [sp, #48]
    dabc:	stp	x20, x19, [sp, #64]
    dac0:	add	x29, sp, #0x20
    dac4:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    dac8:	ldr	x20, [x20, #4008]
    dacc:	mov	x8, x2
    dad0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    dad4:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    dad8:	mov	x19, x0
    dadc:	add	x2, x2, #0xab
    dae0:	add	x3, x3, #0xa18
    dae4:	add	x4, sp, #0x10
    dae8:	add	x5, sp, #0x8
    daec:	mov	x0, x1
    daf0:	mov	x1, x8
    daf4:	str	x20, [sp, #8]
    daf8:	str	wzr, [sp, #4]
    dafc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    db00:	cbz	w0, ddfc <PyInit__decimal@@Base+0x7348>
    db04:	ldr	x8, [sp, #8]
    db08:	cmp	x8, x20
    db0c:	b.eq	db50 <PyInit__decimal@@Base+0x709c>  // b.none
    db10:	ldr	x0, [x8, #8]
    db14:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    db18:	add	x8, x8, #0x0
    db1c:	cmp	x0, x8
    db20:	b.eq	db8c <PyInit__decimal@@Base+0x70d8>  // b.none
    db24:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    db28:	add	x1, x1, #0x0
    db2c:	bl	6900 <PyType_IsSubtype@plt>
    db30:	cbnz	w0, db8c <PyInit__decimal@@Base+0x70d8>
    db34:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    db38:	ldr	x8, [x8, #3936]
    db3c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    db40:	add	x1, x1, #0xf61
    db44:	ldr	x0, [x8]
    db48:	bl	6590 <PyErr_SetString@plt>
    db4c:	b	ddfc <PyInit__decimal@@Base+0x7348>
    db50:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    db54:	ldr	x0, [x21, #1400]
    db58:	sub	x2, x29, #0x8
    db5c:	mov	x1, xzr
    db60:	bl	6680 <PyContextVar_Get@plt>
    db64:	tbnz	w0, #31, de30 <PyInit__decimal@@Base+0x737c>
    db68:	ldur	x20, [x29, #-8]
    db6c:	cbz	x20, dd44 <PyInit__decimal@@Base+0x7290>
    db70:	str	x20, [sp, #8]
    db74:	ldr	x8, [x20]
    db78:	subs	x8, x8, #0x1
    db7c:	str	x8, [x20]
    db80:	b.ne	db8c <PyInit__decimal@@Base+0x70d8>  // b.any
    db84:	mov	x0, x20
    db88:	bl	6510 <_Py_Dealloc@plt>
    db8c:	ldr	x0, [x19, #8]
    db90:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    db94:	add	x21, x21, #0xe60
    db98:	cmp	x0, x21
    db9c:	b.eq	dbb4 <PyInit__decimal@@Base+0x7100>  // b.none
    dba0:	ldr	x20, [sp, #8]
    dba4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    dba8:	add	x1, x1, #0xe60
    dbac:	bl	6900 <PyType_IsSubtype@plt>
    dbb0:	cbz	w0, dca4 <PyInit__decimal@@Base+0x71f0>
    dbb4:	ldr	x8, [x19]
    dbb8:	add	x8, x8, #0x1
    dbbc:	str	x8, [x19]
    dbc0:	ldr	x20, [sp, #16]
    dbc4:	ldr	x0, [x20, #8]
    dbc8:	cmp	x0, x21
    dbcc:	b.eq	dbe4 <PyInit__decimal@@Base+0x7130>  // b.none
    dbd0:	ldr	x21, [sp, #8]
    dbd4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    dbd8:	add	x1, x1, #0xe60
    dbdc:	bl	6900 <PyType_IsSubtype@plt>
    dbe0:	cbz	w0, dcd0 <PyInit__decimal@@Base+0x721c>
    dbe4:	ldr	x8, [x20]
    dbe8:	add	x8, x8, #0x1
    dbec:	str	x8, [x20]
    dbf0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    dbf4:	add	x0, x0, #0xe60
    dbf8:	bl	6890 <_PyObject_New@plt>
    dbfc:	cbz	x0, dc74 <PyInit__decimal@@Base+0x71c0>
    dc00:	mov	w8, #0x30                  	// #48
    dc04:	mov	x21, x0
    dc08:	strb	w8, [x0, #24]!
    dc0c:	mov	x9, #0xffffffffffffffff    	// #-1
    dc10:	mov	w10, #0x4                   	// #4
    dc14:	add	x8, x0, #0x30
    dc18:	stur	x9, [x0, #-8]
    dc1c:	stp	xzr, xzr, [x0, #8]
    dc20:	stp	xzr, x10, [x0, #24]
    dc24:	str	x8, [x0, #40]
    dc28:	ldr	x8, [sp, #8]
    dc2c:	add	x1, x19, #0x18
    dc30:	add	x2, x20, #0x18
    dc34:	add	x4, sp, #0x4
    dc38:	add	x3, x8, #0x10
    dc3c:	bl	33214 <PyInit__decimal@@Base+0x2c760>
    dc40:	ldr	x8, [x19]
    dc44:	subs	x8, x8, #0x1
    dc48:	str	x8, [x19]
    dc4c:	b.eq	dcfc <PyInit__decimal@@Base+0x7248>  // b.none
    dc50:	ldr	x8, [x20]
    dc54:	subs	x8, x8, #0x1
    dc58:	str	x8, [x20]
    dc5c:	b.eq	dd14 <PyInit__decimal@@Base+0x7260>  // b.none
    dc60:	ldr	x0, [sp, #8]
    dc64:	ldr	w1, [sp, #4]
    dc68:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    dc6c:	cbnz	w0, dd2c <PyInit__decimal@@Base+0x7278>
    dc70:	b	de00 <PyInit__decimal@@Base+0x734c>
    dc74:	ldr	x8, [x19]
    dc78:	subs	x8, x8, #0x1
    dc7c:	str	x8, [x19]
    dc80:	b.ne	dc8c <PyInit__decimal@@Base+0x71d8>  // b.any
    dc84:	mov	x0, x19
    dc88:	bl	6510 <_Py_Dealloc@plt>
    dc8c:	ldr	x8, [x20]
    dc90:	subs	x8, x8, #0x1
    dc94:	str	x8, [x20]
    dc98:	b.ne	ddfc <PyInit__decimal@@Base+0x7348>  // b.any
    dc9c:	mov	x0, x20
    dca0:	b	ddf8 <PyInit__decimal@@Base+0x7344>
    dca4:	ldr	x8, [x19, #8]
    dca8:	ldrb	w9, [x8, #171]
    dcac:	tbnz	w9, #0, dda8 <PyInit__decimal@@Base+0x72f4>
    dcb0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    dcb4:	ldr	x9, [x9, #3936]
    dcb8:	ldr	x2, [x8, #24]
    dcbc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    dcc0:	add	x1, x1, #0xb93
    dcc4:	ldr	x0, [x9]
    dcc8:	bl	6950 <PyErr_Format@plt>
    dccc:	b	ddfc <PyInit__decimal@@Base+0x7348>
    dcd0:	ldr	x8, [x20, #8]
    dcd4:	ldrb	w9, [x8, #171]
    dcd8:	tbnz	w9, #0, ddc8 <PyInit__decimal@@Base+0x7314>
    dcdc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    dce0:	ldr	x9, [x9, #3936]
    dce4:	ldr	x2, [x8, #24]
    dce8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    dcec:	add	x1, x1, #0xb93
    dcf0:	ldr	x0, [x9]
    dcf4:	bl	6950 <PyErr_Format@plt>
    dcf8:	b	dde4 <PyInit__decimal@@Base+0x7330>
    dcfc:	mov	x0, x19
    dd00:	bl	6510 <_Py_Dealloc@plt>
    dd04:	ldr	x8, [x20]
    dd08:	subs	x8, x8, #0x1
    dd0c:	str	x8, [x20]
    dd10:	b.ne	dc60 <PyInit__decimal@@Base+0x71ac>  // b.any
    dd14:	mov	x0, x20
    dd18:	bl	6510 <_Py_Dealloc@plt>
    dd1c:	ldr	x0, [sp, #8]
    dd20:	ldr	w1, [sp, #4]
    dd24:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    dd28:	cbz	w0, de00 <PyInit__decimal@@Base+0x734c>
    dd2c:	ldr	x8, [x21]
    dd30:	subs	x8, x8, #0x1
    dd34:	str	x8, [x21]
    dd38:	b.ne	ddfc <PyInit__decimal@@Base+0x7348>  // b.any
    dd3c:	mov	x0, x21
    dd40:	b	ddf8 <PyInit__decimal@@Base+0x7344>
    dd44:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    dd48:	ldr	x22, [x8, #1496]
    dd4c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    dd50:	add	x0, x0, #0x0
    dd54:	mov	x1, xzr
    dd58:	bl	6780 <PyObject_CallObject@plt>
    dd5c:	cbz	x0, de30 <PyInit__decimal@@Base+0x737c>
    dd60:	ldp	q1, q0, [x22, #32]
    dd64:	ldr	q2, [x22, #16]
    dd68:	mov	x20, x0
    dd6c:	mov	x1, x20
    dd70:	stp	q1, q0, [x0, #32]
    dd74:	str	q2, [x0, #16]
    dd78:	ldr	w8, [x22, #80]
    dd7c:	stp	wzr, wzr, [x0, #44]
    dd80:	str	w8, [x0, #80]
    dd84:	ldr	x0, [x21, #1400]
    dd88:	bl	65c0 <PyContextVar_Set@plt>
    dd8c:	cbz	x0, de18 <PyInit__decimal@@Base+0x7364>
    dd90:	ldr	x8, [x0]
    dd94:	subs	x8, x8, #0x1
    dd98:	str	x8, [x0]
    dd9c:	b.ne	db70 <PyInit__decimal@@Base+0x70bc>  // b.any
    dda0:	bl	6510 <_Py_Dealloc@plt>
    dda4:	b	db70 <PyInit__decimal@@Base+0x70bc>
    dda8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    ddac:	add	x0, x0, #0xe60
    ddb0:	mov	x1, x19
    ddb4:	mov	x2, x20
    ddb8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    ddbc:	mov	x19, x0
    ddc0:	cbnz	x0, dbc0 <PyInit__decimal@@Base+0x710c>
    ddc4:	b	ddfc <PyInit__decimal@@Base+0x7348>
    ddc8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    ddcc:	add	x0, x0, #0xe60
    ddd0:	mov	x1, x20
    ddd4:	mov	x2, x21
    ddd8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    dddc:	mov	x20, x0
    dde0:	cbnz	x0, dbf0 <PyInit__decimal@@Base+0x713c>
    dde4:	ldr	x8, [x19]
    dde8:	subs	x8, x8, #0x1
    ddec:	str	x8, [x19]
    ddf0:	b.ne	ddfc <PyInit__decimal@@Base+0x7348>  // b.any
    ddf4:	mov	x0, x19
    ddf8:	bl	6510 <_Py_Dealloc@plt>
    ddfc:	mov	x21, xzr
    de00:	mov	x0, x21
    de04:	ldp	x20, x19, [sp, #64]
    de08:	ldp	x22, x21, [sp, #48]
    de0c:	ldp	x29, x30, [sp, #32]
    de10:	add	sp, sp, #0x50
    de14:	ret
    de18:	ldr	x8, [x20]
    de1c:	subs	x8, x8, #0x1
    de20:	str	x8, [x20]
    de24:	b.ne	de30 <PyInit__decimal@@Base+0x737c>  // b.any
    de28:	mov	x0, x20
    de2c:	bl	6510 <_Py_Dealloc@plt>
    de30:	mov	x21, xzr
    de34:	str	xzr, [sp, #8]
    de38:	b	de00 <PyInit__decimal@@Base+0x734c>
    de3c:	sub	sp, sp, #0x90
    de40:	stp	x29, x30, [sp, #80]
    de44:	str	x23, [sp, #96]
    de48:	stp	x22, x21, [sp, #112]
    de4c:	stp	x20, x19, [sp, #128]
    de50:	add	x29, sp, #0x50
    de54:	adrp	x21, 56000 <PyInit__decimal@@Base+0x4f54c>
    de58:	ldr	x21, [x21, #4008]
    de5c:	mov	x8, x2
    de60:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    de64:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    de68:	mov	x19, x0
    de6c:	add	x2, x2, #0x7b
    de70:	add	x3, x3, #0xb50
    de74:	sub	x4, x29, #0x10
    de78:	add	x5, x29, #0x18
    de7c:	sub	x6, x29, #0x8
    de80:	mov	x0, x1
    de84:	mov	x1, x8
    de88:	str	x21, [x29, #24]
    de8c:	stur	x21, [x29, #-8]
    de90:	stur	wzr, [x29, #-20]
    de94:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    de98:	cbz	w0, e1e4 <PyInit__decimal@@Base+0x7730>
    de9c:	ldur	x8, [x29, #-8]
    dea0:	cmp	x8, x21
    dea4:	b.eq	dee8 <PyInit__decimal@@Base+0x7434>  // b.none
    dea8:	ldr	x0, [x8, #8]
    deac:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    deb0:	add	x8, x8, #0x0
    deb4:	cmp	x0, x8
    deb8:	b.eq	df24 <PyInit__decimal@@Base+0x7470>  // b.none
    debc:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    dec0:	add	x1, x1, #0x0
    dec4:	bl	6900 <PyType_IsSubtype@plt>
    dec8:	cbnz	w0, df24 <PyInit__decimal@@Base+0x7470>
    decc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ded0:	ldr	x8, [x8, #3936]
    ded4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ded8:	add	x1, x1, #0xf61
    dedc:	ldr	x0, [x8]
    dee0:	bl	6590 <PyErr_SetString@plt>
    dee4:	b	e1e4 <PyInit__decimal@@Base+0x7730>
    dee8:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
    deec:	ldr	x0, [x22, #1400]
    def0:	mov	x2, sp
    def4:	mov	x1, xzr
    def8:	bl	6680 <PyContextVar_Get@plt>
    defc:	tbnz	w0, #31, e21c <PyInit__decimal@@Base+0x7768>
    df00:	ldr	x20, [sp]
    df04:	cbz	x20, e0b8 <PyInit__decimal@@Base+0x7604>
    df08:	stur	x20, [x29, #-8]
    df0c:	ldr	x8, [x20]
    df10:	subs	x8, x8, #0x1
    df14:	str	x8, [x20]
    df18:	b.ne	df24 <PyInit__decimal@@Base+0x7470>  // b.any
    df1c:	mov	x0, x20
    df20:	bl	6510 <_Py_Dealloc@plt>
    df24:	ldur	x20, [x29, #-8]
    df28:	ldr	x0, [x29, #24]
    df2c:	ldp	q0, q1, [x20, #16]
    df30:	ldr	q2, [x20, #48]
    df34:	cmp	x0, x21
    df38:	stp	q0, q1, [sp]
    df3c:	str	q2, [sp, #32]
    df40:	b.eq	df60 <PyInit__decimal@@Base+0x74ac>  // b.none
    df44:	bl	12ed8 <PyInit__decimal@@Base+0xc424>
    df48:	tbnz	w0, #31, e1e4 <PyInit__decimal@@Base+0x7730>
    df4c:	mov	w1, w0
    df50:	mov	x0, sp
    df54:	bl	1db40 <PyInit__decimal@@Base+0x1708c>
    df58:	cbz	w0, e070 <PyInit__decimal@@Base+0x75bc>
    df5c:	ldur	x20, [x29, #-8]
    df60:	ldr	x0, [x19, #8]
    df64:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    df68:	add	x21, x21, #0xe60
    df6c:	cmp	x0, x21
    df70:	b.eq	df84 <PyInit__decimal@@Base+0x74d0>  // b.none
    df74:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    df78:	add	x1, x1, #0xe60
    df7c:	bl	6900 <PyType_IsSubtype@plt>
    df80:	cbz	w0, e08c <PyInit__decimal@@Base+0x75d8>
    df84:	ldr	x8, [x19]
    df88:	add	x8, x8, #0x1
    df8c:	str	x8, [x19]
    df90:	ldur	x20, [x29, #-16]
    df94:	ldr	x0, [x20, #8]
    df98:	cmp	x0, x21
    df9c:	b.eq	dfb4 <PyInit__decimal@@Base+0x7500>  // b.none
    dfa0:	ldur	x21, [x29, #-8]
    dfa4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    dfa8:	add	x1, x1, #0xe60
    dfac:	bl	6900 <PyType_IsSubtype@plt>
    dfb0:	cbz	w0, e11c <PyInit__decimal@@Base+0x7668>
    dfb4:	ldr	x8, [x20]
    dfb8:	add	x8, x8, #0x1
    dfbc:	str	x8, [x20]
    dfc0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    dfc4:	add	x0, x0, #0xe60
    dfc8:	bl	6890 <_PyObject_New@plt>
    dfcc:	cbz	x0, e040 <PyInit__decimal@@Base+0x758c>
    dfd0:	mov	w8, #0x30                  	// #48
    dfd4:	mov	x21, x0
    dfd8:	strb	w8, [x0, #24]!
    dfdc:	mov	x9, #0xffffffffffffffff    	// #-1
    dfe0:	mov	w10, #0x4                   	// #4
    dfe4:	add	x1, x19, #0x18
    dfe8:	add	x8, x0, #0x30
    dfec:	add	x2, x20, #0x18
    dff0:	mov	x3, sp
    dff4:	sub	x4, x29, #0x14
    dff8:	stur	x9, [x0, #-8]
    dffc:	stp	xzr, xzr, [x0, #8]
    e000:	stp	xzr, x10, [x0, #24]
    e004:	str	x8, [x0, #40]
    e008:	bl	363d8 <PyInit__decimal@@Base+0x2f924>
    e00c:	ldr	x8, [x19]
    e010:	subs	x8, x8, #0x1
    e014:	str	x8, [x19]
    e018:	b.eq	e148 <PyInit__decimal@@Base+0x7694>  // b.none
    e01c:	ldr	x8, [x20]
    e020:	subs	x8, x8, #0x1
    e024:	str	x8, [x20]
    e028:	b.eq	e160 <PyInit__decimal@@Base+0x76ac>  // b.none
    e02c:	ldur	x0, [x29, #-8]
    e030:	ldur	w1, [x29, #-20]
    e034:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    e038:	cbnz	w0, e178 <PyInit__decimal@@Base+0x76c4>
    e03c:	b	e1e8 <PyInit__decimal@@Base+0x7734>
    e040:	ldr	x8, [x19]
    e044:	subs	x8, x8, #0x1
    e048:	str	x8, [x19]
    e04c:	b.ne	e058 <PyInit__decimal@@Base+0x75a4>  // b.any
    e050:	mov	x0, x19
    e054:	bl	6510 <_Py_Dealloc@plt>
    e058:	ldr	x8, [x20]
    e05c:	subs	x8, x8, #0x1
    e060:	str	x8, [x20]
    e064:	b.ne	e1e4 <PyInit__decimal@@Base+0x7730>  // b.any
    e068:	mov	x0, x20
    e06c:	b	e1e0 <PyInit__decimal@@Base+0x772c>
    e070:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    e074:	ldr	x8, [x8, #3920]
    e078:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
    e07c:	add	x1, x1, #0x80
    e080:	ldr	x0, [x8]
    e084:	bl	6590 <PyErr_SetString@plt>
    e088:	b	e1e4 <PyInit__decimal@@Base+0x7730>
    e08c:	ldr	x8, [x19, #8]
    e090:	ldrb	w9, [x8, #171]
    e094:	tbnz	w9, #0, e190 <PyInit__decimal@@Base+0x76dc>
    e098:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e09c:	ldr	x9, [x9, #3936]
    e0a0:	ldr	x2, [x8, #24]
    e0a4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e0a8:	add	x1, x1, #0xb93
    e0ac:	ldr	x0, [x9]
    e0b0:	bl	6950 <PyErr_Format@plt>
    e0b4:	b	e1e4 <PyInit__decimal@@Base+0x7730>
    e0b8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    e0bc:	ldr	x23, [x8, #1496]
    e0c0:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    e0c4:	add	x0, x0, #0x0
    e0c8:	mov	x1, xzr
    e0cc:	bl	6780 <PyObject_CallObject@plt>
    e0d0:	cbz	x0, e21c <PyInit__decimal@@Base+0x7768>
    e0d4:	ldp	q1, q0, [x23, #32]
    e0d8:	ldr	q2, [x23, #16]
    e0dc:	mov	x20, x0
    e0e0:	mov	x1, x20
    e0e4:	stp	q1, q0, [x0, #32]
    e0e8:	str	q2, [x0, #16]
    e0ec:	ldr	w8, [x23, #80]
    e0f0:	stp	wzr, wzr, [x0, #44]
    e0f4:	str	w8, [x0, #80]
    e0f8:	ldr	x0, [x22, #1400]
    e0fc:	bl	65c0 <PyContextVar_Set@plt>
    e100:	cbz	x0, e204 <PyInit__decimal@@Base+0x7750>
    e104:	ldr	x8, [x0]
    e108:	subs	x8, x8, #0x1
    e10c:	str	x8, [x0]
    e110:	b.ne	df08 <PyInit__decimal@@Base+0x7454>  // b.any
    e114:	bl	6510 <_Py_Dealloc@plt>
    e118:	b	df08 <PyInit__decimal@@Base+0x7454>
    e11c:	ldr	x8, [x20, #8]
    e120:	ldrb	w9, [x8, #171]
    e124:	tbnz	w9, #0, e1b0 <PyInit__decimal@@Base+0x76fc>
    e128:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e12c:	ldr	x9, [x9, #3936]
    e130:	ldr	x2, [x8, #24]
    e134:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e138:	add	x1, x1, #0xb93
    e13c:	ldr	x0, [x9]
    e140:	bl	6950 <PyErr_Format@plt>
    e144:	b	e1cc <PyInit__decimal@@Base+0x7718>
    e148:	mov	x0, x19
    e14c:	bl	6510 <_Py_Dealloc@plt>
    e150:	ldr	x8, [x20]
    e154:	subs	x8, x8, #0x1
    e158:	str	x8, [x20]
    e15c:	b.ne	e02c <PyInit__decimal@@Base+0x7578>  // b.any
    e160:	mov	x0, x20
    e164:	bl	6510 <_Py_Dealloc@plt>
    e168:	ldur	x0, [x29, #-8]
    e16c:	ldur	w1, [x29, #-20]
    e170:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    e174:	cbz	w0, e1e8 <PyInit__decimal@@Base+0x7734>
    e178:	ldr	x8, [x21]
    e17c:	subs	x8, x8, #0x1
    e180:	str	x8, [x21]
    e184:	b.ne	e1e4 <PyInit__decimal@@Base+0x7730>  // b.any
    e188:	mov	x0, x21
    e18c:	b	e1e0 <PyInit__decimal@@Base+0x772c>
    e190:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e194:	add	x0, x0, #0xe60
    e198:	mov	x1, x19
    e19c:	mov	x2, x20
    e1a0:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e1a4:	mov	x19, x0
    e1a8:	cbnz	x0, df90 <PyInit__decimal@@Base+0x74dc>
    e1ac:	b	e1e4 <PyInit__decimal@@Base+0x7730>
    e1b0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e1b4:	add	x0, x0, #0xe60
    e1b8:	mov	x1, x20
    e1bc:	mov	x2, x21
    e1c0:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e1c4:	mov	x20, x0
    e1c8:	cbnz	x0, dfc0 <PyInit__decimal@@Base+0x750c>
    e1cc:	ldr	x8, [x19]
    e1d0:	subs	x8, x8, #0x1
    e1d4:	str	x8, [x19]
    e1d8:	b.ne	e1e4 <PyInit__decimal@@Base+0x7730>  // b.any
    e1dc:	mov	x0, x19
    e1e0:	bl	6510 <_Py_Dealloc@plt>
    e1e4:	mov	x21, xzr
    e1e8:	mov	x0, x21
    e1ec:	ldp	x20, x19, [sp, #128]
    e1f0:	ldp	x22, x21, [sp, #112]
    e1f4:	ldr	x23, [sp, #96]
    e1f8:	ldp	x29, x30, [sp, #80]
    e1fc:	add	sp, sp, #0x90
    e200:	ret
    e204:	ldr	x8, [x20]
    e208:	subs	x8, x8, #0x1
    e20c:	str	x8, [x20]
    e210:	b.ne	e21c <PyInit__decimal@@Base+0x7768>  // b.any
    e214:	mov	x0, x20
    e218:	bl	6510 <_Py_Dealloc@plt>
    e21c:	mov	x21, xzr
    e220:	stur	xzr, [x29, #-8]
    e224:	b	e1e8 <PyInit__decimal@@Base+0x7734>
    e228:	sub	sp, sp, #0x50
    e22c:	stp	x29, x30, [sp, #32]
    e230:	stp	x22, x21, [sp, #48]
    e234:	stp	x20, x19, [sp, #64]
    e238:	add	x29, sp, #0x20
    e23c:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    e240:	ldr	x20, [x20, #4008]
    e244:	mov	x8, x2
    e248:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    e24c:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    e250:	mov	x19, x0
    e254:	add	x2, x2, #0xab
    e258:	add	x3, x3, #0xa30
    e25c:	add	x4, sp, #0x10
    e260:	add	x5, sp, #0x8
    e264:	mov	x0, x1
    e268:	mov	x1, x8
    e26c:	str	x20, [sp, #8]
    e270:	str	wzr, [sp, #4]
    e274:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    e278:	cbz	w0, e574 <PyInit__decimal@@Base+0x7ac0>
    e27c:	ldr	x8, [sp, #8]
    e280:	cmp	x8, x20
    e284:	b.eq	e2c8 <PyInit__decimal@@Base+0x7814>  // b.none
    e288:	ldr	x0, [x8, #8]
    e28c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    e290:	add	x8, x8, #0x0
    e294:	cmp	x0, x8
    e298:	b.eq	e304 <PyInit__decimal@@Base+0x7850>  // b.none
    e29c:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    e2a0:	add	x1, x1, #0x0
    e2a4:	bl	6900 <PyType_IsSubtype@plt>
    e2a8:	cbnz	w0, e304 <PyInit__decimal@@Base+0x7850>
    e2ac:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    e2b0:	ldr	x8, [x8, #3936]
    e2b4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e2b8:	add	x1, x1, #0xf61
    e2bc:	ldr	x0, [x8]
    e2c0:	bl	6590 <PyErr_SetString@plt>
    e2c4:	b	e574 <PyInit__decimal@@Base+0x7ac0>
    e2c8:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    e2cc:	ldr	x0, [x21, #1400]
    e2d0:	sub	x2, x29, #0x8
    e2d4:	mov	x1, xzr
    e2d8:	bl	6680 <PyContextVar_Get@plt>
    e2dc:	tbnz	w0, #31, e5a8 <PyInit__decimal@@Base+0x7af4>
    e2e0:	ldur	x20, [x29, #-8]
    e2e4:	cbz	x20, e4bc <PyInit__decimal@@Base+0x7a08>
    e2e8:	str	x20, [sp, #8]
    e2ec:	ldr	x8, [x20]
    e2f0:	subs	x8, x8, #0x1
    e2f4:	str	x8, [x20]
    e2f8:	b.ne	e304 <PyInit__decimal@@Base+0x7850>  // b.any
    e2fc:	mov	x0, x20
    e300:	bl	6510 <_Py_Dealloc@plt>
    e304:	ldr	x0, [x19, #8]
    e308:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    e30c:	add	x21, x21, #0xe60
    e310:	cmp	x0, x21
    e314:	b.eq	e32c <PyInit__decimal@@Base+0x7878>  // b.none
    e318:	ldr	x20, [sp, #8]
    e31c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    e320:	add	x1, x1, #0xe60
    e324:	bl	6900 <PyType_IsSubtype@plt>
    e328:	cbz	w0, e41c <PyInit__decimal@@Base+0x7968>
    e32c:	ldr	x8, [x19]
    e330:	add	x8, x8, #0x1
    e334:	str	x8, [x19]
    e338:	ldr	x20, [sp, #16]
    e33c:	ldr	x0, [x20, #8]
    e340:	cmp	x0, x21
    e344:	b.eq	e35c <PyInit__decimal@@Base+0x78a8>  // b.none
    e348:	ldr	x21, [sp, #8]
    e34c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    e350:	add	x1, x1, #0xe60
    e354:	bl	6900 <PyType_IsSubtype@plt>
    e358:	cbz	w0, e448 <PyInit__decimal@@Base+0x7994>
    e35c:	ldr	x8, [x20]
    e360:	add	x8, x8, #0x1
    e364:	str	x8, [x20]
    e368:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e36c:	add	x0, x0, #0xe60
    e370:	bl	6890 <_PyObject_New@plt>
    e374:	cbz	x0, e3ec <PyInit__decimal@@Base+0x7938>
    e378:	mov	w8, #0x30                  	// #48
    e37c:	mov	x21, x0
    e380:	strb	w8, [x0, #24]!
    e384:	mov	x9, #0xffffffffffffffff    	// #-1
    e388:	mov	w10, #0x4                   	// #4
    e38c:	add	x8, x0, #0x30
    e390:	stur	x9, [x0, #-8]
    e394:	stp	xzr, xzr, [x0, #8]
    e398:	stp	xzr, x10, [x0, #24]
    e39c:	str	x8, [x0, #40]
    e3a0:	ldr	x8, [sp, #8]
    e3a4:	add	x1, x19, #0x18
    e3a8:	add	x2, x20, #0x18
    e3ac:	add	x4, sp, #0x4
    e3b0:	add	x3, x8, #0x10
    e3b4:	bl	37004 <PyInit__decimal@@Base+0x30550>
    e3b8:	ldr	x8, [x19]
    e3bc:	subs	x8, x8, #0x1
    e3c0:	str	x8, [x19]
    e3c4:	b.eq	e474 <PyInit__decimal@@Base+0x79c0>  // b.none
    e3c8:	ldr	x8, [x20]
    e3cc:	subs	x8, x8, #0x1
    e3d0:	str	x8, [x20]
    e3d4:	b.eq	e48c <PyInit__decimal@@Base+0x79d8>  // b.none
    e3d8:	ldr	x0, [sp, #8]
    e3dc:	ldr	w1, [sp, #4]
    e3e0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    e3e4:	cbnz	w0, e4a4 <PyInit__decimal@@Base+0x79f0>
    e3e8:	b	e578 <PyInit__decimal@@Base+0x7ac4>
    e3ec:	ldr	x8, [x19]
    e3f0:	subs	x8, x8, #0x1
    e3f4:	str	x8, [x19]
    e3f8:	b.ne	e404 <PyInit__decimal@@Base+0x7950>  // b.any
    e3fc:	mov	x0, x19
    e400:	bl	6510 <_Py_Dealloc@plt>
    e404:	ldr	x8, [x20]
    e408:	subs	x8, x8, #0x1
    e40c:	str	x8, [x20]
    e410:	b.ne	e574 <PyInit__decimal@@Base+0x7ac0>  // b.any
    e414:	mov	x0, x20
    e418:	b	e570 <PyInit__decimal@@Base+0x7abc>
    e41c:	ldr	x8, [x19, #8]
    e420:	ldrb	w9, [x8, #171]
    e424:	tbnz	w9, #0, e520 <PyInit__decimal@@Base+0x7a6c>
    e428:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e42c:	ldr	x9, [x9, #3936]
    e430:	ldr	x2, [x8, #24]
    e434:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e438:	add	x1, x1, #0xb93
    e43c:	ldr	x0, [x9]
    e440:	bl	6950 <PyErr_Format@plt>
    e444:	b	e574 <PyInit__decimal@@Base+0x7ac0>
    e448:	ldr	x8, [x20, #8]
    e44c:	ldrb	w9, [x8, #171]
    e450:	tbnz	w9, #0, e540 <PyInit__decimal@@Base+0x7a8c>
    e454:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e458:	ldr	x9, [x9, #3936]
    e45c:	ldr	x2, [x8, #24]
    e460:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e464:	add	x1, x1, #0xb93
    e468:	ldr	x0, [x9]
    e46c:	bl	6950 <PyErr_Format@plt>
    e470:	b	e55c <PyInit__decimal@@Base+0x7aa8>
    e474:	mov	x0, x19
    e478:	bl	6510 <_Py_Dealloc@plt>
    e47c:	ldr	x8, [x20]
    e480:	subs	x8, x8, #0x1
    e484:	str	x8, [x20]
    e488:	b.ne	e3d8 <PyInit__decimal@@Base+0x7924>  // b.any
    e48c:	mov	x0, x20
    e490:	bl	6510 <_Py_Dealloc@plt>
    e494:	ldr	x0, [sp, #8]
    e498:	ldr	w1, [sp, #4]
    e49c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    e4a0:	cbz	w0, e578 <PyInit__decimal@@Base+0x7ac4>
    e4a4:	ldr	x8, [x21]
    e4a8:	subs	x8, x8, #0x1
    e4ac:	str	x8, [x21]
    e4b0:	b.ne	e574 <PyInit__decimal@@Base+0x7ac0>  // b.any
    e4b4:	mov	x0, x21
    e4b8:	b	e570 <PyInit__decimal@@Base+0x7abc>
    e4bc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    e4c0:	ldr	x22, [x8, #1496]
    e4c4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    e4c8:	add	x0, x0, #0x0
    e4cc:	mov	x1, xzr
    e4d0:	bl	6780 <PyObject_CallObject@plt>
    e4d4:	cbz	x0, e5a8 <PyInit__decimal@@Base+0x7af4>
    e4d8:	ldp	q1, q0, [x22, #32]
    e4dc:	ldr	q2, [x22, #16]
    e4e0:	mov	x20, x0
    e4e4:	mov	x1, x20
    e4e8:	stp	q1, q0, [x0, #32]
    e4ec:	str	q2, [x0, #16]
    e4f0:	ldr	w8, [x22, #80]
    e4f4:	stp	wzr, wzr, [x0, #44]
    e4f8:	str	w8, [x0, #80]
    e4fc:	ldr	x0, [x21, #1400]
    e500:	bl	65c0 <PyContextVar_Set@plt>
    e504:	cbz	x0, e590 <PyInit__decimal@@Base+0x7adc>
    e508:	ldr	x8, [x0]
    e50c:	subs	x8, x8, #0x1
    e510:	str	x8, [x0]
    e514:	b.ne	e2e8 <PyInit__decimal@@Base+0x7834>  // b.any
    e518:	bl	6510 <_Py_Dealloc@plt>
    e51c:	b	e2e8 <PyInit__decimal@@Base+0x7834>
    e520:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e524:	add	x0, x0, #0xe60
    e528:	mov	x1, x19
    e52c:	mov	x2, x20
    e530:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e534:	mov	x19, x0
    e538:	cbnz	x0, e338 <PyInit__decimal@@Base+0x7884>
    e53c:	b	e574 <PyInit__decimal@@Base+0x7ac0>
    e540:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e544:	add	x0, x0, #0xe60
    e548:	mov	x1, x20
    e54c:	mov	x2, x21
    e550:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e554:	mov	x20, x0
    e558:	cbnz	x0, e368 <PyInit__decimal@@Base+0x78b4>
    e55c:	ldr	x8, [x19]
    e560:	subs	x8, x8, #0x1
    e564:	str	x8, [x19]
    e568:	b.ne	e574 <PyInit__decimal@@Base+0x7ac0>  // b.any
    e56c:	mov	x0, x19
    e570:	bl	6510 <_Py_Dealloc@plt>
    e574:	mov	x21, xzr
    e578:	mov	x0, x21
    e57c:	ldp	x20, x19, [sp, #64]
    e580:	ldp	x22, x21, [sp, #48]
    e584:	ldp	x29, x30, [sp, #32]
    e588:	add	sp, sp, #0x50
    e58c:	ret
    e590:	ldr	x8, [x20]
    e594:	subs	x8, x8, #0x1
    e598:	str	x8, [x20]
    e59c:	b.ne	e5a8 <PyInit__decimal@@Base+0x7af4>  // b.any
    e5a0:	mov	x0, x20
    e5a4:	bl	6510 <_Py_Dealloc@plt>
    e5a8:	mov	x21, xzr
    e5ac:	str	xzr, [sp, #8]
    e5b0:	b	e578 <PyInit__decimal@@Base+0x7ac4>
    e5b4:	sub	sp, sp, #0x60
    e5b8:	stp	x29, x30, [sp, #48]
    e5bc:	stp	x22, x21, [sp, #64]
    e5c0:	stp	x20, x19, [sp, #80]
    e5c4:	add	x29, sp, #0x30
    e5c8:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    e5cc:	ldr	x20, [x20, #4008]
    e5d0:	mov	x8, x2
    e5d4:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    e5d8:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    e5dc:	mov	x19, x0
    e5e0:	add	x2, x2, #0xaa
    e5e4:	add	x3, x3, #0xb70
    e5e8:	sub	x4, x29, #0x10
    e5ec:	add	x5, sp, #0x18
    e5f0:	add	x6, sp, #0x10
    e5f4:	mov	x0, x1
    e5f8:	mov	x1, x8
    e5fc:	str	x20, [sp, #16]
    e600:	str	wzr, [sp, #12]
    e604:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    e608:	cbz	w0, ea14 <PyInit__decimal@@Base+0x7f60>
    e60c:	ldr	x8, [sp, #16]
    e610:	cmp	x8, x20
    e614:	b.eq	e658 <PyInit__decimal@@Base+0x7ba4>  // b.none
    e618:	ldr	x0, [x8, #8]
    e61c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    e620:	add	x8, x8, #0x0
    e624:	cmp	x0, x8
    e628:	b.eq	e694 <PyInit__decimal@@Base+0x7be0>  // b.none
    e62c:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    e630:	add	x1, x1, #0x0
    e634:	bl	6900 <PyType_IsSubtype@plt>
    e638:	cbnz	w0, e694 <PyInit__decimal@@Base+0x7be0>
    e63c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    e640:	ldr	x8, [x8, #3936]
    e644:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e648:	add	x1, x1, #0xf61
    e64c:	ldr	x0, [x8]
    e650:	bl	6590 <PyErr_SetString@plt>
    e654:	b	ea14 <PyInit__decimal@@Base+0x7f60>
    e658:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    e65c:	ldr	x0, [x21, #1400]
    e660:	sub	x2, x29, #0x8
    e664:	mov	x1, xzr
    e668:	bl	6680 <PyContextVar_Get@plt>
    e66c:	tbnz	w0, #31, ea48 <PyInit__decimal@@Base+0x7f94>
    e670:	ldur	x20, [x29, #-8]
    e674:	cbz	x20, e8d8 <PyInit__decimal@@Base+0x7e24>
    e678:	str	x20, [sp, #16]
    e67c:	ldr	x8, [x20]
    e680:	subs	x8, x8, #0x1
    e684:	str	x8, [x20]
    e688:	b.ne	e694 <PyInit__decimal@@Base+0x7be0>  // b.any
    e68c:	mov	x0, x20
    e690:	bl	6510 <_Py_Dealloc@plt>
    e694:	ldr	x0, [x19, #8]
    e698:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
    e69c:	add	x22, x22, #0xe60
    e6a0:	cmp	x0, x22
    e6a4:	b.eq	e6bc <PyInit__decimal@@Base+0x7c08>  // b.none
    e6a8:	ldr	x20, [sp, #16]
    e6ac:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    e6b0:	add	x1, x1, #0xe60
    e6b4:	bl	6900 <PyType_IsSubtype@plt>
    e6b8:	cbz	w0, e7c0 <PyInit__decimal@@Base+0x7d0c>
    e6bc:	ldr	x8, [x19]
    e6c0:	add	x8, x8, #0x1
    e6c4:	str	x8, [x19]
    e6c8:	ldur	x20, [x29, #-16]
    e6cc:	ldr	x0, [x20, #8]
    e6d0:	cmp	x0, x22
    e6d4:	b.eq	e6ec <PyInit__decimal@@Base+0x7c38>  // b.none
    e6d8:	ldr	x21, [sp, #16]
    e6dc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    e6e0:	add	x1, x1, #0xe60
    e6e4:	bl	6900 <PyType_IsSubtype@plt>
    e6e8:	cbz	w0, e820 <PyInit__decimal@@Base+0x7d6c>
    e6ec:	ldr	x8, [x20]
    e6f0:	add	x8, x8, #0x1
    e6f4:	str	x8, [x20]
    e6f8:	ldr	x21, [sp, #24]
    e6fc:	ldr	x0, [x21, #8]
    e700:	cmp	x0, x22
    e704:	b.eq	e71c <PyInit__decimal@@Base+0x7c68>  // b.none
    e708:	ldr	x22, [sp, #16]
    e70c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    e710:	add	x1, x1, #0xe60
    e714:	bl	6900 <PyType_IsSubtype@plt>
    e718:	cbz	w0, e84c <PyInit__decimal@@Base+0x7d98>
    e71c:	ldr	x8, [x21]
    e720:	add	x8, x8, #0x1
    e724:	str	x8, [x21]
    e728:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e72c:	add	x0, x0, #0xe60
    e730:	bl	6890 <_PyObject_New@plt>
    e734:	cbz	x0, e7ec <PyInit__decimal@@Base+0x7d38>
    e738:	mov	w8, #0x30                  	// #48
    e73c:	mov	x22, x0
    e740:	strb	w8, [x0, #24]!
    e744:	mov	x9, #0xffffffffffffffff    	// #-1
    e748:	mov	w10, #0x4                   	// #4
    e74c:	add	x8, x0, #0x30
    e750:	stur	x9, [x0, #-8]
    e754:	stp	xzr, xzr, [x0, #8]
    e758:	stp	xzr, x10, [x0, #24]
    e75c:	str	x8, [x0, #40]
    e760:	ldr	x8, [sp, #16]
    e764:	add	x1, x19, #0x18
    e768:	add	x2, x20, #0x18
    e76c:	add	x3, x21, #0x18
    e770:	add	x4, x8, #0x10
    e774:	add	x5, sp, #0xc
    e778:	bl	2ee54 <PyInit__decimal@@Base+0x283a0>
    e77c:	ldr	x8, [x19]
    e780:	subs	x8, x8, #0x1
    e784:	str	x8, [x19]
    e788:	b.eq	e878 <PyInit__decimal@@Base+0x7dc4>  // b.none
    e78c:	ldr	x8, [x20]
    e790:	subs	x8, x8, #0x1
    e794:	str	x8, [x20]
    e798:	b.eq	e890 <PyInit__decimal@@Base+0x7ddc>  // b.none
    e79c:	ldr	x8, [x21]
    e7a0:	subs	x8, x8, #0x1
    e7a4:	str	x8, [x21]
    e7a8:	b.eq	e8a8 <PyInit__decimal@@Base+0x7df4>  // b.none
    e7ac:	ldr	x0, [sp, #16]
    e7b0:	ldr	w1, [sp, #12]
    e7b4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    e7b8:	cbnz	w0, e8c0 <PyInit__decimal@@Base+0x7e0c>
    e7bc:	b	ea18 <PyInit__decimal@@Base+0x7f64>
    e7c0:	ldr	x8, [x19, #8]
    e7c4:	ldrb	w9, [x8, #171]
    e7c8:	tbnz	w9, #0, e93c <PyInit__decimal@@Base+0x7e88>
    e7cc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e7d0:	ldr	x9, [x9, #3936]
    e7d4:	ldr	x2, [x8, #24]
    e7d8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e7dc:	add	x1, x1, #0xb93
    e7e0:	ldr	x0, [x9]
    e7e4:	bl	6950 <PyErr_Format@plt>
    e7e8:	b	ea14 <PyInit__decimal@@Base+0x7f60>
    e7ec:	ldr	x8, [x19]
    e7f0:	subs	x8, x8, #0x1
    e7f4:	str	x8, [x19]
    e7f8:	b.eq	e990 <PyInit__decimal@@Base+0x7edc>  // b.none
    e7fc:	ldr	x8, [x20]
    e800:	subs	x8, x8, #0x1
    e804:	str	x8, [x20]
    e808:	b.eq	e9a8 <PyInit__decimal@@Base+0x7ef4>  // b.none
    e80c:	ldr	x8, [x21]
    e810:	subs	x8, x8, #0x1
    e814:	str	x8, [x21]
    e818:	b.ne	ea14 <PyInit__decimal@@Base+0x7f60>  // b.any
    e81c:	b	e9c0 <PyInit__decimal@@Base+0x7f0c>
    e820:	ldr	x8, [x20, #8]
    e824:	ldrb	w9, [x8, #171]
    e828:	tbnz	w9, #0, e95c <PyInit__decimal@@Base+0x7ea8>
    e82c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e830:	ldr	x9, [x9, #3936]
    e834:	ldr	x2, [x8, #24]
    e838:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e83c:	add	x1, x1, #0xb93
    e840:	ldr	x0, [x9]
    e844:	bl	6950 <PyErr_Format@plt>
    e848:	b	e978 <PyInit__decimal@@Base+0x7ec4>
    e84c:	ldr	x8, [x21, #8]
    e850:	ldrb	w9, [x8, #171]
    e854:	tbnz	w9, #0, e9c8 <PyInit__decimal@@Base+0x7f14>
    e858:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    e85c:	ldr	x9, [x9, #3936]
    e860:	ldr	x2, [x8, #24]
    e864:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    e868:	add	x1, x1, #0xb93
    e86c:	ldr	x0, [x9]
    e870:	bl	6950 <PyErr_Format@plt>
    e874:	b	e9e4 <PyInit__decimal@@Base+0x7f30>
    e878:	mov	x0, x19
    e87c:	bl	6510 <_Py_Dealloc@plt>
    e880:	ldr	x8, [x20]
    e884:	subs	x8, x8, #0x1
    e888:	str	x8, [x20]
    e88c:	b.ne	e79c <PyInit__decimal@@Base+0x7ce8>  // b.any
    e890:	mov	x0, x20
    e894:	bl	6510 <_Py_Dealloc@plt>
    e898:	ldr	x8, [x21]
    e89c:	subs	x8, x8, #0x1
    e8a0:	str	x8, [x21]
    e8a4:	b.ne	e7ac <PyInit__decimal@@Base+0x7cf8>  // b.any
    e8a8:	mov	x0, x21
    e8ac:	bl	6510 <_Py_Dealloc@plt>
    e8b0:	ldr	x0, [sp, #16]
    e8b4:	ldr	w1, [sp, #12]
    e8b8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    e8bc:	cbz	w0, ea18 <PyInit__decimal@@Base+0x7f64>
    e8c0:	ldr	x8, [x22]
    e8c4:	subs	x8, x8, #0x1
    e8c8:	str	x8, [x22]
    e8cc:	b.ne	ea14 <PyInit__decimal@@Base+0x7f60>  // b.any
    e8d0:	mov	x0, x22
    e8d4:	b	ea10 <PyInit__decimal@@Base+0x7f5c>
    e8d8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    e8dc:	ldr	x22, [x8, #1496]
    e8e0:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    e8e4:	add	x0, x0, #0x0
    e8e8:	mov	x1, xzr
    e8ec:	bl	6780 <PyObject_CallObject@plt>
    e8f0:	cbz	x0, ea48 <PyInit__decimal@@Base+0x7f94>
    e8f4:	ldp	q1, q0, [x22, #32]
    e8f8:	ldr	q2, [x22, #16]
    e8fc:	mov	x20, x0
    e900:	mov	x1, x20
    e904:	stp	q1, q0, [x0, #32]
    e908:	str	q2, [x0, #16]
    e90c:	ldr	w8, [x22, #80]
    e910:	stp	wzr, wzr, [x0, #44]
    e914:	str	w8, [x0, #80]
    e918:	ldr	x0, [x21, #1400]
    e91c:	bl	65c0 <PyContextVar_Set@plt>
    e920:	cbz	x0, ea30 <PyInit__decimal@@Base+0x7f7c>
    e924:	ldr	x8, [x0]
    e928:	subs	x8, x8, #0x1
    e92c:	str	x8, [x0]
    e930:	b.ne	e678 <PyInit__decimal@@Base+0x7bc4>  // b.any
    e934:	bl	6510 <_Py_Dealloc@plt>
    e938:	b	e678 <PyInit__decimal@@Base+0x7bc4>
    e93c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e940:	add	x0, x0, #0xe60
    e944:	mov	x1, x19
    e948:	mov	x2, x20
    e94c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e950:	mov	x19, x0
    e954:	cbnz	x0, e6c8 <PyInit__decimal@@Base+0x7c14>
    e958:	b	ea14 <PyInit__decimal@@Base+0x7f60>
    e95c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e960:	add	x0, x0, #0xe60
    e964:	mov	x1, x20
    e968:	mov	x2, x21
    e96c:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e970:	mov	x20, x0
    e974:	cbnz	x0, e6f8 <PyInit__decimal@@Base+0x7c44>
    e978:	ldr	x8, [x19]
    e97c:	subs	x8, x8, #0x1
    e980:	str	x8, [x19]
    e984:	b.ne	ea14 <PyInit__decimal@@Base+0x7f60>  // b.any
    e988:	mov	x0, x19
    e98c:	b	ea10 <PyInit__decimal@@Base+0x7f5c>
    e990:	mov	x0, x19
    e994:	bl	6510 <_Py_Dealloc@plt>
    e998:	ldr	x8, [x20]
    e99c:	subs	x8, x8, #0x1
    e9a0:	str	x8, [x20]
    e9a4:	b.ne	e80c <PyInit__decimal@@Base+0x7d58>  // b.any
    e9a8:	mov	x0, x20
    e9ac:	bl	6510 <_Py_Dealloc@plt>
    e9b0:	ldr	x8, [x21]
    e9b4:	subs	x8, x8, #0x1
    e9b8:	str	x8, [x21]
    e9bc:	b.ne	ea14 <PyInit__decimal@@Base+0x7f60>  // b.any
    e9c0:	mov	x0, x21
    e9c4:	b	ea10 <PyInit__decimal@@Base+0x7f5c>
    e9c8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    e9cc:	add	x0, x0, #0xe60
    e9d0:	mov	x1, x21
    e9d4:	mov	x2, x22
    e9d8:	bl	abdc <PyInit__decimal@@Base+0x4128>
    e9dc:	mov	x21, x0
    e9e0:	cbnz	x0, e728 <PyInit__decimal@@Base+0x7c74>
    e9e4:	ldr	x8, [x19]
    e9e8:	subs	x8, x8, #0x1
    e9ec:	str	x8, [x19]
    e9f0:	b.ne	e9fc <PyInit__decimal@@Base+0x7f48>  // b.any
    e9f4:	mov	x0, x19
    e9f8:	bl	6510 <_Py_Dealloc@plt>
    e9fc:	ldr	x8, [x20]
    ea00:	subs	x8, x8, #0x1
    ea04:	str	x8, [x20]
    ea08:	b.ne	ea14 <PyInit__decimal@@Base+0x7f60>  // b.any
    ea0c:	mov	x0, x20
    ea10:	bl	6510 <_Py_Dealloc@plt>
    ea14:	mov	x22, xzr
    ea18:	mov	x0, x22
    ea1c:	ldp	x20, x19, [sp, #80]
    ea20:	ldp	x22, x21, [sp, #64]
    ea24:	ldp	x29, x30, [sp, #48]
    ea28:	add	sp, sp, #0x60
    ea2c:	ret
    ea30:	ldr	x8, [x20]
    ea34:	subs	x8, x8, #0x1
    ea38:	str	x8, [x20]
    ea3c:	b.ne	ea48 <PyInit__decimal@@Base+0x7f94>  // b.any
    ea40:	mov	x0, x20
    ea44:	bl	6510 <_Py_Dealloc@plt>
    ea48:	mov	x22, xzr
    ea4c:	str	xzr, [sp, #16]
    ea50:	b	ea18 <PyInit__decimal@@Base+0x7f64>
    ea54:	stp	x29, x30, [sp, #-16]!
    ea58:	mov	x29, sp
    ea5c:	add	x0, x0, #0x18
    ea60:	bl	2279c <PyInit__decimal@@Base+0x1bce8>
    ea64:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ea68:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    ea6c:	ldr	x8, [x8, #4024]
    ea70:	ldr	x9, [x9, #3976]
    ea74:	cmp	w0, #0x0
    ea78:	csel	x0, x9, x8, eq  // eq = none
    ea7c:	ldr	x8, [x0]
    ea80:	add	x8, x8, #0x1
    ea84:	str	x8, [x0]
    ea88:	ldp	x29, x30, [sp], #16
    ea8c:	ret
    ea90:	stp	x29, x30, [sp, #-16]!
    ea94:	mov	x29, sp
    ea98:	add	x0, x0, #0x18
    ea9c:	bl	227a4 <PyInit__decimal@@Base+0x1bcf0>
    eaa0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    eaa4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    eaa8:	ldr	x8, [x8, #4024]
    eaac:	ldr	x9, [x9, #3976]
    eab0:	cmp	w0, #0x0
    eab4:	csel	x0, x9, x8, eq  // eq = none
    eab8:	ldr	x8, [x0]
    eabc:	add	x8, x8, #0x1
    eac0:	str	x8, [x0]
    eac4:	ldp	x29, x30, [sp], #16
    eac8:	ret
    eacc:	stp	x29, x30, [sp, #-16]!
    ead0:	mov	x29, sp
    ead4:	add	x0, x0, #0x18
    ead8:	bl	227b4 <PyInit__decimal@@Base+0x1bd00>
    eadc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    eae0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    eae4:	ldr	x8, [x8, #4024]
    eae8:	ldr	x9, [x9, #3976]
    eaec:	cmp	w0, #0x0
    eaf0:	csel	x0, x9, x8, eq  // eq = none
    eaf4:	ldr	x8, [x0]
    eaf8:	add	x8, x8, #0x1
    eafc:	str	x8, [x0]
    eb00:	ldp	x29, x30, [sp], #16
    eb04:	ret
    eb08:	stp	x29, x30, [sp, #-16]!
    eb0c:	mov	x29, sp
    eb10:	add	x0, x0, #0x18
    eb14:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
    eb18:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    eb1c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    eb20:	ldr	x8, [x8, #4024]
    eb24:	ldr	x9, [x9, #3976]
    eb28:	cmp	w0, #0x0
    eb2c:	csel	x0, x9, x8, eq  // eq = none
    eb30:	ldr	x8, [x0]
    eb34:	add	x8, x8, #0x1
    eb38:	str	x8, [x0]
    eb3c:	ldp	x29, x30, [sp], #16
    eb40:	ret
    eb44:	stp	x29, x30, [sp, #-16]!
    eb48:	mov	x29, sp
    eb4c:	add	x0, x0, #0x18
    eb50:	bl	227e8 <PyInit__decimal@@Base+0x1bd34>
    eb54:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    eb58:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    eb5c:	ldr	x8, [x8, #4024]
    eb60:	ldr	x9, [x9, #3976]
    eb64:	cmp	w0, #0x0
    eb68:	csel	x0, x9, x8, eq  // eq = none
    eb6c:	ldr	x8, [x0]
    eb70:	add	x8, x8, #0x1
    eb74:	str	x8, [x0]
    eb78:	ldp	x29, x30, [sp], #16
    eb7c:	ret
    eb80:	stp	x29, x30, [sp, #-16]!
    eb84:	mov	x29, sp
    eb88:	add	x0, x0, #0x18
    eb8c:	bl	22800 <PyInit__decimal@@Base+0x1bd4c>
    eb90:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    eb94:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    eb98:	ldr	x8, [x8, #4024]
    eb9c:	ldr	x9, [x9, #3976]
    eba0:	cmp	w0, #0x0
    eba4:	csel	x0, x9, x8, eq  // eq = none
    eba8:	ldr	x8, [x0]
    ebac:	add	x8, x8, #0x1
    ebb0:	str	x8, [x0]
    ebb4:	ldp	x29, x30, [sp], #16
    ebb8:	ret
    ebbc:	stp	x29, x30, [sp, #-16]!
    ebc0:	mov	x29, sp
    ebc4:	add	x0, x0, #0x18
    ebc8:	bl	227f4 <PyInit__decimal@@Base+0x1bd40>
    ebcc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ebd0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    ebd4:	ldr	x8, [x8, #4024]
    ebd8:	ldr	x9, [x9, #3976]
    ebdc:	cmp	w0, #0x0
    ebe0:	csel	x0, x9, x8, eq  // eq = none
    ebe4:	ldr	x8, [x0]
    ebe8:	add	x8, x8, #0x1
    ebec:	str	x8, [x0]
    ebf0:	ldp	x29, x30, [sp], #16
    ebf4:	ret
    ebf8:	stp	x29, x30, [sp, #-16]!
    ebfc:	mov	x29, sp
    ec00:	add	x0, x0, #0x18
    ec04:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
    ec08:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ec0c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    ec10:	ldr	x8, [x8, #4024]
    ec14:	ldr	x9, [x9, #3976]
    ec18:	cmp	w0, #0x0
    ec1c:	csel	x0, x9, x8, eq  // eq = none
    ec20:	ldr	x8, [x0]
    ec24:	add	x8, x8, #0x1
    ec28:	str	x8, [x0]
    ec2c:	ldp	x29, x30, [sp], #16
    ec30:	ret
    ec34:	sub	sp, sp, #0x40
    ec38:	stp	x29, x30, [sp, #16]
    ec3c:	stp	x22, x21, [sp, #32]
    ec40:	stp	x20, x19, [sp, #48]
    ec44:	add	x29, sp, #0x10
    ec48:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    ec4c:	ldr	x20, [x20, #4008]
    ec50:	mov	x8, x2
    ec54:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    ec58:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    ec5c:	mov	x19, x0
    ec60:	add	x2, x2, #0xac
    ec64:	add	x3, x3, #0x8e8
    ec68:	mov	x4, sp
    ec6c:	mov	x0, x1
    ec70:	mov	x1, x8
    ec74:	str	x20, [sp]
    ec78:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    ec7c:	cbz	w0, ecc8 <PyInit__decimal@@Base+0x8214>
    ec80:	ldr	x8, [sp]
    ec84:	cmp	x8, x20
    ec88:	b.eq	ecd0 <PyInit__decimal@@Base+0x821c>  // b.none
    ec8c:	ldr	x0, [x8, #8]
    ec90:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    ec94:	add	x8, x8, #0x0
    ec98:	cmp	x0, x8
    ec9c:	b.eq	ed0c <PyInit__decimal@@Base+0x8258>  // b.none
    eca0:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    eca4:	add	x1, x1, #0x0
    eca8:	bl	6900 <PyType_IsSubtype@plt>
    ecac:	cbnz	w0, ed0c <PyInit__decimal@@Base+0x8258>
    ecb0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ecb4:	ldr	x8, [x8, #3936]
    ecb8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ecbc:	add	x1, x1, #0xf61
    ecc0:	ldr	x0, [x8]
    ecc4:	bl	6590 <PyErr_SetString@plt>
    ecc8:	mov	x0, xzr
    eccc:	b	edc8 <PyInit__decimal@@Base+0x8314>
    ecd0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    ecd4:	ldr	x0, [x21, #1400]
    ecd8:	add	x2, sp, #0x8
    ecdc:	mov	x1, xzr
    ece0:	bl	6680 <PyContextVar_Get@plt>
    ece4:	tbnz	w0, #31, edc0 <PyInit__decimal@@Base+0x830c>
    ece8:	ldr	x20, [sp, #8]
    ecec:	cbz	x20, ed44 <PyInit__decimal@@Base+0x8290>
    ecf0:	str	x20, [sp]
    ecf4:	ldr	x8, [x20]
    ecf8:	subs	x8, x8, #0x1
    ecfc:	str	x8, [x20]
    ed00:	b.ne	ed0c <PyInit__decimal@@Base+0x8258>  // b.any
    ed04:	mov	x0, x20
    ed08:	bl	6510 <_Py_Dealloc@plt>
    ed0c:	ldr	x8, [sp]
    ed10:	add	x0, x19, #0x18
    ed14:	add	x1, x8, #0x10
    ed18:	bl	22864 <PyInit__decimal@@Base+0x1bdb0>
    ed1c:	cbz	w0, ed2c <PyInit__decimal@@Base+0x8278>
    ed20:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    ed24:	ldr	x0, [x0, #4024]
    ed28:	b	ed34 <PyInit__decimal@@Base+0x8280>
    ed2c:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    ed30:	ldr	x0, [x0, #3976]
    ed34:	ldr	x8, [x0]
    ed38:	add	x8, x8, #0x1
    ed3c:	str	x8, [x0]
    ed40:	b	edc8 <PyInit__decimal@@Base+0x8314>
    ed44:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    ed48:	ldr	x22, [x8, #1496]
    ed4c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    ed50:	add	x0, x0, #0x0
    ed54:	mov	x1, xzr
    ed58:	bl	6780 <PyObject_CallObject@plt>
    ed5c:	cbz	x0, edc0 <PyInit__decimal@@Base+0x830c>
    ed60:	ldp	q1, q0, [x22, #32]
    ed64:	ldr	q2, [x22, #16]
    ed68:	mov	x20, x0
    ed6c:	mov	x1, x20
    ed70:	stp	q1, q0, [x0, #32]
    ed74:	str	q2, [x0, #16]
    ed78:	ldr	w8, [x22, #80]
    ed7c:	stp	wzr, wzr, [x0, #44]
    ed80:	str	w8, [x0, #80]
    ed84:	ldr	x0, [x21, #1400]
    ed88:	bl	65c0 <PyContextVar_Set@plt>
    ed8c:	cbz	x0, eda8 <PyInit__decimal@@Base+0x82f4>
    ed90:	ldr	x8, [x0]
    ed94:	subs	x8, x8, #0x1
    ed98:	str	x8, [x0]
    ed9c:	b.ne	ecf0 <PyInit__decimal@@Base+0x823c>  // b.any
    eda0:	bl	6510 <_Py_Dealloc@plt>
    eda4:	b	ecf0 <PyInit__decimal@@Base+0x823c>
    eda8:	ldr	x8, [x20]
    edac:	subs	x8, x8, #0x1
    edb0:	str	x8, [x20]
    edb4:	b.ne	edc0 <PyInit__decimal@@Base+0x830c>  // b.any
    edb8:	mov	x0, x20
    edbc:	bl	6510 <_Py_Dealloc@plt>
    edc0:	mov	x0, xzr
    edc4:	str	xzr, [sp]
    edc8:	ldp	x20, x19, [sp, #48]
    edcc:	ldp	x22, x21, [sp, #32]
    edd0:	ldp	x29, x30, [sp, #16]
    edd4:	add	sp, sp, #0x40
    edd8:	ret
    eddc:	sub	sp, sp, #0x40
    ede0:	stp	x29, x30, [sp, #16]
    ede4:	stp	x22, x21, [sp, #32]
    ede8:	stp	x20, x19, [sp, #48]
    edec:	add	x29, sp, #0x10
    edf0:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    edf4:	ldr	x20, [x20, #4008]
    edf8:	mov	x8, x2
    edfc:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    ee00:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    ee04:	mov	x19, x0
    ee08:	add	x2, x2, #0xac
    ee0c:	add	x3, x3, #0x8f8
    ee10:	mov	x4, sp
    ee14:	mov	x0, x1
    ee18:	mov	x1, x8
    ee1c:	str	x20, [sp]
    ee20:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    ee24:	cbz	w0, ee70 <PyInit__decimal@@Base+0x83bc>
    ee28:	ldr	x8, [sp]
    ee2c:	cmp	x8, x20
    ee30:	b.eq	ee78 <PyInit__decimal@@Base+0x83c4>  // b.none
    ee34:	ldr	x0, [x8, #8]
    ee38:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    ee3c:	add	x8, x8, #0x0
    ee40:	cmp	x0, x8
    ee44:	b.eq	eeb4 <PyInit__decimal@@Base+0x8400>  // b.none
    ee48:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    ee4c:	add	x1, x1, #0x0
    ee50:	bl	6900 <PyType_IsSubtype@plt>
    ee54:	cbnz	w0, eeb4 <PyInit__decimal@@Base+0x8400>
    ee58:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    ee5c:	ldr	x8, [x8, #3936]
    ee60:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    ee64:	add	x1, x1, #0xf61
    ee68:	ldr	x0, [x8]
    ee6c:	bl	6590 <PyErr_SetString@plt>
    ee70:	mov	x0, xzr
    ee74:	b	ef70 <PyInit__decimal@@Base+0x84bc>
    ee78:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    ee7c:	ldr	x0, [x21, #1400]
    ee80:	add	x2, sp, #0x8
    ee84:	mov	x1, xzr
    ee88:	bl	6680 <PyContextVar_Get@plt>
    ee8c:	tbnz	w0, #31, ef68 <PyInit__decimal@@Base+0x84b4>
    ee90:	ldr	x20, [sp, #8]
    ee94:	cbz	x20, eeec <PyInit__decimal@@Base+0x8438>
    ee98:	str	x20, [sp]
    ee9c:	ldr	x8, [x20]
    eea0:	subs	x8, x8, #0x1
    eea4:	str	x8, [x20]
    eea8:	b.ne	eeb4 <PyInit__decimal@@Base+0x8400>  // b.any
    eeac:	mov	x0, x20
    eeb0:	bl	6510 <_Py_Dealloc@plt>
    eeb4:	ldr	x8, [sp]
    eeb8:	add	x0, x19, #0x18
    eebc:	add	x1, x8, #0x10
    eec0:	bl	228a8 <PyInit__decimal@@Base+0x1bdf4>
    eec4:	cbz	w0, eed4 <PyInit__decimal@@Base+0x8420>
    eec8:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    eecc:	ldr	x0, [x0, #4024]
    eed0:	b	eedc <PyInit__decimal@@Base+0x8428>
    eed4:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
    eed8:	ldr	x0, [x0, #3976]
    eedc:	ldr	x8, [x0]
    eee0:	add	x8, x8, #0x1
    eee4:	str	x8, [x0]
    eee8:	b	ef70 <PyInit__decimal@@Base+0x84bc>
    eeec:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    eef0:	ldr	x22, [x8, #1496]
    eef4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    eef8:	add	x0, x0, #0x0
    eefc:	mov	x1, xzr
    ef00:	bl	6780 <PyObject_CallObject@plt>
    ef04:	cbz	x0, ef68 <PyInit__decimal@@Base+0x84b4>
    ef08:	ldp	q1, q0, [x22, #32]
    ef0c:	ldr	q2, [x22, #16]
    ef10:	mov	x20, x0
    ef14:	mov	x1, x20
    ef18:	stp	q1, q0, [x0, #32]
    ef1c:	str	q2, [x0, #16]
    ef20:	ldr	w8, [x22, #80]
    ef24:	stp	wzr, wzr, [x0, #44]
    ef28:	str	w8, [x0, #80]
    ef2c:	ldr	x0, [x21, #1400]
    ef30:	bl	65c0 <PyContextVar_Set@plt>
    ef34:	cbz	x0, ef50 <PyInit__decimal@@Base+0x849c>
    ef38:	ldr	x8, [x0]
    ef3c:	subs	x8, x8, #0x1
    ef40:	str	x8, [x0]
    ef44:	b.ne	ee98 <PyInit__decimal@@Base+0x83e4>  // b.any
    ef48:	bl	6510 <_Py_Dealloc@plt>
    ef4c:	b	ee98 <PyInit__decimal@@Base+0x83e4>
    ef50:	ldr	x8, [x20]
    ef54:	subs	x8, x8, #0x1
    ef58:	str	x8, [x20]
    ef5c:	b.ne	ef68 <PyInit__decimal@@Base+0x84b4>  // b.any
    ef60:	mov	x0, x20
    ef64:	bl	6510 <_Py_Dealloc@plt>
    ef68:	mov	x0, xzr
    ef6c:	str	xzr, [sp]
    ef70:	ldp	x20, x19, [sp, #48]
    ef74:	ldp	x22, x21, [sp, #32]
    ef78:	ldp	x29, x30, [sp, #16]
    ef7c:	add	sp, sp, #0x40
    ef80:	ret
    ef84:	stp	x29, x30, [sp, #-32]!
    ef88:	str	x19, [sp, #16]
    ef8c:	mov	x29, sp
    ef90:	add	x19, x0, #0x18
    ef94:	mov	x0, x19
    ef98:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
    ef9c:	cbz	w0, efb0 <PyInit__decimal@@Base+0x84fc>
    efa0:	mov	x0, xzr
    efa4:	ldr	x19, [sp, #16]
    efa8:	ldp	x29, x30, [sp], #32
    efac:	b	65e0 <PyLong_FromSsize_t@plt>
    efb0:	mov	x0, x19
    efb4:	bl	22478 <PyInit__decimal@@Base+0x1b9c4>
    efb8:	ldr	x19, [sp, #16]
    efbc:	ldp	x29, x30, [sp], #32
    efc0:	b	65e0 <PyLong_FromSsize_t@plt>
    efc4:	ldr	x8, [x0]
    efc8:	add	x8, x8, #0x1
    efcc:	str	x8, [x0]
    efd0:	ret
    efd4:	ldr	x8, [x0]
    efd8:	add	x8, x8, #0x1
    efdc:	str	x8, [x0]
    efe0:	ret
    efe4:	stp	x29, x30, [sp, #-48]!
    efe8:	str	x21, [sp, #16]
    efec:	stp	x20, x19, [sp, #32]
    eff0:	mov	x29, sp
    eff4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    eff8:	add	x0, x0, #0xe60
    effc:	bl	6890 <_PyObject_New@plt>
    f000:	mov	x19, x0
    f004:	cbz	x0, f054 <PyInit__decimal@@Base+0x85a0>
    f008:	mov	w8, #0xa                   	// #10
    f00c:	mov	x21, x19
    f010:	adrp	x11, 3e000 <PyInit__decimal@@Base+0x3754c>
    f014:	str	x8, [x21, #72]!
    f018:	ldr	q0, [x11, #1536]
    f01c:	mov	x9, #0xffffffffffffffff    	// #-1
    f020:	mov	w10, #0x30                  	// #48
    f024:	mov	x20, x21
    f028:	stur	x9, [x21, #-56]
    f02c:	strb	w10, [x20, #-48]!
    f030:	mov	x0, x20
    f034:	mov	w1, wzr
    f038:	stp	xzr, xzr, [x21, #-40]
    f03c:	stur	x21, [x21, #-8]
    f040:	stur	q0, [x21, #-24]
    f044:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
    f048:	mov	x0, x20
    f04c:	stur	xzr, [x21, #-40]
    f050:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
    f054:	mov	x0, x19
    f058:	ldp	x20, x19, [sp, #32]
    f05c:	ldr	x21, [sp, #16]
    f060:	ldp	x29, x30, [sp], #48
    f064:	ret
    f068:	sub	sp, sp, #0x30
    f06c:	stp	x29, x30, [sp, #16]
    f070:	stp	x20, x19, [sp, #32]
    f074:	add	x29, sp, #0x10
    f078:	mov	x20, x0
    f07c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    f080:	add	x0, x0, #0xe60
    f084:	stur	wzr, [x29, #-4]
    f088:	bl	6890 <_PyObject_New@plt>
    f08c:	mov	x19, x0
    f090:	cbz	x0, f0f0 <PyInit__decimal@@Base+0x863c>
    f094:	mov	w8, #0x30                  	// #48
    f098:	mov	x0, x19
    f09c:	strb	w8, [x0, #24]!
    f0a0:	mov	x9, #0xffffffffffffffff    	// #-1
    f0a4:	mov	w10, #0x4                   	// #4
    f0a8:	add	x8, x0, #0x30
    f0ac:	add	x1, x20, #0x18
    f0b0:	sub	x2, x29, #0x4
    f0b4:	stur	x9, [x0, #-8]
    f0b8:	stp	xzr, xzr, [x0, #8]
    f0bc:	stp	xzr, x10, [x0, #24]
    f0c0:	str	x8, [x0, #40]
    f0c4:	bl	2535c <PyInit__decimal@@Base+0x1e8a8>
    f0c8:	ldurb	w8, [x29, #-3]
    f0cc:	tbz	w8, #1, f0f0 <PyInit__decimal@@Base+0x863c>
    f0d0:	ldr	x8, [x19]
    f0d4:	subs	x8, x8, #0x1
    f0d8:	str	x8, [x19]
    f0dc:	b.ne	f0e8 <PyInit__decimal@@Base+0x8634>  // b.any
    f0e0:	mov	x0, x19
    f0e4:	bl	6510 <_Py_Dealloc@plt>
    f0e8:	bl	6520 <PyErr_NoMemory@plt>
    f0ec:	mov	x19, xzr
    f0f0:	mov	x0, x19
    f0f4:	ldp	x20, x19, [sp, #32]
    f0f8:	ldp	x29, x30, [sp, #16]
    f0fc:	add	sp, sp, #0x30
    f100:	ret
    f104:	sub	sp, sp, #0x30
    f108:	stp	x29, x30, [sp, #16]
    f10c:	stp	x20, x19, [sp, #32]
    f110:	add	x29, sp, #0x10
    f114:	mov	x20, x0
    f118:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    f11c:	add	x0, x0, #0xe60
    f120:	stur	wzr, [x29, #-4]
    f124:	bl	6890 <_PyObject_New@plt>
    f128:	mov	x19, x0
    f12c:	cbz	x0, f18c <PyInit__decimal@@Base+0x86d8>
    f130:	mov	w8, #0x30                  	// #48
    f134:	mov	x0, x19
    f138:	strb	w8, [x0, #24]!
    f13c:	mov	x9, #0xffffffffffffffff    	// #-1
    f140:	mov	w10, #0x4                   	// #4
    f144:	add	x8, x0, #0x30
    f148:	add	x1, x20, #0x18
    f14c:	sub	x2, x29, #0x4
    f150:	stur	x9, [x0, #-8]
    f154:	stp	xzr, xzr, [x0, #8]
    f158:	stp	xzr, x10, [x0, #24]
    f15c:	str	x8, [x0, #40]
    f160:	bl	2541c <PyInit__decimal@@Base+0x1e968>
    f164:	ldurb	w8, [x29, #-3]
    f168:	tbz	w8, #1, f18c <PyInit__decimal@@Base+0x86d8>
    f16c:	ldr	x8, [x19]
    f170:	subs	x8, x8, #0x1
    f174:	str	x8, [x19]
    f178:	b.ne	f184 <PyInit__decimal@@Base+0x86d0>  // b.any
    f17c:	mov	x0, x19
    f180:	bl	6510 <_Py_Dealloc@plt>
    f184:	bl	6520 <PyErr_NoMemory@plt>
    f188:	mov	x19, xzr
    f18c:	mov	x0, x19
    f190:	ldp	x20, x19, [sp, #32]
    f194:	ldp	x29, x30, [sp, #16]
    f198:	add	sp, sp, #0x30
    f19c:	ret
    f1a0:	sub	sp, sp, #0x50
    f1a4:	stp	x29, x30, [sp, #32]
    f1a8:	stp	x22, x21, [sp, #48]
    f1ac:	stp	x20, x19, [sp, #64]
    f1b0:	add	x29, sp, #0x20
    f1b4:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    f1b8:	ldr	x20, [x20, #4008]
    f1bc:	mov	x8, x2
    f1c0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    f1c4:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    f1c8:	mov	x19, x0
    f1cc:	add	x2, x2, #0xac
    f1d0:	add	x3, x3, #0x908
    f1d4:	add	x4, sp, #0x10
    f1d8:	mov	x0, x1
    f1dc:	mov	x1, x8
    f1e0:	str	x20, [sp, #16]
    f1e4:	str	wzr, [sp, #12]
    f1e8:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f1ec:	cbz	w0, f2f0 <PyInit__decimal@@Base+0x883c>
    f1f0:	ldr	x8, [sp, #16]
    f1f4:	cmp	x8, x20
    f1f8:	b.eq	f23c <PyInit__decimal@@Base+0x8788>  // b.none
    f1fc:	ldr	x0, [x8, #8]
    f200:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f204:	add	x8, x8, #0x0
    f208:	cmp	x0, x8
    f20c:	b.eq	f278 <PyInit__decimal@@Base+0x87c4>  // b.none
    f210:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    f214:	add	x1, x1, #0x0
    f218:	bl	6900 <PyType_IsSubtype@plt>
    f21c:	cbnz	w0, f278 <PyInit__decimal@@Base+0x87c4>
    f220:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    f224:	ldr	x8, [x8, #3936]
    f228:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    f22c:	add	x1, x1, #0xf61
    f230:	ldr	x0, [x8]
    f234:	bl	6590 <PyErr_SetString@plt>
    f238:	b	f2f0 <PyInit__decimal@@Base+0x883c>
    f23c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    f240:	ldr	x0, [x21, #1400]
    f244:	sub	x2, x29, #0x8
    f248:	mov	x1, xzr
    f24c:	bl	6680 <PyContextVar_Get@plt>
    f250:	tbnz	w0, #31, f388 <PyInit__decimal@@Base+0x88d4>
    f254:	ldur	x20, [x29, #-8]
    f258:	cbz	x20, f30c <PyInit__decimal@@Base+0x8858>
    f25c:	str	x20, [sp, #16]
    f260:	ldr	x8, [x20]
    f264:	subs	x8, x8, #0x1
    f268:	str	x8, [x20]
    f26c:	b.ne	f278 <PyInit__decimal@@Base+0x87c4>  // b.any
    f270:	mov	x0, x20
    f274:	bl	6510 <_Py_Dealloc@plt>
    f278:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    f27c:	add	x0, x0, #0xe60
    f280:	bl	6890 <_PyObject_New@plt>
    f284:	mov	x20, x0
    f288:	cbz	x0, f2f4 <PyInit__decimal@@Base+0x8840>
    f28c:	mov	w8, #0x30                  	// #48
    f290:	mov	x0, x20
    f294:	strb	w8, [x0, #24]!
    f298:	mov	x9, #0xffffffffffffffff    	// #-1
    f29c:	mov	w10, #0x4                   	// #4
    f2a0:	add	x8, x0, #0x30
    f2a4:	stur	x9, [x0, #-8]
    f2a8:	stp	xzr, xzr, [x0, #8]
    f2ac:	stp	xzr, x10, [x0, #24]
    f2b0:	str	x8, [x0, #40]
    f2b4:	ldr	x8, [sp, #16]
    f2b8:	add	x1, x19, #0x18
    f2bc:	add	x3, sp, #0xc
    f2c0:	add	x2, x8, #0x10
    f2c4:	bl	27c78 <PyInit__decimal@@Base+0x211c4>
    f2c8:	ldr	x0, [sp, #16]
    f2cc:	ldr	w1, [sp, #12]
    f2d0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    f2d4:	cbz	w0, f2f4 <PyInit__decimal@@Base+0x8840>
    f2d8:	ldr	x8, [x20]
    f2dc:	subs	x8, x8, #0x1
    f2e0:	str	x8, [x20]
    f2e4:	b.ne	f2f0 <PyInit__decimal@@Base+0x883c>  // b.any
    f2e8:	mov	x0, x20
    f2ec:	bl	6510 <_Py_Dealloc@plt>
    f2f0:	mov	x20, xzr
    f2f4:	mov	x0, x20
    f2f8:	ldp	x20, x19, [sp, #64]
    f2fc:	ldp	x22, x21, [sp, #48]
    f300:	ldp	x29, x30, [sp, #32]
    f304:	add	sp, sp, #0x50
    f308:	ret
    f30c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f310:	ldr	x22, [x8, #1496]
    f314:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    f318:	add	x0, x0, #0x0
    f31c:	mov	x1, xzr
    f320:	bl	6780 <PyObject_CallObject@plt>
    f324:	cbz	x0, f388 <PyInit__decimal@@Base+0x88d4>
    f328:	ldp	q1, q0, [x22, #32]
    f32c:	ldr	q2, [x22, #16]
    f330:	mov	x20, x0
    f334:	mov	x1, x20
    f338:	stp	q1, q0, [x0, #32]
    f33c:	str	q2, [x0, #16]
    f340:	ldr	w8, [x22, #80]
    f344:	stp	wzr, wzr, [x0, #44]
    f348:	str	w8, [x0, #80]
    f34c:	ldr	x0, [x21, #1400]
    f350:	bl	65c0 <PyContextVar_Set@plt>
    f354:	cbz	x0, f370 <PyInit__decimal@@Base+0x88bc>
    f358:	ldr	x8, [x0]
    f35c:	subs	x8, x8, #0x1
    f360:	str	x8, [x0]
    f364:	b.ne	f25c <PyInit__decimal@@Base+0x87a8>  // b.any
    f368:	bl	6510 <_Py_Dealloc@plt>
    f36c:	b	f25c <PyInit__decimal@@Base+0x87a8>
    f370:	ldr	x8, [x20]
    f374:	subs	x8, x8, #0x1
    f378:	str	x8, [x20]
    f37c:	b.ne	f388 <PyInit__decimal@@Base+0x88d4>  // b.any
    f380:	mov	x0, x20
    f384:	bl	6510 <_Py_Dealloc@plt>
    f388:	mov	x20, xzr
    f38c:	str	xzr, [sp, #16]
    f390:	b	f2f4 <PyInit__decimal@@Base+0x8840>
    f394:	sub	sp, sp, #0x50
    f398:	stp	x29, x30, [sp, #32]
    f39c:	stp	x22, x21, [sp, #48]
    f3a0:	stp	x20, x19, [sp, #64]
    f3a4:	add	x29, sp, #0x20
    f3a8:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    f3ac:	ldr	x20, [x20, #4008]
    f3b0:	mov	x8, x2
    f3b4:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    f3b8:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    f3bc:	mov	x19, x0
    f3c0:	add	x2, x2, #0xac
    f3c4:	add	x3, x3, #0x918
    f3c8:	add	x4, sp, #0x10
    f3cc:	mov	x0, x1
    f3d0:	mov	x1, x8
    f3d4:	str	x20, [sp, #16]
    f3d8:	str	wzr, [sp, #12]
    f3dc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f3e0:	cbz	w0, f4e4 <PyInit__decimal@@Base+0x8a30>
    f3e4:	ldr	x8, [sp, #16]
    f3e8:	cmp	x8, x20
    f3ec:	b.eq	f430 <PyInit__decimal@@Base+0x897c>  // b.none
    f3f0:	ldr	x0, [x8, #8]
    f3f4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f3f8:	add	x8, x8, #0x0
    f3fc:	cmp	x0, x8
    f400:	b.eq	f46c <PyInit__decimal@@Base+0x89b8>  // b.none
    f404:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    f408:	add	x1, x1, #0x0
    f40c:	bl	6900 <PyType_IsSubtype@plt>
    f410:	cbnz	w0, f46c <PyInit__decimal@@Base+0x89b8>
    f414:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    f418:	ldr	x8, [x8, #3936]
    f41c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    f420:	add	x1, x1, #0xf61
    f424:	ldr	x0, [x8]
    f428:	bl	6590 <PyErr_SetString@plt>
    f42c:	b	f4e4 <PyInit__decimal@@Base+0x8a30>
    f430:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    f434:	ldr	x0, [x21, #1400]
    f438:	sub	x2, x29, #0x8
    f43c:	mov	x1, xzr
    f440:	bl	6680 <PyContextVar_Get@plt>
    f444:	tbnz	w0, #31, f57c <PyInit__decimal@@Base+0x8ac8>
    f448:	ldur	x20, [x29, #-8]
    f44c:	cbz	x20, f500 <PyInit__decimal@@Base+0x8a4c>
    f450:	str	x20, [sp, #16]
    f454:	ldr	x8, [x20]
    f458:	subs	x8, x8, #0x1
    f45c:	str	x8, [x20]
    f460:	b.ne	f46c <PyInit__decimal@@Base+0x89b8>  // b.any
    f464:	mov	x0, x20
    f468:	bl	6510 <_Py_Dealloc@plt>
    f46c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    f470:	add	x0, x0, #0xe60
    f474:	bl	6890 <_PyObject_New@plt>
    f478:	mov	x20, x0
    f47c:	cbz	x0, f4e8 <PyInit__decimal@@Base+0x8a34>
    f480:	mov	w8, #0x30                  	// #48
    f484:	mov	x0, x20
    f488:	strb	w8, [x0, #24]!
    f48c:	mov	x9, #0xffffffffffffffff    	// #-1
    f490:	mov	w10, #0x4                   	// #4
    f494:	add	x8, x0, #0x30
    f498:	stur	x9, [x0, #-8]
    f49c:	stp	xzr, xzr, [x0, #8]
    f4a0:	stp	xzr, x10, [x0, #24]
    f4a4:	str	x8, [x0, #40]
    f4a8:	ldr	x8, [sp, #16]
    f4ac:	add	x1, x19, #0x18
    f4b0:	add	x3, sp, #0xc
    f4b4:	add	x2, x8, #0x10
    f4b8:	bl	27890 <PyInit__decimal@@Base+0x20ddc>
    f4bc:	ldr	x0, [sp, #16]
    f4c0:	ldr	w1, [sp, #12]
    f4c4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
    f4c8:	cbz	w0, f4e8 <PyInit__decimal@@Base+0x8a34>
    f4cc:	ldr	x8, [x20]
    f4d0:	subs	x8, x8, #0x1
    f4d4:	str	x8, [x20]
    f4d8:	b.ne	f4e4 <PyInit__decimal@@Base+0x8a30>  // b.any
    f4dc:	mov	x0, x20
    f4e0:	bl	6510 <_Py_Dealloc@plt>
    f4e4:	mov	x20, xzr
    f4e8:	mov	x0, x20
    f4ec:	ldp	x20, x19, [sp, #64]
    f4f0:	ldp	x22, x21, [sp, #48]
    f4f4:	ldp	x29, x30, [sp, #32]
    f4f8:	add	sp, sp, #0x50
    f4fc:	ret
    f500:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f504:	ldr	x22, [x8, #1496]
    f508:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    f50c:	add	x0, x0, #0x0
    f510:	mov	x1, xzr
    f514:	bl	6780 <PyObject_CallObject@plt>
    f518:	cbz	x0, f57c <PyInit__decimal@@Base+0x8ac8>
    f51c:	ldp	q1, q0, [x22, #32]
    f520:	ldr	q2, [x22, #16]
    f524:	mov	x20, x0
    f528:	mov	x1, x20
    f52c:	stp	q1, q0, [x0, #32]
    f530:	str	q2, [x0, #16]
    f534:	ldr	w8, [x22, #80]
    f538:	stp	wzr, wzr, [x0, #44]
    f53c:	str	w8, [x0, #80]
    f540:	ldr	x0, [x21, #1400]
    f544:	bl	65c0 <PyContextVar_Set@plt>
    f548:	cbz	x0, f564 <PyInit__decimal@@Base+0x8ab0>
    f54c:	ldr	x8, [x0]
    f550:	subs	x8, x8, #0x1
    f554:	str	x8, [x0]
    f558:	b.ne	f450 <PyInit__decimal@@Base+0x899c>  // b.any
    f55c:	bl	6510 <_Py_Dealloc@plt>
    f560:	b	f450 <PyInit__decimal@@Base+0x899c>
    f564:	ldr	x8, [x20]
    f568:	subs	x8, x8, #0x1
    f56c:	str	x8, [x20]
    f570:	b.ne	f57c <PyInit__decimal@@Base+0x8ac8>  // b.any
    f574:	mov	x0, x20
    f578:	bl	6510 <_Py_Dealloc@plt>
    f57c:	mov	x20, xzr
    f580:	str	xzr, [sp, #16]
    f584:	b	f4e8 <PyInit__decimal@@Base+0x8a34>
    f588:	sub	sp, sp, #0x40
    f58c:	stp	x29, x30, [sp, #16]
    f590:	stp	x22, x21, [sp, #32]
    f594:	stp	x20, x19, [sp, #48]
    f598:	add	x29, sp, #0x10
    f59c:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    f5a0:	ldr	x20, [x20, #4008]
    f5a4:	mov	x8, x2
    f5a8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    f5ac:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    f5b0:	mov	x19, x0
    f5b4:	add	x2, x2, #0xac
    f5b8:	add	x3, x3, #0x928
    f5bc:	mov	x4, sp
    f5c0:	mov	x0, x1
    f5c4:	mov	x1, x8
    f5c8:	str	x20, [sp]
    f5cc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f5d0:	cbz	w0, f61c <PyInit__decimal@@Base+0x8b68>
    f5d4:	ldr	x8, [sp]
    f5d8:	cmp	x8, x20
    f5dc:	b.eq	f624 <PyInit__decimal@@Base+0x8b70>  // b.none
    f5e0:	ldr	x0, [x8, #8]
    f5e4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f5e8:	add	x8, x8, #0x0
    f5ec:	cmp	x0, x8
    f5f0:	b.eq	f660 <PyInit__decimal@@Base+0x8bac>  // b.none
    f5f4:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    f5f8:	add	x1, x1, #0x0
    f5fc:	bl	6900 <PyType_IsSubtype@plt>
    f600:	cbnz	w0, f660 <PyInit__decimal@@Base+0x8bac>
    f604:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    f608:	ldr	x8, [x8, #3936]
    f60c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    f610:	add	x1, x1, #0xf61
    f614:	ldr	x0, [x8]
    f618:	bl	6590 <PyErr_SetString@plt>
    f61c:	mov	x0, xzr
    f620:	b	f6fc <PyInit__decimal@@Base+0x8c48>
    f624:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    f628:	ldr	x0, [x21, #1400]
    f62c:	add	x2, sp, #0x8
    f630:	mov	x1, xzr
    f634:	bl	6680 <PyContextVar_Get@plt>
    f638:	tbnz	w0, #31, f6f4 <PyInit__decimal@@Base+0x8c40>
    f63c:	ldr	x20, [sp, #8]
    f640:	cbz	x20, f678 <PyInit__decimal@@Base+0x8bc4>
    f644:	str	x20, [sp]
    f648:	ldr	x8, [x20]
    f64c:	subs	x8, x8, #0x1
    f650:	str	x8, [x20]
    f654:	b.ne	f660 <PyInit__decimal@@Base+0x8bac>  // b.any
    f658:	mov	x0, x20
    f65c:	bl	6510 <_Py_Dealloc@plt>
    f660:	ldr	x8, [sp]
    f664:	add	x0, x19, #0x18
    f668:	add	x1, x8, #0x10
    f66c:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
    f670:	bl	68a0 <PyUnicode_FromString@plt>
    f674:	b	f6fc <PyInit__decimal@@Base+0x8c48>
    f678:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f67c:	ldr	x22, [x8, #1496]
    f680:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    f684:	add	x0, x0, #0x0
    f688:	mov	x1, xzr
    f68c:	bl	6780 <PyObject_CallObject@plt>
    f690:	cbz	x0, f6f4 <PyInit__decimal@@Base+0x8c40>
    f694:	ldp	q1, q0, [x22, #32]
    f698:	ldr	q2, [x22, #16]
    f69c:	mov	x20, x0
    f6a0:	mov	x1, x20
    f6a4:	stp	q1, q0, [x0, #32]
    f6a8:	str	q2, [x0, #16]
    f6ac:	ldr	w8, [x22, #80]
    f6b0:	stp	wzr, wzr, [x0, #44]
    f6b4:	str	w8, [x0, #80]
    f6b8:	ldr	x0, [x21, #1400]
    f6bc:	bl	65c0 <PyContextVar_Set@plt>
    f6c0:	cbz	x0, f6dc <PyInit__decimal@@Base+0x8c28>
    f6c4:	ldr	x8, [x0]
    f6c8:	subs	x8, x8, #0x1
    f6cc:	str	x8, [x0]
    f6d0:	b.ne	f644 <PyInit__decimal@@Base+0x8b90>  // b.any
    f6d4:	bl	6510 <_Py_Dealloc@plt>
    f6d8:	b	f644 <PyInit__decimal@@Base+0x8b90>
    f6dc:	ldr	x8, [x20]
    f6e0:	subs	x8, x8, #0x1
    f6e4:	str	x8, [x20]
    f6e8:	b.ne	f6f4 <PyInit__decimal@@Base+0x8c40>  // b.any
    f6ec:	mov	x0, x20
    f6f0:	bl	6510 <_Py_Dealloc@plt>
    f6f4:	mov	x0, xzr
    f6f8:	str	xzr, [sp]
    f6fc:	ldp	x20, x19, [sp, #48]
    f700:	ldp	x22, x21, [sp, #32]
    f704:	ldp	x29, x30, [sp, #16]
    f708:	add	sp, sp, #0x40
    f70c:	ret
    f710:	sub	sp, sp, #0x40
    f714:	stp	x29, x30, [sp, #16]
    f718:	stp	x22, x21, [sp, #32]
    f71c:	stp	x20, x19, [sp, #48]
    f720:	add	x29, sp, #0x10
    f724:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    f728:	ldr	x20, [x20, #4008]
    f72c:	mov	x8, x2
    f730:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    f734:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    f738:	mov	x19, x0
    f73c:	add	x2, x2, #0xac
    f740:	add	x3, x3, #0x938
    f744:	mov	x4, sp
    f748:	mov	x0, x1
    f74c:	mov	x1, x8
    f750:	str	x20, [sp]
    f754:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f758:	cbz	w0, f7a4 <PyInit__decimal@@Base+0x8cf0>
    f75c:	ldr	x8, [sp]
    f760:	cmp	x8, x20
    f764:	b.eq	f7ac <PyInit__decimal@@Base+0x8cf8>  // b.none
    f768:	ldr	x0, [x8, #8]
    f76c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f770:	add	x8, x8, #0x0
    f774:	cmp	x0, x8
    f778:	b.eq	f7e8 <PyInit__decimal@@Base+0x8d34>  // b.none
    f77c:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    f780:	add	x1, x1, #0x0
    f784:	bl	6900 <PyType_IsSubtype@plt>
    f788:	cbnz	w0, f7e8 <PyInit__decimal@@Base+0x8d34>
    f78c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    f790:	ldr	x8, [x8, #3936]
    f794:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    f798:	add	x1, x1, #0xf61
    f79c:	ldr	x0, [x8]
    f7a0:	bl	6590 <PyErr_SetString@plt>
    f7a4:	mov	x19, xzr
    f7a8:	b	f8e8 <PyInit__decimal@@Base+0x8e34>
    f7ac:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    f7b0:	ldr	x0, [x21, #1400]
    f7b4:	add	x2, sp, #0x8
    f7b8:	mov	x1, xzr
    f7bc:	bl	6680 <PyContextVar_Get@plt>
    f7c0:	tbnz	w0, #31, f8e0 <PyInit__decimal@@Base+0x8e2c>
    f7c4:	ldr	x20, [sp, #8]
    f7c8:	cbz	x20, f864 <PyInit__decimal@@Base+0x8db0>
    f7cc:	str	x20, [sp]
    f7d0:	ldr	x8, [x20]
    f7d4:	subs	x8, x8, #0x1
    f7d8:	str	x8, [x20]
    f7dc:	b.ne	f7e8 <PyInit__decimal@@Base+0x8d34>  // b.any
    f7e0:	mov	x0, x20
    f7e4:	bl	6510 <_Py_Dealloc@plt>
    f7e8:	ldr	x8, [sp]
    f7ec:	add	x1, x19, #0x18
    f7f0:	add	x0, sp, #0x8
    f7f4:	ldr	w2, [x8, #80]
    f7f8:	bl	1fe34 <PyInit__decimal@@Base+0x19380>
    f7fc:	tbnz	x0, #63, f828 <PyInit__decimal@@Base+0x8d74>
    f800:	ldr	x21, [sp, #8]
    f804:	mov	w1, #0x7f                  	// #127
    f808:	mov	x20, x0
    f80c:	bl	6990 <PyUnicode_New@plt>
    f810:	mov	x19, x0
    f814:	cbz	x0, f850 <PyInit__decimal@@Base+0x8d9c>
    f818:	ldr	w8, [x19, #32]
    f81c:	tbnz	w8, #5, f834 <PyInit__decimal@@Base+0x8d80>
    f820:	ldr	x0, [x19, #72]
    f824:	b	f844 <PyInit__decimal@@Base+0x8d90>
    f828:	bl	6520 <PyErr_NoMemory@plt>
    f82c:	mov	x19, xzr
    f830:	b	f8e8 <PyInit__decimal@@Base+0x8e34>
    f834:	add	x9, x19, #0x30
    f838:	add	x10, x19, #0x48
    f83c:	tst	w8, #0x40
    f840:	csel	x0, x10, x9, eq  // eq = none
    f844:	mov	x1, x21
    f848:	mov	x2, x20
    f84c:	bl	63c0 <memcpy@plt>
    f850:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f854:	ldr	x8, [x8, #1376]
    f858:	ldr	x0, [sp, #8]
    f85c:	blr	x8
    f860:	b	f8e8 <PyInit__decimal@@Base+0x8e34>
    f864:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f868:	ldr	x22, [x8, #1496]
    f86c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    f870:	add	x0, x0, #0x0
    f874:	mov	x1, xzr
    f878:	bl	6780 <PyObject_CallObject@plt>
    f87c:	cbz	x0, f8e0 <PyInit__decimal@@Base+0x8e2c>
    f880:	ldp	q1, q0, [x22, #32]
    f884:	ldr	q2, [x22, #16]
    f888:	mov	x20, x0
    f88c:	mov	x1, x20
    f890:	stp	q1, q0, [x0, #32]
    f894:	str	q2, [x0, #16]
    f898:	ldr	w8, [x22, #80]
    f89c:	stp	wzr, wzr, [x0, #44]
    f8a0:	str	w8, [x0, #80]
    f8a4:	ldr	x0, [x21, #1400]
    f8a8:	bl	65c0 <PyContextVar_Set@plt>
    f8ac:	cbz	x0, f8c8 <PyInit__decimal@@Base+0x8e14>
    f8b0:	ldr	x8, [x0]
    f8b4:	subs	x8, x8, #0x1
    f8b8:	str	x8, [x0]
    f8bc:	b.ne	f7cc <PyInit__decimal@@Base+0x8d18>  // b.any
    f8c0:	bl	6510 <_Py_Dealloc@plt>
    f8c4:	b	f7cc <PyInit__decimal@@Base+0x8d18>
    f8c8:	ldr	x8, [x20]
    f8cc:	subs	x8, x8, #0x1
    f8d0:	str	x8, [x20]
    f8d4:	b.ne	f8e0 <PyInit__decimal@@Base+0x8e2c>  // b.any
    f8d8:	mov	x0, x20
    f8dc:	bl	6510 <_Py_Dealloc@plt>
    f8e0:	mov	x19, xzr
    f8e4:	str	xzr, [sp]
    f8e8:	mov	x0, x19
    f8ec:	ldp	x20, x19, [sp, #48]
    f8f0:	ldp	x22, x21, [sp, #32]
    f8f4:	ldp	x29, x30, [sp, #16]
    f8f8:	add	sp, sp, #0x40
    f8fc:	ret
    f900:	sub	sp, sp, #0x50
    f904:	stp	x29, x30, [sp, #32]
    f908:	stp	x22, x21, [sp, #48]
    f90c:	stp	x20, x19, [sp, #64]
    f910:	add	x29, sp, #0x20
    f914:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    f918:	ldr	x20, [x20, #4008]
    f91c:	mov	x8, x2
    f920:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    f924:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    f928:	mov	x19, x0
    f92c:	add	x2, x2, #0xab
    f930:	add	x3, x3, #0xa48
    f934:	add	x4, sp, #0x8
    f938:	add	x5, sp, #0x10
    f93c:	mov	x0, x1
    f940:	mov	x1, x8
    f944:	str	x20, [sp, #16]
    f948:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f94c:	cbz	w0, fbf0 <PyInit__decimal@@Base+0x913c>
    f950:	ldr	x8, [sp, #16]
    f954:	cmp	x8, x20
    f958:	b.eq	f99c <PyInit__decimal@@Base+0x8ee8>  // b.none
    f95c:	ldr	x0, [x8, #8]
    f960:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    f964:	add	x8, x8, #0x0
    f968:	cmp	x0, x8
    f96c:	b.eq	f9d8 <PyInit__decimal@@Base+0x8f24>  // b.none
    f970:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    f974:	add	x1, x1, #0x0
    f978:	bl	6900 <PyType_IsSubtype@plt>
    f97c:	cbnz	w0, f9d8 <PyInit__decimal@@Base+0x8f24>
    f980:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    f984:	ldr	x8, [x8, #3936]
    f988:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    f98c:	add	x1, x1, #0xf61
    f990:	ldr	x0, [x8]
    f994:	bl	6590 <PyErr_SetString@plt>
    f998:	b	fbf0 <PyInit__decimal@@Base+0x913c>
    f99c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    f9a0:	ldr	x0, [x21, #1400]
    f9a4:	sub	x2, x29, #0x8
    f9a8:	mov	x1, xzr
    f9ac:	bl	6680 <PyContextVar_Get@plt>
    f9b0:	tbnz	w0, #31, fc34 <PyInit__decimal@@Base+0x9180>
    f9b4:	ldur	x20, [x29, #-8]
    f9b8:	cbz	x20, fb40 <PyInit__decimal@@Base+0x908c>
    f9bc:	str	x20, [sp, #16]
    f9c0:	ldr	x8, [x20]
    f9c4:	subs	x8, x8, #0x1
    f9c8:	str	x8, [x20]
    f9cc:	b.ne	f9d8 <PyInit__decimal@@Base+0x8f24>  // b.any
    f9d0:	mov	x0, x20
    f9d4:	bl	6510 <_Py_Dealloc@plt>
    f9d8:	ldr	x0, [x19, #8]
    f9dc:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    f9e0:	add	x21, x21, #0xe60
    f9e4:	cmp	x0, x21
    f9e8:	b.eq	fa00 <PyInit__decimal@@Base+0x8f4c>  // b.none
    f9ec:	ldr	x20, [sp, #16]
    f9f0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    f9f4:	add	x1, x1, #0xe60
    f9f8:	bl	6900 <PyType_IsSubtype@plt>
    f9fc:	cbz	w0, fae4 <PyInit__decimal@@Base+0x9030>
    fa00:	ldr	x8, [x19]
    fa04:	add	x8, x8, #0x1
    fa08:	str	x8, [x19]
    fa0c:	ldr	x20, [sp, #8]
    fa10:	ldr	x0, [x20, #8]
    fa14:	cmp	x0, x21
    fa18:	b.eq	fa30 <PyInit__decimal@@Base+0x8f7c>  // b.none
    fa1c:	ldr	x21, [sp, #16]
    fa20:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    fa24:	add	x1, x1, #0xe60
    fa28:	bl	6900 <PyType_IsSubtype@plt>
    fa2c:	cbz	w0, fb14 <PyInit__decimal@@Base+0x9060>
    fa30:	ldr	x8, [x20]
    fa34:	add	x8, x8, #0x1
    fa38:	str	x8, [x20]
    fa3c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    fa40:	add	x0, x0, #0xe60
    fa44:	bl	6890 <_PyObject_New@plt>
    fa48:	cbz	x0, fab4 <PyInit__decimal@@Base+0x9000>
    fa4c:	mov	w8, #0x30                  	// #48
    fa50:	mov	x21, x0
    fa54:	strb	w8, [x0, #24]!
    fa58:	mov	x9, #0xffffffffffffffff    	// #-1
    fa5c:	mov	w10, #0x4                   	// #4
    fa60:	add	x1, x19, #0x18
    fa64:	add	x8, x0, #0x30
    fa68:	add	x2, x20, #0x18
    fa6c:	stur	x9, [x0, #-8]
    fa70:	stp	xzr, xzr, [x0, #8]
    fa74:	stp	xzr, x10, [x0, #24]
    fa78:	str	x8, [x0, #40]
    fa7c:	bl	25e70 <PyInit__decimal@@Base+0x1f3bc>
    fa80:	ldr	x8, [x19]
    fa84:	subs	x8, x8, #0x1
    fa88:	str	x8, [x19]
    fa8c:	b.ne	fa98 <PyInit__decimal@@Base+0x8fe4>  // b.any
    fa90:	mov	x0, x19
    fa94:	bl	6510 <_Py_Dealloc@plt>
    fa98:	ldr	x8, [x20]
    fa9c:	subs	x8, x8, #0x1
    faa0:	str	x8, [x20]
    faa4:	b.ne	fbf4 <PyInit__decimal@@Base+0x9140>  // b.any
    faa8:	mov	x0, x20
    faac:	bl	6510 <_Py_Dealloc@plt>
    fab0:	b	fbf4 <PyInit__decimal@@Base+0x9140>
    fab4:	ldr	x8, [x19]
    fab8:	subs	x8, x8, #0x1
    fabc:	str	x8, [x19]
    fac0:	b.ne	facc <PyInit__decimal@@Base+0x9018>  // b.any
    fac4:	mov	x0, x19
    fac8:	bl	6510 <_Py_Dealloc@plt>
    facc:	ldr	x8, [x20]
    fad0:	subs	x8, x8, #0x1
    fad4:	str	x8, [x20]
    fad8:	b.ne	fbf0 <PyInit__decimal@@Base+0x913c>  // b.any
    fadc:	mov	x0, x20
    fae0:	b	fc10 <PyInit__decimal@@Base+0x915c>
    fae4:	ldr	x8, [x19, #8]
    fae8:	ldrb	w9, [x8, #171]
    faec:	tbnz	w9, #0, fba4 <PyInit__decimal@@Base+0x90f0>
    faf0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    faf4:	ldr	x9, [x9, #3936]
    faf8:	ldr	x2, [x8, #24]
    fafc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    fb00:	add	x1, x1, #0xb93
    fb04:	ldr	x0, [x9]
    fb08:	bl	6950 <PyErr_Format@plt>
    fb0c:	mov	x21, xzr
    fb10:	b	fbf4 <PyInit__decimal@@Base+0x9140>
    fb14:	ldr	x8, [x20, #8]
    fb18:	ldrb	w9, [x8, #171]
    fb1c:	tbnz	w9, #0, fbc4 <PyInit__decimal@@Base+0x9110>
    fb20:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    fb24:	ldr	x9, [x9, #3936]
    fb28:	ldr	x2, [x8, #24]
    fb2c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    fb30:	add	x1, x1, #0xb93
    fb34:	ldr	x0, [x9]
    fb38:	bl	6950 <PyErr_Format@plt>
    fb3c:	b	fbe0 <PyInit__decimal@@Base+0x912c>
    fb40:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    fb44:	ldr	x22, [x8, #1496]
    fb48:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    fb4c:	add	x0, x0, #0x0
    fb50:	mov	x1, xzr
    fb54:	bl	6780 <PyObject_CallObject@plt>
    fb58:	cbz	x0, fc34 <PyInit__decimal@@Base+0x9180>
    fb5c:	ldp	q1, q0, [x22, #32]
    fb60:	ldr	q2, [x22, #16]
    fb64:	mov	x20, x0
    fb68:	mov	x1, x20
    fb6c:	stp	q1, q0, [x0, #32]
    fb70:	str	q2, [x0, #16]
    fb74:	ldr	w8, [x22, #80]
    fb78:	stp	wzr, wzr, [x0, #44]
    fb7c:	str	w8, [x0, #80]
    fb80:	ldr	x0, [x21, #1400]
    fb84:	bl	65c0 <PyContextVar_Set@plt>
    fb88:	cbz	x0, fc1c <PyInit__decimal@@Base+0x9168>
    fb8c:	ldr	x8, [x0]
    fb90:	subs	x8, x8, #0x1
    fb94:	str	x8, [x0]
    fb98:	b.ne	f9bc <PyInit__decimal@@Base+0x8f08>  // b.any
    fb9c:	bl	6510 <_Py_Dealloc@plt>
    fba0:	b	f9bc <PyInit__decimal@@Base+0x8f08>
    fba4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    fba8:	add	x0, x0, #0xe60
    fbac:	mov	x1, x19
    fbb0:	mov	x2, x20
    fbb4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    fbb8:	mov	x19, x0
    fbbc:	cbnz	x0, fa0c <PyInit__decimal@@Base+0x8f58>
    fbc0:	b	fbf0 <PyInit__decimal@@Base+0x913c>
    fbc4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    fbc8:	add	x0, x0, #0xe60
    fbcc:	mov	x1, x20
    fbd0:	mov	x2, x21
    fbd4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    fbd8:	mov	x20, x0
    fbdc:	cbnz	x0, fa3c <PyInit__decimal@@Base+0x8f88>
    fbe0:	ldr	x8, [x19]
    fbe4:	subs	x8, x8, #0x1
    fbe8:	str	x8, [x19]
    fbec:	b.eq	fc0c <PyInit__decimal@@Base+0x9158>  // b.none
    fbf0:	mov	x21, xzr
    fbf4:	mov	x0, x21
    fbf8:	ldp	x20, x19, [sp, #64]
    fbfc:	ldp	x22, x21, [sp, #48]
    fc00:	ldp	x29, x30, [sp, #32]
    fc04:	add	sp, sp, #0x50
    fc08:	ret
    fc0c:	mov	x0, x19
    fc10:	bl	6510 <_Py_Dealloc@plt>
    fc14:	mov	x21, xzr
    fc18:	b	fbf4 <PyInit__decimal@@Base+0x9140>
    fc1c:	ldr	x8, [x20]
    fc20:	subs	x8, x8, #0x1
    fc24:	str	x8, [x20]
    fc28:	b.ne	fc34 <PyInit__decimal@@Base+0x9180>  // b.any
    fc2c:	mov	x0, x20
    fc30:	bl	6510 <_Py_Dealloc@plt>
    fc34:	mov	x21, xzr
    fc38:	str	xzr, [sp, #16]
    fc3c:	b	fbf4 <PyInit__decimal@@Base+0x9140>
    fc40:	sub	sp, sp, #0x50
    fc44:	stp	x29, x30, [sp, #32]
    fc48:	stp	x22, x21, [sp, #48]
    fc4c:	stp	x20, x19, [sp, #64]
    fc50:	add	x29, sp, #0x20
    fc54:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    fc58:	ldr	x20, [x20, #4008]
    fc5c:	mov	x8, x2
    fc60:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    fc64:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    fc68:	mov	x19, x0
    fc6c:	add	x2, x2, #0xab
    fc70:	add	x3, x3, #0xa60
    fc74:	add	x4, sp, #0x8
    fc78:	add	x5, sp, #0x10
    fc7c:	mov	x0, x1
    fc80:	mov	x1, x8
    fc84:	str	x20, [sp, #16]
    fc88:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    fc8c:	cbz	w0, ff30 <PyInit__decimal@@Base+0x947c>
    fc90:	ldr	x8, [sp, #16]
    fc94:	cmp	x8, x20
    fc98:	b.eq	fcdc <PyInit__decimal@@Base+0x9228>  // b.none
    fc9c:	ldr	x0, [x8, #8]
    fca0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    fca4:	add	x8, x8, #0x0
    fca8:	cmp	x0, x8
    fcac:	b.eq	fd18 <PyInit__decimal@@Base+0x9264>  // b.none
    fcb0:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    fcb4:	add	x1, x1, #0x0
    fcb8:	bl	6900 <PyType_IsSubtype@plt>
    fcbc:	cbnz	w0, fd18 <PyInit__decimal@@Base+0x9264>
    fcc0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
    fcc4:	ldr	x8, [x8, #3936]
    fcc8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    fccc:	add	x1, x1, #0xf61
    fcd0:	ldr	x0, [x8]
    fcd4:	bl	6590 <PyErr_SetString@plt>
    fcd8:	b	ff30 <PyInit__decimal@@Base+0x947c>
    fcdc:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
    fce0:	ldr	x0, [x21, #1400]
    fce4:	sub	x2, x29, #0x8
    fce8:	mov	x1, xzr
    fcec:	bl	6680 <PyContextVar_Get@plt>
    fcf0:	tbnz	w0, #31, ff74 <PyInit__decimal@@Base+0x94c0>
    fcf4:	ldur	x20, [x29, #-8]
    fcf8:	cbz	x20, fe80 <PyInit__decimal@@Base+0x93cc>
    fcfc:	str	x20, [sp, #16]
    fd00:	ldr	x8, [x20]
    fd04:	subs	x8, x8, #0x1
    fd08:	str	x8, [x20]
    fd0c:	b.ne	fd18 <PyInit__decimal@@Base+0x9264>  // b.any
    fd10:	mov	x0, x20
    fd14:	bl	6510 <_Py_Dealloc@plt>
    fd18:	ldr	x0, [x19, #8]
    fd1c:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
    fd20:	add	x21, x21, #0xe60
    fd24:	cmp	x0, x21
    fd28:	b.eq	fd40 <PyInit__decimal@@Base+0x928c>  // b.none
    fd2c:	ldr	x20, [sp, #16]
    fd30:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    fd34:	add	x1, x1, #0xe60
    fd38:	bl	6900 <PyType_IsSubtype@plt>
    fd3c:	cbz	w0, fe24 <PyInit__decimal@@Base+0x9370>
    fd40:	ldr	x8, [x19]
    fd44:	add	x8, x8, #0x1
    fd48:	str	x8, [x19]
    fd4c:	ldr	x20, [sp, #8]
    fd50:	ldr	x0, [x20, #8]
    fd54:	cmp	x0, x21
    fd58:	b.eq	fd70 <PyInit__decimal@@Base+0x92bc>  // b.none
    fd5c:	ldr	x21, [sp, #16]
    fd60:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
    fd64:	add	x1, x1, #0xe60
    fd68:	bl	6900 <PyType_IsSubtype@plt>
    fd6c:	cbz	w0, fe54 <PyInit__decimal@@Base+0x93a0>
    fd70:	ldr	x8, [x20]
    fd74:	add	x8, x8, #0x1
    fd78:	str	x8, [x20]
    fd7c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    fd80:	add	x0, x0, #0xe60
    fd84:	bl	6890 <_PyObject_New@plt>
    fd88:	cbz	x0, fdf4 <PyInit__decimal@@Base+0x9340>
    fd8c:	mov	w8, #0x30                  	// #48
    fd90:	mov	x21, x0
    fd94:	strb	w8, [x0, #24]!
    fd98:	mov	x9, #0xffffffffffffffff    	// #-1
    fd9c:	mov	w10, #0x4                   	// #4
    fda0:	add	x1, x19, #0x18
    fda4:	add	x8, x0, #0x30
    fda8:	add	x2, x20, #0x18
    fdac:	stur	x9, [x0, #-8]
    fdb0:	stp	xzr, xzr, [x0, #8]
    fdb4:	stp	xzr, x10, [x0, #24]
    fdb8:	str	x8, [x0, #40]
    fdbc:	bl	260bc <PyInit__decimal@@Base+0x1f608>
    fdc0:	ldr	x8, [x19]
    fdc4:	subs	x8, x8, #0x1
    fdc8:	str	x8, [x19]
    fdcc:	b.ne	fdd8 <PyInit__decimal@@Base+0x9324>  // b.any
    fdd0:	mov	x0, x19
    fdd4:	bl	6510 <_Py_Dealloc@plt>
    fdd8:	ldr	x8, [x20]
    fddc:	subs	x8, x8, #0x1
    fde0:	str	x8, [x20]
    fde4:	b.ne	ff34 <PyInit__decimal@@Base+0x9480>  // b.any
    fde8:	mov	x0, x20
    fdec:	bl	6510 <_Py_Dealloc@plt>
    fdf0:	b	ff34 <PyInit__decimal@@Base+0x9480>
    fdf4:	ldr	x8, [x19]
    fdf8:	subs	x8, x8, #0x1
    fdfc:	str	x8, [x19]
    fe00:	b.ne	fe0c <PyInit__decimal@@Base+0x9358>  // b.any
    fe04:	mov	x0, x19
    fe08:	bl	6510 <_Py_Dealloc@plt>
    fe0c:	ldr	x8, [x20]
    fe10:	subs	x8, x8, #0x1
    fe14:	str	x8, [x20]
    fe18:	b.ne	ff30 <PyInit__decimal@@Base+0x947c>  // b.any
    fe1c:	mov	x0, x20
    fe20:	b	ff50 <PyInit__decimal@@Base+0x949c>
    fe24:	ldr	x8, [x19, #8]
    fe28:	ldrb	w9, [x8, #171]
    fe2c:	tbnz	w9, #0, fee4 <PyInit__decimal@@Base+0x9430>
    fe30:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    fe34:	ldr	x9, [x9, #3936]
    fe38:	ldr	x2, [x8, #24]
    fe3c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    fe40:	add	x1, x1, #0xb93
    fe44:	ldr	x0, [x9]
    fe48:	bl	6950 <PyErr_Format@plt>
    fe4c:	mov	x21, xzr
    fe50:	b	ff34 <PyInit__decimal@@Base+0x9480>
    fe54:	ldr	x8, [x20, #8]
    fe58:	ldrb	w9, [x8, #171]
    fe5c:	tbnz	w9, #0, ff04 <PyInit__decimal@@Base+0x9450>
    fe60:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
    fe64:	ldr	x9, [x9, #3936]
    fe68:	ldr	x2, [x8, #24]
    fe6c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
    fe70:	add	x1, x1, #0xb93
    fe74:	ldr	x0, [x9]
    fe78:	bl	6950 <PyErr_Format@plt>
    fe7c:	b	ff20 <PyInit__decimal@@Base+0x946c>
    fe80:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    fe84:	ldr	x22, [x8, #1496]
    fe88:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
    fe8c:	add	x0, x0, #0x0
    fe90:	mov	x1, xzr
    fe94:	bl	6780 <PyObject_CallObject@plt>
    fe98:	cbz	x0, ff74 <PyInit__decimal@@Base+0x94c0>
    fe9c:	ldp	q1, q0, [x22, #32]
    fea0:	ldr	q2, [x22, #16]
    fea4:	mov	x20, x0
    fea8:	mov	x1, x20
    feac:	stp	q1, q0, [x0, #32]
    feb0:	str	q2, [x0, #16]
    feb4:	ldr	w8, [x22, #80]
    feb8:	stp	wzr, wzr, [x0, #44]
    febc:	str	w8, [x0, #80]
    fec0:	ldr	x0, [x21, #1400]
    fec4:	bl	65c0 <PyContextVar_Set@plt>
    fec8:	cbz	x0, ff5c <PyInit__decimal@@Base+0x94a8>
    fecc:	ldr	x8, [x0]
    fed0:	subs	x8, x8, #0x1
    fed4:	str	x8, [x0]
    fed8:	b.ne	fcfc <PyInit__decimal@@Base+0x9248>  // b.any
    fedc:	bl	6510 <_Py_Dealloc@plt>
    fee0:	b	fcfc <PyInit__decimal@@Base+0x9248>
    fee4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    fee8:	add	x0, x0, #0xe60
    feec:	mov	x1, x19
    fef0:	mov	x2, x20
    fef4:	bl	abdc <PyInit__decimal@@Base+0x4128>
    fef8:	mov	x19, x0
    fefc:	cbnz	x0, fd4c <PyInit__decimal@@Base+0x9298>
    ff00:	b	ff30 <PyInit__decimal@@Base+0x947c>
    ff04:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
    ff08:	add	x0, x0, #0xe60
    ff0c:	mov	x1, x20
    ff10:	mov	x2, x21
    ff14:	bl	abdc <PyInit__decimal@@Base+0x4128>
    ff18:	mov	x20, x0
    ff1c:	cbnz	x0, fd7c <PyInit__decimal@@Base+0x92c8>
    ff20:	ldr	x8, [x19]
    ff24:	subs	x8, x8, #0x1
    ff28:	str	x8, [x19]
    ff2c:	b.eq	ff4c <PyInit__decimal@@Base+0x9498>  // b.none
    ff30:	mov	x21, xzr
    ff34:	mov	x0, x21
    ff38:	ldp	x20, x19, [sp, #64]
    ff3c:	ldp	x22, x21, [sp, #48]
    ff40:	ldp	x29, x30, [sp, #32]
    ff44:	add	sp, sp, #0x50
    ff48:	ret
    ff4c:	mov	x0, x19
    ff50:	bl	6510 <_Py_Dealloc@plt>
    ff54:	mov	x21, xzr
    ff58:	b	ff34 <PyInit__decimal@@Base+0x9480>
    ff5c:	ldr	x8, [x20]
    ff60:	subs	x8, x8, #0x1
    ff64:	str	x8, [x20]
    ff68:	b.ne	ff74 <PyInit__decimal@@Base+0x94c0>  // b.any
    ff6c:	mov	x0, x20
    ff70:	bl	6510 <_Py_Dealloc@plt>
    ff74:	mov	x21, xzr
    ff78:	str	xzr, [sp, #16]
    ff7c:	b	ff34 <PyInit__decimal@@Base+0x9480>
    ff80:	sub	sp, sp, #0x50
    ff84:	stp	x29, x30, [sp, #32]
    ff88:	stp	x22, x21, [sp, #48]
    ff8c:	stp	x20, x19, [sp, #64]
    ff90:	add	x29, sp, #0x20
    ff94:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
    ff98:	ldr	x20, [x20, #4008]
    ff9c:	mov	x8, x2
    ffa0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
    ffa4:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
    ffa8:	mov	x19, x0
    ffac:	add	x2, x2, #0xab
    ffb0:	add	x3, x3, #0xa78
    ffb4:	add	x4, sp, #0x10
    ffb8:	add	x5, sp, #0x8
    ffbc:	mov	x0, x1
    ffc0:	mov	x1, x8
    ffc4:	str	x20, [sp, #8]
    ffc8:	str	wzr, [sp, #4]
    ffcc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    ffd0:	cbz	w0, 102c4 <PyInit__decimal@@Base+0x9810>
    ffd4:	ldr	x8, [sp, #8]
    ffd8:	cmp	x8, x20
    ffdc:	b.eq	10020 <PyInit__decimal@@Base+0x956c>  // b.none
    ffe0:	ldr	x0, [x8, #8]
    ffe4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
    ffe8:	add	x8, x8, #0x0
    ffec:	cmp	x0, x8
    fff0:	b.eq	1005c <PyInit__decimal@@Base+0x95a8>  // b.none
    fff4:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
    fff8:	add	x1, x1, #0x0
    fffc:	bl	6900 <PyType_IsSubtype@plt>
   10000:	cbnz	w0, 1005c <PyInit__decimal@@Base+0x95a8>
   10004:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   10008:	ldr	x8, [x8, #3936]
   1000c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10010:	add	x1, x1, #0xf61
   10014:	ldr	x0, [x8]
   10018:	bl	6590 <PyErr_SetString@plt>
   1001c:	b	102c4 <PyInit__decimal@@Base+0x9810>
   10020:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   10024:	ldr	x0, [x21, #1400]
   10028:	sub	x2, x29, #0x8
   1002c:	mov	x1, xzr
   10030:	bl	6680 <PyContextVar_Get@plt>
   10034:	tbnz	w0, #31, 102f8 <PyInit__decimal@@Base+0x9844>
   10038:	ldur	x20, [x29, #-8]
   1003c:	cbz	x20, 1020c <PyInit__decimal@@Base+0x9758>
   10040:	str	x20, [sp, #8]
   10044:	ldr	x8, [x20]
   10048:	subs	x8, x8, #0x1
   1004c:	str	x8, [x20]
   10050:	b.ne	1005c <PyInit__decimal@@Base+0x95a8>  // b.any
   10054:	mov	x0, x20
   10058:	bl	6510 <_Py_Dealloc@plt>
   1005c:	ldr	x0, [x19, #8]
   10060:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   10064:	add	x21, x21, #0xe60
   10068:	cmp	x0, x21
   1006c:	b.eq	10084 <PyInit__decimal@@Base+0x95d0>  // b.none
   10070:	ldr	x20, [sp, #8]
   10074:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10078:	add	x1, x1, #0xe60
   1007c:	bl	6900 <PyType_IsSubtype@plt>
   10080:	cbz	w0, 1016c <PyInit__decimal@@Base+0x96b8>
   10084:	ldr	x8, [x19]
   10088:	add	x8, x8, #0x1
   1008c:	str	x8, [x19]
   10090:	ldr	x20, [sp, #16]
   10094:	ldr	x0, [x20, #8]
   10098:	cmp	x0, x21
   1009c:	b.eq	100b4 <PyInit__decimal@@Base+0x9600>  // b.none
   100a0:	ldr	x21, [sp, #8]
   100a4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   100a8:	add	x1, x1, #0xe60
   100ac:	bl	6900 <PyType_IsSubtype@plt>
   100b0:	cbz	w0, 10198 <PyInit__decimal@@Base+0x96e4>
   100b4:	ldr	x8, [x20]
   100b8:	add	x8, x8, #0x1
   100bc:	str	x8, [x20]
   100c0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   100c4:	add	x0, x0, #0xe60
   100c8:	bl	6890 <_PyObject_New@plt>
   100cc:	cbz	x0, 1013c <PyInit__decimal@@Base+0x9688>
   100d0:	mov	w8, #0x30                  	// #48
   100d4:	mov	x21, x0
   100d8:	strb	w8, [x0, #24]!
   100dc:	mov	x9, #0xffffffffffffffff    	// #-1
   100e0:	mov	w10, #0x4                   	// #4
   100e4:	add	x1, x19, #0x18
   100e8:	add	x8, x0, #0x30
   100ec:	add	x2, x20, #0x18
   100f0:	add	x3, sp, #0x4
   100f4:	stur	x9, [x0, #-8]
   100f8:	stp	xzr, xzr, [x0, #8]
   100fc:	stp	xzr, x10, [x0, #24]
   10100:	str	x8, [x0, #40]
   10104:	bl	254dc <PyInit__decimal@@Base+0x1ea28>
   10108:	ldr	x8, [x19]
   1010c:	subs	x8, x8, #0x1
   10110:	str	x8, [x19]
   10114:	b.eq	101c4 <PyInit__decimal@@Base+0x9710>  // b.none
   10118:	ldr	x8, [x20]
   1011c:	subs	x8, x8, #0x1
   10120:	str	x8, [x20]
   10124:	b.eq	101dc <PyInit__decimal@@Base+0x9728>  // b.none
   10128:	ldr	x0, [sp, #8]
   1012c:	ldr	w1, [sp, #4]
   10130:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   10134:	cbnz	w0, 101f4 <PyInit__decimal@@Base+0x9740>
   10138:	b	102c8 <PyInit__decimal@@Base+0x9814>
   1013c:	ldr	x8, [x19]
   10140:	subs	x8, x8, #0x1
   10144:	str	x8, [x19]
   10148:	b.ne	10154 <PyInit__decimal@@Base+0x96a0>  // b.any
   1014c:	mov	x0, x19
   10150:	bl	6510 <_Py_Dealloc@plt>
   10154:	ldr	x8, [x20]
   10158:	subs	x8, x8, #0x1
   1015c:	str	x8, [x20]
   10160:	b.ne	102c4 <PyInit__decimal@@Base+0x9810>  // b.any
   10164:	mov	x0, x20
   10168:	b	102c0 <PyInit__decimal@@Base+0x980c>
   1016c:	ldr	x8, [x19, #8]
   10170:	ldrb	w9, [x8, #171]
   10174:	tbnz	w9, #0, 10270 <PyInit__decimal@@Base+0x97bc>
   10178:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1017c:	ldr	x9, [x9, #3936]
   10180:	ldr	x2, [x8, #24]
   10184:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10188:	add	x1, x1, #0xb93
   1018c:	ldr	x0, [x9]
   10190:	bl	6950 <PyErr_Format@plt>
   10194:	b	102c4 <PyInit__decimal@@Base+0x9810>
   10198:	ldr	x8, [x20, #8]
   1019c:	ldrb	w9, [x8, #171]
   101a0:	tbnz	w9, #0, 10290 <PyInit__decimal@@Base+0x97dc>
   101a4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   101a8:	ldr	x9, [x9, #3936]
   101ac:	ldr	x2, [x8, #24]
   101b0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   101b4:	add	x1, x1, #0xb93
   101b8:	ldr	x0, [x9]
   101bc:	bl	6950 <PyErr_Format@plt>
   101c0:	b	102ac <PyInit__decimal@@Base+0x97f8>
   101c4:	mov	x0, x19
   101c8:	bl	6510 <_Py_Dealloc@plt>
   101cc:	ldr	x8, [x20]
   101d0:	subs	x8, x8, #0x1
   101d4:	str	x8, [x20]
   101d8:	b.ne	10128 <PyInit__decimal@@Base+0x9674>  // b.any
   101dc:	mov	x0, x20
   101e0:	bl	6510 <_Py_Dealloc@plt>
   101e4:	ldr	x0, [sp, #8]
   101e8:	ldr	w1, [sp, #4]
   101ec:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   101f0:	cbz	w0, 102c8 <PyInit__decimal@@Base+0x9814>
   101f4:	ldr	x8, [x21]
   101f8:	subs	x8, x8, #0x1
   101fc:	str	x8, [x21]
   10200:	b.ne	102c4 <PyInit__decimal@@Base+0x9810>  // b.any
   10204:	mov	x0, x21
   10208:	b	102c0 <PyInit__decimal@@Base+0x980c>
   1020c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10210:	ldr	x22, [x8, #1496]
   10214:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   10218:	add	x0, x0, #0x0
   1021c:	mov	x1, xzr
   10220:	bl	6780 <PyObject_CallObject@plt>
   10224:	cbz	x0, 102f8 <PyInit__decimal@@Base+0x9844>
   10228:	ldp	q1, q0, [x22, #32]
   1022c:	ldr	q2, [x22, #16]
   10230:	mov	x20, x0
   10234:	mov	x1, x20
   10238:	stp	q1, q0, [x0, #32]
   1023c:	str	q2, [x0, #16]
   10240:	ldr	w8, [x22, #80]
   10244:	stp	wzr, wzr, [x0, #44]
   10248:	str	w8, [x0, #80]
   1024c:	ldr	x0, [x21, #1400]
   10250:	bl	65c0 <PyContextVar_Set@plt>
   10254:	cbz	x0, 102e0 <PyInit__decimal@@Base+0x982c>
   10258:	ldr	x8, [x0]
   1025c:	subs	x8, x8, #0x1
   10260:	str	x8, [x0]
   10264:	b.ne	10040 <PyInit__decimal@@Base+0x958c>  // b.any
   10268:	bl	6510 <_Py_Dealloc@plt>
   1026c:	b	10040 <PyInit__decimal@@Base+0x958c>
   10270:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10274:	add	x0, x0, #0xe60
   10278:	mov	x1, x19
   1027c:	mov	x2, x20
   10280:	bl	abdc <PyInit__decimal@@Base+0x4128>
   10284:	mov	x19, x0
   10288:	cbnz	x0, 10090 <PyInit__decimal@@Base+0x95dc>
   1028c:	b	102c4 <PyInit__decimal@@Base+0x9810>
   10290:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10294:	add	x0, x0, #0xe60
   10298:	mov	x1, x20
   1029c:	mov	x2, x21
   102a0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   102a4:	mov	x20, x0
   102a8:	cbnz	x0, 100c0 <PyInit__decimal@@Base+0x960c>
   102ac:	ldr	x8, [x19]
   102b0:	subs	x8, x8, #0x1
   102b4:	str	x8, [x19]
   102b8:	b.ne	102c4 <PyInit__decimal@@Base+0x9810>  // b.any
   102bc:	mov	x0, x19
   102c0:	bl	6510 <_Py_Dealloc@plt>
   102c4:	mov	x21, xzr
   102c8:	mov	x0, x21
   102cc:	ldp	x20, x19, [sp, #64]
   102d0:	ldp	x22, x21, [sp, #48]
   102d4:	ldp	x29, x30, [sp, #32]
   102d8:	add	sp, sp, #0x50
   102dc:	ret
   102e0:	ldr	x8, [x20]
   102e4:	subs	x8, x8, #0x1
   102e8:	str	x8, [x20]
   102ec:	b.ne	102f8 <PyInit__decimal@@Base+0x9844>  // b.any
   102f0:	mov	x0, x20
   102f4:	bl	6510 <_Py_Dealloc@plt>
   102f8:	mov	x21, xzr
   102fc:	str	xzr, [sp, #8]
   10300:	b	102c8 <PyInit__decimal@@Base+0x9814>
   10304:	sub	sp, sp, #0x50
   10308:	stp	x29, x30, [sp, #32]
   1030c:	stp	x22, x21, [sp, #48]
   10310:	stp	x20, x19, [sp, #64]
   10314:	add	x29, sp, #0x20
   10318:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   1031c:	ldr	x20, [x20, #4008]
   10320:	mov	x8, x2
   10324:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   10328:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   1032c:	mov	x19, x0
   10330:	add	x2, x2, #0xab
   10334:	add	x3, x3, #0xa90
   10338:	add	x4, sp, #0x10
   1033c:	add	x5, sp, #0x8
   10340:	mov	x0, x1
   10344:	mov	x1, x8
   10348:	str	x20, [sp, #8]
   1034c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10350:	cbz	w0, 105c8 <PyInit__decimal@@Base+0x9b14>
   10354:	ldr	x8, [sp, #8]
   10358:	cmp	x8, x20
   1035c:	b.eq	103a0 <PyInit__decimal@@Base+0x98ec>  // b.none
   10360:	ldr	x0, [x8, #8]
   10364:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10368:	add	x8, x8, #0x0
   1036c:	cmp	x0, x8
   10370:	b.eq	103dc <PyInit__decimal@@Base+0x9928>  // b.none
   10374:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   10378:	add	x1, x1, #0x0
   1037c:	bl	6900 <PyType_IsSubtype@plt>
   10380:	cbnz	w0, 103dc <PyInit__decimal@@Base+0x9928>
   10384:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   10388:	ldr	x8, [x8, #3936]
   1038c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10390:	add	x1, x1, #0xf61
   10394:	ldr	x0, [x8]
   10398:	bl	6590 <PyErr_SetString@plt>
   1039c:	b	105c8 <PyInit__decimal@@Base+0x9b14>
   103a0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   103a4:	ldr	x0, [x21, #1400]
   103a8:	sub	x2, x29, #0x8
   103ac:	mov	x1, xzr
   103b0:	bl	6680 <PyContextVar_Get@plt>
   103b4:	tbnz	w0, #31, 105fc <PyInit__decimal@@Base+0x9b48>
   103b8:	ldur	x20, [x29, #-8]
   103bc:	cbz	x20, 10510 <PyInit__decimal@@Base+0x9a5c>
   103c0:	str	x20, [sp, #8]
   103c4:	ldr	x8, [x20]
   103c8:	subs	x8, x8, #0x1
   103cc:	str	x8, [x20]
   103d0:	b.ne	103dc <PyInit__decimal@@Base+0x9928>  // b.any
   103d4:	mov	x0, x20
   103d8:	bl	6510 <_Py_Dealloc@plt>
   103dc:	ldr	x0, [x19, #8]
   103e0:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   103e4:	add	x21, x21, #0xe60
   103e8:	cmp	x0, x21
   103ec:	b.eq	10404 <PyInit__decimal@@Base+0x9950>  // b.none
   103f0:	ldr	x20, [sp, #8]
   103f4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   103f8:	add	x1, x1, #0xe60
   103fc:	bl	6900 <PyType_IsSubtype@plt>
   10400:	cbz	w0, 104b8 <PyInit__decimal@@Base+0x9a04>
   10404:	ldr	x8, [x19]
   10408:	add	x8, x8, #0x1
   1040c:	str	x8, [x19]
   10410:	ldr	x20, [sp, #16]
   10414:	ldr	x0, [x20, #8]
   10418:	cmp	x0, x21
   1041c:	b.eq	10434 <PyInit__decimal@@Base+0x9980>  // b.none
   10420:	ldr	x21, [sp, #8]
   10424:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10428:	add	x1, x1, #0xe60
   1042c:	bl	6900 <PyType_IsSubtype@plt>
   10430:	cbz	w0, 104e4 <PyInit__decimal@@Base+0x9a30>
   10434:	ldr	x8, [x20]
   10438:	add	x8, x8, #0x1
   1043c:	str	x8, [x20]
   10440:	add	x0, x19, #0x18
   10444:	add	x1, x20, #0x18
   10448:	bl	38628 <PyInit__decimal@@Base+0x31b74>
   1044c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   10450:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   10454:	ldr	x8, [x8, #4024]
   10458:	ldr	x9, [x9, #3976]
   1045c:	cmp	w0, #0x0
   10460:	csel	x21, x9, x8, eq  // eq = none
   10464:	ldr	x8, [x21]
   10468:	add	x8, x8, #0x1
   1046c:	str	x8, [x21]
   10470:	ldr	x8, [x19]
   10474:	subs	x8, x8, #0x1
   10478:	str	x8, [x19]
   1047c:	b.eq	10494 <PyInit__decimal@@Base+0x99e0>  // b.none
   10480:	ldr	x8, [x20]
   10484:	subs	x8, x8, #0x1
   10488:	str	x8, [x20]
   1048c:	b.ne	105cc <PyInit__decimal@@Base+0x9b18>  // b.any
   10490:	b	104ac <PyInit__decimal@@Base+0x99f8>
   10494:	mov	x0, x19
   10498:	bl	6510 <_Py_Dealloc@plt>
   1049c:	ldr	x8, [x20]
   104a0:	subs	x8, x8, #0x1
   104a4:	str	x8, [x20]
   104a8:	b.ne	105cc <PyInit__decimal@@Base+0x9b18>  // b.any
   104ac:	mov	x0, x20
   104b0:	bl	6510 <_Py_Dealloc@plt>
   104b4:	b	105cc <PyInit__decimal@@Base+0x9b18>
   104b8:	ldr	x8, [x19, #8]
   104bc:	ldrb	w9, [x8, #171]
   104c0:	tbnz	w9, #0, 10574 <PyInit__decimal@@Base+0x9ac0>
   104c4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   104c8:	ldr	x9, [x9, #3936]
   104cc:	ldr	x2, [x8, #24]
   104d0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   104d4:	add	x1, x1, #0xb93
   104d8:	ldr	x0, [x9]
   104dc:	bl	6950 <PyErr_Format@plt>
   104e0:	b	105c8 <PyInit__decimal@@Base+0x9b14>
   104e4:	ldr	x8, [x20, #8]
   104e8:	ldrb	w9, [x8, #171]
   104ec:	tbnz	w9, #0, 10594 <PyInit__decimal@@Base+0x9ae0>
   104f0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   104f4:	ldr	x9, [x9, #3936]
   104f8:	ldr	x2, [x8, #24]
   104fc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10500:	add	x1, x1, #0xb93
   10504:	ldr	x0, [x9]
   10508:	bl	6950 <PyErr_Format@plt>
   1050c:	b	105b0 <PyInit__decimal@@Base+0x9afc>
   10510:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10514:	ldr	x22, [x8, #1496]
   10518:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1051c:	add	x0, x0, #0x0
   10520:	mov	x1, xzr
   10524:	bl	6780 <PyObject_CallObject@plt>
   10528:	cbz	x0, 105fc <PyInit__decimal@@Base+0x9b48>
   1052c:	ldp	q1, q0, [x22, #32]
   10530:	ldr	q2, [x22, #16]
   10534:	mov	x20, x0
   10538:	mov	x1, x20
   1053c:	stp	q1, q0, [x0, #32]
   10540:	str	q2, [x0, #16]
   10544:	ldr	w8, [x22, #80]
   10548:	stp	wzr, wzr, [x0, #44]
   1054c:	str	w8, [x0, #80]
   10550:	ldr	x0, [x21, #1400]
   10554:	bl	65c0 <PyContextVar_Set@plt>
   10558:	cbz	x0, 105e4 <PyInit__decimal@@Base+0x9b30>
   1055c:	ldr	x8, [x0]
   10560:	subs	x8, x8, #0x1
   10564:	str	x8, [x0]
   10568:	b.ne	103c0 <PyInit__decimal@@Base+0x990c>  // b.any
   1056c:	bl	6510 <_Py_Dealloc@plt>
   10570:	b	103c0 <PyInit__decimal@@Base+0x990c>
   10574:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10578:	add	x0, x0, #0xe60
   1057c:	mov	x1, x19
   10580:	mov	x2, x20
   10584:	bl	abdc <PyInit__decimal@@Base+0x4128>
   10588:	mov	x19, x0
   1058c:	cbnz	x0, 10410 <PyInit__decimal@@Base+0x995c>
   10590:	b	105c8 <PyInit__decimal@@Base+0x9b14>
   10594:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10598:	add	x0, x0, #0xe60
   1059c:	mov	x1, x20
   105a0:	mov	x2, x21
   105a4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   105a8:	mov	x20, x0
   105ac:	cbnz	x0, 10440 <PyInit__decimal@@Base+0x998c>
   105b0:	ldr	x8, [x19]
   105b4:	subs	x8, x8, #0x1
   105b8:	str	x8, [x19]
   105bc:	b.ne	105c8 <PyInit__decimal@@Base+0x9b14>  // b.any
   105c0:	mov	x0, x19
   105c4:	bl	6510 <_Py_Dealloc@plt>
   105c8:	mov	x21, xzr
   105cc:	mov	x0, x21
   105d0:	ldp	x20, x19, [sp, #64]
   105d4:	ldp	x22, x21, [sp, #48]
   105d8:	ldp	x29, x30, [sp, #32]
   105dc:	add	sp, sp, #0x50
   105e0:	ret
   105e4:	ldr	x8, [x20]
   105e8:	subs	x8, x8, #0x1
   105ec:	str	x8, [x20]
   105f0:	b.ne	105fc <PyInit__decimal@@Base+0x9b48>  // b.any
   105f4:	mov	x0, x20
   105f8:	bl	6510 <_Py_Dealloc@plt>
   105fc:	mov	x21, xzr
   10600:	str	xzr, [sp, #8]
   10604:	b	105cc <PyInit__decimal@@Base+0x9b18>
   10608:	sub	sp, sp, #0x50
   1060c:	stp	x29, x30, [sp, #32]
   10610:	stp	x22, x21, [sp, #48]
   10614:	stp	x20, x19, [sp, #64]
   10618:	add	x29, sp, #0x20
   1061c:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   10620:	ldr	x20, [x20, #4008]
   10624:	mov	x8, x2
   10628:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   1062c:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   10630:	mov	x19, x0
   10634:	add	x2, x2, #0xab
   10638:	add	x3, x3, #0xaa8
   1063c:	add	x4, sp, #0x10
   10640:	add	x5, sp, #0x8
   10644:	mov	x0, x1
   10648:	mov	x1, x8
   1064c:	str	x20, [sp, #8]
   10650:	str	wzr, [sp, #4]
   10654:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10658:	cbz	w0, 10954 <PyInit__decimal@@Base+0x9ea0>
   1065c:	ldr	x8, [sp, #8]
   10660:	cmp	x8, x20
   10664:	b.eq	106a8 <PyInit__decimal@@Base+0x9bf4>  // b.none
   10668:	ldr	x0, [x8, #8]
   1066c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10670:	add	x8, x8, #0x0
   10674:	cmp	x0, x8
   10678:	b.eq	106e4 <PyInit__decimal@@Base+0x9c30>  // b.none
   1067c:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   10680:	add	x1, x1, #0x0
   10684:	bl	6900 <PyType_IsSubtype@plt>
   10688:	cbnz	w0, 106e4 <PyInit__decimal@@Base+0x9c30>
   1068c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   10690:	ldr	x8, [x8, #3936]
   10694:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10698:	add	x1, x1, #0xf61
   1069c:	ldr	x0, [x8]
   106a0:	bl	6590 <PyErr_SetString@plt>
   106a4:	b	10954 <PyInit__decimal@@Base+0x9ea0>
   106a8:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   106ac:	ldr	x0, [x21, #1400]
   106b0:	sub	x2, x29, #0x8
   106b4:	mov	x1, xzr
   106b8:	bl	6680 <PyContextVar_Get@plt>
   106bc:	tbnz	w0, #31, 10988 <PyInit__decimal@@Base+0x9ed4>
   106c0:	ldur	x20, [x29, #-8]
   106c4:	cbz	x20, 1089c <PyInit__decimal@@Base+0x9de8>
   106c8:	str	x20, [sp, #8]
   106cc:	ldr	x8, [x20]
   106d0:	subs	x8, x8, #0x1
   106d4:	str	x8, [x20]
   106d8:	b.ne	106e4 <PyInit__decimal@@Base+0x9c30>  // b.any
   106dc:	mov	x0, x20
   106e0:	bl	6510 <_Py_Dealloc@plt>
   106e4:	ldr	x0, [x19, #8]
   106e8:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   106ec:	add	x21, x21, #0xe60
   106f0:	cmp	x0, x21
   106f4:	b.eq	1070c <PyInit__decimal@@Base+0x9c58>  // b.none
   106f8:	ldr	x20, [sp, #8]
   106fc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10700:	add	x1, x1, #0xe60
   10704:	bl	6900 <PyType_IsSubtype@plt>
   10708:	cbz	w0, 107fc <PyInit__decimal@@Base+0x9d48>
   1070c:	ldr	x8, [x19]
   10710:	add	x8, x8, #0x1
   10714:	str	x8, [x19]
   10718:	ldr	x20, [sp, #16]
   1071c:	ldr	x0, [x20, #8]
   10720:	cmp	x0, x21
   10724:	b.eq	1073c <PyInit__decimal@@Base+0x9c88>  // b.none
   10728:	ldr	x21, [sp, #8]
   1072c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10730:	add	x1, x1, #0xe60
   10734:	bl	6900 <PyType_IsSubtype@plt>
   10738:	cbz	w0, 10828 <PyInit__decimal@@Base+0x9d74>
   1073c:	ldr	x8, [x20]
   10740:	add	x8, x8, #0x1
   10744:	str	x8, [x20]
   10748:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1074c:	add	x0, x0, #0xe60
   10750:	bl	6890 <_PyObject_New@plt>
   10754:	cbz	x0, 107cc <PyInit__decimal@@Base+0x9d18>
   10758:	mov	w8, #0x30                  	// #48
   1075c:	mov	x21, x0
   10760:	strb	w8, [x0, #24]!
   10764:	mov	x9, #0xffffffffffffffff    	// #-1
   10768:	mov	w10, #0x4                   	// #4
   1076c:	add	x8, x0, #0x30
   10770:	stur	x9, [x0, #-8]
   10774:	stp	xzr, xzr, [x0, #8]
   10778:	stp	xzr, x10, [x0, #24]
   1077c:	str	x8, [x0, #40]
   10780:	ldr	x8, [sp, #8]
   10784:	add	x1, x19, #0x18
   10788:	add	x2, x20, #0x18
   1078c:	add	x4, sp, #0x4
   10790:	add	x3, x8, #0x10
   10794:	bl	26a58 <PyInit__decimal@@Base+0x1ffa4>
   10798:	ldr	x8, [x19]
   1079c:	subs	x8, x8, #0x1
   107a0:	str	x8, [x19]
   107a4:	b.eq	10854 <PyInit__decimal@@Base+0x9da0>  // b.none
   107a8:	ldr	x8, [x20]
   107ac:	subs	x8, x8, #0x1
   107b0:	str	x8, [x20]
   107b4:	b.eq	1086c <PyInit__decimal@@Base+0x9db8>  // b.none
   107b8:	ldr	x0, [sp, #8]
   107bc:	ldr	w1, [sp, #4]
   107c0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   107c4:	cbnz	w0, 10884 <PyInit__decimal@@Base+0x9dd0>
   107c8:	b	10958 <PyInit__decimal@@Base+0x9ea4>
   107cc:	ldr	x8, [x19]
   107d0:	subs	x8, x8, #0x1
   107d4:	str	x8, [x19]
   107d8:	b.ne	107e4 <PyInit__decimal@@Base+0x9d30>  // b.any
   107dc:	mov	x0, x19
   107e0:	bl	6510 <_Py_Dealloc@plt>
   107e4:	ldr	x8, [x20]
   107e8:	subs	x8, x8, #0x1
   107ec:	str	x8, [x20]
   107f0:	b.ne	10954 <PyInit__decimal@@Base+0x9ea0>  // b.any
   107f4:	mov	x0, x20
   107f8:	b	10950 <PyInit__decimal@@Base+0x9e9c>
   107fc:	ldr	x8, [x19, #8]
   10800:	ldrb	w9, [x8, #171]
   10804:	tbnz	w9, #0, 10900 <PyInit__decimal@@Base+0x9e4c>
   10808:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1080c:	ldr	x9, [x9, #3936]
   10810:	ldr	x2, [x8, #24]
   10814:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10818:	add	x1, x1, #0xb93
   1081c:	ldr	x0, [x9]
   10820:	bl	6950 <PyErr_Format@plt>
   10824:	b	10954 <PyInit__decimal@@Base+0x9ea0>
   10828:	ldr	x8, [x20, #8]
   1082c:	ldrb	w9, [x8, #171]
   10830:	tbnz	w9, #0, 10920 <PyInit__decimal@@Base+0x9e6c>
   10834:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   10838:	ldr	x9, [x9, #3936]
   1083c:	ldr	x2, [x8, #24]
   10840:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10844:	add	x1, x1, #0xb93
   10848:	ldr	x0, [x9]
   1084c:	bl	6950 <PyErr_Format@plt>
   10850:	b	1093c <PyInit__decimal@@Base+0x9e88>
   10854:	mov	x0, x19
   10858:	bl	6510 <_Py_Dealloc@plt>
   1085c:	ldr	x8, [x20]
   10860:	subs	x8, x8, #0x1
   10864:	str	x8, [x20]
   10868:	b.ne	107b8 <PyInit__decimal@@Base+0x9d04>  // b.any
   1086c:	mov	x0, x20
   10870:	bl	6510 <_Py_Dealloc@plt>
   10874:	ldr	x0, [sp, #8]
   10878:	ldr	w1, [sp, #4]
   1087c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   10880:	cbz	w0, 10958 <PyInit__decimal@@Base+0x9ea4>
   10884:	ldr	x8, [x21]
   10888:	subs	x8, x8, #0x1
   1088c:	str	x8, [x21]
   10890:	b.ne	10954 <PyInit__decimal@@Base+0x9ea0>  // b.any
   10894:	mov	x0, x21
   10898:	b	10950 <PyInit__decimal@@Base+0x9e9c>
   1089c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   108a0:	ldr	x22, [x8, #1496]
   108a4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   108a8:	add	x0, x0, #0x0
   108ac:	mov	x1, xzr
   108b0:	bl	6780 <PyObject_CallObject@plt>
   108b4:	cbz	x0, 10988 <PyInit__decimal@@Base+0x9ed4>
   108b8:	ldp	q1, q0, [x22, #32]
   108bc:	ldr	q2, [x22, #16]
   108c0:	mov	x20, x0
   108c4:	mov	x1, x20
   108c8:	stp	q1, q0, [x0, #32]
   108cc:	str	q2, [x0, #16]
   108d0:	ldr	w8, [x22, #80]
   108d4:	stp	wzr, wzr, [x0, #44]
   108d8:	str	w8, [x0, #80]
   108dc:	ldr	x0, [x21, #1400]
   108e0:	bl	65c0 <PyContextVar_Set@plt>
   108e4:	cbz	x0, 10970 <PyInit__decimal@@Base+0x9ebc>
   108e8:	ldr	x8, [x0]
   108ec:	subs	x8, x8, #0x1
   108f0:	str	x8, [x0]
   108f4:	b.ne	106c8 <PyInit__decimal@@Base+0x9c14>  // b.any
   108f8:	bl	6510 <_Py_Dealloc@plt>
   108fc:	b	106c8 <PyInit__decimal@@Base+0x9c14>
   10900:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10904:	add	x0, x0, #0xe60
   10908:	mov	x1, x19
   1090c:	mov	x2, x20
   10910:	bl	abdc <PyInit__decimal@@Base+0x4128>
   10914:	mov	x19, x0
   10918:	cbnz	x0, 10718 <PyInit__decimal@@Base+0x9c64>
   1091c:	b	10954 <PyInit__decimal@@Base+0x9ea0>
   10920:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10924:	add	x0, x0, #0xe60
   10928:	mov	x1, x20
   1092c:	mov	x2, x21
   10930:	bl	abdc <PyInit__decimal@@Base+0x4128>
   10934:	mov	x20, x0
   10938:	cbnz	x0, 10748 <PyInit__decimal@@Base+0x9c94>
   1093c:	ldr	x8, [x19]
   10940:	subs	x8, x8, #0x1
   10944:	str	x8, [x19]
   10948:	b.ne	10954 <PyInit__decimal@@Base+0x9ea0>  // b.any
   1094c:	mov	x0, x19
   10950:	bl	6510 <_Py_Dealloc@plt>
   10954:	mov	x21, xzr
   10958:	mov	x0, x21
   1095c:	ldp	x20, x19, [sp, #64]
   10960:	ldp	x22, x21, [sp, #48]
   10964:	ldp	x29, x30, [sp, #32]
   10968:	add	sp, sp, #0x50
   1096c:	ret
   10970:	ldr	x8, [x20]
   10974:	subs	x8, x8, #0x1
   10978:	str	x8, [x20]
   1097c:	b.ne	10988 <PyInit__decimal@@Base+0x9ed4>  // b.any
   10980:	mov	x0, x20
   10984:	bl	6510 <_Py_Dealloc@plt>
   10988:	mov	x21, xzr
   1098c:	str	xzr, [sp, #8]
   10990:	b	10958 <PyInit__decimal@@Base+0x9ea4>
   10994:	sub	sp, sp, #0x50
   10998:	stp	x29, x30, [sp, #32]
   1099c:	stp	x22, x21, [sp, #48]
   109a0:	stp	x20, x19, [sp, #64]
   109a4:	add	x29, sp, #0x20
   109a8:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   109ac:	ldr	x20, [x20, #4008]
   109b0:	mov	x8, x2
   109b4:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   109b8:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   109bc:	mov	x19, x0
   109c0:	add	x2, x2, #0xab
   109c4:	add	x3, x3, #0xac0
   109c8:	add	x4, sp, #0x10
   109cc:	add	x5, sp, #0x8
   109d0:	mov	x0, x1
   109d4:	mov	x1, x8
   109d8:	str	x20, [sp, #8]
   109dc:	str	wzr, [sp, #4]
   109e0:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   109e4:	cbz	w0, 10ce0 <PyInit__decimal@@Base+0xa22c>
   109e8:	ldr	x8, [sp, #8]
   109ec:	cmp	x8, x20
   109f0:	b.eq	10a34 <PyInit__decimal@@Base+0x9f80>  // b.none
   109f4:	ldr	x0, [x8, #8]
   109f8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   109fc:	add	x8, x8, #0x0
   10a00:	cmp	x0, x8
   10a04:	b.eq	10a70 <PyInit__decimal@@Base+0x9fbc>  // b.none
   10a08:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   10a0c:	add	x1, x1, #0x0
   10a10:	bl	6900 <PyType_IsSubtype@plt>
   10a14:	cbnz	w0, 10a70 <PyInit__decimal@@Base+0x9fbc>
   10a18:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   10a1c:	ldr	x8, [x8, #3936]
   10a20:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10a24:	add	x1, x1, #0xf61
   10a28:	ldr	x0, [x8]
   10a2c:	bl	6590 <PyErr_SetString@plt>
   10a30:	b	10ce0 <PyInit__decimal@@Base+0xa22c>
   10a34:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   10a38:	ldr	x0, [x21, #1400]
   10a3c:	sub	x2, x29, #0x8
   10a40:	mov	x1, xzr
   10a44:	bl	6680 <PyContextVar_Get@plt>
   10a48:	tbnz	w0, #31, 10d14 <PyInit__decimal@@Base+0xa260>
   10a4c:	ldur	x20, [x29, #-8]
   10a50:	cbz	x20, 10c28 <PyInit__decimal@@Base+0xa174>
   10a54:	str	x20, [sp, #8]
   10a58:	ldr	x8, [x20]
   10a5c:	subs	x8, x8, #0x1
   10a60:	str	x8, [x20]
   10a64:	b.ne	10a70 <PyInit__decimal@@Base+0x9fbc>  // b.any
   10a68:	mov	x0, x20
   10a6c:	bl	6510 <_Py_Dealloc@plt>
   10a70:	ldr	x0, [x19, #8]
   10a74:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   10a78:	add	x21, x21, #0xe60
   10a7c:	cmp	x0, x21
   10a80:	b.eq	10a98 <PyInit__decimal@@Base+0x9fe4>  // b.none
   10a84:	ldr	x20, [sp, #8]
   10a88:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10a8c:	add	x1, x1, #0xe60
   10a90:	bl	6900 <PyType_IsSubtype@plt>
   10a94:	cbz	w0, 10b88 <PyInit__decimal@@Base+0xa0d4>
   10a98:	ldr	x8, [x19]
   10a9c:	add	x8, x8, #0x1
   10aa0:	str	x8, [x19]
   10aa4:	ldr	x20, [sp, #16]
   10aa8:	ldr	x0, [x20, #8]
   10aac:	cmp	x0, x21
   10ab0:	b.eq	10ac8 <PyInit__decimal@@Base+0xa014>  // b.none
   10ab4:	ldr	x21, [sp, #8]
   10ab8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10abc:	add	x1, x1, #0xe60
   10ac0:	bl	6900 <PyType_IsSubtype@plt>
   10ac4:	cbz	w0, 10bb4 <PyInit__decimal@@Base+0xa100>
   10ac8:	ldr	x8, [x20]
   10acc:	add	x8, x8, #0x1
   10ad0:	str	x8, [x20]
   10ad4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10ad8:	add	x0, x0, #0xe60
   10adc:	bl	6890 <_PyObject_New@plt>
   10ae0:	cbz	x0, 10b58 <PyInit__decimal@@Base+0xa0a4>
   10ae4:	mov	w8, #0x30                  	// #48
   10ae8:	mov	x21, x0
   10aec:	strb	w8, [x0, #24]!
   10af0:	mov	x9, #0xffffffffffffffff    	// #-1
   10af4:	mov	w10, #0x4                   	// #4
   10af8:	add	x8, x0, #0x30
   10afc:	stur	x9, [x0, #-8]
   10b00:	stp	xzr, xzr, [x0, #8]
   10b04:	stp	xzr, x10, [x0, #24]
   10b08:	str	x8, [x0, #40]
   10b0c:	ldr	x8, [sp, #8]
   10b10:	add	x1, x19, #0x18
   10b14:	add	x2, x20, #0x18
   10b18:	add	x4, sp, #0x4
   10b1c:	add	x3, x8, #0x10
   10b20:	bl	27e2c <PyInit__decimal@@Base+0x21378>
   10b24:	ldr	x8, [x19]
   10b28:	subs	x8, x8, #0x1
   10b2c:	str	x8, [x19]
   10b30:	b.eq	10be0 <PyInit__decimal@@Base+0xa12c>  // b.none
   10b34:	ldr	x8, [x20]
   10b38:	subs	x8, x8, #0x1
   10b3c:	str	x8, [x20]
   10b40:	b.eq	10bf8 <PyInit__decimal@@Base+0xa144>  // b.none
   10b44:	ldr	x0, [sp, #8]
   10b48:	ldr	w1, [sp, #4]
   10b4c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   10b50:	cbnz	w0, 10c10 <PyInit__decimal@@Base+0xa15c>
   10b54:	b	10ce4 <PyInit__decimal@@Base+0xa230>
   10b58:	ldr	x8, [x19]
   10b5c:	subs	x8, x8, #0x1
   10b60:	str	x8, [x19]
   10b64:	b.ne	10b70 <PyInit__decimal@@Base+0xa0bc>  // b.any
   10b68:	mov	x0, x19
   10b6c:	bl	6510 <_Py_Dealloc@plt>
   10b70:	ldr	x8, [x20]
   10b74:	subs	x8, x8, #0x1
   10b78:	str	x8, [x20]
   10b7c:	b.ne	10ce0 <PyInit__decimal@@Base+0xa22c>  // b.any
   10b80:	mov	x0, x20
   10b84:	b	10cdc <PyInit__decimal@@Base+0xa228>
   10b88:	ldr	x8, [x19, #8]
   10b8c:	ldrb	w9, [x8, #171]
   10b90:	tbnz	w9, #0, 10c8c <PyInit__decimal@@Base+0xa1d8>
   10b94:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   10b98:	ldr	x9, [x9, #3936]
   10b9c:	ldr	x2, [x8, #24]
   10ba0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10ba4:	add	x1, x1, #0xb93
   10ba8:	ldr	x0, [x9]
   10bac:	bl	6950 <PyErr_Format@plt>
   10bb0:	b	10ce0 <PyInit__decimal@@Base+0xa22c>
   10bb4:	ldr	x8, [x20, #8]
   10bb8:	ldrb	w9, [x8, #171]
   10bbc:	tbnz	w9, #0, 10cac <PyInit__decimal@@Base+0xa1f8>
   10bc0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   10bc4:	ldr	x9, [x9, #3936]
   10bc8:	ldr	x2, [x8, #24]
   10bcc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10bd0:	add	x1, x1, #0xb93
   10bd4:	ldr	x0, [x9]
   10bd8:	bl	6950 <PyErr_Format@plt>
   10bdc:	b	10cc8 <PyInit__decimal@@Base+0xa214>
   10be0:	mov	x0, x19
   10be4:	bl	6510 <_Py_Dealloc@plt>
   10be8:	ldr	x8, [x20]
   10bec:	subs	x8, x8, #0x1
   10bf0:	str	x8, [x20]
   10bf4:	b.ne	10b44 <PyInit__decimal@@Base+0xa090>  // b.any
   10bf8:	mov	x0, x20
   10bfc:	bl	6510 <_Py_Dealloc@plt>
   10c00:	ldr	x0, [sp, #8]
   10c04:	ldr	w1, [sp, #4]
   10c08:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   10c0c:	cbz	w0, 10ce4 <PyInit__decimal@@Base+0xa230>
   10c10:	ldr	x8, [x21]
   10c14:	subs	x8, x8, #0x1
   10c18:	str	x8, [x21]
   10c1c:	b.ne	10ce0 <PyInit__decimal@@Base+0xa22c>  // b.any
   10c20:	mov	x0, x21
   10c24:	b	10cdc <PyInit__decimal@@Base+0xa228>
   10c28:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10c2c:	ldr	x22, [x8, #1496]
   10c30:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   10c34:	add	x0, x0, #0x0
   10c38:	mov	x1, xzr
   10c3c:	bl	6780 <PyObject_CallObject@plt>
   10c40:	cbz	x0, 10d14 <PyInit__decimal@@Base+0xa260>
   10c44:	ldp	q1, q0, [x22, #32]
   10c48:	ldr	q2, [x22, #16]
   10c4c:	mov	x20, x0
   10c50:	mov	x1, x20
   10c54:	stp	q1, q0, [x0, #32]
   10c58:	str	q2, [x0, #16]
   10c5c:	ldr	w8, [x22, #80]
   10c60:	stp	wzr, wzr, [x0, #44]
   10c64:	str	w8, [x0, #80]
   10c68:	ldr	x0, [x21, #1400]
   10c6c:	bl	65c0 <PyContextVar_Set@plt>
   10c70:	cbz	x0, 10cfc <PyInit__decimal@@Base+0xa248>
   10c74:	ldr	x8, [x0]
   10c78:	subs	x8, x8, #0x1
   10c7c:	str	x8, [x0]
   10c80:	b.ne	10a54 <PyInit__decimal@@Base+0x9fa0>  // b.any
   10c84:	bl	6510 <_Py_Dealloc@plt>
   10c88:	b	10a54 <PyInit__decimal@@Base+0x9fa0>
   10c8c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10c90:	add	x0, x0, #0xe60
   10c94:	mov	x1, x19
   10c98:	mov	x2, x20
   10c9c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   10ca0:	mov	x19, x0
   10ca4:	cbnz	x0, 10aa4 <PyInit__decimal@@Base+0x9ff0>
   10ca8:	b	10ce0 <PyInit__decimal@@Base+0xa22c>
   10cac:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10cb0:	add	x0, x0, #0xe60
   10cb4:	mov	x1, x20
   10cb8:	mov	x2, x21
   10cbc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   10cc0:	mov	x20, x0
   10cc4:	cbnz	x0, 10ad4 <PyInit__decimal@@Base+0xa020>
   10cc8:	ldr	x8, [x19]
   10ccc:	subs	x8, x8, #0x1
   10cd0:	str	x8, [x19]
   10cd4:	b.ne	10ce0 <PyInit__decimal@@Base+0xa22c>  // b.any
   10cd8:	mov	x0, x19
   10cdc:	bl	6510 <_Py_Dealloc@plt>
   10ce0:	mov	x21, xzr
   10ce4:	mov	x0, x21
   10ce8:	ldp	x20, x19, [sp, #64]
   10cec:	ldp	x22, x21, [sp, #48]
   10cf0:	ldp	x29, x30, [sp, #32]
   10cf4:	add	sp, sp, #0x50
   10cf8:	ret
   10cfc:	ldr	x8, [x20]
   10d00:	subs	x8, x8, #0x1
   10d04:	str	x8, [x20]
   10d08:	b.ne	10d14 <PyInit__decimal@@Base+0xa260>  // b.any
   10d0c:	mov	x0, x20
   10d10:	bl	6510 <_Py_Dealloc@plt>
   10d14:	mov	x21, xzr
   10d18:	str	xzr, [sp, #8]
   10d1c:	b	10ce4 <PyInit__decimal@@Base+0xa230>
   10d20:	sub	sp, sp, #0x50
   10d24:	stp	x29, x30, [sp, #32]
   10d28:	stp	x22, x21, [sp, #48]
   10d2c:	stp	x20, x19, [sp, #64]
   10d30:	add	x29, sp, #0x20
   10d34:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   10d38:	ldr	x20, [x20, #4008]
   10d3c:	mov	x8, x2
   10d40:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   10d44:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   10d48:	mov	x19, x0
   10d4c:	add	x2, x2, #0xab
   10d50:	add	x3, x3, #0xad8
   10d54:	add	x4, sp, #0x10
   10d58:	add	x5, sp, #0x8
   10d5c:	mov	x0, x1
   10d60:	mov	x1, x8
   10d64:	str	x20, [sp, #8]
   10d68:	str	wzr, [sp, #4]
   10d6c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10d70:	cbz	w0, 1106c <PyInit__decimal@@Base+0xa5b8>
   10d74:	ldr	x8, [sp, #8]
   10d78:	cmp	x8, x20
   10d7c:	b.eq	10dc0 <PyInit__decimal@@Base+0xa30c>  // b.none
   10d80:	ldr	x0, [x8, #8]
   10d84:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10d88:	add	x8, x8, #0x0
   10d8c:	cmp	x0, x8
   10d90:	b.eq	10dfc <PyInit__decimal@@Base+0xa348>  // b.none
   10d94:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   10d98:	add	x1, x1, #0x0
   10d9c:	bl	6900 <PyType_IsSubtype@plt>
   10da0:	cbnz	w0, 10dfc <PyInit__decimal@@Base+0xa348>
   10da4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   10da8:	ldr	x8, [x8, #3936]
   10dac:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10db0:	add	x1, x1, #0xf61
   10db4:	ldr	x0, [x8]
   10db8:	bl	6590 <PyErr_SetString@plt>
   10dbc:	b	1106c <PyInit__decimal@@Base+0xa5b8>
   10dc0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   10dc4:	ldr	x0, [x21, #1400]
   10dc8:	sub	x2, x29, #0x8
   10dcc:	mov	x1, xzr
   10dd0:	bl	6680 <PyContextVar_Get@plt>
   10dd4:	tbnz	w0, #31, 110a0 <PyInit__decimal@@Base+0xa5ec>
   10dd8:	ldur	x20, [x29, #-8]
   10ddc:	cbz	x20, 10fb4 <PyInit__decimal@@Base+0xa500>
   10de0:	str	x20, [sp, #8]
   10de4:	ldr	x8, [x20]
   10de8:	subs	x8, x8, #0x1
   10dec:	str	x8, [x20]
   10df0:	b.ne	10dfc <PyInit__decimal@@Base+0xa348>  // b.any
   10df4:	mov	x0, x20
   10df8:	bl	6510 <_Py_Dealloc@plt>
   10dfc:	ldr	x0, [x19, #8]
   10e00:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   10e04:	add	x21, x21, #0xe60
   10e08:	cmp	x0, x21
   10e0c:	b.eq	10e24 <PyInit__decimal@@Base+0xa370>  // b.none
   10e10:	ldr	x20, [sp, #8]
   10e14:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10e18:	add	x1, x1, #0xe60
   10e1c:	bl	6900 <PyType_IsSubtype@plt>
   10e20:	cbz	w0, 10f14 <PyInit__decimal@@Base+0xa460>
   10e24:	ldr	x8, [x19]
   10e28:	add	x8, x8, #0x1
   10e2c:	str	x8, [x19]
   10e30:	ldr	x20, [sp, #16]
   10e34:	ldr	x0, [x20, #8]
   10e38:	cmp	x0, x21
   10e3c:	b.eq	10e54 <PyInit__decimal@@Base+0xa3a0>  // b.none
   10e40:	ldr	x21, [sp, #8]
   10e44:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   10e48:	add	x1, x1, #0xe60
   10e4c:	bl	6900 <PyType_IsSubtype@plt>
   10e50:	cbz	w0, 10f40 <PyInit__decimal@@Base+0xa48c>
   10e54:	ldr	x8, [x20]
   10e58:	add	x8, x8, #0x1
   10e5c:	str	x8, [x20]
   10e60:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   10e64:	add	x0, x0, #0xe60
   10e68:	bl	6890 <_PyObject_New@plt>
   10e6c:	cbz	x0, 10ee4 <PyInit__decimal@@Base+0xa430>
   10e70:	mov	w8, #0x30                  	// #48
   10e74:	mov	x21, x0
   10e78:	strb	w8, [x0, #24]!
   10e7c:	mov	x9, #0xffffffffffffffff    	// #-1
   10e80:	mov	w10, #0x4                   	// #4
   10e84:	add	x8, x0, #0x30
   10e88:	stur	x9, [x0, #-8]
   10e8c:	stp	xzr, xzr, [x0, #8]
   10e90:	stp	xzr, x10, [x0, #24]
   10e94:	str	x8, [x0, #40]
   10e98:	ldr	x8, [sp, #8]
   10e9c:	add	x1, x19, #0x18
   10ea0:	add	x2, x20, #0x18
   10ea4:	add	x4, sp, #0x4
   10ea8:	add	x3, x8, #0x10
   10eac:	bl	294d4 <PyInit__decimal@@Base+0x22a20>
   10eb0:	ldr	x8, [x19]
   10eb4:	subs	x8, x8, #0x1
   10eb8:	str	x8, [x19]
   10ebc:	b.eq	10f6c <PyInit__decimal@@Base+0xa4b8>  // b.none
   10ec0:	ldr	x8, [x20]
   10ec4:	subs	x8, x8, #0x1
   10ec8:	str	x8, [x20]
   10ecc:	b.eq	10f84 <PyInit__decimal@@Base+0xa4d0>  // b.none
   10ed0:	ldr	x0, [sp, #8]
   10ed4:	ldr	w1, [sp, #4]
   10ed8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   10edc:	cbnz	w0, 10f9c <PyInit__decimal@@Base+0xa4e8>
   10ee0:	b	11070 <PyInit__decimal@@Base+0xa5bc>
   10ee4:	ldr	x8, [x19]
   10ee8:	subs	x8, x8, #0x1
   10eec:	str	x8, [x19]
   10ef0:	b.ne	10efc <PyInit__decimal@@Base+0xa448>  // b.any
   10ef4:	mov	x0, x19
   10ef8:	bl	6510 <_Py_Dealloc@plt>
   10efc:	ldr	x8, [x20]
   10f00:	subs	x8, x8, #0x1
   10f04:	str	x8, [x20]
   10f08:	b.ne	1106c <PyInit__decimal@@Base+0xa5b8>  // b.any
   10f0c:	mov	x0, x20
   10f10:	b	11068 <PyInit__decimal@@Base+0xa5b4>
   10f14:	ldr	x8, [x19, #8]
   10f18:	ldrb	w9, [x8, #171]
   10f1c:	tbnz	w9, #0, 11018 <PyInit__decimal@@Base+0xa564>
   10f20:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   10f24:	ldr	x9, [x9, #3936]
   10f28:	ldr	x2, [x8, #24]
   10f2c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10f30:	add	x1, x1, #0xb93
   10f34:	ldr	x0, [x9]
   10f38:	bl	6950 <PyErr_Format@plt>
   10f3c:	b	1106c <PyInit__decimal@@Base+0xa5b8>
   10f40:	ldr	x8, [x20, #8]
   10f44:	ldrb	w9, [x8, #171]
   10f48:	tbnz	w9, #0, 11038 <PyInit__decimal@@Base+0xa584>
   10f4c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   10f50:	ldr	x9, [x9, #3936]
   10f54:	ldr	x2, [x8, #24]
   10f58:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   10f5c:	add	x1, x1, #0xb93
   10f60:	ldr	x0, [x9]
   10f64:	bl	6950 <PyErr_Format@plt>
   10f68:	b	11054 <PyInit__decimal@@Base+0xa5a0>
   10f6c:	mov	x0, x19
   10f70:	bl	6510 <_Py_Dealloc@plt>
   10f74:	ldr	x8, [x20]
   10f78:	subs	x8, x8, #0x1
   10f7c:	str	x8, [x20]
   10f80:	b.ne	10ed0 <PyInit__decimal@@Base+0xa41c>  // b.any
   10f84:	mov	x0, x20
   10f88:	bl	6510 <_Py_Dealloc@plt>
   10f8c:	ldr	x0, [sp, #8]
   10f90:	ldr	w1, [sp, #4]
   10f94:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   10f98:	cbz	w0, 11070 <PyInit__decimal@@Base+0xa5bc>
   10f9c:	ldr	x8, [x21]
   10fa0:	subs	x8, x8, #0x1
   10fa4:	str	x8, [x21]
   10fa8:	b.ne	1106c <PyInit__decimal@@Base+0xa5b8>  // b.any
   10fac:	mov	x0, x21
   10fb0:	b	11068 <PyInit__decimal@@Base+0xa5b4>
   10fb4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   10fb8:	ldr	x22, [x8, #1496]
   10fbc:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   10fc0:	add	x0, x0, #0x0
   10fc4:	mov	x1, xzr
   10fc8:	bl	6780 <PyObject_CallObject@plt>
   10fcc:	cbz	x0, 110a0 <PyInit__decimal@@Base+0xa5ec>
   10fd0:	ldp	q1, q0, [x22, #32]
   10fd4:	ldr	q2, [x22, #16]
   10fd8:	mov	x20, x0
   10fdc:	mov	x1, x20
   10fe0:	stp	q1, q0, [x0, #32]
   10fe4:	str	q2, [x0, #16]
   10fe8:	ldr	w8, [x22, #80]
   10fec:	stp	wzr, wzr, [x0, #44]
   10ff0:	str	w8, [x0, #80]
   10ff4:	ldr	x0, [x21, #1400]
   10ff8:	bl	65c0 <PyContextVar_Set@plt>
   10ffc:	cbz	x0, 11088 <PyInit__decimal@@Base+0xa5d4>
   11000:	ldr	x8, [x0]
   11004:	subs	x8, x8, #0x1
   11008:	str	x8, [x0]
   1100c:	b.ne	10de0 <PyInit__decimal@@Base+0xa32c>  // b.any
   11010:	bl	6510 <_Py_Dealloc@plt>
   11014:	b	10de0 <PyInit__decimal@@Base+0xa32c>
   11018:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1101c:	add	x0, x0, #0xe60
   11020:	mov	x1, x19
   11024:	mov	x2, x20
   11028:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1102c:	mov	x19, x0
   11030:	cbnz	x0, 10e30 <PyInit__decimal@@Base+0xa37c>
   11034:	b	1106c <PyInit__decimal@@Base+0xa5b8>
   11038:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1103c:	add	x0, x0, #0xe60
   11040:	mov	x1, x20
   11044:	mov	x2, x21
   11048:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1104c:	mov	x20, x0
   11050:	cbnz	x0, 10e60 <PyInit__decimal@@Base+0xa3ac>
   11054:	ldr	x8, [x19]
   11058:	subs	x8, x8, #0x1
   1105c:	str	x8, [x19]
   11060:	b.ne	1106c <PyInit__decimal@@Base+0xa5b8>  // b.any
   11064:	mov	x0, x19
   11068:	bl	6510 <_Py_Dealloc@plt>
   1106c:	mov	x21, xzr
   11070:	mov	x0, x21
   11074:	ldp	x20, x19, [sp, #64]
   11078:	ldp	x22, x21, [sp, #48]
   1107c:	ldp	x29, x30, [sp, #32]
   11080:	add	sp, sp, #0x50
   11084:	ret
   11088:	ldr	x8, [x20]
   1108c:	subs	x8, x8, #0x1
   11090:	str	x8, [x20]
   11094:	b.ne	110a0 <PyInit__decimal@@Base+0xa5ec>  // b.any
   11098:	mov	x0, x20
   1109c:	bl	6510 <_Py_Dealloc@plt>
   110a0:	mov	x21, xzr
   110a4:	str	xzr, [sp, #8]
   110a8:	b	11070 <PyInit__decimal@@Base+0xa5bc>
   110ac:	sub	sp, sp, #0x50
   110b0:	stp	x29, x30, [sp, #32]
   110b4:	stp	x22, x21, [sp, #48]
   110b8:	stp	x20, x19, [sp, #64]
   110bc:	add	x29, sp, #0x20
   110c0:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   110c4:	ldr	x20, [x20, #4008]
   110c8:	mov	x8, x2
   110cc:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   110d0:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   110d4:	mov	x19, x0
   110d8:	add	x2, x2, #0xab
   110dc:	add	x3, x3, #0xaf0
   110e0:	add	x4, sp, #0x10
   110e4:	add	x5, sp, #0x8
   110e8:	mov	x0, x1
   110ec:	mov	x1, x8
   110f0:	str	x20, [sp, #8]
   110f4:	str	wzr, [sp, #4]
   110f8:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   110fc:	cbz	w0, 113f8 <PyInit__decimal@@Base+0xa944>
   11100:	ldr	x8, [sp, #8]
   11104:	cmp	x8, x20
   11108:	b.eq	1114c <PyInit__decimal@@Base+0xa698>  // b.none
   1110c:	ldr	x0, [x8, #8]
   11110:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   11114:	add	x8, x8, #0x0
   11118:	cmp	x0, x8
   1111c:	b.eq	11188 <PyInit__decimal@@Base+0xa6d4>  // b.none
   11120:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   11124:	add	x1, x1, #0x0
   11128:	bl	6900 <PyType_IsSubtype@plt>
   1112c:	cbnz	w0, 11188 <PyInit__decimal@@Base+0xa6d4>
   11130:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   11134:	ldr	x8, [x8, #3936]
   11138:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1113c:	add	x1, x1, #0xf61
   11140:	ldr	x0, [x8]
   11144:	bl	6590 <PyErr_SetString@plt>
   11148:	b	113f8 <PyInit__decimal@@Base+0xa944>
   1114c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   11150:	ldr	x0, [x21, #1400]
   11154:	sub	x2, x29, #0x8
   11158:	mov	x1, xzr
   1115c:	bl	6680 <PyContextVar_Get@plt>
   11160:	tbnz	w0, #31, 1142c <PyInit__decimal@@Base+0xa978>
   11164:	ldur	x20, [x29, #-8]
   11168:	cbz	x20, 11340 <PyInit__decimal@@Base+0xa88c>
   1116c:	str	x20, [sp, #8]
   11170:	ldr	x8, [x20]
   11174:	subs	x8, x8, #0x1
   11178:	str	x8, [x20]
   1117c:	b.ne	11188 <PyInit__decimal@@Base+0xa6d4>  // b.any
   11180:	mov	x0, x20
   11184:	bl	6510 <_Py_Dealloc@plt>
   11188:	ldr	x0, [x19, #8]
   1118c:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   11190:	add	x21, x21, #0xe60
   11194:	cmp	x0, x21
   11198:	b.eq	111b0 <PyInit__decimal@@Base+0xa6fc>  // b.none
   1119c:	ldr	x20, [sp, #8]
   111a0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   111a4:	add	x1, x1, #0xe60
   111a8:	bl	6900 <PyType_IsSubtype@plt>
   111ac:	cbz	w0, 112a0 <PyInit__decimal@@Base+0xa7ec>
   111b0:	ldr	x8, [x19]
   111b4:	add	x8, x8, #0x1
   111b8:	str	x8, [x19]
   111bc:	ldr	x20, [sp, #16]
   111c0:	ldr	x0, [x20, #8]
   111c4:	cmp	x0, x21
   111c8:	b.eq	111e0 <PyInit__decimal@@Base+0xa72c>  // b.none
   111cc:	ldr	x21, [sp, #8]
   111d0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   111d4:	add	x1, x1, #0xe60
   111d8:	bl	6900 <PyType_IsSubtype@plt>
   111dc:	cbz	w0, 112cc <PyInit__decimal@@Base+0xa818>
   111e0:	ldr	x8, [x20]
   111e4:	add	x8, x8, #0x1
   111e8:	str	x8, [x20]
   111ec:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   111f0:	add	x0, x0, #0xe60
   111f4:	bl	6890 <_PyObject_New@plt>
   111f8:	cbz	x0, 11270 <PyInit__decimal@@Base+0xa7bc>
   111fc:	mov	w8, #0x30                  	// #48
   11200:	mov	x21, x0
   11204:	strb	w8, [x0, #24]!
   11208:	mov	x9, #0xffffffffffffffff    	// #-1
   1120c:	mov	w10, #0x4                   	// #4
   11210:	add	x8, x0, #0x30
   11214:	stur	x9, [x0, #-8]
   11218:	stp	xzr, xzr, [x0, #8]
   1121c:	stp	xzr, x10, [x0, #24]
   11220:	str	x8, [x0, #40]
   11224:	ldr	x8, [sp, #8]
   11228:	add	x1, x19, #0x18
   1122c:	add	x2, x20, #0x18
   11230:	add	x4, sp, #0x4
   11234:	add	x3, x8, #0x10
   11238:	bl	28760 <PyInit__decimal@@Base+0x21cac>
   1123c:	ldr	x8, [x19]
   11240:	subs	x8, x8, #0x1
   11244:	str	x8, [x19]
   11248:	b.eq	112f8 <PyInit__decimal@@Base+0xa844>  // b.none
   1124c:	ldr	x8, [x20]
   11250:	subs	x8, x8, #0x1
   11254:	str	x8, [x20]
   11258:	b.eq	11310 <PyInit__decimal@@Base+0xa85c>  // b.none
   1125c:	ldr	x0, [sp, #8]
   11260:	ldr	w1, [sp, #4]
   11264:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   11268:	cbnz	w0, 11328 <PyInit__decimal@@Base+0xa874>
   1126c:	b	113fc <PyInit__decimal@@Base+0xa948>
   11270:	ldr	x8, [x19]
   11274:	subs	x8, x8, #0x1
   11278:	str	x8, [x19]
   1127c:	b.ne	11288 <PyInit__decimal@@Base+0xa7d4>  // b.any
   11280:	mov	x0, x19
   11284:	bl	6510 <_Py_Dealloc@plt>
   11288:	ldr	x8, [x20]
   1128c:	subs	x8, x8, #0x1
   11290:	str	x8, [x20]
   11294:	b.ne	113f8 <PyInit__decimal@@Base+0xa944>  // b.any
   11298:	mov	x0, x20
   1129c:	b	113f4 <PyInit__decimal@@Base+0xa940>
   112a0:	ldr	x8, [x19, #8]
   112a4:	ldrb	w9, [x8, #171]
   112a8:	tbnz	w9, #0, 113a4 <PyInit__decimal@@Base+0xa8f0>
   112ac:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   112b0:	ldr	x9, [x9, #3936]
   112b4:	ldr	x2, [x8, #24]
   112b8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   112bc:	add	x1, x1, #0xb93
   112c0:	ldr	x0, [x9]
   112c4:	bl	6950 <PyErr_Format@plt>
   112c8:	b	113f8 <PyInit__decimal@@Base+0xa944>
   112cc:	ldr	x8, [x20, #8]
   112d0:	ldrb	w9, [x8, #171]
   112d4:	tbnz	w9, #0, 113c4 <PyInit__decimal@@Base+0xa910>
   112d8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   112dc:	ldr	x9, [x9, #3936]
   112e0:	ldr	x2, [x8, #24]
   112e4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   112e8:	add	x1, x1, #0xb93
   112ec:	ldr	x0, [x9]
   112f0:	bl	6950 <PyErr_Format@plt>
   112f4:	b	113e0 <PyInit__decimal@@Base+0xa92c>
   112f8:	mov	x0, x19
   112fc:	bl	6510 <_Py_Dealloc@plt>
   11300:	ldr	x8, [x20]
   11304:	subs	x8, x8, #0x1
   11308:	str	x8, [x20]
   1130c:	b.ne	1125c <PyInit__decimal@@Base+0xa7a8>  // b.any
   11310:	mov	x0, x20
   11314:	bl	6510 <_Py_Dealloc@plt>
   11318:	ldr	x0, [sp, #8]
   1131c:	ldr	w1, [sp, #4]
   11320:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   11324:	cbz	w0, 113fc <PyInit__decimal@@Base+0xa948>
   11328:	ldr	x8, [x21]
   1132c:	subs	x8, x8, #0x1
   11330:	str	x8, [x21]
   11334:	b.ne	113f8 <PyInit__decimal@@Base+0xa944>  // b.any
   11338:	mov	x0, x21
   1133c:	b	113f4 <PyInit__decimal@@Base+0xa940>
   11340:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   11344:	ldr	x22, [x8, #1496]
   11348:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1134c:	add	x0, x0, #0x0
   11350:	mov	x1, xzr
   11354:	bl	6780 <PyObject_CallObject@plt>
   11358:	cbz	x0, 1142c <PyInit__decimal@@Base+0xa978>
   1135c:	ldp	q1, q0, [x22, #32]
   11360:	ldr	q2, [x22, #16]
   11364:	mov	x20, x0
   11368:	mov	x1, x20
   1136c:	stp	q1, q0, [x0, #32]
   11370:	str	q2, [x0, #16]
   11374:	ldr	w8, [x22, #80]
   11378:	stp	wzr, wzr, [x0, #44]
   1137c:	str	w8, [x0, #80]
   11380:	ldr	x0, [x21, #1400]
   11384:	bl	65c0 <PyContextVar_Set@plt>
   11388:	cbz	x0, 11414 <PyInit__decimal@@Base+0xa960>
   1138c:	ldr	x8, [x0]
   11390:	subs	x8, x8, #0x1
   11394:	str	x8, [x0]
   11398:	b.ne	1116c <PyInit__decimal@@Base+0xa6b8>  // b.any
   1139c:	bl	6510 <_Py_Dealloc@plt>
   113a0:	b	1116c <PyInit__decimal@@Base+0xa6b8>
   113a4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   113a8:	add	x0, x0, #0xe60
   113ac:	mov	x1, x19
   113b0:	mov	x2, x20
   113b4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   113b8:	mov	x19, x0
   113bc:	cbnz	x0, 111bc <PyInit__decimal@@Base+0xa708>
   113c0:	b	113f8 <PyInit__decimal@@Base+0xa944>
   113c4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   113c8:	add	x0, x0, #0xe60
   113cc:	mov	x1, x20
   113d0:	mov	x2, x21
   113d4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   113d8:	mov	x20, x0
   113dc:	cbnz	x0, 111ec <PyInit__decimal@@Base+0xa738>
   113e0:	ldr	x8, [x19]
   113e4:	subs	x8, x8, #0x1
   113e8:	str	x8, [x19]
   113ec:	b.ne	113f8 <PyInit__decimal@@Base+0xa944>  // b.any
   113f0:	mov	x0, x19
   113f4:	bl	6510 <_Py_Dealloc@plt>
   113f8:	mov	x21, xzr
   113fc:	mov	x0, x21
   11400:	ldp	x20, x19, [sp, #64]
   11404:	ldp	x22, x21, [sp, #48]
   11408:	ldp	x29, x30, [sp, #32]
   1140c:	add	sp, sp, #0x50
   11410:	ret
   11414:	ldr	x8, [x20]
   11418:	subs	x8, x8, #0x1
   1141c:	str	x8, [x20]
   11420:	b.ne	1142c <PyInit__decimal@@Base+0xa978>  // b.any
   11424:	mov	x0, x20
   11428:	bl	6510 <_Py_Dealloc@plt>
   1142c:	mov	x21, xzr
   11430:	str	xzr, [sp, #8]
   11434:	b	113fc <PyInit__decimal@@Base+0xa948>
   11438:	sub	sp, sp, #0x50
   1143c:	stp	x29, x30, [sp, #32]
   11440:	stp	x22, x21, [sp, #48]
   11444:	stp	x20, x19, [sp, #64]
   11448:	add	x29, sp, #0x20
   1144c:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   11450:	ldr	x20, [x20, #4008]
   11454:	mov	x8, x2
   11458:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   1145c:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   11460:	mov	x19, x0
   11464:	add	x2, x2, #0xab
   11468:	add	x3, x3, #0xb08
   1146c:	add	x4, sp, #0x10
   11470:	add	x5, sp, #0x8
   11474:	mov	x0, x1
   11478:	mov	x1, x8
   1147c:	str	x20, [sp, #8]
   11480:	str	wzr, [sp, #4]
   11484:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   11488:	cbz	w0, 11784 <PyInit__decimal@@Base+0xacd0>
   1148c:	ldr	x8, [sp, #8]
   11490:	cmp	x8, x20
   11494:	b.eq	114d8 <PyInit__decimal@@Base+0xaa24>  // b.none
   11498:	ldr	x0, [x8, #8]
   1149c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   114a0:	add	x8, x8, #0x0
   114a4:	cmp	x0, x8
   114a8:	b.eq	11514 <PyInit__decimal@@Base+0xaa60>  // b.none
   114ac:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   114b0:	add	x1, x1, #0x0
   114b4:	bl	6900 <PyType_IsSubtype@plt>
   114b8:	cbnz	w0, 11514 <PyInit__decimal@@Base+0xaa60>
   114bc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   114c0:	ldr	x8, [x8, #3936]
   114c4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   114c8:	add	x1, x1, #0xf61
   114cc:	ldr	x0, [x8]
   114d0:	bl	6590 <PyErr_SetString@plt>
   114d4:	b	11784 <PyInit__decimal@@Base+0xacd0>
   114d8:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   114dc:	ldr	x0, [x21, #1400]
   114e0:	sub	x2, x29, #0x8
   114e4:	mov	x1, xzr
   114e8:	bl	6680 <PyContextVar_Get@plt>
   114ec:	tbnz	w0, #31, 117b8 <PyInit__decimal@@Base+0xad04>
   114f0:	ldur	x20, [x29, #-8]
   114f4:	cbz	x20, 116cc <PyInit__decimal@@Base+0xac18>
   114f8:	str	x20, [sp, #8]
   114fc:	ldr	x8, [x20]
   11500:	subs	x8, x8, #0x1
   11504:	str	x8, [x20]
   11508:	b.ne	11514 <PyInit__decimal@@Base+0xaa60>  // b.any
   1150c:	mov	x0, x20
   11510:	bl	6510 <_Py_Dealloc@plt>
   11514:	ldr	x0, [x19, #8]
   11518:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   1151c:	add	x21, x21, #0xe60
   11520:	cmp	x0, x21
   11524:	b.eq	1153c <PyInit__decimal@@Base+0xaa88>  // b.none
   11528:	ldr	x20, [sp, #8]
   1152c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   11530:	add	x1, x1, #0xe60
   11534:	bl	6900 <PyType_IsSubtype@plt>
   11538:	cbz	w0, 1162c <PyInit__decimal@@Base+0xab78>
   1153c:	ldr	x8, [x19]
   11540:	add	x8, x8, #0x1
   11544:	str	x8, [x19]
   11548:	ldr	x20, [sp, #16]
   1154c:	ldr	x0, [x20, #8]
   11550:	cmp	x0, x21
   11554:	b.eq	1156c <PyInit__decimal@@Base+0xaab8>  // b.none
   11558:	ldr	x21, [sp, #8]
   1155c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   11560:	add	x1, x1, #0xe60
   11564:	bl	6900 <PyType_IsSubtype@plt>
   11568:	cbz	w0, 11658 <PyInit__decimal@@Base+0xaba4>
   1156c:	ldr	x8, [x20]
   11570:	add	x8, x8, #0x1
   11574:	str	x8, [x20]
   11578:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1157c:	add	x0, x0, #0xe60
   11580:	bl	6890 <_PyObject_New@plt>
   11584:	cbz	x0, 115fc <PyInit__decimal@@Base+0xab48>
   11588:	mov	w8, #0x30                  	// #48
   1158c:	mov	x21, x0
   11590:	strb	w8, [x0, #24]!
   11594:	mov	x9, #0xffffffffffffffff    	// #-1
   11598:	mov	w10, #0x4                   	// #4
   1159c:	add	x8, x0, #0x30
   115a0:	stur	x9, [x0, #-8]
   115a4:	stp	xzr, xzr, [x0, #8]
   115a8:	stp	xzr, x10, [x0, #24]
   115ac:	str	x8, [x0, #40]
   115b0:	ldr	x8, [sp, #8]
   115b4:	add	x1, x19, #0x18
   115b8:	add	x2, x20, #0x18
   115bc:	add	x4, sp, #0x4
   115c0:	add	x3, x8, #0x10
   115c4:	bl	28c44 <PyInit__decimal@@Base+0x22190>
   115c8:	ldr	x8, [x19]
   115cc:	subs	x8, x8, #0x1
   115d0:	str	x8, [x19]
   115d4:	b.eq	11684 <PyInit__decimal@@Base+0xabd0>  // b.none
   115d8:	ldr	x8, [x20]
   115dc:	subs	x8, x8, #0x1
   115e0:	str	x8, [x20]
   115e4:	b.eq	1169c <PyInit__decimal@@Base+0xabe8>  // b.none
   115e8:	ldr	x0, [sp, #8]
   115ec:	ldr	w1, [sp, #4]
   115f0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   115f4:	cbnz	w0, 116b4 <PyInit__decimal@@Base+0xac00>
   115f8:	b	11788 <PyInit__decimal@@Base+0xacd4>
   115fc:	ldr	x8, [x19]
   11600:	subs	x8, x8, #0x1
   11604:	str	x8, [x19]
   11608:	b.ne	11614 <PyInit__decimal@@Base+0xab60>  // b.any
   1160c:	mov	x0, x19
   11610:	bl	6510 <_Py_Dealloc@plt>
   11614:	ldr	x8, [x20]
   11618:	subs	x8, x8, #0x1
   1161c:	str	x8, [x20]
   11620:	b.ne	11784 <PyInit__decimal@@Base+0xacd0>  // b.any
   11624:	mov	x0, x20
   11628:	b	11780 <PyInit__decimal@@Base+0xaccc>
   1162c:	ldr	x8, [x19, #8]
   11630:	ldrb	w9, [x8, #171]
   11634:	tbnz	w9, #0, 11730 <PyInit__decimal@@Base+0xac7c>
   11638:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1163c:	ldr	x9, [x9, #3936]
   11640:	ldr	x2, [x8, #24]
   11644:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   11648:	add	x1, x1, #0xb93
   1164c:	ldr	x0, [x9]
   11650:	bl	6950 <PyErr_Format@plt>
   11654:	b	11784 <PyInit__decimal@@Base+0xacd0>
   11658:	ldr	x8, [x20, #8]
   1165c:	ldrb	w9, [x8, #171]
   11660:	tbnz	w9, #0, 11750 <PyInit__decimal@@Base+0xac9c>
   11664:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   11668:	ldr	x9, [x9, #3936]
   1166c:	ldr	x2, [x8, #24]
   11670:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   11674:	add	x1, x1, #0xb93
   11678:	ldr	x0, [x9]
   1167c:	bl	6950 <PyErr_Format@plt>
   11680:	b	1176c <PyInit__decimal@@Base+0xacb8>
   11684:	mov	x0, x19
   11688:	bl	6510 <_Py_Dealloc@plt>
   1168c:	ldr	x8, [x20]
   11690:	subs	x8, x8, #0x1
   11694:	str	x8, [x20]
   11698:	b.ne	115e8 <PyInit__decimal@@Base+0xab34>  // b.any
   1169c:	mov	x0, x20
   116a0:	bl	6510 <_Py_Dealloc@plt>
   116a4:	ldr	x0, [sp, #8]
   116a8:	ldr	w1, [sp, #4]
   116ac:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   116b0:	cbz	w0, 11788 <PyInit__decimal@@Base+0xacd4>
   116b4:	ldr	x8, [x21]
   116b8:	subs	x8, x8, #0x1
   116bc:	str	x8, [x21]
   116c0:	b.ne	11784 <PyInit__decimal@@Base+0xacd0>  // b.any
   116c4:	mov	x0, x21
   116c8:	b	11780 <PyInit__decimal@@Base+0xaccc>
   116cc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   116d0:	ldr	x22, [x8, #1496]
   116d4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   116d8:	add	x0, x0, #0x0
   116dc:	mov	x1, xzr
   116e0:	bl	6780 <PyObject_CallObject@plt>
   116e4:	cbz	x0, 117b8 <PyInit__decimal@@Base+0xad04>
   116e8:	ldp	q1, q0, [x22, #32]
   116ec:	ldr	q2, [x22, #16]
   116f0:	mov	x20, x0
   116f4:	mov	x1, x20
   116f8:	stp	q1, q0, [x0, #32]
   116fc:	str	q2, [x0, #16]
   11700:	ldr	w8, [x22, #80]
   11704:	stp	wzr, wzr, [x0, #44]
   11708:	str	w8, [x0, #80]
   1170c:	ldr	x0, [x21, #1400]
   11710:	bl	65c0 <PyContextVar_Set@plt>
   11714:	cbz	x0, 117a0 <PyInit__decimal@@Base+0xacec>
   11718:	ldr	x8, [x0]
   1171c:	subs	x8, x8, #0x1
   11720:	str	x8, [x0]
   11724:	b.ne	114f8 <PyInit__decimal@@Base+0xaa44>  // b.any
   11728:	bl	6510 <_Py_Dealloc@plt>
   1172c:	b	114f8 <PyInit__decimal@@Base+0xaa44>
   11730:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   11734:	add	x0, x0, #0xe60
   11738:	mov	x1, x19
   1173c:	mov	x2, x20
   11740:	bl	abdc <PyInit__decimal@@Base+0x4128>
   11744:	mov	x19, x0
   11748:	cbnz	x0, 11548 <PyInit__decimal@@Base+0xaa94>
   1174c:	b	11784 <PyInit__decimal@@Base+0xacd0>
   11750:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   11754:	add	x0, x0, #0xe60
   11758:	mov	x1, x20
   1175c:	mov	x2, x21
   11760:	bl	abdc <PyInit__decimal@@Base+0x4128>
   11764:	mov	x20, x0
   11768:	cbnz	x0, 11578 <PyInit__decimal@@Base+0xaac4>
   1176c:	ldr	x8, [x19]
   11770:	subs	x8, x8, #0x1
   11774:	str	x8, [x19]
   11778:	b.ne	11784 <PyInit__decimal@@Base+0xacd0>  // b.any
   1177c:	mov	x0, x19
   11780:	bl	6510 <_Py_Dealloc@plt>
   11784:	mov	x21, xzr
   11788:	mov	x0, x21
   1178c:	ldp	x20, x19, [sp, #64]
   11790:	ldp	x22, x21, [sp, #48]
   11794:	ldp	x29, x30, [sp, #32]
   11798:	add	sp, sp, #0x50
   1179c:	ret
   117a0:	ldr	x8, [x20]
   117a4:	subs	x8, x8, #0x1
   117a8:	str	x8, [x20]
   117ac:	b.ne	117b8 <PyInit__decimal@@Base+0xad04>  // b.any
   117b0:	mov	x0, x20
   117b4:	bl	6510 <_Py_Dealloc@plt>
   117b8:	mov	x21, xzr
   117bc:	str	xzr, [sp, #8]
   117c0:	b	11788 <PyInit__decimal@@Base+0xacd4>
   117c4:	sub	sp, sp, #0x50
   117c8:	stp	x29, x30, [sp, #32]
   117cc:	stp	x22, x21, [sp, #48]
   117d0:	stp	x20, x19, [sp, #64]
   117d4:	add	x29, sp, #0x20
   117d8:	adrp	x20, 56000 <PyInit__decimal@@Base+0x4f54c>
   117dc:	ldr	x20, [x20, #4008]
   117e0:	mov	x8, x2
   117e4:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   117e8:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   117ec:	mov	x19, x0
   117f0:	add	x2, x2, #0xab
   117f4:	add	x3, x3, #0xb20
   117f8:	add	x4, sp, #0x10
   117fc:	add	x5, sp, #0x8
   11800:	mov	x0, x1
   11804:	mov	x1, x8
   11808:	str	x20, [sp, #8]
   1180c:	str	wzr, [sp, #4]
   11810:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   11814:	cbz	w0, 11b10 <PyInit__decimal@@Base+0xb05c>
   11818:	ldr	x8, [sp, #8]
   1181c:	cmp	x8, x20
   11820:	b.eq	11864 <PyInit__decimal@@Base+0xadb0>  // b.none
   11824:	ldr	x0, [x8, #8]
   11828:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1182c:	add	x8, x8, #0x0
   11830:	cmp	x0, x8
   11834:	b.eq	118a0 <PyInit__decimal@@Base+0xadec>  // b.none
   11838:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   1183c:	add	x1, x1, #0x0
   11840:	bl	6900 <PyType_IsSubtype@plt>
   11844:	cbnz	w0, 118a0 <PyInit__decimal@@Base+0xadec>
   11848:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1184c:	ldr	x8, [x8, #3936]
   11850:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   11854:	add	x1, x1, #0xf61
   11858:	ldr	x0, [x8]
   1185c:	bl	6590 <PyErr_SetString@plt>
   11860:	b	11b10 <PyInit__decimal@@Base+0xb05c>
   11864:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   11868:	ldr	x0, [x21, #1400]
   1186c:	sub	x2, x29, #0x8
   11870:	mov	x1, xzr
   11874:	bl	6680 <PyContextVar_Get@plt>
   11878:	tbnz	w0, #31, 11b44 <PyInit__decimal@@Base+0xb090>
   1187c:	ldur	x20, [x29, #-8]
   11880:	cbz	x20, 11a58 <PyInit__decimal@@Base+0xafa4>
   11884:	str	x20, [sp, #8]
   11888:	ldr	x8, [x20]
   1188c:	subs	x8, x8, #0x1
   11890:	str	x8, [x20]
   11894:	b.ne	118a0 <PyInit__decimal@@Base+0xadec>  // b.any
   11898:	mov	x0, x20
   1189c:	bl	6510 <_Py_Dealloc@plt>
   118a0:	ldr	x0, [x19, #8]
   118a4:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   118a8:	add	x21, x21, #0xe60
   118ac:	cmp	x0, x21
   118b0:	b.eq	118c8 <PyInit__decimal@@Base+0xae14>  // b.none
   118b4:	ldr	x20, [sp, #8]
   118b8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   118bc:	add	x1, x1, #0xe60
   118c0:	bl	6900 <PyType_IsSubtype@plt>
   118c4:	cbz	w0, 119b8 <PyInit__decimal@@Base+0xaf04>
   118c8:	ldr	x8, [x19]
   118cc:	add	x8, x8, #0x1
   118d0:	str	x8, [x19]
   118d4:	ldr	x20, [sp, #16]
   118d8:	ldr	x0, [x20, #8]
   118dc:	cmp	x0, x21
   118e0:	b.eq	118f8 <PyInit__decimal@@Base+0xae44>  // b.none
   118e4:	ldr	x21, [sp, #8]
   118e8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   118ec:	add	x1, x1, #0xe60
   118f0:	bl	6900 <PyType_IsSubtype@plt>
   118f4:	cbz	w0, 119e4 <PyInit__decimal@@Base+0xaf30>
   118f8:	ldr	x8, [x20]
   118fc:	add	x8, x8, #0x1
   11900:	str	x8, [x20]
   11904:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   11908:	add	x0, x0, #0xe60
   1190c:	bl	6890 <_PyObject_New@plt>
   11910:	cbz	x0, 11988 <PyInit__decimal@@Base+0xaed4>
   11914:	mov	w8, #0x30                  	// #48
   11918:	mov	x21, x0
   1191c:	strb	w8, [x0, #24]!
   11920:	mov	x9, #0xffffffffffffffff    	// #-1
   11924:	mov	w10, #0x4                   	// #4
   11928:	add	x8, x0, #0x30
   1192c:	stur	x9, [x0, #-8]
   11930:	stp	xzr, xzr, [x0, #8]
   11934:	stp	xzr, x10, [x0, #24]
   11938:	str	x8, [x0, #40]
   1193c:	ldr	x8, [sp, #8]
   11940:	add	x1, x19, #0x18
   11944:	add	x2, x20, #0x18
   11948:	add	x4, sp, #0x4
   1194c:	add	x3, x8, #0x10
   11950:	bl	29194 <PyInit__decimal@@Base+0x226e0>
   11954:	ldr	x8, [x19]
   11958:	subs	x8, x8, #0x1
   1195c:	str	x8, [x19]
   11960:	b.eq	11a10 <PyInit__decimal@@Base+0xaf5c>  // b.none
   11964:	ldr	x8, [x20]
   11968:	subs	x8, x8, #0x1
   1196c:	str	x8, [x20]
   11970:	b.eq	11a28 <PyInit__decimal@@Base+0xaf74>  // b.none
   11974:	ldr	x0, [sp, #8]
   11978:	ldr	w1, [sp, #4]
   1197c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   11980:	cbnz	w0, 11a40 <PyInit__decimal@@Base+0xaf8c>
   11984:	b	11b14 <PyInit__decimal@@Base+0xb060>
   11988:	ldr	x8, [x19]
   1198c:	subs	x8, x8, #0x1
   11990:	str	x8, [x19]
   11994:	b.ne	119a0 <PyInit__decimal@@Base+0xaeec>  // b.any
   11998:	mov	x0, x19
   1199c:	bl	6510 <_Py_Dealloc@plt>
   119a0:	ldr	x8, [x20]
   119a4:	subs	x8, x8, #0x1
   119a8:	str	x8, [x20]
   119ac:	b.ne	11b10 <PyInit__decimal@@Base+0xb05c>  // b.any
   119b0:	mov	x0, x20
   119b4:	b	11b0c <PyInit__decimal@@Base+0xb058>
   119b8:	ldr	x8, [x19, #8]
   119bc:	ldrb	w9, [x8, #171]
   119c0:	tbnz	w9, #0, 11abc <PyInit__decimal@@Base+0xb008>
   119c4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   119c8:	ldr	x9, [x9, #3936]
   119cc:	ldr	x2, [x8, #24]
   119d0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   119d4:	add	x1, x1, #0xb93
   119d8:	ldr	x0, [x9]
   119dc:	bl	6950 <PyErr_Format@plt>
   119e0:	b	11b10 <PyInit__decimal@@Base+0xb05c>
   119e4:	ldr	x8, [x20, #8]
   119e8:	ldrb	w9, [x8, #171]
   119ec:	tbnz	w9, #0, 11adc <PyInit__decimal@@Base+0xb028>
   119f0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   119f4:	ldr	x9, [x9, #3936]
   119f8:	ldr	x2, [x8, #24]
   119fc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   11a00:	add	x1, x1, #0xb93
   11a04:	ldr	x0, [x9]
   11a08:	bl	6950 <PyErr_Format@plt>
   11a0c:	b	11af8 <PyInit__decimal@@Base+0xb044>
   11a10:	mov	x0, x19
   11a14:	bl	6510 <_Py_Dealloc@plt>
   11a18:	ldr	x8, [x20]
   11a1c:	subs	x8, x8, #0x1
   11a20:	str	x8, [x20]
   11a24:	b.ne	11974 <PyInit__decimal@@Base+0xaec0>  // b.any
   11a28:	mov	x0, x20
   11a2c:	bl	6510 <_Py_Dealloc@plt>
   11a30:	ldr	x0, [sp, #8]
   11a34:	ldr	w1, [sp, #4]
   11a38:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   11a3c:	cbz	w0, 11b14 <PyInit__decimal@@Base+0xb060>
   11a40:	ldr	x8, [x21]
   11a44:	subs	x8, x8, #0x1
   11a48:	str	x8, [x21]
   11a4c:	b.ne	11b10 <PyInit__decimal@@Base+0xb05c>  // b.any
   11a50:	mov	x0, x21
   11a54:	b	11b0c <PyInit__decimal@@Base+0xb058>
   11a58:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   11a5c:	ldr	x22, [x8, #1496]
   11a60:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   11a64:	add	x0, x0, #0x0
   11a68:	mov	x1, xzr
   11a6c:	bl	6780 <PyObject_CallObject@plt>
   11a70:	cbz	x0, 11b44 <PyInit__decimal@@Base+0xb090>
   11a74:	ldp	q1, q0, [x22, #32]
   11a78:	ldr	q2, [x22, #16]
   11a7c:	mov	x20, x0
   11a80:	mov	x1, x20
   11a84:	stp	q1, q0, [x0, #32]
   11a88:	str	q2, [x0, #16]
   11a8c:	ldr	w8, [x22, #80]
   11a90:	stp	wzr, wzr, [x0, #44]
   11a94:	str	w8, [x0, #80]
   11a98:	ldr	x0, [x21, #1400]
   11a9c:	bl	65c0 <PyContextVar_Set@plt>
   11aa0:	cbz	x0, 11b2c <PyInit__decimal@@Base+0xb078>
   11aa4:	ldr	x8, [x0]
   11aa8:	subs	x8, x8, #0x1
   11aac:	str	x8, [x0]
   11ab0:	b.ne	11884 <PyInit__decimal@@Base+0xadd0>  // b.any
   11ab4:	bl	6510 <_Py_Dealloc@plt>
   11ab8:	b	11884 <PyInit__decimal@@Base+0xadd0>
   11abc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   11ac0:	add	x0, x0, #0xe60
   11ac4:	mov	x1, x19
   11ac8:	mov	x2, x20
   11acc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   11ad0:	mov	x19, x0
   11ad4:	cbnz	x0, 118d4 <PyInit__decimal@@Base+0xae20>
   11ad8:	b	11b10 <PyInit__decimal@@Base+0xb05c>
   11adc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   11ae0:	add	x0, x0, #0xe60
   11ae4:	mov	x1, x20
   11ae8:	mov	x2, x21
   11aec:	bl	abdc <PyInit__decimal@@Base+0x4128>
   11af0:	mov	x20, x0
   11af4:	cbnz	x0, 11904 <PyInit__decimal@@Base+0xae50>
   11af8:	ldr	x8, [x19]
   11afc:	subs	x8, x8, #0x1
   11b00:	str	x8, [x19]
   11b04:	b.ne	11b10 <PyInit__decimal@@Base+0xb05c>  // b.any
   11b08:	mov	x0, x19
   11b0c:	bl	6510 <_Py_Dealloc@plt>
   11b10:	mov	x21, xzr
   11b14:	mov	x0, x21
   11b18:	ldp	x20, x19, [sp, #64]
   11b1c:	ldp	x22, x21, [sp, #48]
   11b20:	ldp	x29, x30, [sp, #32]
   11b24:	add	sp, sp, #0x50
   11b28:	ret
   11b2c:	ldr	x8, [x20]
   11b30:	subs	x8, x8, #0x1
   11b34:	str	x8, [x20]
   11b38:	b.ne	11b44 <PyInit__decimal@@Base+0xb090>  // b.any
   11b3c:	mov	x0, x20
   11b40:	bl	6510 <_Py_Dealloc@plt>
   11b44:	mov	x21, xzr
   11b48:	str	xzr, [sp, #8]
   11b4c:	b	11b14 <PyInit__decimal@@Base+0xb060>
   11b50:	stp	x29, x30, [sp, #-64]!
   11b54:	str	x23, [sp, #16]
   11b58:	stp	x22, x21, [sp, #32]
   11b5c:	stp	x20, x19, [sp, #48]
   11b60:	mov	x29, sp
   11b64:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   11b68:	ldr	x8, [x22, #1400]
   11b6c:	mov	x20, x1
   11b70:	mov	x19, x0
   11b74:	add	x2, x29, #0x18
   11b78:	mov	x0, x8
   11b7c:	mov	x1, xzr
   11b80:	bl	6680 <PyContextVar_Get@plt>
   11b84:	tbnz	w0, #31, 11c84 <PyInit__decimal@@Base+0xb1d0>
   11b88:	ldr	x21, [x29, #24]
   11b8c:	cbz	x21, 11c08 <PyInit__decimal@@Base+0xb154>
   11b90:	ldr	x8, [x21]
   11b94:	subs	x8, x8, #0x1
   11b98:	str	x8, [x21]
   11b9c:	b.ne	11ba8 <PyInit__decimal@@Base+0xb0f4>  // b.any
   11ba0:	mov	x0, x21
   11ba4:	bl	6510 <_Py_Dealloc@plt>
   11ba8:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   11bac:	add	x22, x22, #0xe60
   11bb0:	mov	x0, x22
   11bb4:	mov	x1, x20
   11bb8:	mov	x2, x21
   11bbc:	bl	af58 <PyInit__decimal@@Base+0x44a4>
   11bc0:	cmp	x19, x22
   11bc4:	mov	x20, x0
   11bc8:	b.eq	11c00 <PyInit__decimal@@Base+0xb14c>  // b.none
   11bcc:	cbz	x20, 11c00 <PyInit__decimal@@Base+0xb14c>
   11bd0:	mov	x0, x19
   11bd4:	mov	x1, x20
   11bd8:	mov	x2, xzr
   11bdc:	bl	6790 <PyObject_CallFunctionObjArgs@plt>
   11be0:	ldr	x8, [x20]
   11be4:	mov	x19, x0
   11be8:	subs	x8, x8, #0x1
   11bec:	str	x8, [x20]
   11bf0:	b.ne	11c88 <PyInit__decimal@@Base+0xb1d4>  // b.any
   11bf4:	mov	x0, x20
   11bf8:	bl	6510 <_Py_Dealloc@plt>
   11bfc:	b	11c88 <PyInit__decimal@@Base+0xb1d4>
   11c00:	mov	x19, x20
   11c04:	b	11c88 <PyInit__decimal@@Base+0xb1d4>
   11c08:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   11c0c:	ldr	x23, [x8, #1496]
   11c10:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   11c14:	add	x0, x0, #0x0
   11c18:	mov	x1, xzr
   11c1c:	bl	6780 <PyObject_CallObject@plt>
   11c20:	cbz	x0, 11c84 <PyInit__decimal@@Base+0xb1d0>
   11c24:	ldp	q1, q0, [x23, #32]
   11c28:	ldr	q2, [x23, #16]
   11c2c:	mov	x21, x0
   11c30:	mov	x1, x21
   11c34:	stp	q1, q0, [x0, #32]
   11c38:	str	q2, [x0, #16]
   11c3c:	ldr	w8, [x23, #80]
   11c40:	stp	wzr, wzr, [x0, #44]
   11c44:	str	w8, [x0, #80]
   11c48:	ldr	x0, [x22, #1400]
   11c4c:	bl	65c0 <PyContextVar_Set@plt>
   11c50:	cbz	x0, 11c6c <PyInit__decimal@@Base+0xb1b8>
   11c54:	ldr	x8, [x0]
   11c58:	subs	x8, x8, #0x1
   11c5c:	str	x8, [x0]
   11c60:	b.ne	11b90 <PyInit__decimal@@Base+0xb0dc>  // b.any
   11c64:	bl	6510 <_Py_Dealloc@plt>
   11c68:	b	11b90 <PyInit__decimal@@Base+0xb0dc>
   11c6c:	ldr	x8, [x21]
   11c70:	subs	x8, x8, #0x1
   11c74:	str	x8, [x21]
   11c78:	b.ne	11c84 <PyInit__decimal@@Base+0xb1d0>  // b.any
   11c7c:	mov	x0, x21
   11c80:	bl	6510 <_Py_Dealloc@plt>
   11c84:	mov	x19, xzr
   11c88:	mov	x0, x19
   11c8c:	ldp	x20, x19, [sp, #48]
   11c90:	ldp	x22, x21, [sp, #32]
   11c94:	ldr	x23, [sp, #16]
   11c98:	ldp	x29, x30, [sp], #64
   11c9c:	ret
   11ca0:	stp	x29, x30, [sp, #-80]!
   11ca4:	str	x25, [sp, #16]
   11ca8:	stp	x24, x23, [sp, #32]
   11cac:	stp	x22, x21, [sp, #48]
   11cb0:	stp	x20, x19, [sp, #64]
   11cb4:	mov	x29, sp
   11cb8:	add	x20, x0, #0x18
   11cbc:	mov	x0, x20
   11cc0:	bl	252f8 <PyInit__decimal@@Base+0x1e844>
   11cc4:	cbz	x0, 11d60 <PyInit__decimal@@Base+0xb2ac>
   11cc8:	mov	x21, x0
   11ccc:	mov	x0, x20
   11cd0:	bl	22904 <PyInit__decimal@@Base+0x1be50>
   11cd4:	and	x0, x0, #0xff
   11cd8:	bl	6880 <PyLong_FromUnsignedLong@plt>
   11cdc:	mov	x19, x0
   11ce0:	cbz	x0, 11d6c <PyInit__decimal@@Base+0xb2b8>
   11ce4:	mov	x0, x21
   11ce8:	bl	227b4 <PyInit__decimal@@Base+0x1bd00>
   11cec:	cbz	w0, 11df0 <PyInit__decimal@@Base+0xb33c>
   11cf0:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   11cf4:	add	x0, x0, #0xaf
   11cf8:	bl	68a0 <PyUnicode_FromString@plt>
   11cfc:	mov	x20, x0
   11d00:	cbz	x0, 11d70 <PyInit__decimal@@Base+0xb2bc>
   11d04:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   11d08:	add	x0, x0, #0xb1
   11d0c:	mov	w1, wzr
   11d10:	bl	6710 <Py_BuildValue@plt>
   11d14:	cbz	x0, 11d70 <PyInit__decimal@@Base+0xb2bc>
   11d18:	mov	x22, x0
   11d1c:	mov	x23, xzr
   11d20:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   11d24:	ldr	x0, [x8, #1464]
   11d28:	mov	x1, x19
   11d2c:	mov	x2, x22
   11d30:	mov	x3, x20
   11d34:	mov	x4, xzr
   11d38:	bl	6790 <PyObject_CallFunctionObjArgs@plt>
   11d3c:	mov	x24, x0
   11d40:	mov	x0, x21
   11d44:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
   11d48:	cbz	x23, 11d80 <PyInit__decimal@@Base+0xb2cc>
   11d4c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   11d50:	ldr	x8, [x8, #1376]
   11d54:	mov	x0, x23
   11d58:	blr	x8
   11d5c:	b	11d80 <PyInit__decimal@@Base+0xb2cc>
   11d60:	bl	6520 <PyErr_NoMemory@plt>
   11d64:	mov	x24, xzr
   11d68:	b	11dd4 <PyInit__decimal@@Base+0xb320>
   11d6c:	mov	x20, xzr
   11d70:	mov	x0, x21
   11d74:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
   11d78:	mov	x22, xzr
   11d7c:	mov	x24, xzr
   11d80:	cbz	x19, 11d9c <PyInit__decimal@@Base+0xb2e8>
   11d84:	ldr	x8, [x19]
   11d88:	subs	x8, x8, #0x1
   11d8c:	str	x8, [x19]
   11d90:	b.ne	11d9c <PyInit__decimal@@Base+0xb2e8>  // b.any
   11d94:	mov	x0, x19
   11d98:	bl	6510 <_Py_Dealloc@plt>
   11d9c:	cbz	x22, 11db8 <PyInit__decimal@@Base+0xb304>
   11da0:	ldr	x8, [x22]
   11da4:	subs	x8, x8, #0x1
   11da8:	str	x8, [x22]
   11dac:	b.ne	11db8 <PyInit__decimal@@Base+0xb304>  // b.any
   11db0:	mov	x0, x22
   11db4:	bl	6510 <_Py_Dealloc@plt>
   11db8:	cbz	x20, 11dd4 <PyInit__decimal@@Base+0xb320>
   11dbc:	ldr	x8, [x20]
   11dc0:	subs	x8, x8, #0x1
   11dc4:	str	x8, [x20]
   11dc8:	b.ne	11dd4 <PyInit__decimal@@Base+0xb320>  // b.any
   11dcc:	mov	x0, x20
   11dd0:	bl	6510 <_Py_Dealloc@plt>
   11dd4:	mov	x0, x24
   11dd8:	ldp	x20, x19, [sp, #64]
   11ddc:	ldp	x22, x21, [sp, #48]
   11de0:	ldp	x24, x23, [sp, #32]
   11de4:	ldr	x25, [sp, #16]
   11de8:	ldp	x29, x30, [sp], #80
   11dec:	ret
   11df0:	mov	x0, x21
   11df4:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
   11df8:	cbz	w0, 11e2c <PyInit__decimal@@Base+0xb378>
   11dfc:	mov	x0, x21
   11e00:	bl	227e8 <PyInit__decimal@@Base+0x1bd34>
   11e04:	adrp	x8, 43000 <PyInit__decimal@@Base+0x3c54c>
   11e08:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   11e0c:	add	x8, x8, #0xc72
   11e10:	add	x9, x9, #0xda2
   11e14:	cmp	w0, #0x0
   11e18:	csel	x0, x9, x8, eq  // eq = none
   11e1c:	bl	68a0 <PyUnicode_FromString@plt>
   11e20:	mov	x20, x0
   11e24:	cbnz	x0, 11e3c <PyInit__decimal@@Base+0xb388>
   11e28:	b	11d70 <PyInit__decimal@@Base+0xb2bc>
   11e2c:	ldr	x0, [x20, #8]
   11e30:	bl	65e0 <PyLong_FromSsize_t@plt>
   11e34:	mov	x20, x0
   11e38:	cbz	x0, 11d70 <PyInit__decimal@@Base+0xb2bc>
   11e3c:	ldr	x8, [x21, #24]
   11e40:	cmp	x8, #0x1
   11e44:	b.lt	11eb0 <PyInit__decimal@@Base+0xb3fc>  // b.tstop
   11e48:	mov	x0, x21
   11e4c:	str	xzr, [x21, #8]
   11e50:	bl	22eac <PyInit__decimal@@Base+0x1c3f8>
   11e54:	mov	w1, #0x1                   	// #1
   11e58:	mov	x0, x21
   11e5c:	bl	1f8a4 <PyInit__decimal@@Base+0x18df0>
   11e60:	cbz	x0, 11ec0 <PyInit__decimal@@Base+0xb40c>
   11e64:	mov	x23, x0
   11e68:	bl	6420 <strlen@plt>
   11e6c:	mov	x24, x0
   11e70:	bl	66e0 <PyTuple_New@plt>
   11e74:	mov	x22, x0
   11e78:	cbz	x0, 11ec8 <PyInit__decimal@@Base+0xb414>
   11e7c:	cmp	x24, #0x1
   11e80:	b.lt	11d20 <PyInit__decimal@@Base+0xb26c>  // b.tstop
   11e84:	mov	x25, xzr
   11e88:	ldrb	w8, [x23, x25]
   11e8c:	sub	x0, x8, #0x30
   11e90:	bl	6620 <PyLong_FromLong@plt>
   11e94:	cbz	x0, 11ec8 <PyInit__decimal@@Base+0xb414>
   11e98:	add	x8, x22, x25, lsl #3
   11e9c:	add	x25, x25, #0x1
   11ea0:	cmp	x24, x25
   11ea4:	str	x0, [x8, #24]
   11ea8:	b.ne	11e88 <PyInit__decimal@@Base+0xb3d4>  // b.any
   11eac:	b	11d20 <PyInit__decimal@@Base+0xb26c>
   11eb0:	mov	x0, xzr
   11eb4:	bl	66e0 <PyTuple_New@plt>
   11eb8:	cbnz	x0, 11d18 <PyInit__decimal@@Base+0xb264>
   11ebc:	b	11d70 <PyInit__decimal@@Base+0xb2bc>
   11ec0:	bl	6520 <PyErr_NoMemory@plt>
   11ec4:	b	11d70 <PyInit__decimal@@Base+0xb2bc>
   11ec8:	mov	x0, x21
   11ecc:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
   11ed0:	mov	x24, xzr
   11ed4:	b	11d4c <PyInit__decimal@@Base+0xb298>
   11ed8:	sub	sp, sp, #0x50
   11edc:	stp	x29, x30, [sp, #16]
   11ee0:	str	x23, [sp, #32]
   11ee4:	stp	x22, x21, [sp, #48]
   11ee8:	stp	x20, x19, [sp, #64]
   11eec:	add	x29, sp, #0x10
   11ef0:	add	x20, x0, #0x18
   11ef4:	mov	x0, x20
   11ef8:	stur	wzr, [x29, #-4]
   11efc:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   11f00:	cbz	w0, 11f24 <PyInit__decimal@@Base+0xb470>
   11f04:	mov	x0, x20
   11f08:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
   11f0c:	cbz	w0, 11fc4 <PyInit__decimal@@Base+0xb510>
   11f10:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   11f14:	ldr	x8, [x8, #3928]
   11f18:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   11f1c:	add	x1, x1, #0xb5
   11f20:	b	11fd4 <PyInit__decimal@@Base+0xb520>
   11f24:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   11f28:	ldr	x0, [x21, #1400]
   11f2c:	add	x2, x29, #0x18
   11f30:	mov	x1, xzr
   11f34:	bl	6680 <PyContextVar_Get@plt>
   11f38:	tbnz	w0, #31, 11fdc <PyInit__decimal@@Base+0xb528>
   11f3c:	ldr	x19, [x29, #24]
   11f40:	cbz	x19, 11ffc <PyInit__decimal@@Base+0xb548>
   11f44:	ldr	x8, [x19]
   11f48:	subs	x8, x8, #0x1
   11f4c:	str	x8, [x19]
   11f50:	b.ne	11f5c <PyInit__decimal@@Base+0xb4a8>  // b.any
   11f54:	mov	x0, x19
   11f58:	bl	6510 <_Py_Dealloc@plt>
   11f5c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   11f60:	add	x0, x0, #0xe60
   11f64:	bl	6890 <_PyObject_New@plt>
   11f68:	mov	x21, x0
   11f6c:	cbz	x0, 11fe0 <PyInit__decimal@@Base+0xb52c>
   11f70:	mov	x23, x21
   11f74:	str	xzr, [x23, #32]!
   11f78:	mov	x8, #0xffffffffffffffff    	// #-1
   11f7c:	mov	w9, #0x30                  	// #48
   11f80:	mov	x22, x23
   11f84:	stur	x8, [x23, #-16]
   11f88:	strb	w9, [x22, #-8]!
   11f8c:	mov	w10, #0x4                   	// #4
   11f90:	add	x8, x23, #0x28
   11f94:	sub	x2, x29, #0x4
   11f98:	mov	x0, x22
   11f9c:	mov	x1, x20
   11fa0:	stp	xzr, xzr, [x23, #8]
   11fa4:	stp	x10, x8, [x23, #24]
   11fa8:	bl	24490 <PyInit__decimal@@Base+0x1d9dc>
   11fac:	cbz	w0, 12060 <PyInit__decimal@@Base+0xb5ac>
   11fb0:	mov	x0, x22
   11fb4:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   11fb8:	cbz	w0, 12080 <PyInit__decimal@@Base+0xb5cc>
   11fbc:	mov	x22, xzr
   11fc0:	b	12084 <PyInit__decimal@@Base+0xb5d0>
   11fc4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   11fc8:	ldr	x8, [x8, #3992]
   11fcc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   11fd0:	add	x1, x1, #0xd9
   11fd4:	ldr	x0, [x8]
   11fd8:	bl	6590 <PyErr_SetString@plt>
   11fdc:	mov	x21, xzr
   11fe0:	mov	x0, x21
   11fe4:	ldp	x20, x19, [sp, #64]
   11fe8:	ldp	x22, x21, [sp, #48]
   11fec:	ldr	x23, [sp, #32]
   11ff0:	ldp	x29, x30, [sp, #16]
   11ff4:	add	sp, sp, #0x50
   11ff8:	ret
   11ffc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12000:	ldr	x22, [x8, #1496]
   12004:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   12008:	add	x0, x0, #0x0
   1200c:	mov	x1, xzr
   12010:	bl	6780 <PyObject_CallObject@plt>
   12014:	cbz	x0, 11fdc <PyInit__decimal@@Base+0xb528>
   12018:	ldp	q1, q0, [x22, #32]
   1201c:	ldr	q2, [x22, #16]
   12020:	mov	x19, x0
   12024:	mov	x1, x19
   12028:	stp	q1, q0, [x0, #32]
   1202c:	str	q2, [x0, #16]
   12030:	ldr	w8, [x22, #80]
   12034:	stp	wzr, wzr, [x0, #44]
   12038:	str	w8, [x0, #80]
   1203c:	ldr	x0, [x21, #1400]
   12040:	bl	65c0 <PyContextVar_Set@plt>
   12044:	cbz	x0, 12180 <PyInit__decimal@@Base+0xb6cc>
   12048:	ldr	x8, [x0]
   1204c:	subs	x8, x8, #0x1
   12050:	str	x8, [x0]
   12054:	b.ne	11f44 <PyInit__decimal@@Base+0xb490>  // b.any
   12058:	bl	6510 <_Py_Dealloc@plt>
   1205c:	b	11f44 <PyInit__decimal@@Base+0xb490>
   12060:	ldr	x8, [x21]
   12064:	subs	x8, x8, #0x1
   12068:	str	x8, [x21]
   1206c:	b.ne	12078 <PyInit__decimal@@Base+0xb5c4>  // b.any
   12070:	mov	x0, x21
   12074:	bl	6510 <_Py_Dealloc@plt>
   12078:	bl	6520 <PyErr_NoMemory@plt>
   1207c:	b	11fdc <PyInit__decimal@@Base+0xb528>
   12080:	ldr	x22, [x23]
   12084:	mov	w2, #0x3                   	// #3
   12088:	mov	x0, x21
   1208c:	mov	x1, x19
   12090:	str	xzr, [x21, #32]
   12094:	bl	adc0 <PyInit__decimal@@Base+0x430c>
   12098:	ldr	x8, [x21]
   1209c:	mov	x19, x0
   120a0:	subs	x8, x8, #0x1
   120a4:	str	x8, [x21]
   120a8:	b.ne	120b4 <PyInit__decimal@@Base+0xb600>  // b.any
   120ac:	mov	x0, x21
   120b0:	bl	6510 <_Py_Dealloc@plt>
   120b4:	cbz	x19, 11fdc <PyInit__decimal@@Base+0xb528>
   120b8:	cmp	x22, #0x0
   120bc:	cneg	x0, x22, mi  // mi = first
   120c0:	bl	65e0 <PyLong_FromSsize_t@plt>
   120c4:	cbz	x0, 121c8 <PyInit__decimal@@Base+0xb714>
   120c8:	mov	x23, x0
   120cc:	mov	w0, #0xa                   	// #10
   120d0:	bl	6620 <PyLong_FromLong@plt>
   120d4:	mov	x21, x0
   120d8:	cbz	x0, 1219c <PyInit__decimal@@Base+0xb6e8>
   120dc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   120e0:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
   120e4:	ldr	x8, [x8, #1424]
   120e8:	ldr	x2, [x2, #4008]
   120ec:	mov	x0, x21
   120f0:	mov	x1, x23
   120f4:	blr	x8
   120f8:	ldr	x8, [x23]
   120fc:	mov	x20, x0
   12100:	subs	x8, x8, #0x1
   12104:	str	x8, [x23]
   12108:	b.eq	121a4 <PyInit__decimal@@Base+0xb6f0>  // b.none
   1210c:	ldr	x8, [x21]
   12110:	subs	x8, x8, #0x1
   12114:	str	x8, [x21]
   12118:	b.eq	121bc <PyInit__decimal@@Base+0xb708>  // b.none
   1211c:	cbz	x20, 121c8 <PyInit__decimal@@Base+0xb714>
   12120:	tbnz	x22, #63, 121d0 <PyInit__decimal@@Base+0xb71c>
   12124:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12128:	ldr	x8, [x8, #1408]
   1212c:	mov	x0, x19
   12130:	mov	x1, x20
   12134:	blr	x8
   12138:	ldr	x8, [x19]
   1213c:	mov	x23, x0
   12140:	subs	x8, x8, #0x1
   12144:	str	x8, [x19]
   12148:	b.ne	12154 <PyInit__decimal@@Base+0xb6a0>  // b.any
   1214c:	mov	x0, x19
   12150:	bl	6510 <_Py_Dealloc@plt>
   12154:	cbz	x23, 12254 <PyInit__decimal@@Base+0xb7a0>
   12158:	mov	w0, #0x1                   	// #1
   1215c:	bl	6620 <PyLong_FromLong@plt>
   12160:	mov	x22, x0
   12164:	cbz	x0, 12264 <PyInit__decimal@@Base+0xb7b0>
   12168:	mov	w0, #0x2                   	// #2
   1216c:	mov	x1, x23
   12170:	mov	x2, x22
   12174:	bl	69a0 <PyTuple_Pack@plt>
   12178:	mov	x21, x0
   1217c:	b	12268 <PyInit__decimal@@Base+0xb7b4>
   12180:	ldr	x8, [x19]
   12184:	subs	x8, x8, #0x1
   12188:	str	x8, [x19]
   1218c:	b.ne	11fdc <PyInit__decimal@@Base+0xb528>  // b.any
   12190:	mov	x0, x19
   12194:	bl	6510 <_Py_Dealloc@plt>
   12198:	b	11fdc <PyInit__decimal@@Base+0xb528>
   1219c:	mov	x22, xzr
   121a0:	b	12270 <PyInit__decimal@@Base+0xb7bc>
   121a4:	mov	x0, x23
   121a8:	bl	6510 <_Py_Dealloc@plt>
   121ac:	ldr	x8, [x21]
   121b0:	subs	x8, x8, #0x1
   121b4:	str	x8, [x21]
   121b8:	b.ne	1211c <PyInit__decimal@@Base+0xb668>  // b.any
   121bc:	mov	x0, x21
   121c0:	bl	6510 <_Py_Dealloc@plt>
   121c4:	cbnz	x20, 12120 <PyInit__decimal@@Base+0xb66c>
   121c8:	mov	x21, xzr
   121cc:	b	122ac <PyInit__decimal@@Base+0xb7f8>
   121d0:	mov	x0, x19
   121d4:	mov	x1, x20
   121d8:	bl	6640 <_PyLong_GCD@plt>
   121dc:	mov	x21, x0
   121e0:	cbz	x0, 12290 <PyInit__decimal@@Base+0xb7dc>
   121e4:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   121e8:	ldr	x8, [x22, #1416]
   121ec:	mov	x0, x19
   121f0:	mov	x1, x21
   121f4:	blr	x8
   121f8:	ldr	x8, [x19]
   121fc:	mov	x23, x0
   12200:	subs	x8, x8, #0x1
   12204:	str	x8, [x19]
   12208:	b.ne	12214 <PyInit__decimal@@Base+0xb760>  // b.any
   1220c:	mov	x0, x19
   12210:	bl	6510 <_Py_Dealloc@plt>
   12214:	ldr	x8, [x22, #1416]
   12218:	mov	x0, x20
   1221c:	mov	x1, x21
   12220:	blr	x8
   12224:	ldr	x8, [x20]
   12228:	mov	x22, x0
   1222c:	subs	x8, x8, #0x1
   12230:	str	x8, [x20]
   12234:	b.eq	122c8 <PyInit__decimal@@Base+0xb814>  // b.none
   12238:	ldr	x8, [x21]
   1223c:	subs	x8, x8, #0x1
   12240:	str	x8, [x21]
   12244:	b.eq	122e0 <PyInit__decimal@@Base+0xb82c>  // b.none
   12248:	mov	x21, xzr
   1224c:	cbnz	x23, 122f0 <PyInit__decimal@@Base+0xb83c>
   12250:	b	12324 <PyInit__decimal@@Base+0xb870>
   12254:	mov	x19, xzr
   12258:	mov	x22, xzr
   1225c:	mov	x21, xzr
   12260:	b	1226c <PyInit__decimal@@Base+0xb7b8>
   12264:	mov	x21, xzr
   12268:	mov	x19, x23
   1226c:	mov	x23, x20
   12270:	ldr	x8, [x23]
   12274:	subs	x8, x8, #0x1
   12278:	str	x8, [x23]
   1227c:	b.ne	12288 <PyInit__decimal@@Base+0xb7d4>  // b.any
   12280:	mov	x0, x23
   12284:	bl	6510 <_Py_Dealloc@plt>
   12288:	mov	x20, x22
   1228c:	cbz	x22, 122a8 <PyInit__decimal@@Base+0xb7f4>
   12290:	ldr	x8, [x20]
   12294:	subs	x8, x8, #0x1
   12298:	str	x8, [x20]
   1229c:	b.ne	122a8 <PyInit__decimal@@Base+0xb7f4>  // b.any
   122a0:	mov	x0, x20
   122a4:	bl	6510 <_Py_Dealloc@plt>
   122a8:	cbz	x19, 11fe0 <PyInit__decimal@@Base+0xb52c>
   122ac:	ldr	x8, [x19]
   122b0:	subs	x8, x8, #0x1
   122b4:	str	x8, [x19]
   122b8:	b.ne	11fe0 <PyInit__decimal@@Base+0xb52c>  // b.any
   122bc:	mov	x0, x19
   122c0:	bl	6510 <_Py_Dealloc@plt>
   122c4:	b	11fe0 <PyInit__decimal@@Base+0xb52c>
   122c8:	mov	x0, x20
   122cc:	bl	6510 <_Py_Dealloc@plt>
   122d0:	ldr	x8, [x21]
   122d4:	subs	x8, x8, #0x1
   122d8:	str	x8, [x21]
   122dc:	b.ne	12248 <PyInit__decimal@@Base+0xb794>  // b.any
   122e0:	mov	x0, x21
   122e4:	bl	6510 <_Py_Dealloc@plt>
   122e8:	mov	x21, xzr
   122ec:	cbz	x23, 12324 <PyInit__decimal@@Base+0xb870>
   122f0:	cbz	x22, 12324 <PyInit__decimal@@Base+0xb870>
   122f4:	mov	w0, #0x2                   	// #2
   122f8:	mov	x1, x23
   122fc:	mov	x2, x22
   12300:	bl	69a0 <PyTuple_Pack@plt>
   12304:	mov	x21, x0
   12308:	mov	x20, x22
   1230c:	mov	x19, x23
   12310:	ldr	x8, [x20]
   12314:	subs	x8, x8, #0x1
   12318:	str	x8, [x20]
   1231c:	b.ne	122a8 <PyInit__decimal@@Base+0xb7f4>  // b.any
   12320:	b	122a0 <PyInit__decimal@@Base+0xb7ec>
   12324:	mov	x19, x23
   12328:	mov	x20, x22
   1232c:	cbnz	x22, 12290 <PyInit__decimal@@Base+0xb7dc>
   12330:	b	122a8 <PyInit__decimal@@Base+0xb7f4>
   12334:	ldr	x8, [x0]
   12338:	add	x8, x8, #0x1
   1233c:	str	x8, [x0]
   12340:	ret
   12344:	sub	sp, sp, #0xa0
   12348:	stp	x29, x30, [sp, #80]
   1234c:	str	x25, [sp, #96]
   12350:	stp	x24, x23, [sp, #112]
   12354:	stp	x22, x21, [sp, #128]
   12358:	stp	x20, x19, [sp, #144]
   1235c:	add	x29, sp, #0x50
   12360:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   12364:	mov	x20, x0
   12368:	ldr	x0, [x22, #1400]
   1236c:	mov	x19, x1
   12370:	add	x2, sp, #0x10
   12374:	mov	x1, xzr
   12378:	stur	xzr, [x29, #-8]
   1237c:	str	wzr, [sp, #12]
   12380:	bl	6680 <PyContextVar_Get@plt>
   12384:	tbnz	w0, #31, 12678 <PyInit__decimal@@Base+0xbbc4>
   12388:	ldr	x21, [sp, #16]
   1238c:	cbz	x21, 123f0 <PyInit__decimal@@Base+0xb93c>
   12390:	ldr	x8, [x21]
   12394:	subs	x8, x8, #0x1
   12398:	str	x8, [x21]
   1239c:	b.ne	123a8 <PyInit__decimal@@Base+0xb8f4>  // b.any
   123a0:	mov	x0, x21
   123a4:	bl	6510 <_Py_Dealloc@plt>
   123a8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   123ac:	add	x1, x1, #0xab
   123b0:	sub	x2, x29, #0x10
   123b4:	sub	x3, x29, #0x8
   123b8:	mov	x0, x19
   123bc:	bl	6820 <PyArg_ParseTuple@plt>
   123c0:	cbz	w0, 12678 <PyInit__decimal@@Base+0xbbc4>
   123c4:	ldur	x0, [x29, #-16]
   123c8:	ldr	x8, [x0, #8]
   123cc:	ldrb	w8, [x8, #171]
   123d0:	tbnz	w8, #4, 12454 <PyInit__decimal@@Base+0xb9a0>
   123d4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   123d8:	ldr	x8, [x8, #3936]
   123dc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   123e0:	add	x1, x1, #0x102
   123e4:	ldr	x0, [x8]
   123e8:	bl	6590 <PyErr_SetString@plt>
   123ec:	b	12678 <PyInit__decimal@@Base+0xbbc4>
   123f0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   123f4:	ldr	x23, [x8, #1496]
   123f8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   123fc:	add	x0, x0, #0x0
   12400:	mov	x1, xzr
   12404:	bl	6780 <PyObject_CallObject@plt>
   12408:	cbz	x0, 12678 <PyInit__decimal@@Base+0xbbc4>
   1240c:	ldp	q1, q0, [x23, #32]
   12410:	ldr	q2, [x23, #16]
   12414:	mov	x21, x0
   12418:	mov	x1, x21
   1241c:	stp	q1, q0, [x0, #32]
   12420:	str	q2, [x0, #16]
   12424:	ldr	w8, [x23, #80]
   12428:	stp	wzr, wzr, [x0, #44]
   1242c:	str	w8, [x0, #80]
   12430:	ldr	x0, [x22, #1400]
   12434:	bl	65c0 <PyContextVar_Set@plt>
   12438:	cbz	x0, 124c4 <PyInit__decimal@@Base+0xba10>
   1243c:	ldr	x8, [x0]
   12440:	subs	x8, x8, #0x1
   12444:	str	x8, [x0]
   12448:	b.ne	12390 <PyInit__decimal@@Base+0xb8dc>  // b.any
   1244c:	bl	6510 <_Py_Dealloc@plt>
   12450:	b	12390 <PyInit__decimal@@Base+0xb8dc>
   12454:	mov	x1, sp
   12458:	bl	6910 <PyUnicode_AsUTF8AndSize@plt>
   1245c:	cbz	x0, 12678 <PyInit__decimal@@Base+0xbbc4>
   12460:	ldr	x22, [sp]
   12464:	mov	x19, x0
   12468:	cmp	x22, #0x1
   1246c:	b.lt	12478 <PyInit__decimal@@Base+0xb9c4>  // b.tstop
   12470:	ldrb	w8, [x19]
   12474:	cbz	w8, 12524 <PyInit__decimal@@Base+0xba70>
   12478:	mov	w25, wzr
   1247c:	ldr	w2, [x21, #80]
   12480:	add	x0, sp, #0x10
   12484:	mov	x1, x19
   12488:	bl	1fe98 <PyInit__decimal@@Base+0x193e4>
   1248c:	cbz	w0, 124e0 <PyInit__decimal@@Base+0xba2c>
   12490:	cbz	w25, 1249c <PyInit__decimal@@Base+0xb9e8>
   12494:	mov	w8, #0xff                  	// #255
   12498:	sturh	w8, [sp, #35]
   1249c:	ldur	x0, [x29, #-8]
   124a0:	cbz	x0, 12558 <PyInit__decimal@@Base+0xbaa4>
   124a4:	ldr	x8, [x0, #8]
   124a8:	ldrb	w8, [x8, #171]
   124ac:	tbnz	w8, #5, 125c8 <PyInit__decimal@@Base+0xbb14>
   124b0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   124b4:	ldr	x8, [x8, #3936]
   124b8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   124bc:	add	x1, x1, #0x12f
   124c0:	b	124f0 <PyInit__decimal@@Base+0xba3c>
   124c4:	ldr	x8, [x21]
   124c8:	subs	x8, x8, #0x1
   124cc:	str	x8, [x21]
   124d0:	b.ne	12678 <PyInit__decimal@@Base+0xbbc4>  // b.any
   124d4:	mov	x0, x21
   124d8:	bl	6510 <_Py_Dealloc@plt>
   124dc:	b	12678 <PyInit__decimal@@Base+0xbbc4>
   124e0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   124e4:	ldr	x8, [x8, #3928]
   124e8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   124ec:	add	x1, x1, #0x119
   124f0:	ldr	x0, [x8]
   124f4:	bl	6590 <PyErr_SetString@plt>
   124f8:	mov	x20, xzr
   124fc:	mov	x21, xzr
   12500:	cbz	w25, 1250c <PyInit__decimal@@Base+0xba58>
   12504:	mov	x0, x19
   12508:	bl	64a0 <PyMem_Free@plt>
   1250c:	cbz	x20, 1267c <PyInit__decimal@@Base+0xbbc8>
   12510:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12514:	ldr	x8, [x8, #1376]
   12518:	mov	x0, x20
   1251c:	blr	x8
   12520:	b	1267c <PyInit__decimal@@Base+0xbbc8>
   12524:	add	x0, x22, #0x1
   12528:	bl	6980 <PyMem_Malloc@plt>
   1252c:	cbz	x0, 12674 <PyInit__decimal@@Base+0xbbc0>
   12530:	mov	x1, x19
   12534:	mov	x2, x22
   12538:	mov	x23, x0
   1253c:	bl	63c0 <memcpy@plt>
   12540:	mov	w8, #0x5f                  	// #95
   12544:	mov	w25, #0x1                   	// #1
   12548:	mov	x19, x23
   1254c:	strb	wzr, [x23, x22]
   12550:	strb	w8, [x23]
   12554:	b	1247c <PyInit__decimal@@Base+0xb9c8>
   12558:	ldr	x22, [sp, #40]
   1255c:	mov	x0, x22
   12560:	bl	6420 <strlen@plt>
   12564:	cmp	x0, #0x1
   12568:	b.ls	125f0 <PyInit__decimal@@Base+0xbb3c>  // b.plast
   1256c:	add	x0, x29, #0x18
   12570:	mov	w2, #0x2                   	// #2
   12574:	mov	x1, x22
   12578:	bl	6440 <mbstowcs@plt>
   1257c:	cmp	x0, #0x1
   12580:	b.ne	126cc <PyInit__decimal@@Base+0xbc18>  // b.any
   12584:	add	x0, x29, #0x18
   12588:	mov	w1, #0x1                   	// #1
   1258c:	bl	64b0 <PyUnicode_FromWideChar@plt>
   12590:	cbz	x0, 124f8 <PyInit__decimal@@Base+0xba44>
   12594:	mov	x23, x0
   12598:	bl	6500 <PyUnicode_AsUTF8String@plt>
   1259c:	ldr	x8, [x23]
   125a0:	mov	x22, x0
   125a4:	subs	x8, x8, #0x1
   125a8:	str	x8, [x23]
   125ac:	b.ne	125b8 <PyInit__decimal@@Base+0xbb04>  // b.any
   125b0:	mov	x0, x23
   125b4:	bl	6510 <_Py_Dealloc@plt>
   125b8:	cbz	x22, 124f8 <PyInit__decimal@@Base+0xba44>
   125bc:	add	x8, x22, #0x20
   125c0:	str	x8, [sp, #40]
   125c4:	b	12600 <PyInit__decimal@@Base+0xbb4c>
   125c8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   125cc:	add	x1, x1, #0x150
   125d0:	bl	67b0 <PyDict_GetItemString@plt>
   125d4:	cbz	x0, 1269c <PyInit__decimal@@Base+0xbbe8>
   125d8:	bl	6500 <PyUnicode_AsUTF8String@plt>
   125dc:	cbz	x0, 124f8 <PyInit__decimal@@Base+0xba44>
   125e0:	mov	x22, x0
   125e4:	add	x8, x0, #0x20
   125e8:	str	x8, [sp, #40]
   125ec:	b	126a0 <PyInit__decimal@@Base+0xbbec>
   125f0:	b.ne	125fc <PyInit__decimal@@Base+0xbb48>  // b.any
   125f4:	ldrsb	w8, [x22]
   125f8:	tbnz	w8, #31, 1256c <PyInit__decimal@@Base+0xbab8>
   125fc:	mov	x22, xzr
   12600:	ldr	x23, [sp, #48]
   12604:	mov	x0, x23
   12608:	bl	6420 <strlen@plt>
   1260c:	cmp	x0, #0x1
   12610:	b.ls	126e0 <PyInit__decimal@@Base+0xbc2c>  // b.plast
   12614:	add	x0, x29, #0x18
   12618:	mov	w2, #0x2                   	// #2
   1261c:	mov	x1, x23
   12620:	bl	6440 <mbstowcs@plt>
   12624:	cmp	x0, #0x1
   12628:	b.ne	127a4 <PyInit__decimal@@Base+0xbcf0>  // b.any
   1262c:	add	x0, x29, #0x18
   12630:	mov	w1, #0x1                   	// #1
   12634:	bl	64b0 <PyUnicode_FromWideChar@plt>
   12638:	cbz	x0, 127bc <PyInit__decimal@@Base+0xbd08>
   1263c:	mov	x24, x0
   12640:	bl	6500 <PyUnicode_AsUTF8String@plt>
   12644:	ldr	x8, [x24]
   12648:	mov	x23, x0
   1264c:	subs	x8, x8, #0x1
   12650:	str	x8, [x24]
   12654:	b.ne	12660 <PyInit__decimal@@Base+0xbbac>  // b.any
   12658:	mov	x0, x24
   1265c:	bl	6510 <_Py_Dealloc@plt>
   12660:	cbz	x23, 127bc <PyInit__decimal@@Base+0xbd08>
   12664:	mov	x24, xzr
   12668:	add	x8, x23, #0x20
   1266c:	str	x8, [sp, #48]
   12670:	b	12738 <PyInit__decimal@@Base+0xbc84>
   12674:	bl	6520 <PyErr_NoMemory@plt>
   12678:	mov	x21, xzr
   1267c:	mov	x0, x21
   12680:	ldp	x20, x19, [sp, #144]
   12684:	ldp	x22, x21, [sp, #128]
   12688:	ldp	x24, x23, [sp, #112]
   1268c:	ldr	x25, [sp, #96]
   12690:	ldp	x29, x30, [sp, #80]
   12694:	add	sp, sp, #0xa0
   12698:	ret
   1269c:	mov	x22, xzr
   126a0:	ldur	x0, [x29, #-8]
   126a4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   126a8:	add	x1, x1, #0x15e
   126ac:	bl	67b0 <PyDict_GetItemString@plt>
   126b0:	cbz	x0, 126f8 <PyInit__decimal@@Base+0xbc44>
   126b4:	bl	6500 <PyUnicode_AsUTF8String@plt>
   126b8:	cbz	x0, 127bc <PyInit__decimal@@Base+0xbd08>
   126bc:	mov	x23, x0
   126c0:	add	x8, x0, #0x20
   126c4:	str	x8, [sp, #48]
   126c8:	b	126fc <PyInit__decimal@@Base+0xbc48>
   126cc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   126d0:	ldr	x8, [x8, #3928]
   126d4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   126d8:	add	x1, x1, #0x1c4
   126dc:	b	124f0 <PyInit__decimal@@Base+0xba3c>
   126e0:	b.ne	126ec <PyInit__decimal@@Base+0xbc38>  // b.any
   126e4:	ldrsb	w8, [x23]
   126e8:	tbnz	w8, #31, 12614 <PyInit__decimal@@Base+0xbb60>
   126ec:	mov	x23, xzr
   126f0:	mov	x24, xzr
   126f4:	b	12738 <PyInit__decimal@@Base+0xbc84>
   126f8:	mov	x23, xzr
   126fc:	ldur	x0, [x29, #-8]
   12700:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   12704:	add	x1, x1, #0x16c
   12708:	bl	67b0 <PyDict_GetItemString@plt>
   1270c:	cbz	x0, 12728 <PyInit__decimal@@Base+0xbc74>
   12710:	bl	6500 <PyUnicode_AsUTF8String@plt>
   12714:	cbz	x0, 127fc <PyInit__decimal@@Base+0xbd48>
   12718:	mov	x24, x0
   1271c:	add	x8, x0, #0x20
   12720:	str	x8, [sp, #56]
   12724:	b	1272c <PyInit__decimal@@Base+0xbc78>
   12728:	mov	x24, xzr
   1272c:	add	x0, sp, #0x10
   12730:	bl	1fe48 <PyInit__decimal@@Base+0x19394>
   12734:	tbnz	w0, #31, 127c8 <PyInit__decimal@@Base+0xbd14>
   12738:	add	x0, x20, #0x18
   1273c:	add	x2, x21, #0x10
   12740:	add	x1, sp, #0x10
   12744:	add	x3, sp, #0xc
   12748:	bl	2031c <PyInit__decimal@@Base+0x19868>
   1274c:	cbz	x0, 12788 <PyInit__decimal@@Base+0xbcd4>
   12750:	mov	x20, x0
   12754:	bl	6420 <strlen@plt>
   12758:	str	x0, [sp]
   1275c:	cbz	w25, 127e4 <PyInit__decimal@@Base+0xbd30>
   12760:	mov	x8, x20
   12764:	b	12770 <PyInit__decimal@@Base+0xbcbc>
   12768:	strb	wzr, [x8]
   1276c:	add	x8, x8, #0x1
   12770:	ldrb	w9, [x8]
   12774:	cmp	w9, #0xff
   12778:	b.eq	12768 <PyInit__decimal@@Base+0xbcb4>  // b.none
   1277c:	cbnz	w9, 1276c <PyInit__decimal@@Base+0xbcb8>
   12780:	ldr	x1, [sp]
   12784:	b	127e8 <PyInit__decimal@@Base+0xbd34>
   12788:	ldrb	w8, [sp, #13]
   1278c:	tbnz	w8, #1, 12808 <PyInit__decimal@@Base+0xbd54>
   12790:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   12794:	ldr	x8, [x8, #3928]
   12798:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1279c:	add	x1, x1, #0x18b
   127a0:	b	127d8 <PyInit__decimal@@Base+0xbd24>
   127a4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   127a8:	ldr	x8, [x8, #3928]
   127ac:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   127b0:	add	x1, x1, #0x1c4
   127b4:	ldr	x0, [x8]
   127b8:	bl	6590 <PyErr_SetString@plt>
   127bc:	mov	x21, xzr
   127c0:	mov	x20, xzr
   127c4:	b	1284c <PyInit__decimal@@Base+0xbd98>
   127c8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   127cc:	ldr	x8, [x8, #3928]
   127d0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   127d4:	add	x1, x1, #0x175
   127d8:	ldr	x0, [x8]
   127dc:	bl	6590 <PyErr_SetString@plt>
   127e0:	b	1280c <PyInit__decimal@@Base+0xbd58>
   127e4:	mov	x1, x0
   127e8:	mov	x0, x20
   127ec:	mov	x2, xzr
   127f0:	bl	67e0 <PyUnicode_DecodeUTF8@plt>
   127f4:	mov	x21, x0
   127f8:	b	12814 <PyInit__decimal@@Base+0xbd60>
   127fc:	mov	x20, xzr
   12800:	mov	x21, xzr
   12804:	b	12830 <PyInit__decimal@@Base+0xbd7c>
   12808:	bl	6520 <PyErr_NoMemory@plt>
   1280c:	mov	x21, xzr
   12810:	mov	x20, xzr
   12814:	cbz	x24, 12830 <PyInit__decimal@@Base+0xbd7c>
   12818:	ldr	x8, [x24]
   1281c:	subs	x8, x8, #0x1
   12820:	str	x8, [x24]
   12824:	b.ne	12830 <PyInit__decimal@@Base+0xbd7c>  // b.any
   12828:	mov	x0, x24
   1282c:	bl	6510 <_Py_Dealloc@plt>
   12830:	cbz	x23, 1284c <PyInit__decimal@@Base+0xbd98>
   12834:	ldr	x8, [x23]
   12838:	subs	x8, x8, #0x1
   1283c:	str	x8, [x23]
   12840:	b.ne	1284c <PyInit__decimal@@Base+0xbd98>  // b.any
   12844:	mov	x0, x23
   12848:	bl	6510 <_Py_Dealloc@plt>
   1284c:	cbz	x22, 12500 <PyInit__decimal@@Base+0xba4c>
   12850:	ldr	x8, [x22]
   12854:	subs	x8, x8, #0x1
   12858:	str	x8, [x22]
   1285c:	b.ne	12500 <PyInit__decimal@@Base+0xba4c>  // b.any
   12860:	mov	x0, x22
   12864:	bl	6510 <_Py_Dealloc@plt>
   12868:	b	12500 <PyInit__decimal@@Base+0xba4c>
   1286c:	stp	x29, x30, [sp, #-32]!
   12870:	stp	x20, x19, [sp, #16]
   12874:	mov	x29, sp
   12878:	mov	x20, x0
   1287c:	bl	7e24 <PyInit__decimal@@Base+0x1370>
   12880:	cbz	x0, 128c0 <PyInit__decimal@@Base+0xbe0c>
   12884:	ldr	x1, [x20, #8]
   12888:	mov	x19, x0
   1288c:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   12890:	add	x0, x0, #0x210
   12894:	mov	x2, x19
   12898:	bl	6710 <Py_BuildValue@plt>
   1289c:	ldr	x8, [x19]
   128a0:	mov	x20, x0
   128a4:	subs	x8, x8, #0x1
   128a8:	str	x8, [x19]
   128ac:	b.eq	128d4 <PyInit__decimal@@Base+0xbe20>  // b.none
   128b0:	mov	x0, x20
   128b4:	ldp	x20, x19, [sp, #16]
   128b8:	ldp	x29, x30, [sp], #32
   128bc:	ret
   128c0:	mov	x20, xzr
   128c4:	mov	x0, x20
   128c8:	ldp	x20, x19, [sp, #16]
   128cc:	ldp	x29, x30, [sp], #32
   128d0:	ret
   128d4:	mov	x0, x19
   128d8:	bl	6510 <_Py_Dealloc@plt>
   128dc:	mov	x0, x20
   128e0:	ldp	x20, x19, [sp, #16]
   128e4:	ldp	x29, x30, [sp], #32
   128e8:	ret
   128ec:	sub	sp, sp, #0x80
   128f0:	stp	x29, x30, [sp, #64]
   128f4:	str	x23, [sp, #80]
   128f8:	stp	x22, x21, [sp, #96]
   128fc:	stp	x20, x19, [sp, #112]
   12900:	add	x29, sp, #0x40
   12904:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   12908:	mov	x19, x0
   1290c:	ldr	x0, [x22, #1400]
   12910:	mov	x21, x1
   12914:	mov	x2, sp
   12918:	mov	x1, xzr
   1291c:	str	xzr, [x29, #24]
   12920:	stur	wzr, [x29, #-4]
   12924:	bl	6680 <PyContextVar_Get@plt>
   12928:	tbnz	w0, #31, 12afc <PyInit__decimal@@Base+0xc048>
   1292c:	ldr	x20, [sp]
   12930:	cbz	x20, 129c0 <PyInit__decimal@@Base+0xbf0c>
   12934:	ldr	x8, [x20]
   12938:	subs	x8, x8, #0x1
   1293c:	str	x8, [x20]
   12940:	b.ne	1294c <PyInit__decimal@@Base+0xbe98>  // b.any
   12944:	mov	x0, x20
   12948:	bl	6510 <_Py_Dealloc@plt>
   1294c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   12950:	add	x1, x1, #0xac
   12954:	add	x2, x29, #0x18
   12958:	mov	x0, x21
   1295c:	bl	6820 <PyArg_ParseTuple@plt>
   12960:	cbz	w0, 12afc <PyInit__decimal@@Base+0xc048>
   12964:	ldr	x0, [x29, #24]
   12968:	cbz	x0, 12a24 <PyInit__decimal@@Base+0xbf70>
   1296c:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
   12970:	ldr	q0, [x10, #1552]
   12974:	mov	w8, #0x1                   	// #1
   12978:	mov	w9, #0x90                  	// #144
   1297c:	sub	x11, x29, #0x10
   12980:	dup	v1.2d, x8
   12984:	stur	x8, [x29, #-16]
   12988:	strb	w9, [sp]
   1298c:	stur	q1, [sp, #24]
   12990:	stur	q0, [sp, #8]
   12994:	str	x11, [sp, #40]
   12998:	ldr	x8, [x0, #8]
   1299c:	ldrb	w8, [x8, #171]
   129a0:	tbnz	w8, #0, 12a3c <PyInit__decimal@@Base+0xbf88>
   129a4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   129a8:	ldr	x8, [x8, #3936]
   129ac:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   129b0:	add	x1, x1, #0x215
   129b4:	ldr	x0, [x8]
   129b8:	bl	6590 <PyErr_SetString@plt>
   129bc:	b	12afc <PyInit__decimal@@Base+0xc048>
   129c0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   129c4:	ldr	x23, [x8, #1496]
   129c8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   129cc:	add	x0, x0, #0x0
   129d0:	mov	x1, xzr
   129d4:	bl	6780 <PyObject_CallObject@plt>
   129d8:	cbz	x0, 12afc <PyInit__decimal@@Base+0xc048>
   129dc:	ldp	q1, q0, [x23, #32]
   129e0:	ldr	q2, [x23, #16]
   129e4:	mov	x20, x0
   129e8:	mov	x1, x20
   129ec:	stp	q1, q0, [x0, #32]
   129f0:	str	q2, [x0, #16]
   129f4:	ldr	w8, [x23, #80]
   129f8:	stp	wzr, wzr, [x0, #44]
   129fc:	str	w8, [x0, #80]
   12a00:	ldr	x0, [x22, #1400]
   12a04:	bl	65c0 <PyContextVar_Set@plt>
   12a08:	cbz	x0, 12ad8 <PyInit__decimal@@Base+0xc024>
   12a0c:	ldr	x8, [x0]
   12a10:	subs	x8, x8, #0x1
   12a14:	str	x8, [x0]
   12a18:	b.ne	12934 <PyInit__decimal@@Base+0xbe80>  // b.any
   12a1c:	bl	6510 <_Py_Dealloc@plt>
   12a20:	b	12934 <PyInit__decimal@@Base+0xbe80>
   12a24:	mov	w2, #0x6                   	// #6
   12a28:	mov	x0, x19
   12a2c:	mov	x1, x20
   12a30:	bl	adc0 <PyInit__decimal@@Base+0x430c>
   12a34:	mov	x21, x0
   12a38:	b	12b00 <PyInit__decimal@@Base+0xc04c>
   12a3c:	bl	6630 <PyLong_AsSsize_t@plt>
   12a40:	mov	x22, x0
   12a44:	cmn	x0, #0x1
   12a48:	b.eq	12af4 <PyInit__decimal@@Base+0xc040>  // b.none
   12a4c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   12a50:	add	x0, x0, #0xe60
   12a54:	bl	6890 <_PyObject_New@plt>
   12a58:	mov	x21, x0
   12a5c:	cbz	x0, 12b00 <PyInit__decimal@@Base+0xc04c>
   12a60:	mov	w8, #0x30                  	// #48
   12a64:	mov	x0, x21
   12a68:	strb	w8, [x0, #24]!
   12a6c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   12a70:	cmp	x22, x8
   12a74:	mov	x8, #0xffffffffffffffff    	// #-1
   12a78:	stur	x8, [x0, #-8]
   12a7c:	mov	w8, #0x4                   	// #4
   12a80:	stp	xzr, x8, [x0, #24]
   12a84:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   12a88:	add	x1, x19, #0x18
   12a8c:	csneg	x8, x8, x22, eq  // eq = none
   12a90:	add	x9, x0, #0x30
   12a94:	add	x3, x20, #0x10
   12a98:	mov	x2, sp
   12a9c:	sub	x4, x29, #0x4
   12aa0:	stp	xzr, xzr, [x0, #8]
   12aa4:	str	x9, [x0, #40]
   12aa8:	str	x8, [sp, #8]
   12aac:	bl	363d8 <PyInit__decimal@@Base+0x2f924>
   12ab0:	ldur	w1, [x29, #-4]
   12ab4:	mov	x0, x20
   12ab8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   12abc:	cbz	w0, 12b00 <PyInit__decimal@@Base+0xc04c>
   12ac0:	ldr	x8, [x21]
   12ac4:	subs	x8, x8, #0x1
   12ac8:	str	x8, [x21]
   12acc:	b.ne	12afc <PyInit__decimal@@Base+0xc048>  // b.any
   12ad0:	mov	x0, x21
   12ad4:	b	12aec <PyInit__decimal@@Base+0xc038>
   12ad8:	ldr	x8, [x20]
   12adc:	subs	x8, x8, #0x1
   12ae0:	str	x8, [x20]
   12ae4:	b.ne	12afc <PyInit__decimal@@Base+0xc048>  // b.any
   12ae8:	mov	x0, x20
   12aec:	bl	6510 <_Py_Dealloc@plt>
   12af0:	b	12afc <PyInit__decimal@@Base+0xc048>
   12af4:	bl	6720 <PyErr_Occurred@plt>
   12af8:	cbz	x0, 12a4c <PyInit__decimal@@Base+0xbf98>
   12afc:	mov	x21, xzr
   12b00:	mov	x0, x21
   12b04:	ldp	x20, x19, [sp, #112]
   12b08:	ldp	x22, x21, [sp, #96]
   12b0c:	ldr	x23, [sp, #80]
   12b10:	ldp	x29, x30, [sp, #64]
   12b14:	add	sp, sp, #0x80
   12b18:	ret
   12b1c:	sub	sp, sp, #0x40
   12b20:	stp	x29, x30, [sp, #16]
   12b24:	stp	x22, x21, [sp, #32]
   12b28:	stp	x20, x19, [sp, #48]
   12b2c:	add	x29, sp, #0x10
   12b30:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   12b34:	ldr	x8, [x21, #1400]
   12b38:	mov	x19, x0
   12b3c:	add	x2, sp, #0x8
   12b40:	mov	x1, xzr
   12b44:	mov	x0, x8
   12b48:	bl	6680 <PyContextVar_Get@plt>
   12b4c:	tbnz	w0, #31, 12c00 <PyInit__decimal@@Base+0xc14c>
   12b50:	ldr	x20, [sp, #8]
   12b54:	cbz	x20, 12b84 <PyInit__decimal@@Base+0xc0d0>
   12b58:	ldr	x8, [x20]
   12b5c:	subs	x8, x8, #0x1
   12b60:	str	x8, [x20]
   12b64:	b.ne	12b70 <PyInit__decimal@@Base+0xc0bc>  // b.any
   12b68:	mov	x0, x20
   12b6c:	bl	6510 <_Py_Dealloc@plt>
   12b70:	mov	w2, #0x2                   	// #2
   12b74:	mov	x0, x19
   12b78:	mov	x1, x20
   12b7c:	bl	adc0 <PyInit__decimal@@Base+0x430c>
   12b80:	b	12c04 <PyInit__decimal@@Base+0xc150>
   12b84:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12b88:	ldr	x22, [x8, #1496]
   12b8c:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   12b90:	add	x0, x0, #0x0
   12b94:	mov	x1, xzr
   12b98:	bl	6780 <PyObject_CallObject@plt>
   12b9c:	cbz	x0, 12c00 <PyInit__decimal@@Base+0xc14c>
   12ba0:	ldp	q1, q0, [x22, #32]
   12ba4:	ldr	q2, [x22, #16]
   12ba8:	mov	x20, x0
   12bac:	mov	x1, x20
   12bb0:	stp	q1, q0, [x0, #32]
   12bb4:	str	q2, [x0, #16]
   12bb8:	ldr	w8, [x22, #80]
   12bbc:	stp	wzr, wzr, [x0, #44]
   12bc0:	str	w8, [x0, #80]
   12bc4:	ldr	x0, [x21, #1400]
   12bc8:	bl	65c0 <PyContextVar_Set@plt>
   12bcc:	cbz	x0, 12be8 <PyInit__decimal@@Base+0xc134>
   12bd0:	ldr	x8, [x0]
   12bd4:	subs	x8, x8, #0x1
   12bd8:	str	x8, [x0]
   12bdc:	b.ne	12b58 <PyInit__decimal@@Base+0xc0a4>  // b.any
   12be0:	bl	6510 <_Py_Dealloc@plt>
   12be4:	b	12b58 <PyInit__decimal@@Base+0xc0a4>
   12be8:	ldr	x8, [x20]
   12bec:	subs	x8, x8, #0x1
   12bf0:	str	x8, [x20]
   12bf4:	b.ne	12c00 <PyInit__decimal@@Base+0xc14c>  // b.any
   12bf8:	mov	x0, x20
   12bfc:	bl	6510 <_Py_Dealloc@plt>
   12c00:	mov	x0, xzr
   12c04:	ldp	x20, x19, [sp, #48]
   12c08:	ldp	x22, x21, [sp, #32]
   12c0c:	ldp	x29, x30, [sp, #16]
   12c10:	add	sp, sp, #0x40
   12c14:	ret
   12c18:	sub	sp, sp, #0x40
   12c1c:	stp	x29, x30, [sp, #16]
   12c20:	stp	x22, x21, [sp, #32]
   12c24:	stp	x20, x19, [sp, #48]
   12c28:	add	x29, sp, #0x10
   12c2c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   12c30:	ldr	x8, [x21, #1400]
   12c34:	mov	x19, x0
   12c38:	add	x2, sp, #0x8
   12c3c:	mov	x1, xzr
   12c40:	mov	x0, x8
   12c44:	bl	6680 <PyContextVar_Get@plt>
   12c48:	tbnz	w0, #31, 12cfc <PyInit__decimal@@Base+0xc248>
   12c4c:	ldr	x20, [sp, #8]
   12c50:	cbz	x20, 12c80 <PyInit__decimal@@Base+0xc1cc>
   12c54:	ldr	x8, [x20]
   12c58:	subs	x8, x8, #0x1
   12c5c:	str	x8, [x20]
   12c60:	b.ne	12c6c <PyInit__decimal@@Base+0xc1b8>  // b.any
   12c64:	mov	x0, x20
   12c68:	bl	6510 <_Py_Dealloc@plt>
   12c6c:	mov	w2, #0x3                   	// #3
   12c70:	mov	x0, x19
   12c74:	mov	x1, x20
   12c78:	bl	adc0 <PyInit__decimal@@Base+0x430c>
   12c7c:	b	12d00 <PyInit__decimal@@Base+0xc24c>
   12c80:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12c84:	ldr	x22, [x8, #1496]
   12c88:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   12c8c:	add	x0, x0, #0x0
   12c90:	mov	x1, xzr
   12c94:	bl	6780 <PyObject_CallObject@plt>
   12c98:	cbz	x0, 12cfc <PyInit__decimal@@Base+0xc248>
   12c9c:	ldp	q1, q0, [x22, #32]
   12ca0:	ldr	q2, [x22, #16]
   12ca4:	mov	x20, x0
   12ca8:	mov	x1, x20
   12cac:	stp	q1, q0, [x0, #32]
   12cb0:	str	q2, [x0, #16]
   12cb4:	ldr	w8, [x22, #80]
   12cb8:	stp	wzr, wzr, [x0, #44]
   12cbc:	str	w8, [x0, #80]
   12cc0:	ldr	x0, [x21, #1400]
   12cc4:	bl	65c0 <PyContextVar_Set@plt>
   12cc8:	cbz	x0, 12ce4 <PyInit__decimal@@Base+0xc230>
   12ccc:	ldr	x8, [x0]
   12cd0:	subs	x8, x8, #0x1
   12cd4:	str	x8, [x0]
   12cd8:	b.ne	12c54 <PyInit__decimal@@Base+0xc1a0>  // b.any
   12cdc:	bl	6510 <_Py_Dealloc@plt>
   12ce0:	b	12c54 <PyInit__decimal@@Base+0xc1a0>
   12ce4:	ldr	x8, [x20]
   12ce8:	subs	x8, x8, #0x1
   12cec:	str	x8, [x20]
   12cf0:	b.ne	12cfc <PyInit__decimal@@Base+0xc248>  // b.any
   12cf4:	mov	x0, x20
   12cf8:	bl	6510 <_Py_Dealloc@plt>
   12cfc:	mov	x0, xzr
   12d00:	ldp	x20, x19, [sp, #48]
   12d04:	ldp	x22, x21, [sp, #32]
   12d08:	ldp	x29, x30, [sp, #16]
   12d0c:	add	sp, sp, #0x40
   12d10:	ret
   12d14:	sub	sp, sp, #0x40
   12d18:	stp	x29, x30, [sp, #16]
   12d1c:	stp	x22, x21, [sp, #32]
   12d20:	stp	x20, x19, [sp, #48]
   12d24:	add	x29, sp, #0x10
   12d28:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   12d2c:	ldr	x8, [x21, #1400]
   12d30:	mov	x19, x0
   12d34:	add	x2, sp, #0x8
   12d38:	mov	x1, xzr
   12d3c:	mov	x0, x8
   12d40:	bl	6680 <PyContextVar_Get@plt>
   12d44:	tbnz	w0, #31, 12df8 <PyInit__decimal@@Base+0xc344>
   12d48:	ldr	x20, [sp, #8]
   12d4c:	cbz	x20, 12d7c <PyInit__decimal@@Base+0xc2c8>
   12d50:	ldr	x8, [x20]
   12d54:	subs	x8, x8, #0x1
   12d58:	str	x8, [x20]
   12d5c:	b.ne	12d68 <PyInit__decimal@@Base+0xc2b4>  // b.any
   12d60:	mov	x0, x20
   12d64:	bl	6510 <_Py_Dealloc@plt>
   12d68:	mov	w2, #0x1                   	// #1
   12d6c:	mov	x0, x19
   12d70:	mov	x1, x20
   12d74:	bl	adc0 <PyInit__decimal@@Base+0x430c>
   12d78:	b	12dfc <PyInit__decimal@@Base+0xc348>
   12d7c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12d80:	ldr	x22, [x8, #1496]
   12d84:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   12d88:	add	x0, x0, #0x0
   12d8c:	mov	x1, xzr
   12d90:	bl	6780 <PyObject_CallObject@plt>
   12d94:	cbz	x0, 12df8 <PyInit__decimal@@Base+0xc344>
   12d98:	ldp	q1, q0, [x22, #32]
   12d9c:	ldr	q2, [x22, #16]
   12da0:	mov	x20, x0
   12da4:	mov	x1, x20
   12da8:	stp	q1, q0, [x0, #32]
   12dac:	str	q2, [x0, #16]
   12db0:	ldr	w8, [x22, #80]
   12db4:	stp	wzr, wzr, [x0, #44]
   12db8:	str	w8, [x0, #80]
   12dbc:	ldr	x0, [x21, #1400]
   12dc0:	bl	65c0 <PyContextVar_Set@plt>
   12dc4:	cbz	x0, 12de0 <PyInit__decimal@@Base+0xc32c>
   12dc8:	ldr	x8, [x0]
   12dcc:	subs	x8, x8, #0x1
   12dd0:	str	x8, [x0]
   12dd4:	b.ne	12d50 <PyInit__decimal@@Base+0xc29c>  // b.any
   12dd8:	bl	6510 <_Py_Dealloc@plt>
   12ddc:	b	12d50 <PyInit__decimal@@Base+0xc29c>
   12de0:	ldr	x8, [x20]
   12de4:	subs	x8, x8, #0x1
   12de8:	str	x8, [x20]
   12dec:	b.ne	12df8 <PyInit__decimal@@Base+0xc344>  // b.any
   12df0:	mov	x0, x20
   12df4:	bl	6510 <_Py_Dealloc@plt>
   12df8:	mov	x0, xzr
   12dfc:	ldp	x20, x19, [sp, #48]
   12e00:	ldp	x22, x21, [sp, #32]
   12e04:	ldp	x29, x30, [sp, #16]
   12e08:	add	sp, sp, #0x40
   12e0c:	ret
   12e10:	str	d8, [sp, #-32]!
   12e14:	stp	x29, x30, [sp, #8]
   12e18:	str	x19, [sp, #24]
   12e1c:	mov	x29, sp
   12e20:	bl	a39c <PyInit__decimal@@Base+0x38e8>
   12e24:	cbz	x0, 12e70 <PyInit__decimal@@Base+0xc3bc>
   12e28:	mov	x19, x0
   12e2c:	bl	6800 <PyFloat_AsDouble@plt>
   12e30:	ldr	x8, [x19]
   12e34:	mov	v8.16b, v0.16b
   12e38:	subs	x8, x8, #0x1
   12e3c:	str	x8, [x19]
   12e40:	b.eq	12e54 <PyInit__decimal@@Base+0xc3a0>  // b.none
   12e44:	fmov	d0, #-1.000000000000000000e+00
   12e48:	fcmp	d8, d0
   12e4c:	b.eq	12e68 <PyInit__decimal@@Base+0xc3b4>  // b.none
   12e50:	b	12e84 <PyInit__decimal@@Base+0xc3d0>
   12e54:	mov	x0, x19
   12e58:	bl	6510 <_Py_Dealloc@plt>
   12e5c:	fmov	d0, #-1.000000000000000000e+00
   12e60:	fcmp	d8, d0
   12e64:	b.ne	12e84 <PyInit__decimal@@Base+0xc3d0>  // b.any
   12e68:	bl	6720 <PyErr_Occurred@plt>
   12e6c:	cbz	x0, 12e84 <PyInit__decimal@@Base+0xc3d0>
   12e70:	ldr	x19, [sp, #24]
   12e74:	ldp	x29, x30, [sp, #8]
   12e78:	mov	x0, xzr
   12e7c:	ldr	d8, [sp], #32
   12e80:	ret
   12e84:	ldr	x19, [sp, #24]
   12e88:	ldp	x29, x30, [sp, #8]
   12e8c:	fmov	d1, xzr
   12e90:	mov	v0.16b, v8.16b
   12e94:	ldr	d8, [sp], #32
   12e98:	b	6940 <PyComplex_FromDoubles@plt>
   12e9c:	stp	x29, x30, [sp, #-32]!
   12ea0:	stp	x20, x19, [sp, #16]
   12ea4:	mov	x29, sp
   12ea8:	ldr	x8, [x0, #8]
   12eac:	add	x20, x0, #0x18
   12eb0:	mov	x0, x20
   12eb4:	ldr	x19, [x8, #32]
   12eb8:	bl	22948 <PyInit__decimal@@Base+0x1be94>
   12ebc:	cbz	w0, 12ec8 <PyInit__decimal@@Base+0xc414>
   12ec0:	ldr	x8, [x20, #32]
   12ec4:	add	x19, x19, x8, lsl #3
   12ec8:	mov	x0, x19
   12ecc:	ldp	x20, x19, [sp, #16]
   12ed0:	ldp	x29, x30, [sp], #32
   12ed4:	b	65e0 <PyLong_FromSsize_t@plt>
   12ed8:	stp	x29, x30, [sp, #-80]!
   12edc:	stp	x26, x25, [sp, #16]
   12ee0:	stp	x24, x23, [sp, #32]
   12ee4:	stp	x22, x21, [sp, #48]
   12ee8:	stp	x20, x19, [sp, #64]
   12eec:	mov	x29, sp
   12ef0:	ldr	x8, [x0, #8]
   12ef4:	ldrb	w8, [x8, #171]
   12ef8:	tbnz	w8, #4, 12f1c <PyInit__decimal@@Base+0xc468>
   12efc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   12f00:	ldr	x8, [x8, #3936]
   12f04:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   12f08:	add	x1, x1, #0xfb6
   12f0c:	ldr	x0, [x8]
   12f10:	bl	6590 <PyErr_SetString@plt>
   12f14:	mov	w0, #0xffffffff            	// #-1
   12f18:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   12f1c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   12f20:	ldr	x1, [x8, #1520]
   12f24:	mov	x19, x0
   12f28:	cmp	x1, x0
   12f2c:	b.eq	13024 <PyInit__decimal@@Base+0xc570>  // b.none
   12f30:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
   12f34:	ldr	x8, [x26, #1528]
   12f38:	cmp	x8, x19
   12f3c:	b.eq	1302c <PyInit__decimal@@Base+0xc578>  // b.none
   12f40:	adrp	x25, 59000 <PyInit__decimal@@Base+0x5254c>
   12f44:	ldr	x8, [x25, #1536]
   12f48:	cmp	x8, x19
   12f4c:	b.eq	13034 <PyInit__decimal@@Base+0xc580>  // b.none
   12f50:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   12f54:	ldr	x8, [x24, #1544]
   12f58:	cmp	x8, x19
   12f5c:	b.eq	1303c <PyInit__decimal@@Base+0xc588>  // b.none
   12f60:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   12f64:	ldr	x8, [x23, #1552]
   12f68:	cmp	x8, x19
   12f6c:	b.eq	13044 <PyInit__decimal@@Base+0xc590>  // b.none
   12f70:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   12f74:	ldr	x8, [x22, #1560]
   12f78:	cmp	x8, x19
   12f7c:	b.eq	1304c <PyInit__decimal@@Base+0xc598>  // b.none
   12f80:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   12f84:	ldr	x8, [x21, #1568]
   12f88:	cmp	x8, x19
   12f8c:	b.eq	13054 <PyInit__decimal@@Base+0xc5a0>  // b.none
   12f90:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   12f94:	ldr	x8, [x20, #1576]
   12f98:	cmp	x8, x19
   12f9c:	b.eq	1301c <PyInit__decimal@@Base+0xc568>  // b.none
   12fa0:	mov	x0, x19
   12fa4:	bl	6840 <PyUnicode_Compare@plt>
   12fa8:	cbz	w0, 13058 <PyInit__decimal@@Base+0xc5a4>
   12fac:	ldr	x1, [x26, #1528]
   12fb0:	mov	x0, x19
   12fb4:	bl	6840 <PyUnicode_Compare@plt>
   12fb8:	cbz	w0, 1302c <PyInit__decimal@@Base+0xc578>
   12fbc:	ldr	x1, [x25, #1536]
   12fc0:	mov	x0, x19
   12fc4:	bl	6840 <PyUnicode_Compare@plt>
   12fc8:	cbz	w0, 13034 <PyInit__decimal@@Base+0xc580>
   12fcc:	ldr	x1, [x24, #1544]
   12fd0:	mov	x0, x19
   12fd4:	bl	6840 <PyUnicode_Compare@plt>
   12fd8:	cbz	w0, 1303c <PyInit__decimal@@Base+0xc588>
   12fdc:	ldr	x1, [x23, #1552]
   12fe0:	mov	x0, x19
   12fe4:	bl	6840 <PyUnicode_Compare@plt>
   12fe8:	cbz	w0, 13044 <PyInit__decimal@@Base+0xc590>
   12fec:	ldr	x1, [x22, #1560]
   12ff0:	mov	x0, x19
   12ff4:	bl	6840 <PyUnicode_Compare@plt>
   12ff8:	cbz	w0, 1304c <PyInit__decimal@@Base+0xc598>
   12ffc:	ldr	x1, [x21, #1568]
   13000:	mov	x0, x19
   13004:	bl	6840 <PyUnicode_Compare@plt>
   13008:	cbz	w0, 13054 <PyInit__decimal@@Base+0xc5a0>
   1300c:	ldr	x1, [x20, #1576]
   13010:	mov	x0, x19
   13014:	bl	6840 <PyUnicode_Compare@plt>
   13018:	cbnz	w0, 12efc <PyInit__decimal@@Base+0xc448>
   1301c:	mov	w0, #0x7                   	// #7
   13020:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   13024:	mov	w0, wzr
   13028:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   1302c:	mov	w0, #0x1                   	// #1
   13030:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   13034:	mov	w0, #0x2                   	// #2
   13038:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   1303c:	mov	w0, #0x3                   	// #3
   13040:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   13044:	mov	w0, #0x4                   	// #4
   13048:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   1304c:	mov	w0, #0x5                   	// #5
   13050:	b	13058 <PyInit__decimal@@Base+0xc5a4>
   13054:	mov	w0, #0x6                   	// #6
   13058:	ldp	x20, x19, [sp, #64]
   1305c:	ldp	x22, x21, [sp, #48]
   13060:	ldp	x24, x23, [sp, #32]
   13064:	ldp	x26, x25, [sp, #16]
   13068:	ldp	x29, x30, [sp], #80
   1306c:	ret
   13070:	ldr	x8, [x0]
   13074:	add	x8, x8, #0x1
   13078:	str	x8, [x0]
   1307c:	ret
   13080:	stp	x29, x30, [sp, #-48]!
   13084:	str	x21, [sp, #16]
   13088:	stp	x20, x19, [sp, #32]
   1308c:	mov	x29, sp
   13090:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   13094:	add	x0, x0, #0xe60
   13098:	bl	6890 <_PyObject_New@plt>
   1309c:	mov	x19, x0
   130a0:	cbz	x0, 130ec <PyInit__decimal@@Base+0xc638>
   130a4:	mov	x21, x19
   130a8:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
   130ac:	str	xzr, [x21, #72]!
   130b0:	ldr	q0, [x10, #1536]
   130b4:	mov	x8, #0xffffffffffffffff    	// #-1
   130b8:	mov	w9, #0x30                  	// #48
   130bc:	mov	x20, x21
   130c0:	stur	x8, [x21, #-56]
   130c4:	strb	w9, [x20, #-48]!
   130c8:	mov	x0, x20
   130cc:	mov	w1, wzr
   130d0:	stp	xzr, xzr, [x21, #-40]
   130d4:	stur	x21, [x21, #-8]
   130d8:	stur	q0, [x21, #-24]
   130dc:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
   130e0:	mov	x0, x20
   130e4:	stur	xzr, [x21, #-40]
   130e8:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
   130ec:	mov	x0, x19
   130f0:	ldp	x20, x19, [sp, #32]
   130f4:	ldr	x21, [sp, #16]
   130f8:	ldp	x29, x30, [sp], #48
   130fc:	ret
   13100:	stp	x29, x30, [sp, #-80]!
   13104:	stp	x26, x25, [sp, #16]
   13108:	stp	x24, x23, [sp, #32]
   1310c:	stp	x22, x21, [sp, #48]
   13110:	stp	x20, x19, [sp, #64]
   13114:	mov	x29, sp
   13118:	ldr	w23, [x0, #32]
   1311c:	mov	w19, w2
   13120:	mov	x20, x0
   13124:	mov	w21, w1
   13128:	tbnz	w23, #7, 13140 <PyInit__decimal@@Base+0xc68c>
   1312c:	mov	x0, x20
   13130:	bl	6400 <_PyUnicode_Ready@plt>
   13134:	cmn	w0, #0x1
   13138:	b.eq	131d0 <PyInit__decimal@@Base+0xc71c>  // b.none
   1313c:	ldr	w23, [x20, #32]
   13140:	tbnz	w23, #5, 1314c <PyInit__decimal@@Base+0xc698>
   13144:	ldr	x22, [x20, #72]
   13148:	b	1315c <PyInit__decimal@@Base+0xc6a8>
   1314c:	add	x8, x20, #0x30
   13150:	add	x9, x20, #0x48
   13154:	tst	w23, #0x40
   13158:	csel	x22, x9, x8, eq  // eq = none
   1315c:	ldr	x25, [x20, #16]
   13160:	add	x0, x25, #0x1
   13164:	bl	6980 <PyMem_Malloc@plt>
   13168:	mov	x20, x0
   1316c:	cbz	x0, 131c8 <PyInit__decimal@@Base+0xc714>
   13170:	ubfx	w23, w23, #2, #3
   13174:	cbz	w21, 132a0 <PyInit__decimal@@Base+0xc7ec>
   13178:	cmp	w23, #0x1
   1317c:	b.eq	131d8 <PyInit__decimal@@Base+0xc724>  // b.none
   13180:	cmp	w23, #0x2
   13184:	b.ne	13218 <PyInit__decimal@@Base+0xc764>  // b.any
   13188:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   1318c:	ldr	x24, [x24, #3880]
   13190:	sub	x21, x22, #0x2
   13194:	b	131a4 <PyInit__decimal@@Base+0xc6f0>
   13198:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   1319c:	mov	x25, x26
   131a0:	cbz	w0, 13254 <PyInit__decimal@@Base+0xc7a0>
   131a4:	subs	x26, x25, #0x1
   131a8:	b.lt	132a0 <PyInit__decimal@@Base+0xc7ec>  // b.tstop
   131ac:	ldrh	w0, [x21, x25, lsl #1]
   131b0:	cmp	w0, #0x80
   131b4:	b.cs	13198 <PyInit__decimal@@Base+0xc6e4>  // b.hs, b.nlast
   131b8:	ldrb	w8, [x24, w0, uxtw]
   131bc:	mov	x25, x26
   131c0:	cbnz	w8, 131a4 <PyInit__decimal@@Base+0xc6f0>
   131c4:	b	13254 <PyInit__decimal@@Base+0xc7a0>
   131c8:	bl	6520 <PyErr_NoMemory@plt>
   131cc:	b	134a0 <PyInit__decimal@@Base+0xc9ec>
   131d0:	mov	x20, xzr
   131d4:	b	134a0 <PyInit__decimal@@Base+0xc9ec>
   131d8:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   131dc:	ldr	x24, [x24, #3880]
   131e0:	sub	x21, x22, #0x1
   131e4:	b	131f4 <PyInit__decimal@@Base+0xc740>
   131e8:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   131ec:	mov	x25, x26
   131f0:	cbz	w0, 13254 <PyInit__decimal@@Base+0xc7a0>
   131f4:	subs	x26, x25, #0x1
   131f8:	b.lt	132a0 <PyInit__decimal@@Base+0xc7ec>  // b.tstop
   131fc:	ldrsb	w8, [x21, x25]
   13200:	and	w0, w8, #0xff
   13204:	tbnz	w8, #31, 131e8 <PyInit__decimal@@Base+0xc734>
   13208:	ldrb	w8, [x24, w0, uxtw]
   1320c:	mov	x25, x26
   13210:	cbnz	w8, 131f4 <PyInit__decimal@@Base+0xc740>
   13214:	b	13254 <PyInit__decimal@@Base+0xc7a0>
   13218:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   1321c:	ldr	x24, [x24, #3880]
   13220:	sub	x21, x22, #0x4
   13224:	b	13234 <PyInit__decimal@@Base+0xc780>
   13228:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   1322c:	mov	x25, x26
   13230:	cbz	w0, 13254 <PyInit__decimal@@Base+0xc7a0>
   13234:	subs	x26, x25, #0x1
   13238:	b.lt	132a0 <PyInit__decimal@@Base+0xc7ec>  // b.tstop
   1323c:	ldr	w0, [x21, x25, lsl #2]
   13240:	cmp	w0, #0x7f
   13244:	b.hi	13228 <PyInit__decimal@@Base+0xc774>  // b.pmore
   13248:	ldrb	w0, [x24, x0]
   1324c:	mov	x25, x26
   13250:	cbnz	w0, 13234 <PyInit__decimal@@Base+0xc780>
   13254:	add	x25, x26, #0x1
   13258:	cmp	w23, #0x1
   1325c:	b.eq	13428 <PyInit__decimal@@Base+0xc974>  // b.none
   13260:	cmp	w23, #0x2
   13264:	b.ne	13464 <PyInit__decimal@@Base+0xc9b0>  // b.any
   13268:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   1326c:	ldr	x24, [x24, #3880]
   13270:	mov	x21, xzr
   13274:	ldrh	w0, [x22, x21, lsl #1]
   13278:	cmp	w0, #0x80
   1327c:	b.cs	13288 <PyInit__decimal@@Base+0xc7d4>  // b.hs, b.nlast
   13280:	ldrb	w0, [x24, w0, uxtw]
   13284:	b	1328c <PyInit__decimal@@Base+0xc7d8>
   13288:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   1328c:	cbz	w0, 132a4 <PyInit__decimal@@Base+0xc7f0>
   13290:	add	x21, x21, #0x1
   13294:	cmp	x25, x21
   13298:	b.ne	13274 <PyInit__decimal@@Base+0xc7c0>  // b.any
   1329c:	b	13498 <PyInit__decimal@@Base+0xc9e4>
   132a0:	mov	x21, xzr
   132a4:	cmp	x21, x25
   132a8:	mov	x24, x20
   132ac:	b.ge	1349c <PyInit__decimal@@Base+0xc9e8>  // b.tcont
   132b0:	cmp	w23, #0x1
   132b4:	b.eq	13338 <PyInit__decimal@@Base+0xc884>  // b.none
   132b8:	cmp	w23, #0x2
   132bc:	b.ne	133b0 <PyInit__decimal@@Base+0xc8fc>  // b.any
   132c0:	sub	x23, x25, x21
   132c4:	adrp	x25, 56000 <PyInit__decimal@@Base+0x4f54c>
   132c8:	ldr	x25, [x25, #3880]
   132cc:	add	x22, x22, x21, lsl #1
   132d0:	mov	x24, x20
   132d4:	b	132f8 <PyInit__decimal@@Base+0xc844>
   132d8:	mov	w0, w21
   132dc:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   132e0:	cbz	w0, 13324 <PyInit__decimal@@Base+0xc870>
   132e4:	mov	w21, #0x20                  	// #32
   132e8:	strb	w21, [x24], #1
   132ec:	subs	x23, x23, #0x1
   132f0:	add	x22, x22, #0x2
   132f4:	b.eq	1349c <PyInit__decimal@@Base+0xc9e8>  // b.none
   132f8:	ldrh	w21, [x22]
   132fc:	cbz	w19, 13308 <PyInit__decimal@@Base+0xc854>
   13300:	cmp	w21, #0x5f
   13304:	b.eq	132ec <PyInit__decimal@@Base+0xc838>  // b.none
   13308:	sub	w8, w21, #0x1
   1330c:	cmp	w8, #0x7f
   13310:	b.cc	132e8 <PyInit__decimal@@Base+0xc834>  // b.lo, b.ul, b.last
   13314:	cmp	w21, #0x80
   13318:	b.cs	132d8 <PyInit__decimal@@Base+0xc824>  // b.hs, b.nlast
   1331c:	ldrb	w8, [x25, x21]
   13320:	cbnz	w8, 132e4 <PyInit__decimal@@Base+0xc830>
   13324:	mov	w0, w21
   13328:	bl	67f0 <_PyUnicode_ToDecimalDigit@plt>
   1332c:	tbnz	w0, #31, 134bc <PyInit__decimal@@Base+0xca08>
   13330:	add	w21, w0, #0x30
   13334:	b	132e8 <PyInit__decimal@@Base+0xc834>
   13338:	sub	x23, x25, x21
   1333c:	adrp	x25, 56000 <PyInit__decimal@@Base+0x4f54c>
   13340:	ldr	x25, [x25, #3880]
   13344:	add	x22, x22, x21
   13348:	mov	x24, x20
   1334c:	b	13370 <PyInit__decimal@@Base+0xc8bc>
   13350:	mov	w0, w21
   13354:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   13358:	cbz	w0, 1339c <PyInit__decimal@@Base+0xc8e8>
   1335c:	mov	w8, #0x20                  	// #32
   13360:	strb	w8, [x24], #1
   13364:	subs	x23, x23, #0x1
   13368:	add	x22, x22, #0x1
   1336c:	b.eq	1349c <PyInit__decimal@@Base+0xc9e8>  // b.none
   13370:	ldrb	w21, [x22]
   13374:	sxtb	w8, w21
   13378:	cbz	w19, 13384 <PyInit__decimal@@Base+0xc8d0>
   1337c:	cmp	w8, #0x5f
   13380:	b.eq	13364 <PyInit__decimal@@Base+0xc8b0>  // b.none
   13384:	sub	w9, w21, #0x1
   13388:	cmp	w9, #0x7f
   1338c:	b.cc	13360 <PyInit__decimal@@Base+0xc8ac>  // b.lo, b.ul, b.last
   13390:	tbnz	w8, #31, 13350 <PyInit__decimal@@Base+0xc89c>
   13394:	ldrb	w8, [x25, x21]
   13398:	cbnz	w8, 1335c <PyInit__decimal@@Base+0xc8a8>
   1339c:	mov	w0, w21
   133a0:	bl	67f0 <_PyUnicode_ToDecimalDigit@plt>
   133a4:	tbnz	w0, #31, 134bc <PyInit__decimal@@Base+0xca08>
   133a8:	add	w8, w0, #0x30
   133ac:	b	13360 <PyInit__decimal@@Base+0xc8ac>
   133b0:	sub	x23, x25, x21
   133b4:	adrp	x25, 56000 <PyInit__decimal@@Base+0x4f54c>
   133b8:	ldr	x25, [x25, #3880]
   133bc:	add	x22, x22, x21, lsl #2
   133c0:	mov	x24, x20
   133c4:	b	133e4 <PyInit__decimal@@Base+0xc930>
   133c8:	ldrb	w8, [x25, x21]
   133cc:	cbz	w8, 13414 <PyInit__decimal@@Base+0xc960>
   133d0:	mov	w21, #0x20                  	// #32
   133d4:	strb	w21, [x24], #1
   133d8:	subs	x23, x23, #0x1
   133dc:	add	x22, x22, #0x4
   133e0:	b.eq	1349c <PyInit__decimal@@Base+0xc9e8>  // b.none
   133e4:	ldr	w21, [x22]
   133e8:	cbz	w19, 133f4 <PyInit__decimal@@Base+0xc940>
   133ec:	cmp	w21, #0x5f
   133f0:	b.eq	133d8 <PyInit__decimal@@Base+0xc924>  // b.none
   133f4:	sub	w8, w21, #0x1
   133f8:	cmp	w8, #0x7e
   133fc:	b.ls	133d4 <PyInit__decimal@@Base+0xc920>  // b.plast
   13400:	cmp	w21, #0x7f
   13404:	b.ls	133c8 <PyInit__decimal@@Base+0xc914>  // b.plast
   13408:	mov	w0, w21
   1340c:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   13410:	cbnz	w0, 133d0 <PyInit__decimal@@Base+0xc91c>
   13414:	mov	w0, w21
   13418:	bl	67f0 <_PyUnicode_ToDecimalDigit@plt>
   1341c:	tbnz	w0, #31, 134bc <PyInit__decimal@@Base+0xca08>
   13420:	add	w21, w0, #0x30
   13424:	b	133d4 <PyInit__decimal@@Base+0xc920>
   13428:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   1342c:	ldr	x24, [x24, #3880]
   13430:	mov	x21, xzr
   13434:	b	1344c <PyInit__decimal@@Base+0xc998>
   13438:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   1343c:	cbz	w0, 132a4 <PyInit__decimal@@Base+0xc7f0>
   13440:	add	x21, x21, #0x1
   13444:	cmp	x25, x21
   13448:	b.eq	13498 <PyInit__decimal@@Base+0xc9e4>  // b.none
   1344c:	ldrsb	w8, [x22, x21]
   13450:	and	w0, w8, #0xff
   13454:	tbnz	w8, #31, 13438 <PyInit__decimal@@Base+0xc984>
   13458:	ldrb	w0, [x24, w0, uxtw]
   1345c:	cbnz	w0, 13440 <PyInit__decimal@@Base+0xc98c>
   13460:	b	132a4 <PyInit__decimal@@Base+0xc7f0>
   13464:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   13468:	ldr	x24, [x24, #3880]
   1346c:	mov	x21, xzr
   13470:	ldr	w0, [x22, x21, lsl #2]
   13474:	cmp	w0, #0x7f
   13478:	b.hi	13484 <PyInit__decimal@@Base+0xc9d0>  // b.pmore
   1347c:	ldrb	w0, [x24, x0]
   13480:	b	13488 <PyInit__decimal@@Base+0xc9d4>
   13484:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   13488:	cbz	w0, 132a4 <PyInit__decimal@@Base+0xc7f0>
   1348c:	add	x21, x21, #0x1
   13490:	cmp	x25, x21
   13494:	b.ne	13470 <PyInit__decimal@@Base+0xc9bc>  // b.any
   13498:	mov	x24, x20
   1349c:	strb	wzr, [x24]
   134a0:	mov	x0, x20
   134a4:	ldp	x20, x19, [sp, #64]
   134a8:	ldp	x22, x21, [sp, #48]
   134ac:	ldp	x24, x23, [sp, #32]
   134b0:	ldp	x26, x25, [sp, #16]
   134b4:	ldp	x29, x30, [sp], #80
   134b8:	ret
   134bc:	strb	wzr, [x20]
   134c0:	b	134a0 <PyInit__decimal@@Base+0xc9ec>
   134c4:	sub	sp, sp, #0x70
   134c8:	stp	x29, x30, [sp, #64]
   134cc:	stp	x22, x21, [sp, #80]
   134d0:	stp	x20, x19, [sp, #96]
   134d4:	add	x29, sp, #0x40
   134d8:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   134dc:	add	x8, x8, #0xe60
   134e0:	mov	x19, x2
   134e4:	mov	x21, x1
   134e8:	cmp	x0, x8
   134ec:	stur	wzr, [x29, #-4]
   134f0:	b.eq	1350c <PyInit__decimal@@Base+0xca58>  // b.none
   134f4:	ldr	x8, [x0, #304]
   134f8:	mov	x1, xzr
   134fc:	blr	x8
   13500:	mov	x20, x0
   13504:	cbnz	x0, 13520 <PyInit__decimal@@Base+0xca6c>
   13508:	b	135bc <PyInit__decimal@@Base+0xcb08>
   1350c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   13510:	add	x0, x0, #0xe60
   13514:	bl	6890 <_PyObject_New@plt>
   13518:	mov	x20, x0
   1351c:	cbz	x0, 135bc <PyInit__decimal@@Base+0xcb08>
   13520:	mov	w8, #0x30                  	// #48
   13524:	mov	x22, x20
   13528:	strb	w8, [x22, #24]!
   1352c:	mov	x9, #0xffffffffffffffff    	// #-1
   13530:	mov	w10, #0x4                   	// #4
   13534:	add	x8, x22, #0x30
   13538:	add	x0, sp, #0x8
   1353c:	stur	x9, [x22, #-8]
   13540:	stp	xzr, xzr, [x22, #8]
   13544:	stp	xzr, x10, [x22, #24]
   13548:	str	x8, [x22, #40]
   1354c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   13550:	add	x2, sp, #0x8
   13554:	sub	x3, x29, #0x4
   13558:	mov	x0, x22
   1355c:	mov	x1, x21
   13560:	bl	1f054 <PyInit__decimal@@Base+0x185a0>
   13564:	ldur	w8, [x29, #-4]
   13568:	mov	w9, #0x1041                	// #4161
   1356c:	tst	w8, w9
   13570:	b.eq	13588 <PyInit__decimal@@Base+0xcad4>  // b.none
   13574:	sub	x2, x29, #0x4
   13578:	mov	w1, #0x100                 	// #256
   1357c:	mov	x0, x22
   13580:	bl	23368 <PyInit__decimal@@Base+0x1c8b4>
   13584:	ldur	w8, [x29, #-4]
   13588:	mov	w9, #0x3be                 	// #958
   1358c:	and	w1, w8, w9
   13590:	mov	x0, x19
   13594:	stur	w1, [x29, #-4]
   13598:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1359c:	cbz	w0, 135bc <PyInit__decimal@@Base+0xcb08>
   135a0:	ldr	x8, [x20]
   135a4:	subs	x8, x8, #0x1
   135a8:	str	x8, [x20]
   135ac:	b.ne	135b8 <PyInit__decimal@@Base+0xcb04>  // b.any
   135b0:	mov	x0, x20
   135b4:	bl	6510 <_Py_Dealloc@plt>
   135b8:	mov	x20, xzr
   135bc:	mov	x0, x20
   135c0:	ldp	x20, x19, [sp, #96]
   135c4:	ldp	x22, x21, [sp, #80]
   135c8:	ldp	x29, x30, [sp, #64]
   135cc:	add	sp, sp, #0x70
   135d0:	ret
   135d4:	stp	x29, x30, [sp, #-80]!
   135d8:	str	x25, [sp, #16]
   135dc:	stp	x24, x23, [sp, #32]
   135e0:	stp	x22, x21, [sp, #48]
   135e4:	stp	x20, x19, [sp, #64]
   135e8:	mov	x29, sp
   135ec:	mov	x19, x0
   135f0:	bl	6920 <PyTuple_Size@plt>
   135f4:	cmp	x0, #0x3
   135f8:	b.ne	13660 <PyInit__decimal@@Base+0xcbac>  // b.any
   135fc:	ldr	x0, [x19, #24]
   13600:	ldr	x8, [x0, #8]
   13604:	ldrb	w8, [x8, #171]
   13608:	tbz	w8, #0, 1367c <PyInit__decimal@@Base+0xcbc8>
   1360c:	bl	6760 <PyLong_AsLong@plt>
   13610:	cmn	x0, #0x1
   13614:	b.eq	13674 <PyInit__decimal@@Base+0xcbc0>  // b.none
   13618:	cmp	x0, #0x2
   1361c:	b.cs	1367c <PyInit__decimal@@Base+0xcbc8>  // b.hs, b.nlast
   13620:	cmp	x0, #0x0
   13624:	mov	w8, #0x2d                  	// #45
   13628:	mov	w9, #0x2b                  	// #43
   1362c:	csel	w8, w9, w8, eq  // eq = none
   13630:	strb	w8, [x29, #24]
   13634:	strb	wzr, [x29, #25]
   13638:	ldr	x20, [x19, #40]
   1363c:	ldr	x8, [x20, #8]
   13640:	ldr	x8, [x8, #168]
   13644:	tbnz	w8, #28, 136b4 <PyInit__decimal@@Base+0xcc00>
   13648:	tbnz	w8, #24, 13704 <PyInit__decimal@@Base+0xcc50>
   1364c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13650:	ldr	x8, [x8, #3928]
   13654:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13658:	add	x1, x1, #0x2f9
   1365c:	b	1368c <PyInit__decimal@@Base+0xcbd8>
   13660:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13664:	ldr	x8, [x8, #3928]
   13668:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1366c:	add	x1, x1, #0x260
   13670:	b	1368c <PyInit__decimal@@Base+0xcbd8>
   13674:	bl	6720 <PyErr_Occurred@plt>
   13678:	cbnz	x0, 13694 <PyInit__decimal@@Base+0xcbe0>
   1367c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13680:	ldr	x8, [x8, #3928]
   13684:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13688:	add	x1, x1, #0x288
   1368c:	ldr	x0, [x8]
   13690:	bl	6590 <PyErr_SetString@plt>
   13694:	mov	x20, xzr
   13698:	mov	x0, x20
   1369c:	ldp	x20, x19, [sp, #64]
   136a0:	ldp	x22, x21, [sp, #48]
   136a4:	ldp	x24, x23, [sp, #32]
   136a8:	ldr	x25, [sp, #16]
   136ac:	ldp	x29, x30, [sp], #80
   136b0:	ret
   136b4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   136b8:	add	x1, x1, #0xaf
   136bc:	mov	x0, x20
   136c0:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   136c4:	cbz	w0, 13720 <PyInit__decimal@@Base+0xcc6c>
   136c8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   136cc:	add	x1, x1, #0xc72
   136d0:	mov	x0, x20
   136d4:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   136d8:	cbz	w0, 13744 <PyInit__decimal@@Base+0xcc90>
   136dc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   136e0:	add	x1, x1, #0xda2
   136e4:	mov	x0, x20
   136e8:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   136ec:	cbz	w0, 1377c <PyInit__decimal@@Base+0xccc8>
   136f0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   136f4:	ldr	x8, [x8, #3928]
   136f8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   136fc:	add	x1, x1, #0x2bb
   13700:	b	1368c <PyInit__decimal@@Base+0xcbd8>
   13704:	mov	x0, x20
   13708:	bl	6630 <PyLong_AsSsize_t@plt>
   1370c:	cmn	x0, #0x1
   13710:	b.eq	13768 <PyInit__decimal@@Base+0xccb4>  // b.none
   13714:	mov	x21, x0
   13718:	mov	w25, wzr
   1371c:	b	137a4 <PyInit__decimal@@Base+0xccf0>
   13720:	add	x0, x29, #0x18
   13724:	add	x20, x29, #0x18
   13728:	bl	6420 <strlen@plt>
   1372c:	mov	w8, #0x6e49                	// #28233
   13730:	movk	w8, #0x66, lsl #16
   13734:	mov	x21, xzr
   13738:	str	w8, [x20, x0]
   1373c:	mov	w25, #0x1                   	// #1
   13740:	b	137a4 <PyInit__decimal@@Base+0xccf0>
   13744:	add	x0, x29, #0x18
   13748:	add	x20, x29, #0x18
   1374c:	bl	6420 <strlen@plt>
   13750:	mov	w8, #0x614e                	// #24910
   13754:	movk	w8, #0x4e, lsl #16
   13758:	mov	x21, xzr
   1375c:	mov	w25, wzr
   13760:	str	w8, [x20, x0]
   13764:	b	137a4 <PyInit__decimal@@Base+0xccf0>
   13768:	bl	6720 <PyErr_Occurred@plt>
   1376c:	cbnz	x0, 13694 <PyInit__decimal@@Base+0xcbe0>
   13770:	mov	w25, wzr
   13774:	mov	x21, #0xffffffffffffffff    	// #-1
   13778:	b	137a4 <PyInit__decimal@@Base+0xccf0>
   1377c:	add	x0, x29, #0x18
   13780:	add	x20, x29, #0x18
   13784:	bl	6420 <strlen@plt>
   13788:	mov	w9, #0x4e73                	// #20083
   1378c:	add	x8, x20, x0
   13790:	movk	w9, #0x4e61, lsl #16
   13794:	mov	x21, xzr
   13798:	mov	w25, wzr
   1379c:	str	w9, [x8]
   137a0:	strb	wzr, [x8, #4]
   137a4:	ldr	x19, [x19, #32]
   137a8:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   137ac:	ldr	x8, [x19, #8]
   137b0:	ldr	x8, [x8, #168]
   137b4:	ldr	x24, [x24, #3928]
   137b8:	tbnz	w8, #26, 137d0 <PyInit__decimal@@Base+0xcd1c>
   137bc:	tbnz	w8, #25, 137e0 <PyInit__decimal@@Base+0xcd2c>
   137c0:	ldr	x0, [x24]
   137c4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   137c8:	add	x1, x1, #0x315
   137cc:	b	13690 <PyInit__decimal@@Base+0xcbdc>
   137d0:	ldr	x8, [x19]
   137d4:	add	x8, x8, #0x1
   137d8:	str	x8, [x19]
   137dc:	b	137f0 <PyInit__decimal@@Base+0xcd3c>
   137e0:	mov	x0, x19
   137e4:	bl	6470 <PyList_AsTuple@plt>
   137e8:	mov	x19, x0
   137ec:	cbz	x0, 13694 <PyInit__decimal@@Base+0xcbe0>
   137f0:	mov	x0, x19
   137f4:	bl	6920 <PyTuple_Size@plt>
   137f8:	add	x23, x0, #0x19
   137fc:	mov	x22, x0
   13800:	mov	x0, x23
   13804:	bl	6980 <PyMem_Malloc@plt>
   13808:	mov	x20, x0
   1380c:	cbz	x0, 13854 <PyInit__decimal@@Base+0xcda0>
   13810:	adrp	x2, 43000 <PyInit__decimal@@Base+0x3c54c>
   13814:	add	x2, x2, #0xb72
   13818:	add	x3, x29, #0x18
   1381c:	mov	x0, x20
   13820:	mov	x1, x23
   13824:	bl	6550 <snprintf@plt>
   13828:	tbnz	w0, #31, 13910 <PyInit__decimal@@Base+0xce5c>
   1382c:	mov	w8, w0
   13830:	cmp	x23, x8
   13834:	b.le	13910 <PyInit__decimal@@Base+0xce5c>
   13838:	add	x23, x20, x8
   1383c:	cbnz	x22, 1385c <PyInit__decimal@@Base+0xcda8>
   13840:	ldrb	w8, [x29, #25]
   13844:	cbnz	w8, 1385c <PyInit__decimal@@Base+0xcda8>
   13848:	mov	w8, #0x30                  	// #48
   1384c:	strb	w8, [x23], #1
   13850:	b	138dc <PyInit__decimal@@Base+0xce28>
   13854:	bl	6520 <PyErr_NoMemory@plt>
   13858:	b	13928 <PyInit__decimal@@Base+0xce74>
   1385c:	cmp	x22, #0x1
   13860:	b.lt	138dc <PyInit__decimal@@Base+0xce28>  // b.tstop
   13864:	cbz	w25, 138a0 <PyInit__decimal@@Base+0xcdec>
   13868:	add	x25, x19, #0x18
   1386c:	ldr	x0, [x25]
   13870:	ldr	x8, [x0, #8]
   13874:	ldrb	w8, [x8, #171]
   13878:	tbz	w8, #0, 1397c <PyInit__decimal@@Base+0xcec8>
   1387c:	bl	6760 <PyLong_AsLong@plt>
   13880:	cmn	x0, #0x1
   13884:	b.eq	13974 <PyInit__decimal@@Base+0xcec0>  // b.none
   13888:	cmp	x0, #0xa
   1388c:	b.cs	1397c <PyInit__decimal@@Base+0xcec8>  // b.hs, b.nlast
   13890:	subs	x22, x22, #0x1
   13894:	add	x25, x25, #0x8
   13898:	b.ne	1386c <PyInit__decimal@@Base+0xcdb8>  // b.any
   1389c:	b	138dc <PyInit__decimal@@Base+0xce28>
   138a0:	add	x25, x19, #0x18
   138a4:	ldr	x0, [x25]
   138a8:	ldr	x8, [x0, #8]
   138ac:	ldrb	w8, [x8, #171]
   138b0:	tbz	w8, #0, 1397c <PyInit__decimal@@Base+0xcec8>
   138b4:	bl	6760 <PyLong_AsLong@plt>
   138b8:	cmn	x0, #0x1
   138bc:	b.eq	13974 <PyInit__decimal@@Base+0xcec0>  // b.none
   138c0:	cmp	x0, #0x9
   138c4:	b.hi	1397c <PyInit__decimal@@Base+0xcec8>  // b.pmore
   138c8:	add	w8, w0, #0x30
   138cc:	subs	x22, x22, #0x1
   138d0:	strb	w8, [x23], #1
   138d4:	add	x25, x25, #0x8
   138d8:	b.ne	138a4 <PyInit__decimal@@Base+0xcdf0>  // b.any
   138dc:	strb	wzr, [x23]
   138e0:	ldrb	w8, [x29, #25]
   138e4:	cbnz	w8, 13958 <PyInit__decimal@@Base+0xcea4>
   138e8:	mov	w8, #0x45                  	// #69
   138ec:	strb	w8, [x23], #1
   138f0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   138f4:	add	x2, x2, #0x361
   138f8:	mov	w1, #0x15                  	// #21
   138fc:	mov	x0, x23
   13900:	mov	x3, x21
   13904:	bl	6550 <snprintf@plt>
   13908:	cmp	w0, #0x15
   1390c:	b.cc	13958 <PyInit__decimal@@Base+0xcea4>  // b.lo, b.ul, b.last
   13910:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13914:	ldr	x8, [x8, #3920]
   13918:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1391c:	add	x1, x1, #0x33b
   13920:	ldr	x0, [x8]
   13924:	bl	6590 <PyErr_SetString@plt>
   13928:	ldr	x8, [x19]
   1392c:	subs	x8, x8, #0x1
   13930:	str	x8, [x19]
   13934:	b.eq	13940 <PyInit__decimal@@Base+0xce8c>  // b.none
   13938:	cbnz	x20, 1394c <PyInit__decimal@@Base+0xce98>
   1393c:	b	13698 <PyInit__decimal@@Base+0xcbe4>
   13940:	mov	x0, x19
   13944:	bl	6510 <_Py_Dealloc@plt>
   13948:	cbz	x20, 13698 <PyInit__decimal@@Base+0xcbe4>
   1394c:	mov	x0, x20
   13950:	bl	64a0 <PyMem_Free@plt>
   13954:	b	13694 <PyInit__decimal@@Base+0xcbe0>
   13958:	ldr	x8, [x19]
   1395c:	subs	x8, x8, #0x1
   13960:	str	x8, [x19]
   13964:	b.ne	13698 <PyInit__decimal@@Base+0xcbe4>  // b.any
   13968:	mov	x0, x19
   1396c:	bl	6510 <_Py_Dealloc@plt>
   13970:	b	13698 <PyInit__decimal@@Base+0xcbe4>
   13974:	bl	6720 <PyErr_Occurred@plt>
   13978:	cbnz	x0, 13928 <PyInit__decimal@@Base+0xce74>
   1397c:	ldr	x0, [x24]
   13980:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13984:	add	x1, x1, #0x315
   13988:	b	13924 <PyInit__decimal@@Base+0xce70>
   1398c:	stp	x29, x30, [sp, #-32]!
   13990:	str	x19, [sp, #16]
   13994:	mov	x29, sp
   13998:	mov	x19, x0
   1399c:	ldr	x0, [x0, #64]
   139a0:	cbz	x0, 139b4 <PyInit__decimal@@Base+0xcf00>
   139a4:	ldr	x8, [x0]
   139a8:	subs	x8, x8, #0x1
   139ac:	str	x8, [x0]
   139b0:	b.eq	139d4 <PyInit__decimal@@Base+0xcf20>  // b.none
   139b4:	ldr	x0, [x19, #72]
   139b8:	cbz	x0, 139e0 <PyInit__decimal@@Base+0xcf2c>
   139bc:	ldr	x8, [x0]
   139c0:	subs	x8, x8, #0x1
   139c4:	str	x8, [x0]
   139c8:	b.ne	139e0 <PyInit__decimal@@Base+0xcf2c>  // b.any
   139cc:	bl	6510 <_Py_Dealloc@plt>
   139d0:	b	139e0 <PyInit__decimal@@Base+0xcf2c>
   139d4:	bl	6510 <_Py_Dealloc@plt>
   139d8:	ldr	x0, [x19, #72]
   139dc:	cbnz	x0, 139bc <PyInit__decimal@@Base+0xcf08>
   139e0:	ldr	x8, [x19, #8]
   139e4:	mov	x0, x19
   139e8:	ldr	x19, [sp, #16]
   139ec:	ldr	x1, [x8, #320]
   139f0:	ldp	x29, x30, [sp], #32
   139f4:	br	x1
   139f8:	sub	sp, sp, #0x130
   139fc:	stp	x29, x30, [sp, #256]
   13a00:	str	x28, [sp, #272]
   13a04:	stp	x20, x19, [sp, #288]
   13a08:	add	x29, sp, #0x100
   13a0c:	ldr	w2, [x0, #44]
   13a10:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   13a14:	mov	x19, x0
   13a18:	add	x3, x3, #0x6c8
   13a1c:	sub	x0, x29, #0x7c
   13a20:	mov	w1, #0x79                  	// #121
   13a24:	bl	21324 <PyInit__decimal@@Base+0x1a870>
   13a28:	cmp	w0, #0x79
   13a2c:	b.cs	13a54 <PyInit__decimal@@Base+0xcfa0>  // b.hs, b.nlast
   13a30:	ldr	w2, [x19, #40]
   13a34:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   13a38:	add	x3, x3, #0x6c8
   13a3c:	add	x0, sp, #0x8
   13a40:	mov	w1, #0x79                  	// #121
   13a44:	add	x20, sp, #0x8
   13a48:	bl	21324 <PyInit__decimal@@Base+0x1a870>
   13a4c:	cmp	w0, #0x79
   13a50:	b.cc	13a74 <PyInit__decimal@@Base+0xcfc0>  // b.lo, b.ul, b.last
   13a54:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13a58:	ldr	x8, [x8, #3920]
   13a5c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13a60:	add	x1, x1, #0x375
   13a64:	ldr	x0, [x8]
   13a68:	bl	6590 <PyErr_SetString@plt>
   13a6c:	mov	x0, xzr
   13a70:	b	13aa8 <PyInit__decimal@@Base+0xcff4>
   13a74:	ldp	w8, w6, [x19, #52]
   13a78:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   13a7c:	sxtw	x8, w8
   13a80:	add	x9, x9, #0x4e0
   13a84:	ldp	x4, x3, [x19, #24]
   13a88:	ldr	x1, [x19, #16]
   13a8c:	ldr	x2, [x9, x8, lsl #3]
   13a90:	ldr	w5, [x19, #80]
   13a94:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   13a98:	add	x0, x0, #0x394
   13a9c:	sub	x7, x29, #0x7c
   13aa0:	str	x20, [sp]
   13aa4:	bl	63d0 <PyUnicode_FromFormat@plt>
   13aa8:	ldp	x20, x19, [sp, #288]
   13aac:	ldr	x28, [sp, #272]
   13ab0:	ldp	x29, x30, [sp, #256]
   13ab4:	add	sp, sp, #0x130
   13ab8:	ret
   13abc:	stp	x29, x30, [sp, #-32]!
   13ac0:	stp	x20, x19, [sp, #16]
   13ac4:	mov	x29, sp
   13ac8:	ldr	x8, [x1, #8]
   13acc:	mov	x19, x1
   13ad0:	mov	x20, x0
   13ad4:	ldrb	w8, [x8, #171]
   13ad8:	tbz	w8, #4, 13b04 <PyInit__decimal@@Base+0xd050>
   13adc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13ae0:	add	x1, x1, #0x519
   13ae4:	mov	x0, x19
   13ae8:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   13aec:	cbz	w0, 13b18 <PyInit__decimal@@Base+0xd064>
   13af0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13af4:	add	x1, x1, #0x50d
   13af8:	mov	x0, x19
   13afc:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   13b00:	cbz	w0, 13b20 <PyInit__decimal@@Base+0xd06c>
   13b04:	mov	x0, x20
   13b08:	mov	x1, x19
   13b0c:	ldp	x20, x19, [sp, #16]
   13b10:	ldp	x29, x30, [sp], #32
   13b14:	b	66f0 <PyObject_GenericGetAttr@plt>
   13b18:	ldr	x0, [x20, #64]
   13b1c:	b	13b24 <PyInit__decimal@@Base+0xd070>
   13b20:	ldr	x0, [x20, #72]
   13b24:	ldr	x8, [x0]
   13b28:	add	x8, x8, #0x1
   13b2c:	str	x8, [x0]
   13b30:	ldp	x20, x19, [sp, #16]
   13b34:	ldp	x29, x30, [sp], #32
   13b38:	ret
   13b3c:	stp	x29, x30, [sp, #-48]!
   13b40:	str	x21, [sp, #16]
   13b44:	stp	x20, x19, [sp, #32]
   13b48:	mov	x29, sp
   13b4c:	cbz	x2, 13bac <PyInit__decimal@@Base+0xd0f8>
   13b50:	ldr	x8, [x1, #8]
   13b54:	mov	x20, x2
   13b58:	mov	x21, x1
   13b5c:	mov	x19, x0
   13b60:	ldrb	w8, [x8, #171]
   13b64:	tbz	w8, #4, 13b90 <PyInit__decimal@@Base+0xd0dc>
   13b68:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13b6c:	add	x1, x1, #0x519
   13b70:	mov	x0, x21
   13b74:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   13b78:	cbz	w0, 13bd8 <PyInit__decimal@@Base+0xd124>
   13b7c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13b80:	add	x1, x1, #0x50d
   13b84:	mov	x0, x21
   13b88:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   13b8c:	cbz	w0, 13c10 <PyInit__decimal@@Base+0xd15c>
   13b90:	mov	x0, x19
   13b94:	mov	x1, x21
   13b98:	mov	x2, x20
   13b9c:	ldp	x20, x19, [sp, #32]
   13ba0:	ldr	x21, [sp, #16]
   13ba4:	ldp	x29, x30, [sp], #48
   13ba8:	b	68f0 <PyObject_GenericSetAttr@plt>
   13bac:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13bb0:	ldr	x8, [x8, #4048]
   13bb4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13bb8:	add	x1, x1, #0x3f2
   13bbc:	ldr	x0, [x8]
   13bc0:	bl	6590 <PyErr_SetString@plt>
   13bc4:	mov	w0, #0xffffffff            	// #-1
   13bc8:	ldp	x20, x19, [sp, #32]
   13bcc:	ldr	x21, [sp, #16]
   13bd0:	ldp	x29, x30, [sp], #48
   13bd4:	ret
   13bd8:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   13bdc:	ldr	x8, [x20, #8]
   13be0:	ldr	x9, [x9, #1472]
   13be4:	cmp	x8, x9
   13be8:	b.eq	13c3c <PyInit__decimal@@Base+0xd188>  // b.none
   13bec:	mov	x0, x20
   13bf0:	bl	1426c <PyInit__decimal@@Base+0xd7b8>
   13bf4:	tst	w0, #0x18000
   13bf8:	b.ne	13bc4 <PyInit__decimal@@Base+0xd110>  // b.any
   13bfc:	mov	w1, w0
   13c00:	add	x0, x19, #0x10
   13c04:	bl	1db5c <PyInit__decimal@@Base+0x170a8>
   13c08:	cbnz	w0, 13c78 <PyInit__decimal@@Base+0xd1c4>
   13c0c:	b	13c50 <PyInit__decimal@@Base+0xd19c>
   13c10:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   13c14:	ldr	x8, [x20, #8]
   13c18:	ldr	x9, [x9, #1472]
   13c1c:	cmp	x8, x9
   13c20:	b.eq	13c64 <PyInit__decimal@@Base+0xd1b0>  // b.none
   13c24:	mov	x0, x20
   13c28:	bl	1426c <PyInit__decimal@@Base+0xd7b8>
   13c2c:	tst	w0, #0x18000
   13c30:	b.ne	13bc4 <PyInit__decimal@@Base+0xd110>  // b.any
   13c34:	mov	w1, w0
   13c38:	b	13c6c <PyInit__decimal@@Base+0xd1b8>
   13c3c:	ldr	x8, [x20, #16]
   13c40:	ldr	w1, [x8]
   13c44:	add	x0, x19, #0x10
   13c48:	bl	1db5c <PyInit__decimal@@Base+0x170a8>
   13c4c:	cbnz	w0, 13c78 <PyInit__decimal@@Base+0xd1c4>
   13c50:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13c54:	ldr	x8, [x8, #3920]
   13c58:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13c5c:	add	x1, x1, #0x417
   13c60:	b	13bbc <PyInit__decimal@@Base+0xd108>
   13c64:	ldr	x8, [x20, #16]
   13c68:	ldr	w1, [x8]
   13c6c:	add	x0, x19, #0x10
   13c70:	bl	1db78 <PyInit__decimal@@Base+0x170c4>
   13c74:	cbz	w0, 13c8c <PyInit__decimal@@Base+0xd1d8>
   13c78:	mov	w0, wzr
   13c7c:	ldp	x20, x19, [sp, #32]
   13c80:	ldr	x21, [sp, #16]
   13c84:	ldp	x29, x30, [sp], #48
   13c88:	ret
   13c8c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13c90:	ldr	x8, [x8, #3920]
   13c94:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13c98:	add	x1, x1, #0x472
   13c9c:	b	13bbc <PyInit__decimal@@Base+0xd108>
   13ca0:	sub	sp, sp, #0xb0
   13ca4:	stp	x29, x30, [sp, #96]
   13ca8:	stp	x26, x25, [sp, #112]
   13cac:	stp	x24, x23, [sp, #128]
   13cb0:	stp	x22, x21, [sp, #144]
   13cb4:	stp	x20, x19, [sp, #160]
   13cb8:	add	x29, sp, #0x60
   13cbc:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   13cc0:	ldr	x24, [x24, #4008]
   13cc4:	mov	x8, x2
   13cc8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   13ccc:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   13cd0:	mov	x19, x0
   13cd4:	add	x9, sp, #0x20
   13cd8:	add	x10, sp, #0x28
   13cdc:	add	x11, sp, #0x30
   13ce0:	sub	x12, x29, #0x28
   13ce4:	add	x2, x2, #0x675
   13ce8:	add	x3, x3, #0xbb0
   13cec:	sub	x4, x29, #0x8
   13cf0:	sub	x5, x29, #0x10
   13cf4:	sub	x6, x29, #0x18
   13cf8:	sub	x7, x29, #0x20
   13cfc:	mov	x0, x1
   13d00:	mov	x1, x8
   13d04:	stp	x24, x24, [x29, #-16]
   13d08:	stp	x24, x24, [x29, #-32]
   13d0c:	stur	x24, [x29, #-40]
   13d10:	stp	x24, x24, [sp, #40]
   13d14:	stp	x9, x24, [sp, #24]
   13d18:	stp	x11, x10, [sp, #8]
   13d1c:	str	x12, [sp]
   13d20:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   13d24:	cbz	w0, 140b0 <PyInit__decimal@@Base+0xd5fc>
   13d28:	ldur	x0, [x29, #-8]
   13d2c:	cmp	x0, x24
   13d30:	b.eq	13d54 <PyInit__decimal@@Base+0xd2a0>  // b.none
   13d34:	bl	6630 <PyLong_AsSsize_t@plt>
   13d38:	mov	x20, x0
   13d3c:	cmn	x0, #0x1
   13d40:	b.eq	13e6c <PyInit__decimal@@Base+0xd3b8>  // b.none
   13d44:	add	x0, x19, #0x10
   13d48:	mov	x1, x20
   13d4c:	bl	1d960 <PyInit__decimal@@Base+0x16eac>
   13d50:	cbz	w0, 13e78 <PyInit__decimal@@Base+0xd3c4>
   13d54:	ldur	x0, [x29, #-16]
   13d58:	cmp	x0, x24
   13d5c:	b.eq	13d7c <PyInit__decimal@@Base+0xd2c8>  // b.none
   13d60:	bl	12ed8 <PyInit__decimal@@Base+0xc424>
   13d64:	cmn	w0, #0x1
   13d68:	b.eq	140b4 <PyInit__decimal@@Base+0xd600>  // b.none
   13d6c:	mov	w1, w0
   13d70:	add	x0, x19, #0x10
   13d74:	bl	1db40 <PyInit__decimal@@Base+0x1708c>
   13d78:	cbz	w0, 13e8c <PyInit__decimal@@Base+0xd3d8>
   13d7c:	ldur	x0, [x29, #-24]
   13d80:	cmp	x0, x24
   13d84:	b.eq	13da8 <PyInit__decimal@@Base+0xd2f4>  // b.none
   13d88:	bl	6630 <PyLong_AsSsize_t@plt>
   13d8c:	mov	x20, x0
   13d90:	cmn	x0, #0x1
   13d94:	b.eq	13ea0 <PyInit__decimal@@Base+0xd3ec>  // b.none
   13d98:	add	x0, x19, #0x10
   13d9c:	mov	x1, x20
   13da0:	bl	1db14 <PyInit__decimal@@Base+0x17060>
   13da4:	cbz	w0, 13eac <PyInit__decimal@@Base+0xd3f8>
   13da8:	ldur	x0, [x29, #-32]
   13dac:	cmp	x0, x24
   13db0:	b.eq	13dd4 <PyInit__decimal@@Base+0xd320>  // b.none
   13db4:	bl	6630 <PyLong_AsSsize_t@plt>
   13db8:	mov	x20, x0
   13dbc:	cmn	x0, #0x1
   13dc0:	b.eq	13ec0 <PyInit__decimal@@Base+0xd40c>  // b.none
   13dc4:	add	x0, x19, #0x10
   13dc8:	mov	x1, x20
   13dcc:	bl	1daec <PyInit__decimal@@Base+0x17038>
   13dd0:	cbz	w0, 13ecc <PyInit__decimal@@Base+0xd418>
   13dd4:	ldur	x0, [x29, #-40]
   13dd8:	cmp	x0, x24
   13ddc:	b.eq	13df8 <PyInit__decimal@@Base+0xd344>  // b.none
   13de0:	bl	6630 <PyLong_AsSsize_t@plt>
   13de4:	cmn	x0, #0x1
   13de8:	b.eq	13ee0 <PyInit__decimal@@Base+0xd42c>  // b.none
   13dec:	cmp	x0, #0x2
   13df0:	b.cs	13ee8 <PyInit__decimal@@Base+0xd434>  // b.hs, b.nlast
   13df4:	str	w0, [x19, #80]
   13df8:	ldr	x0, [sp, #48]
   13dfc:	cmp	x0, x24
   13e00:	b.eq	13e2c <PyInit__decimal@@Base+0xd378>  // b.none
   13e04:	bl	6630 <PyLong_AsSsize_t@plt>
   13e08:	mov	x20, x0
   13e0c:	cmn	x0, #0x1
   13e10:	b.eq	13efc <PyInit__decimal@@Base+0xd448>  // b.none
   13e14:	cmp	x20, w20, sxtw
   13e18:	mov	w8, #0x7fffffff            	// #2147483647
   13e1c:	add	x0, x19, #0x10
   13e20:	csel	w1, w8, w20, ne  // ne = any
   13e24:	bl	1db94 <PyInit__decimal@@Base+0x170e0>
   13e28:	cbz	w0, 13f88 <PyInit__decimal@@Base+0xd4d4>
   13e2c:	ldr	x20, [sp, #32]
   13e30:	cmp	x20, x24
   13e34:	b.eq	13fd8 <PyInit__decimal@@Base+0xd524>  // b.none
   13e38:	ldr	x8, [x20, #8]
   13e3c:	ldrb	w9, [x8, #171]
   13e40:	tbnz	w9, #1, 13f08 <PyInit__decimal@@Base+0xd454>
   13e44:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   13e48:	ldr	x9, [x9, #1472]
   13e4c:	cmp	x8, x9
   13e50:	b.eq	13f9c <PyInit__decimal@@Base+0xd4e8>  // b.none
   13e54:	mov	x0, x20
   13e58:	bl	1426c <PyInit__decimal@@Base+0xd7b8>
   13e5c:	tst	w0, #0x18000
   13e60:	b.ne	140b0 <PyInit__decimal@@Base+0xd5fc>  // b.any
   13e64:	mov	w1, w0
   13e68:	b	13fa4 <PyInit__decimal@@Base+0xd4f0>
   13e6c:	bl	6720 <PyErr_Occurred@plt>
   13e70:	cbnz	x0, 140b0 <PyInit__decimal@@Base+0xd5fc>
   13e74:	b	13d44 <PyInit__decimal@@Base+0xd290>
   13e78:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13e7c:	ldr	x8, [x8, #3928]
   13e80:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13e84:	add	x1, x1, #0x599
   13e88:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13e8c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13e90:	ldr	x8, [x8, #3920]
   13e94:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13e98:	add	x1, x1, #0x60b
   13e9c:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13ea0:	bl	6720 <PyErr_Occurred@plt>
   13ea4:	cbnz	x0, 140b0 <PyInit__decimal@@Base+0xd5fc>
   13ea8:	b	13d98 <PyInit__decimal@@Base+0xd2e4>
   13eac:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13eb0:	ldr	x8, [x8, #3928]
   13eb4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13eb8:	add	x1, x1, #0x5e5
   13ebc:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13ec0:	bl	6720 <PyErr_Occurred@plt>
   13ec4:	cbnz	x0, 140b0 <PyInit__decimal@@Base+0xd5fc>
   13ec8:	b	13dc4 <PyInit__decimal@@Base+0xd310>
   13ecc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13ed0:	ldr	x8, [x8, #3928]
   13ed4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13ed8:	add	x1, x1, #0x5bf
   13edc:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13ee0:	bl	6720 <PyErr_Occurred@plt>
   13ee4:	cbnz	x0, 140b0 <PyInit__decimal@@Base+0xd5fc>
   13ee8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13eec:	ldr	x8, [x8, #3928]
   13ef0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13ef4:	add	x1, x1, #0x62e
   13ef8:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13efc:	bl	6720 <PyErr_Occurred@plt>
   13f00:	cbnz	x0, 140b0 <PyInit__decimal@@Base+0xd5fc>
   13f04:	b	13e14 <PyInit__decimal@@Base+0xd360>
   13f08:	mov	x0, x20
   13f0c:	bl	6850 <PyList_Size@plt>
   13f10:	cmp	x0, #0x1
   13f14:	b.lt	13fc4 <PyInit__decimal@@Base+0xd510>  // b.tstop
   13f18:	adrp	x26, 58000 <PyInit__decimal@@Base+0x5154c>
   13f1c:	mov	x22, x0
   13f20:	mov	x23, xzr
   13f24:	mov	w21, wzr
   13f28:	adrp	x25, 58000 <PyInit__decimal@@Base+0x5154c>
   13f2c:	add	x26, x26, #0xd40
   13f30:	mov	x0, x20
   13f34:	mov	x1, x23
   13f38:	bl	6970 <PyList_GetItem@plt>
   13f3c:	ldr	x8, [x25, #3360]
   13f40:	cbz	x8, 14098 <PyInit__decimal@@Base+0xd5e4>
   13f44:	mov	x8, x26
   13f48:	ldur	x9, [x8, #-8]
   13f4c:	cmp	x9, x0
   13f50:	b.eq	13f60 <PyInit__decimal@@Base+0xd4ac>  // b.none
   13f54:	ldr	x9, [x8], #32
   13f58:	cbnz	x9, 13f48 <PyInit__decimal@@Base+0xd494>
   13f5c:	b	14098 <PyInit__decimal@@Base+0xd5e4>
   13f60:	ldur	w8, [x8, #-16]
   13f64:	tst	w8, #0x18000
   13f68:	b.ne	140b0 <PyInit__decimal@@Base+0xd5fc>  // b.any
   13f6c:	add	x23, x23, #0x1
   13f70:	cmp	x23, x22
   13f74:	orr	w21, w8, w21
   13f78:	b.ne	13f30 <PyInit__decimal@@Base+0xd47c>  // b.any
   13f7c:	tst	w21, #0x18000
   13f80:	b.ne	140b0 <PyInit__decimal@@Base+0xd5fc>  // b.any
   13f84:	b	13fc8 <PyInit__decimal@@Base+0xd514>
   13f88:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13f8c:	ldr	x8, [x8, #3928]
   13f90:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13f94:	add	x1, x1, #0x653
   13f98:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13f9c:	ldr	x8, [x20, #16]
   13fa0:	ldr	w1, [x8]
   13fa4:	add	x0, x19, #0x10
   13fa8:	bl	1db5c <PyInit__decimal@@Base+0x170a8>
   13fac:	cbnz	w0, 13fd8 <PyInit__decimal@@Base+0xd524>
   13fb0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   13fb4:	ldr	x8, [x8, #3920]
   13fb8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   13fbc:	add	x1, x1, #0x417
   13fc0:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   13fc4:	mov	w21, wzr
   13fc8:	add	x0, x19, #0x10
   13fcc:	mov	w1, w21
   13fd0:	bl	1db5c <PyInit__decimal@@Base+0x170a8>
   13fd4:	cbz	w0, 14114 <PyInit__decimal@@Base+0xd660>
   13fd8:	ldr	x20, [sp, #40]
   13fdc:	cmp	x20, x24
   13fe0:	b.eq	1410c <PyInit__decimal@@Base+0xd658>  // b.none
   13fe4:	ldr	x8, [x20, #8]
   13fe8:	ldrb	w9, [x8, #171]
   13fec:	tbnz	w9, #1, 14018 <PyInit__decimal@@Base+0xd564>
   13ff0:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   13ff4:	ldr	x9, [x9, #1472]
   13ff8:	cmp	x8, x9
   13ffc:	b.eq	140d0 <PyInit__decimal@@Base+0xd61c>  // b.none
   14000:	mov	x0, x20
   14004:	bl	1426c <PyInit__decimal@@Base+0xd7b8>
   14008:	tst	w0, #0x18000
   1400c:	b.ne	140b0 <PyInit__decimal@@Base+0xd5fc>  // b.any
   14010:	mov	w1, w0
   14014:	b	140d8 <PyInit__decimal@@Base+0xd624>
   14018:	mov	x0, x20
   1401c:	bl	6850 <PyList_Size@plt>
   14020:	cmp	x0, #0x1
   14024:	b.lt	140f8 <PyInit__decimal@@Base+0xd644>  // b.tstop
   14028:	adrp	x25, 58000 <PyInit__decimal@@Base+0x5154c>
   1402c:	mov	x22, x0
   14030:	mov	x23, xzr
   14034:	mov	w21, wzr
   14038:	adrp	x24, 58000 <PyInit__decimal@@Base+0x5154c>
   1403c:	add	x25, x25, #0xd40
   14040:	mov	x0, x20
   14044:	mov	x1, x23
   14048:	bl	6970 <PyList_GetItem@plt>
   1404c:	ldr	x8, [x24, #3360]
   14050:	cbz	x8, 14098 <PyInit__decimal@@Base+0xd5e4>
   14054:	mov	x8, x25
   14058:	ldur	x9, [x8, #-8]
   1405c:	cmp	x9, x0
   14060:	b.eq	14070 <PyInit__decimal@@Base+0xd5bc>  // b.none
   14064:	ldr	x9, [x8], #32
   14068:	cbnz	x9, 14058 <PyInit__decimal@@Base+0xd5a4>
   1406c:	b	14098 <PyInit__decimal@@Base+0xd5e4>
   14070:	ldur	w8, [x8, #-16]
   14074:	tst	w8, #0x18000
   14078:	b.ne	140b0 <PyInit__decimal@@Base+0xd5fc>  // b.any
   1407c:	add	x23, x23, #0x1
   14080:	cmp	x23, x22
   14084:	orr	w21, w8, w21
   14088:	b.ne	14040 <PyInit__decimal@@Base+0xd58c>  // b.any
   1408c:	tst	w21, #0x18000
   14090:	b.ne	140b0 <PyInit__decimal@@Base+0xd5fc>  // b.any
   14094:	b	140fc <PyInit__decimal@@Base+0xd648>
   14098:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1409c:	ldr	x8, [x8, #3968]
   140a0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   140a4:	add	x1, x1, #0x6a7
   140a8:	ldr	x0, [x8]
   140ac:	bl	6590 <PyErr_SetString@plt>
   140b0:	mov	w0, #0xffffffff            	// #-1
   140b4:	ldp	x20, x19, [sp, #160]
   140b8:	ldp	x22, x21, [sp, #144]
   140bc:	ldp	x24, x23, [sp, #128]
   140c0:	ldp	x26, x25, [sp, #112]
   140c4:	ldp	x29, x30, [sp, #96]
   140c8:	add	sp, sp, #0xb0
   140cc:	ret
   140d0:	ldr	x8, [x20, #16]
   140d4:	ldr	w1, [x8]
   140d8:	add	x0, x19, #0x10
   140dc:	bl	1db78 <PyInit__decimal@@Base+0x170c4>
   140e0:	cbnz	w0, 1410c <PyInit__decimal@@Base+0xd658>
   140e4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   140e8:	ldr	x8, [x8, #3920]
   140ec:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   140f0:	add	x1, x1, #0x472
   140f4:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   140f8:	mov	w21, wzr
   140fc:	add	x0, x19, #0x10
   14100:	mov	w1, w21
   14104:	bl	1db78 <PyInit__decimal@@Base+0x170c4>
   14108:	cbz	w0, 14128 <PyInit__decimal@@Base+0xd674>
   1410c:	mov	w0, wzr
   14110:	b	140b4 <PyInit__decimal@@Base+0xd600>
   14114:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   14118:	ldr	x8, [x8, #3920]
   1411c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   14120:	add	x1, x1, #0x67f
   14124:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   14128:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1412c:	ldr	x8, [x8, #3920]
   14130:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   14134:	add	x1, x1, #0x73b
   14138:	b	140a8 <PyInit__decimal@@Base+0xd5f4>
   1413c:	stp	x29, x30, [sp, #-32]!
   14140:	stp	x20, x19, [sp, #16]
   14144:	mov	x29, sp
   14148:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1414c:	add	x8, x8, #0x0
   14150:	cmp	x0, x8
   14154:	b.eq	141b4 <PyInit__decimal@@Base+0xd700>  // b.none
   14158:	ldr	x8, [x0, #304]
   1415c:	mov	x1, xzr
   14160:	blr	x8
   14164:	mov	x19, x0
   14168:	cbz	x0, 141c8 <PyInit__decimal@@Base+0xd714>
   1416c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   14170:	ldr	x0, [x20, #1472]
   14174:	mov	x1, xzr
   14178:	bl	6780 <PyObject_CallObject@plt>
   1417c:	str	x0, [x19, #64]
   14180:	cbz	x0, 141d8 <PyInit__decimal@@Base+0xd724>
   14184:	ldr	x0, [x20, #1472]
   14188:	mov	x1, xzr
   1418c:	bl	6780 <PyObject_CallObject@plt>
   14190:	str	x0, [x19, #72]
   14194:	cbz	x0, 141f0 <PyInit__decimal@@Base+0xd73c>
   14198:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1419c:	ldr	x9, [x8, #1496]
   141a0:	add	x8, x19, #0x10
   141a4:	cbz	x9, 14228 <PyInit__decimal@@Base+0xd774>
   141a8:	ldp	q1, q0, [x9, #32]
   141ac:	ldr	q2, [x9, #16]
   141b0:	b	14238 <PyInit__decimal@@Base+0xd784>
   141b4:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   141b8:	add	x0, x0, #0x0
   141bc:	bl	6890 <_PyObject_New@plt>
   141c0:	mov	x19, x0
   141c4:	cbnz	x0, 1416c <PyInit__decimal@@Base+0xd6b8>
   141c8:	mov	x0, xzr
   141cc:	ldp	x20, x19, [sp, #16]
   141d0:	ldp	x29, x30, [sp], #32
   141d4:	ret
   141d8:	ldr	x8, [x19]
   141dc:	str	xzr, [x19, #72]
   141e0:	subs	x8, x8, #0x1
   141e4:	str	x8, [x19]
   141e8:	b.ne	141cc <PyInit__decimal@@Base+0xd718>  // b.any
   141ec:	b	14210 <PyInit__decimal@@Base+0xd75c>
   141f0:	ldr	x8, [x19]
   141f4:	subs	x8, x8, #0x1
   141f8:	str	x8, [x19]
   141fc:	b.eq	14210 <PyInit__decimal@@Base+0xd75c>  // b.none
   14200:	mov	x0, xzr
   14204:	ldp	x20, x19, [sp, #16]
   14208:	ldp	x29, x30, [sp], #32
   1420c:	ret
   14210:	mov	x0, x19
   14214:	bl	6510 <_Py_Dealloc@plt>
   14218:	mov	x0, xzr
   1421c:	ldp	x20, x19, [sp, #16]
   14220:	ldp	x29, x30, [sp], #32
   14224:	ret
   14228:	adrp	x9, 43000 <PyInit__decimal@@Base+0x3c54c>
   1422c:	add	x9, x9, #0x818
   14230:	ldp	q1, q0, [x9, #16]
   14234:	ldr	q2, [x9]
   14238:	stp	q1, q0, [x8, #16]
   1423c:	str	q2, [x8], #28
   14240:	ldr	x9, [x19, #64]
   14244:	add	x10, x19, #0x28
   14248:	mov	w11, #0x1                   	// #1
   1424c:	str	x10, [x9, #16]
   14250:	str	x8, [x0, #16]
   14254:	mov	x0, x19
   14258:	str	w11, [x19, #80]
   1425c:	str	xzr, [x19, #88]
   14260:	ldp	x20, x19, [sp, #16]
   14264:	ldp	x29, x30, [sp], #32
   14268:	ret
   1426c:	stp	x29, x30, [sp, #-48]!
   14270:	str	x21, [sp, #16]
   14274:	stp	x20, x19, [sp, #32]
   14278:	mov	x29, sp
   1427c:	ldr	x8, [x0, #8]
   14280:	ldrb	w8, [x8, #171]
   14284:	tbnz	w8, #5, 1429c <PyInit__decimal@@Base+0xd7e8>
   14288:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1428c:	ldr	x8, [x8, #3936]
   14290:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   14294:	add	x1, x1, #0x43f
   14298:	b	14324 <PyInit__decimal@@Base+0xd870>
   1429c:	mov	x20, x0
   142a0:	bl	6430 <PyDict_Size@plt>
   142a4:	cmp	x0, #0x9
   142a8:	b.ne	14314 <PyInit__decimal@@Base+0xd860>  // b.any
   142ac:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   142b0:	ldr	x8, [x8, #3360]
   142b4:	cbz	x8, 142fc <PyInit__decimal@@Base+0xd848>
   142b8:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   142bc:	mov	w19, wzr
   142c0:	add	x21, x21, #0xd40
   142c4:	b	142d0 <PyInit__decimal@@Base+0xd81c>
   142c8:	ldr	x8, [x21], #32
   142cc:	cbz	x8, 14330 <PyInit__decimal@@Base+0xd87c>
   142d0:	ldur	x1, [x21, #-8]
   142d4:	mov	x0, x20
   142d8:	bl	69c0 <PyDict_GetItemWithError@plt>
   142dc:	cbz	x0, 14304 <PyInit__decimal@@Base+0xd850>
   142e0:	bl	6810 <PyObject_IsTrue@plt>
   142e4:	tbnz	w0, #31, 1430c <PyInit__decimal@@Base+0xd858>
   142e8:	cmp	w0, #0x1
   142ec:	b.ne	142c8 <PyInit__decimal@@Base+0xd814>  // b.any
   142f0:	ldur	w8, [x21, #-16]
   142f4:	orr	w19, w8, w19
   142f8:	b	142c8 <PyInit__decimal@@Base+0xd814>
   142fc:	mov	w19, wzr
   14300:	b	14330 <PyInit__decimal@@Base+0xd87c>
   14304:	bl	6720 <PyErr_Occurred@plt>
   14308:	cbz	x0, 14314 <PyInit__decimal@@Base+0xd860>
   1430c:	mov	w19, #0x10000               	// #65536
   14310:	b	14330 <PyInit__decimal@@Base+0xd87c>
   14314:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   14318:	ldr	x8, [x8, #3968]
   1431c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   14320:	add	x1, x1, #0x45e
   14324:	ldr	x0, [x8]
   14328:	bl	6590 <PyErr_SetString@plt>
   1432c:	mov	w19, #0x8000                	// #32768
   14330:	mov	w0, w19
   14334:	ldp	x20, x19, [sp, #32]
   14338:	ldr	x21, [sp, #16]
   1433c:	ldp	x29, x30, [sp], #48
   14340:	ret
   14344:	stp	x29, x30, [sp, #-48]!
   14348:	str	x21, [sp, #16]
   1434c:	stp	x20, x19, [sp, #32]
   14350:	mov	x29, sp
   14354:	str	wzr, [x29, #28]
   14358:	ldr	x8, [x1, #8]
   1435c:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14360:	add	x9, x9, #0xe60
   14364:	mov	x19, x1
   14368:	cmp	x8, x9
   1436c:	mov	x20, x0
   14370:	b.eq	14388 <PyInit__decimal@@Base+0xd8d4>  // b.none
   14374:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14378:	add	x1, x1, #0xe60
   1437c:	mov	x0, x8
   14380:	bl	6900 <PyType_IsSubtype@plt>
   14384:	cbz	w0, 14438 <PyInit__decimal@@Base+0xd984>
   14388:	ldr	x8, [x19]
   1438c:	add	x8, x8, #0x1
   14390:	str	x8, [x19]
   14394:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14398:	add	x0, x0, #0xe60
   1439c:	bl	6890 <_PyObject_New@plt>
   143a0:	cbz	x0, 1441c <PyInit__decimal@@Base+0xd968>
   143a4:	mov	w8, #0x30                  	// #48
   143a8:	mov	x21, x0
   143ac:	strb	w8, [x0, #24]!
   143b0:	mov	x9, #0xffffffffffffffff    	// #-1
   143b4:	mov	w10, #0x4                   	// #4
   143b8:	add	x1, x19, #0x18
   143bc:	add	x8, x0, #0x30
   143c0:	add	x2, x20, #0x10
   143c4:	add	x3, x29, #0x1c
   143c8:	stur	x9, [x0, #-8]
   143cc:	stp	xzr, xzr, [x0, #8]
   143d0:	stp	xzr, x10, [x0, #24]
   143d4:	str	x8, [x0, #40]
   143d8:	bl	29e18 <PyInit__decimal@@Base+0x23364>
   143dc:	ldr	x8, [x19]
   143e0:	subs	x8, x8, #0x1
   143e4:	str	x8, [x19]
   143e8:	b.ne	143f4 <PyInit__decimal@@Base+0xd940>  // b.any
   143ec:	mov	x0, x19
   143f0:	bl	6510 <_Py_Dealloc@plt>
   143f4:	ldr	w1, [x29, #28]
   143f8:	mov	x0, x20
   143fc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14400:	cbz	w0, 14484 <PyInit__decimal@@Base+0xd9d0>
   14404:	ldr	x8, [x21]
   14408:	subs	x8, x8, #0x1
   1440c:	str	x8, [x21]
   14410:	b.ne	14480 <PyInit__decimal@@Base+0xd9cc>  // b.any
   14414:	mov	x0, x21
   14418:	b	14430 <PyInit__decimal@@Base+0xd97c>
   1441c:	ldr	x8, [x19]
   14420:	subs	x8, x8, #0x1
   14424:	str	x8, [x19]
   14428:	b.ne	14480 <PyInit__decimal@@Base+0xd9cc>  // b.any
   1442c:	mov	x0, x19
   14430:	bl	6510 <_Py_Dealloc@plt>
   14434:	b	14480 <PyInit__decimal@@Base+0xd9cc>
   14438:	ldr	x8, [x19, #8]
   1443c:	ldrb	w9, [x8, #171]
   14440:	tbnz	w9, #0, 14464 <PyInit__decimal@@Base+0xd9b0>
   14444:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14448:	ldr	x9, [x9, #3936]
   1444c:	ldr	x2, [x8, #24]
   14450:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   14454:	add	x1, x1, #0xb93
   14458:	ldr	x0, [x9]
   1445c:	bl	6950 <PyErr_Format@plt>
   14460:	b	14480 <PyInit__decimal@@Base+0xd9cc>
   14464:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14468:	add	x0, x0, #0xe60
   1446c:	mov	x1, x19
   14470:	mov	x2, x20
   14474:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14478:	mov	x19, x0
   1447c:	cbnz	x0, 14394 <PyInit__decimal@@Base+0xd8e0>
   14480:	mov	x21, xzr
   14484:	mov	x0, x21
   14488:	ldp	x20, x19, [sp, #32]
   1448c:	ldr	x21, [sp, #16]
   14490:	ldp	x29, x30, [sp], #48
   14494:	ret
   14498:	stp	x29, x30, [sp, #-48]!
   1449c:	str	x21, [sp, #16]
   144a0:	stp	x20, x19, [sp, #32]
   144a4:	mov	x29, sp
   144a8:	str	wzr, [x29, #28]
   144ac:	ldr	x8, [x1, #8]
   144b0:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   144b4:	add	x9, x9, #0xe60
   144b8:	mov	x19, x1
   144bc:	cmp	x8, x9
   144c0:	mov	x20, x0
   144c4:	b.eq	144dc <PyInit__decimal@@Base+0xda28>  // b.none
   144c8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   144cc:	add	x1, x1, #0xe60
   144d0:	mov	x0, x8
   144d4:	bl	6900 <PyType_IsSubtype@plt>
   144d8:	cbz	w0, 1458c <PyInit__decimal@@Base+0xdad8>
   144dc:	ldr	x8, [x19]
   144e0:	add	x8, x8, #0x1
   144e4:	str	x8, [x19]
   144e8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   144ec:	add	x0, x0, #0xe60
   144f0:	bl	6890 <_PyObject_New@plt>
   144f4:	cbz	x0, 14570 <PyInit__decimal@@Base+0xdabc>
   144f8:	mov	w8, #0x30                  	// #48
   144fc:	mov	x21, x0
   14500:	strb	w8, [x0, #24]!
   14504:	mov	x9, #0xffffffffffffffff    	// #-1
   14508:	mov	w10, #0x4                   	// #4
   1450c:	add	x1, x19, #0x18
   14510:	add	x8, x0, #0x30
   14514:	add	x2, x20, #0x10
   14518:	add	x3, x29, #0x1c
   1451c:	stur	x9, [x0, #-8]
   14520:	stp	xzr, xzr, [x0, #8]
   14524:	stp	xzr, x10, [x0, #24]
   14528:	str	x8, [x0, #40]
   1452c:	bl	2d8c4 <PyInit__decimal@@Base+0x26e10>
   14530:	ldr	x8, [x19]
   14534:	subs	x8, x8, #0x1
   14538:	str	x8, [x19]
   1453c:	b.ne	14548 <PyInit__decimal@@Base+0xda94>  // b.any
   14540:	mov	x0, x19
   14544:	bl	6510 <_Py_Dealloc@plt>
   14548:	ldr	w1, [x29, #28]
   1454c:	mov	x0, x20
   14550:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14554:	cbz	w0, 145d8 <PyInit__decimal@@Base+0xdb24>
   14558:	ldr	x8, [x21]
   1455c:	subs	x8, x8, #0x1
   14560:	str	x8, [x21]
   14564:	b.ne	145d4 <PyInit__decimal@@Base+0xdb20>  // b.any
   14568:	mov	x0, x21
   1456c:	b	14584 <PyInit__decimal@@Base+0xdad0>
   14570:	ldr	x8, [x19]
   14574:	subs	x8, x8, #0x1
   14578:	str	x8, [x19]
   1457c:	b.ne	145d4 <PyInit__decimal@@Base+0xdb20>  // b.any
   14580:	mov	x0, x19
   14584:	bl	6510 <_Py_Dealloc@plt>
   14588:	b	145d4 <PyInit__decimal@@Base+0xdb20>
   1458c:	ldr	x8, [x19, #8]
   14590:	ldrb	w9, [x8, #171]
   14594:	tbnz	w9, #0, 145b8 <PyInit__decimal@@Base+0xdb04>
   14598:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1459c:	ldr	x9, [x9, #3936]
   145a0:	ldr	x2, [x8, #24]
   145a4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   145a8:	add	x1, x1, #0xb93
   145ac:	ldr	x0, [x9]
   145b0:	bl	6950 <PyErr_Format@plt>
   145b4:	b	145d4 <PyInit__decimal@@Base+0xdb20>
   145b8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   145bc:	add	x0, x0, #0xe60
   145c0:	mov	x1, x19
   145c4:	mov	x2, x20
   145c8:	bl	abdc <PyInit__decimal@@Base+0x4128>
   145cc:	mov	x19, x0
   145d0:	cbnz	x0, 144e8 <PyInit__decimal@@Base+0xda34>
   145d4:	mov	x21, xzr
   145d8:	mov	x0, x21
   145dc:	ldp	x20, x19, [sp, #32]
   145e0:	ldr	x21, [sp, #16]
   145e4:	ldp	x29, x30, [sp], #48
   145e8:	ret
   145ec:	stp	x29, x30, [sp, #-48]!
   145f0:	str	x21, [sp, #16]
   145f4:	stp	x20, x19, [sp, #32]
   145f8:	mov	x29, sp
   145fc:	str	wzr, [x29, #28]
   14600:	ldr	x8, [x1, #8]
   14604:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14608:	add	x9, x9, #0xe60
   1460c:	mov	x19, x1
   14610:	cmp	x8, x9
   14614:	mov	x20, x0
   14618:	b.eq	14630 <PyInit__decimal@@Base+0xdb7c>  // b.none
   1461c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14620:	add	x1, x1, #0xe60
   14624:	mov	x0, x8
   14628:	bl	6900 <PyType_IsSubtype@plt>
   1462c:	cbz	w0, 146e0 <PyInit__decimal@@Base+0xdc2c>
   14630:	ldr	x8, [x19]
   14634:	add	x8, x8, #0x1
   14638:	str	x8, [x19]
   1463c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14640:	add	x0, x0, #0xe60
   14644:	bl	6890 <_PyObject_New@plt>
   14648:	cbz	x0, 146c4 <PyInit__decimal@@Base+0xdc10>
   1464c:	mov	w8, #0x30                  	// #48
   14650:	mov	x21, x0
   14654:	strb	w8, [x0, #24]!
   14658:	mov	x9, #0xffffffffffffffff    	// #-1
   1465c:	mov	w10, #0x4                   	// #4
   14660:	add	x1, x19, #0x18
   14664:	add	x8, x0, #0x30
   14668:	add	x2, x20, #0x10
   1466c:	add	x3, x29, #0x1c
   14670:	stur	x9, [x0, #-8]
   14674:	stp	xzr, xzr, [x0, #8]
   14678:	stp	xzr, x10, [x0, #24]
   1467c:	str	x8, [x0, #40]
   14680:	bl	2ffec <PyInit__decimal@@Base+0x29538>
   14684:	ldr	x8, [x19]
   14688:	subs	x8, x8, #0x1
   1468c:	str	x8, [x19]
   14690:	b.ne	1469c <PyInit__decimal@@Base+0xdbe8>  // b.any
   14694:	mov	x0, x19
   14698:	bl	6510 <_Py_Dealloc@plt>
   1469c:	ldr	w1, [x29, #28]
   146a0:	mov	x0, x20
   146a4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   146a8:	cbz	w0, 1472c <PyInit__decimal@@Base+0xdc78>
   146ac:	ldr	x8, [x21]
   146b0:	subs	x8, x8, #0x1
   146b4:	str	x8, [x21]
   146b8:	b.ne	14728 <PyInit__decimal@@Base+0xdc74>  // b.any
   146bc:	mov	x0, x21
   146c0:	b	146d8 <PyInit__decimal@@Base+0xdc24>
   146c4:	ldr	x8, [x19]
   146c8:	subs	x8, x8, #0x1
   146cc:	str	x8, [x19]
   146d0:	b.ne	14728 <PyInit__decimal@@Base+0xdc74>  // b.any
   146d4:	mov	x0, x19
   146d8:	bl	6510 <_Py_Dealloc@plt>
   146dc:	b	14728 <PyInit__decimal@@Base+0xdc74>
   146e0:	ldr	x8, [x19, #8]
   146e4:	ldrb	w9, [x8, #171]
   146e8:	tbnz	w9, #0, 1470c <PyInit__decimal@@Base+0xdc58>
   146ec:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   146f0:	ldr	x9, [x9, #3936]
   146f4:	ldr	x2, [x8, #24]
   146f8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   146fc:	add	x1, x1, #0xb93
   14700:	ldr	x0, [x9]
   14704:	bl	6950 <PyErr_Format@plt>
   14708:	b	14728 <PyInit__decimal@@Base+0xdc74>
   1470c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14710:	add	x0, x0, #0xe60
   14714:	mov	x1, x19
   14718:	mov	x2, x20
   1471c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14720:	mov	x19, x0
   14724:	cbnz	x0, 1463c <PyInit__decimal@@Base+0xdb88>
   14728:	mov	x21, xzr
   1472c:	mov	x0, x21
   14730:	ldp	x20, x19, [sp, #32]
   14734:	ldr	x21, [sp, #16]
   14738:	ldp	x29, x30, [sp], #48
   1473c:	ret
   14740:	stp	x29, x30, [sp, #-48]!
   14744:	str	x21, [sp, #16]
   14748:	stp	x20, x19, [sp, #32]
   1474c:	mov	x29, sp
   14750:	str	wzr, [x29, #28]
   14754:	ldr	x8, [x1, #8]
   14758:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   1475c:	add	x9, x9, #0xe60
   14760:	mov	x19, x1
   14764:	cmp	x8, x9
   14768:	mov	x20, x0
   1476c:	b.eq	14784 <PyInit__decimal@@Base+0xdcd0>  // b.none
   14770:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14774:	add	x1, x1, #0xe60
   14778:	mov	x0, x8
   1477c:	bl	6900 <PyType_IsSubtype@plt>
   14780:	cbz	w0, 14834 <PyInit__decimal@@Base+0xdd80>
   14784:	ldr	x8, [x19]
   14788:	add	x8, x8, #0x1
   1478c:	str	x8, [x19]
   14790:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14794:	add	x0, x0, #0xe60
   14798:	bl	6890 <_PyObject_New@plt>
   1479c:	cbz	x0, 14818 <PyInit__decimal@@Base+0xdd64>
   147a0:	mov	w8, #0x30                  	// #48
   147a4:	mov	x21, x0
   147a8:	strb	w8, [x0, #24]!
   147ac:	mov	x9, #0xffffffffffffffff    	// #-1
   147b0:	mov	w10, #0x4                   	// #4
   147b4:	add	x1, x19, #0x18
   147b8:	add	x8, x0, #0x30
   147bc:	add	x2, x20, #0x10
   147c0:	add	x3, x29, #0x1c
   147c4:	stur	x9, [x0, #-8]
   147c8:	stp	xzr, xzr, [x0, #8]
   147cc:	stp	xzr, x10, [x0, #24]
   147d0:	str	x8, [x0, #40]
   147d4:	bl	3126c <PyInit__decimal@@Base+0x2a7b8>
   147d8:	ldr	x8, [x19]
   147dc:	subs	x8, x8, #0x1
   147e0:	str	x8, [x19]
   147e4:	b.ne	147f0 <PyInit__decimal@@Base+0xdd3c>  // b.any
   147e8:	mov	x0, x19
   147ec:	bl	6510 <_Py_Dealloc@plt>
   147f0:	ldr	w1, [x29, #28]
   147f4:	mov	x0, x20
   147f8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   147fc:	cbz	w0, 14880 <PyInit__decimal@@Base+0xddcc>
   14800:	ldr	x8, [x21]
   14804:	subs	x8, x8, #0x1
   14808:	str	x8, [x21]
   1480c:	b.ne	1487c <PyInit__decimal@@Base+0xddc8>  // b.any
   14810:	mov	x0, x21
   14814:	b	1482c <PyInit__decimal@@Base+0xdd78>
   14818:	ldr	x8, [x19]
   1481c:	subs	x8, x8, #0x1
   14820:	str	x8, [x19]
   14824:	b.ne	1487c <PyInit__decimal@@Base+0xddc8>  // b.any
   14828:	mov	x0, x19
   1482c:	bl	6510 <_Py_Dealloc@plt>
   14830:	b	1487c <PyInit__decimal@@Base+0xddc8>
   14834:	ldr	x8, [x19, #8]
   14838:	ldrb	w9, [x8, #171]
   1483c:	tbnz	w9, #0, 14860 <PyInit__decimal@@Base+0xddac>
   14840:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14844:	ldr	x9, [x9, #3936]
   14848:	ldr	x2, [x8, #24]
   1484c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   14850:	add	x1, x1, #0xb93
   14854:	ldr	x0, [x9]
   14858:	bl	6950 <PyErr_Format@plt>
   1485c:	b	1487c <PyInit__decimal@@Base+0xddc8>
   14860:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14864:	add	x0, x0, #0xe60
   14868:	mov	x1, x19
   1486c:	mov	x2, x20
   14870:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14874:	mov	x19, x0
   14878:	cbnz	x0, 14790 <PyInit__decimal@@Base+0xdcdc>
   1487c:	mov	x21, xzr
   14880:	mov	x0, x21
   14884:	ldp	x20, x19, [sp, #32]
   14888:	ldr	x21, [sp, #16]
   1488c:	ldp	x29, x30, [sp], #48
   14890:	ret
   14894:	stp	x29, x30, [sp, #-48]!
   14898:	str	x21, [sp, #16]
   1489c:	stp	x20, x19, [sp, #32]
   148a0:	mov	x29, sp
   148a4:	str	wzr, [x29, #28]
   148a8:	ldr	x8, [x1, #8]
   148ac:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   148b0:	add	x9, x9, #0xe60
   148b4:	mov	x19, x1
   148b8:	cmp	x8, x9
   148bc:	mov	x20, x0
   148c0:	b.eq	148d8 <PyInit__decimal@@Base+0xde24>  // b.none
   148c4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   148c8:	add	x1, x1, #0xe60
   148cc:	mov	x0, x8
   148d0:	bl	6900 <PyType_IsSubtype@plt>
   148d4:	cbz	w0, 14988 <PyInit__decimal@@Base+0xded4>
   148d8:	ldr	x8, [x19]
   148dc:	add	x8, x8, #0x1
   148e0:	str	x8, [x19]
   148e4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   148e8:	add	x0, x0, #0xe60
   148ec:	bl	6890 <_PyObject_New@plt>
   148f0:	cbz	x0, 1496c <PyInit__decimal@@Base+0xdeb8>
   148f4:	mov	w8, #0x30                  	// #48
   148f8:	mov	x21, x0
   148fc:	strb	w8, [x0, #24]!
   14900:	mov	x9, #0xffffffffffffffff    	// #-1
   14904:	mov	w10, #0x4                   	// #4
   14908:	add	x1, x19, #0x18
   1490c:	add	x8, x0, #0x30
   14910:	add	x2, x20, #0x10
   14914:	add	x3, x29, #0x1c
   14918:	stur	x9, [x0, #-8]
   1491c:	stp	xzr, xzr, [x0, #8]
   14920:	stp	xzr, x10, [x0, #24]
   14924:	str	x8, [x0, #40]
   14928:	bl	29ea4 <PyInit__decimal@@Base+0x233f0>
   1492c:	ldr	x8, [x19]
   14930:	subs	x8, x8, #0x1
   14934:	str	x8, [x19]
   14938:	b.ne	14944 <PyInit__decimal@@Base+0xde90>  // b.any
   1493c:	mov	x0, x19
   14940:	bl	6510 <_Py_Dealloc@plt>
   14944:	ldr	w1, [x29, #28]
   14948:	mov	x0, x20
   1494c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14950:	cbz	w0, 149d4 <PyInit__decimal@@Base+0xdf20>
   14954:	ldr	x8, [x21]
   14958:	subs	x8, x8, #0x1
   1495c:	str	x8, [x21]
   14960:	b.ne	149d0 <PyInit__decimal@@Base+0xdf1c>  // b.any
   14964:	mov	x0, x21
   14968:	b	14980 <PyInit__decimal@@Base+0xdecc>
   1496c:	ldr	x8, [x19]
   14970:	subs	x8, x8, #0x1
   14974:	str	x8, [x19]
   14978:	b.ne	149d0 <PyInit__decimal@@Base+0xdf1c>  // b.any
   1497c:	mov	x0, x19
   14980:	bl	6510 <_Py_Dealloc@plt>
   14984:	b	149d0 <PyInit__decimal@@Base+0xdf1c>
   14988:	ldr	x8, [x19, #8]
   1498c:	ldrb	w9, [x8, #171]
   14990:	tbnz	w9, #0, 149b4 <PyInit__decimal@@Base+0xdf00>
   14994:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14998:	ldr	x9, [x9, #3936]
   1499c:	ldr	x2, [x8, #24]
   149a0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   149a4:	add	x1, x1, #0xb93
   149a8:	ldr	x0, [x9]
   149ac:	bl	6950 <PyErr_Format@plt>
   149b0:	b	149d0 <PyInit__decimal@@Base+0xdf1c>
   149b4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   149b8:	add	x0, x0, #0xe60
   149bc:	mov	x1, x19
   149c0:	mov	x2, x20
   149c4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   149c8:	mov	x19, x0
   149cc:	cbnz	x0, 148e4 <PyInit__decimal@@Base+0xde30>
   149d0:	mov	x21, xzr
   149d4:	mov	x0, x21
   149d8:	ldp	x20, x19, [sp, #32]
   149dc:	ldr	x21, [sp, #16]
   149e0:	ldp	x29, x30, [sp], #48
   149e4:	ret
   149e8:	stp	x29, x30, [sp, #-48]!
   149ec:	str	x21, [sp, #16]
   149f0:	stp	x20, x19, [sp, #32]
   149f4:	mov	x29, sp
   149f8:	str	wzr, [x29, #28]
   149fc:	ldr	x8, [x1, #8]
   14a00:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14a04:	add	x9, x9, #0xe60
   14a08:	mov	x19, x1
   14a0c:	cmp	x8, x9
   14a10:	mov	x20, x0
   14a14:	b.eq	14a2c <PyInit__decimal@@Base+0xdf78>  // b.none
   14a18:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14a1c:	add	x1, x1, #0xe60
   14a20:	mov	x0, x8
   14a24:	bl	6900 <PyType_IsSubtype@plt>
   14a28:	cbz	w0, 14adc <PyInit__decimal@@Base+0xe028>
   14a2c:	ldr	x8, [x19]
   14a30:	add	x8, x8, #0x1
   14a34:	str	x8, [x19]
   14a38:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14a3c:	add	x0, x0, #0xe60
   14a40:	bl	6890 <_PyObject_New@plt>
   14a44:	cbz	x0, 14ac0 <PyInit__decimal@@Base+0xe00c>
   14a48:	mov	w8, #0x30                  	// #48
   14a4c:	mov	x21, x0
   14a50:	strb	w8, [x0, #24]!
   14a54:	mov	x9, #0xffffffffffffffff    	// #-1
   14a58:	mov	w10, #0x4                   	// #4
   14a5c:	add	x1, x19, #0x18
   14a60:	add	x8, x0, #0x30
   14a64:	add	x2, x20, #0x10
   14a68:	add	x3, x29, #0x1c
   14a6c:	stur	x9, [x0, #-8]
   14a70:	stp	xzr, xzr, [x0, #8]
   14a74:	stp	xzr, x10, [x0, #24]
   14a78:	str	x8, [x0, #40]
   14a7c:	bl	32b10 <PyInit__decimal@@Base+0x2c05c>
   14a80:	ldr	x8, [x19]
   14a84:	subs	x8, x8, #0x1
   14a88:	str	x8, [x19]
   14a8c:	b.ne	14a98 <PyInit__decimal@@Base+0xdfe4>  // b.any
   14a90:	mov	x0, x19
   14a94:	bl	6510 <_Py_Dealloc@plt>
   14a98:	ldr	w1, [x29, #28]
   14a9c:	mov	x0, x20
   14aa0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14aa4:	cbz	w0, 14b28 <PyInit__decimal@@Base+0xe074>
   14aa8:	ldr	x8, [x21]
   14aac:	subs	x8, x8, #0x1
   14ab0:	str	x8, [x21]
   14ab4:	b.ne	14b24 <PyInit__decimal@@Base+0xe070>  // b.any
   14ab8:	mov	x0, x21
   14abc:	b	14ad4 <PyInit__decimal@@Base+0xe020>
   14ac0:	ldr	x8, [x19]
   14ac4:	subs	x8, x8, #0x1
   14ac8:	str	x8, [x19]
   14acc:	b.ne	14b24 <PyInit__decimal@@Base+0xe070>  // b.any
   14ad0:	mov	x0, x19
   14ad4:	bl	6510 <_Py_Dealloc@plt>
   14ad8:	b	14b24 <PyInit__decimal@@Base+0xe070>
   14adc:	ldr	x8, [x19, #8]
   14ae0:	ldrb	w9, [x8, #171]
   14ae4:	tbnz	w9, #0, 14b08 <PyInit__decimal@@Base+0xe054>
   14ae8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14aec:	ldr	x9, [x9, #3936]
   14af0:	ldr	x2, [x8, #24]
   14af4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   14af8:	add	x1, x1, #0xb93
   14afc:	ldr	x0, [x9]
   14b00:	bl	6950 <PyErr_Format@plt>
   14b04:	b	14b24 <PyInit__decimal@@Base+0xe070>
   14b08:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14b0c:	add	x0, x0, #0xe60
   14b10:	mov	x1, x19
   14b14:	mov	x2, x20
   14b18:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14b1c:	mov	x19, x0
   14b20:	cbnz	x0, 14a38 <PyInit__decimal@@Base+0xdf84>
   14b24:	mov	x21, xzr
   14b28:	mov	x0, x21
   14b2c:	ldp	x20, x19, [sp, #32]
   14b30:	ldr	x21, [sp, #16]
   14b34:	ldp	x29, x30, [sp], #48
   14b38:	ret
   14b3c:	stp	x29, x30, [sp, #-48]!
   14b40:	str	x21, [sp, #16]
   14b44:	stp	x20, x19, [sp, #32]
   14b48:	mov	x29, sp
   14b4c:	str	wzr, [x29, #28]
   14b50:	ldr	x8, [x1, #8]
   14b54:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14b58:	add	x9, x9, #0xe60
   14b5c:	mov	x19, x1
   14b60:	cmp	x8, x9
   14b64:	mov	x20, x0
   14b68:	b.eq	14b80 <PyInit__decimal@@Base+0xe0cc>  // b.none
   14b6c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14b70:	add	x1, x1, #0xe60
   14b74:	mov	x0, x8
   14b78:	bl	6900 <PyType_IsSubtype@plt>
   14b7c:	cbz	w0, 14c30 <PyInit__decimal@@Base+0xe17c>
   14b80:	ldr	x8, [x19]
   14b84:	add	x8, x8, #0x1
   14b88:	str	x8, [x19]
   14b8c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14b90:	add	x0, x0, #0xe60
   14b94:	bl	6890 <_PyObject_New@plt>
   14b98:	cbz	x0, 14c14 <PyInit__decimal@@Base+0xe160>
   14b9c:	mov	w8, #0x30                  	// #48
   14ba0:	mov	x21, x0
   14ba4:	strb	w8, [x0, #24]!
   14ba8:	mov	x9, #0xffffffffffffffff    	// #-1
   14bac:	mov	w10, #0x4                   	// #4
   14bb0:	add	x1, x19, #0x18
   14bb4:	add	x8, x0, #0x30
   14bb8:	add	x2, x20, #0x10
   14bbc:	add	x3, x29, #0x1c
   14bc0:	stur	x9, [x0, #-8]
   14bc4:	stp	xzr, xzr, [x0, #8]
   14bc8:	stp	xzr, x10, [x0, #24]
   14bcc:	str	x8, [x0, #40]
   14bd0:	bl	32e8c <PyInit__decimal@@Base+0x2c3d8>
   14bd4:	ldr	x8, [x19]
   14bd8:	subs	x8, x8, #0x1
   14bdc:	str	x8, [x19]
   14be0:	b.ne	14bec <PyInit__decimal@@Base+0xe138>  // b.any
   14be4:	mov	x0, x19
   14be8:	bl	6510 <_Py_Dealloc@plt>
   14bec:	ldr	w1, [x29, #28]
   14bf0:	mov	x0, x20
   14bf4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14bf8:	cbz	w0, 14c7c <PyInit__decimal@@Base+0xe1c8>
   14bfc:	ldr	x8, [x21]
   14c00:	subs	x8, x8, #0x1
   14c04:	str	x8, [x21]
   14c08:	b.ne	14c78 <PyInit__decimal@@Base+0xe1c4>  // b.any
   14c0c:	mov	x0, x21
   14c10:	b	14c28 <PyInit__decimal@@Base+0xe174>
   14c14:	ldr	x8, [x19]
   14c18:	subs	x8, x8, #0x1
   14c1c:	str	x8, [x19]
   14c20:	b.ne	14c78 <PyInit__decimal@@Base+0xe1c4>  // b.any
   14c24:	mov	x0, x19
   14c28:	bl	6510 <_Py_Dealloc@plt>
   14c2c:	b	14c78 <PyInit__decimal@@Base+0xe1c4>
   14c30:	ldr	x8, [x19, #8]
   14c34:	ldrb	w9, [x8, #171]
   14c38:	tbnz	w9, #0, 14c5c <PyInit__decimal@@Base+0xe1a8>
   14c3c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14c40:	ldr	x9, [x9, #3936]
   14c44:	ldr	x2, [x8, #24]
   14c48:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   14c4c:	add	x1, x1, #0xb93
   14c50:	ldr	x0, [x9]
   14c54:	bl	6950 <PyErr_Format@plt>
   14c58:	b	14c78 <PyInit__decimal@@Base+0xe1c4>
   14c5c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14c60:	add	x0, x0, #0xe60
   14c64:	mov	x1, x19
   14c68:	mov	x2, x20
   14c6c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14c70:	mov	x19, x0
   14c74:	cbnz	x0, 14b8c <PyInit__decimal@@Base+0xe0d8>
   14c78:	mov	x21, xzr
   14c7c:	mov	x0, x21
   14c80:	ldp	x20, x19, [sp, #32]
   14c84:	ldr	x21, [sp, #16]
   14c88:	ldp	x29, x30, [sp], #48
   14c8c:	ret
   14c90:	stp	x29, x30, [sp, #-48]!
   14c94:	str	x21, [sp, #16]
   14c98:	stp	x20, x19, [sp, #32]
   14c9c:	mov	x29, sp
   14ca0:	str	wzr, [x29, #28]
   14ca4:	ldr	x8, [x1, #8]
   14ca8:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14cac:	add	x9, x9, #0xe60
   14cb0:	mov	x19, x1
   14cb4:	cmp	x8, x9
   14cb8:	mov	x20, x0
   14cbc:	b.eq	14cd4 <PyInit__decimal@@Base+0xe220>  // b.none
   14cc0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14cc4:	add	x1, x1, #0xe60
   14cc8:	mov	x0, x8
   14ccc:	bl	6900 <PyType_IsSubtype@plt>
   14cd0:	cbz	w0, 14d84 <PyInit__decimal@@Base+0xe2d0>
   14cd4:	ldr	x8, [x19]
   14cd8:	add	x8, x8, #0x1
   14cdc:	str	x8, [x19]
   14ce0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14ce4:	add	x0, x0, #0xe60
   14ce8:	bl	6890 <_PyObject_New@plt>
   14cec:	cbz	x0, 14d68 <PyInit__decimal@@Base+0xe2b4>
   14cf0:	mov	w8, #0x30                  	// #48
   14cf4:	mov	x21, x0
   14cf8:	strb	w8, [x0, #24]!
   14cfc:	mov	x9, #0xffffffffffffffff    	// #-1
   14d00:	mov	w10, #0x4                   	// #4
   14d04:	add	x1, x19, #0x18
   14d08:	add	x8, x0, #0x30
   14d0c:	add	x2, x20, #0x10
   14d10:	add	x3, x29, #0x1c
   14d14:	stur	x9, [x0, #-8]
   14d18:	stp	xzr, xzr, [x0, #8]
   14d1c:	stp	xzr, x10, [x0, #24]
   14d20:	str	x8, [x0, #40]
   14d24:	bl	36bfc <PyInit__decimal@@Base+0x30148>
   14d28:	ldr	x8, [x19]
   14d2c:	subs	x8, x8, #0x1
   14d30:	str	x8, [x19]
   14d34:	b.ne	14d40 <PyInit__decimal@@Base+0xe28c>  // b.any
   14d38:	mov	x0, x19
   14d3c:	bl	6510 <_Py_Dealloc@plt>
   14d40:	ldr	w1, [x29, #28]
   14d44:	mov	x0, x20
   14d48:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14d4c:	cbz	w0, 14dd0 <PyInit__decimal@@Base+0xe31c>
   14d50:	ldr	x8, [x21]
   14d54:	subs	x8, x8, #0x1
   14d58:	str	x8, [x21]
   14d5c:	b.ne	14dcc <PyInit__decimal@@Base+0xe318>  // b.any
   14d60:	mov	x0, x21
   14d64:	b	14d7c <PyInit__decimal@@Base+0xe2c8>
   14d68:	ldr	x8, [x19]
   14d6c:	subs	x8, x8, #0x1
   14d70:	str	x8, [x19]
   14d74:	b.ne	14dcc <PyInit__decimal@@Base+0xe318>  // b.any
   14d78:	mov	x0, x19
   14d7c:	bl	6510 <_Py_Dealloc@plt>
   14d80:	b	14dcc <PyInit__decimal@@Base+0xe318>
   14d84:	ldr	x8, [x19, #8]
   14d88:	ldrb	w9, [x8, #171]
   14d8c:	tbnz	w9, #0, 14db0 <PyInit__decimal@@Base+0xe2fc>
   14d90:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14d94:	ldr	x9, [x9, #3936]
   14d98:	ldr	x2, [x8, #24]
   14d9c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   14da0:	add	x1, x1, #0xb93
   14da4:	ldr	x0, [x9]
   14da8:	bl	6950 <PyErr_Format@plt>
   14dac:	b	14dcc <PyInit__decimal@@Base+0xe318>
   14db0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14db4:	add	x0, x0, #0xe60
   14db8:	mov	x1, x19
   14dbc:	mov	x2, x20
   14dc0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14dc4:	mov	x19, x0
   14dc8:	cbnz	x0, 14ce0 <PyInit__decimal@@Base+0xe22c>
   14dcc:	mov	x21, xzr
   14dd0:	mov	x0, x21
   14dd4:	ldp	x20, x19, [sp, #32]
   14dd8:	ldr	x21, [sp, #16]
   14ddc:	ldp	x29, x30, [sp], #48
   14de0:	ret
   14de4:	stp	x29, x30, [sp, #-48]!
   14de8:	str	x21, [sp, #16]
   14dec:	stp	x20, x19, [sp, #32]
   14df0:	mov	x29, sp
   14df4:	str	wzr, [x29, #28]
   14df8:	ldr	x8, [x1, #8]
   14dfc:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14e00:	add	x9, x9, #0xe60
   14e04:	mov	x19, x1
   14e08:	cmp	x8, x9
   14e0c:	mov	x20, x0
   14e10:	b.eq	14e28 <PyInit__decimal@@Base+0xe374>  // b.none
   14e14:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14e18:	add	x1, x1, #0xe60
   14e1c:	mov	x0, x8
   14e20:	bl	6900 <PyType_IsSubtype@plt>
   14e24:	cbz	w0, 14ed8 <PyInit__decimal@@Base+0xe424>
   14e28:	ldr	x8, [x19]
   14e2c:	add	x8, x8, #0x1
   14e30:	str	x8, [x19]
   14e34:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14e38:	add	x0, x0, #0xe60
   14e3c:	bl	6890 <_PyObject_New@plt>
   14e40:	cbz	x0, 14ebc <PyInit__decimal@@Base+0xe408>
   14e44:	mov	w8, #0x30                  	// #48
   14e48:	mov	x21, x0
   14e4c:	strb	w8, [x0, #24]!
   14e50:	mov	x9, #0xffffffffffffffff    	// #-1
   14e54:	mov	w10, #0x4                   	// #4
   14e58:	add	x1, x19, #0x18
   14e5c:	add	x8, x0, #0x30
   14e60:	add	x2, x20, #0x10
   14e64:	add	x3, x29, #0x1c
   14e68:	stur	x9, [x0, #-8]
   14e6c:	stp	xzr, xzr, [x0, #8]
   14e70:	stp	xzr, x10, [x0, #24]
   14e74:	str	x8, [x0, #40]
   14e78:	bl	2a078 <PyInit__decimal@@Base+0x235c4>
   14e7c:	ldr	x8, [x19]
   14e80:	subs	x8, x8, #0x1
   14e84:	str	x8, [x19]
   14e88:	b.ne	14e94 <PyInit__decimal@@Base+0xe3e0>  // b.any
   14e8c:	mov	x0, x19
   14e90:	bl	6510 <_Py_Dealloc@plt>
   14e94:	ldr	w1, [x29, #28]
   14e98:	mov	x0, x20
   14e9c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14ea0:	cbz	w0, 14f24 <PyInit__decimal@@Base+0xe470>
   14ea4:	ldr	x8, [x21]
   14ea8:	subs	x8, x8, #0x1
   14eac:	str	x8, [x21]
   14eb0:	b.ne	14f20 <PyInit__decimal@@Base+0xe46c>  // b.any
   14eb4:	mov	x0, x21
   14eb8:	b	14ed0 <PyInit__decimal@@Base+0xe41c>
   14ebc:	ldr	x8, [x19]
   14ec0:	subs	x8, x8, #0x1
   14ec4:	str	x8, [x19]
   14ec8:	b.ne	14f20 <PyInit__decimal@@Base+0xe46c>  // b.any
   14ecc:	mov	x0, x19
   14ed0:	bl	6510 <_Py_Dealloc@plt>
   14ed4:	b	14f20 <PyInit__decimal@@Base+0xe46c>
   14ed8:	ldr	x8, [x19, #8]
   14edc:	ldrb	w9, [x8, #171]
   14ee0:	tbnz	w9, #0, 14f04 <PyInit__decimal@@Base+0xe450>
   14ee4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   14ee8:	ldr	x9, [x9, #3936]
   14eec:	ldr	x2, [x8, #24]
   14ef0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   14ef4:	add	x1, x1, #0xb93
   14ef8:	ldr	x0, [x9]
   14efc:	bl	6950 <PyErr_Format@plt>
   14f00:	b	14f20 <PyInit__decimal@@Base+0xe46c>
   14f04:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14f08:	add	x0, x0, #0xe60
   14f0c:	mov	x1, x19
   14f10:	mov	x2, x20
   14f14:	bl	abdc <PyInit__decimal@@Base+0x4128>
   14f18:	mov	x19, x0
   14f1c:	cbnz	x0, 14e34 <PyInit__decimal@@Base+0xe380>
   14f20:	mov	x21, xzr
   14f24:	mov	x0, x21
   14f28:	ldp	x20, x19, [sp, #32]
   14f2c:	ldr	x21, [sp, #16]
   14f30:	ldp	x29, x30, [sp], #48
   14f34:	ret
   14f38:	stp	x29, x30, [sp, #-48]!
   14f3c:	str	x21, [sp, #16]
   14f40:	stp	x20, x19, [sp, #32]
   14f44:	mov	x29, sp
   14f48:	str	wzr, [x29, #28]
   14f4c:	ldr	x8, [x1, #8]
   14f50:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   14f54:	add	x9, x9, #0xe60
   14f58:	mov	x19, x1
   14f5c:	cmp	x8, x9
   14f60:	mov	x20, x0
   14f64:	b.eq	14f7c <PyInit__decimal@@Base+0xe4c8>  // b.none
   14f68:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   14f6c:	add	x1, x1, #0xe60
   14f70:	mov	x0, x8
   14f74:	bl	6900 <PyType_IsSubtype@plt>
   14f78:	cbz	w0, 1502c <PyInit__decimal@@Base+0xe578>
   14f7c:	ldr	x8, [x19]
   14f80:	add	x8, x8, #0x1
   14f84:	str	x8, [x19]
   14f88:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   14f8c:	add	x0, x0, #0xe60
   14f90:	bl	6890 <_PyObject_New@plt>
   14f94:	cbz	x0, 15010 <PyInit__decimal@@Base+0xe55c>
   14f98:	mov	w8, #0x30                  	// #48
   14f9c:	mov	x21, x0
   14fa0:	strb	w8, [x0, #24]!
   14fa4:	mov	x9, #0xffffffffffffffff    	// #-1
   14fa8:	mov	w10, #0x4                   	// #4
   14fac:	add	x1, x19, #0x18
   14fb0:	add	x8, x0, #0x30
   14fb4:	add	x2, x20, #0x10
   14fb8:	add	x3, x29, #0x1c
   14fbc:	stur	x9, [x0, #-8]
   14fc0:	stp	xzr, xzr, [x0, #8]
   14fc4:	stp	xzr, x10, [x0, #24]
   14fc8:	str	x8, [x0, #40]
   14fcc:	bl	3611c <PyInit__decimal@@Base+0x2f668>
   14fd0:	ldr	x8, [x19]
   14fd4:	subs	x8, x8, #0x1
   14fd8:	str	x8, [x19]
   14fdc:	b.ne	14fe8 <PyInit__decimal@@Base+0xe534>  // b.any
   14fe0:	mov	x0, x19
   14fe4:	bl	6510 <_Py_Dealloc@plt>
   14fe8:	ldr	w1, [x29, #28]
   14fec:	mov	x0, x20
   14ff0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   14ff4:	cbz	w0, 15078 <PyInit__decimal@@Base+0xe5c4>
   14ff8:	ldr	x8, [x21]
   14ffc:	subs	x8, x8, #0x1
   15000:	str	x8, [x21]
   15004:	b.ne	15074 <PyInit__decimal@@Base+0xe5c0>  // b.any
   15008:	mov	x0, x21
   1500c:	b	15024 <PyInit__decimal@@Base+0xe570>
   15010:	ldr	x8, [x19]
   15014:	subs	x8, x8, #0x1
   15018:	str	x8, [x19]
   1501c:	b.ne	15074 <PyInit__decimal@@Base+0xe5c0>  // b.any
   15020:	mov	x0, x19
   15024:	bl	6510 <_Py_Dealloc@plt>
   15028:	b	15074 <PyInit__decimal@@Base+0xe5c0>
   1502c:	ldr	x8, [x19, #8]
   15030:	ldrb	w9, [x8, #171]
   15034:	tbnz	w9, #0, 15058 <PyInit__decimal@@Base+0xe5a4>
   15038:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1503c:	ldr	x9, [x9, #3936]
   15040:	ldr	x2, [x8, #24]
   15044:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15048:	add	x1, x1, #0xb93
   1504c:	ldr	x0, [x9]
   15050:	bl	6950 <PyErr_Format@plt>
   15054:	b	15074 <PyInit__decimal@@Base+0xe5c0>
   15058:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1505c:	add	x0, x0, #0xe60
   15060:	mov	x1, x19
   15064:	mov	x2, x20
   15068:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1506c:	mov	x19, x0
   15070:	cbnz	x0, 14f88 <PyInit__decimal@@Base+0xe4d4>
   15074:	mov	x21, xzr
   15078:	mov	x0, x21
   1507c:	ldp	x20, x19, [sp, #32]
   15080:	ldr	x21, [sp, #16]
   15084:	ldp	x29, x30, [sp], #48
   15088:	ret
   1508c:	stp	x29, x30, [sp, #-48]!
   15090:	str	x21, [sp, #16]
   15094:	stp	x20, x19, [sp, #32]
   15098:	mov	x29, sp
   1509c:	str	wzr, [x29, #28]
   150a0:	ldr	x8, [x1, #8]
   150a4:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   150a8:	add	x9, x9, #0xe60
   150ac:	mov	x19, x1
   150b0:	cmp	x8, x9
   150b4:	mov	x20, x0
   150b8:	b.eq	150d0 <PyInit__decimal@@Base+0xe61c>  // b.none
   150bc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   150c0:	add	x1, x1, #0xe60
   150c4:	mov	x0, x8
   150c8:	bl	6900 <PyType_IsSubtype@plt>
   150cc:	cbz	w0, 15180 <PyInit__decimal@@Base+0xe6cc>
   150d0:	ldr	x8, [x19]
   150d4:	add	x8, x8, #0x1
   150d8:	str	x8, [x19]
   150dc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   150e0:	add	x0, x0, #0xe60
   150e4:	bl	6890 <_PyObject_New@plt>
   150e8:	cbz	x0, 15164 <PyInit__decimal@@Base+0xe6b0>
   150ec:	mov	w8, #0x30                  	// #48
   150f0:	mov	x21, x0
   150f4:	strb	w8, [x0, #24]!
   150f8:	mov	x9, #0xffffffffffffffff    	// #-1
   150fc:	mov	w10, #0x4                   	// #4
   15100:	add	x1, x19, #0x18
   15104:	add	x8, x0, #0x30
   15108:	add	x2, x20, #0x10
   1510c:	add	x3, x29, #0x1c
   15110:	stur	x9, [x0, #-8]
   15114:	stp	xzr, xzr, [x0, #8]
   15118:	stp	xzr, x10, [x0, #24]
   1511c:	str	x8, [x0, #40]
   15120:	bl	37f44 <PyInit__decimal@@Base+0x31490>
   15124:	ldr	x8, [x19]
   15128:	subs	x8, x8, #0x1
   1512c:	str	x8, [x19]
   15130:	b.ne	1513c <PyInit__decimal@@Base+0xe688>  // b.any
   15134:	mov	x0, x19
   15138:	bl	6510 <_Py_Dealloc@plt>
   1513c:	ldr	w1, [x29, #28]
   15140:	mov	x0, x20
   15144:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15148:	cbz	w0, 151cc <PyInit__decimal@@Base+0xe718>
   1514c:	ldr	x8, [x21]
   15150:	subs	x8, x8, #0x1
   15154:	str	x8, [x21]
   15158:	b.ne	151c8 <PyInit__decimal@@Base+0xe714>  // b.any
   1515c:	mov	x0, x21
   15160:	b	15178 <PyInit__decimal@@Base+0xe6c4>
   15164:	ldr	x8, [x19]
   15168:	subs	x8, x8, #0x1
   1516c:	str	x8, [x19]
   15170:	b.ne	151c8 <PyInit__decimal@@Base+0xe714>  // b.any
   15174:	mov	x0, x19
   15178:	bl	6510 <_Py_Dealloc@plt>
   1517c:	b	151c8 <PyInit__decimal@@Base+0xe714>
   15180:	ldr	x8, [x19, #8]
   15184:	ldrb	w9, [x8, #171]
   15188:	tbnz	w9, #0, 151ac <PyInit__decimal@@Base+0xe6f8>
   1518c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15190:	ldr	x9, [x9, #3936]
   15194:	ldr	x2, [x8, #24]
   15198:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1519c:	add	x1, x1, #0xb93
   151a0:	ldr	x0, [x9]
   151a4:	bl	6950 <PyErr_Format@plt>
   151a8:	b	151c8 <PyInit__decimal@@Base+0xe714>
   151ac:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   151b0:	add	x0, x0, #0xe60
   151b4:	mov	x1, x19
   151b8:	mov	x2, x20
   151bc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   151c0:	mov	x19, x0
   151c4:	cbnz	x0, 150dc <PyInit__decimal@@Base+0xe628>
   151c8:	mov	x21, xzr
   151cc:	mov	x0, x21
   151d0:	ldp	x20, x19, [sp, #32]
   151d4:	ldr	x21, [sp, #16]
   151d8:	ldp	x29, x30, [sp], #48
   151dc:	ret
   151e0:	stp	x29, x30, [sp, #-48]!
   151e4:	str	x21, [sp, #16]
   151e8:	stp	x20, x19, [sp, #32]
   151ec:	mov	x29, sp
   151f0:	str	wzr, [x29, #28]
   151f4:	ldr	x8, [x1, #8]
   151f8:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   151fc:	add	x9, x9, #0xe60
   15200:	mov	x19, x1
   15204:	cmp	x8, x9
   15208:	mov	x20, x0
   1520c:	b.eq	15224 <PyInit__decimal@@Base+0xe770>  // b.none
   15210:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15214:	add	x1, x1, #0xe60
   15218:	mov	x0, x8
   1521c:	bl	6900 <PyType_IsSubtype@plt>
   15220:	cbz	w0, 152d4 <PyInit__decimal@@Base+0xe820>
   15224:	ldr	x8, [x19]
   15228:	add	x8, x8, #0x1
   1522c:	str	x8, [x19]
   15230:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15234:	add	x0, x0, #0xe60
   15238:	bl	6890 <_PyObject_New@plt>
   1523c:	cbz	x0, 152b8 <PyInit__decimal@@Base+0xe804>
   15240:	mov	w8, #0x30                  	// #48
   15244:	mov	x21, x0
   15248:	strb	w8, [x0, #24]!
   1524c:	mov	x9, #0xffffffffffffffff    	// #-1
   15250:	mov	w10, #0x4                   	// #4
   15254:	add	x1, x19, #0x18
   15258:	add	x8, x0, #0x30
   1525c:	add	x2, x20, #0x10
   15260:	add	x3, x29, #0x1c
   15264:	stur	x9, [x0, #-8]
   15268:	stp	xzr, xzr, [x0, #8]
   1526c:	stp	xzr, x10, [x0, #24]
   15270:	str	x8, [x0, #40]
   15274:	bl	391c4 <PyInit__decimal@@Base+0x32710>
   15278:	ldr	x8, [x19]
   1527c:	subs	x8, x8, #0x1
   15280:	str	x8, [x19]
   15284:	b.ne	15290 <PyInit__decimal@@Base+0xe7dc>  // b.any
   15288:	mov	x0, x19
   1528c:	bl	6510 <_Py_Dealloc@plt>
   15290:	ldr	w1, [x29, #28]
   15294:	mov	x0, x20
   15298:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1529c:	cbz	w0, 15320 <PyInit__decimal@@Base+0xe86c>
   152a0:	ldr	x8, [x21]
   152a4:	subs	x8, x8, #0x1
   152a8:	str	x8, [x21]
   152ac:	b.ne	1531c <PyInit__decimal@@Base+0xe868>  // b.any
   152b0:	mov	x0, x21
   152b4:	b	152cc <PyInit__decimal@@Base+0xe818>
   152b8:	ldr	x8, [x19]
   152bc:	subs	x8, x8, #0x1
   152c0:	str	x8, [x19]
   152c4:	b.ne	1531c <PyInit__decimal@@Base+0xe868>  // b.any
   152c8:	mov	x0, x19
   152cc:	bl	6510 <_Py_Dealloc@plt>
   152d0:	b	1531c <PyInit__decimal@@Base+0xe868>
   152d4:	ldr	x8, [x19, #8]
   152d8:	ldrb	w9, [x8, #171]
   152dc:	tbnz	w9, #0, 15300 <PyInit__decimal@@Base+0xe84c>
   152e0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   152e4:	ldr	x9, [x9, #3936]
   152e8:	ldr	x2, [x8, #24]
   152ec:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   152f0:	add	x1, x1, #0xb93
   152f4:	ldr	x0, [x9]
   152f8:	bl	6950 <PyErr_Format@plt>
   152fc:	b	1531c <PyInit__decimal@@Base+0xe868>
   15300:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15304:	add	x0, x0, #0xe60
   15308:	mov	x1, x19
   1530c:	mov	x2, x20
   15310:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15314:	mov	x19, x0
   15318:	cbnz	x0, 15230 <PyInit__decimal@@Base+0xe77c>
   1531c:	mov	x21, xzr
   15320:	mov	x0, x21
   15324:	ldp	x20, x19, [sp, #32]
   15328:	ldr	x21, [sp, #16]
   1532c:	ldp	x29, x30, [sp], #48
   15330:	ret
   15334:	sub	sp, sp, #0x50
   15338:	stp	x29, x30, [sp, #32]
   1533c:	stp	x22, x21, [sp, #48]
   15340:	stp	x20, x19, [sp, #64]
   15344:	add	x29, sp, #0x20
   15348:	mov	x8, x1
   1534c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   15350:	mov	x19, x0
   15354:	add	x1, x1, #0x67c
   15358:	sub	x2, x29, #0x8
   1535c:	add	x3, sp, #0x10
   15360:	mov	x0, x8
   15364:	str	wzr, [sp, #12]
   15368:	bl	6820 <PyArg_ParseTuple@plt>
   1536c:	cbz	w0, 15574 <PyInit__decimal@@Base+0xeac0>
   15370:	ldur	x20, [x29, #-8]
   15374:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   15378:	add	x22, x22, #0xe60
   1537c:	ldr	x0, [x20, #8]
   15380:	cmp	x0, x22
   15384:	b.eq	15398 <PyInit__decimal@@Base+0xe8e4>  // b.none
   15388:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1538c:	add	x1, x1, #0xe60
   15390:	bl	6900 <PyType_IsSubtype@plt>
   15394:	cbz	w0, 15480 <PyInit__decimal@@Base+0xe9cc>
   15398:	ldr	x8, [x20]
   1539c:	add	x8, x8, #0x1
   153a0:	str	x8, [x20]
   153a4:	ldr	x21, [sp, #16]
   153a8:	ldr	x0, [x21, #8]
   153ac:	cmp	x0, x22
   153b0:	b.eq	153c4 <PyInit__decimal@@Base+0xe910>  // b.none
   153b4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   153b8:	add	x1, x1, #0xe60
   153bc:	bl	6900 <PyType_IsSubtype@plt>
   153c0:	cbz	w0, 154ac <PyInit__decimal@@Base+0xe9f8>
   153c4:	ldr	x8, [x21]
   153c8:	add	x8, x8, #0x1
   153cc:	str	x8, [x21]
   153d0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   153d4:	add	x0, x0, #0xe60
   153d8:	bl	6890 <_PyObject_New@plt>
   153dc:	cbz	x0, 15450 <PyInit__decimal@@Base+0xe99c>
   153e0:	mov	w8, #0x30                  	// #48
   153e4:	mov	x22, x0
   153e8:	strb	w8, [x0, #24]!
   153ec:	mov	x9, #0xffffffffffffffff    	// #-1
   153f0:	mov	w10, #0x4                   	// #4
   153f4:	add	x1, x20, #0x18
   153f8:	add	x2, x21, #0x18
   153fc:	add	x8, x0, #0x30
   15400:	add	x3, x19, #0x10
   15404:	add	x4, sp, #0xc
   15408:	stur	x9, [x0, #-8]
   1540c:	stp	xzr, xzr, [x0, #8]
   15410:	stp	xzr, x10, [x0, #24]
   15414:	str	x8, [x0, #40]
   15418:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   1541c:	ldr	x8, [x20]
   15420:	subs	x8, x8, #0x1
   15424:	str	x8, [x20]
   15428:	b.eq	154d8 <PyInit__decimal@@Base+0xea24>  // b.none
   1542c:	ldr	x8, [x21]
   15430:	subs	x8, x8, #0x1
   15434:	str	x8, [x21]
   15438:	b.eq	154f0 <PyInit__decimal@@Base+0xea3c>  // b.none
   1543c:	ldr	w1, [sp, #12]
   15440:	mov	x0, x19
   15444:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15448:	cbnz	w0, 15508 <PyInit__decimal@@Base+0xea54>
   1544c:	b	15578 <PyInit__decimal@@Base+0xeac4>
   15450:	ldr	x8, [x20]
   15454:	subs	x8, x8, #0x1
   15458:	str	x8, [x20]
   1545c:	b.ne	15468 <PyInit__decimal@@Base+0xe9b4>  // b.any
   15460:	mov	x0, x20
   15464:	bl	6510 <_Py_Dealloc@plt>
   15468:	ldr	x8, [x21]
   1546c:	subs	x8, x8, #0x1
   15470:	str	x8, [x21]
   15474:	b.ne	15574 <PyInit__decimal@@Base+0xeac0>  // b.any
   15478:	mov	x0, x21
   1547c:	b	15570 <PyInit__decimal@@Base+0xeabc>
   15480:	ldr	x8, [x20, #8]
   15484:	ldrb	w9, [x8, #171]
   15488:	tbnz	w9, #0, 15520 <PyInit__decimal@@Base+0xea6c>
   1548c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15490:	ldr	x9, [x9, #3936]
   15494:	ldr	x2, [x8, #24]
   15498:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1549c:	add	x1, x1, #0xb93
   154a0:	ldr	x0, [x9]
   154a4:	bl	6950 <PyErr_Format@plt>
   154a8:	b	15574 <PyInit__decimal@@Base+0xeac0>
   154ac:	ldr	x8, [x21, #8]
   154b0:	ldrb	w9, [x8, #171]
   154b4:	tbnz	w9, #0, 15540 <PyInit__decimal@@Base+0xea8c>
   154b8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   154bc:	ldr	x9, [x9, #3936]
   154c0:	ldr	x2, [x8, #24]
   154c4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   154c8:	add	x1, x1, #0xb93
   154cc:	ldr	x0, [x9]
   154d0:	bl	6950 <PyErr_Format@plt>
   154d4:	b	1555c <PyInit__decimal@@Base+0xeaa8>
   154d8:	mov	x0, x20
   154dc:	bl	6510 <_Py_Dealloc@plt>
   154e0:	ldr	x8, [x21]
   154e4:	subs	x8, x8, #0x1
   154e8:	str	x8, [x21]
   154ec:	b.ne	1543c <PyInit__decimal@@Base+0xe988>  // b.any
   154f0:	mov	x0, x21
   154f4:	bl	6510 <_Py_Dealloc@plt>
   154f8:	ldr	w1, [sp, #12]
   154fc:	mov	x0, x19
   15500:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15504:	cbz	w0, 15578 <PyInit__decimal@@Base+0xeac4>
   15508:	ldr	x8, [x22]
   1550c:	subs	x8, x8, #0x1
   15510:	str	x8, [x22]
   15514:	b.ne	15574 <PyInit__decimal@@Base+0xeac0>  // b.any
   15518:	mov	x0, x22
   1551c:	b	15570 <PyInit__decimal@@Base+0xeabc>
   15520:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15524:	add	x0, x0, #0xe60
   15528:	mov	x1, x20
   1552c:	mov	x2, x19
   15530:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15534:	mov	x20, x0
   15538:	cbnz	x0, 153a4 <PyInit__decimal@@Base+0xe8f0>
   1553c:	b	15574 <PyInit__decimal@@Base+0xeac0>
   15540:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15544:	add	x0, x0, #0xe60
   15548:	mov	x1, x21
   1554c:	mov	x2, x19
   15550:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15554:	mov	x21, x0
   15558:	cbnz	x0, 153d0 <PyInit__decimal@@Base+0xe91c>
   1555c:	ldr	x8, [x20]
   15560:	subs	x8, x8, #0x1
   15564:	str	x8, [x20]
   15568:	b.ne	15574 <PyInit__decimal@@Base+0xeac0>  // b.any
   1556c:	mov	x0, x20
   15570:	bl	6510 <_Py_Dealloc@plt>
   15574:	mov	x22, xzr
   15578:	mov	x0, x22
   1557c:	ldp	x20, x19, [sp, #64]
   15580:	ldp	x22, x21, [sp, #48]
   15584:	ldp	x29, x30, [sp, #32]
   15588:	add	sp, sp, #0x50
   1558c:	ret
   15590:	sub	sp, sp, #0x50
   15594:	stp	x29, x30, [sp, #32]
   15598:	stp	x22, x21, [sp, #48]
   1559c:	stp	x20, x19, [sp, #64]
   155a0:	add	x29, sp, #0x20
   155a4:	mov	x8, x1
   155a8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   155ac:	mov	x19, x0
   155b0:	add	x1, x1, #0x67c
   155b4:	sub	x2, x29, #0x8
   155b8:	add	x3, sp, #0x10
   155bc:	mov	x0, x8
   155c0:	str	wzr, [sp, #12]
   155c4:	bl	6820 <PyArg_ParseTuple@plt>
   155c8:	cbz	w0, 157d0 <PyInit__decimal@@Base+0xed1c>
   155cc:	ldur	x20, [x29, #-8]
   155d0:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   155d4:	add	x22, x22, #0xe60
   155d8:	ldr	x0, [x20, #8]
   155dc:	cmp	x0, x22
   155e0:	b.eq	155f4 <PyInit__decimal@@Base+0xeb40>  // b.none
   155e4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   155e8:	add	x1, x1, #0xe60
   155ec:	bl	6900 <PyType_IsSubtype@plt>
   155f0:	cbz	w0, 156dc <PyInit__decimal@@Base+0xec28>
   155f4:	ldr	x8, [x20]
   155f8:	add	x8, x8, #0x1
   155fc:	str	x8, [x20]
   15600:	ldr	x21, [sp, #16]
   15604:	ldr	x0, [x21, #8]
   15608:	cmp	x0, x22
   1560c:	b.eq	15620 <PyInit__decimal@@Base+0xeb6c>  // b.none
   15610:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15614:	add	x1, x1, #0xe60
   15618:	bl	6900 <PyType_IsSubtype@plt>
   1561c:	cbz	w0, 15708 <PyInit__decimal@@Base+0xec54>
   15620:	ldr	x8, [x21]
   15624:	add	x8, x8, #0x1
   15628:	str	x8, [x21]
   1562c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15630:	add	x0, x0, #0xe60
   15634:	bl	6890 <_PyObject_New@plt>
   15638:	cbz	x0, 156ac <PyInit__decimal@@Base+0xebf8>
   1563c:	mov	w8, #0x30                  	// #48
   15640:	mov	x22, x0
   15644:	strb	w8, [x0, #24]!
   15648:	mov	x9, #0xffffffffffffffff    	// #-1
   1564c:	mov	w10, #0x4                   	// #4
   15650:	add	x1, x20, #0x18
   15654:	add	x2, x21, #0x18
   15658:	add	x8, x0, #0x30
   1565c:	add	x3, x19, #0x10
   15660:	add	x4, sp, #0xc
   15664:	stur	x9, [x0, #-8]
   15668:	stp	xzr, xzr, [x0, #8]
   1566c:	stp	xzr, x10, [x0, #24]
   15670:	str	x8, [x0, #40]
   15674:	bl	257a4 <PyInit__decimal@@Base+0x1ecf0>
   15678:	ldr	x8, [x20]
   1567c:	subs	x8, x8, #0x1
   15680:	str	x8, [x20]
   15684:	b.eq	15734 <PyInit__decimal@@Base+0xec80>  // b.none
   15688:	ldr	x8, [x21]
   1568c:	subs	x8, x8, #0x1
   15690:	str	x8, [x21]
   15694:	b.eq	1574c <PyInit__decimal@@Base+0xec98>  // b.none
   15698:	ldr	w1, [sp, #12]
   1569c:	mov	x0, x19
   156a0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   156a4:	cbnz	w0, 15764 <PyInit__decimal@@Base+0xecb0>
   156a8:	b	157d4 <PyInit__decimal@@Base+0xed20>
   156ac:	ldr	x8, [x20]
   156b0:	subs	x8, x8, #0x1
   156b4:	str	x8, [x20]
   156b8:	b.ne	156c4 <PyInit__decimal@@Base+0xec10>  // b.any
   156bc:	mov	x0, x20
   156c0:	bl	6510 <_Py_Dealloc@plt>
   156c4:	ldr	x8, [x21]
   156c8:	subs	x8, x8, #0x1
   156cc:	str	x8, [x21]
   156d0:	b.ne	157d0 <PyInit__decimal@@Base+0xed1c>  // b.any
   156d4:	mov	x0, x21
   156d8:	b	157cc <PyInit__decimal@@Base+0xed18>
   156dc:	ldr	x8, [x20, #8]
   156e0:	ldrb	w9, [x8, #171]
   156e4:	tbnz	w9, #0, 1577c <PyInit__decimal@@Base+0xecc8>
   156e8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   156ec:	ldr	x9, [x9, #3936]
   156f0:	ldr	x2, [x8, #24]
   156f4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   156f8:	add	x1, x1, #0xb93
   156fc:	ldr	x0, [x9]
   15700:	bl	6950 <PyErr_Format@plt>
   15704:	b	157d0 <PyInit__decimal@@Base+0xed1c>
   15708:	ldr	x8, [x21, #8]
   1570c:	ldrb	w9, [x8, #171]
   15710:	tbnz	w9, #0, 1579c <PyInit__decimal@@Base+0xece8>
   15714:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15718:	ldr	x9, [x9, #3936]
   1571c:	ldr	x2, [x8, #24]
   15720:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15724:	add	x1, x1, #0xb93
   15728:	ldr	x0, [x9]
   1572c:	bl	6950 <PyErr_Format@plt>
   15730:	b	157b8 <PyInit__decimal@@Base+0xed04>
   15734:	mov	x0, x20
   15738:	bl	6510 <_Py_Dealloc@plt>
   1573c:	ldr	x8, [x21]
   15740:	subs	x8, x8, #0x1
   15744:	str	x8, [x21]
   15748:	b.ne	15698 <PyInit__decimal@@Base+0xebe4>  // b.any
   1574c:	mov	x0, x21
   15750:	bl	6510 <_Py_Dealloc@plt>
   15754:	ldr	w1, [sp, #12]
   15758:	mov	x0, x19
   1575c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15760:	cbz	w0, 157d4 <PyInit__decimal@@Base+0xed20>
   15764:	ldr	x8, [x22]
   15768:	subs	x8, x8, #0x1
   1576c:	str	x8, [x22]
   15770:	b.ne	157d0 <PyInit__decimal@@Base+0xed1c>  // b.any
   15774:	mov	x0, x22
   15778:	b	157cc <PyInit__decimal@@Base+0xed18>
   1577c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15780:	add	x0, x0, #0xe60
   15784:	mov	x1, x20
   15788:	mov	x2, x19
   1578c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15790:	mov	x20, x0
   15794:	cbnz	x0, 15600 <PyInit__decimal@@Base+0xeb4c>
   15798:	b	157d0 <PyInit__decimal@@Base+0xed1c>
   1579c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   157a0:	add	x0, x0, #0xe60
   157a4:	mov	x1, x21
   157a8:	mov	x2, x19
   157ac:	bl	abdc <PyInit__decimal@@Base+0x4128>
   157b0:	mov	x21, x0
   157b4:	cbnz	x0, 1562c <PyInit__decimal@@Base+0xeb78>
   157b8:	ldr	x8, [x20]
   157bc:	subs	x8, x8, #0x1
   157c0:	str	x8, [x20]
   157c4:	b.ne	157d0 <PyInit__decimal@@Base+0xed1c>  // b.any
   157c8:	mov	x0, x20
   157cc:	bl	6510 <_Py_Dealloc@plt>
   157d0:	mov	x22, xzr
   157d4:	mov	x0, x22
   157d8:	ldp	x20, x19, [sp, #64]
   157dc:	ldp	x22, x21, [sp, #48]
   157e0:	ldp	x29, x30, [sp, #32]
   157e4:	add	sp, sp, #0x50
   157e8:	ret
   157ec:	sub	sp, sp, #0x50
   157f0:	stp	x29, x30, [sp, #32]
   157f4:	stp	x22, x21, [sp, #48]
   157f8:	stp	x20, x19, [sp, #64]
   157fc:	add	x29, sp, #0x20
   15800:	mov	x8, x1
   15804:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   15808:	mov	x19, x0
   1580c:	add	x1, x1, #0x67c
   15810:	sub	x2, x29, #0x8
   15814:	add	x3, sp, #0x10
   15818:	mov	x0, x8
   1581c:	str	wzr, [sp, #12]
   15820:	bl	6820 <PyArg_ParseTuple@plt>
   15824:	cbz	w0, 15a2c <PyInit__decimal@@Base+0xef78>
   15828:	ldur	x20, [x29, #-8]
   1582c:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   15830:	add	x22, x22, #0xe60
   15834:	ldr	x0, [x20, #8]
   15838:	cmp	x0, x22
   1583c:	b.eq	15850 <PyInit__decimal@@Base+0xed9c>  // b.none
   15840:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15844:	add	x1, x1, #0xe60
   15848:	bl	6900 <PyType_IsSubtype@plt>
   1584c:	cbz	w0, 15938 <PyInit__decimal@@Base+0xee84>
   15850:	ldr	x8, [x20]
   15854:	add	x8, x8, #0x1
   15858:	str	x8, [x20]
   1585c:	ldr	x21, [sp, #16]
   15860:	ldr	x0, [x21, #8]
   15864:	cmp	x0, x22
   15868:	b.eq	1587c <PyInit__decimal@@Base+0xedc8>  // b.none
   1586c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15870:	add	x1, x1, #0xe60
   15874:	bl	6900 <PyType_IsSubtype@plt>
   15878:	cbz	w0, 15964 <PyInit__decimal@@Base+0xeeb0>
   1587c:	ldr	x8, [x21]
   15880:	add	x8, x8, #0x1
   15884:	str	x8, [x21]
   15888:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1588c:	add	x0, x0, #0xe60
   15890:	bl	6890 <_PyObject_New@plt>
   15894:	cbz	x0, 15908 <PyInit__decimal@@Base+0xee54>
   15898:	mov	w8, #0x30                  	// #48
   1589c:	mov	x22, x0
   158a0:	strb	w8, [x0, #24]!
   158a4:	mov	x9, #0xffffffffffffffff    	// #-1
   158a8:	mov	w10, #0x4                   	// #4
   158ac:	add	x1, x20, #0x18
   158b0:	add	x2, x21, #0x18
   158b4:	add	x8, x0, #0x30
   158b8:	add	x3, x19, #0x10
   158bc:	add	x4, sp, #0xc
   158c0:	stur	x9, [x0, #-8]
   158c4:	stp	xzr, xzr, [x0, #8]
   158c8:	stp	xzr, x10, [x0, #24]
   158cc:	str	x8, [x0, #40]
   158d0:	bl	259b8 <PyInit__decimal@@Base+0x1ef04>
   158d4:	ldr	x8, [x20]
   158d8:	subs	x8, x8, #0x1
   158dc:	str	x8, [x20]
   158e0:	b.eq	15990 <PyInit__decimal@@Base+0xeedc>  // b.none
   158e4:	ldr	x8, [x21]
   158e8:	subs	x8, x8, #0x1
   158ec:	str	x8, [x21]
   158f0:	b.eq	159a8 <PyInit__decimal@@Base+0xeef4>  // b.none
   158f4:	ldr	w1, [sp, #12]
   158f8:	mov	x0, x19
   158fc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15900:	cbnz	w0, 159c0 <PyInit__decimal@@Base+0xef0c>
   15904:	b	15a30 <PyInit__decimal@@Base+0xef7c>
   15908:	ldr	x8, [x20]
   1590c:	subs	x8, x8, #0x1
   15910:	str	x8, [x20]
   15914:	b.ne	15920 <PyInit__decimal@@Base+0xee6c>  // b.any
   15918:	mov	x0, x20
   1591c:	bl	6510 <_Py_Dealloc@plt>
   15920:	ldr	x8, [x21]
   15924:	subs	x8, x8, #0x1
   15928:	str	x8, [x21]
   1592c:	b.ne	15a2c <PyInit__decimal@@Base+0xef78>  // b.any
   15930:	mov	x0, x21
   15934:	b	15a28 <PyInit__decimal@@Base+0xef74>
   15938:	ldr	x8, [x20, #8]
   1593c:	ldrb	w9, [x8, #171]
   15940:	tbnz	w9, #0, 159d8 <PyInit__decimal@@Base+0xef24>
   15944:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15948:	ldr	x9, [x9, #3936]
   1594c:	ldr	x2, [x8, #24]
   15950:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15954:	add	x1, x1, #0xb93
   15958:	ldr	x0, [x9]
   1595c:	bl	6950 <PyErr_Format@plt>
   15960:	b	15a2c <PyInit__decimal@@Base+0xef78>
   15964:	ldr	x8, [x21, #8]
   15968:	ldrb	w9, [x8, #171]
   1596c:	tbnz	w9, #0, 159f8 <PyInit__decimal@@Base+0xef44>
   15970:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15974:	ldr	x9, [x9, #3936]
   15978:	ldr	x2, [x8, #24]
   1597c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15980:	add	x1, x1, #0xb93
   15984:	ldr	x0, [x9]
   15988:	bl	6950 <PyErr_Format@plt>
   1598c:	b	15a14 <PyInit__decimal@@Base+0xef60>
   15990:	mov	x0, x20
   15994:	bl	6510 <_Py_Dealloc@plt>
   15998:	ldr	x8, [x21]
   1599c:	subs	x8, x8, #0x1
   159a0:	str	x8, [x21]
   159a4:	b.ne	158f4 <PyInit__decimal@@Base+0xee40>  // b.any
   159a8:	mov	x0, x21
   159ac:	bl	6510 <_Py_Dealloc@plt>
   159b0:	ldr	w1, [sp, #12]
   159b4:	mov	x0, x19
   159b8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   159bc:	cbz	w0, 15a30 <PyInit__decimal@@Base+0xef7c>
   159c0:	ldr	x8, [x22]
   159c4:	subs	x8, x8, #0x1
   159c8:	str	x8, [x22]
   159cc:	b.ne	15a2c <PyInit__decimal@@Base+0xef78>  // b.any
   159d0:	mov	x0, x22
   159d4:	b	15a28 <PyInit__decimal@@Base+0xef74>
   159d8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   159dc:	add	x0, x0, #0xe60
   159e0:	mov	x1, x20
   159e4:	mov	x2, x19
   159e8:	bl	abdc <PyInit__decimal@@Base+0x4128>
   159ec:	mov	x20, x0
   159f0:	cbnz	x0, 1585c <PyInit__decimal@@Base+0xeda8>
   159f4:	b	15a2c <PyInit__decimal@@Base+0xef78>
   159f8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   159fc:	add	x0, x0, #0xe60
   15a00:	mov	x1, x21
   15a04:	mov	x2, x19
   15a08:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15a0c:	mov	x21, x0
   15a10:	cbnz	x0, 15888 <PyInit__decimal@@Base+0xedd4>
   15a14:	ldr	x8, [x20]
   15a18:	subs	x8, x8, #0x1
   15a1c:	str	x8, [x20]
   15a20:	b.ne	15a2c <PyInit__decimal@@Base+0xef78>  // b.any
   15a24:	mov	x0, x20
   15a28:	bl	6510 <_Py_Dealloc@plt>
   15a2c:	mov	x22, xzr
   15a30:	mov	x0, x22
   15a34:	ldp	x20, x19, [sp, #64]
   15a38:	ldp	x22, x21, [sp, #48]
   15a3c:	ldp	x29, x30, [sp, #32]
   15a40:	add	sp, sp, #0x50
   15a44:	ret
   15a48:	sub	sp, sp, #0x50
   15a4c:	stp	x29, x30, [sp, #32]
   15a50:	stp	x22, x21, [sp, #48]
   15a54:	stp	x20, x19, [sp, #64]
   15a58:	add	x29, sp, #0x20
   15a5c:	mov	x8, x1
   15a60:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   15a64:	mov	x19, x0
   15a68:	add	x1, x1, #0x67c
   15a6c:	sub	x2, x29, #0x8
   15a70:	add	x3, sp, #0x10
   15a74:	mov	x0, x8
   15a78:	str	wzr, [sp, #12]
   15a7c:	bl	6820 <PyArg_ParseTuple@plt>
   15a80:	cbz	w0, 15c88 <PyInit__decimal@@Base+0xf1d4>
   15a84:	ldur	x20, [x29, #-8]
   15a88:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   15a8c:	add	x22, x22, #0xe60
   15a90:	ldr	x0, [x20, #8]
   15a94:	cmp	x0, x22
   15a98:	b.eq	15aac <PyInit__decimal@@Base+0xeff8>  // b.none
   15a9c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15aa0:	add	x1, x1, #0xe60
   15aa4:	bl	6900 <PyType_IsSubtype@plt>
   15aa8:	cbz	w0, 15b94 <PyInit__decimal@@Base+0xf0e0>
   15aac:	ldr	x8, [x20]
   15ab0:	add	x8, x8, #0x1
   15ab4:	str	x8, [x20]
   15ab8:	ldr	x21, [sp, #16]
   15abc:	ldr	x0, [x21, #8]
   15ac0:	cmp	x0, x22
   15ac4:	b.eq	15ad8 <PyInit__decimal@@Base+0xf024>  // b.none
   15ac8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15acc:	add	x1, x1, #0xe60
   15ad0:	bl	6900 <PyType_IsSubtype@plt>
   15ad4:	cbz	w0, 15bc0 <PyInit__decimal@@Base+0xf10c>
   15ad8:	ldr	x8, [x21]
   15adc:	add	x8, x8, #0x1
   15ae0:	str	x8, [x21]
   15ae4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15ae8:	add	x0, x0, #0xe60
   15aec:	bl	6890 <_PyObject_New@plt>
   15af0:	cbz	x0, 15b64 <PyInit__decimal@@Base+0xf0b0>
   15af4:	mov	w8, #0x30                  	// #48
   15af8:	mov	x22, x0
   15afc:	strb	w8, [x0, #24]!
   15b00:	mov	x9, #0xffffffffffffffff    	// #-1
   15b04:	mov	w10, #0x4                   	// #4
   15b08:	add	x1, x20, #0x18
   15b0c:	add	x2, x21, #0x18
   15b10:	add	x8, x0, #0x30
   15b14:	add	x3, x19, #0x10
   15b18:	add	x4, sp, #0xc
   15b1c:	stur	x9, [x0, #-8]
   15b20:	stp	xzr, xzr, [x0, #8]
   15b24:	stp	xzr, x10, [x0, #24]
   15b28:	str	x8, [x0, #40]
   15b2c:	bl	2b290 <PyInit__decimal@@Base+0x247dc>
   15b30:	ldr	x8, [x20]
   15b34:	subs	x8, x8, #0x1
   15b38:	str	x8, [x20]
   15b3c:	b.eq	15bec <PyInit__decimal@@Base+0xf138>  // b.none
   15b40:	ldr	x8, [x21]
   15b44:	subs	x8, x8, #0x1
   15b48:	str	x8, [x21]
   15b4c:	b.eq	15c04 <PyInit__decimal@@Base+0xf150>  // b.none
   15b50:	ldr	w1, [sp, #12]
   15b54:	mov	x0, x19
   15b58:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15b5c:	cbnz	w0, 15c1c <PyInit__decimal@@Base+0xf168>
   15b60:	b	15c8c <PyInit__decimal@@Base+0xf1d8>
   15b64:	ldr	x8, [x20]
   15b68:	subs	x8, x8, #0x1
   15b6c:	str	x8, [x20]
   15b70:	b.ne	15b7c <PyInit__decimal@@Base+0xf0c8>  // b.any
   15b74:	mov	x0, x20
   15b78:	bl	6510 <_Py_Dealloc@plt>
   15b7c:	ldr	x8, [x21]
   15b80:	subs	x8, x8, #0x1
   15b84:	str	x8, [x21]
   15b88:	b.ne	15c88 <PyInit__decimal@@Base+0xf1d4>  // b.any
   15b8c:	mov	x0, x21
   15b90:	b	15c84 <PyInit__decimal@@Base+0xf1d0>
   15b94:	ldr	x8, [x20, #8]
   15b98:	ldrb	w9, [x8, #171]
   15b9c:	tbnz	w9, #0, 15c34 <PyInit__decimal@@Base+0xf180>
   15ba0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15ba4:	ldr	x9, [x9, #3936]
   15ba8:	ldr	x2, [x8, #24]
   15bac:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15bb0:	add	x1, x1, #0xb93
   15bb4:	ldr	x0, [x9]
   15bb8:	bl	6950 <PyErr_Format@plt>
   15bbc:	b	15c88 <PyInit__decimal@@Base+0xf1d4>
   15bc0:	ldr	x8, [x21, #8]
   15bc4:	ldrb	w9, [x8, #171]
   15bc8:	tbnz	w9, #0, 15c54 <PyInit__decimal@@Base+0xf1a0>
   15bcc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15bd0:	ldr	x9, [x9, #3936]
   15bd4:	ldr	x2, [x8, #24]
   15bd8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15bdc:	add	x1, x1, #0xb93
   15be0:	ldr	x0, [x9]
   15be4:	bl	6950 <PyErr_Format@plt>
   15be8:	b	15c70 <PyInit__decimal@@Base+0xf1bc>
   15bec:	mov	x0, x20
   15bf0:	bl	6510 <_Py_Dealloc@plt>
   15bf4:	ldr	x8, [x21]
   15bf8:	subs	x8, x8, #0x1
   15bfc:	str	x8, [x21]
   15c00:	b.ne	15b50 <PyInit__decimal@@Base+0xf09c>  // b.any
   15c04:	mov	x0, x21
   15c08:	bl	6510 <_Py_Dealloc@plt>
   15c0c:	ldr	w1, [sp, #12]
   15c10:	mov	x0, x19
   15c14:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15c18:	cbz	w0, 15c8c <PyInit__decimal@@Base+0xf1d8>
   15c1c:	ldr	x8, [x22]
   15c20:	subs	x8, x8, #0x1
   15c24:	str	x8, [x22]
   15c28:	b.ne	15c88 <PyInit__decimal@@Base+0xf1d4>  // b.any
   15c2c:	mov	x0, x22
   15c30:	b	15c84 <PyInit__decimal@@Base+0xf1d0>
   15c34:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15c38:	add	x0, x0, #0xe60
   15c3c:	mov	x1, x20
   15c40:	mov	x2, x19
   15c44:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15c48:	mov	x20, x0
   15c4c:	cbnz	x0, 15ab8 <PyInit__decimal@@Base+0xf004>
   15c50:	b	15c88 <PyInit__decimal@@Base+0xf1d4>
   15c54:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15c58:	add	x0, x0, #0xe60
   15c5c:	mov	x1, x21
   15c60:	mov	x2, x19
   15c64:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15c68:	mov	x21, x0
   15c6c:	cbnz	x0, 15ae4 <PyInit__decimal@@Base+0xf030>
   15c70:	ldr	x8, [x20]
   15c74:	subs	x8, x8, #0x1
   15c78:	str	x8, [x20]
   15c7c:	b.ne	15c88 <PyInit__decimal@@Base+0xf1d4>  // b.any
   15c80:	mov	x0, x20
   15c84:	bl	6510 <_Py_Dealloc@plt>
   15c88:	mov	x22, xzr
   15c8c:	mov	x0, x22
   15c90:	ldp	x20, x19, [sp, #64]
   15c94:	ldp	x22, x21, [sp, #48]
   15c98:	ldp	x29, x30, [sp, #32]
   15c9c:	add	sp, sp, #0x50
   15ca0:	ret
   15ca4:	sub	sp, sp, #0x50
   15ca8:	stp	x29, x30, [sp, #32]
   15cac:	stp	x22, x21, [sp, #48]
   15cb0:	stp	x20, x19, [sp, #64]
   15cb4:	add	x29, sp, #0x20
   15cb8:	mov	x8, x1
   15cbc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   15cc0:	mov	x19, x0
   15cc4:	add	x1, x1, #0x67c
   15cc8:	sub	x2, x29, #0x8
   15ccc:	add	x3, sp, #0x10
   15cd0:	mov	x0, x8
   15cd4:	str	wzr, [sp, #12]
   15cd8:	bl	6820 <PyArg_ParseTuple@plt>
   15cdc:	cbz	w0, 15ee4 <PyInit__decimal@@Base+0xf430>
   15ce0:	ldur	x20, [x29, #-8]
   15ce4:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   15ce8:	add	x22, x22, #0xe60
   15cec:	ldr	x0, [x20, #8]
   15cf0:	cmp	x0, x22
   15cf4:	b.eq	15d08 <PyInit__decimal@@Base+0xf254>  // b.none
   15cf8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15cfc:	add	x1, x1, #0xe60
   15d00:	bl	6900 <PyType_IsSubtype@plt>
   15d04:	cbz	w0, 15df0 <PyInit__decimal@@Base+0xf33c>
   15d08:	ldr	x8, [x20]
   15d0c:	add	x8, x8, #0x1
   15d10:	str	x8, [x20]
   15d14:	ldr	x21, [sp, #16]
   15d18:	ldr	x0, [x21, #8]
   15d1c:	cmp	x0, x22
   15d20:	b.eq	15d34 <PyInit__decimal@@Base+0xf280>  // b.none
   15d24:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15d28:	add	x1, x1, #0xe60
   15d2c:	bl	6900 <PyType_IsSubtype@plt>
   15d30:	cbz	w0, 15e1c <PyInit__decimal@@Base+0xf368>
   15d34:	ldr	x8, [x21]
   15d38:	add	x8, x8, #0x1
   15d3c:	str	x8, [x21]
   15d40:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15d44:	add	x0, x0, #0xe60
   15d48:	bl	6890 <_PyObject_New@plt>
   15d4c:	cbz	x0, 15dc0 <PyInit__decimal@@Base+0xf30c>
   15d50:	mov	w8, #0x30                  	// #48
   15d54:	mov	x22, x0
   15d58:	strb	w8, [x0, #24]!
   15d5c:	mov	x9, #0xffffffffffffffff    	// #-1
   15d60:	mov	w10, #0x4                   	// #4
   15d64:	add	x1, x20, #0x18
   15d68:	add	x2, x21, #0x18
   15d6c:	add	x8, x0, #0x30
   15d70:	add	x3, x19, #0x10
   15d74:	add	x4, sp, #0xc
   15d78:	stur	x9, [x0, #-8]
   15d7c:	stp	xzr, xzr, [x0, #8]
   15d80:	stp	xzr, x10, [x0, #24]
   15d84:	str	x8, [x0, #40]
   15d88:	bl	2d0dc <PyInit__decimal@@Base+0x26628>
   15d8c:	ldr	x8, [x20]
   15d90:	subs	x8, x8, #0x1
   15d94:	str	x8, [x20]
   15d98:	b.eq	15e48 <PyInit__decimal@@Base+0xf394>  // b.none
   15d9c:	ldr	x8, [x21]
   15da0:	subs	x8, x8, #0x1
   15da4:	str	x8, [x21]
   15da8:	b.eq	15e60 <PyInit__decimal@@Base+0xf3ac>  // b.none
   15dac:	ldr	w1, [sp, #12]
   15db0:	mov	x0, x19
   15db4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15db8:	cbnz	w0, 15e78 <PyInit__decimal@@Base+0xf3c4>
   15dbc:	b	15ee8 <PyInit__decimal@@Base+0xf434>
   15dc0:	ldr	x8, [x20]
   15dc4:	subs	x8, x8, #0x1
   15dc8:	str	x8, [x20]
   15dcc:	b.ne	15dd8 <PyInit__decimal@@Base+0xf324>  // b.any
   15dd0:	mov	x0, x20
   15dd4:	bl	6510 <_Py_Dealloc@plt>
   15dd8:	ldr	x8, [x21]
   15ddc:	subs	x8, x8, #0x1
   15de0:	str	x8, [x21]
   15de4:	b.ne	15ee4 <PyInit__decimal@@Base+0xf430>  // b.any
   15de8:	mov	x0, x21
   15dec:	b	15ee0 <PyInit__decimal@@Base+0xf42c>
   15df0:	ldr	x8, [x20, #8]
   15df4:	ldrb	w9, [x8, #171]
   15df8:	tbnz	w9, #0, 15e90 <PyInit__decimal@@Base+0xf3dc>
   15dfc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15e00:	ldr	x9, [x9, #3936]
   15e04:	ldr	x2, [x8, #24]
   15e08:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15e0c:	add	x1, x1, #0xb93
   15e10:	ldr	x0, [x9]
   15e14:	bl	6950 <PyErr_Format@plt>
   15e18:	b	15ee4 <PyInit__decimal@@Base+0xf430>
   15e1c:	ldr	x8, [x21, #8]
   15e20:	ldrb	w9, [x8, #171]
   15e24:	tbnz	w9, #0, 15eb0 <PyInit__decimal@@Base+0xf3fc>
   15e28:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   15e2c:	ldr	x9, [x9, #3936]
   15e30:	ldr	x2, [x8, #24]
   15e34:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   15e38:	add	x1, x1, #0xb93
   15e3c:	ldr	x0, [x9]
   15e40:	bl	6950 <PyErr_Format@plt>
   15e44:	b	15ecc <PyInit__decimal@@Base+0xf418>
   15e48:	mov	x0, x20
   15e4c:	bl	6510 <_Py_Dealloc@plt>
   15e50:	ldr	x8, [x21]
   15e54:	subs	x8, x8, #0x1
   15e58:	str	x8, [x21]
   15e5c:	b.ne	15dac <PyInit__decimal@@Base+0xf2f8>  // b.any
   15e60:	mov	x0, x21
   15e64:	bl	6510 <_Py_Dealloc@plt>
   15e68:	ldr	w1, [sp, #12]
   15e6c:	mov	x0, x19
   15e70:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   15e74:	cbz	w0, 15ee8 <PyInit__decimal@@Base+0xf434>
   15e78:	ldr	x8, [x22]
   15e7c:	subs	x8, x8, #0x1
   15e80:	str	x8, [x22]
   15e84:	b.ne	15ee4 <PyInit__decimal@@Base+0xf430>  // b.any
   15e88:	mov	x0, x22
   15e8c:	b	15ee0 <PyInit__decimal@@Base+0xf42c>
   15e90:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15e94:	add	x0, x0, #0xe60
   15e98:	mov	x1, x20
   15e9c:	mov	x2, x19
   15ea0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15ea4:	mov	x20, x0
   15ea8:	cbnz	x0, 15d14 <PyInit__decimal@@Base+0xf260>
   15eac:	b	15ee4 <PyInit__decimal@@Base+0xf430>
   15eb0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15eb4:	add	x0, x0, #0xe60
   15eb8:	mov	x1, x21
   15ebc:	mov	x2, x19
   15ec0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   15ec4:	mov	x21, x0
   15ec8:	cbnz	x0, 15d40 <PyInit__decimal@@Base+0xf28c>
   15ecc:	ldr	x8, [x20]
   15ed0:	subs	x8, x8, #0x1
   15ed4:	str	x8, [x20]
   15ed8:	b.ne	15ee4 <PyInit__decimal@@Base+0xf430>  // b.any
   15edc:	mov	x0, x20
   15ee0:	bl	6510 <_Py_Dealloc@plt>
   15ee4:	mov	x22, xzr
   15ee8:	mov	x0, x22
   15eec:	ldp	x20, x19, [sp, #64]
   15ef0:	ldp	x22, x21, [sp, #48]
   15ef4:	ldp	x29, x30, [sp, #32]
   15ef8:	add	sp, sp, #0x50
   15efc:	ret
   15f00:	sub	sp, sp, #0x70
   15f04:	stp	x29, x30, [sp, #32]
   15f08:	stp	x26, x25, [sp, #48]
   15f0c:	stp	x24, x23, [sp, #64]
   15f10:	stp	x22, x21, [sp, #80]
   15f14:	stp	x20, x19, [sp, #96]
   15f18:	add	x29, sp, #0x20
   15f1c:	mov	x8, x1
   15f20:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   15f24:	mov	x19, x0
   15f28:	add	x1, x1, #0x67c
   15f2c:	sub	x2, x29, #0x8
   15f30:	add	x3, sp, #0x10
   15f34:	mov	x0, x8
   15f38:	str	wzr, [sp, #12]
   15f3c:	bl	6820 <PyArg_ParseTuple@plt>
   15f40:	cbz	w0, 1621c <PyInit__decimal@@Base+0xf768>
   15f44:	ldur	x20, [x29, #-8]
   15f48:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   15f4c:	add	x21, x21, #0xe60
   15f50:	ldr	x0, [x20, #8]
   15f54:	cmp	x0, x21
   15f58:	b.eq	15f6c <PyInit__decimal@@Base+0xf4b8>  // b.none
   15f5c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15f60:	add	x1, x1, #0xe60
   15f64:	bl	6900 <PyType_IsSubtype@plt>
   15f68:	cbz	w0, 1609c <PyInit__decimal@@Base+0xf5e8>
   15f6c:	ldr	x8, [x20]
   15f70:	add	x8, x8, #0x1
   15f74:	str	x8, [x20]
   15f78:	ldr	x22, [sp, #16]
   15f7c:	ldr	x0, [x22, #8]
   15f80:	cmp	x0, x21
   15f84:	b.eq	15f98 <PyInit__decimal@@Base+0xf4e4>  // b.none
   15f88:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   15f8c:	add	x1, x1, #0xe60
   15f90:	bl	6900 <PyType_IsSubtype@plt>
   15f94:	cbz	w0, 160c8 <PyInit__decimal@@Base+0xf614>
   15f98:	ldr	x8, [x22]
   15f9c:	add	x8, x8, #0x1
   15fa0:	str	x8, [x22]
   15fa4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15fa8:	add	x0, x0, #0xe60
   15fac:	bl	6890 <_PyObject_New@plt>
   15fb0:	cbz	x0, 16078 <PyInit__decimal@@Base+0xf5c4>
   15fb4:	mov	w25, #0x30                  	// #48
   15fb8:	mov	x24, x0
   15fbc:	mov	x21, x0
   15fc0:	mov	w8, #0x4                   	// #4
   15fc4:	strb	w25, [x24, #24]!
   15fc8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   15fcc:	mov	x26, #0xffffffffffffffff    	// #-1
   15fd0:	stp	xzr, x8, [x24, #24]
   15fd4:	add	x8, x24, #0x30
   15fd8:	add	x0, x0, #0xe60
   15fdc:	stur	x26, [x24, #-8]
   15fe0:	stp	xzr, xzr, [x24, #8]
   15fe4:	str	x8, [x24, #40]
   15fe8:	bl	6890 <_PyObject_New@plt>
   15fec:	cbz	x0, 160f4 <PyInit__decimal@@Base+0xf640>
   15ff0:	mov	x1, x0
   15ff4:	mov	w8, #0x4                   	// #4
   15ff8:	strb	w25, [x1, #24]!
   15ffc:	mov	x23, x0
   16000:	add	x2, x20, #0x18
   16004:	add	x3, x22, #0x18
   16008:	stp	xzr, x8, [x1, #24]
   1600c:	add	x8, x1, #0x30
   16010:	add	x4, x19, #0x10
   16014:	add	x5, sp, #0xc
   16018:	mov	x0, x24
   1601c:	stur	x26, [x1, #-8]
   16020:	stp	xzr, xzr, [x1, #8]
   16024:	str	x8, [x1, #40]
   16028:	bl	2bed4 <PyInit__decimal@@Base+0x25420>
   1602c:	ldr	x8, [x20]
   16030:	subs	x8, x8, #0x1
   16034:	str	x8, [x20]
   16038:	b.eq	1614c <PyInit__decimal@@Base+0xf698>  // b.none
   1603c:	ldr	x8, [x22]
   16040:	subs	x8, x8, #0x1
   16044:	str	x8, [x22]
   16048:	b.eq	16164 <PyInit__decimal@@Base+0xf6b0>  // b.none
   1604c:	ldr	w1, [sp, #12]
   16050:	mov	x0, x19
   16054:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16058:	cbz	w0, 1617c <PyInit__decimal@@Base+0xf6c8>
   1605c:	ldr	x8, [x23]
   16060:	subs	x8, x8, #0x1
   16064:	str	x8, [x23]
   16068:	b.ne	16114 <PyInit__decimal@@Base+0xf660>  // b.any
   1606c:	mov	x0, x23
   16070:	bl	6510 <_Py_Dealloc@plt>
   16074:	b	16114 <PyInit__decimal@@Base+0xf660>
   16078:	ldr	x8, [x20]
   1607c:	subs	x8, x8, #0x1
   16080:	str	x8, [x20]
   16084:	b.eq	161c8 <PyInit__decimal@@Base+0xf714>  // b.none
   16088:	ldr	x8, [x22]
   1608c:	subs	x8, x8, #0x1
   16090:	str	x8, [x22]
   16094:	b.ne	1621c <PyInit__decimal@@Base+0xf768>  // b.any
   16098:	b	161e0 <PyInit__decimal@@Base+0xf72c>
   1609c:	ldr	x8, [x20, #8]
   160a0:	ldrb	w9, [x8, #171]
   160a4:	tbnz	w9, #0, 1612c <PyInit__decimal@@Base+0xf678>
   160a8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   160ac:	ldr	x9, [x9, #3936]
   160b0:	ldr	x2, [x8, #24]
   160b4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   160b8:	add	x1, x1, #0xb93
   160bc:	ldr	x0, [x9]
   160c0:	bl	6950 <PyErr_Format@plt>
   160c4:	b	1621c <PyInit__decimal@@Base+0xf768>
   160c8:	ldr	x8, [x22, #8]
   160cc:	ldrb	w9, [x8, #171]
   160d0:	tbnz	w9, #0, 161e8 <PyInit__decimal@@Base+0xf734>
   160d4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   160d8:	ldr	x9, [x9, #3936]
   160dc:	ldr	x2, [x8, #24]
   160e0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   160e4:	add	x1, x1, #0xb93
   160e8:	ldr	x0, [x9]
   160ec:	bl	6950 <PyErr_Format@plt>
   160f0:	b	16204 <PyInit__decimal@@Base+0xf750>
   160f4:	ldr	x8, [x20]
   160f8:	subs	x8, x8, #0x1
   160fc:	str	x8, [x20]
   16100:	b.eq	16240 <PyInit__decimal@@Base+0xf78c>  // b.none
   16104:	ldr	x8, [x22]
   16108:	subs	x8, x8, #0x1
   1610c:	str	x8, [x22]
   16110:	b.eq	16258 <PyInit__decimal@@Base+0xf7a4>  // b.none
   16114:	ldr	x8, [x21]
   16118:	subs	x8, x8, #0x1
   1611c:	str	x8, [x21]
   16120:	b.ne	1621c <PyInit__decimal@@Base+0xf768>  // b.any
   16124:	mov	x0, x21
   16128:	b	16218 <PyInit__decimal@@Base+0xf764>
   1612c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16130:	add	x0, x0, #0xe60
   16134:	mov	x1, x20
   16138:	mov	x2, x19
   1613c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16140:	mov	x20, x0
   16144:	cbnz	x0, 15f78 <PyInit__decimal@@Base+0xf4c4>
   16148:	b	1621c <PyInit__decimal@@Base+0xf768>
   1614c:	mov	x0, x20
   16150:	bl	6510 <_Py_Dealloc@plt>
   16154:	ldr	x8, [x22]
   16158:	subs	x8, x8, #0x1
   1615c:	str	x8, [x22]
   16160:	b.ne	1604c <PyInit__decimal@@Base+0xf598>  // b.any
   16164:	mov	x0, x22
   16168:	bl	6510 <_Py_Dealloc@plt>
   1616c:	ldr	w1, [sp, #12]
   16170:	mov	x0, x19
   16174:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16178:	cbnz	w0, 1605c <PyInit__decimal@@Base+0xf5a8>
   1617c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x3c54c>
   16180:	add	x0, x0, #0xc03
   16184:	mov	x1, x21
   16188:	mov	x2, x23
   1618c:	bl	6710 <Py_BuildValue@plt>
   16190:	ldr	x8, [x23]
   16194:	mov	x19, x0
   16198:	subs	x8, x8, #0x1
   1619c:	str	x8, [x23]
   161a0:	b.ne	161ac <PyInit__decimal@@Base+0xf6f8>  // b.any
   161a4:	mov	x0, x23
   161a8:	bl	6510 <_Py_Dealloc@plt>
   161ac:	ldr	x8, [x21]
   161b0:	subs	x8, x8, #0x1
   161b4:	str	x8, [x21]
   161b8:	b.ne	16220 <PyInit__decimal@@Base+0xf76c>  // b.any
   161bc:	mov	x0, x21
   161c0:	bl	6510 <_Py_Dealloc@plt>
   161c4:	b	16220 <PyInit__decimal@@Base+0xf76c>
   161c8:	mov	x0, x20
   161cc:	bl	6510 <_Py_Dealloc@plt>
   161d0:	ldr	x8, [x22]
   161d4:	subs	x8, x8, #0x1
   161d8:	str	x8, [x22]
   161dc:	b.ne	1621c <PyInit__decimal@@Base+0xf768>  // b.any
   161e0:	mov	x0, x22
   161e4:	b	16218 <PyInit__decimal@@Base+0xf764>
   161e8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   161ec:	add	x0, x0, #0xe60
   161f0:	mov	x1, x22
   161f4:	mov	x2, x19
   161f8:	bl	abdc <PyInit__decimal@@Base+0x4128>
   161fc:	mov	x22, x0
   16200:	cbnz	x0, 15fa4 <PyInit__decimal@@Base+0xf4f0>
   16204:	ldr	x8, [x20]
   16208:	subs	x8, x8, #0x1
   1620c:	str	x8, [x20]
   16210:	b.ne	1621c <PyInit__decimal@@Base+0xf768>  // b.any
   16214:	mov	x0, x20
   16218:	bl	6510 <_Py_Dealloc@plt>
   1621c:	mov	x19, xzr
   16220:	mov	x0, x19
   16224:	ldp	x20, x19, [sp, #96]
   16228:	ldp	x22, x21, [sp, #80]
   1622c:	ldp	x24, x23, [sp, #64]
   16230:	ldp	x26, x25, [sp, #48]
   16234:	ldp	x29, x30, [sp, #32]
   16238:	add	sp, sp, #0x70
   1623c:	ret
   16240:	mov	x0, x20
   16244:	bl	6510 <_Py_Dealloc@plt>
   16248:	ldr	x8, [x22]
   1624c:	subs	x8, x8, #0x1
   16250:	str	x8, [x22]
   16254:	b.ne	16114 <PyInit__decimal@@Base+0xf660>  // b.any
   16258:	mov	x0, x22
   1625c:	bl	6510 <_Py_Dealloc@plt>
   16260:	ldr	x8, [x21]
   16264:	subs	x8, x8, #0x1
   16268:	str	x8, [x21]
   1626c:	b.ne	1621c <PyInit__decimal@@Base+0xf768>  // b.any
   16270:	b	16124 <PyInit__decimal@@Base+0xf670>
   16274:	sub	sp, sp, #0x50
   16278:	stp	x29, x30, [sp, #32]
   1627c:	stp	x22, x21, [sp, #48]
   16280:	stp	x20, x19, [sp, #64]
   16284:	add	x29, sp, #0x20
   16288:	mov	x8, x1
   1628c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   16290:	mov	x19, x0
   16294:	add	x1, x1, #0x67c
   16298:	sub	x2, x29, #0x8
   1629c:	add	x3, sp, #0x10
   162a0:	mov	x0, x8
   162a4:	str	wzr, [sp, #12]
   162a8:	bl	6820 <PyArg_ParseTuple@plt>
   162ac:	cbz	w0, 164b4 <PyInit__decimal@@Base+0xfa00>
   162b0:	ldur	x20, [x29, #-8]
   162b4:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   162b8:	add	x22, x22, #0xe60
   162bc:	ldr	x0, [x20, #8]
   162c0:	cmp	x0, x22
   162c4:	b.eq	162d8 <PyInit__decimal@@Base+0xf824>  // b.none
   162c8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   162cc:	add	x1, x1, #0xe60
   162d0:	bl	6900 <PyType_IsSubtype@plt>
   162d4:	cbz	w0, 163c0 <PyInit__decimal@@Base+0xf90c>
   162d8:	ldr	x8, [x20]
   162dc:	add	x8, x8, #0x1
   162e0:	str	x8, [x20]
   162e4:	ldr	x21, [sp, #16]
   162e8:	ldr	x0, [x21, #8]
   162ec:	cmp	x0, x22
   162f0:	b.eq	16304 <PyInit__decimal@@Base+0xf850>  // b.none
   162f4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   162f8:	add	x1, x1, #0xe60
   162fc:	bl	6900 <PyType_IsSubtype@plt>
   16300:	cbz	w0, 163ec <PyInit__decimal@@Base+0xf938>
   16304:	ldr	x8, [x21]
   16308:	add	x8, x8, #0x1
   1630c:	str	x8, [x21]
   16310:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16314:	add	x0, x0, #0xe60
   16318:	bl	6890 <_PyObject_New@plt>
   1631c:	cbz	x0, 16390 <PyInit__decimal@@Base+0xf8dc>
   16320:	mov	w8, #0x30                  	// #48
   16324:	mov	x22, x0
   16328:	strb	w8, [x0, #24]!
   1632c:	mov	x9, #0xffffffffffffffff    	// #-1
   16330:	mov	w10, #0x4                   	// #4
   16334:	add	x1, x20, #0x18
   16338:	add	x2, x21, #0x18
   1633c:	add	x8, x0, #0x30
   16340:	add	x3, x19, #0x10
   16344:	add	x4, sp, #0xc
   16348:	stur	x9, [x0, #-8]
   1634c:	stp	xzr, xzr, [x0, #8]
   16350:	stp	xzr, x10, [x0, #24]
   16354:	str	x8, [x0, #40]
   16358:	bl	31e1c <PyInit__decimal@@Base+0x2b368>
   1635c:	ldr	x8, [x20]
   16360:	subs	x8, x8, #0x1
   16364:	str	x8, [x20]
   16368:	b.eq	16418 <PyInit__decimal@@Base+0xf964>  // b.none
   1636c:	ldr	x8, [x21]
   16370:	subs	x8, x8, #0x1
   16374:	str	x8, [x21]
   16378:	b.eq	16430 <PyInit__decimal@@Base+0xf97c>  // b.none
   1637c:	ldr	w1, [sp, #12]
   16380:	mov	x0, x19
   16384:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16388:	cbnz	w0, 16448 <PyInit__decimal@@Base+0xf994>
   1638c:	b	164b8 <PyInit__decimal@@Base+0xfa04>
   16390:	ldr	x8, [x20]
   16394:	subs	x8, x8, #0x1
   16398:	str	x8, [x20]
   1639c:	b.ne	163a8 <PyInit__decimal@@Base+0xf8f4>  // b.any
   163a0:	mov	x0, x20
   163a4:	bl	6510 <_Py_Dealloc@plt>
   163a8:	ldr	x8, [x21]
   163ac:	subs	x8, x8, #0x1
   163b0:	str	x8, [x21]
   163b4:	b.ne	164b4 <PyInit__decimal@@Base+0xfa00>  // b.any
   163b8:	mov	x0, x21
   163bc:	b	164b0 <PyInit__decimal@@Base+0xf9fc>
   163c0:	ldr	x8, [x20, #8]
   163c4:	ldrb	w9, [x8, #171]
   163c8:	tbnz	w9, #0, 16460 <PyInit__decimal@@Base+0xf9ac>
   163cc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   163d0:	ldr	x9, [x9, #3936]
   163d4:	ldr	x2, [x8, #24]
   163d8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   163dc:	add	x1, x1, #0xb93
   163e0:	ldr	x0, [x9]
   163e4:	bl	6950 <PyErr_Format@plt>
   163e8:	b	164b4 <PyInit__decimal@@Base+0xfa00>
   163ec:	ldr	x8, [x21, #8]
   163f0:	ldrb	w9, [x8, #171]
   163f4:	tbnz	w9, #0, 16480 <PyInit__decimal@@Base+0xf9cc>
   163f8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   163fc:	ldr	x9, [x9, #3936]
   16400:	ldr	x2, [x8, #24]
   16404:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16408:	add	x1, x1, #0xb93
   1640c:	ldr	x0, [x9]
   16410:	bl	6950 <PyErr_Format@plt>
   16414:	b	1649c <PyInit__decimal@@Base+0xf9e8>
   16418:	mov	x0, x20
   1641c:	bl	6510 <_Py_Dealloc@plt>
   16420:	ldr	x8, [x21]
   16424:	subs	x8, x8, #0x1
   16428:	str	x8, [x21]
   1642c:	b.ne	1637c <PyInit__decimal@@Base+0xf8c8>  // b.any
   16430:	mov	x0, x21
   16434:	bl	6510 <_Py_Dealloc@plt>
   16438:	ldr	w1, [sp, #12]
   1643c:	mov	x0, x19
   16440:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16444:	cbz	w0, 164b8 <PyInit__decimal@@Base+0xfa04>
   16448:	ldr	x8, [x22]
   1644c:	subs	x8, x8, #0x1
   16450:	str	x8, [x22]
   16454:	b.ne	164b4 <PyInit__decimal@@Base+0xfa00>  // b.any
   16458:	mov	x0, x22
   1645c:	b	164b0 <PyInit__decimal@@Base+0xf9fc>
   16460:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16464:	add	x0, x0, #0xe60
   16468:	mov	x1, x20
   1646c:	mov	x2, x19
   16470:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16474:	mov	x20, x0
   16478:	cbnz	x0, 162e4 <PyInit__decimal@@Base+0xf830>
   1647c:	b	164b4 <PyInit__decimal@@Base+0xfa00>
   16480:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16484:	add	x0, x0, #0xe60
   16488:	mov	x1, x21
   1648c:	mov	x2, x19
   16490:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16494:	mov	x21, x0
   16498:	cbnz	x0, 16310 <PyInit__decimal@@Base+0xf85c>
   1649c:	ldr	x8, [x20]
   164a0:	subs	x8, x8, #0x1
   164a4:	str	x8, [x20]
   164a8:	b.ne	164b4 <PyInit__decimal@@Base+0xfa00>  // b.any
   164ac:	mov	x0, x20
   164b0:	bl	6510 <_Py_Dealloc@plt>
   164b4:	mov	x22, xzr
   164b8:	mov	x0, x22
   164bc:	ldp	x20, x19, [sp, #64]
   164c0:	ldp	x22, x21, [sp, #48]
   164c4:	ldp	x29, x30, [sp, #32]
   164c8:	add	sp, sp, #0x50
   164cc:	ret
   164d0:	sub	sp, sp, #0x50
   164d4:	stp	x29, x30, [sp, #32]
   164d8:	stp	x22, x21, [sp, #48]
   164dc:	stp	x20, x19, [sp, #64]
   164e0:	add	x29, sp, #0x20
   164e4:	mov	x8, x1
   164e8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   164ec:	mov	x19, x0
   164f0:	add	x1, x1, #0x67c
   164f4:	sub	x2, x29, #0x8
   164f8:	add	x3, sp, #0x10
   164fc:	mov	x0, x8
   16500:	str	wzr, [sp, #12]
   16504:	bl	6820 <PyArg_ParseTuple@plt>
   16508:	cbz	w0, 16710 <PyInit__decimal@@Base+0xfc5c>
   1650c:	ldur	x20, [x29, #-8]
   16510:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   16514:	add	x22, x22, #0xe60
   16518:	ldr	x0, [x20, #8]
   1651c:	cmp	x0, x22
   16520:	b.eq	16534 <PyInit__decimal@@Base+0xfa80>  // b.none
   16524:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16528:	add	x1, x1, #0xe60
   1652c:	bl	6900 <PyType_IsSubtype@plt>
   16530:	cbz	w0, 1661c <PyInit__decimal@@Base+0xfb68>
   16534:	ldr	x8, [x20]
   16538:	add	x8, x8, #0x1
   1653c:	str	x8, [x20]
   16540:	ldr	x21, [sp, #16]
   16544:	ldr	x0, [x21, #8]
   16548:	cmp	x0, x22
   1654c:	b.eq	16560 <PyInit__decimal@@Base+0xfaac>  // b.none
   16550:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16554:	add	x1, x1, #0xe60
   16558:	bl	6900 <PyType_IsSubtype@plt>
   1655c:	cbz	w0, 16648 <PyInit__decimal@@Base+0xfb94>
   16560:	ldr	x8, [x21]
   16564:	add	x8, x8, #0x1
   16568:	str	x8, [x21]
   1656c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16570:	add	x0, x0, #0xe60
   16574:	bl	6890 <_PyObject_New@plt>
   16578:	cbz	x0, 165ec <PyInit__decimal@@Base+0xfb38>
   1657c:	mov	w8, #0x30                  	// #48
   16580:	mov	x22, x0
   16584:	strb	w8, [x0, #24]!
   16588:	mov	x9, #0xffffffffffffffff    	// #-1
   1658c:	mov	w10, #0x4                   	// #4
   16590:	add	x1, x20, #0x18
   16594:	add	x2, x21, #0x18
   16598:	add	x8, x0, #0x30
   1659c:	add	x3, x19, #0x10
   165a0:	add	x4, sp, #0xc
   165a4:	stur	x9, [x0, #-8]
   165a8:	stp	xzr, xzr, [x0, #8]
   165ac:	stp	xzr, x10, [x0, #24]
   165b0:	str	x8, [x0, #40]
   165b4:	bl	320d0 <PyInit__decimal@@Base+0x2b61c>
   165b8:	ldr	x8, [x20]
   165bc:	subs	x8, x8, #0x1
   165c0:	str	x8, [x20]
   165c4:	b.eq	16674 <PyInit__decimal@@Base+0xfbc0>  // b.none
   165c8:	ldr	x8, [x21]
   165cc:	subs	x8, x8, #0x1
   165d0:	str	x8, [x21]
   165d4:	b.eq	1668c <PyInit__decimal@@Base+0xfbd8>  // b.none
   165d8:	ldr	w1, [sp, #12]
   165dc:	mov	x0, x19
   165e0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   165e4:	cbnz	w0, 166a4 <PyInit__decimal@@Base+0xfbf0>
   165e8:	b	16714 <PyInit__decimal@@Base+0xfc60>
   165ec:	ldr	x8, [x20]
   165f0:	subs	x8, x8, #0x1
   165f4:	str	x8, [x20]
   165f8:	b.ne	16604 <PyInit__decimal@@Base+0xfb50>  // b.any
   165fc:	mov	x0, x20
   16600:	bl	6510 <_Py_Dealloc@plt>
   16604:	ldr	x8, [x21]
   16608:	subs	x8, x8, #0x1
   1660c:	str	x8, [x21]
   16610:	b.ne	16710 <PyInit__decimal@@Base+0xfc5c>  // b.any
   16614:	mov	x0, x21
   16618:	b	1670c <PyInit__decimal@@Base+0xfc58>
   1661c:	ldr	x8, [x20, #8]
   16620:	ldrb	w9, [x8, #171]
   16624:	tbnz	w9, #0, 166bc <PyInit__decimal@@Base+0xfc08>
   16628:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1662c:	ldr	x9, [x9, #3936]
   16630:	ldr	x2, [x8, #24]
   16634:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16638:	add	x1, x1, #0xb93
   1663c:	ldr	x0, [x9]
   16640:	bl	6950 <PyErr_Format@plt>
   16644:	b	16710 <PyInit__decimal@@Base+0xfc5c>
   16648:	ldr	x8, [x21, #8]
   1664c:	ldrb	w9, [x8, #171]
   16650:	tbnz	w9, #0, 166dc <PyInit__decimal@@Base+0xfc28>
   16654:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16658:	ldr	x9, [x9, #3936]
   1665c:	ldr	x2, [x8, #24]
   16660:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16664:	add	x1, x1, #0xb93
   16668:	ldr	x0, [x9]
   1666c:	bl	6950 <PyErr_Format@plt>
   16670:	b	166f8 <PyInit__decimal@@Base+0xfc44>
   16674:	mov	x0, x20
   16678:	bl	6510 <_Py_Dealloc@plt>
   1667c:	ldr	x8, [x21]
   16680:	subs	x8, x8, #0x1
   16684:	str	x8, [x21]
   16688:	b.ne	165d8 <PyInit__decimal@@Base+0xfb24>  // b.any
   1668c:	mov	x0, x21
   16690:	bl	6510 <_Py_Dealloc@plt>
   16694:	ldr	w1, [sp, #12]
   16698:	mov	x0, x19
   1669c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   166a0:	cbz	w0, 16714 <PyInit__decimal@@Base+0xfc60>
   166a4:	ldr	x8, [x22]
   166a8:	subs	x8, x8, #0x1
   166ac:	str	x8, [x22]
   166b0:	b.ne	16710 <PyInit__decimal@@Base+0xfc5c>  // b.any
   166b4:	mov	x0, x22
   166b8:	b	1670c <PyInit__decimal@@Base+0xfc58>
   166bc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   166c0:	add	x0, x0, #0xe60
   166c4:	mov	x1, x20
   166c8:	mov	x2, x19
   166cc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   166d0:	mov	x20, x0
   166d4:	cbnz	x0, 16540 <PyInit__decimal@@Base+0xfa8c>
   166d8:	b	16710 <PyInit__decimal@@Base+0xfc5c>
   166dc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   166e0:	add	x0, x0, #0xe60
   166e4:	mov	x1, x21
   166e8:	mov	x2, x19
   166ec:	bl	abdc <PyInit__decimal@@Base+0x4128>
   166f0:	mov	x21, x0
   166f4:	cbnz	x0, 1656c <PyInit__decimal@@Base+0xfab8>
   166f8:	ldr	x8, [x20]
   166fc:	subs	x8, x8, #0x1
   16700:	str	x8, [x20]
   16704:	b.ne	16710 <PyInit__decimal@@Base+0xfc5c>  // b.any
   16708:	mov	x0, x20
   1670c:	bl	6510 <_Py_Dealloc@plt>
   16710:	mov	x22, xzr
   16714:	mov	x0, x22
   16718:	ldp	x20, x19, [sp, #64]
   1671c:	ldp	x22, x21, [sp, #48]
   16720:	ldp	x29, x30, [sp, #32]
   16724:	add	sp, sp, #0x50
   16728:	ret
   1672c:	sub	sp, sp, #0x50
   16730:	stp	x29, x30, [sp, #32]
   16734:	stp	x22, x21, [sp, #48]
   16738:	stp	x20, x19, [sp, #64]
   1673c:	add	x29, sp, #0x20
   16740:	mov	x8, x1
   16744:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   16748:	mov	x19, x0
   1674c:	add	x1, x1, #0x67c
   16750:	sub	x2, x29, #0x8
   16754:	add	x3, sp, #0x10
   16758:	mov	x0, x8
   1675c:	str	wzr, [sp, #12]
   16760:	bl	6820 <PyArg_ParseTuple@plt>
   16764:	cbz	w0, 1696c <PyInit__decimal@@Base+0xfeb8>
   16768:	ldur	x20, [x29, #-8]
   1676c:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   16770:	add	x22, x22, #0xe60
   16774:	ldr	x0, [x20, #8]
   16778:	cmp	x0, x22
   1677c:	b.eq	16790 <PyInit__decimal@@Base+0xfcdc>  // b.none
   16780:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16784:	add	x1, x1, #0xe60
   16788:	bl	6900 <PyType_IsSubtype@plt>
   1678c:	cbz	w0, 16878 <PyInit__decimal@@Base+0xfdc4>
   16790:	ldr	x8, [x20]
   16794:	add	x8, x8, #0x1
   16798:	str	x8, [x20]
   1679c:	ldr	x21, [sp, #16]
   167a0:	ldr	x0, [x21, #8]
   167a4:	cmp	x0, x22
   167a8:	b.eq	167bc <PyInit__decimal@@Base+0xfd08>  // b.none
   167ac:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   167b0:	add	x1, x1, #0xe60
   167b4:	bl	6900 <PyType_IsSubtype@plt>
   167b8:	cbz	w0, 168a4 <PyInit__decimal@@Base+0xfdf0>
   167bc:	ldr	x8, [x21]
   167c0:	add	x8, x8, #0x1
   167c4:	str	x8, [x21]
   167c8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   167cc:	add	x0, x0, #0xe60
   167d0:	bl	6890 <_PyObject_New@plt>
   167d4:	cbz	x0, 16848 <PyInit__decimal@@Base+0xfd94>
   167d8:	mov	w8, #0x30                  	// #48
   167dc:	mov	x22, x0
   167e0:	strb	w8, [x0, #24]!
   167e4:	mov	x9, #0xffffffffffffffff    	// #-1
   167e8:	mov	w10, #0x4                   	// #4
   167ec:	add	x1, x20, #0x18
   167f0:	add	x2, x21, #0x18
   167f4:	add	x8, x0, #0x30
   167f8:	add	x3, x19, #0x10
   167fc:	add	x4, sp, #0xc
   16800:	stur	x9, [x0, #-8]
   16804:	stp	xzr, xzr, [x0, #8]
   16808:	stp	xzr, x10, [x0, #24]
   1680c:	str	x8, [x0, #40]
   16810:	bl	32384 <PyInit__decimal@@Base+0x2b8d0>
   16814:	ldr	x8, [x20]
   16818:	subs	x8, x8, #0x1
   1681c:	str	x8, [x20]
   16820:	b.eq	168d0 <PyInit__decimal@@Base+0xfe1c>  // b.none
   16824:	ldr	x8, [x21]
   16828:	subs	x8, x8, #0x1
   1682c:	str	x8, [x21]
   16830:	b.eq	168e8 <PyInit__decimal@@Base+0xfe34>  // b.none
   16834:	ldr	w1, [sp, #12]
   16838:	mov	x0, x19
   1683c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16840:	cbnz	w0, 16900 <PyInit__decimal@@Base+0xfe4c>
   16844:	b	16970 <PyInit__decimal@@Base+0xfebc>
   16848:	ldr	x8, [x20]
   1684c:	subs	x8, x8, #0x1
   16850:	str	x8, [x20]
   16854:	b.ne	16860 <PyInit__decimal@@Base+0xfdac>  // b.any
   16858:	mov	x0, x20
   1685c:	bl	6510 <_Py_Dealloc@plt>
   16860:	ldr	x8, [x21]
   16864:	subs	x8, x8, #0x1
   16868:	str	x8, [x21]
   1686c:	b.ne	1696c <PyInit__decimal@@Base+0xfeb8>  // b.any
   16870:	mov	x0, x21
   16874:	b	16968 <PyInit__decimal@@Base+0xfeb4>
   16878:	ldr	x8, [x20, #8]
   1687c:	ldrb	w9, [x8, #171]
   16880:	tbnz	w9, #0, 16918 <PyInit__decimal@@Base+0xfe64>
   16884:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16888:	ldr	x9, [x9, #3936]
   1688c:	ldr	x2, [x8, #24]
   16890:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16894:	add	x1, x1, #0xb93
   16898:	ldr	x0, [x9]
   1689c:	bl	6950 <PyErr_Format@plt>
   168a0:	b	1696c <PyInit__decimal@@Base+0xfeb8>
   168a4:	ldr	x8, [x21, #8]
   168a8:	ldrb	w9, [x8, #171]
   168ac:	tbnz	w9, #0, 16938 <PyInit__decimal@@Base+0xfe84>
   168b0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   168b4:	ldr	x9, [x9, #3936]
   168b8:	ldr	x2, [x8, #24]
   168bc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   168c0:	add	x1, x1, #0xb93
   168c4:	ldr	x0, [x9]
   168c8:	bl	6950 <PyErr_Format@plt>
   168cc:	b	16954 <PyInit__decimal@@Base+0xfea0>
   168d0:	mov	x0, x20
   168d4:	bl	6510 <_Py_Dealloc@plt>
   168d8:	ldr	x8, [x21]
   168dc:	subs	x8, x8, #0x1
   168e0:	str	x8, [x21]
   168e4:	b.ne	16834 <PyInit__decimal@@Base+0xfd80>  // b.any
   168e8:	mov	x0, x21
   168ec:	bl	6510 <_Py_Dealloc@plt>
   168f0:	ldr	w1, [sp, #12]
   168f4:	mov	x0, x19
   168f8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   168fc:	cbz	w0, 16970 <PyInit__decimal@@Base+0xfebc>
   16900:	ldr	x8, [x22]
   16904:	subs	x8, x8, #0x1
   16908:	str	x8, [x22]
   1690c:	b.ne	1696c <PyInit__decimal@@Base+0xfeb8>  // b.any
   16910:	mov	x0, x22
   16914:	b	16968 <PyInit__decimal@@Base+0xfeb4>
   16918:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1691c:	add	x0, x0, #0xe60
   16920:	mov	x1, x20
   16924:	mov	x2, x19
   16928:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1692c:	mov	x20, x0
   16930:	cbnz	x0, 1679c <PyInit__decimal@@Base+0xfce8>
   16934:	b	1696c <PyInit__decimal@@Base+0xfeb8>
   16938:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1693c:	add	x0, x0, #0xe60
   16940:	mov	x1, x21
   16944:	mov	x2, x19
   16948:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1694c:	mov	x21, x0
   16950:	cbnz	x0, 167c8 <PyInit__decimal@@Base+0xfd14>
   16954:	ldr	x8, [x20]
   16958:	subs	x8, x8, #0x1
   1695c:	str	x8, [x20]
   16960:	b.ne	1696c <PyInit__decimal@@Base+0xfeb8>  // b.any
   16964:	mov	x0, x20
   16968:	bl	6510 <_Py_Dealloc@plt>
   1696c:	mov	x22, xzr
   16970:	mov	x0, x22
   16974:	ldp	x20, x19, [sp, #64]
   16978:	ldp	x22, x21, [sp, #48]
   1697c:	ldp	x29, x30, [sp, #32]
   16980:	add	sp, sp, #0x50
   16984:	ret
   16988:	sub	sp, sp, #0x50
   1698c:	stp	x29, x30, [sp, #32]
   16990:	stp	x22, x21, [sp, #48]
   16994:	stp	x20, x19, [sp, #64]
   16998:	add	x29, sp, #0x20
   1699c:	mov	x8, x1
   169a0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   169a4:	mov	x19, x0
   169a8:	add	x1, x1, #0x67c
   169ac:	sub	x2, x29, #0x8
   169b0:	add	x3, sp, #0x10
   169b4:	mov	x0, x8
   169b8:	str	wzr, [sp, #12]
   169bc:	bl	6820 <PyArg_ParseTuple@plt>
   169c0:	cbz	w0, 16bc8 <PyInit__decimal@@Base+0x10114>
   169c4:	ldur	x20, [x29, #-8]
   169c8:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   169cc:	add	x22, x22, #0xe60
   169d0:	ldr	x0, [x20, #8]
   169d4:	cmp	x0, x22
   169d8:	b.eq	169ec <PyInit__decimal@@Base+0xff38>  // b.none
   169dc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   169e0:	add	x1, x1, #0xe60
   169e4:	bl	6900 <PyType_IsSubtype@plt>
   169e8:	cbz	w0, 16ad4 <PyInit__decimal@@Base+0x10020>
   169ec:	ldr	x8, [x20]
   169f0:	add	x8, x8, #0x1
   169f4:	str	x8, [x20]
   169f8:	ldr	x21, [sp, #16]
   169fc:	ldr	x0, [x21, #8]
   16a00:	cmp	x0, x22
   16a04:	b.eq	16a18 <PyInit__decimal@@Base+0xff64>  // b.none
   16a08:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16a0c:	add	x1, x1, #0xe60
   16a10:	bl	6900 <PyType_IsSubtype@plt>
   16a14:	cbz	w0, 16b00 <PyInit__decimal@@Base+0x1004c>
   16a18:	ldr	x8, [x21]
   16a1c:	add	x8, x8, #0x1
   16a20:	str	x8, [x21]
   16a24:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16a28:	add	x0, x0, #0xe60
   16a2c:	bl	6890 <_PyObject_New@plt>
   16a30:	cbz	x0, 16aa4 <PyInit__decimal@@Base+0xfff0>
   16a34:	mov	w8, #0x30                  	// #48
   16a38:	mov	x22, x0
   16a3c:	strb	w8, [x0, #24]!
   16a40:	mov	x9, #0xffffffffffffffff    	// #-1
   16a44:	mov	w10, #0x4                   	// #4
   16a48:	add	x1, x20, #0x18
   16a4c:	add	x2, x21, #0x18
   16a50:	add	x8, x0, #0x30
   16a54:	add	x3, x19, #0x10
   16a58:	add	x4, sp, #0xc
   16a5c:	stur	x9, [x0, #-8]
   16a60:	stp	xzr, xzr, [x0, #8]
   16a64:	stp	xzr, x10, [x0, #24]
   16a68:	str	x8, [x0, #40]
   16a6c:	bl	32658 <PyInit__decimal@@Base+0x2bba4>
   16a70:	ldr	x8, [x20]
   16a74:	subs	x8, x8, #0x1
   16a78:	str	x8, [x20]
   16a7c:	b.eq	16b2c <PyInit__decimal@@Base+0x10078>  // b.none
   16a80:	ldr	x8, [x21]
   16a84:	subs	x8, x8, #0x1
   16a88:	str	x8, [x21]
   16a8c:	b.eq	16b44 <PyInit__decimal@@Base+0x10090>  // b.none
   16a90:	ldr	w1, [sp, #12]
   16a94:	mov	x0, x19
   16a98:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16a9c:	cbnz	w0, 16b5c <PyInit__decimal@@Base+0x100a8>
   16aa0:	b	16bcc <PyInit__decimal@@Base+0x10118>
   16aa4:	ldr	x8, [x20]
   16aa8:	subs	x8, x8, #0x1
   16aac:	str	x8, [x20]
   16ab0:	b.ne	16abc <PyInit__decimal@@Base+0x10008>  // b.any
   16ab4:	mov	x0, x20
   16ab8:	bl	6510 <_Py_Dealloc@plt>
   16abc:	ldr	x8, [x21]
   16ac0:	subs	x8, x8, #0x1
   16ac4:	str	x8, [x21]
   16ac8:	b.ne	16bc8 <PyInit__decimal@@Base+0x10114>  // b.any
   16acc:	mov	x0, x21
   16ad0:	b	16bc4 <PyInit__decimal@@Base+0x10110>
   16ad4:	ldr	x8, [x20, #8]
   16ad8:	ldrb	w9, [x8, #171]
   16adc:	tbnz	w9, #0, 16b74 <PyInit__decimal@@Base+0x100c0>
   16ae0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16ae4:	ldr	x9, [x9, #3936]
   16ae8:	ldr	x2, [x8, #24]
   16aec:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16af0:	add	x1, x1, #0xb93
   16af4:	ldr	x0, [x9]
   16af8:	bl	6950 <PyErr_Format@plt>
   16afc:	b	16bc8 <PyInit__decimal@@Base+0x10114>
   16b00:	ldr	x8, [x21, #8]
   16b04:	ldrb	w9, [x8, #171]
   16b08:	tbnz	w9, #0, 16b94 <PyInit__decimal@@Base+0x100e0>
   16b0c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16b10:	ldr	x9, [x9, #3936]
   16b14:	ldr	x2, [x8, #24]
   16b18:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16b1c:	add	x1, x1, #0xb93
   16b20:	ldr	x0, [x9]
   16b24:	bl	6950 <PyErr_Format@plt>
   16b28:	b	16bb0 <PyInit__decimal@@Base+0x100fc>
   16b2c:	mov	x0, x20
   16b30:	bl	6510 <_Py_Dealloc@plt>
   16b34:	ldr	x8, [x21]
   16b38:	subs	x8, x8, #0x1
   16b3c:	str	x8, [x21]
   16b40:	b.ne	16a90 <PyInit__decimal@@Base+0xffdc>  // b.any
   16b44:	mov	x0, x21
   16b48:	bl	6510 <_Py_Dealloc@plt>
   16b4c:	ldr	w1, [sp, #12]
   16b50:	mov	x0, x19
   16b54:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16b58:	cbz	w0, 16bcc <PyInit__decimal@@Base+0x10118>
   16b5c:	ldr	x8, [x22]
   16b60:	subs	x8, x8, #0x1
   16b64:	str	x8, [x22]
   16b68:	b.ne	16bc8 <PyInit__decimal@@Base+0x10114>  // b.any
   16b6c:	mov	x0, x22
   16b70:	b	16bc4 <PyInit__decimal@@Base+0x10110>
   16b74:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16b78:	add	x0, x0, #0xe60
   16b7c:	mov	x1, x20
   16b80:	mov	x2, x19
   16b84:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16b88:	mov	x20, x0
   16b8c:	cbnz	x0, 169f8 <PyInit__decimal@@Base+0xff44>
   16b90:	b	16bc8 <PyInit__decimal@@Base+0x10114>
   16b94:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16b98:	add	x0, x0, #0xe60
   16b9c:	mov	x1, x21
   16ba0:	mov	x2, x19
   16ba4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16ba8:	mov	x21, x0
   16bac:	cbnz	x0, 16a24 <PyInit__decimal@@Base+0xff70>
   16bb0:	ldr	x8, [x20]
   16bb4:	subs	x8, x8, #0x1
   16bb8:	str	x8, [x20]
   16bbc:	b.ne	16bc8 <PyInit__decimal@@Base+0x10114>  // b.any
   16bc0:	mov	x0, x20
   16bc4:	bl	6510 <_Py_Dealloc@plt>
   16bc8:	mov	x22, xzr
   16bcc:	mov	x0, x22
   16bd0:	ldp	x20, x19, [sp, #64]
   16bd4:	ldp	x22, x21, [sp, #48]
   16bd8:	ldp	x29, x30, [sp, #32]
   16bdc:	add	sp, sp, #0x50
   16be0:	ret
   16be4:	sub	sp, sp, #0x50
   16be8:	stp	x29, x30, [sp, #32]
   16bec:	stp	x22, x21, [sp, #48]
   16bf0:	stp	x20, x19, [sp, #64]
   16bf4:	add	x29, sp, #0x20
   16bf8:	mov	x8, x1
   16bfc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   16c00:	mov	x19, x0
   16c04:	add	x1, x1, #0x67c
   16c08:	sub	x2, x29, #0x8
   16c0c:	add	x3, sp, #0x10
   16c10:	mov	x0, x8
   16c14:	str	wzr, [sp, #12]
   16c18:	bl	6820 <PyArg_ParseTuple@plt>
   16c1c:	cbz	w0, 16e24 <PyInit__decimal@@Base+0x10370>
   16c20:	ldur	x20, [x29, #-8]
   16c24:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   16c28:	add	x22, x22, #0xe60
   16c2c:	ldr	x0, [x20, #8]
   16c30:	cmp	x0, x22
   16c34:	b.eq	16c48 <PyInit__decimal@@Base+0x10194>  // b.none
   16c38:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16c3c:	add	x1, x1, #0xe60
   16c40:	bl	6900 <PyType_IsSubtype@plt>
   16c44:	cbz	w0, 16d30 <PyInit__decimal@@Base+0x1027c>
   16c48:	ldr	x8, [x20]
   16c4c:	add	x8, x8, #0x1
   16c50:	str	x8, [x20]
   16c54:	ldr	x21, [sp, #16]
   16c58:	ldr	x0, [x21, #8]
   16c5c:	cmp	x0, x22
   16c60:	b.eq	16c74 <PyInit__decimal@@Base+0x101c0>  // b.none
   16c64:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16c68:	add	x1, x1, #0xe60
   16c6c:	bl	6900 <PyType_IsSubtype@plt>
   16c70:	cbz	w0, 16d5c <PyInit__decimal@@Base+0x102a8>
   16c74:	ldr	x8, [x21]
   16c78:	add	x8, x8, #0x1
   16c7c:	str	x8, [x21]
   16c80:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16c84:	add	x0, x0, #0xe60
   16c88:	bl	6890 <_PyObject_New@plt>
   16c8c:	cbz	x0, 16d00 <PyInit__decimal@@Base+0x1024c>
   16c90:	mov	w8, #0x30                  	// #48
   16c94:	mov	x22, x0
   16c98:	strb	w8, [x0, #24]!
   16c9c:	mov	x9, #0xffffffffffffffff    	// #-1
   16ca0:	mov	w10, #0x4                   	// #4
   16ca4:	add	x1, x20, #0x18
   16ca8:	add	x2, x21, #0x18
   16cac:	add	x8, x0, #0x30
   16cb0:	add	x3, x19, #0x10
   16cb4:	add	x4, sp, #0xc
   16cb8:	stur	x9, [x0, #-8]
   16cbc:	stp	xzr, xzr, [x0, #8]
   16cc0:	stp	xzr, x10, [x0, #24]
   16cc4:	str	x8, [x0, #40]
   16cc8:	bl	2ffb0 <PyInit__decimal@@Base+0x294fc>
   16ccc:	ldr	x8, [x20]
   16cd0:	subs	x8, x8, #0x1
   16cd4:	str	x8, [x20]
   16cd8:	b.eq	16d88 <PyInit__decimal@@Base+0x102d4>  // b.none
   16cdc:	ldr	x8, [x21]
   16ce0:	subs	x8, x8, #0x1
   16ce4:	str	x8, [x21]
   16ce8:	b.eq	16da0 <PyInit__decimal@@Base+0x102ec>  // b.none
   16cec:	ldr	w1, [sp, #12]
   16cf0:	mov	x0, x19
   16cf4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16cf8:	cbnz	w0, 16db8 <PyInit__decimal@@Base+0x10304>
   16cfc:	b	16e28 <PyInit__decimal@@Base+0x10374>
   16d00:	ldr	x8, [x20]
   16d04:	subs	x8, x8, #0x1
   16d08:	str	x8, [x20]
   16d0c:	b.ne	16d18 <PyInit__decimal@@Base+0x10264>  // b.any
   16d10:	mov	x0, x20
   16d14:	bl	6510 <_Py_Dealloc@plt>
   16d18:	ldr	x8, [x21]
   16d1c:	subs	x8, x8, #0x1
   16d20:	str	x8, [x21]
   16d24:	b.ne	16e24 <PyInit__decimal@@Base+0x10370>  // b.any
   16d28:	mov	x0, x21
   16d2c:	b	16e20 <PyInit__decimal@@Base+0x1036c>
   16d30:	ldr	x8, [x20, #8]
   16d34:	ldrb	w9, [x8, #171]
   16d38:	tbnz	w9, #0, 16dd0 <PyInit__decimal@@Base+0x1031c>
   16d3c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16d40:	ldr	x9, [x9, #3936]
   16d44:	ldr	x2, [x8, #24]
   16d48:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16d4c:	add	x1, x1, #0xb93
   16d50:	ldr	x0, [x9]
   16d54:	bl	6950 <PyErr_Format@plt>
   16d58:	b	16e24 <PyInit__decimal@@Base+0x10370>
   16d5c:	ldr	x8, [x21, #8]
   16d60:	ldrb	w9, [x8, #171]
   16d64:	tbnz	w9, #0, 16df0 <PyInit__decimal@@Base+0x1033c>
   16d68:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16d6c:	ldr	x9, [x9, #3936]
   16d70:	ldr	x2, [x8, #24]
   16d74:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16d78:	add	x1, x1, #0xb93
   16d7c:	ldr	x0, [x9]
   16d80:	bl	6950 <PyErr_Format@plt>
   16d84:	b	16e0c <PyInit__decimal@@Base+0x10358>
   16d88:	mov	x0, x20
   16d8c:	bl	6510 <_Py_Dealloc@plt>
   16d90:	ldr	x8, [x21]
   16d94:	subs	x8, x8, #0x1
   16d98:	str	x8, [x21]
   16d9c:	b.ne	16cec <PyInit__decimal@@Base+0x10238>  // b.any
   16da0:	mov	x0, x21
   16da4:	bl	6510 <_Py_Dealloc@plt>
   16da8:	ldr	w1, [sp, #12]
   16dac:	mov	x0, x19
   16db0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16db4:	cbz	w0, 16e28 <PyInit__decimal@@Base+0x10374>
   16db8:	ldr	x8, [x22]
   16dbc:	subs	x8, x8, #0x1
   16dc0:	str	x8, [x22]
   16dc4:	b.ne	16e24 <PyInit__decimal@@Base+0x10370>  // b.any
   16dc8:	mov	x0, x22
   16dcc:	b	16e20 <PyInit__decimal@@Base+0x1036c>
   16dd0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16dd4:	add	x0, x0, #0xe60
   16dd8:	mov	x1, x20
   16ddc:	mov	x2, x19
   16de0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16de4:	mov	x20, x0
   16de8:	cbnz	x0, 16c54 <PyInit__decimal@@Base+0x101a0>
   16dec:	b	16e24 <PyInit__decimal@@Base+0x10370>
   16df0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16df4:	add	x0, x0, #0xe60
   16df8:	mov	x1, x21
   16dfc:	mov	x2, x19
   16e00:	bl	abdc <PyInit__decimal@@Base+0x4128>
   16e04:	mov	x21, x0
   16e08:	cbnz	x0, 16c80 <PyInit__decimal@@Base+0x101cc>
   16e0c:	ldr	x8, [x20]
   16e10:	subs	x8, x8, #0x1
   16e14:	str	x8, [x20]
   16e18:	b.ne	16e24 <PyInit__decimal@@Base+0x10370>  // b.any
   16e1c:	mov	x0, x20
   16e20:	bl	6510 <_Py_Dealloc@plt>
   16e24:	mov	x22, xzr
   16e28:	mov	x0, x22
   16e2c:	ldp	x20, x19, [sp, #64]
   16e30:	ldp	x22, x21, [sp, #48]
   16e34:	ldp	x29, x30, [sp, #32]
   16e38:	add	sp, sp, #0x50
   16e3c:	ret
   16e40:	sub	sp, sp, #0x50
   16e44:	stp	x29, x30, [sp, #32]
   16e48:	stp	x22, x21, [sp, #48]
   16e4c:	stp	x20, x19, [sp, #64]
   16e50:	add	x29, sp, #0x20
   16e54:	mov	x8, x1
   16e58:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   16e5c:	mov	x19, x0
   16e60:	add	x1, x1, #0x67c
   16e64:	sub	x2, x29, #0x8
   16e68:	add	x3, sp, #0x10
   16e6c:	mov	x0, x8
   16e70:	str	wzr, [sp, #12]
   16e74:	bl	6820 <PyArg_ParseTuple@plt>
   16e78:	cbz	w0, 17080 <PyInit__decimal@@Base+0x105cc>
   16e7c:	ldur	x20, [x29, #-8]
   16e80:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   16e84:	add	x22, x22, #0xe60
   16e88:	ldr	x0, [x20, #8]
   16e8c:	cmp	x0, x22
   16e90:	b.eq	16ea4 <PyInit__decimal@@Base+0x103f0>  // b.none
   16e94:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16e98:	add	x1, x1, #0xe60
   16e9c:	bl	6900 <PyType_IsSubtype@plt>
   16ea0:	cbz	w0, 16f8c <PyInit__decimal@@Base+0x104d8>
   16ea4:	ldr	x8, [x20]
   16ea8:	add	x8, x8, #0x1
   16eac:	str	x8, [x20]
   16eb0:	ldr	x21, [sp, #16]
   16eb4:	ldr	x0, [x21, #8]
   16eb8:	cmp	x0, x22
   16ebc:	b.eq	16ed0 <PyInit__decimal@@Base+0x1041c>  // b.none
   16ec0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   16ec4:	add	x1, x1, #0xe60
   16ec8:	bl	6900 <PyType_IsSubtype@plt>
   16ecc:	cbz	w0, 16fb8 <PyInit__decimal@@Base+0x10504>
   16ed0:	ldr	x8, [x21]
   16ed4:	add	x8, x8, #0x1
   16ed8:	str	x8, [x21]
   16edc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   16ee0:	add	x0, x0, #0xe60
   16ee4:	bl	6890 <_PyObject_New@plt>
   16ee8:	cbz	x0, 16f5c <PyInit__decimal@@Base+0x104a8>
   16eec:	mov	w8, #0x30                  	// #48
   16ef0:	mov	x22, x0
   16ef4:	strb	w8, [x0, #24]!
   16ef8:	mov	x9, #0xffffffffffffffff    	// #-1
   16efc:	mov	w10, #0x4                   	// #4
   16f00:	add	x1, x20, #0x18
   16f04:	add	x2, x21, #0x18
   16f08:	add	x8, x0, #0x30
   16f0c:	add	x3, x19, #0x10
   16f10:	add	x4, sp, #0xc
   16f14:	stur	x9, [x0, #-8]
   16f18:	stp	xzr, xzr, [x0, #8]
   16f1c:	stp	xzr, x10, [x0, #24]
   16f20:	str	x8, [x0, #40]
   16f24:	bl	33214 <PyInit__decimal@@Base+0x2c760>
   16f28:	ldr	x8, [x20]
   16f2c:	subs	x8, x8, #0x1
   16f30:	str	x8, [x20]
   16f34:	b.eq	16fe4 <PyInit__decimal@@Base+0x10530>  // b.none
   16f38:	ldr	x8, [x21]
   16f3c:	subs	x8, x8, #0x1
   16f40:	str	x8, [x21]
   16f44:	b.eq	16ffc <PyInit__decimal@@Base+0x10548>  // b.none
   16f48:	ldr	w1, [sp, #12]
   16f4c:	mov	x0, x19
   16f50:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   16f54:	cbnz	w0, 17014 <PyInit__decimal@@Base+0x10560>
   16f58:	b	17084 <PyInit__decimal@@Base+0x105d0>
   16f5c:	ldr	x8, [x20]
   16f60:	subs	x8, x8, #0x1
   16f64:	str	x8, [x20]
   16f68:	b.ne	16f74 <PyInit__decimal@@Base+0x104c0>  // b.any
   16f6c:	mov	x0, x20
   16f70:	bl	6510 <_Py_Dealloc@plt>
   16f74:	ldr	x8, [x21]
   16f78:	subs	x8, x8, #0x1
   16f7c:	str	x8, [x21]
   16f80:	b.ne	17080 <PyInit__decimal@@Base+0x105cc>  // b.any
   16f84:	mov	x0, x21
   16f88:	b	1707c <PyInit__decimal@@Base+0x105c8>
   16f8c:	ldr	x8, [x20, #8]
   16f90:	ldrb	w9, [x8, #171]
   16f94:	tbnz	w9, #0, 1702c <PyInit__decimal@@Base+0x10578>
   16f98:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16f9c:	ldr	x9, [x9, #3936]
   16fa0:	ldr	x2, [x8, #24]
   16fa4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16fa8:	add	x1, x1, #0xb93
   16fac:	ldr	x0, [x9]
   16fb0:	bl	6950 <PyErr_Format@plt>
   16fb4:	b	17080 <PyInit__decimal@@Base+0x105cc>
   16fb8:	ldr	x8, [x21, #8]
   16fbc:	ldrb	w9, [x8, #171]
   16fc0:	tbnz	w9, #0, 1704c <PyInit__decimal@@Base+0x10598>
   16fc4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   16fc8:	ldr	x9, [x9, #3936]
   16fcc:	ldr	x2, [x8, #24]
   16fd0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   16fd4:	add	x1, x1, #0xb93
   16fd8:	ldr	x0, [x9]
   16fdc:	bl	6950 <PyErr_Format@plt>
   16fe0:	b	17068 <PyInit__decimal@@Base+0x105b4>
   16fe4:	mov	x0, x20
   16fe8:	bl	6510 <_Py_Dealloc@plt>
   16fec:	ldr	x8, [x21]
   16ff0:	subs	x8, x8, #0x1
   16ff4:	str	x8, [x21]
   16ff8:	b.ne	16f48 <PyInit__decimal@@Base+0x10494>  // b.any
   16ffc:	mov	x0, x21
   17000:	bl	6510 <_Py_Dealloc@plt>
   17004:	ldr	w1, [sp, #12]
   17008:	mov	x0, x19
   1700c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17010:	cbz	w0, 17084 <PyInit__decimal@@Base+0x105d0>
   17014:	ldr	x8, [x22]
   17018:	subs	x8, x8, #0x1
   1701c:	str	x8, [x22]
   17020:	b.ne	17080 <PyInit__decimal@@Base+0x105cc>  // b.any
   17024:	mov	x0, x22
   17028:	b	1707c <PyInit__decimal@@Base+0x105c8>
   1702c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17030:	add	x0, x0, #0xe60
   17034:	mov	x1, x20
   17038:	mov	x2, x19
   1703c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17040:	mov	x20, x0
   17044:	cbnz	x0, 16eb0 <PyInit__decimal@@Base+0x103fc>
   17048:	b	17080 <PyInit__decimal@@Base+0x105cc>
   1704c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17050:	add	x0, x0, #0xe60
   17054:	mov	x1, x21
   17058:	mov	x2, x19
   1705c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17060:	mov	x21, x0
   17064:	cbnz	x0, 16edc <PyInit__decimal@@Base+0x10428>
   17068:	ldr	x8, [x20]
   1706c:	subs	x8, x8, #0x1
   17070:	str	x8, [x20]
   17074:	b.ne	17080 <PyInit__decimal@@Base+0x105cc>  // b.any
   17078:	mov	x0, x20
   1707c:	bl	6510 <_Py_Dealloc@plt>
   17080:	mov	x22, xzr
   17084:	mov	x0, x22
   17088:	ldp	x20, x19, [sp, #64]
   1708c:	ldp	x22, x21, [sp, #48]
   17090:	ldp	x29, x30, [sp, #32]
   17094:	add	sp, sp, #0x50
   17098:	ret
   1709c:	sub	sp, sp, #0x50
   170a0:	stp	x29, x30, [sp, #32]
   170a4:	stp	x22, x21, [sp, #48]
   170a8:	stp	x20, x19, [sp, #64]
   170ac:	add	x29, sp, #0x20
   170b0:	mov	x8, x1
   170b4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   170b8:	mov	x19, x0
   170bc:	add	x1, x1, #0x67c
   170c0:	sub	x2, x29, #0x8
   170c4:	add	x3, sp, #0x10
   170c8:	mov	x0, x8
   170cc:	str	wzr, [sp, #12]
   170d0:	bl	6820 <PyArg_ParseTuple@plt>
   170d4:	cbz	w0, 172dc <PyInit__decimal@@Base+0x10828>
   170d8:	ldur	x20, [x29, #-8]
   170dc:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   170e0:	add	x22, x22, #0xe60
   170e4:	ldr	x0, [x20, #8]
   170e8:	cmp	x0, x22
   170ec:	b.eq	17100 <PyInit__decimal@@Base+0x1064c>  // b.none
   170f0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   170f4:	add	x1, x1, #0xe60
   170f8:	bl	6900 <PyType_IsSubtype@plt>
   170fc:	cbz	w0, 171e8 <PyInit__decimal@@Base+0x10734>
   17100:	ldr	x8, [x20]
   17104:	add	x8, x8, #0x1
   17108:	str	x8, [x20]
   1710c:	ldr	x21, [sp, #16]
   17110:	ldr	x0, [x21, #8]
   17114:	cmp	x0, x22
   17118:	b.eq	1712c <PyInit__decimal@@Base+0x10678>  // b.none
   1711c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17120:	add	x1, x1, #0xe60
   17124:	bl	6900 <PyType_IsSubtype@plt>
   17128:	cbz	w0, 17214 <PyInit__decimal@@Base+0x10760>
   1712c:	ldr	x8, [x21]
   17130:	add	x8, x8, #0x1
   17134:	str	x8, [x21]
   17138:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1713c:	add	x0, x0, #0xe60
   17140:	bl	6890 <_PyObject_New@plt>
   17144:	cbz	x0, 171b8 <PyInit__decimal@@Base+0x10704>
   17148:	mov	w8, #0x30                  	// #48
   1714c:	mov	x22, x0
   17150:	strb	w8, [x0, #24]!
   17154:	mov	x9, #0xffffffffffffffff    	// #-1
   17158:	mov	w10, #0x4                   	// #4
   1715c:	add	x1, x20, #0x18
   17160:	add	x2, x21, #0x18
   17164:	add	x8, x0, #0x30
   17168:	add	x3, x19, #0x10
   1716c:	add	x4, sp, #0xc
   17170:	stur	x9, [x0, #-8]
   17174:	stp	xzr, xzr, [x0, #8]
   17178:	stp	xzr, x10, [x0, #24]
   1717c:	str	x8, [x0, #40]
   17180:	bl	363d8 <PyInit__decimal@@Base+0x2f924>
   17184:	ldr	x8, [x20]
   17188:	subs	x8, x8, #0x1
   1718c:	str	x8, [x20]
   17190:	b.eq	17240 <PyInit__decimal@@Base+0x1078c>  // b.none
   17194:	ldr	x8, [x21]
   17198:	subs	x8, x8, #0x1
   1719c:	str	x8, [x21]
   171a0:	b.eq	17258 <PyInit__decimal@@Base+0x107a4>  // b.none
   171a4:	ldr	w1, [sp, #12]
   171a8:	mov	x0, x19
   171ac:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   171b0:	cbnz	w0, 17270 <PyInit__decimal@@Base+0x107bc>
   171b4:	b	172e0 <PyInit__decimal@@Base+0x1082c>
   171b8:	ldr	x8, [x20]
   171bc:	subs	x8, x8, #0x1
   171c0:	str	x8, [x20]
   171c4:	b.ne	171d0 <PyInit__decimal@@Base+0x1071c>  // b.any
   171c8:	mov	x0, x20
   171cc:	bl	6510 <_Py_Dealloc@plt>
   171d0:	ldr	x8, [x21]
   171d4:	subs	x8, x8, #0x1
   171d8:	str	x8, [x21]
   171dc:	b.ne	172dc <PyInit__decimal@@Base+0x10828>  // b.any
   171e0:	mov	x0, x21
   171e4:	b	172d8 <PyInit__decimal@@Base+0x10824>
   171e8:	ldr	x8, [x20, #8]
   171ec:	ldrb	w9, [x8, #171]
   171f0:	tbnz	w9, #0, 17288 <PyInit__decimal@@Base+0x107d4>
   171f4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   171f8:	ldr	x9, [x9, #3936]
   171fc:	ldr	x2, [x8, #24]
   17200:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17204:	add	x1, x1, #0xb93
   17208:	ldr	x0, [x9]
   1720c:	bl	6950 <PyErr_Format@plt>
   17210:	b	172dc <PyInit__decimal@@Base+0x10828>
   17214:	ldr	x8, [x21, #8]
   17218:	ldrb	w9, [x8, #171]
   1721c:	tbnz	w9, #0, 172a8 <PyInit__decimal@@Base+0x107f4>
   17220:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17224:	ldr	x9, [x9, #3936]
   17228:	ldr	x2, [x8, #24]
   1722c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17230:	add	x1, x1, #0xb93
   17234:	ldr	x0, [x9]
   17238:	bl	6950 <PyErr_Format@plt>
   1723c:	b	172c4 <PyInit__decimal@@Base+0x10810>
   17240:	mov	x0, x20
   17244:	bl	6510 <_Py_Dealloc@plt>
   17248:	ldr	x8, [x21]
   1724c:	subs	x8, x8, #0x1
   17250:	str	x8, [x21]
   17254:	b.ne	171a4 <PyInit__decimal@@Base+0x106f0>  // b.any
   17258:	mov	x0, x21
   1725c:	bl	6510 <_Py_Dealloc@plt>
   17260:	ldr	w1, [sp, #12]
   17264:	mov	x0, x19
   17268:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1726c:	cbz	w0, 172e0 <PyInit__decimal@@Base+0x1082c>
   17270:	ldr	x8, [x22]
   17274:	subs	x8, x8, #0x1
   17278:	str	x8, [x22]
   1727c:	b.ne	172dc <PyInit__decimal@@Base+0x10828>  // b.any
   17280:	mov	x0, x22
   17284:	b	172d8 <PyInit__decimal@@Base+0x10824>
   17288:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1728c:	add	x0, x0, #0xe60
   17290:	mov	x1, x20
   17294:	mov	x2, x19
   17298:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1729c:	mov	x20, x0
   172a0:	cbnz	x0, 1710c <PyInit__decimal@@Base+0x10658>
   172a4:	b	172dc <PyInit__decimal@@Base+0x10828>
   172a8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   172ac:	add	x0, x0, #0xe60
   172b0:	mov	x1, x21
   172b4:	mov	x2, x19
   172b8:	bl	abdc <PyInit__decimal@@Base+0x4128>
   172bc:	mov	x21, x0
   172c0:	cbnz	x0, 17138 <PyInit__decimal@@Base+0x10684>
   172c4:	ldr	x8, [x20]
   172c8:	subs	x8, x8, #0x1
   172cc:	str	x8, [x20]
   172d0:	b.ne	172dc <PyInit__decimal@@Base+0x10828>  // b.any
   172d4:	mov	x0, x20
   172d8:	bl	6510 <_Py_Dealloc@plt>
   172dc:	mov	x22, xzr
   172e0:	mov	x0, x22
   172e4:	ldp	x20, x19, [sp, #64]
   172e8:	ldp	x22, x21, [sp, #48]
   172ec:	ldp	x29, x30, [sp, #32]
   172f0:	add	sp, sp, #0x50
   172f4:	ret
   172f8:	sub	sp, sp, #0x50
   172fc:	stp	x29, x30, [sp, #32]
   17300:	stp	x22, x21, [sp, #48]
   17304:	stp	x20, x19, [sp, #64]
   17308:	add	x29, sp, #0x20
   1730c:	mov	x8, x1
   17310:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   17314:	mov	x19, x0
   17318:	add	x1, x1, #0x67c
   1731c:	sub	x2, x29, #0x8
   17320:	add	x3, sp, #0x10
   17324:	mov	x0, x8
   17328:	str	wzr, [sp, #12]
   1732c:	bl	6820 <PyArg_ParseTuple@plt>
   17330:	cbz	w0, 17538 <PyInit__decimal@@Base+0x10a84>
   17334:	ldur	x20, [x29, #-8]
   17338:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1733c:	add	x22, x22, #0xe60
   17340:	ldr	x0, [x20, #8]
   17344:	cmp	x0, x22
   17348:	b.eq	1735c <PyInit__decimal@@Base+0x108a8>  // b.none
   1734c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17350:	add	x1, x1, #0xe60
   17354:	bl	6900 <PyType_IsSubtype@plt>
   17358:	cbz	w0, 17444 <PyInit__decimal@@Base+0x10990>
   1735c:	ldr	x8, [x20]
   17360:	add	x8, x8, #0x1
   17364:	str	x8, [x20]
   17368:	ldr	x21, [sp, #16]
   1736c:	ldr	x0, [x21, #8]
   17370:	cmp	x0, x22
   17374:	b.eq	17388 <PyInit__decimal@@Base+0x108d4>  // b.none
   17378:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1737c:	add	x1, x1, #0xe60
   17380:	bl	6900 <PyType_IsSubtype@plt>
   17384:	cbz	w0, 17470 <PyInit__decimal@@Base+0x109bc>
   17388:	ldr	x8, [x21]
   1738c:	add	x8, x8, #0x1
   17390:	str	x8, [x21]
   17394:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17398:	add	x0, x0, #0xe60
   1739c:	bl	6890 <_PyObject_New@plt>
   173a0:	cbz	x0, 17414 <PyInit__decimal@@Base+0x10960>
   173a4:	mov	w8, #0x30                  	// #48
   173a8:	mov	x22, x0
   173ac:	strb	w8, [x0, #24]!
   173b0:	mov	x9, #0xffffffffffffffff    	// #-1
   173b4:	mov	w10, #0x4                   	// #4
   173b8:	add	x1, x20, #0x18
   173bc:	add	x2, x21, #0x18
   173c0:	add	x8, x0, #0x30
   173c4:	add	x3, x19, #0x10
   173c8:	add	x4, sp, #0xc
   173cc:	stur	x9, [x0, #-8]
   173d0:	stp	xzr, xzr, [x0, #8]
   173d4:	stp	xzr, x10, [x0, #24]
   173d8:	str	x8, [x0, #40]
   173dc:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   173e0:	ldr	x8, [x20]
   173e4:	subs	x8, x8, #0x1
   173e8:	str	x8, [x20]
   173ec:	b.eq	1749c <PyInit__decimal@@Base+0x109e8>  // b.none
   173f0:	ldr	x8, [x21]
   173f4:	subs	x8, x8, #0x1
   173f8:	str	x8, [x21]
   173fc:	b.eq	174b4 <PyInit__decimal@@Base+0x10a00>  // b.none
   17400:	ldr	w1, [sp, #12]
   17404:	mov	x0, x19
   17408:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1740c:	cbnz	w0, 174cc <PyInit__decimal@@Base+0x10a18>
   17410:	b	1753c <PyInit__decimal@@Base+0x10a88>
   17414:	ldr	x8, [x20]
   17418:	subs	x8, x8, #0x1
   1741c:	str	x8, [x20]
   17420:	b.ne	1742c <PyInit__decimal@@Base+0x10978>  // b.any
   17424:	mov	x0, x20
   17428:	bl	6510 <_Py_Dealloc@plt>
   1742c:	ldr	x8, [x21]
   17430:	subs	x8, x8, #0x1
   17434:	str	x8, [x21]
   17438:	b.ne	17538 <PyInit__decimal@@Base+0x10a84>  // b.any
   1743c:	mov	x0, x21
   17440:	b	17534 <PyInit__decimal@@Base+0x10a80>
   17444:	ldr	x8, [x20, #8]
   17448:	ldrb	w9, [x8, #171]
   1744c:	tbnz	w9, #0, 174e4 <PyInit__decimal@@Base+0x10a30>
   17450:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17454:	ldr	x9, [x9, #3936]
   17458:	ldr	x2, [x8, #24]
   1745c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17460:	add	x1, x1, #0xb93
   17464:	ldr	x0, [x9]
   17468:	bl	6950 <PyErr_Format@plt>
   1746c:	b	17538 <PyInit__decimal@@Base+0x10a84>
   17470:	ldr	x8, [x21, #8]
   17474:	ldrb	w9, [x8, #171]
   17478:	tbnz	w9, #0, 17504 <PyInit__decimal@@Base+0x10a50>
   1747c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17480:	ldr	x9, [x9, #3936]
   17484:	ldr	x2, [x8, #24]
   17488:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1748c:	add	x1, x1, #0xb93
   17490:	ldr	x0, [x9]
   17494:	bl	6950 <PyErr_Format@plt>
   17498:	b	17520 <PyInit__decimal@@Base+0x10a6c>
   1749c:	mov	x0, x20
   174a0:	bl	6510 <_Py_Dealloc@plt>
   174a4:	ldr	x8, [x21]
   174a8:	subs	x8, x8, #0x1
   174ac:	str	x8, [x21]
   174b0:	b.ne	17400 <PyInit__decimal@@Base+0x1094c>  // b.any
   174b4:	mov	x0, x21
   174b8:	bl	6510 <_Py_Dealloc@plt>
   174bc:	ldr	w1, [sp, #12]
   174c0:	mov	x0, x19
   174c4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   174c8:	cbz	w0, 1753c <PyInit__decimal@@Base+0x10a88>
   174cc:	ldr	x8, [x22]
   174d0:	subs	x8, x8, #0x1
   174d4:	str	x8, [x22]
   174d8:	b.ne	17538 <PyInit__decimal@@Base+0x10a84>  // b.any
   174dc:	mov	x0, x22
   174e0:	b	17534 <PyInit__decimal@@Base+0x10a80>
   174e4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   174e8:	add	x0, x0, #0xe60
   174ec:	mov	x1, x20
   174f0:	mov	x2, x19
   174f4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   174f8:	mov	x20, x0
   174fc:	cbnz	x0, 17368 <PyInit__decimal@@Base+0x108b4>
   17500:	b	17538 <PyInit__decimal@@Base+0x10a84>
   17504:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17508:	add	x0, x0, #0xe60
   1750c:	mov	x1, x21
   17510:	mov	x2, x19
   17514:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17518:	mov	x21, x0
   1751c:	cbnz	x0, 17394 <PyInit__decimal@@Base+0x108e0>
   17520:	ldr	x8, [x20]
   17524:	subs	x8, x8, #0x1
   17528:	str	x8, [x20]
   1752c:	b.ne	17538 <PyInit__decimal@@Base+0x10a84>  // b.any
   17530:	mov	x0, x20
   17534:	bl	6510 <_Py_Dealloc@plt>
   17538:	mov	x22, xzr
   1753c:	mov	x0, x22
   17540:	ldp	x20, x19, [sp, #64]
   17544:	ldp	x22, x21, [sp, #48]
   17548:	ldp	x29, x30, [sp, #32]
   1754c:	add	sp, sp, #0x50
   17550:	ret
   17554:	sub	sp, sp, #0x50
   17558:	stp	x29, x30, [sp, #32]
   1755c:	stp	x22, x21, [sp, #48]
   17560:	stp	x20, x19, [sp, #64]
   17564:	add	x29, sp, #0x20
   17568:	mov	x8, x1
   1756c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   17570:	mov	x19, x0
   17574:	add	x1, x1, #0x67c
   17578:	sub	x2, x29, #0x8
   1757c:	add	x3, sp, #0x10
   17580:	mov	x0, x8
   17584:	str	wzr, [sp, #12]
   17588:	bl	6820 <PyArg_ParseTuple@plt>
   1758c:	cbz	w0, 17794 <PyInit__decimal@@Base+0x10ce0>
   17590:	ldur	x20, [x29, #-8]
   17594:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   17598:	add	x22, x22, #0xe60
   1759c:	ldr	x0, [x20, #8]
   175a0:	cmp	x0, x22
   175a4:	b.eq	175b8 <PyInit__decimal@@Base+0x10b04>  // b.none
   175a8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   175ac:	add	x1, x1, #0xe60
   175b0:	bl	6900 <PyType_IsSubtype@plt>
   175b4:	cbz	w0, 176a0 <PyInit__decimal@@Base+0x10bec>
   175b8:	ldr	x8, [x20]
   175bc:	add	x8, x8, #0x1
   175c0:	str	x8, [x20]
   175c4:	ldr	x21, [sp, #16]
   175c8:	ldr	x0, [x21, #8]
   175cc:	cmp	x0, x22
   175d0:	b.eq	175e4 <PyInit__decimal@@Base+0x10b30>  // b.none
   175d4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   175d8:	add	x1, x1, #0xe60
   175dc:	bl	6900 <PyType_IsSubtype@plt>
   175e0:	cbz	w0, 176cc <PyInit__decimal@@Base+0x10c18>
   175e4:	ldr	x8, [x21]
   175e8:	add	x8, x8, #0x1
   175ec:	str	x8, [x21]
   175f0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   175f4:	add	x0, x0, #0xe60
   175f8:	bl	6890 <_PyObject_New@plt>
   175fc:	cbz	x0, 17670 <PyInit__decimal@@Base+0x10bbc>
   17600:	mov	w8, #0x30                  	// #48
   17604:	mov	x22, x0
   17608:	strb	w8, [x0, #24]!
   1760c:	mov	x9, #0xffffffffffffffff    	// #-1
   17610:	mov	w10, #0x4                   	// #4
   17614:	add	x1, x20, #0x18
   17618:	add	x2, x21, #0x18
   1761c:	add	x8, x0, #0x30
   17620:	add	x3, x19, #0x10
   17624:	add	x4, sp, #0xc
   17628:	stur	x9, [x0, #-8]
   1762c:	stp	xzr, xzr, [x0, #8]
   17630:	stp	xzr, x10, [x0, #24]
   17634:	str	x8, [x0, #40]
   17638:	bl	37004 <PyInit__decimal@@Base+0x30550>
   1763c:	ldr	x8, [x20]
   17640:	subs	x8, x8, #0x1
   17644:	str	x8, [x20]
   17648:	b.eq	176f8 <PyInit__decimal@@Base+0x10c44>  // b.none
   1764c:	ldr	x8, [x21]
   17650:	subs	x8, x8, #0x1
   17654:	str	x8, [x21]
   17658:	b.eq	17710 <PyInit__decimal@@Base+0x10c5c>  // b.none
   1765c:	ldr	w1, [sp, #12]
   17660:	mov	x0, x19
   17664:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17668:	cbnz	w0, 17728 <PyInit__decimal@@Base+0x10c74>
   1766c:	b	17798 <PyInit__decimal@@Base+0x10ce4>
   17670:	ldr	x8, [x20]
   17674:	subs	x8, x8, #0x1
   17678:	str	x8, [x20]
   1767c:	b.ne	17688 <PyInit__decimal@@Base+0x10bd4>  // b.any
   17680:	mov	x0, x20
   17684:	bl	6510 <_Py_Dealloc@plt>
   17688:	ldr	x8, [x21]
   1768c:	subs	x8, x8, #0x1
   17690:	str	x8, [x21]
   17694:	b.ne	17794 <PyInit__decimal@@Base+0x10ce0>  // b.any
   17698:	mov	x0, x21
   1769c:	b	17790 <PyInit__decimal@@Base+0x10cdc>
   176a0:	ldr	x8, [x20, #8]
   176a4:	ldrb	w9, [x8, #171]
   176a8:	tbnz	w9, #0, 17740 <PyInit__decimal@@Base+0x10c8c>
   176ac:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   176b0:	ldr	x9, [x9, #3936]
   176b4:	ldr	x2, [x8, #24]
   176b8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   176bc:	add	x1, x1, #0xb93
   176c0:	ldr	x0, [x9]
   176c4:	bl	6950 <PyErr_Format@plt>
   176c8:	b	17794 <PyInit__decimal@@Base+0x10ce0>
   176cc:	ldr	x8, [x21, #8]
   176d0:	ldrb	w9, [x8, #171]
   176d4:	tbnz	w9, #0, 17760 <PyInit__decimal@@Base+0x10cac>
   176d8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   176dc:	ldr	x9, [x9, #3936]
   176e0:	ldr	x2, [x8, #24]
   176e4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   176e8:	add	x1, x1, #0xb93
   176ec:	ldr	x0, [x9]
   176f0:	bl	6950 <PyErr_Format@plt>
   176f4:	b	1777c <PyInit__decimal@@Base+0x10cc8>
   176f8:	mov	x0, x20
   176fc:	bl	6510 <_Py_Dealloc@plt>
   17700:	ldr	x8, [x21]
   17704:	subs	x8, x8, #0x1
   17708:	str	x8, [x21]
   1770c:	b.ne	1765c <PyInit__decimal@@Base+0x10ba8>  // b.any
   17710:	mov	x0, x21
   17714:	bl	6510 <_Py_Dealloc@plt>
   17718:	ldr	w1, [sp, #12]
   1771c:	mov	x0, x19
   17720:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17724:	cbz	w0, 17798 <PyInit__decimal@@Base+0x10ce4>
   17728:	ldr	x8, [x22]
   1772c:	subs	x8, x8, #0x1
   17730:	str	x8, [x22]
   17734:	b.ne	17794 <PyInit__decimal@@Base+0x10ce0>  // b.any
   17738:	mov	x0, x22
   1773c:	b	17790 <PyInit__decimal@@Base+0x10cdc>
   17740:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17744:	add	x0, x0, #0xe60
   17748:	mov	x1, x20
   1774c:	mov	x2, x19
   17750:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17754:	mov	x20, x0
   17758:	cbnz	x0, 175c4 <PyInit__decimal@@Base+0x10b10>
   1775c:	b	17794 <PyInit__decimal@@Base+0x10ce0>
   17760:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17764:	add	x0, x0, #0xe60
   17768:	mov	x1, x21
   1776c:	mov	x2, x19
   17770:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17774:	mov	x21, x0
   17778:	cbnz	x0, 175f0 <PyInit__decimal@@Base+0x10b3c>
   1777c:	ldr	x8, [x20]
   17780:	subs	x8, x8, #0x1
   17784:	str	x8, [x20]
   17788:	b.ne	17794 <PyInit__decimal@@Base+0x10ce0>  // b.any
   1778c:	mov	x0, x20
   17790:	bl	6510 <_Py_Dealloc@plt>
   17794:	mov	x22, xzr
   17798:	mov	x0, x22
   1779c:	ldp	x20, x19, [sp, #64]
   177a0:	ldp	x22, x21, [sp, #48]
   177a4:	ldp	x29, x30, [sp, #32]
   177a8:	add	sp, sp, #0x50
   177ac:	ret
   177b0:	sub	sp, sp, #0x50
   177b4:	stp	x29, x30, [sp, #32]
   177b8:	stp	x22, x21, [sp, #48]
   177bc:	stp	x20, x19, [sp, #64]
   177c0:	add	x29, sp, #0x20
   177c4:	mov	x8, x1
   177c8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   177cc:	mov	x19, x0
   177d0:	add	x1, x1, #0x67c
   177d4:	sub	x2, x29, #0x8
   177d8:	add	x3, sp, #0x10
   177dc:	mov	x0, x8
   177e0:	str	wzr, [sp, #12]
   177e4:	bl	6820 <PyArg_ParseTuple@plt>
   177e8:	cbz	w0, 179f0 <PyInit__decimal@@Base+0x10f3c>
   177ec:	ldur	x20, [x29, #-8]
   177f0:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   177f4:	add	x22, x22, #0xe60
   177f8:	ldr	x0, [x20, #8]
   177fc:	cmp	x0, x22
   17800:	b.eq	17814 <PyInit__decimal@@Base+0x10d60>  // b.none
   17804:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17808:	add	x1, x1, #0xe60
   1780c:	bl	6900 <PyType_IsSubtype@plt>
   17810:	cbz	w0, 178fc <PyInit__decimal@@Base+0x10e48>
   17814:	ldr	x8, [x20]
   17818:	add	x8, x8, #0x1
   1781c:	str	x8, [x20]
   17820:	ldr	x21, [sp, #16]
   17824:	ldr	x0, [x21, #8]
   17828:	cmp	x0, x22
   1782c:	b.eq	17840 <PyInit__decimal@@Base+0x10d8c>  // b.none
   17830:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17834:	add	x1, x1, #0xe60
   17838:	bl	6900 <PyType_IsSubtype@plt>
   1783c:	cbz	w0, 17928 <PyInit__decimal@@Base+0x10e74>
   17840:	ldr	x8, [x21]
   17844:	add	x8, x8, #0x1
   17848:	str	x8, [x21]
   1784c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17850:	add	x0, x0, #0xe60
   17854:	bl	6890 <_PyObject_New@plt>
   17858:	cbz	x0, 178cc <PyInit__decimal@@Base+0x10e18>
   1785c:	mov	w8, #0x30                  	// #48
   17860:	mov	x22, x0
   17864:	strb	w8, [x0, #24]!
   17868:	mov	x9, #0xffffffffffffffff    	// #-1
   1786c:	mov	w10, #0x4                   	// #4
   17870:	add	x1, x20, #0x18
   17874:	add	x2, x21, #0x18
   17878:	add	x8, x0, #0x30
   1787c:	add	x3, x19, #0x10
   17880:	add	x4, sp, #0xc
   17884:	stur	x9, [x0, #-8]
   17888:	stp	xzr, xzr, [x0, #8]
   1788c:	stp	xzr, x10, [x0, #24]
   17890:	str	x8, [x0, #40]
   17894:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   17898:	ldr	x8, [x20]
   1789c:	subs	x8, x8, #0x1
   178a0:	str	x8, [x20]
   178a4:	b.eq	17954 <PyInit__decimal@@Base+0x10ea0>  // b.none
   178a8:	ldr	x8, [x21]
   178ac:	subs	x8, x8, #0x1
   178b0:	str	x8, [x21]
   178b4:	b.eq	1796c <PyInit__decimal@@Base+0x10eb8>  // b.none
   178b8:	ldr	w1, [sp, #12]
   178bc:	mov	x0, x19
   178c0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   178c4:	cbnz	w0, 17984 <PyInit__decimal@@Base+0x10ed0>
   178c8:	b	179f4 <PyInit__decimal@@Base+0x10f40>
   178cc:	ldr	x8, [x20]
   178d0:	subs	x8, x8, #0x1
   178d4:	str	x8, [x20]
   178d8:	b.ne	178e4 <PyInit__decimal@@Base+0x10e30>  // b.any
   178dc:	mov	x0, x20
   178e0:	bl	6510 <_Py_Dealloc@plt>
   178e4:	ldr	x8, [x21]
   178e8:	subs	x8, x8, #0x1
   178ec:	str	x8, [x21]
   178f0:	b.ne	179f0 <PyInit__decimal@@Base+0x10f3c>  // b.any
   178f4:	mov	x0, x21
   178f8:	b	179ec <PyInit__decimal@@Base+0x10f38>
   178fc:	ldr	x8, [x20, #8]
   17900:	ldrb	w9, [x8, #171]
   17904:	tbnz	w9, #0, 1799c <PyInit__decimal@@Base+0x10ee8>
   17908:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1790c:	ldr	x9, [x9, #3936]
   17910:	ldr	x2, [x8, #24]
   17914:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17918:	add	x1, x1, #0xb93
   1791c:	ldr	x0, [x9]
   17920:	bl	6950 <PyErr_Format@plt>
   17924:	b	179f0 <PyInit__decimal@@Base+0x10f3c>
   17928:	ldr	x8, [x21, #8]
   1792c:	ldrb	w9, [x8, #171]
   17930:	tbnz	w9, #0, 179bc <PyInit__decimal@@Base+0x10f08>
   17934:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17938:	ldr	x9, [x9, #3936]
   1793c:	ldr	x2, [x8, #24]
   17940:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17944:	add	x1, x1, #0xb93
   17948:	ldr	x0, [x9]
   1794c:	bl	6950 <PyErr_Format@plt>
   17950:	b	179d8 <PyInit__decimal@@Base+0x10f24>
   17954:	mov	x0, x20
   17958:	bl	6510 <_Py_Dealloc@plt>
   1795c:	ldr	x8, [x21]
   17960:	subs	x8, x8, #0x1
   17964:	str	x8, [x21]
   17968:	b.ne	178b8 <PyInit__decimal@@Base+0x10e04>  // b.any
   1796c:	mov	x0, x21
   17970:	bl	6510 <_Py_Dealloc@plt>
   17974:	ldr	w1, [sp, #12]
   17978:	mov	x0, x19
   1797c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17980:	cbz	w0, 179f4 <PyInit__decimal@@Base+0x10f40>
   17984:	ldr	x8, [x22]
   17988:	subs	x8, x8, #0x1
   1798c:	str	x8, [x22]
   17990:	b.ne	179f0 <PyInit__decimal@@Base+0x10f3c>  // b.any
   17994:	mov	x0, x22
   17998:	b	179ec <PyInit__decimal@@Base+0x10f38>
   1799c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   179a0:	add	x0, x0, #0xe60
   179a4:	mov	x1, x20
   179a8:	mov	x2, x19
   179ac:	bl	abdc <PyInit__decimal@@Base+0x4128>
   179b0:	mov	x20, x0
   179b4:	cbnz	x0, 17820 <PyInit__decimal@@Base+0x10d6c>
   179b8:	b	179f0 <PyInit__decimal@@Base+0x10f3c>
   179bc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   179c0:	add	x0, x0, #0xe60
   179c4:	mov	x1, x21
   179c8:	mov	x2, x19
   179cc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   179d0:	mov	x21, x0
   179d4:	cbnz	x0, 1784c <PyInit__decimal@@Base+0x10d98>
   179d8:	ldr	x8, [x20]
   179dc:	subs	x8, x8, #0x1
   179e0:	str	x8, [x20]
   179e4:	b.ne	179f0 <PyInit__decimal@@Base+0x10f3c>  // b.any
   179e8:	mov	x0, x20
   179ec:	bl	6510 <_Py_Dealloc@plt>
   179f0:	mov	x22, xzr
   179f4:	mov	x0, x22
   179f8:	ldp	x20, x19, [sp, #64]
   179fc:	ldp	x22, x21, [sp, #48]
   17a00:	ldp	x29, x30, [sp, #32]
   17a04:	add	sp, sp, #0x50
   17a08:	ret
   17a0c:	sub	sp, sp, #0x60
   17a10:	stp	x29, x30, [sp, #32]
   17a14:	stp	x24, x23, [sp, #48]
   17a18:	stp	x22, x21, [sp, #64]
   17a1c:	stp	x20, x19, [sp, #80]
   17a20:	add	x29, sp, #0x20
   17a24:	adrp	x23, 56000 <PyInit__decimal@@Base+0x4f54c>
   17a28:	ldr	x23, [x23, #4008]
   17a2c:	mov	x8, x2
   17a30:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   17a34:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   17a38:	mov	x20, x0
   17a3c:	add	x2, x2, #0xaa
   17a40:	add	x3, x3, #0xb90
   17a44:	sub	x4, x29, #0x8
   17a48:	add	x5, sp, #0x10
   17a4c:	add	x6, sp, #0x8
   17a50:	mov	x0, x1
   17a54:	mov	x1, x8
   17a58:	str	x23, [sp, #8]
   17a5c:	str	wzr, [sp, #4]
   17a60:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   17a64:	cbz	w0, 17da4 <PyInit__decimal@@Base+0x112f0>
   17a68:	ldur	x19, [x29, #-8]
   17a6c:	adrp	x24, 58000 <PyInit__decimal@@Base+0x5154c>
   17a70:	add	x24, x24, #0xe60
   17a74:	ldr	x0, [x19, #8]
   17a78:	cmp	x0, x24
   17a7c:	b.eq	17a90 <PyInit__decimal@@Base+0x10fdc>  // b.none
   17a80:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17a84:	add	x1, x1, #0xe60
   17a88:	bl	6900 <PyType_IsSubtype@plt>
   17a8c:	cbz	w0, 17bc4 <PyInit__decimal@@Base+0x11110>
   17a90:	ldr	x8, [x19]
   17a94:	add	x8, x8, #0x1
   17a98:	str	x8, [x19]
   17a9c:	ldr	x21, [sp, #16]
   17aa0:	ldr	x0, [x21, #8]
   17aa4:	cmp	x0, x24
   17aa8:	b.eq	17abc <PyInit__decimal@@Base+0x11008>  // b.none
   17aac:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17ab0:	add	x1, x1, #0xe60
   17ab4:	bl	6900 <PyType_IsSubtype@plt>
   17ab8:	cbz	w0, 17bf0 <PyInit__decimal@@Base+0x1113c>
   17abc:	ldr	x8, [x21]
   17ac0:	add	x8, x8, #0x1
   17ac4:	str	x8, [x21]
   17ac8:	ldr	x22, [sp, #8]
   17acc:	cmp	x22, x23
   17ad0:	b.eq	17b00 <PyInit__decimal@@Base+0x1104c>  // b.none
   17ad4:	ldr	x0, [x22, #8]
   17ad8:	cmp	x0, x24
   17adc:	b.eq	17af0 <PyInit__decimal@@Base+0x1103c>  // b.none
   17ae0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17ae4:	add	x1, x1, #0xe60
   17ae8:	bl	6900 <PyType_IsSubtype@plt>
   17aec:	cbz	w0, 17c5c <PyInit__decimal@@Base+0x111a8>
   17af0:	ldr	x8, [x22]
   17af4:	add	x8, x8, #0x1
   17af8:	str	x8, [x22]
   17afc:	b	17b04 <PyInit__decimal@@Base+0x11050>
   17b00:	mov	x22, xzr
   17b04:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17b08:	add	x0, x0, #0xe60
   17b0c:	bl	6890 <_PyObject_New@plt>
   17b10:	cbz	x0, 17b9c <PyInit__decimal@@Base+0x110e8>
   17b14:	mov	w8, #0x30                  	// #48
   17b18:	mov	x23, x0
   17b1c:	strb	w8, [x0, #24]!
   17b20:	mov	x9, #0xffffffffffffffff    	// #-1
   17b24:	mov	w10, #0x4                   	// #4
   17b28:	add	x1, x19, #0x18
   17b2c:	add	x8, x0, #0x30
   17b30:	add	x2, x21, #0x18
   17b34:	stur	x9, [x0, #-8]
   17b38:	stp	xzr, xzr, [x0, #8]
   17b3c:	stp	xzr, x10, [x0, #24]
   17b40:	str	x8, [x0, #40]
   17b44:	cbz	x22, 17c1c <PyInit__decimal@@Base+0x11168>
   17b48:	add	x3, x22, #0x18
   17b4c:	add	x4, x20, #0x10
   17b50:	add	x5, sp, #0x4
   17b54:	bl	34fc4 <PyInit__decimal@@Base+0x2e510>
   17b58:	ldr	x8, [x22]
   17b5c:	subs	x8, x8, #0x1
   17b60:	str	x8, [x22]
   17b64:	b.eq	17cbc <PyInit__decimal@@Base+0x11208>  // b.none
   17b68:	ldr	x8, [x19]
   17b6c:	subs	x8, x8, #0x1
   17b70:	str	x8, [x19]
   17b74:	b.eq	17cd4 <PyInit__decimal@@Base+0x11220>  // b.none
   17b78:	ldr	x8, [x21]
   17b7c:	subs	x8, x8, #0x1
   17b80:	str	x8, [x21]
   17b84:	b.eq	17cec <PyInit__decimal@@Base+0x11238>  // b.none
   17b88:	ldr	w1, [sp, #4]
   17b8c:	mov	x0, x20
   17b90:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17b94:	cbnz	w0, 17d04 <PyInit__decimal@@Base+0x11250>
   17b98:	b	17da8 <PyInit__decimal@@Base+0x112f4>
   17b9c:	ldr	x8, [x19]
   17ba0:	subs	x8, x8, #0x1
   17ba4:	str	x8, [x19]
   17ba8:	b.eq	17d1c <PyInit__decimal@@Base+0x11268>  // b.none
   17bac:	ldr	x8, [x21]
   17bb0:	subs	x8, x8, #0x1
   17bb4:	str	x8, [x21]
   17bb8:	b.eq	17d34 <PyInit__decimal@@Base+0x11280>  // b.none
   17bbc:	cbnz	x22, 17d40 <PyInit__decimal@@Base+0x1128c>
   17bc0:	b	17da4 <PyInit__decimal@@Base+0x112f0>
   17bc4:	ldr	x8, [x19, #8]
   17bc8:	ldrb	w9, [x8, #171]
   17bcc:	tbnz	w9, #0, 17c3c <PyInit__decimal@@Base+0x11188>
   17bd0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17bd4:	ldr	x9, [x9, #3936]
   17bd8:	ldr	x2, [x8, #24]
   17bdc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17be0:	add	x1, x1, #0xb93
   17be4:	ldr	x0, [x9]
   17be8:	bl	6950 <PyErr_Format@plt>
   17bec:	b	17da4 <PyInit__decimal@@Base+0x112f0>
   17bf0:	ldr	x8, [x21, #8]
   17bf4:	ldrb	w9, [x8, #171]
   17bf8:	tbnz	w9, #0, 17c88 <PyInit__decimal@@Base+0x111d4>
   17bfc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17c00:	ldr	x9, [x9, #3936]
   17c04:	ldr	x2, [x8, #24]
   17c08:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17c0c:	add	x1, x1, #0xb93
   17c10:	ldr	x0, [x9]
   17c14:	bl	6950 <PyErr_Format@plt>
   17c18:	b	17ca4 <PyInit__decimal@@Base+0x111f0>
   17c1c:	add	x3, x20, #0x10
   17c20:	add	x4, sp, #0x4
   17c24:	bl	333b0 <PyInit__decimal@@Base+0x2c8fc>
   17c28:	ldr	x8, [x19]
   17c2c:	subs	x8, x8, #0x1
   17c30:	str	x8, [x19]
   17c34:	b.ne	17b78 <PyInit__decimal@@Base+0x110c4>  // b.any
   17c38:	b	17cd4 <PyInit__decimal@@Base+0x11220>
   17c3c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17c40:	add	x0, x0, #0xe60
   17c44:	mov	x1, x19
   17c48:	mov	x2, x20
   17c4c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17c50:	mov	x19, x0
   17c54:	cbnz	x0, 17a9c <PyInit__decimal@@Base+0x10fe8>
   17c58:	b	17da4 <PyInit__decimal@@Base+0x112f0>
   17c5c:	ldr	x8, [x22, #8]
   17c60:	ldrb	w9, [x8, #171]
   17c64:	tbnz	w9, #0, 17d58 <PyInit__decimal@@Base+0x112a4>
   17c68:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17c6c:	ldr	x9, [x9, #3936]
   17c70:	ldr	x2, [x8, #24]
   17c74:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17c78:	add	x1, x1, #0xb93
   17c7c:	ldr	x0, [x9]
   17c80:	bl	6950 <PyErr_Format@plt>
   17c84:	b	17d74 <PyInit__decimal@@Base+0x112c0>
   17c88:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17c8c:	add	x0, x0, #0xe60
   17c90:	mov	x1, x21
   17c94:	mov	x2, x20
   17c98:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17c9c:	mov	x21, x0
   17ca0:	cbnz	x0, 17ac8 <PyInit__decimal@@Base+0x11014>
   17ca4:	ldr	x8, [x19]
   17ca8:	subs	x8, x8, #0x1
   17cac:	str	x8, [x19]
   17cb0:	b.ne	17da4 <PyInit__decimal@@Base+0x112f0>  // b.any
   17cb4:	mov	x0, x19
   17cb8:	b	17da0 <PyInit__decimal@@Base+0x112ec>
   17cbc:	mov	x0, x22
   17cc0:	bl	6510 <_Py_Dealloc@plt>
   17cc4:	ldr	x8, [x19]
   17cc8:	subs	x8, x8, #0x1
   17ccc:	str	x8, [x19]
   17cd0:	b.ne	17b78 <PyInit__decimal@@Base+0x110c4>  // b.any
   17cd4:	mov	x0, x19
   17cd8:	bl	6510 <_Py_Dealloc@plt>
   17cdc:	ldr	x8, [x21]
   17ce0:	subs	x8, x8, #0x1
   17ce4:	str	x8, [x21]
   17ce8:	b.ne	17b88 <PyInit__decimal@@Base+0x110d4>  // b.any
   17cec:	mov	x0, x21
   17cf0:	bl	6510 <_Py_Dealloc@plt>
   17cf4:	ldr	w1, [sp, #4]
   17cf8:	mov	x0, x20
   17cfc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17d00:	cbz	w0, 17da8 <PyInit__decimal@@Base+0x112f4>
   17d04:	ldr	x8, [x23]
   17d08:	subs	x8, x8, #0x1
   17d0c:	str	x8, [x23]
   17d10:	b.ne	17da4 <PyInit__decimal@@Base+0x112f0>  // b.any
   17d14:	mov	x0, x23
   17d18:	b	17da0 <PyInit__decimal@@Base+0x112ec>
   17d1c:	mov	x0, x19
   17d20:	bl	6510 <_Py_Dealloc@plt>
   17d24:	ldr	x8, [x21]
   17d28:	subs	x8, x8, #0x1
   17d2c:	str	x8, [x21]
   17d30:	b.ne	17bbc <PyInit__decimal@@Base+0x11108>  // b.any
   17d34:	mov	x0, x21
   17d38:	bl	6510 <_Py_Dealloc@plt>
   17d3c:	cbz	x22, 17da4 <PyInit__decimal@@Base+0x112f0>
   17d40:	ldr	x8, [x22]
   17d44:	subs	x8, x8, #0x1
   17d48:	str	x8, [x22]
   17d4c:	b.ne	17da4 <PyInit__decimal@@Base+0x112f0>  // b.any
   17d50:	mov	x0, x22
   17d54:	b	17da0 <PyInit__decimal@@Base+0x112ec>
   17d58:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17d5c:	add	x0, x0, #0xe60
   17d60:	mov	x1, x22
   17d64:	mov	x2, x20
   17d68:	bl	abdc <PyInit__decimal@@Base+0x4128>
   17d6c:	mov	x22, x0
   17d70:	cbnz	x0, 17b04 <PyInit__decimal@@Base+0x11050>
   17d74:	ldr	x8, [x19]
   17d78:	subs	x8, x8, #0x1
   17d7c:	str	x8, [x19]
   17d80:	b.ne	17d8c <PyInit__decimal@@Base+0x112d8>  // b.any
   17d84:	mov	x0, x19
   17d88:	bl	6510 <_Py_Dealloc@plt>
   17d8c:	ldr	x8, [x21]
   17d90:	subs	x8, x8, #0x1
   17d94:	str	x8, [x21]
   17d98:	b.ne	17da4 <PyInit__decimal@@Base+0x112f0>  // b.any
   17d9c:	mov	x0, x21
   17da0:	bl	6510 <_Py_Dealloc@plt>
   17da4:	mov	x23, xzr
   17da8:	mov	x0, x23
   17dac:	ldp	x20, x19, [sp, #80]
   17db0:	ldp	x22, x21, [sp, #64]
   17db4:	ldp	x24, x23, [sp, #48]
   17db8:	ldp	x29, x30, [sp, #32]
   17dbc:	add	sp, sp, #0x60
   17dc0:	ret
   17dc4:	sub	sp, sp, #0x60
   17dc8:	stp	x29, x30, [sp, #32]
   17dcc:	str	x23, [sp, #48]
   17dd0:	stp	x22, x21, [sp, #64]
   17dd4:	stp	x20, x19, [sp, #80]
   17dd8:	add	x29, sp, #0x20
   17ddc:	mov	x8, x1
   17de0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   17de4:	mov	x19, x0
   17de8:	add	x1, x1, #0x67b
   17dec:	add	x2, x29, #0x18
   17df0:	sub	x3, x29, #0x8
   17df4:	add	x4, sp, #0x10
   17df8:	mov	x0, x8
   17dfc:	str	wzr, [sp, #12]
   17e00:	bl	6820 <PyArg_ParseTuple@plt>
   17e04:	cbz	w0, 18118 <PyInit__decimal@@Base+0x11664>
   17e08:	ldr	x20, [x29, #24]
   17e0c:	adrp	x23, 58000 <PyInit__decimal@@Base+0x5154c>
   17e10:	add	x23, x23, #0xe60
   17e14:	ldr	x0, [x20, #8]
   17e18:	cmp	x0, x23
   17e1c:	b.eq	17e30 <PyInit__decimal@@Base+0x1137c>  // b.none
   17e20:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17e24:	add	x1, x1, #0xe60
   17e28:	bl	6900 <PyType_IsSubtype@plt>
   17e2c:	cbz	w0, 17f28 <PyInit__decimal@@Base+0x11474>
   17e30:	ldr	x8, [x20]
   17e34:	add	x8, x8, #0x1
   17e38:	str	x8, [x20]
   17e3c:	ldur	x21, [x29, #-8]
   17e40:	ldr	x0, [x21, #8]
   17e44:	cmp	x0, x23
   17e48:	b.eq	17e5c <PyInit__decimal@@Base+0x113a8>  // b.none
   17e4c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17e50:	add	x1, x1, #0xe60
   17e54:	bl	6900 <PyType_IsSubtype@plt>
   17e58:	cbz	w0, 17f88 <PyInit__decimal@@Base+0x114d4>
   17e5c:	ldr	x8, [x21]
   17e60:	add	x8, x8, #0x1
   17e64:	str	x8, [x21]
   17e68:	ldr	x22, [sp, #16]
   17e6c:	ldr	x0, [x22, #8]
   17e70:	cmp	x0, x23
   17e74:	b.eq	17e88 <PyInit__decimal@@Base+0x113d4>  // b.none
   17e78:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   17e7c:	add	x1, x1, #0xe60
   17e80:	bl	6900 <PyType_IsSubtype@plt>
   17e84:	cbz	w0, 17fb4 <PyInit__decimal@@Base+0x11500>
   17e88:	ldr	x8, [x22]
   17e8c:	add	x8, x8, #0x1
   17e90:	str	x8, [x22]
   17e94:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   17e98:	add	x0, x0, #0xe60
   17e9c:	bl	6890 <_PyObject_New@plt>
   17ea0:	cbz	x0, 17f54 <PyInit__decimal@@Base+0x114a0>
   17ea4:	mov	w8, #0x30                  	// #48
   17ea8:	mov	x23, x0
   17eac:	strb	w8, [x0, #24]!
   17eb0:	mov	x9, #0xffffffffffffffff    	// #-1
   17eb4:	mov	w10, #0x4                   	// #4
   17eb8:	add	x1, x20, #0x18
   17ebc:	add	x2, x21, #0x18
   17ec0:	add	x3, x22, #0x18
   17ec4:	add	x8, x0, #0x30
   17ec8:	add	x4, x19, #0x10
   17ecc:	add	x5, sp, #0xc
   17ed0:	stur	x9, [x0, #-8]
   17ed4:	stp	xzr, xzr, [x0, #8]
   17ed8:	stp	xzr, x10, [x0, #24]
   17edc:	str	x8, [x0, #40]
   17ee0:	bl	2ee54 <PyInit__decimal@@Base+0x283a0>
   17ee4:	ldr	x8, [x20]
   17ee8:	subs	x8, x8, #0x1
   17eec:	str	x8, [x20]
   17ef0:	b.eq	17fe0 <PyInit__decimal@@Base+0x1152c>  // b.none
   17ef4:	ldr	x8, [x21]
   17ef8:	subs	x8, x8, #0x1
   17efc:	str	x8, [x21]
   17f00:	b.eq	17ff8 <PyInit__decimal@@Base+0x11544>  // b.none
   17f04:	ldr	x8, [x22]
   17f08:	subs	x8, x8, #0x1
   17f0c:	str	x8, [x22]
   17f10:	b.eq	18010 <PyInit__decimal@@Base+0x1155c>  // b.none
   17f14:	ldr	w1, [sp, #12]
   17f18:	mov	x0, x19
   17f1c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   17f20:	cbnz	w0, 18028 <PyInit__decimal@@Base+0x11574>
   17f24:	b	1811c <PyInit__decimal@@Base+0x11668>
   17f28:	ldr	x8, [x20, #8]
   17f2c:	ldrb	w9, [x8, #171]
   17f30:	tbnz	w9, #0, 18040 <PyInit__decimal@@Base+0x1158c>
   17f34:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17f38:	ldr	x9, [x9, #3936]
   17f3c:	ldr	x2, [x8, #24]
   17f40:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17f44:	add	x1, x1, #0xb93
   17f48:	ldr	x0, [x9]
   17f4c:	bl	6950 <PyErr_Format@plt>
   17f50:	b	18118 <PyInit__decimal@@Base+0x11664>
   17f54:	ldr	x8, [x20]
   17f58:	subs	x8, x8, #0x1
   17f5c:	str	x8, [x20]
   17f60:	b.eq	18094 <PyInit__decimal@@Base+0x115e0>  // b.none
   17f64:	ldr	x8, [x21]
   17f68:	subs	x8, x8, #0x1
   17f6c:	str	x8, [x21]
   17f70:	b.eq	180ac <PyInit__decimal@@Base+0x115f8>  // b.none
   17f74:	ldr	x8, [x22]
   17f78:	subs	x8, x8, #0x1
   17f7c:	str	x8, [x22]
   17f80:	b.ne	18118 <PyInit__decimal@@Base+0x11664>  // b.any
   17f84:	b	180c4 <PyInit__decimal@@Base+0x11610>
   17f88:	ldr	x8, [x21, #8]
   17f8c:	ldrb	w9, [x8, #171]
   17f90:	tbnz	w9, #0, 18060 <PyInit__decimal@@Base+0x115ac>
   17f94:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17f98:	ldr	x9, [x9, #3936]
   17f9c:	ldr	x2, [x8, #24]
   17fa0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17fa4:	add	x1, x1, #0xb93
   17fa8:	ldr	x0, [x9]
   17fac:	bl	6950 <PyErr_Format@plt>
   17fb0:	b	1807c <PyInit__decimal@@Base+0x115c8>
   17fb4:	ldr	x8, [x22, #8]
   17fb8:	ldrb	w9, [x8, #171]
   17fbc:	tbnz	w9, #0, 180cc <PyInit__decimal@@Base+0x11618>
   17fc0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   17fc4:	ldr	x9, [x9, #3936]
   17fc8:	ldr	x2, [x8, #24]
   17fcc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   17fd0:	add	x1, x1, #0xb93
   17fd4:	ldr	x0, [x9]
   17fd8:	bl	6950 <PyErr_Format@plt>
   17fdc:	b	180e8 <PyInit__decimal@@Base+0x11634>
   17fe0:	mov	x0, x20
   17fe4:	bl	6510 <_Py_Dealloc@plt>
   17fe8:	ldr	x8, [x21]
   17fec:	subs	x8, x8, #0x1
   17ff0:	str	x8, [x21]
   17ff4:	b.ne	17f04 <PyInit__decimal@@Base+0x11450>  // b.any
   17ff8:	mov	x0, x21
   17ffc:	bl	6510 <_Py_Dealloc@plt>
   18000:	ldr	x8, [x22]
   18004:	subs	x8, x8, #0x1
   18008:	str	x8, [x22]
   1800c:	b.ne	17f14 <PyInit__decimal@@Base+0x11460>  // b.any
   18010:	mov	x0, x22
   18014:	bl	6510 <_Py_Dealloc@plt>
   18018:	ldr	w1, [sp, #12]
   1801c:	mov	x0, x19
   18020:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   18024:	cbz	w0, 1811c <PyInit__decimal@@Base+0x11668>
   18028:	ldr	x8, [x23]
   1802c:	subs	x8, x8, #0x1
   18030:	str	x8, [x23]
   18034:	b.ne	18118 <PyInit__decimal@@Base+0x11664>  // b.any
   18038:	mov	x0, x23
   1803c:	b	18114 <PyInit__decimal@@Base+0x11660>
   18040:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18044:	add	x0, x0, #0xe60
   18048:	mov	x1, x20
   1804c:	mov	x2, x19
   18050:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18054:	mov	x20, x0
   18058:	cbnz	x0, 17e3c <PyInit__decimal@@Base+0x11388>
   1805c:	b	18118 <PyInit__decimal@@Base+0x11664>
   18060:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18064:	add	x0, x0, #0xe60
   18068:	mov	x1, x21
   1806c:	mov	x2, x19
   18070:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18074:	mov	x21, x0
   18078:	cbnz	x0, 17e68 <PyInit__decimal@@Base+0x113b4>
   1807c:	ldr	x8, [x20]
   18080:	subs	x8, x8, #0x1
   18084:	str	x8, [x20]
   18088:	b.ne	18118 <PyInit__decimal@@Base+0x11664>  // b.any
   1808c:	mov	x0, x20
   18090:	b	18114 <PyInit__decimal@@Base+0x11660>
   18094:	mov	x0, x20
   18098:	bl	6510 <_Py_Dealloc@plt>
   1809c:	ldr	x8, [x21]
   180a0:	subs	x8, x8, #0x1
   180a4:	str	x8, [x21]
   180a8:	b.ne	17f74 <PyInit__decimal@@Base+0x114c0>  // b.any
   180ac:	mov	x0, x21
   180b0:	bl	6510 <_Py_Dealloc@plt>
   180b4:	ldr	x8, [x22]
   180b8:	subs	x8, x8, #0x1
   180bc:	str	x8, [x22]
   180c0:	b.ne	18118 <PyInit__decimal@@Base+0x11664>  // b.any
   180c4:	mov	x0, x22
   180c8:	b	18114 <PyInit__decimal@@Base+0x11660>
   180cc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   180d0:	add	x0, x0, #0xe60
   180d4:	mov	x1, x22
   180d8:	mov	x2, x19
   180dc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   180e0:	mov	x22, x0
   180e4:	cbnz	x0, 17e94 <PyInit__decimal@@Base+0x113e0>
   180e8:	ldr	x8, [x20]
   180ec:	subs	x8, x8, #0x1
   180f0:	str	x8, [x20]
   180f4:	b.ne	18100 <PyInit__decimal@@Base+0x1164c>  // b.any
   180f8:	mov	x0, x20
   180fc:	bl	6510 <_Py_Dealloc@plt>
   18100:	ldr	x8, [x21]
   18104:	subs	x8, x8, #0x1
   18108:	str	x8, [x21]
   1810c:	b.ne	18118 <PyInit__decimal@@Base+0x11664>  // b.any
   18110:	mov	x0, x21
   18114:	bl	6510 <_Py_Dealloc@plt>
   18118:	mov	x23, xzr
   1811c:	mov	x0, x23
   18120:	ldp	x20, x19, [sp, #80]
   18124:	ldp	x22, x21, [sp, #64]
   18128:	ldr	x23, [sp, #48]
   1812c:	ldp	x29, x30, [sp, #32]
   18130:	add	sp, sp, #0x60
   18134:	ret
   18138:	stp	x29, x30, [sp, #-16]!
   1813c:	mov	x29, sp
   18140:	add	x0, x0, #0x10
   18144:	bl	22488 <PyInit__decimal@@Base+0x1b9d4>
   18148:	ldp	x29, x30, [sp], #16
   1814c:	b	65e0 <PyLong_FromSsize_t@plt>
   18150:	stp	x29, x30, [sp, #-16]!
   18154:	mov	x29, sp
   18158:	add	x0, x0, #0x10
   1815c:	bl	2249c <PyInit__decimal@@Base+0x1b9e8>
   18160:	ldp	x29, x30, [sp], #16
   18164:	b	65e0 <PyLong_FromSsize_t@plt>
   18168:	stp	x29, x30, [sp, #-48]!
   1816c:	str	x21, [sp, #16]
   18170:	stp	x20, x19, [sp, #32]
   18174:	mov	x29, sp
   18178:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1817c:	add	x0, x0, #0xe60
   18180:	bl	6890 <_PyObject_New@plt>
   18184:	mov	x19, x0
   18188:	cbz	x0, 181d8 <PyInit__decimal@@Base+0x11724>
   1818c:	mov	w8, #0xa                   	// #10
   18190:	mov	x21, x19
   18194:	adrp	x11, 3e000 <PyInit__decimal@@Base+0x3754c>
   18198:	str	x8, [x21, #72]!
   1819c:	ldr	q0, [x11, #1536]
   181a0:	mov	x9, #0xffffffffffffffff    	// #-1
   181a4:	mov	w10, #0x30                  	// #48
   181a8:	mov	x20, x21
   181ac:	stur	x9, [x21, #-56]
   181b0:	strb	w10, [x20, #-48]!
   181b4:	mov	x0, x20
   181b8:	mov	w1, wzr
   181bc:	stp	xzr, xzr, [x21, #-40]
   181c0:	stur	x21, [x21, #-8]
   181c4:	stur	q0, [x21, #-24]
   181c8:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
   181cc:	mov	x0, x20
   181d0:	stur	xzr, [x21, #-40]
   181d4:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
   181d8:	mov	x0, x19
   181dc:	ldp	x20, x19, [sp, #32]
   181e0:	ldr	x21, [sp, #16]
   181e4:	ldp	x29, x30, [sp], #48
   181e8:	ret
   181ec:	stp	x29, x30, [sp, #-32]!
   181f0:	str	x19, [sp, #16]
   181f4:	mov	x29, sp
   181f8:	ldr	x0, [x1, #8]
   181fc:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   18200:	add	x8, x8, #0xe60
   18204:	mov	x19, x1
   18208:	cmp	x0, x8
   1820c:	b.eq	18220 <PyInit__decimal@@Base+0x1176c>  // b.none
   18210:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18214:	add	x1, x1, #0xe60
   18218:	bl	6900 <PyType_IsSubtype@plt>
   1821c:	cbz	w0, 18258 <PyInit__decimal@@Base+0x117a4>
   18220:	add	x0, x19, #0x18
   18224:	bl	2279c <PyInit__decimal@@Base+0x1bce8>
   18228:	cbz	w0, 18238 <PyInit__decimal@@Base+0x11784>
   1822c:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   18230:	ldr	x0, [x0, #4024]
   18234:	b	18240 <PyInit__decimal@@Base+0x1178c>
   18238:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1823c:	ldr	x0, [x0, #3976]
   18240:	ldr	x8, [x0]
   18244:	add	x8, x8, #0x1
   18248:	str	x8, [x0]
   1824c:	ldr	x19, [sp, #16]
   18250:	ldp	x29, x30, [sp], #32
   18254:	ret
   18258:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1825c:	ldr	x8, [x8, #3936]
   18260:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   18264:	add	x1, x1, #0x554
   18268:	ldr	x0, [x8]
   1826c:	bl	6590 <PyErr_SetString@plt>
   18270:	mov	x0, xzr
   18274:	ldr	x19, [sp, #16]
   18278:	ldp	x29, x30, [sp], #32
   1827c:	ret
   18280:	stp	x29, x30, [sp, #-32]!
   18284:	stp	x20, x19, [sp, #16]
   18288:	mov	x29, sp
   1828c:	ldr	x8, [x1, #8]
   18290:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   18294:	add	x9, x9, #0xe60
   18298:	mov	x19, x1
   1829c:	cmp	x8, x9
   182a0:	b.eq	182bc <PyInit__decimal@@Base+0x11808>  // b.none
   182a4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   182a8:	mov	x20, x0
   182ac:	add	x1, x1, #0xe60
   182b0:	mov	x0, x8
   182b4:	bl	6900 <PyType_IsSubtype@plt>
   182b8:	cbz	w0, 1832c <PyInit__decimal@@Base+0x11878>
   182bc:	ldr	x8, [x19]
   182c0:	add	x8, x8, #0x1
   182c4:	str	x8, [x19]
   182c8:	add	x0, x19, #0x18
   182cc:	bl	227a4 <PyInit__decimal@@Base+0x1bcf0>
   182d0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   182d4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   182d8:	ldr	x8, [x8, #4024]
   182dc:	ldr	x9, [x9, #3976]
   182e0:	cmp	w0, #0x0
   182e4:	csel	x20, x9, x8, eq  // eq = none
   182e8:	ldr	x8, [x20]
   182ec:	add	x8, x8, #0x1
   182f0:	str	x8, [x20]
   182f4:	ldr	x8, [x19]
   182f8:	subs	x8, x8, #0x1
   182fc:	str	x8, [x19]
   18300:	b.eq	18314 <PyInit__decimal@@Base+0x11860>  // b.none
   18304:	mov	x0, x20
   18308:	ldp	x20, x19, [sp, #16]
   1830c:	ldp	x29, x30, [sp], #32
   18310:	ret
   18314:	mov	x0, x19
   18318:	bl	6510 <_Py_Dealloc@plt>
   1831c:	mov	x0, x20
   18320:	ldp	x20, x19, [sp, #16]
   18324:	ldp	x29, x30, [sp], #32
   18328:	ret
   1832c:	ldr	x8, [x19, #8]
   18330:	ldrb	w9, [x8, #171]
   18334:	tbnz	w9, #0, 18358 <PyInit__decimal@@Base+0x118a4>
   18338:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1833c:	ldr	x9, [x9, #3936]
   18340:	ldr	x2, [x8, #24]
   18344:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18348:	add	x1, x1, #0xb93
   1834c:	ldr	x0, [x9]
   18350:	bl	6950 <PyErr_Format@plt>
   18354:	b	18374 <PyInit__decimal@@Base+0x118c0>
   18358:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1835c:	add	x0, x0, #0xe60
   18360:	mov	x1, x19
   18364:	mov	x2, x20
   18368:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1836c:	mov	x19, x0
   18370:	cbnz	x0, 182c8 <PyInit__decimal@@Base+0x11814>
   18374:	mov	x20, xzr
   18378:	mov	x0, x20
   1837c:	ldp	x20, x19, [sp, #16]
   18380:	ldp	x29, x30, [sp], #32
   18384:	ret
   18388:	stp	x29, x30, [sp, #-32]!
   1838c:	stp	x20, x19, [sp, #16]
   18390:	mov	x29, sp
   18394:	ldr	x8, [x1, #8]
   18398:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   1839c:	add	x9, x9, #0xe60
   183a0:	mov	x19, x1
   183a4:	cmp	x8, x9
   183a8:	b.eq	183c4 <PyInit__decimal@@Base+0x11910>  // b.none
   183ac:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   183b0:	mov	x20, x0
   183b4:	add	x1, x1, #0xe60
   183b8:	mov	x0, x8
   183bc:	bl	6900 <PyType_IsSubtype@plt>
   183c0:	cbz	w0, 18434 <PyInit__decimal@@Base+0x11980>
   183c4:	ldr	x8, [x19]
   183c8:	add	x8, x8, #0x1
   183cc:	str	x8, [x19]
   183d0:	add	x0, x19, #0x18
   183d4:	bl	227b4 <PyInit__decimal@@Base+0x1bd00>
   183d8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   183dc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   183e0:	ldr	x8, [x8, #4024]
   183e4:	ldr	x9, [x9, #3976]
   183e8:	cmp	w0, #0x0
   183ec:	csel	x20, x9, x8, eq  // eq = none
   183f0:	ldr	x8, [x20]
   183f4:	add	x8, x8, #0x1
   183f8:	str	x8, [x20]
   183fc:	ldr	x8, [x19]
   18400:	subs	x8, x8, #0x1
   18404:	str	x8, [x19]
   18408:	b.eq	1841c <PyInit__decimal@@Base+0x11968>  // b.none
   1840c:	mov	x0, x20
   18410:	ldp	x20, x19, [sp, #16]
   18414:	ldp	x29, x30, [sp], #32
   18418:	ret
   1841c:	mov	x0, x19
   18420:	bl	6510 <_Py_Dealloc@plt>
   18424:	mov	x0, x20
   18428:	ldp	x20, x19, [sp, #16]
   1842c:	ldp	x29, x30, [sp], #32
   18430:	ret
   18434:	ldr	x8, [x19, #8]
   18438:	ldrb	w9, [x8, #171]
   1843c:	tbnz	w9, #0, 18460 <PyInit__decimal@@Base+0x119ac>
   18440:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18444:	ldr	x9, [x9, #3936]
   18448:	ldr	x2, [x8, #24]
   1844c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18450:	add	x1, x1, #0xb93
   18454:	ldr	x0, [x9]
   18458:	bl	6950 <PyErr_Format@plt>
   1845c:	b	1847c <PyInit__decimal@@Base+0x119c8>
   18460:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18464:	add	x0, x0, #0xe60
   18468:	mov	x1, x19
   1846c:	mov	x2, x20
   18470:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18474:	mov	x19, x0
   18478:	cbnz	x0, 183d0 <PyInit__decimal@@Base+0x1191c>
   1847c:	mov	x20, xzr
   18480:	mov	x0, x20
   18484:	ldp	x20, x19, [sp, #16]
   18488:	ldp	x29, x30, [sp], #32
   1848c:	ret
   18490:	stp	x29, x30, [sp, #-32]!
   18494:	stp	x20, x19, [sp, #16]
   18498:	mov	x29, sp
   1849c:	ldr	x8, [x1, #8]
   184a0:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   184a4:	add	x9, x9, #0xe60
   184a8:	mov	x19, x1
   184ac:	cmp	x8, x9
   184b0:	b.eq	184cc <PyInit__decimal@@Base+0x11a18>  // b.none
   184b4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   184b8:	mov	x20, x0
   184bc:	add	x1, x1, #0xe60
   184c0:	mov	x0, x8
   184c4:	bl	6900 <PyType_IsSubtype@plt>
   184c8:	cbz	w0, 1853c <PyInit__decimal@@Base+0x11a88>
   184cc:	ldr	x8, [x19]
   184d0:	add	x8, x8, #0x1
   184d4:	str	x8, [x19]
   184d8:	add	x0, x19, #0x18
   184dc:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
   184e0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   184e4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   184e8:	ldr	x8, [x8, #4024]
   184ec:	ldr	x9, [x9, #3976]
   184f0:	cmp	w0, #0x0
   184f4:	csel	x20, x9, x8, eq  // eq = none
   184f8:	ldr	x8, [x20]
   184fc:	add	x8, x8, #0x1
   18500:	str	x8, [x20]
   18504:	ldr	x8, [x19]
   18508:	subs	x8, x8, #0x1
   1850c:	str	x8, [x19]
   18510:	b.eq	18524 <PyInit__decimal@@Base+0x11a70>  // b.none
   18514:	mov	x0, x20
   18518:	ldp	x20, x19, [sp, #16]
   1851c:	ldp	x29, x30, [sp], #32
   18520:	ret
   18524:	mov	x0, x19
   18528:	bl	6510 <_Py_Dealloc@plt>
   1852c:	mov	x0, x20
   18530:	ldp	x20, x19, [sp, #16]
   18534:	ldp	x29, x30, [sp], #32
   18538:	ret
   1853c:	ldr	x8, [x19, #8]
   18540:	ldrb	w9, [x8, #171]
   18544:	tbnz	w9, #0, 18568 <PyInit__decimal@@Base+0x11ab4>
   18548:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1854c:	ldr	x9, [x9, #3936]
   18550:	ldr	x2, [x8, #24]
   18554:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18558:	add	x1, x1, #0xb93
   1855c:	ldr	x0, [x9]
   18560:	bl	6950 <PyErr_Format@plt>
   18564:	b	18584 <PyInit__decimal@@Base+0x11ad0>
   18568:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1856c:	add	x0, x0, #0xe60
   18570:	mov	x1, x19
   18574:	mov	x2, x20
   18578:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1857c:	mov	x19, x0
   18580:	cbnz	x0, 184d8 <PyInit__decimal@@Base+0x11a24>
   18584:	mov	x20, xzr
   18588:	mov	x0, x20
   1858c:	ldp	x20, x19, [sp, #16]
   18590:	ldp	x29, x30, [sp], #32
   18594:	ret
   18598:	stp	x29, x30, [sp, #-32]!
   1859c:	stp	x20, x19, [sp, #16]
   185a0:	mov	x29, sp
   185a4:	ldr	x8, [x1, #8]
   185a8:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   185ac:	add	x9, x9, #0xe60
   185b0:	mov	x19, x1
   185b4:	cmp	x8, x9
   185b8:	mov	x20, x0
   185bc:	b.eq	185d4 <PyInit__decimal@@Base+0x11b20>  // b.none
   185c0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   185c4:	add	x1, x1, #0xe60
   185c8:	mov	x0, x8
   185cc:	bl	6900 <PyType_IsSubtype@plt>
   185d0:	cbz	w0, 18648 <PyInit__decimal@@Base+0x11b94>
   185d4:	ldr	x8, [x19]
   185d8:	add	x8, x8, #0x1
   185dc:	str	x8, [x19]
   185e0:	add	x0, x19, #0x18
   185e4:	add	x1, x20, #0x10
   185e8:	bl	22864 <PyInit__decimal@@Base+0x1bdb0>
   185ec:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   185f0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   185f4:	ldr	x8, [x8, #4024]
   185f8:	ldr	x9, [x9, #3976]
   185fc:	cmp	w0, #0x0
   18600:	csel	x20, x9, x8, eq  // eq = none
   18604:	ldr	x8, [x20]
   18608:	add	x8, x8, #0x1
   1860c:	str	x8, [x20]
   18610:	ldr	x8, [x19]
   18614:	subs	x8, x8, #0x1
   18618:	str	x8, [x19]
   1861c:	b.eq	18630 <PyInit__decimal@@Base+0x11b7c>  // b.none
   18620:	mov	x0, x20
   18624:	ldp	x20, x19, [sp, #16]
   18628:	ldp	x29, x30, [sp], #32
   1862c:	ret
   18630:	mov	x0, x19
   18634:	bl	6510 <_Py_Dealloc@plt>
   18638:	mov	x0, x20
   1863c:	ldp	x20, x19, [sp, #16]
   18640:	ldp	x29, x30, [sp], #32
   18644:	ret
   18648:	ldr	x8, [x19, #8]
   1864c:	ldrb	w9, [x8, #171]
   18650:	tbnz	w9, #0, 18674 <PyInit__decimal@@Base+0x11bc0>
   18654:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18658:	ldr	x9, [x9, #3936]
   1865c:	ldr	x2, [x8, #24]
   18660:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18664:	add	x1, x1, #0xb93
   18668:	ldr	x0, [x9]
   1866c:	bl	6950 <PyErr_Format@plt>
   18670:	b	18690 <PyInit__decimal@@Base+0x11bdc>
   18674:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18678:	add	x0, x0, #0xe60
   1867c:	mov	x1, x19
   18680:	mov	x2, x20
   18684:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18688:	mov	x19, x0
   1868c:	cbnz	x0, 185e0 <PyInit__decimal@@Base+0x11b2c>
   18690:	mov	x20, xzr
   18694:	mov	x0, x20
   18698:	ldp	x20, x19, [sp, #16]
   1869c:	ldp	x29, x30, [sp], #32
   186a0:	ret
   186a4:	stp	x29, x30, [sp, #-32]!
   186a8:	stp	x20, x19, [sp, #16]
   186ac:	mov	x29, sp
   186b0:	ldr	x8, [x1, #8]
   186b4:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   186b8:	add	x9, x9, #0xe60
   186bc:	mov	x19, x1
   186c0:	cmp	x8, x9
   186c4:	b.eq	186e0 <PyInit__decimal@@Base+0x11c2c>  // b.none
   186c8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   186cc:	mov	x20, x0
   186d0:	add	x1, x1, #0xe60
   186d4:	mov	x0, x8
   186d8:	bl	6900 <PyType_IsSubtype@plt>
   186dc:	cbz	w0, 18750 <PyInit__decimal@@Base+0x11c9c>
   186e0:	ldr	x8, [x19]
   186e4:	add	x8, x8, #0x1
   186e8:	str	x8, [x19]
   186ec:	add	x0, x19, #0x18
   186f0:	bl	227e8 <PyInit__decimal@@Base+0x1bd34>
   186f4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   186f8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   186fc:	ldr	x8, [x8, #4024]
   18700:	ldr	x9, [x9, #3976]
   18704:	cmp	w0, #0x0
   18708:	csel	x20, x9, x8, eq  // eq = none
   1870c:	ldr	x8, [x20]
   18710:	add	x8, x8, #0x1
   18714:	str	x8, [x20]
   18718:	ldr	x8, [x19]
   1871c:	subs	x8, x8, #0x1
   18720:	str	x8, [x19]
   18724:	b.eq	18738 <PyInit__decimal@@Base+0x11c84>  // b.none
   18728:	mov	x0, x20
   1872c:	ldp	x20, x19, [sp, #16]
   18730:	ldp	x29, x30, [sp], #32
   18734:	ret
   18738:	mov	x0, x19
   1873c:	bl	6510 <_Py_Dealloc@plt>
   18740:	mov	x0, x20
   18744:	ldp	x20, x19, [sp, #16]
   18748:	ldp	x29, x30, [sp], #32
   1874c:	ret
   18750:	ldr	x8, [x19, #8]
   18754:	ldrb	w9, [x8, #171]
   18758:	tbnz	w9, #0, 1877c <PyInit__decimal@@Base+0x11cc8>
   1875c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18760:	ldr	x9, [x9, #3936]
   18764:	ldr	x2, [x8, #24]
   18768:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1876c:	add	x1, x1, #0xb93
   18770:	ldr	x0, [x9]
   18774:	bl	6950 <PyErr_Format@plt>
   18778:	b	18798 <PyInit__decimal@@Base+0x11ce4>
   1877c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18780:	add	x0, x0, #0xe60
   18784:	mov	x1, x19
   18788:	mov	x2, x20
   1878c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18790:	mov	x19, x0
   18794:	cbnz	x0, 186ec <PyInit__decimal@@Base+0x11c38>
   18798:	mov	x20, xzr
   1879c:	mov	x0, x20
   187a0:	ldp	x20, x19, [sp, #16]
   187a4:	ldp	x29, x30, [sp], #32
   187a8:	ret
   187ac:	stp	x29, x30, [sp, #-32]!
   187b0:	stp	x20, x19, [sp, #16]
   187b4:	mov	x29, sp
   187b8:	ldr	x8, [x1, #8]
   187bc:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   187c0:	add	x9, x9, #0xe60
   187c4:	mov	x19, x1
   187c8:	cmp	x8, x9
   187cc:	b.eq	187e8 <PyInit__decimal@@Base+0x11d34>  // b.none
   187d0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   187d4:	mov	x20, x0
   187d8:	add	x1, x1, #0xe60
   187dc:	mov	x0, x8
   187e0:	bl	6900 <PyType_IsSubtype@plt>
   187e4:	cbz	w0, 18858 <PyInit__decimal@@Base+0x11da4>
   187e8:	ldr	x8, [x19]
   187ec:	add	x8, x8, #0x1
   187f0:	str	x8, [x19]
   187f4:	add	x0, x19, #0x18
   187f8:	bl	227f4 <PyInit__decimal@@Base+0x1bd40>
   187fc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   18800:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18804:	ldr	x8, [x8, #4024]
   18808:	ldr	x9, [x9, #3976]
   1880c:	cmp	w0, #0x0
   18810:	csel	x20, x9, x8, eq  // eq = none
   18814:	ldr	x8, [x20]
   18818:	add	x8, x8, #0x1
   1881c:	str	x8, [x20]
   18820:	ldr	x8, [x19]
   18824:	subs	x8, x8, #0x1
   18828:	str	x8, [x19]
   1882c:	b.eq	18840 <PyInit__decimal@@Base+0x11d8c>  // b.none
   18830:	mov	x0, x20
   18834:	ldp	x20, x19, [sp, #16]
   18838:	ldp	x29, x30, [sp], #32
   1883c:	ret
   18840:	mov	x0, x19
   18844:	bl	6510 <_Py_Dealloc@plt>
   18848:	mov	x0, x20
   1884c:	ldp	x20, x19, [sp, #16]
   18850:	ldp	x29, x30, [sp], #32
   18854:	ret
   18858:	ldr	x8, [x19, #8]
   1885c:	ldrb	w9, [x8, #171]
   18860:	tbnz	w9, #0, 18884 <PyInit__decimal@@Base+0x11dd0>
   18864:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18868:	ldr	x9, [x9, #3936]
   1886c:	ldr	x2, [x8, #24]
   18870:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18874:	add	x1, x1, #0xb93
   18878:	ldr	x0, [x9]
   1887c:	bl	6950 <PyErr_Format@plt>
   18880:	b	188a0 <PyInit__decimal@@Base+0x11dec>
   18884:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18888:	add	x0, x0, #0xe60
   1888c:	mov	x1, x19
   18890:	mov	x2, x20
   18894:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18898:	mov	x19, x0
   1889c:	cbnz	x0, 187f4 <PyInit__decimal@@Base+0x11d40>
   188a0:	mov	x20, xzr
   188a4:	mov	x0, x20
   188a8:	ldp	x20, x19, [sp, #16]
   188ac:	ldp	x29, x30, [sp], #32
   188b0:	ret
   188b4:	stp	x29, x30, [sp, #-32]!
   188b8:	stp	x20, x19, [sp, #16]
   188bc:	mov	x29, sp
   188c0:	ldr	x8, [x1, #8]
   188c4:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   188c8:	add	x9, x9, #0xe60
   188cc:	mov	x19, x1
   188d0:	cmp	x8, x9
   188d4:	b.eq	188f0 <PyInit__decimal@@Base+0x11e3c>  // b.none
   188d8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   188dc:	mov	x20, x0
   188e0:	add	x1, x1, #0xe60
   188e4:	mov	x0, x8
   188e8:	bl	6900 <PyType_IsSubtype@plt>
   188ec:	cbz	w0, 18960 <PyInit__decimal@@Base+0x11eac>
   188f0:	ldr	x8, [x19]
   188f4:	add	x8, x8, #0x1
   188f8:	str	x8, [x19]
   188fc:	add	x0, x19, #0x18
   18900:	bl	22800 <PyInit__decimal@@Base+0x1bd4c>
   18904:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   18908:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1890c:	ldr	x8, [x8, #4024]
   18910:	ldr	x9, [x9, #3976]
   18914:	cmp	w0, #0x0
   18918:	csel	x20, x9, x8, eq  // eq = none
   1891c:	ldr	x8, [x20]
   18920:	add	x8, x8, #0x1
   18924:	str	x8, [x20]
   18928:	ldr	x8, [x19]
   1892c:	subs	x8, x8, #0x1
   18930:	str	x8, [x19]
   18934:	b.eq	18948 <PyInit__decimal@@Base+0x11e94>  // b.none
   18938:	mov	x0, x20
   1893c:	ldp	x20, x19, [sp, #16]
   18940:	ldp	x29, x30, [sp], #32
   18944:	ret
   18948:	mov	x0, x19
   1894c:	bl	6510 <_Py_Dealloc@plt>
   18950:	mov	x0, x20
   18954:	ldp	x20, x19, [sp, #16]
   18958:	ldp	x29, x30, [sp], #32
   1895c:	ret
   18960:	ldr	x8, [x19, #8]
   18964:	ldrb	w9, [x8, #171]
   18968:	tbnz	w9, #0, 1898c <PyInit__decimal@@Base+0x11ed8>
   1896c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18970:	ldr	x9, [x9, #3936]
   18974:	ldr	x2, [x8, #24]
   18978:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1897c:	add	x1, x1, #0xb93
   18980:	ldr	x0, [x9]
   18984:	bl	6950 <PyErr_Format@plt>
   18988:	b	189a8 <PyInit__decimal@@Base+0x11ef4>
   1898c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18990:	add	x0, x0, #0xe60
   18994:	mov	x1, x19
   18998:	mov	x2, x20
   1899c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   189a0:	mov	x19, x0
   189a4:	cbnz	x0, 188fc <PyInit__decimal@@Base+0x11e48>
   189a8:	mov	x20, xzr
   189ac:	mov	x0, x20
   189b0:	ldp	x20, x19, [sp, #16]
   189b4:	ldp	x29, x30, [sp], #32
   189b8:	ret
   189bc:	stp	x29, x30, [sp, #-32]!
   189c0:	stp	x20, x19, [sp, #16]
   189c4:	mov	x29, sp
   189c8:	ldr	x8, [x1, #8]
   189cc:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   189d0:	add	x9, x9, #0xe60
   189d4:	mov	x19, x1
   189d8:	cmp	x8, x9
   189dc:	mov	x20, x0
   189e0:	b.eq	189f8 <PyInit__decimal@@Base+0x11f44>  // b.none
   189e4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   189e8:	add	x1, x1, #0xe60
   189ec:	mov	x0, x8
   189f0:	bl	6900 <PyType_IsSubtype@plt>
   189f4:	cbz	w0, 18a6c <PyInit__decimal@@Base+0x11fb8>
   189f8:	ldr	x8, [x19]
   189fc:	add	x8, x8, #0x1
   18a00:	str	x8, [x19]
   18a04:	add	x0, x19, #0x18
   18a08:	add	x1, x20, #0x10
   18a0c:	bl	228a8 <PyInit__decimal@@Base+0x1bdf4>
   18a10:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   18a14:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18a18:	ldr	x8, [x8, #4024]
   18a1c:	ldr	x9, [x9, #3976]
   18a20:	cmp	w0, #0x0
   18a24:	csel	x20, x9, x8, eq  // eq = none
   18a28:	ldr	x8, [x20]
   18a2c:	add	x8, x8, #0x1
   18a30:	str	x8, [x20]
   18a34:	ldr	x8, [x19]
   18a38:	subs	x8, x8, #0x1
   18a3c:	str	x8, [x19]
   18a40:	b.eq	18a54 <PyInit__decimal@@Base+0x11fa0>  // b.none
   18a44:	mov	x0, x20
   18a48:	ldp	x20, x19, [sp, #16]
   18a4c:	ldp	x29, x30, [sp], #32
   18a50:	ret
   18a54:	mov	x0, x19
   18a58:	bl	6510 <_Py_Dealloc@plt>
   18a5c:	mov	x0, x20
   18a60:	ldp	x20, x19, [sp, #16]
   18a64:	ldp	x29, x30, [sp], #32
   18a68:	ret
   18a6c:	ldr	x8, [x19, #8]
   18a70:	ldrb	w9, [x8, #171]
   18a74:	tbnz	w9, #0, 18a98 <PyInit__decimal@@Base+0x11fe4>
   18a78:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18a7c:	ldr	x9, [x9, #3936]
   18a80:	ldr	x2, [x8, #24]
   18a84:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18a88:	add	x1, x1, #0xb93
   18a8c:	ldr	x0, [x9]
   18a90:	bl	6950 <PyErr_Format@plt>
   18a94:	b	18ab4 <PyInit__decimal@@Base+0x12000>
   18a98:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18a9c:	add	x0, x0, #0xe60
   18aa0:	mov	x1, x19
   18aa4:	mov	x2, x20
   18aa8:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18aac:	mov	x19, x0
   18ab0:	cbnz	x0, 18a04 <PyInit__decimal@@Base+0x11f50>
   18ab4:	mov	x20, xzr
   18ab8:	mov	x0, x20
   18abc:	ldp	x20, x19, [sp, #16]
   18ac0:	ldp	x29, x30, [sp], #32
   18ac4:	ret
   18ac8:	stp	x29, x30, [sp, #-32]!
   18acc:	stp	x20, x19, [sp, #16]
   18ad0:	mov	x29, sp
   18ad4:	ldr	x8, [x1, #8]
   18ad8:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   18adc:	add	x9, x9, #0xe60
   18ae0:	mov	x19, x1
   18ae4:	cmp	x8, x9
   18ae8:	b.eq	18b04 <PyInit__decimal@@Base+0x12050>  // b.none
   18aec:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18af0:	mov	x20, x0
   18af4:	add	x1, x1, #0xe60
   18af8:	mov	x0, x8
   18afc:	bl	6900 <PyType_IsSubtype@plt>
   18b00:	cbz	w0, 18b74 <PyInit__decimal@@Base+0x120c0>
   18b04:	ldr	x8, [x19]
   18b08:	add	x8, x8, #0x1
   18b0c:	str	x8, [x19]
   18b10:	add	x0, x19, #0x18
   18b14:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   18b18:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   18b1c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18b20:	ldr	x8, [x8, #4024]
   18b24:	ldr	x9, [x9, #3976]
   18b28:	cmp	w0, #0x0
   18b2c:	csel	x20, x9, x8, eq  // eq = none
   18b30:	ldr	x8, [x20]
   18b34:	add	x8, x8, #0x1
   18b38:	str	x8, [x20]
   18b3c:	ldr	x8, [x19]
   18b40:	subs	x8, x8, #0x1
   18b44:	str	x8, [x19]
   18b48:	b.eq	18b5c <PyInit__decimal@@Base+0x120a8>  // b.none
   18b4c:	mov	x0, x20
   18b50:	ldp	x20, x19, [sp, #16]
   18b54:	ldp	x29, x30, [sp], #32
   18b58:	ret
   18b5c:	mov	x0, x19
   18b60:	bl	6510 <_Py_Dealloc@plt>
   18b64:	mov	x0, x20
   18b68:	ldp	x20, x19, [sp, #16]
   18b6c:	ldp	x29, x30, [sp], #32
   18b70:	ret
   18b74:	ldr	x8, [x19, #8]
   18b78:	ldrb	w9, [x8, #171]
   18b7c:	tbnz	w9, #0, 18ba0 <PyInit__decimal@@Base+0x120ec>
   18b80:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18b84:	ldr	x9, [x9, #3936]
   18b88:	ldr	x2, [x8, #24]
   18b8c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18b90:	add	x1, x1, #0xb93
   18b94:	ldr	x0, [x9]
   18b98:	bl	6950 <PyErr_Format@plt>
   18b9c:	b	18bbc <PyInit__decimal@@Base+0x12108>
   18ba0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18ba4:	add	x0, x0, #0xe60
   18ba8:	mov	x1, x19
   18bac:	mov	x2, x20
   18bb0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18bb4:	mov	x19, x0
   18bb8:	cbnz	x0, 18b10 <PyInit__decimal@@Base+0x1205c>
   18bbc:	mov	x20, xzr
   18bc0:	mov	x0, x20
   18bc4:	ldp	x20, x19, [sp, #16]
   18bc8:	ldp	x29, x30, [sp], #32
   18bcc:	ret
   18bd0:	stp	x29, x30, [sp, #-32]!
   18bd4:	stp	x20, x19, [sp, #16]
   18bd8:	mov	x29, sp
   18bdc:	ldr	x8, [x1, #8]
   18be0:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   18be4:	add	x9, x9, #0xe60
   18be8:	mov	x19, x1
   18bec:	cmp	x8, x9
   18bf0:	mov	x20, x0
   18bf4:	b.eq	18c0c <PyInit__decimal@@Base+0x12158>  // b.none
   18bf8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18bfc:	add	x1, x1, #0xe60
   18c00:	mov	x0, x8
   18c04:	bl	6900 <PyType_IsSubtype@plt>
   18c08:	cbz	w0, 18c60 <PyInit__decimal@@Base+0x121ac>
   18c0c:	ldr	x8, [x19]
   18c10:	add	x8, x8, #0x1
   18c14:	str	x8, [x19]
   18c18:	mov	x0, x19
   18c1c:	mov	x1, x20
   18c20:	bl	1b45c <PyInit__decimal@@Base+0x149a8>
   18c24:	ldr	x8, [x19]
   18c28:	mov	x20, x0
   18c2c:	subs	x8, x8, #0x1
   18c30:	str	x8, [x19]
   18c34:	b.eq	18c48 <PyInit__decimal@@Base+0x12194>  // b.none
   18c38:	mov	x0, x20
   18c3c:	ldp	x20, x19, [sp, #16]
   18c40:	ldp	x29, x30, [sp], #32
   18c44:	ret
   18c48:	mov	x0, x19
   18c4c:	bl	6510 <_Py_Dealloc@plt>
   18c50:	mov	x0, x20
   18c54:	ldp	x20, x19, [sp, #16]
   18c58:	ldp	x29, x30, [sp], #32
   18c5c:	ret
   18c60:	ldr	x8, [x19, #8]
   18c64:	ldrb	w9, [x8, #171]
   18c68:	tbnz	w9, #0, 18c8c <PyInit__decimal@@Base+0x121d8>
   18c6c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18c70:	ldr	x9, [x9, #3936]
   18c74:	ldr	x2, [x8, #24]
   18c78:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18c7c:	add	x1, x1, #0xb93
   18c80:	ldr	x0, [x9]
   18c84:	bl	6950 <PyErr_Format@plt>
   18c88:	b	18ca8 <PyInit__decimal@@Base+0x121f4>
   18c8c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18c90:	add	x0, x0, #0xe60
   18c94:	mov	x1, x19
   18c98:	mov	x2, x20
   18c9c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18ca0:	mov	x19, x0
   18ca4:	cbnz	x0, 18c18 <PyInit__decimal@@Base+0x12164>
   18ca8:	mov	x20, xzr
   18cac:	mov	x0, x20
   18cb0:	ldp	x20, x19, [sp, #16]
   18cb4:	ldp	x29, x30, [sp], #32
   18cb8:	ret
   18cbc:	stp	x29, x30, [sp, #-32]!
   18cc0:	str	x19, [sp, #16]
   18cc4:	mov	x29, sp
   18cc8:	ldr	x0, [x1, #8]
   18ccc:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   18cd0:	add	x8, x8, #0xe60
   18cd4:	mov	x19, x1
   18cd8:	cmp	x0, x8
   18cdc:	b.eq	18cf0 <PyInit__decimal@@Base+0x1223c>  // b.none
   18ce0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18ce4:	add	x1, x1, #0xe60
   18ce8:	bl	6900 <PyType_IsSubtype@plt>
   18cec:	cbz	w0, 18d0c <PyInit__decimal@@Base+0x12258>
   18cf0:	ldr	x8, [x19]
   18cf4:	add	x8, x8, #0x1
   18cf8:	str	x8, [x19]
   18cfc:	mov	x0, x19
   18d00:	ldr	x19, [sp, #16]
   18d04:	ldp	x29, x30, [sp], #32
   18d08:	ret
   18d0c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   18d10:	ldr	x8, [x8, #3936]
   18d14:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   18d18:	add	x1, x1, #0x554
   18d1c:	ldr	x0, [x8]
   18d20:	bl	6590 <PyErr_SetString@plt>
   18d24:	mov	x19, xzr
   18d28:	mov	x0, x19
   18d2c:	ldr	x19, [sp, #16]
   18d30:	ldp	x29, x30, [sp], #32
   18d34:	ret
   18d38:	stp	x29, x30, [sp, #-48]!
   18d3c:	str	x21, [sp, #16]
   18d40:	stp	x20, x19, [sp, #32]
   18d44:	mov	x29, sp
   18d48:	str	wzr, [x29, #28]
   18d4c:	ldr	x8, [x1, #8]
   18d50:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   18d54:	add	x9, x9, #0xe60
   18d58:	mov	x19, x1
   18d5c:	cmp	x8, x9
   18d60:	mov	x20, x0
   18d64:	b.eq	18d7c <PyInit__decimal@@Base+0x122c8>  // b.none
   18d68:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18d6c:	add	x1, x1, #0xe60
   18d70:	mov	x0, x8
   18d74:	bl	6900 <PyType_IsSubtype@plt>
   18d78:	cbz	w0, 18e28 <PyInit__decimal@@Base+0x12374>
   18d7c:	ldr	x8, [x19]
   18d80:	add	x8, x8, #0x1
   18d84:	str	x8, [x19]
   18d88:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18d8c:	add	x0, x0, #0xe60
   18d90:	bl	6890 <_PyObject_New@plt>
   18d94:	cbz	x0, 18e0c <PyInit__decimal@@Base+0x12358>
   18d98:	mov	w8, #0x30                  	// #48
   18d9c:	mov	x21, x0
   18da0:	strb	w8, [x0, #24]!
   18da4:	mov	x9, #0xffffffffffffffff    	// #-1
   18da8:	mov	w10, #0x4                   	// #4
   18dac:	add	x8, x0, #0x30
   18db0:	add	x1, x19, #0x18
   18db4:	add	x2, x29, #0x1c
   18db8:	stur	x9, [x0, #-8]
   18dbc:	stp	xzr, xzr, [x0, #8]
   18dc0:	stp	xzr, x10, [x0, #24]
   18dc4:	str	x8, [x0, #40]
   18dc8:	bl	2535c <PyInit__decimal@@Base+0x1e8a8>
   18dcc:	ldr	x8, [x19]
   18dd0:	subs	x8, x8, #0x1
   18dd4:	str	x8, [x19]
   18dd8:	b.ne	18de4 <PyInit__decimal@@Base+0x12330>  // b.any
   18ddc:	mov	x0, x19
   18de0:	bl	6510 <_Py_Dealloc@plt>
   18de4:	ldr	w1, [x29, #28]
   18de8:	mov	x0, x20
   18dec:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   18df0:	cbz	w0, 18e74 <PyInit__decimal@@Base+0x123c0>
   18df4:	ldr	x8, [x21]
   18df8:	subs	x8, x8, #0x1
   18dfc:	str	x8, [x21]
   18e00:	b.ne	18e70 <PyInit__decimal@@Base+0x123bc>  // b.any
   18e04:	mov	x0, x21
   18e08:	b	18e20 <PyInit__decimal@@Base+0x1236c>
   18e0c:	ldr	x8, [x19]
   18e10:	subs	x8, x8, #0x1
   18e14:	str	x8, [x19]
   18e18:	b.ne	18e70 <PyInit__decimal@@Base+0x123bc>  // b.any
   18e1c:	mov	x0, x19
   18e20:	bl	6510 <_Py_Dealloc@plt>
   18e24:	b	18e70 <PyInit__decimal@@Base+0x123bc>
   18e28:	ldr	x8, [x19, #8]
   18e2c:	ldrb	w9, [x8, #171]
   18e30:	tbnz	w9, #0, 18e54 <PyInit__decimal@@Base+0x123a0>
   18e34:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18e38:	ldr	x9, [x9, #3936]
   18e3c:	ldr	x2, [x8, #24]
   18e40:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18e44:	add	x1, x1, #0xb93
   18e48:	ldr	x0, [x9]
   18e4c:	bl	6950 <PyErr_Format@plt>
   18e50:	b	18e70 <PyInit__decimal@@Base+0x123bc>
   18e54:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18e58:	add	x0, x0, #0xe60
   18e5c:	mov	x1, x19
   18e60:	mov	x2, x20
   18e64:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18e68:	mov	x19, x0
   18e6c:	cbnz	x0, 18d88 <PyInit__decimal@@Base+0x122d4>
   18e70:	mov	x21, xzr
   18e74:	mov	x0, x21
   18e78:	ldp	x20, x19, [sp, #32]
   18e7c:	ldr	x21, [sp, #16]
   18e80:	ldp	x29, x30, [sp], #48
   18e84:	ret
   18e88:	stp	x29, x30, [sp, #-32]!
   18e8c:	stp	x20, x19, [sp, #16]
   18e90:	mov	x29, sp
   18e94:	ldr	x8, [x1, #8]
   18e98:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   18e9c:	add	x9, x9, #0xe60
   18ea0:	mov	x19, x1
   18ea4:	cmp	x8, x9
   18ea8:	b.eq	18ec4 <PyInit__decimal@@Base+0x12410>  // b.none
   18eac:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18eb0:	mov	x20, x0
   18eb4:	add	x1, x1, #0xe60
   18eb8:	mov	x0, x8
   18ebc:	bl	6900 <PyType_IsSubtype@plt>
   18ec0:	cbz	w0, 18ee0 <PyInit__decimal@@Base+0x1242c>
   18ec4:	ldr	x8, [x19]
   18ec8:	add	x8, x8, #0x1
   18ecc:	str	x8, [x19]
   18ed0:	mov	x0, x19
   18ed4:	ldp	x20, x19, [sp, #16]
   18ed8:	ldp	x29, x30, [sp], #32
   18edc:	ret
   18ee0:	ldr	x8, [x19, #8]
   18ee4:	ldrb	w9, [x8, #171]
   18ee8:	tbnz	w9, #0, 18f0c <PyInit__decimal@@Base+0x12458>
   18eec:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   18ef0:	ldr	x9, [x9, #3936]
   18ef4:	ldr	x2, [x8, #24]
   18ef8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   18efc:	add	x1, x1, #0xb93
   18f00:	ldr	x0, [x9]
   18f04:	bl	6950 <PyErr_Format@plt>
   18f08:	b	18f28 <PyInit__decimal@@Base+0x12474>
   18f0c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18f10:	add	x0, x0, #0xe60
   18f14:	mov	x1, x19
   18f18:	mov	x2, x20
   18f1c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   18f20:	mov	x19, x0
   18f24:	cbnz	x0, 18ed0 <PyInit__decimal@@Base+0x1241c>
   18f28:	mov	x19, xzr
   18f2c:	mov	x0, x19
   18f30:	ldp	x20, x19, [sp, #16]
   18f34:	ldp	x29, x30, [sp], #32
   18f38:	ret
   18f3c:	stp	x29, x30, [sp, #-48]!
   18f40:	str	x21, [sp, #16]
   18f44:	stp	x20, x19, [sp, #32]
   18f48:	mov	x29, sp
   18f4c:	str	wzr, [x29, #28]
   18f50:	ldr	x8, [x1, #8]
   18f54:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   18f58:	add	x9, x9, #0xe60
   18f5c:	mov	x19, x1
   18f60:	cmp	x8, x9
   18f64:	mov	x20, x0
   18f68:	b.eq	18f80 <PyInit__decimal@@Base+0x124cc>  // b.none
   18f6c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   18f70:	add	x1, x1, #0xe60
   18f74:	mov	x0, x8
   18f78:	bl	6900 <PyType_IsSubtype@plt>
   18f7c:	cbz	w0, 1902c <PyInit__decimal@@Base+0x12578>
   18f80:	ldr	x8, [x19]
   18f84:	add	x8, x8, #0x1
   18f88:	str	x8, [x19]
   18f8c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   18f90:	add	x0, x0, #0xe60
   18f94:	bl	6890 <_PyObject_New@plt>
   18f98:	cbz	x0, 19010 <PyInit__decimal@@Base+0x1255c>
   18f9c:	mov	w8, #0x30                  	// #48
   18fa0:	mov	x21, x0
   18fa4:	strb	w8, [x0, #24]!
   18fa8:	mov	x9, #0xffffffffffffffff    	// #-1
   18fac:	mov	w10, #0x4                   	// #4
   18fb0:	add	x8, x0, #0x30
   18fb4:	add	x1, x19, #0x18
   18fb8:	add	x2, x29, #0x1c
   18fbc:	stur	x9, [x0, #-8]
   18fc0:	stp	xzr, xzr, [x0, #8]
   18fc4:	stp	xzr, x10, [x0, #24]
   18fc8:	str	x8, [x0, #40]
   18fcc:	bl	2541c <PyInit__decimal@@Base+0x1e968>
   18fd0:	ldr	x8, [x19]
   18fd4:	subs	x8, x8, #0x1
   18fd8:	str	x8, [x19]
   18fdc:	b.ne	18fe8 <PyInit__decimal@@Base+0x12534>  // b.any
   18fe0:	mov	x0, x19
   18fe4:	bl	6510 <_Py_Dealloc@plt>
   18fe8:	ldr	w1, [x29, #28]
   18fec:	mov	x0, x20
   18ff0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   18ff4:	cbz	w0, 19078 <PyInit__decimal@@Base+0x125c4>
   18ff8:	ldr	x8, [x21]
   18ffc:	subs	x8, x8, #0x1
   19000:	str	x8, [x21]
   19004:	b.ne	19074 <PyInit__decimal@@Base+0x125c0>  // b.any
   19008:	mov	x0, x21
   1900c:	b	19024 <PyInit__decimal@@Base+0x12570>
   19010:	ldr	x8, [x19]
   19014:	subs	x8, x8, #0x1
   19018:	str	x8, [x19]
   1901c:	b.ne	19074 <PyInit__decimal@@Base+0x125c0>  // b.any
   19020:	mov	x0, x19
   19024:	bl	6510 <_Py_Dealloc@plt>
   19028:	b	19074 <PyInit__decimal@@Base+0x125c0>
   1902c:	ldr	x8, [x19, #8]
   19030:	ldrb	w9, [x8, #171]
   19034:	tbnz	w9, #0, 19058 <PyInit__decimal@@Base+0x125a4>
   19038:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1903c:	ldr	x9, [x9, #3936]
   19040:	ldr	x2, [x8, #24]
   19044:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19048:	add	x1, x1, #0xb93
   1904c:	ldr	x0, [x9]
   19050:	bl	6950 <PyErr_Format@plt>
   19054:	b	19074 <PyInit__decimal@@Base+0x125c0>
   19058:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1905c:	add	x0, x0, #0xe60
   19060:	mov	x1, x19
   19064:	mov	x2, x20
   19068:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1906c:	mov	x19, x0
   19070:	cbnz	x0, 18f8c <PyInit__decimal@@Base+0x124d8>
   19074:	mov	x21, xzr
   19078:	mov	x0, x21
   1907c:	ldp	x20, x19, [sp, #32]
   19080:	ldr	x21, [sp, #16]
   19084:	ldp	x29, x30, [sp], #48
   19088:	ret
   1908c:	stp	x29, x30, [sp, #-48]!
   19090:	str	x21, [sp, #16]
   19094:	stp	x20, x19, [sp, #32]
   19098:	mov	x29, sp
   1909c:	str	wzr, [x29, #28]
   190a0:	ldr	x8, [x1, #8]
   190a4:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   190a8:	add	x9, x9, #0xe60
   190ac:	mov	x19, x1
   190b0:	cmp	x8, x9
   190b4:	mov	x20, x0
   190b8:	b.eq	190d0 <PyInit__decimal@@Base+0x1261c>  // b.none
   190bc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   190c0:	add	x1, x1, #0xe60
   190c4:	mov	x0, x8
   190c8:	bl	6900 <PyType_IsSubtype@plt>
   190cc:	cbz	w0, 19180 <PyInit__decimal@@Base+0x126cc>
   190d0:	ldr	x8, [x19]
   190d4:	add	x8, x8, #0x1
   190d8:	str	x8, [x19]
   190dc:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   190e0:	add	x0, x0, #0xe60
   190e4:	bl	6890 <_PyObject_New@plt>
   190e8:	cbz	x0, 19164 <PyInit__decimal@@Base+0x126b0>
   190ec:	mov	w8, #0x30                  	// #48
   190f0:	mov	x21, x0
   190f4:	strb	w8, [x0, #24]!
   190f8:	mov	x9, #0xffffffffffffffff    	// #-1
   190fc:	mov	w10, #0x4                   	// #4
   19100:	add	x1, x19, #0x18
   19104:	add	x8, x0, #0x30
   19108:	add	x2, x20, #0x10
   1910c:	add	x3, x29, #0x1c
   19110:	stur	x9, [x0, #-8]
   19114:	stp	xzr, xzr, [x0, #8]
   19118:	stp	xzr, x10, [x0, #24]
   1911c:	str	x8, [x0, #40]
   19120:	bl	27c78 <PyInit__decimal@@Base+0x211c4>
   19124:	ldr	x8, [x19]
   19128:	subs	x8, x8, #0x1
   1912c:	str	x8, [x19]
   19130:	b.ne	1913c <PyInit__decimal@@Base+0x12688>  // b.any
   19134:	mov	x0, x19
   19138:	bl	6510 <_Py_Dealloc@plt>
   1913c:	ldr	w1, [x29, #28]
   19140:	mov	x0, x20
   19144:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   19148:	cbz	w0, 191cc <PyInit__decimal@@Base+0x12718>
   1914c:	ldr	x8, [x21]
   19150:	subs	x8, x8, #0x1
   19154:	str	x8, [x21]
   19158:	b.ne	191c8 <PyInit__decimal@@Base+0x12714>  // b.any
   1915c:	mov	x0, x21
   19160:	b	19178 <PyInit__decimal@@Base+0x126c4>
   19164:	ldr	x8, [x19]
   19168:	subs	x8, x8, #0x1
   1916c:	str	x8, [x19]
   19170:	b.ne	191c8 <PyInit__decimal@@Base+0x12714>  // b.any
   19174:	mov	x0, x19
   19178:	bl	6510 <_Py_Dealloc@plt>
   1917c:	b	191c8 <PyInit__decimal@@Base+0x12714>
   19180:	ldr	x8, [x19, #8]
   19184:	ldrb	w9, [x8, #171]
   19188:	tbnz	w9, #0, 191ac <PyInit__decimal@@Base+0x126f8>
   1918c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19190:	ldr	x9, [x9, #3936]
   19194:	ldr	x2, [x8, #24]
   19198:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1919c:	add	x1, x1, #0xb93
   191a0:	ldr	x0, [x9]
   191a4:	bl	6950 <PyErr_Format@plt>
   191a8:	b	191c8 <PyInit__decimal@@Base+0x12714>
   191ac:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   191b0:	add	x0, x0, #0xe60
   191b4:	mov	x1, x19
   191b8:	mov	x2, x20
   191bc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   191c0:	mov	x19, x0
   191c4:	cbnz	x0, 190dc <PyInit__decimal@@Base+0x12628>
   191c8:	mov	x21, xzr
   191cc:	mov	x0, x21
   191d0:	ldp	x20, x19, [sp, #32]
   191d4:	ldr	x21, [sp, #16]
   191d8:	ldp	x29, x30, [sp], #48
   191dc:	ret
   191e0:	stp	x29, x30, [sp, #-48]!
   191e4:	str	x21, [sp, #16]
   191e8:	stp	x20, x19, [sp, #32]
   191ec:	mov	x29, sp
   191f0:	str	wzr, [x29, #28]
   191f4:	ldr	x8, [x1, #8]
   191f8:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   191fc:	add	x9, x9, #0xe60
   19200:	mov	x19, x1
   19204:	cmp	x8, x9
   19208:	mov	x20, x0
   1920c:	b.eq	19224 <PyInit__decimal@@Base+0x12770>  // b.none
   19210:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19214:	add	x1, x1, #0xe60
   19218:	mov	x0, x8
   1921c:	bl	6900 <PyType_IsSubtype@plt>
   19220:	cbz	w0, 192d4 <PyInit__decimal@@Base+0x12820>
   19224:	ldr	x8, [x19]
   19228:	add	x8, x8, #0x1
   1922c:	str	x8, [x19]
   19230:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19234:	add	x0, x0, #0xe60
   19238:	bl	6890 <_PyObject_New@plt>
   1923c:	cbz	x0, 192b8 <PyInit__decimal@@Base+0x12804>
   19240:	mov	w8, #0x30                  	// #48
   19244:	mov	x21, x0
   19248:	strb	w8, [x0, #24]!
   1924c:	mov	x9, #0xffffffffffffffff    	// #-1
   19250:	mov	w10, #0x4                   	// #4
   19254:	add	x1, x19, #0x18
   19258:	add	x8, x0, #0x30
   1925c:	add	x2, x20, #0x10
   19260:	add	x3, x29, #0x1c
   19264:	stur	x9, [x0, #-8]
   19268:	stp	xzr, xzr, [x0, #8]
   1926c:	stp	xzr, x10, [x0, #24]
   19270:	str	x8, [x0, #40]
   19274:	bl	27890 <PyInit__decimal@@Base+0x20ddc>
   19278:	ldr	x8, [x19]
   1927c:	subs	x8, x8, #0x1
   19280:	str	x8, [x19]
   19284:	b.ne	19290 <PyInit__decimal@@Base+0x127dc>  // b.any
   19288:	mov	x0, x19
   1928c:	bl	6510 <_Py_Dealloc@plt>
   19290:	ldr	w1, [x29, #28]
   19294:	mov	x0, x20
   19298:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1929c:	cbz	w0, 19320 <PyInit__decimal@@Base+0x1286c>
   192a0:	ldr	x8, [x21]
   192a4:	subs	x8, x8, #0x1
   192a8:	str	x8, [x21]
   192ac:	b.ne	1931c <PyInit__decimal@@Base+0x12868>  // b.any
   192b0:	mov	x0, x21
   192b4:	b	192cc <PyInit__decimal@@Base+0x12818>
   192b8:	ldr	x8, [x19]
   192bc:	subs	x8, x8, #0x1
   192c0:	str	x8, [x19]
   192c4:	b.ne	1931c <PyInit__decimal@@Base+0x12868>  // b.any
   192c8:	mov	x0, x19
   192cc:	bl	6510 <_Py_Dealloc@plt>
   192d0:	b	1931c <PyInit__decimal@@Base+0x12868>
   192d4:	ldr	x8, [x19, #8]
   192d8:	ldrb	w9, [x8, #171]
   192dc:	tbnz	w9, #0, 19300 <PyInit__decimal@@Base+0x1284c>
   192e0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   192e4:	ldr	x9, [x9, #3936]
   192e8:	ldr	x2, [x8, #24]
   192ec:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   192f0:	add	x1, x1, #0xb93
   192f4:	ldr	x0, [x9]
   192f8:	bl	6950 <PyErr_Format@plt>
   192fc:	b	1931c <PyInit__decimal@@Base+0x12868>
   19300:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19304:	add	x0, x0, #0xe60
   19308:	mov	x1, x19
   1930c:	mov	x2, x20
   19310:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19314:	mov	x19, x0
   19318:	cbnz	x0, 19230 <PyInit__decimal@@Base+0x1277c>
   1931c:	mov	x21, xzr
   19320:	mov	x0, x21
   19324:	ldp	x20, x19, [sp, #32]
   19328:	ldr	x21, [sp, #16]
   1932c:	ldp	x29, x30, [sp], #48
   19330:	ret
   19334:	stp	x29, x30, [sp, #-32]!
   19338:	stp	x20, x19, [sp, #16]
   1933c:	mov	x29, sp
   19340:	ldr	x8, [x1, #8]
   19344:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   19348:	add	x9, x9, #0xe60
   1934c:	mov	x19, x1
   19350:	cmp	x8, x9
   19354:	mov	x20, x0
   19358:	b.eq	19370 <PyInit__decimal@@Base+0x128bc>  // b.none
   1935c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19360:	add	x1, x1, #0xe60
   19364:	mov	x0, x8
   19368:	bl	6900 <PyType_IsSubtype@plt>
   1936c:	cbz	w0, 193c4 <PyInit__decimal@@Base+0x12910>
   19370:	ldr	x8, [x19]
   19374:	add	x8, x8, #0x1
   19378:	str	x8, [x19]
   1937c:	add	x0, x19, #0x18
   19380:	add	x1, x20, #0x10
   19384:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   19388:	ldr	x8, [x19]
   1938c:	mov	x20, x0
   19390:	subs	x8, x8, #0x1
   19394:	str	x8, [x19]
   19398:	b.eq	193ac <PyInit__decimal@@Base+0x128f8>  // b.none
   1939c:	mov	x0, x20
   193a0:	ldp	x20, x19, [sp, #16]
   193a4:	ldp	x29, x30, [sp], #32
   193a8:	b	68a0 <PyUnicode_FromString@plt>
   193ac:	mov	x0, x19
   193b0:	bl	6510 <_Py_Dealloc@plt>
   193b4:	mov	x0, x20
   193b8:	ldp	x20, x19, [sp, #16]
   193bc:	ldp	x29, x30, [sp], #32
   193c0:	b	68a0 <PyUnicode_FromString@plt>
   193c4:	ldr	x8, [x19, #8]
   193c8:	ldrb	w9, [x8, #171]
   193cc:	tbnz	w9, #0, 193f0 <PyInit__decimal@@Base+0x1293c>
   193d0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   193d4:	ldr	x9, [x9, #3936]
   193d8:	ldr	x2, [x8, #24]
   193dc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   193e0:	add	x1, x1, #0xb93
   193e4:	ldr	x0, [x9]
   193e8:	bl	6950 <PyErr_Format@plt>
   193ec:	b	1940c <PyInit__decimal@@Base+0x12958>
   193f0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   193f4:	add	x0, x0, #0xe60
   193f8:	mov	x1, x19
   193fc:	mov	x2, x20
   19400:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19404:	mov	x19, x0
   19408:	cbnz	x0, 1937c <PyInit__decimal@@Base+0x128c8>
   1940c:	ldp	x20, x19, [sp, #16]
   19410:	mov	x0, xzr
   19414:	ldp	x29, x30, [sp], #32
   19418:	ret
   1941c:	stp	x29, x30, [sp, #-48]!
   19420:	str	x21, [sp, #16]
   19424:	stp	x20, x19, [sp, #32]
   19428:	mov	x29, sp
   1942c:	ldr	x8, [x1, #8]
   19430:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   19434:	add	x9, x9, #0xe60
   19438:	mov	x19, x1
   1943c:	cmp	x8, x9
   19440:	mov	x20, x0
   19444:	b.eq	1945c <PyInit__decimal@@Base+0x129a8>  // b.none
   19448:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1944c:	add	x1, x1, #0xe60
   19450:	mov	x0, x8
   19454:	bl	6900 <PyType_IsSubtype@plt>
   19458:	cbz	w0, 194d0 <PyInit__decimal@@Base+0x12a1c>
   1945c:	ldr	x8, [x19]
   19460:	add	x8, x8, #0x1
   19464:	str	x8, [x19]
   19468:	ldr	w2, [x20, #80]
   1946c:	add	x1, x19, #0x18
   19470:	add	x0, x29, #0x18
   19474:	bl	1fe20 <PyInit__decimal@@Base+0x1936c>
   19478:	ldr	x8, [x19]
   1947c:	mov	x20, x0
   19480:	subs	x8, x8, #0x1
   19484:	str	x8, [x19]
   19488:	b.eq	194b8 <PyInit__decimal@@Base+0x12a04>  // b.none
   1948c:	tbnz	x20, #63, 194c4 <PyInit__decimal@@Base+0x12a10>
   19490:	ldr	x21, [x29, #24]
   19494:	mov	w1, #0x7f                  	// #127
   19498:	mov	x0, x20
   1949c:	bl	6990 <PyUnicode_New@plt>
   194a0:	mov	x19, x0
   194a4:	cbz	x0, 1951c <PyInit__decimal@@Base+0x12a68>
   194a8:	ldr	w8, [x19, #32]
   194ac:	tbnz	w8, #5, 19500 <PyInit__decimal@@Base+0x12a4c>
   194b0:	ldr	x0, [x19, #72]
   194b4:	b	19510 <PyInit__decimal@@Base+0x12a5c>
   194b8:	mov	x0, x19
   194bc:	bl	6510 <_Py_Dealloc@plt>
   194c0:	tbz	x20, #63, 19490 <PyInit__decimal@@Base+0x129dc>
   194c4:	bl	6520 <PyErr_NoMemory@plt>
   194c8:	mov	x19, xzr
   194cc:	b	1952c <PyInit__decimal@@Base+0x12a78>
   194d0:	ldr	x8, [x19, #8]
   194d4:	ldrb	w9, [x8, #171]
   194d8:	tbnz	w9, #0, 19540 <PyInit__decimal@@Base+0x12a8c>
   194dc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   194e0:	ldr	x9, [x9, #3936]
   194e4:	ldr	x2, [x8, #24]
   194e8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   194ec:	add	x1, x1, #0xb93
   194f0:	ldr	x0, [x9]
   194f4:	bl	6950 <PyErr_Format@plt>
   194f8:	mov	x19, xzr
   194fc:	b	1952c <PyInit__decimal@@Base+0x12a78>
   19500:	add	x9, x19, #0x30
   19504:	add	x10, x19, #0x48
   19508:	tst	w8, #0x40
   1950c:	csel	x0, x10, x9, eq  // eq = none
   19510:	mov	x1, x21
   19514:	mov	x2, x20
   19518:	bl	63c0 <memcpy@plt>
   1951c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   19520:	ldr	x8, [x8, #1376]
   19524:	ldr	x0, [x29, #24]
   19528:	blr	x8
   1952c:	mov	x0, x19
   19530:	ldp	x20, x19, [sp, #32]
   19534:	ldr	x21, [sp, #16]
   19538:	ldp	x29, x30, [sp], #48
   1953c:	ret
   19540:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19544:	add	x0, x0, #0xe60
   19548:	mov	x1, x19
   1954c:	mov	x2, x20
   19550:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19554:	mov	x19, x0
   19558:	cbnz	x0, 19468 <PyInit__decimal@@Base+0x129b4>
   1955c:	b	1952c <PyInit__decimal@@Base+0x12a78>
   19560:	stp	x29, x30, [sp, #-48]!
   19564:	str	x21, [sp, #16]
   19568:	stp	x20, x19, [sp, #32]
   1956c:	mov	x29, sp
   19570:	ldr	x8, [x1, #8]
   19574:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   19578:	add	x9, x9, #0xe60
   1957c:	mov	x19, x1
   19580:	cmp	x8, x9
   19584:	mov	x20, x0
   19588:	b.eq	195a0 <PyInit__decimal@@Base+0x12aec>  // b.none
   1958c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19590:	add	x1, x1, #0xe60
   19594:	mov	x0, x8
   19598:	bl	6900 <PyType_IsSubtype@plt>
   1959c:	cbz	w0, 19614 <PyInit__decimal@@Base+0x12b60>
   195a0:	ldr	x8, [x19]
   195a4:	add	x8, x8, #0x1
   195a8:	str	x8, [x19]
   195ac:	ldr	w2, [x20, #80]
   195b0:	add	x1, x19, #0x18
   195b4:	add	x0, x29, #0x18
   195b8:	bl	1fe34 <PyInit__decimal@@Base+0x19380>
   195bc:	ldr	x8, [x19]
   195c0:	mov	x20, x0
   195c4:	subs	x8, x8, #0x1
   195c8:	str	x8, [x19]
   195cc:	b.eq	195fc <PyInit__decimal@@Base+0x12b48>  // b.none
   195d0:	tbnz	x20, #63, 19608 <PyInit__decimal@@Base+0x12b54>
   195d4:	ldr	x21, [x29, #24]
   195d8:	mov	w1, #0x7f                  	// #127
   195dc:	mov	x0, x20
   195e0:	bl	6990 <PyUnicode_New@plt>
   195e4:	mov	x19, x0
   195e8:	cbz	x0, 19660 <PyInit__decimal@@Base+0x12bac>
   195ec:	ldr	w8, [x19, #32]
   195f0:	tbnz	w8, #5, 19644 <PyInit__decimal@@Base+0x12b90>
   195f4:	ldr	x0, [x19, #72]
   195f8:	b	19654 <PyInit__decimal@@Base+0x12ba0>
   195fc:	mov	x0, x19
   19600:	bl	6510 <_Py_Dealloc@plt>
   19604:	tbz	x20, #63, 195d4 <PyInit__decimal@@Base+0x12b20>
   19608:	bl	6520 <PyErr_NoMemory@plt>
   1960c:	mov	x19, xzr
   19610:	b	19670 <PyInit__decimal@@Base+0x12bbc>
   19614:	ldr	x8, [x19, #8]
   19618:	ldrb	w9, [x8, #171]
   1961c:	tbnz	w9, #0, 19684 <PyInit__decimal@@Base+0x12bd0>
   19620:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19624:	ldr	x9, [x9, #3936]
   19628:	ldr	x2, [x8, #24]
   1962c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19630:	add	x1, x1, #0xb93
   19634:	ldr	x0, [x9]
   19638:	bl	6950 <PyErr_Format@plt>
   1963c:	mov	x19, xzr
   19640:	b	19670 <PyInit__decimal@@Base+0x12bbc>
   19644:	add	x9, x19, #0x30
   19648:	add	x10, x19, #0x48
   1964c:	tst	w8, #0x40
   19650:	csel	x0, x10, x9, eq  // eq = none
   19654:	mov	x1, x21
   19658:	mov	x2, x20
   1965c:	bl	63c0 <memcpy@plt>
   19660:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   19664:	ldr	x8, [x8, #1376]
   19668:	ldr	x0, [x29, #24]
   1966c:	blr	x8
   19670:	mov	x0, x19
   19674:	ldp	x20, x19, [sp, #32]
   19678:	ldr	x21, [sp, #16]
   1967c:	ldp	x29, x30, [sp], #48
   19680:	ret
   19684:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19688:	add	x0, x0, #0xe60
   1968c:	mov	x1, x19
   19690:	mov	x2, x20
   19694:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19698:	mov	x19, x0
   1969c:	cbnz	x0, 195ac <PyInit__decimal@@Base+0x12af8>
   196a0:	b	19670 <PyInit__decimal@@Base+0x12bbc>
   196a4:	sub	sp, sp, #0x40
   196a8:	stp	x29, x30, [sp, #16]
   196ac:	stp	x22, x21, [sp, #32]
   196b0:	stp	x20, x19, [sp, #48]
   196b4:	add	x29, sp, #0x10
   196b8:	mov	x8, x1
   196bc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   196c0:	mov	x21, x0
   196c4:	add	x1, x1, #0x67c
   196c8:	add	x2, sp, #0x8
   196cc:	mov	x3, sp
   196d0:	mov	x0, x8
   196d4:	bl	6820 <PyArg_ParseTuple@plt>
   196d8:	cbz	w0, 198b8 <PyInit__decimal@@Base+0x12e04>
   196dc:	ldr	x19, [sp, #8]
   196e0:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   196e4:	add	x22, x22, #0xe60
   196e8:	ldr	x0, [x19, #8]
   196ec:	cmp	x0, x22
   196f0:	b.eq	19704 <PyInit__decimal@@Base+0x12c50>  // b.none
   196f4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   196f8:	add	x1, x1, #0xe60
   196fc:	bl	6900 <PyType_IsSubtype@plt>
   19700:	cbz	w0, 197c8 <PyInit__decimal@@Base+0x12d14>
   19704:	ldr	x8, [x19]
   19708:	add	x8, x8, #0x1
   1970c:	str	x8, [x19]
   19710:	ldr	x20, [sp]
   19714:	ldr	x0, [x20, #8]
   19718:	cmp	x0, x22
   1971c:	b.eq	19730 <PyInit__decimal@@Base+0x12c7c>  // b.none
   19720:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19724:	add	x1, x1, #0xe60
   19728:	bl	6900 <PyType_IsSubtype@plt>
   1972c:	cbz	w0, 197f4 <PyInit__decimal@@Base+0x12d40>
   19730:	ldr	x8, [x20]
   19734:	add	x8, x8, #0x1
   19738:	str	x8, [x20]
   1973c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19740:	add	x0, x0, #0xe60
   19744:	bl	6890 <_PyObject_New@plt>
   19748:	cbz	x0, 197a4 <PyInit__decimal@@Base+0x12cf0>
   1974c:	mov	w8, #0x30                  	// #48
   19750:	mov	x21, x0
   19754:	strb	w8, [x0, #24]!
   19758:	mov	x9, #0xffffffffffffffff    	// #-1
   1975c:	mov	w10, #0x4                   	// #4
   19760:	add	x1, x19, #0x18
   19764:	add	x8, x0, #0x30
   19768:	add	x2, x20, #0x18
   1976c:	stur	x9, [x0, #-8]
   19770:	stp	xzr, xzr, [x0, #8]
   19774:	stp	xzr, x10, [x0, #24]
   19778:	str	x8, [x0, #40]
   1977c:	bl	25e70 <PyInit__decimal@@Base+0x1f3bc>
   19780:	ldr	x8, [x19]
   19784:	subs	x8, x8, #0x1
   19788:	str	x8, [x19]
   1978c:	b.eq	19820 <PyInit__decimal@@Base+0x12d6c>  // b.none
   19790:	ldr	x8, [x20]
   19794:	subs	x8, x8, #0x1
   19798:	str	x8, [x20]
   1979c:	b.ne	198bc <PyInit__decimal@@Base+0x12e08>  // b.any
   197a0:	b	19838 <PyInit__decimal@@Base+0x12d84>
   197a4:	ldr	x8, [x19]
   197a8:	subs	x8, x8, #0x1
   197ac:	str	x8, [x19]
   197b0:	b.eq	19864 <PyInit__decimal@@Base+0x12db0>  // b.none
   197b4:	ldr	x8, [x20]
   197b8:	subs	x8, x8, #0x1
   197bc:	str	x8, [x20]
   197c0:	b.ne	198b8 <PyInit__decimal@@Base+0x12e04>  // b.any
   197c4:	b	1987c <PyInit__decimal@@Base+0x12dc8>
   197c8:	ldr	x8, [x19, #8]
   197cc:	ldrb	w9, [x8, #171]
   197d0:	tbnz	w9, #0, 19844 <PyInit__decimal@@Base+0x12d90>
   197d4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   197d8:	ldr	x9, [x9, #3936]
   197dc:	ldr	x2, [x8, #24]
   197e0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   197e4:	add	x1, x1, #0xb93
   197e8:	ldr	x0, [x9]
   197ec:	bl	6950 <PyErr_Format@plt>
   197f0:	b	198b8 <PyInit__decimal@@Base+0x12e04>
   197f4:	ldr	x8, [x20, #8]
   197f8:	ldrb	w9, [x8, #171]
   197fc:	tbnz	w9, #0, 19884 <PyInit__decimal@@Base+0x12dd0>
   19800:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19804:	ldr	x9, [x9, #3936]
   19808:	ldr	x2, [x8, #24]
   1980c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19810:	add	x1, x1, #0xb93
   19814:	ldr	x0, [x9]
   19818:	bl	6950 <PyErr_Format@plt>
   1981c:	b	198a0 <PyInit__decimal@@Base+0x12dec>
   19820:	mov	x0, x19
   19824:	bl	6510 <_Py_Dealloc@plt>
   19828:	ldr	x8, [x20]
   1982c:	subs	x8, x8, #0x1
   19830:	str	x8, [x20]
   19834:	b.ne	198bc <PyInit__decimal@@Base+0x12e08>  // b.any
   19838:	mov	x0, x20
   1983c:	bl	6510 <_Py_Dealloc@plt>
   19840:	b	198bc <PyInit__decimal@@Base+0x12e08>
   19844:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19848:	add	x0, x0, #0xe60
   1984c:	mov	x1, x19
   19850:	mov	x2, x21
   19854:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19858:	mov	x19, x0
   1985c:	cbnz	x0, 19710 <PyInit__decimal@@Base+0x12c5c>
   19860:	b	198b8 <PyInit__decimal@@Base+0x12e04>
   19864:	mov	x0, x19
   19868:	bl	6510 <_Py_Dealloc@plt>
   1986c:	ldr	x8, [x20]
   19870:	subs	x8, x8, #0x1
   19874:	str	x8, [x20]
   19878:	b.ne	198b8 <PyInit__decimal@@Base+0x12e04>  // b.any
   1987c:	mov	x0, x20
   19880:	b	198b4 <PyInit__decimal@@Base+0x12e00>
   19884:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19888:	add	x0, x0, #0xe60
   1988c:	mov	x1, x20
   19890:	mov	x2, x21
   19894:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19898:	mov	x20, x0
   1989c:	cbnz	x0, 1973c <PyInit__decimal@@Base+0x12c88>
   198a0:	ldr	x8, [x19]
   198a4:	subs	x8, x8, #0x1
   198a8:	str	x8, [x19]
   198ac:	b.ne	198b8 <PyInit__decimal@@Base+0x12e04>  // b.any
   198b0:	mov	x0, x19
   198b4:	bl	6510 <_Py_Dealloc@plt>
   198b8:	mov	x21, xzr
   198bc:	mov	x0, x21
   198c0:	ldp	x20, x19, [sp, #48]
   198c4:	ldp	x22, x21, [sp, #32]
   198c8:	ldp	x29, x30, [sp, #16]
   198cc:	add	sp, sp, #0x40
   198d0:	ret
   198d4:	sub	sp, sp, #0x40
   198d8:	stp	x29, x30, [sp, #16]
   198dc:	stp	x22, x21, [sp, #32]
   198e0:	stp	x20, x19, [sp, #48]
   198e4:	add	x29, sp, #0x10
   198e8:	mov	x8, x1
   198ec:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   198f0:	mov	x21, x0
   198f4:	add	x1, x1, #0x67c
   198f8:	add	x2, sp, #0x8
   198fc:	mov	x3, sp
   19900:	mov	x0, x8
   19904:	bl	6820 <PyArg_ParseTuple@plt>
   19908:	cbz	w0, 19ae8 <PyInit__decimal@@Base+0x13034>
   1990c:	ldr	x19, [sp, #8]
   19910:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   19914:	add	x22, x22, #0xe60
   19918:	ldr	x0, [x19, #8]
   1991c:	cmp	x0, x22
   19920:	b.eq	19934 <PyInit__decimal@@Base+0x12e80>  // b.none
   19924:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19928:	add	x1, x1, #0xe60
   1992c:	bl	6900 <PyType_IsSubtype@plt>
   19930:	cbz	w0, 199f8 <PyInit__decimal@@Base+0x12f44>
   19934:	ldr	x8, [x19]
   19938:	add	x8, x8, #0x1
   1993c:	str	x8, [x19]
   19940:	ldr	x20, [sp]
   19944:	ldr	x0, [x20, #8]
   19948:	cmp	x0, x22
   1994c:	b.eq	19960 <PyInit__decimal@@Base+0x12eac>  // b.none
   19950:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19954:	add	x1, x1, #0xe60
   19958:	bl	6900 <PyType_IsSubtype@plt>
   1995c:	cbz	w0, 19a24 <PyInit__decimal@@Base+0x12f70>
   19960:	ldr	x8, [x20]
   19964:	add	x8, x8, #0x1
   19968:	str	x8, [x20]
   1996c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19970:	add	x0, x0, #0xe60
   19974:	bl	6890 <_PyObject_New@plt>
   19978:	cbz	x0, 199d4 <PyInit__decimal@@Base+0x12f20>
   1997c:	mov	w8, #0x30                  	// #48
   19980:	mov	x21, x0
   19984:	strb	w8, [x0, #24]!
   19988:	mov	x9, #0xffffffffffffffff    	// #-1
   1998c:	mov	w10, #0x4                   	// #4
   19990:	add	x1, x19, #0x18
   19994:	add	x8, x0, #0x30
   19998:	add	x2, x20, #0x18
   1999c:	stur	x9, [x0, #-8]
   199a0:	stp	xzr, xzr, [x0, #8]
   199a4:	stp	xzr, x10, [x0, #24]
   199a8:	str	x8, [x0, #40]
   199ac:	bl	260bc <PyInit__decimal@@Base+0x1f608>
   199b0:	ldr	x8, [x19]
   199b4:	subs	x8, x8, #0x1
   199b8:	str	x8, [x19]
   199bc:	b.eq	19a50 <PyInit__decimal@@Base+0x12f9c>  // b.none
   199c0:	ldr	x8, [x20]
   199c4:	subs	x8, x8, #0x1
   199c8:	str	x8, [x20]
   199cc:	b.ne	19aec <PyInit__decimal@@Base+0x13038>  // b.any
   199d0:	b	19a68 <PyInit__decimal@@Base+0x12fb4>
   199d4:	ldr	x8, [x19]
   199d8:	subs	x8, x8, #0x1
   199dc:	str	x8, [x19]
   199e0:	b.eq	19a94 <PyInit__decimal@@Base+0x12fe0>  // b.none
   199e4:	ldr	x8, [x20]
   199e8:	subs	x8, x8, #0x1
   199ec:	str	x8, [x20]
   199f0:	b.ne	19ae8 <PyInit__decimal@@Base+0x13034>  // b.any
   199f4:	b	19aac <PyInit__decimal@@Base+0x12ff8>
   199f8:	ldr	x8, [x19, #8]
   199fc:	ldrb	w9, [x8, #171]
   19a00:	tbnz	w9, #0, 19a74 <PyInit__decimal@@Base+0x12fc0>
   19a04:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19a08:	ldr	x9, [x9, #3936]
   19a0c:	ldr	x2, [x8, #24]
   19a10:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19a14:	add	x1, x1, #0xb93
   19a18:	ldr	x0, [x9]
   19a1c:	bl	6950 <PyErr_Format@plt>
   19a20:	b	19ae8 <PyInit__decimal@@Base+0x13034>
   19a24:	ldr	x8, [x20, #8]
   19a28:	ldrb	w9, [x8, #171]
   19a2c:	tbnz	w9, #0, 19ab4 <PyInit__decimal@@Base+0x13000>
   19a30:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19a34:	ldr	x9, [x9, #3936]
   19a38:	ldr	x2, [x8, #24]
   19a3c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19a40:	add	x1, x1, #0xb93
   19a44:	ldr	x0, [x9]
   19a48:	bl	6950 <PyErr_Format@plt>
   19a4c:	b	19ad0 <PyInit__decimal@@Base+0x1301c>
   19a50:	mov	x0, x19
   19a54:	bl	6510 <_Py_Dealloc@plt>
   19a58:	ldr	x8, [x20]
   19a5c:	subs	x8, x8, #0x1
   19a60:	str	x8, [x20]
   19a64:	b.ne	19aec <PyInit__decimal@@Base+0x13038>  // b.any
   19a68:	mov	x0, x20
   19a6c:	bl	6510 <_Py_Dealloc@plt>
   19a70:	b	19aec <PyInit__decimal@@Base+0x13038>
   19a74:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19a78:	add	x0, x0, #0xe60
   19a7c:	mov	x1, x19
   19a80:	mov	x2, x21
   19a84:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19a88:	mov	x19, x0
   19a8c:	cbnz	x0, 19940 <PyInit__decimal@@Base+0x12e8c>
   19a90:	b	19ae8 <PyInit__decimal@@Base+0x13034>
   19a94:	mov	x0, x19
   19a98:	bl	6510 <_Py_Dealloc@plt>
   19a9c:	ldr	x8, [x20]
   19aa0:	subs	x8, x8, #0x1
   19aa4:	str	x8, [x20]
   19aa8:	b.ne	19ae8 <PyInit__decimal@@Base+0x13034>  // b.any
   19aac:	mov	x0, x20
   19ab0:	b	19ae4 <PyInit__decimal@@Base+0x13030>
   19ab4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19ab8:	add	x0, x0, #0xe60
   19abc:	mov	x1, x20
   19ac0:	mov	x2, x21
   19ac4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19ac8:	mov	x20, x0
   19acc:	cbnz	x0, 1996c <PyInit__decimal@@Base+0x12eb8>
   19ad0:	ldr	x8, [x19]
   19ad4:	subs	x8, x8, #0x1
   19ad8:	str	x8, [x19]
   19adc:	b.ne	19ae8 <PyInit__decimal@@Base+0x13034>  // b.any
   19ae0:	mov	x0, x19
   19ae4:	bl	6510 <_Py_Dealloc@plt>
   19ae8:	mov	x21, xzr
   19aec:	mov	x0, x21
   19af0:	ldp	x20, x19, [sp, #48]
   19af4:	ldp	x22, x21, [sp, #32]
   19af8:	ldp	x29, x30, [sp, #16]
   19afc:	add	sp, sp, #0x40
   19b00:	ret
   19b04:	sub	sp, sp, #0x50
   19b08:	stp	x29, x30, [sp, #32]
   19b0c:	stp	x22, x21, [sp, #48]
   19b10:	stp	x20, x19, [sp, #64]
   19b14:	add	x29, sp, #0x20
   19b18:	mov	x8, x1
   19b1c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   19b20:	mov	x19, x0
   19b24:	add	x1, x1, #0x67c
   19b28:	sub	x2, x29, #0x8
   19b2c:	add	x3, sp, #0x10
   19b30:	mov	x0, x8
   19b34:	str	wzr, [sp, #12]
   19b38:	bl	6820 <PyArg_ParseTuple@plt>
   19b3c:	cbz	w0, 19d40 <PyInit__decimal@@Base+0x1328c>
   19b40:	ldur	x20, [x29, #-8]
   19b44:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   19b48:	add	x22, x22, #0xe60
   19b4c:	ldr	x0, [x20, #8]
   19b50:	cmp	x0, x22
   19b54:	b.eq	19b68 <PyInit__decimal@@Base+0x130b4>  // b.none
   19b58:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19b5c:	add	x1, x1, #0xe60
   19b60:	bl	6900 <PyType_IsSubtype@plt>
   19b64:	cbz	w0, 19c4c <PyInit__decimal@@Base+0x13198>
   19b68:	ldr	x8, [x20]
   19b6c:	add	x8, x8, #0x1
   19b70:	str	x8, [x20]
   19b74:	ldr	x21, [sp, #16]
   19b78:	ldr	x0, [x21, #8]
   19b7c:	cmp	x0, x22
   19b80:	b.eq	19b94 <PyInit__decimal@@Base+0x130e0>  // b.none
   19b84:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19b88:	add	x1, x1, #0xe60
   19b8c:	bl	6900 <PyType_IsSubtype@plt>
   19b90:	cbz	w0, 19c78 <PyInit__decimal@@Base+0x131c4>
   19b94:	ldr	x8, [x21]
   19b98:	add	x8, x8, #0x1
   19b9c:	str	x8, [x21]
   19ba0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19ba4:	add	x0, x0, #0xe60
   19ba8:	bl	6890 <_PyObject_New@plt>
   19bac:	cbz	x0, 19c1c <PyInit__decimal@@Base+0x13168>
   19bb0:	mov	w8, #0x30                  	// #48
   19bb4:	mov	x22, x0
   19bb8:	strb	w8, [x0, #24]!
   19bbc:	mov	x9, #0xffffffffffffffff    	// #-1
   19bc0:	mov	w10, #0x4                   	// #4
   19bc4:	add	x1, x20, #0x18
   19bc8:	add	x8, x0, #0x30
   19bcc:	add	x2, x21, #0x18
   19bd0:	add	x3, sp, #0xc
   19bd4:	stur	x9, [x0, #-8]
   19bd8:	stp	xzr, xzr, [x0, #8]
   19bdc:	stp	xzr, x10, [x0, #24]
   19be0:	str	x8, [x0, #40]
   19be4:	bl	254dc <PyInit__decimal@@Base+0x1ea28>
   19be8:	ldr	x8, [x20]
   19bec:	subs	x8, x8, #0x1
   19bf0:	str	x8, [x20]
   19bf4:	b.eq	19ca4 <PyInit__decimal@@Base+0x131f0>  // b.none
   19bf8:	ldr	x8, [x21]
   19bfc:	subs	x8, x8, #0x1
   19c00:	str	x8, [x21]
   19c04:	b.eq	19cbc <PyInit__decimal@@Base+0x13208>  // b.none
   19c08:	ldr	w1, [sp, #12]
   19c0c:	mov	x0, x19
   19c10:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   19c14:	cbnz	w0, 19cd4 <PyInit__decimal@@Base+0x13220>
   19c18:	b	19d44 <PyInit__decimal@@Base+0x13290>
   19c1c:	ldr	x8, [x20]
   19c20:	subs	x8, x8, #0x1
   19c24:	str	x8, [x20]
   19c28:	b.ne	19c34 <PyInit__decimal@@Base+0x13180>  // b.any
   19c2c:	mov	x0, x20
   19c30:	bl	6510 <_Py_Dealloc@plt>
   19c34:	ldr	x8, [x21]
   19c38:	subs	x8, x8, #0x1
   19c3c:	str	x8, [x21]
   19c40:	b.ne	19d40 <PyInit__decimal@@Base+0x1328c>  // b.any
   19c44:	mov	x0, x21
   19c48:	b	19d3c <PyInit__decimal@@Base+0x13288>
   19c4c:	ldr	x8, [x20, #8]
   19c50:	ldrb	w9, [x8, #171]
   19c54:	tbnz	w9, #0, 19cec <PyInit__decimal@@Base+0x13238>
   19c58:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19c5c:	ldr	x9, [x9, #3936]
   19c60:	ldr	x2, [x8, #24]
   19c64:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19c68:	add	x1, x1, #0xb93
   19c6c:	ldr	x0, [x9]
   19c70:	bl	6950 <PyErr_Format@plt>
   19c74:	b	19d40 <PyInit__decimal@@Base+0x1328c>
   19c78:	ldr	x8, [x21, #8]
   19c7c:	ldrb	w9, [x8, #171]
   19c80:	tbnz	w9, #0, 19d0c <PyInit__decimal@@Base+0x13258>
   19c84:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19c88:	ldr	x9, [x9, #3936]
   19c8c:	ldr	x2, [x8, #24]
   19c90:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19c94:	add	x1, x1, #0xb93
   19c98:	ldr	x0, [x9]
   19c9c:	bl	6950 <PyErr_Format@plt>
   19ca0:	b	19d28 <PyInit__decimal@@Base+0x13274>
   19ca4:	mov	x0, x20
   19ca8:	bl	6510 <_Py_Dealloc@plt>
   19cac:	ldr	x8, [x21]
   19cb0:	subs	x8, x8, #0x1
   19cb4:	str	x8, [x21]
   19cb8:	b.ne	19c08 <PyInit__decimal@@Base+0x13154>  // b.any
   19cbc:	mov	x0, x21
   19cc0:	bl	6510 <_Py_Dealloc@plt>
   19cc4:	ldr	w1, [sp, #12]
   19cc8:	mov	x0, x19
   19ccc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   19cd0:	cbz	w0, 19d44 <PyInit__decimal@@Base+0x13290>
   19cd4:	ldr	x8, [x22]
   19cd8:	subs	x8, x8, #0x1
   19cdc:	str	x8, [x22]
   19ce0:	b.ne	19d40 <PyInit__decimal@@Base+0x1328c>  // b.any
   19ce4:	mov	x0, x22
   19ce8:	b	19d3c <PyInit__decimal@@Base+0x13288>
   19cec:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19cf0:	add	x0, x0, #0xe60
   19cf4:	mov	x1, x20
   19cf8:	mov	x2, x19
   19cfc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19d00:	mov	x20, x0
   19d04:	cbnz	x0, 19b74 <PyInit__decimal@@Base+0x130c0>
   19d08:	b	19d40 <PyInit__decimal@@Base+0x1328c>
   19d0c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19d10:	add	x0, x0, #0xe60
   19d14:	mov	x1, x21
   19d18:	mov	x2, x19
   19d1c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19d20:	mov	x21, x0
   19d24:	cbnz	x0, 19ba0 <PyInit__decimal@@Base+0x130ec>
   19d28:	ldr	x8, [x20]
   19d2c:	subs	x8, x8, #0x1
   19d30:	str	x8, [x20]
   19d34:	b.ne	19d40 <PyInit__decimal@@Base+0x1328c>  // b.any
   19d38:	mov	x0, x20
   19d3c:	bl	6510 <_Py_Dealloc@plt>
   19d40:	mov	x22, xzr
   19d44:	mov	x0, x22
   19d48:	ldp	x20, x19, [sp, #64]
   19d4c:	ldp	x22, x21, [sp, #48]
   19d50:	ldp	x29, x30, [sp, #32]
   19d54:	add	sp, sp, #0x50
   19d58:	ret
   19d5c:	sub	sp, sp, #0x50
   19d60:	stp	x29, x30, [sp, #32]
   19d64:	stp	x22, x21, [sp, #48]
   19d68:	stp	x20, x19, [sp, #64]
   19d6c:	add	x29, sp, #0x20
   19d70:	mov	x8, x1
   19d74:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   19d78:	mov	x19, x0
   19d7c:	add	x1, x1, #0x67c
   19d80:	sub	x2, x29, #0x8
   19d84:	add	x3, sp, #0x10
   19d88:	mov	x0, x8
   19d8c:	str	wzr, [sp, #12]
   19d90:	bl	6820 <PyArg_ParseTuple@plt>
   19d94:	cbz	w0, 19f9c <PyInit__decimal@@Base+0x134e8>
   19d98:	ldur	x20, [x29, #-8]
   19d9c:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   19da0:	add	x22, x22, #0xe60
   19da4:	ldr	x0, [x20, #8]
   19da8:	cmp	x0, x22
   19dac:	b.eq	19dc0 <PyInit__decimal@@Base+0x1330c>  // b.none
   19db0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19db4:	add	x1, x1, #0xe60
   19db8:	bl	6900 <PyType_IsSubtype@plt>
   19dbc:	cbz	w0, 19ea8 <PyInit__decimal@@Base+0x133f4>
   19dc0:	ldr	x8, [x20]
   19dc4:	add	x8, x8, #0x1
   19dc8:	str	x8, [x20]
   19dcc:	ldr	x21, [sp, #16]
   19dd0:	ldr	x0, [x21, #8]
   19dd4:	cmp	x0, x22
   19dd8:	b.eq	19dec <PyInit__decimal@@Base+0x13338>  // b.none
   19ddc:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   19de0:	add	x1, x1, #0xe60
   19de4:	bl	6900 <PyType_IsSubtype@plt>
   19de8:	cbz	w0, 19ed4 <PyInit__decimal@@Base+0x13420>
   19dec:	ldr	x8, [x21]
   19df0:	add	x8, x8, #0x1
   19df4:	str	x8, [x21]
   19df8:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19dfc:	add	x0, x0, #0xe60
   19e00:	bl	6890 <_PyObject_New@plt>
   19e04:	cbz	x0, 19e78 <PyInit__decimal@@Base+0x133c4>
   19e08:	mov	w8, #0x30                  	// #48
   19e0c:	mov	x22, x0
   19e10:	strb	w8, [x0, #24]!
   19e14:	mov	x9, #0xffffffffffffffff    	// #-1
   19e18:	mov	w10, #0x4                   	// #4
   19e1c:	add	x1, x20, #0x18
   19e20:	add	x2, x21, #0x18
   19e24:	add	x8, x0, #0x30
   19e28:	add	x3, x19, #0x10
   19e2c:	add	x4, sp, #0xc
   19e30:	stur	x9, [x0, #-8]
   19e34:	stp	xzr, xzr, [x0, #8]
   19e38:	stp	xzr, x10, [x0, #24]
   19e3c:	str	x8, [x0, #40]
   19e40:	bl	26a58 <PyInit__decimal@@Base+0x1ffa4>
   19e44:	ldr	x8, [x20]
   19e48:	subs	x8, x8, #0x1
   19e4c:	str	x8, [x20]
   19e50:	b.eq	19f00 <PyInit__decimal@@Base+0x1344c>  // b.none
   19e54:	ldr	x8, [x21]
   19e58:	subs	x8, x8, #0x1
   19e5c:	str	x8, [x21]
   19e60:	b.eq	19f18 <PyInit__decimal@@Base+0x13464>  // b.none
   19e64:	ldr	w1, [sp, #12]
   19e68:	mov	x0, x19
   19e6c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   19e70:	cbnz	w0, 19f30 <PyInit__decimal@@Base+0x1347c>
   19e74:	b	19fa0 <PyInit__decimal@@Base+0x134ec>
   19e78:	ldr	x8, [x20]
   19e7c:	subs	x8, x8, #0x1
   19e80:	str	x8, [x20]
   19e84:	b.ne	19e90 <PyInit__decimal@@Base+0x133dc>  // b.any
   19e88:	mov	x0, x20
   19e8c:	bl	6510 <_Py_Dealloc@plt>
   19e90:	ldr	x8, [x21]
   19e94:	subs	x8, x8, #0x1
   19e98:	str	x8, [x21]
   19e9c:	b.ne	19f9c <PyInit__decimal@@Base+0x134e8>  // b.any
   19ea0:	mov	x0, x21
   19ea4:	b	19f98 <PyInit__decimal@@Base+0x134e4>
   19ea8:	ldr	x8, [x20, #8]
   19eac:	ldrb	w9, [x8, #171]
   19eb0:	tbnz	w9, #0, 19f48 <PyInit__decimal@@Base+0x13494>
   19eb4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19eb8:	ldr	x9, [x9, #3936]
   19ebc:	ldr	x2, [x8, #24]
   19ec0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19ec4:	add	x1, x1, #0xb93
   19ec8:	ldr	x0, [x9]
   19ecc:	bl	6950 <PyErr_Format@plt>
   19ed0:	b	19f9c <PyInit__decimal@@Base+0x134e8>
   19ed4:	ldr	x8, [x21, #8]
   19ed8:	ldrb	w9, [x8, #171]
   19edc:	tbnz	w9, #0, 19f68 <PyInit__decimal@@Base+0x134b4>
   19ee0:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   19ee4:	ldr	x9, [x9, #3936]
   19ee8:	ldr	x2, [x8, #24]
   19eec:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   19ef0:	add	x1, x1, #0xb93
   19ef4:	ldr	x0, [x9]
   19ef8:	bl	6950 <PyErr_Format@plt>
   19efc:	b	19f84 <PyInit__decimal@@Base+0x134d0>
   19f00:	mov	x0, x20
   19f04:	bl	6510 <_Py_Dealloc@plt>
   19f08:	ldr	x8, [x21]
   19f0c:	subs	x8, x8, #0x1
   19f10:	str	x8, [x21]
   19f14:	b.ne	19e64 <PyInit__decimal@@Base+0x133b0>  // b.any
   19f18:	mov	x0, x21
   19f1c:	bl	6510 <_Py_Dealloc@plt>
   19f20:	ldr	w1, [sp, #12]
   19f24:	mov	x0, x19
   19f28:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   19f2c:	cbz	w0, 19fa0 <PyInit__decimal@@Base+0x134ec>
   19f30:	ldr	x8, [x22]
   19f34:	subs	x8, x8, #0x1
   19f38:	str	x8, [x22]
   19f3c:	b.ne	19f9c <PyInit__decimal@@Base+0x134e8>  // b.any
   19f40:	mov	x0, x22
   19f44:	b	19f98 <PyInit__decimal@@Base+0x134e4>
   19f48:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19f4c:	add	x0, x0, #0xe60
   19f50:	mov	x1, x20
   19f54:	mov	x2, x19
   19f58:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19f5c:	mov	x20, x0
   19f60:	cbnz	x0, 19dcc <PyInit__decimal@@Base+0x13318>
   19f64:	b	19f9c <PyInit__decimal@@Base+0x134e8>
   19f68:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   19f6c:	add	x0, x0, #0xe60
   19f70:	mov	x1, x21
   19f74:	mov	x2, x19
   19f78:	bl	abdc <PyInit__decimal@@Base+0x4128>
   19f7c:	mov	x21, x0
   19f80:	cbnz	x0, 19df8 <PyInit__decimal@@Base+0x13344>
   19f84:	ldr	x8, [x20]
   19f88:	subs	x8, x8, #0x1
   19f8c:	str	x8, [x20]
   19f90:	b.ne	19f9c <PyInit__decimal@@Base+0x134e8>  // b.any
   19f94:	mov	x0, x20
   19f98:	bl	6510 <_Py_Dealloc@plt>
   19f9c:	mov	x22, xzr
   19fa0:	mov	x0, x22
   19fa4:	ldp	x20, x19, [sp, #64]
   19fa8:	ldp	x22, x21, [sp, #48]
   19fac:	ldp	x29, x30, [sp, #32]
   19fb0:	add	sp, sp, #0x50
   19fb4:	ret
   19fb8:	sub	sp, sp, #0x50
   19fbc:	stp	x29, x30, [sp, #32]
   19fc0:	stp	x22, x21, [sp, #48]
   19fc4:	stp	x20, x19, [sp, #64]
   19fc8:	add	x29, sp, #0x20
   19fcc:	mov	x8, x1
   19fd0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   19fd4:	mov	x19, x0
   19fd8:	add	x1, x1, #0x67c
   19fdc:	sub	x2, x29, #0x8
   19fe0:	add	x3, sp, #0x10
   19fe4:	mov	x0, x8
   19fe8:	str	wzr, [sp, #12]
   19fec:	bl	6820 <PyArg_ParseTuple@plt>
   19ff0:	cbz	w0, 1a1f8 <PyInit__decimal@@Base+0x13744>
   19ff4:	ldur	x20, [x29, #-8]
   19ff8:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   19ffc:	add	x22, x22, #0xe60
   1a000:	ldr	x0, [x20, #8]
   1a004:	cmp	x0, x22
   1a008:	b.eq	1a01c <PyInit__decimal@@Base+0x13568>  // b.none
   1a00c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a010:	add	x1, x1, #0xe60
   1a014:	bl	6900 <PyType_IsSubtype@plt>
   1a018:	cbz	w0, 1a104 <PyInit__decimal@@Base+0x13650>
   1a01c:	ldr	x8, [x20]
   1a020:	add	x8, x8, #0x1
   1a024:	str	x8, [x20]
   1a028:	ldr	x21, [sp, #16]
   1a02c:	ldr	x0, [x21, #8]
   1a030:	cmp	x0, x22
   1a034:	b.eq	1a048 <PyInit__decimal@@Base+0x13594>  // b.none
   1a038:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a03c:	add	x1, x1, #0xe60
   1a040:	bl	6900 <PyType_IsSubtype@plt>
   1a044:	cbz	w0, 1a130 <PyInit__decimal@@Base+0x1367c>
   1a048:	ldr	x8, [x21]
   1a04c:	add	x8, x8, #0x1
   1a050:	str	x8, [x21]
   1a054:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a058:	add	x0, x0, #0xe60
   1a05c:	bl	6890 <_PyObject_New@plt>
   1a060:	cbz	x0, 1a0d4 <PyInit__decimal@@Base+0x13620>
   1a064:	mov	w8, #0x30                  	// #48
   1a068:	mov	x22, x0
   1a06c:	strb	w8, [x0, #24]!
   1a070:	mov	x9, #0xffffffffffffffff    	// #-1
   1a074:	mov	w10, #0x4                   	// #4
   1a078:	add	x1, x20, #0x18
   1a07c:	add	x2, x21, #0x18
   1a080:	add	x8, x0, #0x30
   1a084:	add	x3, x19, #0x10
   1a088:	add	x4, sp, #0xc
   1a08c:	stur	x9, [x0, #-8]
   1a090:	stp	xzr, xzr, [x0, #8]
   1a094:	stp	xzr, x10, [x0, #24]
   1a098:	str	x8, [x0, #40]
   1a09c:	bl	27e2c <PyInit__decimal@@Base+0x21378>
   1a0a0:	ldr	x8, [x20]
   1a0a4:	subs	x8, x8, #0x1
   1a0a8:	str	x8, [x20]
   1a0ac:	b.eq	1a15c <PyInit__decimal@@Base+0x136a8>  // b.none
   1a0b0:	ldr	x8, [x21]
   1a0b4:	subs	x8, x8, #0x1
   1a0b8:	str	x8, [x21]
   1a0bc:	b.eq	1a174 <PyInit__decimal@@Base+0x136c0>  // b.none
   1a0c0:	ldr	w1, [sp, #12]
   1a0c4:	mov	x0, x19
   1a0c8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a0cc:	cbnz	w0, 1a18c <PyInit__decimal@@Base+0x136d8>
   1a0d0:	b	1a1fc <PyInit__decimal@@Base+0x13748>
   1a0d4:	ldr	x8, [x20]
   1a0d8:	subs	x8, x8, #0x1
   1a0dc:	str	x8, [x20]
   1a0e0:	b.ne	1a0ec <PyInit__decimal@@Base+0x13638>  // b.any
   1a0e4:	mov	x0, x20
   1a0e8:	bl	6510 <_Py_Dealloc@plt>
   1a0ec:	ldr	x8, [x21]
   1a0f0:	subs	x8, x8, #0x1
   1a0f4:	str	x8, [x21]
   1a0f8:	b.ne	1a1f8 <PyInit__decimal@@Base+0x13744>  // b.any
   1a0fc:	mov	x0, x21
   1a100:	b	1a1f4 <PyInit__decimal@@Base+0x13740>
   1a104:	ldr	x8, [x20, #8]
   1a108:	ldrb	w9, [x8, #171]
   1a10c:	tbnz	w9, #0, 1a1a4 <PyInit__decimal@@Base+0x136f0>
   1a110:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a114:	ldr	x9, [x9, #3936]
   1a118:	ldr	x2, [x8, #24]
   1a11c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a120:	add	x1, x1, #0xb93
   1a124:	ldr	x0, [x9]
   1a128:	bl	6950 <PyErr_Format@plt>
   1a12c:	b	1a1f8 <PyInit__decimal@@Base+0x13744>
   1a130:	ldr	x8, [x21, #8]
   1a134:	ldrb	w9, [x8, #171]
   1a138:	tbnz	w9, #0, 1a1c4 <PyInit__decimal@@Base+0x13710>
   1a13c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a140:	ldr	x9, [x9, #3936]
   1a144:	ldr	x2, [x8, #24]
   1a148:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a14c:	add	x1, x1, #0xb93
   1a150:	ldr	x0, [x9]
   1a154:	bl	6950 <PyErr_Format@plt>
   1a158:	b	1a1e0 <PyInit__decimal@@Base+0x1372c>
   1a15c:	mov	x0, x20
   1a160:	bl	6510 <_Py_Dealloc@plt>
   1a164:	ldr	x8, [x21]
   1a168:	subs	x8, x8, #0x1
   1a16c:	str	x8, [x21]
   1a170:	b.ne	1a0c0 <PyInit__decimal@@Base+0x1360c>  // b.any
   1a174:	mov	x0, x21
   1a178:	bl	6510 <_Py_Dealloc@plt>
   1a17c:	ldr	w1, [sp, #12]
   1a180:	mov	x0, x19
   1a184:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a188:	cbz	w0, 1a1fc <PyInit__decimal@@Base+0x13748>
   1a18c:	ldr	x8, [x22]
   1a190:	subs	x8, x8, #0x1
   1a194:	str	x8, [x22]
   1a198:	b.ne	1a1f8 <PyInit__decimal@@Base+0x13744>  // b.any
   1a19c:	mov	x0, x22
   1a1a0:	b	1a1f4 <PyInit__decimal@@Base+0x13740>
   1a1a4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a1a8:	add	x0, x0, #0xe60
   1a1ac:	mov	x1, x20
   1a1b0:	mov	x2, x19
   1a1b4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a1b8:	mov	x20, x0
   1a1bc:	cbnz	x0, 1a028 <PyInit__decimal@@Base+0x13574>
   1a1c0:	b	1a1f8 <PyInit__decimal@@Base+0x13744>
   1a1c4:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a1c8:	add	x0, x0, #0xe60
   1a1cc:	mov	x1, x21
   1a1d0:	mov	x2, x19
   1a1d4:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a1d8:	mov	x21, x0
   1a1dc:	cbnz	x0, 1a054 <PyInit__decimal@@Base+0x135a0>
   1a1e0:	ldr	x8, [x20]
   1a1e4:	subs	x8, x8, #0x1
   1a1e8:	str	x8, [x20]
   1a1ec:	b.ne	1a1f8 <PyInit__decimal@@Base+0x13744>  // b.any
   1a1f0:	mov	x0, x20
   1a1f4:	bl	6510 <_Py_Dealloc@plt>
   1a1f8:	mov	x22, xzr
   1a1fc:	mov	x0, x22
   1a200:	ldp	x20, x19, [sp, #64]
   1a204:	ldp	x22, x21, [sp, #48]
   1a208:	ldp	x29, x30, [sp, #32]
   1a20c:	add	sp, sp, #0x50
   1a210:	ret
   1a214:	sub	sp, sp, #0x50
   1a218:	stp	x29, x30, [sp, #32]
   1a21c:	stp	x22, x21, [sp, #48]
   1a220:	stp	x20, x19, [sp, #64]
   1a224:	add	x29, sp, #0x20
   1a228:	mov	x8, x1
   1a22c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1a230:	mov	x19, x0
   1a234:	add	x1, x1, #0x67c
   1a238:	sub	x2, x29, #0x8
   1a23c:	add	x3, sp, #0x10
   1a240:	mov	x0, x8
   1a244:	str	wzr, [sp, #12]
   1a248:	bl	6820 <PyArg_ParseTuple@plt>
   1a24c:	cbz	w0, 1a454 <PyInit__decimal@@Base+0x139a0>
   1a250:	ldur	x20, [x29, #-8]
   1a254:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1a258:	add	x22, x22, #0xe60
   1a25c:	ldr	x0, [x20, #8]
   1a260:	cmp	x0, x22
   1a264:	b.eq	1a278 <PyInit__decimal@@Base+0x137c4>  // b.none
   1a268:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a26c:	add	x1, x1, #0xe60
   1a270:	bl	6900 <PyType_IsSubtype@plt>
   1a274:	cbz	w0, 1a360 <PyInit__decimal@@Base+0x138ac>
   1a278:	ldr	x8, [x20]
   1a27c:	add	x8, x8, #0x1
   1a280:	str	x8, [x20]
   1a284:	ldr	x21, [sp, #16]
   1a288:	ldr	x0, [x21, #8]
   1a28c:	cmp	x0, x22
   1a290:	b.eq	1a2a4 <PyInit__decimal@@Base+0x137f0>  // b.none
   1a294:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a298:	add	x1, x1, #0xe60
   1a29c:	bl	6900 <PyType_IsSubtype@plt>
   1a2a0:	cbz	w0, 1a38c <PyInit__decimal@@Base+0x138d8>
   1a2a4:	ldr	x8, [x21]
   1a2a8:	add	x8, x8, #0x1
   1a2ac:	str	x8, [x21]
   1a2b0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a2b4:	add	x0, x0, #0xe60
   1a2b8:	bl	6890 <_PyObject_New@plt>
   1a2bc:	cbz	x0, 1a330 <PyInit__decimal@@Base+0x1387c>
   1a2c0:	mov	w8, #0x30                  	// #48
   1a2c4:	mov	x22, x0
   1a2c8:	strb	w8, [x0, #24]!
   1a2cc:	mov	x9, #0xffffffffffffffff    	// #-1
   1a2d0:	mov	w10, #0x4                   	// #4
   1a2d4:	add	x1, x20, #0x18
   1a2d8:	add	x2, x21, #0x18
   1a2dc:	add	x8, x0, #0x30
   1a2e0:	add	x3, x19, #0x10
   1a2e4:	add	x4, sp, #0xc
   1a2e8:	stur	x9, [x0, #-8]
   1a2ec:	stp	xzr, xzr, [x0, #8]
   1a2f0:	stp	xzr, x10, [x0, #24]
   1a2f4:	str	x8, [x0, #40]
   1a2f8:	bl	294d4 <PyInit__decimal@@Base+0x22a20>
   1a2fc:	ldr	x8, [x20]
   1a300:	subs	x8, x8, #0x1
   1a304:	str	x8, [x20]
   1a308:	b.eq	1a3b8 <PyInit__decimal@@Base+0x13904>  // b.none
   1a30c:	ldr	x8, [x21]
   1a310:	subs	x8, x8, #0x1
   1a314:	str	x8, [x21]
   1a318:	b.eq	1a3d0 <PyInit__decimal@@Base+0x1391c>  // b.none
   1a31c:	ldr	w1, [sp, #12]
   1a320:	mov	x0, x19
   1a324:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a328:	cbnz	w0, 1a3e8 <PyInit__decimal@@Base+0x13934>
   1a32c:	b	1a458 <PyInit__decimal@@Base+0x139a4>
   1a330:	ldr	x8, [x20]
   1a334:	subs	x8, x8, #0x1
   1a338:	str	x8, [x20]
   1a33c:	b.ne	1a348 <PyInit__decimal@@Base+0x13894>  // b.any
   1a340:	mov	x0, x20
   1a344:	bl	6510 <_Py_Dealloc@plt>
   1a348:	ldr	x8, [x21]
   1a34c:	subs	x8, x8, #0x1
   1a350:	str	x8, [x21]
   1a354:	b.ne	1a454 <PyInit__decimal@@Base+0x139a0>  // b.any
   1a358:	mov	x0, x21
   1a35c:	b	1a450 <PyInit__decimal@@Base+0x1399c>
   1a360:	ldr	x8, [x20, #8]
   1a364:	ldrb	w9, [x8, #171]
   1a368:	tbnz	w9, #0, 1a400 <PyInit__decimal@@Base+0x1394c>
   1a36c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a370:	ldr	x9, [x9, #3936]
   1a374:	ldr	x2, [x8, #24]
   1a378:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a37c:	add	x1, x1, #0xb93
   1a380:	ldr	x0, [x9]
   1a384:	bl	6950 <PyErr_Format@plt>
   1a388:	b	1a454 <PyInit__decimal@@Base+0x139a0>
   1a38c:	ldr	x8, [x21, #8]
   1a390:	ldrb	w9, [x8, #171]
   1a394:	tbnz	w9, #0, 1a420 <PyInit__decimal@@Base+0x1396c>
   1a398:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a39c:	ldr	x9, [x9, #3936]
   1a3a0:	ldr	x2, [x8, #24]
   1a3a4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a3a8:	add	x1, x1, #0xb93
   1a3ac:	ldr	x0, [x9]
   1a3b0:	bl	6950 <PyErr_Format@plt>
   1a3b4:	b	1a43c <PyInit__decimal@@Base+0x13988>
   1a3b8:	mov	x0, x20
   1a3bc:	bl	6510 <_Py_Dealloc@plt>
   1a3c0:	ldr	x8, [x21]
   1a3c4:	subs	x8, x8, #0x1
   1a3c8:	str	x8, [x21]
   1a3cc:	b.ne	1a31c <PyInit__decimal@@Base+0x13868>  // b.any
   1a3d0:	mov	x0, x21
   1a3d4:	bl	6510 <_Py_Dealloc@plt>
   1a3d8:	ldr	w1, [sp, #12]
   1a3dc:	mov	x0, x19
   1a3e0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a3e4:	cbz	w0, 1a458 <PyInit__decimal@@Base+0x139a4>
   1a3e8:	ldr	x8, [x22]
   1a3ec:	subs	x8, x8, #0x1
   1a3f0:	str	x8, [x22]
   1a3f4:	b.ne	1a454 <PyInit__decimal@@Base+0x139a0>  // b.any
   1a3f8:	mov	x0, x22
   1a3fc:	b	1a450 <PyInit__decimal@@Base+0x1399c>
   1a400:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a404:	add	x0, x0, #0xe60
   1a408:	mov	x1, x20
   1a40c:	mov	x2, x19
   1a410:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a414:	mov	x20, x0
   1a418:	cbnz	x0, 1a284 <PyInit__decimal@@Base+0x137d0>
   1a41c:	b	1a454 <PyInit__decimal@@Base+0x139a0>
   1a420:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a424:	add	x0, x0, #0xe60
   1a428:	mov	x1, x21
   1a42c:	mov	x2, x19
   1a430:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a434:	mov	x21, x0
   1a438:	cbnz	x0, 1a2b0 <PyInit__decimal@@Base+0x137fc>
   1a43c:	ldr	x8, [x20]
   1a440:	subs	x8, x8, #0x1
   1a444:	str	x8, [x20]
   1a448:	b.ne	1a454 <PyInit__decimal@@Base+0x139a0>  // b.any
   1a44c:	mov	x0, x20
   1a450:	bl	6510 <_Py_Dealloc@plt>
   1a454:	mov	x22, xzr
   1a458:	mov	x0, x22
   1a45c:	ldp	x20, x19, [sp, #64]
   1a460:	ldp	x22, x21, [sp, #48]
   1a464:	ldp	x29, x30, [sp, #32]
   1a468:	add	sp, sp, #0x50
   1a46c:	ret
   1a470:	sub	sp, sp, #0x50
   1a474:	stp	x29, x30, [sp, #32]
   1a478:	stp	x22, x21, [sp, #48]
   1a47c:	stp	x20, x19, [sp, #64]
   1a480:	add	x29, sp, #0x20
   1a484:	mov	x8, x1
   1a488:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1a48c:	mov	x19, x0
   1a490:	add	x1, x1, #0x67c
   1a494:	sub	x2, x29, #0x8
   1a498:	add	x3, sp, #0x10
   1a49c:	mov	x0, x8
   1a4a0:	str	wzr, [sp, #12]
   1a4a4:	bl	6820 <PyArg_ParseTuple@plt>
   1a4a8:	cbz	w0, 1a6b0 <PyInit__decimal@@Base+0x13bfc>
   1a4ac:	ldur	x20, [x29, #-8]
   1a4b0:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1a4b4:	add	x22, x22, #0xe60
   1a4b8:	ldr	x0, [x20, #8]
   1a4bc:	cmp	x0, x22
   1a4c0:	b.eq	1a4d4 <PyInit__decimal@@Base+0x13a20>  // b.none
   1a4c4:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a4c8:	add	x1, x1, #0xe60
   1a4cc:	bl	6900 <PyType_IsSubtype@plt>
   1a4d0:	cbz	w0, 1a5bc <PyInit__decimal@@Base+0x13b08>
   1a4d4:	ldr	x8, [x20]
   1a4d8:	add	x8, x8, #0x1
   1a4dc:	str	x8, [x20]
   1a4e0:	ldr	x21, [sp, #16]
   1a4e4:	ldr	x0, [x21, #8]
   1a4e8:	cmp	x0, x22
   1a4ec:	b.eq	1a500 <PyInit__decimal@@Base+0x13a4c>  // b.none
   1a4f0:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a4f4:	add	x1, x1, #0xe60
   1a4f8:	bl	6900 <PyType_IsSubtype@plt>
   1a4fc:	cbz	w0, 1a5e8 <PyInit__decimal@@Base+0x13b34>
   1a500:	ldr	x8, [x21]
   1a504:	add	x8, x8, #0x1
   1a508:	str	x8, [x21]
   1a50c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a510:	add	x0, x0, #0xe60
   1a514:	bl	6890 <_PyObject_New@plt>
   1a518:	cbz	x0, 1a58c <PyInit__decimal@@Base+0x13ad8>
   1a51c:	mov	w8, #0x30                  	// #48
   1a520:	mov	x22, x0
   1a524:	strb	w8, [x0, #24]!
   1a528:	mov	x9, #0xffffffffffffffff    	// #-1
   1a52c:	mov	w10, #0x4                   	// #4
   1a530:	add	x1, x20, #0x18
   1a534:	add	x2, x21, #0x18
   1a538:	add	x8, x0, #0x30
   1a53c:	add	x3, x19, #0x10
   1a540:	add	x4, sp, #0xc
   1a544:	stur	x9, [x0, #-8]
   1a548:	stp	xzr, xzr, [x0, #8]
   1a54c:	stp	xzr, x10, [x0, #24]
   1a550:	str	x8, [x0, #40]
   1a554:	bl	28760 <PyInit__decimal@@Base+0x21cac>
   1a558:	ldr	x8, [x20]
   1a55c:	subs	x8, x8, #0x1
   1a560:	str	x8, [x20]
   1a564:	b.eq	1a614 <PyInit__decimal@@Base+0x13b60>  // b.none
   1a568:	ldr	x8, [x21]
   1a56c:	subs	x8, x8, #0x1
   1a570:	str	x8, [x21]
   1a574:	b.eq	1a62c <PyInit__decimal@@Base+0x13b78>  // b.none
   1a578:	ldr	w1, [sp, #12]
   1a57c:	mov	x0, x19
   1a580:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a584:	cbnz	w0, 1a644 <PyInit__decimal@@Base+0x13b90>
   1a588:	b	1a6b4 <PyInit__decimal@@Base+0x13c00>
   1a58c:	ldr	x8, [x20]
   1a590:	subs	x8, x8, #0x1
   1a594:	str	x8, [x20]
   1a598:	b.ne	1a5a4 <PyInit__decimal@@Base+0x13af0>  // b.any
   1a59c:	mov	x0, x20
   1a5a0:	bl	6510 <_Py_Dealloc@plt>
   1a5a4:	ldr	x8, [x21]
   1a5a8:	subs	x8, x8, #0x1
   1a5ac:	str	x8, [x21]
   1a5b0:	b.ne	1a6b0 <PyInit__decimal@@Base+0x13bfc>  // b.any
   1a5b4:	mov	x0, x21
   1a5b8:	b	1a6ac <PyInit__decimal@@Base+0x13bf8>
   1a5bc:	ldr	x8, [x20, #8]
   1a5c0:	ldrb	w9, [x8, #171]
   1a5c4:	tbnz	w9, #0, 1a65c <PyInit__decimal@@Base+0x13ba8>
   1a5c8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a5cc:	ldr	x9, [x9, #3936]
   1a5d0:	ldr	x2, [x8, #24]
   1a5d4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a5d8:	add	x1, x1, #0xb93
   1a5dc:	ldr	x0, [x9]
   1a5e0:	bl	6950 <PyErr_Format@plt>
   1a5e4:	b	1a6b0 <PyInit__decimal@@Base+0x13bfc>
   1a5e8:	ldr	x8, [x21, #8]
   1a5ec:	ldrb	w9, [x8, #171]
   1a5f0:	tbnz	w9, #0, 1a67c <PyInit__decimal@@Base+0x13bc8>
   1a5f4:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a5f8:	ldr	x9, [x9, #3936]
   1a5fc:	ldr	x2, [x8, #24]
   1a600:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a604:	add	x1, x1, #0xb93
   1a608:	ldr	x0, [x9]
   1a60c:	bl	6950 <PyErr_Format@plt>
   1a610:	b	1a698 <PyInit__decimal@@Base+0x13be4>
   1a614:	mov	x0, x20
   1a618:	bl	6510 <_Py_Dealloc@plt>
   1a61c:	ldr	x8, [x21]
   1a620:	subs	x8, x8, #0x1
   1a624:	str	x8, [x21]
   1a628:	b.ne	1a578 <PyInit__decimal@@Base+0x13ac4>  // b.any
   1a62c:	mov	x0, x21
   1a630:	bl	6510 <_Py_Dealloc@plt>
   1a634:	ldr	w1, [sp, #12]
   1a638:	mov	x0, x19
   1a63c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a640:	cbz	w0, 1a6b4 <PyInit__decimal@@Base+0x13c00>
   1a644:	ldr	x8, [x22]
   1a648:	subs	x8, x8, #0x1
   1a64c:	str	x8, [x22]
   1a650:	b.ne	1a6b0 <PyInit__decimal@@Base+0x13bfc>  // b.any
   1a654:	mov	x0, x22
   1a658:	b	1a6ac <PyInit__decimal@@Base+0x13bf8>
   1a65c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a660:	add	x0, x0, #0xe60
   1a664:	mov	x1, x20
   1a668:	mov	x2, x19
   1a66c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a670:	mov	x20, x0
   1a674:	cbnz	x0, 1a4e0 <PyInit__decimal@@Base+0x13a2c>
   1a678:	b	1a6b0 <PyInit__decimal@@Base+0x13bfc>
   1a67c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a680:	add	x0, x0, #0xe60
   1a684:	mov	x1, x21
   1a688:	mov	x2, x19
   1a68c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a690:	mov	x21, x0
   1a694:	cbnz	x0, 1a50c <PyInit__decimal@@Base+0x13a58>
   1a698:	ldr	x8, [x20]
   1a69c:	subs	x8, x8, #0x1
   1a6a0:	str	x8, [x20]
   1a6a4:	b.ne	1a6b0 <PyInit__decimal@@Base+0x13bfc>  // b.any
   1a6a8:	mov	x0, x20
   1a6ac:	bl	6510 <_Py_Dealloc@plt>
   1a6b0:	mov	x22, xzr
   1a6b4:	mov	x0, x22
   1a6b8:	ldp	x20, x19, [sp, #64]
   1a6bc:	ldp	x22, x21, [sp, #48]
   1a6c0:	ldp	x29, x30, [sp, #32]
   1a6c4:	add	sp, sp, #0x50
   1a6c8:	ret
   1a6cc:	sub	sp, sp, #0x40
   1a6d0:	stp	x29, x30, [sp, #16]
   1a6d4:	stp	x22, x21, [sp, #32]
   1a6d8:	stp	x20, x19, [sp, #48]
   1a6dc:	add	x29, sp, #0x10
   1a6e0:	mov	x8, x1
   1a6e4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1a6e8:	mov	x20, x0
   1a6ec:	add	x1, x1, #0x67c
   1a6f0:	add	x2, sp, #0x8
   1a6f4:	mov	x3, sp
   1a6f8:	mov	x0, x8
   1a6fc:	bl	6820 <PyArg_ParseTuple@plt>
   1a700:	cbz	w0, 1a888 <PyInit__decimal@@Base+0x13dd4>
   1a704:	ldr	x19, [sp, #8]
   1a708:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1a70c:	add	x22, x22, #0xe60
   1a710:	ldr	x0, [x19, #8]
   1a714:	cmp	x0, x22
   1a718:	b.eq	1a72c <PyInit__decimal@@Base+0x13c78>  // b.none
   1a71c:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a720:	add	x1, x1, #0xe60
   1a724:	bl	6900 <PyType_IsSubtype@plt>
   1a728:	cbz	w0, 1a7dc <PyInit__decimal@@Base+0x13d28>
   1a72c:	ldr	x8, [x19]
   1a730:	add	x8, x8, #0x1
   1a734:	str	x8, [x19]
   1a738:	ldr	x21, [sp]
   1a73c:	ldr	x0, [x21, #8]
   1a740:	cmp	x0, x22
   1a744:	b.eq	1a758 <PyInit__decimal@@Base+0x13ca4>  // b.none
   1a748:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a74c:	add	x1, x1, #0xe60
   1a750:	bl	6900 <PyType_IsSubtype@plt>
   1a754:	cbz	w0, 1a808 <PyInit__decimal@@Base+0x13d54>
   1a758:	ldr	x8, [x21]
   1a75c:	add	x8, x8, #0x1
   1a760:	str	x8, [x21]
   1a764:	add	x0, x19, #0x18
   1a768:	add	x1, x21, #0x18
   1a76c:	bl	38628 <PyInit__decimal@@Base+0x31b74>
   1a770:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a774:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a778:	ldr	x8, [x8, #4024]
   1a77c:	ldr	x9, [x9, #3976]
   1a780:	cmp	w0, #0x0
   1a784:	csel	x20, x9, x8, eq  // eq = none
   1a788:	ldr	x8, [x20]
   1a78c:	add	x8, x8, #0x1
   1a790:	str	x8, [x20]
   1a794:	ldr	x8, [x19]
   1a798:	subs	x8, x8, #0x1
   1a79c:	str	x8, [x19]
   1a7a0:	b.eq	1a7b8 <PyInit__decimal@@Base+0x13d04>  // b.none
   1a7a4:	ldr	x8, [x21]
   1a7a8:	subs	x8, x8, #0x1
   1a7ac:	str	x8, [x21]
   1a7b0:	b.ne	1a88c <PyInit__decimal@@Base+0x13dd8>  // b.any
   1a7b4:	b	1a7d0 <PyInit__decimal@@Base+0x13d1c>
   1a7b8:	mov	x0, x19
   1a7bc:	bl	6510 <_Py_Dealloc@plt>
   1a7c0:	ldr	x8, [x21]
   1a7c4:	subs	x8, x8, #0x1
   1a7c8:	str	x8, [x21]
   1a7cc:	b.ne	1a88c <PyInit__decimal@@Base+0x13dd8>  // b.any
   1a7d0:	mov	x0, x21
   1a7d4:	bl	6510 <_Py_Dealloc@plt>
   1a7d8:	b	1a88c <PyInit__decimal@@Base+0x13dd8>
   1a7dc:	ldr	x8, [x19, #8]
   1a7e0:	ldrb	w9, [x8, #171]
   1a7e4:	tbnz	w9, #0, 1a834 <PyInit__decimal@@Base+0x13d80>
   1a7e8:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a7ec:	ldr	x9, [x9, #3936]
   1a7f0:	ldr	x2, [x8, #24]
   1a7f4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a7f8:	add	x1, x1, #0xb93
   1a7fc:	ldr	x0, [x9]
   1a800:	bl	6950 <PyErr_Format@plt>
   1a804:	b	1a888 <PyInit__decimal@@Base+0x13dd4>
   1a808:	ldr	x8, [x21, #8]
   1a80c:	ldrb	w9, [x8, #171]
   1a810:	tbnz	w9, #0, 1a854 <PyInit__decimal@@Base+0x13da0>
   1a814:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1a818:	ldr	x9, [x9, #3936]
   1a81c:	ldr	x2, [x8, #24]
   1a820:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1a824:	add	x1, x1, #0xb93
   1a828:	ldr	x0, [x9]
   1a82c:	bl	6950 <PyErr_Format@plt>
   1a830:	b	1a870 <PyInit__decimal@@Base+0x13dbc>
   1a834:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a838:	add	x0, x0, #0xe60
   1a83c:	mov	x1, x19
   1a840:	mov	x2, x20
   1a844:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a848:	mov	x19, x0
   1a84c:	cbnz	x0, 1a738 <PyInit__decimal@@Base+0x13c84>
   1a850:	b	1a888 <PyInit__decimal@@Base+0x13dd4>
   1a854:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a858:	add	x0, x0, #0xe60
   1a85c:	mov	x1, x21
   1a860:	mov	x2, x20
   1a864:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1a868:	mov	x21, x0
   1a86c:	cbnz	x0, 1a764 <PyInit__decimal@@Base+0x13cb0>
   1a870:	ldr	x8, [x19]
   1a874:	subs	x8, x8, #0x1
   1a878:	str	x8, [x19]
   1a87c:	b.ne	1a888 <PyInit__decimal@@Base+0x13dd4>  // b.any
   1a880:	mov	x0, x19
   1a884:	bl	6510 <_Py_Dealloc@plt>
   1a888:	mov	x20, xzr
   1a88c:	mov	x0, x20
   1a890:	ldp	x20, x19, [sp, #48]
   1a894:	ldp	x22, x21, [sp, #32]
   1a898:	ldp	x29, x30, [sp, #16]
   1a89c:	add	sp, sp, #0x40
   1a8a0:	ret
   1a8a4:	sub	sp, sp, #0x50
   1a8a8:	stp	x29, x30, [sp, #32]
   1a8ac:	stp	x22, x21, [sp, #48]
   1a8b0:	stp	x20, x19, [sp, #64]
   1a8b4:	add	x29, sp, #0x20
   1a8b8:	mov	x8, x1
   1a8bc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1a8c0:	mov	x19, x0
   1a8c4:	add	x1, x1, #0x67c
   1a8c8:	sub	x2, x29, #0x8
   1a8cc:	add	x3, sp, #0x10
   1a8d0:	mov	x0, x8
   1a8d4:	str	wzr, [sp, #12]
   1a8d8:	bl	6820 <PyArg_ParseTuple@plt>
   1a8dc:	cbz	w0, 1aae4 <PyInit__decimal@@Base+0x14030>
   1a8e0:	ldur	x20, [x29, #-8]
   1a8e4:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1a8e8:	add	x22, x22, #0xe60
   1a8ec:	ldr	x0, [x20, #8]
   1a8f0:	cmp	x0, x22
   1a8f4:	b.eq	1a908 <PyInit__decimal@@Base+0x13e54>  // b.none
   1a8f8:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a8fc:	add	x1, x1, #0xe60
   1a900:	bl	6900 <PyType_IsSubtype@plt>
   1a904:	cbz	w0, 1a9f0 <PyInit__decimal@@Base+0x13f3c>
   1a908:	ldr	x8, [x20]
   1a90c:	add	x8, x8, #0x1
   1a910:	str	x8, [x20]
   1a914:	ldr	x21, [sp, #16]
   1a918:	ldr	x0, [x21, #8]
   1a91c:	cmp	x0, x22
   1a920:	b.eq	1a934 <PyInit__decimal@@Base+0x13e80>  // b.none
   1a924:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1a928:	add	x1, x1, #0xe60
   1a92c:	bl	6900 <PyType_IsSubtype@plt>
   1a930:	cbz	w0, 1aa1c <PyInit__decimal@@Base+0x13f68>
   1a934:	ldr	x8, [x21]
   1a938:	add	x8, x8, #0x1
   1a93c:	str	x8, [x21]
   1a940:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1a944:	add	x0, x0, #0xe60
   1a948:	bl	6890 <_PyObject_New@plt>
   1a94c:	cbz	x0, 1a9c0 <PyInit__decimal@@Base+0x13f0c>
   1a950:	mov	w8, #0x30                  	// #48
   1a954:	mov	x22, x0
   1a958:	strb	w8, [x0, #24]!
   1a95c:	mov	x9, #0xffffffffffffffff    	// #-1
   1a960:	mov	w10, #0x4                   	// #4
   1a964:	add	x1, x20, #0x18
   1a968:	add	x2, x21, #0x18
   1a96c:	add	x8, x0, #0x30
   1a970:	add	x3, x19, #0x10
   1a974:	add	x4, sp, #0xc
   1a978:	stur	x9, [x0, #-8]
   1a97c:	stp	xzr, xzr, [x0, #8]
   1a980:	stp	xzr, x10, [x0, #24]
   1a984:	str	x8, [x0, #40]
   1a988:	bl	28c44 <PyInit__decimal@@Base+0x22190>
   1a98c:	ldr	x8, [x20]
   1a990:	subs	x8, x8, #0x1
   1a994:	str	x8, [x20]
   1a998:	b.eq	1aa48 <PyInit__decimal@@Base+0x13f94>  // b.none
   1a99c:	ldr	x8, [x21]
   1a9a0:	subs	x8, x8, #0x1
   1a9a4:	str	x8, [x21]
   1a9a8:	b.eq	1aa60 <PyInit__decimal@@Base+0x13fac>  // b.none
   1a9ac:	ldr	w1, [sp, #12]
   1a9b0:	mov	x0, x19
   1a9b4:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1a9b8:	cbnz	w0, 1aa78 <PyInit__decimal@@Base+0x13fc4>
   1a9bc:	b	1aae8 <PyInit__decimal@@Base+0x14034>
   1a9c0:	ldr	x8, [x20]
   1a9c4:	subs	x8, x8, #0x1
   1a9c8:	str	x8, [x20]
   1a9cc:	b.ne	1a9d8 <PyInit__decimal@@Base+0x13f24>  // b.any
   1a9d0:	mov	x0, x20
   1a9d4:	bl	6510 <_Py_Dealloc@plt>
   1a9d8:	ldr	x8, [x21]
   1a9dc:	subs	x8, x8, #0x1
   1a9e0:	str	x8, [x21]
   1a9e4:	b.ne	1aae4 <PyInit__decimal@@Base+0x14030>  // b.any
   1a9e8:	mov	x0, x21
   1a9ec:	b	1aae0 <PyInit__decimal@@Base+0x1402c>
   1a9f0:	ldr	x8, [x20, #8]
   1a9f4:	ldrb	w9, [x8, #171]
   1a9f8:	tbnz	w9, #0, 1aa90 <PyInit__decimal@@Base+0x13fdc>
   1a9fc:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1aa00:	ldr	x9, [x9, #3936]
   1aa04:	ldr	x2, [x8, #24]
   1aa08:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1aa0c:	add	x1, x1, #0xb93
   1aa10:	ldr	x0, [x9]
   1aa14:	bl	6950 <PyErr_Format@plt>
   1aa18:	b	1aae4 <PyInit__decimal@@Base+0x14030>
   1aa1c:	ldr	x8, [x21, #8]
   1aa20:	ldrb	w9, [x8, #171]
   1aa24:	tbnz	w9, #0, 1aab0 <PyInit__decimal@@Base+0x13ffc>
   1aa28:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1aa2c:	ldr	x9, [x9, #3936]
   1aa30:	ldr	x2, [x8, #24]
   1aa34:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1aa38:	add	x1, x1, #0xb93
   1aa3c:	ldr	x0, [x9]
   1aa40:	bl	6950 <PyErr_Format@plt>
   1aa44:	b	1aacc <PyInit__decimal@@Base+0x14018>
   1aa48:	mov	x0, x20
   1aa4c:	bl	6510 <_Py_Dealloc@plt>
   1aa50:	ldr	x8, [x21]
   1aa54:	subs	x8, x8, #0x1
   1aa58:	str	x8, [x21]
   1aa5c:	b.ne	1a9ac <PyInit__decimal@@Base+0x13ef8>  // b.any
   1aa60:	mov	x0, x21
   1aa64:	bl	6510 <_Py_Dealloc@plt>
   1aa68:	ldr	w1, [sp, #12]
   1aa6c:	mov	x0, x19
   1aa70:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1aa74:	cbz	w0, 1aae8 <PyInit__decimal@@Base+0x14034>
   1aa78:	ldr	x8, [x22]
   1aa7c:	subs	x8, x8, #0x1
   1aa80:	str	x8, [x22]
   1aa84:	b.ne	1aae4 <PyInit__decimal@@Base+0x14030>  // b.any
   1aa88:	mov	x0, x22
   1aa8c:	b	1aae0 <PyInit__decimal@@Base+0x1402c>
   1aa90:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1aa94:	add	x0, x0, #0xe60
   1aa98:	mov	x1, x20
   1aa9c:	mov	x2, x19
   1aaa0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1aaa4:	mov	x20, x0
   1aaa8:	cbnz	x0, 1a914 <PyInit__decimal@@Base+0x13e60>
   1aaac:	b	1aae4 <PyInit__decimal@@Base+0x14030>
   1aab0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1aab4:	add	x0, x0, #0xe60
   1aab8:	mov	x1, x21
   1aabc:	mov	x2, x19
   1aac0:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1aac4:	mov	x21, x0
   1aac8:	cbnz	x0, 1a940 <PyInit__decimal@@Base+0x13e8c>
   1aacc:	ldr	x8, [x20]
   1aad0:	subs	x8, x8, #0x1
   1aad4:	str	x8, [x20]
   1aad8:	b.ne	1aae4 <PyInit__decimal@@Base+0x14030>  // b.any
   1aadc:	mov	x0, x20
   1aae0:	bl	6510 <_Py_Dealloc@plt>
   1aae4:	mov	x22, xzr
   1aae8:	mov	x0, x22
   1aaec:	ldp	x20, x19, [sp, #64]
   1aaf0:	ldp	x22, x21, [sp, #48]
   1aaf4:	ldp	x29, x30, [sp, #32]
   1aaf8:	add	sp, sp, #0x50
   1aafc:	ret
   1ab00:	sub	sp, sp, #0x50
   1ab04:	stp	x29, x30, [sp, #32]
   1ab08:	stp	x22, x21, [sp, #48]
   1ab0c:	stp	x20, x19, [sp, #64]
   1ab10:	add	x29, sp, #0x20
   1ab14:	mov	x8, x1
   1ab18:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1ab1c:	mov	x19, x0
   1ab20:	add	x1, x1, #0x67c
   1ab24:	sub	x2, x29, #0x8
   1ab28:	add	x3, sp, #0x10
   1ab2c:	mov	x0, x8
   1ab30:	str	wzr, [sp, #12]
   1ab34:	bl	6820 <PyArg_ParseTuple@plt>
   1ab38:	cbz	w0, 1ad40 <PyInit__decimal@@Base+0x1428c>
   1ab3c:	ldur	x20, [x29, #-8]
   1ab40:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1ab44:	add	x22, x22, #0xe60
   1ab48:	ldr	x0, [x20, #8]
   1ab4c:	cmp	x0, x22
   1ab50:	b.eq	1ab64 <PyInit__decimal@@Base+0x140b0>  // b.none
   1ab54:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1ab58:	add	x1, x1, #0xe60
   1ab5c:	bl	6900 <PyType_IsSubtype@plt>
   1ab60:	cbz	w0, 1ac4c <PyInit__decimal@@Base+0x14198>
   1ab64:	ldr	x8, [x20]
   1ab68:	add	x8, x8, #0x1
   1ab6c:	str	x8, [x20]
   1ab70:	ldr	x21, [sp, #16]
   1ab74:	ldr	x0, [x21, #8]
   1ab78:	cmp	x0, x22
   1ab7c:	b.eq	1ab90 <PyInit__decimal@@Base+0x140dc>  // b.none
   1ab80:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1ab84:	add	x1, x1, #0xe60
   1ab88:	bl	6900 <PyType_IsSubtype@plt>
   1ab8c:	cbz	w0, 1ac78 <PyInit__decimal@@Base+0x141c4>
   1ab90:	ldr	x8, [x21]
   1ab94:	add	x8, x8, #0x1
   1ab98:	str	x8, [x21]
   1ab9c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1aba0:	add	x0, x0, #0xe60
   1aba4:	bl	6890 <_PyObject_New@plt>
   1aba8:	cbz	x0, 1ac1c <PyInit__decimal@@Base+0x14168>
   1abac:	mov	w8, #0x30                  	// #48
   1abb0:	mov	x22, x0
   1abb4:	strb	w8, [x0, #24]!
   1abb8:	mov	x9, #0xffffffffffffffff    	// #-1
   1abbc:	mov	w10, #0x4                   	// #4
   1abc0:	add	x1, x20, #0x18
   1abc4:	add	x2, x21, #0x18
   1abc8:	add	x8, x0, #0x30
   1abcc:	add	x3, x19, #0x10
   1abd0:	add	x4, sp, #0xc
   1abd4:	stur	x9, [x0, #-8]
   1abd8:	stp	xzr, xzr, [x0, #8]
   1abdc:	stp	xzr, x10, [x0, #24]
   1abe0:	str	x8, [x0, #40]
   1abe4:	bl	29194 <PyInit__decimal@@Base+0x226e0>
   1abe8:	ldr	x8, [x20]
   1abec:	subs	x8, x8, #0x1
   1abf0:	str	x8, [x20]
   1abf4:	b.eq	1aca4 <PyInit__decimal@@Base+0x141f0>  // b.none
   1abf8:	ldr	x8, [x21]
   1abfc:	subs	x8, x8, #0x1
   1ac00:	str	x8, [x21]
   1ac04:	b.eq	1acbc <PyInit__decimal@@Base+0x14208>  // b.none
   1ac08:	ldr	w1, [sp, #12]
   1ac0c:	mov	x0, x19
   1ac10:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1ac14:	cbnz	w0, 1acd4 <PyInit__decimal@@Base+0x14220>
   1ac18:	b	1ad44 <PyInit__decimal@@Base+0x14290>
   1ac1c:	ldr	x8, [x20]
   1ac20:	subs	x8, x8, #0x1
   1ac24:	str	x8, [x20]
   1ac28:	b.ne	1ac34 <PyInit__decimal@@Base+0x14180>  // b.any
   1ac2c:	mov	x0, x20
   1ac30:	bl	6510 <_Py_Dealloc@plt>
   1ac34:	ldr	x8, [x21]
   1ac38:	subs	x8, x8, #0x1
   1ac3c:	str	x8, [x21]
   1ac40:	b.ne	1ad40 <PyInit__decimal@@Base+0x1428c>  // b.any
   1ac44:	mov	x0, x21
   1ac48:	b	1ad3c <PyInit__decimal@@Base+0x14288>
   1ac4c:	ldr	x8, [x20, #8]
   1ac50:	ldrb	w9, [x8, #171]
   1ac54:	tbnz	w9, #0, 1acec <PyInit__decimal@@Base+0x14238>
   1ac58:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1ac5c:	ldr	x9, [x9, #3936]
   1ac60:	ldr	x2, [x8, #24]
   1ac64:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1ac68:	add	x1, x1, #0xb93
   1ac6c:	ldr	x0, [x9]
   1ac70:	bl	6950 <PyErr_Format@plt>
   1ac74:	b	1ad40 <PyInit__decimal@@Base+0x1428c>
   1ac78:	ldr	x8, [x21, #8]
   1ac7c:	ldrb	w9, [x8, #171]
   1ac80:	tbnz	w9, #0, 1ad0c <PyInit__decimal@@Base+0x14258>
   1ac84:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1ac88:	ldr	x9, [x9, #3936]
   1ac8c:	ldr	x2, [x8, #24]
   1ac90:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1ac94:	add	x1, x1, #0xb93
   1ac98:	ldr	x0, [x9]
   1ac9c:	bl	6950 <PyErr_Format@plt>
   1aca0:	b	1ad28 <PyInit__decimal@@Base+0x14274>
   1aca4:	mov	x0, x20
   1aca8:	bl	6510 <_Py_Dealloc@plt>
   1acac:	ldr	x8, [x21]
   1acb0:	subs	x8, x8, #0x1
   1acb4:	str	x8, [x21]
   1acb8:	b.ne	1ac08 <PyInit__decimal@@Base+0x14154>  // b.any
   1acbc:	mov	x0, x21
   1acc0:	bl	6510 <_Py_Dealloc@plt>
   1acc4:	ldr	w1, [sp, #12]
   1acc8:	mov	x0, x19
   1accc:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1acd0:	cbz	w0, 1ad44 <PyInit__decimal@@Base+0x14290>
   1acd4:	ldr	x8, [x22]
   1acd8:	subs	x8, x8, #0x1
   1acdc:	str	x8, [x22]
   1ace0:	b.ne	1ad40 <PyInit__decimal@@Base+0x1428c>  // b.any
   1ace4:	mov	x0, x22
   1ace8:	b	1ad3c <PyInit__decimal@@Base+0x14288>
   1acec:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1acf0:	add	x0, x0, #0xe60
   1acf4:	mov	x1, x20
   1acf8:	mov	x2, x19
   1acfc:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1ad00:	mov	x20, x0
   1ad04:	cbnz	x0, 1ab70 <PyInit__decimal@@Base+0x140bc>
   1ad08:	b	1ad40 <PyInit__decimal@@Base+0x1428c>
   1ad0c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1ad10:	add	x0, x0, #0xe60
   1ad14:	mov	x1, x21
   1ad18:	mov	x2, x19
   1ad1c:	bl	abdc <PyInit__decimal@@Base+0x4128>
   1ad20:	mov	x21, x0
   1ad24:	cbnz	x0, 1ab9c <PyInit__decimal@@Base+0x140e8>
   1ad28:	ldr	x8, [x20]
   1ad2c:	subs	x8, x8, #0x1
   1ad30:	str	x8, [x20]
   1ad34:	b.ne	1ad40 <PyInit__decimal@@Base+0x1428c>  // b.any
   1ad38:	mov	x0, x20
   1ad3c:	bl	6510 <_Py_Dealloc@plt>
   1ad40:	mov	x22, xzr
   1ad44:	mov	x0, x22
   1ad48:	ldp	x20, x19, [sp, #64]
   1ad4c:	ldp	x22, x21, [sp, #48]
   1ad50:	ldp	x29, x30, [sp, #32]
   1ad54:	add	sp, sp, #0x50
   1ad58:	ret
   1ad5c:	str	wzr, [x0, #44]
   1ad60:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1ad64:	ldr	x0, [x0, #4008]
   1ad68:	ldr	x8, [x0]
   1ad6c:	add	x8, x8, #0x1
   1ad70:	str	x8, [x0]
   1ad74:	ret
   1ad78:	str	wzr, [x0, #40]
   1ad7c:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1ad80:	ldr	x0, [x0, #4008]
   1ad84:	ldr	x8, [x0]
   1ad88:	add	x8, x8, #0x1
   1ad8c:	str	x8, [x0]
   1ad90:	ret
   1ad94:	sub	sp, sp, #0x50
   1ad98:	stp	x29, x30, [sp, #16]
   1ad9c:	str	x23, [sp, #32]
   1ada0:	stp	x22, x21, [sp, #48]
   1ada4:	stp	x20, x19, [sp, #64]
   1ada8:	add	x29, sp, #0x10
   1adac:	ldr	w21, [x0, #44]
   1adb0:	mov	x20, x0
   1adb4:	mov	x0, xzr
   1adb8:	bl	63f0 <PyList_New@plt>
   1adbc:	cbz	x0, 1ae94 <PyInit__decimal@@Base+0x143e0>
   1adc0:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1adc4:	ldr	x8, [x22, #3360]
   1adc8:	mov	x19, x0
   1adcc:	cbz	x8, 1ae20 <PyInit__decimal@@Base+0x1436c>
   1add0:	adrp	x23, 58000 <PyInit__decimal@@Base+0x5154c>
   1add4:	add	x23, x23, #0xd40
   1add8:	b	1ade4 <PyInit__decimal@@Base+0x14330>
   1addc:	ldr	x8, [x23], #32
   1ade0:	cbz	x8, 1ae20 <PyInit__decimal@@Base+0x1436c>
   1ade4:	ldur	w8, [x23, #-16]
   1ade8:	tst	w8, w21
   1adec:	b.eq	1addc <PyInit__decimal@@Base+0x14328>  // b.none
   1adf0:	ldur	x1, [x23, #-8]
   1adf4:	mov	x0, x19
   1adf8:	bl	66b0 <PyList_Append@plt>
   1adfc:	tbz	w0, #31, 1addc <PyInit__decimal@@Base+0x14328>
   1ae00:	ldr	x8, [x19]
   1ae04:	subs	x8, x8, #0x1
   1ae08:	str	x8, [x19]
   1ae0c:	b.ne	1ae94 <PyInit__decimal@@Base+0x143e0>  // b.any
   1ae10:	mov	x0, x19
   1ae14:	bl	6510 <_Py_Dealloc@plt>
   1ae18:	mov	x20, xzr
   1ae1c:	b	1ae98 <PyInit__decimal@@Base+0x143e4>
   1ae20:	ldr	w23, [x20, #40]
   1ae24:	mov	x0, xzr
   1ae28:	bl	63f0 <PyList_New@plt>
   1ae2c:	cbz	x0, 1ae84 <PyInit__decimal@@Base+0x143d0>
   1ae30:	ldr	x8, [x22, #3360]
   1ae34:	mov	x21, x0
   1ae38:	cbz	x8, 1aeb4 <PyInit__decimal@@Base+0x14400>
   1ae3c:	adrp	x22, 58000 <PyInit__decimal@@Base+0x5154c>
   1ae40:	add	x22, x22, #0xd40
   1ae44:	b	1ae50 <PyInit__decimal@@Base+0x1439c>
   1ae48:	ldr	x8, [x22], #32
   1ae4c:	cbz	x8, 1aeb4 <PyInit__decimal@@Base+0x14400>
   1ae50:	ldur	w8, [x22, #-16]
   1ae54:	tst	w8, w23
   1ae58:	b.eq	1ae48 <PyInit__decimal@@Base+0x14394>  // b.none
   1ae5c:	ldur	x1, [x22, #-8]
   1ae60:	mov	x0, x21
   1ae64:	bl	66b0 <PyList_Append@plt>
   1ae68:	tbz	w0, #31, 1ae48 <PyInit__decimal@@Base+0x14394>
   1ae6c:	ldr	x8, [x21]
   1ae70:	subs	x8, x8, #0x1
   1ae74:	str	x8, [x21]
   1ae78:	b.ne	1ae84 <PyInit__decimal@@Base+0x143d0>  // b.any
   1ae7c:	mov	x0, x21
   1ae80:	bl	6510 <_Py_Dealloc@plt>
   1ae84:	ldr	x8, [x19]
   1ae88:	subs	x8, x8, #0x1
   1ae8c:	str	x8, [x19]
   1ae90:	b.eq	1ae10 <PyInit__decimal@@Base+0x1435c>  // b.none
   1ae94:	mov	x20, xzr
   1ae98:	mov	x0, x20
   1ae9c:	ldp	x20, x19, [sp, #64]
   1aea0:	ldp	x22, x21, [sp, #48]
   1aea4:	ldr	x23, [sp, #32]
   1aea8:	ldp	x29, x30, [sp, #16]
   1aeac:	add	sp, sp, #0x50
   1aeb0:	ret
   1aeb4:	ldp	w8, w7, [x20, #52]
   1aeb8:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   1aebc:	sxtw	x8, w8
   1aec0:	add	x9, x9, #0x4e0
   1aec4:	ldp	x1, x2, [x20, #8]
   1aec8:	ldp	x5, x4, [x20, #24]
   1aecc:	ldr	x3, [x9, x8, lsl #3]
   1aed0:	ldr	w6, [x20, #80]
   1aed4:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   1aed8:	add	x0, x0, #0x56f
   1aedc:	stp	x19, x21, [sp]
   1aee0:	bl	6710 <Py_BuildValue@plt>
   1aee4:	ldr	x8, [x19]
   1aee8:	mov	x20, x0
   1aeec:	subs	x8, x8, #0x1
   1aef0:	str	x8, [x19]
   1aef4:	b.eq	1af0c <PyInit__decimal@@Base+0x14458>  // b.none
   1aef8:	ldr	x8, [x21]
   1aefc:	subs	x8, x8, #0x1
   1af00:	str	x8, [x21]
   1af04:	b.ne	1ae98 <PyInit__decimal@@Base+0x143e4>  // b.any
   1af08:	b	1af24 <PyInit__decimal@@Base+0x14470>
   1af0c:	mov	x0, x19
   1af10:	bl	6510 <_Py_Dealloc@plt>
   1af14:	ldr	x8, [x21]
   1af18:	subs	x8, x8, #0x1
   1af1c:	str	x8, [x21]
   1af20:	b.ne	1ae98 <PyInit__decimal@@Base+0x143e4>  // b.any
   1af24:	mov	x0, x21
   1af28:	bl	6510 <_Py_Dealloc@plt>
   1af2c:	b	1ae98 <PyInit__decimal@@Base+0x143e4>
   1af30:	sub	sp, sp, #0x50
   1af34:	stp	x29, x30, [sp, #16]
   1af38:	str	x23, [sp, #32]
   1af3c:	stp	x22, x21, [sp, #48]
   1af40:	stp	x20, x19, [sp, #64]
   1af44:	add	x29, sp, #0x10
   1af48:	mov	x8, x1
   1af4c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1af50:	mov	x19, x0
   1af54:	add	x1, x1, #0xac
   1af58:	add	x2, sp, #0x8
   1af5c:	mov	x0, x8
   1af60:	str	xzr, [sp, #8]
   1af64:	bl	6820 <PyArg_ParseTuple@plt>
   1af68:	cbz	w0, 1b3bc <PyInit__decimal@@Base+0x14908>
   1af6c:	ldr	x21, [sp, #8]
   1af70:	cbz	x21, 1b01c <PyInit__decimal@@Base+0x14568>
   1af74:	ldr	x0, [x21, #8]
   1af78:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1af7c:	add	x8, x8, #0xe60
   1af80:	cmp	x0, x8
   1af84:	b.eq	1af98 <PyInit__decimal@@Base+0x144e4>  // b.none
   1af88:	adrp	x1, 58000 <PyInit__decimal@@Base+0x5154c>
   1af8c:	add	x1, x1, #0xe60
   1af90:	bl	6900 <PyType_IsSubtype@plt>
   1af94:	cbz	w0, 1b0ac <PyInit__decimal@@Base+0x145f8>
   1af98:	add	x20, x21, #0x18
   1af9c:	mov	x0, x20
   1afa0:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
   1afa4:	cbz	w0, 1b098 <PyInit__decimal@@Base+0x145e4>
   1afa8:	ldr	x8, [x19, #16]
   1afac:	ldrsw	x9, [x19, #56]
   1afb0:	ldr	x10, [x20, #16]
   1afb4:	sub	x8, x8, x9
   1afb8:	cmp	x10, x8
   1afbc:	b.le	1b098 <PyInit__decimal@@Base+0x145e4>
   1afc0:	mov	w1, #0x2                   	// #2
   1afc4:	mov	x0, x19
   1afc8:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1afcc:	cbnz	w0, 1b3bc <PyInit__decimal@@Base+0x14908>
   1afd0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1afd4:	add	x0, x0, #0xe60
   1afd8:	bl	6890 <_PyObject_New@plt>
   1afdc:	mov	x20, x0
   1afe0:	cbz	x0, 1b3c0 <PyInit__decimal@@Base+0x1490c>
   1afe4:	mov	w8, #0x30                  	// #48
   1afe8:	mov	x0, x20
   1afec:	strb	w8, [x0, #24]!
   1aff0:	mov	x9, #0xffffffffffffffff    	// #-1
   1aff4:	mov	w10, #0x4                   	// #4
   1aff8:	add	x8, x0, #0x30
   1affc:	mov	w2, #0x4                   	// #4
   1b000:	mov	w1, wzr
   1b004:	stur	x9, [x0, #-8]
   1b008:	stp	xzr, xzr, [x0, #8]
   1b00c:	stp	xzr, x10, [x0, #24]
   1b010:	str	x8, [x0, #40]
   1b014:	bl	232d4 <PyInit__decimal@@Base+0x1c820>
   1b018:	b	1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b01c:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b020:	add	x0, x0, #0xe60
   1b024:	str	wzr, [x29, #28]
   1b028:	bl	6890 <_PyObject_New@plt>
   1b02c:	mov	x20, x0
   1b030:	cbz	x0, 1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b034:	mov	w8, #0x30                  	// #48
   1b038:	mov	x0, x20
   1b03c:	strb	w8, [x0, #24]!
   1b040:	mov	x9, #0xffffffffffffffff    	// #-1
   1b044:	mov	w10, #0x4                   	// #4
   1b048:	add	x8, x0, #0x30
   1b04c:	add	x2, x19, #0x10
   1b050:	add	x3, x29, #0x1c
   1b054:	mov	x1, xzr
   1b058:	stur	x9, [x0, #-8]
   1b05c:	stp	xzr, xzr, [x0, #8]
   1b060:	stp	xzr, x10, [x0, #24]
   1b064:	str	x8, [x0, #40]
   1b068:	bl	23aa0 <PyInit__decimal@@Base+0x1cfec>
   1b06c:	ldr	w1, [x29, #28]
   1b070:	mov	x0, x19
   1b074:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b078:	cbz	w0, 1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b07c:	ldr	x8, [x20]
   1b080:	subs	x8, x8, #0x1
   1b084:	str	x8, [x20]
   1b088:	b.ne	1b3bc <PyInit__decimal@@Base+0x14908>  // b.any
   1b08c:	mov	x0, x20
   1b090:	bl	6510 <_Py_Dealloc@plt>
   1b094:	b	1b3bc <PyInit__decimal@@Base+0x14908>
   1b098:	mov	x0, x21
   1b09c:	mov	x1, x19
   1b0a0:	bl	1b45c <PyInit__decimal@@Base+0x149a8>
   1b0a4:	mov	x20, x0
   1b0a8:	b	1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b0ac:	ldr	x0, [x21, #8]
   1b0b0:	ldr	x8, [x0, #168]
   1b0b4:	tbnz	w8, #28, 1b0e8 <PyInit__decimal@@Base+0x14634>
   1b0b8:	tbnz	w8, #24, 1b188 <PyInit__decimal@@Base+0x146d4>
   1b0bc:	tst	x8, #0x6000000
   1b0c0:	b.eq	1b224 <PyInit__decimal@@Base+0x14770>  // b.none
   1b0c4:	tbnz	w8, #26, 1b288 <PyInit__decimal@@Base+0x147d4>
   1b0c8:	tbnz	w8, #25, 1b2dc <PyInit__decimal@@Base+0x14828>
   1b0cc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b0d0:	ldr	x8, [x8, #3936]
   1b0d4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b0d8:	add	x1, x1, #0x23f
   1b0dc:	ldr	x0, [x8]
   1b0e0:	bl	6590 <PyErr_SetString@plt>
   1b0e4:	b	1b3bc <PyInit__decimal@@Base+0x14908>
   1b0e8:	mov	x0, x21
   1b0ec:	mov	w1, wzr
   1b0f0:	mov	w2, wzr
   1b0f4:	bl	13100 <PyInit__decimal@@Base+0xc64c>
   1b0f8:	cbz	x0, 1b3bc <PyInit__decimal@@Base+0x14908>
   1b0fc:	mov	x21, x0
   1b100:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b104:	add	x0, x0, #0xe60
   1b108:	str	wzr, [x29, #28]
   1b10c:	bl	6890 <_PyObject_New@plt>
   1b110:	mov	x20, x0
   1b114:	cbz	x0, 1b17c <PyInit__decimal@@Base+0x146c8>
   1b118:	mov	w8, #0x30                  	// #48
   1b11c:	mov	x0, x20
   1b120:	strb	w8, [x0, #24]!
   1b124:	mov	x9, #0xffffffffffffffff    	// #-1
   1b128:	mov	w10, #0x4                   	// #4
   1b12c:	add	x8, x0, #0x30
   1b130:	add	x2, x19, #0x10
   1b134:	add	x3, x29, #0x1c
   1b138:	mov	x1, x21
   1b13c:	stur	x9, [x0, #-8]
   1b140:	stp	xzr, xzr, [x0, #8]
   1b144:	stp	xzr, x10, [x0, #24]
   1b148:	str	x8, [x0, #40]
   1b14c:	bl	1f054 <PyInit__decimal@@Base+0x185a0>
   1b150:	ldr	w1, [x29, #28]
   1b154:	mov	x0, x19
   1b158:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b15c:	cbz	w0, 1b17c <PyInit__decimal@@Base+0x146c8>
   1b160:	ldr	x8, [x20]
   1b164:	subs	x8, x8, #0x1
   1b168:	str	x8, [x20]
   1b16c:	b.ne	1b178 <PyInit__decimal@@Base+0x146c4>  // b.any
   1b170:	mov	x0, x20
   1b174:	bl	6510 <_Py_Dealloc@plt>
   1b178:	mov	x20, xzr
   1b17c:	mov	x0, x21
   1b180:	bl	64a0 <PyMem_Free@plt>
   1b184:	b	1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b188:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b18c:	add	x0, x0, #0xe60
   1b190:	str	wzr, [x29, #28]
   1b194:	bl	6890 <_PyObject_New@plt>
   1b198:	mov	x20, x0
   1b19c:	cbz	x0, 1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b1a0:	mov	w8, #0x30                  	// #48
   1b1a4:	mov	x22, x20
   1b1a8:	strb	w8, [x22, #24]!
   1b1ac:	mov	x9, #0xffffffffffffffff    	// #-1
   1b1b0:	mov	w10, #0x4                   	// #4
   1b1b4:	add	x8, x22, #0x30
   1b1b8:	stur	x9, [x22, #-8]
   1b1bc:	stp	xzr, xzr, [x22, #8]
   1b1c0:	stp	xzr, x10, [x22, #24]
   1b1c4:	str	x8, [x22, #40]
   1b1c8:	ldr	x9, [x21, #16]
   1b1cc:	cbz	x9, 1b298 <PyInit__decimal@@Base+0x147e4>
   1b1d0:	cmp	x9, #0x0
   1b1d4:	cneg	x2, x9, mi  // mi = first
   1b1d8:	add	x23, x19, #0x10
   1b1dc:	cmp	x2, #0x1
   1b1e0:	lsr	x3, x9, #63
   1b1e4:	b.ne	1b2c0 <PyInit__decimal@@Base+0x1480c>  // b.any
   1b1e8:	ldr	w9, [x21, #24]
   1b1ec:	mov	w10, #0x1                   	// #1
   1b1f0:	mov	x0, x22
   1b1f4:	mov	w1, w3
   1b1f8:	str	x9, [x8]
   1b1fc:	str	x10, [x22, #24]
   1b200:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
   1b204:	mov	x0, x22
   1b208:	str	xzr, [x22, #8]
   1b20c:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
   1b210:	add	x2, x29, #0x1c
   1b214:	mov	x0, x22
   1b218:	mov	x1, x23
   1b21c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   1b220:	b	1b06c <PyInit__decimal@@Base+0x145b8>
   1b224:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b228:	ldr	x8, [x8, #3864]
   1b22c:	cmp	x0, x8
   1b230:	b.eq	1b244 <PyInit__decimal@@Base+0x14790>  // b.none
   1b234:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b238:	ldr	x1, [x1, #3864]
   1b23c:	bl	6900 <PyType_IsSubtype@plt>
   1b240:	cbz	w0, 1b39c <PyInit__decimal@@Base+0x148e8>
   1b244:	mov	w1, #0x400                 	// #1024
   1b248:	mov	x0, x19
   1b24c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b250:	cbnz	w0, 1b3bc <PyInit__decimal@@Base+0x14908>
   1b254:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b258:	add	x0, x0, #0xe60
   1b25c:	mov	x1, x21
   1b260:	mov	x2, x19
   1b264:	str	wzr, [x29, #28]
   1b268:	bl	af58 <PyInit__decimal@@Base+0x44a4>
   1b26c:	mov	x20, x0
   1b270:	cbz	x0, 1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b274:	add	x0, x20, #0x18
   1b278:	add	x1, x19, #0x10
   1b27c:	add	x2, x29, #0x1c
   1b280:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   1b284:	b	1b06c <PyInit__decimal@@Base+0x145b8>
   1b288:	ldr	x8, [x21]
   1b28c:	add	x8, x8, #0x1
   1b290:	str	x8, [x21]
   1b294:	b	1b2ec <PyInit__decimal@@Base+0x14838>
   1b298:	str	xzr, [x8]
   1b29c:	mov	w8, #0x1                   	// #1
   1b2a0:	mov	x0, x22
   1b2a4:	mov	w1, wzr
   1b2a8:	str	x8, [x22, #24]
   1b2ac:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
   1b2b0:	mov	x0, x22
   1b2b4:	str	xzr, [x22, #8]
   1b2b8:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
   1b2bc:	b	1b06c <PyInit__decimal@@Base+0x145b8>
   1b2c0:	add	x1, x21, #0x18
   1b2c4:	add	x6, x29, #0x1c
   1b2c8:	mov	w4, #0x40000000            	// #1073741824
   1b2cc:	mov	x0, x22
   1b2d0:	mov	x5, x23
   1b2d4:	bl	3a884 <PyInit__decimal@@Base+0x33dd0>
   1b2d8:	b	1b06c <PyInit__decimal@@Base+0x145b8>
   1b2dc:	mov	x0, x21
   1b2e0:	bl	6470 <PyList_AsTuple@plt>
   1b2e4:	mov	x21, x0
   1b2e8:	cbz	x0, 1b3bc <PyInit__decimal@@Base+0x14908>
   1b2ec:	mov	x0, x21
   1b2f0:	bl	135d4 <PyInit__decimal@@Base+0xcb20>
   1b2f4:	ldr	x8, [x21]
   1b2f8:	mov	x22, x0
   1b2fc:	subs	x8, x8, #0x1
   1b300:	str	x8, [x21]
   1b304:	b.ne	1b310 <PyInit__decimal@@Base+0x1485c>  // b.any
   1b308:	mov	x0, x21
   1b30c:	bl	6510 <_Py_Dealloc@plt>
   1b310:	cbz	x22, 1b3bc <PyInit__decimal@@Base+0x14908>
   1b314:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b318:	add	x0, x0, #0xe60
   1b31c:	str	wzr, [x29, #28]
   1b320:	bl	6890 <_PyObject_New@plt>
   1b324:	mov	x20, x0
   1b328:	cbz	x0, 1b390 <PyInit__decimal@@Base+0x148dc>
   1b32c:	mov	w8, #0x30                  	// #48
   1b330:	mov	x0, x20
   1b334:	strb	w8, [x0, #24]!
   1b338:	mov	x9, #0xffffffffffffffff    	// #-1
   1b33c:	mov	w10, #0x4                   	// #4
   1b340:	add	x8, x0, #0x30
   1b344:	add	x2, x19, #0x10
   1b348:	add	x3, x29, #0x1c
   1b34c:	mov	x1, x22
   1b350:	stur	x9, [x0, #-8]
   1b354:	stp	xzr, xzr, [x0, #8]
   1b358:	stp	xzr, x10, [x0, #24]
   1b35c:	str	x8, [x0, #40]
   1b360:	bl	1f054 <PyInit__decimal@@Base+0x185a0>
   1b364:	ldr	w1, [x29, #28]
   1b368:	mov	x0, x19
   1b36c:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b370:	cbz	w0, 1b390 <PyInit__decimal@@Base+0x148dc>
   1b374:	ldr	x8, [x20]
   1b378:	subs	x8, x8, #0x1
   1b37c:	str	x8, [x20]
   1b380:	b.ne	1b38c <PyInit__decimal@@Base+0x148d8>  // b.any
   1b384:	mov	x0, x20
   1b388:	bl	6510 <_Py_Dealloc@plt>
   1b38c:	mov	x20, xzr
   1b390:	mov	x0, x22
   1b394:	bl	64a0 <PyMem_Free@plt>
   1b398:	b	1b3c0 <PyInit__decimal@@Base+0x1490c>
   1b39c:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b3a0:	ldr	x8, [x21, #8]
   1b3a4:	ldr	x9, [x9, #3936]
   1b3a8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1b3ac:	add	x1, x1, #0xb93
   1b3b0:	ldr	x2, [x8, #24]
   1b3b4:	ldr	x0, [x9]
   1b3b8:	bl	6950 <PyErr_Format@plt>
   1b3bc:	mov	x20, xzr
   1b3c0:	mov	x0, x20
   1b3c4:	ldp	x20, x19, [sp, #64]
   1b3c8:	ldp	x22, x21, [sp, #48]
   1b3cc:	ldr	x23, [sp, #32]
   1b3d0:	ldp	x29, x30, [sp, #16]
   1b3d4:	add	sp, sp, #0x50
   1b3d8:	ret
   1b3dc:	sub	sp, sp, #0x30
   1b3e0:	stp	x29, x30, [sp, #16]
   1b3e4:	stp	x20, x19, [sp, #32]
   1b3e8:	add	x29, sp, #0x10
   1b3ec:	mov	x20, x0
   1b3f0:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b3f4:	add	x0, x0, #0xe60
   1b3f8:	mov	x2, x20
   1b3fc:	stur	wzr, [x29, #-4]
   1b400:	bl	af58 <PyInit__decimal@@Base+0x44a4>
   1b404:	mov	x19, x0
   1b408:	cbz	x0, 1b448 <PyInit__decimal@@Base+0x14994>
   1b40c:	add	x0, x19, #0x18
   1b410:	add	x1, x20, #0x10
   1b414:	sub	x2, x29, #0x4
   1b418:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   1b41c:	ldur	w1, [x29, #-4]
   1b420:	mov	x0, x20
   1b424:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b428:	cbz	w0, 1b448 <PyInit__decimal@@Base+0x14994>
   1b42c:	ldr	x8, [x19]
   1b430:	subs	x8, x8, #0x1
   1b434:	str	x8, [x19]
   1b438:	b.ne	1b444 <PyInit__decimal@@Base+0x14990>  // b.any
   1b43c:	mov	x0, x19
   1b440:	bl	6510 <_Py_Dealloc@plt>
   1b444:	mov	x19, xzr
   1b448:	mov	x0, x19
   1b44c:	ldp	x20, x19, [sp, #32]
   1b450:	ldp	x29, x30, [sp, #16]
   1b454:	add	sp, sp, #0x30
   1b458:	ret
   1b45c:	sub	sp, sp, #0x40
   1b460:	stp	x29, x30, [sp, #16]
   1b464:	stp	x22, x21, [sp, #32]
   1b468:	stp	x20, x19, [sp, #48]
   1b46c:	add	x29, sp, #0x10
   1b470:	mov	x22, x0
   1b474:	adrp	x0, 58000 <PyInit__decimal@@Base+0x5154c>
   1b478:	add	x0, x0, #0xe60
   1b47c:	mov	x20, x1
   1b480:	stur	wzr, [x29, #-4]
   1b484:	bl	6890 <_PyObject_New@plt>
   1b488:	mov	x19, x0
   1b48c:	cbz	x0, 1b514 <PyInit__decimal@@Base+0x14a60>
   1b490:	mov	w8, #0x30                  	// #48
   1b494:	mov	x21, x19
   1b498:	strb	w8, [x21, #24]!
   1b49c:	mov	x9, #0xffffffffffffffff    	// #-1
   1b4a0:	mov	w10, #0x4                   	// #4
   1b4a4:	add	x8, x21, #0x30
   1b4a8:	add	x1, x22, #0x18
   1b4ac:	sub	x2, x29, #0x4
   1b4b0:	mov	x0, x21
   1b4b4:	stur	x9, [x21, #-8]
   1b4b8:	stp	xzr, xzr, [x21, #8]
   1b4bc:	stp	xzr, x10, [x21, #24]
   1b4c0:	str	x8, [x21, #40]
   1b4c4:	bl	24490 <PyInit__decimal@@Base+0x1d9dc>
   1b4c8:	ldur	w1, [x29, #-4]
   1b4cc:	mov	x0, x20
   1b4d0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b4d4:	cbnz	w0, 1b4f8 <PyInit__decimal@@Base+0x14a44>
   1b4d8:	add	x1, x20, #0x10
   1b4dc:	sub	x2, x29, #0x4
   1b4e0:	mov	x0, x21
   1b4e4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   1b4e8:	ldur	w1, [x29, #-4]
   1b4ec:	mov	x0, x20
   1b4f0:	bl	aa7c <PyInit__decimal@@Base+0x3fc8>
   1b4f4:	cbz	w0, 1b514 <PyInit__decimal@@Base+0x14a60>
   1b4f8:	ldr	x8, [x19]
   1b4fc:	subs	x8, x8, #0x1
   1b500:	str	x8, [x19]
   1b504:	b.ne	1b510 <PyInit__decimal@@Base+0x14a5c>  // b.any
   1b508:	mov	x0, x19
   1b50c:	bl	6510 <_Py_Dealloc@plt>
   1b510:	mov	x19, xzr
   1b514:	mov	x0, x19
   1b518:	ldp	x20, x19, [sp, #48]
   1b51c:	ldp	x22, x21, [sp, #32]
   1b520:	ldp	x29, x30, [sp, #16]
   1b524:	add	sp, sp, #0x40
   1b528:	ret
   1b52c:	stp	x29, x30, [sp, #-16]!
   1b530:	mov	x29, sp
   1b534:	add	x0, x0, #0x10
   1b538:	bl	1daac <PyInit__decimal@@Base+0x16ff8>
   1b53c:	ldp	x29, x30, [sp], #16
   1b540:	b	65e0 <PyLong_FromSsize_t@plt>
   1b544:	stp	x29, x30, [sp, #-32]!
   1b548:	stp	x20, x19, [sp, #16]
   1b54c:	mov	x29, sp
   1b550:	mov	x19, x0
   1b554:	mov	x0, x1
   1b558:	bl	6630 <PyLong_AsSsize_t@plt>
   1b55c:	mov	x20, x0
   1b560:	cmn	x0, #0x1
   1b564:	b.eq	1b588 <PyInit__decimal@@Base+0x14ad4>  // b.none
   1b568:	add	x0, x19, #0x10
   1b56c:	mov	x1, x20
   1b570:	bl	1d960 <PyInit__decimal@@Base+0x16eac>
   1b574:	cbz	w0, 1b5a0 <PyInit__decimal@@Base+0x14aec>
   1b578:	mov	w0, wzr
   1b57c:	ldp	x20, x19, [sp, #16]
   1b580:	ldp	x29, x30, [sp], #32
   1b584:	ret
   1b588:	bl	6720 <PyErr_Occurred@plt>
   1b58c:	cbz	x0, 1b568 <PyInit__decimal@@Base+0x14ab4>
   1b590:	mov	w0, #0xffffffff            	// #-1
   1b594:	ldp	x20, x19, [sp, #16]
   1b598:	ldp	x29, x30, [sp], #32
   1b59c:	ret
   1b5a0:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b5a4:	ldr	x8, [x8, #3928]
   1b5a8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b5ac:	add	x1, x1, #0x599
   1b5b0:	ldr	x0, [x8]
   1b5b4:	bl	6590 <PyErr_SetString@plt>
   1b5b8:	mov	w0, #0xffffffff            	// #-1
   1b5bc:	ldp	x20, x19, [sp, #16]
   1b5c0:	ldp	x29, x30, [sp], #32
   1b5c4:	ret
   1b5c8:	stp	x29, x30, [sp, #-16]!
   1b5cc:	mov	x29, sp
   1b5d0:	add	x0, x0, #0x10
   1b5d4:	bl	1dab4 <PyInit__decimal@@Base+0x17000>
   1b5d8:	ldp	x29, x30, [sp], #16
   1b5dc:	b	65e0 <PyLong_FromSsize_t@plt>
   1b5e0:	stp	x29, x30, [sp, #-32]!
   1b5e4:	stp	x20, x19, [sp, #16]
   1b5e8:	mov	x29, sp
   1b5ec:	mov	x19, x0
   1b5f0:	mov	x0, x1
   1b5f4:	bl	6630 <PyLong_AsSsize_t@plt>
   1b5f8:	mov	x20, x0
   1b5fc:	cmn	x0, #0x1
   1b600:	b.eq	1b624 <PyInit__decimal@@Base+0x14b70>  // b.none
   1b604:	add	x0, x19, #0x10
   1b608:	mov	x1, x20
   1b60c:	bl	1daec <PyInit__decimal@@Base+0x17038>
   1b610:	cbz	w0, 1b63c <PyInit__decimal@@Base+0x14b88>
   1b614:	mov	w0, wzr
   1b618:	ldp	x20, x19, [sp, #16]
   1b61c:	ldp	x29, x30, [sp], #32
   1b620:	ret
   1b624:	bl	6720 <PyErr_Occurred@plt>
   1b628:	cbz	x0, 1b604 <PyInit__decimal@@Base+0x14b50>
   1b62c:	mov	w0, #0xffffffff            	// #-1
   1b630:	ldp	x20, x19, [sp, #16]
   1b634:	ldp	x29, x30, [sp], #32
   1b638:	ret
   1b63c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b640:	ldr	x8, [x8, #3928]
   1b644:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b648:	add	x1, x1, #0x5bf
   1b64c:	ldr	x0, [x8]
   1b650:	bl	6590 <PyErr_SetString@plt>
   1b654:	mov	w0, #0xffffffff            	// #-1
   1b658:	ldp	x20, x19, [sp, #16]
   1b65c:	ldp	x29, x30, [sp], #32
   1b660:	ret
   1b664:	stp	x29, x30, [sp, #-16]!
   1b668:	mov	x29, sp
   1b66c:	add	x0, x0, #0x10
   1b670:	bl	1dabc <PyInit__decimal@@Base+0x17008>
   1b674:	ldp	x29, x30, [sp], #16
   1b678:	b	65e0 <PyLong_FromSsize_t@plt>
   1b67c:	stp	x29, x30, [sp, #-32]!
   1b680:	stp	x20, x19, [sp, #16]
   1b684:	mov	x29, sp
   1b688:	mov	x19, x0
   1b68c:	mov	x0, x1
   1b690:	bl	6630 <PyLong_AsSsize_t@plt>
   1b694:	mov	x20, x0
   1b698:	cmn	x0, #0x1
   1b69c:	b.eq	1b6c0 <PyInit__decimal@@Base+0x14c0c>  // b.none
   1b6a0:	add	x0, x19, #0x10
   1b6a4:	mov	x1, x20
   1b6a8:	bl	1db14 <PyInit__decimal@@Base+0x17060>
   1b6ac:	cbz	w0, 1b6d8 <PyInit__decimal@@Base+0x14c24>
   1b6b0:	mov	w0, wzr
   1b6b4:	ldp	x20, x19, [sp, #16]
   1b6b8:	ldp	x29, x30, [sp], #32
   1b6bc:	ret
   1b6c0:	bl	6720 <PyErr_Occurred@plt>
   1b6c4:	cbz	x0, 1b6a0 <PyInit__decimal@@Base+0x14bec>
   1b6c8:	mov	w0, #0xffffffff            	// #-1
   1b6cc:	ldp	x20, x19, [sp, #16]
   1b6d0:	ldp	x29, x30, [sp], #32
   1b6d4:	ret
   1b6d8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b6dc:	ldr	x8, [x8, #3928]
   1b6e0:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b6e4:	add	x1, x1, #0x5e5
   1b6e8:	ldr	x0, [x8]
   1b6ec:	bl	6590 <PyErr_SetString@plt>
   1b6f0:	mov	w0, #0xffffffff            	// #-1
   1b6f4:	ldp	x20, x19, [sp, #16]
   1b6f8:	ldp	x29, x30, [sp], #32
   1b6fc:	ret
   1b700:	stp	x29, x30, [sp, #-16]!
   1b704:	mov	x29, sp
   1b708:	add	x0, x0, #0x10
   1b70c:	bl	1dac4 <PyInit__decimal@@Base+0x17010>
   1b710:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1b714:	add	x8, x8, #0x578
   1b718:	add	x8, x8, w0, sxtw #3
   1b71c:	ldr	x0, [x8, #120]
   1b720:	ldr	x8, [x0]
   1b724:	add	x8, x8, #0x1
   1b728:	str	x8, [x0]
   1b72c:	ldp	x29, x30, [sp], #16
   1b730:	ret
   1b734:	stp	x29, x30, [sp, #-32]!
   1b738:	str	x19, [sp, #16]
   1b73c:	mov	x29, sp
   1b740:	mov	x19, x0
   1b744:	mov	x0, x1
   1b748:	bl	12ed8 <PyInit__decimal@@Base+0xc424>
   1b74c:	cmn	w0, #0x1
   1b750:	b.eq	1b768 <PyInit__decimal@@Base+0x14cb4>  // b.none
   1b754:	mov	w1, w0
   1b758:	add	x0, x19, #0x10
   1b75c:	bl	1db40 <PyInit__decimal@@Base+0x1708c>
   1b760:	cbz	w0, 1b774 <PyInit__decimal@@Base+0x14cc0>
   1b764:	mov	w0, wzr
   1b768:	ldr	x19, [sp, #16]
   1b76c:	ldp	x29, x30, [sp], #32
   1b770:	ret
   1b774:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b778:	ldr	x8, [x8, #3920]
   1b77c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b780:	add	x1, x1, #0x60b
   1b784:	ldr	x0, [x8]
   1b788:	bl	6590 <PyErr_SetString@plt>
   1b78c:	mov	w0, #0xffffffff            	// #-1
   1b790:	ldr	x19, [sp, #16]
   1b794:	ldp	x29, x30, [sp], #32
   1b798:	ret
   1b79c:	ldrsw	x0, [x0, #80]
   1b7a0:	b	6620 <PyLong_FromLong@plt>
   1b7a4:	stp	x29, x30, [sp, #-32]!
   1b7a8:	str	x19, [sp, #16]
   1b7ac:	mov	x29, sp
   1b7b0:	mov	x19, x0
   1b7b4:	mov	x0, x1
   1b7b8:	bl	6630 <PyLong_AsSsize_t@plt>
   1b7bc:	cmn	x0, #0x1
   1b7c0:	b.eq	1b7e4 <PyInit__decimal@@Base+0x14d30>  // b.none
   1b7c4:	mov	x8, x0
   1b7c8:	cmp	x0, #0x2
   1b7cc:	b.cs	1b7fc <PyInit__decimal@@Base+0x14d48>  // b.hs, b.nlast
   1b7d0:	mov	w0, wzr
   1b7d4:	str	w8, [x19, #80]
   1b7d8:	ldr	x19, [sp, #16]
   1b7dc:	ldp	x29, x30, [sp], #32
   1b7e0:	ret
   1b7e4:	bl	6720 <PyErr_Occurred@plt>
   1b7e8:	cbz	x0, 1b7fc <PyInit__decimal@@Base+0x14d48>
   1b7ec:	mov	w0, #0xffffffff            	// #-1
   1b7f0:	ldr	x19, [sp, #16]
   1b7f4:	ldp	x29, x30, [sp], #32
   1b7f8:	ret
   1b7fc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b800:	ldr	x8, [x8, #3928]
   1b804:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b808:	add	x1, x1, #0x62e
   1b80c:	ldr	x0, [x8]
   1b810:	bl	6590 <PyErr_SetString@plt>
   1b814:	mov	w0, #0xffffffff            	// #-1
   1b818:	ldr	x19, [sp, #16]
   1b81c:	ldp	x29, x30, [sp], #32
   1b820:	ret
   1b824:	stp	x29, x30, [sp, #-16]!
   1b828:	mov	x29, sp
   1b82c:	add	x0, x0, #0x10
   1b830:	bl	1dadc <PyInit__decimal@@Base+0x17028>
   1b834:	sxtw	x0, w0
   1b838:	ldp	x29, x30, [sp], #16
   1b83c:	b	65e0 <PyLong_FromSsize_t@plt>
   1b840:	stp	x29, x30, [sp, #-32]!
   1b844:	stp	x20, x19, [sp, #16]
   1b848:	mov	x29, sp
   1b84c:	mov	x19, x0
   1b850:	mov	x0, x1
   1b854:	bl	6630 <PyLong_AsSsize_t@plt>
   1b858:	mov	x20, x0
   1b85c:	cmn	x0, #0x1
   1b860:	b.eq	1b88c <PyInit__decimal@@Base+0x14dd8>  // b.none
   1b864:	cmp	x20, w20, sxtw
   1b868:	mov	w8, #0x7fffffff            	// #2147483647
   1b86c:	add	x0, x19, #0x10
   1b870:	csel	w1, w8, w20, ne  // ne = any
   1b874:	bl	1db94 <PyInit__decimal@@Base+0x170e0>
   1b878:	cbz	w0, 1b8a4 <PyInit__decimal@@Base+0x14df0>
   1b87c:	mov	w0, wzr
   1b880:	ldp	x20, x19, [sp, #16]
   1b884:	ldp	x29, x30, [sp], #32
   1b888:	ret
   1b88c:	bl	6720 <PyErr_Occurred@plt>
   1b890:	cbz	x0, 1b864 <PyInit__decimal@@Base+0x14db0>
   1b894:	mov	w0, #0xffffffff            	// #-1
   1b898:	ldp	x20, x19, [sp, #16]
   1b89c:	ldp	x29, x30, [sp], #32
   1b8a0:	ret
   1b8a4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b8a8:	ldr	x8, [x8, #3928]
   1b8ac:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1b8b0:	add	x1, x1, #0x653
   1b8b4:	ldr	x0, [x8]
   1b8b8:	bl	6590 <PyErr_SetString@plt>
   1b8bc:	mov	w0, #0xffffffff            	// #-1
   1b8c0:	ldp	x20, x19, [sp, #16]
   1b8c4:	ldp	x29, x30, [sp], #32
   1b8c8:	ret
   1b8cc:	stp	x29, x30, [sp, #-32]!
   1b8d0:	str	x19, [sp, #16]
   1b8d4:	mov	x29, sp
   1b8d8:	mov	x19, x0
   1b8dc:	ldr	x0, [x0, #16]
   1b8e0:	cbz	x0, 1b8f4 <PyInit__decimal@@Base+0x14e40>
   1b8e4:	ldr	x8, [x0]
   1b8e8:	subs	x8, x8, #0x1
   1b8ec:	str	x8, [x0]
   1b8f0:	b.eq	1b91c <PyInit__decimal@@Base+0x14e68>  // b.none
   1b8f4:	ldr	x0, [x19, #24]
   1b8f8:	cbz	x0, 1b90c <PyInit__decimal@@Base+0x14e58>
   1b8fc:	ldr	x8, [x0]
   1b900:	subs	x8, x8, #0x1
   1b904:	str	x8, [x0]
   1b908:	b.eq	1b92c <PyInit__decimal@@Base+0x14e78>  // b.none
   1b90c:	mov	x0, x19
   1b910:	ldr	x19, [sp, #16]
   1b914:	ldp	x29, x30, [sp], #32
   1b918:	b	65d0 <PyObject_Free@plt>
   1b91c:	bl	6510 <_Py_Dealloc@plt>
   1b920:	ldr	x0, [x19, #24]
   1b924:	cbnz	x0, 1b8fc <PyInit__decimal@@Base+0x14e48>
   1b928:	b	1b90c <PyInit__decimal@@Base+0x14e58>
   1b92c:	bl	6510 <_Py_Dealloc@plt>
   1b930:	mov	x0, x19
   1b934:	ldr	x19, [sp, #16]
   1b938:	ldp	x29, x30, [sp], #32
   1b93c:	b	65d0 <PyObject_Free@plt>
   1b940:	stp	x29, x30, [sp, #-32]!
   1b944:	str	x19, [sp, #16]
   1b948:	mov	x29, sp
   1b94c:	ldr	x1, [x0, #16]
   1b950:	mov	x19, x0
   1b954:	mov	x0, xzr
   1b958:	bl	1b9d8 <PyInit__decimal@@Base+0x14f24>
   1b95c:	cbz	x0, 1b984 <PyInit__decimal@@Base+0x14ed0>
   1b960:	ldr	x8, [x0]
   1b964:	subs	x8, x8, #0x1
   1b968:	str	x8, [x0]
   1b96c:	b.ne	1b974 <PyInit__decimal@@Base+0x14ec0>  // b.any
   1b970:	bl	6510 <_Py_Dealloc@plt>
   1b974:	ldr	x0, [x19, #16]
   1b978:	ldr	x8, [x0]
   1b97c:	add	x8, x8, #0x1
   1b980:	str	x8, [x0]
   1b984:	ldr	x19, [sp, #16]
   1b988:	ldp	x29, x30, [sp], #32
   1b98c:	ret
   1b990:	stp	x29, x30, [sp, #-16]!
   1b994:	mov	x29, sp
   1b998:	ldr	x1, [x0, #24]
   1b99c:	mov	x0, xzr
   1b9a0:	bl	1b9d8 <PyInit__decimal@@Base+0x14f24>
   1b9a4:	cbz	x0, 1b9d0 <PyInit__decimal@@Base+0x14f1c>
   1b9a8:	ldr	x8, [x0]
   1b9ac:	subs	x8, x8, #0x1
   1b9b0:	str	x8, [x0]
   1b9b4:	b.ne	1b9bc <PyInit__decimal@@Base+0x14f08>  // b.any
   1b9b8:	bl	6510 <_Py_Dealloc@plt>
   1b9bc:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1b9c0:	ldr	x0, [x0, #4008]
   1b9c4:	ldr	x8, [x0]
   1b9c8:	add	x8, x8, #0x1
   1b9cc:	str	x8, [x0]
   1b9d0:	ldp	x29, x30, [sp], #16
   1b9d4:	ret
   1b9d8:	stp	x29, x30, [sp, #-32]!
   1b9dc:	stp	x20, x19, [sp, #16]
   1b9e0:	mov	x29, sp
   1b9e4:	ldr	x0, [x1, #8]
   1b9e8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1b9ec:	add	x8, x8, #0x0
   1b9f0:	mov	x19, x1
   1b9f4:	cmp	x0, x8
   1b9f8:	b.eq	1ba0c <PyInit__decimal@@Base+0x14f58>  // b.none
   1b9fc:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   1ba00:	add	x1, x1, #0x0
   1ba04:	bl	6900 <PyType_IsSubtype@plt>
   1ba08:	cbz	w0, 1badc <PyInit__decimal@@Base+0x15028>
   1ba0c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1ba10:	add	x8, x8, #0x5d8
   1ba14:	ldr	x9, [x8]
   1ba18:	cmp	x9, x19
   1ba1c:	b.eq	1ba48 <PyInit__decimal@@Base+0x14f94>  // b.none
   1ba20:	ldr	x9, [x8, #8]
   1ba24:	cmp	x9, x19
   1ba28:	b.eq	1ba48 <PyInit__decimal@@Base+0x14f94>  // b.none
   1ba2c:	ldr	x8, [x8, #16]
   1ba30:	cmp	x8, x19
   1ba34:	b.eq	1ba48 <PyInit__decimal@@Base+0x14f94>  // b.none
   1ba38:	ldr	x8, [x19]
   1ba3c:	add	x8, x8, #0x1
   1ba40:	str	x8, [x19]
   1ba44:	b	1ba7c <PyInit__decimal@@Base+0x14fc8>
   1ba48:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1ba4c:	add	x0, x0, #0x0
   1ba50:	mov	x1, xzr
   1ba54:	bl	6780 <PyObject_CallObject@plt>
   1ba58:	cbz	x0, 1bad0 <PyInit__decimal@@Base+0x1501c>
   1ba5c:	ldp	q1, q0, [x19, #32]
   1ba60:	ldr	q2, [x19, #16]
   1ba64:	stp	q1, q0, [x0, #32]
   1ba68:	str	q2, [x0, #16]
   1ba6c:	ldr	w8, [x19, #80]
   1ba70:	stp	wzr, wzr, [x0, #44]
   1ba74:	mov	x19, x0
   1ba78:	str	w8, [x0, #80]
   1ba7c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1ba80:	ldr	x0, [x8, #1400]
   1ba84:	mov	x1, x19
   1ba88:	bl	65c0 <PyContextVar_Set@plt>
   1ba8c:	ldr	x8, [x19]
   1ba90:	mov	x20, x0
   1ba94:	subs	x8, x8, #0x1
   1ba98:	str	x8, [x19]
   1ba9c:	b.eq	1bb04 <PyInit__decimal@@Base+0x15050>  // b.none
   1baa0:	cbz	x20, 1bb10 <PyInit__decimal@@Base+0x1505c>
   1baa4:	ldr	x8, [x20]
   1baa8:	subs	x8, x8, #0x1
   1baac:	str	x8, [x20]
   1bab0:	b.ne	1babc <PyInit__decimal@@Base+0x15008>  // b.any
   1bab4:	mov	x0, x20
   1bab8:	bl	6510 <_Py_Dealloc@plt>
   1babc:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bac0:	ldr	x0, [x0, #4008]
   1bac4:	ldr	x8, [x0]
   1bac8:	add	x8, x8, #0x1
   1bacc:	str	x8, [x0]
   1bad0:	ldp	x20, x19, [sp, #16]
   1bad4:	ldp	x29, x30, [sp], #32
   1bad8:	ret
   1badc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bae0:	ldr	x8, [x8, #3936]
   1bae4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1bae8:	add	x1, x1, #0xf6a
   1baec:	ldr	x0, [x8]
   1baf0:	bl	6590 <PyErr_SetString@plt>
   1baf4:	mov	x0, xzr
   1baf8:	ldp	x20, x19, [sp, #16]
   1bafc:	ldp	x29, x30, [sp], #32
   1bb00:	ret
   1bb04:	mov	x0, x19
   1bb08:	bl	6510 <_Py_Dealloc@plt>
   1bb0c:	cbnz	x20, 1baa4 <PyInit__decimal@@Base+0x14ff0>
   1bb10:	mov	x0, xzr
   1bb14:	ldp	x20, x19, [sp, #16]
   1bb18:	ldp	x29, x30, [sp], #32
   1bb1c:	ret
   1bb20:	sub	sp, sp, #0x100
   1bb24:	stp	x29, x30, [sp, #240]
   1bb28:	add	x29, sp, #0xf0
   1bb2c:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1bb30:	ldr	x8, [x8, #3360]
   1bb34:	cbz	x8, 1bbbc <PyInit__decimal@@Base+0x15108>
   1bb38:	ldr	x10, [x0, #16]
   1bb3c:	adrp	x9, 58000 <PyInit__decimal@@Base+0x5154c>
   1bb40:	adrp	x12, 44000 <PyInit__decimal@@Base+0x3d54c>
   1bb44:	adrp	x13, 44000 <PyInit__decimal@@Base+0x3d54c>
   1bb48:	ldr	w10, [x10]
   1bb4c:	mov	w8, wzr
   1bb50:	add	x9, x9, #0xd28
   1bb54:	sub	x11, x29, #0x48
   1bb58:	add	x12, x12, #0x7a6
   1bb5c:	add	x13, x13, #0x7ab
   1bb60:	add	x14, sp, #0x60
   1bb64:	ldr	w17, [x9, #8]
   1bb68:	ldr	x15, [x9]
   1bb6c:	ldr	x18, [x9, #24]
   1bb70:	sbfiz	x16, x8, #3, #32
   1bb74:	tst	w17, w10
   1bb78:	add	w8, w8, #0x1
   1bb7c:	str	x15, [x11, x16]
   1bb80:	csel	x15, x13, x12, eq  // eq = none
   1bb84:	add	x9, x9, #0x20
   1bb88:	str	x15, [x14, x16]
   1bb8c:	cbnz	x18, 1bb64 <PyInit__decimal@@Base+0x150b0>
   1bb90:	ldp	x1, x3, [x29, #-72]
   1bb94:	ldp	x2, x4, [sp, #96]
   1bb98:	ldp	x5, x7, [x29, #-56]
   1bb9c:	ldp	x6, x8, [sp, #112]
   1bba0:	ldp	x9, x10, [x29, #-40]
   1bba4:	ldp	x11, x12, [sp, #128]
   1bba8:	ldp	x13, x14, [x29, #-24]
   1bbac:	ldp	x15, x16, [sp, #144]
   1bbb0:	ldur	x17, [x29, #-8]
   1bbb4:	ldr	x18, [sp, #160]
   1bbb8:	b	1bbbc <PyInit__decimal@@Base+0x15108>
   1bbbc:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   1bbc0:	add	x0, x0, #0x7b1
   1bbc4:	stp	x17, x18, [sp, #72]
   1bbc8:	stp	x14, x16, [sp, #56]
   1bbcc:	stp	x13, x15, [sp, #40]
   1bbd0:	stp	x10, x12, [sp, #24]
   1bbd4:	stp	x9, x11, [sp, #8]
   1bbd8:	str	x8, [sp]
   1bbdc:	bl	63d0 <PyUnicode_FromFormat@plt>
   1bbe0:	ldp	x29, x30, [sp, #240]
   1bbe4:	add	sp, sp, #0x100
   1bbe8:	ret
   1bbec:	stp	x29, x30, [sp, #-32]!
   1bbf0:	stp	x20, x19, [sp, #16]
   1bbf4:	mov	x29, sp
   1bbf8:	orr	w8, w2, #0x1
   1bbfc:	cmp	w8, #0x3
   1bc00:	b.ne	1bcc8 <PyInit__decimal@@Base+0x15214>  // b.any
   1bc04:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   1bc08:	ldr	x8, [x1, #8]
   1bc0c:	ldr	x9, [x9, #1472]
   1bc10:	mov	w19, w2
   1bc14:	mov	x20, x0
   1bc18:	cmp	x8, x9
   1bc1c:	b.eq	1bc4c <PyInit__decimal@@Base+0x15198>  // b.none
   1bc20:	ldrb	w8, [x8, #171]
   1bc24:	tbz	w8, #5, 1bcc8 <PyInit__decimal@@Base+0x15214>
   1bc28:	mov	x0, x1
   1bc2c:	bl	1426c <PyInit__decimal@@Base+0xd7b8>
   1bc30:	tst	w0, #0x18000
   1bc34:	b.eq	1bc8c <PyInit__decimal@@Base+0x151d8>  // b.none
   1bc38:	tbnz	w0, #15, 1bcc4 <PyInit__decimal@@Base+0x15210>
   1bc3c:	mov	x0, xzr
   1bc40:	ldp	x20, x19, [sp, #16]
   1bc44:	ldp	x29, x30, [sp], #32
   1bc48:	ret
   1bc4c:	ldr	x8, [x20, #16]
   1bc50:	ldr	x9, [x1, #16]
   1bc54:	cmp	w19, #0x3
   1bc58:	adrp	x10, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bc5c:	ldr	w8, [x8]
   1bc60:	ldr	w9, [x9]
   1bc64:	cset	w11, eq  // eq = none
   1bc68:	ldr	x10, [x10, #3976]
   1bc6c:	cmp	w8, w9
   1bc70:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bc74:	ldr	x9, [x9, #4024]
   1bc78:	cset	w8, eq  // eq = none
   1bc7c:	eor	w8, w11, w8
   1bc80:	cmp	w8, #0x0
   1bc84:	csel	x0, x9, x10, ne  // ne = any
   1bc88:	b	1bcd0 <PyInit__decimal@@Base+0x1521c>
   1bc8c:	ldr	x8, [x20, #16]
   1bc90:	cmp	w19, #0x3
   1bc94:	cset	w10, eq  // eq = none
   1bc98:	adrp	x9, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bc9c:	ldr	w8, [x8]
   1bca0:	ldr	x9, [x9, #3976]
   1bca4:	cmp	w8, w0
   1bca8:	cset	w8, eq  // eq = none
   1bcac:	eor	w8, w10, w8
   1bcb0:	adrp	x10, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bcb4:	ldr	x10, [x10, #4024]
   1bcb8:	cmp	w8, #0x0
   1bcbc:	csel	x0, x10, x9, ne  // ne = any
   1bcc0:	b	1bcd0 <PyInit__decimal@@Base+0x1521c>
   1bcc4:	bl	6670 <PyErr_Clear@plt>
   1bcc8:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bccc:	ldr	x0, [x0, #3912]
   1bcd0:	ldr	x8, [x0]
   1bcd4:	add	x8, x8, #0x1
   1bcd8:	str	x8, [x0]
   1bcdc:	ldp	x20, x19, [sp, #16]
   1bce0:	ldp	x29, x30, [sp], #32
   1bce4:	ret
   1bce8:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bcec:	ldr	x8, [x8, #3872]
   1bcf0:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   1bcf4:	ldr	x0, [x9, #1488]
   1bcf8:	ldr	x1, [x8, #216]
   1bcfc:	br	x1
   1bd00:	str	xzr, [x0, #16]
   1bd04:	mov	w0, wzr
   1bd08:	ret
   1bd0c:	mov	w0, #0x9                   	// #9
   1bd10:	ret
   1bd14:	stp	x29, x30, [sp, #-16]!
   1bd18:	mov	x29, sp
   1bd1c:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1bd20:	ldr	x8, [x8, #3360]
   1bd24:	cbz	x8, 1bd44 <PyInit__decimal@@Base+0x15290>
   1bd28:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1bd2c:	add	x8, x8, #0xd40
   1bd30:	ldur	x9, [x8, #-8]
   1bd34:	cmp	x9, x1
   1bd38:	b.eq	1bd68 <PyInit__decimal@@Base+0x152b4>  // b.none
   1bd3c:	ldr	x9, [x8], #32
   1bd40:	cbnz	x9, 1bd30 <PyInit__decimal@@Base+0x1527c>
   1bd44:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bd48:	ldr	x8, [x8, #3968]
   1bd4c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1bd50:	add	x1, x1, #0x6a7
   1bd54:	ldr	x0, [x8]
   1bd58:	bl	6590 <PyErr_SetString@plt>
   1bd5c:	mov	x0, xzr
   1bd60:	ldp	x29, x30, [sp], #16
   1bd64:	ret
   1bd68:	ldur	w8, [x8, #-16]
   1bd6c:	tst	w8, #0x18000
   1bd70:	b.eq	1bd80 <PyInit__decimal@@Base+0x152cc>  // b.none
   1bd74:	mov	x0, xzr
   1bd78:	ldp	x29, x30, [sp], #16
   1bd7c:	ret
   1bd80:	ldr	x9, [x0, #16]
   1bd84:	ldr	w9, [x9]
   1bd88:	tst	w9, w8
   1bd8c:	b.eq	1bd9c <PyInit__decimal@@Base+0x152e8>  // b.none
   1bd90:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bd94:	ldr	x0, [x0, #4024]
   1bd98:	b	1bda4 <PyInit__decimal@@Base+0x152f0>
   1bd9c:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bda0:	ldr	x0, [x0, #3976]
   1bda4:	ldr	x8, [x0]
   1bda8:	add	x8, x8, #0x1
   1bdac:	str	x8, [x0]
   1bdb0:	ldp	x29, x30, [sp], #16
   1bdb4:	ret
   1bdb8:	stp	x29, x30, [sp, #-32]!
   1bdbc:	stp	x20, x19, [sp, #16]
   1bdc0:	mov	x29, sp
   1bdc4:	cbz	x2, 1be08 <PyInit__decimal@@Base+0x15354>
   1bdc8:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1bdcc:	ldr	x8, [x8, #3360]
   1bdd0:	cbz	x8, 1bdf4 <PyInit__decimal@@Base+0x15340>
   1bdd4:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1bdd8:	mov	x19, x0
   1bddc:	add	x8, x8, #0xd40
   1bde0:	ldur	x9, [x8, #-8]
   1bde4:	cmp	x9, x1
   1bde8:	b.eq	1be30 <PyInit__decimal@@Base+0x1537c>  // b.none
   1bdec:	ldr	x9, [x8], #32
   1bdf0:	cbnz	x9, 1bde0 <PyInit__decimal@@Base+0x1532c>
   1bdf4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bdf8:	ldr	x8, [x8, #3968]
   1bdfc:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1be00:	add	x1, x1, #0x6a7
   1be04:	b	1be18 <PyInit__decimal@@Base+0x15364>
   1be08:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1be0c:	ldr	x8, [x8, #3928]
   1be10:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1be14:	add	x1, x1, #0x84b
   1be18:	ldr	x0, [x8]
   1be1c:	bl	6590 <PyErr_SetString@plt>
   1be20:	mov	w0, #0xffffffff            	// #-1
   1be24:	ldp	x20, x19, [sp, #16]
   1be28:	ldp	x29, x30, [sp], #32
   1be2c:	ret
   1be30:	ldur	w20, [x8, #-16]
   1be34:	tst	w20, #0x18000
   1be38:	b.eq	1be4c <PyInit__decimal@@Base+0x15398>  // b.none
   1be3c:	mov	w0, #0xffffffff            	// #-1
   1be40:	ldp	x20, x19, [sp, #16]
   1be44:	ldp	x29, x30, [sp], #32
   1be48:	ret
   1be4c:	mov	x0, x2
   1be50:	bl	6810 <PyObject_IsTrue@plt>
   1be54:	tbnz	w0, #31, 1be3c <PyInit__decimal@@Base+0x15388>
   1be58:	cmp	w0, #0x1
   1be5c:	b.ne	1be80 <PyInit__decimal@@Base+0x153cc>  // b.any
   1be60:	ldr	x8, [x19, #16]
   1be64:	mov	w0, wzr
   1be68:	ldr	w9, [x8]
   1be6c:	orr	w9, w9, w20
   1be70:	str	w9, [x8]
   1be74:	ldp	x20, x19, [sp, #16]
   1be78:	ldp	x29, x30, [sp], #32
   1be7c:	ret
   1be80:	ldr	x8, [x19, #16]
   1be84:	mov	w0, wzr
   1be88:	ldr	w9, [x8]
   1be8c:	bic	w9, w9, w20
   1be90:	str	w9, [x8]
   1be94:	ldp	x20, x19, [sp, #16]
   1be98:	ldp	x29, x30, [sp], #32
   1be9c:	ret
   1bea0:	stp	x29, x30, [sp, #-64]!
   1bea4:	str	x23, [sp, #16]
   1bea8:	stp	x22, x21, [sp, #32]
   1beac:	stp	x20, x19, [sp, #48]
   1beb0:	mov	x29, sp
   1beb4:	ldr	x8, [x0, #16]
   1beb8:	ldr	w20, [x8]
   1bebc:	bl	6860 <PyDict_New@plt>
   1bec0:	mov	x19, x0
   1bec4:	cbz	x0, 1bf30 <PyInit__decimal@@Base+0x1547c>
   1bec8:	adrp	x8, 58000 <PyInit__decimal@@Base+0x5154c>
   1becc:	ldr	x8, [x8, #3360]
   1bed0:	cbz	x8, 1bf30 <PyInit__decimal@@Base+0x1547c>
   1bed4:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bed8:	adrp	x23, 56000 <PyInit__decimal@@Base+0x4f54c>
   1bedc:	ldr	x22, [x22, #4024]
   1bee0:	ldr	x23, [x23, #3976]
   1bee4:	adrp	x21, 58000 <PyInit__decimal@@Base+0x5154c>
   1bee8:	add	x21, x21, #0xd40
   1beec:	ldur	w8, [x21, #-16]
   1bef0:	ldur	x1, [x21, #-8]
   1bef4:	mov	x0, x19
   1bef8:	tst	w8, w20
   1befc:	csel	x2, x23, x22, eq  // eq = none
   1bf00:	bl	68e0 <PyDict_SetItem@plt>
   1bf04:	tbnz	w0, #31, 1bf14 <PyInit__decimal@@Base+0x15460>
   1bf08:	ldr	x8, [x21], #32
   1bf0c:	cbnz	x8, 1beec <PyInit__decimal@@Base+0x15438>
   1bf10:	b	1bf30 <PyInit__decimal@@Base+0x1547c>
   1bf14:	ldr	x8, [x19]
   1bf18:	subs	x8, x8, #0x1
   1bf1c:	str	x8, [x19]
   1bf20:	b.ne	1bf2c <PyInit__decimal@@Base+0x15478>  // b.any
   1bf24:	mov	x0, x19
   1bf28:	bl	6510 <_Py_Dealloc@plt>
   1bf2c:	mov	x19, xzr
   1bf30:	mov	x0, x19
   1bf34:	ldp	x20, x19, [sp, #48]
   1bf38:	ldp	x22, x21, [sp, #32]
   1bf3c:	ldr	x23, [sp, #16]
   1bf40:	ldp	x29, x30, [sp], #64
   1bf44:	ret
   1bf48:	stp	x29, x30, [sp, #-48]!
   1bf4c:	str	x21, [sp, #16]
   1bf50:	stp	x20, x19, [sp, #32]
   1bf54:	mov	x29, sp
   1bf58:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   1bf5c:	ldr	x0, [x20, #1400]
   1bf60:	add	x2, x29, #0x18
   1bf64:	mov	x1, xzr
   1bf68:	bl	6680 <PyContextVar_Get@plt>
   1bf6c:	tbnz	w0, #31, 1bff4 <PyInit__decimal@@Base+0x15540>
   1bf70:	ldr	x19, [x29, #24]
   1bf74:	cbnz	x19, 1bff8 <PyInit__decimal@@Base+0x15544>
   1bf78:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1bf7c:	ldr	x21, [x8, #1496]
   1bf80:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1bf84:	add	x0, x0, #0x0
   1bf88:	mov	x1, xzr
   1bf8c:	bl	6780 <PyObject_CallObject@plt>
   1bf90:	mov	x19, x0
   1bf94:	cbz	x0, 1bff8 <PyInit__decimal@@Base+0x15544>
   1bf98:	ldp	q1, q0, [x21, #32]
   1bf9c:	ldr	q2, [x21, #16]
   1bfa0:	mov	x1, x19
   1bfa4:	stp	q1, q0, [x19, #32]
   1bfa8:	str	q2, [x19, #16]
   1bfac:	ldr	w8, [x21, #80]
   1bfb0:	stp	wzr, wzr, [x19, #44]
   1bfb4:	str	w8, [x19, #80]
   1bfb8:	ldr	x0, [x20, #1400]
   1bfbc:	bl	65c0 <PyContextVar_Set@plt>
   1bfc0:	cbz	x0, 1bfdc <PyInit__decimal@@Base+0x15528>
   1bfc4:	ldr	x8, [x0]
   1bfc8:	subs	x8, x8, #0x1
   1bfcc:	str	x8, [x0]
   1bfd0:	b.ne	1bff8 <PyInit__decimal@@Base+0x15544>  // b.any
   1bfd4:	bl	6510 <_Py_Dealloc@plt>
   1bfd8:	b	1bff8 <PyInit__decimal@@Base+0x15544>
   1bfdc:	ldr	x8, [x19]
   1bfe0:	subs	x8, x8, #0x1
   1bfe4:	str	x8, [x19]
   1bfe8:	b.ne	1bff4 <PyInit__decimal@@Base+0x15540>  // b.any
   1bfec:	mov	x0, x19
   1bff0:	bl	6510 <_Py_Dealloc@plt>
   1bff4:	mov	x19, xzr
   1bff8:	mov	x0, x19
   1bffc:	ldp	x20, x19, [sp, #32]
   1c000:	ldr	x21, [sp, #16]
   1c004:	ldp	x29, x30, [sp], #48
   1c008:	ret
   1c00c:	sub	sp, sp, #0x50
   1c010:	stp	x29, x30, [sp, #16]
   1c014:	stp	x24, x23, [sp, #32]
   1c018:	stp	x22, x21, [sp, #48]
   1c01c:	stp	x20, x19, [sp, #64]
   1c020:	add	x29, sp, #0x10
   1c024:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   1c028:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
   1c02c:	ldr	x0, [x23, #1400]
   1c030:	ldr	x22, [x22, #4008]
   1c034:	mov	x20, x2
   1c038:	mov	x21, x1
   1c03c:	add	x2, sp, #0x8
   1c040:	mov	x1, xzr
   1c044:	str	x22, [sp]
   1c048:	bl	6680 <PyContextVar_Get@plt>
   1c04c:	tbnz	w0, #31, 1c1dc <PyInit__decimal@@Base+0x15728>
   1c050:	ldr	x19, [sp, #8]
   1c054:	cbz	x19, 1c0e0 <PyInit__decimal@@Base+0x1562c>
   1c058:	ldr	x8, [x19]
   1c05c:	subs	x8, x8, #0x1
   1c060:	str	x8, [x19]
   1c064:	b.ne	1c070 <PyInit__decimal@@Base+0x155bc>  // b.any
   1c068:	mov	x0, x19
   1c06c:	bl	6510 <_Py_Dealloc@plt>
   1c070:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   1c074:	adrp	x3, 58000 <PyInit__decimal@@Base+0x5154c>
   1c078:	add	x2, x2, #0xac
   1c07c:	add	x3, x3, #0x948
   1c080:	mov	x4, sp
   1c084:	mov	x0, x21
   1c088:	mov	x1, x20
   1c08c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   1c090:	cbz	w0, 1c1dc <PyInit__decimal@@Base+0x15728>
   1c094:	ldr	x8, [sp]
   1c098:	cmp	x8, x22
   1c09c:	b.eq	1c144 <PyInit__decimal@@Base+0x15690>  // b.none
   1c0a0:	ldr	x0, [x8, #8]
   1c0a4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1c0a8:	add	x8, x8, #0x0
   1c0ac:	cmp	x0, x8
   1c0b0:	b.eq	1c148 <PyInit__decimal@@Base+0x15694>  // b.none
   1c0b4:	adrp	x1, 59000 <PyInit__decimal@@Base+0x5254c>
   1c0b8:	add	x1, x1, #0x0
   1c0bc:	bl	6900 <PyType_IsSubtype@plt>
   1c0c0:	cbnz	w0, 1c148 <PyInit__decimal@@Base+0x15694>
   1c0c4:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   1c0c8:	ldr	x8, [x8, #3936]
   1c0cc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x3c54c>
   1c0d0:	add	x1, x1, #0xf61
   1c0d4:	ldr	x0, [x8]
   1c0d8:	bl	6590 <PyErr_SetString@plt>
   1c0dc:	b	1c1dc <PyInit__decimal@@Base+0x15728>
   1c0e0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1c0e4:	ldr	x24, [x8, #1496]
   1c0e8:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1c0ec:	add	x0, x0, #0x0
   1c0f0:	mov	x1, xzr
   1c0f4:	bl	6780 <PyObject_CallObject@plt>
   1c0f8:	cbz	x0, 1c1dc <PyInit__decimal@@Base+0x15728>
   1c0fc:	ldp	q1, q0, [x24, #32]
   1c100:	ldr	q2, [x24, #16]
   1c104:	mov	x19, x0
   1c108:	mov	x1, x19
   1c10c:	stp	q1, q0, [x0, #32]
   1c110:	str	q2, [x0, #16]
   1c114:	ldr	w8, [x24, #80]
   1c118:	stp	wzr, wzr, [x0, #44]
   1c11c:	str	w8, [x0, #80]
   1c120:	ldr	x0, [x23, #1400]
   1c124:	bl	65c0 <PyContextVar_Set@plt>
   1c128:	cbz	x0, 1c1c4 <PyInit__decimal@@Base+0x15710>
   1c12c:	ldr	x8, [x0]
   1c130:	subs	x8, x8, #0x1
   1c134:	str	x8, [x0]
   1c138:	b.ne	1c058 <PyInit__decimal@@Base+0x155a4>  // b.any
   1c13c:	bl	6510 <_Py_Dealloc@plt>
   1c140:	b	1c058 <PyInit__decimal@@Base+0x155a4>
   1c144:	str	x19, [sp]
   1c148:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1c14c:	add	x0, x0, #0x1a0
   1c150:	bl	6890 <_PyObject_New@plt>
   1c154:	cbz	x0, 1c1e0 <PyInit__decimal@@Base+0x1572c>
   1c158:	ldr	x21, [sp]
   1c15c:	mov	x20, x0
   1c160:	adrp	x0, 59000 <PyInit__decimal@@Base+0x5254c>
   1c164:	add	x0, x0, #0x0
   1c168:	mov	x1, xzr
   1c16c:	bl	6780 <PyObject_CallObject@plt>
   1c170:	cbz	x0, 1c1a8 <PyInit__decimal@@Base+0x156f4>
   1c174:	ldp	q1, q0, [x21, #32]
   1c178:	ldr	q2, [x21, #16]
   1c17c:	stp	q1, q0, [x0, #32]
   1c180:	str	q2, [x0, #16]
   1c184:	str	wzr, [x0, #48]
   1c188:	ldr	w8, [x21, #80]
   1c18c:	str	w8, [x0, #80]
   1c190:	stp	x0, x19, [x20, #16]
   1c194:	ldr	x8, [x19]
   1c198:	mov	x0, x20
   1c19c:	add	x8, x8, #0x1
   1c1a0:	str	x8, [x19]
   1c1a4:	b	1c1e0 <PyInit__decimal@@Base+0x1572c>
   1c1a8:	ldr	x8, [x20]
   1c1ac:	stp	xzr, xzr, [x20, #16]
   1c1b0:	subs	x8, x8, #0x1
   1c1b4:	str	x8, [x20]
   1c1b8:	b.ne	1c1e0 <PyInit__decimal@@Base+0x1572c>  // b.any
   1c1bc:	mov	x0, x20
   1c1c0:	b	1c1d8 <PyInit__decimal@@Base+0x15724>
   1c1c4:	ldr	x8, [x19]
   1c1c8:	subs	x8, x8, #0x1
   1c1cc:	str	x8, [x19]
   1c1d0:	b.ne	1c1dc <PyInit__decimal@@Base+0x15728>  // b.any
   1c1d4:	mov	x0, x19
   1c1d8:	bl	6510 <_Py_Dealloc@plt>
   1c1dc:	mov	x0, xzr
   1c1e0:	ldp	x20, x19, [sp, #64]
   1c1e4:	ldp	x22, x21, [sp, #48]
   1c1e8:	ldp	x24, x23, [sp, #32]
   1c1ec:	ldp	x29, x30, [sp, #16]
   1c1f0:	add	sp, sp, #0x50
   1c1f4:	ret
   1c1f8:	mov	x8, x0
   1c1fc:	cbz	x4, 1c2a8 <PyInit__decimal@@Base+0x157f4>
   1c200:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1c204:	mov	x11, #0x76180000            	// #1981284352
   1c208:	movk	x9, #0x2304, lsl #32
   1c20c:	movk	x11, #0xdcfb, lsl #32
   1c210:	mov	x10, xzr
   1c214:	mov	x0, xzr
   1c218:	movk	x9, #0x8ac7, lsl #48
   1c21c:	movk	x11, #0x7538, lsl #48
   1c220:	lsl	x12, x10, #3
   1c224:	ldr	x13, [x1, x12]
   1c228:	ldr	x14, [x2, x12]
   1c22c:	add	x10, x10, #0x1
   1c230:	add	x15, x13, x0
   1c234:	add	x14, x15, x14
   1c238:	cmp	x14, x13
   1c23c:	cset	w13, cc  // cc = lo, ul, last
   1c240:	cmp	x14, x9
   1c244:	cset	w15, hi  // hi = pmore
   1c248:	orr	w0, w13, w15
   1c24c:	add	x13, x14, x11
   1c250:	cmp	w0, #0x0
   1c254:	csel	x13, x13, x14, ne  // ne = any
   1c258:	cmp	x4, x10
   1c25c:	str	x13, [x8, x12]
   1c260:	b.ne	1c220 <PyInit__decimal@@Base+0x1576c>  // b.any
   1c264:	cbz	x0, 1c2ac <PyInit__decimal@@Base+0x157f8>
   1c268:	cmp	x4, x3
   1c26c:	b.cs	1c2ac <PyInit__decimal@@Base+0x157f8>  // b.hs, b.nlast
   1c270:	mov	w0, #0x1                   	// #1
   1c274:	lsl	x10, x4, #3
   1c278:	ldr	x11, [x1, x10]
   1c27c:	add	x12, x9, #0x1
   1c280:	add	x4, x4, #0x1
   1c284:	add	x11, x11, x0
   1c288:	cmp	x11, x12
   1c28c:	cset	w0, eq  // eq = none
   1c290:	csel	x11, xzr, x11, eq  // eq = none
   1c294:	str	x11, [x8, x10]
   1c298:	b.ne	1c2ac <PyInit__decimal@@Base+0x157f8>  // b.any
   1c29c:	cmp	x4, x3
   1c2a0:	b.cc	1c274 <PyInit__decimal@@Base+0x157c0>  // b.lo, b.ul, b.last
   1c2a4:	b	1c2ac <PyInit__decimal@@Base+0x157f8>
   1c2a8:	mov	x0, xzr
   1c2ac:	cmp	x4, x3
   1c2b0:	b.cs	1c340 <PyInit__decimal@@Base+0x1588c>  // b.hs, b.nlast
   1c2b4:	sub	x9, x3, x4
   1c2b8:	cmp	x9, #0x3
   1c2bc:	b.ls	1c320 <PyInit__decimal@@Base+0x1586c>  // b.plast
   1c2c0:	lsl	x11, x4, #3
   1c2c4:	lsl	x10, x3, #3
   1c2c8:	add	x12, x8, x11
   1c2cc:	add	x13, x1, x10
   1c2d0:	cmp	x12, x13
   1c2d4:	b.cs	1c2e8 <PyInit__decimal@@Base+0x15834>  // b.hs, b.nlast
   1c2d8:	add	x10, x8, x10
   1c2dc:	add	x12, x1, x11
   1c2e0:	cmp	x12, x10
   1c2e4:	b.cc	1c320 <PyInit__decimal@@Base+0x1586c>  // b.lo, b.ul, b.last
   1c2e8:	and	x10, x9, #0xfffffffffffffffc
   1c2ec:	add	x12, x11, #0x10
   1c2f0:	add	x4, x4, x10
   1c2f4:	add	x11, x1, x12
   1c2f8:	add	x12, x8, x12
   1c2fc:	mov	x13, x10
   1c300:	ldp	q0, q1, [x11, #-16]
   1c304:	add	x11, x11, #0x20
   1c308:	subs	x13, x13, #0x4
   1c30c:	stp	q0, q1, [x12, #-16]
   1c310:	add	x12, x12, #0x20
   1c314:	b.ne	1c300 <PyInit__decimal@@Base+0x1584c>  // b.any
   1c318:	cmp	x9, x10
   1c31c:	b.eq	1c340 <PyInit__decimal@@Base+0x1588c>  // b.none
   1c320:	lsl	x10, x4, #3
   1c324:	sub	x9, x3, x4
   1c328:	add	x8, x8, x10
   1c32c:	add	x10, x1, x10
   1c330:	ldr	x11, [x10], #8
   1c334:	subs	x9, x9, #0x1
   1c338:	str	x11, [x8], #8
   1c33c:	b.ne	1c330 <PyInit__decimal@@Base+0x1587c>  // b.any
   1c340:	ret
   1c344:	cbz	x2, 1c3d0 <PyInit__decimal@@Base+0x1591c>
   1c348:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1c34c:	mov	x9, #0x76180000            	// #1981284352
   1c350:	movk	x8, #0x2304, lsl #32
   1c354:	movk	x9, #0xdcfb, lsl #32
   1c358:	mov	x12, xzr
   1c35c:	movk	x8, #0x8ac7, lsl #48
   1c360:	movk	x9, #0x7538, lsl #48
   1c364:	mov	x10, x0
   1c368:	mov	x11, x2
   1c36c:	ldr	x13, [x10]
   1c370:	ldr	x14, [x1], #8
   1c374:	add	x12, x13, x12
   1c378:	add	x14, x12, x14
   1c37c:	cmp	x14, x13
   1c380:	cset	w12, cc  // cc = lo, ul, last
   1c384:	cmp	x14, x8
   1c388:	cset	w16, hi  // hi = pmore
   1c38c:	orr	w12, w12, w16
   1c390:	add	x15, x14, x9
   1c394:	cmp	w12, #0x0
   1c398:	csel	x15, x15, x14, ne  // ne = any
   1c39c:	subs	x11, x11, #0x1
   1c3a0:	str	x15, [x10], #8
   1c3a4:	b.ne	1c36c <PyInit__decimal@@Base+0x158b8>  // b.any
   1c3a8:	cmp	x14, x13
   1c3ac:	b.cc	1c3b8 <PyInit__decimal@@Base+0x15904>  // b.lo, b.ul, b.last
   1c3b0:	cmp	x14, x8
   1c3b4:	b.ls	1c3d0 <PyInit__decimal@@Base+0x1591c>  // b.plast
   1c3b8:	add	x9, x0, x2, lsl #3
   1c3bc:	ldr	x10, [x9]
   1c3c0:	cmp	x10, x8
   1c3c4:	csinc	x10, xzr, x10, eq  // eq = none
   1c3c8:	str	x10, [x9], #8
   1c3cc:	b.eq	1c3bc <PyInit__decimal@@Base+0x15908>  // b.none
   1c3d0:	ret
   1c3d4:	ldr	x8, [x0]
   1c3d8:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   1c3dc:	movk	x10, #0x2304, lsl #32
   1c3e0:	movk	x10, #0x8ac7, lsl #48
   1c3e4:	adds	x11, x8, x2
   1c3e8:	mov	x9, #0x76180000            	// #1981284352
   1c3ec:	cset	w8, cs  // cs = hs, nlast
   1c3f0:	cmp	x11, x10
   1c3f4:	movk	x9, #0xdcfb, lsl #32
   1c3f8:	cset	w12, hi  // hi = pmore
   1c3fc:	movk	x9, #0x7538, lsl #48
   1c400:	orr	w8, w8, w12
   1c404:	add	x9, x11, x9
   1c408:	cmp	w8, #0x0
   1c40c:	csel	x9, x9, x11, ne  // ne = any
   1c410:	str	x9, [x0]
   1c414:	cbz	w8, 1c454 <PyInit__decimal@@Base+0x159a0>
   1c418:	cmp	x1, #0x2
   1c41c:	b.cc	1c454 <PyInit__decimal@@Base+0x159a0>  // b.lo, b.ul, b.last
   1c420:	mov	w9, #0x1                   	// #1
   1c424:	add	x10, x10, #0x1
   1c428:	lsl	x11, x9, #3
   1c42c:	ldr	x12, [x0, x11]
   1c430:	add	x12, x12, x8
   1c434:	cmp	x12, x10
   1c438:	cset	w8, eq  // eq = none
   1c43c:	csel	x12, xzr, x12, eq  // eq = none
   1c440:	str	x12, [x0, x11]
   1c444:	b.ne	1c454 <PyInit__decimal@@Base+0x159a0>  // b.any
   1c448:	add	x9, x9, #0x1
   1c44c:	cmp	x9, x1
   1c450:	b.cc	1c428 <PyInit__decimal@@Base+0x15974>  // b.lo, b.ul, b.last
   1c454:	mov	x0, x8
   1c458:	ret
   1c45c:	cbz	x1, 1c4a8 <PyInit__decimal@@Base+0x159f4>
   1c460:	mov	x10, #0x89e80000            	// #2313682944
   1c464:	movk	x10, #0x2304, lsl #32
   1c468:	mov	x8, x0
   1c46c:	mov	x9, xzr
   1c470:	mov	w0, #0x1                   	// #1
   1c474:	movk	x10, #0x8ac7, lsl #48
   1c478:	lsl	x11, x9, #3
   1c47c:	ldr	x12, [x8, x11]
   1c480:	add	x12, x12, x0
   1c484:	cmp	x12, x10
   1c488:	cset	w0, eq  // eq = none
   1c48c:	csel	x12, xzr, x12, eq  // eq = none
   1c490:	str	x12, [x8, x11]
   1c494:	b.ne	1c4a4 <PyInit__decimal@@Base+0x159f0>  // b.any
   1c498:	add	x9, x9, #0x1
   1c49c:	cmp	x9, x1
   1c4a0:	b.cc	1c478 <PyInit__decimal@@Base+0x159c4>  // b.lo, b.ul, b.last
   1c4a4:	ret
   1c4a8:	mov	w0, #0x1                   	// #1
   1c4ac:	ret
   1c4b0:	cbz	x4, 1c538 <PyInit__decimal@@Base+0x15a84>
   1c4b4:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1c4b8:	movk	x8, #0x2304, lsl #32
   1c4bc:	mov	x9, xzr
   1c4c0:	mov	x10, xzr
   1c4c4:	movk	x8, #0x8ac7, lsl #48
   1c4c8:	lsl	x13, x9, #3
   1c4cc:	ldr	x12, [x2, x13]
   1c4d0:	ldr	x11, [x1, x13]
   1c4d4:	add	x9, x9, #0x1
   1c4d8:	add	x12, x12, x10
   1c4dc:	subs	x14, x11, x12
   1c4e0:	add	x15, x8, x14
   1c4e4:	cset	w10, cc  // cc = lo, ul, last
   1c4e8:	csinc	x14, x14, x15, cs  // cs = hs, nlast
   1c4ec:	cmp	x4, x9
   1c4f0:	str	x14, [x0, x13]
   1c4f4:	b.ne	1c4c8 <PyInit__decimal@@Base+0x15a14>  // b.any
   1c4f8:	cmp	x11, x12
   1c4fc:	b.cs	1c538 <PyInit__decimal@@Base+0x15a84>  // b.hs, b.nlast
   1c500:	cmp	x4, x3
   1c504:	b.cs	1c538 <PyInit__decimal@@Base+0x15a84>  // b.hs, b.nlast
   1c508:	mov	w9, #0x1                   	// #1
   1c50c:	lsl	x10, x4, #3
   1c510:	ldr	x11, [x1, x10]
   1c514:	add	x4, x4, #0x1
   1c518:	sub	x12, x11, x9
   1c51c:	cmp	x11, #0x0
   1c520:	cset	w9, eq  // eq = none
   1c524:	csel	x12, x8, x12, eq  // eq = none
   1c528:	str	x12, [x0, x10]
   1c52c:	cbnz	x11, 1c538 <PyInit__decimal@@Base+0x15a84>
   1c530:	cmp	x4, x3
   1c534:	b.cc	1c50c <PyInit__decimal@@Base+0x15a58>  // b.lo, b.ul, b.last
   1c538:	cmp	x4, x3
   1c53c:	b.cs	1c5cc <PyInit__decimal@@Base+0x15b18>  // b.hs, b.nlast
   1c540:	sub	x8, x3, x4
   1c544:	cmp	x8, #0x3
   1c548:	b.ls	1c5ac <PyInit__decimal@@Base+0x15af8>  // b.plast
   1c54c:	lsl	x10, x4, #3
   1c550:	lsl	x9, x3, #3
   1c554:	add	x11, x0, x10
   1c558:	add	x12, x1, x9
   1c55c:	cmp	x11, x12
   1c560:	b.cs	1c574 <PyInit__decimal@@Base+0x15ac0>  // b.hs, b.nlast
   1c564:	add	x9, x0, x9
   1c568:	add	x11, x1, x10
   1c56c:	cmp	x11, x9
   1c570:	b.cc	1c5ac <PyInit__decimal@@Base+0x15af8>  // b.lo, b.ul, b.last
   1c574:	and	x9, x8, #0xfffffffffffffffc
   1c578:	add	x11, x10, #0x10
   1c57c:	add	x4, x4, x9
   1c580:	add	x10, x1, x11
   1c584:	add	x11, x0, x11
   1c588:	mov	x12, x9
   1c58c:	ldp	q0, q1, [x10, #-16]
   1c590:	add	x10, x10, #0x20
   1c594:	subs	x12, x12, #0x4
   1c598:	stp	q0, q1, [x11, #-16]
   1c59c:	add	x11, x11, #0x20
   1c5a0:	b.ne	1c58c <PyInit__decimal@@Base+0x15ad8>  // b.any
   1c5a4:	cmp	x8, x9
   1c5a8:	b.eq	1c5cc <PyInit__decimal@@Base+0x15b18>  // b.none
   1c5ac:	lsl	x10, x4, #3
   1c5b0:	sub	x8, x3, x4
   1c5b4:	add	x9, x0, x10
   1c5b8:	add	x10, x1, x10
   1c5bc:	ldr	x11, [x10], #8
   1c5c0:	subs	x8, x8, #0x1
   1c5c4:	str	x11, [x9], #8
   1c5c8:	b.ne	1c5bc <PyInit__decimal@@Base+0x15b08>  // b.any
   1c5cc:	ret
   1c5d0:	cbz	x2, 1c638 <PyInit__decimal@@Base+0x15b84>
   1c5d4:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1c5d8:	movk	x8, #0x2304, lsl #32
   1c5dc:	mov	x9, xzr
   1c5e0:	movk	x8, #0x8ac7, lsl #48
   1c5e4:	mov	x10, x0
   1c5e8:	mov	x11, x2
   1c5ec:	ldr	x12, [x10]
   1c5f0:	ldr	x13, [x1], #8
   1c5f4:	add	x13, x13, x9
   1c5f8:	subs	x14, x12, x13
   1c5fc:	add	x15, x8, x14
   1c600:	csinc	x14, x14, x15, cs  // cs = hs, nlast
   1c604:	cset	w9, cc  // cc = lo, ul, last
   1c608:	subs	x11, x11, #0x1
   1c60c:	str	x14, [x10], #8
   1c610:	b.ne	1c5ec <PyInit__decimal@@Base+0x15b38>  // b.any
   1c614:	cmp	x12, x13
   1c618:	b.cs	1c638 <PyInit__decimal@@Base+0x15b84>  // b.hs, b.nlast
   1c61c:	add	x9, x0, x2, lsl #3
   1c620:	ldr	x10, [x9]
   1c624:	sub	x11, x10, #0x1
   1c628:	cmp	x10, #0x0
   1c62c:	csel	x11, x8, x11, eq  // eq = none
   1c630:	str	x11, [x9], #8
   1c634:	cbz	x10, 1c620 <PyInit__decimal@@Base+0x15b6c>
   1c638:	ret
   1c63c:	mov	x13, xzr
   1c640:	cbz	x2, 1c6dc <PyInit__decimal@@Base+0x15c28>
   1c644:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1c648:	ldr	x8, [x8, #3392]
   1c64c:	mov	x9, #0x89e80000            	// #2313682944
   1c650:	mov	x10, #0x76180000            	// #1981284352
   1c654:	movk	x9, #0x2304, lsl #32
   1c658:	movk	x10, #0xdcfb, lsl #32
   1c65c:	movk	x9, #0x8ac7, lsl #48
   1c660:	movk	x10, #0x7538, lsl #48
   1c664:	mov	x11, x0
   1c668:	mov	x12, x2
   1c66c:	ldr	x14, [x1], #8
   1c670:	umulh	x15, x14, x3
   1c674:	mul	x14, x14, x3
   1c678:	adds	x13, x13, x14
   1c67c:	cinc	x14, x15, cs  // cs = hs, nlast
   1c680:	asr	x15, x13, #63
   1c684:	and	x16, x15, x9
   1c688:	sub	x15, x14, x15
   1c68c:	add	x16, x16, x13
   1c690:	umulh	x17, x15, x8
   1c694:	mul	x15, x15, x8
   1c698:	mvn	x16, x16
   1c69c:	add	x17, x14, x17
   1c6a0:	cmp	x16, x15
   1c6a4:	cinc	x15, x17, cc  // cc = lo, ul, last
   1c6a8:	mvn	x15, x15
   1c6ac:	umulh	x16, x15, x9
   1c6b0:	mul	x17, x15, x9
   1c6b4:	adds	x17, x13, x17
   1c6b8:	add	x13, x14, x16
   1c6bc:	cinc	x13, x13, cs  // cs = hs, nlast
   1c6c0:	add	x14, x13, x10
   1c6c4:	sub	x13, x14, x15
   1c6c8:	and	x14, x14, x9
   1c6cc:	add	x14, x14, x17
   1c6d0:	subs	x12, x12, #0x1
   1c6d4:	str	x14, [x11], #8
   1c6d8:	b.ne	1c66c <PyInit__decimal@@Base+0x15bb8>  // b.any
   1c6dc:	str	x13, [x0, x2, lsl #3]
   1c6e0:	ret
   1c6e4:	stp	x29, x30, [sp, #-16]!
   1c6e8:	mov	x29, sp
   1c6ec:	cbz	x4, 1c7c4 <PyInit__decimal@@Base+0x15d10>
   1c6f0:	cbz	x3, 1c7cc <PyInit__decimal@@Base+0x15d18>
   1c6f4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1c6f8:	ldr	x9, [x9, #3392]
   1c6fc:	mov	x10, #0x89e80000            	// #2313682944
   1c700:	mov	x11, #0x76180000            	// #1981284352
   1c704:	movk	x10, #0x2304, lsl #32
   1c708:	movk	x11, #0xdcfb, lsl #32
   1c70c:	mov	x8, xzr
   1c710:	movk	x10, #0x8ac7, lsl #48
   1c714:	movk	x11, #0x7538, lsl #48
   1c718:	mov	x12, x0
   1c71c:	mov	x16, xzr
   1c720:	mov	x13, x1
   1c724:	mov	x14, x12
   1c728:	mov	x15, x3
   1c72c:	ldr	x17, [x13], #8
   1c730:	ldr	x18, [x2, x8, lsl #3]
   1c734:	ldr	x5, [x14]
   1c738:	umulh	x6, x18, x17
   1c73c:	mul	x17, x18, x17
   1c740:	adds	x17, x5, x17
   1c744:	cinc	x18, x6, cs  // cs = hs, nlast
   1c748:	adds	x16, x17, x16
   1c74c:	cinc	x17, x18, cs  // cs = hs, nlast
   1c750:	asr	x18, x16, #63
   1c754:	and	x5, x18, x10
   1c758:	sub	x18, x17, x18
   1c75c:	add	x5, x5, x16
   1c760:	umulh	x6, x18, x9
   1c764:	mul	x18, x18, x9
   1c768:	mvn	x5, x5
   1c76c:	add	x6, x17, x6
   1c770:	cmp	x5, x18
   1c774:	cinc	x18, x6, cc  // cc = lo, ul, last
   1c778:	mvn	x18, x18
   1c77c:	umulh	x5, x18, x10
   1c780:	mul	x6, x18, x10
   1c784:	adds	x6, x16, x6
   1c788:	add	x16, x17, x5
   1c78c:	cinc	x16, x16, cs  // cs = hs, nlast
   1c790:	add	x17, x16, x11
   1c794:	sub	x16, x17, x18
   1c798:	and	x17, x17, x10
   1c79c:	add	x17, x17, x6
   1c7a0:	subs	x15, x15, #0x1
   1c7a4:	str	x17, [x14], #8
   1c7a8:	b.ne	1c72c <PyInit__decimal@@Base+0x15c78>  // b.any
   1c7ac:	add	x13, x8, x3
   1c7b0:	add	x8, x8, #0x1
   1c7b4:	cmp	x8, x4
   1c7b8:	add	x12, x12, #0x8
   1c7bc:	str	x16, [x0, x13, lsl #3]
   1c7c0:	b.ne	1c71c <PyInit__decimal@@Base+0x15c68>  // b.any
   1c7c4:	ldp	x29, x30, [sp], #16
   1c7c8:	ret
   1c7cc:	lsl	x2, x4, #3
   1c7d0:	mov	w1, wzr
   1c7d4:	bl	65b0 <memset@plt>
   1c7d8:	ldp	x29, x30, [sp], #16
   1c7dc:	ret
   1c7e0:	stp	x29, x30, [sp, #-80]!
   1c7e4:	str	x25, [sp, #16]
   1c7e8:	stp	x24, x23, [sp, #32]
   1c7ec:	stp	x22, x21, [sp, #48]
   1c7f0:	stp	x20, x19, [sp, #64]
   1c7f4:	mov	x29, sp
   1c7f8:	cbz	x2, 1c85c <PyInit__decimal@@Base+0x15da8>
   1c7fc:	mov	x23, #0x89e80000            	// #2313682944
   1c800:	mov	x8, x0
   1c804:	movk	x23, #0x2304, lsl #32
   1c808:	mov	x19, x3
   1c80c:	mov	x0, xzr
   1c810:	sub	x21, x8, #0x8
   1c814:	sub	x22, x1, #0x8
   1c818:	movk	x23, #0x8ac7, lsl #48
   1c81c:	lsl	x24, x2, #3
   1c820:	ldr	x8, [x22, x24]
   1c824:	mul	x10, x0, x23
   1c828:	umulh	x9, x0, x23
   1c82c:	sub	x25, x2, #0x1
   1c830:	adds	x20, x8, x10
   1c834:	cinc	x1, x9, cs  // cs = hs, nlast
   1c838:	mov	x0, x20
   1c83c:	mov	x2, x19
   1c840:	mov	x3, xzr
   1c844:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1c848:	str	x0, [x21, x24]
   1c84c:	msub	x0, x0, x19, x20
   1c850:	mov	x2, x25
   1c854:	cbnz	x25, 1c81c <PyInit__decimal@@Base+0x15d68>
   1c858:	b	1c860 <PyInit__decimal@@Base+0x15dac>
   1c85c:	mov	x0, xzr
   1c860:	ldp	x20, x19, [sp, #64]
   1c864:	ldp	x22, x21, [sp, #48]
   1c868:	ldp	x24, x23, [sp, #32]
   1c86c:	ldr	x25, [sp, #16]
   1c870:	ldp	x29, x30, [sp], #80
   1c874:	ret
   1c878:	stp	x29, x30, [sp, #-96]!
   1c87c:	stp	x28, x27, [sp, #16]
   1c880:	stp	x26, x25, [sp, #32]
   1c884:	stp	x24, x23, [sp, #48]
   1c888:	stp	x22, x21, [sp, #64]
   1c88c:	stp	x20, x19, [sp, #80]
   1c890:	mov	x29, sp
   1c894:	sub	sp, sp, #0x440
   1c898:	subs	x25, x4, x5
   1c89c:	str	x0, [sp, #24]
   1c8a0:	b.cc	1cde4 <PyInit__decimal@@Base+0x16330>  // b.lo, b.ul, b.last
   1c8a4:	sub	x22, x5, #0x1
   1c8a8:	ldr	x19, [x3, x22, lsl #3]
   1c8ac:	mov	x21, x5
   1c8b0:	mov	x28, x4
   1c8b4:	mov	x26, x3
   1c8b8:	mov	x27, x2
   1c8bc:	mov	x23, x1
   1c8c0:	cmp	x4, #0x40
   1c8c4:	b.cc	1c910 <PyInit__decimal@@Base+0x15e5c>  // b.lo, b.ul, b.last
   1c8c8:	add	x0, x28, #0x1
   1c8cc:	mov	w1, #0x8                   	// #8
   1c8d0:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   1c8d4:	mov	x24, x0
   1c8d8:	cbz	x0, 1c908 <PyInit__decimal@@Base+0x15e54>
   1c8dc:	cmp	x21, #0x40
   1c8e0:	b.cc	1c91c <PyInit__decimal@@Base+0x15e68>  // b.lo, b.ul, b.last
   1c8e4:	add	x0, x21, #0x1
   1c8e8:	mov	w1, #0x8                   	// #8
   1c8ec:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   1c8f0:	mov	x20, x0
   1c8f4:	cbnz	x0, 1c920 <PyInit__decimal@@Base+0x15e6c>
   1c8f8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1c8fc:	ldr	x8, [x8, #1376]
   1c900:	mov	x0, x24
   1c904:	blr	x8
   1c908:	mov	w21, #0xffffffff            	// #-1
   1c90c:	b	1cda8 <PyInit__decimal@@Base+0x162f4>
   1c910:	add	x24, sp, #0x238
   1c914:	cmp	x21, #0x40
   1c918:	b.cs	1c8e4 <PyInit__decimal@@Base+0x15e30>  // b.hs, b.nlast
   1c91c:	add	x20, sp, #0x38
   1c920:	stp	x23, x22, [sp, #8]
   1c924:	mov	x23, #0x89e80000            	// #2313682944
   1c928:	movk	x23, #0x2304, lsl #32
   1c92c:	mov	x22, #0x89e80000            	// #2313682944
   1c930:	mov	x18, #0x76180000            	// #1981284352
   1c934:	movk	x23, #0x8ac7, lsl #48
   1c938:	add	x8, x19, #0x1
   1c93c:	movk	x22, #0x2304, lsl #32
   1c940:	movk	x18, #0xdcfb, lsl #32
   1c944:	movk	x22, #0x8ac7, lsl #48
   1c948:	movk	x18, #0x7538, lsl #48
   1c94c:	udiv	x17, x23, x8
   1c950:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1c954:	mov	x12, xzr
   1c958:	cbz	x28, 1c9d8 <PyInit__decimal@@Base+0x15f24>
   1c95c:	ldr	x9, [x8, #3392]
   1c960:	mov	x10, x24
   1c964:	mov	x11, x28
   1c968:	ldr	x13, [x27], #8
   1c96c:	umulh	x14, x13, x17
   1c970:	mul	x13, x13, x17
   1c974:	adds	x12, x12, x13
   1c978:	cinc	x13, x14, cs  // cs = hs, nlast
   1c97c:	asr	x14, x12, #63
   1c980:	and	x15, x14, x23
   1c984:	sub	x14, x13, x14
   1c988:	add	x15, x15, x12
   1c98c:	umulh	x16, x14, x9
   1c990:	mul	x14, x14, x9
   1c994:	mvn	x15, x15
   1c998:	add	x16, x13, x16
   1c99c:	cmp	x15, x14
   1c9a0:	cinc	x14, x16, cc  // cc = lo, ul, last
   1c9a4:	mvn	x14, x14
   1c9a8:	add	x13, x13, x18
   1c9ac:	umulh	x15, x14, x22
   1c9b0:	mul	x16, x14, x22
   1c9b4:	adds	x16, x12, x16
   1c9b8:	add	x12, x13, x15
   1c9bc:	cinc	x13, x12, cs  // cs = hs, nlast
   1c9c0:	sub	x12, x13, x14
   1c9c4:	and	x13, x13, x23
   1c9c8:	add	x13, x13, x16
   1c9cc:	subs	x11, x11, #0x1
   1c9d0:	str	x13, [x10], #8
   1c9d4:	b.ne	1c968 <PyInit__decimal@@Base+0x15eb4>  // b.any
   1c9d8:	str	x12, [x24, x28, lsl #3]
   1c9dc:	mov	x12, xzr
   1c9e0:	cbz	x21, 1ca60 <PyInit__decimal@@Base+0x15fac>
   1c9e4:	ldr	x9, [x8, #3392]
   1c9e8:	mov	x10, x20
   1c9ec:	mov	x11, x21
   1c9f0:	ldr	x13, [x26], #8
   1c9f4:	umulh	x14, x13, x17
   1c9f8:	mul	x13, x13, x17
   1c9fc:	adds	x12, x12, x13
   1ca00:	cinc	x13, x14, cs  // cs = hs, nlast
   1ca04:	asr	x14, x12, #63
   1ca08:	and	x15, x14, x23
   1ca0c:	sub	x14, x13, x14
   1ca10:	add	x15, x15, x12
   1ca14:	umulh	x16, x14, x9
   1ca18:	mul	x14, x14, x9
   1ca1c:	mvn	x15, x15
   1ca20:	add	x16, x13, x16
   1ca24:	cmp	x15, x14
   1ca28:	cinc	x14, x16, cc  // cc = lo, ul, last
   1ca2c:	mvn	x14, x14
   1ca30:	add	x13, x13, x18
   1ca34:	umulh	x15, x14, x22
   1ca38:	mul	x16, x14, x22
   1ca3c:	adds	x16, x12, x16
   1ca40:	add	x12, x13, x15
   1ca44:	cinc	x13, x12, cs  // cs = hs, nlast
   1ca48:	sub	x12, x13, x14
   1ca4c:	and	x13, x13, x23
   1ca50:	add	x13, x13, x16
   1ca54:	subs	x11, x11, #0x1
   1ca58:	str	x13, [x10], #8
   1ca5c:	b.ne	1c9f0 <PyInit__decimal@@Base+0x15f3c>  // b.any
   1ca60:	cmn	x25, #0x1
   1ca64:	str	x17, [sp]
   1ca68:	str	x12, [x20, x21, lsl #3]
   1ca6c:	b.eq	1cce8 <PyInit__decimal@@Base+0x16234>  // b.none
   1ca70:	ldr	x27, [x8, #3392]
   1ca74:	sub	x17, x21, #0x2
   1ca78:	add	x19, x24, x25, lsl #3
   1ca7c:	add	x13, x24, x28, lsl #3
   1ca80:	str	x24, [sp, #48]
   1ca84:	b	1ca98 <PyInit__decimal@@Base+0x15fe4>
   1ca88:	sub	x25, x0, #0x1
   1ca8c:	sub	x19, x19, #0x8
   1ca90:	sub	x13, x13, #0x8
   1ca94:	cbz	x0, 1cce8 <PyInit__decimal@@Base+0x16234>
   1ca98:	ldr	x9, [sp, #16]
   1ca9c:	add	x8, x24, x25, lsl #3
   1caa0:	stp	x25, x13, [sp, #32]
   1caa4:	add	x8, x8, x21, lsl #3
   1caa8:	ldr	x25, [x20, x9, lsl #3]
   1caac:	ldp	x8, x9, [x8, #-8]
   1cab0:	mov	x3, xzr
   1cab4:	mov	x28, x17
   1cab8:	mov	x2, x25
   1cabc:	udiv	x24, x9, x25
   1cac0:	msub	x9, x25, x24, x9
   1cac4:	umulh	x10, x9, x22
   1cac8:	mul	x9, x9, x22
   1cacc:	adds	x26, x8, x9
   1cad0:	cinc	x1, x10, cs  // cs = hs, nlast
   1cad4:	mov	x0, x26
   1cad8:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1cadc:	msub	x9, x25, x0, x26
   1cae0:	madd	x8, x24, x23, x0
   1cae4:	ldr	x0, [sp, #32]
   1cae8:	mov	x18, #0x76180000            	// #1981284352
   1caec:	movk	x18, #0xdcfb, lsl #32
   1caf0:	movk	x18, #0x7538, lsl #48
   1caf4:	mov	x17, x28
   1caf8:	add	x10, x28, x0
   1cafc:	cmp	x8, x23
   1cb00:	b.cs	1cb80 <PyInit__decimal@@Base+0x160cc>  // b.hs, b.nlast
   1cb04:	ldr	x11, [x20, x17, lsl #3]
   1cb08:	umulh	x12, x11, x8
   1cb0c:	mul	x11, x11, x8
   1cb10:	asr	x13, x11, #63
   1cb14:	sub	x14, x12, x13
   1cb18:	and	x13, x13, x23
   1cb1c:	add	x13, x13, x11
   1cb20:	umulh	x15, x14, x27
   1cb24:	mul	x14, x14, x27
   1cb28:	mvn	x13, x13
   1cb2c:	add	x15, x15, x12
   1cb30:	cmp	x13, x14
   1cb34:	cinc	x13, x15, cc  // cc = lo, ul, last
   1cb38:	mvn	x13, x13
   1cb3c:	add	x12, x12, x18
   1cb40:	umulh	x14, x13, x22
   1cb44:	mul	x15, x13, x22
   1cb48:	adds	x11, x15, x11
   1cb4c:	add	x12, x12, x14
   1cb50:	cinc	x12, x12, cs  // cs = hs, nlast
   1cb54:	sub	x13, x12, x13
   1cb58:	cmp	x13, x9
   1cb5c:	b.hi	1cb80 <PyInit__decimal@@Base+0x160cc>  // b.pmore
   1cb60:	cmp	x9, x13
   1cb64:	b.ne	1cb98 <PyInit__decimal@@Base+0x160e4>  // b.any
   1cb68:	ldr	x13, [sp, #48]
   1cb6c:	and	x12, x12, x23
   1cb70:	add	x11, x12, x11
   1cb74:	ldr	x13, [x13, x10, lsl #3]
   1cb78:	cmp	x11, x13
   1cb7c:	b.ls	1cb98 <PyInit__decimal@@Base+0x160e4>  // b.plast
   1cb80:	adds	x9, x9, x25
   1cb84:	sub	x8, x8, #0x1
   1cb88:	b.cs	1cb98 <PyInit__decimal@@Base+0x160e4>  // b.hs, b.nlast
   1cb8c:	sub	x11, x23, #0x1
   1cb90:	cmp	x9, x11
   1cb94:	b.ls	1cafc <PyInit__decimal@@Base+0x16048>  // b.plast
   1cb98:	mov	x9, xzr
   1cb9c:	mov	x10, xzr
   1cba0:	mov	x11, xzr
   1cba4:	lsl	x12, x10, #3
   1cba8:	ldr	x13, [x20, x12]
   1cbac:	add	x10, x10, #0x1
   1cbb0:	mul	x15, x8, x13
   1cbb4:	umulh	x14, x8, x13
   1cbb8:	adds	x11, x11, x15
   1cbbc:	madd	x13, x9, x13, x14
   1cbc0:	asr	x14, x11, #63
   1cbc4:	cinc	x13, x13, cs  // cs = hs, nlast
   1cbc8:	and	x15, x14, x23
   1cbcc:	sub	x14, x13, x14
   1cbd0:	add	x15, x15, x11
   1cbd4:	umulh	x16, x14, x27
   1cbd8:	mul	x14, x14, x27
   1cbdc:	mvn	x15, x15
   1cbe0:	add	x16, x13, x16
   1cbe4:	cmp	x15, x14
   1cbe8:	cinc	x14, x16, cc  // cc = lo, ul, last
   1cbec:	mvn	x15, x14
   1cbf0:	mul	x16, x15, x22
   1cbf4:	add	x13, x13, x18
   1cbf8:	umulh	x15, x15, x22
   1cbfc:	adds	x11, x11, x16
   1cc00:	ldr	x16, [x19, x12]
   1cc04:	add	x13, x13, x15
   1cc08:	cinc	x13, x13, cs  // cs = hs, nlast
   1cc0c:	add	x14, x14, x13
   1cc10:	and	x13, x13, x23
   1cc14:	add	x11, x13, x11
   1cc18:	subs	x11, x16, x11
   1cc1c:	cinc	x13, x14, cc  // cc = lo, ul, last
   1cc20:	add	x14, x11, x23
   1cc24:	csel	x11, x14, x11, cc  // cc = lo, ul, last
   1cc28:	cmp	x10, x21
   1cc2c:	str	x11, [x19, x12]
   1cc30:	add	x11, x13, #0x1
   1cc34:	b.ls	1cba4 <PyInit__decimal@@Base+0x160f0>  // b.plast
   1cc38:	ldr	x9, [sp, #24]
   1cc3c:	str	x8, [x9, x0, lsl #3]
   1cc40:	ldp	x13, x24, [sp, #40]
   1cc44:	cbz	x11, 1ca88 <PyInit__decimal@@Base+0x15fd4>
   1cc48:	ldr	x9, [sp, #24]
   1cc4c:	sub	x8, x8, #0x1
   1cc50:	str	x8, [x9, x0, lsl #3]
   1cc54:	cbz	x21, 1ca88 <PyInit__decimal@@Base+0x15fd4>
   1cc58:	mov	x8, xzr
   1cc5c:	mov	x9, xzr
   1cc60:	lsl	x10, x8, #3
   1cc64:	ldr	x11, [x19, x10]
   1cc68:	ldr	x12, [x20, x10]
   1cc6c:	add	x8, x8, #0x1
   1cc70:	add	x9, x11, x9
   1cc74:	add	x12, x9, x12
   1cc78:	sub	x9, x23, #0x1
   1cc7c:	cmp	x12, x11
   1cc80:	cset	w11, cc  // cc = lo, ul, last
   1cc84:	cmp	x12, x9
   1cc88:	cset	w9, hi  // hi = pmore
   1cc8c:	orr	w9, w11, w9
   1cc90:	add	x11, x12, x18
   1cc94:	cmp	w9, #0x0
   1cc98:	csel	x11, x11, x12, ne  // ne = any
   1cc9c:	cmp	x21, x8
   1cca0:	str	x11, [x19, x10]
   1cca4:	b.ne	1cc60 <PyInit__decimal@@Base+0x161ac>  // b.any
   1cca8:	cbz	w9, 1ca88 <PyInit__decimal@@Base+0x15fd4>
   1ccac:	mov	x8, x13
   1ccb0:	mov	x9, x21
   1ccb4:	mov	w10, #0x1                   	// #1
   1ccb8:	ldr	x11, [x8]
   1ccbc:	add	x11, x11, x10
   1ccc0:	cmp	x11, x23
   1ccc4:	csel	x12, xzr, x11, eq  // eq = none
   1ccc8:	cset	w10, eq  // eq = none
   1cccc:	cmp	x9, x21
   1ccd0:	str	x12, [x8], #8
   1ccd4:	b.cs	1ca88 <PyInit__decimal@@Base+0x15fd4>  // b.hs, b.nlast
   1ccd8:	cmp	x11, x23
   1ccdc:	add	x9, x9, #0x1
   1cce0:	b.eq	1ccb8 <PyInit__decimal@@Base+0x16204>  // b.none
   1cce4:	b	1ca88 <PyInit__decimal@@Base+0x15fd4>
   1cce8:	ldr	x9, [sp, #8]
   1ccec:	cbz	x9, 1cd5c <PyInit__decimal@@Base+0x162a8>
   1ccf0:	cbz	x21, 1cd74 <PyInit__decimal@@Base+0x162c0>
   1ccf4:	ldr	x27, [sp]
   1ccf8:	mov	x8, xzr
   1ccfc:	sub	x19, x9, #0x8
   1cd00:	mov	x26, x24
   1cd04:	sub	x23, x24, #0x8
   1cd08:	lsl	x24, x21, #3
   1cd0c:	ldr	x9, [x23, x24]
   1cd10:	umulh	x10, x8, x22
   1cd14:	mul	x8, x8, x22
   1cd18:	sub	x25, x21, #0x1
   1cd1c:	adds	x21, x9, x8
   1cd20:	cinc	x1, x10, cs  // cs = hs, nlast
   1cd24:	mov	x0, x21
   1cd28:	mov	x2, x27
   1cd2c:	mov	x3, xzr
   1cd30:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1cd34:	msub	x8, x27, x0, x21
   1cd38:	mov	x21, x25
   1cd3c:	str	x0, [x19, x24]
   1cd40:	cbnz	x25, 1cd08 <PyInit__decimal@@Base+0x16254>
   1cd44:	mov	x24, x26
   1cd48:	add	x8, sp, #0x238
   1cd4c:	cmp	x24, x8
   1cd50:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   1cd54:	b.ne	1cd84 <PyInit__decimal@@Base+0x162d0>  // b.any
   1cd58:	b	1cd90 <PyInit__decimal@@Base+0x162dc>
   1cd5c:	ldr	x9, [sp, #16]
   1cd60:	tbnz	x9, #63, 1cdcc <PyInit__decimal@@Base+0x16318>
   1cd64:	ldr	x8, [x24, x9, lsl #3]
   1cd68:	sub	x9, x9, #0x1
   1cd6c:	cbz	x8, 1cd60 <PyInit__decimal@@Base+0x162ac>
   1cd70:	mov	w21, #0x1                   	// #1
   1cd74:	add	x8, sp, #0x238
   1cd78:	cmp	x24, x8
   1cd7c:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   1cd80:	b.eq	1cd90 <PyInit__decimal@@Base+0x162dc>  // b.none
   1cd84:	ldr	x8, [x19, #1376]
   1cd88:	mov	x0, x24
   1cd8c:	blr	x8
   1cd90:	add	x8, sp, #0x38
   1cd94:	cmp	x20, x8
   1cd98:	b.eq	1cda8 <PyInit__decimal@@Base+0x162f4>  // b.none
   1cd9c:	ldr	x8, [x19, #1376]
   1cda0:	mov	x0, x20
   1cda4:	blr	x8
   1cda8:	mov	w0, w21
   1cdac:	add	sp, sp, #0x440
   1cdb0:	ldp	x20, x19, [sp, #80]
   1cdb4:	ldp	x22, x21, [sp, #64]
   1cdb8:	ldp	x24, x23, [sp, #48]
   1cdbc:	ldp	x26, x25, [sp, #32]
   1cdc0:	ldp	x28, x27, [sp, #16]
   1cdc4:	ldp	x29, x30, [sp], #96
   1cdc8:	ret
   1cdcc:	mov	w21, wzr
   1cdd0:	add	x8, sp, #0x238
   1cdd4:	cmp	x24, x8
   1cdd8:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   1cddc:	b.ne	1cd84 <PyInit__decimal@@Base+0x162d0>  // b.any
   1cde0:	b	1cd90 <PyInit__decimal@@Base+0x162dc>
   1cde4:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   1cde8:	ldr	x19, [x19, #3904]
   1cdec:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1cdf0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   1cdf4:	add	x1, x1, #0x9da
   1cdf8:	ldr	x0, [x19]
   1cdfc:	add	x2, x2, #0x9e9
   1ce00:	mov	w3, #0x25c                 	// #604
   1ce04:	bl	69b0 <fprintf@plt>
   1ce08:	ldr	x3, [x19]
   1ce0c:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   1ce10:	add	x0, x0, #0xa25
   1ce14:	mov	w1, #0x29                  	// #41
   1ce18:	mov	w2, #0x1                   	// #1
   1ce1c:	bl	6870 <fwrite@plt>
   1ce20:	ldr	x1, [x19]
   1ce24:	mov	w0, #0xa                   	// #10
   1ce28:	bl	64f0 <fputc@plt>
   1ce2c:	bl	6700 <abort@plt>
   1ce30:	sub	sp, sp, #0x80
   1ce34:	stp	x29, x30, [sp, #32]
   1ce38:	stp	x28, x27, [sp, #48]
   1ce3c:	stp	x26, x25, [sp, #64]
   1ce40:	stp	x24, x23, [sp, #80]
   1ce44:	stp	x22, x21, [sp, #96]
   1ce48:	stp	x20, x19, [sp, #112]
   1ce4c:	add	x29, sp, #0x20
   1ce50:	mov	x8, #0x435f                	// #17247
   1ce54:	movk	x8, #0xd79, lsl #16
   1ce58:	movk	x8, #0x35e5, lsl #32
   1ce5c:	movk	x8, #0xd794, lsl #48
   1ce60:	umulh	x8, x4, x8
   1ce64:	lsr	x19, x8, #4
   1ce68:	mov	x8, #0xffffffffffffffed    	// #-19
   1ce6c:	mov	x21, x3
   1ce70:	mov	x23, x1
   1ce74:	madd	x25, x19, x8, x4
   1ce78:	mov	x20, x0
   1ce7c:	cbz	x25, 1cf20 <PyInit__decimal@@Base+0x1646c>
   1ce80:	add	x8, x23, x21, lsl #3
   1ce84:	mov	x24, x2
   1ce88:	sub	x26, x2, #0x1
   1ce8c:	ldur	x2, [x8, #-8]
   1ce90:	mov	w8, #0x13                  	// #19
   1ce94:	sub	x22, x8, x25
   1ce98:	adrp	x27, 44000 <PyInit__decimal@@Base+0x3d54c>
   1ce9c:	add	x0, sp, #0x8
   1cea0:	add	x1, sp, #0x10
   1cea4:	mov	x3, x22
   1cea8:	add	x27, x27, #0xca0
   1ceac:	sub	x28, x21, #0x2
   1ceb0:	bl	1cf6c <PyInit__decimal@@Base+0x164b8>
   1ceb4:	ldr	x8, [sp, #8]
   1ceb8:	cbz	x8, 1cec8 <PyInit__decimal@@Base+0x16414>
   1cebc:	sub	x9, x24, #0x2
   1cec0:	str	x8, [x20, x26, lsl #3]
   1cec4:	mov	x26, x9
   1cec8:	ldr	x24, [x27, x25, lsl #3]
   1cecc:	ldr	x25, [sp, #16]
   1ced0:	cmn	x28, #0x1
   1ced4:	b.eq	1cf14 <PyInit__decimal@@Base+0x16460>  // b.none
   1ced8:	add	x26, x20, x26, lsl #3
   1cedc:	sub	x23, x23, #0x10
   1cee0:	ldr	x2, [x23, x21, lsl #3]
   1cee4:	add	x0, sp, #0x8
   1cee8:	sub	x1, x29, #0x8
   1ceec:	mov	x3, x22
   1cef0:	bl	1cf6c <PyInit__decimal@@Base+0x164b8>
   1cef4:	ldr	x8, [sp, #8]
   1cef8:	sub	x21, x21, #0x1
   1cefc:	cmp	x21, #0x1
   1cf00:	madd	x8, x25, x24, x8
   1cf04:	str	x8, [x26], #-8
   1cf08:	ldur	x25, [x29, #-8]
   1cf0c:	b.ne	1cee0 <PyInit__decimal@@Base+0x1642c>  // b.any
   1cf10:	str	x25, [sp, #16]
   1cf14:	mul	x8, x25, x24
   1cf18:	str	x8, [x20, x19, lsl #3]
   1cf1c:	b	1cf44 <PyInit__decimal@@Base+0x16490>
   1cf20:	cbz	x21, 1cf44 <PyInit__decimal@@Base+0x16490>
   1cf24:	add	x8, x20, x19, lsl #3
   1cf28:	sub	x8, x8, #0x8
   1cf2c:	sub	x9, x23, #0x8
   1cf30:	lsl	x10, x21, #3
   1cf34:	ldr	x11, [x9, x10]
   1cf38:	subs	x21, x21, #0x1
   1cf3c:	str	x11, [x8, x10]
   1cf40:	b.ne	1cf30 <PyInit__decimal@@Base+0x1647c>  // b.any
   1cf44:	mov	x0, x20
   1cf48:	mov	x1, x19
   1cf4c:	ldp	x20, x19, [sp, #112]
   1cf50:	ldp	x22, x21, [sp, #96]
   1cf54:	ldp	x24, x23, [sp, #80]
   1cf58:	ldp	x26, x25, [sp, #64]
   1cf5c:	ldp	x28, x27, [sp, #48]
   1cf60:	ldp	x29, x30, [sp, #32]
   1cf64:	add	sp, sp, #0x80
   1cf68:	b	2297c <PyInit__decimal@@Base+0x1bec8>
   1cf6c:	cmp	x3, #0x9
   1cf70:	b.hi	1cfa4 <PyInit__decimal@@Base+0x164f0>  // b.pmore
   1cf74:	cmp	x3, #0x4
   1cf78:	b.hi	1cff8 <PyInit__decimal@@Base+0x16544>  // b.pmore
   1cf7c:	b.hi	1d2d4 <PyInit__decimal@@Base+0x16820>  // b.pmore
   1cf80:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1cf84:	add	x8, x8, #0x9d5
   1cf88:	adr	x9, 1cf98 <PyInit__decimal@@Base+0x164e4>
   1cf8c:	ldrb	w10, [x8, x3]
   1cf90:	add	x9, x9, x10, lsl #2
   1cf94:	br	x9
   1cf98:	str	x2, [x0]
   1cf9c:	str	xzr, [x1]
   1cfa0:	ret
   1cfa4:	cmp	x3, #0xe
   1cfa8:	b.hi	1d044 <PyInit__decimal@@Base+0x16590>  // b.pmore
   1cfac:	sub	x8, x3, #0xa
   1cfb0:	cmp	x8, #0x4
   1cfb4:	b.hi	1d2d4 <PyInit__decimal@@Base+0x16820>  // b.pmore
   1cfb8:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1cfbc:	add	x9, x9, #0x9cb
   1cfc0:	adr	x10, 1cfd0 <PyInit__decimal@@Base+0x1651c>
   1cfc4:	ldrb	w11, [x9, x8]
   1cfc8:	add	x10, x10, x11, lsl #2
   1cfcc:	br	x10
   1cfd0:	mov	x8, #0xd5bf                	// #54719
   1cfd4:	movk	x8, #0xbded, lsl #16
   1cfd8:	movk	x8, #0xfece, lsl #32
   1cfdc:	movk	x8, #0xdbe6, lsl #48
   1cfe0:	mov	x9, #0xffffffffffff1c00    	// #-58368
   1cfe4:	movk	x9, #0xabf4, lsl #16
   1cfe8:	umulh	x8, x2, x8
   1cfec:	movk	x9, #0xfffd, lsl #32
   1cff0:	lsr	x8, x8, #33
   1cff4:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1cff8:	sub	x8, x3, #0x5
   1cffc:	cmp	x8, #0x4
   1d000:	b.hi	1d2d4 <PyInit__decimal@@Base+0x16820>  // b.pmore
   1d004:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d008:	add	x9, x9, #0x9d0
   1d00c:	adr	x10, 1d01c <PyInit__decimal@@Base+0x16568>
   1d010:	ldrb	w11, [x9, x8]
   1d014:	add	x10, x10, x11, lsl #2
   1d018:	br	x10
   1d01c:	mov	x9, #0x7843                	// #30787
   1d020:	movk	x9, #0x71b4, lsl #16
   1d024:	movk	x9, #0x5ac4, lsl #32
   1d028:	lsr	x8, x2, #5
   1d02c:	movk	x9, #0xa7c, lsl #48
   1d030:	mov	x10, #0xffffffffffff7960    	// #-34464
   1d034:	umulh	x8, x8, x9
   1d038:	movk	x10, #0xfffe, lsl #16
   1d03c:	lsr	x8, x8, #7
   1d040:	b	1d2c8 <PyInit__decimal@@Base+0x16814>
   1d044:	sub	x8, x3, #0xf
   1d048:	cmp	x8, #0x4
   1d04c:	b.hi	1d2d4 <PyInit__decimal@@Base+0x16820>  // b.pmore
   1d050:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d054:	add	x9, x9, #0x9c6
   1d058:	adr	x10, 1d068 <PyInit__decimal@@Base+0x165b4>
   1d05c:	ldrb	w11, [x9, x8]
   1d060:	add	x10, x10, x11, lsl #2
   1d064:	br	x10
   1d068:	mov	x9, #0xeac3                	// #60099
   1d06c:	movk	x9, #0xf3dc, lsl #16
   1d070:	movk	x9, #0x4075, lsl #32
   1d074:	mov	x10, #0x8000                	// #32768
   1d078:	lsr	x8, x2, #15
   1d07c:	movk	x9, #0x2, lsl #48
   1d080:	movk	x10, #0x5b39, lsl #16
   1d084:	movk	x10, #0x7281, lsl #32
   1d088:	umulh	x8, x8, x9
   1d08c:	movk	x10, #0xfffc, lsl #48
   1d090:	lsr	x8, x8, #20
   1d094:	b	1d2c8 <PyInit__decimal@@Base+0x16814>
   1d098:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1d09c:	movk	x8, #0xcccd
   1d0a0:	umulh	x8, x2, x8
   1d0a4:	mov	x9, #0xfffffffffffffff6    	// #-10
   1d0a8:	lsr	x8, x8, #3
   1d0ac:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d0b0:	mov	x9, #0xf5c3                	// #62915
   1d0b4:	movk	x9, #0x5c28, lsl #16
   1d0b8:	movk	x9, #0xc28f, lsl #32
   1d0bc:	lsr	x8, x2, #2
   1d0c0:	movk	x9, #0x28f5, lsl #48
   1d0c4:	umulh	x8, x8, x9
   1d0c8:	mov	x10, #0xffffffffffffff9c    	// #-100
   1d0cc:	lsr	x8, x8, #2
   1d0d0:	b	1d2c8 <PyInit__decimal@@Base+0x16814>
   1d0d4:	mov	x9, #0xf7cf                	// #63439
   1d0d8:	movk	x9, #0xe353, lsl #16
   1d0dc:	movk	x9, #0x9ba5, lsl #32
   1d0e0:	lsr	x8, x2, #3
   1d0e4:	movk	x9, #0x20c4, lsl #48
   1d0e8:	umulh	x8, x8, x9
   1d0ec:	mov	x10, #0xfffffffffffffc18    	// #-1000
   1d0f0:	lsr	x8, x8, #4
   1d0f4:	b	1d2c8 <PyInit__decimal@@Base+0x16814>
   1d0f8:	mov	x8, #0x594b                	// #22859
   1d0fc:	movk	x8, #0x3886, lsl #16
   1d100:	movk	x8, #0xc5d6, lsl #32
   1d104:	movk	x8, #0x346d, lsl #48
   1d108:	umulh	x8, x2, x8
   1d10c:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   1d110:	lsr	x8, x8, #11
   1d114:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d118:	mov	x8, #0xaaff                	// #43775
   1d11c:	movk	x8, #0xcb24, lsl #16
   1d120:	movk	x8, #0xff0b, lsl #32
   1d124:	movk	x8, #0xafeb, lsl #48
   1d128:	mov	x9, #0xffffffffffff1800    	// #-59392
   1d12c:	movk	x9, #0xb789, lsl #16
   1d130:	umulh	x8, x2, x8
   1d134:	movk	x9, #0xffe8, lsl #32
   1d138:	lsr	x8, x8, #36
   1d13c:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d140:	mov	x8, #0x2233                	// #8755
   1d144:	movk	x8, #0x5bd4, lsl #16
   1d148:	movk	x8, #0x3302, lsl #32
   1d14c:	movk	x8, #0x232f, lsl #48
   1d150:	mov	x9, #0xfffffffffffff000    	// #-4096
   1d154:	movk	x9, #0x2b5a, lsl #16
   1d158:	umulh	x8, x2, x8
   1d15c:	movk	x9, #0xff17, lsl #32
   1d160:	lsr	x8, x8, #37
   1d164:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d168:	mov	x8, #0x385                 	// #901
   1d16c:	movk	x8, #0x92ed, lsl #16
   1d170:	movk	x8, #0x84d0, lsl #32
   1d174:	movk	x8, #0x384b, lsl #48
   1d178:	mov	x9, #0xffffffffffff6000    	// #-40960
   1d17c:	movk	x9, #0xb18d, lsl #16
   1d180:	umulh	x8, x2, x8
   1d184:	movk	x9, #0xf6e7, lsl #32
   1d188:	lsr	x8, x8, #41
   1d18c:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d190:	mov	x8, #0xcd81                	// #52609
   1d194:	movk	x8, #0x5095, lsl #16
   1d198:	movk	x8, #0x4dc3, lsl #32
   1d19c:	movk	x8, #0xb42, lsl #48
   1d1a0:	mov	x9, #0xffffffffffffc000    	// #-16384
   1d1a4:	movk	x9, #0xef85, lsl #16
   1d1a8:	umulh	x8, x2, x8
   1d1ac:	movk	x9, #0xa50c, lsl #32
   1d1b0:	lsr	x8, x8, #42
   1d1b4:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d1b8:	mov	x8, #0x34db                	// #13531
   1d1bc:	movk	x8, #0xd7b6, lsl #16
   1d1c0:	movk	x8, #0xde82, lsl #32
   1d1c4:	movk	x8, #0x431b, lsl #48
   1d1c8:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   1d1cc:	umulh	x8, x2, x8
   1d1d0:	movk	x9, #0xfff0, lsl #16
   1d1d4:	lsr	x8, x8, #18
   1d1d8:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d1dc:	mov	x8, #0x42bd                	// #17085
   1d1e0:	movk	x8, #0xe57a, lsl #16
   1d1e4:	movk	x8, #0x94d5, lsl #32
   1d1e8:	movk	x8, #0xd6bf, lsl #48
   1d1ec:	mov	x9, #0xffffffffffff6980    	// #-38528
   1d1f0:	umulh	x8, x2, x8
   1d1f4:	movk	x9, #0xff67, lsl #16
   1d1f8:	lsr	x8, x8, #23
   1d1fc:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d200:	mov	x8, #0xcefd                	// #52989
   1d204:	movk	x8, #0x8461, lsl #16
   1d208:	movk	x8, #0x7711, lsl #32
   1d20c:	movk	x8, #0xabcc, lsl #48
   1d210:	mov	x9, #0xffffffffffff1f00    	// #-57600
   1d214:	umulh	x8, x2, x8
   1d218:	movk	x9, #0xfa0a, lsl #16
   1d21c:	lsr	x8, x8, #26
   1d220:	b	1d270 <PyInit__decimal@@Base+0x167bc>
   1d224:	mov	x9, #0x5a53                	// #23123
   1d228:	movk	x9, #0xa09b, lsl #16
   1d22c:	movk	x9, #0xb82f, lsl #32
   1d230:	lsr	x8, x2, #9
   1d234:	movk	x9, #0x44, lsl #48
   1d238:	mov	x10, #0xffffffffffff3600    	// #-51712
   1d23c:	umulh	x8, x8, x9
   1d240:	movk	x10, #0xc465, lsl #16
   1d244:	lsr	x8, x8, #11
   1d248:	b	1d2c8 <PyInit__decimal@@Base+0x16814>
   1d24c:	mov	x8, #0x7857                	// #30807
   1d250:	movk	x8, #0xb113, lsl #16
   1d254:	movk	x8, #0x652f, lsl #32
   1d258:	movk	x8, #0x39a5, lsl #48
   1d25c:	mov	x9, #0x903f0000            	// #2420047872
   1d260:	movk	x9, #0x790d, lsl #32
   1d264:	umulh	x8, x2, x8
   1d268:	movk	x9, #0xffdc, lsl #48
   1d26c:	lsr	x8, x8, #51
   1d270:	str	x8, [x0]
   1d274:	madd	x8, x8, x9, x2
   1d278:	b	1d2d0 <PyInit__decimal@@Base+0x1681c>
   1d27c:	mov	x9, #0x1b53                	// #6995
   1d280:	movk	x9, #0xd519, lsl #16
   1d284:	lsr	x8, x2, #17
   1d288:	movk	x9, #0x5c3b, lsl #32
   1d28c:	mov	x10, #0xa2760000            	// #2725642240
   1d290:	movk	x10, #0xba87, lsl #32
   1d294:	umulh	x8, x8, x9
   1d298:	movk	x10, #0xfe9c, lsl #48
   1d29c:	lsr	x8, x8, #22
   1d2a0:	b	1d2c8 <PyInit__decimal@@Base+0x16814>
   1d2a4:	mov	x9, #0x490f                	// #18703
   1d2a8:	movk	x9, #0x7747, lsl #16
   1d2ac:	lsr	x8, x2, #18
   1d2b0:	movk	x9, #0x49c9, lsl #32
   1d2b4:	mov	x10, #0x589c0000            	// #1486618624
   1d2b8:	movk	x10, #0x494c, lsl #32
   1d2bc:	umulh	x8, x8, x9
   1d2c0:	movk	x10, #0xf21f, lsl #48
   1d2c4:	lsr	x8, x8, #24
   1d2c8:	str	x8, [x0]
   1d2cc:	madd	x8, x8, x10, x2
   1d2d0:	str	x8, [x1]
   1d2d4:	ret
   1d2d8:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1d2dc:	movk	x8, #0x2304, lsl #32
   1d2e0:	movk	x8, #0x8ac7, lsl #48
   1d2e4:	cmp	x2, x8
   1d2e8:	csinc	x8, xzr, x8, ls  // ls = plast
   1d2ec:	cset	w9, hi  // hi = pmore
   1d2f0:	sub	x8, x2, x8
   1d2f4:	str	x9, [x0]
   1d2f8:	b	1d2d0 <PyInit__decimal@@Base+0x1681c>
   1d2fc:	sub	sp, sp, #0x80
   1d300:	stp	x29, x30, [sp, #32]
   1d304:	str	x27, [sp, #48]
   1d308:	stp	x26, x25, [sp, #64]
   1d30c:	stp	x24, x23, [sp, #80]
   1d310:	stp	x22, x21, [sp, #96]
   1d314:	stp	x20, x19, [sp, #112]
   1d318:	add	x29, sp, #0x20
   1d31c:	mov	x8, #0x435f                	// #17247
   1d320:	movk	x8, #0xd79, lsl #16
   1d324:	movk	x8, #0x35e5, lsl #32
   1d328:	movk	x8, #0xd794, lsl #48
   1d32c:	umulh	x8, x3, x8
   1d330:	mov	x9, #0xffffffffffffffed    	// #-19
   1d334:	lsr	x25, x8, #4
   1d338:	mov	x23, x3
   1d33c:	mov	x21, x2
   1d340:	mov	x20, x1
   1d344:	mov	x19, x0
   1d348:	madd	x22, x25, x9, x3
   1d34c:	stp	xzr, xzr, [sp]
   1d350:	cbz	x22, 1d3b0 <PyInit__decimal@@Base+0x168fc>
   1d354:	ldr	x2, [x20, x25, lsl #3]
   1d358:	add	x0, sp, #0x10
   1d35c:	mov	x1, sp
   1d360:	mov	x3, x22
   1d364:	bl	1cf6c <PyInit__decimal@@Base+0x164b8>
   1d368:	ldr	x2, [sp]
   1d36c:	sub	x3, x22, #0x1
   1d370:	add	x0, sp, #0x8
   1d374:	mov	x1, sp
   1d378:	bl	1cf6c <PyInit__decimal@@Base+0x164b8>
   1d37c:	ldr	x24, [sp]
   1d380:	cmp	x23, #0x13
   1d384:	b.cc	1d428 <PyInit__decimal@@Base+0x16974>  // b.lo, b.ul, b.last
   1d388:	cbnz	x24, 1d428 <PyInit__decimal@@Base+0x16974>
   1d38c:	sub	x8, x20, #0x8
   1d390:	mov	w24, #0x1                   	// #1
   1d394:	mov	x9, x25
   1d398:	subs	x10, x9, #0x1
   1d39c:	b.lt	1d420 <PyInit__decimal@@Base+0x1696c>  // b.tstop
   1d3a0:	ldr	x11, [x8, x9, lsl #3]
   1d3a4:	mov	x9, x10
   1d3a8:	cbz	x11, 1d398 <PyInit__decimal@@Base+0x168e4>
   1d3ac:	b	1d424 <PyInit__decimal@@Base+0x16970>
   1d3b0:	cmp	x23, #0x13
   1d3b4:	b.cs	1d3c0 <PyInit__decimal@@Base+0x1690c>  // b.hs, b.nlast
   1d3b8:	mov	x24, xzr
   1d3bc:	b	1d4b0 <PyInit__decimal@@Base+0x169fc>
   1d3c0:	add	x8, x20, x25, lsl #3
   1d3c4:	ldur	x8, [x8, #-8]
   1d3c8:	mov	x9, #0x490f                	// #18703
   1d3cc:	movk	x9, #0x7747, lsl #16
   1d3d0:	movk	x9, #0x49c9, lsl #32
   1d3d4:	mov	x10, #0x589c0000            	// #1486618624
   1d3d8:	lsr	x11, x8, #18
   1d3dc:	movk	x10, #0x494c, lsl #32
   1d3e0:	umulh	x9, x11, x9
   1d3e4:	movk	x10, #0xf21f, lsl #48
   1d3e8:	lsr	x9, x9, #24
   1d3ec:	madd	x24, x9, x10, x8
   1d3f0:	stp	x24, x9, [sp]
   1d3f4:	cbnz	x24, 1d4b0 <PyInit__decimal@@Base+0x169fc>
   1d3f8:	sub	x8, x20, #0x10
   1d3fc:	mov	w24, #0x1                   	// #1
   1d400:	mov	x9, x25
   1d404:	sub	x10, x9, #0x1
   1d408:	cmp	x10, #0x1
   1d40c:	b.lt	1d4a8 <PyInit__decimal@@Base+0x169f4>  // b.tstop
   1d410:	ldr	x11, [x8, x9, lsl #3]
   1d414:	mov	x9, x10
   1d418:	cbz	x11, 1d404 <PyInit__decimal@@Base+0x16950>
   1d41c:	b	1d4ac <PyInit__decimal@@Base+0x169f8>
   1d420:	mov	x24, xzr
   1d424:	str	x24, [sp]
   1d428:	ldr	x23, [sp, #16]
   1d42c:	add	x8, x25, #0x1
   1d430:	cmp	x8, x21
   1d434:	b.cs	1d498 <PyInit__decimal@@Base+0x169e4>  // b.hs, b.nlast
   1d438:	mov	w9, #0x13                  	// #19
   1d43c:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d440:	sub	x9, x9, x22
   1d444:	add	x10, x10, #0xca0
   1d448:	ldr	x26, [x10, x9, lsl #3]
   1d44c:	mvn	x9, x25
   1d450:	add	x21, x9, x21
   1d454:	add	x20, x20, x8, lsl #3
   1d458:	mov	x25, x21
   1d45c:	mov	x27, x19
   1d460:	ldr	x2, [x20], #8
   1d464:	sub	x0, x29, #0x8
   1d468:	add	x1, x29, #0x18
   1d46c:	mov	x3, x22
   1d470:	bl	1cf6c <PyInit__decimal@@Base+0x164b8>
   1d474:	ldr	x8, [x29, #24]
   1d478:	subs	x25, x25, #0x1
   1d47c:	madd	x8, x8, x26, x23
   1d480:	str	x8, [x27], #8
   1d484:	ldur	x23, [x29, #-8]
   1d488:	b.ne	1d460 <PyInit__decimal@@Base+0x169ac>  // b.any
   1d48c:	str	x23, [sp, #16]
   1d490:	cbnz	x23, 1d4a0 <PyInit__decimal@@Base+0x169ec>
   1d494:	b	1d4fc <PyInit__decimal@@Base+0x16a48>
   1d498:	mov	x21, xzr
   1d49c:	cbz	x23, 1d4fc <PyInit__decimal@@Base+0x16a48>
   1d4a0:	str	x23, [x19, x21, lsl #3]
   1d4a4:	b	1d4fc <PyInit__decimal@@Base+0x16a48>
   1d4a8:	mov	x24, xzr
   1d4ac:	str	x24, [sp]
   1d4b0:	subs	x8, x21, x25
   1d4b4:	b.eq	1d4fc <PyInit__decimal@@Base+0x16a48>  // b.none
   1d4b8:	cmp	x8, #0x4
   1d4bc:	b.cc	1d4dc <PyInit__decimal@@Base+0x16a28>  // b.lo, b.ul, b.last
   1d4c0:	add	x9, x20, x21, lsl #3
   1d4c4:	cmp	x9, x19
   1d4c8:	add	x10, x20, x25, lsl #3
   1d4cc:	b.ls	1d534 <PyInit__decimal@@Base+0x16a80>  // b.plast
   1d4d0:	add	x9, x19, x8, lsl #3
   1d4d4:	cmp	x10, x9
   1d4d8:	b.cs	1d534 <PyInit__decimal@@Base+0x16a80>  // b.hs, b.nlast
   1d4dc:	mov	x9, xzr
   1d4e0:	add	x10, x20, x25, lsl #3
   1d4e4:	lsl	x11, x9, #3
   1d4e8:	ldr	x12, [x10, x11]
   1d4ec:	add	x9, x9, #0x1
   1d4f0:	cmp	x9, x8
   1d4f4:	str	x12, [x19, x11]
   1d4f8:	b.cc	1d4e4 <PyInit__decimal@@Base+0x16a30>  // b.lo, b.ul, b.last
   1d4fc:	ldr	x0, [sp, #8]
   1d500:	cmp	x0, #0x5
   1d504:	b.eq	1d50c <PyInit__decimal@@Base+0x16a58>  // b.none
   1d508:	cbnz	x0, 1d514 <PyInit__decimal@@Base+0x16a60>
   1d50c:	cmp	x24, #0x0
   1d510:	cinc	x0, x0, ne  // ne = any
   1d514:	ldp	x20, x19, [sp, #112]
   1d518:	ldp	x22, x21, [sp, #96]
   1d51c:	ldp	x24, x23, [sp, #80]
   1d520:	ldp	x26, x25, [sp, #64]
   1d524:	ldr	x27, [sp, #48]
   1d528:	ldp	x29, x30, [sp, #32]
   1d52c:	add	sp, sp, #0x80
   1d530:	ret
   1d534:	and	x9, x8, #0xfffffffffffffffc
   1d538:	add	x10, x10, #0x10
   1d53c:	add	x11, x19, #0x10
   1d540:	mov	x12, x9
   1d544:	ldp	q0, q1, [x10, #-16]
   1d548:	add	x10, x10, #0x20
   1d54c:	subs	x12, x12, #0x4
   1d550:	stp	q0, q1, [x11, #-16]
   1d554:	add	x11, x11, #0x20
   1d558:	b.ne	1d544 <PyInit__decimal@@Base+0x16a90>  // b.any
   1d55c:	cmp	x8, x9
   1d560:	b.eq	1d4fc <PyInit__decimal@@Base+0x16a48>  // b.none
   1d564:	b	1d4e0 <PyInit__decimal@@Base+0x16a2c>
   1d568:	ldr	x9, [x0]
   1d56c:	mov	x8, x0
   1d570:	adds	x9, x9, x2
   1d574:	cset	w10, cs  // cs = hs, nlast
   1d578:	cmp	x9, x3
   1d57c:	cset	w11, cs  // cs = hs, nlast
   1d580:	orr	w0, w10, w11
   1d584:	cmp	w0, #0x0
   1d588:	csel	x10, x3, xzr, ne  // ne = any
   1d58c:	sub	x9, x9, x10
   1d590:	str	x9, [x8]
   1d594:	cbz	w0, 1d5d0 <PyInit__decimal@@Base+0x16b1c>
   1d598:	cmp	x1, #0x2
   1d59c:	b.cc	1d5d0 <PyInit__decimal@@Base+0x16b1c>  // b.lo, b.ul, b.last
   1d5a0:	mov	w9, #0x1                   	// #1
   1d5a4:	lsl	x10, x9, #3
   1d5a8:	ldr	x11, [x8, x10]
   1d5ac:	add	x11, x11, x0
   1d5b0:	cmp	x11, x3
   1d5b4:	cset	w0, eq  // eq = none
   1d5b8:	csel	x11, xzr, x11, eq  // eq = none
   1d5bc:	str	x11, [x8, x10]
   1d5c0:	b.ne	1d5d0 <PyInit__decimal@@Base+0x16b1c>  // b.any
   1d5c4:	add	x9, x9, #0x1
   1d5c8:	cmp	x9, x1
   1d5cc:	b.cc	1d5a4 <PyInit__decimal@@Base+0x16af0>  // b.lo, b.ul, b.last
   1d5d0:	ret
   1d5d4:	mov	x8, xzr
   1d5d8:	cbz	x2, 1d66c <PyInit__decimal@@Base+0x16bb8>
   1d5dc:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d5e0:	ldr	x9, [x9, #3392]
   1d5e4:	mov	x10, #0x89e80000            	// #2313682944
   1d5e8:	mov	x11, #0x76180000            	// #1981284352
   1d5ec:	movk	x10, #0x2304, lsl #32
   1d5f0:	movk	x11, #0xdcfb, lsl #32
   1d5f4:	movk	x10, #0x8ac7, lsl #48
   1d5f8:	movk	x11, #0x7538, lsl #48
   1d5fc:	ldr	x12, [x1], #8
   1d600:	umulh	x13, x12, x3
   1d604:	mul	x12, x12, x3
   1d608:	adds	x8, x8, x12
   1d60c:	cinc	x12, x13, cs  // cs = hs, nlast
   1d610:	asr	x13, x8, #63
   1d614:	and	x14, x13, x10
   1d618:	sub	x13, x12, x13
   1d61c:	add	x14, x14, x8
   1d620:	umulh	x15, x13, x9
   1d624:	mul	x13, x13, x9
   1d628:	mvn	x14, x14
   1d62c:	add	x15, x12, x15
   1d630:	cmp	x14, x13
   1d634:	cinc	x13, x15, cc  // cc = lo, ul, last
   1d638:	mvn	x13, x13
   1d63c:	umulh	x14, x13, x10
   1d640:	mul	x15, x13, x10
   1d644:	adds	x15, x8, x15
   1d648:	add	x8, x12, x14
   1d64c:	cinc	x8, x8, cs  // cs = hs, nlast
   1d650:	add	x12, x8, x11
   1d654:	sub	x8, x12, x13
   1d658:	and	x12, x12, x10
   1d65c:	add	x12, x12, x15
   1d660:	subs	x2, x2, #0x1
   1d664:	str	x12, [x0], #8
   1d668:	b.ne	1d5fc <PyInit__decimal@@Base+0x16b48>  // b.any
   1d66c:	mov	x0, x8
   1d670:	ret
   1d674:	cbz	x2, 1d6ec <PyInit__decimal@@Base+0x16c38>
   1d678:	stp	x29, x30, [sp, #-64]!
   1d67c:	stp	x24, x23, [sp, #16]
   1d680:	stp	x22, x21, [sp, #32]
   1d684:	stp	x20, x19, [sp, #48]
   1d688:	mov	x29, sp
   1d68c:	mov	x19, x4
   1d690:	mov	x20, x3
   1d694:	mov	x21, x2
   1d698:	mov	x22, x1
   1d69c:	mov	x23, x0
   1d6a0:	mov	x0, xzr
   1d6a4:	ldr	x8, [x22], #8
   1d6a8:	mov	x2, x19
   1d6ac:	mov	x3, xzr
   1d6b0:	umulh	x9, x8, x20
   1d6b4:	mul	x8, x8, x20
   1d6b8:	adds	x24, x0, x8
   1d6bc:	cinc	x1, x9, cs  // cs = hs, nlast
   1d6c0:	mov	x0, x24
   1d6c4:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1d6c8:	msub	x8, x0, x19, x24
   1d6cc:	subs	x21, x21, #0x1
   1d6d0:	str	x8, [x23], #8
   1d6d4:	b.ne	1d6a4 <PyInit__decimal@@Base+0x16bf0>  // b.any
   1d6d8:	ldp	x20, x19, [sp, #48]
   1d6dc:	ldp	x22, x21, [sp, #32]
   1d6e0:	ldp	x24, x23, [sp, #16]
   1d6e4:	ldp	x29, x30, [sp], #64
   1d6e8:	ret
   1d6ec:	mov	x0, xzr
   1d6f0:	ret
   1d6f4:	stp	x29, x30, [sp, #-80]!
   1d6f8:	str	x25, [sp, #16]
   1d6fc:	stp	x24, x23, [sp, #32]
   1d700:	stp	x22, x21, [sp, #48]
   1d704:	stp	x20, x19, [sp, #64]
   1d708:	mov	x29, sp
   1d70c:	cbz	x2, 1d768 <PyInit__decimal@@Base+0x16cb4>
   1d710:	mov	x8, x0
   1d714:	mov	x19, x4
   1d718:	mov	x20, x3
   1d71c:	mov	x0, xzr
   1d720:	sub	x22, x8, #0x8
   1d724:	sub	x23, x1, #0x8
   1d728:	lsl	x24, x2, #3
   1d72c:	ldr	x8, [x23, x24]
   1d730:	mul	x10, x0, x19
   1d734:	umulh	x9, x0, x19
   1d738:	sub	x25, x2, #0x1
   1d73c:	adds	x21, x8, x10
   1d740:	cinc	x1, x9, cs  // cs = hs, nlast
   1d744:	mov	x0, x21
   1d748:	mov	x2, x20
   1d74c:	mov	x3, xzr
   1d750:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1d754:	str	x0, [x22, x24]
   1d758:	msub	x0, x0, x20, x21
   1d75c:	mov	x2, x25
   1d760:	cbnz	x25, 1d728 <PyInit__decimal@@Base+0x16c74>
   1d764:	b	1d76c <PyInit__decimal@@Base+0x16cb8>
   1d768:	mov	x0, xzr
   1d76c:	ldp	x20, x19, [sp, #64]
   1d770:	ldp	x22, x21, [sp, #48]
   1d774:	ldp	x24, x23, [sp, #32]
   1d778:	ldr	x25, [sp, #16]
   1d77c:	ldp	x29, x30, [sp], #80
   1d780:	ret
   1d784:	mov	w0, #0x8                   	// #8
   1d788:	b	6450 <raise@plt>
   1d78c:	stp	x29, x30, [sp, #-32]!
   1d790:	str	x19, [sp, #16]
   1d794:	mov	x29, sp
   1d798:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1d79c:	ldrb	w9, [x8, #1584]
   1d7a0:	cmp	w9, #0x1
   1d7a4:	b.eq	1d7d0 <PyInit__decimal@@Base+0x16d1c>  // b.none
   1d7a8:	sub	x9, x0, #0x2
   1d7ac:	cmp	x9, #0x3f
   1d7b0:	b.cs	1d820 <PyInit__decimal@@Base+0x16d6c>  // b.hs, b.nlast
   1d7b4:	ldr	x19, [sp, #16]
   1d7b8:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   1d7bc:	mov	w10, #0x1                   	// #1
   1d7c0:	str	x0, [x9, #1344]
   1d7c4:	strb	w10, [x8, #1584]
   1d7c8:	ldp	x29, x30, [sp], #32
   1d7cc:	ret
   1d7d0:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   1d7d4:	ldr	x19, [x19, #3904]
   1d7d8:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d7dc:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d7e0:	add	x1, x1, #0xe28
   1d7e4:	ldr	x0, [x19]
   1d7e8:	add	x2, x2, #0xe39
   1d7ec:	mov	w3, #0x37                  	// #55
   1d7f0:	bl	69b0 <fprintf@plt>
   1d7f4:	ldr	x3, [x19]
   1d7f8:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d7fc:	add	x0, x0, #0xe73
   1d800:	mov	w1, #0x44                  	// #68
   1d804:	mov	w2, #0x1                   	// #1
   1d808:	bl	6870 <fwrite@plt>
   1d80c:	ldr	x1, [x19]
   1d810:	ldr	x19, [sp, #16]
   1d814:	mov	w0, #0xa                   	// #10
   1d818:	ldp	x29, x30, [sp], #32
   1d81c:	b	64f0 <fputc@plt>
   1d820:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   1d824:	ldr	x19, [x19, #3904]
   1d828:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d82c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d830:	add	x1, x1, #0x9da
   1d834:	ldr	x0, [x19]
   1d838:	add	x2, x2, #0xe39
   1d83c:	mov	w3, #0x3b                  	// #59
   1d840:	bl	69b0 <fprintf@plt>
   1d844:	ldr	x3, [x19]
   1d848:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d84c:	add	x0, x0, #0xeb8
   1d850:	mov	w1, #0x1e                  	// #30
   1d854:	mov	w2, #0x1                   	// #1
   1d858:	bl	6870 <fwrite@plt>
   1d85c:	ldr	x1, [x19]
   1d860:	mov	w0, #0xa                   	// #10
   1d864:	bl	64f0 <fputc@plt>
   1d868:	bl	6700 <abort@plt>
   1d86c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d870:	ldr	q0, [x8, #3552]
   1d874:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d878:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d87c:	ldr	d1, [x8, #3584]
   1d880:	str	q0, [x0]
   1d884:	ldr	d0, [x9, #3592]
   1d888:	mov	x8, #0x1                   	// #1
   1d88c:	movk	x8, #0x589c, lsl #16
   1d890:	movk	x8, #0x494c, lsl #32
   1d894:	movk	x8, #0xf21f, lsl #48
   1d898:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d89c:	stp	d1, d0, [x0, #24]
   1d8a0:	ldr	d0, [x9, #3600]
   1d8a4:	str	x8, [x0, #16]
   1d8a8:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1d8ac:	movk	x8, #0xb6b3, lsl #32
   1d8b0:	sub	x9, x1, #0x1
   1d8b4:	movk	x8, #0xde0, lsl #48
   1d8b8:	cmp	x9, x8
   1d8bc:	str	d0, [x0, #40]
   1d8c0:	b.cc	1d8d8 <PyInit__decimal@@Base+0x16e24>  // b.lo, b.ul, b.last
   1d8c4:	movi	v0.2s, #0x80
   1d8c8:	stur	d0, [x0, #28]
   1d8cc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1d8d0:	ldr	x1, [x8, #1336]
   1d8d4:	br	x1
   1d8d8:	mov	x9, #0x9436                	// #37942
   1d8dc:	movk	x9, #0x50d7, lsl #16
   1d8e0:	movk	x9, #0x435e, lsl #32
   1d8e4:	add	x8, x1, #0x12
   1d8e8:	movk	x9, #0xd79, lsl #48
   1d8ec:	smulh	x8, x8, x9
   1d8f0:	add	x8, x8, x8, lsr #63
   1d8f4:	lsl	x8, x8, #1
   1d8f8:	mov	w10, #0x2                   	// #2
   1d8fc:	cmp	x8, #0x2
   1d900:	csel	x8, x8, x10, gt
   1d904:	cmp	x8, #0x40
   1d908:	mov	w9, #0x40                  	// #64
   1d90c:	csel	x8, x8, x9, lt  // lt = tstop
   1d910:	str	x1, [x0]
   1d914:	mov	x0, x8
   1d918:	b	1d78c <PyInit__decimal@@Base+0x16cd8>
   1d91c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d920:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d924:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d928:	adrp	x12, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d92c:	mov	x9, #0x1                   	// #1
   1d930:	ldr	q0, [x8, #3552]
   1d934:	ldr	d1, [x10, #3584]
   1d938:	ldr	d2, [x11, #3592]
   1d93c:	ldr	d3, [x12, #3600]
   1d940:	movk	x9, #0x589c, lsl #16
   1d944:	movk	x9, #0x494c, lsl #32
   1d948:	movk	x9, #0xf21f, lsl #48
   1d94c:	str	x9, [x0, #16]
   1d950:	str	q0, [x0]
   1d954:	stp	d1, d2, [x0, #24]
   1d958:	str	d3, [x0, #40]
   1d95c:	ret
   1d960:	mov	x9, #0xfffe                	// #65534
   1d964:	movk	x9, #0xa763, lsl #16
   1d968:	movk	x9, #0xb6b3, lsl #32
   1d96c:	sub	x8, x1, #0x1
   1d970:	movk	x9, #0xde0, lsl #48
   1d974:	cmp	x8, x9
   1d978:	b.ls	1d984 <PyInit__decimal@@Base+0x16ed0>  // b.plast
   1d97c:	mov	w0, wzr
   1d980:	ret
   1d984:	str	x1, [x0]
   1d988:	mov	w0, #0x1                   	// #1
   1d98c:	ret
   1d990:	ldp	w9, w8, [x0, #24]
   1d994:	orr	w10, w8, w1
   1d998:	ands	w8, w9, w1
   1d99c:	str	w10, [x0, #28]
   1d9a0:	b.eq	1d9b4 <PyInit__decimal@@Base+0x16f00>  // b.none
   1d9a4:	str	w8, [x0, #32]
   1d9a8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1d9ac:	ldr	x1, [x8, #1336]
   1d9b0:	br	x1
   1d9b4:	ret
   1d9b8:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d9bc:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d9c0:	adrp	x12, 44000 <PyInit__decimal@@Base+0x3d54c>
   1d9c4:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1d9c8:	mov	x9, #0x1                   	// #1
   1d9cc:	ldr	d1, [x10, #3584]
   1d9d0:	ldr	d2, [x11, #3608]
   1d9d4:	ldr	d3, [x12, #3600]
   1d9d8:	movk	x8, #0xb6b3, lsl #32
   1d9dc:	movk	x9, #0x589c, lsl #16
   1d9e0:	movk	x8, #0xde0, lsl #48
   1d9e4:	movk	x9, #0x494c, lsl #32
   1d9e8:	movk	x9, #0xf21f, lsl #48
   1d9ec:	dup	v0.2d, x8
   1d9f0:	str	x9, [x0, #16]
   1d9f4:	str	q0, [x0]
   1d9f8:	stp	d1, d2, [x0, #24]
   1d9fc:	str	d3, [x0, #40]
   1da00:	ret
   1da04:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1da08:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   1da0c:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   1da10:	adrp	x12, 44000 <PyInit__decimal@@Base+0x3d54c>
   1da14:	mov	x9, #0x1                   	// #1
   1da18:	ldr	q0, [x8, #3568]
   1da1c:	ldr	d1, [x10, #3616]
   1da20:	ldr	d2, [x11, #3592]
   1da24:	ldr	d3, [x12, #3600]
   1da28:	movk	x9, #0x589c, lsl #16
   1da2c:	movk	x9, #0x494c, lsl #32
   1da30:	movk	x9, #0xf21f, lsl #48
   1da34:	str	x9, [x0, #16]
   1da38:	str	q0, [x0]
   1da3c:	stp	d1, d2, [x0, #24]
   1da40:	str	d3, [x0, #40]
   1da44:	ret
   1da48:	sub	w9, w1, #0x1
   1da4c:	mov	x8, x0
   1da50:	cmp	w9, #0x1ff
   1da54:	mov	w0, #0xffffffff            	// #-1
   1da58:	b.hi	1daa8 <PyInit__decimal@@Base+0x16ff4>  // b.pmore
   1da5c:	and	w9, w1, #0x1f
   1da60:	cbnz	w9, 1daa8 <PyInit__decimal@@Base+0x16ff4>
   1da64:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   1da68:	lsr	w9, w1, #5
   1da6c:	lsr	w10, w1, #4
   1da70:	ldr	d0, [x11, #3608]
   1da74:	mov	w11, #0x3                   	// #3
   1da78:	add	w10, w10, #0x3
   1da7c:	add	w9, w9, w9, lsl #3
   1da80:	lsl	x10, x11, x10
   1da84:	mov	w11, #0x1                   	// #1
   1da88:	sub	w9, w9, #0x2
   1da8c:	mov	w0, wzr
   1da90:	sxtw	x9, w9
   1da94:	sub	x11, x11, x10
   1da98:	movi	v1.2s, #0x1
   1da9c:	stp	x9, x10, [x8]
   1daa0:	stp	x11, xzr, [x8, #16]
   1daa4:	stp	d0, d1, [x8, #32]
   1daa8:	ret
   1daac:	ldr	x0, [x0]
   1dab0:	ret
   1dab4:	ldr	x0, [x0, #8]
   1dab8:	ret
   1dabc:	ldr	x0, [x0, #16]
   1dac0:	ret
   1dac4:	ldr	w0, [x0, #36]
   1dac8:	ret
   1dacc:	ldr	w0, [x0, #24]
   1dad0:	ret
   1dad4:	ldr	w0, [x0, #28]
   1dad8:	ret
   1dadc:	ldr	w0, [x0, #40]
   1dae0:	ret
   1dae4:	ldr	w0, [x0, #44]
   1dae8:	ret
   1daec:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1daf0:	movk	x8, #0xb6b3, lsl #32
   1daf4:	movk	x8, #0xde0, lsl #48
   1daf8:	cmp	x1, x8
   1dafc:	b.ls	1db08 <PyInit__decimal@@Base+0x17054>  // b.plast
   1db00:	mov	w0, wzr
   1db04:	ret
   1db08:	str	x1, [x0, #8]
   1db0c:	mov	w0, #0x1                   	// #1
   1db10:	ret
   1db14:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1db18:	movk	x8, #0xb6b3, lsl #32
   1db1c:	movk	x8, #0xde0, lsl #48
   1db20:	add	x9, x1, x8
   1db24:	cmp	x9, x8
   1db28:	b.ls	1db34 <PyInit__decimal@@Base+0x17080>  // b.plast
   1db2c:	mov	w0, wzr
   1db30:	ret
   1db34:	str	x1, [x0, #16]
   1db38:	mov	w0, #0x1                   	// #1
   1db3c:	ret
   1db40:	cmp	w1, #0x8
   1db44:	b.hi	1db54 <PyInit__decimal@@Base+0x170a0>  // b.pmore
   1db48:	str	w1, [x0, #36]
   1db4c:	mov	w0, #0x1                   	// #1
   1db50:	ret
   1db54:	mov	w0, wzr
   1db58:	ret
   1db5c:	lsr	w8, w1, #15
   1db60:	cbz	w8, 1db6c <PyInit__decimal@@Base+0x170b8>
   1db64:	mov	w0, wzr
   1db68:	ret
   1db6c:	str	w1, [x0, #24]
   1db70:	mov	w0, #0x1                   	// #1
   1db74:	ret
   1db78:	lsr	w8, w1, #15
   1db7c:	cbz	w8, 1db88 <PyInit__decimal@@Base+0x170d4>
   1db80:	mov	w0, wzr
   1db84:	ret
   1db88:	str	w1, [x0, #28]
   1db8c:	mov	w0, #0x1                   	// #1
   1db90:	ret
   1db94:	cmp	w1, #0x1
   1db98:	b.ls	1dba4 <PyInit__decimal@@Base+0x170f0>  // b.plast
   1db9c:	mov	w0, wzr
   1dba0:	ret
   1dba4:	str	w1, [x0, #40]
   1dba8:	mov	w0, #0x1                   	// #1
   1dbac:	ret
   1dbb0:	cmp	w1, #0x1
   1dbb4:	b.ls	1dbc0 <PyInit__decimal@@Base+0x1710c>  // b.plast
   1dbb8:	mov	w0, wzr
   1dbbc:	ret
   1dbc0:	str	w1, [x0, #44]
   1dbc4:	mov	w0, #0x1                   	// #1
   1dbc8:	ret
   1dbcc:	sub	sp, sp, #0x80
   1dbd0:	stp	x29, x30, [sp, #32]
   1dbd4:	stp	x28, x27, [sp, #48]
   1dbd8:	stp	x26, x25, [sp, #64]
   1dbdc:	stp	x24, x23, [sp, #80]
   1dbe0:	stp	x22, x21, [sp, #96]
   1dbe4:	stp	x20, x19, [sp, #112]
   1dbe8:	add	x29, sp, #0x20
   1dbec:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1dbf0:	add	x8, x8, #0xa50
   1dbf4:	ldr	x19, [x8, w3, sxtw #3]
   1dbf8:	mov	w27, w3
   1dbfc:	mov	x22, x2
   1dc00:	mov	x24, x1
   1dc04:	subs	x26, x19, #0x2
   1dc08:	mov	x20, x0
   1dc0c:	mov	w21, #0x1                   	// #1
   1dc10:	b.eq	1dc54 <PyInit__decimal@@Base+0x171a0>  // b.none
   1dc14:	mov	x25, x22
   1dc18:	b	1dc38 <PyInit__decimal@@Base+0x17184>
   1dc1c:	mov	x0, x25
   1dc20:	mov	x1, x25
   1dc24:	mov	x2, x19
   1dc28:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dc2c:	lsr	x26, x26, #1
   1dc30:	mov	x25, x0
   1dc34:	cbz	x26, 1dc54 <PyInit__decimal@@Base+0x171a0>
   1dc38:	tbz	w26, #0, 1dc1c <PyInit__decimal@@Base+0x17168>
   1dc3c:	mov	x0, x21
   1dc40:	mov	x1, x25
   1dc44:	mov	x2, x19
   1dc48:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dc4c:	mov	x21, x0
   1dc50:	b	1dc1c <PyInit__decimal@@Base+0x17168>
   1dc54:	fmov	d0, x22
   1dc58:	cnt	v0.8b, v0.8b
   1dc5c:	adrp	x10, 1e000 <PyInit__decimal@@Base+0x1754c>
   1dc60:	adrp	x11, 3d000 <PyInit__decimal@@Base+0x3654c>
   1dc64:	adrp	x8, 1e000 <PyInit__decimal@@Base+0x1754c>
   1dc68:	adrp	x9, 3d000 <PyInit__decimal@@Base+0x3654c>
   1dc6c:	cmp	x22, #0x1, lsl #12
   1dc70:	add	x10, x10, #0x824
   1dc74:	add	x11, x11, #0x334
   1dc78:	uaddlv	h0, v0.8b
   1dc7c:	add	x8, x8, #0x884
   1dc80:	add	x9, x9, #0x718
   1dc84:	csel	x10, x11, x10, hi  // hi = pmore
   1dc88:	fmov	w11, s0
   1dc8c:	csel	x8, x9, x8, hi  // hi = pmore
   1dc90:	cmp	x11, #0x1
   1dc94:	adrp	x11, 1e000 <PyInit__decimal@@Base+0x1754c>
   1dc98:	adrp	x9, 1e000 <PyInit__decimal@@Base+0x1754c>
   1dc9c:	add	x11, x11, #0x8e4
   1dca0:	add	x9, x9, #0xd00
   1dca4:	csel	x23, x11, x10, ne  // ne = any
   1dca8:	mov	x0, x20
   1dcac:	mov	x1, x22
   1dcb0:	mov	w2, w27
   1dcb4:	csel	x25, x9, x8, ne  // ne = any
   1dcb8:	blr	x23
   1dcbc:	cbz	w0, 1ddc0 <PyInit__decimal@@Base+0x1730c>
   1dcc0:	mov	x0, x24
   1dcc4:	mov	x1, x22
   1dcc8:	mov	w2, w27
   1dccc:	blr	x23
   1dcd0:	cbz	w0, 1ddc0 <PyInit__decimal@@Base+0x1730c>
   1dcd4:	subs	x28, x22, #0x1
   1dcd8:	str	x25, [sp, #8]
   1dcdc:	stur	w27, [x29, #-12]
   1dce0:	stur	x22, [x29, #-8]
   1dce4:	b.eq	1dd2c <PyInit__decimal@@Base+0x17278>  // b.none
   1dce8:	mov	x23, xzr
   1dcec:	lsl	x8, x23, #3
   1dcf0:	add	x22, x20, x8
   1dcf4:	add	x8, x24, x8
   1dcf8:	ldp	x0, x25, [x22]
   1dcfc:	ldp	x1, x26, [x8]
   1dd00:	mov	x2, x19
   1dd04:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dd08:	mov	x27, x0
   1dd0c:	mov	x0, x25
   1dd10:	mov	x1, x26
   1dd14:	mov	x2, x19
   1dd18:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dd1c:	add	x23, x23, #0x2
   1dd20:	cmp	x23, x28
   1dd24:	stp	x27, x0, [x22]
   1dd28:	b.cc	1dcec <PyInit__decimal@@Base+0x17238>  // b.lo, b.ul, b.last
   1dd2c:	ldur	x22, [x29, #-8]
   1dd30:	ldur	w2, [x29, #-12]
   1dd34:	ldr	x8, [sp, #8]
   1dd38:	mov	x0, x20
   1dd3c:	mov	x1, x22
   1dd40:	blr	x8
   1dd44:	cbz	w0, 1ddc0 <PyInit__decimal@@Base+0x1730c>
   1dd48:	subs	x26, x22, #0x3
   1dd4c:	b.eq	1ddbc <PyInit__decimal@@Base+0x17308>  // b.none
   1dd50:	mov	x27, xzr
   1dd54:	add	x28, x20, x27, lsl #3
   1dd58:	ldp	x0, x22, [x28]
   1dd5c:	ldp	x23, x24, [x28, #16]
   1dd60:	mov	x1, x21
   1dd64:	mov	x2, x19
   1dd68:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dd6c:	mov	x25, x0
   1dd70:	mov	x0, x22
   1dd74:	mov	x1, x21
   1dd78:	mov	x2, x19
   1dd7c:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dd80:	mov	x22, x0
   1dd84:	mov	x0, x23
   1dd88:	mov	x1, x21
   1dd8c:	mov	x2, x19
   1dd90:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dd94:	mov	x23, x0
   1dd98:	mov	x0, x24
   1dd9c:	mov	x1, x21
   1dda0:	mov	x2, x19
   1dda4:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1dda8:	add	x27, x27, #0x4
   1ddac:	cmp	x27, x26
   1ddb0:	stp	x25, x22, [x28]
   1ddb4:	stp	x23, x0, [x28, #16]
   1ddb8:	b.cc	1dd54 <PyInit__decimal@@Base+0x172a0>  // b.lo, b.ul, b.last
   1ddbc:	mov	w0, #0x1                   	// #1
   1ddc0:	ldp	x20, x19, [sp, #112]
   1ddc4:	ldp	x22, x21, [sp, #96]
   1ddc8:	ldp	x24, x23, [sp, #80]
   1ddcc:	ldp	x26, x25, [sp, #64]
   1ddd0:	ldp	x28, x27, [sp, #48]
   1ddd4:	ldp	x29, x30, [sp, #32]
   1ddd8:	add	sp, sp, #0x80
   1dddc:	ret
   1dde0:	sub	sp, sp, #0x70
   1dde4:	stp	x29, x30, [sp, #16]
   1dde8:	stp	x28, x27, [sp, #32]
   1ddec:	stp	x26, x25, [sp, #48]
   1ddf0:	stp	x24, x23, [sp, #64]
   1ddf4:	stp	x22, x21, [sp, #80]
   1ddf8:	stp	x20, x19, [sp, #96]
   1ddfc:	add	x29, sp, #0x10
   1de00:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1de04:	add	x8, x8, #0xa50
   1de08:	ldr	x19, [x8, w2, sxtw #3]
   1de0c:	mov	w23, w2
   1de10:	mov	x22, x1
   1de14:	mov	x20, x0
   1de18:	subs	x25, x19, #0x2
   1de1c:	mov	w21, #0x1                   	// #1
   1de20:	b.eq	1de64 <PyInit__decimal@@Base+0x173b0>  // b.none
   1de24:	mov	x24, x22
   1de28:	b	1de48 <PyInit__decimal@@Base+0x17394>
   1de2c:	mov	x0, x24
   1de30:	mov	x1, x24
   1de34:	mov	x2, x19
   1de38:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1de3c:	lsr	x25, x25, #1
   1de40:	mov	x24, x0
   1de44:	cbz	x25, 1de64 <PyInit__decimal@@Base+0x173b0>
   1de48:	tbz	w25, #0, 1de2c <PyInit__decimal@@Base+0x17378>
   1de4c:	mov	x0, x21
   1de50:	mov	x1, x24
   1de54:	mov	x2, x19
   1de58:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1de5c:	mov	x21, x0
   1de60:	b	1de2c <PyInit__decimal@@Base+0x17378>
   1de64:	fmov	d0, x22
   1de68:	cnt	v0.8b, v0.8b
   1de6c:	adrp	x8, 1e000 <PyInit__decimal@@Base+0x1754c>
   1de70:	adrp	x9, 3d000 <PyInit__decimal@@Base+0x3654c>
   1de74:	adrp	x10, 1e000 <PyInit__decimal@@Base+0x1754c>
   1de78:	adrp	x11, 3d000 <PyInit__decimal@@Base+0x3654c>
   1de7c:	add	x8, x8, #0x824
   1de80:	add	x9, x9, #0x334
   1de84:	cmp	x22, #0x1, lsl #12
   1de88:	add	x10, x10, #0x884
   1de8c:	add	x11, x11, #0x718
   1de90:	uaddlv	h0, v0.8b
   1de94:	csel	x8, x9, x8, hi  // hi = pmore
   1de98:	adrp	x9, 1e000 <PyInit__decimal@@Base+0x1754c>
   1de9c:	csel	x10, x11, x10, hi  // hi = pmore
   1dea0:	fmov	w11, s0
   1dea4:	add	x9, x9, #0x8e4
   1dea8:	cmp	x11, #0x1
   1deac:	adrp	x11, 1e000 <PyInit__decimal@@Base+0x1754c>
   1deb0:	add	x11, x11, #0xd00
   1deb4:	csel	x8, x9, x8, ne  // ne = any
   1deb8:	mov	x0, x20
   1debc:	mov	x1, x22
   1dec0:	mov	w2, w23
   1dec4:	csel	x24, x11, x10, ne  // ne = any
   1dec8:	blr	x8
   1decc:	cbz	w0, 1dfa8 <PyInit__decimal@@Base+0x174f4>
   1ded0:	subs	x27, x22, #0x1
   1ded4:	str	x24, [sp, #8]
   1ded8:	b.eq	1df18 <PyInit__decimal@@Base+0x17464>  // b.none
   1dedc:	mov	x28, xzr
   1dee0:	add	x26, x20, x28, lsl #3
   1dee4:	ldp	x0, x24, [x26]
   1dee8:	mov	x2, x19
   1deec:	mov	x1, x0
   1def0:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1def4:	mov	x25, x0
   1def8:	mov	x0, x24
   1defc:	mov	x1, x24
   1df00:	mov	x2, x19
   1df04:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1df08:	add	x28, x28, #0x2
   1df0c:	cmp	x28, x27
   1df10:	stp	x25, x0, [x26]
   1df14:	b.cc	1dee0 <PyInit__decimal@@Base+0x1742c>  // b.lo, b.ul, b.last
   1df18:	ldr	x8, [sp, #8]
   1df1c:	mov	x0, x20
   1df20:	mov	x1, x22
   1df24:	mov	w2, w23
   1df28:	blr	x8
   1df2c:	cbz	w0, 1dfa8 <PyInit__decimal@@Base+0x174f4>
   1df30:	subs	x26, x22, #0x3
   1df34:	b.eq	1dfa4 <PyInit__decimal@@Base+0x174f0>  // b.none
   1df38:	mov	x27, xzr
   1df3c:	add	x28, x20, x27, lsl #3
   1df40:	ldp	x0, x22, [x28]
   1df44:	ldp	x23, x24, [x28, #16]
   1df48:	mov	x1, x21
   1df4c:	mov	x2, x19
   1df50:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1df54:	mov	x25, x0
   1df58:	mov	x0, x22
   1df5c:	mov	x1, x21
   1df60:	mov	x2, x19
   1df64:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1df68:	mov	x22, x0
   1df6c:	mov	x0, x23
   1df70:	mov	x1, x21
   1df74:	mov	x2, x19
   1df78:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1df7c:	mov	x23, x0
   1df80:	mov	x0, x24
   1df84:	mov	x1, x21
   1df88:	mov	x2, x19
   1df8c:	bl	1dfc8 <PyInit__decimal@@Base+0x17514>
   1df90:	add	x27, x27, #0x4
   1df94:	cmp	x27, x26
   1df98:	stp	x25, x22, [x28]
   1df9c:	stp	x23, x0, [x28, #16]
   1dfa0:	b.cc	1df3c <PyInit__decimal@@Base+0x17488>  // b.lo, b.ul, b.last
   1dfa4:	mov	w0, #0x1                   	// #1
   1dfa8:	ldp	x20, x19, [sp, #96]
   1dfac:	ldp	x22, x21, [sp, #80]
   1dfb0:	ldp	x24, x23, [sp, #64]
   1dfb4:	ldp	x26, x25, [sp, #48]
   1dfb8:	ldp	x28, x27, [sp, #32]
   1dfbc:	ldp	x29, x30, [sp, #16]
   1dfc0:	add	sp, sp, #0x70
   1dfc4:	ret
   1dfc8:	umulh	x8, x1, x0
   1dfcc:	mul	x9, x1, x0
   1dfd0:	tbnz	x2, #32, 1e01c <PyInit__decimal@@Base+0x17568>
   1dfd4:	tbnz	x2, #34, 1e048 <PyInit__decimal@@Base+0x17594>
   1dfd8:	subs	x9, x9, x8
   1dfdc:	lsr	x10, x8, #24
   1dfe0:	cset	w11, cc  // cc = lo, ul, last
   1dfe4:	adds	x8, x9, x8, lsl #40
   1dfe8:	sub	x9, x10, x11
   1dfec:	cinc	x9, x9, cs  // cs = hs, nlast
   1dff0:	subs	x8, x8, x9
   1dff4:	lsr	x10, x9, #24
   1dff8:	cset	w11, cc  // cc = lo, ul, last
   1dffc:	adds	x8, x8, x9, lsl #40
   1e000:	sub	x9, x10, x11
   1e004:	cinc	x9, x9, cs  // cs = hs, nlast
   1e008:	subs	x8, x8, x9
   1e00c:	lsr	x10, x9, #24
   1e010:	cset	w11, cc  // cc = lo, ul, last
   1e014:	adds	x8, x8, x9, lsl #40
   1e018:	b	1e088 <PyInit__decimal@@Base+0x175d4>
   1e01c:	subs	x9, x9, x8
   1e020:	lsr	x10, x8, #32
   1e024:	cset	w11, cc  // cc = lo, ul, last
   1e028:	adds	x8, x9, x8, lsl #32
   1e02c:	sub	x9, x10, x11
   1e030:	cinc	x9, x9, cs  // cs = hs, nlast
   1e034:	subs	x8, x8, x9
   1e038:	lsr	x10, x9, #32
   1e03c:	cset	w11, cc  // cc = lo, ul, last
   1e040:	adds	x8, x8, x9, lsl #32
   1e044:	b	1e088 <PyInit__decimal@@Base+0x175d4>
   1e048:	subs	x9, x9, x8
   1e04c:	lsr	x10, x8, #30
   1e050:	cset	w11, cc  // cc = lo, ul, last
   1e054:	adds	x8, x9, x8, lsl #34
   1e058:	sub	x9, x10, x11
   1e05c:	cinc	x9, x9, cs  // cs = hs, nlast
   1e060:	subs	x8, x8, x9
   1e064:	lsr	x10, x9, #30
   1e068:	cset	w11, cc  // cc = lo, ul, last
   1e06c:	adds	x8, x8, x9, lsl #34
   1e070:	sub	x9, x10, x11
   1e074:	cinc	x9, x9, cs  // cs = hs, nlast
   1e078:	subs	x8, x8, x9
   1e07c:	lsr	x10, x9, #30
   1e080:	cset	w11, cc  // cc = lo, ul, last
   1e084:	adds	x8, x8, x9, lsl #34
   1e088:	sub	x9, x10, x11
   1e08c:	cset	w10, cs  // cs = hs, nlast
   1e090:	sbfx	x10, x10, #0, #1
   1e094:	cmp	x9, x10
   1e098:	ccmp	x8, x2, #0x2, eq  // eq = none
   1e09c:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1e0a0:	sub	x0, x8, x9
   1e0a4:	ret
   1e0a8:	sub	sp, sp, #0xa0
   1e0ac:	stp	x29, x30, [sp, #64]
   1e0b0:	stp	x28, x27, [sp, #80]
   1e0b4:	stp	x26, x25, [sp, #96]
   1e0b8:	stp	x24, x23, [sp, #112]
   1e0bc:	stp	x22, x21, [sp, #128]
   1e0c0:	stp	x20, x19, [sp, #144]
   1e0c4:	add	x29, sp, #0x40
   1e0c8:	cbz	x3, 1e284 <PyInit__decimal@@Base+0x177d0>
   1e0cc:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e0d0:	add	x8, x8, #0xa50
   1e0d4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e0d8:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e0dc:	ldp	x13, x24, [x8]
   1e0e0:	ldr	x9, [x9, #2688]
   1e0e4:	ldr	x26, [x8, #16]
   1e0e8:	ldr	x8, [x10, #2696]
   1e0ec:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e0f0:	adrp	x12, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e0f4:	mov	x19, x3
   1e0f8:	stp	x8, x9, [sp, #24]
   1e0fc:	ldr	x8, [x11, #2704]
   1e100:	mov	x21, x1
   1e104:	mov	x22, x0
   1e108:	mov	x27, xzr
   1e10c:	str	x8, [sp, #16]
   1e110:	ldr	x8, [x12, #2712]
   1e114:	mov	x23, xzr
   1e118:	mov	x28, xzr
   1e11c:	stur	x13, [x29, #-24]
   1e120:	str	x8, [sp, #8]
   1e124:	ldr	x25, [x22]
   1e128:	ldr	x8, [x21], #8
   1e12c:	ldr	x9, [x2], #8
   1e130:	ldr	x1, [sp, #32]
   1e134:	cmp	x8, x24
   1e138:	stp	x9, x2, [x29, #-16]
   1e13c:	csel	x9, xzr, x24, cc  // cc = lo, ul, last
   1e140:	cmp	x25, x24
   1e144:	sub	x8, x8, x9
   1e148:	csel	x9, xzr, x24, cc  // cc = lo, ul, last
   1e14c:	sub	x9, x25, x9
   1e150:	subs	x8, x8, x9
   1e154:	csel	x9, x24, xzr, cc  // cc = lo, ul, last
   1e158:	add	x0, x8, x9
   1e15c:	mov	x2, x24
   1e160:	bl	1e2a4 <PyInit__decimal@@Base+0x177f0>
   1e164:	ldur	x9, [x29, #-24]
   1e168:	mov	x20, x27
   1e16c:	mov	x2, x26
   1e170:	mov	x3, xzr
   1e174:	umulh	x8, x0, x9
   1e178:	mul	x9, x0, x9
   1e17c:	adds	x25, x25, x9
   1e180:	cinc	x27, x8, cs  // cs = hs, nlast
   1e184:	udiv	x8, x27, x26
   1e188:	msub	x1, x8, x26, x27
   1e18c:	mov	x0, x25
   1e190:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1e194:	ldur	x9, [x29, #-16]
   1e198:	msub	x8, x26, x0, x25
   1e19c:	ldr	x1, [sp, #24]
   1e1a0:	mov	x2, x26
   1e1a4:	subs	x8, x9, x8
   1e1a8:	csel	x9, x26, xzr, cc  // cc = lo, ul, last
   1e1ac:	add	x0, x8, x9
   1e1b0:	bl	1e2a4 <PyInit__decimal@@Base+0x177f0>
   1e1b4:	ldp	x11, x9, [sp, #8]
   1e1b8:	mov	x2, #0x89e80000            	// #2313682944
   1e1bc:	movk	x2, #0x2304, lsl #32
   1e1c0:	movk	x2, #0x8ac7, lsl #48
   1e1c4:	mul	x8, x9, x0
   1e1c8:	umulh	x9, x9, x0
   1e1cc:	umulh	x10, x11, x0
   1e1d0:	mul	x11, x11, x0
   1e1d4:	adds	x9, x11, x9
   1e1d8:	add	x10, x20, x10
   1e1dc:	cinc	x10, x10, cs  // cs = hs, nlast
   1e1e0:	adds	x8, x25, x8
   1e1e4:	add	x9, x9, x27
   1e1e8:	cinc	x9, x9, cs  // cs = hs, nlast
   1e1ec:	adds	x25, x8, x28
   1e1f0:	cinc	x8, x23, cs  // cs = hs, nlast
   1e1f4:	cmp	x9, x27
   1e1f8:	add	x28, x8, x9
   1e1fc:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1e200:	cinc	x8, x10, cc  // cc = lo, ul, last
   1e204:	cmp	x28, x23
   1e208:	movk	x9, #0x2304, lsl #32
   1e20c:	mov	x20, #0x76180000            	// #1981284352
   1e210:	mov	x10, #0x89e80000            	// #2313682944
   1e214:	cinc	x8, x8, cc  // cc = lo, ul, last
   1e218:	movk	x9, #0x8ac7, lsl #48
   1e21c:	movk	x20, #0xdcfb, lsl #32
   1e220:	movk	x10, #0x2304, lsl #32
   1e224:	cmp	x8, x9
   1e228:	movk	x20, #0x7538, lsl #48
   1e22c:	movk	x10, #0x8ac7, lsl #48
   1e230:	add	x9, x8, x20
   1e234:	cset	w27, hi  // hi = pmore
   1e238:	cmp	x8, x10
   1e23c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1e240:	mov	x0, x28
   1e244:	mov	x3, xzr
   1e248:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1e24c:	mov	x2, #0x89e80000            	// #2313682944
   1e250:	movk	x2, #0x2304, lsl #32
   1e254:	mov	x23, x0
   1e258:	madd	x1, x0, x20, x28
   1e25c:	movk	x2, #0x8ac7, lsl #48
   1e260:	mov	x0, x25
   1e264:	mov	x3, xzr
   1e268:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   1e26c:	ldur	x2, [x29, #-8]
   1e270:	madd	x8, x0, x20, x25
   1e274:	mov	x28, x0
   1e278:	subs	x19, x19, #0x1
   1e27c:	str	x8, [x22], #8
   1e280:	b.ne	1e124 <PyInit__decimal@@Base+0x17670>  // b.any
   1e284:	ldp	x20, x19, [sp, #144]
   1e288:	ldp	x22, x21, [sp, #128]
   1e28c:	ldp	x24, x23, [sp, #112]
   1e290:	ldp	x26, x25, [sp, #96]
   1e294:	ldp	x28, x27, [sp, #80]
   1e298:	ldp	x29, x30, [sp, #64]
   1e29c:	add	sp, sp, #0xa0
   1e2a0:	ret
   1e2a4:	umulh	x8, x1, x0
   1e2a8:	mul	x9, x1, x0
   1e2ac:	tbnz	x2, #32, 1e2f8 <PyInit__decimal@@Base+0x17844>
   1e2b0:	tbnz	x2, #34, 1e324 <PyInit__decimal@@Base+0x17870>
   1e2b4:	subs	x9, x9, x8
   1e2b8:	lsr	x10, x8, #24
   1e2bc:	cset	w11, cc  // cc = lo, ul, last
   1e2c0:	adds	x8, x9, x8, lsl #40
   1e2c4:	sub	x9, x10, x11
   1e2c8:	cinc	x9, x9, cs  // cs = hs, nlast
   1e2cc:	subs	x8, x8, x9
   1e2d0:	lsr	x10, x9, #24
   1e2d4:	cset	w11, cc  // cc = lo, ul, last
   1e2d8:	adds	x8, x8, x9, lsl #40
   1e2dc:	sub	x9, x10, x11
   1e2e0:	cinc	x9, x9, cs  // cs = hs, nlast
   1e2e4:	subs	x8, x8, x9
   1e2e8:	lsr	x10, x9, #24
   1e2ec:	cset	w11, cc  // cc = lo, ul, last
   1e2f0:	adds	x8, x8, x9, lsl #40
   1e2f4:	b	1e364 <PyInit__decimal@@Base+0x178b0>
   1e2f8:	subs	x9, x9, x8
   1e2fc:	lsr	x10, x8, #32
   1e300:	cset	w11, cc  // cc = lo, ul, last
   1e304:	adds	x8, x9, x8, lsl #32
   1e308:	sub	x9, x10, x11
   1e30c:	cinc	x9, x9, cs  // cs = hs, nlast
   1e310:	subs	x8, x8, x9
   1e314:	lsr	x10, x9, #32
   1e318:	cset	w11, cc  // cc = lo, ul, last
   1e31c:	adds	x8, x8, x9, lsl #32
   1e320:	b	1e364 <PyInit__decimal@@Base+0x178b0>
   1e324:	subs	x9, x9, x8
   1e328:	lsr	x10, x8, #30
   1e32c:	cset	w11, cc  // cc = lo, ul, last
   1e330:	adds	x8, x9, x8, lsl #34
   1e334:	sub	x9, x10, x11
   1e338:	cinc	x9, x9, cs  // cs = hs, nlast
   1e33c:	subs	x8, x8, x9
   1e340:	lsr	x10, x9, #30
   1e344:	cset	w11, cc  // cc = lo, ul, last
   1e348:	adds	x8, x8, x9, lsl #34
   1e34c:	sub	x9, x10, x11
   1e350:	cinc	x9, x9, cs  // cs = hs, nlast
   1e354:	subs	x8, x8, x9
   1e358:	lsr	x10, x9, #30
   1e35c:	cset	w11, cc  // cc = lo, ul, last
   1e360:	adds	x8, x8, x9, lsl #34
   1e364:	sub	x9, x10, x11
   1e368:	cset	w10, cs  // cs = hs, nlast
   1e36c:	sbfx	x10, x10, #0, #1
   1e370:	cmp	x9, x10
   1e374:	ccmp	x8, x2, #0x2, eq  // eq = none
   1e378:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1e37c:	sub	x0, x8, x9
   1e380:	ret
   1e384:	sub	sp, sp, #0xc0
   1e388:	stp	x29, x30, [sp, #96]
   1e38c:	stp	x28, x27, [sp, #112]
   1e390:	stp	x26, x25, [sp, #128]
   1e394:	stp	x24, x23, [sp, #144]
   1e398:	stp	x22, x21, [sp, #160]
   1e39c:	stp	x20, x19, [sp, #176]
   1e3a0:	add	x29, sp, #0x60
   1e3a4:	ldrsw	x8, [x2]
   1e3a8:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e3ac:	add	x9, x9, #0xa50
   1e3b0:	stur	x1, [x29, #-32]
   1e3b4:	ldr	x22, [x9, x8, lsl #3]
   1e3b8:	lsr	x1, x1, #1
   1e3bc:	str	x2, [sp, #24]
   1e3c0:	str	x0, [sp, #8]
   1e3c4:	cbz	x1, 1e484 <PyInit__decimal@@Base+0x179d0>
   1e3c8:	ldr	x8, [sp, #8]
   1e3cc:	mov	x20, xzr
   1e3d0:	lsl	x27, x1, #3
   1e3d4:	add	x21, x8, #0x8
   1e3d8:	ldr	x8, [sp, #24]
   1e3dc:	add	x26, x8, #0x20
   1e3e0:	add	x19, x21, x27
   1e3e4:	ldp	x8, x10, [x21, #-8]
   1e3e8:	ldur	x9, [x19, #-8]
   1e3ec:	ldr	x11, [x21, x27]
   1e3f0:	mov	x28, x1
   1e3f4:	ldp	x1, x23, [x26, #-8]
   1e3f8:	adds	x12, x9, x8
   1e3fc:	csel	x13, x22, xzr, cs  // cs = hs, nlast
   1e400:	sub	x12, x12, x13
   1e404:	cmp	x12, x22
   1e408:	csel	x13, xzr, x22, cc  // cc = lo, ul, last
   1e40c:	subs	x8, x8, x9
   1e410:	sub	x9, x12, x13
   1e414:	csel	x12, x22, xzr, cc  // cc = lo, ul, last
   1e418:	adds	x13, x11, x10
   1e41c:	add	x0, x8, x12
   1e420:	csel	x8, x22, xzr, cs  // cs = hs, nlast
   1e424:	sub	x8, x13, x8
   1e428:	cmp	x8, x22
   1e42c:	stur	x9, [x21, #-8]
   1e430:	csel	x9, xzr, x22, cc  // cc = lo, ul, last
   1e434:	subs	x10, x10, x11
   1e438:	sub	x8, x8, x9
   1e43c:	csel	x9, x22, xzr, cc  // cc = lo, ul, last
   1e440:	mov	x2, x22
   1e444:	str	x8, [x21]
   1e448:	add	x24, x10, x9
   1e44c:	bl	1e744 <PyInit__decimal@@Base+0x17c90>
   1e450:	mov	x25, x0
   1e454:	mov	x0, x24
   1e458:	mov	x1, x23
   1e45c:	mov	x2, x22
   1e460:	bl	1e744 <PyInit__decimal@@Base+0x17c90>
   1e464:	add	x20, x20, #0x2
   1e468:	mov	x1, x28
   1e46c:	stur	x25, [x19, #-8]
   1e470:	str	x0, [x21, x27]
   1e474:	add	x21, x21, #0x10
   1e478:	cmp	x20, x28
   1e47c:	add	x26, x26, #0x10
   1e480:	b.cc	1e3e0 <PyInit__decimal@@Base+0x1792c>  // b.lo, b.ul, b.last
   1e484:	ldur	x17, [x29, #-32]
   1e488:	ldr	x18, [sp, #8]
   1e48c:	cmp	x17, #0x4
   1e490:	b.cc	1e664 <PyInit__decimal@@Base+0x17bb0>  // b.lo, b.ul, b.last
   1e494:	add	x8, x18, #0x8
   1e498:	str	x8, [sp]
   1e49c:	mov	w8, #0x2                   	// #2
   1e4a0:	str	x8, [sp, #32]
   1e4a4:	lsr	x9, x1, #1
   1e4a8:	lsl	x28, x9, #3
   1e4ac:	lsl	x23, x1, #3
   1e4b0:	mov	x8, xzr
   1e4b4:	lsl	x0, x1, #1
   1e4b8:	lsl	x21, x1, #4
   1e4bc:	str	x9, [sp, #40]
   1e4c0:	add	x9, x23, x28
   1e4c4:	mov	x10, x18
   1e4c8:	ldr	x11, [x10]
   1e4cc:	ldr	x12, [x10, x28]
   1e4d0:	ldr	x13, [x10, x23]
   1e4d4:	ldr	x14, [x10, x9]
   1e4d8:	add	x8, x8, x0
   1e4dc:	adds	x15, x12, x11
   1e4e0:	csel	x16, x22, xzr, cs  // cs = hs, nlast
   1e4e4:	sub	x15, x15, x16
   1e4e8:	cmp	x15, x22
   1e4ec:	csel	x16, xzr, x22, cc  // cc = lo, ul, last
   1e4f0:	subs	x11, x11, x12
   1e4f4:	sub	x12, x15, x16
   1e4f8:	csel	x15, x22, xzr, cc  // cc = lo, ul, last
   1e4fc:	adds	x16, x14, x13
   1e500:	str	x12, [x10]
   1e504:	csel	x12, x22, xzr, cs  // cs = hs, nlast
   1e508:	sub	x12, x16, x12
   1e50c:	cmp	x12, x22
   1e510:	add	x11, x11, x15
   1e514:	csel	x15, xzr, x22, cc  // cc = lo, ul, last
   1e518:	subs	x13, x13, x14
   1e51c:	sub	x12, x12, x15
   1e520:	csel	x14, x22, xzr, cc  // cc = lo, ul, last
   1e524:	str	x12, [x10, x23]
   1e528:	add	x12, x13, x14
   1e52c:	cmp	x8, x17
   1e530:	str	x11, [x10, x28]
   1e534:	str	x12, [x10, x9]
   1e538:	add	x10, x10, x21
   1e53c:	b.cc	1e4c8 <PyInit__decimal@@Base+0x17a14>  // b.lo, b.ul, b.last
   1e540:	cmp	x1, #0x4
   1e544:	b.cc	1e664 <PyInit__decimal@@Base+0x17bb0>  // b.lo, b.ul, b.last
   1e548:	ldr	x8, [sp, #40]
   1e54c:	ldr	x20, [sp]
   1e550:	mov	w9, #0x1                   	// #1
   1e554:	str	x1, [sp, #16]
   1e558:	add	x11, x1, x8
   1e55c:	stp	x0, x11, [x29, #-24]
   1e560:	ldr	x8, [sp, #32]
   1e564:	str	x9, [sp, #48]
   1e568:	mov	x19, xzr
   1e56c:	stur	x20, [x29, #-40]
   1e570:	mul	x8, x9, x8
   1e574:	ldr	x9, [sp, #24]
   1e578:	add	x8, x9, x8, lsl #3
   1e57c:	ldr	x8, [x8, #24]
   1e580:	stur	x8, [x29, #-8]
   1e584:	ldr	x8, [x20]
   1e588:	ldr	x9, [x20, x28]
   1e58c:	lsl	x27, x11, #3
   1e590:	ldr	x10, [x20, x23]
   1e594:	ldr	x11, [x20, x27]
   1e598:	adds	x12, x9, x8
   1e59c:	csel	x13, x22, xzr, cs  // cs = hs, nlast
   1e5a0:	sub	x12, x12, x13
   1e5a4:	cmp	x12, x22
   1e5a8:	csel	x13, xzr, x22, cc  // cc = lo, ul, last
   1e5ac:	subs	x8, x8, x9
   1e5b0:	sub	x9, x12, x13
   1e5b4:	csel	x12, x22, xzr, cc  // cc = lo, ul, last
   1e5b8:	adds	x13, x11, x10
   1e5bc:	add	x0, x8, x12
   1e5c0:	csel	x8, x22, xzr, cs  // cs = hs, nlast
   1e5c4:	sub	x8, x13, x8
   1e5c8:	cmp	x8, x22
   1e5cc:	str	x9, [x20]
   1e5d0:	csel	x9, xzr, x22, cc  // cc = lo, ul, last
   1e5d4:	subs	x10, x10, x11
   1e5d8:	sub	x8, x8, x9
   1e5dc:	csel	x9, x22, xzr, cc  // cc = lo, ul, last
   1e5e0:	mov	x26, x22
   1e5e4:	ldur	x22, [x29, #-8]
   1e5e8:	mov	x2, x26
   1e5ec:	str	x8, [x20, x23]
   1e5f0:	add	x24, x10, x9
   1e5f4:	mov	x1, x22
   1e5f8:	bl	1e744 <PyInit__decimal@@Base+0x17c90>
   1e5fc:	mov	x25, x0
   1e600:	mov	x0, x24
   1e604:	mov	x1, x22
   1e608:	mov	x2, x26
   1e60c:	mov	x22, x26
   1e610:	bl	1e744 <PyInit__decimal@@Base+0x17c90>
   1e614:	str	x25, [x20, x28]
   1e618:	str	x0, [x20, x27]
   1e61c:	ldp	x0, x11, [x29, #-24]
   1e620:	ldur	x17, [x29, #-32]
   1e624:	add	x20, x20, x21
   1e628:	add	x19, x19, x0
   1e62c:	cmp	x19, x17
   1e630:	b.cc	1e584 <PyInit__decimal@@Base+0x17ad0>  // b.lo, b.ul, b.last
   1e634:	ldp	x8, x9, [sp, #40]
   1e638:	ldur	x20, [x29, #-40]
   1e63c:	add	x9, x9, #0x1
   1e640:	cmp	x9, x8
   1e644:	add	x20, x20, #0x8
   1e648:	b.cc	1e560 <PyInit__decimal@@Base+0x17aac>  // b.lo, b.ul, b.last
   1e64c:	ldp	x18, x8, [sp, #8]
   1e650:	cmp	x8, #0x3
   1e654:	ldp	x8, x1, [sp, #32]
   1e658:	lsl	x8, x8, #1
   1e65c:	str	x8, [sp, #32]
   1e660:	b.hi	1e4a4 <PyInit__decimal@@Base+0x179f0>  // b.pmore
   1e664:	mov	x8, xzr
   1e668:	mov	x11, xzr
   1e66c:	mov	w9, #0x1f                  	// #31
   1e670:	mov	w10, #0x3f                  	// #63
   1e674:	b	1e700 <PyInit__decimal@@Base+0x17c4c>
   1e678:	add	x12, x11, #0x1
   1e67c:	lsr	x13, x12, #32
   1e680:	tst	x12, #0xffffffff
   1e684:	csinc	x11, x13, x11, eq  // eq = none
   1e688:	csel	w13, w10, w9, eq  // eq = none
   1e68c:	lsr	x15, x11, #16
   1e690:	tst	x11, #0xffff
   1e694:	sub	w14, w13, #0x10
   1e698:	csel	x11, x15, x11, eq  // eq = none
   1e69c:	csel	w13, w13, w14, eq  // eq = none
   1e6a0:	lsr	x15, x11, #8
   1e6a4:	tst	x11, #0xff
   1e6a8:	sub	w14, w13, #0x8
   1e6ac:	csel	x11, x15, x11, eq  // eq = none
   1e6b0:	csel	w13, w13, w14, eq  // eq = none
   1e6b4:	lsr	x15, x11, #4
   1e6b8:	tst	x11, #0xf
   1e6bc:	sub	w14, w13, #0x4
   1e6c0:	csel	x11, x15, x11, eq  // eq = none
   1e6c4:	csel	w13, w13, w14, eq  // eq = none
   1e6c8:	lsr	x15, x11, #2
   1e6cc:	tst	x11, #0x3
   1e6d0:	sub	w14, w13, #0x2
   1e6d4:	csel	x11, x15, x11, eq  // eq = none
   1e6d8:	csel	w13, w13, w14, eq  // eq = none
   1e6dc:	sbfx	x11, x11, #0, #1
   1e6e0:	add	w11, w13, w11
   1e6e4:	add	w11, w11, #0x1
   1e6e8:	lsr	x11, x17, x11
   1e6ec:	sub	x11, x17, x11
   1e6f0:	cmp	x12, x17
   1e6f4:	eor	x8, x11, x8
   1e6f8:	mov	x11, x12
   1e6fc:	b.cs	1e724 <PyInit__decimal@@Base+0x17c70>  // b.hs, b.nlast
   1e700:	cmp	x8, x11
   1e704:	b.ls	1e678 <PyInit__decimal@@Base+0x17bc4>  // b.plast
   1e708:	lsl	x12, x11, #3
   1e70c:	lsl	x13, x8, #3
   1e710:	ldr	x14, [x18, x13]
   1e714:	ldr	x15, [x18, x12]
   1e718:	str	x14, [x18, x12]
   1e71c:	str	x15, [x18, x13]
   1e720:	b	1e678 <PyInit__decimal@@Base+0x17bc4>
   1e724:	ldp	x20, x19, [sp, #176]
   1e728:	ldp	x22, x21, [sp, #160]
   1e72c:	ldp	x24, x23, [sp, #144]
   1e730:	ldp	x26, x25, [sp, #128]
   1e734:	ldp	x28, x27, [sp, #112]
   1e738:	ldp	x29, x30, [sp, #96]
   1e73c:	add	sp, sp, #0xc0
   1e740:	ret
   1e744:	umulh	x8, x1, x0
   1e748:	mul	x9, x1, x0
   1e74c:	tbnz	x2, #32, 1e798 <PyInit__decimal@@Base+0x17ce4>
   1e750:	tbnz	x2, #34, 1e7c4 <PyInit__decimal@@Base+0x17d10>
   1e754:	subs	x9, x9, x8
   1e758:	lsr	x10, x8, #24
   1e75c:	cset	w11, cc  // cc = lo, ul, last
   1e760:	adds	x8, x9, x8, lsl #40
   1e764:	sub	x9, x10, x11
   1e768:	cinc	x9, x9, cs  // cs = hs, nlast
   1e76c:	subs	x8, x8, x9
   1e770:	lsr	x10, x9, #24
   1e774:	cset	w11, cc  // cc = lo, ul, last
   1e778:	adds	x8, x8, x9, lsl #40
   1e77c:	sub	x9, x10, x11
   1e780:	cinc	x9, x9, cs  // cs = hs, nlast
   1e784:	subs	x8, x8, x9
   1e788:	lsr	x10, x9, #24
   1e78c:	cset	w11, cc  // cc = lo, ul, last
   1e790:	adds	x8, x8, x9, lsl #40
   1e794:	b	1e804 <PyInit__decimal@@Base+0x17d50>
   1e798:	subs	x9, x9, x8
   1e79c:	lsr	x10, x8, #32
   1e7a0:	cset	w11, cc  // cc = lo, ul, last
   1e7a4:	adds	x8, x9, x8, lsl #32
   1e7a8:	sub	x9, x10, x11
   1e7ac:	cinc	x9, x9, cs  // cs = hs, nlast
   1e7b0:	subs	x8, x8, x9
   1e7b4:	lsr	x10, x9, #32
   1e7b8:	cset	w11, cc  // cc = lo, ul, last
   1e7bc:	adds	x8, x8, x9, lsl #32
   1e7c0:	b	1e804 <PyInit__decimal@@Base+0x17d50>
   1e7c4:	subs	x9, x9, x8
   1e7c8:	lsr	x10, x8, #30
   1e7cc:	cset	w11, cc  // cc = lo, ul, last
   1e7d0:	adds	x8, x9, x8, lsl #34
   1e7d4:	sub	x9, x10, x11
   1e7d8:	cinc	x9, x9, cs  // cs = hs, nlast
   1e7dc:	subs	x8, x8, x9
   1e7e0:	lsr	x10, x9, #30
   1e7e4:	cset	w11, cc  // cc = lo, ul, last
   1e7e8:	adds	x8, x8, x9, lsl #34
   1e7ec:	sub	x9, x10, x11
   1e7f0:	cinc	x9, x9, cs  // cs = hs, nlast
   1e7f4:	subs	x8, x8, x9
   1e7f8:	lsr	x10, x9, #30
   1e7fc:	cset	w11, cc  // cc = lo, ul, last
   1e800:	adds	x8, x8, x9, lsl #34
   1e804:	sub	x9, x10, x11
   1e808:	cset	w10, cs  // cs = hs, nlast
   1e80c:	sbfx	x10, x10, #0, #1
   1e810:	cmp	x9, x10
   1e814:	ccmp	x8, x2, #0x2, eq  // eq = none
   1e818:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1e81c:	sub	x0, x8, x9
   1e820:	ret
   1e824:	stp	x29, x30, [sp, #-48]!
   1e828:	str	x21, [sp, #16]
   1e82c:	stp	x20, x19, [sp, #32]
   1e830:	mov	x29, sp
   1e834:	mov	x19, x1
   1e838:	mov	x20, x0
   1e83c:	mov	w1, #0xffffffff            	// #-1
   1e840:	mov	x0, x19
   1e844:	bl	3d15c <PyInit__decimal@@Base+0x366a8>
   1e848:	cbz	x0, 1e874 <PyInit__decimal@@Base+0x17dc0>
   1e84c:	mov	x21, x0
   1e850:	mov	x0, x20
   1e854:	mov	x1, x19
   1e858:	mov	x2, x21
   1e85c:	bl	1e384 <PyInit__decimal@@Base+0x178d0>
   1e860:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1e864:	ldr	x8, [x8, #1376]
   1e868:	mov	x0, x21
   1e86c:	blr	x8
   1e870:	mov	w0, #0x1                   	// #1
   1e874:	ldp	x20, x19, [sp, #32]
   1e878:	ldr	x21, [sp, #16]
   1e87c:	ldp	x29, x30, [sp], #48
   1e880:	ret
   1e884:	stp	x29, x30, [sp, #-48]!
   1e888:	str	x21, [sp, #16]
   1e88c:	stp	x20, x19, [sp, #32]
   1e890:	mov	x29, sp
   1e894:	mov	x19, x1
   1e898:	mov	x20, x0
   1e89c:	mov	w1, #0x1                   	// #1
   1e8a0:	mov	x0, x19
   1e8a4:	bl	3d15c <PyInit__decimal@@Base+0x366a8>
   1e8a8:	cbz	x0, 1e8d4 <PyInit__decimal@@Base+0x17e20>
   1e8ac:	mov	x21, x0
   1e8b0:	mov	x0, x20
   1e8b4:	mov	x1, x19
   1e8b8:	mov	x2, x21
   1e8bc:	bl	1e384 <PyInit__decimal@@Base+0x178d0>
   1e8c0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   1e8c4:	ldr	x8, [x8, #1376]
   1e8c8:	mov	x0, x21
   1e8cc:	blr	x8
   1e8d0:	mov	w0, #0x1                   	// #1
   1e8d4:	ldp	x20, x19, [sp, #32]
   1e8d8:	ldr	x21, [sp, #16]
   1e8dc:	ldp	x29, x30, [sp], #48
   1e8e0:	ret
   1e8e4:	sub	sp, sp, #0xb0
   1e8e8:	stp	x29, x30, [sp, #80]
   1e8ec:	stp	x28, x27, [sp, #96]
   1e8f0:	stp	x26, x25, [sp, #112]
   1e8f4:	stp	x24, x23, [sp, #128]
   1e8f8:	stp	x22, x21, [sp, #144]
   1e8fc:	stp	x20, x19, [sp, #160]
   1e900:	add	x29, sp, #0x50
   1e904:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1e908:	add	x8, x8, #0xa50
   1e90c:	ldr	x23, [x8, w2, sxtw #3]
   1e910:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1e914:	movk	x8, #0xaaab
   1e918:	mov	x19, x0
   1e91c:	str	x1, [sp, #8]
   1e920:	umulh	x8, x1, x8
   1e924:	sub	x0, x29, #0x18
   1e928:	mov	w1, #0xffffffff            	// #-1
   1e92c:	lsr	x20, x8, #1
   1e930:	str	w2, [sp, #4]
   1e934:	bl	3d2dc <PyInit__decimal@@Base+0x36828>
   1e938:	add	x9, x19, x20, lsl #3
   1e93c:	cmp	x9, x19
   1e940:	lsl	x22, x20, #3
   1e944:	stp	x19, x20, [sp, #16]
   1e948:	b.ls	1ea5c <PyInit__decimal@@Base+0x17fa8>  // b.plast
   1e94c:	ldp	x28, x8, [sp, #16]
   1e950:	lsl	x8, x8, #4
   1e954:	mov	x21, x8
   1e958:	stp	x8, x9, [sp, #32]
   1e95c:	ldr	x19, [x28]
   1e960:	ldr	x24, [x28, x22]
   1e964:	ldr	x27, [x28, x21]
   1e968:	ldp	x25, x26, [x29, #-16]
   1e96c:	mov	x2, x23
   1e970:	adds	x8, x24, x19
   1e974:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1e978:	sub	x8, x8, x9
   1e97c:	cmp	x8, x23
   1e980:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1e984:	sub	x8, x8, x9
   1e988:	adds	x8, x8, x27
   1e98c:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1e990:	sub	x8, x8, x9
   1e994:	cmp	x8, x23
   1e998:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1e99c:	sub	x8, x8, x9
   1e9a0:	mov	x0, x24
   1e9a4:	mov	x1, x25
   1e9a8:	stur	x8, [x29, #-32]
   1e9ac:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1e9b0:	adds	x8, x0, x19
   1e9b4:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1e9b8:	sub	x8, x8, x9
   1e9bc:	cmp	x8, x23
   1e9c0:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1e9c4:	mov	x0, x27
   1e9c8:	mov	x1, x26
   1e9cc:	mov	x2, x23
   1e9d0:	sub	x20, x8, x9
   1e9d4:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1e9d8:	adds	x8, x20, x0
   1e9dc:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1e9e0:	sub	x8, x8, x9
   1e9e4:	cmp	x8, x23
   1e9e8:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1e9ec:	mov	x0, x24
   1e9f0:	mov	x1, x26
   1e9f4:	mov	x2, x23
   1e9f8:	sub	x20, x8, x9
   1e9fc:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ea00:	adds	x8, x0, x19
   1ea04:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1ea08:	sub	x8, x8, x9
   1ea0c:	cmp	x8, x23
   1ea10:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1ea14:	mov	x0, x27
   1ea18:	mov	x1, x25
   1ea1c:	mov	x2, x23
   1ea20:	sub	x19, x8, x9
   1ea24:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ea28:	adds	x8, x19, x0
   1ea2c:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1ea30:	sub	x8, x8, x9
   1ea34:	cmp	x8, x23
   1ea38:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1ea3c:	sub	x8, x8, x9
   1ea40:	str	x8, [x28, x21]
   1ea44:	ldur	x8, [x29, #-32]
   1ea48:	ldr	x9, [sp, #40]
   1ea4c:	str	x20, [x28, x22]
   1ea50:	str	x8, [x28], #8
   1ea54:	cmp	x28, x9
   1ea58:	b.cc	1e95c <PyInit__decimal@@Base+0x17ea8>  // b.lo, b.ul, b.last
   1ea5c:	ldr	x0, [sp, #8]
   1ea60:	ldr	w2, [sp, #4]
   1ea64:	mov	w1, #0xffffffff            	// #-1
   1ea68:	stur	x22, [x29, #-32]
   1ea6c:	bl	3d084 <PyInit__decimal@@Base+0x365d0>
   1ea70:	ldr	x8, [sp, #24]
   1ea74:	subs	x21, x8, #0x1
   1ea78:	b.eq	1ebc0 <PyInit__decimal@@Base+0x1810c>  // b.none
   1ea7c:	mov	x1, x0
   1ea80:	mov	w0, #0x1                   	// #1
   1ea84:	mov	x2, x23
   1ea88:	mov	w25, #0x1                   	// #1
   1ea8c:	str	x1, [sp, #40]
   1ea90:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ea94:	mov	x1, x0
   1ea98:	mov	x2, x23
   1ea9c:	mov	x26, x0
   1eaa0:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eaa4:	ldp	x8, x9, [sp, #16]
   1eaa8:	mov	x27, x0
   1eaac:	mov	x24, xzr
   1eab0:	add	x19, x8, x9, lsl #3
   1eab4:	add	x20, x19, x24, lsl #3
   1eab8:	ldp	x0, x28, [x20]
   1eabc:	mov	x1, x25
   1eac0:	mov	x2, x23
   1eac4:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eac8:	mov	x22, x0
   1eacc:	mov	x0, x28
   1ead0:	mov	x1, x26
   1ead4:	mov	x2, x23
   1ead8:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eadc:	mov	x28, x0
   1eae0:	mov	x0, x25
   1eae4:	mov	x1, x27
   1eae8:	mov	x2, x23
   1eaec:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eaf0:	mov	x25, x0
   1eaf4:	mov	x0, x26
   1eaf8:	mov	x1, x27
   1eafc:	mov	x2, x23
   1eb00:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb04:	add	x24, x24, #0x2
   1eb08:	mov	x26, x0
   1eb0c:	cmp	x24, x21
   1eb10:	stp	x22, x28, [x20]
   1eb14:	b.cc	1eab4 <PyInit__decimal@@Base+0x18000>  // b.lo, b.ul, b.last
   1eb18:	ldr	x0, [sp, #40]
   1eb1c:	mov	x2, x23
   1eb20:	mov	x1, x0
   1eb24:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb28:	mov	x1, x0
   1eb2c:	mov	w0, #0x1                   	// #1
   1eb30:	mov	x2, x23
   1eb34:	mov	w24, #0x1                   	// #1
   1eb38:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb3c:	mov	x1, x0
   1eb40:	mov	x2, x23
   1eb44:	mov	x25, x0
   1eb48:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb4c:	ldp	x8, x9, [sp, #16]
   1eb50:	mov	x26, x0
   1eb54:	mov	x28, xzr
   1eb58:	add	x19, x8, x9, lsl #4
   1eb5c:	add	x20, x19, x28, lsl #3
   1eb60:	ldp	x0, x22, [x20]
   1eb64:	mov	x1, x24
   1eb68:	mov	x2, x23
   1eb6c:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb70:	mov	x27, x0
   1eb74:	mov	x0, x22
   1eb78:	mov	x1, x25
   1eb7c:	mov	x2, x23
   1eb80:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb84:	mov	x22, x0
   1eb88:	mov	x0, x24
   1eb8c:	mov	x1, x26
   1eb90:	mov	x2, x23
   1eb94:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eb98:	mov	x24, x0
   1eb9c:	mov	x0, x25
   1eba0:	mov	x1, x26
   1eba4:	mov	x2, x23
   1eba8:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ebac:	add	x28, x28, #0x2
   1ebb0:	mov	x25, x0
   1ebb4:	cmp	x28, x21
   1ebb8:	stp	x27, x22, [x20]
   1ebbc:	b.cc	1eb5c <PyInit__decimal@@Base+0x180a8>  // b.lo, b.ul, b.last
   1ebc0:	ldp	x8, x21, [sp, #8]
   1ebc4:	add	x19, x21, x8, lsl #3
   1ebc8:	cmp	x19, x21
   1ebcc:	b.ls	1ebfc <PyInit__decimal@@Base+0x18148>  // b.plast
   1ebd0:	ldr	w20, [sp, #4]
   1ebd4:	ldr	x22, [sp, #24]
   1ebd8:	ldur	x23, [x29, #-32]
   1ebdc:	mov	x0, x21
   1ebe0:	mov	x1, x22
   1ebe4:	mov	w2, w20
   1ebe8:	bl	3d334 <PyInit__decimal@@Base+0x36880>
   1ebec:	cbz	w0, 1ec00 <PyInit__decimal@@Base+0x1814c>
   1ebf0:	add	x21, x21, x23
   1ebf4:	cmp	x21, x19
   1ebf8:	b.cc	1ebdc <PyInit__decimal@@Base+0x18128>  // b.lo, b.ul, b.last
   1ebfc:	mov	w0, #0x1                   	// #1
   1ec00:	ldp	x20, x19, [sp, #160]
   1ec04:	ldp	x22, x21, [sp, #144]
   1ec08:	ldp	x24, x23, [sp, #128]
   1ec0c:	ldp	x26, x25, [sp, #112]
   1ec10:	ldp	x28, x27, [sp, #96]
   1ec14:	ldp	x29, x30, [sp, #80]
   1ec18:	add	sp, sp, #0xb0
   1ec1c:	ret
   1ec20:	umulh	x8, x1, x0
   1ec24:	mul	x9, x1, x0
   1ec28:	tbnz	x2, #32, 1ec74 <PyInit__decimal@@Base+0x181c0>
   1ec2c:	tbnz	x2, #34, 1eca0 <PyInit__decimal@@Base+0x181ec>
   1ec30:	subs	x9, x9, x8
   1ec34:	lsr	x10, x8, #24
   1ec38:	cset	w11, cc  // cc = lo, ul, last
   1ec3c:	adds	x8, x9, x8, lsl #40
   1ec40:	sub	x9, x10, x11
   1ec44:	cinc	x9, x9, cs  // cs = hs, nlast
   1ec48:	subs	x8, x8, x9
   1ec4c:	lsr	x10, x9, #24
   1ec50:	cset	w11, cc  // cc = lo, ul, last
   1ec54:	adds	x8, x8, x9, lsl #40
   1ec58:	sub	x9, x10, x11
   1ec5c:	cinc	x9, x9, cs  // cs = hs, nlast
   1ec60:	subs	x8, x8, x9
   1ec64:	lsr	x10, x9, #24
   1ec68:	cset	w11, cc  // cc = lo, ul, last
   1ec6c:	adds	x8, x8, x9, lsl #40
   1ec70:	b	1ece0 <PyInit__decimal@@Base+0x1822c>
   1ec74:	subs	x9, x9, x8
   1ec78:	lsr	x10, x8, #32
   1ec7c:	cset	w11, cc  // cc = lo, ul, last
   1ec80:	adds	x8, x9, x8, lsl #32
   1ec84:	sub	x9, x10, x11
   1ec88:	cinc	x9, x9, cs  // cs = hs, nlast
   1ec8c:	subs	x8, x8, x9
   1ec90:	lsr	x10, x9, #32
   1ec94:	cset	w11, cc  // cc = lo, ul, last
   1ec98:	adds	x8, x8, x9, lsl #32
   1ec9c:	b	1ece0 <PyInit__decimal@@Base+0x1822c>
   1eca0:	subs	x9, x9, x8
   1eca4:	lsr	x10, x8, #30
   1eca8:	cset	w11, cc  // cc = lo, ul, last
   1ecac:	adds	x8, x9, x8, lsl #34
   1ecb0:	sub	x9, x10, x11
   1ecb4:	cinc	x9, x9, cs  // cs = hs, nlast
   1ecb8:	subs	x8, x8, x9
   1ecbc:	lsr	x10, x9, #30
   1ecc0:	cset	w11, cc  // cc = lo, ul, last
   1ecc4:	adds	x8, x8, x9, lsl #34
   1ecc8:	sub	x9, x10, x11
   1eccc:	cinc	x9, x9, cs  // cs = hs, nlast
   1ecd0:	subs	x8, x8, x9
   1ecd4:	lsr	x10, x9, #30
   1ecd8:	cset	w11, cc  // cc = lo, ul, last
   1ecdc:	adds	x8, x8, x9, lsl #34
   1ece0:	sub	x9, x10, x11
   1ece4:	cset	w10, cs  // cs = hs, nlast
   1ece8:	sbfx	x10, x10, #0, #1
   1ecec:	cmp	x9, x10
   1ecf0:	ccmp	x8, x2, #0x2, eq  // eq = none
   1ecf4:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1ecf8:	sub	x0, x8, x9
   1ecfc:	ret
   1ed00:	sub	sp, sp, #0x90
   1ed04:	stp	x29, x30, [sp, #48]
   1ed08:	stp	x28, x27, [sp, #64]
   1ed0c:	stp	x26, x25, [sp, #80]
   1ed10:	stp	x24, x23, [sp, #96]
   1ed14:	stp	x22, x21, [sp, #112]
   1ed18:	stp	x20, x19, [sp, #128]
   1ed1c:	add	x29, sp, #0x30
   1ed20:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1ed24:	movk	x8, #0xaaab
   1ed28:	add	x22, x0, x1, lsl #3
   1ed2c:	umulh	x8, x1, x8
   1ed30:	mov	w25, w2
   1ed34:	mov	x23, x1
   1ed38:	mov	x19, x0
   1ed3c:	cmp	x22, x0
   1ed40:	lsr	x21, x8, #1
   1ed44:	b.ls	1ed70 <PyInit__decimal@@Base+0x182bc>  // b.plast
   1ed48:	lsl	x24, x21, #3
   1ed4c:	mov	x20, x19
   1ed50:	mov	x0, x20
   1ed54:	mov	x1, x21
   1ed58:	mov	w2, w25
   1ed5c:	bl	3d718 <PyInit__decimal@@Base+0x36c64>
   1ed60:	cbz	w0, 1f02c <PyInit__decimal@@Base+0x18578>
   1ed64:	add	x20, x20, x24
   1ed68:	cmp	x20, x22
   1ed6c:	b.cc	1ed50 <PyInit__decimal@@Base+0x1829c>  // b.lo, b.ul, b.last
   1ed70:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1ed74:	add	x8, x8, #0xa50
   1ed78:	ldr	x20, [x8, w25, sxtw #3]
   1ed7c:	mov	w1, #0x1                   	// #1
   1ed80:	mov	x0, x23
   1ed84:	mov	w2, w25
   1ed88:	str	w25, [sp, #8]
   1ed8c:	bl	3d084 <PyInit__decimal@@Base+0x365d0>
   1ed90:	cmp	x23, #0x3
   1ed94:	str	x21, [sp, #16]
   1ed98:	b.cc	1eee8 <PyInit__decimal@@Base+0x18434>  // b.lo, b.ul, b.last
   1ed9c:	mov	x1, x0
   1eda0:	mov	w0, #0x1                   	// #1
   1eda4:	mov	x2, x20
   1eda8:	mov	w24, #0x1                   	// #1
   1edac:	str	x1, [sp]
   1edb0:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1edb4:	mov	x1, x0
   1edb8:	mov	x2, x20
   1edbc:	mov	x25, x0
   1edc0:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1edc4:	ldr	x8, [sp, #16]
   1edc8:	mov	x26, x0
   1edcc:	mov	x23, xzr
   1edd0:	add	x22, x19, x8, lsl #3
   1edd4:	add	x21, x22, x23, lsl #3
   1edd8:	ldp	x0, x27, [x21]
   1eddc:	mov	x1, x24
   1ede0:	mov	x2, x20
   1ede4:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ede8:	mov	x28, x0
   1edec:	mov	x0, x27
   1edf0:	mov	x1, x25
   1edf4:	mov	x2, x20
   1edf8:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1edfc:	mov	x27, x0
   1ee00:	mov	x0, x24
   1ee04:	mov	x1, x26
   1ee08:	mov	x2, x20
   1ee0c:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ee10:	mov	x24, x0
   1ee14:	mov	x0, x25
   1ee18:	mov	x1, x26
   1ee1c:	mov	x2, x20
   1ee20:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ee24:	ldr	x8, [sp, #16]
   1ee28:	add	x23, x23, #0x2
   1ee2c:	mov	x25, x0
   1ee30:	stp	x28, x27, [x21]
   1ee34:	cmp	x23, x8
   1ee38:	b.cc	1edd4 <PyInit__decimal@@Base+0x18320>  // b.lo, b.ul, b.last
   1ee3c:	ldr	x0, [sp]
   1ee40:	mov	x2, x20
   1ee44:	mov	x1, x0
   1ee48:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ee4c:	mov	x1, x0
   1ee50:	mov	w0, #0x1                   	// #1
   1ee54:	mov	x2, x20
   1ee58:	mov	w23, #0x1                   	// #1
   1ee5c:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ee60:	mov	x1, x0
   1ee64:	mov	x2, x20
   1ee68:	mov	x24, x0
   1ee6c:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ee70:	ldr	x8, [sp, #16]
   1ee74:	mov	x25, x0
   1ee78:	mov	x28, xzr
   1ee7c:	add	x22, x19, x8, lsl #4
   1ee80:	add	x21, x22, x28, lsl #3
   1ee84:	ldp	x0, x26, [x21]
   1ee88:	mov	x1, x23
   1ee8c:	mov	x2, x20
   1ee90:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ee94:	mov	x27, x0
   1ee98:	mov	x0, x26
   1ee9c:	mov	x1, x24
   1eea0:	mov	x2, x20
   1eea4:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eea8:	mov	x26, x0
   1eeac:	mov	x0, x23
   1eeb0:	mov	x1, x25
   1eeb4:	mov	x2, x20
   1eeb8:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eebc:	mov	x23, x0
   1eec0:	mov	x0, x24
   1eec4:	mov	x1, x25
   1eec8:	mov	x2, x20
   1eecc:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eed0:	ldr	x8, [sp, #16]
   1eed4:	add	x28, x28, #0x2
   1eed8:	mov	x24, x0
   1eedc:	stp	x27, x26, [x21]
   1eee0:	cmp	x28, x8
   1eee4:	b.cc	1ee80 <PyInit__decimal@@Base+0x183cc>  // b.lo, b.ul, b.last
   1eee8:	ldr	w2, [sp, #8]
   1eeec:	add	x0, sp, #0x18
   1eef0:	mov	w1, #0x1                   	// #1
   1eef4:	mov	w23, #0x1                   	// #1
   1eef8:	bl	3d2dc <PyInit__decimal@@Base+0x36828>
   1eefc:	ldr	x8, [sp, #16]
   1ef00:	add	x27, x19, x8, lsl #3
   1ef04:	cmp	x27, x19
   1ef08:	b.ls	1f030 <PyInit__decimal@@Base+0x1857c>  // b.plast
   1ef0c:	lsl	x9, x8, #4
   1ef10:	lsl	x8, x8, #3
   1ef14:	mov	x25, x9
   1ef18:	str	x9, [sp]
   1ef1c:	str	x8, [sp, #16]
   1ef20:	ldr	x8, [sp, #16]
   1ef24:	ldr	x28, [x19]
   1ef28:	ldr	x24, [x19, x25]
   1ef2c:	ldp	x22, x23, [sp, #32]
   1ef30:	ldr	x21, [x19, x8]
   1ef34:	mov	x2, x20
   1ef38:	mov	x1, x22
   1ef3c:	adds	x8, x21, x28
   1ef40:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1ef44:	sub	x8, x8, x9
   1ef48:	cmp	x8, x20
   1ef4c:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1ef50:	sub	x8, x8, x9
   1ef54:	adds	x8, x8, x24
   1ef58:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1ef5c:	sub	x8, x8, x9
   1ef60:	cmp	x8, x20
   1ef64:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1ef68:	sub	x8, x8, x9
   1ef6c:	mov	x0, x21
   1ef70:	str	x8, [sp, #8]
   1ef74:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1ef78:	adds	x8, x0, x28
   1ef7c:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1ef80:	sub	x8, x8, x9
   1ef84:	cmp	x8, x20
   1ef88:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1ef8c:	mov	x0, x24
   1ef90:	mov	x1, x23
   1ef94:	mov	x2, x20
   1ef98:	sub	x26, x8, x9
   1ef9c:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1efa0:	adds	x8, x26, x0
   1efa4:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1efa8:	sub	x8, x8, x9
   1efac:	cmp	x8, x20
   1efb0:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1efb4:	mov	x0, x21
   1efb8:	mov	x1, x23
   1efbc:	mov	x2, x20
   1efc0:	sub	x26, x8, x9
   1efc4:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1efc8:	adds	x8, x0, x28
   1efcc:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1efd0:	sub	x8, x8, x9
   1efd4:	cmp	x8, x20
   1efd8:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1efdc:	mov	x0, x24
   1efe0:	mov	x1, x22
   1efe4:	mov	x2, x20
   1efe8:	sub	x21, x8, x9
   1efec:	bl	1ec20 <PyInit__decimal@@Base+0x1816c>
   1eff0:	adds	x8, x21, x0
   1eff4:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1eff8:	sub	x8, x8, x9
   1effc:	cmp	x8, x20
   1f000:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1f004:	sub	x8, x8, x9
   1f008:	str	x8, [x19, x25]
   1f00c:	ldr	x8, [sp, #16]
   1f010:	str	x26, [x19, x8]
   1f014:	ldr	x8, [sp, #8]
   1f018:	str	x8, [x19], #8
   1f01c:	cmp	x19, x27
   1f020:	b.cc	1ef20 <PyInit__decimal@@Base+0x1846c>  // b.lo, b.ul, b.last
   1f024:	mov	w23, #0x1                   	// #1
   1f028:	b	1f030 <PyInit__decimal@@Base+0x1857c>
   1f02c:	mov	w23, wzr
   1f030:	mov	w0, w23
   1f034:	ldp	x20, x19, [sp, #128]
   1f038:	ldp	x22, x21, [sp, #112]
   1f03c:	ldp	x24, x23, [sp, #96]
   1f040:	ldp	x26, x25, [sp, #80]
   1f044:	ldp	x28, x27, [sp, #64]
   1f048:	ldp	x29, x30, [sp, #48]
   1f04c:	add	sp, sp, #0x90
   1f050:	ret
   1f054:	sub	sp, sp, #0x60
   1f058:	stp	x29, x30, [sp, #16]
   1f05c:	stp	x26, x25, [sp, #32]
   1f060:	stp	x24, x23, [sp, #48]
   1f064:	stp	x22, x21, [sp, #64]
   1f068:	stp	x20, x19, [sp, #80]
   1f06c:	add	x29, sp, #0x10
   1f070:	mov	x22, x1
   1f074:	mov	w1, wzr
   1f078:	mov	x19, x3
   1f07c:	mov	x21, x2
   1f080:	mov	x20, x0
   1f084:	bl	22ebc <PyInit__decimal@@Base+0x1c408>
   1f088:	str	xzr, [x20, #24]
   1f08c:	str	xzr, [x20, #8]
   1f090:	ldrb	w23, [x22]
   1f094:	mov	w1, wzr
   1f098:	cmp	w23, #0x2b
   1f09c:	b.eq	1f0b4 <PyInit__decimal@@Base+0x18600>  // b.none
   1f0a0:	cmp	w23, #0x2d
   1f0a4:	b.ne	1f0b8 <PyInit__decimal@@Base+0x18604>  // b.any
   1f0a8:	mov	x0, x20
   1f0ac:	bl	22e20 <PyInit__decimal@@Base+0x1c36c>
   1f0b0:	mov	w1, #0x1                   	// #1
   1f0b4:	ldrb	w23, [x22, #1]!
   1f0b8:	sub	w8, w23, #0x49
   1f0bc:	cmp	w8, #0x2a
   1f0c0:	b.hi	1f2d8 <PyInit__decimal@@Base+0x18824>  // b.pmore
   1f0c4:	mov	w9, #0x1                   	// #1
   1f0c8:	lsl	x9, x9, x8
   1f0cc:	tst	x9, #0x100000001
   1f0d0:	b.ne	1f234 <PyInit__decimal@@Base+0x18780>  // b.any
   1f0d4:	mov	w9, #0x1                   	// #1
   1f0d8:	lsl	x9, x9, x8
   1f0dc:	tst	x9, #0x2000000020
   1f0e0:	b.ne	1f174 <PyInit__decimal@@Base+0x186c0>  // b.any
   1f0e4:	mov	w9, #0x1                   	// #1
   1f0e8:	lsl	x8, x9, x8
   1f0ec:	tst	x8, #0x40000000400
   1f0f0:	b.eq	1f2d8 <PyInit__decimal@@Base+0x18824>  // b.none
   1f0f4:	ldrb	w8, [x22, #1]
   1f0f8:	orr	w8, w8, #0x20
   1f0fc:	cmp	w8, #0x6e
   1f100:	b.ne	1f20c <PyInit__decimal@@Base+0x18758>  // b.any
   1f104:	ldrb	w8, [x22, #2]
   1f108:	orr	w8, w8, #0x20
   1f10c:	cmp	w8, #0x61
   1f110:	b.ne	1f20c <PyInit__decimal@@Base+0x18758>  // b.any
   1f114:	ldrb	w8, [x22, #3]
   1f118:	orr	w8, w8, #0x20
   1f11c:	cmp	w8, #0x6e
   1f120:	b.ne	1f20c <PyInit__decimal@@Base+0x18758>  // b.any
   1f124:	mov	w2, #0x8                   	// #8
   1f128:	mov	x0, x20
   1f12c:	bl	232d4 <PyInit__decimal@@Base+0x1c820>
   1f130:	ldrb	w23, [x22, #4]!
   1f134:	cbnz	w23, 1f140 <PyInit__decimal@@Base+0x1868c>
   1f138:	b	1f424 <PyInit__decimal@@Base+0x18970>
   1f13c:	ldrb	w23, [x22, #1]!
   1f140:	cmp	w23, #0x30
   1f144:	b.eq	1f13c <PyInit__decimal@@Base+0x18688>  // b.none
   1f148:	bl	67c0 <__ctype_b_loc@plt>
   1f14c:	ldr	x9, [x0]
   1f150:	mov	w10, w23
   1f154:	mov	x8, x22
   1f158:	ldrh	w11, [x9, w23, uxtw #1]
   1f15c:	tbz	w11, #11, 1f1e4 <PyInit__decimal@@Base+0x18730>
   1f160:	mov	x8, x22
   1f164:	ldrb	w10, [x8, #1]!
   1f168:	ldrh	w11, [x9, x10, lsl #1]
   1f16c:	tbnz	w11, #11, 1f164 <PyInit__decimal@@Base+0x186b0>
   1f170:	b	1f1e4 <PyInit__decimal@@Base+0x18730>
   1f174:	ldrb	w8, [x22, #1]
   1f178:	orr	w8, w8, #0x20
   1f17c:	cmp	w8, #0x61
   1f180:	b.ne	1f21c <PyInit__decimal@@Base+0x18768>  // b.any
   1f184:	ldrb	w8, [x22, #2]
   1f188:	orr	w8, w8, #0x20
   1f18c:	cmp	w8, #0x6e
   1f190:	b.ne	1f21c <PyInit__decimal@@Base+0x18768>  // b.any
   1f194:	mov	w2, #0x4                   	// #4
   1f198:	mov	x0, x20
   1f19c:	bl	232d4 <PyInit__decimal@@Base+0x1c820>
   1f1a0:	ldrb	w23, [x22, #3]!
   1f1a4:	cbz	w23, 1f424 <PyInit__decimal@@Base+0x18970>
   1f1a8:	cmp	w23, #0x30
   1f1ac:	b.ne	1f1bc <PyInit__decimal@@Base+0x18708>  // b.any
   1f1b0:	ldrb	w23, [x22, #1]!
   1f1b4:	cmp	w23, #0x30
   1f1b8:	b.eq	1f1b0 <PyInit__decimal@@Base+0x186fc>  // b.none
   1f1bc:	bl	67c0 <__ctype_b_loc@plt>
   1f1c0:	ldr	x9, [x0]
   1f1c4:	mov	w10, w23
   1f1c8:	mov	x8, x22
   1f1cc:	ldrh	w11, [x9, w23, uxtw #1]
   1f1d0:	tbz	w11, #11, 1f1e4 <PyInit__decimal@@Base+0x18730>
   1f1d4:	mov	x8, x22
   1f1d8:	ldrb	w10, [x8, #1]!
   1f1dc:	ldrh	w11, [x9, x10, lsl #1]
   1f1e0:	tbnz	w11, #11, 1f1d8 <PyInit__decimal@@Base+0x18724>
   1f1e4:	cbnz	w10, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f1e8:	cbz	w23, 1f424 <PyInit__decimal@@Base+0x18970>
   1f1ec:	ldr	x9, [x21]
   1f1f0:	ldrsw	x10, [x21, #40]
   1f1f4:	sub	x8, x8, x22
   1f1f8:	sub	x9, x9, x10
   1f1fc:	cmp	x8, x9
   1f200:	b.hi	1f86c <PyInit__decimal@@Base+0x18db8>  // b.pmore
   1f204:	mov	x24, xzr
   1f208:	b	1f4f8 <PyInit__decimal@@Base+0x18a44>
   1f20c:	orr	w8, w23, #0x20
   1f210:	cmp	w8, #0x69
   1f214:	b.eq	1f234 <PyInit__decimal@@Base+0x18780>  // b.none
   1f218:	b	1f2d8 <PyInit__decimal@@Base+0x18824>
   1f21c:	cmp	w23, #0x49
   1f220:	b.eq	1f234 <PyInit__decimal@@Base+0x18780>  // b.none
   1f224:	cmp	w23, #0x53
   1f228:	b.eq	1f0f4 <PyInit__decimal@@Base+0x18640>  // b.none
   1f22c:	cmp	w23, #0x69
   1f230:	b.ne	1f2d8 <PyInit__decimal@@Base+0x18824>  // b.any
   1f234:	ldrb	w8, [x22, #1]
   1f238:	orr	w8, w8, #0x20
   1f23c:	cmp	w8, #0x6e
   1f240:	b.ne	1f2d8 <PyInit__decimal@@Base+0x18824>  // b.any
   1f244:	ldrb	w8, [x22, #2]
   1f248:	orr	w8, w8, #0x20
   1f24c:	cmp	w8, #0x66
   1f250:	b.ne	1f2d8 <PyInit__decimal@@Base+0x18824>  // b.any
   1f254:	ldrb	w8, [x22, #3]
   1f258:	cbz	w8, 1f2b4 <PyInit__decimal@@Base+0x18800>
   1f25c:	cmp	w8, #0x49
   1f260:	b.eq	1f26c <PyInit__decimal@@Base+0x187b8>  // b.none
   1f264:	cmp	w8, #0x69
   1f268:	b.ne	1f86c <PyInit__decimal@@Base+0x18db8>  // b.any
   1f26c:	ldrb	w8, [x22, #4]
   1f270:	orr	w8, w8, #0x20
   1f274:	cmp	w8, #0x6e
   1f278:	b.ne	1f86c <PyInit__decimal@@Base+0x18db8>  // b.any
   1f27c:	ldrb	w8, [x22, #5]
   1f280:	orr	w8, w8, #0x20
   1f284:	cmp	w8, #0x69
   1f288:	b.ne	1f86c <PyInit__decimal@@Base+0x18db8>  // b.any
   1f28c:	ldrb	w8, [x22, #6]
   1f290:	orr	w8, w8, #0x20
   1f294:	cmp	w8, #0x74
   1f298:	b.ne	1f86c <PyInit__decimal@@Base+0x18db8>  // b.any
   1f29c:	ldrb	w8, [x22, #7]
   1f2a0:	orr	w8, w8, #0x20
   1f2a4:	cmp	w8, #0x79
   1f2a8:	b.ne	1f86c <PyInit__decimal@@Base+0x18db8>  // b.any
   1f2ac:	ldrb	w8, [x22, #8]
   1f2b0:	cbnz	w8, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f2b4:	mov	x0, x20
   1f2b8:	ldp	x20, x19, [sp, #80]
   1f2bc:	ldp	x22, x21, [sp, #64]
   1f2c0:	ldp	x24, x23, [sp, #48]
   1f2c4:	ldp	x26, x25, [sp, #32]
   1f2c8:	ldp	x29, x30, [sp, #16]
   1f2cc:	mov	w2, #0x2                   	// #2
   1f2d0:	add	sp, sp, #0x60
   1f2d4:	b	232d4 <PyInit__decimal@@Base+0x1c820>
   1f2d8:	mov	x24, xzr
   1f2dc:	mov	x26, xzr
   1f2e0:	mov	x25, xzr
   1f2e4:	b	1f2f4 <PyInit__decimal@@Base+0x18840>
   1f2e8:	mov	x26, x22
   1f2ec:	mov	x22, x8
   1f2f0:	ldrb	w23, [x22, #1]!
   1f2f4:	and	w8, w23, #0xff
   1f2f8:	cmp	w8, #0x44
   1f2fc:	b.le	1f338 <PyInit__decimal@@Base+0x18884>
   1f300:	cmp	w8, #0x45
   1f304:	b.eq	1f310 <PyInit__decimal@@Base+0x1885c>  // b.none
   1f308:	cmp	w8, #0x65
   1f30c:	b.ne	1f35c <PyInit__decimal@@Base+0x188a8>  // b.any
   1f310:	cbnz	x26, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f314:	mov	x8, x22
   1f318:	ldrb	w9, [x8, #1]!
   1f31c:	cmp	w9, #0x2d
   1f320:	b.eq	1f2e8 <PyInit__decimal@@Base+0x18834>  // b.none
   1f324:	cmp	w9, #0x2b
   1f328:	b.eq	1f2e8 <PyInit__decimal@@Base+0x18834>  // b.none
   1f32c:	mov	x26, x22
   1f330:	ldrb	w23, [x22, #1]!
   1f334:	b	1f2f4 <PyInit__decimal@@Base+0x18840>
   1f338:	cmp	w8, #0x2e
   1f33c:	b.ne	1f358 <PyInit__decimal@@Base+0x188a4>  // b.any
   1f340:	orr	x8, x24, x26
   1f344:	cbnz	x8, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f348:	mov	x24, x22
   1f34c:	ldrb	w23, [x22, #1]!
   1f350:	mov	x26, xzr
   1f354:	b	1f2f4 <PyInit__decimal@@Base+0x18840>
   1f358:	cbz	w8, 1f3d4 <PyInit__decimal@@Base+0x18920>
   1f35c:	bl	67c0 <__ctype_b_loc@plt>
   1f360:	ldr	x8, [x0]
   1f364:	and	x9, x23, #0xff
   1f368:	ldrh	w9, [x8, x9, lsl #1]
   1f36c:	tbz	w9, #11, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f370:	cbz	x25, 1f37c <PyInit__decimal@@Base+0x188c8>
   1f374:	ldrb	w23, [x22, #1]!
   1f378:	b	1f2f4 <PyInit__decimal@@Base+0x18840>
   1f37c:	cbz	x26, 1f38c <PyInit__decimal@@Base+0x188d8>
   1f380:	ldrb	w23, [x22, #1]!
   1f384:	mov	x25, xzr
   1f388:	b	1f2f4 <PyInit__decimal@@Base+0x18840>
   1f38c:	and	w9, w23, #0xff
   1f390:	cmp	w9, #0x30
   1f394:	b.ne	1f3b8 <PyInit__decimal@@Base+0x18904>  // b.any
   1f398:	ldrb	w9, [x22, #1]
   1f39c:	ldrh	w10, [x8, x9, lsl #1]
   1f3a0:	tbnz	w10, #11, 1f3c4 <PyInit__decimal@@Base+0x18910>
   1f3a4:	cmp	w9, #0x2e
   1f3a8:	b.ne	1f3b8 <PyInit__decimal@@Base+0x18904>  // b.any
   1f3ac:	ldrb	w9, [x22, #2]
   1f3b0:	ldrh	w8, [x8, x9, lsl #1]
   1f3b4:	tbnz	w8, #11, 1f3c4 <PyInit__decimal@@Base+0x18910>
   1f3b8:	mov	x26, xzr
   1f3bc:	mov	x25, x22
   1f3c0:	b	1f374 <PyInit__decimal@@Base+0x188c0>
   1f3c4:	ldrb	w23, [x22, #1]!
   1f3c8:	mov	x26, xzr
   1f3cc:	mov	x25, xzr
   1f3d0:	b	1f2f4 <PyInit__decimal@@Base+0x18840>
   1f3d4:	cbz	x25, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f3d8:	cbz	x26, 1f440 <PyInit__decimal@@Base+0x1898c>
   1f3dc:	add	x23, x26, #0x1
   1f3e0:	bl	6960 <__errno_location@plt>
   1f3e4:	mov	x22, x0
   1f3e8:	str	wzr, [x0]
   1f3ec:	add	x1, sp, #0x8
   1f3f0:	mov	w2, #0xa                   	// #10
   1f3f4:	mov	x0, x23
   1f3f8:	bl	6480 <strtoll@plt>
   1f3fc:	ldr	w8, [x22]
   1f400:	cbz	w8, 1f4bc <PyInit__decimal@@Base+0x18a08>
   1f404:	cmp	w8, #0x22
   1f408:	str	x0, [x20, #8]
   1f40c:	b.ne	1f86c <PyInit__decimal@@Base+0x18db8>  // b.any
   1f410:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1f414:	add	x8, x0, x8
   1f418:	cmp	x8, #0x1
   1f41c:	b.ls	1f444 <PyInit__decimal@@Base+0x18990>  // b.plast
   1f420:	b	1f86c <PyInit__decimal@@Base+0x18db8>
   1f424:	ldp	x20, x19, [sp, #80]
   1f428:	ldp	x22, x21, [sp, #64]
   1f42c:	ldp	x24, x23, [sp, #48]
   1f430:	ldp	x26, x25, [sp, #32]
   1f434:	ldp	x29, x30, [sp, #16]
   1f438:	add	sp, sp, #0x60
   1f43c:	ret
   1f440:	mov	x26, x22
   1f444:	mov	x9, #0xffffffffa763ffff    	// #-1486618625
   1f448:	movk	x9, #0xb6b3, lsl #32
   1f44c:	movk	x9, #0xde0, lsl #48
   1f450:	sub	x8, x26, x25
   1f454:	cbz	x24, 1f490 <PyInit__decimal@@Base+0x189dc>
   1f458:	mvn	x10, x24
   1f45c:	add	x10, x26, x10
   1f460:	cmp	x10, x9
   1f464:	b.hi	1f86c <PyInit__decimal@@Base+0x18db8>  // b.pmore
   1f468:	ldr	x11, [x20, #8]
   1f46c:	cmp	x24, x25
   1f470:	eor	x12, x10, #0x8000000000000000
   1f474:	cset	w13, hi  // hi = pmore
   1f478:	sub	x10, x11, x10
   1f47c:	cmp	x11, x12
   1f480:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   1f484:	sub	x8, x8, x13
   1f488:	csel	x10, x11, x10, lt  // lt = tstop
   1f48c:	str	x10, [x20, #8]
   1f490:	cmp	x8, x9
   1f494:	b.hi	1f86c <PyInit__decimal@@Base+0x18db8>  // b.pmore
   1f498:	ldr	x9, [x20, #8]
   1f49c:	mov	x10, #0x1                   	// #1
   1f4a0:	movk	x10, #0x4ec8, lsl #16
   1f4a4:	movk	x10, #0x6d67, lsl #32
   1f4a8:	movk	x10, #0x1bc1, lsl #48
   1f4ac:	cmp	x9, x10
   1f4b0:	b.le	1f4e0 <PyInit__decimal@@Base+0x18a2c>
   1f4b4:	str	x10, [x20, #8]
   1f4b8:	b	1f4f4 <PyInit__decimal@@Base+0x18a40>
   1f4bc:	ldrb	w8, [x23]
   1f4c0:	cbz	w8, 1f4d0 <PyInit__decimal@@Base+0x18a1c>
   1f4c4:	ldr	x8, [sp, #8]
   1f4c8:	ldrb	w8, [x8]
   1f4cc:	cbz	w8, 1f89c <PyInit__decimal@@Base+0x18de8>
   1f4d0:	mov	w8, #0x16                  	// #22
   1f4d4:	str	w8, [x22]
   1f4d8:	str	x0, [x20, #8]
   1f4dc:	b	1f86c <PyInit__decimal@@Base+0x18db8>
   1f4e0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   1f4e4:	cmp	x9, x10
   1f4e8:	b.ne	1f4f4 <PyInit__decimal@@Base+0x18a40>  // b.any
   1f4ec:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1f4f0:	str	x9, [x20, #8]
   1f4f4:	mov	x22, x25
   1f4f8:	mov	x9, #0x9436                	// #37942
   1f4fc:	movk	x9, #0x50d7, lsl #16
   1f500:	movk	x9, #0x435e, lsl #32
   1f504:	movk	x9, #0xd79, lsl #48
   1f508:	smulh	x9, x8, x9
   1f50c:	add	x9, x9, x9, lsr #63
   1f510:	mov	x10, #0xffffffffffffffed    	// #-19
   1f514:	madd	x25, x9, x10, x8
   1f518:	cmp	x25, #0x0
   1f51c:	cinc	x23, x9, ne  // ne = any
   1f520:	cbz	x23, 1f86c <PyInit__decimal@@Base+0x18db8>
   1f524:	mov	x0, x20
   1f528:	mov	x1, x23
   1f52c:	mov	x2, x19
   1f530:	bl	229f0 <PyInit__decimal@@Base+0x1bf3c>
   1f534:	cbz	w0, 1f894 <PyInit__decimal@@Base+0x18de0>
   1f538:	ldr	x8, [x20, #40]
   1f53c:	cmp	w25, #0x1
   1f540:	str	x23, [x20, #24]
   1f544:	b.lt	1f578 <PyInit__decimal@@Base+0x18ac4>  // b.tstop
   1f548:	mov	x9, xzr
   1f54c:	sub	x23, x23, #0x1
   1f550:	mov	w10, #0xa                   	// #10
   1f554:	str	xzr, [x8, x23, lsl #3]
   1f558:	cmp	x22, x24
   1f55c:	cinc	x22, x22, eq  // eq = none
   1f560:	ldrb	w11, [x22], #1
   1f564:	subs	w25, w25, #0x1
   1f568:	madd	x9, x9, x10, x11
   1f56c:	sub	x9, x9, #0x30
   1f570:	str	x9, [x8, x23, lsl #3]
   1f574:	b.ne	1f558 <PyInit__decimal@@Base+0x18aa4>  // b.any
   1f578:	cbz	x23, 1f83c <PyInit__decimal@@Base+0x18d88>
   1f57c:	sub	x8, x8, #0x8
   1f580:	mov	w9, #0x1                   	// #1
   1f584:	mov	w10, #0xa                   	// #10
   1f588:	lsl	x11, x23, #3
   1f58c:	cmp	x22, x24
   1f590:	str	xzr, [x8, x11]
   1f594:	cinc	x12, x22, eq  // eq = none
   1f598:	ldrb	w13, [x12]
   1f59c:	add	x14, x12, #0x1
   1f5a0:	cmp	x14, x24
   1f5a4:	add	x15, x12, #0x2
   1f5a8:	sub	x13, x13, #0x30
   1f5ac:	cinc	x14, x9, eq  // eq = none
   1f5b0:	str	x13, [x8, x11]
   1f5b4:	csinc	x15, x15, x12, eq  // eq = none
   1f5b8:	ldrb	w12, [x12, x14]
   1f5bc:	add	x14, x15, #0x1
   1f5c0:	cmp	x14, x24
   1f5c4:	add	x14, x15, #0x2
   1f5c8:	madd	x12, x13, x10, x12
   1f5cc:	sub	x12, x12, #0x30
   1f5d0:	cinc	x13, x9, eq  // eq = none
   1f5d4:	str	x12, [x8, x11]
   1f5d8:	ldrb	w13, [x15, x13]
   1f5dc:	csinc	x14, x14, x15, eq  // eq = none
   1f5e0:	add	x15, x14, #0x1
   1f5e4:	cmp	x15, x24
   1f5e8:	madd	x12, x12, x10, x13
   1f5ec:	sub	x12, x12, #0x30
   1f5f0:	cinc	x13, x9, eq  // eq = none
   1f5f4:	str	x12, [x8, x11]
   1f5f8:	ldrb	w13, [x14, x13]
   1f5fc:	add	x15, x14, #0x2
   1f600:	csinc	x15, x15, x14, eq  // eq = none
   1f604:	add	x14, x15, #0x1
   1f608:	madd	x12, x12, x10, x13
   1f60c:	cmp	x14, x24
   1f610:	sub	x12, x12, #0x30
   1f614:	cinc	x13, x9, eq  // eq = none
   1f618:	str	x12, [x8, x11]
   1f61c:	ldrb	w13, [x15, x13]
   1f620:	add	x14, x15, #0x2
   1f624:	csinc	x14, x14, x15, eq  // eq = none
   1f628:	add	x15, x14, #0x1
   1f62c:	madd	x12, x12, x10, x13
   1f630:	cmp	x15, x24
   1f634:	sub	x12, x12, #0x30
   1f638:	cinc	x13, x9, eq  // eq = none
   1f63c:	str	x12, [x8, x11]
   1f640:	ldrb	w13, [x14, x13]
   1f644:	add	x15, x14, #0x2
   1f648:	csinc	x15, x15, x14, eq  // eq = none
   1f64c:	add	x14, x15, #0x1
   1f650:	madd	x12, x12, x10, x13
   1f654:	cmp	x14, x24
   1f658:	sub	x12, x12, #0x30
   1f65c:	cinc	x13, x9, eq  // eq = none
   1f660:	str	x12, [x8, x11]
   1f664:	ldrb	w13, [x15, x13]
   1f668:	add	x14, x15, #0x2
   1f66c:	csinc	x14, x14, x15, eq  // eq = none
   1f670:	add	x15, x14, #0x1
   1f674:	madd	x12, x12, x10, x13
   1f678:	cmp	x15, x24
   1f67c:	sub	x12, x12, #0x30
   1f680:	cinc	x13, x9, eq  // eq = none
   1f684:	str	x12, [x8, x11]
   1f688:	ldrb	w13, [x14, x13]
   1f68c:	add	x15, x14, #0x2
   1f690:	csinc	x15, x15, x14, eq  // eq = none
   1f694:	add	x14, x15, #0x1
   1f698:	madd	x12, x12, x10, x13
   1f69c:	cmp	x14, x24
   1f6a0:	sub	x12, x12, #0x30
   1f6a4:	cinc	x13, x9, eq  // eq = none
   1f6a8:	str	x12, [x8, x11]
   1f6ac:	ldrb	w13, [x15, x13]
   1f6b0:	add	x14, x15, #0x2
   1f6b4:	csinc	x14, x14, x15, eq  // eq = none
   1f6b8:	add	x15, x14, #0x1
   1f6bc:	madd	x12, x12, x10, x13
   1f6c0:	cmp	x15, x24
   1f6c4:	sub	x12, x12, #0x30
   1f6c8:	cinc	x13, x9, eq  // eq = none
   1f6cc:	str	x12, [x8, x11]
   1f6d0:	ldrb	w13, [x14, x13]
   1f6d4:	add	x15, x14, #0x2
   1f6d8:	csinc	x15, x15, x14, eq  // eq = none
   1f6dc:	add	x14, x15, #0x1
   1f6e0:	madd	x12, x12, x10, x13
   1f6e4:	cmp	x14, x24
   1f6e8:	sub	x12, x12, #0x30
   1f6ec:	cinc	x13, x9, eq  // eq = none
   1f6f0:	str	x12, [x8, x11]
   1f6f4:	ldrb	w13, [x15, x13]
   1f6f8:	add	x14, x15, #0x2
   1f6fc:	csinc	x14, x14, x15, eq  // eq = none
   1f700:	add	x15, x14, #0x1
   1f704:	madd	x12, x12, x10, x13
   1f708:	cmp	x15, x24
   1f70c:	sub	x12, x12, #0x30
   1f710:	cinc	x13, x9, eq  // eq = none
   1f714:	str	x12, [x8, x11]
   1f718:	ldrb	w13, [x14, x13]
   1f71c:	add	x15, x14, #0x2
   1f720:	csinc	x15, x15, x14, eq  // eq = none
   1f724:	add	x14, x15, #0x1
   1f728:	madd	x12, x12, x10, x13
   1f72c:	cmp	x14, x24
   1f730:	sub	x12, x12, #0x30
   1f734:	cinc	x13, x9, eq  // eq = none
   1f738:	str	x12, [x8, x11]
   1f73c:	ldrb	w13, [x15, x13]
   1f740:	add	x14, x15, #0x2
   1f744:	csinc	x14, x14, x15, eq  // eq = none
   1f748:	add	x15, x14, #0x1
   1f74c:	madd	x12, x12, x10, x13
   1f750:	cmp	x15, x24
   1f754:	sub	x12, x12, #0x30
   1f758:	cinc	x13, x9, eq  // eq = none
   1f75c:	str	x12, [x8, x11]
   1f760:	ldrb	w13, [x14, x13]
   1f764:	add	x15, x14, #0x2
   1f768:	csinc	x15, x15, x14, eq  // eq = none
   1f76c:	add	x14, x15, #0x1
   1f770:	madd	x12, x12, x10, x13
   1f774:	cmp	x14, x24
   1f778:	sub	x12, x12, #0x30
   1f77c:	cinc	x13, x9, eq  // eq = none
   1f780:	str	x12, [x8, x11]
   1f784:	ldrb	w13, [x15, x13]
   1f788:	add	x14, x15, #0x2
   1f78c:	csinc	x14, x14, x15, eq  // eq = none
   1f790:	add	x15, x14, #0x1
   1f794:	madd	x12, x12, x10, x13
   1f798:	cmp	x15, x24
   1f79c:	sub	x12, x12, #0x30
   1f7a0:	cinc	x13, x9, eq  // eq = none
   1f7a4:	str	x12, [x8, x11]
   1f7a8:	ldrb	w13, [x14, x13]
   1f7ac:	add	x15, x14, #0x2
   1f7b0:	csinc	x15, x15, x14, eq  // eq = none
   1f7b4:	add	x14, x15, #0x1
   1f7b8:	madd	x12, x12, x10, x13
   1f7bc:	cmp	x14, x24
   1f7c0:	sub	x12, x12, #0x30
   1f7c4:	cinc	x13, x9, eq  // eq = none
   1f7c8:	str	x12, [x8, x11]
   1f7cc:	ldrb	w13, [x15, x13]
   1f7d0:	add	x14, x15, #0x2
   1f7d4:	csinc	x14, x14, x15, eq  // eq = none
   1f7d8:	add	x15, x14, #0x1
   1f7dc:	madd	x12, x12, x10, x13
   1f7e0:	cmp	x15, x24
   1f7e4:	sub	x12, x12, #0x30
   1f7e8:	cinc	x13, x9, eq  // eq = none
   1f7ec:	str	x12, [x8, x11]
   1f7f0:	ldrb	w13, [x14, x13]
   1f7f4:	add	x15, x14, #0x2
   1f7f8:	csinc	x15, x15, x14, eq  // eq = none
   1f7fc:	add	x14, x15, #0x1
   1f800:	madd	x12, x12, x10, x13
   1f804:	cmp	x14, x24
   1f808:	sub	x12, x12, #0x30
   1f80c:	cinc	x14, x9, eq  // eq = none
   1f810:	str	x12, [x8, x11]
   1f814:	ldrb	w13, [x15, x14]
   1f818:	add	x16, x15, #0x2
   1f81c:	sub	x14, x23, #0x1
   1f820:	csinc	x15, x16, x15, eq  // eq = none
   1f824:	madd	x12, x12, x10, x13
   1f828:	sub	x12, x12, #0x30
   1f82c:	add	x22, x15, #0x1
   1f830:	mov	x23, x14
   1f834:	str	x12, [x8, x11]
   1f838:	cbnz	x14, 1f588 <PyInit__decimal@@Base+0x18ad4>
   1f83c:	mov	x0, x20
   1f840:	bl	22c78 <PyInit__decimal@@Base+0x1c1c4>
   1f844:	mov	x0, x20
   1f848:	mov	x1, x21
   1f84c:	mov	x2, x19
   1f850:	ldp	x20, x19, [sp, #80]
   1f854:	ldp	x22, x21, [sp, #64]
   1f858:	ldp	x24, x23, [sp, #48]
   1f85c:	ldp	x26, x25, [sp, #32]
   1f860:	ldp	x29, x30, [sp, #16]
   1f864:	add	sp, sp, #0x60
   1f868:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   1f86c:	mov	w1, #0x2                   	// #2
   1f870:	mov	x0, x20
   1f874:	mov	x2, x19
   1f878:	ldp	x20, x19, [sp, #80]
   1f87c:	ldp	x22, x21, [sp, #64]
   1f880:	ldp	x24, x23, [sp, #48]
   1f884:	ldp	x26, x25, [sp, #32]
   1f888:	ldp	x29, x30, [sp, #16]
   1f88c:	add	sp, sp, #0x60
   1f890:	b	23368 <PyInit__decimal@@Base+0x1c8b4>
   1f894:	mov	w1, #0x200                 	// #512
   1f898:	b	1f870 <PyInit__decimal@@Base+0x18dbc>
   1f89c:	str	x0, [x20, #8]
   1f8a0:	b	1f444 <PyInit__decimal@@Base+0x18990>
   1f8a4:	sub	sp, sp, #0x20
   1f8a8:	stp	x29, x30, [sp, #16]
   1f8ac:	add	x29, sp, #0x10
   1f8b0:	cmp	w1, #0x0
   1f8b4:	mov	x8, x0
   1f8b8:	cset	w9, ne  // ne = any
   1f8bc:	orr	w2, w9, #0x2
   1f8c0:	add	x0, sp, #0x8
   1f8c4:	mov	w3, #0x1                   	// #1
   1f8c8:	mov	x1, x8
   1f8cc:	bl	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   1f8d0:	ldr	x0, [sp, #8]
   1f8d4:	ldp	x29, x30, [sp, #16]
   1f8d8:	add	sp, sp, #0x20
   1f8dc:	ret
   1f8e0:	stp	x29, x30, [sp, #-96]!
   1f8e4:	str	x27, [sp, #16]
   1f8e8:	stp	x26, x25, [sp, #32]
   1f8ec:	stp	x24, x23, [sp, #48]
   1f8f0:	stp	x22, x21, [sp, #64]
   1f8f4:	stp	x20, x19, [sp, #80]
   1f8f8:	mov	x29, sp
   1f8fc:	mov	x19, x0
   1f900:	mov	x0, x1
   1f904:	mov	x22, x3
   1f908:	mov	w20, w2
   1f90c:	mov	x21, x1
   1f910:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   1f914:	cbz	w0, 1f970 <PyInit__decimal@@Base+0x18ebc>
   1f918:	mov	x0, x21
   1f91c:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
   1f920:	cbz	w0, 1f948 <PyInit__decimal@@Base+0x18e94>
   1f924:	ldr	x8, [x21, #24]
   1f928:	cmp	x8, #0x1
   1f92c:	b.lt	1f948 <PyInit__decimal@@Base+0x18e94>  // b.tstop
   1f930:	ldr	x8, [x21, #16]
   1f934:	add	x0, x8, #0xb
   1f938:	mov	w1, #0x1                   	// #1
   1f93c:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   1f940:	cbnz	x0, 1f958 <PyInit__decimal@@Base+0x18ea4>
   1f944:	b	1fa38 <PyInit__decimal@@Base+0x18f84>
   1f948:	mov	w0, #0xb                   	// #11
   1f94c:	mov	w1, #0x1                   	// #1
   1f950:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   1f954:	cbz	x0, 1fa38 <PyInit__decimal@@Base+0x18f84>
   1f958:	mov	x22, x0
   1f95c:	mov	x0, x21
   1f960:	bl	227cc <PyInit__decimal@@Base+0x1bd18>
   1f964:	cbz	w0, 1f9e0 <PyInit__decimal@@Base+0x18f2c>
   1f968:	mov	w8, #0x2d                  	// #45
   1f96c:	b	1fa5c <PyInit__decimal@@Base+0x18fa8>
   1f970:	ldp	x8, x9, [x21, #8]
   1f974:	add	x26, x8, x9
   1f978:	tbz	w20, #3, 1f984 <PyInit__decimal@@Base+0x18ed0>
   1f97c:	mov	x27, x22
   1f980:	b	1f9f8 <PyInit__decimal@@Base+0x18f44>
   1f984:	tbnz	w20, #4, 1f9f4 <PyInit__decimal@@Base+0x18f40>
   1f988:	cmp	x8, #0x0
   1f98c:	b.gt	1f99c <PyInit__decimal@@Base+0x18ee8>
   1f990:	cmn	x26, #0x6
   1f994:	mov	x27, x26
   1f998:	b.gt	1f9f8 <PyInit__decimal@@Base+0x18f44>
   1f99c:	tbz	w20, #2, 1f97c <PyInit__decimal@@Base+0x18ec8>
   1f9a0:	mov	x0, x21
   1f9a4:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   1f9a8:	cbz	w0, 1fdb0 <PyInit__decimal@@Base+0x192fc>
   1f9ac:	ldr	x8, [x21, #8]
   1f9b0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1f9b4:	movk	x9, #0x5556
   1f9b8:	add	x8, x8, #0x2
   1f9bc:	smulh	x9, x8, x9
   1f9c0:	add	x9, x9, x9, lsr #63
   1f9c4:	add	x9, x9, x9, lsl #1
   1f9c8:	sub	x8, x8, x9
   1f9cc:	add	x9, x8, #0x3
   1f9d0:	cmp	x8, #0x0
   1f9d4:	csel	x8, x9, x8, lt  // lt = tstop
   1f9d8:	sub	x27, x8, #0x1
   1f9dc:	b	1f9f8 <PyInit__decimal@@Base+0x18f44>
   1f9e0:	tbnz	w20, #6, 1fa58 <PyInit__decimal@@Base+0x18fa4>
   1f9e4:	mov	x23, x22
   1f9e8:	tbz	w20, #7, 1fa64 <PyInit__decimal@@Base+0x18fb0>
   1f9ec:	mov	w8, #0x2b                  	// #43
   1f9f0:	b	1fa5c <PyInit__decimal@@Base+0x18fa8>
   1f9f4:	mov	x27, x26
   1f9f8:	ldr	x8, [x21, #16]
   1f9fc:	mov	w1, #0x1                   	// #1
   1fa00:	subs	x9, x8, x27
   1fa04:	add	x9, x9, #0x2
   1fa08:	csel	x8, x8, x27, gt
   1fa0c:	cmp	x27, #0x1
   1fa10:	csel	x8, x9, x8, lt  // lt = tstop
   1fa14:	add	x0, x8, #0x1a
   1fa18:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   1fa1c:	cbz	x0, 1fa38 <PyInit__decimal@@Base+0x18f84>
   1fa20:	mov	x22, x0
   1fa24:	mov	x0, x21
   1fa28:	bl	227cc <PyInit__decimal@@Base+0x1bd18>
   1fa2c:	cbz	w0, 1fa44 <PyInit__decimal@@Base+0x18f90>
   1fa30:	mov	w8, #0x2d                  	// #45
   1fa34:	b	1fb4c <PyInit__decimal@@Base+0x19098>
   1fa38:	str	xzr, [x19]
   1fa3c:	mov	x0, #0xffffffffffffffff    	// #-1
   1fa40:	b	1fd94 <PyInit__decimal@@Base+0x192e0>
   1fa44:	tbnz	w20, #6, 1fb48 <PyInit__decimal@@Base+0x19094>
   1fa48:	mov	x23, x22
   1fa4c:	tbz	w20, #7, 1fb54 <PyInit__decimal@@Base+0x190a0>
   1fa50:	mov	w8, #0x2b                  	// #43
   1fa54:	b	1fb4c <PyInit__decimal@@Base+0x19098>
   1fa58:	mov	w8, #0x20                  	// #32
   1fa5c:	mov	x23, x22
   1fa60:	strb	w8, [x23], #1
   1fa64:	mov	x0, x21
   1fa68:	bl	227c0 <PyInit__decimal@@Base+0x1bd0c>
   1fa6c:	cbz	w0, 1faa0 <PyInit__decimal@@Base+0x18fec>
   1fa70:	mov	x0, x21
   1fa74:	bl	227e8 <PyInit__decimal@@Base+0x1bd34>
   1fa78:	cbz	w0, 1fac4 <PyInit__decimal@@Base+0x19010>
   1fa7c:	mov	w8, #0x614e                	// #24910
   1fa80:	movk	w8, #0x4e, lsl #16
   1fa84:	str	w8, [x23]
   1fa88:	mov	w8, #0x3                   	// #3
   1fa8c:	ldr	x9, [x21, #24]
   1fa90:	add	x23, x23, x8
   1fa94:	cmp	x9, #0x1
   1fa98:	b.ge	1fae8 <PyInit__decimal@@Base+0x19034>  // b.tcont
   1fa9c:	b	1fd7c <PyInit__decimal@@Base+0x192c8>
   1faa0:	mov	x0, x21
   1faa4:	bl	227b4 <PyInit__decimal@@Base+0x1bd00>
   1faa8:	cbz	w0, 1fde0 <PyInit__decimal@@Base+0x1932c>
   1faac:	adrp	x8, 45000 <PyInit__decimal@@Base+0x3e54c>
   1fab0:	add	x8, x8, #0xa0f
   1fab4:	ldr	x8, [x8]
   1fab8:	str	x8, [x23]
   1fabc:	strb	wzr, [x23, #8]!
   1fac0:	b	1fd7c <PyInit__decimal@@Base+0x192c8>
   1fac4:	mov	w8, #0x4e73                	// #20083
   1fac8:	movk	w8, #0x4e61, lsl #16
   1facc:	str	w8, [x23]
   1fad0:	mov	w8, #0x4                   	// #4
   1fad4:	strb	wzr, [x23, #4]
   1fad8:	ldr	x9, [x21, #24]
   1fadc:	add	x23, x23, x8
   1fae0:	cmp	x9, #0x1
   1fae4:	b.lt	1fd7c <PyInit__decimal@@Base+0x192c8>  // b.tstop
   1fae8:	mov	x0, x21
   1faec:	bl	224ac <PyInit__decimal@@Base+0x1b9f8>
   1faf0:	mov	x24, x0
   1faf4:	bl	22334 <PyInit__decimal@@Base+0x1b880>
   1faf8:	mov	w2, w0
   1fafc:	mov	x0, x23
   1fb00:	mov	x1, x24
   1fb04:	mov	x3, xzr
   1fb08:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fb0c:	ldr	x8, [x21, #24]
   1fb10:	mov	x23, x0
   1fb14:	subs	x24, x8, #0x2
   1fb18:	b.mi	1fd7c <PyInit__decimal@@Base+0x192c8>  // b.first
   1fb1c:	ldr	x8, [x21, #40]
   1fb20:	mov	w2, #0x13                  	// #19
   1fb24:	mov	x0, x23
   1fb28:	mov	x3, xzr
   1fb2c:	ldr	x1, [x8, x24, lsl #3]
   1fb30:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fb34:	mov	x23, x0
   1fb38:	cmp	x24, #0x0
   1fb3c:	sub	x24, x24, #0x1
   1fb40:	b.gt	1fb1c <PyInit__decimal@@Base+0x19068>
   1fb44:	b	1fd7c <PyInit__decimal@@Base+0x192c8>
   1fb48:	mov	w8, #0x20                  	// #32
   1fb4c:	mov	x23, x22
   1fb50:	strb	w8, [x23], #1
   1fb54:	cmp	x27, #0x0
   1fb58:	b.le	1fbcc <PyInit__decimal@@Base+0x19118>
   1fb5c:	ldr	x8, [x21, #16]
   1fb60:	cmp	x27, x8
   1fb64:	b.ge	1fc00 <PyInit__decimal@@Base+0x1914c>  // b.tcont
   1fb68:	mov	x0, x21
   1fb6c:	add	x24, x23, x27
   1fb70:	bl	224ac <PyInit__decimal@@Base+0x1b9f8>
   1fb74:	mov	x25, x0
   1fb78:	bl	22334 <PyInit__decimal@@Base+0x1b880>
   1fb7c:	mov	w2, w0
   1fb80:	mov	x0, x23
   1fb84:	mov	x1, x25
   1fb88:	mov	x3, x24
   1fb8c:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fb90:	ldr	x8, [x21, #24]
   1fb94:	mov	x23, x0
   1fb98:	subs	x25, x8, #0x2
   1fb9c:	b.mi	1fd1c <PyInit__decimal@@Base+0x19268>  // b.first
   1fba0:	ldr	x8, [x21, #40]
   1fba4:	mov	w2, #0x13                  	// #19
   1fba8:	mov	x0, x23
   1fbac:	mov	x3, x24
   1fbb0:	ldr	x1, [x8, x25, lsl #3]
   1fbb4:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fbb8:	mov	x23, x0
   1fbbc:	cmp	x25, #0x0
   1fbc0:	sub	x25, x25, #0x1
   1fbc4:	b.gt	1fba0 <PyInit__decimal@@Base+0x190ec>
   1fbc8:	b	1fd1c <PyInit__decimal@@Base+0x19268>
   1fbcc:	neg	x24, x27
   1fbd0:	mov	w8, #0x2e30                	// #11824
   1fbd4:	cmp	x24, #0x1
   1fbd8:	strh	w8, [x23], #2
   1fbdc:	b.lt	1fcc0 <PyInit__decimal@@Base+0x1920c>  // b.tstop
   1fbe0:	mov	w1, #0x30                  	// #48
   1fbe4:	mov	x0, x23
   1fbe8:	mov	x2, x24
   1fbec:	bl	65b0 <memset@plt>
   1fbf0:	cmp	x24, #0x1
   1fbf4:	b.ne	1fc94 <PyInit__decimal@@Base+0x191e0>  // b.any
   1fbf8:	mov	x8, xzr
   1fbfc:	b	1fcb0 <PyInit__decimal@@Base+0x191fc>
   1fc00:	mov	x0, x21
   1fc04:	bl	224ac <PyInit__decimal@@Base+0x1b9f8>
   1fc08:	mov	x24, x0
   1fc0c:	bl	22334 <PyInit__decimal@@Base+0x1b880>
   1fc10:	mov	w2, w0
   1fc14:	mov	x0, x23
   1fc18:	mov	x1, x24
   1fc1c:	mov	x3, xzr
   1fc20:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fc24:	ldr	x8, [x21, #24]
   1fc28:	mov	x23, x0
   1fc2c:	subs	x24, x8, #0x2
   1fc30:	b.mi	1fc5c <PyInit__decimal@@Base+0x191a8>  // b.first
   1fc34:	ldr	x8, [x21, #40]
   1fc38:	mov	w2, #0x13                  	// #19
   1fc3c:	mov	x0, x23
   1fc40:	mov	x3, xzr
   1fc44:	ldr	x1, [x8, x24, lsl #3]
   1fc48:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fc4c:	mov	x23, x0
   1fc50:	cmp	x24, #0x0
   1fc54:	sub	x24, x24, #0x1
   1fc58:	b.gt	1fc34 <PyInit__decimal@@Base+0x19180>
   1fc5c:	ldr	x8, [x21, #16]
   1fc60:	sub	x8, x27, x8
   1fc64:	cmp	x8, #0x1
   1fc68:	b.lt	1fd1c <PyInit__decimal@@Base+0x19268>  // b.tstop
   1fc6c:	mov	x8, xzr
   1fc70:	mov	w9, #0x30                  	// #48
   1fc74:	strb	w9, [x23, x8]
   1fc78:	ldr	x10, [x21, #16]
   1fc7c:	add	x8, x8, #0x1
   1fc80:	sub	x10, x27, x10
   1fc84:	cmp	x8, x10
   1fc88:	b.lt	1fc74 <PyInit__decimal@@Base+0x191c0>  // b.tstop
   1fc8c:	add	x23, x23, x8
   1fc90:	b	1fd1c <PyInit__decimal@@Base+0x19268>
   1fc94:	and	x8, x24, #0xfffffffffffffffe
   1fc98:	add	x23, x23, x8
   1fc9c:	mov	x9, x8
   1fca0:	subs	x9, x9, #0x2
   1fca4:	b.ne	1fca0 <PyInit__decimal@@Base+0x191ec>  // b.any
   1fca8:	cmp	x8, x24
   1fcac:	b.eq	1fcc0 <PyInit__decimal@@Base+0x1920c>  // b.none
   1fcb0:	sub	x8, x24, x8
   1fcb4:	subs	x8, x8, #0x1
   1fcb8:	add	x23, x23, #0x1
   1fcbc:	b.ne	1fcb4 <PyInit__decimal@@Base+0x19200>  // b.any
   1fcc0:	mov	x0, x21
   1fcc4:	bl	224ac <PyInit__decimal@@Base+0x1b9f8>
   1fcc8:	mov	x24, x0
   1fccc:	bl	22334 <PyInit__decimal@@Base+0x1b880>
   1fcd0:	mov	w2, w0
   1fcd4:	mov	x0, x23
   1fcd8:	mov	x1, x24
   1fcdc:	mov	x3, xzr
   1fce0:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fce4:	ldr	x8, [x21, #24]
   1fce8:	mov	x23, x0
   1fcec:	subs	x24, x8, #0x2
   1fcf0:	b.mi	1fd1c <PyInit__decimal@@Base+0x19268>  // b.first
   1fcf4:	ldr	x8, [x21, #40]
   1fcf8:	mov	w2, #0x13                  	// #19
   1fcfc:	mov	x0, x23
   1fd00:	mov	x3, xzr
   1fd04:	ldr	x1, [x8, x24, lsl #3]
   1fd08:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fd0c:	mov	x23, x0
   1fd10:	cmp	x24, #0x0
   1fd14:	sub	x24, x24, #0x1
   1fd18:	b.gt	1fcf4 <PyInit__decimal@@Base+0x19240>
   1fd1c:	tbnz	w20, #3, 1fd28 <PyInit__decimal@@Base+0x19274>
   1fd20:	cmp	x26, x27
   1fd24:	b.eq	1fd7c <PyInit__decimal@@Base+0x192c8>  // b.none
   1fd28:	tst	w20, #0x1
   1fd2c:	mov	w8, #0x45                  	// #69
   1fd30:	mov	w9, #0x65                  	// #101
   1fd34:	sub	x10, x26, x27
   1fd38:	csel	w8, w9, w8, eq  // eq = none
   1fd3c:	cmp	x10, #0x0
   1fd40:	mov	w11, #0x2b                  	// #43
   1fd44:	mov	w12, #0x2d                  	// #45
   1fd48:	cneg	x21, x10, mi  // mi = first
   1fd4c:	strb	w8, [x23]
   1fd50:	csel	w8, w12, w11, lt  // lt = tstop
   1fd54:	mov	x0, x21
   1fd58:	add	x24, x23, #0x2
   1fd5c:	strb	w8, [x23, #1]
   1fd60:	bl	22334 <PyInit__decimal@@Base+0x1b880>
   1fd64:	mov	w2, w0
   1fd68:	mov	x0, x24
   1fd6c:	mov	x1, x21
   1fd70:	mov	x3, xzr
   1fd74:	bl	21514 <PyInit__decimal@@Base+0x1aa60>
   1fd78:	mov	x23, x0
   1fd7c:	tbz	w20, #5, 1fd88 <PyInit__decimal@@Base+0x192d4>
   1fd80:	mov	w8, #0x25                  	// #37
   1fd84:	strb	w8, [x23], #1
   1fd88:	sub	x0, x23, x22
   1fd8c:	strb	wzr, [x23]
   1fd90:	str	x22, [x19]
   1fd94:	ldp	x20, x19, [sp, #80]
   1fd98:	ldp	x22, x21, [sp, #64]
   1fd9c:	ldp	x24, x23, [sp, #48]
   1fda0:	ldp	x26, x25, [sp, #32]
   1fda4:	ldr	x27, [sp, #16]
   1fda8:	ldp	x29, x30, [sp], #96
   1fdac:	ret
   1fdb0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1fdb4:	sub	x8, x26, #0x1
   1fdb8:	movk	x9, #0x5556
   1fdbc:	smulh	x9, x8, x9
   1fdc0:	add	x9, x9, x9, lsr #63
   1fdc4:	add	x9, x9, x9, lsl #1
   1fdc8:	sub	x8, x8, x9
   1fdcc:	add	x9, x8, #0x3
   1fdd0:	cmp	x8, #0x0
   1fdd4:	csel	x8, x9, x8, lt  // lt = tstop
   1fdd8:	add	x27, x8, x22
   1fddc:	b	1f9f8 <PyInit__decimal@@Base+0x18f44>
   1fde0:	bl	6700 <abort@plt>
   1fde4:	sub	sp, sp, #0x20
   1fde8:	stp	x29, x30, [sp, #16]
   1fdec:	add	x29, sp, #0x10
   1fdf0:	cmp	w1, #0x0
   1fdf4:	mov	x8, x0
   1fdf8:	cset	w9, ne  // ne = any
   1fdfc:	orr	w2, w9, #0x4
   1fe00:	add	x0, sp, #0x8
   1fe04:	mov	w3, #0x1                   	// #1
   1fe08:	mov	x1, x8
   1fe0c:	bl	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   1fe10:	ldr	x0, [sp, #8]
   1fe14:	ldp	x29, x30, [sp, #16]
   1fe18:	add	sp, sp, #0x20
   1fe1c:	ret
   1fe20:	cmp	w2, #0x0
   1fe24:	cset	w8, ne  // ne = any
   1fe28:	orr	w2, w8, #0x2
   1fe2c:	mov	w3, #0x1                   	// #1
   1fe30:	b	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   1fe34:	cmp	w2, #0x0
   1fe38:	cset	w8, ne  // ne = any
   1fe3c:	orr	w2, w8, #0x4
   1fe40:	mov	w3, #0x1                   	// #1
   1fe44:	b	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   1fe48:	stp	x29, x30, [sp, #-32]!
   1fe4c:	str	x19, [sp, #16]
   1fe50:	mov	x29, sp
   1fe54:	mov	x19, x0
   1fe58:	ldr	x0, [x0, #24]
   1fe5c:	bl	6420 <strlen@plt>
   1fe60:	sub	x8, x0, #0x1
   1fe64:	cmp	x8, #0x3
   1fe68:	b.ls	1fe7c <PyInit__decimal@@Base+0x193c8>  // b.plast
   1fe6c:	mov	w0, #0xffffffff            	// #-1
   1fe70:	ldr	x19, [sp, #16]
   1fe74:	ldp	x29, x30, [sp], #32
   1fe78:	ret
   1fe7c:	ldr	x0, [x19, #32]
   1fe80:	bl	6420 <strlen@plt>
   1fe84:	cmp	x0, #0x4
   1fe88:	csetm	w0, hi  // hi = pmore
   1fe8c:	ldr	x19, [sp, #16]
   1fe90:	ldp	x29, x30, [sp], #32
   1fe94:	ret
   1fe98:	sub	sp, sp, #0x50
   1fe9c:	stp	x29, x30, [sp, #32]
   1fea0:	stp	x22, x21, [sp, #48]
   1fea4:	stp	x20, x19, [sp, #64]
   1fea8:	add	x29, sp, #0x20
   1feac:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   1feb0:	cmp	w2, #0x0
   1feb4:	mov	w9, #0x47                  	// #71
   1feb8:	ldr	q0, [x8, #3808]
   1febc:	mov	w8, #0x67                  	// #103
   1fec0:	csel	w8, w8, w9, eq  // eq = none
   1fec4:	mov	w9, #0x2d3e                	// #11582
   1fec8:	stur	x1, [x29, #-8]
   1fecc:	sturh	w9, [x0, #17]
   1fed0:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   1fed4:	add	x9, x9, #0xf66
   1fed8:	stp	x9, x9, [x0, #24]
   1fedc:	strb	w8, [x0, #16]
   1fee0:	str	q0, [x0]
   1fee4:	str	x9, [x0, #40]
   1fee8:	ldrb	w10, [x1]
   1feec:	mov	x20, x1
   1fef0:	mov	x19, x0
   1fef4:	add	x8, x0, #0x13
   1fef8:	cbz	w10, 1ff20 <PyInit__decimal@@Base+0x1946c>
   1fefc:	sxtb	w9, w10
   1ff00:	tbnz	w9, #31, 1ff64 <PyInit__decimal@@Base+0x194b0>
   1ff04:	strb	w10, [x19, #19]
   1ff08:	add	x8, x19, #0x14
   1ff0c:	mov	w9, #0x1                   	// #1
   1ff10:	strb	wzr, [x8]
   1ff14:	ldrb	w8, [x20]
   1ff18:	cbnz	w8, 1ff30 <PyInit__decimal@@Base+0x1947c>
   1ff1c:	b	20044 <PyInit__decimal@@Base+0x19590>
   1ff20:	mov	w9, wzr
   1ff24:	strb	wzr, [x8]
   1ff28:	ldrb	w8, [x20]
   1ff2c:	cbz	w8, 20044 <PyInit__decimal@@Base+0x19590>
   1ff30:	add	x8, x20, x9
   1ff34:	ldrb	w22, [x8]
   1ff38:	sub	w9, w22, #0x3c
   1ff3c:	cmp	w9, #0x22
   1ff40:	b.hi	20044 <PyInit__decimal@@Base+0x19590>  // b.pmore
   1ff44:	mov	w10, #0x1                   	// #1
   1ff48:	lsl	x9, x10, x9
   1ff4c:	mov	x10, #0x7                   	// #7
   1ff50:	movk	x10, #0x4, lsl #32
   1ff54:	tst	x9, x10
   1ff58:	b.eq	20044 <PyInit__decimal@@Base+0x19590>  // b.none
   1ff5c:	mov	x20, x8
   1ff60:	b	20078 <PyInit__decimal@@Base+0x195c4>
   1ff64:	add	w9, w10, #0x3e
   1ff68:	and	w9, w9, #0xff
   1ff6c:	cmp	w9, #0x1e
   1ff70:	b.cs	1ff7c <PyInit__decimal@@Base+0x194c8>  // b.hs, b.nlast
   1ff74:	mov	w9, #0x2                   	// #2
   1ff78:	b	1ffcc <PyInit__decimal@@Base+0x19518>
   1ff7c:	cmp	w10, #0xe0
   1ff80:	b.ne	1ffa4 <PyInit__decimal@@Base+0x194f0>  // b.any
   1ff84:	mov	w9, #0x3                   	// #3
   1ff88:	mov	w11, #0xbf                  	// #191
   1ff8c:	mov	w12, #0xa0                  	// #160
   1ff90:	strb	w10, [x8]
   1ff94:	ldrb	w10, [x20, #1]
   1ff98:	cmp	w12, w10
   1ff9c:	b.ls	1ffe4 <PyInit__decimal@@Base+0x19530>  // b.plast
   1ffa0:	b	20300 <PyInit__decimal@@Base+0x1984c>
   1ffa4:	cmp	w10, #0xed
   1ffa8:	b.cc	1ffc8 <PyInit__decimal@@Base+0x19514>  // b.lo, b.ul, b.last
   1ffac:	cmp	w10, #0xed
   1ffb0:	b.ne	1ffc0 <PyInit__decimal@@Base+0x1950c>  // b.any
   1ffb4:	mov	w9, #0x3                   	// #3
   1ffb8:	mov	w11, #0x9f                  	// #159
   1ffbc:	b	1ffd0 <PyInit__decimal@@Base+0x1951c>
   1ffc0:	cmp	w10, #0xf0
   1ffc4:	b.cs	202b4 <PyInit__decimal@@Base+0x19800>  // b.hs, b.nlast
   1ffc8:	mov	w9, #0x3                   	// #3
   1ffcc:	mov	w11, #0xbf                  	// #191
   1ffd0:	mov	w12, #0x80                  	// #128
   1ffd4:	strb	w10, [x8]
   1ffd8:	ldrb	w10, [x20, #1]
   1ffdc:	cmp	w12, w10
   1ffe0:	b.hi	20300 <PyInit__decimal@@Base+0x1984c>  // b.pmore
   1ffe4:	cmp	w11, w10
   1ffe8:	b.cc	20300 <PyInit__decimal@@Base+0x1984c>  // b.lo, b.ul, b.last
   1ffec:	cmp	w9, #0x3
   1fff0:	strb	w10, [x19, #20]
   1fff4:	b.cc	20030 <PyInit__decimal@@Base+0x1957c>  // b.lo, b.ul, b.last
   1fff8:	add	x10, x20, #0x2
   1fffc:	add	x11, x19, #0x15
   20000:	sub	x12, x9, #0x2
   20004:	ldrsb	w13, [x10]
   20008:	tbz	w13, #31, 20300 <PyInit__decimal@@Base+0x1984c>
   2000c:	and	w13, w13, #0xff
   20010:	cmp	w13, #0xbf
   20014:	b.hi	20300 <PyInit__decimal@@Base+0x1984c>  // b.pmore
   20018:	add	x10, x10, #0x1
   2001c:	subs	x12, x12, #0x1
   20020:	strb	w13, [x11], #1
   20024:	b.ne	20004 <PyInit__decimal@@Base+0x19550>  // b.any
   20028:	mov	x8, x9
   2002c:	b	20034 <PyInit__decimal@@Base+0x19580>
   20030:	mov	w8, #0x2                   	// #2
   20034:	add	x8, x19, x8
   20038:	strb	wzr, [x8, #19]!
   2003c:	ldrb	w8, [x20]
   20040:	cbnz	w8, 1ff30 <PyInit__decimal@@Base+0x1947c>
   20044:	mov	w8, #0x20                  	// #32
   20048:	sturh	w8, [x19, #19]
   2004c:	ldrb	w22, [x20]
   20050:	mov	w8, wzr
   20054:	sub	w9, w22, #0x3c
   20058:	cmp	w9, #0x22
   2005c:	b.hi	20090 <PyInit__decimal@@Base+0x195dc>  // b.pmore
   20060:	mov	w10, #0x1                   	// #1
   20064:	lsl	x9, x10, x9
   20068:	mov	x10, #0x7                   	// #7
   2006c:	movk	x10, #0x4, lsl #32
   20070:	tst	x9, x10
   20074:	b.eq	20090 <PyInit__decimal@@Base+0x195dc>  // b.none
   20078:	add	x9, x20, #0x1
   2007c:	stur	x9, [x29, #-8]
   20080:	strb	w22, [x19, #17]
   20084:	ldrb	w22, [x20, #1]
   20088:	mov	w8, #0x1                   	// #1
   2008c:	mov	x20, x9
   20090:	cmp	w22, #0x2d
   20094:	b.hi	200c0 <PyInit__decimal@@Base+0x1960c>  // b.pmore
   20098:	mov	w9, #0x1                   	// #1
   2009c:	lsl	x9, x9, x22
   200a0:	mov	x10, #0x280100000000        	// #43984760078336
   200a4:	tst	x9, x10
   200a8:	b.eq	200c0 <PyInit__decimal@@Base+0x1960c>  // b.none
   200ac:	add	x9, x20, #0x1
   200b0:	stur	x9, [x29, #-8]
   200b4:	strb	w22, [x19, #18]
   200b8:	ldrb	w22, [x20, #1]
   200bc:	mov	x20, x9
   200c0:	cmp	w22, #0x30
   200c4:	b.ne	200f0 <PyInit__decimal@@Base+0x1963c>  // b.any
   200c8:	cbnz	w8, 201ec <PyInit__decimal@@Base+0x19738>
   200cc:	mov	w8, #0x7a                  	// #122
   200d0:	add	x9, x20, #0x1
   200d4:	strb	w8, [x19, #17]
   200d8:	stur	x9, [x29, #-8]
   200dc:	ldrb	w8, [x20]
   200e0:	strb	wzr, [x19, #20]
   200e4:	strb	w8, [x19, #19]
   200e8:	ldrb	w22, [x20, #1]
   200ec:	mov	x20, x9
   200f0:	bl	67c0 <__ctype_b_loc@plt>
   200f4:	ldr	x8, [x0]
   200f8:	mov	x21, x0
   200fc:	ldrh	w8, [x8, w22, uxtw #1]
   20100:	tbnz	w8, #11, 201e4 <PyInit__decimal@@Base+0x19730>
   20104:	cmp	w22, #0x2c
   20108:	b.ne	2013c <PyInit__decimal@@Base+0x19688>  // b.any
   2010c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   20110:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   20114:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   20118:	add	x8, x8, #0xf60
   2011c:	add	x9, x9, #0xf62
   20120:	add	x10, x10, #0xf64
   20124:	add	x11, x20, #0x1
   20128:	stp	x8, x9, [x19, #24]
   2012c:	str	x10, [x19, #40]
   20130:	stur	x11, [x29, #-8]
   20134:	ldrb	w22, [x20, #1]
   20138:	mov	x20, x11
   2013c:	cmp	w22, #0x2e
   20140:	b.ne	2019c <PyInit__decimal@@Base+0x196e8>  // b.any
   20144:	add	x22, x20, #0x1
   20148:	stur	x22, [x29, #-8]
   2014c:	ldr	x8, [x21]
   20150:	ldrb	w9, [x20, #1]
   20154:	ldrh	w8, [x8, x9, lsl #1]
   20158:	tbz	w8, #11, 201ec <PyInit__decimal@@Base+0x19738>
   2015c:	bl	6960 <__errno_location@plt>
   20160:	mov	x20, x0
   20164:	str	wzr, [x0]
   20168:	sub	x1, x29, #0x8
   2016c:	mov	w2, #0xa                   	// #10
   20170:	mov	x0, x22
   20174:	bl	6480 <strtoll@plt>
   20178:	str	x0, [x19, #8]
   2017c:	ldr	w8, [x20]
   20180:	mov	w0, wzr
   20184:	cmp	w8, #0x16
   20188:	b.eq	20308 <PyInit__decimal@@Base+0x19854>  // b.none
   2018c:	cmp	w8, #0x22
   20190:	b.eq	20308 <PyInit__decimal@@Base+0x19854>  // b.none
   20194:	ldur	x20, [x29, #-8]
   20198:	ldrb	w22, [x20]
   2019c:	sub	w8, w22, #0x25
   201a0:	cmp	w8, #0x49
   201a4:	b.hi	201d4 <PyInit__decimal@@Base+0x19720>  // b.pmore
   201a8:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   201ac:	add	x9, x9, #0xef0
   201b0:	adr	x10, 201c0 <PyInit__decimal@@Base+0x1970c>
   201b4:	ldrb	w11, [x9, x8]
   201b8:	add	x10, x10, x11, lsl #2
   201bc:	br	x10
   201c0:	add	x8, x20, #0x1
   201c4:	stur	x8, [x29, #-8]
   201c8:	ldrb	w9, [x20]
   201cc:	mov	x20, x8
   201d0:	strb	w9, [x19, #16]
   201d4:	ldrb	w8, [x20]
   201d8:	cmp	w8, #0x0
   201dc:	cset	w0, eq  // eq = none
   201e0:	b	20308 <PyInit__decimal@@Base+0x19854>
   201e4:	cmp	w22, #0x30
   201e8:	b.ne	201f4 <PyInit__decimal@@Base+0x19740>  // b.any
   201ec:	mov	w0, wzr
   201f0:	b	20308 <PyInit__decimal@@Base+0x19854>
   201f4:	bl	6960 <__errno_location@plt>
   201f8:	mov	x22, x0
   201fc:	str	wzr, [x0]
   20200:	sub	x1, x29, #0x8
   20204:	mov	w2, #0xa                   	// #10
   20208:	mov	x0, x20
   2020c:	bl	6480 <strtoll@plt>
   20210:	str	x0, [x19]
   20214:	ldr	w8, [x22]
   20218:	mov	w0, wzr
   2021c:	cmp	w8, #0x16
   20220:	b.eq	20308 <PyInit__decimal@@Base+0x19854>  // b.none
   20224:	cmp	w8, #0x22
   20228:	b.eq	20308 <PyInit__decimal@@Base+0x19854>  // b.none
   2022c:	ldur	x20, [x29, #-8]
   20230:	ldrb	w22, [x20]
   20234:	cmp	w22, #0x2c
   20238:	b.eq	2010c <PyInit__decimal@@Base+0x19658>  // b.none
   2023c:	b	2013c <PyInit__decimal@@Base+0x19688>
   20240:	ldr	x8, [x19, #32]
   20244:	ldrb	w8, [x8]
   20248:	cbnz	w8, 201ec <PyInit__decimal@@Base+0x19738>
   2024c:	add	x21, x20, #0x1
   20250:	stur	x21, [x29, #-8]
   20254:	ldrb	w8, [x20]
   20258:	mov	w9, #0x67                  	// #103
   2025c:	cmp	w8, #0x4e
   20260:	mov	w8, #0x47                  	// #71
   20264:	csel	w8, w8, w9, eq  // eq = none
   20268:	strb	w8, [x19, #16]
   2026c:	bl	6570 <localeconv@plt>
   20270:	ldr	x8, [x0]
   20274:	str	x8, [x19, #24]
   20278:	ldur	q0, [x0, #8]
   2027c:	mov	x0, x8
   20280:	str	q0, [sp]
   20284:	str	q0, [x19, #32]
   20288:	bl	6420 <strlen@plt>
   2028c:	sub	x8, x0, #0x1
   20290:	cmp	x8, #0x3
   20294:	b.hi	201ec <PyInit__decimal@@Base+0x19738>  // b.pmore
   20298:	ldr	q0, [sp]
   2029c:	fmov	x0, d0
   202a0:	bl	6420 <strlen@plt>
   202a4:	cmp	x0, #0x4
   202a8:	mov	x20, x21
   202ac:	b.hi	201ec <PyInit__decimal@@Base+0x19738>  // b.pmore
   202b0:	b	201d4 <PyInit__decimal@@Base+0x19720>
   202b4:	cmp	w10, #0xf0
   202b8:	b.ne	202dc <PyInit__decimal@@Base+0x19828>  // b.any
   202bc:	mov	w9, #0x4                   	// #4
   202c0:	mov	w11, #0xbf                  	// #191
   202c4:	mov	w12, #0x90                  	// #144
   202c8:	strb	w10, [x8]
   202cc:	ldrb	w10, [x20, #1]
   202d0:	cmp	w12, w10
   202d4:	b.ls	1ffe4 <PyInit__decimal@@Base+0x19530>  // b.plast
   202d8:	b	20300 <PyInit__decimal@@Base+0x1984c>
   202dc:	cmp	w10, #0xf4
   202e0:	b.cs	202ec <PyInit__decimal@@Base+0x19838>  // b.hs, b.nlast
   202e4:	mov	w9, #0x4                   	// #4
   202e8:	b	1ffcc <PyInit__decimal@@Base+0x19518>
   202ec:	cmp	w10, #0xf4
   202f0:	b.ne	20300 <PyInit__decimal@@Base+0x1984c>  // b.any
   202f4:	mov	w9, #0x4                   	// #4
   202f8:	mov	w11, #0x8f                  	// #143
   202fc:	b	1ffd0 <PyInit__decimal@@Base+0x1951c>
   20300:	mov	w0, wzr
   20304:	strb	wzr, [x8]
   20308:	ldp	x20, x19, [sp, #64]
   2030c:	ldp	x22, x21, [sp, #48]
   20310:	ldp	x29, x30, [sp, #32]
   20314:	add	sp, sp, #0x50
   20318:	ret
   2031c:	stp	x29, x30, [sp, #-96]!
   20320:	stp	x28, x27, [sp, #16]
   20324:	stp	x26, x25, [sp, #32]
   20328:	stp	x24, x23, [sp, #48]
   2032c:	stp	x22, x21, [sp, #64]
   20330:	stp	x20, x19, [sp, #80]
   20334:	mov	x29, sp
   20338:	sub	sp, sp, #0x290
   2033c:	mov	w8, #0x30                  	// #48
   20340:	mov	w9, #0x40                  	// #64
   20344:	strb	w8, [sp, #80]
   20348:	add	x8, sp, #0x80
   2034c:	stp	xzr, xzr, [sp, #88]
   20350:	stp	xzr, x9, [sp, #104]
   20354:	str	x8, [sp, #120]
   20358:	ldr	x8, [x1]
   2035c:	mov	x27, #0xffffffffa763ffff    	// #-1486618625
   20360:	movk	x27, #0xb6b3, lsl #32
   20364:	movk	x27, #0xde0, lsl #48
   20368:	mov	x20, x3
   2036c:	cmp	x8, x27
   20370:	b.le	20388 <PyInit__decimal@@Base+0x198d4>
   20374:	ldr	w8, [x20]
   20378:	mov	x0, xzr
   2037c:	orr	w8, w8, #0x100
   20380:	str	w8, [x20]
   20384:	b	20aa4 <PyInit__decimal@@Base+0x19ff0>
   20388:	ldrb	w25, [x1, #16]
   2038c:	mov	x24, x2
   20390:	mov	x19, x1
   20394:	mov	x22, x0
   20398:	bl	67c0 <__ctype_b_loc@plt>
   2039c:	ldr	x8, [x0]
   203a0:	mov	x21, x0
   203a4:	ldrh	w8, [x8, x25, lsl #1]
   203a8:	tbnz	w8, #8, 204c4 <PyInit__decimal@@Base+0x19a10>
   203ac:	mov	w23, wzr
   203b0:	ldrb	w8, [x19, #18]
   203b4:	cmp	w8, #0x2b
   203b8:	b.eq	204e0 <PyInit__decimal@@Base+0x19a2c>  // b.none
   203bc:	cmp	w8, #0x20
   203c0:	b.ne	203c8 <PyInit__decimal@@Base+0x19914>  // b.any
   203c4:	orr	w23, w23, #0x40
   203c8:	mov	x0, x22
   203cc:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   203d0:	cbz	w0, 204f0 <PyInit__decimal@@Base+0x19a3c>
   203d4:	ldrb	w8, [x19, #17]
   203d8:	cmp	w8, #0x7a
   203dc:	b.ne	20404 <PyInit__decimal@@Base+0x19950>  // b.any
   203e0:	ldp	q2, q0, [x19, #16]
   203e4:	ldr	q1, [x19]
   203e8:	mov	w8, #0x20                  	// #32
   203ec:	mov	w9, #0x3e                  	// #62
   203f0:	mov	x19, sp
   203f4:	stp	q2, q0, [sp, #16]
   203f8:	str	q1, [sp]
   203fc:	sturh	w8, [sp, #19]
   20400:	strb	w9, [sp, #17]
   20404:	and	w8, w25, #0xff
   20408:	orr	w9, w23, #0x20
   2040c:	cmp	w8, #0x25
   20410:	csel	w23, w9, w23, eq  // eq = none
   20414:	mov	w3, #0x1                   	// #1
   20418:	add	x8, sp, #0x30
   2041c:	add	x0, x8, #0x18
   20420:	mov	x1, x22
   20424:	mov	w2, w23
   20428:	bl	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   2042c:	stp	x0, x0, [sp, #48]
   20430:	tbnz	x0, #63, 20534 <PyInit__decimal@@Base+0x19a80>
   20434:	ldr	x8, [x19, #24]
   20438:	ldrb	w8, [x8]
   2043c:	cbz	w8, 20450 <PyInit__decimal@@Base+0x1999c>
   20440:	mov	x26, x0
   20444:	mov	x0, x22
   20448:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   2044c:	cbz	w0, 205c0 <PyInit__decimal@@Base+0x19b0c>
   20450:	ldr	x8, [x19]
   20454:	cbz	x8, 20a2c <PyInit__decimal@@Base+0x19f78>
   20458:	ldr	x9, [sp, #56]
   2045c:	subs	x23, x8, x9
   20460:	b.le	20a2c <PyInit__decimal@@Base+0x19f78>
   20464:	ldrb	w25, [x19, #17]
   20468:	add	x0, x19, #0x13
   2046c:	sturb	wzr, [x29, #-12]
   20470:	bl	6420 <strlen@plt>
   20474:	ldr	x8, [sp, #48]
   20478:	mov	x21, x0
   2047c:	ldr	x0, [sp, #72]
   20480:	mul	x24, x21, x23
   20484:	add	x8, x24, x8
   20488:	add	x1, x8, #0x1
   2048c:	sub	x3, x29, #0xc
   20490:	mov	w2, #0x1                   	// #1
   20494:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   20498:	ldurb	w8, [x29, #-12]
   2049c:	mov	x22, x0
   204a0:	str	x0, [sp, #72]
   204a4:	cbz	w8, 206c4 <PyInit__decimal@@Base+0x19c10>
   204a8:	ldr	w8, [x20]
   204ac:	mov	x0, x22
   204b0:	orr	w8, w8, #0x200
   204b4:	str	w8, [x20]
   204b8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   204bc:	ldr	x8, [x8, #1376]
   204c0:	b	205e4 <PyInit__decimal@@Base+0x19b30>
   204c4:	bl	6540 <__ctype_tolower_loc@plt>
   204c8:	ldr	x8, [x0]
   204cc:	mov	w23, #0x1                   	// #1
   204d0:	ldr	w25, [x8, x25, lsl #2]
   204d4:	ldrb	w8, [x19, #18]
   204d8:	cmp	w8, #0x2b
   204dc:	b.ne	203bc <PyInit__decimal@@Base+0x19908>  // b.any
   204e0:	orr	w23, w23, #0x80
   204e4:	mov	x0, x22
   204e8:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   204ec:	cbnz	w0, 203d4 <PyInit__decimal@@Base+0x19920>
   204f0:	and	w8, w25, #0xff
   204f4:	cmp	w8, #0x65
   204f8:	str	wzr, [sp]
   204fc:	b.gt	20540 <PyInit__decimal@@Base+0x19a8c>
   20500:	cmp	w8, #0x25
   20504:	b.ne	205ec <PyInit__decimal@@Base+0x19b38>  // b.any
   20508:	add	x0, sp, #0x50
   2050c:	mov	x1, x22
   20510:	mov	x2, x20
   20514:	bl	24490 <PyInit__decimal@@Base+0x1d9dc>
   20518:	cbz	w0, 20aa0 <PyInit__decimal@@Base+0x19fec>
   2051c:	ldr	x8, [sp, #88]
   20520:	orr	w23, w23, #0x20
   20524:	add	x22, sp, #0x50
   20528:	add	x8, x8, #0x2
   2052c:	str	x8, [sp, #88]
   20530:	b	20548 <PyInit__decimal@@Base+0x19a94>
   20534:	ldr	w8, [x20]
   20538:	orr	w8, w8, #0x200
   2053c:	b	20a94 <PyInit__decimal@@Base+0x19fe0>
   20540:	cmp	w8, #0x66
   20544:	b.ne	20604 <PyInit__decimal@@Base+0x19b50>  // b.any
   20548:	orr	w23, w23, #0x10
   2054c:	mov	w8, #0x66                  	// #102
   20550:	ldr	x9, [x19, #8]
   20554:	tbnz	x9, #63, 20618 <PyInit__decimal@@Base+0x19b64>
   20558:	cmp	x9, x27
   2055c:	b.le	20568 <PyInit__decimal@@Base+0x19ab4>
   20560:	mov	w8, #0x100                 	// #256
   20564:	b	20a8c <PyInit__decimal@@Base+0x19fd8>
   20568:	and	w8, w8, #0x3
   2056c:	cmp	w8, #0x1
   20570:	b.eq	20774 <PyInit__decimal@@Base+0x19cc0>  // b.none
   20574:	cmp	w8, #0x2
   20578:	b.eq	2071c <PyInit__decimal@@Base+0x19c68>  // b.none
   2057c:	cmp	w8, #0x3
   20580:	b.ne	2076c <PyInit__decimal@@Base+0x19cb8>  // b.any
   20584:	ldr	x25, [x22, #16]
   20588:	cmp	x9, #0x0
   2058c:	csinc	x26, x9, xzr, ne  // ne = any
   20590:	cmp	x25, x26
   20594:	b.le	2076c <PyInit__decimal@@Base+0x19cb8>
   20598:	ldr	x28, [x22, #8]
   2059c:	mov	x0, x22
   205a0:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   205a4:	cbnz	w0, 20a64 <PyInit__decimal@@Base+0x19fb0>
   205a8:	mov	x0, x22
   205ac:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   205b0:	cbnz	w0, 20a64 <PyInit__decimal@@Base+0x19fb0>
   205b4:	sub	x8, x28, x26
   205b8:	add	x25, x8, x25
   205bc:	b	20af0 <PyInit__decimal@@Base+0x1a03c>
   205c0:	add	x8, x27, #0x24
   205c4:	cmp	x26, x8
   205c8:	b.le	20630 <PyInit__decimal@@Base+0x19b7c>
   205cc:	ldr	w8, [x20]
   205d0:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   205d4:	orr	w8, w8, #0x100
   205d8:	str	w8, [x20]
   205dc:	ldr	x8, [x9, #1376]
   205e0:	ldr	x0, [sp, #72]
   205e4:	blr	x8
   205e8:	b	20a98 <PyInit__decimal@@Base+0x19fe4>
   205ec:	cmp	w8, #0x65
   205f0:	b.ne	20b38 <PyInit__decimal@@Base+0x1a084>  // b.any
   205f4:	orr	w23, w23, #0x8
   205f8:	ldr	x9, [x19, #8]
   205fc:	tbz	x9, #63, 20558 <PyInit__decimal@@Base+0x19aa4>
   20600:	b	20618 <PyInit__decimal@@Base+0x19b64>
   20604:	cmp	w8, #0x67
   20608:	b.ne	20b38 <PyInit__decimal@@Base+0x1a084>  // b.any
   2060c:	orr	w23, w23, #0x2
   20610:	ldr	x9, [x19, #8]
   20614:	tbz	x9, #63, 20558 <PyInit__decimal@@Base+0x19aa4>
   20618:	cmp	w8, #0x66
   2061c:	b.ne	2076c <PyInit__decimal@@Base+0x19cb8>  // b.any
   20620:	mov	x0, x22
   20624:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   20628:	cbnz	w0, 20744 <PyInit__decimal@@Base+0x19c90>
   2062c:	b	2076c <PyInit__decimal@@Base+0x19cb8>
   20630:	ldr	x22, [sp, #72]
   20634:	mov	x23, xzr
   20638:	ldrb	w8, [x22]
   2063c:	cmp	w8, #0x2d
   20640:	b.hi	20ac4 <PyInit__decimal@@Base+0x1a010>  // b.pmore
   20644:	mov	w9, #0x1                   	// #1
   20648:	lsl	x8, x9, x8
   2064c:	mov	x9, #0x280100000000        	// #43984760078336
   20650:	tst	x8, x9
   20654:	mov	x24, x22
   20658:	b.eq	20664 <PyInit__decimal@@Base+0x19bb0>  // b.none
   2065c:	add	x24, x22, #0x1
   20660:	mov	x23, x22
   20664:	ldr	x8, [x21]
   20668:	add	x21, x24, #0x1
   2066c:	ldrb	w9, [x21], #1
   20670:	ldrh	w10, [x8, x9, lsl #1]
   20674:	tbnz	w10, #11, 2066c <PyInit__decimal@@Base+0x19bb8>
   20678:	sub	x8, x21, #0x1
   2067c:	cmp	w9, #0x2e
   20680:	sub	x25, x8, x24
   20684:	b.ne	20790 <PyInit__decimal@@Base+0x19cdc>  // b.any
   20688:	ldr	x27, [x19, #24]
   2068c:	sub	x8, x22, x21
   20690:	add	x26, x26, x8
   20694:	cbz	x27, 2079c <PyInit__decimal@@Base+0x19ce8>
   20698:	add	x0, sp, #0x30
   2069c:	mov	x1, x23
   206a0:	mov	x2, x24
   206a4:	mov	x3, x25
   206a8:	mov	x4, x27
   206ac:	mov	x5, x21
   206b0:	mov	x6, x26
   206b4:	mov	x7, x19
   206b8:	str	xzr, [sp, #72]
   206bc:	bl	21a54 <PyInit__decimal@@Base+0x1afa0>
   206c0:	b	207e0 <PyInit__decimal@@Base+0x19d2c>
   206c4:	cmp	w25, #0x7a
   206c8:	mov	w8, #0x3d                  	// #61
   206cc:	csel	w8, w8, w25, eq  // eq = none
   206d0:	sub	w9, w8, #0x3d
   206d4:	cmp	w9, #0x2
   206d8:	b.cs	20830 <PyInit__decimal@@Base+0x19d7c>  // b.hs, b.nlast
   206dc:	ldr	x20, [sp, #48]
   206e0:	cmp	w8, #0x3d
   206e4:	b.ne	20844 <PyInit__decimal@@Base+0x19d90>  // b.any
   206e8:	ldrb	w8, [x22]
   206ec:	mov	x25, xzr
   206f0:	cmp	w8, #0x2d
   206f4:	b.hi	20848 <PyInit__decimal@@Base+0x19d94>  // b.pmore
   206f8:	mov	w9, #0x1                   	// #1
   206fc:	lsl	x8, x9, x8
   20700:	mov	x9, #0x280100000000        	// #43984760078336
   20704:	tst	x8, x9
   20708:	b.eq	20848 <PyInit__decimal@@Base+0x19d94>  // b.none
   2070c:	mov	x25, xzr
   20710:	add	x22, x22, #0x1
   20714:	sub	x20, x20, #0x1
   20718:	b	20848 <PyInit__decimal@@Base+0x19d94>
   2071c:	neg	x2, x9
   20720:	add	x0, sp, #0x50
   20724:	mov	x4, sp
   20728:	mov	x1, x22
   2072c:	mov	x3, x24
   20730:	bl	36048 <PyInit__decimal@@Base+0x2f594>
   20734:	add	x22, sp, #0x50
   20738:	mov	x0, x22
   2073c:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   20740:	cbz	w0, 2076c <PyInit__decimal@@Base+0x19cb8>
   20744:	ldr	x8, [x22, #8]
   20748:	cmp	x8, #0x1
   2074c:	b.lt	2076c <PyInit__decimal@@Base+0x19cb8>  // b.tstop
   20750:	add	x0, sp, #0x50
   20754:	mov	x4, sp
   20758:	mov	x1, x22
   2075c:	mov	x2, xzr
   20760:	mov	x3, x24
   20764:	bl	36048 <PyInit__decimal@@Base+0x2f594>
   20768:	b	20a74 <PyInit__decimal@@Base+0x19fc0>
   2076c:	mov	w3, #0x1                   	// #1
   20770:	b	20a7c <PyInit__decimal@@Base+0x19fc8>
   20774:	mov	x0, x22
   20778:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   2077c:	ldr	x8, [x19, #8]
   20780:	cbz	w0, 20a3c <PyInit__decimal@@Base+0x19f88>
   20784:	mov	w9, #0x1                   	// #1
   20788:	sub	x3, x9, x8
   2078c:	b	20a7c <PyInit__decimal@@Base+0x19fc8>
   20790:	sub	x9, x22, x8
   20794:	add	x26, x9, x26
   20798:	mov	x21, x8
   2079c:	ldr	x8, [x19, #32]
   207a0:	ldrb	w8, [x8]
   207a4:	cbz	w8, 20450 <PyInit__decimal@@Base+0x1999c>
   207a8:	ldr	x8, [x19, #40]
   207ac:	ldrb	w8, [x8]
   207b0:	cbz	w8, 20450 <PyInit__decimal@@Base+0x1999c>
   207b4:	add	x0, sp, #0x30
   207b8:	mov	x1, x23
   207bc:	mov	x2, x24
   207c0:	mov	x3, x25
   207c4:	mov	x4, xzr
   207c8:	mov	x5, x21
   207cc:	mov	x6, x26
   207d0:	mov	x7, x19
   207d4:	str	xzr, [sp, #72]
   207d8:	bl	21a54 <PyInit__decimal@@Base+0x1afa0>
   207dc:	mov	x27, xzr
   207e0:	ldr	x8, [sp, #48]
   207e4:	mov	w1, #0x1                   	// #1
   207e8:	add	x0, x8, #0x1
   207ec:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   207f0:	str	x0, [sp, #72]
   207f4:	cbz	x0, 204a8 <PyInit__decimal@@Base+0x199f4>
   207f8:	add	x0, sp, #0x30
   207fc:	mov	x1, x23
   20800:	mov	x2, x24
   20804:	mov	x3, x25
   20808:	mov	x4, x27
   2080c:	mov	x5, x21
   20810:	mov	x6, x26
   20814:	mov	x7, x19
   20818:	bl	21a54 <PyInit__decimal@@Base+0x1afa0>
   2081c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   20820:	ldr	x8, [x8, #1376]
   20824:	mov	x0, x22
   20828:	blr	x8
   2082c:	b	20450 <PyInit__decimal@@Base+0x1999c>
   20830:	cmp	w8, #0x3c
   20834:	b.ne	20854 <PyInit__decimal@@Base+0x19da0>  // b.any
   20838:	mov	x27, xzr
   2083c:	mov	x25, x23
   20840:	b	20864 <PyInit__decimal@@Base+0x19db0>
   20844:	mov	x25, xzr
   20848:	mov	x26, x24
   2084c:	mov	x27, x23
   20850:	b	2086c <PyInit__decimal@@Base+0x19db8>
   20854:	cmp	x23, #0x0
   20858:	cinc	x8, x23, lt  // lt = tstop
   2085c:	asr	x27, x8, #1
   20860:	sub	x25, x23, x27
   20864:	ldr	x20, [sp, #48]
   20868:	mul	x26, x27, x21
   2086c:	add	x0, x22, x26
   20870:	mov	x1, x22
   20874:	mov	x2, x20
   20878:	bl	63e0 <memmove@plt>
   2087c:	cbz	x21, 2093c <PyInit__decimal@@Base+0x19e88>
   20880:	cbz	x27, 2093c <PyInit__decimal@@Base+0x19e88>
   20884:	add	x12, x21, x19
   20888:	mov	x8, xzr
   2088c:	add	x9, x19, #0x13
   20890:	and	x10, x21, #0xffffffffffffffe0
   20894:	add	x11, x19, #0x23
   20898:	add	x12, x12, #0x13
   2089c:	add	x13, x22, #0x10
   208a0:	mov	x14, x22
   208a4:	b	208bc <PyInit__decimal@@Base+0x19e08>
   208a8:	add	x8, x8, #0x1
   208ac:	add	x13, x13, x21
   208b0:	cmp	x8, x27
   208b4:	add	x14, x14, x21
   208b8:	b.eq	2093c <PyInit__decimal@@Base+0x19e88>  // b.none
   208bc:	cmp	x21, #0x20
   208c0:	b.cc	208e4 <PyInit__decimal@@Base+0x19e30>  // b.lo, b.ul, b.last
   208c4:	mul	x15, x21, x8
   208c8:	add	x16, x22, x15
   208cc:	cmp	x16, x12
   208d0:	b.cs	20908 <PyInit__decimal@@Base+0x19e54>  // b.hs, b.nlast
   208d4:	add	x15, x21, x15
   208d8:	add	x15, x22, x15
   208dc:	cmp	x9, x15
   208e0:	b.cs	20908 <PyInit__decimal@@Base+0x19e54>  // b.hs, b.nlast
   208e4:	mov	x17, xzr
   208e8:	add	x15, x14, x17
   208ec:	sub	x16, x21, x17
   208f0:	add	x17, x9, x17
   208f4:	ldrb	w18, [x17], #1
   208f8:	subs	x16, x16, #0x1
   208fc:	strb	w18, [x15], #1
   20900:	b.ne	208f4 <PyInit__decimal@@Base+0x19e40>  // b.any
   20904:	b	208a8 <PyInit__decimal@@Base+0x19df4>
   20908:	mov	x15, x10
   2090c:	mov	x16, x13
   20910:	mov	x17, x11
   20914:	ldp	q0, q1, [x17, #-16]
   20918:	add	x17, x17, #0x20
   2091c:	subs	x15, x15, #0x20
   20920:	stp	q0, q1, [x16, #-16]
   20924:	add	x16, x16, #0x20
   20928:	b.ne	20914 <PyInit__decimal@@Base+0x19e60>  // b.any
   2092c:	cmp	x21, x10
   20930:	mov	x17, x10
   20934:	b.eq	208a8 <PyInit__decimal@@Base+0x19df4>  // b.none
   20938:	b	208e8 <PyInit__decimal@@Base+0x19e34>
   2093c:	cbz	x21, 20a14 <PyInit__decimal@@Base+0x19f60>
   20940:	cbz	x25, 20a14 <PyInit__decimal@@Base+0x19f60>
   20944:	add	x16, x20, x26
   20948:	add	x9, x20, x26
   2094c:	add	x14, x21, x20
   20950:	add	x15, x21, x19
   20954:	add	x16, x16, x22
   20958:	mov	x8, xzr
   2095c:	add	x10, x19, #0x13
   20960:	and	x11, x21, #0xffffffffffffffe0
   20964:	add	x12, x19, #0x23
   20968:	add	x13, x22, x9
   2096c:	add	x14, x14, x26
   20970:	add	x15, x15, #0x13
   20974:	add	x16, x16, #0x10
   20978:	b	20990 <PyInit__decimal@@Base+0x19edc>
   2097c:	add	x8, x8, #0x1
   20980:	add	x16, x16, x21
   20984:	cmp	x8, x25
   20988:	add	x13, x13, x21
   2098c:	b.eq	20a14 <PyInit__decimal@@Base+0x19f60>  // b.none
   20990:	cmp	x21, #0x20
   20994:	b.cc	209bc <PyInit__decimal@@Base+0x19f08>  // b.lo, b.ul, b.last
   20998:	mul	x17, x21, x8
   2099c:	add	x18, x9, x17
   209a0:	add	x18, x22, x18
   209a4:	cmp	x18, x15
   209a8:	b.cs	209e0 <PyInit__decimal@@Base+0x19f2c>  // b.hs, b.nlast
   209ac:	add	x17, x14, x17
   209b0:	add	x17, x22, x17
   209b4:	cmp	x10, x17
   209b8:	b.cs	209e0 <PyInit__decimal@@Base+0x19f2c>  // b.hs, b.nlast
   209bc:	mov	x0, xzr
   209c0:	add	x17, x13, x0
   209c4:	sub	x18, x21, x0
   209c8:	add	x0, x10, x0
   209cc:	ldrb	w1, [x0], #1
   209d0:	subs	x18, x18, #0x1
   209d4:	strb	w1, [x17], #1
   209d8:	b.ne	209cc <PyInit__decimal@@Base+0x19f18>  // b.any
   209dc:	b	2097c <PyInit__decimal@@Base+0x19ec8>
   209e0:	mov	x17, x16
   209e4:	mov	x18, x12
   209e8:	mov	x0, x11
   209ec:	ldp	q0, q1, [x18, #-16]
   209f0:	subs	x0, x0, #0x20
   209f4:	add	x18, x18, #0x20
   209f8:	stp	q0, q1, [x17, #-16]
   209fc:	add	x17, x17, #0x20
   20a00:	b.ne	209ec <PyInit__decimal@@Base+0x19f38>  // b.any
   20a04:	cmp	x21, x11
   20a08:	mov	x0, x11
   20a0c:	b.eq	2097c <PyInit__decimal@@Base+0x19ec8>  // b.none
   20a10:	b	209c0 <PyInit__decimal@@Base+0x19f0c>
   20a14:	ldp	x8, x9, [sp, #48]
   20a18:	ldr	x10, [sp, #72]
   20a1c:	add	x8, x8, x24
   20a20:	add	x9, x9, x23
   20a24:	stp	x8, x9, [sp, #48]
   20a28:	strb	wzr, [x10, x8]
   20a2c:	add	x0, sp, #0x50
   20a30:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
   20a34:	ldr	x0, [sp, #72]
   20a38:	b	20aa4 <PyInit__decimal@@Base+0x19ff0>
   20a3c:	add	x26, x8, #0x1
   20a40:	cmp	x26, #0x0
   20a44:	b.le	20acc <PyInit__decimal@@Base+0x1a018>
   20a48:	ldp	x25, x28, [x22, #8]
   20a4c:	mov	x0, x22
   20a50:	bl	2280c <PyInit__decimal@@Base+0x1bd58>
   20a54:	cbnz	w0, 20a64 <PyInit__decimal@@Base+0x19fb0>
   20a58:	mov	x0, x22
   20a5c:	bl	22818 <PyInit__decimal@@Base+0x1bd64>
   20a60:	cbz	w0, 20ae8 <PyInit__decimal@@Base+0x1a034>
   20a64:	add	x0, sp, #0x50
   20a68:	mov	x2, sp
   20a6c:	mov	x1, x22
   20a70:	bl	24490 <PyInit__decimal@@Base+0x1d9dc>
   20a74:	mov	w3, #0x1                   	// #1
   20a78:	add	x22, sp, #0x50
   20a7c:	ldr	w8, [sp]
   20a80:	mov	w9, #0x3be                 	// #958
   20a84:	ands	w8, w8, w9
   20a88:	b.eq	20418 <PyInit__decimal@@Base+0x19964>  // b.none
   20a8c:	ldr	w9, [x20]
   20a90:	orr	w8, w9, w8
   20a94:	str	w8, [x20]
   20a98:	add	x0, sp, #0x50
   20a9c:	bl	2299c <PyInit__decimal@@Base+0x1bee8>
   20aa0:	mov	x0, xzr
   20aa4:	add	sp, sp, #0x290
   20aa8:	ldp	x20, x19, [sp, #80]
   20aac:	ldp	x22, x21, [sp, #64]
   20ab0:	ldp	x24, x23, [sp, #48]
   20ab4:	ldp	x26, x25, [sp, #32]
   20ab8:	ldp	x28, x27, [sp, #16]
   20abc:	ldp	x29, x30, [sp], #96
   20ac0:	ret
   20ac4:	mov	x24, x22
   20ac8:	b	20664 <PyInit__decimal@@Base+0x19bb0>
   20acc:	add	x0, sp, #0x50
   20ad0:	mov	x2, sp
   20ad4:	mov	w1, #0x100                 	// #256
   20ad8:	add	x22, sp, #0x50
   20adc:	bl	23368 <PyInit__decimal@@Base+0x1c8b4>
   20ae0:	mov	w3, #0x1                   	// #1
   20ae4:	b	20a7c <PyInit__decimal@@Base+0x19fc8>
   20ae8:	sub	x8, x25, x26
   20aec:	add	x25, x8, x28
   20af0:	add	x0, sp, #0x50
   20af4:	mov	x4, sp
   20af8:	mov	x1, x22
   20afc:	mov	x2, x25
   20b00:	mov	x3, x24
   20b04:	bl	37e70 <PyInit__decimal@@Base+0x313bc>
   20b08:	ldr	x8, [sp, #96]
   20b0c:	cmp	x8, x26
   20b10:	b.le	20a74 <PyInit__decimal@@Base+0x19fc0>
   20b14:	add	x2, x25, #0x1
   20b18:	add	x0, sp, #0x50
   20b1c:	add	x1, sp, #0x50
   20b20:	mov	x4, sp
   20b24:	mov	x3, x24
   20b28:	add	x22, sp, #0x50
   20b2c:	bl	37e70 <PyInit__decimal@@Base+0x313bc>
   20b30:	mov	w3, #0x1                   	// #1
   20b34:	b	20a7c <PyInit__decimal@@Base+0x19fc8>
   20b38:	bl	6700 <abort@plt>
   20b3c:	sub	sp, sp, #0x60
   20b40:	stp	x29, x30, [sp, #48]
   20b44:	str	x21, [sp, #64]
   20b48:	stp	x20, x19, [sp, #80]
   20b4c:	add	x29, sp, #0x30
   20b50:	mov	x20, x2
   20b54:	mov	x21, x0
   20b58:	mov	x0, sp
   20b5c:	mov	w2, #0x1                   	// #1
   20b60:	mov	x19, x3
   20b64:	bl	1fe98 <PyInit__decimal@@Base+0x193e4>
   20b68:	cbz	w0, 20b84 <PyInit__decimal@@Base+0x1a0d0>
   20b6c:	mov	x1, sp
   20b70:	mov	x0, x21
   20b74:	mov	x2, x20
   20b78:	mov	x3, x19
   20b7c:	bl	2031c <PyInit__decimal@@Base+0x19868>
   20b80:	b	20b94 <PyInit__decimal@@Base+0x1a0e0>
   20b84:	ldr	w8, [x19]
   20b88:	mov	x0, xzr
   20b8c:	orr	w8, w8, #0x100
   20b90:	str	w8, [x19]
   20b94:	ldp	x20, x19, [sp, #80]
   20b98:	ldr	x21, [sp, #64]
   20b9c:	ldp	x29, x30, [sp, #48]
   20ba0:	add	sp, sp, #0x60
   20ba4:	ret
   20ba8:	stp	x29, x30, [sp, #-48]!
   20bac:	stp	x22, x21, [sp, #16]
   20bb0:	stp	x20, x19, [sp, #32]
   20bb4:	mov	x29, sp
   20bb8:	mov	w22, w2
   20bbc:	mov	w20, w1
   20bc0:	mov	x19, x0
   20bc4:	strb	wzr, [x0]
   20bc8:	tbnz	w2, #0, 20c04 <PyInit__decimal@@Base+0x1a150>
   20bcc:	mov	x21, x19
   20bd0:	tbnz	w22, #1, 20c40 <PyInit__decimal@@Base+0x1a18c>
   20bd4:	tbnz	w22, #2, 20c78 <PyInit__decimal@@Base+0x1a1c4>
   20bd8:	tbnz	w22, #3, 20cb0 <PyInit__decimal@@Base+0x1a1fc>
   20bdc:	tbnz	w22, #4, 20ce8 <PyInit__decimal@@Base+0x1a234>
   20be0:	tbnz	w22, #5, 20d20 <PyInit__decimal@@Base+0x1a26c>
   20be4:	tbnz	w22, #6, 20d58 <PyInit__decimal@@Base+0x1a2a4>
   20be8:	tbnz	w22, #7, 20d90 <PyInit__decimal@@Base+0x1a2dc>
   20bec:	tbnz	w22, #8, 20dc8 <PyInit__decimal@@Base+0x1a314>
   20bf0:	tbnz	w22, #9, 20e00 <PyInit__decimal@@Base+0x1a34c>
   20bf4:	tbnz	w22, #10, 20e38 <PyInit__decimal@@Base+0x1a384>
   20bf8:	tbnz	w22, #11, 20e70 <PyInit__decimal@@Base+0x1a3bc>
   20bfc:	tbnz	w22, #12, 20ea8 <PyInit__decimal@@Base+0x1a3f4>
   20c00:	b	20edc <PyInit__decimal@@Base+0x1a428>
   20c04:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20c08:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20c0c:	sxtw	x1, w20
   20c10:	add	x2, x2, #0xf67
   20c14:	add	x3, x3, #0x934
   20c18:	mov	x0, x19
   20c1c:	bl	6550 <snprintf@plt>
   20c20:	mov	w8, w0
   20c24:	mov	w0, #0xffffffff            	// #-1
   20c28:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20c2c:	cmp	w8, w20
   20c30:	b.ge	20f64 <PyInit__decimal@@Base+0x1a4b0>  // b.tcont
   20c34:	add	x21, x19, w8, uxtw
   20c38:	sub	w20, w20, w8
   20c3c:	tbz	w22, #1, 20bd4 <PyInit__decimal@@Base+0x1a120>
   20c40:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20c44:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20c48:	sxtw	x1, w20
   20c4c:	add	x2, x2, #0xf67
   20c50:	add	x3, x3, #0xf8e
   20c54:	mov	x0, x21
   20c58:	bl	6550 <snprintf@plt>
   20c5c:	mov	w8, w0
   20c60:	mov	w0, #0xffffffff            	// #-1
   20c64:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20c68:	subs	w20, w20, w8
   20c6c:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20c70:	add	x21, x21, w8, uxtw
   20c74:	tbz	w22, #2, 20bd8 <PyInit__decimal@@Base+0x1a124>
   20c78:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20c7c:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20c80:	sxtw	x1, w20
   20c84:	add	x2, x2, #0xf67
   20c88:	add	x3, x3, #0xfa0
   20c8c:	mov	x0, x21
   20c90:	bl	6550 <snprintf@plt>
   20c94:	mov	w8, w0
   20c98:	mov	w0, #0xffffffff            	// #-1
   20c9c:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20ca0:	subs	w20, w20, w8
   20ca4:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20ca8:	add	x21, x21, w8, uxtw
   20cac:	tbz	w22, #3, 20bdc <PyInit__decimal@@Base+0x1a128>
   20cb0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20cb4:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20cb8:	sxtw	x1, w20
   20cbc:	add	x2, x2, #0xf67
   20cc0:	add	x3, x3, #0xfb1
   20cc4:	mov	x0, x21
   20cc8:	bl	6550 <snprintf@plt>
   20ccc:	mov	w8, w0
   20cd0:	mov	w0, #0xffffffff            	// #-1
   20cd4:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20cd8:	subs	w20, w20, w8
   20cdc:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20ce0:	add	x21, x21, w8, uxtw
   20ce4:	tbz	w22, #4, 20be0 <PyInit__decimal@@Base+0x1a12c>
   20ce8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20cec:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20cf0:	sxtw	x1, w20
   20cf4:	add	x2, x2, #0xf67
   20cf8:	add	x3, x3, #0xfc5
   20cfc:	mov	x0, x21
   20d00:	bl	6550 <snprintf@plt>
   20d04:	mov	w8, w0
   20d08:	mov	w0, #0xffffffff            	// #-1
   20d0c:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20d10:	subs	w20, w20, w8
   20d14:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20d18:	add	x21, x21, w8, uxtw
   20d1c:	tbz	w22, #5, 20be4 <PyInit__decimal@@Base+0x1a130>
   20d20:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20d24:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20d28:	sxtw	x1, w20
   20d2c:	add	x2, x2, #0xf67
   20d30:	add	x3, x3, #0xfd8
   20d34:	mov	x0, x21
   20d38:	bl	6550 <snprintf@plt>
   20d3c:	mov	w8, w0
   20d40:	mov	w0, #0xffffffff            	// #-1
   20d44:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20d48:	subs	w20, w20, w8
   20d4c:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20d50:	add	x21, x21, w8, uxtw
   20d54:	tbz	w22, #6, 20be8 <PyInit__decimal@@Base+0x1a134>
   20d58:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20d5c:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20d60:	sxtw	x1, w20
   20d64:	add	x2, x2, #0xf67
   20d68:	add	x3, x3, #0x914
   20d6c:	mov	x0, x21
   20d70:	bl	6550 <snprintf@plt>
   20d74:	mov	w8, w0
   20d78:	mov	w0, #0xffffffff            	// #-1
   20d7c:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20d80:	subs	w20, w20, w8
   20d84:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20d88:	add	x21, x21, w8, uxtw
   20d8c:	tbz	w22, #7, 20bec <PyInit__decimal@@Base+0x1a138>
   20d90:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20d94:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20d98:	sxtw	x1, w20
   20d9c:	add	x2, x2, #0xf67
   20da0:	add	x3, x3, #0xfe2
   20da4:	mov	x0, x21
   20da8:	bl	6550 <snprintf@plt>
   20dac:	mov	w8, w0
   20db0:	mov	w0, #0xffffffff            	// #-1
   20db4:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20db8:	subs	w20, w20, w8
   20dbc:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20dc0:	add	x21, x21, w8, uxtw
   20dc4:	tbz	w22, #8, 20bf0 <PyInit__decimal@@Base+0x1a13c>
   20dc8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20dcc:	adrp	x3, 45000 <PyInit__decimal@@Base+0x3e54c>
   20dd0:	sxtw	x1, w20
   20dd4:	add	x2, x2, #0xf67
   20dd8:	add	x3, x3, #0x14
   20ddc:	mov	x0, x21
   20de0:	bl	6550 <snprintf@plt>
   20de4:	mov	w8, w0
   20de8:	mov	w0, #0xffffffff            	// #-1
   20dec:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20df0:	subs	w20, w20, w8
   20df4:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20df8:	add	x21, x21, w8, uxtw
   20dfc:	tbz	w22, #9, 20bf4 <PyInit__decimal@@Base+0x1a140>
   20e00:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20e04:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20e08:	sxtw	x1, w20
   20e0c:	add	x2, x2, #0xf67
   20e10:	add	x3, x3, #0xff2
   20e14:	mov	x0, x21
   20e18:	bl	6550 <snprintf@plt>
   20e1c:	mov	w8, w0
   20e20:	mov	w0, #0xffffffff            	// #-1
   20e24:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20e28:	subs	w20, w20, w8
   20e2c:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20e30:	add	x21, x21, w8, uxtw
   20e34:	tbz	w22, #10, 20bf8 <PyInit__decimal@@Base+0x1a144>
   20e38:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20e3c:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20e40:	sxtw	x1, w20
   20e44:	add	x2, x2, #0xf67
   20e48:	add	x3, x3, #0xfff
   20e4c:	mov	x0, x21
   20e50:	bl	6550 <snprintf@plt>
   20e54:	mov	w8, w0
   20e58:	mov	w0, #0xffffffff            	// #-1
   20e5c:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20e60:	subs	w20, w20, w8
   20e64:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20e68:	add	x21, x21, w8, uxtw
   20e6c:	tbz	w22, #11, 20bfc <PyInit__decimal@@Base+0x1a148>
   20e70:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20e74:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20e78:	sxtw	x1, w20
   20e7c:	add	x2, x2, #0xf67
   20e80:	add	x3, x3, #0x8df
   20e84:	mov	x0, x21
   20e88:	bl	6550 <snprintf@plt>
   20e8c:	mov	w8, w0
   20e90:	mov	w0, #0xffffffff            	// #-1
   20e94:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20e98:	subs	w20, w20, w8
   20e9c:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20ea0:	add	x21, x21, w8, uxtw
   20ea4:	tbz	w22, #12, 20edc <PyInit__decimal@@Base+0x1a428>
   20ea8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20eac:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20eb0:	sxtw	x1, w20
   20eb4:	add	x2, x2, #0xf67
   20eb8:	add	x3, x3, #0x924
   20ebc:	mov	x0, x21
   20ec0:	bl	6550 <snprintf@plt>
   20ec4:	mov	w8, w0
   20ec8:	mov	w0, #0xffffffff            	// #-1
   20ecc:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20ed0:	subs	w20, w20, w8
   20ed4:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20ed8:	add	x21, x21, w8, uxtw
   20edc:	tbz	w22, #13, 20f14 <PyInit__decimal@@Base+0x1a460>
   20ee0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20ee4:	adrp	x3, 45000 <PyInit__decimal@@Base+0x3e54c>
   20ee8:	sxtw	x1, w20
   20eec:	add	x2, x2, #0xf67
   20ef0:	add	x3, x3, #0xa27
   20ef4:	mov	x0, x21
   20ef8:	bl	6550 <snprintf@plt>
   20efc:	mov	w8, w0
   20f00:	mov	w0, #0xffffffff            	// #-1
   20f04:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20f08:	subs	w20, w20, w8
   20f0c:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20f10:	add	x21, x21, w8, uxtw
   20f14:	tbz	w22, #14, 20f4c <PyInit__decimal@@Base+0x1a498>
   20f18:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20f1c:	adrp	x3, 44000 <PyInit__decimal@@Base+0x3d54c>
   20f20:	sxtw	x1, w20
   20f24:	add	x2, x2, #0xf67
   20f28:	add	x3, x3, #0x8f0
   20f2c:	mov	x0, x21
   20f30:	bl	6550 <snprintf@plt>
   20f34:	mov	w8, w0
   20f38:	mov	w0, #0xffffffff            	// #-1
   20f3c:	tbnz	w8, #31, 20f64 <PyInit__decimal@@Base+0x1a4b0>
   20f40:	cmp	w20, w8
   20f44:	b.le	20f64 <PyInit__decimal@@Base+0x1a4b0>
   20f48:	add	x21, x21, w8, uxtw
   20f4c:	cmp	x21, x19
   20f50:	mov	x8, x19
   20f54:	b.eq	20f60 <PyInit__decimal@@Base+0x1a4ac>  // b.none
   20f58:	strb	wzr, [x21, #-1]!
   20f5c:	mov	x8, x21
   20f60:	sub	w0, w8, w19
   20f64:	ldp	x20, x19, [sp, #32]
   20f68:	ldp	x22, x21, [sp, #16]
   20f6c:	ldp	x29, x30, [sp], #48
   20f70:	ret
   20f74:	stp	x29, x30, [sp, #-64]!
   20f78:	stp	x24, x23, [sp, #16]
   20f7c:	stp	x22, x21, [sp, #32]
   20f80:	stp	x20, x19, [sp, #48]
   20f84:	mov	x29, sp
   20f88:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   20f8c:	add	x8, x8, #0xb68
   20f90:	cmp	x3, #0x0
   20f94:	mov	w9, #0x5b                  	// #91
   20f98:	mov	x20, x0
   20f9c:	mov	w21, w2
   20fa0:	mov	x19, x0
   20fa4:	csel	x24, x8, x3, eq  // eq = none
   20fa8:	strh	w9, [x20], #1
   20fac:	sub	w23, w1, #0x1
   20fb0:	tbnz	w2, #0, 20fec <PyInit__decimal@@Base+0x1a538>
   20fb4:	mov	x22, x20
   20fb8:	tbnz	w21, #1, 21020 <PyInit__decimal@@Base+0x1a56c>
   20fbc:	tbnz	w21, #2, 21054 <PyInit__decimal@@Base+0x1a5a0>
   20fc0:	tbnz	w21, #3, 21088 <PyInit__decimal@@Base+0x1a5d4>
   20fc4:	tbnz	w21, #4, 210bc <PyInit__decimal@@Base+0x1a608>
   20fc8:	tbnz	w21, #5, 210f0 <PyInit__decimal@@Base+0x1a63c>
   20fcc:	tbnz	w21, #6, 21124 <PyInit__decimal@@Base+0x1a670>
   20fd0:	tbnz	w21, #7, 21158 <PyInit__decimal@@Base+0x1a6a4>
   20fd4:	tbnz	w21, #8, 2118c <PyInit__decimal@@Base+0x1a6d8>
   20fd8:	tbnz	w21, #9, 211c0 <PyInit__decimal@@Base+0x1a70c>
   20fdc:	tbnz	w21, #10, 211f4 <PyInit__decimal@@Base+0x1a740>
   20fe0:	tbnz	w21, #11, 21228 <PyInit__decimal@@Base+0x1a774>
   20fe4:	tbnz	w21, #12, 2125c <PyInit__decimal@@Base+0x1a7a8>
   20fe8:	b	2128c <PyInit__decimal@@Base+0x1a7d8>
   20fec:	ldr	x3, [x24]
   20ff0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   20ff4:	sxtw	x1, w23
   20ff8:	add	x2, x2, #0xf6b
   20ffc:	mov	x0, x20
   21000:	bl	6550 <snprintf@plt>
   21004:	mov	w8, w0
   21008:	mov	w0, #0xffffffff            	// #-1
   2100c:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21010:	subs	w23, w23, w8
   21014:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21018:	add	x22, x20, w8, uxtw
   2101c:	tbz	w21, #1, 20fbc <PyInit__decimal@@Base+0x1a508>
   21020:	ldr	x3, [x24, #8]
   21024:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21028:	sxtw	x1, w23
   2102c:	add	x2, x2, #0xf6b
   21030:	mov	x0, x22
   21034:	bl	6550 <snprintf@plt>
   21038:	mov	w8, w0
   2103c:	mov	w0, #0xffffffff            	// #-1
   21040:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21044:	subs	w23, w23, w8
   21048:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   2104c:	add	x22, x22, w8, uxtw
   21050:	tbz	w21, #2, 20fc0 <PyInit__decimal@@Base+0x1a50c>
   21054:	ldr	x3, [x24, #16]
   21058:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   2105c:	sxtw	x1, w23
   21060:	add	x2, x2, #0xf6b
   21064:	mov	x0, x22
   21068:	bl	6550 <snprintf@plt>
   2106c:	mov	w8, w0
   21070:	mov	w0, #0xffffffff            	// #-1
   21074:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21078:	subs	w23, w23, w8
   2107c:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21080:	add	x22, x22, w8, uxtw
   21084:	tbz	w21, #3, 20fc4 <PyInit__decimal@@Base+0x1a510>
   21088:	ldr	x3, [x24, #24]
   2108c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21090:	sxtw	x1, w23
   21094:	add	x2, x2, #0xf6b
   21098:	mov	x0, x22
   2109c:	bl	6550 <snprintf@plt>
   210a0:	mov	w8, w0
   210a4:	mov	w0, #0xffffffff            	// #-1
   210a8:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   210ac:	subs	w23, w23, w8
   210b0:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   210b4:	add	x22, x22, w8, uxtw
   210b8:	tbz	w21, #4, 20fc8 <PyInit__decimal@@Base+0x1a514>
   210bc:	ldr	x3, [x24, #32]
   210c0:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   210c4:	sxtw	x1, w23
   210c8:	add	x2, x2, #0xf6b
   210cc:	mov	x0, x22
   210d0:	bl	6550 <snprintf@plt>
   210d4:	mov	w8, w0
   210d8:	mov	w0, #0xffffffff            	// #-1
   210dc:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   210e0:	subs	w23, w23, w8
   210e4:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   210e8:	add	x22, x22, w8, uxtw
   210ec:	tbz	w21, #5, 20fcc <PyInit__decimal@@Base+0x1a518>
   210f0:	ldr	x3, [x24, #40]
   210f4:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   210f8:	sxtw	x1, w23
   210fc:	add	x2, x2, #0xf6b
   21100:	mov	x0, x22
   21104:	bl	6550 <snprintf@plt>
   21108:	mov	w8, w0
   2110c:	mov	w0, #0xffffffff            	// #-1
   21110:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21114:	subs	w23, w23, w8
   21118:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   2111c:	add	x22, x22, w8, uxtw
   21120:	tbz	w21, #6, 20fd0 <PyInit__decimal@@Base+0x1a51c>
   21124:	ldr	x3, [x24, #48]
   21128:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   2112c:	sxtw	x1, w23
   21130:	add	x2, x2, #0xf6b
   21134:	mov	x0, x22
   21138:	bl	6550 <snprintf@plt>
   2113c:	mov	w8, w0
   21140:	mov	w0, #0xffffffff            	// #-1
   21144:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21148:	subs	w23, w23, w8
   2114c:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21150:	add	x22, x22, w8, uxtw
   21154:	tbz	w21, #7, 20fd4 <PyInit__decimal@@Base+0x1a520>
   21158:	ldr	x3, [x24, #56]
   2115c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21160:	sxtw	x1, w23
   21164:	add	x2, x2, #0xf6b
   21168:	mov	x0, x22
   2116c:	bl	6550 <snprintf@plt>
   21170:	mov	w8, w0
   21174:	mov	w0, #0xffffffff            	// #-1
   21178:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   2117c:	subs	w23, w23, w8
   21180:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21184:	add	x22, x22, w8, uxtw
   21188:	tbz	w21, #8, 20fd8 <PyInit__decimal@@Base+0x1a524>
   2118c:	ldr	x3, [x24, #64]
   21190:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21194:	sxtw	x1, w23
   21198:	add	x2, x2, #0xf6b
   2119c:	mov	x0, x22
   211a0:	bl	6550 <snprintf@plt>
   211a4:	mov	w8, w0
   211a8:	mov	w0, #0xffffffff            	// #-1
   211ac:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   211b0:	subs	w23, w23, w8
   211b4:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   211b8:	add	x22, x22, w8, uxtw
   211bc:	tbz	w21, #9, 20fdc <PyInit__decimal@@Base+0x1a528>
   211c0:	ldr	x3, [x24, #72]
   211c4:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   211c8:	sxtw	x1, w23
   211cc:	add	x2, x2, #0xf6b
   211d0:	mov	x0, x22
   211d4:	bl	6550 <snprintf@plt>
   211d8:	mov	w8, w0
   211dc:	mov	w0, #0xffffffff            	// #-1
   211e0:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   211e4:	subs	w23, w23, w8
   211e8:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   211ec:	add	x22, x22, w8, uxtw
   211f0:	tbz	w21, #10, 20fe0 <PyInit__decimal@@Base+0x1a52c>
   211f4:	ldr	x3, [x24, #80]
   211f8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   211fc:	sxtw	x1, w23
   21200:	add	x2, x2, #0xf6b
   21204:	mov	x0, x22
   21208:	bl	6550 <snprintf@plt>
   2120c:	mov	w8, w0
   21210:	mov	w0, #0xffffffff            	// #-1
   21214:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21218:	subs	w23, w23, w8
   2121c:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21220:	add	x22, x22, w8, uxtw
   21224:	tbz	w21, #11, 20fe4 <PyInit__decimal@@Base+0x1a530>
   21228:	ldr	x3, [x24, #88]
   2122c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21230:	sxtw	x1, w23
   21234:	add	x2, x2, #0xf6b
   21238:	mov	x0, x22
   2123c:	bl	6550 <snprintf@plt>
   21240:	mov	w8, w0
   21244:	mov	w0, #0xffffffff            	// #-1
   21248:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   2124c:	subs	w23, w23, w8
   21250:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21254:	add	x22, x22, w8, uxtw
   21258:	tbz	w21, #12, 2128c <PyInit__decimal@@Base+0x1a7d8>
   2125c:	ldr	x3, [x24, #96]
   21260:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21264:	sxtw	x1, w23
   21268:	add	x2, x2, #0xf6b
   2126c:	mov	x0, x22
   21270:	bl	6550 <snprintf@plt>
   21274:	mov	w8, w0
   21278:	mov	w0, #0xffffffff            	// #-1
   2127c:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   21280:	subs	w23, w23, w8
   21284:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   21288:	add	x22, x22, w8, uxtw
   2128c:	tbz	w21, #13, 212c0 <PyInit__decimal@@Base+0x1a80c>
   21290:	ldr	x3, [x24, #104]
   21294:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   21298:	sxtw	x1, w23
   2129c:	add	x2, x2, #0xf6b
   212a0:	mov	x0, x22
   212a4:	bl	6550 <snprintf@plt>
   212a8:	mov	w8, w0
   212ac:	mov	w0, #0xffffffff            	// #-1
   212b0:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   212b4:	subs	w23, w23, w8
   212b8:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   212bc:	add	x22, x22, w8, uxtw
   212c0:	tbz	w21, #14, 212f4 <PyInit__decimal@@Base+0x1a840>
   212c4:	ldr	x3, [x24, #112]
   212c8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   212cc:	sxtw	x1, w23
   212d0:	add	x2, x2, #0xf6b
   212d4:	mov	x0, x22
   212d8:	bl	6550 <snprintf@plt>
   212dc:	mov	w8, w0
   212e0:	mov	w0, #0xffffffff            	// #-1
   212e4:	tbnz	w8, #31, 21310 <PyInit__decimal@@Base+0x1a85c>
   212e8:	cmp	w23, w8
   212ec:	b.le	21310 <PyInit__decimal@@Base+0x1a85c>
   212f0:	add	x22, x22, w8, uxtw
   212f4:	sub	x8, x22, #0x2
   212f8:	cmp	x22, x20
   212fc:	mov	w9, #0x5d                  	// #93
   21300:	csel	x8, x22, x8, eq  // eq = none
   21304:	strh	w9, [x8]
   21308:	sub	w8, w8, w19
   2130c:	add	w0, w8, #0x1
   21310:	ldp	x20, x19, [sp, #48]
   21314:	ldp	x22, x21, [sp, #32]
   21318:	ldp	x24, x23, [sp, #16]
   2131c:	ldp	x29, x30, [sp], #64
   21320:	ret
   21324:	sub	sp, sp, #0x70
   21328:	stp	x29, x30, [sp, #16]
   2132c:	stp	x28, x27, [sp, #32]
   21330:	stp	x26, x25, [sp, #48]
   21334:	stp	x24, x23, [sp, #64]
   21338:	stp	x22, x21, [sp, #80]
   2133c:	stp	x20, x19, [sp, #96]
   21340:	add	x29, sp, #0x10
   21344:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   21348:	mov	w9, #0x5b                  	// #91
   2134c:	mov	x25, x0
   21350:	add	x8, x8, #0xbe0
   21354:	cmp	x3, #0x0
   21358:	strh	w9, [x25], #1
   2135c:	adrp	x22, 44000 <PyInit__decimal@@Base+0x3d54c>
   21360:	mov	w20, w2
   21364:	mov	x23, xzr
   21368:	mov	w24, wzr
   2136c:	sub	w26, w1, #0x1
   21370:	mov	w27, #0x1                   	// #1
   21374:	csel	x28, x8, x3, eq  // eq = none
   21378:	mov	w19, #0x3ba                 	// #954
   2137c:	add	x22, x22, #0xf6b
   21380:	mov	x21, x25
   21384:	str	x0, [sp, #8]
   21388:	b	21398 <PyInit__decimal@@Base+0x1a8e4>
   2138c:	add	x23, x23, #0x1
   21390:	cmp	x23, #0xf
   21394:	b.eq	213e4 <PyInit__decimal@@Base+0x1a930>  // b.none
   21398:	lsl	w8, w27, w23
   2139c:	ands	w8, w8, w20
   213a0:	b.eq	2138c <PyInit__decimal@@Base+0x1a8d8>  // b.none
   213a4:	tst	w8, w19
   213a8:	b.eq	213b4 <PyInit__decimal@@Base+0x1a900>  // b.none
   213ac:	cbnz	w24, 2138c <PyInit__decimal@@Base+0x1a8d8>
   213b0:	mov	w24, #0x1                   	// #1
   213b4:	ldr	x3, [x28, x23, lsl #3]
   213b8:	sxtw	x1, w26
   213bc:	mov	x0, x21
   213c0:	mov	x2, x22
   213c4:	bl	6550 <snprintf@plt>
   213c8:	mov	w8, w0
   213cc:	mov	w0, #0xffffffff            	// #-1
   213d0:	tbnz	w8, #31, 21404 <PyInit__decimal@@Base+0x1a950>
   213d4:	subs	w26, w26, w8
   213d8:	b.le	21404 <PyInit__decimal@@Base+0x1a950>
   213dc:	add	x21, x21, w8, uxtw
   213e0:	b	2138c <PyInit__decimal@@Base+0x1a8d8>
   213e4:	sub	x8, x21, #0x2
   213e8:	cmp	x21, x25
   213ec:	mov	w9, #0x5d                  	// #93
   213f0:	csel	x8, x21, x8, eq  // eq = none
   213f4:	strh	w9, [x8]
   213f8:	ldr	x9, [sp, #8]
   213fc:	sub	w8, w8, w9
   21400:	add	w0, w8, #0x1
   21404:	ldp	x20, x19, [sp, #96]
   21408:	ldp	x22, x21, [sp, #80]
   2140c:	ldp	x24, x23, [sp, #64]
   21410:	ldp	x26, x25, [sp, #48]
   21414:	ldp	x28, x27, [sp, #32]
   21418:	ldp	x29, x30, [sp, #16]
   2141c:	add	sp, sp, #0x70
   21420:	ret
   21424:	sub	sp, sp, #0x30
   21428:	stp	x29, x30, [sp, #16]
   2142c:	stp	x20, x19, [sp, #32]
   21430:	add	x29, sp, #0x10
   21434:	mov	x19, x0
   21438:	add	x0, sp, #0x8
   2143c:	mov	w2, #0x3                   	// #3
   21440:	mov	w3, #0x1                   	// #1
   21444:	bl	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   21448:	ldr	x20, [sp, #8]
   2144c:	cbz	x20, 21480 <PyInit__decimal@@Base+0x1a9cc>
   21450:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   21454:	add	x1, x1, #0xf70
   21458:	mov	x0, x19
   2145c:	mov	x2, x20
   21460:	bl	69b0 <fprintf@plt>
   21464:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21468:	ldr	x1, [x8, #1376]
   2146c:	mov	x0, x20
   21470:	ldp	x20, x19, [sp, #32]
   21474:	ldp	x29, x30, [sp, #16]
   21478:	add	sp, sp, #0x30
   2147c:	br	x1
   21480:	mov	x3, x19
   21484:	ldp	x20, x19, [sp, #32]
   21488:	ldp	x29, x30, [sp, #16]
   2148c:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   21490:	add	x0, x0, #0xf74
   21494:	mov	w1, #0x19                  	// #25
   21498:	mov	w2, #0x1                   	// #1
   2149c:	add	sp, sp, #0x30
   214a0:	b	6870 <fwrite@plt>
   214a4:	stp	x29, x30, [sp, #-32]!
   214a8:	str	x19, [sp, #16]
   214ac:	mov	x29, sp
   214b0:	mov	x1, x0
   214b4:	add	x0, x29, #0x18
   214b8:	mov	w2, #0x3                   	// #3
   214bc:	mov	w3, #0x1                   	// #1
   214c0:	bl	1f8e0 <PyInit__decimal@@Base+0x18e2c>
   214c4:	ldr	x19, [x29, #24]
   214c8:	cbz	x19, 214ec <PyInit__decimal@@Base+0x1aa38>
   214cc:	mov	x0, x19
   214d0:	bl	6750 <puts@plt>
   214d4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   214d8:	ldr	x1, [x8, #1376]
   214dc:	mov	x0, x19
   214e0:	ldr	x19, [sp, #16]
   214e4:	ldp	x29, x30, [sp], #32
   214e8:	br	x1
   214ec:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   214f0:	ldr	x8, [x8, #3904]
   214f4:	ldr	x19, [sp, #16]
   214f8:	adrp	x0, 44000 <PyInit__decimal@@Base+0x3d54c>
   214fc:	add	x0, x0, #0xf74
   21500:	ldr	x3, [x8]
   21504:	mov	w1, #0x19                  	// #25
   21508:	mov	w2, #0x1                   	// #1
   2150c:	ldp	x29, x30, [sp], #32
   21510:	b	6870 <fwrite@plt>
   21514:	sub	w8, w2, #0x2
   21518:	cmp	w8, #0x12
   2151c:	b.hi	21a20 <PyInit__decimal@@Base+0x1af6c>  // b.pmore
   21520:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   21524:	add	x9, x9, #0xf3a
   21528:	adr	x10, 21538 <PyInit__decimal@@Base+0x1aa84>
   2152c:	ldrh	w11, [x9, x8, lsl #1]
   21530:	add	x10, x10, x11, lsl #2
   21534:	br	x10
   21538:	cmp	x0, x3
   2153c:	b.ne	21548 <PyInit__decimal@@Base+0x1aa94>  // b.any
   21540:	mov	w8, #0x2e                  	// #46
   21544:	strb	w8, [x0], #1
   21548:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   2154c:	movk	x8, #0x2304, lsl #32
   21550:	mov	x10, #0x76180000            	// #1981284352
   21554:	movk	x8, #0x8ac7, lsl #48
   21558:	movk	x10, #0xdcfb, lsl #32
   2155c:	mov	w9, #0x30                  	// #48
   21560:	movk	x10, #0x7538, lsl #48
   21564:	cmp	x1, x8
   21568:	add	x8, x8, #0x1
   2156c:	add	x10, x1, x10
   21570:	cinc	w9, w9, hi  // hi = pmore
   21574:	cmp	x1, x8
   21578:	strb	w9, [x0], #1
   2157c:	csel	x1, x1, x10, cc  // cc = lo, ul, last
   21580:	cmp	x0, x3
   21584:	b.ne	21594 <PyInit__decimal@@Base+0x1aae0>  // b.any
   21588:	mov	w8, #0x2e                  	// #46
   2158c:	mov	x0, x3
   21590:	strb	w8, [x0], #1
   21594:	mov	x9, #0x490f                	// #18703
   21598:	movk	x9, #0x7747, lsl #16
   2159c:	lsr	x8, x1, #18
   215a0:	movk	x9, #0x49c9, lsl #32
   215a4:	mov	x10, #0xa7640000            	// #2808348672
   215a8:	umulh	x8, x8, x9
   215ac:	movk	x10, #0xb6b3, lsl #32
   215b0:	lsr	x8, x8, #24
   215b4:	movk	x10, #0xde0, lsl #48
   215b8:	add	w9, w8, #0x30
   215bc:	strb	w9, [x0], #1
   215c0:	msub	x1, x8, x10, x1
   215c4:	cmp	x0, x3
   215c8:	b.ne	215d8 <PyInit__decimal@@Base+0x1ab24>  // b.any
   215cc:	mov	w8, #0x2e                  	// #46
   215d0:	mov	x0, x3
   215d4:	strb	w8, [x0], #1
   215d8:	mov	x9, #0x1b53                	// #6995
   215dc:	movk	x9, #0xd519, lsl #16
   215e0:	lsr	x8, x1, #17
   215e4:	movk	x9, #0x5c3b, lsl #32
   215e8:	mov	x10, #0x5d8a0000            	// #1569325056
   215ec:	umulh	x8, x8, x9
   215f0:	movk	x10, #0x4578, lsl #32
   215f4:	lsr	x8, x8, #22
   215f8:	movk	x10, #0x163, lsl #48
   215fc:	add	w9, w8, #0x30
   21600:	strb	w9, [x0], #1
   21604:	msub	x1, x8, x10, x1
   21608:	cmp	x0, x3
   2160c:	b.ne	2161c <PyInit__decimal@@Base+0x1ab68>  // b.any
   21610:	mov	w8, #0x2e                  	// #46
   21614:	mov	x0, x3
   21618:	strb	w8, [x0], #1
   2161c:	mov	x8, #0x7857                	// #30807
   21620:	movk	x8, #0xb113, lsl #16
   21624:	movk	x8, #0x652f, lsl #32
   21628:	movk	x8, #0x39a5, lsl #48
   2162c:	mov	x9, #0x6fc10000            	// #1874919424
   21630:	umulh	x8, x1, x8
   21634:	movk	x9, #0x86f2, lsl #32
   21638:	lsr	x8, x8, #51
   2163c:	movk	x9, #0x23, lsl #48
   21640:	add	w10, w8, #0x30
   21644:	strb	w10, [x0], #1
   21648:	msub	x1, x8, x9, x1
   2164c:	cmp	x0, x3
   21650:	b.ne	21660 <PyInit__decimal@@Base+0x1abac>  // b.any
   21654:	mov	w8, #0x2e                  	// #46
   21658:	mov	x0, x3
   2165c:	strb	w8, [x0], #1
   21660:	mov	x9, #0xeac3                	// #60099
   21664:	movk	x9, #0xf3dc, lsl #16
   21668:	movk	x9, #0x4075, lsl #32
   2166c:	lsr	x8, x1, #15
   21670:	movk	x9, #0x2, lsl #48
   21674:	mov	x10, #0x3ffffffff8000       	// #1125899906809856
   21678:	umulh	x8, x8, x9
   2167c:	movk	x10, #0xa4c6, lsl #16
   21680:	lsr	x8, x8, #20
   21684:	movk	x10, #0x8d7e, lsl #32
   21688:	add	w9, w8, #0x30
   2168c:	strb	w9, [x0], #1
   21690:	msub	x1, x8, x10, x1
   21694:	cmp	x0, x3
   21698:	b.ne	216a8 <PyInit__decimal@@Base+0x1abf4>  // b.any
   2169c:	mov	w8, #0x2e                  	// #46
   216a0:	mov	x0, x3
   216a4:	strb	w8, [x0], #1
   216a8:	mov	x8, #0xcd81                	// #52609
   216ac:	movk	x8, #0x5095, lsl #16
   216b0:	movk	x8, #0x4dc3, lsl #32
   216b4:	movk	x8, #0xb42, lsl #48
   216b8:	mov	x9, #0x4000                	// #16384
   216bc:	umulh	x8, x1, x8
   216c0:	movk	x9, #0x107a, lsl #16
   216c4:	lsr	x8, x8, #42
   216c8:	movk	x9, #0x5af3, lsl #32
   216cc:	add	w10, w8, #0x30
   216d0:	strb	w10, [x0], #1
   216d4:	msub	x1, x8, x9, x1
   216d8:	cmp	x0, x3
   216dc:	b.ne	216ec <PyInit__decimal@@Base+0x1ac38>  // b.any
   216e0:	mov	w8, #0x2e                  	// #46
   216e4:	mov	x0, x3
   216e8:	strb	w8, [x0], #1
   216ec:	mov	x8, #0x385                 	// #901
   216f0:	movk	x8, #0x92ed, lsl #16
   216f4:	movk	x8, #0x84d0, lsl #32
   216f8:	movk	x8, #0x384b, lsl #48
   216fc:	mov	x9, #0xa000                	// #40960
   21700:	umulh	x8, x1, x8
   21704:	movk	x9, #0x4e72, lsl #16
   21708:	lsr	x8, x8, #41
   2170c:	movk	x9, #0x918, lsl #32
   21710:	add	w10, w8, #0x30
   21714:	strb	w10, [x0], #1
   21718:	msub	x1, x8, x9, x1
   2171c:	cmp	x0, x3
   21720:	b.ne	21730 <PyInit__decimal@@Base+0x1ac7c>  // b.any
   21724:	mov	w8, #0x2e                  	// #46
   21728:	mov	x0, x3
   2172c:	strb	w8, [x0], #1
   21730:	mov	x8, #0x2233                	// #8755
   21734:	movk	x8, #0x5bd4, lsl #16
   21738:	movk	x8, #0x3302, lsl #32
   2173c:	movk	x8, #0x232f, lsl #48
   21740:	mov	x9, #0x1000                	// #4096
   21744:	umulh	x8, x1, x8
   21748:	movk	x9, #0xd4a5, lsl #16
   2174c:	lsr	x8, x8, #37
   21750:	movk	x9, #0xe8, lsl #32
   21754:	add	w10, w8, #0x30
   21758:	strb	w10, [x0], #1
   2175c:	msub	x1, x8, x9, x1
   21760:	cmp	x0, x3
   21764:	b.ne	21774 <PyInit__decimal@@Base+0x1acc0>  // b.any
   21768:	mov	w8, #0x2e                  	// #46
   2176c:	mov	x0, x3
   21770:	strb	w8, [x0], #1
   21774:	mov	x8, #0xaaff                	// #43775
   21778:	movk	x8, #0xcb24, lsl #16
   2177c:	movk	x8, #0xff0b, lsl #32
   21780:	movk	x8, #0xafeb, lsl #48
   21784:	mov	x9, #0xe800                	// #59392
   21788:	umulh	x8, x1, x8
   2178c:	movk	x9, #0x4876, lsl #16
   21790:	lsr	x8, x8, #36
   21794:	movk	x9, #0x17, lsl #32
   21798:	add	w10, w8, #0x30
   2179c:	strb	w10, [x0], #1
   217a0:	msub	x1, x8, x9, x1
   217a4:	cmp	x0, x3
   217a8:	b.ne	217b8 <PyInit__decimal@@Base+0x1ad04>  // b.any
   217ac:	mov	w8, #0x2e                  	// #46
   217b0:	mov	x0, x3
   217b4:	strb	w8, [x0], #1
   217b8:	mov	x8, #0xd5bf                	// #54719
   217bc:	movk	x8, #0xbded, lsl #16
   217c0:	movk	x8, #0xfece, lsl #32
   217c4:	movk	x8, #0xdbe6, lsl #48
   217c8:	mov	x9, #0xe400                	// #58368
   217cc:	umulh	x8, x1, x8
   217d0:	movk	x9, #0x540b, lsl #16
   217d4:	lsr	x8, x8, #33
   217d8:	movk	x9, #0x2, lsl #32
   217dc:	add	w10, w8, #0x30
   217e0:	strb	w10, [x0], #1
   217e4:	msub	x1, x8, x9, x1
   217e8:	cmp	x0, x3
   217ec:	b.ne	217fc <PyInit__decimal@@Base+0x1ad48>  // b.any
   217f0:	mov	w8, #0x2e                  	// #46
   217f4:	mov	x0, x3
   217f8:	strb	w8, [x0], #1
   217fc:	mov	x9, #0x5a53                	// #23123
   21800:	movk	x9, #0xa09b, lsl #16
   21804:	movk	x9, #0xb82f, lsl #32
   21808:	lsr	x8, x1, #9
   2180c:	movk	x9, #0x44, lsl #48
   21810:	umulh	x8, x8, x9
   21814:	mov	w10, #0xca00                	// #51712
   21818:	lsr	x8, x8, #11
   2181c:	movk	w10, #0x3b9a, lsl #16
   21820:	add	w9, w8, #0x30
   21824:	strb	w9, [x0], #1
   21828:	msub	x1, x8, x10, x1
   2182c:	cmp	x0, x3
   21830:	b.ne	21840 <PyInit__decimal@@Base+0x1ad8c>  // b.any
   21834:	mov	w8, #0x2e                  	// #46
   21838:	mov	x0, x3
   2183c:	strb	w8, [x0], #1
   21840:	mov	x8, #0xcefd                	// #52989
   21844:	movk	x8, #0x8461, lsl #16
   21848:	movk	x8, #0x7711, lsl #32
   2184c:	movk	x8, #0xabcc, lsl #48
   21850:	umulh	x8, x1, x8
   21854:	mov	w9, #0xe100                	// #57600
   21858:	lsr	x8, x8, #26
   2185c:	movk	w9, #0x5f5, lsl #16
   21860:	add	w10, w8, #0x30
   21864:	strb	w10, [x0], #1
   21868:	msub	x1, x8, x9, x1
   2186c:	cmp	x0, x3
   21870:	b.ne	21880 <PyInit__decimal@@Base+0x1adcc>  // b.any
   21874:	mov	w8, #0x2e                  	// #46
   21878:	mov	x0, x3
   2187c:	strb	w8, [x0], #1
   21880:	mov	x8, #0x42bd                	// #17085
   21884:	movk	x8, #0xe57a, lsl #16
   21888:	movk	x8, #0x94d5, lsl #32
   2188c:	movk	x8, #0xd6bf, lsl #48
   21890:	umulh	x8, x1, x8
   21894:	mov	w9, #0x9680                	// #38528
   21898:	lsr	x8, x8, #23
   2189c:	movk	w9, #0x98, lsl #16
   218a0:	add	w10, w8, #0x30
   218a4:	strb	w10, [x0], #1
   218a8:	msub	x1, x8, x9, x1
   218ac:	cmp	x0, x3
   218b0:	b.ne	218c0 <PyInit__decimal@@Base+0x1ae0c>  // b.any
   218b4:	mov	w8, #0x2e                  	// #46
   218b8:	mov	x0, x3
   218bc:	strb	w8, [x0], #1
   218c0:	mov	x8, #0x34db                	// #13531
   218c4:	movk	x8, #0xd7b6, lsl #16
   218c8:	movk	x8, #0xde82, lsl #32
   218cc:	movk	x8, #0x431b, lsl #48
   218d0:	umulh	x8, x1, x8
   218d4:	mov	w9, #0x4240                	// #16960
   218d8:	lsr	x8, x8, #18
   218dc:	movk	w9, #0xf, lsl #16
   218e0:	add	w10, w8, #0x30
   218e4:	strb	w10, [x0], #1
   218e8:	msub	x1, x8, x9, x1
   218ec:	cmp	x0, x3
   218f0:	b.ne	21900 <PyInit__decimal@@Base+0x1ae4c>  // b.any
   218f4:	mov	w8, #0x2e                  	// #46
   218f8:	mov	x0, x3
   218fc:	strb	w8, [x0], #1
   21900:	mov	x9, #0x7843                	// #30787
   21904:	movk	x9, #0x71b4, lsl #16
   21908:	movk	x9, #0x5ac4, lsl #32
   2190c:	lsr	x8, x1, #5
   21910:	movk	x9, #0xa7c, lsl #48
   21914:	umulh	x8, x8, x9
   21918:	mov	w10, #0x86a0                	// #34464
   2191c:	lsr	x8, x8, #7
   21920:	movk	w10, #0x1, lsl #16
   21924:	add	w9, w8, #0x30
   21928:	strb	w9, [x0], #1
   2192c:	msub	x1, x8, x10, x1
   21930:	cmp	x0, x3
   21934:	b.ne	21944 <PyInit__decimal@@Base+0x1ae90>  // b.any
   21938:	mov	w8, #0x2e                  	// #46
   2193c:	mov	x0, x3
   21940:	strb	w8, [x0], #1
   21944:	mov	x8, #0x594b                	// #22859
   21948:	movk	x8, #0x3886, lsl #16
   2194c:	movk	x8, #0xc5d6, lsl #32
   21950:	movk	x8, #0x346d, lsl #48
   21954:	umulh	x8, x1, x8
   21958:	lsr	x8, x8, #11
   2195c:	mov	w9, #0x2710                	// #10000
   21960:	add	w10, w8, #0x30
   21964:	strb	w10, [x0], #1
   21968:	msub	x1, x8, x9, x1
   2196c:	cmp	x0, x3
   21970:	b.ne	21980 <PyInit__decimal@@Base+0x1aecc>  // b.any
   21974:	mov	w8, #0x2e                  	// #46
   21978:	mov	x0, x3
   2197c:	strb	w8, [x0], #1
   21980:	mov	x9, #0xf7cf                	// #63439
   21984:	movk	x9, #0xe353, lsl #16
   21988:	movk	x9, #0x9ba5, lsl #32
   2198c:	lsr	x8, x1, #3
   21990:	movk	x9, #0x20c4, lsl #48
   21994:	umulh	x8, x8, x9
   21998:	lsr	x8, x8, #4
   2199c:	mov	w10, #0x3e8                 	// #1000
   219a0:	add	w9, w8, #0x30
   219a4:	strb	w9, [x0], #1
   219a8:	msub	x1, x8, x10, x1
   219ac:	cmp	x0, x3
   219b0:	b.ne	219c0 <PyInit__decimal@@Base+0x1af0c>  // b.any
   219b4:	mov	w8, #0x2e                  	// #46
   219b8:	mov	x0, x3
   219bc:	strb	w8, [x0], #1
   219c0:	mov	x9, #0xf5c3                	// #62915
   219c4:	movk	x9, #0x5c28, lsl #16
   219c8:	movk	x9, #0xc28f, lsl #32
   219cc:	lsr	x8, x1, #2
   219d0:	movk	x9, #0x28f5, lsl #48
   219d4:	umulh	x8, x8, x9
   219d8:	lsr	x8, x8, #2
   219dc:	mov	w10, #0x64                  	// #100
   219e0:	add	w9, w8, #0x30
   219e4:	strb	w9, [x0], #1
   219e8:	msub	x1, x8, x10, x1
   219ec:	cmp	x0, x3
   219f0:	b.ne	21a00 <PyInit__decimal@@Base+0x1af4c>  // b.any
   219f4:	mov	w8, #0x2e                  	// #46
   219f8:	mov	x0, x3
   219fc:	strb	w8, [x0], #1
   21a00:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   21a04:	movk	x8, #0xcccd
   21a08:	umulh	x8, x1, x8
   21a0c:	lsr	x8, x8, #3
   21a10:	mov	w9, #0xa                   	// #10
   21a14:	add	w10, w8, #0x30
   21a18:	strb	w10, [x0], #1
   21a1c:	msub	x1, x8, x9, x1
   21a20:	cmp	x0, x3
   21a24:	b.eq	21a38 <PyInit__decimal@@Base+0x1af84>  // b.none
   21a28:	add	w8, w1, #0x30
   21a2c:	strb	w8, [x0], #1
   21a30:	strb	wzr, [x0]
   21a34:	ret
   21a38:	mov	w8, #0x2e                  	// #46
   21a3c:	strb	w8, [x3], #1
   21a40:	mov	x0, x3
   21a44:	add	w8, w1, #0x30
   21a48:	strb	w8, [x0], #1
   21a4c:	strb	wzr, [x0]
   21a50:	ret
   21a54:	sub	sp, sp, #0x70
   21a58:	stp	x29, x30, [sp, #16]
   21a5c:	stp	x28, x27, [sp, #32]
   21a60:	stp	x26, x25, [sp, #48]
   21a64:	stp	x24, x23, [sp, #64]
   21a68:	stp	x22, x21, [sp, #80]
   21a6c:	stp	x20, x19, [sp, #96]
   21a70:	add	x29, sp, #0x10
   21a74:	mov	x19, x0
   21a78:	ldr	x0, [x7, #32]
   21a7c:	cmp	x1, #0x0
   21a80:	mov	x21, x7
   21a84:	mov	x26, x6
   21a88:	mov	x27, x5
   21a8c:	mov	x25, x4
   21a90:	mov	x22, x3
   21a94:	mov	x24, x2
   21a98:	str	x1, [sp, #8]
   21a9c:	cset	w28, ne  // ne = any
   21aa0:	bl	6420 <strlen@plt>
   21aa4:	ldr	x8, [x19]
   21aa8:	ldr	x9, [x19, #24]
   21aac:	mov	x23, x0
   21ab0:	stp	x26, x26, [x19]
   21ab4:	sub	x10, x8, x26
   21ab8:	str	x10, [x19, #16]
   21abc:	cbz	x9, 21ae8 <PyInit__decimal@@Base+0x1b034>
   21ac0:	cmp	x26, #0x1
   21ac4:	b.mi	21ae8 <PyInit__decimal@@Base+0x1b034>  // b.first
   21ac8:	add	x8, x8, x9
   21acc:	sub	x8, x8, #0x1
   21ad0:	sub	x9, x27, #0x1
   21ad4:	ldrb	w10, [x9, x26]
   21ad8:	sub	x26, x26, #0x1
   21adc:	cmp	x26, #0x0
   21ae0:	strb	w10, [x8], #-1
   21ae4:	b.gt	21ad4 <PyInit__decimal@@Base+0x1b020>
   21ae8:	cbz	x25, 21b40 <PyInit__decimal@@Base+0x1b08c>
   21aec:	mov	x0, x25
   21af0:	bl	6420 <strlen@plt>
   21af4:	ldp	x10, x11, [x19]
   21af8:	ldp	x8, x9, [x19, #16]
   21afc:	cmp	x0, #0x0
   21b00:	add	x10, x10, x0
   21b04:	cinc	x11, x11, gt
   21b08:	sub	x12, x8, x0
   21b0c:	stp	x10, x11, [x19]
   21b10:	str	x12, [x19, #16]
   21b14:	cbz	x9, 21b40 <PyInit__decimal@@Base+0x1b08c>
   21b18:	cmp	x0, #0x1
   21b1c:	b.mi	21b40 <PyInit__decimal@@Base+0x1b08c>  // b.first
   21b20:	add	x8, x8, x9
   21b24:	sub	x8, x8, #0x1
   21b28:	sub	x9, x25, #0x1
   21b2c:	ldrb	w10, [x9, x0]
   21b30:	sub	x0, x0, #0x1
   21b34:	cmp	x0, #0x0
   21b38:	strb	w10, [x8], #-1
   21b3c:	b.gt	21b2c <PyInit__decimal@@Base+0x1b078>
   21b40:	ldr	x25, [x21, #40]
   21b44:	cmp	x23, #0x0
   21b48:	ldrb	w8, [x25]
   21b4c:	b.le	21ccc <PyInit__decimal@@Base+0x1b218>
   21b50:	mov	w27, wzr
   21b54:	sub	x26, x24, #0x1
   21b58:	mov	x24, x8
   21b5c:	ands	w8, w8, #0xff
   21b60:	b.eq	21b74 <PyInit__decimal@@Base+0x1b0c0>  // b.none
   21b64:	cmp	w8, #0xff
   21b68:	b.eq	21b74 <PyInit__decimal@@Base+0x1b0c0>  // b.none
   21b6c:	cmp	x24, x22
   21b70:	b.le	21b78 <PyInit__decimal@@Base+0x1b0c4>
   21b74:	mov	x24, x22
   21b78:	sub	x20, x22, x24
   21b7c:	dup	v0.2d, x24
   21b80:	cbz	w27, 21bc0 <PyInit__decimal@@Base+0x1b10c>
   21b84:	ldr	q1, [x19]
   21b88:	ldr	x8, [x19, #16]
   21b8c:	cmp	x24, #0x1
   21b90:	add	v0.2d, v1.2d, v0.2d
   21b94:	sub	x8, x8, x24
   21b98:	str	q0, [x19]
   21b9c:	str	x8, [x19, #16]
   21ba0:	b.mi	21c08 <PyInit__decimal@@Base+0x1b154>  // b.first
   21ba4:	ldr	x9, [x19, #24]
   21ba8:	cbz	x9, 21c08 <PyInit__decimal@@Base+0x1b154>
   21bac:	add	x0, x9, x8
   21bb0:	mov	w1, #0x30                  	// #48
   21bb4:	mov	x2, x24
   21bb8:	bl	65b0 <memset@plt>
   21bbc:	b	21c08 <PyInit__decimal@@Base+0x1b154>
   21bc0:	ldr	q1, [x19]
   21bc4:	ldp	x8, x9, [x19, #16]
   21bc8:	add	v0.2d, v1.2d, v0.2d
   21bcc:	sub	x10, x8, x24
   21bd0:	str	q0, [x19]
   21bd4:	str	x10, [x19, #16]
   21bd8:	cbz	x9, 21c08 <PyInit__decimal@@Base+0x1b154>
   21bdc:	cmp	x24, #0x1
   21be0:	b.mi	21c08 <PyInit__decimal@@Base+0x1b154>  // b.first
   21be4:	add	x8, x9, x8
   21be8:	sub	x8, x8, #0x1
   21bec:	add	x9, x26, x22
   21bf0:	mov	x10, x24
   21bf4:	ldrb	w11, [x9], #-1
   21bf8:	sub	x10, x10, #0x1
   21bfc:	cmp	x10, #0x0
   21c00:	strb	w11, [x8], #-1
   21c04:	b.gt	21bf4 <PyInit__decimal@@Base+0x1b140>
   21c08:	cbnz	x20, 21c3c <PyInit__decimal@@Base+0x1b188>
   21c0c:	ldrb	w8, [x21, #17]
   21c10:	cmp	w8, #0x7a
   21c14:	b.ne	21de4 <PyInit__decimal@@Base+0x1b330>  // b.any
   21c18:	ldr	x8, [x19, #8]
   21c1c:	ldr	x9, [x21]
   21c20:	add	x8, x8, x28
   21c24:	subs	x22, x9, x8
   21c28:	b.le	21de4 <PyInit__decimal@@Base+0x1b330>
   21c2c:	ldrb	w8, [x25]
   21c30:	mov	w27, #0x1                   	// #1
   21c34:	sub	x24, x8, x24
   21c38:	b	21b5c <PyInit__decimal@@Base+0x1b0a8>
   21c3c:	ldp	x9, x12, [x19]
   21c40:	cmp	w27, #0x0
   21c44:	cset	w8, ne  // ne = any
   21c48:	cmp	x20, #0x1
   21c4c:	cset	w11, gt
   21c50:	add	x9, x9, x23
   21c54:	ldr	x10, [x21, #32]
   21c58:	and	w8, w8, w11
   21c5c:	str	x9, [x19]
   21c60:	ldp	x9, x11, [x19, #16]
   21c64:	add	x12, x12, #0x1
   21c68:	str	x12, [x19, #8]
   21c6c:	sub	x12, x9, x23
   21c70:	str	x12, [x19, #16]
   21c74:	cbz	x11, 21c98 <PyInit__decimal@@Base+0x1b1e4>
   21c78:	add	x9, x11, x9
   21c7c:	sub	x9, x9, #0x1
   21c80:	sub	x10, x10, #0x1
   21c84:	mov	x11, x23
   21c88:	ldrb	w12, [x10, x11]
   21c8c:	subs	x11, x11, #0x1
   21c90:	strb	w12, [x9], #-1
   21c94:	b.gt	21c88 <PyInit__decimal@@Base+0x1b1d4>
   21c98:	ldrb	w9, [x25]
   21c9c:	sub	x22, x20, x8
   21ca0:	cbz	w9, 21cc0 <PyInit__decimal@@Base+0x1b20c>
   21ca4:	mov	x8, x25
   21ca8:	ldrb	w9, [x8, #1]!
   21cac:	cmp	w9, #0x0
   21cb0:	csel	x25, x25, x8, eq  // eq = none
   21cb4:	ldrb	w8, [x25]
   21cb8:	mov	x24, x8
   21cbc:	b	21b5c <PyInit__decimal@@Base+0x1b0a8>
   21cc0:	mov	w8, wzr
   21cc4:	mov	x24, x8
   21cc8:	b	21b5c <PyInit__decimal@@Base+0x1b0a8>
   21ccc:	mov	w26, wzr
   21cd0:	sub	x24, x24, #0x1
   21cd4:	mov	x23, x8
   21cd8:	mov	x9, x22
   21cdc:	ands	w8, w8, #0xff
   21ce0:	b.eq	21cf4 <PyInit__decimal@@Base+0x1b240>  // b.none
   21ce4:	cmp	w8, #0xff
   21ce8:	b.eq	21cf4 <PyInit__decimal@@Base+0x1b240>  // b.none
   21cec:	cmp	x23, x9
   21cf0:	b.le	21cf8 <PyInit__decimal@@Base+0x1b244>
   21cf4:	mov	x23, x9
   21cf8:	sub	x22, x9, x23
   21cfc:	dup	v0.2d, x23
   21d00:	cbz	w26, 21d40 <PyInit__decimal@@Base+0x1b28c>
   21d04:	ldr	q1, [x19]
   21d08:	ldr	x8, [x19, #16]
   21d0c:	cmp	x23, #0x1
   21d10:	add	v0.2d, v1.2d, v0.2d
   21d14:	sub	x8, x8, x23
   21d18:	str	q0, [x19]
   21d1c:	str	x8, [x19, #16]
   21d20:	b.mi	21d88 <PyInit__decimal@@Base+0x1b2d4>  // b.first
   21d24:	ldr	x9, [x19, #24]
   21d28:	cbz	x9, 21d88 <PyInit__decimal@@Base+0x1b2d4>
   21d2c:	add	x0, x9, x8
   21d30:	mov	w1, #0x30                  	// #48
   21d34:	mov	x2, x23
   21d38:	bl	65b0 <memset@plt>
   21d3c:	b	21d88 <PyInit__decimal@@Base+0x1b2d4>
   21d40:	ldr	q1, [x19]
   21d44:	ldp	x8, x10, [x19, #16]
   21d48:	add	v0.2d, v1.2d, v0.2d
   21d4c:	sub	x11, x8, x23
   21d50:	str	q0, [x19]
   21d54:	str	x11, [x19, #16]
   21d58:	cbz	x10, 21d88 <PyInit__decimal@@Base+0x1b2d4>
   21d5c:	cmp	x23, #0x1
   21d60:	b.mi	21d88 <PyInit__decimal@@Base+0x1b2d4>  // b.first
   21d64:	add	x8, x10, x8
   21d68:	sub	x8, x8, #0x1
   21d6c:	add	x9, x24, x9
   21d70:	mov	x10, x23
   21d74:	ldrb	w11, [x9], #-1
   21d78:	sub	x10, x10, #0x1
   21d7c:	cmp	x10, #0x0
   21d80:	strb	w11, [x8], #-1
   21d84:	b.gt	21d74 <PyInit__decimal@@Base+0x1b2c0>
   21d88:	cbnz	x22, 21dc4 <PyInit__decimal@@Base+0x1b310>
   21d8c:	ldrb	w8, [x21, #17]
   21d90:	cmp	w8, #0x7a
   21d94:	b.ne	21de4 <PyInit__decimal@@Base+0x1b330>  // b.any
   21d98:	ldr	x8, [x19, #8]
   21d9c:	ldr	x9, [x21]
   21da0:	add	x8, x8, x28
   21da4:	subs	x9, x9, x8
   21da8:	b.le	21de4 <PyInit__decimal@@Base+0x1b330>
   21dac:	ldrb	w8, [x25]
   21db0:	mov	w26, #0x1                   	// #1
   21db4:	sub	x23, x8, x23
   21db8:	ands	w8, w8, #0xff
   21dbc:	b.ne	21ce4 <PyInit__decimal@@Base+0x1b230>  // b.any
   21dc0:	b	21cf4 <PyInit__decimal@@Base+0x1b240>
   21dc4:	ldrb	w8, [x25]
   21dc8:	cbz	w8, 21cd4 <PyInit__decimal@@Base+0x1b220>
   21dcc:	mov	x8, x25
   21dd0:	ldrb	w9, [x8, #1]!
   21dd4:	cmp	w9, #0x0
   21dd8:	csel	x25, x25, x8, eq  // eq = none
   21ddc:	ldrb	w8, [x25]
   21de0:	b	21cd4 <PyInit__decimal@@Base+0x1b220>
   21de4:	ldr	x11, [sp, #8]
   21de8:	cbz	x11, 21e18 <PyInit__decimal@@Base+0x1b364>
   21dec:	ldr	q0, [x19]
   21df0:	ldp	x10, x8, [x19, #16]
   21df4:	mov	w9, #0x1                   	// #1
   21df8:	dup	v1.2d, x9
   21dfc:	add	v0.2d, v0.2d, v1.2d
   21e00:	sub	x9, x10, #0x1
   21e04:	str	q0, [x19]
   21e08:	str	x9, [x19, #16]
   21e0c:	cbz	x8, 21e28 <PyInit__decimal@@Base+0x1b374>
   21e10:	ldrb	w10, [x11]
   21e14:	strb	w10, [x8, x9]
   21e18:	ldr	x8, [x19, #24]
   21e1c:	cbz	x8, 21e28 <PyInit__decimal@@Base+0x1b374>
   21e20:	ldr	x9, [x19]
   21e24:	strb	wzr, [x8, x9]
   21e28:	ldp	x20, x19, [sp, #96]
   21e2c:	ldp	x22, x21, [sp, #80]
   21e30:	ldp	x24, x23, [sp, #64]
   21e34:	ldp	x26, x25, [sp, #48]
   21e38:	ldp	x28, x27, [sp, #32]
   21e3c:	ldp	x29, x30, [sp, #16]
   21e40:	add	sp, sp, #0x70
   21e44:	ret
   21e48:	stp	x29, x30, [sp, #-32]!
   21e4c:	stp	x20, x19, [sp, #16]
   21e50:	mov	x29, sp
   21e54:	umulh	x8, x1, x0
   21e58:	cmp	xzr, x8
   21e5c:	mov	x19, xzr
   21e60:	b.ne	21e90 <PyInit__decimal@@Base+0x1b3dc>  // b.any
   21e64:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21e68:	ldr	x8, [x8, #1352]
   21e6c:	mul	x20, x1, x0
   21e70:	mov	x0, x20
   21e74:	blr	x8
   21e78:	mov	x19, x0
   21e7c:	cbz	x0, 21e90 <PyInit__decimal@@Base+0x1b3dc>
   21e80:	mov	x0, x19
   21e84:	mov	w1, wzr
   21e88:	mov	x2, x20
   21e8c:	bl	65b0 <memset@plt>
   21e90:	mov	x0, x19
   21e94:	ldp	x20, x19, [sp, #16]
   21e98:	ldp	x29, x30, [sp], #32
   21e9c:	ret
   21ea0:	umulh	x8, x1, x0
   21ea4:	cmp	xzr, x8
   21ea8:	b.eq	21eb4 <PyInit__decimal@@Base+0x1b400>  // b.none
   21eac:	mov	x0, xzr
   21eb0:	ret
   21eb4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21eb8:	ldr	x2, [x8, #1352]
   21ebc:	mul	x0, x1, x0
   21ec0:	br	x2
   21ec4:	umulh	x8, x1, x0
   21ec8:	cmp	xzr, x8
   21ecc:	b.eq	21ed8 <PyInit__decimal@@Base+0x1b424>  // b.none
   21ed0:	mov	x0, xzr
   21ed4:	ret
   21ed8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21edc:	ldr	x2, [x8, #1368]
   21ee0:	br	x2
   21ee4:	stp	x29, x30, [sp, #-32]!
   21ee8:	stp	x20, x19, [sp, #16]
   21eec:	mov	x29, sp
   21ef0:	umulh	x8, x2, x1
   21ef4:	mov	x19, x3
   21ef8:	cmp	xzr, x8
   21efc:	mov	x20, x0
   21f00:	b.ne	21f28 <PyInit__decimal@@Base+0x1b474>  // b.any
   21f04:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21f08:	ldr	x8, [x8, #1360]
   21f0c:	mul	x1, x2, x1
   21f10:	mov	x0, x20
   21f14:	blr	x8
   21f18:	cbz	x0, 21f28 <PyInit__decimal@@Base+0x1b474>
   21f1c:	ldp	x20, x19, [sp, #16]
   21f20:	ldp	x29, x30, [sp], #32
   21f24:	ret
   21f28:	mov	w8, #0x1                   	// #1
   21f2c:	mov	x0, x20
   21f30:	strb	w8, [x19]
   21f34:	ldp	x20, x19, [sp, #16]
   21f38:	ldp	x29, x30, [sp], #32
   21f3c:	ret
   21f40:	umulh	x8, x2, x1
   21f44:	cmp	xzr, x8
   21f48:	b.ne	21f58 <PyInit__decimal@@Base+0x1b4a4>  // b.any
   21f4c:	mul	x8, x2, x1
   21f50:	adds	x0, x8, x0
   21f54:	b.cc	21f60 <PyInit__decimal@@Base+0x1b4ac>  // b.lo, b.ul, b.last
   21f58:	mov	x0, xzr
   21f5c:	ret
   21f60:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21f64:	ldr	x1, [x8, #1352]
   21f68:	br	x1
   21f6c:	stp	x29, x30, [sp, #-48]!
   21f70:	str	x21, [sp, #16]
   21f74:	stp	x20, x19, [sp, #32]
   21f78:	mov	x29, sp
   21f7c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21f80:	ldr	x8, [x8, #1344]
   21f84:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   21f88:	ldr	x9, [x21, #1352]
   21f8c:	cmp	x8, x0
   21f90:	csel	x20, x8, x0, gt
   21f94:	mov	w0, #0x30                  	// #48
   21f98:	blr	x9
   21f9c:	mov	x19, x0
   21fa0:	cbz	x0, 21fec <PyInit__decimal@@Base+0x1b538>
   21fa4:	cmp	xzr, x20, lsr #61
   21fa8:	b.eq	21fb4 <PyInit__decimal@@Base+0x1b500>  // b.none
   21fac:	str	xzr, [x19, #40]
   21fb0:	b	21fd8 <PyInit__decimal@@Base+0x1b524>
   21fb4:	ldr	x8, [x21, #1352]
   21fb8:	lsl	x0, x20, #3
   21fbc:	blr	x8
   21fc0:	str	x0, [x19, #40]
   21fc4:	cbz	x0, 21fd8 <PyInit__decimal@@Base+0x1b524>
   21fc8:	strb	wzr, [x19]
   21fcc:	stp	xzr, xzr, [x19, #8]
   21fd0:	stp	xzr, x20, [x19, #24]
   21fd4:	b	21fec <PyInit__decimal@@Base+0x1b538>
   21fd8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   21fdc:	ldr	x8, [x8, #1376]
   21fe0:	mov	x0, x19
   21fe4:	blr	x8
   21fe8:	mov	x19, xzr
   21fec:	mov	x0, x19
   21ff0:	ldp	x20, x19, [sp, #32]
   21ff4:	ldr	x21, [sp, #16]
   21ff8:	ldp	x29, x30, [sp], #48
   21ffc:	ret
   22000:	stp	x29, x30, [sp, #-48]!
   22004:	str	x21, [sp, #16]
   22008:	stp	x20, x19, [sp, #32]
   2200c:	mov	x29, sp
   22010:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   22014:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   22018:	ldr	x20, [x8, #1344]
   2201c:	ldr	x8, [x21, #1352]
   22020:	mov	w0, #0x30                  	// #48
   22024:	blr	x8
   22028:	mov	x19, x0
   2202c:	cbz	x0, 22078 <PyInit__decimal@@Base+0x1b5c4>
   22030:	cmp	xzr, x20, lsr #61
   22034:	b.eq	22040 <PyInit__decimal@@Base+0x1b58c>  // b.none
   22038:	str	xzr, [x19, #40]
   2203c:	b	22064 <PyInit__decimal@@Base+0x1b5b0>
   22040:	ldr	x8, [x21, #1352]
   22044:	lsl	x0, x20, #3
   22048:	blr	x8
   2204c:	str	x0, [x19, #40]
   22050:	cbz	x0, 22064 <PyInit__decimal@@Base+0x1b5b0>
   22054:	strb	wzr, [x19]
   22058:	stp	xzr, xzr, [x19, #8]
   2205c:	stp	xzr, x20, [x19, #24]
   22060:	b	22078 <PyInit__decimal@@Base+0x1b5c4>
   22064:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   22068:	ldr	x8, [x8, #1376]
   2206c:	mov	x0, x19
   22070:	blr	x8
   22074:	mov	x19, xzr
   22078:	mov	x0, x19
   2207c:	ldp	x20, x19, [sp, #32]
   22080:	ldr	x21, [sp, #16]
   22084:	ldp	x29, x30, [sp], #48
   22088:	ret
   2208c:	stp	x29, x30, [sp, #-48]!
   22090:	stp	x22, x21, [sp, #16]
   22094:	stp	x20, x19, [sp, #32]
   22098:	mov	x29, sp
   2209c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   220a0:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   220a4:	ldr	x21, [x8, #1344]
   220a8:	ldr	x8, [x22, #1352]
   220ac:	mov	x19, x0
   220b0:	mov	w0, #0x30                  	// #48
   220b4:	blr	x8
   220b8:	cbz	x0, 22104 <PyInit__decimal@@Base+0x1b650>
   220bc:	mov	x20, x0
   220c0:	cmp	xzr, x21, lsr #61
   220c4:	b.eq	220d0 <PyInit__decimal@@Base+0x1b61c>  // b.none
   220c8:	str	xzr, [x20, #40]
   220cc:	b	220f4 <PyInit__decimal@@Base+0x1b640>
   220d0:	ldr	x8, [x22, #1352]
   220d4:	lsl	x0, x21, #3
   220d8:	blr	x8
   220dc:	str	x0, [x20, #40]
   220e0:	cbz	x0, 220f4 <PyInit__decimal@@Base+0x1b640>
   220e4:	strb	wzr, [x20]
   220e8:	stp	xzr, xzr, [x20, #8]
   220ec:	stp	xzr, x21, [x20, #24]
   220f0:	b	22114 <PyInit__decimal@@Base+0x1b660>
   220f4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   220f8:	ldr	x8, [x8, #1376]
   220fc:	mov	x0, x20
   22100:	blr	x8
   22104:	mov	w1, #0x200                 	// #512
   22108:	mov	x0, x19
   2210c:	bl	1d990 <PyInit__decimal@@Base+0x16edc>
   22110:	mov	x20, xzr
   22114:	mov	x0, x20
   22118:	ldp	x20, x19, [sp, #32]
   2211c:	ldp	x22, x21, [sp, #16]
   22120:	ldp	x29, x30, [sp], #48
   22124:	ret
   22128:	stp	x29, x30, [sp, #-48]!
   2212c:	stp	x22, x21, [sp, #16]
   22130:	stp	x20, x19, [sp, #32]
   22134:	mov	x29, sp
   22138:	ldr	x21, [x0, #40]
   2213c:	mov	x19, x0
   22140:	cmp	xzr, x1, lsr #61
   22144:	mov	x20, x2
   22148:	b.eq	22154 <PyInit__decimal@@Base+0x1b6a0>  // b.none
   2214c:	str	xzr, [x19, #40]
   22150:	b	221a0 <PyInit__decimal@@Base+0x1b6ec>
   22154:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   22158:	ldr	x8, [x8, #1352]
   2215c:	lsl	x0, x1, #3
   22160:	mov	x22, x1
   22164:	blr	x8
   22168:	str	x0, [x19, #40]
   2216c:	cbz	x0, 221a0 <PyInit__decimal@@Base+0x1b6ec>
   22170:	ldr	x8, [x19, #32]
   22174:	mov	x1, x21
   22178:	lsl	x2, x8, #3
   2217c:	bl	63c0 <memcpy@plt>
   22180:	mov	x0, x19
   22184:	str	x22, [x19, #32]
   22188:	bl	22e60 <PyInit__decimal@@Base+0x1c3ac>
   2218c:	mov	w0, #0x1                   	// #1
   22190:	ldp	x20, x19, [sp, #32]
   22194:	ldp	x22, x21, [sp, #16]
   22198:	ldp	x29, x30, [sp], #48
   2219c:	ret
   221a0:	mov	x0, x19
   221a4:	str	x21, [x19, #40]
   221a8:	bl	22df8 <PyInit__decimal@@Base+0x1c344>
   221ac:	mov	x0, x19
   221b0:	bl	22e30 <PyInit__decimal@@Base+0x1c37c>
   221b4:	stp	xzr, xzr, [x19, #8]
   221b8:	str	xzr, [x19, #24]
   221bc:	ldr	w8, [x20]
   221c0:	mov	w0, wzr
   221c4:	orr	w8, w8, #0x200
   221c8:	str	w8, [x20]
   221cc:	ldp	x20, x19, [sp, #32]
   221d0:	ldp	x22, x21, [sp, #16]
   221d4:	ldp	x29, x30, [sp], #48
   221d8:	ret
   221dc:	stp	x29, x30, [sp, #-48]!
   221e0:	stp	x22, x21, [sp, #16]
   221e4:	stp	x20, x19, [sp, #32]
   221e8:	mov	x29, sp
   221ec:	ldr	x22, [x0, #40]
   221f0:	mov	x19, x0
   221f4:	lsr	x8, x1, #61
   221f8:	mov	x20, x2
   221fc:	cbz	x8, 22208 <PyInit__decimal@@Base+0x1b754>
   22200:	str	xzr, [x19, #40]
   22204:	b	22248 <PyInit__decimal@@Base+0x1b794>
   22208:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2220c:	ldr	x8, [x8, #1368]
   22210:	mov	x21, x1
   22214:	mov	w1, #0x8                   	// #8
   22218:	mov	x0, x21
   2221c:	blr	x8
   22220:	str	x0, [x19, #40]
   22224:	cbz	x0, 22248 <PyInit__decimal@@Base+0x1b794>
   22228:	mov	x0, x19
   2222c:	str	x21, [x19, #32]
   22230:	bl	22e60 <PyInit__decimal@@Base+0x1c3ac>
   22234:	mov	w0, #0x1                   	// #1
   22238:	ldp	x20, x19, [sp, #32]
   2223c:	ldp	x22, x21, [sp, #16]
   22240:	ldp	x29, x30, [sp], #48
   22244:	ret
   22248:	mov	x0, x19
   2224c:	str	x22, [x19, #40]
   22250:	bl	22df8 <PyInit__decimal@@Base+0x1c344>
   22254:	mov	x0, x19
   22258:	bl	22e30 <PyInit__decimal@@Base+0x1c37c>
   2225c:	stp	xzr, xzr, [x19, #8]
   22260:	str	xzr, [x19, #24]
   22264:	ldr	w8, [x20]
   22268:	mov	w0, wzr
   2226c:	orr	w8, w8, #0x200
   22270:	str	w8, [x20]
   22274:	ldp	x20, x19, [sp, #32]
   22278:	ldp	x22, x21, [sp, #16]
   2227c:	ldp	x29, x30, [sp], #48
   22280:	ret
   22284:	stp	x29, x30, [sp, #-48]!
   22288:	stp	x22, x21, [sp, #16]
   2228c:	stp	x20, x19, [sp, #32]
   22290:	mov	x29, sp
   22294:	ldr	x22, [x0, #40]
   22298:	mov	x19, x0
   2229c:	mov	x21, x1
   222a0:	cmp	xzr, x1, lsr #61
   222a4:	mov	x20, x2
   222a8:	b.ne	222cc <PyInit__decimal@@Base+0x1b818>  // b.any
   222ac:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   222b0:	ldr	x8, [x8, #1360]
   222b4:	lsl	x1, x21, #3
   222b8:	mov	x0, x22
   222bc:	blr	x8
   222c0:	cbz	x0, 222cc <PyInit__decimal@@Base+0x1b818>
   222c4:	stp	x21, x0, [x19, #32]
   222c8:	b	22314 <PyInit__decimal@@Base+0x1b860>
   222cc:	ldr	x8, [x19, #32]
   222d0:	str	x22, [x19, #40]
   222d4:	cmp	x8, x21
   222d8:	b.ge	22314 <PyInit__decimal@@Base+0x1b860>  // b.tcont
   222dc:	mov	x0, x19
   222e0:	bl	22df8 <PyInit__decimal@@Base+0x1c344>
   222e4:	mov	x0, x19
   222e8:	bl	22e30 <PyInit__decimal@@Base+0x1c37c>
   222ec:	stp	xzr, xzr, [x19, #8]
   222f0:	str	xzr, [x19, #24]
   222f4:	ldr	w8, [x20]
   222f8:	mov	w0, wzr
   222fc:	orr	w8, w8, #0x200
   22300:	str	w8, [x20]
   22304:	ldp	x20, x19, [sp, #32]
   22308:	ldp	x22, x21, [sp, #16]
   2230c:	ldp	x29, x30, [sp], #48
   22310:	ret
   22314:	mov	w0, #0x1                   	// #1
   22318:	ldp	x20, x19, [sp, #32]
   2231c:	ldp	x22, x21, [sp, #16]
   22320:	ldp	x29, x30, [sp], #48
   22324:	ret
   22328:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   2232c:	add	x0, x0, #0xa08
   22330:	ret
   22334:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   22338:	add	x8, x8, #0xca0
   2233c:	ldr	x9, [x8, #72]
   22340:	cmp	x9, x0
   22344:	b.ls	22374 <PyInit__decimal@@Base+0x1b8c0>  // b.plast
   22348:	ldr	x9, [x8, #32]
   2234c:	cmp	x9, x0
   22350:	b.ls	223a0 <PyInit__decimal@@Base+0x1b8ec>  // b.plast
   22354:	ldr	x9, [x8, #16]
   22358:	cmp	x9, x0
   2235c:	b.ls	223ec <PyInit__decimal@@Base+0x1b938>  // b.plast
   22360:	ldr	x8, [x8, #8]
   22364:	cmp	x8, x0
   22368:	mov	w8, #0x1                   	// #1
   2236c:	cinc	w0, w8, ls  // ls = plast
   22370:	ret
   22374:	ldr	x9, [x8, #112]
   22378:	cmp	x9, x0
   2237c:	b.ls	223c0 <PyInit__decimal@@Base+0x1b90c>  // b.plast
   22380:	ldr	x9, [x8, #88]
   22384:	cmp	x9, x0
   22388:	b.ls	22400 <PyInit__decimal@@Base+0x1b94c>  // b.plast
   2238c:	ldr	x8, [x8, #80]
   22390:	cmp	x8, x0
   22394:	mov	w8, #0xa                   	// #10
   22398:	cinc	w0, w8, ls  // ls = plast
   2239c:	ret
   223a0:	ldr	x9, [x8, #48]
   223a4:	cmp	x9, x0
   223a8:	b.ls	22420 <PyInit__decimal@@Base+0x1b96c>  // b.plast
   223ac:	ldr	x8, [x8, #40]
   223b0:	cmp	x8, x0
   223b4:	mov	w8, #0x5                   	// #5
   223b8:	cinc	w0, w8, ls  // ls = plast
   223bc:	ret
   223c0:	ldr	x9, [x8, #144]
   223c4:	cmp	x9, x0
   223c8:	b.ls	22440 <PyInit__decimal@@Base+0x1b98c>  // b.plast
   223cc:	ldr	x9, [x8, #128]
   223d0:	cmp	x9, x0
   223d4:	b.ls	22454 <PyInit__decimal@@Base+0x1b9a0>  // b.plast
   223d8:	ldr	x8, [x8, #120]
   223dc:	cmp	x8, x0
   223e0:	mov	w8, #0xf                   	// #15
   223e4:	cinc	w0, w8, ls  // ls = plast
   223e8:	ret
   223ec:	ldr	x8, [x8, #24]
   223f0:	cmp	x8, x0
   223f4:	mov	w8, #0x3                   	// #3
   223f8:	cinc	w0, w8, ls  // ls = plast
   223fc:	ret
   22400:	ldr	x9, [x8, #104]
   22404:	cmp	x9, x0
   22408:	b.ls	22468 <PyInit__decimal@@Base+0x1b9b4>  // b.plast
   2240c:	ldr	x8, [x8, #96]
   22410:	cmp	x8, x0
   22414:	mov	w8, #0xc                   	// #12
   22418:	cinc	w0, w8, ls  // ls = plast
   2241c:	ret
   22420:	ldr	x9, [x8, #64]
   22424:	cmp	x9, x0
   22428:	b.ls	22470 <PyInit__decimal@@Base+0x1b9bc>  // b.plast
   2242c:	ldr	x8, [x8, #56]
   22430:	cmp	x8, x0
   22434:	mov	w8, #0x7                   	// #7
   22438:	cinc	w0, w8, ls  // ls = plast
   2243c:	ret
   22440:	ldr	x8, [x8, #152]
   22444:	cmp	x8, x0
   22448:	mov	w8, #0x13                  	// #19
   2244c:	cinc	w0, w8, ls  // ls = plast
   22450:	ret
   22454:	ldr	x8, [x8, #136]
   22458:	cmp	x8, x0
   2245c:	mov	w8, #0x11                  	// #17
   22460:	cinc	w0, w8, ls  // ls = plast
   22464:	ret
   22468:	mov	w0, #0xe                   	// #14
   2246c:	ret
   22470:	mov	w0, #0x9                   	// #9
   22474:	ret
   22478:	ldp	x8, x9, [x0, #8]
   2247c:	add	x8, x8, x9
   22480:	sub	x0, x8, #0x1
   22484:	ret
   22488:	ldr	x8, [x0, #16]
   2248c:	ldr	x9, [x0]
   22490:	sub	x8, x8, x9
   22494:	add	x0, x8, #0x1
   22498:	ret
   2249c:	ldp	x9, x8, [x0]
   224a0:	sub	x8, x8, x9
   224a4:	add	x0, x8, #0x1
   224a8:	ret
   224ac:	ldr	x8, [x0, #40]
   224b0:	ldr	x9, [x0, #24]
   224b4:	add	x8, x8, x9, lsl #3
   224b8:	ldur	x0, [x8, #-8]
   224bc:	ret
   224c0:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   224c4:	add	x8, x8, #0xca0
   224c8:	ldr	x9, [x8, #72]
   224cc:	cmp	x9, x0
   224d0:	b.ls	224fc <PyInit__decimal@@Base+0x1ba48>  // b.plast
   224d4:	ldr	x9, [x8, #32]
   224d8:	cmp	x9, x0
   224dc:	b.ls	22524 <PyInit__decimal@@Base+0x1ba70>  // b.plast
   224e0:	ldr	x9, [x8, #16]
   224e4:	cmp	x9, x0
   224e8:	b.ls	22568 <PyInit__decimal@@Base+0x1bab4>  // b.plast
   224ec:	ldr	x9, [x8, #8]
   224f0:	cmp	x9, x0
   224f4:	mov	w9, #0x1                   	// #1
   224f8:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   224fc:	ldr	x9, [x8, #112]
   22500:	cmp	x9, x0
   22504:	b.ls	22540 <PyInit__decimal@@Base+0x1ba8c>  // b.plast
   22508:	ldr	x9, [x8, #88]
   2250c:	cmp	x9, x0
   22510:	b.ls	22578 <PyInit__decimal@@Base+0x1bac4>  // b.plast
   22514:	ldr	x9, [x8, #80]
   22518:	cmp	x9, x0
   2251c:	mov	w9, #0xa                   	// #10
   22520:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   22524:	ldr	x9, [x8, #48]
   22528:	cmp	x9, x0
   2252c:	b.ls	22594 <PyInit__decimal@@Base+0x1bae0>  // b.plast
   22530:	ldr	x9, [x8, #40]
   22534:	cmp	x9, x0
   22538:	mov	w9, #0x5                   	// #5
   2253c:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   22540:	ldr	x9, [x8, #144]
   22544:	cmp	x9, x0
   22548:	b.ls	225b0 <PyInit__decimal@@Base+0x1bafc>  // b.plast
   2254c:	ldr	x9, [x8, #128]
   22550:	cmp	x9, x0
   22554:	b.ls	225c0 <PyInit__decimal@@Base+0x1bb0c>  // b.plast
   22558:	ldr	x9, [x8, #120]
   2255c:	cmp	x9, x0
   22560:	mov	w9, #0xf                   	// #15
   22564:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   22568:	ldr	x9, [x8, #24]
   2256c:	cmp	x9, x0
   22570:	mov	w9, #0x3                   	// #3
   22574:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   22578:	ldr	x9, [x8, #104]
   2257c:	cmp	x9, x0
   22580:	b.ls	225e0 <PyInit__decimal@@Base+0x1bb2c>  // b.plast
   22584:	ldr	x9, [x8, #96]
   22588:	cmp	x9, x0
   2258c:	mov	w9, #0xc                   	// #12
   22590:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   22594:	ldr	x9, [x8, #64]
   22598:	cmp	x9, x0
   2259c:	b.ls	225f4 <PyInit__decimal@@Base+0x1bb40>  // b.plast
   225a0:	ldr	x9, [x8, #56]
   225a4:	cmp	x9, x0
   225a8:	mov	w9, #0x7                   	// #7
   225ac:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   225b0:	ldr	x9, [x8, #152]
   225b4:	cmp	x9, x0
   225b8:	mov	w9, #0x13                  	// #19
   225bc:	b	225cc <PyInit__decimal@@Base+0x1bb18>
   225c0:	ldr	x9, [x8, #136]
   225c4:	cmp	x9, x0
   225c8:	mov	w9, #0x11                  	// #17
   225cc:	cinc	x9, x9, ls  // ls = plast
   225d0:	add	x8, x8, x9, lsl #3
   225d4:	ldur	x8, [x8, #-8]
   225d8:	udiv	x0, x0, x8
   225dc:	ret
   225e0:	mov	w9, #0xe                   	// #14
   225e4:	add	x8, x8, x9, lsl #3
   225e8:	ldur	x8, [x8, #-8]
   225ec:	udiv	x0, x0, x8
   225f0:	ret
   225f4:	mov	w9, #0x9                   	// #9
   225f8:	add	x8, x8, x9, lsl #3
   225fc:	ldur	x8, [x8, #-8]
   22600:	udiv	x0, x0, x8
   22604:	ret
   22608:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   2260c:	movk	x8, #0xcccd
   22610:	umulh	x8, x0, x8
   22614:	lsr	x8, x8, #3
   22618:	mov	w9, #0xa                   	// #10
   2261c:	msub	x0, x8, x9, x0
   22620:	ret
   22624:	mov	x8, #0x9436                	// #37942
   22628:	movk	x8, #0x50d7, lsl #16
   2262c:	movk	x8, #0x435e, lsl #32
   22630:	movk	x8, #0xd79, lsl #48
   22634:	smulh	x8, x0, x8
   22638:	add	x8, x8, x8, lsr #63
   2263c:	mov	x9, #0xffffffffffffffed    	// #-19
   22640:	mul	x9, x8, x9
   22644:	cmn	x9, x0
   22648:	cinc	x0, x8, ne  // ne = any
   2264c:	ret
   22650:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   22654:	add	x9, x9, #0xca0
   22658:	ldr	x10, [x9, #72]
   2265c:	cmp	x0, #0x0
   22660:	cneg	x8, x0, mi  // mi = first
   22664:	cmp	x10, x8
   22668:	b.ls	22698 <PyInit__decimal@@Base+0x1bbe4>  // b.plast
   2266c:	ldr	x10, [x9, #32]
   22670:	cmp	x10, x8
   22674:	b.ls	226c4 <PyInit__decimal@@Base+0x1bc10>  // b.plast
   22678:	ldr	x10, [x9, #16]
   2267c:	cmp	x10, x8
   22680:	b.ls	22710 <PyInit__decimal@@Base+0x1bc5c>  // b.plast
   22684:	ldr	x9, [x9, #8]
   22688:	cmp	x9, x8
   2268c:	mov	w8, #0x1                   	// #1
   22690:	cinc	w0, w8, ls  // ls = plast
   22694:	ret
   22698:	ldr	x10, [x9, #112]
   2269c:	cmp	x10, x8
   226a0:	b.ls	226e4 <PyInit__decimal@@Base+0x1bc30>  // b.plast
   226a4:	ldr	x10, [x9, #88]
   226a8:	cmp	x10, x8
   226ac:	b.ls	22724 <PyInit__decimal@@Base+0x1bc70>  // b.plast
   226b0:	ldr	x9, [x9, #80]
   226b4:	cmp	x9, x8
   226b8:	mov	w8, #0xa                   	// #10
   226bc:	cinc	w0, w8, ls  // ls = plast
   226c0:	ret
   226c4:	ldr	x10, [x9, #48]
   226c8:	cmp	x10, x8
   226cc:	b.ls	22744 <PyInit__decimal@@Base+0x1bc90>  // b.plast
   226d0:	ldr	x9, [x9, #40]
   226d4:	cmp	x9, x8
   226d8:	mov	w8, #0x5                   	// #5
   226dc:	cinc	w0, w8, ls  // ls = plast
   226e0:	ret
   226e4:	ldr	x10, [x9, #144]
   226e8:	cmp	x10, x8
   226ec:	b.ls	22764 <PyInit__decimal@@Base+0x1bcb0>  // b.plast
   226f0:	ldr	x10, [x9, #128]
   226f4:	cmp	x10, x8
   226f8:	b.ls	22778 <PyInit__decimal@@Base+0x1bcc4>  // b.plast
   226fc:	ldr	x9, [x9, #120]
   22700:	cmp	x9, x8
   22704:	mov	w8, #0xf                   	// #15
   22708:	cinc	w0, w8, ls  // ls = plast
   2270c:	ret
   22710:	ldr	x9, [x9, #24]
   22714:	cmp	x9, x8
   22718:	mov	w8, #0x3                   	// #3
   2271c:	cinc	w0, w8, ls  // ls = plast
   22720:	ret
   22724:	ldr	x10, [x9, #104]
   22728:	cmp	x10, x8
   2272c:	b.ls	2278c <PyInit__decimal@@Base+0x1bcd8>  // b.plast
   22730:	ldr	x9, [x9, #96]
   22734:	cmp	x9, x8
   22738:	mov	w8, #0xc                   	// #12
   2273c:	cinc	w0, w8, ls  // ls = plast
   22740:	ret
   22744:	ldr	x10, [x9, #64]
   22748:	cmp	x10, x8
   2274c:	b.ls	22794 <PyInit__decimal@@Base+0x1bce0>  // b.plast
   22750:	ldr	x9, [x9, #56]
   22754:	cmp	x9, x8
   22758:	mov	w8, #0x7                   	// #7
   2275c:	cinc	w0, w8, ls  // ls = plast
   22760:	ret
   22764:	ldr	x9, [x9, #152]
   22768:	cmp	x9, x8
   2276c:	mov	w8, #0x13                  	// #19
   22770:	cinc	w0, w8, ls  // ls = plast
   22774:	ret
   22778:	ldr	x9, [x9, #136]
   2277c:	cmp	x9, x8
   22780:	mov	w8, #0x11                  	// #17
   22784:	cinc	w0, w8, ls  // ls = plast
   22788:	ret
   2278c:	mov	w0, #0xe                   	// #14
   22790:	ret
   22794:	mov	w0, #0x9                   	// #9
   22798:	ret
   2279c:	mov	w0, #0x1                   	// #1
   227a0:	ret
   227a4:	ldrb	w8, [x0]
   227a8:	tst	w8, #0xe
   227ac:	cset	w0, eq  // eq = none
   227b0:	ret
   227b4:	ldrb	w8, [x0]
   227b8:	and	w0, w8, #0x2
   227bc:	ret
   227c0:	ldrb	w8, [x0]
   227c4:	and	w0, w8, #0xc
   227c8:	ret
   227cc:	ldrb	w8, [x0]
   227d0:	and	w0, w8, #0x1
   227d4:	ret
   227d8:	ldrb	w8, [x0]
   227dc:	mvn	w8, w8
   227e0:	and	w0, w8, #0x1
   227e4:	ret
   227e8:	ldrb	w8, [x0]
   227ec:	and	w0, w8, #0x4
   227f0:	ret
   227f4:	ldrb	w8, [x0]
   227f8:	and	w0, w8, #0x1
   227fc:	ret
   22800:	ldrb	w8, [x0]
   22804:	and	w0, w8, #0x8
   22808:	ret
   2280c:	ldrb	w8, [x0]
   22810:	and	w0, w8, #0xe
   22814:	ret
   22818:	ldrb	w8, [x0]
   2281c:	tst	w8, #0xe
   22820:	b.eq	2282c <PyInit__decimal@@Base+0x1bd78>  // b.none
   22824:	mov	w0, wzr
   22828:	ret
   2282c:	ldr	x8, [x0, #40]
   22830:	ldr	x9, [x0, #24]
   22834:	add	x8, x8, x9, lsl #3
   22838:	ldur	x8, [x8, #-8]
   2283c:	cmp	x8, #0x0
   22840:	cset	w0, eq  // eq = none
   22844:	ret
   22848:	ldr	x8, [x0, #40]
   2284c:	ldr	x9, [x0, #24]
   22850:	add	x8, x8, x9, lsl #3
   22854:	ldur	x8, [x8, #-8]
   22858:	cmp	x8, #0x0
   2285c:	cset	w0, eq  // eq = none
   22860:	ret
   22864:	ldrb	w8, [x0]
   22868:	tst	w8, #0xe
   2286c:	b.eq	22878 <PyInit__decimal@@Base+0x1bdc4>  // b.none
   22870:	mov	w0, wzr
   22874:	ret
   22878:	ldr	x8, [x0, #40]
   2287c:	ldr	x9, [x0, #24]
   22880:	add	x8, x8, x9, lsl #3
   22884:	ldur	x8, [x8, #-8]
   22888:	cbz	x8, 22870 <PyInit__decimal@@Base+0x1bdbc>
   2288c:	ldp	x8, x9, [x0, #8]
   22890:	ldr	x10, [x1, #16]
   22894:	add	x8, x8, x9
   22898:	sub	x8, x8, #0x1
   2289c:	cmp	x8, x10
   228a0:	cset	w0, ge  // ge = tcont
   228a4:	ret
   228a8:	ldrb	w8, [x0]
   228ac:	tst	w8, #0xe
   228b0:	b.eq	228bc <PyInit__decimal@@Base+0x1be08>  // b.none
   228b4:	mov	w0, wzr
   228b8:	ret
   228bc:	ldr	x8, [x0, #40]
   228c0:	ldr	x9, [x0, #24]
   228c4:	add	x8, x8, x9, lsl #3
   228c8:	ldur	x8, [x8, #-8]
   228cc:	cbz	x8, 228b4 <PyInit__decimal@@Base+0x1be00>
   228d0:	ldp	x8, x9, [x0, #8]
   228d4:	ldr	x10, [x1, #16]
   228d8:	add	x8, x8, x9
   228dc:	sub	x8, x8, #0x1
   228e0:	cmp	x8, x10
   228e4:	cset	w0, lt  // lt = tstop
   228e8:	ret
   228ec:	and	w0, w0, #0x1
   228f0:	ret
   228f4:	ldr	x8, [x0, #40]
   228f8:	ldr	w8, [x8]
   228fc:	and	w0, w8, #0x1
   22900:	ret
   22904:	ldrb	w8, [x0]
   22908:	and	w0, w8, #0x1
   2290c:	ret
   22910:	ldrb	w8, [x0]
   22914:	mov	w9, #0x1                   	// #1
   22918:	ubfiz	w8, w8, #1, #1
   2291c:	sub	w0, w9, w8
   22920:	ret
   22924:	mov	w0, #0xa                   	// #10
   22928:	ret
   2292c:	ldrb	w8, [x0]
   22930:	mov	w9, #0x1                   	// #1
   22934:	bic	w0, w9, w8, lsr #4
   22938:	ret
   2293c:	ldrb	w8, [x0]
   22940:	and	w0, w8, #0x10
   22944:	ret
   22948:	ldrb	w8, [x0]
   2294c:	cmp	w8, #0x20
   22950:	cset	w0, cc  // cc = lo, ul, last
   22954:	ret
   22958:	ldrb	w8, [x0]
   2295c:	and	w0, w8, #0x20
   22960:	ret
   22964:	ldrb	w8, [x0]
   22968:	and	w0, w8, #0x40
   2296c:	ret
   22970:	ldrb	w8, [x0]
   22974:	and	w0, w8, #0x80
   22978:	ret
   2297c:	cbz	x1, 22998 <PyInit__decimal@@Base+0x1bee4>
   22980:	stp	x29, x30, [sp, #-16]!
   22984:	mov	x29, sp
   22988:	lsl	x2, x1, #3
   2298c:	mov	w1, wzr
   22990:	bl	65b0 <memset@plt>
   22994:	ldp	x29, x30, [sp], #16
   22998:	ret
   2299c:	stp	x29, x30, [sp, #-32]!
   229a0:	stp	x20, x19, [sp, #16]
   229a4:	mov	x29, sp
   229a8:	ldrb	w8, [x0]
   229ac:	mov	x19, x0
   229b0:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   229b4:	cmp	w8, #0x1f
   229b8:	b.hi	229cc <PyInit__decimal@@Base+0x1bf18>  // b.pmore
   229bc:	ldr	x8, [x20, #1376]
   229c0:	ldr	x0, [x19, #40]
   229c4:	blr	x8
   229c8:	ldrb	w8, [x19]
   229cc:	tbnz	w8, #4, 229e4 <PyInit__decimal@@Base+0x1bf30>
   229d0:	ldr	x1, [x20, #1376]
   229d4:	mov	x0, x19
   229d8:	ldp	x20, x19, [sp, #16]
   229dc:	ldp	x29, x30, [sp], #32
   229e0:	br	x1
   229e4:	ldp	x20, x19, [sp, #16]
   229e8:	ldp	x29, x30, [sp], #32
   229ec:	ret
   229f0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   229f4:	ldr	x9, [x8, #1344]
   229f8:	ldr	x8, [x0, #32]
   229fc:	cmp	x9, x1
   22a00:	csel	x1, x1, x9, lt  // lt = tstop
   22a04:	cmp	x1, x8
   22a08:	b.eq	22a24 <PyInit__decimal@@Base+0x1bf70>  // b.none
   22a0c:	ldrb	w9, [x0]
   22a10:	tbnz	w9, #5, 22a18 <PyInit__decimal@@Base+0x1bf64>
   22a14:	b	22284 <PyInit__decimal@@Base+0x1b7d0>
   22a18:	cmp	x1, x8
   22a1c:	b.le	22a24 <PyInit__decimal@@Base+0x1bf70>
   22a20:	b	22128 <PyInit__decimal@@Base+0x1b674>
   22a24:	mov	w0, #0x1                   	// #1
   22a28:	ret
   22a2c:	stp	x29, x30, [sp, #-32]!
   22a30:	stp	x20, x19, [sp, #16]
   22a34:	mov	x29, sp
   22a38:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   22a3c:	ldr	x9, [x8, #1344]
   22a40:	ldr	x8, [x0, #32]
   22a44:	mov	x19, x0
   22a48:	cmp	x9, x1
   22a4c:	csel	x20, x1, x9, lt  // lt = tstop
   22a50:	cmp	x20, x8
   22a54:	b.eq	22a98 <PyInit__decimal@@Base+0x1bfe4>  // b.none
   22a58:	ldrb	w9, [x19]
   22a5c:	tbnz	w9, #5, 22a7c <PyInit__decimal@@Base+0x1bfc8>
   22a60:	mov	x0, x19
   22a64:	mov	x1, x20
   22a68:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   22a6c:	cbnz	w0, 22a98 <PyInit__decimal@@Base+0x1bfe4>
   22a70:	ldp	x20, x19, [sp, #16]
   22a74:	ldp	x29, x30, [sp], #32
   22a78:	ret
   22a7c:	cmp	x20, x8
   22a80:	b.le	22a98 <PyInit__decimal@@Base+0x1bfe4>
   22a84:	mov	x0, x19
   22a88:	mov	x1, x20
   22a8c:	ldp	x20, x19, [sp, #16]
   22a90:	ldp	x29, x30, [sp], #32
   22a94:	b	221dc <PyInit__decimal@@Base+0x1b728>
   22a98:	cbz	x20, 22aac <PyInit__decimal@@Base+0x1bff8>
   22a9c:	ldr	x0, [x19, #40]
   22aa0:	lsl	x2, x20, #3
   22aa4:	mov	w1, wzr
   22aa8:	bl	65b0 <memset@plt>
   22aac:	mov	w0, #0x1                   	// #1
   22ab0:	ldp	x20, x19, [sp, #16]
   22ab4:	ldp	x29, x30, [sp], #32
   22ab8:	ret
   22abc:	sub	sp, sp, #0x30
   22ac0:	stp	x29, x30, [sp, #16]
   22ac4:	stp	x20, x19, [sp, #32]
   22ac8:	add	x29, sp, #0x10
   22acc:	ldrb	w8, [x0]
   22ad0:	tbnz	w8, #5, 22b0c <PyInit__decimal@@Base+0x1c058>
   22ad4:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   22ad8:	ldr	x8, [x0, #32]
   22adc:	ldr	x1, [x20, #1344]
   22ae0:	mov	x19, x0
   22ae4:	cmp	x8, x1
   22ae8:	b.le	22b0c <PyInit__decimal@@Base+0x1c058>
   22aec:	sturb	wzr, [x29, #-4]
   22af0:	ldr	x0, [x19, #40]
   22af4:	sub	x3, x29, #0x4
   22af8:	mov	w2, #0x8                   	// #8
   22afc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   22b00:	str	x0, [x19, #40]
   22b04:	ldurb	w8, [x29, #-4]
   22b08:	cbz	w8, 22b1c <PyInit__decimal@@Base+0x1c068>
   22b0c:	ldp	x20, x19, [sp, #32]
   22b10:	ldp	x29, x30, [sp, #16]
   22b14:	add	sp, sp, #0x30
   22b18:	ret
   22b1c:	ldr	x8, [x20, #1344]
   22b20:	str	x8, [x19, #32]
   22b24:	ldp	x20, x19, [sp, #32]
   22b28:	ldp	x29, x30, [sp, #16]
   22b2c:	add	sp, sp, #0x30
   22b30:	ret
   22b34:	stp	x29, x30, [sp, #-32]!
   22b38:	str	x19, [sp, #16]
   22b3c:	mov	x29, sp
   22b40:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   22b44:	ldr	x9, [x8, #1344]
   22b48:	str	wzr, [x29, #28]
   22b4c:	ldr	x8, [x0, #32]
   22b50:	cmp	x9, x1
   22b54:	csel	x1, x1, x9, lt  // lt = tstop
   22b58:	cmp	x1, x8
   22b5c:	b.eq	22b90 <PyInit__decimal@@Base+0x1c0dc>  // b.none
   22b60:	ldrb	w9, [x0]
   22b64:	mov	x19, x2
   22b68:	tbnz	w9, #5, 22b7c <PyInit__decimal@@Base+0x1c0c8>
   22b6c:	add	x2, x29, #0x1c
   22b70:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   22b74:	cbnz	w0, 22b90 <PyInit__decimal@@Base+0x1c0dc>
   22b78:	b	22ba0 <PyInit__decimal@@Base+0x1c0ec>
   22b7c:	cmp	x1, x8
   22b80:	b.le	22b90 <PyInit__decimal@@Base+0x1c0dc>
   22b84:	add	x2, x29, #0x1c
   22b88:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   22b8c:	cbz	w0, 22ba0 <PyInit__decimal@@Base+0x1c0ec>
   22b90:	mov	w0, #0x1                   	// #1
   22b94:	ldr	x19, [sp, #16]
   22b98:	ldp	x29, x30, [sp], #32
   22b9c:	ret
   22ba0:	ldr	w1, [x29, #28]
   22ba4:	mov	x0, x19
   22ba8:	bl	1d990 <PyInit__decimal@@Base+0x16edc>
   22bac:	mov	w0, wzr
   22bb0:	ldr	x19, [sp, #16]
   22bb4:	ldp	x29, x30, [sp], #32
   22bb8:	ret
   22bbc:	stp	x29, x30, [sp, #-48]!
   22bc0:	str	x21, [sp, #16]
   22bc4:	stp	x20, x19, [sp, #32]
   22bc8:	mov	x29, sp
   22bcc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   22bd0:	ldr	x9, [x8, #1344]
   22bd4:	str	wzr, [x29, #28]
   22bd8:	ldr	x8, [x0, #32]
   22bdc:	mov	x19, x0
   22be0:	cmp	x9, x1
   22be4:	csel	x21, x1, x9, lt  // lt = tstop
   22be8:	cmp	x21, x8
   22bec:	b.eq	22c50 <PyInit__decimal@@Base+0x1c19c>  // b.none
   22bf0:	ldrb	w9, [x19]
   22bf4:	mov	x20, x2
   22bf8:	tbnz	w9, #5, 22c14 <PyInit__decimal@@Base+0x1c160>
   22bfc:	add	x2, x29, #0x1c
   22c00:	mov	x0, x19
   22c04:	mov	x1, x21
   22c08:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   22c0c:	cbnz	w0, 22c50 <PyInit__decimal@@Base+0x1c19c>
   22c10:	b	22c30 <PyInit__decimal@@Base+0x1c17c>
   22c14:	cmp	x21, x8
   22c18:	b.le	22c50 <PyInit__decimal@@Base+0x1c19c>
   22c1c:	add	x2, x29, #0x1c
   22c20:	mov	x0, x19
   22c24:	mov	x1, x21
   22c28:	bl	221dc <PyInit__decimal@@Base+0x1b728>
   22c2c:	cbnz	w0, 22c64 <PyInit__decimal@@Base+0x1c1b0>
   22c30:	ldr	w1, [x29, #28]
   22c34:	mov	x0, x20
   22c38:	bl	1d990 <PyInit__decimal@@Base+0x16edc>
   22c3c:	mov	w0, wzr
   22c40:	ldp	x20, x19, [sp, #32]
   22c44:	ldr	x21, [sp, #16]
   22c48:	ldp	x29, x30, [sp], #48
   22c4c:	ret
   22c50:	cbz	x21, 22c64 <PyInit__decimal@@Base+0x1c1b0>
   22c54:	ldr	x0, [x19, #40]
   22c58:	lsl	x2, x21, #3
   22c5c:	mov	w1, wzr
   22c60:	bl	65b0 <memset@plt>
   22c64:	mov	w0, #0x1                   	// #1
   22c68:	ldp	x20, x19, [sp, #32]
   22c6c:	ldr	x21, [sp, #16]
   22c70:	ldp	x29, x30, [sp], #48
   22c74:	ret
   22c78:	ldr	x9, [x0, #40]
   22c7c:	ldr	x8, [x0, #24]
   22c80:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   22c84:	add	x10, x10, #0xca0
   22c88:	ldr	x11, [x10, #72]
   22c8c:	add	x9, x9, x8, lsl #3
   22c90:	ldur	x9, [x9, #-8]
   22c94:	cmp	x11, x9
   22c98:	b.ls	22cc4 <PyInit__decimal@@Base+0x1c210>  // b.plast
   22c9c:	ldr	x11, [x10, #32]
   22ca0:	cmp	x11, x9
   22ca4:	b.ls	22cec <PyInit__decimal@@Base+0x1c238>  // b.plast
   22ca8:	ldr	x11, [x10, #16]
   22cac:	cmp	x11, x9
   22cb0:	b.ls	22d30 <PyInit__decimal@@Base+0x1c27c>  // b.plast
   22cb4:	ldr	x10, [x10, #8]
   22cb8:	cmp	x10, x9
   22cbc:	mov	w9, #0x1                   	// #1
   22cc0:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22cc4:	ldr	x11, [x10, #112]
   22cc8:	cmp	x11, x9
   22ccc:	b.ls	22d08 <PyInit__decimal@@Base+0x1c254>  // b.plast
   22cd0:	ldr	x11, [x10, #88]
   22cd4:	cmp	x11, x9
   22cd8:	b.ls	22d40 <PyInit__decimal@@Base+0x1c28c>  // b.plast
   22cdc:	ldr	x10, [x10, #80]
   22ce0:	cmp	x10, x9
   22ce4:	mov	w9, #0xa                   	// #10
   22ce8:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22cec:	ldr	x11, [x10, #48]
   22cf0:	cmp	x11, x9
   22cf4:	b.ls	22d5c <PyInit__decimal@@Base+0x1c2a8>  // b.plast
   22cf8:	ldr	x10, [x10, #40]
   22cfc:	cmp	x10, x9
   22d00:	mov	w9, #0x5                   	// #5
   22d04:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22d08:	ldr	x11, [x10, #144]
   22d0c:	cmp	x11, x9
   22d10:	b.ls	22d78 <PyInit__decimal@@Base+0x1c2c4>  // b.plast
   22d14:	ldr	x11, [x10, #128]
   22d18:	cmp	x11, x9
   22d1c:	b.ls	22d88 <PyInit__decimal@@Base+0x1c2d4>  // b.plast
   22d20:	ldr	x10, [x10, #120]
   22d24:	cmp	x10, x9
   22d28:	mov	w9, #0xf                   	// #15
   22d2c:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22d30:	ldr	x10, [x10, #24]
   22d34:	cmp	x10, x9
   22d38:	mov	w9, #0x3                   	// #3
   22d3c:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22d40:	ldr	x11, [x10, #104]
   22d44:	cmp	x11, x9
   22d48:	b.ls	22dac <PyInit__decimal@@Base+0x1c2f8>  // b.plast
   22d4c:	ldr	x10, [x10, #96]
   22d50:	cmp	x10, x9
   22d54:	mov	w9, #0xc                   	// #12
   22d58:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22d5c:	ldr	x11, [x10, #64]
   22d60:	cmp	x11, x9
   22d64:	b.ls	22db4 <PyInit__decimal@@Base+0x1c300>  // b.plast
   22d68:	ldr	x10, [x10, #56]
   22d6c:	cmp	x10, x9
   22d70:	mov	w9, #0x7                   	// #7
   22d74:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22d78:	ldr	x10, [x10, #152]
   22d7c:	cmp	x10, x9
   22d80:	mov	w9, #0x13                  	// #19
   22d84:	b	22d94 <PyInit__decimal@@Base+0x1c2e0>
   22d88:	ldr	x10, [x10, #136]
   22d8c:	cmp	x10, x9
   22d90:	mov	w9, #0x11                  	// #17
   22d94:	cinc	x9, x9, ls  // ls = plast
   22d98:	mov	w10, #0x13                  	// #19
   22d9c:	madd	x8, x8, x10, x9
   22da0:	sub	x8, x8, #0x13
   22da4:	str	x8, [x0, #16]
   22da8:	ret
   22dac:	mov	w9, #0xe                   	// #14
   22db0:	b	22d98 <PyInit__decimal@@Base+0x1c2e4>
   22db4:	mov	w9, #0x9                   	// #9
   22db8:	b	22d98 <PyInit__decimal@@Base+0x1c2e4>
   22dbc:	ldrb	w8, [x0]
   22dc0:	and	w8, w8, #0xfe
   22dc4:	orr	w8, w8, w1
   22dc8:	strb	w8, [x0]
   22dcc:	ret
   22dd0:	ldrb	w8, [x1]
   22dd4:	ldrb	w9, [x0]
   22dd8:	bfxil	w9, w8, #0, #1
   22ddc:	strb	w9, [x0]
   22de0:	ret
   22de4:	ldrb	w8, [x0]
   22de8:	and	w8, w8, #0xfffffff3
   22dec:	orr	w8, w8, #0x2
   22df0:	strb	w8, [x0]
   22df4:	ret
   22df8:	ldrb	w8, [x0]
   22dfc:	and	w8, w8, #0xfffffff1
   22e00:	orr	w8, w8, #0x4
   22e04:	strb	w8, [x0]
   22e08:	ret
   22e0c:	ldrb	w8, [x0]
   22e10:	and	w8, w8, #0xfffffff1
   22e14:	orr	w8, w8, #0x8
   22e18:	strb	w8, [x0]
   22e1c:	ret
   22e20:	ldrb	w8, [x0]
   22e24:	orr	w8, w8, #0x1
   22e28:	strb	w8, [x0]
   22e2c:	ret
   22e30:	ldrb	w8, [x0]
   22e34:	and	w8, w8, #0xfe
   22e38:	strb	w8, [x0]
   22e3c:	ret
   22e40:	ldrb	w8, [x0]
   22e44:	and	w8, w8, #0xffffffef
   22e48:	strb	w8, [x0]
   22e4c:	ret
   22e50:	ldrb	w8, [x0]
   22e54:	orr	w8, w8, #0x10
   22e58:	strb	w8, [x0]
   22e5c:	ret
   22e60:	ldrb	w8, [x0]
   22e64:	and	w8, w8, #0x1f
   22e68:	strb	w8, [x0]
   22e6c:	ret
   22e70:	ldrb	w8, [x0]
   22e74:	mov	w9, #0x20                  	// #32
   22e78:	bfxil	w9, w8, #0, #5
   22e7c:	strb	w9, [x0]
   22e80:	ret
   22e84:	ldrb	w8, [x0]
   22e88:	mov	w9, #0x40                  	// #64
   22e8c:	bfxil	w9, w8, #0, #5
   22e90:	strb	w9, [x0]
   22e94:	ret
   22e98:	ldrb	w8, [x0]
   22e9c:	mov	w9, #0x80                  	// #128
   22ea0:	bfxil	w9, w8, #0, #5
   22ea4:	strb	w9, [x0]
   22ea8:	ret
   22eac:	ldrb	w8, [x0]
   22eb0:	and	w8, w8, #0xf0
   22eb4:	strb	w8, [x0]
   22eb8:	ret
   22ebc:	ldrb	w8, [x0]
   22ec0:	and	w8, w8, #0xf0
   22ec4:	orr	w8, w8, w1
   22ec8:	strb	w8, [x0]
   22ecc:	ret
   22ed0:	ldrb	w8, [x1]
   22ed4:	ldrb	w9, [x0]
   22ed8:	bfxil	w9, w8, #0, #4
   22edc:	strb	w9, [x0]
   22ee0:	ret
   22ee4:	sub	sp, sp, #0x30
   22ee8:	stp	x29, x30, [sp, #16]
   22eec:	stp	x20, x19, [sp, #32]
   22ef0:	add	x29, sp, #0x10
   22ef4:	ldrb	w8, [x0]
   22ef8:	mov	x19, x0
   22efc:	tbnz	w8, #5, 22f3c <PyInit__decimal@@Base+0x1c488>
   22f00:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   22f04:	ldr	x8, [x19, #32]
   22f08:	ldr	x1, [x20, #1344]
   22f0c:	cmp	x8, x1
   22f10:	b.le	22f3c <PyInit__decimal@@Base+0x1c488>
   22f14:	sturb	wzr, [x29, #-4]
   22f18:	ldr	x0, [x19, #40]
   22f1c:	sub	x3, x29, #0x4
   22f20:	mov	w2, #0x8                   	// #8
   22f24:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   22f28:	str	x0, [x19, #40]
   22f2c:	ldurb	w8, [x29, #-4]
   22f30:	cbnz	w8, 22f3c <PyInit__decimal@@Base+0x1c488>
   22f34:	ldr	x8, [x20, #1344]
   22f38:	str	x8, [x19, #32]
   22f3c:	ldr	x8, [x19, #40]
   22f40:	mov	w9, #0x1                   	// #1
   22f44:	dup	v0.2d, x9
   22f48:	str	q0, [x19, #16]
   22f4c:	str	xzr, [x8]
   22f50:	ldp	x20, x19, [sp, #32]
   22f54:	ldp	x29, x30, [sp, #16]
   22f58:	add	sp, sp, #0x30
   22f5c:	ret
   22f60:	stp	x29, x30, [sp, #-48]!
   22f64:	stp	x22, x21, [sp, #16]
   22f68:	stp	x20, x19, [sp, #32]
   22f6c:	mov	x29, sp
   22f70:	ldr	x8, [x1]
   22f74:	mov	x9, #0x9436                	// #37942
   22f78:	movk	x9, #0x50d7, lsl #16
   22f7c:	movk	x9, #0x435e, lsl #32
   22f80:	movk	x9, #0xd79, lsl #48
   22f84:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   22f88:	smulh	x9, x8, x9
   22f8c:	mov	x10, #0xffffffffffffffed    	// #-19
   22f90:	ldr	x11, [x11, #1344]
   22f94:	add	x12, x9, x9, lsr #63
   22f98:	madd	x22, x12, x10, x8
   22f9c:	cmp	x22, #0x0
   22fa0:	ldr	x9, [x0, #32]
   22fa4:	cinc	x21, x12, ne  // ne = any
   22fa8:	cmp	x11, x21
   22fac:	mov	x20, x1
   22fb0:	csel	x1, x21, x11, lt  // lt = tstop
   22fb4:	mov	x19, x0
   22fb8:	cmp	x1, x9
   22fbc:	b.eq	22ff0 <PyInit__decimal@@Base+0x1c53c>  // b.none
   22fc0:	ldrb	w10, [x19]
   22fc4:	tbnz	w10, #5, 22fd8 <PyInit__decimal@@Base+0x1c524>
   22fc8:	mov	x0, x19
   22fcc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   22fd0:	cbnz	w0, 22fec <PyInit__decimal@@Base+0x1c538>
   22fd4:	b	2308c <PyInit__decimal@@Base+0x1c5d8>
   22fd8:	cmp	x1, x9
   22fdc:	b.le	22ff0 <PyInit__decimal@@Base+0x1c53c>
   22fe0:	mov	x0, x19
   22fe4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   22fe8:	cbz	w0, 2308c <PyInit__decimal@@Base+0x1c5d8>
   22fec:	ldr	x8, [x20]
   22ff0:	cmp	x22, #0x1
   22ff4:	sub	x9, x21, #0x1
   22ff8:	stp	x8, x21, [x19, #16]
   22ffc:	b.lt	23020 <PyInit__decimal@@Base+0x1c56c>  // b.tstop
   23000:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   23004:	add	x8, x8, #0xca0
   23008:	ldr	x8, [x8, x22, lsl #3]
   2300c:	ldr	x10, [x19, #40]
   23010:	sub	x11, x21, #0x2
   23014:	sub	x8, x8, #0x1
   23018:	str	x8, [x10, x9, lsl #3]
   2301c:	mov	x9, x11
   23020:	tbnz	x9, #63, 2308c <PyInit__decimal@@Base+0x1c5d8>
   23024:	ldr	x8, [x19, #40]
   23028:	add	x10, x9, #0x1
   2302c:	cmp	x10, #0x2
   23030:	b.cc	2306c <PyInit__decimal@@Base+0x1c5b8>  // b.lo, b.ul, b.last
   23034:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   23038:	movk	x13, #0x2304, lsl #32
   2303c:	and	x11, x10, #0xfffffffffffffffe
   23040:	add	x12, x8, x9, lsl #3
   23044:	movk	x13, #0x8ac7, lsl #48
   23048:	sub	x9, x9, x11
   2304c:	sub	x12, x12, #0x8
   23050:	dup	v0.2d, x13
   23054:	mov	x13, x11
   23058:	subs	x13, x13, #0x2
   2305c:	str	q0, [x12], #-16
   23060:	b.ne	23058 <PyInit__decimal@@Base+0x1c5a4>  // b.any
   23064:	cmp	x10, x11
   23068:	b.eq	2308c <PyInit__decimal@@Base+0x1c5d8>  // b.none
   2306c:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   23070:	movk	x10, #0x2304, lsl #32
   23074:	movk	x10, #0x8ac7, lsl #48
   23078:	sub	x11, x9, #0x1
   2307c:	cmp	x9, #0x0
   23080:	str	x10, [x8, x9, lsl #3]
   23084:	mov	x9, x11
   23088:	b.gt	23078 <PyInit__decimal@@Base+0x1c5c4>
   2308c:	ldp	x20, x19, [sp, #32]
   23090:	ldp	x22, x21, [sp, #16]
   23094:	ldp	x29, x30, [sp], #48
   23098:	ret
   2309c:	ldr	x9, [x0, #24]
   230a0:	cmp	x9, #0x1
   230a4:	b.lt	230d0 <PyInit__decimal@@Base+0x1c61c>  // b.tstop
   230a8:	mov	x8, x0
   230ac:	ldr	x10, [x8, #40]
   230b0:	mov	x0, xzr
   230b4:	mov	x11, xzr
   230b8:	ldr	x8, [x10, x11, lsl #3]
   230bc:	cbnz	x8, 230d8 <PyInit__decimal@@Base+0x1c624>
   230c0:	add	x11, x11, #0x1
   230c4:	cmp	x11, x9
   230c8:	add	x0, x0, #0x13
   230cc:	b.lt	230b8 <PyInit__decimal@@Base+0x1c604>  // b.tstop
   230d0:	mov	x0, xzr
   230d4:	b	23120 <PyInit__decimal@@Base+0x1c66c>
   230d8:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   230dc:	movk	x9, #0xcccd
   230e0:	mul	x10, x8, x9
   230e4:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   230e8:	ror	x10, x10, #1
   230ec:	movk	x11, #0x1999, lsl #48
   230f0:	cmp	x10, x11
   230f4:	b.hi	23120 <PyInit__decimal@@Base+0x1c66c>  // b.pmore
   230f8:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   230fc:	movk	x10, #0x999a
   23100:	movk	x10, #0x1999, lsl #48
   23104:	umulh	x8, x8, x9
   23108:	lsr	x8, x8, #3
   2310c:	mul	x11, x8, x9
   23110:	ror	x11, x11, #1
   23114:	cmp	x11, x10
   23118:	add	x0, x0, #0x1
   2311c:	b.cc	23104 <PyInit__decimal@@Base+0x1c650>  // b.lo, b.ul, b.last
   23120:	ret
   23124:	ldrb	w8, [x0]
   23128:	tst	w8, #0xe
   2312c:	b.eq	23138 <PyInit__decimal@@Base+0x1c684>  // b.none
   23130:	mov	w0, wzr
   23134:	ret
   23138:	ldr	x9, [x0, #40]
   2313c:	ldr	x10, [x0, #24]
   23140:	add	x8, x9, x10, lsl #3
   23144:	ldur	x8, [x8, #-8]
   23148:	cbz	x8, 23178 <PyInit__decimal@@Base+0x1c6c4>
   2314c:	cmp	x10, #0x1
   23150:	b.lt	23170 <PyInit__decimal@@Base+0x1c6bc>  // b.tstop
   23154:	mov	x8, xzr
   23158:	ldr	x11, [x9]
   2315c:	cbnz	x11, 23180 <PyInit__decimal@@Base+0x1c6cc>
   23160:	add	x8, x8, #0x13
   23164:	subs	x10, x10, #0x1
   23168:	add	x9, x9, #0x8
   2316c:	b.ne	23158 <PyInit__decimal@@Base+0x1c6a4>  // b.any
   23170:	mov	x8, xzr
   23174:	b	231c8 <PyInit__decimal@@Base+0x1c714>
   23178:	mov	w0, #0x1                   	// #1
   2317c:	ret
   23180:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   23184:	movk	x9, #0xcccd
   23188:	mul	x10, x11, x9
   2318c:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   23190:	ror	x10, x10, #1
   23194:	movk	x12, #0x1999, lsl #48
   23198:	cmp	x10, x12
   2319c:	b.hi	231c8 <PyInit__decimal@@Base+0x1c714>  // b.pmore
   231a0:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   231a4:	movk	x10, #0x999a
   231a8:	movk	x10, #0x1999, lsl #48
   231ac:	umulh	x11, x11, x9
   231b0:	lsr	x11, x11, #3
   231b4:	mul	x12, x11, x9
   231b8:	ror	x12, x12, #1
   231bc:	cmp	x12, x10
   231c0:	add	x8, x8, #0x1
   231c4:	b.cc	231ac <PyInit__decimal@@Base+0x1c6f8>  // b.lo, b.ul, b.last
   231c8:	ldr	x9, [x0, #8]
   231cc:	add	x8, x9, x8
   231d0:	lsr	x8, x8, #63
   231d4:	eor	w0, w8, #0x1
   231d8:	ret
   231dc:	ldr	x8, [x0, #40]
   231e0:	ldr	x9, [x0, #24]
   231e4:	add	x9, x8, x9, lsl #3
   231e8:	ldur	x9, [x9, #-8]
   231ec:	cbz	x9, 231fc <PyInit__decimal@@Base+0x1c748>
   231f0:	ldr	x9, [x0, #8]
   231f4:	tbnz	x9, #63, 23204 <PyInit__decimal@@Base+0x1c750>
   231f8:	cbz	x9, 23248 <PyInit__decimal@@Base+0x1c794>
   231fc:	mov	w0, wzr
   23200:	ret
   23204:	mov	x11, #0x435f                	// #17247
   23208:	movk	x11, #0xd79, lsl #16
   2320c:	movk	x11, #0x35e5, lsl #32
   23210:	neg	x10, x9
   23214:	movk	x11, #0xd794, lsl #48
   23218:	umulh	x10, x10, x11
   2321c:	mov	x12, #0xffffffffffffffed    	// #-19
   23220:	neg	x9, x9
   23224:	lsr	x10, x10, #4
   23228:	madd	x9, x10, x12, x9
   2322c:	ldr	x8, [x8, x10, lsl #3]
   23230:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   23234:	add	x10, x10, #0xca0
   23238:	ldr	x9, [x10, x9, lsl #3]
   2323c:	udiv	x8, x8, x9
   23240:	and	w0, w8, #0x1
   23244:	ret
   23248:	ldr	w8, [x8]
   2324c:	and	w0, w8, #0x1
   23250:	ret
   23254:	ldr	x8, [x0, #40]
   23258:	ldr	x9, [x0, #24]
   2325c:	add	x9, x8, x9, lsl #3
   23260:	ldur	x9, [x9, #-8]
   23264:	cbz	x9, 23274 <PyInit__decimal@@Base+0x1c7c0>
   23268:	ldr	x9, [x0, #8]
   2326c:	tbnz	x9, #63, 2327c <PyInit__decimal@@Base+0x1c7c8>
   23270:	cbz	x9, 232c4 <PyInit__decimal@@Base+0x1c810>
   23274:	eor	w0, wzr, #0x1
   23278:	ret
   2327c:	mov	x11, #0x435f                	// #17247
   23280:	movk	x11, #0xd79, lsl #16
   23284:	movk	x11, #0x35e5, lsl #32
   23288:	neg	x10, x9
   2328c:	movk	x11, #0xd794, lsl #48
   23290:	umulh	x10, x10, x11
   23294:	mov	x12, #0xffffffffffffffed    	// #-19
   23298:	neg	x9, x9
   2329c:	lsr	x10, x10, #4
   232a0:	madd	x9, x10, x12, x9
   232a4:	ldr	x8, [x8, x10, lsl #3]
   232a8:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   232ac:	add	x10, x10, #0xca0
   232b0:	ldr	x9, [x10, x9, lsl #3]
   232b4:	udiv	x8, x8, x9
   232b8:	and	w8, w8, #0x1
   232bc:	eor	w0, w8, #0x1
   232c0:	ret
   232c4:	ldr	w8, [x8]
   232c8:	and	w8, w8, #0x1
   232cc:	eor	w0, w8, #0x1
   232d0:	ret
   232d4:	sub	sp, sp, #0x40
   232d8:	stp	x29, x30, [sp, #16]
   232dc:	stp	x22, x21, [sp, #32]
   232e0:	stp	x20, x19, [sp, #48]
   232e4:	add	x29, sp, #0x10
   232e8:	ldrb	w8, [x0]
   232ec:	mov	w20, w2
   232f0:	mov	x19, x0
   232f4:	mov	w21, w1
   232f8:	tbnz	w8, #5, 2333c <PyInit__decimal@@Base+0x1c888>
   232fc:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   23300:	ldr	x9, [x19, #32]
   23304:	ldr	x1, [x22, #1344]
   23308:	cmp	x9, x1
   2330c:	b.le	2333c <PyInit__decimal@@Base+0x1c888>
   23310:	sturb	wzr, [x29, #-4]
   23314:	ldr	x0, [x19, #40]
   23318:	sub	x3, x29, #0x4
   2331c:	mov	w2, #0x8                   	// #8
   23320:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   23324:	str	x0, [x19, #40]
   23328:	ldurb	w8, [x29, #-4]
   2332c:	cbnz	w8, 23338 <PyInit__decimal@@Base+0x1c884>
   23330:	ldr	x8, [x22, #1344]
   23334:	str	x8, [x19, #32]
   23338:	ldrb	w8, [x19]
   2333c:	and	w8, w8, #0xf0
   23340:	orr	w9, w20, w21
   23344:	orr	w8, w9, w8
   23348:	stp	xzr, xzr, [x19, #16]
   2334c:	strb	w8, [x19]
   23350:	str	xzr, [x19, #8]
   23354:	ldp	x20, x19, [sp, #48]
   23358:	ldp	x22, x21, [sp, #32]
   2335c:	ldp	x29, x30, [sp, #16]
   23360:	add	sp, sp, #0x40
   23364:	ret
   23368:	sub	sp, sp, #0x40
   2336c:	stp	x29, x30, [sp, #16]
   23370:	stp	x22, x21, [sp, #32]
   23374:	stp	x20, x19, [sp, #48]
   23378:	add	x29, sp, #0x10
   2337c:	ldrb	w8, [x0]
   23380:	mov	x19, x2
   23384:	mov	x20, x0
   23388:	mov	w21, w1
   2338c:	tbnz	w8, #5, 233d0 <PyInit__decimal@@Base+0x1c91c>
   23390:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   23394:	ldr	x9, [x20, #32]
   23398:	ldr	x1, [x22, #1344]
   2339c:	cmp	x9, x1
   233a0:	b.le	233d0 <PyInit__decimal@@Base+0x1c91c>
   233a4:	sturb	wzr, [x29, #-4]
   233a8:	ldr	x0, [x20, #40]
   233ac:	sub	x3, x29, #0x4
   233b0:	mov	w2, #0x8                   	// #8
   233b4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   233b8:	str	x0, [x20, #40]
   233bc:	ldurb	w8, [x29, #-4]
   233c0:	cbnz	w8, 233cc <PyInit__decimal@@Base+0x1c918>
   233c4:	ldr	x8, [x22, #1344]
   233c8:	str	x8, [x20, #32]
   233cc:	ldrb	w8, [x20]
   233d0:	and	w8, w8, #0xf0
   233d4:	orr	w8, w8, #0x4
   233d8:	stp	xzr, xzr, [x20, #16]
   233dc:	strb	w8, [x20]
   233e0:	str	xzr, [x20, #8]
   233e4:	ldr	w8, [x19]
   233e8:	orr	w8, w8, w21
   233ec:	str	w8, [x19]
   233f0:	ldp	x20, x19, [sp, #48]
   233f4:	ldp	x22, x21, [sp, #32]
   233f8:	ldp	x29, x30, [sp, #16]
   233fc:	add	sp, sp, #0x40
   23400:	ret
   23404:	stp	x29, x30, [sp, #-48]!
   23408:	str	x21, [sp, #16]
   2340c:	stp	x20, x19, [sp, #32]
   23410:	mov	x29, sp
   23414:	cmp	x1, #0x0
   23418:	mov	x19, x3
   2341c:	mov	x20, x2
   23420:	cneg	x2, x1, mi  // mi = first
   23424:	lsr	x1, x1, #63
   23428:	mov	x3, xzr
   2342c:	mov	x21, x0
   23430:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23434:	mov	x0, x21
   23438:	mov	x1, x20
   2343c:	mov	x2, x19
   23440:	ldp	x20, x19, [sp, #32]
   23444:	ldr	x21, [sp, #16]
   23448:	ldp	x29, x30, [sp], #48
   2344c:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23450:	ldrb	w8, [x0]
   23454:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   23458:	movk	x10, #0x2304, lsl #32
   2345c:	ldr	x9, [x0, #40]
   23460:	movk	x10, #0x8ac7, lsl #48
   23464:	cmp	x2, x10
   23468:	and	w8, w8, #0xf0
   2346c:	csinc	x10, xzr, x10, ls  // ls = plast
   23470:	mov	w12, #0x1                   	// #1
   23474:	orr	w8, w8, w1
   23478:	sub	x11, x2, x10
   2347c:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   23480:	strb	w8, [x0]
   23484:	cset	w13, hi  // hi = pmore
   23488:	cinc	x8, x12, hi  // hi = pmore
   2348c:	str	x3, [x0, #8]
   23490:	add	x10, x10, #0xca0
   23494:	stp	x11, x13, [x9]
   23498:	add	x9, x9, x8, lsl #3
   2349c:	str	x8, [x0, #24]
   234a0:	ldur	x9, [x9, #-8]
   234a4:	ldr	x11, [x10, #72]
   234a8:	cmp	x11, x9
   234ac:	b.ls	234d8 <PyInit__decimal@@Base+0x1ca24>  // b.plast
   234b0:	ldr	x11, [x10, #32]
   234b4:	cmp	x11, x9
   234b8:	b.ls	23500 <PyInit__decimal@@Base+0x1ca4c>  // b.plast
   234bc:	ldr	x11, [x10, #16]
   234c0:	cmp	x11, x9
   234c4:	b.ls	23544 <PyInit__decimal@@Base+0x1ca90>  // b.plast
   234c8:	ldr	x10, [x10, #8]
   234cc:	cmp	x10, x9
   234d0:	mov	w9, #0x1                   	// #1
   234d4:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   234d8:	ldr	x11, [x10, #112]
   234dc:	cmp	x11, x9
   234e0:	b.ls	2351c <PyInit__decimal@@Base+0x1ca68>  // b.plast
   234e4:	ldr	x11, [x10, #88]
   234e8:	cmp	x11, x9
   234ec:	b.ls	23554 <PyInit__decimal@@Base+0x1caa0>  // b.plast
   234f0:	ldr	x10, [x10, #80]
   234f4:	cmp	x10, x9
   234f8:	mov	w9, #0xa                   	// #10
   234fc:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   23500:	ldr	x11, [x10, #48]
   23504:	cmp	x11, x9
   23508:	b.ls	23570 <PyInit__decimal@@Base+0x1cabc>  // b.plast
   2350c:	ldr	x10, [x10, #40]
   23510:	cmp	x10, x9
   23514:	mov	w9, #0x5                   	// #5
   23518:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   2351c:	ldr	x11, [x10, #144]
   23520:	cmp	x11, x9
   23524:	b.ls	2358c <PyInit__decimal@@Base+0x1cad8>  // b.plast
   23528:	ldr	x11, [x10, #128]
   2352c:	cmp	x11, x9
   23530:	b.ls	2359c <PyInit__decimal@@Base+0x1cae8>  // b.plast
   23534:	ldr	x10, [x10, #120]
   23538:	cmp	x10, x9
   2353c:	mov	w9, #0xf                   	// #15
   23540:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   23544:	ldr	x10, [x10, #24]
   23548:	cmp	x10, x9
   2354c:	mov	w9, #0x3                   	// #3
   23550:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   23554:	ldr	x11, [x10, #104]
   23558:	cmp	x11, x9
   2355c:	b.ls	235c0 <PyInit__decimal@@Base+0x1cb0c>  // b.plast
   23560:	ldr	x10, [x10, #96]
   23564:	cmp	x10, x9
   23568:	mov	w9, #0xc                   	// #12
   2356c:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   23570:	ldr	x11, [x10, #64]
   23574:	cmp	x11, x9
   23578:	b.ls	235c8 <PyInit__decimal@@Base+0x1cb14>  // b.plast
   2357c:	ldr	x10, [x10, #56]
   23580:	cmp	x10, x9
   23584:	mov	w9, #0x7                   	// #7
   23588:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   2358c:	ldr	x10, [x10, #152]
   23590:	cmp	x10, x9
   23594:	mov	w9, #0x13                  	// #19
   23598:	b	235a8 <PyInit__decimal@@Base+0x1caf4>
   2359c:	ldr	x10, [x10, #136]
   235a0:	cmp	x10, x9
   235a4:	mov	w9, #0x11                  	// #17
   235a8:	cinc	x9, x9, ls  // ls = plast
   235ac:	mov	w10, #0x13                  	// #19
   235b0:	madd	x8, x8, x10, x9
   235b4:	sub	x8, x8, #0x13
   235b8:	str	x8, [x0, #16]
   235bc:	ret
   235c0:	mov	w9, #0xe                   	// #14
   235c4:	b	235ac <PyInit__decimal@@Base+0x1caf8>
   235c8:	mov	w9, #0x9                   	// #9
   235cc:	b	235ac <PyInit__decimal@@Base+0x1caf8>
   235d0:	stp	x29, x30, [sp, #-48]!
   235d4:	stp	x22, x21, [sp, #16]
   235d8:	stp	x20, x19, [sp, #32]
   235dc:	mov	x29, sp
   235e0:	ldrb	w8, [x0]
   235e4:	mov	x20, x0
   235e8:	mov	x21, x1
   235ec:	tst	w8, #0xe
   235f0:	b.eq	23618 <PyInit__decimal@@Base+0x1cb64>  // b.none
   235f4:	tst	w8, #0xc
   235f8:	b.eq	23634 <PyInit__decimal@@Base+0x1cb80>  // b.none
   235fc:	ldr	x1, [x21]
   23600:	ldr	w2, [x21, #40]
   23604:	mov	x0, x20
   23608:	ldp	x20, x19, [sp, #32]
   2360c:	ldp	x22, x21, [sp, #16]
   23610:	ldp	x29, x30, [sp], #48
   23614:	b	24544 <PyInit__decimal@@Base+0x1da90>
   23618:	mov	x0, x20
   2361c:	mov	x1, x21
   23620:	mov	x19, x2
   23624:	bl	24944 <PyInit__decimal@@Base+0x1de90>
   23628:	ldrb	w8, [x20]
   2362c:	tst	w8, #0xe
   23630:	b.eq	23644 <PyInit__decimal@@Base+0x1cb90>  // b.none
   23634:	ldp	x20, x19, [sp, #32]
   23638:	ldp	x22, x21, [sp, #16]
   2363c:	ldp	x29, x30, [sp], #48
   23640:	ret
   23644:	ldr	x8, [x20, #16]
   23648:	ldr	x9, [x21]
   2364c:	subs	x22, x8, x9
   23650:	b.le	23634 <PyInit__decimal@@Base+0x1cb80>
   23654:	mov	x0, x20
   23658:	mov	x1, x22
   2365c:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   23660:	ldr	x8, [x20, #8]
   23664:	add	x8, x8, x22
   23668:	str	x8, [x20, #8]
   2366c:	ldr	w8, [x21, #36]
   23670:	mov	x22, x0
   23674:	cmp	w8, #0x7
   23678:	b.hi	238f0 <PyInit__decimal@@Base+0x1ce3c>  // b.pmore
   2367c:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   23680:	add	x9, x9, #0x28
   23684:	adr	x10, 23694 <PyInit__decimal@@Base+0x1cbe0>
   23688:	ldrb	w11, [x9, x8]
   2368c:	add	x10, x10, x11, lsl #2
   23690:	br	x10
   23694:	cmp	x22, #0x0
   23698:	cset	w8, ne  // ne = any
   2369c:	b	23738 <PyInit__decimal@@Base+0x1cc84>
   236a0:	cbz	x22, 237c4 <PyInit__decimal@@Base+0x1cd10>
   236a4:	ldrb	w8, [x20]
   236a8:	mvn	w8, w8
   236ac:	and	w8, w8, #0x1
   236b0:	b	23738 <PyInit__decimal@@Base+0x1cc84>
   236b4:	cbz	x22, 237c4 <PyInit__decimal@@Base+0x1cd10>
   236b8:	ldrb	w8, [x20]
   236bc:	and	w8, w8, #0x1
   236c0:	b	23738 <PyInit__decimal@@Base+0x1cc84>
   236c4:	cmp	x22, #0x4
   236c8:	cset	w8, hi  // hi = pmore
   236cc:	b	23738 <PyInit__decimal@@Base+0x1cc84>
   236d0:	cmp	x22, #0x5
   236d4:	cset	w8, hi  // hi = pmore
   236d8:	b	23738 <PyInit__decimal@@Base+0x1cc84>
   236dc:	cmp	x22, #0x5
   236e0:	b.hi	2373c <PyInit__decimal@@Base+0x1cc88>  // b.pmore
   236e4:	b.ne	238f0 <PyInit__decimal@@Base+0x1ce3c>  // b.any
   236e8:	ldr	x8, [x20, #40]
   236ec:	ldr	w8, [x8]
   236f0:	and	w8, w8, #0x1
   236f4:	b	23738 <PyInit__decimal@@Base+0x1cc84>
   236f8:	ldr	x8, [x20, #40]
   236fc:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   23700:	movk	x9, #0xcccd
   23704:	mov	w10, #0xa                   	// #10
   23708:	ldr	x8, [x8]
   2370c:	cmp	x22, #0x0
   23710:	cset	w11, ne  // ne = any
   23714:	umulh	x9, x8, x9
   23718:	lsr	x9, x9, #3
   2371c:	msub	w8, w9, w10, w8
   23720:	cmp	w8, #0x0
   23724:	cset	w9, eq  // eq = none
   23728:	cmp	w8, #0x5
   2372c:	cset	w8, eq  // eq = none
   23730:	orr	w8, w9, w8
   23734:	and	w8, w11, w8
   23738:	cbz	w8, 238f0 <PyInit__decimal@@Base+0x1ce3c>
   2373c:	ldr	x0, [x20, #40]
   23740:	ldr	x1, [x20, #24]
   23744:	bl	1c45c <PyInit__decimal@@Base+0x159a8>
   23748:	cbz	x0, 23778 <PyInit__decimal@@Base+0x1ccc4>
   2374c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   23750:	add	x8, x8, #0xca0
   23754:	ldr	x9, [x20, #40]
   23758:	ldr	x10, [x20, #24]
   2375c:	ldr	x8, [x8, #144]
   23760:	add	x9, x9, x10, lsl #3
   23764:	stur	x8, [x9, #-8]
   23768:	ldr	x8, [x20, #8]
   2376c:	add	x8, x8, #0x1
   23770:	str	x8, [x20, #8]
   23774:	b	238e0 <PyInit__decimal@@Base+0x1ce2c>
   23778:	ldr	x9, [x20, #40]
   2377c:	ldr	x8, [x20, #24]
   23780:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   23784:	add	x10, x10, #0xca0
   23788:	ldr	x11, [x10, #72]
   2378c:	add	x9, x9, x8, lsl #3
   23790:	ldur	x9, [x9, #-8]
   23794:	cmp	x11, x9
   23798:	b.ls	237d0 <PyInit__decimal@@Base+0x1cd1c>  // b.plast
   2379c:	ldr	x11, [x10, #32]
   237a0:	cmp	x11, x9
   237a4:	b.ls	237f8 <PyInit__decimal@@Base+0x1cd44>  // b.plast
   237a8:	ldr	x11, [x10, #16]
   237ac:	cmp	x11, x9
   237b0:	b.ls	2383c <PyInit__decimal@@Base+0x1cd88>  // b.plast
   237b4:	ldr	x10, [x10, #8]
   237b8:	cmp	x10, x9
   237bc:	mov	w9, #0x1                   	// #1
   237c0:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   237c4:	ldr	w8, [x19]
   237c8:	orr	w8, w8, #0x1000
   237cc:	b	23908 <PyInit__decimal@@Base+0x1ce54>
   237d0:	ldr	x11, [x10, #112]
   237d4:	cmp	x11, x9
   237d8:	b.ls	23814 <PyInit__decimal@@Base+0x1cd60>  // b.plast
   237dc:	ldr	x11, [x10, #88]
   237e0:	cmp	x11, x9
   237e4:	b.ls	2384c <PyInit__decimal@@Base+0x1cd98>  // b.plast
   237e8:	ldr	x10, [x10, #80]
   237ec:	cmp	x10, x9
   237f0:	mov	w9, #0xa                   	// #10
   237f4:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   237f8:	ldr	x11, [x10, #48]
   237fc:	cmp	x11, x9
   23800:	b.ls	23868 <PyInit__decimal@@Base+0x1cdb4>  // b.plast
   23804:	ldr	x10, [x10, #40]
   23808:	cmp	x10, x9
   2380c:	mov	w9, #0x5                   	// #5
   23810:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   23814:	ldr	x11, [x10, #144]
   23818:	cmp	x11, x9
   2381c:	b.ls	23884 <PyInit__decimal@@Base+0x1cdd0>  // b.plast
   23820:	ldr	x11, [x10, #128]
   23824:	cmp	x11, x9
   23828:	b.ls	23894 <PyInit__decimal@@Base+0x1cde0>  // b.plast
   2382c:	ldr	x10, [x10, #120]
   23830:	cmp	x10, x9
   23834:	mov	w9, #0xf                   	// #15
   23838:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   2383c:	ldr	x10, [x10, #24]
   23840:	cmp	x10, x9
   23844:	mov	w9, #0x3                   	// #3
   23848:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   2384c:	ldr	x11, [x10, #104]
   23850:	cmp	x11, x9
   23854:	b.ls	2391c <PyInit__decimal@@Base+0x1ce68>  // b.plast
   23858:	ldr	x10, [x10, #96]
   2385c:	cmp	x10, x9
   23860:	mov	w9, #0xc                   	// #12
   23864:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   23868:	ldr	x11, [x10, #64]
   2386c:	cmp	x11, x9
   23870:	b.ls	23924 <PyInit__decimal@@Base+0x1ce70>  // b.plast
   23874:	ldr	x10, [x10, #56]
   23878:	cmp	x10, x9
   2387c:	mov	w9, #0x7                   	// #7
   23880:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   23884:	ldr	x10, [x10, #152]
   23888:	cmp	x10, x9
   2388c:	mov	w9, #0x13                  	// #19
   23890:	b	238a0 <PyInit__decimal@@Base+0x1cdec>
   23894:	ldr	x10, [x10, #136]
   23898:	cmp	x10, x9
   2389c:	mov	w9, #0x11                  	// #17
   238a0:	cinc	x9, x9, ls  // ls = plast
   238a4:	mov	w10, #0x13                  	// #19
   238a8:	madd	x8, x8, x10, x9
   238ac:	sub	x8, x8, #0x13
   238b0:	str	x8, [x20, #16]
   238b4:	ldr	x9, [x21]
   238b8:	cmp	x8, x9
   238bc:	b.le	238f0 <PyInit__decimal@@Base+0x1ce3c>
   238c0:	mov	w1, #0x1                   	// #1
   238c4:	mov	x0, x20
   238c8:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   238cc:	ldr	x8, [x20, #8]
   238d0:	add	x8, x8, #0x1
   238d4:	str	x8, [x20, #8]
   238d8:	ldr	x8, [x21]
   238dc:	str	x8, [x20, #16]
   238e0:	mov	x0, x20
   238e4:	mov	x1, x21
   238e8:	mov	x2, x19
   238ec:	bl	24944 <PyInit__decimal@@Base+0x1de90>
   238f0:	ldr	w8, [x19]
   238f4:	orr	w9, w8, #0x1000
   238f8:	str	w9, [x19]
   238fc:	cbz	x22, 23634 <PyInit__decimal@@Base+0x1cb80>
   23900:	mov	w9, #0x1040                	// #4160
   23904:	orr	w8, w8, w9
   23908:	str	w8, [x19]
   2390c:	ldp	x20, x19, [sp, #32]
   23910:	ldp	x22, x21, [sp, #16]
   23914:	ldp	x29, x30, [sp], #48
   23918:	ret
   2391c:	mov	w9, #0xe                   	// #14
   23920:	b	238a4 <PyInit__decimal@@Base+0x1cdf0>
   23924:	mov	w9, #0x9                   	// #9
   23928:	b	238a4 <PyInit__decimal@@Base+0x1cdf0>
   2392c:	stp	x29, x30, [sp, #-48]!
   23930:	str	x21, [sp, #16]
   23934:	stp	x20, x19, [sp, #32]
   23938:	mov	x29, sp
   2393c:	mov	x19, x3
   23940:	mov	x20, x2
   23944:	mov	x2, x1
   23948:	mov	w1, wzr
   2394c:	mov	x3, xzr
   23950:	mov	x21, x0
   23954:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23958:	mov	x0, x21
   2395c:	mov	x1, x20
   23960:	mov	x2, x19
   23964:	ldp	x20, x19, [sp, #32]
   23968:	ldr	x21, [sp, #16]
   2396c:	ldp	x29, x30, [sp], #48
   23970:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23974:	stp	x29, x30, [sp, #-48]!
   23978:	str	x21, [sp, #16]
   2397c:	stp	x20, x19, [sp, #32]
   23980:	mov	x29, sp
   23984:	sxtw	x8, w1
   23988:	cmp	x8, #0x0
   2398c:	mov	x19, x3
   23990:	mov	x20, x2
   23994:	cneg	x2, x8, mi  // mi = first
   23998:	lsr	x1, x8, #63
   2399c:	mov	x3, xzr
   239a0:	mov	x21, x0
   239a4:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   239a8:	mov	x0, x21
   239ac:	mov	x1, x20
   239b0:	mov	x2, x19
   239b4:	ldp	x20, x19, [sp, #32]
   239b8:	ldr	x21, [sp, #16]
   239bc:	ldp	x29, x30, [sp], #48
   239c0:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   239c4:	stp	x29, x30, [sp, #-48]!
   239c8:	str	x21, [sp, #16]
   239cc:	stp	x20, x19, [sp, #32]
   239d0:	mov	x29, sp
   239d4:	mov	x19, x3
   239d8:	mov	x20, x2
   239dc:	mov	w2, w1
   239e0:	mov	w1, wzr
   239e4:	mov	x3, xzr
   239e8:	mov	x21, x0
   239ec:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   239f0:	mov	x0, x21
   239f4:	mov	x1, x20
   239f8:	mov	x2, x19
   239fc:	ldp	x20, x19, [sp, #32]
   23a00:	ldr	x21, [sp, #16]
   23a04:	ldp	x29, x30, [sp], #48
   23a08:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23a0c:	stp	x29, x30, [sp, #-48]!
   23a10:	str	x21, [sp, #16]
   23a14:	stp	x20, x19, [sp, #32]
   23a18:	mov	x29, sp
   23a1c:	cmp	x1, #0x0
   23a20:	mov	x19, x3
   23a24:	mov	x20, x2
   23a28:	cneg	x2, x1, mi  // mi = first
   23a2c:	lsr	x1, x1, #63
   23a30:	mov	x3, xzr
   23a34:	mov	x21, x0
   23a38:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23a3c:	mov	x0, x21
   23a40:	mov	x1, x20
   23a44:	mov	x2, x19
   23a48:	ldp	x20, x19, [sp, #32]
   23a4c:	ldr	x21, [sp, #16]
   23a50:	ldp	x29, x30, [sp], #48
   23a54:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23a58:	stp	x29, x30, [sp, #-48]!
   23a5c:	str	x21, [sp, #16]
   23a60:	stp	x20, x19, [sp, #32]
   23a64:	mov	x29, sp
   23a68:	mov	x19, x3
   23a6c:	mov	x20, x2
   23a70:	mov	x2, x1
   23a74:	mov	w1, wzr
   23a78:	mov	x3, xzr
   23a7c:	mov	x21, x0
   23a80:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23a84:	mov	x0, x21
   23a88:	mov	x1, x20
   23a8c:	mov	x2, x19
   23a90:	ldp	x20, x19, [sp, #32]
   23a94:	ldr	x21, [sp, #16]
   23a98:	ldp	x29, x30, [sp], #48
   23a9c:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23aa0:	stp	x29, x30, [sp, #-64]!
   23aa4:	str	x23, [sp, #16]
   23aa8:	stp	x22, x21, [sp, #32]
   23aac:	stp	x20, x19, [sp, #48]
   23ab0:	mov	x29, sp
   23ab4:	ldrb	w8, [x0]
   23ab8:	mov	x19, x3
   23abc:	mov	x20, x2
   23ac0:	mov	x21, x0
   23ac4:	mov	x22, x1
   23ac8:	tbnz	w8, #5, 23b08 <PyInit__decimal@@Base+0x1d054>
   23acc:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   23ad0:	ldr	x8, [x21, #32]
   23ad4:	ldr	x1, [x23, #1344]
   23ad8:	cmp	x8, x1
   23adc:	b.le	23b08 <PyInit__decimal@@Base+0x1d054>
   23ae0:	strb	wzr, [x29, #28]
   23ae4:	ldr	x0, [x21, #40]
   23ae8:	add	x3, x29, #0x1c
   23aec:	mov	w2, #0x8                   	// #8
   23af0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   23af4:	str	x0, [x21, #40]
   23af8:	ldrb	w8, [x29, #28]
   23afc:	cbnz	w8, 23b08 <PyInit__decimal@@Base+0x1d054>
   23b00:	ldr	x8, [x23, #1344]
   23b04:	str	x8, [x21, #32]
   23b08:	cmp	x22, #0x0
   23b0c:	cneg	x2, x22, mi  // mi = first
   23b10:	lsr	x1, x22, #63
   23b14:	mov	x0, x21
   23b18:	mov	x3, xzr
   23b1c:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23b20:	mov	x0, x21
   23b24:	mov	x1, x20
   23b28:	mov	x2, x19
   23b2c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23b30:	ldp	x20, x19, [sp, #48]
   23b34:	ldp	x22, x21, [sp, #32]
   23b38:	ldr	x23, [sp, #16]
   23b3c:	ldp	x29, x30, [sp], #64
   23b40:	ret
   23b44:	stp	x29, x30, [sp, #-64]!
   23b48:	str	x23, [sp, #16]
   23b4c:	stp	x22, x21, [sp, #32]
   23b50:	stp	x20, x19, [sp, #48]
   23b54:	mov	x29, sp
   23b58:	ldrb	w8, [x0]
   23b5c:	mov	x19, x3
   23b60:	mov	x20, x2
   23b64:	mov	x21, x0
   23b68:	mov	x22, x1
   23b6c:	tbnz	w8, #5, 23bb0 <PyInit__decimal@@Base+0x1d0fc>
   23b70:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   23b74:	ldr	x9, [x21, #32]
   23b78:	ldr	x1, [x23, #1344]
   23b7c:	cmp	x9, x1
   23b80:	b.le	23bb0 <PyInit__decimal@@Base+0x1d0fc>
   23b84:	strb	wzr, [x29, #28]
   23b88:	ldr	x0, [x21, #40]
   23b8c:	add	x3, x29, #0x1c
   23b90:	mov	w2, #0x8                   	// #8
   23b94:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   23b98:	str	x0, [x21, #40]
   23b9c:	ldrb	w8, [x29, #28]
   23ba0:	cbnz	w8, 23bac <PyInit__decimal@@Base+0x1d0f8>
   23ba4:	ldr	x8, [x23, #1344]
   23ba8:	str	x8, [x21, #32]
   23bac:	ldrb	w8, [x21]
   23bb0:	mov	x11, #0xffffffff89e7ffff    	// #-1981284353
   23bb4:	movk	x11, #0x2304, lsl #32
   23bb8:	ldr	x9, [x21, #40]
   23bbc:	movk	x11, #0x8ac7, lsl #48
   23bc0:	and	w8, w8, #0xf0
   23bc4:	cmp	x22, x11
   23bc8:	mov	w12, #0x1                   	// #1
   23bcc:	strb	w8, [x21]
   23bd0:	csinc	x8, xzr, x11, ls  // ls = plast
   23bd4:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   23bd8:	sub	x11, x22, x8
   23bdc:	cset	w13, hi  // hi = pmore
   23be0:	cinc	x8, x12, hi  // hi = pmore
   23be4:	str	xzr, [x21, #8]
   23be8:	add	x10, x10, #0xca0
   23bec:	stp	x11, x13, [x9]
   23bf0:	str	x8, [x21, #24]
   23bf4:	add	x9, x9, x8, lsl #3
   23bf8:	ldur	x9, [x9, #-8]
   23bfc:	ldr	x11, [x10, #72]
   23c00:	cmp	x11, x9
   23c04:	b.ls	23c30 <PyInit__decimal@@Base+0x1d17c>  // b.plast
   23c08:	ldr	x11, [x10, #32]
   23c0c:	cmp	x11, x9
   23c10:	b.ls	23c58 <PyInit__decimal@@Base+0x1d1a4>  // b.plast
   23c14:	ldr	x11, [x10, #16]
   23c18:	cmp	x11, x9
   23c1c:	b.ls	23c9c <PyInit__decimal@@Base+0x1d1e8>  // b.plast
   23c20:	ldr	x10, [x10, #8]
   23c24:	cmp	x10, x9
   23c28:	mov	w9, #0x1                   	// #1
   23c2c:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23c30:	ldr	x11, [x10, #112]
   23c34:	cmp	x11, x9
   23c38:	b.ls	23c74 <PyInit__decimal@@Base+0x1d1c0>  // b.plast
   23c3c:	ldr	x11, [x10, #88]
   23c40:	cmp	x11, x9
   23c44:	b.ls	23cac <PyInit__decimal@@Base+0x1d1f8>  // b.plast
   23c48:	ldr	x10, [x10, #80]
   23c4c:	cmp	x10, x9
   23c50:	mov	w9, #0xa                   	// #10
   23c54:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23c58:	ldr	x11, [x10, #48]
   23c5c:	cmp	x11, x9
   23c60:	b.ls	23cc8 <PyInit__decimal@@Base+0x1d214>  // b.plast
   23c64:	ldr	x10, [x10, #40]
   23c68:	cmp	x10, x9
   23c6c:	mov	w9, #0x5                   	// #5
   23c70:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23c74:	ldr	x11, [x10, #144]
   23c78:	cmp	x11, x9
   23c7c:	b.ls	23ce4 <PyInit__decimal@@Base+0x1d230>  // b.plast
   23c80:	ldr	x11, [x10, #128]
   23c84:	cmp	x11, x9
   23c88:	b.ls	23cf4 <PyInit__decimal@@Base+0x1d240>  // b.plast
   23c8c:	ldr	x10, [x10, #120]
   23c90:	cmp	x10, x9
   23c94:	mov	w9, #0xf                   	// #15
   23c98:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23c9c:	ldr	x10, [x10, #24]
   23ca0:	cmp	x10, x9
   23ca4:	mov	w9, #0x3                   	// #3
   23ca8:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23cac:	ldr	x11, [x10, #104]
   23cb0:	cmp	x11, x9
   23cb4:	b.ls	23d38 <PyInit__decimal@@Base+0x1d284>  // b.plast
   23cb8:	ldr	x10, [x10, #96]
   23cbc:	cmp	x10, x9
   23cc0:	mov	w9, #0xc                   	// #12
   23cc4:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23cc8:	ldr	x11, [x10, #64]
   23ccc:	cmp	x11, x9
   23cd0:	b.ls	23d40 <PyInit__decimal@@Base+0x1d28c>  // b.plast
   23cd4:	ldr	x10, [x10, #56]
   23cd8:	cmp	x10, x9
   23cdc:	mov	w9, #0x7                   	// #7
   23ce0:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23ce4:	ldr	x10, [x10, #152]
   23ce8:	cmp	x10, x9
   23cec:	mov	w9, #0x13                  	// #19
   23cf0:	b	23d00 <PyInit__decimal@@Base+0x1d24c>
   23cf4:	ldr	x10, [x10, #136]
   23cf8:	cmp	x10, x9
   23cfc:	mov	w9, #0x11                  	// #17
   23d00:	cinc	x9, x9, ls  // ls = plast
   23d04:	mov	w10, #0x13                  	// #19
   23d08:	madd	x8, x8, x10, x9
   23d0c:	sub	x8, x8, #0x13
   23d10:	mov	x0, x21
   23d14:	mov	x1, x20
   23d18:	mov	x2, x19
   23d1c:	str	x8, [x21, #16]
   23d20:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23d24:	ldp	x20, x19, [sp, #48]
   23d28:	ldp	x22, x21, [sp, #32]
   23d2c:	ldr	x23, [sp, #16]
   23d30:	ldp	x29, x30, [sp], #64
   23d34:	ret
   23d38:	mov	w9, #0xe                   	// #14
   23d3c:	b	23d04 <PyInit__decimal@@Base+0x1d250>
   23d40:	mov	w9, #0x9                   	// #9
   23d44:	b	23d04 <PyInit__decimal@@Base+0x1d250>
   23d48:	stp	x29, x30, [sp, #-64]!
   23d4c:	str	x23, [sp, #16]
   23d50:	stp	x22, x21, [sp, #32]
   23d54:	stp	x20, x19, [sp, #48]
   23d58:	mov	x29, sp
   23d5c:	ldrb	w8, [x0]
   23d60:	mov	x19, x3
   23d64:	mov	x20, x2
   23d68:	mov	x21, x0
   23d6c:	sxtw	x22, w1
   23d70:	tbnz	w8, #5, 23db0 <PyInit__decimal@@Base+0x1d2fc>
   23d74:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   23d78:	ldr	x8, [x21, #32]
   23d7c:	ldr	x1, [x23, #1344]
   23d80:	cmp	x8, x1
   23d84:	b.le	23db0 <PyInit__decimal@@Base+0x1d2fc>
   23d88:	strb	wzr, [x29, #28]
   23d8c:	ldr	x0, [x21, #40]
   23d90:	add	x3, x29, #0x1c
   23d94:	mov	w2, #0x8                   	// #8
   23d98:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   23d9c:	str	x0, [x21, #40]
   23da0:	ldrb	w8, [x29, #28]
   23da4:	cbnz	w8, 23db0 <PyInit__decimal@@Base+0x1d2fc>
   23da8:	ldr	x8, [x23, #1344]
   23dac:	str	x8, [x21, #32]
   23db0:	cmp	x22, #0x0
   23db4:	cneg	x2, x22, mi  // mi = first
   23db8:	lsr	x1, x22, #63
   23dbc:	mov	x0, x21
   23dc0:	mov	x3, xzr
   23dc4:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23dc8:	mov	x0, x21
   23dcc:	mov	x1, x20
   23dd0:	mov	x2, x19
   23dd4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23dd8:	ldp	x20, x19, [sp, #48]
   23ddc:	ldp	x22, x21, [sp, #32]
   23de0:	ldr	x23, [sp, #16]
   23de4:	ldp	x29, x30, [sp], #64
   23de8:	ret
   23dec:	mov	w1, w1
   23df0:	b	23b44 <PyInit__decimal@@Base+0x1d090>
   23df4:	stp	x29, x30, [sp, #-64]!
   23df8:	str	x23, [sp, #16]
   23dfc:	stp	x22, x21, [sp, #32]
   23e00:	stp	x20, x19, [sp, #48]
   23e04:	mov	x29, sp
   23e08:	ldrb	w8, [x0]
   23e0c:	mov	x19, x3
   23e10:	mov	x20, x2
   23e14:	mov	x21, x0
   23e18:	mov	x22, x1
   23e1c:	tbnz	w8, #5, 23e5c <PyInit__decimal@@Base+0x1d3a8>
   23e20:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   23e24:	ldr	x8, [x21, #32]
   23e28:	ldr	x1, [x23, #1344]
   23e2c:	cmp	x8, x1
   23e30:	b.le	23e5c <PyInit__decimal@@Base+0x1d3a8>
   23e34:	strb	wzr, [x29, #28]
   23e38:	ldr	x0, [x21, #40]
   23e3c:	add	x3, x29, #0x1c
   23e40:	mov	w2, #0x8                   	// #8
   23e44:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   23e48:	str	x0, [x21, #40]
   23e4c:	ldrb	w8, [x29, #28]
   23e50:	cbnz	w8, 23e5c <PyInit__decimal@@Base+0x1d3a8>
   23e54:	ldr	x8, [x23, #1344]
   23e58:	str	x8, [x21, #32]
   23e5c:	cmp	x22, #0x0
   23e60:	cneg	x2, x22, mi  // mi = first
   23e64:	lsr	x1, x22, #63
   23e68:	mov	x0, x21
   23e6c:	mov	x3, xzr
   23e70:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   23e74:	mov	x0, x21
   23e78:	mov	x1, x20
   23e7c:	mov	x2, x19
   23e80:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   23e84:	ldp	x20, x19, [sp, #48]
   23e88:	ldp	x22, x21, [sp, #32]
   23e8c:	ldr	x23, [sp, #16]
   23e90:	ldp	x29, x30, [sp], #64
   23e94:	ret
   23e98:	b	23b44 <PyInit__decimal@@Base+0x1d090>
   23e9c:	mov	x8, x0
   23ea0:	mov	w0, #0x1                   	// #1
   23ea4:	mov	x2, x1
   23ea8:	mov	x1, x8
   23eac:	b	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   23eb0:	sub	sp, sp, #0x90
   23eb4:	stp	x29, x30, [sp, #80]
   23eb8:	stp	x24, x23, [sp, #96]
   23ebc:	stp	x22, x21, [sp, #112]
   23ec0:	stp	x20, x19, [sp, #128]
   23ec4:	add	x29, sp, #0x50
   23ec8:	ldrb	w24, [x1]
   23ecc:	mov	x19, x2
   23ed0:	tst	w24, #0xe
   23ed4:	b.eq	23f00 <PyInit__decimal@@Base+0x1d44c>  // b.none
   23ed8:	ldr	w8, [x19]
   23edc:	mov	x0, #0xffffffffffffffff    	// #-1
   23ee0:	orr	w8, w8, #0x100
   23ee4:	str	w8, [x19]
   23ee8:	ldp	x20, x19, [sp, #128]
   23eec:	ldp	x22, x21, [sp, #112]
   23ef0:	ldp	x24, x23, [sp, #96]
   23ef4:	ldp	x29, x30, [sp, #80]
   23ef8:	add	sp, sp, #0x90
   23efc:	ret
   23f00:	ldr	x20, [x1, #24]
   23f04:	mov	x21, x1
   23f08:	ldr	x1, [x1, #40]
   23f0c:	mov	w8, w0
   23f10:	sub	x9, x20, #0x1
   23f14:	ldr	x0, [x1, x9, lsl #3]
   23f18:	cbz	x0, 23ee8 <PyInit__decimal@@Base+0x1d434>
   23f1c:	cbz	w8, 23f24 <PyInit__decimal@@Base+0x1d470>
   23f20:	tbnz	w24, #0, 23ed8 <PyInit__decimal@@Base+0x1d424>
   23f24:	ldp	x22, x23, [x21, #8]
   23f28:	add	x8, x22, x23
   23f2c:	cmp	x8, #0x15
   23f30:	b.ge	23ed8 <PyInit__decimal@@Base+0x1d424>  // b.tcont
   23f34:	tbz	x22, #63, 24104 <PyInit__decimal@@Base+0x1d650>
   23f38:	cmp	x20, #0x1
   23f3c:	b.lt	23f64 <PyInit__decimal@@Base+0x1d4b0>  // b.tstop
   23f40:	mov	x10, xzr
   23f44:	mov	x12, x1
   23f48:	mov	x13, x20
   23f4c:	ldr	x11, [x12]
   23f50:	cbnz	x11, 23f6c <PyInit__decimal@@Base+0x1d4b8>
   23f54:	add	x10, x10, #0x13
   23f58:	subs	x13, x13, #0x1
   23f5c:	add	x12, x12, #0x8
   23f60:	b.ne	23f4c <PyInit__decimal@@Base+0x1d498>  // b.any
   23f64:	mov	x10, xzr
   23f68:	b	23fb4 <PyInit__decimal@@Base+0x1d500>
   23f6c:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   23f70:	movk	x12, #0xcccd
   23f74:	mul	x13, x11, x12
   23f78:	mov	x14, #0x9999999999999999    	// #-7378697629483820647
   23f7c:	ror	x13, x13, #1
   23f80:	movk	x14, #0x1999, lsl #48
   23f84:	cmp	x13, x14
   23f88:	b.hi	23fb4 <PyInit__decimal@@Base+0x1d500>  // b.pmore
   23f8c:	mov	x13, #0x9999999999999999    	// #-7378697629483820647
   23f90:	movk	x13, #0x999a
   23f94:	movk	x13, #0x1999, lsl #48
   23f98:	umulh	x11, x11, x12
   23f9c:	lsr	x11, x11, #3
   23fa0:	mul	x14, x11, x12
   23fa4:	ror	x14, x14, #1
   23fa8:	cmp	x14, x13
   23fac:	add	x10, x10, #0x1
   23fb0:	b.cc	23f98 <PyInit__decimal@@Base+0x1d4e4>  // b.lo, b.ul, b.last
   23fb4:	cmn	x10, x22
   23fb8:	b.mi	23ed8 <PyInit__decimal@@Base+0x1d424>  // b.first
   23fbc:	add	x10, sp, #0x8
   23fc0:	mov	w11, #0x30                  	// #48
   23fc4:	mov	w12, #0x2                   	// #2
   23fc8:	strb	w11, [sp, #24]
   23fcc:	stp	x12, x10, [sp, #56]
   23fd0:	cbz	x22, 24030 <PyInit__decimal@@Base+0x1d57c>
   23fd4:	ldr	x9, [x1, x9, lsl #3]
   23fd8:	cbz	x9, 24030 <PyInit__decimal@@Base+0x1d57c>
   23fdc:	neg	x3, x22
   23fe0:	cmp	x23, x3
   23fe4:	b.le	24064 <PyInit__decimal@@Base+0x1d5b0>
   23fe8:	mov	x9, #0x9436                	// #37942
   23fec:	movk	x9, #0x50d7, lsl #16
   23ff0:	movk	x9, #0x435e, lsl #32
   23ff4:	movk	x9, #0xd79, lsl #48
   23ff8:	smulh	x9, x8, x9
   23ffc:	add	x9, x9, x9, lsr #63
   24000:	mov	x10, #0xffffffffffffffed    	// #-19
   24004:	mul	x10, x9, x10
   24008:	cmn	x10, x8
   2400c:	add	x0, sp, #0x8
   24010:	mov	x2, x20
   24014:	str	x8, [sp, #40]
   24018:	cinc	x22, x9, ne  // ne = any
   2401c:	bl	1d2fc <PyInit__decimal@@Base+0x16848>
   24020:	ldr	x1, [sp, #64]
   24024:	mov	x20, x22
   24028:	str	x22, [sp, #48]
   2402c:	b	240d0 <PyInit__decimal@@Base+0x1d61c>
   24030:	add	x8, sp, #0x18
   24034:	cmp	x8, x21
   24038:	b.eq	240f0 <PyInit__decimal@@Base+0x1d63c>  // b.none
   2403c:	lsl	x2, x20, #3
   24040:	add	x0, sp, #0x8
   24044:	bl	63c0 <memcpy@plt>
   24048:	mov	w8, #0x30                  	// #48
   2404c:	bfxil	w8, w24, #0, #4
   24050:	stp	x22, x23, [sp, #32]
   24054:	str	x20, [sp, #48]
   24058:	strb	w8, [sp, #24]
   2405c:	add	x1, sp, #0x8
   24060:	b	240f4 <PyInit__decimal@@Base+0x1d640>
   24064:	cset	w2, eq  // eq = none
   24068:	mov	x0, x1
   2406c:	mov	x1, x20
   24070:	bl	265ec <PyInit__decimal@@Base+0x1fb38>
   24074:	ldrb	w8, [sp, #24]
   24078:	tbnz	w8, #5, 240b8 <PyInit__decimal@@Base+0x1d604>
   2407c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   24080:	ldr	x8, [sp, #56]
   24084:	ldr	x1, [x20, #1344]
   24088:	cmp	x8, x1
   2408c:	b.le	240b8 <PyInit__decimal@@Base+0x1d604>
   24090:	ldr	x0, [sp, #64]
   24094:	sub	x3, x29, #0x4
   24098:	mov	w2, #0x8                   	// #8
   2409c:	sturb	wzr, [x29, #-4]
   240a0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   240a4:	ldurb	w8, [x29, #-4]
   240a8:	str	x0, [sp, #64]
   240ac:	cbnz	w8, 240b8 <PyInit__decimal@@Base+0x1d604>
   240b0:	ldr	x8, [x20, #1344]
   240b4:	str	x8, [sp, #56]
   240b8:	ldr	x1, [sp, #64]
   240bc:	mov	w8, #0x1                   	// #1
   240c0:	dup	v0.2d, x8
   240c4:	stur	q0, [sp, #40]
   240c8:	str	xzr, [x1]
   240cc:	ldr	x20, [sp, #48]
   240d0:	ldrb	w8, [x21]
   240d4:	ldrb	w9, [sp, #24]
   240d8:	ldr	x23, [sp, #40]
   240dc:	bfxil	w9, w8, #0, #4
   240e0:	strb	w9, [sp, #24]
   240e4:	ldr	x8, [x21, #8]
   240e8:	str	x8, [sp, #32]
   240ec:	b	240f4 <PyInit__decimal@@Base+0x1d640>
   240f0:	add	x1, sp, #0x8
   240f4:	str	xzr, [sp, #32]
   240f8:	add	x8, x1, x20, lsl #3
   240fc:	ldur	x0, [x8, #-8]
   24100:	mov	x22, xzr
   24104:	mov	x8, #0x435f                	// #17247
   24108:	movk	x8, #0xd79, lsl #16
   2410c:	movk	x8, #0x35e5, lsl #32
   24110:	movk	x8, #0xd794, lsl #48
   24114:	umulh	x8, x23, x8
   24118:	mov	w9, #0x13                  	// #19
   2411c:	lsr	x8, x8, #4
   24120:	msub	x8, x8, x9, x23
   24124:	cmp	x8, #0x0
   24128:	csel	x8, x9, x8, eq  // eq = none
   2412c:	cmp	x20, #0x1
   24130:	b.le	24178 <PyInit__decimal@@Base+0x1d6c4>
   24134:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   24138:	mov	w9, #0x14                  	// #20
   2413c:	add	x10, x10, #0xca0
   24140:	add	x11, x1, x20, lsl #3
   24144:	sub	x9, x9, x8
   24148:	add	x8, x10, x8, lsl #3
   2414c:	ldur	x11, [x11, #-16]
   24150:	ldr	x9, [x10, x9, lsl #3]
   24154:	ldur	x8, [x8, #-8]
   24158:	umulh	x10, x9, x0
   2415c:	udiv	x11, x11, x8
   24160:	cmp	xzr, x10
   24164:	madd	x0, x9, x0, x11
   24168:	cset	w8, ne  // ne = any
   2416c:	cmp	x0, x11
   24170:	b.cc	23ed8 <PyInit__decimal@@Base+0x1d424>  // b.lo, b.ul, b.last
   24174:	cbnz	w8, 23ed8 <PyInit__decimal@@Base+0x1d424>
   24178:	cmp	x22, #0x1
   2417c:	b.lt	23ee8 <PyInit__decimal@@Base+0x1d434>  // b.tstop
   24180:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   24184:	add	x8, x8, #0xca0
   24188:	ldr	x8, [x8, x22, lsl #3]
   2418c:	umulh	x9, x8, x0
   24190:	cbnz	x9, 23ed8 <PyInit__decimal@@Base+0x1d424>
   24194:	mul	x0, x8, x0
   24198:	b	23ee8 <PyInit__decimal@@Base+0x1d434>
   2419c:	mov	x2, x1
   241a0:	mov	x1, x0
   241a4:	mov	w0, wzr
   241a8:	b	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   241ac:	stp	x29, x30, [sp, #-32]!
   241b0:	stp	x20, x19, [sp, #16]
   241b4:	mov	x29, sp
   241b8:	mov	x19, x1
   241bc:	mov	x20, x0
   241c0:	mov	w0, wzr
   241c4:	mov	x1, x20
   241c8:	mov	x2, x19
   241cc:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   241d0:	ldr	w9, [x19]
   241d4:	tbnz	w9, #8, 24210 <PyInit__decimal@@Base+0x1d75c>
   241d8:	ldrb	w10, [x20]
   241dc:	mov	x8, x0
   241e0:	tbnz	x0, #63, 241f8 <PyInit__decimal@@Base+0x1d744>
   241e4:	tst	w10, #0x1
   241e8:	cneg	x0, x8, ne  // ne = any
   241ec:	ldp	x20, x19, [sp, #16]
   241f0:	ldp	x29, x30, [sp], #32
   241f4:	ret
   241f8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   241fc:	cmp	x8, x0
   24200:	b.ne	24208 <PyInit__decimal@@Base+0x1d754>  // b.any
   24204:	tbnz	w10, #0, 241ec <PyInit__decimal@@Base+0x1d738>
   24208:	orr	w8, w9, #0x100
   2420c:	str	w8, [x19]
   24210:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   24214:	ldp	x20, x19, [sp, #16]
   24218:	ldp	x29, x30, [sp], #32
   2421c:	ret
   24220:	mov	x8, x0
   24224:	mov	w0, #0x1                   	// #1
   24228:	mov	x2, x1
   2422c:	mov	x1, x8
   24230:	b	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   24234:	stp	x29, x30, [sp, #-32]!
   24238:	stp	x20, x19, [sp, #16]
   2423c:	mov	x29, sp
   24240:	mov	x19, x1
   24244:	mov	x20, x0
   24248:	mov	w0, wzr
   2424c:	mov	x1, x20
   24250:	mov	x2, x19
   24254:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   24258:	ldr	w9, [x19]
   2425c:	tbnz	w9, #8, 24298 <PyInit__decimal@@Base+0x1d7e4>
   24260:	ldrb	w10, [x20]
   24264:	mov	x8, x0
   24268:	tbnz	x0, #63, 24280 <PyInit__decimal@@Base+0x1d7cc>
   2426c:	tst	w10, #0x1
   24270:	cneg	x0, x8, ne  // ne = any
   24274:	ldp	x20, x19, [sp, #16]
   24278:	ldp	x29, x30, [sp], #32
   2427c:	ret
   24280:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24284:	cmp	x8, x0
   24288:	b.ne	24290 <PyInit__decimal@@Base+0x1d7dc>  // b.any
   2428c:	tbnz	w10, #0, 24274 <PyInit__decimal@@Base+0x1d7c0>
   24290:	orr	w8, w9, #0x100
   24294:	str	w8, [x19]
   24298:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2429c:	ldp	x20, x19, [sp, #16]
   242a0:	ldp	x29, x30, [sp], #32
   242a4:	ret
   242a8:	stp	x29, x30, [sp, #-32]!
   242ac:	str	x19, [sp, #16]
   242b0:	mov	x29, sp
   242b4:	mov	x19, x1
   242b8:	mov	x1, x0
   242bc:	mov	w0, #0x1                   	// #1
   242c0:	mov	x2, x19
   242c4:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   242c8:	ldr	w8, [x19]
   242cc:	tbnz	w8, #8, 242e0 <PyInit__decimal@@Base+0x1d82c>
   242d0:	lsr	x9, x0, #32
   242d4:	cbz	x9, 242e4 <PyInit__decimal@@Base+0x1d830>
   242d8:	orr	w8, w8, #0x100
   242dc:	str	w8, [x19]
   242e0:	mov	w0, #0xffffffff            	// #-1
   242e4:	ldr	x19, [sp, #16]
   242e8:	ldp	x29, x30, [sp], #32
   242ec:	ret
   242f0:	stp	x29, x30, [sp, #-32]!
   242f4:	stp	x20, x19, [sp, #16]
   242f8:	mov	x29, sp
   242fc:	mov	x19, x1
   24300:	mov	x20, x0
   24304:	mov	w0, wzr
   24308:	mov	x1, x20
   2430c:	mov	x2, x19
   24310:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   24314:	ldr	w9, [x19]
   24318:	tbnz	w9, #8, 24358 <PyInit__decimal@@Base+0x1d8a4>
   2431c:	ldrb	w10, [x20]
   24320:	mov	x8, x0
   24324:	tbnz	x0, #63, 24338 <PyInit__decimal@@Base+0x1d884>
   24328:	tst	w10, #0x1
   2432c:	cneg	x0, x8, ne  // ne = any
   24330:	tbz	w9, #8, 24360 <PyInit__decimal@@Base+0x1d8ac>
   24334:	b	24370 <PyInit__decimal@@Base+0x1d8bc>
   24338:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2433c:	cmp	x8, x0
   24340:	b.ne	24350 <PyInit__decimal@@Base+0x1d89c>  // b.any
   24344:	tbz	w10, #0, 24350 <PyInit__decimal@@Base+0x1d89c>
   24348:	tbz	w9, #8, 24360 <PyInit__decimal@@Base+0x1d8ac>
   2434c:	b	24370 <PyInit__decimal@@Base+0x1d8bc>
   24350:	orr	w9, w9, #0x100
   24354:	str	w9, [x19]
   24358:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2435c:	tbnz	w9, #8, 24370 <PyInit__decimal@@Base+0x1d8bc>
   24360:	cmp	x0, w0, sxtw
   24364:	b.eq	24374 <PyInit__decimal@@Base+0x1d8c0>  // b.none
   24368:	orr	w8, w9, #0x100
   2436c:	str	w8, [x19]
   24370:	mov	w0, #0x7fffffff            	// #2147483647
   24374:	ldp	x20, x19, [sp, #16]
   24378:	ldp	x29, x30, [sp], #32
   2437c:	ret
   24380:	stp	x29, x30, [sp, #-48]!
   24384:	str	x21, [sp, #16]
   24388:	stp	x20, x19, [sp, #32]
   2438c:	mov	x29, sp
   24390:	ldrb	w8, [x1]
   24394:	tst	w8, #0xc
   24398:	b.eq	243fc <PyInit__decimal@@Base+0x1d948>  // b.none
   2439c:	ldr	w9, [x3]
   243a0:	and	w10, w8, #0x8
   243a4:	mov	x19, x2
   243a8:	mov	x21, x1
   243ac:	mov	x20, x0
   243b0:	orr	w9, w9, w10, lsl #5
   243b4:	cmp	x0, x1
   243b8:	str	w9, [x3]
   243bc:	b.eq	2445c <PyInit__decimal@@Base+0x1d9a8>  // b.none
   243c0:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   243c4:	ldr	x9, [x21, #24]
   243c8:	ldr	x11, [x10, #1344]
   243cc:	ldr	x10, [x20, #32]
   243d0:	cmp	x11, x9
   243d4:	csel	x1, x9, x11, lt  // lt = tstop
   243d8:	cmp	x1, x10
   243dc:	b.eq	24430 <PyInit__decimal@@Base+0x1d97c>  // b.none
   243e0:	ldrb	w11, [x20]
   243e4:	tbnz	w11, #5, 24410 <PyInit__decimal@@Base+0x1d95c>
   243e8:	mov	x0, x20
   243ec:	mov	x2, x3
   243f0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   243f4:	cbnz	w0, 24428 <PyInit__decimal@@Base+0x1d974>
   243f8:	b	2445c <PyInit__decimal@@Base+0x1d9a8>
   243fc:	mov	w0, wzr
   24400:	ldp	x20, x19, [sp, #32]
   24404:	ldr	x21, [sp, #16]
   24408:	ldp	x29, x30, [sp], #48
   2440c:	ret
   24410:	cmp	x1, x10
   24414:	b.le	24430 <PyInit__decimal@@Base+0x1d97c>
   24418:	mov	x0, x20
   2441c:	mov	x2, x3
   24420:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   24424:	cbz	w0, 2445c <PyInit__decimal@@Base+0x1d9a8>
   24428:	ldr	x9, [x21, #24]
   2442c:	ldrb	w8, [x21]
   24430:	ldrb	w10, [x20]
   24434:	ldr	x0, [x20, #40]
   24438:	bfxil	w10, w8, #0, #4
   2443c:	strb	w10, [x20]
   24440:	ldur	q0, [x21, #8]
   24444:	str	x9, [x20, #24]
   24448:	stur	q0, [x20, #8]
   2444c:	ldr	x8, [x21, #24]
   24450:	ldr	x1, [x21, #40]
   24454:	lsl	x2, x8, #3
   24458:	bl	63c0 <memcpy@plt>
   2445c:	ldrb	w8, [x20]
   24460:	mov	x0, x20
   24464:	and	w8, w8, #0xfffffff1
   24468:	orr	w8, w8, #0x4
   2446c:	strb	w8, [x20]
   24470:	ldr	x1, [x19]
   24474:	ldr	w2, [x19, #40]
   24478:	bl	24544 <PyInit__decimal@@Base+0x1da90>
   2447c:	mov	w0, #0x1                   	// #1
   24480:	ldp	x20, x19, [sp, #32]
   24484:	ldr	x21, [sp, #16]
   24488:	ldp	x29, x30, [sp], #48
   2448c:	ret
   24490:	stp	x29, x30, [sp, #-32]!
   24494:	stp	x20, x19, [sp, #16]
   24498:	mov	x29, sp
   2449c:	cmp	x0, x1
   244a0:	b.eq	24534 <PyInit__decimal@@Base+0x1da80>  // b.none
   244a4:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   244a8:	ldr	x8, [x1, #24]
   244ac:	ldr	x10, [x9, #1344]
   244b0:	ldr	x9, [x0, #32]
   244b4:	mov	x19, x1
   244b8:	mov	x20, x0
   244bc:	cmp	x10, x8
   244c0:	csel	x1, x8, x10, lt  // lt = tstop
   244c4:	cmp	x1, x9
   244c8:	b.eq	24504 <PyInit__decimal@@Base+0x1da50>  // b.none
   244cc:	ldrb	w10, [x20]
   244d0:	tbnz	w10, #5, 244ec <PyInit__decimal@@Base+0x1da38>
   244d4:	mov	x0, x20
   244d8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   244dc:	cbnz	w0, 24500 <PyInit__decimal@@Base+0x1da4c>
   244e0:	ldp	x20, x19, [sp, #16]
   244e4:	ldp	x29, x30, [sp], #32
   244e8:	ret
   244ec:	cmp	x1, x9
   244f0:	b.le	24504 <PyInit__decimal@@Base+0x1da50>
   244f4:	mov	x0, x20
   244f8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   244fc:	cbz	w0, 244e0 <PyInit__decimal@@Base+0x1da2c>
   24500:	ldr	x8, [x19, #24]
   24504:	ldrb	w9, [x19]
   24508:	ldrb	w10, [x20]
   2450c:	ldr	x0, [x20, #40]
   24510:	bfxil	w10, w9, #0, #4
   24514:	strb	w10, [x20]
   24518:	ldur	q0, [x19, #8]
   2451c:	str	x8, [x20, #24]
   24520:	stur	q0, [x20, #8]
   24524:	ldr	x8, [x19, #24]
   24528:	ldr	x1, [x19, #40]
   2452c:	lsl	x2, x8, #3
   24530:	bl	63c0 <memcpy@plt>
   24534:	mov	w0, #0x1                   	// #1
   24538:	ldp	x20, x19, [sp, #16]
   2453c:	ldp	x29, x30, [sp], #32
   24540:	ret
   24544:	sub	sp, sp, #0x50
   24548:	stp	x29, x30, [sp, #16]
   2454c:	stp	x24, x23, [sp, #32]
   24550:	stp	x22, x21, [sp, #48]
   24554:	stp	x20, x19, [sp, #64]
   24558:	add	x29, sp, #0x10
   2455c:	ldr	x8, [x0, #24]
   24560:	cmp	x8, #0x1
   24564:	b.lt	247d0 <PyInit__decimal@@Base+0x1dd1c>  // b.tstop
   24568:	mov	x20, x0
   2456c:	ldr	x9, [x20, #16]!
   24570:	sub	x8, x1, w2, sxtw
   24574:	mov	x19, x0
   24578:	cmp	x9, x8
   2457c:	b.le	247d0 <PyInit__decimal@@Base+0x1dd1c>
   24580:	cbz	x8, 245dc <PyInit__decimal@@Base+0x1db28>
   24584:	mov	x9, #0x9436                	// #37942
   24588:	movk	x9, #0x50d7, lsl #16
   2458c:	movk	x9, #0x435e, lsl #32
   24590:	movk	x9, #0xd79, lsl #48
   24594:	smulh	x9, x8, x9
   24598:	mov	x10, #0xffffffffffffffed    	// #-19
   2459c:	add	x9, x9, x9, lsr #63
   245a0:	madd	x11, x9, x10, x8
   245a4:	cmp	x11, #0x0
   245a8:	adrp	x23, 44000 <PyInit__decimal@@Base+0x3d54c>
   245ac:	cset	w10, ne  // ne = any
   245b0:	cinc	x12, x9, ne  // ne = any
   245b4:	add	x23, x23, #0xca0
   245b8:	cbz	x11, 24624 <PyInit__decimal@@Base+0x1db70>
   245bc:	ldr	x8, [x19, #40]
   245c0:	ldr	x11, [x23, x11, lsl #3]
   245c4:	add	x12, x8, x12, lsl #3
   245c8:	ldur	x13, [x12, #-8]
   245cc:	udiv	x14, x13, x11
   245d0:	msub	x11, x14, x11, x13
   245d4:	stur	x11, [x12, #-8]
   245d8:	b	24628 <PyInit__decimal@@Base+0x1db74>
   245dc:	ldrb	w8, [x19]
   245e0:	tbnz	w8, #5, 247cc <PyInit__decimal@@Base+0x1dd18>
   245e4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   245e8:	ldr	x8, [x19, #32]
   245ec:	ldr	x1, [x21, #1344]
   245f0:	cmp	x8, x1
   245f4:	b.le	247cc <PyInit__decimal@@Base+0x1dd18>
   245f8:	sturb	wzr, [x29, #-4]
   245fc:	ldr	x0, [x19, #40]
   24600:	sub	x3, x29, #0x4
   24604:	mov	w2, #0x8                   	// #8
   24608:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2460c:	str	x0, [x19, #40]
   24610:	ldurb	w8, [x29, #-4]
   24614:	cbnz	w8, 247cc <PyInit__decimal@@Base+0x1dd18>
   24618:	ldr	x8, [x21, #1344]
   2461c:	str	x8, [x19, #32]
   24620:	b	247cc <PyInit__decimal@@Base+0x1dd18>
   24624:	ldr	x8, [x19, #40]
   24628:	add	x10, x9, x10
   2462c:	mov	w11, #0x13                  	// #19
   24630:	sub	x9, x10, #0x1
   24634:	mul	x10, x10, x11
   24638:	sub	x10, x10, #0x13
   2463c:	add	x24, x9, #0x1
   24640:	mov	x21, x9
   24644:	cmp	x24, #0x2
   24648:	mov	x22, x10
   2464c:	b.lt	24660 <PyInit__decimal@@Base+0x1dbac>  // b.tstop
   24650:	ldr	x11, [x8, x21, lsl #3]
   24654:	sub	x9, x21, #0x1
   24658:	sub	x10, x22, #0x13
   2465c:	cbz	x11, 2463c <PyInit__decimal@@Base+0x1db88>
   24660:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   24664:	ldr	x9, [x8, #1344]
   24668:	ldr	x8, [x19, #32]
   2466c:	cmp	x9, x24
   24670:	csinc	x1, x9, x21, ge  // ge = tcont
   24674:	cmp	x1, x8
   24678:	b.eq	246a8 <PyInit__decimal@@Base+0x1dbf4>  // b.none
   2467c:	ldrb	w9, [x19]
   24680:	tbnz	w9, #5, 24694 <PyInit__decimal@@Base+0x1dbe0>
   24684:	add	x2, sp, #0x8
   24688:	mov	x0, x19
   2468c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   24690:	b	246a8 <PyInit__decimal@@Base+0x1dbf4>
   24694:	cmp	x1, x8
   24698:	b.le	246a8 <PyInit__decimal@@Base+0x1dbf4>
   2469c:	add	x2, sp, #0x8
   246a0:	mov	x0, x19
   246a4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   246a8:	ldr	x8, [x19, #40]
   246ac:	str	x24, [x19, #24]
   246b0:	ldr	x10, [x23, #72]
   246b4:	ldr	x9, [x8, x21, lsl #3]
   246b8:	cmp	x10, x9
   246bc:	b.ls	246e8 <PyInit__decimal@@Base+0x1dc34>  // b.plast
   246c0:	ldr	x10, [x23, #32]
   246c4:	cmp	x10, x9
   246c8:	b.ls	24710 <PyInit__decimal@@Base+0x1dc5c>  // b.plast
   246cc:	ldr	x10, [x23, #16]
   246d0:	cmp	x10, x9
   246d4:	b.ls	24754 <PyInit__decimal@@Base+0x1dca0>  // b.plast
   246d8:	ldr	x10, [x23, #8]
   246dc:	cmp	x10, x9
   246e0:	mov	w9, #0x1                   	// #1
   246e4:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   246e8:	ldr	x10, [x23, #112]
   246ec:	cmp	x10, x9
   246f0:	b.ls	2472c <PyInit__decimal@@Base+0x1dc78>  // b.plast
   246f4:	ldr	x10, [x23, #88]
   246f8:	cmp	x10, x9
   246fc:	b.ls	24764 <PyInit__decimal@@Base+0x1dcb0>  // b.plast
   24700:	ldr	x10, [x23, #80]
   24704:	cmp	x10, x9
   24708:	mov	w9, #0xa                   	// #10
   2470c:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   24710:	ldr	x10, [x23, #48]
   24714:	cmp	x10, x9
   24718:	b.ls	24780 <PyInit__decimal@@Base+0x1dccc>  // b.plast
   2471c:	ldr	x10, [x23, #40]
   24720:	cmp	x10, x9
   24724:	mov	w9, #0x5                   	// #5
   24728:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   2472c:	ldr	x10, [x23, #144]
   24730:	cmp	x10, x9
   24734:	b.ls	2479c <PyInit__decimal@@Base+0x1dce8>  // b.plast
   24738:	ldr	x10, [x23, #128]
   2473c:	cmp	x10, x9
   24740:	b.ls	247ac <PyInit__decimal@@Base+0x1dcf8>  // b.plast
   24744:	ldr	x10, [x23, #120]
   24748:	cmp	x10, x9
   2474c:	mov	w9, #0xf                   	// #15
   24750:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   24754:	ldr	x10, [x23, #24]
   24758:	cmp	x10, x9
   2475c:	mov	w9, #0x3                   	// #3
   24760:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   24764:	ldr	x10, [x23, #104]
   24768:	cmp	x10, x9
   2476c:	b.ls	247e8 <PyInit__decimal@@Base+0x1dd34>  // b.plast
   24770:	ldr	x10, [x23, #96]
   24774:	cmp	x10, x9
   24778:	mov	w9, #0xc                   	// #12
   2477c:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   24780:	ldr	x10, [x23, #64]
   24784:	cmp	x10, x9
   24788:	b.ls	247f0 <PyInit__decimal@@Base+0x1dd3c>  // b.plast
   2478c:	ldr	x10, [x23, #56]
   24790:	cmp	x10, x9
   24794:	mov	w9, #0x7                   	// #7
   24798:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   2479c:	ldr	x10, [x23, #152]
   247a0:	cmp	x10, x9
   247a4:	mov	w9, #0x13                  	// #19
   247a8:	b	247b8 <PyInit__decimal@@Base+0x1dd04>
   247ac:	ldr	x10, [x23, #136]
   247b0:	cmp	x10, x9
   247b4:	mov	w9, #0x11                  	// #17
   247b8:	cinc	x9, x9, ls  // ls = plast
   247bc:	add	x9, x9, x22
   247c0:	str	x9, [x20]
   247c4:	ldr	x8, [x8, x21, lsl #3]
   247c8:	cbnz	x8, 247d0 <PyInit__decimal@@Base+0x1dd1c>
   247cc:	stp	xzr, xzr, [x20]
   247d0:	ldp	x20, x19, [sp, #64]
   247d4:	ldp	x22, x21, [sp, #48]
   247d8:	ldp	x24, x23, [sp, #32]
   247dc:	ldp	x29, x30, [sp, #16]
   247e0:	add	sp, sp, #0x50
   247e4:	ret
   247e8:	mov	w9, #0xe                   	// #14
   247ec:	b	247bc <PyInit__decimal@@Base+0x1dd08>
   247f0:	mov	w9, #0x9                   	// #9
   247f4:	b	247bc <PyInit__decimal@@Base+0x1dd08>
   247f8:	stp	x29, x30, [sp, #-48]!
   247fc:	str	x21, [sp, #16]
   24800:	stp	x20, x19, [sp, #32]
   24804:	mov	x29, sp
   24808:	ldrb	w8, [x1]
   2480c:	ldrb	w9, [x2]
   24810:	orr	w10, w9, w8
   24814:	tst	w10, #0xc
   24818:	b.eq	24844 <PyInit__decimal@@Base+0x1dd90>  // b.none
   2481c:	mov	x19, x3
   24820:	mov	x21, x1
   24824:	mov	x20, x0
   24828:	tbnz	w8, #3, 24858 <PyInit__decimal@@Base+0x1dda4>
   2482c:	tbnz	w9, #3, 24870 <PyInit__decimal@@Base+0x1ddbc>
   24830:	tst	w8, #0x4
   24834:	csel	x21, x2, x21, eq  // eq = none
   24838:	cmp	x21, x20
   2483c:	b.ne	24888 <PyInit__decimal@@Base+0x1ddd4>  // b.any
   24840:	b	24910 <PyInit__decimal@@Base+0x1de5c>
   24844:	mov	w0, wzr
   24848:	ldp	x20, x19, [sp, #32]
   2484c:	ldr	x21, [sp, #16]
   24850:	ldp	x29, x30, [sp], #48
   24854:	ret
   24858:	ldr	w8, [x4]
   2485c:	orr	w8, w8, #0x100
   24860:	str	w8, [x4]
   24864:	cmp	x21, x20
   24868:	b.ne	24888 <PyInit__decimal@@Base+0x1ddd4>  // b.any
   2486c:	b	24910 <PyInit__decimal@@Base+0x1de5c>
   24870:	ldr	w8, [x4]
   24874:	mov	x21, x2
   24878:	orr	w8, w8, #0x100
   2487c:	str	w8, [x4]
   24880:	cmp	x21, x20
   24884:	b.eq	24910 <PyInit__decimal@@Base+0x1de5c>  // b.none
   24888:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   2488c:	ldr	x8, [x21, #24]
   24890:	ldr	x10, [x9, #1344]
   24894:	ldr	x9, [x20, #32]
   24898:	cmp	x10, x8
   2489c:	csel	x1, x8, x10, lt  // lt = tstop
   248a0:	cmp	x1, x9
   248a4:	b.eq	248e0 <PyInit__decimal@@Base+0x1de2c>  // b.none
   248a8:	ldrb	w10, [x20]
   248ac:	tbnz	w10, #5, 248c4 <PyInit__decimal@@Base+0x1de10>
   248b0:	mov	x0, x20
   248b4:	mov	x2, x4
   248b8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   248bc:	cbnz	w0, 248dc <PyInit__decimal@@Base+0x1de28>
   248c0:	b	24910 <PyInit__decimal@@Base+0x1de5c>
   248c4:	cmp	x1, x9
   248c8:	b.le	248e0 <PyInit__decimal@@Base+0x1de2c>
   248cc:	mov	x0, x20
   248d0:	mov	x2, x4
   248d4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   248d8:	cbz	w0, 24910 <PyInit__decimal@@Base+0x1de5c>
   248dc:	ldr	x8, [x21, #24]
   248e0:	ldrb	w9, [x21]
   248e4:	ldrb	w10, [x20]
   248e8:	ldr	x0, [x20, #40]
   248ec:	bfxil	w10, w9, #0, #4
   248f0:	strb	w10, [x20]
   248f4:	ldur	q0, [x21, #8]
   248f8:	str	x8, [x20, #24]
   248fc:	stur	q0, [x20, #8]
   24900:	ldr	x8, [x21, #24]
   24904:	ldr	x1, [x21, #40]
   24908:	lsl	x2, x8, #3
   2490c:	bl	63c0 <memcpy@plt>
   24910:	ldrb	w8, [x20]
   24914:	mov	x0, x20
   24918:	and	w8, w8, #0xfffffff1
   2491c:	orr	w8, w8, #0x4
   24920:	strb	w8, [x20]
   24924:	ldr	x1, [x19]
   24928:	ldr	w2, [x19, #40]
   2492c:	bl	24544 <PyInit__decimal@@Base+0x1da90>
   24930:	mov	w0, #0x1                   	// #1
   24934:	ldp	x20, x19, [sp, #32]
   24938:	ldr	x21, [sp, #16]
   2493c:	ldp	x29, x30, [sp], #48
   24940:	ret
   24944:	sub	sp, sp, #0x60
   24948:	stp	x29, x30, [sp, #32]
   2494c:	stp	x24, x23, [sp, #48]
   24950:	stp	x22, x21, [sp, #64]
   24954:	stp	x20, x19, [sp, #80]
   24958:	add	x29, sp, #0x20
   2495c:	mov	x22, x0
   24960:	ldr	x8, [x22, #8]!
   24964:	ldr	x9, [x1, #8]
   24968:	mov	x20, x0
   2496c:	mov	x21, x1
   24970:	ldr	x10, [x22, #8]
   24974:	mov	x19, x2
   24978:	add	x10, x8, x10
   2497c:	sub	x23, x10, #0x1
   24980:	cmp	x23, x9
   24984:	b.le	24a24 <PyInit__decimal@@Base+0x1df70>
   24988:	ldr	x0, [x20, #40]
   2498c:	ldr	x8, [x20, #24]
   24990:	add	x8, x0, x8, lsl #3
   24994:	ldur	x8, [x8, #-8]
   24998:	cbz	x8, 24b20 <PyInit__decimal@@Base+0x1e06c>
   2499c:	ldr	w8, [x21, #36]
   249a0:	cmp	w8, #0x8
   249a4:	b.hi	252f4 <PyInit__decimal@@Base+0x1e840>  // b.pmore
   249a8:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   249ac:	add	x9, x9, #0x40
   249b0:	adr	x10, 249c0 <PyInit__decimal@@Base+0x1df0c>
   249b4:	ldrb	w11, [x9, x8]
   249b8:	add	x10, x10, x11, lsl #2
   249bc:	br	x10
   249c0:	ldrb	w8, [x20]
   249c4:	and	w21, w8, #0x1
   249c8:	tbnz	w8, #5, 24a08 <PyInit__decimal@@Base+0x1df54>
   249cc:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   249d0:	ldr	x9, [x20, #32]
   249d4:	ldr	x1, [x23, #1344]
   249d8:	cmp	x9, x1
   249dc:	b.le	24a08 <PyInit__decimal@@Base+0x1df54>
   249e0:	add	x3, sp, #0x10
   249e4:	mov	w2, #0x8                   	// #8
   249e8:	strb	wzr, [sp, #16]
   249ec:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   249f0:	str	x0, [x20, #40]
   249f4:	ldrb	w8, [sp, #16]
   249f8:	cbnz	w8, 24a04 <PyInit__decimal@@Base+0x1df50>
   249fc:	ldr	x8, [x23, #1344]
   24a00:	str	x8, [x20, #32]
   24a04:	ldrb	w8, [x20]
   24a08:	and	w8, w8, #0xf0
   24a0c:	orr	w8, w21, w8
   24a10:	orr	w8, w8, #0x2
   24a14:	strb	w8, [x20]
   24a18:	stp	xzr, xzr, [x22]
   24a1c:	str	xzr, [x22, #16]
   24a20:	b	24e18 <PyInit__decimal@@Base+0x1e364>
   24a24:	ldr	w10, [x21, #40]
   24a28:	cbz	w10, 24a98 <PyInit__decimal@@Base+0x1dfe4>
   24a2c:	ldr	x10, [x21]
   24a30:	sub	x9, x9, x10
   24a34:	add	x9, x9, #0x1
   24a38:	subs	x22, x8, x9
   24a3c:	b.le	24a98 <PyInit__decimal@@Base+0x1dfe4>
   24a40:	mov	x0, x20
   24a44:	mov	x1, x20
   24a48:	mov	x2, x22
   24a4c:	mov	x3, x19
   24a50:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   24a54:	cbz	w0, 24e28 <PyInit__decimal@@Base+0x1e374>
   24a58:	ldr	x8, [x20, #8]
   24a5c:	sub	x8, x8, x22
   24a60:	str	x8, [x20, #8]
   24a64:	ldr	w8, [x19]
   24a68:	orr	w9, w8, #0x1
   24a6c:	str	w9, [x19]
   24a70:	ldr	x9, [x20, #40]
   24a74:	ldr	x10, [x20, #24]
   24a78:	add	x9, x9, x10, lsl #3
   24a7c:	ldur	x9, [x9, #-8]
   24a80:	cbz	x9, 24e28 <PyInit__decimal@@Base+0x1e374>
   24a84:	ldr	x9, [x21, #16]
   24a88:	cmp	x23, x9
   24a8c:	b.ge	24e28 <PyInit__decimal@@Base+0x1e374>  // b.tcont
   24a90:	mov	w9, #0x2001                	// #8193
   24a94:	b	24e20 <PyInit__decimal@@Base+0x1e36c>
   24a98:	ldr	x9, [x21, #16]
   24a9c:	cmp	x23, x9
   24aa0:	b.ge	24e28 <PyInit__decimal@@Base+0x1e374>  // b.tcont
   24aa4:	ldr	x0, [x20, #40]
   24aa8:	ldr	x10, [x20, #24]
   24aac:	ldr	x11, [x21]
   24ab0:	add	x10, x0, x10, lsl #3
   24ab4:	ldur	x10, [x10, #-8]
   24ab8:	sub	x9, x9, x11
   24abc:	add	x22, x9, #0x1
   24ac0:	cbz	x10, 24be0 <PyInit__decimal@@Base+0x1e12c>
   24ac4:	ldr	w9, [x19]
   24ac8:	subs	x1, x22, x8
   24acc:	orr	w9, w9, #0x2000
   24ad0:	str	w9, [x19]
   24ad4:	b.le	24e28 <PyInit__decimal@@Base+0x1e374>
   24ad8:	mov	x0, x20
   24adc:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   24ae0:	str	x22, [x20, #8]
   24ae4:	ldr	w9, [x21, #36]
   24ae8:	mov	x21, x0
   24aec:	cmp	w9, #0x7
   24af0:	b.hi	25258 <PyInit__decimal@@Base+0x1e7a4>  // b.pmore
   24af4:	adrp	x10, 45000 <PyInit__decimal@@Base+0x3e54c>
   24af8:	add	x10, x10, #0x30
   24afc:	adr	x11, 24b14 <PyInit__decimal@@Base+0x1e060>
   24b00:	ldrh	w12, [x10, x9, lsl #1]
   24b04:	add	x11, x11, x12, lsl #2
   24b08:	lsl	x8, x21, #32
   24b0c:	sxtw	x9, w21
   24b10:	br	x11
   24b14:	cmp	x8, #0x0
   24b18:	cset	w8, ne  // ne = any
   24b1c:	b	24f2c <PyInit__decimal@@Base+0x1e478>
   24b20:	str	x9, [x22]
   24b24:	ldr	w8, [x21, #40]
   24b28:	cbz	w8, 24b3c <PyInit__decimal@@Base+0x1e088>
   24b2c:	ldr	x8, [x21]
   24b30:	sub	x8, x9, x8
   24b34:	add	x8, x8, #0x1
   24b38:	str	x8, [x22]
   24b3c:	ldrb	w8, [x20]
   24b40:	tbnz	w8, #5, 24c24 <PyInit__decimal@@Base+0x1e170>
   24b44:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   24b48:	ldr	x8, [x20, #32]
   24b4c:	ldr	x1, [x21, #1344]
   24b50:	cmp	x8, x1
   24b54:	b.le	24c24 <PyInit__decimal@@Base+0x1e170>
   24b58:	add	x3, sp, #0xc
   24b5c:	mov	w2, #0x8                   	// #8
   24b60:	strb	wzr, [sp, #12]
   24b64:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   24b68:	str	x0, [x20, #40]
   24b6c:	ldrb	w8, [sp, #12]
   24b70:	cbnz	w8, 24c24 <PyInit__decimal@@Base+0x1e170>
   24b74:	ldr	x8, [x21, #1344]
   24b78:	str	x8, [x20, #32]
   24b7c:	b	24c24 <PyInit__decimal@@Base+0x1e170>
   24b80:	ldr	x8, [x21]
   24b84:	mov	x9, #0x9436                	// #37942
   24b88:	movk	x9, #0x50d7, lsl #16
   24b8c:	movk	x9, #0x435e, lsl #32
   24b90:	movk	x9, #0xd79, lsl #48
   24b94:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   24b98:	smulh	x9, x8, x9
   24b9c:	mov	x10, #0xffffffffffffffed    	// #-19
   24ba0:	ldr	x11, [x11, #1344]
   24ba4:	add	x12, x9, x9, lsr #63
   24ba8:	madd	x24, x12, x10, x8
   24bac:	cmp	x24, #0x0
   24bb0:	ldr	x9, [x20, #32]
   24bb4:	cinc	x23, x12, ne  // ne = any
   24bb8:	cmp	x11, x23
   24bbc:	csel	x1, x23, x11, lt  // lt = tstop
   24bc0:	cmp	x1, x9
   24bc4:	b.eq	24d6c <PyInit__decimal@@Base+0x1e2b8>  // b.none
   24bc8:	ldrb	w10, [x20]
   24bcc:	tbnz	w10, #5, 24d50 <PyInit__decimal@@Base+0x1e29c>
   24bd0:	mov	x0, x20
   24bd4:	mov	x2, x19
   24bd8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   24bdc:	b	24d64 <PyInit__decimal@@Base+0x1e2b0>
   24be0:	cmp	x22, x8
   24be4:	b.le	24e28 <PyInit__decimal@@Base+0x1e374>
   24be8:	ldrb	w8, [x20]
   24bec:	str	x22, [x20, #8]
   24bf0:	tbnz	w8, #5, 24c24 <PyInit__decimal@@Base+0x1e170>
   24bf4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   24bf8:	ldr	x8, [x20, #32]
   24bfc:	ldr	x1, [x21, #1344]
   24c00:	cmp	x8, x1
   24c04:	b.le	24c24 <PyInit__decimal@@Base+0x1e170>
   24c08:	sub	x3, x29, #0x4
   24c0c:	mov	w2, #0x8                   	// #8
   24c10:	sturb	wzr, [x29, #-4]
   24c14:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   24c18:	str	x0, [x20, #40]
   24c1c:	ldurb	w8, [x29, #-4]
   24c20:	cbz	w8, 24b74 <PyInit__decimal@@Base+0x1e0c0>
   24c24:	mov	w8, #0x1                   	// #1
   24c28:	dup	v0.2d, x8
   24c2c:	str	q0, [x20, #16]
   24c30:	str	xzr, [x0]
   24c34:	ldr	w8, [x19]
   24c38:	orr	w8, w8, #0x1
   24c3c:	b	24e24 <PyInit__decimal@@Base+0x1e370>
   24c40:	ldrb	w8, [x20]
   24c44:	tbnz	w8, #0, 24cf4 <PyInit__decimal@@Base+0x1e240>
   24c48:	tbnz	w8, #5, 24c88 <PyInit__decimal@@Base+0x1e1d4>
   24c4c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   24c50:	ldr	x9, [x20, #32]
   24c54:	ldr	x1, [x21, #1344]
   24c58:	cmp	x9, x1
   24c5c:	b.le	24c88 <PyInit__decimal@@Base+0x1e1d4>
   24c60:	sub	x3, x29, #0xc
   24c64:	mov	w2, #0x8                   	// #8
   24c68:	sturb	wzr, [x29, #-12]
   24c6c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   24c70:	str	x0, [x20, #40]
   24c74:	ldurb	w8, [x29, #-12]
   24c78:	cbnz	w8, 24c84 <PyInit__decimal@@Base+0x1e1d0>
   24c7c:	ldr	x8, [x21, #1344]
   24c80:	str	x8, [x20, #32]
   24c84:	ldrb	w8, [x20]
   24c88:	and	w8, w8, #0xf0
   24c8c:	b	24a10 <PyInit__decimal@@Base+0x1df5c>
   24c90:	ldrb	w8, [x20]
   24c94:	tbnz	w8, #0, 24e40 <PyInit__decimal@@Base+0x1e38c>
   24c98:	ldr	x9, [x21]
   24c9c:	mov	x10, #0x9436                	// #37942
   24ca0:	movk	x10, #0x50d7, lsl #16
   24ca4:	movk	x10, #0x435e, lsl #32
   24ca8:	movk	x10, #0xd79, lsl #48
   24cac:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   24cb0:	smulh	x10, x9, x10
   24cb4:	mov	x11, #0xffffffffffffffed    	// #-19
   24cb8:	ldr	x12, [x12, #1344]
   24cbc:	add	x13, x10, x10, lsr #63
   24cc0:	madd	x24, x13, x11, x9
   24cc4:	cmp	x24, #0x0
   24cc8:	ldr	x10, [x20, #32]
   24ccc:	cinc	x23, x13, ne  // ne = any
   24cd0:	cmp	x12, x23
   24cd4:	csel	x1, x23, x12, lt  // lt = tstop
   24cd8:	cmp	x1, x10
   24cdc:	b.eq	2505c <PyInit__decimal@@Base+0x1e5a8>  // b.none
   24ce0:	tbnz	w8, #5, 25040 <PyInit__decimal@@Base+0x1e58c>
   24ce4:	mov	x0, x20
   24ce8:	mov	x2, x19
   24cec:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   24cf0:	b	25054 <PyInit__decimal@@Base+0x1e5a0>
   24cf4:	ldr	x9, [x21]
   24cf8:	mov	x10, #0x9436                	// #37942
   24cfc:	movk	x10, #0x50d7, lsl #16
   24d00:	movk	x10, #0x435e, lsl #32
   24d04:	movk	x10, #0xd79, lsl #48
   24d08:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   24d0c:	smulh	x10, x9, x10
   24d10:	mov	x11, #0xffffffffffffffed    	// #-19
   24d14:	ldr	x12, [x12, #1344]
   24d18:	add	x13, x10, x10, lsr #63
   24d1c:	madd	x24, x13, x11, x9
   24d20:	cmp	x24, #0x0
   24d24:	ldr	x10, [x20, #32]
   24d28:	cinc	x23, x13, ne  // ne = any
   24d2c:	cmp	x12, x23
   24d30:	csel	x1, x23, x12, lt  // lt = tstop
   24d34:	cmp	x1, x10
   24d38:	b.eq	24fa0 <PyInit__decimal@@Base+0x1e4ec>  // b.none
   24d3c:	tbnz	w8, #5, 24f84 <PyInit__decimal@@Base+0x1e4d0>
   24d40:	mov	x0, x20
   24d44:	mov	x2, x19
   24d48:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   24d4c:	b	24f98 <PyInit__decimal@@Base+0x1e4e4>
   24d50:	cmp	x1, x9
   24d54:	b.le	24d6c <PyInit__decimal@@Base+0x1e2b8>
   24d58:	mov	x0, x20
   24d5c:	mov	x2, x19
   24d60:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   24d64:	cbz	w0, 24e08 <PyInit__decimal@@Base+0x1e354>
   24d68:	ldr	x8, [x21]
   24d6c:	cmp	x24, #0x1
   24d70:	sub	x9, x23, #0x1
   24d74:	stp	x8, x23, [x20, #16]
   24d78:	b.lt	24d9c <PyInit__decimal@@Base+0x1e2e8>  // b.tstop
   24d7c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   24d80:	add	x8, x8, #0xca0
   24d84:	ldr	x8, [x8, x24, lsl #3]
   24d88:	ldr	x10, [x20, #40]
   24d8c:	sub	x11, x23, #0x2
   24d90:	sub	x8, x8, #0x1
   24d94:	str	x8, [x10, x9, lsl #3]
   24d98:	mov	x9, x11
   24d9c:	tbnz	x9, #63, 24e08 <PyInit__decimal@@Base+0x1e354>
   24da0:	ldr	x8, [x20, #40]
   24da4:	add	x10, x9, #0x1
   24da8:	cmp	x10, #0x2
   24dac:	b.cc	24de8 <PyInit__decimal@@Base+0x1e334>  // b.lo, b.ul, b.last
   24db0:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   24db4:	movk	x13, #0x2304, lsl #32
   24db8:	and	x11, x10, #0xfffffffffffffffe
   24dbc:	add	x12, x8, x9, lsl #3
   24dc0:	movk	x13, #0x8ac7, lsl #48
   24dc4:	sub	x9, x9, x11
   24dc8:	sub	x12, x12, #0x8
   24dcc:	dup	v0.2d, x13
   24dd0:	mov	x13, x11
   24dd4:	subs	x13, x13, #0x2
   24dd8:	str	q0, [x12], #-16
   24ddc:	b.ne	24dd4 <PyInit__decimal@@Base+0x1e320>  // b.any
   24de0:	cmp	x10, x11
   24de4:	b.eq	24e08 <PyInit__decimal@@Base+0x1e354>  // b.none
   24de8:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   24dec:	movk	x10, #0x2304, lsl #32
   24df0:	movk	x10, #0x8ac7, lsl #48
   24df4:	sub	x11, x9, #0x1
   24df8:	cmp	x9, #0x0
   24dfc:	str	x10, [x8, x9, lsl #3]
   24e00:	mov	x9, x11
   24e04:	b.gt	24df4 <PyInit__decimal@@Base+0x1e340>
   24e08:	ldp	x9, x8, [x21]
   24e0c:	sub	x8, x8, x9
   24e10:	add	x8, x8, #0x1
   24e14:	str	x8, [x22]
   24e18:	ldr	w8, [x19]
   24e1c:	mov	w9, #0x1840                	// #6208
   24e20:	orr	w8, w8, w9
   24e24:	str	w8, [x19]
   24e28:	ldp	x20, x19, [sp, #80]
   24e2c:	ldp	x22, x21, [sp, #64]
   24e30:	ldp	x24, x23, [sp, #48]
   24e34:	ldp	x29, x30, [sp, #32]
   24e38:	add	sp, sp, #0x60
   24e3c:	ret
   24e40:	tbnz	w8, #5, 24e80 <PyInit__decimal@@Base+0x1e3cc>
   24e44:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   24e48:	ldr	x9, [x20, #32]
   24e4c:	ldr	x1, [x21, #1344]
   24e50:	cmp	x9, x1
   24e54:	b.le	24e80 <PyInit__decimal@@Base+0x1e3cc>
   24e58:	sub	x3, x29, #0x8
   24e5c:	mov	w2, #0x8                   	// #8
   24e60:	sturb	wzr, [x29, #-8]
   24e64:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   24e68:	str	x0, [x20, #40]
   24e6c:	ldurb	w8, [x29, #-8]
   24e70:	cbnz	w8, 24e7c <PyInit__decimal@@Base+0x1e3c8>
   24e74:	ldr	x8, [x21, #1344]
   24e78:	str	x8, [x20, #32]
   24e7c:	ldrb	w8, [x20]
   24e80:	and	w8, w8, #0xf0
   24e84:	orr	w8, w8, #0x3
   24e88:	b	24a14 <PyInit__decimal@@Base+0x1df60>
   24e8c:	cbz	x8, 25258 <PyInit__decimal@@Base+0x1e7a4>
   24e90:	ldrb	w8, [x20]
   24e94:	mvn	w8, w8
   24e98:	and	w8, w8, #0x1
   24e9c:	b	24f2c <PyInit__decimal@@Base+0x1e478>
   24ea0:	cmp	x9, #0x5
   24ea4:	b.hi	24f30 <PyInit__decimal@@Base+0x1e47c>  // b.pmore
   24ea8:	mov	x9, #0x500000000           	// #21474836480
   24eac:	cmp	x8, x9
   24eb0:	b.ne	25258 <PyInit__decimal@@Base+0x1e7a4>  // b.any
   24eb4:	ldr	x8, [x20, #40]
   24eb8:	ldr	w8, [x8]
   24ebc:	and	w8, w8, #0x1
   24ec0:	b	24f2c <PyInit__decimal@@Base+0x1e478>
   24ec4:	cbz	x8, 25258 <PyInit__decimal@@Base+0x1e7a4>
   24ec8:	ldrb	w8, [x20]
   24ecc:	and	w8, w8, #0x1
   24ed0:	b	24f2c <PyInit__decimal@@Base+0x1e478>
   24ed4:	cmp	x9, #0x4
   24ed8:	cset	w8, hi  // hi = pmore
   24edc:	b	24f2c <PyInit__decimal@@Base+0x1e478>
   24ee0:	cmp	x9, #0x5
   24ee4:	cset	w8, hi  // hi = pmore
   24ee8:	b	24f2c <PyInit__decimal@@Base+0x1e478>
   24eec:	ldr	x9, [x20, #40]
   24ef0:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   24ef4:	movk	x10, #0xcccd
   24ef8:	mov	w11, #0xa                   	// #10
   24efc:	ldr	x9, [x9]
   24f00:	cmp	x8, #0x0
   24f04:	cset	w8, ne  // ne = any
   24f08:	umulh	x10, x9, x10
   24f0c:	lsr	x10, x10, #3
   24f10:	msub	w9, w10, w11, w9
   24f14:	cmp	w9, #0x0
   24f18:	cset	w10, eq  // eq = none
   24f1c:	cmp	w9, #0x5
   24f20:	cset	w9, eq  // eq = none
   24f24:	orr	w9, w10, w9
   24f28:	and	w8, w8, w9
   24f2c:	cbz	w8, 25258 <PyInit__decimal@@Base+0x1e7a4>
   24f30:	ldr	x0, [x20, #40]
   24f34:	ldr	x1, [x20, #24]
   24f38:	bl	1c45c <PyInit__decimal@@Base+0x159a8>
   24f3c:	cbz	x0, 24f78 <PyInit__decimal@@Base+0x1e4c4>
   24f40:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   24f44:	ldr	x10, [x9, #1344]
   24f48:	ldp	x8, x9, [x20, #24]
   24f4c:	add	x11, x8, #0x1
   24f50:	cmp	x10, x11
   24f54:	csinc	x1, x10, x8, ge  // ge = tcont
   24f58:	cmp	x1, x9
   24f5c:	b.eq	25118 <PyInit__decimal@@Base+0x1e664>  // b.none
   24f60:	ldrb	w10, [x20]
   24f64:	tbnz	w10, #5, 250fc <PyInit__decimal@@Base+0x1e648>
   24f68:	mov	x0, x20
   24f6c:	mov	x2, x19
   24f70:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   24f74:	b	25110 <PyInit__decimal@@Base+0x1e65c>
   24f78:	ldr	x9, [x20, #40]
   24f7c:	ldr	x8, [x20, #24]
   24f80:	b	25130 <PyInit__decimal@@Base+0x1e67c>
   24f84:	cmp	x1, x10
   24f88:	b.le	24fa0 <PyInit__decimal@@Base+0x1e4ec>
   24f8c:	mov	x0, x20
   24f90:	mov	x2, x19
   24f94:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   24f98:	cbz	w0, 24e08 <PyInit__decimal@@Base+0x1e354>
   24f9c:	ldr	x9, [x21]
   24fa0:	stp	x9, x23, [x20, #16]
   24fa4:	cmp	x24, #0x1
   24fa8:	sub	x9, x23, #0x1
   24fac:	b.lt	24fd0 <PyInit__decimal@@Base+0x1e51c>  // b.tstop
   24fb0:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   24fb4:	add	x8, x8, #0xca0
   24fb8:	ldr	x8, [x8, x24, lsl #3]
   24fbc:	ldr	x10, [x20, #40]
   24fc0:	sub	x11, x23, #0x2
   24fc4:	sub	x8, x8, #0x1
   24fc8:	str	x8, [x10, x9, lsl #3]
   24fcc:	mov	x9, x11
   24fd0:	tbnz	x9, #63, 24e08 <PyInit__decimal@@Base+0x1e354>
   24fd4:	ldr	x8, [x20, #40]
   24fd8:	add	x10, x9, #0x1
   24fdc:	cmp	x10, #0x2
   24fe0:	b.cc	2501c <PyInit__decimal@@Base+0x1e568>  // b.lo, b.ul, b.last
   24fe4:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   24fe8:	movk	x13, #0x2304, lsl #32
   24fec:	and	x11, x10, #0xfffffffffffffffe
   24ff0:	add	x12, x8, x9, lsl #3
   24ff4:	movk	x13, #0x8ac7, lsl #48
   24ff8:	sub	x9, x9, x11
   24ffc:	sub	x12, x12, #0x8
   25000:	dup	v0.2d, x13
   25004:	mov	x13, x11
   25008:	subs	x13, x13, #0x2
   2500c:	str	q0, [x12], #-16
   25010:	b.ne	25008 <PyInit__decimal@@Base+0x1e554>  // b.any
   25014:	cmp	x10, x11
   25018:	b.eq	24e08 <PyInit__decimal@@Base+0x1e354>  // b.none
   2501c:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   25020:	movk	x10, #0x2304, lsl #32
   25024:	movk	x10, #0x8ac7, lsl #48
   25028:	sub	x11, x9, #0x1
   2502c:	cmp	x9, #0x0
   25030:	str	x10, [x8, x9, lsl #3]
   25034:	mov	x9, x11
   25038:	b.gt	25028 <PyInit__decimal@@Base+0x1e574>
   2503c:	b	24e08 <PyInit__decimal@@Base+0x1e354>
   25040:	cmp	x1, x10
   25044:	b.le	2505c <PyInit__decimal@@Base+0x1e5a8>
   25048:	mov	x0, x20
   2504c:	mov	x2, x19
   25050:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   25054:	cbz	w0, 24e08 <PyInit__decimal@@Base+0x1e354>
   25058:	ldr	x9, [x21]
   2505c:	stp	x9, x23, [x20, #16]
   25060:	cmp	x24, #0x1
   25064:	sub	x9, x23, #0x1
   25068:	b.lt	2508c <PyInit__decimal@@Base+0x1e5d8>  // b.tstop
   2506c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   25070:	add	x8, x8, #0xca0
   25074:	ldr	x8, [x8, x24, lsl #3]
   25078:	ldr	x10, [x20, #40]
   2507c:	sub	x11, x23, #0x2
   25080:	sub	x8, x8, #0x1
   25084:	str	x8, [x10, x9, lsl #3]
   25088:	mov	x9, x11
   2508c:	tbnz	x9, #63, 24e08 <PyInit__decimal@@Base+0x1e354>
   25090:	ldr	x8, [x20, #40]
   25094:	add	x10, x9, #0x1
   25098:	cmp	x10, #0x2
   2509c:	b.cc	250d8 <PyInit__decimal@@Base+0x1e624>  // b.lo, b.ul, b.last
   250a0:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   250a4:	movk	x13, #0x2304, lsl #32
   250a8:	and	x11, x10, #0xfffffffffffffffe
   250ac:	add	x12, x8, x9, lsl #3
   250b0:	movk	x13, #0x8ac7, lsl #48
   250b4:	sub	x9, x9, x11
   250b8:	sub	x12, x12, #0x8
   250bc:	dup	v0.2d, x13
   250c0:	mov	x13, x11
   250c4:	subs	x13, x13, #0x2
   250c8:	str	q0, [x12], #-16
   250cc:	b.ne	250c4 <PyInit__decimal@@Base+0x1e610>  // b.any
   250d0:	cmp	x10, x11
   250d4:	b.eq	24e08 <PyInit__decimal@@Base+0x1e354>  // b.none
   250d8:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   250dc:	movk	x10, #0x2304, lsl #32
   250e0:	movk	x10, #0x8ac7, lsl #48
   250e4:	sub	x11, x9, #0x1
   250e8:	cmp	x9, #0x0
   250ec:	str	x10, [x8, x9, lsl #3]
   250f0:	mov	x9, x11
   250f4:	b.gt	250e4 <PyInit__decimal@@Base+0x1e630>
   250f8:	b	24e08 <PyInit__decimal@@Base+0x1e354>
   250fc:	cmp	x1, x9
   25100:	b.le	25118 <PyInit__decimal@@Base+0x1e664>
   25104:	mov	x0, x20
   25108:	mov	x2, x19
   2510c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   25110:	cbz	w0, 25258 <PyInit__decimal@@Base+0x1e7a4>
   25114:	ldr	x8, [x20, #24]
   25118:	ldr	x9, [x20, #40]
   2511c:	mov	w10, #0x1                   	// #1
   25120:	str	x10, [x9, x8, lsl #3]
   25124:	ldr	x8, [x20, #24]
   25128:	add	x8, x8, #0x1
   2512c:	str	x8, [x20, #24]
   25130:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   25134:	add	x9, x9, x8, lsl #3
   25138:	add	x10, x10, #0xca0
   2513c:	ldur	x9, [x9, #-8]
   25140:	ldr	x11, [x10, #72]
   25144:	cmp	x11, x9
   25148:	b.ls	25174 <PyInit__decimal@@Base+0x1e6c0>  // b.plast
   2514c:	ldr	x11, [x10, #32]
   25150:	cmp	x11, x9
   25154:	b.ls	2519c <PyInit__decimal@@Base+0x1e6e8>  // b.plast
   25158:	ldr	x11, [x10, #16]
   2515c:	cmp	x11, x9
   25160:	b.ls	251e0 <PyInit__decimal@@Base+0x1e72c>  // b.plast
   25164:	ldr	x10, [x10, #8]
   25168:	cmp	x10, x9
   2516c:	mov	w9, #0x1                   	// #1
   25170:	b	25244 <PyInit__decimal@@Base+0x1e790>
   25174:	ldr	x11, [x10, #112]
   25178:	cmp	x11, x9
   2517c:	b.ls	251b8 <PyInit__decimal@@Base+0x1e704>  // b.plast
   25180:	ldr	x11, [x10, #88]
   25184:	cmp	x11, x9
   25188:	b.ls	251f0 <PyInit__decimal@@Base+0x1e73c>  // b.plast
   2518c:	ldr	x10, [x10, #80]
   25190:	cmp	x10, x9
   25194:	mov	w9, #0xa                   	// #10
   25198:	b	25244 <PyInit__decimal@@Base+0x1e790>
   2519c:	ldr	x11, [x10, #48]
   251a0:	cmp	x11, x9
   251a4:	b.ls	2520c <PyInit__decimal@@Base+0x1e758>  // b.plast
   251a8:	ldr	x10, [x10, #40]
   251ac:	cmp	x10, x9
   251b0:	mov	w9, #0x5                   	// #5
   251b4:	b	25244 <PyInit__decimal@@Base+0x1e790>
   251b8:	ldr	x11, [x10, #144]
   251bc:	cmp	x11, x9
   251c0:	b.ls	25228 <PyInit__decimal@@Base+0x1e774>  // b.plast
   251c4:	ldr	x11, [x10, #128]
   251c8:	cmp	x11, x9
   251cc:	b.ls	25238 <PyInit__decimal@@Base+0x1e784>  // b.plast
   251d0:	ldr	x10, [x10, #120]
   251d4:	cmp	x10, x9
   251d8:	mov	w9, #0xf                   	// #15
   251dc:	b	25244 <PyInit__decimal@@Base+0x1e790>
   251e0:	ldr	x10, [x10, #24]
   251e4:	cmp	x10, x9
   251e8:	mov	w9, #0x3                   	// #3
   251ec:	b	25244 <PyInit__decimal@@Base+0x1e790>
   251f0:	ldr	x11, [x10, #104]
   251f4:	cmp	x11, x9
   251f8:	b.ls	252e4 <PyInit__decimal@@Base+0x1e830>  // b.plast
   251fc:	ldr	x10, [x10, #96]
   25200:	cmp	x10, x9
   25204:	mov	w9, #0xc                   	// #12
   25208:	b	25244 <PyInit__decimal@@Base+0x1e790>
   2520c:	ldr	x11, [x10, #64]
   25210:	cmp	x11, x9
   25214:	b.ls	252ec <PyInit__decimal@@Base+0x1e838>  // b.plast
   25218:	ldr	x10, [x10, #56]
   2521c:	cmp	x10, x9
   25220:	mov	w9, #0x7                   	// #7
   25224:	b	25244 <PyInit__decimal@@Base+0x1e790>
   25228:	ldr	x10, [x10, #152]
   2522c:	cmp	x10, x9
   25230:	mov	w9, #0x13                  	// #19
   25234:	b	25244 <PyInit__decimal@@Base+0x1e790>
   25238:	ldr	x10, [x10, #136]
   2523c:	cmp	x10, x9
   25240:	mov	w9, #0x11                  	// #17
   25244:	cinc	x9, x9, ls  // ls = plast
   25248:	mov	w10, #0x13                  	// #19
   2524c:	madd	x8, x8, x10, x9
   25250:	sub	x8, x8, #0x13
   25254:	str	x8, [x20, #16]
   25258:	ldr	w8, [x19]
   2525c:	orr	w9, w8, #0x1000
   25260:	str	w9, [x19]
   25264:	cbz	w21, 24e28 <PyInit__decimal@@Base+0x1e374>
   25268:	mov	w9, #0x5040                	// #20544
   2526c:	orr	w8, w8, w9
   25270:	str	w8, [x19]
   25274:	ldr	x0, [x20, #40]
   25278:	ldr	x9, [x20, #24]
   2527c:	add	x9, x0, x9, lsl #3
   25280:	ldur	x9, [x9, #-8]
   25284:	cbnz	x9, 24e28 <PyInit__decimal@@Base+0x1e374>
   25288:	ldrb	w9, [x20]
   2528c:	tbnz	w9, #5, 252cc <PyInit__decimal@@Base+0x1e818>
   25290:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   25294:	ldr	x9, [x20, #32]
   25298:	ldr	x1, [x21, #1344]
   2529c:	cmp	x9, x1
   252a0:	b.le	252cc <PyInit__decimal@@Base+0x1e818>
   252a4:	add	x3, sp, #0x8
   252a8:	mov	w2, #0x8                   	// #8
   252ac:	strb	wzr, [sp, #8]
   252b0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   252b4:	str	x0, [x20, #40]
   252b8:	ldrb	w8, [sp, #8]
   252bc:	cbnz	w8, 252c8 <PyInit__decimal@@Base+0x1e814>
   252c0:	ldr	x8, [x21, #1344]
   252c4:	str	x8, [x20, #32]
   252c8:	ldr	w8, [x19]
   252cc:	mov	w9, #0x1                   	// #1
   252d0:	orr	w8, w8, #0x1
   252d4:	dup	v0.2d, x9
   252d8:	str	q0, [x20, #16]
   252dc:	str	xzr, [x0]
   252e0:	b	24e24 <PyInit__decimal@@Base+0x1e370>
   252e4:	mov	w9, #0xe                   	// #14
   252e8:	b	25248 <PyInit__decimal@@Base+0x1e794>
   252ec:	mov	w9, #0x9                   	// #9
   252f0:	b	25248 <PyInit__decimal@@Base+0x1e794>
   252f4:	bl	6700 <abort@plt>
   252f8:	stp	x29, x30, [sp, #-32]!
   252fc:	stp	x20, x19, [sp, #16]
   25300:	mov	x29, sp
   25304:	mov	x19, x0
   25308:	ldr	x0, [x0, #24]
   2530c:	bl	21f6c <PyInit__decimal@@Base+0x1b4b8>
   25310:	mov	x20, x0
   25314:	cbz	x0, 2534c <PyInit__decimal@@Base+0x1e898>
   25318:	ldr	x8, [x19, #24]
   2531c:	ldr	x0, [x20, #40]
   25320:	ldr	x1, [x19, #40]
   25324:	lsl	x2, x8, #3
   25328:	bl	63c0 <memcpy@plt>
   2532c:	ldrb	w8, [x19]
   25330:	ldrb	w9, [x20]
   25334:	bfxil	w9, w8, #0, #4
   25338:	strb	w9, [x20]
   2533c:	ldur	q0, [x19, #8]
   25340:	stur	q0, [x20, #8]
   25344:	ldr	x8, [x19, #24]
   25348:	str	x8, [x20, #24]
   2534c:	mov	x0, x20
   25350:	ldp	x20, x19, [sp, #16]
   25354:	ldp	x29, x30, [sp], #32
   25358:	ret
   2535c:	stp	x29, x30, [sp, #-32]!
   25360:	stp	x20, x19, [sp, #16]
   25364:	mov	x29, sp
   25368:	mov	x19, x0
   2536c:	cmp	x0, x1
   25370:	b.eq	25400 <PyInit__decimal@@Base+0x1e94c>  // b.none
   25374:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   25378:	ldr	x8, [x1, #24]
   2537c:	ldr	x10, [x9, #1344]
   25380:	ldr	x9, [x19, #32]
   25384:	mov	x20, x1
   25388:	cmp	x10, x8
   2538c:	csel	x1, x8, x10, lt  // lt = tstop
   25390:	cmp	x1, x9
   25394:	b.eq	253d0 <PyInit__decimal@@Base+0x1e91c>  // b.none
   25398:	ldrb	w10, [x19]
   2539c:	tbnz	w10, #5, 253b8 <PyInit__decimal@@Base+0x1e904>
   253a0:	mov	x0, x19
   253a4:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   253a8:	cbnz	w0, 253cc <PyInit__decimal@@Base+0x1e918>
   253ac:	ldp	x20, x19, [sp, #16]
   253b0:	ldp	x29, x30, [sp], #32
   253b4:	ret
   253b8:	cmp	x1, x9
   253bc:	b.le	253d0 <PyInit__decimal@@Base+0x1e91c>
   253c0:	mov	x0, x19
   253c4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   253c8:	cbz	w0, 253ac <PyInit__decimal@@Base+0x1e8f8>
   253cc:	ldr	x8, [x20, #24]
   253d0:	ldrb	w9, [x20]
   253d4:	ldrb	w10, [x19]
   253d8:	ldr	x0, [x19, #40]
   253dc:	bfxil	w10, w9, #0, #4
   253e0:	strb	w10, [x19]
   253e4:	ldur	q0, [x20, #8]
   253e8:	str	x8, [x19, #24]
   253ec:	stur	q0, [x19, #8]
   253f0:	ldr	x8, [x20, #24]
   253f4:	ldr	x1, [x20, #40]
   253f8:	lsl	x2, x8, #3
   253fc:	bl	63c0 <memcpy@plt>
   25400:	ldrb	w8, [x19]
   25404:	mov	w0, #0x1                   	// #1
   25408:	and	w8, w8, #0xfe
   2540c:	strb	w8, [x19]
   25410:	ldp	x20, x19, [sp, #16]
   25414:	ldp	x29, x30, [sp], #32
   25418:	ret
   2541c:	stp	x29, x30, [sp, #-32]!
   25420:	stp	x20, x19, [sp, #16]
   25424:	mov	x29, sp
   25428:	mov	x19, x0
   2542c:	cmp	x0, x1
   25430:	b.eq	254c0 <PyInit__decimal@@Base+0x1ea0c>  // b.none
   25434:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   25438:	ldr	x8, [x1, #24]
   2543c:	ldr	x10, [x9, #1344]
   25440:	ldr	x9, [x19, #32]
   25444:	mov	x20, x1
   25448:	cmp	x10, x8
   2544c:	csel	x1, x8, x10, lt  // lt = tstop
   25450:	cmp	x1, x9
   25454:	b.eq	25490 <PyInit__decimal@@Base+0x1e9dc>  // b.none
   25458:	ldrb	w10, [x19]
   2545c:	tbnz	w10, #5, 25478 <PyInit__decimal@@Base+0x1e9c4>
   25460:	mov	x0, x19
   25464:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   25468:	cbnz	w0, 2548c <PyInit__decimal@@Base+0x1e9d8>
   2546c:	ldp	x20, x19, [sp, #16]
   25470:	ldp	x29, x30, [sp], #32
   25474:	ret
   25478:	cmp	x1, x9
   2547c:	b.le	25490 <PyInit__decimal@@Base+0x1e9dc>
   25480:	mov	x0, x19
   25484:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   25488:	cbz	w0, 2546c <PyInit__decimal@@Base+0x1e9b8>
   2548c:	ldr	x8, [x20, #24]
   25490:	ldrb	w9, [x20]
   25494:	ldrb	w10, [x19]
   25498:	ldr	x0, [x19, #40]
   2549c:	bfxil	w10, w9, #0, #4
   254a0:	strb	w10, [x19]
   254a4:	ldur	q0, [x20, #8]
   254a8:	str	x8, [x19, #24]
   254ac:	stur	q0, [x19, #8]
   254b0:	ldr	x8, [x20, #24]
   254b4:	ldr	x1, [x20, #40]
   254b8:	lsl	x2, x8, #3
   254bc:	bl	63c0 <memcpy@plt>
   254c0:	ldrb	w8, [x19]
   254c4:	mov	w0, #0x1                   	// #1
   254c8:	eor	w8, w8, #0x1
   254cc:	strb	w8, [x19]
   254d0:	ldp	x20, x19, [sp, #16]
   254d4:	ldp	x29, x30, [sp], #32
   254d8:	ret
   254dc:	stp	x29, x30, [sp, #-48]!
   254e0:	str	x21, [sp, #16]
   254e4:	stp	x20, x19, [sp, #32]
   254e8:	mov	x29, sp
   254ec:	ldrb	w21, [x2]
   254f0:	mov	x19, x0
   254f4:	cmp	x0, x1
   254f8:	b.eq	25594 <PyInit__decimal@@Base+0x1eae0>  // b.none
   254fc:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   25500:	ldr	x8, [x1, #24]
   25504:	ldr	x10, [x9, #1344]
   25508:	ldr	x9, [x19, #32]
   2550c:	mov	x20, x1
   25510:	cmp	x10, x8
   25514:	csel	x1, x8, x10, lt  // lt = tstop
   25518:	cmp	x1, x9
   2551c:	b.eq	25564 <PyInit__decimal@@Base+0x1eab0>  // b.none
   25520:	ldrb	w10, [x19]
   25524:	tbnz	w10, #5, 25548 <PyInit__decimal@@Base+0x1ea94>
   25528:	mov	x0, x19
   2552c:	mov	x2, x3
   25530:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   25534:	cbnz	w0, 25560 <PyInit__decimal@@Base+0x1eaac>
   25538:	ldp	x20, x19, [sp, #32]
   2553c:	ldr	x21, [sp, #16]
   25540:	ldp	x29, x30, [sp], #48
   25544:	ret
   25548:	cmp	x1, x9
   2554c:	b.le	25564 <PyInit__decimal@@Base+0x1eab0>
   25550:	mov	x0, x19
   25554:	mov	x2, x3
   25558:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2555c:	cbz	w0, 25538 <PyInit__decimal@@Base+0x1ea84>
   25560:	ldr	x8, [x20, #24]
   25564:	ldrb	w9, [x20]
   25568:	ldrb	w10, [x19]
   2556c:	ldr	x0, [x19, #40]
   25570:	bfxil	w10, w9, #0, #4
   25574:	strb	w10, [x19]
   25578:	ldur	q0, [x20, #8]
   2557c:	str	x8, [x19, #24]
   25580:	stur	q0, [x19, #8]
   25584:	ldr	x8, [x20, #24]
   25588:	ldr	x1, [x20, #40]
   2558c:	lsl	x2, x8, #3
   25590:	bl	63c0 <memcpy@plt>
   25594:	ldrb	w8, [x19]
   25598:	and	w9, w21, #0x1
   2559c:	mov	w0, #0x1                   	// #1
   255a0:	and	w8, w8, #0xfe
   255a4:	orr	w8, w8, w9
   255a8:	strb	w8, [x19]
   255ac:	ldp	x20, x19, [sp, #32]
   255b0:	ldr	x21, [sp, #16]
   255b4:	ldp	x29, x30, [sp], #48
   255b8:	ret
   255bc:	ldrb	w8, [x0]
   255c0:	tst	w8, #0xe
   255c4:	b.ne	255d4 <PyInit__decimal@@Base+0x1eb20>  // b.any
   255c8:	ldrb	w9, [x1]
   255cc:	tst	w9, #0xe
   255d0:	b.eq	255fc <PyInit__decimal@@Base+0x1eb48>  // b.none
   255d4:	tst	w8, #0xc
   255d8:	b.ne	255e8 <PyInit__decimal@@Base+0x1eb34>  // b.any
   255dc:	ldrb	w8, [x1]
   255e0:	tst	w8, #0xc
   255e4:	b.eq	255fc <PyInit__decimal@@Base+0x1eb48>  // b.none
   255e8:	ldr	w8, [x2]
   255ec:	mov	w0, #0x7fffffff            	// #2147483647
   255f0:	orr	w8, w8, #0x100
   255f4:	str	w8, [x2]
   255f8:	ret
   255fc:	b	25600 <PyInit__decimal@@Base+0x1eb4c>
   25600:	stp	x29, x30, [sp, #-32]!
   25604:	str	x19, [sp, #16]
   25608:	mov	x29, sp
   2560c:	cmp	x0, x1
   25610:	b.eq	256fc <PyInit__decimal@@Base+0x1ec48>  // b.none
   25614:	ldrb	w11, [x0]
   25618:	ldrb	w12, [x1]
   2561c:	mov	x10, x1
   25620:	mov	x19, x0
   25624:	tbnz	w11, #1, 25640 <PyInit__decimal@@Base+0x1eb8c>
   25628:	tbz	w12, #1, 2565c <PyInit__decimal@@Base+0x1eba8>
   2562c:	ubfiz	w8, w12, #1, #1
   25630:	sub	w0, w8, #0x1
   25634:	ldr	x19, [sp, #16]
   25638:	ldp	x29, x30, [sp], #32
   2563c:	ret
   25640:	tbz	w12, #1, 256e0 <PyInit__decimal@@Base+0x1ec2c>
   25644:	and	w8, w12, #0x1
   25648:	and	w9, w11, #0x1
   2564c:	sub	w0, w8, w9
   25650:	ldr	x19, [sp, #16]
   25654:	ldp	x29, x30, [sp], #32
   25658:	ret
   2565c:	ldr	x1, [x19, #40]
   25660:	ldr	x3, [x19, #24]
   25664:	ldr	x8, [x10, #40]
   25668:	ldr	x9, [x10, #24]
   2566c:	add	x13, x1, x3, lsl #3
   25670:	ldur	x14, [x13, #-8]
   25674:	add	x13, x8, x9, lsl #3
   25678:	ldur	x13, [x13, #-8]
   2567c:	cbz	x14, 256f8 <PyInit__decimal@@Base+0x1ec44>
   25680:	cbz	x13, 256e0 <PyInit__decimal@@Base+0x1ec2c>
   25684:	and	w13, w11, #0x1
   25688:	and	w12, w12, #0x1
   2568c:	cmp	w13, w12
   25690:	b.ne	2570c <PyInit__decimal@@Base+0x1ec58>  // b.any
   25694:	ldp	x12, x14, [x19, #8]
   25698:	ldp	x13, x10, [x10, #8]
   2569c:	add	x14, x12, x14
   256a0:	add	x10, x13, x10
   256a4:	cmp	x14, x10
   256a8:	b.ne	2571c <PyInit__decimal@@Base+0x1ec68>  // b.any
   256ac:	subs	x4, x12, x13
   256b0:	b.ne	25748 <PyInit__decimal@@Base+0x1ec94>  // b.any
   256b4:	sub	x9, x3, #0x1
   256b8:	tbnz	x9, #63, 25764 <PyInit__decimal@@Base+0x1ecb0>
   256bc:	lsl	x10, x9, #3
   256c0:	ldr	x11, [x1, x10]
   256c4:	ldr	x10, [x8, x10]
   256c8:	sub	x9, x9, #0x1
   256cc:	cmp	x11, x10
   256d0:	b.eq	256b8 <PyInit__decimal@@Base+0x1ec04>  // b.none
   256d4:	mov	w8, #0xffffffff            	// #-1
   256d8:	cneg	w0, w8, cs  // cs = hs, nlast
   256dc:	b	25784 <PyInit__decimal@@Base+0x1ecd0>
   256e0:	ubfiz	w8, w11, #1, #1
   256e4:	mov	w9, #0x1                   	// #1
   256e8:	sub	w0, w9, w8
   256ec:	ldr	x19, [sp, #16]
   256f0:	ldp	x29, x30, [sp], #32
   256f4:	ret
   256f8:	cbnz	x13, 2562c <PyInit__decimal@@Base+0x1eb78>
   256fc:	mov	w0, wzr
   25700:	ldr	x19, [sp, #16]
   25704:	ldp	x29, x30, [sp], #32
   25708:	ret
   2570c:	sub	w0, w12, w13
   25710:	ldr	x19, [sp, #16]
   25714:	ldp	x29, x30, [sp], #32
   25718:	ret
   2571c:	sub	x8, x14, #0x1
   25720:	sub	x9, x10, #0x1
   25724:	ubfiz	w10, w11, #1, #1
   25728:	mov	w11, #0x1                   	// #1
   2572c:	sub	w11, w11, w10
   25730:	sub	w10, w10, #0x1
   25734:	cmp	x8, x9
   25738:	csel	w0, w10, w11, lt  // lt = tstop
   2573c:	ldr	x19, [sp, #16]
   25740:	ldp	x29, x30, [sp], #32
   25744:	ret
   25748:	cmp	x4, #0x1
   2574c:	b.lt	2576c <PyInit__decimal@@Base+0x1ecb8>  // b.tstop
   25750:	mov	x0, x8
   25754:	mov	x2, x9
   25758:	bl	3ad3c <PyInit__decimal@@Base+0x34288>
   2575c:	neg	w0, w0
   25760:	b	25784 <PyInit__decimal@@Base+0x1ecd0>
   25764:	mov	w0, wzr
   25768:	b	25784 <PyInit__decimal@@Base+0x1ecd0>
   2576c:	neg	x4, x4
   25770:	mov	x0, x1
   25774:	mov	x1, x8
   25778:	mov	x2, x3
   2577c:	mov	x3, x9
   25780:	bl	3ad3c <PyInit__decimal@@Base+0x34288>
   25784:	ldrb	w8, [x19]
   25788:	mov	w9, #0x1                   	// #1
   2578c:	ubfiz	w8, w8, #1, #1
   25790:	sub	w8, w9, w8
   25794:	mul	w0, w8, w0
   25798:	ldr	x19, [sp, #16]
   2579c:	ldp	x29, x30, [sp], #32
   257a0:	ret
   257a4:	sub	sp, sp, #0x40
   257a8:	stp	x29, x30, [sp, #16]
   257ac:	stp	x22, x21, [sp, #32]
   257b0:	stp	x20, x19, [sp, #48]
   257b4:	add	x29, sp, #0x10
   257b8:	ldrb	w8, [x1]
   257bc:	mov	x20, x2
   257c0:	mov	x21, x1
   257c4:	mov	x19, x0
   257c8:	tst	w8, #0xe
   257cc:	b.ne	257dc <PyInit__decimal@@Base+0x1ed28>  // b.any
   257d0:	ldrb	w8, [x20]
   257d4:	tst	w8, #0xe
   257d8:	b.eq	257f8 <PyInit__decimal@@Base+0x1ed44>  // b.none
   257dc:	mov	x0, x19
   257e0:	mov	x1, x21
   257e4:	mov	x2, x20
   257e8:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   257ec:	cbz	w0, 257f8 <PyInit__decimal@@Base+0x1ed44>
   257f0:	mov	w20, #0x7fffffff            	// #2147483647
   257f4:	b	25990 <PyInit__decimal@@Base+0x1eedc>
   257f8:	mov	x0, x21
   257fc:	mov	x1, x20
   25800:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   25804:	ldrb	w8, [x19]
   25808:	cmp	w0, #0x0
   2580c:	mov	w20, w0
   25810:	cset	w21, ne  // ne = any
   25814:	tbnz	w8, #5, 25858 <PyInit__decimal@@Base+0x1eda4>
   25818:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2581c:	ldr	x9, [x19, #32]
   25820:	ldr	x1, [x22, #1344]
   25824:	cmp	x9, x1
   25828:	b.le	25858 <PyInit__decimal@@Base+0x1eda4>
   2582c:	sturb	wzr, [x29, #-4]
   25830:	ldr	x0, [x19, #40]
   25834:	sub	x3, x29, #0x4
   25838:	mov	w2, #0x8                   	// #8
   2583c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   25840:	str	x0, [x19, #40]
   25844:	ldurb	w8, [x29, #-4]
   25848:	cbnz	w8, 25854 <PyInit__decimal@@Base+0x1eda0>
   2584c:	ldr	x8, [x22, #1344]
   25850:	str	x8, [x19, #32]
   25854:	ldrb	w8, [x19]
   25858:	ldr	x10, [x19, #40]
   2585c:	and	w8, w8, #0xf0
   25860:	mov	w11, #0x1                   	// #1
   25864:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   25868:	bfxil	w8, w20, #31, #1
   2586c:	str	xzr, [x19, #8]
   25870:	add	x9, x9, #0xca0
   25874:	strb	w8, [x19]
   25878:	stp	x21, xzr, [x10]
   2587c:	str	x11, [x19, #24]
   25880:	ldr	x8, [x10]
   25884:	ldr	x10, [x9, #72]
   25888:	cmp	x10, x8
   2588c:	b.ls	258b8 <PyInit__decimal@@Base+0x1ee04>  // b.plast
   25890:	ldr	x10, [x9, #32]
   25894:	cmp	x10, x8
   25898:	b.ls	258e0 <PyInit__decimal@@Base+0x1ee2c>  // b.plast
   2589c:	ldr	x10, [x9, #16]
   258a0:	cmp	x10, x8
   258a4:	b.ls	25924 <PyInit__decimal@@Base+0x1ee70>  // b.plast
   258a8:	ldr	x9, [x9, #8]
   258ac:	cmp	x9, x8
   258b0:	mov	w8, #0x1                   	// #1
   258b4:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   258b8:	ldr	x10, [x9, #112]
   258bc:	cmp	x10, x8
   258c0:	b.ls	258fc <PyInit__decimal@@Base+0x1ee48>  // b.plast
   258c4:	ldr	x10, [x9, #88]
   258c8:	cmp	x10, x8
   258cc:	b.ls	25934 <PyInit__decimal@@Base+0x1ee80>  // b.plast
   258d0:	ldr	x9, [x9, #80]
   258d4:	cmp	x9, x8
   258d8:	mov	w8, #0xa                   	// #10
   258dc:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   258e0:	ldr	x10, [x9, #48]
   258e4:	cmp	x10, x8
   258e8:	b.ls	25950 <PyInit__decimal@@Base+0x1ee9c>  // b.plast
   258ec:	ldr	x9, [x9, #40]
   258f0:	cmp	x9, x8
   258f4:	mov	w8, #0x5                   	// #5
   258f8:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   258fc:	ldr	x10, [x9, #144]
   25900:	cmp	x10, x8
   25904:	b.ls	2596c <PyInit__decimal@@Base+0x1eeb8>  // b.plast
   25908:	ldr	x10, [x9, #128]
   2590c:	cmp	x10, x8
   25910:	b.ls	2597c <PyInit__decimal@@Base+0x1eec8>  // b.plast
   25914:	ldr	x9, [x9, #120]
   25918:	cmp	x9, x8
   2591c:	mov	w8, #0xf                   	// #15
   25920:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   25924:	ldr	x9, [x9, #24]
   25928:	cmp	x9, x8
   2592c:	mov	w8, #0x3                   	// #3
   25930:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   25934:	ldr	x10, [x9, #104]
   25938:	cmp	x10, x8
   2593c:	b.ls	259a8 <PyInit__decimal@@Base+0x1eef4>  // b.plast
   25940:	ldr	x9, [x9, #96]
   25944:	cmp	x9, x8
   25948:	mov	w8, #0xc                   	// #12
   2594c:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   25950:	ldr	x10, [x9, #64]
   25954:	cmp	x10, x8
   25958:	b.ls	259b0 <PyInit__decimal@@Base+0x1eefc>  // b.plast
   2595c:	ldr	x9, [x9, #56]
   25960:	cmp	x9, x8
   25964:	mov	w8, #0x7                   	// #7
   25968:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   2596c:	ldr	x9, [x9, #152]
   25970:	cmp	x9, x8
   25974:	mov	w8, #0x13                  	// #19
   25978:	b	25988 <PyInit__decimal@@Base+0x1eed4>
   2597c:	ldr	x9, [x9, #136]
   25980:	cmp	x9, x8
   25984:	mov	w8, #0x11                  	// #17
   25988:	cinc	x8, x8, ls  // ls = plast
   2598c:	str	x8, [x19, #16]
   25990:	mov	w0, w20
   25994:	ldp	x20, x19, [sp, #48]
   25998:	ldp	x22, x21, [sp, #32]
   2599c:	ldp	x29, x30, [sp, #16]
   259a0:	add	sp, sp, #0x40
   259a4:	ret
   259a8:	mov	w8, #0xe                   	// #14
   259ac:	b	2598c <PyInit__decimal@@Base+0x1eed8>
   259b0:	mov	w8, #0x9                   	// #9
   259b4:	b	2598c <PyInit__decimal@@Base+0x1eed8>
   259b8:	sub	sp, sp, #0x40
   259bc:	stp	x29, x30, [sp, #16]
   259c0:	stp	x22, x21, [sp, #32]
   259c4:	stp	x20, x19, [sp, #48]
   259c8:	add	x29, sp, #0x10
   259cc:	ldrb	w8, [x1]
   259d0:	mov	x20, x4
   259d4:	mov	x21, x2
   259d8:	mov	x22, x1
   259dc:	tst	w8, #0xe
   259e0:	mov	x19, x0
   259e4:	b.ne	259f4 <PyInit__decimal@@Base+0x1ef40>  // b.any
   259e8:	ldrb	w8, [x21]
   259ec:	tst	w8, #0xe
   259f0:	b.eq	25a20 <PyInit__decimal@@Base+0x1ef6c>  // b.none
   259f4:	mov	x0, x19
   259f8:	mov	x1, x22
   259fc:	mov	x2, x21
   25a00:	mov	x4, x20
   25a04:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   25a08:	cbz	w0, 25a20 <PyInit__decimal@@Base+0x1ef6c>
   25a0c:	ldr	w8, [x20]
   25a10:	orr	w8, w8, #0x100
   25a14:	str	w8, [x20]
   25a18:	mov	w20, #0x7fffffff            	// #2147483647
   25a1c:	b	25bb8 <PyInit__decimal@@Base+0x1f104>
   25a20:	mov	x0, x22
   25a24:	mov	x1, x21
   25a28:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   25a2c:	ldrb	w8, [x19]
   25a30:	cmp	w0, #0x0
   25a34:	mov	w20, w0
   25a38:	cset	w21, ne  // ne = any
   25a3c:	tbnz	w8, #5, 25a80 <PyInit__decimal@@Base+0x1efcc>
   25a40:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   25a44:	ldr	x9, [x19, #32]
   25a48:	ldr	x1, [x22, #1344]
   25a4c:	cmp	x9, x1
   25a50:	b.le	25a80 <PyInit__decimal@@Base+0x1efcc>
   25a54:	sturb	wzr, [x29, #-4]
   25a58:	ldr	x0, [x19, #40]
   25a5c:	sub	x3, x29, #0x4
   25a60:	mov	w2, #0x8                   	// #8
   25a64:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   25a68:	str	x0, [x19, #40]
   25a6c:	ldurb	w8, [x29, #-4]
   25a70:	cbnz	w8, 25a7c <PyInit__decimal@@Base+0x1efc8>
   25a74:	ldr	x8, [x22, #1344]
   25a78:	str	x8, [x19, #32]
   25a7c:	ldrb	w8, [x19]
   25a80:	ldr	x10, [x19, #40]
   25a84:	and	w8, w8, #0xf0
   25a88:	mov	w11, #0x1                   	// #1
   25a8c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   25a90:	bfxil	w8, w20, #31, #1
   25a94:	str	xzr, [x19, #8]
   25a98:	add	x9, x9, #0xca0
   25a9c:	strb	w8, [x19]
   25aa0:	stp	x21, xzr, [x10]
   25aa4:	str	x11, [x19, #24]
   25aa8:	ldr	x8, [x10]
   25aac:	ldr	x10, [x9, #72]
   25ab0:	cmp	x10, x8
   25ab4:	b.ls	25ae0 <PyInit__decimal@@Base+0x1f02c>  // b.plast
   25ab8:	ldr	x10, [x9, #32]
   25abc:	cmp	x10, x8
   25ac0:	b.ls	25b08 <PyInit__decimal@@Base+0x1f054>  // b.plast
   25ac4:	ldr	x10, [x9, #16]
   25ac8:	cmp	x10, x8
   25acc:	b.ls	25b4c <PyInit__decimal@@Base+0x1f098>  // b.plast
   25ad0:	ldr	x9, [x9, #8]
   25ad4:	cmp	x9, x8
   25ad8:	mov	w8, #0x1                   	// #1
   25adc:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25ae0:	ldr	x10, [x9, #112]
   25ae4:	cmp	x10, x8
   25ae8:	b.ls	25b24 <PyInit__decimal@@Base+0x1f070>  // b.plast
   25aec:	ldr	x10, [x9, #88]
   25af0:	cmp	x10, x8
   25af4:	b.ls	25b5c <PyInit__decimal@@Base+0x1f0a8>  // b.plast
   25af8:	ldr	x9, [x9, #80]
   25afc:	cmp	x9, x8
   25b00:	mov	w8, #0xa                   	// #10
   25b04:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25b08:	ldr	x10, [x9, #48]
   25b0c:	cmp	x10, x8
   25b10:	b.ls	25b78 <PyInit__decimal@@Base+0x1f0c4>  // b.plast
   25b14:	ldr	x9, [x9, #40]
   25b18:	cmp	x9, x8
   25b1c:	mov	w8, #0x5                   	// #5
   25b20:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25b24:	ldr	x10, [x9, #144]
   25b28:	cmp	x10, x8
   25b2c:	b.ls	25b94 <PyInit__decimal@@Base+0x1f0e0>  // b.plast
   25b30:	ldr	x10, [x9, #128]
   25b34:	cmp	x10, x8
   25b38:	b.ls	25ba4 <PyInit__decimal@@Base+0x1f0f0>  // b.plast
   25b3c:	ldr	x9, [x9, #120]
   25b40:	cmp	x9, x8
   25b44:	mov	w8, #0xf                   	// #15
   25b48:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25b4c:	ldr	x9, [x9, #24]
   25b50:	cmp	x9, x8
   25b54:	mov	w8, #0x3                   	// #3
   25b58:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25b5c:	ldr	x10, [x9, #104]
   25b60:	cmp	x10, x8
   25b64:	b.ls	25bd0 <PyInit__decimal@@Base+0x1f11c>  // b.plast
   25b68:	ldr	x9, [x9, #96]
   25b6c:	cmp	x9, x8
   25b70:	mov	w8, #0xc                   	// #12
   25b74:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25b78:	ldr	x10, [x9, #64]
   25b7c:	cmp	x10, x8
   25b80:	b.ls	25bd8 <PyInit__decimal@@Base+0x1f124>  // b.plast
   25b84:	ldr	x9, [x9, #56]
   25b88:	cmp	x9, x8
   25b8c:	mov	w8, #0x7                   	// #7
   25b90:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25b94:	ldr	x9, [x9, #152]
   25b98:	cmp	x9, x8
   25b9c:	mov	w8, #0x13                  	// #19
   25ba0:	b	25bb0 <PyInit__decimal@@Base+0x1f0fc>
   25ba4:	ldr	x9, [x9, #136]
   25ba8:	cmp	x9, x8
   25bac:	mov	w8, #0x11                  	// #17
   25bb0:	cinc	x8, x8, ls  // ls = plast
   25bb4:	str	x8, [x19, #16]
   25bb8:	mov	w0, w20
   25bbc:	ldp	x20, x19, [sp, #48]
   25bc0:	ldp	x22, x21, [sp, #32]
   25bc4:	ldp	x29, x30, [sp, #16]
   25bc8:	add	sp, sp, #0x40
   25bcc:	ret
   25bd0:	mov	w8, #0xe                   	// #14
   25bd4:	b	25bb4 <PyInit__decimal@@Base+0x1f100>
   25bd8:	mov	w8, #0x9                   	// #9
   25bdc:	b	25bb4 <PyInit__decimal@@Base+0x1f100>
   25be0:	sub	sp, sp, #0x80
   25be4:	stp	x29, x30, [sp, #96]
   25be8:	stp	x20, x19, [sp, #112]
   25bec:	add	x29, sp, #0x60
   25bf0:	ldrb	w9, [x0]
   25bf4:	ldrb	w8, [x1]
   25bf8:	and	w10, w9, #0x1
   25bfc:	and	w11, w8, #0x1
   25c00:	cmp	w10, w11
   25c04:	b.ne	25c3c <PyInit__decimal@@Base+0x1f188>  // b.any
   25c08:	mov	x20, x1
   25c0c:	mov	x19, x0
   25c10:	tst	w9, #0xc
   25c14:	and	w10, w8, #0xc
   25c18:	b.eq	25c50 <PyInit__decimal@@Base+0x1f19c>  // b.none
   25c1c:	cbz	w10, 25c5c <PyInit__decimal@@Base+0x1f1a8>
   25c20:	and	w10, w9, #0x4
   25c24:	and	w11, w8, #0x4
   25c28:	eor	w12, w10, w11
   25c2c:	tbz	w12, #2, 25c64 <PyInit__decimal@@Base+0x1f1b0>
   25c30:	lsr	w8, w10, #2
   25c34:	sub	w0, w8, w11, lsr #2
   25c38:	b	25d14 <PyInit__decimal@@Base+0x1f260>
   25c3c:	sub	w0, w11, w10
   25c40:	ldp	x20, x19, [sp, #112]
   25c44:	ldp	x29, x30, [sp, #96]
   25c48:	add	sp, sp, #0x80
   25c4c:	ret
   25c50:	cbz	w10, 25ccc <PyInit__decimal@@Base+0x1f218>
   25c54:	mov	w0, #0xffffffff            	// #-1
   25c58:	b	25d14 <PyInit__decimal@@Base+0x1f260>
   25c5c:	mov	w0, #0x1                   	// #1
   25c60:	b	25d14 <PyInit__decimal@@Base+0x1f260>
   25c64:	ldr	x11, [x19, #24]
   25c68:	ldr	x10, [x20, #24]
   25c6c:	cmp	x11, #0x1
   25c70:	b.lt	25cf4 <PyInit__decimal@@Base+0x1f240>  // b.tstop
   25c74:	cmp	x10, #0x1
   25c78:	b.lt	25cf4 <PyInit__decimal@@Base+0x1f240>  // b.tstop
   25c7c:	ldr	x12, [x19, #16]
   25c80:	add	x0, sp, #0x30
   25c84:	mov	x1, sp
   25c88:	stp	x12, x11, [sp, #64]
   25c8c:	ldr	q0, [x19, #32]
   25c90:	mov	w11, #0x40                  	// #64
   25c94:	bfxil	w11, w9, #0, #5
   25c98:	strb	w11, [sp, #48]
   25c9c:	str	q0, [sp, #80]
   25ca0:	ldr	x9, [x20, #16]
   25ca4:	mov	w11, #0x40                  	// #64
   25ca8:	bfxil	w11, w8, #0, #5
   25cac:	stp	x9, x10, [sp, #16]
   25cb0:	ldr	q0, [x20, #32]
   25cb4:	strb	w11, [sp]
   25cb8:	str	xzr, [sp, #8]
   25cbc:	str	xzr, [sp, #56]
   25cc0:	str	q0, [sp, #32]
   25cc4:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   25cc8:	b	25d14 <PyInit__decimal@@Base+0x1f260>
   25ccc:	mov	x0, x19
   25cd0:	mov	x1, x20
   25cd4:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   25cd8:	cbnz	w0, 25d14 <PyInit__decimal@@Base+0x1f260>
   25cdc:	ldr	x8, [x19, #8]
   25ce0:	ldr	x9, [x20, #8]
   25ce4:	cmp	x8, x9
   25ce8:	b.ne	25d0c <PyInit__decimal@@Base+0x1f258>  // b.any
   25cec:	mov	w0, wzr
   25cf0:	b	25d14 <PyInit__decimal@@Base+0x1f260>
   25cf4:	cmp	x11, #0x0
   25cf8:	cset	w8, gt
   25cfc:	cmp	x10, #0x0
   25d00:	cset	w9, gt
   25d04:	sub	w0, w8, w9
   25d08:	b	25d14 <PyInit__decimal@@Base+0x1f260>
   25d0c:	mov	w8, #0xffffffff            	// #-1
   25d10:	cneg	w0, w8, ge  // ge = tcont
   25d14:	ldrb	w8, [x19]
   25d18:	mov	w9, #0x1                   	// #1
   25d1c:	ubfiz	w8, w8, #1, #1
   25d20:	sub	w8, w9, w8
   25d24:	mul	w0, w8, w0
   25d28:	ldp	x20, x19, [sp, #112]
   25d2c:	ldp	x29, x30, [sp, #96]
   25d30:	add	sp, sp, #0x80
   25d34:	ret
   25d38:	stp	x29, x30, [sp, #-16]!
   25d3c:	mov	x29, sp
   25d40:	cmp	x0, x1
   25d44:	b.eq	25df0 <PyInit__decimal@@Base+0x1f33c>  // b.none
   25d48:	ldrb	w9, [x0]
   25d4c:	ldrb	w8, [x1]
   25d50:	mov	x10, x1
   25d54:	tbnz	w9, #1, 25d68 <PyInit__decimal@@Base+0x1f2b4>
   25d58:	tbz	w8, #1, 25d78 <PyInit__decimal@@Base+0x1f2c4>
   25d5c:	mov	w0, #0xffffffff            	// #-1
   25d60:	ldp	x29, x30, [sp], #16
   25d64:	ret
   25d68:	tst	w8, #0x2
   25d6c:	cset	w0, eq  // eq = none
   25d70:	ldp	x29, x30, [sp], #16
   25d74:	ret
   25d78:	ldr	x1, [x0, #40]
   25d7c:	ldr	x3, [x0, #24]
   25d80:	ldr	x8, [x10, #40]
   25d84:	ldr	x9, [x10, #24]
   25d88:	add	x11, x1, x3, lsl #3
   25d8c:	ldur	x12, [x11, #-8]
   25d90:	add	x11, x8, x9, lsl #3
   25d94:	ldur	x11, [x11, #-8]
   25d98:	cbz	x12, 25dfc <PyInit__decimal@@Base+0x1f348>
   25d9c:	cbz	x11, 25e0c <PyInit__decimal@@Base+0x1f358>
   25da0:	ldp	x11, x13, [x0, #8]
   25da4:	ldp	x12, x10, [x10, #8]
   25da8:	add	x13, x11, x13
   25dac:	add	x10, x12, x10
   25db0:	cmp	x13, x10
   25db4:	b.ne	25e18 <PyInit__decimal@@Base+0x1f364>  // b.any
   25db8:	subs	x4, x11, x12
   25dbc:	b.ne	25e34 <PyInit__decimal@@Base+0x1f380>  // b.any
   25dc0:	sub	x9, x3, #0x1
   25dc4:	tbnz	x9, #63, 25df0 <PyInit__decimal@@Base+0x1f33c>
   25dc8:	lsl	x10, x9, #3
   25dcc:	ldr	x11, [x1, x10]
   25dd0:	ldr	x10, [x8, x10]
   25dd4:	sub	x9, x9, #0x1
   25dd8:	cmp	x11, x10
   25ddc:	b.eq	25dc4 <PyInit__decimal@@Base+0x1f310>  // b.none
   25de0:	mov	w8, #0xffffffff            	// #-1
   25de4:	cneg	w0, w8, cs  // cs = hs, nlast
   25de8:	ldp	x29, x30, [sp], #16
   25dec:	ret
   25df0:	mov	w0, wzr
   25df4:	ldp	x29, x30, [sp], #16
   25df8:	ret
   25dfc:	cmp	x11, #0x0
   25e00:	csetm	w0, ne  // ne = any
   25e04:	ldp	x29, x30, [sp], #16
   25e08:	ret
   25e0c:	mov	w0, #0x1                   	// #1
   25e10:	ldp	x29, x30, [sp], #16
   25e14:	ret
   25e18:	sub	x8, x13, #0x1
   25e1c:	sub	x9, x10, #0x1
   25e20:	cmp	x8, x9
   25e24:	mov	w8, #0xffffffff            	// #-1
   25e28:	cneg	w0, w8, ge  // ge = tcont
   25e2c:	ldp	x29, x30, [sp], #16
   25e30:	ret
   25e34:	cmp	x4, #0x1
   25e38:	b.lt	25e54 <PyInit__decimal@@Base+0x1f3a0>  // b.tstop
   25e3c:	mov	x0, x8
   25e40:	mov	x2, x9
   25e44:	bl	3ad3c <PyInit__decimal@@Base+0x34288>
   25e48:	neg	w0, w0
   25e4c:	ldp	x29, x30, [sp], #16
   25e50:	ret
   25e54:	neg	x4, x4
   25e58:	mov	x0, x1
   25e5c:	mov	x1, x8
   25e60:	mov	x2, x3
   25e64:	mov	x3, x9
   25e68:	ldp	x29, x30, [sp], #16
   25e6c:	b	3ad3c <PyInit__decimal@@Base+0x34288>
   25e70:	sub	sp, sp, #0x40
   25e74:	stp	x29, x30, [sp, #16]
   25e78:	stp	x22, x21, [sp, #32]
   25e7c:	stp	x20, x19, [sp, #48]
   25e80:	add	x29, sp, #0x10
   25e84:	mov	x19, x0
   25e88:	mov	x0, x1
   25e8c:	mov	x1, x2
   25e90:	bl	25be0 <PyInit__decimal@@Base+0x1f12c>
   25e94:	ldrb	w8, [x19]
   25e98:	cmp	w0, #0x0
   25e9c:	mov	w20, w0
   25ea0:	cset	w21, ne  // ne = any
   25ea4:	tbnz	w8, #5, 25ee8 <PyInit__decimal@@Base+0x1f434>
   25ea8:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   25eac:	ldr	x9, [x19, #32]
   25eb0:	ldr	x1, [x22, #1344]
   25eb4:	cmp	x9, x1
   25eb8:	b.le	25ee8 <PyInit__decimal@@Base+0x1f434>
   25ebc:	sturb	wzr, [x29, #-4]
   25ec0:	ldr	x0, [x19, #40]
   25ec4:	sub	x3, x29, #0x4
   25ec8:	mov	w2, #0x8                   	// #8
   25ecc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   25ed0:	str	x0, [x19, #40]
   25ed4:	ldurb	w8, [x29, #-4]
   25ed8:	cbnz	w8, 25ee4 <PyInit__decimal@@Base+0x1f430>
   25edc:	ldr	x8, [x22, #1344]
   25ee0:	str	x8, [x19, #32]
   25ee4:	ldrb	w8, [x19]
   25ee8:	ldr	x10, [x19, #40]
   25eec:	and	w8, w8, #0xf0
   25ef0:	mov	w11, #0x1                   	// #1
   25ef4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   25ef8:	bfxil	w8, w20, #31, #1
   25efc:	str	xzr, [x19, #8]
   25f00:	add	x9, x9, #0xca0
   25f04:	strb	w8, [x19]
   25f08:	stp	x21, xzr, [x10]
   25f0c:	str	x11, [x19, #24]
   25f10:	ldr	x8, [x10]
   25f14:	ldr	x10, [x9, #72]
   25f18:	cmp	x10, x8
   25f1c:	b.ls	25f48 <PyInit__decimal@@Base+0x1f494>  // b.plast
   25f20:	ldr	x10, [x9, #32]
   25f24:	cmp	x10, x8
   25f28:	b.ls	25f70 <PyInit__decimal@@Base+0x1f4bc>  // b.plast
   25f2c:	ldr	x10, [x9, #16]
   25f30:	cmp	x10, x8
   25f34:	b.ls	25fb4 <PyInit__decimal@@Base+0x1f500>  // b.plast
   25f38:	ldr	x9, [x9, #8]
   25f3c:	cmp	x9, x8
   25f40:	mov	w8, #0x1                   	// #1
   25f44:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25f48:	ldr	x10, [x9, #112]
   25f4c:	cmp	x10, x8
   25f50:	b.ls	25f8c <PyInit__decimal@@Base+0x1f4d8>  // b.plast
   25f54:	ldr	x10, [x9, #88]
   25f58:	cmp	x10, x8
   25f5c:	b.ls	25fc4 <PyInit__decimal@@Base+0x1f510>  // b.plast
   25f60:	ldr	x9, [x9, #80]
   25f64:	cmp	x9, x8
   25f68:	mov	w8, #0xa                   	// #10
   25f6c:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25f70:	ldr	x10, [x9, #48]
   25f74:	cmp	x10, x8
   25f78:	b.ls	25fe0 <PyInit__decimal@@Base+0x1f52c>  // b.plast
   25f7c:	ldr	x9, [x9, #40]
   25f80:	cmp	x9, x8
   25f84:	mov	w8, #0x5                   	// #5
   25f88:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25f8c:	ldr	x10, [x9, #144]
   25f90:	cmp	x10, x8
   25f94:	b.ls	25ffc <PyInit__decimal@@Base+0x1f548>  // b.plast
   25f98:	ldr	x10, [x9, #128]
   25f9c:	cmp	x10, x8
   25fa0:	b.ls	2600c <PyInit__decimal@@Base+0x1f558>  // b.plast
   25fa4:	ldr	x9, [x9, #120]
   25fa8:	cmp	x9, x8
   25fac:	mov	w8, #0xf                   	// #15
   25fb0:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25fb4:	ldr	x9, [x9, #24]
   25fb8:	cmp	x9, x8
   25fbc:	mov	w8, #0x3                   	// #3
   25fc0:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25fc4:	ldr	x10, [x9, #104]
   25fc8:	cmp	x10, x8
   25fcc:	b.ls	26038 <PyInit__decimal@@Base+0x1f584>  // b.plast
   25fd0:	ldr	x9, [x9, #96]
   25fd4:	cmp	x9, x8
   25fd8:	mov	w8, #0xc                   	// #12
   25fdc:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25fe0:	ldr	x10, [x9, #64]
   25fe4:	cmp	x10, x8
   25fe8:	b.ls	26040 <PyInit__decimal@@Base+0x1f58c>  // b.plast
   25fec:	ldr	x9, [x9, #56]
   25ff0:	cmp	x9, x8
   25ff4:	mov	w8, #0x7                   	// #7
   25ff8:	b	26018 <PyInit__decimal@@Base+0x1f564>
   25ffc:	ldr	x9, [x9, #152]
   26000:	cmp	x9, x8
   26004:	mov	w8, #0x13                  	// #19
   26008:	b	26018 <PyInit__decimal@@Base+0x1f564>
   2600c:	ldr	x9, [x9, #136]
   26010:	cmp	x9, x8
   26014:	mov	w8, #0x11                  	// #17
   26018:	cinc	x8, x8, ls  // ls = plast
   2601c:	str	x8, [x19, #16]
   26020:	mov	w0, w20
   26024:	ldp	x20, x19, [sp, #48]
   26028:	ldp	x22, x21, [sp, #32]
   2602c:	ldp	x29, x30, [sp, #16]
   26030:	add	sp, sp, #0x40
   26034:	ret
   26038:	mov	w8, #0xe                   	// #14
   2603c:	b	2601c <PyInit__decimal@@Base+0x1f568>
   26040:	mov	w8, #0x9                   	// #9
   26044:	b	2601c <PyInit__decimal@@Base+0x1f568>
   26048:	sub	sp, sp, #0x70
   2604c:	stp	x29, x30, [sp, #96]
   26050:	add	x29, sp, #0x60
   26054:	ldur	q0, [x0, #8]
   26058:	ldrb	w8, [x0]
   2605c:	stur	q0, [sp, #56]
   26060:	ldur	q0, [x0, #24]
   26064:	and	w8, w8, #0x1e
   26068:	orr	w8, w8, #0x40
   2606c:	stur	q0, [sp, #72]
   26070:	ldr	x9, [x0, #40]
   26074:	add	x0, sp, #0x30
   26078:	str	x9, [sp, #88]
   2607c:	ldur	q0, [x1, #8]
   26080:	ldrb	w9, [x1]
   26084:	stur	q0, [sp, #8]
   26088:	ldur	q0, [x1, #24]
   2608c:	and	w9, w9, #0x1e
   26090:	orr	w9, w9, #0x40
   26094:	stur	q0, [sp, #24]
   26098:	ldr	x10, [x1, #40]
   2609c:	mov	x1, sp
   260a0:	strb	w8, [sp, #48]
   260a4:	strb	w9, [sp]
   260a8:	str	x10, [sp, #40]
   260ac:	bl	25be0 <PyInit__decimal@@Base+0x1f12c>
   260b0:	ldp	x29, x30, [sp, #96]
   260b4:	add	sp, sp, #0x70
   260b8:	ret
   260bc:	sub	sp, sp, #0x90
   260c0:	stp	x29, x30, [sp, #96]
   260c4:	stp	x22, x21, [sp, #112]
   260c8:	stp	x20, x19, [sp, #128]
   260cc:	add	x29, sp, #0x60
   260d0:	ldur	q0, [x1, #8]
   260d4:	ldrb	w8, [x1]
   260d8:	mov	x19, x0
   260dc:	add	x0, sp, #0x30
   260e0:	stur	q0, [sp, #56]
   260e4:	ldur	q0, [x1, #24]
   260e8:	and	w8, w8, #0x1e
   260ec:	orr	w8, w8, #0x40
   260f0:	stur	q0, [sp, #72]
   260f4:	ldr	x9, [x1, #40]
   260f8:	mov	x1, sp
   260fc:	str	x9, [sp, #88]
   26100:	ldur	q0, [x2, #8]
   26104:	ldrb	w9, [x2]
   26108:	stur	q0, [sp, #8]
   2610c:	ldur	q0, [x2, #24]
   26110:	and	w9, w9, #0x1e
   26114:	orr	w9, w9, #0x40
   26118:	stur	q0, [sp, #24]
   2611c:	ldr	x10, [x2, #40]
   26120:	strb	w8, [sp, #48]
   26124:	strb	w9, [sp]
   26128:	str	x10, [sp, #40]
   2612c:	bl	25be0 <PyInit__decimal@@Base+0x1f12c>
   26130:	ldrb	w8, [x19]
   26134:	cmp	w0, #0x0
   26138:	mov	w20, w0
   2613c:	cset	w21, ne  // ne = any
   26140:	tbnz	w8, #5, 26184 <PyInit__decimal@@Base+0x1f6d0>
   26144:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   26148:	ldr	x9, [x19, #32]
   2614c:	ldr	x1, [x22, #1344]
   26150:	cmp	x9, x1
   26154:	b.le	26184 <PyInit__decimal@@Base+0x1f6d0>
   26158:	strb	wzr, [sp, #48]
   2615c:	ldr	x0, [x19, #40]
   26160:	add	x3, sp, #0x30
   26164:	mov	w2, #0x8                   	// #8
   26168:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2616c:	str	x0, [x19, #40]
   26170:	ldrb	w8, [sp, #48]
   26174:	cbnz	w8, 26180 <PyInit__decimal@@Base+0x1f6cc>
   26178:	ldr	x8, [x22, #1344]
   2617c:	str	x8, [x19, #32]
   26180:	ldrb	w8, [x19]
   26184:	ldr	x10, [x19, #40]
   26188:	and	w8, w8, #0xf0
   2618c:	mov	w11, #0x1                   	// #1
   26190:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   26194:	bfxil	w8, w20, #31, #1
   26198:	str	xzr, [x19, #8]
   2619c:	add	x9, x9, #0xca0
   261a0:	strb	w8, [x19]
   261a4:	stp	x21, xzr, [x10]
   261a8:	str	x11, [x19, #24]
   261ac:	ldr	x8, [x10]
   261b0:	ldr	x10, [x9, #72]
   261b4:	cmp	x10, x8
   261b8:	b.ls	261e4 <PyInit__decimal@@Base+0x1f730>  // b.plast
   261bc:	ldr	x10, [x9, #32]
   261c0:	cmp	x10, x8
   261c4:	b.ls	2620c <PyInit__decimal@@Base+0x1f758>  // b.plast
   261c8:	ldr	x10, [x9, #16]
   261cc:	cmp	x10, x8
   261d0:	b.ls	26250 <PyInit__decimal@@Base+0x1f79c>  // b.plast
   261d4:	ldr	x9, [x9, #8]
   261d8:	cmp	x9, x8
   261dc:	mov	w8, #0x1                   	// #1
   261e0:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   261e4:	ldr	x10, [x9, #112]
   261e8:	cmp	x10, x8
   261ec:	b.ls	26228 <PyInit__decimal@@Base+0x1f774>  // b.plast
   261f0:	ldr	x10, [x9, #88]
   261f4:	cmp	x10, x8
   261f8:	b.ls	26260 <PyInit__decimal@@Base+0x1f7ac>  // b.plast
   261fc:	ldr	x9, [x9, #80]
   26200:	cmp	x9, x8
   26204:	mov	w8, #0xa                   	// #10
   26208:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   2620c:	ldr	x10, [x9, #48]
   26210:	cmp	x10, x8
   26214:	b.ls	2627c <PyInit__decimal@@Base+0x1f7c8>  // b.plast
   26218:	ldr	x9, [x9, #40]
   2621c:	cmp	x9, x8
   26220:	mov	w8, #0x5                   	// #5
   26224:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   26228:	ldr	x10, [x9, #144]
   2622c:	cmp	x10, x8
   26230:	b.ls	26298 <PyInit__decimal@@Base+0x1f7e4>  // b.plast
   26234:	ldr	x10, [x9, #128]
   26238:	cmp	x10, x8
   2623c:	b.ls	262a8 <PyInit__decimal@@Base+0x1f7f4>  // b.plast
   26240:	ldr	x9, [x9, #120]
   26244:	cmp	x9, x8
   26248:	mov	w8, #0xf                   	// #15
   2624c:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   26250:	ldr	x9, [x9, #24]
   26254:	cmp	x9, x8
   26258:	mov	w8, #0x3                   	// #3
   2625c:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   26260:	ldr	x10, [x9, #104]
   26264:	cmp	x10, x8
   26268:	b.ls	262d4 <PyInit__decimal@@Base+0x1f820>  // b.plast
   2626c:	ldr	x9, [x9, #96]
   26270:	cmp	x9, x8
   26274:	mov	w8, #0xc                   	// #12
   26278:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   2627c:	ldr	x10, [x9, #64]
   26280:	cmp	x10, x8
   26284:	b.ls	262dc <PyInit__decimal@@Base+0x1f828>  // b.plast
   26288:	ldr	x9, [x9, #56]
   2628c:	cmp	x9, x8
   26290:	mov	w8, #0x7                   	// #7
   26294:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   26298:	ldr	x9, [x9, #152]
   2629c:	cmp	x9, x8
   262a0:	mov	w8, #0x13                  	// #19
   262a4:	b	262b4 <PyInit__decimal@@Base+0x1f800>
   262a8:	ldr	x9, [x9, #136]
   262ac:	cmp	x9, x8
   262b0:	mov	w8, #0x11                  	// #17
   262b4:	cinc	x8, x8, ls  // ls = plast
   262b8:	str	x8, [x19, #16]
   262bc:	mov	w0, w20
   262c0:	ldp	x20, x19, [sp, #128]
   262c4:	ldp	x22, x21, [sp, #112]
   262c8:	ldp	x29, x30, [sp, #96]
   262cc:	add	sp, sp, #0x90
   262d0:	ret
   262d4:	mov	w8, #0xe                   	// #14
   262d8:	b	262b8 <PyInit__decimal@@Base+0x1f804>
   262dc:	mov	w8, #0x9                   	// #9
   262e0:	b	262b8 <PyInit__decimal@@Base+0x1f804>
   262e4:	stp	x29, x30, [sp, #-48]!
   262e8:	stp	x22, x21, [sp, #16]
   262ec:	stp	x20, x19, [sp, #32]
   262f0:	mov	x29, sp
   262f4:	mov	x19, x1
   262f8:	mov	x8, x3
   262fc:	ldr	x1, [x1, #40]
   26300:	ldr	x3, [x19, #24]
   26304:	mov	x20, x0
   26308:	cbz	x2, 26394 <PyInit__decimal@@Base+0x1f8e0>
   2630c:	add	x9, x1, x3, lsl #3
   26310:	ldur	x9, [x9, #-8]
   26314:	cbz	x9, 26394 <PyInit__decimal@@Base+0x1f8e0>
   26318:	ldr	x9, [x19, #16]
   2631c:	mov	x10, #0x9436                	// #37942
   26320:	movk	x10, #0x50d7, lsl #16
   26324:	movk	x10, #0x435e, lsl #32
   26328:	movk	x10, #0xd79, lsl #48
   2632c:	add	x9, x9, x2
   26330:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   26334:	smulh	x10, x9, x10
   26338:	mov	x11, #0xffffffffffffffed    	// #-19
   2633c:	ldr	x12, [x12, #1344]
   26340:	add	x13, x10, x10, lsr #63
   26344:	mul	x10, x13, x11
   26348:	cmn	x10, x9
   2634c:	ldr	x10, [x20, #32]
   26350:	cinc	x22, x13, ne  // ne = any
   26354:	cmp	x12, x22
   26358:	csel	x9, x22, x12, lt  // lt = tstop
   2635c:	mov	x21, x2
   26360:	cmp	x9, x10
   26364:	b.eq	263fc <PyInit__decimal@@Base+0x1f948>  // b.none
   26368:	ldrb	w11, [x20]
   2636c:	tbnz	w11, #5, 263d8 <PyInit__decimal@@Base+0x1f924>
   26370:	mov	x0, x20
   26374:	mov	x1, x9
   26378:	mov	x2, x8
   2637c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   26380:	cbnz	w0, 263f4 <PyInit__decimal@@Base+0x1f940>
   26384:	ldp	x20, x19, [sp, #32]
   26388:	ldp	x22, x21, [sp, #16]
   2638c:	ldp	x29, x30, [sp], #48
   26390:	ret
   26394:	cmp	x20, x19
   26398:	b.eq	26484 <PyInit__decimal@@Base+0x1f9d0>  // b.none
   2639c:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   263a0:	ldr	x9, [x9, #1344]
   263a4:	ldr	x10, [x20, #32]
   263a8:	cmp	x9, x3
   263ac:	csel	x9, x3, x9, lt  // lt = tstop
   263b0:	cmp	x9, x10
   263b4:	b.eq	26458 <PyInit__decimal@@Base+0x1f9a4>  // b.none
   263b8:	ldrb	w11, [x20]
   263bc:	tbnz	w11, #5, 26434 <PyInit__decimal@@Base+0x1f980>
   263c0:	mov	x0, x20
   263c4:	mov	x1, x9
   263c8:	mov	x2, x8
   263cc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   263d0:	cbnz	w0, 26450 <PyInit__decimal@@Base+0x1f99c>
   263d4:	b	26384 <PyInit__decimal@@Base+0x1f8d0>
   263d8:	cmp	x9, x10
   263dc:	b.le	263fc <PyInit__decimal@@Base+0x1f948>
   263e0:	mov	x0, x20
   263e4:	mov	x1, x9
   263e8:	mov	x2, x8
   263ec:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   263f0:	cbz	w0, 26384 <PyInit__decimal@@Base+0x1f8d0>
   263f4:	ldr	x1, [x19, #40]
   263f8:	ldr	x3, [x19, #24]
   263fc:	ldr	x0, [x20, #40]
   26400:	mov	x2, x22
   26404:	mov	x4, x21
   26408:	bl	1ce30 <PyInit__decimal@@Base+0x1637c>
   2640c:	ldrb	w8, [x19]
   26410:	ldrb	w9, [x20]
   26414:	bfxil	w9, w8, #0, #4
   26418:	strb	w9, [x20]
   2641c:	ldr	x8, [x19, #8]
   26420:	str	x8, [x20, #8]
   26424:	ldr	x8, [x19, #16]
   26428:	add	x8, x8, x21
   2642c:	stp	x8, x22, [x20, #16]
   26430:	b	26484 <PyInit__decimal@@Base+0x1f9d0>
   26434:	cmp	x9, x10
   26438:	b.le	26458 <PyInit__decimal@@Base+0x1f9a4>
   2643c:	mov	x0, x20
   26440:	mov	x1, x9
   26444:	mov	x2, x8
   26448:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2644c:	cbz	w0, 26384 <PyInit__decimal@@Base+0x1f8d0>
   26450:	ldr	x3, [x19, #24]
   26454:	ldr	x1, [x19, #40]
   26458:	ldrb	w8, [x19]
   2645c:	ldrb	w9, [x20]
   26460:	ldr	x0, [x20, #40]
   26464:	bfxil	w9, w8, #0, #4
   26468:	strb	w9, [x20]
   2646c:	ldur	q0, [x19, #8]
   26470:	str	x3, [x20, #24]
   26474:	stur	q0, [x20, #8]
   26478:	ldr	x8, [x19, #24]
   2647c:	lsl	x2, x8, #3
   26480:	bl	63c0 <memcpy@plt>
   26484:	mov	w0, #0x1                   	// #1
   26488:	ldp	x20, x19, [sp, #32]
   2648c:	ldp	x22, x21, [sp, #16]
   26490:	ldp	x29, x30, [sp], #48
   26494:	ret
   26498:	stp	x29, x30, [sp, #-48]!
   2649c:	str	x21, [sp, #16]
   264a0:	stp	x20, x19, [sp, #32]
   264a4:	mov	x29, sp
   264a8:	mov	x20, xzr
   264ac:	cbz	x1, 265d8 <PyInit__decimal@@Base+0x1fb24>
   264b0:	mov	x19, x0
   264b4:	ldr	x0, [x0, #40]
   264b8:	ldr	x8, [x19, #24]
   264bc:	add	x9, x0, x8, lsl #3
   264c0:	ldur	x9, [x9, #-8]
   264c4:	cbz	x9, 265d8 <PyInit__decimal@@Base+0x1fb24>
   264c8:	ldr	x9, [x19, #16]
   264cc:	mov	x21, x1
   264d0:	cmp	x9, x1
   264d4:	b.le	26554 <PyInit__decimal@@Base+0x1faa0>
   264d8:	mov	x1, x0
   264dc:	mov	x2, x8
   264e0:	mov	x3, x21
   264e4:	bl	1d2fc <PyInit__decimal@@Base+0x16848>
   264e8:	ldr	x8, [x19, #16]
   264ec:	mov	x9, #0x9436                	// #37942
   264f0:	movk	x9, #0x50d7, lsl #16
   264f4:	movk	x9, #0x435e, lsl #32
   264f8:	movk	x9, #0xd79, lsl #48
   264fc:	sub	x8, x8, x21
   26500:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   26504:	str	x8, [x19, #16]
   26508:	smulh	x9, x8, x9
   2650c:	mov	x10, #0xffffffffffffffed    	// #-19
   26510:	add	x9, x9, x9, lsr #63
   26514:	ldr	x11, [x11, #1344]
   26518:	mul	x10, x9, x10
   2651c:	cmn	x10, x8
   26520:	ldr	x8, [x19, #32]
   26524:	cinc	x21, x9, ne  // ne = any
   26528:	cmp	x11, x21
   2652c:	csel	x1, x21, x11, lt  // lt = tstop
   26530:	cmp	x1, x8
   26534:	mov	x20, x0
   26538:	b.eq	265d4 <PyInit__decimal@@Base+0x1fb20>  // b.none
   2653c:	ldrb	w9, [x19]
   26540:	tbnz	w9, #5, 265c0 <PyInit__decimal@@Base+0x1fb0c>
   26544:	add	x2, x29, #0x18
   26548:	mov	x0, x19
   2654c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   26550:	b	265d4 <PyInit__decimal@@Base+0x1fb20>
   26554:	cset	w2, eq  // eq = none
   26558:	mov	x1, x8
   2655c:	bl	265ec <PyInit__decimal@@Base+0x1fb38>
   26560:	ldrb	w8, [x19]
   26564:	mov	x20, x0
   26568:	tbnz	w8, #5, 265a8 <PyInit__decimal@@Base+0x1faf4>
   2656c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   26570:	ldr	x8, [x19, #32]
   26574:	ldr	x1, [x21, #1344]
   26578:	cmp	x8, x1
   2657c:	b.le	265a8 <PyInit__decimal@@Base+0x1faf4>
   26580:	strb	wzr, [x29, #28]
   26584:	ldr	x0, [x19, #40]
   26588:	add	x3, x29, #0x1c
   2658c:	mov	w2, #0x8                   	// #8
   26590:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   26594:	str	x0, [x19, #40]
   26598:	ldrb	w8, [x29, #28]
   2659c:	cbnz	w8, 265a8 <PyInit__decimal@@Base+0x1faf4>
   265a0:	ldr	x8, [x21, #1344]
   265a4:	str	x8, [x19, #32]
   265a8:	ldr	x8, [x19, #40]
   265ac:	mov	w9, #0x1                   	// #1
   265b0:	dup	v0.2d, x9
   265b4:	str	q0, [x19, #16]
   265b8:	str	xzr, [x8]
   265bc:	b	265d8 <PyInit__decimal@@Base+0x1fb24>
   265c0:	cmp	x1, x8
   265c4:	b.le	265d4 <PyInit__decimal@@Base+0x1fb20>
   265c8:	add	x2, x29, #0x18
   265cc:	mov	x0, x19
   265d0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   265d4:	str	x21, [x19, #24]
   265d8:	mov	x0, x20
   265dc:	ldp	x20, x19, [sp, #32]
   265e0:	ldr	x21, [sp, #16]
   265e4:	ldp	x29, x30, [sp], #48
   265e8:	ret
   265ec:	sub	sp, sp, #0x30
   265f0:	stp	x29, x30, [sp, #16]
   265f4:	stp	x20, x19, [sp, #32]
   265f8:	add	x29, sp, #0x10
   265fc:	mov	x20, x1
   26600:	mov	x19, x0
   26604:	stp	xzr, xzr, [sp]
   26608:	cbz	w2, 26650 <PyInit__decimal@@Base+0x1fb9c>
   2660c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   26610:	add	x9, x19, x20, lsl #3
   26614:	add	x8, x8, #0xca0
   26618:	ldur	x2, [x9, #-8]
   2661c:	ldr	x9, [x8, #72]
   26620:	cmp	x9, x2
   26624:	b.ls	2666c <PyInit__decimal@@Base+0x1fbb8>  // b.plast
   26628:	ldr	x9, [x8, #32]
   2662c:	cmp	x9, x2
   26630:	b.ls	26694 <PyInit__decimal@@Base+0x1fbe0>  // b.plast
   26634:	ldr	x9, [x8, #16]
   26638:	cmp	x9, x2
   2663c:	b.ls	266d8 <PyInit__decimal@@Base+0x1fc24>  // b.plast
   26640:	ldr	x8, [x8, #8]
   26644:	cmp	x8, x2
   26648:	mov	w8, #0x1                   	// #1
   2664c:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   26650:	sub	x9, x20, #0x1
   26654:	mov	w8, #0x1                   	// #1
   26658:	tbnz	x9, #63, 26778 <PyInit__decimal@@Base+0x1fcc4>
   2665c:	ldr	x10, [x19, x9, lsl #3]
   26660:	sub	x9, x9, #0x1
   26664:	cbz	x10, 26658 <PyInit__decimal@@Base+0x1fba4>
   26668:	b	2677c <PyInit__decimal@@Base+0x1fcc8>
   2666c:	ldr	x9, [x8, #112]
   26670:	cmp	x9, x2
   26674:	b.ls	266b0 <PyInit__decimal@@Base+0x1fbfc>  // b.plast
   26678:	ldr	x9, [x8, #88]
   2667c:	cmp	x9, x2
   26680:	b.ls	266e8 <PyInit__decimal@@Base+0x1fc34>  // b.plast
   26684:	ldr	x8, [x8, #80]
   26688:	cmp	x8, x2
   2668c:	mov	w8, #0xa                   	// #10
   26690:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   26694:	ldr	x9, [x8, #48]
   26698:	cmp	x9, x2
   2669c:	b.ls	26704 <PyInit__decimal@@Base+0x1fc50>  // b.plast
   266a0:	ldr	x8, [x8, #40]
   266a4:	cmp	x8, x2
   266a8:	mov	w8, #0x5                   	// #5
   266ac:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   266b0:	ldr	x9, [x8, #144]
   266b4:	cmp	x9, x2
   266b8:	b.ls	26720 <PyInit__decimal@@Base+0x1fc6c>  // b.plast
   266bc:	ldr	x9, [x8, #128]
   266c0:	cmp	x9, x2
   266c4:	b.ls	26730 <PyInit__decimal@@Base+0x1fc7c>  // b.plast
   266c8:	ldr	x8, [x8, #120]
   266cc:	cmp	x8, x2
   266d0:	mov	w8, #0xf                   	// #15
   266d4:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   266d8:	ldr	x8, [x8, #24]
   266dc:	cmp	x8, x2
   266e0:	mov	w8, #0x3                   	// #3
   266e4:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   266e8:	ldr	x9, [x8, #104]
   266ec:	cmp	x9, x2
   266f0:	b.ls	267a8 <PyInit__decimal@@Base+0x1fcf4>  // b.plast
   266f4:	ldr	x8, [x8, #96]
   266f8:	cmp	x8, x2
   266fc:	mov	w8, #0xc                   	// #12
   26700:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   26704:	ldr	x9, [x8, #64]
   26708:	cmp	x9, x2
   2670c:	b.ls	267b0 <PyInit__decimal@@Base+0x1fcfc>  // b.plast
   26710:	ldr	x8, [x8, #56]
   26714:	cmp	x8, x2
   26718:	mov	w8, #0x7                   	// #7
   2671c:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   26720:	ldr	x8, [x8, #152]
   26724:	cmp	x8, x2
   26728:	mov	w8, #0x13                  	// #19
   2672c:	b	2673c <PyInit__decimal@@Base+0x1fc88>
   26730:	ldr	x8, [x8, #136]
   26734:	cmp	x8, x2
   26738:	mov	w8, #0x11                  	// #17
   2673c:	cinc	x8, x8, ls  // ls = plast
   26740:	sub	x3, x8, #0x1
   26744:	add	x0, sp, #0x8
   26748:	mov	x1, sp
   2674c:	bl	3aeb8 <PyInit__decimal@@Base+0x34404>
   26750:	ldr	x8, [sp]
   26754:	subs	x9, x20, #0x2
   26758:	b.lt	26780 <PyInit__decimal@@Base+0x1fccc>  // b.tstop
   2675c:	cbnz	x8, 26780 <PyInit__decimal@@Base+0x1fccc>
   26760:	mov	w8, #0x1                   	// #1
   26764:	tbnz	x9, #63, 26778 <PyInit__decimal@@Base+0x1fcc4>
   26768:	ldr	x10, [x19, x9, lsl #3]
   2676c:	sub	x9, x9, #0x1
   26770:	cbz	x10, 26764 <PyInit__decimal@@Base+0x1fcb0>
   26774:	b	2677c <PyInit__decimal@@Base+0x1fcc8>
   26778:	mov	x8, xzr
   2677c:	str	x8, [sp]
   26780:	ldr	x0, [sp, #8]
   26784:	cmp	x0, #0x5
   26788:	b.eq	26790 <PyInit__decimal@@Base+0x1fcdc>  // b.none
   2678c:	cbnz	x0, 26798 <PyInit__decimal@@Base+0x1fce4>
   26790:	cmp	x8, #0x0
   26794:	cinc	x0, x0, ne  // ne = any
   26798:	ldp	x20, x19, [sp, #32]
   2679c:	ldp	x29, x30, [sp, #16]
   267a0:	add	sp, sp, #0x30
   267a4:	ret
   267a8:	mov	w8, #0xe                   	// #14
   267ac:	b	26740 <PyInit__decimal@@Base+0x1fc8c>
   267b0:	mov	w8, #0x9                   	// #9
   267b4:	b	26740 <PyInit__decimal@@Base+0x1fc8c>
   267b8:	stp	x29, x30, [sp, #-64]!
   267bc:	str	x23, [sp, #16]
   267c0:	stp	x22, x21, [sp, #32]
   267c4:	stp	x20, x19, [sp, #48]
   267c8:	mov	x29, sp
   267cc:	mov	x19, x1
   267d0:	ldr	x1, [x1, #40]
   267d4:	ldr	x9, [x19, #24]
   267d8:	mov	x21, x3
   267dc:	mov	x20, x0
   267e0:	cbz	x2, 26870 <PyInit__decimal@@Base+0x1fdbc>
   267e4:	add	x8, x1, x9, lsl #3
   267e8:	ldur	x8, [x8, #-8]
   267ec:	cbz	x8, 26870 <PyInit__decimal@@Base+0x1fdbc>
   267f0:	ldr	x8, [x19, #16]
   267f4:	mov	x22, x2
   267f8:	subs	x8, x8, x2
   267fc:	b.le	268b4 <PyInit__decimal@@Base+0x1fe00>
   26800:	mov	x10, #0x9436                	// #37942
   26804:	movk	x10, #0x50d7, lsl #16
   26808:	movk	x10, #0x435e, lsl #32
   2680c:	movk	x10, #0xd79, lsl #48
   26810:	smulh	x10, x8, x10
   26814:	mov	x11, #0xffffffffffffffed    	// #-19
   26818:	add	x10, x10, x10, lsr #63
   2681c:	mul	x11, x10, x11
   26820:	cmn	x11, x8
   26824:	cinc	x23, x10, ne  // ne = any
   26828:	cmp	x20, x19
   2682c:	str	x8, [x20, #16]
   26830:	b.eq	2692c <PyInit__decimal@@Base+0x1fe78>  // b.none
   26834:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   26838:	ldr	x8, [x8, #1344]
   2683c:	ldr	x10, [x20, #32]
   26840:	cmp	x8, x23
   26844:	csel	x8, x23, x8, lt  // lt = tstop
   26848:	cmp	x8, x10
   2684c:	b.eq	269f0 <PyInit__decimal@@Base+0x1ff3c>  // b.none
   26850:	ldrb	w11, [x20]
   26854:	tbnz	w11, #5, 269cc <PyInit__decimal@@Base+0x1ff18>
   26858:	mov	x0, x20
   2685c:	mov	x1, x8
   26860:	mov	x2, x21
   26864:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   26868:	cbnz	w0, 269e8 <PyInit__decimal@@Base+0x1ff34>
   2686c:	b	26a38 <PyInit__decimal@@Base+0x1ff84>
   26870:	cmp	x20, x19
   26874:	b.eq	26924 <PyInit__decimal@@Base+0x1fe70>  // b.none
   26878:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2687c:	ldr	x8, [x8, #1344]
   26880:	ldr	x10, [x20, #32]
   26884:	cmp	x8, x9
   26888:	csel	x8, x9, x8, lt  // lt = tstop
   2688c:	cmp	x8, x10
   26890:	b.eq	26998 <PyInit__decimal@@Base+0x1fee4>  // b.none
   26894:	ldrb	w11, [x20]
   26898:	tbnz	w11, #5, 26974 <PyInit__decimal@@Base+0x1fec0>
   2689c:	mov	x0, x20
   268a0:	mov	x1, x8
   268a4:	mov	x2, x21
   268a8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   268ac:	cbnz	w0, 26990 <PyInit__decimal@@Base+0x1fedc>
   268b0:	b	26a38 <PyInit__decimal@@Base+0x1ff84>
   268b4:	cset	w2, eq  // eq = none
   268b8:	mov	x0, x1
   268bc:	mov	x1, x9
   268c0:	bl	265ec <PyInit__decimal@@Base+0x1fb38>
   268c4:	ldrb	w8, [x20]
   268c8:	mov	x22, x0
   268cc:	tbnz	w8, #5, 2690c <PyInit__decimal@@Base+0x1fe58>
   268d0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   268d4:	ldr	x8, [x20, #32]
   268d8:	ldr	x1, [x21, #1344]
   268dc:	cmp	x8, x1
   268e0:	b.le	2690c <PyInit__decimal@@Base+0x1fe58>
   268e4:	strb	wzr, [x29, #28]
   268e8:	ldr	x0, [x20, #40]
   268ec:	add	x3, x29, #0x1c
   268f0:	mov	w2, #0x8                   	// #8
   268f4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   268f8:	str	x0, [x20, #40]
   268fc:	ldrb	w8, [x29, #28]
   26900:	cbnz	w8, 2690c <PyInit__decimal@@Base+0x1fe58>
   26904:	ldr	x8, [x21, #1344]
   26908:	str	x8, [x20, #32]
   2690c:	ldr	x8, [x20, #40]
   26910:	mov	w9, #0x1                   	// #1
   26914:	dup	v0.2d, x9
   26918:	str	q0, [x20, #16]
   2691c:	str	xzr, [x8]
   26920:	b	26a08 <PyInit__decimal@@Base+0x1ff54>
   26924:	mov	x22, xzr
   26928:	b	26a20 <PyInit__decimal@@Base+0x1ff6c>
   2692c:	mov	x0, x1
   26930:	mov	x2, x9
   26934:	mov	x3, x22
   26938:	bl	1d2fc <PyInit__decimal@@Base+0x16848>
   2693c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   26940:	ldr	x9, [x8, #1344]
   26944:	ldr	x8, [x19, #32]
   26948:	mov	x22, x0
   2694c:	cmp	x9, x23
   26950:	csel	x1, x23, x9, lt  // lt = tstop
   26954:	cmp	x1, x8
   26958:	b.eq	26a04 <PyInit__decimal@@Base+0x1ff50>  // b.none
   2695c:	ldrb	w9, [x19]
   26960:	tbnz	w9, #5, 26a40 <PyInit__decimal@@Base+0x1ff8c>
   26964:	mov	x0, x19
   26968:	mov	x2, x21
   2696c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   26970:	b	26a04 <PyInit__decimal@@Base+0x1ff50>
   26974:	cmp	x8, x10
   26978:	b.le	26998 <PyInit__decimal@@Base+0x1fee4>
   2697c:	mov	x0, x20
   26980:	mov	x1, x8
   26984:	mov	x2, x21
   26988:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2698c:	cbz	w0, 26a38 <PyInit__decimal@@Base+0x1ff84>
   26990:	ldr	x9, [x19, #24]
   26994:	ldr	x1, [x19, #40]
   26998:	ldrb	w8, [x19]
   2699c:	ldrb	w10, [x20]
   269a0:	ldr	x0, [x20, #40]
   269a4:	bfxil	w10, w8, #0, #4
   269a8:	strb	w10, [x20]
   269ac:	ldur	q0, [x19, #8]
   269b0:	str	x9, [x20, #24]
   269b4:	stur	q0, [x20, #8]
   269b8:	ldr	x8, [x19, #24]
   269bc:	lsl	x2, x8, #3
   269c0:	bl	63c0 <memcpy@plt>
   269c4:	mov	x22, xzr
   269c8:	b	26a20 <PyInit__decimal@@Base+0x1ff6c>
   269cc:	cmp	x8, x10
   269d0:	b.le	269f0 <PyInit__decimal@@Base+0x1ff3c>
   269d4:	mov	x0, x20
   269d8:	mov	x1, x8
   269dc:	mov	x2, x21
   269e0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   269e4:	cbz	w0, 26a38 <PyInit__decimal@@Base+0x1ff84>
   269e8:	ldr	x1, [x19, #40]
   269ec:	ldr	x9, [x19, #24]
   269f0:	ldr	x0, [x20, #40]
   269f4:	mov	x2, x9
   269f8:	mov	x3, x22
   269fc:	bl	1d2fc <PyInit__decimal@@Base+0x16848>
   26a00:	mov	x22, x0
   26a04:	str	x23, [x20, #24]
   26a08:	ldrb	w8, [x19]
   26a0c:	ldrb	w9, [x20]
   26a10:	bfxil	w9, w8, #0, #4
   26a14:	strb	w9, [x20]
   26a18:	ldr	x8, [x19, #8]
   26a1c:	str	x8, [x20, #8]
   26a20:	mov	x0, x22
   26a24:	ldp	x20, x19, [sp, #48]
   26a28:	ldp	x22, x21, [sp, #32]
   26a2c:	ldr	x23, [sp, #16]
   26a30:	ldp	x29, x30, [sp], #64
   26a34:	ret
   26a38:	mov	x22, #0xffffffffffffffff    	// #-1
   26a3c:	b	26a20 <PyInit__decimal@@Base+0x1ff6c>
   26a40:	cmp	x1, x8
   26a44:	b.le	26a04 <PyInit__decimal@@Base+0x1ff50>
   26a48:	mov	x0, x19
   26a4c:	mov	x2, x21
   26a50:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   26a54:	b	26a04 <PyInit__decimal@@Base+0x1ff50>
   26a58:	sub	sp, sp, #0x70
   26a5c:	stp	x29, x30, [sp, #16]
   26a60:	stp	x28, x27, [sp, #32]
   26a64:	stp	x26, x25, [sp, #48]
   26a68:	stp	x24, x23, [sp, #64]
   26a6c:	stp	x22, x21, [sp, #80]
   26a70:	stp	x20, x19, [sp, #96]
   26a74:	add	x29, sp, #0x10
   26a78:	ldrb	w8, [x1]
   26a7c:	mov	x21, x4
   26a80:	mov	x19, x0
   26a84:	tst	w8, #0xe
   26a88:	b.ne	26ab4 <PyInit__decimal@@Base+0x20000>  // b.any
   26a8c:	ldrb	w9, [x2]
   26a90:	and	w10, w9, #0xe
   26a94:	bfxil	w10, w8, #0, #1
   26a98:	and	w8, w9, #0x1
   26a9c:	orr	w8, w8, w10
   26aa0:	cbnz	w8, 26ab4 <PyInit__decimal@@Base+0x20000>
   26aa4:	ldr	x8, [x1, #8]
   26aa8:	cbnz	x8, 26ab4 <PyInit__decimal@@Base+0x20000>
   26aac:	ldr	x8, [x2, #8]
   26ab0:	cbz	x8, 26b3c <PyInit__decimal@@Base+0x20088>
   26ab4:	ldrb	w8, [x19]
   26ab8:	tbnz	w8, #5, 26afc <PyInit__decimal@@Base+0x20048>
   26abc:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   26ac0:	ldr	x9, [x19, #32]
   26ac4:	ldr	x1, [x20, #1344]
   26ac8:	cmp	x9, x1
   26acc:	b.le	26afc <PyInit__decimal@@Base+0x20048>
   26ad0:	sturb	wzr, [x29, #-4]
   26ad4:	ldr	x0, [x19, #40]
   26ad8:	sub	x3, x29, #0x4
   26adc:	mov	w2, #0x8                   	// #8
   26ae0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   26ae4:	str	x0, [x19, #40]
   26ae8:	ldurb	w8, [x29, #-4]
   26aec:	cbnz	w8, 26af8 <PyInit__decimal@@Base+0x20044>
   26af0:	ldr	x8, [x20, #1344]
   26af4:	str	x8, [x19, #32]
   26af8:	ldrb	w8, [x19]
   26afc:	and	w8, w8, #0xf0
   26b00:	orr	w8, w8, #0x4
   26b04:	stp	xzr, xzr, [x19, #16]
   26b08:	strb	w8, [x19]
   26b0c:	str	xzr, [x19, #8]
   26b10:	ldr	w8, [x21]
   26b14:	orr	w8, w8, #0x100
   26b18:	str	w8, [x21]
   26b1c:	ldp	x20, x19, [sp, #96]
   26b20:	ldp	x22, x21, [sp, #80]
   26b24:	ldp	x24, x23, [sp, #64]
   26b28:	ldp	x26, x25, [sp, #48]
   26b2c:	ldp	x28, x27, [sp, #32]
   26b30:	ldp	x29, x30, [sp, #16]
   26b34:	add	sp, sp, #0x70
   26b38:	ret
   26b3c:	ldr	x8, [x2, #16]
   26b40:	ldr	x9, [x1, #16]
   26b44:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   26b48:	ldr	x10, [x23, #1344]
   26b4c:	mov	x20, x3
   26b50:	cmp	x8, x9
   26b54:	csel	x26, x2, x1, gt
   26b58:	ldr	x9, [x26, #24]
   26b5c:	ldr	x8, [x19, #32]
   26b60:	csel	x24, x1, x2, gt
   26b64:	cmp	x10, x9
   26b68:	csel	x1, x9, x10, lt  // lt = tstop
   26b6c:	cmp	x1, x8
   26b70:	b.eq	26ba4 <PyInit__decimal@@Base+0x200f0>  // b.none
   26b74:	ldrb	w9, [x19]
   26b78:	tbnz	w9, #5, 26b8c <PyInit__decimal@@Base+0x200d8>
   26b7c:	mov	x0, x19
   26b80:	mov	x2, x21
   26b84:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   26b88:	b	26ba0 <PyInit__decimal@@Base+0x200ec>
   26b8c:	cmp	x1, x8
   26b90:	b.le	26ba4 <PyInit__decimal@@Base+0x200f0>
   26b94:	mov	x0, x19
   26b98:	mov	x2, x21
   26b9c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   26ba0:	cbz	w0, 26b1c <PyInit__decimal@@Base+0x20068>
   26ba4:	ldr	x12, [x24, #40]
   26ba8:	ldr	x8, [x26, #40]
   26bac:	ldr	x9, [x24, #24]
   26bb0:	adrp	x22, 44000 <PyInit__decimal@@Base+0x3d54c>
   26bb4:	ldr	x10, [x12]
   26bb8:	ldr	x11, [x8]
   26bbc:	sub	x9, x9, #0x1
   26bc0:	cmp	x9, #0x1
   26bc4:	add	x22, x22, #0xca0
   26bc8:	mov	x9, xzr
   26bcc:	b.lt	26c60 <PyInit__decimal@@Base+0x201ac>  // b.tstop
   26bd0:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   26bd4:	movk	x13, #0xcccd
   26bd8:	mov	w14, #0xa                   	// #10
   26bdc:	mov	x16, xzr
   26be0:	mov	x15, xzr
   26be4:	b	26c04 <PyInit__decimal@@Base+0x20150>
   26be8:	ldr	x10, [x22, x16]
   26bec:	add	x16, x16, #0x8
   26bf0:	cmp	x16, #0x98
   26bf4:	add	x15, x10, x15
   26bf8:	mov	x11, x18
   26bfc:	mov	x10, x17
   26c00:	b.eq	26c38 <PyInit__decimal@@Base+0x20184>  // b.none
   26c04:	umulh	x17, x10, x13
   26c08:	umulh	x18, x11, x13
   26c0c:	lsr	x17, x17, #3
   26c10:	lsr	x18, x18, #3
   26c14:	msub	x10, x17, x14, x10
   26c18:	msub	x11, x18, x14, x11
   26c1c:	orr	w0, w11, w10
   26c20:	tst	x0, #0xe
   26c24:	b.ne	271d4 <PyInit__decimal@@Base+0x20720>  // b.any
   26c28:	tst	x11, x10
   26c2c:	b.ne	26be8 <PyInit__decimal@@Base+0x20134>  // b.any
   26c30:	mov	x10, xzr
   26c34:	b	26bec <PyInit__decimal@@Base+0x20138>
   26c38:	ldr	x10, [x19, #40]
   26c3c:	str	x15, [x10, x9, lsl #3]
   26c40:	add	x9, x9, #0x1
   26c44:	ldr	x15, [x24, #24]
   26c48:	lsl	x11, x9, #3
   26c4c:	ldr	x10, [x12, x11]
   26c50:	ldr	x11, [x8, x11]
   26c54:	sub	x15, x15, #0x1
   26c58:	cmp	x9, x15
   26c5c:	b.lt	26bdc <PyInit__decimal@@Base+0x20128>  // b.tstop
   26c60:	ldr	x25, [x22, #72]
   26c64:	cmp	x25, x10
   26c68:	b.ls	26c94 <PyInit__decimal@@Base+0x201e0>  // b.plast
   26c6c:	ldr	x12, [x22, #32]
   26c70:	cmp	x12, x10
   26c74:	b.ls	26cbc <PyInit__decimal@@Base+0x20208>  // b.plast
   26c78:	ldr	x12, [x22, #16]
   26c7c:	cmp	x12, x10
   26c80:	b.ls	26d00 <PyInit__decimal@@Base+0x2024c>  // b.plast
   26c84:	ldr	x12, [x22, #8]
   26c88:	cmp	x12, x10
   26c8c:	mov	w12, #0x1                   	// #1
   26c90:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26c94:	ldr	x12, [x22, #112]
   26c98:	cmp	x12, x10
   26c9c:	b.ls	26cd8 <PyInit__decimal@@Base+0x20224>  // b.plast
   26ca0:	ldr	x12, [x22, #88]
   26ca4:	cmp	x12, x10
   26ca8:	b.ls	26d10 <PyInit__decimal@@Base+0x2025c>  // b.plast
   26cac:	ldr	x12, [x22, #80]
   26cb0:	cmp	x12, x10
   26cb4:	mov	w12, #0xa                   	// #10
   26cb8:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26cbc:	ldr	x12, [x22, #48]
   26cc0:	cmp	x12, x10
   26cc4:	b.ls	26d2c <PyInit__decimal@@Base+0x20278>  // b.plast
   26cc8:	ldr	x12, [x22, #40]
   26ccc:	cmp	x12, x10
   26cd0:	mov	w12, #0x5                   	// #5
   26cd4:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26cd8:	ldr	x12, [x22, #144]
   26cdc:	cmp	x12, x10
   26ce0:	b.ls	26d48 <PyInit__decimal@@Base+0x20294>  // b.plast
   26ce4:	ldr	x12, [x22, #128]
   26ce8:	cmp	x12, x10
   26cec:	b.ls	26d58 <PyInit__decimal@@Base+0x202a4>  // b.plast
   26cf0:	ldr	x12, [x22, #120]
   26cf4:	cmp	x12, x10
   26cf8:	mov	w12, #0xf                   	// #15
   26cfc:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26d00:	ldr	x12, [x22, #24]
   26d04:	cmp	x12, x10
   26d08:	mov	w12, #0x3                   	// #3
   26d0c:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26d10:	ldr	x12, [x22, #104]
   26d14:	cmp	x12, x10
   26d18:	b.ls	27214 <PyInit__decimal@@Base+0x20760>  // b.plast
   26d1c:	ldr	x12, [x22, #96]
   26d20:	cmp	x12, x10
   26d24:	mov	w12, #0xc                   	// #12
   26d28:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26d2c:	ldr	x12, [x22, #64]
   26d30:	cmp	x12, x10
   26d34:	b.ls	2721c <PyInit__decimal@@Base+0x20768>  // b.plast
   26d38:	ldr	x12, [x22, #56]
   26d3c:	cmp	x12, x10
   26d40:	mov	w12, #0x7                   	// #7
   26d44:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26d48:	ldr	x12, [x22, #152]
   26d4c:	cmp	x12, x10
   26d50:	mov	w12, #0x13                  	// #19
   26d54:	b	26d64 <PyInit__decimal@@Base+0x202b0>
   26d58:	ldr	x12, [x22, #136]
   26d5c:	cmp	x12, x10
   26d60:	mov	w12, #0x11                  	// #17
   26d64:	cinc	x12, x12, ls  // ls = plast
   26d68:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   26d6c:	mov	x13, xzr
   26d70:	mov	x14, xzr
   26d74:	movk	x15, #0xcccd
   26d78:	mov	w16, #0xa                   	// #10
   26d7c:	b	26d98 <PyInit__decimal@@Base+0x202e4>
   26d80:	ldr	x10, [x22, x13, lsl #3]
   26d84:	add	x13, x13, #0x1
   26d88:	cmp	x13, x12
   26d8c:	add	x14, x10, x14
   26d90:	mov	x10, x17
   26d94:	b.cs	26dd0 <PyInit__decimal@@Base+0x2031c>  // b.hs, b.nlast
   26d98:	mov	x18, x11
   26d9c:	umulh	x11, x10, x15
   26da0:	umulh	x0, x18, x15
   26da4:	lsr	x17, x11, #3
   26da8:	lsr	x11, x0, #3
   26dac:	msub	x10, x17, x16, x10
   26db0:	msub	x18, x11, x16, x18
   26db4:	orr	w0, w18, w10
   26db8:	tst	x0, #0xe
   26dbc:	b.ne	271d4 <PyInit__decimal@@Base+0x20720>  // b.any
   26dc0:	tst	x18, x10
   26dc4:	b.ne	26d80 <PyInit__decimal@@Base+0x202cc>  // b.any
   26dc8:	mov	x10, xzr
   26dcc:	b	26d84 <PyInit__decimal@@Base+0x202d0>
   26dd0:	ldr	x10, [x19, #40]
   26dd4:	sub	w12, w13, #0x1
   26dd8:	cmp	w12, #0x11
   26ddc:	str	x14, [x10, x9, lsl #3]
   26de0:	b.hi	26e18 <PyInit__decimal@@Base+0x20364>  // b.pmore
   26de4:	sub	w12, w13, #0x1
   26de8:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   26dec:	movk	x13, #0xcccd
   26df0:	mov	w14, #0xa                   	// #10
   26df4:	umulh	x15, x11, x13
   26df8:	lsr	x15, x15, #3
   26dfc:	msub	x11, x15, x14, x11
   26e00:	cmp	x11, #0x1
   26e04:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26e08:	add	w12, w12, #0x1
   26e0c:	cmp	w12, #0x12
   26e10:	mov	x11, x15
   26e14:	b.cc	26df4 <PyInit__decimal@@Base+0x20340>  // b.lo, b.ul, b.last
   26e18:	ldr	x11, [x26, #24]
   26e1c:	add	x9, x9, #0x1
   26e20:	cmp	x9, x11
   26e24:	b.ge	27174 <PyInit__decimal@@Base+0x206c0>  // b.tcont
   26e28:	mov	x14, #0xf5c3                	// #62915
   26e2c:	mov	x15, #0xf7cf                	// #63439
   26e30:	mov	x16, #0x594b                	// #22859
   26e34:	mov	x17, #0x7843                	// #30787
   26e38:	mov	x18, #0x34db                	// #13531
   26e3c:	mov	x0, #0x42bd                	// #17085
   26e40:	mov	x1, #0xcefd                	// #52989
   26e44:	mov	x2, #0x5a53                	// #23123
   26e48:	mov	x3, #0xd5bf                	// #54719
   26e4c:	mov	x5, #0xaaff                	// #43775
   26e50:	mov	x6, #0x2233                	// #8755
   26e54:	mov	x7, #0x385                 	// #901
   26e58:	mov	x26, #0xcd81                	// #52609
   26e5c:	movk	x14, #0x5c28, lsl #16
   26e60:	movk	x15, #0xe353, lsl #16
   26e64:	movk	x16, #0x3886, lsl #16
   26e68:	movk	x17, #0x71b4, lsl #16
   26e6c:	movk	x18, #0xd7b6, lsl #16
   26e70:	movk	x0, #0xe57a, lsl #16
   26e74:	movk	x1, #0x8461, lsl #16
   26e78:	movk	x2, #0xa09b, lsl #16
   26e7c:	movk	x3, #0xbded, lsl #16
   26e80:	movk	x5, #0xcb24, lsl #16
   26e84:	movk	x6, #0x5bd4, lsl #16
   26e88:	movk	x7, #0x92ed, lsl #16
   26e8c:	movk	x26, #0x5095, lsl #16
   26e90:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   26e94:	movk	x14, #0xc28f, lsl #32
   26e98:	movk	x15, #0x9ba5, lsl #32
   26e9c:	movk	x16, #0xc5d6, lsl #32
   26ea0:	movk	x17, #0x5ac4, lsl #32
   26ea4:	movk	x18, #0xde82, lsl #32
   26ea8:	movk	x0, #0x94d5, lsl #32
   26eac:	movk	x1, #0x7711, lsl #32
   26eb0:	movk	x2, #0xb82f, lsl #32
   26eb4:	movk	x3, #0xfece, lsl #32
   26eb8:	mov	w4, #0xcccd                	// #52429
   26ebc:	movk	x5, #0xff0b, lsl #32
   26ec0:	movk	x6, #0x3302, lsl #32
   26ec4:	movk	x7, #0x84d0, lsl #32
   26ec8:	movk	x26, #0x4dc3, lsl #32
   26ecc:	movk	x12, #0xcccd
   26ed0:	mov	w13, #0xa                   	// #10
   26ed4:	movk	x14, #0x28f5, lsl #48
   26ed8:	movk	x15, #0x20c4, lsl #48
   26edc:	movk	x16, #0x346d, lsl #48
   26ee0:	movk	x17, #0xa7c, lsl #48
   26ee4:	movk	x18, #0x431b, lsl #48
   26ee8:	movk	x0, #0xd6bf, lsl #48
   26eec:	movk	x1, #0xabcc, lsl #48
   26ef0:	movk	x2, #0x44, lsl #48
   26ef4:	movk	x3, #0xdbe6, lsl #48
   26ef8:	movk	w4, #0xcccc, lsl #16
   26efc:	movk	x5, #0xafeb, lsl #48
   26f00:	movk	x6, #0x232f, lsl #48
   26f04:	movk	x7, #0x384b, lsl #48
   26f08:	movk	x26, #0xb42, lsl #48
   26f0c:	ldr	x30, [x8, x9, lsl #3]
   26f10:	umulh	x28, x30, x12
   26f14:	lsr	x28, x28, #3
   26f18:	msub	x27, x28, x13, x30
   26f1c:	cmp	x27, #0x1
   26f20:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26f24:	umulh	x27, x28, x12
   26f28:	lsr	x27, x27, #3
   26f2c:	msub	x27, x27, x13, x28
   26f30:	cmp	x27, #0x1
   26f34:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26f38:	lsr	x27, x30, #2
   26f3c:	umulh	x27, x27, x14
   26f40:	lsr	x27, x27, #2
   26f44:	umulh	x28, x27, x12
   26f48:	lsr	x28, x28, #3
   26f4c:	msub	x27, x28, x13, x27
   26f50:	cmp	x27, #0x1
   26f54:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26f58:	lsr	x27, x30, #3
   26f5c:	umulh	x27, x27, x15
   26f60:	lsr	x27, x27, #4
   26f64:	umulh	x28, x27, x12
   26f68:	lsr	x28, x28, #3
   26f6c:	msub	x27, x28, x13, x27
   26f70:	cmp	x27, #0x1
   26f74:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26f78:	umulh	x27, x30, x16
   26f7c:	lsr	x27, x27, #11
   26f80:	umulh	x28, x27, x12
   26f84:	lsr	x28, x28, #3
   26f88:	msub	x27, x28, x13, x27
   26f8c:	cmp	x27, #0x1
   26f90:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26f94:	lsr	x27, x30, #5
   26f98:	umulh	x27, x27, x17
   26f9c:	lsr	x27, x27, #7
   26fa0:	umulh	x28, x27, x12
   26fa4:	lsr	x28, x28, #3
   26fa8:	msub	x27, x28, x13, x27
   26fac:	cmp	x27, #0x1
   26fb0:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26fb4:	umulh	x27, x30, x18
   26fb8:	lsr	x27, x27, #18
   26fbc:	umulh	x28, x27, x12
   26fc0:	lsr	x28, x28, #3
   26fc4:	msub	x27, x28, x13, x27
   26fc8:	cmp	x27, #0x1
   26fcc:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26fd0:	umulh	x27, x30, x0
   26fd4:	lsr	x27, x27, #23
   26fd8:	umulh	x28, x27, x12
   26fdc:	lsr	x28, x28, #3
   26fe0:	msub	x27, x28, x13, x27
   26fe4:	cmp	x27, #0x1
   26fe8:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   26fec:	umulh	x27, x30, x1
   26ff0:	lsr	x27, x27, #26
   26ff4:	umulh	x28, x27, x12
   26ff8:	lsr	x28, x28, #3
   26ffc:	msub	x27, x28, x13, x27
   27000:	cmp	x27, #0x1
   27004:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27008:	lsr	x27, x30, #9
   2700c:	umulh	x27, x27, x2
   27010:	lsr	x27, x27, #11
   27014:	umulh	x28, x27, x12
   27018:	lsr	x28, x28, #3
   2701c:	msub	x27, x28, x13, x27
   27020:	cmp	x27, #0x1
   27024:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27028:	umulh	x27, x30, x3
   2702c:	lsr	x27, x27, #33
   27030:	mul	x28, x27, x4
   27034:	lsr	x28, x28, #35
   27038:	msub	w27, w28, w13, w27
   2703c:	cmp	w27, #0x1
   27040:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27044:	umulh	x27, x30, x5
   27048:	lsr	x27, x27, #36
   2704c:	mul	x28, x27, x4
   27050:	lsr	x28, x28, #35
   27054:	msub	w27, w28, w13, w27
   27058:	cmp	w27, #0x1
   2705c:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27060:	umulh	x27, x30, x6
   27064:	lsr	x27, x27, #37
   27068:	mul	x28, x27, x4
   2706c:	lsr	x28, x28, #35
   27070:	msub	w27, w28, w13, w27
   27074:	cmp	w27, #0x1
   27078:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   2707c:	umulh	x27, x30, x7
   27080:	lsr	x27, x27, #41
   27084:	mul	x28, x27, x4
   27088:	lsr	x28, x28, #35
   2708c:	msub	w27, w28, w13, w27
   27090:	cmp	w27, #0x1
   27094:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27098:	umulh	x27, x30, x26
   2709c:	lsr	x27, x27, #42
   270a0:	mul	x28, x27, x4
   270a4:	lsr	x28, x28, #35
   270a8:	msub	w27, w28, w13, w27
   270ac:	cmp	w27, #0x1
   270b0:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   270b4:	mov	x28, #0xeac3                	// #60099
   270b8:	movk	x28, #0xf3dc, lsl #16
   270bc:	movk	x28, #0x4075, lsl #32
   270c0:	lsr	x27, x30, #15
   270c4:	movk	x28, #0x2, lsl #48
   270c8:	umulh	x27, x27, x28
   270cc:	ubfx	x27, x27, #20, #16
   270d0:	umull	x28, w27, w4
   270d4:	lsr	x28, x28, #35
   270d8:	msub	w27, w28, w13, w27
   270dc:	cmp	w27, #0x1
   270e0:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   270e4:	mov	x27, #0x7857                	// #30807
   270e8:	movk	x27, #0xb113, lsl #16
   270ec:	movk	x27, #0x652f, lsl #32
   270f0:	movk	x27, #0x39a5, lsl #48
   270f4:	umulh	x27, x30, x27
   270f8:	lsr	x27, x27, #51
   270fc:	mul	x28, x27, x4
   27100:	lsr	x28, x28, #35
   27104:	msub	w27, w28, w13, w27
   27108:	cmp	w27, #0x1
   2710c:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27110:	mov	x28, #0x1b53                	// #6995
   27114:	movk	x28, #0xd519, lsl #16
   27118:	lsr	x27, x30, #17
   2711c:	movk	x28, #0x5c3b, lsl #32
   27120:	umulh	x27, x27, x28
   27124:	ubfx	w27, w27, #22, #8
   27128:	umull	x28, w27, w4
   2712c:	lsr	x28, x28, #35
   27130:	msub	w27, w28, w13, w27
   27134:	cmp	w27, #0x1
   27138:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   2713c:	mov	x28, #0x490f                	// #18703
   27140:	movk	x28, #0x7747, lsl #16
   27144:	lsr	x27, x30, #18
   27148:	movk	x28, #0x49c9, lsl #32
   2714c:	umulh	x27, x27, x28
   27150:	ubfx	x27, x27, #24, #8
   27154:	umull	x28, w27, w4
   27158:	lsr	x28, x28, #35
   2715c:	msub	w27, w28, w13, w27
   27160:	cmp	w27, #0x1
   27164:	b.hi	271d4 <PyInit__decimal@@Base+0x20720>  // b.pmore
   27168:	add	x9, x9, #0x1
   2716c:	cmp	x9, x11
   27170:	b.lt	26f0c <PyInit__decimal@@Base+0x20458>  // b.tstop
   27174:	ldrb	w8, [x19]
   27178:	str	xzr, [x19, #8]
   2717c:	sub	x10, x10, #0x8
   27180:	and	w9, w8, #0xf0
   27184:	strb	w9, [x19]
   27188:	ldr	x11, [x24, #24]
   2718c:	mov	x9, x11
   27190:	cmp	x11, #0x2
   27194:	b.lt	271a4 <PyInit__decimal@@Base+0x206f0>  // b.tstop
   27198:	ldr	x12, [x10, x9, lsl #3]
   2719c:	sub	x11, x9, #0x1
   271a0:	cbz	x12, 2718c <PyInit__decimal@@Base+0x206d8>
   271a4:	str	x9, [x19, #24]
   271a8:	ldr	x11, [x23, #1344]
   271ac:	ldr	x10, [x19, #32]
   271b0:	cmp	x11, x9
   271b4:	csel	x1, x9, x11, lt  // lt = tstop
   271b8:	cmp	x1, x10
   271bc:	b.eq	27238 <PyInit__decimal@@Base+0x20784>  // b.none
   271c0:	tbnz	w8, #5, 27224 <PyInit__decimal@@Base+0x20770>
   271c4:	mov	x0, x19
   271c8:	mov	x2, x21
   271cc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   271d0:	b	27238 <PyInit__decimal@@Base+0x20784>
   271d4:	ldrb	w8, [x19]
   271d8:	tbnz	w8, #5, 26afc <PyInit__decimal@@Base+0x20048>
   271dc:	ldr	x9, [x19, #32]
   271e0:	ldr	x1, [x23, #1344]
   271e4:	cmp	x9, x1
   271e8:	b.le	26afc <PyInit__decimal@@Base+0x20048>
   271ec:	strb	wzr, [sp, #8]
   271f0:	ldr	x0, [x19, #40]
   271f4:	add	x3, sp, #0x8
   271f8:	mov	w2, #0x8                   	// #8
   271fc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27200:	str	x0, [x19, #40]
   27204:	ldrb	w8, [sp, #8]
   27208:	cbnz	w8, 26af8 <PyInit__decimal@@Base+0x20044>
   2720c:	ldr	x8, [x23, #1344]
   27210:	b	26af4 <PyInit__decimal@@Base+0x20040>
   27214:	mov	w12, #0xe                   	// #14
   27218:	b	26d68 <PyInit__decimal@@Base+0x202b4>
   2721c:	mov	w12, #0x9                   	// #9
   27220:	b	26d68 <PyInit__decimal@@Base+0x202b4>
   27224:	cmp	x1, x10
   27228:	b.le	27238 <PyInit__decimal@@Base+0x20784>
   2722c:	mov	x0, x19
   27230:	mov	x2, x21
   27234:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   27238:	ldr	x9, [x19, #40]
   2723c:	ldr	x8, [x19, #24]
   27240:	add	x9, x9, x8, lsl #3
   27244:	ldur	x9, [x9, #-8]
   27248:	cmp	x25, x9
   2724c:	b.ls	27278 <PyInit__decimal@@Base+0x207c4>  // b.plast
   27250:	ldr	x10, [x22, #32]
   27254:	cmp	x10, x9
   27258:	b.ls	272a0 <PyInit__decimal@@Base+0x207ec>  // b.plast
   2725c:	ldr	x10, [x22, #16]
   27260:	cmp	x10, x9
   27264:	b.ls	272e4 <PyInit__decimal@@Base+0x20830>  // b.plast
   27268:	ldr	x10, [x22, #8]
   2726c:	cmp	x10, x9
   27270:	mov	w9, #0x1                   	// #1
   27274:	b	27348 <PyInit__decimal@@Base+0x20894>
   27278:	ldr	x10, [x22, #112]
   2727c:	cmp	x10, x9
   27280:	b.ls	272bc <PyInit__decimal@@Base+0x20808>  // b.plast
   27284:	ldr	x10, [x22, #88]
   27288:	cmp	x10, x9
   2728c:	b.ls	272f4 <PyInit__decimal@@Base+0x20840>  // b.plast
   27290:	ldr	x10, [x22, #80]
   27294:	cmp	x10, x9
   27298:	mov	w9, #0xa                   	// #10
   2729c:	b	27348 <PyInit__decimal@@Base+0x20894>
   272a0:	ldr	x10, [x22, #48]
   272a4:	cmp	x10, x9
   272a8:	b.ls	27310 <PyInit__decimal@@Base+0x2085c>  // b.plast
   272ac:	ldr	x10, [x22, #40]
   272b0:	cmp	x10, x9
   272b4:	mov	w9, #0x5                   	// #5
   272b8:	b	27348 <PyInit__decimal@@Base+0x20894>
   272bc:	ldr	x10, [x22, #144]
   272c0:	cmp	x10, x9
   272c4:	b.ls	2732c <PyInit__decimal@@Base+0x20878>  // b.plast
   272c8:	ldr	x10, [x22, #128]
   272cc:	cmp	x10, x9
   272d0:	b.ls	2733c <PyInit__decimal@@Base+0x20888>  // b.plast
   272d4:	ldr	x10, [x22, #120]
   272d8:	cmp	x10, x9
   272dc:	mov	w9, #0xf                   	// #15
   272e0:	b	27348 <PyInit__decimal@@Base+0x20894>
   272e4:	ldr	x10, [x22, #24]
   272e8:	cmp	x10, x9
   272ec:	mov	w9, #0x3                   	// #3
   272f0:	b	27348 <PyInit__decimal@@Base+0x20894>
   272f4:	ldr	x10, [x22, #104]
   272f8:	cmp	x10, x9
   272fc:	b.ls	27384 <PyInit__decimal@@Base+0x208d0>  // b.plast
   27300:	ldr	x10, [x22, #96]
   27304:	cmp	x10, x9
   27308:	mov	w9, #0xc                   	// #12
   2730c:	b	27348 <PyInit__decimal@@Base+0x20894>
   27310:	ldr	x10, [x22, #64]
   27314:	cmp	x10, x9
   27318:	b.ls	2738c <PyInit__decimal@@Base+0x208d8>  // b.plast
   2731c:	ldr	x10, [x22, #56]
   27320:	cmp	x10, x9
   27324:	mov	w9, #0x7                   	// #7
   27328:	b	27348 <PyInit__decimal@@Base+0x20894>
   2732c:	ldr	x10, [x22, #152]
   27330:	cmp	x10, x9
   27334:	mov	w9, #0x13                  	// #19
   27338:	b	27348 <PyInit__decimal@@Base+0x20894>
   2733c:	ldr	x10, [x22, #136]
   27340:	cmp	x10, x9
   27344:	mov	w9, #0x11                  	// #17
   27348:	cinc	x9, x9, ls  // ls = plast
   2734c:	mov	w10, #0x13                  	// #19
   27350:	madd	x8, x8, x10, x9
   27354:	sub	x8, x8, #0x13
   27358:	str	x8, [x19, #16]
   2735c:	mov	x0, x19
   27360:	mov	x1, x20
   27364:	ldp	x20, x19, [sp, #96]
   27368:	ldp	x22, x21, [sp, #80]
   2736c:	ldp	x24, x23, [sp, #64]
   27370:	ldp	x26, x25, [sp, #48]
   27374:	ldp	x28, x27, [sp, #32]
   27378:	ldp	x29, x30, [sp, #16]
   2737c:	add	sp, sp, #0x70
   27380:	b	27394 <PyInit__decimal@@Base+0x208e0>
   27384:	mov	w9, #0xe                   	// #14
   27388:	b	2734c <PyInit__decimal@@Base+0x20898>
   2738c:	mov	w9, #0x9                   	// #9
   27390:	b	2734c <PyInit__decimal@@Base+0x20898>
   27394:	sub	sp, sp, #0x40
   27398:	stp	x29, x30, [sp, #16]
   2739c:	stp	x22, x21, [sp, #32]
   273a0:	stp	x20, x19, [sp, #48]
   273a4:	add	x29, sp, #0x10
   273a8:	ldr	x20, [x0, #24]
   273ac:	mov	x19, x0
   273b0:	cmp	x20, #0x1
   273b4:	b.lt	275c8 <PyInit__decimal@@Base+0x20b14>  // b.tstop
   273b8:	ldr	x9, [x19, #16]
   273bc:	ldr	x8, [x1]
   273c0:	cmp	x9, x8
   273c4:	b.le	275c8 <PyInit__decimal@@Base+0x20b14>
   273c8:	mov	x9, #0x9436                	// #37942
   273cc:	movk	x9, #0x50d7, lsl #16
   273d0:	movk	x9, #0x435e, lsl #32
   273d4:	movk	x9, #0xd79, lsl #48
   273d8:	smulh	x9, x8, x9
   273dc:	mov	x10, #0xffffffffffffffed    	// #-19
   273e0:	add	x9, x9, x9, lsr #63
   273e4:	madd	x12, x9, x10, x8
   273e8:	cmp	x12, #0x0
   273ec:	cset	w10, ne  // ne = any
   273f0:	cinc	x8, x9, ne  // ne = any
   273f4:	cbz	x12, 27420 <PyInit__decimal@@Base+0x2096c>
   273f8:	ldr	x11, [x19, #40]
   273fc:	adrp	x13, 44000 <PyInit__decimal@@Base+0x3d54c>
   27400:	add	x13, x13, #0xca0
   27404:	ldr	x12, [x13, x12, lsl #3]
   27408:	add	x13, x11, x8, lsl #3
   2740c:	ldur	x14, [x13, #-8]
   27410:	udiv	x15, x14, x12
   27414:	msub	x12, x15, x12, x14
   27418:	stur	x12, [x13, #-8]
   2741c:	b	27424 <PyInit__decimal@@Base+0x20970>
   27420:	ldr	x11, [x19, #40]
   27424:	add	x9, x9, x10
   27428:	mov	w10, #0x13                  	// #19
   2742c:	mul	x9, x9, x10
   27430:	sub	x10, x9, #0x13
   27434:	sub	x9, x11, #0x8
   27438:	mov	x20, x8
   2743c:	cmp	x8, #0x2
   27440:	mov	x21, x10
   27444:	b.lt	27458 <PyInit__decimal@@Base+0x209a4>  // b.tstop
   27448:	ldr	x11, [x9, x20, lsl #3]
   2744c:	sub	x8, x20, #0x1
   27450:	sub	x10, x21, #0x13
   27454:	cbz	x11, 27438 <PyInit__decimal@@Base+0x20984>
   27458:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2745c:	ldr	x9, [x8, #1344]
   27460:	ldr	x8, [x19, #32]
   27464:	cmp	x9, x20
   27468:	csel	x1, x20, x9, lt  // lt = tstop
   2746c:	cmp	x1, x8
   27470:	b.eq	274a0 <PyInit__decimal@@Base+0x209ec>  // b.none
   27474:	ldrb	w9, [x19]
   27478:	tbnz	w9, #5, 2748c <PyInit__decimal@@Base+0x209d8>
   2747c:	add	x2, sp, #0x8
   27480:	mov	x0, x19
   27484:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   27488:	b	274a0 <PyInit__decimal@@Base+0x209ec>
   2748c:	cmp	x1, x8
   27490:	b.le	274a0 <PyInit__decimal@@Base+0x209ec>
   27494:	add	x2, sp, #0x8
   27498:	mov	x0, x19
   2749c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   274a0:	ldr	x8, [x19, #40]
   274a4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   274a8:	str	x20, [x19, #24]
   274ac:	add	x9, x9, #0xca0
   274b0:	add	x8, x8, x20, lsl #3
   274b4:	ldur	x8, [x8, #-8]
   274b8:	ldr	x10, [x9, #72]
   274bc:	cmp	x10, x8
   274c0:	b.ls	274ec <PyInit__decimal@@Base+0x20a38>  // b.plast
   274c4:	ldr	x10, [x9, #32]
   274c8:	cmp	x10, x8
   274cc:	b.ls	27514 <PyInit__decimal@@Base+0x20a60>  // b.plast
   274d0:	ldr	x10, [x9, #16]
   274d4:	cmp	x10, x8
   274d8:	b.ls	27558 <PyInit__decimal@@Base+0x20aa4>  // b.plast
   274dc:	ldr	x9, [x9, #8]
   274e0:	cmp	x9, x8
   274e4:	mov	w8, #0x1                   	// #1
   274e8:	b	275bc <PyInit__decimal@@Base+0x20b08>
   274ec:	ldr	x10, [x9, #112]
   274f0:	cmp	x10, x8
   274f4:	b.ls	27530 <PyInit__decimal@@Base+0x20a7c>  // b.plast
   274f8:	ldr	x10, [x9, #88]
   274fc:	cmp	x10, x8
   27500:	b.ls	27568 <PyInit__decimal@@Base+0x20ab4>  // b.plast
   27504:	ldr	x9, [x9, #80]
   27508:	cmp	x9, x8
   2750c:	mov	w8, #0xa                   	// #10
   27510:	b	275bc <PyInit__decimal@@Base+0x20b08>
   27514:	ldr	x10, [x9, #48]
   27518:	cmp	x10, x8
   2751c:	b.ls	27584 <PyInit__decimal@@Base+0x20ad0>  // b.plast
   27520:	ldr	x9, [x9, #40]
   27524:	cmp	x9, x8
   27528:	mov	w8, #0x5                   	// #5
   2752c:	b	275bc <PyInit__decimal@@Base+0x20b08>
   27530:	ldr	x10, [x9, #144]
   27534:	cmp	x10, x8
   27538:	b.ls	275a0 <PyInit__decimal@@Base+0x20aec>  // b.plast
   2753c:	ldr	x10, [x9, #128]
   27540:	cmp	x10, x8
   27544:	b.ls	275b0 <PyInit__decimal@@Base+0x20afc>  // b.plast
   27548:	ldr	x9, [x9, #120]
   2754c:	cmp	x9, x8
   27550:	mov	w8, #0xf                   	// #15
   27554:	b	275bc <PyInit__decimal@@Base+0x20b08>
   27558:	ldr	x9, [x9, #24]
   2755c:	cmp	x9, x8
   27560:	mov	w8, #0x3                   	// #3
   27564:	b	275bc <PyInit__decimal@@Base+0x20b08>
   27568:	ldr	x10, [x9, #104]
   2756c:	cmp	x10, x8
   27570:	b.ls	276f4 <PyInit__decimal@@Base+0x20c40>  // b.plast
   27574:	ldr	x9, [x9, #96]
   27578:	cmp	x9, x8
   2757c:	mov	w8, #0xc                   	// #12
   27580:	b	275bc <PyInit__decimal@@Base+0x20b08>
   27584:	ldr	x10, [x9, #64]
   27588:	cmp	x10, x8
   2758c:	b.ls	276fc <PyInit__decimal@@Base+0x20c48>  // b.plast
   27590:	ldr	x9, [x9, #56]
   27594:	cmp	x9, x8
   27598:	mov	w8, #0x7                   	// #7
   2759c:	b	275bc <PyInit__decimal@@Base+0x20b08>
   275a0:	ldr	x9, [x9, #152]
   275a4:	cmp	x9, x8
   275a8:	mov	w8, #0x13                  	// #19
   275ac:	b	275bc <PyInit__decimal@@Base+0x20b08>
   275b0:	ldr	x9, [x9, #136]
   275b4:	cmp	x9, x8
   275b8:	mov	w8, #0x11                  	// #17
   275bc:	cinc	x8, x8, ls  // ls = plast
   275c0:	add	x8, x8, x21
   275c4:	str	x8, [x19, #16]
   275c8:	ldrb	w8, [x19]
   275cc:	tst	w8, #0xe
   275d0:	b.ne	27770 <PyInit__decimal@@Base+0x20cbc>  // b.any
   275d4:	ldr	x0, [x19, #40]
   275d8:	add	x9, x0, x20, lsl #3
   275dc:	ldur	x9, [x9, #-8]
   275e0:	cbnz	x9, 27770 <PyInit__decimal@@Base+0x20cbc>
   275e4:	ldr	x21, [x19, #8]
   275e8:	and	w20, w8, #0x1
   275ec:	tbnz	w8, #5, 2762c <PyInit__decimal@@Base+0x20b78>
   275f0:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   275f4:	ldr	x9, [x19, #32]
   275f8:	ldr	x1, [x22, #1344]
   275fc:	cmp	x9, x1
   27600:	b.le	2762c <PyInit__decimal@@Base+0x20b78>
   27604:	sub	x3, x29, #0x4
   27608:	mov	w2, #0x8                   	// #8
   2760c:	sturb	wzr, [x29, #-4]
   27610:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27614:	str	x0, [x19, #40]
   27618:	ldurb	w8, [x29, #-4]
   2761c:	cbnz	w8, 27628 <PyInit__decimal@@Base+0x20b74>
   27620:	ldr	x8, [x22, #1344]
   27624:	str	x8, [x19, #32]
   27628:	ldrb	w8, [x19]
   2762c:	and	w8, w8, #0xf0
   27630:	mov	w10, #0x1                   	// #1
   27634:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   27638:	orr	w8, w8, w20
   2763c:	str	x21, [x19, #8]
   27640:	add	x9, x9, #0xca0
   27644:	strb	w8, [x19]
   27648:	stp	xzr, xzr, [x0]
   2764c:	str	x10, [x19, #24]
   27650:	ldr	x8, [x0]
   27654:	ldr	x10, [x9, #72]
   27658:	cmp	x10, x8
   2765c:	b.ls	27688 <PyInit__decimal@@Base+0x20bd4>  // b.plast
   27660:	ldr	x10, [x9, #32]
   27664:	cmp	x10, x8
   27668:	b.ls	276b0 <PyInit__decimal@@Base+0x20bfc>  // b.plast
   2766c:	ldr	x10, [x9, #16]
   27670:	cmp	x10, x8
   27674:	b.ls	27704 <PyInit__decimal@@Base+0x20c50>  // b.plast
   27678:	ldr	x9, [x9, #8]
   2767c:	cmp	x9, x8
   27680:	mov	w8, #0x1                   	// #1
   27684:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   27688:	ldr	x10, [x9, #112]
   2768c:	cmp	x10, x8
   27690:	b.ls	276cc <PyInit__decimal@@Base+0x20c18>  // b.plast
   27694:	ldr	x10, [x9, #88]
   27698:	cmp	x10, x8
   2769c:	b.ls	27714 <PyInit__decimal@@Base+0x20c60>  // b.plast
   276a0:	ldr	x9, [x9, #80]
   276a4:	cmp	x9, x8
   276a8:	mov	w8, #0xa                   	// #10
   276ac:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   276b0:	ldr	x10, [x9, #48]
   276b4:	cmp	x10, x8
   276b8:	b.ls	27730 <PyInit__decimal@@Base+0x20c7c>  // b.plast
   276bc:	ldr	x9, [x9, #40]
   276c0:	cmp	x9, x8
   276c4:	mov	w8, #0x5                   	// #5
   276c8:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   276cc:	ldr	x10, [x9, #144]
   276d0:	cmp	x10, x8
   276d4:	b.ls	2774c <PyInit__decimal@@Base+0x20c98>  // b.plast
   276d8:	ldr	x10, [x9, #128]
   276dc:	cmp	x10, x8
   276e0:	b.ls	2775c <PyInit__decimal@@Base+0x20ca8>  // b.plast
   276e4:	ldr	x9, [x9, #120]
   276e8:	cmp	x9, x8
   276ec:	mov	w8, #0xf                   	// #15
   276f0:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   276f4:	mov	w8, #0xe                   	// #14
   276f8:	b	275c0 <PyInit__decimal@@Base+0x20b0c>
   276fc:	mov	w8, #0x9                   	// #9
   27700:	b	275c0 <PyInit__decimal@@Base+0x20b0c>
   27704:	ldr	x9, [x9, #24]
   27708:	cmp	x9, x8
   2770c:	mov	w8, #0x3                   	// #3
   27710:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   27714:	ldr	x10, [x9, #104]
   27718:	cmp	x10, x8
   2771c:	b.ls	27784 <PyInit__decimal@@Base+0x20cd0>  // b.plast
   27720:	ldr	x9, [x9, #96]
   27724:	cmp	x9, x8
   27728:	mov	w8, #0xc                   	// #12
   2772c:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   27730:	ldr	x10, [x9, #64]
   27734:	cmp	x10, x8
   27738:	b.ls	2778c <PyInit__decimal@@Base+0x20cd8>  // b.plast
   2773c:	ldr	x9, [x9, #56]
   27740:	cmp	x9, x8
   27744:	mov	w8, #0x7                   	// #7
   27748:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   2774c:	ldr	x9, [x9, #152]
   27750:	cmp	x9, x8
   27754:	mov	w8, #0x13                  	// #19
   27758:	b	27768 <PyInit__decimal@@Base+0x20cb4>
   2775c:	ldr	x9, [x9, #136]
   27760:	cmp	x9, x8
   27764:	mov	w8, #0x11                  	// #17
   27768:	cinc	x8, x8, ls  // ls = plast
   2776c:	str	x8, [x19, #16]
   27770:	ldp	x20, x19, [sp, #48]
   27774:	ldp	x22, x21, [sp, #32]
   27778:	ldp	x29, x30, [sp, #16]
   2777c:	add	sp, sp, #0x40
   27780:	ret
   27784:	mov	w8, #0xe                   	// #14
   27788:	b	2776c <PyInit__decimal@@Base+0x20cb8>
   2778c:	mov	w8, #0x9                   	// #9
   27790:	b	2776c <PyInit__decimal@@Base+0x20cb8>
   27794:	ldrb	w8, [x0]
   27798:	tst	w8, #0xc
   2779c:	b.eq	277bc <PyInit__decimal@@Base+0x20d08>  // b.none
   277a0:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   277a4:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   277a8:	add	x9, x9, #0x2b7
   277ac:	add	x10, x10, #0x2b6
   277b0:	tst	w8, #0x4
   277b4:	csel	x0, x10, x9, eq  // eq = none
   277b8:	ret
   277bc:	tbnz	w8, #0, 277d0 <PyInit__decimal@@Base+0x20d1c>
   277c0:	tbz	w8, #1, 277e0 <PyInit__decimal@@Base+0x20d2c>
   277c4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   277c8:	add	x0, x0, #0xa0e
   277cc:	ret
   277d0:	tbz	w8, #1, 277f4 <PyInit__decimal@@Base+0x20d40>
   277d4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   277d8:	add	x0, x0, #0xa31
   277dc:	ret
   277e0:	tst	w8, #0xe
   277e4:	b.eq	27808 <PyInit__decimal@@Base+0x20d54>  // b.none
   277e8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   277ec:	add	x0, x0, #0xa26
   277f0:	ret
   277f4:	tst	w8, #0xe
   277f8:	b.eq	27840 <PyInit__decimal@@Base+0x20d8c>  // b.none
   277fc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   27800:	add	x0, x0, #0xa49
   27804:	ret
   27808:	ldr	x8, [x0, #40]
   2780c:	ldr	x9, [x0, #24]
   27810:	add	x8, x8, x9, lsl #3
   27814:	ldur	x8, [x8, #-8]
   27818:	cbz	x8, 27878 <PyInit__decimal@@Base+0x20dc4>
   2781c:	ldp	x8, x9, [x0, #8]
   27820:	ldr	x10, [x1, #16]
   27824:	add	x8, x8, x9
   27828:	sub	x8, x8, #0x1
   2782c:	cmp	x8, x10
   27830:	b.lt	277e8 <PyInit__decimal@@Base+0x20d34>  // b.tstop
   27834:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   27838:	add	x0, x0, #0xa1e
   2783c:	ret
   27840:	ldr	x8, [x0, #40]
   27844:	ldr	x9, [x0, #24]
   27848:	add	x8, x8, x9, lsl #3
   2784c:	ldur	x8, [x8, #-8]
   27850:	cbz	x8, 27884 <PyInit__decimal@@Base+0x20dd0>
   27854:	ldp	x8, x9, [x0, #8]
   27858:	ldr	x10, [x1, #16]
   2785c:	add	x8, x8, x9
   27860:	sub	x8, x8, #0x1
   27864:	cmp	x8, x10
   27868:	b.lt	277fc <PyInit__decimal@@Base+0x20d48>  // b.tstop
   2786c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   27870:	add	x0, x0, #0xa41
   27874:	ret
   27878:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   2787c:	add	x0, x0, #0xa18
   27880:	ret
   27884:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   27888:	add	x0, x0, #0xa3b
   2788c:	ret
   27890:	stp	x29, x30, [sp, #-80]!
   27894:	str	x25, [sp, #16]
   27898:	stp	x24, x23, [sp, #32]
   2789c:	stp	x22, x21, [sp, #48]
   278a0:	stp	x20, x19, [sp, #64]
   278a4:	mov	x29, sp
   278a8:	ldrb	w8, [x1]
   278ac:	mov	x21, x3
   278b0:	mov	x19, x0
   278b4:	tst	w8, #0xf
   278b8:	b.ne	278c8 <PyInit__decimal@@Base+0x20e14>  // b.any
   278bc:	ldr	x8, [x1, #8]
   278c0:	mov	x22, x1
   278c4:	cbz	x8, 27948 <PyInit__decimal@@Base+0x20e94>
   278c8:	ldrb	w8, [x19]
   278cc:	tbnz	w8, #5, 27910 <PyInit__decimal@@Base+0x20e5c>
   278d0:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   278d4:	ldr	x9, [x19, #32]
   278d8:	ldr	x1, [x20, #1344]
   278dc:	cmp	x9, x1
   278e0:	b.le	27910 <PyInit__decimal@@Base+0x20e5c>
   278e4:	strb	wzr, [x29, #28]
   278e8:	ldr	x0, [x19, #40]
   278ec:	add	x3, x29, #0x1c
   278f0:	mov	w2, #0x8                   	// #8
   278f4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   278f8:	str	x0, [x19, #40]
   278fc:	ldrb	w8, [x29, #28]
   27900:	cbnz	w8, 2790c <PyInit__decimal@@Base+0x20e58>
   27904:	ldr	x8, [x20, #1344]
   27908:	str	x8, [x19, #32]
   2790c:	ldrb	w8, [x19]
   27910:	and	w8, w8, #0xf0
   27914:	orr	w8, w8, #0x4
   27918:	stp	xzr, xzr, [x19, #16]
   2791c:	strb	w8, [x19]
   27920:	str	xzr, [x19, #8]
   27924:	ldr	w8, [x21]
   27928:	orr	w8, w8, #0x100
   2792c:	str	w8, [x21]
   27930:	ldp	x20, x19, [sp, #64]
   27934:	ldp	x22, x21, [sp, #48]
   27938:	ldp	x24, x23, [sp, #32]
   2793c:	ldr	x25, [sp, #16]
   27940:	ldp	x29, x30, [sp], #80
   27944:	ret
   27948:	ldr	x8, [x22, #16]
   2794c:	ldr	x9, [x2]
   27950:	mov	x10, #0x9436                	// #37942
   27954:	movk	x10, #0x50d7, lsl #16
   27958:	movk	x10, #0x435e, lsl #32
   2795c:	cmp	x8, x9
   27960:	movk	x10, #0xd79, lsl #48
   27964:	csel	x8, x9, x8, lt  // lt = tstop
   27968:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   2796c:	smulh	x10, x8, x10
   27970:	mov	x11, #0xffffffffffffffed    	// #-19
   27974:	ldr	x9, [x24, #1344]
   27978:	add	x10, x10, x10, lsr #63
   2797c:	mul	x11, x10, x11
   27980:	cmn	x11, x8
   27984:	ldr	x8, [x19, #32]
   27988:	cinc	x25, x10, ne  // ne = any
   2798c:	cmp	x9, x25
   27990:	csel	x1, x25, x9, lt  // lt = tstop
   27994:	mov	x20, x2
   27998:	cmp	x1, x8
   2799c:	b.eq	279d4 <PyInit__decimal@@Base+0x20f20>  // b.none
   279a0:	ldrb	w9, [x19]
   279a4:	tbnz	w9, #5, 279bc <PyInit__decimal@@Base+0x20f08>
   279a8:	mov	x0, x19
   279ac:	mov	x2, x21
   279b0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   279b4:	cbnz	w0, 279d4 <PyInit__decimal@@Base+0x20f20>
   279b8:	b	27930 <PyInit__decimal@@Base+0x20e7c>
   279bc:	cmp	x1, x8
   279c0:	b.le	279d4 <PyInit__decimal@@Base+0x20f20>
   279c4:	mov	x0, x19
   279c8:	mov	x2, x21
   279cc:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   279d0:	cbz	w0, 27930 <PyInit__decimal@@Base+0x20e7c>
   279d4:	adrp	x23, 44000 <PyInit__decimal@@Base+0x3d54c>
   279d8:	cmp	x25, #0x0
   279dc:	add	x23, x23, #0xca0
   279e0:	b.le	27aac <PyInit__decimal@@Base+0x20ff8>
   279e4:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   279e8:	mov	x8, xzr
   279ec:	movk	x9, #0xcccd
   279f0:	mov	w10, #0xa                   	// #10
   279f4:	ldr	x11, [x22, #24]
   279f8:	cmp	x8, x11
   279fc:	b.ge	27a0c <PyInit__decimal@@Base+0x20f58>  // b.tcont
   27a00:	ldr	x11, [x22, #40]
   27a04:	ldr	x14, [x11, x8, lsl #3]
   27a08:	b	27a10 <PyInit__decimal@@Base+0x20f5c>
   27a0c:	mov	x14, xzr
   27a10:	mov	x12, xzr
   27a14:	mov	x11, xzr
   27a18:	b	27a34 <PyInit__decimal@@Base+0x20f80>
   27a1c:	ldr	x14, [x23, x12]
   27a20:	add	x12, x12, #0x8
   27a24:	cmp	x12, #0x98
   27a28:	add	x11, x14, x11
   27a2c:	mov	x14, x13
   27a30:	b.eq	27a54 <PyInit__decimal@@Base+0x20fa0>  // b.none
   27a34:	umulh	x13, x14, x9
   27a38:	lsr	x13, x13, #3
   27a3c:	msub	x14, x13, x10, x14
   27a40:	cmp	x14, #0x1
   27a44:	b.hi	27a6c <PyInit__decimal@@Base+0x20fb8>  // b.pmore
   27a48:	cbz	x14, 27a1c <PyInit__decimal@@Base+0x20f68>
   27a4c:	mov	x14, xzr
   27a50:	b	27a20 <PyInit__decimal@@Base+0x20f6c>
   27a54:	ldr	x12, [x19, #40]
   27a58:	str	x11, [x12, x8, lsl #3]
   27a5c:	add	x8, x8, #0x1
   27a60:	cmp	x8, x25
   27a64:	b.ne	279f4 <PyInit__decimal@@Base+0x20f40>  // b.any
   27a68:	b	27ab0 <PyInit__decimal@@Base+0x20ffc>
   27a6c:	ldrb	w8, [x19]
   27a70:	tbnz	w8, #5, 27910 <PyInit__decimal@@Base+0x20e5c>
   27a74:	ldr	x9, [x19, #32]
   27a78:	ldr	x1, [x24, #1344]
   27a7c:	cmp	x9, x1
   27a80:	b.le	27910 <PyInit__decimal@@Base+0x20e5c>
   27a84:	strb	wzr, [x29, #24]
   27a88:	ldr	x0, [x19, #40]
   27a8c:	add	x3, x29, #0x18
   27a90:	mov	w2, #0x8                   	// #8
   27a94:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27a98:	str	x0, [x19, #40]
   27a9c:	ldrb	w8, [x29, #24]
   27aa0:	cbnz	w8, 2790c <PyInit__decimal@@Base+0x20e58>
   27aa4:	ldr	x8, [x24, #1344]
   27aa8:	b	27908 <PyInit__decimal@@Base+0x20e54>
   27aac:	ldr	x12, [x19, #40]
   27ab0:	ldrb	w8, [x19]
   27ab4:	sub	x10, x12, #0x8
   27ab8:	str	xzr, [x19, #8]
   27abc:	and	w9, w8, #0xf0
   27ac0:	strb	w9, [x19]
   27ac4:	mov	x9, x25
   27ac8:	cmp	x25, #0x2
   27acc:	b.lt	27adc <PyInit__decimal@@Base+0x21028>  // b.tstop
   27ad0:	ldr	x11, [x10, x9, lsl #3]
   27ad4:	sub	x25, x9, #0x1
   27ad8:	cbz	x11, 27ac4 <PyInit__decimal@@Base+0x21010>
   27adc:	str	x9, [x19, #24]
   27ae0:	ldr	x11, [x24, #1344]
   27ae4:	ldr	x10, [x19, #32]
   27ae8:	cmp	x11, x9
   27aec:	csel	x1, x9, x11, lt  // lt = tstop
   27af0:	cmp	x1, x10
   27af4:	b.eq	27b20 <PyInit__decimal@@Base+0x2106c>  // b.none
   27af8:	tbnz	w8, #5, 27b0c <PyInit__decimal@@Base+0x21058>
   27afc:	mov	x0, x19
   27b00:	mov	x2, x21
   27b04:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   27b08:	b	27b20 <PyInit__decimal@@Base+0x2106c>
   27b0c:	cmp	x1, x10
   27b10:	b.le	27b20 <PyInit__decimal@@Base+0x2106c>
   27b14:	mov	x0, x19
   27b18:	mov	x2, x21
   27b1c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   27b20:	ldr	x9, [x19, #40]
   27b24:	ldr	x8, [x19, #24]
   27b28:	ldr	x10, [x23, #72]
   27b2c:	add	x9, x9, x8, lsl #3
   27b30:	ldur	x9, [x9, #-8]
   27b34:	cmp	x10, x9
   27b38:	b.ls	27b64 <PyInit__decimal@@Base+0x210b0>  // b.plast
   27b3c:	ldr	x10, [x23, #32]
   27b40:	cmp	x10, x9
   27b44:	b.ls	27b8c <PyInit__decimal@@Base+0x210d8>  // b.plast
   27b48:	ldr	x10, [x23, #16]
   27b4c:	cmp	x10, x9
   27b50:	b.ls	27bd0 <PyInit__decimal@@Base+0x2111c>  // b.plast
   27b54:	ldr	x10, [x23, #8]
   27b58:	cmp	x10, x9
   27b5c:	mov	w9, #0x1                   	// #1
   27b60:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27b64:	ldr	x10, [x23, #112]
   27b68:	cmp	x10, x9
   27b6c:	b.ls	27ba8 <PyInit__decimal@@Base+0x210f4>  // b.plast
   27b70:	ldr	x10, [x23, #88]
   27b74:	cmp	x10, x9
   27b78:	b.ls	27be0 <PyInit__decimal@@Base+0x2112c>  // b.plast
   27b7c:	ldr	x10, [x23, #80]
   27b80:	cmp	x10, x9
   27b84:	mov	w9, #0xa                   	// #10
   27b88:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27b8c:	ldr	x10, [x23, #48]
   27b90:	cmp	x10, x9
   27b94:	b.ls	27bfc <PyInit__decimal@@Base+0x21148>  // b.plast
   27b98:	ldr	x10, [x23, #40]
   27b9c:	cmp	x10, x9
   27ba0:	mov	w9, #0x5                   	// #5
   27ba4:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27ba8:	ldr	x10, [x23, #144]
   27bac:	cmp	x10, x9
   27bb0:	b.ls	27c18 <PyInit__decimal@@Base+0x21164>  // b.plast
   27bb4:	ldr	x10, [x23, #128]
   27bb8:	cmp	x10, x9
   27bbc:	b.ls	27c28 <PyInit__decimal@@Base+0x21174>  // b.plast
   27bc0:	ldr	x10, [x23, #120]
   27bc4:	cmp	x10, x9
   27bc8:	mov	w9, #0xf                   	// #15
   27bcc:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27bd0:	ldr	x10, [x23, #24]
   27bd4:	cmp	x10, x9
   27bd8:	mov	w9, #0x3                   	// #3
   27bdc:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27be0:	ldr	x10, [x23, #104]
   27be4:	cmp	x10, x9
   27be8:	b.ls	27c68 <PyInit__decimal@@Base+0x211b4>  // b.plast
   27bec:	ldr	x10, [x23, #96]
   27bf0:	cmp	x10, x9
   27bf4:	mov	w9, #0xc                   	// #12
   27bf8:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27bfc:	ldr	x10, [x23, #64]
   27c00:	cmp	x10, x9
   27c04:	b.ls	27c70 <PyInit__decimal@@Base+0x211bc>  // b.plast
   27c08:	ldr	x10, [x23, #56]
   27c0c:	cmp	x10, x9
   27c10:	mov	w9, #0x7                   	// #7
   27c14:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27c18:	ldr	x10, [x23, #152]
   27c1c:	cmp	x10, x9
   27c20:	mov	w9, #0x13                  	// #19
   27c24:	b	27c34 <PyInit__decimal@@Base+0x21180>
   27c28:	ldr	x10, [x23, #136]
   27c2c:	cmp	x10, x9
   27c30:	mov	w9, #0x11                  	// #17
   27c34:	cinc	x9, x9, ls  // ls = plast
   27c38:	mov	w10, #0x13                  	// #19
   27c3c:	madd	x8, x8, x10, x9
   27c40:	sub	x8, x8, #0x13
   27c44:	str	x8, [x19, #16]
   27c48:	mov	x0, x19
   27c4c:	mov	x1, x20
   27c50:	ldp	x20, x19, [sp, #64]
   27c54:	ldp	x22, x21, [sp, #48]
   27c58:	ldp	x24, x23, [sp, #32]
   27c5c:	ldr	x25, [sp, #16]
   27c60:	ldp	x29, x30, [sp], #80
   27c64:	b	27394 <PyInit__decimal@@Base+0x208e0>
   27c68:	mov	w9, #0xe                   	// #14
   27c6c:	b	27c38 <PyInit__decimal@@Base+0x21184>
   27c70:	mov	w9, #0x9                   	// #9
   27c74:	b	27c38 <PyInit__decimal@@Base+0x21184>
   27c78:	sub	sp, sp, #0x50
   27c7c:	stp	x29, x30, [sp, #16]
   27c80:	str	x23, [sp, #32]
   27c84:	stp	x22, x21, [sp, #48]
   27c88:	stp	x20, x19, [sp, #64]
   27c8c:	add	x29, sp, #0x10
   27c90:	ldrb	w8, [x1]
   27c94:	mov	x20, x3
   27c98:	mov	x21, x2
   27c9c:	mov	x19, x0
   27ca0:	tst	w8, #0xe
   27ca4:	b.eq	27d1c <PyInit__decimal@@Base+0x21268>  // b.none
   27ca8:	mov	x0, x19
   27cac:	mov	x2, x21
   27cb0:	mov	x3, x20
   27cb4:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   27cb8:	cbnz	w0, 27e14 <PyInit__decimal@@Base+0x21360>
   27cbc:	ldrb	w8, [x19]
   27cc0:	tbnz	w8, #5, 27d04 <PyInit__decimal@@Base+0x21250>
   27cc4:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   27cc8:	ldr	x9, [x19, #32]
   27ccc:	ldr	x1, [x20, #1344]
   27cd0:	cmp	x9, x1
   27cd4:	b.le	27d04 <PyInit__decimal@@Base+0x21250>
   27cd8:	strb	wzr, [x29, #24]
   27cdc:	ldr	x0, [x19, #40]
   27ce0:	add	x3, x29, #0x18
   27ce4:	mov	w2, #0x8                   	// #8
   27ce8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27cec:	str	x0, [x19, #40]
   27cf0:	ldrb	w8, [x29, #24]
   27cf4:	cbnz	w8, 27d00 <PyInit__decimal@@Base+0x2124c>
   27cf8:	ldr	x8, [x20, #1344]
   27cfc:	str	x8, [x19, #32]
   27d00:	ldrb	w8, [x19]
   27d04:	and	w8, w8, #0xf0
   27d08:	orr	w8, w8, #0x2
   27d0c:	stp	xzr, xzr, [x19, #16]
   27d10:	strb	w8, [x19]
   27d14:	str	xzr, [x19, #8]
   27d18:	b	27e14 <PyInit__decimal@@Base+0x21360>
   27d1c:	ldr	x8, [x1, #40]
   27d20:	ldr	x9, [x1, #24]
   27d24:	add	x8, x8, x9, lsl #3
   27d28:	ldur	x8, [x8, #-8]
   27d2c:	cbz	x8, 27dac <PyInit__decimal@@Base+0x212f8>
   27d30:	ldp	x8, x9, [x1, #8]
   27d34:	ldrb	w10, [x19]
   27d38:	add	x8, x8, x9
   27d3c:	sub	x22, x8, #0x1
   27d40:	tbnz	w10, #5, 27d80 <PyInit__decimal@@Base+0x212cc>
   27d44:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   27d48:	ldr	x8, [x19, #32]
   27d4c:	ldr	x1, [x23, #1344]
   27d50:	cmp	x8, x1
   27d54:	b.le	27d80 <PyInit__decimal@@Base+0x212cc>
   27d58:	sturb	wzr, [x29, #-4]
   27d5c:	ldr	x0, [x19, #40]
   27d60:	sub	x3, x29, #0x4
   27d64:	mov	w2, #0x8                   	// #8
   27d68:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27d6c:	str	x0, [x19, #40]
   27d70:	ldurb	w8, [x29, #-4]
   27d74:	cbnz	w8, 27d80 <PyInit__decimal@@Base+0x212cc>
   27d78:	ldr	x8, [x23, #1344]
   27d7c:	str	x8, [x19, #32]
   27d80:	cmp	x22, #0x0
   27d84:	cneg	x2, x22, mi  // mi = first
   27d88:	lsr	x1, x22, #63
   27d8c:	mov	x0, x19
   27d90:	mov	x3, xzr
   27d94:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   27d98:	mov	x0, x19
   27d9c:	mov	x1, x21
   27da0:	mov	x2, x20
   27da4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   27da8:	b	27e14 <PyInit__decimal@@Base+0x21360>
   27dac:	ldrb	w8, [x19]
   27db0:	tbnz	w8, #5, 27df4 <PyInit__decimal@@Base+0x21340>
   27db4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   27db8:	ldr	x9, [x19, #32]
   27dbc:	ldr	x1, [x21, #1344]
   27dc0:	cmp	x9, x1
   27dc4:	b.le	27df4 <PyInit__decimal@@Base+0x21340>
   27dc8:	strb	wzr, [x29, #28]
   27dcc:	ldr	x0, [x19, #40]
   27dd0:	add	x3, x29, #0x1c
   27dd4:	mov	w2, #0x8                   	// #8
   27dd8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27ddc:	str	x0, [x19, #40]
   27de0:	ldrb	w8, [x29, #28]
   27de4:	cbnz	w8, 27df0 <PyInit__decimal@@Base+0x2133c>
   27de8:	ldr	x8, [x21, #1344]
   27dec:	str	x8, [x19, #32]
   27df0:	ldrb	w8, [x19]
   27df4:	and	w8, w8, #0xf0
   27df8:	orr	w8, w8, #0x3
   27dfc:	stp	xzr, xzr, [x19, #16]
   27e00:	strb	w8, [x19]
   27e04:	str	xzr, [x19, #8]
   27e08:	ldr	w8, [x20]
   27e0c:	orr	w8, w8, #0x4
   27e10:	str	w8, [x20]
   27e14:	ldp	x20, x19, [sp, #64]
   27e18:	ldp	x22, x21, [sp, #48]
   27e1c:	ldr	x23, [sp, #32]
   27e20:	ldp	x29, x30, [sp, #16]
   27e24:	add	sp, sp, #0x50
   27e28:	ret
   27e2c:	sub	sp, sp, #0x70
   27e30:	stp	x29, x30, [sp, #16]
   27e34:	stp	x28, x27, [sp, #32]
   27e38:	stp	x26, x25, [sp, #48]
   27e3c:	stp	x24, x23, [sp, #64]
   27e40:	stp	x22, x21, [sp, #80]
   27e44:	stp	x20, x19, [sp, #96]
   27e48:	add	x29, sp, #0x10
   27e4c:	ldrb	w8, [x1]
   27e50:	mov	x21, x4
   27e54:	mov	x19, x0
   27e58:	tst	w8, #0xe
   27e5c:	b.ne	27e88 <PyInit__decimal@@Base+0x213d4>  // b.any
   27e60:	ldrb	w9, [x2]
   27e64:	and	w10, w9, #0xe
   27e68:	bfxil	w10, w8, #0, #1
   27e6c:	and	w8, w9, #0x1
   27e70:	orr	w8, w8, w10
   27e74:	cbnz	w8, 27e88 <PyInit__decimal@@Base+0x213d4>
   27e78:	ldr	x8, [x1, #8]
   27e7c:	cbnz	x8, 27e88 <PyInit__decimal@@Base+0x213d4>
   27e80:	ldr	x8, [x2, #8]
   27e84:	cbz	x8, 27f10 <PyInit__decimal@@Base+0x2145c>
   27e88:	ldrb	w8, [x19]
   27e8c:	tbnz	w8, #5, 27ed0 <PyInit__decimal@@Base+0x2141c>
   27e90:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   27e94:	ldr	x9, [x19, #32]
   27e98:	ldr	x1, [x20, #1344]
   27e9c:	cmp	x9, x1
   27ea0:	b.le	27ed0 <PyInit__decimal@@Base+0x2141c>
   27ea4:	sturb	wzr, [x29, #-4]
   27ea8:	ldr	x0, [x19, #40]
   27eac:	sub	x3, x29, #0x4
   27eb0:	mov	w2, #0x8                   	// #8
   27eb4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   27eb8:	str	x0, [x19, #40]
   27ebc:	ldurb	w8, [x29, #-4]
   27ec0:	cbnz	w8, 27ecc <PyInit__decimal@@Base+0x21418>
   27ec4:	ldr	x8, [x20, #1344]
   27ec8:	str	x8, [x19, #32]
   27ecc:	ldrb	w8, [x19]
   27ed0:	and	w8, w8, #0xf0
   27ed4:	orr	w8, w8, #0x4
   27ed8:	stp	xzr, xzr, [x19, #16]
   27edc:	strb	w8, [x19]
   27ee0:	str	xzr, [x19, #8]
   27ee4:	ldr	w8, [x21]
   27ee8:	orr	w8, w8, #0x100
   27eec:	str	w8, [x21]
   27ef0:	ldp	x20, x19, [sp, #96]
   27ef4:	ldp	x22, x21, [sp, #80]
   27ef8:	ldp	x24, x23, [sp, #64]
   27efc:	ldp	x26, x25, [sp, #48]
   27f00:	ldp	x28, x27, [sp, #32]
   27f04:	ldp	x29, x30, [sp, #16]
   27f08:	add	sp, sp, #0x70
   27f0c:	ret
   27f10:	ldr	x8, [x2, #16]
   27f14:	ldr	x9, [x1, #16]
   27f18:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   27f1c:	ldr	x10, [x23, #1344]
   27f20:	mov	x20, x3
   27f24:	cmp	x8, x9
   27f28:	csel	x24, x2, x1, gt
   27f2c:	ldr	x9, [x24, #24]
   27f30:	ldr	x8, [x19, #32]
   27f34:	csel	x25, x1, x2, gt
   27f38:	cmp	x10, x9
   27f3c:	csel	x1, x9, x10, lt  // lt = tstop
   27f40:	cmp	x1, x8
   27f44:	b.eq	27f78 <PyInit__decimal@@Base+0x214c4>  // b.none
   27f48:	ldrb	w9, [x19]
   27f4c:	tbnz	w9, #5, 27f60 <PyInit__decimal@@Base+0x214ac>
   27f50:	mov	x0, x19
   27f54:	mov	x2, x21
   27f58:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   27f5c:	b	27f74 <PyInit__decimal@@Base+0x214c0>
   27f60:	cmp	x1, x8
   27f64:	b.le	27f78 <PyInit__decimal@@Base+0x214c4>
   27f68:	mov	x0, x19
   27f6c:	mov	x2, x21
   27f70:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   27f74:	cbz	w0, 27ef0 <PyInit__decimal@@Base+0x2143c>
   27f78:	ldr	x12, [x25, #40]
   27f7c:	ldr	x8, [x24, #40]
   27f80:	ldr	x9, [x25, #24]
   27f84:	adrp	x22, 44000 <PyInit__decimal@@Base+0x3d54c>
   27f88:	ldr	x11, [x12]
   27f8c:	ldr	x10, [x8]
   27f90:	sub	x9, x9, #0x1
   27f94:	cmp	x9, #0x1
   27f98:	add	x22, x22, #0xca0
   27f9c:	mov	x9, xzr
   27fa0:	b.lt	2802c <PyInit__decimal@@Base+0x21578>  // b.tstop
   27fa4:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   27fa8:	movk	x13, #0xcccd
   27fac:	mov	w14, #0xa                   	// #10
   27fb0:	mov	x16, xzr
   27fb4:	mov	x15, xzr
   27fb8:	b	27fd4 <PyInit__decimal@@Base+0x21520>
   27fbc:	add	x16, x16, #0x8
   27fc0:	cmp	x16, #0x98
   27fc4:	add	x15, x10, x15
   27fc8:	mov	x10, x18
   27fcc:	mov	x11, x17
   27fd0:	b.eq	28004 <PyInit__decimal@@Base+0x21550>  // b.none
   27fd4:	umulh	x17, x11, x13
   27fd8:	umulh	x18, x10, x13
   27fdc:	lsr	x17, x17, #3
   27fe0:	lsr	x18, x18, #3
   27fe4:	msub	x11, x17, x14, x11
   27fe8:	msub	x10, x18, x14, x10
   27fec:	orr	x10, x10, x11
   27ff0:	tst	x10, #0xe
   27ff4:	b.ne	285a0 <PyInit__decimal@@Base+0x21aec>  // b.any
   27ff8:	cbz	x10, 27fbc <PyInit__decimal@@Base+0x21508>
   27ffc:	ldr	x10, [x22, x16]
   28000:	b	27fbc <PyInit__decimal@@Base+0x21508>
   28004:	ldr	x10, [x19, #40]
   28008:	str	x15, [x10, x9, lsl #3]
   2800c:	add	x9, x9, #0x1
   28010:	ldr	x15, [x25, #24]
   28014:	lsl	x10, x9, #3
   28018:	ldr	x11, [x12, x10]
   2801c:	ldr	x10, [x8, x10]
   28020:	sub	x15, x15, #0x1
   28024:	cmp	x9, x15
   28028:	b.lt	27fb0 <PyInit__decimal@@Base+0x214fc>  // b.tstop
   2802c:	ldr	x25, [x22, #72]
   28030:	cmp	x25, x11
   28034:	b.ls	28060 <PyInit__decimal@@Base+0x215ac>  // b.plast
   28038:	ldr	x12, [x22, #32]
   2803c:	cmp	x12, x11
   28040:	b.ls	28088 <PyInit__decimal@@Base+0x215d4>  // b.plast
   28044:	ldr	x12, [x22, #16]
   28048:	cmp	x12, x11
   2804c:	b.ls	280cc <PyInit__decimal@@Base+0x21618>  // b.plast
   28050:	ldr	x12, [x22, #8]
   28054:	cmp	x12, x11
   28058:	mov	w12, #0x1                   	// #1
   2805c:	b	28130 <PyInit__decimal@@Base+0x2167c>
   28060:	ldr	x12, [x22, #112]
   28064:	cmp	x12, x11
   28068:	b.ls	280a4 <PyInit__decimal@@Base+0x215f0>  // b.plast
   2806c:	ldr	x12, [x22, #88]
   28070:	cmp	x12, x11
   28074:	b.ls	280dc <PyInit__decimal@@Base+0x21628>  // b.plast
   28078:	ldr	x12, [x22, #80]
   2807c:	cmp	x12, x11
   28080:	mov	w12, #0xa                   	// #10
   28084:	b	28130 <PyInit__decimal@@Base+0x2167c>
   28088:	ldr	x12, [x22, #48]
   2808c:	cmp	x12, x11
   28090:	b.ls	280f8 <PyInit__decimal@@Base+0x21644>  // b.plast
   28094:	ldr	x12, [x22, #40]
   28098:	cmp	x12, x11
   2809c:	mov	w12, #0x5                   	// #5
   280a0:	b	28130 <PyInit__decimal@@Base+0x2167c>
   280a4:	ldr	x12, [x22, #144]
   280a8:	cmp	x12, x11
   280ac:	b.ls	28114 <PyInit__decimal@@Base+0x21660>  // b.plast
   280b0:	ldr	x12, [x22, #128]
   280b4:	cmp	x12, x11
   280b8:	b.ls	28124 <PyInit__decimal@@Base+0x21670>  // b.plast
   280bc:	ldr	x12, [x22, #120]
   280c0:	cmp	x12, x11
   280c4:	mov	w12, #0xf                   	// #15
   280c8:	b	28130 <PyInit__decimal@@Base+0x2167c>
   280cc:	ldr	x12, [x22, #24]
   280d0:	cmp	x12, x11
   280d4:	mov	w12, #0x3                   	// #3
   280d8:	b	28130 <PyInit__decimal@@Base+0x2167c>
   280dc:	ldr	x12, [x22, #104]
   280e0:	cmp	x12, x11
   280e4:	b.ls	285e0 <PyInit__decimal@@Base+0x21b2c>  // b.plast
   280e8:	ldr	x12, [x22, #96]
   280ec:	cmp	x12, x11
   280f0:	mov	w12, #0xc                   	// #12
   280f4:	b	28130 <PyInit__decimal@@Base+0x2167c>
   280f8:	ldr	x12, [x22, #64]
   280fc:	cmp	x12, x11
   28100:	b.ls	285e8 <PyInit__decimal@@Base+0x21b34>  // b.plast
   28104:	ldr	x12, [x22, #56]
   28108:	cmp	x12, x11
   2810c:	mov	w12, #0x7                   	// #7
   28110:	b	28130 <PyInit__decimal@@Base+0x2167c>
   28114:	ldr	x12, [x22, #152]
   28118:	cmp	x12, x11
   2811c:	mov	w12, #0x13                  	// #19
   28120:	b	28130 <PyInit__decimal@@Base+0x2167c>
   28124:	ldr	x12, [x22, #136]
   28128:	cmp	x12, x11
   2812c:	mov	w12, #0x11                  	// #17
   28130:	cinc	x13, x12, ls  // ls = plast
   28134:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   28138:	mov	x14, xzr
   2813c:	mov	x12, xzr
   28140:	movk	x15, #0xcccd
   28144:	mov	w16, #0xa                   	// #10
   28148:	b	28160 <PyInit__decimal@@Base+0x216ac>
   2814c:	add	x14, x14, #0x1
   28150:	cmp	x14, x13
   28154:	add	x12, x11, x12
   28158:	mov	x11, x17
   2815c:	b.cs	28194 <PyInit__decimal@@Base+0x216e0>  // b.hs, b.nlast
   28160:	mov	x18, x10
   28164:	umulh	x10, x11, x15
   28168:	umulh	x0, x18, x15
   2816c:	lsr	x17, x10, #3
   28170:	lsr	x10, x0, #3
   28174:	msub	x11, x17, x16, x11
   28178:	msub	x18, x10, x16, x18
   2817c:	orr	x11, x18, x11
   28180:	tst	x11, #0xe
   28184:	b.ne	285a0 <PyInit__decimal@@Base+0x21aec>  // b.any
   28188:	cbz	x11, 2814c <PyInit__decimal@@Base+0x21698>
   2818c:	ldr	x11, [x22, x14, lsl #3]
   28190:	b	2814c <PyInit__decimal@@Base+0x21698>
   28194:	sub	w11, w14, #0x1
   28198:	cmp	w11, #0x11
   2819c:	b.hi	281d8 <PyInit__decimal@@Base+0x21724>  // b.pmore
   281a0:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   281a4:	movk	x11, #0xcccd
   281a8:	mov	w13, #0xa                   	// #10
   281ac:	umulh	x15, x10, x11
   281b0:	lsr	x15, x15, #3
   281b4:	msub	x10, x15, x13, x10
   281b8:	cmp	x10, #0x1
   281bc:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   281c0:	ldr	x16, [x22, x14, lsl #3]
   281c4:	cmp	x14, #0x12
   281c8:	add	x14, x14, #0x1
   281cc:	madd	x12, x16, x10, x12
   281d0:	mov	x10, x15
   281d4:	b.cc	281ac <PyInit__decimal@@Base+0x216f8>  // b.lo, b.ul, b.last
   281d8:	ldr	x10, [x19, #40]
   281dc:	str	x12, [x10, x9, lsl #3]
   281e0:	ldr	x30, [x24, #24]
   281e4:	add	x9, x9, #0x1
   281e8:	cmp	x9, x30
   281ec:	b.ge	28544 <PyInit__decimal@@Base+0x21a90>  // b.tcont
   281f0:	mov	x13, #0xf5c3                	// #62915
   281f4:	mov	x14, #0xf7cf                	// #63439
   281f8:	mov	x15, #0x594b                	// #22859
   281fc:	mov	x16, #0x7843                	// #30787
   28200:	mov	x17, #0x34db                	// #13531
   28204:	mov	x18, #0x42bd                	// #17085
   28208:	mov	x0, #0xcefd                	// #52989
   2820c:	mov	x1, #0x5a53                	// #23123
   28210:	mov	x2, #0xd5bf                	// #54719
   28214:	mov	x4, #0xaaff                	// #43775
   28218:	mov	x5, #0x2233                	// #8755
   2821c:	mov	x6, #0x385                 	// #901
   28220:	mov	x7, #0xcd81                	// #52609
   28224:	mov	x26, #0xeac3                	// #60099
   28228:	movk	x13, #0x5c28, lsl #16
   2822c:	movk	x14, #0xe353, lsl #16
   28230:	movk	x15, #0x3886, lsl #16
   28234:	movk	x16, #0x71b4, lsl #16
   28238:	movk	x17, #0xd7b6, lsl #16
   2823c:	movk	x18, #0xe57a, lsl #16
   28240:	movk	x0, #0x8461, lsl #16
   28244:	movk	x1, #0xa09b, lsl #16
   28248:	movk	x2, #0xbded, lsl #16
   2824c:	movk	x4, #0xcb24, lsl #16
   28250:	movk	x5, #0x5bd4, lsl #16
   28254:	movk	x6, #0x92ed, lsl #16
   28258:	movk	x7, #0x5095, lsl #16
   2825c:	movk	x26, #0xf3dc, lsl #16
   28260:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   28264:	movk	x13, #0xc28f, lsl #32
   28268:	movk	x14, #0x9ba5, lsl #32
   2826c:	movk	x15, #0xc5d6, lsl #32
   28270:	movk	x16, #0x5ac4, lsl #32
   28274:	movk	x17, #0xde82, lsl #32
   28278:	movk	x18, #0x94d5, lsl #32
   2827c:	movk	x0, #0x7711, lsl #32
   28280:	movk	x1, #0xb82f, lsl #32
   28284:	movk	x2, #0xfece, lsl #32
   28288:	mov	w3, #0xcccd                	// #52429
   2828c:	movk	x4, #0xff0b, lsl #32
   28290:	movk	x5, #0x3302, lsl #32
   28294:	movk	x6, #0x84d0, lsl #32
   28298:	movk	x7, #0x4dc3, lsl #32
   2829c:	movk	x26, #0x4075, lsl #32
   282a0:	movk	x11, #0xcccd
   282a4:	mov	w12, #0xa                   	// #10
   282a8:	movk	x13, #0x28f5, lsl #48
   282ac:	movk	x14, #0x20c4, lsl #48
   282b0:	movk	x15, #0x346d, lsl #48
   282b4:	movk	x16, #0xa7c, lsl #48
   282b8:	movk	x17, #0x431b, lsl #48
   282bc:	movk	x18, #0xd6bf, lsl #48
   282c0:	movk	x0, #0xabcc, lsl #48
   282c4:	movk	x1, #0x44, lsl #48
   282c8:	movk	x2, #0xdbe6, lsl #48
   282cc:	movk	w3, #0xcccc, lsl #16
   282d0:	movk	x4, #0xafeb, lsl #48
   282d4:	movk	x5, #0x232f, lsl #48
   282d8:	movk	x6, #0x384b, lsl #48
   282dc:	movk	x7, #0xb42, lsl #48
   282e0:	movk	x26, #0x2, lsl #48
   282e4:	ldr	x30, [x8, x9, lsl #3]
   282e8:	umulh	x28, x30, x11
   282ec:	lsr	x28, x28, #3
   282f0:	msub	x27, x28, x12, x30
   282f4:	cmp	x27, #0x1
   282f8:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   282fc:	umulh	x27, x28, x11
   28300:	lsr	x27, x27, #3
   28304:	msub	x27, x27, x12, x28
   28308:	cmp	x27, #0x1
   2830c:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28310:	lsr	x27, x30, #2
   28314:	umulh	x27, x27, x13
   28318:	lsr	x27, x27, #2
   2831c:	umulh	x28, x27, x11
   28320:	lsr	x28, x28, #3
   28324:	msub	x27, x28, x12, x27
   28328:	cmp	x27, #0x1
   2832c:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28330:	lsr	x27, x30, #3
   28334:	umulh	x27, x27, x14
   28338:	lsr	x27, x27, #4
   2833c:	umulh	x28, x27, x11
   28340:	lsr	x28, x28, #3
   28344:	msub	x27, x28, x12, x27
   28348:	cmp	x27, #0x1
   2834c:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28350:	umulh	x27, x30, x15
   28354:	lsr	x27, x27, #11
   28358:	umulh	x28, x27, x11
   2835c:	lsr	x28, x28, #3
   28360:	msub	x27, x28, x12, x27
   28364:	cmp	x27, #0x1
   28368:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   2836c:	lsr	x27, x30, #5
   28370:	umulh	x27, x27, x16
   28374:	lsr	x27, x27, #7
   28378:	umulh	x28, x27, x11
   2837c:	lsr	x28, x28, #3
   28380:	msub	x27, x28, x12, x27
   28384:	cmp	x27, #0x1
   28388:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   2838c:	umulh	x27, x30, x17
   28390:	lsr	x27, x27, #18
   28394:	umulh	x28, x27, x11
   28398:	lsr	x28, x28, #3
   2839c:	msub	x27, x28, x12, x27
   283a0:	cmp	x27, #0x1
   283a4:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   283a8:	umulh	x27, x30, x18
   283ac:	lsr	x27, x27, #23
   283b0:	umulh	x28, x27, x11
   283b4:	lsr	x28, x28, #3
   283b8:	msub	x27, x28, x12, x27
   283bc:	cmp	x27, #0x1
   283c0:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   283c4:	umulh	x27, x30, x0
   283c8:	lsr	x27, x27, #26
   283cc:	umulh	x28, x27, x11
   283d0:	lsr	x28, x28, #3
   283d4:	msub	x27, x28, x12, x27
   283d8:	cmp	x27, #0x1
   283dc:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   283e0:	lsr	x27, x30, #9
   283e4:	umulh	x27, x27, x1
   283e8:	lsr	x27, x27, #11
   283ec:	umulh	x28, x27, x11
   283f0:	lsr	x28, x28, #3
   283f4:	msub	x27, x28, x12, x27
   283f8:	cmp	x27, #0x1
   283fc:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28400:	umulh	x27, x30, x2
   28404:	lsr	x27, x27, #33
   28408:	mul	x28, x27, x3
   2840c:	lsr	x28, x28, #35
   28410:	msub	w27, w28, w12, w27
   28414:	cmp	w27, #0x1
   28418:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   2841c:	umulh	x27, x30, x4
   28420:	lsr	x27, x27, #36
   28424:	mul	x28, x27, x3
   28428:	lsr	x28, x28, #35
   2842c:	msub	w27, w28, w12, w27
   28430:	cmp	w27, #0x1
   28434:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28438:	umulh	x27, x30, x5
   2843c:	lsr	x27, x27, #37
   28440:	mul	x28, x27, x3
   28444:	lsr	x28, x28, #35
   28448:	msub	w27, w28, w12, w27
   2844c:	cmp	w27, #0x1
   28450:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28454:	umulh	x27, x30, x6
   28458:	lsr	x27, x27, #41
   2845c:	mul	x28, x27, x3
   28460:	lsr	x28, x28, #35
   28464:	msub	w27, w28, w12, w27
   28468:	cmp	w27, #0x1
   2846c:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28470:	umulh	x27, x30, x7
   28474:	lsr	x27, x27, #42
   28478:	mul	x28, x27, x3
   2847c:	lsr	x28, x28, #35
   28480:	msub	w27, w28, w12, w27
   28484:	cmp	w27, #0x1
   28488:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   2848c:	lsr	x27, x30, #15
   28490:	umulh	x27, x27, x26
   28494:	ubfx	x27, x27, #20, #16
   28498:	umull	x28, w27, w3
   2849c:	lsr	x28, x28, #35
   284a0:	msub	w27, w28, w12, w27
   284a4:	cmp	w27, #0x1
   284a8:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   284ac:	mov	x27, #0x7857                	// #30807
   284b0:	movk	x27, #0xb113, lsl #16
   284b4:	movk	x27, #0x652f, lsl #32
   284b8:	movk	x27, #0x39a5, lsl #48
   284bc:	umulh	x27, x30, x27
   284c0:	lsr	x27, x27, #51
   284c4:	mul	x28, x27, x3
   284c8:	lsr	x28, x28, #35
   284cc:	msub	w27, w28, w12, w27
   284d0:	cmp	w27, #0x1
   284d4:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   284d8:	mov	x28, #0x1b53                	// #6995
   284dc:	movk	x28, #0xd519, lsl #16
   284e0:	lsr	x27, x30, #17
   284e4:	movk	x28, #0x5c3b, lsl #32
   284e8:	umulh	x27, x27, x28
   284ec:	ubfx	w27, w27, #22, #8
   284f0:	umull	x28, w27, w3
   284f4:	lsr	x28, x28, #35
   284f8:	msub	w27, w28, w12, w27
   284fc:	cmp	w27, #0x1
   28500:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28504:	mov	x28, #0x490f                	// #18703
   28508:	movk	x28, #0x7747, lsl #16
   2850c:	lsr	x27, x30, #18
   28510:	movk	x28, #0x49c9, lsl #32
   28514:	umulh	x27, x27, x28
   28518:	ubfx	x27, x27, #24, #8
   2851c:	umull	x28, w27, w3
   28520:	lsr	x28, x28, #35
   28524:	msub	w27, w28, w12, w27
   28528:	cmp	w27, #0x1
   2852c:	b.hi	285a0 <PyInit__decimal@@Base+0x21aec>  // b.pmore
   28530:	str	x30, [x10, x9, lsl #3]
   28534:	ldr	x30, [x24, #24]
   28538:	add	x9, x9, #0x1
   2853c:	cmp	x9, x30
   28540:	b.lt	282e4 <PyInit__decimal@@Base+0x21830>  // b.tstop
   28544:	ldrb	w8, [x19]
   28548:	sub	x10, x10, #0x8
   2854c:	str	xzr, [x19, #8]
   28550:	and	w9, w8, #0xf0
   28554:	strb	w9, [x19]
   28558:	mov	x9, x30
   2855c:	cmp	x30, #0x2
   28560:	b.lt	28570 <PyInit__decimal@@Base+0x21abc>  // b.tstop
   28564:	ldr	x11, [x10, x9, lsl #3]
   28568:	sub	x30, x9, #0x1
   2856c:	cbz	x11, 28558 <PyInit__decimal@@Base+0x21aa4>
   28570:	str	x9, [x19, #24]
   28574:	ldr	x11, [x23, #1344]
   28578:	ldr	x10, [x19, #32]
   2857c:	cmp	x11, x9
   28580:	csel	x1, x9, x11, lt  // lt = tstop
   28584:	cmp	x1, x10
   28588:	b.eq	28604 <PyInit__decimal@@Base+0x21b50>  // b.none
   2858c:	tbnz	w8, #5, 285f0 <PyInit__decimal@@Base+0x21b3c>
   28590:	mov	x0, x19
   28594:	mov	x2, x21
   28598:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2859c:	b	28604 <PyInit__decimal@@Base+0x21b50>
   285a0:	ldrb	w8, [x19]
   285a4:	tbnz	w8, #5, 27ed0 <PyInit__decimal@@Base+0x2141c>
   285a8:	ldr	x9, [x19, #32]
   285ac:	ldr	x1, [x23, #1344]
   285b0:	cmp	x9, x1
   285b4:	b.le	27ed0 <PyInit__decimal@@Base+0x2141c>
   285b8:	strb	wzr, [sp, #8]
   285bc:	ldr	x0, [x19, #40]
   285c0:	add	x3, sp, #0x8
   285c4:	mov	w2, #0x8                   	// #8
   285c8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   285cc:	str	x0, [x19, #40]
   285d0:	ldrb	w8, [sp, #8]
   285d4:	cbnz	w8, 27ecc <PyInit__decimal@@Base+0x21418>
   285d8:	ldr	x8, [x23, #1344]
   285dc:	b	27ec8 <PyInit__decimal@@Base+0x21414>
   285e0:	mov	w13, #0xe                   	// #14
   285e4:	b	28134 <PyInit__decimal@@Base+0x21680>
   285e8:	mov	w13, #0x9                   	// #9
   285ec:	b	28134 <PyInit__decimal@@Base+0x21680>
   285f0:	cmp	x1, x10
   285f4:	b.le	28604 <PyInit__decimal@@Base+0x21b50>
   285f8:	mov	x0, x19
   285fc:	mov	x2, x21
   28600:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   28604:	ldr	x9, [x19, #40]
   28608:	ldr	x8, [x19, #24]
   2860c:	add	x9, x9, x8, lsl #3
   28610:	ldur	x9, [x9, #-8]
   28614:	cmp	x25, x9
   28618:	b.ls	28644 <PyInit__decimal@@Base+0x21b90>  // b.plast
   2861c:	ldr	x10, [x22, #32]
   28620:	cmp	x10, x9
   28624:	b.ls	2866c <PyInit__decimal@@Base+0x21bb8>  // b.plast
   28628:	ldr	x10, [x22, #16]
   2862c:	cmp	x10, x9
   28630:	b.ls	286b0 <PyInit__decimal@@Base+0x21bfc>  // b.plast
   28634:	ldr	x10, [x22, #8]
   28638:	cmp	x10, x9
   2863c:	mov	w9, #0x1                   	// #1
   28640:	b	28714 <PyInit__decimal@@Base+0x21c60>
   28644:	ldr	x10, [x22, #112]
   28648:	cmp	x10, x9
   2864c:	b.ls	28688 <PyInit__decimal@@Base+0x21bd4>  // b.plast
   28650:	ldr	x10, [x22, #88]
   28654:	cmp	x10, x9
   28658:	b.ls	286c0 <PyInit__decimal@@Base+0x21c0c>  // b.plast
   2865c:	ldr	x10, [x22, #80]
   28660:	cmp	x10, x9
   28664:	mov	w9, #0xa                   	// #10
   28668:	b	28714 <PyInit__decimal@@Base+0x21c60>
   2866c:	ldr	x10, [x22, #48]
   28670:	cmp	x10, x9
   28674:	b.ls	286dc <PyInit__decimal@@Base+0x21c28>  // b.plast
   28678:	ldr	x10, [x22, #40]
   2867c:	cmp	x10, x9
   28680:	mov	w9, #0x5                   	// #5
   28684:	b	28714 <PyInit__decimal@@Base+0x21c60>
   28688:	ldr	x10, [x22, #144]
   2868c:	cmp	x10, x9
   28690:	b.ls	286f8 <PyInit__decimal@@Base+0x21c44>  // b.plast
   28694:	ldr	x10, [x22, #128]
   28698:	cmp	x10, x9
   2869c:	b.ls	28708 <PyInit__decimal@@Base+0x21c54>  // b.plast
   286a0:	ldr	x10, [x22, #120]
   286a4:	cmp	x10, x9
   286a8:	mov	w9, #0xf                   	// #15
   286ac:	b	28714 <PyInit__decimal@@Base+0x21c60>
   286b0:	ldr	x10, [x22, #24]
   286b4:	cmp	x10, x9
   286b8:	mov	w9, #0x3                   	// #3
   286bc:	b	28714 <PyInit__decimal@@Base+0x21c60>
   286c0:	ldr	x10, [x22, #104]
   286c4:	cmp	x10, x9
   286c8:	b.ls	28750 <PyInit__decimal@@Base+0x21c9c>  // b.plast
   286cc:	ldr	x10, [x22, #96]
   286d0:	cmp	x10, x9
   286d4:	mov	w9, #0xc                   	// #12
   286d8:	b	28714 <PyInit__decimal@@Base+0x21c60>
   286dc:	ldr	x10, [x22, #64]
   286e0:	cmp	x10, x9
   286e4:	b.ls	28758 <PyInit__decimal@@Base+0x21ca4>  // b.plast
   286e8:	ldr	x10, [x22, #56]
   286ec:	cmp	x10, x9
   286f0:	mov	w9, #0x7                   	// #7
   286f4:	b	28714 <PyInit__decimal@@Base+0x21c60>
   286f8:	ldr	x10, [x22, #152]
   286fc:	cmp	x10, x9
   28700:	mov	w9, #0x13                  	// #19
   28704:	b	28714 <PyInit__decimal@@Base+0x21c60>
   28708:	ldr	x10, [x22, #136]
   2870c:	cmp	x10, x9
   28710:	mov	w9, #0x11                  	// #17
   28714:	cinc	x9, x9, ls  // ls = plast
   28718:	mov	w10, #0x13                  	// #19
   2871c:	madd	x8, x8, x10, x9
   28720:	sub	x8, x8, #0x13
   28724:	str	x8, [x19, #16]
   28728:	mov	x0, x19
   2872c:	mov	x1, x20
   28730:	ldp	x20, x19, [sp, #96]
   28734:	ldp	x22, x21, [sp, #80]
   28738:	ldp	x24, x23, [sp, #64]
   2873c:	ldp	x26, x25, [sp, #48]
   28740:	ldp	x28, x27, [sp, #32]
   28744:	ldp	x29, x30, [sp, #16]
   28748:	add	sp, sp, #0x70
   2874c:	b	27394 <PyInit__decimal@@Base+0x208e0>
   28750:	mov	w9, #0xe                   	// #14
   28754:	b	28718 <PyInit__decimal@@Base+0x21c64>
   28758:	mov	w9, #0x9                   	// #9
   2875c:	b	28718 <PyInit__decimal@@Base+0x21c64>
   28760:	stp	x29, x30, [sp, #-96]!
   28764:	str	x28, [sp, #16]
   28768:	stp	x26, x25, [sp, #32]
   2876c:	stp	x24, x23, [sp, #48]
   28770:	stp	x22, x21, [sp, #64]
   28774:	stp	x20, x19, [sp, #80]
   28778:	mov	x29, sp
   2877c:	sub	sp, sp, #0x690
   28780:	add	x10, sp, #0x490
   28784:	str	x10, [sp, #1160]
   28788:	add	x10, sp, #0x260
   2878c:	mov	w8, #0x30                  	// #48
   28790:	mov	w9, #0x40                  	// #64
   28794:	str	x10, [sp, #600]
   28798:	add	x10, sp, #0x30
   2879c:	str	wzr, [x29, #24]
   287a0:	str	xzr, [sp, #1128]
   287a4:	str	xzr, [sp, #1136]
   287a8:	str	xzr, [sp, #568]
   287ac:	str	xzr, [sp, #576]
   287b0:	stp	xzr, xzr, [sp, #8]
   287b4:	strb	w8, [sp, #1120]
   287b8:	str	xzr, [sp, #1144]
   287bc:	str	x9, [sp, #1152]
   287c0:	strb	w8, [sp, #560]
   287c4:	str	xzr, [sp, #584]
   287c8:	str	x9, [sp, #592]
   287cc:	strb	w8, [sp]
   287d0:	stp	xzr, x9, [sp, #24]
   287d4:	str	x10, [sp, #40]
   287d8:	ldrb	w8, [x1]
   287dc:	mov	x19, x4
   287e0:	mov	x22, x3
   287e4:	mov	x23, x2
   287e8:	mov	x21, x1
   287ec:	tst	w8, #0xe
   287f0:	mov	x20, x0
   287f4:	b.ne	28804 <PyInit__decimal@@Base+0x21d50>  // b.any
   287f8:	ldrb	w8, [x23]
   287fc:	tst	w8, #0xe
   28800:	b.eq	28820 <PyInit__decimal@@Base+0x21d6c>  // b.none
   28804:	mov	x0, x20
   28808:	mov	x1, x21
   2880c:	mov	x2, x23
   28810:	mov	x3, x22
   28814:	mov	x4, x19
   28818:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2881c:	cbnz	w0, 2895c <PyInit__decimal@@Base+0x21ea8>
   28820:	ldr	x8, [x23, #8]
   28824:	cbnz	x8, 288f4 <PyInit__decimal@@Base+0x21e40>
   28828:	ldrb	w8, [x23]
   2882c:	tbnz	w8, #1, 288f4 <PyInit__decimal@@Base+0x21e40>
   28830:	add	x2, x29, #0x18
   28834:	mov	w0, wzr
   28838:	mov	x1, x23
   2883c:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   28840:	ldr	w8, [x29, #24]
   28844:	tbnz	w8, #8, 28874 <PyInit__decimal@@Base+0x21dc0>
   28848:	ldrb	w9, [x23]
   2884c:	tbnz	x0, #63, 2885c <PyInit__decimal@@Base+0x21da8>
   28850:	tst	w9, #0x1
   28854:	cneg	x23, x0, ne  // ne = any
   28858:	b	28878 <PyInit__decimal@@Base+0x21dc4>
   2885c:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   28860:	cmp	x0, x23
   28864:	b.ne	2886c <PyInit__decimal@@Base+0x21db8>  // b.any
   28868:	tbnz	w9, #0, 28878 <PyInit__decimal@@Base+0x21dc4>
   2886c:	orr	w8, w8, #0x100
   28870:	str	w8, [x29, #24]
   28874:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   28878:	tbnz	w8, #8, 288f4 <PyInit__decimal@@Base+0x21e40>
   2887c:	ldr	x24, [x22]
   28880:	cmp	x23, x24
   28884:	b.gt	288f4 <PyInit__decimal@@Base+0x21e40>
   28888:	neg	x8, x24
   2888c:	cmp	x23, x8
   28890:	b.lt	288f4 <PyInit__decimal@@Base+0x21e40>  // b.tstop
   28894:	ldrb	w8, [x21]
   28898:	tbnz	w8, #1, 2897c <PyInit__decimal@@Base+0x21ec8>
   2889c:	ldr	x9, [x21, #16]
   288a0:	cmp	x23, #0x0
   288a4:	csel	x25, xzr, x24, ge  // ge = tcont
   288a8:	cmp	x9, x24
   288ac:	b.le	28a68 <PyInit__decimal@@Base+0x21fb4>
   288b0:	add	x10, sp, #0x460
   288b4:	cmp	x10, x21
   288b8:	b.eq	28a58 <PyInit__decimal@@Base+0x21fa4>  // b.none
   288bc:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
   288c0:	ldr	x10, [x21, #24]
   288c4:	ldr	x12, [x26, #1344]
   288c8:	ldr	x11, [sp, #1152]
   288cc:	cmp	x12, x10
   288d0:	csel	x1, x10, x12, lt  // lt = tstop
   288d4:	cmp	x1, x11
   288d8:	b.eq	28a2c <PyInit__decimal@@Base+0x21f78>  // b.none
   288dc:	ldrb	w12, [sp, #1120]
   288e0:	tbnz	w12, #5, 28a0c <PyInit__decimal@@Base+0x21f58>
   288e4:	add	x0, sp, #0x460
   288e8:	mov	x2, x19
   288ec:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   288f0:	b	28a20 <PyInit__decimal@@Base+0x21f6c>
   288f4:	ldrb	w8, [x20]
   288f8:	tbnz	w8, #5, 2893c <PyInit__decimal@@Base+0x21e88>
   288fc:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   28900:	ldr	x9, [x20, #32]
   28904:	ldr	x1, [x21, #1344]
   28908:	cmp	x9, x1
   2890c:	b.le	2893c <PyInit__decimal@@Base+0x21e88>
   28910:	strb	wzr, [x29, #28]
   28914:	ldr	x0, [x20, #40]
   28918:	add	x3, x29, #0x1c
   2891c:	mov	w2, #0x8                   	// #8
   28920:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   28924:	str	x0, [x20, #40]
   28928:	ldrb	w8, [x29, #28]
   2892c:	cbnz	w8, 28938 <PyInit__decimal@@Base+0x21e84>
   28930:	ldr	x8, [x21, #1344]
   28934:	str	x8, [x20, #32]
   28938:	ldrb	w8, [x20]
   2893c:	and	w8, w8, #0xf0
   28940:	orr	w8, w8, #0x4
   28944:	stp	xzr, xzr, [x20, #16]
   28948:	strb	w8, [x20]
   2894c:	str	xzr, [x20, #8]
   28950:	ldr	w8, [x19]
   28954:	orr	w8, w8, #0x100
   28958:	str	w8, [x19]
   2895c:	add	sp, sp, #0x690
   28960:	ldp	x20, x19, [sp, #80]
   28964:	ldp	x22, x21, [sp, #64]
   28968:	ldp	x24, x23, [sp, #48]
   2896c:	ldp	x26, x25, [sp, #32]
   28970:	ldr	x28, [sp, #16]
   28974:	ldp	x29, x30, [sp], #96
   28978:	ret
   2897c:	cmp	x20, x21
   28980:	b.eq	2895c <PyInit__decimal@@Base+0x21ea8>  // b.none
   28984:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   28988:	ldr	x9, [x21, #24]
   2898c:	ldr	x11, [x10, #1344]
   28990:	ldr	x10, [x20, #32]
   28994:	cmp	x11, x9
   28998:	csel	x1, x9, x11, lt  // lt = tstop
   2899c:	cmp	x1, x10
   289a0:	b.eq	289dc <PyInit__decimal@@Base+0x21f28>  // b.none
   289a4:	ldrb	w11, [x20]
   289a8:	tbnz	w11, #5, 289bc <PyInit__decimal@@Base+0x21f08>
   289ac:	mov	x0, x20
   289b0:	mov	x2, x19
   289b4:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   289b8:	b	289d0 <PyInit__decimal@@Base+0x21f1c>
   289bc:	cmp	x1, x10
   289c0:	b.le	289dc <PyInit__decimal@@Base+0x21f28>
   289c4:	mov	x0, x20
   289c8:	mov	x2, x19
   289cc:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   289d0:	cbz	w0, 2895c <PyInit__decimal@@Base+0x21ea8>
   289d4:	ldr	x9, [x21, #24]
   289d8:	ldrb	w8, [x21]
   289dc:	ldrb	w10, [x20]
   289e0:	ldr	x0, [x20, #40]
   289e4:	bfxil	w10, w8, #0, #4
   289e8:	strb	w10, [x20]
   289ec:	ldur	q0, [x21, #8]
   289f0:	str	x9, [x20, #24]
   289f4:	stur	q0, [x20, #8]
   289f8:	ldr	x8, [x21, #24]
   289fc:	ldr	x1, [x21, #40]
   28a00:	lsl	x2, x8, #3
   28a04:	bl	63c0 <memcpy@plt>
   28a08:	b	2895c <PyInit__decimal@@Base+0x21ea8>
   28a0c:	cmp	x1, x11
   28a10:	b.le	28a2c <PyInit__decimal@@Base+0x21f78>
   28a14:	add	x0, sp, #0x460
   28a18:	mov	x2, x19
   28a1c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   28a20:	cbz	w0, 28c04 <PyInit__decimal@@Base+0x22150>
   28a24:	ldrb	w8, [x21]
   28a28:	ldp	x9, x10, [x21, #16]
   28a2c:	ldrb	w11, [sp, #1120]
   28a30:	ldr	x0, [sp, #1160]
   28a34:	lsl	x2, x10, #3
   28a38:	bfxil	w11, w8, #0, #4
   28a3c:	strb	w11, [sp, #1120]
   28a40:	ldr	x8, [x21, #8]
   28a44:	str	x10, [sp, #1144]
   28a48:	str	x9, [sp, #1136]
   28a4c:	str	x8, [sp, #1128]
   28a50:	ldr	x1, [x21, #40]
   28a54:	bl	63c0 <memcpy@plt>
   28a58:	add	x0, sp, #0x460
   28a5c:	mov	x1, x22
   28a60:	add	x21, sp, #0x460
   28a64:	bl	27394 <PyInit__decimal@@Base+0x208e0>
   28a68:	add	x2, x25, x23
   28a6c:	add	x0, sp, #0x230
   28a70:	mov	x1, x21
   28a74:	mov	x3, x19
   28a78:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   28a7c:	cbz	w0, 28ad4 <PyInit__decimal@@Base+0x22020>
   28a80:	bic	x8, x24, x23, asr #63
   28a84:	add	x0, sp, #0x230
   28a88:	mov	x1, x22
   28a8c:	sub	x23, x8, x23
   28a90:	bl	27394 <PyInit__decimal@@Base+0x208e0>
   28a94:	mov	x0, sp
   28a98:	mov	x1, x21
   28a9c:	mov	x2, x23
   28aa0:	mov	x3, x19
   28aa4:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   28aa8:	cmn	x0, #0x1
   28aac:	b.eq	28ad4 <PyInit__decimal@@Base+0x22020>  // b.none
   28ab0:	ldrb	w8, [sp]
   28ab4:	add	x1, sp, #0x230
   28ab8:	mov	x2, sp
   28abc:	mov	x0, x20
   28ac0:	and	w3, w8, #0x1
   28ac4:	mov	x4, x22
   28ac8:	mov	x5, x19
   28acc:	bl	2a43c <PyInit__decimal@@Base+0x23988>
   28ad0:	b	28b3c <PyInit__decimal@@Base+0x22088>
   28ad4:	ldrb	w8, [x20]
   28ad8:	tbnz	w8, #5, 28b1c <PyInit__decimal@@Base+0x22068>
   28adc:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   28ae0:	ldr	x9, [x20, #32]
   28ae4:	ldr	x1, [x21, #1344]
   28ae8:	cmp	x9, x1
   28aec:	b.le	28b1c <PyInit__decimal@@Base+0x22068>
   28af0:	strb	wzr, [x29, #28]
   28af4:	ldr	x0, [x20, #40]
   28af8:	add	x3, x29, #0x1c
   28afc:	mov	w2, #0x8                   	// #8
   28b00:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   28b04:	str	x0, [x20, #40]
   28b08:	ldrb	w8, [x29, #28]
   28b0c:	cbnz	w8, 28b18 <PyInit__decimal@@Base+0x22064>
   28b10:	ldr	x8, [x21, #1344]
   28b14:	str	x8, [x20, #32]
   28b18:	ldrb	w8, [x20]
   28b1c:	and	w8, w8, #0xf0
   28b20:	orr	w8, w8, #0x4
   28b24:	stp	xzr, xzr, [x20, #16]
   28b28:	strb	w8, [x20]
   28b2c:	str	xzr, [x20, #8]
   28b30:	ldr	w8, [x19]
   28b34:	orr	w8, w8, #0x200
   28b38:	str	w8, [x19]
   28b3c:	ldrb	w8, [sp, #1120]
   28b40:	cmp	w8, #0x1f
   28b44:	b.ls	28b70 <PyInit__decimal@@Base+0x220bc>  // b.plast
   28b48:	tbz	w8, #4, 28b88 <PyInit__decimal@@Base+0x220d4>
   28b4c:	ldrb	w8, [sp, #560]
   28b50:	cmp	w8, #0x1f
   28b54:	b.ls	28ba4 <PyInit__decimal@@Base+0x220f0>  // b.plast
   28b58:	tbz	w8, #4, 28bbc <PyInit__decimal@@Base+0x22108>
   28b5c:	ldrb	w8, [sp]
   28b60:	cmp	w8, #0x1f
   28b64:	b.ls	28bd8 <PyInit__decimal@@Base+0x22124>  // b.plast
   28b68:	tbnz	w8, #4, 2895c <PyInit__decimal@@Base+0x21ea8>
   28b6c:	b	28bf0 <PyInit__decimal@@Base+0x2213c>
   28b70:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   28b74:	ldr	x8, [x8, #1376]
   28b78:	ldr	x0, [sp, #1160]
   28b7c:	blr	x8
   28b80:	ldrb	w8, [sp, #1120]
   28b84:	tbnz	w8, #4, 28b4c <PyInit__decimal@@Base+0x22098>
   28b88:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   28b8c:	ldr	x8, [x8, #1376]
   28b90:	add	x0, sp, #0x460
   28b94:	blr	x8
   28b98:	ldrb	w8, [sp, #560]
   28b9c:	cmp	w8, #0x1f
   28ba0:	b.hi	28b58 <PyInit__decimal@@Base+0x220a4>  // b.pmore
   28ba4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   28ba8:	ldr	x8, [x8, #1376]
   28bac:	ldr	x0, [sp, #600]
   28bb0:	blr	x8
   28bb4:	ldrb	w8, [sp, #560]
   28bb8:	tbnz	w8, #4, 28b5c <PyInit__decimal@@Base+0x220a8>
   28bbc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   28bc0:	ldr	x8, [x8, #1376]
   28bc4:	add	x0, sp, #0x230
   28bc8:	blr	x8
   28bcc:	ldrb	w8, [sp]
   28bd0:	cmp	w8, #0x1f
   28bd4:	b.hi	28b68 <PyInit__decimal@@Base+0x220b4>  // b.pmore
   28bd8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   28bdc:	ldr	x8, [x8, #1376]
   28be0:	ldr	x0, [sp, #40]
   28be4:	blr	x8
   28be8:	ldrb	w8, [sp]
   28bec:	tbnz	w8, #4, 2895c <PyInit__decimal@@Base+0x21ea8>
   28bf0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   28bf4:	ldr	x8, [x8, #1376]
   28bf8:	mov	x0, sp
   28bfc:	blr	x8
   28c00:	b	2895c <PyInit__decimal@@Base+0x21ea8>
   28c04:	ldrb	w8, [x20]
   28c08:	tbnz	w8, #5, 28b1c <PyInit__decimal@@Base+0x22068>
   28c0c:	ldr	x9, [x20, #32]
   28c10:	ldr	x1, [x26, #1344]
   28c14:	cmp	x9, x1
   28c18:	b.le	28b1c <PyInit__decimal@@Base+0x22068>
   28c1c:	strb	wzr, [x29, #28]
   28c20:	ldr	x0, [x20, #40]
   28c24:	add	x3, x29, #0x1c
   28c28:	mov	w2, #0x8                   	// #8
   28c2c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   28c30:	str	x0, [x20, #40]
   28c34:	ldrb	w8, [x29, #28]
   28c38:	cbnz	w8, 28b18 <PyInit__decimal@@Base+0x22064>
   28c3c:	ldr	x8, [x26, #1344]
   28c40:	b	28b14 <PyInit__decimal@@Base+0x22060>
   28c44:	sub	sp, sp, #0x50
   28c48:	stp	x29, x30, [sp, #16]
   28c4c:	str	x23, [sp, #32]
   28c50:	stp	x22, x21, [sp, #48]
   28c54:	stp	x20, x19, [sp, #64]
   28c58:	add	x29, sp, #0x10
   28c5c:	stur	wzr, [x29, #-4]
   28c60:	ldrb	w8, [x1]
   28c64:	mov	x20, x4
   28c68:	mov	x22, x3
   28c6c:	mov	x23, x2
   28c70:	mov	x21, x1
   28c74:	tst	w8, #0xe
   28c78:	mov	x19, x0
   28c7c:	b.ne	28c8c <PyInit__decimal@@Base+0x221d8>  // b.any
   28c80:	ldrb	w8, [x23]
   28c84:	tst	w8, #0xe
   28c88:	b.eq	28ca8 <PyInit__decimal@@Base+0x221f4>  // b.none
   28c8c:	mov	x0, x19
   28c90:	mov	x1, x21
   28c94:	mov	x2, x23
   28c98:	mov	x3, x22
   28c9c:	mov	x4, x20
   28ca0:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   28ca4:	cbnz	w0, 28e1c <PyInit__decimal@@Base+0x22368>
   28ca8:	ldr	x8, [x23, #8]
   28cac:	cbnz	x8, 28d70 <PyInit__decimal@@Base+0x222bc>
   28cb0:	ldrb	w8, [x23]
   28cb4:	tbnz	w8, #1, 28d70 <PyInit__decimal@@Base+0x222bc>
   28cb8:	sub	x2, x29, #0x4
   28cbc:	mov	w0, wzr
   28cc0:	mov	x1, x23
   28cc4:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   28cc8:	ldp	x9, x8, [x22]
   28ccc:	add	x8, x9, x8
   28cd0:	cmp	x0, x8, lsl #1
   28cd4:	b.hi	28dbc <PyInit__decimal@@Base+0x22308>  // b.pmore
   28cd8:	ldurb	w8, [x29, #-3]
   28cdc:	tbnz	w8, #0, 28dbc <PyInit__decimal@@Base+0x22308>
   28ce0:	ldrb	w8, [x21]
   28ce4:	tbnz	w8, #1, 28e34 <PyInit__decimal@@Base+0x22380>
   28ce8:	ldrb	w10, [x23]
   28cec:	ldr	x9, [x21, #8]
   28cf0:	mov	x12, #0x1                   	// #1
   28cf4:	mov	w11, #0x1                   	// #1
   28cf8:	lsl	w10, w10, #1
   28cfc:	movk	x12, #0x4ec8, lsl #16
   28d00:	and	x10, x10, #0x2
   28d04:	movk	x12, #0x6d67, lsl #32
   28d08:	sub	x10, x11, x10
   28d0c:	movk	x12, #0x1bc1, lsl #48
   28d10:	mov	x13, #0xffffffff626fffff    	// #-2643460097
   28d14:	madd	x10, x10, x0, x9
   28d18:	movk	x13, #0x2531, lsl #32
   28d1c:	cmp	x10, x12
   28d20:	movk	x13, #0xc87d, lsl #48
   28d24:	csel	x10, x10, x12, lt  // lt = tstop
   28d28:	cmp	x10, x13
   28d2c:	csel	x23, x10, x13, gt
   28d30:	cmp	x19, x21
   28d34:	b.eq	28ec4 <PyInit__decimal@@Base+0x22410>  // b.none
   28d38:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   28d3c:	ldr	x10, [x21, #24]
   28d40:	ldr	x12, [x11, #1344]
   28d44:	ldr	x11, [x19, #32]
   28d48:	cmp	x12, x10
   28d4c:	csel	x1, x10, x12, lt  // lt = tstop
   28d50:	cmp	x1, x11
   28d54:	b.eq	28e98 <PyInit__decimal@@Base+0x223e4>  // b.none
   28d58:	ldrb	w12, [x19]
   28d5c:	tbnz	w12, #5, 28e74 <PyInit__decimal@@Base+0x223c0>
   28d60:	mov	x0, x19
   28d64:	mov	x2, x20
   28d68:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   28d6c:	b	28e88 <PyInit__decimal@@Base+0x223d4>
   28d70:	ldrb	w8, [x19]
   28d74:	tbnz	w8, #5, 28dfc <PyInit__decimal@@Base+0x22348>
   28d78:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   28d7c:	ldr	x9, [x19, #32]
   28d80:	ldr	x1, [x21, #1344]
   28d84:	cmp	x9, x1
   28d88:	b.le	28dfc <PyInit__decimal@@Base+0x22348>
   28d8c:	strb	wzr, [x29, #24]
   28d90:	ldr	x0, [x19, #40]
   28d94:	add	x3, x29, #0x18
   28d98:	mov	w2, #0x8                   	// #8
   28d9c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   28da0:	str	x0, [x19, #40]
   28da4:	ldrb	w8, [x29, #24]
   28da8:	cbnz	w8, 28db4 <PyInit__decimal@@Base+0x22300>
   28dac:	ldr	x8, [x21, #1344]
   28db0:	str	x8, [x19, #32]
   28db4:	ldrb	w8, [x19]
   28db8:	b	28dfc <PyInit__decimal@@Base+0x22348>
   28dbc:	ldrb	w8, [x19]
   28dc0:	tbnz	w8, #5, 28dfc <PyInit__decimal@@Base+0x22348>
   28dc4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   28dc8:	ldr	x9, [x19, #32]
   28dcc:	ldr	x1, [x21, #1344]
   28dd0:	cmp	x9, x1
   28dd4:	b.le	28dfc <PyInit__decimal@@Base+0x22348>
   28dd8:	strb	wzr, [x29, #28]
   28ddc:	ldr	x0, [x19, #40]
   28de0:	add	x3, x29, #0x1c
   28de4:	mov	w2, #0x8                   	// #8
   28de8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   28dec:	str	x0, [x19, #40]
   28df0:	ldrb	w8, [x29, #28]
   28df4:	cbnz	w8, 28db4 <PyInit__decimal@@Base+0x22300>
   28df8:	b	28dac <PyInit__decimal@@Base+0x222f8>
   28dfc:	and	w8, w8, #0xf0
   28e00:	orr	w8, w8, #0x4
   28e04:	stp	xzr, xzr, [x19, #16]
   28e08:	strb	w8, [x19]
   28e0c:	str	xzr, [x19, #8]
   28e10:	ldr	w8, [x20]
   28e14:	orr	w8, w8, #0x100
   28e18:	str	w8, [x20]
   28e1c:	ldp	x20, x19, [sp, #64]
   28e20:	ldp	x22, x21, [sp, #48]
   28e24:	ldr	x23, [sp, #32]
   28e28:	ldp	x29, x30, [sp, #16]
   28e2c:	add	sp, sp, #0x50
   28e30:	ret
   28e34:	cmp	x19, x21
   28e38:	b.eq	28e1c <PyInit__decimal@@Base+0x22368>  // b.none
   28e3c:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   28e40:	ldr	x9, [x21, #24]
   28e44:	ldr	x11, [x10, #1344]
   28e48:	ldr	x10, [x19, #32]
   28e4c:	cmp	x11, x9
   28e50:	csel	x1, x9, x11, lt  // lt = tstop
   28e54:	cmp	x1, x10
   28e58:	b.eq	28efc <PyInit__decimal@@Base+0x22448>  // b.none
   28e5c:	ldrb	w11, [x19]
   28e60:	tbnz	w11, #5, 28edc <PyInit__decimal@@Base+0x22428>
   28e64:	mov	x0, x19
   28e68:	mov	x2, x20
   28e6c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   28e70:	b	28ef0 <PyInit__decimal@@Base+0x2243c>
   28e74:	cmp	x1, x11
   28e78:	b.le	28e98 <PyInit__decimal@@Base+0x223e4>
   28e7c:	mov	x0, x19
   28e80:	mov	x2, x20
   28e84:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   28e88:	cbz	w0, 28ec4 <PyInit__decimal@@Base+0x22410>
   28e8c:	ldr	x10, [x21, #24]
   28e90:	ldrb	w8, [x21]
   28e94:	ldr	x9, [x21, #8]
   28e98:	ldrb	w11, [x19]
   28e9c:	str	x9, [x19, #8]
   28ea0:	ldr	x0, [x19, #40]
   28ea4:	bfxil	w11, w8, #0, #4
   28ea8:	strb	w11, [x19]
   28eac:	ldr	x8, [x21, #16]
   28eb0:	stp	x8, x10, [x19, #16]
   28eb4:	ldr	x8, [x21, #24]
   28eb8:	ldr	x1, [x21, #40]
   28ebc:	lsl	x2, x8, #3
   28ec0:	bl	63c0 <memcpy@plt>
   28ec4:	mov	x0, x19
   28ec8:	mov	x1, x22
   28ecc:	mov	x2, x20
   28ed0:	str	x23, [x19, #8]
   28ed4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   28ed8:	b	28e1c <PyInit__decimal@@Base+0x22368>
   28edc:	cmp	x1, x10
   28ee0:	b.le	28efc <PyInit__decimal@@Base+0x22448>
   28ee4:	mov	x0, x19
   28ee8:	mov	x2, x20
   28eec:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   28ef0:	cbz	w0, 28e1c <PyInit__decimal@@Base+0x22368>
   28ef4:	ldr	x9, [x21, #24]
   28ef8:	ldrb	w8, [x21]
   28efc:	ldrb	w10, [x19]
   28f00:	ldr	x0, [x19, #40]
   28f04:	bfxil	w10, w8, #0, #4
   28f08:	strb	w10, [x19]
   28f0c:	ldur	q0, [x21, #8]
   28f10:	str	x9, [x19, #24]
   28f14:	stur	q0, [x19, #8]
   28f18:	ldr	x8, [x21, #24]
   28f1c:	ldr	x1, [x21, #40]
   28f20:	lsl	x2, x8, #3
   28f24:	bl	63c0 <memcpy@plt>
   28f28:	b	28e1c <PyInit__decimal@@Base+0x22368>
   28f2c:	stp	x29, x30, [sp, #-64]!
   28f30:	str	x23, [sp, #16]
   28f34:	stp	x22, x21, [sp, #32]
   28f38:	stp	x20, x19, [sp, #48]
   28f3c:	mov	x29, sp
   28f40:	ldrb	w8, [x1]
   28f44:	mov	x21, x4
   28f48:	mov	x22, x3
   28f4c:	mov	x20, x1
   28f50:	tst	w8, #0xe
   28f54:	mov	x19, x0
   28f58:	b.eq	28fb8 <PyInit__decimal@@Base+0x22504>  // b.none
   28f5c:	mov	x0, x19
   28f60:	mov	x1, x20
   28f64:	mov	x2, x22
   28f68:	mov	x3, x21
   28f6c:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   28f70:	cmp	x19, x20
   28f74:	b.eq	29070 <PyInit__decimal@@Base+0x225bc>  // b.none
   28f78:	cbnz	w0, 29070 <PyInit__decimal@@Base+0x225bc>
   28f7c:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   28f80:	ldr	x8, [x20, #24]
   28f84:	ldr	x10, [x9, #1344]
   28f88:	ldr	x9, [x19, #32]
   28f8c:	cmp	x10, x8
   28f90:	csel	x1, x8, x10, lt  // lt = tstop
   28f94:	cmp	x1, x9
   28f98:	b.eq	290a0 <PyInit__decimal@@Base+0x225ec>  // b.none
   28f9c:	ldrb	w10, [x19]
   28fa0:	tbnz	w10, #5, 29084 <PyInit__decimal@@Base+0x225d0>
   28fa4:	mov	x0, x19
   28fa8:	mov	x2, x21
   28fac:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   28fb0:	cbnz	w0, 2909c <PyInit__decimal@@Base+0x225e8>
   28fb4:	b	29070 <PyInit__decimal@@Base+0x225bc>
   28fb8:	ldr	x9, [x22]
   28fbc:	mov	x23, x2
   28fc0:	tbnz	x2, #63, 28ffc <PyInit__decimal@@Base+0x22548>
   28fc4:	cmp	x9, x23
   28fc8:	b.lt	29008 <PyInit__decimal@@Base+0x22554>  // b.tstop
   28fcc:	mov	x0, x19
   28fd0:	mov	x1, x20
   28fd4:	mov	x2, x23
   28fd8:	mov	x3, x21
   28fdc:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   28fe0:	mov	x0, x19
   28fe4:	mov	x1, x22
   28fe8:	ldp	x20, x19, [sp, #48]
   28fec:	ldp	x22, x21, [sp, #32]
   28ff0:	ldr	x23, [sp, #16]
   28ff4:	ldp	x29, x30, [sp], #64
   28ff8:	b	27394 <PyInit__decimal@@Base+0x208e0>
   28ffc:	neg	x9, x9
   29000:	cmp	x9, x23
   29004:	b.le	290e0 <PyInit__decimal@@Base+0x2262c>
   29008:	ldrb	w8, [x19]
   2900c:	tbnz	w8, #5, 29050 <PyInit__decimal@@Base+0x2259c>
   29010:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   29014:	ldr	x9, [x19, #32]
   29018:	ldr	x1, [x20, #1344]
   2901c:	cmp	x9, x1
   29020:	b.le	29050 <PyInit__decimal@@Base+0x2259c>
   29024:	strb	wzr, [x29, #28]
   29028:	ldr	x0, [x19, #40]
   2902c:	add	x3, x29, #0x1c
   29030:	mov	w2, #0x8                   	// #8
   29034:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   29038:	str	x0, [x19, #40]
   2903c:	ldrb	w8, [x29, #28]
   29040:	cbnz	w8, 2904c <PyInit__decimal@@Base+0x22598>
   29044:	ldr	x8, [x20, #1344]
   29048:	str	x8, [x19, #32]
   2904c:	ldrb	w8, [x19]
   29050:	and	w8, w8, #0xf0
   29054:	orr	w8, w8, #0x4
   29058:	stp	xzr, xzr, [x19, #16]
   2905c:	strb	w8, [x19]
   29060:	str	xzr, [x19, #8]
   29064:	ldr	w8, [x21]
   29068:	orr	w8, w8, #0x100
   2906c:	str	w8, [x21]
   29070:	ldp	x20, x19, [sp, #48]
   29074:	ldp	x22, x21, [sp, #32]
   29078:	ldr	x23, [sp, #16]
   2907c:	ldp	x29, x30, [sp], #64
   29080:	ret
   29084:	cmp	x1, x9
   29088:	b.le	290a0 <PyInit__decimal@@Base+0x225ec>
   2908c:	mov	x0, x19
   29090:	mov	x2, x21
   29094:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   29098:	cbz	w0, 29070 <PyInit__decimal@@Base+0x225bc>
   2909c:	ldr	x8, [x20, #24]
   290a0:	ldrb	w9, [x20]
   290a4:	ldrb	w10, [x19]
   290a8:	ldr	x0, [x19, #40]
   290ac:	ldr	x23, [sp, #16]
   290b0:	bfxil	w10, w9, #0, #4
   290b4:	strb	w10, [x19]
   290b8:	ldur	q0, [x20, #8]
   290bc:	str	x8, [x19, #24]
   290c0:	stur	q0, [x19, #8]
   290c4:	ldr	x8, [x20, #24]
   290c8:	ldr	x1, [x20, #40]
   290cc:	ldp	x20, x19, [sp, #48]
   290d0:	ldp	x22, x21, [sp, #32]
   290d4:	lsl	x2, x8, #3
   290d8:	ldp	x29, x30, [sp], #64
   290dc:	b	63c0 <memcpy@plt>
   290e0:	cmp	x19, x20
   290e4:	b.eq	2916c <PyInit__decimal@@Base+0x226b8>  // b.none
   290e8:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   290ec:	ldr	x9, [x20, #24]
   290f0:	ldr	x11, [x10, #1344]
   290f4:	ldr	x10, [x19, #32]
   290f8:	cmp	x11, x9
   290fc:	csel	x1, x9, x11, lt  // lt = tstop
   29100:	cmp	x1, x10
   29104:	b.eq	29140 <PyInit__decimal@@Base+0x2268c>  // b.none
   29108:	ldrb	w11, [x19]
   2910c:	tbnz	w11, #5, 29120 <PyInit__decimal@@Base+0x2266c>
   29110:	mov	x0, x19
   29114:	mov	x2, x21
   29118:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2911c:	b	29134 <PyInit__decimal@@Base+0x22680>
   29120:	cmp	x1, x10
   29124:	b.le	29140 <PyInit__decimal@@Base+0x2268c>
   29128:	mov	x0, x19
   2912c:	mov	x2, x21
   29130:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   29134:	cbz	w0, 29070 <PyInit__decimal@@Base+0x225bc>
   29138:	ldr	x9, [x20, #24]
   2913c:	ldrb	w8, [x20]
   29140:	ldrb	w10, [x19]
   29144:	ldr	x0, [x19, #40]
   29148:	bfxil	w10, w8, #0, #4
   2914c:	strb	w10, [x19]
   29150:	ldur	q0, [x20, #8]
   29154:	str	x9, [x19, #24]
   29158:	stur	q0, [x19, #8]
   2915c:	ldr	x8, [x20, #24]
   29160:	ldr	x1, [x20, #40]
   29164:	lsl	x2, x8, #3
   29168:	bl	63c0 <memcpy@plt>
   2916c:	mov	x0, x19
   29170:	mov	x1, x22
   29174:	bl	27394 <PyInit__decimal@@Base+0x208e0>
   29178:	neg	x1, x23
   2917c:	mov	x0, x19
   29180:	ldp	x20, x19, [sp, #48]
   29184:	ldp	x22, x21, [sp, #32]
   29188:	ldr	x23, [sp, #16]
   2918c:	ldp	x29, x30, [sp], #64
   29190:	b	26498 <PyInit__decimal@@Base+0x1f9e4>
   29194:	sub	sp, sp, #0x50
   29198:	stp	x29, x30, [sp, #16]
   2919c:	str	x23, [sp, #32]
   291a0:	stp	x22, x21, [sp, #48]
   291a4:	stp	x20, x19, [sp, #64]
   291a8:	add	x29, sp, #0x10
   291ac:	str	wzr, [sp, #8]
   291b0:	ldrb	w8, [x1]
   291b4:	mov	x20, x4
   291b8:	mov	x22, x3
   291bc:	mov	x23, x2
   291c0:	mov	x21, x1
   291c4:	tst	w8, #0xe
   291c8:	mov	x19, x0
   291cc:	b.ne	291dc <PyInit__decimal@@Base+0x22728>  // b.any
   291d0:	ldrb	w8, [x23]
   291d4:	tst	w8, #0xe
   291d8:	b.eq	291f8 <PyInit__decimal@@Base+0x22744>  // b.none
   291dc:	mov	x0, x19
   291e0:	mov	x1, x21
   291e4:	mov	x2, x23
   291e8:	mov	x3, x22
   291ec:	mov	x4, x20
   291f0:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   291f4:	cbnz	w0, 2929c <PyInit__decimal@@Base+0x227e8>
   291f8:	ldr	x8, [x23, #8]
   291fc:	cbnz	x8, 29234 <PyInit__decimal@@Base+0x22780>
   29200:	ldrb	w8, [x23]
   29204:	tbnz	w8, #1, 29234 <PyInit__decimal@@Base+0x22780>
   29208:	add	x2, sp, #0x8
   2920c:	mov	w0, wzr
   29210:	mov	x1, x23
   29214:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   29218:	ldr	w8, [sp, #8]
   2921c:	tbnz	w8, #8, 292cc <PyInit__decimal@@Base+0x22818>
   29220:	ldrb	w9, [x23]
   29224:	tbnz	x0, #63, 292b4 <PyInit__decimal@@Base+0x22800>
   29228:	tst	w9, #0x1
   2922c:	cneg	x23, x0, ne  // ne = any
   29230:	b	292d0 <PyInit__decimal@@Base+0x2281c>
   29234:	ldrb	w8, [x19]
   29238:	tbnz	w8, #5, 2927c <PyInit__decimal@@Base+0x227c8>
   2923c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   29240:	ldr	x9, [x19, #32]
   29244:	ldr	x1, [x21, #1344]
   29248:	cmp	x9, x1
   2924c:	b.le	2927c <PyInit__decimal@@Base+0x227c8>
   29250:	sturb	wzr, [x29, #-4]
   29254:	ldr	x0, [x19, #40]
   29258:	sub	x3, x29, #0x4
   2925c:	mov	w2, #0x8                   	// #8
   29260:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   29264:	str	x0, [x19, #40]
   29268:	ldurb	w8, [x29, #-4]
   2926c:	cbnz	w8, 29278 <PyInit__decimal@@Base+0x227c4>
   29270:	ldr	x8, [x21, #1344]
   29274:	str	x8, [x19, #32]
   29278:	ldrb	w8, [x19]
   2927c:	and	w8, w8, #0xf0
   29280:	orr	w8, w8, #0x4
   29284:	stp	xzr, xzr, [x19, #16]
   29288:	strb	w8, [x19]
   2928c:	str	xzr, [x19, #8]
   29290:	ldr	w8, [x20]
   29294:	orr	w8, w8, #0x100
   29298:	str	w8, [x20]
   2929c:	ldp	x20, x19, [sp, #64]
   292a0:	ldp	x22, x21, [sp, #48]
   292a4:	ldr	x23, [sp, #32]
   292a8:	ldp	x29, x30, [sp, #16]
   292ac:	add	sp, sp, #0x50
   292b0:	ret
   292b4:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   292b8:	cmp	x0, x23
   292bc:	b.ne	292c4 <PyInit__decimal@@Base+0x22810>  // b.any
   292c0:	tbnz	w9, #0, 292d0 <PyInit__decimal@@Base+0x2281c>
   292c4:	orr	w8, w8, #0x100
   292c8:	str	w8, [sp, #8]
   292cc:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   292d0:	tbnz	w8, #8, 2931c <PyInit__decimal@@Base+0x22868>
   292d4:	ldr	x8, [x22]
   292d8:	cmp	x23, x8
   292dc:	b.gt	2935c <PyInit__decimal@@Base+0x228a8>
   292e0:	neg	x8, x8
   292e4:	cmp	x23, x8
   292e8:	b.lt	2935c <PyInit__decimal@@Base+0x228a8>  // b.tstop
   292ec:	ldrb	w8, [x21]
   292f0:	tbnz	w8, #1, 2939c <PyInit__decimal@@Base+0x228e8>
   292f4:	tbnz	x23, #63, 293dc <PyInit__decimal@@Base+0x22928>
   292f8:	mov	x0, x19
   292fc:	mov	x1, x21
   29300:	mov	x2, x23
   29304:	mov	x3, x20
   29308:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2930c:	mov	x0, x19
   29310:	mov	x1, x22
   29314:	bl	27394 <PyInit__decimal@@Base+0x208e0>
   29318:	b	2929c <PyInit__decimal@@Base+0x227e8>
   2931c:	ldrb	w8, [x19]
   29320:	tbnz	w8, #5, 2927c <PyInit__decimal@@Base+0x227c8>
   29324:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   29328:	ldr	x9, [x19, #32]
   2932c:	ldr	x1, [x21, #1344]
   29330:	cmp	x9, x1
   29334:	b.le	2927c <PyInit__decimal@@Base+0x227c8>
   29338:	strb	wzr, [x29, #24]
   2933c:	ldr	x0, [x19, #40]
   29340:	add	x3, x29, #0x18
   29344:	mov	w2, #0x8                   	// #8
   29348:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2934c:	str	x0, [x19, #40]
   29350:	ldrb	w8, [x29, #24]
   29354:	cbnz	w8, 29278 <PyInit__decimal@@Base+0x227c4>
   29358:	b	29270 <PyInit__decimal@@Base+0x227bc>
   2935c:	ldrb	w8, [x19]
   29360:	tbnz	w8, #5, 2927c <PyInit__decimal@@Base+0x227c8>
   29364:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   29368:	ldr	x9, [x19, #32]
   2936c:	ldr	x1, [x21, #1344]
   29370:	cmp	x9, x1
   29374:	b.le	2927c <PyInit__decimal@@Base+0x227c8>
   29378:	strb	wzr, [x29, #28]
   2937c:	ldr	x0, [x19, #40]
   29380:	add	x3, x29, #0x1c
   29384:	mov	w2, #0x8                   	// #8
   29388:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2938c:	str	x0, [x19, #40]
   29390:	ldrb	w8, [x29, #28]
   29394:	cbnz	w8, 29278 <PyInit__decimal@@Base+0x227c4>
   29398:	b	29270 <PyInit__decimal@@Base+0x227bc>
   2939c:	cmp	x19, x21
   293a0:	b.eq	2929c <PyInit__decimal@@Base+0x227e8>  // b.none
   293a4:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   293a8:	ldr	x9, [x21, #24]
   293ac:	ldr	x11, [x10, #1344]
   293b0:	ldr	x10, [x19, #32]
   293b4:	cmp	x11, x9
   293b8:	csel	x1, x9, x11, lt  // lt = tstop
   293bc:	cmp	x1, x10
   293c0:	b.eq	2943c <PyInit__decimal@@Base+0x22988>  // b.none
   293c4:	ldrb	w11, [x19]
   293c8:	tbnz	w11, #5, 2941c <PyInit__decimal@@Base+0x22968>
   293cc:	mov	x0, x19
   293d0:	mov	x2, x20
   293d4:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   293d8:	b	29430 <PyInit__decimal@@Base+0x2297c>
   293dc:	cmp	x19, x21
   293e0:	b.eq	294b8 <PyInit__decimal@@Base+0x22a04>  // b.none
   293e4:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   293e8:	ldr	x9, [x21, #24]
   293ec:	ldr	x11, [x10, #1344]
   293f0:	ldr	x10, [x19, #32]
   293f4:	cmp	x11, x9
   293f8:	csel	x1, x9, x11, lt  // lt = tstop
   293fc:	cmp	x1, x10
   29400:	b.eq	2948c <PyInit__decimal@@Base+0x229d8>  // b.none
   29404:	ldrb	w11, [x19]
   29408:	tbnz	w11, #5, 2946c <PyInit__decimal@@Base+0x229b8>
   2940c:	mov	x0, x19
   29410:	mov	x2, x20
   29414:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   29418:	b	29480 <PyInit__decimal@@Base+0x229cc>
   2941c:	cmp	x1, x10
   29420:	b.le	2943c <PyInit__decimal@@Base+0x22988>
   29424:	mov	x0, x19
   29428:	mov	x2, x20
   2942c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   29430:	cbz	w0, 2929c <PyInit__decimal@@Base+0x227e8>
   29434:	ldr	x9, [x21, #24]
   29438:	ldrb	w8, [x21]
   2943c:	ldrb	w10, [x19]
   29440:	ldr	x0, [x19, #40]
   29444:	bfxil	w10, w8, #0, #4
   29448:	strb	w10, [x19]
   2944c:	ldur	q0, [x21, #8]
   29450:	str	x9, [x19, #24]
   29454:	stur	q0, [x19, #8]
   29458:	ldr	x8, [x21, #24]
   2945c:	ldr	x1, [x21, #40]
   29460:	lsl	x2, x8, #3
   29464:	bl	63c0 <memcpy@plt>
   29468:	b	2929c <PyInit__decimal@@Base+0x227e8>
   2946c:	cmp	x1, x10
   29470:	b.le	2948c <PyInit__decimal@@Base+0x229d8>
   29474:	mov	x0, x19
   29478:	mov	x2, x20
   2947c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   29480:	cbz	w0, 2929c <PyInit__decimal@@Base+0x227e8>
   29484:	ldr	x9, [x21, #24]
   29488:	ldrb	w8, [x21]
   2948c:	ldrb	w10, [x19]
   29490:	ldr	x0, [x19, #40]
   29494:	bfxil	w10, w8, #0, #4
   29498:	strb	w10, [x19]
   2949c:	ldur	q0, [x21, #8]
   294a0:	str	x9, [x19, #24]
   294a4:	stur	q0, [x19, #8]
   294a8:	ldr	x8, [x21, #24]
   294ac:	ldr	x1, [x21, #40]
   294b0:	lsl	x2, x8, #3
   294b4:	bl	63c0 <memcpy@plt>
   294b8:	mov	x0, x19
   294bc:	mov	x1, x22
   294c0:	bl	27394 <PyInit__decimal@@Base+0x208e0>
   294c4:	neg	x1, x23
   294c8:	mov	x0, x19
   294cc:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   294d0:	b	2929c <PyInit__decimal@@Base+0x227e8>
   294d4:	sub	sp, sp, #0x70
   294d8:	stp	x29, x30, [sp, #16]
   294dc:	stp	x28, x27, [sp, #32]
   294e0:	stp	x26, x25, [sp, #48]
   294e4:	stp	x24, x23, [sp, #64]
   294e8:	stp	x22, x21, [sp, #80]
   294ec:	stp	x20, x19, [sp, #96]
   294f0:	add	x29, sp, #0x10
   294f4:	ldrb	w8, [x1]
   294f8:	mov	x21, x4
   294fc:	mov	x19, x0
   29500:	tst	w8, #0xe
   29504:	b.ne	29530 <PyInit__decimal@@Base+0x22a7c>  // b.any
   29508:	ldrb	w9, [x2]
   2950c:	and	w10, w9, #0xe
   29510:	bfxil	w10, w8, #0, #1
   29514:	and	w8, w9, #0x1
   29518:	orr	w8, w8, w10
   2951c:	cbnz	w8, 29530 <PyInit__decimal@@Base+0x22a7c>
   29520:	ldr	x8, [x1, #8]
   29524:	cbnz	x8, 29530 <PyInit__decimal@@Base+0x22a7c>
   29528:	ldr	x8, [x2, #8]
   2952c:	cbz	x8, 295b8 <PyInit__decimal@@Base+0x22b04>
   29530:	ldrb	w8, [x19]
   29534:	tbnz	w8, #5, 29578 <PyInit__decimal@@Base+0x22ac4>
   29538:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2953c:	ldr	x9, [x19, #32]
   29540:	ldr	x1, [x20, #1344]
   29544:	cmp	x9, x1
   29548:	b.le	29578 <PyInit__decimal@@Base+0x22ac4>
   2954c:	sturb	wzr, [x29, #-4]
   29550:	ldr	x0, [x19, #40]
   29554:	sub	x3, x29, #0x4
   29558:	mov	w2, #0x8                   	// #8
   2955c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   29560:	str	x0, [x19, #40]
   29564:	ldurb	w8, [x29, #-4]
   29568:	cbnz	w8, 29574 <PyInit__decimal@@Base+0x22ac0>
   2956c:	ldr	x8, [x20, #1344]
   29570:	str	x8, [x19, #32]
   29574:	ldrb	w8, [x19]
   29578:	and	w8, w8, #0xf0
   2957c:	orr	w8, w8, #0x4
   29580:	stp	xzr, xzr, [x19, #16]
   29584:	strb	w8, [x19]
   29588:	str	xzr, [x19, #8]
   2958c:	ldr	w8, [x21]
   29590:	orr	w8, w8, #0x100
   29594:	str	w8, [x21]
   29598:	ldp	x20, x19, [sp, #96]
   2959c:	ldp	x22, x21, [sp, #80]
   295a0:	ldp	x24, x23, [sp, #64]
   295a4:	ldp	x26, x25, [sp, #48]
   295a8:	ldp	x28, x27, [sp, #32]
   295ac:	ldp	x29, x30, [sp, #16]
   295b0:	add	sp, sp, #0x70
   295b4:	ret
   295b8:	ldr	x8, [x2, #16]
   295bc:	ldr	x9, [x1, #16]
   295c0:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   295c4:	ldr	x10, [x23, #1344]
   295c8:	mov	x20, x3
   295cc:	cmp	x8, x9
   295d0:	csel	x24, x2, x1, gt
   295d4:	ldr	x9, [x24, #24]
   295d8:	ldr	x8, [x19, #32]
   295dc:	csel	x25, x1, x2, gt
   295e0:	cmp	x10, x9
   295e4:	csel	x1, x9, x10, lt  // lt = tstop
   295e8:	cmp	x1, x8
   295ec:	b.eq	29620 <PyInit__decimal@@Base+0x22b6c>  // b.none
   295f0:	ldrb	w9, [x19]
   295f4:	tbnz	w9, #5, 29608 <PyInit__decimal@@Base+0x22b54>
   295f8:	mov	x0, x19
   295fc:	mov	x2, x21
   29600:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   29604:	b	2961c <PyInit__decimal@@Base+0x22b68>
   29608:	cmp	x1, x8
   2960c:	b.le	29620 <PyInit__decimal@@Base+0x22b6c>
   29610:	mov	x0, x19
   29614:	mov	x2, x21
   29618:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2961c:	cbz	w0, 29598 <PyInit__decimal@@Base+0x22ae4>
   29620:	ldr	x12, [x25, #40]
   29624:	ldr	x8, [x24, #40]
   29628:	ldr	x9, [x25, #24]
   2962c:	adrp	x22, 44000 <PyInit__decimal@@Base+0x3d54c>
   29630:	ldr	x11, [x12]
   29634:	ldr	x10, [x8]
   29638:	sub	x9, x9, #0x1
   2963c:	cmp	x9, #0x1
   29640:	add	x22, x22, #0xca0
   29644:	mov	x9, xzr
   29648:	b.lt	296dc <PyInit__decimal@@Base+0x22c28>  // b.tstop
   2964c:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   29650:	movk	x13, #0xcccd
   29654:	mov	w14, #0xa                   	// #10
   29658:	mov	x16, xzr
   2965c:	mov	x15, xzr
   29660:	b	29680 <PyInit__decimal@@Base+0x22bcc>
   29664:	ldr	x10, [x22, x16]
   29668:	add	x16, x16, #0x8
   2966c:	cmp	x16, #0x98
   29670:	add	x15, x10, x15
   29674:	mov	x10, x18
   29678:	mov	x11, x17
   2967c:	b.eq	296b4 <PyInit__decimal@@Base+0x22c00>  // b.none
   29680:	umulh	x17, x11, x13
   29684:	umulh	x18, x10, x13
   29688:	lsr	x17, x17, #3
   2968c:	lsr	x18, x18, #3
   29690:	msub	x11, x17, x14, x11
   29694:	msub	x10, x18, x14, x10
   29698:	orr	w0, w10, w11
   2969c:	tst	x0, #0xe
   296a0:	b.ne	29c58 <PyInit__decimal@@Base+0x231a4>  // b.any
   296a4:	cmp	x11, x10
   296a8:	b.ne	29664 <PyInit__decimal@@Base+0x22bb0>  // b.any
   296ac:	mov	x10, xzr
   296b0:	b	29668 <PyInit__decimal@@Base+0x22bb4>
   296b4:	ldr	x10, [x19, #40]
   296b8:	str	x15, [x10, x9, lsl #3]
   296bc:	add	x9, x9, #0x1
   296c0:	ldr	x15, [x25, #24]
   296c4:	lsl	x10, x9, #3
   296c8:	ldr	x11, [x12, x10]
   296cc:	ldr	x10, [x8, x10]
   296d0:	sub	x15, x15, #0x1
   296d4:	cmp	x9, x15
   296d8:	b.lt	29658 <PyInit__decimal@@Base+0x22ba4>  // b.tstop
   296dc:	ldr	x25, [x22, #72]
   296e0:	cmp	x25, x11
   296e4:	b.ls	29710 <PyInit__decimal@@Base+0x22c5c>  // b.plast
   296e8:	ldr	x12, [x22, #32]
   296ec:	cmp	x12, x11
   296f0:	b.ls	29738 <PyInit__decimal@@Base+0x22c84>  // b.plast
   296f4:	ldr	x12, [x22, #16]
   296f8:	cmp	x12, x11
   296fc:	b.ls	2977c <PyInit__decimal@@Base+0x22cc8>  // b.plast
   29700:	ldr	x12, [x22, #8]
   29704:	cmp	x12, x11
   29708:	mov	w12, #0x1                   	// #1
   2970c:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   29710:	ldr	x12, [x22, #112]
   29714:	cmp	x12, x11
   29718:	b.ls	29754 <PyInit__decimal@@Base+0x22ca0>  // b.plast
   2971c:	ldr	x12, [x22, #88]
   29720:	cmp	x12, x11
   29724:	b.ls	2978c <PyInit__decimal@@Base+0x22cd8>  // b.plast
   29728:	ldr	x12, [x22, #80]
   2972c:	cmp	x12, x11
   29730:	mov	w12, #0xa                   	// #10
   29734:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   29738:	ldr	x12, [x22, #48]
   2973c:	cmp	x12, x11
   29740:	b.ls	297a8 <PyInit__decimal@@Base+0x22cf4>  // b.plast
   29744:	ldr	x12, [x22, #40]
   29748:	cmp	x12, x11
   2974c:	mov	w12, #0x5                   	// #5
   29750:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   29754:	ldr	x12, [x22, #144]
   29758:	cmp	x12, x11
   2975c:	b.ls	297c4 <PyInit__decimal@@Base+0x22d10>  // b.plast
   29760:	ldr	x12, [x22, #128]
   29764:	cmp	x12, x11
   29768:	b.ls	297d4 <PyInit__decimal@@Base+0x22d20>  // b.plast
   2976c:	ldr	x12, [x22, #120]
   29770:	cmp	x12, x11
   29774:	mov	w12, #0xf                   	// #15
   29778:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   2977c:	ldr	x12, [x22, #24]
   29780:	cmp	x12, x11
   29784:	mov	w12, #0x3                   	// #3
   29788:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   2978c:	ldr	x12, [x22, #104]
   29790:	cmp	x12, x11
   29794:	b.ls	29c98 <PyInit__decimal@@Base+0x231e4>  // b.plast
   29798:	ldr	x12, [x22, #96]
   2979c:	cmp	x12, x11
   297a0:	mov	w12, #0xc                   	// #12
   297a4:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   297a8:	ldr	x12, [x22, #64]
   297ac:	cmp	x12, x11
   297b0:	b.ls	29ca0 <PyInit__decimal@@Base+0x231ec>  // b.plast
   297b4:	ldr	x12, [x22, #56]
   297b8:	cmp	x12, x11
   297bc:	mov	w12, #0x7                   	// #7
   297c0:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   297c4:	ldr	x12, [x22, #152]
   297c8:	cmp	x12, x11
   297cc:	mov	w12, #0x13                  	// #19
   297d0:	b	297e0 <PyInit__decimal@@Base+0x22d2c>
   297d4:	ldr	x12, [x22, #136]
   297d8:	cmp	x12, x11
   297dc:	mov	w12, #0x11                  	// #17
   297e0:	cinc	x13, x12, ls  // ls = plast
   297e4:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   297e8:	mov	x14, xzr
   297ec:	mov	x12, xzr
   297f0:	movk	x15, #0xcccd
   297f4:	mov	w16, #0xa                   	// #10
   297f8:	b	29814 <PyInit__decimal@@Base+0x22d60>
   297fc:	ldr	x11, [x22, x14, lsl #3]
   29800:	add	x14, x14, #0x1
   29804:	cmp	x14, x13
   29808:	add	x12, x11, x12
   2980c:	mov	x11, x17
   29810:	b.cs	2984c <PyInit__decimal@@Base+0x22d98>  // b.hs, b.nlast
   29814:	mov	x18, x10
   29818:	umulh	x10, x11, x15
   2981c:	umulh	x0, x18, x15
   29820:	lsr	x17, x10, #3
   29824:	lsr	x10, x0, #3
   29828:	msub	x11, x17, x16, x11
   2982c:	msub	x18, x10, x16, x18
   29830:	orr	w0, w18, w11
   29834:	tst	x0, #0xe
   29838:	b.ne	29c58 <PyInit__decimal@@Base+0x231a4>  // b.any
   2983c:	cmp	x11, x18
   29840:	b.ne	297fc <PyInit__decimal@@Base+0x22d48>  // b.any
   29844:	mov	x11, xzr
   29848:	b	29800 <PyInit__decimal@@Base+0x22d4c>
   2984c:	sub	w11, w14, #0x1
   29850:	cmp	w11, #0x11
   29854:	b.hi	29890 <PyInit__decimal@@Base+0x22ddc>  // b.pmore
   29858:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   2985c:	movk	x11, #0xcccd
   29860:	mov	w13, #0xa                   	// #10
   29864:	umulh	x15, x10, x11
   29868:	lsr	x15, x15, #3
   2986c:	msub	x10, x15, x13, x10
   29870:	cmp	x10, #0x1
   29874:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29878:	ldr	x16, [x22, x14, lsl #3]
   2987c:	cmp	x14, #0x12
   29880:	add	x14, x14, #0x1
   29884:	madd	x12, x16, x10, x12
   29888:	mov	x10, x15
   2988c:	b.cc	29864 <PyInit__decimal@@Base+0x22db0>  // b.lo, b.ul, b.last
   29890:	ldr	x10, [x19, #40]
   29894:	str	x12, [x10, x9, lsl #3]
   29898:	ldr	x30, [x24, #24]
   2989c:	add	x9, x9, #0x1
   298a0:	cmp	x9, x30
   298a4:	b.ge	29bfc <PyInit__decimal@@Base+0x23148>  // b.tcont
   298a8:	mov	x13, #0xf5c3                	// #62915
   298ac:	mov	x14, #0xf7cf                	// #63439
   298b0:	mov	x15, #0x594b                	// #22859
   298b4:	mov	x16, #0x7843                	// #30787
   298b8:	mov	x17, #0x34db                	// #13531
   298bc:	mov	x18, #0x42bd                	// #17085
   298c0:	mov	x0, #0xcefd                	// #52989
   298c4:	mov	x1, #0x5a53                	// #23123
   298c8:	mov	x2, #0xd5bf                	// #54719
   298cc:	mov	x4, #0xaaff                	// #43775
   298d0:	mov	x5, #0x2233                	// #8755
   298d4:	mov	x6, #0x385                 	// #901
   298d8:	mov	x7, #0xcd81                	// #52609
   298dc:	mov	x26, #0xeac3                	// #60099
   298e0:	movk	x13, #0x5c28, lsl #16
   298e4:	movk	x14, #0xe353, lsl #16
   298e8:	movk	x15, #0x3886, lsl #16
   298ec:	movk	x16, #0x71b4, lsl #16
   298f0:	movk	x17, #0xd7b6, lsl #16
   298f4:	movk	x18, #0xe57a, lsl #16
   298f8:	movk	x0, #0x8461, lsl #16
   298fc:	movk	x1, #0xa09b, lsl #16
   29900:	movk	x2, #0xbded, lsl #16
   29904:	movk	x4, #0xcb24, lsl #16
   29908:	movk	x5, #0x5bd4, lsl #16
   2990c:	movk	x6, #0x92ed, lsl #16
   29910:	movk	x7, #0x5095, lsl #16
   29914:	movk	x26, #0xf3dc, lsl #16
   29918:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   2991c:	movk	x13, #0xc28f, lsl #32
   29920:	movk	x14, #0x9ba5, lsl #32
   29924:	movk	x15, #0xc5d6, lsl #32
   29928:	movk	x16, #0x5ac4, lsl #32
   2992c:	movk	x17, #0xde82, lsl #32
   29930:	movk	x18, #0x94d5, lsl #32
   29934:	movk	x0, #0x7711, lsl #32
   29938:	movk	x1, #0xb82f, lsl #32
   2993c:	movk	x2, #0xfece, lsl #32
   29940:	mov	w3, #0xcccd                	// #52429
   29944:	movk	x4, #0xff0b, lsl #32
   29948:	movk	x5, #0x3302, lsl #32
   2994c:	movk	x6, #0x84d0, lsl #32
   29950:	movk	x7, #0x4dc3, lsl #32
   29954:	movk	x26, #0x4075, lsl #32
   29958:	movk	x11, #0xcccd
   2995c:	mov	w12, #0xa                   	// #10
   29960:	movk	x13, #0x28f5, lsl #48
   29964:	movk	x14, #0x20c4, lsl #48
   29968:	movk	x15, #0x346d, lsl #48
   2996c:	movk	x16, #0xa7c, lsl #48
   29970:	movk	x17, #0x431b, lsl #48
   29974:	movk	x18, #0xd6bf, lsl #48
   29978:	movk	x0, #0xabcc, lsl #48
   2997c:	movk	x1, #0x44, lsl #48
   29980:	movk	x2, #0xdbe6, lsl #48
   29984:	movk	w3, #0xcccc, lsl #16
   29988:	movk	x4, #0xafeb, lsl #48
   2998c:	movk	x5, #0x232f, lsl #48
   29990:	movk	x6, #0x384b, lsl #48
   29994:	movk	x7, #0xb42, lsl #48
   29998:	movk	x26, #0x2, lsl #48
   2999c:	ldr	x30, [x8, x9, lsl #3]
   299a0:	umulh	x28, x30, x11
   299a4:	lsr	x28, x28, #3
   299a8:	msub	x27, x28, x12, x30
   299ac:	cmp	x27, #0x1
   299b0:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   299b4:	umulh	x27, x28, x11
   299b8:	lsr	x27, x27, #3
   299bc:	msub	x27, x27, x12, x28
   299c0:	cmp	x27, #0x1
   299c4:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   299c8:	lsr	x27, x30, #2
   299cc:	umulh	x27, x27, x13
   299d0:	lsr	x27, x27, #2
   299d4:	umulh	x28, x27, x11
   299d8:	lsr	x28, x28, #3
   299dc:	msub	x27, x28, x12, x27
   299e0:	cmp	x27, #0x1
   299e4:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   299e8:	lsr	x27, x30, #3
   299ec:	umulh	x27, x27, x14
   299f0:	lsr	x27, x27, #4
   299f4:	umulh	x28, x27, x11
   299f8:	lsr	x28, x28, #3
   299fc:	msub	x27, x28, x12, x27
   29a00:	cmp	x27, #0x1
   29a04:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29a08:	umulh	x27, x30, x15
   29a0c:	lsr	x27, x27, #11
   29a10:	umulh	x28, x27, x11
   29a14:	lsr	x28, x28, #3
   29a18:	msub	x27, x28, x12, x27
   29a1c:	cmp	x27, #0x1
   29a20:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29a24:	lsr	x27, x30, #5
   29a28:	umulh	x27, x27, x16
   29a2c:	lsr	x27, x27, #7
   29a30:	umulh	x28, x27, x11
   29a34:	lsr	x28, x28, #3
   29a38:	msub	x27, x28, x12, x27
   29a3c:	cmp	x27, #0x1
   29a40:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29a44:	umulh	x27, x30, x17
   29a48:	lsr	x27, x27, #18
   29a4c:	umulh	x28, x27, x11
   29a50:	lsr	x28, x28, #3
   29a54:	msub	x27, x28, x12, x27
   29a58:	cmp	x27, #0x1
   29a5c:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29a60:	umulh	x27, x30, x18
   29a64:	lsr	x27, x27, #23
   29a68:	umulh	x28, x27, x11
   29a6c:	lsr	x28, x28, #3
   29a70:	msub	x27, x28, x12, x27
   29a74:	cmp	x27, #0x1
   29a78:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29a7c:	umulh	x27, x30, x0
   29a80:	lsr	x27, x27, #26
   29a84:	umulh	x28, x27, x11
   29a88:	lsr	x28, x28, #3
   29a8c:	msub	x27, x28, x12, x27
   29a90:	cmp	x27, #0x1
   29a94:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29a98:	lsr	x27, x30, #9
   29a9c:	umulh	x27, x27, x1
   29aa0:	lsr	x27, x27, #11
   29aa4:	umulh	x28, x27, x11
   29aa8:	lsr	x28, x28, #3
   29aac:	msub	x27, x28, x12, x27
   29ab0:	cmp	x27, #0x1
   29ab4:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29ab8:	umulh	x27, x30, x2
   29abc:	lsr	x27, x27, #33
   29ac0:	mul	x28, x27, x3
   29ac4:	lsr	x28, x28, #35
   29ac8:	msub	w27, w28, w12, w27
   29acc:	cmp	w27, #0x1
   29ad0:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29ad4:	umulh	x27, x30, x4
   29ad8:	lsr	x27, x27, #36
   29adc:	mul	x28, x27, x3
   29ae0:	lsr	x28, x28, #35
   29ae4:	msub	w27, w28, w12, w27
   29ae8:	cmp	w27, #0x1
   29aec:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29af0:	umulh	x27, x30, x5
   29af4:	lsr	x27, x27, #37
   29af8:	mul	x28, x27, x3
   29afc:	lsr	x28, x28, #35
   29b00:	msub	w27, w28, w12, w27
   29b04:	cmp	w27, #0x1
   29b08:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29b0c:	umulh	x27, x30, x6
   29b10:	lsr	x27, x27, #41
   29b14:	mul	x28, x27, x3
   29b18:	lsr	x28, x28, #35
   29b1c:	msub	w27, w28, w12, w27
   29b20:	cmp	w27, #0x1
   29b24:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29b28:	umulh	x27, x30, x7
   29b2c:	lsr	x27, x27, #42
   29b30:	mul	x28, x27, x3
   29b34:	lsr	x28, x28, #35
   29b38:	msub	w27, w28, w12, w27
   29b3c:	cmp	w27, #0x1
   29b40:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29b44:	lsr	x27, x30, #15
   29b48:	umulh	x27, x27, x26
   29b4c:	ubfx	x27, x27, #20, #16
   29b50:	umull	x28, w27, w3
   29b54:	lsr	x28, x28, #35
   29b58:	msub	w27, w28, w12, w27
   29b5c:	cmp	w27, #0x1
   29b60:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29b64:	mov	x27, #0x7857                	// #30807
   29b68:	movk	x27, #0xb113, lsl #16
   29b6c:	movk	x27, #0x652f, lsl #32
   29b70:	movk	x27, #0x39a5, lsl #48
   29b74:	umulh	x27, x30, x27
   29b78:	lsr	x27, x27, #51
   29b7c:	mul	x28, x27, x3
   29b80:	lsr	x28, x28, #35
   29b84:	msub	w27, w28, w12, w27
   29b88:	cmp	w27, #0x1
   29b8c:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29b90:	mov	x28, #0x1b53                	// #6995
   29b94:	movk	x28, #0xd519, lsl #16
   29b98:	lsr	x27, x30, #17
   29b9c:	movk	x28, #0x5c3b, lsl #32
   29ba0:	umulh	x27, x27, x28
   29ba4:	ubfx	w27, w27, #22, #8
   29ba8:	umull	x28, w27, w3
   29bac:	lsr	x28, x28, #35
   29bb0:	msub	w27, w28, w12, w27
   29bb4:	cmp	w27, #0x1
   29bb8:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29bbc:	mov	x28, #0x490f                	// #18703
   29bc0:	movk	x28, #0x7747, lsl #16
   29bc4:	lsr	x27, x30, #18
   29bc8:	movk	x28, #0x49c9, lsl #32
   29bcc:	umulh	x27, x27, x28
   29bd0:	ubfx	x27, x27, #24, #8
   29bd4:	umull	x28, w27, w3
   29bd8:	lsr	x28, x28, #35
   29bdc:	msub	w27, w28, w12, w27
   29be0:	cmp	w27, #0x1
   29be4:	b.hi	29c58 <PyInit__decimal@@Base+0x231a4>  // b.pmore
   29be8:	str	x30, [x10, x9, lsl #3]
   29bec:	ldr	x30, [x24, #24]
   29bf0:	add	x9, x9, #0x1
   29bf4:	cmp	x9, x30
   29bf8:	b.lt	2999c <PyInit__decimal@@Base+0x22ee8>  // b.tstop
   29bfc:	ldrb	w8, [x19]
   29c00:	sub	x10, x10, #0x8
   29c04:	str	xzr, [x19, #8]
   29c08:	and	w9, w8, #0xf0
   29c0c:	strb	w9, [x19]
   29c10:	mov	x9, x30
   29c14:	cmp	x30, #0x2
   29c18:	b.lt	29c28 <PyInit__decimal@@Base+0x23174>  // b.tstop
   29c1c:	ldr	x11, [x10, x9, lsl #3]
   29c20:	sub	x30, x9, #0x1
   29c24:	cbz	x11, 29c10 <PyInit__decimal@@Base+0x2315c>
   29c28:	str	x9, [x19, #24]
   29c2c:	ldr	x11, [x23, #1344]
   29c30:	ldr	x10, [x19, #32]
   29c34:	cmp	x11, x9
   29c38:	csel	x1, x9, x11, lt  // lt = tstop
   29c3c:	cmp	x1, x10
   29c40:	b.eq	29cbc <PyInit__decimal@@Base+0x23208>  // b.none
   29c44:	tbnz	w8, #5, 29ca8 <PyInit__decimal@@Base+0x231f4>
   29c48:	mov	x0, x19
   29c4c:	mov	x2, x21
   29c50:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   29c54:	b	29cbc <PyInit__decimal@@Base+0x23208>
   29c58:	ldrb	w8, [x19]
   29c5c:	tbnz	w8, #5, 29578 <PyInit__decimal@@Base+0x22ac4>
   29c60:	ldr	x9, [x19, #32]
   29c64:	ldr	x1, [x23, #1344]
   29c68:	cmp	x9, x1
   29c6c:	b.le	29578 <PyInit__decimal@@Base+0x22ac4>
   29c70:	strb	wzr, [sp, #8]
   29c74:	ldr	x0, [x19, #40]
   29c78:	add	x3, sp, #0x8
   29c7c:	mov	w2, #0x8                   	// #8
   29c80:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   29c84:	str	x0, [x19, #40]
   29c88:	ldrb	w8, [sp, #8]
   29c8c:	cbnz	w8, 29574 <PyInit__decimal@@Base+0x22ac0>
   29c90:	ldr	x8, [x23, #1344]
   29c94:	b	29570 <PyInit__decimal@@Base+0x22abc>
   29c98:	mov	w13, #0xe                   	// #14
   29c9c:	b	297e4 <PyInit__decimal@@Base+0x22d30>
   29ca0:	mov	w13, #0x9                   	// #9
   29ca4:	b	297e4 <PyInit__decimal@@Base+0x22d30>
   29ca8:	cmp	x1, x10
   29cac:	b.le	29cbc <PyInit__decimal@@Base+0x23208>
   29cb0:	mov	x0, x19
   29cb4:	mov	x2, x21
   29cb8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   29cbc:	ldr	x9, [x19, #40]
   29cc0:	ldr	x8, [x19, #24]
   29cc4:	add	x9, x9, x8, lsl #3
   29cc8:	ldur	x9, [x9, #-8]
   29ccc:	cmp	x25, x9
   29cd0:	b.ls	29cfc <PyInit__decimal@@Base+0x23248>  // b.plast
   29cd4:	ldr	x10, [x22, #32]
   29cd8:	cmp	x10, x9
   29cdc:	b.ls	29d24 <PyInit__decimal@@Base+0x23270>  // b.plast
   29ce0:	ldr	x10, [x22, #16]
   29ce4:	cmp	x10, x9
   29ce8:	b.ls	29d68 <PyInit__decimal@@Base+0x232b4>  // b.plast
   29cec:	ldr	x10, [x22, #8]
   29cf0:	cmp	x10, x9
   29cf4:	mov	w9, #0x1                   	// #1
   29cf8:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29cfc:	ldr	x10, [x22, #112]
   29d00:	cmp	x10, x9
   29d04:	b.ls	29d40 <PyInit__decimal@@Base+0x2328c>  // b.plast
   29d08:	ldr	x10, [x22, #88]
   29d0c:	cmp	x10, x9
   29d10:	b.ls	29d78 <PyInit__decimal@@Base+0x232c4>  // b.plast
   29d14:	ldr	x10, [x22, #80]
   29d18:	cmp	x10, x9
   29d1c:	mov	w9, #0xa                   	// #10
   29d20:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29d24:	ldr	x10, [x22, #48]
   29d28:	cmp	x10, x9
   29d2c:	b.ls	29d94 <PyInit__decimal@@Base+0x232e0>  // b.plast
   29d30:	ldr	x10, [x22, #40]
   29d34:	cmp	x10, x9
   29d38:	mov	w9, #0x5                   	// #5
   29d3c:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29d40:	ldr	x10, [x22, #144]
   29d44:	cmp	x10, x9
   29d48:	b.ls	29db0 <PyInit__decimal@@Base+0x232fc>  // b.plast
   29d4c:	ldr	x10, [x22, #128]
   29d50:	cmp	x10, x9
   29d54:	b.ls	29dc0 <PyInit__decimal@@Base+0x2330c>  // b.plast
   29d58:	ldr	x10, [x22, #120]
   29d5c:	cmp	x10, x9
   29d60:	mov	w9, #0xf                   	// #15
   29d64:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29d68:	ldr	x10, [x22, #24]
   29d6c:	cmp	x10, x9
   29d70:	mov	w9, #0x3                   	// #3
   29d74:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29d78:	ldr	x10, [x22, #104]
   29d7c:	cmp	x10, x9
   29d80:	b.ls	29e08 <PyInit__decimal@@Base+0x23354>  // b.plast
   29d84:	ldr	x10, [x22, #96]
   29d88:	cmp	x10, x9
   29d8c:	mov	w9, #0xc                   	// #12
   29d90:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29d94:	ldr	x10, [x22, #64]
   29d98:	cmp	x10, x9
   29d9c:	b.ls	29e10 <PyInit__decimal@@Base+0x2335c>  // b.plast
   29da0:	ldr	x10, [x22, #56]
   29da4:	cmp	x10, x9
   29da8:	mov	w9, #0x7                   	// #7
   29dac:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29db0:	ldr	x10, [x22, #152]
   29db4:	cmp	x10, x9
   29db8:	mov	w9, #0x13                  	// #19
   29dbc:	b	29dcc <PyInit__decimal@@Base+0x23318>
   29dc0:	ldr	x10, [x22, #136]
   29dc4:	cmp	x10, x9
   29dc8:	mov	w9, #0x11                  	// #17
   29dcc:	cinc	x9, x9, ls  // ls = plast
   29dd0:	mov	w10, #0x13                  	// #19
   29dd4:	madd	x8, x8, x10, x9
   29dd8:	sub	x8, x8, #0x13
   29ddc:	str	x8, [x19, #16]
   29de0:	mov	x0, x19
   29de4:	mov	x1, x20
   29de8:	ldp	x20, x19, [sp, #96]
   29dec:	ldp	x22, x21, [sp, #80]
   29df0:	ldp	x24, x23, [sp, #64]
   29df4:	ldp	x26, x25, [sp, #48]
   29df8:	ldp	x28, x27, [sp, #32]
   29dfc:	ldp	x29, x30, [sp, #16]
   29e00:	add	sp, sp, #0x70
   29e04:	b	27394 <PyInit__decimal@@Base+0x208e0>
   29e08:	mov	w9, #0xe                   	// #14
   29e0c:	b	29dd0 <PyInit__decimal@@Base+0x2331c>
   29e10:	mov	w9, #0x9                   	// #9
   29e14:	b	29dd0 <PyInit__decimal@@Base+0x2331c>
   29e18:	stp	x29, x30, [sp, #-48]!
   29e1c:	stp	x22, x21, [sp, #16]
   29e20:	stp	x20, x19, [sp, #32]
   29e24:	mov	x29, sp
   29e28:	ldrb	w8, [x1]
   29e2c:	mov	x19, x3
   29e30:	mov	x20, x2
   29e34:	mov	x21, x1
   29e38:	tst	w8, #0xe
   29e3c:	mov	x22, x0
   29e40:	b.eq	29e70 <PyInit__decimal@@Base+0x233bc>  // b.none
   29e44:	mov	x0, x22
   29e48:	mov	x1, x21
   29e4c:	mov	x2, x20
   29e50:	mov	x3, x19
   29e54:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   29e58:	cbz	w0, 29e6c <PyInit__decimal@@Base+0x233b8>
   29e5c:	ldp	x20, x19, [sp, #32]
   29e60:	ldp	x22, x21, [sp, #16]
   29e64:	ldp	x29, x30, [sp], #48
   29e68:	ret
   29e6c:	ldrb	w8, [x21]
   29e70:	mov	x0, x22
   29e74:	mov	x1, x21
   29e78:	mov	x2, x20
   29e7c:	mov	x3, x19
   29e80:	tbnz	w8, #0, 29e94 <PyInit__decimal@@Base+0x233e0>
   29e84:	ldp	x20, x19, [sp, #32]
   29e88:	ldp	x22, x21, [sp, #16]
   29e8c:	ldp	x29, x30, [sp], #48
   29e90:	b	2a078 <PyInit__decimal@@Base+0x235c4>
   29e94:	ldp	x20, x19, [sp, #32]
   29e98:	ldp	x22, x21, [sp, #16]
   29e9c:	ldp	x29, x30, [sp], #48
   29ea0:	b	29ea4 <PyInit__decimal@@Base+0x233f0>
   29ea4:	stp	x29, x30, [sp, #-48]!
   29ea8:	stp	x22, x21, [sp, #16]
   29eac:	stp	x20, x19, [sp, #32]
   29eb0:	mov	x29, sp
   29eb4:	ldrb	w9, [x1]
   29eb8:	mov	x19, x3
   29ebc:	mov	x20, x2
   29ec0:	mov	x22, x1
   29ec4:	tst	w9, #0xe
   29ec8:	mov	x21, x0
   29ecc:	b.eq	29efc <PyInit__decimal@@Base+0x23448>  // b.none
   29ed0:	mov	x0, x21
   29ed4:	mov	x1, x22
   29ed8:	mov	x2, x20
   29edc:	mov	x3, x19
   29ee0:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   29ee4:	cbz	w0, 29ef8 <PyInit__decimal@@Base+0x23444>
   29ee8:	ldp	x20, x19, [sp, #32]
   29eec:	ldp	x22, x21, [sp, #16]
   29ef0:	ldp	x29, x30, [sp], #48
   29ef4:	ret
   29ef8:	ldrb	w9, [x22]
   29efc:	tst	w9, #0xe
   29f00:	b.ne	29f24 <PyInit__decimal@@Base+0x23470>  // b.any
   29f04:	ldr	x1, [x22, #40]
   29f08:	ldr	x10, [x22, #24]
   29f0c:	add	x8, x1, x10, lsl #3
   29f10:	ldur	x8, [x8, #-8]
   29f14:	cbnz	x8, 29f24 <PyInit__decimal@@Base+0x23470>
   29f18:	ldr	w8, [x20, #36]
   29f1c:	cmp	w8, #0x3
   29f20:	b.ne	29fdc <PyInit__decimal@@Base+0x23528>  // b.any
   29f24:	cmp	x21, x22
   29f28:	b.eq	29fb4 <PyInit__decimal@@Base+0x23500>  // b.none
   29f2c:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   29f30:	ldr	x8, [x22, #24]
   29f34:	ldr	x11, [x10, #1344]
   29f38:	ldr	x10, [x21, #32]
   29f3c:	cmp	x11, x8
   29f40:	csel	x1, x8, x11, lt  // lt = tstop
   29f44:	cmp	x1, x10
   29f48:	b.eq	29f88 <PyInit__decimal@@Base+0x234d4>  // b.none
   29f4c:	ldrb	w11, [x21]
   29f50:	tbnz	w11, #5, 29f68 <PyInit__decimal@@Base+0x234b4>
   29f54:	mov	x0, x21
   29f58:	mov	x2, x19
   29f5c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   29f60:	cbnz	w0, 29f80 <PyInit__decimal@@Base+0x234cc>
   29f64:	b	29fc0 <PyInit__decimal@@Base+0x2350c>
   29f68:	cmp	x1, x10
   29f6c:	b.le	29f88 <PyInit__decimal@@Base+0x234d4>
   29f70:	mov	x0, x21
   29f74:	mov	x2, x19
   29f78:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   29f7c:	cbz	w0, 29fc0 <PyInit__decimal@@Base+0x2350c>
   29f80:	ldr	x8, [x22, #24]
   29f84:	ldrb	w9, [x22]
   29f88:	ldrb	w10, [x21]
   29f8c:	ldr	x0, [x21, #40]
   29f90:	bfxil	w10, w9, #0, #4
   29f94:	strb	w10, [x21]
   29f98:	ldur	q0, [x22, #8]
   29f9c:	str	x8, [x21, #24]
   29fa0:	stur	q0, [x21, #8]
   29fa4:	ldr	x8, [x22, #24]
   29fa8:	ldr	x1, [x22, #40]
   29fac:	lsl	x2, x8, #3
   29fb0:	bl	63c0 <memcpy@plt>
   29fb4:	ldrb	w8, [x21]
   29fb8:	eor	w8, w8, #0x1
   29fbc:	strb	w8, [x21]
   29fc0:	mov	x0, x21
   29fc4:	mov	x1, x20
   29fc8:	mov	x2, x19
   29fcc:	ldp	x20, x19, [sp, #32]
   29fd0:	ldp	x22, x21, [sp, #16]
   29fd4:	ldp	x29, x30, [sp], #48
   29fd8:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   29fdc:	cmp	x21, x22
   29fe0:	b.eq	2a06c <PyInit__decimal@@Base+0x235b8>  // b.none
   29fe4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   29fe8:	ldr	x8, [x8, #1344]
   29fec:	ldr	x11, [x21, #32]
   29ff0:	cmp	x8, x10
   29ff4:	csel	x8, x10, x8, lt  // lt = tstop
   29ff8:	cmp	x8, x11
   29ffc:	b.eq	2a044 <PyInit__decimal@@Base+0x23590>  // b.none
   2a000:	ldrb	w12, [x21]
   2a004:	tbnz	w12, #5, 2a01c <PyInit__decimal@@Base+0x23568>
   2a008:	mov	x0, x21
   2a00c:	mov	x1, x8
   2a010:	mov	x2, x19
   2a014:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2a018:	b	2a034 <PyInit__decimal@@Base+0x23580>
   2a01c:	cmp	x8, x11
   2a020:	b.le	2a044 <PyInit__decimal@@Base+0x23590>
   2a024:	mov	x0, x21
   2a028:	mov	x1, x8
   2a02c:	mov	x2, x19
   2a030:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2a034:	cbz	w0, 29fc0 <PyInit__decimal@@Base+0x2350c>
   2a038:	ldr	x10, [x22, #24]
   2a03c:	ldrb	w9, [x22]
   2a040:	ldr	x1, [x22, #40]
   2a044:	ldrb	w8, [x21]
   2a048:	ldr	x0, [x21, #40]
   2a04c:	bfxil	w8, w9, #0, #4
   2a050:	strb	w8, [x21]
   2a054:	ldur	q0, [x22, #8]
   2a058:	str	x10, [x21, #24]
   2a05c:	stur	q0, [x21, #8]
   2a060:	ldr	x8, [x22, #24]
   2a064:	lsl	x2, x8, #3
   2a068:	bl	63c0 <memcpy@plt>
   2a06c:	ldrb	w8, [x21]
   2a070:	and	w8, w8, #0xfe
   2a074:	b	29fbc <PyInit__decimal@@Base+0x23508>
   2a078:	stp	x29, x30, [sp, #-48]!
   2a07c:	stp	x22, x21, [sp, #16]
   2a080:	stp	x20, x19, [sp, #32]
   2a084:	mov	x29, sp
   2a088:	ldrb	w9, [x1]
   2a08c:	mov	x19, x3
   2a090:	mov	x20, x2
   2a094:	mov	x22, x1
   2a098:	tst	w9, #0xe
   2a09c:	mov	x21, x0
   2a0a0:	b.eq	2a0d0 <PyInit__decimal@@Base+0x2361c>  // b.none
   2a0a4:	mov	x0, x21
   2a0a8:	mov	x1, x22
   2a0ac:	mov	x2, x20
   2a0b0:	mov	x3, x19
   2a0b4:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   2a0b8:	cbz	w0, 2a0cc <PyInit__decimal@@Base+0x23618>
   2a0bc:	ldp	x20, x19, [sp, #32]
   2a0c0:	ldp	x22, x21, [sp, #16]
   2a0c4:	ldp	x29, x30, [sp], #48
   2a0c8:	ret
   2a0cc:	ldrb	w9, [x22]
   2a0d0:	tst	w9, #0xe
   2a0d4:	b.ne	2a0f8 <PyInit__decimal@@Base+0x23644>  // b.any
   2a0d8:	ldr	x1, [x22, #40]
   2a0dc:	ldr	x10, [x22, #24]
   2a0e0:	add	x8, x1, x10, lsl #3
   2a0e4:	ldur	x8, [x8, #-8]
   2a0e8:	cbnz	x8, 2a0f8 <PyInit__decimal@@Base+0x23644>
   2a0ec:	ldr	w8, [x20, #36]
   2a0f0:	cmp	w8, #0x3
   2a0f4:	b.ne	2a1a4 <PyInit__decimal@@Base+0x236f0>  // b.any
   2a0f8:	cmp	x21, x22
   2a0fc:	b.eq	2a188 <PyInit__decimal@@Base+0x236d4>  // b.none
   2a100:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   2a104:	ldr	x8, [x22, #24]
   2a108:	ldr	x11, [x10, #1344]
   2a10c:	ldr	x10, [x21, #32]
   2a110:	cmp	x11, x8
   2a114:	csel	x1, x8, x11, lt  // lt = tstop
   2a118:	cmp	x1, x10
   2a11c:	b.eq	2a15c <PyInit__decimal@@Base+0x236a8>  // b.none
   2a120:	ldrb	w11, [x21]
   2a124:	tbnz	w11, #5, 2a13c <PyInit__decimal@@Base+0x23688>
   2a128:	mov	x0, x21
   2a12c:	mov	x2, x19
   2a130:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2a134:	cbnz	w0, 2a154 <PyInit__decimal@@Base+0x236a0>
   2a138:	b	2a188 <PyInit__decimal@@Base+0x236d4>
   2a13c:	cmp	x1, x10
   2a140:	b.le	2a15c <PyInit__decimal@@Base+0x236a8>
   2a144:	mov	x0, x21
   2a148:	mov	x2, x19
   2a14c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2a150:	cbz	w0, 2a188 <PyInit__decimal@@Base+0x236d4>
   2a154:	ldr	x8, [x22, #24]
   2a158:	ldrb	w9, [x22]
   2a15c:	ldrb	w10, [x21]
   2a160:	ldr	x0, [x21, #40]
   2a164:	bfxil	w10, w9, #0, #4
   2a168:	strb	w10, [x21]
   2a16c:	ldur	q0, [x22, #8]
   2a170:	str	x8, [x21, #24]
   2a174:	stur	q0, [x21, #8]
   2a178:	ldr	x8, [x22, #24]
   2a17c:	ldr	x1, [x22, #40]
   2a180:	lsl	x2, x8, #3
   2a184:	bl	63c0 <memcpy@plt>
   2a188:	mov	x0, x21
   2a18c:	mov	x1, x20
   2a190:	mov	x2, x19
   2a194:	ldp	x20, x19, [sp, #32]
   2a198:	ldp	x22, x21, [sp, #16]
   2a19c:	ldp	x29, x30, [sp], #48
   2a1a0:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2a1a4:	cmp	x21, x22
   2a1a8:	b.eq	2a234 <PyInit__decimal@@Base+0x23780>  // b.none
   2a1ac:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2a1b0:	ldr	x8, [x8, #1344]
   2a1b4:	ldr	x11, [x21, #32]
   2a1b8:	cmp	x8, x10
   2a1bc:	csel	x8, x10, x8, lt  // lt = tstop
   2a1c0:	cmp	x8, x11
   2a1c4:	b.eq	2a20c <PyInit__decimal@@Base+0x23758>  // b.none
   2a1c8:	ldrb	w12, [x21]
   2a1cc:	tbnz	w12, #5, 2a1e4 <PyInit__decimal@@Base+0x23730>
   2a1d0:	mov	x0, x21
   2a1d4:	mov	x1, x8
   2a1d8:	mov	x2, x19
   2a1dc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2a1e0:	b	2a1fc <PyInit__decimal@@Base+0x23748>
   2a1e4:	cmp	x8, x11
   2a1e8:	b.le	2a20c <PyInit__decimal@@Base+0x23758>
   2a1ec:	mov	x0, x21
   2a1f0:	mov	x1, x8
   2a1f4:	mov	x2, x19
   2a1f8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2a1fc:	cbz	w0, 2a188 <PyInit__decimal@@Base+0x236d4>
   2a200:	ldr	x10, [x22, #24]
   2a204:	ldrb	w9, [x22]
   2a208:	ldr	x1, [x22, #40]
   2a20c:	ldrb	w8, [x21]
   2a210:	ldr	x0, [x21, #40]
   2a214:	bfxil	w8, w9, #0, #4
   2a218:	strb	w8, [x21]
   2a21c:	ldur	q0, [x22, #8]
   2a220:	str	x10, [x21, #24]
   2a224:	stur	q0, [x21, #8]
   2a228:	ldr	x8, [x22, #24]
   2a22c:	lsl	x2, x8, #3
   2a230:	bl	63c0 <memcpy@plt>
   2a234:	ldrb	w8, [x21]
   2a238:	and	w8, w8, #0xfe
   2a23c:	strb	w8, [x21]
   2a240:	b	2a188 <PyInit__decimal@@Base+0x236d4>
   2a244:	sub	sp, sp, #0x50
   2a248:	stp	x29, x30, [sp, #16]
   2a24c:	str	x23, [sp, #32]
   2a250:	stp	x22, x21, [sp, #48]
   2a254:	stp	x20, x19, [sp, #64]
   2a258:	add	x29, sp, #0x10
   2a25c:	ldrb	w8, [x1]
   2a260:	mov	x20, x4
   2a264:	mov	x23, x3
   2a268:	mov	x22, x2
   2a26c:	mov	x21, x1
   2a270:	tst	w8, #0xe
   2a274:	mov	x19, x0
   2a278:	b.ne	2a288 <PyInit__decimal@@Base+0x237d4>  // b.any
   2a27c:	ldrb	w8, [x22]
   2a280:	tst	w8, #0xe
   2a284:	b.eq	2a388 <PyInit__decimal@@Base+0x238d4>  // b.none
   2a288:	mov	x0, x19
   2a28c:	mov	x1, x21
   2a290:	mov	x2, x22
   2a294:	mov	x3, x23
   2a298:	mov	x4, x20
   2a29c:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2a2a0:	cbnz	w0, 2a424 <PyInit__decimal@@Base+0x23970>
   2a2a4:	ldrb	w9, [x22]
   2a2a8:	ldrb	w10, [x21]
   2a2ac:	and	w21, w9, #0x1
   2a2b0:	tbnz	w10, #1, 2a30c <PyInit__decimal@@Base+0x23858>
   2a2b4:	ldrb	w8, [x19]
   2a2b8:	tbnz	w8, #5, 2a2fc <PyInit__decimal@@Base+0x23848>
   2a2bc:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2a2c0:	ldr	x9, [x19, #32]
   2a2c4:	ldr	x1, [x20, #1344]
   2a2c8:	cmp	x9, x1
   2a2cc:	b.le	2a2fc <PyInit__decimal@@Base+0x23848>
   2a2d0:	strb	wzr, [x29, #24]
   2a2d4:	ldr	x0, [x19, #40]
   2a2d8:	add	x3, x29, #0x18
   2a2dc:	mov	w2, #0x8                   	// #8
   2a2e0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2a2e4:	str	x0, [x19, #40]
   2a2e8:	ldrb	w8, [x29, #24]
   2a2ec:	cbnz	w8, 2a2f8 <PyInit__decimal@@Base+0x23844>
   2a2f0:	ldr	x8, [x20, #1344]
   2a2f4:	str	x8, [x19, #32]
   2a2f8:	ldrb	w8, [x19]
   2a2fc:	and	w8, w8, #0xf0
   2a300:	str	xzr, [x19, #24]
   2a304:	orr	w8, w21, w8
   2a308:	b	2a418 <PyInit__decimal@@Base+0x23964>
   2a30c:	ldrb	w8, [x19]
   2a310:	and	w22, w10, #0x1
   2a314:	tbz	w9, #1, 2a3c8 <PyInit__decimal@@Base+0x23914>
   2a318:	cmp	w22, w21
   2a31c:	b.eq	2a3c8 <PyInit__decimal@@Base+0x23914>  // b.none
   2a320:	tbnz	w8, #5, 2a364 <PyInit__decimal@@Base+0x238b0>
   2a324:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2a328:	ldr	x9, [x19, #32]
   2a32c:	ldr	x1, [x21, #1344]
   2a330:	cmp	x9, x1
   2a334:	b.le	2a364 <PyInit__decimal@@Base+0x238b0>
   2a338:	sturb	wzr, [x29, #-4]
   2a33c:	ldr	x0, [x19, #40]
   2a340:	sub	x3, x29, #0x4
   2a344:	mov	w2, #0x8                   	// #8
   2a348:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2a34c:	str	x0, [x19, #40]
   2a350:	ldurb	w8, [x29, #-4]
   2a354:	cbnz	w8, 2a360 <PyInit__decimal@@Base+0x238ac>
   2a358:	ldr	x8, [x21, #1344]
   2a35c:	str	x8, [x19, #32]
   2a360:	ldrb	w8, [x19]
   2a364:	and	w8, w8, #0xf0
   2a368:	orr	w8, w8, #0x4
   2a36c:	stp	xzr, xzr, [x19, #16]
   2a370:	strb	w8, [x19]
   2a374:	str	xzr, [x19, #8]
   2a378:	ldr	w8, [x20]
   2a37c:	orr	w8, w8, #0x100
   2a380:	str	w8, [x20]
   2a384:	b	2a424 <PyInit__decimal@@Base+0x23970>
   2a388:	and	w3, w8, #0x1
   2a38c:	mov	x0, x19
   2a390:	mov	x1, x21
   2a394:	mov	x2, x22
   2a398:	mov	x4, x23
   2a39c:	mov	x5, x20
   2a3a0:	bl	2a43c <PyInit__decimal@@Base+0x23988>
   2a3a4:	mov	x0, x19
   2a3a8:	mov	x1, x23
   2a3ac:	mov	x2, x20
   2a3b0:	ldp	x20, x19, [sp, #64]
   2a3b4:	ldp	x22, x21, [sp, #48]
   2a3b8:	ldr	x23, [sp, #32]
   2a3bc:	ldp	x29, x30, [sp, #16]
   2a3c0:	add	sp, sp, #0x50
   2a3c4:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2a3c8:	tbnz	w8, #5, 2a40c <PyInit__decimal@@Base+0x23958>
   2a3cc:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2a3d0:	ldr	x9, [x19, #32]
   2a3d4:	ldr	x1, [x20, #1344]
   2a3d8:	cmp	x9, x1
   2a3dc:	b.le	2a40c <PyInit__decimal@@Base+0x23958>
   2a3e0:	strb	wzr, [x29, #28]
   2a3e4:	ldr	x0, [x19, #40]
   2a3e8:	add	x3, x29, #0x1c
   2a3ec:	mov	w2, #0x8                   	// #8
   2a3f0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2a3f4:	str	x0, [x19, #40]
   2a3f8:	ldrb	w8, [x29, #28]
   2a3fc:	cbnz	w8, 2a408 <PyInit__decimal@@Base+0x23954>
   2a400:	ldr	x8, [x20, #1344]
   2a404:	str	x8, [x19, #32]
   2a408:	ldrb	w8, [x19]
   2a40c:	and	w8, w8, #0xf0
   2a410:	orr	w8, w22, w8
   2a414:	str	xzr, [x19, #24]
   2a418:	orr	w8, w8, #0x2
   2a41c:	strb	w8, [x19]
   2a420:	stp	xzr, xzr, [x19, #8]
   2a424:	ldp	x20, x19, [sp, #64]
   2a428:	ldp	x22, x21, [sp, #48]
   2a42c:	ldr	x23, [sp, #32]
   2a430:	ldp	x29, x30, [sp, #16]
   2a434:	add	sp, sp, #0x50
   2a438:	ret
   2a43c:	stp	x29, x30, [sp, #-96]!
   2a440:	stp	x28, x27, [sp, #16]
   2a444:	stp	x26, x25, [sp, #32]
   2a448:	stp	x24, x23, [sp, #48]
   2a44c:	stp	x22, x21, [sp, #64]
   2a450:	stp	x20, x19, [sp, #80]
   2a454:	mov	x29, sp
   2a458:	sub	sp, sp, #0x280
   2a45c:	mov	w9, #0x40                  	// #64
   2a460:	stp	xzr, x9, [sp, #88]
   2a464:	mov	w9, #0x1                   	// #1
   2a468:	str	x9, [sp, #56]
   2a46c:	dup	v0.2d, x9
   2a470:	adrp	x9, 3e000 <PyInit__decimal@@Base+0x3754c>
   2a474:	stur	q0, [sp, #32]
   2a478:	ldr	q0, [x9, #1552]
   2a47c:	mov	w8, #0x30                  	// #48
   2a480:	strb	w8, [sp, #64]
   2a484:	add	x8, sp, #0x70
   2a488:	str	x8, [sp, #104]
   2a48c:	mov	w8, #0x90                  	// #144
   2a490:	add	x9, sp, #0x38
   2a494:	stp	xzr, xzr, [sp, #72]
   2a498:	strb	w8, [sp, #8]
   2a49c:	str	x9, [sp, #48]
   2a4a0:	stur	q0, [sp, #16]
   2a4a4:	ldr	x8, [x1, #8]
   2a4a8:	ldr	x9, [x2, #8]
   2a4ac:	mov	x21, x5
   2a4b0:	mov	x25, x4
   2a4b4:	mov	w20, w3
   2a4b8:	mov	x24, x2
   2a4bc:	mov	x23, x1
   2a4c0:	cmp	x8, x9
   2a4c4:	mov	x19, x0
   2a4c8:	b.ne	2a4dc <PyInit__decimal@@Base+0x23a28>  // b.any
   2a4cc:	str	x25, [sp]
   2a4d0:	mov	w22, wzr
   2a4d4:	mov	x1, x23
   2a4d8:	b	2a598 <PyInit__decimal@@Base+0x23ae4>
   2a4dc:	cmp	x9, x8
   2a4e0:	csel	x1, x24, x23, gt
   2a4e4:	ldr	x8, [x1, #40]
   2a4e8:	ldr	x9, [x1, #24]
   2a4ec:	cset	w22, gt
   2a4f0:	csel	x24, x23, x24, gt
   2a4f4:	add	x8, x8, x9, lsl #3
   2a4f8:	ldur	x8, [x8, #-8]
   2a4fc:	cbz	x8, 2a594 <PyInit__decimal@@Base+0x23ae0>
   2a500:	ldr	x11, [x25]
   2a504:	ldp	x9, x8, [x1, #8]
   2a508:	ldp	x10, x12, [x24, #8]
   2a50c:	mvn	x13, x11
   2a510:	cmp	x8, x11
   2a514:	add	x8, x8, x13
   2a518:	csel	x8, xzr, x8, gt
   2a51c:	add	x11, x10, x12
   2a520:	add	x8, x9, x8
   2a524:	sub	x8, x8, #0x1
   2a528:	sub	x11, x11, #0x1
   2a52c:	cmp	x11, x8
   2a530:	b.ge	2a57c <PyInit__decimal@@Base+0x23ac8>  // b.tcont
   2a534:	ldrb	w9, [x24]
   2a538:	mov	w10, #0x1                   	// #1
   2a53c:	dup	v0.2d, x10
   2a540:	mov	w10, #0x90                  	// #144
   2a544:	bfxil	w10, w9, #0, #4
   2a548:	str	x8, [sp, #16]
   2a54c:	stur	q0, [sp, #24]
   2a550:	strb	w10, [sp, #8]
   2a554:	ldr	x9, [x24, #40]
   2a558:	ldr	x10, [x24, #24]
   2a55c:	add	x24, sp, #0x8
   2a560:	add	x9, x9, x10, lsl #3
   2a564:	ldur	x9, [x9, #-8]
   2a568:	mov	x10, x8
   2a56c:	cmp	x9, #0x0
   2a570:	cset	w9, ne  // ne = any
   2a574:	str	x9, [sp, #56]
   2a578:	ldr	x9, [x1, #8]
   2a57c:	sub	x2, x9, x10
   2a580:	add	x0, sp, #0x40
   2a584:	mov	x3, x21
   2a588:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2a58c:	cbz	w0, 2a734 <PyInit__decimal@@Base+0x23c80>
   2a590:	add	x1, sp, #0x40
   2a594:	str	x25, [sp]
   2a598:	ldr	x8, [x24, #8]
   2a59c:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
   2a5a0:	str	x8, [x19, #8]
   2a5a4:	ldr	x8, [x1, #24]
   2a5a8:	ldr	x9, [x24, #24]
   2a5ac:	cmp	x8, x9
   2a5b0:	csel	x27, x24, x1, lt  // lt = tstop
   2a5b4:	ldr	x25, [x27, #24]
   2a5b8:	ldr	x9, [x26, #1344]
   2a5bc:	ldr	x8, [x19, #32]
   2a5c0:	csel	x28, x1, x24, lt  // lt = tstop
   2a5c4:	cinc	w24, w22, lt  // lt = tstop
   2a5c8:	cmp	x9, x25
   2a5cc:	csel	x1, x25, x9, lt  // lt = tstop
   2a5d0:	cmp	x1, x8
   2a5d4:	b.eq	2a60c <PyInit__decimal@@Base+0x23b58>  // b.none
   2a5d8:	ldrb	w9, [x19]
   2a5dc:	tbnz	w9, #5, 2a5f4 <PyInit__decimal@@Base+0x23b40>
   2a5e0:	mov	x0, x19
   2a5e4:	mov	x2, x21
   2a5e8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2a5ec:	cbnz	w0, 2a60c <PyInit__decimal@@Base+0x23b58>
   2a5f0:	b	2a970 <PyInit__decimal@@Base+0x23ebc>
   2a5f4:	cmp	x1, x8
   2a5f8:	b.le	2a60c <PyInit__decimal@@Base+0x23b58>
   2a5fc:	mov	x0, x19
   2a600:	mov	x2, x21
   2a604:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2a608:	cbz	w0, 2a970 <PyInit__decimal@@Base+0x23ebc>
   2a60c:	ldrb	w8, [x23]
   2a610:	and	w8, w8, #0x1
   2a614:	cmp	w8, w20, uxtb
   2a618:	b.ne	2a678 <PyInit__decimal@@Base+0x23bc4>  // b.any
   2a61c:	ldr	x0, [x19, #40]
   2a620:	ldr	x1, [x27, #40]
   2a624:	ldr	x2, [x28, #40]
   2a628:	ldr	x3, [x27, #24]
   2a62c:	ldr	x4, [x28, #24]
   2a630:	bl	1c1f8 <PyInit__decimal@@Base+0x15744>
   2a634:	cbz	x0, 2a72c <PyInit__decimal@@Base+0x23c78>
   2a638:	ldr	x23, [x27, #24]
   2a63c:	ldr	x9, [x26, #1344]
   2a640:	ldr	x8, [x19, #32]
   2a644:	mov	x22, x0
   2a648:	add	x25, x23, #0x1
   2a64c:	cmp	x9, x25
   2a650:	csinc	x1, x9, x23, ge  // ge = tcont
   2a654:	cmp	x1, x8
   2a658:	b.eq	2a82c <PyInit__decimal@@Base+0x23d78>  // b.none
   2a65c:	ldrb	w9, [x19]
   2a660:	tbnz	w9, #5, 2a814 <PyInit__decimal@@Base+0x23d60>
   2a664:	mov	x0, x19
   2a668:	mov	x2, x21
   2a66c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2a670:	cbnz	w0, 2a82c <PyInit__decimal@@Base+0x23d78>
   2a674:	b	2a970 <PyInit__decimal@@Base+0x23ebc>
   2a678:	ldr	x3, [x27, #24]
   2a67c:	ldr	x8, [x28, #24]
   2a680:	cmp	x3, x8
   2a684:	b.ne	2a6c4 <PyInit__decimal@@Base+0x23c10>  // b.any
   2a688:	sub	x8, x3, #0x1
   2a68c:	tbnz	x8, #63, 2a6c4 <PyInit__decimal@@Base+0x23c10>
   2a690:	ldr	x9, [x27, #40]
   2a694:	ldr	x10, [x28, #40]
   2a698:	lsl	x11, x8, #3
   2a69c:	sub	x8, x8, #0x1
   2a6a0:	ldr	x9, [x9, x11]
   2a6a4:	ldr	x10, [x10, x11]
   2a6a8:	cmp	x9, x10
   2a6ac:	b.eq	2a68c <PyInit__decimal@@Base+0x23bd8>  // b.none
   2a6b0:	csel	x8, x28, x27, cc  // cc = lo, ul, last
   2a6b4:	ldr	x3, [x8, #24]
   2a6b8:	csel	x28, x27, x28, cc  // cc = lo, ul, last
   2a6bc:	cinc	w24, w24, cc  // cc = lo, ul, last
   2a6c0:	mov	x27, x8
   2a6c4:	ldr	x0, [x19, #40]
   2a6c8:	ldr	x1, [x27, #40]
   2a6cc:	ldr	x2, [x28, #40]
   2a6d0:	ldr	x4, [x28, #24]
   2a6d4:	bl	1c4b0 <PyInit__decimal@@Base+0x159fc>
   2a6d8:	ldr	x8, [x19, #40]
   2a6dc:	ldr	x9, [x27, #24]
   2a6e0:	sub	x8, x8, #0x8
   2a6e4:	mov	x25, x9
   2a6e8:	cmp	x9, #0x2
   2a6ec:	b.lt	2a6fc <PyInit__decimal@@Base+0x23c48>  // b.tstop
   2a6f0:	ldr	x10, [x8, x25, lsl #3]
   2a6f4:	sub	x9, x25, #0x1
   2a6f8:	cbz	x10, 2a6e4 <PyInit__decimal@@Base+0x23c30>
   2a6fc:	ldr	x9, [x26, #1344]
   2a700:	ldr	x8, [x19, #32]
   2a704:	cmp	x9, x25
   2a708:	csel	x1, x25, x9, lt  // lt = tstop
   2a70c:	cmp	x1, x8
   2a710:	b.eq	2a7b4 <PyInit__decimal@@Base+0x23d00>  // b.none
   2a714:	ldrb	w9, [x19]
   2a718:	tbnz	w9, #5, 2a7a0 <PyInit__decimal@@Base+0x23cec>
   2a71c:	mov	x0, x19
   2a720:	mov	x2, x21
   2a724:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2a728:	b	2a7b4 <PyInit__decimal@@Base+0x23d00>
   2a72c:	ldr	x8, [x19, #40]
   2a730:	b	2a834 <PyInit__decimal@@Base+0x23d80>
   2a734:	ldrb	w8, [x19]
   2a738:	tbnz	w8, #5, 2a77c <PyInit__decimal@@Base+0x23cc8>
   2a73c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2a740:	ldr	x9, [x19, #32]
   2a744:	ldr	x1, [x20, #1344]
   2a748:	cmp	x9, x1
   2a74c:	b.le	2a77c <PyInit__decimal@@Base+0x23cc8>
   2a750:	sturb	wzr, [x29, #-12]
   2a754:	ldr	x0, [x19, #40]
   2a758:	sub	x3, x29, #0xc
   2a75c:	mov	w2, #0x8                   	// #8
   2a760:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2a764:	str	x0, [x19, #40]
   2a768:	ldurb	w8, [x29, #-12]
   2a76c:	cbnz	w8, 2a778 <PyInit__decimal@@Base+0x23cc4>
   2a770:	ldr	x8, [x20, #1344]
   2a774:	str	x8, [x19, #32]
   2a778:	ldrb	w8, [x19]
   2a77c:	and	w8, w8, #0xf0
   2a780:	orr	w8, w8, #0x4
   2a784:	stp	xzr, xzr, [x19, #16]
   2a788:	strb	w8, [x19]
   2a78c:	str	xzr, [x19, #8]
   2a790:	ldr	w8, [x21]
   2a794:	orr	w8, w8, #0x200
   2a798:	str	w8, [x21]
   2a79c:	b	2a970 <PyInit__decimal@@Base+0x23ebc>
   2a7a0:	cmp	x1, x8
   2a7a4:	b.le	2a7b4 <PyInit__decimal@@Base+0x23d00>
   2a7a8:	mov	x0, x19
   2a7ac:	mov	x2, x21
   2a7b0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2a7b4:	str	x25, [x19, #24]
   2a7b8:	tbnz	w24, #0, 2a7c4 <PyInit__decimal@@Base+0x23d10>
   2a7bc:	ldrb	w8, [x23]
   2a7c0:	and	w20, w8, #0x1
   2a7c4:	ldrb	w8, [x19]
   2a7c8:	ldr	x10, [x19, #40]
   2a7cc:	and	w8, w8, #0xfffffff0
   2a7d0:	orr	w9, w8, w20
   2a7d4:	strb	w9, [x19]
   2a7d8:	add	x8, x10, x25, lsl #3
   2a7dc:	ldur	x8, [x8, #-8]
   2a7e0:	cbnz	x8, 2a850 <PyInit__decimal@@Base+0x23d9c>
   2a7e4:	and	w8, w9, #0xfe
   2a7e8:	strb	w8, [x19]
   2a7ec:	ldr	x8, [sp]
   2a7f0:	ldr	w8, [x8, #36]
   2a7f4:	cmp	w8, #0x3
   2a7f8:	b.ne	2a80c <PyInit__decimal@@Base+0x23d58>  // b.any
   2a7fc:	mov	x8, xzr
   2a800:	orr	w9, w9, #0x1
   2a804:	strb	w9, [x19]
   2a808:	b	2a850 <PyInit__decimal@@Base+0x23d9c>
   2a80c:	mov	x8, xzr
   2a810:	b	2a850 <PyInit__decimal@@Base+0x23d9c>
   2a814:	cmp	x1, x8
   2a818:	b.le	2a82c <PyInit__decimal@@Base+0x23d78>
   2a81c:	mov	x0, x19
   2a820:	mov	x2, x21
   2a824:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2a828:	cbz	w0, 2a970 <PyInit__decimal@@Base+0x23ebc>
   2a82c:	ldr	x8, [x19, #40]
   2a830:	str	x22, [x8, x23, lsl #3]
   2a834:	ldrb	w9, [x19]
   2a838:	str	x25, [x19, #24]
   2a83c:	add	x8, x8, x25, lsl #3
   2a840:	and	w9, w9, #0xf0
   2a844:	orr	w9, w9, w20
   2a848:	strb	w9, [x19]
   2a84c:	ldur	x8, [x8, #-8]
   2a850:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2a854:	add	x9, x9, #0xca0
   2a858:	ldr	x10, [x9, #72]
   2a85c:	cmp	x10, x8
   2a860:	b.ls	2a88c <PyInit__decimal@@Base+0x23dd8>  // b.plast
   2a864:	ldr	x10, [x9, #32]
   2a868:	cmp	x10, x8
   2a86c:	b.ls	2a8b4 <PyInit__decimal@@Base+0x23e00>  // b.plast
   2a870:	ldr	x10, [x9, #16]
   2a874:	cmp	x10, x8
   2a878:	b.ls	2a8f8 <PyInit__decimal@@Base+0x23e44>  // b.plast
   2a87c:	ldr	x9, [x9, #8]
   2a880:	cmp	x9, x8
   2a884:	mov	w8, #0x1                   	// #1
   2a888:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a88c:	ldr	x10, [x9, #112]
   2a890:	cmp	x10, x8
   2a894:	b.ls	2a8d0 <PyInit__decimal@@Base+0x23e1c>  // b.plast
   2a898:	ldr	x10, [x9, #88]
   2a89c:	cmp	x10, x8
   2a8a0:	b.ls	2a908 <PyInit__decimal@@Base+0x23e54>  // b.plast
   2a8a4:	ldr	x9, [x9, #80]
   2a8a8:	cmp	x9, x8
   2a8ac:	mov	w8, #0xa                   	// #10
   2a8b0:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a8b4:	ldr	x10, [x9, #48]
   2a8b8:	cmp	x10, x8
   2a8bc:	b.ls	2a924 <PyInit__decimal@@Base+0x23e70>  // b.plast
   2a8c0:	ldr	x9, [x9, #40]
   2a8c4:	cmp	x9, x8
   2a8c8:	mov	w8, #0x5                   	// #5
   2a8cc:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a8d0:	ldr	x10, [x9, #144]
   2a8d4:	cmp	x10, x8
   2a8d8:	b.ls	2a940 <PyInit__decimal@@Base+0x23e8c>  // b.plast
   2a8dc:	ldr	x10, [x9, #128]
   2a8e0:	cmp	x10, x8
   2a8e4:	b.ls	2a950 <PyInit__decimal@@Base+0x23e9c>  // b.plast
   2a8e8:	ldr	x9, [x9, #120]
   2a8ec:	cmp	x9, x8
   2a8f0:	mov	w8, #0xf                   	// #15
   2a8f4:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a8f8:	ldr	x9, [x9, #24]
   2a8fc:	cmp	x9, x8
   2a900:	mov	w8, #0x3                   	// #3
   2a904:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a908:	ldr	x10, [x9, #104]
   2a90c:	cmp	x10, x8
   2a910:	b.ls	2a9c0 <PyInit__decimal@@Base+0x23f0c>  // b.plast
   2a914:	ldr	x9, [x9, #96]
   2a918:	cmp	x9, x8
   2a91c:	mov	w8, #0xc                   	// #12
   2a920:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a924:	ldr	x10, [x9, #64]
   2a928:	cmp	x10, x8
   2a92c:	b.ls	2a9c8 <PyInit__decimal@@Base+0x23f14>  // b.plast
   2a930:	ldr	x9, [x9, #56]
   2a934:	cmp	x9, x8
   2a938:	mov	w8, #0x7                   	// #7
   2a93c:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a940:	ldr	x9, [x9, #152]
   2a944:	cmp	x9, x8
   2a948:	mov	w8, #0x13                  	// #19
   2a94c:	b	2a95c <PyInit__decimal@@Base+0x23ea8>
   2a950:	ldr	x9, [x9, #136]
   2a954:	cmp	x9, x8
   2a958:	mov	w8, #0x11                  	// #17
   2a95c:	cinc	x8, x8, ls  // ls = plast
   2a960:	mov	w9, #0x13                  	// #19
   2a964:	madd	x8, x25, x9, x8
   2a968:	sub	x8, x8, #0x13
   2a96c:	str	x8, [x19, #16]
   2a970:	ldrb	w8, [sp, #64]
   2a974:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2a978:	cmp	w8, #0x1f
   2a97c:	b.hi	2a990 <PyInit__decimal@@Base+0x23edc>  // b.pmore
   2a980:	ldr	x8, [x19, #1376]
   2a984:	ldr	x0, [sp, #104]
   2a988:	blr	x8
   2a98c:	ldrb	w8, [sp, #64]
   2a990:	tbnz	w8, #4, 2a9a0 <PyInit__decimal@@Base+0x23eec>
   2a994:	ldr	x8, [x19, #1376]
   2a998:	add	x0, sp, #0x40
   2a99c:	blr	x8
   2a9a0:	add	sp, sp, #0x280
   2a9a4:	ldp	x20, x19, [sp, #80]
   2a9a8:	ldp	x22, x21, [sp, #64]
   2a9ac:	ldp	x24, x23, [sp, #48]
   2a9b0:	ldp	x26, x25, [sp, #32]
   2a9b4:	ldp	x28, x27, [sp, #16]
   2a9b8:	ldp	x29, x30, [sp], #96
   2a9bc:	ret
   2a9c0:	mov	w8, #0xe                   	// #14
   2a9c4:	b	2a960 <PyInit__decimal@@Base+0x23eac>
   2a9c8:	mov	w8, #0x9                   	// #9
   2a9cc:	b	2a960 <PyInit__decimal@@Base+0x23eac>
   2a9d0:	sub	sp, sp, #0x50
   2a9d4:	stp	x29, x30, [sp, #16]
   2a9d8:	str	x23, [sp, #32]
   2a9dc:	stp	x22, x21, [sp, #48]
   2a9e0:	stp	x20, x19, [sp, #64]
   2a9e4:	add	x29, sp, #0x10
   2a9e8:	ldrb	w8, [x1]
   2a9ec:	mov	x20, x4
   2a9f0:	mov	x23, x3
   2a9f4:	mov	x22, x2
   2a9f8:	mov	x21, x1
   2a9fc:	tst	w8, #0xe
   2aa00:	mov	x19, x0
   2aa04:	b.ne	2aa14 <PyInit__decimal@@Base+0x23f60>  // b.any
   2aa08:	ldrb	w8, [x22]
   2aa0c:	tst	w8, #0xe
   2aa10:	b.eq	2ab18 <PyInit__decimal@@Base+0x24064>  // b.none
   2aa14:	mov	x0, x19
   2aa18:	mov	x1, x21
   2aa1c:	mov	x2, x22
   2aa20:	mov	x3, x23
   2aa24:	mov	x4, x20
   2aa28:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2aa2c:	cbnz	w0, 2abb8 <PyInit__decimal@@Base+0x24104>
   2aa30:	ldrb	w9, [x22]
   2aa34:	ldrb	w10, [x21]
   2aa38:	mvn	w8, w9
   2aa3c:	and	w21, w8, #0x1
   2aa40:	tbnz	w10, #1, 2aa9c <PyInit__decimal@@Base+0x23fe8>
   2aa44:	ldrb	w8, [x19]
   2aa48:	tbnz	w8, #5, 2aa8c <PyInit__decimal@@Base+0x23fd8>
   2aa4c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2aa50:	ldr	x9, [x19, #32]
   2aa54:	ldr	x1, [x20, #1344]
   2aa58:	cmp	x9, x1
   2aa5c:	b.le	2aa8c <PyInit__decimal@@Base+0x23fd8>
   2aa60:	strb	wzr, [x29, #24]
   2aa64:	ldr	x0, [x19, #40]
   2aa68:	add	x3, x29, #0x18
   2aa6c:	mov	w2, #0x8                   	// #8
   2aa70:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2aa74:	str	x0, [x19, #40]
   2aa78:	ldrb	w8, [x29, #24]
   2aa7c:	cbnz	w8, 2aa88 <PyInit__decimal@@Base+0x23fd4>
   2aa80:	ldr	x8, [x20, #1344]
   2aa84:	str	x8, [x19, #32]
   2aa88:	ldrb	w8, [x19]
   2aa8c:	and	w8, w8, #0xf0
   2aa90:	str	xzr, [x19, #24]
   2aa94:	orr	w8, w21, w8
   2aa98:	b	2abac <PyInit__decimal@@Base+0x240f8>
   2aa9c:	ldrb	w8, [x19]
   2aaa0:	and	w22, w10, #0x1
   2aaa4:	tbz	w9, #1, 2ab5c <PyInit__decimal@@Base+0x240a8>
   2aaa8:	cmp	w22, w21
   2aaac:	b.eq	2ab5c <PyInit__decimal@@Base+0x240a8>  // b.none
   2aab0:	tbnz	w8, #5, 2aaf4 <PyInit__decimal@@Base+0x24040>
   2aab4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2aab8:	ldr	x9, [x19, #32]
   2aabc:	ldr	x1, [x21, #1344]
   2aac0:	cmp	x9, x1
   2aac4:	b.le	2aaf4 <PyInit__decimal@@Base+0x24040>
   2aac8:	sturb	wzr, [x29, #-4]
   2aacc:	ldr	x0, [x19, #40]
   2aad0:	sub	x3, x29, #0x4
   2aad4:	mov	w2, #0x8                   	// #8
   2aad8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2aadc:	str	x0, [x19, #40]
   2aae0:	ldurb	w8, [x29, #-4]
   2aae4:	cbnz	w8, 2aaf0 <PyInit__decimal@@Base+0x2403c>
   2aae8:	ldr	x8, [x21, #1344]
   2aaec:	str	x8, [x19, #32]
   2aaf0:	ldrb	w8, [x19]
   2aaf4:	and	w8, w8, #0xf0
   2aaf8:	orr	w8, w8, #0x4
   2aafc:	stp	xzr, xzr, [x19, #16]
   2ab00:	strb	w8, [x19]
   2ab04:	str	xzr, [x19, #8]
   2ab08:	ldr	w8, [x20]
   2ab0c:	orr	w8, w8, #0x100
   2ab10:	str	w8, [x20]
   2ab14:	b	2abb8 <PyInit__decimal@@Base+0x24104>
   2ab18:	mvn	w8, w8
   2ab1c:	and	w3, w8, #0x1
   2ab20:	mov	x0, x19
   2ab24:	mov	x1, x21
   2ab28:	mov	x2, x22
   2ab2c:	mov	x4, x23
   2ab30:	mov	x5, x20
   2ab34:	bl	2a43c <PyInit__decimal@@Base+0x23988>
   2ab38:	mov	x0, x19
   2ab3c:	mov	x1, x23
   2ab40:	mov	x2, x20
   2ab44:	ldp	x20, x19, [sp, #64]
   2ab48:	ldp	x22, x21, [sp, #48]
   2ab4c:	ldr	x23, [sp, #32]
   2ab50:	ldp	x29, x30, [sp, #16]
   2ab54:	add	sp, sp, #0x50
   2ab58:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2ab5c:	tbnz	w8, #5, 2aba0 <PyInit__decimal@@Base+0x240ec>
   2ab60:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2ab64:	ldr	x9, [x19, #32]
   2ab68:	ldr	x1, [x20, #1344]
   2ab6c:	cmp	x9, x1
   2ab70:	b.le	2aba0 <PyInit__decimal@@Base+0x240ec>
   2ab74:	strb	wzr, [x29, #28]
   2ab78:	ldr	x0, [x19, #40]
   2ab7c:	add	x3, x29, #0x1c
   2ab80:	mov	w2, #0x8                   	// #8
   2ab84:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2ab88:	str	x0, [x19, #40]
   2ab8c:	ldrb	w8, [x29, #28]
   2ab90:	cbnz	w8, 2ab9c <PyInit__decimal@@Base+0x240e8>
   2ab94:	ldr	x8, [x20, #1344]
   2ab98:	str	x8, [x19, #32]
   2ab9c:	ldrb	w8, [x19]
   2aba0:	and	w8, w8, #0xf0
   2aba4:	orr	w8, w22, w8
   2aba8:	str	xzr, [x19, #24]
   2abac:	orr	w8, w8, #0x2
   2abb0:	strb	w8, [x19]
   2abb4:	stp	xzr, xzr, [x19, #8]
   2abb8:	ldp	x20, x19, [sp, #64]
   2abbc:	ldp	x22, x21, [sp, #48]
   2abc0:	ldr	x23, [sp, #32]
   2abc4:	ldp	x29, x30, [sp, #16]
   2abc8:	add	sp, sp, #0x50
   2abcc:	ret
   2abd0:	stp	x29, x30, [sp, #-64]!
   2abd4:	stp	x28, x23, [sp, #16]
   2abd8:	stp	x22, x21, [sp, #32]
   2abdc:	stp	x20, x19, [sp, #48]
   2abe0:	mov	x29, sp
   2abe4:	sub	sp, sp, #0x260
   2abe8:	mov	x23, x0
   2abec:	mov	w8, #0x30                  	// #48
   2abf0:	mov	w9, #0x40                  	// #64
   2abf4:	add	x10, sp, #0x30
   2abf8:	sub	x0, x29, #0x30
   2abfc:	mov	x19, x4
   2ac00:	mov	x20, x3
   2ac04:	mov	x21, x2
   2ac08:	mov	x22, x1
   2ac0c:	stp	xzr, xzr, [sp, #8]
   2ac10:	strb	w8, [sp]
   2ac14:	stp	xzr, x9, [sp, #24]
   2ac18:	str	x10, [sp, #40]
   2ac1c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2ac20:	cmp	x21, #0x0
   2ac24:	cneg	x2, x21, mi  // mi = first
   2ac28:	lsr	x1, x21, #63
   2ac2c:	mov	x0, sp
   2ac30:	mov	x3, xzr
   2ac34:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2ac38:	mov	x0, sp
   2ac3c:	sub	x1, x29, #0x30
   2ac40:	mov	x2, x19
   2ac44:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2ac48:	mov	x2, sp
   2ac4c:	mov	x0, x23
   2ac50:	mov	x1, x22
   2ac54:	mov	x3, x20
   2ac58:	mov	x4, x19
   2ac5c:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2ac60:	ldrb	w8, [sp]
   2ac64:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2ac68:	cmp	w8, #0x1f
   2ac6c:	b.hi	2ac80 <PyInit__decimal@@Base+0x241cc>  // b.pmore
   2ac70:	ldr	x8, [x19, #1376]
   2ac74:	ldr	x0, [sp, #40]
   2ac78:	blr	x8
   2ac7c:	ldrb	w8, [sp]
   2ac80:	tbnz	w8, #4, 2ac90 <PyInit__decimal@@Base+0x241dc>
   2ac84:	ldr	x8, [x19, #1376]
   2ac88:	mov	x0, sp
   2ac8c:	blr	x8
   2ac90:	add	sp, sp, #0x260
   2ac94:	ldp	x20, x19, [sp, #48]
   2ac98:	ldp	x22, x21, [sp, #32]
   2ac9c:	ldp	x28, x23, [sp, #16]
   2aca0:	ldp	x29, x30, [sp], #64
   2aca4:	ret
   2aca8:	stp	x29, x30, [sp, #-64]!
   2acac:	stp	x28, x23, [sp, #16]
   2acb0:	stp	x22, x21, [sp, #32]
   2acb4:	stp	x20, x19, [sp, #48]
   2acb8:	mov	x29, sp
   2acbc:	sub	sp, sp, #0x260
   2acc0:	mov	x23, x0
   2acc4:	mov	w8, #0x30                  	// #48
   2acc8:	mov	w9, #0x40                  	// #64
   2accc:	add	x10, sp, #0x30
   2acd0:	sub	x0, x29, #0x30
   2acd4:	mov	x19, x4
   2acd8:	mov	x20, x3
   2acdc:	mov	x21, x2
   2ace0:	mov	x22, x1
   2ace4:	stp	xzr, xzr, [sp, #8]
   2ace8:	strb	w8, [sp]
   2acec:	stp	xzr, x9, [sp, #24]
   2acf0:	str	x10, [sp, #40]
   2acf4:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2acf8:	mov	x0, sp
   2acfc:	mov	w1, wzr
   2ad00:	mov	x2, x21
   2ad04:	mov	x3, xzr
   2ad08:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2ad0c:	mov	x0, sp
   2ad10:	sub	x1, x29, #0x30
   2ad14:	mov	x2, x19
   2ad18:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2ad1c:	mov	x2, sp
   2ad20:	mov	x0, x23
   2ad24:	mov	x1, x22
   2ad28:	mov	x3, x20
   2ad2c:	mov	x4, x19
   2ad30:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2ad34:	ldrb	w8, [sp]
   2ad38:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2ad3c:	cmp	w8, #0x1f
   2ad40:	b.hi	2ad54 <PyInit__decimal@@Base+0x242a0>  // b.pmore
   2ad44:	ldr	x8, [x19, #1376]
   2ad48:	ldr	x0, [sp, #40]
   2ad4c:	blr	x8
   2ad50:	ldrb	w8, [sp]
   2ad54:	tbnz	w8, #4, 2ad64 <PyInit__decimal@@Base+0x242b0>
   2ad58:	ldr	x8, [x19, #1376]
   2ad5c:	mov	x0, sp
   2ad60:	blr	x8
   2ad64:	add	sp, sp, #0x260
   2ad68:	ldp	x20, x19, [sp, #48]
   2ad6c:	ldp	x22, x21, [sp, #32]
   2ad70:	ldp	x28, x23, [sp, #16]
   2ad74:	ldp	x29, x30, [sp], #64
   2ad78:	ret
   2ad7c:	stp	x29, x30, [sp, #-64]!
   2ad80:	stp	x28, x23, [sp, #16]
   2ad84:	stp	x22, x21, [sp, #32]
   2ad88:	stp	x20, x19, [sp, #48]
   2ad8c:	mov	x29, sp
   2ad90:	sub	sp, sp, #0x260
   2ad94:	mov	x23, x0
   2ad98:	mov	w8, #0x30                  	// #48
   2ad9c:	mov	w9, #0x40                  	// #64
   2ada0:	add	x10, sp, #0x30
   2ada4:	sub	x0, x29, #0x30
   2ada8:	mov	x19, x4
   2adac:	mov	x20, x3
   2adb0:	mov	x21, x2
   2adb4:	mov	x22, x1
   2adb8:	stp	xzr, xzr, [sp, #8]
   2adbc:	strb	w8, [sp]
   2adc0:	stp	xzr, x9, [sp, #24]
   2adc4:	str	x10, [sp, #40]
   2adc8:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2adcc:	cmp	x21, #0x0
   2add0:	cneg	x2, x21, mi  // mi = first
   2add4:	lsr	x1, x21, #63
   2add8:	mov	x0, sp
   2addc:	mov	x3, xzr
   2ade0:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2ade4:	mov	x0, sp
   2ade8:	sub	x1, x29, #0x30
   2adec:	mov	x2, x19
   2adf0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2adf4:	mov	x2, sp
   2adf8:	mov	x0, x23
   2adfc:	mov	x1, x22
   2ae00:	mov	x3, x20
   2ae04:	mov	x4, x19
   2ae08:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   2ae0c:	ldrb	w8, [sp]
   2ae10:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2ae14:	cmp	w8, #0x1f
   2ae18:	b.hi	2ae2c <PyInit__decimal@@Base+0x24378>  // b.pmore
   2ae1c:	ldr	x8, [x19, #1376]
   2ae20:	ldr	x0, [sp, #40]
   2ae24:	blr	x8
   2ae28:	ldrb	w8, [sp]
   2ae2c:	tbnz	w8, #4, 2ae3c <PyInit__decimal@@Base+0x24388>
   2ae30:	ldr	x8, [x19, #1376]
   2ae34:	mov	x0, sp
   2ae38:	blr	x8
   2ae3c:	add	sp, sp, #0x260
   2ae40:	ldp	x20, x19, [sp, #48]
   2ae44:	ldp	x22, x21, [sp, #32]
   2ae48:	ldp	x28, x23, [sp, #16]
   2ae4c:	ldp	x29, x30, [sp], #64
   2ae50:	ret
   2ae54:	stp	x29, x30, [sp, #-64]!
   2ae58:	stp	x28, x23, [sp, #16]
   2ae5c:	stp	x22, x21, [sp, #32]
   2ae60:	stp	x20, x19, [sp, #48]
   2ae64:	mov	x29, sp
   2ae68:	sub	sp, sp, #0x260
   2ae6c:	mov	x23, x0
   2ae70:	mov	w8, #0x30                  	// #48
   2ae74:	mov	w9, #0x40                  	// #64
   2ae78:	add	x10, sp, #0x30
   2ae7c:	sub	x0, x29, #0x30
   2ae80:	mov	x19, x4
   2ae84:	mov	x20, x3
   2ae88:	mov	x21, x2
   2ae8c:	mov	x22, x1
   2ae90:	stp	xzr, xzr, [sp, #8]
   2ae94:	strb	w8, [sp]
   2ae98:	stp	xzr, x9, [sp, #24]
   2ae9c:	str	x10, [sp, #40]
   2aea0:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2aea4:	mov	x0, sp
   2aea8:	mov	w1, wzr
   2aeac:	mov	x2, x21
   2aeb0:	mov	x3, xzr
   2aeb4:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2aeb8:	mov	x0, sp
   2aebc:	sub	x1, x29, #0x30
   2aec0:	mov	x2, x19
   2aec4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2aec8:	mov	x2, sp
   2aecc:	mov	x0, x23
   2aed0:	mov	x1, x22
   2aed4:	mov	x3, x20
   2aed8:	mov	x4, x19
   2aedc:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   2aee0:	ldrb	w8, [sp]
   2aee4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2aee8:	cmp	w8, #0x1f
   2aeec:	b.hi	2af00 <PyInit__decimal@@Base+0x2444c>  // b.pmore
   2aef0:	ldr	x8, [x19, #1376]
   2aef4:	ldr	x0, [sp, #40]
   2aef8:	blr	x8
   2aefc:	ldrb	w8, [sp]
   2af00:	tbnz	w8, #4, 2af10 <PyInit__decimal@@Base+0x2445c>
   2af04:	ldr	x8, [x19, #1376]
   2af08:	mov	x0, sp
   2af0c:	blr	x8
   2af10:	add	sp, sp, #0x260
   2af14:	ldp	x20, x19, [sp, #48]
   2af18:	ldp	x22, x21, [sp, #32]
   2af1c:	ldp	x28, x23, [sp, #16]
   2af20:	ldp	x29, x30, [sp], #64
   2af24:	ret
   2af28:	sxtw	x2, w2
   2af2c:	b	2abd0 <PyInit__decimal@@Base+0x2411c>
   2af30:	stp	x29, x30, [sp, #-64]!
   2af34:	stp	x28, x23, [sp, #16]
   2af38:	stp	x22, x21, [sp, #32]
   2af3c:	stp	x20, x19, [sp, #48]
   2af40:	mov	x29, sp
   2af44:	sub	sp, sp, #0x260
   2af48:	mov	x22, x0
   2af4c:	mov	w8, #0x30                  	// #48
   2af50:	mov	w9, #0x40                  	// #64
   2af54:	add	x10, sp, #0x30
   2af58:	sub	x0, x29, #0x30
   2af5c:	mov	x19, x4
   2af60:	mov	x20, x3
   2af64:	mov	x21, x1
   2af68:	mov	w23, w2
   2af6c:	stp	xzr, xzr, [sp, #8]
   2af70:	strb	w8, [sp]
   2af74:	stp	xzr, x9, [sp, #24]
   2af78:	str	x10, [sp, #40]
   2af7c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2af80:	mov	x0, sp
   2af84:	mov	w1, wzr
   2af88:	mov	x2, x23
   2af8c:	mov	x3, xzr
   2af90:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2af94:	mov	x0, sp
   2af98:	sub	x1, x29, #0x30
   2af9c:	mov	x2, x19
   2afa0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2afa4:	mov	x2, sp
   2afa8:	mov	x0, x22
   2afac:	mov	x1, x21
   2afb0:	mov	x3, x20
   2afb4:	mov	x4, x19
   2afb8:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2afbc:	ldrb	w8, [sp]
   2afc0:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2afc4:	cmp	w8, #0x1f
   2afc8:	b.hi	2afdc <PyInit__decimal@@Base+0x24528>  // b.pmore
   2afcc:	ldr	x8, [x19, #1376]
   2afd0:	ldr	x0, [sp, #40]
   2afd4:	blr	x8
   2afd8:	ldrb	w8, [sp]
   2afdc:	tbnz	w8, #4, 2afec <PyInit__decimal@@Base+0x24538>
   2afe0:	ldr	x8, [x19, #1376]
   2afe4:	mov	x0, sp
   2afe8:	blr	x8
   2afec:	add	sp, sp, #0x260
   2aff0:	ldp	x20, x19, [sp, #48]
   2aff4:	ldp	x22, x21, [sp, #32]
   2aff8:	ldp	x28, x23, [sp, #16]
   2affc:	ldp	x29, x30, [sp], #64
   2b000:	ret
   2b004:	b	2abd0 <PyInit__decimal@@Base+0x2411c>
   2b008:	stp	x29, x30, [sp, #-64]!
   2b00c:	stp	x28, x23, [sp, #16]
   2b010:	stp	x22, x21, [sp, #32]
   2b014:	stp	x20, x19, [sp, #48]
   2b018:	mov	x29, sp
   2b01c:	sub	sp, sp, #0x260
   2b020:	mov	x23, x0
   2b024:	mov	w8, #0x30                  	// #48
   2b028:	mov	w9, #0x40                  	// #64
   2b02c:	add	x10, sp, #0x30
   2b030:	sub	x0, x29, #0x30
   2b034:	mov	x19, x4
   2b038:	mov	x20, x3
   2b03c:	mov	x21, x2
   2b040:	mov	x22, x1
   2b044:	stp	xzr, xzr, [sp, #8]
   2b048:	strb	w8, [sp]
   2b04c:	stp	xzr, x9, [sp, #24]
   2b050:	str	x10, [sp, #40]
   2b054:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2b058:	mov	x0, sp
   2b05c:	mov	w1, wzr
   2b060:	mov	x2, x21
   2b064:	mov	x3, xzr
   2b068:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2b06c:	mov	x0, sp
   2b070:	sub	x1, x29, #0x30
   2b074:	mov	x2, x19
   2b078:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2b07c:	mov	x2, sp
   2b080:	mov	x0, x23
   2b084:	mov	x1, x22
   2b088:	mov	x3, x20
   2b08c:	mov	x4, x19
   2b090:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2b094:	ldrb	w8, [sp]
   2b098:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2b09c:	cmp	w8, #0x1f
   2b0a0:	b.hi	2b0b4 <PyInit__decimal@@Base+0x24600>  // b.pmore
   2b0a4:	ldr	x8, [x19, #1376]
   2b0a8:	ldr	x0, [sp, #40]
   2b0ac:	blr	x8
   2b0b0:	ldrb	w8, [sp]
   2b0b4:	tbnz	w8, #4, 2b0c4 <PyInit__decimal@@Base+0x24610>
   2b0b8:	ldr	x8, [x19, #1376]
   2b0bc:	mov	x0, sp
   2b0c0:	blr	x8
   2b0c4:	add	sp, sp, #0x260
   2b0c8:	ldp	x20, x19, [sp, #48]
   2b0cc:	ldp	x22, x21, [sp, #32]
   2b0d0:	ldp	x28, x23, [sp, #16]
   2b0d4:	ldp	x29, x30, [sp], #64
   2b0d8:	ret
   2b0dc:	sxtw	x2, w2
   2b0e0:	b	2ad7c <PyInit__decimal@@Base+0x242c8>
   2b0e4:	stp	x29, x30, [sp, #-64]!
   2b0e8:	stp	x28, x23, [sp, #16]
   2b0ec:	stp	x22, x21, [sp, #32]
   2b0f0:	stp	x20, x19, [sp, #48]
   2b0f4:	mov	x29, sp
   2b0f8:	sub	sp, sp, #0x260
   2b0fc:	mov	x22, x0
   2b100:	mov	w8, #0x30                  	// #48
   2b104:	mov	w9, #0x40                  	// #64
   2b108:	add	x10, sp, #0x30
   2b10c:	sub	x0, x29, #0x30
   2b110:	mov	x19, x4
   2b114:	mov	x20, x3
   2b118:	mov	x21, x1
   2b11c:	mov	w23, w2
   2b120:	stp	xzr, xzr, [sp, #8]
   2b124:	strb	w8, [sp]
   2b128:	stp	xzr, x9, [sp, #24]
   2b12c:	str	x10, [sp, #40]
   2b130:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2b134:	mov	x0, sp
   2b138:	mov	w1, wzr
   2b13c:	mov	x2, x23
   2b140:	mov	x3, xzr
   2b144:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2b148:	mov	x0, sp
   2b14c:	sub	x1, x29, #0x30
   2b150:	mov	x2, x19
   2b154:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2b158:	mov	x2, sp
   2b15c:	mov	x0, x22
   2b160:	mov	x1, x21
   2b164:	mov	x3, x20
   2b168:	mov	x4, x19
   2b16c:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   2b170:	ldrb	w8, [sp]
   2b174:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2b178:	cmp	w8, #0x1f
   2b17c:	b.hi	2b190 <PyInit__decimal@@Base+0x246dc>  // b.pmore
   2b180:	ldr	x8, [x19, #1376]
   2b184:	ldr	x0, [sp, #40]
   2b188:	blr	x8
   2b18c:	ldrb	w8, [sp]
   2b190:	tbnz	w8, #4, 2b1a0 <PyInit__decimal@@Base+0x246ec>
   2b194:	ldr	x8, [x19, #1376]
   2b198:	mov	x0, sp
   2b19c:	blr	x8
   2b1a0:	add	sp, sp, #0x260
   2b1a4:	ldp	x20, x19, [sp, #48]
   2b1a8:	ldp	x22, x21, [sp, #32]
   2b1ac:	ldp	x28, x23, [sp, #16]
   2b1b0:	ldp	x29, x30, [sp], #64
   2b1b4:	ret
   2b1b8:	b	2ad7c <PyInit__decimal@@Base+0x242c8>
   2b1bc:	stp	x29, x30, [sp, #-64]!
   2b1c0:	stp	x28, x23, [sp, #16]
   2b1c4:	stp	x22, x21, [sp, #32]
   2b1c8:	stp	x20, x19, [sp, #48]
   2b1cc:	mov	x29, sp
   2b1d0:	sub	sp, sp, #0x260
   2b1d4:	mov	x23, x0
   2b1d8:	mov	w8, #0x30                  	// #48
   2b1dc:	mov	w9, #0x40                  	// #64
   2b1e0:	add	x10, sp, #0x30
   2b1e4:	sub	x0, x29, #0x30
   2b1e8:	mov	x19, x4
   2b1ec:	mov	x20, x3
   2b1f0:	mov	x21, x2
   2b1f4:	mov	x22, x1
   2b1f8:	stp	xzr, xzr, [sp, #8]
   2b1fc:	strb	w8, [sp]
   2b200:	stp	xzr, x9, [sp, #24]
   2b204:	str	x10, [sp, #40]
   2b208:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2b20c:	mov	x0, sp
   2b210:	mov	w1, wzr
   2b214:	mov	x2, x21
   2b218:	mov	x3, xzr
   2b21c:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2b220:	mov	x0, sp
   2b224:	sub	x1, x29, #0x30
   2b228:	mov	x2, x19
   2b22c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2b230:	mov	x2, sp
   2b234:	mov	x0, x23
   2b238:	mov	x1, x22
   2b23c:	mov	x3, x20
   2b240:	mov	x4, x19
   2b244:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   2b248:	ldrb	w8, [sp]
   2b24c:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2b250:	cmp	w8, #0x1f
   2b254:	b.hi	2b268 <PyInit__decimal@@Base+0x247b4>  // b.pmore
   2b258:	ldr	x8, [x19, #1376]
   2b25c:	ldr	x0, [sp, #40]
   2b260:	blr	x8
   2b264:	ldrb	w8, [sp]
   2b268:	tbnz	w8, #4, 2b278 <PyInit__decimal@@Base+0x247c4>
   2b26c:	ldr	x8, [x19, #1376]
   2b270:	mov	x0, sp
   2b274:	blr	x8
   2b278:	add	sp, sp, #0x260
   2b27c:	ldp	x20, x19, [sp, #48]
   2b280:	ldp	x22, x21, [sp, #32]
   2b284:	ldp	x28, x23, [sp, #16]
   2b288:	ldp	x29, x30, [sp], #64
   2b28c:	ret
   2b290:	mov	x8, x0
   2b294:	mov	x5, x4
   2b298:	mov	x4, x3
   2b29c:	mov	x3, x2
   2b2a0:	mov	w0, #0x1                   	// #1
   2b2a4:	mov	x2, x1
   2b2a8:	mov	x1, x8
   2b2ac:	b	2b2b0 <PyInit__decimal@@Base+0x247fc>
   2b2b0:	stp	x29, x30, [sp, #-96]!
   2b2b4:	stp	x28, x27, [sp, #16]
   2b2b8:	stp	x26, x25, [sp, #32]
   2b2bc:	stp	x24, x23, [sp, #48]
   2b2c0:	stp	x22, x21, [sp, #64]
   2b2c4:	stp	x20, x19, [sp, #80]
   2b2c8:	mov	x29, sp
   2b2cc:	sub	sp, sp, #0x490
   2b2d0:	mov	w8, #0x30                  	// #48
   2b2d4:	mov	w9, #0x40                  	// #64
   2b2d8:	add	x10, sp, #0x280
   2b2dc:	str	xzr, [sp, #608]
   2b2e0:	str	xzr, [sp, #600]
   2b2e4:	strb	w8, [sp, #592]
   2b2e8:	str	xzr, [sp, #616]
   2b2ec:	str	x9, [sp, #624]
   2b2f0:	str	x10, [sp, #632]
   2b2f4:	ldrb	w8, [x2]
   2b2f8:	ldrb	w9, [x3]
   2b2fc:	mov	x20, x5
   2b300:	mov	x21, x4
   2b304:	mov	x24, x3
   2b308:	orr	w10, w8, w9
   2b30c:	mov	x22, x2
   2b310:	mov	x19, x1
   2b314:	tst	w10, #0xe
   2b318:	b.eq	2b404 <PyInit__decimal@@Base+0x24950>  // b.none
   2b31c:	mov	x0, x19
   2b320:	mov	x1, x22
   2b324:	mov	x2, x24
   2b328:	mov	x3, x21
   2b32c:	mov	x4, x20
   2b330:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2b334:	cbnz	w0, 2be68 <PyInit__decimal@@Base+0x253b4>
   2b338:	ldrb	w8, [x22]
   2b33c:	ldrb	w10, [x24]
   2b340:	tbnz	w8, #1, 2b4fc <PyInit__decimal@@Base+0x24a48>
   2b344:	ldr	x11, [x21, #16]
   2b348:	ldr	x12, [x21]
   2b34c:	ldrb	w9, [x19]
   2b350:	eor	w8, w10, w8
   2b354:	and	w21, w8, #0x1
   2b358:	sub	x8, x11, x12
   2b35c:	add	x22, x8, #0x1
   2b360:	tbnz	w9, #5, 2b3a4 <PyInit__decimal@@Base+0x248f0>
   2b364:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   2b368:	ldr	x8, [x19, #32]
   2b36c:	ldr	x1, [x23, #1344]
   2b370:	cmp	x8, x1
   2b374:	b.le	2b3a4 <PyInit__decimal@@Base+0x248f0>
   2b378:	strb	wzr, [sp, #80]
   2b37c:	ldr	x0, [x19, #40]
   2b380:	add	x3, sp, #0x50
   2b384:	mov	w2, #0x8                   	// #8
   2b388:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b38c:	str	x0, [x19, #40]
   2b390:	ldrb	w8, [sp, #80]
   2b394:	cbnz	w8, 2b3a0 <PyInit__decimal@@Base+0x248ec>
   2b398:	ldr	x8, [x23, #1344]
   2b39c:	str	x8, [x19, #32]
   2b3a0:	ldrb	w9, [x19]
   2b3a4:	ldr	x10, [x19, #40]
   2b3a8:	and	w8, w9, #0xf0
   2b3ac:	mov	w11, #0x1                   	// #1
   2b3b0:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2b3b4:	orr	w8, w8, w21
   2b3b8:	str	x22, [x19, #8]
   2b3bc:	add	x9, x9, #0xca0
   2b3c0:	strb	w8, [x19]
   2b3c4:	stp	xzr, xzr, [x10]
   2b3c8:	str	x11, [x19, #24]
   2b3cc:	ldr	x8, [x10]
   2b3d0:	ldr	x10, [x9, #72]
   2b3d4:	cmp	x10, x8
   2b3d8:	b.ls	2b624 <PyInit__decimal@@Base+0x24b70>  // b.plast
   2b3dc:	ldr	x10, [x9, #32]
   2b3e0:	cmp	x10, x8
   2b3e4:	b.ls	2b7dc <PyInit__decimal@@Base+0x24d28>  // b.plast
   2b3e8:	ldr	x10, [x9, #16]
   2b3ec:	cmp	x10, x8
   2b3f0:	b.ls	2b864 <PyInit__decimal@@Base+0x24db0>  // b.plast
   2b3f4:	ldr	x9, [x9, #8]
   2b3f8:	cmp	x9, x8
   2b3fc:	mov	w8, #0x1                   	// #1
   2b400:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b404:	ldr	x10, [x24, #40]
   2b408:	ldr	x11, [x24, #24]
   2b40c:	ldr	x12, [x22, #40]
   2b410:	ldr	x13, [x22, #24]
   2b414:	and	w27, w8, #0x1
   2b418:	add	x10, x10, x11, lsl #3
   2b41c:	ldur	x11, [x10, #-8]
   2b420:	add	x10, x12, x13, lsl #3
   2b424:	ldur	x10, [x10, #-8]
   2b428:	and	w28, w9, #0x1
   2b42c:	cbz	x11, 2b484 <PyInit__decimal@@Base+0x249d0>
   2b430:	cbz	x10, 2b56c <PyInit__decimal@@Base+0x24ab8>
   2b434:	ldp	x11, x9, [x22, #8]
   2b438:	ldr	x10, [x21]
   2b43c:	mov	w23, w0
   2b440:	str	x11, [sp, #24]
   2b444:	ldp	x11, x8, [x24, #8]
   2b448:	sub	x8, x8, x9
   2b44c:	add	x8, x8, x10
   2b450:	add	x26, x8, #0x1
   2b454:	cmp	x26, #0x1
   2b458:	mvn	x25, x8
   2b45c:	str	x11, [sp, #16]
   2b460:	b.lt	2b6b8 <PyInit__decimal@@Base+0x24c04>  // b.tstop
   2b464:	add	x0, sp, #0x250
   2b468:	mov	x1, x22
   2b46c:	mov	x2, x26
   2b470:	mov	x3, x20
   2b474:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2b478:	add	x22, sp, #0x250
   2b47c:	cbnz	w0, 2b6d8 <PyInit__decimal@@Base+0x24c24>
   2b480:	b	2b9a0 <PyInit__decimal@@Base+0x24eec>
   2b484:	cbz	x10, 2b748 <PyInit__decimal@@Base+0x24c94>
   2b488:	ldrb	w8, [x19]
   2b48c:	eor	w21, w28, w27
   2b490:	tbnz	w8, #5, 2b4d4 <PyInit__decimal@@Base+0x24a20>
   2b494:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2b498:	ldr	x9, [x19, #32]
   2b49c:	ldr	x1, [x22, #1344]
   2b4a0:	cmp	x9, x1
   2b4a4:	b.le	2b4d4 <PyInit__decimal@@Base+0x24a20>
   2b4a8:	strb	wzr, [sp, #80]
   2b4ac:	ldr	x0, [x19, #40]
   2b4b0:	add	x3, sp, #0x50
   2b4b4:	mov	w2, #0x8                   	// #8
   2b4b8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b4bc:	str	x0, [x19, #40]
   2b4c0:	ldrb	w8, [sp, #80]
   2b4c4:	cbnz	w8, 2b4d0 <PyInit__decimal@@Base+0x24a1c>
   2b4c8:	ldr	x8, [x22, #1344]
   2b4cc:	str	x8, [x19, #32]
   2b4d0:	ldrb	w8, [x19]
   2b4d4:	and	w8, w8, #0xf0
   2b4d8:	orr	w8, w21, w8
   2b4dc:	orr	w8, w8, #0x2
   2b4e0:	stp	xzr, xzr, [x19, #16]
   2b4e4:	strb	w8, [x19]
   2b4e8:	str	xzr, [x19, #8]
   2b4ec:	ldr	w8, [x20]
   2b4f0:	orr	w8, w8, #0x4
   2b4f4:	str	w8, [x20]
   2b4f8:	b	2be68 <PyInit__decimal@@Base+0x253b4>
   2b4fc:	tbnz	w10, #1, 2b64c <PyInit__decimal@@Base+0x24b98>
   2b500:	ldrb	w9, [x19]
   2b504:	eor	w8, w10, w8
   2b508:	and	w20, w8, #0x1
   2b50c:	tbnz	w9, #5, 2b550 <PyInit__decimal@@Base+0x24a9c>
   2b510:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2b514:	ldr	x8, [x19, #32]
   2b518:	ldr	x1, [x21, #1344]
   2b51c:	cmp	x8, x1
   2b520:	b.le	2b550 <PyInit__decimal@@Base+0x24a9c>
   2b524:	strb	wzr, [sp, #80]
   2b528:	ldr	x0, [x19, #40]
   2b52c:	add	x3, sp, #0x50
   2b530:	mov	w2, #0x8                   	// #8
   2b534:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b538:	str	x0, [x19, #40]
   2b53c:	ldrb	w8, [sp, #80]
   2b540:	cbnz	w8, 2b54c <PyInit__decimal@@Base+0x24a98>
   2b544:	ldr	x8, [x21, #1344]
   2b548:	str	x8, [x19, #32]
   2b54c:	ldrb	w9, [x19]
   2b550:	and	w8, w9, #0xf0
   2b554:	orr	w8, w20, w8
   2b558:	orr	w8, w8, #0x2
   2b55c:	stp	xzr, xzr, [x19, #16]
   2b560:	strb	w8, [x19]
   2b564:	str	xzr, [x19, #8]
   2b568:	b	2be68 <PyInit__decimal@@Base+0x253b4>
   2b56c:	ldr	x9, [x22, #8]
   2b570:	ldr	x10, [x24, #8]
   2b574:	ldrb	w8, [x19]
   2b578:	eor	w22, w28, w27
   2b57c:	sub	x23, x9, x10
   2b580:	tbnz	w8, #5, 2b5c4 <PyInit__decimal@@Base+0x24b10>
   2b584:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   2b588:	ldr	x9, [x19, #32]
   2b58c:	ldr	x1, [x24, #1344]
   2b590:	cmp	x9, x1
   2b594:	b.le	2b5c4 <PyInit__decimal@@Base+0x24b10>
   2b598:	strb	wzr, [sp, #80]
   2b59c:	ldr	x0, [x19, #40]
   2b5a0:	add	x3, sp, #0x50
   2b5a4:	mov	w2, #0x8                   	// #8
   2b5a8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b5ac:	str	x0, [x19, #40]
   2b5b0:	ldrb	w8, [sp, #80]
   2b5b4:	cbnz	w8, 2b5c0 <PyInit__decimal@@Base+0x24b0c>
   2b5b8:	ldr	x8, [x24, #1344]
   2b5bc:	str	x8, [x19, #32]
   2b5c0:	ldrb	w8, [x19]
   2b5c4:	ldr	x10, [x19, #40]
   2b5c8:	and	w8, w8, #0xf0
   2b5cc:	mov	w11, #0x1                   	// #1
   2b5d0:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2b5d4:	orr	w8, w8, w22
   2b5d8:	str	x23, [x19, #8]
   2b5dc:	add	x9, x9, #0xca0
   2b5e0:	strb	w8, [x19]
   2b5e4:	stp	xzr, xzr, [x10]
   2b5e8:	str	x11, [x19, #24]
   2b5ec:	ldr	x8, [x10]
   2b5f0:	ldr	x10, [x9, #72]
   2b5f4:	cmp	x10, x8
   2b5f8:	b.ls	2b7b4 <PyInit__decimal@@Base+0x24d00>  // b.plast
   2b5fc:	ldr	x10, [x9, #32]
   2b600:	cmp	x10, x8
   2b604:	b.ls	2b820 <PyInit__decimal@@Base+0x24d6c>  // b.plast
   2b608:	ldr	x10, [x9, #16]
   2b60c:	cmp	x10, x8
   2b610:	b.ls	2bbd0 <PyInit__decimal@@Base+0x2511c>  // b.plast
   2b614:	ldr	x9, [x9, #8]
   2b618:	cmp	x9, x8
   2b61c:	mov	w8, #0x1                   	// #1
   2b620:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2b624:	ldr	x10, [x9, #112]
   2b628:	cmp	x10, x8
   2b62c:	b.ls	2b7f8 <PyInit__decimal@@Base+0x24d44>  // b.plast
   2b630:	ldr	x10, [x9, #88]
   2b634:	cmp	x10, x8
   2b638:	b.ls	2b874 <PyInit__decimal@@Base+0x24dc0>  // b.plast
   2b63c:	ldr	x9, [x9, #80]
   2b640:	cmp	x9, x8
   2b644:	mov	w8, #0xa                   	// #10
   2b648:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b64c:	ldrb	w8, [x19]
   2b650:	tbnz	w8, #5, 2b694 <PyInit__decimal@@Base+0x24be0>
   2b654:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2b658:	ldr	x9, [x19, #32]
   2b65c:	ldr	x1, [x21, #1344]
   2b660:	cmp	x9, x1
   2b664:	b.le	2b694 <PyInit__decimal@@Base+0x24be0>
   2b668:	strb	wzr, [sp, #80]
   2b66c:	ldr	x0, [x19, #40]
   2b670:	add	x3, sp, #0x50
   2b674:	mov	w2, #0x8                   	// #8
   2b678:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b67c:	str	x0, [x19, #40]
   2b680:	ldrb	w8, [sp, #80]
   2b684:	cbnz	w8, 2b690 <PyInit__decimal@@Base+0x24bdc>
   2b688:	ldr	x8, [x21, #1344]
   2b68c:	str	x8, [x19, #32]
   2b690:	ldrb	w8, [x19]
   2b694:	and	w8, w8, #0xf0
   2b698:	orr	w8, w8, #0x4
   2b69c:	stp	xzr, xzr, [x19, #16]
   2b6a0:	strb	w8, [x19]
   2b6a4:	str	xzr, [x19, #8]
   2b6a8:	ldr	w8, [x20]
   2b6ac:	orr	w8, w8, #0x100
   2b6b0:	str	w8, [x20]
   2b6b4:	b	2be68 <PyInit__decimal@@Base+0x253b4>
   2b6b8:	tbz	x26, #63, 2b6d8 <PyInit__decimal@@Base+0x24c24>
   2b6bc:	add	x0, sp, #0x250
   2b6c0:	mov	x1, x24
   2b6c4:	mov	x2, x25
   2b6c8:	mov	x3, x20
   2b6cc:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2b6d0:	add	x24, sp, #0x250
   2b6d4:	cbz	w0, 2b9a0 <PyInit__decimal@@Base+0x24eec>
   2b6d8:	ldr	x9, [x22, #24]
   2b6dc:	ldr	x5, [x24, #24]
   2b6e0:	cmp	x24, x19
   2b6e4:	str	x26, [sp, #8]
   2b6e8:	cset	w8, eq  // eq = none
   2b6ec:	sub	x9, x9, x5
   2b6f0:	cmp	x22, x19
   2b6f4:	add	x26, x9, #0x1
   2b6f8:	cset	w9, eq  // eq = none
   2b6fc:	cmp	x26, x5
   2b700:	cset	w10, gt
   2b704:	and	w10, w8, w10
   2b708:	tbnz	w10, #0, 2b714 <PyInit__decimal@@Base+0x24c60>
   2b70c:	orr	w8, w8, w9
   2b710:	cbnz	w8, 2b8d8 <PyInit__decimal@@Base+0x24e24>
   2b714:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2b718:	ldr	x9, [x8, #1344]
   2b71c:	ldr	x8, [x19, #32]
   2b720:	cmp	x9, x26
   2b724:	csel	x1, x26, x9, lt  // lt = tstop
   2b728:	cmp	x1, x8
   2b72c:	b.eq	2b8d8 <PyInit__decimal@@Base+0x24e24>  // b.none
   2b730:	ldrb	w9, [x19]
   2b734:	tbnz	w9, #5, 2b8bc <PyInit__decimal@@Base+0x24e08>
   2b738:	mov	x0, x19
   2b73c:	mov	x2, x20
   2b740:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2b744:	b	2b8d0 <PyInit__decimal@@Base+0x24e1c>
   2b748:	ldrb	w8, [x19]
   2b74c:	tbnz	w8, #5, 2b790 <PyInit__decimal@@Base+0x24cdc>
   2b750:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2b754:	ldr	x9, [x19, #32]
   2b758:	ldr	x1, [x21, #1344]
   2b75c:	cmp	x9, x1
   2b760:	b.le	2b790 <PyInit__decimal@@Base+0x24cdc>
   2b764:	strb	wzr, [sp, #80]
   2b768:	ldr	x0, [x19, #40]
   2b76c:	add	x3, sp, #0x50
   2b770:	mov	w2, #0x8                   	// #8
   2b774:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b778:	str	x0, [x19, #40]
   2b77c:	ldrb	w8, [sp, #80]
   2b780:	cbnz	w8, 2b78c <PyInit__decimal@@Base+0x24cd8>
   2b784:	ldr	x8, [x21, #1344]
   2b788:	str	x8, [x19, #32]
   2b78c:	ldrb	w8, [x19]
   2b790:	and	w8, w8, #0xf0
   2b794:	orr	w8, w8, #0x4
   2b798:	stp	xzr, xzr, [x19, #16]
   2b79c:	strb	w8, [x19]
   2b7a0:	str	xzr, [x19, #8]
   2b7a4:	ldr	w8, [x20]
   2b7a8:	orr	w8, w8, #0x10
   2b7ac:	str	w8, [x20]
   2b7b0:	b	2be68 <PyInit__decimal@@Base+0x253b4>
   2b7b4:	ldr	x10, [x9, #112]
   2b7b8:	cmp	x10, x8
   2b7bc:	b.ls	2b83c <PyInit__decimal@@Base+0x24d88>  // b.plast
   2b7c0:	ldr	x10, [x9, #88]
   2b7c4:	cmp	x10, x8
   2b7c8:	b.ls	2bbe0 <PyInit__decimal@@Base+0x2512c>  // b.plast
   2b7cc:	ldr	x9, [x9, #80]
   2b7d0:	cmp	x9, x8
   2b7d4:	mov	w8, #0xa                   	// #10
   2b7d8:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2b7dc:	ldr	x10, [x9, #48]
   2b7e0:	cmp	x10, x8
   2b7e4:	b.ls	2b890 <PyInit__decimal@@Base+0x24ddc>  // b.plast
   2b7e8:	ldr	x9, [x9, #40]
   2b7ec:	cmp	x9, x8
   2b7f0:	mov	w8, #0x5                   	// #5
   2b7f4:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b7f8:	ldr	x10, [x9, #144]
   2b7fc:	cmp	x10, x8
   2b800:	b.ls	2b8ac <PyInit__decimal@@Base+0x24df8>  // b.plast
   2b804:	ldr	x10, [x9, #128]
   2b808:	cmp	x10, x8
   2b80c:	b.ls	2bcb0 <PyInit__decimal@@Base+0x251fc>  // b.plast
   2b810:	ldr	x9, [x9, #120]
   2b814:	cmp	x9, x8
   2b818:	mov	w8, #0xf                   	// #15
   2b81c:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b820:	ldr	x10, [x9, #48]
   2b824:	cmp	x10, x8
   2b828:	b.ls	2bbfc <PyInit__decimal@@Base+0x25148>  // b.plast
   2b82c:	ldr	x9, [x9, #40]
   2b830:	cmp	x9, x8
   2b834:	mov	w8, #0x5                   	// #5
   2b838:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2b83c:	ldr	x10, [x9, #144]
   2b840:	cmp	x10, x8
   2b844:	b.ls	2bc18 <PyInit__decimal@@Base+0x25164>  // b.plast
   2b848:	ldr	x10, [x9, #128]
   2b84c:	cmp	x10, x8
   2b850:	b.ls	2bce4 <PyInit__decimal@@Base+0x25230>  // b.plast
   2b854:	ldr	x9, [x9, #120]
   2b858:	cmp	x9, x8
   2b85c:	mov	w8, #0xf                   	// #15
   2b860:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2b864:	ldr	x9, [x9, #24]
   2b868:	cmp	x9, x8
   2b86c:	mov	w8, #0x3                   	// #3
   2b870:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b874:	ldr	x10, [x9, #104]
   2b878:	cmp	x10, x8
   2b87c:	b.ls	2bcd4 <PyInit__decimal@@Base+0x25220>  // b.plast
   2b880:	ldr	x9, [x9, #96]
   2b884:	cmp	x9, x8
   2b888:	mov	w8, #0xc                   	// #12
   2b88c:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b890:	ldr	x10, [x9, #64]
   2b894:	cmp	x10, x8
   2b898:	b.ls	2bcdc <PyInit__decimal@@Base+0x25228>  // b.plast
   2b89c:	ldr	x9, [x9, #56]
   2b8a0:	cmp	x9, x8
   2b8a4:	mov	w8, #0x7                   	// #7
   2b8a8:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b8ac:	ldr	x9, [x9, #152]
   2b8b0:	cmp	x9, x8
   2b8b4:	mov	w8, #0x13                  	// #19
   2b8b8:	b	2bcbc <PyInit__decimal@@Base+0x25208>
   2b8bc:	cmp	x1, x8
   2b8c0:	b.le	2b8d8 <PyInit__decimal@@Base+0x24e24>
   2b8c4:	mov	x0, x19
   2b8c8:	mov	x2, x20
   2b8cc:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2b8d0:	cbz	w0, 2b9a0 <PyInit__decimal@@Base+0x24eec>
   2b8d4:	ldr	x5, [x24, #24]
   2b8d8:	cmp	x5, #0x1
   2b8dc:	b.ne	2b900 <PyInit__decimal@@Base+0x24e4c>  // b.any
   2b8e0:	ldr	x8, [x24, #40]
   2b8e4:	ldr	x0, [x19, #40]
   2b8e8:	ldr	x1, [x22, #40]
   2b8ec:	ldr	x2, [x22, #24]
   2b8f0:	ldr	x3, [x8]
   2b8f4:	bl	1c7e0 <PyInit__decimal@@Base+0x15d2c>
   2b8f8:	mov	x22, x0
   2b8fc:	b	2b928 <PyInit__decimal@@Base+0x24e74>
   2b900:	cmp	x5, #0x400
   2b904:	b.gt	2ba18 <PyInit__decimal@@Base+0x24f64>
   2b908:	ldr	x0, [x19, #40]
   2b90c:	ldr	x2, [x22, #40]
   2b910:	ldr	x3, [x24, #40]
   2b914:	ldr	x4, [x22, #24]
   2b918:	mov	x1, xzr
   2b91c:	bl	1c878 <PyInit__decimal@@Base+0x15dc4>
   2b920:	tbnz	w0, #31, 2b9a0 <PyInit__decimal@@Base+0x24eec>
   2b924:	mov	w22, w0
   2b928:	ldp	x9, x8, [sp, #16]
   2b92c:	ldr	x10, [x19, #40]
   2b930:	sub	x8, x8, x9
   2b934:	add	x13, x8, x25
   2b938:	mov	w8, #0x13                  	// #19
   2b93c:	msub	x9, x26, x8, x8
   2b940:	sub	x8, x10, #0x8
   2b944:	mov	x24, x26
   2b948:	cmp	x26, #0x2
   2b94c:	mov	x25, x9
   2b950:	b.lt	2b964 <PyInit__decimal@@Base+0x24eb0>  // b.tstop
   2b954:	ldr	x10, [x8, x24, lsl #3]
   2b958:	sub	x26, x24, #0x1
   2b95c:	add	x9, x25, #0x13
   2b960:	cbz	x10, 2b944 <PyInit__decimal@@Base+0x24e90>
   2b964:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2b968:	ldr	x9, [x8, #1344]
   2b96c:	ldr	x8, [x19, #32]
   2b970:	ldr	x15, [sp, #8]
   2b974:	cmp	x9, x24
   2b978:	csel	x1, x24, x9, lt  // lt = tstop
   2b97c:	cmp	x1, x8
   2b980:	b.eq	2bb04 <PyInit__decimal@@Base+0x25050>  // b.none
   2b984:	ldrb	w9, [x19]
   2b988:	tbnz	w9, #5, 2bae4 <PyInit__decimal@@Base+0x25030>
   2b98c:	mov	x0, x19
   2b990:	mov	x2, x20
   2b994:	mov	x26, x13
   2b998:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2b99c:	b	2bafc <PyInit__decimal@@Base+0x25048>
   2b9a0:	ldrb	w8, [x19]
   2b9a4:	tbnz	w8, #5, 2b9e8 <PyInit__decimal@@Base+0x24f34>
   2b9a8:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2b9ac:	ldr	x9, [x19, #32]
   2b9b0:	ldr	x1, [x22, #1344]
   2b9b4:	cmp	x9, x1
   2b9b8:	b.le	2b9e8 <PyInit__decimal@@Base+0x24f34>
   2b9bc:	strb	wzr, [sp, #80]
   2b9c0:	ldr	x0, [x19, #40]
   2b9c4:	add	x3, sp, #0x50
   2b9c8:	mov	w2, #0x8                   	// #8
   2b9cc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2b9d0:	str	x0, [x19, #40]
   2b9d4:	ldrb	w8, [sp, #80]
   2b9d8:	cbnz	w8, 2b9e4 <PyInit__decimal@@Base+0x24f30>
   2b9dc:	ldr	x8, [x22, #1344]
   2b9e0:	str	x8, [x19, #32]
   2b9e4:	ldrb	w8, [x19]
   2b9e8:	and	w8, w8, #0xf0
   2b9ec:	orr	w8, w8, #0x4
   2b9f0:	stp	xzr, xzr, [x19, #16]
   2b9f4:	strb	w8, [x19]
   2b9f8:	str	xzr, [x19, #8]
   2b9fc:	ldr	w8, [x20]
   2ba00:	orr	w8, w8, #0x200
   2ba04:	str	w8, [x20]
   2ba08:	ldrb	w8, [sp, #592]
   2ba0c:	cmp	w8, #0x1f
   2ba10:	b.hi	2badc <PyInit__decimal@@Base+0x25028>  // b.pmore
   2ba14:	b	2be30 <PyInit__decimal@@Base+0x2537c>
   2ba18:	mov	w8, #0x30                  	// #48
   2ba1c:	mov	w9, #0x40                  	// #64
   2ba20:	add	x10, sp, #0x50
   2ba24:	add	x1, sp, #0x20
   2ba28:	mov	x0, x19
   2ba2c:	mov	x2, x22
   2ba30:	mov	x3, x24
   2ba34:	mov	x4, x20
   2ba38:	stp	xzr, xzr, [sp, #40]
   2ba3c:	strb	w8, [sp, #32]
   2ba40:	stp	xzr, x9, [sp, #56]
   2ba44:	str	x10, [sp, #72]
   2ba48:	bl	3b248 <PyInit__decimal@@Base+0x34794>
   2ba4c:	ldrb	w8, [x19]
   2ba50:	tst	w8, #0xe
   2ba54:	b.ne	2ba64 <PyInit__decimal@@Base+0x24fb0>  // b.any
   2ba58:	ldrb	w9, [sp, #32]
   2ba5c:	tst	w9, #0xe
   2ba60:	b.eq	2be88 <PyInit__decimal@@Base+0x253d4>  // b.none
   2ba64:	tbnz	w8, #5, 2baa8 <PyInit__decimal@@Base+0x24ff4>
   2ba68:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2ba6c:	ldr	x9, [x19, #32]
   2ba70:	ldr	x1, [x22, #1344]
   2ba74:	cmp	x9, x1
   2ba78:	b.le	2baa8 <PyInit__decimal@@Base+0x24ff4>
   2ba7c:	sturb	wzr, [x29, #-12]
   2ba80:	ldr	x0, [x19, #40]
   2ba84:	sub	x3, x29, #0xc
   2ba88:	mov	w2, #0x8                   	// #8
   2ba8c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2ba90:	str	x0, [x19, #40]
   2ba94:	ldurb	w8, [x29, #-12]
   2ba98:	cbnz	w8, 2baa4 <PyInit__decimal@@Base+0x24ff0>
   2ba9c:	ldr	x8, [x22, #1344]
   2baa0:	str	x8, [x19, #32]
   2baa4:	ldrb	w8, [x19]
   2baa8:	and	w8, w8, #0xf0
   2baac:	orr	w8, w8, #0x4
   2bab0:	stp	xzr, xzr, [x19, #16]
   2bab4:	strb	w8, [x19]
   2bab8:	str	xzr, [x19, #8]
   2babc:	ldrb	w8, [sp, #32]
   2bac0:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2bac4:	cmp	w8, #0x1f
   2bac8:	b.ls	2bc28 <PyInit__decimal@@Base+0x25174>  // b.plast
   2bacc:	tbz	w8, #4, 2bc3c <PyInit__decimal@@Base+0x25188>
   2bad0:	ldrb	w8, [sp, #592]
   2bad4:	cmp	w8, #0x1f
   2bad8:	b.ls	2be30 <PyInit__decimal@@Base+0x2537c>  // b.plast
   2badc:	tbz	w8, #4, 2be48 <PyInit__decimal@@Base+0x25394>
   2bae0:	b	2be58 <PyInit__decimal@@Base+0x253a4>
   2bae4:	cmp	x1, x8
   2bae8:	b.le	2bb04 <PyInit__decimal@@Base+0x25050>
   2baec:	mov	x0, x19
   2baf0:	mov	x2, x20
   2baf4:	mov	x26, x13
   2baf8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2bafc:	ldr	x15, [sp, #8]
   2bb00:	mov	x13, x26
   2bb04:	ldrb	w11, [x19]
   2bb08:	ldr	x8, [x19, #40]
   2bb0c:	eor	w9, w28, w27
   2bb10:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   2bb14:	and	w11, w11, #0xf0
   2bb18:	orr	w9, w11, w9
   2bb1c:	str	x24, [x19, #24]
   2bb20:	add	x10, x10, #0xca0
   2bb24:	add	x12, x8, x24, lsl #3
   2bb28:	strb	w9, [x19]
   2bb2c:	ldur	x9, [x12, #-8]
   2bb30:	ldr	x11, [x10, #72]
   2bb34:	cmp	x11, x9
   2bb38:	b.ls	2bb64 <PyInit__decimal@@Base+0x250b0>  // b.plast
   2bb3c:	ldr	x11, [x10, #32]
   2bb40:	cmp	x11, x9
   2bb44:	b.ls	2bb8c <PyInit__decimal@@Base+0x250d8>  // b.plast
   2bb48:	ldr	x11, [x10, #16]
   2bb4c:	cmp	x11, x9
   2bb50:	b.ls	2bc58 <PyInit__decimal@@Base+0x251a4>  // b.plast
   2bb54:	ldr	x10, [x10, #8]
   2bb58:	cmp	x10, x9
   2bb5c:	mov	w9, #0x1                   	// #1
   2bb60:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bb64:	ldr	x11, [x10, #112]
   2bb68:	cmp	x11, x9
   2bb6c:	b.ls	2bba8 <PyInit__decimal@@Base+0x250f4>  // b.plast
   2bb70:	ldr	x11, [x10, #88]
   2bb74:	cmp	x11, x9
   2bb78:	b.ls	2bc68 <PyInit__decimal@@Base+0x251b4>  // b.plast
   2bb7c:	ldr	x10, [x10, #80]
   2bb80:	cmp	x10, x9
   2bb84:	mov	w9, #0xa                   	// #10
   2bb88:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bb8c:	ldr	x11, [x10, #48]
   2bb90:	cmp	x11, x9
   2bb94:	b.ls	2bc84 <PyInit__decimal@@Base+0x251d0>  // b.plast
   2bb98:	ldr	x10, [x10, #40]
   2bb9c:	cmp	x10, x9
   2bba0:	mov	w9, #0x5                   	// #5
   2bba4:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bba8:	ldr	x11, [x10, #144]
   2bbac:	cmp	x11, x9
   2bbb0:	b.ls	2bca0 <PyInit__decimal@@Base+0x251ec>  // b.plast
   2bbb4:	ldr	x11, [x10, #128]
   2bbb8:	cmp	x11, x9
   2bbbc:	b.ls	2bd14 <PyInit__decimal@@Base+0x25260>  // b.plast
   2bbc0:	ldr	x10, [x10, #120]
   2bbc4:	cmp	x10, x9
   2bbc8:	mov	w9, #0xf                   	// #15
   2bbcc:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bbd0:	ldr	x9, [x9, #24]
   2bbd4:	cmp	x9, x8
   2bbd8:	mov	w8, #0x3                   	// #3
   2bbdc:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2bbe0:	ldr	x10, [x9, #104]
   2bbe4:	cmp	x10, x8
   2bbe8:	b.ls	2bcfc <PyInit__decimal@@Base+0x25248>  // b.plast
   2bbec:	ldr	x9, [x9, #96]
   2bbf0:	cmp	x9, x8
   2bbf4:	mov	w8, #0xc                   	// #12
   2bbf8:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2bbfc:	ldr	x10, [x9, #64]
   2bc00:	cmp	x10, x8
   2bc04:	b.ls	2bd08 <PyInit__decimal@@Base+0x25254>  // b.plast
   2bc08:	ldr	x9, [x9, #56]
   2bc0c:	cmp	x9, x8
   2bc10:	mov	w8, #0x7                   	// #7
   2bc14:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2bc18:	ldr	x9, [x9, #152]
   2bc1c:	cmp	x9, x8
   2bc20:	mov	w8, #0x13                  	// #19
   2bc24:	b	2bcf0 <PyInit__decimal@@Base+0x2523c>
   2bc28:	ldr	x8, [x22, #1376]
   2bc2c:	ldr	x0, [sp, #72]
   2bc30:	blr	x8
   2bc34:	ldrb	w8, [sp, #32]
   2bc38:	tbnz	w8, #4, 2bad0 <PyInit__decimal@@Base+0x2501c>
   2bc3c:	ldr	x8, [x22, #1376]
   2bc40:	add	x0, sp, #0x20
   2bc44:	blr	x8
   2bc48:	ldrb	w8, [sp, #592]
   2bc4c:	cmp	w8, #0x1f
   2bc50:	b.hi	2badc <PyInit__decimal@@Base+0x25028>  // b.pmore
   2bc54:	b	2be30 <PyInit__decimal@@Base+0x2537c>
   2bc58:	ldr	x10, [x10, #24]
   2bc5c:	cmp	x10, x9
   2bc60:	mov	w9, #0x3                   	// #3
   2bc64:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bc68:	ldr	x11, [x10, #104]
   2bc6c:	cmp	x11, x9
   2bc70:	b.ls	2bda8 <PyInit__decimal@@Base+0x252f4>  // b.plast
   2bc74:	ldr	x10, [x10, #96]
   2bc78:	cmp	x10, x9
   2bc7c:	mov	w9, #0xc                   	// #12
   2bc80:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bc84:	ldr	x11, [x10, #64]
   2bc88:	cmp	x11, x9
   2bc8c:	b.ls	2bdb0 <PyInit__decimal@@Base+0x252fc>  // b.plast
   2bc90:	ldr	x10, [x10, #56]
   2bc94:	cmp	x10, x9
   2bc98:	mov	w9, #0x7                   	// #7
   2bc9c:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bca0:	ldr	x10, [x10, #152]
   2bca4:	cmp	x10, x9
   2bca8:	mov	w9, #0x13                  	// #19
   2bcac:	b	2bd20 <PyInit__decimal@@Base+0x2526c>
   2bcb0:	ldr	x9, [x9, #136]
   2bcb4:	cmp	x9, x8
   2bcb8:	mov	w8, #0x11                  	// #17
   2bcbc:	cinc	x8, x8, ls  // ls = plast
   2bcc0:	str	x8, [x19, #16]
   2bcc4:	ldr	w8, [x20]
   2bcc8:	orr	w8, w8, #0x1
   2bccc:	str	w8, [x20]
   2bcd0:	b	2be68 <PyInit__decimal@@Base+0x253b4>
   2bcd4:	mov	w8, #0xe                   	// #14
   2bcd8:	b	2bcc0 <PyInit__decimal@@Base+0x2520c>
   2bcdc:	mov	w8, #0x9                   	// #9
   2bce0:	b	2bcc0 <PyInit__decimal@@Base+0x2520c>
   2bce4:	ldr	x9, [x9, #136]
   2bce8:	cmp	x9, x8
   2bcec:	mov	w8, #0x11                  	// #17
   2bcf0:	cinc	x8, x8, ls  // ls = plast
   2bcf4:	str	x8, [x19, #16]
   2bcf8:	b	2be58 <PyInit__decimal@@Base+0x253a4>
   2bcfc:	mov	w8, #0xe                   	// #14
   2bd00:	str	x8, [x19, #16]
   2bd04:	b	2be58 <PyInit__decimal@@Base+0x253a4>
   2bd08:	mov	w8, #0x9                   	// #9
   2bd0c:	str	x8, [x19, #16]
   2bd10:	b	2be58 <PyInit__decimal@@Base+0x253a4>
   2bd14:	ldr	x10, [x10, #136]
   2bd18:	cmp	x10, x9
   2bd1c:	mov	w9, #0x11                  	// #17
   2bd20:	cinc	x9, x9, ls  // ls = plast
   2bd24:	sub	x9, x9, x25
   2bd28:	str	x9, [x19, #16]
   2bd2c:	cbz	x22, 2bd64 <PyInit__decimal@@Base+0x252b0>
   2bd30:	ldr	x9, [x8]
   2bd34:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2bd38:	movk	x10, #0xcccd
   2bd3c:	mov	w11, #0xa                   	// #10
   2bd40:	umulh	x10, x9, x10
   2bd44:	lsr	x10, x10, #3
   2bd48:	msub	x10, x10, x11, x9
   2bd4c:	cmp	x10, #0x5
   2bd50:	b.eq	2bd58 <PyInit__decimal@@Base+0x252a4>  // b.none
   2bd54:	cbnz	x10, 2be20 <PyInit__decimal@@Base+0x2536c>
   2bd58:	add	x9, x9, #0x1
   2bd5c:	str	x9, [x8]
   2bd60:	b	2be20 <PyInit__decimal@@Base+0x2536c>
   2bd64:	cmp	w23, #0x1
   2bd68:	b.ne	2be20 <PyInit__decimal@@Base+0x2536c>  // b.any
   2bd6c:	cmp	x15, #0x1
   2bd70:	b.lt	2be20 <PyInit__decimal@@Base+0x2536c>  // b.tstop
   2bd74:	cmp	x24, #0x1
   2bd78:	b.lt	2bd9c <PyInit__decimal@@Base+0x252e8>  // b.tstop
   2bd7c:	mov	x9, xzr
   2bd80:	mov	x11, xzr
   2bd84:	ldr	x10, [x8, x11, lsl #3]
   2bd88:	cbnz	x10, 2bdb8 <PyInit__decimal@@Base+0x25304>
   2bd8c:	add	x11, x11, #0x1
   2bd90:	cmp	x24, x11
   2bd94:	add	x9, x9, #0x13
   2bd98:	b.ne	2bd84 <PyInit__decimal@@Base+0x252d0>  // b.any
   2bd9c:	mov	x23, x13
   2bda0:	mov	x9, xzr
   2bda4:	b	2be04 <PyInit__decimal@@Base+0x25350>
   2bda8:	mov	w9, #0xe                   	// #14
   2bdac:	b	2bd24 <PyInit__decimal@@Base+0x25270>
   2bdb0:	mov	w9, #0x9                   	// #9
   2bdb4:	b	2bd24 <PyInit__decimal@@Base+0x25270>
   2bdb8:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   2bdbc:	movk	x8, #0xcccd
   2bdc0:	mul	x11, x10, x8
   2bdc4:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   2bdc8:	ror	x11, x11, #1
   2bdcc:	movk	x12, #0x1999, lsl #48
   2bdd0:	mov	x23, x13
   2bdd4:	cmp	x11, x12
   2bdd8:	b.hi	2be04 <PyInit__decimal@@Base+0x25350>  // b.pmore
   2bddc:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   2bde0:	movk	x11, #0x999a
   2bde4:	movk	x11, #0x1999, lsl #48
   2bde8:	umulh	x10, x10, x8
   2bdec:	lsr	x10, x10, #3
   2bdf0:	mul	x12, x10, x8
   2bdf4:	ror	x12, x12, #1
   2bdf8:	cmp	x12, x11
   2bdfc:	add	x9, x9, #0x1
   2be00:	b.cc	2bde8 <PyInit__decimal@@Base+0x25334>  // b.lo, b.ul, b.last
   2be04:	cmp	x9, x15
   2be08:	csel	x22, x15, x9, gt
   2be0c:	mov	x0, x19
   2be10:	mov	x1, x22
   2be14:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   2be18:	mov	x13, x23
   2be1c:	add	x13, x22, x23
   2be20:	str	x13, [x19, #8]
   2be24:	ldrb	w8, [sp, #592]
   2be28:	cmp	w8, #0x1f
   2be2c:	b.hi	2badc <PyInit__decimal@@Base+0x25028>  // b.pmore
   2be30:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2be34:	ldr	x8, [x8, #1376]
   2be38:	ldr	x0, [sp, #632]
   2be3c:	blr	x8
   2be40:	ldrb	w8, [sp, #592]
   2be44:	tbnz	w8, #4, 2be58 <PyInit__decimal@@Base+0x253a4>
   2be48:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2be4c:	ldr	x8, [x8, #1376]
   2be50:	add	x0, sp, #0x250
   2be54:	blr	x8
   2be58:	mov	x0, x19
   2be5c:	mov	x1, x21
   2be60:	mov	x2, x20
   2be64:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2be68:	add	sp, sp, #0x490
   2be6c:	ldp	x20, x19, [sp, #80]
   2be70:	ldp	x22, x21, [sp, #64]
   2be74:	ldp	x24, x23, [sp, #48]
   2be78:	ldp	x26, x25, [sp, #32]
   2be7c:	ldp	x28, x27, [sp, #16]
   2be80:	ldp	x29, x30, [sp], #96
   2be84:	ret
   2be88:	ldr	x0, [sp, #72]
   2be8c:	ldr	x8, [sp, #56]
   2be90:	add	x8, x0, x8, lsl #3
   2be94:	ldur	x8, [x8, #-8]
   2be98:	cmp	x8, #0x0
   2be9c:	cset	w22, ne  // ne = any
   2bea0:	cmp	w9, #0x1f
   2bea4:	b.hi	2beb8 <PyInit__decimal@@Base+0x25404>  // b.pmore
   2bea8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2beac:	ldr	x8, [x8, #1376]
   2beb0:	blr	x8
   2beb4:	ldrb	w9, [sp, #32]
   2beb8:	tbnz	w9, #4, 2becc <PyInit__decimal@@Base+0x25418>
   2bebc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2bec0:	ldr	x8, [x8, #1376]
   2bec4:	add	x0, sp, #0x20
   2bec8:	blr	x8
   2becc:	ldr	x26, [x19, #24]
   2bed0:	b	2b928 <PyInit__decimal@@Base+0x24e74>
   2bed4:	sub	sp, sp, #0x70
   2bed8:	stp	x29, x30, [sp, #32]
   2bedc:	str	x25, [sp, #48]
   2bee0:	stp	x24, x23, [sp, #64]
   2bee4:	stp	x22, x21, [sp, #80]
   2bee8:	stp	x20, x19, [sp, #96]
   2beec:	add	x29, sp, #0x20
   2bef0:	ldrb	w8, [x2]
   2bef4:	ldrb	w9, [x3]
   2bef8:	mov	x20, x5
   2befc:	mov	x22, x4
   2bf00:	mov	x24, x3
   2bf04:	eor	w10, w9, w8
   2bf08:	orr	w8, w8, w9
   2bf0c:	mov	x23, x2
   2bf10:	mov	x21, x1
   2bf14:	mov	x19, x0
   2bf18:	tst	w8, #0xe
   2bf1c:	and	w25, w10, #0x1
   2bf20:	b.eq	2bf84 <PyInit__decimal@@Base+0x254d0>  // b.none
   2bf24:	mov	x0, x19
   2bf28:	mov	x1, x23
   2bf2c:	mov	x2, x24
   2bf30:	mov	x3, x22
   2bf34:	mov	x4, x20
   2bf38:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2bf3c:	cbz	w0, 2bfec <PyInit__decimal@@Base+0x25538>
   2bf40:	cmp	x21, x19
   2bf44:	b.eq	2c588 <PyInit__decimal@@Base+0x25ad4>  // b.none
   2bf48:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   2bf4c:	ldr	x8, [x19, #24]
   2bf50:	ldr	x10, [x9, #1344]
   2bf54:	ldr	x9, [x21, #32]
   2bf58:	cmp	x10, x8
   2bf5c:	csel	x1, x8, x10, lt  // lt = tstop
   2bf60:	cmp	x1, x9
   2bf64:	b.eq	2c174 <PyInit__decimal@@Base+0x256c0>  // b.none
   2bf68:	ldrb	w10, [x21]
   2bf6c:	tbnz	w10, #5, 2c158 <PyInit__decimal@@Base+0x256a4>
   2bf70:	mov	x0, x21
   2bf74:	mov	x2, x20
   2bf78:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2bf7c:	cbnz	w0, 2c170 <PyInit__decimal@@Base+0x256bc>
   2bf80:	b	2c588 <PyInit__decimal@@Base+0x25ad4>
   2bf84:	ldr	x8, [x24, #40]
   2bf88:	ldr	x9, [x24, #24]
   2bf8c:	add	x8, x8, x9, lsl #3
   2bf90:	ldur	x8, [x8, #-8]
   2bf94:	cbz	x8, 2c03c <PyInit__decimal@@Base+0x25588>
   2bf98:	mov	x0, x19
   2bf9c:	mov	x1, x21
   2bfa0:	mov	x2, x23
   2bfa4:	mov	x3, x24
   2bfa8:	mov	x4, x22
   2bfac:	mov	x5, x20
   2bfb0:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   2bfb4:	mov	x0, x19
   2bfb8:	mov	x1, x22
   2bfbc:	mov	x2, x20
   2bfc0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2bfc4:	mov	x0, x21
   2bfc8:	mov	x1, x22
   2bfcc:	mov	x2, x20
   2bfd0:	ldp	x20, x19, [sp, #96]
   2bfd4:	ldp	x22, x21, [sp, #80]
   2bfd8:	ldp	x24, x23, [sp, #64]
   2bfdc:	ldr	x25, [sp, #48]
   2bfe0:	ldp	x29, x30, [sp, #32]
   2bfe4:	add	sp, sp, #0x70
   2bfe8:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2bfec:	ldrb	w8, [x23]
   2bff0:	ldrb	w9, [x24]
   2bff4:	tbnz	w8, #1, 2c100 <PyInit__decimal@@Base+0x2564c>
   2bff8:	tbz	w9, #1, 2c5b4 <PyInit__decimal@@Base+0x25b00>
   2bffc:	cmp	x21, x23
   2c000:	b.eq	2c394 <PyInit__decimal@@Base+0x258e0>  // b.none
   2c004:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   2c008:	ldr	x9, [x23, #24]
   2c00c:	ldr	x11, [x24, #1344]
   2c010:	ldr	x10, [x21, #32]
   2c014:	cmp	x11, x9
   2c018:	csel	x1, x9, x11, lt  // lt = tstop
   2c01c:	cmp	x1, x10
   2c020:	b.eq	2c368 <PyInit__decimal@@Base+0x258b4>  // b.none
   2c024:	ldrb	w11, [x21]
   2c028:	tbnz	w11, #5, 2c348 <PyInit__decimal@@Base+0x25894>
   2c02c:	mov	x0, x21
   2c030:	mov	x2, x20
   2c034:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2c038:	b	2c35c <PyInit__decimal@@Base+0x258a8>
   2c03c:	ldr	x8, [x23, #40]
   2c040:	ldr	x9, [x23, #24]
   2c044:	add	x8, x8, x9, lsl #3
   2c048:	ldur	x9, [x8, #-8]
   2c04c:	ldrb	w8, [x19]
   2c050:	cbz	x9, 2c280 <PyInit__decimal@@Base+0x257cc>
   2c054:	tbnz	w8, #5, 2c098 <PyInit__decimal@@Base+0x255e4>
   2c058:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2c05c:	ldr	x9, [x19, #32]
   2c060:	ldr	x1, [x22, #1344]
   2c064:	cmp	x9, x1
   2c068:	b.le	2c098 <PyInit__decimal@@Base+0x255e4>
   2c06c:	strb	wzr, [sp, #8]
   2c070:	ldr	x0, [x19, #40]
   2c074:	add	x3, sp, #0x8
   2c078:	mov	w2, #0x8                   	// #8
   2c07c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c080:	str	x0, [x19, #40]
   2c084:	ldrb	w8, [sp, #8]
   2c088:	cbnz	w8, 2c094 <PyInit__decimal@@Base+0x255e0>
   2c08c:	ldr	x8, [x22, #1344]
   2c090:	str	x8, [x19, #32]
   2c094:	ldrb	w8, [x19]
   2c098:	and	w8, w8, #0xf0
   2c09c:	orr	w8, w25, w8
   2c0a0:	orr	w8, w8, #0x2
   2c0a4:	stp	xzr, xzr, [x19, #16]
   2c0a8:	strb	w8, [x19]
   2c0ac:	str	xzr, [x19, #8]
   2c0b0:	ldrb	w8, [x21]
   2c0b4:	tbnz	w8, #5, 2c0f8 <PyInit__decimal@@Base+0x25644>
   2c0b8:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2c0bc:	ldr	x9, [x21, #32]
   2c0c0:	ldr	x1, [x19, #1344]
   2c0c4:	cmp	x9, x1
   2c0c8:	b.le	2c0f8 <PyInit__decimal@@Base+0x25644>
   2c0cc:	strb	wzr, [sp, #4]
   2c0d0:	ldr	x0, [x21, #40]
   2c0d4:	add	x3, sp, #0x4
   2c0d8:	mov	w2, #0x8                   	// #8
   2c0dc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c0e0:	str	x0, [x21, #40]
   2c0e4:	ldrb	w8, [sp, #4]
   2c0e8:	cbnz	w8, 2c0f4 <PyInit__decimal@@Base+0x25640>
   2c0ec:	ldr	x8, [x19, #1344]
   2c0f0:	str	x8, [x21, #32]
   2c0f4:	ldrb	w8, [x21]
   2c0f8:	mov	w9, #0x104                 	// #260
   2c0fc:	b	2c324 <PyInit__decimal@@Base+0x25870>
   2c100:	ldrb	w8, [x19]
   2c104:	tbz	w9, #1, 2c1bc <PyInit__decimal@@Base+0x25708>
   2c108:	tbnz	w8, #5, 2c14c <PyInit__decimal@@Base+0x25698>
   2c10c:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2c110:	ldr	x9, [x19, #32]
   2c114:	ldr	x1, [x22, #1344]
   2c118:	cmp	x9, x1
   2c11c:	b.le	2c14c <PyInit__decimal@@Base+0x25698>
   2c120:	strb	wzr, [sp, #12]
   2c124:	ldr	x0, [x19, #40]
   2c128:	add	x3, sp, #0xc
   2c12c:	mov	w2, #0x8                   	// #8
   2c130:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c134:	str	x0, [x19, #40]
   2c138:	ldrb	w8, [sp, #12]
   2c13c:	cbnz	w8, 2c148 <PyInit__decimal@@Base+0x25694>
   2c140:	ldr	x8, [x22, #1344]
   2c144:	str	x8, [x19, #32]
   2c148:	ldrb	w8, [x19]
   2c14c:	and	w8, w8, #0xf0
   2c150:	orr	w8, w8, #0x4
   2c154:	b	2c20c <PyInit__decimal@@Base+0x25758>
   2c158:	cmp	x1, x9
   2c15c:	b.le	2c174 <PyInit__decimal@@Base+0x256c0>
   2c160:	mov	x0, x21
   2c164:	mov	x2, x20
   2c168:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2c16c:	cbz	w0, 2c588 <PyInit__decimal@@Base+0x25ad4>
   2c170:	ldr	x8, [x19, #24]
   2c174:	ldrb	w9, [x19]
   2c178:	ldrb	w10, [x21]
   2c17c:	ldr	x0, [x21, #40]
   2c180:	ldr	x25, [sp, #48]
   2c184:	bfxil	w10, w9, #0, #4
   2c188:	strb	w10, [x21]
   2c18c:	ldur	q0, [x19, #8]
   2c190:	str	x8, [x21, #24]
   2c194:	stur	q0, [x21, #8]
   2c198:	ldr	x8, [x19, #24]
   2c19c:	ldr	x1, [x19, #40]
   2c1a0:	ldp	x20, x19, [sp, #96]
   2c1a4:	ldp	x22, x21, [sp, #80]
   2c1a8:	ldp	x24, x23, [sp, #64]
   2c1ac:	ldp	x29, x30, [sp, #32]
   2c1b0:	lsl	x2, x8, #3
   2c1b4:	add	sp, sp, #0x70
   2c1b8:	b	63c0 <memcpy@plt>
   2c1bc:	tbnz	w8, #5, 2c200 <PyInit__decimal@@Base+0x2574c>
   2c1c0:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2c1c4:	ldr	x9, [x19, #32]
   2c1c8:	ldr	x1, [x22, #1344]
   2c1cc:	cmp	x9, x1
   2c1d0:	b.le	2c200 <PyInit__decimal@@Base+0x2574c>
   2c1d4:	strb	wzr, [sp, #16]
   2c1d8:	ldr	x0, [x19, #40]
   2c1dc:	add	x3, sp, #0x10
   2c1e0:	mov	w2, #0x8                   	// #8
   2c1e4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c1e8:	str	x0, [x19, #40]
   2c1ec:	ldrb	w8, [sp, #16]
   2c1f0:	cbnz	w8, 2c1fc <PyInit__decimal@@Base+0x25748>
   2c1f4:	ldr	x8, [x22, #1344]
   2c1f8:	str	x8, [x19, #32]
   2c1fc:	ldrb	w8, [x19]
   2c200:	and	w8, w8, #0xf0
   2c204:	orr	w8, w25, w8
   2c208:	orr	w8, w8, #0x2
   2c20c:	strb	w8, [x19]
   2c210:	stp	xzr, xzr, [x19, #16]
   2c214:	str	xzr, [x19, #8]
   2c218:	ldrb	w8, [x21]
   2c21c:	tbnz	w8, #5, 2c260 <PyInit__decimal@@Base+0x257ac>
   2c220:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2c224:	ldr	x9, [x21, #32]
   2c228:	ldr	x1, [x19, #1344]
   2c22c:	cmp	x9, x1
   2c230:	b.le	2c260 <PyInit__decimal@@Base+0x257ac>
   2c234:	sturb	wzr, [x29, #-12]
   2c238:	ldr	x0, [x21, #40]
   2c23c:	sub	x3, x29, #0xc
   2c240:	mov	w2, #0x8                   	// #8
   2c244:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c248:	str	x0, [x21, #40]
   2c24c:	ldurb	w8, [x29, #-12]
   2c250:	cbnz	w8, 2c25c <PyInit__decimal@@Base+0x257a8>
   2c254:	ldr	x8, [x19, #1344]
   2c258:	str	x8, [x21, #32]
   2c25c:	ldrb	w8, [x21]
   2c260:	and	w8, w8, #0xf0
   2c264:	orr	w8, w8, #0x4
   2c268:	stp	xzr, xzr, [x21, #16]
   2c26c:	strb	w8, [x21]
   2c270:	str	xzr, [x21, #8]
   2c274:	ldr	w8, [x20]
   2c278:	orr	w8, w8, #0x100
   2c27c:	b	2c340 <PyInit__decimal@@Base+0x2588c>
   2c280:	tbnz	w8, #5, 2c2c4 <PyInit__decimal@@Base+0x25810>
   2c284:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2c288:	ldr	x9, [x19, #32]
   2c28c:	ldr	x1, [x22, #1344]
   2c290:	cmp	x9, x1
   2c294:	b.le	2c2c4 <PyInit__decimal@@Base+0x25810>
   2c298:	strb	wzr, [x29, #28]
   2c29c:	ldr	x0, [x19, #40]
   2c2a0:	add	x3, x29, #0x1c
   2c2a4:	mov	w2, #0x8                   	// #8
   2c2a8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c2ac:	str	x0, [x19, #40]
   2c2b0:	ldrb	w8, [x29, #28]
   2c2b4:	cbnz	w8, 2c2c0 <PyInit__decimal@@Base+0x2580c>
   2c2b8:	ldr	x8, [x22, #1344]
   2c2bc:	str	x8, [x19, #32]
   2c2c0:	ldrb	w8, [x19]
   2c2c4:	and	w8, w8, #0xf0
   2c2c8:	orr	w8, w8, #0x4
   2c2cc:	stp	xzr, xzr, [x19, #16]
   2c2d0:	strb	w8, [x19]
   2c2d4:	str	xzr, [x19, #8]
   2c2d8:	ldrb	w8, [x21]
   2c2dc:	tbnz	w8, #5, 2c320 <PyInit__decimal@@Base+0x2586c>
   2c2e0:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2c2e4:	ldr	x9, [x21, #32]
   2c2e8:	ldr	x1, [x19, #1344]
   2c2ec:	cmp	x9, x1
   2c2f0:	b.le	2c320 <PyInit__decimal@@Base+0x2586c>
   2c2f4:	strb	wzr, [x29, #24]
   2c2f8:	ldr	x0, [x21, #40]
   2c2fc:	add	x3, x29, #0x18
   2c300:	mov	w2, #0x8                   	// #8
   2c304:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c308:	str	x0, [x21, #40]
   2c30c:	ldrb	w8, [x29, #24]
   2c310:	cbnz	w8, 2c31c <PyInit__decimal@@Base+0x25868>
   2c314:	ldr	x8, [x19, #1344]
   2c318:	str	x8, [x21, #32]
   2c31c:	ldrb	w8, [x21]
   2c320:	mov	w9, #0x10                  	// #16
   2c324:	and	w8, w8, #0xf0
   2c328:	orr	w8, w8, #0x4
   2c32c:	stp	xzr, xzr, [x21, #16]
   2c330:	strb	w8, [x21]
   2c334:	str	xzr, [x21, #8]
   2c338:	ldr	w8, [x20]
   2c33c:	orr	w8, w8, w9
   2c340:	str	w8, [x20]
   2c344:	b	2c588 <PyInit__decimal@@Base+0x25ad4>
   2c348:	cmp	x1, x10
   2c34c:	b.le	2c368 <PyInit__decimal@@Base+0x258b4>
   2c350:	mov	x0, x21
   2c354:	mov	x2, x20
   2c358:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2c35c:	cbz	w0, 2c510 <PyInit__decimal@@Base+0x25a5c>
   2c360:	ldr	x9, [x23, #24]
   2c364:	ldrb	w8, [x23]
   2c368:	ldrb	w10, [x21]
   2c36c:	ldr	x0, [x21, #40]
   2c370:	bfxil	w10, w8, #0, #4
   2c374:	strb	w10, [x21]
   2c378:	ldur	q0, [x23, #8]
   2c37c:	str	x9, [x21, #24]
   2c380:	stur	q0, [x21, #8]
   2c384:	ldr	x8, [x23, #24]
   2c388:	ldr	x1, [x23, #40]
   2c38c:	lsl	x2, x8, #3
   2c390:	bl	63c0 <memcpy@plt>
   2c394:	mov	x0, x21
   2c398:	mov	x1, x22
   2c39c:	mov	x2, x20
   2c3a0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2c3a4:	ldrb	w8, [x19]
   2c3a8:	tbnz	w8, #5, 2c3ec <PyInit__decimal@@Base+0x25938>
   2c3ac:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2c3b0:	ldr	x9, [x19, #32]
   2c3b4:	ldr	x1, [x20, #1344]
   2c3b8:	cmp	x9, x1
   2c3bc:	b.le	2c3ec <PyInit__decimal@@Base+0x25938>
   2c3c0:	sturb	wzr, [x29, #-4]
   2c3c4:	ldr	x0, [x19, #40]
   2c3c8:	sub	x3, x29, #0x4
   2c3cc:	mov	w2, #0x8                   	// #8
   2c3d0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c3d4:	str	x0, [x19, #40]
   2c3d8:	ldurb	w8, [x29, #-4]
   2c3dc:	cbnz	w8, 2c3e8 <PyInit__decimal@@Base+0x25934>
   2c3e0:	ldr	x8, [x20, #1344]
   2c3e4:	str	x8, [x19, #32]
   2c3e8:	ldrb	w8, [x19]
   2c3ec:	ldr	x10, [x19, #40]
   2c3f0:	and	w8, w8, #0xf0
   2c3f4:	mov	w11, #0x1                   	// #1
   2c3f8:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2c3fc:	orr	w8, w8, w25
   2c400:	str	xzr, [x19, #8]
   2c404:	add	x9, x9, #0xca0
   2c408:	strb	w8, [x19]
   2c40c:	stp	xzr, xzr, [x10]
   2c410:	str	x11, [x19, #24]
   2c414:	ldr	x8, [x10]
   2c418:	ldr	x10, [x9, #72]
   2c41c:	cmp	x10, x8
   2c420:	b.ls	2c44c <PyInit__decimal@@Base+0x25998>  // b.plast
   2c424:	ldr	x10, [x9, #32]
   2c428:	cmp	x10, x8
   2c42c:	b.ls	2c474 <PyInit__decimal@@Base+0x259c0>  // b.plast
   2c430:	ldr	x10, [x9, #16]
   2c434:	cmp	x10, x8
   2c438:	b.ls	2c4b8 <PyInit__decimal@@Base+0x25a04>  // b.plast
   2c43c:	ldr	x9, [x9, #8]
   2c440:	cmp	x9, x8
   2c444:	mov	w8, #0x1                   	// #1
   2c448:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c44c:	ldr	x10, [x9, #112]
   2c450:	cmp	x10, x8
   2c454:	b.ls	2c490 <PyInit__decimal@@Base+0x259dc>  // b.plast
   2c458:	ldr	x10, [x9, #88]
   2c45c:	cmp	x10, x8
   2c460:	b.ls	2c4c8 <PyInit__decimal@@Base+0x25a14>  // b.plast
   2c464:	ldr	x9, [x9, #80]
   2c468:	cmp	x9, x8
   2c46c:	mov	w8, #0xa                   	// #10
   2c470:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c474:	ldr	x10, [x9, #48]
   2c478:	cmp	x10, x8
   2c47c:	b.ls	2c4e4 <PyInit__decimal@@Base+0x25a30>  // b.plast
   2c480:	ldr	x9, [x9, #40]
   2c484:	cmp	x9, x8
   2c488:	mov	w8, #0x5                   	// #5
   2c48c:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c490:	ldr	x10, [x9, #144]
   2c494:	cmp	x10, x8
   2c498:	b.ls	2c500 <PyInit__decimal@@Base+0x25a4c>  // b.plast
   2c49c:	ldr	x10, [x9, #128]
   2c4a0:	cmp	x10, x8
   2c4a4:	b.ls	2c574 <PyInit__decimal@@Base+0x25ac0>  // b.plast
   2c4a8:	ldr	x9, [x9, #120]
   2c4ac:	cmp	x9, x8
   2c4b0:	mov	w8, #0xf                   	// #15
   2c4b4:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c4b8:	ldr	x9, [x9, #24]
   2c4bc:	cmp	x9, x8
   2c4c0:	mov	w8, #0x3                   	// #3
   2c4c4:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c4c8:	ldr	x10, [x9, #104]
   2c4cc:	cmp	x10, x8
   2c4d0:	b.ls	2c5a4 <PyInit__decimal@@Base+0x25af0>  // b.plast
   2c4d4:	ldr	x9, [x9, #96]
   2c4d8:	cmp	x9, x8
   2c4dc:	mov	w8, #0xc                   	// #12
   2c4e0:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c4e4:	ldr	x10, [x9, #64]
   2c4e8:	cmp	x10, x8
   2c4ec:	b.ls	2c5ac <PyInit__decimal@@Base+0x25af8>  // b.plast
   2c4f0:	ldr	x9, [x9, #56]
   2c4f4:	cmp	x9, x8
   2c4f8:	mov	w8, #0x7                   	// #7
   2c4fc:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c500:	ldr	x9, [x9, #152]
   2c504:	cmp	x9, x8
   2c508:	mov	w8, #0x13                  	// #19
   2c50c:	b	2c580 <PyInit__decimal@@Base+0x25acc>
   2c510:	ldrb	w8, [x19]
   2c514:	tbnz	w8, #5, 2c554 <PyInit__decimal@@Base+0x25aa0>
   2c518:	ldr	x9, [x19, #32]
   2c51c:	ldr	x1, [x24, #1344]
   2c520:	cmp	x9, x1
   2c524:	b.le	2c554 <PyInit__decimal@@Base+0x25aa0>
   2c528:	sturb	wzr, [x29, #-8]
   2c52c:	ldr	x0, [x19, #40]
   2c530:	sub	x3, x29, #0x8
   2c534:	mov	w2, #0x8                   	// #8
   2c538:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c53c:	str	x0, [x19, #40]
   2c540:	ldurb	w8, [x29, #-8]
   2c544:	cbnz	w8, 2c550 <PyInit__decimal@@Base+0x25a9c>
   2c548:	ldr	x8, [x24, #1344]
   2c54c:	str	x8, [x19, #32]
   2c550:	ldrb	w8, [x19]
   2c554:	and	w8, w8, #0xf0
   2c558:	orr	w8, w8, #0x4
   2c55c:	stp	xzr, xzr, [x19, #16]
   2c560:	strb	w8, [x19]
   2c564:	str	xzr, [x19, #8]
   2c568:	ldr	w8, [x20]
   2c56c:	orr	w8, w8, #0x200
   2c570:	b	2c340 <PyInit__decimal@@Base+0x2588c>
   2c574:	ldr	x9, [x9, #136]
   2c578:	cmp	x9, x8
   2c57c:	mov	w8, #0x11                  	// #17
   2c580:	cinc	x8, x8, ls  // ls = plast
   2c584:	str	x8, [x19, #16]
   2c588:	ldp	x20, x19, [sp, #96]
   2c58c:	ldp	x22, x21, [sp, #80]
   2c590:	ldp	x24, x23, [sp, #64]
   2c594:	ldr	x25, [sp, #48]
   2c598:	ldp	x29, x30, [sp, #32]
   2c59c:	add	sp, sp, #0x70
   2c5a0:	ret
   2c5a4:	mov	w8, #0xe                   	// #14
   2c5a8:	b	2c584 <PyInit__decimal@@Base+0x25ad0>
   2c5ac:	mov	w8, #0x9                   	// #9
   2c5b0:	b	2c584 <PyInit__decimal@@Base+0x25ad0>
   2c5b4:	bl	6700 <abort@plt>
   2c5b8:	stp	x29, x30, [sp, #-96]!
   2c5bc:	stp	x28, x27, [sp, #16]
   2c5c0:	stp	x26, x25, [sp, #32]
   2c5c4:	stp	x24, x23, [sp, #48]
   2c5c8:	stp	x22, x21, [sp, #64]
   2c5cc:	stp	x20, x19, [sp, #80]
   2c5d0:	mov	x29, sp
   2c5d4:	sub	sp, sp, #0x250
   2c5d8:	mov	w8, #0x30                  	// #48
   2c5dc:	mov	w9, #0x40                  	// #64
   2c5e0:	add	x10, sp, #0x40
   2c5e4:	stp	xzr, xzr, [sp, #24]
   2c5e8:	strb	w8, [sp, #16]
   2c5ec:	stp	xzr, x9, [sp, #40]
   2c5f0:	str	x10, [sp, #56]
   2c5f4:	mov	x20, x1
   2c5f8:	ldr	x1, [x2, #40]
   2c5fc:	ldr	x10, [x2, #24]
   2c600:	ldrb	w9, [x2]
   2c604:	ldrb	w12, [x3]
   2c608:	ldr	x11, [x2, #8]
   2c60c:	ldr	x8, [x3, #8]
   2c610:	add	x13, x1, x10, lsl #3
   2c614:	ldur	x13, [x13, #-8]
   2c618:	mov	x23, x2
   2c61c:	and	w27, w9, #0x1
   2c620:	and	w12, w12, #0x1
   2c624:	subs	x2, x11, x8
   2c628:	mov	x21, x5
   2c62c:	mov	x19, x0
   2c630:	eor	w26, w12, w27
   2c634:	csel	x25, x8, x11, gt
   2c638:	cbz	x13, 2c75c <PyInit__decimal@@Base+0x25ca8>
   2c63c:	ldr	x12, [x23, #16]
   2c640:	ldr	x13, [x3, #16]
   2c644:	mov	x24, x3
   2c648:	add	x14, x2, x12
   2c64c:	subs	x13, x14, x13
   2c650:	b.mi	2c7a0 <PyInit__decimal@@Base+0x25cec>  // b.first
   2c654:	ldr	x9, [x4]
   2c658:	mov	x22, x4
   2c65c:	cmp	x13, x9
   2c660:	b.le	2c7c4 <PyInit__decimal@@Base+0x25d10>
   2c664:	ldr	w8, [x21]
   2c668:	orr	w8, w8, #0x8
   2c66c:	str	w8, [x21]
   2c670:	ldrb	w8, [x19]
   2c674:	tbnz	w8, #5, 2c6b8 <PyInit__decimal@@Base+0x25c04>
   2c678:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2c67c:	ldr	x9, [x19, #32]
   2c680:	ldr	x1, [x21, #1344]
   2c684:	cmp	x9, x1
   2c688:	b.le	2c6b8 <PyInit__decimal@@Base+0x25c04>
   2c68c:	sturb	wzr, [x29, #-12]
   2c690:	ldr	x0, [x19, #40]
   2c694:	sub	x3, x29, #0xc
   2c698:	mov	w2, #0x8                   	// #8
   2c69c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c6a0:	str	x0, [x19, #40]
   2c6a4:	ldurb	w8, [x29, #-12]
   2c6a8:	cbnz	w8, 2c6b4 <PyInit__decimal@@Base+0x25c00>
   2c6ac:	ldr	x8, [x21, #1344]
   2c6b0:	str	x8, [x19, #32]
   2c6b4:	ldrb	w8, [x19]
   2c6b8:	and	w8, w8, #0xf0
   2c6bc:	orr	w8, w8, #0x4
   2c6c0:	stp	xzr, xzr, [x19, #16]
   2c6c4:	strb	w8, [x19]
   2c6c8:	str	xzr, [x19, #8]
   2c6cc:	ldrb	w8, [x20]
   2c6d0:	tbnz	w8, #5, 2c714 <PyInit__decimal@@Base+0x25c60>
   2c6d4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2c6d8:	ldr	x9, [x20, #32]
   2c6dc:	ldr	x1, [x19, #1344]
   2c6e0:	cmp	x9, x1
   2c6e4:	b.le	2c714 <PyInit__decimal@@Base+0x25c60>
   2c6e8:	sturb	wzr, [x29, #-12]
   2c6ec:	ldr	x0, [x20, #40]
   2c6f0:	sub	x3, x29, #0xc
   2c6f4:	mov	w2, #0x8                   	// #8
   2c6f8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c6fc:	str	x0, [x20, #40]
   2c700:	ldurb	w8, [x29, #-12]
   2c704:	cbnz	w8, 2c710 <PyInit__decimal@@Base+0x25c5c>
   2c708:	ldr	x8, [x19, #1344]
   2c70c:	str	x8, [x20, #32]
   2c710:	ldrb	w8, [x20]
   2c714:	and	w8, w8, #0xf0
   2c718:	orr	w8, w8, #0x4
   2c71c:	stp	xzr, xzr, [x20, #16]
   2c720:	strb	w8, [x20]
   2c724:	str	xzr, [x20, #8]
   2c728:	ldrb	w8, [sp, #16]
   2c72c:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2c730:	cmp	w8, #0x1f
   2c734:	b.hi	2c748 <PyInit__decimal@@Base+0x25c94>  // b.pmore
   2c738:	ldr	x8, [x19, #1376]
   2c73c:	ldr	x0, [sp, #56]
   2c740:	blr	x8
   2c744:	ldrb	w8, [sp, #16]
   2c748:	tbnz	w8, #4, 2cb98 <PyInit__decimal@@Base+0x260e4>
   2c74c:	ldr	x8, [x19, #1376]
   2c750:	add	x0, sp, #0x10
   2c754:	blr	x8
   2c758:	b	2cb98 <PyInit__decimal@@Base+0x260e4>
   2c75c:	cmp	x20, x23
   2c760:	b.eq	2c888 <PyInit__decimal@@Base+0x25dd4>  // b.none
   2c764:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2c768:	ldr	x8, [x8, #1344]
   2c76c:	ldr	x12, [x20, #32]
   2c770:	cmp	x8, x10
   2c774:	csel	x8, x10, x8, lt  // lt = tstop
   2c778:	cmp	x8, x12
   2c77c:	b.eq	2c860 <PyInit__decimal@@Base+0x25dac>  // b.none
   2c780:	ldrb	w13, [x20]
   2c784:	tbnz	w13, #5, 2c834 <PyInit__decimal@@Base+0x25d80>
   2c788:	mov	x0, x20
   2c78c:	mov	x1, x8
   2c790:	mov	x2, x21
   2c794:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2c798:	cbnz	w0, 2c850 <PyInit__decimal@@Base+0x25d9c>
   2c79c:	b	2c670 <PyInit__decimal@@Base+0x25bbc>
   2c7a0:	cmp	x11, x8
   2c7a4:	b.le	2c7f4 <PyInit__decimal@@Base+0x25d40>
   2c7a8:	mov	x0, x20
   2c7ac:	mov	x1, x23
   2c7b0:	mov	x3, x21
   2c7b4:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2c7b8:	cbz	w0, 2c670 <PyInit__decimal@@Base+0x25bbc>
   2c7bc:	str	x25, [x20, #8]
   2c7c0:	b	2ca38 <PyInit__decimal@@Base+0x25f84>
   2c7c4:	cmp	x11, x8
   2c7c8:	str	x25, [sp, #8]
   2c7cc:	b.eq	2c984 <PyInit__decimal@@Base+0x25ed0>  // b.none
   2c7d0:	cmp	x2, #0x1
   2c7d4:	b.lt	2c968 <PyInit__decimal@@Base+0x25eb4>  // b.tstop
   2c7d8:	add	x0, sp, #0x10
   2c7dc:	mov	x1, x23
   2c7e0:	mov	x3, x21
   2c7e4:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2c7e8:	add	x23, sp, #0x10
   2c7ec:	cbnz	w0, 2c984 <PyInit__decimal@@Base+0x25ed0>
   2c7f0:	b	2c670 <PyInit__decimal@@Base+0x25bbc>
   2c7f4:	cmp	x20, x23
   2c7f8:	b.eq	2ca38 <PyInit__decimal@@Base+0x25f84>  // b.none
   2c7fc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2c800:	ldr	x8, [x8, #1344]
   2c804:	ldr	x13, [x20, #32]
   2c808:	cmp	x8, x10
   2c80c:	csel	x8, x10, x8, lt  // lt = tstop
   2c810:	cmp	x8, x13
   2c814:	b.eq	2ca14 <PyInit__decimal@@Base+0x25f60>  // b.none
   2c818:	ldrb	w14, [x20]
   2c81c:	tbnz	w14, #5, 2c9e8 <PyInit__decimal@@Base+0x25f34>
   2c820:	mov	x0, x20
   2c824:	mov	x1, x8
   2c828:	mov	x2, x21
   2c82c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2c830:	b	2ca00 <PyInit__decimal@@Base+0x25f4c>
   2c834:	cmp	x8, x12
   2c838:	b.le	2c860 <PyInit__decimal@@Base+0x25dac>
   2c83c:	mov	x0, x20
   2c840:	mov	x1, x8
   2c844:	mov	x2, x21
   2c848:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2c84c:	cbz	w0, 2c670 <PyInit__decimal@@Base+0x25bbc>
   2c850:	ldr	x10, [x23, #24]
   2c854:	ldrb	w9, [x23]
   2c858:	ldr	x11, [x23, #8]
   2c85c:	ldr	x1, [x23, #40]
   2c860:	ldrb	w8, [x20]
   2c864:	str	x11, [x20, #8]
   2c868:	ldr	x0, [x20, #40]
   2c86c:	bfxil	w8, w9, #0, #4
   2c870:	strb	w8, [x20]
   2c874:	ldr	x8, [x23, #16]
   2c878:	stp	x8, x10, [x20, #16]
   2c87c:	ldr	x8, [x23, #24]
   2c880:	lsl	x2, x8, #3
   2c884:	bl	63c0 <memcpy@plt>
   2c888:	str	x25, [x20, #8]
   2c88c:	ldrb	w8, [x19]
   2c890:	tbnz	w8, #5, 2c8d4 <PyInit__decimal@@Base+0x25e20>
   2c894:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2c898:	ldr	x9, [x19, #32]
   2c89c:	ldr	x1, [x20, #1344]
   2c8a0:	cmp	x9, x1
   2c8a4:	b.le	2c8d4 <PyInit__decimal@@Base+0x25e20>
   2c8a8:	sturb	wzr, [x29, #-12]
   2c8ac:	ldr	x0, [x19, #40]
   2c8b0:	sub	x3, x29, #0xc
   2c8b4:	mov	w2, #0x8                   	// #8
   2c8b8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2c8bc:	str	x0, [x19, #40]
   2c8c0:	ldurb	w8, [x29, #-12]
   2c8c4:	cbnz	w8, 2c8d0 <PyInit__decimal@@Base+0x25e1c>
   2c8c8:	ldr	x8, [x20, #1344]
   2c8cc:	str	x8, [x19, #32]
   2c8d0:	ldrb	w8, [x19]
   2c8d4:	ldr	x10, [x19, #40]
   2c8d8:	and	w8, w8, #0xf0
   2c8dc:	mov	w11, #0x1                   	// #1
   2c8e0:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2c8e4:	orr	w8, w8, w26
   2c8e8:	str	xzr, [x19, #8]
   2c8ec:	add	x9, x9, #0xca0
   2c8f0:	strb	w8, [x19]
   2c8f4:	stp	xzr, xzr, [x10]
   2c8f8:	str	x11, [x19, #24]
   2c8fc:	ldr	x8, [x10]
   2c900:	ldr	x10, [x9, #72]
   2c904:	cmp	x10, x8
   2c908:	b.ls	2c934 <PyInit__decimal@@Base+0x25e80>  // b.plast
   2c90c:	ldr	x10, [x9, #32]
   2c910:	cmp	x10, x8
   2c914:	b.ls	2cae0 <PyInit__decimal@@Base+0x2602c>  // b.plast
   2c918:	ldr	x10, [x9, #16]
   2c91c:	cmp	x10, x8
   2c920:	b.ls	2cad0 <PyInit__decimal@@Base+0x2601c>  // b.plast
   2c924:	ldr	x9, [x9, #8]
   2c928:	cmp	x9, x8
   2c92c:	mov	w8, #0x1                   	// #1
   2c930:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2c934:	ldr	x10, [x9, #112]
   2c938:	cmp	x10, x8
   2c93c:	b.hi	2cb08 <PyInit__decimal@@Base+0x26054>  // b.pmore
   2c940:	ldr	x10, [x9, #144]
   2c944:	cmp	x10, x8
   2c948:	b.ls	2cb84 <PyInit__decimal@@Base+0x260d0>  // b.plast
   2c94c:	ldr	x10, [x9, #128]
   2c950:	cmp	x10, x8
   2c954:	b.ls	2cb74 <PyInit__decimal@@Base+0x260c0>  // b.plast
   2c958:	ldr	x9, [x9, #120]
   2c95c:	cmp	x9, x8
   2c960:	mov	w8, #0xf                   	// #15
   2c964:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2c968:	neg	x2, x2
   2c96c:	add	x0, sp, #0x10
   2c970:	mov	x1, x24
   2c974:	mov	x3, x21
   2c978:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2c97c:	add	x24, sp, #0x10
   2c980:	cbz	w0, 2c670 <PyInit__decimal@@Base+0x25bbc>
   2c984:	ldr	x8, [x23, #24]
   2c988:	ldr	x28, [x24, #24]
   2c98c:	cmp	x23, x19
   2c990:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2c994:	sub	x9, x8, x28
   2c998:	add	x25, x9, #0x1
   2c99c:	b.ne	2c9a8 <PyInit__decimal@@Base+0x25ef4>  // b.any
   2c9a0:	cmp	x25, x8
   2c9a4:	b.lt	2cbe8 <PyInit__decimal@@Base+0x26134>  // b.tstop
   2c9a8:	cmp	x24, x19
   2c9ac:	b.ne	2c9b8 <PyInit__decimal@@Base+0x25f04>  // b.any
   2c9b0:	cmp	x25, x28
   2c9b4:	b.lt	2cbe8 <PyInit__decimal@@Base+0x26134>  // b.tstop
   2c9b8:	ldr	x9, [x12, #1344]
   2c9bc:	ldr	x8, [x19, #32]
   2c9c0:	cmp	x9, x25
   2c9c4:	csel	x1, x25, x9, lt  // lt = tstop
   2c9c8:	cmp	x1, x8
   2c9cc:	b.eq	2cbe8 <PyInit__decimal@@Base+0x26134>  // b.none
   2c9d0:	ldrb	w9, [x19]
   2c9d4:	tbnz	w9, #5, 2cbc8 <PyInit__decimal@@Base+0x26114>
   2c9d8:	mov	x0, x19
   2c9dc:	mov	x2, x21
   2c9e0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2c9e4:	b	2cbdc <PyInit__decimal@@Base+0x26128>
   2c9e8:	cmp	x8, x13
   2c9ec:	b.le	2ca14 <PyInit__decimal@@Base+0x25f60>
   2c9f0:	mov	x0, x20
   2c9f4:	mov	x1, x8
   2c9f8:	mov	x2, x21
   2c9fc:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2ca00:	cbz	w0, 2c670 <PyInit__decimal@@Base+0x25bbc>
   2ca04:	ldp	x12, x10, [x23, #16]
   2ca08:	ldrb	w9, [x23]
   2ca0c:	ldr	x11, [x23, #8]
   2ca10:	ldr	x1, [x23, #40]
   2ca14:	ldrb	w8, [x20]
   2ca18:	stp	x11, x12, [x20, #8]
   2ca1c:	str	x10, [x20, #24]
   2ca20:	ldr	x0, [x20, #40]
   2ca24:	bfxil	w8, w9, #0, #4
   2ca28:	strb	w8, [x20]
   2ca2c:	ldr	x8, [x23, #24]
   2ca30:	lsl	x2, x8, #3
   2ca34:	bl	63c0 <memcpy@plt>
   2ca38:	ldrb	w8, [x19]
   2ca3c:	tbnz	w8, #5, 2ca80 <PyInit__decimal@@Base+0x25fcc>
   2ca40:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2ca44:	ldr	x9, [x19, #32]
   2ca48:	ldr	x1, [x20, #1344]
   2ca4c:	cmp	x9, x1
   2ca50:	b.le	2ca80 <PyInit__decimal@@Base+0x25fcc>
   2ca54:	sturb	wzr, [x29, #-12]
   2ca58:	ldr	x0, [x19, #40]
   2ca5c:	sub	x3, x29, #0xc
   2ca60:	mov	w2, #0x8                   	// #8
   2ca64:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2ca68:	str	x0, [x19, #40]
   2ca6c:	ldurb	w8, [x29, #-12]
   2ca70:	cbnz	w8, 2ca7c <PyInit__decimal@@Base+0x25fc8>
   2ca74:	ldr	x8, [x20, #1344]
   2ca78:	str	x8, [x19, #32]
   2ca7c:	ldrb	w8, [x19]
   2ca80:	ldr	x10, [x19, #40]
   2ca84:	and	w8, w8, #0xf0
   2ca88:	mov	w11, #0x1                   	// #1
   2ca8c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2ca90:	orr	w8, w8, w26
   2ca94:	str	xzr, [x19, #8]
   2ca98:	add	x9, x9, #0xca0
   2ca9c:	strb	w8, [x19]
   2caa0:	stp	xzr, xzr, [x10]
   2caa4:	str	x11, [x19, #24]
   2caa8:	ldr	x8, [x10]
   2caac:	ldr	x10, [x9, #72]
   2cab0:	cmp	x10, x8
   2cab4:	b.ls	2cafc <PyInit__decimal@@Base+0x26048>  // b.plast
   2cab8:	ldr	x10, [x9, #32]
   2cabc:	cmp	x10, x8
   2cac0:	b.ls	2cae0 <PyInit__decimal@@Base+0x2602c>  // b.plast
   2cac4:	ldr	x10, [x9, #16]
   2cac8:	cmp	x10, x8
   2cacc:	b.hi	2c924 <PyInit__decimal@@Base+0x25e70>  // b.pmore
   2cad0:	ldr	x9, [x9, #24]
   2cad4:	cmp	x9, x8
   2cad8:	mov	w8, #0x3                   	// #3
   2cadc:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2cae0:	ldr	x10, [x9, #48]
   2cae4:	cmp	x10, x8
   2cae8:	b.ls	2cb24 <PyInit__decimal@@Base+0x26070>  // b.plast
   2caec:	ldr	x9, [x9, #40]
   2caf0:	cmp	x9, x8
   2caf4:	mov	w8, #0x5                   	// #5
   2caf8:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2cafc:	ldr	x10, [x9, #112]
   2cb00:	cmp	x10, x8
   2cb04:	b.ls	2cb5c <PyInit__decimal@@Base+0x260a8>  // b.plast
   2cb08:	ldr	x10, [x9, #88]
   2cb0c:	cmp	x10, x8
   2cb10:	b.ls	2cb40 <PyInit__decimal@@Base+0x2608c>  // b.plast
   2cb14:	ldr	x9, [x9, #80]
   2cb18:	cmp	x9, x8
   2cb1c:	mov	w8, #0xa                   	// #10
   2cb20:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2cb24:	ldr	x10, [x9, #64]
   2cb28:	cmp	x10, x8
   2cb2c:	b.ls	2cbb8 <PyInit__decimal@@Base+0x26104>  // b.plast
   2cb30:	ldr	x9, [x9, #56]
   2cb34:	cmp	x9, x8
   2cb38:	mov	w8, #0x7                   	// #7
   2cb3c:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2cb40:	ldr	x10, [x9, #104]
   2cb44:	cmp	x10, x8
   2cb48:	b.ls	2cbc0 <PyInit__decimal@@Base+0x2610c>  // b.plast
   2cb4c:	ldr	x9, [x9, #96]
   2cb50:	cmp	x9, x8
   2cb54:	mov	w8, #0xc                   	// #12
   2cb58:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2cb5c:	ldr	x10, [x9, #144]
   2cb60:	cmp	x10, x8
   2cb64:	b.ls	2cb84 <PyInit__decimal@@Base+0x260d0>  // b.plast
   2cb68:	ldr	x10, [x9, #128]
   2cb6c:	cmp	x10, x8
   2cb70:	b.hi	2c958 <PyInit__decimal@@Base+0x25ea4>  // b.pmore
   2cb74:	ldr	x9, [x9, #136]
   2cb78:	cmp	x9, x8
   2cb7c:	mov	w8, #0x11                  	// #17
   2cb80:	b	2cb90 <PyInit__decimal@@Base+0x260dc>
   2cb84:	ldr	x9, [x9, #152]
   2cb88:	cmp	x9, x8
   2cb8c:	mov	w8, #0x13                  	// #19
   2cb90:	cinc	x8, x8, ls  // ls = plast
   2cb94:	str	x8, [x19, #16]
   2cb98:	add	sp, sp, #0x250
   2cb9c:	ldp	x20, x19, [sp, #80]
   2cba0:	ldp	x22, x21, [sp, #64]
   2cba4:	ldp	x24, x23, [sp, #48]
   2cba8:	ldp	x26, x25, [sp, #32]
   2cbac:	ldp	x28, x27, [sp, #16]
   2cbb0:	ldp	x29, x30, [sp], #96
   2cbb4:	ret
   2cbb8:	mov	w8, #0x9                   	// #9
   2cbbc:	b	2cb94 <PyInit__decimal@@Base+0x260e0>
   2cbc0:	mov	w8, #0xe                   	// #14
   2cbc4:	b	2cb94 <PyInit__decimal@@Base+0x260e0>
   2cbc8:	cmp	x1, x8
   2cbcc:	b.le	2cbe8 <PyInit__decimal@@Base+0x26134>
   2cbd0:	mov	x0, x19
   2cbd4:	mov	x2, x21
   2cbd8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2cbdc:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2cbe0:	cbz	w0, 2c670 <PyInit__decimal@@Base+0x25bbc>
   2cbe4:	ldr	x28, [x24, #24]
   2cbe8:	cmp	x23, x20
   2cbec:	b.ne	2cc00 <PyInit__decimal@@Base+0x2614c>  // b.any
   2cbf0:	ldr	x8, [x23, #24]
   2cbf4:	mov	x5, x28
   2cbf8:	cmp	x28, x8
   2cbfc:	b.lt	2cc60 <PyInit__decimal@@Base+0x261ac>  // b.tstop
   2cc00:	ldr	x9, [x12, #1344]
   2cc04:	ldr	x8, [x20, #32]
   2cc08:	mov	x5, x28
   2cc0c:	cmp	x9, x28
   2cc10:	csel	x1, x28, x9, lt  // lt = tstop
   2cc14:	cmp	x1, x8
   2cc18:	b.eq	2cc60 <PyInit__decimal@@Base+0x261ac>  // b.none
   2cc1c:	ldrb	w9, [x20]
   2cc20:	tbnz	w9, #5, 2cc3c <PyInit__decimal@@Base+0x26188>
   2cc24:	mov	x0, x20
   2cc28:	mov	x2, x21
   2cc2c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2cc30:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2cc34:	cbnz	w0, 2cc5c <PyInit__decimal@@Base+0x261a8>
   2cc38:	b	2c670 <PyInit__decimal@@Base+0x25bbc>
   2cc3c:	cmp	x1, x8
   2cc40:	mov	x5, x28
   2cc44:	b.le	2cc60 <PyInit__decimal@@Base+0x261ac>
   2cc48:	mov	x0, x20
   2cc4c:	mov	x2, x21
   2cc50:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2cc54:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2cc58:	cbz	w0, 2c670 <PyInit__decimal@@Base+0x25bbc>
   2cc5c:	ldr	x5, [x24, #24]
   2cc60:	cmp	x5, #0x1
   2cc64:	b.ne	2cca0 <PyInit__decimal@@Base+0x261ec>  // b.any
   2cc68:	ldr	x2, [x23, #24]
   2cc6c:	ldr	x0, [x19, #40]
   2cc70:	cmp	x2, #0x1
   2cc74:	b.ne	2ccd8 <PyInit__decimal@@Base+0x26224>  // b.any
   2cc78:	ldr	x8, [x23, #40]
   2cc7c:	ldr	x9, [x24, #40]
   2cc80:	ldr	x10, [x20, #40]
   2cc84:	ldr	x8, [x8]
   2cc88:	ldr	x9, [x9]
   2cc8c:	udiv	x11, x8, x9
   2cc90:	msub	x8, x11, x9, x8
   2cc94:	str	x11, [x0]
   2cc98:	str	x8, [x10]
   2cc9c:	b	2ccf4 <PyInit__decimal@@Base+0x26240>
   2cca0:	cmp	x5, #0x400
   2cca4:	b.gt	2cd5c <PyInit__decimal@@Base+0x262a8>
   2cca8:	ldr	x0, [x19, #40]
   2ccac:	ldr	x1, [x20, #40]
   2ccb0:	ldr	x2, [x23, #40]
   2ccb4:	ldr	x3, [x24, #40]
   2ccb8:	ldr	x4, [x23, #24]
   2ccbc:	bl	1c878 <PyInit__decimal@@Base+0x15dc4>
   2ccc0:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2ccc4:	cmn	w0, #0x1
   2ccc8:	b.ne	2ccf4 <PyInit__decimal@@Base+0x26240>  // b.any
   2cccc:	ldr	w8, [x21]
   2ccd0:	orr	w8, w8, #0x200
   2ccd4:	b	2c66c <PyInit__decimal@@Base+0x25bb8>
   2ccd8:	ldr	x8, [x24, #40]
   2ccdc:	ldr	x1, [x23, #40]
   2cce0:	ldr	x3, [x8]
   2cce4:	bl	1c7e0 <PyInit__decimal@@Base+0x15d2c>
   2cce8:	ldr	x8, [x20, #40]
   2ccec:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2ccf0:	str	x0, [x8]
   2ccf4:	ldr	x8, [x19, #40]
   2ccf8:	mov	w10, #0x13                  	// #19
   2ccfc:	mul	x10, x25, x10
   2cd00:	sub	x9, x25, #0x1
   2cd04:	sub	x10, x10, #0x13
   2cd08:	add	x23, x9, #0x1
   2cd0c:	mov	x24, x9
   2cd10:	cmp	x23, #0x2
   2cd14:	mov	x25, x10
   2cd18:	b.lt	2cd2c <PyInit__decimal@@Base+0x26278>  // b.tstop
   2cd1c:	ldr	x11, [x8, x24, lsl #3]
   2cd20:	sub	x9, x24, #0x1
   2cd24:	sub	x10, x25, #0x13
   2cd28:	cbz	x11, 2cd08 <PyInit__decimal@@Base+0x26254>
   2cd2c:	ldr	x9, [x12, #1344]
   2cd30:	ldr	x8, [x19, #32]
   2cd34:	cmp	x9, x23
   2cd38:	csinc	x1, x9, x24, ge  // ge = tcont
   2cd3c:	cmp	x1, x8
   2cd40:	b.eq	2cdb4 <PyInit__decimal@@Base+0x26300>  // b.none
   2cd44:	ldrb	w9, [x19]
   2cd48:	tbnz	w9, #5, 2cd9c <PyInit__decimal@@Base+0x262e8>
   2cd4c:	mov	x0, x19
   2cd50:	mov	x2, x21
   2cd54:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2cd58:	b	2cdb0 <PyInit__decimal@@Base+0x262fc>
   2cd5c:	mov	x0, x19
   2cd60:	mov	x1, x20
   2cd64:	mov	x2, x23
   2cd68:	mov	x3, x24
   2cd6c:	mov	x4, x21
   2cd70:	bl	3b248 <PyInit__decimal@@Base+0x34794>
   2cd74:	ldrb	w8, [x19]
   2cd78:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2cd7c:	tst	w8, #0xe
   2cd80:	b.ne	2c670 <PyInit__decimal@@Base+0x25bbc>  // b.any
   2cd84:	ldrb	w8, [x20]
   2cd88:	tst	w8, #0xe
   2cd8c:	b.ne	2c670 <PyInit__decimal@@Base+0x25bbc>  // b.any
   2cd90:	ldr	x25, [x19, #24]
   2cd94:	ldr	x28, [x20, #24]
   2cd98:	b	2ccf4 <PyInit__decimal@@Base+0x26240>
   2cd9c:	cmp	x1, x8
   2cda0:	b.le	2cdb4 <PyInit__decimal@@Base+0x26300>
   2cda4:	mov	x0, x19
   2cda8:	mov	x2, x21
   2cdac:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2cdb0:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   2cdb4:	ldr	x8, [x19, #40]
   2cdb8:	str	x23, [x19, #24]
   2cdbc:	adrp	x23, 44000 <PyInit__decimal@@Base+0x3d54c>
   2cdc0:	add	x23, x23, #0xca0
   2cdc4:	ldr	x8, [x8, x24, lsl #3]
   2cdc8:	ldr	x24, [x23, #72]
   2cdcc:	cmp	x24, x8
   2cdd0:	b.ls	2cdfc <PyInit__decimal@@Base+0x26348>  // b.plast
   2cdd4:	ldr	x9, [x23, #32]
   2cdd8:	cmp	x9, x8
   2cddc:	b.ls	2ce24 <PyInit__decimal@@Base+0x26370>  // b.plast
   2cde0:	ldr	x9, [x23, #16]
   2cde4:	cmp	x9, x8
   2cde8:	b.ls	2ce68 <PyInit__decimal@@Base+0x263b4>  // b.plast
   2cdec:	ldr	x9, [x23, #8]
   2cdf0:	cmp	x9, x8
   2cdf4:	mov	w8, #0x1                   	// #1
   2cdf8:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2cdfc:	ldr	x9, [x23, #112]
   2ce00:	cmp	x9, x8
   2ce04:	b.ls	2ce40 <PyInit__decimal@@Base+0x2638c>  // b.plast
   2ce08:	ldr	x9, [x23, #88]
   2ce0c:	cmp	x9, x8
   2ce10:	b.ls	2ce78 <PyInit__decimal@@Base+0x263c4>  // b.plast
   2ce14:	ldr	x9, [x23, #80]
   2ce18:	cmp	x9, x8
   2ce1c:	mov	w8, #0xa                   	// #10
   2ce20:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2ce24:	ldr	x9, [x23, #48]
   2ce28:	cmp	x9, x8
   2ce2c:	b.ls	2ce94 <PyInit__decimal@@Base+0x263e0>  // b.plast
   2ce30:	ldr	x9, [x23, #40]
   2ce34:	cmp	x9, x8
   2ce38:	mov	w8, #0x5                   	// #5
   2ce3c:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2ce40:	ldr	x9, [x23, #144]
   2ce44:	cmp	x9, x8
   2ce48:	b.ls	2ceb0 <PyInit__decimal@@Base+0x263fc>  // b.plast
   2ce4c:	ldr	x9, [x23, #128]
   2ce50:	cmp	x9, x8
   2ce54:	b.ls	2cec0 <PyInit__decimal@@Base+0x2640c>  // b.plast
   2ce58:	ldr	x9, [x23, #120]
   2ce5c:	cmp	x9, x8
   2ce60:	mov	w8, #0xf                   	// #15
   2ce64:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2ce68:	ldr	x9, [x23, #24]
   2ce6c:	cmp	x9, x8
   2ce70:	mov	w8, #0x3                   	// #3
   2ce74:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2ce78:	ldr	x9, [x23, #104]
   2ce7c:	cmp	x9, x8
   2ce80:	b.ls	2d01c <PyInit__decimal@@Base+0x26568>  // b.plast
   2ce84:	ldr	x9, [x23, #96]
   2ce88:	cmp	x9, x8
   2ce8c:	mov	w8, #0xc                   	// #12
   2ce90:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2ce94:	ldr	x9, [x23, #64]
   2ce98:	cmp	x9, x8
   2ce9c:	b.ls	2d024 <PyInit__decimal@@Base+0x26570>  // b.plast
   2cea0:	ldr	x9, [x23, #56]
   2cea4:	cmp	x9, x8
   2cea8:	mov	w8, #0x7                   	// #7
   2ceac:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2ceb0:	ldr	x9, [x23, #152]
   2ceb4:	cmp	x9, x8
   2ceb8:	mov	w8, #0x13                  	// #19
   2cebc:	b	2cecc <PyInit__decimal@@Base+0x26418>
   2cec0:	ldr	x9, [x23, #136]
   2cec4:	cmp	x9, x8
   2cec8:	mov	w8, #0x11                  	// #17
   2cecc:	cinc	x8, x8, ls  // ls = plast
   2ced0:	ldrb	w9, [x19]
   2ced4:	add	x8, x8, x25
   2ced8:	stp	xzr, x8, [x19, #8]
   2cedc:	and	w9, w9, #0xf0
   2cee0:	orr	w9, w9, w26
   2cee4:	strb	w9, [x19]
   2cee8:	ldr	x9, [x22]
   2ceec:	cmp	x8, x9
   2cef0:	b.gt	2c664 <PyInit__decimal@@Base+0x25bb0>
   2cef4:	ldr	x8, [x20, #40]
   2cef8:	mov	w10, #0x13                  	// #19
   2cefc:	mul	x10, x28, x10
   2cf00:	sub	x9, x28, #0x1
   2cf04:	sub	x10, x10, #0x13
   2cf08:	add	x25, x9, #0x1
   2cf0c:	mov	x22, x9
   2cf10:	cmp	x25, #0x2
   2cf14:	mov	x19, x10
   2cf18:	b.lt	2cf2c <PyInit__decimal@@Base+0x26478>  // b.tstop
   2cf1c:	ldr	x11, [x8, x22, lsl #3]
   2cf20:	sub	x9, x22, #0x1
   2cf24:	sub	x10, x19, #0x13
   2cf28:	cbz	x11, 2cf08 <PyInit__decimal@@Base+0x26454>
   2cf2c:	ldr	x9, [x12, #1344]
   2cf30:	ldr	x8, [x20, #32]
   2cf34:	cmp	x9, x25
   2cf38:	csinc	x1, x9, x22, ge  // ge = tcont
   2cf3c:	cmp	x1, x8
   2cf40:	b.eq	2cf70 <PyInit__decimal@@Base+0x264bc>  // b.none
   2cf44:	ldrb	w9, [x20]
   2cf48:	tbnz	w9, #5, 2cf5c <PyInit__decimal@@Base+0x264a8>
   2cf4c:	mov	x0, x20
   2cf50:	mov	x2, x21
   2cf54:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2cf58:	b	2cf70 <PyInit__decimal@@Base+0x264bc>
   2cf5c:	cmp	x1, x8
   2cf60:	b.le	2cf70 <PyInit__decimal@@Base+0x264bc>
   2cf64:	mov	x0, x20
   2cf68:	mov	x2, x21
   2cf6c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2cf70:	ldr	x8, [x20, #40]
   2cf74:	str	x25, [x20, #24]
   2cf78:	ldr	x8, [x8, x22, lsl #3]
   2cf7c:	cmp	x24, x8
   2cf80:	b.ls	2cfac <PyInit__decimal@@Base+0x264f8>  // b.plast
   2cf84:	ldr	x9, [x23, #32]
   2cf88:	cmp	x9, x8
   2cf8c:	b.ls	2cfd4 <PyInit__decimal@@Base+0x26520>  // b.plast
   2cf90:	ldr	x9, [x23, #16]
   2cf94:	cmp	x9, x8
   2cf98:	b.ls	2d02c <PyInit__decimal@@Base+0x26578>  // b.plast
   2cf9c:	ldr	x9, [x23, #8]
   2cfa0:	cmp	x9, x8
   2cfa4:	mov	w8, #0x1                   	// #1
   2cfa8:	b	2d088 <PyInit__decimal@@Base+0x265d4>
   2cfac:	ldr	x9, [x23, #112]
   2cfb0:	cmp	x9, x8
   2cfb4:	b.ls	2cff0 <PyInit__decimal@@Base+0x2653c>  // b.plast
   2cfb8:	ldr	x9, [x23, #88]
   2cfbc:	cmp	x9, x8
   2cfc0:	b.ls	2d03c <PyInit__decimal@@Base+0x26588>  // b.plast
   2cfc4:	ldr	x9, [x23, #80]
   2cfc8:	cmp	x9, x8
   2cfcc:	mov	w8, #0xa                   	// #10
   2cfd0:	b	2d088 <PyInit__decimal@@Base+0x265d4>
   2cfd4:	ldr	x9, [x23, #48]
   2cfd8:	cmp	x9, x8
   2cfdc:	b.ls	2d05c <PyInit__decimal@@Base+0x265a8>  // b.plast
   2cfe0:	ldr	x9, [x23, #40]
   2cfe4:	cmp	x9, x8
   2cfe8:	mov	w8, #0x5                   	// #5
   2cfec:	b	2d088 <PyInit__decimal@@Base+0x265d4>
   2cff0:	ldr	x9, [x23, #144]
   2cff4:	cmp	x9, x8
   2cff8:	b.ls	2d07c <PyInit__decimal@@Base+0x265c8>  // b.plast
   2cffc:	ldr	x9, [x23, #128]
   2d000:	ldr	x10, [sp, #8]
   2d004:	cmp	x9, x8
   2d008:	b.ls	2d0bc <PyInit__decimal@@Base+0x26608>  // b.plast
   2d00c:	ldr	x9, [x23, #120]
   2d010:	cmp	x9, x8
   2d014:	mov	w8, #0xf                   	// #15
   2d018:	b	2d08c <PyInit__decimal@@Base+0x265d8>
   2d01c:	mov	w8, #0xe                   	// #14
   2d020:	b	2ced0 <PyInit__decimal@@Base+0x2641c>
   2d024:	mov	w8, #0x9                   	// #9
   2d028:	b	2ced0 <PyInit__decimal@@Base+0x2641c>
   2d02c:	ldr	x9, [x23, #24]
   2d030:	cmp	x9, x8
   2d034:	mov	w8, #0x3                   	// #3
   2d038:	b	2d088 <PyInit__decimal@@Base+0x265d4>
   2d03c:	ldr	x9, [x23, #104]
   2d040:	ldr	x10, [sp, #8]
   2d044:	cmp	x9, x8
   2d048:	b.ls	2d0cc <PyInit__decimal@@Base+0x26618>  // b.plast
   2d04c:	ldr	x9, [x23, #96]
   2d050:	cmp	x9, x8
   2d054:	mov	w8, #0xc                   	// #12
   2d058:	b	2d08c <PyInit__decimal@@Base+0x265d8>
   2d05c:	ldr	x9, [x23, #64]
   2d060:	ldr	x10, [sp, #8]
   2d064:	cmp	x9, x8
   2d068:	b.ls	2d0d4 <PyInit__decimal@@Base+0x26620>  // b.plast
   2d06c:	ldr	x9, [x23, #56]
   2d070:	cmp	x9, x8
   2d074:	mov	w8, #0x7                   	// #7
   2d078:	b	2d08c <PyInit__decimal@@Base+0x265d8>
   2d07c:	ldr	x9, [x23, #152]
   2d080:	cmp	x9, x8
   2d084:	mov	w8, #0x13                  	// #19
   2d088:	ldr	x10, [sp, #8]
   2d08c:	cinc	x8, x8, ls  // ls = plast
   2d090:	ldrb	w9, [x20]
   2d094:	add	x8, x8, x19
   2d098:	stp	x10, x8, [x20, #8]
   2d09c:	and	w9, w9, #0xf0
   2d0a0:	orr	w9, w9, w27
   2d0a4:	strb	w9, [x20]
   2d0a8:	ldrb	w8, [sp, #16]
   2d0ac:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2d0b0:	cmp	w8, #0x1f
   2d0b4:	b.ls	2c738 <PyInit__decimal@@Base+0x25c84>  // b.plast
   2d0b8:	b	2c748 <PyInit__decimal@@Base+0x25c94>
   2d0bc:	ldr	x9, [x23, #136]
   2d0c0:	cmp	x9, x8
   2d0c4:	mov	w8, #0x11                  	// #17
   2d0c8:	b	2d08c <PyInit__decimal@@Base+0x265d8>
   2d0cc:	mov	w8, #0xe                   	// #14
   2d0d0:	b	2d090 <PyInit__decimal@@Base+0x265dc>
   2d0d4:	mov	w8, #0x9                   	// #9
   2d0d8:	b	2d090 <PyInit__decimal@@Base+0x265dc>
   2d0dc:	stp	x29, x30, [sp, #-80]!
   2d0e0:	str	x28, [sp, #16]
   2d0e4:	stp	x24, x23, [sp, #32]
   2d0e8:	stp	x22, x21, [sp, #48]
   2d0ec:	stp	x20, x19, [sp, #64]
   2d0f0:	mov	x29, sp
   2d0f4:	sub	sp, sp, #0x230
   2d0f8:	mov	w8, #0x30                  	// #48
   2d0fc:	mov	w9, #0x40                  	// #64
   2d100:	add	x10, sp, #0x30
   2d104:	stp	xzr, xzr, [sp, #8]
   2d108:	strb	w8, [sp]
   2d10c:	stp	xzr, x9, [sp, #24]
   2d110:	str	x10, [sp, #40]
   2d114:	ldrb	w8, [x1]
   2d118:	ldrb	w9, [x2]
   2d11c:	mov	x20, x4
   2d120:	mov	x21, x3
   2d124:	mov	x22, x2
   2d128:	eor	w10, w9, w8
   2d12c:	orr	w8, w8, w9
   2d130:	mov	x23, x1
   2d134:	mov	x19, x0
   2d138:	tst	w8, #0xe
   2d13c:	and	w24, w10, #0x1
   2d140:	b.eq	2d218 <PyInit__decimal@@Base+0x26764>  // b.none
   2d144:	mov	x0, x19
   2d148:	mov	x1, x23
   2d14c:	mov	x2, x22
   2d150:	mov	x3, x21
   2d154:	mov	x4, x20
   2d158:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2d15c:	cbnz	w0, 2d524 <PyInit__decimal@@Base+0x26a70>
   2d160:	ldrb	w8, [x23]
   2d164:	ldrb	w9, [x22]
   2d168:	tbnz	w8, #1, 2d314 <PyInit__decimal@@Base+0x26860>
   2d16c:	tbz	w9, #1, 2d550 <PyInit__decimal@@Base+0x26a9c>
   2d170:	ldrb	w8, [x19]
   2d174:	tbnz	w8, #5, 2d1b8 <PyInit__decimal@@Base+0x26704>
   2d178:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2d17c:	ldr	x9, [x19, #32]
   2d180:	ldr	x1, [x20, #1344]
   2d184:	cmp	x9, x1
   2d188:	b.le	2d1b8 <PyInit__decimal@@Base+0x26704>
   2d18c:	strb	wzr, [x29, #28]
   2d190:	ldr	x0, [x19, #40]
   2d194:	add	x3, x29, #0x1c
   2d198:	mov	w2, #0x8                   	// #8
   2d19c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2d1a0:	str	x0, [x19, #40]
   2d1a4:	ldrb	w8, [x29, #28]
   2d1a8:	cbnz	w8, 2d1b4 <PyInit__decimal@@Base+0x26700>
   2d1ac:	ldr	x8, [x20, #1344]
   2d1b0:	str	x8, [x19, #32]
   2d1b4:	ldrb	w8, [x19]
   2d1b8:	ldr	x10, [x19, #40]
   2d1bc:	and	w8, w8, #0xf0
   2d1c0:	mov	w11, #0x1                   	// #1
   2d1c4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2d1c8:	orr	w8, w8, w24
   2d1cc:	str	xzr, [x19, #8]
   2d1d0:	add	x9, x9, #0xca0
   2d1d4:	strb	w8, [x19]
   2d1d8:	stp	xzr, xzr, [x10]
   2d1dc:	str	x11, [x19, #24]
   2d1e0:	ldr	x8, [x10]
   2d1e4:	ldr	x10, [x9, #72]
   2d1e8:	cmp	x10, x8
   2d1ec:	b.ls	2d3e4 <PyInit__decimal@@Base+0x26930>  // b.plast
   2d1f0:	ldr	x10, [x9, #32]
   2d1f4:	cmp	x10, x8
   2d1f8:	b.ls	2d474 <PyInit__decimal@@Base+0x269c0>  // b.plast
   2d1fc:	ldr	x10, [x9, #16]
   2d200:	cmp	x10, x8
   2d204:	b.ls	2d4b8 <PyInit__decimal@@Base+0x26a04>  // b.plast
   2d208:	ldr	x9, [x9, #8]
   2d20c:	cmp	x9, x8
   2d210:	mov	w8, #0x1                   	// #1
   2d214:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d218:	ldr	x8, [x22, #40]
   2d21c:	ldr	x9, [x22, #24]
   2d220:	add	x8, x8, x9, lsl #3
   2d224:	ldur	x8, [x8, #-8]
   2d228:	cbz	x8, 2d290 <PyInit__decimal@@Base+0x267dc>
   2d22c:	mov	x1, sp
   2d230:	mov	x0, x19
   2d234:	mov	x2, x23
   2d238:	mov	x3, x22
   2d23c:	mov	x4, x21
   2d240:	mov	x5, x20
   2d244:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   2d248:	ldrb	w8, [sp]
   2d24c:	cmp	w8, #0x1f
   2d250:	b.hi	2d268 <PyInit__decimal@@Base+0x267b4>  // b.pmore
   2d254:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2d258:	ldr	x8, [x8, #1376]
   2d25c:	ldr	x0, [sp, #40]
   2d260:	blr	x8
   2d264:	ldrb	w8, [sp]
   2d268:	tbnz	w8, #4, 2d27c <PyInit__decimal@@Base+0x267c8>
   2d26c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2d270:	ldr	x8, [x8, #1376]
   2d274:	mov	x0, sp
   2d278:	blr	x8
   2d27c:	mov	x0, x19
   2d280:	mov	x1, x21
   2d284:	mov	x2, x20
   2d288:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2d28c:	b	2d524 <PyInit__decimal@@Base+0x26a70>
   2d290:	ldr	x8, [x23, #40]
   2d294:	ldr	x9, [x23, #24]
   2d298:	add	x8, x8, x9, lsl #3
   2d29c:	ldur	x9, [x8, #-8]
   2d2a0:	ldrb	w8, [x19]
   2d2a4:	cbz	x9, 2d40c <PyInit__decimal@@Base+0x26958>
   2d2a8:	tbnz	w8, #5, 2d2ec <PyInit__decimal@@Base+0x26838>
   2d2ac:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2d2b0:	ldr	x9, [x19, #32]
   2d2b4:	ldr	x1, [x21, #1344]
   2d2b8:	cmp	x9, x1
   2d2bc:	b.le	2d2ec <PyInit__decimal@@Base+0x26838>
   2d2c0:	strb	wzr, [x29, #28]
   2d2c4:	ldr	x0, [x19, #40]
   2d2c8:	add	x3, x29, #0x1c
   2d2cc:	mov	w2, #0x8                   	// #8
   2d2d0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2d2d4:	str	x0, [x19, #40]
   2d2d8:	ldrb	w8, [x29, #28]
   2d2dc:	cbnz	w8, 2d2e8 <PyInit__decimal@@Base+0x26834>
   2d2e0:	ldr	x8, [x21, #1344]
   2d2e4:	str	x8, [x19, #32]
   2d2e8:	ldrb	w8, [x19]
   2d2ec:	and	w8, w8, #0xf0
   2d2f0:	orr	w8, w24, w8
   2d2f4:	orr	w8, w8, #0x2
   2d2f8:	stp	xzr, xzr, [x19, #16]
   2d2fc:	strb	w8, [x19]
   2d300:	str	xzr, [x19, #8]
   2d304:	ldr	w8, [x20]
   2d308:	orr	w8, w8, #0x4
   2d30c:	str	w8, [x20]
   2d310:	b	2d524 <PyInit__decimal@@Base+0x26a70>
   2d314:	ldrb	w8, [x19]
   2d318:	tbnz	w9, #1, 2d37c <PyInit__decimal@@Base+0x268c8>
   2d31c:	tbnz	w8, #5, 2d360 <PyInit__decimal@@Base+0x268ac>
   2d320:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2d324:	ldr	x9, [x19, #32]
   2d328:	ldr	x1, [x20, #1344]
   2d32c:	cmp	x9, x1
   2d330:	b.le	2d360 <PyInit__decimal@@Base+0x268ac>
   2d334:	strb	wzr, [x29, #28]
   2d338:	ldr	x0, [x19, #40]
   2d33c:	add	x3, x29, #0x1c
   2d340:	mov	w2, #0x8                   	// #8
   2d344:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2d348:	str	x0, [x19, #40]
   2d34c:	ldrb	w8, [x29, #28]
   2d350:	cbnz	w8, 2d35c <PyInit__decimal@@Base+0x268a8>
   2d354:	ldr	x8, [x20, #1344]
   2d358:	str	x8, [x19, #32]
   2d35c:	ldrb	w8, [x19]
   2d360:	and	w8, w8, #0xf0
   2d364:	orr	w8, w24, w8
   2d368:	orr	w8, w8, #0x2
   2d36c:	stp	xzr, xzr, [x19, #16]
   2d370:	strb	w8, [x19]
   2d374:	str	xzr, [x19, #8]
   2d378:	b	2d524 <PyInit__decimal@@Base+0x26a70>
   2d37c:	tbnz	w8, #5, 2d3c0 <PyInit__decimal@@Base+0x2690c>
   2d380:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2d384:	ldr	x9, [x19, #32]
   2d388:	ldr	x1, [x21, #1344]
   2d38c:	cmp	x9, x1
   2d390:	b.le	2d3c0 <PyInit__decimal@@Base+0x2690c>
   2d394:	strb	wzr, [x29, #28]
   2d398:	ldr	x0, [x19, #40]
   2d39c:	add	x3, x29, #0x1c
   2d3a0:	mov	w2, #0x8                   	// #8
   2d3a4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2d3a8:	str	x0, [x19, #40]
   2d3ac:	ldrb	w8, [x29, #28]
   2d3b0:	cbnz	w8, 2d3bc <PyInit__decimal@@Base+0x26908>
   2d3b4:	ldr	x8, [x21, #1344]
   2d3b8:	str	x8, [x19, #32]
   2d3bc:	ldrb	w8, [x19]
   2d3c0:	and	w8, w8, #0xf0
   2d3c4:	orr	w8, w8, #0x4
   2d3c8:	stp	xzr, xzr, [x19, #16]
   2d3cc:	strb	w8, [x19]
   2d3d0:	str	xzr, [x19, #8]
   2d3d4:	ldr	w8, [x20]
   2d3d8:	orr	w8, w8, #0x100
   2d3dc:	str	w8, [x20]
   2d3e0:	b	2d524 <PyInit__decimal@@Base+0x26a70>
   2d3e4:	ldr	x10, [x9, #112]
   2d3e8:	cmp	x10, x8
   2d3ec:	b.ls	2d490 <PyInit__decimal@@Base+0x269dc>  // b.plast
   2d3f0:	ldr	x10, [x9, #88]
   2d3f4:	cmp	x10, x8
   2d3f8:	b.ls	2d4c8 <PyInit__decimal@@Base+0x26a14>  // b.plast
   2d3fc:	ldr	x9, [x9, #80]
   2d400:	cmp	x9, x8
   2d404:	mov	w8, #0xa                   	// #10
   2d408:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d40c:	tbnz	w8, #5, 2d450 <PyInit__decimal@@Base+0x2699c>
   2d410:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2d414:	ldr	x9, [x19, #32]
   2d418:	ldr	x1, [x21, #1344]
   2d41c:	cmp	x9, x1
   2d420:	b.le	2d450 <PyInit__decimal@@Base+0x2699c>
   2d424:	strb	wzr, [x29, #28]
   2d428:	ldr	x0, [x19, #40]
   2d42c:	add	x3, x29, #0x1c
   2d430:	mov	w2, #0x8                   	// #8
   2d434:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2d438:	str	x0, [x19, #40]
   2d43c:	ldrb	w8, [x29, #28]
   2d440:	cbnz	w8, 2d44c <PyInit__decimal@@Base+0x26998>
   2d444:	ldr	x8, [x21, #1344]
   2d448:	str	x8, [x19, #32]
   2d44c:	ldrb	w8, [x19]
   2d450:	and	w8, w8, #0xf0
   2d454:	orr	w8, w8, #0x4
   2d458:	stp	xzr, xzr, [x19, #16]
   2d45c:	strb	w8, [x19]
   2d460:	str	xzr, [x19, #8]
   2d464:	ldr	w8, [x20]
   2d468:	orr	w8, w8, #0x10
   2d46c:	str	w8, [x20]
   2d470:	b	2d524 <PyInit__decimal@@Base+0x26a70>
   2d474:	ldr	x10, [x9, #48]
   2d478:	cmp	x10, x8
   2d47c:	b.ls	2d4e4 <PyInit__decimal@@Base+0x26a30>  // b.plast
   2d480:	ldr	x9, [x9, #40]
   2d484:	cmp	x9, x8
   2d488:	mov	w8, #0x5                   	// #5
   2d48c:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d490:	ldr	x10, [x9, #144]
   2d494:	cmp	x10, x8
   2d498:	b.ls	2d500 <PyInit__decimal@@Base+0x26a4c>  // b.plast
   2d49c:	ldr	x10, [x9, #128]
   2d4a0:	cmp	x10, x8
   2d4a4:	b.ls	2d510 <PyInit__decimal@@Base+0x26a5c>  // b.plast
   2d4a8:	ldr	x9, [x9, #120]
   2d4ac:	cmp	x9, x8
   2d4b0:	mov	w8, #0xf                   	// #15
   2d4b4:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d4b8:	ldr	x9, [x9, #24]
   2d4bc:	cmp	x9, x8
   2d4c0:	mov	w8, #0x3                   	// #3
   2d4c4:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d4c8:	ldr	x10, [x9, #104]
   2d4cc:	cmp	x10, x8
   2d4d0:	b.ls	2d540 <PyInit__decimal@@Base+0x26a8c>  // b.plast
   2d4d4:	ldr	x9, [x9, #96]
   2d4d8:	cmp	x9, x8
   2d4dc:	mov	w8, #0xc                   	// #12
   2d4e0:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d4e4:	ldr	x10, [x9, #64]
   2d4e8:	cmp	x10, x8
   2d4ec:	b.ls	2d548 <PyInit__decimal@@Base+0x26a94>  // b.plast
   2d4f0:	ldr	x9, [x9, #56]
   2d4f4:	cmp	x9, x8
   2d4f8:	mov	w8, #0x7                   	// #7
   2d4fc:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d500:	ldr	x9, [x9, #152]
   2d504:	cmp	x9, x8
   2d508:	mov	w8, #0x13                  	// #19
   2d50c:	b	2d51c <PyInit__decimal@@Base+0x26a68>
   2d510:	ldr	x9, [x9, #136]
   2d514:	cmp	x9, x8
   2d518:	mov	w8, #0x11                  	// #17
   2d51c:	cinc	x8, x8, ls  // ls = plast
   2d520:	str	x8, [x19, #16]
   2d524:	add	sp, sp, #0x230
   2d528:	ldp	x20, x19, [sp, #64]
   2d52c:	ldp	x22, x21, [sp, #48]
   2d530:	ldp	x24, x23, [sp, #32]
   2d534:	ldr	x28, [sp, #16]
   2d538:	ldp	x29, x30, [sp], #80
   2d53c:	ret
   2d540:	mov	w8, #0xe                   	// #14
   2d544:	b	2d520 <PyInit__decimal@@Base+0x26a6c>
   2d548:	mov	w8, #0x9                   	// #9
   2d54c:	b	2d520 <PyInit__decimal@@Base+0x26a6c>
   2d550:	bl	6700 <abort@plt>
   2d554:	stp	x29, x30, [sp, #-64]!
   2d558:	stp	x28, x23, [sp, #16]
   2d55c:	stp	x22, x21, [sp, #32]
   2d560:	stp	x20, x19, [sp, #48]
   2d564:	mov	x29, sp
   2d568:	sub	sp, sp, #0x260
   2d56c:	mov	x23, x0
   2d570:	mov	w8, #0x30                  	// #48
   2d574:	mov	w9, #0x40                  	// #64
   2d578:	add	x10, sp, #0x30
   2d57c:	sub	x0, x29, #0x30
   2d580:	mov	x19, x4
   2d584:	mov	x20, x3
   2d588:	mov	x21, x2
   2d58c:	mov	x22, x1
   2d590:	stp	xzr, xzr, [sp, #8]
   2d594:	strb	w8, [sp]
   2d598:	stp	xzr, x9, [sp, #24]
   2d59c:	str	x10, [sp, #40]
   2d5a0:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2d5a4:	cmp	x21, #0x0
   2d5a8:	cneg	x2, x21, mi  // mi = first
   2d5ac:	lsr	x1, x21, #63
   2d5b0:	mov	x0, sp
   2d5b4:	mov	x3, xzr
   2d5b8:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2d5bc:	mov	x0, sp
   2d5c0:	sub	x1, x29, #0x30
   2d5c4:	mov	x2, x19
   2d5c8:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2d5cc:	mov	x3, sp
   2d5d0:	mov	w0, #0x1                   	// #1
   2d5d4:	mov	x1, x23
   2d5d8:	mov	x2, x22
   2d5dc:	mov	x4, x20
   2d5e0:	mov	x5, x19
   2d5e4:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   2d5e8:	ldrb	w8, [sp]
   2d5ec:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2d5f0:	cmp	w8, #0x1f
   2d5f4:	b.hi	2d608 <PyInit__decimal@@Base+0x26b54>  // b.pmore
   2d5f8:	ldr	x8, [x19, #1376]
   2d5fc:	ldr	x0, [sp, #40]
   2d600:	blr	x8
   2d604:	ldrb	w8, [sp]
   2d608:	tbnz	w8, #4, 2d618 <PyInit__decimal@@Base+0x26b64>
   2d60c:	ldr	x8, [x19, #1376]
   2d610:	mov	x0, sp
   2d614:	blr	x8
   2d618:	add	sp, sp, #0x260
   2d61c:	ldp	x20, x19, [sp, #48]
   2d620:	ldp	x22, x21, [sp, #32]
   2d624:	ldp	x28, x23, [sp, #16]
   2d628:	ldp	x29, x30, [sp], #64
   2d62c:	ret
   2d630:	stp	x29, x30, [sp, #-64]!
   2d634:	stp	x28, x23, [sp, #16]
   2d638:	stp	x22, x21, [sp, #32]
   2d63c:	stp	x20, x19, [sp, #48]
   2d640:	mov	x29, sp
   2d644:	sub	sp, sp, #0x260
   2d648:	mov	x23, x0
   2d64c:	mov	w8, #0x30                  	// #48
   2d650:	mov	w9, #0x40                  	// #64
   2d654:	add	x10, sp, #0x30
   2d658:	sub	x0, x29, #0x30
   2d65c:	mov	x19, x4
   2d660:	mov	x20, x3
   2d664:	mov	x21, x2
   2d668:	mov	x22, x1
   2d66c:	stp	xzr, xzr, [sp, #8]
   2d670:	strb	w8, [sp]
   2d674:	stp	xzr, x9, [sp, #24]
   2d678:	str	x10, [sp, #40]
   2d67c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2d680:	mov	x0, sp
   2d684:	mov	w1, wzr
   2d688:	mov	x2, x21
   2d68c:	mov	x3, xzr
   2d690:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2d694:	mov	x0, sp
   2d698:	sub	x1, x29, #0x30
   2d69c:	mov	x2, x19
   2d6a0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2d6a4:	mov	x3, sp
   2d6a8:	mov	w0, #0x1                   	// #1
   2d6ac:	mov	x1, x23
   2d6b0:	mov	x2, x22
   2d6b4:	mov	x4, x20
   2d6b8:	mov	x5, x19
   2d6bc:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   2d6c0:	ldrb	w8, [sp]
   2d6c4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2d6c8:	cmp	w8, #0x1f
   2d6cc:	b.hi	2d6e0 <PyInit__decimal@@Base+0x26c2c>  // b.pmore
   2d6d0:	ldr	x8, [x19, #1376]
   2d6d4:	ldr	x0, [sp, #40]
   2d6d8:	blr	x8
   2d6dc:	ldrb	w8, [sp]
   2d6e0:	tbnz	w8, #4, 2d6f0 <PyInit__decimal@@Base+0x26c3c>
   2d6e4:	ldr	x8, [x19, #1376]
   2d6e8:	mov	x0, sp
   2d6ec:	blr	x8
   2d6f0:	add	sp, sp, #0x260
   2d6f4:	ldp	x20, x19, [sp, #48]
   2d6f8:	ldp	x22, x21, [sp, #32]
   2d6fc:	ldp	x28, x23, [sp, #16]
   2d700:	ldp	x29, x30, [sp], #64
   2d704:	ret
   2d708:	sxtw	x2, w2
   2d70c:	b	2d554 <PyInit__decimal@@Base+0x26aa0>
   2d710:	stp	x29, x30, [sp, #-64]!
   2d714:	stp	x28, x23, [sp, #16]
   2d718:	stp	x22, x21, [sp, #32]
   2d71c:	stp	x20, x19, [sp, #48]
   2d720:	mov	x29, sp
   2d724:	sub	sp, sp, #0x260
   2d728:	mov	x22, x0
   2d72c:	mov	w8, #0x30                  	// #48
   2d730:	mov	w9, #0x40                  	// #64
   2d734:	add	x10, sp, #0x30
   2d738:	sub	x0, x29, #0x30
   2d73c:	mov	x19, x4
   2d740:	mov	x20, x3
   2d744:	mov	x21, x1
   2d748:	mov	w23, w2
   2d74c:	stp	xzr, xzr, [sp, #8]
   2d750:	strb	w8, [sp]
   2d754:	stp	xzr, x9, [sp, #24]
   2d758:	str	x10, [sp, #40]
   2d75c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2d760:	mov	x0, sp
   2d764:	mov	w1, wzr
   2d768:	mov	x2, x23
   2d76c:	mov	x3, xzr
   2d770:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2d774:	mov	x0, sp
   2d778:	sub	x1, x29, #0x30
   2d77c:	mov	x2, x19
   2d780:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2d784:	mov	x3, sp
   2d788:	mov	w0, #0x1                   	// #1
   2d78c:	mov	x1, x22
   2d790:	mov	x2, x21
   2d794:	mov	x4, x20
   2d798:	mov	x5, x19
   2d79c:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   2d7a0:	ldrb	w8, [sp]
   2d7a4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2d7a8:	cmp	w8, #0x1f
   2d7ac:	b.hi	2d7c0 <PyInit__decimal@@Base+0x26d0c>  // b.pmore
   2d7b0:	ldr	x8, [x19, #1376]
   2d7b4:	ldr	x0, [sp, #40]
   2d7b8:	blr	x8
   2d7bc:	ldrb	w8, [sp]
   2d7c0:	tbnz	w8, #4, 2d7d0 <PyInit__decimal@@Base+0x26d1c>
   2d7c4:	ldr	x8, [x19, #1376]
   2d7c8:	mov	x0, sp
   2d7cc:	blr	x8
   2d7d0:	add	sp, sp, #0x260
   2d7d4:	ldp	x20, x19, [sp, #48]
   2d7d8:	ldp	x22, x21, [sp, #32]
   2d7dc:	ldp	x28, x23, [sp, #16]
   2d7e0:	ldp	x29, x30, [sp], #64
   2d7e4:	ret
   2d7e8:	b	2d554 <PyInit__decimal@@Base+0x26aa0>
   2d7ec:	stp	x29, x30, [sp, #-64]!
   2d7f0:	stp	x28, x23, [sp, #16]
   2d7f4:	stp	x22, x21, [sp, #32]
   2d7f8:	stp	x20, x19, [sp, #48]
   2d7fc:	mov	x29, sp
   2d800:	sub	sp, sp, #0x260
   2d804:	mov	x23, x0
   2d808:	mov	w8, #0x30                  	// #48
   2d80c:	mov	w9, #0x40                  	// #64
   2d810:	add	x10, sp, #0x30
   2d814:	sub	x0, x29, #0x30
   2d818:	mov	x19, x4
   2d81c:	mov	x20, x3
   2d820:	mov	x21, x2
   2d824:	mov	x22, x1
   2d828:	stp	xzr, xzr, [sp, #8]
   2d82c:	strb	w8, [sp]
   2d830:	stp	xzr, x9, [sp, #24]
   2d834:	str	x10, [sp, #40]
   2d838:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2d83c:	mov	x0, sp
   2d840:	mov	w1, wzr
   2d844:	mov	x2, x21
   2d848:	mov	x3, xzr
   2d84c:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2d850:	mov	x0, sp
   2d854:	sub	x1, x29, #0x30
   2d858:	mov	x2, x19
   2d85c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2d860:	mov	x3, sp
   2d864:	mov	w0, #0x1                   	// #1
   2d868:	mov	x1, x23
   2d86c:	mov	x2, x22
   2d870:	mov	x4, x20
   2d874:	mov	x5, x19
   2d878:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   2d87c:	ldrb	w8, [sp]
   2d880:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2d884:	cmp	w8, #0x1f
   2d888:	b.hi	2d89c <PyInit__decimal@@Base+0x26de8>  // b.pmore
   2d88c:	ldr	x8, [x19, #1376]
   2d890:	ldr	x0, [sp, #40]
   2d894:	blr	x8
   2d898:	ldrb	w8, [sp]
   2d89c:	tbnz	w8, #4, 2d8ac <PyInit__decimal@@Base+0x26df8>
   2d8a0:	ldr	x8, [x19, #1376]
   2d8a4:	mov	x0, sp
   2d8a8:	blr	x8
   2d8ac:	add	sp, sp, #0x260
   2d8b0:	ldp	x20, x19, [sp, #48]
   2d8b4:	ldp	x22, x21, [sp, #32]
   2d8b8:	ldp	x28, x23, [sp, #16]
   2d8bc:	ldp	x29, x30, [sp], #64
   2d8c0:	ret
   2d8c4:	stp	x29, x30, [sp, #-80]!
   2d8c8:	stp	x28, x25, [sp, #16]
   2d8cc:	stp	x24, x23, [sp, #32]
   2d8d0:	stp	x22, x21, [sp, #48]
   2d8d4:	stp	x20, x19, [sp, #64]
   2d8d8:	mov	x29, sp
   2d8dc:	sub	sp, sp, #0x910
   2d8e0:	ldrb	w10, [x1]
   2d8e4:	mov	x20, x3
   2d8e8:	mov	x22, x2
   2d8ec:	mov	x21, x1
   2d8f0:	tst	w10, #0xe
   2d8f4:	mov	x19, x0
   2d8f8:	b.eq	2d97c <PyInit__decimal@@Base+0x26ec8>  // b.none
   2d8fc:	mov	x0, x19
   2d900:	mov	x1, x21
   2d904:	mov	x2, x22
   2d908:	mov	x3, x20
   2d90c:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   2d910:	cbnz	w0, 2e084 <PyInit__decimal@@Base+0x275d0>
   2d914:	ldrb	w9, [x21]
   2d918:	ldrb	w8, [x19]
   2d91c:	tbnz	w9, #0, 2db2c <PyInit__decimal@@Base+0x27078>
   2d920:	tbnz	w8, #5, 2d964 <PyInit__decimal@@Base+0x26eb0>
   2d924:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2d928:	ldr	x9, [x19, #32]
   2d92c:	ldr	x1, [x20, #1344]
   2d930:	cmp	x9, x1
   2d934:	b.le	2d964 <PyInit__decimal@@Base+0x26eb0>
   2d938:	strb	wzr, [sp, #1744]
   2d93c:	ldr	x0, [x19, #40]
   2d940:	add	x3, sp, #0x6d0
   2d944:	mov	w2, #0x8                   	// #8
   2d948:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2d94c:	str	x0, [x19, #40]
   2d950:	ldrb	w8, [sp, #1744]
   2d954:	cbnz	w8, 2d960 <PyInit__decimal@@Base+0x26eac>
   2d958:	ldr	x8, [x20, #1344]
   2d95c:	str	x8, [x19, #32]
   2d960:	ldrb	w8, [x19]
   2d964:	and	w8, w8, #0xf0
   2d968:	orr	w8, w8, #0x2
   2d96c:	stp	xzr, xzr, [x19, #16]
   2d970:	strb	w8, [x19]
   2d974:	str	xzr, [x19, #8]
   2d978:	b	2e084 <PyInit__decimal@@Base+0x275d0>
   2d97c:	ldr	x1, [x21, #40]
   2d980:	ldr	x9, [x21, #24]
   2d984:	add	x8, x1, x9, lsl #3
   2d988:	ldur	x8, [x8, #-8]
   2d98c:	cbz	x8, 2da80 <PyInit__decimal@@Base+0x26fcc>
   2d990:	ldp	q2, q0, [x22, #16]
   2d994:	ldr	q1, [x22]
   2d998:	add	x24, sp, #0x240
   2d99c:	mov	w8, #0x6                   	// #6
   2d9a0:	str	q0, [x24, #1712]
   2d9a4:	str	q2, [x24, #1696]
   2d9a8:	str	q1, [x24, #1680]
   2d9ac:	stur	w8, [x29, #-28]
   2d9b0:	ldr	w8, [x22, #44]
   2d9b4:	cbz	w8, 2dbcc <PyInit__decimal@@Base+0x27118>
   2d9b8:	mov	w8, #0x30                  	// #48
   2d9bc:	add	x12, sp, #0x6d0
   2d9c0:	strb	w8, [sp, #1696]
   2d9c4:	str	x12, [x24, #1160]
   2d9c8:	add	x12, sp, #0x4a0
   2d9cc:	strb	w8, [sp, #1136]
   2d9d0:	strb	w8, [sp, #576]
   2d9d4:	strb	w8, [sp, #16]
   2d9d8:	add	x8, sp, #0x10
   2d9dc:	mov	w11, #0x40                  	// #64
   2d9e0:	str	x12, [x24, #600]
   2d9e4:	add	x12, sp, #0x270
   2d9e8:	cmp	x8, x21
   2d9ec:	stp	x11, x12, [x24, #32]
   2d9f0:	add	x12, sp, #0x40
   2d9f4:	cset	w8, eq  // eq = none
   2d9f8:	cmp	x19, x21
   2d9fc:	stp	xzr, xzr, [sp, #24]
   2da00:	str	xzr, [x24, #1128]
   2da04:	str	xzr, [x24, #1144]
   2da08:	str	xzr, [x24, #1136]
   2da0c:	str	x11, [x24, #1152]
   2da10:	str	xzr, [x24, #568]
   2da14:	str	xzr, [x24, #584]
   2da18:	str	xzr, [x24, #576]
   2da1c:	str	x11, [x24, #592]
   2da20:	stp	xzr, xzr, [x24, #8]
   2da24:	str	xzr, [x24, #24]
   2da28:	stp	xzr, x11, [sp, #40]
   2da2c:	str	x12, [sp, #56]
   2da30:	b.ne	2dcfc <PyInit__decimal@@Base+0x27248>  // b.any
   2da34:	tbnz	w8, #0, 2dcfc <PyInit__decimal@@Base+0x27248>
   2da38:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   2da3c:	ldr	x8, [x23, #1344]
   2da40:	cmp	x8, x9
   2da44:	csel	x8, x9, x8, lt  // lt = tstop
   2da48:	cmp	x8, #0x41
   2da4c:	b.lt	2dcd0 <PyInit__decimal@@Base+0x2721c>  // b.tstop
   2da50:	add	x0, sp, #0x10
   2da54:	mov	x1, x8
   2da58:	mov	x2, x20
   2da5c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2da60:	cbz	w0, 2e0b0 <PyInit__decimal@@Base+0x275fc>
   2da64:	ldrb	w8, [sp, #16]
   2da68:	ldr	x9, [x21, #24]
   2da6c:	ldrb	w10, [x21]
   2da70:	ldr	x0, [sp, #56]
   2da74:	ldr	x1, [x21, #40]
   2da78:	and	w8, w8, #0xfffffff0
   2da7c:	b	2dcd8 <PyInit__decimal@@Base+0x27224>
   2da80:	ldrb	w8, [x19]
   2da84:	tbnz	w8, #5, 2dac8 <PyInit__decimal@@Base+0x27014>
   2da88:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2da8c:	ldr	x9, [x19, #32]
   2da90:	ldr	x1, [x20, #1344]
   2da94:	cmp	x9, x1
   2da98:	b.le	2dac8 <PyInit__decimal@@Base+0x27014>
   2da9c:	strb	wzr, [sp, #1744]
   2daa0:	ldr	x0, [x19, #40]
   2daa4:	add	x3, sp, #0x6d0
   2daa8:	mov	w2, #0x8                   	// #8
   2daac:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2dab0:	str	x0, [x19, #40]
   2dab4:	ldrb	w8, [sp, #1744]
   2dab8:	cbnz	w8, 2dac4 <PyInit__decimal@@Base+0x27010>
   2dabc:	ldr	x8, [x20, #1344]
   2dac0:	str	x8, [x19, #32]
   2dac4:	ldrb	w8, [x19]
   2dac8:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   2dacc:	ldr	x10, [x19, #40]
   2dad0:	ldr	q0, [x9, #2464]
   2dad4:	and	w8, w8, #0xf0
   2dad8:	mov	w11, #0x1                   	// #1
   2dadc:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2dae0:	str	xzr, [x19, #8]
   2dae4:	add	x9, x9, #0xca0
   2dae8:	strb	w8, [x19]
   2daec:	str	q0, [x10]
   2daf0:	str	x11, [x19, #24]
   2daf4:	ldr	x8, [x10]
   2daf8:	ldr	x10, [x9, #72]
   2dafc:	cmp	x10, x8
   2db00:	b.ls	2dc58 <PyInit__decimal@@Base+0x271a4>  // b.plast
   2db04:	ldr	x10, [x9, #32]
   2db08:	cmp	x10, x8
   2db0c:	b.ls	2dc80 <PyInit__decimal@@Base+0x271cc>  // b.plast
   2db10:	ldr	x10, [x9, #16]
   2db14:	cmp	x10, x8
   2db18:	b.ls	2dbbc <PyInit__decimal@@Base+0x27108>  // b.plast
   2db1c:	ldr	x9, [x9, #8]
   2db20:	cmp	x9, x8
   2db24:	mov	w8, #0x1                   	// #1
   2db28:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2db2c:	tbnz	w8, #5, 2db70 <PyInit__decimal@@Base+0x270bc>
   2db30:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2db34:	ldr	x9, [x19, #32]
   2db38:	ldr	x1, [x20, #1344]
   2db3c:	cmp	x9, x1
   2db40:	b.le	2db70 <PyInit__decimal@@Base+0x270bc>
   2db44:	strb	wzr, [sp, #1744]
   2db48:	ldr	x0, [x19, #40]
   2db4c:	add	x3, sp, #0x6d0
   2db50:	mov	w2, #0x8                   	// #8
   2db54:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2db58:	str	x0, [x19, #40]
   2db5c:	ldrb	w8, [sp, #1744]
   2db60:	cbnz	w8, 2db6c <PyInit__decimal@@Base+0x270b8>
   2db64:	ldr	x8, [x20, #1344]
   2db68:	str	x8, [x19, #32]
   2db6c:	ldrb	w8, [x19]
   2db70:	ldr	x10, [x19, #40]
   2db74:	and	w8, w8, #0xf0
   2db78:	mov	w11, #0x1                   	// #1
   2db7c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2db80:	str	xzr, [x19, #8]
   2db84:	add	x9, x9, #0xca0
   2db88:	strb	w8, [x19]
   2db8c:	stp	xzr, xzr, [x10]
   2db90:	str	x11, [x19, #24]
   2db94:	ldr	x8, [x10]
   2db98:	ldr	x10, [x9, #72]
   2db9c:	cmp	x10, x8
   2dba0:	b.ls	2dc9c <PyInit__decimal@@Base+0x271e8>  // b.plast
   2dba4:	ldr	x10, [x9, #32]
   2dba8:	cmp	x10, x8
   2dbac:	b.ls	2dc80 <PyInit__decimal@@Base+0x271cc>  // b.plast
   2dbb0:	ldr	x10, [x9, #16]
   2dbb4:	cmp	x10, x8
   2dbb8:	b.hi	2db1c <PyInit__decimal@@Base+0x27068>  // b.pmore
   2dbbc:	ldr	x9, [x9, #24]
   2dbc0:	cmp	x9, x8
   2dbc4:	mov	w8, #0x3                   	// #3
   2dbc8:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2dbcc:	sub	x2, x29, #0x40
   2dbd0:	mov	x0, x19
   2dbd4:	mov	x1, x21
   2dbd8:	mov	x3, x20
   2dbdc:	bl	2e118 <PyInit__decimal@@Base+0x27664>
   2dbe0:	ldrb	w8, [x19]
   2dbe4:	ldr	x22, [x24, #1680]
   2dbe8:	tst	w8, #0xe
   2dbec:	b.eq	2dfe8 <PyInit__decimal@@Base+0x27534>  // b.none
   2dbf0:	ldp	x8, x10, [x19, #8]
   2dbf4:	ldr	x9, [x24, #1696]
   2dbf8:	add	x10, x8, x10
   2dbfc:	sub	x10, x10, #0x1
   2dc00:	cmp	x10, x9
   2dc04:	b.ge	2dc44 <PyInit__decimal@@Base+0x27190>  // b.tcont
   2dc08:	ldrb	w10, [x19]
   2dc0c:	tst	w10, #0xe
   2dc10:	b.ne	2dc28 <PyInit__decimal@@Base+0x27174>  // b.any
   2dc14:	ldr	x10, [x19, #40]
   2dc18:	ldr	x11, [x19, #24]
   2dc1c:	add	x10, x10, x11, lsl #3
   2dc20:	ldur	x10, [x10, #-8]
   2dc24:	cbz	x10, 2dc44 <PyInit__decimal@@Base+0x27190>
   2dc28:	sub	x9, x9, x22
   2dc2c:	add	x9, x9, #0x1
   2dc30:	cmp	x8, x9
   2dc34:	b.ge	2dc44 <PyInit__decimal@@Base+0x27190>  // b.tcont
   2dc38:	ldr	w8, [x20]
   2dc3c:	orr	w8, w8, #0x4000
   2dc40:	str	w8, [x20]
   2dc44:	sub	x1, x29, #0x40
   2dc48:	mov	x0, x19
   2dc4c:	mov	x2, x20
   2dc50:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2dc54:	b	2e084 <PyInit__decimal@@Base+0x275d0>
   2dc58:	ldr	x10, [x9, #112]
   2dc5c:	cmp	x10, x8
   2dc60:	b.ls	2dfc0 <PyInit__decimal@@Base+0x2750c>  // b.plast
   2dc64:	ldr	x10, [x9, #88]
   2dc68:	cmp	x10, x8
   2dc6c:	b.ls	2dcb4 <PyInit__decimal@@Base+0x27200>  // b.plast
   2dc70:	ldr	x9, [x9, #80]
   2dc74:	cmp	x9, x8
   2dc78:	mov	w8, #0xa                   	// #10
   2dc7c:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2dc80:	ldr	x10, [x9, #48]
   2dc84:	cmp	x10, x8
   2dc88:	b.ls	2e02c <PyInit__decimal@@Base+0x27578>  // b.plast
   2dc8c:	ldr	x9, [x9, #40]
   2dc90:	cmp	x9, x8
   2dc94:	mov	w8, #0x5                   	// #5
   2dc98:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2dc9c:	ldr	x10, [x9, #112]
   2dca0:	cmp	x10, x8
   2dca4:	b.ls	2e048 <PyInit__decimal@@Base+0x27594>  // b.plast
   2dca8:	ldr	x10, [x9, #88]
   2dcac:	cmp	x10, x8
   2dcb0:	b.hi	2dc70 <PyInit__decimal@@Base+0x271bc>  // b.pmore
   2dcb4:	ldr	x10, [x9, #104]
   2dcb8:	cmp	x10, x8
   2dcbc:	b.ls	2e0a0 <PyInit__decimal@@Base+0x275ec>  // b.plast
   2dcc0:	ldr	x9, [x9, #96]
   2dcc4:	cmp	x9, x8
   2dcc8:	mov	w8, #0xc                   	// #12
   2dccc:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2dcd0:	add	x0, sp, #0x40
   2dcd4:	mov	w8, #0x30                  	// #48
   2dcd8:	and	w10, w10, #0xf
   2dcdc:	orr	w8, w8, w10
   2dce0:	strb	w8, [sp, #16]
   2dce4:	ldur	q0, [x21, #8]
   2dce8:	lsl	x2, x9, #3
   2dcec:	str	x9, [sp, #40]
   2dcf0:	stur	q0, [sp, #24]
   2dcf4:	bl	63c0 <memcpy@plt>
   2dcf8:	add	x21, sp, #0x10
   2dcfc:	stur	wzr, [x29, #-24]
   2dd00:	ldr	x8, [x22]
   2dd04:	sub	x9, x29, #0x40
   2dd08:	add	x23, x9, #0x1c
   2dd0c:	add	x25, x8, #0x3
   2dd10:	b	2dd24 <PyInit__decimal@@Base+0x27270>
   2dd14:	ldr	w8, [x20]
   2dd18:	orr	w8, w8, #0x100
   2dd1c:	str	w8, [x20]
   2dd20:	add	x25, x25, #0x13
   2dd24:	sub	x2, x29, #0x40
   2dd28:	add	x3, sp, #0xc
   2dd2c:	mov	x0, x19
   2dd30:	mov	x1, x21
   2dd34:	str	x25, [x24, #1680]
   2dd38:	str	wzr, [sp, #12]
   2dd3c:	bl	2e118 <PyInit__decimal@@Base+0x27664>
   2dd40:	ldr	w8, [sp, #12]
   2dd44:	ldr	w9, [x20]
   2dd48:	add	x0, sp, #0x240
   2dd4c:	mov	w2, #0x1                   	// #1
   2dd50:	tst	w8, #0x4000
   2dd54:	orr	w9, w9, w8
   2dd58:	str	w9, [x20]
   2dd5c:	ldp	x9, x10, [x19, #8]
   2dd60:	ldr	x11, [x24, #1680]
   2dd64:	mov	w1, wzr
   2dd68:	add	x10, x10, x9
   2dd6c:	sub	x10, x10, x11
   2dd70:	csel	x3, x10, x9, eq  // eq = none
   2dd74:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   2dd78:	ldr	x8, [x22]
   2dd7c:	add	x0, sp, #0x6a0
   2dd80:	add	x2, sp, #0x240
   2dd84:	sub	x3, x29, #0x40
   2dd88:	mov	x1, x19
   2dd8c:	mov	x4, x23
   2dd90:	str	x8, [x24, #1680]
   2dd94:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2dd98:	add	x0, sp, #0x470
   2dd9c:	add	x2, sp, #0x240
   2dda0:	sub	x3, x29, #0x40
   2dda4:	mov	x1, x19
   2dda8:	mov	x4, x23
   2ddac:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   2ddb0:	ldrb	w9, [x19]
   2ddb4:	tst	w9, #0xe
   2ddb8:	b.ne	2de10 <PyInit__decimal@@Base+0x2735c>  // b.any
   2ddbc:	ldr	x8, [x19, #40]
   2ddc0:	ldr	x10, [x19, #24]
   2ddc4:	add	x8, x8, x10, lsl #3
   2ddc8:	ldur	x8, [x8, #-8]
   2ddcc:	cbz	x8, 2de10 <PyInit__decimal@@Base+0x2735c>
   2ddd0:	ldrb	w8, [sp, #1696]
   2ddd4:	tst	w8, #0xe
   2ddd8:	b.ne	2dde8 <PyInit__decimal@@Base+0x27334>  // b.any
   2dddc:	ldrb	w9, [sp, #1136]
   2dde0:	tst	w9, #0xe
   2dde4:	b.eq	2ddfc <PyInit__decimal@@Base+0x27348>  // b.none
   2dde8:	tst	w8, #0xc
   2ddec:	b.ne	2dd14 <PyInit__decimal@@Base+0x27260>  // b.any
   2ddf0:	ldrb	w8, [sp, #1136]
   2ddf4:	tst	w8, #0xc
   2ddf8:	b.ne	2dd14 <PyInit__decimal@@Base+0x27260>  // b.any
   2ddfc:	add	x0, sp, #0x6a0
   2de00:	add	x1, sp, #0x470
   2de04:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   2de08:	cbnz	w0, 2dd20 <PyInit__decimal@@Base+0x2726c>
   2de0c:	ldrb	w9, [x19]
   2de10:	ldr	w8, [x22, #40]
   2de14:	tst	w9, #0xe
   2de18:	stur	w8, [x29, #-24]
   2de1c:	ldr	x8, [x24, #1680]
   2de20:	b.eq	2df78 <PyInit__decimal@@Base+0x274c4>  // b.none
   2de24:	ldp	x9, x11, [x19, #8]
   2de28:	ldr	x10, [x24, #1696]
   2de2c:	add	x11, x9, x11
   2de30:	sub	x11, x11, #0x1
   2de34:	cmp	x11, x10
   2de38:	b.ge	2de78 <PyInit__decimal@@Base+0x273c4>  // b.tcont
   2de3c:	ldrb	w11, [x19]
   2de40:	tst	w11, #0xe
   2de44:	b.ne	2de5c <PyInit__decimal@@Base+0x273a8>  // b.any
   2de48:	ldr	x11, [x19, #40]
   2de4c:	ldr	x12, [x19, #24]
   2de50:	add	x11, x11, x12, lsl #3
   2de54:	ldur	x11, [x11, #-8]
   2de58:	cbz	x11, 2de78 <PyInit__decimal@@Base+0x273c4>
   2de5c:	sub	x8, x10, x8
   2de60:	add	x8, x8, #0x1
   2de64:	cmp	x9, x8
   2de68:	b.ge	2de78 <PyInit__decimal@@Base+0x273c4>  // b.tcont
   2de6c:	ldr	w8, [x20]
   2de70:	orr	w8, w8, #0x4000
   2de74:	str	w8, [x20]
   2de78:	sub	x1, x29, #0x40
   2de7c:	mov	x0, x19
   2de80:	mov	x2, x20
   2de84:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2de88:	ldrb	w8, [sp, #1696]
   2de8c:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   2de90:	cmp	w8, #0x1f
   2de94:	b.ls	2df08 <PyInit__decimal@@Base+0x27454>  // b.plast
   2de98:	tbnz	w8, #4, 2df1c <PyInit__decimal@@Base+0x27468>
   2de9c:	ldr	x8, [x19, #1376]
   2dea0:	add	x0, sp, #0x6a0
   2dea4:	blr	x8
   2dea8:	ldrb	w8, [sp, #1136]
   2deac:	cmp	w8, #0x1f
   2deb0:	b.hi	2df28 <PyInit__decimal@@Base+0x27474>  // b.pmore
   2deb4:	ldr	x8, [x19, #1376]
   2deb8:	ldr	x0, [x24, #600]
   2debc:	blr	x8
   2dec0:	ldrb	w8, [sp, #1136]
   2dec4:	tbz	w8, #4, 2df2c <PyInit__decimal@@Base+0x27478>
   2dec8:	ldrb	w8, [sp, #576]
   2decc:	cmp	w8, #0x1f
   2ded0:	b.ls	2df44 <PyInit__decimal@@Base+0x27490>  // b.plast
   2ded4:	tbnz	w8, #4, 2df58 <PyInit__decimal@@Base+0x274a4>
   2ded8:	ldr	x8, [x19, #1376]
   2dedc:	add	x0, sp, #0x240
   2dee0:	blr	x8
   2dee4:	ldrb	w8, [sp, #16]
   2dee8:	cmp	w8, #0x1f
   2deec:	b.hi	2df64 <PyInit__decimal@@Base+0x274b0>  // b.pmore
   2def0:	ldr	x8, [x19, #1376]
   2def4:	ldr	x0, [sp, #56]
   2def8:	blr	x8
   2defc:	ldrb	w8, [sp, #16]
   2df00:	tbnz	w8, #4, 2e084 <PyInit__decimal@@Base+0x275d0>
   2df04:	b	2df68 <PyInit__decimal@@Base+0x274b4>
   2df08:	ldr	x8, [x19, #1376]
   2df0c:	ldr	x0, [x24, #1160]
   2df10:	blr	x8
   2df14:	ldrb	w8, [sp, #1696]
   2df18:	tbz	w8, #4, 2de9c <PyInit__decimal@@Base+0x273e8>
   2df1c:	ldrb	w8, [sp, #1136]
   2df20:	cmp	w8, #0x1f
   2df24:	b.ls	2deb4 <PyInit__decimal@@Base+0x27400>  // b.plast
   2df28:	tbnz	w8, #4, 2dec8 <PyInit__decimal@@Base+0x27414>
   2df2c:	ldr	x8, [x19, #1376]
   2df30:	add	x0, sp, #0x470
   2df34:	blr	x8
   2df38:	ldrb	w8, [sp, #576]
   2df3c:	cmp	w8, #0x1f
   2df40:	b.hi	2ded4 <PyInit__decimal@@Base+0x27420>  // b.pmore
   2df44:	ldr	x8, [x19, #1376]
   2df48:	ldr	x0, [x24, #40]
   2df4c:	blr	x8
   2df50:	ldrb	w8, [sp, #576]
   2df54:	tbz	w8, #4, 2ded8 <PyInit__decimal@@Base+0x27424>
   2df58:	ldrb	w8, [sp, #16]
   2df5c:	cmp	w8, #0x1f
   2df60:	b.ls	2def0 <PyInit__decimal@@Base+0x2743c>  // b.plast
   2df64:	tbnz	w8, #4, 2e084 <PyInit__decimal@@Base+0x275d0>
   2df68:	ldr	x8, [x19, #1376]
   2df6c:	add	x0, sp, #0x10
   2df70:	blr	x8
   2df74:	b	2e084 <PyInit__decimal@@Base+0x275d0>
   2df78:	ldr	x9, [x19, #40]
   2df7c:	ldr	x10, [x19, #24]
   2df80:	add	x9, x9, x10, lsl #3
   2df84:	ldur	x9, [x9, #-8]
   2df88:	cbz	x9, 2de24 <PyInit__decimal@@Base+0x27370>
   2df8c:	ldr	x9, [x19, #16]
   2df90:	subs	x21, x8, x9
   2df94:	b.le	2de24 <PyInit__decimal@@Base+0x27370>
   2df98:	mov	x0, x19
   2df9c:	mov	x1, x19
   2dfa0:	mov	x2, x21
   2dfa4:	mov	x3, x20
   2dfa8:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2dfac:	ldr	x8, [x19, #8]
   2dfb0:	sub	x8, x8, x21
   2dfb4:	str	x8, [x19, #8]
   2dfb8:	ldr	x8, [x24, #1680]
   2dfbc:	b	2de24 <PyInit__decimal@@Base+0x27370>
   2dfc0:	ldr	x10, [x9, #144]
   2dfc4:	cmp	x10, x8
   2dfc8:	b.ls	2e070 <PyInit__decimal@@Base+0x275bc>  // b.plast
   2dfcc:	ldr	x10, [x9, #128]
   2dfd0:	cmp	x10, x8
   2dfd4:	b.ls	2e060 <PyInit__decimal@@Base+0x275ac>  // b.plast
   2dfd8:	ldr	x9, [x9, #120]
   2dfdc:	cmp	x9, x8
   2dfe0:	mov	w8, #0xf                   	// #15
   2dfe4:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2dfe8:	ldr	x8, [x19, #40]
   2dfec:	ldr	x9, [x19, #24]
   2dff0:	add	x8, x8, x9, lsl #3
   2dff4:	ldur	x8, [x8, #-8]
   2dff8:	cbz	x8, 2dbf0 <PyInit__decimal@@Base+0x2713c>
   2dffc:	ldr	x8, [x19, #16]
   2e000:	subs	x21, x22, x8
   2e004:	b.le	2dbf0 <PyInit__decimal@@Base+0x2713c>
   2e008:	mov	x0, x19
   2e00c:	mov	x1, x19
   2e010:	mov	x2, x21
   2e014:	mov	x3, x20
   2e018:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   2e01c:	ldr	x8, [x19, #8]
   2e020:	sub	x8, x8, x21
   2e024:	str	x8, [x19, #8]
   2e028:	b	2dbf0 <PyInit__decimal@@Base+0x2713c>
   2e02c:	ldr	x10, [x9, #64]
   2e030:	cmp	x10, x8
   2e034:	b.ls	2e0a8 <PyInit__decimal@@Base+0x275f4>  // b.plast
   2e038:	ldr	x9, [x9, #56]
   2e03c:	cmp	x9, x8
   2e040:	mov	w8, #0x7                   	// #7
   2e044:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2e048:	ldr	x10, [x9, #144]
   2e04c:	cmp	x10, x8
   2e050:	b.ls	2e070 <PyInit__decimal@@Base+0x275bc>  // b.plast
   2e054:	ldr	x10, [x9, #128]
   2e058:	cmp	x10, x8
   2e05c:	b.hi	2dfd8 <PyInit__decimal@@Base+0x27524>  // b.pmore
   2e060:	ldr	x9, [x9, #136]
   2e064:	cmp	x9, x8
   2e068:	mov	w8, #0x11                  	// #17
   2e06c:	b	2e07c <PyInit__decimal@@Base+0x275c8>
   2e070:	ldr	x9, [x9, #152]
   2e074:	cmp	x9, x8
   2e078:	mov	w8, #0x13                  	// #19
   2e07c:	cinc	x8, x8, ls  // ls = plast
   2e080:	str	x8, [x19, #16]
   2e084:	add	sp, sp, #0x910
   2e088:	ldp	x20, x19, [sp, #64]
   2e08c:	ldp	x22, x21, [sp, #48]
   2e090:	ldp	x24, x23, [sp, #32]
   2e094:	ldp	x28, x25, [sp, #16]
   2e098:	ldp	x29, x30, [sp], #80
   2e09c:	ret
   2e0a0:	mov	w8, #0xe                   	// #14
   2e0a4:	b	2e080 <PyInit__decimal@@Base+0x275cc>
   2e0a8:	mov	w8, #0x9                   	// #9
   2e0ac:	b	2e080 <PyInit__decimal@@Base+0x275cc>
   2e0b0:	ldrb	w8, [x21]
   2e0b4:	tbnz	w8, #5, 2e0f4 <PyInit__decimal@@Base+0x27640>
   2e0b8:	ldr	x9, [x21, #32]
   2e0bc:	ldr	x1, [x23, #1344]
   2e0c0:	cmp	x9, x1
   2e0c4:	b.le	2e0f4 <PyInit__decimal@@Base+0x27640>
   2e0c8:	sturb	wzr, [x29, #-4]
   2e0cc:	ldr	x0, [x21, #40]
   2e0d0:	sub	x3, x29, #0x4
   2e0d4:	mov	w2, #0x8                   	// #8
   2e0d8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2e0dc:	str	x0, [x21, #40]
   2e0e0:	ldurb	w8, [x29, #-4]
   2e0e4:	cbnz	w8, 2e0f0 <PyInit__decimal@@Base+0x2763c>
   2e0e8:	ldr	x8, [x23, #1344]
   2e0ec:	str	x8, [x21, #32]
   2e0f0:	ldrb	w8, [x21]
   2e0f4:	and	w8, w8, #0xf0
   2e0f8:	orr	w8, w8, #0x4
   2e0fc:	stp	xzr, xzr, [x21, #16]
   2e100:	strb	w8, [x21]
   2e104:	str	xzr, [x21, #8]
   2e108:	ldr	w8, [x20]
   2e10c:	orr	w8, w8, #0x200
   2e110:	str	w8, [x20]
   2e114:	b	2e084 <PyInit__decimal@@Base+0x275d0>
   2e118:	stp	x29, x30, [sp, #-96]!
   2e11c:	stp	x28, x27, [sp, #16]
   2e120:	stp	x26, x25, [sp, #32]
   2e124:	stp	x24, x23, [sp, #48]
   2e128:	stp	x22, x21, [sp, #64]
   2e12c:	stp	x20, x19, [sp, #80]
   2e130:	mov	x29, sp
   2e134:	sub	sp, sp, #0x510
   2e138:	mov	w8, #0x30                  	// #48
   2e13c:	add	x10, sp, #0x298
   2e140:	str	x10, [sp, #656]
   2e144:	add	x10, sp, #0x68
   2e148:	strb	w8, [sp, #616]
   2e14c:	strb	w8, [sp, #56]
   2e150:	mov	w8, #0x1                   	// #1
   2e154:	str	x10, [sp, #96]
   2e158:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
   2e15c:	dup	v0.2d, x8
   2e160:	stur	q0, [sp, #24]
   2e164:	ldr	q0, [x10, #1552]
   2e168:	mov	w9, #0x40                  	// #64
   2e16c:	str	x9, [sp, #648]
   2e170:	stp	xzr, x9, [sp, #80]
   2e174:	mov	w9, #0x90                  	// #144
   2e178:	add	x10, sp, #0x30
   2e17c:	str	xzr, [sp, #624]
   2e180:	str	xzr, [sp, #632]
   2e184:	stp	xzr, xzr, [sp, #64]
   2e188:	str	xzr, [sp, #640]
   2e18c:	stp	x10, x8, [sp, #40]
   2e190:	strb	w9, [sp]
   2e194:	stur	q0, [sp, #8]
   2e198:	ldr	x8, [x1, #40]
   2e19c:	ldr	x9, [x1, #24]
   2e1a0:	mov	x19, x0
   2e1a4:	add	x10, x8, x9, lsl #3
   2e1a8:	ldur	x10, [x10, #-8]
   2e1ac:	cbz	x10, 2e23c <PyInit__decimal@@Base+0x27788>
   2e1b0:	ldp	x11, x10, [x1, #8]
   2e1b4:	mov	x20, x3
   2e1b8:	mov	x22, x2
   2e1bc:	mov	x21, x1
   2e1c0:	add	x12, x11, x10
   2e1c4:	bic	x23, x12, x12, asr #63
   2e1c8:	cmp	x23, #0x14
   2e1cc:	b.lt	2e2e8 <PyInit__decimal@@Base+0x27834>  // b.tstop
   2e1d0:	ldrb	w8, [x21]
   2e1d4:	tbnz	w8, #0, 2e3e8 <PyInit__decimal@@Base+0x27934>
   2e1d8:	ldrb	w8, [x19]
   2e1dc:	tbnz	w8, #5, 2e220 <PyInit__decimal@@Base+0x2776c>
   2e1e0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2e1e4:	ldr	x9, [x19, #32]
   2e1e8:	ldr	x1, [x21, #1344]
   2e1ec:	cmp	x9, x1
   2e1f0:	b.le	2e220 <PyInit__decimal@@Base+0x2776c>
   2e1f4:	sturb	wzr, [x29, #-72]
   2e1f8:	ldr	x0, [x19, #40]
   2e1fc:	sub	x3, x29, #0x48
   2e200:	mov	w2, #0x8                   	// #8
   2e204:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2e208:	str	x0, [x19, #40]
   2e20c:	ldurb	w8, [x29, #-72]
   2e210:	cbnz	w8, 2e21c <PyInit__decimal@@Base+0x27768>
   2e214:	ldr	x8, [x21, #1344]
   2e218:	str	x8, [x19, #32]
   2e21c:	ldrb	w8, [x19]
   2e220:	and	w8, w8, #0xf0
   2e224:	orr	w8, w8, #0x2
   2e228:	stp	xzr, xzr, [x19, #16]
   2e22c:	str	xzr, [x19, #8]
   2e230:	strb	w8, [x19]
   2e234:	mov	w8, #0x1840                	// #6208
   2e238:	b	2e988 <PyInit__decimal@@Base+0x27ed4>
   2e23c:	ldrb	w8, [x19]
   2e240:	tbnz	w8, #5, 2e284 <PyInit__decimal@@Base+0x277d0>
   2e244:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   2e248:	ldr	x9, [x19, #32]
   2e24c:	ldr	x1, [x20, #1344]
   2e250:	cmp	x9, x1
   2e254:	b.le	2e284 <PyInit__decimal@@Base+0x277d0>
   2e258:	sturb	wzr, [x29, #-72]
   2e25c:	ldr	x0, [x19, #40]
   2e260:	sub	x3, x29, #0x48
   2e264:	mov	w2, #0x8                   	// #8
   2e268:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2e26c:	str	x0, [x19, #40]
   2e270:	ldurb	w8, [x29, #-72]
   2e274:	cbnz	w8, 2e280 <PyInit__decimal@@Base+0x277cc>
   2e278:	ldr	x8, [x20, #1344]
   2e27c:	str	x8, [x19, #32]
   2e280:	ldrb	w8, [x19]
   2e284:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   2e288:	ldr	x10, [x19, #40]
   2e28c:	ldr	q0, [x9, #2464]
   2e290:	and	w8, w8, #0xf0
   2e294:	mov	w11, #0x1                   	// #1
   2e298:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2e29c:	str	xzr, [x19, #8]
   2e2a0:	add	x9, x9, #0xca0
   2e2a4:	strb	w8, [x19]
   2e2a8:	str	q0, [x10]
   2e2ac:	str	x11, [x19, #24]
   2e2b0:	ldr	x8, [x10]
   2e2b4:	ldr	x10, [x9, #72]
   2e2b8:	cmp	x10, x8
   2e2bc:	b.ls	2e3c0 <PyInit__decimal@@Base+0x2790c>  // b.plast
   2e2c0:	ldr	x10, [x9, #32]
   2e2c4:	cmp	x10, x8
   2e2c8:	b.ls	2e548 <PyInit__decimal@@Base+0x27a94>  // b.plast
   2e2cc:	ldr	x10, [x9, #16]
   2e2d0:	cmp	x10, x8
   2e2d4:	b.ls	2e5dc <PyInit__decimal@@Base+0x27b28>  // b.plast
   2e2d8:	ldr	x9, [x9, #8]
   2e2dc:	cmp	x9, x8
   2e2e0:	mov	w8, #0x1                   	// #1
   2e2e4:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e2e8:	ldr	x12, [x22]
   2e2ec:	mov	w13, #0x9                   	// #9
   2e2f0:	mov	w14, #0x90                  	// #144
   2e2f4:	stur	x13, [x29, #-24]
   2e2f8:	mov	w13, #0x1                   	// #1
   2e2fc:	sturb	w14, [x29, #-72]
   2e300:	sub	x14, x29, #0x18
   2e304:	dup	v0.2d, x13
   2e308:	mvn	x12, x12
   2e30c:	stp	x13, x14, [x29, #-40]
   2e310:	stur	q0, [x29, #-56]
   2e314:	stur	x12, [x29, #-64]
   2e318:	ldrb	w12, [x21]
   2e31c:	stp	x11, x10, [x29, #-112]
   2e320:	stur	x9, [x29, #-96]
   2e324:	ldr	x9, [x21, #32]
   2e328:	mov	w10, #0x50                  	// #80
   2e32c:	and	w11, w12, #0xe
   2e330:	sub	x0, x29, #0x78
   2e334:	stp	x9, x8, [x29, #-88]
   2e338:	orr	w8, w11, w10
   2e33c:	sub	x1, x29, #0x48
   2e340:	sturb	w8, [x29, #-120]
   2e344:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   2e348:	cmp	w0, #0x0
   2e34c:	b.le	2e49c <PyInit__decimal@@Base+0x279e8>
   2e350:	sub	x0, x29, #0x48
   2e354:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2e358:	ldr	x8, [x22]
   2e35c:	mov	w9, #0xa                   	// #10
   2e360:	mov	w10, #0x6                   	// #6
   2e364:	stur	w10, [x29, #-36]
   2e368:	add	x8, x23, x8
   2e36c:	add	x8, x8, #0x2
   2e370:	cmp	x8, #0xa
   2e374:	csel	x8, x8, x9, gt
   2e378:	cmp	x19, x21
   2e37c:	stur	x8, [x29, #-72]
   2e380:	b.eq	2e6c8 <PyInit__decimal@@Base+0x27c14>  // b.none
   2e384:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   2e388:	ldr	x8, [x21, #24]
   2e38c:	ldr	x10, [x9, #1344]
   2e390:	ldr	x9, [x19, #32]
   2e394:	cmp	x10, x8
   2e398:	csel	x1, x8, x10, lt  // lt = tstop
   2e39c:	cmp	x1, x9
   2e3a0:	b.eq	2e694 <PyInit__decimal@@Base+0x27be0>  // b.none
   2e3a4:	ldrb	w10, [x19]
   2e3a8:	tbnz	w10, #5, 2e678 <PyInit__decimal@@Base+0x27bc4>
   2e3ac:	mov	x0, x19
   2e3b0:	mov	x2, x20
   2e3b4:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2e3b8:	cbnz	w0, 2e690 <PyInit__decimal@@Base+0x27bdc>
   2e3bc:	b	2edd4 <PyInit__decimal@@Base+0x28320>
   2e3c0:	ldr	x10, [x9, #112]
   2e3c4:	cmp	x10, x8
   2e3c8:	b.ls	2e564 <PyInit__decimal@@Base+0x27ab0>  // b.plast
   2e3cc:	ldr	x10, [x9, #88]
   2e3d0:	cmp	x10, x8
   2e3d4:	b.ls	2e5ec <PyInit__decimal@@Base+0x27b38>  // b.plast
   2e3d8:	ldr	x9, [x9, #80]
   2e3dc:	cmp	x9, x8
   2e3e0:	mov	w8, #0xa                   	// #10
   2e3e4:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e3e8:	ldr	x9, [x22, #16]
   2e3ec:	ldr	x10, [x22]
   2e3f0:	ldrb	w8, [x19]
   2e3f4:	sub	x9, x9, x10
   2e3f8:	add	x21, x9, #0x1
   2e3fc:	tbnz	w8, #5, 2e440 <PyInit__decimal@@Base+0x2798c>
   2e400:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2e404:	ldr	x9, [x19, #32]
   2e408:	ldr	x1, [x22, #1344]
   2e40c:	cmp	x9, x1
   2e410:	b.le	2e440 <PyInit__decimal@@Base+0x2798c>
   2e414:	sturb	wzr, [x29, #-72]
   2e418:	ldr	x0, [x19, #40]
   2e41c:	sub	x3, x29, #0x48
   2e420:	mov	w2, #0x8                   	// #8
   2e424:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2e428:	str	x0, [x19, #40]
   2e42c:	ldurb	w8, [x29, #-72]
   2e430:	cbnz	w8, 2e43c <PyInit__decimal@@Base+0x27988>
   2e434:	ldr	x8, [x22, #1344]
   2e438:	str	x8, [x19, #32]
   2e43c:	ldrb	w8, [x19]
   2e440:	ldr	x10, [x19, #40]
   2e444:	and	w8, w8, #0xf0
   2e448:	mov	w11, #0x1                   	// #1
   2e44c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2e450:	str	x21, [x19, #8]
   2e454:	add	x9, x9, #0xca0
   2e458:	strb	w8, [x19]
   2e45c:	stp	xzr, xzr, [x10]
   2e460:	str	x11, [x19, #24]
   2e464:	ldr	x8, [x10]
   2e468:	ldr	x10, [x9, #72]
   2e46c:	cmp	x10, x8
   2e470:	b.ls	2e58c <PyInit__decimal@@Base+0x27ad8>  // b.plast
   2e474:	ldr	x10, [x9, #32]
   2e478:	cmp	x10, x8
   2e47c:	b.ls	2e634 <PyInit__decimal@@Base+0x27b80>  // b.plast
   2e480:	ldr	x10, [x9, #16]
   2e484:	cmp	x10, x8
   2e488:	b.ls	2e868 <PyInit__decimal@@Base+0x27db4>  // b.plast
   2e48c:	ldr	x9, [x9, #8]
   2e490:	cmp	x9, x8
   2e494:	mov	w8, #0x1                   	// #1
   2e498:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e49c:	ldrb	w8, [x19]
   2e4a0:	tbnz	w8, #5, 2e4e4 <PyInit__decimal@@Base+0x27a30>
   2e4a4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2e4a8:	ldr	x9, [x19, #32]
   2e4ac:	ldr	x1, [x21, #1344]
   2e4b0:	cmp	x9, x1
   2e4b4:	b.le	2e4e4 <PyInit__decimal@@Base+0x27a30>
   2e4b8:	sturb	wzr, [x29, #-12]
   2e4bc:	ldr	x0, [x19, #40]
   2e4c0:	sub	x3, x29, #0xc
   2e4c4:	mov	w2, #0x8                   	// #8
   2e4c8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2e4cc:	str	x0, [x19, #40]
   2e4d0:	ldurb	w8, [x29, #-12]
   2e4d4:	cbnz	w8, 2e4e0 <PyInit__decimal@@Base+0x27a2c>
   2e4d8:	ldr	x8, [x21, #1344]
   2e4dc:	str	x8, [x19, #32]
   2e4e0:	ldrb	w8, [x19]
   2e4e4:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   2e4e8:	ldr	x10, [x19, #40]
   2e4ec:	ldr	q0, [x9, #2464]
   2e4f0:	and	w8, w8, #0xf0
   2e4f4:	mov	w11, #0x1                   	// #1
   2e4f8:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   2e4fc:	str	xzr, [x19, #8]
   2e500:	add	x9, x9, #0xca0
   2e504:	strb	w8, [x19]
   2e508:	str	q0, [x10]
   2e50c:	str	x11, [x19, #24]
   2e510:	ldr	x8, [x10]
   2e514:	ldr	x10, [x9, #72]
   2e518:	cmp	x10, x8
   2e51c:	b.ls	2e5b4 <PyInit__decimal@@Base+0x27b00>  // b.plast
   2e520:	ldr	x10, [x9, #32]
   2e524:	cmp	x10, x8
   2e528:	b.ls	2e7b0 <PyInit__decimal@@Base+0x27cfc>  // b.plast
   2e52c:	ldr	x10, [x9, #16]
   2e530:	cmp	x10, x8
   2e534:	b.ls	2e8c0 <PyInit__decimal@@Base+0x27e0c>  // b.plast
   2e538:	ldr	x9, [x9, #8]
   2e53c:	cmp	x9, x8
   2e540:	mov	w8, #0x1                   	// #1
   2e544:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e548:	ldr	x10, [x9, #48]
   2e54c:	cmp	x10, x8
   2e550:	b.ls	2e608 <PyInit__decimal@@Base+0x27b54>  // b.plast
   2e554:	ldr	x9, [x9, #40]
   2e558:	cmp	x9, x8
   2e55c:	mov	w8, #0x5                   	// #5
   2e560:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e564:	ldr	x10, [x9, #144]
   2e568:	cmp	x10, x8
   2e56c:	b.ls	2e624 <PyInit__decimal@@Base+0x27b70>  // b.plast
   2e570:	ldr	x10, [x9, #128]
   2e574:	cmp	x10, x8
   2e578:	b.ls	2e7f4 <PyInit__decimal@@Base+0x27d40>  // b.plast
   2e57c:	ldr	x9, [x9, #120]
   2e580:	cmp	x9, x8
   2e584:	mov	w8, #0xf                   	// #15
   2e588:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e58c:	ldr	x10, [x9, #112]
   2e590:	cmp	x10, x8
   2e594:	b.ls	2e650 <PyInit__decimal@@Base+0x27b9c>  // b.plast
   2e598:	ldr	x10, [x9, #88]
   2e59c:	cmp	x10, x8
   2e5a0:	b.ls	2e878 <PyInit__decimal@@Base+0x27dc4>  // b.plast
   2e5a4:	ldr	x9, [x9, #80]
   2e5a8:	cmp	x9, x8
   2e5ac:	mov	w8, #0xa                   	// #10
   2e5b0:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e5b4:	ldr	x10, [x9, #112]
   2e5b8:	cmp	x10, x8
   2e5bc:	b.ls	2e7cc <PyInit__decimal@@Base+0x27d18>  // b.plast
   2e5c0:	ldr	x10, [x9, #88]
   2e5c4:	cmp	x10, x8
   2e5c8:	b.ls	2e8d0 <PyInit__decimal@@Base+0x27e1c>  // b.plast
   2e5cc:	ldr	x9, [x9, #80]
   2e5d0:	cmp	x9, x8
   2e5d4:	mov	w8, #0xa                   	// #10
   2e5d8:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e5dc:	ldr	x9, [x9, #24]
   2e5e0:	cmp	x9, x8
   2e5e4:	mov	w8, #0x3                   	// #3
   2e5e8:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e5ec:	ldr	x10, [x9, #104]
   2e5f0:	cmp	x10, x8
   2e5f4:	b.ls	2e80c <PyInit__decimal@@Base+0x27d58>  // b.plast
   2e5f8:	ldr	x9, [x9, #96]
   2e5fc:	cmp	x9, x8
   2e600:	mov	w8, #0xc                   	// #12
   2e604:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e608:	ldr	x10, [x9, #64]
   2e60c:	cmp	x10, x8
   2e610:	b.ls	2e818 <PyInit__decimal@@Base+0x27d64>  // b.plast
   2e614:	ldr	x9, [x9, #56]
   2e618:	cmp	x9, x8
   2e61c:	mov	w8, #0x7                   	// #7
   2e620:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e624:	ldr	x9, [x9, #152]
   2e628:	cmp	x9, x8
   2e62c:	mov	w8, #0x13                  	// #19
   2e630:	b	2e800 <PyInit__decimal@@Base+0x27d4c>
   2e634:	ldr	x10, [x9, #48]
   2e638:	cmp	x10, x8
   2e63c:	b.ls	2e894 <PyInit__decimal@@Base+0x27de0>  // b.plast
   2e640:	ldr	x9, [x9, #40]
   2e644:	cmp	x9, x8
   2e648:	mov	w8, #0x5                   	// #5
   2e64c:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e650:	ldr	x10, [x9, #144]
   2e654:	cmp	x10, x8
   2e658:	b.ls	2e8b0 <PyInit__decimal@@Base+0x27dfc>  // b.plast
   2e65c:	ldr	x10, [x9, #128]
   2e660:	cmp	x10, x8
   2e664:	b.ls	2e970 <PyInit__decimal@@Base+0x27ebc>  // b.plast
   2e668:	ldr	x9, [x9, #120]
   2e66c:	cmp	x9, x8
   2e670:	mov	w8, #0xf                   	// #15
   2e674:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e678:	cmp	x1, x9
   2e67c:	b.le	2e694 <PyInit__decimal@@Base+0x27be0>
   2e680:	mov	x0, x19
   2e684:	mov	x2, x20
   2e688:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2e68c:	cbz	w0, 2edd4 <PyInit__decimal@@Base+0x28320>
   2e690:	ldr	x8, [x21, #24]
   2e694:	ldrb	w9, [x21]
   2e698:	ldrb	w10, [x19]
   2e69c:	ldr	x0, [x19, #40]
   2e6a0:	bfxil	w10, w9, #0, #4
   2e6a4:	strb	w10, [x19]
   2e6a8:	ldur	q0, [x21, #8]
   2e6ac:	str	x8, [x19, #24]
   2e6b0:	stur	q0, [x19, #8]
   2e6b4:	ldr	x8, [x21, #24]
   2e6b8:	ldr	x1, [x21, #40]
   2e6bc:	lsl	x2, x8, #3
   2e6c0:	bl	63c0 <memcpy@plt>
   2e6c4:	ldur	x8, [x29, #-72]
   2e6c8:	mov	x21, x19
   2e6cc:	ldr	x9, [x21, #8]!
   2e6d0:	mov	x10, #0x10000000000000      	// #4503599627370496
   2e6d4:	cmp	x8, x10
   2e6d8:	sub	x9, x9, x23
   2e6dc:	str	x9, [x21]
   2e6e0:	b.le	2e74c <PyInit__decimal@@Base+0x27c98>
   2e6e4:	ldrb	w8, [x19]
   2e6e8:	tbnz	w8, #5, 2e72c <PyInit__decimal@@Base+0x27c78>
   2e6ec:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   2e6f0:	ldr	x9, [x19, #32]
   2e6f4:	ldr	x1, [x22, #1344]
   2e6f8:	cmp	x9, x1
   2e6fc:	b.le	2e72c <PyInit__decimal@@Base+0x27c78>
   2e700:	sturb	wzr, [x29, #-120]
   2e704:	ldr	x0, [x19, #40]
   2e708:	sub	x3, x29, #0x78
   2e70c:	mov	w2, #0x8                   	// #8
   2e710:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2e714:	str	x0, [x19, #40]
   2e718:	ldurb	w8, [x29, #-120]
   2e71c:	cbnz	w8, 2e728 <PyInit__decimal@@Base+0x27c74>
   2e720:	ldr	x8, [x22, #1344]
   2e724:	str	x8, [x19, #32]
   2e728:	ldrb	w8, [x19]
   2e72c:	and	w8, w8, #0xf0
   2e730:	orr	w8, w8, #0x4
   2e734:	strb	w8, [x19]
   2e738:	stp	xzr, xzr, [x21]
   2e73c:	str	xzr, [x21, #16]
   2e740:	ldr	w8, [x20]
   2e744:	orr	w8, w8, #0x100
   2e748:	b	2edd0 <PyInit__decimal@@Base+0x2831c>
   2e74c:	adrp	x24, 44000 <PyInit__decimal@@Base+0x3d54c>
   2e750:	add	x24, x24, #0xca0
   2e754:	ldr	x25, [x24, #72]
   2e758:	cmp	x25, x8
   2e75c:	b.ls	2e788 <PyInit__decimal@@Base+0x27cd4>  // b.plast
   2e760:	ldr	x10, [x24, #32]
   2e764:	cmp	x10, x8
   2e768:	b.ls	2e824 <PyInit__decimal@@Base+0x27d70>  // b.plast
   2e76c:	ldr	x10, [x24, #16]
   2e770:	cmp	x10, x8
   2e774:	b.ls	2e918 <PyInit__decimal@@Base+0x27e64>  // b.plast
   2e778:	ldr	x10, [x24, #8]
   2e77c:	cmp	x10, x8
   2e780:	mov	w10, #0x1                   	// #1
   2e784:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e788:	ldr	x10, [x24, #112]
   2e78c:	cmp	x10, x8
   2e790:	b.ls	2e840 <PyInit__decimal@@Base+0x27d8c>  // b.plast
   2e794:	ldr	x10, [x24, #88]
   2e798:	cmp	x10, x8
   2e79c:	b.ls	2e928 <PyInit__decimal@@Base+0x27e74>  // b.plast
   2e7a0:	ldr	x10, [x24, #80]
   2e7a4:	cmp	x10, x8
   2e7a8:	mov	w10, #0xa                   	// #10
   2e7ac:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e7b0:	ldr	x10, [x9, #48]
   2e7b4:	cmp	x10, x8
   2e7b8:	b.ls	2e8ec <PyInit__decimal@@Base+0x27e38>  // b.plast
   2e7bc:	ldr	x9, [x9, #40]
   2e7c0:	cmp	x9, x8
   2e7c4:	mov	w8, #0x5                   	// #5
   2e7c8:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e7cc:	ldr	x10, [x9, #144]
   2e7d0:	cmp	x10, x8
   2e7d4:	b.ls	2e908 <PyInit__decimal@@Base+0x27e54>  // b.plast
   2e7d8:	ldr	x10, [x9, #128]
   2e7dc:	cmp	x10, x8
   2e7e0:	b.ls	2e9a4 <PyInit__decimal@@Base+0x27ef0>  // b.plast
   2e7e4:	ldr	x9, [x9, #120]
   2e7e8:	cmp	x9, x8
   2e7ec:	mov	w8, #0xf                   	// #15
   2e7f0:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e7f4:	ldr	x9, [x9, #136]
   2e7f8:	cmp	x9, x8
   2e7fc:	mov	w8, #0x11                  	// #17
   2e800:	cinc	x8, x8, ls  // ls = plast
   2e804:	str	x8, [x19, #16]
   2e808:	b	2edd4 <PyInit__decimal@@Base+0x28320>
   2e80c:	mov	w8, #0xe                   	// #14
   2e810:	str	x8, [x19, #16]
   2e814:	b	2edd4 <PyInit__decimal@@Base+0x28320>
   2e818:	mov	w8, #0x9                   	// #9
   2e81c:	str	x8, [x19, #16]
   2e820:	b	2edd4 <PyInit__decimal@@Base+0x28320>
   2e824:	ldr	x10, [x24, #48]
   2e828:	cmp	x10, x8
   2e82c:	b.ls	2e944 <PyInit__decimal@@Base+0x27e90>  // b.plast
   2e830:	ldr	x10, [x24, #40]
   2e834:	cmp	x10, x8
   2e838:	mov	w10, #0x5                   	// #5
   2e83c:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e840:	ldr	x10, [x24, #144]
   2e844:	cmp	x10, x8
   2e848:	b.ls	2e960 <PyInit__decimal@@Base+0x27eac>  // b.plast
   2e84c:	ldr	x10, [x24, #128]
   2e850:	cmp	x10, x8
   2e854:	b.ls	2e9d0 <PyInit__decimal@@Base+0x27f1c>  // b.plast
   2e858:	ldr	x10, [x24, #120]
   2e85c:	cmp	x10, x8
   2e860:	mov	w10, #0xf                   	// #15
   2e864:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e868:	ldr	x9, [x9, #24]
   2e86c:	cmp	x9, x8
   2e870:	mov	w8, #0x3                   	// #3
   2e874:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e878:	ldr	x10, [x9, #104]
   2e87c:	cmp	x10, x8
   2e880:	b.ls	2e994 <PyInit__decimal@@Base+0x27ee0>  // b.plast
   2e884:	ldr	x9, [x9, #96]
   2e888:	cmp	x9, x8
   2e88c:	mov	w8, #0xc                   	// #12
   2e890:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e894:	ldr	x10, [x9, #64]
   2e898:	cmp	x10, x8
   2e89c:	b.ls	2e99c <PyInit__decimal@@Base+0x27ee8>  // b.plast
   2e8a0:	ldr	x9, [x9, #56]
   2e8a4:	cmp	x9, x8
   2e8a8:	mov	w8, #0x7                   	// #7
   2e8ac:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e8b0:	ldr	x9, [x9, #152]
   2e8b4:	cmp	x9, x8
   2e8b8:	mov	w8, #0x13                  	// #19
   2e8bc:	b	2e97c <PyInit__decimal@@Base+0x27ec8>
   2e8c0:	ldr	x9, [x9, #24]
   2e8c4:	cmp	x9, x8
   2e8c8:	mov	w8, #0x3                   	// #3
   2e8cc:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e8d0:	ldr	x10, [x9, #104]
   2e8d4:	cmp	x10, x8
   2e8d8:	b.ls	2e9c0 <PyInit__decimal@@Base+0x27f0c>  // b.plast
   2e8dc:	ldr	x9, [x9, #96]
   2e8e0:	cmp	x9, x8
   2e8e4:	mov	w8, #0xc                   	// #12
   2e8e8:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e8ec:	ldr	x10, [x9, #64]
   2e8f0:	cmp	x10, x8
   2e8f4:	b.ls	2e9c8 <PyInit__decimal@@Base+0x27f14>  // b.plast
   2e8f8:	ldr	x9, [x9, #56]
   2e8fc:	cmp	x9, x8
   2e900:	mov	w8, #0x7                   	// #7
   2e904:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e908:	ldr	x9, [x9, #152]
   2e90c:	cmp	x9, x8
   2e910:	mov	w8, #0x13                  	// #19
   2e914:	b	2e9b0 <PyInit__decimal@@Base+0x27efc>
   2e918:	ldr	x10, [x24, #24]
   2e91c:	cmp	x10, x8
   2e920:	mov	w10, #0x3                   	// #3
   2e924:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e928:	ldr	x10, [x24, #104]
   2e92c:	cmp	x10, x8
   2e930:	b.ls	2eb98 <PyInit__decimal@@Base+0x280e4>  // b.plast
   2e934:	ldr	x10, [x24, #96]
   2e938:	cmp	x10, x8
   2e93c:	mov	w10, #0xc                   	// #12
   2e940:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e944:	ldr	x10, [x24, #64]
   2e948:	cmp	x10, x8
   2e94c:	b.ls	2eba0 <PyInit__decimal@@Base+0x280ec>  // b.plast
   2e950:	ldr	x10, [x24, #56]
   2e954:	cmp	x10, x8
   2e958:	mov	w10, #0x7                   	// #7
   2e95c:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e960:	ldr	x10, [x24, #152]
   2e964:	cmp	x10, x8
   2e968:	mov	w10, #0x13                  	// #19
   2e96c:	b	2e9dc <PyInit__decimal@@Base+0x27f28>
   2e970:	ldr	x9, [x9, #136]
   2e974:	cmp	x9, x8
   2e978:	mov	w8, #0x11                  	// #17
   2e97c:	cinc	x8, x8, ls  // ls = plast
   2e980:	str	x8, [x19, #16]
   2e984:	mov	w8, #0x7041                	// #28737
   2e988:	ldr	w9, [x20]
   2e98c:	orr	w8, w9, w8
   2e990:	b	2edd0 <PyInit__decimal@@Base+0x2831c>
   2e994:	mov	w8, #0xe                   	// #14
   2e998:	b	2e980 <PyInit__decimal@@Base+0x27ecc>
   2e99c:	mov	w8, #0x9                   	// #9
   2e9a0:	b	2e980 <PyInit__decimal@@Base+0x27ecc>
   2e9a4:	ldr	x9, [x9, #136]
   2e9a8:	cmp	x9, x8
   2e9ac:	mov	w8, #0x11                  	// #17
   2e9b0:	cinc	x8, x8, ls  // ls = plast
   2e9b4:	str	x8, [x19, #16]
   2e9b8:	ldr	w8, [x20]
   2e9bc:	b	2edc8 <PyInit__decimal@@Base+0x28314>
   2e9c0:	mov	w8, #0xe                   	// #14
   2e9c4:	b	2e9b4 <PyInit__decimal@@Base+0x27f00>
   2e9c8:	mov	w8, #0x9                   	// #9
   2e9cc:	b	2e9b4 <PyInit__decimal@@Base+0x27f00>
   2e9d0:	ldr	x10, [x24, #136]
   2e9d4:	cmp	x10, x8
   2e9d8:	mov	w10, #0x11                  	// #17
   2e9dc:	cinc	x10, x10, ls  // ls = plast
   2e9e0:	ldr	x11, [x19, #16]
   2e9e4:	scvtf	d0, x8
   2e9e8:	adrp	x8, 45000 <PyInit__decimal@@Base+0x3e54c>
   2e9ec:	adrp	x12, 45000 <PyInit__decimal@@Base+0x3e54c>
   2e9f0:	ldr	d1, [x8, #2528]
   2e9f4:	ldr	d2, [x12, #2536]
   2e9f8:	add	x8, x9, x11
   2e9fc:	mvn	x8, x8
   2ea00:	fmul	d0, d0, d1
   2ea04:	add	x8, x8, x10
   2ea08:	fadd	d0, d0, d2
   2ea0c:	scvtf	d1, x8
   2ea10:	fdiv	d0, d0, d1
   2ea14:	fcvtps	x22, d0
   2ea18:	cmp	x22, #0x4
   2ea1c:	b.lt	2ea30 <PyInit__decimal@@Base+0x27f7c>  // b.tstop
   2ea20:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2ea24:	cmp	x22, x8
   2ea28:	b.eq	2e6e4 <PyInit__decimal@@Base+0x27c30>  // b.none
   2ea2c:	b	2ea34 <PyInit__decimal@@Base+0x27f80>
   2ea30:	mov	w22, #0x3                   	// #3
   2ea34:	ldrb	w8, [sp, #56]
   2ea38:	tbnz	w8, #5, 2ea7c <PyInit__decimal@@Base+0x27fc8>
   2ea3c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2ea40:	ldr	x9, [sp, #88]
   2ea44:	ldr	x1, [x21, #1344]
   2ea48:	cmp	x9, x1
   2ea4c:	b.le	2ea7c <PyInit__decimal@@Base+0x27fc8>
   2ea50:	ldr	x0, [sp, #96]
   2ea54:	sub	x3, x29, #0x78
   2ea58:	mov	w2, #0x8                   	// #8
   2ea5c:	sturb	wzr, [x29, #-120]
   2ea60:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2ea64:	ldurb	w8, [x29, #-120]
   2ea68:	str	x0, [sp, #96]
   2ea6c:	cbnz	w8, 2ea78 <PyInit__decimal@@Base+0x27fc4>
   2ea70:	ldr	x8, [x21, #1344]
   2ea74:	str	x8, [sp, #88]
   2ea78:	ldrb	w8, [sp, #56]
   2ea7c:	adrp	x10, 45000 <PyInit__decimal@@Base+0x3e54c>
   2ea80:	ldr	x9, [sp, #96]
   2ea84:	ldr	q0, [x10, #2464]
   2ea88:	and	w8, w8, #0xf0
   2ea8c:	mov	w10, #0x1                   	// #1
   2ea90:	str	xzr, [sp, #64]
   2ea94:	strb	w8, [sp, #56]
   2ea98:	str	q0, [x9]
   2ea9c:	str	x10, [sp, #80]
   2eaa0:	ldr	x8, [x9]
   2eaa4:	cmp	x25, x8
   2eaa8:	b.ls	2ead4 <PyInit__decimal@@Base+0x28020>  // b.plast
   2eaac:	ldr	x9, [x24, #32]
   2eab0:	cmp	x9, x8
   2eab4:	b.ls	2eafc <PyInit__decimal@@Base+0x28048>  // b.plast
   2eab8:	ldr	x9, [x24, #16]
   2eabc:	cmp	x9, x8
   2eac0:	b.ls	2eb40 <PyInit__decimal@@Base+0x2808c>  // b.plast
   2eac4:	ldr	x9, [x24, #8]
   2eac8:	cmp	x9, x8
   2eacc:	mov	w8, #0x1                   	// #1
   2ead0:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2ead4:	ldr	x9, [x24, #112]
   2ead8:	cmp	x9, x8
   2eadc:	b.ls	2eb18 <PyInit__decimal@@Base+0x28064>  // b.plast
   2eae0:	ldr	x9, [x24, #88]
   2eae4:	cmp	x9, x8
   2eae8:	b.ls	2eb50 <PyInit__decimal@@Base+0x2809c>  // b.plast
   2eaec:	ldr	x9, [x24, #80]
   2eaf0:	cmp	x9, x8
   2eaf4:	mov	w8, #0xa                   	// #10
   2eaf8:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eafc:	ldr	x9, [x24, #48]
   2eb00:	cmp	x9, x8
   2eb04:	b.ls	2eb6c <PyInit__decimal@@Base+0x280b8>  // b.plast
   2eb08:	ldr	x9, [x24, #40]
   2eb0c:	cmp	x9, x8
   2eb10:	mov	w8, #0x5                   	// #5
   2eb14:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eb18:	ldr	x9, [x24, #144]
   2eb1c:	cmp	x9, x8
   2eb20:	b.ls	2eb88 <PyInit__decimal@@Base+0x280d4>  // b.plast
   2eb24:	ldr	x9, [x24, #128]
   2eb28:	cmp	x9, x8
   2eb2c:	b.ls	2eba8 <PyInit__decimal@@Base+0x280f4>  // b.plast
   2eb30:	ldr	x9, [x24, #120]
   2eb34:	cmp	x9, x8
   2eb38:	mov	w8, #0xf                   	// #15
   2eb3c:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eb40:	ldr	x9, [x24, #24]
   2eb44:	cmp	x9, x8
   2eb48:	mov	w8, #0x3                   	// #3
   2eb4c:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eb50:	ldr	x9, [x24, #104]
   2eb54:	cmp	x9, x8
   2eb58:	b.ls	2ee44 <PyInit__decimal@@Base+0x28390>  // b.plast
   2eb5c:	ldr	x9, [x24, #96]
   2eb60:	cmp	x9, x8
   2eb64:	mov	w8, #0xc                   	// #12
   2eb68:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eb6c:	ldr	x9, [x24, #64]
   2eb70:	cmp	x9, x8
   2eb74:	b.ls	2ee4c <PyInit__decimal@@Base+0x28398>  // b.plast
   2eb78:	ldr	x9, [x24, #56]
   2eb7c:	cmp	x9, x8
   2eb80:	mov	w8, #0x7                   	// #7
   2eb84:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eb88:	ldr	x9, [x24, #152]
   2eb8c:	cmp	x9, x8
   2eb90:	mov	w8, #0x13                  	// #19
   2eb94:	b	2ebb4 <PyInit__decimal@@Base+0x28100>
   2eb98:	mov	w10, #0xe                   	// #14
   2eb9c:	b	2e9e0 <PyInit__decimal@@Base+0x27f2c>
   2eba0:	mov	w10, #0x9                   	// #9
   2eba4:	b	2e9e0 <PyInit__decimal@@Base+0x27f2c>
   2eba8:	ldr	x9, [x24, #136]
   2ebac:	cmp	x9, x8
   2ebb0:	mov	w8, #0x11                  	// #17
   2ebb4:	cinc	x8, x8, ls  // ls = plast
   2ebb8:	str	x8, [sp, #72]
   2ebbc:	sub	x8, x29, #0x48
   2ebc0:	adrp	x21, 56000 <PyInit__decimal@@Base+0x4f54c>
   2ebc4:	sub	x26, x22, #0x1
   2ebc8:	mov	w28, #0x13                  	// #19
   2ebcc:	add	x21, x21, #0xc88
   2ebd0:	mov	w27, #0xa                   	// #10
   2ebd4:	add	x22, x8, #0x1c
   2ebd8:	b	2ec38 <PyInit__decimal@@Base+0x28184>
   2ebdc:	ldr	x10, [x24, #152]
   2ebe0:	cmp	x10, x9
   2ebe4:	cinc	x9, x28, ls  // ls = plast
   2ebe8:	madd	x8, x8, x28, x9
   2ebec:	sub	x8, x8, #0x13
   2ebf0:	add	x1, sp, #0x268
   2ebf4:	mov	x3, sp
   2ebf8:	sub	x4, x29, #0x48
   2ebfc:	mov	w0, #0x1                   	// #1
   2ec00:	mov	x2, x19
   2ec04:	mov	x5, x22
   2ec08:	str	x8, [sp, #16]
   2ec0c:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   2ec10:	add	x0, sp, #0x38
   2ec14:	add	x1, sp, #0x38
   2ec18:	add	x2, sp, #0x268
   2ec1c:	sub	x4, x29, #0x48
   2ec20:	mov	x3, x21
   2ec24:	mov	x5, x22
   2ec28:	bl	2ee54 <PyInit__decimal@@Base+0x283a0>
   2ec2c:	sub	x26, x26, #0x1
   2ec30:	cmp	x26, #0x0
   2ec34:	b.le	2ed6c <PyInit__decimal@@Base+0x282b8>
   2ec38:	ldr	x9, [sp, #40]
   2ec3c:	str	x26, [x9]
   2ec40:	ldr	x8, [sp, #24]
   2ec44:	add	x9, x9, x8, lsl #3
   2ec48:	ldur	x9, [x9, #-8]
   2ec4c:	cmp	x25, x9
   2ec50:	b.ls	2ec80 <PyInit__decimal@@Base+0x281cc>  // b.plast
   2ec54:	ldr	x10, [x24, #32]
   2ec58:	cmp	x10, x9
   2ec5c:	b.ls	2eca8 <PyInit__decimal@@Base+0x281f4>  // b.plast
   2ec60:	ldr	x10, [x24, #16]
   2ec64:	cmp	x10, x9
   2ec68:	b.ls	2ecf4 <PyInit__decimal@@Base+0x28240>  // b.plast
   2ec6c:	ldr	x10, [x24, #8]
   2ec70:	cmp	x10, x9
   2ec74:	mov	w9, #0x1                   	// #1
   2ec78:	cinc	x9, x9, ls  // ls = plast
   2ec7c:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ec80:	ldr	x10, [x24, #112]
   2ec84:	cmp	x10, x9
   2ec88:	b.ls	2ecc8 <PyInit__decimal@@Base+0x28214>  // b.plast
   2ec8c:	ldr	x10, [x24, #88]
   2ec90:	cmp	x10, x9
   2ec94:	b.ls	2ed08 <PyInit__decimal@@Base+0x28254>  // b.plast
   2ec98:	ldr	x10, [x24, #80]
   2ec9c:	cmp	x10, x9
   2eca0:	cinc	x9, x27, ls  // ls = plast
   2eca4:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2eca8:	ldr	x10, [x24, #48]
   2ecac:	cmp	x10, x9
   2ecb0:	b.ls	2ed28 <PyInit__decimal@@Base+0x28274>  // b.plast
   2ecb4:	ldr	x10, [x24, #40]
   2ecb8:	cmp	x10, x9
   2ecbc:	mov	w9, #0x5                   	// #5
   2ecc0:	cinc	x9, x9, ls  // ls = plast
   2ecc4:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ecc8:	ldr	x10, [x24, #144]
   2eccc:	cmp	x10, x9
   2ecd0:	b.ls	2ebdc <PyInit__decimal@@Base+0x28128>  // b.plast
   2ecd4:	ldr	x10, [x24, #128]
   2ecd8:	cmp	x10, x9
   2ecdc:	b.ls	2ed48 <PyInit__decimal@@Base+0x28294>  // b.plast
   2ece0:	ldr	x10, [x24, #120]
   2ece4:	cmp	x10, x9
   2ece8:	mov	w9, #0xf                   	// #15
   2ecec:	cinc	x9, x9, ls  // ls = plast
   2ecf0:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ecf4:	ldr	x10, [x24, #24]
   2ecf8:	cmp	x10, x9
   2ecfc:	mov	w9, #0x3                   	// #3
   2ed00:	cinc	x9, x9, ls  // ls = plast
   2ed04:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ed08:	ldr	x10, [x24, #104]
   2ed0c:	cmp	x10, x9
   2ed10:	b.ls	2ed5c <PyInit__decimal@@Base+0x282a8>  // b.plast
   2ed14:	ldr	x10, [x24, #96]
   2ed18:	cmp	x10, x9
   2ed1c:	mov	w9, #0xc                   	// #12
   2ed20:	cinc	x9, x9, ls  // ls = plast
   2ed24:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ed28:	ldr	x10, [x24, #64]
   2ed2c:	cmp	x10, x9
   2ed30:	b.ls	2ed64 <PyInit__decimal@@Base+0x282b0>  // b.plast
   2ed34:	ldr	x10, [x24, #56]
   2ed38:	cmp	x10, x9
   2ed3c:	mov	w9, #0x7                   	// #7
   2ed40:	cinc	x9, x9, ls  // ls = plast
   2ed44:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ed48:	ldr	x10, [x24, #136]
   2ed4c:	cmp	x10, x9
   2ed50:	mov	w9, #0x11                  	// #17
   2ed54:	cinc	x9, x9, ls  // ls = plast
   2ed58:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ed5c:	mov	w9, #0xe                   	// #14
   2ed60:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ed64:	mov	w9, #0x9                   	// #9
   2ed68:	b	2ebe8 <PyInit__decimal@@Base+0x28134>
   2ed6c:	ldr	x2, [x24, x23, lsl #3]
   2ed70:	add	x1, sp, #0x38
   2ed74:	sub	x4, x29, #0x48
   2ed78:	mov	x0, x19
   2ed7c:	mov	w3, wzr
   2ed80:	mov	x5, x20
   2ed84:	bl	3c240 <PyInit__decimal@@Base+0x3578c>
   2ed88:	ldrb	w8, [sp, #616]
   2ed8c:	cmp	w8, #0x1f
   2ed90:	b.ls	2edf4 <PyInit__decimal@@Base+0x28340>  // b.plast
   2ed94:	tbz	w8, #4, 2ee0c <PyInit__decimal@@Base+0x28358>
   2ed98:	ldrb	w8, [sp, #56]
   2ed9c:	cmp	w8, #0x1f
   2eda0:	b.ls	2ee28 <PyInit__decimal@@Base+0x28374>  // b.plast
   2eda4:	tbnz	w8, #4, 2edb8 <PyInit__decimal@@Base+0x28304>
   2eda8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2edac:	ldr	x8, [x8, #1376]
   2edb0:	add	x0, sp, #0x38
   2edb4:	blr	x8
   2edb8:	ldur	w8, [x29, #-44]
   2edbc:	ldr	w9, [x20]
   2edc0:	and	w8, w8, #0x3fe
   2edc4:	orr	w8, w8, w9
   2edc8:	mov	w9, #0x1040                	// #4160
   2edcc:	orr	w8, w8, w9
   2edd0:	str	w8, [x20]
   2edd4:	add	sp, sp, #0x510
   2edd8:	ldp	x20, x19, [sp, #80]
   2eddc:	ldp	x22, x21, [sp, #64]
   2ede0:	ldp	x24, x23, [sp, #48]
   2ede4:	ldp	x26, x25, [sp, #32]
   2ede8:	ldp	x28, x27, [sp, #16]
   2edec:	ldp	x29, x30, [sp], #96
   2edf0:	ret
   2edf4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2edf8:	ldr	x8, [x8, #1376]
   2edfc:	ldr	x0, [sp, #656]
   2ee00:	blr	x8
   2ee04:	ldrb	w8, [sp, #616]
   2ee08:	tbnz	w8, #4, 2ed98 <PyInit__decimal@@Base+0x282e4>
   2ee0c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2ee10:	ldr	x8, [x8, #1376]
   2ee14:	add	x0, sp, #0x268
   2ee18:	blr	x8
   2ee1c:	ldrb	w8, [sp, #56]
   2ee20:	cmp	w8, #0x1f
   2ee24:	b.hi	2eda4 <PyInit__decimal@@Base+0x282f0>  // b.pmore
   2ee28:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2ee2c:	ldr	x8, [x8, #1376]
   2ee30:	ldr	x0, [sp, #96]
   2ee34:	blr	x8
   2ee38:	ldrb	w8, [sp, #56]
   2ee3c:	tbz	w8, #4, 2eda8 <PyInit__decimal@@Base+0x282f4>
   2ee40:	b	2edb8 <PyInit__decimal@@Base+0x28304>
   2ee44:	mov	w8, #0xe                   	// #14
   2ee48:	b	2ebb8 <PyInit__decimal@@Base+0x28104>
   2ee4c:	mov	w8, #0x9                   	// #9
   2ee50:	b	2ebb8 <PyInit__decimal@@Base+0x28104>
   2ee54:	stp	x29, x30, [sp, #-80]!
   2ee58:	str	x25, [sp, #16]
   2ee5c:	stp	x24, x23, [sp, #32]
   2ee60:	stp	x22, x21, [sp, #48]
   2ee64:	stp	x20, x19, [sp, #64]
   2ee68:	mov	x29, sp
   2ee6c:	mov	x19, x5
   2ee70:	mov	x21, x4
   2ee74:	mov	x24, x2
   2ee78:	mov	x25, x1
   2ee7c:	mov	x20, x0
   2ee80:	cmp	x0, x3
   2ee84:	str	wzr, [x29, #24]
   2ee88:	b.eq	2ee98 <PyInit__decimal@@Base+0x283e4>  // b.none
   2ee8c:	mov	x22, x3
   2ee90:	mov	x23, xzr
   2ee94:	b	2eee0 <PyInit__decimal@@Base+0x2842c>
   2ee98:	ldr	x0, [x20, #24]
   2ee9c:	bl	21f6c <PyInit__decimal@@Base+0x1b4b8>
   2eea0:	cbz	x0, 2ef78 <PyInit__decimal@@Base+0x284c4>
   2eea4:	ldr	x8, [x20, #24]
   2eea8:	mov	x22, x0
   2eeac:	ldr	x0, [x0, #40]
   2eeb0:	ldr	x1, [x20, #40]
   2eeb4:	lsl	x2, x8, #3
   2eeb8:	bl	63c0 <memcpy@plt>
   2eebc:	ldrb	w8, [x20]
   2eec0:	ldrb	w9, [x22]
   2eec4:	mov	x23, x22
   2eec8:	bfxil	w9, w8, #0, #4
   2eecc:	strb	w9, [x22]
   2eed0:	ldur	q0, [x20, #8]
   2eed4:	stur	q0, [x22, #8]
   2eed8:	ldr	x8, [x20, #24]
   2eedc:	str	x8, [x22, #24]
   2eee0:	add	x4, x29, #0x18
   2eee4:	mov	x0, x20
   2eee8:	mov	x1, x25
   2eeec:	mov	x2, x24
   2eef0:	mov	x3, x21
   2eef4:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   2eef8:	ldrb	w8, [x29, #25]
   2eefc:	tbnz	w8, #0, 2ef18 <PyInit__decimal@@Base+0x28464>
   2ef00:	add	x4, x29, #0x18
   2ef04:	mov	x0, x20
   2ef08:	mov	x1, x20
   2ef0c:	mov	x2, x22
   2ef10:	mov	x3, x21
   2ef14:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2ef18:	cbz	x23, 2ef50 <PyInit__decimal@@Base+0x2849c>
   2ef1c:	ldrb	w8, [x23]
   2ef20:	cmp	w8, #0x1f
   2ef24:	b.hi	2ef3c <PyInit__decimal@@Base+0x28488>  // b.pmore
   2ef28:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2ef2c:	ldr	x8, [x8, #1376]
   2ef30:	ldr	x0, [x23, #40]
   2ef34:	blr	x8
   2ef38:	ldrb	w8, [x23]
   2ef3c:	tbnz	w8, #4, 2ef50 <PyInit__decimal@@Base+0x2849c>
   2ef40:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2ef44:	ldr	x8, [x8, #1376]
   2ef48:	mov	x0, x23
   2ef4c:	blr	x8
   2ef50:	ldr	w8, [x29, #24]
   2ef54:	ldr	w9, [x19]
   2ef58:	ldr	x25, [sp, #16]
   2ef5c:	orr	w8, w9, w8
   2ef60:	str	w8, [x19]
   2ef64:	ldp	x20, x19, [sp, #64]
   2ef68:	ldp	x22, x21, [sp, #48]
   2ef6c:	ldp	x24, x23, [sp, #32]
   2ef70:	ldp	x29, x30, [sp], #80
   2ef74:	ret
   2ef78:	ldrb	w8, [x20]
   2ef7c:	tbnz	w8, #5, 2efc0 <PyInit__decimal@@Base+0x2850c>
   2ef80:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2ef84:	ldr	x9, [x20, #32]
   2ef88:	ldr	x1, [x21, #1344]
   2ef8c:	cmp	x9, x1
   2ef90:	b.le	2efc0 <PyInit__decimal@@Base+0x2850c>
   2ef94:	strb	wzr, [x29, #28]
   2ef98:	ldr	x0, [x20, #40]
   2ef9c:	add	x3, x29, #0x1c
   2efa0:	mov	w2, #0x8                   	// #8
   2efa4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2efa8:	str	x0, [x20, #40]
   2efac:	ldrb	w8, [x29, #28]
   2efb0:	cbnz	w8, 2efbc <PyInit__decimal@@Base+0x28508>
   2efb4:	ldr	x8, [x21, #1344]
   2efb8:	str	x8, [x20, #32]
   2efbc:	ldrb	w8, [x20]
   2efc0:	and	w8, w8, #0xf0
   2efc4:	orr	w8, w8, #0x4
   2efc8:	strb	w8, [x20]
   2efcc:	mov	w8, #0x200                 	// #512
   2efd0:	stp	xzr, xzr, [x20, #16]
   2efd4:	str	xzr, [x20, #8]
   2efd8:	b	2ef54 <PyInit__decimal@@Base+0x284a0>
   2efdc:	stp	x29, x30, [sp, #-96]!
   2efe0:	stp	x28, x27, [sp, #16]
   2efe4:	stp	x26, x25, [sp, #32]
   2efe8:	stp	x24, x23, [sp, #48]
   2efec:	stp	x22, x21, [sp, #64]
   2eff0:	stp	x20, x19, [sp, #80]
   2eff4:	mov	x29, sp
   2eff8:	sub	sp, sp, #0x220
   2effc:	ldrb	w8, [x1]
   2f000:	mov	x20, x4
   2f004:	mov	x21, x2
   2f008:	mov	x22, x1
   2f00c:	tst	w8, #0xe
   2f010:	mov	x19, x0
   2f014:	b.ne	2f024 <PyInit__decimal@@Base+0x28570>  // b.any
   2f018:	ldrb	w8, [x21]
   2f01c:	tst	w8, #0xe
   2f020:	b.eq	2f0f4 <PyInit__decimal@@Base+0x28640>  // b.none
   2f024:	mov	x0, x19
   2f028:	mov	x1, x22
   2f02c:	mov	x2, x21
   2f030:	mov	x4, x20
   2f034:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   2f038:	cbnz	w0, 2f7dc <PyInit__decimal@@Base+0x28d28>
   2f03c:	ldrb	w8, [x22]
   2f040:	tbnz	w8, #1, 2f068 <PyInit__decimal@@Base+0x285b4>
   2f044:	tst	w8, #0xe
   2f048:	b.ne	2f060 <PyInit__decimal@@Base+0x285ac>  // b.any
   2f04c:	ldr	x9, [x22, #40]
   2f050:	ldr	x10, [x22, #24]
   2f054:	add	x9, x9, x10, lsl #3
   2f058:	ldur	x9, [x9, #-8]
   2f05c:	cbz	x9, 2f424 <PyInit__decimal@@Base+0x28970>
   2f060:	ldrb	w10, [x21]
   2f064:	b	2f088 <PyInit__decimal@@Base+0x285d4>
   2f068:	ldrb	w10, [x21]
   2f06c:	tst	w10, #0xe
   2f070:	b.ne	2f088 <PyInit__decimal@@Base+0x285d4>  // b.any
   2f074:	ldr	x9, [x21, #40]
   2f078:	ldr	x11, [x21, #24]
   2f07c:	add	x9, x9, x11, lsl #3
   2f080:	ldur	x9, [x9, #-8]
   2f084:	cbz	x9, 2f424 <PyInit__decimal@@Base+0x28970>
   2f088:	ldrb	w9, [x19]
   2f08c:	eor	w8, w10, w8
   2f090:	and	w20, w8, #0x1
   2f094:	tbnz	w9, #5, 2f0d8 <PyInit__decimal@@Base+0x28624>
   2f098:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2f09c:	ldr	x8, [x19, #32]
   2f0a0:	ldr	x1, [x21, #1344]
   2f0a4:	cmp	x8, x1
   2f0a8:	b.le	2f0d8 <PyInit__decimal@@Base+0x28624>
   2f0ac:	strb	wzr, [sp, #24]
   2f0b0:	ldr	x0, [x19, #40]
   2f0b4:	add	x3, sp, #0x18
   2f0b8:	mov	w2, #0x8                   	// #8
   2f0bc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2f0c0:	str	x0, [x19, #40]
   2f0c4:	ldrb	w8, [sp, #24]
   2f0c8:	cbnz	w8, 2f0d4 <PyInit__decimal@@Base+0x28620>
   2f0cc:	ldr	x8, [x21, #1344]
   2f0d0:	str	x8, [x19, #32]
   2f0d4:	ldrb	w9, [x19]
   2f0d8:	and	w8, w9, #0xf0
   2f0dc:	orr	w8, w20, w8
   2f0e0:	orr	w8, w8, #0x2
   2f0e4:	stp	xzr, xzr, [x19, #16]
   2f0e8:	strb	w8, [x19]
   2f0ec:	str	xzr, [x19, #8]
   2f0f0:	b	2f7dc <PyInit__decimal@@Base+0x28d28>
   2f0f4:	ldr	x8, [x21, #24]
   2f0f8:	ldr	x9, [x22, #24]
   2f0fc:	cmp	x8, x9
   2f100:	csel	x27, x21, x22, gt
   2f104:	csel	x28, x22, x21, gt
   2f108:	ldr	x26, [x27, #24]
   2f10c:	ldr	x25, [x28, #24]
   2f110:	cmp	x26, #0x1
   2f114:	add	x23, x25, x26
   2f118:	str	x23, [sp, #16]
   2f11c:	b.ne	2f22c <PyInit__decimal@@Base+0x28778>  // b.any
   2f120:	ldr	x8, [x27, #40]
   2f124:	ldr	x9, [x28, #40]
   2f128:	mov	x10, #0x89e80000            	// #2313682944
   2f12c:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   2f130:	ldr	x8, [x8]
   2f134:	ldr	x9, [x9]
   2f138:	movk	x10, #0x2304, lsl #32
   2f13c:	ldr	x11, [x11, #3392]
   2f140:	movk	x10, #0x8ac7, lsl #48
   2f144:	umulh	x12, x9, x8
   2f148:	mul	x8, x9, x8
   2f14c:	asr	x9, x8, #63
   2f150:	sub	x13, x12, x9
   2f154:	and	x9, x9, x10
   2f158:	add	x9, x9, x8
   2f15c:	umulh	x14, x13, x11
   2f160:	mul	x11, x13, x11
   2f164:	mvn	x9, x9
   2f168:	add	x14, x14, x12
   2f16c:	cmp	x9, x11
   2f170:	cinc	x9, x14, cc  // cc = lo, ul, last
   2f174:	mvn	x9, x9
   2f178:	mov	x13, #0x76180000            	// #1981284352
   2f17c:	umulh	x11, x9, x10
   2f180:	mul	x14, x9, x10
   2f184:	movk	x13, #0xdcfb, lsl #32
   2f188:	adds	x8, x14, x8
   2f18c:	add	x11, x12, x11
   2f190:	ldr	x24, [x19, #40]
   2f194:	movk	x13, #0x7538, lsl #48
   2f198:	cinc	x11, x11, cs  // cs = hs, nlast
   2f19c:	add	x11, x11, x13
   2f1a0:	and	x10, x11, x10
   2f1a4:	sub	x9, x11, x9
   2f1a8:	add	x8, x10, x8
   2f1ac:	stp	x8, x9, [x24]
   2f1b0:	ldrb	w9, [x22]
   2f1b4:	ldrb	w10, [x21]
   2f1b8:	ldrb	w8, [x19]
   2f1bc:	eor	w9, w10, w9
   2f1c0:	and	w10, w8, #0xf0
   2f1c4:	bfxil	w10, w9, #0, #1
   2f1c8:	strb	w10, [x19]
   2f1cc:	ldr	x9, [x27, #8]
   2f1d0:	ldr	x10, [x28, #8]
   2f1d4:	add	x9, x10, x9
   2f1d8:	sub	x10, x24, #0x8
   2f1dc:	str	x9, [x19, #8]
   2f1e0:	mov	x9, x23
   2f1e4:	cmp	x23, #0x2
   2f1e8:	b.lt	2f1f8 <PyInit__decimal@@Base+0x28744>  // b.tstop
   2f1ec:	ldr	x11, [x10, x9, lsl #3]
   2f1f0:	sub	x23, x9, #0x1
   2f1f4:	cbz	x11, 2f1e0 <PyInit__decimal@@Base+0x2872c>
   2f1f8:	str	x9, [x19, #24]
   2f1fc:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   2f200:	ldr	x11, [x10, #1344]
   2f204:	ldr	x10, [x19, #32]
   2f208:	cmp	x11, x9
   2f20c:	csel	x1, x9, x11, lt  // lt = tstop
   2f210:	cmp	x1, x10
   2f214:	b.eq	2f4e8 <PyInit__decimal@@Base+0x28a34>  // b.none
   2f218:	tbnz	w8, #5, 2f4d4 <PyInit__decimal@@Base+0x28a20>
   2f21c:	mov	x0, x19
   2f220:	mov	x2, x20
   2f224:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2f228:	b	2f4e8 <PyInit__decimal@@Base+0x28a34>
   2f22c:	cmp	x23, #0x40
   2f230:	b.hi	2f490 <PyInit__decimal@@Base+0x289dc>  // b.pmore
   2f234:	cmp	x26, #0x2
   2f238:	b.ne	2f5a0 <PyInit__decimal@@Base+0x28aec>  // b.any
   2f23c:	ldr	x11, [x27, #40]
   2f240:	ldr	x12, [x28, #40]
   2f244:	mov	x8, #0x89e80000            	// #2313682944
   2f248:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   2f24c:	ldr	x13, [x11]
   2f250:	ldr	x14, [x12]
   2f254:	movk	x8, #0x2304, lsl #32
   2f258:	ldr	x10, [x10, #3392]
   2f25c:	movk	x8, #0x8ac7, lsl #48
   2f260:	umulh	x15, x14, x13
   2f264:	mul	x13, x14, x13
   2f268:	asr	x14, x13, #63
   2f26c:	and	x16, x14, x8
   2f270:	sub	x14, x15, x14
   2f274:	add	x16, x16, x13
   2f278:	umulh	x17, x14, x10
   2f27c:	mul	x14, x14, x10
   2f280:	mvn	x16, x16
   2f284:	add	x17, x17, x15
   2f288:	cmp	x16, x14
   2f28c:	cinc	x14, x17, cc  // cc = lo, ul, last
   2f290:	mvn	x14, x14
   2f294:	mov	x9, #0x76180000            	// #1981284352
   2f298:	umulh	x16, x14, x8
   2f29c:	mul	x17, x14, x8
   2f2a0:	movk	x9, #0xdcfb, lsl #32
   2f2a4:	adds	x13, x17, x13
   2f2a8:	add	x15, x15, x16
   2f2ac:	movk	x9, #0x7538, lsl #48
   2f2b0:	cinc	x15, x15, cs  // cs = hs, nlast
   2f2b4:	add	x15, x15, x9
   2f2b8:	sub	x14, x15, x14
   2f2bc:	and	x15, x15, x8
   2f2c0:	add	x13, x15, x13
   2f2c4:	stp	x13, x14, [sp, #24]
   2f2c8:	ldr	x13, [x11, #8]
   2f2cc:	ldr	x15, [x12]
   2f2d0:	umulh	x16, x15, x13
   2f2d4:	mul	x13, x15, x13
   2f2d8:	adds	x13, x14, x13
   2f2dc:	asr	x15, x13, #63
   2f2e0:	cinc	x14, x16, cs  // cs = hs, nlast
   2f2e4:	and	x16, x15, x8
   2f2e8:	sub	x15, x14, x15
   2f2ec:	add	x16, x16, x13
   2f2f0:	umulh	x17, x15, x10
   2f2f4:	mul	x15, x15, x10
   2f2f8:	mvn	x16, x16
   2f2fc:	add	x17, x14, x17
   2f300:	cmp	x16, x15
   2f304:	cinc	x15, x17, cc  // cc = lo, ul, last
   2f308:	mvn	x15, x15
   2f30c:	umulh	x16, x15, x8
   2f310:	mul	x17, x15, x8
   2f314:	adds	x17, x13, x17
   2f318:	add	x13, x14, x16
   2f31c:	cinc	x13, x13, cs  // cs = hs, nlast
   2f320:	add	x14, x13, x9
   2f324:	sub	x13, x14, x15
   2f328:	and	x14, x14, x8
   2f32c:	cmp	x25, #0x1
   2f330:	add	x14, x14, x17
   2f334:	stp	x14, x13, [sp, #32]
   2f338:	b.eq	2f6ec <PyInit__decimal@@Base+0x28c38>  // b.none
   2f33c:	ldr	x15, [x11]
   2f340:	ldr	x16, [x12, #8]
   2f344:	umulh	x17, x16, x15
   2f348:	mul	x15, x16, x15
   2f34c:	adds	x14, x14, x15
   2f350:	asr	x16, x14, #63
   2f354:	cinc	x15, x17, cs  // cs = hs, nlast
   2f358:	and	x17, x16, x8
   2f35c:	sub	x16, x15, x16
   2f360:	add	x17, x17, x14
   2f364:	umulh	x18, x16, x10
   2f368:	mul	x16, x16, x10
   2f36c:	mvn	x17, x17
   2f370:	add	x18, x15, x18
   2f374:	cmp	x17, x16
   2f378:	cinc	x16, x18, cc  // cc = lo, ul, last
   2f37c:	mvn	x16, x16
   2f380:	add	x15, x15, x9
   2f384:	umulh	x17, x16, x8
   2f388:	mul	x18, x16, x8
   2f38c:	adds	x14, x14, x18
   2f390:	add	x15, x15, x17
   2f394:	cinc	x15, x15, cs  // cs = hs, nlast
   2f398:	sub	x16, x15, x16
   2f39c:	and	x15, x15, x8
   2f3a0:	add	x14, x15, x14
   2f3a4:	str	x16, [sp, #48]
   2f3a8:	str	x14, [sp, #32]
   2f3ac:	ldr	x11, [x11, #8]
   2f3b0:	ldr	x12, [x12, #8]
   2f3b4:	umulh	x14, x12, x11
   2f3b8:	mul	x11, x12, x11
   2f3bc:	adds	x11, x13, x11
   2f3c0:	cinc	x12, x14, cs  // cs = hs, nlast
   2f3c4:	adds	x11, x16, x11
   2f3c8:	asr	x13, x11, #63
   2f3cc:	cinc	x12, x12, cs  // cs = hs, nlast
   2f3d0:	and	x14, x13, x8
   2f3d4:	sub	x13, x12, x13
   2f3d8:	add	x14, x14, x11
   2f3dc:	umulh	x15, x13, x10
   2f3e0:	mul	x10, x13, x10
   2f3e4:	mvn	x13, x14
   2f3e8:	add	x9, x12, x9
   2f3ec:	add	x12, x12, x15
   2f3f0:	cmp	x13, x10
   2f3f4:	cinc	x10, x12, cc  // cc = lo, ul, last
   2f3f8:	mvn	x10, x10
   2f3fc:	umulh	x12, x10, x8
   2f400:	mul	x13, x10, x8
   2f404:	adds	x11, x11, x13
   2f408:	add	x9, x9, x12
   2f40c:	cinc	x9, x9, cs  // cs = hs, nlast
   2f410:	and	x8, x9, x8
   2f414:	sub	x10, x9, x10
   2f418:	add	x8, x8, x11
   2f41c:	stp	x8, x10, [sp, #40]
   2f420:	b	2f6ec <PyInit__decimal@@Base+0x28c38>
   2f424:	ldrb	w8, [x19]
   2f428:	tbnz	w8, #5, 2f46c <PyInit__decimal@@Base+0x289b8>
   2f42c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2f430:	ldr	x9, [x19, #32]
   2f434:	ldr	x1, [x21, #1344]
   2f438:	cmp	x9, x1
   2f43c:	b.le	2f46c <PyInit__decimal@@Base+0x289b8>
   2f440:	strb	wzr, [sp, #24]
   2f444:	ldr	x0, [x19, #40]
   2f448:	add	x3, sp, #0x18
   2f44c:	mov	w2, #0x8                   	// #8
   2f450:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2f454:	str	x0, [x19, #40]
   2f458:	ldrb	w8, [sp, #24]
   2f45c:	cbnz	w8, 2f468 <PyInit__decimal@@Base+0x289b4>
   2f460:	ldr	x8, [x21, #1344]
   2f464:	str	x8, [x19, #32]
   2f468:	ldrb	w8, [x19]
   2f46c:	and	w8, w8, #0xf0
   2f470:	orr	w8, w8, #0x4
   2f474:	stp	xzr, xzr, [x19, #16]
   2f478:	strb	w8, [x19]
   2f47c:	str	xzr, [x19, #8]
   2f480:	ldr	w8, [x20]
   2f484:	orr	w8, w8, #0x100
   2f488:	str	w8, [x20]
   2f48c:	b	2f7dc <PyInit__decimal@@Base+0x28d28>
   2f490:	cmp	x25, #0x100
   2f494:	b.gt	2f5dc <PyInit__decimal@@Base+0x28b28>
   2f498:	mov	w1, #0x8                   	// #8
   2f49c:	mov	x0, x23
   2f4a0:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   2f4a4:	cbz	x0, 2f980 <PyInit__decimal@@Base+0x28ecc>
   2f4a8:	ldr	x3, [x28, #24]
   2f4ac:	mov	x24, x0
   2f4b0:	cmp	x3, #0x1
   2f4b4:	b.ne	2f80c <PyInit__decimal@@Base+0x28d58>  // b.any
   2f4b8:	ldr	x8, [x28, #40]
   2f4bc:	ldr	x1, [x27, #40]
   2f4c0:	ldr	x2, [x27, #24]
   2f4c4:	mov	x0, x24
   2f4c8:	ldr	x3, [x8]
   2f4cc:	bl	1c63c <PyInit__decimal@@Base+0x15b88>
   2f4d0:	b	2f948 <PyInit__decimal@@Base+0x28e94>
   2f4d4:	cmp	x1, x10
   2f4d8:	b.le	2f4e8 <PyInit__decimal@@Base+0x28a34>
   2f4dc:	mov	x0, x19
   2f4e0:	mov	x2, x20
   2f4e4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2f4e8:	ldr	x9, [x19, #40]
   2f4ec:	ldr	x8, [x19, #24]
   2f4f0:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   2f4f4:	add	x10, x10, #0xca0
   2f4f8:	ldr	x11, [x10, #72]
   2f4fc:	add	x9, x9, x8, lsl #3
   2f500:	ldur	x9, [x9, #-8]
   2f504:	cmp	x11, x9
   2f508:	b.ls	2f534 <PyInit__decimal@@Base+0x28a80>  // b.plast
   2f50c:	ldr	x11, [x10, #32]
   2f510:	cmp	x11, x9
   2f514:	b.ls	2f55c <PyInit__decimal@@Base+0x28aa8>  // b.plast
   2f518:	ldr	x11, [x10, #16]
   2f51c:	cmp	x11, x9
   2f520:	b.ls	2f67c <PyInit__decimal@@Base+0x28bc8>  // b.plast
   2f524:	ldr	x10, [x10, #8]
   2f528:	cmp	x10, x9
   2f52c:	mov	w9, #0x1                   	// #1
   2f530:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f534:	ldr	x11, [x10, #112]
   2f538:	cmp	x11, x9
   2f53c:	b.ls	2f578 <PyInit__decimal@@Base+0x28ac4>  // b.plast
   2f540:	ldr	x11, [x10, #88]
   2f544:	cmp	x11, x9
   2f548:	b.ls	2f68c <PyInit__decimal@@Base+0x28bd8>  // b.plast
   2f54c:	ldr	x10, [x10, #80]
   2f550:	cmp	x10, x9
   2f554:	mov	w9, #0xa                   	// #10
   2f558:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f55c:	ldr	x11, [x10, #48]
   2f560:	cmp	x11, x9
   2f564:	b.ls	2f6a8 <PyInit__decimal@@Base+0x28bf4>  // b.plast
   2f568:	ldr	x10, [x10, #40]
   2f56c:	cmp	x10, x9
   2f570:	mov	w9, #0x5                   	// #5
   2f574:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f578:	ldr	x11, [x10, #144]
   2f57c:	cmp	x11, x9
   2f580:	b.ls	2f6c4 <PyInit__decimal@@Base+0x28c10>  // b.plast
   2f584:	ldr	x11, [x10, #128]
   2f588:	cmp	x11, x9
   2f58c:	b.ls	2f7bc <PyInit__decimal@@Base+0x28d08>  // b.plast
   2f590:	ldr	x10, [x10, #120]
   2f594:	cmp	x10, x9
   2f598:	mov	w9, #0xf                   	// #15
   2f59c:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f5a0:	cbz	x23, 2f5b8 <PyInit__decimal@@Base+0x28b04>
   2f5a4:	lsl	x2, x23, #3
   2f5a8:	add	x0, sp, #0x18
   2f5ac:	mov	w1, wzr
   2f5b0:	bl	65b0 <memset@plt>
   2f5b4:	ldr	x25, [x28, #24]
   2f5b8:	cmp	x25, #0x1
   2f5bc:	b.ne	2f6d4 <PyInit__decimal@@Base+0x28c20>  // b.any
   2f5c0:	ldr	x8, [x28, #40]
   2f5c4:	ldr	x1, [x27, #40]
   2f5c8:	ldr	x2, [x27, #24]
   2f5cc:	add	x0, sp, #0x18
   2f5d0:	ldr	x3, [x8]
   2f5d4:	bl	1c63c <PyInit__decimal@@Base+0x15b88>
   2f5d8:	b	2f6ec <PyInit__decimal@@Base+0x28c38>
   2f5dc:	cmp	x23, #0x400
   2f5e0:	b.hi	2f720 <PyInit__decimal@@Base+0x28c6c>  // b.pmore
   2f5e4:	mvn	x8, x25
   2f5e8:	cmp	x26, x8
   2f5ec:	b.hi	2f9ec <PyInit__decimal@@Base+0x28f38>  // b.pmore
   2f5f0:	add	x8, x26, #0x1
   2f5f4:	lsr	x8, x8, #1
   2f5f8:	add	x8, x8, #0x1
   2f5fc:	mov	w9, #0x3                   	// #3
   2f600:	umulh	x9, x8, x9
   2f604:	cmp	xzr, x9
   2f608:	b.ne	2fa20 <PyInit__decimal@@Base+0x28f6c>  // b.any
   2f60c:	ldr	x9, [x27, #40]
   2f610:	add	x8, x8, x8, lsl #1
   2f614:	mov	w1, #0x8                   	// #8
   2f618:	str	x9, [sp]
   2f61c:	ldr	x9, [x28, #40]
   2f620:	str	x9, [sp, #8]
   2f624:	add	x9, x23, #0x1
   2f628:	cmp	x8, x9
   2f62c:	csel	x0, x8, x9, hi  // hi = pmore
   2f630:	str	x0, [sp, #16]
   2f634:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   2f638:	cbz	x0, 2f980 <PyInit__decimal@@Base+0x28ecc>
   2f63c:	mov	x24, x0
   2f640:	mov	w1, #0x10                  	// #16
   2f644:	mov	x0, x26
   2f648:	bl	3c9d4 <PyInit__decimal@@Base+0x35f20>
   2f64c:	cbz	x0, 2f8e4 <PyInit__decimal@@Base+0x28e30>
   2f650:	mov	w1, #0x8                   	// #8
   2f654:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   2f658:	cbz	x0, 2f8d0 <PyInit__decimal@@Base+0x28e1c>
   2f65c:	ldp	x1, x2, [sp]
   2f660:	mov	x23, x0
   2f664:	mov	x0, x24
   2f668:	mov	x3, x23
   2f66c:	mov	x4, x26
   2f670:	mov	x5, x25
   2f674:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   2f678:	b	2f938 <PyInit__decimal@@Base+0x28e84>
   2f67c:	ldr	x10, [x10, #24]
   2f680:	cmp	x10, x9
   2f684:	mov	w9, #0x3                   	// #3
   2f688:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f68c:	ldr	x11, [x10, #104]
   2f690:	cmp	x11, x9
   2f694:	b.ls	2f7fc <PyInit__decimal@@Base+0x28d48>  // b.plast
   2f698:	ldr	x10, [x10, #96]
   2f69c:	cmp	x10, x9
   2f6a0:	mov	w9, #0xc                   	// #12
   2f6a4:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f6a8:	ldr	x11, [x10, #64]
   2f6ac:	cmp	x11, x9
   2f6b0:	b.ls	2f804 <PyInit__decimal@@Base+0x28d50>  // b.plast
   2f6b4:	ldr	x10, [x10, #56]
   2f6b8:	cmp	x10, x9
   2f6bc:	mov	w9, #0x7                   	// #7
   2f6c0:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f6c4:	ldr	x10, [x10, #152]
   2f6c8:	cmp	x10, x9
   2f6cc:	mov	w9, #0x13                  	// #19
   2f6d0:	b	2f7c8 <PyInit__decimal@@Base+0x28d14>
   2f6d4:	ldr	x1, [x28, #40]
   2f6d8:	ldr	x2, [x27, #40]
   2f6dc:	ldr	x4, [x27, #24]
   2f6e0:	add	x0, sp, #0x18
   2f6e4:	mov	x3, x25
   2f6e8:	bl	1c6e4 <PyInit__decimal@@Base+0x15c30>
   2f6ec:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2f6f0:	ldr	x9, [x8, #1344]
   2f6f4:	ldr	x8, [x19, #32]
   2f6f8:	cmp	x9, x23
   2f6fc:	csel	x1, x23, x9, lt  // lt = tstop
   2f700:	cmp	x1, x8
   2f704:	b.eq	2f764 <PyInit__decimal@@Base+0x28cb0>  // b.none
   2f708:	ldrb	w9, [x19]
   2f70c:	tbnz	w9, #5, 2f74c <PyInit__decimal@@Base+0x28c98>
   2f710:	mov	x0, x19
   2f714:	mov	x2, x20
   2f718:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2f71c:	b	2f760 <PyInit__decimal@@Base+0x28cac>
   2f720:	ldr	x0, [x27, #40]
   2f724:	ldr	x1, [x28, #40]
   2f728:	mov	x8, #0x300000000           	// #12884901888
   2f72c:	cmp	x23, x8
   2f730:	b.hi	2f858 <PyInit__decimal@@Base+0x28da4>  // b.pmore
   2f734:	add	x4, sp, #0x10
   2f738:	mov	x2, x26
   2f73c:	mov	x3, x25
   2f740:	bl	3c600 <PyInit__decimal@@Base+0x35b4c>
   2f744:	mov	x24, x0
   2f748:	b	2f948 <PyInit__decimal@@Base+0x28e94>
   2f74c:	cmp	x1, x8
   2f750:	b.le	2f764 <PyInit__decimal@@Base+0x28cb0>
   2f754:	mov	x0, x19
   2f758:	mov	x2, x20
   2f75c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2f760:	cbz	w0, 2f7dc <PyInit__decimal@@Base+0x28d28>
   2f764:	ldr	x24, [x19, #40]
   2f768:	cbz	x23, 2f1b0 <PyInit__decimal@@Base+0x286fc>
   2f76c:	cmp	x23, #0x4
   2f770:	b.cc	2f798 <PyInit__decimal@@Base+0x28ce4>  // b.lo, b.ul, b.last
   2f774:	lsl	x8, x23, #3
   2f778:	add	x9, sp, #0x18
   2f77c:	add	x10, x24, x8
   2f780:	add	x11, x9, x8
   2f784:	cmp	x9, x10
   2f788:	cset	w8, cc  // cc = lo, ul, last
   2f78c:	cmp	x24, x11
   2f790:	b.cs	2f824 <PyInit__decimal@@Base+0x28d70>  // b.hs, b.nlast
   2f794:	tbz	w8, #0, 2f824 <PyInit__decimal@@Base+0x28d70>
   2f798:	mov	x8, xzr
   2f79c:	add	x9, sp, #0x18
   2f7a0:	lsl	x10, x8, #3
   2f7a4:	ldr	x11, [x9, x10]
   2f7a8:	add	x8, x8, #0x1
   2f7ac:	cmp	x23, x8
   2f7b0:	str	x11, [x24, x10]
   2f7b4:	b.ne	2f7a0 <PyInit__decimal@@Base+0x28cec>  // b.any
   2f7b8:	b	2f1b0 <PyInit__decimal@@Base+0x286fc>
   2f7bc:	ldr	x10, [x10, #136]
   2f7c0:	cmp	x10, x9
   2f7c4:	mov	w9, #0x11                  	// #17
   2f7c8:	cinc	x9, x9, ls  // ls = plast
   2f7cc:	mov	w10, #0x13                  	// #19
   2f7d0:	madd	x8, x8, x10, x9
   2f7d4:	sub	x8, x8, #0x13
   2f7d8:	str	x8, [x19, #16]
   2f7dc:	add	sp, sp, #0x220
   2f7e0:	ldp	x20, x19, [sp, #80]
   2f7e4:	ldp	x22, x21, [sp, #64]
   2f7e8:	ldp	x24, x23, [sp, #48]
   2f7ec:	ldp	x26, x25, [sp, #32]
   2f7f0:	ldp	x28, x27, [sp, #16]
   2f7f4:	ldp	x29, x30, [sp], #96
   2f7f8:	ret
   2f7fc:	mov	w9, #0xe                   	// #14
   2f800:	b	2f7cc <PyInit__decimal@@Base+0x28d18>
   2f804:	mov	w9, #0x9                   	// #9
   2f808:	b	2f7cc <PyInit__decimal@@Base+0x28d18>
   2f80c:	ldr	x1, [x28, #40]
   2f810:	ldr	x2, [x27, #40]
   2f814:	ldr	x4, [x27, #24]
   2f818:	mov	x0, x24
   2f81c:	bl	1c6e4 <PyInit__decimal@@Base+0x15c30>
   2f820:	b	2f948 <PyInit__decimal@@Base+0x28e94>
   2f824:	and	x8, x23, #0xfffffffffffffffc
   2f828:	mov	x10, xzr
   2f82c:	mov	x11, x8
   2f830:	add	x12, x9, x10
   2f834:	ldp	q0, q1, [x12]
   2f838:	add	x12, x24, x10
   2f83c:	subs	x11, x11, #0x4
   2f840:	add	x10, x10, #0x20
   2f844:	stp	q0, q1, [x12]
   2f848:	b.ne	2f830 <PyInit__decimal@@Base+0x28d7c>  // b.any
   2f84c:	cmp	x23, x8
   2f850:	b.eq	2f1b0 <PyInit__decimal@@Base+0x286fc>  // b.none
   2f854:	b	2f79c <PyInit__decimal@@Base+0x28ce8>
   2f858:	mvn	x8, x25
   2f85c:	cmp	x26, x8
   2f860:	b.hi	2f9ec <PyInit__decimal@@Base+0x28f38>  // b.pmore
   2f864:	cmn	x23, #0x1
   2f868:	b.eq	2f9ec <PyInit__decimal@@Base+0x28f38>  // b.none
   2f86c:	add	x8, x26, #0x1
   2f870:	lsr	x8, x8, #1
   2f874:	add	x8, x8, #0x1
   2f878:	mov	w9, #0x3                   	// #3
   2f87c:	umulh	x9, x8, x9
   2f880:	cmp	xzr, x9
   2f884:	stp	x1, x0, [sp]
   2f888:	b.ne	2fa20 <PyInit__decimal@@Base+0x28f6c>  // b.any
   2f88c:	add	x9, x23, #0x1
   2f890:	add	x8, x8, x8, lsl #1
   2f894:	cmp	x8, x9
   2f898:	csel	x0, x8, x9, hi  // hi = pmore
   2f89c:	mov	w1, #0x8                   	// #8
   2f8a0:	str	x0, [sp, #16]
   2f8a4:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   2f8a8:	cbz	x0, 2f980 <PyInit__decimal@@Base+0x28ecc>
   2f8ac:	mov	x24, x0
   2f8b0:	mov	x1, #0x180000000           	// #6442450944
   2f8b4:	mov	x0, x26
   2f8b8:	bl	3c9d4 <PyInit__decimal@@Base+0x35f20>
   2f8bc:	cbz	x0, 2f900 <PyInit__decimal@@Base+0x28e4c>
   2f8c0:	mov	w1, #0x8                   	// #8
   2f8c4:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   2f8c8:	mov	x23, x0
   2f8cc:	cbnz	x0, 2f904 <PyInit__decimal@@Base+0x28e50>
   2f8d0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2f8d4:	ldr	x8, [x8, #1376]
   2f8d8:	mov	x0, x24
   2f8dc:	blr	x8
   2f8e0:	b	2f980 <PyInit__decimal@@Base+0x28ecc>
   2f8e4:	ldp	x1, x2, [sp]
   2f8e8:	mov	x0, x24
   2f8ec:	mov	x3, xzr
   2f8f0:	mov	x4, x26
   2f8f4:	mov	x5, x25
   2f8f8:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   2f8fc:	b	2f948 <PyInit__decimal@@Base+0x28e94>
   2f900:	mov	x23, xzr
   2f904:	ldp	x2, x1, [sp]
   2f908:	mov	x0, x24
   2f90c:	mov	x3, x23
   2f910:	mov	x4, x26
   2f914:	mov	x5, x25
   2f918:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   2f91c:	cbnz	w0, 2f934 <PyInit__decimal@@Base+0x28e80>
   2f920:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2f924:	ldr	x8, [x8, #1376]
   2f928:	mov	x0, x24
   2f92c:	blr	x8
   2f930:	mov	x24, xzr
   2f934:	cbz	x23, 2f948 <PyInit__decimal@@Base+0x28e94>
   2f938:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2f93c:	ldr	x8, [x8, #1376]
   2f940:	mov	x0, x23
   2f944:	blr	x8
   2f948:	cbz	x24, 2f980 <PyInit__decimal@@Base+0x28ecc>
   2f94c:	ldrb	w8, [x19]
   2f950:	cmp	w8, #0x1f
   2f954:	b.hi	2f96c <PyInit__decimal@@Base+0x28eb8>  // b.pmore
   2f958:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2f95c:	ldr	x8, [x8, #1376]
   2f960:	ldr	x0, [x19, #40]
   2f964:	blr	x8
   2f968:	ldrb	w8, [x19]
   2f96c:	ldr	x23, [sp, #16]
   2f970:	and	w8, w8, #0x1f
   2f974:	strb	w8, [x19]
   2f978:	stp	x23, x24, [x19, #32]
   2f97c:	b	2f1b0 <PyInit__decimal@@Base+0x286fc>
   2f980:	ldrb	w8, [x19]
   2f984:	tbnz	w8, #5, 2f9c8 <PyInit__decimal@@Base+0x28f14>
   2f988:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2f98c:	ldr	x9, [x19, #32]
   2f990:	ldr	x1, [x21, #1344]
   2f994:	cmp	x9, x1
   2f998:	b.le	2f9c8 <PyInit__decimal@@Base+0x28f14>
   2f99c:	strb	wzr, [sp, #24]
   2f9a0:	ldr	x0, [x19, #40]
   2f9a4:	add	x3, sp, #0x18
   2f9a8:	mov	w2, #0x8                   	// #8
   2f9ac:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2f9b0:	str	x0, [x19, #40]
   2f9b4:	ldrb	w8, [sp, #24]
   2f9b8:	cbnz	w8, 2f9c4 <PyInit__decimal@@Base+0x28f10>
   2f9bc:	ldr	x8, [x21, #1344]
   2f9c0:	str	x8, [x19, #32]
   2f9c4:	ldrb	w8, [x19]
   2f9c8:	and	w8, w8, #0xf0
   2f9cc:	orr	w8, w8, #0x4
   2f9d0:	stp	xzr, xzr, [x19, #16]
   2f9d4:	strb	w8, [x19]
   2f9d8:	str	xzr, [x19, #8]
   2f9dc:	ldr	w8, [x20]
   2f9e0:	orr	w8, w8, #0x200
   2f9e4:	str	w8, [x20]
   2f9e8:	b	2f7dc <PyInit__decimal@@Base+0x28d28>
   2f9ec:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   2f9f0:	ldr	x19, [x19, #3904]
   2f9f4:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   2f9f8:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   2f9fc:	add	x1, x1, #0x9da
   2fa00:	ldr	x0, [x19]
   2fa04:	add	x2, x2, #0x9e9
   2fa08:	mov	w3, #0x253                 	// #595
   2fa0c:	bl	69b0 <fprintf@plt>
   2fa10:	ldr	x3, [x19]
   2fa14:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   2fa18:	add	x0, x0, #0xacd
   2fa1c:	b	2fa50 <PyInit__decimal@@Base+0x28f9c>
   2fa20:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   2fa24:	ldr	x19, [x19, #3904]
   2fa28:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   2fa2c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   2fa30:	add	x1, x1, #0x9da
   2fa34:	ldr	x0, [x19]
   2fa38:	add	x2, x2, #0x9e9
   2fa3c:	mov	w3, #0x26c                 	// #620
   2fa40:	bl	69b0 <fprintf@plt>
   2fa44:	ldr	x3, [x19]
   2fa48:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   2fa4c:	add	x0, x0, #0xaf7
   2fa50:	mov	w1, #0x29                  	// #41
   2fa54:	mov	w2, #0x1                   	// #1
   2fa58:	bl	6870 <fwrite@plt>
   2fa5c:	ldr	x1, [x19]
   2fa60:	mov	w0, #0xa                   	// #10
   2fa64:	bl	64f0 <fputc@plt>
   2fa68:	bl	6700 <abort@plt>
   2fa6c:	stp	x29, x30, [sp, #-80]!
   2fa70:	str	x28, [sp, #16]
   2fa74:	stp	x24, x23, [sp, #32]
   2fa78:	stp	x22, x21, [sp, #48]
   2fa7c:	stp	x20, x19, [sp, #64]
   2fa80:	mov	x29, sp
   2fa84:	sub	sp, sp, #0x4d0
   2fa88:	mov	w9, #0x30                  	// #48
   2fa8c:	strb	w9, [sp, #576]
   2fa90:	mov	w9, #0x40                  	// #64
   2fa94:	str	x9, [sp, #608]
   2fa98:	add	x9, sp, #0x270
   2fa9c:	str	x9, [sp, #616]
   2faa0:	mov	w9, #0x90                  	// #144
   2faa4:	strb	w9, [sp, #520]
   2faa8:	mov	w9, #0x1                   	// #1
   2faac:	add	x8, sp, #0x208
   2fab0:	dup	v0.2d, x9
   2fab4:	adrp	x9, 3e000 <PyInit__decimal@@Base+0x3754c>
   2fab8:	stur	q0, [x8, #24]
   2fabc:	ldr	q0, [x9, #1520]
   2fac0:	mov	x19, x2
   2fac4:	mov	x21, x1
   2fac8:	mov	w9, #0xa                   	// #10
   2facc:	stur	q0, [x8, #8]
   2fad0:	mov	w8, #0x4c0                 	// #1216
   2fad4:	sub	x8, x8, x1
   2fad8:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   2fadc:	str	x9, [sp, #568]
   2fae0:	add	x9, sp, #0x238
   2fae4:	bic	x2, x8, x8, asr #63
   2fae8:	add	x1, x1, #0xc58
   2faec:	mov	x3, x19
   2faf0:	mov	x20, x0
   2faf4:	str	xzr, [sp, #584]
   2faf8:	str	xzr, [sp, #592]
   2fafc:	str	xzr, [sp, #600]
   2fb00:	str	x9, [sp, #560]
   2fb04:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   2fb08:	cmn	x0, #0x1
   2fb0c:	b.eq	2fb68 <PyInit__decimal@@Base+0x290b4>  // b.none
   2fb10:	ldr	x8, [x20, #16]
   2fb14:	mov	w9, #0x1                   	// #1
   2fb18:	mov	x22, x0
   2fb1c:	sub	x0, x29, #0x60
   2fb20:	sub	x8, x9, x8
   2fb24:	str	x8, [x20, #8]
   2fb28:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2fb2c:	cmp	x21, #0x4bf
   2fb30:	b.gt	2fbd0 <PyInit__decimal@@Base+0x2911c>
   2fb34:	ldur	w8, [x29, #-60]
   2fb38:	stur	x21, [x29, #-96]
   2fb3c:	cmp	w8, #0x7
   2fb40:	b.hi	2ff74 <PyInit__decimal@@Base+0x294c0>  // b.pmore
   2fb44:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   2fb48:	add	x9, x9, #0x4a
   2fb4c:	adr	x10, 2fb5c <PyInit__decimal@@Base+0x290a8>
   2fb50:	ldrh	w11, [x9, x8, lsl #1]
   2fb54:	add	x10, x10, x11, lsl #2
   2fb58:	br	x10
   2fb5c:	cmp	x22, #0x0
   2fb60:	cset	w8, ne  // ne = any
   2fb64:	b	2fdc0 <PyInit__decimal@@Base+0x2930c>
   2fb68:	ldrb	w8, [x20]
   2fb6c:	tbnz	w8, #5, 2fbb0 <PyInit__decimal@@Base+0x290fc>
   2fb70:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   2fb74:	ldr	x9, [x20, #32]
   2fb78:	ldr	x1, [x21, #1344]
   2fb7c:	cmp	x9, x1
   2fb80:	b.le	2fbb0 <PyInit__decimal@@Base+0x290fc>
   2fb84:	strb	wzr, [sp, #8]
   2fb88:	ldr	x0, [x20, #40]
   2fb8c:	add	x3, sp, #0x8
   2fb90:	mov	w2, #0x8                   	// #8
   2fb94:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   2fb98:	str	x0, [x20, #40]
   2fb9c:	ldrb	w8, [sp, #8]
   2fba0:	cbnz	w8, 2fbac <PyInit__decimal@@Base+0x290f8>
   2fba4:	ldr	x8, [x21, #1344]
   2fba8:	str	x8, [x20, #32]
   2fbac:	ldrb	w8, [x20]
   2fbb0:	and	w8, w8, #0xf0
   2fbb4:	orr	w8, w8, #0x4
   2fbb8:	stp	xzr, xzr, [x20, #16]
   2fbbc:	strb	w8, [x20]
   2fbc0:	str	xzr, [x20, #8]
   2fbc4:	ldr	w8, [x19]
   2fbc8:	orr	w8, w8, #0x200
   2fbcc:	b	2ff80 <PyInit__decimal@@Base+0x294cc>
   2fbd0:	sub	x0, x29, #0x30
   2fbd4:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   2fbd8:	mov	w8, #0x8                   	// #8
   2fbdc:	stur	w8, [x29, #-12]
   2fbe0:	ldr	x8, [x20, #8]
   2fbe4:	add	x10, x21, #0x2
   2fbe8:	neg	x8, x8
   2fbec:	cmp	x10, x8
   2fbf0:	b.le	2fd10 <PyInit__decimal@@Base+0x2925c>
   2fbf4:	mov	w9, #0xffffffff            	// #-1
   2fbf8:	add	x11, sp, #0x8
   2fbfc:	add	x12, x10, #0x2
   2fc00:	add	x10, x10, #0x3
   2fc04:	cmp	x12, #0x0
   2fc08:	csel	x10, x10, x12, lt  // lt = tstop
   2fc0c:	asr	x10, x10, #1
   2fc10:	add	w9, w9, #0x1
   2fc14:	cmp	x10, x8
   2fc18:	str	x10, [x11, w9, sxtw #3]
   2fc1c:	b.gt	2fbfc <PyInit__decimal@@Base+0x29148>
   2fc20:	tbnz	w9, #31, 2fd10 <PyInit__decimal@@Base+0x2925c>
   2fc24:	ldrb	w8, [x20]
   2fc28:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
   2fc2c:	mov	w23, w9
   2fc30:	add	x24, sp, #0x8
   2fc34:	add	x22, x22, #0xc88
   2fc38:	ldr	x9, [x24, x23, lsl #3]
   2fc3c:	eor	w8, w8, #0x1
   2fc40:	add	x0, sp, #0x240
   2fc44:	sub	x2, x29, #0x30
   2fc48:	lsl	x9, x9, #1
   2fc4c:	add	x9, x9, #0x3
   2fc50:	mov	x1, x20
   2fc54:	mov	x3, x19
   2fc58:	stur	x9, [x29, #-48]
   2fc5c:	strb	w8, [x20]
   2fc60:	bl	2e118 <PyInit__decimal@@Base+0x27664>
   2fc64:	ldrb	w8, [x20]
   2fc68:	add	x0, sp, #0x240
   2fc6c:	add	x1, sp, #0x208
   2fc70:	add	x2, sp, #0x240
   2fc74:	eor	w8, w8, #0x1
   2fc78:	sub	x3, x29, #0x30
   2fc7c:	mov	x4, x19
   2fc80:	strb	w8, [x20]
   2fc84:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   2fc88:	add	x0, sp, #0x240
   2fc8c:	sub	x1, x29, #0x30
   2fc90:	mov	x2, x19
   2fc94:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2fc98:	add	x0, sp, #0x240
   2fc9c:	add	x1, sp, #0x240
   2fca0:	sub	x3, x29, #0x60
   2fca4:	mov	x2, x22
   2fca8:	mov	x4, x19
   2fcac:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   2fcb0:	add	x2, sp, #0x240
   2fcb4:	sub	x3, x29, #0x60
   2fcb8:	mov	x0, x20
   2fcbc:	mov	x1, x20
   2fcc0:	mov	x4, x19
   2fcc4:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   2fcc8:	ldrb	w8, [x20]
   2fccc:	tst	w8, #0xe
   2fcd0:	b.ne	2fcdc <PyInit__decimal@@Base+0x29228>  // b.any
   2fcd4:	subs	x23, x23, #0x1
   2fcd8:	b.ge	2fc38 <PyInit__decimal@@Base+0x29184>  // b.tcont
   2fcdc:	ldrb	w8, [sp, #576]
   2fce0:	cmp	w8, #0x1f
   2fce4:	b.hi	2fcfc <PyInit__decimal@@Base+0x29248>  // b.pmore
   2fce8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2fcec:	ldr	x8, [x8, #1376]
   2fcf0:	ldr	x0, [sp, #616]
   2fcf4:	blr	x8
   2fcf8:	ldrb	w8, [sp, #576]
   2fcfc:	tbnz	w8, #4, 2fd10 <PyInit__decimal@@Base+0x2925c>
   2fd00:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   2fd04:	ldr	x8, [x8, #1376]
   2fd08:	add	x0, sp, #0x240
   2fd0c:	blr	x8
   2fd10:	sub	x1, x29, #0x60
   2fd14:	mov	x0, x20
   2fd18:	mov	x2, x19
   2fd1c:	stur	x21, [x29, #-96]
   2fd20:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2fd24:	b	2ff84 <PyInit__decimal@@Base+0x294d0>
   2fd28:	cbz	x22, 2ff74 <PyInit__decimal@@Base+0x294c0>
   2fd2c:	ldrb	w8, [x20]
   2fd30:	mvn	w8, w8
   2fd34:	and	w8, w8, #0x1
   2fd38:	b	2fdc0 <PyInit__decimal@@Base+0x2930c>
   2fd3c:	cbz	x22, 2ff74 <PyInit__decimal@@Base+0x294c0>
   2fd40:	ldrb	w8, [x20]
   2fd44:	and	w8, w8, #0x1
   2fd48:	b	2fdc0 <PyInit__decimal@@Base+0x2930c>
   2fd4c:	cmp	x22, #0x4
   2fd50:	cset	w8, hi  // hi = pmore
   2fd54:	b	2fdc0 <PyInit__decimal@@Base+0x2930c>
   2fd58:	cmp	x22, #0x5
   2fd5c:	cset	w8, hi  // hi = pmore
   2fd60:	b	2fdc0 <PyInit__decimal@@Base+0x2930c>
   2fd64:	cmp	x22, #0x5
   2fd68:	b.hi	2fdc4 <PyInit__decimal@@Base+0x29310>  // b.pmore
   2fd6c:	b.ne	2ff74 <PyInit__decimal@@Base+0x294c0>  // b.any
   2fd70:	ldr	x8, [x20, #40]
   2fd74:	ldr	w8, [x8]
   2fd78:	and	w8, w8, #0x1
   2fd7c:	b	2fdc0 <PyInit__decimal@@Base+0x2930c>
   2fd80:	ldr	x8, [x20, #40]
   2fd84:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2fd88:	movk	x9, #0xcccd
   2fd8c:	mov	w10, #0xa                   	// #10
   2fd90:	ldr	x8, [x8]
   2fd94:	cmp	x22, #0x0
   2fd98:	cset	w11, ne  // ne = any
   2fd9c:	umulh	x9, x8, x9
   2fda0:	lsr	x9, x9, #3
   2fda4:	msub	w8, w9, w10, w8
   2fda8:	cmp	w8, #0x0
   2fdac:	cset	w9, eq  // eq = none
   2fdb0:	cmp	w8, #0x5
   2fdb4:	cset	w8, eq  // eq = none
   2fdb8:	orr	w8, w9, w8
   2fdbc:	and	w8, w11, w8
   2fdc0:	cbz	w8, 2ff74 <PyInit__decimal@@Base+0x294c0>
   2fdc4:	ldr	x0, [x20, #40]
   2fdc8:	ldr	x1, [x20, #24]
   2fdcc:	bl	1c45c <PyInit__decimal@@Base+0x159a8>
   2fdd0:	cbz	x0, 2fe0c <PyInit__decimal@@Base+0x29358>
   2fdd4:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   2fdd8:	ldr	x10, [x9, #1344]
   2fddc:	ldp	x8, x9, [x20, #24]
   2fde0:	add	x11, x8, #0x1
   2fde4:	cmp	x10, x11
   2fde8:	csinc	x1, x10, x8, ge  // ge = tcont
   2fdec:	cmp	x1, x9
   2fdf0:	b.eq	2fe34 <PyInit__decimal@@Base+0x29380>  // b.none
   2fdf4:	ldrb	w10, [x20]
   2fdf8:	tbnz	w10, #5, 2fe18 <PyInit__decimal@@Base+0x29364>
   2fdfc:	mov	x0, x20
   2fe00:	mov	x2, x19
   2fe04:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   2fe08:	b	2fe2c <PyInit__decimal@@Base+0x29378>
   2fe0c:	ldr	x9, [x20, #40]
   2fe10:	ldr	x8, [x20, #24]
   2fe14:	b	2fe4c <PyInit__decimal@@Base+0x29398>
   2fe18:	cmp	x1, x9
   2fe1c:	b.le	2fe34 <PyInit__decimal@@Base+0x29380>
   2fe20:	mov	x0, x20
   2fe24:	mov	x2, x19
   2fe28:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   2fe2c:	cbz	w0, 2ff74 <PyInit__decimal@@Base+0x294c0>
   2fe30:	ldr	x8, [x20, #24]
   2fe34:	ldr	x9, [x20, #40]
   2fe38:	mov	w10, #0x1                   	// #1
   2fe3c:	str	x10, [x9, x8, lsl #3]
   2fe40:	ldr	x8, [x20, #24]
   2fe44:	add	x8, x8, #0x1
   2fe48:	str	x8, [x20, #24]
   2fe4c:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   2fe50:	add	x9, x9, x8, lsl #3
   2fe54:	add	x10, x10, #0xca0
   2fe58:	ldur	x9, [x9, #-8]
   2fe5c:	ldr	x11, [x10, #72]
   2fe60:	cmp	x11, x9
   2fe64:	b.ls	2fe90 <PyInit__decimal@@Base+0x293dc>  // b.plast
   2fe68:	ldr	x11, [x10, #32]
   2fe6c:	cmp	x11, x9
   2fe70:	b.ls	2feb8 <PyInit__decimal@@Base+0x29404>  // b.plast
   2fe74:	ldr	x11, [x10, #16]
   2fe78:	cmp	x11, x9
   2fe7c:	b.ls	2fefc <PyInit__decimal@@Base+0x29448>  // b.plast
   2fe80:	ldr	x10, [x10, #8]
   2fe84:	cmp	x10, x9
   2fe88:	mov	w9, #0x1                   	// #1
   2fe8c:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2fe90:	ldr	x11, [x10, #112]
   2fe94:	cmp	x11, x9
   2fe98:	b.ls	2fed4 <PyInit__decimal@@Base+0x29420>  // b.plast
   2fe9c:	ldr	x11, [x10, #88]
   2fea0:	cmp	x11, x9
   2fea4:	b.ls	2ff0c <PyInit__decimal@@Base+0x29458>  // b.plast
   2fea8:	ldr	x10, [x10, #80]
   2feac:	cmp	x10, x9
   2feb0:	mov	w9, #0xa                   	// #10
   2feb4:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2feb8:	ldr	x11, [x10, #48]
   2febc:	cmp	x11, x9
   2fec0:	b.ls	2ff28 <PyInit__decimal@@Base+0x29474>  // b.plast
   2fec4:	ldr	x10, [x10, #40]
   2fec8:	cmp	x10, x9
   2fecc:	mov	w9, #0x5                   	// #5
   2fed0:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2fed4:	ldr	x11, [x10, #144]
   2fed8:	cmp	x11, x9
   2fedc:	b.ls	2ff44 <PyInit__decimal@@Base+0x29490>  // b.plast
   2fee0:	ldr	x11, [x10, #128]
   2fee4:	cmp	x11, x9
   2fee8:	b.ls	2ff54 <PyInit__decimal@@Base+0x294a0>  // b.plast
   2feec:	ldr	x10, [x10, #120]
   2fef0:	cmp	x10, x9
   2fef4:	mov	w9, #0xf                   	// #15
   2fef8:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2fefc:	ldr	x10, [x10, #24]
   2ff00:	cmp	x10, x9
   2ff04:	mov	w9, #0x3                   	// #3
   2ff08:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2ff0c:	ldr	x11, [x10, #104]
   2ff10:	cmp	x11, x9
   2ff14:	b.ls	2ffa0 <PyInit__decimal@@Base+0x294ec>  // b.plast
   2ff18:	ldr	x10, [x10, #96]
   2ff1c:	cmp	x10, x9
   2ff20:	mov	w9, #0xc                   	// #12
   2ff24:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2ff28:	ldr	x11, [x10, #64]
   2ff2c:	cmp	x11, x9
   2ff30:	b.ls	2ffa8 <PyInit__decimal@@Base+0x294f4>  // b.plast
   2ff34:	ldr	x10, [x10, #56]
   2ff38:	cmp	x10, x9
   2ff3c:	mov	w9, #0x7                   	// #7
   2ff40:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2ff44:	ldr	x10, [x10, #152]
   2ff48:	cmp	x10, x9
   2ff4c:	mov	w9, #0x13                  	// #19
   2ff50:	b	2ff60 <PyInit__decimal@@Base+0x294ac>
   2ff54:	ldr	x10, [x10, #136]
   2ff58:	cmp	x10, x9
   2ff5c:	mov	w9, #0x11                  	// #17
   2ff60:	cinc	x9, x9, ls  // ls = plast
   2ff64:	mov	w10, #0x13                  	// #19
   2ff68:	madd	x8, x8, x10, x9
   2ff6c:	sub	x8, x8, #0x13
   2ff70:	str	x8, [x20, #16]
   2ff74:	ldr	w8, [x19]
   2ff78:	mov	w9, #0x1040                	// #4160
   2ff7c:	orr	w8, w8, w9
   2ff80:	str	w8, [x19]
   2ff84:	add	sp, sp, #0x4d0
   2ff88:	ldp	x20, x19, [sp, #64]
   2ff8c:	ldp	x22, x21, [sp, #48]
   2ff90:	ldp	x24, x23, [sp, #32]
   2ff94:	ldr	x28, [sp, #16]
   2ff98:	ldp	x29, x30, [sp], #80
   2ff9c:	ret
   2ffa0:	mov	w9, #0xe                   	// #14
   2ffa4:	b	2ff64 <PyInit__decimal@@Base+0x294b0>
   2ffa8:	mov	w9, #0x9                   	// #9
   2ffac:	b	2ff64 <PyInit__decimal@@Base+0x294b0>
   2ffb0:	stp	x29, x30, [sp, #-48]!
   2ffb4:	str	x21, [sp, #16]
   2ffb8:	stp	x20, x19, [sp, #32]
   2ffbc:	mov	x29, sp
   2ffc0:	mov	x19, x4
   2ffc4:	mov	x20, x3
   2ffc8:	mov	x21, x0
   2ffcc:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   2ffd0:	mov	x0, x21
   2ffd4:	mov	x1, x20
   2ffd8:	mov	x2, x19
   2ffdc:	ldp	x20, x19, [sp, #32]
   2ffe0:	ldr	x21, [sp, #16]
   2ffe4:	ldp	x29, x30, [sp], #48
   2ffe8:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   2ffec:	stp	x29, x30, [sp, #-80]!
   2fff0:	str	x28, [sp, #16]
   2fff4:	stp	x24, x23, [sp, #32]
   2fff8:	stp	x22, x21, [sp, #48]
   2fffc:	stp	x20, x19, [sp, #64]
   30000:	mov	x29, sp
   30004:	sub	sp, sp, #0x8f0
   30008:	ldrb	w8, [x1]
   3000c:	mov	x20, x3
   30010:	mov	x22, x2
   30014:	mov	x21, x1
   30018:	tst	w8, #0xe
   3001c:	mov	x19, x0
   30020:	b.eq	30098 <PyInit__decimal@@Base+0x295e4>  // b.none
   30024:	mov	x0, x19
   30028:	mov	x1, x21
   3002c:	mov	x2, x22
   30030:	mov	x3, x20
   30034:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   30038:	cbnz	w0, 304b0 <PyInit__decimal@@Base+0x299fc>
   3003c:	ldrb	w9, [x21]
   30040:	ldrb	w8, [x19]
   30044:	tbnz	w9, #0, 3017c <PyInit__decimal@@Base+0x296c8>
   30048:	tbnz	w8, #5, 3008c <PyInit__decimal@@Base+0x295d8>
   3004c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   30050:	ldr	x9, [x19, #32]
   30054:	ldr	x1, [x20, #1344]
   30058:	cmp	x9, x1
   3005c:	b.le	3008c <PyInit__decimal@@Base+0x295d8>
   30060:	strb	wzr, [sp, #1728]
   30064:	ldr	x0, [x19, #40]
   30068:	add	x3, sp, #0x6c0
   3006c:	mov	w2, #0x8                   	// #8
   30070:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30074:	str	x0, [x19, #40]
   30078:	ldrb	w8, [sp, #1728]
   3007c:	cbnz	w8, 30088 <PyInit__decimal@@Base+0x295d4>
   30080:	ldr	x8, [x20, #1344]
   30084:	str	x8, [x19, #32]
   30088:	ldrb	w8, [x19]
   3008c:	and	w8, w8, #0xf0
   30090:	str	xzr, [x19, #24]
   30094:	b	304a4 <PyInit__decimal@@Base+0x299f0>
   30098:	ldr	x9, [x21, #40]
   3009c:	ldr	x10, [x21, #24]
   300a0:	add	x9, x9, x10, lsl #3
   300a4:	ldur	x9, [x9, #-8]
   300a8:	cbz	x9, 30124 <PyInit__decimal@@Base+0x29670>
   300ac:	tbnz	w8, #0, 30184 <PyInit__decimal@@Base+0x296d0>
   300b0:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   300b4:	add	x1, x1, #0xc88
   300b8:	mov	x0, x21
   300bc:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   300c0:	cbz	w0, 301f0 <PyInit__decimal@@Base+0x2973c>
   300c4:	mov	x23, x21
   300c8:	ldr	x8, [x23, #8]!
   300cc:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   300d0:	add	x11, x11, #0xca0
   300d4:	ldr	x12, [x11, #72]
   300d8:	ldr	x9, [x23, #8]
   300dc:	add	x10, x8, x9
   300e0:	sub	x24, x10, #0x1
   300e4:	eor	x10, x24, x24, asr #63
   300e8:	lsl	x10, x10, #1
   300ec:	cmp	x10, #0x0
   300f0:	cneg	x10, x10, mi  // mi = first
   300f4:	cmp	x12, x10
   300f8:	b.ls	30294 <PyInit__decimal@@Base+0x297e0>  // b.plast
   300fc:	ldr	x12, [x11, #32]
   30100:	cmp	x12, x10
   30104:	b.ls	302e4 <PyInit__decimal@@Base+0x29830>  // b.plast
   30108:	ldr	x12, [x11, #16]
   3010c:	cmp	x12, x10
   30110:	b.ls	3036c <PyInit__decimal@@Base+0x298b8>  // b.plast
   30114:	ldr	x11, [x11, #8]
   30118:	cmp	x11, x10
   3011c:	mov	w10, #0x1                   	// #1
   30120:	b	30428 <PyInit__decimal@@Base+0x29974>
   30124:	ldrb	w8, [x19]
   30128:	tbnz	w8, #5, 3016c <PyInit__decimal@@Base+0x296b8>
   3012c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   30130:	ldr	x9, [x19, #32]
   30134:	ldr	x1, [x20, #1344]
   30138:	cmp	x9, x1
   3013c:	b.le	3016c <PyInit__decimal@@Base+0x296b8>
   30140:	strb	wzr, [sp, #1728]
   30144:	ldr	x0, [x19, #40]
   30148:	add	x3, sp, #0x6c0
   3014c:	mov	w2, #0x8                   	// #8
   30150:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30154:	str	x0, [x19, #40]
   30158:	ldrb	w8, [sp, #1728]
   3015c:	cbnz	w8, 30168 <PyInit__decimal@@Base+0x296b4>
   30160:	ldr	x8, [x20, #1344]
   30164:	str	x8, [x19, #32]
   30168:	ldrb	w8, [x19]
   3016c:	and	w8, w8, #0xf0
   30170:	str	xzr, [x19, #24]
   30174:	orr	w8, w8, #0x3
   30178:	b	304a8 <PyInit__decimal@@Base+0x299f4>
   3017c:	tbz	w8, #5, 3018c <PyInit__decimal@@Base+0x296d8>
   30180:	b	301cc <PyInit__decimal@@Base+0x29718>
   30184:	ldrb	w8, [x19]
   30188:	tbnz	w8, #5, 301cc <PyInit__decimal@@Base+0x29718>
   3018c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   30190:	ldr	x9, [x19, #32]
   30194:	ldr	x1, [x21, #1344]
   30198:	cmp	x9, x1
   3019c:	b.le	301cc <PyInit__decimal@@Base+0x29718>
   301a0:	strb	wzr, [sp, #1728]
   301a4:	ldr	x0, [x19, #40]
   301a8:	add	x3, sp, #0x6c0
   301ac:	mov	w2, #0x8                   	// #8
   301b0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   301b4:	str	x0, [x19, #40]
   301b8:	ldrb	w8, [sp, #1728]
   301bc:	cbnz	w8, 301c8 <PyInit__decimal@@Base+0x29714>
   301c0:	ldr	x8, [x21, #1344]
   301c4:	str	x8, [x19, #32]
   301c8:	ldrb	w8, [x19]
   301cc:	and	w8, w8, #0xf0
   301d0:	orr	w8, w8, #0x4
   301d4:	stp	xzr, xzr, [x19, #16]
   301d8:	strb	w8, [x19]
   301dc:	str	xzr, [x19, #8]
   301e0:	ldr	w8, [x20]
   301e4:	orr	w8, w8, #0x100
   301e8:	str	w8, [x20]
   301ec:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   301f0:	ldrb	w8, [x19]
   301f4:	tbnz	w8, #5, 30238 <PyInit__decimal@@Base+0x29784>
   301f8:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   301fc:	ldr	x9, [x19, #32]
   30200:	ldr	x1, [x20, #1344]
   30204:	cmp	x9, x1
   30208:	b.le	30238 <PyInit__decimal@@Base+0x29784>
   3020c:	strb	wzr, [sp, #1728]
   30210:	ldr	x0, [x19, #40]
   30214:	add	x3, sp, #0x6c0
   30218:	mov	w2, #0x8                   	// #8
   3021c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30220:	str	x0, [x19, #40]
   30224:	ldrb	w8, [sp, #1728]
   30228:	cbnz	w8, 30234 <PyInit__decimal@@Base+0x29780>
   3022c:	ldr	x8, [x20, #1344]
   30230:	str	x8, [x19, #32]
   30234:	ldrb	w8, [x19]
   30238:	ldr	x10, [x19, #40]
   3023c:	and	w8, w8, #0xf0
   30240:	mov	w11, #0x1                   	// #1
   30244:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   30248:	str	xzr, [x19, #8]
   3024c:	add	x9, x9, #0xca0
   30250:	strb	w8, [x19]
   30254:	stp	xzr, xzr, [x10]
   30258:	str	x11, [x19, #24]
   3025c:	ldr	x8, [x10]
   30260:	ldr	x10, [x9, #72]
   30264:	cmp	x10, x8
   30268:	b.ls	302bc <PyInit__decimal@@Base+0x29808>  // b.plast
   3026c:	ldr	x10, [x9, #32]
   30270:	cmp	x10, x8
   30274:	b.ls	30328 <PyInit__decimal@@Base+0x29874>  // b.plast
   30278:	ldr	x10, [x9, #16]
   3027c:	cmp	x10, x8
   30280:	b.ls	303c4 <PyInit__decimal@@Base+0x29910>  // b.plast
   30284:	ldr	x9, [x9, #8]
   30288:	cmp	x9, x8
   3028c:	mov	w8, #0x1                   	// #1
   30290:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   30294:	ldr	x12, [x11, #112]
   30298:	cmp	x12, x10
   3029c:	b.ls	30300 <PyInit__decimal@@Base+0x2984c>  // b.plast
   302a0:	ldr	x12, [x11, #88]
   302a4:	cmp	x12, x10
   302a8:	b.ls	3037c <PyInit__decimal@@Base+0x298c8>  // b.plast
   302ac:	ldr	x11, [x11, #80]
   302b0:	cmp	x11, x10
   302b4:	mov	w10, #0xa                   	// #10
   302b8:	b	30428 <PyInit__decimal@@Base+0x29974>
   302bc:	ldr	x10, [x9, #112]
   302c0:	cmp	x10, x8
   302c4:	b.ls	30344 <PyInit__decimal@@Base+0x29890>  // b.plast
   302c8:	ldr	x10, [x9, #88]
   302cc:	cmp	x10, x8
   302d0:	b.ls	303d4 <PyInit__decimal@@Base+0x29920>  // b.plast
   302d4:	ldr	x9, [x9, #80]
   302d8:	cmp	x9, x8
   302dc:	mov	w8, #0xa                   	// #10
   302e0:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   302e4:	ldr	x12, [x11, #48]
   302e8:	cmp	x12, x10
   302ec:	b.ls	30398 <PyInit__decimal@@Base+0x298e4>  // b.plast
   302f0:	ldr	x11, [x11, #40]
   302f4:	cmp	x11, x10
   302f8:	mov	w10, #0x5                   	// #5
   302fc:	b	30428 <PyInit__decimal@@Base+0x29974>
   30300:	ldr	x12, [x11, #144]
   30304:	cmp	x12, x10
   30308:	b.ls	303b4 <PyInit__decimal@@Base+0x29900>  // b.plast
   3030c:	ldr	x12, [x11, #128]
   30310:	cmp	x12, x10
   30314:	b.ls	3041c <PyInit__decimal@@Base+0x29968>  // b.plast
   30318:	ldr	x11, [x11, #120]
   3031c:	cmp	x11, x10
   30320:	mov	w10, #0xf                   	// #15
   30324:	b	30428 <PyInit__decimal@@Base+0x29974>
   30328:	ldr	x10, [x9, #48]
   3032c:	cmp	x10, x8
   30330:	b.ls	303f0 <PyInit__decimal@@Base+0x2993c>  // b.plast
   30334:	ldr	x9, [x9, #40]
   30338:	cmp	x9, x8
   3033c:	mov	w8, #0x5                   	// #5
   30340:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   30344:	ldr	x10, [x9, #144]
   30348:	cmp	x10, x8
   3034c:	b.ls	3040c <PyInit__decimal@@Base+0x29958>  // b.plast
   30350:	ldr	x10, [x9, #128]
   30354:	cmp	x10, x8
   30358:	b.ls	308cc <PyInit__decimal@@Base+0x29e18>  // b.plast
   3035c:	ldr	x9, [x9, #120]
   30360:	cmp	x9, x8
   30364:	mov	w8, #0xf                   	// #15
   30368:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   3036c:	ldr	x11, [x11, #24]
   30370:	cmp	x11, x10
   30374:	mov	w10, #0x3                   	// #3
   30378:	b	30428 <PyInit__decimal@@Base+0x29974>
   3037c:	ldr	x12, [x11, #104]
   30380:	cmp	x12, x10
   30384:	b.ls	308bc <PyInit__decimal@@Base+0x29e08>  // b.plast
   30388:	ldr	x11, [x11, #96]
   3038c:	cmp	x11, x10
   30390:	mov	w10, #0xc                   	// #12
   30394:	b	30428 <PyInit__decimal@@Base+0x29974>
   30398:	ldr	x12, [x11, #64]
   3039c:	cmp	x12, x10
   303a0:	b.ls	308c4 <PyInit__decimal@@Base+0x29e10>  // b.plast
   303a4:	ldr	x11, [x11, #56]
   303a8:	cmp	x11, x10
   303ac:	mov	w10, #0x7                   	// #7
   303b0:	b	30428 <PyInit__decimal@@Base+0x29974>
   303b4:	ldr	x11, [x11, #152]
   303b8:	cmp	x11, x10
   303bc:	mov	w10, #0x13                  	// #19
   303c0:	b	30428 <PyInit__decimal@@Base+0x29974>
   303c4:	ldr	x9, [x9, #24]
   303c8:	cmp	x9, x8
   303cc:	mov	w8, #0x3                   	// #3
   303d0:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   303d4:	ldr	x10, [x9, #104]
   303d8:	cmp	x10, x8
   303dc:	b.ls	308e4 <PyInit__decimal@@Base+0x29e30>  // b.plast
   303e0:	ldr	x9, [x9, #96]
   303e4:	cmp	x9, x8
   303e8:	mov	w8, #0xc                   	// #12
   303ec:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   303f0:	ldr	x10, [x9, #64]
   303f4:	cmp	x10, x8
   303f8:	b.ls	308f0 <PyInit__decimal@@Base+0x29e3c>  // b.plast
   303fc:	ldr	x9, [x9, #56]
   30400:	cmp	x9, x8
   30404:	mov	w8, #0x7                   	// #7
   30408:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   3040c:	ldr	x9, [x9, #152]
   30410:	cmp	x9, x8
   30414:	mov	w8, #0x13                  	// #19
   30418:	b	308d8 <PyInit__decimal@@Base+0x29e24>
   3041c:	ldr	x11, [x11, #136]
   30420:	cmp	x11, x10
   30424:	mov	w10, #0x11                  	// #17
   30428:	cinc	x10, x10, ls  // ls = plast
   3042c:	ldr	x11, [x22, #8]
   30430:	sub	x10, x10, #0x1
   30434:	cmp	x11, x10
   30438:	b.ge	304cc <PyInit__decimal@@Base+0x29a18>  // b.tcont
   3043c:	ldr	w8, [x20]
   30440:	mov	w9, #0x1840                	// #6208
   30444:	orr	w8, w8, w9
   30448:	str	w8, [x20]
   3044c:	ldrb	w8, [x19]
   30450:	tbnz	w8, #5, 30494 <PyInit__decimal@@Base+0x299e0>
   30454:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   30458:	ldr	x9, [x19, #32]
   3045c:	ldr	x1, [x20, #1344]
   30460:	cmp	x9, x1
   30464:	b.le	30494 <PyInit__decimal@@Base+0x299e0>
   30468:	strb	wzr, [sp, #1728]
   3046c:	ldr	x0, [x19, #40]
   30470:	add	x3, sp, #0x6c0
   30474:	mov	w2, #0x8                   	// #8
   30478:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3047c:	str	x0, [x19, #40]
   30480:	ldrb	w8, [sp, #1728]
   30484:	cbnz	w8, 30490 <PyInit__decimal@@Base+0x299dc>
   30488:	ldr	x8, [x20, #1344]
   3048c:	str	x8, [x19, #32]
   30490:	ldrb	w8, [x19]
   30494:	lsr	x9, x24, #63
   30498:	and	w8, w8, #0xf0
   3049c:	str	xzr, [x19, #24]
   304a0:	orr	w8, w8, w9
   304a4:	orr	w8, w8, #0x2
   304a8:	strb	w8, [x19]
   304ac:	stp	xzr, xzr, [x19, #8]
   304b0:	add	sp, sp, #0x8f0
   304b4:	ldp	x20, x19, [sp, #64]
   304b8:	ldp	x22, x21, [sp, #48]
   304bc:	ldp	x24, x23, [sp, #32]
   304c0:	ldr	x28, [sp, #16]
   304c4:	ldp	x29, x30, [sp], #80
   304c8:	ret
   304cc:	ldp	q1, q0, [x22, #16]
   304d0:	ldr	q2, [x22]
   304d4:	mov	w10, #0x6                   	// #6
   304d8:	stp	q1, q0, [x29, #-32]
   304dc:	stur	q2, [x29, #-48]
   304e0:	stur	w10, [x29, #-12]
   304e4:	ldr	w10, [x22, #44]
   304e8:	cbz	w10, 305b8 <PyInit__decimal@@Base+0x29b04>
   304ec:	mov	w10, #0x30                  	// #48
   304f0:	add	x12, sp, #0x6c0
   304f4:	str	x12, [sp, #1720]
   304f8:	add	x12, sp, #0x490
   304fc:	strb	w10, [sp, #1680]
   30500:	strb	w10, [sp, #1120]
   30504:	strb	w10, [sp, #560]
   30508:	strb	w10, [sp]
   3050c:	mov	x10, sp
   30510:	str	x12, [sp, #1160]
   30514:	add	x12, sp, #0x260
   30518:	cmp	x10, x21
   3051c:	mov	w11, #0x40                  	// #64
   30520:	str	x12, [sp, #600]
   30524:	add	x12, sp, #0x30
   30528:	cset	w10, eq  // eq = none
   3052c:	cmp	x19, x21
   30530:	str	xzr, [sp, #1688]
   30534:	str	xzr, [sp, #1696]
   30538:	str	xzr, [sp, #1128]
   3053c:	str	xzr, [sp, #1136]
   30540:	str	xzr, [sp, #568]
   30544:	str	xzr, [sp, #576]
   30548:	stp	xzr, xzr, [sp, #8]
   3054c:	str	xzr, [sp, #1704]
   30550:	str	x11, [sp, #1712]
   30554:	str	xzr, [sp, #1144]
   30558:	str	x11, [sp, #1152]
   3055c:	str	xzr, [sp, #584]
   30560:	str	x11, [sp, #592]
   30564:	stp	xzr, x11, [sp, #24]
   30568:	str	x12, [sp, #40]
   3056c:	b.ne	30668 <PyInit__decimal@@Base+0x29bb4>  // b.any
   30570:	tbnz	w10, #0, 30668 <PyInit__decimal@@Base+0x29bb4>
   30574:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   30578:	ldr	x10, [x21, #24]
   3057c:	ldr	x11, [x24, #1344]
   30580:	cmp	x11, x10
   30584:	csel	x1, x10, x11, lt  // lt = tstop
   30588:	cmp	x1, #0x41
   3058c:	b.lt	30638 <PyInit__decimal@@Base+0x29b84>  // b.tstop
   30590:	mov	x0, sp
   30594:	mov	x2, x20
   30598:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3059c:	cbz	w0, 308fc <PyInit__decimal@@Base+0x29e48>
   305a0:	ldrb	w11, [sp]
   305a4:	ldp	x9, x10, [x21, #16]
   305a8:	ldr	x8, [x21, #8]
   305ac:	ldr	x0, [sp, #40]
   305b0:	and	w11, w11, #0xfffffff0
   305b4:	b	30640 <PyInit__decimal@@Base+0x29b8c>
   305b8:	sub	x2, x29, #0x30
   305bc:	mov	x0, x19
   305c0:	mov	x1, x21
   305c4:	mov	x3, x20
   305c8:	bl	30964 <PyInit__decimal@@Base+0x29eb0>
   305cc:	ldp	x8, x10, [x19, #8]
   305d0:	ldur	x9, [x29, #-32]
   305d4:	add	x10, x8, x10
   305d8:	sub	x10, x10, #0x1
   305dc:	cmp	x10, x9
   305e0:	b.ge	30624 <PyInit__decimal@@Base+0x29b70>  // b.tcont
   305e4:	ldrb	w11, [x19]
   305e8:	ldur	x10, [x29, #-48]
   305ec:	tst	w11, #0xe
   305f0:	b.ne	30608 <PyInit__decimal@@Base+0x29b54>  // b.any
   305f4:	ldr	x11, [x19, #40]
   305f8:	ldr	x12, [x19, #24]
   305fc:	add	x11, x11, x12, lsl #3
   30600:	ldur	x11, [x11, #-8]
   30604:	cbz	x11, 30624 <PyInit__decimal@@Base+0x29b70>
   30608:	sub	x9, x9, x10
   3060c:	add	x9, x9, #0x1
   30610:	cmp	x8, x9
   30614:	b.ge	30624 <PyInit__decimal@@Base+0x29b70>  // b.tcont
   30618:	ldr	w8, [x20]
   3061c:	orr	w8, w8, #0x4000
   30620:	str	w8, [x20]
   30624:	sub	x1, x29, #0x30
   30628:	mov	x0, x19
   3062c:	mov	x2, x20
   30630:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   30634:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   30638:	add	x0, sp, #0x30
   3063c:	mov	w11, #0x30                  	// #48
   30640:	ldrb	w12, [x21]
   30644:	stp	x8, x9, [sp, #8]
   30648:	str	x10, [sp, #24]
   3064c:	lsl	x2, x10, #3
   30650:	and	w8, w12, #0xf
   30654:	orr	w8, w11, w8
   30658:	strb	w8, [sp]
   3065c:	ldr	x1, [x21, #40]
   30660:	bl	63c0 <memcpy@plt>
   30664:	mov	x21, sp
   30668:	stur	wzr, [x29, #-8]
   3066c:	ldr	x8, [x22]
   30670:	sub	x9, x29, #0x30
   30674:	add	x23, x9, #0x1c
   30678:	add	x24, x8, #0x3
   3067c:	b	30690 <PyInit__decimal@@Base+0x29bdc>
   30680:	ldr	w8, [x20]
   30684:	orr	w8, w8, #0x100
   30688:	str	w8, [x20]
   3068c:	add	x24, x24, #0x13
   30690:	sub	x2, x29, #0x30
   30694:	mov	x0, x19
   30698:	mov	x1, x21
   3069c:	mov	x3, x20
   306a0:	stur	x24, [x29, #-48]
   306a4:	bl	30964 <PyInit__decimal@@Base+0x29eb0>
   306a8:	ldp	x8, x9, [x19, #8]
   306ac:	ldur	x10, [x29, #-48]
   306b0:	add	x0, sp, #0x230
   306b4:	mov	w2, #0x1                   	// #1
   306b8:	add	x8, x9, x8
   306bc:	sub	x3, x8, x10
   306c0:	mov	w1, wzr
   306c4:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   306c8:	ldr	x8, [x22]
   306cc:	add	x0, sp, #0x690
   306d0:	add	x2, sp, #0x230
   306d4:	sub	x3, x29, #0x30
   306d8:	mov	x1, x19
   306dc:	mov	x4, x23
   306e0:	stur	x8, [x29, #-48]
   306e4:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   306e8:	add	x0, sp, #0x460
   306ec:	add	x2, sp, #0x230
   306f0:	sub	x3, x29, #0x30
   306f4:	mov	x1, x19
   306f8:	mov	x4, x23
   306fc:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   30700:	ldrb	w8, [x19]
   30704:	tst	w8, #0xe
   30708:	b.ne	3075c <PyInit__decimal@@Base+0x29ca8>  // b.any
   3070c:	ldr	x8, [x19, #40]
   30710:	ldr	x9, [x19, #24]
   30714:	add	x8, x8, x9, lsl #3
   30718:	ldur	x8, [x8, #-8]
   3071c:	cbz	x8, 3075c <PyInit__decimal@@Base+0x29ca8>
   30720:	ldrb	w8, [sp, #1680]
   30724:	tst	w8, #0xe
   30728:	b.ne	30738 <PyInit__decimal@@Base+0x29c84>  // b.any
   3072c:	ldrb	w9, [sp, #1120]
   30730:	tst	w9, #0xe
   30734:	b.eq	3074c <PyInit__decimal@@Base+0x29c98>  // b.none
   30738:	tst	w8, #0xc
   3073c:	b.ne	30680 <PyInit__decimal@@Base+0x29bcc>  // b.any
   30740:	ldrb	w8, [sp, #1120]
   30744:	tst	w8, #0xc
   30748:	b.ne	30680 <PyInit__decimal@@Base+0x29bcc>  // b.any
   3074c:	add	x0, sp, #0x690
   30750:	add	x1, sp, #0x460
   30754:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   30758:	cbnz	w0, 3068c <PyInit__decimal@@Base+0x29bd8>
   3075c:	ldr	w8, [x22, #40]
   30760:	ldur	x9, [x29, #-32]
   30764:	stur	w8, [x29, #-8]
   30768:	ldp	x8, x10, [x19, #8]
   3076c:	add	x10, x8, x10
   30770:	sub	x10, x10, #0x1
   30774:	cmp	x10, x9
   30778:	b.ge	307bc <PyInit__decimal@@Base+0x29d08>  // b.tcont
   3077c:	ldrb	w11, [x19]
   30780:	ldur	x10, [x29, #-48]
   30784:	tst	w11, #0xe
   30788:	b.ne	307a0 <PyInit__decimal@@Base+0x29cec>  // b.any
   3078c:	ldr	x11, [x19, #40]
   30790:	ldr	x12, [x19, #24]
   30794:	add	x11, x11, x12, lsl #3
   30798:	ldur	x11, [x11, #-8]
   3079c:	cbz	x11, 307bc <PyInit__decimal@@Base+0x29d08>
   307a0:	sub	x9, x9, x10
   307a4:	add	x9, x9, #0x1
   307a8:	cmp	x8, x9
   307ac:	b.ge	307bc <PyInit__decimal@@Base+0x29d08>  // b.tcont
   307b0:	ldr	w8, [x20]
   307b4:	orr	w8, w8, #0x4000
   307b8:	str	w8, [x20]
   307bc:	sub	x1, x29, #0x30
   307c0:	mov	x0, x19
   307c4:	mov	x2, x20
   307c8:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   307cc:	ldrb	w8, [sp, #1680]
   307d0:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   307d4:	cmp	w8, #0x1f
   307d8:	b.ls	30814 <PyInit__decimal@@Base+0x29d60>  // b.plast
   307dc:	tbz	w8, #4, 30828 <PyInit__decimal@@Base+0x29d74>
   307e0:	ldrb	w8, [sp, #1120]
   307e4:	cmp	w8, #0x1f
   307e8:	b.ls	30840 <PyInit__decimal@@Base+0x29d8c>  // b.plast
   307ec:	tbz	w8, #4, 30854 <PyInit__decimal@@Base+0x29da0>
   307f0:	ldrb	w8, [sp, #560]
   307f4:	cmp	w8, #0x1f
   307f8:	b.ls	3086c <PyInit__decimal@@Base+0x29db8>  // b.plast
   307fc:	tbz	w8, #4, 30880 <PyInit__decimal@@Base+0x29dcc>
   30800:	ldrb	w8, [sp]
   30804:	cmp	w8, #0x1f
   30808:	b.ls	30898 <PyInit__decimal@@Base+0x29de4>  // b.plast
   3080c:	tbnz	w8, #4, 304b0 <PyInit__decimal@@Base+0x299fc>
   30810:	b	308ac <PyInit__decimal@@Base+0x29df8>
   30814:	ldr	x8, [x19, #1376]
   30818:	ldr	x0, [sp, #1720]
   3081c:	blr	x8
   30820:	ldrb	w8, [sp, #1680]
   30824:	tbnz	w8, #4, 307e0 <PyInit__decimal@@Base+0x29d2c>
   30828:	ldr	x8, [x19, #1376]
   3082c:	add	x0, sp, #0x690
   30830:	blr	x8
   30834:	ldrb	w8, [sp, #1120]
   30838:	cmp	w8, #0x1f
   3083c:	b.hi	307ec <PyInit__decimal@@Base+0x29d38>  // b.pmore
   30840:	ldr	x8, [x19, #1376]
   30844:	ldr	x0, [sp, #1160]
   30848:	blr	x8
   3084c:	ldrb	w8, [sp, #1120]
   30850:	tbnz	w8, #4, 307f0 <PyInit__decimal@@Base+0x29d3c>
   30854:	ldr	x8, [x19, #1376]
   30858:	add	x0, sp, #0x460
   3085c:	blr	x8
   30860:	ldrb	w8, [sp, #560]
   30864:	cmp	w8, #0x1f
   30868:	b.hi	307fc <PyInit__decimal@@Base+0x29d48>  // b.pmore
   3086c:	ldr	x8, [x19, #1376]
   30870:	ldr	x0, [sp, #600]
   30874:	blr	x8
   30878:	ldrb	w8, [sp, #560]
   3087c:	tbnz	w8, #4, 30800 <PyInit__decimal@@Base+0x29d4c>
   30880:	ldr	x8, [x19, #1376]
   30884:	add	x0, sp, #0x230
   30888:	blr	x8
   3088c:	ldrb	w8, [sp]
   30890:	cmp	w8, #0x1f
   30894:	b.hi	3080c <PyInit__decimal@@Base+0x29d58>  // b.pmore
   30898:	ldr	x8, [x19, #1376]
   3089c:	ldr	x0, [sp, #40]
   308a0:	blr	x8
   308a4:	ldrb	w8, [sp]
   308a8:	tbnz	w8, #4, 304b0 <PyInit__decimal@@Base+0x299fc>
   308ac:	ldr	x8, [x19, #1376]
   308b0:	mov	x0, sp
   308b4:	blr	x8
   308b8:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   308bc:	mov	w10, #0xe                   	// #14
   308c0:	b	3042c <PyInit__decimal@@Base+0x29978>
   308c4:	mov	w10, #0x9                   	// #9
   308c8:	b	3042c <PyInit__decimal@@Base+0x29978>
   308cc:	ldr	x9, [x9, #136]
   308d0:	cmp	x9, x8
   308d4:	mov	w8, #0x11                  	// #17
   308d8:	cinc	x8, x8, ls  // ls = plast
   308dc:	str	x8, [x19, #16]
   308e0:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   308e4:	mov	w8, #0xe                   	// #14
   308e8:	str	x8, [x19, #16]
   308ec:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   308f0:	mov	w8, #0x9                   	// #9
   308f4:	str	x8, [x19, #16]
   308f8:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   308fc:	ldrb	w8, [x21]
   30900:	tbnz	w8, #5, 30940 <PyInit__decimal@@Base+0x29e8c>
   30904:	ldr	x9, [x21, #32]
   30908:	ldr	x1, [x24, #1344]
   3090c:	cmp	x9, x1
   30910:	b.le	30940 <PyInit__decimal@@Base+0x29e8c>
   30914:	strb	wzr, [x29, #28]
   30918:	ldr	x0, [x21, #40]
   3091c:	add	x3, x29, #0x1c
   30920:	mov	w2, #0x8                   	// #8
   30924:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30928:	str	x0, [x21, #40]
   3092c:	ldrb	w8, [x29, #28]
   30930:	cbnz	w8, 3093c <PyInit__decimal@@Base+0x29e88>
   30934:	ldr	x8, [x24, #1344]
   30938:	str	x8, [x21, #32]
   3093c:	ldrb	w8, [x21]
   30940:	and	w8, w8, #0xf0
   30944:	orr	w8, w8, #0x4
   30948:	strb	w8, [x21]
   3094c:	stp	xzr, xzr, [x23]
   30950:	str	xzr, [x23, #16]
   30954:	ldr	w8, [x20]
   30958:	orr	w8, w8, #0x200
   3095c:	str	w8, [x20]
   30960:	b	304b0 <PyInit__decimal@@Base+0x299fc>
   30964:	stp	x29, x30, [sp, #-96]!
   30968:	stp	x28, x27, [sp, #16]
   3096c:	stp	x26, x25, [sp, #32]
   30970:	stp	x24, x23, [sp, #48]
   30974:	stp	x22, x21, [sp, #64]
   30978:	stp	x20, x19, [sp, #80]
   3097c:	mov	x29, sp
   30980:	sub	sp, sp, #0x900
   30984:	mov	w9, #0x30                  	// #48
   30988:	add	x11, sp, #0x468
   3098c:	strb	w9, [sp, #1640]
   30990:	strb	w9, [sp, #1080]
   30994:	strb	w9, [sp, #520]
   30998:	add	x9, sp, #0x668
   3099c:	mov	x19, x3
   309a0:	mov	x21, x2
   309a4:	mov	x22, x1
   309a8:	mov	x20, x0
   309ac:	mov	w10, #0x40                  	// #64
   309b0:	add	x8, sp, #0x698
   309b4:	str	x11, [sp, #1120]
   309b8:	add	x11, sp, #0x238
   309bc:	cmp	x9, x1
   309c0:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
   309c4:	str	xzr, [sp, #1648]
   309c8:	str	xzr, [sp, #1656]
   309cc:	str	xzr, [sp, #1088]
   309d0:	str	xzr, [sp, #1096]
   309d4:	str	xzr, [sp, #528]
   309d8:	str	xzr, [sp, #536]
   309dc:	str	xzr, [sp, #1664]
   309e0:	str	x10, [sp, #1672]
   309e4:	str	x8, [sp, #1680]
   309e8:	str	xzr, [sp, #1104]
   309ec:	str	x10, [sp, #1112]
   309f0:	str	xzr, [sp, #544]
   309f4:	str	x10, [sp, #552]
   309f8:	str	x11, [sp, #560]
   309fc:	b.eq	30a38 <PyInit__decimal@@Base+0x29f84>  // b.none
   30a00:	ldr	x8, [x22, #24]
   30a04:	ldr	x9, [x27, #1344]
   30a08:	cmp	x9, x8
   30a0c:	csel	x1, x8, x9, lt  // lt = tstop
   30a10:	cmp	x1, #0x41
   30a14:	b.lt	30a44 <PyInit__decimal@@Base+0x29f90>  // b.tstop
   30a18:	add	x0, sp, #0x668
   30a1c:	mov	x2, x19
   30a20:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   30a24:	cbz	w0, 30c44 <PyInit__decimal@@Base+0x2a190>
   30a28:	ldr	x8, [x22, #24]
   30a2c:	ldrb	w9, [sp, #1640]
   30a30:	ldr	x0, [sp, #1680]
   30a34:	b	30a4c <PyInit__decimal@@Base+0x29f98>
   30a38:	mov	x9, xzr
   30a3c:	mov	x10, xzr
   30a40:	b	30a80 <PyInit__decimal@@Base+0x29fcc>
   30a44:	add	x0, sp, #0x698
   30a48:	mov	w9, #0x30                  	// #48
   30a4c:	ldrb	w10, [x22]
   30a50:	lsl	x2, x8, #3
   30a54:	bfxil	w9, w10, #0, #4
   30a58:	strb	w9, [sp, #1640]
   30a5c:	ldur	q0, [x22, #8]
   30a60:	add	x9, sp, #0x571
   30a64:	str	x8, [sp, #1664]
   30a68:	stur	q0, [x9, #255]
   30a6c:	ldr	x1, [x22, #40]
   30a70:	bl	63c0 <memcpy@plt>
   30a74:	ldr	x8, [sp, #1680]
   30a78:	ldr	x10, [sp, #1656]
   30a7c:	ldr	x9, [sp, #1664]
   30a80:	mov	x11, #0x435f                	// #17247
   30a84:	movk	x11, #0xd79, lsl #16
   30a88:	movk	x11, #0x35e5, lsl #32
   30a8c:	movk	x11, #0xd794, lsl #48
   30a90:	umulh	x11, x10, x11
   30a94:	mov	w12, #0x13                  	// #19
   30a98:	add	x13, x8, x9, lsl #3
   30a9c:	lsr	x11, x11, #4
   30aa0:	msub	x10, x11, x12, x10
   30aa4:	ldur	x23, [x13, #-8]
   30aa8:	cmp	x10, #0x0
   30aac:	csel	x10, x12, x10, eq  // eq = none
   30ab0:	adrp	x26, 44000 <PyInit__decimal@@Base+0x3d54c>
   30ab4:	cmp	x10, #0x3
   30ab8:	add	x26, x26, #0xca0
   30abc:	b.cs	30b00 <PyInit__decimal@@Base+0x2a04c>  // b.hs, b.nlast
   30ac0:	cmp	x9, #0x2
   30ac4:	b.lt	30aec <PyInit__decimal@@Base+0x2a038>  // b.tstop
   30ac8:	mov	w11, #0x3                   	// #3
   30acc:	add	x8, x8, x9, lsl #3
   30ad0:	add	x9, x26, x10, lsl #3
   30ad4:	sub	x10, x11, x10
   30ad8:	ldur	x8, [x8, #-16]
   30adc:	ldr	x9, [x9, #128]
   30ae0:	ldr	x10, [x26, x10, lsl #3]
   30ae4:	udiv	x8, x8, x9
   30ae8:	madd	x23, x10, x23, x8
   30aec:	cmp	x23, #0x9
   30af0:	b.hi	30b14 <PyInit__decimal@@Base+0x2a060>  // b.pmore
   30af4:	add	x8, x23, x23, lsl #2
   30af8:	lsl	x23, x8, #1
   30afc:	b	30b1c <PyInit__decimal@@Base+0x2a068>
   30b00:	add	x8, x26, x10, lsl #3
   30b04:	ldur	x8, [x8, #-24]
   30b08:	udiv	x23, x23, x8
   30b0c:	cmp	x23, #0x9
   30b10:	b.ls	30af4 <PyInit__decimal@@Base+0x2a040>  // b.plast
   30b14:	cmp	x23, #0x63
   30b18:	b.hi	30b24 <PyInit__decimal@@Base+0x2a070>  // b.pmore
   30b1c:	add	x8, x23, x23, lsl #2
   30b20:	lsl	x23, x8, #1
   30b24:	ldrb	w8, [x20]
   30b28:	ldp	x22, x24, [x22, #8]
   30b2c:	sub	x25, x23, #0x64
   30b30:	tbnz	w8, #5, 30b70 <PyInit__decimal@@Base+0x2a0bc>
   30b34:	ldr	x9, [x20, #32]
   30b38:	ldr	x1, [x27, #1344]
   30b3c:	cmp	x9, x1
   30b40:	b.le	30b70 <PyInit__decimal@@Base+0x2a0bc>
   30b44:	strb	wzr, [sp, #8]
   30b48:	ldr	x0, [x20, #40]
   30b4c:	add	x3, sp, #0x8
   30b50:	mov	w2, #0x8                   	// #8
   30b54:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30b58:	str	x0, [x20, #40]
   30b5c:	ldrb	w8, [sp, #8]
   30b60:	cbnz	w8, 30b6c <PyInit__decimal@@Base+0x2a0b8>
   30b64:	ldr	x8, [x27, #1344]
   30b68:	str	x8, [x20, #32]
   30b6c:	ldrb	w8, [x20]
   30b70:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   30b74:	add	x9, x9, #0x290
   30b78:	ldr	x10, [x20, #40]
   30b7c:	ldrh	w9, [x9, x25, lsl #1]
   30b80:	and	w8, w8, #0xf0
   30b84:	mov	x11, #0xfffffffffffffffd    	// #-3
   30b88:	mov	x28, x20
   30b8c:	mov	w12, #0x1                   	// #1
   30b90:	strb	w8, [x20]
   30b94:	str	x9, [x10]
   30b98:	str	x11, [x28, #8]!
   30b9c:	str	x12, [x28, #16]
   30ba0:	ldr	x9, [x10]
   30ba4:	ldr	x27, [x26, #72]
   30ba8:	cmp	x27, x9
   30bac:	b.ls	30bd8 <PyInit__decimal@@Base+0x2a124>  // b.plast
   30bb0:	ldr	x10, [x26, #32]
   30bb4:	cmp	x10, x9
   30bb8:	b.ls	30c00 <PyInit__decimal@@Base+0x2a14c>  // b.plast
   30bbc:	ldr	x10, [x26, #16]
   30bc0:	cmp	x10, x9
   30bc4:	b.ls	30ca0 <PyInit__decimal@@Base+0x2a1ec>  // b.plast
   30bc8:	ldr	x10, [x26, #8]
   30bcc:	cmp	x10, x9
   30bd0:	mov	w9, #0x1                   	// #1
   30bd4:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30bd8:	ldr	x10, [x26, #112]
   30bdc:	cmp	x10, x9
   30be0:	b.ls	30c1c <PyInit__decimal@@Base+0x2a168>  // b.plast
   30be4:	ldr	x10, [x26, #88]
   30be8:	cmp	x10, x9
   30bec:	b.ls	30cb0 <PyInit__decimal@@Base+0x2a1fc>  // b.plast
   30bf0:	ldr	x10, [x26, #80]
   30bf4:	cmp	x10, x9
   30bf8:	mov	w9, #0xa                   	// #10
   30bfc:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30c00:	ldr	x10, [x26, #48]
   30c04:	cmp	x10, x9
   30c08:	b.ls	30ccc <PyInit__decimal@@Base+0x2a218>  // b.plast
   30c0c:	ldr	x10, [x26, #40]
   30c10:	cmp	x10, x9
   30c14:	mov	w9, #0x5                   	// #5
   30c18:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30c1c:	ldr	x10, [x26, #144]
   30c20:	cmp	x10, x9
   30c24:	b.ls	30ce8 <PyInit__decimal@@Base+0x2a234>  // b.plast
   30c28:	ldr	x10, [x26, #128]
   30c2c:	cmp	x10, x9
   30c30:	b.ls	30cf8 <PyInit__decimal@@Base+0x2a244>  // b.plast
   30c34:	ldr	x10, [x26, #120]
   30c38:	cmp	x10, x9
   30c3c:	mov	w9, #0xf                   	// #15
   30c40:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30c44:	ldrb	w8, [x20]
   30c48:	tbnz	w8, #5, 30c88 <PyInit__decimal@@Base+0x2a1d4>
   30c4c:	ldr	x9, [x20, #32]
   30c50:	ldr	x1, [x27, #1344]
   30c54:	cmp	x9, x1
   30c58:	b.le	30c88 <PyInit__decimal@@Base+0x2a1d4>
   30c5c:	strb	wzr, [sp, #8]
   30c60:	ldr	x0, [x20, #40]
   30c64:	add	x3, sp, #0x8
   30c68:	mov	w2, #0x8                   	// #8
   30c6c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30c70:	str	x0, [x20, #40]
   30c74:	ldrb	w8, [sp, #8]
   30c78:	cbnz	w8, 30c84 <PyInit__decimal@@Base+0x2a1d0>
   30c7c:	ldr	x8, [x27, #1344]
   30c80:	str	x8, [x20, #32]
   30c84:	ldrb	w8, [x20]
   30c88:	and	w8, w8, #0xf0
   30c8c:	orr	w8, w8, #0x4
   30c90:	stp	xzr, xzr, [x20, #16]
   30c94:	strb	w8, [x20]
   30c98:	str	xzr, [x20, #8]
   30c9c:	b	30e14 <PyInit__decimal@@Base+0x2a360>
   30ca0:	ldr	x10, [x26, #24]
   30ca4:	cmp	x10, x9
   30ca8:	mov	w9, #0x3                   	// #3
   30cac:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30cb0:	ldr	x10, [x26, #104]
   30cb4:	cmp	x10, x9
   30cb8:	b.ls	31168 <PyInit__decimal@@Base+0x2a6b4>  // b.plast
   30cbc:	ldr	x10, [x26, #96]
   30cc0:	cmp	x10, x9
   30cc4:	mov	w9, #0xc                   	// #12
   30cc8:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30ccc:	ldr	x10, [x26, #64]
   30cd0:	cmp	x10, x9
   30cd4:	b.ls	31170 <PyInit__decimal@@Base+0x2a6bc>  // b.plast
   30cd8:	ldr	x10, [x26, #56]
   30cdc:	cmp	x10, x9
   30ce0:	mov	w9, #0x7                   	// #7
   30ce4:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30ce8:	ldr	x10, [x26, #152]
   30cec:	cmp	x10, x9
   30cf0:	mov	w9, #0x13                  	// #19
   30cf4:	b	30d04 <PyInit__decimal@@Base+0x2a250>
   30cf8:	ldr	x10, [x26, #136]
   30cfc:	cmp	x10, x9
   30d00:	mov	w9, #0x11                  	// #17
   30d04:	cinc	x9, x9, ls  // ls = plast
   30d08:	cmp	x25, #0x190
   30d0c:	str	x9, [x20, #16]
   30d10:	b.hi	30d2c <PyInit__decimal@@Base+0x2a278>  // b.pmore
   30d14:	mov	w8, #0x1                   	// #1
   30d18:	add	x9, x22, x24
   30d1c:	sub	x8, x8, x24
   30d20:	str	x8, [sp, #1648]
   30d24:	sub	x22, x9, #0x1
   30d28:	b	30d40 <PyInit__decimal@@Base+0x2a28c>
   30d2c:	neg	x9, x24
   30d30:	add	x22, x22, x24
   30d34:	orr	w8, w8, #0x1
   30d38:	str	x9, [sp, #1648]
   30d3c:	strb	w8, [x20]
   30d40:	sub	x0, x29, #0x68
   30d44:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   30d48:	sub	x0, x29, #0x38
   30d4c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   30d50:	mov	w8, #0x8                   	// #8
   30d54:	stur	w8, [x29, #-20]
   30d58:	ldr	x8, [x21]
   30d5c:	sub	x9, x23, #0x74
   30d60:	cmp	x9, #0x310
   30d64:	add	x25, x8, #0x2
   30d68:	b.cc	30f18 <PyInit__decimal@@Base+0x2a464>  // b.lo, b.ul, b.last
   30d6c:	cbnz	x22, 30f18 <PyInit__decimal@@Base+0x2a464>
   30d70:	adrp	x24, 56000 <PyInit__decimal@@Base+0x4f54c>
   30d74:	add	x24, x24, #0xc88
   30d78:	add	x0, sp, #0x668
   30d7c:	mov	x1, x24
   30d80:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   30d84:	sub	x8, x29, #0x68
   30d88:	mov	w23, w0
   30d8c:	add	x5, x8, #0x1c
   30d90:	add	x0, sp, #0x208
   30d94:	add	x1, sp, #0x668
   30d98:	sub	x4, x29, #0x68
   30d9c:	mov	w3, #0x1                   	// #1
   30da0:	mov	x2, x24
   30da4:	bl	2a43c <PyInit__decimal@@Base+0x23988>
   30da8:	ldurh	w8, [x29, #-76]
   30dac:	mov	w9, #0x3be                 	// #958
   30db0:	tst	w8, w9
   30db4:	b.eq	30e24 <PyInit__decimal@@Base+0x2a370>  // b.none
   30db8:	ldrb	w8, [x20]
   30dbc:	tbnz	w8, #5, 30e00 <PyInit__decimal@@Base+0x2a34c>
   30dc0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   30dc4:	ldr	x9, [x20, #32]
   30dc8:	ldr	x1, [x21, #1344]
   30dcc:	cmp	x9, x1
   30dd0:	b.le	30e00 <PyInit__decimal@@Base+0x2a34c>
   30dd4:	strb	wzr, [sp, #8]
   30dd8:	ldr	x0, [x20, #40]
   30ddc:	add	x3, sp, #0x8
   30de0:	mov	w2, #0x8                   	// #8
   30de4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30de8:	str	x0, [x20, #40]
   30dec:	ldrb	w8, [sp, #8]
   30df0:	cbnz	w8, 30dfc <PyInit__decimal@@Base+0x2a348>
   30df4:	ldr	x8, [x21, #1344]
   30df8:	str	x8, [x20, #32]
   30dfc:	ldrb	w8, [x20]
   30e00:	and	w8, w8, #0xf0
   30e04:	orr	w8, w8, #0x4
   30e08:	strb	w8, [x20]
   30e0c:	stp	xzr, xzr, [x28]
   30e10:	str	xzr, [x28, #16]
   30e14:	ldr	w8, [x19]
   30e18:	orr	w8, w8, #0x200
   30e1c:	str	w8, [x19]
   30e20:	b	31088 <PyInit__decimal@@Base+0x2a5d4>
   30e24:	ldr	x8, [sp, #528]
   30e28:	tbz	w23, #31, 30e34 <PyInit__decimal@@Base+0x2a380>
   30e2c:	add	x8, x8, #0x1
   30e30:	str	x8, [sp, #528]
   30e34:	ldr	x11, [x21, #16]
   30e38:	ldr	x12, [x21]
   30e3c:	ldr	x9, [sp, #536]
   30e40:	sub	x10, x8, #0x1
   30e44:	sub	x11, x11, x12
   30e48:	add	x13, x10, x9
   30e4c:	add	x11, x11, #0x1
   30e50:	cmp	x13, x11
   30e54:	b.ge	30f04 <PyInit__decimal@@Base+0x2a450>  // b.tcont
   30e58:	ldrb	w8, [x20]
   30e5c:	sub	x21, x11, #0x1
   30e60:	tbnz	w8, #5, 30ea8 <PyInit__decimal@@Base+0x2a3f4>
   30e64:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   30e68:	ldr	x9, [x20, #32]
   30e6c:	ldr	x1, [x10, #1344]
   30e70:	cmp	x9, x1
   30e74:	b.le	30ea8 <PyInit__decimal@@Base+0x2a3f4>
   30e78:	strb	wzr, [sp, #8]
   30e7c:	ldr	x0, [x20, #40]
   30e80:	add	x3, sp, #0x8
   30e84:	mov	w2, #0x8                   	// #8
   30e88:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   30e8c:	str	x0, [x20, #40]
   30e90:	ldrb	w8, [sp, #8]
   30e94:	cbnz	w8, 30ea4 <PyInit__decimal@@Base+0x2a3f0>
   30e98:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   30e9c:	ldr	x8, [x8, #1344]
   30ea0:	str	x8, [x20, #32]
   30ea4:	ldrb	w8, [x20]
   30ea8:	adrp	x10, 45000 <PyInit__decimal@@Base+0x3e54c>
   30eac:	ldr	x9, [x20, #40]
   30eb0:	ldr	q0, [x10, #2464]
   30eb4:	and	w8, w8, #0xf0
   30eb8:	mov	w10, #0x1                   	// #1
   30ebc:	bfxil	w8, w23, #31, #1
   30ec0:	str	x21, [x20, #8]
   30ec4:	strb	w8, [x20]
   30ec8:	str	q0, [x9]
   30ecc:	str	x10, [x20, #24]
   30ed0:	ldr	x8, [x9]
   30ed4:	cmp	x27, x8
   30ed8:	b.ls	31178 <PyInit__decimal@@Base+0x2a6c4>  // b.plast
   30edc:	ldr	x9, [x26, #32]
   30ee0:	cmp	x9, x8
   30ee4:	b.ls	311a0 <PyInit__decimal@@Base+0x2a6ec>  // b.plast
   30ee8:	ldr	x9, [x26, #16]
   30eec:	cmp	x9, x8
   30ef0:	b.ls	311e4 <PyInit__decimal@@Base+0x2a730>  // b.plast
   30ef4:	ldr	x9, [x26, #8]
   30ef8:	cmp	x9, x8
   30efc:	mov	w8, #0x1                   	// #1
   30f00:	b	31248 <PyInit__decimal@@Base+0x2a794>
   30f04:	add	x8, x8, x9
   30f08:	sub	x8, x8, #0x2
   30f0c:	and	x8, x8, x8, asr #63
   30f10:	sub	x25, x25, x8
   30f14:	str	x10, [sp, #528]
   30f18:	cmp	x25, #0x3
   30f1c:	b.lt	31048 <PyInit__decimal@@Base+0x2a594>  // b.tstop
   30f20:	mov	w9, #0xffffffff            	// #-1
   30f24:	add	x8, sp, #0x8
   30f28:	mov	x10, x25
   30f2c:	add	x11, x10, #0x2
   30f30:	add	x10, x10, #0x3
   30f34:	cmp	x11, #0x0
   30f38:	csel	x10, x10, x11, lt  // lt = tstop
   30f3c:	add	w9, w9, #0x1
   30f40:	asr	x10, x10, #1
   30f44:	cmp	x11, #0x5
   30f48:	str	x10, [x8, w9, sxtw #3]
   30f4c:	b.gt	30f2c <PyInit__decimal@@Base+0x2a478>
   30f50:	tbnz	w9, #31, 31048 <PyInit__decimal@@Base+0x2a594>
   30f54:	ldrb	w8, [x20]
   30f58:	adrp	x21, 56000 <PyInit__decimal@@Base+0x4f54c>
   30f5c:	mov	w26, w9
   30f60:	add	x27, sp, #0x8
   30f64:	add	x21, x21, #0xc88
   30f68:	ldr	x9, [x27, x26, lsl #3]
   30f6c:	eor	w8, w8, #0x1
   30f70:	add	x0, sp, #0x208
   30f74:	sub	x2, x29, #0x38
   30f78:	lsl	x9, x9, #1
   30f7c:	add	x9, x9, #0x3
   30f80:	mov	x1, x20
   30f84:	mov	x3, x19
   30f88:	stur	x9, [x29, #-56]
   30f8c:	strb	w8, [x20]
   30f90:	bl	2e118 <PyInit__decimal@@Base+0x27664>
   30f94:	ldrb	w8, [x20]
   30f98:	eor	w8, w8, #0x1
   30f9c:	strb	w8, [x20]
   30fa0:	ldr	x8, [sp, #1656]
   30fa4:	ldur	x9, [x29, #-56]
   30fa8:	subs	x24, x8, x9
   30fac:	b.le	30fd8 <PyInit__decimal@@Base+0x2a524>
   30fb0:	add	x0, sp, #0x438
   30fb4:	add	x1, sp, #0x668
   30fb8:	mov	x2, x24
   30fbc:	mov	x3, x19
   30fc0:	add	x23, sp, #0x438
   30fc4:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   30fc8:	ldr	x8, [sp, #1088]
   30fcc:	add	x8, x8, x24
   30fd0:	str	x8, [sp, #1088]
   30fd4:	b	30fdc <PyInit__decimal@@Base+0x2a528>
   30fd8:	add	x23, sp, #0x668
   30fdc:	add	x0, sp, #0x208
   30fe0:	add	x2, sp, #0x208
   30fe4:	sub	x3, x29, #0x38
   30fe8:	mov	x1, x23
   30fec:	mov	x4, x19
   30ff0:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   30ff4:	add	x0, sp, #0x208
   30ff8:	sub	x1, x29, #0x38
   30ffc:	mov	x2, x19
   31000:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   31004:	add	x0, sp, #0x208
   31008:	add	x1, sp, #0x208
   3100c:	sub	x3, x29, #0x68
   31010:	mov	x2, x21
   31014:	mov	x4, x19
   31018:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   3101c:	add	x2, sp, #0x208
   31020:	sub	x3, x29, #0x68
   31024:	mov	x0, x20
   31028:	mov	x1, x20
   3102c:	mov	x4, x19
   31030:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   31034:	ldrb	w8, [x20]
   31038:	tst	w8, #0xe
   3103c:	b.ne	31048 <PyInit__decimal@@Base+0x2a594>  // b.any
   31040:	subs	x26, x26, #0x1
   31044:	b.ge	30f68 <PyInit__decimal@@Base+0x2a4b4>  // b.tcont
   31048:	add	x1, x25, #0x1
   3104c:	add	x0, sp, #0x668
   31050:	mov	x2, x19
   31054:	bl	2fa6c <PyInit__decimal@@Base+0x28fb8>
   31058:	add	x0, sp, #0x208
   3105c:	add	x1, sp, #0x668
   31060:	sub	x3, x29, #0x68
   31064:	mov	x2, x22
   31068:	mov	x4, x19
   3106c:	bl	3292c <PyInit__decimal@@Base+0x2be78>
   31070:	add	x1, sp, #0x208
   31074:	sub	x3, x29, #0x68
   31078:	mov	x0, x20
   3107c:	mov	x2, x20
   31080:	mov	x4, x19
   31084:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   31088:	ldr	w8, [x19]
   3108c:	mov	w9, #0x1040                	// #4160
   31090:	orr	w8, w8, w9
   31094:	str	w8, [x19]
   31098:	ldrb	w8, [sp, #1640]
   3109c:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   310a0:	cmp	w8, #0x1f
   310a4:	b.ls	310f8 <PyInit__decimal@@Base+0x2a644>  // b.plast
   310a8:	tbz	w8, #4, 3110c <PyInit__decimal@@Base+0x2a658>
   310ac:	ldrb	w8, [sp, #1080]
   310b0:	cmp	w8, #0x1f
   310b4:	b.ls	31124 <PyInit__decimal@@Base+0x2a670>  // b.plast
   310b8:	tbz	w8, #4, 31138 <PyInit__decimal@@Base+0x2a684>
   310bc:	ldrb	w8, [sp, #520]
   310c0:	cmp	w8, #0x1f
   310c4:	b.ls	31150 <PyInit__decimal@@Base+0x2a69c>  // b.plast
   310c8:	tbnz	w8, #4, 310d8 <PyInit__decimal@@Base+0x2a624>
   310cc:	ldr	x8, [x19, #1376]
   310d0:	add	x0, sp, #0x208
   310d4:	blr	x8
   310d8:	add	sp, sp, #0x900
   310dc:	ldp	x20, x19, [sp, #80]
   310e0:	ldp	x22, x21, [sp, #64]
   310e4:	ldp	x24, x23, [sp, #48]
   310e8:	ldp	x26, x25, [sp, #32]
   310ec:	ldp	x28, x27, [sp, #16]
   310f0:	ldp	x29, x30, [sp], #96
   310f4:	ret
   310f8:	ldr	x8, [x19, #1376]
   310fc:	ldr	x0, [sp, #1680]
   31100:	blr	x8
   31104:	ldrb	w8, [sp, #1640]
   31108:	tbnz	w8, #4, 310ac <PyInit__decimal@@Base+0x2a5f8>
   3110c:	ldr	x8, [x19, #1376]
   31110:	add	x0, sp, #0x668
   31114:	blr	x8
   31118:	ldrb	w8, [sp, #1080]
   3111c:	cmp	w8, #0x1f
   31120:	b.hi	310b8 <PyInit__decimal@@Base+0x2a604>  // b.pmore
   31124:	ldr	x8, [x19, #1376]
   31128:	ldr	x0, [sp, #1120]
   3112c:	blr	x8
   31130:	ldrb	w8, [sp, #1080]
   31134:	tbnz	w8, #4, 310bc <PyInit__decimal@@Base+0x2a608>
   31138:	ldr	x8, [x19, #1376]
   3113c:	add	x0, sp, #0x438
   31140:	blr	x8
   31144:	ldrb	w8, [sp, #520]
   31148:	cmp	w8, #0x1f
   3114c:	b.hi	310c8 <PyInit__decimal@@Base+0x2a614>  // b.pmore
   31150:	ldr	x8, [x19, #1376]
   31154:	ldr	x0, [sp, #560]
   31158:	blr	x8
   3115c:	ldrb	w8, [sp, #520]
   31160:	tbz	w8, #4, 310cc <PyInit__decimal@@Base+0x2a618>
   31164:	b	310d8 <PyInit__decimal@@Base+0x2a624>
   31168:	mov	w9, #0xe                   	// #14
   3116c:	b	30d08 <PyInit__decimal@@Base+0x2a254>
   31170:	mov	w9, #0x9                   	// #9
   31174:	b	30d08 <PyInit__decimal@@Base+0x2a254>
   31178:	ldr	x9, [x26, #112]
   3117c:	cmp	x9, x8
   31180:	b.ls	311bc <PyInit__decimal@@Base+0x2a708>  // b.plast
   31184:	ldr	x9, [x26, #88]
   31188:	cmp	x9, x8
   3118c:	b.ls	311f4 <PyInit__decimal@@Base+0x2a740>  // b.plast
   31190:	ldr	x9, [x26, #80]
   31194:	cmp	x9, x8
   31198:	mov	w8, #0xa                   	// #10
   3119c:	b	31248 <PyInit__decimal@@Base+0x2a794>
   311a0:	ldr	x9, [x26, #48]
   311a4:	cmp	x9, x8
   311a8:	b.ls	31210 <PyInit__decimal@@Base+0x2a75c>  // b.plast
   311ac:	ldr	x9, [x26, #40]
   311b0:	cmp	x9, x8
   311b4:	mov	w8, #0x5                   	// #5
   311b8:	b	31248 <PyInit__decimal@@Base+0x2a794>
   311bc:	ldr	x9, [x26, #144]
   311c0:	cmp	x9, x8
   311c4:	b.ls	3122c <PyInit__decimal@@Base+0x2a778>  // b.plast
   311c8:	ldr	x9, [x26, #128]
   311cc:	cmp	x9, x8
   311d0:	b.ls	3123c <PyInit__decimal@@Base+0x2a788>  // b.plast
   311d4:	ldr	x9, [x26, #120]
   311d8:	cmp	x9, x8
   311dc:	mov	w8, #0xf                   	// #15
   311e0:	b	31248 <PyInit__decimal@@Base+0x2a794>
   311e4:	ldr	x9, [x26, #24]
   311e8:	cmp	x9, x8
   311ec:	mov	w8, #0x3                   	// #3
   311f0:	b	31248 <PyInit__decimal@@Base+0x2a794>
   311f4:	ldr	x9, [x26, #104]
   311f8:	cmp	x9, x8
   311fc:	b.ls	31254 <PyInit__decimal@@Base+0x2a7a0>  // b.plast
   31200:	ldr	x9, [x26, #96]
   31204:	cmp	x9, x8
   31208:	mov	w8, #0xc                   	// #12
   3120c:	b	31248 <PyInit__decimal@@Base+0x2a794>
   31210:	ldr	x9, [x26, #64]
   31214:	cmp	x9, x8
   31218:	b.ls	31260 <PyInit__decimal@@Base+0x2a7ac>  // b.plast
   3121c:	ldr	x9, [x26, #56]
   31220:	cmp	x9, x8
   31224:	mov	w8, #0x7                   	// #7
   31228:	b	31248 <PyInit__decimal@@Base+0x2a794>
   3122c:	ldr	x9, [x26, #152]
   31230:	cmp	x9, x8
   31234:	mov	w8, #0x13                  	// #19
   31238:	b	31248 <PyInit__decimal@@Base+0x2a794>
   3123c:	ldr	x9, [x26, #136]
   31240:	cmp	x9, x8
   31244:	mov	w8, #0x11                  	// #17
   31248:	cinc	x8, x8, ls  // ls = plast
   3124c:	str	x8, [x20, #16]
   31250:	b	31088 <PyInit__decimal@@Base+0x2a5d4>
   31254:	mov	w8, #0xe                   	// #14
   31258:	str	x8, [x20, #16]
   3125c:	b	31088 <PyInit__decimal@@Base+0x2a5d4>
   31260:	mov	w8, #0x9                   	// #9
   31264:	str	x8, [x20, #16]
   31268:	b	31088 <PyInit__decimal@@Base+0x2a5d4>
   3126c:	stp	x29, x30, [sp, #-96]!
   31270:	str	x28, [sp, #16]
   31274:	stp	x26, x25, [sp, #32]
   31278:	stp	x24, x23, [sp, #48]
   3127c:	stp	x22, x21, [sp, #64]
   31280:	stp	x20, x19, [sp, #80]
   31284:	mov	x29, sp
   31288:	sub	sp, sp, #0x8f0
   3128c:	ldp	q1, q0, [x2, #16]
   31290:	ldr	q2, [x2]
   31294:	mov	w8, #0x6                   	// #6
   31298:	mov	x20, x3
   3129c:	stp	q1, q0, [x29, #-32]
   312a0:	stur	q2, [x29, #-48]
   312a4:	stur	w8, [x29, #-12]
   312a8:	ldrb	w10, [x1]
   312ac:	mov	x22, x2
   312b0:	mov	x21, x1
   312b4:	mov	x19, x0
   312b8:	tst	w10, #0xe
   312bc:	b.eq	31334 <PyInit__decimal@@Base+0x2a880>  // b.none
   312c0:	mov	x0, x19
   312c4:	mov	x1, x21
   312c8:	mov	x2, x22
   312cc:	mov	x3, x20
   312d0:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   312d4:	cbnz	w0, 31828 <PyInit__decimal@@Base+0x2ad74>
   312d8:	ldrb	w9, [x21]
   312dc:	ldrb	w8, [x19]
   312e0:	tbnz	w9, #0, 313e0 <PyInit__decimal@@Base+0x2a92c>
   312e4:	tbnz	w8, #5, 31328 <PyInit__decimal@@Base+0x2a874>
   312e8:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   312ec:	ldr	x9, [x19, #32]
   312f0:	ldr	x1, [x20, #1344]
   312f4:	cmp	x9, x1
   312f8:	b.le	31328 <PyInit__decimal@@Base+0x2a874>
   312fc:	strb	wzr, [sp, #1728]
   31300:	ldr	x0, [x19, #40]
   31304:	add	x3, sp, #0x6c0
   31308:	mov	w2, #0x8                   	// #8
   3130c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   31310:	str	x0, [x19, #40]
   31314:	ldrb	w8, [sp, #1728]
   31318:	cbnz	w8, 31324 <PyInit__decimal@@Base+0x2a870>
   3131c:	ldr	x8, [x20, #1344]
   31320:	str	x8, [x19, #32]
   31324:	ldrb	w8, [x19]
   31328:	and	w8, w8, #0xf0
   3132c:	str	xzr, [x19, #24]
   31330:	b	3181c <PyInit__decimal@@Base+0x2ad68>
   31334:	ldr	x1, [x21, #40]
   31338:	ldr	x9, [x21, #24]
   3133c:	add	x8, x1, x9, lsl #3
   31340:	ldur	x8, [x8, #-8]
   31344:	cbz	x8, 31388 <PyInit__decimal@@Base+0x2a8d4>
   31348:	tbnz	w10, #0, 313e8 <PyInit__decimal@@Base+0x2a934>
   3134c:	adrp	x23, 44000 <PyInit__decimal@@Base+0x3d54c>
   31350:	add	x23, x23, #0xca0
   31354:	ldr	x25, [x23, #72]
   31358:	cmp	x25, x8
   3135c:	b.ls	31454 <PyInit__decimal@@Base+0x2a9a0>  // b.plast
   31360:	ldr	x11, [x23, #32]
   31364:	cmp	x11, x8
   31368:	b.ls	3147c <PyInit__decimal@@Base+0x2a9c8>  // b.plast
   3136c:	ldr	x11, [x23, #16]
   31370:	cmp	x11, x8
   31374:	b.ls	314c0 <PyInit__decimal@@Base+0x2aa0c>  // b.plast
   31378:	ldr	x11, [x23, #8]
   3137c:	cmp	x11, x8
   31380:	mov	w11, #0x1                   	// #1
   31384:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   31388:	ldrb	w8, [x19]
   3138c:	tbnz	w8, #5, 313d0 <PyInit__decimal@@Base+0x2a91c>
   31390:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   31394:	ldr	x9, [x19, #32]
   31398:	ldr	x1, [x20, #1344]
   3139c:	cmp	x9, x1
   313a0:	b.le	313d0 <PyInit__decimal@@Base+0x2a91c>
   313a4:	strb	wzr, [sp, #1728]
   313a8:	ldr	x0, [x19, #40]
   313ac:	add	x3, sp, #0x6c0
   313b0:	mov	w2, #0x8                   	// #8
   313b4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   313b8:	str	x0, [x19, #40]
   313bc:	ldrb	w8, [sp, #1728]
   313c0:	cbnz	w8, 313cc <PyInit__decimal@@Base+0x2a918>
   313c4:	ldr	x8, [x20, #1344]
   313c8:	str	x8, [x19, #32]
   313cc:	ldrb	w8, [x19]
   313d0:	and	w8, w8, #0xf0
   313d4:	str	xzr, [x19, #24]
   313d8:	orr	w8, w8, #0x3
   313dc:	b	31820 <PyInit__decimal@@Base+0x2ad6c>
   313e0:	tbz	w8, #5, 313f0 <PyInit__decimal@@Base+0x2a93c>
   313e4:	b	31430 <PyInit__decimal@@Base+0x2a97c>
   313e8:	ldrb	w8, [x19]
   313ec:	tbnz	w8, #5, 31430 <PyInit__decimal@@Base+0x2a97c>
   313f0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   313f4:	ldr	x9, [x19, #32]
   313f8:	ldr	x1, [x21, #1344]
   313fc:	cmp	x9, x1
   31400:	b.le	31430 <PyInit__decimal@@Base+0x2a97c>
   31404:	strb	wzr, [sp, #1728]
   31408:	ldr	x0, [x19, #40]
   3140c:	add	x3, sp, #0x6c0
   31410:	mov	w2, #0x8                   	// #8
   31414:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   31418:	str	x0, [x19, #40]
   3141c:	ldrb	w8, [sp, #1728]
   31420:	cbnz	w8, 3142c <PyInit__decimal@@Base+0x2a978>
   31424:	ldr	x8, [x21, #1344]
   31428:	str	x8, [x19, #32]
   3142c:	ldrb	w8, [x19]
   31430:	and	w8, w8, #0xf0
   31434:	orr	w8, w8, #0x4
   31438:	stp	xzr, xzr, [x19, #16]
   3143c:	strb	w8, [x19]
   31440:	str	xzr, [x19, #8]
   31444:	ldr	w8, [x20]
   31448:	orr	w8, w8, #0x100
   3144c:	str	w8, [x20]
   31450:	b	31828 <PyInit__decimal@@Base+0x2ad74>
   31454:	ldr	x11, [x23, #112]
   31458:	cmp	x11, x8
   3145c:	b.ls	31498 <PyInit__decimal@@Base+0x2a9e4>  // b.plast
   31460:	ldr	x11, [x23, #88]
   31464:	cmp	x11, x8
   31468:	b.ls	314d0 <PyInit__decimal@@Base+0x2aa1c>  // b.plast
   3146c:	ldr	x11, [x23, #80]
   31470:	cmp	x11, x8
   31474:	mov	w11, #0xa                   	// #10
   31478:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   3147c:	ldr	x11, [x23, #48]
   31480:	cmp	x11, x8
   31484:	b.ls	314ec <PyInit__decimal@@Base+0x2aa38>  // b.plast
   31488:	ldr	x11, [x23, #40]
   3148c:	cmp	x11, x8
   31490:	mov	w11, #0x5                   	// #5
   31494:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   31498:	ldr	x11, [x23, #144]
   3149c:	cmp	x11, x8
   314a0:	b.ls	31508 <PyInit__decimal@@Base+0x2aa54>  // b.plast
   314a4:	ldr	x11, [x23, #128]
   314a8:	cmp	x11, x8
   314ac:	b.ls	31518 <PyInit__decimal@@Base+0x2aa64>  // b.plast
   314b0:	ldr	x11, [x23, #120]
   314b4:	cmp	x11, x8
   314b8:	mov	w11, #0xf                   	// #15
   314bc:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   314c0:	ldr	x11, [x23, #24]
   314c4:	cmp	x11, x8
   314c8:	mov	w11, #0x3                   	// #3
   314cc:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   314d0:	ldr	x11, [x23, #104]
   314d4:	cmp	x11, x8
   314d8:	b.ls	31784 <PyInit__decimal@@Base+0x2acd0>  // b.plast
   314dc:	ldr	x11, [x23, #96]
   314e0:	cmp	x11, x8
   314e4:	mov	w11, #0xc                   	// #12
   314e8:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   314ec:	ldr	x11, [x23, #64]
   314f0:	cmp	x11, x8
   314f4:	b.ls	3178c <PyInit__decimal@@Base+0x2acd8>  // b.plast
   314f8:	ldr	x11, [x23, #56]
   314fc:	cmp	x11, x8
   31500:	mov	w11, #0x7                   	// #7
   31504:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   31508:	ldr	x11, [x23, #152]
   3150c:	cmp	x11, x8
   31510:	mov	w11, #0x13                  	// #19
   31514:	b	31524 <PyInit__decimal@@Base+0x2aa70>
   31518:	ldr	x11, [x23, #136]
   3151c:	cmp	x11, x8
   31520:	mov	w11, #0x11                  	// #17
   31524:	cinc	x11, x11, ls  // ls = plast
   31528:	add	x11, x23, x11, lsl #3
   3152c:	ldur	x11, [x11, #-8]
   31530:	cmp	x11, x8
   31534:	b.ne	3154c <PyInit__decimal@@Base+0x2aa98>  // b.any
   31538:	sub	x8, x9, #0x2
   3153c:	tbnz	x8, #63, 315c4 <PyInit__decimal@@Base+0x2ab10>
   31540:	ldr	x11, [x1, x8, lsl #3]
   31544:	sub	x8, x8, #0x1
   31548:	cbz	x11, 3153c <PyInit__decimal@@Base+0x2aa88>
   3154c:	mov	x24, x21
   31550:	ldr	x11, [x24, #8]!
   31554:	ldr	x12, [x24, #8]
   31558:	add	x8, x11, x12
   3155c:	sub	x26, x8, #0x1
   31560:	eor	x8, x26, x26, asr #63
   31564:	cmp	x8, #0x0
   31568:	cneg	x8, x8, mi  // mi = first
   3156c:	cmp	x25, x8
   31570:	b.ls	3159c <PyInit__decimal@@Base+0x2aae8>  // b.plast
   31574:	ldr	x13, [x23, #32]
   31578:	cmp	x13, x8
   3157c:	b.ls	3167c <PyInit__decimal@@Base+0x2abc8>  // b.plast
   31580:	ldr	x13, [x23, #16]
   31584:	cmp	x13, x8
   31588:	b.ls	316e8 <PyInit__decimal@@Base+0x2ac34>  // b.plast
   3158c:	ldr	x13, [x23, #8]
   31590:	cmp	x13, x8
   31594:	mov	w8, #0x1                   	// #1
   31598:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   3159c:	ldr	x13, [x23, #112]
   315a0:	cmp	x13, x8
   315a4:	b.ls	31698 <PyInit__decimal@@Base+0x2abe4>  // b.plast
   315a8:	ldr	x13, [x23, #88]
   315ac:	cmp	x13, x8
   315b0:	b.ls	316f8 <PyInit__decimal@@Base+0x2ac44>  // b.plast
   315b4:	ldr	x13, [x23, #80]
   315b8:	cmp	x13, x8
   315bc:	mov	w8, #0xa                   	// #10
   315c0:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   315c4:	ldp	x9, x10, [x21, #8]
   315c8:	ldrb	w8, [x19]
   315cc:	mov	w11, #0x1                   	// #1
   315d0:	add	x9, x9, x10
   315d4:	subs	x22, x9, #0x1
   315d8:	sub	x9, x11, x9
   315dc:	csel	x21, x22, x9, pl  // pl = nfrst
   315e0:	tbnz	w8, #5, 31624 <PyInit__decimal@@Base+0x2ab70>
   315e4:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   315e8:	ldr	x9, [x19, #32]
   315ec:	ldr	x1, [x24, #1344]
   315f0:	cmp	x9, x1
   315f4:	b.le	31624 <PyInit__decimal@@Base+0x2ab70>
   315f8:	strb	wzr, [sp, #1728]
   315fc:	ldr	x0, [x19, #40]
   31600:	add	x3, sp, #0x6c0
   31604:	mov	w2, #0x8                   	// #8
   31608:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3160c:	str	x0, [x19, #40]
   31610:	ldrb	w8, [sp, #1728]
   31614:	cbnz	w8, 31620 <PyInit__decimal@@Base+0x2ab6c>
   31618:	ldr	x8, [x24, #1344]
   3161c:	str	x8, [x19, #32]
   31620:	ldrb	w8, [x19]
   31624:	ldr	x10, [x19, #40]
   31628:	lsr	x9, x22, #63
   3162c:	and	w8, w8, #0xf0
   31630:	mov	w11, #0x1                   	// #1
   31634:	orr	w8, w8, w9
   31638:	str	xzr, [x19, #8]
   3163c:	strb	w8, [x19]
   31640:	stp	x21, xzr, [x10]
   31644:	str	x11, [x19, #24]
   31648:	ldr	x8, [x10]
   3164c:	cmp	x25, x8
   31650:	b.ls	316c0 <PyInit__decimal@@Base+0x2ac0c>  // b.plast
   31654:	ldr	x9, [x23, #32]
   31658:	cmp	x9, x8
   3165c:	b.ls	31740 <PyInit__decimal@@Base+0x2ac8c>  // b.plast
   31660:	ldr	x9, [x23, #16]
   31664:	cmp	x9, x8
   31668:	b.ls	31c24 <PyInit__decimal@@Base+0x2b170>  // b.plast
   3166c:	ldr	x9, [x23, #8]
   31670:	cmp	x9, x8
   31674:	mov	w8, #0x1                   	// #1
   31678:	b	31cec <PyInit__decimal@@Base+0x2b238>
   3167c:	ldr	x13, [x23, #48]
   31680:	cmp	x13, x8
   31684:	b.ls	31714 <PyInit__decimal@@Base+0x2ac60>  // b.plast
   31688:	ldr	x13, [x23, #40]
   3168c:	cmp	x13, x8
   31690:	mov	w8, #0x5                   	// #5
   31694:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   31698:	ldr	x13, [x23, #144]
   3169c:	cmp	x13, x8
   316a0:	b.ls	31730 <PyInit__decimal@@Base+0x2ac7c>  // b.plast
   316a4:	ldr	x13, [x23, #128]
   316a8:	cmp	x13, x8
   316ac:	b.ls	31794 <PyInit__decimal@@Base+0x2ace0>  // b.plast
   316b0:	ldr	x13, [x23, #120]
   316b4:	cmp	x13, x8
   316b8:	mov	w8, #0xf                   	// #15
   316bc:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   316c0:	ldr	x9, [x23, #112]
   316c4:	cmp	x9, x8
   316c8:	b.ls	3175c <PyInit__decimal@@Base+0x2aca8>  // b.plast
   316cc:	ldr	x9, [x23, #88]
   316d0:	cmp	x9, x8
   316d4:	b.ls	31c34 <PyInit__decimal@@Base+0x2b180>  // b.plast
   316d8:	ldr	x9, [x23, #80]
   316dc:	cmp	x9, x8
   316e0:	mov	w8, #0xa                   	// #10
   316e4:	b	31cec <PyInit__decimal@@Base+0x2b238>
   316e8:	ldr	x13, [x23, #24]
   316ec:	cmp	x13, x8
   316f0:	mov	w8, #0x3                   	// #3
   316f4:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   316f8:	ldr	x13, [x23, #104]
   316fc:	cmp	x13, x8
   31700:	b.ls	31c14 <PyInit__decimal@@Base+0x2b160>  // b.plast
   31704:	ldr	x13, [x23, #96]
   31708:	cmp	x13, x8
   3170c:	mov	w8, #0xc                   	// #12
   31710:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   31714:	ldr	x13, [x23, #64]
   31718:	cmp	x13, x8
   3171c:	b.ls	31c1c <PyInit__decimal@@Base+0x2b168>  // b.plast
   31720:	ldr	x13, [x23, #56]
   31724:	cmp	x13, x8
   31728:	mov	w8, #0x7                   	// #7
   3172c:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   31730:	ldr	x13, [x23, #152]
   31734:	cmp	x13, x8
   31738:	mov	w8, #0x13                  	// #19
   3173c:	b	317a0 <PyInit__decimal@@Base+0x2acec>
   31740:	ldr	x9, [x23, #48]
   31744:	cmp	x9, x8
   31748:	b.ls	31c50 <PyInit__decimal@@Base+0x2b19c>  // b.plast
   3174c:	ldr	x9, [x23, #40]
   31750:	cmp	x9, x8
   31754:	mov	w8, #0x5                   	// #5
   31758:	b	31cec <PyInit__decimal@@Base+0x2b238>
   3175c:	ldr	x9, [x23, #144]
   31760:	cmp	x9, x8
   31764:	b.ls	31c6c <PyInit__decimal@@Base+0x2b1b8>  // b.plast
   31768:	ldr	x9, [x23, #128]
   3176c:	cmp	x9, x8
   31770:	b.ls	31ce0 <PyInit__decimal@@Base+0x2b22c>  // b.plast
   31774:	ldr	x9, [x23, #120]
   31778:	cmp	x9, x8
   3177c:	mov	w8, #0xf                   	// #15
   31780:	b	31cec <PyInit__decimal@@Base+0x2b238>
   31784:	mov	w11, #0xe                   	// #14
   31788:	b	31528 <PyInit__decimal@@Base+0x2aa74>
   3178c:	mov	w11, #0x9                   	// #9
   31790:	b	31528 <PyInit__decimal@@Base+0x2aa74>
   31794:	ldr	x13, [x23, #136]
   31798:	cmp	x13, x8
   3179c:	mov	w8, #0x11                  	// #17
   317a0:	cinc	x8, x8, ls  // ls = plast
   317a4:	ldr	x13, [x22, #8]
   317a8:	sub	x8, x8, #0x1
   317ac:	cmp	x13, x8
   317b0:	b.ge	31848 <PyInit__decimal@@Base+0x2ad94>  // b.tcont
   317b4:	ldr	w8, [x20]
   317b8:	mov	w9, #0x1840                	// #6208
   317bc:	orr	w8, w8, w9
   317c0:	str	w8, [x20]
   317c4:	ldrb	w8, [x19]
   317c8:	tbnz	w8, #5, 3180c <PyInit__decimal@@Base+0x2ad58>
   317cc:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   317d0:	ldr	x9, [x19, #32]
   317d4:	ldr	x1, [x20, #1344]
   317d8:	cmp	x9, x1
   317dc:	b.le	3180c <PyInit__decimal@@Base+0x2ad58>
   317e0:	strb	wzr, [sp, #1728]
   317e4:	ldr	x0, [x19, #40]
   317e8:	add	x3, sp, #0x6c0
   317ec:	mov	w2, #0x8                   	// #8
   317f0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   317f4:	str	x0, [x19, #40]
   317f8:	ldrb	w8, [sp, #1728]
   317fc:	cbnz	w8, 31808 <PyInit__decimal@@Base+0x2ad54>
   31800:	ldr	x8, [x20, #1344]
   31804:	str	x8, [x19, #32]
   31808:	ldrb	w8, [x19]
   3180c:	lsr	x9, x26, #63
   31810:	and	w8, w8, #0xf0
   31814:	str	xzr, [x19, #24]
   31818:	orr	w8, w8, w9
   3181c:	orr	w8, w8, #0x2
   31820:	strb	w8, [x19]
   31824:	stp	xzr, xzr, [x19, #8]
   31828:	add	sp, sp, #0x8f0
   3182c:	ldp	x20, x19, [sp, #80]
   31830:	ldp	x22, x21, [sp, #64]
   31834:	ldp	x24, x23, [sp, #48]
   31838:	ldp	x26, x25, [sp, #32]
   3183c:	ldr	x28, [sp, #16]
   31840:	ldp	x29, x30, [sp], #96
   31844:	ret
   31848:	ldr	w8, [x22, #44]
   3184c:	cbz	w8, 31924 <PyInit__decimal@@Base+0x2ae70>
   31850:	mov	w8, #0x30                  	// #48
   31854:	add	x14, sp, #0x6c0
   31858:	str	x14, [sp, #1720]
   3185c:	add	x14, sp, #0x490
   31860:	strb	w8, [sp, #1680]
   31864:	strb	w8, [sp, #1120]
   31868:	strb	w8, [sp, #560]
   3186c:	strb	w8, [sp]
   31870:	mov	x8, sp
   31874:	str	x14, [sp, #1160]
   31878:	add	x14, sp, #0x260
   3187c:	cmp	x8, x21
   31880:	mov	w13, #0x40                  	// #64
   31884:	str	x14, [sp, #600]
   31888:	add	x14, sp, #0x30
   3188c:	cset	w8, eq  // eq = none
   31890:	cmp	x19, x21
   31894:	str	xzr, [sp, #1688]
   31898:	str	xzr, [sp, #1696]
   3189c:	str	xzr, [sp, #1128]
   318a0:	str	xzr, [sp, #1136]
   318a4:	str	xzr, [sp, #568]
   318a8:	str	xzr, [sp, #576]
   318ac:	stp	xzr, xzr, [sp, #8]
   318b0:	str	xzr, [sp, #1704]
   318b4:	str	x13, [sp, #1712]
   318b8:	str	xzr, [sp, #1144]
   318bc:	str	x13, [sp, #1152]
   318c0:	str	xzr, [sp, #584]
   318c4:	str	x13, [sp, #592]
   318c8:	stp	xzr, x13, [sp, #24]
   318cc:	str	x14, [sp, #40]
   318d0:	b.ne	319bc <PyInit__decimal@@Base+0x2af08>  // b.any
   318d4:	tbnz	w8, #0, 319bc <PyInit__decimal@@Base+0x2af08>
   318d8:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   318dc:	ldr	x8, [x23, #1344]
   318e0:	cmp	x8, x9
   318e4:	csel	x8, x9, x8, lt  // lt = tstop
   318e8:	cmp	x8, #0x41
   318ec:	b.lt	31994 <PyInit__decimal@@Base+0x2aee0>  // b.tstop
   318f0:	mov	x0, sp
   318f4:	mov	x1, x8
   318f8:	mov	x2, x20
   318fc:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   31900:	cbz	w0, 31c7c <PyInit__decimal@@Base+0x2b1c8>
   31904:	ldrb	w8, [sp]
   31908:	ldp	x12, x9, [x21, #16]
   3190c:	ldrb	w10, [x21]
   31910:	ldr	x11, [x21, #8]
   31914:	ldr	x0, [sp, #40]
   31918:	ldr	x1, [x21, #40]
   3191c:	and	w8, w8, #0xfffffff0
   31920:	b	3199c <PyInit__decimal@@Base+0x2aee8>
   31924:	sub	x3, x29, #0x30
   31928:	mov	w0, #0x1                   	// #1
   3192c:	mov	x1, x19
   31930:	mov	x2, x21
   31934:	mov	x4, x20
   31938:	bl	31d18 <PyInit__decimal@@Base+0x2b264>
   3193c:	ldp	x8, x10, [x19, #8]
   31940:	ldur	x9, [x29, #-32]
   31944:	add	x10, x8, x10
   31948:	sub	x10, x10, #0x1
   3194c:	cmp	x10, x9
   31950:	b.ge	31828 <PyInit__decimal@@Base+0x2ad74>  // b.tcont
   31954:	ldrb	w11, [x19]
   31958:	ldur	x10, [x29, #-48]
   3195c:	tst	w11, #0xe
   31960:	b.ne	31978 <PyInit__decimal@@Base+0x2aec4>  // b.any
   31964:	ldr	x11, [x19, #40]
   31968:	ldr	x12, [x19, #24]
   3196c:	add	x11, x11, x12, lsl #3
   31970:	ldur	x11, [x11, #-8]
   31974:	cbz	x11, 31828 <PyInit__decimal@@Base+0x2ad74>
   31978:	sub	x9, x9, x10
   3197c:	add	x9, x9, #0x1
   31980:	cmp	x8, x9
   31984:	b.ge	31828 <PyInit__decimal@@Base+0x2ad74>  // b.tcont
   31988:	ldr	w8, [x20]
   3198c:	orr	w8, w8, #0x4000
   31990:	b	3144c <PyInit__decimal@@Base+0x2a998>
   31994:	add	x0, sp, #0x30
   31998:	mov	w8, #0x30                  	// #48
   3199c:	and	w10, w10, #0xf
   319a0:	orr	w8, w8, w10
   319a4:	lsl	x2, x9, #3
   319a8:	stp	x11, x12, [sp, #8]
   319ac:	str	x9, [sp, #24]
   319b0:	strb	w8, [sp]
   319b4:	bl	63c0 <memcpy@plt>
   319b8:	mov	x21, sp
   319bc:	stur	wzr, [x29, #-8]
   319c0:	ldr	x8, [x22]
   319c4:	sub	x9, x29, #0x30
   319c8:	add	x23, x9, #0x1c
   319cc:	add	x24, x8, #0x3
   319d0:	b	319e4 <PyInit__decimal@@Base+0x2af30>
   319d4:	ldr	w8, [x20]
   319d8:	orr	w8, w8, #0x100
   319dc:	str	w8, [x20]
   319e0:	add	x24, x24, #0x13
   319e4:	sub	x3, x29, #0x30
   319e8:	mov	w0, wzr
   319ec:	mov	x1, x19
   319f0:	mov	x2, x21
   319f4:	mov	x4, x20
   319f8:	stur	x24, [x29, #-48]
   319fc:	bl	31d18 <PyInit__decimal@@Base+0x2b264>
   31a00:	ldp	x8, x9, [x19, #8]
   31a04:	ldur	x10, [x29, #-48]
   31a08:	add	x0, sp, #0x230
   31a0c:	mov	w2, #0x1                   	// #1
   31a10:	add	x8, x9, x8
   31a14:	sub	x3, x8, x10
   31a18:	mov	w1, wzr
   31a1c:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   31a20:	ldr	x8, [x22]
   31a24:	add	x0, sp, #0x690
   31a28:	add	x2, sp, #0x230
   31a2c:	sub	x3, x29, #0x30
   31a30:	mov	x1, x19
   31a34:	mov	x4, x23
   31a38:	stur	x8, [x29, #-48]
   31a3c:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   31a40:	add	x0, sp, #0x460
   31a44:	add	x2, sp, #0x230
   31a48:	sub	x3, x29, #0x30
   31a4c:	mov	x1, x19
   31a50:	mov	x4, x23
   31a54:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   31a58:	ldrb	w8, [x19]
   31a5c:	tst	w8, #0xe
   31a60:	b.ne	31ab4 <PyInit__decimal@@Base+0x2b000>  // b.any
   31a64:	ldr	x8, [x19, #40]
   31a68:	ldr	x9, [x19, #24]
   31a6c:	add	x8, x8, x9, lsl #3
   31a70:	ldur	x8, [x8, #-8]
   31a74:	cbz	x8, 31ab4 <PyInit__decimal@@Base+0x2b000>
   31a78:	ldrb	w8, [sp, #1680]
   31a7c:	tst	w8, #0xe
   31a80:	b.ne	31a90 <PyInit__decimal@@Base+0x2afdc>  // b.any
   31a84:	ldrb	w9, [sp, #1120]
   31a88:	tst	w9, #0xe
   31a8c:	b.eq	31aa4 <PyInit__decimal@@Base+0x2aff0>  // b.none
   31a90:	tst	w8, #0xc
   31a94:	b.ne	319d4 <PyInit__decimal@@Base+0x2af20>  // b.any
   31a98:	ldrb	w8, [sp, #1120]
   31a9c:	tst	w8, #0xc
   31aa0:	b.ne	319d4 <PyInit__decimal@@Base+0x2af20>  // b.any
   31aa4:	add	x0, sp, #0x690
   31aa8:	add	x1, sp, #0x460
   31aac:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   31ab0:	cbnz	w0, 319e0 <PyInit__decimal@@Base+0x2af2c>
   31ab4:	ldr	w8, [x22, #40]
   31ab8:	ldur	x9, [x29, #-32]
   31abc:	stur	w8, [x29, #-8]
   31ac0:	ldp	x8, x10, [x19, #8]
   31ac4:	add	x10, x8, x10
   31ac8:	sub	x10, x10, #0x1
   31acc:	cmp	x10, x9
   31ad0:	b.ge	31b14 <PyInit__decimal@@Base+0x2b060>  // b.tcont
   31ad4:	ldrb	w11, [x19]
   31ad8:	ldur	x10, [x29, #-48]
   31adc:	tst	w11, #0xe
   31ae0:	b.ne	31af8 <PyInit__decimal@@Base+0x2b044>  // b.any
   31ae4:	ldr	x11, [x19, #40]
   31ae8:	ldr	x12, [x19, #24]
   31aec:	add	x11, x11, x12, lsl #3
   31af0:	ldur	x11, [x11, #-8]
   31af4:	cbz	x11, 31b14 <PyInit__decimal@@Base+0x2b060>
   31af8:	sub	x9, x9, x10
   31afc:	add	x9, x9, #0x1
   31b00:	cmp	x8, x9
   31b04:	b.ge	31b14 <PyInit__decimal@@Base+0x2b060>  // b.tcont
   31b08:	ldr	w8, [x20]
   31b0c:	orr	w8, w8, #0x4000
   31b10:	str	w8, [x20]
   31b14:	sub	x1, x29, #0x30
   31b18:	mov	x0, x19
   31b1c:	mov	x2, x20
   31b20:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   31b24:	ldrb	w8, [sp, #1680]
   31b28:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   31b2c:	cmp	w8, #0x1f
   31b30:	b.ls	31b6c <PyInit__decimal@@Base+0x2b0b8>  // b.plast
   31b34:	tbz	w8, #4, 31b80 <PyInit__decimal@@Base+0x2b0cc>
   31b38:	ldrb	w8, [sp, #1120]
   31b3c:	cmp	w8, #0x1f
   31b40:	b.ls	31b98 <PyInit__decimal@@Base+0x2b0e4>  // b.plast
   31b44:	tbz	w8, #4, 31bac <PyInit__decimal@@Base+0x2b0f8>
   31b48:	ldrb	w8, [sp, #560]
   31b4c:	cmp	w8, #0x1f
   31b50:	b.ls	31bc4 <PyInit__decimal@@Base+0x2b110>  // b.plast
   31b54:	tbz	w8, #4, 31bd8 <PyInit__decimal@@Base+0x2b124>
   31b58:	ldrb	w8, [sp]
   31b5c:	cmp	w8, #0x1f
   31b60:	b.ls	31bf0 <PyInit__decimal@@Base+0x2b13c>  // b.plast
   31b64:	tbnz	w8, #4, 31828 <PyInit__decimal@@Base+0x2ad74>
   31b68:	b	31c04 <PyInit__decimal@@Base+0x2b150>
   31b6c:	ldr	x8, [x19, #1376]
   31b70:	ldr	x0, [sp, #1720]
   31b74:	blr	x8
   31b78:	ldrb	w8, [sp, #1680]
   31b7c:	tbnz	w8, #4, 31b38 <PyInit__decimal@@Base+0x2b084>
   31b80:	ldr	x8, [x19, #1376]
   31b84:	add	x0, sp, #0x690
   31b88:	blr	x8
   31b8c:	ldrb	w8, [sp, #1120]
   31b90:	cmp	w8, #0x1f
   31b94:	b.hi	31b44 <PyInit__decimal@@Base+0x2b090>  // b.pmore
   31b98:	ldr	x8, [x19, #1376]
   31b9c:	ldr	x0, [sp, #1160]
   31ba0:	blr	x8
   31ba4:	ldrb	w8, [sp, #1120]
   31ba8:	tbnz	w8, #4, 31b48 <PyInit__decimal@@Base+0x2b094>
   31bac:	ldr	x8, [x19, #1376]
   31bb0:	add	x0, sp, #0x460
   31bb4:	blr	x8
   31bb8:	ldrb	w8, [sp, #560]
   31bbc:	cmp	w8, #0x1f
   31bc0:	b.hi	31b54 <PyInit__decimal@@Base+0x2b0a0>  // b.pmore
   31bc4:	ldr	x8, [x19, #1376]
   31bc8:	ldr	x0, [sp, #600]
   31bcc:	blr	x8
   31bd0:	ldrb	w8, [sp, #560]
   31bd4:	tbnz	w8, #4, 31b58 <PyInit__decimal@@Base+0x2b0a4>
   31bd8:	ldr	x8, [x19, #1376]
   31bdc:	add	x0, sp, #0x230
   31be0:	blr	x8
   31be4:	ldrb	w8, [sp]
   31be8:	cmp	w8, #0x1f
   31bec:	b.hi	31b64 <PyInit__decimal@@Base+0x2b0b0>  // b.pmore
   31bf0:	ldr	x8, [x19, #1376]
   31bf4:	ldr	x0, [sp, #40]
   31bf8:	blr	x8
   31bfc:	ldrb	w8, [sp]
   31c00:	tbnz	w8, #4, 31828 <PyInit__decimal@@Base+0x2ad74>
   31c04:	ldr	x8, [x19, #1376]
   31c08:	mov	x0, sp
   31c0c:	blr	x8
   31c10:	b	31828 <PyInit__decimal@@Base+0x2ad74>
   31c14:	mov	w8, #0xe                   	// #14
   31c18:	b	317a4 <PyInit__decimal@@Base+0x2acf0>
   31c1c:	mov	w8, #0x9                   	// #9
   31c20:	b	317a4 <PyInit__decimal@@Base+0x2acf0>
   31c24:	ldr	x9, [x23, #24]
   31c28:	cmp	x9, x8
   31c2c:	mov	w8, #0x3                   	// #3
   31c30:	b	31cec <PyInit__decimal@@Base+0x2b238>
   31c34:	ldr	x9, [x23, #104]
   31c38:	cmp	x9, x8
   31c3c:	b.ls	31d08 <PyInit__decimal@@Base+0x2b254>  // b.plast
   31c40:	ldr	x9, [x23, #96]
   31c44:	cmp	x9, x8
   31c48:	mov	w8, #0xc                   	// #12
   31c4c:	b	31cec <PyInit__decimal@@Base+0x2b238>
   31c50:	ldr	x9, [x23, #64]
   31c54:	cmp	x9, x8
   31c58:	b.ls	31d10 <PyInit__decimal@@Base+0x2b25c>  // b.plast
   31c5c:	ldr	x9, [x23, #56]
   31c60:	cmp	x9, x8
   31c64:	mov	w8, #0x7                   	// #7
   31c68:	b	31cec <PyInit__decimal@@Base+0x2b238>
   31c6c:	ldr	x9, [x23, #152]
   31c70:	cmp	x9, x8
   31c74:	mov	w8, #0x13                  	// #19
   31c78:	b	31cec <PyInit__decimal@@Base+0x2b238>
   31c7c:	ldrb	w8, [x21]
   31c80:	tbnz	w8, #5, 31cc0 <PyInit__decimal@@Base+0x2b20c>
   31c84:	ldr	x9, [x21, #32]
   31c88:	ldr	x1, [x23, #1344]
   31c8c:	cmp	x9, x1
   31c90:	b.le	31cc0 <PyInit__decimal@@Base+0x2b20c>
   31c94:	strb	wzr, [x29, #28]
   31c98:	ldr	x0, [x21, #40]
   31c9c:	add	x3, x29, #0x1c
   31ca0:	mov	w2, #0x8                   	// #8
   31ca4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   31ca8:	str	x0, [x21, #40]
   31cac:	ldrb	w8, [x29, #28]
   31cb0:	cbnz	w8, 31cbc <PyInit__decimal@@Base+0x2b208>
   31cb4:	ldr	x8, [x23, #1344]
   31cb8:	str	x8, [x21, #32]
   31cbc:	ldrb	w8, [x21]
   31cc0:	and	w8, w8, #0xf0
   31cc4:	orr	w8, w8, #0x4
   31cc8:	strb	w8, [x21]
   31ccc:	stp	xzr, xzr, [x24]
   31cd0:	str	xzr, [x24, #16]
   31cd4:	ldr	w8, [x20]
   31cd8:	orr	w8, w8, #0x200
   31cdc:	b	3144c <PyInit__decimal@@Base+0x2a998>
   31ce0:	ldr	x9, [x23, #136]
   31ce4:	cmp	x9, x8
   31ce8:	mov	w8, #0x11                  	// #17
   31cec:	cinc	x8, x8, ls  // ls = plast
   31cf0:	sub	x1, x29, #0x30
   31cf4:	mov	x0, x19
   31cf8:	mov	x2, x20
   31cfc:	str	x8, [x19, #16]
   31d00:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   31d04:	b	31828 <PyInit__decimal@@Base+0x2ad74>
   31d08:	mov	w8, #0xe                   	// #14
   31d0c:	b	31cf0 <PyInit__decimal@@Base+0x2b23c>
   31d10:	mov	w8, #0x9                   	// #9
   31d14:	b	31cf0 <PyInit__decimal@@Base+0x2b23c>
   31d18:	stp	x29, x30, [sp, #-64]!
   31d1c:	stp	x28, x23, [sp, #16]
   31d20:	stp	x22, x21, [sp, #32]
   31d24:	stp	x20, x19, [sp, #48]
   31d28:	mov	x29, sp
   31d2c:	sub	sp, sp, #0x260
   31d30:	mov	w23, w0
   31d34:	mov	w8, #0x30                  	// #48
   31d38:	mov	w9, #0x40                  	// #64
   31d3c:	add	x10, sp, #0x30
   31d40:	sub	x0, x29, #0x30
   31d44:	mov	x19, x4
   31d48:	mov	x21, x3
   31d4c:	mov	x22, x2
   31d50:	mov	x20, x1
   31d54:	stp	xzr, xzr, [sp, #8]
   31d58:	strb	w8, [sp]
   31d5c:	stp	xzr, x9, [sp, #24]
   31d60:	str	x10, [sp, #40]
   31d64:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   31d68:	ldr	x8, [x21]
   31d6c:	sub	x2, x29, #0x30
   31d70:	mov	x0, x20
   31d74:	mov	x1, x22
   31d78:	add	x8, x8, #0x3
   31d7c:	mov	x3, x19
   31d80:	stur	x8, [x29, #-48]
   31d84:	bl	30964 <PyInit__decimal@@Base+0x29eb0>
   31d88:	ldur	x1, [x29, #-48]
   31d8c:	mov	x0, sp
   31d90:	mov	x2, x19
   31d94:	bl	2fa6c <PyInit__decimal@@Base+0x28fb8>
   31d98:	cmp	w23, #0x1
   31d9c:	b.ne	31db8 <PyInit__decimal@@Base+0x2b304>  // b.any
   31da0:	ldp	q1, q0, [x21, #16]
   31da4:	ldr	q2, [x21]
   31da8:	mov	w8, #0x6                   	// #6
   31dac:	stp	q1, q0, [x29, #-32]
   31db0:	stur	q2, [x29, #-48]
   31db4:	stur	w8, [x29, #-12]
   31db8:	mov	x3, sp
   31dbc:	sub	x4, x29, #0x30
   31dc0:	mov	w0, wzr
   31dc4:	mov	x1, x20
   31dc8:	mov	x2, x20
   31dcc:	mov	x5, x19
   31dd0:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   31dd4:	ldrb	w8, [sp]
   31dd8:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   31ddc:	cmp	w8, #0x1f
   31de0:	b.hi	31df4 <PyInit__decimal@@Base+0x2b340>  // b.pmore
   31de4:	ldr	x8, [x19, #1376]
   31de8:	ldr	x0, [sp, #40]
   31dec:	blr	x8
   31df0:	ldrb	w8, [sp]
   31df4:	tbnz	w8, #4, 31e04 <PyInit__decimal@@Base+0x2b350>
   31df8:	ldr	x8, [x19, #1376]
   31dfc:	mov	x0, sp
   31e00:	blr	x8
   31e04:	add	sp, sp, #0x260
   31e08:	ldp	x20, x19, [sp, #48]
   31e0c:	ldp	x22, x21, [sp, #32]
   31e10:	ldp	x28, x23, [sp, #16]
   31e14:	ldp	x29, x30, [sp], #64
   31e18:	ret
   31e1c:	stp	x29, x30, [sp, #-64]!
   31e20:	str	x23, [sp, #16]
   31e24:	stp	x22, x21, [sp, #32]
   31e28:	stp	x20, x19, [sp, #48]
   31e2c:	mov	x29, sp
   31e30:	ldrb	w8, [x1]
   31e34:	ldrb	w9, [x2]
   31e38:	mov	x19, x4
   31e3c:	mov	x20, x3
   31e40:	mov	x22, x2
   31e44:	mov	x23, x1
   31e48:	mov	x21, x0
   31e4c:	tbz	w8, #2, 31e9c <PyInit__decimal@@Base+0x2b3e8>
   31e50:	and	w10, w9, #0xc
   31e54:	cbnz	w10, 31e9c <PyInit__decimal@@Base+0x2b3e8>
   31e58:	cmp	x21, x22
   31e5c:	b.eq	3203c <PyInit__decimal@@Base+0x2b588>  // b.none
   31e60:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   31e64:	ldr	x8, [x22, #24]
   31e68:	ldr	x11, [x10, #1344]
   31e6c:	ldr	x10, [x21, #32]
   31e70:	cmp	x11, x8
   31e74:	csel	x1, x8, x11, lt  // lt = tstop
   31e78:	cmp	x1, x10
   31e7c:	b.eq	31fc8 <PyInit__decimal@@Base+0x2b514>  // b.none
   31e80:	ldrb	w11, [x21]
   31e84:	tbnz	w11, #5, 31fa8 <PyInit__decimal@@Base+0x2b4f4>
   31e88:	mov	x0, x21
   31e8c:	mov	x2, x19
   31e90:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   31e94:	cbnz	w0, 31fc0 <PyInit__decimal@@Base+0x2b50c>
   31e98:	b	3203c <PyInit__decimal@@Base+0x2b588>
   31e9c:	tst	w8, #0xc
   31ea0:	b.ne	31eec <PyInit__decimal@@Base+0x2b438>  // b.any
   31ea4:	tbz	w9, #2, 31eec <PyInit__decimal@@Base+0x2b438>
   31ea8:	cmp	x21, x23
   31eac:	b.eq	3203c <PyInit__decimal@@Base+0x2b588>  // b.none
   31eb0:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   31eb4:	ldr	x9, [x23, #24]
   31eb8:	ldr	x11, [x10, #1344]
   31ebc:	ldr	x10, [x21, #32]
   31ec0:	cmp	x11, x9
   31ec4:	csel	x1, x9, x11, lt  // lt = tstop
   31ec8:	cmp	x1, x10
   31ecc:	b.eq	32010 <PyInit__decimal@@Base+0x2b55c>  // b.none
   31ed0:	ldrb	w11, [x21]
   31ed4:	tbnz	w11, #5, 31ff0 <PyInit__decimal@@Base+0x2b53c>
   31ed8:	mov	x0, x21
   31edc:	mov	x2, x19
   31ee0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   31ee4:	cbnz	w0, 32008 <PyInit__decimal@@Base+0x2b554>
   31ee8:	b	3203c <PyInit__decimal@@Base+0x2b588>
   31eec:	mov	x0, x21
   31ef0:	mov	x1, x23
   31ef4:	mov	x2, x22
   31ef8:	mov	x3, x20
   31efc:	mov	x4, x19
   31f00:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   31f04:	cbz	w0, 31f1c <PyInit__decimal@@Base+0x2b468>
   31f08:	ldp	x20, x19, [sp, #48]
   31f0c:	ldp	x22, x21, [sp, #32]
   31f10:	ldr	x23, [sp, #16]
   31f14:	ldp	x29, x30, [sp], #64
   31f18:	ret
   31f1c:	mov	x0, x23
   31f20:	mov	x1, x22
   31f24:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   31f28:	cbnz	w0, 31f64 <PyInit__decimal@@Base+0x2b4b0>
   31f2c:	ldrb	w8, [x23]
   31f30:	ldrb	w9, [x22]
   31f34:	and	w10, w8, #0x1
   31f38:	and	w9, w9, #0x1
   31f3c:	subs	w0, w9, w10
   31f40:	b.ne	31f64 <PyInit__decimal@@Base+0x2b4b0>  // b.any
   31f44:	ldr	x9, [x23, #8]
   31f48:	ldr	x10, [x22, #8]
   31f4c:	ubfiz	w8, w8, #1, #1
   31f50:	mov	w11, #0x1                   	// #1
   31f54:	sub	w11, w11, w8
   31f58:	sub	w8, w8, #0x1
   31f5c:	cmp	x9, x10
   31f60:	csel	w0, w8, w11, lt  // lt = tstop
   31f64:	tbnz	w0, #31, 3205c <PyInit__decimal@@Base+0x2b5a8>
   31f68:	cmp	x21, x23
   31f6c:	b.eq	3203c <PyInit__decimal@@Base+0x2b588>  // b.none
   31f70:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   31f74:	ldr	x8, [x23, #24]
   31f78:	ldr	x10, [x9, #1344]
   31f7c:	ldr	x9, [x21, #32]
   31f80:	cmp	x10, x8
   31f84:	csel	x1, x8, x10, lt  // lt = tstop
   31f88:	cmp	x1, x9
   31f8c:	b.eq	320b4 <PyInit__decimal@@Base+0x2b600>  // b.none
   31f90:	ldrb	w10, [x21]
   31f94:	tbnz	w10, #5, 32098 <PyInit__decimal@@Base+0x2b5e4>
   31f98:	mov	x0, x21
   31f9c:	mov	x2, x19
   31fa0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   31fa4:	b	320ac <PyInit__decimal@@Base+0x2b5f8>
   31fa8:	cmp	x1, x10
   31fac:	b.le	31fc8 <PyInit__decimal@@Base+0x2b514>
   31fb0:	mov	x0, x21
   31fb4:	mov	x2, x19
   31fb8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   31fbc:	cbz	w0, 3203c <PyInit__decimal@@Base+0x2b588>
   31fc0:	ldr	x8, [x22, #24]
   31fc4:	ldrb	w9, [x22]
   31fc8:	ldrb	w10, [x21]
   31fcc:	ldr	x0, [x21, #40]
   31fd0:	bfxil	w10, w9, #0, #4
   31fd4:	strb	w10, [x21]
   31fd8:	ldur	q0, [x22, #8]
   31fdc:	str	x8, [x21, #24]
   31fe0:	stur	q0, [x21, #8]
   31fe4:	ldr	x8, [x22, #24]
   31fe8:	ldr	x1, [x22, #40]
   31fec:	b	32034 <PyInit__decimal@@Base+0x2b580>
   31ff0:	cmp	x1, x10
   31ff4:	b.le	32010 <PyInit__decimal@@Base+0x2b55c>
   31ff8:	mov	x0, x21
   31ffc:	mov	x2, x19
   32000:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32004:	cbz	w0, 3203c <PyInit__decimal@@Base+0x2b588>
   32008:	ldr	x9, [x23, #24]
   3200c:	ldrb	w8, [x23]
   32010:	ldrb	w10, [x21]
   32014:	bfxil	w10, w8, #0, #4
   32018:	strb	w10, [x21]
   3201c:	ldur	q0, [x23, #8]
   32020:	str	x9, [x21, #24]
   32024:	stur	q0, [x21, #8]
   32028:	ldr	x0, [x21, #40]
   3202c:	ldr	x8, [x23, #24]
   32030:	ldr	x1, [x23, #40]
   32034:	lsl	x2, x8, #3
   32038:	bl	63c0 <memcpy@plt>
   3203c:	mov	x0, x21
   32040:	mov	x1, x20
   32044:	mov	x2, x19
   32048:	ldp	x20, x19, [sp, #48]
   3204c:	ldp	x22, x21, [sp, #32]
   32050:	ldr	x23, [sp, #16]
   32054:	ldp	x29, x30, [sp], #64
   32058:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3205c:	cmp	x21, x22
   32060:	b.eq	3203c <PyInit__decimal@@Base+0x2b588>  // b.none
   32064:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   32068:	ldr	x8, [x22, #24]
   3206c:	ldr	x10, [x9, #1344]
   32070:	ldr	x9, [x21, #32]
   32074:	cmp	x10, x8
   32078:	csel	x1, x8, x10, lt  // lt = tstop
   3207c:	cmp	x1, x9
   32080:	b.eq	31fc4 <PyInit__decimal@@Base+0x2b510>  // b.none
   32084:	ldrb	w10, [x21]
   32088:	tbz	w10, #5, 31e88 <PyInit__decimal@@Base+0x2b3d4>
   3208c:	cmp	x1, x9
   32090:	b.gt	31fb0 <PyInit__decimal@@Base+0x2b4fc>
   32094:	b	31fc4 <PyInit__decimal@@Base+0x2b510>
   32098:	cmp	x1, x9
   3209c:	b.le	320b4 <PyInit__decimal@@Base+0x2b600>
   320a0:	mov	x0, x21
   320a4:	mov	x2, x19
   320a8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   320ac:	cbz	w0, 3203c <PyInit__decimal@@Base+0x2b588>
   320b0:	ldr	x8, [x23, #24]
   320b4:	ldrb	w9, [x23]
   320b8:	ldrb	w10, [x21]
   320bc:	bfxil	w10, w9, #0, #4
   320c0:	strb	w10, [x21]
   320c4:	ldur	q0, [x23, #8]
   320c8:	str	x8, [x21, #24]
   320cc:	b	32024 <PyInit__decimal@@Base+0x2b570>
   320d0:	stp	x29, x30, [sp, #-64]!
   320d4:	str	x23, [sp, #16]
   320d8:	stp	x22, x21, [sp, #32]
   320dc:	stp	x20, x19, [sp, #48]
   320e0:	mov	x29, sp
   320e4:	ldrb	w8, [x1]
   320e8:	ldrb	w9, [x2]
   320ec:	mov	x19, x4
   320f0:	mov	x20, x3
   320f4:	mov	x22, x2
   320f8:	mov	x23, x1
   320fc:	mov	x21, x0
   32100:	tbz	w8, #2, 32150 <PyInit__decimal@@Base+0x2b69c>
   32104:	and	w10, w9, #0xc
   32108:	cbnz	w10, 32150 <PyInit__decimal@@Base+0x2b69c>
   3210c:	cmp	x21, x22
   32110:	b.eq	322f0 <PyInit__decimal@@Base+0x2b83c>  // b.none
   32114:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   32118:	ldr	x8, [x22, #24]
   3211c:	ldr	x11, [x10, #1344]
   32120:	ldr	x10, [x21, #32]
   32124:	cmp	x11, x8
   32128:	csel	x1, x8, x11, lt  // lt = tstop
   3212c:	cmp	x1, x10
   32130:	b.eq	3227c <PyInit__decimal@@Base+0x2b7c8>  // b.none
   32134:	ldrb	w11, [x21]
   32138:	tbnz	w11, #5, 3225c <PyInit__decimal@@Base+0x2b7a8>
   3213c:	mov	x0, x21
   32140:	mov	x2, x19
   32144:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32148:	cbnz	w0, 32274 <PyInit__decimal@@Base+0x2b7c0>
   3214c:	b	322f0 <PyInit__decimal@@Base+0x2b83c>
   32150:	tst	w8, #0xc
   32154:	b.ne	321a0 <PyInit__decimal@@Base+0x2b6ec>  // b.any
   32158:	tbz	w9, #2, 321a0 <PyInit__decimal@@Base+0x2b6ec>
   3215c:	cmp	x21, x23
   32160:	b.eq	322f0 <PyInit__decimal@@Base+0x2b83c>  // b.none
   32164:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   32168:	ldr	x9, [x23, #24]
   3216c:	ldr	x11, [x10, #1344]
   32170:	ldr	x10, [x21, #32]
   32174:	cmp	x11, x9
   32178:	csel	x1, x9, x11, lt  // lt = tstop
   3217c:	cmp	x1, x10
   32180:	b.eq	322c4 <PyInit__decimal@@Base+0x2b810>  // b.none
   32184:	ldrb	w11, [x21]
   32188:	tbnz	w11, #5, 322a4 <PyInit__decimal@@Base+0x2b7f0>
   3218c:	mov	x0, x21
   32190:	mov	x2, x19
   32194:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32198:	cbnz	w0, 322bc <PyInit__decimal@@Base+0x2b808>
   3219c:	b	322f0 <PyInit__decimal@@Base+0x2b83c>
   321a0:	mov	x0, x21
   321a4:	mov	x1, x23
   321a8:	mov	x2, x22
   321ac:	mov	x3, x20
   321b0:	mov	x4, x19
   321b4:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   321b8:	cbz	w0, 321d0 <PyInit__decimal@@Base+0x2b71c>
   321bc:	ldp	x20, x19, [sp, #48]
   321c0:	ldp	x22, x21, [sp, #32]
   321c4:	ldr	x23, [sp, #16]
   321c8:	ldp	x29, x30, [sp], #64
   321cc:	ret
   321d0:	mov	x0, x23
   321d4:	mov	x1, x22
   321d8:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   321dc:	cbnz	w0, 32218 <PyInit__decimal@@Base+0x2b764>
   321e0:	ldrb	w8, [x23]
   321e4:	ldrb	w9, [x22]
   321e8:	and	w10, w8, #0x1
   321ec:	and	w9, w9, #0x1
   321f0:	subs	w0, w9, w10
   321f4:	b.ne	32218 <PyInit__decimal@@Base+0x2b764>  // b.any
   321f8:	ldr	x9, [x23, #8]
   321fc:	ldr	x10, [x22, #8]
   32200:	ubfiz	w8, w8, #1, #1
   32204:	mov	w11, #0x1                   	// #1
   32208:	sub	w11, w11, w8
   3220c:	sub	w8, w8, #0x1
   32210:	cmp	x9, x10
   32214:	csel	w0, w8, w11, lt  // lt = tstop
   32218:	tbnz	w0, #31, 32310 <PyInit__decimal@@Base+0x2b85c>
   3221c:	cmp	x21, x23
   32220:	b.eq	322f0 <PyInit__decimal@@Base+0x2b83c>  // b.none
   32224:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   32228:	ldr	x8, [x23, #24]
   3222c:	ldr	x10, [x9, #1344]
   32230:	ldr	x9, [x21, #32]
   32234:	cmp	x10, x8
   32238:	csel	x1, x8, x10, lt  // lt = tstop
   3223c:	cmp	x1, x9
   32240:	b.eq	32368 <PyInit__decimal@@Base+0x2b8b4>  // b.none
   32244:	ldrb	w10, [x21]
   32248:	tbnz	w10, #5, 3234c <PyInit__decimal@@Base+0x2b898>
   3224c:	mov	x0, x21
   32250:	mov	x2, x19
   32254:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32258:	b	32360 <PyInit__decimal@@Base+0x2b8ac>
   3225c:	cmp	x1, x10
   32260:	b.le	3227c <PyInit__decimal@@Base+0x2b7c8>
   32264:	mov	x0, x21
   32268:	mov	x2, x19
   3226c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32270:	cbz	w0, 322f0 <PyInit__decimal@@Base+0x2b83c>
   32274:	ldr	x8, [x22, #24]
   32278:	ldrb	w9, [x22]
   3227c:	ldrb	w10, [x21]
   32280:	ldr	x0, [x21, #40]
   32284:	bfxil	w10, w9, #0, #4
   32288:	strb	w10, [x21]
   3228c:	ldur	q0, [x22, #8]
   32290:	str	x8, [x21, #24]
   32294:	stur	q0, [x21, #8]
   32298:	ldr	x8, [x22, #24]
   3229c:	ldr	x1, [x22, #40]
   322a0:	b	322e8 <PyInit__decimal@@Base+0x2b834>
   322a4:	cmp	x1, x10
   322a8:	b.le	322c4 <PyInit__decimal@@Base+0x2b810>
   322ac:	mov	x0, x21
   322b0:	mov	x2, x19
   322b4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   322b8:	cbz	w0, 322f0 <PyInit__decimal@@Base+0x2b83c>
   322bc:	ldr	x9, [x23, #24]
   322c0:	ldrb	w8, [x23]
   322c4:	ldrb	w10, [x21]
   322c8:	bfxil	w10, w8, #0, #4
   322cc:	strb	w10, [x21]
   322d0:	ldur	q0, [x23, #8]
   322d4:	str	x9, [x21, #24]
   322d8:	stur	q0, [x21, #8]
   322dc:	ldr	x0, [x21, #40]
   322e0:	ldr	x8, [x23, #24]
   322e4:	ldr	x1, [x23, #40]
   322e8:	lsl	x2, x8, #3
   322ec:	bl	63c0 <memcpy@plt>
   322f0:	mov	x0, x21
   322f4:	mov	x1, x20
   322f8:	mov	x2, x19
   322fc:	ldp	x20, x19, [sp, #48]
   32300:	ldp	x22, x21, [sp, #32]
   32304:	ldr	x23, [sp, #16]
   32308:	ldp	x29, x30, [sp], #64
   3230c:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   32310:	cmp	x21, x22
   32314:	b.eq	322f0 <PyInit__decimal@@Base+0x2b83c>  // b.none
   32318:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   3231c:	ldr	x8, [x22, #24]
   32320:	ldr	x10, [x9, #1344]
   32324:	ldr	x9, [x21, #32]
   32328:	cmp	x10, x8
   3232c:	csel	x1, x8, x10, lt  // lt = tstop
   32330:	cmp	x1, x9
   32334:	b.eq	32278 <PyInit__decimal@@Base+0x2b7c4>  // b.none
   32338:	ldrb	w10, [x21]
   3233c:	tbz	w10, #5, 3213c <PyInit__decimal@@Base+0x2b688>
   32340:	cmp	x1, x9
   32344:	b.gt	32264 <PyInit__decimal@@Base+0x2b7b0>
   32348:	b	32278 <PyInit__decimal@@Base+0x2b7c4>
   3234c:	cmp	x1, x9
   32350:	b.le	32368 <PyInit__decimal@@Base+0x2b8b4>
   32354:	mov	x0, x21
   32358:	mov	x2, x19
   3235c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32360:	cbz	w0, 322f0 <PyInit__decimal@@Base+0x2b83c>
   32364:	ldr	x8, [x23, #24]
   32368:	ldrb	w9, [x23]
   3236c:	ldrb	w10, [x21]
   32370:	bfxil	w10, w9, #0, #4
   32374:	strb	w10, [x21]
   32378:	ldur	q0, [x23, #8]
   3237c:	str	x8, [x21, #24]
   32380:	b	322d8 <PyInit__decimal@@Base+0x2b824>
   32384:	stp	x29, x30, [sp, #-64]!
   32388:	str	x23, [sp, #16]
   3238c:	stp	x22, x21, [sp, #32]
   32390:	stp	x20, x19, [sp, #48]
   32394:	mov	x29, sp
   32398:	ldrb	w8, [x1]
   3239c:	ldrb	w9, [x2]
   323a0:	mov	x19, x4
   323a4:	mov	x20, x3
   323a8:	mov	x22, x2
   323ac:	mov	x23, x1
   323b0:	mov	x21, x0
   323b4:	tbz	w8, #2, 32404 <PyInit__decimal@@Base+0x2b950>
   323b8:	and	w10, w9, #0xc
   323bc:	cbnz	w10, 32404 <PyInit__decimal@@Base+0x2b950>
   323c0:	cmp	x21, x22
   323c4:	b.eq	32600 <PyInit__decimal@@Base+0x2bb4c>  // b.none
   323c8:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   323cc:	ldr	x8, [x22, #24]
   323d0:	ldr	x11, [x10, #1344]
   323d4:	ldr	x10, [x21, #32]
   323d8:	cmp	x11, x8
   323dc:	csel	x1, x8, x11, lt  // lt = tstop
   323e0:	cmp	x1, x10
   323e4:	b.eq	325d4 <PyInit__decimal@@Base+0x2bb20>  // b.none
   323e8:	ldrb	w11, [x21]
   323ec:	tbnz	w11, #5, 32510 <PyInit__decimal@@Base+0x2ba5c>
   323f0:	mov	x0, x21
   323f4:	mov	x2, x19
   323f8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   323fc:	cbnz	w0, 325cc <PyInit__decimal@@Base+0x2bb18>
   32400:	b	32600 <PyInit__decimal@@Base+0x2bb4c>
   32404:	tst	w8, #0xc
   32408:	b.ne	32454 <PyInit__decimal@@Base+0x2b9a0>  // b.any
   3240c:	tbz	w9, #2, 32454 <PyInit__decimal@@Base+0x2b9a0>
   32410:	cmp	x21, x23
   32414:	b.eq	32600 <PyInit__decimal@@Base+0x2bb4c>  // b.none
   32418:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3241c:	ldr	x9, [x23, #24]
   32420:	ldr	x11, [x10, #1344]
   32424:	ldr	x10, [x21, #32]
   32428:	cmp	x11, x9
   3242c:	csel	x1, x9, x11, lt  // lt = tstop
   32430:	cmp	x1, x10
   32434:	b.eq	3254c <PyInit__decimal@@Base+0x2ba98>  // b.none
   32438:	ldrb	w11, [x21]
   3243c:	tbnz	w11, #5, 3252c <PyInit__decimal@@Base+0x2ba78>
   32440:	mov	x0, x21
   32444:	mov	x2, x19
   32448:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3244c:	cbnz	w0, 32544 <PyInit__decimal@@Base+0x2ba90>
   32450:	b	32600 <PyInit__decimal@@Base+0x2bb4c>
   32454:	mov	x0, x21
   32458:	mov	x1, x23
   3245c:	mov	x2, x22
   32460:	mov	x3, x20
   32464:	mov	x4, x19
   32468:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   3246c:	cbz	w0, 32484 <PyInit__decimal@@Base+0x2b9d0>
   32470:	ldp	x20, x19, [sp, #48]
   32474:	ldp	x22, x21, [sp, #32]
   32478:	ldr	x23, [sp, #16]
   3247c:	ldp	x29, x30, [sp], #64
   32480:	ret
   32484:	mov	x0, x23
   32488:	mov	x1, x22
   3248c:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   32490:	cbnz	w0, 324cc <PyInit__decimal@@Base+0x2ba18>
   32494:	ldrb	w8, [x23]
   32498:	ldrb	w9, [x22]
   3249c:	and	w10, w8, #0x1
   324a0:	and	w9, w9, #0x1
   324a4:	subs	w0, w9, w10
   324a8:	b.ne	324cc <PyInit__decimal@@Base+0x2ba18>  // b.any
   324ac:	ldr	x9, [x23, #8]
   324b0:	ldr	x10, [x22, #8]
   324b4:	ubfiz	w8, w8, #1, #1
   324b8:	mov	w11, #0x1                   	// #1
   324bc:	sub	w11, w11, w8
   324c0:	sub	w8, w8, #0x1
   324c4:	cmp	x9, x10
   324c8:	csel	w0, w8, w11, lt  // lt = tstop
   324cc:	tbnz	w0, #31, 32574 <PyInit__decimal@@Base+0x2bac0>
   324d0:	cmp	x21, x22
   324d4:	b.eq	32600 <PyInit__decimal@@Base+0x2bb4c>  // b.none
   324d8:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   324dc:	ldr	x8, [x22, #24]
   324e0:	ldr	x10, [x9, #1344]
   324e4:	ldr	x9, [x21, #32]
   324e8:	cmp	x10, x8
   324ec:	csel	x1, x8, x10, lt  // lt = tstop
   324f0:	cmp	x1, x9
   324f4:	b.eq	325d0 <PyInit__decimal@@Base+0x2bb1c>  // b.none
   324f8:	ldrb	w10, [x21]
   324fc:	tbnz	w10, #5, 325b4 <PyInit__decimal@@Base+0x2bb00>
   32500:	mov	x0, x21
   32504:	mov	x2, x19
   32508:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3250c:	b	325c8 <PyInit__decimal@@Base+0x2bb14>
   32510:	cmp	x1, x10
   32514:	b.le	325d4 <PyInit__decimal@@Base+0x2bb20>
   32518:	mov	x0, x21
   3251c:	mov	x2, x19
   32520:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32524:	cbnz	w0, 325cc <PyInit__decimal@@Base+0x2bb18>
   32528:	b	32600 <PyInit__decimal@@Base+0x2bb4c>
   3252c:	cmp	x1, x10
   32530:	b.le	3254c <PyInit__decimal@@Base+0x2ba98>
   32534:	mov	x0, x21
   32538:	mov	x2, x19
   3253c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32540:	cbz	w0, 32600 <PyInit__decimal@@Base+0x2bb4c>
   32544:	ldr	x9, [x23, #24]
   32548:	ldrb	w8, [x23]
   3254c:	ldrb	w10, [x21]
   32550:	bfxil	w10, w8, #0, #4
   32554:	strb	w10, [x21]
   32558:	ldur	q0, [x23, #8]
   3255c:	str	x9, [x21, #24]
   32560:	stur	q0, [x21, #8]
   32564:	ldr	x0, [x21, #40]
   32568:	ldr	x8, [x23, #24]
   3256c:	ldr	x1, [x23, #40]
   32570:	b	325f8 <PyInit__decimal@@Base+0x2bb44>
   32574:	cmp	x21, x23
   32578:	b.eq	32600 <PyInit__decimal@@Base+0x2bb4c>  // b.none
   3257c:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   32580:	ldr	x8, [x23, #24]
   32584:	ldr	x10, [x9, #1344]
   32588:	ldr	x9, [x21, #32]
   3258c:	cmp	x10, x8
   32590:	csel	x1, x8, x10, lt  // lt = tstop
   32594:	cmp	x1, x9
   32598:	b.eq	3263c <PyInit__decimal@@Base+0x2bb88>  // b.none
   3259c:	ldrb	w10, [x21]
   325a0:	tbnz	w10, #5, 32620 <PyInit__decimal@@Base+0x2bb6c>
   325a4:	mov	x0, x21
   325a8:	mov	x2, x19
   325ac:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   325b0:	b	32634 <PyInit__decimal@@Base+0x2bb80>
   325b4:	cmp	x1, x9
   325b8:	b.le	325d0 <PyInit__decimal@@Base+0x2bb1c>
   325bc:	mov	x0, x21
   325c0:	mov	x2, x19
   325c4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   325c8:	cbz	w0, 32600 <PyInit__decimal@@Base+0x2bb4c>
   325cc:	ldr	x8, [x22, #24]
   325d0:	ldrb	w9, [x22]
   325d4:	ldrb	w10, [x21]
   325d8:	ldr	x0, [x21, #40]
   325dc:	bfxil	w10, w9, #0, #4
   325e0:	strb	w10, [x21]
   325e4:	ldur	q0, [x22, #8]
   325e8:	str	x8, [x21, #24]
   325ec:	stur	q0, [x21, #8]
   325f0:	ldr	x8, [x22, #24]
   325f4:	ldr	x1, [x22, #40]
   325f8:	lsl	x2, x8, #3
   325fc:	bl	63c0 <memcpy@plt>
   32600:	mov	x0, x21
   32604:	mov	x1, x20
   32608:	mov	x2, x19
   3260c:	ldp	x20, x19, [sp, #48]
   32610:	ldp	x22, x21, [sp, #32]
   32614:	ldr	x23, [sp, #16]
   32618:	ldp	x29, x30, [sp], #64
   3261c:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   32620:	cmp	x1, x9
   32624:	b.le	3263c <PyInit__decimal@@Base+0x2bb88>
   32628:	mov	x0, x21
   3262c:	mov	x2, x19
   32630:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32634:	cbz	w0, 32600 <PyInit__decimal@@Base+0x2bb4c>
   32638:	ldr	x8, [x23, #24]
   3263c:	ldrb	w9, [x23]
   32640:	ldrb	w10, [x21]
   32644:	bfxil	w10, w9, #0, #4
   32648:	strb	w10, [x21]
   3264c:	ldur	q0, [x23, #8]
   32650:	str	x8, [x21, #24]
   32654:	b	32560 <PyInit__decimal@@Base+0x2baac>
   32658:	stp	x29, x30, [sp, #-64]!
   3265c:	str	x23, [sp, #16]
   32660:	stp	x22, x21, [sp, #32]
   32664:	stp	x20, x19, [sp, #48]
   32668:	mov	x29, sp
   3266c:	ldrb	w8, [x1]
   32670:	ldrb	w9, [x2]
   32674:	mov	x19, x4
   32678:	mov	x20, x3
   3267c:	mov	x22, x2
   32680:	mov	x23, x1
   32684:	mov	x21, x0
   32688:	tbz	w8, #2, 326d8 <PyInit__decimal@@Base+0x2bc24>
   3268c:	and	w10, w9, #0xc
   32690:	cbnz	w10, 326d8 <PyInit__decimal@@Base+0x2bc24>
   32694:	cmp	x21, x22
   32698:	b.eq	328d4 <PyInit__decimal@@Base+0x2be20>  // b.none
   3269c:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   326a0:	ldr	x8, [x22, #24]
   326a4:	ldr	x11, [x10, #1344]
   326a8:	ldr	x10, [x21, #32]
   326ac:	cmp	x11, x8
   326b0:	csel	x1, x8, x11, lt  // lt = tstop
   326b4:	cmp	x1, x10
   326b8:	b.eq	328a8 <PyInit__decimal@@Base+0x2bdf4>  // b.none
   326bc:	ldrb	w11, [x21]
   326c0:	tbnz	w11, #5, 327e4 <PyInit__decimal@@Base+0x2bd30>
   326c4:	mov	x0, x21
   326c8:	mov	x2, x19
   326cc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   326d0:	cbnz	w0, 328a0 <PyInit__decimal@@Base+0x2bdec>
   326d4:	b	328d4 <PyInit__decimal@@Base+0x2be20>
   326d8:	tst	w8, #0xc
   326dc:	b.ne	32728 <PyInit__decimal@@Base+0x2bc74>  // b.any
   326e0:	tbz	w9, #2, 32728 <PyInit__decimal@@Base+0x2bc74>
   326e4:	cmp	x21, x23
   326e8:	b.eq	328d4 <PyInit__decimal@@Base+0x2be20>  // b.none
   326ec:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   326f0:	ldr	x9, [x23, #24]
   326f4:	ldr	x11, [x10, #1344]
   326f8:	ldr	x10, [x21, #32]
   326fc:	cmp	x11, x9
   32700:	csel	x1, x9, x11, lt  // lt = tstop
   32704:	cmp	x1, x10
   32708:	b.eq	32820 <PyInit__decimal@@Base+0x2bd6c>  // b.none
   3270c:	ldrb	w11, [x21]
   32710:	tbnz	w11, #5, 32800 <PyInit__decimal@@Base+0x2bd4c>
   32714:	mov	x0, x21
   32718:	mov	x2, x19
   3271c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32720:	cbnz	w0, 32818 <PyInit__decimal@@Base+0x2bd64>
   32724:	b	328d4 <PyInit__decimal@@Base+0x2be20>
   32728:	mov	x0, x21
   3272c:	mov	x1, x23
   32730:	mov	x2, x22
   32734:	mov	x3, x20
   32738:	mov	x4, x19
   3273c:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   32740:	cbz	w0, 32758 <PyInit__decimal@@Base+0x2bca4>
   32744:	ldp	x20, x19, [sp, #48]
   32748:	ldp	x22, x21, [sp, #32]
   3274c:	ldr	x23, [sp, #16]
   32750:	ldp	x29, x30, [sp], #64
   32754:	ret
   32758:	mov	x0, x23
   3275c:	mov	x1, x22
   32760:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   32764:	cbnz	w0, 327a0 <PyInit__decimal@@Base+0x2bcec>
   32768:	ldrb	w8, [x23]
   3276c:	ldrb	w9, [x22]
   32770:	and	w10, w8, #0x1
   32774:	and	w9, w9, #0x1
   32778:	subs	w0, w9, w10
   3277c:	b.ne	327a0 <PyInit__decimal@@Base+0x2bcec>  // b.any
   32780:	ldr	x9, [x23, #8]
   32784:	ldr	x10, [x22, #8]
   32788:	ubfiz	w8, w8, #1, #1
   3278c:	mov	w11, #0x1                   	// #1
   32790:	sub	w11, w11, w8
   32794:	sub	w8, w8, #0x1
   32798:	cmp	x9, x10
   3279c:	csel	w0, w8, w11, lt  // lt = tstop
   327a0:	tbnz	w0, #31, 32848 <PyInit__decimal@@Base+0x2bd94>
   327a4:	cmp	x21, x22
   327a8:	b.eq	328d4 <PyInit__decimal@@Base+0x2be20>  // b.none
   327ac:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   327b0:	ldr	x8, [x22, #24]
   327b4:	ldr	x10, [x9, #1344]
   327b8:	ldr	x9, [x21, #32]
   327bc:	cmp	x10, x8
   327c0:	csel	x1, x8, x10, lt  // lt = tstop
   327c4:	cmp	x1, x9
   327c8:	b.eq	328a4 <PyInit__decimal@@Base+0x2bdf0>  // b.none
   327cc:	ldrb	w10, [x21]
   327d0:	tbnz	w10, #5, 32888 <PyInit__decimal@@Base+0x2bdd4>
   327d4:	mov	x0, x21
   327d8:	mov	x2, x19
   327dc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   327e0:	b	3289c <PyInit__decimal@@Base+0x2bde8>
   327e4:	cmp	x1, x10
   327e8:	b.le	328a8 <PyInit__decimal@@Base+0x2bdf4>
   327ec:	mov	x0, x21
   327f0:	mov	x2, x19
   327f4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   327f8:	cbnz	w0, 328a0 <PyInit__decimal@@Base+0x2bdec>
   327fc:	b	328d4 <PyInit__decimal@@Base+0x2be20>
   32800:	cmp	x1, x10
   32804:	b.le	32820 <PyInit__decimal@@Base+0x2bd6c>
   32808:	mov	x0, x21
   3280c:	mov	x2, x19
   32810:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32814:	cbz	w0, 328d4 <PyInit__decimal@@Base+0x2be20>
   32818:	ldr	x9, [x23, #24]
   3281c:	ldrb	w8, [x23]
   32820:	ldrb	w10, [x21]
   32824:	bfxil	w10, w8, #0, #4
   32828:	strb	w10, [x21]
   3282c:	ldur	q0, [x23, #8]
   32830:	str	x9, [x21, #24]
   32834:	stur	q0, [x21, #8]
   32838:	ldr	x0, [x21, #40]
   3283c:	ldr	x8, [x23, #24]
   32840:	ldr	x1, [x23, #40]
   32844:	b	328cc <PyInit__decimal@@Base+0x2be18>
   32848:	cmp	x21, x23
   3284c:	b.eq	328d4 <PyInit__decimal@@Base+0x2be20>  // b.none
   32850:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   32854:	ldr	x8, [x23, #24]
   32858:	ldr	x10, [x9, #1344]
   3285c:	ldr	x9, [x21, #32]
   32860:	cmp	x10, x8
   32864:	csel	x1, x8, x10, lt  // lt = tstop
   32868:	cmp	x1, x9
   3286c:	b.eq	32910 <PyInit__decimal@@Base+0x2be5c>  // b.none
   32870:	ldrb	w10, [x21]
   32874:	tbnz	w10, #5, 328f4 <PyInit__decimal@@Base+0x2be40>
   32878:	mov	x0, x21
   3287c:	mov	x2, x19
   32880:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32884:	b	32908 <PyInit__decimal@@Base+0x2be54>
   32888:	cmp	x1, x9
   3288c:	b.le	328a4 <PyInit__decimal@@Base+0x2bdf0>
   32890:	mov	x0, x21
   32894:	mov	x2, x19
   32898:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3289c:	cbz	w0, 328d4 <PyInit__decimal@@Base+0x2be20>
   328a0:	ldr	x8, [x22, #24]
   328a4:	ldrb	w9, [x22]
   328a8:	ldrb	w10, [x21]
   328ac:	ldr	x0, [x21, #40]
   328b0:	bfxil	w10, w9, #0, #4
   328b4:	strb	w10, [x21]
   328b8:	ldur	q0, [x22, #8]
   328bc:	str	x8, [x21, #24]
   328c0:	stur	q0, [x21, #8]
   328c4:	ldr	x8, [x22, #24]
   328c8:	ldr	x1, [x22, #40]
   328cc:	lsl	x2, x8, #3
   328d0:	bl	63c0 <memcpy@plt>
   328d4:	mov	x0, x21
   328d8:	mov	x1, x20
   328dc:	mov	x2, x19
   328e0:	ldp	x20, x19, [sp, #48]
   328e4:	ldp	x22, x21, [sp, #32]
   328e8:	ldr	x23, [sp, #16]
   328ec:	ldp	x29, x30, [sp], #64
   328f0:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   328f4:	cmp	x1, x9
   328f8:	b.le	32910 <PyInit__decimal@@Base+0x2be5c>
   328fc:	mov	x0, x21
   32900:	mov	x2, x19
   32904:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32908:	cbz	w0, 328d4 <PyInit__decimal@@Base+0x2be20>
   3290c:	ldr	x8, [x23, #24]
   32910:	ldrb	w9, [x23]
   32914:	ldrb	w10, [x21]
   32918:	bfxil	w10, w9, #0, #4
   3291c:	strb	w10, [x21]
   32920:	ldur	q0, [x23, #8]
   32924:	str	x8, [x21, #24]
   32928:	b	32834 <PyInit__decimal@@Base+0x2bd80>
   3292c:	stp	x29, x30, [sp, #-64]!
   32930:	stp	x28, x23, [sp, #16]
   32934:	stp	x22, x21, [sp, #32]
   32938:	stp	x20, x19, [sp, #48]
   3293c:	mov	x29, sp
   32940:	sub	sp, sp, #0x260
   32944:	mov	x23, x0
   32948:	mov	w8, #0x30                  	// #48
   3294c:	mov	w9, #0x40                  	// #64
   32950:	add	x10, sp, #0x30
   32954:	sub	x0, x29, #0x30
   32958:	mov	x19, x4
   3295c:	mov	x20, x3
   32960:	mov	x21, x2
   32964:	mov	x22, x1
   32968:	stp	xzr, xzr, [sp, #8]
   3296c:	strb	w8, [sp]
   32970:	stp	xzr, x9, [sp, #24]
   32974:	str	x10, [sp, #40]
   32978:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   3297c:	cmp	x21, #0x0
   32980:	cneg	x2, x21, mi  // mi = first
   32984:	lsr	x1, x21, #63
   32988:	mov	x0, sp
   3298c:	mov	x3, xzr
   32990:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   32994:	mov	x0, sp
   32998:	sub	x1, x29, #0x30
   3299c:	mov	x2, x19
   329a0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   329a4:	mov	x2, sp
   329a8:	mov	x0, x23
   329ac:	mov	x1, x22
   329b0:	mov	x3, x20
   329b4:	mov	x4, x19
   329b8:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   329bc:	mov	x0, x23
   329c0:	mov	x1, x20
   329c4:	mov	x2, x19
   329c8:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   329cc:	ldrb	w8, [sp]
   329d0:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   329d4:	cmp	w8, #0x1f
   329d8:	b.hi	329ec <PyInit__decimal@@Base+0x2bf38>  // b.pmore
   329dc:	ldr	x8, [x19, #1376]
   329e0:	ldr	x0, [sp, #40]
   329e4:	blr	x8
   329e8:	ldrb	w8, [sp]
   329ec:	tbnz	w8, #4, 329fc <PyInit__decimal@@Base+0x2bf48>
   329f0:	ldr	x8, [x19, #1376]
   329f4:	mov	x0, sp
   329f8:	blr	x8
   329fc:	add	sp, sp, #0x260
   32a00:	ldp	x20, x19, [sp, #48]
   32a04:	ldp	x22, x21, [sp, #32]
   32a08:	ldp	x28, x23, [sp, #16]
   32a0c:	ldp	x29, x30, [sp], #64
   32a10:	ret
   32a14:	stp	x29, x30, [sp, #-64]!
   32a18:	stp	x28, x23, [sp, #16]
   32a1c:	stp	x22, x21, [sp, #32]
   32a20:	stp	x20, x19, [sp, #48]
   32a24:	mov	x29, sp
   32a28:	sub	sp, sp, #0x260
   32a2c:	mov	x23, x0
   32a30:	mov	w8, #0x30                  	// #48
   32a34:	mov	w9, #0x40                  	// #64
   32a38:	add	x10, sp, #0x30
   32a3c:	sub	x0, x29, #0x30
   32a40:	mov	x19, x4
   32a44:	mov	x20, x3
   32a48:	mov	x21, x2
   32a4c:	mov	x22, x1
   32a50:	stp	xzr, xzr, [sp, #8]
   32a54:	strb	w8, [sp]
   32a58:	stp	xzr, x9, [sp, #24]
   32a5c:	str	x10, [sp, #40]
   32a60:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   32a64:	mov	x0, sp
   32a68:	mov	w1, wzr
   32a6c:	mov	x2, x21
   32a70:	mov	x3, xzr
   32a74:	bl	23450 <PyInit__decimal@@Base+0x1c99c>
   32a78:	mov	x0, sp
   32a7c:	sub	x1, x29, #0x30
   32a80:	mov	x2, x19
   32a84:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   32a88:	mov	x2, sp
   32a8c:	mov	x0, x23
   32a90:	mov	x1, x22
   32a94:	mov	x3, x20
   32a98:	mov	x4, x19
   32a9c:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   32aa0:	mov	x0, x23
   32aa4:	mov	x1, x20
   32aa8:	mov	x2, x19
   32aac:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   32ab0:	ldrb	w8, [sp]
   32ab4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   32ab8:	cmp	w8, #0x1f
   32abc:	b.hi	32ad0 <PyInit__decimal@@Base+0x2c01c>  // b.pmore
   32ac0:	ldr	x8, [x19, #1376]
   32ac4:	ldr	x0, [sp, #40]
   32ac8:	blr	x8
   32acc:	ldrb	w8, [sp]
   32ad0:	tbnz	w8, #4, 32ae0 <PyInit__decimal@@Base+0x2c02c>
   32ad4:	ldr	x8, [x19, #1376]
   32ad8:	mov	x0, sp
   32adc:	blr	x8
   32ae0:	add	sp, sp, #0x260
   32ae4:	ldp	x20, x19, [sp, #48]
   32ae8:	ldp	x22, x21, [sp, #32]
   32aec:	ldp	x28, x23, [sp, #16]
   32af0:	ldp	x29, x30, [sp], #64
   32af4:	ret
   32af8:	sxtw	x2, w2
   32afc:	b	3292c <PyInit__decimal@@Base+0x2be78>
   32b00:	mov	w2, w2
   32b04:	b	32a14 <PyInit__decimal@@Base+0x2bf60>
   32b08:	b	3292c <PyInit__decimal@@Base+0x2be78>
   32b0c:	b	32a14 <PyInit__decimal@@Base+0x2bf60>
   32b10:	sub	sp, sp, #0xa0
   32b14:	stp	x29, x30, [sp, #96]
   32b18:	str	x23, [sp, #112]
   32b1c:	stp	x22, x21, [sp, #128]
   32b20:	stp	x20, x19, [sp, #144]
   32b24:	add	x29, sp, #0x60
   32b28:	mov	w8, #0x1                   	// #1
   32b2c:	mov	w9, #0x90                  	// #144
   32b30:	str	x8, [x29, #24]
   32b34:	strb	w9, [sp]
   32b38:	ldr	x9, [x2, #16]
   32b3c:	ldr	x10, [x2]
   32b40:	dup	v0.2d, x8
   32b44:	str	q0, [sp, #16]
   32b48:	mov	x20, x3
   32b4c:	sub	x11, x9, x10
   32b50:	str	x11, [sp, #8]
   32b54:	add	x11, x29, #0x18
   32b58:	stp	x8, x11, [sp, #32]
   32b5c:	ldrb	w8, [x1]
   32b60:	mov	x22, x2
   32b64:	mov	x21, x1
   32b68:	mov	x19, x0
   32b6c:	tst	w8, #0xe
   32b70:	b.eq	32c00 <PyInit__decimal@@Base+0x2c14c>  // b.none
   32b74:	mov	x0, x19
   32b78:	mov	x1, x21
   32b7c:	mov	x2, x22
   32b80:	mov	x3, x20
   32b84:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   32b88:	cbnz	w0, 32d4c <PyInit__decimal@@Base+0x2c298>
   32b8c:	ldrb	w8, [x21]
   32b90:	tbnz	w8, #0, 32c68 <PyInit__decimal@@Base+0x2c1b4>
   32b94:	ldrb	w9, [x19]
   32b98:	mov	x10, #0x9436                	// #37942
   32b9c:	movk	x10, #0x50d7, lsl #16
   32ba0:	movk	x10, #0x435e, lsl #32
   32ba4:	and	w8, w9, #0xf0
   32ba8:	strb	w8, [x19]
   32bac:	ldr	x8, [x22]
   32bb0:	movk	x10, #0xd79, lsl #48
   32bb4:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   32bb8:	mov	x11, #0xffffffffffffffed    	// #-19
   32bbc:	smulh	x10, x8, x10
   32bc0:	ldr	x12, [x12, #1344]
   32bc4:	add	x13, x10, x10, lsr #63
   32bc8:	madd	x23, x13, x11, x8
   32bcc:	cmp	x23, #0x0
   32bd0:	ldr	x10, [x19, #32]
   32bd4:	cinc	x21, x13, ne  // ne = any
   32bd8:	cmp	x12, x21
   32bdc:	csel	x1, x21, x12, lt  // lt = tstop
   32be0:	cmp	x1, x10
   32be4:	b.eq	32d80 <PyInit__decimal@@Base+0x2c2cc>  // b.none
   32be8:	tbnz	w9, #5, 32d64 <PyInit__decimal@@Base+0x2c2b0>
   32bec:	mov	x0, x19
   32bf0:	mov	x2, x20
   32bf4:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32bf8:	cbnz	w0, 32d7c <PyInit__decimal@@Base+0x2c2c8>
   32bfc:	b	32e1c <PyInit__decimal@@Base+0x2c368>
   32c00:	str	x10, [sp, #48]
   32c04:	ldr	x10, [x22, #8]
   32c08:	adrp	x11, 45000 <PyInit__decimal@@Base+0x3e54c>
   32c0c:	stp	x9, xzr, [sp, #64]
   32c10:	ldr	d0, [x11, #2544]
   32c14:	str	x10, [sp, #56]
   32c18:	ldr	x9, [x22, #40]
   32c1c:	cmp	x19, x21
   32c20:	str	d0, [sp, #80]
   32c24:	str	x9, [sp, #88]
   32c28:	b.eq	32cf4 <PyInit__decimal@@Base+0x2c240>  // b.none
   32c2c:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   32c30:	ldr	x9, [x21, #24]
   32c34:	ldr	x11, [x10, #1344]
   32c38:	ldr	x10, [x19, #32]
   32c3c:	cmp	x11, x9
   32c40:	csel	x1, x9, x11, lt  // lt = tstop
   32c44:	cmp	x1, x10
   32c48:	b.eq	32cc8 <PyInit__decimal@@Base+0x2c214>  // b.none
   32c4c:	ldrb	w11, [x19]
   32c50:	tbnz	w11, #5, 32ca8 <PyInit__decimal@@Base+0x2c1f4>
   32c54:	mov	x0, x19
   32c58:	mov	x2, x20
   32c5c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32c60:	cbnz	w0, 32cc0 <PyInit__decimal@@Base+0x2c20c>
   32c64:	b	32d4c <PyInit__decimal@@Base+0x2c298>
   32c68:	cmp	x19, x21
   32c6c:	b.eq	32d4c <PyInit__decimal@@Base+0x2c298>  // b.none
   32c70:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   32c74:	ldr	x9, [x21, #24]
   32c78:	ldr	x11, [x10, #1344]
   32c7c:	ldr	x10, [x19, #32]
   32c80:	cmp	x11, x9
   32c84:	csel	x1, x9, x11, lt  // lt = tstop
   32c88:	cmp	x1, x10
   32c8c:	b.eq	32e5c <PyInit__decimal@@Base+0x2c3a8>  // b.none
   32c90:	ldrb	w11, [x19]
   32c94:	tbnz	w11, #5, 32e3c <PyInit__decimal@@Base+0x2c388>
   32c98:	mov	x0, x19
   32c9c:	mov	x2, x20
   32ca0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32ca4:	b	32e50 <PyInit__decimal@@Base+0x2c39c>
   32ca8:	cmp	x1, x10
   32cac:	b.le	32cc8 <PyInit__decimal@@Base+0x2c214>
   32cb0:	mov	x0, x19
   32cb4:	mov	x2, x20
   32cb8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32cbc:	cbz	w0, 32d4c <PyInit__decimal@@Base+0x2c298>
   32cc0:	ldr	x9, [x21, #24]
   32cc4:	ldrb	w8, [x21]
   32cc8:	ldrb	w10, [x19]
   32ccc:	ldr	x0, [x19, #40]
   32cd0:	bfxil	w10, w8, #0, #4
   32cd4:	strb	w10, [x19]
   32cd8:	ldur	q0, [x21, #8]
   32cdc:	str	x9, [x19, #24]
   32ce0:	stur	q0, [x19, #8]
   32ce4:	ldr	x8, [x21, #24]
   32ce8:	ldr	x1, [x21, #40]
   32cec:	lsl	x2, x8, #3
   32cf0:	bl	63c0 <memcpy@plt>
   32cf4:	add	x8, sp, #0x30
   32cf8:	add	x22, x8, #0x1c
   32cfc:	add	x1, sp, #0x30
   32d00:	mov	x0, x19
   32d04:	mov	x2, x22
   32d08:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   32d0c:	ldr	w8, [sp, #76]
   32d10:	tst	w8, #0x3fe
   32d14:	b.ne	32d38 <PyInit__decimal@@Base+0x2c284>  // b.any
   32d18:	mov	x2, sp
   32d1c:	add	x3, sp, #0x30
   32d20:	mov	x0, x19
   32d24:	mov	x1, x21
   32d28:	mov	x4, x22
   32d2c:	str	wzr, [sp, #76]
   32d30:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   32d34:	ldr	w8, [sp, #76]
   32d38:	ldr	w9, [x20]
   32d3c:	mov	w10, #0x3be                 	// #958
   32d40:	and	w8, w8, w10
   32d44:	orr	w8, w9, w8
   32d48:	str	w8, [x20]
   32d4c:	ldp	x20, x19, [sp, #144]
   32d50:	ldp	x22, x21, [sp, #128]
   32d54:	ldr	x23, [sp, #112]
   32d58:	ldp	x29, x30, [sp, #96]
   32d5c:	add	sp, sp, #0xa0
   32d60:	ret
   32d64:	cmp	x1, x10
   32d68:	b.le	32d80 <PyInit__decimal@@Base+0x2c2cc>
   32d6c:	mov	x0, x19
   32d70:	mov	x2, x20
   32d74:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32d78:	cbz	w0, 32e1c <PyInit__decimal@@Base+0x2c368>
   32d7c:	ldr	x8, [x22]
   32d80:	cmp	x23, #0x1
   32d84:	sub	x9, x21, #0x1
   32d88:	stp	x8, x21, [x19, #16]
   32d8c:	b.lt	32db0 <PyInit__decimal@@Base+0x2c2fc>  // b.tstop
   32d90:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   32d94:	add	x8, x8, #0xca0
   32d98:	ldr	x8, [x8, x23, lsl #3]
   32d9c:	ldr	x10, [x19, #40]
   32da0:	sub	x11, x21, #0x2
   32da4:	sub	x8, x8, #0x1
   32da8:	str	x8, [x10, x9, lsl #3]
   32dac:	mov	x9, x11
   32db0:	tbnz	x9, #63, 32e1c <PyInit__decimal@@Base+0x2c368>
   32db4:	ldr	x8, [x19, #40]
   32db8:	add	x10, x9, #0x1
   32dbc:	cmp	x10, #0x2
   32dc0:	b.cc	32dfc <PyInit__decimal@@Base+0x2c348>  // b.lo, b.ul, b.last
   32dc4:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   32dc8:	movk	x13, #0x2304, lsl #32
   32dcc:	and	x11, x10, #0xfffffffffffffffe
   32dd0:	add	x12, x8, x9, lsl #3
   32dd4:	movk	x13, #0x8ac7, lsl #48
   32dd8:	sub	x9, x9, x11
   32ddc:	sub	x12, x12, #0x8
   32de0:	dup	v0.2d, x13
   32de4:	mov	x13, x11
   32de8:	subs	x13, x13, #0x2
   32dec:	str	q0, [x12], #-16
   32df0:	b.ne	32de8 <PyInit__decimal@@Base+0x2c334>  // b.any
   32df4:	cmp	x10, x11
   32df8:	b.eq	32e1c <PyInit__decimal@@Base+0x2c368>  // b.none
   32dfc:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   32e00:	movk	x10, #0x2304, lsl #32
   32e04:	movk	x10, #0x8ac7, lsl #48
   32e08:	sub	x11, x9, #0x1
   32e0c:	cmp	x9, #0x0
   32e10:	str	x10, [x8, x9, lsl #3]
   32e14:	mov	x9, x11
   32e18:	b.gt	32e08 <PyInit__decimal@@Base+0x2c354>
   32e1c:	ldrb	w8, [x19]
   32e20:	tst	w8, #0xc
   32e24:	b.ne	32d4c <PyInit__decimal@@Base+0x2c298>  // b.any
   32e28:	ldp	x9, x8, [x22]
   32e2c:	sub	x8, x8, x9
   32e30:	add	x8, x8, #0x1
   32e34:	str	x8, [x19, #8]
   32e38:	b	32d4c <PyInit__decimal@@Base+0x2c298>
   32e3c:	cmp	x1, x10
   32e40:	b.le	32e5c <PyInit__decimal@@Base+0x2c3a8>
   32e44:	mov	x0, x19
   32e48:	mov	x2, x20
   32e4c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   32e50:	cbz	w0, 32d4c <PyInit__decimal@@Base+0x2c298>
   32e54:	ldr	x9, [x21, #24]
   32e58:	ldrb	w8, [x21]
   32e5c:	ldrb	w10, [x19]
   32e60:	ldr	x0, [x19, #40]
   32e64:	bfxil	w10, w8, #0, #4
   32e68:	strb	w10, [x19]
   32e6c:	ldur	q0, [x21, #8]
   32e70:	str	x9, [x19, #24]
   32e74:	stur	q0, [x19, #8]
   32e78:	ldr	x8, [x21, #24]
   32e7c:	ldr	x1, [x21, #40]
   32e80:	lsl	x2, x8, #3
   32e84:	bl	63c0 <memcpy@plt>
   32e88:	b	32d4c <PyInit__decimal@@Base+0x2c298>
   32e8c:	sub	sp, sp, #0xa0
   32e90:	stp	x29, x30, [sp, #96]
   32e94:	str	x23, [sp, #112]
   32e98:	stp	x22, x21, [sp, #128]
   32e9c:	stp	x20, x19, [sp, #144]
   32ea0:	add	x29, sp, #0x60
   32ea4:	mov	w8, #0x1                   	// #1
   32ea8:	mov	w9, #0x90                  	// #144
   32eac:	str	x8, [x29, #24]
   32eb0:	strb	w9, [sp]
   32eb4:	ldr	x9, [x2, #16]
   32eb8:	ldr	x10, [x2]
   32ebc:	dup	v0.2d, x8
   32ec0:	str	q0, [sp, #16]
   32ec4:	mov	x20, x3
   32ec8:	sub	x11, x9, x10
   32ecc:	str	x11, [sp, #8]
   32ed0:	add	x11, x29, #0x18
   32ed4:	stp	x8, x11, [sp, #32]
   32ed8:	ldrb	w8, [x1]
   32edc:	mov	x22, x2
   32ee0:	mov	x21, x1
   32ee4:	mov	x19, x0
   32ee8:	tst	w8, #0xe
   32eec:	b.eq	32f50 <PyInit__decimal@@Base+0x2c49c>  // b.none
   32ef0:	mov	x0, x19
   32ef4:	mov	x1, x21
   32ef8:	mov	x2, x22
   32efc:	mov	x3, x20
   32f00:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   32f04:	cbnz	w0, 330c8 <PyInit__decimal@@Base+0x2c614>
   32f08:	ldrb	w8, [x21]
   32f0c:	tbnz	w8, #0, 32fb8 <PyInit__decimal@@Base+0x2c504>
   32f10:	cmp	x19, x21
   32f14:	b.eq	330c8 <PyInit__decimal@@Base+0x2c614>  // b.none
   32f18:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   32f1c:	ldr	x9, [x21, #24]
   32f20:	ldr	x11, [x10, #1344]
   32f24:	ldr	x10, [x19, #32]
   32f28:	cmp	x11, x9
   32f2c:	csel	x1, x9, x11, lt  // lt = tstop
   32f30:	cmp	x1, x10
   32f34:	b.eq	331e4 <PyInit__decimal@@Base+0x2c730>  // b.none
   32f38:	ldrb	w11, [x19]
   32f3c:	tbnz	w11, #5, 331c4 <PyInit__decimal@@Base+0x2c710>
   32f40:	mov	x0, x19
   32f44:	mov	x2, x20
   32f48:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32f4c:	b	331d8 <PyInit__decimal@@Base+0x2c724>
   32f50:	str	x10, [sp, #48]
   32f54:	ldr	x10, [x22, #8]
   32f58:	adrp	x11, 45000 <PyInit__decimal@@Base+0x3e54c>
   32f5c:	stp	x9, xzr, [sp, #64]
   32f60:	ldr	d0, [x11, #2552]
   32f64:	str	x10, [sp, #56]
   32f68:	ldr	x9, [x22, #40]
   32f6c:	cmp	x19, x21
   32f70:	str	d0, [sp, #80]
   32f74:	str	x9, [sp, #88]
   32f78:	b.eq	33070 <PyInit__decimal@@Base+0x2c5bc>  // b.none
   32f7c:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   32f80:	ldr	x9, [x21, #24]
   32f84:	ldr	x11, [x10, #1344]
   32f88:	ldr	x10, [x19, #32]
   32f8c:	cmp	x11, x9
   32f90:	csel	x1, x9, x11, lt  // lt = tstop
   32f94:	cmp	x1, x10
   32f98:	b.eq	33044 <PyInit__decimal@@Base+0x2c590>  // b.none
   32f9c:	ldrb	w11, [x19]
   32fa0:	tbnz	w11, #5, 33024 <PyInit__decimal@@Base+0x2c570>
   32fa4:	mov	x0, x19
   32fa8:	mov	x2, x20
   32fac:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   32fb0:	cbnz	w0, 3303c <PyInit__decimal@@Base+0x2c588>
   32fb4:	b	330c8 <PyInit__decimal@@Base+0x2c614>
   32fb8:	ldrb	w9, [x19]
   32fbc:	mov	x10, #0x9436                	// #37942
   32fc0:	movk	x10, #0x50d7, lsl #16
   32fc4:	movk	x10, #0x435e, lsl #32
   32fc8:	and	w8, w9, #0xf0
   32fcc:	strb	w8, [x19]
   32fd0:	ldr	x8, [x22]
   32fd4:	movk	x10, #0xd79, lsl #48
   32fd8:	adrp	x12, 59000 <PyInit__decimal@@Base+0x5254c>
   32fdc:	mov	x11, #0xffffffffffffffed    	// #-19
   32fe0:	smulh	x10, x8, x10
   32fe4:	ldr	x12, [x12, #1344]
   32fe8:	add	x13, x10, x10, lsr #63
   32fec:	madd	x23, x13, x11, x8
   32ff0:	cmp	x23, #0x0
   32ff4:	ldr	x10, [x19, #32]
   32ff8:	cinc	x21, x13, ne  // ne = any
   32ffc:	cmp	x12, x21
   33000:	csel	x1, x21, x12, lt  // lt = tstop
   33004:	cmp	x1, x10
   33008:	b.eq	330fc <PyInit__decimal@@Base+0x2c648>  // b.none
   3300c:	tbnz	w9, #5, 330e0 <PyInit__decimal@@Base+0x2c62c>
   33010:	mov	x0, x19
   33014:	mov	x2, x20
   33018:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3301c:	cbnz	w0, 330f8 <PyInit__decimal@@Base+0x2c644>
   33020:	b	33198 <PyInit__decimal@@Base+0x2c6e4>
   33024:	cmp	x1, x10
   33028:	b.le	33044 <PyInit__decimal@@Base+0x2c590>
   3302c:	mov	x0, x19
   33030:	mov	x2, x20
   33034:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   33038:	cbz	w0, 330c8 <PyInit__decimal@@Base+0x2c614>
   3303c:	ldr	x9, [x21, #24]
   33040:	ldrb	w8, [x21]
   33044:	ldrb	w10, [x19]
   33048:	ldr	x0, [x19, #40]
   3304c:	bfxil	w10, w8, #0, #4
   33050:	strb	w10, [x19]
   33054:	ldur	q0, [x21, #8]
   33058:	str	x9, [x19, #24]
   3305c:	stur	q0, [x19, #8]
   33060:	ldr	x8, [x21, #24]
   33064:	ldr	x1, [x21, #40]
   33068:	lsl	x2, x8, #3
   3306c:	bl	63c0 <memcpy@plt>
   33070:	add	x8, sp, #0x30
   33074:	add	x22, x8, #0x1c
   33078:	add	x1, sp, #0x30
   3307c:	mov	x0, x19
   33080:	mov	x2, x22
   33084:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   33088:	ldr	w8, [sp, #76]
   3308c:	tst	w8, #0x3fe
   33090:	b.ne	330b4 <PyInit__decimal@@Base+0x2c600>  // b.any
   33094:	mov	x2, sp
   33098:	add	x3, sp, #0x30
   3309c:	mov	x0, x19
   330a0:	mov	x1, x21
   330a4:	mov	x4, x22
   330a8:	str	wzr, [sp, #76]
   330ac:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   330b0:	ldr	w8, [sp, #76]
   330b4:	ldr	w9, [x20]
   330b8:	mov	w10, #0x3be                 	// #958
   330bc:	and	w8, w8, w10
   330c0:	orr	w8, w9, w8
   330c4:	str	w8, [x20]
   330c8:	ldp	x20, x19, [sp, #144]
   330cc:	ldp	x22, x21, [sp, #128]
   330d0:	ldr	x23, [sp, #112]
   330d4:	ldp	x29, x30, [sp, #96]
   330d8:	add	sp, sp, #0xa0
   330dc:	ret
   330e0:	cmp	x1, x10
   330e4:	b.le	330fc <PyInit__decimal@@Base+0x2c648>
   330e8:	mov	x0, x19
   330ec:	mov	x2, x20
   330f0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   330f4:	cbz	w0, 33198 <PyInit__decimal@@Base+0x2c6e4>
   330f8:	ldr	x8, [x22]
   330fc:	cmp	x23, #0x1
   33100:	sub	x9, x21, #0x1
   33104:	stp	x8, x21, [x19, #16]
   33108:	b.lt	3312c <PyInit__decimal@@Base+0x2c678>  // b.tstop
   3310c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   33110:	add	x8, x8, #0xca0
   33114:	ldr	x8, [x8, x23, lsl #3]
   33118:	ldr	x10, [x19, #40]
   3311c:	sub	x11, x21, #0x2
   33120:	sub	x8, x8, #0x1
   33124:	str	x8, [x10, x9, lsl #3]
   33128:	mov	x9, x11
   3312c:	tbnz	x9, #63, 33198 <PyInit__decimal@@Base+0x2c6e4>
   33130:	ldr	x8, [x19, #40]
   33134:	add	x10, x9, #0x1
   33138:	cmp	x10, #0x2
   3313c:	b.cc	33178 <PyInit__decimal@@Base+0x2c6c4>  // b.lo, b.ul, b.last
   33140:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   33144:	movk	x13, #0x2304, lsl #32
   33148:	and	x11, x10, #0xfffffffffffffffe
   3314c:	add	x12, x8, x9, lsl #3
   33150:	movk	x13, #0x8ac7, lsl #48
   33154:	sub	x9, x9, x11
   33158:	sub	x12, x12, #0x8
   3315c:	dup	v0.2d, x13
   33160:	mov	x13, x11
   33164:	subs	x13, x13, #0x2
   33168:	str	q0, [x12], #-16
   3316c:	b.ne	33164 <PyInit__decimal@@Base+0x2c6b0>  // b.any
   33170:	cmp	x10, x11
   33174:	b.eq	33198 <PyInit__decimal@@Base+0x2c6e4>  // b.none
   33178:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   3317c:	movk	x10, #0x2304, lsl #32
   33180:	movk	x10, #0x8ac7, lsl #48
   33184:	sub	x11, x9, #0x1
   33188:	cmp	x9, #0x0
   3318c:	str	x10, [x8, x9, lsl #3]
   33190:	mov	x9, x11
   33194:	b.gt	33184 <PyInit__decimal@@Base+0x2c6d0>
   33198:	ldrb	w8, [x19]
   3319c:	tst	w8, #0xc
   331a0:	b.ne	330c8 <PyInit__decimal@@Base+0x2c614>  // b.any
   331a4:	and	w8, w8, #0xf0
   331a8:	orr	w8, w8, #0x1
   331ac:	strb	w8, [x19]
   331b0:	ldp	x9, x8, [x22]
   331b4:	sub	x8, x8, x9
   331b8:	add	x8, x8, #0x1
   331bc:	str	x8, [x19, #8]
   331c0:	b	330c8 <PyInit__decimal@@Base+0x2c614>
   331c4:	cmp	x1, x10
   331c8:	b.le	331e4 <PyInit__decimal@@Base+0x2c730>
   331cc:	mov	x0, x19
   331d0:	mov	x2, x20
   331d4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   331d8:	cbz	w0, 330c8 <PyInit__decimal@@Base+0x2c614>
   331dc:	ldr	x9, [x21, #24]
   331e0:	ldrb	w8, [x21]
   331e4:	ldrb	w10, [x19]
   331e8:	ldr	x0, [x19, #40]
   331ec:	bfxil	w10, w8, #0, #4
   331f0:	strb	w10, [x19]
   331f4:	ldur	q0, [x21, #8]
   331f8:	str	x9, [x19, #24]
   331fc:	stur	q0, [x19, #8]
   33200:	ldr	x8, [x21, #24]
   33204:	ldr	x1, [x21, #40]
   33208:	lsl	x2, x8, #3
   3320c:	bl	63c0 <memcpy@plt>
   33210:	b	330c8 <PyInit__decimal@@Base+0x2c614>
   33214:	stp	x29, x30, [sp, #-64]!
   33218:	str	x23, [sp, #16]
   3321c:	stp	x22, x21, [sp, #32]
   33220:	stp	x20, x19, [sp, #48]
   33224:	mov	x29, sp
   33228:	mov	x20, x4
   3322c:	mov	x22, x3
   33230:	mov	x23, x2
   33234:	mov	x21, x1
   33238:	mov	x19, x0
   3323c:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   33240:	cbz	w0, 33258 <PyInit__decimal@@Base+0x2c7a4>
   33244:	ldp	x20, x19, [sp, #48]
   33248:	ldp	x22, x21, [sp, #32]
   3324c:	ldr	x23, [sp, #16]
   33250:	ldp	x29, x30, [sp], #64
   33254:	ret
   33258:	mov	x0, x21
   3325c:	mov	x1, x23
   33260:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   33264:	cbz	w0, 332d8 <PyInit__decimal@@Base+0x2c824>
   33268:	tbnz	w0, #31, 3331c <PyInit__decimal@@Base+0x2c868>
   3326c:	mov	x0, x19
   33270:	mov	x1, x21
   33274:	mov	x2, x22
   33278:	mov	x3, x20
   3327c:	bl	32b10 <PyInit__decimal@@Base+0x2c05c>
   33280:	ldrb	w8, [x19]
   33284:	tbnz	w8, #1, 33338 <PyInit__decimal@@Base+0x2c884>
   33288:	ldp	x9, x10, [x19, #8]
   3328c:	ldr	x11, [x22, #16]
   33290:	add	x9, x9, x10
   33294:	sub	x9, x9, #0x1
   33298:	cmp	x9, x11
   3329c:	b.ge	33244 <PyInit__decimal@@Base+0x2c790>  // b.tcont
   332a0:	ldr	w9, [x20]
   332a4:	mov	w10, #0x7040                	// #28736
   332a8:	tst	w8, #0xe
   332ac:	orr	w10, w9, w10
   332b0:	str	w10, [x20]
   332b4:	b.ne	33244 <PyInit__decimal@@Base+0x2c790>  // b.any
   332b8:	ldr	x8, [x19, #40]
   332bc:	ldr	x10, [x19, #24]
   332c0:	add	x8, x8, x10, lsl #3
   332c4:	ldur	x8, [x8, #-8]
   332c8:	cbnz	x8, 33244 <PyInit__decimal@@Base+0x2c790>
   332cc:	mov	w8, #0x7041                	// #28737
   332d0:	orr	w8, w9, w8
   332d4:	b	33344 <PyInit__decimal@@Base+0x2c890>
   332d8:	ldrb	w22, [x23]
   332dc:	cmp	x19, x21
   332e0:	b.eq	33398 <PyInit__decimal@@Base+0x2c8e4>  // b.none
   332e4:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   332e8:	ldr	x8, [x21, #24]
   332ec:	ldr	x10, [x9, #1344]
   332f0:	ldr	x9, [x19, #32]
   332f4:	cmp	x10, x8
   332f8:	csel	x1, x8, x10, lt  // lt = tstop
   332fc:	cmp	x1, x9
   33300:	b.eq	33368 <PyInit__decimal@@Base+0x2c8b4>  // b.none
   33304:	ldrb	w10, [x19]
   33308:	tbnz	w10, #5, 3334c <PyInit__decimal@@Base+0x2c898>
   3330c:	mov	x0, x19
   33310:	mov	x2, x20
   33314:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   33318:	b	33360 <PyInit__decimal@@Base+0x2c8ac>
   3331c:	mov	x0, x19
   33320:	mov	x1, x21
   33324:	mov	x2, x22
   33328:	mov	x3, x20
   3332c:	bl	32e8c <PyInit__decimal@@Base+0x2c3d8>
   33330:	ldrb	w8, [x19]
   33334:	tbz	w8, #1, 33288 <PyInit__decimal@@Base+0x2c7d4>
   33338:	ldr	w8, [x20]
   3333c:	mov	w9, #0x1840                	// #6208
   33340:	orr	w8, w8, w9
   33344:	str	w8, [x20]
   33348:	b	33244 <PyInit__decimal@@Base+0x2c790>
   3334c:	cmp	x1, x9
   33350:	b.le	33368 <PyInit__decimal@@Base+0x2c8b4>
   33354:	mov	x0, x19
   33358:	mov	x2, x20
   3335c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   33360:	cbz	w0, 33244 <PyInit__decimal@@Base+0x2c790>
   33364:	ldr	x8, [x21, #24]
   33368:	ldrb	w9, [x21]
   3336c:	ldrb	w10, [x19]
   33370:	ldr	x0, [x19, #40]
   33374:	bfxil	w10, w9, #0, #4
   33378:	strb	w10, [x19]
   3337c:	ldur	q0, [x21, #8]
   33380:	str	x8, [x19, #24]
   33384:	stur	q0, [x19, #8]
   33388:	ldr	x8, [x21, #24]
   3338c:	ldr	x1, [x21, #40]
   33390:	lsl	x2, x8, #3
   33394:	bl	63c0 <memcpy@plt>
   33398:	ldrb	w8, [x19]
   3339c:	and	w9, w22, #0x1
   333a0:	and	w8, w8, #0xfe
   333a4:	orr	w8, w8, w9
   333a8:	strb	w8, [x19]
   333ac:	b	33244 <PyInit__decimal@@Base+0x2c790>
   333b0:	stp	x29, x30, [sp, #-96]!
   333b4:	stp	x28, x27, [sp, #16]
   333b8:	stp	x26, x25, [sp, #32]
   333bc:	stp	x24, x23, [sp, #48]
   333c0:	stp	x22, x21, [sp, #64]
   333c4:	stp	x20, x19, [sp, #80]
   333c8:	mov	x29, sp
   333cc:	sub	sp, sp, #0x530
   333d0:	ldrb	w8, [x1]
   333d4:	mov	x20, x4
   333d8:	mov	x21, x3
   333dc:	mov	x23, x2
   333e0:	mov	x24, x1
   333e4:	tst	w8, #0xe
   333e8:	mov	x19, x0
   333ec:	b.ne	333fc <PyInit__decimal@@Base+0x2c948>  // b.any
   333f0:	ldrb	w8, [x23]
   333f4:	tst	w8, #0xe
   333f8:	b.eq	3341c <PyInit__decimal@@Base+0x2c968>  // b.none
   333fc:	mov	x0, x19
   33400:	mov	x1, x24
   33404:	mov	x2, x23
   33408:	mov	x3, x21
   3340c:	mov	x4, x20
   33410:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   33414:	cbnz	w0, 33fa0 <PyInit__decimal@@Base+0x2d4ec>
   33418:	ldrb	w8, [x23]
   3341c:	ands	w9, w8, #0xe
   33420:	b.eq	334bc <PyInit__decimal@@Base+0x2ca08>  // b.none
   33424:	mov	w27, wzr
   33428:	mov	w22, wzr
   3342c:	ldrb	w10, [x24]
   33430:	tst	w10, #0xe
   33434:	b.ne	335f0 <PyInit__decimal@@Base+0x2cb3c>  // b.any
   33438:	ldr	x11, [x24, #40]
   3343c:	ldr	x12, [x24, #24]
   33440:	add	x11, x11, x12, lsl #3
   33444:	ldur	x11, [x11, #-8]
   33448:	cbnz	x11, 335f0 <PyInit__decimal@@Base+0x2cb3c>
   3344c:	cbnz	w9, 33464 <PyInit__decimal@@Base+0x2c9b0>
   33450:	ldr	x9, [x23, #40]
   33454:	ldr	x10, [x23, #24]
   33458:	add	x9, x9, x10, lsl #3
   3345c:	ldur	x9, [x9, #-8]
   33460:	cbz	x9, 33744 <PyInit__decimal@@Base+0x2cc90>
   33464:	ldrb	w9, [x19]
   33468:	tbnz	w8, #0, 33894 <PyInit__decimal@@Base+0x2cde0>
   3346c:	tbnz	w9, #5, 334b0 <PyInit__decimal@@Base+0x2c9fc>
   33470:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   33474:	ldr	x8, [x19, #32]
   33478:	ldr	x1, [x20, #1344]
   3347c:	cmp	x8, x1
   33480:	b.le	334b0 <PyInit__decimal@@Base+0x2c9fc>
   33484:	strb	wzr, [sp, #600]
   33488:	ldr	x0, [x19, #40]
   3348c:	add	x3, sp, #0x258
   33490:	mov	w2, #0x8                   	// #8
   33494:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   33498:	str	x0, [x19, #40]
   3349c:	ldrb	w8, [sp, #600]
   334a0:	cbnz	w8, 334ac <PyInit__decimal@@Base+0x2c9f8>
   334a4:	ldr	x8, [x20, #1344]
   334a8:	str	x8, [x19, #32]
   334ac:	ldrb	w9, [x19]
   334b0:	ldr	x10, [x19, #40]
   334b4:	and	w8, w9, #0xf0
   334b8:	b	33940 <PyInit__decimal@@Base+0x2ce8c>
   334bc:	ldr	x10, [x23, #40]
   334c0:	ldr	x13, [x23, #24]
   334c4:	add	x11, x10, x13, lsl #3
   334c8:	ldur	x11, [x11, #-8]
   334cc:	cbz	x11, 33554 <PyInit__decimal@@Base+0x2caa0>
   334d0:	cmp	x13, #0x1
   334d4:	b.lt	334f8 <PyInit__decimal@@Base+0x2ca44>  // b.tstop
   334d8:	mov	x12, xzr
   334dc:	mov	x15, x10
   334e0:	ldr	x14, [x15]
   334e4:	cbnz	x14, 33500 <PyInit__decimal@@Base+0x2ca4c>
   334e8:	add	x12, x12, #0x13
   334ec:	subs	x13, x13, #0x1
   334f0:	add	x15, x15, #0x8
   334f4:	b.ne	334e0 <PyInit__decimal@@Base+0x2ca2c>  // b.any
   334f8:	mov	x12, xzr
   334fc:	b	33548 <PyInit__decimal@@Base+0x2ca94>
   33500:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   33504:	movk	x13, #0xcccd
   33508:	mul	x15, x14, x13
   3350c:	mov	x16, #0x9999999999999999    	// #-7378697629483820647
   33510:	ror	x15, x15, #1
   33514:	movk	x16, #0x1999, lsl #48
   33518:	cmp	x15, x16
   3351c:	b.hi	33548 <PyInit__decimal@@Base+0x2ca94>  // b.pmore
   33520:	mov	x15, #0x9999999999999999    	// #-7378697629483820647
   33524:	movk	x15, #0x999a
   33528:	movk	x15, #0x1999, lsl #48
   3352c:	umulh	x14, x14, x13
   33530:	lsr	x14, x14, #3
   33534:	mul	x16, x14, x13
   33538:	ror	x16, x16, #1
   3353c:	cmp	x16, x15
   33540:	add	x12, x12, #0x1
   33544:	b.cc	3352c <PyInit__decimal@@Base+0x2ca78>  // b.lo, b.ul, b.last
   33548:	ldr	x13, [x23, #8]
   3354c:	cmn	x13, x12
   33550:	b.mi	33424 <PyInit__decimal@@Base+0x2c970>  // b.first
   33554:	ldrb	w12, [x24]
   33558:	tbnz	w12, #0, 33574 <PyInit__decimal@@Base+0x2cac0>
   3355c:	mov	w22, wzr
   33560:	mov	w27, #0x1                   	// #1
   33564:	ldrb	w10, [x24]
   33568:	tst	w10, #0xe
   3356c:	b.ne	335f0 <PyInit__decimal@@Base+0x2cb3c>  // b.any
   33570:	b	33438 <PyInit__decimal@@Base+0x2c984>
   33574:	cbz	x11, 33584 <PyInit__decimal@@Base+0x2cad0>
   33578:	ldr	x11, [x23, #8]
   3357c:	tbnz	x11, #63, 3358c <PyInit__decimal@@Base+0x2cad8>
   33580:	cbz	x11, 335d0 <PyInit__decimal@@Base+0x2cb1c>
   33584:	mov	w10, wzr
   33588:	b	335d8 <PyInit__decimal@@Base+0x2cb24>
   3358c:	mov	x13, #0x435f                	// #17247
   33590:	movk	x13, #0xd79, lsl #16
   33594:	movk	x13, #0x35e5, lsl #32
   33598:	neg	x12, x11
   3359c:	movk	x13, #0xd794, lsl #48
   335a0:	umulh	x12, x12, x13
   335a4:	mov	x14, #0xffffffffffffffed    	// #-19
   335a8:	neg	x11, x11
   335ac:	lsr	x12, x12, #4
   335b0:	madd	x11, x12, x14, x11
   335b4:	ldr	x10, [x10, x12, lsl #3]
   335b8:	adrp	x12, 44000 <PyInit__decimal@@Base+0x3d54c>
   335bc:	add	x12, x12, #0xca0
   335c0:	ldr	x11, [x12, x11, lsl #3]
   335c4:	udiv	x10, x10, x11
   335c8:	and	w10, w10, #0x1
   335cc:	b	335d8 <PyInit__decimal@@Base+0x2cb24>
   335d0:	ldr	w10, [x10]
   335d4:	and	w10, w10, #0x1
   335d8:	cmp	w10, #0x0
   335dc:	cset	w22, ne  // ne = any
   335e0:	mov	w27, #0x1                   	// #1
   335e4:	ldrb	w10, [x24]
   335e8:	tst	w10, #0xe
   335ec:	b.eq	33438 <PyInit__decimal@@Base+0x2c984>  // b.none
   335f0:	tbnz	w10, #0, 33674 <PyInit__decimal@@Base+0x2cbc0>
   335f4:	tbz	w8, #1, 3367c <PyInit__decimal@@Base+0x2cbc8>
   335f8:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   335fc:	add	x1, x1, #0xc88
   33600:	mov	x0, x24
   33604:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   33608:	cbz	w0, 33844 <PyInit__decimal@@Base+0x2cd90>
   3360c:	ldrb	w8, [x23]
   33610:	mov	w9, #0x1                   	// #1
   33614:	ubfiz	w10, w8, #1, #1
   33618:	ldrb	w8, [x19]
   3361c:	sub	w9, w9, w10
   33620:	mul	w9, w9, w0
   33624:	tbnz	w9, #31, 338f4 <PyInit__decimal@@Base+0x2ce40>
   33628:	tbnz	w8, #5, 3366c <PyInit__decimal@@Base+0x2cbb8>
   3362c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   33630:	ldr	x9, [x19, #32]
   33634:	ldr	x1, [x20, #1344]
   33638:	cmp	x9, x1
   3363c:	b.le	3366c <PyInit__decimal@@Base+0x2cbb8>
   33640:	strb	wzr, [sp, #600]
   33644:	ldr	x0, [x19, #40]
   33648:	add	x3, sp, #0x258
   3364c:	mov	w2, #0x8                   	// #8
   33650:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   33654:	str	x0, [x19, #40]
   33658:	ldrb	w8, [sp, #600]
   3365c:	cbnz	w8, 33668 <PyInit__decimal@@Base+0x2cbb4>
   33660:	ldr	x8, [x20, #1344]
   33664:	str	x8, [x19, #32]
   33668:	ldrb	w8, [x19]
   3366c:	and	w8, w8, #0xf0
   33670:	b	338dc <PyInit__decimal@@Base+0x2ce28>
   33674:	tbnz	w8, #1, 33744 <PyInit__decimal@@Base+0x2cc90>
   33678:	cbz	w27, 33744 <PyInit__decimal@@Base+0x2cc90>
   3367c:	cbz	w9, 337ac <PyInit__decimal@@Base+0x2ccf8>
   33680:	mov	w9, wzr
   33684:	tbnz	w10, #1, 337c8 <PyInit__decimal@@Base+0x2cd14>
   33688:	cbnz	w9, 337cc <PyInit__decimal@@Base+0x2cd18>
   3368c:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   33690:	add	x1, x1, #0xc88
   33694:	mov	x0, x24
   33698:	str	wzr, [sp, #600]
   3369c:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   336a0:	cbz	w0, 33a5c <PyInit__decimal@@Base+0x2cfa8>
   336a4:	ldrb	w8, [x24]
   336a8:	ldr	x26, [x23, #8]
   336ac:	ldr	x9, [x24, #8]
   336b0:	and	w8, w8, #0xe
   336b4:	mov	w10, #0x50                  	// #80
   336b8:	orr	w10, w8, w10
   336bc:	stur	x9, [x29, #-96]
   336c0:	ldr	q0, [x24, #16]
   336c4:	stur	q0, [x29, #-88]
   336c8:	fmov	x8, d0
   336cc:	ldr	q0, [x24, #32]
   336d0:	sturb	w10, [x29, #-104]
   336d4:	add	x8, x8, x9
   336d8:	mov	w9, #0x30                  	// #48
   336dc:	stur	q0, [x29, #-72]
   336e0:	ldr	x28, [x23, #16]
   336e4:	sturb	w9, [x29, #-56]
   336e8:	mov	w9, #0x40                  	// #64
   336ec:	sub	x25, x8, #0x1
   336f0:	stp	xzr, x9, [x29, #-32]
   336f4:	add	x9, sp, #0x28
   336f8:	cmp	x25, #0x1
   336fc:	stur	x9, [x29, #-16]
   33700:	stp	xzr, xzr, [x29, #-48]
   33704:	b.lt	33acc <PyInit__decimal@@Base+0x2d018>  // b.tstop
   33708:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   3370c:	add	x8, x8, #0xca0
   33710:	ldr	x9, [x8, #72]
   33714:	cmp	x9, x25
   33718:	b.ls	33b14 <PyInit__decimal@@Base+0x2d060>  // b.plast
   3371c:	ldr	x9, [x8, #32]
   33720:	cmp	x9, x25
   33724:	b.ls	33ba4 <PyInit__decimal@@Base+0x2d0f0>  // b.plast
   33728:	ldr	x9, [x8, #16]
   3372c:	cmp	x9, x25
   33730:	b.ls	33d34 <PyInit__decimal@@Base+0x2d280>  // b.plast
   33734:	ldr	x8, [x8, #8]
   33738:	cmp	x8, x25
   3373c:	mov	w8, #0x1                   	// #1
   33740:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33744:	ldrb	w8, [x19]
   33748:	tbnz	w8, #5, 3378c <PyInit__decimal@@Base+0x2ccd8>
   3374c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   33750:	ldr	x9, [x19, #32]
   33754:	ldr	x1, [x21, #1344]
   33758:	cmp	x9, x1
   3375c:	b.le	3378c <PyInit__decimal@@Base+0x2ccd8>
   33760:	strb	wzr, [sp, #600]
   33764:	ldr	x0, [x19, #40]
   33768:	add	x3, sp, #0x258
   3376c:	mov	w2, #0x8                   	// #8
   33770:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   33774:	str	x0, [x19, #40]
   33778:	ldrb	w8, [sp, #600]
   3377c:	cbnz	w8, 33788 <PyInit__decimal@@Base+0x2ccd4>
   33780:	ldr	x8, [x21, #1344]
   33784:	str	x8, [x19, #32]
   33788:	ldrb	w8, [x19]
   3378c:	and	w8, w8, #0xf0
   33790:	orr	w8, w8, #0x4
   33794:	stp	xzr, xzr, [x19, #16]
   33798:	strb	w8, [x19]
   3379c:	str	xzr, [x19, #8]
   337a0:	ldr	w8, [x20]
   337a4:	orr	w8, w8, #0x100
   337a8:	b	33f9c <PyInit__decimal@@Base+0x2d4e8>
   337ac:	ldr	x9, [x23, #40]
   337b0:	ldr	x11, [x23, #24]
   337b4:	add	x9, x9, x11, lsl #3
   337b8:	ldur	x9, [x9, #-8]
   337bc:	cmp	x9, #0x0
   337c0:	cset	w9, eq  // eq = none
   337c4:	tbz	w10, #1, 33688 <PyInit__decimal@@Base+0x2cbd4>
   337c8:	cbz	w9, 3388c <PyInit__decimal@@Base+0x2cdd8>
   337cc:	ldrb	w8, [x19]
   337d0:	tbnz	w8, #5, 33814 <PyInit__decimal@@Base+0x2cd60>
   337d4:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   337d8:	ldr	x9, [x19, #32]
   337dc:	ldr	x1, [x20, #1344]
   337e0:	cmp	x9, x1
   337e4:	b.le	33814 <PyInit__decimal@@Base+0x2cd60>
   337e8:	strb	wzr, [sp, #600]
   337ec:	ldr	x0, [x19, #40]
   337f0:	add	x3, sp, #0x258
   337f4:	mov	w2, #0x8                   	// #8
   337f8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   337fc:	str	x0, [x19, #40]
   33800:	ldrb	w8, [sp, #600]
   33804:	cbnz	w8, 33810 <PyInit__decimal@@Base+0x2cd5c>
   33808:	ldr	x8, [x20, #1344]
   3380c:	str	x8, [x19, #32]
   33810:	ldrb	w8, [x19]
   33814:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   33818:	ldr	x10, [x19, #40]
   3381c:	ldr	q0, [x9, #2464]
   33820:	and	w8, w8, #0xf0
   33824:	mov	w11, #0x1                   	// #1
   33828:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   3382c:	orr	w8, w8, w22
   33830:	str	xzr, [x19, #8]
   33834:	add	x9, x9, #0xca0
   33838:	strb	w8, [x19]
   3383c:	str	q0, [x10]
   33840:	b	3395c <PyInit__decimal@@Base+0x2cea8>
   33844:	ldr	x21, [x21]
   33848:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   3384c:	add	x1, x1, #0xc88
   33850:	mov	x0, x19
   33854:	sub	x2, x21, #0x1
   33858:	mov	x3, x20
   3385c:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   33860:	ldrb	w8, [x19]
   33864:	mov	w9, #0x1                   	// #1
   33868:	sub	x9, x9, x21
   3386c:	str	x9, [x19, #8]
   33870:	and	w8, w8, #0xf0
   33874:	orr	w8, w8, w22
   33878:	strb	w8, [x19]
   3387c:	ldr	w8, [x20]
   33880:	mov	w9, #0x1040                	// #4160
   33884:	orr	w8, w8, w9
   33888:	b	33f9c <PyInit__decimal@@Base+0x2d4e8>
   3388c:	ldrb	w9, [x19]
   33890:	tbnz	w8, #0, 3346c <PyInit__decimal@@Base+0x2c9b8>
   33894:	tbnz	w9, #5, 338d8 <PyInit__decimal@@Base+0x2ce24>
   33898:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   3389c:	ldr	x8, [x19, #32]
   338a0:	ldr	x1, [x20, #1344]
   338a4:	cmp	x8, x1
   338a8:	b.le	338d8 <PyInit__decimal@@Base+0x2ce24>
   338ac:	strb	wzr, [sp, #600]
   338b0:	ldr	x0, [x19, #40]
   338b4:	add	x3, sp, #0x258
   338b8:	mov	w2, #0x8                   	// #8
   338bc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   338c0:	str	x0, [x19, #40]
   338c4:	ldrb	w8, [sp, #600]
   338c8:	cbnz	w8, 338d4 <PyInit__decimal@@Base+0x2ce20>
   338cc:	ldr	x8, [x20, #1344]
   338d0:	str	x8, [x19, #32]
   338d4:	ldrb	w9, [x19]
   338d8:	and	w8, w9, #0xf0
   338dc:	orr	w8, w22, w8
   338e0:	orr	w8, w8, #0x2
   338e4:	stp	xzr, xzr, [x19, #16]
   338e8:	strb	w8, [x19]
   338ec:	str	xzr, [x19, #8]
   338f0:	b	33fa0 <PyInit__decimal@@Base+0x2d4ec>
   338f4:	tbnz	w8, #5, 33938 <PyInit__decimal@@Base+0x2ce84>
   338f8:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   338fc:	ldr	x9, [x19, #32]
   33900:	ldr	x1, [x20, #1344]
   33904:	cmp	x9, x1
   33908:	b.le	33938 <PyInit__decimal@@Base+0x2ce84>
   3390c:	strb	wzr, [sp, #600]
   33910:	ldr	x0, [x19, #40]
   33914:	add	x3, sp, #0x258
   33918:	mov	w2, #0x8                   	// #8
   3391c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   33920:	str	x0, [x19, #40]
   33924:	ldrb	w8, [sp, #600]
   33928:	cbnz	w8, 33934 <PyInit__decimal@@Base+0x2ce80>
   3392c:	ldr	x8, [x20, #1344]
   33930:	str	x8, [x19, #32]
   33934:	ldrb	w8, [x19]
   33938:	ldr	x10, [x19, #40]
   3393c:	and	w8, w8, #0xf0
   33940:	mov	w11, #0x1                   	// #1
   33944:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   33948:	orr	w8, w8, w22
   3394c:	str	xzr, [x19, #8]
   33950:	add	x9, x9, #0xca0
   33954:	strb	w8, [x19]
   33958:	stp	xzr, xzr, [x10]
   3395c:	str	x11, [x19, #24]
   33960:	ldr	x8, [x10]
   33964:	ldr	x10, [x9, #72]
   33968:	cmp	x10, x8
   3396c:	b.ls	33998 <PyInit__decimal@@Base+0x2cee4>  // b.plast
   33970:	ldr	x10, [x9, #32]
   33974:	cmp	x10, x8
   33978:	b.ls	339c0 <PyInit__decimal@@Base+0x2cf0c>  // b.plast
   3397c:	ldr	x10, [x9, #16]
   33980:	cmp	x10, x8
   33984:	b.ls	33a04 <PyInit__decimal@@Base+0x2cf50>  // b.plast
   33988:	ldr	x9, [x9, #8]
   3398c:	cmp	x9, x8
   33990:	mov	w8, #0x1                   	// #1
   33994:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   33998:	ldr	x10, [x9, #112]
   3399c:	cmp	x10, x8
   339a0:	b.ls	339dc <PyInit__decimal@@Base+0x2cf28>  // b.plast
   339a4:	ldr	x10, [x9, #88]
   339a8:	cmp	x10, x8
   339ac:	b.ls	33a14 <PyInit__decimal@@Base+0x2cf60>  // b.plast
   339b0:	ldr	x9, [x9, #80]
   339b4:	cmp	x9, x8
   339b8:	mov	w8, #0xa                   	// #10
   339bc:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   339c0:	ldr	x10, [x9, #48]
   339c4:	cmp	x10, x8
   339c8:	b.ls	33a30 <PyInit__decimal@@Base+0x2cf7c>  // b.plast
   339cc:	ldr	x9, [x9, #40]
   339d0:	cmp	x9, x8
   339d4:	mov	w8, #0x5                   	// #5
   339d8:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   339dc:	ldr	x10, [x9, #144]
   339e0:	cmp	x10, x8
   339e4:	b.ls	33a4c <PyInit__decimal@@Base+0x2cf98>  // b.plast
   339e8:	ldr	x10, [x9, #128]
   339ec:	cmp	x10, x8
   339f0:	b.ls	33a9c <PyInit__decimal@@Base+0x2cfe8>  // b.plast
   339f4:	ldr	x9, [x9, #120]
   339f8:	cmp	x9, x8
   339fc:	mov	w8, #0xf                   	// #15
   33a00:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   33a04:	ldr	x9, [x9, #24]
   33a08:	cmp	x9, x8
   33a0c:	mov	w8, #0x3                   	// #3
   33a10:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   33a14:	ldr	x10, [x9, #104]
   33a18:	cmp	x10, x8
   33a1c:	b.ls	33ab4 <PyInit__decimal@@Base+0x2d000>  // b.plast
   33a20:	ldr	x9, [x9, #96]
   33a24:	cmp	x9, x8
   33a28:	mov	w8, #0xc                   	// #12
   33a2c:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   33a30:	ldr	x10, [x9, #64]
   33a34:	cmp	x10, x8
   33a38:	b.ls	33ac0 <PyInit__decimal@@Base+0x2d00c>  // b.plast
   33a3c:	ldr	x9, [x9, #56]
   33a40:	cmp	x9, x8
   33a44:	mov	w8, #0x7                   	// #7
   33a48:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   33a4c:	ldr	x9, [x9, #152]
   33a50:	cmp	x9, x8
   33a54:	mov	w8, #0x13                  	// #19
   33a58:	b	33aa8 <PyInit__decimal@@Base+0x2cff4>
   33a5c:	ldr	x9, [x23, #40]
   33a60:	ldr	x10, [x23, #24]
   33a64:	add	x8, x9, x10, lsl #3
   33a68:	ldur	x8, [x8, #-8]
   33a6c:	cbz	x8, 33c3c <PyInit__decimal@@Base+0x2d188>
   33a70:	cmp	x10, #0x1
   33a74:	b.lt	33a94 <PyInit__decimal@@Base+0x2cfe0>  // b.tstop
   33a78:	mov	x8, xzr
   33a7c:	ldr	x11, [x9]
   33a80:	cbnz	x11, 33be8 <PyInit__decimal@@Base+0x2d134>
   33a84:	add	x8, x8, #0x13
   33a88:	subs	x10, x10, #0x1
   33a8c:	add	x9, x9, #0x8
   33a90:	b.ne	33a7c <PyInit__decimal@@Base+0x2cfc8>  // b.any
   33a94:	mov	x8, xzr
   33a98:	b	33c30 <PyInit__decimal@@Base+0x2d17c>
   33a9c:	ldr	x9, [x9, #136]
   33aa0:	cmp	x9, x8
   33aa4:	mov	w8, #0x11                  	// #17
   33aa8:	cinc	x8, x8, ls  // ls = plast
   33aac:	str	x8, [x19, #16]
   33ab0:	b	33fa0 <PyInit__decimal@@Base+0x2d4ec>
   33ab4:	mov	w8, #0xe                   	// #14
   33ab8:	str	x8, [x19, #16]
   33abc:	b	33fa0 <PyInit__decimal@@Base+0x2d4ec>
   33ac0:	mov	w8, #0x9                   	// #9
   33ac4:	str	x8, [x19, #16]
   33ac8:	b	33fa0 <PyInit__decimal@@Base+0x2d4ec>
   33acc:	cmn	x25, #0x2
   33ad0:	b.gt	33b3c <PyInit__decimal@@Base+0x2d088>
   33ad4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   33ad8:	add	x9, x9, #0xca0
   33adc:	ldr	x10, [x9, #72]
   33ae0:	neg	x8, x8
   33ae4:	cmp	x10, x8
   33ae8:	b.ls	33ce0 <PyInit__decimal@@Base+0x2d22c>  // b.plast
   33aec:	ldr	x10, [x9, #32]
   33af0:	cmp	x10, x8
   33af4:	b.ls	33dec <PyInit__decimal@@Base+0x2d338>  // b.plast
   33af8:	ldr	x10, [x9, #16]
   33afc:	cmp	x10, x8
   33b00:	b.ls	33e3c <PyInit__decimal@@Base+0x2d388>  // b.plast
   33b04:	ldr	x9, [x9, #8]
   33b08:	cmp	x9, x8
   33b0c:	mov	w8, #0x1                   	// #1
   33b10:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33b14:	ldr	x9, [x8, #112]
   33b18:	cmp	x9, x25
   33b1c:	b.ls	33bc0 <PyInit__decimal@@Base+0x2d10c>  // b.plast
   33b20:	ldr	x9, [x8, #88]
   33b24:	cmp	x9, x25
   33b28:	b.ls	33d44 <PyInit__decimal@@Base+0x2d290>  // b.plast
   33b2c:	ldr	x8, [x8, #80]
   33b30:	cmp	x8, x25
   33b34:	mov	w8, #0xa                   	// #10
   33b38:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33b3c:	add	x0, sp, #0x258
   33b40:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   33b44:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
   33b48:	add	x2, x2, #0xc88
   33b4c:	sub	x0, x29, #0x38
   33b50:	sub	x1, x29, #0x68
   33b54:	add	x3, sp, #0x258
   33b58:	mov	x4, x20
   33b5c:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   33b60:	ldurb	w8, [x29, #-56]
   33b64:	tst	w8, #0xe
   33b68:	b.eq	33d8c <PyInit__decimal@@Base+0x2d2d8>  // b.none
   33b6c:	cmp	w8, #0x1f
   33b70:	b.hi	33b88 <PyInit__decimal@@Base+0x2d0d4>  // b.pmore
   33b74:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   33b78:	ldr	x8, [x8, #1376]
   33b7c:	ldur	x0, [x29, #-16]
   33b80:	blr	x8
   33b84:	ldurb	w8, [x29, #-56]
   33b88:	tbnz	w8, #4, 33de4 <PyInit__decimal@@Base+0x2d330>
   33b8c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   33b90:	ldr	x8, [x8, #1376]
   33b94:	sub	x0, x29, #0x38
   33b98:	blr	x8
   33b9c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   33ba0:	b	33f2c <PyInit__decimal@@Base+0x2d478>
   33ba4:	ldr	x9, [x8, #48]
   33ba8:	cmp	x9, x25
   33bac:	b.ls	33d60 <PyInit__decimal@@Base+0x2d2ac>  // b.plast
   33bb0:	ldr	x8, [x8, #40]
   33bb4:	cmp	x8, x25
   33bb8:	mov	w8, #0x5                   	// #5
   33bbc:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33bc0:	ldr	x9, [x8, #144]
   33bc4:	cmp	x9, x25
   33bc8:	b.ls	33d7c <PyInit__decimal@@Base+0x2d2c8>  // b.plast
   33bcc:	ldr	x9, [x8, #128]
   33bd0:	cmp	x9, x25
   33bd4:	b.ls	33e30 <PyInit__decimal@@Base+0x2d37c>  // b.plast
   33bd8:	ldr	x8, [x8, #120]
   33bdc:	cmp	x8, x25
   33be0:	mov	w8, #0xf                   	// #15
   33be4:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33be8:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   33bec:	movk	x9, #0xcccd
   33bf0:	mul	x10, x11, x9
   33bf4:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   33bf8:	ror	x10, x10, #1
   33bfc:	movk	x12, #0x1999, lsl #48
   33c00:	cmp	x10, x12
   33c04:	b.hi	33c30 <PyInit__decimal@@Base+0x2d17c>  // b.pmore
   33c08:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   33c0c:	movk	x10, #0x999a
   33c10:	movk	x10, #0x1999, lsl #48
   33c14:	umulh	x11, x11, x9
   33c18:	lsr	x11, x11, #3
   33c1c:	mul	x12, x11, x9
   33c20:	ror	x12, x12, #1
   33c24:	cmp	x12, x10
   33c28:	add	x8, x8, #0x1
   33c2c:	b.cc	33c14 <PyInit__decimal@@Base+0x2d160>  // b.lo, b.ul, b.last
   33c30:	ldr	x26, [x23, #8]
   33c34:	cmn	x26, x8
   33c38:	b.mi	33cbc <PyInit__decimal@@Base+0x2d208>  // b.first
   33c3c:	ldrb	w8, [x23]
   33c40:	tbnz	w8, #0, 33c7c <PyInit__decimal@@Base+0x2d1c8>
   33c44:	ldr	x8, [x24, #8]
   33c48:	add	x4, sp, #0x258
   33c4c:	mov	x0, x19
   33c50:	mov	x1, x23
   33c54:	neg	x2, x8
   33c58:	mov	x3, x21
   33c5c:	bl	3292c <PyInit__decimal@@Base+0x2be78>
   33c60:	ldr	w8, [sp, #600]
   33c64:	mov	w9, #0x3be                 	// #958
   33c68:	ands	w8, w8, w9
   33c6c:	b.eq	33d08 <PyInit__decimal@@Base+0x2d254>  // b.none
   33c70:	ldr	w9, [x20]
   33c74:	orr	w8, w9, w8
   33c78:	b	33f9c <PyInit__decimal@@Base+0x2d4e8>
   33c7c:	ldrb	w8, [x19]
   33c80:	tbnz	w8, #5, 33814 <PyInit__decimal@@Base+0x2cd60>
   33c84:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   33c88:	ldr	x9, [x19, #32]
   33c8c:	ldr	x1, [x20, #1344]
   33c90:	cmp	x9, x1
   33c94:	b.le	33814 <PyInit__decimal@@Base+0x2cd60>
   33c98:	strb	wzr, [sp, #40]
   33c9c:	ldr	x0, [x19, #40]
   33ca0:	add	x3, sp, #0x28
   33ca4:	mov	w2, #0x8                   	// #8
   33ca8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   33cac:	str	x0, [x19, #40]
   33cb0:	ldrb	w8, [sp, #40]
   33cb4:	cbnz	w8, 33810 <PyInit__decimal@@Base+0x2cd5c>
   33cb8:	b	33808 <PyInit__decimal@@Base+0x2cd54>
   33cbc:	ldrb	w8, [x24]
   33cc0:	tbnz	w8, #0, 336ac <PyInit__decimal@@Base+0x2cbf8>
   33cc4:	ldr	x8, [x21]
   33cc8:	ldr	w9, [x20]
   33ccc:	mov	w10, #0x1040                	// #4160
   33cd0:	sub	x23, x8, #0x1
   33cd4:	orr	w8, w9, w10
   33cd8:	str	w8, [x20]
   33cdc:	b	33ee0 <PyInit__decimal@@Base+0x2d42c>
   33ce0:	ldr	x10, [x9, #112]
   33ce4:	cmp	x10, x8
   33ce8:	b.ls	33e08 <PyInit__decimal@@Base+0x2d354>  // b.plast
   33cec:	ldr	x10, [x9, #88]
   33cf0:	cmp	x10, x8
   33cf4:	b.ls	33e4c <PyInit__decimal@@Base+0x2d398>  // b.plast
   33cf8:	ldr	x9, [x9, #80]
   33cfc:	cmp	x9, x8
   33d00:	mov	w8, #0xa                   	// #10
   33d04:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33d08:	add	x2, sp, #0x258
   33d0c:	mov	w0, wzr
   33d10:	mov	x1, x19
   33d14:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   33d18:	ldr	w8, [sp, #600]
   33d1c:	tbnz	w8, #8, 33ebc <PyInit__decimal@@Base+0x2d408>
   33d20:	ldrb	w9, [x19]
   33d24:	tbnz	x0, #63, 33ea4 <PyInit__decimal@@Base+0x2d3f0>
   33d28:	tst	w9, #0x1
   33d2c:	cneg	x23, x0, ne  // ne = any
   33d30:	b	33ec0 <PyInit__decimal@@Base+0x2d40c>
   33d34:	ldr	x8, [x8, #24]
   33d38:	cmp	x8, x25
   33d3c:	mov	w8, #0x3                   	// #3
   33d40:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33d44:	ldr	x9, [x8, #104]
   33d48:	cmp	x9, x25
   33d4c:	b.ls	33e68 <PyInit__decimal@@Base+0x2d3b4>  // b.plast
   33d50:	ldr	x8, [x8, #96]
   33d54:	cmp	x8, x25
   33d58:	mov	w8, #0xc                   	// #12
   33d5c:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33d60:	ldr	x9, [x8, #64]
   33d64:	cmp	x9, x25
   33d68:	b.ls	33e8c <PyInit__decimal@@Base+0x2d3d8>  // b.plast
   33d6c:	ldr	x8, [x8, #56]
   33d70:	cmp	x8, x25
   33d74:	mov	w8, #0x7                   	// #7
   33d78:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33d7c:	ldr	x8, [x8, #152]
   33d80:	cmp	x8, x25
   33d84:	mov	w8, #0x13                  	// #19
   33d88:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33d8c:	ldp	x9, x10, [x29, #-48]
   33d90:	cmp	w8, #0x1f
   33d94:	stp	x10, x9, [sp, #8]
   33d98:	b.hi	33db4 <PyInit__decimal@@Base+0x2d300>  // b.pmore
   33d9c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   33da0:	ldr	x8, [x8, #1376]
   33da4:	ldur	x0, [x29, #-16]
   33da8:	blr	x8
   33dac:	ldp	x10, x9, [sp, #8]
   33db0:	ldurb	w8, [x29, #-56]
   33db4:	tbnz	w8, #4, 33dcc <PyInit__decimal@@Base+0x2d318>
   33db8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   33dbc:	ldr	x8, [x8, #1376]
   33dc0:	sub	x0, x29, #0x38
   33dc4:	blr	x8
   33dc8:	ldp	x10, x9, [sp, #8]
   33dcc:	cmp	x25, #0x0
   33dd0:	mov	x8, #0xfffffffffffffffd    	// #-3
   33dd4:	cinc	x8, x8, ne  // ne = any
   33dd8:	add	x8, x9, x8
   33ddc:	add	x10, x8, x10
   33de0:	b	33f2c <PyInit__decimal@@Base+0x2d478>
   33de4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   33de8:	b	33f2c <PyInit__decimal@@Base+0x2d478>
   33dec:	ldr	x10, [x9, #48]
   33df0:	cmp	x10, x8
   33df4:	b.ls	33e70 <PyInit__decimal@@Base+0x2d3bc>  // b.plast
   33df8:	ldr	x9, [x9, #40]
   33dfc:	cmp	x9, x8
   33e00:	mov	w8, #0x5                   	// #5
   33e04:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33e08:	ldr	x10, [x9, #144]
   33e0c:	cmp	x10, x8
   33e10:	b.ls	33e94 <PyInit__decimal@@Base+0x2d3e0>  // b.plast
   33e14:	ldr	x10, [x9, #128]
   33e18:	cmp	x10, x8
   33e1c:	b.ls	33f18 <PyInit__decimal@@Base+0x2d464>  // b.plast
   33e20:	ldr	x9, [x9, #120]
   33e24:	cmp	x9, x8
   33e28:	mov	w8, #0xf                   	// #15
   33e2c:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33e30:	ldr	x8, [x8, #136]
   33e34:	cmp	x8, x25
   33e38:	b	33f20 <PyInit__decimal@@Base+0x2d46c>
   33e3c:	ldr	x9, [x9, #24]
   33e40:	cmp	x9, x8
   33e44:	mov	w8, #0x3                   	// #3
   33e48:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33e4c:	ldr	x10, [x9, #104]
   33e50:	cmp	x10, x8
   33e54:	b.ls	33e68 <PyInit__decimal@@Base+0x2d3b4>  // b.plast
   33e58:	ldr	x9, [x9, #96]
   33e5c:	cmp	x9, x8
   33e60:	mov	w8, #0xc                   	// #12
   33e64:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33e68:	mov	w8, #0xe                   	// #14
   33e6c:	b	33f28 <PyInit__decimal@@Base+0x2d474>
   33e70:	ldr	x10, [x9, #64]
   33e74:	cmp	x10, x8
   33e78:	b.ls	33e8c <PyInit__decimal@@Base+0x2d3d8>  // b.plast
   33e7c:	ldr	x9, [x9, #56]
   33e80:	cmp	x9, x8
   33e84:	mov	w8, #0x7                   	// #7
   33e88:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33e8c:	mov	w8, #0x9                   	// #9
   33e90:	b	33f28 <PyInit__decimal@@Base+0x2d474>
   33e94:	ldr	x9, [x9, #152]
   33e98:	cmp	x9, x8
   33e9c:	mov	w8, #0x13                  	// #19
   33ea0:	b	33f24 <PyInit__decimal@@Base+0x2d470>
   33ea4:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   33ea8:	cmp	x0, x23
   33eac:	b.ne	33eb4 <PyInit__decimal@@Base+0x2d400>  // b.any
   33eb0:	tbnz	w9, #0, 33ee0 <PyInit__decimal@@Base+0x2d42c>
   33eb4:	orr	w8, w8, #0x100
   33eb8:	str	w8, [sp, #600]
   33ebc:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   33ec0:	ldr	x8, [x21]
   33ec4:	sub	x8, x8, #0x1
   33ec8:	cmp	x23, x8
   33ecc:	b.le	33ee0 <PyInit__decimal@@Base+0x2d42c>
   33ed0:	ldr	w9, [x20]
   33ed4:	mov	x23, x8
   33ed8:	orr	w9, w9, #0x1000
   33edc:	str	w9, [x20]
   33ee0:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   33ee4:	add	x1, x1, #0xc88
   33ee8:	mov	x0, x19
   33eec:	mov	x2, x23
   33ef0:	mov	x3, x20
   33ef4:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   33ef8:	cbz	w0, 33fa0 <PyInit__decimal@@Base+0x2d4ec>
   33efc:	ldrb	w8, [x19]
   33f00:	neg	x9, x23
   33f04:	str	x9, [x19, #8]
   33f08:	and	w8, w8, #0xf0
   33f0c:	orr	w8, w8, w22
   33f10:	strb	w8, [x19]
   33f14:	b	33fa0 <PyInit__decimal@@Base+0x2d4ec>
   33f18:	ldr	x9, [x9, #136]
   33f1c:	cmp	x9, x8
   33f20:	mov	w8, #0x11                  	// #17
   33f24:	cinc	x8, x8, ls  // ls = plast
   33f28:	sub	x10, x8, #0x1
   33f2c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   33f30:	cmp	x10, x8
   33f34:	b.ne	33fc0 <PyInit__decimal@@Base+0x2d50c>  // b.any
   33f38:	ldrb	w8, [x19]
   33f3c:	tbnz	w8, #5, 33f80 <PyInit__decimal@@Base+0x2d4cc>
   33f40:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   33f44:	ldr	x9, [x19, #32]
   33f48:	ldr	x1, [x21, #1344]
   33f4c:	cmp	x9, x1
   33f50:	b.le	33f80 <PyInit__decimal@@Base+0x2d4cc>
   33f54:	strb	wzr, [sp, #600]
   33f58:	ldr	x0, [x19, #40]
   33f5c:	add	x3, sp, #0x258
   33f60:	mov	w2, #0x8                   	// #8
   33f64:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   33f68:	str	x0, [x19, #40]
   33f6c:	ldrb	w8, [sp, #600]
   33f70:	cbnz	w8, 33f7c <PyInit__decimal@@Base+0x2d4c8>
   33f74:	ldr	x8, [x21, #1344]
   33f78:	str	x8, [x19, #32]
   33f7c:	ldrb	w8, [x19]
   33f80:	and	w8, w8, #0xf0
   33f84:	orr	w8, w8, #0x4
   33f88:	stp	xzr, xzr, [x19, #16]
   33f8c:	strb	w8, [x19]
   33f90:	str	xzr, [x19, #8]
   33f94:	ldr	w8, [x20]
   33f98:	orr	w8, w8, #0x200
   33f9c:	str	w8, [x20]
   33fa0:	add	sp, sp, #0x530
   33fa4:	ldp	x20, x19, [sp, #80]
   33fa8:	ldp	x22, x21, [sp, #64]
   33fac:	ldp	x24, x23, [sp, #48]
   33fb0:	ldp	x26, x25, [sp, #32]
   33fb4:	ldp	x28, x27, [sp, #16]
   33fb8:	ldp	x29, x30, [sp], #96
   33fbc:	ret
   33fc0:	ldp	x9, x11, [x29, #-96]
   33fc4:	ldrb	w8, [x23]
   33fc8:	add	x12, x26, x28
   33fcc:	add	x9, x9, x11
   33fd0:	sub	x9, x9, #0x1
   33fd4:	lsr	x11, x9, #63
   33fd8:	and	w9, w8, #0x1
   33fdc:	cmp	w9, w11
   33fe0:	sub	x11, x12, #0x1
   33fe4:	b.ne	34030 <PyInit__decimal@@Base+0x2d57c>  // b.any
   33fe8:	ldr	x12, [x21, #8]
   33fec:	adrp	x28, 44000 <PyInit__decimal@@Base+0x3d54c>
   33ff0:	add	x28, x28, #0xca0
   33ff4:	ldr	x26, [x28, #72]
   33ff8:	cmp	x12, #0x0
   33ffc:	cneg	x12, x12, mi  // mi = first
   34000:	cmp	x26, x12
   34004:	b.ls	34084 <PyInit__decimal@@Base+0x2d5d0>  // b.plast
   34008:	ldr	x13, [x28, #32]
   3400c:	cmp	x13, x12
   34010:	b.ls	340d4 <PyInit__decimal@@Base+0x2d620>  // b.plast
   34014:	ldr	x13, [x28, #16]
   34018:	cmp	x13, x12
   3401c:	b.ls	3415c <PyInit__decimal@@Base+0x2d6a8>  // b.plast
   34020:	ldr	x13, [x28, #8]
   34024:	cmp	x13, x12
   34028:	mov	w12, #0x1                   	// #1
   3402c:	b	34218 <PyInit__decimal@@Base+0x2d764>
   34030:	ldr	x12, [x21, #16]
   34034:	ldr	x13, [x21]
   34038:	adrp	x28, 44000 <PyInit__decimal@@Base+0x3d54c>
   3403c:	add	x28, x28, #0xca0
   34040:	ldr	x26, [x28, #72]
   34044:	sub	x13, x12, x13
   34048:	adds	x12, x13, #0x1
   3404c:	mvn	x14, x13
   34050:	csinc	x13, x14, x13, mi  // mi = first
   34054:	cmp	x26, x13
   34058:	b.ls	340ac <PyInit__decimal@@Base+0x2d5f8>  // b.plast
   3405c:	ldr	x14, [x28, #32]
   34060:	cmp	x14, x13
   34064:	b.ls	340f0 <PyInit__decimal@@Base+0x2d63c>  // b.plast
   34068:	ldr	x14, [x28, #16]
   3406c:	cmp	x14, x13
   34070:	b.ls	3416c <PyInit__decimal@@Base+0x2d6b8>  // b.plast
   34074:	ldr	x14, [x28, #8]
   34078:	cmp	x14, x13
   3407c:	mov	w13, #0x1                   	// #1
   34080:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   34084:	ldr	x13, [x28, #112]
   34088:	cmp	x13, x12
   3408c:	b.ls	3410c <PyInit__decimal@@Base+0x2d658>  // b.plast
   34090:	ldr	x13, [x28, #88]
   34094:	cmp	x13, x12
   34098:	b.ls	3417c <PyInit__decimal@@Base+0x2d6c8>  // b.plast
   3409c:	ldr	x13, [x28, #80]
   340a0:	cmp	x13, x12
   340a4:	mov	w12, #0xa                   	// #10
   340a8:	b	34218 <PyInit__decimal@@Base+0x2d764>
   340ac:	ldr	x14, [x28, #112]
   340b0:	cmp	x14, x13
   340b4:	b.ls	34134 <PyInit__decimal@@Base+0x2d680>  // b.plast
   340b8:	ldr	x14, [x28, #88]
   340bc:	cmp	x14, x13
   340c0:	b.ls	34198 <PyInit__decimal@@Base+0x2d6e4>  // b.plast
   340c4:	ldr	x14, [x28, #80]
   340c8:	cmp	x14, x13
   340cc:	mov	w13, #0xa                   	// #10
   340d0:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   340d4:	ldr	x13, [x28, #48]
   340d8:	cmp	x13, x12
   340dc:	b.ls	341b4 <PyInit__decimal@@Base+0x2d700>  // b.plast
   340e0:	ldr	x13, [x28, #40]
   340e4:	cmp	x13, x12
   340e8:	mov	w12, #0x5                   	// #5
   340ec:	b	34218 <PyInit__decimal@@Base+0x2d764>
   340f0:	ldr	x14, [x28, #48]
   340f4:	cmp	x14, x13
   340f8:	b.ls	341d0 <PyInit__decimal@@Base+0x2d71c>  // b.plast
   340fc:	ldr	x14, [x28, #40]
   34100:	cmp	x14, x13
   34104:	mov	w13, #0x5                   	// #5
   34108:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   3410c:	ldr	x13, [x28, #144]
   34110:	cmp	x13, x12
   34114:	b.ls	341ec <PyInit__decimal@@Base+0x2d738>  // b.plast
   34118:	ldr	x13, [x28, #128]
   3411c:	cmp	x13, x12
   34120:	b.ls	3420c <PyInit__decimal@@Base+0x2d758>  // b.plast
   34124:	ldr	x13, [x28, #120]
   34128:	cmp	x13, x12
   3412c:	mov	w12, #0xf                   	// #15
   34130:	b	34218 <PyInit__decimal@@Base+0x2d764>
   34134:	ldr	x14, [x28, #144]
   34138:	cmp	x14, x13
   3413c:	b.ls	341fc <PyInit__decimal@@Base+0x2d748>  // b.plast
   34140:	ldr	x14, [x28, #128]
   34144:	cmp	x14, x13
   34148:	b.ls	34314 <PyInit__decimal@@Base+0x2d860>  // b.plast
   3414c:	ldr	x14, [x28, #120]
   34150:	cmp	x14, x13
   34154:	mov	w13, #0xf                   	// #15
   34158:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   3415c:	ldr	x13, [x28, #24]
   34160:	cmp	x13, x12
   34164:	mov	w12, #0x3                   	// #3
   34168:	b	34218 <PyInit__decimal@@Base+0x2d764>
   3416c:	ldr	x14, [x28, #24]
   34170:	cmp	x14, x13
   34174:	mov	w13, #0x3                   	// #3
   34178:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   3417c:	ldr	x13, [x28, #104]
   34180:	cmp	x13, x12
   34184:	b.ls	34814 <PyInit__decimal@@Base+0x2dd60>  // b.plast
   34188:	ldr	x13, [x28, #96]
   3418c:	cmp	x13, x12
   34190:	mov	w12, #0xc                   	// #12
   34194:	b	34218 <PyInit__decimal@@Base+0x2d764>
   34198:	ldr	x14, [x28, #104]
   3419c:	cmp	x14, x13
   341a0:	b.ls	3481c <PyInit__decimal@@Base+0x2dd68>  // b.plast
   341a4:	ldr	x14, [x28, #96]
   341a8:	cmp	x14, x13
   341ac:	mov	w13, #0xc                   	// #12
   341b0:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   341b4:	ldr	x13, [x28, #64]
   341b8:	cmp	x13, x12
   341bc:	b.ls	34824 <PyInit__decimal@@Base+0x2dd70>  // b.plast
   341c0:	ldr	x13, [x28, #56]
   341c4:	cmp	x13, x12
   341c8:	mov	w12, #0x7                   	// #7
   341cc:	b	34218 <PyInit__decimal@@Base+0x2d764>
   341d0:	ldr	x14, [x28, #64]
   341d4:	cmp	x14, x13
   341d8:	b.ls	3482c <PyInit__decimal@@Base+0x2dd78>  // b.plast
   341dc:	ldr	x14, [x28, #56]
   341e0:	cmp	x14, x13
   341e4:	mov	w13, #0x7                   	// #7
   341e8:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   341ec:	ldr	x13, [x28, #152]
   341f0:	cmp	x13, x12
   341f4:	mov	w12, #0x13                  	// #19
   341f8:	b	34218 <PyInit__decimal@@Base+0x2d764>
   341fc:	ldr	x14, [x28, #152]
   34200:	cmp	x14, x13
   34204:	mov	w13, #0x13                  	// #19
   34208:	b	34320 <PyInit__decimal@@Base+0x2d86c>
   3420c:	ldr	x13, [x28, #136]
   34210:	cmp	x13, x12
   34214:	mov	w12, #0x11                  	// #17
   34218:	cinc	x12, x12, ls  // ls = plast
   3421c:	add	x10, x10, x11
   34220:	cmp	x10, x12
   34224:	b.le	343d8 <PyInit__decimal@@Base+0x2d924>
   34228:	ldrb	w8, [x19]
   3422c:	tbnz	w8, #5, 34270 <PyInit__decimal@@Base+0x2d7bc>
   34230:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   34234:	ldr	x9, [x19, #32]
   34238:	ldr	x1, [x23, #1344]
   3423c:	cmp	x9, x1
   34240:	b.le	34270 <PyInit__decimal@@Base+0x2d7bc>
   34244:	strb	wzr, [sp, #600]
   34248:	ldr	x0, [x19, #40]
   3424c:	add	x3, sp, #0x258
   34250:	mov	w2, #0x8                   	// #8
   34254:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34258:	str	x0, [x19, #40]
   3425c:	ldrb	w8, [sp, #600]
   34260:	cbnz	w8, 3426c <PyInit__decimal@@Base+0x2d7b8>
   34264:	ldr	x8, [x23, #1344]
   34268:	str	x8, [x19, #32]
   3426c:	ldrb	w8, [x19]
   34270:	adrp	x11, 45000 <PyInit__decimal@@Base+0x3e54c>
   34274:	mov	x9, #0x1                   	// #1
   34278:	ldr	x10, [x19, #40]
   3427c:	ldr	q0, [x11, #2464]
   34280:	movk	x9, #0x4ec8, lsl #16
   34284:	and	w8, w8, #0xf0
   34288:	movk	x9, #0x6d67, lsl #32
   3428c:	movk	x9, #0x1bc1, lsl #48
   34290:	mov	w12, #0x1                   	// #1
   34294:	orr	w8, w8, w22
   34298:	str	x9, [x19, #8]
   3429c:	strb	w8, [x19]
   342a0:	str	q0, [x10]
   342a4:	str	x12, [x19, #24]
   342a8:	ldr	x8, [x10]
   342ac:	cmp	x26, x8
   342b0:	b.ls	342dc <PyInit__decimal@@Base+0x2d828>  // b.plast
   342b4:	ldr	x9, [x28, #32]
   342b8:	cmp	x9, x8
   342bc:	b.ls	343bc <PyInit__decimal@@Base+0x2d908>  // b.plast
   342c0:	ldr	x9, [x28, #16]
   342c4:	cmp	x9, x8
   342c8:	b.ls	34304 <PyInit__decimal@@Base+0x2d850>  // b.plast
   342cc:	ldr	x9, [x28, #8]
   342d0:	cmp	x9, x8
   342d4:	mov	w8, #0x1                   	// #1
   342d8:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   342dc:	ldr	x9, [x28, #112]
   342e0:	cmp	x9, x8
   342e4:	b.ls	345c0 <PyInit__decimal@@Base+0x2db0c>  // b.plast
   342e8:	ldr	x9, [x28, #88]
   342ec:	cmp	x9, x8
   342f0:	b.ls	345a4 <PyInit__decimal@@Base+0x2daf0>  // b.plast
   342f4:	ldr	x9, [x28, #80]
   342f8:	cmp	x9, x8
   342fc:	mov	w8, #0xa                   	// #10
   34300:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   34304:	ldr	x9, [x28, #24]
   34308:	cmp	x9, x8
   3430c:	mov	w8, #0x3                   	// #3
   34310:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   34314:	ldr	x14, [x28, #136]
   34318:	cmp	x14, x13
   3431c:	mov	w13, #0x11                  	// #17
   34320:	cinc	x13, x13, ls  // ls = plast
   34324:	add	x10, x10, x11
   34328:	cmp	x10, x13
   3432c:	b.le	343d8 <PyInit__decimal@@Base+0x2d924>
   34330:	ldrb	w8, [x19]
   34334:	sub	x23, x12, #0x1
   34338:	tbnz	w8, #5, 3437c <PyInit__decimal@@Base+0x2d8c8>
   3433c:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   34340:	ldr	x9, [x19, #32]
   34344:	ldr	x1, [x24, #1344]
   34348:	cmp	x9, x1
   3434c:	b.le	3437c <PyInit__decimal@@Base+0x2d8c8>
   34350:	strb	wzr, [sp, #600]
   34354:	ldr	x0, [x19, #40]
   34358:	add	x3, sp, #0x258
   3435c:	mov	w2, #0x8                   	// #8
   34360:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34364:	str	x0, [x19, #40]
   34368:	ldrb	w8, [sp, #600]
   3436c:	cbnz	w8, 34378 <PyInit__decimal@@Base+0x2d8c4>
   34370:	ldr	x8, [x24, #1344]
   34374:	str	x8, [x19, #32]
   34378:	ldrb	w8, [x19]
   3437c:	adrp	x10, 45000 <PyInit__decimal@@Base+0x3e54c>
   34380:	ldr	x9, [x19, #40]
   34384:	ldr	q0, [x10, #2464]
   34388:	and	w8, w8, #0xf0
   3438c:	mov	w10, #0x1                   	// #1
   34390:	orr	w8, w8, w22
   34394:	str	x23, [x19, #8]
   34398:	strb	w8, [x19]
   3439c:	str	q0, [x9]
   343a0:	str	x10, [x19, #24]
   343a4:	ldr	x8, [x9]
   343a8:	cmp	x26, x8
   343ac:	b.ls	3458c <PyInit__decimal@@Base+0x2dad8>  // b.plast
   343b0:	ldr	x9, [x28, #32]
   343b4:	cmp	x9, x8
   343b8:	b.hi	342c0 <PyInit__decimal@@Base+0x2d80c>  // b.pmore
   343bc:	ldr	x9, [x28, #48]
   343c0:	cmp	x9, x8
   343c4:	b.ls	345f8 <PyInit__decimal@@Base+0x2db44>  // b.plast
   343c8:	ldr	x9, [x28, #40]
   343cc:	cmp	x9, x8
   343d0:	mov	w8, #0x5                   	// #5
   343d4:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   343d8:	sub	x28, x29, #0xd8
   343dc:	cbz	w27, 3449c <PyInit__decimal@@Base+0x2d9e8>
   343e0:	mov	w10, #0x40                  	// #64
   343e4:	add	x11, sp, #0x28
   343e8:	mov	w8, #0x30                  	// #48
   343ec:	stp	x10, x11, [x29, #-184]
   343f0:	add	x11, sp, #0x258
   343f4:	stp	xzr, xzr, [x29, #-208]
   343f8:	str	xzr, [sp, #560]
   343fc:	str	xzr, [sp, #568]
   34400:	sturb	w8, [x29, #-216]
   34404:	stur	xzr, [x29, #-192]
   34408:	strb	w8, [sp, #552]
   3440c:	str	xzr, [sp, #576]
   34410:	str	x10, [sp, #584]
   34414:	str	x11, [sp, #592]
   34418:	ldur	q0, [x21, #8]
   3441c:	ldr	x8, [x21]
   34420:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   34424:	stur	q0, [x28, #56]
   34428:	stur	xzr, [x29, #-144]
   3442c:	ldr	w10, [x21, #44]
   34430:	ldr	d0, [x11, #3608]
   34434:	stp	wzr, w10, [x29, #-128]
   34438:	ldp	x11, x10, [x23, #8]
   3443c:	stur	d0, [x29, #-136]
   34440:	add	x8, x8, x10
   34444:	add	x8, x8, x11
   34448:	add	x8, x8, #0x2
   3444c:	stur	x8, [x29, #-168]
   34450:	cbnz	w9, 34508 <PyInit__decimal@@Base+0x2da54>
   34454:	sub	x8, x29, #0xd8
   34458:	cmp	x8, x24
   3445c:	b.eq	34790 <PyInit__decimal@@Base+0x2dcdc>  // b.none
   34460:	adrp	x25, 59000 <PyInit__decimal@@Base+0x5254c>
   34464:	ldr	x8, [x24, #24]
   34468:	ldr	x9, [x25, #1344]
   3446c:	cmp	x9, x8
   34470:	csel	x1, x8, x9, lt  // lt = tstop
   34474:	cmp	x1, #0x41
   34478:	b.lt	34764 <PyInit__decimal@@Base+0x2dcb0>  // b.tstop
   3447c:	sub	x0, x29, #0xd8
   34480:	mov	x2, x20
   34484:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   34488:	cbz	w0, 349c0 <PyInit__decimal@@Base+0x2df0c>
   3448c:	ldr	x8, [x24, #24]
   34490:	ldurb	w9, [x29, #-216]
   34494:	ldur	x0, [x29, #-176]
   34498:	b	3476c <PyInit__decimal@@Base+0x2dcb8>
   3449c:	sub	x12, x29, #0x38
   344a0:	mov	w9, #0x30                  	// #48
   344a4:	mov	w10, #0x40                  	// #64
   344a8:	add	x11, sp, #0x28
   344ac:	cmp	x12, x23
   344b0:	stp	xzr, xzr, [x29, #-48]
   344b4:	sturb	w9, [x29, #-56]
   344b8:	stp	xzr, x10, [x29, #-32]
   344bc:	stur	x11, [x29, #-16]
   344c0:	b.eq	34640 <PyInit__decimal@@Base+0x2db8c>  // b.none
   344c4:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   344c8:	ldr	x9, [x23, #24]
   344cc:	ldr	x10, [x22, #1344]
   344d0:	cmp	x10, x9
   344d4:	csel	x1, x9, x10, lt  // lt = tstop
   344d8:	cmp	x1, #0x41
   344dc:	b.lt	34614 <PyInit__decimal@@Base+0x2db60>  // b.tstop
   344e0:	sub	x0, x29, #0x38
   344e4:	mov	x2, x20
   344e8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   344ec:	cbz	w0, 3484c <PyInit__decimal@@Base+0x2dd98>
   344f0:	ldurb	w10, [x29, #-56]
   344f4:	ldr	x9, [x23, #24]
   344f8:	ldur	x0, [x29, #-16]
   344fc:	ldrb	w8, [x23]
   34500:	and	w10, w10, #0xfffffff0
   34504:	b	3461c <PyInit__decimal@@Base+0x2db68>
   34508:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
   3450c:	add	x8, x8, #0x1
   34510:	add	x2, x2, #0xc88
   34514:	sub	x1, x29, #0xd8
   34518:	sub	x4, x29, #0xa8
   3451c:	mov	w0, #0x1                   	// #1
   34520:	mov	x3, x24
   34524:	mov	x5, x20
   34528:	stur	x8, [x29, #-168]
   3452c:	bl	2b2b0 <PyInit__decimal@@Base+0x247fc>
   34530:	ldrh	w8, [x20]
   34534:	mov	w9, #0x3be                 	// #958
   34538:	tst	w8, w9
   3453c:	b.eq	34790 <PyInit__decimal@@Base+0x2dcdc>  // b.none
   34540:	ldrb	w8, [x19]
   34544:	tbnz	w8, #5, 34f1c <PyInit__decimal@@Base+0x2e468>
   34548:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   3454c:	ldr	x9, [x19, #32]
   34550:	ldr	x1, [x22, #1344]
   34554:	cmp	x9, x1
   34558:	b.le	34f1c <PyInit__decimal@@Base+0x2e468>
   3455c:	sturb	wzr, [x29, #-56]
   34560:	ldr	x0, [x19, #40]
   34564:	sub	x3, x29, #0x38
   34568:	mov	w2, #0x8                   	// #8
   3456c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34570:	str	x0, [x19, #40]
   34574:	ldurb	w8, [x29, #-56]
   34578:	cbnz	w8, 34584 <PyInit__decimal@@Base+0x2dad0>
   3457c:	ldr	x8, [x22, #1344]
   34580:	str	x8, [x19, #32]
   34584:	ldrb	w8, [x19]
   34588:	b	34f1c <PyInit__decimal@@Base+0x2e468>
   3458c:	ldr	x9, [x28, #112]
   34590:	cmp	x9, x8
   34594:	b.ls	345c0 <PyInit__decimal@@Base+0x2db0c>  // b.plast
   34598:	ldr	x9, [x28, #88]
   3459c:	cmp	x9, x8
   345a0:	b.hi	342f4 <PyInit__decimal@@Base+0x2d840>  // b.pmore
   345a4:	ldr	x9, [x28, #104]
   345a8:	cmp	x9, x8
   345ac:	b.ls	34eb0 <PyInit__decimal@@Base+0x2e3fc>  // b.plast
   345b0:	ldr	x9, [x28, #96]
   345b4:	cmp	x9, x8
   345b8:	mov	w8, #0xc                   	// #12
   345bc:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   345c0:	ldr	x9, [x28, #144]
   345c4:	cmp	x9, x8
   345c8:	b.ls	345e8 <PyInit__decimal@@Base+0x2db34>  // b.plast
   345cc:	ldr	x9, [x28, #128]
   345d0:	cmp	x9, x8
   345d4:	b.ls	34834 <PyInit__decimal@@Base+0x2dd80>  // b.plast
   345d8:	ldr	x9, [x28, #120]
   345dc:	cmp	x9, x8
   345e0:	mov	w8, #0xf                   	// #15
   345e4:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   345e8:	ldr	x9, [x28, #152]
   345ec:	cmp	x9, x8
   345f0:	mov	w8, #0x13                  	// #19
   345f4:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   345f8:	ldr	x9, [x28, #64]
   345fc:	cmp	x9, x8
   34600:	b.ls	34ecc <PyInit__decimal@@Base+0x2e418>  // b.plast
   34604:	ldr	x9, [x28, #56]
   34608:	cmp	x9, x8
   3460c:	mov	w8, #0x7                   	// #7
   34610:	b	34840 <PyInit__decimal@@Base+0x2dd8c>
   34614:	add	x0, sp, #0x28
   34618:	mov	w10, #0x30                  	// #48
   3461c:	and	w8, w8, #0xf
   34620:	orr	w8, w8, w10
   34624:	sturb	w8, [x29, #-56]
   34628:	ldur	q0, [x23, #8]
   3462c:	lsl	x2, x9, #3
   34630:	stur	q0, [x28, #168]
   34634:	stur	x9, [x29, #-32]
   34638:	ldr	x1, [x23, #40]
   3463c:	bl	63c0 <memcpy@plt>
   34640:	add	x0, sp, #0x258
   34644:	add	x22, sp, #0x258
   34648:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   3464c:	ldr	x8, [x24, #16]
   34650:	ldr	x9, [x21]
   34654:	mov	w10, #0x6                   	// #6
   34658:	str	w10, [sp, #636]
   3465c:	add	x22, x22, #0x1c
   34660:	cmp	x8, x9
   34664:	csel	x8, x8, x9, gt
   34668:	add	x8, x8, #0x17
   3466c:	str	x8, [sp, #600]
   34670:	ldr	w8, [x21, #44]
   34674:	add	x2, sp, #0x258
   34678:	mov	x0, x19
   3467c:	mov	x1, x24
   34680:	mov	x3, x22
   34684:	str	w8, [sp, #644]
   34688:	bl	2ffec <PyInit__decimal@@Base+0x29538>
   3468c:	sub	x2, x29, #0x38
   34690:	add	x3, sp, #0x258
   34694:	mov	x0, x19
   34698:	mov	x1, x19
   3469c:	mov	x4, x22
   346a0:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   346a4:	add	x1, sp, #0x258
   346a8:	mov	x0, x19
   346ac:	mov	x2, x22
   346b0:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   346b4:	add	x2, sp, #0x258
   346b8:	mov	x0, x19
   346bc:	mov	x1, x19
   346c0:	mov	x3, x20
   346c4:	bl	2d8c4 <PyInit__decimal@@Base+0x26e10>
   346c8:	ldurb	w8, [x29, #-56]
   346cc:	cmp	w8, #0x1f
   346d0:	b.hi	346e8 <PyInit__decimal@@Base+0x2dc34>  // b.pmore
   346d4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   346d8:	ldr	x8, [x8, #1376]
   346dc:	ldur	x0, [x29, #-16]
   346e0:	blr	x8
   346e4:	ldurb	w8, [x29, #-56]
   346e8:	tbnz	w8, #4, 346fc <PyInit__decimal@@Base+0x2dc48>
   346ec:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   346f0:	ldr	x8, [x8, #1376]
   346f4:	sub	x0, x29, #0x38
   346f8:	blr	x8
   346fc:	ldr	w9, [sp, #628]
   34700:	ldr	w10, [x20]
   34704:	ldrb	w8, [x19]
   34708:	and	w9, w9, #0x3fe
   3470c:	orr	w9, w10, w9
   34710:	mov	w10, #0x1040                	// #4160
   34714:	orr	w9, w9, w10
   34718:	tst	w8, #0xe
   3471c:	str	w9, [x20]
   34720:	b.ne	348b8 <PyInit__decimal@@Base+0x2de04>  // b.any
   34724:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   34728:	add	x1, x1, #0xc88
   3472c:	mov	x0, x19
   34730:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   34734:	cbnz	w0, 348b8 <PyInit__decimal@@Base+0x2de04>
   34738:	ldr	x22, [x21]
   3473c:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   34740:	add	x1, x1, #0xc88
   34744:	mov	x0, x19
   34748:	sub	x2, x22, #0x1
   3474c:	mov	x3, x20
   34750:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   34754:	mov	w8, #0x1                   	// #1
   34758:	sub	x8, x8, x22
   3475c:	str	x8, [x19, #8]
   34760:	b	348b8 <PyInit__decimal@@Base+0x2de04>
   34764:	add	x0, sp, #0x28
   34768:	mov	w9, #0x30                  	// #48
   3476c:	ldrb	w10, [x24]
   34770:	lsl	x2, x8, #3
   34774:	bfxil	w9, w10, #0, #4
   34778:	sturb	w9, [x29, #-216]
   3477c:	ldur	q0, [x24, #8]
   34780:	stur	q0, [x28, #8]
   34784:	stur	x8, [x29, #-192]
   34788:	ldr	x1, [x24, #40]
   3478c:	bl	63c0 <memcpy@plt>
   34790:	sub	x8, x29, #0xa8
   34794:	add	x2, x8, #0x1c
   34798:	mov	w0, wzr
   3479c:	mov	x1, x23
   347a0:	bl	23eb0 <PyInit__decimal@@Base+0x1d3fc>
   347a4:	ldurb	w8, [x29, #-139]
   347a8:	tbnz	w8, #0, 347d0 <PyInit__decimal@@Base+0x2dd1c>
   347ac:	mov	x2, x0
   347b0:	sub	x1, x29, #0xd8
   347b4:	sub	x4, x29, #0xa8
   347b8:	mov	x0, x19
   347bc:	mov	w3, w22
   347c0:	mov	x5, x20
   347c4:	bl	3c240 <PyInit__decimal@@Base+0x3578c>
   347c8:	ldrb	w8, [x19]
   347cc:	b	34ccc <PyInit__decimal@@Base+0x2e218>
   347d0:	add	x8, sp, #0x228
   347d4:	cmp	x8, x23
   347d8:	b.eq	34a4c <PyInit__decimal@@Base+0x2df98>  // b.none
   347dc:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   347e0:	ldr	x8, [x23, #24]
   347e4:	ldr	x10, [x24, #1344]
   347e8:	ldr	x9, [sp, #584]
   347ec:	cmp	x10, x8
   347f0:	csel	x1, x8, x10, lt  // lt = tstop
   347f4:	cmp	x1, x9
   347f8:	b.eq	34a1c <PyInit__decimal@@Base+0x2df68>  // b.none
   347fc:	ldrb	w10, [sp, #552]
   34800:	tbnz	w10, #5, 34a00 <PyInit__decimal@@Base+0x2df4c>
   34804:	add	x0, sp, #0x228
   34808:	mov	x2, x20
   3480c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   34810:	b	34a14 <PyInit__decimal@@Base+0x2df60>
   34814:	mov	w12, #0xe                   	// #14
   34818:	b	3421c <PyInit__decimal@@Base+0x2d768>
   3481c:	mov	w13, #0xe                   	// #14
   34820:	b	34324 <PyInit__decimal@@Base+0x2d870>
   34824:	mov	w12, #0x9                   	// #9
   34828:	b	3421c <PyInit__decimal@@Base+0x2d768>
   3482c:	mov	w13, #0x9                   	// #9
   34830:	b	34324 <PyInit__decimal@@Base+0x2d870>
   34834:	ldr	x9, [x28, #136]
   34838:	cmp	x9, x8
   3483c:	mov	w8, #0x11                  	// #17
   34840:	cinc	x8, x8, ls  // ls = plast
   34844:	str	x8, [x19, #16]
   34848:	b	34f74 <PyInit__decimal@@Base+0x2e4c0>
   3484c:	ldrb	w8, [x19]
   34850:	tbnz	w8, #5, 34890 <PyInit__decimal@@Base+0x2dddc>
   34854:	ldr	x9, [x19, #32]
   34858:	ldr	x1, [x22, #1344]
   3485c:	cmp	x9, x1
   34860:	b.le	34890 <PyInit__decimal@@Base+0x2dddc>
   34864:	strb	wzr, [sp, #600]
   34868:	ldr	x0, [x19, #40]
   3486c:	add	x3, sp, #0x258
   34870:	mov	w2, #0x8                   	// #8
   34874:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34878:	str	x0, [x19, #40]
   3487c:	ldrb	w8, [sp, #600]
   34880:	cbnz	w8, 3488c <PyInit__decimal@@Base+0x2ddd8>
   34884:	ldr	x8, [x22, #1344]
   34888:	str	x8, [x19, #32]
   3488c:	ldrb	w8, [x19]
   34890:	and	w8, w8, #0xf0
   34894:	orr	w8, w8, #0x4
   34898:	stp	xzr, xzr, [x19, #16]
   3489c:	strb	w8, [x19]
   348a0:	str	xzr, [x19, #8]
   348a4:	ldr	w9, [x20]
   348a8:	orr	w9, w9, #0x200
   348ac:	tst	w8, #0xe
   348b0:	str	w9, [x20]
   348b4:	b.eq	34724 <PyInit__decimal@@Base+0x2dc70>  // b.none
   348b8:	ldrb	w8, [x19]
   348bc:	tbz	w8, #1, 34f74 <PyInit__decimal@@Base+0x2e4c0>
   348c0:	tbnz	w8, #5, 34904 <PyInit__decimal@@Base+0x2de50>
   348c4:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   348c8:	ldr	x9, [x19, #32]
   348cc:	ldr	x1, [x22, #1344]
   348d0:	cmp	x9, x1
   348d4:	b.le	34904 <PyInit__decimal@@Base+0x2de50>
   348d8:	strb	wzr, [sp, #600]
   348dc:	ldr	x0, [x19, #40]
   348e0:	add	x3, sp, #0x258
   348e4:	mov	w2, #0x8                   	// #8
   348e8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   348ec:	str	x0, [x19, #40]
   348f0:	ldrb	w8, [sp, #600]
   348f4:	cbnz	w8, 34900 <PyInit__decimal@@Base+0x2de4c>
   348f8:	ldr	x8, [x22, #1344]
   348fc:	str	x8, [x19, #32]
   34900:	ldrb	w8, [x19]
   34904:	adrp	x11, 45000 <PyInit__decimal@@Base+0x3e54c>
   34908:	mov	x9, #0x1                   	// #1
   3490c:	ldr	x10, [x19, #40]
   34910:	ldr	q0, [x11, #2464]
   34914:	movk	x9, #0x4ec8, lsl #16
   34918:	movk	x9, #0x6d67, lsl #32
   3491c:	and	w8, w8, #0xf0
   34920:	movk	x9, #0x1bc1, lsl #48
   34924:	mov	w11, #0x1                   	// #1
   34928:	strb	w8, [x19]
   3492c:	str	x9, [x19, #8]
   34930:	str	q0, [x10]
   34934:	str	x11, [x19, #24]
   34938:	ldr	x8, [x10]
   3493c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   34940:	add	x9, x9, #0xca0
   34944:	cmp	x26, x8
   34948:	b.ls	3496c <PyInit__decimal@@Base+0x2deb8>  // b.plast
   3494c:	ldr	x10, [x9, #32]
   34950:	cmp	x10, x8
   34954:	b.ls	3498c <PyInit__decimal@@Base+0x2ded8>  // b.plast
   34958:	ldr	x10, [x9, #16]
   3495c:	cmp	x10, x8
   34960:	b.ls	34e94 <PyInit__decimal@@Base+0x2e3e0>  // b.plast
   34964:	ldr	x9, [x9, #8]
   34968:	b	342d0 <PyInit__decimal@@Base+0x2d81c>
   3496c:	ldr	x10, [x9, #112]
   34970:	cmp	x10, x8
   34974:	b.ls	349a0 <PyInit__decimal@@Base+0x2deec>  // b.plast
   34978:	ldr	x10, [x9, #88]
   3497c:	cmp	x10, x8
   34980:	b.ls	34e9c <PyInit__decimal@@Base+0x2e3e8>  // b.plast
   34984:	ldr	x9, [x9, #80]
   34988:	b	342f8 <PyInit__decimal@@Base+0x2d844>
   3498c:	ldr	x10, [x9, #48]
   34990:	cmp	x10, x8
   34994:	b.ls	34eb8 <PyInit__decimal@@Base+0x2e404>  // b.plast
   34998:	ldr	x9, [x9, #40]
   3499c:	b	343cc <PyInit__decimal@@Base+0x2d918>
   349a0:	ldr	x10, [x9, #144]
   349a4:	cmp	x10, x8
   349a8:	b.ls	34ed4 <PyInit__decimal@@Base+0x2e420>  // b.plast
   349ac:	ldr	x10, [x9, #128]
   349b0:	cmp	x10, x8
   349b4:	b.ls	34fbc <PyInit__decimal@@Base+0x2e508>  // b.plast
   349b8:	ldr	x9, [x9, #120]
   349bc:	b	345dc <PyInit__decimal@@Base+0x2db28>
   349c0:	ldrb	w8, [x19]
   349c4:	tbnz	w8, #5, 34f1c <PyInit__decimal@@Base+0x2e468>
   349c8:	ldr	x9, [x19, #32]
   349cc:	ldr	x1, [x25, #1344]
   349d0:	cmp	x9, x1
   349d4:	b.le	34f1c <PyInit__decimal@@Base+0x2e468>
   349d8:	sturb	wzr, [x29, #-56]
   349dc:	ldr	x0, [x19, #40]
   349e0:	sub	x3, x29, #0x38
   349e4:	mov	w2, #0x8                   	// #8
   349e8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   349ec:	str	x0, [x19, #40]
   349f0:	ldurb	w8, [x29, #-56]
   349f4:	cbnz	w8, 34584 <PyInit__decimal@@Base+0x2dad0>
   349f8:	ldr	x8, [x25, #1344]
   349fc:	b	34580 <PyInit__decimal@@Base+0x2dacc>
   34a00:	cmp	x1, x9
   34a04:	b.le	34a1c <PyInit__decimal@@Base+0x2df68>
   34a08:	add	x0, sp, #0x228
   34a0c:	mov	x2, x20
   34a10:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   34a14:	cbz	w0, 34edc <PyInit__decimal@@Base+0x2e428>
   34a18:	ldr	x8, [x23, #24]
   34a1c:	ldrb	w9, [x23]
   34a20:	ldrb	w10, [sp, #552]
   34a24:	lsl	x2, x8, #3
   34a28:	bfxil	w10, w9, #0, #4
   34a2c:	strb	w10, [sp, #552]
   34a30:	ldur	q0, [x23, #8]
   34a34:	add	x9, sp, #0x131
   34a38:	str	x8, [sp, #576]
   34a3c:	stur	q0, [x9, #255]
   34a40:	ldr	x0, [sp, #592]
   34a44:	ldr	x1, [x23, #40]
   34a48:	bl	63c0 <memcpy@plt>
   34a4c:	adrp	x11, 3e000 <PyInit__decimal@@Base+0x3754c>
   34a50:	ldr	q1, [x11, #1552]
   34a54:	mov	w10, #0x1                   	// #1
   34a58:	mov	w8, #0x2                   	// #2
   34a5c:	mov	w9, #0x90                  	// #144
   34a60:	sub	x12, x29, #0x78
   34a64:	dup	v0.2d, x10
   34a68:	sub	x0, x29, #0x38
   34a6c:	stur	wzr, [x29, #-112]
   34a70:	stur	x8, [x29, #-120]
   34a74:	sturb	w9, [x29, #-104]
   34a78:	stur	q0, [x28, #136]
   34a7c:	str	q1, [sp, #16]
   34a80:	stur	q1, [x28, #120]
   34a84:	stur	x12, [x29, #-64]
   34a88:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   34a8c:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   34a90:	add	x8, x8, #0xc88
   34a94:	cmp	x19, x8
   34a98:	b.eq	34b14 <PyInit__decimal@@Base+0x2e060>  // b.none
   34a9c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   34aa0:	ldr	x9, [x8, #1344]
   34aa4:	ldr	x8, [x19, #32]
   34aa8:	cmp	x9, #0x1
   34aac:	csinc	x1, x9, xzr, gt
   34ab0:	cmp	x1, x8
   34ab4:	b.eq	34ae8 <PyInit__decimal@@Base+0x2e034>  // b.none
   34ab8:	ldrb	w9, [x19]
   34abc:	tbnz	w9, #5, 34ad0 <PyInit__decimal@@Base+0x2e01c>
   34ac0:	mov	x0, x19
   34ac4:	mov	x2, x20
   34ac8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   34acc:	b	34ae4 <PyInit__decimal@@Base+0x2e030>
   34ad0:	cmp	x1, x8
   34ad4:	b.le	34ae8 <PyInit__decimal@@Base+0x2e034>
   34ad8:	mov	x0, x19
   34adc:	mov	x2, x20
   34ae0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   34ae4:	cbz	w0, 34b14 <PyInit__decimal@@Base+0x2e060>
   34ae8:	ldrb	w8, [x19]
   34aec:	ldr	q0, [sp, #16]
   34af0:	mov	w9, #0x1                   	// #1
   34af4:	str	x9, [x19, #24]
   34af8:	and	w8, w8, #0xf0
   34afc:	stur	q0, [x19, #8]
   34b00:	strb	w8, [x19]
   34b04:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   34b08:	ldr	x10, [x19, #40]
   34b0c:	ldr	x8, [x8, #1384]
   34b10:	str	x8, [x10]
   34b14:	ldrb	w9, [sp, #552]
   34b18:	mov	x23, #0x435f                	// #17247
   34b1c:	movk	x23, #0xd79, lsl #16
   34b20:	movk	x23, #0x35e5, lsl #32
   34b24:	adrp	x25, 44000 <PyInit__decimal@@Base+0x3d54c>
   34b28:	movk	x23, #0xd794, lsl #48
   34b2c:	mov	x24, #0xffffffffffffffed    	// #-19
   34b30:	add	x25, x25, #0xca0
   34b34:	ldr	x8, [sp, #592]
   34b38:	ldr	x10, [sp, #576]
   34b3c:	tst	w9, #0xe
   34b40:	add	x10, x8, x10, lsl #3
   34b44:	ldur	x10, [x10, #-8]
   34b48:	b.eq	34b54 <PyInit__decimal@@Base+0x2e0a0>  // b.none
   34b4c:	cbnz	x10, 34b58 <PyInit__decimal@@Base+0x2e0a4>
   34b50:	b	34bec <PyInit__decimal@@Base+0x2e138>
   34b54:	cbz	x10, 34cbc <PyInit__decimal@@Base+0x2e208>
   34b58:	ldr	x9, [sp, #560]
   34b5c:	tbnz	x9, #63, 34b6c <PyInit__decimal@@Base+0x2e0b8>
   34b60:	cbnz	x9, 34bec <PyInit__decimal@@Base+0x2e138>
   34b64:	ldr	x8, [x8]
   34b68:	b	34b8c <PyInit__decimal@@Base+0x2e0d8>
   34b6c:	neg	x10, x9
   34b70:	umulh	x10, x10, x23
   34b74:	neg	x9, x9
   34b78:	lsr	x10, x10, #4
   34b7c:	madd	x9, x10, x24, x9
   34b80:	ldr	x8, [x8, x10, lsl #3]
   34b84:	ldr	x9, [x25, x9, lsl #3]
   34b88:	udiv	x8, x8, x9
   34b8c:	tbz	w8, #0, 34bec <PyInit__decimal@@Base+0x2e138>
   34b90:	sub	x2, x29, #0xd8
   34b94:	sub	x3, x29, #0xa8
   34b98:	sub	x4, x29, #0x70
   34b9c:	mov	x0, x19
   34ba0:	mov	x1, x19
   34ba4:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   34ba8:	sub	x1, x29, #0xa8
   34bac:	sub	x2, x29, #0x70
   34bb0:	mov	x0, x19
   34bb4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   34bb8:	ldur	w9, [x29, #-112]
   34bbc:	ldr	w8, [x20]
   34bc0:	orr	w8, w8, w9
   34bc4:	str	w8, [x20]
   34bc8:	ldrb	w8, [x19]
   34bcc:	tst	w8, #0xe
   34bd0:	b.ne	34cc0 <PyInit__decimal@@Base+0x2e20c>  // b.any
   34bd4:	tbz	w9, #0, 34bec <PyInit__decimal@@Base+0x2e138>
   34bd8:	ldr	x9, [x19, #40]
   34bdc:	ldr	x10, [x19, #24]
   34be0:	add	x9, x9, x10, lsl #3
   34be4:	ldur	x9, [x9, #-8]
   34be8:	cbz	x9, 34cc0 <PyInit__decimal@@Base+0x2e20c>
   34bec:	sub	x0, x29, #0xd8
   34bf0:	sub	x1, x29, #0xd8
   34bf4:	sub	x2, x29, #0xd8
   34bf8:	sub	x3, x29, #0xa8
   34bfc:	sub	x4, x29, #0x70
   34c00:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   34c04:	sub	x0, x29, #0xd8
   34c08:	sub	x1, x29, #0xa8
   34c0c:	sub	x2, x29, #0x70
   34c10:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   34c14:	add	x0, sp, #0x228
   34c18:	add	x1, sp, #0x228
   34c1c:	sub	x2, x29, #0x68
   34c20:	sub	x3, x29, #0x38
   34c24:	sub	x4, x29, #0x70
   34c28:	bl	2d0dc <PyInit__decimal@@Base+0x26628>
   34c2c:	ldurb	w8, [x29, #-216]
   34c30:	tst	w8, #0xc
   34c34:	b.ne	34c44 <PyInit__decimal@@Base+0x2e190>  // b.any
   34c38:	ldrb	w9, [sp, #552]
   34c3c:	tst	w9, #0xc
   34c40:	b.eq	34b34 <PyInit__decimal@@Base+0x2e080>  // b.none
   34c44:	ldur	w9, [x29, #-112]
   34c48:	ldrb	w8, [x19]
   34c4c:	mov	w10, #0x3be                 	// #958
   34c50:	and	w23, w9, w10
   34c54:	tbnz	w8, #5, 34c98 <PyInit__decimal@@Base+0x2e1e4>
   34c58:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   34c5c:	ldr	x9, [x19, #32]
   34c60:	ldr	x1, [x24, #1344]
   34c64:	cmp	x9, x1
   34c68:	b.le	34c98 <PyInit__decimal@@Base+0x2e1e4>
   34c6c:	sturb	wzr, [x29, #-108]
   34c70:	ldr	x0, [x19, #40]
   34c74:	sub	x3, x29, #0x6c
   34c78:	mov	w2, #0x8                   	// #8
   34c7c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34c80:	str	x0, [x19, #40]
   34c84:	ldurb	w8, [x29, #-108]
   34c88:	cbnz	w8, 34c94 <PyInit__decimal@@Base+0x2e1e0>
   34c8c:	ldr	x8, [x24, #1344]
   34c90:	str	x8, [x19, #32]
   34c94:	ldrb	w8, [x19]
   34c98:	and	w8, w8, #0xf0
   34c9c:	orr	w8, w8, #0x4
   34ca0:	stp	xzr, xzr, [x19, #16]
   34ca4:	strb	w8, [x19]
   34ca8:	str	xzr, [x19, #8]
   34cac:	ldr	w9, [x20]
   34cb0:	orr	w9, w9, w23
   34cb4:	str	w9, [x20]
   34cb8:	b	34ccc <PyInit__decimal@@Base+0x2e218>
   34cbc:	ldrb	w8, [x19]
   34cc0:	and	w8, w8, #0xfe
   34cc4:	orr	w8, w8, w22
   34cc8:	strb	w8, [x19]
   34ccc:	tbnz	w8, #1, 34d18 <PyInit__decimal@@Base+0x2e264>
   34cd0:	ldurb	w8, [x29, #-216]
   34cd4:	cmp	w8, #0x1f
   34cd8:	b.ls	34f3c <PyInit__decimal@@Base+0x2e488>  // b.plast
   34cdc:	tbnz	w8, #4, 34f54 <PyInit__decimal@@Base+0x2e4a0>
   34ce0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   34ce4:	ldr	x8, [x8, #1376]
   34ce8:	sub	x0, x29, #0xd8
   34cec:	blr	x8
   34cf0:	ldrb	w8, [sp, #552]
   34cf4:	cmp	w8, #0x1f
   34cf8:	b.hi	34f60 <PyInit__decimal@@Base+0x2e4ac>  // b.pmore
   34cfc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   34d00:	ldr	x8, [x8, #1376]
   34d04:	ldr	x0, [sp, #592]
   34d08:	blr	x8
   34d0c:	ldrb	w8, [sp, #552]
   34d10:	tbz	w8, #4, 34f64 <PyInit__decimal@@Base+0x2e4b0>
   34d14:	b	34f74 <PyInit__decimal@@Base+0x2e4c0>
   34d18:	tbnz	w8, #5, 34d5c <PyInit__decimal@@Base+0x2e2a8>
   34d1c:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   34d20:	ldr	x9, [x19, #32]
   34d24:	ldr	x1, [x23, #1344]
   34d28:	cmp	x9, x1
   34d2c:	b.le	34d5c <PyInit__decimal@@Base+0x2e2a8>
   34d30:	sturb	wzr, [x29, #-56]
   34d34:	ldr	x0, [x19, #40]
   34d38:	sub	x3, x29, #0x38
   34d3c:	mov	w2, #0x8                   	// #8
   34d40:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34d44:	str	x0, [x19, #40]
   34d48:	ldurb	w8, [x29, #-56]
   34d4c:	cbnz	w8, 34d58 <PyInit__decimal@@Base+0x2e2a4>
   34d50:	ldr	x8, [x23, #1344]
   34d54:	str	x8, [x19, #32]
   34d58:	ldrb	w8, [x19]
   34d5c:	adrp	x11, 45000 <PyInit__decimal@@Base+0x3e54c>
   34d60:	mov	x9, #0x1                   	// #1
   34d64:	ldr	x10, [x19, #40]
   34d68:	ldr	q0, [x11, #2464]
   34d6c:	movk	x9, #0x4ec8, lsl #16
   34d70:	and	w8, w8, #0xf0
   34d74:	movk	x9, #0x6d67, lsl #32
   34d78:	movk	x9, #0x1bc1, lsl #48
   34d7c:	mov	w12, #0x1                   	// #1
   34d80:	orr	w8, w8, w22
   34d84:	str	x9, [x19, #8]
   34d88:	strb	w8, [x19]
   34d8c:	str	q0, [x10]
   34d90:	str	x12, [x19, #24]
   34d94:	ldr	x8, [x10]
   34d98:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   34d9c:	add	x9, x9, #0xca0
   34da0:	cmp	x26, x8
   34da4:	b.ls	34dd0 <PyInit__decimal@@Base+0x2e31c>  // b.plast
   34da8:	ldr	x10, [x9, #32]
   34dac:	cmp	x10, x8
   34db0:	b.ls	34df8 <PyInit__decimal@@Base+0x2e344>  // b.plast
   34db4:	ldr	x10, [x9, #16]
   34db8:	cmp	x10, x8
   34dbc:	b.ls	34e3c <PyInit__decimal@@Base+0x2e388>  // b.plast
   34dc0:	ldr	x9, [x9, #8]
   34dc4:	cmp	x9, x8
   34dc8:	mov	w8, #0x1                   	// #1
   34dcc:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34dd0:	ldr	x10, [x9, #112]
   34dd4:	cmp	x10, x8
   34dd8:	b.ls	34e14 <PyInit__decimal@@Base+0x2e360>  // b.plast
   34ddc:	ldr	x10, [x9, #88]
   34de0:	cmp	x10, x8
   34de4:	b.ls	34e4c <PyInit__decimal@@Base+0x2e398>  // b.plast
   34de8:	ldr	x9, [x9, #80]
   34dec:	cmp	x9, x8
   34df0:	mov	w8, #0xa                   	// #10
   34df4:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34df8:	ldr	x10, [x9, #48]
   34dfc:	cmp	x10, x8
   34e00:	b.ls	34e68 <PyInit__decimal@@Base+0x2e3b4>  // b.plast
   34e04:	ldr	x9, [x9, #40]
   34e08:	cmp	x9, x8
   34e0c:	mov	w8, #0x5                   	// #5
   34e10:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34e14:	ldr	x10, [x9, #144]
   34e18:	cmp	x10, x8
   34e1c:	b.ls	34e84 <PyInit__decimal@@Base+0x2e3d0>  // b.plast
   34e20:	ldr	x10, [x9, #128]
   34e24:	cmp	x10, x8
   34e28:	b.ls	34f88 <PyInit__decimal@@Base+0x2e4d4>  // b.plast
   34e2c:	ldr	x9, [x9, #120]
   34e30:	cmp	x9, x8
   34e34:	mov	w8, #0xf                   	// #15
   34e38:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34e3c:	ldr	x9, [x9, #24]
   34e40:	cmp	x9, x8
   34e44:	mov	w8, #0x3                   	// #3
   34e48:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34e4c:	ldr	x10, [x9, #104]
   34e50:	cmp	x10, x8
   34e54:	b.ls	34fac <PyInit__decimal@@Base+0x2e4f8>  // b.plast
   34e58:	ldr	x9, [x9, #96]
   34e5c:	cmp	x9, x8
   34e60:	mov	w8, #0xc                   	// #12
   34e64:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34e68:	ldr	x10, [x9, #64]
   34e6c:	cmp	x10, x8
   34e70:	b.ls	34fb4 <PyInit__decimal@@Base+0x2e500>  // b.plast
   34e74:	ldr	x9, [x9, #56]
   34e78:	cmp	x9, x8
   34e7c:	mov	w8, #0x7                   	// #7
   34e80:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34e84:	ldr	x9, [x9, #152]
   34e88:	cmp	x9, x8
   34e8c:	mov	w8, #0x13                  	// #19
   34e90:	b	34f94 <PyInit__decimal@@Base+0x2e4e0>
   34e94:	ldr	x9, [x9, #24]
   34e98:	b	34308 <PyInit__decimal@@Base+0x2d854>
   34e9c:	ldr	x10, [x9, #104]
   34ea0:	cmp	x10, x8
   34ea4:	b.ls	34eb0 <PyInit__decimal@@Base+0x2e3fc>  // b.plast
   34ea8:	ldr	x9, [x9, #96]
   34eac:	b	345b4 <PyInit__decimal@@Base+0x2db00>
   34eb0:	mov	w8, #0xe                   	// #14
   34eb4:	b	34844 <PyInit__decimal@@Base+0x2dd90>
   34eb8:	ldr	x10, [x9, #64]
   34ebc:	cmp	x10, x8
   34ec0:	b.ls	34ecc <PyInit__decimal@@Base+0x2e418>  // b.plast
   34ec4:	ldr	x9, [x9, #56]
   34ec8:	b	34608 <PyInit__decimal@@Base+0x2db54>
   34ecc:	mov	w8, #0x9                   	// #9
   34ed0:	b	34844 <PyInit__decimal@@Base+0x2dd90>
   34ed4:	ldr	x9, [x9, #152]
   34ed8:	b	345ec <PyInit__decimal@@Base+0x2db38>
   34edc:	ldrb	w8, [x19]
   34ee0:	tbnz	w8, #5, 34f1c <PyInit__decimal@@Base+0x2e468>
   34ee4:	ldr	x9, [x19, #32]
   34ee8:	ldr	x1, [x24, #1344]
   34eec:	cmp	x9, x1
   34ef0:	b.le	34f1c <PyInit__decimal@@Base+0x2e468>
   34ef4:	sturb	wzr, [x29, #-56]
   34ef8:	ldr	x0, [x19, #40]
   34efc:	sub	x3, x29, #0x38
   34f00:	mov	w2, #0x8                   	// #8
   34f04:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   34f08:	str	x0, [x19, #40]
   34f0c:	ldurb	w8, [x29, #-56]
   34f10:	cbnz	w8, 34584 <PyInit__decimal@@Base+0x2dad0>
   34f14:	ldr	x8, [x24, #1344]
   34f18:	b	34580 <PyInit__decimal@@Base+0x2dacc>
   34f1c:	and	w8, w8, #0xf0
   34f20:	orr	w8, w8, #0x4
   34f24:	stp	xzr, xzr, [x19, #16]
   34f28:	strb	w8, [x19]
   34f2c:	str	xzr, [x19, #8]
   34f30:	ldurb	w8, [x29, #-216]
   34f34:	cmp	w8, #0x1f
   34f38:	b.hi	34cdc <PyInit__decimal@@Base+0x2e228>  // b.pmore
   34f3c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   34f40:	ldr	x8, [x8, #1376]
   34f44:	ldur	x0, [x29, #-176]
   34f48:	blr	x8
   34f4c:	ldurb	w8, [x29, #-216]
   34f50:	tbz	w8, #4, 34ce0 <PyInit__decimal@@Base+0x2e22c>
   34f54:	ldrb	w8, [sp, #552]
   34f58:	cmp	w8, #0x1f
   34f5c:	b.ls	34cfc <PyInit__decimal@@Base+0x2e248>  // b.plast
   34f60:	tbnz	w8, #4, 34f74 <PyInit__decimal@@Base+0x2e4c0>
   34f64:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   34f68:	ldr	x8, [x8, #1376]
   34f6c:	add	x0, sp, #0x228
   34f70:	blr	x8
   34f74:	mov	x0, x19
   34f78:	mov	x1, x21
   34f7c:	mov	x2, x20
   34f80:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   34f84:	b	33fa0 <PyInit__decimal@@Base+0x2d4ec>
   34f88:	ldr	x9, [x9, #136]
   34f8c:	cmp	x9, x8
   34f90:	mov	w8, #0x11                  	// #17
   34f94:	cinc	x8, x8, ls  // ls = plast
   34f98:	str	x8, [x19, #16]
   34f9c:	ldurb	w8, [x29, #-216]
   34fa0:	cmp	w8, #0x1f
   34fa4:	b.hi	34cdc <PyInit__decimal@@Base+0x2e228>  // b.pmore
   34fa8:	b	34f3c <PyInit__decimal@@Base+0x2e488>
   34fac:	mov	w8, #0xe                   	// #14
   34fb0:	b	34f98 <PyInit__decimal@@Base+0x2e4e4>
   34fb4:	mov	w8, #0x9                   	// #9
   34fb8:	b	34f98 <PyInit__decimal@@Base+0x2e4e4>
   34fbc:	ldr	x9, [x9, #136]
   34fc0:	b	34838 <PyInit__decimal@@Base+0x2dd84>
   34fc4:	stp	x29, x30, [sp, #-96]!
   34fc8:	stp	x28, x27, [sp, #16]
   34fcc:	stp	x26, x25, [sp, #32]
   34fd0:	stp	x24, x23, [sp, #48]
   34fd4:	stp	x22, x21, [sp, #64]
   34fd8:	stp	x20, x19, [sp, #80]
   34fdc:	mov	x29, sp
   34fe0:	sub	sp, sp, #0x9b0
   34fe4:	add	x10, sp, #0x740
   34fe8:	str	x10, [sp, #1848]
   34fec:	add	x10, sp, #0x510
   34ff0:	str	x10, [sp, #1288]
   34ff4:	add	x10, sp, #0x2e0
   34ff8:	str	x10, [sp, #728]
   34ffc:	add	x10, sp, #0xb0
   35000:	str	x10, [sp, #168]
   35004:	mov	w10, #0x1                   	// #1
   35008:	dup	v0.2d, x10
   3500c:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
   35010:	stur	q0, [sp, #96]
   35014:	ldr	q0, [x10, #1552]
   35018:	mov	w8, #0x30                  	// #48
   3501c:	mov	w9, #0x40                  	// #64
   35020:	strb	w8, [sp, #1808]
   35024:	strb	w8, [sp, #1248]
   35028:	strb	w8, [sp, #688]
   3502c:	strb	w8, [sp, #128]
   35030:	mov	w8, #0x2                   	// #2
   35034:	str	x9, [sp, #1840]
   35038:	str	x9, [sp, #1280]
   3503c:	str	x9, [sp, #720]
   35040:	stp	xzr, x9, [sp, #152]
   35044:	mov	w9, #0x90                  	// #144
   35048:	add	x10, sp, #0x78
   3504c:	str	xzr, [sp, #1816]
   35050:	str	xzr, [sp, #1824]
   35054:	str	xzr, [sp, #1256]
   35058:	str	xzr, [sp, #1264]
   3505c:	str	xzr, [sp, #696]
   35060:	str	xzr, [sp, #704]
   35064:	stp	xzr, xzr, [sp, #136]
   35068:	str	xzr, [sp, #1832]
   3506c:	str	xzr, [sp, #1272]
   35070:	str	xzr, [sp, #712]
   35074:	stp	x10, x8, [sp, #112]
   35078:	strb	w9, [sp, #72]
   3507c:	stur	q0, [sp, #80]
   35080:	ldrb	w10, [x1]
   35084:	ldrb	w8, [x2]
   35088:	mov	x20, x5
   3508c:	mov	x23, x4
   35090:	mov	x24, x3
   35094:	orr	w9, w10, w8
   35098:	mov	x22, x2
   3509c:	mov	x21, x1
   350a0:	tst	w9, #0xe
   350a4:	mov	x19, x0
   350a8:	b.ne	350b8 <PyInit__decimal@@Base+0x2e604>  // b.any
   350ac:	ldrb	w9, [x24]
   350b0:	tst	w9, #0xe
   350b4:	b.eq	35108 <PyInit__decimal@@Base+0x2e654>  // b.none
   350b8:	ldrb	w9, [x24]
   350bc:	orr	w11, w8, w10
   350c0:	orr	w11, w11, w9
   350c4:	tst	w11, #0xc
   350c8:	b.eq	35628 <PyInit__decimal@@Base+0x2eb74>  // b.none
   350cc:	tbnz	w10, #3, 350f0 <PyInit__decimal@@Base+0x2e63c>
   350d0:	tbnz	w8, #3, 35148 <PyInit__decimal@@Base+0x2e694>
   350d4:	tbnz	w9, #3, 3520c <PyInit__decimal@@Base+0x2e758>
   350d8:	tbnz	w10, #2, 35158 <PyInit__decimal@@Base+0x2e6a4>
   350dc:	tst	w8, #0x4
   350e0:	csel	x21, x24, x22, eq  // eq = none
   350e4:	cmp	x21, x19
   350e8:	b.ne	35160 <PyInit__decimal@@Base+0x2e6ac>  // b.any
   350ec:	b	351e8 <PyInit__decimal@@Base+0x2e734>
   350f0:	ldr	w8, [x20]
   350f4:	orr	w8, w8, #0x100
   350f8:	str	w8, [x20]
   350fc:	cmp	x21, x19
   35100:	b.ne	35160 <PyInit__decimal@@Base+0x2e6ac>  // b.any
   35104:	b	351e8 <PyInit__decimal@@Base+0x2e734>
   35108:	ldr	x12, [x21, #40]
   3510c:	ldr	x13, [x21, #24]
   35110:	add	x9, x12, x13, lsl #3
   35114:	ldur	x9, [x9, #-8]
   35118:	cbz	x9, 3527c <PyInit__decimal@@Base+0x2e7c8>
   3511c:	cmp	x13, #0x1
   35120:	b.lt	35140 <PyInit__decimal@@Base+0x2e68c>  // b.tstop
   35124:	mov	x11, xzr
   35128:	ldr	x14, [x12]
   3512c:	cbnz	x14, 35228 <PyInit__decimal@@Base+0x2e774>
   35130:	add	x11, x11, #0x13
   35134:	subs	x13, x13, #0x1
   35138:	add	x12, x12, #0x8
   3513c:	b.ne	35128 <PyInit__decimal@@Base+0x2e674>  // b.any
   35140:	mov	x11, xzr
   35144:	b	35270 <PyInit__decimal@@Base+0x2e7bc>
   35148:	ldr	w8, [x20]
   3514c:	mov	x21, x22
   35150:	orr	w8, w8, #0x100
   35154:	str	w8, [x20]
   35158:	cmp	x21, x19
   3515c:	b.eq	351e8 <PyInit__decimal@@Base+0x2e734>  // b.none
   35160:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   35164:	ldr	x8, [x21, #24]
   35168:	ldr	x10, [x9, #1344]
   3516c:	ldr	x9, [x19, #32]
   35170:	cmp	x10, x8
   35174:	csel	x1, x8, x10, lt  // lt = tstop
   35178:	cmp	x1, x9
   3517c:	b.eq	351b8 <PyInit__decimal@@Base+0x2e704>  // b.none
   35180:	ldrb	w10, [x19]
   35184:	tbnz	w10, #5, 3519c <PyInit__decimal@@Base+0x2e6e8>
   35188:	mov	x0, x19
   3518c:	mov	x2, x20
   35190:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   35194:	cbnz	w0, 351b4 <PyInit__decimal@@Base+0x2e700>
   35198:	b	351e8 <PyInit__decimal@@Base+0x2e734>
   3519c:	cmp	x1, x9
   351a0:	b.le	351b8 <PyInit__decimal@@Base+0x2e704>
   351a4:	mov	x0, x19
   351a8:	mov	x2, x20
   351ac:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   351b0:	cbz	w0, 351e8 <PyInit__decimal@@Base+0x2e734>
   351b4:	ldr	x8, [x21, #24]
   351b8:	ldrb	w9, [x21]
   351bc:	ldrb	w10, [x19]
   351c0:	ldr	x0, [x19, #40]
   351c4:	bfxil	w10, w9, #0, #4
   351c8:	strb	w10, [x19]
   351cc:	ldur	q0, [x21, #8]
   351d0:	str	x8, [x19, #24]
   351d4:	stur	q0, [x19, #8]
   351d8:	ldr	x8, [x21, #24]
   351dc:	ldr	x1, [x21, #40]
   351e0:	lsl	x2, x8, #3
   351e4:	bl	63c0 <memcpy@plt>
   351e8:	ldrb	w8, [x19]
   351ec:	mov	x0, x19
   351f0:	and	w8, w8, #0xfffffff1
   351f4:	orr	w8, w8, #0x4
   351f8:	strb	w8, [x19]
   351fc:	ldr	x1, [x23]
   35200:	ldr	w2, [x23, #40]
   35204:	bl	24544 <PyInit__decimal@@Base+0x1da90>
   35208:	b	35690 <PyInit__decimal@@Base+0x2ebdc>
   3520c:	ldr	w8, [x20]
   35210:	mov	x21, x24
   35214:	orr	w8, w8, #0x100
   35218:	str	w8, [x20]
   3521c:	cmp	x21, x19
   35220:	b.ne	35160 <PyInit__decimal@@Base+0x2e6ac>  // b.any
   35224:	b	351e8 <PyInit__decimal@@Base+0x2e734>
   35228:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   3522c:	movk	x12, #0xcccd
   35230:	mul	x13, x14, x12
   35234:	mov	x15, #0x9999999999999999    	// #-7378697629483820647
   35238:	ror	x13, x13, #1
   3523c:	movk	x15, #0x1999, lsl #48
   35240:	cmp	x13, x15
   35244:	b.hi	35270 <PyInit__decimal@@Base+0x2e7bc>  // b.pmore
   35248:	mov	x13, #0x9999999999999999    	// #-7378697629483820647
   3524c:	movk	x13, #0x999a
   35250:	movk	x13, #0x1999, lsl #48
   35254:	umulh	x14, x14, x12
   35258:	lsr	x14, x14, #3
   3525c:	mul	x15, x14, x12
   35260:	ror	x15, x15, #1
   35264:	cmp	x15, x13
   35268:	add	x11, x11, #0x1
   3526c:	b.cc	35254 <PyInit__decimal@@Base+0x2e7a0>  // b.lo, b.ul, b.last
   35270:	ldr	x12, [x21, #8]
   35274:	cmn	x12, x11
   35278:	b.mi	35628 <PyInit__decimal@@Base+0x2eb74>  // b.first
   3527c:	ldr	x12, [x22, #40]
   35280:	ldr	x14, [x22, #24]
   35284:	add	x11, x12, x14, lsl #3
   35288:	ldur	x11, [x11, #-8]
   3528c:	cbz	x11, 35314 <PyInit__decimal@@Base+0x2e860>
   35290:	cmp	x14, #0x1
   35294:	b.lt	352b8 <PyInit__decimal@@Base+0x2e804>  // b.tstop
   35298:	mov	x13, xzr
   3529c:	mov	x16, x12
   352a0:	ldr	x15, [x16]
   352a4:	cbnz	x15, 352c0 <PyInit__decimal@@Base+0x2e80c>
   352a8:	add	x13, x13, #0x13
   352ac:	subs	x14, x14, #0x1
   352b0:	add	x16, x16, #0x8
   352b4:	b.ne	352a0 <PyInit__decimal@@Base+0x2e7ec>  // b.any
   352b8:	mov	x13, xzr
   352bc:	b	35308 <PyInit__decimal@@Base+0x2e854>
   352c0:	mov	x14, #0xcccccccccccccccc    	// #-3689348814741910324
   352c4:	movk	x14, #0xcccd
   352c8:	mul	x16, x15, x14
   352cc:	mov	x17, #0x9999999999999999    	// #-7378697629483820647
   352d0:	ror	x16, x16, #1
   352d4:	movk	x17, #0x1999, lsl #48
   352d8:	cmp	x16, x17
   352dc:	b.hi	35308 <PyInit__decimal@@Base+0x2e854>  // b.pmore
   352e0:	mov	x16, #0x9999999999999999    	// #-7378697629483820647
   352e4:	movk	x16, #0x999a
   352e8:	movk	x16, #0x1999, lsl #48
   352ec:	umulh	x15, x15, x14
   352f0:	lsr	x15, x15, #3
   352f4:	mul	x17, x15, x14
   352f8:	ror	x17, x17, #1
   352fc:	cmp	x17, x16
   35300:	add	x13, x13, #0x1
   35304:	b.cc	352ec <PyInit__decimal@@Base+0x2e838>  // b.lo, b.ul, b.last
   35308:	ldr	x14, [x22, #8]
   3530c:	cmn	x14, x13
   35310:	b.mi	35628 <PyInit__decimal@@Base+0x2eb74>  // b.first
   35314:	ldr	x14, [x24, #40]
   35318:	ldr	x15, [x24, #24]
   3531c:	add	x13, x14, x15, lsl #3
   35320:	ldur	x13, [x13, #-8]
   35324:	cbz	x13, 35628 <PyInit__decimal@@Base+0x2eb74>
   35328:	cmp	x15, #0x1
   3532c:	b.lt	3534c <PyInit__decimal@@Base+0x2e898>  // b.tstop
   35330:	mov	x13, xzr
   35334:	ldr	x16, [x14]
   35338:	cbnz	x16, 35354 <PyInit__decimal@@Base+0x2e8a0>
   3533c:	add	x13, x13, #0x13
   35340:	subs	x15, x15, #0x1
   35344:	add	x14, x14, #0x8
   35348:	b.ne	35334 <PyInit__decimal@@Base+0x2e880>  // b.any
   3534c:	mov	x13, xzr
   35350:	b	3539c <PyInit__decimal@@Base+0x2e8e8>
   35354:	mov	x14, #0xcccccccccccccccc    	// #-3689348814741910324
   35358:	movk	x14, #0xcccd
   3535c:	mul	x15, x16, x14
   35360:	mov	x17, #0x9999999999999999    	// #-7378697629483820647
   35364:	ror	x15, x15, #1
   35368:	movk	x17, #0x1999, lsl #48
   3536c:	cmp	x15, x17
   35370:	b.hi	3539c <PyInit__decimal@@Base+0x2e8e8>  // b.pmore
   35374:	mov	x15, #0x9999999999999999    	// #-7378697629483820647
   35378:	movk	x15, #0x999a
   3537c:	movk	x15, #0x1999, lsl #48
   35380:	umulh	x16, x16, x14
   35384:	lsr	x16, x16, #3
   35388:	mul	x17, x16, x14
   3538c:	ror	x17, x17, #1
   35390:	cmp	x17, x15
   35394:	add	x13, x13, #0x1
   35398:	b.cc	35380 <PyInit__decimal@@Base+0x2e8cc>  // b.lo, b.ul, b.last
   3539c:	ldr	x14, [x24, #8]
   353a0:	cmn	x14, x13
   353a4:	b.mi	35628 <PyInit__decimal@@Base+0x2eb74>  // b.first
   353a8:	ldr	x13, [x24, #16]
   353ac:	ldr	x15, [x23]
   353b0:	add	x13, x14, x13
   353b4:	cmp	x13, x15
   353b8:	b.gt	35628 <PyInit__decimal@@Base+0x2eb74>
   353bc:	mov	w25, wzr
   353c0:	tbz	w10, #0, 35428 <PyInit__decimal@@Base+0x2e974>
   353c4:	cbz	x11, 35428 <PyInit__decimal@@Base+0x2e974>
   353c8:	ldr	x10, [x22, #8]
   353cc:	tbnz	x10, #63, 353dc <PyInit__decimal@@Base+0x2e928>
   353d0:	cbz	x10, 35420 <PyInit__decimal@@Base+0x2e96c>
   353d4:	mov	w25, wzr
   353d8:	b	35428 <PyInit__decimal@@Base+0x2e974>
   353dc:	mov	x14, #0x435f                	// #17247
   353e0:	movk	x14, #0xd79, lsl #16
   353e4:	movk	x14, #0x35e5, lsl #32
   353e8:	neg	x13, x10
   353ec:	movk	x14, #0xd794, lsl #48
   353f0:	umulh	x13, x13, x14
   353f4:	mov	x15, #0xffffffffffffffed    	// #-19
   353f8:	neg	x10, x10
   353fc:	lsr	x13, x13, #4
   35400:	madd	x10, x13, x15, x10
   35404:	ldr	x12, [x12, x13, lsl #3]
   35408:	adrp	x13, 44000 <PyInit__decimal@@Base+0x3d54c>
   3540c:	add	x13, x13, #0xca0
   35410:	ldr	x10, [x13, x10, lsl #3]
   35414:	udiv	x10, x12, x10
   35418:	and	w25, w10, #0x1
   3541c:	b	35428 <PyInit__decimal@@Base+0x2e974>
   35420:	ldrb	w10, [x12]
   35424:	and	w25, w10, #0x1
   35428:	cbz	x11, 35564 <PyInit__decimal@@Base+0x2eab0>
   3542c:	tbnz	w8, #0, 35628 <PyInit__decimal@@Base+0x2eb74>
   35430:	cbz	x9, 3570c <PyInit__decimal@@Base+0x2ec58>
   35434:	sub	x0, x29, #0x70
   35438:	str	q0, [sp]
   3543c:	sub	x23, x29, #0x70
   35440:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   35444:	add	x4, x23, #0x1c
   35448:	add	x0, sp, #0x2b0
   3544c:	sub	x3, x29, #0x70
   35450:	mov	x1, x24
   35454:	mov	x2, xzr
   35458:	bl	37804 <PyInit__decimal@@Base+0x30d50>
   3545c:	ldur	w8, [x29, #-84]
   35460:	mov	w9, #0x3be                 	// #958
   35464:	ands	w23, w8, w9
   35468:	b.eq	357f8 <PyInit__decimal@@Base+0x2ed44>  // b.none
   3546c:	ldrb	w8, [x19]
   35470:	tbnz	w8, #5, 354b4 <PyInit__decimal@@Base+0x2ea00>
   35474:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   35478:	ldr	x9, [x19, #32]
   3547c:	ldr	x1, [x21, #1344]
   35480:	cmp	x9, x1
   35484:	b.le	354b4 <PyInit__decimal@@Base+0x2ea00>
   35488:	sturb	wzr, [x29, #-64]
   3548c:	ldr	x0, [x19, #40]
   35490:	sub	x3, x29, #0x40
   35494:	mov	w2, #0x8                   	// #8
   35498:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3549c:	str	x0, [x19, #40]
   354a0:	ldurb	w8, [x29, #-64]
   354a4:	cbnz	w8, 354b0 <PyInit__decimal@@Base+0x2e9fc>
   354a8:	ldr	x8, [x21, #1344]
   354ac:	str	x8, [x19, #32]
   354b0:	ldrb	w8, [x19]
   354b4:	and	w8, w8, #0xf0
   354b8:	orr	w8, w8, #0x4
   354bc:	stp	xzr, xzr, [x19, #16]
   354c0:	strb	w8, [x19]
   354c4:	str	xzr, [x19, #8]
   354c8:	ldr	w8, [x20]
   354cc:	orr	w8, w8, w23
   354d0:	str	w8, [x20]
   354d4:	ldrb	w8, [sp, #1808]
   354d8:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   354dc:	cmp	w8, #0x1f
   354e0:	b.hi	354f4 <PyInit__decimal@@Base+0x2ea40>  // b.pmore
   354e4:	ldr	x8, [x19, #1376]
   354e8:	ldr	x0, [sp, #1848]
   354ec:	blr	x8
   354f0:	ldrb	w8, [sp, #1808]
   354f4:	tbnz	w8, #4, 356b0 <PyInit__decimal@@Base+0x2ebfc>
   354f8:	ldr	x8, [x19, #1376]
   354fc:	add	x0, sp, #0x710
   35500:	blr	x8
   35504:	ldrb	w8, [sp, #1248]
   35508:	cmp	w8, #0x1f
   3550c:	b.hi	356bc <PyInit__decimal@@Base+0x2ec08>  // b.pmore
   35510:	ldr	x8, [x19, #1376]
   35514:	ldr	x0, [sp, #1288]
   35518:	blr	x8
   3551c:	ldrb	w8, [sp, #1248]
   35520:	tbz	w8, #4, 356c0 <PyInit__decimal@@Base+0x2ec0c>
   35524:	ldrb	w8, [sp, #688]
   35528:	cmp	w8, #0x1f
   3552c:	b.ls	356d8 <PyInit__decimal@@Base+0x2ec24>  // b.plast
   35530:	tbnz	w8, #4, 356ec <PyInit__decimal@@Base+0x2ec38>
   35534:	ldr	x8, [x19, #1376]
   35538:	add	x0, sp, #0x2b0
   3553c:	blr	x8
   35540:	ldrb	w8, [sp, #128]
   35544:	cmp	w8, #0x1f
   35548:	b.hi	356f8 <PyInit__decimal@@Base+0x2ec44>  // b.pmore
   3554c:	ldr	x8, [x19, #1376]
   35550:	ldr	x0, [sp, #168]
   35554:	blr	x8
   35558:	ldrb	w8, [sp, #128]
   3555c:	tbnz	w8, #4, 35690 <PyInit__decimal@@Base+0x2ebdc>
   35560:	b	356fc <PyInit__decimal@@Base+0x2ec48>
   35564:	cbz	x9, 35628 <PyInit__decimal@@Base+0x2eb74>
   35568:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   3556c:	add	x1, x1, #0xc88
   35570:	mov	x0, x24
   35574:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   35578:	ldrb	w8, [x19]
   3557c:	cmp	w0, #0x0
   35580:	cset	w20, ne  // ne = any
   35584:	tbnz	w8, #5, 355c8 <PyInit__decimal@@Base+0x2eb14>
   35588:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3558c:	ldr	x9, [x19, #32]
   35590:	ldr	x1, [x21, #1344]
   35594:	cmp	x9, x1
   35598:	b.le	355c8 <PyInit__decimal@@Base+0x2eb14>
   3559c:	sturb	wzr, [x29, #-64]
   355a0:	ldr	x0, [x19, #40]
   355a4:	sub	x3, x29, #0x40
   355a8:	mov	w2, #0x8                   	// #8
   355ac:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   355b0:	str	x0, [x19, #40]
   355b4:	ldurb	w8, [x29, #-64]
   355b8:	cbnz	w8, 355c4 <PyInit__decimal@@Base+0x2eb10>
   355bc:	ldr	x8, [x21, #1344]
   355c0:	str	x8, [x19, #32]
   355c4:	ldrb	w8, [x19]
   355c8:	ldr	x10, [x19, #40]
   355cc:	and	w8, w8, #0xf0
   355d0:	mov	w11, #0x1                   	// #1
   355d4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   355d8:	orr	w8, w8, w25
   355dc:	str	xzr, [x19, #8]
   355e0:	add	x9, x9, #0xca0
   355e4:	strb	w8, [x19]
   355e8:	stp	x20, xzr, [x10]
   355ec:	str	x11, [x19, #24]
   355f0:	ldr	x8, [x10]
   355f4:	ldr	x10, [x9, #72]
   355f8:	cmp	x10, x8
   355fc:	b.ls	357b4 <PyInit__decimal@@Base+0x2ed00>  // b.plast
   35600:	ldr	x10, [x9, #32]
   35604:	cmp	x10, x8
   35608:	b.ls	357dc <PyInit__decimal@@Base+0x2ed28>  // b.plast
   3560c:	ldr	x10, [x9, #16]
   35610:	cmp	x10, x8
   35614:	b.ls	357a4 <PyInit__decimal@@Base+0x2ecf0>  // b.plast
   35618:	ldr	x9, [x9, #8]
   3561c:	cmp	x9, x8
   35620:	mov	w8, #0x1                   	// #1
   35624:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   35628:	ldrb	w8, [x19]
   3562c:	tbnz	w8, #5, 35670 <PyInit__decimal@@Base+0x2ebbc>
   35630:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   35634:	ldr	x9, [x19, #32]
   35638:	ldr	x1, [x21, #1344]
   3563c:	cmp	x9, x1
   35640:	b.le	35670 <PyInit__decimal@@Base+0x2ebbc>
   35644:	sturb	wzr, [x29, #-64]
   35648:	ldr	x0, [x19, #40]
   3564c:	sub	x3, x29, #0x40
   35650:	mov	w2, #0x8                   	// #8
   35654:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   35658:	str	x0, [x19, #40]
   3565c:	ldurb	w8, [x29, #-64]
   35660:	cbnz	w8, 3566c <PyInit__decimal@@Base+0x2ebb8>
   35664:	ldr	x8, [x21, #1344]
   35668:	str	x8, [x19, #32]
   3566c:	ldrb	w8, [x19]
   35670:	and	w8, w8, #0xf0
   35674:	orr	w8, w8, #0x4
   35678:	stp	xzr, xzr, [x19, #16]
   3567c:	strb	w8, [x19]
   35680:	str	xzr, [x19, #8]
   35684:	ldr	w8, [x20]
   35688:	orr	w8, w8, #0x100
   3568c:	str	w8, [x20]
   35690:	add	sp, sp, #0x9b0
   35694:	ldp	x20, x19, [sp, #80]
   35698:	ldp	x22, x21, [sp, #64]
   3569c:	ldp	x24, x23, [sp, #48]
   356a0:	ldp	x26, x25, [sp, #32]
   356a4:	ldp	x28, x27, [sp, #16]
   356a8:	ldp	x29, x30, [sp], #96
   356ac:	ret
   356b0:	ldrb	w8, [sp, #1248]
   356b4:	cmp	w8, #0x1f
   356b8:	b.ls	35510 <PyInit__decimal@@Base+0x2ea5c>  // b.plast
   356bc:	tbnz	w8, #4, 35524 <PyInit__decimal@@Base+0x2ea70>
   356c0:	ldr	x8, [x19, #1376]
   356c4:	add	x0, sp, #0x4e0
   356c8:	blr	x8
   356cc:	ldrb	w8, [sp, #688]
   356d0:	cmp	w8, #0x1f
   356d4:	b.hi	35530 <PyInit__decimal@@Base+0x2ea7c>  // b.pmore
   356d8:	ldr	x8, [x19, #1376]
   356dc:	ldr	x0, [sp, #728]
   356e0:	blr	x8
   356e4:	ldrb	w8, [sp, #688]
   356e8:	tbz	w8, #4, 35534 <PyInit__decimal@@Base+0x2ea80>
   356ec:	ldrb	w8, [sp, #128]
   356f0:	cmp	w8, #0x1f
   356f4:	b.ls	3554c <PyInit__decimal@@Base+0x2ea98>  // b.plast
   356f8:	tbnz	w8, #4, 35690 <PyInit__decimal@@Base+0x2ebdc>
   356fc:	ldr	x8, [x19, #1376]
   35700:	add	x0, sp, #0x80
   35704:	blr	x8
   35708:	b	35690 <PyInit__decimal@@Base+0x2ebdc>
   3570c:	ldrb	w8, [x19]
   35710:	tbnz	w8, #5, 35754 <PyInit__decimal@@Base+0x2eca0>
   35714:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   35718:	ldr	x9, [x19, #32]
   3571c:	ldr	x1, [x20, #1344]
   35720:	cmp	x9, x1
   35724:	b.le	35754 <PyInit__decimal@@Base+0x2eca0>
   35728:	sturb	wzr, [x29, #-64]
   3572c:	ldr	x0, [x19, #40]
   35730:	sub	x3, x29, #0x40
   35734:	mov	w2, #0x8                   	// #8
   35738:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3573c:	str	x0, [x19, #40]
   35740:	ldurb	w8, [x29, #-64]
   35744:	cbnz	w8, 35750 <PyInit__decimal@@Base+0x2ec9c>
   35748:	ldr	x8, [x20, #1344]
   3574c:	str	x8, [x19, #32]
   35750:	ldrb	w8, [x19]
   35754:	ldr	x10, [x19, #40]
   35758:	and	w8, w8, #0xf0
   3575c:	mov	w11, #0x1                   	// #1
   35760:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   35764:	orr	w8, w8, w25
   35768:	str	xzr, [x19, #8]
   3576c:	add	x9, x9, #0xca0
   35770:	strb	w8, [x19]
   35774:	stp	xzr, xzr, [x10]
   35778:	str	x11, [x19, #24]
   3577c:	ldr	x8, [x10]
   35780:	ldr	x10, [x9, #72]
   35784:	cmp	x10, x8
   35788:	b.ls	35c04 <PyInit__decimal@@Base+0x2f150>  // b.plast
   3578c:	ldr	x10, [x9, #32]
   35790:	cmp	x10, x8
   35794:	b.ls	357dc <PyInit__decimal@@Base+0x2ed28>  // b.plast
   35798:	ldr	x10, [x9, #16]
   3579c:	cmp	x10, x8
   357a0:	b.hi	35618 <PyInit__decimal@@Base+0x2eb64>  // b.pmore
   357a4:	ldr	x9, [x9, #24]
   357a8:	cmp	x9, x8
   357ac:	mov	w8, #0x3                   	// #3
   357b0:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   357b4:	ldr	x10, [x9, #112]
   357b8:	cmp	x10, x8
   357bc:	b.ls	35c38 <PyInit__decimal@@Base+0x2f184>  // b.plast
   357c0:	ldr	x10, [x9, #88]
   357c4:	cmp	x10, x8
   357c8:	b.ls	35c1c <PyInit__decimal@@Base+0x2f168>  // b.plast
   357cc:	ldr	x9, [x9, #80]
   357d0:	cmp	x9, x8
   357d4:	mov	w8, #0xa                   	// #10
   357d8:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   357dc:	ldr	x10, [x9, #48]
   357e0:	cmp	x10, x8
   357e4:	b.ls	35c60 <PyInit__decimal@@Base+0x2f1ac>  // b.plast
   357e8:	ldr	x9, [x9, #40]
   357ec:	cmp	x9, x8
   357f0:	mov	w8, #0x5                   	// #5
   357f4:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   357f8:	ldrb	w8, [sp, #688]
   357fc:	add	x9, sp, #0x710
   35800:	add	x1, sp, #0x710
   35804:	sub	x3, x29, #0x70
   35808:	and	w8, w8, #0xfe
   3580c:	mov	w0, #0x1                   	// #1
   35810:	mov	x2, x21
   35814:	mov	x4, x20
   35818:	add	x24, x9, #0x8
   3581c:	stur	wzr, [x29, #-84]
   35820:	strb	w8, [sp, #688]
   35824:	bl	37f5c <PyInit__decimal@@Base+0x314a8>
   35828:	ldrb	w8, [sp, #1808]
   3582c:	ldr	x23, [sp, #1816]
   35830:	add	x1, sp, #0x4e0
   35834:	sub	x3, x29, #0x70
   35838:	and	w8, w8, #0xfe
   3583c:	mov	w0, #0x1                   	// #1
   35840:	mov	x2, x22
   35844:	mov	x4, x20
   35848:	strb	w8, [sp, #1808]
   3584c:	str	xzr, [sp, #1816]
   35850:	bl	37f5c <PyInit__decimal@@Base+0x314a8>
   35854:	ldr	x22, [sp, #1256]
   35858:	add	x0, sp, #0x710
   3585c:	add	x1, sp, #0x710
   35860:	add	x2, sp, #0x2b0
   35864:	sub	x3, x29, #0x70
   35868:	mov	x4, x20
   3586c:	str	xzr, [sp, #1256]
   35870:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   35874:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   35878:	add	x1, x1, #0xc88
   3587c:	mov	x0, x19
   35880:	mov	x2, x23
   35884:	mov	x3, x20
   35888:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   3588c:	add	x2, sp, #0x2b0
   35890:	sub	x3, x29, #0x70
   35894:	mov	x0, x19
   35898:	mov	x1, x19
   3589c:	mov	x4, x20
   358a0:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   358a4:	add	x0, sp, #0x710
   358a8:	add	x1, sp, #0x710
   358ac:	sub	x3, x29, #0x70
   358b0:	sub	x4, x29, #0x40
   358b4:	mov	x2, x19
   358b8:	stur	wzr, [x29, #-64]
   358bc:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   358c0:	add	x0, sp, #0x710
   358c4:	sub	x1, x29, #0x70
   358c8:	sub	x2, x29, #0x40
   358cc:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   358d0:	ldur	w9, [x29, #-64]
   358d4:	ldr	w8, [x20]
   358d8:	mov	w10, #0x1041                	// #4161
   358dc:	tst	w9, w10
   358e0:	orr	w8, w8, w9
   358e4:	str	w8, [x20]
   358e8:	b.eq	35954 <PyInit__decimal@@Base+0x2eea0>  // b.none
   358ec:	ldrb	w9, [sp, #1808]
   358f0:	tbnz	w9, #5, 35938 <PyInit__decimal@@Base+0x2ee84>
   358f4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   358f8:	ldr	x10, [sp, #1840]
   358fc:	ldr	x1, [x21, #1344]
   35900:	cmp	x10, x1
   35904:	b.le	35938 <PyInit__decimal@@Base+0x2ee84>
   35908:	ldr	x0, [sp, #1848]
   3590c:	add	x3, sp, #0x10
   35910:	mov	w2, #0x8                   	// #8
   35914:	strb	wzr, [sp, #16]
   35918:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3591c:	ldrb	w8, [sp, #16]
   35920:	str	x0, [sp, #1848]
   35924:	cbnz	w8, 35930 <PyInit__decimal@@Base+0x2ee7c>
   35928:	ldr	x8, [x21, #1344]
   3592c:	str	x8, [sp, #1840]
   35930:	ldrb	w9, [sp, #1808]
   35934:	ldr	w8, [x20]
   35938:	and	w9, w9, #0xf0
   3593c:	orr	w8, w8, #0x100
   35940:	orr	w9, w9, #0x4
   35944:	strb	w9, [sp, #1808]
   35948:	stp	xzr, xzr, [x24]
   3594c:	str	xzr, [x24, #16]
   35950:	str	w8, [x20]
   35954:	add	x0, sp, #0x710
   35958:	add	x1, sp, #0x710
   3595c:	add	x2, sp, #0x2b0
   35960:	sub	x3, x29, #0x70
   35964:	mov	x4, x20
   35968:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   3596c:	ldrb	w8, [sp, #1808]
   35970:	tst	w8, #0xe
   35974:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   35978:	ldrb	w9, [sp, #1248]
   3597c:	tst	w9, #0xe
   35980:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   35984:	ldrb	w9, [sp, #688]
   35988:	tst	w9, #0xe
   3598c:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   35990:	cmp	x22, #0x1
   35994:	b.lt	35cd8 <PyInit__decimal@@Base+0x2f224>  // b.tstop
   35998:	add	x8, sp, #0x80
   3599c:	mov	x23, xzr
   359a0:	adrp	x26, 59000 <PyInit__decimal@@Base+0x5254c>
   359a4:	add	x27, x8, #0x8
   359a8:	mov	w28, #0x1041                	// #4161
   359ac:	b	359ec <PyInit__decimal@@Base+0x2ef38>
   359b0:	ldr	q0, [sp, #1808]
   359b4:	ldr	q1, [sp, #1824]
   359b8:	ldp	q2, q3, [sp, #128]
   359bc:	add	x23, x23, #0x1
   359c0:	cmp	x23, x22
   359c4:	stp	q0, q1, [sp, #128]
   359c8:	ldr	q0, [sp, #160]
   359cc:	ldr	q1, [sp, #1840]
   359d0:	stp	q2, q3, [sp, #16]
   359d4:	str	q2, [sp, #1808]
   359d8:	str	q0, [sp, #48]
   359dc:	str	q1, [sp, #160]
   359e0:	str	q3, [sp, #1824]
   359e4:	str	q0, [sp, #1840]
   359e8:	b.eq	35cd4 <PyInit__decimal@@Base+0x2f220>  // b.none
   359ec:	sub	x0, x29, #0x40
   359f0:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   359f4:	ldr	x9, [x26, #1344]
   359f8:	ldr	x8, [sp, #160]
   359fc:	ldr	q0, [sp]
   35a00:	cmp	x9, #0x1
   35a04:	csinc	x1, x9, xzr, gt
   35a08:	cmp	x1, x8
   35a0c:	b.eq	35a44 <PyInit__decimal@@Base+0x2ef90>  // b.none
   35a10:	ldrb	w9, [sp, #128]
   35a14:	tbnz	w9, #5, 35a28 <PyInit__decimal@@Base+0x2ef74>
   35a18:	add	x0, sp, #0x80
   35a1c:	mov	x2, x20
   35a20:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   35a24:	b	35a3c <PyInit__decimal@@Base+0x2ef88>
   35a28:	cmp	x1, x8
   35a2c:	b.le	35a44 <PyInit__decimal@@Base+0x2ef90>
   35a30:	add	x0, sp, #0x80
   35a34:	mov	x2, x20
   35a38:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   35a3c:	ldr	q0, [sp]
   35a40:	cbz	w0, 35a6c <PyInit__decimal@@Base+0x2efb8>
   35a44:	ldrb	w8, [sp, #128]
   35a48:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   35a4c:	ldr	x9, [sp, #168]
   35a50:	ldr	x10, [x10, #1384]
   35a54:	mov	w11, #0x1                   	// #1
   35a58:	and	w8, w8, #0xf0
   35a5c:	stur	q0, [sp, #136]
   35a60:	str	x11, [sp, #152]
   35a64:	strb	w8, [sp, #128]
   35a68:	str	x10, [x9]
   35a6c:	mov	w21, #0xa                   	// #10
   35a70:	b	35ab8 <PyInit__decimal@@Base+0x2f004>
   35a74:	ldrb	w9, [sp, #1808]
   35a78:	ldr	w8, [x20]
   35a7c:	and	w9, w9, #0xf0
   35a80:	orr	w8, w8, #0x100
   35a84:	orr	w9, w9, #0x4
   35a88:	strb	w9, [sp, #1808]
   35a8c:	stp	xzr, xzr, [x24]
   35a90:	str	xzr, [x24, #16]
   35a94:	str	w8, [x20]
   35a98:	add	x0, sp, #0x710
   35a9c:	add	x1, sp, #0x710
   35aa0:	add	x2, sp, #0x2b0
   35aa4:	sub	x3, x29, #0x40
   35aa8:	mov	x4, x20
   35aac:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   35ab0:	lsr	x21, x21, #1
   35ab4:	cbz	x21, 359b0 <PyInit__decimal@@Base+0x2eefc>
   35ab8:	tbz	w21, #0, 35b7c <PyInit__decimal@@Base+0x2f0c8>
   35abc:	add	x0, sp, #0x80
   35ac0:	add	x1, sp, #0x80
   35ac4:	add	x2, sp, #0x710
   35ac8:	sub	x3, x29, #0x40
   35acc:	sub	x4, x29, #0x10
   35ad0:	stur	wzr, [x29, #-16]
   35ad4:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   35ad8:	add	x0, sp, #0x80
   35adc:	sub	x1, x29, #0x40
   35ae0:	sub	x2, x29, #0x10
   35ae4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   35ae8:	ldur	w9, [x29, #-16]
   35aec:	ldr	w8, [x20]
   35af0:	tst	w9, w28
   35af4:	orr	w8, w8, w9
   35af8:	str	w8, [x20]
   35afc:	b.eq	35b64 <PyInit__decimal@@Base+0x2f0b0>  // b.none
   35b00:	ldrb	w9, [sp, #128]
   35b04:	tbnz	w9, #5, 35b48 <PyInit__decimal@@Base+0x2f094>
   35b08:	ldr	x10, [sp, #160]
   35b0c:	ldr	x1, [x26, #1344]
   35b10:	cmp	x10, x1
   35b14:	b.le	35b48 <PyInit__decimal@@Base+0x2f094>
   35b18:	ldr	x0, [sp, #168]
   35b1c:	sub	x3, x29, #0xc
   35b20:	mov	w2, #0x8                   	// #8
   35b24:	sturb	wzr, [x29, #-12]
   35b28:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   35b2c:	ldurb	w8, [x29, #-12]
   35b30:	str	x0, [sp, #168]
   35b34:	cbnz	w8, 35b40 <PyInit__decimal@@Base+0x2f08c>
   35b38:	ldr	x8, [x26, #1344]
   35b3c:	str	x8, [sp, #160]
   35b40:	ldrb	w9, [sp, #128]
   35b44:	ldr	w8, [x20]
   35b48:	and	w9, w9, #0xf0
   35b4c:	orr	w8, w8, #0x100
   35b50:	orr	w9, w9, #0x4
   35b54:	strb	w9, [sp, #128]
   35b58:	stp	xzr, xzr, [x27]
   35b5c:	str	xzr, [x27, #16]
   35b60:	str	w8, [x20]
   35b64:	add	x0, sp, #0x80
   35b68:	add	x1, sp, #0x80
   35b6c:	add	x2, sp, #0x2b0
   35b70:	sub	x3, x29, #0x40
   35b74:	mov	x4, x20
   35b78:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   35b7c:	add	x0, sp, #0x710
   35b80:	add	x1, sp, #0x710
   35b84:	add	x2, sp, #0x710
   35b88:	sub	x3, x29, #0x40
   35b8c:	sub	x4, x29, #0x10
   35b90:	stur	wzr, [x29, #-16]
   35b94:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   35b98:	add	x0, sp, #0x710
   35b9c:	sub	x1, x29, #0x40
   35ba0:	sub	x2, x29, #0x10
   35ba4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   35ba8:	ldur	w9, [x29, #-16]
   35bac:	ldr	w8, [x20]
   35bb0:	tst	w9, w28
   35bb4:	orr	w8, w8, w9
   35bb8:	str	w8, [x20]
   35bbc:	b.eq	35a98 <PyInit__decimal@@Base+0x2efe4>  // b.none
   35bc0:	ldrb	w9, [sp, #1808]
   35bc4:	tbnz	w9, #5, 35a7c <PyInit__decimal@@Base+0x2efc8>
   35bc8:	ldr	x10, [sp, #1840]
   35bcc:	ldr	x1, [x26, #1344]
   35bd0:	cmp	x10, x1
   35bd4:	b.le	35a7c <PyInit__decimal@@Base+0x2efc8>
   35bd8:	ldr	x0, [sp, #1848]
   35bdc:	sub	x3, x29, #0xc
   35be0:	mov	w2, #0x8                   	// #8
   35be4:	sturb	wzr, [x29, #-12]
   35be8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   35bec:	ldurb	w8, [x29, #-12]
   35bf0:	str	x0, [sp, #1848]
   35bf4:	cbnz	w8, 35a74 <PyInit__decimal@@Base+0x2efc0>
   35bf8:	ldr	x8, [x26, #1344]
   35bfc:	str	x8, [sp, #1840]
   35c00:	b	35a74 <PyInit__decimal@@Base+0x2efc0>
   35c04:	ldr	x10, [x9, #112]
   35c08:	cmp	x10, x8
   35c0c:	b.ls	35c7c <PyInit__decimal@@Base+0x2f1c8>  // b.plast
   35c10:	ldr	x10, [x9, #88]
   35c14:	cmp	x10, x8
   35c18:	b.hi	357cc <PyInit__decimal@@Base+0x2ed18>  // b.pmore
   35c1c:	ldr	x10, [x9, #104]
   35c20:	cmp	x10, x8
   35c24:	b.ls	35cbc <PyInit__decimal@@Base+0x2f208>  // b.plast
   35c28:	ldr	x9, [x9, #96]
   35c2c:	cmp	x9, x8
   35c30:	mov	w8, #0xc                   	// #12
   35c34:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   35c38:	ldr	x10, [x9, #144]
   35c3c:	cmp	x10, x8
   35c40:	b.ls	35ca4 <PyInit__decimal@@Base+0x2f1f0>  // b.plast
   35c44:	ldr	x10, [x9, #128]
   35c48:	cmp	x10, x8
   35c4c:	b.ls	35c94 <PyInit__decimal@@Base+0x2f1e0>  // b.plast
   35c50:	ldr	x9, [x9, #120]
   35c54:	cmp	x9, x8
   35c58:	mov	w8, #0xf                   	// #15
   35c5c:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   35c60:	ldr	x10, [x9, #64]
   35c64:	cmp	x10, x8
   35c68:	b.ls	35cc8 <PyInit__decimal@@Base+0x2f214>  // b.plast
   35c6c:	ldr	x9, [x9, #56]
   35c70:	cmp	x9, x8
   35c74:	mov	w8, #0x7                   	// #7
   35c78:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   35c7c:	ldr	x10, [x9, #144]
   35c80:	cmp	x10, x8
   35c84:	b.ls	35ca4 <PyInit__decimal@@Base+0x2f1f0>  // b.plast
   35c88:	ldr	x10, [x9, #128]
   35c8c:	cmp	x10, x8
   35c90:	b.hi	35c50 <PyInit__decimal@@Base+0x2f19c>  // b.pmore
   35c94:	ldr	x9, [x9, #136]
   35c98:	cmp	x9, x8
   35c9c:	mov	w8, #0x11                  	// #17
   35ca0:	b	35cb0 <PyInit__decimal@@Base+0x2f1fc>
   35ca4:	ldr	x9, [x9, #152]
   35ca8:	cmp	x9, x8
   35cac:	mov	w8, #0x13                  	// #19
   35cb0:	cinc	x8, x8, ls  // ls = plast
   35cb4:	str	x8, [x19, #16]
   35cb8:	b	35690 <PyInit__decimal@@Base+0x2ebdc>
   35cbc:	mov	w8, #0xe                   	// #14
   35cc0:	str	x8, [x19, #16]
   35cc4:	b	35690 <PyInit__decimal@@Base+0x2ebdc>
   35cc8:	mov	w8, #0x9                   	// #9
   35ccc:	str	x8, [x19, #16]
   35cd0:	b	35690 <PyInit__decimal@@Base+0x2ebdc>
   35cd4:	ldrb	w8, [sp, #1808]
   35cd8:	tst	w8, #0xe
   35cdc:	adrp	x8, 56000 <PyInit__decimal@@Base+0x4f54c>
   35ce0:	add	x8, x8, #0xc88
   35ce4:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   35ce8:	cmp	x19, x8
   35cec:	b.eq	35d68 <PyInit__decimal@@Base+0x2f2b4>  // b.none
   35cf0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   35cf4:	ldr	x9, [x8, #1344]
   35cf8:	ldr	x8, [x19, #32]
   35cfc:	cmp	x9, #0x1
   35d00:	csinc	x1, x9, xzr, gt
   35d04:	cmp	x1, x8
   35d08:	b.eq	35d3c <PyInit__decimal@@Base+0x2f288>  // b.none
   35d0c:	ldrb	w9, [x19]
   35d10:	tbnz	w9, #5, 35d24 <PyInit__decimal@@Base+0x2f270>
   35d14:	mov	x0, x19
   35d18:	mov	x2, x20
   35d1c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   35d20:	b	35d38 <PyInit__decimal@@Base+0x2f284>
   35d24:	cmp	x1, x8
   35d28:	b.le	35d3c <PyInit__decimal@@Base+0x2f288>
   35d2c:	mov	x0, x19
   35d30:	mov	x2, x20
   35d34:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   35d38:	cbz	w0, 35d68 <PyInit__decimal@@Base+0x2f2b4>
   35d3c:	ldrb	w8, [x19]
   35d40:	ldr	q0, [sp]
   35d44:	mov	w9, #0x1                   	// #1
   35d48:	str	x9, [x19, #24]
   35d4c:	and	w8, w8, #0xf0
   35d50:	stur	q0, [x19, #8]
   35d54:	strb	w8, [x19]
   35d58:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   35d5c:	ldr	x10, [x19, #40]
   35d60:	ldr	x8, [x8, #1384]
   35d64:	str	x8, [x10]
   35d68:	ldrb	w8, [sp, #1248]
   35d6c:	tst	w8, #0xe
   35d70:	b.eq	35de4 <PyInit__decimal@@Base+0x2f330>  // b.none
   35d74:	ldrb	w8, [x19]
   35d78:	tbnz	w8, #5, 35dbc <PyInit__decimal@@Base+0x2f308>
   35d7c:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   35d80:	ldr	x9, [x19, #32]
   35d84:	ldr	x1, [x20, #1344]
   35d88:	cmp	x9, x1
   35d8c:	b.le	35dbc <PyInit__decimal@@Base+0x2f308>
   35d90:	sturb	wzr, [x29, #-64]
   35d94:	ldr	x0, [x19, #40]
   35d98:	sub	x3, x29, #0x40
   35d9c:	mov	w2, #0x8                   	// #8
   35da0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   35da4:	str	x0, [x19, #40]
   35da8:	ldurb	w8, [x29, #-64]
   35dac:	cbnz	w8, 35db8 <PyInit__decimal@@Base+0x2f304>
   35db0:	ldr	x8, [x20, #1344]
   35db4:	str	x8, [x19, #32]
   35db8:	ldrb	w8, [x19]
   35dbc:	and	w8, w8, #0xf0
   35dc0:	orr	w8, w8, #0x4
   35dc4:	stp	xzr, xzr, [x19, #16]
   35dc8:	strb	w8, [x19]
   35dcc:	str	xzr, [x19, #8]
   35dd0:	ldrb	w8, [sp, #1808]
   35dd4:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   35dd8:	cmp	w8, #0x1f
   35ddc:	b.hi	354f4 <PyInit__decimal@@Base+0x2ea40>  // b.pmore
   35de0:	b	354e4 <PyInit__decimal@@Base+0x2ea30>
   35de4:	mov	x22, #0x435f                	// #17247
   35de8:	movk	x22, #0xd79, lsl #16
   35dec:	movk	x22, #0x35e5, lsl #32
   35df0:	adrp	x26, 44000 <PyInit__decimal@@Base+0x3d54c>
   35df4:	add	x21, x19, #0x8
   35df8:	movk	x22, #0xd794, lsl #48
   35dfc:	mov	x23, #0xffffffffffffffed    	// #-19
   35e00:	add	x26, x26, #0xca0
   35e04:	mov	w27, #0x1041                	// #4161
   35e08:	adrp	x28, 59000 <PyInit__decimal@@Base+0x5254c>
   35e0c:	b	35e70 <PyInit__decimal@@Base+0x2f3bc>
   35e10:	ldrb	w9, [sp, #1808]
   35e14:	ldr	w8, [x20]
   35e18:	and	w9, w9, #0xf0
   35e1c:	orr	w8, w8, #0x100
   35e20:	orr	w9, w9, #0x4
   35e24:	strb	w9, [sp, #1808]
   35e28:	stp	xzr, xzr, [x24]
   35e2c:	str	xzr, [x24, #16]
   35e30:	str	w8, [x20]
   35e34:	add	x0, sp, #0x710
   35e38:	add	x1, sp, #0x710
   35e3c:	add	x2, sp, #0x2b0
   35e40:	sub	x3, x29, #0x70
   35e44:	mov	x4, x20
   35e48:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   35e4c:	add	x0, sp, #0x4e0
   35e50:	add	x1, sp, #0x4e0
   35e54:	add	x2, sp, #0x48
   35e58:	sub	x3, x29, #0x70
   35e5c:	mov	x4, x20
   35e60:	bl	2d0dc <PyInit__decimal@@Base+0x26628>
   35e64:	ldrb	w8, [sp, #1248]
   35e68:	tst	w8, #0xe
   35e6c:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   35e70:	ldr	x8, [sp, #1288]
   35e74:	ldr	x9, [sp, #1272]
   35e78:	add	x9, x8, x9, lsl #3
   35e7c:	ldur	x9, [x9, #-8]
   35e80:	cbz	x9, 36004 <PyInit__decimal@@Base+0x2f550>
   35e84:	ldr	x9, [sp, #1256]
   35e88:	tbnz	x9, #63, 35e98 <PyInit__decimal@@Base+0x2f3e4>
   35e8c:	cbnz	x9, 35f7c <PyInit__decimal@@Base+0x2f4c8>
   35e90:	ldr	x8, [x8]
   35e94:	b	35eb8 <PyInit__decimal@@Base+0x2f404>
   35e98:	neg	x10, x9
   35e9c:	umulh	x10, x10, x22
   35ea0:	neg	x9, x9
   35ea4:	lsr	x10, x10, #4
   35ea8:	madd	x9, x10, x23, x9
   35eac:	ldr	x8, [x8, x10, lsl #3]
   35eb0:	ldr	x9, [x26, x9, lsl #3]
   35eb4:	udiv	x8, x8, x9
   35eb8:	tbz	w8, #0, 35f7c <PyInit__decimal@@Base+0x2f4c8>
   35ebc:	add	x2, sp, #0x710
   35ec0:	sub	x3, x29, #0x70
   35ec4:	sub	x4, x29, #0x40
   35ec8:	mov	x0, x19
   35ecc:	mov	x1, x19
   35ed0:	stur	wzr, [x29, #-64]
   35ed4:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   35ed8:	sub	x1, x29, #0x70
   35edc:	sub	x2, x29, #0x40
   35ee0:	mov	x0, x19
   35ee4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   35ee8:	ldur	w8, [x29, #-64]
   35eec:	ldr	w9, [x20]
   35ef0:	tst	w8, w27
   35ef4:	orr	w9, w9, w8
   35ef8:	str	w9, [x20]
   35efc:	b.eq	35f64 <PyInit__decimal@@Base+0x2f4b0>  // b.none
   35f00:	ldrb	w8, [x19]
   35f04:	tbnz	w8, #5, 35f44 <PyInit__decimal@@Base+0x2f490>
   35f08:	ldr	x9, [x19, #32]
   35f0c:	ldr	x1, [x28, #1344]
   35f10:	cmp	x9, x1
   35f14:	b.le	35f44 <PyInit__decimal@@Base+0x2f490>
   35f18:	sturb	wzr, [x29, #-16]
   35f1c:	ldr	x0, [x19, #40]
   35f20:	sub	x3, x29, #0x10
   35f24:	mov	w2, #0x8                   	// #8
   35f28:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   35f2c:	str	x0, [x19, #40]
   35f30:	ldurb	w8, [x29, #-16]
   35f34:	cbnz	w8, 35f40 <PyInit__decimal@@Base+0x2f48c>
   35f38:	ldr	x8, [x28, #1344]
   35f3c:	str	x8, [x19, #32]
   35f40:	ldrb	w8, [x19]
   35f44:	and	w8, w8, #0xf0
   35f48:	orr	w8, w8, #0x4
   35f4c:	strb	w8, [x19]
   35f50:	stp	xzr, xzr, [x21]
   35f54:	str	xzr, [x21, #16]
   35f58:	ldr	w8, [x20]
   35f5c:	orr	w8, w8, #0x100
   35f60:	str	w8, [x20]
   35f64:	add	x2, sp, #0x2b0
   35f68:	sub	x3, x29, #0x70
   35f6c:	mov	x0, x19
   35f70:	mov	x1, x19
   35f74:	mov	x4, x20
   35f78:	bl	36138 <PyInit__decimal@@Base+0x2f684>
   35f7c:	add	x0, sp, #0x710
   35f80:	add	x1, sp, #0x710
   35f84:	add	x2, sp, #0x710
   35f88:	sub	x3, x29, #0x70
   35f8c:	sub	x4, x29, #0x40
   35f90:	stur	wzr, [x29, #-64]
   35f94:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   35f98:	add	x0, sp, #0x710
   35f9c:	sub	x1, x29, #0x70
   35fa0:	sub	x2, x29, #0x40
   35fa4:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   35fa8:	ldur	w9, [x29, #-64]
   35fac:	ldr	w8, [x20]
   35fb0:	tst	w9, w27
   35fb4:	orr	w8, w8, w9
   35fb8:	str	w8, [x20]
   35fbc:	b.eq	35e34 <PyInit__decimal@@Base+0x2f380>  // b.none
   35fc0:	ldrb	w9, [sp, #1808]
   35fc4:	tbnz	w9, #5, 35e18 <PyInit__decimal@@Base+0x2f364>
   35fc8:	ldr	x10, [sp, #1840]
   35fcc:	ldr	x1, [x28, #1344]
   35fd0:	cmp	x10, x1
   35fd4:	b.le	35e18 <PyInit__decimal@@Base+0x2f364>
   35fd8:	ldr	x0, [sp, #1848]
   35fdc:	sub	x3, x29, #0x10
   35fe0:	mov	w2, #0x8                   	// #8
   35fe4:	sturb	wzr, [x29, #-16]
   35fe8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   35fec:	ldurb	w8, [x29, #-16]
   35ff0:	str	x0, [sp, #1848]
   35ff4:	cbnz	w8, 35e10 <PyInit__decimal@@Base+0x2f35c>
   35ff8:	ldr	x8, [x28, #1344]
   35ffc:	str	x8, [sp, #1840]
   36000:	b	35e10 <PyInit__decimal@@Base+0x2f35c>
   36004:	ldrb	w8, [sp, #1808]
   36008:	tst	w8, #0xe
   3600c:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   36010:	ldrb	w8, [sp, #688]
   36014:	tst	w8, #0xe
   36018:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   3601c:	ldrb	w8, [x19]
   36020:	tst	w8, #0xe
   36024:	b.ne	35d74 <PyInit__decimal@@Base+0x2f2c0>  // b.any
   36028:	and	w8, w8, #0xfe
   3602c:	orr	w8, w8, w25
   36030:	strb	w8, [x19]
   36034:	ldrb	w8, [sp, #1808]
   36038:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   3603c:	cmp	w8, #0x1f
   36040:	b.ls	354e4 <PyInit__decimal@@Base+0x2ea30>  // b.plast
   36044:	b	354f4 <PyInit__decimal@@Base+0x2ea40>
   36048:	stp	x29, x30, [sp, #-48]!
   3604c:	str	x21, [sp, #16]
   36050:	stp	x20, x19, [sp, #32]
   36054:	mov	x29, sp
   36058:	mov	x8, #0xfffd                	// #65533
   3605c:	movk	x8, #0x4ec7, lsl #16
   36060:	mov	x9, #0xfffe                	// #65534
   36064:	movk	x8, #0x6d67, lsl #32
   36068:	movk	x9, #0xf62b, lsl #16
   3606c:	movk	x8, #0x1bc1, lsl #48
   36070:	movk	x9, #0x241a, lsl #32
   36074:	add	x8, x2, x8
   36078:	movk	x9, #0x29a2, lsl #48
   3607c:	mov	x19, x4
   36080:	cmp	x8, x9
   36084:	mov	x20, x0
   36088:	b.cc	36104 <PyInit__decimal@@Base+0x2f650>  // b.lo, b.ul, b.last
   3608c:	ldrb	w8, [x20]
   36090:	tbnz	w8, #5, 360d4 <PyInit__decimal@@Base+0x2f620>
   36094:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36098:	ldr	x9, [x20, #32]
   3609c:	ldr	x1, [x21, #1344]
   360a0:	cmp	x9, x1
   360a4:	b.le	360d4 <PyInit__decimal@@Base+0x2f620>
   360a8:	strb	wzr, [x29, #28]
   360ac:	ldr	x0, [x20, #40]
   360b0:	add	x3, x29, #0x1c
   360b4:	mov	w2, #0x8                   	// #8
   360b8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   360bc:	str	x0, [x20, #40]
   360c0:	ldrb	w8, [x29, #28]
   360c4:	cbnz	w8, 360d0 <PyInit__decimal@@Base+0x2f61c>
   360c8:	ldr	x8, [x21, #1344]
   360cc:	str	x8, [x20, #32]
   360d0:	ldrb	w8, [x20]
   360d4:	and	w8, w8, #0xf0
   360d8:	orr	w8, w8, #0x4
   360dc:	stp	xzr, xzr, [x20, #16]
   360e0:	strb	w8, [x20]
   360e4:	str	xzr, [x20, #8]
   360e8:	ldr	w8, [x19]
   360ec:	ldr	x21, [sp, #16]
   360f0:	orr	w8, w8, #0x100
   360f4:	str	w8, [x19]
   360f8:	ldp	x20, x19, [sp, #32]
   360fc:	ldp	x29, x30, [sp], #48
   36100:	ret
   36104:	mov	x0, x20
   36108:	mov	x4, x19
   3610c:	ldp	x20, x19, [sp, #32]
   36110:	ldr	x21, [sp, #16]
   36114:	ldp	x29, x30, [sp], #48
   36118:	b	37804 <PyInit__decimal@@Base+0x30d50>
   3611c:	mov	x8, x0
   36120:	mov	x4, x3
   36124:	mov	x3, x2
   36128:	mov	w0, #0x1                   	// #1
   3612c:	mov	x2, x1
   36130:	mov	x1, x8
   36134:	b	37f5c <PyInit__decimal@@Base+0x314a8>
   36138:	stp	x29, x30, [sp, #-64]!
   3613c:	stp	x28, x23, [sp, #16]
   36140:	stp	x22, x21, [sp, #32]
   36144:	stp	x20, x19, [sp, #48]
   36148:	mov	x29, sp
   3614c:	sub	sp, sp, #0x240
   36150:	mov	w8, #0x30                  	// #48
   36154:	strb	w8, [sp, #8]
   36158:	mov	w8, #0x40                  	// #64
   3615c:	stp	xzr, x8, [sp, #32]
   36160:	add	x8, sp, #0x38
   36164:	stp	xzr, xzr, [sp, #16]
   36168:	str	x8, [sp, #48]
   3616c:	ldrb	w8, [x1]
   36170:	mov	x19, x4
   36174:	mov	x21, x3
   36178:	mov	x23, x2
   3617c:	mov	x22, x1
   36180:	tst	w8, #0xe
   36184:	mov	x20, x0
   36188:	b.ne	36198 <PyInit__decimal@@Base+0x2f6e4>  // b.any
   3618c:	ldrb	w8, [x23]
   36190:	tst	w8, #0xe
   36194:	b.eq	36250 <PyInit__decimal@@Base+0x2f79c>  // b.none
   36198:	mov	x0, x20
   3619c:	mov	x1, x22
   361a0:	mov	x2, x23
   361a4:	mov	x3, x21
   361a8:	mov	x4, x19
   361ac:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   361b0:	cbnz	w0, 36354 <PyInit__decimal@@Base+0x2f8a0>
   361b4:	ldrb	w8, [x22]
   361b8:	tbnz	w8, #1, 36204 <PyInit__decimal@@Base+0x2f750>
   361bc:	ldrb	w9, [x23]
   361c0:	tbz	w9, #1, 363d4 <PyInit__decimal@@Base+0x2f920>
   361c4:	cmp	x20, x22
   361c8:	b.eq	36344 <PyInit__decimal@@Base+0x2f890>  // b.none
   361cc:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   361d0:	ldr	x9, [x22, #24]
   361d4:	ldr	x11, [x10, #1344]
   361d8:	ldr	x10, [x20, #32]
   361dc:	cmp	x11, x9
   361e0:	csel	x1, x9, x11, lt  // lt = tstop
   361e4:	cmp	x1, x10
   361e8:	b.eq	36318 <PyInit__decimal@@Base+0x2f864>  // b.none
   361ec:	ldrb	w11, [x20]
   361f0:	tbnz	w11, #5, 362f8 <PyInit__decimal@@Base+0x2f844>
   361f4:	mov	x0, x20
   361f8:	mov	x2, x19
   361fc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   36200:	b	3630c <PyInit__decimal@@Base+0x2f858>
   36204:	ldrb	w8, [x20]
   36208:	tbnz	w8, #5, 362d4 <PyInit__decimal@@Base+0x2f820>
   3620c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36210:	ldr	x9, [x20, #32]
   36214:	ldr	x1, [x21, #1344]
   36218:	cmp	x9, x1
   3621c:	b.le	362d4 <PyInit__decimal@@Base+0x2f820>
   36220:	sturb	wzr, [x29, #-4]
   36224:	ldr	x0, [x20, #40]
   36228:	sub	x3, x29, #0x4
   3622c:	mov	w2, #0x8                   	// #8
   36230:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36234:	str	x0, [x20, #40]
   36238:	ldurb	w8, [x29, #-4]
   3623c:	cbnz	w8, 36248 <PyInit__decimal@@Base+0x2f794>
   36240:	ldr	x8, [x21, #1344]
   36244:	str	x8, [x20, #32]
   36248:	ldrb	w8, [x20]
   3624c:	b	362d4 <PyInit__decimal@@Base+0x2f820>
   36250:	ldr	x8, [x23, #40]
   36254:	ldr	x9, [x23, #24]
   36258:	add	x8, x8, x9, lsl #3
   3625c:	ldur	x8, [x8, #-8]
   36260:	cbz	x8, 362b8 <PyInit__decimal@@Base+0x2f804>
   36264:	add	x0, sp, #0x8
   36268:	mov	x1, x20
   3626c:	mov	x2, x22
   36270:	mov	x3, x23
   36274:	mov	x4, x21
   36278:	mov	x5, x19
   3627c:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   36280:	ldrb	w8, [sp, #8]
   36284:	cmp	w8, #0x1f
   36288:	b.hi	362a0 <PyInit__decimal@@Base+0x2f7ec>  // b.pmore
   3628c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   36290:	ldr	x8, [x8, #1376]
   36294:	ldr	x0, [sp, #48]
   36298:	blr	x8
   3629c:	ldrb	w8, [sp, #8]
   362a0:	tbnz	w8, #4, 36344 <PyInit__decimal@@Base+0x2f890>
   362a4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   362a8:	ldr	x8, [x8, #1376]
   362ac:	add	x0, sp, #0x8
   362b0:	blr	x8
   362b4:	b	36344 <PyInit__decimal@@Base+0x2f890>
   362b8:	ldr	x8, [x22, #40]
   362bc:	ldr	x9, [x22, #24]
   362c0:	add	x8, x8, x9, lsl #3
   362c4:	ldur	x9, [x8, #-8]
   362c8:	ldrb	w8, [x20]
   362cc:	cbz	x9, 3636c <PyInit__decimal@@Base+0x2f8b8>
   362d0:	tbz	w8, #5, 3620c <PyInit__decimal@@Base+0x2f758>
   362d4:	and	w8, w8, #0xf0
   362d8:	orr	w8, w8, #0x4
   362dc:	stp	xzr, xzr, [x20, #16]
   362e0:	strb	w8, [x20]
   362e4:	str	xzr, [x20, #8]
   362e8:	ldr	w8, [x19]
   362ec:	orr	w8, w8, #0x100
   362f0:	str	w8, [x19]
   362f4:	b	36354 <PyInit__decimal@@Base+0x2f8a0>
   362f8:	cmp	x1, x10
   362fc:	b.le	36318 <PyInit__decimal@@Base+0x2f864>
   36300:	mov	x0, x20
   36304:	mov	x2, x19
   36308:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3630c:	cbz	w0, 36344 <PyInit__decimal@@Base+0x2f890>
   36310:	ldr	x9, [x22, #24]
   36314:	ldrb	w8, [x22]
   36318:	ldrb	w10, [x20]
   3631c:	ldr	x0, [x20, #40]
   36320:	bfxil	w10, w8, #0, #4
   36324:	strb	w10, [x20]
   36328:	ldur	q0, [x22, #8]
   3632c:	str	x9, [x20, #24]
   36330:	stur	q0, [x20, #8]
   36334:	ldr	x8, [x22, #24]
   36338:	ldr	x1, [x22, #40]
   3633c:	lsl	x2, x8, #3
   36340:	bl	63c0 <memcpy@plt>
   36344:	mov	x0, x20
   36348:	mov	x1, x21
   3634c:	mov	x2, x19
   36350:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   36354:	add	sp, sp, #0x240
   36358:	ldp	x20, x19, [sp, #48]
   3635c:	ldp	x22, x21, [sp, #32]
   36360:	ldp	x28, x23, [sp, #16]
   36364:	ldp	x29, x30, [sp], #64
   36368:	ret
   3636c:	tbnz	w8, #5, 363b0 <PyInit__decimal@@Base+0x2f8fc>
   36370:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36374:	ldr	x9, [x20, #32]
   36378:	ldr	x1, [x21, #1344]
   3637c:	cmp	x9, x1
   36380:	b.le	363b0 <PyInit__decimal@@Base+0x2f8fc>
   36384:	sturb	wzr, [x29, #-4]
   36388:	ldr	x0, [x20, #40]
   3638c:	sub	x3, x29, #0x4
   36390:	mov	w2, #0x8                   	// #8
   36394:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36398:	str	x0, [x20, #40]
   3639c:	ldurb	w8, [x29, #-4]
   363a0:	cbnz	w8, 363ac <PyInit__decimal@@Base+0x2f8f8>
   363a4:	ldr	x8, [x21, #1344]
   363a8:	str	x8, [x20, #32]
   363ac:	ldrb	w8, [x20]
   363b0:	and	w8, w8, #0xf0
   363b4:	orr	w8, w8, #0x4
   363b8:	stp	xzr, xzr, [x20, #16]
   363bc:	strb	w8, [x20]
   363c0:	str	xzr, [x20, #8]
   363c4:	ldr	w8, [x19]
   363c8:	orr	w8, w8, #0x10
   363cc:	str	w8, [x19]
   363d0:	b	36354 <PyInit__decimal@@Base+0x2f8a0>
   363d4:	bl	6700 <abort@plt>
   363d8:	sub	sp, sp, #0x60
   363dc:	stp	x29, x30, [sp, #32]
   363e0:	stp	x24, x23, [sp, #48]
   363e4:	stp	x22, x21, [sp, #64]
   363e8:	stp	x20, x19, [sp, #80]
   363ec:	add	x29, sp, #0x20
   363f0:	ldrb	w8, [x1]
   363f4:	mov	x20, x4
   363f8:	mov	x21, x3
   363fc:	mov	x23, x2
   36400:	mov	x22, x1
   36404:	tst	w8, #0xe
   36408:	mov	x19, x0
   3640c:	b.ne	3641c <PyInit__decimal@@Base+0x2f968>  // b.any
   36410:	ldrb	w9, [x23]
   36414:	tst	w9, #0xe
   36418:	b.eq	36494 <PyInit__decimal@@Base+0x2f9e0>  // b.none
   3641c:	mov	x0, x19
   36420:	mov	x1, x22
   36424:	mov	x2, x23
   36428:	mov	x3, x21
   3642c:	mov	x4, x20
   36430:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   36434:	cbnz	w0, 365c4 <PyInit__decimal@@Base+0x2fb10>
   36438:	ldrb	w8, [x22]
   3643c:	tbz	w8, #1, 36448 <PyInit__decimal@@Base+0x2f994>
   36440:	ldrb	w9, [x23]
   36444:	tbnz	w9, #1, 364fc <PyInit__decimal@@Base+0x2fa48>
   36448:	ldrb	w8, [x19]
   3644c:	tbnz	w8, #5, 365a4 <PyInit__decimal@@Base+0x2faf0>
   36450:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36454:	ldr	x9, [x19, #32]
   36458:	ldr	x1, [x21, #1344]
   3645c:	cmp	x9, x1
   36460:	b.le	365a4 <PyInit__decimal@@Base+0x2faf0>
   36464:	strb	wzr, [sp, #16]
   36468:	ldr	x0, [x19, #40]
   3646c:	add	x3, sp, #0x10
   36470:	mov	w2, #0x8                   	// #8
   36474:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36478:	str	x0, [x19, #40]
   3647c:	ldrb	w8, [sp, #16]
   36480:	cbnz	w8, 3648c <PyInit__decimal@@Base+0x2f9d8>
   36484:	ldr	x8, [x21, #1344]
   36488:	str	x8, [x19, #32]
   3648c:	ldrb	w8, [x19]
   36490:	b	365a4 <PyInit__decimal@@Base+0x2faf0>
   36494:	ldr	x24, [x23, #8]
   36498:	ldr	x9, [x21, #8]
   3649c:	cmp	x24, x9
   364a0:	b.gt	364bc <PyInit__decimal@@Base+0x2fa08>
   364a4:	ldr	x10, [x21, #16]
   364a8:	ldr	x9, [x21]
   364ac:	sub	x10, x10, x9
   364b0:	add	x10, x10, #0x1
   364b4:	cmp	x24, x10
   364b8:	b.ge	3653c <PyInit__decimal@@Base+0x2fa88>  // b.tcont
   364bc:	ldrb	w8, [x19]
   364c0:	tbnz	w8, #5, 365a4 <PyInit__decimal@@Base+0x2faf0>
   364c4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   364c8:	ldr	x9, [x19, #32]
   364cc:	ldr	x1, [x21, #1344]
   364d0:	cmp	x9, x1
   364d4:	b.le	365a4 <PyInit__decimal@@Base+0x2faf0>
   364d8:	sturb	wzr, [x29, #-12]
   364dc:	ldr	x0, [x19, #40]
   364e0:	sub	x3, x29, #0xc
   364e4:	mov	w2, #0x8                   	// #8
   364e8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   364ec:	str	x0, [x19, #40]
   364f0:	ldurb	w8, [x29, #-12]
   364f4:	cbnz	w8, 3648c <PyInit__decimal@@Base+0x2f9d8>
   364f8:	b	36484 <PyInit__decimal@@Base+0x2f9d0>
   364fc:	cmp	x19, x22
   36500:	b.eq	365c4 <PyInit__decimal@@Base+0x2fb10>  // b.none
   36504:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   36508:	ldr	x9, [x22, #24]
   3650c:	ldr	x11, [x10, #1344]
   36510:	ldr	x10, [x19, #32]
   36514:	cmp	x11, x9
   36518:	csel	x1, x9, x11, lt  // lt = tstop
   3651c:	cmp	x1, x10
   36520:	b.eq	366a8 <PyInit__decimal@@Base+0x2fbf4>  // b.none
   36524:	ldrb	w11, [x19]
   36528:	tbnz	w11, #5, 36688 <PyInit__decimal@@Base+0x2fbd4>
   3652c:	mov	x0, x19
   36530:	mov	x2, x20
   36534:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   36538:	b	3669c <PyInit__decimal@@Base+0x2fbe8>
   3653c:	ldr	x10, [x22, #40]
   36540:	ldr	x11, [x22, #24]
   36544:	add	x10, x10, x11, lsl #3
   36548:	ldur	x10, [x10, #-8]
   3654c:	cbz	x10, 365dc <PyInit__decimal@@Base+0x2fb28>
   36550:	ldp	x8, x10, [x22, #8]
   36554:	sub	x2, x8, x24
   36558:	add	x8, x10, x2
   3655c:	cmp	x8, x9
   36560:	b.le	366e8 <PyInit__decimal@@Base+0x2fc34>
   36564:	ldrb	w8, [x19]
   36568:	tbnz	w8, #5, 365a4 <PyInit__decimal@@Base+0x2faf0>
   3656c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36570:	ldr	x9, [x19, #32]
   36574:	ldr	x1, [x21, #1344]
   36578:	cmp	x9, x1
   3657c:	b.le	365a4 <PyInit__decimal@@Base+0x2faf0>
   36580:	sturb	wzr, [x29, #-4]
   36584:	ldr	x0, [x19, #40]
   36588:	sub	x3, x29, #0x4
   3658c:	mov	w2, #0x8                   	// #8
   36590:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36594:	str	x0, [x19, #40]
   36598:	ldurb	w8, [x29, #-4]
   3659c:	cbnz	w8, 3648c <PyInit__decimal@@Base+0x2f9d8>
   365a0:	b	36484 <PyInit__decimal@@Base+0x2f9d0>
   365a4:	and	w8, w8, #0xf0
   365a8:	orr	w8, w8, #0x4
   365ac:	stp	xzr, xzr, [x19, #16]
   365b0:	strb	w8, [x19]
   365b4:	str	xzr, [x19, #8]
   365b8:	ldr	w8, [x20]
   365bc:	orr	w8, w8, #0x100
   365c0:	str	w8, [x20]
   365c4:	ldp	x20, x19, [sp, #80]
   365c8:	ldp	x22, x21, [sp, #64]
   365cc:	ldp	x24, x23, [sp, #48]
   365d0:	ldp	x29, x30, [sp, #32]
   365d4:	add	sp, sp, #0x60
   365d8:	ret
   365dc:	ldrb	w9, [x19]
   365e0:	and	w22, w8, #0x1
   365e4:	tbnz	w9, #5, 36628 <PyInit__decimal@@Base+0x2fb74>
   365e8:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   365ec:	ldr	x8, [x19, #32]
   365f0:	ldr	x1, [x23, #1344]
   365f4:	cmp	x8, x1
   365f8:	b.le	36628 <PyInit__decimal@@Base+0x2fb74>
   365fc:	sturb	wzr, [x29, #-8]
   36600:	ldr	x0, [x19, #40]
   36604:	sub	x3, x29, #0x8
   36608:	mov	w2, #0x8                   	// #8
   3660c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36610:	str	x0, [x19, #40]
   36614:	ldurb	w8, [x29, #-8]
   36618:	cbnz	w8, 36624 <PyInit__decimal@@Base+0x2fb70>
   3661c:	ldr	x8, [x23, #1344]
   36620:	str	x8, [x19, #32]
   36624:	ldrb	w9, [x19]
   36628:	ldr	x10, [x19, #40]
   3662c:	and	w8, w9, #0xf0
   36630:	mov	w11, #0x1                   	// #1
   36634:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   36638:	orr	w8, w8, w22
   3663c:	str	x24, [x19, #8]
   36640:	add	x9, x9, #0xca0
   36644:	strb	w8, [x19]
   36648:	stp	xzr, xzr, [x10]
   3664c:	str	x11, [x19, #24]
   36650:	ldr	x8, [x10]
   36654:	ldr	x10, [x9, #72]
   36658:	cmp	x10, x8
   3665c:	b.ls	3670c <PyInit__decimal@@Base+0x2fc58>  // b.plast
   36660:	ldr	x10, [x9, #32]
   36664:	cmp	x10, x8
   36668:	b.ls	3678c <PyInit__decimal@@Base+0x2fcd8>  // b.plast
   3666c:	ldr	x10, [x9, #16]
   36670:	cmp	x10, x8
   36674:	b.ls	367d0 <PyInit__decimal@@Base+0x2fd1c>  // b.plast
   36678:	ldr	x9, [x9, #8]
   3667c:	cmp	x9, x8
   36680:	mov	w8, #0x1                   	// #1
   36684:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   36688:	cmp	x1, x10
   3668c:	b.le	366a8 <PyInit__decimal@@Base+0x2fbf4>
   36690:	mov	x0, x19
   36694:	mov	x2, x20
   36698:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3669c:	cbz	w0, 365c4 <PyInit__decimal@@Base+0x2fb10>
   366a0:	ldr	x9, [x22, #24]
   366a4:	ldrb	w8, [x22]
   366a8:	ldrb	w10, [x19]
   366ac:	ldr	x0, [x19, #40]
   366b0:	bfxil	w10, w8, #0, #4
   366b4:	strb	w10, [x19]
   366b8:	ldur	q0, [x22, #8]
   366bc:	str	x9, [x19, #24]
   366c0:	stur	q0, [x19, #8]
   366c4:	ldr	x8, [x22, #24]
   366c8:	ldr	x1, [x22, #40]
   366cc:	ldp	x20, x19, [sp, #80]
   366d0:	ldp	x22, x21, [sp, #64]
   366d4:	ldp	x24, x23, [sp, #48]
   366d8:	ldp	x29, x30, [sp, #32]
   366dc:	lsl	x2, x8, #3
   366e0:	add	sp, sp, #0x60
   366e4:	b	63c0 <memcpy@plt>
   366e8:	tbnz	x2, #63, 36734 <PyInit__decimal@@Base+0x2fc80>
   366ec:	mov	x0, x19
   366f0:	mov	x1, x22
   366f4:	mov	x3, x20
   366f8:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   366fc:	cbz	w0, 365c4 <PyInit__decimal@@Base+0x2fb10>
   36700:	mov	w8, wzr
   36704:	str	x24, [x19, #8]
   36708:	b	36b28 <PyInit__decimal@@Base+0x30074>
   3670c:	ldr	x10, [x9, #112]
   36710:	cmp	x10, x8
   36714:	b.ls	367a8 <PyInit__decimal@@Base+0x2fcf4>  // b.plast
   36718:	ldr	x10, [x9, #88]
   3671c:	cmp	x10, x8
   36720:	b.ls	367e0 <PyInit__decimal@@Base+0x2fd2c>  // b.plast
   36724:	ldr	x9, [x9, #80]
   36728:	cmp	x9, x8
   3672c:	mov	w8, #0xa                   	// #10
   36730:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   36734:	neg	x2, x2
   36738:	mov	x0, x19
   3673c:	mov	x1, x22
   36740:	mov	x3, x20
   36744:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   36748:	cmn	x0, #0x1
   3674c:	b.eq	365c4 <PyInit__decimal@@Base+0x2fb10>  // b.none
   36750:	mov	x23, x19
   36754:	str	x24, [x23, #8]!
   36758:	ldr	w8, [x21, #36]
   3675c:	mov	x22, x0
   36760:	cmp	w8, #0x7
   36764:	b.hi	36b18 <PyInit__decimal@@Base+0x30064>  // b.pmore
   36768:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   3676c:	add	x9, x9, #0x5a
   36770:	adr	x10, 36780 <PyInit__decimal@@Base+0x2fccc>
   36774:	ldrb	w11, [x9, x8]
   36778:	add	x10, x10, x11, lsl #2
   3677c:	br	x10
   36780:	cmp	x22, #0x0
   36784:	cset	w8, ne  // ne = any
   36788:	b	368f8 <PyInit__decimal@@Base+0x2fe44>
   3678c:	ldr	x10, [x9, #48]
   36790:	cmp	x10, x8
   36794:	b.ls	367fc <PyInit__decimal@@Base+0x2fd48>  // b.plast
   36798:	ldr	x9, [x9, #40]
   3679c:	cmp	x9, x8
   367a0:	mov	w8, #0x5                   	// #5
   367a4:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   367a8:	ldr	x10, [x9, #144]
   367ac:	cmp	x10, x8
   367b0:	b.ls	36818 <PyInit__decimal@@Base+0x2fd64>  // b.plast
   367b4:	ldr	x10, [x9, #128]
   367b8:	cmp	x10, x8
   367bc:	b.ls	36828 <PyInit__decimal@@Base+0x2fd74>  // b.plast
   367c0:	ldr	x9, [x9, #120]
   367c4:	cmp	x9, x8
   367c8:	mov	w8, #0xf                   	// #15
   367cc:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   367d0:	ldr	x9, [x9, #24]
   367d4:	cmp	x9, x8
   367d8:	mov	w8, #0x3                   	// #3
   367dc:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   367e0:	ldr	x10, [x9, #104]
   367e4:	cmp	x10, x8
   367e8:	b.ls	36850 <PyInit__decimal@@Base+0x2fd9c>  // b.plast
   367ec:	ldr	x9, [x9, #96]
   367f0:	cmp	x9, x8
   367f4:	mov	w8, #0xc                   	// #12
   367f8:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   367fc:	ldr	x10, [x9, #64]
   36800:	cmp	x10, x8
   36804:	b.ls	36858 <PyInit__decimal@@Base+0x2fda4>  // b.plast
   36808:	ldr	x9, [x9, #56]
   3680c:	cmp	x9, x8
   36810:	mov	w8, #0x7                   	// #7
   36814:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   36818:	ldr	x9, [x9, #152]
   3681c:	cmp	x9, x8
   36820:	mov	w8, #0x13                  	// #19
   36824:	b	36834 <PyInit__decimal@@Base+0x2fd80>
   36828:	ldr	x9, [x9, #136]
   3682c:	cmp	x9, x8
   36830:	mov	w8, #0x11                  	// #17
   36834:	cinc	x8, x8, ls  // ls = plast
   36838:	mov	x0, x19
   3683c:	mov	x1, x21
   36840:	mov	x2, x20
   36844:	str	x8, [x19, #16]
   36848:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3684c:	b	365c4 <PyInit__decimal@@Base+0x2fb10>
   36850:	mov	w8, #0xe                   	// #14
   36854:	b	36838 <PyInit__decimal@@Base+0x2fd84>
   36858:	mov	w8, #0x9                   	// #9
   3685c:	b	36838 <PyInit__decimal@@Base+0x2fd84>
   36860:	cbz	x22, 36b18 <PyInit__decimal@@Base+0x30064>
   36864:	ldrb	w8, [x19]
   36868:	mvn	w8, w8
   3686c:	and	w8, w8, #0x1
   36870:	b	368f8 <PyInit__decimal@@Base+0x2fe44>
   36874:	cbz	x22, 36b18 <PyInit__decimal@@Base+0x30064>
   36878:	ldrb	w8, [x19]
   3687c:	and	w8, w8, #0x1
   36880:	b	368f8 <PyInit__decimal@@Base+0x2fe44>
   36884:	cmp	x22, #0x4
   36888:	cset	w8, hi  // hi = pmore
   3688c:	b	368f8 <PyInit__decimal@@Base+0x2fe44>
   36890:	cmp	x22, #0x5
   36894:	cset	w8, hi  // hi = pmore
   36898:	b	368f8 <PyInit__decimal@@Base+0x2fe44>
   3689c:	cmp	x22, #0x5
   368a0:	b.hi	368fc <PyInit__decimal@@Base+0x2fe48>  // b.pmore
   368a4:	b.ne	36b18 <PyInit__decimal@@Base+0x30064>  // b.any
   368a8:	ldr	x8, [x19, #40]
   368ac:	ldr	w8, [x8]
   368b0:	and	w8, w8, #0x1
   368b4:	b	368f8 <PyInit__decimal@@Base+0x2fe44>
   368b8:	ldr	x8, [x19, #40]
   368bc:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   368c0:	movk	x9, #0xcccd
   368c4:	mov	w10, #0xa                   	// #10
   368c8:	ldr	x8, [x8]
   368cc:	cmp	x22, #0x0
   368d0:	cset	w11, ne  // ne = any
   368d4:	umulh	x9, x8, x9
   368d8:	lsr	x9, x9, #3
   368dc:	msub	w8, w9, w10, w8
   368e0:	cmp	w8, #0x0
   368e4:	cset	w9, eq  // eq = none
   368e8:	cmp	w8, #0x5
   368ec:	cset	w8, eq  // eq = none
   368f0:	orr	w8, w9, w8
   368f4:	and	w8, w11, w8
   368f8:	cbz	w8, 36b18 <PyInit__decimal@@Base+0x30064>
   368fc:	ldr	x0, [x19, #40]
   36900:	ldr	x1, [x19, #24]
   36904:	bl	1c45c <PyInit__decimal@@Base+0x159a8>
   36908:	cbz	x0, 36944 <PyInit__decimal@@Base+0x2fe90>
   3690c:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   36910:	ldr	x10, [x9, #1344]
   36914:	ldp	x8, x9, [x19, #24]
   36918:	add	x11, x8, #0x1
   3691c:	cmp	x10, x11
   36920:	csinc	x1, x10, x8, ge  // ge = tcont
   36924:	cmp	x1, x9
   36928:	b.eq	3696c <PyInit__decimal@@Base+0x2feb8>  // b.none
   3692c:	ldrb	w10, [x19]
   36930:	tbnz	w10, #5, 36950 <PyInit__decimal@@Base+0x2fe9c>
   36934:	mov	x0, x19
   36938:	mov	x2, x20
   3693c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   36940:	b	36964 <PyInit__decimal@@Base+0x2feb0>
   36944:	ldr	x0, [x19, #40]
   36948:	ldr	x8, [x19, #24]
   3694c:	b	36984 <PyInit__decimal@@Base+0x2fed0>
   36950:	cmp	x1, x9
   36954:	b.le	3696c <PyInit__decimal@@Base+0x2feb8>
   36958:	mov	x0, x19
   3695c:	mov	x2, x20
   36960:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   36964:	cbz	w0, 365c4 <PyInit__decimal@@Base+0x2fb10>
   36968:	ldr	x8, [x19, #24]
   3696c:	ldr	x0, [x19, #40]
   36970:	mov	w9, #0x1                   	// #1
   36974:	str	x9, [x0, x8, lsl #3]
   36978:	ldr	x8, [x19, #24]
   3697c:	add	x8, x8, #0x1
   36980:	str	x8, [x19, #24]
   36984:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   36988:	add	x9, x0, x8, lsl #3
   3698c:	add	x10, x10, #0xca0
   36990:	ldur	x9, [x9, #-8]
   36994:	ldr	x11, [x10, #72]
   36998:	cmp	x11, x9
   3699c:	b.ls	369c8 <PyInit__decimal@@Base+0x2ff14>  // b.plast
   369a0:	ldr	x11, [x10, #32]
   369a4:	cmp	x11, x9
   369a8:	b.ls	369f0 <PyInit__decimal@@Base+0x2ff3c>  // b.plast
   369ac:	ldr	x11, [x10, #16]
   369b0:	cmp	x11, x9
   369b4:	b.ls	36a34 <PyInit__decimal@@Base+0x2ff80>  // b.plast
   369b8:	ldr	x10, [x10, #8]
   369bc:	cmp	x10, x9
   369c0:	mov	w9, #0x1                   	// #1
   369c4:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   369c8:	ldr	x11, [x10, #112]
   369cc:	cmp	x11, x9
   369d0:	b.ls	36a0c <PyInit__decimal@@Base+0x2ff58>  // b.plast
   369d4:	ldr	x11, [x10, #88]
   369d8:	cmp	x11, x9
   369dc:	b.ls	36a44 <PyInit__decimal@@Base+0x2ff90>  // b.plast
   369e0:	ldr	x10, [x10, #80]
   369e4:	cmp	x10, x9
   369e8:	mov	w9, #0xa                   	// #10
   369ec:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   369f0:	ldr	x11, [x10, #48]
   369f4:	cmp	x11, x9
   369f8:	b.ls	36a60 <PyInit__decimal@@Base+0x2ffac>  // b.plast
   369fc:	ldr	x10, [x10, #40]
   36a00:	cmp	x10, x9
   36a04:	mov	w9, #0x5                   	// #5
   36a08:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   36a0c:	ldr	x11, [x10, #144]
   36a10:	cmp	x11, x9
   36a14:	b.ls	36a7c <PyInit__decimal@@Base+0x2ffc8>  // b.plast
   36a18:	ldr	x11, [x10, #128]
   36a1c:	cmp	x11, x9
   36a20:	b.ls	36a8c <PyInit__decimal@@Base+0x2ffd8>  // b.plast
   36a24:	ldr	x10, [x10, #120]
   36a28:	cmp	x10, x9
   36a2c:	mov	w9, #0xf                   	// #15
   36a30:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   36a34:	ldr	x10, [x10, #24]
   36a38:	cmp	x10, x9
   36a3c:	mov	w9, #0x3                   	// #3
   36a40:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   36a44:	ldr	x11, [x10, #104]
   36a48:	cmp	x11, x9
   36a4c:	b.ls	36bec <PyInit__decimal@@Base+0x30138>  // b.plast
   36a50:	ldr	x10, [x10, #96]
   36a54:	cmp	x10, x9
   36a58:	mov	w9, #0xc                   	// #12
   36a5c:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   36a60:	ldr	x11, [x10, #64]
   36a64:	cmp	x11, x9
   36a68:	b.ls	36bf4 <PyInit__decimal@@Base+0x30140>  // b.plast
   36a6c:	ldr	x10, [x10, #56]
   36a70:	cmp	x10, x9
   36a74:	mov	w9, #0x7                   	// #7
   36a78:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   36a7c:	ldr	x10, [x10, #152]
   36a80:	cmp	x10, x9
   36a84:	mov	w9, #0x13                  	// #19
   36a88:	b	36a98 <PyInit__decimal@@Base+0x2ffe4>
   36a8c:	ldr	x10, [x10, #136]
   36a90:	cmp	x10, x9
   36a94:	mov	w9, #0x11                  	// #17
   36a98:	cinc	x9, x9, ls  // ls = plast
   36a9c:	mov	w10, #0x13                  	// #19
   36aa0:	madd	x8, x8, x10, x9
   36aa4:	sub	x8, x8, #0x13
   36aa8:	str	x8, [x19, #16]
   36aac:	ldr	x9, [x21]
   36ab0:	cmp	x8, x9
   36ab4:	b.le	36b14 <PyInit__decimal@@Base+0x30060>
   36ab8:	ldrb	w8, [x19]
   36abc:	tbnz	w8, #5, 36afc <PyInit__decimal@@Base+0x30048>
   36ac0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36ac4:	ldr	x9, [x19, #32]
   36ac8:	ldr	x1, [x21, #1344]
   36acc:	cmp	x9, x1
   36ad0:	b.le	36afc <PyInit__decimal@@Base+0x30048>
   36ad4:	add	x3, sp, #0xc
   36ad8:	mov	w2, #0x8                   	// #8
   36adc:	strb	wzr, [sp, #12]
   36ae0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36ae4:	str	x0, [x19, #40]
   36ae8:	ldrb	w8, [sp, #12]
   36aec:	cbnz	w8, 36af8 <PyInit__decimal@@Base+0x30044>
   36af0:	ldr	x8, [x21, #1344]
   36af4:	str	x8, [x19, #32]
   36af8:	ldrb	w8, [x19]
   36afc:	and	w8, w8, #0xf0
   36b00:	orr	w8, w8, #0x4
   36b04:	strb	w8, [x19]
   36b08:	stp	xzr, xzr, [x23]
   36b0c:	str	xzr, [x23, #16]
   36b10:	b	365b8 <PyInit__decimal@@Base+0x2fb04>
   36b14:	ldr	x24, [x23]
   36b18:	cmp	x22, #0x0
   36b1c:	mov	w8, #0x1040                	// #4160
   36b20:	mov	w9, #0x1000                	// #4096
   36b24:	csel	w8, w9, w8, eq  // eq = none
   36b28:	ldr	x9, [x19, #16]
   36b2c:	ldr	x10, [x21, #8]
   36b30:	add	x9, x24, x9
   36b34:	sub	x9, x9, #0x1
   36b38:	cmp	x9, x10
   36b3c:	b.gt	36b58 <PyInit__decimal@@Base+0x300a4>
   36b40:	ldr	x10, [x21, #16]
   36b44:	ldr	x11, [x21]
   36b48:	sub	x10, x10, x11
   36b4c:	add	x10, x10, #0x1
   36b50:	cmp	x9, x10
   36b54:	b.ge	36bbc <PyInit__decimal@@Base+0x30108>  // b.tcont
   36b58:	ldrb	w8, [x19]
   36b5c:	add	x21, x19, #0x8
   36b60:	tbnz	w8, #5, 36ba4 <PyInit__decimal@@Base+0x300f0>
   36b64:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   36b68:	ldr	x9, [x19, #32]
   36b6c:	ldr	x1, [x22, #1344]
   36b70:	cmp	x9, x1
   36b74:	b.le	36ba4 <PyInit__decimal@@Base+0x300f0>
   36b78:	strb	wzr, [sp, #8]
   36b7c:	ldr	x0, [x19, #40]
   36b80:	add	x3, sp, #0x8
   36b84:	mov	w2, #0x8                   	// #8
   36b88:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36b8c:	str	x0, [x19, #40]
   36b90:	ldrb	w8, [sp, #8]
   36b94:	cbnz	w8, 36ba0 <PyInit__decimal@@Base+0x300ec>
   36b98:	ldr	x8, [x22, #1344]
   36b9c:	str	x8, [x19, #32]
   36ba0:	ldrb	w8, [x19]
   36ba4:	and	w8, w8, #0xf0
   36ba8:	orr	w8, w8, #0x4
   36bac:	strb	w8, [x19]
   36bb0:	stp	xzr, xzr, [x21]
   36bb4:	str	xzr, [x21, #16]
   36bb8:	b	365b8 <PyInit__decimal@@Base+0x2fb04>
   36bbc:	ldr	w9, [x20]
   36bc0:	mov	x0, x19
   36bc4:	mov	x1, x21
   36bc8:	mov	x2, x20
   36bcc:	orr	w8, w9, w8
   36bd0:	str	w8, [x20]
   36bd4:	ldp	x20, x19, [sp, #80]
   36bd8:	ldp	x22, x21, [sp, #64]
   36bdc:	ldp	x24, x23, [sp, #48]
   36be0:	ldp	x29, x30, [sp, #32]
   36be4:	add	sp, sp, #0x60
   36be8:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   36bec:	mov	w9, #0xe                   	// #14
   36bf0:	b	36a9c <PyInit__decimal@@Base+0x2ffe8>
   36bf4:	mov	w9, #0x9                   	// #9
   36bf8:	b	36a9c <PyInit__decimal@@Base+0x2ffe8>
   36bfc:	stp	x29, x30, [sp, #-64]!
   36c00:	str	x23, [sp, #16]
   36c04:	stp	x22, x21, [sp, #32]
   36c08:	stp	x20, x19, [sp, #48]
   36c0c:	mov	x29, sp
   36c10:	ldrb	w23, [x1]
   36c14:	mov	x22, x3
   36c18:	mov	x20, x2
   36c1c:	mov	x21, x1
   36c20:	tst	w23, #0xe
   36c24:	mov	x19, x0
   36c28:	b.eq	36c88 <PyInit__decimal@@Base+0x301d4>  // b.none
   36c2c:	mov	x0, x19
   36c30:	mov	x1, x21
   36c34:	mov	x2, x20
   36c38:	mov	x3, x22
   36c3c:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   36c40:	cmp	x19, x21
   36c44:	b.eq	36fe0 <PyInit__decimal@@Base+0x3052c>  // b.none
   36c48:	cbnz	w0, 36fe0 <PyInit__decimal@@Base+0x3052c>
   36c4c:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   36c50:	ldr	x8, [x21, #24]
   36c54:	ldr	x10, [x9, #1344]
   36c58:	ldr	x9, [x19, #32]
   36c5c:	cmp	x10, x8
   36c60:	csel	x1, x8, x10, lt  // lt = tstop
   36c64:	cmp	x1, x9
   36c68:	b.eq	36cf0 <PyInit__decimal@@Base+0x3023c>  // b.none
   36c6c:	ldrb	w10, [x19]
   36c70:	tbnz	w10, #5, 36cd4 <PyInit__decimal@@Base+0x30220>
   36c74:	mov	x0, x19
   36c78:	mov	x2, x22
   36c7c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   36c80:	cbnz	w0, 36cec <PyInit__decimal@@Base+0x30238>
   36c84:	b	36fe0 <PyInit__decimal@@Base+0x3052c>
   36c88:	cmp	x19, x21
   36c8c:	b.eq	36d80 <PyInit__decimal@@Base+0x302cc>  // b.none
   36c90:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   36c94:	ldr	x8, [x21, #24]
   36c98:	ldr	x10, [x9, #1344]
   36c9c:	ldr	x9, [x19, #32]
   36ca0:	cmp	x10, x8
   36ca4:	csel	x1, x8, x10, lt  // lt = tstop
   36ca8:	cmp	x1, x9
   36cac:	b.ne	36cb8 <PyInit__decimal@@Base+0x30204>  // b.any
   36cb0:	mov	w9, w23
   36cb4:	b	36d54 <PyInit__decimal@@Base+0x302a0>
   36cb8:	ldrb	w10, [x19]
   36cbc:	tbnz	w10, #5, 36d30 <PyInit__decimal@@Base+0x3027c>
   36cc0:	mov	x0, x19
   36cc4:	mov	x2, x22
   36cc8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   36ccc:	cbnz	w0, 36d4c <PyInit__decimal@@Base+0x30298>
   36cd0:	b	36fe0 <PyInit__decimal@@Base+0x3052c>
   36cd4:	cmp	x1, x9
   36cd8:	b.le	36cf0 <PyInit__decimal@@Base+0x3023c>
   36cdc:	mov	x0, x19
   36ce0:	mov	x2, x22
   36ce4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   36ce8:	cbz	w0, 36fe0 <PyInit__decimal@@Base+0x3052c>
   36cec:	ldr	x8, [x21, #24]
   36cf0:	ldrb	w9, [x21]
   36cf4:	ldrb	w10, [x19]
   36cf8:	ldr	x0, [x19, #40]
   36cfc:	ldr	x23, [sp, #16]
   36d00:	bfxil	w10, w9, #0, #4
   36d04:	strb	w10, [x19]
   36d08:	ldur	q0, [x21, #8]
   36d0c:	str	x8, [x19, #24]
   36d10:	stur	q0, [x19, #8]
   36d14:	ldr	x8, [x21, #24]
   36d18:	ldr	x1, [x21, #40]
   36d1c:	ldp	x20, x19, [sp, #48]
   36d20:	ldp	x22, x21, [sp, #32]
   36d24:	lsl	x2, x8, #3
   36d28:	ldp	x29, x30, [sp], #64
   36d2c:	b	63c0 <memcpy@plt>
   36d30:	cmp	x1, x9
   36d34:	mov	w9, w23
   36d38:	b.le	36d54 <PyInit__decimal@@Base+0x302a0>
   36d3c:	mov	x0, x19
   36d40:	mov	x2, x22
   36d44:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   36d48:	cbz	w0, 36fe0 <PyInit__decimal@@Base+0x3052c>
   36d4c:	ldr	x8, [x21, #24]
   36d50:	ldrb	w9, [x21]
   36d54:	ldrb	w10, [x19]
   36d58:	ldr	x0, [x19, #40]
   36d5c:	bfxil	w10, w9, #0, #4
   36d60:	strb	w10, [x19]
   36d64:	ldur	q0, [x21, #8]
   36d68:	str	x8, [x19, #24]
   36d6c:	stur	q0, [x19, #8]
   36d70:	ldr	x8, [x21, #24]
   36d74:	ldr	x1, [x21, #40]
   36d78:	lsl	x2, x8, #3
   36d7c:	bl	63c0 <memcpy@plt>
   36d80:	mov	x0, x19
   36d84:	mov	x1, x20
   36d88:	mov	x2, x22
   36d8c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   36d90:	ldrb	w8, [x19]
   36d94:	tst	w8, #0xe
   36d98:	b.ne	36fe0 <PyInit__decimal@@Base+0x3052c>  // b.any
   36d9c:	ldr	x0, [x19, #40]
   36da0:	ldr	x9, [x19, #24]
   36da4:	add	x10, x0, x9, lsl #3
   36da8:	ldur	x10, [x10, #-8]
   36dac:	cbz	x10, 36ddc <PyInit__decimal@@Base+0x30328>
   36db0:	cmp	x9, #0x1
   36db4:	b.lt	36dd4 <PyInit__decimal@@Base+0x30320>  // b.tstop
   36db8:	mov	x8, xzr
   36dbc:	ldr	x10, [x0]
   36dc0:	cbnz	x10, 36e7c <PyInit__decimal@@Base+0x303c8>
   36dc4:	add	x8, x8, #0x13
   36dc8:	subs	x9, x9, #0x1
   36dcc:	add	x0, x0, #0x8
   36dd0:	b.ne	36dbc <PyInit__decimal@@Base+0x30308>  // b.any
   36dd4:	mov	x8, xzr
   36dd8:	b	36ec4 <PyInit__decimal@@Base+0x30410>
   36ddc:	and	w20, w23, #0x1
   36de0:	tbnz	w8, #5, 36e20 <PyInit__decimal@@Base+0x3036c>
   36de4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   36de8:	ldr	x9, [x19, #32]
   36dec:	ldr	x1, [x21, #1344]
   36df0:	cmp	x9, x1
   36df4:	b.le	36e20 <PyInit__decimal@@Base+0x3036c>
   36df8:	add	x3, x29, #0x1c
   36dfc:	mov	w2, #0x8                   	// #8
   36e00:	strb	wzr, [x29, #28]
   36e04:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   36e08:	str	x0, [x19, #40]
   36e0c:	ldrb	w8, [x29, #28]
   36e10:	cbnz	w8, 36e1c <PyInit__decimal@@Base+0x30368>
   36e14:	ldr	x8, [x21, #1344]
   36e18:	str	x8, [x19, #32]
   36e1c:	ldrb	w8, [x19]
   36e20:	and	w8, w8, #0xf0
   36e24:	mov	w10, #0x1                   	// #1
   36e28:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   36e2c:	orr	w8, w8, w20
   36e30:	str	xzr, [x19, #8]
   36e34:	add	x9, x9, #0xca0
   36e38:	strb	w8, [x19]
   36e3c:	stp	xzr, xzr, [x0]
   36e40:	str	x10, [x19, #24]
   36e44:	ldr	x8, [x0]
   36e48:	ldr	x10, [x9, #72]
   36e4c:	cmp	x10, x8
   36e50:	b.ls	36f08 <PyInit__decimal@@Base+0x30454>  // b.plast
   36e54:	ldr	x10, [x9, #32]
   36e58:	cmp	x10, x8
   36e5c:	b.ls	36f30 <PyInit__decimal@@Base+0x3047c>  // b.plast
   36e60:	ldr	x10, [x9, #16]
   36e64:	cmp	x10, x8
   36e68:	b.ls	36f74 <PyInit__decimal@@Base+0x304c0>  // b.plast
   36e6c:	ldr	x9, [x9, #8]
   36e70:	cmp	x9, x8
   36e74:	mov	w8, #0x1                   	// #1
   36e78:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36e7c:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   36e80:	movk	x9, #0xcccd
   36e84:	mul	x11, x10, x9
   36e88:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   36e8c:	ror	x11, x11, #1
   36e90:	movk	x12, #0x1999, lsl #48
   36e94:	cmp	x11, x12
   36e98:	b.hi	36ec4 <PyInit__decimal@@Base+0x30410>  // b.pmore
   36e9c:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   36ea0:	movk	x11, #0x999a
   36ea4:	movk	x11, #0x1999, lsl #48
   36ea8:	umulh	x10, x10, x9
   36eac:	lsr	x10, x10, #3
   36eb0:	mul	x12, x10, x9
   36eb4:	ror	x12, x12, #1
   36eb8:	cmp	x12, x11
   36ebc:	add	x8, x8, #0x1
   36ec0:	b.cc	36ea8 <PyInit__decimal@@Base+0x303f4>  // b.lo, b.ul, b.last
   36ec4:	ldr	w10, [x20, #40]
   36ec8:	ldr	x9, [x20, #8]
   36ecc:	cbz	w10, 36edc <PyInit__decimal@@Base+0x30428>
   36ed0:	ldr	x10, [x20]
   36ed4:	sub	x9, x9, x10
   36ed8:	add	x9, x9, #0x1
   36edc:	ldr	x10, [x19, #8]
   36ee0:	mov	x0, x19
   36ee4:	sub	x9, x9, x10
   36ee8:	cmp	x8, x9
   36eec:	csel	x20, x9, x8, gt
   36ef0:	mov	x1, x20
   36ef4:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   36ef8:	ldr	x8, [x19, #8]
   36efc:	add	x8, x20, x8
   36f00:	str	x8, [x19, #8]
   36f04:	b	36fe0 <PyInit__decimal@@Base+0x3052c>
   36f08:	ldr	x10, [x9, #112]
   36f0c:	cmp	x10, x8
   36f10:	b.ls	36f4c <PyInit__decimal@@Base+0x30498>  // b.plast
   36f14:	ldr	x10, [x9, #88]
   36f18:	cmp	x10, x8
   36f1c:	b.ls	36f84 <PyInit__decimal@@Base+0x304d0>  // b.plast
   36f20:	ldr	x9, [x9, #80]
   36f24:	cmp	x9, x8
   36f28:	mov	w8, #0xa                   	// #10
   36f2c:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36f30:	ldr	x10, [x9, #48]
   36f34:	cmp	x10, x8
   36f38:	b.ls	36fa0 <PyInit__decimal@@Base+0x304ec>  // b.plast
   36f3c:	ldr	x9, [x9, #40]
   36f40:	cmp	x9, x8
   36f44:	mov	w8, #0x5                   	// #5
   36f48:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36f4c:	ldr	x10, [x9, #144]
   36f50:	cmp	x10, x8
   36f54:	b.ls	36fbc <PyInit__decimal@@Base+0x30508>  // b.plast
   36f58:	ldr	x10, [x9, #128]
   36f5c:	cmp	x10, x8
   36f60:	b.ls	36fcc <PyInit__decimal@@Base+0x30518>  // b.plast
   36f64:	ldr	x9, [x9, #120]
   36f68:	cmp	x9, x8
   36f6c:	mov	w8, #0xf                   	// #15
   36f70:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36f74:	ldr	x9, [x9, #24]
   36f78:	cmp	x9, x8
   36f7c:	mov	w8, #0x3                   	// #3
   36f80:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36f84:	ldr	x10, [x9, #104]
   36f88:	cmp	x10, x8
   36f8c:	b.ls	36ff4 <PyInit__decimal@@Base+0x30540>  // b.plast
   36f90:	ldr	x9, [x9, #96]
   36f94:	cmp	x9, x8
   36f98:	mov	w8, #0xc                   	// #12
   36f9c:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36fa0:	ldr	x10, [x9, #64]
   36fa4:	cmp	x10, x8
   36fa8:	b.ls	36ffc <PyInit__decimal@@Base+0x30548>  // b.plast
   36fac:	ldr	x9, [x9, #56]
   36fb0:	cmp	x9, x8
   36fb4:	mov	w8, #0x7                   	// #7
   36fb8:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36fbc:	ldr	x9, [x9, #152]
   36fc0:	cmp	x9, x8
   36fc4:	mov	w8, #0x13                  	// #19
   36fc8:	b	36fd8 <PyInit__decimal@@Base+0x30524>
   36fcc:	ldr	x9, [x9, #136]
   36fd0:	cmp	x9, x8
   36fd4:	mov	w8, #0x11                  	// #17
   36fd8:	cinc	x8, x8, ls  // ls = plast
   36fdc:	str	x8, [x19, #16]
   36fe0:	ldp	x20, x19, [sp, #48]
   36fe4:	ldp	x22, x21, [sp, #32]
   36fe8:	ldr	x23, [sp, #16]
   36fec:	ldp	x29, x30, [sp], #64
   36ff0:	ret
   36ff4:	mov	w8, #0xe                   	// #14
   36ff8:	b	36fdc <PyInit__decimal@@Base+0x30528>
   36ffc:	mov	w8, #0x9                   	// #9
   37000:	b	36fdc <PyInit__decimal@@Base+0x30528>
   37004:	stp	x29, x30, [sp, #-96]!
   37008:	stp	x28, x27, [sp, #16]
   3700c:	stp	x26, x25, [sp, #32]
   37010:	stp	x24, x23, [sp, #48]
   37014:	stp	x22, x21, [sp, #64]
   37018:	stp	x20, x19, [sp, #80]
   3701c:	mov	x29, sp
   37020:	sub	sp, sp, #0x4a0
   37024:	add	x10, sp, #0x260
   37028:	mov	w8, #0x30                  	// #48
   3702c:	mov	w9, #0x40                  	// #64
   37030:	str	x10, [sp, #600]
   37034:	add	x10, sp, #0x30
   37038:	str	xzr, [sp, #568]
   3703c:	str	xzr, [sp, #576]
   37040:	stp	xzr, xzr, [sp, #8]
   37044:	strb	w8, [sp, #560]
   37048:	str	xzr, [sp, #584]
   3704c:	str	x9, [sp, #592]
   37050:	strb	w8, [sp]
   37054:	stp	xzr, x9, [sp, #24]
   37058:	str	x10, [sp, #40]
   3705c:	ldrb	w8, [x1]
   37060:	mov	x19, x4
   37064:	mov	x21, x3
   37068:	mov	x23, x2
   3706c:	mov	x22, x1
   37070:	tst	w8, #0xe
   37074:	mov	x20, x0
   37078:	b.ne	37088 <PyInit__decimal@@Base+0x305d4>  // b.any
   3707c:	ldrb	w10, [x23]
   37080:	tst	w10, #0xe
   37084:	b.eq	37140 <PyInit__decimal@@Base+0x3068c>  // b.none
   37088:	mov	x0, x20
   3708c:	mov	x1, x22
   37090:	mov	x2, x23
   37094:	mov	x3, x21
   37098:	mov	x4, x19
   3709c:	bl	247f8 <PyInit__decimal@@Base+0x1dd44>
   370a0:	cbnz	w0, 37324 <PyInit__decimal@@Base+0x30870>
   370a4:	ldrb	w8, [x22]
   370a8:	tbnz	w8, #1, 370f4 <PyInit__decimal@@Base+0x30640>
   370ac:	ldrb	w9, [x23]
   370b0:	tbz	w9, #1, 37800 <PyInit__decimal@@Base+0x30d4c>
   370b4:	cmp	x20, x22
   370b8:	b.eq	37314 <PyInit__decimal@@Base+0x30860>  // b.none
   370bc:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   370c0:	ldr	x9, [x22, #24]
   370c4:	ldr	x11, [x10, #1344]
   370c8:	ldr	x10, [x20, #32]
   370cc:	cmp	x11, x9
   370d0:	csel	x1, x9, x11, lt  // lt = tstop
   370d4:	cmp	x1, x10
   370d8:	b.eq	37210 <PyInit__decimal@@Base+0x3075c>  // b.none
   370dc:	ldrb	w11, [x20]
   370e0:	tbnz	w11, #5, 371f0 <PyInit__decimal@@Base+0x3073c>
   370e4:	mov	x0, x20
   370e8:	mov	x2, x19
   370ec:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   370f0:	b	37204 <PyInit__decimal@@Base+0x30750>
   370f4:	ldrb	w8, [x20]
   370f8:	tbnz	w8, #5, 371cc <PyInit__decimal@@Base+0x30718>
   370fc:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   37100:	ldr	x9, [x20, #32]
   37104:	ldr	x1, [x21, #1344]
   37108:	cmp	x9, x1
   3710c:	b.le	371cc <PyInit__decimal@@Base+0x30718>
   37110:	sturb	wzr, [x29, #-64]
   37114:	ldr	x0, [x20, #40]
   37118:	sub	x3, x29, #0x40
   3711c:	mov	w2, #0x8                   	// #8
   37120:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   37124:	str	x0, [x20, #40]
   37128:	ldurb	w8, [x29, #-64]
   3712c:	cbnz	w8, 37138 <PyInit__decimal@@Base+0x30684>
   37130:	ldr	x8, [x21, #1344]
   37134:	str	x8, [x20, #32]
   37138:	ldrb	w8, [x20]
   3713c:	b	371cc <PyInit__decimal@@Base+0x30718>
   37140:	ldr	x1, [x23, #40]
   37144:	ldr	x9, [x23, #24]
   37148:	add	x8, x1, x9, lsl #3
   3714c:	ldur	x8, [x8, #-8]
   37150:	cbz	x8, 371b0 <PyInit__decimal@@Base+0x306fc>
   37154:	add	x8, sp, #0x230
   37158:	cmp	x8, x23
   3715c:	cset	w8, eq  // eq = none
   37160:	cmp	x20, x23
   37164:	b.ne	3726c <PyInit__decimal@@Base+0x307b8>  // b.any
   37168:	tbnz	w8, #0, 3726c <PyInit__decimal@@Base+0x307b8>
   3716c:	adrp	x24, 59000 <PyInit__decimal@@Base+0x5254c>
   37170:	ldr	x8, [x24, #1344]
   37174:	cmp	x8, x9
   37178:	csel	x8, x9, x8, lt  // lt = tstop
   3717c:	cmp	x8, #0x41
   37180:	b.lt	37240 <PyInit__decimal@@Base+0x3078c>  // b.tstop
   37184:	add	x0, sp, #0x230
   37188:	mov	x1, x8
   3718c:	mov	x2, x19
   37190:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   37194:	cbz	w0, 37434 <PyInit__decimal@@Base+0x30980>
   37198:	ldr	x9, [x23, #24]
   3719c:	ldrb	w10, [x23]
   371a0:	ldrb	w8, [sp, #560]
   371a4:	ldr	x0, [sp, #600]
   371a8:	ldr	x1, [x23, #40]
   371ac:	b	37248 <PyInit__decimal@@Base+0x30794>
   371b0:	ldr	x8, [x22, #40]
   371b4:	ldr	x9, [x22, #24]
   371b8:	add	x8, x8, x9, lsl #3
   371bc:	ldur	x9, [x8, #-8]
   371c0:	ldrb	w8, [x20]
   371c4:	cbz	x9, 37344 <PyInit__decimal@@Base+0x30890>
   371c8:	tbz	w8, #5, 370fc <PyInit__decimal@@Base+0x30648>
   371cc:	and	w8, w8, #0xf0
   371d0:	orr	w8, w8, #0x4
   371d4:	stp	xzr, xzr, [x20, #16]
   371d8:	strb	w8, [x20]
   371dc:	str	xzr, [x20, #8]
   371e0:	ldr	w8, [x19]
   371e4:	orr	w8, w8, #0x100
   371e8:	str	w8, [x19]
   371ec:	b	37324 <PyInit__decimal@@Base+0x30870>
   371f0:	cmp	x1, x10
   371f4:	b.le	37210 <PyInit__decimal@@Base+0x3075c>
   371f8:	mov	x0, x20
   371fc:	mov	x2, x19
   37200:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   37204:	cbz	w0, 37314 <PyInit__decimal@@Base+0x30860>
   37208:	ldr	x9, [x22, #24]
   3720c:	ldrb	w8, [x22]
   37210:	ldrb	w10, [x20]
   37214:	ldr	x0, [x20, #40]
   37218:	bfxil	w10, w8, #0, #4
   3721c:	strb	w10, [x20]
   37220:	ldur	q0, [x22, #8]
   37224:	str	x9, [x20, #24]
   37228:	stur	q0, [x20, #8]
   3722c:	ldr	x8, [x22, #24]
   37230:	ldr	x1, [x22, #40]
   37234:	lsl	x2, x8, #3
   37238:	bl	63c0 <memcpy@plt>
   3723c:	b	37314 <PyInit__decimal@@Base+0x30860>
   37240:	add	x0, sp, #0x260
   37244:	mov	w8, #0x30                  	// #48
   37248:	bfxil	w8, w10, #0, #4
   3724c:	strb	w8, [sp, #560]
   37250:	ldur	q0, [x23, #8]
   37254:	add	x8, sp, #0x139
   37258:	lsl	x2, x9, #3
   3725c:	str	x9, [sp, #584]
   37260:	stur	q0, [x8, #255]
   37264:	bl	63c0 <memcpy@plt>
   37268:	add	x23, sp, #0x230
   3726c:	mov	x0, sp
   37270:	mov	x1, x20
   37274:	mov	x2, x22
   37278:	mov	x3, x23
   3727c:	mov	x4, x21
   37280:	mov	x5, x19
   37284:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   37288:	ldrb	w8, [sp]
   3728c:	tst	w8, #0xc
   37290:	b.ne	372a0 <PyInit__decimal@@Base+0x307ec>  // b.any
   37294:	ldrb	w8, [x20]
   37298:	tst	w8, #0xc
   3729c:	b.eq	373ac <PyInit__decimal@@Base+0x308f8>  // b.none
   372a0:	ldrb	w8, [sp, #560]
   372a4:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   372a8:	cmp	w8, #0x1f
   372ac:	b.ls	372e4 <PyInit__decimal@@Base+0x30830>  // b.plast
   372b0:	tbnz	w8, #4, 372f8 <PyInit__decimal@@Base+0x30844>
   372b4:	ldr	x8, [x22, #1376]
   372b8:	add	x0, sp, #0x230
   372bc:	blr	x8
   372c0:	ldrb	w8, [sp]
   372c4:	cmp	w8, #0x1f
   372c8:	b.hi	37304 <PyInit__decimal@@Base+0x30850>  // b.pmore
   372cc:	ldr	x8, [x22, #1376]
   372d0:	ldr	x0, [sp, #40]
   372d4:	blr	x8
   372d8:	ldrb	w8, [sp]
   372dc:	tbz	w8, #4, 37308 <PyInit__decimal@@Base+0x30854>
   372e0:	b	37314 <PyInit__decimal@@Base+0x30860>
   372e4:	ldr	x8, [x22, #1376]
   372e8:	ldr	x0, [sp, #600]
   372ec:	blr	x8
   372f0:	ldrb	w8, [sp, #560]
   372f4:	tbz	w8, #4, 372b4 <PyInit__decimal@@Base+0x30800>
   372f8:	ldrb	w8, [sp]
   372fc:	cmp	w8, #0x1f
   37300:	b.ls	372cc <PyInit__decimal@@Base+0x30818>  // b.plast
   37304:	tbnz	w8, #4, 37314 <PyInit__decimal@@Base+0x30860>
   37308:	ldr	x8, [x22, #1376]
   3730c:	mov	x0, sp
   37310:	blr	x8
   37314:	mov	x0, x20
   37318:	mov	x1, x21
   3731c:	mov	x2, x19
   37320:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   37324:	add	sp, sp, #0x4a0
   37328:	ldp	x20, x19, [sp, #80]
   3732c:	ldp	x22, x21, [sp, #64]
   37330:	ldp	x24, x23, [sp, #48]
   37334:	ldp	x26, x25, [sp, #32]
   37338:	ldp	x28, x27, [sp, #16]
   3733c:	ldp	x29, x30, [sp], #96
   37340:	ret
   37344:	tbnz	w8, #5, 37388 <PyInit__decimal@@Base+0x308d4>
   37348:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3734c:	ldr	x9, [x20, #32]
   37350:	ldr	x1, [x21, #1344]
   37354:	cmp	x9, x1
   37358:	b.le	37388 <PyInit__decimal@@Base+0x308d4>
   3735c:	sturb	wzr, [x29, #-64]
   37360:	ldr	x0, [x20, #40]
   37364:	sub	x3, x29, #0x40
   37368:	mov	w2, #0x8                   	// #8
   3736c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   37370:	str	x0, [x20, #40]
   37374:	ldurb	w8, [x29, #-64]
   37378:	cbnz	w8, 37384 <PyInit__decimal@@Base+0x308d0>
   3737c:	ldr	x8, [x21, #1344]
   37380:	str	x8, [x20, #32]
   37384:	ldrb	w8, [x20]
   37388:	and	w8, w8, #0xf0
   3738c:	orr	w8, w8, #0x4
   37390:	stp	xzr, xzr, [x20, #16]
   37394:	strb	w8, [x20]
   37398:	str	xzr, [x20, #8]
   3739c:	ldr	w8, [x19]
   373a0:	orr	w8, w8, #0x10
   373a4:	str	w8, [x19]
   373a8:	b	37324 <PyInit__decimal@@Base+0x30870>
   373ac:	ldr	x8, [x20, #40]
   373b0:	ldr	x9, [x20, #24]
   373b4:	add	x8, x8, x9, lsl #3
   373b8:	ldur	x8, [x8, #-8]
   373bc:	cbz	x8, 372a0 <PyInit__decimal@@Base+0x307ec>
   373c0:	mov	x24, x20
   373c4:	ldp	x8, x9, [x23, #8]
   373c8:	ldr	x10, [x24, #8]!
   373cc:	add	x8, x8, x9
   373d0:	ldr	x11, [x24, #8]
   373d4:	sub	x8, x8, x10
   373d8:	sub	x8, x8, x11
   373dc:	add	x8, x8, #0x1
   373e0:	cmp	x8, #0x2
   373e4:	b.hi	372a0 <PyInit__decimal@@Base+0x307ec>  // b.pmore
   373e8:	ldr	x11, [sp, #24]
   373ec:	ldr	x8, [sp, #40]
   373f0:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   373f4:	add	x9, x9, #0xca0
   373f8:	ldr	x12, [x9, #72]
   373fc:	add	x10, x8, x11, lsl #3
   37400:	ldur	x10, [x10, #-8]
   37404:	cmp	x12, x10
   37408:	b.ls	3749c <PyInit__decimal@@Base+0x309e8>  // b.plast
   3740c:	ldr	x12, [x9, #32]
   37410:	cmp	x12, x10
   37414:	b.ls	374c4 <PyInit__decimal@@Base+0x30a10>  // b.plast
   37418:	ldr	x12, [x9, #16]
   3741c:	cmp	x12, x10
   37420:	b.ls	37508 <PyInit__decimal@@Base+0x30a54>  // b.plast
   37424:	ldr	x12, [x9, #8]
   37428:	cmp	x12, x10
   3742c:	mov	w12, #0x1                   	// #1
   37430:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   37434:	ldrb	w8, [x23]
   37438:	tbnz	w8, #5, 37478 <PyInit__decimal@@Base+0x309c4>
   3743c:	ldr	x9, [x23, #32]
   37440:	ldr	x1, [x24, #1344]
   37444:	cmp	x9, x1
   37448:	b.le	37478 <PyInit__decimal@@Base+0x309c4>
   3744c:	sturb	wzr, [x29, #-64]
   37450:	ldr	x0, [x23, #40]
   37454:	sub	x3, x29, #0x40
   37458:	mov	w2, #0x8                   	// #8
   3745c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   37460:	str	x0, [x23, #40]
   37464:	ldurb	w8, [x29, #-64]
   37468:	cbnz	w8, 37474 <PyInit__decimal@@Base+0x309c0>
   3746c:	ldr	x8, [x24, #1344]
   37470:	str	x8, [x23, #32]
   37474:	ldrb	w8, [x23]
   37478:	and	w8, w8, #0xf0
   3747c:	orr	w8, w8, #0x4
   37480:	stp	xzr, xzr, [x23, #16]
   37484:	strb	w8, [x23]
   37488:	str	xzr, [x23, #8]
   3748c:	ldr	w8, [x19]
   37490:	orr	w8, w8, #0x200
   37494:	str	w8, [x19]
   37498:	b	37324 <PyInit__decimal@@Base+0x30870>
   3749c:	ldr	x12, [x9, #112]
   374a0:	cmp	x12, x10
   374a4:	b.ls	374e0 <PyInit__decimal@@Base+0x30a2c>  // b.plast
   374a8:	ldr	x12, [x9, #88]
   374ac:	cmp	x12, x10
   374b0:	b.ls	37518 <PyInit__decimal@@Base+0x30a64>  // b.plast
   374b4:	ldr	x12, [x9, #80]
   374b8:	cmp	x12, x10
   374bc:	mov	w12, #0xa                   	// #10
   374c0:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   374c4:	ldr	x12, [x9, #48]
   374c8:	cmp	x12, x10
   374cc:	b.ls	37534 <PyInit__decimal@@Base+0x30a80>  // b.plast
   374d0:	ldr	x12, [x9, #40]
   374d4:	cmp	x12, x10
   374d8:	mov	w12, #0x5                   	// #5
   374dc:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   374e0:	ldr	x12, [x9, #144]
   374e4:	cmp	x12, x10
   374e8:	b.ls	37550 <PyInit__decimal@@Base+0x30a9c>  // b.plast
   374ec:	ldr	x12, [x9, #128]
   374f0:	cmp	x12, x10
   374f4:	b.ls	37560 <PyInit__decimal@@Base+0x30aac>  // b.plast
   374f8:	ldr	x12, [x9, #120]
   374fc:	cmp	x12, x10
   37500:	mov	w12, #0xf                   	// #15
   37504:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   37508:	ldr	x12, [x9, #24]
   3750c:	cmp	x12, x10
   37510:	mov	w12, #0x3                   	// #3
   37514:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   37518:	ldr	x12, [x9, #104]
   3751c:	cmp	x12, x10
   37520:	b.ls	377a4 <PyInit__decimal@@Base+0x30cf0>  // b.plast
   37524:	ldr	x12, [x9, #96]
   37528:	cmp	x12, x10
   3752c:	mov	w12, #0xc                   	// #12
   37530:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   37534:	ldr	x12, [x9, #64]
   37538:	cmp	x12, x10
   3753c:	b.ls	377ac <PyInit__decimal@@Base+0x30cf8>  // b.plast
   37540:	ldr	x12, [x9, #56]
   37544:	cmp	x12, x10
   37548:	mov	w12, #0x7                   	// #7
   3754c:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   37550:	ldr	x12, [x9, #152]
   37554:	cmp	x12, x10
   37558:	mov	w12, #0x13                  	// #19
   3755c:	b	3756c <PyInit__decimal@@Base+0x30ab8>
   37560:	ldr	x12, [x9, #136]
   37564:	cmp	x12, x10
   37568:	mov	w12, #0x11                  	// #17
   3756c:	cinc	x12, x12, ls  // ls = plast
   37570:	ldr	x12, [x9, x12, lsl #3]
   37574:	sub	x12, x12, #0x1
   37578:	cmp	x12, x10
   3757c:	b.ne	375a4 <PyInit__decimal@@Base+0x30af0>  // b.any
   37580:	mov	x12, #0xffffffff89e7ffff    	// #-1981284353
   37584:	movk	x12, #0x2304, lsl #32
   37588:	sub	x11, x11, #0x2
   3758c:	movk	x12, #0x8ac7, lsl #48
   37590:	tbnz	x11, #63, 375ac <PyInit__decimal@@Base+0x30af8>
   37594:	ldr	x13, [x8, x11, lsl #3]
   37598:	sub	x11, x11, #0x1
   3759c:	cmp	x13, x12
   375a0:	b.eq	37590 <PyInit__decimal@@Base+0x30adc>  // b.none
   375a4:	mov	w25, wzr
   375a8:	b	375b0 <PyInit__decimal@@Base+0x30afc>
   375ac:	mov	w25, #0x1                   	// #1
   375b0:	ldr	x26, [sp, #16]
   375b4:	cbz	x10, 375c4 <PyInit__decimal@@Base+0x30b10>
   375b8:	ldr	x10, [sp, #8]
   375bc:	tbnz	x10, #63, 375cc <PyInit__decimal@@Base+0x30b18>
   375c0:	cbz	x10, 37608 <PyInit__decimal@@Base+0x30b54>
   375c4:	mov	w27, wzr
   375c8:	b	37610 <PyInit__decimal@@Base+0x30b5c>
   375cc:	mov	x12, #0x435f                	// #17247
   375d0:	movk	x12, #0xd79, lsl #16
   375d4:	movk	x12, #0x35e5, lsl #32
   375d8:	neg	x11, x10
   375dc:	movk	x12, #0xd794, lsl #48
   375e0:	umulh	x11, x11, x12
   375e4:	mov	x13, #0xffffffffffffffed    	// #-19
   375e8:	neg	x10, x10
   375ec:	lsr	x11, x11, #4
   375f0:	madd	x10, x11, x13, x10
   375f4:	ldr	x8, [x8, x11, lsl #3]
   375f8:	ldr	x9, [x9, x10, lsl #3]
   375fc:	udiv	x8, x8, x9
   37600:	and	w27, w8, #0x1
   37604:	b	37610 <PyInit__decimal@@Base+0x30b5c>
   37608:	ldr	w8, [x8]
   3760c:	and	w27, w8, #0x1
   37610:	sub	x0, x29, #0x40
   37614:	sub	x28, x29, #0x40
   37618:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   3761c:	ldrb	w8, [x22]
   37620:	ldrb	w9, [x23]
   37624:	add	x5, x28, #0x1c
   37628:	mov	x0, sp
   3762c:	and	w8, w8, #0x1
   37630:	and	w9, w9, #0x1
   37634:	eor	w10, w8, #0x1
   37638:	cmp	w8, w9
   3763c:	csel	w3, w10, w9, eq  // eq = none
   37640:	sub	x4, x29, #0x40
   37644:	mov	x1, x20
   37648:	mov	x2, x23
   3764c:	bl	2a43c <PyInit__decimal@@Base+0x23988>
   37650:	ldur	w8, [x29, #-36]
   37654:	mov	w9, #0x3be                 	// #958
   37658:	ands	w22, w8, w9
   3765c:	b.eq	376cc <PyInit__decimal@@Base+0x30c18>  // b.none
   37660:	ldrb	w8, [x20]
   37664:	tbnz	w8, #5, 376a8 <PyInit__decimal@@Base+0x30bf4>
   37668:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   3766c:	ldr	x9, [x20, #32]
   37670:	ldr	x1, [x23, #1344]
   37674:	cmp	x9, x1
   37678:	b.le	376a8 <PyInit__decimal@@Base+0x30bf4>
   3767c:	sturb	wzr, [x29, #-12]
   37680:	ldr	x0, [x20, #40]
   37684:	sub	x3, x29, #0xc
   37688:	mov	w2, #0x8                   	// #8
   3768c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   37690:	str	x0, [x20, #40]
   37694:	ldurb	w8, [x29, #-12]
   37698:	cbnz	w8, 376a4 <PyInit__decimal@@Base+0x30bf0>
   3769c:	ldr	x8, [x23, #1344]
   376a0:	str	x8, [x20, #32]
   376a4:	ldrb	w8, [x20]
   376a8:	and	w8, w8, #0xf0
   376ac:	orr	w8, w8, #0x4
   376b0:	strb	w8, [x20]
   376b4:	stp	xzr, xzr, [x24]
   376b8:	str	xzr, [x24, #16]
   376bc:	ldr	w8, [x19]
   376c0:	orr	w8, w8, w22
   376c4:	str	w8, [x19]
   376c8:	b	372a0 <PyInit__decimal@@Base+0x307ec>
   376cc:	mov	x0, sp
   376d0:	mov	x1, x20
   376d4:	bl	25d38 <PyInit__decimal@@Base+0x1f284>
   376d8:	tbnz	w0, #31, 376e4 <PyInit__decimal@@Base+0x30c30>
   376dc:	cbz	w27, 372a0 <PyInit__decimal@@Base+0x307ec>
   376e0:	cbnz	w0, 372a0 <PyInit__decimal@@Base+0x307ec>
   376e4:	cbz	w25, 37760 <PyInit__decimal@@Base+0x30cac>
   376e8:	ldr	x8, [x21]
   376ec:	cmp	x26, x8
   376f0:	b.ne	37760 <PyInit__decimal@@Base+0x30cac>  // b.any
   376f4:	ldrb	w8, [x20]
   376f8:	tbnz	w8, #5, 3773c <PyInit__decimal@@Base+0x30c88>
   376fc:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   37700:	ldr	x9, [x20, #32]
   37704:	ldr	x1, [x22, #1344]
   37708:	cmp	x9, x1
   3770c:	b.le	3773c <PyInit__decimal@@Base+0x30c88>
   37710:	sturb	wzr, [x29, #-12]
   37714:	ldr	x0, [x20, #40]
   37718:	sub	x3, x29, #0xc
   3771c:	mov	w2, #0x8                   	// #8
   37720:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   37724:	str	x0, [x20, #40]
   37728:	ldurb	w8, [x29, #-12]
   3772c:	cbnz	w8, 37738 <PyInit__decimal@@Base+0x30c84>
   37730:	ldr	x8, [x22, #1344]
   37734:	str	x8, [x20, #32]
   37738:	ldrb	w8, [x20]
   3773c:	and	w8, w8, #0xf0
   37740:	orr	w8, w8, #0x4
   37744:	strb	w8, [x20]
   37748:	stp	xzr, xzr, [x24]
   3774c:	str	xzr, [x24, #16]
   37750:	ldr	w8, [x19]
   37754:	orr	w8, w8, #0x8
   37758:	str	w8, [x19]
   3775c:	b	372a0 <PyInit__decimal@@Base+0x307ec>
   37760:	mov	x8, sp
   37764:	cmp	x8, x20
   37768:	b.eq	372a0 <PyInit__decimal@@Base+0x307ec>  // b.none
   3776c:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   37770:	ldr	x8, [sp, #24]
   37774:	ldr	x10, [x9, #1344]
   37778:	ldr	x9, [x20, #32]
   3777c:	cmp	x10, x8
   37780:	csel	x1, x8, x10, lt  // lt = tstop
   37784:	cmp	x1, x9
   37788:	b.eq	377d0 <PyInit__decimal@@Base+0x30d1c>  // b.none
   3778c:	ldrb	w10, [x20]
   37790:	tbnz	w10, #5, 377b4 <PyInit__decimal@@Base+0x30d00>
   37794:	mov	x0, x20
   37798:	mov	x2, x19
   3779c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   377a0:	b	377c8 <PyInit__decimal@@Base+0x30d14>
   377a4:	mov	w12, #0xe                   	// #14
   377a8:	b	37570 <PyInit__decimal@@Base+0x30abc>
   377ac:	mov	w12, #0x9                   	// #9
   377b0:	b	37570 <PyInit__decimal@@Base+0x30abc>
   377b4:	cmp	x1, x9
   377b8:	b.le	377d0 <PyInit__decimal@@Base+0x30d1c>
   377bc:	mov	x0, x20
   377c0:	mov	x2, x19
   377c4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   377c8:	cbz	w0, 372a0 <PyInit__decimal@@Base+0x307ec>
   377cc:	ldr	x8, [sp, #24]
   377d0:	ldrb	w9, [sp]
   377d4:	ldrb	w10, [x20]
   377d8:	ldr	x0, [x20, #40]
   377dc:	lsl	x2, x8, #3
   377e0:	bfxil	w10, w9, #0, #4
   377e4:	strb	w10, [x20]
   377e8:	ldur	q0, [sp, #8]
   377ec:	str	x8, [x20, #24]
   377f0:	stur	q0, [x20, #8]
   377f4:	ldr	x1, [sp, #40]
   377f8:	bl	63c0 <memcpy@plt>
   377fc:	b	372a0 <PyInit__decimal@@Base+0x307ec>
   37800:	bl	6700 <abort@plt>
   37804:	stp	x29, x30, [sp, #-64]!
   37808:	str	x23, [sp, #16]
   3780c:	stp	x22, x21, [sp, #32]
   37810:	stp	x20, x19, [sp, #48]
   37814:	mov	x29, sp
   37818:	ldrb	w8, [x1]
   3781c:	mov	x20, x4
   37820:	mov	x22, x1
   37824:	mov	x19, x0
   37828:	tst	w8, #0xe
   3782c:	b.eq	37874 <PyInit__decimal@@Base+0x30dc0>  // b.none
   37830:	cmp	x19, x22
   37834:	b.eq	37e14 <PyInit__decimal@@Base+0x31360>  // b.none
   37838:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3783c:	ldr	x9, [x22, #24]
   37840:	ldr	x11, [x10, #1344]
   37844:	ldr	x10, [x19, #32]
   37848:	cmp	x11, x9
   3784c:	csel	x1, x9, x11, lt  // lt = tstop
   37850:	cmp	x1, x10
   37854:	b.eq	379f4 <PyInit__decimal@@Base+0x30f40>  // b.none
   37858:	ldrb	w11, [x19]
   3785c:	tbnz	w11, #5, 379d4 <PyInit__decimal@@Base+0x30f20>
   37860:	mov	x0, x19
   37864:	mov	x2, x20
   37868:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3786c:	cbnz	w0, 379ec <PyInit__decimal@@Base+0x30f38>
   37870:	b	37e14 <PyInit__decimal@@Base+0x31360>
   37874:	ldr	x9, [x22, #40]
   37878:	ldr	x10, [x22, #24]
   3787c:	mov	x23, x2
   37880:	add	x9, x9, x10, lsl #3
   37884:	ldur	x9, [x9, #-8]
   37888:	cbz	x9, 37928 <PyInit__decimal@@Base+0x30e74>
   3788c:	ldr	x8, [x22, #8]
   37890:	mov	x21, x3
   37894:	subs	x2, x8, x23
   37898:	b.mi	37a30 <PyInit__decimal@@Base+0x30f7c>  // b.first
   3789c:	ldr	x8, [x22, #16]
   378a0:	mov	x9, #0x1                   	// #1
   378a4:	movk	x9, #0xa764, lsl #16
   378a8:	movk	x9, #0xb6b3, lsl #32
   378ac:	add	x8, x8, x2
   378b0:	movk	x9, #0xde0, lsl #48
   378b4:	cmp	x8, x9
   378b8:	b.lt	37a84 <PyInit__decimal@@Base+0x30fd0>  // b.tstop
   378bc:	ldrb	w8, [x19]
   378c0:	tbnz	w8, #5, 37904 <PyInit__decimal@@Base+0x30e50>
   378c4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   378c8:	ldr	x9, [x19, #32]
   378cc:	ldr	x1, [x21, #1344]
   378d0:	cmp	x9, x1
   378d4:	b.le	37904 <PyInit__decimal@@Base+0x30e50>
   378d8:	strb	wzr, [x29, #28]
   378dc:	ldr	x0, [x19, #40]
   378e0:	add	x3, x29, #0x1c
   378e4:	mov	w2, #0x8                   	// #8
   378e8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   378ec:	str	x0, [x19, #40]
   378f0:	ldrb	w8, [x29, #28]
   378f4:	cbnz	w8, 37900 <PyInit__decimal@@Base+0x30e4c>
   378f8:	ldr	x8, [x21, #1344]
   378fc:	str	x8, [x19, #32]
   37900:	ldrb	w8, [x19]
   37904:	and	w8, w8, #0xf0
   37908:	orr	w8, w8, #0x4
   3790c:	stp	xzr, xzr, [x19, #16]
   37910:	strb	w8, [x19]
   37914:	str	xzr, [x19, #8]
   37918:	ldr	w8, [x20]
   3791c:	orr	w8, w8, #0x100
   37920:	str	w8, [x20]
   37924:	b	37e14 <PyInit__decimal@@Base+0x31360>
   37928:	ldrb	w9, [x19]
   3792c:	and	w20, w8, #0x1
   37930:	tbnz	w9, #5, 37974 <PyInit__decimal@@Base+0x30ec0>
   37934:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   37938:	ldr	x8, [x19, #32]
   3793c:	ldr	x1, [x21, #1344]
   37940:	cmp	x8, x1
   37944:	b.le	37974 <PyInit__decimal@@Base+0x30ec0>
   37948:	strb	wzr, [x29, #24]
   3794c:	ldr	x0, [x19, #40]
   37950:	add	x3, x29, #0x18
   37954:	mov	w2, #0x8                   	// #8
   37958:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3795c:	str	x0, [x19, #40]
   37960:	ldrb	w8, [x29, #24]
   37964:	cbnz	w8, 37970 <PyInit__decimal@@Base+0x30ebc>
   37968:	ldr	x8, [x21, #1344]
   3796c:	str	x8, [x19, #32]
   37970:	ldrb	w9, [x19]
   37974:	ldr	x10, [x19, #40]
   37978:	and	w8, w9, #0xf0
   3797c:	mov	w11, #0x1                   	// #1
   37980:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   37984:	orr	w8, w8, w20
   37988:	str	x23, [x19, #8]
   3798c:	add	x9, x9, #0xca0
   37990:	strb	w8, [x19]
   37994:	stp	xzr, xzr, [x10]
   37998:	str	x11, [x19, #24]
   3799c:	ldr	x8, [x10]
   379a0:	ldr	x10, [x9, #72]
   379a4:	cmp	x10, x8
   379a8:	b.ls	37aa0 <PyInit__decimal@@Base+0x30fec>  // b.plast
   379ac:	ldr	x10, [x9, #32]
   379b0:	cmp	x10, x8
   379b4:	b.ls	37ac8 <PyInit__decimal@@Base+0x31014>  // b.plast
   379b8:	ldr	x10, [x9, #16]
   379bc:	cmp	x10, x8
   379c0:	b.ls	37b0c <PyInit__decimal@@Base+0x31058>  // b.plast
   379c4:	ldr	x9, [x9, #8]
   379c8:	cmp	x9, x8
   379cc:	mov	w8, #0x1                   	// #1
   379d0:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   379d4:	cmp	x1, x10
   379d8:	b.le	379f4 <PyInit__decimal@@Base+0x30f40>
   379dc:	mov	x0, x19
   379e0:	mov	x2, x20
   379e4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   379e8:	cbz	w0, 37e14 <PyInit__decimal@@Base+0x31360>
   379ec:	ldr	x9, [x22, #24]
   379f0:	ldrb	w8, [x22]
   379f4:	ldrb	w10, [x19]
   379f8:	ldr	x0, [x19, #40]
   379fc:	ldr	x23, [sp, #16]
   37a00:	bfxil	w10, w8, #0, #4
   37a04:	strb	w10, [x19]
   37a08:	ldur	q0, [x22, #8]
   37a0c:	str	x9, [x19, #24]
   37a10:	stur	q0, [x19, #8]
   37a14:	ldr	x8, [x22, #24]
   37a18:	ldr	x1, [x22, #40]
   37a1c:	ldp	x20, x19, [sp, #48]
   37a20:	ldp	x22, x21, [sp, #32]
   37a24:	lsl	x2, x8, #3
   37a28:	ldp	x29, x30, [sp], #64
   37a2c:	b	63c0 <memcpy@plt>
   37a30:	neg	x2, x2
   37a34:	mov	x0, x19
   37a38:	mov	x1, x22
   37a3c:	mov	x3, x20
   37a40:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   37a44:	cmn	x0, #0x1
   37a48:	b.eq	37e14 <PyInit__decimal@@Base+0x31360>  // b.none
   37a4c:	str	x23, [x19, #8]
   37a50:	ldr	w8, [x21, #36]
   37a54:	mov	x22, x0
   37a58:	cmp	w8, #0x7
   37a5c:	b.hi	37dec <PyInit__decimal@@Base+0x31338>  // b.pmore
   37a60:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   37a64:	add	x9, x9, #0x62
   37a68:	adr	x10, 37a78 <PyInit__decimal@@Base+0x30fc4>
   37a6c:	ldrb	w11, [x9, x8]
   37a70:	add	x10, x10, x11, lsl #2
   37a74:	br	x10
   37a78:	cmp	x22, #0x0
   37a7c:	cset	w8, ne  // ne = any
   37a80:	b	37c2c <PyInit__decimal@@Base+0x31178>
   37a84:	mov	x0, x19
   37a88:	mov	x1, x22
   37a8c:	mov	x3, x20
   37a90:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   37a94:	cbz	w0, 37e14 <PyInit__decimal@@Base+0x31360>
   37a98:	str	x23, [x19, #8]
   37a9c:	b	37e08 <PyInit__decimal@@Base+0x31354>
   37aa0:	ldr	x10, [x9, #112]
   37aa4:	cmp	x10, x8
   37aa8:	b.ls	37ae4 <PyInit__decimal@@Base+0x31030>  // b.plast
   37aac:	ldr	x10, [x9, #88]
   37ab0:	cmp	x10, x8
   37ab4:	b.ls	37b1c <PyInit__decimal@@Base+0x31068>  // b.plast
   37ab8:	ldr	x9, [x9, #80]
   37abc:	cmp	x9, x8
   37ac0:	mov	w8, #0xa                   	// #10
   37ac4:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37ac8:	ldr	x10, [x9, #48]
   37acc:	cmp	x10, x8
   37ad0:	b.ls	37b38 <PyInit__decimal@@Base+0x31084>  // b.plast
   37ad4:	ldr	x9, [x9, #40]
   37ad8:	cmp	x9, x8
   37adc:	mov	w8, #0x5                   	// #5
   37ae0:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37ae4:	ldr	x10, [x9, #144]
   37ae8:	cmp	x10, x8
   37aec:	b.ls	37b54 <PyInit__decimal@@Base+0x310a0>  // b.plast
   37af0:	ldr	x10, [x9, #128]
   37af4:	cmp	x10, x8
   37af8:	b.ls	37b64 <PyInit__decimal@@Base+0x310b0>  // b.plast
   37afc:	ldr	x9, [x9, #120]
   37b00:	cmp	x9, x8
   37b04:	mov	w8, #0xf                   	// #15
   37b08:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37b0c:	ldr	x9, [x9, #24]
   37b10:	cmp	x9, x8
   37b14:	mov	w8, #0x3                   	// #3
   37b18:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37b1c:	ldr	x10, [x9, #104]
   37b20:	cmp	x10, x8
   37b24:	b.ls	37b7c <PyInit__decimal@@Base+0x310c8>  // b.plast
   37b28:	ldr	x9, [x9, #96]
   37b2c:	cmp	x9, x8
   37b30:	mov	w8, #0xc                   	// #12
   37b34:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37b38:	ldr	x10, [x9, #64]
   37b3c:	cmp	x10, x8
   37b40:	b.ls	37b88 <PyInit__decimal@@Base+0x310d4>  // b.plast
   37b44:	ldr	x9, [x9, #56]
   37b48:	cmp	x9, x8
   37b4c:	mov	w8, #0x7                   	// #7
   37b50:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37b54:	ldr	x9, [x9, #152]
   37b58:	cmp	x9, x8
   37b5c:	mov	w8, #0x13                  	// #19
   37b60:	b	37b70 <PyInit__decimal@@Base+0x310bc>
   37b64:	ldr	x9, [x9, #136]
   37b68:	cmp	x9, x8
   37b6c:	mov	w8, #0x11                  	// #17
   37b70:	cinc	x8, x8, ls  // ls = plast
   37b74:	str	x8, [x19, #16]
   37b78:	b	37e14 <PyInit__decimal@@Base+0x31360>
   37b7c:	mov	w8, #0xe                   	// #14
   37b80:	str	x8, [x19, #16]
   37b84:	b	37e14 <PyInit__decimal@@Base+0x31360>
   37b88:	mov	w8, #0x9                   	// #9
   37b8c:	str	x8, [x19, #16]
   37b90:	b	37e14 <PyInit__decimal@@Base+0x31360>
   37b94:	cbz	x22, 37c84 <PyInit__decimal@@Base+0x311d0>
   37b98:	ldrb	w8, [x19]
   37b9c:	mvn	w8, w8
   37ba0:	and	w8, w8, #0x1
   37ba4:	b	37c2c <PyInit__decimal@@Base+0x31178>
   37ba8:	cbz	x22, 37c84 <PyInit__decimal@@Base+0x311d0>
   37bac:	ldrb	w8, [x19]
   37bb0:	and	w8, w8, #0x1
   37bb4:	b	37c2c <PyInit__decimal@@Base+0x31178>
   37bb8:	cmp	x22, #0x4
   37bbc:	cset	w8, hi  // hi = pmore
   37bc0:	b	37c2c <PyInit__decimal@@Base+0x31178>
   37bc4:	cmp	x22, #0x5
   37bc8:	cset	w8, hi  // hi = pmore
   37bcc:	b	37c2c <PyInit__decimal@@Base+0x31178>
   37bd0:	cmp	x22, #0x5
   37bd4:	b.hi	37c30 <PyInit__decimal@@Base+0x3117c>  // b.pmore
   37bd8:	b.ne	37dec <PyInit__decimal@@Base+0x31338>  // b.any
   37bdc:	ldr	x8, [x19, #40]
   37be0:	ldr	w8, [x8]
   37be4:	and	w8, w8, #0x1
   37be8:	b	37c2c <PyInit__decimal@@Base+0x31178>
   37bec:	ldr	x8, [x19, #40]
   37bf0:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   37bf4:	movk	x9, #0xcccd
   37bf8:	mov	w10, #0xa                   	// #10
   37bfc:	ldr	x8, [x8]
   37c00:	cmp	x22, #0x0
   37c04:	cset	w11, ne  // ne = any
   37c08:	umulh	x9, x8, x9
   37c0c:	lsr	x9, x9, #3
   37c10:	msub	w8, w9, w10, w8
   37c14:	cmp	w8, #0x0
   37c18:	cset	w9, eq  // eq = none
   37c1c:	cmp	w8, #0x5
   37c20:	cset	w8, eq  // eq = none
   37c24:	orr	w8, w9, w8
   37c28:	and	w8, w11, w8
   37c2c:	cbz	w8, 37dec <PyInit__decimal@@Base+0x31338>
   37c30:	ldr	x0, [x19, #40]
   37c34:	ldr	x1, [x19, #24]
   37c38:	bl	1c45c <PyInit__decimal@@Base+0x159a8>
   37c3c:	cbz	x0, 37c78 <PyInit__decimal@@Base+0x311c4>
   37c40:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   37c44:	ldr	x10, [x9, #1344]
   37c48:	ldp	x8, x9, [x19, #24]
   37c4c:	add	x11, x8, #0x1
   37c50:	cmp	x10, x11
   37c54:	csinc	x1, x10, x8, ge  // ge = tcont
   37c58:	cmp	x1, x9
   37c5c:	b.eq	37cac <PyInit__decimal@@Base+0x311f8>  // b.none
   37c60:	ldrb	w10, [x19]
   37c64:	tbnz	w10, #5, 37c90 <PyInit__decimal@@Base+0x311dc>
   37c68:	mov	x0, x19
   37c6c:	mov	x2, x20
   37c70:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   37c74:	b	37ca4 <PyInit__decimal@@Base+0x311f0>
   37c78:	ldr	x9, [x19, #40]
   37c7c:	ldr	x8, [x19, #24]
   37c80:	b	37cc4 <PyInit__decimal@@Base+0x31210>
   37c84:	ldr	w8, [x20]
   37c88:	orr	w8, w8, #0x1000
   37c8c:	b	37e04 <PyInit__decimal@@Base+0x31350>
   37c90:	cmp	x1, x9
   37c94:	b.le	37cac <PyInit__decimal@@Base+0x311f8>
   37c98:	mov	x0, x19
   37c9c:	mov	x2, x20
   37ca0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   37ca4:	cbz	w0, 37dec <PyInit__decimal@@Base+0x31338>
   37ca8:	ldr	x8, [x19, #24]
   37cac:	ldr	x9, [x19, #40]
   37cb0:	mov	w10, #0x1                   	// #1
   37cb4:	str	x10, [x9, x8, lsl #3]
   37cb8:	ldr	x8, [x19, #24]
   37cbc:	add	x8, x8, #0x1
   37cc0:	str	x8, [x19, #24]
   37cc4:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   37cc8:	add	x9, x9, x8, lsl #3
   37ccc:	add	x10, x10, #0xca0
   37cd0:	ldur	x9, [x9, #-8]
   37cd4:	ldr	x11, [x10, #72]
   37cd8:	cmp	x11, x9
   37cdc:	b.ls	37d08 <PyInit__decimal@@Base+0x31254>  // b.plast
   37ce0:	ldr	x11, [x10, #32]
   37ce4:	cmp	x11, x9
   37ce8:	b.ls	37d30 <PyInit__decimal@@Base+0x3127c>  // b.plast
   37cec:	ldr	x11, [x10, #16]
   37cf0:	cmp	x11, x9
   37cf4:	b.ls	37d74 <PyInit__decimal@@Base+0x312c0>  // b.plast
   37cf8:	ldr	x10, [x10, #8]
   37cfc:	cmp	x10, x9
   37d00:	mov	w9, #0x1                   	// #1
   37d04:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37d08:	ldr	x11, [x10, #112]
   37d0c:	cmp	x11, x9
   37d10:	b.ls	37d4c <PyInit__decimal@@Base+0x31298>  // b.plast
   37d14:	ldr	x11, [x10, #88]
   37d18:	cmp	x11, x9
   37d1c:	b.ls	37d84 <PyInit__decimal@@Base+0x312d0>  // b.plast
   37d20:	ldr	x10, [x10, #80]
   37d24:	cmp	x10, x9
   37d28:	mov	w9, #0xa                   	// #10
   37d2c:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37d30:	ldr	x11, [x10, #48]
   37d34:	cmp	x11, x9
   37d38:	b.ls	37da0 <PyInit__decimal@@Base+0x312ec>  // b.plast
   37d3c:	ldr	x10, [x10, #40]
   37d40:	cmp	x10, x9
   37d44:	mov	w9, #0x5                   	// #5
   37d48:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37d4c:	ldr	x11, [x10, #144]
   37d50:	cmp	x11, x9
   37d54:	b.ls	37dbc <PyInit__decimal@@Base+0x31308>  // b.plast
   37d58:	ldr	x11, [x10, #128]
   37d5c:	cmp	x11, x9
   37d60:	b.ls	37dcc <PyInit__decimal@@Base+0x31318>  // b.plast
   37d64:	ldr	x10, [x10, #120]
   37d68:	cmp	x10, x9
   37d6c:	mov	w9, #0xf                   	// #15
   37d70:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37d74:	ldr	x10, [x10, #24]
   37d78:	cmp	x10, x9
   37d7c:	mov	w9, #0x3                   	// #3
   37d80:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37d84:	ldr	x11, [x10, #104]
   37d88:	cmp	x11, x9
   37d8c:	b.ls	37e60 <PyInit__decimal@@Base+0x313ac>  // b.plast
   37d90:	ldr	x10, [x10, #96]
   37d94:	cmp	x10, x9
   37d98:	mov	w9, #0xc                   	// #12
   37d9c:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37da0:	ldr	x11, [x10, #64]
   37da4:	cmp	x11, x9
   37da8:	b.ls	37e68 <PyInit__decimal@@Base+0x313b4>  // b.plast
   37dac:	ldr	x10, [x10, #56]
   37db0:	cmp	x10, x9
   37db4:	mov	w9, #0x7                   	// #7
   37db8:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37dbc:	ldr	x10, [x10, #152]
   37dc0:	cmp	x10, x9
   37dc4:	mov	w9, #0x13                  	// #19
   37dc8:	b	37dd8 <PyInit__decimal@@Base+0x31324>
   37dcc:	ldr	x10, [x10, #136]
   37dd0:	cmp	x10, x9
   37dd4:	mov	w9, #0x11                  	// #17
   37dd8:	cinc	x9, x9, ls  // ls = plast
   37ddc:	mov	w10, #0x13                  	// #19
   37de0:	madd	x8, x8, x10, x9
   37de4:	sub	x8, x8, #0x13
   37de8:	str	x8, [x19, #16]
   37dec:	ldr	w8, [x20]
   37df0:	orr	w9, w8, #0x1000
   37df4:	str	w9, [x20]
   37df8:	cbz	x22, 37e08 <PyInit__decimal@@Base+0x31354>
   37dfc:	mov	w9, #0x1040                	// #4160
   37e00:	orr	w8, w8, w9
   37e04:	str	w8, [x20]
   37e08:	ldrb	w8, [x19]
   37e0c:	tst	w8, #0xe
   37e10:	b.eq	37e28 <PyInit__decimal@@Base+0x31374>  // b.none
   37e14:	ldp	x20, x19, [sp, #48]
   37e18:	ldp	x22, x21, [sp, #32]
   37e1c:	ldr	x23, [sp, #16]
   37e20:	ldp	x29, x30, [sp], #64
   37e24:	ret
   37e28:	ldr	x8, [x19, #40]
   37e2c:	ldr	x9, [x19, #24]
   37e30:	add	x8, x8, x9, lsl #3
   37e34:	ldur	x8, [x8, #-8]
   37e38:	cbz	x8, 37e14 <PyInit__decimal@@Base+0x31360>
   37e3c:	ldp	x8, x9, [x19, #8]
   37e40:	ldr	x10, [x21, #16]
   37e44:	add	x8, x8, x9
   37e48:	sub	x8, x8, #0x1
   37e4c:	cmp	x8, x10
   37e50:	b.ge	37e14 <PyInit__decimal@@Base+0x31360>  // b.tcont
   37e54:	ldr	w8, [x20]
   37e58:	orr	w8, w8, #0x2000
   37e5c:	b	37920 <PyInit__decimal@@Base+0x30e6c>
   37e60:	mov	w9, #0xe                   	// #14
   37e64:	b	37ddc <PyInit__decimal@@Base+0x31328>
   37e68:	mov	w9, #0x9                   	// #9
   37e6c:	b	37ddc <PyInit__decimal@@Base+0x31328>
   37e70:	stp	x29, x30, [sp, #-48]!
   37e74:	str	x21, [sp, #16]
   37e78:	stp	x20, x19, [sp, #32]
   37e7c:	mov	x29, sp
   37e80:	mov	x8, #0xfffc                	// #65532
   37e84:	movk	x8, #0xf62b, lsl #16
   37e88:	mov	x9, #0xfffd                	// #65533
   37e8c:	movk	x8, #0x241a, lsl #32
   37e90:	movk	x9, #0x9d8f, lsl #16
   37e94:	movk	x8, #0x29a2, lsl #48
   37e98:	movk	x9, #0xdace, lsl #32
   37e9c:	add	x8, x2, x8
   37ea0:	movk	x9, #0x3782, lsl #48
   37ea4:	mov	x19, x4
   37ea8:	cmp	x8, x9
   37eac:	mov	x20, x0
   37eb0:	b.cc	37f2c <PyInit__decimal@@Base+0x31478>  // b.lo, b.ul, b.last
   37eb4:	ldrb	w8, [x20]
   37eb8:	tbnz	w8, #5, 37efc <PyInit__decimal@@Base+0x31448>
   37ebc:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   37ec0:	ldr	x9, [x20, #32]
   37ec4:	ldr	x1, [x21, #1344]
   37ec8:	cmp	x9, x1
   37ecc:	b.le	37efc <PyInit__decimal@@Base+0x31448>
   37ed0:	strb	wzr, [x29, #28]
   37ed4:	ldr	x0, [x20, #40]
   37ed8:	add	x3, x29, #0x1c
   37edc:	mov	w2, #0x8                   	// #8
   37ee0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   37ee4:	str	x0, [x20, #40]
   37ee8:	ldrb	w8, [x29, #28]
   37eec:	cbnz	w8, 37ef8 <PyInit__decimal@@Base+0x31444>
   37ef0:	ldr	x8, [x21, #1344]
   37ef4:	str	x8, [x20, #32]
   37ef8:	ldrb	w8, [x20]
   37efc:	and	w8, w8, #0xf0
   37f00:	orr	w8, w8, #0x4
   37f04:	stp	xzr, xzr, [x20, #16]
   37f08:	strb	w8, [x20]
   37f0c:	str	xzr, [x20, #8]
   37f10:	ldr	w8, [x19]
   37f14:	ldr	x21, [sp, #16]
   37f18:	orr	w8, w8, #0x100
   37f1c:	str	w8, [x19]
   37f20:	ldp	x20, x19, [sp, #32]
   37f24:	ldp	x29, x30, [sp], #48
   37f28:	ret
   37f2c:	mov	x0, x20
   37f30:	mov	x4, x19
   37f34:	ldp	x20, x19, [sp, #32]
   37f38:	ldr	x21, [sp, #16]
   37f3c:	ldp	x29, x30, [sp], #48
   37f40:	b	37804 <PyInit__decimal@@Base+0x30d50>
   37f44:	mov	x4, x3
   37f48:	mov	x3, x2
   37f4c:	mov	x2, x1
   37f50:	mov	x1, x0
   37f54:	mov	w0, wzr
   37f58:	b	37f5c <PyInit__decimal@@Base+0x314a8>
   37f5c:	stp	x29, x30, [sp, #-64]!
   37f60:	str	x23, [sp, #16]
   37f64:	stp	x22, x21, [sp, #32]
   37f68:	stp	x20, x19, [sp, #48]
   37f6c:	mov	x29, sp
   37f70:	ldrb	w8, [x2]
   37f74:	mov	x20, x4
   37f78:	mov	x23, x3
   37f7c:	mov	x22, x2
   37f80:	mov	x19, x1
   37f84:	tst	w8, #0xe
   37f88:	b.eq	37fe8 <PyInit__decimal@@Base+0x31534>  // b.none
   37f8c:	mov	x0, x19
   37f90:	mov	x1, x22
   37f94:	mov	x2, x23
   37f98:	mov	x3, x20
   37f9c:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   37fa0:	cmp	x19, x22
   37fa4:	b.eq	38550 <PyInit__decimal@@Base+0x31a9c>  // b.none
   37fa8:	cbnz	w0, 38550 <PyInit__decimal@@Base+0x31a9c>
   37fac:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   37fb0:	ldr	x8, [x22, #24]
   37fb4:	ldr	x10, [x9, #1344]
   37fb8:	ldr	x9, [x19, #32]
   37fbc:	cmp	x10, x8
   37fc0:	csel	x1, x8, x10, lt  // lt = tstop
   37fc4:	cmp	x1, x9
   37fc8:	b.eq	380c4 <PyInit__decimal@@Base+0x31610>  // b.none
   37fcc:	ldrb	w10, [x19]
   37fd0:	tbnz	w10, #5, 380a8 <PyInit__decimal@@Base+0x315f4>
   37fd4:	mov	x0, x19
   37fd8:	mov	x2, x20
   37fdc:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   37fe0:	cbnz	w0, 380c0 <PyInit__decimal@@Base+0x3160c>
   37fe4:	b	38550 <PyInit__decimal@@Base+0x31a9c>
   37fe8:	ldr	x9, [x22, #8]
   37fec:	tbnz	x9, #63, 38034 <PyInit__decimal@@Base+0x31580>
   37ff0:	cmp	x19, x22
   37ff4:	b.eq	38550 <PyInit__decimal@@Base+0x31a9c>  // b.none
   37ff8:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   37ffc:	ldr	x10, [x22, #24]
   38000:	ldr	x12, [x11, #1344]
   38004:	ldr	x11, [x19, #32]
   38008:	cmp	x12, x10
   3800c:	csel	x1, x10, x12, lt  // lt = tstop
   38010:	cmp	x1, x11
   38014:	b.eq	381b4 <PyInit__decimal@@Base+0x31700>  // b.none
   38018:	ldrb	w12, [x19]
   3801c:	tbnz	w12, #5, 38190 <PyInit__decimal@@Base+0x316dc>
   38020:	mov	x0, x19
   38024:	mov	x2, x20
   38028:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3802c:	cbnz	w0, 381a8 <PyInit__decimal@@Base+0x316f4>
   38030:	b	38550 <PyInit__decimal@@Base+0x31a9c>
   38034:	ldr	x10, [x22, #40]
   38038:	ldr	x11, [x22, #24]
   3803c:	add	x10, x10, x11, lsl #3
   38040:	ldur	x10, [x10, #-8]
   38044:	cbz	x10, 380e4 <PyInit__decimal@@Base+0x31630>
   38048:	mov	w21, w0
   3804c:	neg	x2, x9
   38050:	mov	x0, x19
   38054:	mov	x1, x22
   38058:	mov	x3, x20
   3805c:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   38060:	cmn	x0, #0x1
   38064:	b.eq	38550 <PyInit__decimal@@Base+0x31a9c>  // b.none
   38068:	cmp	w21, #0x1
   3806c:	str	xzr, [x19, #8]
   38070:	b.hi	38550 <PyInit__decimal@@Base+0x31a9c>  // b.pmore
   38074:	ldr	w8, [x23, #36]
   38078:	mov	x22, x0
   3807c:	cmp	w8, #0x7
   38080:	b.hi	38530 <PyInit__decimal@@Base+0x31a7c>  // b.pmore
   38084:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   38088:	add	x9, x9, #0x6a
   3808c:	adr	x10, 3809c <PyInit__decimal@@Base+0x315e8>
   38090:	ldrh	w11, [x9, x8, lsl #1]
   38094:	add	x10, x10, x11, lsl #2
   38098:	br	x10
   3809c:	cmp	x22, #0x0
   380a0:	cset	w8, ne  // ne = any
   380a4:	b	3834c <PyInit__decimal@@Base+0x31898>
   380a8:	cmp	x1, x9
   380ac:	b.le	380c4 <PyInit__decimal@@Base+0x31610>
   380b0:	mov	x0, x19
   380b4:	mov	x2, x20
   380b8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   380bc:	cbz	w0, 38550 <PyInit__decimal@@Base+0x31a9c>
   380c0:	ldr	x8, [x22, #24]
   380c4:	ldrb	w9, [x22]
   380c8:	ldrb	w10, [x19]
   380cc:	bfxil	w10, w9, #0, #4
   380d0:	strb	w10, [x19]
   380d4:	ldur	q0, [x22, #8]
   380d8:	str	x8, [x19, #24]
   380dc:	stur	q0, [x19, #8]
   380e0:	b	381cc <PyInit__decimal@@Base+0x31718>
   380e4:	ldrb	w9, [x19]
   380e8:	and	w20, w8, #0x1
   380ec:	tbnz	w9, #5, 38130 <PyInit__decimal@@Base+0x3167c>
   380f0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   380f4:	ldr	x8, [x19, #32]
   380f8:	ldr	x1, [x21, #1344]
   380fc:	cmp	x8, x1
   38100:	b.le	38130 <PyInit__decimal@@Base+0x3167c>
   38104:	strb	wzr, [x29, #28]
   38108:	ldr	x0, [x19, #40]
   3810c:	add	x3, x29, #0x1c
   38110:	mov	w2, #0x8                   	// #8
   38114:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   38118:	str	x0, [x19, #40]
   3811c:	ldrb	w8, [x29, #28]
   38120:	cbnz	w8, 3812c <PyInit__decimal@@Base+0x31678>
   38124:	ldr	x8, [x21, #1344]
   38128:	str	x8, [x19, #32]
   3812c:	ldrb	w9, [x19]
   38130:	ldr	x10, [x19, #40]
   38134:	and	w8, w9, #0xf0
   38138:	mov	w11, #0x1                   	// #1
   3813c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   38140:	orr	w8, w8, w20
   38144:	str	xzr, [x19, #8]
   38148:	add	x9, x9, #0xca0
   3814c:	strb	w8, [x19]
   38150:	stp	xzr, xzr, [x10]
   38154:	str	x11, [x19, #24]
   38158:	ldr	x8, [x10]
   3815c:	ldr	x10, [x9, #72]
   38160:	cmp	x10, x8
   38164:	b.ls	381f0 <PyInit__decimal@@Base+0x3173c>  // b.plast
   38168:	ldr	x10, [x9, #32]
   3816c:	cmp	x10, x8
   38170:	b.ls	38218 <PyInit__decimal@@Base+0x31764>  // b.plast
   38174:	ldr	x10, [x9, #16]
   38178:	cmp	x10, x8
   3817c:	b.ls	3825c <PyInit__decimal@@Base+0x317a8>  // b.plast
   38180:	ldr	x9, [x9, #8]
   38184:	cmp	x9, x8
   38188:	mov	w8, #0x1                   	// #1
   3818c:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   38190:	cmp	x1, x11
   38194:	b.le	381b4 <PyInit__decimal@@Base+0x31700>
   38198:	mov	x0, x19
   3819c:	mov	x2, x20
   381a0:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   381a4:	cbz	w0, 38550 <PyInit__decimal@@Base+0x31a9c>
   381a8:	ldr	x10, [x22, #24]
   381ac:	ldrb	w8, [x22]
   381b0:	ldr	x9, [x22, #8]
   381b4:	ldrb	w11, [x19]
   381b8:	str	x9, [x19, #8]
   381bc:	bfxil	w11, w8, #0, #4
   381c0:	strb	w11, [x19]
   381c4:	ldr	x8, [x22, #16]
   381c8:	stp	x8, x10, [x19, #16]
   381cc:	ldr	x8, [x22, #24]
   381d0:	ldr	x0, [x19, #40]
   381d4:	ldr	x1, [x22, #40]
   381d8:	ldp	x20, x19, [sp, #48]
   381dc:	ldp	x22, x21, [sp, #32]
   381e0:	ldr	x23, [sp, #16]
   381e4:	lsl	x2, x8, #3
   381e8:	ldp	x29, x30, [sp], #64
   381ec:	b	63c0 <memcpy@plt>
   381f0:	ldr	x10, [x9, #112]
   381f4:	cmp	x10, x8
   381f8:	b.ls	38234 <PyInit__decimal@@Base+0x31780>  // b.plast
   381fc:	ldr	x10, [x9, #88]
   38200:	cmp	x10, x8
   38204:	b.ls	3826c <PyInit__decimal@@Base+0x317b8>  // b.plast
   38208:	ldr	x9, [x9, #80]
   3820c:	cmp	x9, x8
   38210:	mov	w8, #0xa                   	// #10
   38214:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   38218:	ldr	x10, [x9, #48]
   3821c:	cmp	x10, x8
   38220:	b.ls	38288 <PyInit__decimal@@Base+0x317d4>  // b.plast
   38224:	ldr	x9, [x9, #40]
   38228:	cmp	x9, x8
   3822c:	mov	w8, #0x5                   	// #5
   38230:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   38234:	ldr	x10, [x9, #144]
   38238:	cmp	x10, x8
   3823c:	b.ls	382a4 <PyInit__decimal@@Base+0x317f0>  // b.plast
   38240:	ldr	x10, [x9, #128]
   38244:	cmp	x10, x8
   38248:	b.ls	383a4 <PyInit__decimal@@Base+0x318f0>  // b.plast
   3824c:	ldr	x9, [x9, #120]
   38250:	cmp	x9, x8
   38254:	mov	w8, #0xf                   	// #15
   38258:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   3825c:	ldr	x9, [x9, #24]
   38260:	cmp	x9, x8
   38264:	mov	w8, #0x3                   	// #3
   38268:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   3826c:	ldr	x10, [x9, #104]
   38270:	cmp	x10, x8
   38274:	b.ls	383bc <PyInit__decimal@@Base+0x31908>  // b.plast
   38278:	ldr	x9, [x9, #96]
   3827c:	cmp	x9, x8
   38280:	mov	w8, #0xc                   	// #12
   38284:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   38288:	ldr	x10, [x9, #64]
   3828c:	cmp	x10, x8
   38290:	b.ls	383c8 <PyInit__decimal@@Base+0x31914>  // b.plast
   38294:	ldr	x9, [x9, #56]
   38298:	cmp	x9, x8
   3829c:	mov	w8, #0x7                   	// #7
   382a0:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   382a4:	ldr	x9, [x9, #152]
   382a8:	cmp	x9, x8
   382ac:	mov	w8, #0x13                  	// #19
   382b0:	b	383b0 <PyInit__decimal@@Base+0x318fc>
   382b4:	cbz	x22, 38530 <PyInit__decimal@@Base+0x31a7c>
   382b8:	ldrb	w8, [x19]
   382bc:	mvn	w8, w8
   382c0:	and	w8, w8, #0x1
   382c4:	b	3834c <PyInit__decimal@@Base+0x31898>
   382c8:	cbz	x22, 38530 <PyInit__decimal@@Base+0x31a7c>
   382cc:	ldrb	w8, [x19]
   382d0:	and	w8, w8, #0x1
   382d4:	b	3834c <PyInit__decimal@@Base+0x31898>
   382d8:	cmp	x22, #0x4
   382dc:	cset	w8, hi  // hi = pmore
   382e0:	b	3834c <PyInit__decimal@@Base+0x31898>
   382e4:	cmp	x22, #0x5
   382e8:	cset	w8, hi  // hi = pmore
   382ec:	b	3834c <PyInit__decimal@@Base+0x31898>
   382f0:	cmp	x22, #0x5
   382f4:	b.hi	38350 <PyInit__decimal@@Base+0x3189c>  // b.pmore
   382f8:	b.ne	38530 <PyInit__decimal@@Base+0x31a7c>  // b.any
   382fc:	ldr	x8, [x19, #40]
   38300:	ldr	w8, [x8]
   38304:	and	w8, w8, #0x1
   38308:	b	3834c <PyInit__decimal@@Base+0x31898>
   3830c:	ldr	x8, [x19, #40]
   38310:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   38314:	movk	x9, #0xcccd
   38318:	mov	w10, #0xa                   	// #10
   3831c:	ldr	x8, [x8]
   38320:	cmp	x22, #0x0
   38324:	cset	w11, ne  // ne = any
   38328:	umulh	x9, x8, x9
   3832c:	lsr	x9, x9, #3
   38330:	msub	w8, w9, w10, w8
   38334:	cmp	w8, #0x0
   38338:	cset	w9, eq  // eq = none
   3833c:	cmp	w8, #0x5
   38340:	cset	w8, eq  // eq = none
   38344:	orr	w8, w9, w8
   38348:	and	w8, w11, w8
   3834c:	cbz	w8, 38530 <PyInit__decimal@@Base+0x31a7c>
   38350:	ldr	x0, [x19, #40]
   38354:	ldr	x1, [x19, #24]
   38358:	bl	1c45c <PyInit__decimal@@Base+0x159a8>
   3835c:	cbz	x0, 38398 <PyInit__decimal@@Base+0x318e4>
   38360:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   38364:	ldr	x10, [x9, #1344]
   38368:	ldp	x8, x9, [x19, #24]
   3836c:	add	x11, x8, #0x1
   38370:	cmp	x10, x11
   38374:	csinc	x1, x10, x8, ge  // ge = tcont
   38378:	cmp	x1, x9
   3837c:	b.eq	383f0 <PyInit__decimal@@Base+0x3193c>  // b.none
   38380:	ldrb	w10, [x19]
   38384:	tbnz	w10, #5, 383d4 <PyInit__decimal@@Base+0x31920>
   38388:	mov	x0, x19
   3838c:	mov	x2, x20
   38390:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   38394:	b	383e8 <PyInit__decimal@@Base+0x31934>
   38398:	ldr	x9, [x19, #40]
   3839c:	ldr	x8, [x19, #24]
   383a0:	b	38408 <PyInit__decimal@@Base+0x31954>
   383a4:	ldr	x9, [x9, #136]
   383a8:	cmp	x9, x8
   383ac:	mov	w8, #0x11                  	// #17
   383b0:	cinc	x8, x8, ls  // ls = plast
   383b4:	str	x8, [x19, #16]
   383b8:	b	38550 <PyInit__decimal@@Base+0x31a9c>
   383bc:	mov	w8, #0xe                   	// #14
   383c0:	str	x8, [x19, #16]
   383c4:	b	38550 <PyInit__decimal@@Base+0x31a9c>
   383c8:	mov	w8, #0x9                   	// #9
   383cc:	str	x8, [x19, #16]
   383d0:	b	38550 <PyInit__decimal@@Base+0x31a9c>
   383d4:	cmp	x1, x9
   383d8:	b.le	383f0 <PyInit__decimal@@Base+0x3193c>
   383dc:	mov	x0, x19
   383e0:	mov	x2, x20
   383e4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   383e8:	cbz	w0, 38530 <PyInit__decimal@@Base+0x31a7c>
   383ec:	ldr	x8, [x19, #24]
   383f0:	ldr	x9, [x19, #40]
   383f4:	mov	w10, #0x1                   	// #1
   383f8:	str	x10, [x9, x8, lsl #3]
   383fc:	ldr	x8, [x19, #24]
   38400:	add	x8, x8, #0x1
   38404:	str	x8, [x19, #24]
   38408:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   3840c:	add	x9, x9, x8, lsl #3
   38410:	add	x10, x10, #0xca0
   38414:	ldur	x9, [x9, #-8]
   38418:	ldr	x11, [x10, #72]
   3841c:	cmp	x11, x9
   38420:	b.ls	3844c <PyInit__decimal@@Base+0x31998>  // b.plast
   38424:	ldr	x11, [x10, #32]
   38428:	cmp	x11, x9
   3842c:	b.ls	38474 <PyInit__decimal@@Base+0x319c0>  // b.plast
   38430:	ldr	x11, [x10, #16]
   38434:	cmp	x11, x9
   38438:	b.ls	384b8 <PyInit__decimal@@Base+0x31a04>  // b.plast
   3843c:	ldr	x10, [x10, #8]
   38440:	cmp	x10, x9
   38444:	mov	w9, #0x1                   	// #1
   38448:	b	3851c <PyInit__decimal@@Base+0x31a68>
   3844c:	ldr	x11, [x10, #112]
   38450:	cmp	x11, x9
   38454:	b.ls	38490 <PyInit__decimal@@Base+0x319dc>  // b.plast
   38458:	ldr	x11, [x10, #88]
   3845c:	cmp	x11, x9
   38460:	b.ls	384c8 <PyInit__decimal@@Base+0x31a14>  // b.plast
   38464:	ldr	x10, [x10, #80]
   38468:	cmp	x10, x9
   3846c:	mov	w9, #0xa                   	// #10
   38470:	b	3851c <PyInit__decimal@@Base+0x31a68>
   38474:	ldr	x11, [x10, #48]
   38478:	cmp	x11, x9
   3847c:	b.ls	384e4 <PyInit__decimal@@Base+0x31a30>  // b.plast
   38480:	ldr	x10, [x10, #40]
   38484:	cmp	x10, x9
   38488:	mov	w9, #0x5                   	// #5
   3848c:	b	3851c <PyInit__decimal@@Base+0x31a68>
   38490:	ldr	x11, [x10, #144]
   38494:	cmp	x11, x9
   38498:	b.ls	38500 <PyInit__decimal@@Base+0x31a4c>  // b.plast
   3849c:	ldr	x11, [x10, #128]
   384a0:	cmp	x11, x9
   384a4:	b.ls	38510 <PyInit__decimal@@Base+0x31a5c>  // b.plast
   384a8:	ldr	x10, [x10, #120]
   384ac:	cmp	x10, x9
   384b0:	mov	w9, #0xf                   	// #15
   384b4:	b	3851c <PyInit__decimal@@Base+0x31a68>
   384b8:	ldr	x10, [x10, #24]
   384bc:	cmp	x10, x9
   384c0:	mov	w9, #0x3                   	// #3
   384c4:	b	3851c <PyInit__decimal@@Base+0x31a68>
   384c8:	ldr	x11, [x10, #104]
   384cc:	cmp	x11, x9
   384d0:	b.ls	38564 <PyInit__decimal@@Base+0x31ab0>  // b.plast
   384d4:	ldr	x10, [x10, #96]
   384d8:	cmp	x10, x9
   384dc:	mov	w9, #0xc                   	// #12
   384e0:	b	3851c <PyInit__decimal@@Base+0x31a68>
   384e4:	ldr	x11, [x10, #64]
   384e8:	cmp	x11, x9
   384ec:	b.ls	3856c <PyInit__decimal@@Base+0x31ab8>  // b.plast
   384f0:	ldr	x10, [x10, #56]
   384f4:	cmp	x10, x9
   384f8:	mov	w9, #0x7                   	// #7
   384fc:	b	3851c <PyInit__decimal@@Base+0x31a68>
   38500:	ldr	x10, [x10, #152]
   38504:	cmp	x10, x9
   38508:	mov	w9, #0x13                  	// #19
   3850c:	b	3851c <PyInit__decimal@@Base+0x31a68>
   38510:	ldr	x10, [x10, #136]
   38514:	cmp	x10, x9
   38518:	mov	w9, #0x11                  	// #17
   3851c:	cinc	x9, x9, ls  // ls = plast
   38520:	mov	w10, #0x13                  	// #19
   38524:	madd	x8, x8, x10, x9
   38528:	sub	x8, x8, #0x13
   3852c:	str	x8, [x19, #16]
   38530:	cbnz	w21, 38550 <PyInit__decimal@@Base+0x31a9c>
   38534:	ldr	w8, [x20]
   38538:	orr	w9, w8, #0x1000
   3853c:	str	w9, [x20]
   38540:	cbz	x22, 38550 <PyInit__decimal@@Base+0x31a9c>
   38544:	mov	w9, #0x1040                	// #4160
   38548:	orr	w8, w8, w9
   3854c:	str	w8, [x20]
   38550:	ldp	x20, x19, [sp, #48]
   38554:	ldp	x22, x21, [sp, #32]
   38558:	ldr	x23, [sp, #16]
   3855c:	ldp	x29, x30, [sp], #64
   38560:	ret
   38564:	mov	w9, #0xe                   	// #14
   38568:	b	38520 <PyInit__decimal@@Base+0x31a6c>
   3856c:	mov	w9, #0x9                   	// #9
   38570:	b	38520 <PyInit__decimal@@Base+0x31a6c>
   38574:	mov	x8, x0
   38578:	mov	x4, x3
   3857c:	mov	x3, x2
   38580:	mov	w0, #0x2                   	// #2
   38584:	mov	x2, x1
   38588:	mov	x1, x8
   3858c:	b	37f5c <PyInit__decimal@@Base+0x314a8>
   38590:	sub	sp, sp, #0x40
   38594:	stp	x29, x30, [sp, #48]
   38598:	add	x29, sp, #0x30
   3859c:	ldp	q1, q0, [x2, #16]
   385a0:	ldr	q2, [x2]
   385a4:	mov	x8, x1
   385a8:	mov	x4, x3
   385ac:	mov	x1, x0
   385b0:	mov	w9, #0x3                   	// #3
   385b4:	mov	x3, sp
   385b8:	mov	w0, #0x1                   	// #1
   385bc:	mov	x2, x8
   385c0:	stp	q1, q0, [sp, #16]
   385c4:	str	q2, [sp]
   385c8:	str	w9, [sp, #36]
   385cc:	bl	37f5c <PyInit__decimal@@Base+0x314a8>
   385d0:	ldp	x29, x30, [sp, #48]
   385d4:	add	sp, sp, #0x40
   385d8:	ret
   385dc:	sub	sp, sp, #0x40
   385e0:	stp	x29, x30, [sp, #48]
   385e4:	add	x29, sp, #0x30
   385e8:	ldp	q1, q0, [x2, #16]
   385ec:	ldr	q2, [x2]
   385f0:	mov	x8, x1
   385f4:	mov	x4, x3
   385f8:	mov	x1, x0
   385fc:	mov	w9, #0x2                   	// #2
   38600:	mov	x3, sp
   38604:	mov	w0, #0x1                   	// #1
   38608:	mov	x2, x8
   3860c:	stp	q1, q0, [sp, #16]
   38610:	str	q2, [sp]
   38614:	str	w9, [sp, #36]
   38618:	bl	37f5c <PyInit__decimal@@Base+0x314a8>
   3861c:	ldp	x29, x30, [sp, #48]
   38620:	add	sp, sp, #0x40
   38624:	ret
   38628:	ldrb	w8, [x0]
   3862c:	tst	w8, #0xe
   38630:	b.ne	38640 <PyInit__decimal@@Base+0x31b8c>  // b.any
   38634:	ldrb	w9, [x1]
   38638:	tst	w9, #0xe
   3863c:	b.eq	38674 <PyInit__decimal@@Base+0x31bc0>  // b.none
   38640:	tst	w8, #0xc
   38644:	b.eq	3865c <PyInit__decimal@@Base+0x31ba8>  // b.none
   38648:	ldrb	w9, [x1]
   3864c:	tst	w9, #0xc
   38650:	b.eq	3865c <PyInit__decimal@@Base+0x31ba8>  // b.none
   38654:	mov	w0, #0x1                   	// #1
   38658:	ret
   3865c:	tbnz	w8, #1, 38668 <PyInit__decimal@@Base+0x31bb4>
   38660:	mov	w0, wzr
   38664:	ret
   38668:	ldrb	w8, [x1]
   3866c:	ubfx	w0, w8, #1, #1
   38670:	ret
   38674:	ldr	x8, [x0, #8]
   38678:	ldr	x9, [x1, #8]
   3867c:	cmp	x8, x9
   38680:	cset	w0, eq  // eq = none
   38684:	ret
   38688:	stp	x29, x30, [sp, #-96]!
   3868c:	stp	x28, x27, [sp, #16]
   38690:	stp	x26, x25, [sp, #32]
   38694:	stp	x24, x23, [sp, #48]
   38698:	stp	x22, x21, [sp, #64]
   3869c:	stp	x20, x19, [sp, #80]
   386a0:	mov	x29, sp
   386a4:	sub	sp, sp, #0x770
   386a8:	ldrb	w8, [x1]
   386ac:	mov	x19, x3
   386b0:	mov	x21, x2
   386b4:	mov	x23, x1
   386b8:	tst	w8, #0xe
   386bc:	mov	x20, x0
   386c0:	b.eq	38798 <PyInit__decimal@@Base+0x31ce4>  // b.none
   386c4:	mov	x0, x20
   386c8:	mov	x1, x23
   386cc:	mov	x2, x21
   386d0:	mov	x3, x19
   386d4:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   386d8:	cbnz	w0, 39194 <PyInit__decimal@@Base+0x326e0>
   386dc:	ldrb	w8, [x23]
   386e0:	tbnz	w8, #0, 3892c <PyInit__decimal@@Base+0x31e78>
   386e4:	ldr	x9, [x21, #16]
   386e8:	ldr	x10, [x21]
   386ec:	ldrb	w8, [x20]
   386f0:	sub	x9, x9, x10
   386f4:	add	x21, x9, #0x1
   386f8:	tbnz	w8, #5, 3873c <PyInit__decimal@@Base+0x31c88>
   386fc:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   38700:	ldr	x9, [x20, #32]
   38704:	ldr	x1, [x22, #1344]
   38708:	cmp	x9, x1
   3870c:	b.le	3873c <PyInit__decimal@@Base+0x31c88>
   38710:	strb	wzr, [sp, #1232]
   38714:	ldr	x0, [x20, #40]
   38718:	add	x3, sp, #0x4d0
   3871c:	mov	w2, #0x8                   	// #8
   38720:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   38724:	str	x0, [x20, #40]
   38728:	ldrb	w8, [sp, #1232]
   3872c:	cbnz	w8, 38738 <PyInit__decimal@@Base+0x31c84>
   38730:	ldr	x8, [x22, #1344]
   38734:	str	x8, [x20, #32]
   38738:	ldrb	w8, [x20]
   3873c:	ldr	x10, [x20, #40]
   38740:	and	w8, w8, #0xf0
   38744:	mov	w11, #0x1                   	// #1
   38748:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   3874c:	str	x21, [x20, #8]
   38750:	add	x9, x9, #0xca0
   38754:	strb	w8, [x20]
   38758:	stp	xzr, xzr, [x10]
   3875c:	str	x11, [x20, #24]
   38760:	ldr	x8, [x10]
   38764:	ldr	x10, [x9, #72]
   38768:	cmp	x10, x8
   3876c:	b.ls	38a08 <PyInit__decimal@@Base+0x31f54>  // b.plast
   38770:	ldr	x10, [x9, #32]
   38774:	cmp	x10, x8
   38778:	b.ls	38b0c <PyInit__decimal@@Base+0x32058>  // b.plast
   3877c:	ldr	x10, [x9, #16]
   38780:	cmp	x10, x8
   38784:	b.ls	38d7c <PyInit__decimal@@Base+0x322c8>  // b.plast
   38788:	ldr	x9, [x9, #8]
   3878c:	cmp	x9, x8
   38790:	mov	w8, #0x1                   	// #1
   38794:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38798:	ldr	x10, [x23, #40]
   3879c:	ldr	x0, [x23, #24]
   387a0:	and	w22, w8, #0x1
   387a4:	add	x9, x10, x0, lsl #3
   387a8:	ldur	x9, [x9, #-8]
   387ac:	cbz	x9, 38998 <PyInit__decimal@@Base+0x31ee4>
   387b0:	cbnz	w22, 3892c <PyInit__decimal@@Base+0x31e78>
   387b4:	mov	w9, #0x50                  	// #80
   387b8:	bfxil	w9, w8, #0, #4
   387bc:	ldr	x24, [x21]
   387c0:	stur	wzr, [x29, #-12]
   387c4:	mov	x25, x23
   387c8:	sturb	w9, [x29, #-160]
   387cc:	ldr	x8, [x25, #8]!
   387d0:	adrp	x14, 45000 <PyInit__decimal@@Base+0x3e54c>
   387d4:	ldr	x9, [x23, #16]
   387d8:	ldr	q1, [x14, #2480]
   387dc:	mov	w13, #0x1                   	// #1
   387e0:	add	x11, sp, #0x200
   387e4:	mov	w12, #0x90                  	// #144
   387e8:	adrp	x15, 3e000 <PyInit__decimal@@Base+0x3754c>
   387ec:	dup	v0.2d, x13
   387f0:	stp	x8, x9, [x29, #-152]
   387f4:	stur	x0, [x29, #-136]
   387f8:	ldr	x14, [x23, #32]
   387fc:	strb	w12, [sp, #568]
   38800:	stp	q1, q0, [x11, #64]
   38804:	ldr	q1, [x15, #1552]
   38808:	and	x15, x8, #0xfffffffffffffffe
   3880c:	neg	x16, x15
   38810:	cmp	x16, #0x0
   38814:	sub	x13, x13, x15
   38818:	csneg	x26, x13, x15, lt  // lt = tstop
   3881c:	add	x13, sp, #0x4d0
   38820:	str	x13, [sp, #1224]
   38824:	mov	w13, #0x30                  	// #48
   38828:	strb	w13, [sp, #1184]
   3882c:	strb	w13, [sp, #624]
   38830:	mov	w13, #0x40                  	// #64
   38834:	str	x13, [sp, #1216]
   38838:	str	x13, [sp, #656]
   3883c:	add	x13, sp, #0x2a0
   38840:	str	x13, [sp, #664]
   38844:	mov	w13, #0x5                   	// #5
   38848:	str	x13, [sp, #616]
   3884c:	add	x13, sp, #0x268
   38850:	str	x13, [sp, #608]
   38854:	mov	w13, #0x3                   	// #3
   38858:	strb	w12, [sp, #512]
   3885c:	stur	q0, [x11, #24]
   38860:	stur	q1, [x11, #8]
   38864:	add	x11, sp, #0x230
   38868:	cmp	x20, x23
   3886c:	str	xzr, [sp, #1208]
   38870:	str	xzr, [sp, #648]
   38874:	str	x13, [sp, #560]
   38878:	str	xzr, [sp, #1192]
   3887c:	str	xzr, [sp, #1200]
   38880:	str	xzr, [sp, #632]
   38884:	str	xzr, [sp, #640]
   38888:	stp	x14, x10, [x29, #-128]
   3888c:	str	x11, [sp, #552]
   38890:	b.eq	38a30 <PyInit__decimal@@Base+0x31f7c>  // b.none
   38894:	sub	x22, x29, #0xa0
   38898:	add	w8, w9, w8
   3889c:	tbnz	w8, #0, 38a80 <PyInit__decimal@@Base+0x31fcc>
   388a0:	mov	x12, #0x435f                	// #17247
   388a4:	movk	x12, #0xd79, lsl #16
   388a8:	movk	x12, #0x35e5, lsl #32
   388ac:	movk	x12, #0xd794, lsl #48
   388b0:	ldr	x11, [x22, #40]
   388b4:	umulh	x12, x9, x12
   388b8:	mov	w8, #0x2                   	// #2
   388bc:	cmp	x9, #0x8
   388c0:	mov	w10, #0x8                   	// #8
   388c4:	mov	w13, #0x13                  	// #19
   388c8:	lsr	x12, x12, #4
   388cc:	sub	x8, x8, x9
   388d0:	csel	x10, x9, x10, lt  // lt = tstop
   388d4:	msub	x9, x12, x13, x9
   388d8:	str	x8, [x22, #8]
   388dc:	cmp	x9, #0x0
   388e0:	add	x12, x11, x0, lsl #3
   388e4:	csel	x13, x13, x9, eq  // eq = none
   388e8:	ldur	x9, [x12, #-8]
   388ec:	and	x14, x10, #0xffffffff
   388f0:	subs	x12, x13, x14
   388f4:	b.cs	38b50 <PyInit__decimal@@Base+0x3209c>  // b.hs, b.nlast
   388f8:	cmp	x0, #0x2
   388fc:	b.lt	38b60 <PyInit__decimal@@Base+0x320ac>  // b.tstop
   38900:	sub	x13, x14, x13
   38904:	adrp	x14, 44000 <PyInit__decimal@@Base+0x3d54c>
   38908:	add	x14, x14, #0xca0
   3890c:	add	x11, x11, x0, lsl #3
   38910:	add	x12, x14, x12, lsl #3
   38914:	ldur	x11, [x11, #-16]
   38918:	ldr	x12, [x12, #152]
   3891c:	ldr	x13, [x14, x13, lsl #3]
   38920:	udiv	x11, x11, x12
   38924:	madd	x9, x13, x9, x11
   38928:	b	38b60 <PyInit__decimal@@Base+0x320ac>
   3892c:	ldrb	w8, [x20]
   38930:	tbnz	w8, #5, 38974 <PyInit__decimal@@Base+0x31ec0>
   38934:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   38938:	ldr	x9, [x20, #32]
   3893c:	ldr	x1, [x21, #1344]
   38940:	cmp	x9, x1
   38944:	b.le	38974 <PyInit__decimal@@Base+0x31ec0>
   38948:	strb	wzr, [sp, #1232]
   3894c:	ldr	x0, [x20, #40]
   38950:	add	x3, sp, #0x4d0
   38954:	mov	w2, #0x8                   	// #8
   38958:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3895c:	str	x0, [x20, #40]
   38960:	ldrb	w8, [sp, #1232]
   38964:	cbnz	w8, 38970 <PyInit__decimal@@Base+0x31ebc>
   38968:	ldr	x8, [x21, #1344]
   3896c:	str	x8, [x20, #32]
   38970:	ldrb	w8, [x20]
   38974:	and	w8, w8, #0xf0
   38978:	orr	w8, w8, #0x4
   3897c:	stp	xzr, xzr, [x20, #16]
   38980:	strb	w8, [x20]
   38984:	str	xzr, [x20, #8]
   38988:	ldr	w8, [x19]
   3898c:	orr	w8, w8, #0x100
   38990:	str	w8, [x19]
   38994:	b	39194 <PyInit__decimal@@Base+0x326e0>
   38998:	ldrb	w8, [x20]
   3899c:	tbnz	w8, #5, 389e0 <PyInit__decimal@@Base+0x31f2c>
   389a0:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   389a4:	ldr	x9, [x20, #32]
   389a8:	ldr	x1, [x21, #1344]
   389ac:	cmp	x9, x1
   389b0:	b.le	389e0 <PyInit__decimal@@Base+0x31f2c>
   389b4:	strb	wzr, [sp, #1232]
   389b8:	ldr	x0, [x20, #40]
   389bc:	add	x3, sp, #0x4d0
   389c0:	mov	w2, #0x8                   	// #8
   389c4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   389c8:	str	x0, [x20, #40]
   389cc:	ldrb	w8, [sp, #1232]
   389d0:	cbnz	w8, 389dc <PyInit__decimal@@Base+0x31f28>
   389d4:	ldr	x8, [x21, #1344]
   389d8:	str	x8, [x20, #32]
   389dc:	ldrb	w8, [x20]
   389e0:	and	w8, w8, #0xf0
   389e4:	orr	w8, w22, w8
   389e8:	orr	w8, w8, #0x2
   389ec:	stp	xzr, xzr, [x20, #16]
   389f0:	strb	w8, [x20]
   389f4:	str	xzr, [x20, #8]
   389f8:	ldr	w8, [x19]
   389fc:	orr	w8, w8, #0x4
   38a00:	str	w8, [x19]
   38a04:	b	39194 <PyInit__decimal@@Base+0x326e0>
   38a08:	ldr	x10, [x9, #112]
   38a0c:	cmp	x10, x8
   38a10:	b.ls	38b28 <PyInit__decimal@@Base+0x32074>  // b.plast
   38a14:	ldr	x10, [x9, #88]
   38a18:	cmp	x10, x8
   38a1c:	b.ls	38d8c <PyInit__decimal@@Base+0x322d8>  // b.plast
   38a20:	ldr	x9, [x9, #80]
   38a24:	cmp	x9, x8
   38a28:	mov	w8, #0xa                   	// #10
   38a2c:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38a30:	bl	21f6c <PyInit__decimal@@Base+0x1b4b8>
   38a34:	cbz	x0, 38d14 <PyInit__decimal@@Base+0x32260>
   38a38:	ldr	x8, [x23, #24]
   38a3c:	mov	x22, x0
   38a40:	ldr	x0, [x0, #40]
   38a44:	ldr	x1, [x23, #40]
   38a48:	lsl	x2, x8, #3
   38a4c:	bl	63c0 <memcpy@plt>
   38a50:	ldrb	w8, [x23]
   38a54:	ldrb	w9, [x22]
   38a58:	bfxil	w9, w8, #0, #4
   38a5c:	strb	w9, [x22]
   38a60:	ldr	x8, [x23, #8]
   38a64:	str	x8, [x22, #8]
   38a68:	ldr	x9, [x23, #16]
   38a6c:	str	x9, [x22, #16]
   38a70:	ldr	x0, [x23, #24]
   38a74:	str	x0, [x22, #24]
   38a78:	add	w8, w9, w8
   38a7c:	tbz	w8, #0, 388a0 <PyInit__decimal@@Base+0x31dec>
   38a80:	mov	x12, #0x435f                	// #17247
   38a84:	movk	x12, #0xd79, lsl #16
   38a88:	movk	x12, #0x35e5, lsl #32
   38a8c:	movk	x12, #0xd794, lsl #48
   38a90:	ldr	x11, [x22, #40]
   38a94:	umulh	x12, x9, x12
   38a98:	mov	w8, #0x1                   	// #1
   38a9c:	cmp	x9, #0x7
   38aa0:	mov	w10, #0x7                   	// #7
   38aa4:	mov	w13, #0x13                  	// #19
   38aa8:	lsr	x12, x12, #4
   38aac:	sub	x8, x8, x9
   38ab0:	csel	x10, x9, x10, lt  // lt = tstop
   38ab4:	msub	x9, x12, x13, x9
   38ab8:	str	x8, [x22, #8]
   38abc:	cmp	x9, #0x0
   38ac0:	add	x12, x11, x0, lsl #3
   38ac4:	csel	x13, x13, x9, eq  // eq = none
   38ac8:	ldur	x9, [x12, #-8]
   38acc:	and	x14, x10, #0xffffffff
   38ad0:	subs	x12, x13, x14
   38ad4:	b.cs	38b70 <PyInit__decimal@@Base+0x320bc>  // b.hs, b.nlast
   38ad8:	cmp	x0, #0x2
   38adc:	b.lt	38b80 <PyInit__decimal@@Base+0x320cc>  // b.tstop
   38ae0:	sub	x13, x14, x13
   38ae4:	adrp	x14, 44000 <PyInit__decimal@@Base+0x3d54c>
   38ae8:	add	x14, x14, #0xca0
   38aec:	add	x11, x11, x0, lsl #3
   38af0:	add	x12, x14, x12, lsl #3
   38af4:	ldur	x11, [x11, #-16]
   38af8:	ldr	x12, [x12, #152]
   38afc:	ldr	x13, [x14, x13, lsl #3]
   38b00:	udiv	x11, x11, x12
   38b04:	madd	x9, x13, x9, x11
   38b08:	b	38b80 <PyInit__decimal@@Base+0x320cc>
   38b0c:	ldr	x10, [x9, #48]
   38b10:	cmp	x10, x8
   38b14:	b.ls	38da8 <PyInit__decimal@@Base+0x322f4>  // b.plast
   38b18:	ldr	x9, [x9, #40]
   38b1c:	cmp	x9, x8
   38b20:	mov	w8, #0x5                   	// #5
   38b24:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38b28:	ldr	x10, [x9, #144]
   38b2c:	cmp	x10, x8
   38b30:	b.ls	38dc4 <PyInit__decimal@@Base+0x32310>  // b.plast
   38b34:	ldr	x10, [x9, #128]
   38b38:	cmp	x10, x8
   38b3c:	b.ls	38e2c <PyInit__decimal@@Base+0x32378>  // b.plast
   38b40:	ldr	x9, [x9, #120]
   38b44:	cmp	x9, x8
   38b48:	mov	w8, #0xf                   	// #15
   38b4c:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38b50:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   38b54:	add	x11, x11, #0xca0
   38b58:	ldr	x11, [x11, x12, lsl #3]
   38b5c:	udiv	x9, x9, x11
   38b60:	cmp	w10, #0x7
   38b64:	b.gt	38ba4 <PyInit__decimal@@Base+0x320f0>
   38b68:	mov	x11, #0x800000000           	// #34359738368
   38b6c:	b	38b8c <PyInit__decimal@@Base+0x320d8>
   38b70:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   38b74:	add	x11, x11, #0xca0
   38b78:	ldr	x11, [x11, x12, lsl #3]
   38b7c:	udiv	x9, x9, x11
   38b80:	cmp	w10, #0x6
   38b84:	b.gt	38ba4 <PyInit__decimal@@Base+0x320f0>
   38b88:	mov	x11, #0x700000000           	// #30064771072
   38b8c:	sub	x10, x11, x10, lsl #32
   38b90:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   38b94:	asr	x10, x10, #29
   38b98:	add	x11, x11, #0xca0
   38b9c:	ldr	x10, [x11, x10]
   38ba0:	mul	x9, x10, x9
   38ba4:	ldr	x10, [x25]
   38ba8:	asr	x25, x26, #1
   38bac:	mov	w12, #0x3e8                 	// #1000
   38bb0:	mov	w11, #0x2710                	// #10000
   38bb4:	b	38bbc <PyInit__decimal@@Base+0x32108>
   38bb8:	sub	x11, x26, #0x1
   38bbc:	add	x13, x12, x11
   38bc0:	lsr	x26, x13, #1
   38bc4:	mul	x14, x26, x26
   38bc8:	cmp	x14, x9
   38bcc:	b.hi	38bb8 <PyInit__decimal@@Base+0x32104>  // b.pmore
   38bd0:	orr	x12, x13, #0x1
   38bd4:	add	x12, x14, x12
   38bd8:	cmp	x12, x9
   38bdc:	b.hi	38be8 <PyInit__decimal@@Base+0x32134>  // b.pmore
   38be0:	add	x12, x26, #0x1
   38be4:	b	38bbc <PyInit__decimal@@Base+0x32108>
   38be8:	ldrb	w9, [x20]
   38bec:	sub	x8, x10, x8
   38bf0:	cmp	x8, #0x0
   38bf4:	cinc	x23, x8, lt  // lt = tstop
   38bf8:	tbnz	w9, #5, 38c3c <PyInit__decimal@@Base+0x32188>
   38bfc:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
   38c00:	ldr	x8, [x20, #32]
   38c04:	ldr	x1, [x27, #1344]
   38c08:	cmp	x8, x1
   38c0c:	b.le	38c3c <PyInit__decimal@@Base+0x32188>
   38c10:	strb	wzr, [sp]
   38c14:	ldr	x0, [x20, #40]
   38c18:	mov	x3, sp
   38c1c:	mov	w2, #0x8                   	// #8
   38c20:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   38c24:	str	x0, [x20, #40]
   38c28:	ldrb	w8, [sp]
   38c2c:	cbnz	w8, 38c38 <PyInit__decimal@@Base+0x32184>
   38c30:	ldr	x8, [x27, #1344]
   38c34:	str	x8, [x20, #32]
   38c38:	ldrb	w9, [x20]
   38c3c:	ldr	x11, [x20, #40]
   38c40:	mov	w10, #0xca00                	// #51712
   38c44:	and	w8, w9, #0xf0
   38c48:	movk	w10, #0x3b9a, lsl #16
   38c4c:	mov	w12, #0x1                   	// #1
   38c50:	mov	x13, #0xfffffffffffffffa    	// #-6
   38c54:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   38c58:	strb	w8, [x20]
   38c5c:	udiv	x8, x10, x26
   38c60:	add	x9, x9, #0xca0
   38c64:	str	x8, [x11]
   38c68:	str	x12, [x20, #24]
   38c6c:	str	x13, [x20, #8]
   38c70:	ldr	x8, [x11]
   38c74:	ldr	x10, [x9, #72]
   38c78:	cmp	x10, x8
   38c7c:	b.ls	38ca8 <PyInit__decimal@@Base+0x321f4>  // b.plast
   38c80:	ldr	x10, [x9, #32]
   38c84:	cmp	x10, x8
   38c88:	b.ls	38cd0 <PyInit__decimal@@Base+0x3221c>  // b.plast
   38c8c:	ldr	x10, [x9, #16]
   38c90:	cmp	x10, x8
   38c94:	b.ls	38dd4 <PyInit__decimal@@Base+0x32320>  // b.plast
   38c98:	ldr	x9, [x9, #8]
   38c9c:	cmp	x9, x8
   38ca0:	mov	w8, #0x1                   	// #1
   38ca4:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38ca8:	ldr	x10, [x9, #112]
   38cac:	cmp	x10, x8
   38cb0:	b.ls	38cec <PyInit__decimal@@Base+0x32238>  // b.plast
   38cb4:	ldr	x10, [x9, #88]
   38cb8:	cmp	x10, x8
   38cbc:	b.ls	38de4 <PyInit__decimal@@Base+0x32330>  // b.plast
   38cc0:	ldr	x9, [x9, #80]
   38cc4:	cmp	x9, x8
   38cc8:	mov	w8, #0xa                   	// #10
   38ccc:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38cd0:	ldr	x10, [x9, #48]
   38cd4:	cmp	x10, x8
   38cd8:	b.ls	38e00 <PyInit__decimal@@Base+0x3234c>  // b.plast
   38cdc:	ldr	x9, [x9, #40]
   38ce0:	cmp	x9, x8
   38ce4:	mov	w8, #0x5                   	// #5
   38ce8:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38cec:	ldr	x10, [x9, #144]
   38cf0:	cmp	x10, x8
   38cf4:	b.ls	38e1c <PyInit__decimal@@Base+0x32368>  // b.plast
   38cf8:	ldr	x10, [x9, #128]
   38cfc:	cmp	x10, x8
   38d00:	b.ls	38e60 <PyInit__decimal@@Base+0x323ac>  // b.plast
   38d04:	ldr	x9, [x9, #120]
   38d08:	cmp	x9, x8
   38d0c:	mov	w8, #0xf                   	// #15
   38d10:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38d14:	ldrb	w8, [x23]
   38d18:	tbnz	w8, #5, 38d5c <PyInit__decimal@@Base+0x322a8>
   38d1c:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   38d20:	ldr	x9, [x23, #32]
   38d24:	ldr	x1, [x22, #1344]
   38d28:	cmp	x9, x1
   38d2c:	b.le	38d5c <PyInit__decimal@@Base+0x322a8>
   38d30:	strb	wzr, [sp]
   38d34:	ldr	x0, [x23, #40]
   38d38:	mov	x3, sp
   38d3c:	mov	w2, #0x8                   	// #8
   38d40:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   38d44:	str	x0, [x23, #40]
   38d48:	ldrb	w8, [sp]
   38d4c:	cbnz	w8, 38d58 <PyInit__decimal@@Base+0x322a4>
   38d50:	ldr	x8, [x22, #1344]
   38d54:	str	x8, [x23, #32]
   38d58:	ldrb	w8, [x23]
   38d5c:	and	w8, w8, #0xf0
   38d60:	orr	w8, w8, #0x4
   38d64:	strb	w8, [x23]
   38d68:	stp	xzr, xzr, [x25]
   38d6c:	str	xzr, [x25, #16]
   38d70:	ldr	w8, [x19]
   38d74:	orr	w8, w8, #0x200
   38d78:	b	39180 <PyInit__decimal@@Base+0x326cc>
   38d7c:	ldr	x9, [x9, #24]
   38d80:	cmp	x9, x8
   38d84:	mov	w8, #0x3                   	// #3
   38d88:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38d8c:	ldr	x10, [x9, #104]
   38d90:	cmp	x10, x8
   38d94:	b.ls	38e50 <PyInit__decimal@@Base+0x3239c>  // b.plast
   38d98:	ldr	x9, [x9, #96]
   38d9c:	cmp	x9, x8
   38da0:	mov	w8, #0xc                   	// #12
   38da4:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38da8:	ldr	x10, [x9, #64]
   38dac:	cmp	x10, x8
   38db0:	b.ls	38e58 <PyInit__decimal@@Base+0x323a4>  // b.plast
   38db4:	ldr	x9, [x9, #56]
   38db8:	cmp	x9, x8
   38dbc:	mov	w8, #0x7                   	// #7
   38dc0:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38dc4:	ldr	x9, [x9, #152]
   38dc8:	cmp	x9, x8
   38dcc:	mov	w8, #0x13                  	// #19
   38dd0:	b	38e38 <PyInit__decimal@@Base+0x32384>
   38dd4:	ldr	x9, [x9, #24]
   38dd8:	cmp	x9, x8
   38ddc:	mov	w8, #0x3                   	// #3
   38de0:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38de4:	ldr	x10, [x9, #104]
   38de8:	cmp	x10, x8
   38dec:	b.ls	391b4 <PyInit__decimal@@Base+0x32700>  // b.plast
   38df0:	ldr	x9, [x9, #96]
   38df4:	cmp	x9, x8
   38df8:	mov	w8, #0xc                   	// #12
   38dfc:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38e00:	ldr	x10, [x9, #64]
   38e04:	cmp	x10, x8
   38e08:	b.ls	391bc <PyInit__decimal@@Base+0x32708>  // b.plast
   38e0c:	ldr	x9, [x9, #56]
   38e10:	cmp	x9, x8
   38e14:	mov	w8, #0x7                   	// #7
   38e18:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38e1c:	ldr	x9, [x9, #152]
   38e20:	cmp	x9, x8
   38e24:	mov	w8, #0x13                  	// #19
   38e28:	b	38e6c <PyInit__decimal@@Base+0x323b8>
   38e2c:	ldr	x9, [x9, #136]
   38e30:	cmp	x9, x8
   38e34:	mov	w8, #0x11                  	// #17
   38e38:	cinc	x8, x8, ls  // ls = plast
   38e3c:	str	x8, [x20, #16]
   38e40:	ldr	w8, [x19]
   38e44:	orr	w8, w8, #0x1
   38e48:	str	w8, [x19]
   38e4c:	b	39194 <PyInit__decimal@@Base+0x326e0>
   38e50:	mov	w8, #0xe                   	// #14
   38e54:	b	38e3c <PyInit__decimal@@Base+0x32388>
   38e58:	mov	w8, #0x9                   	// #9
   38e5c:	b	38e3c <PyInit__decimal@@Base+0x32388>
   38e60:	ldr	x9, [x9, #136]
   38e64:	cmp	x9, x8
   38e68:	mov	w8, #0x11                  	// #17
   38e6c:	cinc	x8, x8, ls  // ls = plast
   38e70:	sub	x0, x29, #0x70
   38e74:	asr	x26, x23, #1
   38e78:	str	x8, [x20, #16]
   38e7c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   38e80:	sub	x0, x29, #0x40
   38e84:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   38e88:	add	x9, x24, #0x3
   38e8c:	mov	w8, #0x8                   	// #8
   38e90:	cmp	x9, #0x4
   38e94:	stur	w8, [x29, #-28]
   38e98:	b.lt	38fe8 <PyInit__decimal@@Base+0x32534>  // b.tstop
   38e9c:	mov	w8, #0xffffffff            	// #-1
   38ea0:	mov	x10, sp
   38ea4:	add	x11, x9, #0x3
   38ea8:	add	x9, x9, #0x4
   38eac:	cmp	x11, #0x0
   38eb0:	csel	x9, x9, x11, lt  // lt = tstop
   38eb4:	add	w8, w8, #0x1
   38eb8:	asr	x9, x9, #1
   38ebc:	cmp	x11, #0x7
   38ec0:	str	x9, [x10, w8, sxtw #3]
   38ec4:	b.gt	38ea4 <PyInit__decimal@@Base+0x323f0>
   38ec8:	tbnz	w8, #31, 38fe8 <PyInit__decimal@@Base+0x32534>
   38ecc:	mov	w27, w8
   38ed0:	mov	x28, sp
   38ed4:	b	38f74 <PyInit__decimal@@Base+0x324c0>
   38ed8:	add	x0, sp, #0x270
   38edc:	add	x2, sp, #0x4a0
   38ee0:	sub	x3, x29, #0x40
   38ee4:	sub	x4, x29, #0xc
   38ee8:	mov	x1, x23
   38eec:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   38ef0:	add	x0, sp, #0x270
   38ef4:	sub	x1, x29, #0x40
   38ef8:	sub	x2, x29, #0xc
   38efc:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   38f00:	add	x0, sp, #0x270
   38f04:	add	x1, sp, #0x200
   38f08:	add	x2, sp, #0x270
   38f0c:	sub	x3, x29, #0x70
   38f10:	sub	x4, x29, #0xc
   38f14:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   38f18:	add	x2, sp, #0x270
   38f1c:	sub	x3, x29, #0x40
   38f20:	sub	x4, x29, #0xc
   38f24:	mov	x0, x20
   38f28:	mov	x1, x20
   38f2c:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   38f30:	sub	x1, x29, #0x40
   38f34:	sub	x2, x29, #0xc
   38f38:	mov	x0, x20
   38f3c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   38f40:	add	x2, sp, #0x238
   38f44:	sub	x3, x29, #0x70
   38f48:	sub	x4, x29, #0xc
   38f4c:	mov	x0, x20
   38f50:	mov	x1, x20
   38f54:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   38f58:	sub	x1, x29, #0x70
   38f5c:	sub	x2, x29, #0xc
   38f60:	mov	x0, x20
   38f64:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   38f68:	cmp	x27, #0x0
   38f6c:	sub	x27, x27, #0x1
   38f70:	b.le	38fe8 <PyInit__decimal@@Base+0x32534>
   38f74:	ldr	x8, [x28, x27, lsl #3]
   38f78:	add	x0, sp, #0x4a0
   38f7c:	sub	x3, x29, #0x70
   38f80:	sub	x4, x29, #0xc
   38f84:	lsl	x8, x8, #1
   38f88:	add	x8, x8, #0x2
   38f8c:	mov	x1, x20
   38f90:	mov	x2, x20
   38f94:	stur	x8, [x29, #-64]
   38f98:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   38f9c:	add	x0, sp, #0x4a0
   38fa0:	sub	x1, x29, #0x70
   38fa4:	sub	x2, x29, #0xc
   38fa8:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   38fac:	ldr	x8, [x22, #16]
   38fb0:	ldur	x9, [x29, #-64]
   38fb4:	mov	x23, x22
   38fb8:	subs	x24, x8, x9
   38fbc:	b.le	38ed8 <PyInit__decimal@@Base+0x32424>
   38fc0:	add	x0, sp, #0x270
   38fc4:	sub	x3, x29, #0xc
   38fc8:	mov	x1, x22
   38fcc:	mov	x2, x24
   38fd0:	add	x23, sp, #0x270
   38fd4:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   38fd8:	ldr	x8, [sp, #632]
   38fdc:	add	x8, x8, x24
   38fe0:	str	x8, [sp, #632]
   38fe4:	b	38ed8 <PyInit__decimal@@Base+0x32424>
   38fe8:	ldr	x8, [x20, #8]
   38fec:	ldr	x10, [x20, #24]
   38ff0:	sub	x8, x8, x26
   38ff4:	cmp	x10, #0x1
   38ff8:	str	x8, [x20, #8]
   38ffc:	b.lt	39020 <PyInit__decimal@@Base+0x3256c>  // b.tstop
   39000:	ldr	x12, [x20, #40]
   39004:	mov	x9, xzr
   39008:	ldr	x11, [x12]
   3900c:	cbnz	x11, 39028 <PyInit__decimal@@Base+0x32574>
   39010:	add	x9, x9, #0x13
   39014:	subs	x10, x10, #0x1
   39018:	add	x12, x12, #0x8
   3901c:	b.ne	39008 <PyInit__decimal@@Base+0x32554>  // b.any
   39020:	mov	x9, xzr
   39024:	b	39070 <PyInit__decimal@@Base+0x325bc>
   39028:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   3902c:	movk	x10, #0xcccd
   39030:	mul	x12, x11, x10
   39034:	mov	x13, #0x9999999999999999    	// #-7378697629483820647
   39038:	ror	x12, x12, #1
   3903c:	movk	x13, #0x1999, lsl #48
   39040:	cmp	x12, x13
   39044:	b.hi	39070 <PyInit__decimal@@Base+0x325bc>  // b.pmore
   39048:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   3904c:	movk	x12, #0x999a
   39050:	movk	x12, #0x1999, lsl #48
   39054:	umulh	x11, x11, x10
   39058:	lsr	x11, x11, #3
   3905c:	mul	x13, x11, x10
   39060:	ror	x13, x13, #1
   39064:	cmp	x13, x12
   39068:	add	x9, x9, #0x1
   3906c:	b.cc	39054 <PyInit__decimal@@Base+0x325a0>  // b.lo, b.ul, b.last
   39070:	sub	x8, x25, x8
   39074:	cmp	x9, x8
   39078:	csel	x23, x8, x9, gt
   3907c:	cmp	x23, #0x1
   39080:	b.lt	3909c <PyInit__decimal@@Base+0x325e8>  // b.tstop
   39084:	mov	x0, x20
   39088:	mov	x1, x23
   3908c:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   39090:	ldr	x8, [x20, #8]
   39094:	add	x8, x8, x23
   39098:	str	x8, [x20, #8]
   3909c:	ldrb	w8, [sp, #1184]
   390a0:	cmp	w8, #0x1f
   390a4:	b.ls	390cc <PyInit__decimal@@Base+0x32618>  // b.plast
   390a8:	tbz	w8, #4, 390e4 <PyInit__decimal@@Base+0x32630>
   390ac:	ldrb	w8, [sp, #624]
   390b0:	cmp	w8, #0x1f
   390b4:	b.ls	39100 <PyInit__decimal@@Base+0x3264c>  // b.plast
   390b8:	tbz	w8, #4, 39118 <PyInit__decimal@@Base+0x32664>
   390bc:	sub	x8, x29, #0xa0
   390c0:	cmp	x22, x8
   390c4:	b.ne	39134 <PyInit__decimal@@Base+0x32680>  // b.any
   390c8:	b	39168 <PyInit__decimal@@Base+0x326b4>
   390cc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   390d0:	ldr	x8, [x8, #1376]
   390d4:	ldr	x0, [sp, #1224]
   390d8:	blr	x8
   390dc:	ldrb	w8, [sp, #1184]
   390e0:	tbnz	w8, #4, 390ac <PyInit__decimal@@Base+0x325f8>
   390e4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   390e8:	ldr	x8, [x8, #1376]
   390ec:	add	x0, sp, #0x4a0
   390f0:	blr	x8
   390f4:	ldrb	w8, [sp, #624]
   390f8:	cmp	w8, #0x1f
   390fc:	b.hi	390b8 <PyInit__decimal@@Base+0x32604>  // b.pmore
   39100:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39104:	ldr	x8, [x8, #1376]
   39108:	ldr	x0, [sp, #664]
   3910c:	blr	x8
   39110:	ldrb	w8, [sp, #624]
   39114:	tbnz	w8, #4, 390bc <PyInit__decimal@@Base+0x32608>
   39118:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3911c:	ldr	x8, [x8, #1376]
   39120:	add	x0, sp, #0x270
   39124:	blr	x8
   39128:	sub	x8, x29, #0xa0
   3912c:	cmp	x22, x8
   39130:	b.eq	39168 <PyInit__decimal@@Base+0x326b4>  // b.none
   39134:	ldrb	w8, [x22]
   39138:	cmp	w8, #0x1f
   3913c:	b.hi	39154 <PyInit__decimal@@Base+0x326a0>  // b.pmore
   39140:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39144:	ldr	x8, [x8, #1376]
   39148:	ldr	x0, [x22, #40]
   3914c:	blr	x8
   39150:	ldrb	w8, [x22]
   39154:	tbnz	w8, #4, 39168 <PyInit__decimal@@Base+0x326b4>
   39158:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3915c:	ldr	x8, [x8, #1376]
   39160:	mov	x0, x22
   39164:	blr	x8
   39168:	ldur	w8, [x29, #-12]
   3916c:	ldr	w9, [x19]
   39170:	and	w8, w8, #0x3fe
   39174:	orr	w8, w9, w8
   39178:	mov	w9, #0x1040                	// #4160
   3917c:	orr	w8, w8, w9
   39180:	mov	x0, x20
   39184:	mov	x1, x21
   39188:	mov	x2, x19
   3918c:	str	w8, [x19]
   39190:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   39194:	add	sp, sp, #0x770
   39198:	ldp	x20, x19, [sp, #80]
   3919c:	ldp	x22, x21, [sp, #64]
   391a0:	ldp	x24, x23, [sp, #48]
   391a4:	ldp	x26, x25, [sp, #32]
   391a8:	ldp	x28, x27, [sp, #16]
   391ac:	ldp	x29, x30, [sp], #96
   391b0:	ret
   391b4:	mov	w8, #0xe                   	// #14
   391b8:	b	38e70 <PyInit__decimal@@Base+0x323bc>
   391bc:	mov	w8, #0x9                   	// #9
   391c0:	b	38e70 <PyInit__decimal@@Base+0x323bc>
   391c4:	stp	x29, x30, [sp, #-96]!
   391c8:	stp	x28, x27, [sp, #16]
   391cc:	stp	x26, x25, [sp, #32]
   391d0:	stp	x24, x23, [sp, #48]
   391d4:	stp	x22, x21, [sp, #64]
   391d8:	stp	x20, x19, [sp, #80]
   391dc:	mov	x29, sp
   391e0:	sub	sp, sp, #0x730
   391e4:	add	x10, sp, #0x4e0
   391e8:	str	x10, [sp, #1240]
   391ec:	add	x10, sp, #0x2b0
   391f0:	str	x10, [sp, #680]
   391f4:	add	x10, sp, #0x80
   391f8:	str	x10, [sp, #120]
   391fc:	mov	w10, #0x1                   	// #1
   39200:	dup	v0.2d, x10
   39204:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
   39208:	stur	q0, [sp, #48]
   3920c:	ldr	q0, [x10, #1552]
   39210:	mov	w8, #0x30                  	// #48
   39214:	mov	w9, #0x40                  	// #64
   39218:	strb	w8, [sp, #1200]
   3921c:	strb	w8, [sp, #640]
   39220:	strb	w8, [sp, #80]
   39224:	mov	w8, #0x2                   	// #2
   39228:	str	x9, [sp, #1232]
   3922c:	str	x9, [sp, #672]
   39230:	stp	xzr, x9, [sp, #104]
   39234:	mov	w9, #0x90                  	// #144
   39238:	add	x10, sp, #0x48
   3923c:	str	xzr, [sp, #1208]
   39240:	str	xzr, [sp, #1216]
   39244:	str	xzr, [sp, #648]
   39248:	str	xzr, [sp, #656]
   3924c:	stp	xzr, xzr, [sp, #88]
   39250:	str	xzr, [sp, #1224]
   39254:	str	xzr, [sp, #664]
   39258:	stp	x10, x8, [sp, #64]
   3925c:	strb	w9, [sp, #24]
   39260:	stur	q0, [sp, #32]
   39264:	ldr	x9, [x1, #8]
   39268:	ldrb	w8, [x1]
   3926c:	mov	x19, x3
   39270:	mov	x21, x2
   39274:	and	x10, x9, #0xfffffffffffffffe
   39278:	tst	x9, #0xfffffffffffffffe
   3927c:	orr	x9, x10, #0x1
   39280:	mov	x22, x1
   39284:	csel	x9, x9, x10, lt  // lt = tstop
   39288:	tst	w8, #0xe
   3928c:	mov	x20, x0
   39290:	b.eq	39314 <PyInit__decimal@@Base+0x32860>  // b.none
   39294:	mov	x0, x20
   39298:	mov	x1, x22
   3929c:	mov	x2, x21
   392a0:	mov	x3, x19
   392a4:	bl	24380 <PyInit__decimal@@Base+0x1d8cc>
   392a8:	cbnz	w0, 39b50 <PyInit__decimal@@Base+0x3309c>
   392ac:	ldrb	w9, [x22]
   392b0:	ldrb	w8, [x20]
   392b4:	tbnz	w9, #0, 39430 <PyInit__decimal@@Base+0x3297c>
   392b8:	tbnz	w8, #5, 392fc <PyInit__decimal@@Base+0x32848>
   392bc:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   392c0:	ldr	x9, [x20, #32]
   392c4:	ldr	x1, [x19, #1344]
   392c8:	cmp	x9, x1
   392cc:	b.le	392fc <PyInit__decimal@@Base+0x32848>
   392d0:	sturb	wzr, [x29, #-80]
   392d4:	ldr	x0, [x20, #40]
   392d8:	sub	x3, x29, #0x50
   392dc:	mov	w2, #0x8                   	// #8
   392e0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   392e4:	str	x0, [x20, #40]
   392e8:	ldurb	w8, [x29, #-80]
   392ec:	cbnz	w8, 392f8 <PyInit__decimal@@Base+0x32844>
   392f0:	ldr	x8, [x19, #1344]
   392f4:	str	x8, [x20, #32]
   392f8:	ldrb	w8, [x20]
   392fc:	and	w8, w8, #0xf0
   39300:	orr	w8, w8, #0x2
   39304:	stp	xzr, xzr, [x20, #16]
   39308:	strb	w8, [x20]
   3930c:	str	xzr, [x20, #8]
   39310:	b	39b50 <PyInit__decimal@@Base+0x3309c>
   39314:	ldr	x10, [x22, #40]
   39318:	ldr	x11, [x22, #24]
   3931c:	asr	x25, x9, #1
   39320:	and	w23, w8, #0x1
   39324:	add	x10, x10, x11, lsl #3
   39328:	ldur	x10, [x10, #-8]
   3932c:	cbz	x10, 39388 <PyInit__decimal@@Base+0x328d4>
   39330:	cbnz	w23, 39438 <PyInit__decimal@@Base+0x32984>
   39334:	sub	x0, x29, #0x50
   39338:	add	x24, sp, #0x4b0
   3933c:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   39340:	ldr	x23, [x21]
   39344:	add	x8, sp, #0x4b0
   39348:	cmp	x8, x22
   3934c:	b.eq	39558 <PyInit__decimal@@Base+0x32aa4>  // b.none
   39350:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   39354:	ldr	x8, [x22, #24]
   39358:	ldr	x10, [x9, #1344]
   3935c:	ldr	x9, [sp, #1232]
   39360:	cmp	x10, x8
   39364:	csel	x1, x8, x10, lt  // lt = tstop
   39368:	cmp	x1, x9
   3936c:	b.eq	3952c <PyInit__decimal@@Base+0x32a78>  // b.none
   39370:	ldrb	w10, [sp, #1200]
   39374:	tbnz	w10, #5, 39510 <PyInit__decimal@@Base+0x32a5c>
   39378:	add	x0, sp, #0x4b0
   3937c:	mov	x2, x19
   39380:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   39384:	b	39524 <PyInit__decimal@@Base+0x32a70>
   39388:	ldrb	w8, [x20]
   3938c:	tbnz	w8, #5, 393d0 <PyInit__decimal@@Base+0x3291c>
   39390:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   39394:	ldr	x9, [x20, #32]
   39398:	ldr	x1, [x22, #1344]
   3939c:	cmp	x9, x1
   393a0:	b.le	393d0 <PyInit__decimal@@Base+0x3291c>
   393a4:	sturb	wzr, [x29, #-80]
   393a8:	ldr	x0, [x20, #40]
   393ac:	sub	x3, x29, #0x50
   393b0:	mov	w2, #0x8                   	// #8
   393b4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   393b8:	str	x0, [x20, #40]
   393bc:	ldurb	w8, [x29, #-80]
   393c0:	cbnz	w8, 393cc <PyInit__decimal@@Base+0x32918>
   393c4:	ldr	x8, [x22, #1344]
   393c8:	str	x8, [x20, #32]
   393cc:	ldrb	w8, [x20]
   393d0:	ldr	x10, [x20, #40]
   393d4:	and	w8, w8, #0xf0
   393d8:	mov	w11, #0x1                   	// #1
   393dc:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   393e0:	orr	w8, w8, w23
   393e4:	str	x25, [x20, #8]
   393e8:	add	x9, x9, #0xca0
   393ec:	strb	w8, [x20]
   393f0:	stp	xzr, xzr, [x10]
   393f4:	str	x11, [x20, #24]
   393f8:	ldr	x8, [x10]
   393fc:	ldr	x10, [x9, #72]
   39400:	cmp	x10, x8
   39404:	b.ls	394a4 <PyInit__decimal@@Base+0x329f0>  // b.plast
   39408:	ldr	x10, [x9, #32]
   3940c:	cmp	x10, x8
   39410:	b.ls	394cc <PyInit__decimal@@Base+0x32a18>  // b.plast
   39414:	ldr	x10, [x9, #16]
   39418:	cmp	x10, x8
   3941c:	b.ls	396a8 <PyInit__decimal@@Base+0x32bf4>  // b.plast
   39420:	ldr	x9, [x9, #8]
   39424:	cmp	x9, x8
   39428:	mov	w8, #0x1                   	// #1
   3942c:	b	3970c <PyInit__decimal@@Base+0x32c58>
   39430:	tbz	w8, #5, 39440 <PyInit__decimal@@Base+0x3298c>
   39434:	b	39480 <PyInit__decimal@@Base+0x329cc>
   39438:	ldrb	w8, [x20]
   3943c:	tbnz	w8, #5, 39480 <PyInit__decimal@@Base+0x329cc>
   39440:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   39444:	ldr	x9, [x20, #32]
   39448:	ldr	x1, [x21, #1344]
   3944c:	cmp	x9, x1
   39450:	b.le	39480 <PyInit__decimal@@Base+0x329cc>
   39454:	sturb	wzr, [x29, #-80]
   39458:	ldr	x0, [x20, #40]
   3945c:	sub	x3, x29, #0x50
   39460:	mov	w2, #0x8                   	// #8
   39464:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   39468:	str	x0, [x20, #40]
   3946c:	ldurb	w8, [x29, #-80]
   39470:	cbnz	w8, 3947c <PyInit__decimal@@Base+0x329c8>
   39474:	ldr	x8, [x21, #1344]
   39478:	str	x8, [x20, #32]
   3947c:	ldrb	w8, [x20]
   39480:	and	w8, w8, #0xf0
   39484:	orr	w8, w8, #0x4
   39488:	stp	xzr, xzr, [x20, #16]
   3948c:	strb	w8, [x20]
   39490:	str	xzr, [x20, #8]
   39494:	ldr	w8, [x19]
   39498:	orr	w8, w8, #0x100
   3949c:	str	w8, [x19]
   394a0:	b	39b50 <PyInit__decimal@@Base+0x3309c>
   394a4:	ldr	x10, [x9, #112]
   394a8:	cmp	x10, x8
   394ac:	b.ls	394e8 <PyInit__decimal@@Base+0x32a34>  // b.plast
   394b0:	ldr	x10, [x9, #88]
   394b4:	cmp	x10, x8
   394b8:	b.ls	396b8 <PyInit__decimal@@Base+0x32c04>  // b.plast
   394bc:	ldr	x9, [x9, #80]
   394c0:	cmp	x9, x8
   394c4:	mov	w8, #0xa                   	// #10
   394c8:	b	3970c <PyInit__decimal@@Base+0x32c58>
   394cc:	ldr	x10, [x9, #48]
   394d0:	cmp	x10, x8
   394d4:	b.ls	396d4 <PyInit__decimal@@Base+0x32c20>  // b.plast
   394d8:	ldr	x9, [x9, #40]
   394dc:	cmp	x9, x8
   394e0:	mov	w8, #0x5                   	// #5
   394e4:	b	3970c <PyInit__decimal@@Base+0x32c58>
   394e8:	ldr	x10, [x9, #144]
   394ec:	cmp	x10, x8
   394f0:	b.ls	396f0 <PyInit__decimal@@Base+0x32c3c>  // b.plast
   394f4:	ldr	x10, [x9, #128]
   394f8:	cmp	x10, x8
   394fc:	b.ls	39700 <PyInit__decimal@@Base+0x32c4c>  // b.plast
   39500:	ldr	x9, [x9, #120]
   39504:	cmp	x9, x8
   39508:	mov	w8, #0xf                   	// #15
   3950c:	b	3970c <PyInit__decimal@@Base+0x32c58>
   39510:	cmp	x1, x9
   39514:	b.le	3952c <PyInit__decimal@@Base+0x32a78>
   39518:	add	x0, sp, #0x4b0
   3951c:	mov	x2, x19
   39520:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   39524:	cbz	w0, 39a5c <PyInit__decimal@@Base+0x32fa8>
   39528:	ldr	x8, [x22, #24]
   3952c:	ldrb	w9, [x22]
   39530:	ldrb	w10, [sp, #1200]
   39534:	lsl	x2, x8, #3
   39538:	bfxil	w10, w9, #0, #4
   3953c:	strb	w10, [sp, #1200]
   39540:	ldur	q0, [x22, #8]
   39544:	stur	q0, [x24, #8]
   39548:	str	x8, [sp, #1224]
   3954c:	ldr	x0, [sp, #1240]
   39550:	ldr	x1, [x22, #40]
   39554:	bl	63c0 <memcpy@plt>
   39558:	str	xzr, [sp, #1208]
   3955c:	ldrb	w8, [x22, #8]
   39560:	tbnz	w8, #0, 3959c <PyInit__decimal@@Base+0x32ae8>
   39564:	ldr	x8, [x22, #16]
   39568:	add	x8, x8, #0x1
   3956c:	asr	x8, x8, #1
   39570:	add	x23, x23, #0x1
   39574:	subs	x22, x23, x8
   39578:	b.mi	395cc <PyInit__decimal@@Base+0x32b18>  // b.first
   3957c:	lsl	x2, x22, #1
   39580:	add	x0, sp, #0x4b0
   39584:	add	x1, sp, #0x4b0
   39588:	mov	x3, x19
   3958c:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   39590:	cbz	w0, 39a5c <PyInit__decimal@@Base+0x32fa8>
   39594:	mov	w28, #0x1                   	// #1
   39598:	b	395e0 <PyInit__decimal@@Base+0x32b2c>
   3959c:	add	x0, sp, #0x4b0
   395a0:	add	x1, sp, #0x4b0
   395a4:	mov	w2, #0x1                   	// #1
   395a8:	mov	x3, x19
   395ac:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   395b0:	cbz	w0, 39a5c <PyInit__decimal@@Base+0x32fa8>
   395b4:	ldr	x8, [x22, #16]
   395b8:	asr	x8, x8, #1
   395bc:	add	x8, x8, #0x1
   395c0:	add	x23, x23, #0x1
   395c4:	subs	x22, x23, x8
   395c8:	b.pl	3957c <PyInit__decimal@@Base+0x32ac8>  // b.nfrst
   395cc:	neg	x1, x22, lsl #1
   395d0:	add	x0, sp, #0x4b0
   395d4:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   395d8:	cmp	x0, #0x0
   395dc:	cset	w28, eq  // eq = none
   395e0:	adrp	x1, 56000 <PyInit__decimal@@Base+0x4f54c>
   395e4:	add	x1, x1, #0xc88
   395e8:	mov	x0, x20
   395ec:	mov	x2, x23
   395f0:	mov	x3, x19
   395f4:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   395f8:	cbz	w0, 39a5c <PyInit__decimal@@Base+0x32fa8>
   395fc:	sub	x8, x29, #0x50
   39600:	add	x23, x8, #0x1c
   39604:	add	x0, sp, #0x280
   39608:	add	x1, sp, #0x50
   3960c:	add	x2, sp, #0x4b0
   39610:	sub	x4, x29, #0x50
   39614:	mov	x3, x20
   39618:	mov	x5, x23
   3961c:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   39620:	ldrb	w8, [x20]
   39624:	tst	w8, #0xe
   39628:	b.ne	39638 <PyInit__decimal@@Base+0x32b84>  // b.any
   3962c:	ldrb	w9, [sp, #640]
   39630:	tst	w9, #0xe
   39634:	b.eq	39730 <PyInit__decimal@@Base+0x32c7c>  // b.none
   39638:	ldur	w9, [x29, #-52]
   3963c:	mov	w10, #0x3be                 	// #958
   39640:	and	w22, w9, w10
   39644:	tbnz	w8, #5, 39688 <PyInit__decimal@@Base+0x32bd4>
   39648:	adrp	x23, 59000 <PyInit__decimal@@Base+0x5254c>
   3964c:	ldr	x9, [x20, #32]
   39650:	ldr	x1, [x23, #1344]
   39654:	cmp	x9, x1
   39658:	b.le	39688 <PyInit__decimal@@Base+0x32bd4>
   3965c:	sturb	wzr, [x29, #-24]
   39660:	ldr	x0, [x20, #40]
   39664:	sub	x3, x29, #0x18
   39668:	mov	w2, #0x8                   	// #8
   3966c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   39670:	str	x0, [x20, #40]
   39674:	ldurb	w8, [x29, #-24]
   39678:	cbnz	w8, 39684 <PyInit__decimal@@Base+0x32bd0>
   3967c:	ldr	x8, [x23, #1344]
   39680:	str	x8, [x20, #32]
   39684:	ldrb	w8, [x20]
   39688:	and	w8, w8, #0xf0
   3968c:	orr	w8, w8, #0x4
   39690:	stp	xzr, xzr, [x20, #16]
   39694:	strb	w8, [x20]
   39698:	str	xzr, [x20, #8]
   3969c:	ldr	w8, [x19]
   396a0:	orr	w8, w8, w22
   396a4:	b	39ac0 <PyInit__decimal@@Base+0x3300c>
   396a8:	ldr	x9, [x9, #24]
   396ac:	cmp	x9, x8
   396b0:	mov	w8, #0x3                   	// #3
   396b4:	b	3970c <PyInit__decimal@@Base+0x32c58>
   396b8:	ldr	x10, [x9, #104]
   396bc:	cmp	x10, x8
   396c0:	b.ls	39720 <PyInit__decimal@@Base+0x32c6c>  // b.plast
   396c4:	ldr	x9, [x9, #96]
   396c8:	cmp	x9, x8
   396cc:	mov	w8, #0xc                   	// #12
   396d0:	b	3970c <PyInit__decimal@@Base+0x32c58>
   396d4:	ldr	x10, [x9, #64]
   396d8:	cmp	x10, x8
   396dc:	b.ls	39728 <PyInit__decimal@@Base+0x32c74>  // b.plast
   396e0:	ldr	x9, [x9, #56]
   396e4:	cmp	x9, x8
   396e8:	mov	w8, #0x7                   	// #7
   396ec:	b	3970c <PyInit__decimal@@Base+0x32c58>
   396f0:	ldr	x9, [x9, #152]
   396f4:	cmp	x9, x8
   396f8:	mov	w8, #0x13                  	// #19
   396fc:	b	3970c <PyInit__decimal@@Base+0x32c58>
   39700:	ldr	x9, [x9, #136]
   39704:	cmp	x9, x8
   39708:	mov	w8, #0x11                  	// #17
   3970c:	cinc	x8, x8, ls  // ls = plast
   39710:	mov	x0, x20
   39714:	mov	x1, x21
   39718:	str	x8, [x20, #16]
   3971c:	b	39b48 <PyInit__decimal@@Base+0x33094>
   39720:	mov	w8, #0xe                   	// #14
   39724:	b	39710 <PyInit__decimal@@Base+0x32c5c>
   39728:	mov	w8, #0x9                   	// #9
   3972c:	b	39710 <PyInit__decimal@@Base+0x32c5c>
   39730:	add	x8, sp, #0x50
   39734:	sub	x9, x25, x22
   39738:	add	x26, x20, #0x8
   3973c:	mov	w27, #0x1041                	// #4161
   39740:	add	x8, x8, #0x8
   39744:	stp	x8, x9, [sp, #8]
   39748:	add	x1, sp, #0x280
   3974c:	mov	x0, x20
   39750:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   39754:	cmp	w0, #0x1
   39758:	b.lt	39858 <PyInit__decimal@@Base+0x32da4>  // b.tstop
   3975c:	add	x2, sp, #0x280
   39760:	sub	x3, x29, #0x50
   39764:	sub	x4, x29, #0x18
   39768:	mov	x0, x20
   3976c:	mov	x1, x20
   39770:	stur	wzr, [x29, #-24]
   39774:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   39778:	ldur	w10, [x29, #-24]
   3977c:	ldur	w8, [x29, #-52]
   39780:	tst	w10, w27
   39784:	orr	w9, w8, w10
   39788:	stur	w9, [x29, #-52]
   3978c:	ldrb	w8, [x20]
   39790:	b.eq	397fc <PyInit__decimal@@Base+0x32d48>  // b.none
   39794:	tbnz	w8, #5, 397e0 <PyInit__decimal@@Base+0x32d2c>
   39798:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   3979c:	ldr	x10, [x20, #32]
   397a0:	ldr	x1, [x11, #1344]
   397a4:	cmp	x10, x1
   397a8:	b.le	397e0 <PyInit__decimal@@Base+0x32d2c>
   397ac:	sturb	wzr, [x29, #-20]
   397b0:	ldr	x0, [x20, #40]
   397b4:	sub	x3, x29, #0x14
   397b8:	mov	w2, #0x8                   	// #8
   397bc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   397c0:	str	x0, [x20, #40]
   397c4:	ldurb	w8, [x29, #-20]
   397c8:	cbnz	w8, 397d8 <PyInit__decimal@@Base+0x32d24>
   397cc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   397d0:	ldr	x8, [x8, #1344]
   397d4:	str	x8, [x20, #32]
   397d8:	ldrb	w8, [x20]
   397dc:	ldur	w9, [x29, #-52]
   397e0:	and	w8, w8, #0xf0
   397e4:	orr	w9, w9, #0x100
   397e8:	orr	w8, w8, #0x4
   397ec:	strb	w8, [x20]
   397f0:	stp	xzr, xzr, [x26]
   397f4:	str	xzr, [x26, #16]
   397f8:	stur	w9, [x29, #-52]
   397fc:	tst	w8, #0xe
   39800:	b.ne	39978 <PyInit__decimal@@Base+0x32ec4>  // b.any
   39804:	add	x1, sp, #0x50
   39808:	add	x3, sp, #0x18
   3980c:	sub	x4, x29, #0x50
   39810:	mov	x0, x20
   39814:	mov	x2, x20
   39818:	mov	x5, x23
   3981c:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   39820:	add	x0, sp, #0x280
   39824:	add	x1, sp, #0x50
   39828:	add	x2, sp, #0x4b0
   3982c:	sub	x4, x29, #0x50
   39830:	mov	x3, x20
   39834:	mov	x5, x23
   39838:	bl	2c5b8 <PyInit__decimal@@Base+0x25b04>
   3983c:	ldrb	w8, [x20]
   39840:	tst	w8, #0xe
   39844:	b.ne	39638 <PyInit__decimal@@Base+0x32b84>  // b.any
   39848:	ldrb	w9, [sp, #640]
   3984c:	tst	w9, #0xe
   39850:	b.eq	39748 <PyInit__decimal@@Base+0x32c94>  // b.none
   39854:	b	39638 <PyInit__decimal@@Base+0x32b84>
   39858:	cbz	w28, 399f0 <PyInit__decimal@@Base+0x32f3c>
   3985c:	add	x0, sp, #0x50
   39860:	sub	x3, x29, #0x50
   39864:	sub	x4, x29, #0x18
   39868:	mov	x1, x20
   3986c:	mov	x2, x20
   39870:	stur	wzr, [x29, #-24]
   39874:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   39878:	add	x0, sp, #0x50
   3987c:	sub	x1, x29, #0x50
   39880:	sub	x2, x29, #0x18
   39884:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   39888:	ldur	w10, [x29, #-24]
   3988c:	ldur	w8, [x29, #-52]
   39890:	ldrb	w9, [sp, #80]
   39894:	mov	w11, #0x1041                	// #4161
   39898:	tst	w10, w11
   3989c:	orr	w8, w8, w10
   398a0:	stur	w8, [x29, #-52]
   398a4:	b.eq	39914 <PyInit__decimal@@Base+0x32e60>  // b.none
   398a8:	tbnz	w9, #5, 398f4 <PyInit__decimal@@Base+0x32e40>
   398ac:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   398b0:	ldr	x10, [sp, #112]
   398b4:	ldr	x1, [x11, #1344]
   398b8:	cmp	x10, x1
   398bc:	b.le	398f4 <PyInit__decimal@@Base+0x32e40>
   398c0:	ldr	x0, [sp, #120]
   398c4:	sub	x3, x29, #0x14
   398c8:	mov	w2, #0x8                   	// #8
   398cc:	sturb	wzr, [x29, #-20]
   398d0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   398d4:	ldurb	w8, [x29, #-20]
   398d8:	str	x0, [sp, #120]
   398dc:	cbnz	w8, 398ec <PyInit__decimal@@Base+0x32e38>
   398e0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   398e4:	ldr	x8, [x8, #1344]
   398e8:	str	x8, [sp, #112]
   398ec:	ldrb	w9, [sp, #80]
   398f0:	ldur	w8, [x29, #-52]
   398f4:	ldr	x10, [sp, #8]
   398f8:	and	w9, w9, #0xf0
   398fc:	orr	w8, w8, #0x100
   39900:	orr	w9, w9, #0x4
   39904:	strb	w9, [sp, #80]
   39908:	stp	xzr, xzr, [x10]
   3990c:	str	xzr, [x10, #16]
   39910:	stur	w8, [x29, #-52]
   39914:	tst	w9, #0xe
   39918:	b.eq	399e0 <PyInit__decimal@@Base+0x32f2c>  // b.none
   3991c:	ldrb	w9, [x20]
   39920:	mov	w10, #0x3be                 	// #958
   39924:	and	w22, w8, w10
   39928:	tbnz	w9, #5, 39970 <PyInit__decimal@@Base+0x32ebc>
   3992c:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   39930:	ldr	x8, [x20, #32]
   39934:	ldr	x1, [x10, #1344]
   39938:	cmp	x8, x1
   3993c:	b.le	39970 <PyInit__decimal@@Base+0x32ebc>
   39940:	sturb	wzr, [x29, #-24]
   39944:	ldr	x0, [x20, #40]
   39948:	sub	x3, x29, #0x18
   3994c:	mov	w2, #0x8                   	// #8
   39950:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   39954:	str	x0, [x20, #40]
   39958:	ldurb	w8, [x29, #-24]
   3995c:	cbnz	w8, 3996c <PyInit__decimal@@Base+0x32eb8>
   39960:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39964:	ldr	x8, [x8, #1344]
   39968:	str	x8, [x20, #32]
   3996c:	ldrb	w9, [x20]
   39970:	and	w8, w9, #0xf0
   39974:	b	399cc <PyInit__decimal@@Base+0x32f18>
   39978:	mov	w10, #0x3be                 	// #958
   3997c:	and	w22, w9, w10
   39980:	tbnz	w8, #5, 399c8 <PyInit__decimal@@Base+0x32f14>
   39984:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   39988:	ldr	x9, [x20, #32]
   3998c:	ldr	x1, [x10, #1344]
   39990:	cmp	x9, x1
   39994:	b.le	399c8 <PyInit__decimal@@Base+0x32f14>
   39998:	sturb	wzr, [x29, #-24]
   3999c:	ldr	x0, [x20, #40]
   399a0:	sub	x3, x29, #0x18
   399a4:	mov	w2, #0x8                   	// #8
   399a8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   399ac:	str	x0, [x20, #40]
   399b0:	ldurb	w8, [x29, #-24]
   399b4:	cbnz	w8, 399c4 <PyInit__decimal@@Base+0x32f10>
   399b8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   399bc:	ldr	x8, [x8, #1344]
   399c0:	str	x8, [x20, #32]
   399c4:	ldrb	w8, [x20]
   399c8:	and	w8, w8, #0xf0
   399cc:	orr	w8, w8, #0x4
   399d0:	strb	w8, [x20]
   399d4:	stp	xzr, xzr, [x26]
   399d8:	str	xzr, [x26, #16]
   399dc:	b	3969c <PyInit__decimal@@Base+0x32be8>
   399e0:	add	x0, sp, #0x50
   399e4:	add	x1, sp, #0x4b0
   399e8:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   399ec:	cbz	w0, 39a30 <PyInit__decimal@@Base+0x32f7c>
   399f0:	ldr	x8, [x20, #40]
   399f4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   399f8:	movk	x10, #0xcccd
   399fc:	mov	w11, #0xa                   	// #10
   39a00:	ldr	x9, [x8]
   39a04:	umulh	x10, x9, x10
   39a08:	lsr	x10, x10, #3
   39a0c:	msub	w10, w10, w11, w9
   39a10:	cmp	w10, #0x5
   39a14:	b.eq	39a1c <PyInit__decimal@@Base+0x32f68>  // b.none
   39a18:	cbnz	w10, 39a24 <PyInit__decimal@@Base+0x32f70>
   39a1c:	add	x9, x9, #0x1
   39a20:	str	x9, [x8]
   39a24:	ldr	x25, [sp, #16]
   39a28:	str	x25, [x26]
   39a2c:	b	39ac4 <PyInit__decimal@@Base+0x33010>
   39a30:	tbnz	x22, #63, 39a44 <PyInit__decimal@@Base+0x32f90>
   39a34:	mov	x0, x20
   39a38:	mov	x1, x22
   39a3c:	bl	26498 <PyInit__decimal@@Base+0x1f9e4>
   39a40:	b	39a28 <PyInit__decimal@@Base+0x32f74>
   39a44:	neg	x2, x22
   39a48:	mov	x0, x20
   39a4c:	mov	x1, x20
   39a50:	mov	x3, x19
   39a54:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   39a58:	cbnz	w0, 39a28 <PyInit__decimal@@Base+0x32f74>
   39a5c:	ldrb	w8, [x20]
   39a60:	tbnz	w8, #5, 39aa4 <PyInit__decimal@@Base+0x32ff0>
   39a64:	adrp	x22, 59000 <PyInit__decimal@@Base+0x5254c>
   39a68:	ldr	x9, [x20, #32]
   39a6c:	ldr	x1, [x22, #1344]
   39a70:	cmp	x9, x1
   39a74:	b.le	39aa4 <PyInit__decimal@@Base+0x32ff0>
   39a78:	sturb	wzr, [x29, #-24]
   39a7c:	ldr	x0, [x20, #40]
   39a80:	sub	x3, x29, #0x18
   39a84:	mov	w2, #0x8                   	// #8
   39a88:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   39a8c:	str	x0, [x20, #40]
   39a90:	ldurb	w8, [x29, #-24]
   39a94:	cbnz	w8, 39aa0 <PyInit__decimal@@Base+0x32fec>
   39a98:	ldr	x8, [x22, #1344]
   39a9c:	str	x8, [x20, #32]
   39aa0:	ldrb	w8, [x20]
   39aa4:	and	w8, w8, #0xf0
   39aa8:	orr	w8, w8, #0x4
   39aac:	stp	xzr, xzr, [x20, #16]
   39ab0:	strb	w8, [x20]
   39ab4:	str	xzr, [x20, #8]
   39ab8:	ldr	w8, [x19]
   39abc:	orr	w8, w8, #0x200
   39ac0:	str	w8, [x19]
   39ac4:	ldrb	w8, [sp, #1200]
   39ac8:	cmp	w8, #0x1f
   39acc:	b.ls	39b70 <PyInit__decimal@@Base+0x330bc>  // b.plast
   39ad0:	tbnz	w8, #4, 39b88 <PyInit__decimal@@Base+0x330d4>
   39ad4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39ad8:	ldr	x8, [x8, #1376]
   39adc:	add	x0, sp, #0x4b0
   39ae0:	blr	x8
   39ae4:	ldrb	w8, [sp, #640]
   39ae8:	cmp	w8, #0x1f
   39aec:	b.hi	39b94 <PyInit__decimal@@Base+0x330e0>  // b.pmore
   39af0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39af4:	ldr	x8, [x8, #1376]
   39af8:	ldr	x0, [sp, #680]
   39afc:	blr	x8
   39b00:	ldrb	w8, [sp, #640]
   39b04:	tbz	w8, #4, 39b98 <PyInit__decimal@@Base+0x330e4>
   39b08:	ldrb	w8, [sp, #80]
   39b0c:	cmp	w8, #0x1f
   39b10:	b.ls	39bb4 <PyInit__decimal@@Base+0x33100>  // b.plast
   39b14:	tbnz	w8, #4, 39b28 <PyInit__decimal@@Base+0x33074>
   39b18:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39b1c:	ldr	x8, [x8, #1376]
   39b20:	add	x0, sp, #0x50
   39b24:	blr	x8
   39b28:	ldp	q1, q0, [x21, #16]
   39b2c:	ldr	q2, [x21]
   39b30:	mov	w8, #0x6                   	// #6
   39b34:	sub	x1, x29, #0x50
   39b38:	stp	q1, q0, [x24, #576]
   39b3c:	str	q2, [x24, #560]
   39b40:	stur	w8, [x29, #-44]
   39b44:	mov	x0, x20
   39b48:	mov	x2, x19
   39b4c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   39b50:	add	sp, sp, #0x730
   39b54:	ldp	x20, x19, [sp, #80]
   39b58:	ldp	x22, x21, [sp, #64]
   39b5c:	ldp	x24, x23, [sp, #48]
   39b60:	ldp	x26, x25, [sp, #32]
   39b64:	ldp	x28, x27, [sp, #16]
   39b68:	ldp	x29, x30, [sp], #96
   39b6c:	ret
   39b70:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39b74:	ldr	x8, [x8, #1376]
   39b78:	ldr	x0, [sp, #1240]
   39b7c:	blr	x8
   39b80:	ldrb	w8, [sp, #1200]
   39b84:	tbz	w8, #4, 39ad4 <PyInit__decimal@@Base+0x33020>
   39b88:	ldrb	w8, [sp, #640]
   39b8c:	cmp	w8, #0x1f
   39b90:	b.ls	39af0 <PyInit__decimal@@Base+0x3303c>  // b.plast
   39b94:	tbnz	w8, #4, 39b08 <PyInit__decimal@@Base+0x33054>
   39b98:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39b9c:	ldr	x8, [x8, #1376]
   39ba0:	add	x0, sp, #0x280
   39ba4:	blr	x8
   39ba8:	ldrb	w8, [sp, #80]
   39bac:	cmp	w8, #0x1f
   39bb0:	b.hi	39b14 <PyInit__decimal@@Base+0x33060>  // b.pmore
   39bb4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39bb8:	ldr	x8, [x8, #1376]
   39bbc:	ldr	x0, [sp, #120]
   39bc0:	blr	x8
   39bc4:	ldrb	w8, [sp, #80]
   39bc8:	tbz	w8, #4, 39b18 <PyInit__decimal@@Base+0x33064>
   39bcc:	b	39b28 <PyInit__decimal@@Base+0x33074>
   39bd0:	str	d8, [sp, #-32]!
   39bd4:	stp	x29, x30, [sp, #8]
   39bd8:	str	x19, [sp, #24]
   39bdc:	mov	x29, sp
   39be0:	ldrb	w8, [x0]
   39be4:	tst	w8, #0xe
   39be8:	b.ne	39c00 <PyInit__decimal@@Base+0x3314c>  // b.any
   39bec:	ldr	x8, [x0, #40]
   39bf0:	ldr	x9, [x0, #24]
   39bf4:	add	x8, x8, x9, lsl #3
   39bf8:	ldur	x8, [x8, #-8]
   39bfc:	cbz	x8, 39c4c <PyInit__decimal@@Base+0x33198>
   39c00:	ldp	x9, x8, [x0, #8]
   39c04:	mov	x19, #0xffffffffffffffff    	// #-1
   39c08:	add	x8, x9, x8
   39c0c:	mov	x9, #0xbcfe                	// #48382
   39c10:	movk	x9, #0xa84f, lsl #16
   39c14:	movk	x9, #0xa209, lsl #32
   39c18:	movk	x9, #0x9, lsl #48
   39c1c:	cmp	x8, x9
   39c20:	b.hi	39c50 <PyInit__decimal@@Base+0x3319c>  // b.pmore
   39c24:	ucvtf	d0, w1
   39c28:	ucvtf	d8, x8
   39c2c:	bl	6560 <log10@plt>
   39c30:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   39c34:	fdiv	d0, d8, d0
   39c38:	fmov	d1, x8
   39c3c:	fcvtzu	x9, d0
   39c40:	fcmp	d0, d1
   39c44:	csinc	x19, x19, x9, gt
   39c48:	b	39c50 <PyInit__decimal@@Base+0x3319c>
   39c4c:	mov	w19, #0x1                   	// #1
   39c50:	mov	x0, x19
   39c54:	ldr	x19, [sp, #24]
   39c58:	ldp	x29, x30, [sp, #8]
   39c5c:	ldr	d8, [sp], #32
   39c60:	ret
   39c64:	str	d8, [sp, #-112]!
   39c68:	stp	x29, x30, [sp, #16]
   39c6c:	stp	x28, x27, [sp, #32]
   39c70:	stp	x26, x25, [sp, #48]
   39c74:	stp	x24, x23, [sp, #64]
   39c78:	stp	x22, x21, [sp, #80]
   39c7c:	stp	x20, x19, [sp, #96]
   39c80:	mov	x29, sp
   39c84:	sub	sp, sp, #0x240
   39c88:	mov	w8, #0x30                  	// #48
   39c8c:	strb	w8, [sp, #8]
   39c90:	mov	w8, #0x40                  	// #64
   39c94:	stp	xzr, x8, [sp, #32]
   39c98:	add	x8, sp, #0x38
   39c9c:	stp	xzr, xzr, [sp, #16]
   39ca0:	str	x8, [sp, #48]
   39ca4:	ldrb	w8, [x3]
   39ca8:	mov	x19, x4
   39cac:	tst	w8, #0xe
   39cb0:	b.eq	39cec <PyInit__decimal@@Base+0x33238>  // b.none
   39cb4:	ldr	w8, [x19]
   39cb8:	mov	x22, #0xffffffffffffffff    	// #-1
   39cbc:	orr	w8, w8, #0x100
   39cc0:	str	w8, [x19]
   39cc4:	mov	x0, x22
   39cc8:	add	sp, sp, #0x240
   39ccc:	ldp	x20, x19, [sp, #96]
   39cd0:	ldp	x22, x21, [sp, #80]
   39cd4:	ldp	x24, x23, [sp, #64]
   39cd8:	ldp	x26, x25, [sp, #48]
   39cdc:	ldp	x28, x27, [sp, #32]
   39ce0:	ldp	x29, x30, [sp, #16]
   39ce4:	ldr	d8, [sp], #112
   39ce8:	ret
   39cec:	ldr	x11, [x3, #40]
   39cf0:	ldr	x12, [x3, #24]
   39cf4:	mov	x23, x3
   39cf8:	mov	w22, w2
   39cfc:	mov	x21, x1
   39d00:	add	x9, x11, x12, lsl #3
   39d04:	ldur	x9, [x9, #-8]
   39d08:	mov	x20, x0
   39d0c:	cbz	x9, 39d90 <PyInit__decimal@@Base+0x332dc>
   39d10:	cmp	x12, #0x1
   39d14:	b.lt	39d34 <PyInit__decimal@@Base+0x33280>  // b.tstop
   39d18:	mov	x10, xzr
   39d1c:	ldr	x13, [x11]
   39d20:	cbnz	x13, 39d3c <PyInit__decimal@@Base+0x33288>
   39d24:	add	x10, x10, #0x13
   39d28:	subs	x12, x12, #0x1
   39d2c:	add	x11, x11, #0x8
   39d30:	b.ne	39d1c <PyInit__decimal@@Base+0x33268>  // b.any
   39d34:	mov	x10, xzr
   39d38:	b	39d84 <PyInit__decimal@@Base+0x332d0>
   39d3c:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   39d40:	movk	x11, #0xcccd
   39d44:	mul	x12, x13, x11
   39d48:	mov	x14, #0x9999999999999999    	// #-7378697629483820647
   39d4c:	ror	x12, x12, #1
   39d50:	movk	x14, #0x1999, lsl #48
   39d54:	cmp	x12, x14
   39d58:	b.hi	39d84 <PyInit__decimal@@Base+0x332d0>  // b.pmore
   39d5c:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   39d60:	movk	x12, #0x999a
   39d64:	movk	x12, #0x1999, lsl #48
   39d68:	umulh	x13, x13, x11
   39d6c:	lsr	x13, x13, #3
   39d70:	mul	x14, x13, x11
   39d74:	ror	x14, x14, #1
   39d78:	cmp	x14, x12
   39d7c:	add	x10, x10, #0x1
   39d80:	b.cc	39d68 <PyInit__decimal@@Base+0x332b4>  // b.lo, b.ul, b.last
   39d84:	ldr	x11, [x23, #8]
   39d88:	cmn	x11, x10
   39d8c:	b.mi	39cb4 <PyInit__decimal@@Base+0x33200>  // b.first
   39d90:	ldr	x0, [x20]
   39d94:	cbz	x0, 39dc4 <PyInit__decimal@@Base+0x33310>
   39d98:	mov	w26, wzr
   39d9c:	tst	w8, #0xe
   39da0:	b.ne	39e44 <PyInit__decimal@@Base+0x33390>  // b.any
   39da4:	ldr	x8, [x23, #40]
   39da8:	ldr	x9, [x23, #24]
   39dac:	add	x8, x8, x9, lsl #3
   39db0:	ldur	x8, [x8, #-8]
   39db4:	cbnz	x8, 39e44 <PyInit__decimal@@Base+0x33390>
   39db8:	strh	wzr, [x0]
   39dbc:	mov	w22, #0x1                   	// #1
   39dc0:	b	39cc4 <PyInit__decimal@@Base+0x33210>
   39dc4:	cbz	x9, 39e1c <PyInit__decimal@@Base+0x33368>
   39dc8:	ldp	x9, x8, [x23, #8]
   39dcc:	add	x8, x9, x8
   39dd0:	mov	x9, #0xbcfe                	// #48382
   39dd4:	movk	x9, #0xa84f, lsl #16
   39dd8:	movk	x9, #0xa209, lsl #32
   39ddc:	movk	x9, #0x9, lsl #48
   39de0:	cmp	x8, x9
   39de4:	b.hi	39cb4 <PyInit__decimal@@Base+0x33200>  // b.pmore
   39de8:	ucvtf	d0, w22
   39dec:	ucvtf	d8, x8
   39df0:	bl	6560 <log10@plt>
   39df4:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   39df8:	fdiv	d0, d8, d0
   39dfc:	fmov	d1, x8
   39e00:	fcmp	d0, d1
   39e04:	b.gt	39cb4 <PyInit__decimal@@Base+0x33200>
   39e08:	fcvtzu	x8, d0
   39e0c:	add	x21, x8, #0x1
   39e10:	cmn	x21, #0x1
   39e14:	b.ne	39e20 <PyInit__decimal@@Base+0x3336c>  // b.any
   39e18:	b	39cb4 <PyInit__decimal@@Base+0x33200>
   39e1c:	mov	w21, #0x1                   	// #1
   39e20:	mov	w1, #0x2                   	// #2
   39e24:	mov	x0, x21
   39e28:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   39e2c:	str	x0, [x20]
   39e30:	cbz	x0, 39f48 <PyInit__decimal@@Base+0x33494>
   39e34:	ldrb	w8, [x23]
   39e38:	mov	w26, #0x1                   	// #1
   39e3c:	tst	w8, #0xe
   39e40:	b.eq	39da4 <PyInit__decimal@@Base+0x332f0>  // b.none
   39e44:	ldr	x2, [x23, #8]
   39e48:	tbnz	x2, #63, 39e64 <PyInit__decimal@@Base+0x333b0>
   39e4c:	add	x0, sp, #0x8
   39e50:	mov	x1, x23
   39e54:	mov	x3, x19
   39e58:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   39e5c:	cbnz	w0, 39e80 <PyInit__decimal@@Base+0x333cc>
   39e60:	b	39f30 <PyInit__decimal@@Base+0x3347c>
   39e64:	neg	x2, x2
   39e68:	add	x0, sp, #0x8
   39e6c:	mov	x1, x23
   39e70:	mov	x3, x19
   39e74:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   39e78:	cmn	x0, #0x1
   39e7c:	b.eq	39f30 <PyInit__decimal@@Base+0x3347c>  // b.none
   39e80:	ldr	x23, [sp, #48]
   39e84:	ldr	x25, [sp, #32]
   39e88:	mov	x28, xzr
   39e8c:	mov	w24, w22
   39e90:	sub	x27, x23, #0x8
   39e94:	b	39ea0 <PyInit__decimal@@Base+0x333ec>
   39e98:	mov	x28, x22
   39e9c:	cbz	x8, 39f14 <PyInit__decimal@@Base+0x33460>
   39ea0:	cmp	x28, x21
   39ea4:	add	x22, x28, #0x1
   39ea8:	b.cc	39ed4 <PyInit__decimal@@Base+0x33420>  // b.lo, b.ul, b.last
   39eac:	strb	wzr, [x29, #12]
   39eb0:	ldr	x0, [x20]
   39eb4:	add	x3, x29, #0xc
   39eb8:	mov	w2, #0x2                   	// #2
   39ebc:	mov	x1, x22
   39ec0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   39ec4:	str	x0, [x20]
   39ec8:	ldrb	w8, [x29, #12]
   39ecc:	mov	x21, x22
   39ed0:	cbnz	w8, 39f30 <PyInit__decimal@@Base+0x3347c>
   39ed4:	mov	x0, x23
   39ed8:	mov	x1, x23
   39edc:	mov	x2, x25
   39ee0:	mov	x3, x24
   39ee4:	bl	1c7e0 <PyInit__decimal@@Base+0x15d2c>
   39ee8:	ldr	x8, [x20]
   39eec:	mov	x9, x25
   39ef0:	strh	w0, [x8, x28, lsl #1]
   39ef4:	ldr	x8, [x27, x9, lsl #3]
   39ef8:	mov	x25, x9
   39efc:	cmp	x9, #0x2
   39f00:	b.lt	39e98 <PyInit__decimal@@Base+0x333e4>  // b.tstop
   39f04:	sub	x9, x25, #0x1
   39f08:	cbz	x8, 39ef4 <PyInit__decimal@@Base+0x33440>
   39f0c:	mov	w8, #0x1                   	// #1
   39f10:	b	39e98 <PyInit__decimal@@Base+0x333e4>
   39f14:	cmn	x22, #0x1
   39f18:	b.eq	39f30 <PyInit__decimal@@Base+0x3347c>  // b.none
   39f1c:	ldrb	w8, [sp, #8]
   39f20:	cmp	w8, #0x1f
   39f24:	b.ls	39f64 <PyInit__decimal@@Base+0x334b0>  // b.plast
   39f28:	tbnz	w8, #4, 39cc4 <PyInit__decimal@@Base+0x33210>
   39f2c:	b	39f7c <PyInit__decimal@@Base+0x334c8>
   39f30:	cbz	w26, 39f48 <PyInit__decimal@@Base+0x33494>
   39f34:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39f38:	ldr	x8, [x8, #1376]
   39f3c:	ldr	x0, [x20]
   39f40:	blr	x8
   39f44:	str	xzr, [x20]
   39f48:	ldr	w8, [x19]
   39f4c:	mov	x22, #0xffffffffffffffff    	// #-1
   39f50:	orr	w8, w8, #0x200
   39f54:	str	w8, [x19]
   39f58:	ldrb	w8, [sp, #8]
   39f5c:	cmp	w8, #0x1f
   39f60:	b.hi	39f28 <PyInit__decimal@@Base+0x33474>  // b.pmore
   39f64:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39f68:	ldr	x8, [x8, #1376]
   39f6c:	ldr	x0, [sp, #48]
   39f70:	blr	x8
   39f74:	ldrb	w8, [sp, #8]
   39f78:	tbnz	w8, #4, 39cc4 <PyInit__decimal@@Base+0x33210>
   39f7c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   39f80:	ldr	x8, [x8, #1376]
   39f84:	add	x0, sp, #0x8
   39f88:	blr	x8
   39f8c:	b	39cc4 <PyInit__decimal@@Base+0x33210>
   39f90:	str	d8, [sp, #-112]!
   39f94:	stp	x29, x30, [sp, #16]
   39f98:	stp	x28, x27, [sp, #32]
   39f9c:	stp	x26, x25, [sp, #48]
   39fa0:	stp	x24, x23, [sp, #64]
   39fa4:	stp	x22, x21, [sp, #80]
   39fa8:	stp	x20, x19, [sp, #96]
   39fac:	mov	x29, sp
   39fb0:	sub	sp, sp, #0x240
   39fb4:	mov	w8, #0x30                  	// #48
   39fb8:	strb	w8, [sp, #8]
   39fbc:	mov	w8, #0x40                  	// #64
   39fc0:	stp	xzr, x8, [sp, #32]
   39fc4:	add	x8, sp, #0x38
   39fc8:	stp	xzr, xzr, [sp, #16]
   39fcc:	str	x8, [sp, #48]
   39fd0:	ldrb	w8, [x3]
   39fd4:	mov	x19, x4
   39fd8:	tst	w8, #0xe
   39fdc:	b.eq	3a018 <PyInit__decimal@@Base+0x33564>  // b.none
   39fe0:	ldr	w8, [x19]
   39fe4:	mov	x22, #0xffffffffffffffff    	// #-1
   39fe8:	orr	w8, w8, #0x100
   39fec:	str	w8, [x19]
   39ff0:	mov	x0, x22
   39ff4:	add	sp, sp, #0x240
   39ff8:	ldp	x20, x19, [sp, #96]
   39ffc:	ldp	x22, x21, [sp, #80]
   3a000:	ldp	x24, x23, [sp, #64]
   3a004:	ldp	x26, x25, [sp, #48]
   3a008:	ldp	x28, x27, [sp, #32]
   3a00c:	ldp	x29, x30, [sp, #16]
   3a010:	ldr	d8, [sp], #112
   3a014:	ret
   3a018:	ldr	x11, [x3, #40]
   3a01c:	ldr	x12, [x3, #24]
   3a020:	mov	x23, x3
   3a024:	mov	w22, w2
   3a028:	mov	x21, x1
   3a02c:	add	x9, x11, x12, lsl #3
   3a030:	ldur	x9, [x9, #-8]
   3a034:	mov	x20, x0
   3a038:	cbz	x9, 3a0bc <PyInit__decimal@@Base+0x33608>
   3a03c:	cmp	x12, #0x1
   3a040:	b.lt	3a060 <PyInit__decimal@@Base+0x335ac>  // b.tstop
   3a044:	mov	x10, xzr
   3a048:	ldr	x13, [x11]
   3a04c:	cbnz	x13, 3a068 <PyInit__decimal@@Base+0x335b4>
   3a050:	add	x10, x10, #0x13
   3a054:	subs	x12, x12, #0x1
   3a058:	add	x11, x11, #0x8
   3a05c:	b.ne	3a048 <PyInit__decimal@@Base+0x33594>  // b.any
   3a060:	mov	x10, xzr
   3a064:	b	3a0b0 <PyInit__decimal@@Base+0x335fc>
   3a068:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   3a06c:	movk	x11, #0xcccd
   3a070:	mul	x12, x13, x11
   3a074:	mov	x14, #0x9999999999999999    	// #-7378697629483820647
   3a078:	ror	x12, x12, #1
   3a07c:	movk	x14, #0x1999, lsl #48
   3a080:	cmp	x12, x14
   3a084:	b.hi	3a0b0 <PyInit__decimal@@Base+0x335fc>  // b.pmore
   3a088:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   3a08c:	movk	x12, #0x999a
   3a090:	movk	x12, #0x1999, lsl #48
   3a094:	umulh	x13, x13, x11
   3a098:	lsr	x13, x13, #3
   3a09c:	mul	x14, x13, x11
   3a0a0:	ror	x14, x14, #1
   3a0a4:	cmp	x14, x12
   3a0a8:	add	x10, x10, #0x1
   3a0ac:	b.cc	3a094 <PyInit__decimal@@Base+0x335e0>  // b.lo, b.ul, b.last
   3a0b0:	ldr	x11, [x23, #8]
   3a0b4:	cmn	x11, x10
   3a0b8:	b.mi	39fe0 <PyInit__decimal@@Base+0x3352c>  // b.first
   3a0bc:	ldr	x0, [x20]
   3a0c0:	cbz	x0, 3a0f0 <PyInit__decimal@@Base+0x3363c>
   3a0c4:	mov	w26, wzr
   3a0c8:	tst	w8, #0xe
   3a0cc:	b.ne	3a170 <PyInit__decimal@@Base+0x336bc>  // b.any
   3a0d0:	ldr	x8, [x23, #40]
   3a0d4:	ldr	x9, [x23, #24]
   3a0d8:	add	x8, x8, x9, lsl #3
   3a0dc:	ldur	x8, [x8, #-8]
   3a0e0:	cbnz	x8, 3a170 <PyInit__decimal@@Base+0x336bc>
   3a0e4:	str	wzr, [x0]
   3a0e8:	mov	w22, #0x1                   	// #1
   3a0ec:	b	39ff0 <PyInit__decimal@@Base+0x3353c>
   3a0f0:	cbz	x9, 3a148 <PyInit__decimal@@Base+0x33694>
   3a0f4:	ldp	x9, x8, [x23, #8]
   3a0f8:	add	x8, x9, x8
   3a0fc:	mov	x9, #0xbcfe                	// #48382
   3a100:	movk	x9, #0xa84f, lsl #16
   3a104:	movk	x9, #0xa209, lsl #32
   3a108:	movk	x9, #0x9, lsl #48
   3a10c:	cmp	x8, x9
   3a110:	b.hi	39fe0 <PyInit__decimal@@Base+0x3352c>  // b.pmore
   3a114:	ucvtf	d0, w22
   3a118:	ucvtf	d8, x8
   3a11c:	bl	6560 <log10@plt>
   3a120:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   3a124:	fdiv	d0, d8, d0
   3a128:	fmov	d1, x8
   3a12c:	fcmp	d0, d1
   3a130:	b.gt	39fe0 <PyInit__decimal@@Base+0x3352c>
   3a134:	fcvtzu	x8, d0
   3a138:	add	x21, x8, #0x1
   3a13c:	cmn	x21, #0x1
   3a140:	b.ne	3a14c <PyInit__decimal@@Base+0x33698>  // b.any
   3a144:	b	39fe0 <PyInit__decimal@@Base+0x3352c>
   3a148:	mov	w21, #0x1                   	// #1
   3a14c:	mov	w1, #0x4                   	// #4
   3a150:	mov	x0, x21
   3a154:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   3a158:	str	x0, [x20]
   3a15c:	cbz	x0, 3a280 <PyInit__decimal@@Base+0x337cc>
   3a160:	ldrb	w8, [x23]
   3a164:	mov	w26, #0x1                   	// #1
   3a168:	tst	w8, #0xe
   3a16c:	b.eq	3a0d0 <PyInit__decimal@@Base+0x3361c>  // b.none
   3a170:	ldr	x2, [x23, #8]
   3a174:	tbnz	x2, #63, 3a190 <PyInit__decimal@@Base+0x336dc>
   3a178:	add	x0, sp, #0x8
   3a17c:	mov	x1, x23
   3a180:	mov	x3, x19
   3a184:	bl	262e4 <PyInit__decimal@@Base+0x1f830>
   3a188:	cbnz	w0, 3a1ac <PyInit__decimal@@Base+0x336f8>
   3a18c:	b	3a268 <PyInit__decimal@@Base+0x337b4>
   3a190:	neg	x2, x2
   3a194:	add	x0, sp, #0x8
   3a198:	mov	x1, x23
   3a19c:	mov	x3, x19
   3a1a0:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   3a1a4:	cmn	x0, #0x1
   3a1a8:	b.eq	3a268 <PyInit__decimal@@Base+0x337b4>  // b.none
   3a1ac:	ldr	x23, [sp, #48]
   3a1b0:	ldr	x25, [sp, #32]
   3a1b4:	mov	x28, xzr
   3a1b8:	mov	w24, w22
   3a1bc:	sub	x27, x23, #0x8
   3a1c0:	b	3a1cc <PyInit__decimal@@Base+0x33718>
   3a1c4:	mov	x28, x22
   3a1c8:	cbz	x8, 3a24c <PyInit__decimal@@Base+0x33798>
   3a1cc:	cmp	x28, x21
   3a1d0:	add	x22, x28, #0x1
   3a1d4:	b.cc	3a200 <PyInit__decimal@@Base+0x3374c>  // b.lo, b.ul, b.last
   3a1d8:	strb	wzr, [x29, #12]
   3a1dc:	ldr	x0, [x20]
   3a1e0:	add	x3, x29, #0xc
   3a1e4:	mov	w2, #0x4                   	// #4
   3a1e8:	mov	x1, x22
   3a1ec:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3a1f0:	str	x0, [x20]
   3a1f4:	ldrb	w8, [x29, #12]
   3a1f8:	mov	x21, x22
   3a1fc:	cbnz	w8, 3a268 <PyInit__decimal@@Base+0x337b4>
   3a200:	mov	x4, #0x89e80000            	// #2313682944
   3a204:	movk	x4, #0x2304, lsl #32
   3a208:	movk	x4, #0x8ac7, lsl #48
   3a20c:	mov	x0, x23
   3a210:	mov	x1, x23
   3a214:	mov	x2, x25
   3a218:	mov	x3, x24
   3a21c:	bl	1d6f4 <PyInit__decimal@@Base+0x16c40>
   3a220:	ldr	x8, [x20]
   3a224:	mov	x9, x25
   3a228:	str	w0, [x8, x28, lsl #2]
   3a22c:	ldr	x8, [x27, x9, lsl #3]
   3a230:	mov	x25, x9
   3a234:	cmp	x9, #0x2
   3a238:	b.lt	3a1c4 <PyInit__decimal@@Base+0x33710>  // b.tstop
   3a23c:	sub	x9, x25, #0x1
   3a240:	cbz	x8, 3a22c <PyInit__decimal@@Base+0x33778>
   3a244:	mov	w8, #0x1                   	// #1
   3a248:	b	3a1c4 <PyInit__decimal@@Base+0x33710>
   3a24c:	cmn	x22, #0x1
   3a250:	b.eq	3a268 <PyInit__decimal@@Base+0x337b4>  // b.none
   3a254:	ldrb	w8, [sp, #8]
   3a258:	cmp	w8, #0x1f
   3a25c:	b.ls	3a29c <PyInit__decimal@@Base+0x337e8>  // b.plast
   3a260:	tbnz	w8, #4, 39ff0 <PyInit__decimal@@Base+0x3353c>
   3a264:	b	3a2b4 <PyInit__decimal@@Base+0x33800>
   3a268:	cbz	w26, 3a280 <PyInit__decimal@@Base+0x337cc>
   3a26c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a270:	ldr	x8, [x8, #1376]
   3a274:	ldr	x0, [x20]
   3a278:	blr	x8
   3a27c:	str	xzr, [x20]
   3a280:	ldr	w8, [x19]
   3a284:	mov	x22, #0xffffffffffffffff    	// #-1
   3a288:	orr	w8, w8, #0x200
   3a28c:	str	w8, [x19]
   3a290:	ldrb	w8, [sp, #8]
   3a294:	cmp	w8, #0x1f
   3a298:	b.hi	3a260 <PyInit__decimal@@Base+0x337ac>  // b.pmore
   3a29c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a2a0:	ldr	x8, [x8, #1376]
   3a2a4:	ldr	x0, [sp, #48]
   3a2a8:	blr	x8
   3a2ac:	ldrb	w8, [sp, #8]
   3a2b0:	tbnz	w8, #4, 39ff0 <PyInit__decimal@@Base+0x3353c>
   3a2b4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a2b8:	ldr	x8, [x8, #1376]
   3a2bc:	add	x0, sp, #0x8
   3a2c0:	blr	x8
   3a2c4:	b	39ff0 <PyInit__decimal@@Base+0x3353c>
   3a2c8:	sub	sp, sp, #0x80
   3a2cc:	str	d8, [sp, #16]
   3a2d0:	stp	x29, x30, [sp, #32]
   3a2d4:	stp	x28, x27, [sp, #48]
   3a2d8:	stp	x26, x25, [sp, #64]
   3a2dc:	stp	x24, x23, [sp, #80]
   3a2e0:	stp	x22, x21, [sp, #96]
   3a2e4:	stp	x20, x19, [sp, #112]
   3a2e8:	add	x29, sp, #0x10
   3a2ec:	mov	x8, #0x20000000000000      	// #9007199254740992
   3a2f0:	mov	x19, x6
   3a2f4:	cmp	x2, x8
   3a2f8:	mov	x20, x0
   3a2fc:	b.hi	3a378 <PyInit__decimal@@Base+0x338c4>  // b.pmore
   3a300:	ucvtf	d0, w4
   3a304:	mov	x27, x5
   3a308:	mov	w24, w4
   3a30c:	mov	w23, w3
   3a310:	mov	x25, x2
   3a314:	mov	x26, x1
   3a318:	ucvtf	d8, x2
   3a31c:	bl	6560 <log10@plt>
   3a320:	adrp	x8, 45000 <PyInit__decimal@@Base+0x3e54c>
   3a324:	ldr	d1, [x8, #2560]
   3a328:	fmov	d2, #1.900000000000000000e+01
   3a32c:	fdiv	d0, d0, d2
   3a330:	fmul	d0, d0, d8
   3a334:	fcmp	d0, d1
   3a338:	b.ge	3a378 <PyInit__decimal@@Base+0x338c4>  // b.tcont
   3a33c:	fcvtzs	x8, d0
   3a340:	add	x21, x8, #0x1
   3a344:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   3a348:	cmp	x21, x8
   3a34c:	b.eq	3a378 <PyInit__decimal@@Base+0x338c4>  // b.none
   3a350:	mov	w1, #0x8                   	// #8
   3a354:	mov	x0, x25
   3a358:	bl	21ea0 <PyInit__decimal@@Base+0x1b3ec>
   3a35c:	cbz	x0, 3a404 <PyInit__decimal@@Base+0x33950>
   3a360:	mov	x22, x0
   3a364:	cbz	x25, 3a4d4 <PyInit__decimal@@Base+0x33a20>
   3a368:	cmp	x25, #0x3
   3a36c:	b.hi	3a46c <PyInit__decimal@@Base+0x339b8>  // b.pmore
   3a370:	mov	x8, xzr
   3a374:	b	3a4b8 <PyInit__decimal@@Base+0x33a04>
   3a378:	ldrb	w8, [x20]
   3a37c:	tbnz	w8, #5, 3a3c0 <PyInit__decimal@@Base+0x3390c>
   3a380:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3a384:	ldr	x9, [x20, #32]
   3a388:	ldr	x1, [x21, #1344]
   3a38c:	cmp	x9, x1
   3a390:	b.le	3a3c0 <PyInit__decimal@@Base+0x3390c>
   3a394:	strb	wzr, [x29, #8]
   3a398:	ldr	x0, [x20, #40]
   3a39c:	add	x3, x29, #0x8
   3a3a0:	mov	w2, #0x8                   	// #8
   3a3a4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3a3a8:	str	x0, [x20, #40]
   3a3ac:	ldrb	w8, [x29, #8]
   3a3b0:	cbnz	w8, 3a3bc <PyInit__decimal@@Base+0x33908>
   3a3b4:	ldr	x8, [x21, #1344]
   3a3b8:	str	x8, [x20, #32]
   3a3bc:	ldrb	w8, [x20]
   3a3c0:	and	w8, w8, #0xf0
   3a3c4:	orr	w8, w8, #0x4
   3a3c8:	stp	xzr, xzr, [x20, #16]
   3a3cc:	strb	w8, [x20]
   3a3d0:	str	xzr, [x20, #8]
   3a3d4:	ldr	w8, [x19]
   3a3d8:	orr	w8, w8, #0x100
   3a3dc:	str	w8, [x19]
   3a3e0:	ldp	x20, x19, [sp, #112]
   3a3e4:	ldp	x22, x21, [sp, #96]
   3a3e8:	ldp	x24, x23, [sp, #80]
   3a3ec:	ldp	x26, x25, [sp, #64]
   3a3f0:	ldp	x28, x27, [sp, #48]
   3a3f4:	ldp	x29, x30, [sp, #32]
   3a3f8:	ldr	d8, [sp, #16]
   3a3fc:	add	sp, sp, #0x80
   3a400:	ret
   3a404:	ldrb	w8, [x20]
   3a408:	tbnz	w8, #5, 3a44c <PyInit__decimal@@Base+0x33998>
   3a40c:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3a410:	ldr	x9, [x20, #32]
   3a414:	ldr	x1, [x21, #1344]
   3a418:	cmp	x9, x1
   3a41c:	b.le	3a44c <PyInit__decimal@@Base+0x33998>
   3a420:	strb	wzr, [x29, #12]
   3a424:	ldr	x0, [x20, #40]
   3a428:	add	x3, x29, #0xc
   3a42c:	mov	w2, #0x8                   	// #8
   3a430:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3a434:	str	x0, [x20, #40]
   3a438:	ldrb	w8, [x29, #12]
   3a43c:	cbnz	w8, 3a448 <PyInit__decimal@@Base+0x33994>
   3a440:	ldr	x8, [x21, #1344]
   3a444:	str	x8, [x20, #32]
   3a448:	ldrb	w8, [x20]
   3a44c:	and	w8, w8, #0xf0
   3a450:	orr	w8, w8, #0x4
   3a454:	stp	xzr, xzr, [x20, #16]
   3a458:	strb	w8, [x20]
   3a45c:	str	xzr, [x20, #8]
   3a460:	ldr	w8, [x19]
   3a464:	orr	w8, w8, #0x200
   3a468:	b	3a3dc <PyInit__decimal@@Base+0x33928>
   3a46c:	and	x8, x25, #0xfffffffffffffffc
   3a470:	add	x9, x26, #0x4
   3a474:	add	x10, x22, #0x10
   3a478:	mov	x11, x8
   3a47c:	ldurh	w12, [x9, #-4]
   3a480:	ldrh	w13, [x9]
   3a484:	ldurh	w14, [x9, #-2]
   3a488:	ldrh	w15, [x9, #2]
   3a48c:	fmov	d0, x12
   3a490:	fmov	d1, x13
   3a494:	mov	v0.d[1], x14
   3a498:	mov	v1.d[1], x15
   3a49c:	add	x9, x9, #0x8
   3a4a0:	subs	x11, x11, #0x4
   3a4a4:	stp	q0, q1, [x10, #-16]
   3a4a8:	add	x10, x10, #0x20
   3a4ac:	b.ne	3a47c <PyInit__decimal@@Base+0x339c8>  // b.any
   3a4b0:	cmp	x8, x25
   3a4b4:	b.eq	3a4d4 <PyInit__decimal@@Base+0x33a20>  // b.none
   3a4b8:	sub	x9, x25, x8
   3a4bc:	add	x10, x22, x8, lsl #3
   3a4c0:	add	x8, x26, x8, lsl #1
   3a4c4:	ldrh	w11, [x8], #2
   3a4c8:	subs	x9, x9, #0x1
   3a4cc:	str	x11, [x10], #8
   3a4d0:	b.ne	3a4c4 <PyInit__decimal@@Base+0x33a10>  // b.any
   3a4d4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a4d8:	ldr	x9, [x8, #1344]
   3a4dc:	ldr	x8, [x20, #32]
   3a4e0:	str	x27, [sp, #8]
   3a4e4:	cmp	x9, x21
   3a4e8:	csel	x1, x21, x9, lt  // lt = tstop
   3a4ec:	cmp	x1, x8
   3a4f0:	b.eq	3a528 <PyInit__decimal@@Base+0x33a74>  // b.none
   3a4f4:	ldrb	w9, [x20]
   3a4f8:	tbnz	w9, #5, 3a510 <PyInit__decimal@@Base+0x33a5c>
   3a4fc:	mov	x0, x20
   3a500:	mov	x2, x19
   3a504:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3a508:	cbnz	w0, 3a528 <PyInit__decimal@@Base+0x33a74>
   3a50c:	b	3a844 <PyInit__decimal@@Base+0x33d90>
   3a510:	cmp	x1, x8
   3a514:	b.le	3a528 <PyInit__decimal@@Base+0x33a74>
   3a518:	mov	x0, x20
   3a51c:	mov	x2, x19
   3a520:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3a524:	cbz	w0, 3a844 <PyInit__decimal@@Base+0x33d90>
   3a528:	subs	x8, x25, #0x1
   3a52c:	ldr	x8, [x22, x8, lsl #3]
   3a530:	ldr	x0, [x20, #40]
   3a534:	str	x8, [x0]
   3a538:	b.eq	3a6a0 <PyInit__decimal@@Base+0x33bec>  // b.none
   3a53c:	sub	x28, x25, #0x2
   3a540:	mov	w25, w24
   3a544:	mov	w24, #0x1                   	// #1
   3a548:	mov	x1, x0
   3a54c:	mov	x2, x24
   3a550:	mov	x3, x25
   3a554:	bl	1d5d4 <PyInit__decimal@@Base+0x16b20>
   3a558:	cbz	x0, 3a5ac <PyInit__decimal@@Base+0x33af8>
   3a55c:	mov	x27, x0
   3a560:	cmp	x24, x21
   3a564:	add	x26, x24, #0x1
   3a568:	b.lt	3a5f0 <PyInit__decimal@@Base+0x33b3c>  // b.tstop
   3a56c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a570:	ldr	x9, [x8, #1344]
   3a574:	ldr	x8, [x20, #32]
   3a578:	mov	x21, x26
   3a57c:	cmp	x9, x26
   3a580:	csel	x1, x26, x9, lt  // lt = tstop
   3a584:	cmp	x1, x8
   3a588:	b.eq	3a5f0 <PyInit__decimal@@Base+0x33b3c>  // b.none
   3a58c:	ldrb	w9, [x20]
   3a590:	tbnz	w9, #5, 3a5d0 <PyInit__decimal@@Base+0x33b1c>
   3a594:	mov	x0, x20
   3a598:	mov	x2, x19
   3a59c:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3a5a0:	mov	x21, x26
   3a5a4:	cbnz	w0, 3a5f0 <PyInit__decimal@@Base+0x33b3c>
   3a5a8:	b	3a844 <PyInit__decimal@@Base+0x33d90>
   3a5ac:	ldr	x0, [x20, #40]
   3a5b0:	mov	x26, x24
   3a5b4:	ldr	x2, [x22, x28, lsl #3]
   3a5b8:	mov	x1, x26
   3a5bc:	bl	1c3d4 <PyInit__decimal@@Base+0x15920>
   3a5c0:	cbnz	x0, 3a608 <PyInit__decimal@@Base+0x33b54>
   3a5c4:	mov	x24, x26
   3a5c8:	cbnz	x28, 3a684 <PyInit__decimal@@Base+0x33bd0>
   3a5cc:	b	3a690 <PyInit__decimal@@Base+0x33bdc>
   3a5d0:	cmp	x1, x8
   3a5d4:	mov	x21, x26
   3a5d8:	b.le	3a5f0 <PyInit__decimal@@Base+0x33b3c>
   3a5dc:	mov	x0, x20
   3a5e0:	mov	x2, x19
   3a5e4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3a5e8:	mov	x21, x26
   3a5ec:	cbz	w0, 3a844 <PyInit__decimal@@Base+0x33d90>
   3a5f0:	ldr	x0, [x20, #40]
   3a5f4:	str	x27, [x0, x24, lsl #3]
   3a5f8:	ldr	x2, [x22, x28, lsl #3]
   3a5fc:	mov	x1, x26
   3a600:	bl	1c3d4 <PyInit__decimal@@Base+0x15920>
   3a604:	cbz	x0, 3a5c4 <PyInit__decimal@@Base+0x33b10>
   3a608:	mov	x27, x0
   3a60c:	cmp	x26, x21
   3a610:	add	x24, x26, #0x1
   3a614:	b.lt	3a678 <PyInit__decimal@@Base+0x33bc4>  // b.tstop
   3a618:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a61c:	ldr	x9, [x8, #1344]
   3a620:	ldr	x8, [x20, #32]
   3a624:	mov	x21, x24
   3a628:	cmp	x9, x24
   3a62c:	csel	x1, x24, x9, lt  // lt = tstop
   3a630:	cmp	x1, x8
   3a634:	b.eq	3a678 <PyInit__decimal@@Base+0x33bc4>  // b.none
   3a638:	ldrb	w9, [x20]
   3a63c:	tbnz	w9, #5, 3a658 <PyInit__decimal@@Base+0x33ba4>
   3a640:	mov	x0, x20
   3a644:	mov	x2, x19
   3a648:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3a64c:	mov	x21, x24
   3a650:	cbnz	w0, 3a678 <PyInit__decimal@@Base+0x33bc4>
   3a654:	b	3a844 <PyInit__decimal@@Base+0x33d90>
   3a658:	cmp	x1, x8
   3a65c:	mov	x21, x24
   3a660:	b.le	3a678 <PyInit__decimal@@Base+0x33bc4>
   3a664:	mov	x0, x20
   3a668:	mov	x2, x19
   3a66c:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3a670:	mov	x21, x24
   3a674:	cbz	w0, 3a844 <PyInit__decimal@@Base+0x33d90>
   3a678:	ldr	x8, [x20, #40]
   3a67c:	str	x27, [x8, x26, lsl #3]
   3a680:	cbz	x28, 3a690 <PyInit__decimal@@Base+0x33bdc>
   3a684:	ldr	x0, [x20, #40]
   3a688:	sub	x28, x28, #0x1
   3a68c:	b	3a548 <PyInit__decimal@@Base+0x33a94>
   3a690:	cmn	x24, #0x1
   3a694:	b.eq	3a844 <PyInit__decimal@@Base+0x33d90>  // b.none
   3a698:	ldr	x0, [x20, #40]
   3a69c:	b	3a6a4 <PyInit__decimal@@Base+0x33bf0>
   3a6a0:	mov	w24, #0x1                   	// #1
   3a6a4:	ldrb	w8, [x20]
   3a6a8:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   3a6ac:	str	xzr, [x20, #8]
   3a6b0:	str	x24, [x20, #24]
   3a6b4:	and	w8, w8, #0xfffffff0
   3a6b8:	orr	w8, w8, w23
   3a6bc:	add	x9, x0, x24, lsl #3
   3a6c0:	add	x10, x10, #0xca0
   3a6c4:	strb	w8, [x20]
   3a6c8:	ldur	x9, [x9, #-8]
   3a6cc:	ldr	x11, [x10, #72]
   3a6d0:	cmp	x11, x9
   3a6d4:	b.ls	3a700 <PyInit__decimal@@Base+0x33c4c>  // b.plast
   3a6d8:	ldr	x11, [x10, #32]
   3a6dc:	cmp	x11, x9
   3a6e0:	b.ls	3a728 <PyInit__decimal@@Base+0x33c74>  // b.plast
   3a6e4:	ldr	x11, [x10, #16]
   3a6e8:	cmp	x11, x9
   3a6ec:	b.ls	3a76c <PyInit__decimal@@Base+0x33cb8>  // b.plast
   3a6f0:	ldr	x10, [x10, #8]
   3a6f4:	cmp	x10, x9
   3a6f8:	mov	w9, #0x1                   	// #1
   3a6fc:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a700:	ldr	x11, [x10, #112]
   3a704:	cmp	x11, x9
   3a708:	b.ls	3a744 <PyInit__decimal@@Base+0x33c90>  // b.plast
   3a70c:	ldr	x11, [x10, #88]
   3a710:	cmp	x11, x9
   3a714:	b.ls	3a77c <PyInit__decimal@@Base+0x33cc8>  // b.plast
   3a718:	ldr	x10, [x10, #80]
   3a71c:	cmp	x10, x9
   3a720:	mov	w9, #0xa                   	// #10
   3a724:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a728:	ldr	x11, [x10, #48]
   3a72c:	cmp	x11, x9
   3a730:	b.ls	3a7a0 <PyInit__decimal@@Base+0x33cec>  // b.plast
   3a734:	ldr	x10, [x10, #40]
   3a738:	cmp	x10, x9
   3a73c:	mov	w9, #0x5                   	// #5
   3a740:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a744:	ldr	x11, [x10, #144]
   3a748:	cmp	x11, x9
   3a74c:	b.ls	3a7bc <PyInit__decimal@@Base+0x33d08>  // b.plast
   3a750:	ldr	x11, [x10, #128]
   3a754:	cmp	x11, x9
   3a758:	b.ls	3a7cc <PyInit__decimal@@Base+0x33d18>  // b.plast
   3a75c:	ldr	x10, [x10, #120]
   3a760:	cmp	x10, x9
   3a764:	mov	w9, #0xf                   	// #15
   3a768:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a76c:	ldr	x10, [x10, #24]
   3a770:	cmp	x10, x9
   3a774:	mov	w9, #0x3                   	// #3
   3a778:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a77c:	ldr	x11, [x10, #104]
   3a780:	ldr	x21, [sp, #8]
   3a784:	cmp	x11, x9
   3a788:	b.ls	3a874 <PyInit__decimal@@Base+0x33dc0>  // b.plast
   3a78c:	ldr	x10, [x10, #96]
   3a790:	cmp	x10, x9
   3a794:	mov	w9, #0xc                   	// #12
   3a798:	cinc	x9, x9, ls  // ls = plast
   3a79c:	b	3a7e0 <PyInit__decimal@@Base+0x33d2c>
   3a7a0:	ldr	x11, [x10, #64]
   3a7a4:	cmp	x11, x9
   3a7a8:	b.ls	3a87c <PyInit__decimal@@Base+0x33dc8>  // b.plast
   3a7ac:	ldr	x10, [x10, #56]
   3a7b0:	cmp	x10, x9
   3a7b4:	mov	w9, #0x7                   	// #7
   3a7b8:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a7bc:	ldr	x10, [x10, #152]
   3a7c0:	cmp	x10, x9
   3a7c4:	mov	w9, #0x13                  	// #19
   3a7c8:	b	3a7d8 <PyInit__decimal@@Base+0x33d24>
   3a7cc:	ldr	x10, [x10, #136]
   3a7d0:	cmp	x10, x9
   3a7d4:	mov	w9, #0x11                  	// #17
   3a7d8:	cinc	x9, x9, ls  // ls = plast
   3a7dc:	ldr	x21, [sp, #8]
   3a7e0:	mov	w10, #0x13                  	// #19
   3a7e4:	madd	x9, x24, x10, x9
   3a7e8:	sub	x9, x9, #0x13
   3a7ec:	str	x9, [x20, #16]
   3a7f0:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   3a7f4:	ldr	x10, [x9, #1344]
   3a7f8:	ldr	x9, [x20, #32]
   3a7fc:	cmp	x10, x24
   3a800:	csel	x1, x24, x10, lt  // lt = tstop
   3a804:	cmp	x1, x9
   3a808:	b.eq	3a834 <PyInit__decimal@@Base+0x33d80>  // b.none
   3a80c:	tbnz	w8, #5, 3a820 <PyInit__decimal@@Base+0x33d6c>
   3a810:	mov	x0, x20
   3a814:	mov	x2, x19
   3a818:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3a81c:	b	3a834 <PyInit__decimal@@Base+0x33d80>
   3a820:	cmp	x1, x9
   3a824:	b.le	3a834 <PyInit__decimal@@Base+0x33d80>
   3a828:	mov	x0, x20
   3a82c:	mov	x2, x19
   3a830:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3a834:	mov	x0, x20
   3a838:	mov	x1, x21
   3a83c:	mov	x2, x19
   3a840:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3a844:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a848:	ldr	x1, [x8, #1376]
   3a84c:	mov	x0, x22
   3a850:	ldp	x20, x19, [sp, #112]
   3a854:	ldp	x22, x21, [sp, #96]
   3a858:	ldp	x24, x23, [sp, #80]
   3a85c:	ldp	x26, x25, [sp, #64]
   3a860:	ldp	x28, x27, [sp, #48]
   3a864:	ldp	x29, x30, [sp, #32]
   3a868:	ldr	d8, [sp, #16]
   3a86c:	add	sp, sp, #0x80
   3a870:	br	x1
   3a874:	mov	w9, #0xe                   	// #14
   3a878:	b	3a7e0 <PyInit__decimal@@Base+0x33d2c>
   3a87c:	mov	w9, #0x9                   	// #9
   3a880:	b	3a7dc <PyInit__decimal@@Base+0x33d28>
   3a884:	sub	sp, sp, #0x80
   3a888:	str	d8, [sp, #16]
   3a88c:	stp	x29, x30, [sp, #32]
   3a890:	stp	x28, x27, [sp, #48]
   3a894:	stp	x26, x25, [sp, #64]
   3a898:	stp	x24, x23, [sp, #80]
   3a89c:	stp	x22, x21, [sp, #96]
   3a8a0:	stp	x20, x19, [sp, #112]
   3a8a4:	add	x29, sp, #0x10
   3a8a8:	mov	x8, #0x20000000000000      	// #9007199254740992
   3a8ac:	mov	x19, x6
   3a8b0:	cmp	x2, x8
   3a8b4:	mov	x20, x0
   3a8b8:	b.ls	3a948 <PyInit__decimal@@Base+0x33e94>  // b.plast
   3a8bc:	ldrb	w8, [x20]
   3a8c0:	tbnz	w8, #5, 3a904 <PyInit__decimal@@Base+0x33e50>
   3a8c4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3a8c8:	ldr	x9, [x20, #32]
   3a8cc:	ldr	x1, [x21, #1344]
   3a8d0:	cmp	x9, x1
   3a8d4:	b.le	3a904 <PyInit__decimal@@Base+0x33e50>
   3a8d8:	strb	wzr, [x29, #12]
   3a8dc:	ldr	x0, [x20, #40]
   3a8e0:	add	x3, x29, #0xc
   3a8e4:	mov	w2, #0x8                   	// #8
   3a8e8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3a8ec:	str	x0, [x20, #40]
   3a8f0:	ldrb	w8, [x29, #12]
   3a8f4:	cbnz	w8, 3a900 <PyInit__decimal@@Base+0x33e4c>
   3a8f8:	ldr	x8, [x21, #1344]
   3a8fc:	str	x8, [x20, #32]
   3a900:	ldrb	w8, [x20]
   3a904:	and	w8, w8, #0xf0
   3a908:	orr	w8, w8, #0x4
   3a90c:	stp	xzr, xzr, [x20, #16]
   3a910:	strb	w8, [x20]
   3a914:	str	xzr, [x20, #8]
   3a918:	ldr	w8, [x19]
   3a91c:	orr	w8, w8, #0x100
   3a920:	str	w8, [x19]
   3a924:	ldp	x20, x19, [sp, #112]
   3a928:	ldp	x22, x21, [sp, #96]
   3a92c:	ldp	x24, x23, [sp, #80]
   3a930:	ldp	x26, x25, [sp, #64]
   3a934:	ldp	x28, x27, [sp, #48]
   3a938:	ldp	x29, x30, [sp, #32]
   3a93c:	ldr	d8, [sp, #16]
   3a940:	add	sp, sp, #0x80
   3a944:	ret
   3a948:	ucvtf	d0, w4
   3a94c:	mov	x21, x5
   3a950:	mov	w25, w4
   3a954:	mov	w23, w3
   3a958:	mov	x22, x2
   3a95c:	mov	x24, x1
   3a960:	ucvtf	d8, x2
   3a964:	bl	6560 <log10@plt>
   3a968:	adrp	x8, 45000 <PyInit__decimal@@Base+0x3e54c>
   3a96c:	ldr	d1, [x8, #2560]
   3a970:	fmov	d2, #1.900000000000000000e+01
   3a974:	fdiv	d0, d0, d2
   3a978:	fmul	d0, d0, d8
   3a97c:	fcmp	d0, d1
   3a980:	b.ge	3a8bc <PyInit__decimal@@Base+0x33e08>  // b.tcont
   3a984:	fcvtzs	x8, d0
   3a988:	add	x28, x8, #0x1
   3a98c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   3a990:	cmp	x28, x8
   3a994:	b.eq	3a8bc <PyInit__decimal@@Base+0x33e08>  // b.none
   3a998:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3a99c:	ldr	x9, [x8, #1344]
   3a9a0:	ldr	x8, [x20, #32]
   3a9a4:	str	x21, [sp, #8]
   3a9a8:	cmp	x9, x28
   3a9ac:	csel	x1, x28, x9, lt  // lt = tstop
   3a9b0:	cmp	x1, x8
   3a9b4:	b.eq	3a9ec <PyInit__decimal@@Base+0x33f38>  // b.none
   3a9b8:	ldrb	w9, [x20]
   3a9bc:	tbnz	w9, #5, 3a9d4 <PyInit__decimal@@Base+0x33f20>
   3a9c0:	mov	x0, x20
   3a9c4:	mov	x2, x19
   3a9c8:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3a9cc:	cbnz	w0, 3a9ec <PyInit__decimal@@Base+0x33f38>
   3a9d0:	b	3a924 <PyInit__decimal@@Base+0x33e70>
   3a9d4:	cmp	x1, x8
   3a9d8:	b.le	3a9ec <PyInit__decimal@@Base+0x33f38>
   3a9dc:	mov	x0, x20
   3a9e0:	mov	x2, x19
   3a9e4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3a9e8:	cbz	w0, 3a924 <PyInit__decimal@@Base+0x33e70>
   3a9ec:	subs	x8, x22, #0x1
   3a9f0:	ldr	w8, [x24, x8, lsl #2]
   3a9f4:	ldr	x0, [x20, #40]
   3a9f8:	str	x8, [x0]
   3a9fc:	b.eq	3ab68 <PyInit__decimal@@Base+0x340b4>  // b.none
   3aa00:	mov	w25, w25
   3aa04:	sub	x21, x22, #0x2
   3aa08:	mov	w22, #0x1                   	// #1
   3aa0c:	b	3aa38 <PyInit__decimal@@Base+0x33f84>
   3aa10:	mov	x0, x20
   3aa14:	mov	x2, x19
   3aa18:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3aa1c:	mov	x28, x22
   3aa20:	cbz	w0, 3a924 <PyInit__decimal@@Base+0x33e70>
   3aa24:	ldr	x8, [x20, #40]
   3aa28:	str	x27, [x8, x26, lsl #3]
   3aa2c:	cbz	x21, 3ab5c <PyInit__decimal@@Base+0x340a8>
   3aa30:	ldr	x0, [x20, #40]
   3aa34:	sub	x21, x21, #0x1
   3aa38:	mov	x4, #0x89e80000            	// #2313682944
   3aa3c:	movk	x4, #0x2304, lsl #32
   3aa40:	movk	x4, #0x8ac7, lsl #48
   3aa44:	mov	x1, x0
   3aa48:	mov	x2, x22
   3aa4c:	mov	x3, x25
   3aa50:	bl	1d674 <PyInit__decimal@@Base+0x16bc0>
   3aa54:	cbz	x0, 3aaa8 <PyInit__decimal@@Base+0x33ff4>
   3aa58:	mov	x27, x0
   3aa5c:	cmp	x22, x28
   3aa60:	add	x26, x22, #0x1
   3aa64:	b.lt	3aad4 <PyInit__decimal@@Base+0x34020>  // b.tstop
   3aa68:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3aa6c:	ldr	x9, [x8, #1344]
   3aa70:	ldr	x8, [x20, #32]
   3aa74:	mov	x28, x26
   3aa78:	cmp	x9, x26
   3aa7c:	csel	x1, x26, x9, lt  // lt = tstop
   3aa80:	cmp	x1, x8
   3aa84:	b.eq	3aad4 <PyInit__decimal@@Base+0x34020>  // b.none
   3aa88:	ldrb	w9, [x20]
   3aa8c:	tbnz	w9, #5, 3aab4 <PyInit__decimal@@Base+0x34000>
   3aa90:	mov	x0, x20
   3aa94:	mov	x2, x19
   3aa98:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3aa9c:	mov	x28, x26
   3aaa0:	cbnz	w0, 3aad4 <PyInit__decimal@@Base+0x34020>
   3aaa4:	b	3a924 <PyInit__decimal@@Base+0x33e70>
   3aaa8:	ldr	x0, [x20, #40]
   3aaac:	mov	x26, x22
   3aab0:	b	3aadc <PyInit__decimal@@Base+0x34028>
   3aab4:	cmp	x1, x8
   3aab8:	mov	x28, x26
   3aabc:	b.le	3aad4 <PyInit__decimal@@Base+0x34020>
   3aac0:	mov	x0, x20
   3aac4:	mov	x2, x19
   3aac8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3aacc:	mov	x28, x26
   3aad0:	cbz	w0, 3a924 <PyInit__decimal@@Base+0x33e70>
   3aad4:	ldr	x0, [x20, #40]
   3aad8:	str	x27, [x0, x22, lsl #3]
   3aadc:	ldr	w2, [x24, x21, lsl #2]
   3aae0:	mov	x3, #0x89e80000            	// #2313682944
   3aae4:	movk	x3, #0x2304, lsl #32
   3aae8:	movk	x3, #0x8ac7, lsl #48
   3aaec:	mov	x1, x26
   3aaf0:	bl	1d568 <PyInit__decimal@@Base+0x16ab4>
   3aaf4:	cbz	x0, 3ab54 <PyInit__decimal@@Base+0x340a0>
   3aaf8:	mov	x27, x0
   3aafc:	cmp	x26, x28
   3ab00:	add	x22, x26, #0x1
   3ab04:	b.lt	3aa24 <PyInit__decimal@@Base+0x33f70>  // b.tstop
   3ab08:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3ab0c:	ldr	x9, [x8, #1344]
   3ab10:	ldr	x8, [x20, #32]
   3ab14:	mov	x28, x22
   3ab18:	cmp	x9, x22
   3ab1c:	csel	x1, x22, x9, lt  // lt = tstop
   3ab20:	cmp	x1, x8
   3ab24:	b.eq	3aa24 <PyInit__decimal@@Base+0x33f70>  // b.none
   3ab28:	ldrb	w9, [x20]
   3ab2c:	tbz	w9, #5, 3aa10 <PyInit__decimal@@Base+0x33f5c>
   3ab30:	cmp	x1, x8
   3ab34:	mov	x28, x22
   3ab38:	b.le	3aa24 <PyInit__decimal@@Base+0x33f70>
   3ab3c:	mov	x0, x20
   3ab40:	mov	x2, x19
   3ab44:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3ab48:	mov	x28, x22
   3ab4c:	cbnz	w0, 3aa24 <PyInit__decimal@@Base+0x33f70>
   3ab50:	b	3a924 <PyInit__decimal@@Base+0x33e70>
   3ab54:	mov	x22, x26
   3ab58:	cbnz	x21, 3aa30 <PyInit__decimal@@Base+0x33f7c>
   3ab5c:	cmn	x22, #0x1
   3ab60:	b.eq	3a924 <PyInit__decimal@@Base+0x33e70>  // b.none
   3ab64:	ldr	x0, [x20, #40]
   3ab68:	ldrb	w8, [x20]
   3ab6c:	adrp	x10, 44000 <PyInit__decimal@@Base+0x3d54c>
   3ab70:	str	xzr, [x20, #8]
   3ab74:	str	x22, [x20, #24]
   3ab78:	and	w8, w8, #0xfffffff0
   3ab7c:	orr	w8, w8, w23
   3ab80:	add	x9, x0, x22, lsl #3
   3ab84:	add	x10, x10, #0xca0
   3ab88:	strb	w8, [x20]
   3ab8c:	ldur	x9, [x9, #-8]
   3ab90:	ldr	x11, [x10, #72]
   3ab94:	cmp	x11, x9
   3ab98:	b.ls	3abc4 <PyInit__decimal@@Base+0x34110>  // b.plast
   3ab9c:	ldr	x11, [x10, #32]
   3aba0:	cmp	x11, x9
   3aba4:	b.ls	3abec <PyInit__decimal@@Base+0x34138>  // b.plast
   3aba8:	ldr	x11, [x10, #16]
   3abac:	cmp	x11, x9
   3abb0:	b.ls	3ac34 <PyInit__decimal@@Base+0x34180>  // b.plast
   3abb4:	ldr	x10, [x10, #8]
   3abb8:	cmp	x10, x9
   3abbc:	mov	w9, #0x1                   	// #1
   3abc0:	b	3ac90 <PyInit__decimal@@Base+0x341dc>
   3abc4:	ldr	x11, [x10, #112]
   3abc8:	cmp	x11, x9
   3abcc:	b.ls	3ac08 <PyInit__decimal@@Base+0x34154>  // b.plast
   3abd0:	ldr	x11, [x10, #88]
   3abd4:	cmp	x11, x9
   3abd8:	b.ls	3ac44 <PyInit__decimal@@Base+0x34190>  // b.plast
   3abdc:	ldr	x10, [x10, #80]
   3abe0:	cmp	x10, x9
   3abe4:	mov	w9, #0xa                   	// #10
   3abe8:	b	3ac90 <PyInit__decimal@@Base+0x341dc>
   3abec:	ldr	x11, [x10, #48]
   3abf0:	cmp	x11, x9
   3abf4:	b.ls	3ac64 <PyInit__decimal@@Base+0x341b0>  // b.plast
   3abf8:	ldr	x10, [x10, #40]
   3abfc:	cmp	x10, x9
   3ac00:	mov	w9, #0x5                   	// #5
   3ac04:	b	3ac90 <PyInit__decimal@@Base+0x341dc>
   3ac08:	ldr	x11, [x10, #144]
   3ac0c:	cmp	x11, x9
   3ac10:	b.ls	3ac84 <PyInit__decimal@@Base+0x341d0>  // b.plast
   3ac14:	ldr	x11, [x10, #128]
   3ac18:	ldr	x21, [sp, #8]
   3ac1c:	cmp	x11, x9
   3ac20:	b.ls	3ad1c <PyInit__decimal@@Base+0x34268>  // b.plast
   3ac24:	ldr	x10, [x10, #120]
   3ac28:	cmp	x10, x9
   3ac2c:	mov	w9, #0xf                   	// #15
   3ac30:	b	3ac94 <PyInit__decimal@@Base+0x341e0>
   3ac34:	ldr	x10, [x10, #24]
   3ac38:	cmp	x10, x9
   3ac3c:	mov	w9, #0x3                   	// #3
   3ac40:	b	3ac90 <PyInit__decimal@@Base+0x341dc>
   3ac44:	ldr	x11, [x10, #104]
   3ac48:	ldr	x21, [sp, #8]
   3ac4c:	cmp	x11, x9
   3ac50:	b.ls	3ad2c <PyInit__decimal@@Base+0x34278>  // b.plast
   3ac54:	ldr	x10, [x10, #96]
   3ac58:	cmp	x10, x9
   3ac5c:	mov	w9, #0xc                   	// #12
   3ac60:	b	3ac94 <PyInit__decimal@@Base+0x341e0>
   3ac64:	ldr	x11, [x10, #64]
   3ac68:	ldr	x21, [sp, #8]
   3ac6c:	cmp	x11, x9
   3ac70:	b.ls	3ad34 <PyInit__decimal@@Base+0x34280>  // b.plast
   3ac74:	ldr	x10, [x10, #56]
   3ac78:	cmp	x10, x9
   3ac7c:	mov	w9, #0x7                   	// #7
   3ac80:	b	3ac94 <PyInit__decimal@@Base+0x341e0>
   3ac84:	ldr	x10, [x10, #152]
   3ac88:	cmp	x10, x9
   3ac8c:	mov	w9, #0x13                  	// #19
   3ac90:	ldr	x21, [sp, #8]
   3ac94:	cinc	x9, x9, ls  // ls = plast
   3ac98:	mov	w10, #0x13                  	// #19
   3ac9c:	madd	x9, x22, x10, x9
   3aca0:	sub	x9, x9, #0x13
   3aca4:	str	x9, [x20, #16]
   3aca8:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   3acac:	ldr	x10, [x9, #1344]
   3acb0:	ldr	x9, [x20, #32]
   3acb4:	cmp	x10, x22
   3acb8:	csel	x1, x22, x10, lt  // lt = tstop
   3acbc:	cmp	x1, x9
   3acc0:	b.eq	3acec <PyInit__decimal@@Base+0x34238>  // b.none
   3acc4:	tbnz	w8, #5, 3acd8 <PyInit__decimal@@Base+0x34224>
   3acc8:	mov	x0, x20
   3accc:	mov	x2, x19
   3acd0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3acd4:	b	3acec <PyInit__decimal@@Base+0x34238>
   3acd8:	cmp	x1, x9
   3acdc:	b.le	3acec <PyInit__decimal@@Base+0x34238>
   3ace0:	mov	x0, x20
   3ace4:	mov	x2, x19
   3ace8:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3acec:	mov	x0, x20
   3acf0:	mov	x1, x21
   3acf4:	mov	x2, x19
   3acf8:	ldp	x20, x19, [sp, #112]
   3acfc:	ldp	x22, x21, [sp, #96]
   3ad00:	ldp	x24, x23, [sp, #80]
   3ad04:	ldp	x26, x25, [sp, #64]
   3ad08:	ldp	x28, x27, [sp, #48]
   3ad0c:	ldp	x29, x30, [sp, #32]
   3ad10:	ldr	d8, [sp, #16]
   3ad14:	add	sp, sp, #0x80
   3ad18:	b	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3ad1c:	ldr	x10, [x10, #136]
   3ad20:	cmp	x10, x9
   3ad24:	mov	w9, #0x11                  	// #17
   3ad28:	b	3ac94 <PyInit__decimal@@Base+0x341e0>
   3ad2c:	mov	w9, #0xe                   	// #14
   3ad30:	b	3ac98 <PyInit__decimal@@Base+0x341e4>
   3ad34:	mov	w9, #0x9                   	// #9
   3ad38:	b	3ac98 <PyInit__decimal@@Base+0x341e4>
   3ad3c:	sub	sp, sp, #0x70
   3ad40:	stp	x29, x30, [sp, #32]
   3ad44:	stp	x26, x25, [sp, #48]
   3ad48:	stp	x24, x23, [sp, #64]
   3ad4c:	stp	x22, x21, [sp, #80]
   3ad50:	stp	x20, x19, [sp, #96]
   3ad54:	add	x29, sp, #0x20
   3ad58:	mov	x8, #0x435f                	// #17247
   3ad5c:	movk	x8, #0xd79, lsl #16
   3ad60:	movk	x8, #0x35e5, lsl #32
   3ad64:	movk	x8, #0xd794, lsl #48
   3ad68:	umulh	x8, x4, x8
   3ad6c:	lsr	x24, x8, #4
   3ad70:	mov	x8, #0xffffffffffffffed    	// #-19
   3ad74:	mov	x20, x3
   3ad78:	mov	x22, x1
   3ad7c:	madd	x25, x24, x8, x4
   3ad80:	mov	x19, x0
   3ad84:	cbz	x25, 3ae5c <PyInit__decimal@@Base+0x343a8>
   3ad88:	add	x8, x22, x20, lsl #3
   3ad8c:	mov	x23, x2
   3ad90:	ldur	x2, [x8, #-8]
   3ad94:	mov	w8, #0x13                  	// #19
   3ad98:	sub	x21, x8, x25
   3ad9c:	add	x0, sp, #0x8
   3ada0:	add	x1, sp, #0x10
   3ada4:	mov	x3, x21
   3ada8:	sub	x26, x23, #0x1
   3adac:	bl	3aeb8 <PyInit__decimal@@Base+0x34404>
   3adb0:	ldr	x8, [sp, #8]
   3adb4:	cbz	x8, 3adc8 <PyInit__decimal@@Base+0x34314>
   3adb8:	ldr	x9, [x19, x26, lsl #3]
   3adbc:	cmp	x9, x8
   3adc0:	b.ne	3ae94 <PyInit__decimal@@Base+0x343e0>  // b.any
   3adc4:	sub	x26, x23, #0x2
   3adc8:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   3adcc:	add	x8, x8, #0xca0
   3add0:	ldr	x23, [x8, x25, lsl #3]
   3add4:	ldr	x25, [sp, #16]
   3add8:	sub	x8, x20, #0x2
   3addc:	cmn	x8, #0x1
   3ade0:	b.eq	3ae2c <PyInit__decimal@@Base+0x34378>  // b.none
   3ade4:	add	x26, x19, x26, lsl #3
   3ade8:	sub	x22, x22, #0x10
   3adec:	ldr	x2, [x22, x20, lsl #3]
   3adf0:	add	x0, sp, #0x8
   3adf4:	sub	x1, x29, #0x8
   3adf8:	mov	x3, x21
   3adfc:	bl	3aeb8 <PyInit__decimal@@Base+0x34404>
   3ae00:	ldr	x8, [sp, #8]
   3ae04:	ldr	x9, [x26]
   3ae08:	madd	x8, x25, x23, x8
   3ae0c:	cmp	x9, x8
   3ae10:	b.ne	3ae90 <PyInit__decimal@@Base+0x343dc>  // b.any
   3ae14:	ldur	x25, [x29, #-8]
   3ae18:	sub	x20, x20, #0x1
   3ae1c:	cmp	x20, #0x1
   3ae20:	sub	x26, x26, #0x8
   3ae24:	b.ne	3adec <PyInit__decimal@@Base+0x34338>  // b.any
   3ae28:	str	x25, [sp, #16]
   3ae2c:	ldr	x8, [x19, x24, lsl #3]
   3ae30:	mul	x9, x25, x23
   3ae34:	cmp	x8, x9
   3ae38:	b.ne	3ae94 <PyInit__decimal@@Base+0x343e0>  // b.any
   3ae3c:	sub	x8, x19, #0x8
   3ae40:	subs	x9, x24, #0x1
   3ae44:	b.lt	3ae88 <PyInit__decimal@@Base+0x343d4>  // b.tstop
   3ae48:	ldr	x10, [x8, x24, lsl #3]
   3ae4c:	mov	x24, x9
   3ae50:	cbz	x10, 3ae40 <PyInit__decimal@@Base+0x3438c>
   3ae54:	mov	w0, #0x1                   	// #1
   3ae58:	b	3ae9c <PyInit__decimal@@Base+0x343e8>
   3ae5c:	add	x8, x19, x24, lsl #3
   3ae60:	sub	x8, x8, #0x8
   3ae64:	sub	x9, x22, #0x8
   3ae68:	cbz	x20, 3ae3c <PyInit__decimal@@Base+0x34388>
   3ae6c:	lsl	x10, x20, #3
   3ae70:	ldr	x11, [x8, x10]
   3ae74:	ldr	x10, [x9, x10]
   3ae78:	sub	x20, x20, #0x1
   3ae7c:	cmp	x11, x10
   3ae80:	b.eq	3ae68 <PyInit__decimal@@Base+0x343b4>  // b.none
   3ae84:	b	3ae94 <PyInit__decimal@@Base+0x343e0>
   3ae88:	mov	w0, wzr
   3ae8c:	b	3ae9c <PyInit__decimal@@Base+0x343e8>
   3ae90:	str	x25, [sp, #16]
   3ae94:	mov	w8, #0xffffffff            	// #-1
   3ae98:	cneg	w0, w8, cs  // cs = hs, nlast
   3ae9c:	ldp	x20, x19, [sp, #96]
   3aea0:	ldp	x22, x21, [sp, #80]
   3aea4:	ldp	x24, x23, [sp, #64]
   3aea8:	ldp	x26, x25, [sp, #48]
   3aeac:	ldp	x29, x30, [sp, #32]
   3aeb0:	add	sp, sp, #0x70
   3aeb4:	ret
   3aeb8:	cmp	x3, #0x9
   3aebc:	b.hi	3aef0 <PyInit__decimal@@Base+0x3443c>  // b.pmore
   3aec0:	cmp	x3, #0x4
   3aec4:	b.hi	3af44 <PyInit__decimal@@Base+0x34490>  // b.pmore
   3aec8:	b.hi	3b220 <PyInit__decimal@@Base+0x3476c>  // b.pmore
   3aecc:	adrp	x8, 45000 <PyInit__decimal@@Base+0x3e54c>
   3aed0:	add	x8, x8, #0x89
   3aed4:	adr	x9, 3aee4 <PyInit__decimal@@Base+0x34430>
   3aed8:	ldrb	w10, [x8, x3]
   3aedc:	add	x9, x9, x10, lsl #2
   3aee0:	br	x9
   3aee4:	str	x2, [x0]
   3aee8:	str	xzr, [x1]
   3aeec:	ret
   3aef0:	cmp	x3, #0xe
   3aef4:	b.hi	3af90 <PyInit__decimal@@Base+0x344dc>  // b.pmore
   3aef8:	sub	x8, x3, #0xa
   3aefc:	cmp	x8, #0x4
   3af00:	b.hi	3b220 <PyInit__decimal@@Base+0x3476c>  // b.pmore
   3af04:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   3af08:	add	x9, x9, #0x7f
   3af0c:	adr	x10, 3af1c <PyInit__decimal@@Base+0x34468>
   3af10:	ldrb	w11, [x9, x8]
   3af14:	add	x10, x10, x11, lsl #2
   3af18:	br	x10
   3af1c:	mov	x8, #0xd5bf                	// #54719
   3af20:	movk	x8, #0xbded, lsl #16
   3af24:	movk	x8, #0xfece, lsl #32
   3af28:	movk	x8, #0xdbe6, lsl #48
   3af2c:	mov	x9, #0xffffffffffff1c00    	// #-58368
   3af30:	movk	x9, #0xabf4, lsl #16
   3af34:	umulh	x8, x2, x8
   3af38:	movk	x9, #0xfffd, lsl #32
   3af3c:	lsr	x8, x8, #33
   3af40:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3af44:	sub	x8, x3, #0x5
   3af48:	cmp	x8, #0x4
   3af4c:	b.hi	3b220 <PyInit__decimal@@Base+0x3476c>  // b.pmore
   3af50:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   3af54:	add	x9, x9, #0x84
   3af58:	adr	x10, 3af68 <PyInit__decimal@@Base+0x344b4>
   3af5c:	ldrb	w11, [x9, x8]
   3af60:	add	x10, x10, x11, lsl #2
   3af64:	br	x10
   3af68:	mov	x9, #0x7843                	// #30787
   3af6c:	movk	x9, #0x71b4, lsl #16
   3af70:	movk	x9, #0x5ac4, lsl #32
   3af74:	lsr	x8, x2, #5
   3af78:	movk	x9, #0xa7c, lsl #48
   3af7c:	mov	x10, #0xffffffffffff7960    	// #-34464
   3af80:	umulh	x8, x8, x9
   3af84:	movk	x10, #0xfffe, lsl #16
   3af88:	lsr	x8, x8, #7
   3af8c:	b	3b214 <PyInit__decimal@@Base+0x34760>
   3af90:	sub	x8, x3, #0xf
   3af94:	cmp	x8, #0x4
   3af98:	b.hi	3b220 <PyInit__decimal@@Base+0x3476c>  // b.pmore
   3af9c:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   3afa0:	add	x9, x9, #0x7a
   3afa4:	adr	x10, 3afb4 <PyInit__decimal@@Base+0x34500>
   3afa8:	ldrb	w11, [x9, x8]
   3afac:	add	x10, x10, x11, lsl #2
   3afb0:	br	x10
   3afb4:	mov	x9, #0xeac3                	// #60099
   3afb8:	movk	x9, #0xf3dc, lsl #16
   3afbc:	movk	x9, #0x4075, lsl #32
   3afc0:	mov	x10, #0x8000                	// #32768
   3afc4:	lsr	x8, x2, #15
   3afc8:	movk	x9, #0x2, lsl #48
   3afcc:	movk	x10, #0x5b39, lsl #16
   3afd0:	movk	x10, #0x7281, lsl #32
   3afd4:	umulh	x8, x8, x9
   3afd8:	movk	x10, #0xfffc, lsl #48
   3afdc:	lsr	x8, x8, #20
   3afe0:	b	3b214 <PyInit__decimal@@Base+0x34760>
   3afe4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   3afe8:	movk	x8, #0xcccd
   3afec:	umulh	x8, x2, x8
   3aff0:	mov	x9, #0xfffffffffffffff6    	// #-10
   3aff4:	lsr	x8, x8, #3
   3aff8:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3affc:	mov	x9, #0xf5c3                	// #62915
   3b000:	movk	x9, #0x5c28, lsl #16
   3b004:	movk	x9, #0xc28f, lsl #32
   3b008:	lsr	x8, x2, #2
   3b00c:	movk	x9, #0x28f5, lsl #48
   3b010:	umulh	x8, x8, x9
   3b014:	mov	x10, #0xffffffffffffff9c    	// #-100
   3b018:	lsr	x8, x8, #2
   3b01c:	b	3b214 <PyInit__decimal@@Base+0x34760>
   3b020:	mov	x9, #0xf7cf                	// #63439
   3b024:	movk	x9, #0xe353, lsl #16
   3b028:	movk	x9, #0x9ba5, lsl #32
   3b02c:	lsr	x8, x2, #3
   3b030:	movk	x9, #0x20c4, lsl #48
   3b034:	umulh	x8, x8, x9
   3b038:	mov	x10, #0xfffffffffffffc18    	// #-1000
   3b03c:	lsr	x8, x8, #4
   3b040:	b	3b214 <PyInit__decimal@@Base+0x34760>
   3b044:	mov	x8, #0x594b                	// #22859
   3b048:	movk	x8, #0x3886, lsl #16
   3b04c:	movk	x8, #0xc5d6, lsl #32
   3b050:	movk	x8, #0x346d, lsl #48
   3b054:	umulh	x8, x2, x8
   3b058:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   3b05c:	lsr	x8, x8, #11
   3b060:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b064:	mov	x8, #0xaaff                	// #43775
   3b068:	movk	x8, #0xcb24, lsl #16
   3b06c:	movk	x8, #0xff0b, lsl #32
   3b070:	movk	x8, #0xafeb, lsl #48
   3b074:	mov	x9, #0xffffffffffff1800    	// #-59392
   3b078:	movk	x9, #0xb789, lsl #16
   3b07c:	umulh	x8, x2, x8
   3b080:	movk	x9, #0xffe8, lsl #32
   3b084:	lsr	x8, x8, #36
   3b088:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b08c:	mov	x8, #0x2233                	// #8755
   3b090:	movk	x8, #0x5bd4, lsl #16
   3b094:	movk	x8, #0x3302, lsl #32
   3b098:	movk	x8, #0x232f, lsl #48
   3b09c:	mov	x9, #0xfffffffffffff000    	// #-4096
   3b0a0:	movk	x9, #0x2b5a, lsl #16
   3b0a4:	umulh	x8, x2, x8
   3b0a8:	movk	x9, #0xff17, lsl #32
   3b0ac:	lsr	x8, x8, #37
   3b0b0:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b0b4:	mov	x8, #0x385                 	// #901
   3b0b8:	movk	x8, #0x92ed, lsl #16
   3b0bc:	movk	x8, #0x84d0, lsl #32
   3b0c0:	movk	x8, #0x384b, lsl #48
   3b0c4:	mov	x9, #0xffffffffffff6000    	// #-40960
   3b0c8:	movk	x9, #0xb18d, lsl #16
   3b0cc:	umulh	x8, x2, x8
   3b0d0:	movk	x9, #0xf6e7, lsl #32
   3b0d4:	lsr	x8, x8, #41
   3b0d8:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b0dc:	mov	x8, #0xcd81                	// #52609
   3b0e0:	movk	x8, #0x5095, lsl #16
   3b0e4:	movk	x8, #0x4dc3, lsl #32
   3b0e8:	movk	x8, #0xb42, lsl #48
   3b0ec:	mov	x9, #0xffffffffffffc000    	// #-16384
   3b0f0:	movk	x9, #0xef85, lsl #16
   3b0f4:	umulh	x8, x2, x8
   3b0f8:	movk	x9, #0xa50c, lsl #32
   3b0fc:	lsr	x8, x8, #42
   3b100:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b104:	mov	x8, #0x34db                	// #13531
   3b108:	movk	x8, #0xd7b6, lsl #16
   3b10c:	movk	x8, #0xde82, lsl #32
   3b110:	movk	x8, #0x431b, lsl #48
   3b114:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   3b118:	umulh	x8, x2, x8
   3b11c:	movk	x9, #0xfff0, lsl #16
   3b120:	lsr	x8, x8, #18
   3b124:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b128:	mov	x8, #0x42bd                	// #17085
   3b12c:	movk	x8, #0xe57a, lsl #16
   3b130:	movk	x8, #0x94d5, lsl #32
   3b134:	movk	x8, #0xd6bf, lsl #48
   3b138:	mov	x9, #0xffffffffffff6980    	// #-38528
   3b13c:	umulh	x8, x2, x8
   3b140:	movk	x9, #0xff67, lsl #16
   3b144:	lsr	x8, x8, #23
   3b148:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b14c:	mov	x8, #0xcefd                	// #52989
   3b150:	movk	x8, #0x8461, lsl #16
   3b154:	movk	x8, #0x7711, lsl #32
   3b158:	movk	x8, #0xabcc, lsl #48
   3b15c:	mov	x9, #0xffffffffffff1f00    	// #-57600
   3b160:	umulh	x8, x2, x8
   3b164:	movk	x9, #0xfa0a, lsl #16
   3b168:	lsr	x8, x8, #26
   3b16c:	b	3b1bc <PyInit__decimal@@Base+0x34708>
   3b170:	mov	x9, #0x5a53                	// #23123
   3b174:	movk	x9, #0xa09b, lsl #16
   3b178:	movk	x9, #0xb82f, lsl #32
   3b17c:	lsr	x8, x2, #9
   3b180:	movk	x9, #0x44, lsl #48
   3b184:	mov	x10, #0xffffffffffff3600    	// #-51712
   3b188:	umulh	x8, x8, x9
   3b18c:	movk	x10, #0xc465, lsl #16
   3b190:	lsr	x8, x8, #11
   3b194:	b	3b214 <PyInit__decimal@@Base+0x34760>
   3b198:	mov	x8, #0x7857                	// #30807
   3b19c:	movk	x8, #0xb113, lsl #16
   3b1a0:	movk	x8, #0x652f, lsl #32
   3b1a4:	movk	x8, #0x39a5, lsl #48
   3b1a8:	mov	x9, #0x903f0000            	// #2420047872
   3b1ac:	movk	x9, #0x790d, lsl #32
   3b1b0:	umulh	x8, x2, x8
   3b1b4:	movk	x9, #0xffdc, lsl #48
   3b1b8:	lsr	x8, x8, #51
   3b1bc:	str	x8, [x0]
   3b1c0:	madd	x8, x8, x9, x2
   3b1c4:	b	3b21c <PyInit__decimal@@Base+0x34768>
   3b1c8:	mov	x9, #0x1b53                	// #6995
   3b1cc:	movk	x9, #0xd519, lsl #16
   3b1d0:	lsr	x8, x2, #17
   3b1d4:	movk	x9, #0x5c3b, lsl #32
   3b1d8:	mov	x10, #0xa2760000            	// #2725642240
   3b1dc:	movk	x10, #0xba87, lsl #32
   3b1e0:	umulh	x8, x8, x9
   3b1e4:	movk	x10, #0xfe9c, lsl #48
   3b1e8:	lsr	x8, x8, #22
   3b1ec:	b	3b214 <PyInit__decimal@@Base+0x34760>
   3b1f0:	mov	x9, #0x490f                	// #18703
   3b1f4:	movk	x9, #0x7747, lsl #16
   3b1f8:	lsr	x8, x2, #18
   3b1fc:	movk	x9, #0x49c9, lsl #32
   3b200:	mov	x10, #0x589c0000            	// #1486618624
   3b204:	movk	x10, #0x494c, lsl #32
   3b208:	umulh	x8, x8, x9
   3b20c:	movk	x10, #0xf21f, lsl #48
   3b210:	lsr	x8, x8, #24
   3b214:	str	x8, [x0]
   3b218:	madd	x8, x8, x10, x2
   3b21c:	str	x8, [x1]
   3b220:	ret
   3b224:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   3b228:	movk	x8, #0x2304, lsl #32
   3b22c:	movk	x8, #0x8ac7, lsl #48
   3b230:	cmp	x2, x8
   3b234:	csinc	x8, xzr, x8, ls  // ls = plast
   3b238:	cset	w9, hi  // hi = pmore
   3b23c:	sub	x8, x2, x8
   3b240:	str	x9, [x0]
   3b244:	b	3b21c <PyInit__decimal@@Base+0x34768>
   3b248:	stp	x29, x30, [sp, #-96]!
   3b24c:	stp	x28, x27, [sp, #16]
   3b250:	stp	x26, x25, [sp, #32]
   3b254:	stp	x24, x23, [sp, #48]
   3b258:	stp	x22, x21, [sp, #64]
   3b25c:	stp	x20, x19, [sp, #80]
   3b260:	mov	x29, sp
   3b264:	sub	sp, sp, #0x800
   3b268:	ldr	q0, [x2, #16]
   3b26c:	ldrb	w8, [x2]
   3b270:	mov	x27, x4
   3b274:	mov	x24, x3
   3b278:	stur	q0, [sp, #104]
   3b27c:	ldr	q0, [x2, #32]
   3b280:	and	w8, w8, #0x1e
   3b284:	orr	w8, w8, #0x40
   3b288:	mov	x25, x2
   3b28c:	stur	q0, [sp, #120]
   3b290:	ldr	q0, [x3, #16]
   3b294:	ldrb	w9, [x3]
   3b298:	mov	x19, x1
   3b29c:	mov	x20, x0
   3b2a0:	stur	q0, [sp, #56]
   3b2a4:	ldr	q0, [x3, #32]
   3b2a8:	and	w9, w9, #0x1e
   3b2ac:	cmp	x0, x2
   3b2b0:	strb	w8, [sp, #88]
   3b2b4:	orr	w8, w9, #0x40
   3b2b8:	str	xzr, [sp, #96]
   3b2bc:	strb	w8, [sp, #40]
   3b2c0:	stur	q0, [sp, #72]
   3b2c4:	str	xzr, [sp, #48]
   3b2c8:	b.eq	3b2d8 <PyInit__decimal@@Base+0x34824>  // b.none
   3b2cc:	cmp	x20, x24
   3b2d0:	mov	x22, x20
   3b2d4:	b.ne	3b2e4 <PyInit__decimal@@Base+0x34830>  // b.any
   3b2d8:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
   3b2dc:	mov	x22, x0
   3b2e0:	cbz	x0, 3b46c <PyInit__decimal@@Base+0x349b8>
   3b2e4:	cmp	x19, x25
   3b2e8:	b.eq	3b2f8 <PyInit__decimal@@Base+0x34844>  // b.none
   3b2ec:	cmp	x19, x24
   3b2f0:	mov	x21, x19
   3b2f4:	b.ne	3b304 <PyInit__decimal@@Base+0x34850>  // b.any
   3b2f8:	bl	22000 <PyInit__decimal@@Base+0x1b54c>
   3b2fc:	mov	x21, x0
   3b300:	cbz	x0, 3b4f4 <PyInit__decimal@@Base+0x34a40>
   3b304:	add	x0, sp, #0x88
   3b308:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   3b30c:	ldr	x10, [x25, #16]
   3b310:	ldr	x9, [x24, #16]
   3b314:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   3b318:	movk	x8, #0xb6b3, lsl #32
   3b31c:	movk	x8, #0xde0, lsl #48
   3b320:	sub	x9, x10, x9
   3b324:	add	x9, x9, #0x4
   3b328:	cmp	x10, x8
   3b32c:	str	x9, [sp, #136]
   3b330:	b.gt	3b45c <PyInit__decimal@@Base+0x349a8>
   3b334:	cmp	x9, x8
   3b338:	b.gt	3b45c <PyInit__decimal@@Base+0x349a8>
   3b33c:	mov	w10, #0x30                  	// #48
   3b340:	mov	w11, #0x40                  	// #64
   3b344:	add	x12, sp, #0x550
   3b348:	strb	w10, [sp, #1312]
   3b34c:	strb	w10, [sp, #752]
   3b350:	mov	w10, #0x1                   	// #1
   3b354:	str	x22, [sp, #32]
   3b358:	add	x8, sp, #0x2b8
   3b35c:	str	x12, [sp, #1352]
   3b360:	mov	w12, #0x90                  	// #144
   3b364:	str	x11, [sp, #1344]
   3b368:	str	x11, [sp, #784]
   3b36c:	adrp	x11, 3e000 <PyInit__decimal@@Base+0x3754c>
   3b370:	adrp	x22, 44000 <PyInit__decimal@@Base+0x3d54c>
   3b374:	dup	v1.2d, x10
   3b378:	ldp	x15, x17, [sp, #48]
   3b37c:	ldur	q0, [sp, #64]
   3b380:	strb	w12, [sp, #696]
   3b384:	add	x22, x22, #0xca0
   3b388:	mov	x10, #0x435f                	// #17247
   3b38c:	stur	q1, [x8, #24]
   3b390:	ldr	q1, [x11, #1552]
   3b394:	ldr	x9, [sp, #80]
   3b398:	movk	x10, #0xd79, lsl #16
   3b39c:	ldr	x23, [x22, #136]
   3b3a0:	movk	x10, #0x35e5, lsl #32
   3b3a4:	add	x13, sp, #0x320
   3b3a8:	mov	w14, #0x2                   	// #2
   3b3ac:	movk	x10, #0xd794, lsl #48
   3b3b0:	sub	x18, x29, #0xb0
   3b3b4:	str	x13, [sp, #792]
   3b3b8:	add	x13, sp, #0x2e8
   3b3bc:	str	x14, [sp, #744]
   3b3c0:	mov	w14, #0x50                  	// #80
   3b3c4:	stur	q1, [x8, #8]
   3b3c8:	neg	x8, x17
   3b3cc:	umulh	x10, x17, x10
   3b3d0:	fmov	x11, d0
   3b3d4:	str	xzr, [sp, #1320]
   3b3d8:	str	xzr, [sp, #1328]
   3b3dc:	str	xzr, [sp, #760]
   3b3e0:	str	xzr, [sp, #768]
   3b3e4:	str	xzr, [sp, #1336]
   3b3e8:	str	xzr, [sp, #776]
   3b3ec:	mov	w12, #0x13                  	// #19
   3b3f0:	stur	q0, [x18, #24]
   3b3f4:	sturb	w14, [x29, #-176]
   3b3f8:	str	x13, [sp, #736]
   3b3fc:	stur	x9, [x29, #-136]
   3b400:	stp	x8, x17, [x29, #-168]
   3b404:	add	x8, x9, x11, lsl #3
   3b408:	stp	xzr, x23, [sp, #184]
   3b40c:	lsr	x10, x10, #4
   3b410:	ldrb	w16, [sp, #40]
   3b414:	msub	x10, x10, x12, x17
   3b418:	ldur	x8, [x8, #-8]
   3b41c:	cmp	x10, #0x0
   3b420:	csel	x12, x12, x10, eq  // eq = none
   3b424:	cmp	x12, #0x13
   3b428:	add	x10, sp, #0x88
   3b42c:	b.cs	3b47c <PyInit__decimal@@Base+0x349c8>  // b.hs, b.nlast
   3b430:	cmp	x11, #0x2
   3b434:	b.lt	3b488 <PyInit__decimal@@Base+0x349d4>  // b.tstop
   3b438:	mov	w13, #0x13                  	// #19
   3b43c:	add	x9, x9, x11, lsl #3
   3b440:	sub	x11, x13, x12
   3b444:	ldur	x9, [x9, #-16]
   3b448:	ldr	x12, [x22, x12, lsl #3]
   3b44c:	ldr	x11, [x22, x11, lsl #3]
   3b450:	udiv	x9, x9, x12
   3b454:	madd	x8, x11, x8, x9
   3b458:	b	3b488 <PyInit__decimal@@Base+0x349d4>
   3b45c:	ldr	w8, [x27]
   3b460:	orr	w8, w8, #0x8
   3b464:	str	w8, [x27]
   3b468:	b	3bc50 <PyInit__decimal@@Base+0x3519c>
   3b46c:	ldr	w8, [x27]
   3b470:	orr	w8, w8, #0x200
   3b474:	str	w8, [x27]
   3b478:	b	3bcd0 <PyInit__decimal@@Base+0x3521c>
   3b47c:	add	x9, x22, x12, lsl #3
   3b480:	ldur	x9, [x9, #-152]
   3b484:	udiv	x8, x8, x9
   3b488:	ldr	x26, [x22, #72]
   3b48c:	add	x24, x10, #0x1c
   3b490:	str	x15, [sp, #16]
   3b494:	str	w16, [sp, #12]
   3b498:	cmp	x26, x8
   3b49c:	str	x17, [sp]
   3b4a0:	b.ls	3b4cc <PyInit__decimal@@Base+0x34a18>  // b.plast
   3b4a4:	ldr	x9, [x22, #32]
   3b4a8:	cmp	x9, x8
   3b4ac:	b.ls	3b504 <PyInit__decimal@@Base+0x34a50>  // b.plast
   3b4b0:	ldr	x9, [x22, #16]
   3b4b4:	cmp	x9, x8
   3b4b8:	b.ls	3b548 <PyInit__decimal@@Base+0x34a94>  // b.plast
   3b4bc:	ldr	x9, [x22, #8]
   3b4c0:	cmp	x9, x8
   3b4c4:	mov	w9, #0x1                   	// #1
   3b4c8:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b4cc:	ldr	x9, [x22, #112]
   3b4d0:	cmp	x9, x8
   3b4d4:	b.ls	3b520 <PyInit__decimal@@Base+0x34a6c>  // b.plast
   3b4d8:	ldr	x9, [x22, #88]
   3b4dc:	cmp	x9, x8
   3b4e0:	b.ls	3b558 <PyInit__decimal@@Base+0x34aa4>  // b.plast
   3b4e4:	ldr	x9, [x22, #80]
   3b4e8:	cmp	x9, x8
   3b4ec:	mov	w9, #0xa                   	// #10
   3b4f0:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b4f4:	ldr	w8, [x27]
   3b4f8:	orr	w8, w8, #0x200
   3b4fc:	str	w8, [x27]
   3b500:	b	3bc50 <PyInit__decimal@@Base+0x3519c>
   3b504:	ldr	x9, [x22, #48]
   3b508:	cmp	x9, x8
   3b50c:	b.ls	3b574 <PyInit__decimal@@Base+0x34ac0>  // b.plast
   3b510:	ldr	x9, [x22, #40]
   3b514:	cmp	x9, x8
   3b518:	mov	w9, #0x5                   	// #5
   3b51c:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b520:	ldr	x9, [x22, #144]
   3b524:	cmp	x9, x8
   3b528:	b.ls	3b590 <PyInit__decimal@@Base+0x34adc>  // b.plast
   3b52c:	ldr	x9, [x22, #128]
   3b530:	cmp	x9, x8
   3b534:	b.ls	3b5a0 <PyInit__decimal@@Base+0x34aec>  // b.plast
   3b538:	ldr	x9, [x22, #120]
   3b53c:	cmp	x9, x8
   3b540:	mov	w9, #0xf                   	// #15
   3b544:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b548:	ldr	x9, [x22, #24]
   3b54c:	cmp	x9, x8
   3b550:	mov	w9, #0x3                   	// #3
   3b554:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b558:	ldr	x9, [x22, #104]
   3b55c:	cmp	x9, x8
   3b560:	b.ls	3b74c <PyInit__decimal@@Base+0x34c98>  // b.plast
   3b564:	ldr	x9, [x22, #96]
   3b568:	cmp	x9, x8
   3b56c:	mov	w9, #0xc                   	// #12
   3b570:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b574:	ldr	x9, [x22, #64]
   3b578:	cmp	x9, x8
   3b57c:	b.ls	3b754 <PyInit__decimal@@Base+0x34ca0>  // b.plast
   3b580:	ldr	x9, [x22, #56]
   3b584:	cmp	x9, x8
   3b588:	mov	w9, #0x7                   	// #7
   3b58c:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b590:	ldr	x9, [x22, #152]
   3b594:	cmp	x9, x8
   3b598:	mov	w9, #0x13                  	// #19
   3b59c:	b	3b5a8 <PyInit__decimal@@Base+0x34af4>
   3b5a0:	cmp	x23, x8
   3b5a4:	mov	w9, #0x11                  	// #17
   3b5a8:	cinc	x9, x9, ls  // ls = plast
   3b5ac:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3b5b0:	mov	w11, #0x13                  	// #19
   3b5b4:	ldr	x12, [x10, #1344]
   3b5b8:	sub	x9, x11, x9
   3b5bc:	ldr	x10, [x21, #32]
   3b5c0:	ldr	x9, [x22, x9, lsl #3]
   3b5c4:	cmp	x12, #0x2
   3b5c8:	mov	w11, #0x2                   	// #2
   3b5cc:	csel	x1, x12, x11, gt
   3b5d0:	cmp	x1, x10
   3b5d4:	mul	x25, x9, x8
   3b5d8:	b.eq	3b608 <PyInit__decimal@@Base+0x34b54>  // b.none
   3b5dc:	ldrb	w8, [x21]
   3b5e0:	tbnz	w8, #5, 3b5f4 <PyInit__decimal@@Base+0x34b40>
   3b5e4:	mov	x0, x21
   3b5e8:	mov	x2, x24
   3b5ec:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3b5f0:	b	3b608 <PyInit__decimal@@Base+0x34b54>
   3b5f4:	cmp	x1, x10
   3b5f8:	b.le	3b608 <PyInit__decimal@@Base+0x34b54>
   3b5fc:	mov	x0, x21
   3b600:	mov	x2, x24
   3b604:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3b608:	ldr	x0, [x21, #40]
   3b60c:	add	x1, sp, #0xb8
   3b610:	mov	w2, #0x2                   	// #2
   3b614:	mov	x3, x25
   3b618:	bl	1c7e0 <PyInit__decimal@@Base+0x15d2c>
   3b61c:	ldrb	w8, [x21]
   3b620:	mov	x9, #0xffffffffffffffef    	// #-17
   3b624:	mov	x28, x21
   3b628:	mov	w10, #0x1                   	// #1
   3b62c:	and	w8, w8, #0xf0
   3b630:	strb	w8, [x21]
   3b634:	str	x9, [x28, #8]!
   3b638:	ldr	x9, [x21, #40]
   3b63c:	str	x27, [sp, #24]
   3b640:	ldr	x8, [x9, #8]
   3b644:	cmp	x8, #0x0
   3b648:	cinc	x8, x10, ne  // ne = any
   3b64c:	str	x8, [x21, #24]
   3b650:	add	x9, x9, x8, lsl #3
   3b654:	ldur	x9, [x9, #-8]
   3b658:	cmp	x26, x9
   3b65c:	b.ls	3b688 <PyInit__decimal@@Base+0x34bd4>  // b.plast
   3b660:	ldr	x10, [x22, #32]
   3b664:	cmp	x10, x9
   3b668:	b.ls	3b6b0 <PyInit__decimal@@Base+0x34bfc>  // b.plast
   3b66c:	ldr	x10, [x22, #16]
   3b670:	cmp	x10, x9
   3b674:	b.ls	3b6f4 <PyInit__decimal@@Base+0x34c40>  // b.plast
   3b678:	ldr	x10, [x22, #8]
   3b67c:	cmp	x10, x9
   3b680:	mov	w9, #0x1                   	// #1
   3b684:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b688:	ldr	x10, [x22, #112]
   3b68c:	cmp	x10, x9
   3b690:	b.ls	3b6cc <PyInit__decimal@@Base+0x34c18>  // b.plast
   3b694:	ldr	x10, [x22, #88]
   3b698:	cmp	x10, x9
   3b69c:	b.ls	3b704 <PyInit__decimal@@Base+0x34c50>  // b.plast
   3b6a0:	ldr	x10, [x22, #80]
   3b6a4:	cmp	x10, x9
   3b6a8:	mov	w9, #0xa                   	// #10
   3b6ac:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b6b0:	ldr	x10, [x22, #48]
   3b6b4:	cmp	x10, x9
   3b6b8:	b.ls	3b720 <PyInit__decimal@@Base+0x34c6c>  // b.plast
   3b6bc:	ldr	x10, [x22, #40]
   3b6c0:	cmp	x10, x9
   3b6c4:	mov	w9, #0x5                   	// #5
   3b6c8:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b6cc:	ldr	x10, [x22, #144]
   3b6d0:	cmp	x10, x9
   3b6d4:	b.ls	3b73c <PyInit__decimal@@Base+0x34c88>  // b.plast
   3b6d8:	ldr	x10, [x22, #128]
   3b6dc:	cmp	x10, x9
   3b6e0:	b.ls	3b75c <PyInit__decimal@@Base+0x34ca8>  // b.plast
   3b6e4:	ldr	x10, [x22, #120]
   3b6e8:	cmp	x10, x9
   3b6ec:	mov	w9, #0xf                   	// #15
   3b6f0:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b6f4:	ldr	x10, [x22, #24]
   3b6f8:	cmp	x10, x9
   3b6fc:	mov	w9, #0x3                   	// #3
   3b700:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b704:	ldr	x10, [x22, #104]
   3b708:	cmp	x10, x9
   3b70c:	b.ls	3c0a4 <PyInit__decimal@@Base+0x355f0>  // b.plast
   3b710:	ldr	x10, [x22, #96]
   3b714:	cmp	x10, x9
   3b718:	mov	w9, #0xc                   	// #12
   3b71c:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b720:	ldr	x10, [x22, #64]
   3b724:	cmp	x10, x9
   3b728:	b.ls	3c0ac <PyInit__decimal@@Base+0x355f8>  // b.plast
   3b72c:	ldr	x10, [x22, #56]
   3b730:	cmp	x10, x9
   3b734:	mov	w9, #0x7                   	// #7
   3b738:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b73c:	ldr	x10, [x22, #152]
   3b740:	cmp	x10, x9
   3b744:	mov	w9, #0x13                  	// #19
   3b748:	b	3b764 <PyInit__decimal@@Base+0x34cb0>
   3b74c:	mov	w9, #0xe                   	// #14
   3b750:	b	3b5ac <PyInit__decimal@@Base+0x34af8>
   3b754:	mov	w9, #0x9                   	// #9
   3b758:	b	3b5ac <PyInit__decimal@@Base+0x34af8>
   3b75c:	cmp	x23, x9
   3b760:	mov	w9, #0x11                  	// #17
   3b764:	cinc	x9, x9, ls  // ls = plast
   3b768:	mov	w10, #0x13                  	// #19
   3b76c:	madd	x8, x8, x10, x9
   3b770:	sub	x8, x8, #0x13
   3b774:	sub	x0, x29, #0x48
   3b778:	sub	x22, x29, #0xb0
   3b77c:	str	x8, [x21, #16]
   3b780:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   3b784:	sub	x0, x29, #0x80
   3b788:	bl	1d9b8 <PyInit__decimal@@Base+0x16f04>
   3b78c:	ldr	x12, [sp, #136]
   3b790:	adrp	x10, 45000 <PyInit__decimal@@Base+0x3e54c>
   3b794:	mov	x11, #0x63                  	// #99
   3b798:	mov	x9, #0xff9d                	// #65437
   3b79c:	movk	x11, #0xa764, lsl #16
   3b7a0:	ldr	q0, [x10, #2496]
   3b7a4:	mov	w8, #0x8                   	// #8
   3b7a8:	movk	x9, #0x589b, lsl #16
   3b7ac:	movk	x11, #0xb6b3, lsl #32
   3b7b0:	movk	x9, #0x494c, lsl #32
   3b7b4:	movk	x11, #0xde0, lsl #48
   3b7b8:	stur	w8, [x29, #-92]
   3b7bc:	stur	w8, [x29, #-36]
   3b7c0:	add	x8, x12, #0x2
   3b7c4:	movk	x9, #0xf21f, lsl #48
   3b7c8:	dup	v1.2d, x11
   3b7cc:	cmp	x8, #0x11
   3b7d0:	stur	x9, [x29, #-112]
   3b7d4:	stur	q0, [x22, #112]
   3b7d8:	str	q1, [x22, #48]
   3b7dc:	b.lt	3baa4 <PyInit__decimal@@Base+0x34ff0>  // b.tstop
   3b7e0:	add	x10, sp, #0x520
   3b7e4:	mov	w9, #0xffffffff            	// #-1
   3b7e8:	add	x22, x10, #0x8
   3b7ec:	add	x10, sp, #0xb8
   3b7f0:	add	x11, x8, #0x1
   3b7f4:	add	x12, x8, #0x2
   3b7f8:	cmp	x11, #0x0
   3b7fc:	csinc	x8, x12, x8, lt  // lt = tstop
   3b800:	add	w9, w9, #0x1
   3b804:	asr	x8, x8, #1
   3b808:	cmp	x11, #0x21
   3b80c:	str	x8, [x10, w9, sxtw #3]
   3b810:	b.gt	3b7f0 <PyInit__decimal@@Base+0x34d3c>
   3b814:	tbnz	w9, #31, 3baa4 <PyInit__decimal@@Base+0x34ff0>
   3b818:	mov	w27, w9
   3b81c:	mov	w26, #0x1041                	// #4161
   3b820:	add	x23, sp, #0xb8
   3b824:	b	3b858 <PyInit__decimal@@Base+0x34da4>
   3b828:	ldrb	w8, [x21]
   3b82c:	and	w8, w8, #0xf0
   3b830:	orr	w8, w8, #0x4
   3b834:	strb	w8, [x21]
   3b838:	stp	xzr, xzr, [x28]
   3b83c:	str	xzr, [x28, #16]
   3b840:	ldr	w8, [sp, #164]
   3b844:	orr	w8, w8, #0x100
   3b848:	str	w8, [sp, #164]
   3b84c:	cmp	x27, #0x0
   3b850:	sub	x27, x27, #0x1
   3b854:	b.le	3baa4 <PyInit__decimal@@Base+0x34ff0>
   3b858:	add	x0, sp, #0x520
   3b85c:	sub	x3, x29, #0x80
   3b860:	sub	x4, x29, #0x18
   3b864:	mov	x1, x21
   3b868:	mov	x2, x21
   3b86c:	stur	wzr, [x29, #-24]
   3b870:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3b874:	add	x0, sp, #0x520
   3b878:	sub	x1, x29, #0x80
   3b87c:	sub	x2, x29, #0x18
   3b880:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3b884:	ldur	w9, [x29, #-24]
   3b888:	ldr	w8, [sp, #164]
   3b88c:	tst	w9, w26
   3b890:	orr	w8, w8, w9
   3b894:	str	w8, [sp, #164]
   3b898:	b.eq	3b908 <PyInit__decimal@@Base+0x34e54>  // b.none
   3b89c:	ldrb	w9, [sp, #1312]
   3b8a0:	tbnz	w9, #5, 3b8ec <PyInit__decimal@@Base+0x34e38>
   3b8a4:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   3b8a8:	ldr	x10, [sp, #1344]
   3b8ac:	ldr	x1, [x11, #1344]
   3b8b0:	cmp	x10, x1
   3b8b4:	b.le	3b8ec <PyInit__decimal@@Base+0x34e38>
   3b8b8:	ldr	x0, [sp, #1352]
   3b8bc:	sub	x3, x29, #0x14
   3b8c0:	mov	w2, #0x8                   	// #8
   3b8c4:	sturb	wzr, [x29, #-20]
   3b8c8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3b8cc:	ldurb	w8, [x29, #-20]
   3b8d0:	str	x0, [sp, #1352]
   3b8d4:	cbnz	w8, 3b8e4 <PyInit__decimal@@Base+0x34e30>
   3b8d8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3b8dc:	ldr	x8, [x8, #1344]
   3b8e0:	str	x8, [sp, #1344]
   3b8e4:	ldrb	w9, [sp, #1312]
   3b8e8:	ldr	w8, [sp, #164]
   3b8ec:	and	w9, w9, #0xf0
   3b8f0:	orr	w8, w8, #0x100
   3b8f4:	orr	w9, w9, #0x4
   3b8f8:	strb	w9, [sp, #1312]
   3b8fc:	stp	xzr, xzr, [x22]
   3b900:	str	xzr, [x22, #16]
   3b904:	str	w8, [sp, #164]
   3b908:	ldr	x8, [x23, x27, lsl #3]
   3b90c:	ldur	x9, [x29, #-160]
   3b910:	lsl	x8, x8, #1
   3b914:	add	x8, x8, #0x5
   3b918:	subs	x2, x9, x8
   3b91c:	stur	x8, [x29, #-72]
   3b920:	b.le	3b948 <PyInit__decimal@@Base+0x34e94>
   3b924:	add	x0, sp, #0x2f0
   3b928:	sub	x1, x29, #0xb0
   3b92c:	mov	x3, x24
   3b930:	add	x25, sp, #0x2f0
   3b934:	bl	267b8 <PyInit__decimal@@Base+0x1fd04>
   3b938:	ldur	x8, [x29, #-72]
   3b93c:	neg	x8, x8
   3b940:	str	x8, [sp, #760]
   3b944:	b	3b94c <PyInit__decimal@@Base+0x34e98>
   3b948:	sub	x25, x29, #0xb0
   3b94c:	add	x0, sp, #0x2f0
   3b950:	add	x2, sp, #0x520
   3b954:	sub	x3, x29, #0x48
   3b958:	mov	x1, x25
   3b95c:	mov	x4, x24
   3b960:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3b964:	add	x0, sp, #0x2f0
   3b968:	sub	x1, x29, #0x48
   3b96c:	mov	x2, x24
   3b970:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3b974:	add	x0, sp, #0x520
   3b978:	add	x2, sp, #0x2b8
   3b97c:	sub	x3, x29, #0x80
   3b980:	sub	x4, x29, #0x18
   3b984:	mov	x1, x21
   3b988:	stur	wzr, [x29, #-24]
   3b98c:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3b990:	add	x0, sp, #0x520
   3b994:	sub	x1, x29, #0x80
   3b998:	sub	x2, x29, #0x18
   3b99c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3b9a0:	ldur	w9, [x29, #-24]
   3b9a4:	ldr	w8, [sp, #164]
   3b9a8:	tst	w9, w26
   3b9ac:	orr	w8, w8, w9
   3b9b0:	str	w8, [sp, #164]
   3b9b4:	b.eq	3ba24 <PyInit__decimal@@Base+0x34f70>  // b.none
   3b9b8:	ldrb	w9, [sp, #1312]
   3b9bc:	tbnz	w9, #5, 3ba08 <PyInit__decimal@@Base+0x34f54>
   3b9c0:	adrp	x11, 59000 <PyInit__decimal@@Base+0x5254c>
   3b9c4:	ldr	x10, [sp, #1344]
   3b9c8:	ldr	x1, [x11, #1344]
   3b9cc:	cmp	x10, x1
   3b9d0:	b.le	3ba08 <PyInit__decimal@@Base+0x34f54>
   3b9d4:	ldr	x0, [sp, #1352]
   3b9d8:	sub	x3, x29, #0x14
   3b9dc:	mov	w2, #0x8                   	// #8
   3b9e0:	sturb	wzr, [x29, #-20]
   3b9e4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3b9e8:	ldurb	w8, [x29, #-20]
   3b9ec:	str	x0, [sp, #1352]
   3b9f0:	cbnz	w8, 3ba00 <PyInit__decimal@@Base+0x34f4c>
   3b9f4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3b9f8:	ldr	x8, [x8, #1344]
   3b9fc:	str	x8, [sp, #1344]
   3ba00:	ldrb	w9, [sp, #1312]
   3ba04:	ldr	w8, [sp, #164]
   3ba08:	and	w9, w9, #0xf0
   3ba0c:	orr	w8, w8, #0x100
   3ba10:	orr	w9, w9, #0x4
   3ba14:	strb	w9, [sp, #1312]
   3ba18:	stp	xzr, xzr, [x22]
   3ba1c:	str	xzr, [x22, #16]
   3ba20:	str	w8, [sp, #164]
   3ba24:	add	x1, sp, #0x520
   3ba28:	add	x2, sp, #0x2f0
   3ba2c:	sub	x3, x29, #0x80
   3ba30:	sub	x4, x29, #0x18
   3ba34:	mov	x0, x21
   3ba38:	stur	wzr, [x29, #-24]
   3ba3c:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   3ba40:	ldur	w8, [x29, #-24]
   3ba44:	ldr	w9, [sp, #164]
   3ba48:	tst	w8, w26
   3ba4c:	orr	w9, w9, w8
   3ba50:	str	w9, [sp, #164]
   3ba54:	b.eq	3b84c <PyInit__decimal@@Base+0x34d98>  // b.none
   3ba58:	ldrb	w8, [x21]
   3ba5c:	tbnz	w8, #5, 3b82c <PyInit__decimal@@Base+0x34d78>
   3ba60:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3ba64:	ldr	x9, [x21, #32]
   3ba68:	ldr	x1, [x10, #1344]
   3ba6c:	cmp	x9, x1
   3ba70:	b.le	3b82c <PyInit__decimal@@Base+0x34d78>
   3ba74:	sturb	wzr, [x29, #-20]
   3ba78:	ldr	x0, [x21, #40]
   3ba7c:	sub	x3, x29, #0x14
   3ba80:	mov	w2, #0x8                   	// #8
   3ba84:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3ba88:	str	x0, [x21, #40]
   3ba8c:	ldurb	w8, [x29, #-20]
   3ba90:	cbnz	w8, 3b828 <PyInit__decimal@@Base+0x34d74>
   3ba94:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3ba98:	ldr	x8, [x8, #1344]
   3ba9c:	str	x8, [x21, #32]
   3baa0:	b	3b828 <PyInit__decimal@@Base+0x34d74>
   3baa4:	ldrb	w8, [x21]
   3baa8:	tst	w8, #0xe
   3baac:	b.ne	3badc <PyInit__decimal@@Base+0x35028>  // b.any
   3bab0:	ldr	w9, [sp, #12]
   3bab4:	ldr	x11, [sp, #16]
   3bab8:	ldr	x12, [sp]
   3babc:	ldr	x10, [x21, #8]
   3bac0:	and	w9, w9, #0x1
   3bac4:	and	w8, w8, #0xf0
   3bac8:	add	x11, x12, x11
   3bacc:	orr	w8, w8, w9
   3bad0:	sub	x9, x10, x11
   3bad4:	str	x9, [x21, #8]
   3bad8:	strb	w8, [x21]
   3badc:	ldrb	w8, [sp, #1312]
   3bae0:	ldp	x23, x22, [sp, #24]
   3bae4:	adrp	x27, 59000 <PyInit__decimal@@Base+0x5254c>
   3bae8:	cmp	w8, #0x1f
   3baec:	b.ls	3bda8 <PyInit__decimal@@Base+0x352f4>  // b.plast
   3baf0:	tbz	w8, #4, 3bdbc <PyInit__decimal@@Base+0x35308>
   3baf4:	ldrb	w8, [sp, #752]
   3baf8:	cmp	w8, #0x1f
   3bafc:	b.ls	3bdd4 <PyInit__decimal@@Base+0x35320>  // b.plast
   3bb00:	tbnz	w8, #4, 3bb10 <PyInit__decimal@@Base+0x3505c>
   3bb04:	ldr	x8, [x27, #1376]
   3bb08:	add	x0, sp, #0x2f0
   3bb0c:	blr	x8
   3bb10:	add	x1, sp, #0x88
   3bb14:	mov	x0, x21
   3bb18:	mov	x2, x24
   3bb1c:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3bb20:	add	x1, sp, #0x58
   3bb24:	add	x3, sp, #0x88
   3bb28:	mov	x0, x22
   3bb2c:	mov	x2, x21
   3bb30:	mov	x4, x24
   3bb34:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3bb38:	add	x3, sp, #0x88
   3bb3c:	mov	w0, #0x2                   	// #2
   3bb40:	mov	x1, x22
   3bb44:	mov	x2, x22
   3bb48:	mov	x4, x24
   3bb4c:	bl	37f5c <PyInit__decimal@@Base+0x314a8>
   3bb50:	ldr	x8, [sp, #104]
   3bb54:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   3bb58:	ldr	q0, [x9, #2512]
   3bb5c:	add	x1, sp, #0x28
   3bb60:	add	x8, x8, #0x3
   3bb64:	add	x3, sp, #0x88
   3bb68:	mov	x0, x21
   3bb6c:	mov	x2, x22
   3bb70:	mov	x4, x24
   3bb74:	str	x8, [sp, #136]
   3bb78:	stur	q0, [sp, #144]
   3bb7c:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3bb80:	add	x1, sp, #0x58
   3bb84:	add	x3, sp, #0x88
   3bb88:	add	x4, sp, #0x550
   3bb8c:	mov	x0, x21
   3bb90:	mov	x2, x21
   3bb94:	str	wzr, [sp, #1360]
   3bb98:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   3bb9c:	ldr	w9, [sp, #1360]
   3bba0:	ldr	w8, [sp, #164]
   3bba4:	mov	w10, #0x1041                	// #4161
   3bba8:	tst	w9, w10
   3bbac:	orr	w8, w8, w9
   3bbb0:	str	w8, [sp, #164]
   3bbb4:	b.eq	3bc24 <PyInit__decimal@@Base+0x35170>  // b.none
   3bbb8:	ldrb	w8, [x21]
   3bbbc:	tbnz	w8, #5, 3bc04 <PyInit__decimal@@Base+0x35150>
   3bbc0:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3bbc4:	ldr	x9, [x21, #32]
   3bbc8:	ldr	x1, [x10, #1344]
   3bbcc:	cmp	x9, x1
   3bbd0:	b.le	3bc04 <PyInit__decimal@@Base+0x35150>
   3bbd4:	strb	wzr, [sp, #800]
   3bbd8:	ldr	x0, [x21, #40]
   3bbdc:	add	x3, sp, #0x320
   3bbe0:	mov	w2, #0x8                   	// #8
   3bbe4:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3bbe8:	str	x0, [x21, #40]
   3bbec:	ldrb	w8, [sp, #800]
   3bbf0:	cbnz	w8, 3bc00 <PyInit__decimal@@Base+0x3514c>
   3bbf4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3bbf8:	ldr	x8, [x8, #1344]
   3bbfc:	str	x8, [x21, #32]
   3bc00:	ldrb	w8, [x21]
   3bc04:	and	w8, w8, #0xf0
   3bc08:	orr	w8, w8, #0x4
   3bc0c:	strb	w8, [x21]
   3bc10:	stp	xzr, xzr, [x28]
   3bc14:	str	xzr, [x28, #16]
   3bc18:	ldr	w8, [sp, #164]
   3bc1c:	orr	w8, w8, #0x100
   3bc20:	str	w8, [sp, #164]
   3bc24:	ldrb	w9, [x22]
   3bc28:	tst	w9, #0xe
   3bc2c:	b.ne	3bc3c <PyInit__decimal@@Base+0x35188>  // b.any
   3bc30:	ldrb	w9, [x21]
   3bc34:	tst	w9, #0xe
   3bc38:	b.eq	3bdec <PyInit__decimal@@Base+0x35338>  // b.none
   3bc3c:	ldr	w9, [x23]
   3bc40:	mov	w10, #0x3be                 	// #958
   3bc44:	and	w8, w8, w10
   3bc48:	orr	w8, w9, w8
   3bc4c:	str	w8, [x23]
   3bc50:	cbz	x22, 3bc90 <PyInit__decimal@@Base+0x351dc>
   3bc54:	cmp	x22, x20
   3bc58:	b.eq	3bc90 <PyInit__decimal@@Base+0x351dc>  // b.none
   3bc5c:	ldrb	w8, [x22]
   3bc60:	cmp	w8, #0x1f
   3bc64:	b.hi	3bc7c <PyInit__decimal@@Base+0x351c8>  // b.pmore
   3bc68:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3bc6c:	ldr	x8, [x8, #1376]
   3bc70:	ldr	x0, [x22, #40]
   3bc74:	blr	x8
   3bc78:	ldrb	w8, [x22]
   3bc7c:	tbnz	w8, #4, 3bc90 <PyInit__decimal@@Base+0x351dc>
   3bc80:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3bc84:	ldr	x8, [x8, #1376]
   3bc88:	mov	x0, x22
   3bc8c:	blr	x8
   3bc90:	cbz	x21, 3bcd0 <PyInit__decimal@@Base+0x3521c>
   3bc94:	cmp	x21, x19
   3bc98:	b.eq	3bcd0 <PyInit__decimal@@Base+0x3521c>  // b.none
   3bc9c:	ldrb	w8, [x21]
   3bca0:	cmp	w8, #0x1f
   3bca4:	b.hi	3bcbc <PyInit__decimal@@Base+0x35208>  // b.pmore
   3bca8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3bcac:	ldr	x8, [x8, #1376]
   3bcb0:	ldr	x0, [x21, #40]
   3bcb4:	blr	x8
   3bcb8:	ldrb	w8, [x21]
   3bcbc:	tbnz	w8, #4, 3bcd0 <PyInit__decimal@@Base+0x3521c>
   3bcc0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3bcc4:	ldr	x8, [x8, #1376]
   3bcc8:	mov	x0, x21
   3bccc:	blr	x8
   3bcd0:	ldrb	w8, [x20]
   3bcd4:	tbnz	w8, #5, 3bd18 <PyInit__decimal@@Base+0x35264>
   3bcd8:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3bcdc:	ldr	x9, [x20, #32]
   3bce0:	ldr	x1, [x21, #1344]
   3bce4:	cmp	x9, x1
   3bce8:	b.le	3bd18 <PyInit__decimal@@Base+0x35264>
   3bcec:	strb	wzr, [sp, #1360]
   3bcf0:	ldr	x0, [x20, #40]
   3bcf4:	add	x3, sp, #0x550
   3bcf8:	mov	w2, #0x8                   	// #8
   3bcfc:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3bd00:	str	x0, [x20, #40]
   3bd04:	ldrb	w8, [sp, #1360]
   3bd08:	cbnz	w8, 3bd14 <PyInit__decimal@@Base+0x35260>
   3bd0c:	ldr	x8, [x21, #1344]
   3bd10:	str	x8, [x20, #32]
   3bd14:	ldrb	w8, [x20]
   3bd18:	and	w8, w8, #0xf0
   3bd1c:	orr	w8, w8, #0x4
   3bd20:	stp	xzr, xzr, [x20, #16]
   3bd24:	strb	w8, [x20]
   3bd28:	str	xzr, [x20, #8]
   3bd2c:	ldrb	w8, [x19]
   3bd30:	tbnz	w8, #5, 3bd74 <PyInit__decimal@@Base+0x352c0>
   3bd34:	adrp	x20, 59000 <PyInit__decimal@@Base+0x5254c>
   3bd38:	ldr	x9, [x19, #32]
   3bd3c:	ldr	x1, [x20, #1344]
   3bd40:	cmp	x9, x1
   3bd44:	b.le	3bd74 <PyInit__decimal@@Base+0x352c0>
   3bd48:	strb	wzr, [sp, #1360]
   3bd4c:	ldr	x0, [x19, #40]
   3bd50:	add	x3, sp, #0x550
   3bd54:	mov	w2, #0x8                   	// #8
   3bd58:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3bd5c:	str	x0, [x19, #40]
   3bd60:	ldrb	w8, [sp, #1360]
   3bd64:	cbnz	w8, 3bd70 <PyInit__decimal@@Base+0x352bc>
   3bd68:	ldr	x8, [x20, #1344]
   3bd6c:	str	x8, [x19, #32]
   3bd70:	ldrb	w8, [x19]
   3bd74:	and	w8, w8, #0xf0
   3bd78:	orr	w8, w8, #0x4
   3bd7c:	stp	xzr, xzr, [x19, #16]
   3bd80:	strb	w8, [x19]
   3bd84:	str	xzr, [x19, #8]
   3bd88:	add	sp, sp, #0x800
   3bd8c:	ldp	x20, x19, [sp, #80]
   3bd90:	ldp	x22, x21, [sp, #64]
   3bd94:	ldp	x24, x23, [sp, #48]
   3bd98:	ldp	x26, x25, [sp, #32]
   3bd9c:	ldp	x28, x27, [sp, #16]
   3bda0:	ldp	x29, x30, [sp], #96
   3bda4:	ret
   3bda8:	ldr	x8, [x27, #1376]
   3bdac:	ldr	x0, [sp, #1352]
   3bdb0:	blr	x8
   3bdb4:	ldrb	w8, [sp, #1312]
   3bdb8:	tbnz	w8, #4, 3baf4 <PyInit__decimal@@Base+0x35040>
   3bdbc:	ldr	x8, [x27, #1376]
   3bdc0:	add	x0, sp, #0x520
   3bdc4:	blr	x8
   3bdc8:	ldrb	w8, [sp, #752]
   3bdcc:	cmp	w8, #0x1f
   3bdd0:	b.hi	3bb00 <PyInit__decimal@@Base+0x3504c>  // b.pmore
   3bdd4:	ldr	x8, [x27, #1376]
   3bdd8:	ldr	x0, [sp, #792]
   3bddc:	blr	x8
   3bde0:	ldrb	w8, [sp, #752]
   3bde4:	tbz	w8, #4, 3bb04 <PyInit__decimal@@Base+0x35050>
   3bde8:	b	3bb10 <PyInit__decimal@@Base+0x3505c>
   3bdec:	add	x25, x22, #0x8
   3bdf0:	mov	w24, #0x4                   	// #4
   3bdf4:	mov	w26, #0x1041                	// #4161
   3bdf8:	subs	w24, w24, #0x1
   3bdfc:	b.eq	3c04c <PyInit__decimal@@Base+0x35598>  // b.none
   3be00:	adrp	x0, 56000 <PyInit__decimal@@Base+0x4f54c>
   3be04:	add	x0, x0, #0xcb8
   3be08:	mov	x1, x21
   3be0c:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   3be10:	cmp	w0, #0x1
   3be14:	b.ne	3bed8 <PyInit__decimal@@Base+0x35424>  // b.any
   3be18:	add	x2, sp, #0x28
   3be1c:	add	x3, sp, #0x88
   3be20:	add	x4, sp, #0x550
   3be24:	mov	x0, x21
   3be28:	mov	x1, x21
   3be2c:	str	wzr, [sp, #1360]
   3be30:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   3be34:	ldr	w8, [sp, #1360]
   3be38:	ldr	w9, [sp, #164]
   3be3c:	tst	w8, w26
   3be40:	orr	w9, w9, w8
   3be44:	str	w9, [sp, #164]
   3be48:	b.eq	3beb8 <PyInit__decimal@@Base+0x35404>  // b.none
   3be4c:	ldrb	w8, [x21]
   3be50:	tbnz	w8, #5, 3be98 <PyInit__decimal@@Base+0x353e4>
   3be54:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3be58:	ldr	x9, [x21, #32]
   3be5c:	ldr	x1, [x10, #1344]
   3be60:	cmp	x9, x1
   3be64:	b.le	3be98 <PyInit__decimal@@Base+0x353e4>
   3be68:	strb	wzr, [sp, #800]
   3be6c:	ldr	x0, [x21, #40]
   3be70:	add	x3, sp, #0x320
   3be74:	mov	w2, #0x8                   	// #8
   3be78:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3be7c:	str	x0, [x21, #40]
   3be80:	ldrb	w8, [sp, #800]
   3be84:	cbnz	w8, 3be94 <PyInit__decimal@@Base+0x353e0>
   3be88:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3be8c:	ldr	x8, [x8, #1344]
   3be90:	str	x8, [x21, #32]
   3be94:	ldrb	w8, [x21]
   3be98:	and	w8, w8, #0xf0
   3be9c:	orr	w8, w8, #0x4
   3bea0:	strb	w8, [x21]
   3bea4:	stp	xzr, xzr, [x28]
   3bea8:	str	xzr, [x28, #16]
   3beac:	ldr	w8, [sp, #164]
   3beb0:	orr	w8, w8, #0x100
   3beb4:	str	w8, [sp, #164]
   3beb8:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
   3bebc:	str	wzr, [sp, #1360]
   3bec0:	add	x3, sp, #0x88
   3bec4:	add	x4, sp, #0x550
   3bec8:	mov	x0, x22
   3becc:	mov	x1, x22
   3bed0:	add	x2, x2, #0xce8
   3bed4:	b	3bfa8 <PyInit__decimal@@Base+0x354f4>
   3bed8:	add	x1, sp, #0x28
   3bedc:	mov	x0, x21
   3bee0:	bl	25600 <PyInit__decimal@@Base+0x1eb4c>
   3bee4:	cmn	w0, #0x1
   3bee8:	b.eq	3c0b4 <PyInit__decimal@@Base+0x35600>  // b.none
   3beec:	add	x2, sp, #0x28
   3bef0:	add	x3, sp, #0x88
   3bef4:	add	x4, sp, #0x550
   3bef8:	mov	x0, x21
   3befc:	mov	x1, x21
   3bf00:	str	wzr, [sp, #1360]
   3bf04:	bl	2a9d0 <PyInit__decimal@@Base+0x23f1c>
   3bf08:	ldr	w8, [sp, #1360]
   3bf0c:	ldr	w9, [sp, #164]
   3bf10:	tst	w8, w26
   3bf14:	orr	w9, w9, w8
   3bf18:	str	w9, [sp, #164]
   3bf1c:	b.eq	3bf8c <PyInit__decimal@@Base+0x354d8>  // b.none
   3bf20:	ldrb	w8, [x21]
   3bf24:	tbnz	w8, #5, 3bf6c <PyInit__decimal@@Base+0x354b8>
   3bf28:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3bf2c:	ldr	x9, [x21, #32]
   3bf30:	ldr	x1, [x10, #1344]
   3bf34:	cmp	x9, x1
   3bf38:	b.le	3bf6c <PyInit__decimal@@Base+0x354b8>
   3bf3c:	strb	wzr, [sp, #800]
   3bf40:	ldr	x0, [x21, #40]
   3bf44:	add	x3, sp, #0x320
   3bf48:	mov	w2, #0x8                   	// #8
   3bf4c:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3bf50:	str	x0, [x21, #40]
   3bf54:	ldrb	w8, [sp, #800]
   3bf58:	cbnz	w8, 3bf68 <PyInit__decimal@@Base+0x354b4>
   3bf5c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3bf60:	ldr	x8, [x8, #1344]
   3bf64:	str	x8, [x21, #32]
   3bf68:	ldrb	w8, [x21]
   3bf6c:	and	w8, w8, #0xf0
   3bf70:	orr	w8, w8, #0x4
   3bf74:	strb	w8, [x21]
   3bf78:	stp	xzr, xzr, [x28]
   3bf7c:	str	xzr, [x28, #16]
   3bf80:	ldr	w8, [sp, #164]
   3bf84:	orr	w8, w8, #0x100
   3bf88:	str	w8, [sp, #164]
   3bf8c:	adrp	x2, 56000 <PyInit__decimal@@Base+0x4f54c>
   3bf90:	add	x3, sp, #0x88
   3bf94:	add	x4, sp, #0x550
   3bf98:	mov	x0, x22
   3bf9c:	mov	x1, x22
   3bfa0:	add	x2, x2, #0xc88
   3bfa4:	str	wzr, [sp, #1360]
   3bfa8:	bl	2a244 <PyInit__decimal@@Base+0x23790>
   3bfac:	ldr	w9, [sp, #1360]
   3bfb0:	ldr	w8, [sp, #164]
   3bfb4:	tst	w9, w26
   3bfb8:	orr	w8, w8, w9
   3bfbc:	str	w8, [sp, #164]
   3bfc0:	b.eq	3c030 <PyInit__decimal@@Base+0x3557c>  // b.none
   3bfc4:	ldrb	w8, [x22]
   3bfc8:	tbnz	w8, #5, 3c010 <PyInit__decimal@@Base+0x3555c>
   3bfcc:	adrp	x10, 59000 <PyInit__decimal@@Base+0x5254c>
   3bfd0:	ldr	x9, [x22, #32]
   3bfd4:	ldr	x1, [x10, #1344]
   3bfd8:	cmp	x9, x1
   3bfdc:	b.le	3c010 <PyInit__decimal@@Base+0x3555c>
   3bfe0:	strb	wzr, [sp, #800]
   3bfe4:	ldr	x0, [x22, #40]
   3bfe8:	add	x3, sp, #0x320
   3bfec:	mov	w2, #0x8                   	// #8
   3bff0:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3bff4:	str	x0, [x22, #40]
   3bff8:	ldrb	w8, [sp, #800]
   3bffc:	cbnz	w8, 3c00c <PyInit__decimal@@Base+0x35558>
   3c000:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3c004:	ldr	x8, [x8, #1344]
   3c008:	str	x8, [x22, #32]
   3c00c:	ldrb	w8, [x22]
   3c010:	and	w8, w8, #0xf0
   3c014:	orr	w8, w8, #0x4
   3c018:	strb	w8, [x22]
   3c01c:	stp	xzr, xzr, [x25]
   3c020:	str	xzr, [x25, #16]
   3c024:	ldr	w8, [sp, #164]
   3c028:	orr	w8, w8, #0x100
   3c02c:	str	w8, [sp, #164]
   3c030:	ldrb	w9, [x22]
   3c034:	tst	w9, #0xe
   3c038:	b.ne	3bc3c <PyInit__decimal@@Base+0x35188>  // b.any
   3c03c:	ldrb	w9, [x21]
   3c040:	tst	w9, #0xe
   3c044:	b.eq	3bdf8 <PyInit__decimal@@Base+0x35344>  // b.none
   3c048:	b	3bc3c <PyInit__decimal@@Base+0x35188>
   3c04c:	adrp	x22, 56000 <PyInit__decimal@@Base+0x4f54c>
   3c050:	ldr	x22, [x22, #3904]
   3c054:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   3c058:	adrp	x2, 45000 <PyInit__decimal@@Base+0x3e54c>
   3c05c:	add	x1, x1, #0xe28
   3c060:	ldr	x0, [x22]
   3c064:	add	x2, x2, #0xa54
   3c068:	mov	w3, #0x1d0c                	// #7436
   3c06c:	bl	69b0 <fprintf@plt>
   3c070:	ldr	x3, [x22]
   3c074:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   3c078:	add	x0, x0, #0xa90
   3c07c:	mov	w1, #0x3c                  	// #60
   3c080:	mov	w2, #0x1                   	// #1
   3c084:	bl	6870 <fwrite@plt>
   3c088:	ldr	x1, [x22]
   3c08c:	ldr	x22, [sp, #32]
   3c090:	mov	w0, #0xa                   	// #10
   3c094:	bl	64f0 <fputc@plt>
   3c098:	ldr	w8, [x23]
   3c09c:	orr	w8, w8, #0x100
   3c0a0:	b	3bc4c <PyInit__decimal@@Base+0x35198>
   3c0a4:	mov	w9, #0xe                   	// #14
   3c0a8:	b	3b768 <PyInit__decimal@@Base+0x34cb4>
   3c0ac:	mov	w9, #0x9                   	// #9
   3c0b0:	b	3b768 <PyInit__decimal@@Base+0x34cb4>
   3c0b4:	cmp	x22, x20
   3c0b8:	b.eq	3c16c <PyInit__decimal@@Base+0x356b8>  // b.none
   3c0bc:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   3c0c0:	ldr	x8, [x22, #24]
   3c0c4:	ldr	x10, [x9, #1344]
   3c0c8:	ldr	x9, [x20, #32]
   3c0cc:	cmp	x10, x8
   3c0d0:	csel	x1, x8, x10, lt  // lt = tstop
   3c0d4:	cmp	x1, x9
   3c0d8:	b.eq	3c110 <PyInit__decimal@@Base+0x3565c>  // b.none
   3c0dc:	ldrb	w10, [x20]
   3c0e0:	tbnz	w10, #5, 3c0f4 <PyInit__decimal@@Base+0x35640>
   3c0e4:	mov	x0, x20
   3c0e8:	mov	x2, x23
   3c0ec:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3c0f0:	b	3c108 <PyInit__decimal@@Base+0x35654>
   3c0f4:	cmp	x1, x9
   3c0f8:	b.le	3c110 <PyInit__decimal@@Base+0x3565c>
   3c0fc:	mov	x0, x20
   3c100:	mov	x2, x23
   3c104:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3c108:	cbz	w0, 3bc50 <PyInit__decimal@@Base+0x3519c>
   3c10c:	ldr	x8, [x22, #24]
   3c110:	ldrb	w9, [x22]
   3c114:	ldrb	w10, [x20]
   3c118:	ldr	x0, [x20, #40]
   3c11c:	bfxil	w10, w9, #0, #4
   3c120:	strb	w10, [x20]
   3c124:	ldur	q0, [x22, #8]
   3c128:	str	x8, [x20, #24]
   3c12c:	stur	q0, [x20, #8]
   3c130:	ldr	x8, [x22, #24]
   3c134:	ldr	x1, [x22, #40]
   3c138:	lsl	x2, x8, #3
   3c13c:	bl	63c0 <memcpy@plt>
   3c140:	ldrb	w8, [x22]
   3c144:	cmp	w8, #0x1f
   3c148:	b.hi	3c15c <PyInit__decimal@@Base+0x356a8>  // b.pmore
   3c14c:	ldr	x8, [x27, #1376]
   3c150:	ldr	x0, [x22, #40]
   3c154:	blr	x8
   3c158:	ldrb	w8, [x22]
   3c15c:	tbnz	w8, #4, 3c16c <PyInit__decimal@@Base+0x356b8>
   3c160:	ldr	x8, [x27, #1376]
   3c164:	mov	x0, x22
   3c168:	blr	x8
   3c16c:	cmp	x21, x19
   3c170:	b.eq	3c224 <PyInit__decimal@@Base+0x35770>  // b.none
   3c174:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   3c178:	ldr	x8, [x21, #24]
   3c17c:	ldr	x10, [x9, #1344]
   3c180:	ldr	x9, [x19, #32]
   3c184:	cmp	x10, x8
   3c188:	csel	x1, x8, x10, lt  // lt = tstop
   3c18c:	cmp	x1, x9
   3c190:	b.eq	3c1c8 <PyInit__decimal@@Base+0x35714>  // b.none
   3c194:	ldrb	w10, [x19]
   3c198:	tbnz	w10, #5, 3c1ac <PyInit__decimal@@Base+0x356f8>
   3c19c:	mov	x0, x19
   3c1a0:	mov	x2, x23
   3c1a4:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3c1a8:	b	3c1c0 <PyInit__decimal@@Base+0x3570c>
   3c1ac:	cmp	x1, x9
   3c1b0:	b.le	3c1c8 <PyInit__decimal@@Base+0x35714>
   3c1b4:	mov	x0, x19
   3c1b8:	mov	x2, x23
   3c1bc:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3c1c0:	cbz	w0, 3bc50 <PyInit__decimal@@Base+0x3519c>
   3c1c4:	ldr	x8, [x21, #24]
   3c1c8:	ldrb	w9, [x21]
   3c1cc:	ldrb	w10, [x19]
   3c1d0:	ldr	x0, [x19, #40]
   3c1d4:	bfxil	w10, w9, #0, #4
   3c1d8:	strb	w10, [x19]
   3c1dc:	ldur	q0, [x21, #8]
   3c1e0:	str	x8, [x19, #24]
   3c1e4:	stur	q0, [x19, #8]
   3c1e8:	ldr	x8, [x21, #24]
   3c1ec:	ldr	x1, [x21, #40]
   3c1f0:	lsl	x2, x8, #3
   3c1f4:	bl	63c0 <memcpy@plt>
   3c1f8:	ldrb	w8, [x21]
   3c1fc:	cmp	w8, #0x1f
   3c200:	b.hi	3c214 <PyInit__decimal@@Base+0x35760>  // b.pmore
   3c204:	ldr	x8, [x27, #1376]
   3c208:	ldr	x0, [x21, #40]
   3c20c:	blr	x8
   3c210:	ldrb	w8, [x21]
   3c214:	tbnz	w8, #4, 3c224 <PyInit__decimal@@Base+0x35770>
   3c218:	ldr	x8, [x27, #1376]
   3c21c:	mov	x0, x21
   3c220:	blr	x8
   3c224:	ldr	w8, [sp, #164]
   3c228:	ldr	w9, [x23]
   3c22c:	mov	w10, #0x3be                 	// #958
   3c230:	and	w8, w8, w10
   3c234:	orr	w8, w9, w8
   3c238:	str	w8, [x23]
   3c23c:	b	3bd88 <PyInit__decimal@@Base+0x352d4>
   3c240:	stp	x29, x30, [sp, #-80]!
   3c244:	str	x25, [sp, #16]
   3c248:	stp	x24, x23, [sp, #32]
   3c24c:	stp	x22, x21, [sp, #48]
   3c250:	stp	x20, x19, [sp, #64]
   3c254:	mov	x29, sp
   3c258:	mov	w20, w3
   3c25c:	mov	x19, x0
   3c260:	str	wzr, [x29, #24]
   3c264:	cbz	x2, 3c2bc <PyInit__decimal@@Base+0x35808>
   3c268:	mov	x21, x5
   3c26c:	mov	x22, x4
   3c270:	mov	x23, x2
   3c274:	mov	x24, x1
   3c278:	cmp	x19, x1
   3c27c:	b.eq	3c3e0 <PyInit__decimal@@Base+0x3592c>  // b.none
   3c280:	adrp	x9, 59000 <PyInit__decimal@@Base+0x5254c>
   3c284:	ldr	x8, [x24, #24]
   3c288:	ldr	x10, [x9, #1344]
   3c28c:	ldr	x9, [x19, #32]
   3c290:	cmp	x10, x8
   3c294:	csel	x1, x8, x10, lt  // lt = tstop
   3c298:	cmp	x1, x9
   3c29c:	b.eq	3c3b0 <PyInit__decimal@@Base+0x358fc>  // b.none
   3c2a0:	ldrb	w10, [x19]
   3c2a4:	tbnz	w10, #5, 3c394 <PyInit__decimal@@Base+0x358e0>
   3c2a8:	mov	x0, x19
   3c2ac:	mov	x2, x21
   3c2b0:	bl	22284 <PyInit__decimal@@Base+0x1b7d0>
   3c2b4:	cbnz	w0, 3c3ac <PyInit__decimal@@Base+0x358f8>
   3c2b8:	b	3c5d8 <PyInit__decimal@@Base+0x35b24>
   3c2bc:	ldrb	w8, [x19]
   3c2c0:	tbnz	w8, #5, 3c304 <PyInit__decimal@@Base+0x35850>
   3c2c4:	adrp	x21, 59000 <PyInit__decimal@@Base+0x5254c>
   3c2c8:	ldr	x9, [x19, #32]
   3c2cc:	ldr	x1, [x21, #1344]
   3c2d0:	cmp	x9, x1
   3c2d4:	b.le	3c304 <PyInit__decimal@@Base+0x35850>
   3c2d8:	strb	wzr, [x29, #28]
   3c2dc:	ldr	x0, [x19, #40]
   3c2e0:	add	x3, x29, #0x1c
   3c2e4:	mov	w2, #0x8                   	// #8
   3c2e8:	bl	21ee4 <PyInit__decimal@@Base+0x1b430>
   3c2ec:	str	x0, [x19, #40]
   3c2f0:	ldrb	w8, [x29, #28]
   3c2f4:	cbnz	w8, 3c300 <PyInit__decimal@@Base+0x3584c>
   3c2f8:	ldr	x8, [x21, #1344]
   3c2fc:	str	x8, [x19, #32]
   3c300:	ldrb	w8, [x19]
   3c304:	adrp	x9, 45000 <PyInit__decimal@@Base+0x3e54c>
   3c308:	ldr	x10, [x19, #40]
   3c30c:	ldr	q0, [x9, #2464]
   3c310:	and	w8, w8, #0xf0
   3c314:	mov	w11, #0x1                   	// #1
   3c318:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   3c31c:	orr	w8, w8, w20
   3c320:	str	xzr, [x19, #8]
   3c324:	add	x9, x9, #0xca0
   3c328:	strb	w8, [x19]
   3c32c:	str	q0, [x10]
   3c330:	str	x11, [x19, #24]
   3c334:	ldr	x8, [x10]
   3c338:	ldr	x10, [x9, #72]
   3c33c:	cmp	x10, x8
   3c340:	b.ls	3c36c <PyInit__decimal@@Base+0x358b8>  // b.plast
   3c344:	ldr	x10, [x9, #32]
   3c348:	cmp	x10, x8
   3c34c:	b.ls	3c528 <PyInit__decimal@@Base+0x35a74>  // b.plast
   3c350:	ldr	x10, [x9, #16]
   3c354:	cmp	x10, x8
   3c358:	b.ls	3c56c <PyInit__decimal@@Base+0x35ab8>  // b.plast
   3c35c:	ldr	x9, [x9, #8]
   3c360:	cmp	x9, x8
   3c364:	mov	w8, #0x1                   	// #1
   3c368:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c36c:	ldr	x10, [x9, #112]
   3c370:	cmp	x10, x8
   3c374:	b.ls	3c544 <PyInit__decimal@@Base+0x35a90>  // b.plast
   3c378:	ldr	x10, [x9, #88]
   3c37c:	cmp	x10, x8
   3c380:	b.ls	3c57c <PyInit__decimal@@Base+0x35ac8>  // b.plast
   3c384:	ldr	x9, [x9, #80]
   3c388:	cmp	x9, x8
   3c38c:	mov	w8, #0xa                   	// #10
   3c390:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c394:	cmp	x1, x9
   3c398:	b.le	3c3b0 <PyInit__decimal@@Base+0x358fc>
   3c39c:	mov	x0, x19
   3c3a0:	mov	x2, x21
   3c3a4:	bl	22128 <PyInit__decimal@@Base+0x1b674>
   3c3a8:	cbz	w0, 3c5d8 <PyInit__decimal@@Base+0x35b24>
   3c3ac:	ldr	x8, [x24, #24]
   3c3b0:	ldrb	w9, [x24]
   3c3b4:	ldrb	w10, [x19]
   3c3b8:	ldr	x0, [x19, #40]
   3c3bc:	bfxil	w10, w9, #0, #4
   3c3c0:	strb	w10, [x19]
   3c3c4:	ldur	q0, [x24, #8]
   3c3c8:	str	x8, [x19, #24]
   3c3cc:	stur	q0, [x19, #8]
   3c3d0:	ldr	x8, [x24, #24]
   3c3d4:	ldr	x1, [x24, #40]
   3c3d8:	lsl	x2, x8, #3
   3c3dc:	bl	63c0 <memcpy@plt>
   3c3e0:	lsr	x8, x23, #32
   3c3e4:	cmp	x8, #0x0
   3c3e8:	csel	x8, x23, x8, eq  // eq = none
   3c3ec:	lsr	x12, x8, #16
   3c3f0:	cset	w10, ne  // ne = any
   3c3f4:	cmp	x12, #0x0
   3c3f8:	mov	w9, #0x10                  	// #16
   3c3fc:	csel	x8, x8, x12, eq  // eq = none
   3c400:	lsl	w11, w10, #5
   3c404:	bfi	w9, w10, #5, #1
   3c408:	lsr	x10, x8, #8
   3c40c:	csel	w9, w11, w9, eq  // eq = none
   3c410:	cmp	x10, #0x0
   3c414:	csel	x8, x8, x10, eq  // eq = none
   3c418:	orr	w11, w9, #0x8
   3c41c:	lsr	x10, x8, #4
   3c420:	csel	w9, w9, w11, eq  // eq = none
   3c424:	cmp	x10, #0x0
   3c428:	csel	x8, x8, x10, eq  // eq = none
   3c42c:	orr	w11, w9, #0x4
   3c430:	lsr	x10, x8, #2
   3c434:	csel	w9, w9, w11, eq  // eq = none
   3c438:	cmp	x10, #0x0
   3c43c:	csel	x8, x8, x10, eq  // eq = none
   3c440:	add	w11, w9, #0x2
   3c444:	lsr	x10, x8, #1
   3c448:	csel	w9, w9, w11, eq  // eq = none
   3c44c:	cmp	x10, #0x0
   3c450:	csel	w8, w8, w10, eq  // eq = none
   3c454:	cinc	w9, w9, ne  // ne = any
   3c458:	add	w8, w9, w8
   3c45c:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   3c460:	sub	w8, w8, #0x1
   3c464:	add	x9, x9, #0xaa0
   3c468:	ldr	x8, [x9, w8, sxtw #3]
   3c46c:	lsr	x25, x8, #1
   3c470:	cbnz	x25, 3c488 <PyInit__decimal@@Base+0x359d4>
   3c474:	ldrb	w8, [x19]
   3c478:	mov	w9, wzr
   3c47c:	b	3c50c <PyInit__decimal@@Base+0x35a58>
   3c480:	lsr	x25, x25, #1
   3c484:	cbz	x25, 3c508 <PyInit__decimal@@Base+0x35a54>
   3c488:	add	x4, x29, #0x18
   3c48c:	mov	x0, x19
   3c490:	mov	x1, x19
   3c494:	mov	x2, x19
   3c498:	mov	x3, x22
   3c49c:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3c4a0:	add	x2, x29, #0x18
   3c4a4:	mov	x0, x19
   3c4a8:	mov	x1, x22
   3c4ac:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3c4b0:	tst	x25, x23
   3c4b4:	b.eq	3c4e0 <PyInit__decimal@@Base+0x35a2c>  // b.none
   3c4b8:	add	x4, x29, #0x18
   3c4bc:	mov	x0, x19
   3c4c0:	mov	x1, x19
   3c4c4:	mov	x2, x24
   3c4c8:	mov	x3, x22
   3c4cc:	bl	2efdc <PyInit__decimal@@Base+0x28528>
   3c4d0:	add	x2, x29, #0x18
   3c4d4:	mov	x0, x19
   3c4d8:	mov	x1, x22
   3c4dc:	bl	235d0 <PyInit__decimal@@Base+0x1cb1c>
   3c4e0:	ldrb	w8, [x19]
   3c4e4:	tst	w8, #0xe
   3c4e8:	b.ne	3c508 <PyInit__decimal@@Base+0x35a54>  // b.any
   3c4ec:	ldr	x9, [x19, #40]
   3c4f0:	ldr	x10, [x19, #24]
   3c4f4:	add	x9, x9, x10, lsl #3
   3c4f8:	ldur	x9, [x9, #-8]
   3c4fc:	cbnz	x9, 3c480 <PyInit__decimal@@Base+0x359cc>
   3c500:	ldrb	w9, [x29, #24]
   3c504:	tbz	w9, #0, 3c480 <PyInit__decimal@@Base+0x359cc>
   3c508:	ldr	w9, [x29, #24]
   3c50c:	ldr	w10, [x21]
   3c510:	and	w8, w8, #0xfe
   3c514:	orr	w8, w8, w20
   3c518:	orr	w9, w10, w9
   3c51c:	str	w9, [x21]
   3c520:	strb	w8, [x19]
   3c524:	b	3c5d8 <PyInit__decimal@@Base+0x35b24>
   3c528:	ldr	x10, [x9, #48]
   3c52c:	cmp	x10, x8
   3c530:	b.ls	3c598 <PyInit__decimal@@Base+0x35ae4>  // b.plast
   3c534:	ldr	x9, [x9, #40]
   3c538:	cmp	x9, x8
   3c53c:	mov	w8, #0x5                   	// #5
   3c540:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c544:	ldr	x10, [x9, #144]
   3c548:	cmp	x10, x8
   3c54c:	b.ls	3c5b4 <PyInit__decimal@@Base+0x35b00>  // b.plast
   3c550:	ldr	x10, [x9, #128]
   3c554:	cmp	x10, x8
   3c558:	b.ls	3c5c4 <PyInit__decimal@@Base+0x35b10>  // b.plast
   3c55c:	ldr	x9, [x9, #120]
   3c560:	cmp	x9, x8
   3c564:	mov	w8, #0xf                   	// #15
   3c568:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c56c:	ldr	x9, [x9, #24]
   3c570:	cmp	x9, x8
   3c574:	mov	w8, #0x3                   	// #3
   3c578:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c57c:	ldr	x10, [x9, #104]
   3c580:	cmp	x10, x8
   3c584:	b.ls	3c5f0 <PyInit__decimal@@Base+0x35b3c>  // b.plast
   3c588:	ldr	x9, [x9, #96]
   3c58c:	cmp	x9, x8
   3c590:	mov	w8, #0xc                   	// #12
   3c594:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c598:	ldr	x10, [x9, #64]
   3c59c:	cmp	x10, x8
   3c5a0:	b.ls	3c5f8 <PyInit__decimal@@Base+0x35b44>  // b.plast
   3c5a4:	ldr	x9, [x9, #56]
   3c5a8:	cmp	x9, x8
   3c5ac:	mov	w8, #0x7                   	// #7
   3c5b0:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c5b4:	ldr	x9, [x9, #152]
   3c5b8:	cmp	x9, x8
   3c5bc:	mov	w8, #0x13                  	// #19
   3c5c0:	b	3c5d0 <PyInit__decimal@@Base+0x35b1c>
   3c5c4:	ldr	x9, [x9, #136]
   3c5c8:	cmp	x9, x8
   3c5cc:	mov	w8, #0x11                  	// #17
   3c5d0:	cinc	x8, x8, ls  // ls = plast
   3c5d4:	str	x8, [x19, #16]
   3c5d8:	ldp	x20, x19, [sp, #64]
   3c5dc:	ldp	x22, x21, [sp, #48]
   3c5e0:	ldp	x24, x23, [sp, #32]
   3c5e4:	ldr	x25, [sp, #16]
   3c5e8:	ldp	x29, x30, [sp], #80
   3c5ec:	ret
   3c5f0:	mov	w8, #0xe                   	// #14
   3c5f4:	b	3c5d4 <PyInit__decimal@@Base+0x35b20>
   3c5f8:	mov	w8, #0x9                   	// #9
   3c5fc:	b	3c5d4 <PyInit__decimal@@Base+0x35b20>
   3c600:	sub	sp, sp, #0x80
   3c604:	stp	x29, x30, [sp, #32]
   3c608:	stp	x28, x27, [sp, #48]
   3c60c:	stp	x26, x25, [sp, #64]
   3c610:	stp	x24, x23, [sp, #80]
   3c614:	stp	x22, x21, [sp, #96]
   3c618:	stp	x20, x19, [sp, #112]
   3c61c:	add	x29, sp, #0x20
   3c620:	mvn	x8, x3
   3c624:	cmp	x8, x2
   3c628:	b.cc	3c988 <PyInit__decimal@@Base+0x35ed4>  // b.lo, b.ul, b.last
   3c62c:	add	x23, x3, x2
   3c630:	lsr	x9, x23, #32
   3c634:	cmp	x9, #0x0
   3c638:	csel	x9, x23, x9, eq  // eq = none
   3c63c:	lsr	x12, x9, #16
   3c640:	cset	w10, ne  // ne = any
   3c644:	cmp	x12, #0x0
   3c648:	mov	w8, #0x10                  	// #16
   3c64c:	csel	x9, x9, x12, eq  // eq = none
   3c650:	lsl	w11, w10, #5
   3c654:	bfi	w8, w10, #5, #1
   3c658:	lsr	x10, x9, #8
   3c65c:	csel	w8, w11, w8, eq  // eq = none
   3c660:	cmp	x10, #0x0
   3c664:	csel	x9, x9, x10, eq  // eq = none
   3c668:	orr	w11, w8, #0x8
   3c66c:	lsr	x10, x9, #4
   3c670:	csel	w8, w8, w11, eq  // eq = none
   3c674:	cmp	x10, #0x0
   3c678:	csel	x9, x9, x10, eq  // eq = none
   3c67c:	orr	w11, w8, #0x4
   3c680:	lsr	x10, x9, #2
   3c684:	csel	w8, w8, w11, eq  // eq = none
   3c688:	cmp	x10, #0x0
   3c68c:	csel	x9, x9, x10, eq  // eq = none
   3c690:	add	w11, w8, #0x2
   3c694:	lsr	x10, x9, #1
   3c698:	csel	w8, w8, w11, eq  // eq = none
   3c69c:	cmp	x10, #0x0
   3c6a0:	csel	w9, w9, w10, eq  // eq = none
   3c6a4:	cinc	w8, w8, ne  // ne = any
   3c6a8:	add	w8, w8, w9
   3c6ac:	sub	w8, w8, #0x1
   3c6b0:	mov	x20, x4
   3c6b4:	mov	x25, x3
   3c6b8:	mov	x27, x2
   3c6bc:	mov	x24, x1
   3c6c0:	mov	x26, x0
   3c6c4:	cmp	x23, #0x400
   3c6c8:	sxtw	x8, w8
   3c6cc:	str	x23, [x4]
   3c6d0:	b.hi	3c6f4 <PyInit__decimal@@Base+0x35c40>  // b.pmore
   3c6d4:	mov	w9, #0x1                   	// #1
   3c6d8:	lsl	x8, x9, x8
   3c6dc:	cmp	x8, x23
   3c6e0:	cset	w9, ne  // ne = any
   3c6e4:	lsl	x23, x8, x9
   3c6e8:	cmn	x23, #0x1
   3c6ec:	b.ne	3c760 <PyInit__decimal@@Base+0x35cac>  // b.any
   3c6f0:	b	3c758 <PyInit__decimal@@Base+0x35ca4>
   3c6f4:	mov	x9, #0x100000000           	// #4294967296
   3c6f8:	cmp	x23, x9
   3c6fc:	b.hi	3c730 <PyInit__decimal@@Base+0x35c7c>  // b.pmore
   3c700:	mov	w9, #0x1                   	// #1
   3c704:	lsl	x8, x9, x8
   3c708:	cmp	x8, x23
   3c70c:	b.eq	3c760 <PyInit__decimal@@Base+0x35cac>  // b.none
   3c710:	lsr	x9, x8, #1
   3c714:	add	x8, x9, x8
   3c718:	cmp	x8, x23
   3c71c:	csel	x9, x9, xzr, cc  // cc = lo, ul, last
   3c720:	add	x23, x9, x8
   3c724:	cmn	x23, #0x1
   3c728:	b.ne	3c760 <PyInit__decimal@@Base+0x35cac>  // b.any
   3c72c:	b	3c758 <PyInit__decimal@@Base+0x35ca4>
   3c730:	mov	x8, #0x180000000           	// #6442450944
   3c734:	movk	x8, #0x1
   3c738:	cmp	x23, x8
   3c73c:	b.cs	3c748 <PyInit__decimal@@Base+0x35c94>  // b.hs, b.nlast
   3c740:	mov	x23, #0x180000000           	// #6442450944
   3c744:	b	3c760 <PyInit__decimal@@Base+0x35cac>
   3c748:	mov	x8, #0x300000000           	// #12884901888
   3c74c:	cmp	x23, x8
   3c750:	mov	x23, #0x300000000           	// #12884901888
   3c754:	b.ls	3c760 <PyInit__decimal@@Base+0x35cac>  // b.plast
   3c758:	mov	x19, xzr
   3c75c:	b	3c8f8 <PyInit__decimal@@Base+0x35e44>
   3c760:	mov	w1, #0x8                   	// #8
   3c764:	mov	x0, x23
   3c768:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   3c76c:	mov	x19, x0
   3c770:	cbz	x0, 3c8f8 <PyInit__decimal@@Base+0x35e44>
   3c774:	mov	w1, #0x8                   	// #8
   3c778:	mov	x0, x23
   3c77c:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   3c780:	mov	x21, x0
   3c784:	cbz	x0, 3c8b8 <PyInit__decimal@@Base+0x35e04>
   3c788:	mov	w1, #0x8                   	// #8
   3c78c:	mov	x0, x23
   3c790:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   3c794:	mov	x22, x0
   3c798:	cbz	x0, 3c8bc <PyInit__decimal@@Base+0x35e08>
   3c79c:	lsl	x27, x27, #3
   3c7a0:	mov	x0, x19
   3c7a4:	mov	x1, x26
   3c7a8:	mov	x2, x27
   3c7ac:	bl	63c0 <memcpy@plt>
   3c7b0:	mov	x0, x21
   3c7b4:	mov	x1, x26
   3c7b8:	mov	x2, x27
   3c7bc:	bl	63c0 <memcpy@plt>
   3c7c0:	mov	x0, x22
   3c7c4:	mov	x1, x26
   3c7c8:	mov	x2, x27
   3c7cc:	bl	63c0 <memcpy@plt>
   3c7d0:	cmp	x26, x24
   3c7d4:	b.eq	3c91c <PyInit__decimal@@Base+0x35e68>  // b.none
   3c7d8:	mov	w1, #0x8                   	// #8
   3c7dc:	mov	x0, x23
   3c7e0:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   3c7e4:	cbz	x0, 3c8bc <PyInit__decimal@@Base+0x35e08>
   3c7e8:	lsl	x27, x25, #3
   3c7ec:	mov	x1, x24
   3c7f0:	mov	x2, x27
   3c7f4:	mov	x26, x0
   3c7f8:	bl	63c0 <memcpy@plt>
   3c7fc:	mov	x0, x19
   3c800:	mov	x1, x26
   3c804:	mov	x2, x23
   3c808:	mov	w3, wzr
   3c80c:	bl	1dbcc <PyInit__decimal@@Base+0x17118>
   3c810:	cbz	w0, 3c974 <PyInit__decimal@@Base+0x35ec0>
   3c814:	mov	x0, x26
   3c818:	mov	x1, x24
   3c81c:	mov	x2, x27
   3c820:	bl	63c0 <memcpy@plt>
   3c824:	subs	x8, x23, x25
   3c828:	add	x28, x26, x25, lsl #3
   3c82c:	lsl	x25, x8, #3
   3c830:	stur	x8, [x29, #-8]
   3c834:	b.eq	3c848 <PyInit__decimal@@Base+0x35d94>  // b.none
   3c838:	mov	x0, x28
   3c83c:	mov	w1, wzr
   3c840:	mov	x2, x25
   3c844:	bl	65b0 <memset@plt>
   3c848:	mov	w3, #0x1                   	// #1
   3c84c:	mov	x0, x21
   3c850:	mov	x1, x26
   3c854:	mov	x2, x23
   3c858:	stp	x25, x28, [sp, #8]
   3c85c:	bl	1dbcc <PyInit__decimal@@Base+0x17118>
   3c860:	cbz	w0, 3c974 <PyInit__decimal@@Base+0x35ec0>
   3c864:	mov	x0, x26
   3c868:	mov	x1, x24
   3c86c:	mov	x2, x27
   3c870:	bl	63c0 <memcpy@plt>
   3c874:	ldur	x8, [x29, #-8]
   3c878:	cbz	x8, 3c888 <PyInit__decimal@@Base+0x35dd4>
   3c87c:	ldp	x2, x0, [sp, #8]
   3c880:	mov	w1, wzr
   3c884:	bl	65b0 <memset@plt>
   3c888:	mov	w3, #0x2                   	// #2
   3c88c:	mov	x0, x22
   3c890:	mov	x1, x26
   3c894:	mov	x2, x23
   3c898:	bl	1dbcc <PyInit__decimal@@Base+0x17118>
   3c89c:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3c8a0:	ldr	x8, [x8, #1376]
   3c8a4:	mov	w23, w0
   3c8a8:	mov	x0, x26
   3c8ac:	blr	x8
   3c8b0:	cbnz	w23, 3c958 <PyInit__decimal@@Base+0x35ea4>
   3c8b4:	b	3c8bc <PyInit__decimal@@Base+0x35e08>
   3c8b8:	mov	x22, xzr
   3c8bc:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3c8c0:	ldr	x8, [x8, #1376]
   3c8c4:	mov	x0, x19
   3c8c8:	blr	x8
   3c8cc:	mov	x19, xzr
   3c8d0:	cbz	x21, 3c8e4 <PyInit__decimal@@Base+0x35e30>
   3c8d4:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3c8d8:	ldr	x8, [x8, #1376]
   3c8dc:	mov	x0, x21
   3c8e0:	blr	x8
   3c8e4:	cbz	x22, 3c8f8 <PyInit__decimal@@Base+0x35e44>
   3c8e8:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3c8ec:	ldr	x8, [x8, #1376]
   3c8f0:	mov	x0, x22
   3c8f4:	blr	x8
   3c8f8:	mov	x0, x19
   3c8fc:	ldp	x20, x19, [sp, #112]
   3c900:	ldp	x22, x21, [sp, #96]
   3c904:	ldp	x24, x23, [sp, #80]
   3c908:	ldp	x26, x25, [sp, #64]
   3c90c:	ldp	x28, x27, [sp, #48]
   3c910:	ldp	x29, x30, [sp, #32]
   3c914:	add	sp, sp, #0x80
   3c918:	ret
   3c91c:	mov	x0, x19
   3c920:	mov	x1, x23
   3c924:	mov	w2, wzr
   3c928:	bl	1dde0 <PyInit__decimal@@Base+0x1732c>
   3c92c:	cbz	w0, 3c8bc <PyInit__decimal@@Base+0x35e08>
   3c930:	mov	w2, #0x1                   	// #1
   3c934:	mov	x0, x21
   3c938:	mov	x1, x23
   3c93c:	bl	1dde0 <PyInit__decimal@@Base+0x1732c>
   3c940:	cbz	w0, 3c8bc <PyInit__decimal@@Base+0x35e08>
   3c944:	mov	w2, #0x2                   	// #2
   3c948:	mov	x0, x22
   3c94c:	mov	x1, x23
   3c950:	bl	1dde0 <PyInit__decimal@@Base+0x1732c>
   3c954:	cbz	w0, 3c8bc <PyInit__decimal@@Base+0x35e08>
   3c958:	ldr	x3, [x20]
   3c95c:	mov	x0, x19
   3c960:	mov	x1, x21
   3c964:	mov	x2, x22
   3c968:	bl	1e0a8 <PyInit__decimal@@Base+0x175f4>
   3c96c:	cbnz	x21, 3c8d4 <PyInit__decimal@@Base+0x35e20>
   3c970:	b	3c8e4 <PyInit__decimal@@Base+0x35e30>
   3c974:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3c978:	ldr	x8, [x8, #1376]
   3c97c:	mov	x0, x26
   3c980:	blr	x8
   3c984:	b	3c8bc <PyInit__decimal@@Base+0x35e08>
   3c988:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   3c98c:	ldr	x19, [x19, #3904]
   3c990:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   3c994:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   3c998:	add	x1, x1, #0x9da
   3c99c:	ldr	x0, [x19]
   3c9a0:	add	x2, x2, #0x9e9
   3c9a4:	mov	w3, #0x253                 	// #595
   3c9a8:	bl	69b0 <fprintf@plt>
   3c9ac:	ldr	x3, [x19]
   3c9b0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   3c9b4:	add	x0, x0, #0xacd
   3c9b8:	mov	w1, #0x29                  	// #41
   3c9bc:	mov	w2, #0x1                   	// #1
   3c9c0:	bl	6870 <fwrite@plt>
   3c9c4:	ldr	x1, [x19]
   3c9c8:	mov	w0, #0xa                   	// #10
   3c9cc:	bl	64f0 <fputc@plt>
   3c9d0:	bl	6700 <abort@plt>
   3c9d4:	stp	x29, x30, [sp, #-32]!
   3c9d8:	str	x19, [sp, #16]
   3c9dc:	mov	x29, sp
   3c9e0:	cmp	x0, x1
   3c9e4:	b.ls	3ca1c <PyInit__decimal@@Base+0x35f68>  // b.plast
   3c9e8:	add	x8, x0, #0x1
   3c9ec:	lsr	x8, x8, #1
   3c9f0:	add	x0, x8, #0x1
   3c9f4:	adds	x19, x0, x0
   3c9f8:	b.cs	3ca2c <PyInit__decimal@@Base+0x35f78>  // b.hs, b.nlast
   3c9fc:	bl	3c9d4 <PyInit__decimal@@Base+0x35f20>
   3ca00:	mvn	x8, x0
   3ca04:	cmp	x19, x8
   3ca08:	b.hi	3ca60 <PyInit__decimal@@Base+0x35fac>  // b.pmore
   3ca0c:	add	x0, x0, x19
   3ca10:	ldr	x19, [sp, #16]
   3ca14:	ldp	x29, x30, [sp], #32
   3ca18:	ret
   3ca1c:	mov	x0, xzr
   3ca20:	ldr	x19, [sp, #16]
   3ca24:	ldp	x29, x30, [sp], #32
   3ca28:	ret
   3ca2c:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   3ca30:	ldr	x19, [x19, #3904]
   3ca34:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   3ca38:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   3ca3c:	add	x1, x1, #0x9da
   3ca40:	ldr	x0, [x19]
   3ca44:	add	x2, x2, #0x9e9
   3ca48:	mov	w3, #0x26c                 	// #620
   3ca4c:	bl	69b0 <fprintf@plt>
   3ca50:	ldr	x3, [x19]
   3ca54:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   3ca58:	add	x0, x0, #0xaf7
   3ca5c:	b	3ca90 <PyInit__decimal@@Base+0x35fdc>
   3ca60:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   3ca64:	ldr	x19, [x19, #3904]
   3ca68:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   3ca6c:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   3ca70:	add	x1, x1, #0x9da
   3ca74:	ldr	x0, [x19]
   3ca78:	add	x2, x2, #0x9e9
   3ca7c:	mov	w3, #0x253                 	// #595
   3ca80:	bl	69b0 <fprintf@plt>
   3ca84:	ldr	x3, [x19]
   3ca88:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   3ca8c:	add	x0, x0, #0xacd
   3ca90:	mov	w1, #0x29                  	// #41
   3ca94:	mov	w2, #0x1                   	// #1
   3ca98:	bl	6870 <fwrite@plt>
   3ca9c:	ldr	x1, [x19]
   3caa0:	mov	w0, #0xa                   	// #10
   3caa4:	bl	64f0 <fputc@plt>
   3caa8:	bl	6700 <abort@plt>
   3caac:	sub	sp, sp, #0x80
   3cab0:	stp	x29, x30, [sp, #32]
   3cab4:	stp	x28, x27, [sp, #48]
   3cab8:	stp	x26, x25, [sp, #64]
   3cabc:	stp	x24, x23, [sp, #80]
   3cac0:	stp	x22, x21, [sp, #96]
   3cac4:	stp	x20, x19, [sp, #112]
   3cac8:	add	x29, sp, #0x20
   3cacc:	mov	x24, x5
   3cad0:	mov	x25, x4
   3cad4:	mov	x21, x2
   3cad8:	mov	x23, x1
   3cadc:	cmp	x4, #0x10
   3cae0:	mov	x20, x0
   3cae4:	b.hi	3cb1c <PyInit__decimal@@Base+0x36068>  // b.pmore
   3cae8:	mov	x0, x20
   3caec:	mov	x1, x23
   3caf0:	mov	x2, x21
   3caf4:	mov	x3, x25
   3caf8:	mov	x4, x24
   3cafc:	ldp	x20, x19, [sp, #112]
   3cb00:	ldp	x22, x21, [sp, #96]
   3cb04:	ldp	x24, x23, [sp, #80]
   3cb08:	ldp	x26, x25, [sp, #64]
   3cb0c:	ldp	x28, x27, [sp, #48]
   3cb10:	ldp	x29, x30, [sp, #32]
   3cb14:	add	sp, sp, #0x80
   3cb18:	b	1c6e4 <PyInit__decimal@@Base+0x15c30>
   3cb1c:	add	x27, x25, #0x1
   3cb20:	lsr	x22, x27, #1
   3cb24:	mov	x19, x3
   3cb28:	cmp	x22, x24
   3cb2c:	b.cs	3cc90 <PyInit__decimal@@Base+0x361dc>  // b.hs, b.nlast
   3cb30:	lsl	x26, x22, #3
   3cb34:	mov	x0, x19
   3cb38:	mov	x1, x23
   3cb3c:	mov	x2, x26
   3cb40:	bl	63c0 <memcpy@plt>
   3cb44:	sub	x25, x25, x22
   3cb48:	add	x1, x23, x26
   3cb4c:	mov	x0, x19
   3cb50:	mov	x2, x25
   3cb54:	str	xzr, [x19, x26]
   3cb58:	str	x1, [sp, #16]
   3cb5c:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3cb60:	add	x28, x22, #0x1
   3cb64:	stur	x27, [x29, #-8]
   3cb68:	add	x27, x19, x28, lsl #3
   3cb6c:	mov	x0, x27
   3cb70:	mov	x1, x21
   3cb74:	mov	x2, x26
   3cb78:	bl	63c0 <memcpy@plt>
   3cb7c:	sub	x24, x24, x22
   3cb80:	add	x8, x28, x22
   3cb84:	add	x1, x21, x26
   3cb88:	mov	x0, x27
   3cb8c:	mov	x2, x24
   3cb90:	stp	x1, x20, [sp]
   3cb94:	str	xzr, [x19, x8, lsl #3]
   3cb98:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3cb9c:	add	x26, x20, x26
   3cba0:	add	x3, x19, x28, lsl #4
   3cba4:	mov	x0, x26
   3cba8:	mov	x1, x19
   3cbac:	mov	x2, x27
   3cbb0:	mov	x4, x28
   3cbb4:	mov	x5, x28
   3cbb8:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   3cbbc:	mov	w27, #0x8                   	// #8
   3cbc0:	bfi	x27, x25, #4, #60
   3cbc4:	mov	x0, x19
   3cbc8:	mov	w1, wzr
   3cbcc:	mov	x2, x27
   3cbd0:	bl	65b0 <memset@plt>
   3cbd4:	ldr	x1, [sp, #16]
   3cbd8:	ldr	x2, [sp]
   3cbdc:	add	x3, x19, x27
   3cbe0:	mov	x0, x19
   3cbe4:	mov	x4, x25
   3cbe8:	mov	x5, x24
   3cbec:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   3cbf0:	ldur	x28, [x29, #-8]
   3cbf4:	ldr	x27, [sp, #8]
   3cbf8:	add	x24, x25, x24
   3cbfc:	mov	x1, x19
   3cc00:	and	x20, x28, #0xfffffffffffffffe
   3cc04:	add	x0, x27, x20, lsl #3
   3cc08:	mov	x2, x24
   3cc0c:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3cc10:	mov	x0, x26
   3cc14:	mov	x1, x19
   3cc18:	mov	x2, x24
   3cc1c:	bl	1c5d0 <PyInit__decimal@@Base+0x15b1c>
   3cc20:	lsl	x8, x28, #3
   3cc24:	orr	x24, x8, #0x8
   3cc28:	mov	x0, x19
   3cc2c:	mov	w1, wzr
   3cc30:	mov	x2, x24
   3cc34:	bl	65b0 <memset@plt>
   3cc38:	add	x3, x19, x24
   3cc3c:	mov	x0, x19
   3cc40:	mov	x1, x23
   3cc44:	mov	x2, x21
   3cc48:	mov	x4, x22
   3cc4c:	mov	x5, x22
   3cc50:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   3cc54:	mov	x0, x27
   3cc58:	mov	x1, x19
   3cc5c:	mov	x2, x20
   3cc60:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3cc64:	mov	x0, x26
   3cc68:	mov	x1, x19
   3cc6c:	mov	x2, x20
   3cc70:	ldp	x20, x19, [sp, #112]
   3cc74:	ldp	x22, x21, [sp, #96]
   3cc78:	ldp	x24, x23, [sp, #80]
   3cc7c:	ldp	x26, x25, [sp, #64]
   3cc80:	ldp	x28, x27, [sp, #48]
   3cc84:	ldp	x29, x30, [sp, #32]
   3cc88:	add	sp, sp, #0x80
   3cc8c:	b	1c5d0 <PyInit__decimal@@Base+0x15b1c>
   3cc90:	sub	x25, x25, x22
   3cc94:	mov	w26, #0x8                   	// #8
   3cc98:	cmp	x25, x24
   3cc9c:	b.cs	3ccd0 <PyInit__decimal@@Base+0x3621c>  // b.hs, b.nlast
   3cca0:	bfi	x26, x24, #4, #60
   3cca4:	mov	x0, x19
   3cca8:	mov	w1, wzr
   3ccac:	mov	x2, x26
   3ccb0:	bl	65b0 <memset@plt>
   3ccb4:	add	x2, x23, x22, lsl #3
   3ccb8:	add	x3, x19, x26
   3ccbc:	mov	x0, x19
   3ccc0:	mov	x1, x21
   3ccc4:	mov	x4, x24
   3ccc8:	mov	x5, x25
   3cccc:	b	3ccfc <PyInit__decimal@@Base+0x36248>
   3ccd0:	bfi	x26, x25, #4, #60
   3ccd4:	mov	x0, x19
   3ccd8:	mov	w1, wzr
   3ccdc:	mov	x2, x26
   3cce0:	bl	65b0 <memset@plt>
   3cce4:	add	x1, x23, x22, lsl #3
   3cce8:	add	x3, x19, x26
   3ccec:	mov	x0, x19
   3ccf0:	mov	x2, x21
   3ccf4:	mov	x4, x25
   3ccf8:	mov	x5, x24
   3ccfc:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   3cd00:	add	x0, x20, x22, lsl #3
   3cd04:	add	x2, x25, x24
   3cd08:	mov	x1, x19
   3cd0c:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3cd10:	lsl	x8, x27, #3
   3cd14:	orr	x25, x8, #0x8
   3cd18:	mov	x0, x19
   3cd1c:	mov	w1, wzr
   3cd20:	mov	x2, x25
   3cd24:	bl	65b0 <memset@plt>
   3cd28:	add	x3, x19, x25
   3cd2c:	mov	x0, x19
   3cd30:	mov	x1, x23
   3cd34:	mov	x2, x21
   3cd38:	mov	x4, x22
   3cd3c:	mov	x5, x24
   3cd40:	bl	3caac <PyInit__decimal@@Base+0x35ff8>
   3cd44:	add	x2, x22, x24
   3cd48:	mov	x0, x20
   3cd4c:	mov	x1, x19
   3cd50:	ldp	x20, x19, [sp, #112]
   3cd54:	ldp	x22, x21, [sp, #96]
   3cd58:	ldp	x24, x23, [sp, #80]
   3cd5c:	ldp	x26, x25, [sp, #64]
   3cd60:	ldp	x28, x27, [sp, #48]
   3cd64:	ldp	x29, x30, [sp, #32]
   3cd68:	add	sp, sp, #0x80
   3cd6c:	b	1c344 <PyInit__decimal@@Base+0x15890>
   3cd70:	sub	sp, sp, #0x90
   3cd74:	stp	x29, x30, [sp, #48]
   3cd78:	stp	x28, x27, [sp, #64]
   3cd7c:	stp	x26, x25, [sp, #80]
   3cd80:	stp	x24, x23, [sp, #96]
   3cd84:	stp	x22, x21, [sp, #112]
   3cd88:	stp	x20, x19, [sp, #128]
   3cd8c:	add	x29, sp, #0x30
   3cd90:	mov	x8, #0x180000000           	// #6442450944
   3cd94:	mov	x24, x5
   3cd98:	mov	x25, x4
   3cd9c:	mov	x21, x2
   3cda0:	mov	x22, x1
   3cda4:	cmp	x4, x8
   3cda8:	mov	x27, x0
   3cdac:	b.hi	3cdd4 <PyInit__decimal@@Base+0x36320>  // b.pmore
   3cdb0:	cmp	x24, #0xc0
   3cdb4:	b.hi	3cf44 <PyInit__decimal@@Base+0x36490>  // b.pmore
   3cdb8:	mov	x0, x27
   3cdbc:	mov	x1, x21
   3cdc0:	mov	x2, x22
   3cdc4:	mov	x3, x24
   3cdc8:	mov	x4, x25
   3cdcc:	bl	1c6e4 <PyInit__decimal@@Base+0x15c30>
   3cdd0:	b	3d060 <PyInit__decimal@@Base+0x365ac>
   3cdd4:	add	x19, x25, #0x1
   3cdd8:	lsr	x23, x19, #1
   3cddc:	mov	x20, x3
   3cde0:	cmp	x23, x24
   3cde4:	b.cs	3cf8c <PyInit__decimal@@Base+0x364d8>  // b.hs, b.nlast
   3cde8:	str	x19, [sp, #8]
   3cdec:	lsl	x19, x23, #3
   3cdf0:	mov	x0, x20
   3cdf4:	mov	x1, x22
   3cdf8:	mov	x2, x19
   3cdfc:	bl	63c0 <memcpy@plt>
   3ce00:	add	x1, x22, x19
   3ce04:	sub	x2, x25, x23
   3ce08:	mov	x0, x20
   3ce0c:	str	xzr, [x20, x19]
   3ce10:	str	x1, [sp, #24]
   3ce14:	stur	x2, [x29, #-16]
   3ce18:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3ce1c:	add	x26, x23, #0x1
   3ce20:	add	x25, x20, x26, lsl #3
   3ce24:	mov	x0, x25
   3ce28:	mov	x1, x21
   3ce2c:	mov	x2, x19
   3ce30:	bl	63c0 <memcpy@plt>
   3ce34:	add	x28, x21, x19
   3ce38:	sub	x24, x24, x23
   3ce3c:	add	x8, x26, x23
   3ce40:	mov	x0, x25
   3ce44:	mov	x1, x28
   3ce48:	mov	x2, x24
   3ce4c:	str	xzr, [x20, x8, lsl #3]
   3ce50:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3ce54:	str	x27, [sp, #16]
   3ce58:	add	x27, x27, x19
   3ce5c:	add	x3, x20, x26, lsl #4
   3ce60:	mov	x0, x27
   3ce64:	mov	x1, x20
   3ce68:	mov	x2, x25
   3ce6c:	mov	x4, x26
   3ce70:	mov	x5, x26
   3ce74:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   3ce78:	cbz	w0, 3d064 <PyInit__decimal@@Base+0x365b0>
   3ce7c:	ldur	x25, [x29, #-16]
   3ce80:	mov	w19, #0x8                   	// #8
   3ce84:	mov	x0, x20
   3ce88:	mov	w1, wzr
   3ce8c:	bfi	x19, x25, #4, #60
   3ce90:	mov	x2, x19
   3ce94:	bl	65b0 <memset@plt>
   3ce98:	ldr	x1, [sp, #24]
   3ce9c:	add	x3, x20, x19
   3cea0:	mov	x0, x20
   3cea4:	mov	x2, x28
   3cea8:	mov	x4, x25
   3ceac:	mov	x5, x24
   3ceb0:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   3ceb4:	cbz	w0, 3d064 <PyInit__decimal@@Base+0x365b0>
   3ceb8:	ldp	x28, x25, [sp, #8]
   3cebc:	ldur	x8, [x29, #-16]
   3cec0:	mov	x1, x20
   3cec4:	and	x26, x28, #0xfffffffffffffffe
   3cec8:	add	x19, x8, x24
   3cecc:	add	x0, x25, x26, lsl #3
   3ced0:	mov	x2, x19
   3ced4:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3ced8:	mov	x0, x27
   3cedc:	mov	x1, x20
   3cee0:	mov	x2, x19
   3cee4:	bl	1c5d0 <PyInit__decimal@@Base+0x15b1c>
   3cee8:	lsl	x8, x28, #3
   3ceec:	orr	x19, x8, #0x8
   3cef0:	mov	x0, x20
   3cef4:	mov	w1, wzr
   3cef8:	mov	x2, x19
   3cefc:	bl	65b0 <memset@plt>
   3cf00:	add	x3, x20, x19
   3cf04:	mov	x0, x20
   3cf08:	mov	x1, x22
   3cf0c:	mov	x2, x21
   3cf10:	mov	x4, x23
   3cf14:	mov	x5, x23
   3cf18:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   3cf1c:	cbz	w0, 3d064 <PyInit__decimal@@Base+0x365b0>
   3cf20:	mov	x0, x25
   3cf24:	mov	x1, x20
   3cf28:	mov	x2, x26
   3cf2c:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3cf30:	mov	x0, x27
   3cf34:	mov	x1, x20
   3cf38:	mov	x2, x26
   3cf3c:	bl	1c5d0 <PyInit__decimal@@Base+0x15b1c>
   3cf40:	b	3d060 <PyInit__decimal@@Base+0x365ac>
   3cf44:	sub	x4, x29, #0x8
   3cf48:	mov	x0, x22
   3cf4c:	mov	x1, x21
   3cf50:	mov	x2, x25
   3cf54:	mov	x3, x24
   3cf58:	bl	3c600 <PyInit__decimal@@Base+0x35b4c>
   3cf5c:	cbz	x0, 3d064 <PyInit__decimal@@Base+0x365b0>
   3cf60:	mov	x20, x0
   3cf64:	add	x8, x24, x25
   3cf68:	lsl	x2, x8, #3
   3cf6c:	mov	x0, x27
   3cf70:	mov	x1, x20
   3cf74:	bl	63c0 <memcpy@plt>
   3cf78:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3cf7c:	ldr	x8, [x8, #1376]
   3cf80:	mov	x0, x20
   3cf84:	blr	x8
   3cf88:	b	3d060 <PyInit__decimal@@Base+0x365ac>
   3cf8c:	sub	x25, x25, x23
   3cf90:	mov	w26, #0x8                   	// #8
   3cf94:	cmp	x25, x24
   3cf98:	b.cs	3cfd4 <PyInit__decimal@@Base+0x36520>  // b.hs, b.nlast
   3cf9c:	bfi	x26, x24, #4, #60
   3cfa0:	mov	x0, x20
   3cfa4:	mov	w1, wzr
   3cfa8:	mov	x2, x26
   3cfac:	bl	65b0 <memset@plt>
   3cfb0:	add	x2, x22, x23, lsl #3
   3cfb4:	add	x3, x20, x26
   3cfb8:	mov	x0, x20
   3cfbc:	mov	x1, x21
   3cfc0:	mov	x4, x24
   3cfc4:	mov	x5, x25
   3cfc8:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   3cfcc:	cbnz	w0, 3d008 <PyInit__decimal@@Base+0x36554>
   3cfd0:	b	3d064 <PyInit__decimal@@Base+0x365b0>
   3cfd4:	bfi	x26, x25, #4, #60
   3cfd8:	mov	x0, x20
   3cfdc:	mov	w1, wzr
   3cfe0:	mov	x2, x26
   3cfe4:	bl	65b0 <memset@plt>
   3cfe8:	add	x1, x22, x23, lsl #3
   3cfec:	add	x3, x20, x26
   3cff0:	mov	x0, x20
   3cff4:	mov	x2, x21
   3cff8:	mov	x4, x25
   3cffc:	mov	x5, x24
   3d000:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   3d004:	cbz	w0, 3d064 <PyInit__decimal@@Base+0x365b0>
   3d008:	add	x0, x27, x23, lsl #3
   3d00c:	add	x2, x25, x24
   3d010:	mov	x1, x20
   3d014:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3d018:	lsl	x8, x19, #3
   3d01c:	orr	x25, x8, #0x8
   3d020:	mov	x0, x20
   3d024:	mov	w1, wzr
   3d028:	mov	x2, x25
   3d02c:	bl	65b0 <memset@plt>
   3d030:	add	x3, x20, x25
   3d034:	mov	x0, x20
   3d038:	mov	x1, x22
   3d03c:	mov	x2, x21
   3d040:	mov	x4, x23
   3d044:	mov	x5, x24
   3d048:	bl	3cd70 <PyInit__decimal@@Base+0x362bc>
   3d04c:	cbz	w0, 3d064 <PyInit__decimal@@Base+0x365b0>
   3d050:	add	x2, x23, x24
   3d054:	mov	x0, x27
   3d058:	mov	x1, x20
   3d05c:	bl	1c344 <PyInit__decimal@@Base+0x15890>
   3d060:	mov	w0, #0x1                   	// #1
   3d064:	ldp	x20, x19, [sp, #128]
   3d068:	ldp	x22, x21, [sp, #112]
   3d06c:	ldp	x24, x23, [sp, #96]
   3d070:	ldp	x26, x25, [sp, #80]
   3d074:	ldp	x28, x27, [sp, #64]
   3d078:	ldp	x29, x30, [sp, #48]
   3d07c:	add	sp, sp, #0x90
   3d080:	ret
   3d084:	stp	x29, x30, [sp, #-48]!
   3d088:	stp	x22, x21, [sp, #16]
   3d08c:	stp	x20, x19, [sp, #32]
   3d090:	mov	x29, sp
   3d094:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   3d098:	sbfiz	x8, x2, #3, #32
   3d09c:	add	x9, x9, #0xa50
   3d0a0:	ldr	x19, [x9, x8]
   3d0a4:	adrp	x9, 44000 <PyInit__decimal@@Base+0x3d54c>
   3d0a8:	add	x9, x9, #0xa68
   3d0ac:	ldr	x20, [x9, x8]
   3d0b0:	sub	x8, x19, #0x1
   3d0b4:	cmn	w1, #0x1
   3d0b8:	udiv	x22, x8, x0
   3d0bc:	mov	w21, #0x1                   	// #1
   3d0c0:	b.eq	3d108 <PyInit__decimal@@Base+0x36654>  // b.none
   3d0c4:	cmp	x8, x0
   3d0c8:	b.cs	3d0ec <PyInit__decimal@@Base+0x36638>  // b.hs, b.nlast
   3d0cc:	b	3d110 <PyInit__decimal@@Base+0x3665c>
   3d0d0:	mov	x0, x20
   3d0d4:	mov	x1, x20
   3d0d8:	mov	x2, x19
   3d0dc:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d0e0:	lsr	x22, x22, #1
   3d0e4:	mov	x20, x0
   3d0e8:	cbz	x22, 3d110 <PyInit__decimal@@Base+0x3665c>
   3d0ec:	tbz	w22, #0, 3d0d0 <PyInit__decimal@@Base+0x3661c>
   3d0f0:	mov	x0, x21
   3d0f4:	mov	x1, x20
   3d0f8:	mov	x2, x19
   3d0fc:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d100:	mov	x21, x0
   3d104:	b	3d0d0 <PyInit__decimal@@Base+0x3661c>
   3d108:	subs	x22, x8, x22
   3d10c:	b.ne	3d140 <PyInit__decimal@@Base+0x3668c>  // b.any
   3d110:	mov	x0, x21
   3d114:	ldp	x20, x19, [sp, #32]
   3d118:	ldp	x22, x21, [sp, #16]
   3d11c:	ldp	x29, x30, [sp], #48
   3d120:	ret
   3d124:	mov	x0, x20
   3d128:	mov	x1, x20
   3d12c:	mov	x2, x19
   3d130:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d134:	lsr	x22, x22, #1
   3d138:	mov	x20, x0
   3d13c:	cbz	x22, 3d110 <PyInit__decimal@@Base+0x3665c>
   3d140:	tbz	w22, #0, 3d124 <PyInit__decimal@@Base+0x36670>
   3d144:	mov	x0, x21
   3d148:	mov	x1, x20
   3d14c:	mov	x2, x19
   3d150:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d154:	mov	x21, x0
   3d158:	b	3d124 <PyInit__decimal@@Base+0x36670>
   3d15c:	stp	x29, x30, [sp, #-64]!
   3d160:	stp	x24, x23, [sp, #16]
   3d164:	stp	x22, x21, [sp, #32]
   3d168:	stp	x20, x19, [sp, #48]
   3d16c:	mov	x29, sp
   3d170:	lsr	x19, x0, #1
   3d174:	mov	w23, w2
   3d178:	mov	w22, w1
   3d17c:	mov	x24, x0
   3d180:	mov	w0, #0x18                  	// #24
   3d184:	mov	w2, #0x8                   	// #8
   3d188:	mov	x1, x19
   3d18c:	bl	21f40 <PyInit__decimal@@Base+0x1b48c>
   3d190:	mov	x20, x0
   3d194:	cbz	x0, 3d1e4 <PyInit__decimal@@Base+0x36730>
   3d198:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   3d19c:	add	x8, x8, #0xa50
   3d1a0:	ldr	x21, [x8, w23, sxtw #3]
   3d1a4:	mov	x0, x24
   3d1a8:	mov	w1, w22
   3d1ac:	mov	w2, w23
   3d1b0:	bl	3d084 <PyInit__decimal@@Base+0x365d0>
   3d1b4:	str	w23, [x20]
   3d1b8:	stp	x21, x0, [x20, #8]
   3d1bc:	cbz	x19, 3d1e4 <PyInit__decimal@@Base+0x36730>
   3d1c0:	mov	x22, x0
   3d1c4:	add	x23, x20, #0x18
   3d1c8:	mov	w0, #0x1                   	// #1
   3d1cc:	mov	x1, x22
   3d1d0:	mov	x2, x21
   3d1d4:	str	x0, [x23], #8
   3d1d8:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d1dc:	subs	x19, x19, #0x1
   3d1e0:	b.ne	3d1cc <PyInit__decimal@@Base+0x36718>  // b.any
   3d1e4:	mov	x0, x20
   3d1e8:	ldp	x20, x19, [sp, #48]
   3d1ec:	ldp	x22, x21, [sp, #32]
   3d1f0:	ldp	x24, x23, [sp, #16]
   3d1f4:	ldp	x29, x30, [sp], #64
   3d1f8:	ret
   3d1fc:	umulh	x8, x1, x0
   3d200:	mul	x9, x1, x0
   3d204:	tbnz	x2, #32, 3d250 <PyInit__decimal@@Base+0x3679c>
   3d208:	tbnz	x2, #34, 3d27c <PyInit__decimal@@Base+0x367c8>
   3d20c:	subs	x9, x9, x8
   3d210:	lsr	x10, x8, #24
   3d214:	cset	w11, cc  // cc = lo, ul, last
   3d218:	adds	x8, x9, x8, lsl #40
   3d21c:	sub	x9, x10, x11
   3d220:	cinc	x9, x9, cs  // cs = hs, nlast
   3d224:	subs	x8, x8, x9
   3d228:	lsr	x10, x9, #24
   3d22c:	cset	w11, cc  // cc = lo, ul, last
   3d230:	adds	x8, x8, x9, lsl #40
   3d234:	sub	x9, x10, x11
   3d238:	cinc	x9, x9, cs  // cs = hs, nlast
   3d23c:	subs	x8, x8, x9
   3d240:	lsr	x10, x9, #24
   3d244:	cset	w11, cc  // cc = lo, ul, last
   3d248:	adds	x8, x8, x9, lsl #40
   3d24c:	b	3d2bc <PyInit__decimal@@Base+0x36808>
   3d250:	subs	x9, x9, x8
   3d254:	lsr	x10, x8, #32
   3d258:	cset	w11, cc  // cc = lo, ul, last
   3d25c:	adds	x8, x9, x8, lsl #32
   3d260:	sub	x9, x10, x11
   3d264:	cinc	x9, x9, cs  // cs = hs, nlast
   3d268:	subs	x8, x8, x9
   3d26c:	lsr	x10, x9, #32
   3d270:	cset	w11, cc  // cc = lo, ul, last
   3d274:	adds	x8, x8, x9, lsl #32
   3d278:	b	3d2bc <PyInit__decimal@@Base+0x36808>
   3d27c:	subs	x9, x9, x8
   3d280:	lsr	x10, x8, #30
   3d284:	cset	w11, cc  // cc = lo, ul, last
   3d288:	adds	x8, x9, x8, lsl #34
   3d28c:	sub	x9, x10, x11
   3d290:	cinc	x9, x9, cs  // cs = hs, nlast
   3d294:	subs	x8, x8, x9
   3d298:	lsr	x10, x9, #30
   3d29c:	cset	w11, cc  // cc = lo, ul, last
   3d2a0:	adds	x8, x8, x9, lsl #34
   3d2a4:	sub	x9, x10, x11
   3d2a8:	cinc	x9, x9, cs  // cs = hs, nlast
   3d2ac:	subs	x8, x8, x9
   3d2b0:	lsr	x10, x9, #30
   3d2b4:	cset	w11, cc  // cc = lo, ul, last
   3d2b8:	adds	x8, x8, x9, lsl #34
   3d2bc:	sub	x9, x10, x11
   3d2c0:	cset	w10, cs  // cs = hs, nlast
   3d2c4:	sbfx	x10, x10, #0, #1
   3d2c8:	cmp	x9, x10
   3d2cc:	ccmp	x8, x2, #0x2, eq  // eq = none
   3d2d0:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   3d2d4:	sub	x0, x8, x9
   3d2d8:	ret
   3d2dc:	stp	x29, x30, [sp, #-32]!
   3d2e0:	stp	x20, x19, [sp, #16]
   3d2e4:	mov	x29, sp
   3d2e8:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   3d2ec:	add	x8, x8, #0xa50
   3d2f0:	ldr	x19, [x8, w2, sxtw #3]
   3d2f4:	mov	x20, x0
   3d2f8:	mov	w0, #0x3                   	// #3
   3d2fc:	bl	3d084 <PyInit__decimal@@Base+0x365d0>
   3d300:	mov	w8, #0x1                   	// #1
   3d304:	mov	x1, x0
   3d308:	mov	x2, x19
   3d30c:	stp	x8, x0, [x20]
   3d310:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d314:	mov	x1, x0
   3d318:	mov	w0, #0x1                   	// #1
   3d31c:	mov	x2, x19
   3d320:	bl	3d1fc <PyInit__decimal@@Base+0x36748>
   3d324:	str	x0, [x20, #16]
   3d328:	ldp	x20, x19, [sp, #16]
   3d32c:	ldp	x29, x30, [sp], #32
   3d330:	ret
   3d334:	sub	sp, sp, #0xa0
   3d338:	stp	x29, x30, [sp, #64]
   3d33c:	stp	x28, x27, [sp, #80]
   3d340:	stp	x26, x25, [sp, #96]
   3d344:	stp	x24, x23, [sp, #112]
   3d348:	stp	x22, x21, [sp, #128]
   3d34c:	stp	x20, x19, [sp, #144]
   3d350:	add	x29, sp, #0x40
   3d354:	lsr	x8, x1, #32
   3d358:	cmp	x8, #0x0
   3d35c:	mov	w9, #0x10                  	// #16
   3d360:	cset	w11, ne  // ne = any
   3d364:	csel	x8, x1, x8, eq  // eq = none
   3d368:	lsl	w12, w11, #5
   3d36c:	bfi	w9, w11, #5, #1
   3d370:	lsr	x11, x8, #16
   3d374:	cmp	x11, #0x0
   3d378:	csel	x8, x8, x11, eq  // eq = none
   3d37c:	lsr	x11, x8, #8
   3d380:	csel	w9, w12, w9, eq  // eq = none
   3d384:	cmp	x11, #0x0
   3d388:	csel	x8, x8, x11, eq  // eq = none
   3d38c:	orr	w12, w9, #0x8
   3d390:	lsr	x11, x8, #4
   3d394:	csel	w9, w9, w12, eq  // eq = none
   3d398:	cmp	x11, #0x0
   3d39c:	csel	x8, x8, x11, eq  // eq = none
   3d3a0:	orr	w12, w9, #0x4
   3d3a4:	lsr	x11, x8, #2
   3d3a8:	csel	w9, w9, w12, eq  // eq = none
   3d3ac:	cmp	x11, #0x0
   3d3b0:	csel	x8, x8, x11, eq  // eq = none
   3d3b4:	add	w12, w9, #0x2
   3d3b8:	lsr	x11, x8, #1
   3d3bc:	csel	w9, w9, w12, eq  // eq = none
   3d3c0:	cmp	x11, #0x0
   3d3c4:	csel	w8, w8, w11, eq  // eq = none
   3d3c8:	cinc	w9, w9, ne  // ne = any
   3d3cc:	add	w8, w9, w8
   3d3d0:	sub	w8, w8, #0x1
   3d3d4:	sxtw	x8, w8
   3d3d8:	lsr	x9, x8, #1
   3d3dc:	mov	w10, #0x1                   	// #1
   3d3e0:	sub	x20, x8, x9
   3d3e4:	lsl	x21, x10, x9
   3d3e8:	lsl	x28, x10, x20
   3d3ec:	mov	w23, w2
   3d3f0:	mov	x24, x1
   3d3f4:	mov	x1, x28
   3d3f8:	mov	x2, x21
   3d3fc:	mov	x22, x0
   3d400:	stur	x9, [x29, #-16]
   3d404:	bl	3db18 <PyInit__decimal@@Base+0x37064>
   3d408:	cbz	w0, 3d618 <PyInit__decimal@@Base+0x36b64>
   3d40c:	mov	w1, #0xffffffff            	// #-1
   3d410:	mov	x0, x28
   3d414:	mov	w2, w23
   3d418:	bl	3d15c <PyInit__decimal@@Base+0x366a8>
   3d41c:	cbz	x0, 3d618 <PyInit__decimal@@Base+0x36b64>
   3d420:	add	x27, x22, x24, lsl #3
   3d424:	mov	x26, x0
   3d428:	cmp	x27, x22
   3d42c:	b.ls	3d454 <PyInit__decimal@@Base+0x369a0>  // b.plast
   3d430:	lsl	x19, x28, #3
   3d434:	mov	x25, x22
   3d438:	mov	x0, x25
   3d43c:	mov	x1, x28
   3d440:	mov	x2, x26
   3d444:	bl	1e384 <PyInit__decimal@@Base+0x178d0>
   3d448:	add	x25, x25, x19
   3d44c:	cmp	x25, x27
   3d450:	b.cc	3d438 <PyInit__decimal@@Base+0x36984>  // b.lo, b.ul, b.last
   3d454:	mov	x0, x22
   3d458:	mov	x1, x21
   3d45c:	mov	x2, x28
   3d460:	bl	3db18 <PyInit__decimal@@Base+0x37064>
   3d464:	cbz	w0, 3d5a0 <PyInit__decimal@@Base+0x36aec>
   3d468:	mov	w1, #0xffffffff            	// #-1
   3d46c:	mov	x0, x24
   3d470:	mov	w2, w23
   3d474:	stp	x27, x26, [sp]
   3d478:	str	w23, [sp, #20]
   3d47c:	bl	3d084 <PyInit__decimal@@Base+0x365d0>
   3d480:	stur	x0, [x29, #-24]
   3d484:	cbz	x20, 3d58c <PyInit__decimal@@Base+0x36ad8>
   3d488:	ldr	w9, [sp, #20]
   3d48c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   3d490:	add	x8, x8, #0xa50
   3d494:	mov	w20, #0x1                   	// #1
   3d498:	ldr	x25, [x8, w9, sxtw #3]
   3d49c:	stp	x28, x22, [sp, #24]
   3d4a0:	ldur	x27, [x29, #-24]
   3d4a4:	mov	w26, #0x1                   	// #1
   3d4a8:	mov	x19, x20
   3d4ac:	b	3d4cc <PyInit__decimal@@Base+0x36a18>
   3d4b0:	mov	x0, x27
   3d4b4:	mov	x1, x27
   3d4b8:	mov	x2, x25
   3d4bc:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d4c0:	lsr	x19, x19, #1
   3d4c4:	mov	x27, x0
   3d4c8:	cbz	x19, 3d4e8 <PyInit__decimal@@Base+0x36a34>
   3d4cc:	tbz	w19, #0, 3d4b0 <PyInit__decimal@@Base+0x369fc>
   3d4d0:	mov	x0, x26
   3d4d4:	mov	x1, x27
   3d4d8:	mov	x2, x25
   3d4dc:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d4e0:	mov	x26, x0
   3d4e4:	b	3d4b0 <PyInit__decimal@@Base+0x369fc>
   3d4e8:	mov	x0, x26
   3d4ec:	mov	x1, x26
   3d4f0:	mov	x2, x25
   3d4f4:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d4f8:	ldur	x8, [x29, #-16]
   3d4fc:	mov	x27, x0
   3d500:	mov	x23, xzr
   3d504:	mov	w28, #0x1                   	// #1
   3d508:	lsl	x8, x20, x8
   3d50c:	add	x19, x22, x8, lsl #3
   3d510:	stur	x20, [x29, #-8]
   3d514:	add	x22, x19, x23, lsl #3
   3d518:	ldp	x0, x20, [x22]
   3d51c:	mov	x1, x28
   3d520:	mov	x2, x25
   3d524:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d528:	mov	x24, x0
   3d52c:	mov	x0, x20
   3d530:	mov	x1, x26
   3d534:	mov	x2, x25
   3d538:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d53c:	mov	x20, x0
   3d540:	mov	x0, x28
   3d544:	mov	x1, x27
   3d548:	mov	x2, x25
   3d54c:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d550:	mov	x28, x0
   3d554:	mov	x0, x26
   3d558:	mov	x1, x27
   3d55c:	mov	x2, x25
   3d560:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d564:	add	x23, x23, #0x2
   3d568:	mov	x26, x0
   3d56c:	cmp	x23, x21
   3d570:	stp	x24, x20, [x22]
   3d574:	b.cc	3d514 <PyInit__decimal@@Base+0x36a60>  // b.lo, b.ul, b.last
   3d578:	ldur	x20, [x29, #-8]
   3d57c:	ldp	x28, x22, [sp, #24]
   3d580:	add	x20, x20, #0x1
   3d584:	cmp	x20, x28
   3d588:	b.cc	3d4a0 <PyInit__decimal@@Base+0x369ec>  // b.lo, b.ul, b.last
   3d58c:	cmp	x21, x28
   3d590:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   3d594:	b.ne	3d5b8 <PyInit__decimal@@Base+0x36b04>  // b.any
   3d598:	ldp	x24, x23, [sp]
   3d59c:	b	3d5e0 <PyInit__decimal@@Base+0x36b2c>
   3d5a0:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3d5a4:	ldr	x8, [x8, #1376]
   3d5a8:	mov	x0, x26
   3d5ac:	blr	x8
   3d5b0:	mov	w0, wzr
   3d5b4:	b	3d618 <PyInit__decimal@@Base+0x36b64>
   3d5b8:	ldr	x8, [x19, #1376]
   3d5bc:	ldr	x0, [sp, #8]
   3d5c0:	blr	x8
   3d5c4:	ldr	w2, [sp, #20]
   3d5c8:	mov	w1, #0xffffffff            	// #-1
   3d5cc:	mov	x0, x21
   3d5d0:	bl	3d15c <PyInit__decimal@@Base+0x366a8>
   3d5d4:	ldr	x24, [sp]
   3d5d8:	mov	x23, x0
   3d5dc:	cbz	x0, 3d618 <PyInit__decimal@@Base+0x36b64>
   3d5e0:	cmp	x24, x22
   3d5e4:	b.ls	3d608 <PyInit__decimal@@Base+0x36b54>  // b.plast
   3d5e8:	lsl	x20, x21, #3
   3d5ec:	mov	x0, x22
   3d5f0:	mov	x1, x21
   3d5f4:	mov	x2, x23
   3d5f8:	bl	1e384 <PyInit__decimal@@Base+0x178d0>
   3d5fc:	add	x22, x22, x20
   3d600:	cmp	x22, x24
   3d604:	b.cc	3d5ec <PyInit__decimal@@Base+0x36b38>  // b.lo, b.ul, b.last
   3d608:	ldr	x8, [x19, #1376]
   3d60c:	mov	x0, x23
   3d610:	blr	x8
   3d614:	mov	w0, #0x1                   	// #1
   3d618:	ldp	x20, x19, [sp, #144]
   3d61c:	ldp	x22, x21, [sp, #128]
   3d620:	ldp	x24, x23, [sp, #112]
   3d624:	ldp	x26, x25, [sp, #96]
   3d628:	ldp	x28, x27, [sp, #80]
   3d62c:	ldp	x29, x30, [sp, #64]
   3d630:	add	sp, sp, #0xa0
   3d634:	ret
   3d638:	umulh	x8, x1, x0
   3d63c:	mul	x9, x1, x0
   3d640:	tbnz	x2, #32, 3d68c <PyInit__decimal@@Base+0x36bd8>
   3d644:	tbnz	x2, #34, 3d6b8 <PyInit__decimal@@Base+0x36c04>
   3d648:	subs	x9, x9, x8
   3d64c:	lsr	x10, x8, #24
   3d650:	cset	w11, cc  // cc = lo, ul, last
   3d654:	adds	x8, x9, x8, lsl #40
   3d658:	sub	x9, x10, x11
   3d65c:	cinc	x9, x9, cs  // cs = hs, nlast
   3d660:	subs	x8, x8, x9
   3d664:	lsr	x10, x9, #24
   3d668:	cset	w11, cc  // cc = lo, ul, last
   3d66c:	adds	x8, x8, x9, lsl #40
   3d670:	sub	x9, x10, x11
   3d674:	cinc	x9, x9, cs  // cs = hs, nlast
   3d678:	subs	x8, x8, x9
   3d67c:	lsr	x10, x9, #24
   3d680:	cset	w11, cc  // cc = lo, ul, last
   3d684:	adds	x8, x8, x9, lsl #40
   3d688:	b	3d6f8 <PyInit__decimal@@Base+0x36c44>
   3d68c:	subs	x9, x9, x8
   3d690:	lsr	x10, x8, #32
   3d694:	cset	w11, cc  // cc = lo, ul, last
   3d698:	adds	x8, x9, x8, lsl #32
   3d69c:	sub	x9, x10, x11
   3d6a0:	cinc	x9, x9, cs  // cs = hs, nlast
   3d6a4:	subs	x8, x8, x9
   3d6a8:	lsr	x10, x9, #32
   3d6ac:	cset	w11, cc  // cc = lo, ul, last
   3d6b0:	adds	x8, x8, x9, lsl #32
   3d6b4:	b	3d6f8 <PyInit__decimal@@Base+0x36c44>
   3d6b8:	subs	x9, x9, x8
   3d6bc:	lsr	x10, x8, #30
   3d6c0:	cset	w11, cc  // cc = lo, ul, last
   3d6c4:	adds	x8, x9, x8, lsl #34
   3d6c8:	sub	x9, x10, x11
   3d6cc:	cinc	x9, x9, cs  // cs = hs, nlast
   3d6d0:	subs	x8, x8, x9
   3d6d4:	lsr	x10, x9, #30
   3d6d8:	cset	w11, cc  // cc = lo, ul, last
   3d6dc:	adds	x8, x8, x9, lsl #34
   3d6e0:	sub	x9, x10, x11
   3d6e4:	cinc	x9, x9, cs  // cs = hs, nlast
   3d6e8:	subs	x8, x8, x9
   3d6ec:	lsr	x10, x9, #30
   3d6f0:	cset	w11, cc  // cc = lo, ul, last
   3d6f4:	adds	x8, x8, x9, lsl #34
   3d6f8:	sub	x9, x10, x11
   3d6fc:	cset	w10, cs  // cs = hs, nlast
   3d700:	sbfx	x10, x10, #0, #1
   3d704:	cmp	x9, x10
   3d708:	ccmp	x8, x2, #0x2, eq  // eq = none
   3d70c:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   3d710:	sub	x0, x8, x9
   3d714:	ret
   3d718:	sub	sp, sp, #0xa0
   3d71c:	stp	x29, x30, [sp, #64]
   3d720:	stp	x28, x27, [sp, #80]
   3d724:	stp	x26, x25, [sp, #96]
   3d728:	stp	x24, x23, [sp, #112]
   3d72c:	stp	x22, x21, [sp, #128]
   3d730:	stp	x20, x19, [sp, #144]
   3d734:	add	x29, sp, #0x40
   3d738:	lsr	x8, x1, #32
   3d73c:	cmp	x8, #0x0
   3d740:	csel	x8, x1, x8, eq  // eq = none
   3d744:	lsr	x12, x8, #16
   3d748:	cset	w10, ne  // ne = any
   3d74c:	cmp	x12, #0x0
   3d750:	mov	w9, #0x10                  	// #16
   3d754:	csel	x8, x8, x12, eq  // eq = none
   3d758:	lsl	w11, w10, #5
   3d75c:	bfi	w9, w10, #5, #1
   3d760:	lsr	x10, x8, #8
   3d764:	csel	w9, w11, w9, eq  // eq = none
   3d768:	cmp	x10, #0x0
   3d76c:	csel	x8, x8, x10, eq  // eq = none
   3d770:	orr	w11, w9, #0x8
   3d774:	lsr	x10, x8, #4
   3d778:	csel	w9, w9, w11, eq  // eq = none
   3d77c:	cmp	x10, #0x0
   3d780:	csel	x8, x8, x10, eq  // eq = none
   3d784:	orr	w11, w9, #0x4
   3d788:	lsr	x10, x8, #2
   3d78c:	csel	w9, w9, w11, eq  // eq = none
   3d790:	cmp	x10, #0x0
   3d794:	csel	x8, x8, x10, eq  // eq = none
   3d798:	add	w11, w9, #0x2
   3d79c:	lsr	x10, x8, #1
   3d7a0:	csel	w9, w9, w11, eq  // eq = none
   3d7a4:	cmp	x10, #0x0
   3d7a8:	csel	w8, w8, w10, eq  // eq = none
   3d7ac:	cinc	w9, w9, ne  // ne = any
   3d7b0:	add	w8, w9, w8
   3d7b4:	sub	w8, w8, #0x1
   3d7b8:	sxtw	x19, w8
   3d7bc:	lsr	x25, x19, #1
   3d7c0:	mov	w20, #0x1                   	// #1
   3d7c4:	lsl	x21, x20, x25
   3d7c8:	mov	x24, x1
   3d7cc:	mov	x23, x0
   3d7d0:	mov	w1, #0x1                   	// #1
   3d7d4:	mov	x0, x21
   3d7d8:	mov	w22, w2
   3d7dc:	bl	3d15c <PyInit__decimal@@Base+0x366a8>
   3d7e0:	cbz	x0, 3da08 <PyInit__decimal@@Base+0x36f54>
   3d7e4:	sub	x19, x19, x25
   3d7e8:	add	x28, x23, x24, lsl #3
   3d7ec:	mov	x27, x0
   3d7f0:	cmp	x28, x23
   3d7f4:	lsl	x26, x20, x19
   3d7f8:	stur	x25, [x29, #-16]
   3d7fc:	b.ls	3d824 <PyInit__decimal@@Base+0x36d70>  // b.plast
   3d800:	lsl	x20, x21, #3
   3d804:	mov	x25, x23
   3d808:	mov	x0, x25
   3d80c:	mov	x1, x21
   3d810:	mov	x2, x27
   3d814:	bl	1e384 <PyInit__decimal@@Base+0x178d0>
   3d818:	add	x25, x25, x20
   3d81c:	cmp	x25, x28
   3d820:	b.cc	3d808 <PyInit__decimal@@Base+0x36d54>  // b.lo, b.ul, b.last
   3d824:	mov	w1, #0x1                   	// #1
   3d828:	mov	x0, x24
   3d82c:	mov	w2, w22
   3d830:	str	x28, [sp]
   3d834:	str	x27, [sp, #16]
   3d838:	str	w22, [sp, #12]
   3d83c:	bl	3d084 <PyInit__decimal@@Base+0x365d0>
   3d840:	stur	x0, [x29, #-24]
   3d844:	cbz	x19, 3d94c <PyInit__decimal@@Base+0x36e98>
   3d848:	ldr	w9, [sp, #12]
   3d84c:	adrp	x8, 44000 <PyInit__decimal@@Base+0x3d54c>
   3d850:	add	x8, x8, #0xa50
   3d854:	mov	w20, #0x1                   	// #1
   3d858:	ldr	x25, [x8, w9, sxtw #3]
   3d85c:	stp	x26, x23, [sp, #24]
   3d860:	ldur	x27, [x29, #-24]
   3d864:	mov	w26, #0x1                   	// #1
   3d868:	mov	x19, x20
   3d86c:	b	3d88c <PyInit__decimal@@Base+0x36dd8>
   3d870:	mov	x0, x27
   3d874:	mov	x1, x27
   3d878:	mov	x2, x25
   3d87c:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d880:	lsr	x19, x19, #1
   3d884:	mov	x27, x0
   3d888:	cbz	x19, 3d8a8 <PyInit__decimal@@Base+0x36df4>
   3d88c:	tbz	w19, #0, 3d870 <PyInit__decimal@@Base+0x36dbc>
   3d890:	mov	x0, x26
   3d894:	mov	x1, x27
   3d898:	mov	x2, x25
   3d89c:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d8a0:	mov	x26, x0
   3d8a4:	b	3d870 <PyInit__decimal@@Base+0x36dbc>
   3d8a8:	mov	x0, x26
   3d8ac:	mov	x1, x26
   3d8b0:	mov	x2, x25
   3d8b4:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d8b8:	ldur	x8, [x29, #-16]
   3d8bc:	mov	x27, x0
   3d8c0:	mov	x22, xzr
   3d8c4:	mov	w28, #0x1                   	// #1
   3d8c8:	lsl	x8, x20, x8
   3d8cc:	add	x24, x23, x8, lsl #3
   3d8d0:	stur	x20, [x29, #-8]
   3d8d4:	add	x23, x24, x22, lsl #3
   3d8d8:	ldp	x0, x20, [x23]
   3d8dc:	mov	x1, x28
   3d8e0:	mov	x2, x25
   3d8e4:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d8e8:	mov	x19, x0
   3d8ec:	mov	x0, x20
   3d8f0:	mov	x1, x26
   3d8f4:	mov	x2, x25
   3d8f8:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d8fc:	mov	x20, x0
   3d900:	mov	x0, x28
   3d904:	mov	x1, x27
   3d908:	mov	x2, x25
   3d90c:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d910:	mov	x28, x0
   3d914:	mov	x0, x26
   3d918:	mov	x1, x27
   3d91c:	mov	x2, x25
   3d920:	bl	3d638 <PyInit__decimal@@Base+0x36b84>
   3d924:	add	x22, x22, #0x2
   3d928:	mov	x26, x0
   3d92c:	cmp	x22, x21
   3d930:	stp	x19, x20, [x23]
   3d934:	b.cc	3d8d4 <PyInit__decimal@@Base+0x36e20>  // b.lo, b.ul, b.last
   3d938:	ldur	x20, [x29, #-8]
   3d93c:	ldp	x26, x23, [sp, #24]
   3d940:	add	x20, x20, #0x1
   3d944:	cmp	x20, x26
   3d948:	b.cc	3d860 <PyInit__decimal@@Base+0x36dac>  // b.lo, b.ul, b.last
   3d94c:	mov	x0, x23
   3d950:	mov	x1, x26
   3d954:	mov	x2, x21
   3d958:	bl	3db18 <PyInit__decimal@@Base+0x37064>
   3d95c:	cbz	w0, 3d978 <PyInit__decimal@@Base+0x36ec4>
   3d960:	cmp	x26, x21
   3d964:	adrp	x19, 59000 <PyInit__decimal@@Base+0x5254c>
   3d968:	b.ne	3d990 <PyInit__decimal@@Base+0x36edc>  // b.any
   3d96c:	ldr	x24, [sp, #16]
   3d970:	ldr	x25, [sp]
   3d974:	b	3d9b8 <PyInit__decimal@@Base+0x36f04>
   3d978:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3d97c:	ldr	x8, [x8, #1376]
   3d980:	ldr	x0, [sp, #16]
   3d984:	blr	x8
   3d988:	mov	w0, wzr
   3d98c:	b	3da08 <PyInit__decimal@@Base+0x36f54>
   3d990:	ldr	x8, [x19, #1376]
   3d994:	ldr	x0, [sp, #16]
   3d998:	blr	x8
   3d99c:	ldr	w2, [sp, #12]
   3d9a0:	mov	w1, #0x1                   	// #1
   3d9a4:	mov	x0, x26
   3d9a8:	bl	3d15c <PyInit__decimal@@Base+0x366a8>
   3d9ac:	ldr	x25, [sp]
   3d9b0:	mov	x24, x0
   3d9b4:	cbz	x0, 3da08 <PyInit__decimal@@Base+0x36f54>
   3d9b8:	cmp	x25, x23
   3d9bc:	b.ls	3d9e4 <PyInit__decimal@@Base+0x36f30>  // b.plast
   3d9c0:	lsl	x22, x26, #3
   3d9c4:	mov	x20, x23
   3d9c8:	mov	x0, x20
   3d9cc:	mov	x1, x26
   3d9d0:	mov	x2, x24
   3d9d4:	bl	1e384 <PyInit__decimal@@Base+0x178d0>
   3d9d8:	add	x20, x20, x22
   3d9dc:	cmp	x20, x25
   3d9e0:	b.cc	3d9c8 <PyInit__decimal@@Base+0x36f14>  // b.lo, b.ul, b.last
   3d9e4:	ldr	x8, [x19, #1376]
   3d9e8:	mov	x0, x24
   3d9ec:	blr	x8
   3d9f0:	mov	x0, x23
   3d9f4:	mov	x1, x21
   3d9f8:	mov	x2, x26
   3d9fc:	bl	3db18 <PyInit__decimal@@Base+0x37064>
   3da00:	cmp	w0, #0x0
   3da04:	cset	w0, ne  // ne = any
   3da08:	ldp	x20, x19, [sp, #144]
   3da0c:	ldp	x22, x21, [sp, #128]
   3da10:	ldp	x24, x23, [sp, #112]
   3da14:	ldp	x26, x25, [sp, #96]
   3da18:	ldp	x28, x27, [sp, #80]
   3da1c:	ldp	x29, x30, [sp, #64]
   3da20:	add	sp, sp, #0xa0
   3da24:	ret
   3da28:	cbz	x2, 3db14 <PyInit__decimal@@Base+0x37060>
   3da2c:	cbz	x3, 3db14 <PyInit__decimal@@Base+0x37060>
   3da30:	cmp	x3, #0x3
   3da34:	cset	w15, hi  // hi = pmore
   3da38:	cmp	x2, #0x1
   3da3c:	and	x9, x3, #0xfffffffffffffffc
   3da40:	cset	w16, eq  // eq = none
   3da44:	mov	x8, xzr
   3da48:	add	x10, x0, #0x10
   3da4c:	lsl	x11, x2, #5
   3da50:	add	x12, x1, #0x10
   3da54:	lsl	x13, x3, #3
   3da58:	mul	x14, x9, x2
   3da5c:	and	w15, w15, w16
   3da60:	lsl	x16, x2, #3
   3da64:	b	3da7c <PyInit__decimal@@Base+0x36fc8>
   3da68:	add	x8, x8, #0x1
   3da6c:	add	x10, x10, #0x8
   3da70:	cmp	x8, x2
   3da74:	add	x12, x12, x13
   3da78:	b.eq	3db14 <PyInit__decimal@@Base+0x37060>  // b.none
   3da7c:	mul	x17, x8, x3
   3da80:	cbz	w15, 3daac <PyInit__decimal@@Base+0x36ff8>
   3da84:	add	x18, x17, x3
   3da88:	add	x18, x1, x18, lsl #3
   3da8c:	add	x4, x0, x8, lsl #3
   3da90:	cmp	x4, x18
   3da94:	b.cs	3dad8 <PyInit__decimal@@Base+0x37024>  // b.hs, b.nlast
   3da98:	add	x4, x8, x3
   3da9c:	add	x18, x1, x17, lsl #3
   3daa0:	add	x4, x0, x4, lsl #3
   3daa4:	cmp	x18, x4
   3daa8:	b.cs	3dad8 <PyInit__decimal@@Base+0x37024>  // b.hs, b.nlast
   3daac:	mov	x4, xzr
   3dab0:	mov	x18, x8
   3dab4:	sub	x4, x3, x4
   3dab8:	add	x17, x1, x17, lsl #3
   3dabc:	add	x18, x0, x18, lsl #3
   3dac0:	ldr	x5, [x17], #8
   3dac4:	subs	x4, x4, #0x1
   3dac8:	str	x5, [x18]
   3dacc:	add	x18, x18, x16
   3dad0:	b.ne	3dac0 <PyInit__decimal@@Base+0x3700c>  // b.any
   3dad4:	b	3da68 <PyInit__decimal@@Base+0x36fb4>
   3dad8:	add	x17, x17, x9
   3dadc:	add	x18, x8, x14
   3dae0:	mov	x4, x9
   3dae4:	mov	x5, x12
   3dae8:	mov	x6, x10
   3daec:	ldp	q0, q1, [x5, #-16]
   3daf0:	subs	x4, x4, #0x4
   3daf4:	add	x5, x5, #0x20
   3daf8:	stp	q0, q1, [x6, #-16]
   3dafc:	add	x6, x6, x11
   3db00:	b.ne	3daec <PyInit__decimal@@Base+0x37038>  // b.any
   3db04:	cmp	x9, x3
   3db08:	mov	x4, x9
   3db0c:	b.eq	3da68 <PyInit__decimal@@Base+0x36fb4>  // b.none
   3db10:	b	3dab4 <PyInit__decimal@@Base+0x37000>
   3db14:	ret
   3db18:	stp	x29, x30, [sp, #-48]!
   3db1c:	stp	x22, x21, [sp, #16]
   3db20:	stp	x20, x19, [sp, #32]
   3db24:	mov	x29, sp
   3db28:	umulh	x8, x2, x1
   3db2c:	cmp	xzr, x8
   3db30:	b.ne	3dc04 <PyInit__decimal@@Base+0x37150>  // b.any
   3db34:	mov	x21, x2
   3db38:	mov	x19, x1
   3db3c:	mov	x20, x0
   3db40:	cmp	x2, x1
   3db44:	b.ne	3db58 <PyInit__decimal@@Base+0x370a4>  // b.any
   3db48:	mov	x0, x20
   3db4c:	mov	x1, x21
   3db50:	bl	3dc50 <PyInit__decimal@@Base+0x3719c>
   3db54:	b	3dbf0 <PyInit__decimal@@Base+0x3713c>
   3db58:	adds	x8, x19, x19
   3db5c:	b.cs	3dc04 <PyInit__decimal@@Base+0x37150>  // b.hs, b.nlast
   3db60:	cmp	x8, x21
   3db64:	mul	x22, x21, x19
   3db68:	b.ne	3dba8 <PyInit__decimal@@Base+0x370f4>  // b.any
   3db6c:	mov	x0, x20
   3db70:	mov	x1, x19
   3db74:	mov	x2, x21
   3db78:	mov	w3, wzr
   3db7c:	bl	3de54 <PyInit__decimal@@Base+0x373a0>
   3db80:	cbz	w0, 3dbf4 <PyInit__decimal@@Base+0x37140>
   3db84:	mov	x0, x20
   3db88:	mov	x1, x19
   3db8c:	bl	3dc50 <PyInit__decimal@@Base+0x3719c>
   3db90:	lsl	x8, x22, #2
   3db94:	and	x8, x8, #0xfffffffffffffff8
   3db98:	add	x0, x20, x8
   3db9c:	mov	x1, x19
   3dba0:	bl	3dc50 <PyInit__decimal@@Base+0x3719c>
   3dba4:	b	3dbf0 <PyInit__decimal@@Base+0x3713c>
   3dba8:	adds	x8, x21, x21
   3dbac:	b.cs	3dc04 <PyInit__decimal@@Base+0x37150>  // b.hs, b.nlast
   3dbb0:	cmp	x8, x19
   3dbb4:	b.ne	3dc4c <PyInit__decimal@@Base+0x37198>  // b.any
   3dbb8:	mov	x0, x20
   3dbbc:	mov	x1, x21
   3dbc0:	bl	3dc50 <PyInit__decimal@@Base+0x3719c>
   3dbc4:	lsl	x8, x22, #2
   3dbc8:	and	x8, x8, #0xfffffffffffffff8
   3dbcc:	add	x0, x20, x8
   3dbd0:	mov	x1, x21
   3dbd4:	bl	3dc50 <PyInit__decimal@@Base+0x3719c>
   3dbd8:	mov	w3, #0x1                   	// #1
   3dbdc:	mov	x0, x20
   3dbe0:	mov	x1, x21
   3dbe4:	mov	x2, x19
   3dbe8:	bl	3de54 <PyInit__decimal@@Base+0x373a0>
   3dbec:	cbz	w0, 3dbf4 <PyInit__decimal@@Base+0x37140>
   3dbf0:	mov	w0, #0x1                   	// #1
   3dbf4:	ldp	x20, x19, [sp, #32]
   3dbf8:	ldp	x22, x21, [sp, #16]
   3dbfc:	ldp	x29, x30, [sp], #48
   3dc00:	ret
   3dc04:	adrp	x19, 56000 <PyInit__decimal@@Base+0x4f54c>
   3dc08:	ldr	x19, [x19, #3904]
   3dc0c:	adrp	x1, 44000 <PyInit__decimal@@Base+0x3d54c>
   3dc10:	adrp	x2, 44000 <PyInit__decimal@@Base+0x3d54c>
   3dc14:	add	x1, x1, #0x9da
   3dc18:	ldr	x0, [x19]
   3dc1c:	add	x2, x2, #0x9e9
   3dc20:	mov	w3, #0x26c                 	// #620
   3dc24:	bl	69b0 <fprintf@plt>
   3dc28:	ldr	x3, [x19]
   3dc2c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x3e54c>
   3dc30:	add	x0, x0, #0xaf7
   3dc34:	mov	w1, #0x29                  	// #41
   3dc38:	mov	w2, #0x1                   	// #1
   3dc3c:	bl	6870 <fwrite@plt>
   3dc40:	ldr	x1, [x19]
   3dc44:	mov	w0, #0xa                   	// #10
   3dc48:	bl	64f0 <fputc@plt>
   3dc4c:	bl	6700 <abort@plt>
   3dc50:	stp	x29, x30, [sp, #-96]!
   3dc54:	stp	x28, x27, [sp, #16]
   3dc58:	stp	x26, x25, [sp, #32]
   3dc5c:	stp	x24, x23, [sp, #48]
   3dc60:	stp	x22, x21, [sp, #64]
   3dc64:	stp	x20, x19, [sp, #80]
   3dc68:	mov	x29, sp
   3dc6c:	sub	sp, sp, #0x40, lsl #12
   3dc70:	sub	sp, sp, #0x30
   3dc74:	mov	x28, x1
   3dc78:	mov	x27, x0
   3dc7c:	mov	x8, x1
   3dc80:	mov	x19, x8
   3dc84:	cmp	x8, #0x80
   3dc88:	lsr	x8, x8, #1
   3dc8c:	b.hi	3dc80 <PyInit__decimal@@Base+0x371cc>  // b.pmore
   3dc90:	cbz	x28, 3de30 <PyInit__decimal@@Base+0x3737c>
   3dc94:	lsl	x26, x28, #3
   3dc98:	add	x8, x26, #0x8
   3dc9c:	mul	x8, x8, x19
   3dca0:	mov	x25, xzr
   3dca4:	lsl	x22, x19, #3
   3dca8:	str	x8, [sp, #8]
   3dcac:	mul	x8, x26, x19
   3dcb0:	str	x8, [sp, #24]
   3dcb4:	b	3dcd0 <PyInit__decimal@@Base+0x3721c>
   3dcb8:	ldr	x25, [sp, #32]
   3dcbc:	ldp	x8, x27, [sp, #8]
   3dcc0:	add	x25, x25, x19
   3dcc4:	cmp	x25, x28
   3dcc8:	add	x27, x27, x8
   3dccc:	b.cs	3de30 <PyInit__decimal@@Base+0x3737c>  // b.hs, b.nlast
   3dcd0:	mov	x20, x27
   3dcd4:	str	x27, [sp, #16]
   3dcd8:	str	x25, [sp, #32]
   3dcdc:	cbnz	x19, 3dd18 <PyInit__decimal@@Base+0x37264>
   3dce0:	add	x0, sp, #0x20, lsl #12
   3dce4:	add	x0, x0, #0x28
   3dce8:	mov	x1, xzr
   3dcec:	bl	3e1a4 <PyInit__decimal@@Base+0x376f0>
   3dcf0:	ldr	x8, [sp, #32]
   3dcf4:	cmp	x8, x28
   3dcf8:	b.cc	3dce0 <PyInit__decimal@@Base+0x3722c>  // b.lo, b.ul, b.last
   3dcfc:	b	3dcb8 <PyInit__decimal@@Base+0x37204>
   3dd00:	ldr	x8, [sp, #24]
   3dd04:	add	x25, x25, x19
   3dd08:	add	x27, x27, x22
   3dd0c:	cmp	x25, x28
   3dd10:	add	x20, x20, x8
   3dd14:	b.cs	3dcb8 <PyInit__decimal@@Base+0x37204>  // b.hs, b.nlast
   3dd18:	add	x23, sp, #0x20, lsl #12
   3dd1c:	add	x23, x23, #0x28
   3dd20:	mov	x24, x27
   3dd24:	mov	x21, x19
   3dd28:	mov	x0, x23
   3dd2c:	mov	x1, x24
   3dd30:	mov	x2, x22
   3dd34:	bl	63c0 <memcpy@plt>
   3dd38:	subs	x21, x21, #0x1
   3dd3c:	add	x24, x24, x26
   3dd40:	add	x23, x23, x22
   3dd44:	b.ne	3dd28 <PyInit__decimal@@Base+0x37274>  // b.any
   3dd48:	add	x0, sp, #0x20, lsl #12
   3dd4c:	add	x0, x0, #0x28
   3dd50:	mov	x1, x19
   3dd54:	bl	3e1a4 <PyInit__decimal@@Base+0x376f0>
   3dd58:	ldr	x8, [sp, #32]
   3dd5c:	cmp	x8, x25
   3dd60:	b.ne	3dd98 <PyInit__decimal@@Base+0x372e4>  // b.any
   3dd64:	add	x23, sp, #0x20, lsl #12
   3dd68:	add	x23, x23, #0x28
   3dd6c:	mov	x24, x27
   3dd70:	mov	x21, x19
   3dd74:	mov	x0, x24
   3dd78:	mov	x1, x23
   3dd7c:	mov	x2, x22
   3dd80:	bl	63c0 <memcpy@plt>
   3dd84:	subs	x21, x21, #0x1
   3dd88:	add	x23, x23, x22
   3dd8c:	add	x24, x24, x26
   3dd90:	b.ne	3dd74 <PyInit__decimal@@Base+0x372c0>  // b.any
   3dd94:	b	3dd00 <PyInit__decimal@@Base+0x3724c>
   3dd98:	add	x23, sp, #0x28
   3dd9c:	mov	x24, x20
   3dda0:	mov	x21, x19
   3dda4:	mov	x0, x23
   3dda8:	mov	x1, x24
   3ddac:	mov	x2, x22
   3ddb0:	bl	63c0 <memcpy@plt>
   3ddb4:	subs	x21, x21, #0x1
   3ddb8:	add	x24, x24, x26
   3ddbc:	add	x23, x23, x22
   3ddc0:	b.ne	3dda4 <PyInit__decimal@@Base+0x372f0>  // b.any
   3ddc4:	add	x0, sp, #0x28
   3ddc8:	mov	x1, x19
   3ddcc:	bl	3e1a4 <PyInit__decimal@@Base+0x376f0>
   3ddd0:	add	x23, sp, #0x20, lsl #12
   3ddd4:	add	x23, x23, #0x28
   3ddd8:	mov	x24, x20
   3dddc:	mov	x21, x19
   3dde0:	mov	x0, x24
   3dde4:	mov	x1, x23
   3dde8:	mov	x2, x22
   3ddec:	bl	63c0 <memcpy@plt>
   3ddf0:	subs	x21, x21, #0x1
   3ddf4:	add	x23, x23, x22
   3ddf8:	add	x24, x24, x26
   3ddfc:	b.ne	3dde0 <PyInit__decimal@@Base+0x3732c>  // b.any
   3de00:	add	x23, sp, #0x28
   3de04:	mov	x24, x27
   3de08:	mov	x21, x19
   3de0c:	mov	x0, x24
   3de10:	mov	x1, x23
   3de14:	mov	x2, x22
   3de18:	bl	63c0 <memcpy@plt>
   3de1c:	subs	x21, x21, #0x1
   3de20:	add	x23, x23, x22
   3de24:	add	x24, x24, x26
   3de28:	b.ne	3de0c <PyInit__decimal@@Base+0x37358>  // b.any
   3de2c:	b	3dd00 <PyInit__decimal@@Base+0x3724c>
   3de30:	add	sp, sp, #0x40, lsl #12
   3de34:	add	sp, sp, #0x30
   3de38:	ldp	x20, x19, [sp, #80]
   3de3c:	ldp	x22, x21, [sp, #64]
   3de40:	ldp	x24, x23, [sp, #48]
   3de44:	ldp	x26, x25, [sp, #32]
   3de48:	ldp	x28, x27, [sp, #16]
   3de4c:	ldp	x29, x30, [sp], #96
   3de50:	ret
   3de54:	stp	x29, x30, [sp, #-96]!
   3de58:	stp	x28, x27, [sp, #16]
   3de5c:	stp	x26, x25, [sp, #32]
   3de60:	stp	x24, x23, [sp, #48]
   3de64:	stp	x22, x21, [sp, #64]
   3de68:	stp	x20, x19, [sp, #80]
   3de6c:	mov	x29, sp
   3de70:	sub	sp, sp, #0x10, lsl #12
   3de74:	sub	sp, sp, #0xa0
   3de78:	mov	x19, x2
   3de7c:	mov	x20, x1
   3de80:	mov	x21, x0
   3de84:	mov	x23, x1
   3de88:	cbz	w3, 3de98 <PyInit__decimal@@Base+0x373e4>
   3de8c:	cmp	w3, #0x1
   3de90:	b.ne	3e1a0 <PyInit__decimal@@Base+0x376ec>  // b.any
   3de94:	mov	w23, #0x2                   	// #2
   3de98:	lsr	x8, x20, #3
   3de9c:	add	x0, x8, #0x1
   3dea0:	mov	w1, #0x8                   	// #8
   3dea4:	bl	21ec4 <PyInit__decimal@@Base+0x1b410>
   3dea8:	cbz	x0, 3e17c <PyInit__decimal@@Base+0x376c8>
   3deac:	mov	x28, x0
   3deb0:	stp	x23, x19, [sp, #80]
   3deb4:	cbz	x20, 3e168 <PyInit__decimal@@Base+0x376b4>
   3deb8:	ldr	x8, [sp, #88]
   3debc:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   3dec0:	add	x11, x11, #0xaa0
   3dec4:	mov	w22, #0x8000                	// #32768
   3dec8:	lsr	x10, x8, #1
   3decc:	lsl	x9, x8, #1
   3ded0:	sub	x27, x8, #0x1
   3ded4:	stp	x9, x20, [sp, #16]
   3ded8:	mov	w9, #0x1                   	// #1
   3dedc:	lsl	x12, x10, #3
   3dee0:	str	x12, [sp, #8]
   3dee4:	stp	x8, x21, [sp, #32]
   3dee8:	str	x27, [sp, #144]
   3deec:	str	x10, [sp, #128]
   3def0:	b	3df1c <PyInit__decimal@@Base+0x37468>
   3def4:	ldp	x8, x20, [sp, #16]
   3def8:	ldr	x11, [sp, #32]
   3defc:	ldr	x9, [sp, #96]
   3df00:	add	x11, x11, x8
   3df04:	add	x9, x9, #0x2
   3df08:	str	x11, [sp, #32]
   3df0c:	adrp	x11, 44000 <PyInit__decimal@@Base+0x3d54c>
   3df10:	cmp	x9, x20
   3df14:	add	x11, x11, #0xaa0
   3df18:	b.hi	3e168 <PyInit__decimal@@Base+0x376b4>  // b.pmore
   3df1c:	lsr	x19, x9, #6
   3df20:	and	x8, x9, #0x3f
   3df24:	str	x9, [sp, #96]
   3df28:	ldr	x9, [x28, x19, lsl #3]
   3df2c:	ldr	x23, [x11, x8, lsl #3]
   3df30:	tst	x23, x9
   3df34:	b.ne	3def4 <PyInit__decimal@@Base+0x37440>  // b.any
   3df38:	cbz	x10, 3def4 <PyInit__decimal@@Base+0x37440>
   3df3c:	ldr	x20, [sp, #96]
   3df40:	ldr	x8, [sp, #80]
   3df44:	mov	x2, x27
   3df48:	mov	x3, xzr
   3df4c:	mul	x24, x20, x8
   3df50:	umulh	x1, x20, x8
   3df54:	mov	x0, x24
   3df58:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   3df5c:	ldr	x9, [sp, #88]
   3df60:	msub	x10, x27, x0, x24
   3df64:	cmp	x10, x20
   3df68:	str	x10, [sp, #72]
   3df6c:	mul	x8, x10, x9
   3df70:	lsr	x11, x8, #1
   3df74:	lsl	x8, x19, #3
   3df78:	str	x8, [sp, #120]
   3df7c:	b.ne	3e020 <PyInit__decimal@@Base+0x3756c>  // b.any
   3df80:	ldr	x9, [sp, #32]
   3df84:	ldr	x19, [sp, #8]
   3df88:	add	x24, sp, #0x8, lsl #12
   3df8c:	mov	x8, xzr
   3df90:	lsl	x10, x9, #2
   3df94:	and	x10, x10, #0xfffffffffffffff8
   3df98:	add	x10, x21, x10
   3df9c:	str	x10, [sp, #112]
   3dfa0:	ldr	x10, [sp, #128]
   3dfa4:	add	x9, x21, x11, lsl #3
   3dfa8:	str	x9, [sp, #136]
   3dfac:	add	x9, sp, #0x98
   3dfb0:	add	x24, x24, #0x98
   3dfb4:	add	x20, x8, #0x1, lsl #12
   3dfb8:	lsl	x26, x8, #3
   3dfbc:	ldr	x8, [sp, #112]
   3dfc0:	cmp	x20, x10
   3dfc4:	csel	x25, x22, x19, cc  // cc = lo, ul, last
   3dfc8:	mov	x0, x24
   3dfcc:	add	x1, x8, x26
   3dfd0:	mov	x2, x25
   3dfd4:	mov	x27, x9
   3dfd8:	bl	63c0 <memcpy@plt>
   3dfdc:	ldr	x8, [sp, #136]
   3dfe0:	mov	x1, x24
   3dfe4:	mov	x2, x25
   3dfe8:	add	x0, x8, x26
   3dfec:	bl	63c0 <memcpy@plt>
   3dff0:	ldp	x9, x10, [sp, #120]
   3dff4:	sub	x19, x19, #0x8, lsl #12
   3dff8:	ldr	x8, [x28, x9]
   3dffc:	cmp	x20, x10
   3e000:	orr	x8, x8, x23
   3e004:	str	x8, [x28, x9]
   3e008:	mov	x9, x24
   3e00c:	mov	x24, x27
   3e010:	ldr	x27, [sp, #144]
   3e014:	mov	x8, x20
   3e018:	b.cc	3dfb4 <PyInit__decimal@@Base+0x37500>  // b.lo, b.ul, b.last
   3e01c:	b	3def4 <PyInit__decimal@@Base+0x37440>
   3e020:	mul	x8, x20, x9
   3e024:	ldr	x10, [sp, #128]
   3e028:	lsl	x8, x8, #2
   3e02c:	and	x8, x8, #0xfffffffffffffff8
   3e030:	add	x25, sp, #0x8, lsl #12
   3e034:	stp	x11, x23, [sp, #56]
   3e038:	mov	x11, xzr
   3e03c:	add	x24, sp, #0x98
   3e040:	add	x8, x21, x8
   3e044:	add	x25, x25, #0x98
   3e048:	str	x8, [sp, #48]
   3e04c:	ldr	x9, [sp, #48]
   3e050:	add	x12, x11, #0x1, lsl #12
   3e054:	sub	x8, x10, x11
   3e058:	lsl	x8, x8, #3
   3e05c:	cmp	x12, x10
   3e060:	lsl	x19, x11, #3
   3e064:	csel	x26, x22, x8, cc  // cc = lo, ul, last
   3e068:	add	x1, x9, x19
   3e06c:	mov	x0, x25
   3e070:	mov	x2, x26
   3e074:	stp	x12, x11, [sp, #104]
   3e078:	bl	63c0 <memcpy@plt>
   3e07c:	add	x8, x21, x19
   3e080:	str	x8, [sp, #136]
   3e084:	ldr	x8, [sp, #56]
   3e088:	ldp	x19, x23, [sp, #72]
   3e08c:	ldp	x21, x20, [sp, #88]
   3e090:	adrp	x22, 44000 <PyInit__decimal@@Base+0x3d54c>
   3e094:	mov	x0, x25
   3e098:	mov	x25, x24
   3e09c:	add	x22, x22, #0xaa0
   3e0a0:	ldr	x9, [sp, #136]
   3e0a4:	mov	x24, x25
   3e0a8:	mov	x25, x0
   3e0ac:	mov	x0, x24
   3e0b0:	add	x27, x9, x8, lsl #3
   3e0b4:	mov	x1, x27
   3e0b8:	mov	x2, x26
   3e0bc:	bl	63c0 <memcpy@plt>
   3e0c0:	mov	x0, x27
   3e0c4:	mov	x1, x25
   3e0c8:	mov	x2, x26
   3e0cc:	bl	63c0 <memcpy@plt>
   3e0d0:	lsr	x9, x19, #3
   3e0d4:	and	x8, x19, #0x3f
   3e0d8:	and	x9, x9, #0x1ffffffffffffff8
   3e0dc:	ldr	x8, [x22, x8, lsl #3]
   3e0e0:	ldr	x10, [x28, x9]
   3e0e4:	ldr	x2, [sp, #144]
   3e0e8:	mul	x27, x19, x23
   3e0ec:	umulh	x1, x19, x23
   3e0f0:	orr	x8, x10, x8
   3e0f4:	mov	x0, x27
   3e0f8:	mov	x3, xzr
   3e0fc:	str	x8, [x28, x9]
   3e100:	bl	3e290 <PyInit__decimal@@Base+0x377dc>
   3e104:	ldr	x8, [sp, #144]
   3e108:	msub	x19, x8, x0, x27
   3e10c:	ldr	x27, [sp, #144]
   3e110:	mul	x8, x19, x21
   3e114:	cmp	x19, x20
   3e118:	lsr	x8, x8, #1
   3e11c:	mov	x0, x24
   3e120:	b.ne	3e0a0 <PyInit__decimal@@Base+0x375ec>  // b.any
   3e124:	ldr	x21, [sp, #40]
   3e128:	ldr	x9, [sp, #112]
   3e12c:	mov	x1, x24
   3e130:	mov	x2, x26
   3e134:	add	x8, x21, x8, lsl #3
   3e138:	add	x0, x8, x9, lsl #3
   3e13c:	bl	63c0 <memcpy@plt>
   3e140:	ldp	x9, x10, [sp, #120]
   3e144:	ldr	x23, [sp, #64]
   3e148:	ldr	x11, [sp, #104]
   3e14c:	mov	w22, #0x8000                	// #32768
   3e150:	ldr	x8, [x28, x9]
   3e154:	cmp	x11, x10
   3e158:	orr	x8, x8, x23
   3e15c:	str	x8, [x28, x9]
   3e160:	b.cc	3e04c <PyInit__decimal@@Base+0x37598>  // b.lo, b.ul, b.last
   3e164:	b	3def4 <PyInit__decimal@@Base+0x37440>
   3e168:	adrp	x8, 59000 <PyInit__decimal@@Base+0x5254c>
   3e16c:	ldr	x8, [x8, #1376]
   3e170:	mov	x0, x28
   3e174:	blr	x8
   3e178:	mov	w0, #0x1                   	// #1
   3e17c:	add	sp, sp, #0x10, lsl #12
   3e180:	add	sp, sp, #0xa0
   3e184:	ldp	x20, x19, [sp, #80]
   3e188:	ldp	x22, x21, [sp, #64]
   3e18c:	ldp	x24, x23, [sp, #48]
   3e190:	ldp	x26, x25, [sp, #32]
   3e194:	ldp	x28, x27, [sp, #16]
   3e198:	ldp	x29, x30, [sp], #96
   3e19c:	ret
   3e1a0:	bl	6700 <abort@plt>
   3e1a4:	cbz	x1, 3e28c <PyInit__decimal@@Base+0x377d8>
   3e1a8:	lsl	x9, x1, #3
   3e1ac:	add	x13, x9, x0
   3e1b0:	mov	x10, xzr
   3e1b4:	sub	x8, x1, #0x1
   3e1b8:	lsl	x11, x1, #5
   3e1bc:	add	x12, x9, #0x8
   3e1c0:	add	x13, x13, #0x10
   3e1c4:	add	x14, x0, #0x18
   3e1c8:	b	3e1e0 <PyInit__decimal@@Base+0x3772c>
   3e1cc:	sub	x8, x8, #0x1
   3e1d0:	add	x13, x13, x12
   3e1d4:	cmp	x10, x1
   3e1d8:	add	x14, x14, x12
   3e1dc:	b.eq	3e28c <PyInit__decimal@@Base+0x377d8>  // b.none
   3e1e0:	mov	x16, x10
   3e1e4:	add	x10, x10, #0x1
   3e1e8:	cmp	x10, x1
   3e1ec:	b.cs	3e1cc <PyInit__decimal@@Base+0x37718>  // b.hs, b.nlast
   3e1f0:	mvn	x15, x16
   3e1f4:	add	x18, x15, x1
   3e1f8:	madd	x15, x10, x1, x16
   3e1fc:	cmp	x18, #0x4
   3e200:	madd	x16, x16, x1, x10
   3e204:	b.cc	3e25c <PyInit__decimal@@Base+0x377a8>  // b.lo, b.ul, b.last
   3e208:	cmp	x1, #0x1
   3e20c:	mov	x17, x10
   3e210:	b.ne	3e260 <PyInit__decimal@@Base+0x377ac>  // b.any
   3e214:	and	x3, x18, #0xfffffffffffffffc
   3e218:	and	x2, x8, #0xfffffffffffffffc
   3e21c:	add	x17, x10, x3
   3e220:	add	x16, x16, x3
   3e224:	madd	x15, x3, x1, x15
   3e228:	mov	x4, x14
   3e22c:	mov	x5, x13
   3e230:	ldp	q0, q3, [x4, #-16]
   3e234:	ldp	q1, q2, [x5, #-16]
   3e238:	subs	x2, x2, #0x4
   3e23c:	stp	q1, q2, [x4, #-16]
   3e240:	stp	q0, q3, [x5, #-16]
   3e244:	add	x5, x5, x11
   3e248:	add	x4, x4, #0x20
   3e24c:	b.ne	3e230 <PyInit__decimal@@Base+0x3777c>  // b.any
   3e250:	cmp	x18, x3
   3e254:	b.eq	3e1cc <PyInit__decimal@@Base+0x37718>  // b.none
   3e258:	b	3e260 <PyInit__decimal@@Base+0x377ac>
   3e25c:	mov	x17, x10
   3e260:	sub	x17, x1, x17
   3e264:	add	x16, x0, x16, lsl #3
   3e268:	add	x15, x0, x15, lsl #3
   3e26c:	ldr	x18, [x15]
   3e270:	ldr	x2, [x16]
   3e274:	subs	x17, x17, #0x1
   3e278:	str	x18, [x16], #8
   3e27c:	str	x2, [x15]
   3e280:	add	x15, x15, x9
   3e284:	b.ne	3e26c <PyInit__decimal@@Base+0x377b8>  // b.any
   3e288:	b	3e1cc <PyInit__decimal@@Base+0x37718>
   3e28c:	ret
   3e290:	mov	x4, x2
   3e294:	mov	x5, x0
   3e298:	mov	x6, x1
   3e29c:	cbnz	x3, 3e338 <PyInit__decimal@@Base+0x37884>
   3e2a0:	cmp	x2, x1
   3e2a4:	b.ls	3e44c <PyInit__decimal@@Base+0x37998>  // b.plast
   3e2a8:	clz	x0, x2
   3e2ac:	cbz	x0, 3e2c8 <PyInit__decimal@@Base+0x37814>
   3e2b0:	neg	w1, w0
   3e2b4:	lsl	x2, x6, x0
   3e2b8:	lsl	x4, x4, x0
   3e2bc:	lsr	x6, x5, x1
   3e2c0:	orr	x6, x6, x2
   3e2c4:	lsl	x5, x5, x0
   3e2c8:	lsr	x3, x4, #32
   3e2cc:	and	x7, x4, #0xffffffff
   3e2d0:	udiv	x2, x6, x3
   3e2d4:	mov	x0, x2
   3e2d8:	msub	x2, x2, x3, x6
   3e2dc:	mul	x6, x7, x0
   3e2e0:	extr	x1, x2, x5, #32
   3e2e4:	cmp	x6, x1
   3e2e8:	b.ls	3e2fc <PyInit__decimal@@Base+0x37848>  // b.plast
   3e2ec:	adds	x1, x4, x1
   3e2f0:	ccmp	x6, x1, #0x0, cc  // cc = lo, ul, last
   3e2f4:	b.hi	3e5bc <PyInit__decimal@@Base+0x37b08>  // b.pmore
   3e2f8:	sub	x0, x0, #0x1
   3e2fc:	sub	x1, x1, x6
   3e300:	udiv	x6, x1, x3
   3e304:	msub	x1, x6, x3, x1
   3e308:	mov	x2, x6
   3e30c:	mul	x7, x7, x6
   3e310:	bfi	x5, x1, #32, #32
   3e314:	cmp	x7, x5
   3e318:	b.ls	3e32c <PyInit__decimal@@Base+0x37878>  // b.plast
   3e31c:	adds	x5, x4, x5
   3e320:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   3e324:	cinc	x2, x6, ls  // ls = plast
   3e328:	sub	x2, x2, #0x2
   3e32c:	orr	x0, x2, x0, lsl #32
   3e330:	mov	x1, #0x0                   	// #0
   3e334:	ret
   3e338:	cmp	x3, x1
   3e33c:	b.ls	3e34c <PyInit__decimal@@Base+0x37898>  // b.plast
   3e340:	mov	x1, #0x0                   	// #0
   3e344:	mov	x0, #0x0                   	// #0
   3e348:	ret
   3e34c:	clz	x7, x3
   3e350:	cbz	x7, 3e564 <PyInit__decimal@@Base+0x37ab0>
   3e354:	mov	x4, #0x40                  	// #64
   3e358:	sub	x4, x4, x7
   3e35c:	lsl	x3, x3, x7
   3e360:	lsr	x5, x2, x4
   3e364:	orr	x3, x5, x3
   3e368:	lsr	x6, x1, x4
   3e36c:	and	x8, x3, #0xffffffff
   3e370:	lsr	x10, x3, #32
   3e374:	lsr	x4, x0, x4
   3e378:	lsl	x1, x1, x7
   3e37c:	orr	x1, x4, x1
   3e380:	lsl	x2, x2, x7
   3e384:	udiv	x5, x6, x10
   3e388:	mov	x4, x5
   3e38c:	msub	x5, x5, x10, x6
   3e390:	mul	x6, x8, x4
   3e394:	extr	x5, x5, x1, #32
   3e398:	cmp	x6, x5
   3e39c:	b.ls	3e3b0 <PyInit__decimal@@Base+0x378fc>  // b.plast
   3e3a0:	adds	x5, x3, x5
   3e3a4:	ccmp	x6, x5, #0x0, cc  // cc = lo, ul, last
   3e3a8:	b.hi	3e5a4 <PyInit__decimal@@Base+0x37af0>  // b.pmore
   3e3ac:	sub	x4, x4, #0x1
   3e3b0:	sub	x6, x5, x6
   3e3b4:	udiv	x9, x6, x10
   3e3b8:	msub	x6, x9, x10, x6
   3e3bc:	mov	x5, x9
   3e3c0:	mul	x8, x8, x9
   3e3c4:	bfi	x1, x6, #32, #32
   3e3c8:	cmp	x8, x1
   3e3cc:	b.ls	3e3e0 <PyInit__decimal@@Base+0x3792c>  // b.plast
   3e3d0:	adds	x1, x3, x1
   3e3d4:	ccmp	x8, x1, #0x0, cc  // cc = lo, ul, last
   3e3d8:	b.hi	3e58c <PyInit__decimal@@Base+0x37ad8>  // b.pmore
   3e3dc:	sub	x5, x9, #0x1
   3e3e0:	orr	x4, x5, x4, lsl #32
   3e3e4:	and	x9, x2, #0xffffffff
   3e3e8:	mov	w5, w5
   3e3ec:	lsr	x2, x2, #32
   3e3f0:	lsr	x6, x4, #32
   3e3f4:	sub	x1, x1, x8
   3e3f8:	mov	x10, #0x100000000           	// #4294967296
   3e3fc:	mul	x11, x5, x9
   3e400:	mul	x8, x6, x9
   3e404:	madd	x5, x5, x2, x8
   3e408:	mul	x2, x6, x2
   3e40c:	add	x3, x5, x11, lsr #32
   3e410:	add	x5, x2, x10
   3e414:	cmp	x8, x3
   3e418:	csel	x2, x5, x2, hi  // hi = pmore
   3e41c:	add	x2, x2, x3, lsr #32
   3e420:	cmp	x1, x2
   3e424:	b.cc	3e440 <PyInit__decimal@@Base+0x3798c>  // b.lo, b.ul, b.last
   3e428:	and	x11, x11, #0xffffffff
   3e42c:	lsl	x0, x0, x7
   3e430:	add	x3, x11, x3, lsl #32
   3e434:	cmp	x0, x3
   3e438:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   3e43c:	b.ne	3e574 <PyInit__decimal@@Base+0x37ac0>  // b.any
   3e440:	sub	x0, x4, #0x1
   3e444:	mov	x1, #0x0                   	// #0
   3e448:	ret
   3e44c:	cbnz	x2, 3e458 <PyInit__decimal@@Base+0x379a4>
   3e450:	mov	x2, #0x1                   	// #1
   3e454:	udiv	x4, x2, x4
   3e458:	clz	x8, x4
   3e45c:	cbnz	x8, 3e4d4 <PyInit__decimal@@Base+0x37a20>
   3e460:	lsr	x6, x4, #32
   3e464:	and	x7, x4, #0xffffffff
   3e468:	sub	x2, x1, x4
   3e46c:	mov	x1, #0x1                   	// #1
   3e470:	udiv	x3, x2, x6
   3e474:	mov	x0, x3
   3e478:	msub	x3, x3, x6, x2
   3e47c:	mul	x8, x0, x7
   3e480:	extr	x2, x3, x5, #32
   3e484:	cmp	x8, x2
   3e488:	b.ls	3e49c <PyInit__decimal@@Base+0x379e8>  // b.plast
   3e48c:	adds	x2, x4, x2
   3e490:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   3e494:	b.hi	3e5b0 <PyInit__decimal@@Base+0x37afc>  // b.pmore
   3e498:	sub	x0, x0, #0x1
   3e49c:	sub	x2, x2, x8
   3e4a0:	udiv	x8, x2, x6
   3e4a4:	msub	x2, x8, x6, x2
   3e4a8:	mov	x3, x8
   3e4ac:	mul	x7, x8, x7
   3e4b0:	bfi	x5, x2, #32, #32
   3e4b4:	cmp	x7, x5
   3e4b8:	b.ls	3e4cc <PyInit__decimal@@Base+0x37a18>  // b.plast
   3e4bc:	adds	x4, x4, x5
   3e4c0:	ccmp	x7, x4, #0x0, cc  // cc = lo, ul, last
   3e4c4:	cinc	x3, x8, ls  // ls = plast
   3e4c8:	sub	x3, x3, #0x2
   3e4cc:	orr	x0, x3, x0, lsl #32
   3e4d0:	ret
   3e4d4:	lsl	x4, x4, x8
   3e4d8:	mov	x3, #0x40                  	// #64
   3e4dc:	sub	x3, x3, x8
   3e4e0:	lsr	x6, x4, #32
   3e4e4:	lsl	x2, x1, x8
   3e4e8:	and	x7, x4, #0xffffffff
   3e4ec:	lsr	x1, x1, x3
   3e4f0:	lsr	x3, x0, x3
   3e4f4:	orr	x3, x3, x2
   3e4f8:	udiv	x2, x1, x6
   3e4fc:	lsl	x5, x0, x8
   3e500:	msub	x1, x2, x6, x1
   3e504:	mov	x0, x2
   3e508:	mul	x2, x7, x2
   3e50c:	extr	x1, x1, x3, #32
   3e510:	cmp	x2, x1
   3e514:	b.ls	3e528 <PyInit__decimal@@Base+0x37a74>  // b.plast
   3e518:	adds	x1, x4, x1
   3e51c:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   3e520:	b.hi	3e580 <PyInit__decimal@@Base+0x37acc>  // b.pmore
   3e524:	sub	x0, x0, #0x1
   3e528:	sub	x1, x1, x2
   3e52c:	udiv	x2, x1, x6
   3e530:	msub	x1, x2, x6, x1
   3e534:	mov	x8, x2
   3e538:	mul	x2, x7, x2
   3e53c:	bfi	x3, x1, #32, #32
   3e540:	cmp	x2, x3
   3e544:	b.ls	3e558 <PyInit__decimal@@Base+0x37aa4>  // b.plast
   3e548:	adds	x3, x4, x3
   3e54c:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   3e550:	b.hi	3e598 <PyInit__decimal@@Base+0x37ae4>  // b.pmore
   3e554:	sub	x8, x8, #0x1
   3e558:	sub	x2, x3, x2
   3e55c:	orr	x1, x8, x0, lsl #32
   3e560:	b	3e470 <PyInit__decimal@@Base+0x379bc>
   3e564:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   3e568:	mov	x1, #0x0                   	// #0
   3e56c:	cset	x0, ls  // ls = plast
   3e570:	ret
   3e574:	mov	x0, x4
   3e578:	mov	x1, #0x0                   	// #0
   3e57c:	ret
   3e580:	sub	x0, x0, #0x2
   3e584:	add	x1, x1, x4
   3e588:	b	3e528 <PyInit__decimal@@Base+0x37a74>
   3e58c:	sub	x5, x9, #0x2
   3e590:	add	x1, x1, x3
   3e594:	b	3e3e0 <PyInit__decimal@@Base+0x3792c>
   3e598:	sub	x8, x8, #0x2
   3e59c:	add	x3, x3, x4
   3e5a0:	b	3e558 <PyInit__decimal@@Base+0x37aa4>
   3e5a4:	sub	x4, x4, #0x2
   3e5a8:	add	x5, x5, x3
   3e5ac:	b	3e3b0 <PyInit__decimal@@Base+0x378fc>
   3e5b0:	sub	x0, x0, #0x2
   3e5b4:	add	x2, x2, x4
   3e5b8:	b	3e49c <PyInit__decimal@@Base+0x379e8>
   3e5bc:	sub	x0, x0, #0x2
   3e5c0:	add	x1, x1, x4
   3e5c4:	b	3e2fc <PyInit__decimal@@Base+0x37848>

Disassembly of section .fini:

000000000003e5c8 <.fini>:
   3e5c8:	stp	x29, x30, [sp, #-16]!
   3e5cc:	mov	x29, sp
   3e5d0:	ldp	x29, x30, [sp], #16
   3e5d4:	ret
