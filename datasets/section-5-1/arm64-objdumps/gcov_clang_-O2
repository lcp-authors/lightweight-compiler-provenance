
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402920 <.init>:
  402920:	stp	x29, x30, [sp, #-16]!
  402924:	mov	x29, sp
  402928:	bl	403240 <feof@plt+0x160>
  40292c:	ldp	x29, x30, [sp], #16
  402930:	ret

Disassembly of section .plt:

0000000000402940 <_Unwind_Backtrace@plt-0x20>:
  402940:	stp	x16, x30, [sp, #-16]!
  402944:	adrp	x16, 489000 <_obstack_memory_used@@Base+0x27838>
  402948:	ldr	x17, [x16, #4088]
  40294c:	add	x16, x16, #0xff8
  402950:	br	x17
  402954:	nop
  402958:	nop
  40295c:	nop

0000000000402960 <_Unwind_Backtrace@plt>:
  402960:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402964:	ldr	x17, [x16]
  402968:	add	x16, x16, #0x0
  40296c:	br	x17

0000000000402970 <_Znam@plt>:
  402970:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402974:	ldr	x17, [x16, #8]
  402978:	add	x16, x16, #0x8
  40297c:	br	x17

0000000000402980 <__fxstat@plt>:
  402980:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402984:	ldr	x17, [x16, #16]
  402988:	add	x16, x16, #0x10
  40298c:	br	x17

0000000000402990 <_Unwind_GetIPInfo@plt>:
  402990:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402994:	ldr	x17, [x16, #24]
  402998:	add	x16, x16, #0x18
  40299c:	br	x17

00000000004029a0 <fputs@plt>:
  4029a0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4029a4:	ldr	x17, [x16, #32]
  4029a8:	add	x16, x16, #0x20
  4029ac:	br	x17

00000000004029b0 <iconv_close@plt>:
  4029b0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4029b4:	ldr	x17, [x16, #40]
  4029b8:	add	x16, x16, #0x28
  4029bc:	br	x17

00000000004029c0 <memcpy@plt>:
  4029c0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4029c4:	ldr	x17, [x16, #48]
  4029c8:	add	x16, x16, #0x30
  4029cc:	br	x17

00000000004029d0 <fread@plt>:
  4029d0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4029d4:	ldr	x17, [x16, #56]
  4029d8:	add	x16, x16, #0x38
  4029dc:	br	x17

00000000004029e0 <strstr@plt>:
  4029e0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4029e4:	ldr	x17, [x16, #64]
  4029e8:	add	x16, x16, #0x40
  4029ec:	br	x17

00000000004029f0 <textdomain@plt>:
  4029f0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4029f4:	ldr	x17, [x16, #72]
  4029f8:	add	x16, x16, #0x48
  4029fc:	br	x17

0000000000402a00 <readlink@plt>:
  402a00:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a04:	ldr	x17, [x16, #80]
  402a08:	add	x16, x16, #0x50
  402a0c:	br	x17

0000000000402a10 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
  402a10:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a14:	ldr	x17, [x16, #88]
  402a18:	add	x16, x16, #0x58
  402a1c:	br	x17

0000000000402a20 <bindtextdomain@plt>:
  402a20:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a24:	ldr	x17, [x16, #96]
  402a28:	add	x16, x16, #0x60
  402a2c:	br	x17

0000000000402a30 <calloc@plt>:
  402a30:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a34:	ldr	x17, [x16, #104]
  402a38:	add	x16, x16, #0x68
  402a3c:	br	x17

0000000000402a40 <ungetc@plt>:
  402a40:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a44:	ldr	x17, [x16, #112]
  402a48:	add	x16, x16, #0x70
  402a4c:	br	x17

0000000000402a50 <strlen@plt>:
  402a50:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a54:	ldr	x17, [x16, #120]
  402a58:	add	x16, x16, #0x78
  402a5c:	br	x17

0000000000402a60 <gmtime@plt>:
  402a60:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a64:	ldr	x17, [x16, #128]
  402a68:	add	x16, x16, #0x80
  402a6c:	br	x17

0000000000402a70 <fprintf@plt>:
  402a70:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a74:	ldr	x17, [x16, #136]
  402a78:	add	x16, x16, #0x88
  402a7c:	br	x17

0000000000402a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
  402a80:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a84:	ldr	x17, [x16, #144]
  402a88:	add	x16, x16, #0x90
  402a8c:	br	x17

0000000000402a90 <ftell@plt>:
  402a90:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402a94:	ldr	x17, [x16, #152]
  402a98:	add	x16, x16, #0x98
  402a9c:	br	x17

0000000000402aa0 <_ZSt17__throw_bad_allocv@plt>:
  402aa0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402aa4:	ldr	x17, [x16, #160]
  402aa8:	add	x16, x16, #0xa0
  402aac:	br	x17

0000000000402ab0 <ngettext@plt>:
  402ab0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ab4:	ldr	x17, [x16, #168]
  402ab8:	add	x16, x16, #0xa8
  402abc:	br	x17

0000000000402ac0 <open@plt>:
  402ac0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ac4:	ldr	x17, [x16, #176]
  402ac8:	add	x16, x16, #0xb0
  402acc:	br	x17

0000000000402ad0 <__overflow@plt>:
  402ad0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ad4:	ldr	x17, [x16, #184]
  402ad8:	add	x16, x16, #0xb8
  402adc:	br	x17

0000000000402ae0 <fclose@plt>:
  402ae0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ae4:	ldr	x17, [x16, #192]
  402ae8:	add	x16, x16, #0xc0
  402aec:	br	x17

0000000000402af0 <strtol@plt>:
  402af0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402af4:	ldr	x17, [x16, #200]
  402af8:	add	x16, x16, #0xc8
  402afc:	br	x17

0000000000402b00 <_ZSt20__throw_length_errorPKc@plt>:
  402b00:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b04:	ldr	x17, [x16, #208]
  402b08:	add	x16, x16, #0xd0
  402b0c:	br	x17

0000000000402b10 <iconv_open@plt>:
  402b10:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b14:	ldr	x17, [x16, #216]
  402b18:	add	x16, x16, #0xd8
  402b1c:	br	x17

0000000000402b20 <free@plt>:
  402b20:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b24:	ldr	x17, [x16, #224]
  402b28:	add	x16, x16, #0xe0
  402b2c:	br	x17

0000000000402b30 <fread_unlocked@plt>:
  402b30:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b34:	ldr	x17, [x16, #232]
  402b38:	add	x16, x16, #0xe8
  402b3c:	br	x17

0000000000402b40 <memset@plt>:
  402b40:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b44:	ldr	x17, [x16, #240]
  402b48:	add	x16, x16, #0xf0
  402b4c:	br	x17

0000000000402b50 <fputs_unlocked@plt>:
  402b50:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b54:	ldr	x17, [x16, #248]
  402b58:	add	x16, x16, #0xf8
  402b5c:	br	x17

0000000000402b60 <strchr@plt>:
  402b60:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b64:	ldr	x17, [x16, #256]
  402b68:	add	x16, x16, #0x100
  402b6c:	br	x17

0000000000402b70 <strdup@plt>:
  402b70:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b74:	ldr	x17, [x16, #264]
  402b78:	add	x16, x16, #0x108
  402b7c:	br	x17

0000000000402b80 <isatty@plt>:
  402b80:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b84:	ldr	x17, [x16, #272]
  402b88:	add	x16, x16, #0x110
  402b8c:	br	x17

0000000000402b90 <qsort@plt>:
  402b90:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402b94:	ldr	x17, [x16, #280]
  402b98:	add	x16, x16, #0x118
  402b9c:	br	x17

0000000000402ba0 <realloc@plt>:
  402ba0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ba4:	ldr	x17, [x16, #288]
  402ba8:	add	x16, x16, #0x120
  402bac:	br	x17

0000000000402bb0 <__cxa_guard_release@plt>:
  402bb0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402bb4:	ldr	x17, [x16, #296]
  402bb8:	add	x16, x16, #0x128
  402bbc:	br	x17

0000000000402bc0 <freopen@plt>:
  402bc0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402bc4:	ldr	x17, [x16, #304]
  402bc8:	add	x16, x16, #0x130
  402bcc:	br	x17

0000000000402bd0 <read@plt>:
  402bd0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402bd4:	ldr	x17, [x16, #312]
  402bd8:	add	x16, x16, #0x138
  402bdc:	br	x17

0000000000402be0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
  402be0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402be4:	ldr	x17, [x16, #320]
  402be8:	add	x16, x16, #0x140
  402bec:	br	x17

0000000000402bf0 <strerror@plt>:
  402bf0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402bf4:	ldr	x17, [x16, #328]
  402bf8:	add	x16, x16, #0x148
  402bfc:	br	x17

0000000000402c00 <strcpy@plt>:
  402c00:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c04:	ldr	x17, [x16, #336]
  402c08:	add	x16, x16, #0x150
  402c0c:	br	x17

0000000000402c10 <_ZSt19__throw_logic_errorPKc@plt>:
  402c10:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c14:	ldr	x17, [x16, #344]
  402c18:	add	x16, x16, #0x158
  402c1c:	br	x17

0000000000402c20 <closedir@plt>:
  402c20:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c24:	ldr	x17, [x16, #352]
  402c28:	add	x16, x16, #0x160
  402c2c:	br	x17

0000000000402c30 <sprintf@plt>:
  402c30:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c34:	ldr	x17, [x16, #360]
  402c38:	add	x16, x16, #0x168
  402c3c:	br	x17

0000000000402c40 <getopt_long@plt>:
  402c40:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c44:	ldr	x17, [x16, #368]
  402c48:	add	x16, x16, #0x170
  402c4c:	br	x17

0000000000402c50 <ioctl@plt>:
  402c50:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c54:	ldr	x17, [x16, #376]
  402c58:	add	x16, x16, #0x178
  402c5c:	br	x17

0000000000402c60 <strcspn@plt>:
  402c60:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c64:	ldr	x17, [x16, #384]
  402c68:	add	x16, x16, #0x180
  402c6c:	br	x17

0000000000402c70 <unlink@plt>:
  402c70:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c74:	ldr	x17, [x16, #392]
  402c78:	add	x16, x16, #0x188
  402c7c:	br	x17

0000000000402c80 <putchar@plt>:
  402c80:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c84:	ldr	x17, [x16, #400]
  402c88:	add	x16, x16, #0x190
  402c8c:	br	x17

0000000000402c90 <localtime@plt>:
  402c90:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402c94:	ldr	x17, [x16, #408]
  402c98:	add	x16, x16, #0x198
  402c9c:	br	x17

0000000000402ca0 <__libc_start_main@plt>:
  402ca0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ca4:	ldr	x17, [x16, #416]
  402ca8:	add	x16, x16, #0x1a0
  402cac:	br	x17

0000000000402cb0 <dgettext@plt>:
  402cb0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402cb4:	ldr	x17, [x16, #424]
  402cb8:	add	x16, x16, #0x1a8
  402cbc:	br	x17

0000000000402cc0 <dl_iterate_phdr@plt>:
  402cc0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402cc4:	ldr	x17, [x16, #432]
  402cc8:	add	x16, x16, #0x1b0
  402ccc:	br	x17

0000000000402cd0 <gettext@plt>:
  402cd0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402cd4:	ldr	x17, [x16, #440]
  402cd8:	add	x16, x16, #0x1b8
  402cdc:	br	x17

0000000000402ce0 <memchr@plt>:
  402ce0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ce4:	ldr	x17, [x16, #448]
  402ce8:	add	x16, x16, #0x1c0
  402cec:	br	x17

0000000000402cf0 <getpid@plt>:
  402cf0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402cf4:	ldr	x17, [x16, #456]
  402cf8:	add	x16, x16, #0x1c8
  402cfc:	br	x17

0000000000402d00 <_ZdlPv@plt>:
  402d00:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d04:	ldr	x17, [x16, #464]
  402d08:	add	x16, x16, #0x1d0
  402d0c:	br	x17

0000000000402d10 <setlocale@plt>:
  402d10:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d14:	ldr	x17, [x16, #472]
  402d18:	add	x16, x16, #0x1d8
  402d1c:	br	x17

0000000000402d20 <mmap@plt>:
  402d20:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d24:	ldr	x17, [x16, #480]
  402d28:	add	x16, x16, #0x1e0
  402d2c:	br	x17

0000000000402d30 <_Znwm@plt>:
  402d30:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d34:	ldr	x17, [x16, #488]
  402d38:	add	x16, x16, #0x1e8
  402d3c:	br	x17

0000000000402d40 <strncmp@plt>:
  402d40:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d44:	ldr	x17, [x16, #496]
  402d48:	add	x16, x16, #0x1f0
  402d4c:	br	x17

0000000000402d50 <readdir@plt>:
  402d50:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d54:	ldr	x17, [x16, #504]
  402d58:	add	x16, x16, #0x1f8
  402d5c:	br	x17

0000000000402d60 <fputc@plt>:
  402d60:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d64:	ldr	x17, [x16, #512]
  402d68:	add	x16, x16, #0x200
  402d6c:	br	x17

0000000000402d70 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
  402d70:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d74:	ldr	x17, [x16, #520]
  402d78:	add	x16, x16, #0x208
  402d7c:	br	x17

0000000000402d80 <fgets_unlocked@plt>:
  402d80:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d84:	ldr	x17, [x16, #528]
  402d88:	add	x16, x16, #0x210
  402d8c:	br	x17

0000000000402d90 <munmap@plt>:
  402d90:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402d94:	ldr	x17, [x16, #536]
  402d98:	add	x16, x16, #0x218
  402d9c:	br	x17

0000000000402da0 <iconv@plt>:
  402da0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402da4:	ldr	x17, [x16, #544]
  402da8:	add	x16, x16, #0x220
  402dac:	br	x17

0000000000402db0 <fileno_unlocked@plt>:
  402db0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402db4:	ldr	x17, [x16, #552]
  402db8:	add	x16, x16, #0x228
  402dbc:	br	x17

0000000000402dc0 <opendir@plt>:
  402dc0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402dc4:	ldr	x17, [x16, #560]
  402dc8:	add	x16, x16, #0x230
  402dcc:	br	x17

0000000000402dd0 <mbstowcs@plt>:
  402dd0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402dd4:	ldr	x17, [x16, #568]
  402dd8:	add	x16, x16, #0x238
  402ddc:	br	x17

0000000000402de0 <__cxa_atexit@plt>:
  402de0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402de4:	ldr	x17, [x16, #576]
  402de8:	add	x16, x16, #0x240
  402dec:	br	x17

0000000000402df0 <snprintf@plt>:
  402df0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402df4:	ldr	x17, [x16, #584]
  402df8:	add	x16, x16, #0x248
  402dfc:	br	x17

0000000000402e00 <asctime@plt>:
  402e00:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e04:	ldr	x17, [x16, #592]
  402e08:	add	x16, x16, #0x250
  402e0c:	br	x17

0000000000402e10 <fflush@plt>:
  402e10:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e14:	ldr	x17, [x16, #600]
  402e18:	add	x16, x16, #0x258
  402e1c:	br	x17

0000000000402e20 <sbrk@plt>:
  402e20:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e24:	ldr	x17, [x16, #608]
  402e28:	add	x16, x16, #0x260
  402e2c:	br	x17

0000000000402e30 <memmove@plt>:
  402e30:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e34:	ldr	x17, [x16, #616]
  402e38:	add	x16, x16, #0x268
  402e3c:	br	x17

0000000000402e40 <time@plt>:
  402e40:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e44:	ldr	x17, [x16, #624]
  402e48:	add	x16, x16, #0x270
  402e4c:	br	x17

0000000000402e50 <strrchr@plt>:
  402e50:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e54:	ldr	x17, [x16, #632]
  402e58:	add	x16, x16, #0x278
  402e5c:	br	x17

0000000000402e60 <_ZdaPv@plt>:
  402e60:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e64:	ldr	x17, [x16, #640]
  402e68:	add	x16, x16, #0x280
  402e6c:	br	x17

0000000000402e70 <__errno_location@plt>:
  402e70:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e74:	ldr	x17, [x16, #648]
  402e78:	add	x16, x16, #0x288
  402e7c:	br	x17

0000000000402e80 <__uflow@plt>:
  402e80:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e84:	ldr	x17, [x16, #656]
  402e88:	add	x16, x16, #0x290
  402e8c:	br	x17

0000000000402e90 <strtoul@plt>:
  402e90:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402e94:	ldr	x17, [x16, #664]
  402e98:	add	x16, x16, #0x298
  402e9c:	br	x17

0000000000402ea0 <__fsetlocking@plt>:
  402ea0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ea4:	ldr	x17, [x16, #672]
  402ea8:	add	x16, x16, #0x2a0
  402eac:	br	x17

0000000000402eb0 <fopen@plt>:
  402eb0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402eb4:	ldr	x17, [x16, #680]
  402eb8:	add	x16, x16, #0x2a8
  402ebc:	br	x17

0000000000402ec0 <close@plt>:
  402ec0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ec4:	ldr	x17, [x16, #688]
  402ec8:	add	x16, x16, #0x2b0
  402ecc:	br	x17

0000000000402ed0 <strcmp@plt>:
  402ed0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ed4:	ldr	x17, [x16, #696]
  402ed8:	add	x16, x16, #0x2b8
  402edc:	br	x17

0000000000402ee0 <gzopen@plt>:
  402ee0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ee4:	ldr	x17, [x16, #704]
  402ee8:	add	x16, x16, #0x2c0
  402eec:	br	x17

0000000000402ef0 <__xstat@plt>:
  402ef0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ef4:	ldr	x17, [x16, #712]
  402ef8:	add	x16, x16, #0x2c8
  402efc:	br	x17

0000000000402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
  402f00:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f04:	ldr	x17, [x16, #720]
  402f08:	add	x16, x16, #0x2d0
  402f0c:	br	x17

0000000000402f10 <malloc@plt>:
  402f10:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f14:	ldr	x17, [x16, #728]
  402f18:	add	x16, x16, #0x2d8
  402f1c:	br	x17

0000000000402f20 <__lxstat@plt>:
  402f20:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f24:	ldr	x17, [x16, #736]
  402f28:	add	x16, x16, #0x2e0
  402f2c:	br	x17

0000000000402f30 <abort@plt>:
  402f30:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f34:	ldr	x17, [x16, #744]
  402f38:	add	x16, x16, #0x2e8
  402f3c:	br	x17

0000000000402f40 <getenv@plt>:
  402f40:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f44:	ldr	x17, [x16, #752]
  402f48:	add	x16, x16, #0x2f0
  402f4c:	br	x17

0000000000402f50 <strcasecmp@plt>:
  402f50:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f54:	ldr	x17, [x16, #760]
  402f58:	add	x16, x16, #0x2f8
  402f5c:	br	x17

0000000000402f60 <gzclose@plt>:
  402f60:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f64:	ldr	x17, [x16, #768]
  402f68:	add	x16, x16, #0x300
  402f6c:	br	x17

0000000000402f70 <exit@plt>:
  402f70:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f74:	ldr	x17, [x16, #776]
  402f78:	add	x16, x16, #0x308
  402f7c:	br	x17

0000000000402f80 <fwrite_unlocked@plt>:
  402f80:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f84:	ldr	x17, [x16, #784]
  402f88:	add	x16, x16, #0x310
  402f8c:	br	x17

0000000000402f90 <wcswidth@plt>:
  402f90:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402f94:	ldr	x17, [x16, #792]
  402f98:	add	x16, x16, #0x318
  402f9c:	br	x17

0000000000402fa0 <fwrite@plt>:
  402fa0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402fa4:	ldr	x17, [x16, #800]
  402fa8:	add	x16, x16, #0x320
  402fac:	br	x17

0000000000402fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
  402fb0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402fb4:	ldr	x17, [x16, #808]
  402fb8:	add	x16, x16, #0x328
  402fbc:	br	x17

0000000000402fc0 <nl_langinfo@plt>:
  402fc0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402fc4:	ldr	x17, [x16, #816]
  402fc8:	add	x16, x16, #0x330
  402fcc:	br	x17

0000000000402fd0 <getpagesize@plt>:
  402fd0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402fd4:	ldr	x17, [x16, #824]
  402fd8:	add	x16, x16, #0x338
  402fdc:	br	x17

0000000000402fe0 <__cxa_guard_acquire@plt>:
  402fe0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402fe4:	ldr	x17, [x16, #832]
  402fe8:	add	x16, x16, #0x340
  402fec:	br	x17

0000000000402ff0 <vsprintf@plt>:
  402ff0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  402ff4:	ldr	x17, [x16, #840]
  402ff8:	add	x16, x16, #0x348
  402ffc:	br	x17

0000000000403000 <ferror@plt>:
  403000:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403004:	ldr	x17, [x16, #848]
  403008:	add	x16, x16, #0x350
  40300c:	br	x17

0000000000403010 <fdopen@plt>:
  403010:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403014:	ldr	x17, [x16, #856]
  403018:	add	x16, x16, #0x358
  40301c:	br	x17

0000000000403020 <strnlen@plt>:
  403020:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403024:	ldr	x17, [x16, #864]
  403028:	add	x16, x16, #0x360
  40302c:	br	x17

0000000000403030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
  403030:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403034:	ldr	x17, [x16, #872]
  403038:	add	x16, x16, #0x368
  40303c:	br	x17

0000000000403040 <realpath@plt>:
  403040:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403044:	ldr	x17, [x16, #880]
  403048:	add	x16, x16, #0x370
  40304c:	br	x17

0000000000403050 <gzputs@plt>:
  403050:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403054:	ldr	x17, [x16, #888]
  403058:	add	x16, x16, #0x378
  40305c:	br	x17

0000000000403060 <fcntl@plt>:
  403060:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403064:	ldr	x17, [x16, #896]
  403068:	add	x16, x16, #0x380
  40306c:	br	x17

0000000000403070 <__gmon_start__@plt>:
  403070:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403074:	ldr	x17, [x16, #904]
  403078:	add	x16, x16, #0x388
  40307c:	br	x17

0000000000403080 <setbuf@plt>:
  403080:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403084:	ldr	x17, [x16, #912]
  403088:	add	x16, x16, #0x390
  40308c:	br	x17

0000000000403090 <bcmp@plt>:
  403090:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  403094:	ldr	x17, [x16, #920]
  403098:	add	x16, x16, #0x398
  40309c:	br	x17

00000000004030a0 <strcat@plt>:
  4030a0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4030a4:	ldr	x17, [x16, #928]
  4030a8:	add	x16, x16, #0x3a0
  4030ac:	br	x17

00000000004030b0 <fseek@plt>:
  4030b0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4030b4:	ldr	x17, [x16, #936]
  4030b8:	add	x16, x16, #0x3a8
  4030bc:	br	x17

00000000004030c0 <printf@plt>:
  4030c0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4030c4:	ldr	x17, [x16, #944]
  4030c8:	add	x16, x16, #0x3b0
  4030cc:	br	x17

00000000004030d0 <vfprintf@plt>:
  4030d0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4030d4:	ldr	x17, [x16, #952]
  4030d8:	add	x16, x16, #0x3b8
  4030dc:	br	x17

00000000004030e0 <feof@plt>:
  4030e0:	adrp	x16, 48a000 <_Unwind_Backtrace@GCC_3.3>
  4030e4:	ldr	x17, [x16, #960]
  4030e8:	add	x16, x16, #0x3c0
  4030ec:	br	x17

Disassembly of section .text:

00000000004030f0 <_obstack_begin@@Base-0x5e360>:
  4030f0:	stp	x29, x30, [sp, #-32]!
  4030f4:	str	x19, [sp, #16]
  4030f8:	mov	x29, sp
  4030fc:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  403100:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403104:	adrp	x0, 40b000 <feof@plt+0x7f20>
  403108:	add	x19, x19, #0x3d0
  40310c:	add	x1, x1, #0x600
  403110:	add	x0, x0, #0x8c
  403114:	mov	x2, x19
  403118:	stp	xzr, xzr, [x1]
  40311c:	str	xzr, [x1, #16]
  403120:	bl	402de0 <__cxa_atexit@plt>
  403124:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403128:	add	x1, x1, #0x618
  40312c:	mov	x8, x1
  403130:	adrp	x0, 40b000 <feof@plt+0x7f20>
  403134:	str	wzr, [x8, #8]!
  403138:	add	x0, x0, #0x9c
  40313c:	mov	x2, x19
  403140:	stp	xzr, x8, [x1, #16]
  403144:	stp	x8, xzr, [x1, #32]
  403148:	bl	402de0 <__cxa_atexit@plt>
  40314c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403150:	adrp	x0, 40b000 <feof@plt+0x7f20>
  403154:	add	x1, x1, #0x648
  403158:	add	x0, x0, #0xa4
  40315c:	mov	x2, x19
  403160:	stp	xzr, xzr, [x1, #8]
  403164:	str	xzr, [x1]
  403168:	bl	402de0 <__cxa_atexit@plt>
  40316c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403170:	adrp	x0, 40b000 <feof@plt+0x7f20>
  403174:	add	x1, x1, #0x660
  403178:	add	x0, x0, #0x174
  40317c:	mov	x2, x19
  403180:	stp	xzr, xzr, [x1, #8]
  403184:	str	xzr, [x1]
  403188:	bl	402de0 <__cxa_atexit@plt>
  40318c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403190:	add	x1, x1, #0x678
  403194:	stp	xzr, xzr, [x1, #8]
  403198:	mov	x2, x19
  40319c:	ldr	x19, [sp, #16]
  4031a0:	adrp	x0, 40b000 <feof@plt+0x7f20>
  4031a4:	add	x0, x0, #0x184
  4031a8:	str	xzr, [x1]
  4031ac:	ldp	x29, x30, [sp], #32
  4031b0:	b	402de0 <__cxa_atexit@plt>
  4031b4:	stp	x29, x30, [sp, #-32]!
  4031b8:	str	x19, [sp, #16]
  4031bc:	mov	x29, sp
  4031c0:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  4031c4:	add	x19, x19, #0x928
  4031c8:	mov	x0, x19
  4031cc:	bl	41bda0 <feof@plt+0x18cc0>
  4031d0:	mov	x1, x19
  4031d4:	ldr	x19, [sp, #16]
  4031d8:	adrp	x0, 41b000 <feof@plt+0x17f20>
  4031dc:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0x28838>
  4031e0:	add	x0, x0, #0xfc4
  4031e4:	add	x2, x2, #0x3d0
  4031e8:	ldp	x29, x30, [sp], #32
  4031ec:	b	402de0 <__cxa_atexit@plt>
  4031f0:	mov	x29, #0x0                   	// #0
  4031f4:	mov	x30, #0x0                   	// #0
  4031f8:	mov	x5, x0
  4031fc:	ldr	x1, [sp]
  403200:	add	x2, sp, #0x8
  403204:	mov	x6, sp
  403208:	movz	x0, #0x0, lsl #48
  40320c:	movk	x0, #0x0, lsl #32
  403210:	movk	x0, #0x40, lsl #16
  403214:	movk	x0, #0x39e0
  403218:	movz	x3, #0x0, lsl #48
  40321c:	movk	x3, #0x0, lsl #32
  403220:	movk	x3, #0x46, lsl #16
  403224:	movk	x3, #0x26b0
  403228:	movz	x4, #0x0, lsl #48
  40322c:	movk	x4, #0x0, lsl #32
  403230:	movk	x4, #0x46, lsl #16
  403234:	movk	x4, #0x2730
  403238:	bl	402ca0 <__libc_start_main@plt>
  40323c:	bl	402f30 <abort@plt>
  403240:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x27838>
  403244:	ldr	x0, [x0, #4064]
  403248:	cbz	x0, 403250 <feof@plt+0x170>
  40324c:	b	403070 <__gmon_start__@plt>
  403250:	ret
  403254:	nop
  403258:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40325c:	add	x0, x0, #0x590
  403260:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403264:	add	x1, x1, #0x590
  403268:	cmp	x1, x0
  40326c:	b.eq	403284 <feof@plt+0x1a4>  // b.none
  403270:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  403274:	ldr	x1, [x1, #1880]
  403278:	cbz	x1, 403284 <feof@plt+0x1a4>
  40327c:	mov	x16, x1
  403280:	br	x16
  403284:	ret
  403288:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40328c:	add	x0, x0, #0x590
  403290:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x28838>
  403294:	add	x1, x1, #0x590
  403298:	sub	x1, x1, x0
  40329c:	lsr	x2, x1, #63
  4032a0:	add	x1, x2, x1, asr #3
  4032a4:	cmp	xzr, x1, asr #1
  4032a8:	asr	x1, x1, #1
  4032ac:	b.eq	4032c4 <feof@plt+0x1e4>  // b.none
  4032b0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x838>
  4032b4:	ldr	x2, [x2, #1888]
  4032b8:	cbz	x2, 4032c4 <feof@plt+0x1e4>
  4032bc:	mov	x16, x2
  4032c0:	br	x16
  4032c4:	ret
  4032c8:	stp	x29, x30, [sp, #-32]!
  4032cc:	mov	x29, sp
  4032d0:	str	x19, [sp, #16]
  4032d4:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  4032d8:	ldrb	w0, [x19, #1472]
  4032dc:	cbnz	w0, 4032ec <feof@plt+0x20c>
  4032e0:	bl	403258 <feof@plt+0x178>
  4032e4:	mov	w0, #0x1                   	// #1
  4032e8:	strb	w0, [x19, #1472]
  4032ec:	ldr	x19, [sp, #16]
  4032f0:	ldp	x29, x30, [sp], #32
  4032f4:	ret
  4032f8:	b	403288 <feof@plt+0x1a8>
  4032fc:	stp	x29, x30, [sp, #-80]!
  403300:	str	x25, [sp, #16]
  403304:	stp	x24, x23, [sp, #32]
  403308:	stp	x22, x21, [sp, #48]
  40330c:	stp	x20, x19, [sp, #64]
  403310:	mov	x29, sp
  403314:	mov	x21, x0
  403318:	bl	402a50 <strlen@plt>
  40331c:	add	x0, x0, #0x1
  403320:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  403324:	ldrb	w8, [x21]
  403328:	mov	x19, x0
  40332c:	mov	x20, x0
  403330:	cbz	w8, 4033c8 <feof@plt+0x2e8>
  403334:	mov	w23, #0x5e                  	// #94
  403338:	mov	w24, #0x23                  	// #35
  40333c:	mov	x20, x19
  403340:	add	x25, x21, #0x1
  403344:	mov	w9, w8
  403348:	ands	w9, w9, #0xff
  40334c:	b.eq	403364 <feof@plt+0x284>  // b.none
  403350:	cmp	w9, #0x2f
  403354:	b.eq	403364 <feof@plt+0x284>  // b.none
  403358:	ldrb	w9, [x25], #1
  40335c:	ands	w9, w9, #0xff
  403360:	b.ne	403350 <feof@plt+0x270>  // b.any
  403364:	mvn	x9, x21
  403368:	and	w8, w8, #0xff
  40336c:	cmp	w8, #0x2e
  403370:	add	x22, x9, x25
  403374:	b.ne	40339c <feof@plt+0x2bc>  // b.any
  403378:	cmp	x22, #0x2
  40337c:	b.ne	40339c <feof@plt+0x2bc>  // b.any
  403380:	ldrb	w8, [x21, #1]
  403384:	cmp	w8, #0x2e
  403388:	b.ne	40339c <feof@plt+0x2bc>  // b.any
  40338c:	strb	w23, [x20], #1
  403390:	ldurb	w8, [x25, #-1]
  403394:	cbnz	w8, 4033b8 <feof@plt+0x2d8>
  403398:	b	4033c8 <feof@plt+0x2e8>
  40339c:	mov	x0, x20
  4033a0:	mov	x1, x21
  4033a4:	mov	x2, x22
  4033a8:	bl	4029c0 <memcpy@plt>
  4033ac:	add	x20, x20, x22
  4033b0:	ldurb	w8, [x25, #-1]
  4033b4:	cbz	w8, 4033c8 <feof@plt+0x2e8>
  4033b8:	strb	w24, [x20], #1
  4033bc:	ldrb	w8, [x25]
  4033c0:	mov	x21, x25
  4033c4:	cbnz	w8, 403340 <feof@plt+0x260>
  4033c8:	strb	wzr, [x20]
  4033cc:	mov	x0, x19
  4033d0:	ldp	x20, x19, [sp, #64]
  4033d4:	ldp	x22, x21, [sp, #48]
  4033d8:	ldp	x24, x23, [sp, #32]
  4033dc:	ldr	x25, [sp, #16]
  4033e0:	ldp	x29, x30, [sp], #80
  4033e4:	ret
  4033e8:	ldrb	w8, [x0, #48]
  4033ec:	movi	v0.2d, #0x0
  4033f0:	str	xzr, [x0, #40]
  4033f4:	str	wzr, [x0, #32]
  4033f8:	and	w8, w8, #0x80
  4033fc:	str	xzr, [x0, #96]
  403400:	stp	q0, q0, [x0]
  403404:	stur	q0, [x0, #56]
  403408:	strb	w8, [x0, #48]
  40340c:	stur	q0, [x0, #72]
  403410:	ret
  403414:	ldrb	w8, [x0, #56]
  403418:	movi	v0.2d, #0x0
  40341c:	str	xzr, [x0, #48]
  403420:	stp	q0, q0, [x0, #16]
  403424:	and	w8, w8, #0xf8
  403428:	str	q0, [x0]
  40342c:	strb	w8, [x0, #56]
  403430:	ret
  403434:	ldp	x9, x8, [x0, #32]
  403438:	sub	x10, x8, x9
  40343c:	cmp	x10, #0x20
  403440:	b.lt	403498 <feof@plt+0x3b8>  // b.tstop
  403444:	lsr	x10, x10, #5
  403448:	add	x9, x9, #0x10
  40344c:	add	x10, x10, #0x1
  403450:	ldur	x11, [x9, #-16]
  403454:	cmp	x11, x1
  403458:	b.eq	4034ec <feof@plt+0x40c>  // b.none
  40345c:	ldur	x11, [x9, #-8]
  403460:	cmp	x11, x1
  403464:	b.eq	4034f4 <feof@plt+0x414>  // b.none
  403468:	ldr	x11, [x9]
  40346c:	cmp	x11, x1
  403470:	b.eq	403500 <feof@plt+0x420>  // b.none
  403474:	ldr	x11, [x9, #8]
  403478:	cmp	x11, x1
  40347c:	b.eq	4034fc <feof@plt+0x41c>  // b.none
  403480:	sub	x10, x10, #0x1
  403484:	cmp	x10, #0x1
  403488:	add	x9, x9, #0x20
  40348c:	b.gt	403450 <feof@plt+0x370>
  403490:	sub	x9, x9, #0x10
  403494:	sub	x10, x8, x9
  403498:	asr	x10, x10, #3
  40349c:	cmp	x10, #0x1
  4034a0:	b.eq	4034d4 <feof@plt+0x3f4>  // b.none
  4034a4:	cmp	x10, #0x2
  4034a8:	b.eq	4034c4 <feof@plt+0x3e4>  // b.none
  4034ac:	cmp	x10, #0x3
  4034b0:	b.ne	4034e4 <feof@plt+0x404>  // b.any
  4034b4:	ldr	x10, [x9]
  4034b8:	cmp	x10, x1
  4034bc:	b.eq	403500 <feof@plt+0x420>  // b.none
  4034c0:	add	x9, x9, #0x8
  4034c4:	ldr	x10, [x9]
  4034c8:	cmp	x10, x1
  4034cc:	b.eq	403500 <feof@plt+0x420>  // b.none
  4034d0:	add	x9, x9, #0x8
  4034d4:	ldr	x10, [x9]
  4034d8:	cmp	x10, x1
  4034dc:	csel	x9, x9, x8, eq  // eq = none
  4034e0:	b	403500 <feof@plt+0x420>
  4034e4:	mov	x9, x8
  4034e8:	b	403500 <feof@plt+0x420>
  4034ec:	sub	x9, x9, #0x10
  4034f0:	b	403500 <feof@plt+0x420>
  4034f4:	sub	x9, x9, #0x8
  4034f8:	b	403500 <feof@plt+0x420>
  4034fc:	add	x9, x9, #0x8
  403500:	cmp	x9, x8
  403504:	cset	w0, ne  // ne = any
  403508:	ret
  40350c:	movi	v0.2d, #0x0
  403510:	str	wzr, [x0]
  403514:	str	wzr, [x0, #88]
  403518:	stur	q0, [x0, #8]
  40351c:	stur	q0, [x0, #24]
  403520:	stur	q0, [x0, #40]
  403524:	stur	q0, [x0, #56]
  403528:	stur	q0, [x0, #72]
  40352c:	stp	q0, q0, [x0, #96]
  403530:	str	q0, [x0, #128]
  403534:	ret
  403538:	stp	x29, x30, [sp, #-80]!
  40353c:	stp	x26, x25, [sp, #16]
  403540:	stp	x24, x23, [sp, #32]
  403544:	stp	x22, x21, [sp, #48]
  403548:	stp	x20, x19, [sp, #64]
  40354c:	mov	x29, sp
  403550:	mov	x24, x0
  403554:	ldr	x10, [x24, #112]!
  403558:	mov	x20, x0
  40355c:	mov	x19, x1
  403560:	mov	x8, x24
  403564:	ldr	x9, [x8, #-8]!
  403568:	cmp	x9, x10
  40356c:	b.eq	403580 <feof@plt+0x4a0>  // b.none
  403570:	str	x19, [x9]
  403574:	ldr	x9, [x8]
  403578:	add	x9, x9, #0x8
  40357c:	b	403618 <feof@plt+0x538>
  403580:	ldr	x21, [x20, #96]
  403584:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  403588:	sub	x22, x9, x21
  40358c:	cmp	x22, x8
  403590:	b.eq	403770 <feof@plt+0x690>  // b.none
  403594:	asr	x26, x22, #3
  403598:	cmp	x22, #0x0
  40359c:	csinc	x8, x26, xzr, ne  // ne = any
  4035a0:	adds	x8, x8, x26
  4035a4:	lsr	x10, x8, #60
  4035a8:	cset	w9, cs  // cs = hs, nlast
  4035ac:	cmp	x10, #0x0
  4035b0:	cset	w10, ne  // ne = any
  4035b4:	orr	w9, w9, w10
  4035b8:	cmp	w9, #0x0
  4035bc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  4035c0:	csel	x25, x9, x8, ne  // ne = any
  4035c4:	cbz	x25, 4035d8 <feof@plt+0x4f8>
  4035c8:	lsl	x0, x25, #3
  4035cc:	bl	402d30 <_Znwm@plt>
  4035d0:	mov	x23, x0
  4035d4:	b	4035dc <feof@plt+0x4fc>
  4035d8:	mov	x23, xzr
  4035dc:	add	x26, x23, x26, lsl #3
  4035e0:	cmp	x22, #0x1
  4035e4:	str	x19, [x26]
  4035e8:	b.lt	4035fc <feof@plt+0x51c>  // b.tstop
  4035ec:	mov	x0, x23
  4035f0:	mov	x1, x21
  4035f4:	mov	x2, x22
  4035f8:	bl	402e30 <memmove@plt>
  4035fc:	add	x22, x26, #0x8
  403600:	cbz	x21, 40360c <feof@plt+0x52c>
  403604:	mov	x0, x21
  403608:	bl	402d00 <_ZdlPv@plt>
  40360c:	add	x9, x23, x25, lsl #3
  403610:	mov	x8, x24
  403614:	stp	x23, x22, [x20, #96]
  403618:	str	x9, [x8]
  40361c:	mov	x21, x20
  403620:	ldr	w10, [x19, #88]
  403624:	ldr	x22, [x21, #120]!
  403628:	ldr	x8, [x21, #8]
  40362c:	sub	x9, x8, x22
  403630:	asr	x9, x9, #3
  403634:	cmp	x9, x10
  403638:	b.hi	403670 <feof@plt+0x590>  // b.pmore
  40363c:	add	w10, w10, #0x1
  403640:	cmp	x9, x10
  403644:	b.cs	40365c <feof@plt+0x57c>  // b.hs, b.nlast
  403648:	sub	x1, x10, x9
  40364c:	mov	x0, x21
  403650:	bl	40d4a8 <feof@plt+0xa3c8>
  403654:	ldr	x22, [x21]
  403658:	b	403670 <feof@plt+0x590>
  40365c:	b.ls	403670 <feof@plt+0x590>  // b.plast
  403660:	add	x9, x22, x10, lsl #3
  403664:	cmp	x9, x8
  403668:	b.eq	403670 <feof@plt+0x590>  // b.none
  40366c:	str	x9, [x20, #128]
  403670:	ldr	w21, [x19, #88]
  403674:	ldr	x20, [x22, x21, lsl #3]
  403678:	cbnz	x20, 403694 <feof@plt+0x5b4>
  40367c:	mov	w0, #0x18                  	// #24
  403680:	bl	402d30 <_Znwm@plt>
  403684:	mov	x20, x0
  403688:	stp	xzr, xzr, [x0, #8]
  40368c:	str	xzr, [x0]
  403690:	str	x0, [x22, x21, lsl #3]
  403694:	mov	x8, x20
  403698:	ldr	x9, [x8, #8]!
  40369c:	mov	x24, x8
  4036a0:	ldr	x10, [x24, #8]!
  4036a4:	cmp	x9, x10
  4036a8:	b.eq	4036c0 <feof@plt+0x5e0>  // b.none
  4036ac:	str	x19, [x9]
  4036b0:	ldr	x9, [x8]
  4036b4:	mov	x24, x8
  4036b8:	add	x9, x9, #0x8
  4036bc:	b	403754 <feof@plt+0x674>
  4036c0:	ldr	x21, [x20]
  4036c4:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  4036c8:	sub	x22, x9, x21
  4036cc:	cmp	x22, x8
  4036d0:	b.eq	403770 <feof@plt+0x690>  // b.none
  4036d4:	asr	x26, x22, #3
  4036d8:	cmp	x22, #0x0
  4036dc:	csinc	x8, x26, xzr, ne  // ne = any
  4036e0:	adds	x8, x8, x26
  4036e4:	lsr	x10, x8, #60
  4036e8:	cset	w9, cs  // cs = hs, nlast
  4036ec:	cmp	x10, #0x0
  4036f0:	cset	w10, ne  // ne = any
  4036f4:	orr	w9, w9, w10
  4036f8:	cmp	w9, #0x0
  4036fc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  403700:	csel	x25, x9, x8, ne  // ne = any
  403704:	cbz	x25, 403718 <feof@plt+0x638>
  403708:	lsl	x0, x25, #3
  40370c:	bl	402d30 <_Znwm@plt>
  403710:	mov	x23, x0
  403714:	b	40371c <feof@plt+0x63c>
  403718:	mov	x23, xzr
  40371c:	add	x26, x23, x26, lsl #3
  403720:	cmp	x22, #0x1
  403724:	str	x19, [x26]
  403728:	b.lt	40373c <feof@plt+0x65c>  // b.tstop
  40372c:	mov	x0, x23
  403730:	mov	x1, x21
  403734:	mov	x2, x22
  403738:	bl	402e30 <memmove@plt>
  40373c:	add	x19, x26, #0x8
  403740:	cbz	x21, 40374c <feof@plt+0x66c>
  403744:	mov	x0, x21
  403748:	bl	402d00 <_ZdlPv@plt>
  40374c:	add	x9, x23, x25, lsl #3
  403750:	stp	x23, x19, [x20]
  403754:	str	x9, [x24]
  403758:	ldp	x20, x19, [sp, #64]
  40375c:	ldp	x22, x21, [sp, #48]
  403760:	ldp	x24, x23, [sp, #32]
  403764:	ldp	x26, x25, [sp, #16]
  403768:	ldp	x29, x30, [sp], #80
  40376c:	ret
  403770:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  403774:	add	x0, x0, #0x4b5
  403778:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40377c:	stp	x29, x30, [sp, #-48]!
  403780:	str	x21, [sp, #16]
  403784:	stp	x20, x19, [sp, #32]
  403788:	mov	x29, sp
  40378c:	ldp	x8, x10, [x0, #120]
  403790:	mov	w9, w1
  403794:	sub	x10, x10, x8
  403798:	cmp	x9, x10, asr #3
  40379c:	b.cs	4037ec <feof@plt+0x70c>  // b.hs, b.nlast
  4037a0:	ldr	x19, [x8, x9, lsl #3]
  4037a4:	cbz	x19, 4037f0 <feof@plt+0x710>
  4037a8:	ldp	x20, x21, [x19]
  4037ac:	cmp	x20, x21
  4037b0:	b.eq	4037f0 <feof@plt+0x710>  // b.none
  4037b4:	sub	x8, x21, x20
  4037b8:	asr	x8, x8, #3
  4037bc:	clz	x8, x8
  4037c0:	mov	w9, #0x7e                  	// #126
  4037c4:	sub	x2, x9, x8, lsl #1
  4037c8:	mov	x0, x20
  4037cc:	mov	x1, x21
  4037d0:	mov	x3, xzr
  4037d4:	bl	40d5d4 <feof@plt+0xa4f4>
  4037d8:	mov	x0, x20
  4037dc:	mov	x1, x21
  4037e0:	mov	x2, xzr
  4037e4:	bl	40d834 <feof@plt+0xa754>
  4037e8:	b	4037f0 <feof@plt+0x710>
  4037ec:	mov	x19, xzr
  4037f0:	mov	x0, x19
  4037f4:	ldp	x20, x19, [sp, #32]
  4037f8:	ldr	x21, [sp, #16]
  4037fc:	ldp	x29, x30, [sp], #48
  403800:	ret
  403804:	ldrb	w8, [x0, #28]
  403808:	movi	v0.2d, #0x0
  40380c:	stp	xzr, xzr, [x0]
  403810:	str	wzr, [x0, #24]
  403814:	and	w8, w8, #0xf8
  403818:	str	xzr, [x0, #16]
  40381c:	stp	xzr, xzr, [x0, #40]
  403820:	str	xzr, [x0, #32]
  403824:	str	wzr, [x0, #56]
  403828:	stp	q0, q0, [x0, #64]
  40382c:	stur	q0, [x0, #92]
  403830:	strb	w8, [x0, #28]
  403834:	stp	q0, q0, [x0, #112]
  403838:	ret
  40383c:	stp	x29, x30, [sp, #-64]!
  403840:	str	x23, [sp, #16]
  403844:	stp	x22, x21, [sp, #32]
  403848:	stp	x20, x19, [sp, #48]
  40384c:	mov	x29, sp
  403850:	ldp	x8, x9, [x0, #32]
  403854:	mov	w10, #0x4ec5                	// #20165
  403858:	movk	w10, #0xc4ec, lsl #16
  40385c:	mov	x19, x0
  403860:	sub	x9, x9, x8
  403864:	lsr	x9, x9, #3
  403868:	mul	w9, w9, w10
  40386c:	subs	w20, w9, #0x1
  403870:	b.mi	4038a4 <feof@plt+0x7c4>  // b.first
  403874:	mov	w21, #0x68                  	// #104
  403878:	umull	x9, w20, w21
  40387c:	ldr	x0, [x8, x9]
  403880:	cbz	x0, 403894 <feof@plt+0x7b4>
  403884:	ldr	x22, [x0, #40]
  403888:	bl	402b20 <free@plt>
  40388c:	mov	x0, x22
  403890:	cbnz	x22, 403884 <feof@plt+0x7a4>
  403894:	subs	w20, w20, #0x1
  403898:	b.mi	4038a4 <feof@plt+0x7c4>  // b.first
  40389c:	ldr	x8, [x19, #32]
  4038a0:	b	403878 <feof@plt+0x798>
  4038a4:	ldp	x8, x0, [x19]
  4038a8:	cmp	x0, x8
  4038ac:	b.eq	4038b8 <feof@plt+0x7d8>  // b.none
  4038b0:	bl	402b20 <free@plt>
  4038b4:	ldr	x0, [x19]
  4038b8:	bl	402b20 <free@plt>
  4038bc:	ldp	x20, x21, [x19, #112]
  4038c0:	cmp	x20, x21
  4038c4:	b.ne	403914 <feof@plt+0x834>  // b.any
  4038c8:	cbz	x20, 4038d4 <feof@plt+0x7f4>
  4038cc:	mov	x0, x20
  4038d0:	bl	402d00 <_ZdlPv@plt>
  4038d4:	ldr	x0, [x19, #64]
  4038d8:	cbz	x0, 4038e0 <feof@plt+0x800>
  4038dc:	bl	402d00 <_ZdlPv@plt>
  4038e0:	ldp	x20, x22, [x19, #32]
  4038e4:	cmp	x20, x22
  4038e8:	b.ne	40393c <feof@plt+0x85c>  // b.any
  4038ec:	cbz	x20, 403994 <feof@plt+0x8b4>
  4038f0:	mov	x0, x20
  4038f4:	ldp	x20, x19, [sp, #48]
  4038f8:	ldp	x22, x21, [sp, #32]
  4038fc:	ldr	x23, [sp, #16]
  403900:	ldp	x29, x30, [sp], #64
  403904:	b	402d00 <_ZdlPv@plt>
  403908:	add	x20, x20, #0x40
  40390c:	cmp	x21, x20
  403910:	b.eq	403980 <feof@plt+0x8a0>  // b.none
  403914:	ldr	x0, [x20, #32]
  403918:	cbz	x0, 403920 <feof@plt+0x840>
  40391c:	bl	402d00 <_ZdlPv@plt>
  403920:	ldr	x0, [x20, #8]
  403924:	cbz	x0, 403908 <feof@plt+0x828>
  403928:	bl	402d00 <_ZdlPv@plt>
  40392c:	b	403908 <feof@plt+0x828>
  403930:	add	x20, x20, #0x68
  403934:	cmp	x20, x22
  403938:	b.eq	40398c <feof@plt+0x8ac>  // b.none
  40393c:	ldp	x21, x23, [x20, #56]
  403940:	cmp	x21, x23
  403944:	b.ne	40395c <feof@plt+0x87c>  // b.any
  403948:	cbnz	x21, 403974 <feof@plt+0x894>
  40394c:	b	403930 <feof@plt+0x850>
  403950:	add	x21, x21, #0x20
  403954:	cmp	x23, x21
  403958:	b.eq	40396c <feof@plt+0x88c>  // b.none
  40395c:	ldr	x0, [x21, #8]
  403960:	cbz	x0, 403950 <feof@plt+0x870>
  403964:	bl	402d00 <_ZdlPv@plt>
  403968:	b	403950 <feof@plt+0x870>
  40396c:	ldr	x21, [x20, #56]
  403970:	cbz	x21, 403930 <feof@plt+0x850>
  403974:	mov	x0, x21
  403978:	bl	402d00 <_ZdlPv@plt>
  40397c:	b	403930 <feof@plt+0x850>
  403980:	ldr	x20, [x19, #112]
  403984:	cbnz	x20, 4038cc <feof@plt+0x7ec>
  403988:	b	4038d4 <feof@plt+0x7f4>
  40398c:	ldr	x20, [x19, #32]
  403990:	cbnz	x20, 4038f0 <feof@plt+0x810>
  403994:	ldp	x20, x19, [sp, #48]
  403998:	ldp	x22, x21, [sp, #32]
  40399c:	ldr	x23, [sp, #16]
  4039a0:	ldp	x29, x30, [sp], #64
  4039a4:	ret
  4039a8:	ldrb	w8, [x0, #28]
  4039ac:	tbz	w8, #2, 4039c8 <feof@plt+0x8e8>
  4039b0:	ldr	w8, [x0, #104]
  4039b4:	cmp	w8, w2
  4039b8:	b.ne	4039c8 <feof@plt+0x8e8>  // b.any
  4039bc:	ldr	w8, [x0, #88]
  4039c0:	cmp	w8, w1
  4039c4:	b.ls	4039d0 <feof@plt+0x8f0>  // b.plast
  4039c8:	mov	w0, wzr
  4039cc:	ret
  4039d0:	ldr	w8, [x0, #96]
  4039d4:	cmp	w8, w1
  4039d8:	cset	w0, cs  // cs = hs, nlast
  4039dc:	ret
  4039e0:	stp	x29, x30, [sp, #-96]!
  4039e4:	stp	x28, x27, [sp, #16]
  4039e8:	stp	x26, x25, [sp, #32]
  4039ec:	stp	x24, x23, [sp, #48]
  4039f0:	stp	x22, x21, [sp, #64]
  4039f4:	stp	x20, x19, [sp, #80]
  4039f8:	mov	x29, sp
  4039fc:	sub	sp, sp, #0x210
  403a00:	stur	wzr, [x29, #-12]
  403a04:	stur	w0, [x29, #-252]
  403a08:	str	x1, [sp, #264]
  403a0c:	ldr	x19, [x1]
  403a10:	mov	x0, x19
  403a14:	bl	402a50 <strlen@plt>
  403a18:	cbz	x0, 403a38 <feof@plt+0x958>
  403a1c:	add	x8, x19, x0
  403a20:	ldurb	w8, [x8, #-1]
  403a24:	sub	x0, x0, #0x1
  403a28:	cmp	w8, #0x2f
  403a2c:	b.ne	403a18 <feof@plt+0x938>  // b.any
  403a30:	add	x8, x19, x0
  403a34:	add	x19, x8, #0x1
  403a38:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403a3c:	mov	x0, x19
  403a40:	str	x19, [x8, #2008]
  403a44:	bl	462110 <_obstack_memory_used@@Base+0x948>
  403a48:	bl	4600a0 <feof@plt+0x5cfc0>
  403a4c:	bl	41b978 <feof@plt+0x18898>
  403a50:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403a54:	ldr	x0, [x8, #984]
  403a58:	mov	w1, wzr
  403a5c:	bl	40f1ec <feof@plt+0xc10c>
  403a60:	sub	x0, x29, #0xfc
  403a64:	add	x1, sp, #0x108
  403a68:	bl	45a3a0 <feof@plt+0x572c0>
  403a6c:	ldur	w19, [x29, #-252]
  403a70:	ldr	x20, [sp, #264]
  403a74:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1838>
  403a78:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x838>
  403a7c:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x838>
  403a80:	add	x21, x21, #0x25f
  403a84:	add	x22, x22, #0x860
  403a88:	add	x23, x23, #0x768
  403a8c:	mov	w25, #0x1                   	// #1
  403a90:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  403a94:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x28838>
  403a98:	adrp	x26, 48a000 <_obstack_memory_used@@Base+0x28838>
  403a9c:	adrp	x27, 48a000 <_obstack_memory_used@@Base+0x28838>
  403aa0:	mov	w0, w19
  403aa4:	mov	x1, x20
  403aa8:	mov	x2, x21
  403aac:	mov	x3, x22
  403ab0:	mov	x4, xzr
  403ab4:	bl	402c40 <getopt_long@plt>
  403ab8:	add	w8, w0, #0x1
  403abc:	cmp	w8, #0x79
  403ac0:	b.hi	407da4 <feof@plt+0x4cc4>  // b.pmore
  403ac4:	adr	x9, 403ad4 <feof@plt+0x9f4>
  403ac8:	ldrh	w10, [x23, x8, lsl #1]
  403acc:	add	x9, x9, x10, lsl #2
  403ad0:	br	x9
  403ad4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403ad8:	strb	w25, [x8, #1692]
  403adc:	b	403aa0 <feof@plt+0x9c0>
  403ae0:	ldr	x8, [x24, #1440]
  403ae4:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  403ae8:	str	x8, [x9, #1736]
  403aec:	b	403aa0 <feof@plt+0x9c0>
  403af0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403af4:	strb	w25, [x8, #1700]
  403af8:	b	403aa0 <feof@plt+0x9c0>
  403afc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b00:	strb	w25, [x8, #1684]
  403b04:	b	403aa0 <feof@plt+0x9c0>
  403b08:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b0c:	strb	w25, [x8, #1704]
  403b10:	b	403aa0 <feof@plt+0x9c0>
  403b14:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b18:	strb	w25, [x8, #1716]
  403b1c:	b	403aa0 <feof@plt+0x9c0>
  403b20:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b24:	strb	w25, [x8, #1724]
  403b28:	b	403aa0 <feof@plt+0x9c0>
  403b2c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b30:	strb	w25, [x8, #1764]
  403b34:	b	403aa0 <feof@plt+0x9c0>
  403b38:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b3c:	strb	w25, [x8, #1760]
  403b40:	b	403aa0 <feof@plt+0x9c0>
  403b44:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b48:	strb	w25, [x8, #1696]
  403b4c:	b	403aa0 <feof@plt+0x9c0>
  403b50:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b54:	strb	w25, [x8, #1780]
  403b58:	b	403aa0 <feof@plt+0x9c0>
  403b5c:	strb	w25, [x26, #1768]
  403b60:	b	403aa0 <feof@plt+0x9c0>
  403b64:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b68:	strb	w25, [x8, #1772]
  403b6c:	b	403aa0 <feof@plt+0x9c0>
  403b70:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b74:	strb	w25, [x8, #1688]
  403b78:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b7c:	strb	wzr, [x8, #1728]
  403b80:	b	403aa0 <feof@plt+0x9c0>
  403b84:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b88:	strb	w25, [x8, #1712]
  403b8c:	b	403aa0 <feof@plt+0x9c0>
  403b90:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403b94:	strb	w25, [x8, #1708]
  403b98:	b	403aa0 <feof@plt+0x9c0>
  403b9c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403ba0:	strb	w25, [x8, #1728]
  403ba4:	b	403aa0 <feof@plt+0x9c0>
  403ba8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403bac:	strb	w25, [x8, #1720]
  403bb0:	b	403aa0 <feof@plt+0x9c0>
  403bb4:	strb	w25, [x27, #1776]
  403bb8:	b	403aa0 <feof@plt+0x9c0>
  403bbc:	ldr	x0, [x24, #1440]
  403bc0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403bc4:	str	x0, [x8, #1744]
  403bc8:	bl	402a50 <strlen@plt>
  403bcc:	str	x0, [x28, #1752]
  403bd0:	b	403aa0 <feof@plt+0x9c0>
  403bd4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403bd8:	ldrsw	x11, [x8, #1448]
  403bdc:	ldur	w8, [x29, #-252]
  403be0:	cmp	w8, w11
  403be4:	b.eq	407da4 <feof@plt+0x4cc4>  // b.none
  403be8:	sub	w9, w8, w11
  403bec:	cmp	w9, #0x2
  403bf0:	b.lt	403c00 <feof@plt+0xb20>  // b.tstop
  403bf4:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  403bf8:	mov	w10, #0x1                   	// #1
  403bfc:	strb	w10, [x9, #1680]
  403c00:	sub	x9, x29, #0xe8
  403c04:	orr	x13, x9, #0x2
  403c08:	str	x13, [sp, #144]
  403c0c:	add	x13, x9, #0x4
  403c10:	str	x13, [sp, #136]
  403c14:	add	x13, x9, #0x6
  403c18:	str	x13, [sp, #128]
  403c1c:	add	x13, x9, #0x8
  403c20:	str	x13, [sp, #120]
  403c24:	add	x13, x9, #0xa
  403c28:	str	x13, [sp, #112]
  403c2c:	add	x13, x9, #0xc
  403c30:	str	x13, [sp, #104]
  403c34:	add	x13, x9, #0xe
  403c38:	str	x13, [sp, #96]
  403c3c:	add	x13, x9, #0x10
  403c40:	str	x13, [sp, #88]
  403c44:	add	x13, x9, #0x12
  403c48:	str	x13, [sp, #80]
  403c4c:	add	x13, x9, #0x14
  403c50:	str	x13, [sp, #72]
  403c54:	add	x13, x9, #0x16
  403c58:	str	x13, [sp, #64]
  403c5c:	add	x13, x9, #0x18
  403c60:	str	x13, [sp, #56]
  403c64:	add	x13, x9, #0x1a
  403c68:	mov	w10, #0x1                   	// #1
  403c6c:	str	x13, [sp, #48]
  403c70:	add	x13, x9, #0x1c
  403c74:	add	x9, x9, #0x1e
  403c78:	sub	x12, x29, #0xb0
  403c7c:	stp	x9, x13, [sp, #32]
  403c80:	sub	w9, w10, w11
  403c84:	str	w9, [sp, #20]
  403c88:	add	x9, x12, #0x8
  403c8c:	mov	w28, #0x68                  	// #104
  403c90:	str	x9, [sp, #8]
  403c94:	add	x9, x12, #0x10
  403c98:	mov	x19, x11
  403c9c:	str	x9, [sp, #152]
  403ca0:	str	x11, [sp, #24]
  403ca4:	b	403cdc <feof@plt+0xbfc>
  403ca8:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  403cac:	add	x20, x20, #0x618
  403cb0:	ldr	x1, [x20, #16]
  403cb4:	mov	x0, x20
  403cb8:	add	x19, x20, #0x8
  403cbc:	bl	40b194 <feof@plt+0x80b4>
  403cc0:	ldur	w8, [x29, #-252]
  403cc4:	stp	xzr, x19, [x20, #16]
  403cc8:	stp	x19, xzr, [x20, #32]
  403ccc:	ldr	x19, [sp, #168]
  403cd0:	add	x19, x19, #0x1
  403cd4:	cmp	w8, w19
  403cd8:	b.eq	407cfc <feof@plt+0x4c1c>  // b.none
  403cdc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  403ce0:	ldrb	w9, [x9, #1684]
  403ce4:	cmp	w9, #0x1
  403ce8:	b.ne	403d08 <feof@plt+0xc28>  // b.any
  403cec:	ldr	w9, [sp, #20]
  403cf0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x838>
  403cf4:	add	x0, x0, #0xb70
  403cf8:	add	w1, w9, w19
  403cfc:	ldr	x9, [sp, #24]
  403d00:	sub	w2, w8, w9
  403d04:	bl	4030c0 <printf@plt>
  403d08:	ldr	x8, [sp, #264]
  403d0c:	str	x19, [sp, #168]
  403d10:	ldr	x20, [x8, x19, lsl #3]
  403d14:	mov	x0, x20
  403d18:	bl	402a50 <strlen@plt>
  403d1c:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  403d20:	ldr	x8, [x21, #1792]
  403d24:	mov	x19, x0
  403d28:	mov	x0, x8
  403d2c:	bl	402b20 <free@plt>
  403d30:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  403d34:	ldr	x0, [x22, #1784]
  403d38:	bl	402b20 <free@plt>
  403d3c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403d40:	ldr	x0, [x8, #1736]
  403d44:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403d48:	str	xzr, [x21, #1792]
  403d4c:	str	xzr, [x22, #1784]
  403d50:	str	xzr, [x8, #1800]
  403d54:	stur	wzr, [x29, #-12]
  403d58:	cbz	x0, 403dfc <feof@plt+0xd1c>
  403d5c:	ldrb	w8, [x0]
  403d60:	cbz	w8, 403dfc <feof@plt+0xd1c>
  403d64:	bl	402a50 <strlen@plt>
  403d68:	add	w8, w19, w0
  403d6c:	add	w8, w8, #0x2
  403d70:	sxtw	x0, w8
  403d74:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  403d78:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  403d7c:	ldr	x1, [x19, #1736]
  403d80:	mov	x21, x0
  403d84:	strb	wzr, [x0]
  403d88:	sub	x2, x29, #0xb0
  403d8c:	mov	w0, wzr
  403d90:	bl	402ef0 <__xstat@plt>
  403d94:	ldr	x1, [x19, #1736]
  403d98:	ldur	w22, [x29, #-160]
  403d9c:	mov	w19, w0
  403da0:	mov	x0, x21
  403da4:	bl	4030a0 <strcat@plt>
  403da8:	cbnz	w19, 403e14 <feof@plt+0xd34>
  403dac:	and	w8, w22, #0xf000
  403db0:	cmp	w8, #0x4, lsl #12
  403db4:	b.ne	403e14 <feof@plt+0xd34>  // b.any
  403db8:	mov	x0, x21
  403dbc:	bl	402a50 <strlen@plt>
  403dc0:	add	x8, x0, x21
  403dc4:	ldurb	w8, [x8, #-1]
  403dc8:	cmp	w8, #0x2f
  403dcc:	b.eq	403de0 <feof@plt+0xd00>  // b.none
  403dd0:	mov	x0, x21
  403dd4:	bl	402a50 <strlen@plt>
  403dd8:	mov	w8, #0x2f                  	// #47
  403ddc:	strh	w8, [x21, x0]
  403de0:	mov	x0, x20
  403de4:	bl	4613f4 <feof@plt+0x5e314>
  403de8:	cmp	x0, #0x0
  403dec:	csel	x1, x20, x0, eq  // eq = none
  403df0:	mov	x0, x21
  403df4:	bl	4030a0 <strcat@plt>
  403df8:	b	403e14 <feof@plt+0xd34>
  403dfc:	add	w8, w19, #0x1
  403e00:	sxtw	x0, w8
  403e04:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  403e08:	mov	x1, x20
  403e0c:	mov	x21, x0
  403e10:	bl	402c00 <strcpy@plt>
  403e14:	mov	x0, x21
  403e18:	bl	4613f4 <feof@plt+0x5e314>
  403e1c:	mov	w1, #0x2e                  	// #46
  403e20:	bl	402e50 <strrchr@plt>
  403e24:	cbz	x0, 403e2c <feof@plt+0xd4c>
  403e28:	strb	wzr, [x0]
  403e2c:	mov	x0, x21
  403e30:	bl	402a50 <strlen@plt>
  403e34:	sxtw	x22, w0
  403e38:	add	x19, x22, #0x6
  403e3c:	mov	x0, x19
  403e40:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  403e44:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  403e48:	mov	x1, x21
  403e4c:	str	x0, [x23, #1792]
  403e50:	bl	402c00 <strcpy@plt>
  403e54:	ldr	x8, [x23, #1792]
  403e58:	mov	w9, #0x6f                  	// #111
  403e5c:	mov	x0, x19
  403e60:	add	x8, x8, x22
  403e64:	strh	w9, [x8, #4]
  403e68:	mov	w9, #0x672e                	// #26414
  403e6c:	movk	w9, #0x6e63, lsl #16
  403e70:	str	w9, [x8]
  403e74:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  403e78:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  403e7c:	mov	x1, x21
  403e80:	str	x0, [x19, #1784]
  403e84:	bl	402c00 <strcpy@plt>
  403e88:	ldr	x8, [x19, #1784]
  403e8c:	mov	w9, #0x61                  	// #97
  403e90:	mov	x0, x21
  403e94:	add	x8, x8, x22
  403e98:	strh	w9, [x8, #4]
  403e9c:	mov	w9, #0x672e                	// #26414
  403ea0:	movk	w9, #0x6463, lsl #16
  403ea4:	str	w9, [x8]
  403ea8:	bl	402b20 <free@plt>
  403eac:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  403eb0:	add	x9, x9, #0x678
  403eb4:	ldp	x21, x8, [x9]
  403eb8:	ldr	x19, [x19, #1784]
  403ebc:	subs	x9, x8, x21
  403ec0:	b.eq	403ef0 <feof@plt+0xe10>  // b.none
  403ec4:	mov	x8, xzr
  403ec8:	asr	x22, x9, #3
  403ecc:	mov	w23, #0x1                   	// #1
  403ed0:	ldr	x1, [x21, x8, lsl #3]
  403ed4:	mov	x0, x19
  403ed8:	bl	402ed0 <strcmp@plt>
  403edc:	cbz	w0, 403f90 <feof@plt+0xeb0>
  403ee0:	mov	w8, w23
  403ee4:	cmp	x22, x8
  403ee8:	add	w23, w23, #0x1
  403eec:	b.hi	403ed0 <feof@plt+0xdf0>  // b.pmore
  403ef0:	mov	x0, x19
  403ef4:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  403ef8:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  403efc:	add	x10, x10, #0x680
  403f00:	ldp	x8, x9, [x10]
  403f04:	mov	x21, x0
  403f08:	cmp	x8, x9
  403f0c:	b.eq	403f34 <feof@plt+0xe54>  // b.none
  403f10:	str	x21, [x8]
  403f14:	ldr	x8, [x10]
  403f18:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  403f1c:	mov	x9, x10
  403f20:	add	x22, x22, #0x5c8
  403f24:	add	x8, x8, #0x8
  403f28:	mov	w23, #0x90                  	// #144
  403f2c:	mov	w21, #0xfffffffd            	// #-3
  403f30:	b	404000 <feof@plt+0xf20>
  403f34:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  403f38:	ldr	x19, [x9, #1656]
  403f3c:	sub	x20, x8, x19
  403f40:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  403f44:	cmp	x20, x8
  403f48:	b.eq	407d38 <feof@plt+0x4c58>  // b.none
  403f4c:	asr	x24, x20, #3
  403f50:	cmp	x20, #0x0
  403f54:	csinc	x8, x24, xzr, ne  // ne = any
  403f58:	adds	x8, x8, x24
  403f5c:	lsr	x10, x8, #60
  403f60:	cset	w9, cs  // cs = hs, nlast
  403f64:	cmp	x10, #0x0
  403f68:	cset	w10, ne  // ne = any
  403f6c:	orr	w9, w9, w10
  403f70:	cmp	w9, #0x0
  403f74:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  403f78:	csel	x23, x9, x8, ne  // ne = any
  403f7c:	cbz	x23, 403fac <feof@plt+0xecc>
  403f80:	lsl	x0, x23, #3
  403f84:	bl	402d30 <_Znwm@plt>
  403f88:	mov	x22, x0
  403f8c:	b	403fb0 <feof@plt+0xed0>
  403f90:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  403f94:	ldr	x0, [x8, #1464]
  403f98:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  403f9c:	add	x1, x1, #0x489
  403fa0:	mov	x2, x20
  403fa4:	bl	40f8a4 <feof@plt+0xc7c4>
  403fa8:	b	4053f4 <feof@plt+0x2314>
  403fac:	mov	x22, xzr
  403fb0:	add	x24, x22, x24, lsl #3
  403fb4:	cmp	x20, #0x1
  403fb8:	str	x21, [x24]
  403fbc:	b.lt	403fd0 <feof@plt+0xef0>  // b.tstop
  403fc0:	mov	x0, x22
  403fc4:	mov	x1, x19
  403fc8:	mov	x2, x20
  403fcc:	bl	402e30 <memmove@plt>
  403fd0:	add	x20, x24, #0x8
  403fd4:	mov	w21, #0xfffffffd            	// #-3
  403fd8:	cbz	x19, 403fe4 <feof@plt+0xf04>
  403fdc:	mov	x0, x19
  403fe0:	bl	402d00 <_ZdlPv@plt>
  403fe4:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  403fe8:	add	x9, x9, #0x678
  403fec:	stp	x22, x20, [x9], #16
  403ff0:	add	x8, x22, x23, lsl #3
  403ff4:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  403ff8:	add	x22, x22, #0x5c8
  403ffc:	mov	w23, #0x90                  	// #144
  404000:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  404004:	ldr	x0, [x19, #1792]
  404008:	str	x8, [x9]
  40400c:	bl	407ffc <feof@plt+0x4f1c>
  404010:	cbz	w0, 4040d0 <feof@plt+0xff0>
  404014:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404018:	ldr	x0, [x8, #1480]
  40401c:	bl	402db0 <fileno_unlocked@plt>
  404020:	mov	w1, w0
  404024:	sub	x2, x29, #0xb0
  404028:	mov	w0, wzr
  40402c:	bl	402980 <__fxstat@plt>
  404030:	ldur	x8, [x29, #-88]
  404034:	cmp	w0, #0x0
  404038:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40403c:	mov	w0, #0x1                   	// #1
  404040:	csel	x8, x8, xzr, eq  // eq = none
  404044:	str	x8, [x9, #1800]
  404048:	bl	4084d8 <feof@plt+0x53f8>
  40404c:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  404050:	cbz	x0, 4040f0 <feof@plt+0x1010>
  404054:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404058:	ldr	w8, [x0]
  40405c:	ldr	w9, [x9, #1512]
  404060:	rev	w10, w8
  404064:	cmp	w9, #0x0
  404068:	mov	w9, #0x6e6f                	// #28271
  40406c:	csel	w8, w8, w10, eq  // eq = none
  404070:	movk	w9, #0x6763, lsl #16
  404074:	cmp	w8, w9
  404078:	b.eq	404098 <feof@plt+0xfb8>  // b.none
  40407c:	mov	w9, #0x6367                	// #25447
  404080:	movk	w9, #0x6f6e, lsl #16
  404084:	cmp	w8, w9
  404088:	b.ne	4040f0 <feof@plt+0x1010>  // b.any
  40408c:	mov	w8, #0x1                   	// #1
  404090:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404094:	str	w8, [x9, #1512]
  404098:	mov	w0, #0x1                   	// #1
  40409c:	bl	4084d8 <feof@plt+0x53f8>
  4040a0:	cbz	x0, 404144 <feof@plt+0x1064>
  4040a4:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4040a8:	ldr	w8, [x0]
  4040ac:	ldr	w9, [x9, #1512]
  4040b0:	rev	w10, w8
  4040b4:	cmp	w9, #0x0
  4040b8:	mov	w9, #0x322a                	// #12842
  4040bc:	csel	w8, w8, w10, eq  // eq = none
  4040c0:	movk	w9, #0x4139, lsl #16
  4040c4:	cmp	w8, w9
  4040c8:	b.ne	404148 <feof@plt+0x1068>  // b.any
  4040cc:	b	404180 <feof@plt+0x10a0>
  4040d0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4040d4:	ldr	x0, [x8, #1464]
  4040d8:	ldr	x2, [x19, #1792]
  4040dc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4040e0:	add	x1, x1, #0x4cf
  4040e4:	bl	40f8a4 <feof@plt+0xc7c4>
  4040e8:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  4040ec:	b	404ec0 <feof@plt+0x1de0>
  4040f0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4040f4:	ldr	x0, [x8, #1464]
  4040f8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4040fc:	ldr	x2, [x8, #1792]
  404100:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404104:	add	x1, x1, #0x4ea
  404108:	bl	40f8a4 <feof@plt+0xc7c4>
  40410c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404110:	ldr	x0, [x8, #1480]
  404114:	cbz	x0, 404124 <feof@plt+0x1044>
  404118:	bl	402ae0 <fclose@plt>
  40411c:	str	xzr, [x22]
  404120:	str	wzr, [x22, #16]
  404124:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  404128:	add	x20, x20, #0x5e4
  40412c:	ldur	x0, [x20, #20]
  404130:	bl	402b20 <free@plt>
  404134:	str	wzr, [x20]
  404138:	stur	xzr, [x20, #20]
  40413c:	stur	xzr, [x20, #12]
  404140:	b	404ec0 <feof@plt+0x1de0>
  404144:	mov	w8, wzr
  404148:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40414c:	ldr	x0, [x9, #1464]
  404150:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404154:	ldr	x2, [x9, #1792]
  404158:	rev	w8, w8
  40415c:	stur	w8, [x29, #-176]
  404160:	mov	w8, #0x3941                	// #14657
  404164:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404168:	movk	w8, #0x2a32, lsl #16
  40416c:	sub	x3, x29, #0xb0
  404170:	sub	x4, x29, #0xe8
  404174:	add	x1, x1, #0x504
  404178:	stur	w8, [x29, #-232]
  40417c:	bl	40f8a4 <feof@plt+0xc7c4>
  404180:	mov	w0, #0x1                   	// #1
  404184:	bl	4084d8 <feof@plt+0x53f8>
  404188:	cbz	x0, 4041a8 <feof@plt+0x10c8>
  40418c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404190:	ldr	w8, [x0]
  404194:	ldr	w9, [x9, #1512]
  404198:	rev	w10, w8
  40419c:	cmp	w9, #0x0
  4041a0:	csel	w8, w8, w10, eq  // eq = none
  4041a4:	b	4041ac <feof@plt+0x10cc>
  4041a8:	mov	w8, wzr
  4041ac:	mov	w0, #0x1                   	// #1
  4041b0:	stur	w8, [x29, #-12]
  4041b4:	bl	4084d8 <feof@plt+0x53f8>
  4041b8:	cbz	x0, 4041e4 <feof@plt+0x1104>
  4041bc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4041c0:	ldr	w8, [x0]
  4041c4:	ldr	w9, [x9, #1512]
  4041c8:	rev	w10, w8
  4041cc:	cmp	w9, #0x0
  4041d0:	csel	w0, w8, w10, eq  // eq = none
  4041d4:	cbz	w0, 4041e0 <feof@plt+0x1100>
  4041d8:	bl	4084d8 <feof@plt+0x53f8>
  4041dc:	b	4041e4 <feof@plt+0x1104>
  4041e0:	mov	x0, xzr
  4041e4:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  4041e8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4041ec:	str	x0, [x8, #1808]
  4041f0:	mov	w0, #0x1                   	// #1
  4041f4:	bl	4084d8 <feof@plt+0x53f8>
  4041f8:	cbz	x0, 404218 <feof@plt+0x1138>
  4041fc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404200:	ldr	w8, [x0]
  404204:	ldr	w9, [x9, #1512]
  404208:	rev	w10, w8
  40420c:	cmp	w9, #0x0
  404210:	csel	w8, w8, w10, eq  // eq = none
  404214:	b	40421c <feof@plt+0x113c>
  404218:	mov	w8, wzr
  40421c:	mov	x20, xzr
  404220:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404224:	str	wzr, [sp, #240]
  404228:	str	w8, [x9, #1816]
  40422c:	b	404248 <feof@plt+0x1168>
  404230:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404234:	str	w9, [x8, #1492]
  404238:	ldr	x8, [x22]
  40423c:	cbz	x8, 404e34 <feof@plt+0x1d54>
  404240:	ldr	w8, [x22, #24]
  404244:	cbnz	w8, 404e34 <feof@plt+0x1d54>
  404248:	mov	w0, #0x1                   	// #1
  40424c:	bl	4084d8 <feof@plt+0x53f8>
  404250:	cbz	x0, 404e50 <feof@plt+0x1d70>
  404254:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404258:	ldr	w8, [x0]
  40425c:	ldr	w9, [x9, #1512]
  404260:	rev	w10, w8
  404264:	cmp	w9, #0x0
  404268:	csel	w19, w8, w10, eq  // eq = none
  40426c:	cbz	w19, 404e50 <feof@plt+0x1d70>
  404270:	mov	w0, #0x1                   	// #1
  404274:	bl	4084d8 <feof@plt+0x53f8>
  404278:	cbz	x0, 404298 <feof@plt+0x11b8>
  40427c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404280:	ldr	w8, [x0]
  404284:	ldr	w9, [x9, #1512]
  404288:	rev	w10, w8
  40428c:	cmp	w9, #0x0
  404290:	csel	w23, w8, w10, eq  // eq = none
  404294:	b	40429c <feof@plt+0x11bc>
  404298:	mov	w23, wzr
  40429c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4042a0:	ldr	w8, [x8, #1508]
  4042a4:	cmp	w8, #0x0
  4042a8:	b.le	407d74 <feof@plt+0x4c94>
  4042ac:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4042b0:	add	x8, x8, #0x5d0
  4042b4:	ldp	w25, w26, [x8]
  4042b8:	mov	w8, #0x1000000             	// #16777216
  4042bc:	cmp	w19, w8
  4042c0:	b.ne	4042ec <feof@plt+0x120c>  // b.any
  4042c4:	mov	w0, #0x1                   	// #1
  4042c8:	bl	4084d8 <feof@plt+0x53f8>
  4042cc:	cbz	x0, 4043a0 <feof@plt+0x12c0>
  4042d0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4042d4:	ldr	w8, [x0]
  4042d8:	ldr	w9, [x9, #1512]
  4042dc:	rev	w10, w8
  4042e0:	cmp	w9, #0x0
  4042e4:	csel	w8, w8, w10, eq  // eq = none
  4042e8:	b	4043a4 <feof@plt+0x12c4>
  4042ec:	cbz	x20, 40435c <feof@plt+0x127c>
  4042f0:	mov	w8, #0x1410000             	// #21037056
  4042f4:	cmp	w19, w8
  4042f8:	b.ne	40435c <feof@plt+0x127c>  // b.any
  4042fc:	mov	x19, x20
  404300:	ldr	x8, [x19, #32]!
  404304:	ldr	x9, [x19, #8]
  404308:	cmp	x8, x9
  40430c:	b.eq	404678 <feof@plt+0x1598>  // b.none
  404310:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404314:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404318:	ldrb	w8, [x8, #1724]
  40431c:	ldr	x21, [x9, #1464]
  404320:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404324:	ldr	x19, [x9, #1792]
  404328:	cmp	w8, #0x1
  40432c:	b.ne	4046a0 <feof@plt+0x15c0>  // b.any
  404330:	ldr	x3, [x20, #8]
  404334:	cbnz	x3, 4046a4 <feof@plt+0x15c4>
  404338:	ldr	x0, [x20]
  40433c:	mov	w1, #0x1                   	// #1
  404340:	bl	44a420 <feof@plt+0x47340>
  404344:	mov	x3, x0
  404348:	str	x0, [x20, #8]
  40434c:	cbnz	x0, 4046a4 <feof@plt+0x15c4>
  404350:	ldr	x3, [x20]
  404354:	str	x3, [x20, #8]
  404358:	b	4046a4 <feof@plt+0x15c4>
  40435c:	cbz	x20, 404430 <feof@plt+0x1350>
  404360:	mov	w8, #0x1430000             	// #21168128
  404364:	cmp	w19, w8
  404368:	b.ne	404430 <feof@plt+0x1350>  // b.any
  40436c:	mov	w0, #0x1                   	// #1
  404370:	bl	4084d8 <feof@plt+0x53f8>
  404374:	str	w23, [sp, #256]
  404378:	str	w25, [sp, #228]
  40437c:	str	w26, [sp, #192]
  404380:	cbz	x0, 404830 <feof@plt+0x1750>
  404384:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404388:	ldr	w8, [x0]
  40438c:	ldr	w9, [x9, #1512]
  404390:	rev	w10, w8
  404394:	cmp	w9, #0x0
  404398:	csel	w9, w8, w10, eq  // eq = none
  40439c:	b	404834 <feof@plt+0x1754>
  4043a0:	mov	w8, wzr
  4043a4:	mov	w0, #0x1                   	// #1
  4043a8:	stur	w8, [x29, #-176]
  4043ac:	bl	4084d8 <feof@plt+0x53f8>
  4043b0:	cbz	x0, 4043d0 <feof@plt+0x12f0>
  4043b4:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4043b8:	ldr	w8, [x0]
  4043bc:	ldr	w9, [x9, #1512]
  4043c0:	rev	w10, w8
  4043c4:	cmp	w9, #0x0
  4043c8:	csel	w19, w8, w10, eq  // eq = none
  4043cc:	b	4043d4 <feof@plt+0x12f4>
  4043d0:	mov	w19, wzr
  4043d4:	mov	w0, #0x1                   	// #1
  4043d8:	bl	4084d8 <feof@plt+0x53f8>
  4043dc:	cbz	x0, 4043fc <feof@plt+0x131c>
  4043e0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4043e4:	ldr	w8, [x0]
  4043e8:	ldr	w9, [x9, #1512]
  4043ec:	rev	w10, w8
  4043f0:	cmp	w9, #0x0
  4043f4:	csel	w27, w8, w10, eq  // eq = none
  4043f8:	b	404400 <feof@plt+0x1320>
  4043fc:	mov	w27, wzr
  404400:	mov	w0, #0x1                   	// #1
  404404:	bl	4084d8 <feof@plt+0x53f8>
  404408:	cbz	x0, 404470 <feof@plt+0x1390>
  40440c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404410:	ldr	w8, [x0]
  404414:	ldr	w9, [x9, #1512]
  404418:	rev	w10, w8
  40441c:	cmp	w9, #0x0
  404420:	csel	w0, w8, w10, eq  // eq = none
  404424:	cbz	w0, 40446c <feof@plt+0x138c>
  404428:	bl	4084d8 <feof@plt+0x53f8>
  40442c:	b	404470 <feof@plt+0x1390>
  404430:	cbz	x20, 4047f0 <feof@plt+0x1710>
  404434:	mov	w8, #0x1450000             	// #21299200
  404438:	cmp	w19, w8
  40443c:	b.ne	4047f0 <feof@plt+0x1710>  // b.any
  404440:	mov	w0, #0x1                   	// #1
  404444:	bl	4084d8 <feof@plt+0x53f8>
  404448:	str	w23, [sp, #256]
  40444c:	cbz	x0, 404c00 <feof@plt+0x1b20>
  404450:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404454:	ldr	w8, [x0]
  404458:	ldr	w9, [x9, #1512]
  40445c:	rev	w10, w8
  404460:	cmp	w9, #0x0
  404464:	csel	w8, w8, w10, eq  // eq = none
  404468:	b	404c04 <feof@plt+0x1b24>
  40446c:	mov	x0, xzr
  404470:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  404474:	mov	x24, x0
  404478:	mov	w0, #0x1                   	// #1
  40447c:	bl	4084d8 <feof@plt+0x53f8>
  404480:	cbz	x0, 4044a0 <feof@plt+0x13c0>
  404484:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404488:	ldr	w8, [x0]
  40448c:	ldr	w9, [x9, #1512]
  404490:	rev	w10, w8
  404494:	cmp	w9, #0x0
  404498:	csel	w21, w8, w10, eq  // eq = none
  40449c:	b	4044a4 <feof@plt+0x13c4>
  4044a0:	mov	w21, wzr
  4044a4:	mov	w0, #0x1                   	// #1
  4044a8:	bl	4084d8 <feof@plt+0x53f8>
  4044ac:	cbz	x0, 4044d8 <feof@plt+0x13f8>
  4044b0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4044b4:	ldr	w8, [x0]
  4044b8:	ldr	w9, [x9, #1512]
  4044bc:	rev	w10, w8
  4044c0:	cmp	w9, #0x0
  4044c4:	csel	w0, w8, w10, eq  // eq = none
  4044c8:	cbz	w0, 4044d4 <feof@plt+0x13f4>
  4044cc:	bl	4084d8 <feof@plt+0x53f8>
  4044d0:	b	4044d8 <feof@plt+0x13f8>
  4044d4:	mov	x0, xzr
  4044d8:	bl	4080f0 <feof@plt+0x5010>
  4044dc:	mov	w28, w0
  4044e0:	mov	w0, #0x1                   	// #1
  4044e4:	bl	4084d8 <feof@plt+0x53f8>
  4044e8:	cbz	x0, 40450c <feof@plt+0x142c>
  4044ec:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4044f0:	ldr	w8, [x0]
  4044f4:	ldr	w9, [x9, #1512]
  4044f8:	rev	w10, w8
  4044fc:	cmp	w9, #0x0
  404500:	csel	w8, w8, w10, eq  // eq = none
  404504:	str	w8, [sp, #248]
  404508:	b	404510 <feof@plt+0x1430>
  40450c:	str	wzr, [sp, #248]
  404510:	mov	w0, #0x1                   	// #1
  404514:	str	w23, [sp, #256]
  404518:	bl	4084d8 <feof@plt+0x53f8>
  40451c:	cbz	x0, 40453c <feof@plt+0x145c>
  404520:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404524:	ldr	w8, [x0]
  404528:	ldr	w9, [x9, #1512]
  40452c:	rev	w10, w8
  404530:	cmp	w9, #0x0
  404534:	csel	w23, w8, w10, eq  // eq = none
  404538:	b	404540 <feof@plt+0x1460>
  40453c:	mov	w23, wzr
  404540:	mov	w0, #0x1                   	// #1
  404544:	bl	4084d8 <feof@plt+0x53f8>
  404548:	cbz	x0, 40456c <feof@plt+0x148c>
  40454c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404550:	ldr	w8, [x0]
  404554:	ldr	w9, [x9, #1512]
  404558:	rev	w10, w8
  40455c:	cmp	w9, #0x0
  404560:	csel	w8, w8, w10, eq  // eq = none
  404564:	str	w8, [sp, #240]
  404568:	b	404570 <feof@plt+0x1490>
  40456c:	str	wzr, [sp, #240]
  404570:	mov	w0, #0x1                   	// #1
  404574:	bl	4084d8 <feof@plt+0x53f8>
  404578:	cbz	x0, 40459c <feof@plt+0x14bc>
  40457c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404580:	ldr	w8, [x0]
  404584:	ldr	w9, [x9, #1512]
  404588:	rev	w10, w8
  40458c:	cmp	w9, #0x0
  404590:	csel	w8, w8, w10, eq  // eq = none
  404594:	str	w8, [sp, #232]
  404598:	b	4045a0 <feof@plt+0x14c0>
  40459c:	str	wzr, [sp, #232]
  4045a0:	mov	w0, #0x90                  	// #144
  4045a4:	bl	402d30 <_Znwm@plt>
  4045a8:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  4045ac:	add	x10, x10, #0x608
  4045b0:	ldp	x8, x9, [x10]
  4045b4:	mov	x20, x0
  4045b8:	movi	v0.2d, #0x0
  4045bc:	stp	xzr, xzr, [x0, #40]
  4045c0:	cmp	x8, x9
  4045c4:	str	xzr, [x0, #32]
  4045c8:	str	wzr, [x0, #56]
  4045cc:	stp	q0, q0, [x0, #64]
  4045d0:	stur	q0, [x0, #92]
  4045d4:	stp	q0, q0, [x0, #112]
  4045d8:	stp	xzr, xzr, [x0, #8]
  4045dc:	str	xzr, [x0]
  4045e0:	stur	xzr, [x0, #21]
  4045e4:	b.eq	4045fc <feof@plt+0x151c>  // b.none
  4045e8:	str	x20, [x8]
  4045ec:	ldr	x8, [x10]
  4045f0:	mov	x9, x10
  4045f4:	add	x8, x8, #0x8
  4045f8:	b	404728 <feof@plt+0x1648>
  4045fc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404600:	str	w23, [sp, #200]
  404604:	mov	w23, w19
  404608:	ldr	x19, [x9, #1536]
  40460c:	str	w28, [sp, #208]
  404610:	mov	w28, w26
  404614:	str	w21, [sp, #216]
  404618:	sub	x26, x8, x19
  40461c:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  404620:	cmp	x26, x8
  404624:	b.eq	407d38 <feof@plt+0x4c58>  // b.none
  404628:	asr	x22, x26, #3
  40462c:	cmp	x26, #0x0
  404630:	csinc	x8, x22, xzr, ne  // ne = any
  404634:	adds	x8, x8, x22
  404638:	lsr	x10, x8, #60
  40463c:	cset	w9, cs  // cs = hs, nlast
  404640:	cmp	x10, #0x0
  404644:	cset	w10, ne  // ne = any
  404648:	orr	w9, w9, w10
  40464c:	cmp	w9, #0x0
  404650:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  404654:	mov	x21, x24
  404658:	mov	w24, w27
  40465c:	csel	x27, x9, x8, ne  // ne = any
  404660:	str	w25, [sp, #228]
  404664:	cbz	x27, 4046bc <feof@plt+0x15dc>
  404668:	lsl	x0, x27, #3
  40466c:	bl	402d30 <_Znwm@plt>
  404670:	mov	x25, x0
  404674:	b	4046c0 <feof@plt+0x15e0>
  404678:	mov	w0, #0x1                   	// #1
  40467c:	bl	4084d8 <feof@plt+0x53f8>
  404680:	cbz	x0, 404b4c <feof@plt+0x1a6c>
  404684:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404688:	ldr	w8, [x0]
  40468c:	ldr	w9, [x9, #1512]
  404690:	rev	w10, w8
  404694:	cmp	w9, #0x0
  404698:	csel	w8, w8, w10, eq  // eq = none
  40469c:	b	404b50 <feof@plt+0x1a70>
  4046a0:	ldr	x3, [x20]
  4046a4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4046a8:	mov	x0, x21
  4046ac:	add	x1, x1, #0x526
  4046b0:	mov	x2, x19
  4046b4:	bl	40f8a4 <feof@plt+0xc7c4>
  4046b8:	b	40478c <feof@plt+0x16ac>
  4046bc:	mov	x25, xzr
  4046c0:	add	x22, x25, x22, lsl #3
  4046c4:	cmp	x26, #0x1
  4046c8:	str	x20, [x22]
  4046cc:	b.lt	4046e0 <feof@plt+0x1600>  // b.tstop
  4046d0:	mov	x0, x25
  4046d4:	mov	x1, x19
  4046d8:	mov	x2, x26
  4046dc:	bl	402e30 <memmove@plt>
  4046e0:	add	x22, x22, #0x8
  4046e4:	cbz	x19, 4046f0 <feof@plt+0x1610>
  4046e8:	mov	x0, x19
  4046ec:	bl	402d00 <_ZdlPv@plt>
  4046f0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4046f4:	add	x9, x9, #0x600
  4046f8:	stp	x25, x22, [x9], #16
  4046fc:	add	x8, x25, x27, lsl #3
  404700:	ldr	w25, [sp, #228]
  404704:	mov	w26, w28
  404708:	mov	w19, w23
  40470c:	mov	w27, w24
  404710:	mov	x24, x21
  404714:	ldr	w21, [sp, #216]
  404718:	ldr	w28, [sp, #208]
  40471c:	ldr	w23, [sp, #200]
  404720:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  404724:	add	x22, x22, #0x5c8
  404728:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40472c:	sub	x1, x29, #0xb0
  404730:	add	x0, x0, #0x618
  404734:	str	x8, [x9]
  404738:	bl	40b1e0 <feof@plt+0x8100>
  40473c:	ldr	w9, [sp, #240]
  404740:	str	x20, [x0]
  404744:	ldr	w8, [sp, #248]
  404748:	ubfiz	w10, w21, #1, #1
  40474c:	str	w9, [x20, #96]
  404750:	ldr	w9, [sp, #232]
  404754:	stp	w8, w23, [x20, #88]
  404758:	ldur	w8, [x29, #-176]
  40475c:	ldr	w23, [sp, #256]
  404760:	stp	w9, w28, [x20, #100]
  404764:	ldrb	w9, [x20, #28]
  404768:	str	w8, [x20, #16]
  40476c:	str	x24, [x20]
  404770:	stp	w19, w27, [x20, #20]
  404774:	and	w8, w9, #0xfffffffd
  404778:	orr	w8, w8, w10
  40477c:	strb	w8, [x20, #28]
  404780:	mov	w8, #0x1000000             	// #16777216
  404784:	str	w8, [sp, #240]
  404788:	mov	w28, #0x68                  	// #104
  40478c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404790:	ldr	w8, [x8, #1508]
  404794:	cmp	w8, #0x0
  404798:	b.le	407d8c <feof@plt+0x4cac>
  40479c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4047a0:	add	x8, x8, #0x5d0
  4047a4:	ldr	w9, [x8]
  4047a8:	ldr	w10, [x8, #8]
  4047ac:	add	w8, w25, w23
  4047b0:	add	w8, w8, w26
  4047b4:	sub	w9, w8, w9
  4047b8:	cmp	w9, w10
  4047bc:	b.ls	404230 <feof@plt+0x1150>  // b.plast
  4047c0:	ldr	x0, [x22]
  4047c4:	lsl	w1, w8, #2
  4047c8:	mov	w2, wzr
  4047cc:	stp	wzr, wzr, [x22, #12]
  4047d0:	bl	4030b0 <fseek@plt>
  4047d4:	ldr	x0, [x22]
  4047d8:	bl	402a90 <ftell@plt>
  4047dc:	lsr	x8, x0, #2
  4047e0:	str	w8, [x22, #8]
  4047e4:	ldr	x8, [x22]
  4047e8:	cbnz	x8, 404240 <feof@plt+0x1160>
  4047ec:	b	404e34 <feof@plt+0x1d54>
  4047f0:	ldr	w8, [sp, #240]
  4047f4:	cbz	w8, 404828 <feof@plt+0x1748>
  4047f8:	mov	w10, w8
  4047fc:	sub	w8, w8, #0x1
  404800:	sub	w9, w19, #0x1
  404804:	eor	w8, w8, w10
  404808:	eor	w9, w9, w19
  40480c:	cmp	w9, w8, lsr #8
  404810:	b.ne	404824 <feof@plt+0x1744>  // b.any
  404814:	ldr	w9, [sp, #240]
  404818:	eor	w9, w19, w9
  40481c:	bics	wzr, w9, w8
  404820:	b.eq	40478c <feof@plt+0x16ac>  // b.none
  404824:	mov	x20, xzr
  404828:	str	wzr, [sp, #240]
  40482c:	b	40478c <feof@plt+0x16ac>
  404830:	mov	w9, wzr
  404834:	ldr	x8, [x20, #32]
  404838:	mov	x11, #0x4ec5                	// #20165
  40483c:	movk	x11, #0xc4ec, lsl #16
  404840:	movk	x11, #0xec4e, lsl #32
  404844:	umaddl	x8, w9, w28, x8
  404848:	str	w9, [x8, #32]
  40484c:	ldp	x8, x10, [x20, #32]
  404850:	movk	x11, #0x4ec4, lsl #48
  404854:	mov	w23, w9
  404858:	sub	x10, x10, x8
  40485c:	asr	x10, x10, #3
  404860:	mul	x10, x10, x11
  404864:	cmp	x10, x23
  404868:	b.ls	404e34 <feof@plt+0x1d54>  // b.plast
  40486c:	umaddl	x24, w9, w28, x8
  404870:	ldr	x9, [x24]
  404874:	cbnz	x9, 404e34 <feof@plt+0x1d54>
  404878:	ldr	w9, [sp, #256]
  40487c:	sub	w9, w9, #0x1
  404880:	lsr	w25, w9, #1
  404884:	cbz	w25, 404b3c <feof@plt+0x1a5c>
  404888:	madd	x8, x23, x28, x8
  40488c:	add	x27, x20, #0x48
  404890:	add	x26, x8, #0x10
  404894:	add	x8, x20, #0x50
  404898:	str	wzr, [sp, #232]
  40489c:	str	x8, [sp, #248]
  4048a0:	str	x26, [sp, #216]
  4048a4:	b	4048c4 <feof@plt+0x17e4>
  4048a8:	str	xzr, [x8]
  4048ac:	ldr	x8, [x27]
  4048b0:	mov	x9, x27
  4048b4:	add	x8, x8, #0x8
  4048b8:	str	x8, [x9]
  4048bc:	sub	w25, w25, #0x1
  4048c0:	cbz	w25, 404af0 <feof@plt+0x1a10>
  4048c4:	mov	w0, #0x1                   	// #1
  4048c8:	bl	4084d8 <feof@plt+0x53f8>
  4048cc:	cbz	x0, 4048ec <feof@plt+0x180c>
  4048d0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4048d4:	ldr	w8, [x0]
  4048d8:	ldr	w9, [x9, #1512]
  4048dc:	rev	w10, w8
  4048e0:	cmp	w9, #0x0
  4048e4:	csel	w19, w8, w10, eq  // eq = none
  4048e8:	b	4048f0 <feof@plt+0x1810>
  4048ec:	mov	w19, wzr
  4048f0:	mov	w0, #0x1                   	// #1
  4048f4:	bl	4084d8 <feof@plt+0x53f8>
  4048f8:	cbz	x0, 404918 <feof@plt+0x1838>
  4048fc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404900:	ldr	w8, [x0]
  404904:	ldr	w9, [x9, #1512]
  404908:	rev	w10, w8
  40490c:	cmp	w9, #0x0
  404910:	csel	w21, w8, w10, eq  // eq = none
  404914:	b	40491c <feof@plt+0x183c>
  404918:	mov	w21, wzr
  40491c:	ldp	x9, x8, [x20, #32]
  404920:	mov	w19, w19
  404924:	sub	x8, x8, x9
  404928:	mov	x9, #0x4ec5                	// #20165
  40492c:	movk	x9, #0xc4ec, lsl #16
  404930:	movk	x9, #0xec4e, lsl #32
  404934:	asr	x8, x8, #3
  404938:	movk	x9, #0x4ec4, lsl #48
  40493c:	mul	x8, x8, x9
  404940:	cmp	x8, x19
  404944:	b.ls	404e34 <feof@plt+0x1d54>  // b.plast
  404948:	mov	w0, #0x1                   	// #1
  40494c:	mov	w1, #0x38                  	// #56
  404950:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  404954:	ldrh	w9, [x0, #32]
  404958:	ldr	x8, [x20, #32]
  40495c:	mul	x10, x19, x28
  404960:	str	x24, [x0]
  404964:	and	w9, w9, #0xfff0
  404968:	add	x8, x8, x10
  40496c:	bfi	w9, w21, #1, #3
  404970:	stp	x8, xzr, [x0, #8]
  404974:	strh	w9, [x0, #32]
  404978:	ldr	x8, [x24]
  40497c:	str	x8, [x0, #40]
  404980:	str	x0, [x24]
  404984:	ldr	x8, [x26]
  404988:	add	x8, x8, #0x1
  40498c:	str	x8, [x26]
  404990:	ldr	x8, [x20, #32]
  404994:	add	x8, x8, x10
  404998:	ldr	x8, [x8, #8]
  40499c:	str	x8, [x0, #48]
  4049a0:	ldr	x8, [x20, #32]
  4049a4:	add	x8, x8, x10
  4049a8:	str	x0, [x8, #8]
  4049ac:	ldr	x8, [x20, #32]
  4049b0:	add	x8, x8, x10
  4049b4:	ldr	x9, [x8, #24]
  4049b8:	add	x9, x9, #0x1
  4049bc:	str	x9, [x8, #24]
  4049c0:	ldrh	w8, [x0, #32]
  4049c4:	tbz	w8, #2, 4049f4 <feof@plt+0x1914>
  4049c8:	cbz	w23, 404a6c <feof@plt+0x198c>
  4049cc:	ldr	x8, [x20, #32]
  4049d0:	madd	x8, x23, x28, x8
  4049d4:	ldrb	w9, [x8, #48]
  4049d8:	orr	w9, w9, #0x10
  4049dc:	strb	w9, [x8, #48]
  4049e0:	ldrh	w8, [x0, #32]
  4049e4:	mov	w9, #0x1                   	// #1
  4049e8:	str	w9, [sp, #232]
  4049ec:	orr	w8, w8, #0x20
  4049f0:	strh	w8, [x0, #32]
  4049f4:	tbnz	w8, #1, 4048bc <feof@plt+0x17dc>
  4049f8:	ldr	x9, [sp, #248]
  4049fc:	ldr	x8, [x27]
  404a00:	ldr	x9, [x9]
  404a04:	cmp	x8, x9
  404a08:	b.ne	4048a8 <feof@plt+0x17c8>  // b.any
  404a0c:	ldr	x19, [x20, #64]
  404a10:	sub	x21, x8, x19
  404a14:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  404a18:	cmp	x21, x8
  404a1c:	b.eq	407d38 <feof@plt+0x4c58>  // b.none
  404a20:	mov	x26, x23
  404a24:	mov	x23, x27
  404a28:	asr	x27, x21, #3
  404a2c:	cmp	x21, #0x0
  404a30:	csinc	x8, x27, xzr, ne  // ne = any
  404a34:	adds	x8, x8, x27
  404a38:	lsr	x10, x8, #60
  404a3c:	cset	w9, cs  // cs = hs, nlast
  404a40:	cmp	x10, #0x0
  404a44:	cset	w10, ne  // ne = any
  404a48:	orr	w9, w9, w10
  404a4c:	cmp	w9, #0x0
  404a50:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  404a54:	csel	x28, x9, x8, ne  // ne = any
  404a58:	cbz	x28, 404a94 <feof@plt+0x19b4>
  404a5c:	lsl	x0, x28, #3
  404a60:	bl	402d30 <_Znwm@plt>
  404a64:	mov	x22, x0
  404a68:	b	404a98 <feof@plt+0x19b8>
  404a6c:	orr	w8, w8, #0x40
  404a70:	strh	w8, [x0, #32]
  404a74:	ldr	x8, [x20, #32]
  404a78:	madd	x8, x19, x28, x8
  404a7c:	ldrb	w9, [x8, #48]
  404a80:	orr	w9, w9, #0x40
  404a84:	strb	w9, [x8, #48]
  404a88:	ldrh	w8, [x0, #32]
  404a8c:	tbnz	w8, #1, 4048bc <feof@plt+0x17dc>
  404a90:	b	4049f8 <feof@plt+0x1918>
  404a94:	mov	x22, xzr
  404a98:	add	x27, x22, x27, lsl #3
  404a9c:	cmp	x21, #0x1
  404aa0:	str	xzr, [x27]
  404aa4:	b.lt	404ab8 <feof@plt+0x19d8>  // b.tstop
  404aa8:	mov	x0, x22
  404aac:	mov	x1, x19
  404ab0:	mov	x2, x21
  404ab4:	bl	402e30 <memmove@plt>
  404ab8:	add	x21, x27, #0x8
  404abc:	cbz	x19, 404ac8 <feof@plt+0x19e8>
  404ac0:	mov	x0, x19
  404ac4:	bl	402d00 <_ZdlPv@plt>
  404ac8:	stp	x22, x21, [x20, #64]
  404acc:	ldr	x9, [sp, #248]
  404ad0:	mov	x27, x23
  404ad4:	mov	x23, x26
  404ad8:	ldr	x26, [sp, #216]
  404adc:	add	x8, x22, x28, lsl #3
  404ae0:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  404ae4:	add	x22, x22, #0x5c8
  404ae8:	mov	w28, #0x68                  	// #104
  404aec:	b	4048b8 <feof@plt+0x17d8>
  404af0:	ldr	w8, [sp, #232]
  404af4:	cbz	w8, 404b3c <feof@plt+0x1a5c>
  404af8:	ldr	x8, [x24]
  404afc:	ldr	w23, [sp, #256]
  404b00:	ldr	w25, [sp, #228]
  404b04:	ldr	w26, [sp, #192]
  404b08:	cbnz	x8, 404b18 <feof@plt+0x1a38>
  404b0c:	b	40478c <feof@plt+0x16ac>
  404b10:	ldr	x8, [x8, #40]
  404b14:	cbz	x8, 40478c <feof@plt+0x16ac>
  404b18:	ldrh	w9, [x8, #32]
  404b1c:	tst	w9, #0xc
  404b20:	b.ne	404b10 <feof@plt+0x1a30>  // b.any
  404b24:	orr	w9, w9, #0x10
  404b28:	strh	w9, [x8, #32]
  404b2c:	ldrb	w9, [x20, #28]
  404b30:	orr	w9, w9, #0x1
  404b34:	strb	w9, [x20, #28]
  404b38:	b	404b10 <feof@plt+0x1a30>
  404b3c:	ldr	w23, [sp, #256]
  404b40:	ldr	w25, [sp, #228]
  404b44:	ldr	w26, [sp, #192]
  404b48:	b	40478c <feof@plt+0x16ac>
  404b4c:	mov	w8, wzr
  404b50:	ldp	x9, x21, [x20, #32]
  404b54:	mov	x11, #0x4ec5                	// #20165
  404b58:	movk	x11, #0xc4ec, lsl #16
  404b5c:	movk	x11, #0xec4e, lsl #32
  404b60:	sub	x10, x21, x9
  404b64:	asr	x10, x10, #3
  404b68:	movk	x11, #0x4ec4, lsl #48
  404b6c:	mov	w8, w8
  404b70:	mul	x10, x10, x11
  404b74:	cmp	x10, x8
  404b78:	b.cs	404b8c <feof@plt+0x1aac>  // b.hs, b.nlast
  404b7c:	sub	x1, x8, x10
  404b80:	mov	x0, x19
  404b84:	bl	40c280 <feof@plt+0x91a0>
  404b88:	b	40478c <feof@plt+0x16ac>
  404b8c:	b.ls	40478c <feof@plt+0x16ac>  // b.plast
  404b90:	madd	x22, x8, x28, x9
  404b94:	cmp	x22, x21
  404b98:	b.eq	404e28 <feof@plt+0x1d48>  // b.none
  404b9c:	mov	w27, w26
  404ba0:	mov	w26, w25
  404ba4:	mov	w25, w23
  404ba8:	mov	x23, x22
  404bac:	b	404bbc <feof@plt+0x1adc>
  404bb0:	add	x23, x23, #0x68
  404bb4:	cmp	x23, x21
  404bb8:	b.eq	404e0c <feof@plt+0x1d2c>  // b.none
  404bbc:	ldp	x19, x24, [x23, #56]
  404bc0:	cmp	x19, x24
  404bc4:	b.ne	404bdc <feof@plt+0x1afc>  // b.any
  404bc8:	cbnz	x19, 404bf4 <feof@plt+0x1b14>
  404bcc:	b	404bb0 <feof@plt+0x1ad0>
  404bd0:	add	x19, x19, #0x20
  404bd4:	cmp	x24, x19
  404bd8:	b.eq	404bec <feof@plt+0x1b0c>  // b.none
  404bdc:	ldr	x0, [x19, #8]
  404be0:	cbz	x0, 404bd0 <feof@plt+0x1af0>
  404be4:	bl	402d00 <_ZdlPv@plt>
  404be8:	b	404bd0 <feof@plt+0x1af0>
  404bec:	ldr	x19, [x23, #56]
  404bf0:	cbz	x19, 404bb0 <feof@plt+0x1ad0>
  404bf4:	mov	x0, x19
  404bf8:	bl	402d00 <_ZdlPv@plt>
  404bfc:	b	404bb0 <feof@plt+0x1ad0>
  404c00:	mov	w8, wzr
  404c04:	ldp	x9, x10, [x20, #32]
  404c08:	mov	x11, #0x4ec5                	// #20165
  404c0c:	movk	x11, #0xc4ec, lsl #16
  404c10:	movk	x11, #0xec4e, lsl #32
  404c14:	sub	x10, x10, x9
  404c18:	asr	x10, x10, #3
  404c1c:	movk	x11, #0x4ec4, lsl #48
  404c20:	mov	w8, w8
  404c24:	mul	x10, x10, x11
  404c28:	cmp	x10, x8
  404c2c:	b.ls	404e34 <feof@plt+0x1d54>  // b.plast
  404c30:	ldr	x19, [sp, #8]
  404c34:	madd	x8, x8, x28, x9
  404c38:	add	x23, x8, #0x40
  404c3c:	add	x9, x8, #0x38
  404c40:	add	x21, x8, #0x48
  404c44:	str	x9, [sp, #248]
  404c48:	str	w25, [sp, #228]
  404c4c:	str	x21, [sp, #232]
  404c50:	b	404c6c <feof@plt+0x1b8c>
  404c54:	ldr	x0, [sp, #248]
  404c58:	sub	x2, x29, #0xb0
  404c5c:	bl	40c4b4 <feof@plt+0x93d4>
  404c60:	ldur	x0, [x29, #-168]
  404c64:	cbz	x0, 404c6c <feof@plt+0x1b8c>
  404c68:	bl	402d00 <_ZdlPv@plt>
  404c6c:	mov	w0, #0x1                   	// #1
  404c70:	bl	4084d8 <feof@plt+0x53f8>
  404c74:	cbz	x0, 404cc0 <feof@plt+0x1be0>
  404c78:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404c7c:	ldr	w8, [x0]
  404c80:	ldr	w9, [x9, #1512]
  404c84:	rev	w10, w8
  404c88:	cmp	w9, #0x0
  404c8c:	csel	w27, w8, w10, eq  // eq = none
  404c90:	cbz	w27, 404cc0 <feof@plt+0x1be0>
  404c94:	mov	w24, w26
  404c98:	ldr	x26, [x23]
  404c9c:	ldp	x8, x9, [x26, #-16]
  404ca0:	cmp	x8, x9
  404ca4:	b.eq	404d4c <feof@plt+0x1c6c>  // b.none
  404ca8:	str	w27, [x8]
  404cac:	ldur	x8, [x26, #-16]
  404cb0:	add	x8, x8, #0x4
  404cb4:	stur	x8, [x26, #-16]
  404cb8:	mov	w26, w24
  404cbc:	b	404c6c <feof@plt+0x1b8c>
  404cc0:	mov	w0, #0x1                   	// #1
  404cc4:	bl	4084d8 <feof@plt+0x53f8>
  404cc8:	cbz	x0, 404e04 <feof@plt+0x1d24>
  404ccc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404cd0:	ldr	w8, [x0]
  404cd4:	ldr	w9, [x9, #1512]
  404cd8:	rev	w10, w8
  404cdc:	cmp	w9, #0x0
  404ce0:	csel	w0, w8, w10, eq  // eq = none
  404ce4:	cbz	w0, 404e04 <feof@plt+0x1d24>
  404ce8:	bl	4084d8 <feof@plt+0x53f8>
  404cec:	cbz	x0, 404e04 <feof@plt+0x1d24>
  404cf0:	bl	4080f0 <feof@plt+0x5010>
  404cf4:	stur	w0, [x29, #-176]
  404cf8:	stp	xzr, xzr, [x19, #8]
  404cfc:	str	xzr, [x19]
  404d00:	ldr	x1, [x23]
  404d04:	ldr	x8, [x21]
  404d08:	cmp	x1, x8
  404d0c:	b.eq	404c54 <feof@plt+0x1b74>  // b.none
  404d10:	str	w0, [x1]
  404d14:	ldur	x8, [x29, #-168]
  404d18:	str	x8, [x1, #8]
  404d1c:	ldur	x8, [x29, #-160]
  404d20:	str	x8, [x1, #16]
  404d24:	ldur	x8, [x29, #-152]
  404d28:	str	x8, [x1, #24]
  404d2c:	stp	xzr, xzr, [x19]
  404d30:	str	xzr, [x19, #16]
  404d34:	ldr	x8, [x23]
  404d38:	add	x8, x8, #0x20
  404d3c:	str	x8, [x23]
  404d40:	ldur	x0, [x29, #-168]
  404d44:	cbnz	x0, 404c68 <feof@plt+0x1b88>
  404d48:	b	404c6c <feof@plt+0x1b8c>
  404d4c:	ldur	x19, [x26, #-24]
  404d50:	sub	x22, x8, x19
  404d54:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
  404d58:	cmp	x22, x8
  404d5c:	b.eq	407d38 <feof@plt+0x4c58>  // b.none
  404d60:	asr	x21, x22, #2
  404d64:	cmp	x22, #0x0
  404d68:	csinc	x8, x21, xzr, ne  // ne = any
  404d6c:	adds	x8, x8, x21
  404d70:	lsr	x10, x8, #61
  404d74:	cset	w9, cs  // cs = hs, nlast
  404d78:	cmp	x10, #0x0
  404d7c:	cset	w10, ne  // ne = any
  404d80:	orr	w9, w9, w10
  404d84:	cmp	w9, #0x0
  404d88:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  404d8c:	csel	x28, x9, x8, ne  // ne = any
  404d90:	cbz	x28, 404da4 <feof@plt+0x1cc4>
  404d94:	lsl	x0, x28, #2
  404d98:	bl	402d30 <_Znwm@plt>
  404d9c:	mov	x25, x0
  404da0:	b	404da8 <feof@plt+0x1cc8>
  404da4:	mov	x25, xzr
  404da8:	add	x21, x25, x21, lsl #2
  404dac:	cmp	x22, #0x1
  404db0:	str	w27, [x21]
  404db4:	b.lt	404dc8 <feof@plt+0x1ce8>  // b.tstop
  404db8:	mov	x0, x25
  404dbc:	mov	x1, x19
  404dc0:	mov	x2, x22
  404dc4:	bl	402e30 <memmove@plt>
  404dc8:	add	x21, x21, #0x4
  404dcc:	cbz	x19, 404dd8 <feof@plt+0x1cf8>
  404dd0:	mov	x0, x19
  404dd4:	bl	402d00 <_ZdlPv@plt>
  404dd8:	stp	x25, x21, [x26, #-24]
  404ddc:	add	x8, x25, x28, lsl #2
  404de0:	ldr	x19, [sp, #8]
  404de4:	ldr	w25, [sp, #228]
  404de8:	ldr	x21, [sp, #232]
  404dec:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  404df0:	stur	x8, [x26, #-8]
  404df4:	add	x22, x22, #0x5c8
  404df8:	mov	w28, #0x68                  	// #104
  404dfc:	mov	w26, w24
  404e00:	b	404c6c <feof@plt+0x1b8c>
  404e04:	ldr	w23, [sp, #256]
  404e08:	b	40478c <feof@plt+0x16ac>
  404e0c:	str	x22, [x20, #40]
  404e10:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e14:	add	x22, x22, #0x5c8
  404e18:	mov	w23, w25
  404e1c:	mov	w25, w26
  404e20:	mov	w26, w27
  404e24:	b	40478c <feof@plt+0x16ac>
  404e28:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e2c:	add	x22, x22, #0x5c8
  404e30:	b	40478c <feof@plt+0x16ac>
  404e34:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e38:	ldr	x0, [x8, #1464]
  404e3c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e40:	ldr	x2, [x8, #1792]
  404e44:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404e48:	add	x1, x1, #0x547
  404e4c:	bl	40f8a4 <feof@plt+0xc7c4>
  404e50:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e54:	ldr	x0, [x8, #1480]
  404e58:	mov	w23, #0x90                  	// #144
  404e5c:	mov	w21, #0xfffffffd            	// #-3
  404e60:	cbz	x0, 404e70 <feof@plt+0x1d90>
  404e64:	bl	402ae0 <fclose@plt>
  404e68:	str	xzr, [x22]
  404e6c:	str	wzr, [x22, #16]
  404e70:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e74:	add	x19, x19, #0x5e4
  404e78:	ldur	x0, [x19, #20]
  404e7c:	bl	402b20 <free@plt>
  404e80:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404e84:	add	x9, x9, #0x600
  404e88:	ldp	x8, x9, [x9]
  404e8c:	str	wzr, [x19]
  404e90:	stur	xzr, [x19, #20]
  404e94:	stur	xzr, [x19, #12]
  404e98:	cmp	x8, x9
  404e9c:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  404ea0:	b.ne	404ec0 <feof@plt+0x1de0>  // b.any
  404ea4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404ea8:	ldr	x0, [x8, #1464]
  404eac:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404eb0:	ldr	x2, [x8, #1792]
  404eb4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404eb8:	add	x1, x1, #0x555
  404ebc:	bl	40f8a4 <feof@plt+0xc7c4>
  404ec0:	ldr	x0, [x19, #1784]
  404ec4:	bl	407ffc <feof@plt+0x4f1c>
  404ec8:	cbz	w0, 404f54 <feof@plt+0x1e74>
  404ecc:	mov	w0, #0x1                   	// #1
  404ed0:	bl	4084d8 <feof@plt+0x53f8>
  404ed4:	cbz	x0, 404f7c <feof@plt+0x1e9c>
  404ed8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404edc:	ldr	w8, [x0]
  404ee0:	ldr	w9, [x9, #1512]
  404ee4:	rev	w10, w8
  404ee8:	cmp	w9, #0x0
  404eec:	mov	w9, #0x6461                	// #25697
  404ef0:	csel	w8, w8, w10, eq  // eq = none
  404ef4:	movk	w9, #0x6763, lsl #16
  404ef8:	cmp	w8, w9
  404efc:	b.eq	404f1c <feof@plt+0x1e3c>  // b.none
  404f00:	mov	w9, #0x6367                	// #25447
  404f04:	movk	w9, #0x6164, lsl #16
  404f08:	cmp	w8, w9
  404f0c:	b.ne	404f7c <feof@plt+0x1e9c>  // b.any
  404f10:	mov	w8, #0x1                   	// #1
  404f14:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404f18:	str	w8, [x9, #1512]
  404f1c:	mov	w0, #0x1                   	// #1
  404f20:	bl	4084d8 <feof@plt+0x53f8>
  404f24:	cbz	x0, 404f94 <feof@plt+0x1eb4>
  404f28:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404f2c:	ldr	w8, [x0]
  404f30:	ldr	w9, [x9, #1512]
  404f34:	rev	w10, w8
  404f38:	cmp	w9, #0x0
  404f3c:	mov	w9, #0x322a                	// #12842
  404f40:	csel	w8, w8, w10, eq  // eq = none
  404f44:	movk	w9, #0x4139, lsl #16
  404f48:	cmp	w8, w9
  404f4c:	b.ne	404f98 <feof@plt+0x1eb8>  // b.any
  404f50:	b	404fcc <feof@plt+0x1eec>
  404f54:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404f58:	ldr	x0, [x8, #1464]
  404f5c:	ldr	x2, [x19, #1784]
  404f60:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404f64:	add	x1, x1, #0x62d
  404f68:	bl	40f8a4 <feof@plt+0xc7c4>
  404f6c:	mov	w8, #0x1                   	// #1
  404f70:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404f74:	strb	w8, [x9, #1824]
  404f78:	b	4053fc <feof@plt+0x231c>
  404f7c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  404f80:	ldr	x0, [x8, #1464]
  404f84:	ldr	x2, [x19, #1784]
  404f88:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404f8c:	add	x1, x1, #0x65e
  404f90:	b	405384 <feof@plt+0x22a4>
  404f94:	mov	w8, wzr
  404f98:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404f9c:	ldr	x0, [x9, #1464]
  404fa0:	ldr	x2, [x19, #1784]
  404fa4:	rev	w8, w8
  404fa8:	stur	w8, [x29, #-176]
  404fac:	mov	w8, #0x3941                	// #14657
  404fb0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  404fb4:	movk	w8, #0x2a32, lsl #16
  404fb8:	sub	x3, x29, #0xb0
  404fbc:	sub	x4, x29, #0xe8
  404fc0:	add	x1, x1, #0x677
  404fc4:	stur	w8, [x29, #-232]
  404fc8:	bl	40f8a4 <feof@plt+0xc7c4>
  404fcc:	mov	w0, #0x1                   	// #1
  404fd0:	bl	4084d8 <feof@plt+0x53f8>
  404fd4:	cbz	x0, 404ff4 <feof@plt+0x1f14>
  404fd8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  404fdc:	ldr	w8, [x0]
  404fe0:	ldr	w9, [x9, #1512]
  404fe4:	rev	w10, w8
  404fe8:	cmp	w9, #0x0
  404fec:	csel	w8, w8, w10, eq  // eq = none
  404ff0:	b	404ff8 <feof@plt+0x1f18>
  404ff4:	mov	w8, wzr
  404ff8:	ldur	w9, [x29, #-12]
  404ffc:	cmp	w8, w9
  405000:	b.ne	405370 <feof@plt+0x2290>  // b.any
  405004:	mov	x21, xzr
  405008:	b	405050 <feof@plt+0x1f70>
  40500c:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  405010:	add	x22, x22, #0x5c8
  405014:	ldr	x0, [x22]
  405018:	lsl	w1, w8, #2
  40501c:	mov	w2, wzr
  405020:	stp	wzr, wzr, [x22, #12]
  405024:	bl	4030b0 <fseek@plt>
  405028:	ldr	x0, [x22]
  40502c:	bl	402a90 <ftell@plt>
  405030:	lsr	x8, x0, #2
  405034:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  405038:	str	w8, [x22, #8]
  40503c:	ldr	x8, [x22]
  405040:	ldr	w9, [x22, #24]
  405044:	cmp	x8, #0x0
  405048:	csinc	w8, w9, wzr, ne  // ne = any
  40504c:	cbnz	w8, 407c94 <feof@plt+0x4bb4>
  405050:	mov	w0, #0x1                   	// #1
  405054:	bl	4084d8 <feof@plt+0x53f8>
  405058:	cbz	x0, 4053c0 <feof@plt+0x22e0>
  40505c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405060:	ldr	w8, [x0]
  405064:	ldr	w9, [x9, #1512]
  405068:	rev	w10, w8
  40506c:	cmp	w9, #0x0
  405070:	csel	w23, w8, w10, eq  // eq = none
  405074:	cbz	w23, 4053c0 <feof@plt+0x22e0>
  405078:	mov	w0, #0x1                   	// #1
  40507c:	bl	4084d8 <feof@plt+0x53f8>
  405080:	cbz	x0, 4050a0 <feof@plt+0x1fc0>
  405084:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405088:	ldr	w8, [x0]
  40508c:	ldr	w9, [x9, #1512]
  405090:	rev	w10, w8
  405094:	cmp	w9, #0x0
  405098:	csel	w19, w8, w10, eq  // eq = none
  40509c:	b	4050a4 <feof@plt+0x1fc4>
  4050a0:	mov	w19, wzr
  4050a4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4050a8:	ldr	w8, [x8, #1508]
  4050ac:	cmp	w8, #0x0
  4050b0:	b.le	407d74 <feof@plt+0x4c94>
  4050b4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4050b8:	add	x8, x8, #0x5d0
  4050bc:	ldp	w20, w22, [x8]
  4050c0:	mov	w8, #0xa1000000            	// #-1593835520
  4050c4:	cmp	w23, w8
  4050c8:	b.ne	4050f4 <feof@plt+0x2014>  // b.any
  4050cc:	mov	w0, #0x1                   	// #1
  4050d0:	bl	4084d8 <feof@plt+0x53f8>
  4050d4:	cbz	x0, 405140 <feof@plt+0x2060>
  4050d8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4050dc:	ldr	w8, [x0]
  4050e0:	ldr	w9, [x9, #1512]
  4050e4:	rev	w10, w8
  4050e8:	cmp	w9, #0x0
  4050ec:	csel	w23, w8, w10, eq  // eq = none
  4050f0:	b	405144 <feof@plt+0x2064>
  4050f4:	mov	w8, #0x1000000             	// #16777216
  4050f8:	cmp	w23, w8
  4050fc:	b.ne	405104 <feof@plt+0x2024>  // b.any
  405100:	cbz	w19, 405154 <feof@plt+0x2074>
  405104:	mov	w8, #0x1000000             	// #16777216
  405108:	cmp	w23, w8
  40510c:	b.ne	4051a4 <feof@plt+0x20c4>  // b.any
  405110:	cmp	w19, #0x3
  405114:	b.ne	4051a4 <feof@plt+0x20c4>  // b.any
  405118:	mov	w0, #0x1                   	// #1
  40511c:	bl	4084d8 <feof@plt+0x53f8>
  405120:	cbz	x0, 405244 <feof@plt+0x2164>
  405124:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405128:	ldr	w8, [x0]
  40512c:	ldr	w9, [x9, #1512]
  405130:	rev	w10, w8
  405134:	cmp	w9, #0x0
  405138:	csel	w8, w8, w10, eq  // eq = none
  40513c:	b	405248 <feof@plt+0x2168>
  405140:	mov	w23, wzr
  405144:	mov	w0, #0x1                   	// #1
  405148:	bl	4084d8 <feof@plt+0x53f8>
  40514c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405150:	str	w23, [x8, #1828]
  405154:	mov	w23, #0x90                  	// #144
  405158:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40515c:	ldr	w8, [x8, #1508]
  405160:	cmp	w8, #0x0
  405164:	b.le	407d8c <feof@plt+0x4cac>
  405168:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40516c:	add	x8, x8, #0x5d0
  405170:	ldr	w9, [x8]
  405174:	ldr	w10, [x8, #8]
  405178:	add	w8, w20, w19
  40517c:	add	w8, w8, w22
  405180:	sub	w9, w8, w9
  405184:	cmp	w9, w10
  405188:	b.hi	40500c <feof@plt+0x1f2c>  // b.pmore
  40518c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405190:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  405194:	str	w9, [x8, #1492]
  405198:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  40519c:	add	x22, x22, #0x5c8
  4051a0:	b	40503c <feof@plt+0x1f5c>
  4051a4:	cbz	x21, 405154 <feof@plt+0x2074>
  4051a8:	mov	w8, #0x1a10000             	// #27328512
  4051ac:	cmp	w23, w8
  4051b0:	b.ne	405154 <feof@plt+0x2074>  // b.any
  4051b4:	ldp	x9, x8, [x21, #64]
  4051b8:	mov	w10, w19
  4051bc:	mov	w23, #0x90                  	// #144
  4051c0:	sub	x11, x8, x9
  4051c4:	cmp	x10, x11, asr #2
  4051c8:	b.ne	40531c <feof@plt+0x223c>  // b.any
  4051cc:	cmp	x8, x9
  4051d0:	b.eq	405158 <feof@plt+0x2078>  // b.none
  4051d4:	mov	x24, xzr
  4051d8:	mov	w23, #0x1                   	// #1
  4051dc:	b	405230 <feof@plt+0x2150>
  4051e0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4051e4:	ldp	w8, w10, [x0]
  4051e8:	ldr	w9, [x9, #1512]
  4051ec:	rev	w11, w8
  4051f0:	cmp	w9, #0x0
  4051f4:	rev	w9, w10
  4051f8:	csel	w8, w8, w11, eq  // eq = none
  4051fc:	csel	w9, w10, w9, eq  // eq = none
  405200:	bfi	x8, x9, #32, #32
  405204:	ldr	x9, [x21, #64]
  405208:	lsl	x10, x24, #3
  40520c:	mov	w24, w23
  405210:	add	w23, w23, #0x1
  405214:	ldr	x11, [x9, x10]
  405218:	add	x8, x11, x8
  40521c:	str	x8, [x9, x10]
  405220:	ldp	x9, x8, [x21, #64]
  405224:	sub	x8, x8, x9
  405228:	cmp	x24, x8, asr #3
  40522c:	b.eq	405154 <feof@plt+0x2074>  // b.none
  405230:	mov	w0, #0x2                   	// #2
  405234:	bl	4084d8 <feof@plt+0x53f8>
  405238:	cbnz	x0, 4051e0 <feof@plt+0x2100>
  40523c:	mov	x8, xzr
  405240:	b	405204 <feof@plt+0x2124>
  405244:	mov	w8, wzr
  405248:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40524c:	ldr	x10, [x9, #1576]
  405250:	mov	w23, #0x90                  	// #144
  405254:	cbz	x10, 40529c <feof@plt+0x21bc>
  405258:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40525c:	add	x9, x9, #0x620
  405260:	ldr	w11, [x10, #32]
  405264:	add	x12, x10, #0x18
  405268:	add	x13, x10, #0x10
  40526c:	cmp	w11, w8
  405270:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  405274:	csel	x10, x12, x13, cc  // cc = lo, ul, last
  405278:	ldr	x10, [x10]
  40527c:	cbnz	x10, 405260 <feof@plt+0x2180>
  405280:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  405284:	add	x10, x10, #0x620
  405288:	cmp	x9, x10
  40528c:	b.eq	40529c <feof@plt+0x21bc>  // b.none
  405290:	ldr	w10, [x9, #32]
  405294:	cmp	w8, w10
  405298:	b.cs	4052a4 <feof@plt+0x21c4>  // b.hs, b.nlast
  40529c:	mov	x21, xzr
  4052a0:	b	405158 <feof@plt+0x2078>
  4052a4:	ldr	x21, [x9, #40]
  4052a8:	cbz	x21, 405158 <feof@plt+0x2078>
  4052ac:	mov	w0, #0x1                   	// #1
  4052b0:	bl	4084d8 <feof@plt+0x53f8>
  4052b4:	cbz	x0, 4052d4 <feof@plt+0x21f4>
  4052b8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4052bc:	ldr	w8, [x0]
  4052c0:	ldr	w9, [x9, #1512]
  4052c4:	rev	w10, w8
  4052c8:	cmp	w9, #0x0
  4052cc:	csel	w8, w8, w10, eq  // eq = none
  4052d0:	b	4052d8 <feof@plt+0x21f8>
  4052d4:	mov	w8, wzr
  4052d8:	ldr	w9, [x21, #20]
  4052dc:	cmp	w8, w9
  4052e0:	b.ne	40531c <feof@plt+0x223c>  // b.any
  4052e4:	mov	w0, #0x1                   	// #1
  4052e8:	bl	4084d8 <feof@plt+0x53f8>
  4052ec:	cbz	x0, 40530c <feof@plt+0x222c>
  4052f0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4052f4:	ldr	w8, [x0]
  4052f8:	ldr	w9, [x9, #1512]
  4052fc:	rev	w10, w8
  405300:	cmp	w9, #0x0
  405304:	csel	w8, w8, w10, eq  // eq = none
  405308:	b	405310 <feof@plt+0x2230>
  40530c:	mov	w8, wzr
  405310:	ldr	w9, [x21, #24]
  405314:	cmp	w8, w9
  405318:	b.eq	405158 <feof@plt+0x2078>  // b.none
  40531c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405320:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405324:	ldrb	w8, [x8, #1724]
  405328:	ldr	x20, [x9, #1464]
  40532c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405330:	ldr	x19, [x9, #1784]
  405334:	cmp	w8, #0x1
  405338:	b.ne	407cd4 <feof@plt+0x4bf4>  // b.any
  40533c:	ldr	x3, [x21, #8]
  405340:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  405344:	add	x22, x22, #0x5c8
  405348:	cbnz	x3, 407ce0 <feof@plt+0x4c00>
  40534c:	ldr	x0, [x21]
  405350:	mov	w1, #0x1                   	// #1
  405354:	bl	44a420 <feof@plt+0x47340>
  405358:	mov	x3, x0
  40535c:	str	x0, [x21, #8]
  405360:	cbnz	x0, 407ce0 <feof@plt+0x4c00>
  405364:	ldr	x3, [x21]
  405368:	str	x3, [x21, #8]
  40536c:	b	407ce0 <feof@plt+0x4c00>
  405370:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405374:	ldr	x0, [x8, #1464]
  405378:	ldr	x2, [x19, #1784]
  40537c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  405380:	add	x1, x1, #0x6a1
  405384:	bl	40f8a4 <feof@plt+0xc7c4>
  405388:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40538c:	ldr	x0, [x8, #1480]
  405390:	cbz	x0, 4053a0 <feof@plt+0x22c0>
  405394:	bl	402ae0 <fclose@plt>
  405398:	str	xzr, [x22]
  40539c:	str	wzr, [x22, #16]
  4053a0:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  4053a4:	add	x19, x19, #0x5e4
  4053a8:	ldur	x0, [x19, #20]
  4053ac:	bl	402b20 <free@plt>
  4053b0:	str	wzr, [x19]
  4053b4:	stur	xzr, [x19, #20]
  4053b8:	stur	xzr, [x19, #12]
  4053bc:	b	4053fc <feof@plt+0x231c>
  4053c0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4053c4:	ldr	x0, [x8, #1480]
  4053c8:	cbz	x0, 4053d8 <feof@plt+0x22f8>
  4053cc:	bl	402ae0 <fclose@plt>
  4053d0:	str	xzr, [x22]
  4053d4:	str	wzr, [x22, #16]
  4053d8:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  4053dc:	add	x19, x19, #0x5e4
  4053e0:	ldur	x0, [x19, #20]
  4053e4:	bl	402b20 <free@plt>
  4053e8:	str	wzr, [x19]
  4053ec:	stur	xzr, [x19, #20]
  4053f0:	stur	xzr, [x19, #12]
  4053f4:	mov	w23, #0x90                  	// #144
  4053f8:	mov	w21, #0xfffffffd            	// #-3
  4053fc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405400:	ldrb	w8, [x8, #1688]
  405404:	tbnz	w8, #0, 40541c <feof@plt+0x233c>
  405408:	ldur	w8, [x29, #-252]
  40540c:	ldr	x10, [sp, #168]
  405410:	sub	w9, w8, #0x1
  405414:	cmp	w9, w10
  405418:	b.ne	403ccc <feof@plt+0xbec>  // b.any
  40541c:	ldr	x8, [sp, #152]
  405420:	mov	w0, #0xd                   	// #13
  405424:	stp	xzr, xzr, [x8]
  405428:	str	xzr, [x8, #16]
  40542c:	sturb	wzr, [x29, #-132]
  405430:	bl	40eacc <feof@plt+0xb9ec>
  405434:	mov	w8, w0
  405438:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40543c:	lsl	x8, x8, #4
  405440:	add	x9, x9, #0xf68
  405444:	ldr	w20, [x9, x8]
  405448:	mov	w19, w0
  40544c:	mov	w1, #0x10                  	// #16
  405450:	mov	x0, x20
  405454:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  405458:	cbz	x0, 407d5c <feof@plt+0x4c7c>
  40545c:	cbz	w20, 4054ac <feof@plt+0x23cc>
  405460:	cmp	w20, #0x1
  405464:	b.ne	405470 <feof@plt+0x2390>  // b.any
  405468:	mov	x8, xzr
  40546c:	b	405494 <feof@plt+0x23b4>
  405470:	and	x8, x20, #0xfffffffe
  405474:	add	x9, x0, #0x14
  405478:	mov	x10, x8
  40547c:	stur	w21, [x9, #-16]
  405480:	str	w21, [x9], #32
  405484:	subs	x10, x10, #0x2
  405488:	b.ne	40547c <feof@plt+0x239c>  // b.any
  40548c:	cmp	x8, x20
  405490:	b.eq	4054ac <feof@plt+0x23cc>  // b.none
  405494:	sub	x9, x20, x8
  405498:	add	x8, x0, x8, lsl #4
  40549c:	add	x8, x8, #0x4
  4054a0:	subs	x9, x9, #0x1
  4054a4:	str	w21, [x8], #16
  4054a8:	b.ne	4054a0 <feof@plt+0x23c0>  // b.any
  4054ac:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4054b0:	add	x8, x8, #0x600
  4054b4:	ldp	x21, x8, [x8]
  4054b8:	stp	x0, x20, [x29, #-176]
  4054bc:	stur	w19, [x29, #-136]
  4054c0:	cmp	x21, x8
  4054c4:	b.eq	40572c <feof@plt+0x264c>  // b.none
  4054c8:	mov	w19, #0x79b9                	// #31161
  4054cc:	mov	w20, #0x8647                	// #34375
  4054d0:	movk	w19, #0x9e37, lsl #16
  4054d4:	movk	w20, #0x61c8, lsl #16
  4054d8:	b	4054f8 <feof@plt+0x2418>
  4054dc:	ldr	x8, [x21]
  4054e0:	str	x8, [x0, #8]
  4054e4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4054e8:	ldr	x8, [x8, #1544]
  4054ec:	add	x21, x21, #0x8
  4054f0:	cmp	x21, x8
  4054f4:	b.eq	405718 <feof@plt+0x2638>  // b.none
  4054f8:	ldr	x9, [x21]
  4054fc:	ldrb	w10, [x9, #28]
  405500:	tbnz	w10, #1, 4054ec <feof@plt+0x240c>
  405504:	ldr	w8, [x9, #104]
  405508:	sub	x0, x29, #0xb0
  40550c:	sub	x1, x29, #0xe8
  405510:	sub	w9, w19, w8
  405514:	stur	w8, [x29, #-232]
  405518:	add	w10, w8, w20
  40551c:	sub	w8, w8, w9
  405520:	eor	w8, w8, w9, lsl #8
  405524:	sub	w10, w10, w8
  405528:	sub	w9, w9, w8
  40552c:	eor	w10, w10, w8, lsr #13
  405530:	sub	w9, w9, w10
  405534:	sub	w8, w8, w10
  405538:	eor	w9, w9, w10, lsr #12
  40553c:	sub	w8, w8, w9
  405540:	ldr	x11, [x21]
  405544:	sub	w10, w10, w9
  405548:	eor	w8, w8, w9, lsl #16
  40554c:	sub	w10, w10, w8
  405550:	sub	w9, w9, w8
  405554:	eor	w10, w10, w8, lsr #5
  405558:	sub	w9, w9, w10
  40555c:	ldr	w11, [x11, #88]
  405560:	sub	w8, w8, w10
  405564:	eor	w9, w9, w10, lsr #3
  405568:	sub	w8, w8, w9
  40556c:	sub	w10, w10, w9
  405570:	eor	w8, w8, w9, lsl #10
  405574:	sub	w10, w10, w8
  405578:	sub	w9, w19, w11
  40557c:	eor	w8, w10, w8, lsr #15
  405580:	sub	w9, w9, w8
  405584:	sub	w10, w11, w8
  405588:	eor	w9, w9, w8, lsr #13
  40558c:	sub	w10, w10, w9
  405590:	sub	w8, w8, w9
  405594:	eor	w10, w10, w9, lsl #8
  405598:	sub	w8, w8, w10
  40559c:	sub	w9, w9, w10
  4055a0:	eor	w8, w8, w10, lsr #13
  4055a4:	sub	w9, w9, w8
  4055a8:	sub	w10, w10, w8
  4055ac:	eor	w9, w9, w8, lsr #12
  4055b0:	sub	w10, w10, w9
  4055b4:	sub	w8, w8, w9
  4055b8:	eor	w10, w10, w9, lsl #16
  4055bc:	sub	w8, w8, w10
  4055c0:	sub	w9, w9, w10
  4055c4:	eor	w8, w8, w10, lsr #5
  4055c8:	sub	w9, w9, w8
  4055cc:	sub	w10, w10, w8
  4055d0:	eor	w9, w9, w8, lsr #3
  4055d4:	sub	w10, w10, w9
  4055d8:	eor	w10, w10, w9, lsl #10
  4055dc:	sub	w8, w8, w9
  4055e0:	sub	w8, w8, w10
  4055e4:	eor	w2, w8, w10, lsr #15
  4055e8:	stur	w11, [x29, #-228]
  4055ec:	bl	40c618 <feof@plt+0x9538>
  4055f0:	ldr	w8, [x0, #4]
  4055f4:	cmn	w8, #0x3
  4055f8:	b.ne	4056f4 <feof@plt+0x2614>  // b.any
  4055fc:	ldp	w8, w9, [x29, #-232]
  405600:	sub	x0, x29, #0xb0
  405604:	sub	x1, x29, #0xe8
  405608:	mov	w3, #0x1                   	// #1
  40560c:	sub	w10, w19, w8
  405610:	add	w11, w8, w20
  405614:	sub	w8, w8, w10
  405618:	eor	w8, w8, w10, lsl #8
  40561c:	sub	w11, w11, w8
  405620:	sub	w10, w10, w8
  405624:	eor	w11, w11, w8, lsr #13
  405628:	sub	w10, w10, w11
  40562c:	sub	w8, w8, w11
  405630:	eor	w10, w10, w11, lsr #12
  405634:	sub	w8, w8, w10
  405638:	sub	w11, w11, w10
  40563c:	eor	w8, w8, w10, lsl #16
  405640:	sub	w11, w11, w8
  405644:	sub	w10, w10, w8
  405648:	eor	w11, w11, w8, lsr #5
  40564c:	sub	w10, w10, w11
  405650:	sub	w8, w8, w11
  405654:	eor	w10, w10, w11, lsr #3
  405658:	sub	w8, w8, w10
  40565c:	sub	w11, w11, w10
  405660:	eor	w8, w8, w10, lsl #10
  405664:	sub	w10, w11, w8
  405668:	eor	w8, w10, w8, lsr #15
  40566c:	sub	w10, w19, w9
  405670:	sub	w10, w10, w8
  405674:	sub	w9, w9, w8
  405678:	eor	w10, w10, w8, lsr #13
  40567c:	sub	w9, w9, w10
  405680:	sub	w8, w8, w10
  405684:	eor	w9, w9, w10, lsl #8
  405688:	sub	w8, w8, w9
  40568c:	sub	w10, w10, w9
  405690:	eor	w8, w8, w9, lsr #13
  405694:	sub	w10, w10, w8
  405698:	sub	w9, w9, w8
  40569c:	eor	w10, w10, w8, lsr #12
  4056a0:	sub	w9, w9, w10
  4056a4:	sub	w8, w8, w10
  4056a8:	eor	w9, w9, w10, lsl #16
  4056ac:	sub	w8, w8, w9
  4056b0:	sub	w10, w10, w9
  4056b4:	eor	w8, w8, w9, lsr #5
  4056b8:	sub	w10, w10, w8
  4056bc:	sub	w9, w9, w8
  4056c0:	eor	w10, w10, w8, lsr #3
  4056c4:	sub	w9, w9, w10
  4056c8:	eor	w9, w9, w10, lsl #10
  4056cc:	sub	w8, w8, w10
  4056d0:	sub	w8, w8, w9
  4056d4:	eor	w2, w8, w9, lsr #15
  4056d8:	bl	40c720 <feof@plt+0x9640>
  4056dc:	ldr	w8, [x0, #4]
  4056e0:	cmn	w8, #0x3
  4056e4:	b.ne	4054dc <feof@plt+0x23fc>  // b.any
  4056e8:	ldur	x8, [x29, #-232]
  4056ec:	str	x8, [x0]
  4056f0:	b	4054dc <feof@plt+0x23fc>
  4056f4:	ldr	x8, [x0, #8]
  4056f8:	ldrb	w9, [x8, #28]
  4056fc:	orr	w9, w9, #0x4
  405700:	strb	w9, [x8, #28]
  405704:	ldr	x8, [x21]
  405708:	ldrb	w9, [x8, #28]
  40570c:	orr	w9, w9, #0x4
  405710:	strb	w9, [x8, #28]
  405714:	b	4054e4 <feof@plt+0x2404>
  405718:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40571c:	ldr	x9, [x9, #1536]
  405720:	mov	x21, x8
  405724:	mov	x10, x8
  405728:	b	405734 <feof@plt+0x2654>
  40572c:	mov	x9, x21
  405730:	mov	x10, x21
  405734:	sub	x11, x8, x9
  405738:	cmp	x11, #0x20
  40573c:	mov	x13, x11
  405740:	mov	x12, x9
  405744:	b.lt	40579c <feof@plt+0x26bc>  // b.tstop
  405748:	lsr	x13, x11, #5
  40574c:	add	x12, x9, #0x10
  405750:	add	x13, x13, #0x1
  405754:	ldur	x14, [x12, #-16]
  405758:	ldrb	w14, [x14, #28]
  40575c:	tbnz	w14, #1, 4057f4 <feof@plt+0x2714>
  405760:	ldur	x14, [x12, #-8]
  405764:	ldrb	w14, [x14, #28]
  405768:	tbnz	w14, #1, 405804 <feof@plt+0x2724>
  40576c:	ldr	x14, [x12]
  405770:	ldrb	w14, [x14, #28]
  405774:	tbnz	w14, #1, 405808 <feof@plt+0x2728>
  405778:	ldr	x14, [x12, #8]
  40577c:	ldrb	w14, [x14, #28]
  405780:	tbnz	w14, #1, 407b38 <feof@plt+0x4a58>
  405784:	sub	x13, x13, #0x1
  405788:	cmp	x13, #0x1
  40578c:	add	x12, x12, #0x20
  405790:	b.gt	405754 <feof@plt+0x2674>
  405794:	sub	x12, x12, #0x10
  405798:	sub	x13, x8, x12
  40579c:	asr	x13, x13, #3
  4057a0:	cmp	x13, #0x1
  4057a4:	b.eq	4057d8 <feof@plt+0x26f8>  // b.none
  4057a8:	cmp	x13, #0x2
  4057ac:	b.eq	4057c8 <feof@plt+0x26e8>  // b.none
  4057b0:	cmp	x13, #0x3
  4057b4:	b.ne	405858 <feof@plt+0x2778>  // b.any
  4057b8:	ldr	x13, [x12]
  4057bc:	ldrb	w13, [x13, #28]
  4057c0:	tbnz	w13, #1, 405808 <feof@plt+0x2728>
  4057c4:	add	x12, x12, #0x8
  4057c8:	ldr	x13, [x12]
  4057cc:	ldrb	w13, [x13, #28]
  4057d0:	tbnz	w13, #1, 405808 <feof@plt+0x2728>
  4057d4:	add	x12, x12, #0x8
  4057d8:	ldr	x13, [x12]
  4057dc:	ldrb	w13, [x13, #28]
  4057e0:	tst	w13, #0x2
  4057e4:	csel	x12, x10, x12, eq  // eq = none
  4057e8:	cmp	x12, x10
  4057ec:	b.ne	405810 <feof@plt+0x2730>  // b.any
  4057f0:	b	405858 <feof@plt+0x2778>
  4057f4:	sub	x12, x12, #0x10
  4057f8:	cmp	x12, x10
  4057fc:	b.ne	405810 <feof@plt+0x2730>  // b.any
  405800:	b	405858 <feof@plt+0x2778>
  405804:	sub	x12, x12, #0x8
  405808:	cmp	x12, x10
  40580c:	b.eq	405858 <feof@plt+0x2778>  // b.none
  405810:	add	x13, x12, #0x8
  405814:	cmp	x13, x10
  405818:	b.ne	40582c <feof@plt+0x274c>  // b.any
  40581c:	b	405850 <feof@plt+0x2770>
  405820:	add	x13, x13, #0x8
  405824:	cmp	x10, x13
  405828:	b.eq	405840 <feof@plt+0x2760>  // b.none
  40582c:	ldr	x8, [x13]
  405830:	ldrb	w9, [x8, #28]
  405834:	tbnz	w9, #1, 405820 <feof@plt+0x2740>
  405838:	str	x8, [x12], #8
  40583c:	b	405820 <feof@plt+0x2740>
  405840:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405844:	add	x9, x9, #0x600
  405848:	ldp	x9, x8, [x9]
  40584c:	sub	x11, x8, x9
  405850:	mov	x21, x8
  405854:	mov	x10, x12
  405858:	sub	x10, x10, x9
  40585c:	asr	x12, x10, #3
  405860:	cmp	x12, x11, asr #3
  405864:	b.eq	4058b4 <feof@plt+0x27d4>  // b.none
  405868:	add	x19, x9, x11
  40586c:	cmp	x19, x8
  405870:	add	x20, x9, x10
  405874:	b.eq	405898 <feof@plt+0x27b8>  // b.none
  405878:	subs	x2, x8, x19
  40587c:	b.eq	405898 <feof@plt+0x27b8>  // b.none
  405880:	mov	x0, x20
  405884:	mov	x1, x19
  405888:	bl	402e30 <memmove@plt>
  40588c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405890:	ldr	x21, [x8, #1544]
  405894:	mov	x8, x21
  405898:	sub	x9, x8, x19
  40589c:	add	x9, x20, x9
  4058a0:	cmp	x9, x8
  4058a4:	b.eq	4058b4 <feof@plt+0x27d4>  // b.none
  4058a8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4058ac:	mov	x21, x9
  4058b0:	str	x9, [x8, #1544]
  4058b4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4058b8:	ldr	x22, [x8, #1536]
  4058bc:	cmp	x22, x21
  4058c0:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  4058c4:	b.ne	405904 <feof@plt+0x2824>  // b.any
  4058c8:	ldur	x8, [x29, #-168]
  4058cc:	mov	x9, x8
  4058d0:	sub	x9, x9, #0x1
  4058d4:	cmp	x9, x8
  4058d8:	b.cc	4058d0 <feof@plt+0x27f0>  // b.lo, b.ul, b.last
  4058dc:	ldurb	w8, [x29, #-132]
  4058e0:	ldur	x0, [x29, #-176]
  4058e4:	cbz	w8, 40620c <feof@plt+0x312c>
  4058e8:	bl	40eff8 <feof@plt+0xbf18>
  4058ec:	b	406210 <feof@plt+0x3130>
  4058f0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4058f4:	ldr	x8, [x8, #1544]
  4058f8:	add	x22, x22, #0x8
  4058fc:	cmp	x22, x8
  405900:	b.eq	4058c8 <feof@plt+0x27e8>  // b.none
  405904:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405908:	ldrb	w8, [x8, #1824]
  40590c:	ldr	x20, [x22]
  405910:	tbnz	w8, #0, 405920 <feof@plt+0x2840>
  405914:	ldp	x8, x9, [x20, #64]
  405918:	cmp	x8, x9
  40591c:	b.eq	4058f0 <feof@plt+0x2810>  // b.none
  405920:	ldr	w8, [x20, #104]
  405924:	ldr	x9, [x21, #1608]
  405928:	mov	x1, x20
  40592c:	str	x22, [sp, #256]
  405930:	mov	w22, #0x90                  	// #144
  405934:	madd	x0, x8, x23, x9
  405938:	bl	403538 <feof@plt+0x458>
  40593c:	ldp	x10, x9, [x20, #32]
  405940:	cmp	x9, x10
  405944:	b.ne	405990 <feof@plt+0x28b0>  // b.any
  405948:	ldrb	w8, [x20, #28]
  40594c:	mov	w1, #0x1                   	// #1
  405950:	tbz	w8, #2, 405b34 <feof@plt+0x2a54>
  405954:	mov	x0, x20
  405958:	ldr	x8, [x0, #112]!
  40595c:	ldur	w9, [x0, #-16]
  405960:	ldur	w10, [x0, #-24]
  405964:	ldr	x19, [x0, #8]
  405968:	sub	w9, w9, w10
  40596c:	sub	x10, x19, x8
  405970:	add	w9, w9, #0x1
  405974:	asr	x10, x10, #6
  405978:	cmp	x10, x9
  40597c:	b.cs	405ae8 <feof@plt+0x2a08>  // b.hs, b.nlast
  405980:	sub	x1, x9, x10
  405984:	bl	40d160 <feof@plt+0xa080>
  405988:	mov	w1, #0x1                   	// #1
  40598c:	b	405b34 <feof@plt+0x2a54>
  405990:	mov	x23, xzr
  405994:	b	4059c4 <feof@plt+0x28e4>
  405998:	ldp	x10, x9, [x20, #32]
  40599c:	mov	x11, #0x4ec5                	// #20165
  4059a0:	movk	x11, #0xc4ec, lsl #16
  4059a4:	sub	x8, x9, x10
  4059a8:	movk	x11, #0xec4e, lsl #32
  4059ac:	asr	x8, x8, #3
  4059b0:	movk	x11, #0x4ec4, lsl #48
  4059b4:	add	w23, w23, #0x1
  4059b8:	mul	x8, x8, x11
  4059bc:	cmp	x8, x23
  4059c0:	b.eq	405948 <feof@plt+0x2868>  // b.none
  4059c4:	madd	x24, x23, x28, x10
  4059c8:	ldr	x8, [x24, #56]!
  4059cc:	mov	x25, x24
  4059d0:	ldr	x11, [x25, #8]!
  4059d4:	cmp	x11, x8
  4059d8:	b.eq	40599c <feof@plt+0x28bc>  // b.none
  4059dc:	mov	x26, xzr
  4059e0:	b	405a04 <feof@plt+0x2924>
  4059e4:	sub	x1, x9, x10
  4059e8:	bl	40d160 <feof@plt+0xa080>
  4059ec:	ldr	x9, [x25]
  4059f0:	ldr	x8, [x24]
  4059f4:	add	w26, w26, #0x1
  4059f8:	sub	x9, x9, x8
  4059fc:	cmp	x26, x9, asr #5
  405a00:	b.cs	405998 <feof@plt+0x28b8>  // b.hs, b.nlast
  405a04:	add	x9, x8, x26, lsl #5
  405a08:	ldp	x19, x21, [x9, #8]
  405a0c:	cmp	x19, x21
  405a10:	b.eq	405a4c <feof@plt+0x296c>  // b.none
  405a14:	sub	x8, x21, x19
  405a18:	asr	x8, x8, #2
  405a1c:	clz	x8, x8
  405a20:	mov	w9, #0x7e                  	// #126
  405a24:	sub	x2, x9, x8, lsl #1
  405a28:	mov	x0, x19
  405a2c:	mov	x1, x21
  405a30:	bl	40cbc0 <feof@plt+0x9ae0>
  405a34:	mov	x0, x19
  405a38:	mov	x1, x21
  405a3c:	bl	40cde4 <feof@plt+0x9d04>
  405a40:	ldr	x8, [x24]
  405a44:	add	x9, x8, x26, lsl #5
  405a48:	ldr	x19, [x9, #16]
  405a4c:	add	x9, x8, x26, lsl #5
  405a50:	ldr	x9, [x9, #8]
  405a54:	cmp	x9, x19
  405a58:	b.eq	4059ec <feof@plt+0x290c>  // b.none
  405a5c:	lsl	x9, x26, #5
  405a60:	ldr	w8, [x8, x9]
  405a64:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405a68:	ldr	x10, [x9, #1608]
  405a6c:	ldur	w9, [x19, #-4]
  405a70:	madd	x0, x8, x22, x10
  405a74:	ldr	x8, [x0, #24]!
  405a78:	mov	x19, x0
  405a7c:	ldr	x21, [x19, #8]!
  405a80:	sub	x10, x21, x8
  405a84:	asr	x10, x10, #6
  405a88:	cmp	x10, x9
  405a8c:	b.hi	4059ec <feof@plt+0x290c>  // b.pmore
  405a90:	add	w9, w9, #0x1
  405a94:	cmp	x10, x9
  405a98:	b.cc	4059e4 <feof@plt+0x2904>  // b.lo, b.ul, b.last
  405a9c:	b.ls	4059ec <feof@plt+0x290c>  // b.plast
  405aa0:	add	x27, x8, x9, lsl #6
  405aa4:	cmp	x27, x21
  405aa8:	b.eq	4059ec <feof@plt+0x290c>  // b.none
  405aac:	mov	x28, x27
  405ab0:	b	405ac0 <feof@plt+0x29e0>
  405ab4:	add	x28, x28, #0x40
  405ab8:	cmp	x21, x28
  405abc:	b.eq	405adc <feof@plt+0x29fc>  // b.none
  405ac0:	ldr	x0, [x28, #32]
  405ac4:	cbz	x0, 405acc <feof@plt+0x29ec>
  405ac8:	bl	402d00 <_ZdlPv@plt>
  405acc:	ldr	x0, [x28, #8]
  405ad0:	cbz	x0, 405ab4 <feof@plt+0x29d4>
  405ad4:	bl	402d00 <_ZdlPv@plt>
  405ad8:	b	405ab4 <feof@plt+0x29d4>
  405adc:	mov	w28, #0x68                  	// #104
  405ae0:	str	x27, [x19]
  405ae4:	b	4059ec <feof@plt+0x290c>
  405ae8:	b.ls	405b34 <feof@plt+0x2a54>  // b.plast
  405aec:	add	x21, x8, x9, lsl #6
  405af0:	cmp	x21, x19
  405af4:	b.eq	405b34 <feof@plt+0x2a54>  // b.none
  405af8:	mov	x23, x21
  405afc:	b	405b0c <feof@plt+0x2a2c>
  405b00:	add	x23, x23, #0x40
  405b04:	cmp	x19, x23
  405b08:	b.eq	405b30 <feof@plt+0x2a50>  // b.none
  405b0c:	ldr	x0, [x23, #32]
  405b10:	cbz	x0, 405b1c <feof@plt+0x2a3c>
  405b14:	bl	402d00 <_ZdlPv@plt>
  405b18:	mov	w1, #0x1                   	// #1
  405b1c:	ldr	x0, [x23, #8]
  405b20:	cbz	x0, 405b00 <feof@plt+0x2a20>
  405b24:	bl	402d00 <_ZdlPv@plt>
  405b28:	mov	w1, #0x1                   	// #1
  405b2c:	b	405b00 <feof@plt+0x2a20>
  405b30:	str	x21, [x20, #120]
  405b34:	ldp	x9, x8, [x20, #32]
  405b38:	mov	x10, #0x4ec5                	// #20165
  405b3c:	ldr	x25, [x20, #64]
  405b40:	movk	x10, #0xc4ec, lsl #16
  405b44:	sub	x8, x8, x9
  405b48:	movk	x10, #0xec4e, lsl #32
  405b4c:	asr	x8, x8, #3
  405b50:	movk	x10, #0x4ec4, lsl #48
  405b54:	mul	x8, x8, x10
  405b58:	cbz	w8, 405c60 <feof@plt+0x2b80>
  405b5c:	ldr	x22, [sp, #256]
  405b60:	sub	w8, w8, #0x1
  405b64:	mov	w23, #0x90                  	// #144
  405b68:	mul	x10, x8, x28
  405b6c:	ldr	x11, [x9, x10]
  405b70:	cbz	x11, 405b94 <feof@plt+0x2ab4>
  405b74:	mov	x10, xzr
  405b78:	mov	x9, x10
  405b7c:	mov	x10, x11
  405b80:	ldr	x11, [x11, #40]
  405b84:	str	x9, [x10, #40]
  405b88:	cbnz	x11, 405b78 <feof@plt+0x2a98>
  405b8c:	ldr	x9, [x20, #32]
  405b90:	b	405b98 <feof@plt+0x2ab8>
  405b94:	mov	x10, xzr
  405b98:	mul	x11, x8, x28
  405b9c:	str	x10, [x9, x11]
  405ba0:	ldr	x10, [x20, #32]
  405ba4:	add	x9, x10, x11
  405ba8:	ldr	x11, [x9, #8]
  405bac:	cbz	x11, 405bd0 <feof@plt+0x2af0>
  405bb0:	mov	x9, xzr
  405bb4:	mov	x10, x9
  405bb8:	mov	x9, x11
  405bbc:	ldr	x11, [x11, #48]
  405bc0:	str	x10, [x9, #48]
  405bc4:	cbnz	x11, 405bb4 <feof@plt+0x2ad4>
  405bc8:	ldr	x10, [x20, #32]
  405bcc:	b	405bd4 <feof@plt+0x2af4>
  405bd0:	mov	x9, xzr
  405bd4:	madd	x10, x8, x28, x10
  405bd8:	str	x9, [x10, #8]
  405bdc:	cbz	x8, 405bec <feof@plt+0x2b0c>
  405be0:	ldr	x9, [x20, #32]
  405be4:	sub	x8, x8, #0x1
  405be8:	b	405b68 <feof@plt+0x2a88>
  405bec:	ldp	x9, x8, [x20, #32]
  405bf0:	mov	x10, #0x4ec5                	// #20165
  405bf4:	movk	x10, #0xc4ec, lsl #16
  405bf8:	movk	x10, #0xec4e, lsl #32
  405bfc:	sub	x8, x8, x9
  405c00:	asr	x8, x8, #3
  405c04:	movk	x10, #0x4ec4, lsl #48
  405c08:	mul	x8, x8, x10
  405c0c:	cmp	x8, #0x1
  405c10:	b.hi	405c70 <feof@plt+0x2b90>  // b.pmore
  405c14:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405c18:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405c1c:	ldrb	w8, [x8, #1724]
  405c20:	ldr	x21, [x9, #1464]
  405c24:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405c28:	ldr	x19, [x9, #1792]
  405c2c:	cmp	w8, #0x1
  405c30:	b.ne	405cc4 <feof@plt+0x2be4>  // b.any
  405c34:	ldr	x3, [x20, #8]
  405c38:	cbnz	x3, 405cc8 <feof@plt+0x2be8>
  405c3c:	ldr	x0, [x20]
  405c40:	mov	w1, #0x1                   	// #1
  405c44:	bl	44a420 <feof@plt+0x47340>
  405c48:	mov	x3, x0
  405c4c:	str	x0, [x20, #8]
  405c50:	cbnz	x0, 405cc8 <feof@plt+0x2be8>
  405c54:	ldr	x3, [x20]
  405c58:	str	x3, [x20, #8]
  405c5c:	b	405cc8 <feof@plt+0x2be8>
  405c60:	ldr	x22, [sp, #256]
  405c64:	mov	w23, #0x90                  	// #144
  405c68:	cmp	x8, #0x1
  405c6c:	b.ls	405c14 <feof@plt+0x2b34>  // b.plast
  405c70:	ldr	x8, [x9, #24]
  405c74:	cbz	x8, 405cd8 <feof@plt+0x2bf8>
  405c78:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405c7c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405c80:	ldrb	w8, [x8, #1724]
  405c84:	ldr	x21, [x9, #1464]
  405c88:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405c8c:	ldr	x19, [x9, #1792]
  405c90:	cmp	w8, #0x1
  405c94:	b.ne	405ce4 <feof@plt+0x2c04>  // b.any
  405c98:	ldr	x3, [x20, #8]
  405c9c:	cbnz	x3, 405ce8 <feof@plt+0x2c08>
  405ca0:	ldr	x0, [x20]
  405ca4:	mov	w1, #0x1                   	// #1
  405ca8:	bl	44a420 <feof@plt+0x47340>
  405cac:	mov	x3, x0
  405cb0:	str	x0, [x20, #8]
  405cb4:	cbnz	x0, 405ce8 <feof@plt+0x2c08>
  405cb8:	ldr	x3, [x20]
  405cbc:	str	x3, [x20, #8]
  405cc0:	b	405ce8 <feof@plt+0x2c08>
  405cc4:	ldr	x3, [x20]
  405cc8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  405ccc:	mov	x0, x21
  405cd0:	add	x1, x1, #0x716
  405cd4:	b	405d74 <feof@plt+0x2c94>
  405cd8:	mov	w8, #0xffffffff            	// #-1
  405cdc:	str	x8, [x9, #24]
  405ce0:	b	405d00 <feof@plt+0x2c20>
  405ce4:	ldr	x3, [x20]
  405ce8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  405cec:	mov	x0, x21
  405cf0:	add	x1, x1, #0x73e
  405cf4:	mov	x2, x19
  405cf8:	bl	40f8a4 <feof@plt+0xc7c4>
  405cfc:	mov	w1, #0x1                   	// #1
  405d00:	ldr	x8, [x20, #32]
  405d04:	ldr	x9, [x8, #120]
  405d08:	cbz	x9, 405d58 <feof@plt+0x2c78>
  405d0c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  405d10:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405d14:	ldrb	w8, [x8, #1724]
  405d18:	ldr	x21, [x9, #1464]
  405d1c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  405d20:	ldr	x19, [x9, #1792]
  405d24:	cmp	w8, #0x1
  405d28:	b.ne	405d64 <feof@plt+0x2c84>  // b.any
  405d2c:	ldr	x3, [x20, #8]
  405d30:	cbnz	x3, 405d68 <feof@plt+0x2c88>
  405d34:	ldr	x0, [x20]
  405d38:	mov	w1, #0x1                   	// #1
  405d3c:	bl	44a420 <feof@plt+0x47340>
  405d40:	mov	x3, x0
  405d44:	str	x0, [x20, #8]
  405d48:	cbnz	x0, 405d68 <feof@plt+0x2c88>
  405d4c:	ldr	x3, [x20]
  405d50:	str	x3, [x20, #8]
  405d54:	b	405d68 <feof@plt+0x2c88>
  405d58:	mov	w9, #0xffffffff            	// #-1
  405d5c:	str	x9, [x8, #120]
  405d60:	b	405d80 <feof@plt+0x2ca0>
  405d64:	ldr	x3, [x20]
  405d68:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  405d6c:	mov	x0, x21
  405d70:	add	x1, x1, #0x75f
  405d74:	mov	x2, x19
  405d78:	bl	40f8a4 <feof@plt+0xc7c4>
  405d7c:	mov	w1, #0x1                   	// #1
  405d80:	ldp	x9, x8, [x20, #32]
  405d84:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  405d88:	cmp	x8, x9
  405d8c:	b.ne	405d98 <feof@plt+0x2cb8>  // b.any
  405d90:	mov	x10, x8
  405d94:	b	406158 <feof@plt+0x3078>
  405d98:	mov	x10, xzr
  405d9c:	mov	x8, xzr
  405da0:	b	405de8 <feof@plt+0x2d08>
  405da4:	str	x12, [x8]
  405da8:	madd	x9, x10, x28, x9
  405dac:	ldrb	w12, [x9, #48]
  405db0:	str	x11, [x9, #96]
  405db4:	add	w10, w10, #0x1
  405db8:	orr	w11, w12, #0x4
  405dbc:	strb	w11, [x9, #48]
  405dc0:	ldp	x9, x11, [x20, #32]
  405dc4:	mov	x12, #0x4ec5                	// #20165
  405dc8:	movk	x12, #0xc4ec, lsl #16
  405dcc:	movk	x12, #0xec4e, lsl #32
  405dd0:	sub	x11, x11, x9
  405dd4:	asr	x11, x11, #3
  405dd8:	movk	x12, #0x4ec4, lsl #48
  405ddc:	mul	x11, x11, x12
  405de0:	cmp	x11, x10
  405de4:	b.ls	405f5c <feof@plt+0x2e7c>  // b.plast
  405de8:	mov	x11, x8
  405dec:	madd	x8, x10, x28, x9
  405df0:	ldr	x13, [x8]
  405df4:	cbz	x13, 405da8 <feof@plt+0x2cc8>
  405df8:	madd	x15, x10, x28, x9
  405dfc:	mov	w14, wzr
  405e00:	mov	w12, wzr
  405e04:	mov	x16, xzr
  405e08:	add	x15, x15, #0x10
  405e0c:	b	405e54 <feof@plt+0x2d74>
  405e10:	orr	w17, w17, #0x1
  405e14:	strh	w17, [x13, #32]
  405e18:	ldr	x17, [x15]
  405e1c:	sub	x17, x17, #0x1
  405e20:	str	x17, [x15]
  405e24:	ldr	x17, [x13, #8]
  405e28:	ldr	x18, [x17, #24]
  405e2c:	sub	x18, x18, #0x1
  405e30:	str	x18, [x17, #24]
  405e34:	ldr	x17, [x13, #8]
  405e38:	ldr	x13, [x13, #40]
  405e3c:	cmp	x16, x17
  405e40:	csinc	w18, w12, wzr, ls  // ls = plast
  405e44:	cmp	x16, #0x0
  405e48:	csel	w12, w12, w18, eq  // eq = none
  405e4c:	mov	x16, x17
  405e50:	cbz	x13, 405e74 <feof@plt+0x2d94>
  405e54:	ldrh	w17, [x13, #32]
  405e58:	bic	w18, w1, w17, lsr #2
  405e5c:	add	w14, w14, w18
  405e60:	tbnz	w17, #1, 405e34 <feof@plt+0x2d54>
  405e64:	cbz	x25, 405e10 <feof@plt+0x2d30>
  405e68:	ldr	x18, [x25], #8
  405e6c:	str	x18, [x13, #16]
  405e70:	b	405e10 <feof@plt+0x2d30>
  405e74:	cmp	w14, #0x1
  405e78:	b.ne	405edc <feof@plt+0x2dfc>  // b.any
  405e7c:	ldr	x13, [x8]
  405e80:	cbz	x13, 405edc <feof@plt+0x2dfc>
  405e84:	madd	x14, x10, x28, x9
  405e88:	add	x14, x14, #0x30
  405e8c:	b	405e98 <feof@plt+0x2db8>
  405e90:	ldr	x13, [x13, #40]
  405e94:	cbz	x13, 405edc <feof@plt+0x2dfc>
  405e98:	ldrh	w15, [x13, #32]
  405e9c:	tbnz	w15, #2, 405e90 <feof@plt+0x2db0>
  405ea0:	orr	w16, w15, #0x80
  405ea4:	strh	w16, [x13, #32]
  405ea8:	tbz	w15, #3, 405e90 <feof@plt+0x2db0>
  405eac:	ldrb	w15, [x14]
  405eb0:	tbz	w15, #4, 405e90 <feof@plt+0x2db0>
  405eb4:	ldr	x15, [x13, #8]
  405eb8:	ldr	x16, [x15, #8]
  405ebc:	cmp	x16, x13
  405ec0:	b.ne	405e90 <feof@plt+0x2db0>  // b.any
  405ec4:	ldr	x16, [x13, #48]
  405ec8:	cbnz	x16, 405e90 <feof@plt+0x2db0>
  405ecc:	ldrb	w16, [x15, #48]
  405ed0:	orr	w16, w16, #0x20
  405ed4:	strb	w16, [x15, #48]
  405ed8:	b	405e90 <feof@plt+0x2db0>
  405edc:	cbz	w12, 405da8 <feof@plt+0x2cc8>
  405ee0:	ldr	x12, [x8]
  405ee4:	b	405eec <feof@plt+0x2e0c>
  405ee8:	cbz	w16, 405da4 <feof@plt+0x2cc4>
  405eec:	mov	x14, x12
  405ef0:	ldr	x13, [x14, #40]!
  405ef4:	cbz	x13, 405da4 <feof@plt+0x2cc4>
  405ef8:	mov	x17, xzr
  405efc:	mov	w16, wzr
  405f00:	mov	x15, x12
  405f04:	b	405f20 <feof@plt+0x2e40>
  405f08:	mov	x14, x13
  405f0c:	mov	x13, x15
  405f10:	mov	x15, x14
  405f14:	mov	x17, x13
  405f18:	ldr	x13, [x14, #40]!
  405f1c:	cbz	x13, 405ee8 <feof@plt+0x2e08>
  405f20:	ldr	x18, [x15, #8]
  405f24:	ldr	x0, [x13, #8]
  405f28:	cmp	x18, x0
  405f2c:	b.ls	405f08 <feof@plt+0x2e28>  // b.plast
  405f30:	mov	x0, x13
  405f34:	cbz	x17, 405f40 <feof@plt+0x2e60>
  405f38:	mov	x0, x12
  405f3c:	str	x13, [x17, #40]
  405f40:	ldr	x12, [x13, #40]
  405f44:	mov	w16, #0x1                   	// #1
  405f48:	str	x12, [x14]
  405f4c:	mov	x12, x0
  405f50:	mov	x14, x15
  405f54:	str	x15, [x13, #40]
  405f58:	b	405f14 <feof@plt+0x2e34>
  405f5c:	mov	x9, xzr
  405f60:	b	405f68 <feof@plt+0x2e88>
  405f64:	cbz	x8, 406150 <feof@plt+0x3070>
  405f68:	ldrb	w11, [x8, #48]
  405f6c:	ldr	x12, [x8, #16]
  405f70:	ldr	x10, [x8, #96]
  405f74:	and	w11, w11, #0xfffffffb
  405f78:	strb	w11, [x8, #48]
  405f7c:	cbz	x12, 405fa8 <feof@plt+0x2ec8>
  405f80:	ldr	x12, [x8, #24]
  405f84:	cbnz	x12, 405fe0 <feof@plt+0x2f00>
  405f88:	ldr	x13, [x8, #8]
  405f8c:	cbz	x13, 405fc8 <feof@plt+0x2ee8>
  405f90:	mov	x12, xzr
  405f94:	ldr	x14, [x13, #16]
  405f98:	ldr	x13, [x13, #48]
  405f9c:	add	x12, x14, x12
  405fa0:	cbnz	x13, 405f94 <feof@plt+0x2eb4>
  405fa4:	b	405fcc <feof@plt+0x2eec>
  405fa8:	ldr	x13, [x8]
  405fac:	cbz	x13, 405fc8 <feof@plt+0x2ee8>
  405fb0:	mov	x12, xzr
  405fb4:	ldr	x14, [x13, #16]
  405fb8:	ldr	x13, [x13, #40]
  405fbc:	add	x12, x14, x12
  405fc0:	cbnz	x13, 405fb4 <feof@plt+0x2ed4>
  405fc4:	b	405fcc <feof@plt+0x2eec>
  405fc8:	mov	x12, xzr
  405fcc:	str	x9, [x8, #96]
  405fd0:	orr	w9, w11, #0x3
  405fd4:	strb	w9, [x8, #48]
  405fd8:	mov	x9, x8
  405fdc:	str	x12, [x8, #40]
  405fe0:	mov	x8, x10
  405fe4:	cbnz	x10, 405f68 <feof@plt+0x2e88>
  405fe8:	cbz	x9, 406150 <feof@plt+0x3070>
  405fec:	mov	x8, xzr
  405ff0:	b	405ffc <feof@plt+0x2f1c>
  405ff4:	mov	x9, x10
  405ff8:	cbz	x10, 405f64 <feof@plt+0x2e84>
  405ffc:	ldrb	w11, [x9, #48]
  406000:	ldr	x12, [x9, #16]
  406004:	ldr	x10, [x9, #96]
  406008:	and	w11, w11, #0xfffffffd
  40600c:	cmp	x12, #0x1
  406010:	strb	w11, [x9, #48]
  406014:	b.ne	4060ac <feof@plt+0x2fcc>  // b.any
  406018:	ldr	x11, [x9, #40]
  40601c:	ldr	x13, [x9]
  406020:	mov	x12, xzr
  406024:	ldrb	w14, [x13, #32]
  406028:	ldr	x15, [x13, #16]
  40602c:	tst	w14, #0x1
  406030:	csel	x12, x13, x12, eq  // eq = none
  406034:	ldr	x13, [x13, #40]
  406038:	sub	x11, x11, x15
  40603c:	cbnz	x13, 406024 <feof@plt+0x2f44>
  406040:	ldrh	w13, [x12, #32]
  406044:	str	x11, [x12, #16]
  406048:	ldr	x11, [x12, #8]
  40604c:	orr	w13, w13, #0x1
  406050:	strh	w13, [x12, #32]
  406054:	ldr	x13, [x9, #16]
  406058:	sub	x12, x13, #0x1
  40605c:	str	x12, [x9, #16]
  406060:	ldr	x13, [x11, #24]
  406064:	ldrb	w12, [x11, #48]
  406068:	sub	x13, x13, #0x1
  40606c:	str	x13, [x11, #24]
  406070:	tbnz	w12, #0, 406090 <feof@plt+0x2fb0>
  406074:	cbnz	x13, 4060ac <feof@plt+0x2fcc>
  406078:	tbnz	w12, #2, 4060ac <feof@plt+0x2fcc>
  40607c:	str	x8, [x11, #96]
  406080:	orr	w8, w12, #0x4
  406084:	strb	w8, [x11, #48]
  406088:	mov	x8, x11
  40608c:	b	4060ac <feof@plt+0x2fcc>
  406090:	cmp	x13, #0x1
  406094:	b.ne	4060ac <feof@plt+0x2fcc>  // b.any
  406098:	tbnz	w12, #1, 4060ac <feof@plt+0x2fcc>
  40609c:	str	x10, [x11, #96]
  4060a0:	orr	w10, w12, #0x2
  4060a4:	strb	w10, [x11, #48]
  4060a8:	mov	x10, x11
  4060ac:	ldr	x11, [x9, #24]
  4060b0:	cmp	x11, #0x1
  4060b4:	b.ne	405ff4 <feof@plt+0x2f14>  // b.any
  4060b8:	ldr	x11, [x9, #40]
  4060bc:	ldr	x13, [x9, #8]
  4060c0:	mov	x12, xzr
  4060c4:	ldrb	w14, [x13, #32]
  4060c8:	ldr	x15, [x13, #16]
  4060cc:	tst	w14, #0x1
  4060d0:	csel	x12, x13, x12, eq  // eq = none
  4060d4:	ldr	x13, [x13, #48]
  4060d8:	sub	x11, x11, x15
  4060dc:	cbnz	x13, 4060c4 <feof@plt+0x2fe4>
  4060e0:	ldrh	w13, [x12, #32]
  4060e4:	str	x11, [x12, #16]
  4060e8:	ldr	x11, [x12]
  4060ec:	orr	w13, w13, #0x1
  4060f0:	strh	w13, [x12, #32]
  4060f4:	ldr	x13, [x9, #24]
  4060f8:	sub	x12, x13, #0x1
  4060fc:	str	x12, [x9, #24]
  406100:	ldr	x12, [x11, #16]
  406104:	ldrb	w9, [x11, #48]
  406108:	sub	x12, x12, #0x1
  40610c:	str	x12, [x11, #16]
  406110:	tbnz	w9, #0, 406130 <feof@plt+0x3050>
  406114:	cbnz	x12, 405ff4 <feof@plt+0x2f14>
  406118:	tbnz	w9, #2, 405ff4 <feof@plt+0x2f14>
  40611c:	str	x8, [x11, #96]
  406120:	orr	w8, w9, #0x4
  406124:	strb	w8, [x11, #48]
  406128:	mov	x8, x11
  40612c:	b	405ff4 <feof@plt+0x2f14>
  406130:	cmp	x12, #0x1
  406134:	b.ne	405ff4 <feof@plt+0x2f14>  // b.any
  406138:	tbnz	w9, #1, 405ff4 <feof@plt+0x2f14>
  40613c:	orr	w9, w9, #0x2
  406140:	str	x10, [x11, #96]
  406144:	strb	w9, [x11, #48]
  406148:	mov	x10, x11
  40614c:	b	405ff4 <feof@plt+0x2f14>
  406150:	ldp	x9, x10, [x20, #32]
  406154:	mov	x8, x9
  406158:	sub	x8, x10, x8
  40615c:	mov	x10, #0x4ec5                	// #20165
  406160:	movk	x10, #0xc4ec, lsl #16
  406164:	movk	x10, #0xec4e, lsl #32
  406168:	asr	x8, x8, #3
  40616c:	movk	x10, #0x4ec4, lsl #48
  406170:	mul	x8, x8, x10
  406174:	lsr	x8, x8, #32
  406178:	cbz	x8, 4061f8 <feof@plt+0x3118>
  40617c:	mov	w8, wzr
  406180:	umaddl	x10, w8, w28, x9
  406184:	ldrb	w10, [x10, #48]
  406188:	add	w8, w8, #0x1
  40618c:	tbnz	w10, #0, 406180 <feof@plt+0x30a0>
  406190:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406194:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  406198:	ldrb	w8, [x8, #1724]
  40619c:	ldr	x21, [x9, #1464]
  4061a0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4061a4:	ldr	x19, [x9, #1792]
  4061a8:	cmp	w8, #0x1
  4061ac:	b.ne	4061dc <feof@plt+0x30fc>  // b.any
  4061b0:	ldr	x3, [x20, #8]
  4061b4:	cbnz	x3, 4061e0 <feof@plt+0x3100>
  4061b8:	ldr	x0, [x20]
  4061bc:	mov	w1, #0x1                   	// #1
  4061c0:	bl	44a420 <feof@plt+0x47340>
  4061c4:	mov	x3, x0
  4061c8:	str	x0, [x20, #8]
  4061cc:	cbnz	x0, 4061e0 <feof@plt+0x3100>
  4061d0:	ldr	x3, [x20]
  4061d4:	str	x3, [x20, #8]
  4061d8:	b	4061e0 <feof@plt+0x3100>
  4061dc:	ldr	x3, [x20]
  4061e0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4061e4:	mov	x0, x21
  4061e8:	add	x1, x1, #0x781
  4061ec:	mov	x2, x19
  4061f0:	bl	40f8a4 <feof@plt+0xc7c4>
  4061f4:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  4061f8:	ldrb	w8, [x20, #28]
  4061fc:	tbz	w8, #0, 4058f0 <feof@plt+0x2810>
  406200:	mov	x0, x20
  406204:	bl	408784 <feof@plt+0x56a4>
  406208:	b	4058f0 <feof@plt+0x2810>
  40620c:	bl	402b20 <free@plt>
  406210:	ldr	x8, [sp, #264]
  406214:	ldr	x10, [sp, #168]
  406218:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40621c:	add	x9, x9, #0x600
  406220:	ldp	x22, x9, [x9]
  406224:	ldr	x8, [x8, x10, lsl #3]
  406228:	cmp	x22, x9
  40622c:	str	x8, [sp, #160]
  406230:	b.ne	4062f4 <feof@plt+0x3214>  // b.any
  406234:	ldr	x20, [sp, #160]
  406238:	cbz	x20, 406874 <feof@plt+0x3794>
  40623c:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  406240:	add	x19, x19, #0x660
  406244:	ldp	x0, x1, [x19]
  406248:	sub	x2, x29, #0xf8
  40624c:	stur	x20, [x29, #-248]
  406250:	bl	40b2e8 <feof@plt+0x8208>
  406254:	ldr	x8, [x19, #8]
  406258:	cmp	x8, x0
  40625c:	b.eq	40687c <feof@plt+0x379c>  // b.none
  406260:	ldr	w8, [x0, #8]
  406264:	ldr	x9, [x21, #1608]
  406268:	madd	x8, x8, x23, x9
  40626c:	ldr	x21, [x8, #80]
  406270:	b	406888 <feof@plt+0x37a8>
  406274:	ldur	s0, [x29, #-172]
  406278:	mov	w8, #0x42c80000            	// #1120403456
  40627c:	fmov	s1, w8
  406280:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  406284:	ucvtf	s0, s0
  406288:	fmul	s0, s0, s1
  40628c:	ucvtf	s1, w19
  406290:	fdiv	s0, s0, s1
  406294:	add	x20, x20, #0x730
  406298:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40629c:	fcvt	d0, s0
  4062a0:	mov	w2, #0x2                   	// #2
  4062a4:	mov	x0, x20
  4062a8:	add	x1, x1, #0x900
  4062ac:	bl	402c30 <sprintf@plt>
  4062b0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4062b4:	mov	x0, x21
  4062b8:	add	x1, x1, #0xdc2
  4062bc:	mov	x2, x20
  4062c0:	mov	w3, w19
  4062c4:	bl	40f8a4 <feof@plt+0xc7c4>
  4062c8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4062cc:	ldr	x0, [x8, #1456]
  4062d0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  4062d4:	add	x1, x1, #0xbb4
  4062d8:	bl	40f8a4 <feof@plt+0xc7c4>
  4062dc:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  4062e0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4062e4:	ldr	x8, [x8, #1544]
  4062e8:	add	x22, x22, #0x8
  4062ec:	cmp	x22, x8
  4062f0:	b.eq	406234 <feof@plt+0x3154>  // b.none
  4062f4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4062f8:	ldrb	w8, [x8, #1724]
  4062fc:	ldr	x26, [x22]
  406300:	movi	v0.2d, #0x0
  406304:	stur	xzr, [x29, #-144]
  406308:	cmp	w8, #0x1
  40630c:	stp	q0, q0, [x29, #-176]
  406310:	b.ne	40633c <feof@plt+0x325c>  // b.any
  406314:	ldr	x0, [x26, #8]
  406318:	cbnz	x0, 406340 <feof@plt+0x3260>
  40631c:	ldr	x0, [x26]
  406320:	mov	w1, #0x1                   	// #1
  406324:	bl	44a420 <feof@plt+0x47340>
  406328:	str	x0, [x26, #8]
  40632c:	cbnz	x0, 406340 <feof@plt+0x3260>
  406330:	ldr	x0, [x26]
  406334:	str	x0, [x26, #8]
  406338:	b	406340 <feof@plt+0x3260>
  40633c:	ldr	x0, [x26]
  406340:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406344:	stur	x0, [x29, #-144]
  406348:	ldrb	w10, [x8, #1704]
  40634c:	ldp	x8, x9, [x26, #32]
  406350:	cmp	w10, #0x0
  406354:	sub	x10, x29, #0xb0
  406358:	csel	x28, x10, xzr, ne  // ne = any
  40635c:	subs	x11, x9, x8
  406360:	b.eq	4067b8 <feof@plt+0x36d8>  // b.none
  406364:	mov	x12, #0x4ec5                	// #20165
  406368:	movk	x12, #0xc4ec, lsl #16
  40636c:	movk	x12, #0xec4e, lsl #32
  406370:	asr	x11, x11, #3
  406374:	movk	x12, #0x4ec4, lsl #48
  406378:	mov	x14, xzr
  40637c:	mov	w10, wzr
  406380:	mov	w15, wzr
  406384:	mul	x11, x11, x12
  406388:	str	x22, [sp, #176]
  40638c:	b	4063bc <feof@plt+0x32dc>
  406390:	add	w14, w15, #0x1
  406394:	mov	x12, #0x4ec5                	// #20165
  406398:	movk	x12, #0xc4ec, lsl #16
  40639c:	sub	x11, x9, x8
  4063a0:	movk	x12, #0xec4e, lsl #32
  4063a4:	asr	x11, x11, #3
  4063a8:	movk	x12, #0x4ec4, lsl #48
  4063ac:	mul	x11, x11, x12
  4063b0:	cmp	x11, x14
  4063b4:	mov	w15, w14
  4063b8:	b.eq	4067b0 <feof@plt+0x36d0>  // b.none
  4063bc:	mov	w12, #0x68                  	// #104
  4063c0:	madd	x27, x14, x12, x8
  4063c4:	str	x27, [sp, #192]
  4063c8:	ldr	x12, [x27, #40]!
  4063cc:	cbz	w15, 4063ec <feof@plt+0x330c>
  4063d0:	cbz	x12, 4063ec <feof@plt+0x330c>
  4063d4:	add	w12, w15, #0x1
  4063d8:	cmp	x11, x12
  4063dc:	b.eq	4063ec <feof@plt+0x330c>  // b.none
  4063e0:	ldr	w11, [x26, #56]
  4063e4:	add	w11, w11, #0x1
  4063e8:	str	w11, [x26, #56]
  4063ec:	mov	w13, #0x68                  	// #104
  4063f0:	madd	x12, x14, x13, x8
  4063f4:	ldr	x11, [x12, #56]!
  4063f8:	str	x12, [sp, #240]
  4063fc:	mov	x16, x12
  406400:	ldr	x12, [x16, #8]!
  406404:	cmp	x12, x11
  406408:	str	x16, [sp, #232]
  40640c:	b.eq	406390 <feof@plt+0x32b0>  // b.none
  406410:	madd	x8, x14, x13, x8
  406414:	add	x10, x8, #0x50
  406418:	mov	x9, xzr
  40641c:	mov	x25, xzr
  406420:	str	x10, [sp, #216]
  406424:	add	x10, x8, #0x58
  406428:	add	x24, x8, #0x30
  40642c:	add	w8, w15, #0x1
  406430:	str	w15, [sp, #228]
  406434:	stp	x8, x10, [sp, #200]
  406438:	str	x24, [sp, #248]
  40643c:	b	406468 <feof@plt+0x3388>
  406440:	ldp	x8, x9, [sp, #232]
  406444:	mov	w23, #0x90                  	// #144
  406448:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  40644c:	ldr	x8, [x8]
  406450:	ldr	x11, [x9]
  406454:	ldr	x9, [sp, #256]
  406458:	sub	x8, x8, x11
  40645c:	add	w9, w9, #0x1
  406460:	cmp	x9, x8, asr #5
  406464:	b.cs	4067a0 <feof@plt+0x36c0>  // b.hs, b.nlast
  406468:	add	x8, x11, x9, lsl #5
  40646c:	ldp	x11, x10, [sp, #208]
  406470:	str	x9, [sp, #256]
  406474:	ldr	w9, [x8]
  406478:	str	xzr, [x10]
  40647c:	mov	w10, #0xffffffff            	// #-1
  406480:	str	w10, [x11]
  406484:	ldr	x11, [x8, #16]!
  406488:	mov	x10, x8
  40648c:	ldr	x12, [x10, #-8]!
  406490:	cmp	x11, x12
  406494:	b.ne	4064fc <feof@plt+0x341c>  // b.any
  406498:	ldr	w8, [sp, #228]
  40649c:	cbz	w8, 406440 <feof@plt+0x3360>
  4064a0:	cbz	x25, 406440 <feof@plt+0x3360>
  4064a4:	ldp	x9, x8, [x26, #32]
  4064a8:	sub	x8, x8, x9
  4064ac:	mov	x9, #0x4ec5                	// #20165
  4064b0:	movk	x9, #0xc4ec, lsl #16
  4064b4:	movk	x9, #0xec4e, lsl #32
  4064b8:	asr	x8, x8, #3
  4064bc:	movk	x9, #0x4ec4, lsl #48
  4064c0:	mul	x8, x8, x9
  4064c4:	ldr	x9, [sp, #200]
  4064c8:	cmp	x8, x9
  4064cc:	b.eq	406440 <feof@plt+0x3360>  // b.none
  4064d0:	mov	x23, x25
  4064d4:	ldr	x10, [x23, #48]!
  4064d8:	mov	x8, x23
  4064dc:	ldr	x9, [x8, #-8]!
  4064e0:	cmp	x9, x10
  4064e4:	b.eq	406608 <feof@plt+0x3528>  // b.none
  4064e8:	ldr	x10, [sp, #192]
  4064ec:	str	x10, [x9]
  4064f0:	ldr	x9, [x8]
  4064f4:	add	x9, x9, #0x8
  4064f8:	b	4066ac <feof@plt+0x35cc>
  4064fc:	mov	x13, xzr
  406500:	mov	w11, #0x1                   	// #1
  406504:	b	406534 <feof@plt+0x3454>
  406508:	ldr	x12, [x27]
  40650c:	ldr	x13, [x25]
  406510:	add	x12, x13, x12
  406514:	str	x12, [x25]
  406518:	ldr	x14, [x8]
  40651c:	ldr	x12, [x10]
  406520:	mov	w13, w11
  406524:	add	w11, w11, #0x1
  406528:	sub	x14, x14, x12
  40652c:	cmp	x13, x14, asr #2
  406530:	b.cs	406498 <feof@plt+0x33b8>  // b.hs, b.nlast
  406534:	ldrb	w14, [x26, #28]
  406538:	ldr	w12, [x12, x13, lsl #2]
  40653c:	tbz	w14, #2, 406564 <feof@plt+0x3484>
  406540:	ldr	w13, [x26, #104]
  406544:	cmp	w13, w9
  406548:	b.ne	406564 <feof@plt+0x3484>  // b.any
  40654c:	ldr	w13, [x26, #88]
  406550:	cmp	w12, w13
  406554:	b.cc	406564 <feof@plt+0x3484>  // b.lo, b.ul, b.last
  406558:	ldr	w14, [x26, #96]
  40655c:	cmp	w14, w12
  406560:	b.cs	4065bc <feof@plt+0x34dc>  // b.hs, b.nlast
  406564:	ldr	x13, [x21, #1608]
  406568:	madd	x13, x9, x23, x13
  40656c:	ldp	x13, x14, [x13, #24]
  406570:	sub	x14, x14, x13
  406574:	cmp	x12, x14, asr #6
  406578:	b.cs	407d20 <feof@plt+0x4c40>  // b.hs, b.nlast
  40657c:	add	x12, x13, x12, lsl #6
  406580:	mov	x25, x12
  406584:	cbz	x28, 4065d8 <feof@plt+0x34f8>
  406588:	ldrb	w13, [x12, #56]
  40658c:	tbnz	w13, #0, 40659c <feof@plt+0x34bc>
  406590:	ldr	w13, [x28]
  406594:	add	w13, w13, #0x1
  406598:	str	w13, [x28]
  40659c:	ldr	x13, [x25]
  4065a0:	cbnz	x13, 4065d8 <feof@plt+0x34f8>
  4065a4:	ldr	x13, [x27]
  4065a8:	cbz	x13, 4065d8 <feof@plt+0x34f8>
  4065ac:	ldr	w13, [x28, #4]
  4065b0:	add	w13, w13, #0x1
  4065b4:	str	w13, [x28, #4]
  4065b8:	b	4065d8 <feof@plt+0x34f8>
  4065bc:	ldp	x14, x15, [x26, #112]
  4065c0:	sub	w12, w12, w13
  4065c4:	sub	x13, x15, x14
  4065c8:	cmp	x12, x13, asr #6
  4065cc:	b.cs	407d44 <feof@plt+0x4c64>  // b.hs, b.nlast
  4065d0:	add	x25, x14, x12, lsl #6
  4065d4:	mov	x12, x25
  4065d8:	ldrb	w13, [x12, #56]!
  4065dc:	orr	w14, w13, #0x1
  4065e0:	strb	w14, [x12]
  4065e4:	ldrb	w14, [x24]
  4065e8:	tbnz	w14, #3, 406508 <feof@plt+0x3428>
  4065ec:	orr	w14, w13, #0x3
  4065f0:	strb	w14, [x12]
  4065f4:	ldr	x14, [x27]
  4065f8:	cbnz	x14, 406508 <feof@plt+0x3428>
  4065fc:	orr	w13, w13, #0x7
  406600:	strb	w13, [x12]
  406604:	b	406508 <feof@plt+0x3428>
  406608:	ldr	x19, [x25, #32]
  40660c:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  406610:	sub	x21, x9, x19
  406614:	cmp	x21, x8
  406618:	b.eq	407d38 <feof@plt+0x4c58>  // b.none
  40661c:	asr	x20, x21, #3
  406620:	cmp	x21, #0x0
  406624:	csinc	x8, x20, xzr, ne  // ne = any
  406628:	adds	x8, x8, x20
  40662c:	lsr	x10, x8, #60
  406630:	cset	w9, cs  // cs = hs, nlast
  406634:	cmp	x10, #0x0
  406638:	cset	w10, ne  // ne = any
  40663c:	orr	w9, w9, w10
  406640:	cmp	w9, #0x0
  406644:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  406648:	csel	x8, x9, x8, ne  // ne = any
  40664c:	str	x8, [sp, #184]
  406650:	cbz	x8, 406664 <feof@plt+0x3584>
  406654:	lsl	x0, x8, #3
  406658:	bl	402d30 <_Znwm@plt>
  40665c:	mov	x22, x0
  406660:	b	406668 <feof@plt+0x3588>
  406664:	mov	x22, xzr
  406668:	ldr	x8, [sp, #192]
  40666c:	add	x20, x22, x20, lsl #3
  406670:	cmp	x21, #0x1
  406674:	str	x8, [x20]
  406678:	b.lt	40668c <feof@plt+0x35ac>  // b.tstop
  40667c:	mov	x0, x22
  406680:	mov	x1, x19
  406684:	mov	x2, x21
  406688:	bl	402e30 <memmove@plt>
  40668c:	add	x20, x20, #0x8
  406690:	cbz	x19, 40669c <feof@plt+0x35bc>
  406694:	mov	x0, x19
  406698:	bl	402d00 <_ZdlPv@plt>
  40669c:	stp	x22, x20, [x25, #32]
  4066a0:	ldr	x8, [sp, #184]
  4066a4:	add	x9, x22, x8, lsl #3
  4066a8:	mov	x8, x23
  4066ac:	str	x9, [x8]
  4066b0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4066b4:	ldrb	w8, [x8, #1696]
  4066b8:	cmp	w8, #0x1
  4066bc:	b.ne	406440 <feof@plt+0x3360>  // b.any
  4066c0:	ldr	x8, [sp, #192]
  4066c4:	ldr	x23, [x8]
  4066c8:	cbz	x23, 406440 <feof@plt+0x3360>
  4066cc:	ldr	x21, [x25, #16]
  4066d0:	b	4066ec <feof@plt+0x360c>
  4066d4:	str	x23, [x21]
  4066d8:	ldr	x8, [x25, #16]
  4066dc:	add	x21, x8, #0x8
  4066e0:	str	x21, [x25, #16]
  4066e4:	ldr	x23, [x23, #40]
  4066e8:	cbz	x23, 406440 <feof@plt+0x3360>
  4066ec:	ldr	x8, [x25, #24]
  4066f0:	cmp	x21, x8
  4066f4:	b.ne	4066d4 <feof@plt+0x35f4>  // b.any
  4066f8:	ldr	x19, [x25, #8]
  4066fc:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  406700:	sub	x21, x21, x19
  406704:	cmp	x21, x8
  406708:	b.eq	407d38 <feof@plt+0x4c58>  // b.none
  40670c:	asr	x24, x21, #3
  406710:	cmp	x21, #0x0
  406714:	csinc	x8, x24, xzr, ne  // ne = any
  406718:	adds	x8, x8, x24
  40671c:	lsr	x10, x8, #60
  406720:	cset	w9, cs  // cs = hs, nlast
  406724:	cmp	x10, #0x0
  406728:	cset	w10, ne  // ne = any
  40672c:	orr	w9, w9, w10
  406730:	cmp	w9, #0x0
  406734:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  406738:	csel	x20, x9, x8, ne  // ne = any
  40673c:	cbz	x20, 406750 <feof@plt+0x3670>
  406740:	lsl	x0, x20, #3
  406744:	bl	402d30 <_Znwm@plt>
  406748:	mov	x22, x0
  40674c:	b	406754 <feof@plt+0x3674>
  406750:	mov	x22, xzr
  406754:	add	x24, x22, x24, lsl #3
  406758:	cmp	x21, #0x1
  40675c:	str	x23, [x24]
  406760:	b.lt	406774 <feof@plt+0x3694>  // b.tstop
  406764:	mov	x0, x22
  406768:	mov	x1, x19
  40676c:	mov	x2, x21
  406770:	bl	402e30 <memmove@plt>
  406774:	add	x21, x24, #0x8
  406778:	cbz	x19, 406784 <feof@plt+0x36a4>
  40677c:	mov	x0, x19
  406780:	bl	402d00 <_ZdlPv@plt>
  406784:	stp	x22, x21, [x25, #8]
  406788:	ldr	x24, [sp, #248]
  40678c:	add	x8, x22, x20, lsl #3
  406790:	str	x8, [x25, #24]
  406794:	ldr	x23, [x23, #40]
  406798:	cbnz	x23, 4066ec <feof@plt+0x360c>
  40679c:	b	406440 <feof@plt+0x3360>
  4067a0:	ldp	x8, x9, [x26, #32]
  4067a4:	ldr	x14, [sp, #200]
  4067a8:	mov	w10, #0x1                   	// #1
  4067ac:	b	406394 <feof@plt+0x32b4>
  4067b0:	ldr	x22, [sp, #176]
  4067b4:	tbnz	w10, #0, 406820 <feof@plt+0x3740>
  4067b8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4067bc:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4067c0:	ldrb	w8, [x8, #1724]
  4067c4:	ldr	x21, [x9, #1464]
  4067c8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4067cc:	ldr	x19, [x9, #1792]
  4067d0:	cmp	w8, #0x1
  4067d4:	b.ne	406804 <feof@plt+0x3724>  // b.any
  4067d8:	ldr	x3, [x26, #8]
  4067dc:	cbnz	x3, 406808 <feof@plt+0x3728>
  4067e0:	ldr	x0, [x26]
  4067e4:	mov	w1, #0x1                   	// #1
  4067e8:	bl	44a420 <feof@plt+0x47340>
  4067ec:	mov	x3, x0
  4067f0:	str	x0, [x26, #8]
  4067f4:	cbnz	x0, 406808 <feof@plt+0x3728>
  4067f8:	ldr	x3, [x26]
  4067fc:	str	x3, [x26, #8]
  406800:	b	406808 <feof@plt+0x3728>
  406804:	ldr	x3, [x26]
  406808:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40680c:	mov	x0, x21
  406810:	add	x1, x1, #0x846
  406814:	mov	x2, x19
  406818:	bl	40f8a4 <feof@plt+0xc7c4>
  40681c:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  406820:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406824:	ldrb	w8, [x8, #1704]
  406828:	mov	w28, #0x68                  	// #104
  40682c:	cmp	w8, #0x1
  406830:	b.ne	4062e0 <feof@plt+0x3200>  // b.any
  406834:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  406838:	ldr	x0, [x20, #1456]
  40683c:	ldur	x3, [x29, #-144]
  406840:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406844:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  406848:	add	x1, x1, #0x85c
  40684c:	add	x2, x2, #0x865
  406850:	bl	40f8a4 <feof@plt+0xc7c4>
  406854:	ldur	w19, [x29, #-176]
  406858:	ldr	x21, [x20, #1456]
  40685c:	cbnz	w19, 406274 <feof@plt+0x3194>
  406860:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406864:	mov	x0, x21
  406868:	add	x1, x1, #0xddb
  40686c:	bl	40f8a4 <feof@plt+0xc7c4>
  406870:	b	4062c8 <feof@plt+0x31e8>
  406874:	mov	x21, xzr
  406878:	b	406888 <feof@plt+0x37a8>
  40687c:	mov	x0, x20
  406880:	bl	408614 <feof@plt+0x5534>
  406884:	mov	x21, x0
  406888:	mov	x0, x21
  40688c:	bl	4613f4 <feof@plt+0x5e314>
  406890:	mov	x19, x0
  406894:	bl	402a50 <strlen@plt>
  406898:	add	x0, x0, #0xe
  40689c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4068a0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4068a4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1838>
  4068a8:	add	x1, x1, #0xca0
  4068ac:	mov	x2, x19
  4068b0:	add	x3, x3, #0x86e
  4068b4:	mov	x22, x0
  4068b8:	bl	402c30 <sprintf@plt>
  4068bc:	mov	w0, #0x38                  	// #56
  4068c0:	bl	402d30 <_Znwm@plt>
  4068c4:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  4068c8:	movi	v0.2d, #0x0
  4068cc:	add	x8, x8, #0xe28
  4068d0:	mov	x23, x0
  4068d4:	stp	q0, q0, [x0]
  4068d8:	str	q0, [x0, #32]
  4068dc:	stp	xzr, xzr, [x0, #40]
  4068e0:	str	x8, [x0]
  4068e4:	stp	xzr, xzr, [x0, #24]
  4068e8:	strb	wzr, [x0, #52]
  4068ec:	mov	w0, #0xd                   	// #13
  4068f0:	bl	40eacc <feof@plt+0xb9ec>
  4068f4:	mov	w8, w0
  4068f8:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  4068fc:	lsl	x8, x8, #4
  406900:	add	x9, x9, #0xf68
  406904:	ldr	w20, [x9, x8]
  406908:	mov	w19, w0
  40690c:	mov	w1, #0x10                  	// #16
  406910:	mov	x0, x20
  406914:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  406918:	cbz	x0, 407d5c <feof@plt+0x4c7c>
  40691c:	cbz	w20, 406968 <feof@plt+0x3888>
  406920:	cmp	w20, #0x1
  406924:	b.ne	406930 <feof@plt+0x3850>  // b.any
  406928:	mov	x8, xzr
  40692c:	b	406954 <feof@plt+0x3874>
  406930:	and	x8, x20, #0xfffffffe
  406934:	add	x9, x0, #0x10
  406938:	mov	x10, x8
  40693c:	stur	xzr, [x9, #-16]
  406940:	str	xzr, [x9], #32
  406944:	subs	x10, x10, #0x2
  406948:	b.ne	40693c <feof@plt+0x385c>  // b.any
  40694c:	cmp	x8, x20
  406950:	b.eq	406968 <feof@plt+0x3888>  // b.none
  406954:	sub	x9, x20, x8
  406958:	add	x8, x0, x8, lsl #4
  40695c:	subs	x9, x9, #0x1
  406960:	str	xzr, [x8], #16
  406964:	b.ne	40695c <feof@plt+0x387c>  // b.any
  406968:	stp	x0, x20, [x23, #8]
  40696c:	mov	w0, #0x10                  	// #16
  406970:	str	x22, [sp, #232]
  406974:	str	w19, [x23, #48]
  406978:	bl	402d30 <_Znwm@plt>
  40697c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  406980:	add	x1, x1, #0x8ae
  406984:	mov	x19, x0
  406988:	bl	40e38c <feof@plt+0xb2ac>
  40698c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406990:	mov	x0, x23
  406994:	add	x1, x1, #0x7a2
  406998:	mov	x2, x19
  40699c:	bl	40dedc <feof@plt+0xadfc>
  4069a0:	mov	w0, #0x10                  	// #16
  4069a4:	bl	402d30 <_Znwm@plt>
  4069a8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  4069ac:	add	x1, x1, #0x6d4
  4069b0:	mov	x19, x0
  4069b4:	bl	40e38c <feof@plt+0xb2ac>
  4069b8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4069bc:	mov	x0, x23
  4069c0:	add	x1, x1, #0x7b1
  4069c4:	mov	x2, x19
  4069c8:	bl	40dedc <feof@plt+0xadfc>
  4069cc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4069d0:	ldr	x19, [x8, #1808]
  4069d4:	cbz	x19, 406a00 <feof@plt+0x3920>
  4069d8:	mov	w0, #0x10                  	// #16
  4069dc:	bl	402d30 <_Znwm@plt>
  4069e0:	mov	x1, x19
  4069e4:	mov	x20, x0
  4069e8:	bl	40e38c <feof@plt+0xb2ac>
  4069ec:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4069f0:	mov	x0, x23
  4069f4:	add	x1, x1, #0x7bd
  4069f8:	mov	x2, x20
  4069fc:	bl	40dedc <feof@plt+0xadfc>
  406a00:	mov	w0, #0x10                  	// #16
  406a04:	bl	402d30 <_Znwm@plt>
  406a08:	mov	x1, x21
  406a0c:	mov	x19, x0
  406a10:	str	x21, [sp, #248]
  406a14:	bl	40e38c <feof@plt+0xb2ac>
  406a18:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406a1c:	mov	x0, x23
  406a20:	add	x1, x1, #0x7d7
  406a24:	mov	x2, x19
  406a28:	bl	40dedc <feof@plt+0xadfc>
  406a2c:	mov	w0, #0x10                  	// #16
  406a30:	bl	402d30 <_Znwm@plt>
  406a34:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  406a38:	add	x8, x8, #0xe58
  406a3c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  406a40:	mov	x2, x0
  406a44:	stp	x8, xzr, [x0]
  406a48:	mov	x0, x23
  406a4c:	add	x1, x1, #0x591
  406a50:	str	x23, [sp, #240]
  406a54:	str	x2, [sp, #256]
  406a58:	bl	40dedc <feof@plt+0xadfc>
  406a5c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406a60:	add	x8, x8, #0x648
  406a64:	ldp	x20, x8, [x8]
  406a68:	b	406aac <feof@plt+0x39cc>
  406a6c:	mov	x0, x21
  406a70:	bl	402c70 <unlink@plt>
  406a74:	ldr	x0, [x23, #1456]
  406a78:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406a7c:	add	x1, x1, #0xdad
  406a80:	mov	x2, x21
  406a84:	bl	40f8a4 <feof@plt+0xc7c4>
  406a88:	mov	x0, x21
  406a8c:	bl	402b20 <free@plt>
  406a90:	ldr	x0, [x23, #1456]
  406a94:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  406a98:	add	x1, x1, #0xbb4
  406a9c:	bl	40f8a4 <feof@plt+0xc7c4>
  406aa0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406aa4:	ldr	x8, [x8, #1616]
  406aa8:	add	x20, x20, #0x90
  406aac:	cmp	x20, x8
  406ab0:	b.eq	4079ec <feof@plt+0x490c>  // b.none
  406ab4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406ab8:	ldrb	w8, [x8, #1760]
  406abc:	cmp	w8, #0x1
  406ac0:	b.ne	406ad4 <feof@plt+0x39f4>  // b.any
  406ac4:	ldr	x8, [x20, #80]
  406ac8:	ldrb	w8, [x8]
  406acc:	cmp	w8, #0x2f
  406ad0:	b.eq	406aa0 <feof@plt+0x39c0>  // b.none
  406ad4:	ldp	x21, x8, [x20, #96]
  406ad8:	b	406ae0 <feof@plt+0x3a00>
  406adc:	add	x21, x21, #0x8
  406ae0:	cmp	x21, x8
  406ae4:	b.eq	406b38 <feof@plt+0x3a58>  // b.none
  406ae8:	ldr	x22, [x21]
  406aec:	ldr	w10, [x20]
  406af0:	ldr	w9, [x22, #104]
  406af4:	cmp	w9, w10
  406af8:	b.ne	406adc <feof@plt+0x39fc>  // b.any
  406afc:	ldrb	w9, [x22, #28]
  406b00:	tbz	w9, #2, 406adc <feof@plt+0x39fc>
  406b04:	ldp	x19, x9, [x22, #112]
  406b08:	cmp	x19, x9
  406b0c:	b.eq	406adc <feof@plt+0x39fc>  // b.none
  406b10:	mov	x0, x19
  406b14:	mov	x1, x20
  406b18:	mov	w2, wzr
  406b1c:	bl	40908c <feof@plt+0x5fac>
  406b20:	ldr	x8, [x22, #120]
  406b24:	add	x19, x19, #0x40
  406b28:	cmp	x19, x8
  406b2c:	b.ne	406b10 <feof@plt+0x3a30>  // b.any
  406b30:	ldr	x8, [x20, #104]
  406b34:	b	406adc <feof@plt+0x39fc>
  406b38:	ldp	x19, x8, [x20, #24]
  406b3c:	cmp	x19, x8
  406b40:	b.eq	406b64 <feof@plt+0x3a84>  // b.none
  406b44:	mov	w2, #0x1                   	// #1
  406b48:	mov	x0, x19
  406b4c:	mov	x1, x20
  406b50:	bl	40908c <feof@plt+0x5fac>
  406b54:	ldr	x8, [x20, #32]
  406b58:	add	x19, x19, #0x40
  406b5c:	cmp	x19, x8
  406b60:	b.ne	406b44 <feof@plt+0x3a64>  // b.any
  406b64:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406b68:	ldrb	w8, [x8, #1688]
  406b6c:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  406b70:	mov	w16, #0x5                   	// #5
  406b74:	tbz	w8, #0, 406c04 <feof@plt+0x3b24>
  406b78:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406b7c:	ldrb	w8, [x8, #1780]
  406b80:	tbnz	w8, #0, 406e60 <feof@plt+0x3d80>
  406b84:	ldr	x0, [x22, #1456]
  406b88:	ldr	x3, [x20, #80]
  406b8c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406b90:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  406b94:	add	x1, x1, #0x85c
  406b98:	add	x2, x2, #0x891
  406b9c:	bl	40f8a4 <feof@plt+0xc7c4>
  406ba0:	ldr	w19, [x20, #48]
  406ba4:	ldr	x21, [x22, #1456]
  406ba8:	cbz	w19, 406cf4 <feof@plt+0x3c14>
  406bac:	ldr	s0, [x20, #52]
  406bb0:	mov	w8, #0x42c80000            	// #1120403456
  406bb4:	fmov	s1, w8
  406bb8:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  406bbc:	ucvtf	s0, s0
  406bc0:	fmul	s0, s0, s1
  406bc4:	ucvtf	s1, w19
  406bc8:	fdiv	s0, s0, s1
  406bcc:	add	x23, x23, #0x730
  406bd0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406bd4:	fcvt	d0, s0
  406bd8:	mov	w2, #0x2                   	// #2
  406bdc:	mov	x0, x23
  406be0:	add	x1, x1, #0x900
  406be4:	bl	402c30 <sprintf@plt>
  406be8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406bec:	mov	x0, x21
  406bf0:	add	x1, x1, #0xdc2
  406bf4:	mov	x2, x23
  406bf8:	mov	w3, w19
  406bfc:	bl	40f8a4 <feof@plt+0xc7c4>
  406c00:	b	406d04 <feof@plt+0x3c24>
  406c04:	ldp	x8, x10, [x20, #96]
  406c08:	b	406c14 <feof@plt+0x3b34>
  406c0c:	ldr	x10, [x20, #104]
  406c10:	add	x8, x8, #0x8
  406c14:	cmp	x8, x10
  406c18:	b.eq	406b78 <feof@plt+0x3a98>  // b.none
  406c1c:	ldr	x9, [x8]
  406c20:	ldr	w12, [x20]
  406c24:	ldr	w11, [x9, #104]
  406c28:	cmp	w11, w12
  406c2c:	b.ne	406c10 <feof@plt+0x3b30>  // b.any
  406c30:	ldrb	w11, [x9, #28]
  406c34:	tbz	w11, #2, 406c10 <feof@plt+0x3b30>
  406c38:	ldp	x11, x12, [x9, #112]
  406c3c:	cmp	x12, x11
  406c40:	b.eq	406c10 <feof@plt+0x3b30>  // b.none
  406c44:	mov	x10, xzr
  406c48:	b	406c60 <feof@plt+0x3b80>
  406c4c:	ldp	x11, x12, [x9, #112]
  406c50:	add	w10, w10, #0x1
  406c54:	sub	x12, x12, x11
  406c58:	cmp	x10, x12, asr #6
  406c5c:	b.cs	406c0c <feof@plt+0x3b2c>  // b.hs, b.nlast
  406c60:	add	x13, x11, x10, lsl #6
  406c64:	mov	x12, x13
  406c68:	ldrb	w11, [x12, #56]!
  406c6c:	tbz	w11, #0, 406c4c <feof@plt+0x3b6c>
  406c70:	ldr	w11, [x9, #88]
  406c74:	ldr	x14, [x20, #24]
  406c78:	add	w11, w10, w11
  406c7c:	add	x14, x14, x11, lsl #6
  406c80:	mov	x11, x14
  406c84:	ldrb	w15, [x11, #56]!
  406c88:	tbnz	w15, #0, 406c98 <feof@plt+0x3bb8>
  406c8c:	ldr	w15, [x20, #48]
  406c90:	add	w15, w15, #0x1
  406c94:	str	w15, [x20, #48]
  406c98:	ldr	x15, [x14]
  406c9c:	cbnz	x15, 406cb8 <feof@plt+0x3bd8>
  406ca0:	ldr	x15, [x13]
  406ca4:	cbz	x15, 406cb8 <feof@plt+0x3bd8>
  406ca8:	ldr	w15, [x20, #52]
  406cac:	add	w15, w15, #0x1
  406cb0:	str	w15, [x20, #52]
  406cb4:	ldr	x15, [x14]
  406cb8:	ldr	x13, [x13]
  406cbc:	add	x13, x13, x15
  406cc0:	str	x13, [x14]
  406cc4:	ldrb	w15, [x11]
  406cc8:	orr	w13, w15, #0x1
  406ccc:	strb	w13, [x11]
  406cd0:	ldrb	w14, [x12]
  406cd4:	tbz	w14, #2, 406ce4 <feof@plt+0x3c04>
  406cd8:	orr	w13, w15, w16
  406cdc:	strb	w13, [x11]
  406ce0:	ldrb	w14, [x12]
  406ce4:	tbz	w14, #1, 406c4c <feof@plt+0x3b6c>
  406ce8:	orr	w12, w13, #0x2
  406cec:	strb	w12, [x11]
  406cf0:	b	406c4c <feof@plt+0x3b6c>
  406cf4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406cf8:	mov	x0, x21
  406cfc:	add	x1, x1, #0xddb
  406d00:	bl	40f8a4 <feof@plt+0xc7c4>
  406d04:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406d08:	ldrb	w8, [x8, #1696]
  406d0c:	cmp	w8, #0x1
  406d10:	b.ne	406e60 <feof@plt+0x3d80>  // b.any
  406d14:	ldr	w8, [x20, #56]
  406d18:	ldr	x19, [x22, #1456]
  406d1c:	cbz	w8, 406da0 <feof@plt+0x3cc0>
  406d20:	ldr	s0, [x20, #60]
  406d24:	mov	w21, #0x42c80000            	// #1120403456
  406d28:	fmov	s1, w21
  406d2c:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  406d30:	scvtf	s0, s0
  406d34:	fmul	s0, s0, s1
  406d38:	scvtf	s1, w8
  406d3c:	fdiv	s0, s0, s1
  406d40:	add	x23, x23, #0x730
  406d44:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406d48:	fcvt	d0, s0
  406d4c:	mov	w2, #0x2                   	// #2
  406d50:	mov	x0, x23
  406d54:	add	x1, x1, #0x900
  406d58:	bl	402c30 <sprintf@plt>
  406d5c:	ldr	w3, [x20, #56]
  406d60:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406d64:	mov	x0, x19
  406d68:	add	x1, x1, #0x896
  406d6c:	mov	x2, x23
  406d70:	bl	40f8a4 <feof@plt+0xc7c4>
  406d74:	ldr	w8, [x20, #56]
  406d78:	ldr	x19, [x22, #1456]
  406d7c:	cbz	w8, 406db4 <feof@plt+0x3cd4>
  406d80:	ldr	s0, [x20, #64]
  406d84:	fmov	s1, w21
  406d88:	scvtf	s0, s0
  406d8c:	fmul	s0, s0, s1
  406d90:	scvtf	s1, w8
  406d94:	fdiv	s0, s0, s1
  406d98:	fcvt	d0, s0
  406d9c:	b	406db8 <feof@plt+0x3cd8>
  406da0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406da4:	mov	x0, x19
  406da8:	add	x1, x1, #0x8d0
  406dac:	bl	40f8a4 <feof@plt+0xc7c4>
  406db0:	b	406dec <feof@plt+0x3d0c>
  406db4:	fmov	d0, xzr
  406db8:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  406dbc:	add	x21, x21, #0x730
  406dc0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406dc4:	mov	w2, #0x2                   	// #2
  406dc8:	mov	x0, x21
  406dcc:	add	x1, x1, #0x900
  406dd0:	bl	402c30 <sprintf@plt>
  406dd4:	ldr	w3, [x20, #56]
  406dd8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406ddc:	mov	x0, x19
  406de0:	add	x1, x1, #0x8b2
  406de4:	mov	x2, x21
  406de8:	bl	40f8a4 <feof@plt+0xc7c4>
  406dec:	ldr	w8, [x20, #68]
  406df0:	ldr	x19, [x22, #1456]
  406df4:	mov	w9, #0x42c80000            	// #1120403456
  406df8:	cbz	w8, 406e50 <feof@plt+0x3d70>
  406dfc:	ldr	s0, [x20, #72]
  406e00:	fmov	s1, w9
  406e04:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  406e08:	add	x21, x21, #0x730
  406e0c:	scvtf	s0, s0
  406e10:	fmul	s0, s0, s1
  406e14:	scvtf	s1, w8
  406e18:	fdiv	s0, s0, s1
  406e1c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406e20:	fcvt	d0, s0
  406e24:	mov	w2, #0x2                   	// #2
  406e28:	mov	x0, x21
  406e2c:	add	x1, x1, #0x900
  406e30:	bl	402c30 <sprintf@plt>
  406e34:	ldr	w3, [x20, #68]
  406e38:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406e3c:	mov	x0, x19
  406e40:	add	x1, x1, #0x8dd
  406e44:	mov	x2, x21
  406e48:	bl	40f8a4 <feof@plt+0xc7c4>
  406e4c:	b	406e60 <feof@plt+0x3d80>
  406e50:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  406e54:	mov	x0, x19
  406e58:	add	x1, x1, #0x8f6
  406e5c:	bl	40f8a4 <feof@plt+0xc7c4>
  406e60:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  406e64:	ldr	w8, [x20, #48]
  406e68:	ldr	w9, [x10, #1832]
  406e6c:	adrp	x12, 48a000 <_obstack_memory_used@@Base+0x28838>
  406e70:	adrp	x11, 48a000 <_obstack_memory_used@@Base+0x28838>
  406e74:	ldrb	w11, [x11, #1728]
  406e78:	add	w9, w9, w8
  406e7c:	str	w9, [x10, #1832]
  406e80:	ldr	w9, [x20, #52]
  406e84:	ldr	w10, [x12, #1836]
  406e88:	add	w9, w10, w9
  406e8c:	str	w9, [x12, #1836]
  406e90:	tbnz	w11, #0, 406aa0 <feof@plt+0x39c0>
  406e94:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  406e98:	ldrb	w9, [x9, #1688]
  406e9c:	cmp	w9, #0x1
  406ea0:	b.ne	406f18 <feof@plt+0x3e38>  // b.any
  406ea4:	mov	w0, #0x38                  	// #56
  406ea8:	bl	402d30 <_Znwm@plt>
  406eac:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  406eb0:	movi	v0.2d, #0x0
  406eb4:	add	x8, x8, #0xe28
  406eb8:	mov	x21, x0
  406ebc:	stp	q0, q0, [x0]
  406ec0:	str	q0, [x0, #32]
  406ec4:	stp	xzr, xzr, [x0, #40]
  406ec8:	str	x8, [x0]
  406ecc:	stp	xzr, xzr, [x0, #24]
  406ed0:	strb	wzr, [x0, #52]
  406ed4:	mov	w0, #0xd                   	// #13
  406ed8:	bl	40eacc <feof@plt+0xb9ec>
  406edc:	mov	w8, w0
  406ee0:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  406ee4:	lsl	x8, x8, #4
  406ee8:	add	x9, x9, #0xf68
  406eec:	ldr	w22, [x9, x8]
  406ef0:	mov	w19, w0
  406ef4:	mov	w1, #0x10                  	// #16
  406ef8:	mov	x0, x22
  406efc:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  406f00:	cbz	x0, 407d5c <feof@plt+0x4c7c>
  406f04:	cbz	w22, 4070ac <feof@plt+0x3fcc>
  406f08:	cmp	w22, #0x1
  406f0c:	b.ne	407074 <feof@plt+0x3f94>  // b.any
  406f10:	mov	x8, xzr
  406f14:	b	407098 <feof@plt+0x3fb8>
  406f18:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  406f1c:	ldrb	w9, [x9, #1780]
  406f20:	cmp	w9, #0x1
  406f24:	b.ne	406f40 <feof@plt+0x3e60>  // b.any
  406f28:	cbz	w8, 406aa0 <feof@plt+0x39c0>
  406f2c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406f30:	ldr	x0, [x8, #1456]
  406f34:	mov	x1, x20
  406f38:	bl	40888c <feof@plt+0x57ac>
  406f3c:	b	406aa0 <feof@plt+0x39c0>
  406f40:	ldr	x22, [x20, #80]
  406f44:	ldr	x23, [sp, #248]
  406f48:	cbz	x23, 407054 <feof@plt+0x3f74>
  406f4c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406f50:	ldrb	w8, [x8, #1708]
  406f54:	cbz	w8, 407054 <feof@plt+0x3f74>
  406f58:	mov	x0, x22
  406f5c:	mov	x1, x23
  406f60:	bl	402ed0 <strcmp@plt>
  406f64:	cbz	w0, 407054 <feof@plt+0x3f74>
  406f68:	mov	x0, x23
  406f6c:	bl	402a50 <strlen@plt>
  406f70:	mov	x19, x0
  406f74:	mov	x0, x22
  406f78:	bl	402a50 <strlen@plt>
  406f7c:	add	x8, x19, x0
  406f80:	add	x0, x8, #0xa
  406f84:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  406f88:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  406f8c:	ldrb	w8, [x8, #1764]
  406f90:	mov	x21, x0
  406f94:	tbz	w8, #0, 4075a4 <feof@plt+0x44c4>
  406f98:	mov	x0, x23
  406f9c:	bl	402a50 <strlen@plt>
  406fa0:	add	x0, x0, #0x1
  406fa4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  406fa8:	ldrb	w8, [x23]
  406fac:	mov	x26, x0
  406fb0:	mov	x25, x0
  406fb4:	cbz	w8, 40704c <feof@plt+0x3f6c>
  406fb8:	mov	x1, x23
  406fbc:	mov	x25, x26
  406fc0:	b	406ff0 <feof@plt+0x3f10>
  406fc4:	mov	x0, x25
  406fc8:	mov	x2, x19
  406fcc:	bl	4029c0 <memcpy@plt>
  406fd0:	add	x25, x25, x19
  406fd4:	ldurb	w8, [x23, #-1]
  406fd8:	cbz	w8, 40704c <feof@plt+0x3f6c>
  406fdc:	mov	w8, #0x23                  	// #35
  406fe0:	strb	w8, [x25], #1
  406fe4:	ldrb	w8, [x23]
  406fe8:	mov	x1, x23
  406fec:	cbz	w8, 40704c <feof@plt+0x3f6c>
  406ff0:	add	x23, x1, #0x1
  406ff4:	mov	w9, w8
  406ff8:	ands	w9, w9, #0xff
  406ffc:	b.eq	407014 <feof@plt+0x3f34>  // b.none
  407000:	cmp	w9, #0x2f
  407004:	b.eq	407014 <feof@plt+0x3f34>  // b.none
  407008:	ldrb	w9, [x23], #1
  40700c:	ands	w9, w9, #0xff
  407010:	b.ne	407000 <feof@plt+0x3f20>  // b.any
  407014:	mvn	x9, x1
  407018:	and	w8, w8, #0xff
  40701c:	cmp	w8, #0x2e
  407020:	add	x19, x9, x23
  407024:	b.ne	406fc4 <feof@plt+0x3ee4>  // b.any
  407028:	cmp	x19, #0x2
  40702c:	b.ne	406fc4 <feof@plt+0x3ee4>  // b.any
  407030:	ldrb	w8, [x1, #1]
  407034:	cmp	w8, #0x2e
  407038:	b.ne	406fc4 <feof@plt+0x3ee4>  // b.any
  40703c:	mov	w8, #0x5e                  	// #94
  407040:	strb	w8, [x25], #1
  407044:	ldurb	w8, [x23, #-1]
  407048:	cbnz	w8, 406fdc <feof@plt+0x3efc>
  40704c:	strb	wzr, [x25]
  407050:	b	4075b0 <feof@plt+0x44d0>
  407054:	mov	x0, x22
  407058:	bl	402a50 <strlen@plt>
  40705c:	add	x0, x0, #0xa
  407060:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  407064:	mov	x26, x0
  407068:	mov	x21, x0
  40706c:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  407070:	b	4075dc <feof@plt+0x44fc>
  407074:	and	x8, x22, #0xfffffffe
  407078:	add	x9, x0, #0x10
  40707c:	mov	x10, x8
  407080:	stur	xzr, [x9, #-16]
  407084:	str	xzr, [x9], #32
  407088:	subs	x10, x10, #0x2
  40708c:	b.ne	407080 <feof@plt+0x3fa0>  // b.any
  407090:	cmp	x8, x22
  407094:	b.eq	4070ac <feof@plt+0x3fcc>  // b.none
  407098:	sub	x9, x22, x8
  40709c:	add	x8, x0, x8, lsl #4
  4070a0:	subs	x9, x9, #0x1
  4070a4:	str	xzr, [x8], #16
  4070a8:	b.ne	4070a0 <feof@plt+0x3fc0>  // b.any
  4070ac:	stp	x0, x22, [x21, #8]
  4070b0:	ldr	x0, [sp, #256]
  4070b4:	mov	x1, x21
  4070b8:	str	w19, [x21, #48]
  4070bc:	bl	40e178 <feof@plt+0xb098>
  4070c0:	mov	w0, #0x10                  	// #16
  4070c4:	bl	402d30 <_Znwm@plt>
  4070c8:	ldr	x1, [x20, #8]
  4070cc:	mov	x19, x0
  4070d0:	bl	40e38c <feof@plt+0xb2ac>
  4070d4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0xc838>
  4070d8:	mov	x0, x21
  4070dc:	add	x1, x1, #0x398
  4070e0:	mov	x2, x19
  4070e4:	bl	40dedc <feof@plt+0xadfc>
  4070e8:	mov	w0, #0x10                  	// #16
  4070ec:	bl	402d30 <_Znwm@plt>
  4070f0:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  4070f4:	mov	x22, x0
  4070f8:	add	x8, x8, #0xe58
  4070fc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407100:	stp	x8, xzr, [x0]
  407104:	mov	x0, x21
  407108:	add	x1, x1, #0x91c
  40710c:	mov	x2, x22
  407110:	bl	40dedc <feof@plt+0xadfc>
  407114:	ldp	x19, x25, [x20, #96]
  407118:	cmp	x19, x25
  40711c:	b.eq	407420 <feof@plt+0x4340>  // b.none
  407120:	sub	x8, x25, x19
  407124:	asr	x8, x8, #3
  407128:	clz	x8, x8
  40712c:	mov	w9, #0x7e                  	// #126
  407130:	sub	x2, x9, x8, lsl #1
  407134:	mov	x0, x19
  407138:	mov	x1, x25
  40713c:	mov	x3, xzr
  407140:	bl	40d5d4 <feof@plt+0xa4f4>
  407144:	mov	x0, x19
  407148:	mov	x1, x25
  40714c:	mov	x2, xzr
  407150:	bl	40d834 <feof@plt+0xa754>
  407154:	ldr	x23, [x20, #96]
  407158:	b	4072f8 <feof@plt+0x4218>
  40715c:	mov	x0, x19
  407160:	bl	40e38c <feof@plt+0xb2ac>
  407164:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407168:	mov	x0, x26
  40716c:	add	x1, x1, #0x926
  407170:	mov	x2, x19
  407174:	bl	40dedc <feof@plt+0xadfc>
  407178:	mov	w0, #0x10                  	// #16
  40717c:	bl	402d30 <_Znwm@plt>
  407180:	ldr	x8, [x23]
  407184:	adrp	x19, 463000 <_obstack_memory_used@@Base+0x1838>
  407188:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40718c:	mov	x2, x0
  407190:	ldr	s0, [x8, #88]
  407194:	add	x19, x19, #0xeb8
  407198:	mov	x0, x26
  40719c:	add	x1, x1, #0x935
  4071a0:	ucvtf	d0, d0
  4071a4:	str	x19, [x2]
  4071a8:	str	d0, [x2, #8]
  4071ac:	bl	40dedc <feof@plt+0xadfc>
  4071b0:	mov	w0, #0x10                  	// #16
  4071b4:	bl	402d30 <_Znwm@plt>
  4071b8:	ldr	x8, [x23]
  4071bc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4071c0:	mov	x2, x0
  4071c4:	add	x1, x1, #0x940
  4071c8:	ldr	s0, [x8, #92]
  4071cc:	str	x19, [x0]
  4071d0:	ucvtf	d0, d0
  4071d4:	str	d0, [x0, #8]
  4071d8:	mov	x0, x26
  4071dc:	bl	40dedc <feof@plt+0xadfc>
  4071e0:	mov	w0, #0x10                  	// #16
  4071e4:	bl	402d30 <_Znwm@plt>
  4071e8:	ldr	x8, [x23]
  4071ec:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4071f0:	mov	x2, x0
  4071f4:	add	x1, x1, #0x94d
  4071f8:	ldr	s0, [x8, #96]
  4071fc:	str	x19, [x0]
  407200:	ucvtf	d0, d0
  407204:	str	d0, [x0, #8]
  407208:	mov	x0, x26
  40720c:	bl	40dedc <feof@plt+0xadfc>
  407210:	mov	w0, #0x10                  	// #16
  407214:	bl	402d30 <_Znwm@plt>
  407218:	ldr	x8, [x23]
  40721c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407220:	mov	x2, x0
  407224:	add	x1, x1, #0x956
  407228:	ldr	s0, [x8, #100]
  40722c:	str	x19, [x0]
  407230:	ucvtf	d0, d0
  407234:	str	d0, [x0, #8]
  407238:	mov	x0, x26
  40723c:	bl	40dedc <feof@plt+0xadfc>
  407240:	mov	w0, #0x10                  	// #16
  407244:	bl	402d30 <_Znwm@plt>
  407248:	ldr	x8, [x23]
  40724c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407250:	mov	x2, x0
  407254:	add	x1, x1, #0x289
  407258:	ldp	x8, x9, [x8, #32]
  40725c:	str	x19, [x0]
  407260:	sub	x8, x9, x8
  407264:	mov	w9, #0x4ec5                	// #20165
  407268:	lsr	x8, x8, #3
  40726c:	movk	w9, #0xc4ec, lsl #16
  407270:	mul	w8, w8, w9
  407274:	sub	w8, w8, #0x2
  407278:	ucvtf	d0, w8
  40727c:	str	d0, [x0, #8]
  407280:	mov	x0, x26
  407284:	bl	40dedc <feof@plt+0xadfc>
  407288:	mov	w0, #0x10                  	// #16
  40728c:	bl	402d30 <_Znwm@plt>
  407290:	ldr	x8, [x23]
  407294:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407298:	mov	x2, x0
  40729c:	add	x1, x1, #0x961
  4072a0:	ldr	s0, [x8, #56]
  4072a4:	str	x19, [x0]
  4072a8:	ucvtf	d0, d0
  4072ac:	str	d0, [x0, #8]
  4072b0:	mov	x0, x26
  4072b4:	bl	40dedc <feof@plt+0xadfc>
  4072b8:	mov	w0, #0x10                  	// #16
  4072bc:	bl	402d30 <_Znwm@plt>
  4072c0:	ldr	x8, [x23], #8
  4072c4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4072c8:	mov	x2, x0
  4072cc:	add	x1, x1, #0x971
  4072d0:	ldr	x8, [x8, #32]
  4072d4:	ldr	d0, [x8, #40]
  4072d8:	str	x19, [x0]
  4072dc:	scvtf	d0, d0
  4072e0:	str	d0, [x0, #8]
  4072e4:	mov	x0, x26
  4072e8:	bl	40dedc <feof@plt+0xadfc>
  4072ec:	mov	x0, x22
  4072f0:	mov	x1, x26
  4072f4:	bl	40e178 <feof@plt+0xb098>
  4072f8:	ldr	x8, [x20, #104]
  4072fc:	cmp	x23, x8
  407300:	b.eq	407420 <feof@plt+0x4340>  // b.none
  407304:	mov	w0, #0x38                  	// #56
  407308:	bl	402d30 <_Znwm@plt>
  40730c:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  407310:	movi	v0.2d, #0x0
  407314:	add	x8, x8, #0xe28
  407318:	mov	x26, x0
  40731c:	stp	q0, q0, [x0]
  407320:	str	q0, [x0, #32]
  407324:	stp	xzr, xzr, [x0, #40]
  407328:	str	x8, [x0]
  40732c:	stp	xzr, xzr, [x0, #24]
  407330:	strb	wzr, [x0, #52]
  407334:	mov	w0, #0xd                   	// #13
  407338:	bl	40eacc <feof@plt+0xb9ec>
  40733c:	mov	w8, w0
  407340:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  407344:	lsl	x8, x8, #4
  407348:	add	x9, x9, #0xf68
  40734c:	ldr	w25, [x9, x8]
  407350:	mov	w19, w0
  407354:	mov	w1, #0x10                  	// #16
  407358:	mov	x0, x25
  40735c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  407360:	cbz	x0, 407d5c <feof@plt+0x4c7c>
  407364:	cbz	w25, 4073b0 <feof@plt+0x42d0>
  407368:	cmp	w25, #0x1
  40736c:	b.ne	407378 <feof@plt+0x4298>  // b.any
  407370:	mov	x8, xzr
  407374:	b	40739c <feof@plt+0x42bc>
  407378:	and	x8, x25, #0xfffffffe
  40737c:	add	x9, x0, #0x10
  407380:	mov	x10, x8
  407384:	stur	xzr, [x9, #-16]
  407388:	str	xzr, [x9], #32
  40738c:	subs	x10, x10, #0x2
  407390:	b.ne	407384 <feof@plt+0x42a4>  // b.any
  407394:	cmp	x8, x25
  407398:	b.eq	4073b0 <feof@plt+0x42d0>  // b.none
  40739c:	sub	x9, x25, x8
  4073a0:	add	x8, x0, x8, lsl #4
  4073a4:	subs	x9, x9, #0x1
  4073a8:	str	xzr, [x8], #16
  4073ac:	b.ne	4073a4 <feof@plt+0x42c4>  // b.any
  4073b0:	stp	x0, x25, [x26, #8]
  4073b4:	mov	w0, #0x10                  	// #16
  4073b8:	str	w19, [x26, #48]
  4073bc:	bl	402d30 <_Znwm@plt>
  4073c0:	ldr	x8, [x23]
  4073c4:	mov	x19, x0
  4073c8:	ldr	x1, [x8]
  4073cc:	bl	40e38c <feof@plt+0xb2ac>
  4073d0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0xc838>
  4073d4:	mov	x0, x26
  4073d8:	add	x1, x1, #0x157
  4073dc:	mov	x2, x19
  4073e0:	bl	40dedc <feof@plt+0xadfc>
  4073e4:	mov	w0, #0x10                  	// #16
  4073e8:	bl	402d30 <_Znwm@plt>
  4073ec:	ldr	x24, [x23]
  4073f0:	mov	x19, x0
  4073f4:	ldr	x1, [x24, #8]
  4073f8:	cbnz	x1, 40715c <feof@plt+0x407c>
  4073fc:	ldr	x0, [x24]
  407400:	mov	w1, #0x1                   	// #1
  407404:	bl	44a420 <feof@plt+0x47340>
  407408:	mov	x1, x0
  40740c:	str	x0, [x24, #8]
  407410:	cbnz	x0, 40715c <feof@plt+0x407c>
  407414:	ldr	x1, [x24]
  407418:	str	x1, [x24, #8]
  40741c:	b	40715c <feof@plt+0x407c>
  407420:	mov	w0, #0x10                  	// #16
  407424:	bl	402d30 <_Znwm@plt>
  407428:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40742c:	mov	x22, x0
  407430:	add	x8, x8, #0xe58
  407434:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  407438:	stp	x8, xzr, [x0]
  40743c:	mov	x0, x21
  407440:	add	x1, x1, #0x5b8
  407444:	mov	x2, x22
  407448:	bl	40dedc <feof@plt+0xadfc>
  40744c:	ldp	x9, x8, [x20, #24]
  407450:	cmp	x8, x9
  407454:	b.eq	406aa0 <feof@plt+0x39c0>  // b.none
  407458:	mov	w23, wzr
  40745c:	mov	x24, xzr
  407460:	mov	w21, #0x1                   	// #1
  407464:	b	407494 <feof@plt+0x43b4>
  407468:	ldr	x3, [x24]
  40746c:	mov	x0, x22
  407470:	mov	w2, w21
  407474:	bl	40a290 <feof@plt+0x71b0>
  407478:	ldp	x9, x8, [x20, #24]
  40747c:	sub	x8, x8, x9
  407480:	asr	x8, x8, #6
  407484:	add	w21, w21, #0x1
  407488:	cmp	x8, x21
  40748c:	add	w23, w23, #0x1
  407490:	b.cc	406aa0 <feof@plt+0x39c0>  // b.lo, b.ul, b.last
  407494:	ldp	x8, x9, [x20, #120]
  407498:	sub	x9, x9, x8
  40749c:	cmp	x21, x9, asr #3
  4074a0:	b.cs	407580 <feof@plt+0x44a0>  // b.hs, b.nlast
  4074a4:	ldr	x26, [x8, x21, lsl #3]
  4074a8:	cbz	x26, 407580 <feof@plt+0x44a0>
  4074ac:	ldp	x19, x25, [x26]
  4074b0:	cmp	x19, x25
  4074b4:	b.eq	407580 <feof@plt+0x44a0>  // b.none
  4074b8:	sub	x8, x25, x19
  4074bc:	asr	x8, x8, #3
  4074c0:	clz	x8, x8
  4074c4:	mov	w9, #0x7e                  	// #126
  4074c8:	sub	x2, x9, x8, lsl #1
  4074cc:	mov	x0, x19
  4074d0:	mov	x1, x25
  4074d4:	mov	x3, xzr
  4074d8:	bl	40d5d4 <feof@plt+0xa4f4>
  4074dc:	mov	x0, x19
  4074e0:	mov	x1, x25
  4074e4:	mov	x2, xzr
  4074e8:	bl	40d834 <feof@plt+0xa754>
  4074ec:	ldp	x19, x8, [x26]
  4074f0:	b	4074fc <feof@plt+0x441c>
  4074f4:	ldr	x8, [x26, #8]
  4074f8:	add	x19, x19, #0x8
  4074fc:	cmp	x19, x8
  407500:	b.eq	407580 <feof@plt+0x44a0>  // b.none
  407504:	ldr	x25, [x19]
  407508:	ldrb	w9, [x25, #28]
  40750c:	ldp	x1, x10, [x25, #112]
  407510:	tst	w9, #0x4
  407514:	csel	x24, x25, x24, eq  // eq = none
  407518:	cmp	x10, x1
  40751c:	b.eq	4074f8 <feof@plt+0x4418>  // b.none
  407520:	ldr	x3, [x25]
  407524:	mov	x0, x22
  407528:	mov	w2, w21
  40752c:	bl	40a290 <feof@plt+0x71b0>
  407530:	ldp	x8, x9, [x25, #112]
  407534:	sub	x9, x9, x8
  407538:	asr	x9, x9, #6
  40753c:	cmp	x9, #0x2
  407540:	b.cc	4074f4 <feof@plt+0x4414>  // b.lo, b.ul, b.last
  407544:	mov	w27, #0x2                   	// #2
  407548:	mov	w9, #0x1                   	// #1
  40754c:	ldr	x10, [x19]
  407550:	add	x1, x8, x9, lsl #6
  407554:	add	w2, w23, w27
  407558:	mov	x0, x22
  40755c:	ldr	x3, [x10]
  407560:	bl	40a290 <feof@plt+0x71b0>
  407564:	ldp	x8, x10, [x25, #112]
  407568:	mov	w9, w27
  40756c:	add	w27, w27, #0x1
  407570:	sub	x10, x10, x8
  407574:	cmp	x9, x10, asr #6
  407578:	b.cc	40754c <feof@plt+0x446c>  // b.lo, b.ul, b.last
  40757c:	b	4074f4 <feof@plt+0x4414>
  407580:	ldp	x9, x8, [x20, #24]
  407584:	sub	x8, x8, x9
  407588:	asr	x8, x8, #6
  40758c:	cmp	x8, x21
  407590:	b.ls	407484 <feof@plt+0x43a4>  // b.plast
  407594:	add	x1, x9, x21, lsl #6
  407598:	cbnz	x24, 407468 <feof@plt+0x4388>
  40759c:	mov	x3, xzr
  4075a0:	b	40746c <feof@plt+0x438c>
  4075a4:	mov	x0, x23
  4075a8:	bl	4613f4 <feof@plt+0x5e314>
  4075ac:	mov	x26, x0
  4075b0:	mov	x0, x26
  4075b4:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  4075b8:	bl	402a50 <strlen@plt>
  4075bc:	mov	x19, x0
  4075c0:	mov	x0, x21
  4075c4:	mov	x1, x26
  4075c8:	mov	x2, x19
  4075cc:	bl	4029c0 <memcpy@plt>
  4075d0:	add	x26, x21, x19
  4075d4:	mov	w8, #0x2323                	// #8995
  4075d8:	strh	w8, [x26], #2
  4075dc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4075e0:	ldrb	w8, [x8, #1764]
  4075e4:	tbz	w8, #0, 4076a4 <feof@plt+0x45c4>
  4075e8:	mov	x0, x22
  4075ec:	bl	402a50 <strlen@plt>
  4075f0:	add	x0, x0, #0x1
  4075f4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4075f8:	ldrb	w8, [x22]
  4075fc:	mov	x19, x0
  407600:	mov	x25, x0
  407604:	cbz	w8, 407698 <feof@plt+0x45b8>
  407608:	mov	x1, x22
  40760c:	mov	x25, x19
  407610:	add	x23, x1, #0x1
  407614:	mov	w9, w8
  407618:	ands	w9, w9, #0xff
  40761c:	b.eq	407634 <feof@plt+0x4554>  // b.none
  407620:	cmp	w9, #0x2f
  407624:	b.eq	407634 <feof@plt+0x4554>  // b.none
  407628:	ldrb	w9, [x23], #1
  40762c:	ands	w9, w9, #0xff
  407630:	b.ne	407620 <feof@plt+0x4540>  // b.any
  407634:	mvn	x9, x1
  407638:	and	w8, w8, #0xff
  40763c:	cmp	w8, #0x2e
  407640:	add	x28, x9, x23
  407644:	b.ne	407668 <feof@plt+0x4588>  // b.any
  407648:	cmp	x28, #0x2
  40764c:	b.ne	407668 <feof@plt+0x4588>  // b.any
  407650:	ldrb	w8, [x1, #1]
  407654:	cmp	w8, #0x2e
  407658:	b.ne	407668 <feof@plt+0x4588>  // b.any
  40765c:	mov	w8, #0x5e                  	// #94
  407660:	strb	w8, [x25], #1
  407664:	b	407678 <feof@plt+0x4598>
  407668:	mov	x0, x25
  40766c:	mov	x2, x28
  407670:	bl	4029c0 <memcpy@plt>
  407674:	add	x25, x25, x28
  407678:	ldurb	w8, [x23, #-1]
  40767c:	mov	w28, #0x68                  	// #104
  407680:	cbz	w8, 407698 <feof@plt+0x45b8>
  407684:	mov	w8, #0x23                  	// #35
  407688:	strb	w8, [x25], #1
  40768c:	ldrb	w8, [x23]
  407690:	mov	x1, x23
  407694:	cbnz	w8, 407610 <feof@plt+0x4530>
  407698:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  40769c:	strb	wzr, [x25]
  4076a0:	b	4076b0 <feof@plt+0x45d0>
  4076a4:	mov	x0, x22
  4076a8:	bl	4613f4 <feof@plt+0x5e314>
  4076ac:	mov	x19, x0
  4076b0:	mov	x0, x19
  4076b4:	bl	402a50 <strlen@plt>
  4076b8:	mov	x25, x0
  4076bc:	mov	x0, x26
  4076c0:	mov	x1, x19
  4076c4:	mov	x2, x25
  4076c8:	bl	4029c0 <memcpy@plt>
  4076cc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4076d0:	ldrb	w8, [x8, #1772]
  4076d4:	mov	w10, #0x672e                	// #26414
  4076d8:	add	x9, x26, x25
  4076dc:	movk	w10, #0x6f63, lsl #16
  4076e0:	cmp	w8, #0x1
  4076e4:	mov	w8, #0x76                  	// #118
  4076e8:	str	w10, [x9]
  4076ec:	strh	w8, [x9, #4]
  4076f0:	b.ne	407968 <feof@plt+0x4888>  // b.any
  4076f4:	sub	x0, x29, #0xb0
  4076f8:	bl	4591b8 <feof@plt+0x560d8>
  4076fc:	mov	x0, x22
  407700:	bl	402a50 <strlen@plt>
  407704:	mov	x1, x0
  407708:	sub	x2, x29, #0xb0
  40770c:	mov	x0, x22
  407710:	bl	459e0c <feof@plt+0x56d2c>
  407714:	sub	x0, x29, #0xb0
  407718:	sub	x1, x29, #0xc0
  40771c:	bl	4591e0 <feof@plt+0x56100>
  407720:	ldurb	w2, [x29, #-192]
  407724:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  407728:	add	x19, x19, #0xbd7
  40772c:	sub	x0, x29, #0xe8
  407730:	mov	x1, x19
  407734:	bl	402c30 <sprintf@plt>
  407738:	ldurb	w2, [x29, #-191]
  40773c:	ldr	x0, [sp, #144]
  407740:	mov	x1, x19
  407744:	bl	402c30 <sprintf@plt>
  407748:	ldurb	w2, [x29, #-190]
  40774c:	ldr	x0, [sp, #136]
  407750:	mov	x1, x19
  407754:	bl	402c30 <sprintf@plt>
  407758:	ldurb	w2, [x29, #-189]
  40775c:	ldr	x0, [sp, #128]
  407760:	mov	x1, x19
  407764:	bl	402c30 <sprintf@plt>
  407768:	ldurb	w2, [x29, #-188]
  40776c:	ldr	x0, [sp, #120]
  407770:	mov	x1, x19
  407774:	bl	402c30 <sprintf@plt>
  407778:	ldurb	w2, [x29, #-187]
  40777c:	ldr	x0, [sp, #112]
  407780:	mov	x1, x19
  407784:	bl	402c30 <sprintf@plt>
  407788:	ldurb	w2, [x29, #-186]
  40778c:	ldr	x0, [sp, #104]
  407790:	mov	x1, x19
  407794:	bl	402c30 <sprintf@plt>
  407798:	ldurb	w2, [x29, #-185]
  40779c:	ldr	x0, [sp, #96]
  4077a0:	mov	x1, x19
  4077a4:	bl	402c30 <sprintf@plt>
  4077a8:	ldurb	w2, [x29, #-184]
  4077ac:	ldr	x0, [sp, #88]
  4077b0:	mov	x1, x19
  4077b4:	bl	402c30 <sprintf@plt>
  4077b8:	ldurb	w2, [x29, #-183]
  4077bc:	ldr	x0, [sp, #80]
  4077c0:	mov	x1, x19
  4077c4:	bl	402c30 <sprintf@plt>
  4077c8:	ldurb	w2, [x29, #-182]
  4077cc:	ldr	x0, [sp, #72]
  4077d0:	mov	x1, x19
  4077d4:	bl	402c30 <sprintf@plt>
  4077d8:	ldurb	w2, [x29, #-181]
  4077dc:	ldr	x0, [sp, #64]
  4077e0:	mov	x1, x19
  4077e4:	bl	402c30 <sprintf@plt>
  4077e8:	ldurb	w2, [x29, #-180]
  4077ec:	ldr	x0, [sp, #56]
  4077f0:	mov	x1, x19
  4077f4:	bl	402c30 <sprintf@plt>
  4077f8:	ldurb	w2, [x29, #-179]
  4077fc:	ldr	x0, [sp, #48]
  407800:	mov	x1, x19
  407804:	bl	402c30 <sprintf@plt>
  407808:	ldurb	w2, [x29, #-178]
  40780c:	ldr	x0, [sp, #40]
  407810:	mov	x1, x19
  407814:	bl	402c30 <sprintf@plt>
  407818:	ldurb	w2, [x29, #-177]
  40781c:	ldr	x0, [sp, #32]
  407820:	mov	x1, x19
  407824:	bl	402c30 <sprintf@plt>
  407828:	mov	x0, x21
  40782c:	bl	402b20 <free@plt>
  407830:	mov	x0, x22
  407834:	bl	402a50 <strlen@plt>
  407838:	add	x0, x0, #0x32
  40783c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  407840:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407844:	ldrb	w8, [x8, #1764]
  407848:	mov	x21, x0
  40784c:	tbz	w8, #0, 407910 <feof@plt+0x4830>
  407850:	mov	x0, x22
  407854:	bl	402a50 <strlen@plt>
  407858:	add	x0, x0, #0x1
  40785c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  407860:	ldrb	w8, [x22]
  407864:	mov	x25, x0
  407868:	mov	x19, x0
  40786c:	cbz	w8, 407904 <feof@plt+0x4824>
  407870:	mov	x19, x25
  407874:	b	4078a8 <feof@plt+0x47c8>
  407878:	mov	x0, x19
  40787c:	mov	x1, x22
  407880:	mov	x2, x26
  407884:	bl	4029c0 <memcpy@plt>
  407888:	add	x19, x19, x26
  40788c:	ldurb	w8, [x23, #-1]
  407890:	cbz	w8, 407904 <feof@plt+0x4824>
  407894:	mov	w8, #0x23                  	// #35
  407898:	strb	w8, [x19], #1
  40789c:	ldrb	w8, [x23]
  4078a0:	mov	x22, x23
  4078a4:	cbz	w8, 407904 <feof@plt+0x4824>
  4078a8:	add	x23, x22, #0x1
  4078ac:	mov	w9, w8
  4078b0:	ands	w9, w9, #0xff
  4078b4:	b.eq	4078cc <feof@plt+0x47ec>  // b.none
  4078b8:	cmp	w9, #0x2f
  4078bc:	b.eq	4078cc <feof@plt+0x47ec>  // b.none
  4078c0:	ldrb	w9, [x23], #1
  4078c4:	ands	w9, w9, #0xff
  4078c8:	b.ne	4078b8 <feof@plt+0x47d8>  // b.any
  4078cc:	mvn	x9, x22
  4078d0:	and	w8, w8, #0xff
  4078d4:	cmp	w8, #0x2e
  4078d8:	add	x26, x9, x23
  4078dc:	b.ne	407878 <feof@plt+0x4798>  // b.any
  4078e0:	cmp	x26, #0x2
  4078e4:	b.ne	407878 <feof@plt+0x4798>  // b.any
  4078e8:	ldrb	w8, [x22, #1]
  4078ec:	cmp	w8, #0x2e
  4078f0:	b.ne	407878 <feof@plt+0x4798>  // b.any
  4078f4:	mov	w8, #0x5e                  	// #94
  4078f8:	strb	w8, [x19], #1
  4078fc:	ldurb	w8, [x23, #-1]
  407900:	cbnz	w8, 407894 <feof@plt+0x47b4>
  407904:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  407908:	strb	wzr, [x19]
  40790c:	b	40791c <feof@plt+0x483c>
  407910:	mov	x0, x22
  407914:	bl	4613f4 <feof@plt+0x5e314>
  407918:	mov	x25, x0
  40791c:	mov	x0, x25
  407920:	bl	402a50 <strlen@plt>
  407924:	mov	x19, x0
  407928:	mov	x0, x21
  40792c:	mov	x1, x25
  407930:	mov	x2, x19
  407934:	bl	4029c0 <memcpy@plt>
  407938:	ldur	q0, [x29, #-232]
  40793c:	ldur	q1, [x29, #-216]
  407940:	add	x8, x21, x19
  407944:	mov	w9, #0x2323                	// #8995
  407948:	strh	w9, [x8]
  40794c:	mov	w9, #0x672e                	// #26414
  407950:	movk	w9, #0x6f63, lsl #16
  407954:	stur	w9, [x8, #34]
  407958:	mov	w9, #0x76                  	// #118
  40795c:	stur	q1, [x8, #18]
  407960:	stur	q0, [x8, #2]
  407964:	strh	w9, [x8, #38]
  407968:	ldr	w8, [x20, #48]
  40796c:	cbz	w8, 406a6c <feof@plt+0x398c>
  407970:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  407974:	mov	x0, x21
  407978:	add	x1, x1, #0x143
  40797c:	bl	402eb0 <fopen@plt>
  407980:	cbz	x0, 4079d8 <feof@plt+0x48f8>
  407984:	mov	x19, x0
  407988:	ldr	x0, [x23, #1456]
  40798c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407990:	add	x1, x1, #0xd5d
  407994:	mov	x2, x21
  407998:	bl	40f8a4 <feof@plt+0xc7c4>
  40799c:	mov	x0, x19
  4079a0:	mov	x1, x20
  4079a4:	bl	40888c <feof@plt+0x57ac>
  4079a8:	mov	x0, x19
  4079ac:	bl	403000 <ferror@plt>
  4079b0:	cbz	w0, 4079cc <feof@plt+0x48ec>
  4079b4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4079b8:	ldr	x0, [x8, #1464]
  4079bc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4079c0:	add	x1, x1, #0xd6c
  4079c4:	mov	x2, x21
  4079c8:	bl	40f8a4 <feof@plt+0xc7c4>
  4079cc:	mov	x0, x19
  4079d0:	bl	402ae0 <fclose@plt>
  4079d4:	b	406a88 <feof@plt+0x39a8>
  4079d8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4079dc:	ldr	x0, [x8, #1464]
  4079e0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  4079e4:	add	x1, x1, #0xd8c
  4079e8:	b	406a80 <feof@plt+0x39a0>
  4079ec:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4079f0:	ldrb	w8, [x8, #1688]
  4079f4:	ldr	x21, [sp, #248]
  4079f8:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  4079fc:	cmp	w8, #0x1
  407a00:	b.ne	407a34 <feof@plt+0x4954>  // b.any
  407a04:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407a08:	ldrb	w8, [x8, #1728]
  407a0c:	cbnz	w8, 407a34 <feof@plt+0x4954>
  407a10:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407a14:	ldrb	w8, [x8, #1780]
  407a18:	cmp	w8, #0x1
  407a1c:	b.ne	407aa4 <feof@plt+0x49c4>  // b.any
  407a20:	ldr	x1, [x20, #1456]
  407a24:	ldr	x0, [sp, #240]
  407a28:	bl	40dc28 <feof@plt+0xab48>
  407a2c:	mov	w0, #0xa                   	// #10
  407a30:	bl	402c80 <putchar@plt>
  407a34:	cbnz	x21, 407b68 <feof@plt+0x4a88>
  407a38:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407a3c:	ldr	w19, [x8, #1832]
  407a40:	ldr	x20, [x20, #1456]
  407a44:	mov	w9, #0x42c80000            	// #1120403456
  407a48:	cbz	w19, 407b24 <feof@plt+0x4a44>
  407a4c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407a50:	ldr	s0, [x8, #1836]
  407a54:	fmov	s1, w9
  407a58:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  407a5c:	add	x21, x21, #0x730
  407a60:	ucvtf	s0, s0
  407a64:	fmul	s0, s0, s1
  407a68:	ucvtf	s1, w19
  407a6c:	fdiv	s0, s0, s1
  407a70:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407a74:	fcvt	d0, s0
  407a78:	mov	w2, #0x2                   	// #2
  407a7c:	mov	x0, x21
  407a80:	add	x1, x1, #0x900
  407a84:	bl	402c30 <sprintf@plt>
  407a88:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407a8c:	mov	x0, x20
  407a90:	add	x1, x1, #0xdc2
  407a94:	mov	x2, x21
  407a98:	mov	w3, w19
  407a9c:	bl	40f8a4 <feof@plt+0xc7c4>
  407aa0:	b	407b68 <feof@plt+0x4a88>
  407aa4:	sub	x0, x29, #0xb0
  407aa8:	mov	w1, wzr
  407aac:	bl	41a454 <feof@plt+0x17374>
  407ab0:	ldr	x0, [sp, #240]
  407ab4:	sub	x1, x29, #0xb0
  407ab8:	ldr	x8, [x0]
  407abc:	ldr	x8, [x8, #24]
  407ac0:	blr	x8
  407ac4:	sub	x0, x29, #0xb0
  407ac8:	bl	4181b0 <feof@plt+0x150d0>
  407acc:	ldr	x22, [sp, #232]
  407ad0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  407ad4:	add	x1, x1, #0x143
  407ad8:	mov	x0, x22
  407adc:	bl	402ee0 <gzopen@plt>
  407ae0:	cbz	x0, 407b48 <feof@plt+0x4a68>
  407ae4:	mov	x19, x0
  407ae8:	sub	x0, x29, #0xb0
  407aec:	bl	4181b0 <feof@plt+0x150d0>
  407af0:	mov	x1, x0
  407af4:	mov	x0, x19
  407af8:	bl	403050 <gzputs@plt>
  407afc:	cmn	w0, #0x1
  407b00:	b.eq	407b10 <feof@plt+0x4a30>  // b.none
  407b04:	mov	x0, x19
  407b08:	bl	402f60 <gzclose@plt>
  407b0c:	cbz	w0, 407cc4 <feof@plt+0x4be4>
  407b10:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407b14:	ldr	x0, [x8, #1464]
  407b18:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407b1c:	add	x1, x1, #0x802
  407b20:	b	407b58 <feof@plt+0x4a78>
  407b24:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407b28:	mov	x0, x20
  407b2c:	add	x1, x1, #0xddb
  407b30:	bl	40f8a4 <feof@plt+0xc7c4>
  407b34:	b	407b68 <feof@plt+0x4a88>
  407b38:	add	x12, x12, #0x8
  407b3c:	cmp	x12, x10
  407b40:	b.ne	405810 <feof@plt+0x2730>  // b.any
  407b44:	b	405858 <feof@plt+0x2778>
  407b48:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407b4c:	ldr	x0, [x8, #1464]
  407b50:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407b54:	add	x1, x1, #0x7e1
  407b58:	mov	x2, x22
  407b5c:	bl	40f8a4 <feof@plt+0xc7c4>
  407b60:	sub	x0, x29, #0xb0
  407b64:	bl	41a558 <feof@plt+0x17478>
  407b68:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407b6c:	add	x8, x8, #0x600
  407b70:	ldp	x20, x8, [x8]
  407b74:	b	407b7c <feof@plt+0x4a9c>
  407b78:	add	x20, x20, #0x8
  407b7c:	cmp	x20, x8
  407b80:	b.eq	407ba8 <feof@plt+0x4ac8>  // b.none
  407b84:	ldr	x19, [x20]
  407b88:	cbz	x19, 407b78 <feof@plt+0x4a98>
  407b8c:	mov	x0, x19
  407b90:	bl	40383c <feof@plt+0x75c>
  407b94:	mov	x0, x19
  407b98:	bl	402d00 <_ZdlPv@plt>
  407b9c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407ba0:	ldr	x8, [x8, #1544]
  407ba4:	b	407b78 <feof@plt+0x4a98>
  407ba8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407bac:	add	x8, x8, #0x648
  407bb0:	ldp	x20, x21, [x8]
  407bb4:	cmp	x21, x20
  407bb8:	b.eq	407c48 <feof@plt+0x4b68>  // b.none
  407bbc:	cmp	x20, x21
  407bc0:	b.eq	407c48 <feof@plt+0x4b68>  // b.none
  407bc4:	mov	x22, x20
  407bc8:	b	407bd8 <feof@plt+0x4af8>
  407bcc:	add	x22, x22, #0x90
  407bd0:	cmp	x22, x21
  407bd4:	b.eq	407c40 <feof@plt+0x4b60>  // b.none
  407bd8:	ldr	x0, [x22, #120]
  407bdc:	cbz	x0, 407be4 <feof@plt+0x4b04>
  407be0:	bl	402d00 <_ZdlPv@plt>
  407be4:	ldr	x0, [x22, #96]
  407be8:	cbz	x0, 407bf0 <feof@plt+0x4b10>
  407bec:	bl	402d00 <_ZdlPv@plt>
  407bf0:	ldp	x19, x23, [x22, #24]
  407bf4:	cmp	x19, x23
  407bf8:	b.ne	407c10 <feof@plt+0x4b30>  // b.any
  407bfc:	cbnz	x19, 407c34 <feof@plt+0x4b54>
  407c00:	b	407bcc <feof@plt+0x4aec>
  407c04:	add	x19, x19, #0x40
  407c08:	cmp	x23, x19
  407c0c:	b.eq	407c2c <feof@plt+0x4b4c>  // b.none
  407c10:	ldr	x0, [x19, #32]
  407c14:	cbz	x0, 407c1c <feof@plt+0x4b3c>
  407c18:	bl	402d00 <_ZdlPv@plt>
  407c1c:	ldr	x0, [x19, #8]
  407c20:	cbz	x0, 407c04 <feof@plt+0x4b24>
  407c24:	bl	402d00 <_ZdlPv@plt>
  407c28:	b	407c04 <feof@plt+0x4b24>
  407c2c:	ldr	x19, [x22, #24]
  407c30:	cbz	x19, 407bcc <feof@plt+0x4aec>
  407c34:	mov	x0, x19
  407c38:	bl	402d00 <_ZdlPv@plt>
  407c3c:	b	407bcc <feof@plt+0x4aec>
  407c40:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407c44:	str	x20, [x8, #1616]
  407c48:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407c4c:	add	x8, x8, #0x660
  407c50:	ldp	x8, x9, [x8]
  407c54:	cmp	x9, x8
  407c58:	b.eq	407c6c <feof@plt+0x4b8c>  // b.none
  407c5c:	cmp	x8, x9
  407c60:	b.eq	407c6c <feof@plt+0x4b8c>  // b.none
  407c64:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  407c68:	str	x8, [x9, #1640]
  407c6c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407c70:	add	x8, x8, #0x600
  407c74:	ldp	x8, x9, [x8]
  407c78:	cmp	x9, x8
  407c7c:	b.eq	403ca8 <feof@plt+0xbc8>  // b.none
  407c80:	cmp	x8, x9
  407c84:	b.eq	403ca8 <feof@plt+0xbc8>  // b.none
  407c88:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  407c8c:	str	x8, [x9, #1544]
  407c90:	b	403ca8 <feof@plt+0xbc8>
  407c94:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  407c98:	ldr	x0, [x9, #1464]
  407c9c:	ldr	x2, [x10, #1784]
  407ca0:	cmp	w8, #0x0
  407ca4:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  407ca8:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  407cac:	add	x8, x8, #0x547
  407cb0:	add	x9, x9, #0x6e2
  407cb4:	csel	x1, x9, x8, lt  // lt = tstop
  407cb8:	bl	40f8a4 <feof@plt+0xc7c4>
  407cbc:	mov	w21, #0xfffffffd            	// #-3
  407cc0:	b	405388 <feof@plt+0x22a8>
  407cc4:	sub	x0, x29, #0xb0
  407cc8:	bl	41a558 <feof@plt+0x17478>
  407ccc:	cbnz	x21, 407b68 <feof@plt+0x4a88>
  407cd0:	b	407a38 <feof@plt+0x4958>
  407cd4:	ldr	x3, [x21]
  407cd8:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  407cdc:	add	x22, x22, #0x5c8
  407ce0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407ce4:	mov	x0, x20
  407ce8:	add	x1, x1, #0x6c4
  407cec:	mov	x2, x19
  407cf0:	bl	40f8a4 <feof@plt+0xc7c4>
  407cf4:	mov	w21, #0xfffffffd            	// #-3
  407cf8:	b	405388 <feof@plt+0x22a8>
  407cfc:	mov	w0, wzr
  407d00:	add	sp, sp, #0x210
  407d04:	ldp	x20, x19, [sp, #80]
  407d08:	ldp	x22, x21, [sp, #64]
  407d0c:	ldp	x24, x23, [sp, #48]
  407d10:	ldp	x26, x25, [sp, #32]
  407d14:	ldp	x28, x27, [sp, #16]
  407d18:	ldp	x29, x30, [sp], #96
  407d1c:	ret
  407d20:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407d24:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  407d28:	add	x0, x0, #0x825
  407d2c:	add	x2, x2, #0x836
  407d30:	mov	w1, #0xa39                 	// #2617
  407d34:	bl	40f560 <feof@plt+0xc480>
  407d38:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407d3c:	add	x0, x0, #0x4b5
  407d40:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  407d44:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407d48:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  407d4c:	add	x0, x0, #0x825
  407d50:	add	x2, x2, #0x836
  407d54:	mov	w1, #0xa2c                 	// #2604
  407d58:	bl	40f560 <feof@plt+0xc480>
  407d5c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407d60:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  407d64:	add	x0, x0, #0x6f1
  407d68:	add	x2, x2, #0x708
  407d6c:	mov	w1, #0x2b5                 	// #693
  407d70:	bl	40f560 <feof@plt+0xc480>
  407d74:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407d78:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  407d7c:	add	x0, x0, #0x56c
  407d80:	add	x2, x2, #0x58d
  407d84:	mov	w1, #0x4a                  	// #74
  407d88:	bl	40f560 <feof@plt+0xc480>
  407d8c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407d90:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  407d94:	add	x0, x0, #0x56c
  407d98:	add	x2, x2, #0x623
  407d9c:	mov	w1, #0x271                 	// #625
  407da0:	bl	40f560 <feof@plt+0xc480>
  407da4:	mov	w0, #0x1                   	// #1
  407da8:	bl	407db8 <feof@plt+0x4cd8>
  407dac:	mov	w0, wzr
  407db0:	bl	407db8 <feof@plt+0x4cd8>
  407db4:	bl	407f84 <feof@plt+0x4ea4>
  407db8:	stp	x29, x30, [sp, #-32]!
  407dbc:	stp	x20, x19, [sp, #16]
  407dc0:	mov	x29, sp
  407dc4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  407dc8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  407dcc:	cmp	w0, #0x0
  407dd0:	add	x8, x8, #0x5b8
  407dd4:	add	x9, x9, #0x5b0
  407dd8:	csel	x8, x8, x9, ne  // ne = any
  407ddc:	ldr	x20, [x8]
  407de0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407de4:	add	x1, x1, #0xb8e
  407de8:	cset	w19, ne  // ne = any
  407dec:	mov	x0, x20
  407df0:	bl	40f8a4 <feof@plt+0xc7c4>
  407df4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407df8:	add	x1, x1, #0xbb6
  407dfc:	mov	x0, x20
  407e00:	bl	40f8a4 <feof@plt+0xc7c4>
  407e04:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e08:	add	x1, x1, #0xbd9
  407e0c:	mov	x0, x20
  407e10:	bl	40f8a4 <feof@plt+0xc7c4>
  407e14:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e18:	add	x1, x1, #0xc23
  407e1c:	mov	x0, x20
  407e20:	bl	40f8a4 <feof@plt+0xc7c4>
  407e24:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e28:	add	x1, x1, #0xc6d
  407e2c:	mov	x0, x20
  407e30:	bl	40f8a4 <feof@plt+0xc7c4>
  407e34:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e38:	add	x1, x1, #0xcec
  407e3c:	mov	x0, x20
  407e40:	bl	40f8a4 <feof@plt+0xc7c4>
  407e44:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e48:	add	x1, x1, #0xd2c
  407e4c:	mov	x0, x20
  407e50:	bl	40f8a4 <feof@plt+0xc7c4>
  407e54:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e58:	add	x1, x1, #0xd72
  407e5c:	mov	x0, x20
  407e60:	bl	40f8a4 <feof@plt+0xc7c4>
  407e64:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e68:	add	x1, x1, #0xdb0
  407e6c:	mov	x0, x20
  407e70:	bl	40f8a4 <feof@plt+0xc7c4>
  407e74:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e78:	add	x1, x1, #0xe0b
  407e7c:	mov	x0, x20
  407e80:	bl	40f8a4 <feof@plt+0xc7c4>
  407e84:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e88:	add	x1, x1, #0xe4c
  407e8c:	mov	x0, x20
  407e90:	bl	40f8a4 <feof@plt+0xc7c4>
  407e94:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407e98:	add	x1, x1, #0xe83
  407e9c:	mov	x0, x20
  407ea0:	bl	40f8a4 <feof@plt+0xc7c4>
  407ea4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407ea8:	add	x1, x1, #0xeff
  407eac:	mov	x0, x20
  407eb0:	bl	40f8a4 <feof@plt+0xc7c4>
  407eb4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407eb8:	add	x1, x1, #0xf42
  407ebc:	mov	x0, x20
  407ec0:	bl	40f8a4 <feof@plt+0xc7c4>
  407ec4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407ec8:	add	x1, x1, #0xf82
  407ecc:	mov	x0, x20
  407ed0:	bl	40f8a4 <feof@plt+0xc7c4>
  407ed4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  407ed8:	add	x1, x1, #0xfd3
  407edc:	mov	x0, x20
  407ee0:	bl	40f8a4 <feof@plt+0xc7c4>
  407ee4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407ee8:	add	x1, x1, #0x17
  407eec:	mov	x0, x20
  407ef0:	bl	40f8a4 <feof@plt+0xc7c4>
  407ef4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407ef8:	add	x1, x1, #0x66
  407efc:	mov	x0, x20
  407f00:	bl	40f8a4 <feof@plt+0xc7c4>
  407f04:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f08:	add	x1, x1, #0xad
  407f0c:	mov	x0, x20
  407f10:	bl	40f8a4 <feof@plt+0xc7c4>
  407f14:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f18:	add	x1, x1, #0xe7
  407f1c:	mov	x0, x20
  407f20:	bl	40f8a4 <feof@plt+0xc7c4>
  407f24:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f28:	add	x1, x1, #0x12d
  407f2c:	mov	x0, x20
  407f30:	bl	40f8a4 <feof@plt+0xc7c4>
  407f34:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f38:	add	x1, x1, #0x175
  407f3c:	mov	x0, x20
  407f40:	bl	40f8a4 <feof@plt+0xc7c4>
  407f44:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f48:	add	x1, x1, #0x1b8
  407f4c:	mov	x0, x20
  407f50:	bl	40f8a4 <feof@plt+0xc7c4>
  407f54:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f58:	add	x1, x1, #0x1f6
  407f5c:	mov	x0, x20
  407f60:	bl	40f8a4 <feof@plt+0xc7c4>
  407f64:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f68:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  407f6c:	add	x1, x1, #0x22d
  407f70:	add	x2, x2, #0x6b8
  407f74:	mov	x0, x20
  407f78:	bl	40f8a4 <feof@plt+0xc7c4>
  407f7c:	mov	w0, w19
  407f80:	bl	402f70 <exit@plt>
  407f84:	stp	x29, x30, [sp, #-32]!
  407f88:	stp	x20, x19, [sp, #16]
  407f8c:	mov	x29, sp
  407f90:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  407f94:	ldr	x0, [x20, #1456]
  407f98:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407f9c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  407fa0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x3838>
  407fa4:	add	x1, x1, #0x3af
  407fa8:	add	x2, x2, #0x6da
  407fac:	add	x3, x3, #0x6d4
  407fb0:	bl	40f8a4 <feof@plt+0xc7c4>
  407fb4:	ldr	x19, [x20, #1456]
  407fb8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407fbc:	add	x0, x0, #0x3ec
  407fc0:	bl	402cd0 <gettext@plt>
  407fc4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  407fc8:	mov	x2, x0
  407fcc:	add	x1, x1, #0x3ba
  407fd0:	mov	x0, x19
  407fd4:	bl	402a70 <fprintf@plt>
  407fd8:	ldr	x19, [x20, #1456]
  407fdc:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  407fe0:	add	x0, x0, #0x3f0
  407fe4:	bl	402cd0 <gettext@plt>
  407fe8:	mov	x1, x0
  407fec:	mov	x0, x19
  407ff0:	bl	40f8a4 <feof@plt+0xc7c4>
  407ff4:	mov	w0, wzr
  407ff8:	bl	402f70 <exit@plt>
  407ffc:	sub	sp, sp, #0x40
  408000:	stp	x29, x30, [sp, #32]
  408004:	stp	x20, x19, [sp, #48]
  408008:	add	x29, sp, #0x20
  40800c:	mov	x19, x0
  408010:	strh	wzr, [sp, #2]
  408014:	stp	xzr, xzr, [sp, #8]
  408018:	bl	402cf0 <getpid@plt>
  40801c:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  408020:	ldr	x8, [x20, #1480]
  408024:	str	w0, [sp, #24]
  408028:	cbnz	x8, 4080d8 <feof@plt+0x4ff8>
  40802c:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x838>
  408030:	ldr	q0, [x8, #2912]
  408034:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408038:	add	x8, x8, #0x5d0
  40803c:	mov	w2, #0x180                 	// #384
  408040:	mov	x0, x19
  408044:	mov	w1, wzr
  408048:	str	wzr, [x8, #16]
  40804c:	str	wzr, [x8, #24]
  408050:	str	q0, [x8]
  408054:	strh	wzr, [sp]
  408058:	bl	402ac0 <open@plt>
  40805c:	tbnz	w0, #31, 4080c0 <feof@plt+0x4fe0>
  408060:	mov	w19, w0
  408064:	mov	x2, sp
  408068:	mov	w1, #0x7                   	// #7
  40806c:	mov	w0, w19
  408070:	bl	403060 <fcntl@plt>
  408074:	cbz	w0, 408088 <feof@plt+0x4fa8>
  408078:	bl	402e70 <__errno_location@plt>
  40807c:	ldr	w8, [x0]
  408080:	cmp	w8, #0x4
  408084:	b.eq	408064 <feof@plt+0x4f84>  // b.none
  408088:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40808c:	add	x1, x1, #0x58a
  408090:	mov	w0, w19
  408094:	bl	460124 <feof@plt+0x5d044>
  408098:	str	x0, [x20, #1480]
  40809c:	cbz	x0, 4080b8 <feof@plt+0x4fd8>
  4080a0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4080a4:	mov	w19, #0x1                   	// #1
  4080a8:	mov	x1, xzr
  4080ac:	str	w19, [x8, #1508]
  4080b0:	bl	403080 <setbuf@plt>
  4080b4:	b	4080c4 <feof@plt+0x4fe4>
  4080b8:	mov	w0, w19
  4080bc:	bl	402ec0 <close@plt>
  4080c0:	mov	w19, wzr
  4080c4:	mov	w0, w19
  4080c8:	ldp	x20, x19, [sp, #48]
  4080cc:	ldp	x29, x30, [sp, #32]
  4080d0:	add	sp, sp, #0x40
  4080d4:	ret
  4080d8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  4080dc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  4080e0:	add	x0, x0, #0x56c
  4080e4:	add	x2, x2, #0x580
  4080e8:	mov	w1, #0x8e                  	// #142
  4080ec:	bl	40f560 <feof@plt+0xc480>
  4080f0:	sub	sp, sp, #0x100
  4080f4:	stp	x29, x30, [sp, #176]
  4080f8:	str	x25, [sp, #192]
  4080fc:	stp	x24, x23, [sp, #208]
  408100:	stp	x22, x21, [sp, #224]
  408104:	stp	x20, x19, [sp, #240]
  408108:	add	x29, sp, #0xb0
  40810c:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  408110:	add	x20, x20, #0x660
  408114:	ldp	x8, x1, [x20]
  408118:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40811c:	add	x9, x9, #0x59b
  408120:	cmp	x0, #0x0
  408124:	csel	x19, x9, x0, eq  // eq = none
  408128:	sub	x2, x29, #0x10
  40812c:	mov	x0, x8
  408130:	stur	x19, [x29, #-16]
  408134:	bl	40b2e8 <feof@plt+0x8208>
  408138:	ldr	x8, [x20, #8]
  40813c:	cmp	x8, x0
  408140:	b.eq	40814c <feof@plt+0x506c>  // b.none
  408144:	ldr	w23, [x0, #8]
  408148:	b	40843c <feof@plt+0x535c>
  40814c:	mov	x0, x19
  408150:	bl	408614 <feof@plt+0x5534>
  408154:	ldp	x8, x1, [x20]
  408158:	mov	x21, x0
  40815c:	stur	x0, [x29, #-16]
  408160:	sub	x2, x29, #0x10
  408164:	mov	x0, x8
  408168:	bl	40b2e8 <feof@plt+0x8208>
  40816c:	ldr	x8, [x20, #8]
  408170:	mov	x1, x0
  408174:	cmp	x8, x0
  408178:	b.eq	408184 <feof@plt+0x50a4>  // b.none
  40817c:	ldr	w23, [x1, #8]
  408180:	b	408394 <feof@plt+0x52b4>
  408184:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408188:	add	x8, x8, #0x648
  40818c:	ldp	x8, x10, [x8]
  408190:	adrp	x11, 48a000 <_obstack_memory_used@@Base+0x28838>
  408194:	ldr	x11, [x11, #1648]
  408198:	mov	w9, #0x8e39                	// #36409
  40819c:	sub	x8, x10, x8
  4081a0:	movk	w9, #0x38e3, lsl #16
  4081a4:	lsr	x8, x8, #4
  4081a8:	mul	w23, w8, w9
  4081ac:	cmp	x11, x1
  4081b0:	stur	x21, [x29, #-16]
  4081b4:	stur	w23, [x29, #-8]
  4081b8:	b.eq	4081d8 <feof@plt+0x50f8>  // b.none
  4081bc:	ldur	q0, [x29, #-16]
  4081c0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4081c4:	str	q0, [x1]
  4081c8:	ldr	x9, [x8, #1640]
  4081cc:	add	x9, x9, #0x10
  4081d0:	str	x9, [x8, #1640]
  4081d4:	b	4081e8 <feof@plt+0x5108>
  4081d8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  4081dc:	add	x0, x0, #0x660
  4081e0:	sub	x2, x29, #0x10
  4081e4:	bl	40b424 <feof@plt+0x8344>
  4081e8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4081ec:	add	x8, x8, #0x650
  4081f0:	ldp	x1, x8, [x8]
  4081f4:	movi	v0.2d, #0x0
  4081f8:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  4081fc:	str	wzr, [sp, #16]
  408200:	cmp	x1, x8
  408204:	str	wzr, [sp, #104]
  408208:	stur	q0, [sp, #24]
  40820c:	stur	q0, [sp, #40]
  408210:	stur	q0, [sp, #56]
  408214:	stur	q0, [sp, #72]
  408218:	stur	q0, [sp, #88]
  40821c:	stp	q0, q0, [sp, #112]
  408220:	str	q0, [sp, #144]
  408224:	b.eq	4082bc <feof@plt+0x51dc>  // b.none
  408228:	ldr	x8, [sp, #32]
  40822c:	ldr	q0, [sp, #16]
  408230:	add	x9, sp, #0x10
  408234:	str	x8, [x1, #16]
  408238:	str	q0, [x1]
  40823c:	ldr	x8, [sp, #40]
  408240:	str	x8, [x1, #24]
  408244:	ldr	x8, [sp, #48]
  408248:	str	x8, [x1, #32]
  40824c:	ldr	x8, [sp, #56]
  408250:	str	x8, [x1, #40]
  408254:	ldp	q0, q1, [sp, #64]
  408258:	ldur	q2, [sp, #92]
  40825c:	stp	xzr, xzr, [sp, #40]
  408260:	str	xzr, [sp, #56]
  408264:	stur	q2, [x1, #76]
  408268:	stp	q0, q1, [x1, #48]
  40826c:	ldr	x8, [sp, #112]
  408270:	str	x8, [x1, #96]
  408274:	ldr	x8, [sp, #120]
  408278:	str	x8, [x1, #104]
  40827c:	ldr	x8, [sp, #128]
  408280:	str	x8, [x1, #112]
  408284:	stp	xzr, xzr, [x9, #96]!
  408288:	str	xzr, [x9, #16]
  40828c:	ldr	x8, [sp, #136]
  408290:	str	x8, [x1, #120]
  408294:	ldr	x8, [sp, #144]
  408298:	str	x8, [x1, #128]
  40829c:	ldr	x8, [sp, #152]
  4082a0:	str	x8, [x1, #136]
  4082a4:	ldr	x8, [x24, #1616]
  4082a8:	stp	xzr, xzr, [sp, #136]
  4082ac:	str	xzr, [sp, #152]
  4082b0:	add	x8, x8, #0x90
  4082b4:	str	x8, [x24, #1616]
  4082b8:	b	4082d8 <feof@plt+0x51f8>
  4082bc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  4082c0:	add	x0, x0, #0x648
  4082c4:	add	x2, sp, #0x10
  4082c8:	bl	40b530 <feof@plt+0x8450>
  4082cc:	ldr	x0, [sp, #136]
  4082d0:	cbz	x0, 4082d8 <feof@plt+0x51f8>
  4082d4:	bl	402d00 <_ZdlPv@plt>
  4082d8:	ldr	x0, [sp, #112]
  4082dc:	cbz	x0, 4082e4 <feof@plt+0x5204>
  4082e0:	bl	402d00 <_ZdlPv@plt>
  4082e4:	ldp	x22, x25, [sp, #40]
  4082e8:	cmp	x22, x25
  4082ec:	b.ne	408300 <feof@plt+0x5220>  // b.any
  4082f0:	b	408320 <feof@plt+0x5240>
  4082f4:	add	x22, x22, #0x40
  4082f8:	cmp	x25, x22
  4082fc:	b.eq	40831c <feof@plt+0x523c>  // b.none
  408300:	ldr	x0, [x22, #32]
  408304:	cbz	x0, 40830c <feof@plt+0x522c>
  408308:	bl	402d00 <_ZdlPv@plt>
  40830c:	ldr	x0, [x22, #8]
  408310:	cbz	x0, 4082f4 <feof@plt+0x5214>
  408314:	bl	402d00 <_ZdlPv@plt>
  408318:	b	4082f4 <feof@plt+0x5214>
  40831c:	ldr	x22, [sp, #40]
  408320:	cbz	x22, 40832c <feof@plt+0x524c>
  408324:	mov	x0, x22
  408328:	bl	402d00 <_ZdlPv@plt>
  40832c:	ldr	x24, [x24, #1616]
  408330:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408334:	stur	x21, [x24, #-136]
  408338:	stur	x21, [x24, #-64]
  40833c:	stur	w23, [x24, #-144]
  408340:	ldr	x22, [x8, #1752]
  408344:	cbz	x22, 408378 <feof@plt+0x5298>
  408348:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40834c:	ldr	x0, [x8, #1744]
  408350:	mov	x1, x21
  408354:	mov	x2, x22
  408358:	bl	402d40 <strncmp@plt>
  40835c:	cbnz	w0, 408378 <feof@plt+0x5298>
  408360:	ldrb	w8, [x21, x22]
  408364:	cmp	w8, #0x2f
  408368:	b.ne	408378 <feof@plt+0x5298>  // b.any
  40836c:	add	x8, x22, x21
  408370:	add	x8, x8, #0x1
  408374:	stur	x8, [x24, #-64]
  408378:	add	x2, sp, #0x10
  40837c:	mov	w0, wzr
  408380:	mov	x1, x21
  408384:	bl	402ef0 <__xstat@plt>
  408388:	cbnz	w0, 408394 <feof@plt+0x52b4>
  40838c:	ldr	x8, [sp, #104]
  408390:	stur	x8, [x24, #-128]
  408394:	ldp	x0, x1, [x20]
  408398:	sub	x2, x29, #0x10
  40839c:	stur	x19, [x29, #-16]
  4083a0:	bl	40b2e8 <feof@plt+0x8208>
  4083a4:	ldr	x21, [x20, #8]
  4083a8:	cmp	x21, x0
  4083ac:	b.ne	408400 <feof@plt+0x5320>  // b.any
  4083b0:	mov	x0, x19
  4083b4:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  4083b8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4083bc:	add	x8, x8, #0x668
  4083c0:	ldp	x1, x8, [x8]
  4083c4:	str	x0, [sp]
  4083c8:	str	w23, [sp, #8]
  4083cc:	cmp	x1, x8
  4083d0:	b.eq	4083f0 <feof@plt+0x5310>  // b.none
  4083d4:	ldr	q0, [sp]
  4083d8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4083dc:	str	q0, [x1]
  4083e0:	ldr	x9, [x8, #1640]
  4083e4:	add	x21, x9, #0x10
  4083e8:	str	x21, [x8, #1640]
  4083ec:	b	408400 <feof@plt+0x5320>
  4083f0:	mov	x2, sp
  4083f4:	mov	x0, x20
  4083f8:	bl	40b874 <feof@plt+0x8794>
  4083fc:	ldr	x21, [x20, #8]
  408400:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408404:	ldr	x20, [x8, #1632]
  408408:	cmp	x20, x21
  40840c:	b.eq	40843c <feof@plt+0x535c>  // b.none
  408410:	sub	x8, x21, x20
  408414:	asr	x8, x8, #4
  408418:	clz	x8, x8
  40841c:	mov	w9, #0x7e                  	// #126
  408420:	sub	x2, x9, x8, lsl #1
  408424:	mov	x0, x20
  408428:	mov	x1, x21
  40842c:	bl	40b980 <feof@plt+0x88a0>
  408430:	mov	x0, x20
  408434:	mov	x1, x21
  408438:	bl	40bacc <feof@plt+0x89ec>
  40843c:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  408440:	ldr	x8, [x21, #1608]
  408444:	mov	w9, #0x90                  	// #144
  408448:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  40844c:	mov	w20, w23
  408450:	umaddl	x8, w23, w9, x8
  408454:	ldr	x8, [x8, #16]
  408458:	ldr	x9, [x10, #1800]
  40845c:	cmp	x8, x9
  408460:	b.le	4084b8 <feof@plt+0x53d8>
  408464:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  408468:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40846c:	ldr	x0, [x22, #1464]
  408470:	ldr	x3, [x8, #1792]
  408474:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408478:	add	x1, x1, #0x5a5
  40847c:	mov	x2, x19
  408480:	bl	40f8a4 <feof@plt+0xc7c4>
  408484:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  408488:	ldrb	w8, [x19, #1820]
  40848c:	tbnz	w8, #0, 4084a8 <feof@plt+0x53c8>
  408490:	ldr	x0, [x22, #1464]
  408494:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408498:	add	x1, x1, #0x5d3
  40849c:	bl	40f8a4 <feof@plt+0xc7c4>
  4084a0:	mov	w8, #0x1                   	// #1
  4084a4:	strb	w8, [x19, #1820]
  4084a8:	ldr	x8, [x21, #1608]
  4084ac:	mov	w9, #0x90                  	// #144
  4084b0:	madd	x8, x20, x9, x8
  4084b4:	str	xzr, [x8, #16]
  4084b8:	mov	w0, w20
  4084bc:	ldp	x20, x19, [sp, #240]
  4084c0:	ldp	x22, x21, [sp, #224]
  4084c4:	ldp	x24, x23, [sp, #208]
  4084c8:	ldr	x25, [sp, #192]
  4084cc:	ldp	x29, x30, [sp, #176]
  4084d0:	add	sp, sp, #0x100
  4084d4:	ret
  4084d8:	stp	x29, x30, [sp, #-64]!
  4084dc:	str	x23, [sp, #16]
  4084e0:	stp	x22, x21, [sp, #32]
  4084e4:	stp	x20, x19, [sp, #48]
  4084e8:	mov	x29, sp
  4084ec:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  4084f0:	add	x20, x20, #0x5d4
  4084f4:	ldr	w8, [x20, #16]
  4084f8:	cmp	w8, #0x1
  4084fc:	b.lt	40858c <feof@plt+0x54ac>  // b.tstop
  408500:	ldp	w8, w9, [x20]
  408504:	mov	w19, w0
  408508:	sub	w22, w9, w8
  40850c:	cmp	w22, w0
  408510:	b.cs	4085f0 <feof@plt+0x5510>  // b.hs, b.nlast
  408514:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  408518:	ldr	w10, [x9, #1488]
  40851c:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  408520:	add	w10, w10, w8
  408524:	str	w10, [x9, #1488]
  408528:	cbz	w22, 40853c <feof@plt+0x545c>
  40852c:	ldr	x0, [x23, #1528]
  408530:	lsl	w2, w22, #2
  408534:	add	x1, x0, x8, lsl #2
  408538:	bl	402e30 <memmove@plt>
  40853c:	ldur	x8, [x20, #28]
  408540:	add	w9, w22, w19
  408544:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  408548:	add	x21, x21, #0x5d8
  40854c:	cmp	x8, x9
  408550:	stp	wzr, w22, [x20]
  408554:	b.cs	408594 <feof@plt+0x54b4>  // b.hs, b.nlast
  408558:	cmp	x8, #0x0
  40855c:	mov	w10, #0x400                 	// #1024
  408560:	ldr	x0, [x21, #32]
  408564:	csel	x8, x10, x8, eq  // eq = none
  408568:	add	x8, x8, x9
  40856c:	lsl	x9, x8, #1
  408570:	lsl	x1, x8, #3
  408574:	str	x9, [x21, #24]
  408578:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  40857c:	ldr	x8, [x21, #24]
  408580:	ldr	w22, [x21]
  408584:	str	x0, [x21, #32]
  408588:	b	408598 <feof@plt+0x54b8>
  40858c:	mov	x0, xzr
  408590:	b	408600 <feof@plt+0x5520>
  408594:	ldr	x0, [x23, #1528]
  408598:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  40859c:	add	x23, x23, #0x5c8
  4085a0:	ldr	x3, [x23]
  4085a4:	sub	w8, w8, w22
  4085a8:	add	x0, x0, w22, uxtw #2
  4085ac:	lsl	w2, w8, #2
  4085b0:	mov	w1, #0x1                   	// #1
  4085b4:	bl	4029d0 <fread@plt>
  4085b8:	ldr	w8, [x23, #16]
  4085bc:	lsr	x9, x0, #2
  4085c0:	add	w8, w8, w9
  4085c4:	cmp	w8, w19
  4085c8:	str	w8, [x23, #16]
  4085cc:	b.cs	4085e8 <feof@plt+0x5508>  // b.hs, b.nlast
  4085d0:	ldr	w9, [x21, #4]
  4085d4:	sub	w8, w19, w8
  4085d8:	mov	x0, xzr
  4085dc:	add	w8, w8, w9
  4085e0:	stp	wzr, w8, [x21]
  4085e4:	b	408600 <feof@plt+0x5520>
  4085e8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4085ec:	ldr	w8, [x8, #1492]
  4085f0:	ldur	x9, [x20, #36]
  4085f4:	add	w10, w8, w19
  4085f8:	str	w10, [x20]
  4085fc:	add	x0, x9, w8, uxtw #2
  408600:	ldp	x20, x19, [sp, #48]
  408604:	ldp	x22, x21, [sp, #32]
  408608:	ldr	x23, [sp, #16]
  40860c:	ldp	x29, x30, [sp], #64
  408610:	ret
  408614:	sub	sp, sp, #0xd0
  408618:	stp	x29, x30, [sp, #128]
  40861c:	stp	x26, x25, [sp, #144]
  408620:	stp	x24, x23, [sp, #160]
  408624:	stp	x22, x21, [sp, #176]
  408628:	stp	x20, x19, [sp, #192]
  40862c:	add	x29, sp, #0x80
  408630:	mov	x21, x0
  408634:	bl	402a50 <strlen@plt>
  408638:	add	x0, x0, #0x1
  40863c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  408640:	ldrb	w8, [x21]
  408644:	mov	x19, x0
  408648:	mov	x20, x0
  40864c:	cbz	w8, 408760 <feof@plt+0x5680>
  408650:	mov	w26, wzr
  408654:	mov	w23, #0x2f                  	// #47
  408658:	mov	x24, x19
  40865c:	mov	x20, x19
  408660:	sub	x25, x21, #0x1
  408664:	mov	w10, w8
  408668:	mov	x9, x21
  40866c:	ands	w10, w10, #0xff
  408670:	b.eq	40868c <feof@plt+0x55ac>  // b.none
  408674:	cmp	w10, #0x2f
  408678:	b.eq	40868c <feof@plt+0x55ac>  // b.none
  40867c:	ldrb	w10, [x9, #1]!
  408680:	add	x25, x25, #0x1
  408684:	ands	w10, w10, #0xff
  408688:	b.ne	408674 <feof@plt+0x5594>  // b.any
  40868c:	sub	x22, x9, x21
  408690:	cmp	x22, #0x2
  408694:	b.eq	4086b0 <feof@plt+0x55d0>  // b.none
  408698:	cmp	x22, #0x1
  40869c:	b.ne	408700 <feof@plt+0x5620>  // b.any
  4086a0:	and	w8, w8, #0xff
  4086a4:	cmp	w8, #0x2e
  4086a8:	b.eq	408720 <feof@plt+0x5640>  // b.none
  4086ac:	b	408700 <feof@plt+0x5620>
  4086b0:	and	w8, w8, #0xff
  4086b4:	cmp	w8, #0x2e
  4086b8:	b.ne	408700 <feof@plt+0x5620>  // b.any
  4086bc:	ldrb	w8, [x21, #1]
  4086c0:	cmp	w8, #0x2e
  4086c4:	b.ne	408700 <feof@plt+0x5620>  // b.any
  4086c8:	cmp	x24, x20
  4086cc:	strb	wzr, [x20]
  4086d0:	b.eq	4086f8 <feof@plt+0x5618>  // b.none
  4086d4:	mov	x2, sp
  4086d8:	mov	w0, wzr
  4086dc:	mov	x1, x19
  4086e0:	bl	402ef0 <__xstat@plt>
  4086e4:	cbnz	w0, 4086f8 <feof@plt+0x5618>
  4086e8:	ldr	w8, [sp, #16]
  4086ec:	and	w8, w8, #0xf000
  4086f0:	cmp	w8, #0xa, lsl #12
  4086f4:	b.ne	408738 <feof@plt+0x5658>  // b.any
  4086f8:	add	x8, x20, w26, sxtw
  4086fc:	add	x24, x8, #0x2
  408700:	cbz	w26, 408708 <feof@plt+0x5628>
  408704:	strb	w23, [x20], #1
  408708:	mov	x0, x20
  40870c:	mov	x1, x21
  408710:	mov	x2, x22
  408714:	bl	4029c0 <memcpy@plt>
  408718:	add	x20, x20, x22
  40871c:	mov	w26, #0x1                   	// #1
  408720:	ldrb	w8, [x25, #1]!
  408724:	cmp	w8, #0x2f
  408728:	b.eq	408720 <feof@plt+0x5640>  // b.none
  40872c:	cbz	w8, 408760 <feof@plt+0x5680>
  408730:	mov	x21, x25
  408734:	b	408660 <feof@plt+0x5580>
  408738:	ldrb	w8, [x20]
  40873c:	cmp	w8, #0x2f
  408740:	b.eq	408754 <feof@plt+0x5674>  // b.none
  408744:	sub	x20, x20, #0x1
  408748:	cmp	x24, x20
  40874c:	b.ne	408738 <feof@plt+0x5658>  // b.any
  408750:	mov	x20, x24
  408754:	cmp	x20, x19
  408758:	cset	w26, ne  // ne = any
  40875c:	b	408720 <feof@plt+0x5640>
  408760:	strb	wzr, [x20]
  408764:	mov	x0, x19
  408768:	ldp	x20, x19, [sp, #192]
  40876c:	ldp	x22, x21, [sp, #176]
  408770:	ldp	x24, x23, [sp, #160]
  408774:	ldp	x26, x25, [sp, #144]
  408778:	ldp	x29, x30, [sp, #128]
  40877c:	add	sp, sp, #0xd0
  408780:	ret
  408784:	stp	x29, x30, [sp, #-16]!
  408788:	mov	x29, sp
  40878c:	ldp	x10, x8, [x0, #32]
  408790:	mov	x9, #0x4ec5                	// #20165
  408794:	movk	x9, #0xc4ec, lsl #16
  408798:	movk	x9, #0xec4e, lsl #32
  40879c:	sub	x8, x8, x10
  4087a0:	asr	x8, x8, #3
  4087a4:	movk	x9, #0x4ec4, lsl #48
  4087a8:	mul	x11, x8, x9
  4087ac:	lsl	x8, x11, #3
  4087b0:	add	x8, x8, #0xf
  4087b4:	and	x8, x8, #0xfffffffffffffff0
  4087b8:	mov	x9, sp
  4087bc:	sub	x8, x9, x8
  4087c0:	mov	sp, x8
  4087c4:	cbz	w11, 408810 <feof@plt+0x5730>
  4087c8:	subs	w9, w11, #0x1
  4087cc:	mov	w12, #0x68                  	// #104
  4087d0:	umaddl	x10, w9, w12, x10
  4087d4:	ldrb	w13, [x10, #48]
  4087d8:	orr	w13, w13, #0x8
  4087dc:	strb	w13, [x10, #48]
  4087e0:	b.eq	40880c <feof@plt+0x572c>  // b.none
  4087e4:	sub	w10, w11, #0x2
  4087e8:	umull	x10, w10, w12
  4087ec:	add	x10, x10, #0x30
  4087f0:	ldr	x11, [x0, #32]
  4087f4:	subs	w9, w9, #0x1
  4087f8:	ldrb	w12, [x11, x10]
  4087fc:	orr	w12, w12, #0x8
  408800:	strb	w12, [x11, x10]
  408804:	sub	x10, x10, #0x68
  408808:	b.ne	4087f0 <feof@plt+0x5710>  // b.any
  40880c:	ldr	x10, [x0, #32]
  408810:	str	x10, [x8]
  408814:	ldrb	w11, [x10, #48]
  408818:	mov	w9, #0x1                   	// #1
  40881c:	and	w11, w11, #0xfffffff7
  408820:	strb	w11, [x10, #48]
  408824:	mov	w10, #0x14                  	// #20
  408828:	b	408830 <feof@plt+0x5750>
  40882c:	cbz	w9, 408880 <feof@plt+0x57a0>
  408830:	sub	w9, w9, #0x1
  408834:	ldr	x11, [x8, w9, uxtw #3]
  408838:	ldr	x11, [x11]
  40883c:	cbnz	x11, 40884c <feof@plt+0x576c>
  408840:	b	40882c <feof@plt+0x574c>
  408844:	ldr	x11, [x11, #40]
  408848:	cbz	x11, 40882c <feof@plt+0x574c>
  40884c:	ldrb	w12, [x11, #32]
  408850:	tst	w12, w10
  408854:	b.ne	408844 <feof@plt+0x5764>  // b.any
  408858:	ldr	x12, [x11, #8]
  40885c:	ldrb	w13, [x12, #48]
  408860:	tbz	w13, #3, 408844 <feof@plt+0x5764>
  408864:	and	w13, w13, #0xfffffff7
  408868:	strb	w13, [x12, #48]
  40886c:	ldr	x12, [x11, #8]
  408870:	add	w13, w9, #0x1
  408874:	str	x12, [x8, w9, uxtw #3]
  408878:	mov	w9, w13
  40887c:	b	408844 <feof@plt+0x5764>
  408880:	mov	sp, x29
  408884:	ldp	x29, x30, [sp], #16
  408888:	ret
  40888c:	sub	sp, sp, #0xb0
  408890:	stp	x29, x30, [sp, #80]
  408894:	stp	x28, x27, [sp, #96]
  408898:	stp	x26, x25, [sp, #112]
  40889c:	stp	x24, x23, [sp, #128]
  4088a0:	stp	x22, x21, [sp, #144]
  4088a4:	stp	x20, x19, [sp, #160]
  4088a8:	add	x29, sp, #0x50
  4088ac:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4088b0:	ldrb	w8, [x8, #1716]
  4088b4:	mov	x19, x1
  4088b8:	mov	x20, x0
  4088bc:	cmp	w8, #0x1
  4088c0:	b.ne	4088dc <feof@plt+0x57fc>  // b.any
  4088c4:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  4088c8:	add	x0, x0, #0x9b2
  4088cc:	mov	w1, #0xa2                  	// #162
  4088d0:	mov	w2, #0x1                   	// #1
  4088d4:	mov	x3, x20
  4088d8:	bl	402fa0 <fwrite@plt>
  4088dc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4088e0:	ldrb	w8, [x8, #1720]
  4088e4:	cmp	w8, #0x1
  4088e8:	b.ne	408904 <feof@plt+0x5824>  // b.any
  4088ec:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  4088f0:	add	x0, x0, #0xa55
  4088f4:	mov	w1, #0x71                  	// #113
  4088f8:	mov	w2, #0x1                   	// #1
  4088fc:	mov	x3, x20
  408900:	bl	402fa0 <fwrite@plt>
  408904:	ldr	x2, [x19, #80]
  408908:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40890c:	add	x1, x1, #0xac7
  408910:	mov	x0, x20
  408914:	bl	402a70 <fprintf@plt>
  408918:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40891c:	ldrb	w8, [x8, #1680]
  408920:	tbnz	w8, #0, 408984 <feof@plt+0x58a4>
  408924:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408928:	ldr	x2, [x8, #1792]
  40892c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408930:	add	x1, x1, #0xae2
  408934:	mov	x0, x20
  408938:	bl	402a70 <fprintf@plt>
  40893c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408940:	ldrb	w8, [x8, #1824]
  408944:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  408948:	ldr	x9, [x9, #1784]
  40894c:	adrp	x10, 470000 <_obstack_memory_used@@Base+0xe838>
  408950:	add	x10, x10, #0x451
  408954:	cmp	w8, #0x0
  408958:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40895c:	csel	x2, x10, x9, ne  // ne = any
  408960:	add	x1, x1, #0xafc
  408964:	mov	x0, x20
  408968:	bl	402a70 <fprintf@plt>
  40896c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408970:	ldr	w2, [x8, #1828]
  408974:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408978:	add	x1, x1, #0xb15
  40897c:	mov	x0, x20
  408980:	bl	402a70 <fprintf@plt>
  408984:	ldr	x0, [x19, #8]
  408988:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40898c:	add	x1, x1, #0xf4c
  408990:	bl	402eb0 <fopen@plt>
  408994:	mov	x24, x0
  408998:	str	x0, [sp, #16]
  40899c:	cbz	x0, 408b50 <feof@plt+0x5a70>
  4089a0:	ldr	x8, [x19, #16]
  4089a4:	cbnz	x8, 4089c0 <feof@plt+0x58e0>
  4089a8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  4089ac:	add	x0, x0, #0xb4a
  4089b0:	mov	w1, #0x2b                  	// #43
  4089b4:	mov	w2, #0x1                   	// #1
  4089b8:	mov	x3, x20
  4089bc:	bl	402fa0 <fwrite@plt>
  4089c0:	mov	x26, xzr
  4089c4:	mov	x28, xzr
  4089c8:	mov	x22, xzr
  4089cc:	adrp	x25, 48a000 <_obstack_memory_used@@Base+0x28838>
  4089d0:	adrp	x27, 48a000 <_obstack_memory_used@@Base+0x28838>
  4089d4:	ldr	x1, [x25, #1936]
  4089d8:	cbnz	x1, 4089f0 <feof@plt+0x5910>
  4089dc:	b	4089f8 <feof@plt+0x5918>
  4089e0:	str	x24, [x28], #8
  4089e4:	ldr	x24, [sp, #16]
  4089e8:	ldr	x1, [x25, #1936]
  4089ec:	cbz	x1, 4089f8 <feof@plt+0x5918>
  4089f0:	ldr	x0, [x27, #1928]
  4089f4:	b	408a10 <feof@plt+0x5930>
  4089f8:	mov	w8, #0xc8                  	// #200
  4089fc:	mov	w0, #0xc8                  	// #200
  408a00:	str	x8, [x25, #1936]
  408a04:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  408a08:	ldr	x1, [x25, #1936]
  408a0c:	str	x0, [x27, #1928]
  408a10:	mov	x2, x24
  408a14:	bl	402d80 <fgets_unlocked@plt>
  408a18:	cbz	x0, 408b70 <feof@plt+0x5a90>
  408a1c:	mov	x21, xzr
  408a20:	b	408a38 <feof@plt+0x5958>
  408a24:	add	x0, x23, x21
  408a28:	sub	w1, w8, w21
  408a2c:	mov	x2, x24
  408a30:	bl	402d80 <fgets_unlocked@plt>
  408a34:	cbz	x0, 408a88 <feof@plt+0x59a8>
  408a38:	ldr	x23, [x27, #1928]
  408a3c:	add	x0, x23, x21
  408a40:	bl	402a50 <strlen@plt>
  408a44:	add	x21, x0, x21
  408a48:	cbz	x0, 408a5c <feof@plt+0x597c>
  408a4c:	sub	x8, x21, #0x1
  408a50:	ldrb	w9, [x23, x8]
  408a54:	cmp	w9, #0xa
  408a58:	b.eq	408a98 <feof@plt+0x59b8>  // b.none
  408a5c:	ldr	x8, [x25, #1936]
  408a60:	cmp	x21, x8, lsr #1
  408a64:	b.ls	408a24 <feof@plt+0x5944>  // b.plast
  408a68:	lsl	x1, x8, #1
  408a6c:	mov	x0, x23
  408a70:	str	x1, [x25, #1936]
  408a74:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  408a78:	ldr	x8, [x25, #1936]
  408a7c:	mov	x23, x0
  408a80:	str	x0, [x27, #1928]
  408a84:	b	408a24 <feof@plt+0x5944>
  408a88:	cbz	x21, 408b70 <feof@plt+0x5a90>
  408a8c:	ldr	x23, [x27, #1928]
  408a90:	cbnz	x23, 408a9c <feof@plt+0x59bc>
  408a94:	b	408b70 <feof@plt+0x5a90>
  408a98:	strb	wzr, [x23, x8]
  408a9c:	mov	x0, x23
  408aa0:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  408aa4:	cmp	x26, x28
  408aa8:	mov	x24, x0
  408aac:	b.ne	4089e0 <feof@plt+0x5900>  // b.any
  408ab0:	sub	x23, x28, x22
  408ab4:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  408ab8:	cmp	x23, x8
  408abc:	b.eq	409080 <feof@plt+0x5fa0>  // b.none
  408ac0:	asr	x28, x23, #3
  408ac4:	cmp	x23, #0x0
  408ac8:	csinc	x8, x28, xzr, ne  // ne = any
  408acc:	adds	x8, x8, x28
  408ad0:	lsr	x10, x8, #60
  408ad4:	cset	w9, cs  // cs = hs, nlast
  408ad8:	cmp	x10, #0x0
  408adc:	cset	w10, ne  // ne = any
  408ae0:	orr	w9, w9, w10
  408ae4:	cmp	w9, #0x0
  408ae8:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  408aec:	csel	x26, x9, x8, ne  // ne = any
  408af0:	cbz	x26, 408b04 <feof@plt+0x5a24>
  408af4:	lsl	x0, x26, #3
  408af8:	bl	402d30 <_Znwm@plt>
  408afc:	mov	x21, x0
  408b00:	b	408b08 <feof@plt+0x5a28>
  408b04:	mov	x21, xzr
  408b08:	add	x28, x21, x28, lsl #3
  408b0c:	cmp	x23, #0x1
  408b10:	str	x24, [x28]
  408b14:	b.lt	408b28 <feof@plt+0x5a48>  // b.tstop
  408b18:	mov	x0, x21
  408b1c:	mov	x1, x22
  408b20:	mov	x2, x23
  408b24:	bl	402e30 <memmove@plt>
  408b28:	ldr	x24, [sp, #16]
  408b2c:	cbz	x22, 408b38 <feof@plt+0x5a58>
  408b30:	mov	x0, x22
  408b34:	bl	402d00 <_ZdlPv@plt>
  408b38:	add	x26, x21, x26, lsl #3
  408b3c:	mov	x22, x21
  408b40:	add	x28, x28, #0x8
  408b44:	ldr	x1, [x25, #1936]
  408b48:	cbnz	x1, 4089f0 <feof@plt+0x5910>
  408b4c:	b	4089f8 <feof@plt+0x5918>
  408b50:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408b54:	ldr	x0, [x8, #1464]
  408b58:	ldr	x2, [x19, #8]
  408b5c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408b60:	add	x1, x1, #0xb2e
  408b64:	bl	40f8a4 <feof@plt+0xc7c4>
  408b68:	mov	x28, xzr
  408b6c:	mov	x22, xzr
  408b70:	subs	x8, x28, x22
  408b74:	b.eq	40900c <feof@plt+0x5f2c>  // b.none
  408b78:	asr	x23, x8, #3
  408b7c:	add	x8, sp, #0x28
  408b80:	mov	w21, wzr
  408b84:	mov	w25, #0x1                   	// #1
  408b88:	add	x26, x8, #0x10
  408b8c:	str	x26, [sp, #24]
  408b90:	b	408bc0 <feof@plt+0x5ae0>
  408b94:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  408b98:	mov	w1, #0x13                  	// #19
  408b9c:	mov	w2, #0x1                   	// #1
  408ba0:	add	x0, x0, #0xb8a
  408ba4:	mov	x3, x20
  408ba8:	bl	402fa0 <fwrite@plt>
  408bac:	ldp	x25, x24, [sp, #8]
  408bb0:	mov	w21, wzr
  408bb4:	add	w25, w25, #0x1
  408bb8:	cmp	x23, x25
  408bbc:	b.cc	40900c <feof@plt+0x5f2c>  // b.lo, b.ul, b.last
  408bc0:	ldp	x8, x9, [x19, #24]
  408bc4:	sub	x9, x9, x8
  408bc8:	cmp	x25, x9, asr #6
  408bcc:	b.cs	408cbc <feof@plt+0x5bdc>  // b.hs, b.nlast
  408bd0:	add	x28, x8, x25, lsl #6
  408bd4:	cbnz	w21, 408d60 <feof@plt+0x5c80>
  408bd8:	ldp	x8, x9, [x19, #120]
  408bdc:	sub	x9, x9, x8
  408be0:	cmp	x25, x9, asr #3
  408be4:	b.cs	408cf8 <feof@plt+0x5c18>  // b.hs, b.nlast
  408be8:	ldr	x21, [x8, x25, lsl #3]
  408bec:	mov	x26, x25
  408bf0:	cbz	x21, 408d04 <feof@plt+0x5c24>
  408bf4:	ldp	x27, x25, [x21]
  408bf8:	str	x21, [sp, #32]
  408bfc:	cmp	x27, x25
  408c00:	b.eq	408c3c <feof@plt+0x5b5c>  // b.none
  408c04:	sub	x8, x25, x27
  408c08:	asr	x8, x8, #3
  408c0c:	clz	x8, x8
  408c10:	mov	w9, #0x7e                  	// #126
  408c14:	sub	x2, x9, x8, lsl #1
  408c18:	mov	x0, x27
  408c1c:	mov	x1, x25
  408c20:	mov	x3, xzr
  408c24:	bl	40d5d4 <feof@plt+0xa4f4>
  408c28:	mov	x0, x27
  408c2c:	mov	x1, x25
  408c30:	mov	x2, xzr
  408c34:	bl	40d834 <feof@plt+0xa754>
  408c38:	ldp	x27, x25, [x21]
  408c3c:	sub	x9, x25, x27
  408c40:	asr	x8, x9, #3
  408c44:	cmp	x8, #0x2
  408c48:	b.cc	408d14 <feof@plt+0x5c34>  // b.lo, b.ul, b.last
  408c4c:	sub	x10, x8, #0x1
  408c50:	mov	w21, wzr
  408c54:	cmn	w10, #0x1
  408c58:	mov	x9, xzr
  408c5c:	b.eq	408d30 <feof@plt+0x5c50>  // b.none
  408c60:	lsr	x11, x10, #32
  408c64:	mov	w10, w21
  408c68:	cbnz	x11, 408d34 <feof@plt+0x5c54>
  408c6c:	and	x9, x8, #0xfffffffffffffffe
  408c70:	mov	w12, wzr
  408c74:	mov	w10, w9
  408c78:	add	x13, x27, #0x8
  408c7c:	mov	x14, x9
  408c80:	ldp	x15, x16, [x13, #-8]
  408c84:	add	x13, x13, #0x10
  408c88:	ldr	w15, [x15, #96]
  408c8c:	ldr	w16, [x16, #96]
  408c90:	cmp	w15, w11
  408c94:	csel	w11, w15, w11, hi  // hi = pmore
  408c98:	cmp	w16, w12
  408c9c:	csel	w12, w16, w12, hi  // hi = pmore
  408ca0:	subs	x14, x14, #0x2
  408ca4:	b.ne	408c80 <feof@plt+0x5ba0>  // b.any
  408ca8:	cmp	w11, w12
  408cac:	csel	w21, w11, w12, hi  // hi = pmore
  408cb0:	cmp	x8, x9
  408cb4:	b.ne	408d34 <feof@plt+0x5c54>  // b.any
  408cb8:	b	408d58 <feof@plt+0x5c78>
  408cbc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408cc0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  408cc4:	mov	x0, x20
  408cc8:	add	x1, x1, #0xb76
  408ccc:	add	x2, x2, #0x451
  408cd0:	mov	w3, w25
  408cd4:	bl	402a70 <fprintf@plt>
  408cd8:	cbz	w25, 409044 <feof@plt+0x5f64>
  408cdc:	sub	w8, w25, #0x1
  408ce0:	ldr	x2, [x22, w8, uxtw #3]
  408ce4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408ce8:	mov	x0, x20
  408cec:	add	x1, x1, #0xb10
  408cf0:	bl	402a70 <fprintf@plt>
  408cf4:	b	408bb4 <feof@plt+0x5ad4>
  408cf8:	mov	x27, xzr
  408cfc:	mov	w21, wzr
  408d00:	b	408d60 <feof@plt+0x5c80>
  408d04:	mov	x25, x26
  408d08:	ldr	x26, [sp, #24]
  408d0c:	mov	x27, xzr
  408d10:	b	408d60 <feof@plt+0x5c80>
  408d14:	cmp	x9, #0x8
  408d18:	b.ne	408d28 <feof@plt+0x5c48>  // b.any
  408d1c:	ldr	x1, [x27]
  408d20:	mov	x0, x20
  408d24:	bl	40a684 <feof@plt+0x75a4>
  408d28:	mov	w21, wzr
  408d2c:	b	408d58 <feof@plt+0x5c78>
  408d30:	mov	w10, w21
  408d34:	add	w10, w10, #0x1
  408d38:	ldr	x11, [x27, x9, lsl #3]
  408d3c:	mov	w9, w10
  408d40:	add	w10, w10, #0x1
  408d44:	ldr	w11, [x11, #96]
  408d48:	cmp	w11, w21
  408d4c:	csel	w21, w11, w21, hi  // hi = pmore
  408d50:	cmp	x8, x9
  408d54:	b.hi	408d38 <feof@plt+0x5c58>  // b.pmore
  408d58:	mov	x25, x26
  408d5c:	ldp	x26, x27, [sp, #24]
  408d60:	ldrb	w8, [x28, #56]
  408d64:	ldr	x4, [x28]
  408d68:	ldr	w9, [x19, #88]
  408d6c:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1838>
  408d70:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1838>
  408d74:	ubfx	w2, w8, #1, #1
  408d78:	ubfx	w3, w8, #2, #1
  408d7c:	and	w1, w8, #0x1
  408d80:	mov	x0, x20
  408d84:	mov	w5, w25
  408d88:	add	x6, x6, #0xb7e
  408d8c:	add	x7, x7, #0xb84
  408d90:	str	w9, [sp]
  408d94:	bl	40a8fc <feof@plt+0x781c>
  408d98:	cbz	w25, 409044 <feof@plt+0x5f64>
  408d9c:	sub	w8, w25, #0x1
  408da0:	ldr	x2, [x22, w8, uxtw #3]
  408da4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408da8:	mov	x0, x20
  408dac:	add	x1, x1, #0xb10
  408db0:	bl	402a70 <fprintf@plt>
  408db4:	mov	x0, x20
  408db8:	mov	x1, x28
  408dbc:	mov	w2, w25
  408dc0:	bl	40ad50 <feof@plt+0x7c70>
  408dc4:	cmp	w21, w25
  408dc8:	b.ne	408bb4 <feof@plt+0x5ad4>  // b.any
  408dcc:	str	x25, [sp, #8]
  408dd0:	ldp	x24, x8, [x27]
  408dd4:	str	x27, [sp, #32]
  408dd8:	cmp	x24, x8
  408ddc:	b.ne	408df8 <feof@plt+0x5d18>  // b.any
  408de0:	b	408b94 <feof@plt+0x5ab4>
  408de4:	ldr	x27, [sp, #32]
  408de8:	add	x24, x24, #0x8
  408dec:	ldr	x8, [x27, #8]
  408df0:	cmp	x24, x8
  408df4:	b.eq	408b94 <feof@plt+0x5ab4>  // b.none
  408df8:	ldr	x28, [x24]
  408dfc:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  408e00:	mov	w1, #0x13                  	// #19
  408e04:	mov	w2, #0x1                   	// #1
  408e08:	add	x0, x0, #0xb8a
  408e0c:	mov	x3, x20
  408e10:	bl	402fa0 <fwrite@plt>
  408e14:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408e18:	ldrb	w8, [x8, #1724]
  408e1c:	cmp	w8, #0x1
  408e20:	b.ne	408e4c <feof@plt+0x5d6c>  // b.any
  408e24:	ldr	x27, [x28, #8]
  408e28:	cbnz	x27, 408e44 <feof@plt+0x5d64>
  408e2c:	ldr	x0, [x28]
  408e30:	mov	w1, #0x1                   	// #1
  408e34:	bl	44a420 <feof@plt+0x47340>
  408e38:	mov	x27, x0
  408e3c:	str	x0, [x28, #8]
  408e40:	cbz	x0, 408ff0 <feof@plt+0x5f10>
  408e44:	str	x26, [sp, #40]
  408e48:	b	408e58 <feof@plt+0x5d78>
  408e4c:	ldr	x27, [x28]
  408e50:	str	x26, [sp, #40]
  408e54:	cbz	x27, 409000 <feof@plt+0x5f20>
  408e58:	mov	x0, x27
  408e5c:	bl	402a50 <strlen@plt>
  408e60:	mov	x21, x0
  408e64:	cmp	x0, #0xf
  408e68:	stur	x0, [x29, #-8]
  408e6c:	mov	x0, x26
  408e70:	b.ls	408e90 <feof@plt+0x5db0>  // b.plast
  408e74:	add	x0, sp, #0x28
  408e78:	sub	x1, x29, #0x8
  408e7c:	mov	x2, xzr
  408e80:	bl	402fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  408e84:	ldur	x8, [x29, #-8]
  408e88:	str	x0, [sp, #40]
  408e8c:	str	x8, [sp, #56]
  408e90:	cbz	x21, 408eb4 <feof@plt+0x5dd4>
  408e94:	cmp	x21, #0x1
  408e98:	b.ne	408ea8 <feof@plt+0x5dc8>  // b.any
  408e9c:	ldrb	w8, [x27]
  408ea0:	strb	w8, [x0]
  408ea4:	b	408eb4 <feof@plt+0x5dd4>
  408ea8:	mov	x1, x27
  408eac:	mov	x2, x21
  408eb0:	bl	4029c0 <memcpy@plt>
  408eb4:	ldur	x8, [x29, #-8]
  408eb8:	ldr	x9, [sp, #40]
  408ebc:	str	x8, [sp, #48]
  408ec0:	strb	wzr, [x9, x8]
  408ec4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  408ec8:	ldrb	w8, [x8, #1716]
  408ecc:	cmp	w8, #0x1
  408ed0:	b.ne	408f18 <feof@plt+0x5e38>  // b.any
  408ed4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1838>
  408ed8:	add	x0, sp, #0x28
  408edc:	mov	w4, #0x8                   	// #8
  408ee0:	mov	x1, xzr
  408ee4:	mov	x2, xzr
  408ee8:	add	x3, x3, #0xb9e
  408eec:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  408ef0:	ldr	x8, [sp, #48]
  408ef4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  408ef8:	sub	x8, x9, x8
  408efc:	cmp	x8, #0x5
  408f00:	b.ls	409074 <feof@plt+0x5f94>  // b.plast
  408f04:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408f08:	add	x0, sp, #0x28
  408f0c:	mov	w2, #0x6                   	// #6
  408f10:	add	x1, x1, #0xba7
  408f14:	bl	402a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  408f18:	ldr	x2, [sp, #40]
  408f1c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408f20:	mov	x0, x20
  408f24:	add	x1, x1, #0xbae
  408f28:	bl	402a70 <fprintf@plt>
  408f2c:	mov	x0, x20
  408f30:	mov	x1, x28
  408f34:	bl	40a684 <feof@plt+0x75a4>
  408f38:	ldp	x8, x9, [x28, #112]
  408f3c:	cmp	x9, x8
  408f40:	b.eq	408fd8 <feof@plt+0x5ef8>  // b.none
  408f44:	mov	x25, xzr
  408f48:	add	x27, x8, x25, lsl #6
  408f4c:	ldr	w26, [x28, #88]
  408f50:	ldrb	w8, [x27, #56]
  408f54:	ldr	w9, [x19, #88]
  408f58:	ldr	x4, [x27]
  408f5c:	add	w21, w25, w26
  408f60:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1838>
  408f64:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1838>
  408f68:	ubfx	w2, w8, #1, #1
  408f6c:	ubfx	w3, w8, #2, #1
  408f70:	and	w1, w8, #0x1
  408f74:	mov	x0, x20
  408f78:	mov	w5, w21
  408f7c:	add	x6, x6, #0xb7e
  408f80:	add	x7, x7, #0xb84
  408f84:	str	w9, [sp]
  408f88:	bl	40a8fc <feof@plt+0x781c>
  408f8c:	cbz	w21, 409044 <feof@plt+0x5f64>
  408f90:	cmp	x23, w21, uxtw
  408f94:	b.cc	40905c <feof@plt+0x5f7c>  // b.lo, b.ul, b.last
  408f98:	add	w8, w25, w26
  408f9c:	sub	w8, w8, #0x1
  408fa0:	ldr	x2, [x22, w8, uxtw #3]
  408fa4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  408fa8:	mov	x0, x20
  408fac:	add	x1, x1, #0xb10
  408fb0:	bl	402a70 <fprintf@plt>
  408fb4:	mov	x0, x20
  408fb8:	mov	x1, x27
  408fbc:	mov	w2, w21
  408fc0:	bl	40ad50 <feof@plt+0x7c70>
  408fc4:	ldp	x8, x9, [x28, #112]
  408fc8:	add	w25, w25, #0x1
  408fcc:	sub	x9, x9, x8
  408fd0:	cmp	x25, x9, asr #6
  408fd4:	b.cc	408f48 <feof@plt+0x5e68>  // b.lo, b.ul, b.last
  408fd8:	ldr	x0, [sp, #40]
  408fdc:	ldr	x26, [sp, #24]
  408fe0:	cmp	x0, x26
  408fe4:	b.eq	408de4 <feof@plt+0x5d04>  // b.none
  408fe8:	bl	402d00 <_ZdlPv@plt>
  408fec:	b	408de4 <feof@plt+0x5d04>
  408ff0:	ldr	x27, [x28]
  408ff4:	str	x27, [x28, #8]
  408ff8:	str	x26, [sp, #40]
  408ffc:	cbnz	x27, 408e58 <feof@plt+0x5d78>
  409000:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409004:	add	x0, x0, #0xd1e
  409008:	bl	402c10 <_ZSt19__throw_logic_errorPKc@plt>
  40900c:	cbz	x24, 409018 <feof@plt+0x5f38>
  409010:	mov	x0, x24
  409014:	bl	402ae0 <fclose@plt>
  409018:	cbz	x22, 409024 <feof@plt+0x5f44>
  40901c:	mov	x0, x22
  409020:	bl	402d00 <_ZdlPv@plt>
  409024:	ldp	x20, x19, [sp, #160]
  409028:	ldp	x22, x21, [sp, #144]
  40902c:	ldp	x24, x23, [sp, #128]
  409030:	ldp	x26, x25, [sp, #112]
  409034:	ldp	x28, x27, [sp, #96]
  409038:	ldp	x29, x30, [sp, #80]
  40903c:	add	sp, sp, #0xb0
  409040:	ret
  409044:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409048:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40904c:	add	x0, x0, #0x825
  409050:	add	x2, x2, #0xbb3
  409054:	mov	w1, #0xb85                 	// #2949
  409058:	bl	40f560 <feof@plt+0xc480>
  40905c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409060:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  409064:	add	x0, x0, #0x825
  409068:	add	x2, x2, #0xbb3
  40906c:	mov	w1, #0xb86                 	// #2950
  409070:	bl	40f560 <feof@plt+0xc480>
  409074:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409078:	add	x0, x0, #0xd48
  40907c:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  409080:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409084:	add	x0, x0, #0x4b5
  409088:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40908c:	sub	sp, sp, #0xa0
  409090:	stp	x29, x30, [sp, #80]
  409094:	str	x25, [sp, #96]
  409098:	stp	x24, x23, [sp, #112]
  40909c:	stp	x22, x21, [sp, #128]
  4090a0:	stp	x20, x19, [sp, #144]
  4090a4:	add	x29, sp, #0x50
  4090a8:	mov	w21, w2
  4090ac:	mov	x19, x1
  4090b0:	mov	x20, x0
  4090b4:	tbz	w2, #0, 409144 <feof@plt+0x6064>
  4090b8:	ldp	x8, x9, [x20, #8]
  4090bc:	b	4090c8 <feof@plt+0x5fe8>
  4090c0:	ldr	x9, [x20, #16]
  4090c4:	add	x8, x8, #0x8
  4090c8:	cmp	x8, x9
  4090cc:	b.eq	409144 <feof@plt+0x6064>  // b.none
  4090d0:	ldr	x9, [x8]
  4090d4:	ldrh	w10, [x9, #32]
  4090d8:	tbnz	w10, #5, 40911c <feof@plt+0x603c>
  4090dc:	tbnz	w10, #7, 4090c0 <feof@plt+0x5fe0>
  4090e0:	ldr	w10, [x19, #56]
  4090e4:	add	w10, w10, #0x1
  4090e8:	str	w10, [x19, #56]
  4090ec:	ldr	x10, [x9]
  4090f0:	ldr	x10, [x10, #40]
  4090f4:	cbz	x10, 409104 <feof@plt+0x6024>
  4090f8:	ldr	w10, [x19, #60]
  4090fc:	add	w10, w10, #0x1
  409100:	str	w10, [x19, #60]
  409104:	ldr	x9, [x9, #16]
  409108:	cbz	x9, 4090c0 <feof@plt+0x5fe0>
  40910c:	ldr	w9, [x19, #64]
  409110:	add	w9, w9, #0x1
  409114:	str	w9, [x19, #64]
  409118:	b	4090c0 <feof@plt+0x5fe0>
  40911c:	ldr	w10, [x19, #68]
  409120:	add	w10, w10, #0x1
  409124:	str	w10, [x19, #68]
  409128:	ldr	x9, [x9]
  40912c:	ldr	x9, [x9, #40]
  409130:	cbz	x9, 4090c0 <feof@plt+0x5fe0>
  409134:	ldr	w9, [x19, #72]
  409138:	add	w9, w9, #0x1
  40913c:	str	w9, [x19, #72]
  409140:	b	4090c0 <feof@plt+0x5fe0>
  409144:	ldp	x8, x9, [x20, #32]
  409148:	cmp	x8, x9
  40914c:	b.eq	409378 <feof@plt+0x6298>  // b.none
  409150:	mov	x23, xzr
  409154:	b	409164 <feof@plt+0x6084>
  409158:	add	x8, x8, #0x8
  40915c:	cmp	x8, x9
  409160:	b.eq	4092a0 <feof@plt+0x61c0>  // b.none
  409164:	ldr	x10, [x8]
  409168:	ldr	x11, [x10, #8]
  40916c:	cbz	x11, 409280 <feof@plt+0x61a0>
  409170:	ldr	x12, [x20, #32]
  409174:	sub	x13, x9, x12
  409178:	lsr	x15, x13, #5
  40917c:	add	x14, x12, #0x10
  409180:	add	x15, x15, #0x1
  409184:	b	409198 <feof@plt+0x60b8>
  409188:	ldr	x16, [x11, #16]
  40918c:	add	x23, x16, x23
  409190:	ldr	x11, [x11, #48]
  409194:	cbz	x11, 409280 <feof@plt+0x61a0>
  409198:	ldr	x17, [x11]
  40919c:	cmp	x13, #0x20
  4091a0:	mov	x18, x13
  4091a4:	mov	x16, x12
  4091a8:	b.lt	4091fc <feof@plt+0x611c>  // b.tstop
  4091ac:	mov	x18, x15
  4091b0:	mov	x16, x14
  4091b4:	ldur	x0, [x16, #-16]
  4091b8:	cmp	x0, x17
  4091bc:	b.eq	409250 <feof@plt+0x6170>  // b.none
  4091c0:	ldur	x0, [x16, #-8]
  4091c4:	cmp	x0, x17
  4091c8:	b.eq	409260 <feof@plt+0x6180>  // b.none
  4091cc:	ldr	x0, [x16]
  4091d0:	cmp	x0, x17
  4091d4:	b.eq	409264 <feof@plt+0x6184>  // b.none
  4091d8:	ldr	x0, [x16, #8]
  4091dc:	cmp	x0, x17
  4091e0:	b.eq	409270 <feof@plt+0x6190>  // b.none
  4091e4:	sub	x18, x18, #0x1
  4091e8:	cmp	x18, #0x1
  4091ec:	add	x16, x16, #0x20
  4091f0:	b.gt	4091b4 <feof@plt+0x60d4>
  4091f4:	sub	x16, x16, #0x10
  4091f8:	sub	x18, x9, x16
  4091fc:	asr	x18, x18, #3
  409200:	cmp	x18, #0x1
  409204:	b.eq	409238 <feof@plt+0x6158>  // b.none
  409208:	cmp	x18, #0x2
  40920c:	b.eq	409228 <feof@plt+0x6148>  // b.none
  409210:	cmp	x18, #0x3
  409214:	b.ne	409188 <feof@plt+0x60a8>  // b.any
  409218:	ldr	x18, [x16]
  40921c:	cmp	x18, x17
  409220:	b.eq	409264 <feof@plt+0x6184>  // b.none
  409224:	add	x16, x16, #0x8
  409228:	ldr	x18, [x16]
  40922c:	cmp	x18, x17
  409230:	b.eq	409264 <feof@plt+0x6184>  // b.none
  409234:	add	x16, x16, #0x8
  409238:	ldr	x18, [x16]
  40923c:	cmp	x18, x17
  409240:	csel	x16, x16, x9, eq  // eq = none
  409244:	cmp	x16, x9
  409248:	b.ne	409190 <feof@plt+0x60b0>  // b.any
  40924c:	b	409188 <feof@plt+0x60a8>
  409250:	sub	x16, x16, #0x10
  409254:	cmp	x16, x9
  409258:	b.ne	409190 <feof@plt+0x60b0>  // b.any
  40925c:	b	409188 <feof@plt+0x60a8>
  409260:	sub	x16, x16, #0x8
  409264:	cmp	x16, x9
  409268:	b.ne	409190 <feof@plt+0x60b0>  // b.any
  40926c:	b	409188 <feof@plt+0x60a8>
  409270:	add	x16, x16, #0x8
  409274:	cmp	x16, x9
  409278:	b.ne	409190 <feof@plt+0x60b0>  // b.any
  40927c:	b	409188 <feof@plt+0x60a8>
  409280:	ldr	x10, [x10]
  409284:	cbz	x10, 409158 <feof@plt+0x6078>
  409288:	ldr	x9, [x10, #16]
  40928c:	str	x9, [x10, #24]
  409290:	ldr	x10, [x10, #40]
  409294:	cbnz	x10, 409288 <feof@plt+0x61a8>
  409298:	ldr	x9, [x20, #40]
  40929c:	b	409158 <feof@plt+0x6078>
  4092a0:	ldr	x24, [x20, #32]
  4092a4:	str	xzr, [x29, #24]
  4092a8:	cmp	x24, x9
  4092ac:	b.ne	4092c8 <feof@plt+0x61e8>  // b.any
  4092b0:	mov	x8, xzr
  4092b4:	b	409360 <feof@plt+0x6280>
  4092b8:	ldr	x8, [x20, #40]
  4092bc:	add	x24, x24, #0x8
  4092c0:	cmp	x24, x8
  4092c4:	b.eq	40935c <feof@plt+0x627c>  // b.none
  4092c8:	stp	xzr, xzr, [x29, #-24]
  4092cc:	stur	xzr, [x29, #-8]
  4092d0:	stp	xzr, xzr, [sp, #32]
  4092d4:	str	xzr, [sp, #48]
  4092d8:	stp	xzr, xzr, [sp, #8]
  4092dc:	str	xzr, [sp, #24]
  4092e0:	ldr	x0, [x24]
  4092e4:	sub	x1, x29, #0x18
  4092e8:	add	x3, sp, #0x20
  4092ec:	add	x4, sp, #0x8
  4092f0:	add	x6, x29, #0x18
  4092f4:	mov	x2, x0
  4092f8:	mov	x5, x20
  4092fc:	bl	4093c0 <feof@plt+0x62e0>
  409300:	ldp	x22, x25, [sp, #8]
  409304:	cmp	x22, x25
  409308:	b.ne	409340 <feof@plt+0x6260>  // b.any
  40930c:	cbz	x22, 409318 <feof@plt+0x6238>
  409310:	mov	x0, x22
  409314:	bl	402d00 <_ZdlPv@plt>
  409318:	ldr	x0, [sp, #32]
  40931c:	cbz	x0, 409324 <feof@plt+0x6244>
  409320:	bl	402d00 <_ZdlPv@plt>
  409324:	ldur	x0, [x29, #-24]
  409328:	cbz	x0, 4092b8 <feof@plt+0x61d8>
  40932c:	bl	402d00 <_ZdlPv@plt>
  409330:	b	4092b8 <feof@plt+0x61d8>
  409334:	add	x22, x22, #0x18
  409338:	cmp	x25, x22
  40933c:	b.eq	409350 <feof@plt+0x6270>  // b.none
  409340:	ldr	x0, [x22]
  409344:	cbz	x0, 409334 <feof@plt+0x6254>
  409348:	bl	402d00 <_ZdlPv@plt>
  40934c:	b	409334 <feof@plt+0x6254>
  409350:	ldr	x22, [sp, #8]
  409354:	cbnz	x22, 409310 <feof@plt+0x6230>
  409358:	b	409318 <feof@plt+0x6238>
  40935c:	ldr	x8, [x29, #24]
  409360:	add	x8, x8, x23
  409364:	str	x8, [x20]
  409368:	ldr	w9, [x19, #88]
  40936c:	cmp	x8, x9
  409370:	b.le	409378 <feof@plt+0x6298>
  409374:	str	w8, [x19, #88]
  409378:	ldrb	w8, [x20, #56]
  40937c:	tbz	w8, #0, 4093a4 <feof@plt+0x62c4>
  409380:	tbz	w21, #0, 4093a4 <feof@plt+0x62c4>
  409384:	ldr	w8, [x19, #48]
  409388:	add	w8, w8, #0x1
  40938c:	str	w8, [x19, #48]
  409390:	ldr	x8, [x20]
  409394:	cbz	x8, 4093a4 <feof@plt+0x62c4>
  409398:	ldr	w8, [x19, #52]
  40939c:	add	w8, w8, #0x1
  4093a0:	str	w8, [x19, #52]
  4093a4:	ldp	x20, x19, [sp, #144]
  4093a8:	ldp	x22, x21, [sp, #128]
  4093ac:	ldp	x24, x23, [sp, #112]
  4093b0:	ldr	x25, [sp, #96]
  4093b4:	ldp	x29, x30, [sp, #80]
  4093b8:	add	sp, sp, #0xa0
  4093bc:	ret
  4093c0:	sub	sp, sp, #0xa0
  4093c4:	stp	x29, x30, [sp, #64]
  4093c8:	stp	x28, x27, [sp, #80]
  4093cc:	stp	x26, x25, [sp, #96]
  4093d0:	stp	x24, x23, [sp, #112]
  4093d4:	stp	x22, x21, [sp, #128]
  4093d8:	stp	x20, x19, [sp, #144]
  4093dc:	add	x29, sp, #0x40
  4093e0:	mov	x8, x3
  4093e4:	ldr	x26, [x3]
  4093e8:	ldr	x9, [x8, #8]!
  4093ec:	mov	x28, x6
  4093f0:	mov	x21, x4
  4093f4:	mov	x20, x3
  4093f8:	sub	x27, x9, x26
  4093fc:	mov	x23, x2
  409400:	mov	x25, x1
  409404:	mov	x22, x0
  409408:	cmp	x27, #0x20
  40940c:	mov	x11, x27
  409410:	mov	x10, x26
  409414:	b.lt	40946c <feof@plt+0x638c>  // b.tstop
  409418:	lsr	x11, x27, #5
  40941c:	add	x10, x26, #0x10
  409420:	add	x11, x11, #0x1
  409424:	ldur	x12, [x10, #-16]
  409428:	cmp	x12, x22
  40942c:	b.eq	4094b8 <feof@plt+0x63d8>  // b.none
  409430:	ldur	x12, [x10, #-8]
  409434:	cmp	x12, x22
  409438:	b.eq	4094c0 <feof@plt+0x63e0>  // b.none
  40943c:	ldr	x12, [x10]
  409440:	cmp	x12, x22
  409444:	b.eq	4094cc <feof@plt+0x63ec>  // b.none
  409448:	ldr	x12, [x10, #8]
  40944c:	cmp	x12, x22
  409450:	b.eq	4094c8 <feof@plt+0x63e8>  // b.none
  409454:	sub	x11, x11, #0x1
  409458:	cmp	x11, #0x1
  40945c:	add	x10, x10, #0x20
  409460:	b.gt	409424 <feof@plt+0x6344>
  409464:	sub	x10, x10, #0x10
  409468:	sub	x11, x9, x10
  40946c:	asr	x11, x11, #3
  409470:	cmp	x11, #0x1
  409474:	b.eq	4094a8 <feof@plt+0x63c8>  // b.none
  409478:	cmp	x11, #0x2
  40947c:	b.eq	409498 <feof@plt+0x63b8>  // b.none
  409480:	cmp	x11, #0x3
  409484:	b.ne	4094d4 <feof@plt+0x63f4>  // b.any
  409488:	ldr	x11, [x10]
  40948c:	cmp	x11, x22
  409490:	b.eq	4094cc <feof@plt+0x63ec>  // b.none
  409494:	add	x10, x10, #0x8
  409498:	ldr	x11, [x10]
  40949c:	cmp	x11, x22
  4094a0:	b.eq	4094cc <feof@plt+0x63ec>  // b.none
  4094a4:	add	x10, x10, #0x8
  4094a8:	ldr	x11, [x10]
  4094ac:	cmp	x11, x22
  4094b0:	csel	x10, x10, x9, eq  // eq = none
  4094b4:	b	4094cc <feof@plt+0x63ec>
  4094b8:	sub	x10, x10, #0x10
  4094bc:	b	4094cc <feof@plt+0x63ec>
  4094c0:	sub	x10, x10, #0x8
  4094c4:	b	4094cc <feof@plt+0x63ec>
  4094c8:	add	x10, x10, #0x8
  4094cc:	cmp	x10, x9
  4094d0:	b.ne	409ec8 <feof@plt+0x6de8>  // b.any
  4094d4:	mov	x19, x20
  4094d8:	ldr	x10, [x19, #16]!
  4094dc:	stp	x21, x20, [sp, #8]
  4094e0:	str	x5, [sp, #32]
  4094e4:	cmp	x10, x9
  4094e8:	b.eq	4094fc <feof@plt+0x641c>  // b.none
  4094ec:	str	x22, [x9]
  4094f0:	ldr	x9, [x8]
  4094f4:	add	x9, x9, #0x8
  4094f8:	b	4095a4 <feof@plt+0x64c4>
  4094fc:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  409500:	cmp	x27, x8
  409504:	b.eq	409ea4 <feof@plt+0x6dc4>  // b.none
  409508:	asr	x21, x27, #3
  40950c:	cmp	x27, #0x0
  409510:	csinc	x8, x21, xzr, ne  // ne = any
  409514:	adds	x8, x8, x21
  409518:	lsr	x10, x8, #60
  40951c:	cset	w9, cs  // cs = hs, nlast
  409520:	cmp	x10, #0x0
  409524:	cset	w10, ne  // ne = any
  409528:	orr	w9, w9, w10
  40952c:	cmp	w9, #0x0
  409530:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  409534:	csel	x20, x9, x8, ne  // ne = any
  409538:	cbz	x20, 409550 <feof@plt+0x6470>
  40953c:	lsl	x0, x20, #3
  409540:	bl	402d30 <_Znwm@plt>
  409544:	ldr	x5, [sp, #32]
  409548:	mov	x24, x0
  40954c:	b	409554 <feof@plt+0x6474>
  409550:	mov	x24, xzr
  409554:	add	x21, x24, x21, lsl #3
  409558:	cmp	x27, #0x1
  40955c:	str	x22, [x21]
  409560:	b.lt	409578 <feof@plt+0x6498>  // b.tstop
  409564:	mov	x0, x24
  409568:	mov	x1, x26
  40956c:	mov	x2, x27
  409570:	bl	402e30 <memmove@plt>
  409574:	ldr	x5, [sp, #32]
  409578:	add	x21, x21, #0x8
  40957c:	cbz	x26, 40958c <feof@plt+0x64ac>
  409580:	mov	x0, x26
  409584:	bl	402d00 <_ZdlPv@plt>
  409588:	ldr	x5, [sp, #32]
  40958c:	ldr	x8, [sp, #16]
  409590:	add	x9, x24, x20, lsl #3
  409594:	stp	x24, x21, [x8]
  409598:	ldr	x21, [sp, #8]
  40959c:	mov	x20, x8
  4095a0:	mov	x8, x19
  4095a4:	str	x9, [x8]
  4095a8:	stp	xzr, xzr, [x29, #-24]
  4095ac:	stur	xzr, [x29, #-8]
  4095b0:	ldp	x1, x8, [x21, #8]
  4095b4:	cmp	x1, x8
  4095b8:	b.eq	4095e8 <feof@plt+0x6508>  // b.none
  4095bc:	str	xzr, [x1]
  4095c0:	ldur	x8, [x29, #-16]
  4095c4:	str	x8, [x1, #8]
  4095c8:	ldur	x8, [x29, #-8]
  4095cc:	str	x8, [x1, #16]
  4095d0:	stp	xzr, xzr, [x29, #-24]
  4095d4:	stur	xzr, [x29, #-8]
  4095d8:	ldr	x8, [x21, #8]
  4095dc:	add	x8, x8, #0x18
  4095e0:	str	x8, [x21, #8]
  4095e4:	b	409608 <feof@plt+0x6528>
  4095e8:	sub	x2, x29, #0x18
  4095ec:	mov	x0, x21
  4095f0:	bl	40d32c <feof@plt+0xa24c>
  4095f4:	ldr	x5, [sp, #32]
  4095f8:	ldur	x0, [x29, #-24]
  4095fc:	cbz	x0, 409608 <feof@plt+0x6528>
  409600:	bl	402d00 <_ZdlPv@plt>
  409604:	ldr	x5, [sp, #32]
  409608:	ldr	x19, [x22]
  40960c:	cbz	x19, 409aa0 <feof@plt+0x69c0>
  409610:	str	wzr, [sp, #24]
  409614:	str	x22, [sp]
  409618:	b	409660 <feof@plt+0x6580>
  40961c:	ldr	x5, [sp, #32]
  409620:	mov	x0, x26
  409624:	mov	x1, x25
  409628:	mov	x2, x23
  40962c:	mov	x3, x20
  409630:	mov	x4, x21
  409634:	mov	x6, x28
  409638:	bl	4093c0 <feof@plt+0x62e0>
  40963c:	ldr	w8, [sp, #24]
  409640:	ldr	x5, [sp, #32]
  409644:	ldr	x24, [x25, #8]
  409648:	orr	w8, w8, w0
  40964c:	str	w8, [sp, #24]
  409650:	sub	x8, x24, #0x8
  409654:	str	x8, [x25, #8]
  409658:	ldr	x19, [x19, #40]
  40965c:	cbz	x19, 409a80 <feof@plt+0x69a0>
  409660:	ldr	x26, [x19, #8]
  409664:	cmp	x26, x23
  409668:	b.cc	409658 <feof@plt+0x6578>  // b.lo, b.ul, b.last
  40966c:	ldr	x8, [x19, #24]
  409670:	cbz	x8, 409658 <feof@plt+0x6578>
  409674:	ldp	x8, x9, [x5, #32]
  409678:	sub	x10, x9, x8
  40967c:	cmp	x10, #0x20
  409680:	b.lt	4096d8 <feof@plt+0x65f8>  // b.tstop
  409684:	lsr	x10, x10, #5
  409688:	add	x8, x8, #0x10
  40968c:	add	x10, x10, #0x1
  409690:	ldur	x11, [x8, #-16]
  409694:	cmp	x11, x26
  409698:	b.eq	40972c <feof@plt+0x664c>  // b.none
  40969c:	ldur	x11, [x8, #-8]
  4096a0:	cmp	x11, x26
  4096a4:	b.eq	40973c <feof@plt+0x665c>  // b.none
  4096a8:	ldr	x11, [x8]
  4096ac:	cmp	x11, x26
  4096b0:	b.eq	409740 <feof@plt+0x6660>  // b.none
  4096b4:	ldr	x11, [x8, #8]
  4096b8:	cmp	x11, x26
  4096bc:	b.eq	4098b8 <feof@plt+0x67d8>  // b.none
  4096c0:	sub	x10, x10, #0x1
  4096c4:	cmp	x10, #0x1
  4096c8:	add	x8, x8, #0x20
  4096cc:	b.gt	409690 <feof@plt+0x65b0>
  4096d0:	sub	x8, x8, #0x10
  4096d4:	sub	x10, x9, x8
  4096d8:	asr	x10, x10, #3
  4096dc:	cmp	x10, #0x1
  4096e0:	b.eq	409714 <feof@plt+0x6634>  // b.none
  4096e4:	cmp	x10, #0x2
  4096e8:	b.eq	409704 <feof@plt+0x6624>  // b.none
  4096ec:	cmp	x10, #0x3
  4096f0:	b.ne	409658 <feof@plt+0x6578>  // b.any
  4096f4:	ldr	x10, [x8]
  4096f8:	cmp	x10, x26
  4096fc:	b.eq	409740 <feof@plt+0x6660>  // b.none
  409700:	add	x8, x8, #0x8
  409704:	ldr	x10, [x8]
  409708:	cmp	x10, x26
  40970c:	b.eq	409740 <feof@plt+0x6660>  // b.none
  409710:	add	x8, x8, #0x8
  409714:	ldr	x10, [x8]
  409718:	cmp	x10, x26
  40971c:	csel	x8, x8, x9, eq  // eq = none
  409720:	cmp	x8, x9
  409724:	b.ne	409748 <feof@plt+0x6668>  // b.any
  409728:	b	409658 <feof@plt+0x6578>
  40972c:	sub	x8, x8, #0x10
  409730:	cmp	x8, x9
  409734:	b.ne	409748 <feof@plt+0x6668>  // b.any
  409738:	b	409658 <feof@plt+0x6578>
  40973c:	sub	x8, x8, #0x8
  409740:	cmp	x8, x9
  409744:	b.eq	409658 <feof@plt+0x6578>  // b.none
  409748:	ldp	x8, x9, [x25, #8]
  40974c:	cmp	x8, x9
  409750:	b.eq	409858 <feof@plt+0x6778>  // b.none
  409754:	str	x19, [x8]
  409758:	ldp	x27, x8, [x25]
  40975c:	add	x24, x8, #0x8
  409760:	str	x24, [x25, #8]
  409764:	cmp	x26, x23
  409768:	b.eq	409924 <feof@plt+0x6844>  // b.none
  40976c:	cmp	x27, x24
  409770:	b.eq	4097a0 <feof@plt+0x66c0>  // b.none
  409774:	sub	x8, x24, x27
  409778:	mov	x9, xzr
  40977c:	asr	x8, x8, #3
  409780:	mov	w10, #0x1                   	// #1
  409784:	ldr	x9, [x27, x9, lsl #3]
  409788:	ldr	x9, [x9, #24]
  40978c:	cbz	x9, 409650 <feof@plt+0x6570>
  409790:	mov	w9, w10
  409794:	cmp	x8, x9
  409798:	add	w10, w10, #0x1
  40979c:	b.hi	409784 <feof@plt+0x66a4>  // b.pmore
  4097a0:	ldp	x8, x9, [x20]
  4097a4:	sub	x10, x9, x8
  4097a8:	cmp	x10, #0x20
  4097ac:	b.lt	409804 <feof@plt+0x6724>  // b.tstop
  4097b0:	lsr	x10, x10, #5
  4097b4:	add	x8, x8, #0x10
  4097b8:	add	x10, x10, #0x1
  4097bc:	ldur	x11, [x8, #-16]
  4097c0:	cmp	x11, x26
  4097c4:	b.eq	409a50 <feof@plt+0x6970>  // b.none
  4097c8:	ldur	x11, [x8, #-8]
  4097cc:	cmp	x11, x26
  4097d0:	b.eq	409a60 <feof@plt+0x6980>  // b.none
  4097d4:	ldr	x11, [x8]
  4097d8:	cmp	x11, x26
  4097dc:	b.eq	409a64 <feof@plt+0x6984>  // b.none
  4097e0:	ldr	x11, [x8, #8]
  4097e4:	cmp	x11, x26
  4097e8:	b.eq	409a70 <feof@plt+0x6990>  // b.none
  4097ec:	sub	x10, x10, #0x1
  4097f0:	cmp	x10, #0x1
  4097f4:	add	x8, x8, #0x20
  4097f8:	b.gt	4097bc <feof@plt+0x66dc>
  4097fc:	sub	x8, x8, #0x10
  409800:	sub	x10, x9, x8
  409804:	asr	x10, x10, #3
  409808:	cmp	x10, #0x1
  40980c:	b.eq	409840 <feof@plt+0x6760>  // b.none
  409810:	cmp	x10, #0x2
  409814:	b.eq	409830 <feof@plt+0x6750>  // b.none
  409818:	cmp	x10, #0x3
  40981c:	b.ne	40961c <feof@plt+0x653c>  // b.any
  409820:	ldr	x10, [x8]
  409824:	cmp	x10, x26
  409828:	b.eq	409a64 <feof@plt+0x6984>  // b.none
  40982c:	add	x8, x8, #0x8
  409830:	ldr	x10, [x8]
  409834:	cmp	x10, x26
  409838:	b.eq	409a64 <feof@plt+0x6984>  // b.none
  40983c:	add	x8, x8, #0x8
  409840:	ldr	x10, [x8]
  409844:	cmp	x10, x26
  409848:	csel	x8, x8, x9, eq  // eq = none
  40984c:	cmp	x8, x9
  409850:	b.ne	409650 <feof@plt+0x6570>  // b.any
  409854:	b	40961c <feof@plt+0x653c>
  409858:	mov	x22, x23
  40985c:	mov	x23, x28
  409860:	ldr	x28, [x25]
  409864:	sub	x24, x8, x28
  409868:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
  40986c:	cmp	x24, x8
  409870:	b.eq	409ea4 <feof@plt+0x6dc4>  // b.none
  409874:	asr	x21, x24, #3
  409878:	cmp	x24, #0x0
  40987c:	csinc	x8, x21, xzr, ne  // ne = any
  409880:	adds	x8, x8, x21
  409884:	lsr	x10, x8, #60
  409888:	cset	w9, cs  // cs = hs, nlast
  40988c:	cmp	x10, #0x0
  409890:	cset	w10, ne  // ne = any
  409894:	orr	w9, w9, w10
  409898:	cmp	w9, #0x0
  40989c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  4098a0:	csel	x20, x9, x8, ne  // ne = any
  4098a4:	cbz	x20, 4098c8 <feof@plt+0x67e8>
  4098a8:	lsl	x0, x20, #3
  4098ac:	bl	402d30 <_Znwm@plt>
  4098b0:	mov	x27, x0
  4098b4:	b	4098cc <feof@plt+0x67ec>
  4098b8:	add	x8, x8, #0x8
  4098bc:	cmp	x8, x9
  4098c0:	b.ne	409748 <feof@plt+0x6668>  // b.any
  4098c4:	b	409658 <feof@plt+0x6578>
  4098c8:	mov	x27, xzr
  4098cc:	add	x21, x27, x21, lsl #3
  4098d0:	cmp	x24, #0x1
  4098d4:	str	x19, [x21]
  4098d8:	b.lt	4098ec <feof@plt+0x680c>  // b.tstop
  4098dc:	mov	x0, x27
  4098e0:	mov	x1, x28
  4098e4:	mov	x2, x24
  4098e8:	bl	402e30 <memmove@plt>
  4098ec:	add	x24, x21, #0x8
  4098f0:	cbz	x28, 4098fc <feof@plt+0x681c>
  4098f4:	mov	x0, x28
  4098f8:	bl	402d00 <_ZdlPv@plt>
  4098fc:	add	x8, x27, x20, lsl #3
  409900:	stp	x27, x24, [x25]
  409904:	str	x8, [x25, #16]
  409908:	ldp	x21, x20, [sp, #8]
  40990c:	ldr	x5, [sp, #32]
  409910:	mov	x28, x23
  409914:	mov	x23, x22
  409918:	ldr	x22, [sp]
  40991c:	cmp	x26, x23
  409920:	b.ne	40976c <feof@plt+0x668c>  // b.any
  409924:	cmp	x27, x24
  409928:	b.ne	409934 <feof@plt+0x6854>  // b.any
  40992c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409930:	b	40997c <feof@plt+0x689c>
  409934:	sub	x8, x24, x27
  409938:	asr	x8, x8, #3
  40993c:	cmp	x8, #0x1
  409940:	csinc	x12, x8, xzr, hi  // hi = pmore
  409944:	cmp	x12, #0x1
  409948:	b.hi	4099d4 <feof@plt+0x68f4>  // b.pmore
  40994c:	mov	x10, xzr
  409950:	mov	w11, wzr
  409954:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409958:	add	w11, w11, #0x1
  40995c:	ldr	x12, [x27, x10, lsl #3]
  409960:	mov	w10, w11
  409964:	add	w11, w11, #0x1
  409968:	ldr	x12, [x12, #24]
  40996c:	cmp	x9, x12
  409970:	csel	x9, x12, x9, gt
  409974:	cmp	x8, x10
  409978:	b.hi	40995c <feof@plt+0x687c>  // b.pmore
  40997c:	ldr	x8, [x28]
  409980:	add	x8, x8, x9
  409984:	str	x8, [x28]
  409988:	ldp	x10, x24, [x25]
  40998c:	cmp	x24, x10
  409990:	b.eq	4099c4 <feof@plt+0x68e4>  // b.none
  409994:	mov	x8, xzr
  409998:	mov	w11, #0x1                   	// #1
  40999c:	ldr	x10, [x10, x8, lsl #3]
  4099a0:	mov	w8, w11
  4099a4:	add	w11, w11, #0x1
  4099a8:	ldr	x12, [x10, #24]
  4099ac:	sub	x12, x12, x9
  4099b0:	str	x12, [x10, #24]
  4099b4:	ldp	x10, x24, [x25]
  4099b8:	sub	x12, x24, x10
  4099bc:	cmp	x8, x12, asr #3
  4099c0:	b.cc	40999c <feof@plt+0x68bc>  // b.lo, b.ul, b.last
  4099c4:	cmp	x9, #0x0
  4099c8:	b.le	409eb0 <feof@plt+0x6dd0>
  4099cc:	mov	w8, #0x1                   	// #1
  4099d0:	b	40964c <feof@plt+0x656c>
  4099d4:	cmp	x8, #0x1
  4099d8:	csinc	x9, x8, xzr, hi  // hi = pmore
  4099dc:	sub	x13, x9, #0x1
  4099e0:	mov	w11, wzr
  4099e4:	mov	x10, xzr
  4099e8:	cmn	w13, #0x1
  4099ec:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4099f0:	b.eq	409958 <feof@plt+0x6878>  // b.none
  4099f4:	lsr	x13, x13, #32
  4099f8:	cbnz	x13, 409958 <feof@plt+0x6878>
  4099fc:	and	x10, x12, #0xfffffffffffffffe
  409a00:	add	x13, x27, #0x8
  409a04:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409a08:	mov	w11, w10
  409a0c:	mov	x14, x10
  409a10:	mov	x15, #0x7fffffffffffffff    	// #9223372036854775807
  409a14:	ldp	x16, x17, [x13, #-8]
  409a18:	add	x13, x13, #0x10
  409a1c:	ldr	x16, [x16, #24]
  409a20:	ldr	x17, [x17, #24]
  409a24:	cmp	x9, x16
  409a28:	csel	x9, x16, x9, gt
  409a2c:	cmp	x15, x17
  409a30:	csel	x15, x17, x15, gt
  409a34:	subs	x14, x14, #0x2
  409a38:	b.ne	409a14 <feof@plt+0x6934>  // b.any
  409a3c:	cmp	x9, x15
  409a40:	csel	x9, x9, x15, lt  // lt = tstop
  409a44:	cmp	x12, x10
  409a48:	b.ne	409958 <feof@plt+0x6878>  // b.any
  409a4c:	b	40997c <feof@plt+0x689c>
  409a50:	sub	x8, x8, #0x10
  409a54:	cmp	x8, x9
  409a58:	b.ne	409650 <feof@plt+0x6570>  // b.any
  409a5c:	b	40961c <feof@plt+0x653c>
  409a60:	sub	x8, x8, #0x8
  409a64:	cmp	x8, x9
  409a68:	b.ne	409650 <feof@plt+0x6570>  // b.any
  409a6c:	b	40961c <feof@plt+0x653c>
  409a70:	add	x8, x8, #0x8
  409a74:	cmp	x8, x9
  409a78:	b.ne	409650 <feof@plt+0x6570>  // b.any
  409a7c:	b	40961c <feof@plt+0x653c>
  409a80:	ldr	w8, [sp, #24]
  409a84:	tbz	w8, #0, 409aa0 <feof@plt+0x69c0>
  409a88:	mov	x0, x22
  409a8c:	mov	x1, x20
  409a90:	mov	x2, x21
  409a94:	bl	409ee0 <feof@plt+0x6e00>
  409a98:	mov	w0, #0x1                   	// #1
  409a9c:	b	409e6c <feof@plt+0x6d8c>
  409aa0:	ldr	x19, [x22]
  409aa4:	cbz	x19, 409e68 <feof@plt+0x6d88>
  409aa8:	mov	w15, #0x18                  	// #24
  409aac:	mov	x16, #0x7ffffffffffffff8    	// #9223372036854775800
  409ab0:	mov	x17, #0xfffffffffffffff     	// #1152921504606846975
  409ab4:	b	409ad4 <feof@plt+0x69f4>
  409ab8:	str	x22, [x9]
  409abc:	ldr	x8, [x28]
  409ac0:	ldr	x20, [sp, #16]
  409ac4:	add	x8, x8, #0x8
  409ac8:	str	x8, [x28]
  409acc:	ldr	x19, [x19, #40]
  409ad0:	cbz	x19, 409e68 <feof@plt+0x6d88>
  409ad4:	ldr	x8, [x19, #8]
  409ad8:	cmp	x8, x23
  409adc:	b.cc	409acc <feof@plt+0x69ec>  // b.lo, b.ul, b.last
  409ae0:	ldr	x9, [x19, #24]
  409ae4:	cbz	x9, 409acc <feof@plt+0x69ec>
  409ae8:	ldp	x9, x10, [x5, #32]
  409aec:	sub	x11, x10, x9
  409af0:	cmp	x11, #0x20
  409af4:	b.lt	409b4c <feof@plt+0x6a6c>  // b.tstop
  409af8:	lsr	x11, x11, #5
  409afc:	add	x9, x9, #0x10
  409b00:	add	x11, x11, #0x1
  409b04:	ldur	x12, [x9, #-16]
  409b08:	cmp	x12, x8
  409b0c:	b.eq	409ba0 <feof@plt+0x6ac0>  // b.none
  409b10:	ldur	x12, [x9, #-8]
  409b14:	cmp	x12, x8
  409b18:	b.eq	409bb0 <feof@plt+0x6ad0>  // b.none
  409b1c:	ldr	x12, [x9]
  409b20:	cmp	x12, x8
  409b24:	b.eq	409bb4 <feof@plt+0x6ad4>  // b.none
  409b28:	ldr	x12, [x9, #8]
  409b2c:	cmp	x12, x8
  409b30:	b.eq	409c78 <feof@plt+0x6b98>  // b.none
  409b34:	sub	x11, x11, #0x1
  409b38:	cmp	x11, #0x1
  409b3c:	add	x9, x9, #0x20
  409b40:	b.gt	409b04 <feof@plt+0x6a24>
  409b44:	sub	x9, x9, #0x10
  409b48:	sub	x11, x10, x9
  409b4c:	asr	x11, x11, #3
  409b50:	cmp	x11, #0x1
  409b54:	b.eq	409b88 <feof@plt+0x6aa8>  // b.none
  409b58:	cmp	x11, #0x2
  409b5c:	b.eq	409b78 <feof@plt+0x6a98>  // b.none
  409b60:	cmp	x11, #0x3
  409b64:	b.ne	409acc <feof@plt+0x69ec>  // b.any
  409b68:	ldr	x11, [x9]
  409b6c:	cmp	x11, x8
  409b70:	b.eq	409bb4 <feof@plt+0x6ad4>  // b.none
  409b74:	add	x9, x9, #0x8
  409b78:	ldr	x11, [x9]
  409b7c:	cmp	x11, x8
  409b80:	b.eq	409bb4 <feof@plt+0x6ad4>  // b.none
  409b84:	add	x9, x9, #0x8
  409b88:	ldr	x11, [x9]
  409b8c:	cmp	x11, x8
  409b90:	csel	x9, x9, x10, eq  // eq = none
  409b94:	cmp	x9, x10
  409b98:	b.ne	409bbc <feof@plt+0x6adc>  // b.any
  409b9c:	b	409acc <feof@plt+0x69ec>
  409ba0:	sub	x9, x9, #0x10
  409ba4:	cmp	x9, x10
  409ba8:	b.ne	409bbc <feof@plt+0x6adc>  // b.any
  409bac:	b	409acc <feof@plt+0x69ec>
  409bb0:	sub	x9, x9, #0x8
  409bb4:	cmp	x9, x10
  409bb8:	b.eq	409acc <feof@plt+0x69ec>  // b.none
  409bbc:	ldp	x10, x12, [x20]
  409bc0:	sub	x9, x12, x10
  409bc4:	cmp	x9, #0x20
  409bc8:	b.lt	409c24 <feof@plt+0x6b44>  // b.tstop
  409bcc:	lsr	x13, x9, #5
  409bd0:	add	x11, x10, #0x10
  409bd4:	add	x13, x13, #0x1
  409bd8:	ldur	x14, [x11, #-16]
  409bdc:	cmp	x14, x8
  409be0:	b.eq	409c90 <feof@plt+0x6bb0>  // b.none
  409be4:	ldur	x14, [x11, #-8]
  409be8:	cmp	x14, x8
  409bec:	b.eq	409c98 <feof@plt+0x6bb8>  // b.none
  409bf0:	ldr	x14, [x11]
  409bf4:	cmp	x14, x8
  409bf8:	b.eq	409ca4 <feof@plt+0x6bc4>  // b.none
  409bfc:	ldr	x14, [x11, #8]
  409c00:	cmp	x14, x8
  409c04:	b.eq	409ca0 <feof@plt+0x6bc0>  // b.none
  409c08:	sub	x13, x13, #0x1
  409c0c:	cmp	x13, #0x1
  409c10:	add	x11, x11, #0x20
  409c14:	b.gt	409bd8 <feof@plt+0x6af8>
  409c18:	sub	x11, x11, #0x10
  409c1c:	sub	x13, x12, x11
  409c20:	b	409c2c <feof@plt+0x6b4c>
  409c24:	mov	x13, x9
  409c28:	mov	x11, x10
  409c2c:	asr	x13, x13, #3
  409c30:	cmp	x13, #0x1
  409c34:	b.eq	409c68 <feof@plt+0x6b88>  // b.none
  409c38:	cmp	x13, #0x2
  409c3c:	b.eq	409c58 <feof@plt+0x6b78>  // b.none
  409c40:	cmp	x13, #0x3
  409c44:	b.ne	409c88 <feof@plt+0x6ba8>  // b.any
  409c48:	ldr	x13, [x11]
  409c4c:	cmp	x13, x8
  409c50:	b.eq	409ca4 <feof@plt+0x6bc4>  // b.none
  409c54:	add	x11, x11, #0x8
  409c58:	ldr	x13, [x11]
  409c5c:	cmp	x13, x8
  409c60:	b.eq	409ca4 <feof@plt+0x6bc4>  // b.none
  409c64:	add	x11, x11, #0x8
  409c68:	ldr	x13, [x11]
  409c6c:	cmp	x13, x8
  409c70:	csel	x11, x11, x12, eq  // eq = none
  409c74:	b	409ca4 <feof@plt+0x6bc4>
  409c78:	add	x9, x9, #0x8
  409c7c:	cmp	x9, x10
  409c80:	b.ne	409bbc <feof@plt+0x6adc>  // b.any
  409c84:	b	409acc <feof@plt+0x69ec>
  409c88:	mov	x11, x12
  409c8c:	b	409ca4 <feof@plt+0x6bc4>
  409c90:	sub	x11, x11, #0x10
  409c94:	b	409ca4 <feof@plt+0x6bc4>
  409c98:	sub	x11, x11, #0x8
  409c9c:	b	409ca4 <feof@plt+0x6bc4>
  409ca0:	add	x11, x11, #0x8
  409ca4:	sub	x8, x11, x10
  409ca8:	asr	x8, x8, #3
  409cac:	cmp	x8, x9, asr #3
  409cb0:	b.cs	409e8c <feof@plt+0x6dac>  // b.hs, b.nlast
  409cb4:	ldr	x10, [x21]
  409cb8:	madd	x27, x8, x15, x10
  409cbc:	mov	x28, x27
  409cc0:	ldr	x24, [x27]
  409cc4:	ldr	x9, [x28, #8]!
  409cc8:	mov	x11, x24
  409ccc:	sub	x25, x9, x24
  409cd0:	cmp	x25, #0x20
  409cd4:	mov	x12, x25
  409cd8:	b.lt	409d30 <feof@plt+0x6c50>  // b.tstop
  409cdc:	lsr	x12, x25, #5
  409ce0:	add	x11, x24, #0x10
  409ce4:	add	x12, x12, #0x1
  409ce8:	ldur	x13, [x11, #-16]
  409cec:	cmp	x13, x22
  409cf0:	b.eq	409d84 <feof@plt+0x6ca4>  // b.none
  409cf4:	ldur	x13, [x11, #-8]
  409cf8:	cmp	x13, x22
  409cfc:	b.eq	409d94 <feof@plt+0x6cb4>  // b.none
  409d00:	ldr	x13, [x11]
  409d04:	cmp	x13, x22
  409d08:	b.eq	409d98 <feof@plt+0x6cb8>  // b.none
  409d0c:	ldr	x13, [x11, #8]
  409d10:	cmp	x13, x22
  409d14:	b.eq	409dfc <feof@plt+0x6d1c>  // b.none
  409d18:	sub	x12, x12, #0x1
  409d1c:	cmp	x12, #0x1
  409d20:	add	x11, x11, #0x20
  409d24:	b.gt	409ce8 <feof@plt+0x6c08>
  409d28:	sub	x11, x11, #0x10
  409d2c:	sub	x12, x9, x11
  409d30:	asr	x12, x12, #3
  409d34:	cmp	x12, #0x1
  409d38:	b.eq	409d6c <feof@plt+0x6c8c>  // b.none
  409d3c:	cmp	x12, #0x2
  409d40:	b.eq	409d5c <feof@plt+0x6c7c>  // b.none
  409d44:	cmp	x12, #0x3
  409d48:	b.ne	409da0 <feof@plt+0x6cc0>  // b.any
  409d4c:	ldr	x12, [x11]
  409d50:	cmp	x12, x22
  409d54:	b.eq	409d98 <feof@plt+0x6cb8>  // b.none
  409d58:	add	x11, x11, #0x8
  409d5c:	ldr	x12, [x11]
  409d60:	cmp	x12, x22
  409d64:	b.eq	409d98 <feof@plt+0x6cb8>  // b.none
  409d68:	add	x11, x11, #0x8
  409d6c:	ldr	x12, [x11]
  409d70:	cmp	x12, x22
  409d74:	csel	x11, x11, x9, eq  // eq = none
  409d78:	cmp	x11, x9
  409d7c:	b.ne	409acc <feof@plt+0x69ec>  // b.any
  409d80:	b	409da0 <feof@plt+0x6cc0>
  409d84:	sub	x11, x11, #0x10
  409d88:	cmp	x11, x9
  409d8c:	b.ne	409acc <feof@plt+0x69ec>  // b.any
  409d90:	b	409da0 <feof@plt+0x6cc0>
  409d94:	sub	x11, x11, #0x8
  409d98:	cmp	x11, x9
  409d9c:	b.ne	409acc <feof@plt+0x69ec>  // b.any
  409da0:	madd	x20, x8, x15, x10
  409da4:	ldr	x8, [x20, #16]!
  409da8:	cmp	x8, x9
  409dac:	b.ne	409ab8 <feof@plt+0x69d8>  // b.any
  409db0:	cmp	x25, x16
  409db4:	b.eq	409ea4 <feof@plt+0x6dc4>  // b.none
  409db8:	asr	x21, x25, #3
  409dbc:	cmp	x25, #0x0
  409dc0:	csinc	x8, x21, xzr, ne  // ne = any
  409dc4:	adds	x8, x8, x21
  409dc8:	lsr	x10, x8, #60
  409dcc:	cset	w9, cs  // cs = hs, nlast
  409dd0:	cmp	x10, #0x0
  409dd4:	cset	w10, ne  // ne = any
  409dd8:	orr	w9, w9, w10
  409ddc:	cmp	w9, #0x0
  409de0:	csel	x8, x17, x8, ne  // ne = any
  409de4:	str	x8, [sp, #24]
  409de8:	cbz	x8, 409e0c <feof@plt+0x6d2c>
  409dec:	lsl	x0, x8, #3
  409df0:	bl	402d30 <_Znwm@plt>
  409df4:	mov	x26, x0
  409df8:	b	409e10 <feof@plt+0x6d30>
  409dfc:	add	x11, x11, #0x8
  409e00:	cmp	x11, x9
  409e04:	b.ne	409acc <feof@plt+0x69ec>  // b.any
  409e08:	b	409da0 <feof@plt+0x6cc0>
  409e0c:	mov	x26, xzr
  409e10:	add	x21, x26, x21, lsl #3
  409e14:	cmp	x25, #0x1
  409e18:	str	x22, [x21]
  409e1c:	b.lt	409e30 <feof@plt+0x6d50>  // b.tstop
  409e20:	mov	x0, x26
  409e24:	mov	x1, x24
  409e28:	mov	x2, x25
  409e2c:	bl	402e30 <memmove@plt>
  409e30:	add	x21, x21, #0x8
  409e34:	cbz	x24, 409e40 <feof@plt+0x6d60>
  409e38:	mov	x0, x24
  409e3c:	bl	402d00 <_ZdlPv@plt>
  409e40:	str	x26, [x27]
  409e44:	str	x21, [x28]
  409e48:	ldp	x8, x5, [sp, #24]
  409e4c:	mov	w15, #0x18                  	// #24
  409e50:	mov	x16, #0x7ffffffffffffff8    	// #9223372036854775800
  409e54:	mov	x17, #0xfffffffffffffff     	// #1152921504606846975
  409e58:	add	x8, x26, x8, lsl #3
  409e5c:	str	x8, [x20]
  409e60:	ldp	x21, x20, [sp, #8]
  409e64:	b	409acc <feof@plt+0x69ec>
  409e68:	mov	w0, wzr
  409e6c:	ldp	x20, x19, [sp, #144]
  409e70:	ldp	x22, x21, [sp, #128]
  409e74:	ldp	x24, x23, [sp, #112]
  409e78:	ldp	x26, x25, [sp, #96]
  409e7c:	ldp	x28, x27, [sp, #80]
  409e80:	ldp	x29, x30, [sp, #64]
  409e84:	add	sp, sp, #0xa0
  409e88:	ret
  409e8c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409e90:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  409e94:	add	x0, x0, #0x825
  409e98:	add	x2, x2, #0x87c
  409e9c:	mov	w1, #0x315                 	// #789
  409ea0:	bl	40f560 <feof@plt+0xc480>
  409ea4:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409ea8:	add	x0, x0, #0x4b5
  409eac:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  409eb0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409eb4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  409eb8:	add	x0, x0, #0x825
  409ebc:	add	x2, x2, #0x884
  409ec0:	mov	w1, #0x2bb                 	// #699
  409ec4:	bl	40f560 <feof@plt+0xc480>
  409ec8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  409ecc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  409ed0:	add	x0, x0, #0x825
  409ed4:	add	x2, x2, #0x87c
  409ed8:	mov	w1, #0x2ed                 	// #749
  409edc:	bl	40f560 <feof@plt+0xc480>
  409ee0:	stp	x29, x30, [sp, #-80]!
  409ee4:	str	x25, [sp, #16]
  409ee8:	stp	x24, x23, [sp, #32]
  409eec:	stp	x22, x21, [sp, #48]
  409ef0:	stp	x20, x19, [sp, #64]
  409ef4:	mov	x29, sp
  409ef8:	ldp	x10, x9, [x1]
  409efc:	mov	x19, x2
  409f00:	mov	x20, x1
  409f04:	mov	x8, x0
  409f08:	sub	x11, x9, x10
  409f0c:	cmp	x11, #0x20
  409f10:	b.lt	409f6c <feof@plt+0x6e8c>  // b.tstop
  409f14:	lsr	x11, x11, #5
  409f18:	add	x0, x10, #0x10
  409f1c:	add	x11, x11, #0x1
  409f20:	ldur	x12, [x0, #-16]
  409f24:	cmp	x12, x8
  409f28:	b.eq	409fc4 <feof@plt+0x6ee4>  // b.none
  409f2c:	ldur	x12, [x0, #-8]
  409f30:	cmp	x12, x8
  409f34:	b.eq	409fd4 <feof@plt+0x6ef4>  // b.none
  409f38:	ldr	x12, [x0]
  409f3c:	cmp	x12, x8
  409f40:	b.eq	409fd8 <feof@plt+0x6ef8>  // b.none
  409f44:	ldr	x12, [x0, #8]
  409f48:	cmp	x12, x8
  409f4c:	b.eq	40a150 <feof@plt+0x7070>  // b.none
  409f50:	sub	x11, x11, #0x1
  409f54:	cmp	x11, #0x1
  409f58:	add	x0, x0, #0x20
  409f5c:	b.gt	409f20 <feof@plt+0x6e40>
  409f60:	sub	x0, x0, #0x10
  409f64:	sub	x11, x9, x0
  409f68:	b	409f70 <feof@plt+0x6e90>
  409f6c:	mov	x0, x10
  409f70:	asr	x11, x11, #3
  409f74:	cmp	x11, #0x1
  409f78:	b.eq	409fac <feof@plt+0x6ecc>  // b.none
  409f7c:	cmp	x11, #0x2
  409f80:	b.eq	409f9c <feof@plt+0x6ebc>  // b.none
  409f84:	cmp	x11, #0x3
  409f88:	b.ne	40a15c <feof@plt+0x707c>  // b.any
  409f8c:	ldr	x11, [x0]
  409f90:	cmp	x11, x8
  409f94:	b.eq	409fd8 <feof@plt+0x6ef8>  // b.none
  409f98:	add	x0, x0, #0x8
  409f9c:	ldr	x11, [x0]
  409fa0:	cmp	x11, x8
  409fa4:	b.eq	409fd8 <feof@plt+0x6ef8>  // b.none
  409fa8:	add	x0, x0, #0x8
  409fac:	ldr	x11, [x0]
  409fb0:	cmp	x11, x8
  409fb4:	csel	x0, x0, x9, eq  // eq = none
  409fb8:	cmp	x0, x9
  409fbc:	b.ne	409fe0 <feof@plt+0x6f00>  // b.any
  409fc0:	b	40a15c <feof@plt+0x707c>
  409fc4:	sub	x0, x0, #0x10
  409fc8:	cmp	x0, x9
  409fcc:	b.ne	409fe0 <feof@plt+0x6f00>  // b.any
  409fd0:	b	40a15c <feof@plt+0x707c>
  409fd4:	sub	x0, x0, #0x8
  409fd8:	cmp	x0, x9
  409fdc:	b.eq	40a15c <feof@plt+0x707c>  // b.none
  409fe0:	add	x1, x0, #0x8
  409fe4:	cmp	x1, x9
  409fe8:	sub	x21, x0, x10
  409fec:	b.eq	40a000 <feof@plt+0x6f20>  // b.none
  409ff0:	subs	x2, x9, x1
  409ff4:	b.eq	40a000 <feof@plt+0x6f20>  // b.none
  409ff8:	bl	402e30 <memmove@plt>
  409ffc:	ldr	x9, [x20, #8]
  40a000:	sub	x8, x9, #0x8
  40a004:	str	x8, [x20, #8]
  40a008:	ldr	x8, [x19]
  40a00c:	ubfx	x24, x21, #3, #32
  40a010:	mov	w9, #0x18                  	// #24
  40a014:	madd	x21, x24, x9, x8
  40a018:	mov	x22, x21
  40a01c:	ldr	x8, [x22, #8]!
  40a020:	ldr	x9, [x21]
  40a024:	subs	x0, x8, x9
  40a028:	b.eq	40a064 <feof@plt+0x6f84>  // b.none
  40a02c:	asr	x8, x0, #3
  40a030:	lsr	x8, x8, #60
  40a034:	cbnz	x8, 40a174 <feof@plt+0x7094>
  40a038:	bl	402d30 <_Znwm@plt>
  40a03c:	ldr	x1, [x21]
  40a040:	ldr	x8, [x22]
  40a044:	mov	x21, x0
  40a048:	subs	x2, x8, x1
  40a04c:	b.eq	40a070 <feof@plt+0x6f90>  // b.none
  40a050:	mov	x0, x21
  40a054:	asr	x22, x2, #3
  40a058:	bl	402e30 <memmove@plt>
  40a05c:	mov	w23, wzr
  40a060:	b	40a078 <feof@plt+0x6f98>
  40a064:	mov	x22, xzr
  40a068:	mov	x21, xzr
  40a06c:	b	40a074 <feof@plt+0x6f94>
  40a070:	mov	x22, xzr
  40a074:	mov	w23, #0x1                   	// #1
  40a078:	ldp	x8, x9, [x19]
  40a07c:	mov	w10, #0x18                  	// #24
  40a080:	madd	x24, x24, x10, x8
  40a084:	add	x8, x24, #0x18
  40a088:	cmp	x8, x9
  40a08c:	b.eq	40a0f8 <feof@plt+0x7018>  // b.none
  40a090:	sub	x8, x9, x8
  40a094:	cmp	x8, #0x1
  40a098:	b.lt	40a0f4 <feof@plt+0x7014>  // b.tstop
  40a09c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40a0a0:	movk	x9, #0xaaab
  40a0a4:	umulh	x8, x8, x9
  40a0a8:	lsr	x8, x8, #4
  40a0ac:	add	x25, x8, #0x1
  40a0b0:	b	40a0c4 <feof@plt+0x6fe4>
  40a0b4:	sub	x25, x25, #0x1
  40a0b8:	cmp	x25, #0x1
  40a0bc:	add	x24, x24, #0x18
  40a0c0:	b.le	40a0ec <feof@plt+0x700c>
  40a0c4:	ldr	x0, [x24]
  40a0c8:	ldp	x8, x9, [x24, #24]
  40a0cc:	ldr	x10, [x24, #40]
  40a0d0:	stp	xzr, xzr, [x24, #24]
  40a0d4:	str	xzr, [x24, #40]
  40a0d8:	stp	x8, x9, [x24]
  40a0dc:	str	x10, [x24, #16]
  40a0e0:	cbz	x0, 40a0b4 <feof@plt+0x6fd4>
  40a0e4:	bl	402d00 <_ZdlPv@plt>
  40a0e8:	b	40a0b4 <feof@plt+0x6fd4>
  40a0ec:	ldr	x8, [x19, #8]
  40a0f0:	b	40a0f8 <feof@plt+0x7018>
  40a0f4:	mov	x8, x9
  40a0f8:	sub	x9, x8, #0x18
  40a0fc:	str	x9, [x19, #8]
  40a100:	ldur	x0, [x8, #-24]
  40a104:	cbz	x0, 40a10c <feof@plt+0x702c>
  40a108:	bl	402d00 <_ZdlPv@plt>
  40a10c:	tbnz	w23, #0, 40a130 <feof@plt+0x7050>
  40a110:	lsl	x22, x22, #3
  40a114:	mov	x23, x21
  40a118:	ldr	x0, [x23], #8
  40a11c:	mov	x1, x20
  40a120:	mov	x2, x19
  40a124:	bl	409ee0 <feof@plt+0x6e00>
  40a128:	subs	x22, x22, #0x8
  40a12c:	b.ne	40a118 <feof@plt+0x7038>  // b.any
  40a130:	cbz	x21, 40a15c <feof@plt+0x707c>
  40a134:	mov	x0, x21
  40a138:	ldp	x20, x19, [sp, #64]
  40a13c:	ldp	x22, x21, [sp, #48]
  40a140:	ldp	x24, x23, [sp, #32]
  40a144:	ldr	x25, [sp, #16]
  40a148:	ldp	x29, x30, [sp], #80
  40a14c:	b	402d00 <_ZdlPv@plt>
  40a150:	add	x0, x0, #0x8
  40a154:	cmp	x0, x9
  40a158:	b.ne	409fe0 <feof@plt+0x6f00>  // b.any
  40a15c:	ldp	x20, x19, [sp, #64]
  40a160:	ldp	x22, x21, [sp, #48]
  40a164:	ldp	x24, x23, [sp, #32]
  40a168:	ldr	x25, [sp, #16]
  40a16c:	ldp	x29, x30, [sp], #80
  40a170:	ret
  40a174:	bl	402aa0 <_ZSt17__throw_bad_allocv@plt>
  40a178:	stp	x29, x30, [sp, #-32]!
  40a17c:	str	x19, [sp, #16]
  40a180:	mov	x29, sp
  40a184:	mov	x8, x0
  40a188:	tbnz	w2, #31, 40a1e8 <feof@plt+0x7108>
  40a18c:	fmov	s0, wzr
  40a190:	fmov	s1, wzr
  40a194:	cbz	x1, 40a1b0 <feof@plt+0x70d0>
  40a198:	mov	w9, #0x42c80000            	// #1120403456
  40a19c:	scvtf	s1, x8
  40a1a0:	fmov	s2, w9
  40a1a4:	fmul	s1, s1, s2
  40a1a8:	scvtf	s2, x1
  40a1ac:	fdiv	s1, s1, s2
  40a1b0:	fmov	s2, #5.000000000000000000e-01
  40a1b4:	fcmp	s1, s2
  40a1b8:	fccmp	s1, s0, #0x4, mi  // mi = first
  40a1bc:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a1c0:	fcvt	d3, s1
  40a1c4:	ccmp	w2, #0x0, #0x0, gt
  40a1c8:	fmov	d0, #1.000000000000000000e+00
  40a1cc:	add	x19, x19, #0x730
  40a1d0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a1d4:	fcsel	d0, d0, d3, eq  // eq = none
  40a1d8:	add	x1, x1, #0x900
  40a1dc:	mov	x0, x19
  40a1e0:	bl	402c30 <sprintf@plt>
  40a1e4:	b	40a280 <feof@plt+0x71a0>
  40a1e8:	cmp	x8, #0x3e8
  40a1ec:	b.lt	40a264 <feof@plt+0x7184>  // b.tstop
  40a1f0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a1f4:	ldrb	w9, [x9, #1712]
  40a1f8:	cbz	w9, 40a264 <feof@plt+0x7184>
  40a1fc:	mov	x13, xzr
  40a200:	mov	w11, #0x1                   	// #1
  40a204:	mov	w9, #0x3e8                 	// #1000
  40a208:	mov	x10, x13
  40a20c:	cmp	w10, #0x8
  40a210:	mov	x12, x11
  40a214:	b.eq	40a22c <feof@plt+0x714c>  // b.none
  40a218:	add	x13, x8, x12, lsr #1
  40a21c:	mul	x11, x12, x9
  40a220:	cmp	x13, x11
  40a224:	add	x13, x10, #0x1
  40a228:	b.ge	40a208 <feof@plt+0x7128>  // b.tcont
  40a22c:	scvtf	s0, x8
  40a230:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a234:	add	x8, x8, #0x907
  40a238:	ldrb	w2, [x8, x10]
  40a23c:	scvtf	s1, x12
  40a240:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a244:	fdiv	s0, s0, s1
  40a248:	add	x19, x19, #0x744
  40a24c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a250:	fcvt	d0, s0
  40a254:	add	x1, x1, #0x915
  40a258:	mov	x0, x19
  40a25c:	bl	402c30 <sprintf@plt>
  40a260:	b	40a280 <feof@plt+0x71a0>
  40a264:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a268:	add	x19, x19, #0x744
  40a26c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a270:	add	x1, x1, #0x911
  40a274:	mov	x0, x19
  40a278:	mov	x2, x8
  40a27c:	bl	402c30 <sprintf@plt>
  40a280:	mov	x0, x19
  40a284:	ldr	x19, [sp, #16]
  40a288:	ldp	x29, x30, [sp], #32
  40a28c:	ret
  40a290:	sub	sp, sp, #0x70
  40a294:	stp	x29, x30, [sp, #16]
  40a298:	stp	x28, x27, [sp, #32]
  40a29c:	stp	x26, x25, [sp, #48]
  40a2a0:	stp	x24, x23, [sp, #64]
  40a2a4:	stp	x22, x21, [sp, #80]
  40a2a8:	stp	x20, x19, [sp, #96]
  40a2ac:	add	x29, sp, #0x10
  40a2b0:	ldrb	w8, [x1, #56]
  40a2b4:	tbnz	w8, #0, 40a2d8 <feof@plt+0x71f8>
  40a2b8:	ldp	x20, x19, [sp, #96]
  40a2bc:	ldp	x22, x21, [sp, #80]
  40a2c0:	ldp	x24, x23, [sp, #64]
  40a2c4:	ldp	x26, x25, [sp, #48]
  40a2c8:	ldp	x28, x27, [sp, #32]
  40a2cc:	ldp	x29, x30, [sp, #16]
  40a2d0:	add	sp, sp, #0x70
  40a2d4:	ret
  40a2d8:	mov	x20, x0
  40a2dc:	mov	w0, #0x38                  	// #56
  40a2e0:	mov	x22, x3
  40a2e4:	mov	w23, w2
  40a2e8:	mov	x19, x1
  40a2ec:	bl	402d30 <_Znwm@plt>
  40a2f0:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a2f4:	movi	v0.2d, #0x0
  40a2f8:	add	x8, x8, #0xe28
  40a2fc:	mov	x21, x0
  40a300:	stp	q0, q0, [x0]
  40a304:	str	q0, [x0, #32]
  40a308:	str	x8, [x0]
  40a30c:	stp	xzr, xzr, [x0, #24]
  40a310:	stp	xzr, xzr, [x0, #40]
  40a314:	strb	wzr, [x0, #52]
  40a318:	mov	w0, #0xd                   	// #13
  40a31c:	bl	40eacc <feof@plt+0xb9ec>
  40a320:	mov	w8, w0
  40a324:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40a328:	lsl	x8, x8, #4
  40a32c:	add	x9, x9, #0xf68
  40a330:	ldr	w25, [x9, x8]
  40a334:	mov	w24, w0
  40a338:	mov	w1, #0x10                  	// #16
  40a33c:	mov	x0, x25
  40a340:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40a344:	cbz	x0, 40a66c <feof@plt+0x758c>
  40a348:	str	x20, [sp, #8]
  40a34c:	cbz	w25, 40a398 <feof@plt+0x72b8>
  40a350:	cmp	w25, #0x1
  40a354:	b.ne	40a360 <feof@plt+0x7280>  // b.any
  40a358:	mov	x8, xzr
  40a35c:	b	40a384 <feof@plt+0x72a4>
  40a360:	and	x8, x25, #0xfffffffe
  40a364:	add	x9, x0, #0x10
  40a368:	mov	x10, x8
  40a36c:	stur	xzr, [x9, #-16]
  40a370:	str	xzr, [x9], #32
  40a374:	subs	x10, x10, #0x2
  40a378:	b.ne	40a36c <feof@plt+0x728c>  // b.any
  40a37c:	cmp	x8, x25
  40a380:	b.eq	40a398 <feof@plt+0x72b8>  // b.none
  40a384:	sub	x9, x25, x8
  40a388:	add	x8, x0, x8, lsl #4
  40a38c:	subs	x9, x9, #0x1
  40a390:	str	xzr, [x8], #16
  40a394:	b.ne	40a38c <feof@plt+0x72ac>  // b.any
  40a398:	stp	x0, x25, [x21, #8]
  40a39c:	mov	w0, #0x10                  	// #16
  40a3a0:	str	w24, [x21, #48]
  40a3a4:	bl	402d30 <_Znwm@plt>
  40a3a8:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a3ac:	ucvtf	d0, w23
  40a3b0:	add	x8, x8, #0xeb8
  40a3b4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a3b8:	mov	x2, x0
  40a3bc:	str	x8, [x0]
  40a3c0:	str	d0, [x0, #8]
  40a3c4:	add	x1, x1, #0x981
  40a3c8:	mov	x0, x21
  40a3cc:	bl	40dedc <feof@plt+0xadfc>
  40a3d0:	cbz	x22, 40a3fc <feof@plt+0x731c>
  40a3d4:	mov	w0, #0x10                  	// #16
  40a3d8:	bl	402d30 <_Znwm@plt>
  40a3dc:	mov	x1, x22
  40a3e0:	mov	x23, x0
  40a3e4:	bl	40e38c <feof@plt+0xb2ac>
  40a3e8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a3ec:	add	x1, x1, #0x98d
  40a3f0:	mov	x0, x21
  40a3f4:	mov	x2, x23
  40a3f8:	bl	40dedc <feof@plt+0xadfc>
  40a3fc:	mov	w0, #0x10                  	// #16
  40a400:	bl	402d30 <_Znwm@plt>
  40a404:	ldr	d0, [x19]
  40a408:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a40c:	add	x8, x8, #0xeb8
  40a410:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a414:	scvtf	d0, d0
  40a418:	mov	x2, x0
  40a41c:	str	x8, [x0]
  40a420:	str	d0, [x0, #8]
  40a424:	add	x1, x1, #0x97b
  40a428:	mov	x0, x21
  40a42c:	bl	40dedc <feof@plt+0xadfc>
  40a430:	mov	w0, #0x10                  	// #16
  40a434:	bl	402d30 <_Znwm@plt>
  40a438:	ldrb	w8, [x19, #56]
  40a43c:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  40a440:	add	x23, x23, #0xee8
  40a444:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a448:	tst	w8, #0x4
  40a44c:	mov	w8, #0x4                   	// #4
  40a450:	cinc	w8, w8, eq  // eq = none
  40a454:	mov	x2, x0
  40a458:	str	x23, [x0]
  40a45c:	str	w8, [x0, #8]
  40a460:	add	x1, x1, #0x99b
  40a464:	mov	x0, x21
  40a468:	bl	40dedc <feof@plt+0xadfc>
  40a46c:	mov	w0, #0x10                  	// #16
  40a470:	bl	402d30 <_Znwm@plt>
  40a474:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a478:	mov	x22, x0
  40a47c:	add	x8, x8, #0xe58
  40a480:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a484:	stp	x8, xzr, [x0]
  40a488:	add	x1, x1, #0x368
  40a48c:	mov	x0, x21
  40a490:	mov	x2, x22
  40a494:	bl	40dedc <feof@plt+0xadfc>
  40a498:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a49c:	ldrb	w8, [x8, #1696]
  40a4a0:	cmp	w8, #0x1
  40a4a4:	b.ne	40a644 <feof@plt+0x7564>  // b.any
  40a4a8:	ldp	x24, x8, [x19, #8]
  40a4ac:	cmp	x24, x8
  40a4b0:	b.eq	40a644 <feof@plt+0x7564>  // b.none
  40a4b4:	mov	w25, #0xa0                  	// #160
  40a4b8:	mov	w20, #0x4                   	// #4
  40a4bc:	b	40a584 <feof@plt+0x74a4>
  40a4c0:	stp	x0, x28, [x26, #8]
  40a4c4:	mov	w0, #0x10                  	// #16
  40a4c8:	str	w27, [x26, #48]
  40a4cc:	bl	402d30 <_Znwm@plt>
  40a4d0:	ldr	x8, [x24]
  40a4d4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a4d8:	mov	x2, x0
  40a4dc:	add	x1, x1, #0x97b
  40a4e0:	ldr	d0, [x8, #16]
  40a4e4:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a4e8:	add	x8, x8, #0xeb8
  40a4ec:	str	x8, [x0]
  40a4f0:	scvtf	d0, d0
  40a4f4:	str	d0, [x0, #8]
  40a4f8:	mov	x0, x26
  40a4fc:	bl	40dedc <feof@plt+0xadfc>
  40a500:	mov	w0, #0x10                  	// #16
  40a504:	bl	402d30 <_Znwm@plt>
  40a508:	ldr	x8, [x24]
  40a50c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a510:	mov	x2, x0
  40a514:	add	x1, x1, #0x9ac
  40a518:	ldrh	w8, [x8, #32]
  40a51c:	str	x23, [x0]
  40a520:	tst	w8, #0x10
  40a524:	cinc	w8, w20, eq  // eq = none
  40a528:	str	w8, [x0, #8]
  40a52c:	mov	x0, x26
  40a530:	bl	40dedc <feof@plt+0xadfc>
  40a534:	mov	w0, #0x10                  	// #16
  40a538:	bl	402d30 <_Znwm@plt>
  40a53c:	ldr	x8, [x24]
  40a540:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  40a544:	mov	x2, x0
  40a548:	add	x1, x1, #0x3c5
  40a54c:	ldrh	w8, [x8, #32]
  40a550:	str	x23, [x0]
  40a554:	tst	w8, #0x8
  40a558:	cinc	w8, w20, eq  // eq = none
  40a55c:	str	w8, [x0, #8]
  40a560:	mov	x0, x26
  40a564:	bl	40dedc <feof@plt+0xadfc>
  40a568:	mov	x0, x22
  40a56c:	mov	x1, x26
  40a570:	bl	40e178 <feof@plt+0xb098>
  40a574:	ldr	x8, [x19, #16]
  40a578:	add	x24, x24, #0x8
  40a57c:	cmp	x24, x8
  40a580:	b.eq	40a644 <feof@plt+0x7564>  // b.none
  40a584:	ldr	x9, [x24]
  40a588:	ldrb	w9, [x9, #32]
  40a58c:	tst	w9, w25
  40a590:	b.ne	40a578 <feof@plt+0x7498>  // b.any
  40a594:	mov	w0, #0x38                  	// #56
  40a598:	bl	402d30 <_Znwm@plt>
  40a59c:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a5a0:	movi	v0.2d, #0x0
  40a5a4:	add	x8, x8, #0xe28
  40a5a8:	mov	x26, x0
  40a5ac:	stp	q0, q0, [x0]
  40a5b0:	str	q0, [x0, #32]
  40a5b4:	stp	xzr, xzr, [x0, #40]
  40a5b8:	str	x8, [x0]
  40a5bc:	stp	xzr, xzr, [x0, #24]
  40a5c0:	strb	wzr, [x0, #52]
  40a5c4:	mov	w0, #0xd                   	// #13
  40a5c8:	bl	40eacc <feof@plt+0xb9ec>
  40a5cc:	mov	w8, w0
  40a5d0:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40a5d4:	lsl	x8, x8, #4
  40a5d8:	add	x9, x9, #0xf68
  40a5dc:	ldr	w28, [x9, x8]
  40a5e0:	mov	w27, w0
  40a5e4:	mov	w1, #0x10                  	// #16
  40a5e8:	mov	x0, x28
  40a5ec:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40a5f0:	cbz	x0, 40a66c <feof@plt+0x758c>
  40a5f4:	cbz	w28, 40a4c0 <feof@plt+0x73e0>
  40a5f8:	cmp	w28, #0x1
  40a5fc:	b.ne	40a608 <feof@plt+0x7528>  // b.any
  40a600:	mov	x8, xzr
  40a604:	b	40a62c <feof@plt+0x754c>
  40a608:	and	x8, x28, #0xfffffffe
  40a60c:	add	x9, x0, #0x10
  40a610:	mov	x10, x8
  40a614:	stur	xzr, [x9, #-16]
  40a618:	str	xzr, [x9], #32
  40a61c:	subs	x10, x10, #0x2
  40a620:	b.ne	40a614 <feof@plt+0x7534>  // b.any
  40a624:	cmp	x8, x28
  40a628:	b.eq	40a4c0 <feof@plt+0x73e0>  // b.none
  40a62c:	sub	x9, x28, x8
  40a630:	add	x8, x0, x8, lsl #4
  40a634:	subs	x9, x9, #0x1
  40a638:	str	xzr, [x8], #16
  40a63c:	b.ne	40a634 <feof@plt+0x7554>  // b.any
  40a640:	b	40a4c0 <feof@plt+0x73e0>
  40a644:	ldr	x0, [sp, #8]
  40a648:	mov	x1, x21
  40a64c:	ldp	x20, x19, [sp, #96]
  40a650:	ldp	x22, x21, [sp, #80]
  40a654:	ldp	x24, x23, [sp, #64]
  40a658:	ldp	x26, x25, [sp, #48]
  40a65c:	ldp	x28, x27, [sp, #32]
  40a660:	ldp	x29, x30, [sp, #16]
  40a664:	add	sp, sp, #0x70
  40a668:	b	40e178 <feof@plt+0xb098>
  40a66c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40a670:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40a674:	add	x0, x0, #0x6f1
  40a678:	add	x2, x2, #0x708
  40a67c:	mov	w1, #0x2b5                 	// #693
  40a680:	bl	40f560 <feof@plt+0xc480>
  40a684:	str	d10, [sp, #-80]!
  40a688:	stp	d9, d8, [sp, #16]
  40a68c:	stp	x29, x30, [sp, #32]
  40a690:	stp	x22, x21, [sp, #48]
  40a694:	stp	x20, x19, [sp, #64]
  40a698:	mov	x29, sp
  40a69c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a6a0:	ldrb	w8, [x8, #1696]
  40a6a4:	cmp	w8, #0x1
  40a6a8:	b.ne	40a720 <feof@plt+0x7640>  // b.any
  40a6ac:	ldr	x9, [x1, #32]
  40a6b0:	mov	x20, x1
  40a6b4:	mov	x19, x0
  40a6b8:	ldr	x22, [x9, #144]
  40a6bc:	ldr	x8, [x9, #112]
  40a6c0:	ldr	x21, [x9, #40]
  40a6c4:	cbnz	x8, 40a70c <feof@plt+0x762c>
  40a6c8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a6cc:	ldrb	w8, [x8, #1724]
  40a6d0:	cmp	w8, #0x1
  40a6d4:	b.ne	40a738 <feof@plt+0x7658>  // b.any
  40a6d8:	ldr	x2, [x20, #8]
  40a6dc:	cbnz	x2, 40a73c <feof@plt+0x765c>
  40a6e0:	ldr	x0, [x20]
  40a6e4:	mov	w1, #0x1                   	// #1
  40a6e8:	bl	44a420 <feof@plt+0x47340>
  40a6ec:	mov	x2, x0
  40a6f0:	str	x0, [x20, #8]
  40a6f4:	cbnz	x0, 40a73c <feof@plt+0x765c>
  40a6f8:	ldr	x2, [x20]
  40a6fc:	str	x2, [x20, #8]
  40a700:	b	40a73c <feof@plt+0x765c>
  40a704:	ldr	x8, [x8, #48]
  40a708:	cbz	x8, 40a6c8 <feof@plt+0x75e8>
  40a70c:	ldrb	w9, [x8, #32]
  40a710:	tbz	w9, #2, 40a704 <feof@plt+0x7624>
  40a714:	ldr	x9, [x8, #16]
  40a718:	sub	x22, x22, x9
  40a71c:	b	40a704 <feof@plt+0x7624>
  40a720:	ldp	x20, x19, [sp, #64]
  40a724:	ldp	x22, x21, [sp, #48]
  40a728:	ldp	x29, x30, [sp, #32]
  40a72c:	ldp	d9, d8, [sp, #16]
  40a730:	ldr	d10, [sp], #80
  40a734:	ret
  40a738:	ldr	x2, [x20]
  40a73c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a740:	add	x1, x1, #0xbc5
  40a744:	mov	x0, x19
  40a748:	bl	402a70 <fprintf@plt>
  40a74c:	cmp	x21, #0x3e8
  40a750:	scvtf	s8, x21
  40a754:	b.lt	40a7c4 <feof@plt+0x76e4>  // b.tstop
  40a758:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a75c:	ldrb	w8, [x8, #1712]
  40a760:	cbz	w8, 40a7c4 <feof@plt+0x76e4>
  40a764:	mov	x12, xzr
  40a768:	mov	w10, #0x1                   	// #1
  40a76c:	mov	w8, #0x3e8                 	// #1000
  40a770:	mov	x9, x12
  40a774:	cmp	w9, #0x8
  40a778:	mov	x11, x10
  40a77c:	b.eq	40a794 <feof@plt+0x76b4>  // b.none
  40a780:	add	x12, x21, x11, lsr #1
  40a784:	mul	x10, x11, x8
  40a788:	cmp	x12, x10
  40a78c:	add	x12, x9, #0x1
  40a790:	b.ge	40a770 <feof@plt+0x7690>  // b.tcont
  40a794:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a798:	add	x8, x8, #0x907
  40a79c:	ldrb	w2, [x8, x9]
  40a7a0:	scvtf	s0, x11
  40a7a4:	fdiv	s0, s8, s0
  40a7a8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a7ac:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a7b0:	fcvt	d0, s0
  40a7b4:	add	x0, x0, #0x744
  40a7b8:	add	x1, x1, #0x915
  40a7bc:	bl	402c30 <sprintf@plt>
  40a7c0:	b	40a7dc <feof@plt+0x76fc>
  40a7c4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a7c8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a7cc:	add	x0, x0, #0x744
  40a7d0:	add	x1, x1, #0x911
  40a7d4:	mov	x2, x21
  40a7d8:	bl	402c30 <sprintf@plt>
  40a7dc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a7e0:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a7e4:	add	x1, x1, #0xbd1
  40a7e8:	add	x2, x2, #0x744
  40a7ec:	mov	x0, x19
  40a7f0:	bl	402a70 <fprintf@plt>
  40a7f4:	fmov	s9, wzr
  40a7f8:	fmov	s0, wzr
  40a7fc:	cbz	x21, 40a814 <feof@plt+0x7734>
  40a800:	mov	w8, #0x42c80000            	// #1120403456
  40a804:	scvtf	s0, x22
  40a808:	fmov	s1, w8
  40a80c:	fmul	s0, s0, s1
  40a810:	fdiv	s0, s0, s8
  40a814:	fmov	s8, #5.000000000000000000e-01
  40a818:	fcmp	s0, s8
  40a81c:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a820:	fcvt	d1, s0
  40a824:	fccmp	s0, s9, #0x4, mi  // mi = first
  40a828:	fmov	d10, #1.000000000000000000e+00
  40a82c:	add	x21, x21, #0x730
  40a830:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a834:	fcsel	d0, d10, d1, gt
  40a838:	add	x1, x1, #0x900
  40a83c:	mov	x0, x21
  40a840:	mov	w2, wzr
  40a844:	bl	402c30 <sprintf@plt>
  40a848:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a84c:	add	x1, x1, #0xbdc
  40a850:	mov	x0, x19
  40a854:	mov	x2, x21
  40a858:	bl	402a70 <fprintf@plt>
  40a85c:	ldp	x9, x8, [x20, #32]
  40a860:	sub	x8, x8, x9
  40a864:	mov	w9, #0x4ec5                	// #20165
  40a868:	lsr	x8, x8, #3
  40a86c:	movk	w9, #0xc4ec, lsl #16
  40a870:	mul	w8, w8, w9
  40a874:	subs	w8, w8, #0x2
  40a878:	b.eq	40a898 <feof@plt+0x77b8>  // b.none
  40a87c:	ldr	s0, [x20, #56]
  40a880:	mov	w9, #0x42c80000            	// #1120403456
  40a884:	fmov	s1, w9
  40a888:	ucvtf	s0, s0
  40a88c:	fmul	s0, s0, s1
  40a890:	scvtf	s1, x8
  40a894:	fdiv	s9, s0, s1
  40a898:	fcmp	s9, s8
  40a89c:	fmov	s0, wzr
  40a8a0:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a8a4:	fccmp	s9, s0, #0x4, mi  // mi = first
  40a8a8:	fcvt	d0, s9
  40a8ac:	add	x20, x20, #0x730
  40a8b0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a8b4:	fcsel	d0, d10, d0, gt
  40a8b8:	add	x1, x1, #0x900
  40a8bc:	mov	x0, x20
  40a8c0:	mov	w2, wzr
  40a8c4:	bl	402c30 <sprintf@plt>
  40a8c8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a8cc:	add	x1, x1, #0xbe9
  40a8d0:	mov	x0, x19
  40a8d4:	mov	x2, x20
  40a8d8:	bl	402a70 <fprintf@plt>
  40a8dc:	mov	x1, x19
  40a8e0:	ldp	x20, x19, [sp, #64]
  40a8e4:	ldp	x22, x21, [sp, #48]
  40a8e8:	ldp	x29, x30, [sp, #32]
  40a8ec:	ldp	d9, d8, [sp, #16]
  40a8f0:	mov	w0, #0xa                   	// #10
  40a8f4:	ldr	d10, [sp], #80
  40a8f8:	b	402d60 <fputc@plt>
  40a8fc:	sub	sp, sp, #0xa0
  40a900:	stp	x29, x30, [sp, #80]
  40a904:	str	x25, [sp, #96]
  40a908:	stp	x24, x23, [sp, #112]
  40a90c:	stp	x22, x21, [sp, #128]
  40a910:	stp	x20, x19, [sp, #144]
  40a914:	add	x29, sp, #0x50
  40a918:	sub	x8, x29, #0x20
  40a91c:	mov	w21, w5
  40a920:	mov	x20, x4
  40a924:	mov	x19, x0
  40a928:	add	x25, x8, #0x10
  40a92c:	stp	x25, xzr, [x29, #-32]
  40a930:	sturb	wzr, [x29, #-16]
  40a934:	tbz	w1, #0, 40a9bc <feof@plt+0x78dc>
  40a938:	cmp	x20, #0x1
  40a93c:	b.lt	40aad0 <feof@plt+0x79f0>  // b.tstop
  40a940:	mov	w22, w3
  40a944:	cmp	x20, #0x3e8
  40a948:	b.lt	40ab80 <feof@plt+0x7aa0>  // b.tstop
  40a94c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a950:	ldrb	w8, [x8, #1712]
  40a954:	cbz	w8, 40ab80 <feof@plt+0x7aa0>
  40a958:	mov	x12, xzr
  40a95c:	mov	w10, #0x1                   	// #1
  40a960:	mov	w8, #0x3e8                 	// #1000
  40a964:	mov	x9, x12
  40a968:	cmp	w9, #0x8
  40a96c:	mov	x11, x10
  40a970:	b.eq	40a988 <feof@plt+0x78a8>  // b.none
  40a974:	add	x12, x20, x11, lsr #1
  40a978:	mul	x10, x11, x8
  40a97c:	cmp	x12, x10
  40a980:	add	x12, x9, #0x1
  40a984:	b.ge	40a964 <feof@plt+0x7884>  // b.tcont
  40a988:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40a98c:	add	x8, x8, #0x907
  40a990:	ldrb	w2, [x8, x9]
  40a994:	scvtf	s0, x20
  40a998:	scvtf	s1, x11
  40a99c:	fdiv	s0, s0, s1
  40a9a0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40a9a4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40a9a8:	fcvt	d0, s0
  40a9ac:	add	x0, x0, #0x744
  40a9b0:	add	x1, x1, #0x915
  40a9b4:	bl	402c30 <sprintf@plt>
  40a9b8:	b	40ab98 <feof@plt+0x7ab8>
  40a9bc:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  40a9c0:	add	x3, x3, #0x451
  40a9c4:	sub	x0, x29, #0x20
  40a9c8:	mov	w4, #0x1                   	// #1
  40a9cc:	mov	x1, xzr
  40a9d0:	mov	x2, xzr
  40a9d4:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40a9d8:	ldur	x8, [x29, #-24]
  40a9dc:	cmp	x8, #0x8
  40a9e0:	b.hi	40aa00 <feof@plt+0x7920>  // b.pmore
  40a9e4:	mov	w9, #0x9                   	// #9
  40a9e8:	sub	x3, x9, x8
  40a9ec:	sub	x0, x29, #0x20
  40a9f0:	mov	w4, #0x20                  	// #32
  40a9f4:	mov	x1, xzr
  40a9f8:	mov	x2, xzr
  40a9fc:	bl	403030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
  40aa00:	ldr	w23, [x29, #80]
  40aa04:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40aa08:	add	x1, x1, #0xb7a
  40aa0c:	add	x0, sp, #0x20
  40aa10:	mov	w2, w21
  40aa14:	bl	402c30 <sprintf@plt>
  40aa18:	mov	x8, sp
  40aa1c:	add	x22, x8, #0x10
  40aa20:	add	x0, sp, #0x20
  40aa24:	str	x22, [sp]
  40aa28:	bl	402a50 <strlen@plt>
  40aa2c:	mov	x21, x0
  40aa30:	cmp	x0, #0x10
  40aa34:	str	x0, [x29, #24]
  40aa38:	mov	x0, x22
  40aa3c:	b.cc	40aa5c <feof@plt+0x797c>  // b.lo, b.ul, b.last
  40aa40:	mov	x0, sp
  40aa44:	add	x1, x29, #0x18
  40aa48:	mov	x2, xzr
  40aa4c:	bl	402fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  40aa50:	ldr	x8, [x29, #24]
  40aa54:	str	x0, [sp]
  40aa58:	str	x8, [sp, #16]
  40aa5c:	cbz	x21, 40aa80 <feof@plt+0x79a0>
  40aa60:	cmp	x21, #0x1
  40aa64:	b.ne	40aa74 <feof@plt+0x7994>  // b.any
  40aa68:	ldrb	w8, [sp, #32]
  40aa6c:	strb	w8, [x0]
  40aa70:	b	40aa80 <feof@plt+0x79a0>
  40aa74:	add	x1, sp, #0x20
  40aa78:	mov	x2, x21
  40aa7c:	bl	4029c0 <memcpy@plt>
  40aa80:	ldr	x8, [x29, #24]
  40aa84:	ldr	x9, [sp]
  40aa88:	str	x8, [sp, #8]
  40aa8c:	strb	wzr, [x9, x8]
  40aa90:	cbz	w23, 40aca4 <feof@plt+0x7bc4>
  40aa94:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40aa98:	ldrb	w8, [x8, #1720]
  40aa9c:	cbz	w8, 40aca4 <feof@plt+0x7bc4>
  40aaa0:	mov	w8, w23
  40aaa4:	cmp	x8, x20, lsl #1
  40aaa8:	b.ge	40aab8 <feof@plt+0x79d8>  // b.tcont
  40aaac:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1838>
  40aab0:	add	x3, x3, #0xc21
  40aab4:	b	40ac68 <feof@plt+0x7b88>
  40aab8:	add	x9, x20, x20, lsl #2
  40aabc:	cmp	x9, x8
  40aac0:	b.le	40ac54 <feof@plt+0x7b74>
  40aac4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1838>
  40aac8:	add	x3, x3, #0xc2a
  40aacc:	b	40ac68 <feof@plt+0x7b88>
  40aad0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40aad4:	ldrb	w8, [x8, #1716]
  40aad8:	mov	w23, w2
  40aadc:	cmp	w8, #0x1
  40aae0:	b.ne	40acf8 <feof@plt+0x7c18>  // b.any
  40aae4:	adrp	x3, 471000 <_obstack_memory_used@@Base+0xf838>
  40aae8:	add	x3, x3, #0x8d2
  40aaec:	sub	x0, x29, #0x20
  40aaf0:	mov	w4, #0x1                   	// #1
  40aaf4:	mov	x1, xzr
  40aaf8:	mov	x2, xzr
  40aafc:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40ab00:	ldur	x8, [x29, #-24]
  40ab04:	cmp	x8, #0x8
  40ab08:	b.hi	40ab28 <feof@plt+0x7a48>  // b.pmore
  40ab0c:	mov	w9, #0x9                   	// #9
  40ab10:	sub	x3, x9, x8
  40ab14:	sub	x0, x29, #0x20
  40ab18:	mov	w4, #0x20                  	// #32
  40ab1c:	mov	x1, xzr
  40ab20:	mov	x2, xzr
  40ab24:	bl	403030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
  40ab28:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40ab2c:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40ab30:	add	x8, x8, #0xc15
  40ab34:	add	x9, x9, #0xc09
  40ab38:	tst	w23, #0x1
  40ab3c:	csel	x3, x9, x8, ne  // ne = any
  40ab40:	sub	x0, x29, #0x20
  40ab44:	mov	w4, #0xb                   	// #11
  40ab48:	mov	x1, xzr
  40ab4c:	mov	x2, xzr
  40ab50:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40ab54:	ldur	x8, [x29, #-24]
  40ab58:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  40ab5c:	sub	x8, x9, x8
  40ab60:	cmp	x8, #0x5
  40ab64:	b.ls	40ad44 <feof@plt+0x7c64>  // b.plast
  40ab68:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40ab6c:	add	x1, x1, #0xba7
  40ab70:	sub	x0, x29, #0x20
  40ab74:	mov	w2, #0x6                   	// #6
  40ab78:	bl	402a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  40ab7c:	b	40aa00 <feof@plt+0x7920>
  40ab80:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40ab84:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40ab88:	add	x0, x0, #0x744
  40ab8c:	add	x1, x1, #0x911
  40ab90:	mov	x2, x20
  40ab94:	bl	402c30 <sprintf@plt>
  40ab98:	ldur	x23, [x29, #-24]
  40ab9c:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  40aba0:	add	x24, x24, #0x744
  40aba4:	mov	x0, x24
  40aba8:	bl	402a50 <strlen@plt>
  40abac:	mov	x4, x0
  40abb0:	sub	x0, x29, #0x20
  40abb4:	mov	x1, xzr
  40abb8:	mov	x2, x23
  40abbc:	mov	x3, x24
  40abc0:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40abc4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40abc8:	ldr	w8, [x8, #1816]
  40abcc:	cbz	w8, 40a9d8 <feof@plt+0x78f8>
  40abd0:	tbz	w22, #0, 40a9d8 <feof@plt+0x78f8>
  40abd4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40abd8:	ldrb	w9, [x8, #1716]
  40abdc:	ldur	x8, [x29, #-24]
  40abe0:	cmp	w9, #0x1
  40abe4:	b.ne	40ad20 <feof@plt+0x7c40>  // b.any
  40abe8:	cmp	x8, #0x8
  40abec:	b.hi	40ac0c <feof@plt+0x7b2c>  // b.pmore
  40abf0:	mov	w9, #0x9                   	// #9
  40abf4:	sub	x3, x9, x8
  40abf8:	sub	x0, x29, #0x20
  40abfc:	mov	w4, #0x20                  	// #32
  40ac00:	mov	x1, xzr
  40ac04:	mov	x2, xzr
  40ac08:	bl	403030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
  40ac0c:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1838>
  40ac10:	add	x3, x3, #0xbfd
  40ac14:	sub	x0, x29, #0x20
  40ac18:	mov	w4, #0xb                   	// #11
  40ac1c:	mov	x1, xzr
  40ac20:	mov	x2, xzr
  40ac24:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40ac28:	ldur	x8, [x29, #-24]
  40ac2c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  40ac30:	sub	x8, x9, x8
  40ac34:	cmp	x8, #0x5
  40ac38:	b.ls	40ad44 <feof@plt+0x7c64>  // b.plast
  40ac3c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40ac40:	add	x1, x1, #0xba7
  40ac44:	sub	x0, x29, #0x20
  40ac48:	mov	w2, #0x6                   	// #6
  40ac4c:	bl	402a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  40ac50:	b	40a9d8 <feof@plt+0x78f8>
  40ac54:	lsl	x9, x9, #1
  40ac58:	cmp	x9, x8
  40ac5c:	b.le	40ac7c <feof@plt+0x7b9c>
  40ac60:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1838>
  40ac64:	add	x3, x3, #0xc33
  40ac68:	mov	x0, sp
  40ac6c:	mov	w4, #0x8                   	// #8
  40ac70:	mov	x1, xzr
  40ac74:	mov	x2, xzr
  40ac78:	bl	402f00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40ac7c:	ldr	x8, [sp, #8]
  40ac80:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  40ac84:	sub	x8, x9, x8
  40ac88:	cmp	x8, #0x5
  40ac8c:	b.ls	40ad44 <feof@plt+0x7c64>  // b.plast
  40ac90:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40ac94:	add	x1, x1, #0xba7
  40ac98:	mov	x0, sp
  40ac9c:	mov	w2, #0x6                   	// #6
  40aca0:	bl	402a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  40aca4:	ldur	x2, [x29, #-32]
  40aca8:	ldr	x3, [sp]
  40acac:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40acb0:	add	x1, x1, #0x684
  40acb4:	mov	x0, x19
  40acb8:	bl	402a70 <fprintf@plt>
  40acbc:	ldr	x0, [sp]
  40acc0:	cmp	x0, x22
  40acc4:	b.eq	40accc <feof@plt+0x7bec>  // b.none
  40acc8:	bl	402d00 <_ZdlPv@plt>
  40accc:	ldur	x0, [x29, #-32]
  40acd0:	cmp	x0, x25
  40acd4:	b.eq	40acdc <feof@plt+0x7bfc>  // b.none
  40acd8:	bl	402d00 <_ZdlPv@plt>
  40acdc:	ldp	x20, x19, [sp, #144]
  40ace0:	ldp	x22, x21, [sp, #128]
  40ace4:	ldp	x24, x23, [sp, #112]
  40ace8:	ldr	x25, [sp, #96]
  40acec:	ldp	x29, x30, [sp, #80]
  40acf0:	add	sp, sp, #0xa0
  40acf4:	ret
  40acf8:	tst	w23, #0x1
  40acfc:	csel	x22, x7, x6, ne  // ne = any
  40ad00:	mov	x0, x22
  40ad04:	bl	402a50 <strlen@plt>
  40ad08:	mov	x4, x0
  40ad0c:	sub	x0, x29, #0x20
  40ad10:	mov	x1, xzr
  40ad14:	mov	x2, xzr
  40ad18:	mov	x3, x22
  40ad1c:	b	40a9d4 <feof@plt+0x78f4>
  40ad20:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  40ad24:	cmp	x8, x9
  40ad28:	b.eq	40ad44 <feof@plt+0x7c64>  // b.none
  40ad2c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  40ad30:	add	x1, x1, #0xd14
  40ad34:	sub	x0, x29, #0x20
  40ad38:	mov	w2, #0x1                   	// #1
  40ad3c:	bl	402a80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  40ad40:	b	40a9d8 <feof@plt+0x78f8>
  40ad44:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40ad48:	add	x0, x0, #0xd48
  40ad4c:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40ad50:	sub	sp, sp, #0x70
  40ad54:	stp	x29, x30, [sp, #16]
  40ad58:	stp	x28, x27, [sp, #32]
  40ad5c:	stp	x26, x25, [sp, #48]
  40ad60:	stp	x24, x23, [sp, #64]
  40ad64:	stp	x22, x21, [sp, #80]
  40ad68:	stp	x20, x19, [sp, #96]
  40ad6c:	add	x29, sp, #0x10
  40ad70:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40ad74:	ldrb	w8, [x8, #1692]
  40ad78:	mov	x19, x1
  40ad7c:	mov	x20, x0
  40ad80:	cmp	w8, #0x1
  40ad84:	b.ne	40ae84 <feof@plt+0x7da4>  // b.any
  40ad88:	ldp	x26, x8, [x19, #32]
  40ad8c:	cmp	x26, x8
  40ad90:	b.eq	40aec4 <feof@plt+0x7de4>  // b.none
  40ad94:	adrp	x25, 463000 <_obstack_memory_used@@Base+0x1838>
  40ad98:	mov	w21, w2
  40ad9c:	mov	w27, wzr
  40ada0:	mov	w22, wzr
  40ada4:	add	x25, x25, #0xc48
  40ada8:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  40adac:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  40adb0:	b	40adc4 <feof@plt+0x7ce4>
  40adb4:	ldr	x8, [x19, #40]
  40adb8:	add	x26, x26, #0x8
  40adbc:	cmp	x26, x8
  40adc0:	b.eq	40aec4 <feof@plt+0x7de4>  // b.none
  40adc4:	ldr	x8, [x26]
  40adc8:	ldrb	w9, [x8, #48]
  40adcc:	tbnz	w9, #5, 40ae4c <feof@plt+0x7d6c>
  40add0:	ldrb	w10, [x19, #56]
  40add4:	ldr	x4, [x8, #40]
  40add8:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1838>
  40addc:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1838>
  40ade0:	ubfx	w2, w9, #3, #1
  40ade4:	and	w1, w10, #0x1
  40ade8:	mov	x0, x20
  40adec:	mov	w3, wzr
  40adf0:	mov	w5, w21
  40adf4:	add	x6, x6, #0xc3c
  40adf8:	add	x7, x7, #0xc42
  40adfc:	str	wzr, [sp]
  40ae00:	bl	40a8fc <feof@plt+0x781c>
  40ae04:	mov	x0, x20
  40ae08:	mov	x1, x25
  40ae0c:	mov	w2, w27
  40ae10:	add	w28, w27, #0x1
  40ae14:	bl	402a70 <fprintf@plt>
  40ae18:	ldrb	w8, [x23, #1776]
  40ae1c:	cmp	w8, #0x1
  40ae20:	b.ne	40ae3c <feof@plt+0x7d5c>  // b.any
  40ae24:	ldr	x8, [x26]
  40ae28:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40ae2c:	mov	x0, x20
  40ae30:	add	x1, x1, #0xc53
  40ae34:	ldr	w2, [x8, #32]
  40ae38:	bl	402a70 <fprintf@plt>
  40ae3c:	mov	w0, #0xa                   	// #10
  40ae40:	mov	x1, x20
  40ae44:	bl	402d60 <fputc@plt>
  40ae48:	mov	w27, w28
  40ae4c:	ldrb	w8, [x24, #1696]
  40ae50:	cmp	w8, #0x1
  40ae54:	b.ne	40adb4 <feof@plt+0x7cd4>  // b.any
  40ae58:	ldr	x8, [x26]
  40ae5c:	ldr	x28, [x8]
  40ae60:	cbz	x28, 40adb4 <feof@plt+0x7cd4>
  40ae64:	mov	x0, x20
  40ae68:	mov	w1, w22
  40ae6c:	mov	x2, x28
  40ae70:	bl	40aee4 <feof@plt+0x7e04>
  40ae74:	ldr	x28, [x28, #40]
  40ae78:	add	w22, w0, w22
  40ae7c:	cbnz	x28, 40ae64 <feof@plt+0x7d84>
  40ae80:	b	40adb4 <feof@plt+0x7cd4>
  40ae84:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40ae88:	ldrb	w8, [x8, #1696]
  40ae8c:	cmp	w8, #0x1
  40ae90:	b.ne	40aec4 <feof@plt+0x7de4>  // b.any
  40ae94:	ldp	x22, x8, [x19, #8]
  40ae98:	cmp	x22, x8
  40ae9c:	b.eq	40aec4 <feof@plt+0x7de4>  // b.none
  40aea0:	mov	w21, wzr
  40aea4:	ldr	x2, [x22], #8
  40aea8:	mov	x0, x20
  40aeac:	mov	w1, w21
  40aeb0:	bl	40aee4 <feof@plt+0x7e04>
  40aeb4:	ldr	x8, [x19, #16]
  40aeb8:	add	w21, w0, w21
  40aebc:	cmp	x22, x8
  40aec0:	b.ne	40aea4 <feof@plt+0x7dc4>  // b.any
  40aec4:	ldp	x20, x19, [sp, #96]
  40aec8:	ldp	x22, x21, [sp, #80]
  40aecc:	ldp	x24, x23, [sp, #64]
  40aed0:	ldp	x26, x25, [sp, #48]
  40aed4:	ldp	x28, x27, [sp, #32]
  40aed8:	ldp	x29, x30, [sp, #16]
  40aedc:	add	sp, sp, #0x70
  40aee0:	ret
  40aee4:	stp	x29, x30, [sp, #-48]!
  40aee8:	str	x21, [sp, #16]
  40aeec:	stp	x20, x19, [sp, #32]
  40aef0:	mov	x29, sp
  40aef4:	ldrh	w8, [x2, #32]
  40aef8:	mov	x21, x2
  40aefc:	mov	w20, w1
  40af00:	mov	x19, x0
  40af04:	tbnz	w8, #5, 40af74 <feof@plt+0x7e94>
  40af08:	tbnz	w8, #7, 40afb4 <feof@plt+0x7ed4>
  40af0c:	ldr	x8, [x21]
  40af10:	ldr	x1, [x8, #40]
  40af14:	cbz	x1, 40b020 <feof@plt+0x7f40>
  40af18:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40af1c:	ldrb	w8, [x8, #1700]
  40af20:	ldr	x0, [x21, #16]
  40af24:	sbfx	w2, w8, #0, #1
  40af28:	bl	40a178 <feof@plt+0x7098>
  40af2c:	ldrh	w8, [x21, #32]
  40af30:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40af34:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x838>
  40af38:	add	x9, x9, #0xcb4
  40af3c:	add	x10, x10, #0xbb5
  40af40:	adrp	x11, 463000 <_obstack_memory_used@@Base+0x1838>
  40af44:	tst	w8, #0x10
  40af48:	add	x11, x11, #0xca5
  40af4c:	csel	x9, x10, x9, eq  // eq = none
  40af50:	tst	w8, #0x8
  40af54:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40af58:	mov	x3, x0
  40af5c:	csel	x4, x9, x11, eq  // eq = none
  40af60:	add	x1, x1, #0xc8f
  40af64:	mov	x0, x19
  40af68:	mov	w2, w20
  40af6c:	bl	40f8a4 <feof@plt+0xc7c4>
  40af70:	b	40b034 <feof@plt+0x7f54>
  40af74:	ldr	x8, [x21]
  40af78:	ldr	x1, [x8, #40]
  40af7c:	cbz	x1, 40b000 <feof@plt+0x7f20>
  40af80:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40af84:	ldr	x8, [x21, #16]
  40af88:	ldrb	w9, [x9, #1700]
  40af8c:	sub	x0, x1, x8
  40af90:	sbfx	w2, w9, #0, #1
  40af94:	bl	40a178 <feof@plt+0x7098>
  40af98:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40af9c:	mov	x3, x0
  40afa0:	add	x1, x1, #0xc5c
  40afa4:	mov	x0, x19
  40afa8:	mov	w2, w20
  40afac:	bl	40f8a4 <feof@plt+0xc7c4>
  40afb0:	b	40b06c <feof@plt+0x7f8c>
  40afb4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40afb8:	ldrb	w8, [x8, #1768]
  40afbc:	cmp	w8, #0x1
  40afc0:	b.ne	40b018 <feof@plt+0x7f38>  // b.any
  40afc4:	ldr	x8, [x21, #8]
  40afc8:	ldrb	w8, [x8, #48]
  40afcc:	tbnz	w8, #5, 40b018 <feof@plt+0x7f38>
  40afd0:	ldr	x8, [x21]
  40afd4:	ldr	x1, [x8, #40]
  40afd8:	cbz	x1, 40b080 <feof@plt+0x7fa0>
  40afdc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40afe0:	ldrb	w8, [x8, #1700]
  40afe4:	ldr	x0, [x21, #16]
  40afe8:	sbfx	w2, w8, #0, #1
  40afec:	bl	40a178 <feof@plt+0x7098>
  40aff0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40aff4:	mov	x3, x0
  40aff8:	add	x1, x1, #0xce0
  40affc:	b	40afa4 <feof@plt+0x7ec4>
  40b000:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40b004:	add	x1, x1, #0xc74
  40b008:	mov	x0, x19
  40b00c:	mov	w2, w20
  40b010:	bl	40f8a4 <feof@plt+0xc7c4>
  40b014:	b	40b06c <feof@plt+0x7f8c>
  40b018:	mov	w0, wzr
  40b01c:	b	40b070 <feof@plt+0x7f90>
  40b020:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40b024:	add	x1, x1, #0xcbd
  40b028:	mov	x0, x19
  40b02c:	mov	w2, w20
  40b030:	bl	40f8a4 <feof@plt+0xc7c4>
  40b034:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40b038:	ldrb	w8, [x8, #1776]
  40b03c:	cmp	w8, #0x1
  40b040:	b.ne	40b05c <feof@plt+0x7f7c>  // b.any
  40b044:	ldr	x8, [x21, #8]
  40b048:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40b04c:	add	x1, x1, #0xcd7
  40b050:	mov	x0, x19
  40b054:	ldr	w2, [x8, #32]
  40b058:	bl	40f8a4 <feof@plt+0xc7c4>
  40b05c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  40b060:	add	x1, x1, #0xbb4
  40b064:	mov	x0, x19
  40b068:	bl	40f8a4 <feof@plt+0xc7c4>
  40b06c:	mov	w0, #0x1                   	// #1
  40b070:	ldp	x20, x19, [sp, #32]
  40b074:	ldr	x21, [sp, #16]
  40b078:	ldp	x29, x30, [sp], #48
  40b07c:	ret
  40b080:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  40b084:	add	x1, x1, #0xcfc
  40b088:	b	40b008 <feof@plt+0x7f28>
  40b08c:	ldr	x0, [x0]
  40b090:	cbz	x0, 40b098 <feof@plt+0x7fb8>
  40b094:	b	402d00 <_ZdlPv@plt>
  40b098:	ret
  40b09c:	ldr	x1, [x0, #16]
  40b0a0:	b	40b194 <feof@plt+0x80b4>
  40b0a4:	stp	x29, x30, [sp, #-64]!
  40b0a8:	str	x23, [sp, #16]
  40b0ac:	stp	x22, x21, [sp, #32]
  40b0b0:	stp	x20, x19, [sp, #48]
  40b0b4:	mov	x29, sp
  40b0b8:	ldp	x19, x22, [x0]
  40b0bc:	cmp	x19, x22
  40b0c0:	b.eq	40b144 <feof@plt+0x8064>  // b.none
  40b0c4:	mov	x20, x0
  40b0c8:	b	40b0d8 <feof@plt+0x7ff8>
  40b0cc:	add	x19, x19, #0x90
  40b0d0:	cmp	x19, x22
  40b0d4:	b.eq	40b140 <feof@plt+0x8060>  // b.none
  40b0d8:	ldr	x0, [x19, #120]
  40b0dc:	cbz	x0, 40b0e4 <feof@plt+0x8004>
  40b0e0:	bl	402d00 <_ZdlPv@plt>
  40b0e4:	ldr	x0, [x19, #96]
  40b0e8:	cbz	x0, 40b0f0 <feof@plt+0x8010>
  40b0ec:	bl	402d00 <_ZdlPv@plt>
  40b0f0:	ldp	x21, x23, [x19, #24]
  40b0f4:	cmp	x21, x23
  40b0f8:	b.ne	40b110 <feof@plt+0x8030>  // b.any
  40b0fc:	cbnz	x21, 40b134 <feof@plt+0x8054>
  40b100:	b	40b0cc <feof@plt+0x7fec>
  40b104:	add	x21, x21, #0x40
  40b108:	cmp	x23, x21
  40b10c:	b.eq	40b12c <feof@plt+0x804c>  // b.none
  40b110:	ldr	x0, [x21, #32]
  40b114:	cbz	x0, 40b11c <feof@plt+0x803c>
  40b118:	bl	402d00 <_ZdlPv@plt>
  40b11c:	ldr	x0, [x21, #8]
  40b120:	cbz	x0, 40b104 <feof@plt+0x8024>
  40b124:	bl	402d00 <_ZdlPv@plt>
  40b128:	b	40b104 <feof@plt+0x8024>
  40b12c:	ldr	x21, [x19, #24]
  40b130:	cbz	x21, 40b0cc <feof@plt+0x7fec>
  40b134:	mov	x0, x21
  40b138:	bl	402d00 <_ZdlPv@plt>
  40b13c:	b	40b0cc <feof@plt+0x7fec>
  40b140:	ldr	x19, [x20]
  40b144:	cbz	x19, 40b160 <feof@plt+0x8080>
  40b148:	mov	x0, x19
  40b14c:	ldp	x20, x19, [sp, #48]
  40b150:	ldp	x22, x21, [sp, #32]
  40b154:	ldr	x23, [sp, #16]
  40b158:	ldp	x29, x30, [sp], #64
  40b15c:	b	402d00 <_ZdlPv@plt>
  40b160:	ldp	x20, x19, [sp, #48]
  40b164:	ldp	x22, x21, [sp, #32]
  40b168:	ldr	x23, [sp, #16]
  40b16c:	ldp	x29, x30, [sp], #64
  40b170:	ret
  40b174:	ldr	x0, [x0]
  40b178:	cbz	x0, 40b180 <feof@plt+0x80a0>
  40b17c:	b	402d00 <_ZdlPv@plt>
  40b180:	ret
  40b184:	ldr	x0, [x0]
  40b188:	cbz	x0, 40b190 <feof@plt+0x80b0>
  40b18c:	b	402d00 <_ZdlPv@plt>
  40b190:	ret
  40b194:	stp	x29, x30, [sp, #-48]!
  40b198:	str	x21, [sp, #16]
  40b19c:	stp	x20, x19, [sp, #32]
  40b1a0:	mov	x29, sp
  40b1a4:	cbz	x1, 40b1d0 <feof@plt+0x80f0>
  40b1a8:	mov	x20, x1
  40b1ac:	mov	x19, x0
  40b1b0:	ldr	x1, [x20, #24]
  40b1b4:	mov	x0, x19
  40b1b8:	bl	40b194 <feof@plt+0x80b4>
  40b1bc:	ldr	x21, [x20, #16]
  40b1c0:	mov	x0, x20
  40b1c4:	bl	402d00 <_ZdlPv@plt>
  40b1c8:	mov	x20, x21
  40b1cc:	cbnz	x21, 40b1b0 <feof@plt+0x80d0>
  40b1d0:	ldp	x20, x19, [sp, #32]
  40b1d4:	ldr	x21, [sp, #16]
  40b1d8:	ldp	x29, x30, [sp], #48
  40b1dc:	ret
  40b1e0:	stp	x29, x30, [sp, #-64]!
  40b1e4:	str	x23, [sp, #16]
  40b1e8:	stp	x22, x21, [sp, #32]
  40b1ec:	stp	x20, x19, [sp, #48]
  40b1f0:	mov	x29, sp
  40b1f4:	ldr	x8, [x0, #16]
  40b1f8:	mov	x22, x1
  40b1fc:	mov	x19, x0
  40b200:	add	x20, x0, #0x8
  40b204:	cbz	x8, 40b24c <feof@plt+0x816c>
  40b208:	ldr	w9, [x22]
  40b20c:	mov	x21, x20
  40b210:	ldr	w10, [x8, #32]
  40b214:	add	x11, x8, #0x18
  40b218:	add	x12, x8, #0x10
  40b21c:	cmp	w10, w9
  40b220:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  40b224:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  40b228:	ldr	x8, [x8]
  40b22c:	cbnz	x8, 40b210 <feof@plt+0x8130>
  40b230:	cmp	x21, x20
  40b234:	b.eq	40b250 <feof@plt+0x8170>  // b.none
  40b238:	ldr	w8, [x22]
  40b23c:	ldr	w9, [x21, #32]
  40b240:	cmp	w8, w9
  40b244:	b.cc	40b250 <feof@plt+0x8170>  // b.lo, b.ul, b.last
  40b248:	b	40b2d0 <feof@plt+0x81f0>
  40b24c:	mov	x21, x20
  40b250:	mov	w0, #0x30                  	// #48
  40b254:	bl	402d30 <_Znwm@plt>
  40b258:	ldr	w8, [x22]
  40b25c:	mov	x23, x0
  40b260:	mov	x22, x0
  40b264:	mov	x1, x21
  40b268:	str	w8, [x23, #32]!
  40b26c:	str	xzr, [x0, #40]
  40b270:	mov	x0, x19
  40b274:	mov	x2, x23
  40b278:	bl	40c064 <feof@plt+0x8f84>
  40b27c:	mov	x21, x0
  40b280:	cbz	x1, 40b2c8 <feof@plt+0x81e8>
  40b284:	mov	x2, x1
  40b288:	mov	w0, #0x1                   	// #1
  40b28c:	cbnz	x21, 40b2a8 <feof@plt+0x81c8>
  40b290:	cmp	x20, x2
  40b294:	b.eq	40b2a8 <feof@plt+0x81c8>  // b.none
  40b298:	ldr	w8, [x23]
  40b29c:	ldr	w9, [x2, #32]
  40b2a0:	cmp	w8, w9
  40b2a4:	cset	w0, cc  // cc = lo, ul, last
  40b2a8:	mov	x1, x22
  40b2ac:	mov	x3, x20
  40b2b0:	bl	402a10 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
  40b2b4:	ldr	x8, [x19, #40]
  40b2b8:	mov	x21, x22
  40b2bc:	add	x8, x8, #0x1
  40b2c0:	str	x8, [x19, #40]
  40b2c4:	b	40b2d0 <feof@plt+0x81f0>
  40b2c8:	mov	x0, x22
  40b2cc:	bl	402d00 <_ZdlPv@plt>
  40b2d0:	add	x0, x21, #0x28
  40b2d4:	ldp	x20, x19, [sp, #48]
  40b2d8:	ldp	x22, x21, [sp, #32]
  40b2dc:	ldr	x23, [sp, #16]
  40b2e0:	ldp	x29, x30, [sp], #64
  40b2e4:	ret
  40b2e8:	stp	x29, x30, [sp, #-64]!
  40b2ec:	stp	x24, x23, [sp, #16]
  40b2f0:	stp	x22, x21, [sp, #32]
  40b2f4:	stp	x20, x19, [sp, #48]
  40b2f8:	mov	x29, sp
  40b2fc:	sub	x8, x1, x0
  40b300:	mov	x19, x1
  40b304:	mov	x21, x0
  40b308:	cmp	x8, #0x40
  40b30c:	mov	x20, x2
  40b310:	b.lt	40b37c <feof@plt+0x829c>  // b.tstop
  40b314:	ldr	x23, [x20]
  40b318:	lsr	x8, x8, #6
  40b31c:	add	x24, x8, #0x1
  40b320:	mov	x22, x21
  40b324:	ldr	x0, [x22]
  40b328:	mov	x1, x23
  40b32c:	bl	402ed0 <strcmp@plt>
  40b330:	cbz	w0, 40b40c <feof@plt+0x832c>
  40b334:	ldr	x0, [x22, #16]
  40b338:	mov	x1, x23
  40b33c:	bl	402ed0 <strcmp@plt>
  40b340:	cbz	w0, 40b3f8 <feof@plt+0x8318>
  40b344:	ldr	x0, [x22, #32]
  40b348:	mov	x1, x23
  40b34c:	bl	402ed0 <strcmp@plt>
  40b350:	cbz	w0, 40b400 <feof@plt+0x8320>
  40b354:	ldr	x0, [x22, #48]
  40b358:	mov	x1, x23
  40b35c:	bl	402ed0 <strcmp@plt>
  40b360:	cbz	w0, 40b408 <feof@plt+0x8328>
  40b364:	sub	x24, x24, #0x1
  40b368:	cmp	x24, #0x1
  40b36c:	add	x22, x22, #0x40
  40b370:	b.gt	40b324 <feof@plt+0x8244>
  40b374:	sub	x8, x19, x22
  40b378:	mov	x21, x22
  40b37c:	asr	x8, x8, #4
  40b380:	cmp	x8, #0x3
  40b384:	b.eq	40b3a4 <feof@plt+0x82c4>  // b.none
  40b388:	cmp	x8, #0x2
  40b38c:	b.eq	40b3c0 <feof@plt+0x82e0>  // b.none
  40b390:	cmp	x8, #0x1
  40b394:	mov	x22, x19
  40b398:	b.ne	40b40c <feof@plt+0x832c>  // b.any
  40b39c:	ldr	x20, [x20]
  40b3a0:	b	40b3d8 <feof@plt+0x82f8>
  40b3a4:	ldr	x20, [x20]
  40b3a8:	ldr	x0, [x21]
  40b3ac:	mov	x1, x20
  40b3b0:	bl	402ed0 <strcmp@plt>
  40b3b4:	cbz	w0, 40b3f0 <feof@plt+0x8310>
  40b3b8:	add	x21, x21, #0x10
  40b3bc:	b	40b3c4 <feof@plt+0x82e4>
  40b3c0:	ldr	x20, [x20]
  40b3c4:	ldr	x0, [x21]
  40b3c8:	mov	x1, x20
  40b3cc:	bl	402ed0 <strcmp@plt>
  40b3d0:	cbz	w0, 40b3f0 <feof@plt+0x8310>
  40b3d4:	add	x21, x21, #0x10
  40b3d8:	ldr	x0, [x21]
  40b3dc:	mov	x1, x20
  40b3e0:	bl	402ed0 <strcmp@plt>
  40b3e4:	cmp	w0, #0x0
  40b3e8:	csel	x22, x21, x19, eq  // eq = none
  40b3ec:	b	40b40c <feof@plt+0x832c>
  40b3f0:	mov	x22, x21
  40b3f4:	b	40b40c <feof@plt+0x832c>
  40b3f8:	add	x22, x22, #0x10
  40b3fc:	b	40b40c <feof@plt+0x832c>
  40b400:	add	x22, x22, #0x20
  40b404:	b	40b40c <feof@plt+0x832c>
  40b408:	add	x22, x22, #0x30
  40b40c:	mov	x0, x22
  40b410:	ldp	x20, x19, [sp, #48]
  40b414:	ldp	x22, x21, [sp, #32]
  40b418:	ldp	x24, x23, [sp, #16]
  40b41c:	ldp	x29, x30, [sp], #64
  40b420:	ret
  40b424:	stp	x29, x30, [sp, #-80]!
  40b428:	stp	x26, x25, [sp, #16]
  40b42c:	stp	x24, x23, [sp, #32]
  40b430:	stp	x22, x21, [sp, #48]
  40b434:	stp	x20, x19, [sp, #64]
  40b438:	mov	x29, sp
  40b43c:	ldp	x20, x24, [x0]
  40b440:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  40b444:	sub	x8, x24, x20
  40b448:	cmp	x8, x9
  40b44c:	b.eq	40b524 <feof@plt+0x8444>  // b.none
  40b450:	asr	x9, x8, #4
  40b454:	cmp	x8, #0x0
  40b458:	csinc	x10, x9, xzr, ne  // ne = any
  40b45c:	adds	x9, x10, x9
  40b460:	lsr	x11, x9, #59
  40b464:	cset	w10, cs  // cs = hs, nlast
  40b468:	cmp	x11, #0x0
  40b46c:	cset	w11, ne  // ne = any
  40b470:	orr	w10, w10, w11
  40b474:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40b478:	cmp	w10, #0x0
  40b47c:	csel	x25, x8, x9, ne  // ne = any
  40b480:	sub	x8, x1, x20
  40b484:	mov	x23, x2
  40b488:	mov	x19, x0
  40b48c:	mov	x21, x1
  40b490:	asr	x26, x8, #4
  40b494:	cbz	x25, 40b4a8 <feof@plt+0x83c8>
  40b498:	lsl	x0, x25, #4
  40b49c:	bl	402d30 <_Znwm@plt>
  40b4a0:	mov	x22, x0
  40b4a4:	b	40b4ac <feof@plt+0x83cc>
  40b4a8:	mov	x22, xzr
  40b4ac:	ldr	q0, [x23]
  40b4b0:	cmp	x20, x21
  40b4b4:	mov	x8, x22
  40b4b8:	str	q0, [x22, x26, lsl #4]
  40b4bc:	b.eq	40b4d8 <feof@plt+0x83f8>  // b.none
  40b4c0:	mov	x8, x22
  40b4c4:	mov	x9, x20
  40b4c8:	ldr	q0, [x9], #16
  40b4cc:	cmp	x21, x9
  40b4d0:	str	q0, [x8], #16
  40b4d4:	b.ne	40b4c8 <feof@plt+0x83e8>  // b.any
  40b4d8:	cmp	x24, x21
  40b4dc:	add	x23, x8, #0x10
  40b4e0:	b.eq	40b4f4 <feof@plt+0x8414>  // b.none
  40b4e4:	ldr	q0, [x21], #16
  40b4e8:	cmp	x24, x21
  40b4ec:	str	q0, [x23], #16
  40b4f0:	b.ne	40b4e4 <feof@plt+0x8404>  // b.any
  40b4f4:	cbz	x20, 40b500 <feof@plt+0x8420>
  40b4f8:	mov	x0, x20
  40b4fc:	bl	402d00 <_ZdlPv@plt>
  40b500:	add	x8, x22, x25, lsl #4
  40b504:	stp	x22, x23, [x19]
  40b508:	str	x8, [x19, #16]
  40b50c:	ldp	x20, x19, [sp, #64]
  40b510:	ldp	x22, x21, [sp, #48]
  40b514:	ldp	x24, x23, [sp, #32]
  40b518:	ldp	x26, x25, [sp, #16]
  40b51c:	ldp	x29, x30, [sp], #80
  40b520:	ret
  40b524:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40b528:	add	x0, x0, #0x4b5
  40b52c:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40b530:	stp	x29, x30, [sp, #-80]!
  40b534:	stp	x26, x25, [sp, #16]
  40b538:	stp	x24, x23, [sp, #32]
  40b53c:	stp	x22, x21, [sp, #48]
  40b540:	stp	x20, x19, [sp, #64]
  40b544:	mov	x29, sp
  40b548:	ldp	x20, x24, [x0]
  40b54c:	mov	x9, #0xffffffffffffffb0    	// #-80
  40b550:	movk	x9, #0x7fff, lsl #48
  40b554:	sub	x8, x24, x20
  40b558:	cmp	x8, x9
  40b55c:	b.eq	40b7d8 <feof@plt+0x86f8>  // b.none
  40b560:	mov	x10, #0x8e39                	// #36409
  40b564:	movk	x10, #0x38e3, lsl #16
  40b568:	movk	x10, #0xe38e, lsl #32
  40b56c:	asr	x9, x8, #4
  40b570:	movk	x10, #0x8e38, lsl #48
  40b574:	cmp	x8, #0x0
  40b578:	mov	x8, #0x38e3                	// #14563
  40b57c:	movk	x8, #0xe38e, lsl #16
  40b580:	mul	x9, x9, x10
  40b584:	movk	x8, #0x8e38, lsl #32
  40b588:	csinc	x11, x9, xzr, ne  // ne = any
  40b58c:	movk	x8, #0xe3, lsl #48
  40b590:	adds	x9, x11, x9
  40b594:	cset	w11, cs  // cs = hs, nlast
  40b598:	cmp	x9, x8
  40b59c:	cset	w12, hi  // hi = pmore
  40b5a0:	orr	w11, w11, w12
  40b5a4:	sub	x12, x1, x20
  40b5a8:	cmp	w11, #0x0
  40b5ac:	csel	x25, x8, x9, ne  // ne = any
  40b5b0:	asr	x8, x12, #4
  40b5b4:	mov	x23, x2
  40b5b8:	mov	x19, x0
  40b5bc:	mov	x21, x1
  40b5c0:	mul	x26, x8, x10
  40b5c4:	cbz	x25, 40b5dc <feof@plt+0x84fc>
  40b5c8:	add	x8, x25, x25, lsl #3
  40b5cc:	lsl	x0, x8, #4
  40b5d0:	bl	402d30 <_Znwm@plt>
  40b5d4:	mov	x22, x0
  40b5d8:	b	40b5e0 <feof@plt+0x8500>
  40b5dc:	mov	x22, xzr
  40b5e0:	ldr	x8, [x23, #16]
  40b5e4:	ldr	q0, [x23]
  40b5e8:	mov	w9, #0x90                  	// #144
  40b5ec:	madd	x9, x26, x9, x22
  40b5f0:	str	x8, [x9, #16]
  40b5f4:	str	q0, [x9]
  40b5f8:	ldur	q0, [x23, #24]
  40b5fc:	cmp	x20, x21
  40b600:	mov	x26, x22
  40b604:	stur	q0, [x9, #24]
  40b608:	ldr	x8, [x23, #40]
  40b60c:	str	x8, [x9, #40]
  40b610:	ldp	q0, q1, [x23, #48]
  40b614:	ldur	q2, [x23, #76]
  40b618:	stp	xzr, xzr, [x23, #24]
  40b61c:	str	xzr, [x23, #40]
  40b620:	stur	q2, [x9, #76]
  40b624:	stp	q0, q1, [x9, #48]
  40b628:	ldr	q0, [x23, #96]
  40b62c:	str	q0, [x9, #96]
  40b630:	ldr	x8, [x23, #112]
  40b634:	str	x8, [x9, #112]
  40b638:	ldur	q0, [x23, #120]
  40b63c:	stp	xzr, xzr, [x23, #96]
  40b640:	stp	xzr, xzr, [x23, #112]
  40b644:	stur	q0, [x9, #120]
  40b648:	ldr	x8, [x23, #136]
  40b64c:	str	x8, [x9, #136]
  40b650:	stp	xzr, xzr, [x23, #128]
  40b654:	b.eq	40b6fc <feof@plt+0x861c>  // b.none
  40b658:	mov	x26, x22
  40b65c:	mov	x23, x20
  40b660:	ldr	x8, [x23, #16]
  40b664:	ldr	q0, [x23]
  40b668:	mov	x0, x19
  40b66c:	mov	x1, x23
  40b670:	str	x8, [x26, #16]
  40b674:	str	q0, [x26]
  40b678:	ldr	x8, [x23, #24]
  40b67c:	str	x8, [x26, #24]
  40b680:	ldr	x8, [x23, #32]
  40b684:	str	x8, [x26, #32]
  40b688:	ldr	x8, [x23, #40]
  40b68c:	str	x8, [x26, #40]
  40b690:	ldp	q0, q1, [x23, #48]
  40b694:	ldur	q2, [x23, #76]
  40b698:	stp	xzr, xzr, [x23, #24]
  40b69c:	str	xzr, [x23, #40]
  40b6a0:	stur	q2, [x26, #76]
  40b6a4:	stp	q0, q1, [x26, #48]
  40b6a8:	ldr	x8, [x23, #96]
  40b6ac:	str	x8, [x26, #96]
  40b6b0:	ldr	x8, [x23, #104]
  40b6b4:	str	x8, [x26, #104]
  40b6b8:	ldr	x8, [x23, #112]
  40b6bc:	str	x8, [x26, #112]
  40b6c0:	ldr	x8, [x23, #120]
  40b6c4:	stp	xzr, xzr, [x23, #96]
  40b6c8:	str	xzr, [x23, #112]
  40b6cc:	str	x8, [x26, #120]
  40b6d0:	ldr	x8, [x23, #128]
  40b6d4:	str	x8, [x26, #128]
  40b6d8:	ldr	x8, [x23, #136]
  40b6dc:	str	x8, [x26, #136]
  40b6e0:	stp	xzr, xzr, [x23, #120]
  40b6e4:	str	xzr, [x23, #136]
  40b6e8:	bl	40b7e4 <feof@plt+0x8704>
  40b6ec:	add	x23, x23, #0x90
  40b6f0:	cmp	x23, x21
  40b6f4:	add	x26, x26, #0x90
  40b6f8:	b.ne	40b660 <feof@plt+0x8580>  // b.any
  40b6fc:	cmp	x24, x21
  40b700:	add	x23, x26, #0x90
  40b704:	b.eq	40b7a4 <feof@plt+0x86c4>  // b.none
  40b708:	ldr	x8, [x21, #16]
  40b70c:	ldr	q0, [x21]
  40b710:	mov	x0, x19
  40b714:	mov	x1, x21
  40b718:	str	x8, [x23, #16]
  40b71c:	str	q0, [x23]
  40b720:	ldr	x8, [x21, #24]
  40b724:	str	x8, [x23, #24]
  40b728:	ldr	x8, [x21, #32]
  40b72c:	str	x8, [x23, #32]
  40b730:	ldr	x8, [x21, #40]
  40b734:	str	x8, [x23, #40]
  40b738:	ldp	q0, q1, [x21, #48]
  40b73c:	ldur	q2, [x21, #76]
  40b740:	stp	xzr, xzr, [x21, #24]
  40b744:	str	xzr, [x21, #40]
  40b748:	stur	q2, [x23, #76]
  40b74c:	stp	q0, q1, [x23, #48]
  40b750:	ldr	x8, [x21, #96]
  40b754:	str	x8, [x23, #96]
  40b758:	ldr	x8, [x21, #104]
  40b75c:	str	x8, [x23, #104]
  40b760:	ldr	x8, [x21, #112]
  40b764:	str	x8, [x23, #112]
  40b768:	ldr	x8, [x21, #120]
  40b76c:	stp	xzr, xzr, [x21, #96]
  40b770:	str	xzr, [x21, #112]
  40b774:	str	x8, [x23, #120]
  40b778:	ldr	x8, [x21, #128]
  40b77c:	str	x8, [x23, #128]
  40b780:	ldr	x8, [x21, #136]
  40b784:	str	x8, [x23, #136]
  40b788:	stp	xzr, xzr, [x21, #120]
  40b78c:	str	xzr, [x21, #136]
  40b790:	bl	40b7e4 <feof@plt+0x8704>
  40b794:	add	x21, x21, #0x90
  40b798:	cmp	x21, x24
  40b79c:	add	x23, x23, #0x90
  40b7a0:	b.ne	40b708 <feof@plt+0x8628>  // b.any
  40b7a4:	cbz	x20, 40b7b0 <feof@plt+0x86d0>
  40b7a8:	mov	x0, x20
  40b7ac:	bl	402d00 <_ZdlPv@plt>
  40b7b0:	mov	w8, #0x90                  	// #144
  40b7b4:	madd	x8, x25, x8, x22
  40b7b8:	stp	x22, x23, [x19]
  40b7bc:	str	x8, [x19, #16]
  40b7c0:	ldp	x20, x19, [sp, #64]
  40b7c4:	ldp	x22, x21, [sp, #48]
  40b7c8:	ldp	x24, x23, [sp, #32]
  40b7cc:	ldp	x26, x25, [sp, #16]
  40b7d0:	ldp	x29, x30, [sp], #80
  40b7d4:	ret
  40b7d8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40b7dc:	add	x0, x0, #0x4b5
  40b7e0:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40b7e4:	stp	x29, x30, [sp, #-48]!
  40b7e8:	str	x21, [sp, #16]
  40b7ec:	stp	x20, x19, [sp, #32]
  40b7f0:	mov	x29, sp
  40b7f4:	ldr	x0, [x1, #120]
  40b7f8:	mov	x19, x1
  40b7fc:	cbz	x0, 40b804 <feof@plt+0x8724>
  40b800:	bl	402d00 <_ZdlPv@plt>
  40b804:	ldr	x0, [x19, #96]
  40b808:	cbz	x0, 40b810 <feof@plt+0x8730>
  40b80c:	bl	402d00 <_ZdlPv@plt>
  40b810:	ldp	x20, x21, [x19, #24]
  40b814:	cmp	x20, x21
  40b818:	b.ne	40b840 <feof@plt+0x8760>  // b.any
  40b81c:	cbz	x20, 40b864 <feof@plt+0x8784>
  40b820:	mov	x0, x20
  40b824:	ldp	x20, x19, [sp, #32]
  40b828:	ldr	x21, [sp, #16]
  40b82c:	ldp	x29, x30, [sp], #48
  40b830:	b	402d00 <_ZdlPv@plt>
  40b834:	add	x20, x20, #0x40
  40b838:	cmp	x21, x20
  40b83c:	b.eq	40b85c <feof@plt+0x877c>  // b.none
  40b840:	ldr	x0, [x20, #32]
  40b844:	cbz	x0, 40b84c <feof@plt+0x876c>
  40b848:	bl	402d00 <_ZdlPv@plt>
  40b84c:	ldr	x0, [x20, #8]
  40b850:	cbz	x0, 40b834 <feof@plt+0x8754>
  40b854:	bl	402d00 <_ZdlPv@plt>
  40b858:	b	40b834 <feof@plt+0x8754>
  40b85c:	ldr	x20, [x19, #24]
  40b860:	cbnz	x20, 40b820 <feof@plt+0x8740>
  40b864:	ldp	x20, x19, [sp, #32]
  40b868:	ldr	x21, [sp, #16]
  40b86c:	ldp	x29, x30, [sp], #48
  40b870:	ret
  40b874:	stp	x29, x30, [sp, #-80]!
  40b878:	stp	x26, x25, [sp, #16]
  40b87c:	stp	x24, x23, [sp, #32]
  40b880:	stp	x22, x21, [sp, #48]
  40b884:	stp	x20, x19, [sp, #64]
  40b888:	mov	x29, sp
  40b88c:	ldp	x20, x24, [x0]
  40b890:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  40b894:	sub	x8, x24, x20
  40b898:	cmp	x8, x9
  40b89c:	b.eq	40b974 <feof@plt+0x8894>  // b.none
  40b8a0:	asr	x9, x8, #4
  40b8a4:	cmp	x8, #0x0
  40b8a8:	csinc	x10, x9, xzr, ne  // ne = any
  40b8ac:	adds	x9, x10, x9
  40b8b0:	lsr	x11, x9, #59
  40b8b4:	cset	w10, cs  // cs = hs, nlast
  40b8b8:	cmp	x11, #0x0
  40b8bc:	cset	w11, ne  // ne = any
  40b8c0:	orr	w10, w10, w11
  40b8c4:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40b8c8:	cmp	w10, #0x0
  40b8cc:	csel	x25, x8, x9, ne  // ne = any
  40b8d0:	sub	x8, x1, x20
  40b8d4:	mov	x23, x2
  40b8d8:	mov	x19, x0
  40b8dc:	mov	x21, x1
  40b8e0:	asr	x26, x8, #4
  40b8e4:	cbz	x25, 40b8f8 <feof@plt+0x8818>
  40b8e8:	lsl	x0, x25, #4
  40b8ec:	bl	402d30 <_Znwm@plt>
  40b8f0:	mov	x22, x0
  40b8f4:	b	40b8fc <feof@plt+0x881c>
  40b8f8:	mov	x22, xzr
  40b8fc:	ldr	q0, [x23]
  40b900:	cmp	x20, x21
  40b904:	mov	x8, x22
  40b908:	str	q0, [x22, x26, lsl #4]
  40b90c:	b.eq	40b928 <feof@plt+0x8848>  // b.none
  40b910:	mov	x8, x22
  40b914:	mov	x9, x20
  40b918:	ldr	q0, [x9], #16
  40b91c:	cmp	x21, x9
  40b920:	str	q0, [x8], #16
  40b924:	b.ne	40b918 <feof@plt+0x8838>  // b.any
  40b928:	cmp	x24, x21
  40b92c:	add	x23, x8, #0x10
  40b930:	b.eq	40b944 <feof@plt+0x8864>  // b.none
  40b934:	ldr	q0, [x21], #16
  40b938:	cmp	x24, x21
  40b93c:	str	q0, [x23], #16
  40b940:	b.ne	40b934 <feof@plt+0x8854>  // b.any
  40b944:	cbz	x20, 40b950 <feof@plt+0x8870>
  40b948:	mov	x0, x20
  40b94c:	bl	402d00 <_ZdlPv@plt>
  40b950:	add	x8, x22, x25, lsl #4
  40b954:	stp	x22, x23, [x19]
  40b958:	str	x8, [x19, #16]
  40b95c:	ldp	x20, x19, [sp, #64]
  40b960:	ldp	x22, x21, [sp, #48]
  40b964:	ldp	x24, x23, [sp, #32]
  40b968:	ldp	x26, x25, [sp, #16]
  40b96c:	ldp	x29, x30, [sp], #80
  40b970:	ret
  40b974:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40b978:	add	x0, x0, #0x4b5
  40b97c:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40b980:	sub	sp, sp, #0x60
  40b984:	stp	x29, x30, [sp, #16]
  40b988:	str	x25, [sp, #32]
  40b98c:	stp	x24, x23, [sp, #48]
  40b990:	stp	x22, x21, [sp, #64]
  40b994:	stp	x20, x19, [sp, #80]
  40b998:	add	x29, sp, #0x10
  40b99c:	sub	x8, x1, x0
  40b9a0:	cmp	x8, #0x101
  40b9a4:	b.lt	40bab0 <feof@plt+0x89d0>  // b.tstop
  40b9a8:	mov	x20, x1
  40b9ac:	mov	x19, x0
  40b9b0:	mov	x21, x2
  40b9b4:	add	x22, x0, #0x10
  40b9b8:	b	40b9e0 <feof@plt+0x8900>
  40b9bc:	sub	x21, x21, #0x1
  40b9c0:	mov	x0, x23
  40b9c4:	mov	x1, x20
  40b9c8:	mov	x2, x21
  40b9cc:	bl	40b980 <feof@plt+0x88a0>
  40b9d0:	sub	x8, x23, x19
  40b9d4:	cmp	x8, #0x100
  40b9d8:	mov	x20, x23
  40b9dc:	b.le	40bab0 <feof@plt+0x89d0>
  40b9e0:	cbz	x21, 40ba68 <feof@plt+0x8988>
  40b9e4:	lsr	x8, x8, #1
  40b9e8:	and	x8, x8, #0x7ffffffffffffff0
  40b9ec:	add	x2, x19, x8
  40b9f0:	sub	x3, x20, #0x10
  40b9f4:	mov	x0, x19
  40b9f8:	mov	x1, x22
  40b9fc:	bl	40bf30 <feof@plt+0x8e50>
  40ba00:	mov	x25, x20
  40ba04:	mov	x23, x22
  40ba08:	ldr	x0, [x23]
  40ba0c:	ldr	x24, [x19]
  40ba10:	mov	x1, x24
  40ba14:	bl	402ed0 <strcmp@plt>
  40ba18:	tbz	w0, #31, 40ba24 <feof@plt+0x8944>
  40ba1c:	ldr	x0, [x23, #16]!
  40ba20:	b	40ba10 <feof@plt+0x8930>
  40ba24:	ldr	x1, [x25, #-16]!
  40ba28:	mov	x0, x24
  40ba2c:	bl	402ed0 <strcmp@plt>
  40ba30:	tbnz	w0, #31, 40ba24 <feof@plt+0x8944>
  40ba34:	cmp	x25, x23
  40ba38:	b.ls	40b9bc <feof@plt+0x88dc>  // b.plast
  40ba3c:	ldr	q0, [x23]
  40ba40:	str	q0, [sp]
  40ba44:	ldr	w8, [x25, #8]
  40ba48:	ldr	x9, [x25]
  40ba4c:	str	w8, [x23, #8]
  40ba50:	str	x9, [x23], #16
  40ba54:	ldr	w8, [sp, #8]
  40ba58:	ldr	x9, [sp]
  40ba5c:	str	w8, [x25, #8]
  40ba60:	str	x9, [x25]
  40ba64:	b	40ba08 <feof@plt+0x8928>
  40ba68:	mov	x0, x19
  40ba6c:	mov	x1, x20
  40ba70:	mov	x2, x20
  40ba74:	bl	40bd0c <feof@plt+0x8c2c>
  40ba78:	sub	x20, x20, #0x10
  40ba7c:	ldr	w8, [x19, #8]
  40ba80:	ldr	x9, [x19]
  40ba84:	ldp	x3, x4, [x20]
  40ba88:	sub	x21, x20, x19
  40ba8c:	asr	x2, x21, #4
  40ba90:	mov	x0, x19
  40ba94:	mov	x1, xzr
  40ba98:	str	x9, [x20]
  40ba9c:	str	w8, [x20, #8]
  40baa0:	bl	40bdd8 <feof@plt+0x8cf8>
  40baa4:	cmp	x21, #0x10
  40baa8:	sub	x20, x20, #0x10
  40baac:	b.gt	40ba7c <feof@plt+0x899c>
  40bab0:	ldp	x20, x19, [sp, #80]
  40bab4:	ldp	x22, x21, [sp, #64]
  40bab8:	ldp	x24, x23, [sp, #48]
  40babc:	ldr	x25, [sp, #32]
  40bac0:	ldp	x29, x30, [sp, #16]
  40bac4:	add	sp, sp, #0x60
  40bac8:	ret
  40bacc:	sub	sp, sp, #0x60
  40bad0:	stp	x29, x30, [sp, #16]
  40bad4:	stp	x26, x25, [sp, #32]
  40bad8:	stp	x24, x23, [sp, #48]
  40badc:	stp	x22, x21, [sp, #64]
  40bae0:	stp	x20, x19, [sp, #80]
  40bae4:	add	x29, sp, #0x10
  40bae8:	sub	x8, x1, x0
  40baec:	mov	x19, x1
  40baf0:	mov	x20, x0
  40baf4:	cmp	x8, #0x101
  40baf8:	b.lt	40bbbc <feof@plt+0x8adc>  // b.tstop
  40bafc:	add	x22, x20, #0x10
  40bb00:	mov	w23, #0x1                   	// #1
  40bb04:	mov	x26, x20
  40bb08:	b	40bb28 <feof@plt+0x8a48>
  40bb0c:	str	x21, [x26]
  40bb10:	str	w25, [x26, #8]
  40bb14:	add	x23, x23, #0x1
  40bb18:	cmp	x23, #0x10
  40bb1c:	add	x22, x22, #0x10
  40bb20:	mov	x26, x24
  40bb24:	b.eq	40bc84 <feof@plt+0x8ba4>  // b.none
  40bb28:	add	x24, x20, x23, lsl #4
  40bb2c:	ldr	x21, [x24]
  40bb30:	ldr	x1, [x20]
  40bb34:	mov	x0, x21
  40bb38:	bl	402ed0 <strcmp@plt>
  40bb3c:	tbz	w0, #31, 40bb74 <feof@plt+0x8a94>
  40bb40:	ldr	q0, [x24]
  40bb44:	subs	x2, x24, x20
  40bb48:	str	q0, [sp]
  40bb4c:	b.eq	40bb60 <feof@plt+0x8a80>  // b.none
  40bb50:	sub	x8, x26, x2
  40bb54:	add	x0, x8, #0x20
  40bb58:	mov	x1, x20
  40bb5c:	bl	402e30 <memmove@plt>
  40bb60:	ldr	w8, [sp, #8]
  40bb64:	ldr	x9, [sp]
  40bb68:	str	w8, [x20, #8]
  40bb6c:	str	x9, [x20]
  40bb70:	b	40bb14 <feof@plt+0x8a34>
  40bb74:	ldr	x1, [x26]
  40bb78:	ldr	w25, [x26, #24]
  40bb7c:	mov	x0, x21
  40bb80:	bl	402ed0 <strcmp@plt>
  40bb84:	mov	x26, x24
  40bb88:	tbz	w0, #31, 40bb0c <feof@plt+0x8a2c>
  40bb8c:	mov	x8, x22
  40bb90:	mov	x26, x22
  40bb94:	ldr	x9, [x26, #-16]!
  40bb98:	ldur	w10, [x8, #-8]
  40bb9c:	ldur	x1, [x8, #-32]
  40bba0:	mov	x0, x21
  40bba4:	str	x9, [x8]
  40bba8:	str	w10, [x8, #8]
  40bbac:	bl	402ed0 <strcmp@plt>
  40bbb0:	mov	x8, x26
  40bbb4:	tbnz	w0, #31, 40bb94 <feof@plt+0x8ab4>
  40bbb8:	b	40bb0c <feof@plt+0x8a2c>
  40bbbc:	cmp	x20, x19
  40bbc0:	b.eq	40bc90 <feof@plt+0x8bb0>  // b.none
  40bbc4:	add	x8, x20, #0x10
  40bbc8:	cmp	x8, x19
  40bbcc:	b.eq	40bc90 <feof@plt+0x8bb0>  // b.none
  40bbd0:	mov	x24, x20
  40bbd4:	b	40bbf0 <feof@plt+0x8b10>
  40bbd8:	str	x21, [x24]
  40bbdc:	str	w23, [x24, #8]
  40bbe0:	add	x8, x22, #0x10
  40bbe4:	cmp	x8, x19
  40bbe8:	mov	x24, x22
  40bbec:	b.eq	40bc90 <feof@plt+0x8bb0>  // b.none
  40bbf0:	ldr	x21, [x8]
  40bbf4:	ldr	x1, [x20]
  40bbf8:	mov	x22, x8
  40bbfc:	mov	x0, x21
  40bc00:	bl	402ed0 <strcmp@plt>
  40bc04:	tbz	w0, #31, 40bc3c <feof@plt+0x8b5c>
  40bc08:	ldr	q0, [x22]
  40bc0c:	subs	x2, x22, x20
  40bc10:	str	q0, [sp]
  40bc14:	b.eq	40bc28 <feof@plt+0x8b48>  // b.none
  40bc18:	sub	x8, x24, x2
  40bc1c:	add	x0, x8, #0x20
  40bc20:	mov	x1, x20
  40bc24:	bl	402e30 <memmove@plt>
  40bc28:	ldr	w8, [sp, #8]
  40bc2c:	ldr	x9, [sp]
  40bc30:	str	w8, [x20, #8]
  40bc34:	str	x9, [x20]
  40bc38:	b	40bbe0 <feof@plt+0x8b00>
  40bc3c:	ldr	x1, [x24]
  40bc40:	ldr	w23, [x24, #24]
  40bc44:	mov	x0, x21
  40bc48:	bl	402ed0 <strcmp@plt>
  40bc4c:	mov	x24, x22
  40bc50:	tbz	w0, #31, 40bbd8 <feof@plt+0x8af8>
  40bc54:	mov	x8, x22
  40bc58:	mov	x24, x22
  40bc5c:	ldr	x9, [x24, #-16]!
  40bc60:	ldur	w10, [x8, #-8]
  40bc64:	ldur	x1, [x8, #-32]
  40bc68:	mov	x0, x21
  40bc6c:	str	x9, [x8]
  40bc70:	str	w10, [x8, #8]
  40bc74:	bl	402ed0 <strcmp@plt>
  40bc78:	mov	x8, x24
  40bc7c:	tbnz	w0, #31, 40bc5c <feof@plt+0x8b7c>
  40bc80:	b	40bbd8 <feof@plt+0x8af8>
  40bc84:	add	x21, x20, #0x100
  40bc88:	cmp	x21, x19
  40bc8c:	b.ne	40bcc0 <feof@plt+0x8be0>  // b.any
  40bc90:	ldp	x20, x19, [sp, #80]
  40bc94:	ldp	x22, x21, [sp, #64]
  40bc98:	ldp	x24, x23, [sp, #48]
  40bc9c:	ldp	x26, x25, [sp, #32]
  40bca0:	ldp	x29, x30, [sp, #16]
  40bca4:	add	sp, sp, #0x60
  40bca8:	ret
  40bcac:	add	x21, x21, #0x10
  40bcb0:	cmp	x21, x19
  40bcb4:	str	x20, [x23]
  40bcb8:	str	w22, [x23, #8]
  40bcbc:	b.eq	40bc90 <feof@plt+0x8bb0>  // b.none
  40bcc0:	ldr	x20, [x21]
  40bcc4:	ldur	x1, [x21, #-16]
  40bcc8:	ldr	w22, [x21, #8]
  40bccc:	mov	x0, x20
  40bcd0:	bl	402ed0 <strcmp@plt>
  40bcd4:	mov	x23, x21
  40bcd8:	tbz	w0, #31, 40bcac <feof@plt+0x8bcc>
  40bcdc:	mov	x8, x21
  40bce0:	mov	x23, x21
  40bce4:	ldr	x9, [x23, #-16]!
  40bce8:	ldur	w10, [x8, #-8]
  40bcec:	ldur	x1, [x8, #-32]
  40bcf0:	mov	x0, x20
  40bcf4:	str	x9, [x8]
  40bcf8:	str	w10, [x8, #8]
  40bcfc:	bl	402ed0 <strcmp@plt>
  40bd00:	mov	x8, x23
  40bd04:	tbnz	w0, #31, 40bce4 <feof@plt+0x8c04>
  40bd08:	b	40bcac <feof@plt+0x8bcc>
  40bd0c:	stp	x29, x30, [sp, #-64]!
  40bd10:	stp	x24, x23, [sp, #16]
  40bd14:	stp	x22, x21, [sp, #32]
  40bd18:	stp	x20, x19, [sp, #48]
  40bd1c:	mov	x29, sp
  40bd20:	sub	x8, x1, x0
  40bd24:	mov	x19, x2
  40bd28:	mov	x20, x1
  40bd2c:	mov	x21, x0
  40bd30:	cmp	x8, #0x20
  40bd34:	asr	x22, x8, #4
  40bd38:	b.lt	40bd84 <feof@plt+0x8ca4>  // b.tstop
  40bd3c:	sub	x8, x22, #0x2
  40bd40:	sub	x9, x22, #0x1
  40bd44:	cmp	x8, #0x0
  40bd48:	csel	x8, x9, x8, lt  // lt = tstop
  40bd4c:	asr	x23, x8, #1
  40bd50:	add	x8, x21, x23, lsl #4
  40bd54:	add	x24, x8, #0x8
  40bd58:	ldp	x3, x4, [x24, #-8]
  40bd5c:	mov	x0, x21
  40bd60:	mov	x1, x23
  40bd64:	mov	x2, x22
  40bd68:	bl	40bdd8 <feof@plt+0x8cf8>
  40bd6c:	sub	x23, x23, #0x1
  40bd70:	cmn	x23, #0x1
  40bd74:	sub	x24, x24, #0x10
  40bd78:	b.ne	40bd58 <feof@plt+0x8c78>  // b.any
  40bd7c:	b	40bd84 <feof@plt+0x8ca4>
  40bd80:	add	x20, x20, #0x10
  40bd84:	cmp	x20, x19
  40bd88:	b.cs	40bdc4 <feof@plt+0x8ce4>  // b.hs, b.nlast
  40bd8c:	ldr	x0, [x20]
  40bd90:	ldr	x1, [x21]
  40bd94:	bl	402ed0 <strcmp@plt>
  40bd98:	tbz	w0, #31, 40bd80 <feof@plt+0x8ca0>
  40bd9c:	ldr	x8, [x21]
  40bda0:	ldr	w9, [x21, #8]
  40bda4:	ldp	x3, x4, [x20]
  40bda8:	mov	x0, x21
  40bdac:	mov	x1, xzr
  40bdb0:	mov	x2, x22
  40bdb4:	str	w9, [x20, #8]
  40bdb8:	str	x8, [x20]
  40bdbc:	bl	40bdd8 <feof@plt+0x8cf8>
  40bdc0:	b	40bd80 <feof@plt+0x8ca0>
  40bdc4:	ldp	x20, x19, [sp, #48]
  40bdc8:	ldp	x22, x21, [sp, #32]
  40bdcc:	ldp	x24, x23, [sp, #16]
  40bdd0:	ldp	x29, x30, [sp], #64
  40bdd4:	ret
  40bdd8:	stp	x29, x30, [sp, #-96]!
  40bddc:	stp	x28, x27, [sp, #16]
  40bde0:	stp	x26, x25, [sp, #32]
  40bde4:	stp	x24, x23, [sp, #48]
  40bde8:	stp	x22, x21, [sp, #64]
  40bdec:	stp	x20, x19, [sp, #80]
  40bdf0:	mov	x29, sp
  40bdf4:	sub	x25, x2, #0x1
  40bdf8:	cmp	x25, #0x0
  40bdfc:	csel	x8, x2, x25, lt  // lt = tstop
  40be00:	asr	x26, x8, #1
  40be04:	mov	x19, x4
  40be08:	mov	x20, x3
  40be0c:	mov	x23, x2
  40be10:	mov	x22, x1
  40be14:	mov	x21, x0
  40be18:	cmp	x26, x1
  40be1c:	mov	x24, x1
  40be20:	b.le	40be78 <feof@plt+0x8d98>
  40be24:	mov	x27, x22
  40be28:	lsl	x8, x27, #1
  40be2c:	mov	w24, #0x1                   	// #1
  40be30:	add	x28, x8, #0x2
  40be34:	bfi	x24, x27, #1, #63
  40be38:	lsl	x8, x28, #4
  40be3c:	lsl	x9, x24, #4
  40be40:	ldr	x0, [x21, x8]
  40be44:	ldr	x1, [x21, x9]
  40be48:	bl	402ed0 <strcmp@plt>
  40be4c:	cmp	w0, #0x0
  40be50:	csel	x24, x24, x28, lt  // lt = tstop
  40be54:	add	x8, x21, x24, lsl #4
  40be58:	ldr	x9, [x8]
  40be5c:	ldr	w8, [x8, #8]
  40be60:	add	x10, x21, x27, lsl #4
  40be64:	cmp	x24, x26
  40be68:	mov	x27, x24
  40be6c:	str	x9, [x10]
  40be70:	str	w8, [x10, #8]
  40be74:	b.lt	40be28 <feof@plt+0x8d48>  // b.tstop
  40be78:	tbnz	w23, #0, 40beb4 <feof@plt+0x8dd4>
  40be7c:	sub	x8, x23, #0x2
  40be80:	cmp	x8, #0x0
  40be84:	csel	x8, x25, x8, lt  // lt = tstop
  40be88:	cmp	x24, x8, asr #1
  40be8c:	b.ne	40beb4 <feof@plt+0x8dd4>  // b.any
  40be90:	mov	w8, #0x1                   	// #1
  40be94:	bfi	x8, x24, #1, #63
  40be98:	add	x9, x21, x8, lsl #4
  40be9c:	ldr	w10, [x9, #8]
  40bea0:	ldr	x9, [x9]
  40bea4:	add	x11, x21, x24, lsl #4
  40bea8:	mov	x24, x8
  40beac:	str	w10, [x11, #8]
  40beb0:	str	x9, [x11]
  40beb4:	cmp	x24, x22
  40beb8:	b.le	40bf04 <feof@plt+0x8e24>
  40bebc:	sub	x8, x24, #0x1
  40bec0:	cmp	x8, #0x0
  40bec4:	csel	x8, x24, x8, lt  // lt = tstop
  40bec8:	asr	x23, x8, #1
  40becc:	add	x25, x21, x23, lsl #4
  40bed0:	ldr	x0, [x25]
  40bed4:	mov	x1, x20
  40bed8:	bl	402ed0 <strcmp@plt>
  40bedc:	tbz	w0, #31, 40bf04 <feof@plt+0x8e24>
  40bee0:	ldr	w8, [x25, #8]
  40bee4:	ldr	x9, [x25]
  40bee8:	add	x10, x21, x24, lsl #4
  40beec:	cmp	x23, x22
  40bef0:	mov	x24, x23
  40bef4:	str	w8, [x10, #8]
  40bef8:	str	x9, [x10]
  40befc:	b.gt	40bebc <feof@plt+0x8ddc>
  40bf00:	b	40bf08 <feof@plt+0x8e28>
  40bf04:	mov	x23, x24
  40bf08:	add	x8, x21, x23, lsl #4
  40bf0c:	str	x20, [x8]
  40bf10:	str	w19, [x8, #8]
  40bf14:	ldp	x20, x19, [sp, #80]
  40bf18:	ldp	x22, x21, [sp, #64]
  40bf1c:	ldp	x24, x23, [sp, #48]
  40bf20:	ldp	x26, x25, [sp, #32]
  40bf24:	ldp	x28, x27, [sp, #16]
  40bf28:	ldp	x29, x30, [sp], #96
  40bf2c:	ret
  40bf30:	sub	sp, sp, #0x60
  40bf34:	stp	x29, x30, [sp, #16]
  40bf38:	str	x25, [sp, #32]
  40bf3c:	stp	x24, x23, [sp, #48]
  40bf40:	stp	x22, x21, [sp, #64]
  40bf44:	stp	x20, x19, [sp, #80]
  40bf48:	add	x29, sp, #0x10
  40bf4c:	ldr	x24, [x1]
  40bf50:	ldr	x25, [x2]
  40bf54:	mov	x22, x1
  40bf58:	mov	x19, x0
  40bf5c:	mov	x0, x24
  40bf60:	mov	x1, x25
  40bf64:	mov	x20, x3
  40bf68:	mov	x21, x2
  40bf6c:	bl	402ed0 <strcmp@plt>
  40bf70:	ldr	x23, [x20]
  40bf74:	tbz	w0, #31, 40bf94 <feof@plt+0x8eb4>
  40bf78:	mov	x0, x25
  40bf7c:	mov	x1, x23
  40bf80:	bl	402ed0 <strcmp@plt>
  40bf84:	tbz	w0, #31, 40bfb0 <feof@plt+0x8ed0>
  40bf88:	ldr	q0, [x19]
  40bf8c:	str	q0, [sp]
  40bf90:	b	40c028 <feof@plt+0x8f48>
  40bf94:	mov	x0, x24
  40bf98:	mov	x1, x23
  40bf9c:	bl	402ed0 <strcmp@plt>
  40bfa0:	tbz	w0, #31, 40bfec <feof@plt+0x8f0c>
  40bfa4:	ldr	q0, [x19]
  40bfa8:	str	q0, [sp]
  40bfac:	b	40bfc8 <feof@plt+0x8ee8>
  40bfb0:	mov	x0, x24
  40bfb4:	mov	x1, x23
  40bfb8:	bl	402ed0 <strcmp@plt>
  40bfbc:	ldr	q0, [x19]
  40bfc0:	str	q0, [sp]
  40bfc4:	tbnz	w0, #31, 40c004 <feof@plt+0x8f24>
  40bfc8:	ldr	w8, [x22, #8]
  40bfcc:	ldr	x9, [x22]
  40bfd0:	str	w8, [x19, #8]
  40bfd4:	str	x9, [x19]
  40bfd8:	ldr	w8, [sp, #8]
  40bfdc:	ldr	x9, [sp]
  40bfe0:	str	w8, [x22, #8]
  40bfe4:	str	x9, [x22]
  40bfe8:	b	40c048 <feof@plt+0x8f68>
  40bfec:	mov	x0, x25
  40bff0:	mov	x1, x23
  40bff4:	bl	402ed0 <strcmp@plt>
  40bff8:	ldr	q0, [x19]
  40bffc:	str	q0, [sp]
  40c000:	tbz	w0, #31, 40c028 <feof@plt+0x8f48>
  40c004:	ldr	w8, [x20, #8]
  40c008:	ldr	x9, [x20]
  40c00c:	str	w8, [x19, #8]
  40c010:	str	x9, [x19]
  40c014:	ldr	w8, [sp, #8]
  40c018:	ldr	x9, [sp]
  40c01c:	str	w8, [x20, #8]
  40c020:	str	x9, [x20]
  40c024:	b	40c048 <feof@plt+0x8f68>
  40c028:	ldr	w8, [x21, #8]
  40c02c:	ldr	x9, [x21]
  40c030:	str	w8, [x19, #8]
  40c034:	str	x9, [x19]
  40c038:	ldr	w8, [sp, #8]
  40c03c:	ldr	x9, [sp]
  40c040:	str	w8, [x21, #8]
  40c044:	str	x9, [x21]
  40c048:	ldp	x20, x19, [sp, #80]
  40c04c:	ldp	x22, x21, [sp, #64]
  40c050:	ldp	x24, x23, [sp, #48]
  40c054:	ldr	x25, [sp, #32]
  40c058:	ldp	x29, x30, [sp, #16]
  40c05c:	add	sp, sp, #0x60
  40c060:	ret
  40c064:	stp	x29, x30, [sp, #-64]!
  40c068:	stp	x24, x23, [sp, #16]
  40c06c:	stp	x22, x21, [sp, #32]
  40c070:	stp	x20, x19, [sp, #48]
  40c074:	mov	x29, sp
  40c078:	add	x23, x0, #0x8
  40c07c:	mov	x20, x1
  40c080:	mov	x21, x0
  40c084:	cmp	x23, x1
  40c088:	mov	x22, x2
  40c08c:	b.eq	40c0d8 <feof@plt+0x8ff8>  // b.none
  40c090:	ldr	w22, [x22]
  40c094:	ldr	w8, [x20, #32]
  40c098:	cmp	w22, w8
  40c09c:	b.cs	40c134 <feof@plt+0x9054>  // b.hs, b.nlast
  40c0a0:	ldr	x24, [x21, #24]
  40c0a4:	cmp	x24, x20
  40c0a8:	b.eq	40c17c <feof@plt+0x909c>  // b.none
  40c0ac:	mov	x0, x20
  40c0b0:	bl	402d70 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
  40c0b4:	ldr	w8, [x0, #32]
  40c0b8:	cmp	w8, w22
  40c0bc:	b.cs	40c188 <feof@plt+0x90a8>  // b.hs, b.nlast
  40c0c0:	ldr	x8, [x0, #24]
  40c0c4:	cmp	x8, #0x0
  40c0c8:	csel	x8, xzr, x20, eq  // eq = none
  40c0cc:	csel	x19, x0, x20, eq  // eq = none
  40c0d0:	mov	x20, x8
  40c0d4:	b	40c264 <feof@plt+0x9184>
  40c0d8:	ldr	x8, [x21, #40]
  40c0dc:	cbz	x8, 40c0f4 <feof@plt+0x9014>
  40c0e0:	ldr	x19, [x21, #32]
  40c0e4:	ldr	w9, [x22]
  40c0e8:	ldr	w8, [x19, #32]
  40c0ec:	cmp	w8, w9
  40c0f0:	b.cc	40c234 <feof@plt+0x9154>  // b.lo, b.ul, b.last
  40c0f4:	ldr	x9, [x21, #16]
  40c0f8:	cbz	x9, 40c1c8 <feof@plt+0x90e8>
  40c0fc:	ldr	w8, [x22]
  40c100:	ldr	w10, [x9, #32]
  40c104:	mov	x19, x9
  40c108:	add	x9, x9, #0x10
  40c10c:	add	x11, x19, #0x18
  40c110:	cmp	w8, w10
  40c114:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  40c118:	ldr	x9, [x9]
  40c11c:	cbnz	x9, 40c100 <feof@plt+0x9020>
  40c120:	cmp	w8, w10
  40c124:	mov	x20, x19
  40c128:	mov	x0, x19
  40c12c:	b.cc	40c1cc <feof@plt+0x90ec>  // b.lo, b.ul, b.last
  40c130:	b	40c1e4 <feof@plt+0x9104>
  40c134:	cmp	w8, w22
  40c138:	b.cs	40c174 <feof@plt+0x9094>  // b.hs, b.nlast
  40c13c:	ldr	x19, [x21, #32]
  40c140:	cmp	x19, x20
  40c144:	b.eq	40c234 <feof@plt+0x9154>  // b.none
  40c148:	mov	x0, x20
  40c14c:	bl	402be0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
  40c150:	ldr	w8, [x0, #32]
  40c154:	cmp	w22, w8
  40c158:	b.cs	40c1f0 <feof@plt+0x9110>  // b.hs, b.nlast
  40c15c:	ldr	x8, [x20, #24]
  40c160:	cmp	x8, #0x0
  40c164:	csel	x8, xzr, x0, eq  // eq = none
  40c168:	csel	x19, x20, x0, eq  // eq = none
  40c16c:	mov	x20, x8
  40c170:	b	40c264 <feof@plt+0x9184>
  40c174:	mov	x19, xzr
  40c178:	b	40c264 <feof@plt+0x9184>
  40c17c:	mov	x20, x24
  40c180:	mov	x19, x24
  40c184:	b	40c264 <feof@plt+0x9184>
  40c188:	ldr	x9, [x21, #16]
  40c18c:	cbz	x9, 40c228 <feof@plt+0x9148>
  40c190:	ldr	w8, [x9, #32]
  40c194:	mov	x19, x9
  40c198:	add	x9, x9, #0x10
  40c19c:	add	x10, x19, #0x18
  40c1a0:	cmp	w22, w8
  40c1a4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  40c1a8:	ldr	x9, [x9]
  40c1ac:	cbnz	x9, 40c190 <feof@plt+0x90b0>
  40c1b0:	cmp	w22, w8
  40c1b4:	mov	x0, x19
  40c1b8:	b.cs	40c254 <feof@plt+0x9174>  // b.hs, b.nlast
  40c1bc:	cmp	x24, x19
  40c1c0:	b.ne	40c24c <feof@plt+0x916c>  // b.any
  40c1c4:	b	40c234 <feof@plt+0x9154>
  40c1c8:	mov	x19, x23
  40c1cc:	ldr	x8, [x21, #24]
  40c1d0:	cmp	x8, x20
  40c1d4:	b.eq	40c234 <feof@plt+0x9154>  // b.none
  40c1d8:	mov	x0, x20
  40c1dc:	bl	402d70 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
  40c1e0:	ldr	w8, [x22]
  40c1e4:	ldr	w9, [x0, #32]
  40c1e8:	cmp	w9, w8
  40c1ec:	b	40c25c <feof@plt+0x917c>
  40c1f0:	ldr	x9, [x21, #16]
  40c1f4:	cbz	x9, 40c23c <feof@plt+0x915c>
  40c1f8:	ldr	w8, [x9, #32]
  40c1fc:	mov	x19, x9
  40c200:	add	x9, x9, #0x10
  40c204:	add	x10, x19, #0x18
  40c208:	cmp	w22, w8
  40c20c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  40c210:	ldr	x9, [x9]
  40c214:	cbnz	x9, 40c1f8 <feof@plt+0x9118>
  40c218:	cmp	w22, w8
  40c21c:	mov	x0, x19
  40c220:	b.cc	40c240 <feof@plt+0x9160>  // b.lo, b.ul, b.last
  40c224:	b	40c254 <feof@plt+0x9174>
  40c228:	mov	x19, x23
  40c22c:	cmp	x24, x19
  40c230:	b.ne	40c24c <feof@plt+0x916c>  // b.any
  40c234:	mov	x20, xzr
  40c238:	b	40c264 <feof@plt+0x9184>
  40c23c:	mov	x19, x23
  40c240:	ldr	x8, [x21, #24]
  40c244:	cmp	x8, x19
  40c248:	b.eq	40c234 <feof@plt+0x9154>  // b.none
  40c24c:	mov	x0, x19
  40c250:	bl	402d70 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
  40c254:	ldr	w8, [x0, #32]
  40c258:	cmp	w8, w22
  40c25c:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
  40c260:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  40c264:	mov	x0, x20
  40c268:	mov	x1, x19
  40c26c:	ldp	x20, x19, [sp, #48]
  40c270:	ldp	x22, x21, [sp, #32]
  40c274:	ldp	x24, x23, [sp, #16]
  40c278:	ldp	x29, x30, [sp], #64
  40c27c:	ret
  40c280:	stp	x29, x30, [sp, #-96]!
  40c284:	stp	x28, x27, [sp, #16]
  40c288:	stp	x26, x25, [sp, #32]
  40c28c:	stp	x24, x23, [sp, #48]
  40c290:	stp	x22, x21, [sp, #64]
  40c294:	stp	x20, x19, [sp, #80]
  40c298:	mov	x29, sp
  40c29c:	cbz	x1, 40c48c <feof@plt+0x93ac>
  40c2a0:	ldp	x8, x9, [x0, #8]
  40c2a4:	mov	x10, #0x4ec5                	// #20165
  40c2a8:	movk	x10, #0xc4ec, lsl #16
  40c2ac:	movk	x10, #0xec4e, lsl #32
  40c2b0:	sub	x9, x9, x8
  40c2b4:	movk	x10, #0x4ec4, lsl #48
  40c2b8:	asr	x9, x9, #3
  40c2bc:	mul	x9, x9, x10
  40c2c0:	mov	x20, x1
  40c2c4:	mov	x19, x0
  40c2c8:	cmp	x9, x1
  40c2cc:	b.cs	40c338 <feof@plt+0x9258>  // b.hs, b.nlast
  40c2d0:	ldr	x11, [x19]
  40c2d4:	mov	x9, #0xb13b                	// #45371
  40c2d8:	movk	x9, #0x3b13, lsl #16
  40c2dc:	movk	x9, #0x13b1, lsl #32
  40c2e0:	sub	x8, x8, x11
  40c2e4:	asr	x8, x8, #3
  40c2e8:	movk	x9, #0x13b, lsl #48
  40c2ec:	mul	x22, x8, x10
  40c2f0:	sub	x8, x9, x22
  40c2f4:	cmp	x8, x20
  40c2f8:	b.cc	40c4a8 <feof@plt+0x93c8>  // b.lo, b.ul, b.last
  40c2fc:	cmp	x22, x20
  40c300:	csel	x8, x20, x22, cc  // cc = lo, ul, last
  40c304:	adds	x8, x8, x22
  40c308:	cset	w10, cs  // cs = hs, nlast
  40c30c:	cmp	x8, x9
  40c310:	cset	w11, hi  // hi = pmore
  40c314:	orr	w10, w10, w11
  40c318:	cmp	w10, #0x0
  40c31c:	csel	x24, x9, x8, ne  // ne = any
  40c320:	cbz	x24, 40c374 <feof@plt+0x9294>
  40c324:	mov	w8, #0x68                  	// #104
  40c328:	mul	x0, x24, x8
  40c32c:	bl	402d30 <_Znwm@plt>
  40c330:	mov	x21, x0
  40c334:	b	40c378 <feof@plt+0x9298>
  40c338:	movi	v0.2d, #0x0
  40c33c:	ldrb	w9, [x8, #48]
  40c340:	str	xzr, [x8, #40]
  40c344:	stp	q0, q0, [x8]
  40c348:	str	wzr, [x8, #32]
  40c34c:	and	w9, w9, #0x80
  40c350:	str	xzr, [x8, #96]
  40c354:	stur	q0, [x8, #56]
  40c358:	stur	q0, [x8, #72]
  40c35c:	subs	x20, x20, #0x1
  40c360:	strb	w9, [x8, #48]
  40c364:	add	x8, x8, #0x68
  40c368:	b.ne	40c33c <feof@plt+0x925c>  // b.any
  40c36c:	str	x8, [x19, #8]
  40c370:	b	40c48c <feof@plt+0x93ac>
  40c374:	mov	x21, xzr
  40c378:	mov	w8, #0x68                  	// #104
  40c37c:	madd	x25, x22, x8, x21
  40c380:	add	x8, x25, #0x30
  40c384:	movi	v0.2d, #0x0
  40c388:	mov	x9, x20
  40c38c:	ldrb	w10, [x8]
  40c390:	stur	xzr, [x8, #-8]
  40c394:	stp	q0, q0, [x8, #-48]
  40c398:	stur	wzr, [x8, #-16]
  40c39c:	and	w10, w10, #0x80
  40c3a0:	str	xzr, [x8, #48]
  40c3a4:	stur	q0, [x8, #8]
  40c3a8:	stur	q0, [x8, #24]
  40c3ac:	subs	x9, x9, #0x1
  40c3b0:	strb	w10, [x8], #104
  40c3b4:	b.ne	40c38c <feof@plt+0x92ac>  // b.any
  40c3b8:	ldp	x22, x26, [x19]
  40c3bc:	cmp	x22, x26
  40c3c0:	b.eq	40c46c <feof@plt+0x938c>  // b.none
  40c3c4:	mov	x27, x21
  40c3c8:	b	40c3dc <feof@plt+0x92fc>
  40c3cc:	add	x22, x22, #0x68
  40c3d0:	cmp	x22, x26
  40c3d4:	add	x27, x27, #0x68
  40c3d8:	b.eq	40c468 <feof@plt+0x9388>  // b.none
  40c3dc:	ldrb	w8, [x22, #48]
  40c3e0:	ldp	q1, q0, [x22, #16]
  40c3e4:	ldr	q2, [x22]
  40c3e8:	strb	w8, [x27, #48]
  40c3ec:	stp	q1, q0, [x27, #16]
  40c3f0:	str	q2, [x27]
  40c3f4:	ldr	x8, [x22, #56]
  40c3f8:	str	x8, [x27, #56]
  40c3fc:	ldr	x8, [x22, #64]
  40c400:	str	x8, [x27, #64]
  40c404:	ldr	x8, [x22, #72]
  40c408:	str	x8, [x27, #72]
  40c40c:	ldr	q0, [x22, #80]
  40c410:	ldr	x8, [x22, #96]
  40c414:	stp	xzr, xzr, [x22, #56]
  40c418:	str	xzr, [x22, #72]
  40c41c:	str	q0, [x27, #80]
  40c420:	str	x8, [x27, #96]
  40c424:	ldp	x23, x28, [x22, #56]
  40c428:	cmp	x23, x28
  40c42c:	b.ne	40c444 <feof@plt+0x9364>  // b.any
  40c430:	cbnz	x23, 40c45c <feof@plt+0x937c>
  40c434:	b	40c3cc <feof@plt+0x92ec>
  40c438:	add	x23, x23, #0x20
  40c43c:	cmp	x28, x23
  40c440:	b.eq	40c454 <feof@plt+0x9374>  // b.none
  40c444:	ldr	x0, [x23, #8]
  40c448:	cbz	x0, 40c438 <feof@plt+0x9358>
  40c44c:	bl	402d00 <_ZdlPv@plt>
  40c450:	b	40c438 <feof@plt+0x9358>
  40c454:	ldr	x23, [x22, #56]
  40c458:	cbz	x23, 40c3cc <feof@plt+0x92ec>
  40c45c:	mov	x0, x23
  40c460:	bl	402d00 <_ZdlPv@plt>
  40c464:	b	40c3cc <feof@plt+0x92ec>
  40c468:	ldr	x22, [x19]
  40c46c:	cbz	x22, 40c478 <feof@plt+0x9398>
  40c470:	mov	x0, x22
  40c474:	bl	402d00 <_ZdlPv@plt>
  40c478:	mov	w8, #0x68                  	// #104
  40c47c:	madd	x9, x20, x8, x25
  40c480:	madd	x8, x24, x8, x21
  40c484:	stp	x21, x9, [x19]
  40c488:	str	x8, [x19, #16]
  40c48c:	ldp	x20, x19, [sp, #80]
  40c490:	ldp	x22, x21, [sp, #64]
  40c494:	ldp	x24, x23, [sp, #48]
  40c498:	ldp	x26, x25, [sp, #32]
  40c49c:	ldp	x28, x27, [sp, #16]
  40c4a0:	ldp	x29, x30, [sp], #96
  40c4a4:	ret
  40c4a8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40c4ac:	add	x0, x0, #0x609
  40c4b0:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40c4b4:	stp	x29, x30, [sp, #-80]!
  40c4b8:	str	x25, [sp, #16]
  40c4bc:	stp	x24, x23, [sp, #32]
  40c4c0:	stp	x22, x21, [sp, #48]
  40c4c4:	stp	x20, x19, [sp, #64]
  40c4c8:	mov	x29, sp
  40c4cc:	ldp	x20, x24, [x0]
  40c4d0:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  40c4d4:	sub	x8, x24, x20
  40c4d8:	cmp	x8, x9
  40c4dc:	b.eq	40c608 <feof@plt+0x9528>  // b.none
  40c4e0:	asr	x9, x8, #5
  40c4e4:	cmp	x8, #0x0
  40c4e8:	csinc	x8, x9, xzr, ne  // ne = any
  40c4ec:	adds	x8, x8, x9
  40c4f0:	lsr	x10, x8, #58
  40c4f4:	cset	w9, cs  // cs = hs, nlast
  40c4f8:	cmp	x10, #0x0
  40c4fc:	cset	w10, ne  // ne = any
  40c500:	orr	w9, w9, w10
  40c504:	cmp	w9, #0x0
  40c508:	mov	x9, #0x3ffffffffffffff     	// #288230376151711743
  40c50c:	csel	x25, x9, x8, ne  // ne = any
  40c510:	mov	x19, x0
  40c514:	lsl	x0, x25, #5
  40c518:	mov	x23, x2
  40c51c:	mov	x21, x1
  40c520:	bl	402d30 <_Znwm@plt>
  40c524:	ldr	w8, [x23]
  40c528:	subs	x9, x21, x20
  40c52c:	add	x9, x0, x9
  40c530:	mov	x22, x0
  40c534:	str	w8, [x9]
  40c538:	ldur	q0, [x23, #8]
  40c53c:	stur	q0, [x9, #8]
  40c540:	ldr	x8, [x23, #24]
  40c544:	str	x8, [x9, #24]
  40c548:	mov	x8, x0
  40c54c:	stp	xzr, xzr, [x23, #8]
  40c550:	str	xzr, [x23, #24]
  40c554:	b.eq	40c594 <feof@plt+0x94b4>  // b.none
  40c558:	mov	x9, x20
  40c55c:	ldr	w10, [x9]
  40c560:	str	w10, [x8]
  40c564:	ldr	x10, [x9, #8]
  40c568:	str	x10, [x8, #8]
  40c56c:	ldr	x10, [x9, #16]
  40c570:	str	x10, [x8, #16]
  40c574:	ldr	x10, [x9, #24]
  40c578:	str	x10, [x8, #24]
  40c57c:	stp	xzr, xzr, [x9, #8]
  40c580:	str	xzr, [x9, #24]
  40c584:	add	x9, x9, #0x20
  40c588:	cmp	x9, x21
  40c58c:	add	x8, x8, #0x20
  40c590:	b.ne	40c55c <feof@plt+0x947c>  // b.any
  40c594:	cmp	x24, x21
  40c598:	add	x23, x8, #0x20
  40c59c:	b.eq	40c5d8 <feof@plt+0x94f8>  // b.none
  40c5a0:	ldr	w8, [x21]
  40c5a4:	str	w8, [x23]
  40c5a8:	ldr	x8, [x21, #8]
  40c5ac:	str	x8, [x23, #8]
  40c5b0:	ldr	x8, [x21, #16]
  40c5b4:	str	x8, [x23, #16]
  40c5b8:	ldr	x8, [x21, #24]
  40c5bc:	str	x8, [x23, #24]
  40c5c0:	stp	xzr, xzr, [x21, #8]
  40c5c4:	str	xzr, [x21, #24]
  40c5c8:	add	x21, x21, #0x20
  40c5cc:	cmp	x21, x24
  40c5d0:	add	x23, x23, #0x20
  40c5d4:	b.ne	40c5a0 <feof@plt+0x94c0>  // b.any
  40c5d8:	cbz	x20, 40c5e4 <feof@plt+0x9504>
  40c5dc:	mov	x0, x20
  40c5e0:	bl	402d00 <_ZdlPv@plt>
  40c5e4:	add	x8, x22, x25, lsl #5
  40c5e8:	stp	x22, x23, [x19]
  40c5ec:	str	x8, [x19, #16]
  40c5f0:	ldp	x20, x19, [sp, #64]
  40c5f4:	ldp	x22, x21, [sp, #48]
  40c5f8:	ldp	x24, x23, [sp, #32]
  40c5fc:	ldr	x25, [sp, #16]
  40c600:	ldp	x29, x30, [sp], #80
  40c604:	ret
  40c608:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40c60c:	add	x0, x0, #0x4b5
  40c610:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40c614:	ret
  40c618:	ldr	w8, [x0, #32]
  40c61c:	ldr	w14, [x0, #40]
  40c620:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1838>
  40c624:	add	x15, x15, #0xf68
  40c628:	add	w8, w8, #0x1
  40c62c:	add	x9, x15, x14, lsl #4
  40c630:	str	w8, [x0, #32]
  40c634:	ldp	w16, w8, [x9]
  40c638:	mov	w13, w2
  40c63c:	ldr	w12, [x9, #12]
  40c640:	ldr	x9, [x0]
  40c644:	mul	x8, x8, x13
  40c648:	lsr	x8, x8, #32
  40c64c:	sub	w10, w2, w8
  40c650:	add	w8, w8, w10, lsr #1
  40c654:	lsr	w8, w8, w12
  40c658:	msub	w10, w8, w16, w2
  40c65c:	add	x8, x9, w10, uxtw #4
  40c660:	ldr	w17, [x8, #4]
  40c664:	cmn	w17, #0x3
  40c668:	b.eq	40c718 <feof@plt+0x9638>  // b.none
  40c66c:	ldr	x11, [x0, #8]
  40c670:	cmn	w17, #0x2
  40c674:	b.ne	40c6fc <feof@plt+0x961c>  // b.any
  40c678:	add	x8, x15, x14, lsl #4
  40c67c:	ldr	w8, [x8, #8]
  40c680:	ldr	w15, [x0, #36]
  40c684:	sub	w14, w16, #0x2
  40c688:	mul	x8, x8, x13
  40c68c:	lsr	x8, x8, #32
  40c690:	sub	w13, w2, w8
  40c694:	add	w8, w8, w13, lsr #1
  40c698:	lsr	w8, w8, w12
  40c69c:	msub	w8, w8, w14, w2
  40c6a0:	add	w12, w8, #0x1
  40c6a4:	add	w13, w15, #0x1
  40c6a8:	b	40c6b0 <feof@plt+0x95d0>
  40c6ac:	add	w13, w13, #0x1
  40c6b0:	add	w8, w12, w10
  40c6b4:	cmp	x11, x8
  40c6b8:	csel	w10, wzr, w11, hi  // hi = pmore
  40c6bc:	sub	w10, w8, w10
  40c6c0:	str	w13, [x0, #36]
  40c6c4:	add	x8, x9, w10, uxtw #4
  40c6c8:	ldr	w14, [x8, #4]
  40c6cc:	cmn	w14, #0x2
  40c6d0:	b.eq	40c6ac <feof@plt+0x95cc>  // b.none
  40c6d4:	cmn	w14, #0x3
  40c6d8:	b.eq	40c718 <feof@plt+0x9638>  // b.none
  40c6dc:	ldr	w15, [x8]
  40c6e0:	ldr	w16, [x1]
  40c6e4:	cmp	w15, w16
  40c6e8:	b.ne	40c6ac <feof@plt+0x95cc>  // b.any
  40c6ec:	ldr	w15, [x1, #4]
  40c6f0:	cmp	w14, w15
  40c6f4:	b.ne	40c6ac <feof@plt+0x95cc>  // b.any
  40c6f8:	b	40c718 <feof@plt+0x9638>
  40c6fc:	ldr	w18, [x8]
  40c700:	ldr	w3, [x1]
  40c704:	cmp	w18, w3
  40c708:	b.ne	40c678 <feof@plt+0x9598>  // b.any
  40c70c:	ldr	w18, [x1, #4]
  40c710:	cmp	w17, w18
  40c714:	b.ne	40c678 <feof@plt+0x9598>  // b.any
  40c718:	mov	x0, x8
  40c71c:	ret
  40c720:	stp	x29, x30, [sp, #-48]!
  40c724:	stp	x22, x21, [sp, #16]
  40c728:	stp	x20, x19, [sp, #32]
  40c72c:	mov	x29, sp
  40c730:	mov	w20, w3
  40c734:	mov	w22, w2
  40c738:	mov	x21, x1
  40c73c:	cmp	w3, #0x1
  40c740:	mov	x19, x0
  40c744:	b.ne	40c760 <feof@plt+0x9680>  // b.any
  40c748:	ldp	x8, x9, [x19, #8]
  40c74c:	add	x8, x8, x8, lsl #1
  40c750:	cmp	x8, x9, lsl #2
  40c754:	b.hi	40c760 <feof@plt+0x9680>  // b.pmore
  40c758:	mov	x0, x19
  40c75c:	bl	40c8c0 <feof@plt+0x97e0>
  40c760:	ldr	w8, [x19, #32]
  40c764:	ldr	w9, [x19, #40]
  40c768:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  40c76c:	add	x10, x10, #0xf68
  40c770:	add	w8, w8, #0x1
  40c774:	add	x10, x10, x9, lsl #4
  40c778:	str	w8, [x19, #32]
  40c77c:	ldp	w12, w8, [x10]
  40c780:	mov	w14, w22
  40c784:	ldr	w13, [x10, #12]
  40c788:	mul	x8, x8, x14
  40c78c:	lsr	x9, x8, #32
  40c790:	sub	w11, w22, w9
  40c794:	ldr	x8, [x19]
  40c798:	add	w9, w9, w11, lsr #1
  40c79c:	lsr	w9, w9, w13
  40c7a0:	msub	w9, w9, w12, w22
  40c7a4:	add	x0, x8, w9, uxtw #4
  40c7a8:	ldr	w16, [x0, #4]
  40c7ac:	cmn	w16, #0x3
  40c7b0:	b.eq	40c84c <feof@plt+0x976c>  // b.none
  40c7b4:	ldr	w15, [x10, #8]
  40c7b8:	ldr	x11, [x19, #8]
  40c7bc:	cmn	w16, #0x2
  40c7c0:	b.ne	40c874 <feof@plt+0x9794>  // b.any
  40c7c4:	mov	x10, x0
  40c7c8:	sub	w16, w12, #0x2
  40c7cc:	mul	x12, x15, x14
  40c7d0:	lsr	x12, x12, #32
  40c7d4:	sub	w14, w22, w12
  40c7d8:	add	w14, w12, w14, lsr #1
  40c7dc:	ldr	w12, [x19, #36]
  40c7e0:	lsr	w13, w14, w13
  40c7e4:	msub	w13, w13, w16, w22
  40c7e8:	add	w13, w13, #0x1
  40c7ec:	add	w12, w12, #0x1
  40c7f0:	add	w9, w13, w9
  40c7f4:	cmp	x11, x9
  40c7f8:	csel	w14, wzr, w11, hi  // hi = pmore
  40c7fc:	sub	w9, w9, w14
  40c800:	str	w12, [x19, #36]
  40c804:	add	x0, x8, w9, uxtw #4
  40c808:	ldr	w14, [x0, #4]
  40c80c:	cmn	w14, #0x3
  40c810:	b.eq	40c850 <feof@plt+0x9770>  // b.none
  40c814:	cmn	w14, #0x2
  40c818:	b.eq	40c840 <feof@plt+0x9760>  // b.none
  40c81c:	ldr	w15, [x0]
  40c820:	ldr	w16, [x21]
  40c824:	add	w12, w12, #0x1
  40c828:	cmp	w15, w16
  40c82c:	b.ne	40c7f0 <feof@plt+0x9710>  // b.any
  40c830:	ldr	w15, [x21, #4]
  40c834:	cmp	w14, w15
  40c838:	b.ne	40c7f0 <feof@plt+0x9710>  // b.any
  40c83c:	b	40c8b0 <feof@plt+0x97d0>
  40c840:	cmp	x10, #0x0
  40c844:	csel	x10, x0, x10, eq  // eq = none
  40c848:	b	40c7ec <feof@plt+0x970c>
  40c84c:	mov	x10, xzr
  40c850:	cbz	w20, 40c898 <feof@plt+0x97b8>
  40c854:	cbz	x10, 40c8a0 <feof@plt+0x97c0>
  40c858:	ldr	x8, [x19, #24]
  40c85c:	mov	w9, #0xfffffffd            	// #-3
  40c860:	mov	x0, x10
  40c864:	sub	x8, x8, #0x1
  40c868:	str	x8, [x19, #24]
  40c86c:	str	w9, [x10, #4]
  40c870:	b	40c8b0 <feof@plt+0x97d0>
  40c874:	ldr	w10, [x0]
  40c878:	ldr	w17, [x21]
  40c87c:	cmp	w10, w17
  40c880:	mov	x10, xzr
  40c884:	b.ne	40c7c8 <feof@plt+0x96e8>  // b.any
  40c888:	ldr	w17, [x21, #4]
  40c88c:	cmp	w16, w17
  40c890:	b.eq	40c8b0 <feof@plt+0x97d0>  // b.none
  40c894:	b	40c7c8 <feof@plt+0x96e8>
  40c898:	mov	x0, xzr
  40c89c:	b	40c8b0 <feof@plt+0x97d0>
  40c8a0:	ldr	x10, [x19, #16]
  40c8a4:	add	x0, x8, w9, uxtw #4
  40c8a8:	add	x10, x10, #0x1
  40c8ac:	str	x10, [x19, #16]
  40c8b0:	ldp	x20, x19, [sp, #32]
  40c8b4:	ldp	x22, x21, [sp, #16]
  40c8b8:	ldp	x29, x30, [sp], #48
  40c8bc:	ret
  40c8c0:	stp	x29, x30, [sp, #-64]!
  40c8c4:	stp	x24, x23, [sp, #16]
  40c8c8:	stp	x22, x21, [sp, #32]
  40c8cc:	stp	x20, x19, [sp, #48]
  40c8d0:	mov	x29, sp
  40c8d4:	ldp	x8, x9, [x0, #16]
  40c8d8:	ldp	x19, x24, [x0]
  40c8dc:	mov	x20, x0
  40c8e0:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  40c8e4:	sub	x8, x8, x9
  40c8e8:	lsl	x0, x8, #1
  40c8ec:	cmp	x0, x24
  40c8f0:	add	x23, x23, #0xf68
  40c8f4:	b.hi	40c914 <feof@plt+0x9834>  // b.pmore
  40c8f8:	ldr	w21, [x20, #40]
  40c8fc:	cmp	x24, #0x21
  40c900:	b.cc	40cb8c <feof@plt+0x9aac>  // b.lo, b.ul, b.last
  40c904:	lsl	w8, w8, #3
  40c908:	cmp	x24, x8
  40c90c:	mov	x22, x24
  40c910:	b.ls	40c928 <feof@plt+0x9848>  // b.plast
  40c914:	bl	40eacc <feof@plt+0xb9ec>
  40c918:	mov	w8, w0
  40c91c:	lsl	x8, x8, #4
  40c920:	ldr	w22, [x23, x8]
  40c924:	mov	w21, w0
  40c928:	ldrb	w8, [x20, #44]
  40c92c:	cbz	w8, 40cb98 <feof@plt+0x9ab8>
  40c930:	adrp	x1, 40c000 <feof@plt+0x8f20>
  40c934:	lsl	x0, x22, #4
  40c938:	add	x1, x1, #0x614
  40c93c:	mov	w2, #0x10                  	// #16
  40c940:	mov	x3, x22
  40c944:	bl	40efc8 <feof@plt+0xbee8>
  40c948:	cbz	x0, 40cba8 <feof@plt+0x9ac8>
  40c94c:	cbz	x22, 40c9a4 <feof@plt+0x98c4>
  40c950:	cmp	x22, #0x1
  40c954:	b.ne	40c960 <feof@plt+0x9880>  // b.any
  40c958:	mov	x8, xzr
  40c95c:	b	40c988 <feof@plt+0x98a8>
  40c960:	and	x8, x22, #0xfffffffffffffffe
  40c964:	add	x9, x0, #0x14
  40c968:	mov	w10, #0xfffffffd            	// #-3
  40c96c:	mov	x11, x8
  40c970:	stur	w10, [x9, #-16]
  40c974:	str	w10, [x9], #32
  40c978:	subs	x11, x11, #0x2
  40c97c:	b.ne	40c970 <feof@plt+0x9890>  // b.any
  40c980:	cmp	x22, x8
  40c984:	b.eq	40c9a4 <feof@plt+0x98c4>  // b.none
  40c988:	sub	x9, x22, x8
  40c98c:	add	x8, x0, x8, lsl #4
  40c990:	add	x8, x8, #0x4
  40c994:	mov	w10, #0xfffffffd            	// #-3
  40c998:	subs	x9, x9, #0x1
  40c99c:	str	w10, [x8], #16
  40c9a0:	b.ne	40c998 <feof@plt+0x98b8>  // b.any
  40c9a4:	ldp	x11, x10, [x20, #16]
  40c9a8:	mov	w9, #0x79b9                	// #31161
  40c9ac:	add	x8, x19, x24, lsl #4
  40c9b0:	movk	w9, #0x9e37, lsl #16
  40c9b4:	sub	x10, x11, x10
  40c9b8:	stp	x10, xzr, [x20, #16]
  40c9bc:	mov	w10, #0x8647                	// #34375
  40c9c0:	movk	w10, #0x61c8, lsl #16
  40c9c4:	mov	x11, x19
  40c9c8:	stp	x0, x22, [x20]
  40c9cc:	str	w21, [x20, #40]
  40c9d0:	b	40c9e8 <feof@plt+0x9908>
  40c9d4:	ldr	q0, [x11]
  40c9d8:	str	q0, [x12, x16, lsl #4]
  40c9dc:	add	x11, x11, #0x10
  40c9e0:	cmp	x11, x8
  40c9e4:	b.cs	40cb54 <feof@plt+0x9a74>  // b.hs, b.nlast
  40c9e8:	ldr	w12, [x11, #4]
  40c9ec:	add	w13, w12, #0x3
  40c9f0:	cmp	w13, #0x2
  40c9f4:	b.cc	40c9dc <feof@plt+0x98fc>  // b.lo, b.ul, b.last
  40c9f8:	ldr	w14, [x11]
  40c9fc:	sub	w16, w9, w12
  40ca00:	ldr	w13, [x20, #40]
  40ca04:	sub	w15, w9, w14
  40ca08:	sub	w17, w14, w15
  40ca0c:	eor	w17, w17, w15, lsl #8
  40ca10:	sub	w14, w14, w17
  40ca14:	add	w14, w14, w10
  40ca18:	sub	w15, w15, w17
  40ca1c:	eor	w14, w14, w17, lsr #13
  40ca20:	sub	w15, w15, w14
  40ca24:	sub	w17, w17, w14
  40ca28:	eor	w15, w15, w14, lsr #12
  40ca2c:	sub	w17, w17, w15
  40ca30:	sub	w14, w14, w15
  40ca34:	eor	w17, w17, w15, lsl #16
  40ca38:	sub	w14, w14, w17
  40ca3c:	sub	w15, w15, w17
  40ca40:	eor	w14, w14, w17, lsr #5
  40ca44:	sub	w15, w15, w14
  40ca48:	sub	w17, w17, w14
  40ca4c:	eor	w15, w15, w14, lsr #3
  40ca50:	sub	w17, w17, w15
  40ca54:	sub	w14, w14, w15
  40ca58:	eor	w17, w17, w15, lsl #10
  40ca5c:	sub	w14, w14, w17
  40ca60:	eor	w17, w14, w17, lsr #15
  40ca64:	sub	w16, w16, w17
  40ca68:	sub	w12, w12, w17
  40ca6c:	eor	w16, w16, w17, lsr #13
  40ca70:	sub	w12, w12, w16
  40ca74:	sub	w17, w17, w16
  40ca78:	eor	w12, w12, w16, lsl #8
  40ca7c:	sub	w17, w17, w12
  40ca80:	sub	w16, w16, w12
  40ca84:	eor	w17, w17, w12, lsr #13
  40ca88:	sub	w16, w16, w17
  40ca8c:	sub	w12, w12, w17
  40ca90:	eor	w16, w16, w17, lsr #12
  40ca94:	sub	w12, w12, w16
  40ca98:	sub	w17, w17, w16
  40ca9c:	eor	w12, w12, w16, lsl #16
  40caa0:	sub	w17, w17, w12
  40caa4:	sub	w16, w16, w12
  40caa8:	eor	w17, w17, w12, lsr #5
  40caac:	sub	w16, w16, w17
  40cab0:	add	x13, x23, x13, lsl #4
  40cab4:	sub	w12, w12, w17
  40cab8:	eor	w16, w16, w17, lsr #3
  40cabc:	ldp	w15, w18, [x13]
  40cac0:	sub	w12, w12, w16
  40cac4:	sub	w17, w17, w16
  40cac8:	eor	w12, w12, w16, lsl #10
  40cacc:	sub	w16, w17, w12
  40cad0:	eor	w17, w16, w12, lsr #15
  40cad4:	ldr	w14, [x13, #12]
  40cad8:	mul	x12, x17, x18
  40cadc:	lsr	x16, x12, #32
  40cae0:	sub	w18, w17, w16
  40cae4:	ldr	x12, [x20]
  40cae8:	add	w16, w16, w18, lsr #1
  40caec:	lsr	w16, w16, w14
  40caf0:	msub	w16, w16, w15, w17
  40caf4:	add	x18, x12, w16, uxtw #4
  40caf8:	ldr	w18, [x18, #4]
  40cafc:	cmn	w18, #0x3
  40cb00:	b.eq	40c9d4 <feof@plt+0x98f4>  // b.none
  40cb04:	ldr	w18, [x13, #8]
  40cb08:	ldr	x13, [x20, #8]
  40cb0c:	sub	w15, w15, #0x2
  40cb10:	mul	x18, x18, x17
  40cb14:	lsr	x18, x18, #32
  40cb18:	sub	w0, w17, w18
  40cb1c:	add	w18, w18, w0, lsr #1
  40cb20:	lsr	w14, w18, w14
  40cb24:	msub	w14, w14, w15, w17
  40cb28:	add	w14, w14, #0x1
  40cb2c:	add	w15, w14, w16
  40cb30:	cmp	x13, x15
  40cb34:	csel	w16, wzr, w13, hi  // hi = pmore
  40cb38:	sub	w16, w15, w16
  40cb3c:	add	x15, x12, w16, uxtw #4
  40cb40:	ldr	w15, [x15, #4]
  40cb44:	cmn	w15, #0x3
  40cb48:	b.ne	40cb2c <feof@plt+0x9a4c>  // b.any
  40cb4c:	mov	w16, w16
  40cb50:	b	40c9d4 <feof@plt+0x98f4>
  40cb54:	ldrb	w8, [x20, #44]
  40cb58:	cbz	w8, 40cb74 <feof@plt+0x9a94>
  40cb5c:	mov	x0, x19
  40cb60:	ldp	x20, x19, [sp, #48]
  40cb64:	ldp	x22, x21, [sp, #32]
  40cb68:	ldp	x24, x23, [sp, #16]
  40cb6c:	ldp	x29, x30, [sp], #64
  40cb70:	b	40eff8 <feof@plt+0xbf18>
  40cb74:	mov	x0, x19
  40cb78:	ldp	x20, x19, [sp, #48]
  40cb7c:	ldp	x22, x21, [sp, #32]
  40cb80:	ldp	x24, x23, [sp, #16]
  40cb84:	ldp	x29, x30, [sp], #64
  40cb88:	b	402b20 <free@plt>
  40cb8c:	mov	x22, x24
  40cb90:	ldrb	w8, [x20, #44]
  40cb94:	cbnz	w8, 40c930 <feof@plt+0x9850>
  40cb98:	mov	w1, #0x10                  	// #16
  40cb9c:	mov	x0, x22
  40cba0:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40cba4:	cbnz	x0, 40c94c <feof@plt+0x986c>
  40cba8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40cbac:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40cbb0:	add	x0, x0, #0x6f1
  40cbb4:	add	x2, x2, #0x708
  40cbb8:	mov	w1, #0x2b5                 	// #693
  40cbbc:	bl	40f560 <feof@plt+0xc480>
  40cbc0:	stp	x29, x30, [sp, #-64]!
  40cbc4:	str	x23, [sp, #16]
  40cbc8:	stp	x22, x21, [sp, #32]
  40cbcc:	stp	x20, x19, [sp, #48]
  40cbd0:	mov	x29, sp
  40cbd4:	sub	x8, x1, x0
  40cbd8:	cmp	x8, #0x41
  40cbdc:	b.lt	40cdd0 <feof@plt+0x9cf0>  // b.tstop
  40cbe0:	mov	x20, x1
  40cbe4:	mov	x19, x0
  40cbe8:	mov	x21, x2
  40cbec:	add	x23, x0, #0x4
  40cbf0:	b	40cc14 <feof@plt+0x9b34>
  40cbf4:	mov	x0, x22
  40cbf8:	mov	x1, x20
  40cbfc:	mov	x2, x21
  40cc00:	bl	40cbc0 <feof@plt+0x9ae0>
  40cc04:	sub	x8, x22, x19
  40cc08:	cmp	x8, #0x40
  40cc0c:	mov	x20, x22
  40cc10:	b.le	40cdd0 <feof@plt+0x9cf0>
  40cc14:	cbz	x21, 40ccd8 <feof@plt+0x9bf8>
  40cc18:	lsr	x8, x8, #3
  40cc1c:	ldr	w9, [x19, #4]
  40cc20:	ldr	w11, [x19, x8, lsl #2]
  40cc24:	ldur	w10, [x20, #-4]
  40cc28:	sub	x21, x21, #0x1
  40cc2c:	cmp	w9, w11
  40cc30:	b.cs	40cc44 <feof@plt+0x9b64>  // b.hs, b.nlast
  40cc34:	cmp	w11, w10
  40cc38:	b.cs	40cc54 <feof@plt+0x9b74>  // b.hs, b.nlast
  40cc3c:	ldr	w9, [x19]
  40cc40:	b	40cc8c <feof@plt+0x9bac>
  40cc44:	cmp	w9, w10
  40cc48:	b.cs	40cc74 <feof@plt+0x9b94>  // b.hs, b.nlast
  40cc4c:	ldr	w8, [x19]
  40cc50:	b	40cc6c <feof@plt+0x9b8c>
  40cc54:	ldr	w8, [x19]
  40cc58:	cmp	w9, w10
  40cc5c:	b.cs	40cc6c <feof@plt+0x9b8c>  // b.hs, b.nlast
  40cc60:	str	w10, [x19]
  40cc64:	stur	w8, [x20, #-4]
  40cc68:	b	40cc94 <feof@plt+0x9bb4>
  40cc6c:	stp	w9, w8, [x19]
  40cc70:	b	40cc94 <feof@plt+0x9bb4>
  40cc74:	ldr	w9, [x19]
  40cc78:	cmp	w11, w10
  40cc7c:	b.cs	40cc8c <feof@plt+0x9bac>  // b.hs, b.nlast
  40cc80:	str	w10, [x19]
  40cc84:	stur	w9, [x20, #-4]
  40cc88:	b	40cc94 <feof@plt+0x9bb4>
  40cc8c:	str	w11, [x19]
  40cc90:	str	w9, [x19, x8, lsl #2]
  40cc94:	mov	x8, x20
  40cc98:	mov	x22, x23
  40cc9c:	ldr	w9, [x22]
  40cca0:	ldr	w10, [x19]
  40cca4:	cmp	w9, w10
  40cca8:	b.cs	40ccb8 <feof@plt+0x9bd8>  // b.hs, b.nlast
  40ccac:	ldr	w9, [x22, #4]!
  40ccb0:	cmp	w9, w10
  40ccb4:	b.cc	40ccac <feof@plt+0x9bcc>  // b.lo, b.ul, b.last
  40ccb8:	ldr	w11, [x8, #-4]!
  40ccbc:	cmp	w10, w11
  40ccc0:	b.cc	40ccb8 <feof@plt+0x9bd8>  // b.lo, b.ul, b.last
  40ccc4:	cmp	x8, x22
  40ccc8:	b.ls	40cbf4 <feof@plt+0x9b14>  // b.plast
  40cccc:	str	w11, [x22], #4
  40ccd0:	str	w9, [x8]
  40ccd4:	b	40cc9c <feof@plt+0x9bbc>
  40ccd8:	mov	x0, x19
  40ccdc:	mov	x1, x20
  40cce0:	mov	x2, x20
  40cce4:	bl	40cf80 <feof@plt+0x9ea0>
  40cce8:	b	40ccfc <feof@plt+0x9c1c>
  40ccec:	mov	x11, x10
  40ccf0:	cmp	x9, #0x4
  40ccf4:	str	w8, [x19, x11, lsl #2]
  40ccf8:	b.le	40cdd0 <feof@plt+0x9cf0>
  40ccfc:	ldr	w8, [x20, #-4]!
  40cd00:	ldr	w13, [x19]
  40cd04:	sub	x9, x20, x19
  40cd08:	asr	x12, x9, #2
  40cd0c:	sub	x11, x12, #0x1
  40cd10:	cmp	x11, #0x0
  40cd14:	csel	x10, x12, x11, lt  // lt = tstop
  40cd18:	cmp	x9, #0x9
  40cd1c:	str	w13, [x20]
  40cd20:	b.lt	40cd68 <feof@plt+0x9c88>  // b.tstop
  40cd24:	mov	x14, xzr
  40cd28:	asr	x13, x10, #1
  40cd2c:	lsl	x10, x14, #1
  40cd30:	mov	w15, #0x1                   	// #1
  40cd34:	add	x10, x10, #0x2
  40cd38:	bfi	x15, x14, #1, #63
  40cd3c:	ldr	w16, [x19, x10, lsl #2]
  40cd40:	ldr	w17, [x19, x15, lsl #2]
  40cd44:	cmp	w16, w17
  40cd48:	csel	x10, x15, x10, cc  // cc = lo, ul, last
  40cd4c:	ldr	w15, [x19, x10, lsl #2]
  40cd50:	cmp	x10, x13
  40cd54:	str	w15, [x19, x14, lsl #2]
  40cd58:	mov	x14, x10
  40cd5c:	b.lt	40cd2c <feof@plt+0x9c4c>  // b.tstop
  40cd60:	tbz	w9, #2, 40cd70 <feof@plt+0x9c90>
  40cd64:	b	40cd98 <feof@plt+0x9cb8>
  40cd68:	mov	x10, xzr
  40cd6c:	tbnz	w9, #2, 40cd98 <feof@plt+0x9cb8>
  40cd70:	sub	x12, x12, #0x2
  40cd74:	cmp	x12, #0x0
  40cd78:	csel	x11, x11, x12, lt  // lt = tstop
  40cd7c:	cmp	x10, x11, asr #1
  40cd80:	b.ne	40cd98 <feof@plt+0x9cb8>  // b.any
  40cd84:	mov	w11, #0x1                   	// #1
  40cd88:	bfi	x11, x10, #1, #63
  40cd8c:	ldr	w12, [x19, x11, lsl #2]
  40cd90:	str	w12, [x19, x10, lsl #2]
  40cd94:	mov	x10, x11
  40cd98:	cmp	x10, #0x1
  40cd9c:	b.lt	40ccec <feof@plt+0x9c0c>  // b.tstop
  40cda0:	sub	x11, x10, #0x1
  40cda4:	cmp	x11, #0x0
  40cda8:	csel	x11, x10, x11, lt  // lt = tstop
  40cdac:	asr	x11, x11, #1
  40cdb0:	ldr	w12, [x19, x11, lsl #2]
  40cdb4:	cmp	w12, w8
  40cdb8:	b.cs	40ccec <feof@plt+0x9c0c>  // b.hs, b.nlast
  40cdbc:	cmp	x10, #0x2
  40cdc0:	str	w12, [x19, x10, lsl #2]
  40cdc4:	mov	x10, x11
  40cdc8:	b.gt	40cda0 <feof@plt+0x9cc0>
  40cdcc:	b	40ccf0 <feof@plt+0x9c10>
  40cdd0:	ldp	x20, x19, [sp, #48]
  40cdd4:	ldp	x22, x21, [sp, #32]
  40cdd8:	ldr	x23, [sp, #16]
  40cddc:	ldp	x29, x30, [sp], #64
  40cde0:	ret
  40cde4:	stp	x29, x30, [sp, #-64]!
  40cde8:	stp	x24, x23, [sp, #16]
  40cdec:	stp	x22, x21, [sp, #32]
  40cdf0:	stp	x20, x19, [sp, #48]
  40cdf4:	mov	x29, sp
  40cdf8:	sub	x8, x1, x0
  40cdfc:	mov	x19, x1
  40ce00:	mov	x20, x0
  40ce04:	cmp	x8, #0x41
  40ce08:	b.lt	40ce94 <feof@plt+0x9db4>  // b.tstop
  40ce0c:	add	x21, x20, #0x4
  40ce10:	mov	w22, #0x1                   	// #1
  40ce14:	mov	x23, x20
  40ce18:	b	40ce34 <feof@plt+0x9d54>
  40ce1c:	mov	x8, x20
  40ce20:	add	x22, x22, #0x1
  40ce24:	cmp	x22, #0x10
  40ce28:	add	x21, x21, #0x4
  40ce2c:	str	w24, [x8]
  40ce30:	b.eq	40cf24 <feof@plt+0x9e44>  // b.none
  40ce34:	mov	x8, x23
  40ce38:	add	x23, x20, x22, lsl #2
  40ce3c:	ldr	w24, [x23]
  40ce40:	ldr	w9, [x20]
  40ce44:	cmp	w24, w9
  40ce48:	b.cs	40ce68 <feof@plt+0x9d88>  // b.hs, b.nlast
  40ce4c:	subs	x2, x23, x20
  40ce50:	b.eq	40ce1c <feof@plt+0x9d3c>  // b.none
  40ce54:	sub	x8, x8, x2
  40ce58:	add	x0, x8, #0x8
  40ce5c:	mov	x1, x20
  40ce60:	bl	402e30 <memmove@plt>
  40ce64:	b	40ce1c <feof@plt+0x9d3c>
  40ce68:	ldr	w9, [x8]
  40ce6c:	mov	x8, x23
  40ce70:	cmp	w24, w9
  40ce74:	b.cs	40ce20 <feof@plt+0x9d40>  // b.hs, b.nlast
  40ce78:	mov	x8, x21
  40ce7c:	str	w9, [x8]
  40ce80:	ldur	w9, [x8, #-8]
  40ce84:	sub	x8, x8, #0x4
  40ce88:	cmp	w24, w9
  40ce8c:	b.cc	40ce7c <feof@plt+0x9d9c>  // b.lo, b.ul, b.last
  40ce90:	b	40ce20 <feof@plt+0x9d40>
  40ce94:	cmp	x20, x19
  40ce98:	b.eq	40cf30 <feof@plt+0x9e50>  // b.none
  40ce9c:	add	x9, x20, #0x4
  40cea0:	cmp	x9, x19
  40cea4:	b.eq	40cf30 <feof@plt+0x9e50>  // b.none
  40cea8:	mov	x21, x20
  40ceac:	b	40cec4 <feof@plt+0x9de4>
  40ceb0:	mov	x8, x20
  40ceb4:	add	x9, x21, #0x4
  40ceb8:	cmp	x9, x19
  40cebc:	str	w22, [x8]
  40cec0:	b.eq	40cf30 <feof@plt+0x9e50>  // b.none
  40cec4:	mov	x8, x21
  40cec8:	mov	x21, x9
  40cecc:	ldr	w22, [x9]
  40ced0:	ldr	w9, [x20]
  40ced4:	cmp	w22, w9
  40ced8:	b.cs	40cef8 <feof@plt+0x9e18>  // b.hs, b.nlast
  40cedc:	subs	x2, x21, x20
  40cee0:	b.eq	40ceb0 <feof@plt+0x9dd0>  // b.none
  40cee4:	sub	x8, x8, x2
  40cee8:	add	x0, x8, #0x8
  40ceec:	mov	x1, x20
  40cef0:	bl	402e30 <memmove@plt>
  40cef4:	b	40ceb0 <feof@plt+0x9dd0>
  40cef8:	ldr	w9, [x8]
  40cefc:	mov	x8, x21
  40cf00:	cmp	w22, w9
  40cf04:	b.cs	40ceb4 <feof@plt+0x9dd4>  // b.hs, b.nlast
  40cf08:	mov	x8, x21
  40cf0c:	str	w9, [x8]
  40cf10:	ldur	w9, [x8, #-8]
  40cf14:	sub	x8, x8, #0x4
  40cf18:	cmp	w22, w9
  40cf1c:	b.cc	40cf0c <feof@plt+0x9e2c>  // b.lo, b.ul, b.last
  40cf20:	b	40ceb4 <feof@plt+0x9dd4>
  40cf24:	add	x8, x20, #0x40
  40cf28:	cmp	x8, x19
  40cf2c:	b.ne	40cf54 <feof@plt+0x9e74>  // b.any
  40cf30:	ldp	x20, x19, [sp, #48]
  40cf34:	ldp	x22, x21, [sp, #32]
  40cf38:	ldp	x24, x23, [sp, #16]
  40cf3c:	ldp	x29, x30, [sp], #64
  40cf40:	ret
  40cf44:	add	x8, x8, #0x4
  40cf48:	cmp	x8, x19
  40cf4c:	str	w9, [x10]
  40cf50:	b.eq	40cf30 <feof@plt+0x9e50>  // b.none
  40cf54:	ldp	w11, w9, [x8, #-4]
  40cf58:	mov	x10, x8
  40cf5c:	cmp	w9, w11
  40cf60:	b.cs	40cf44 <feof@plt+0x9e64>  // b.hs, b.nlast
  40cf64:	mov	x10, x8
  40cf68:	str	w11, [x10]
  40cf6c:	ldur	w11, [x10, #-8]
  40cf70:	sub	x10, x10, #0x4
  40cf74:	cmp	w9, w11
  40cf78:	b.cc	40cf68 <feof@plt+0x9e88>  // b.lo, b.ul, b.last
  40cf7c:	b	40cf44 <feof@plt+0x9e64>
  40cf80:	sub	x8, x1, x0
  40cf84:	cmp	x8, #0x8
  40cf88:	asr	x9, x8, #2
  40cf8c:	b.ge	40d088 <feof@plt+0x9fa8>  // b.tcont
  40cf90:	cmp	x1, x2
  40cf94:	b.cs	40d084 <feof@plt+0x9fa4>  // b.hs, b.nlast
  40cf98:	sub	x10, x9, #0x1
  40cf9c:	sub	x11, x9, #0x2
  40cfa0:	cmp	x10, #0x0
  40cfa4:	csel	x9, x9, x10, lt  // lt = tstop
  40cfa8:	cmp	x11, #0x0
  40cfac:	csel	x11, x10, x11, lt  // lt = tstop
  40cfb0:	asr	x9, x9, #1
  40cfb4:	asr	x10, x11, #1
  40cfb8:	orr	x11, x11, #0x1
  40cfbc:	b	40cfd4 <feof@plt+0x9ef4>
  40cfc0:	mov	x14, x13
  40cfc4:	str	w12, [x0, x14, lsl #2]
  40cfc8:	add	x1, x1, #0x4
  40cfcc:	cmp	x1, x2
  40cfd0:	b.cs	40d084 <feof@plt+0x9fa4>  // b.hs, b.nlast
  40cfd4:	ldr	w12, [x1]
  40cfd8:	ldr	w13, [x0]
  40cfdc:	cmp	w12, w13
  40cfe0:	b.cs	40cfc8 <feof@plt+0x9ee8>  // b.hs, b.nlast
  40cfe4:	cmp	x8, #0x9
  40cfe8:	str	w13, [x1]
  40cfec:	b.lt	40d030 <feof@plt+0x9f50>  // b.tstop
  40cff0:	mov	x14, xzr
  40cff4:	lsl	x13, x14, #1
  40cff8:	mov	w15, #0x1                   	// #1
  40cffc:	add	x13, x13, #0x2
  40d000:	bfi	x15, x14, #1, #63
  40d004:	ldr	w16, [x0, x13, lsl #2]
  40d008:	ldr	w17, [x0, x15, lsl #2]
  40d00c:	cmp	w16, w17
  40d010:	csel	x13, x15, x13, cc  // cc = lo, ul, last
  40d014:	ldr	w15, [x0, x13, lsl #2]
  40d018:	cmp	x13, x9
  40d01c:	str	w15, [x0, x14, lsl #2]
  40d020:	mov	x14, x13
  40d024:	b.lt	40cff4 <feof@plt+0x9f14>  // b.tstop
  40d028:	tbz	w8, #2, 40d038 <feof@plt+0x9f58>
  40d02c:	b	40d04c <feof@plt+0x9f6c>
  40d030:	mov	x13, xzr
  40d034:	tbnz	w8, #2, 40d04c <feof@plt+0x9f6c>
  40d038:	cmp	x13, x10
  40d03c:	b.ne	40d04c <feof@plt+0x9f6c>  // b.any
  40d040:	ldr	w13, [x0, x11, lsl #2]
  40d044:	str	w13, [x0, x10, lsl #2]
  40d048:	mov	x13, x11
  40d04c:	cmp	x13, #0x1
  40d050:	b.lt	40cfc0 <feof@plt+0x9ee0>  // b.tstop
  40d054:	sub	x14, x13, #0x1
  40d058:	cmp	x14, #0x0
  40d05c:	csel	x14, x13, x14, lt  // lt = tstop
  40d060:	asr	x14, x14, #1
  40d064:	ldr	w15, [x0, x14, lsl #2]
  40d068:	cmp	w15, w12
  40d06c:	b.cs	40cfc0 <feof@plt+0x9ee0>  // b.hs, b.nlast
  40d070:	cmp	x13, #0x2
  40d074:	str	w15, [x0, x13, lsl #2]
  40d078:	mov	x13, x14
  40d07c:	b.gt	40d054 <feof@plt+0x9f74>
  40d080:	b	40cfc4 <feof@plt+0x9ee4>
  40d084:	ret
  40d088:	sub	x10, x9, #0x2
  40d08c:	sub	x11, x9, #0x1
  40d090:	cmp	x10, #0x0
  40d094:	csel	x12, x11, x10, lt  // lt = tstop
  40d098:	cmp	x11, #0x0
  40d09c:	asr	x10, x12, #1
  40d0a0:	csel	x11, x9, x11, lt  // lt = tstop
  40d0a4:	asr	x11, x11, #1
  40d0a8:	orr	x12, x12, #0x1
  40d0ac:	mov	x14, x10
  40d0b0:	b	40d0c4 <feof@plt+0x9fe4>
  40d0b4:	mov	x16, x15
  40d0b8:	str	w14, [x0, x16, lsl #2]
  40d0bc:	sub	x14, x13, #0x1
  40d0c0:	cbz	x13, 40cf90 <feof@plt+0x9eb0>
  40d0c4:	mov	x13, x14
  40d0c8:	ldr	w14, [x0, x14, lsl #2]
  40d0cc:	cmp	x11, x13
  40d0d0:	mov	x15, x13
  40d0d4:	b.le	40d110 <feof@plt+0xa030>
  40d0d8:	mov	x16, x13
  40d0dc:	lsl	x15, x16, #1
  40d0e0:	mov	w17, #0x1                   	// #1
  40d0e4:	add	x15, x15, #0x2
  40d0e8:	bfi	x17, x16, #1, #63
  40d0ec:	ldr	w18, [x0, x15, lsl #2]
  40d0f0:	ldr	w3, [x0, x17, lsl #2]
  40d0f4:	cmp	w18, w3
  40d0f8:	csel	x15, x17, x15, cc  // cc = lo, ul, last
  40d0fc:	ldr	w17, [x0, x15, lsl #2]
  40d100:	cmp	x15, x11
  40d104:	str	w17, [x0, x16, lsl #2]
  40d108:	mov	x16, x15
  40d10c:	b.lt	40d0dc <feof@plt+0x9ffc>  // b.tstop
  40d110:	tbnz	w8, #2, 40d128 <feof@plt+0xa048>
  40d114:	cmp	x15, x10
  40d118:	b.ne	40d128 <feof@plt+0xa048>  // b.any
  40d11c:	ldr	w15, [x0, x12, lsl #2]
  40d120:	str	w15, [x0, x10, lsl #2]
  40d124:	mov	x15, x12
  40d128:	cmp	x15, x13
  40d12c:	b.le	40d0b4 <feof@plt+0x9fd4>
  40d130:	sub	x16, x15, #0x1
  40d134:	cmp	x16, #0x0
  40d138:	csel	x16, x15, x16, lt  // lt = tstop
  40d13c:	asr	x16, x16, #1
  40d140:	ldr	w17, [x0, x16, lsl #2]
  40d144:	cmp	w17, w14
  40d148:	b.cs	40d0b4 <feof@plt+0x9fd4>  // b.hs, b.nlast
  40d14c:	cmp	x16, x13
  40d150:	str	w17, [x0, x15, lsl #2]
  40d154:	mov	x15, x16
  40d158:	b.gt	40d130 <feof@plt+0xa050>
  40d15c:	b	40d0b8 <feof@plt+0x9fd8>
  40d160:	stp	x29, x30, [sp, #-80]!
  40d164:	stp	x26, x25, [sp, #16]
  40d168:	stp	x24, x23, [sp, #32]
  40d16c:	stp	x22, x21, [sp, #48]
  40d170:	stp	x20, x19, [sp, #64]
  40d174:	mov	x29, sp
  40d178:	cbz	x1, 40d308 <feof@plt+0xa228>
  40d17c:	ldp	x8, x9, [x0, #8]
  40d180:	mov	x20, x1
  40d184:	mov	x19, x0
  40d188:	sub	x9, x9, x8
  40d18c:	cmp	x1, x9, asr #6
  40d190:	b.ls	40d1ec <feof@plt+0xa10c>  // b.plast
  40d194:	ldr	x9, [x19]
  40d198:	sub	x8, x8, x9
  40d19c:	asr	x22, x8, #6
  40d1a0:	eor	x8, x22, #0x1ffffffffffffff
  40d1a4:	cmp	x8, x20
  40d1a8:	b.cc	40d320 <feof@plt+0xa240>  // b.lo, b.ul, b.last
  40d1ac:	cmp	x22, x20
  40d1b0:	csel	x8, x20, x22, cc  // cc = lo, ul, last
  40d1b4:	adds	x8, x8, x22
  40d1b8:	lsr	x10, x8, #57
  40d1bc:	cset	w9, cs  // cs = hs, nlast
  40d1c0:	cmp	x10, #0x0
  40d1c4:	cset	w10, ne  // ne = any
  40d1c8:	orr	w9, w9, w10
  40d1cc:	cmp	w9, #0x0
  40d1d0:	mov	x9, #0x1ffffffffffffff     	// #144115188075855871
  40d1d4:	csel	x23, x9, x8, ne  // ne = any
  40d1d8:	cbz	x23, 40d21c <feof@plt+0xa13c>
  40d1dc:	lsl	x0, x23, #6
  40d1e0:	bl	402d30 <_Znwm@plt>
  40d1e4:	mov	x21, x0
  40d1e8:	b	40d220 <feof@plt+0xa140>
  40d1ec:	movi	v0.2d, #0x0
  40d1f0:	ldrb	w9, [x8, #56]
  40d1f4:	str	xzr, [x8, #48]
  40d1f8:	stp	q0, q0, [x8, #16]
  40d1fc:	str	q0, [x8]
  40d200:	and	w9, w9, #0xf8
  40d204:	subs	x20, x20, #0x1
  40d208:	strb	w9, [x8, #56]
  40d20c:	add	x8, x8, #0x40
  40d210:	b.ne	40d1f0 <feof@plt+0xa110>  // b.any
  40d214:	str	x8, [x19, #8]
  40d218:	b	40d308 <feof@plt+0xa228>
  40d21c:	mov	x21, xzr
  40d220:	lsl	x8, x22, #6
  40d224:	add	x24, x21, x8
  40d228:	movi	v0.2d, #0x0
  40d22c:	mov	x9, x20
  40d230:	add	x10, x21, x8
  40d234:	ldrb	w11, [x10, #56]
  40d238:	subs	x9, x9, #0x1
  40d23c:	add	x8, x8, #0x40
  40d240:	str	xzr, [x10, #48]
  40d244:	and	w11, w11, #0xf8
  40d248:	stp	q0, q0, [x10, #16]
  40d24c:	str	q0, [x10]
  40d250:	strb	w11, [x10, #56]
  40d254:	b.ne	40d230 <feof@plt+0xa150>  // b.any
  40d258:	ldp	x22, x25, [x19]
  40d25c:	cmp	x22, x25
  40d260:	b.eq	40d2ec <feof@plt+0xa20c>  // b.none
  40d264:	mov	x26, x21
  40d268:	b	40d27c <feof@plt+0xa19c>
  40d26c:	add	x22, x22, #0x40
  40d270:	cmp	x22, x25
  40d274:	add	x26, x26, #0x40
  40d278:	b.eq	40d2e8 <feof@plt+0xa208>  // b.none
  40d27c:	ldr	x8, [x22]
  40d280:	str	x8, [x26]
  40d284:	ldr	x8, [x22, #8]
  40d288:	str	x8, [x26, #8]
  40d28c:	ldr	x8, [x22, #16]
  40d290:	str	x8, [x26, #16]
  40d294:	ldr	x8, [x22, #24]
  40d298:	str	x8, [x26, #24]
  40d29c:	ldr	x8, [x22, #32]
  40d2a0:	stp	xzr, xzr, [x22, #8]
  40d2a4:	str	xzr, [x22, #24]
  40d2a8:	str	x8, [x26, #32]
  40d2ac:	ldr	x8, [x22, #40]
  40d2b0:	str	x8, [x26, #40]
  40d2b4:	ldr	x8, [x22, #48]
  40d2b8:	str	x8, [x26, #48]
  40d2bc:	ldrb	w8, [x22, #56]
  40d2c0:	stp	xzr, xzr, [x22, #32]
  40d2c4:	str	xzr, [x22, #48]
  40d2c8:	strb	w8, [x26, #56]
  40d2cc:	ldr	x0, [x22, #32]
  40d2d0:	cbz	x0, 40d2d8 <feof@plt+0xa1f8>
  40d2d4:	bl	402d00 <_ZdlPv@plt>
  40d2d8:	ldr	x0, [x22, #8]
  40d2dc:	cbz	x0, 40d26c <feof@plt+0xa18c>
  40d2e0:	bl	402d00 <_ZdlPv@plt>
  40d2e4:	b	40d26c <feof@plt+0xa18c>
  40d2e8:	ldr	x22, [x19]
  40d2ec:	cbz	x22, 40d2f8 <feof@plt+0xa218>
  40d2f0:	mov	x0, x22
  40d2f4:	bl	402d00 <_ZdlPv@plt>
  40d2f8:	add	x8, x24, x20, lsl #6
  40d2fc:	add	x9, x21, x23, lsl #6
  40d300:	stp	x21, x8, [x19]
  40d304:	str	x9, [x19, #16]
  40d308:	ldp	x20, x19, [sp, #64]
  40d30c:	ldp	x22, x21, [sp, #48]
  40d310:	ldp	x24, x23, [sp, #32]
  40d314:	ldp	x26, x25, [sp, #16]
  40d318:	ldp	x29, x30, [sp], #80
  40d31c:	ret
  40d320:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40d324:	add	x0, x0, #0x609
  40d328:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40d32c:	stp	x29, x30, [sp, #-80]!
  40d330:	stp	x26, x25, [sp, #16]
  40d334:	stp	x24, x23, [sp, #32]
  40d338:	stp	x22, x21, [sp, #48]
  40d33c:	stp	x20, x19, [sp, #64]
  40d340:	mov	x29, sp
  40d344:	ldp	x20, x24, [x0]
  40d348:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  40d34c:	sub	x8, x24, x20
  40d350:	cmp	x8, x9
  40d354:	b.eq	40d49c <feof@plt+0xa3bc>  // b.none
  40d358:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40d35c:	asr	x9, x8, #3
  40d360:	movk	x10, #0xaaab
  40d364:	cmp	x8, #0x0
  40d368:	mul	x9, x9, x10
  40d36c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  40d370:	csinc	x11, x9, xzr, ne  // ne = any
  40d374:	movk	x8, #0x555, lsl #48
  40d378:	adds	x9, x11, x9
  40d37c:	cset	w11, cs  // cs = hs, nlast
  40d380:	cmp	x9, x8
  40d384:	cset	w12, hi  // hi = pmore
  40d388:	orr	w11, w11, w12
  40d38c:	sub	x12, x1, x20
  40d390:	cmp	w11, #0x0
  40d394:	csel	x25, x8, x9, ne  // ne = any
  40d398:	asr	x8, x12, #3
  40d39c:	mov	x23, x2
  40d3a0:	mov	x19, x0
  40d3a4:	mov	x21, x1
  40d3a8:	mul	x26, x8, x10
  40d3ac:	cbz	x25, 40d3c4 <feof@plt+0xa2e4>
  40d3b0:	add	x8, x25, x25, lsl #1
  40d3b4:	lsl	x0, x8, #3
  40d3b8:	bl	402d30 <_Znwm@plt>
  40d3bc:	mov	x22, x0
  40d3c0:	b	40d3c8 <feof@plt+0xa2e8>
  40d3c4:	mov	x22, xzr
  40d3c8:	ldr	q0, [x23]
  40d3cc:	mov	w8, #0x18                  	// #24
  40d3d0:	madd	x8, x26, x8, x22
  40d3d4:	cmp	x20, x21
  40d3d8:	str	q0, [x8]
  40d3dc:	ldr	x9, [x23, #16]
  40d3e0:	str	x9, [x8, #16]
  40d3e4:	mov	x8, x22
  40d3e8:	stp	xzr, xzr, [x23]
  40d3ec:	str	xzr, [x23, #16]
  40d3f0:	b.eq	40d42c <feof@plt+0xa34c>  // b.none
  40d3f4:	mov	x8, x22
  40d3f8:	mov	x9, x20
  40d3fc:	ldr	x10, [x9]
  40d400:	str	x10, [x8]
  40d404:	ldr	x10, [x9, #8]
  40d408:	str	x10, [x8, #8]
  40d40c:	ldr	x10, [x9, #16]
  40d410:	str	x10, [x8, #16]
  40d414:	stp	xzr, xzr, [x9]
  40d418:	str	xzr, [x9, #16]
  40d41c:	add	x9, x9, #0x18
  40d420:	cmp	x9, x21
  40d424:	add	x8, x8, #0x18
  40d428:	b.ne	40d3fc <feof@plt+0xa31c>  // b.any
  40d42c:	cmp	x24, x21
  40d430:	add	x23, x8, #0x18
  40d434:	b.eq	40d468 <feof@plt+0xa388>  // b.none
  40d438:	ldr	x8, [x21]
  40d43c:	str	x8, [x23]
  40d440:	ldr	x8, [x21, #8]
  40d444:	str	x8, [x23, #8]
  40d448:	ldr	x8, [x21, #16]
  40d44c:	str	x8, [x23, #16]
  40d450:	stp	xzr, xzr, [x21]
  40d454:	str	xzr, [x21, #16]
  40d458:	add	x21, x21, #0x18
  40d45c:	cmp	x21, x24
  40d460:	add	x23, x23, #0x18
  40d464:	b.ne	40d438 <feof@plt+0xa358>  // b.any
  40d468:	cbz	x20, 40d474 <feof@plt+0xa394>
  40d46c:	mov	x0, x20
  40d470:	bl	402d00 <_ZdlPv@plt>
  40d474:	mov	w8, #0x18                  	// #24
  40d478:	madd	x8, x25, x8, x22
  40d47c:	stp	x22, x23, [x19]
  40d480:	str	x8, [x19, #16]
  40d484:	ldp	x20, x19, [sp, #64]
  40d488:	ldp	x22, x21, [sp, #48]
  40d48c:	ldp	x24, x23, [sp, #32]
  40d490:	ldp	x26, x25, [sp, #16]
  40d494:	ldp	x29, x30, [sp], #80
  40d498:	ret
  40d49c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40d4a0:	add	x0, x0, #0x4b5
  40d4a4:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40d4a8:	stp	x29, x30, [sp, #-80]!
  40d4ac:	stp	x26, x25, [sp, #16]
  40d4b0:	stp	x24, x23, [sp, #32]
  40d4b4:	stp	x22, x21, [sp, #48]
  40d4b8:	stp	x20, x19, [sp, #64]
  40d4bc:	mov	x29, sp
  40d4c0:	cbz	x1, 40d5b0 <feof@plt+0xa4d0>
  40d4c4:	mov	x23, x0
  40d4c8:	mov	x25, x0
  40d4cc:	ldr	x22, [x23, #8]!
  40d4d0:	ldr	x21, [x0]
  40d4d4:	ldr	x8, [x25, #16]!
  40d4d8:	mov	x19, x1
  40d4dc:	mov	x20, x0
  40d4e0:	sub	x8, x8, x22
  40d4e4:	cmp	x1, x8, asr #3
  40d4e8:	b.ls	40d544 <feof@plt+0xa464>  // b.plast
  40d4ec:	sub	x8, x22, x21
  40d4f0:	asr	x24, x8, #3
  40d4f4:	eor	x8, x24, #0xfffffffffffffff
  40d4f8:	cmp	x8, x19
  40d4fc:	b.cc	40d5c8 <feof@plt+0xa4e8>  // b.lo, b.ul, b.last
  40d500:	cmp	x24, x19
  40d504:	csel	x8, x19, x24, cc  // cc = lo, ul, last
  40d508:	adds	x8, x8, x24
  40d50c:	lsr	x10, x8, #60
  40d510:	cset	w9, cs  // cs = hs, nlast
  40d514:	cmp	x10, #0x0
  40d518:	cset	w10, ne  // ne = any
  40d51c:	orr	w9, w9, w10
  40d520:	cmp	w9, #0x0
  40d524:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  40d528:	csel	x26, x9, x8, ne  // ne = any
  40d52c:	cbz	x26, 40d564 <feof@plt+0xa484>
  40d530:	lsl	x0, x26, #3
  40d534:	bl	402d30 <_Znwm@plt>
  40d538:	ldp	x21, x22, [x20]
  40d53c:	mov	x23, x0
  40d540:	b	40d568 <feof@plt+0xa488>
  40d544:	lsl	x19, x19, #3
  40d548:	mov	x0, x22
  40d54c:	mov	w1, wzr
  40d550:	mov	x2, x19
  40d554:	bl	402b40 <memset@plt>
  40d558:	add	x8, x22, x19
  40d55c:	mov	x25, x23
  40d560:	b	40d5ac <feof@plt+0xa4cc>
  40d564:	mov	x23, xzr
  40d568:	add	x24, x23, x24, lsl #3
  40d56c:	lsl	x2, x19, #3
  40d570:	mov	x0, x24
  40d574:	mov	w1, wzr
  40d578:	bl	402b40 <memset@plt>
  40d57c:	sub	x2, x22, x21
  40d580:	cmp	x2, #0x1
  40d584:	b.lt	40d594 <feof@plt+0xa4b4>  // b.tstop
  40d588:	mov	x0, x23
  40d58c:	mov	x1, x21
  40d590:	bl	402e30 <memmove@plt>
  40d594:	cbz	x21, 40d5a0 <feof@plt+0xa4c0>
  40d598:	mov	x0, x21
  40d59c:	bl	402d00 <_ZdlPv@plt>
  40d5a0:	add	x8, x24, x19, lsl #3
  40d5a4:	stp	x23, x8, [x20]
  40d5a8:	add	x8, x23, x26, lsl #3
  40d5ac:	str	x8, [x25]
  40d5b0:	ldp	x20, x19, [sp, #64]
  40d5b4:	ldp	x22, x21, [sp, #48]
  40d5b8:	ldp	x24, x23, [sp, #32]
  40d5bc:	ldp	x26, x25, [sp, #16]
  40d5c0:	ldp	x29, x30, [sp], #80
  40d5c4:	ret
  40d5c8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40d5cc:	add	x0, x0, #0x609
  40d5d0:	bl	402b00 <_ZSt20__throw_length_errorPKc@plt>
  40d5d4:	stp	x29, x30, [sp, #-80]!
  40d5d8:	str	x25, [sp, #16]
  40d5dc:	stp	x24, x23, [sp, #32]
  40d5e0:	stp	x22, x21, [sp, #48]
  40d5e4:	stp	x20, x19, [sp, #64]
  40d5e8:	mov	x29, sp
  40d5ec:	sub	x8, x1, x0
  40d5f0:	cmp	x8, #0x81
  40d5f4:	b.lt	40d81c <feof@plt+0xa73c>  // b.tstop
  40d5f8:	mov	x21, x3
  40d5fc:	mov	x20, x1
  40d600:	mov	x19, x0
  40d604:	mov	x22, x2
  40d608:	and	x23, x3, #0xff
  40d60c:	add	x24, x0, #0x8
  40d610:	b	40d63c <feof@plt+0xa55c>
  40d614:	sub	x22, x22, #0x1
  40d618:	mov	x0, x25
  40d61c:	mov	x1, x20
  40d620:	mov	x2, x22
  40d624:	mov	x3, x23
  40d628:	bl	40d5d4 <feof@plt+0xa4f4>
  40d62c:	sub	x8, x25, x19
  40d630:	cmp	x8, #0x80
  40d634:	mov	x20, x25
  40d638:	b.le	40d81c <feof@plt+0xa73c>
  40d63c:	cbz	x22, 40d6d4 <feof@plt+0xa5f4>
  40d640:	lsr	x8, x8, #1
  40d644:	and	x8, x8, #0x7ffffffffffffff8
  40d648:	add	x2, x19, x8
  40d64c:	sub	x3, x20, #0x8
  40d650:	mov	x0, x19
  40d654:	mov	x1, x24
  40d658:	mov	x4, x23
  40d65c:	bl	40db50 <feof@plt+0xaa70>
  40d660:	mov	x8, x20
  40d664:	mov	x25, x24
  40d668:	ldr	x9, [x19]
  40d66c:	ldr	w10, [x9, #88]
  40d670:	ldr	x11, [x25]
  40d674:	ldr	w12, [x11, #88]
  40d678:	cmp	w12, w10
  40d67c:	b.ne	40d68c <feof@plt+0xa5ac>  // b.any
  40d680:	ldr	w11, [x11, #92]
  40d684:	ldr	w12, [x9, #92]
  40d688:	cmp	w11, w12
  40d68c:	b.cs	40d69c <feof@plt+0xa5bc>  // b.hs, b.nlast
  40d690:	add	x25, x25, #0x8
  40d694:	b	40d670 <feof@plt+0xa590>
  40d698:	b.cs	40d6bc <feof@plt+0xa5dc>  // b.hs, b.nlast
  40d69c:	ldr	x11, [x8, #-8]!
  40d6a0:	ldr	w12, [x11, #88]
  40d6a4:	cmp	w10, w12
  40d6a8:	b.ne	40d698 <feof@plt+0xa5b8>  // b.any
  40d6ac:	ldr	w12, [x9, #92]
  40d6b0:	ldr	w13, [x11, #92]
  40d6b4:	cmp	w12, w13
  40d6b8:	b	40d698 <feof@plt+0xa5b8>
  40d6bc:	cmp	x8, x25
  40d6c0:	b.ls	40d614 <feof@plt+0xa534>  // b.plast
  40d6c4:	ldr	x9, [x25]
  40d6c8:	str	x11, [x25], #8
  40d6cc:	str	x9, [x8]
  40d6d0:	b	40d668 <feof@plt+0xa588>
  40d6d4:	add	x2, x29, #0x18
  40d6d8:	mov	x0, x19
  40d6dc:	mov	x1, x20
  40d6e0:	strb	w21, [x29, #24]
  40d6e4:	bl	40da1c <feof@plt+0xa93c>
  40d6e8:	b	40d6fc <feof@plt+0xa61c>
  40d6ec:	mov	x11, x10
  40d6f0:	cmp	x9, #0x8
  40d6f4:	str	x8, [x19, x11, lsl #3]
  40d6f8:	b.le	40d81c <feof@plt+0xa73c>
  40d6fc:	ldr	x8, [x20, #-8]!
  40d700:	ldr	x13, [x19]
  40d704:	sub	x9, x20, x19
  40d708:	asr	x12, x9, #3
  40d70c:	sub	x11, x12, #0x1
  40d710:	cmp	x11, #0x0
  40d714:	csel	x10, x12, x11, lt  // lt = tstop
  40d718:	cmp	x9, #0x11
  40d71c:	str	x13, [x20]
  40d720:	b.lt	40d788 <feof@plt+0xa6a8>  // b.tstop
  40d724:	mov	x14, xzr
  40d728:	asr	x13, x10, #1
  40d72c:	b	40d750 <feof@plt+0xa670>
  40d730:	cset	w16, cc  // cc = lo, ul, last
  40d734:	cmp	w16, #0x0
  40d738:	csel	x10, x10, x15, ne  // ne = any
  40d73c:	ldr	x15, [x19, x10, lsl #3]
  40d740:	cmp	x10, x13
  40d744:	str	x15, [x19, x14, lsl #3]
  40d748:	mov	x14, x10
  40d74c:	b.ge	40d78c <feof@plt+0xa6ac>  // b.tcont
  40d750:	lsl	x15, x14, #1
  40d754:	mov	w10, #0x1                   	// #1
  40d758:	add	x15, x15, #0x2
  40d75c:	bfi	x10, x14, #1, #63
  40d760:	ldr	x16, [x19, x15, lsl #3]
  40d764:	ldr	x17, [x19, x10, lsl #3]
  40d768:	ldr	w18, [x16, #88]
  40d76c:	ldr	w0, [x17, #88]
  40d770:	cmp	w18, w0
  40d774:	b.ne	40d730 <feof@plt+0xa650>  // b.any
  40d778:	ldr	w16, [x16, #92]
  40d77c:	ldr	w17, [x17, #92]
  40d780:	cmp	w16, w17
  40d784:	b	40d730 <feof@plt+0xa650>
  40d788:	mov	x10, xzr
  40d78c:	tbnz	w9, #3, 40d7c4 <feof@plt+0xa6e4>
  40d790:	sub	x12, x12, #0x2
  40d794:	cmp	x12, #0x0
  40d798:	csel	x11, x11, x12, lt  // lt = tstop
  40d79c:	cmp	x10, x11, asr #1
  40d7a0:	b.ne	40d7c4 <feof@plt+0xa6e4>  // b.any
  40d7a4:	mov	w11, #0x1                   	// #1
  40d7a8:	bfi	x11, x10, #1, #63
  40d7ac:	ldr	x12, [x19, x11, lsl #3]
  40d7b0:	str	x12, [x19, x10, lsl #3]
  40d7b4:	mov	x10, x11
  40d7b8:	cmp	x10, #0x1
  40d7bc:	b.ge	40d7e4 <feof@plt+0xa704>  // b.tcont
  40d7c0:	b	40d6ec <feof@plt+0xa60c>
  40d7c4:	cmp	x10, #0x1
  40d7c8:	b.ge	40d7e4 <feof@plt+0xa704>  // b.tcont
  40d7cc:	b	40d6ec <feof@plt+0xa60c>
  40d7d0:	b.cs	40d6ec <feof@plt+0xa60c>  // b.hs, b.nlast
  40d7d4:	cmp	x10, #0x2
  40d7d8:	str	x12, [x19, x10, lsl #3]
  40d7dc:	mov	x10, x11
  40d7e0:	b.le	40d6f0 <feof@plt+0xa610>
  40d7e4:	sub	x11, x10, #0x1
  40d7e8:	cmp	x11, #0x0
  40d7ec:	csel	x11, x10, x11, lt  // lt = tstop
  40d7f0:	asr	x11, x11, #1
  40d7f4:	ldr	x12, [x19, x11, lsl #3]
  40d7f8:	ldr	w14, [x8, #88]
  40d7fc:	ldr	w13, [x12, #88]
  40d800:	cmp	w13, w14
  40d804:	b.ne	40d7d0 <feof@plt+0xa6f0>  // b.any
  40d808:	ldr	w13, [x12, #92]
  40d80c:	ldr	w14, [x8, #92]
  40d810:	cmp	w13, w14
  40d814:	b.cc	40d7d4 <feof@plt+0xa6f4>  // b.lo, b.ul, b.last
  40d818:	b	40d6ec <feof@plt+0xa60c>
  40d81c:	ldp	x20, x19, [sp, #64]
  40d820:	ldp	x22, x21, [sp, #48]
  40d824:	ldp	x24, x23, [sp, #32]
  40d828:	ldr	x25, [sp, #16]
  40d82c:	ldp	x29, x30, [sp], #80
  40d830:	ret
  40d834:	stp	x29, x30, [sp, #-64]!
  40d838:	str	x23, [sp, #16]
  40d83c:	stp	x22, x21, [sp, #32]
  40d840:	stp	x20, x19, [sp, #48]
  40d844:	mov	x29, sp
  40d848:	sub	x8, x1, x0
  40d84c:	mov	x19, x1
  40d850:	mov	x20, x0
  40d854:	cmp	x8, #0x81
  40d858:	b.lt	40d8fc <feof@plt+0xa81c>  // b.tstop
  40d85c:	mov	w21, #0x1                   	// #1
  40d860:	mov	x22, x20
  40d864:	b	40d87c <feof@plt+0xa79c>
  40d868:	mov	x9, x20
  40d86c:	add	x21, x21, #0x1
  40d870:	cmp	x21, #0x10
  40d874:	str	x23, [x9]
  40d878:	b.eq	40d9b0 <feof@plt+0xa8d0>  // b.none
  40d87c:	mov	x8, x22
  40d880:	ldr	x23, [x22, #8]!
  40d884:	ldr	x9, [x20]
  40d888:	ldr	w10, [x23, #88]
  40d88c:	ldr	w11, [x9, #88]
  40d890:	cmp	w10, w11
  40d894:	b.ne	40d8a4 <feof@plt+0xa7c4>  // b.any
  40d898:	ldr	w11, [x23, #92]
  40d89c:	ldr	w9, [x9, #92]
  40d8a0:	cmp	w11, w9
  40d8a4:	b.cs	40d8c4 <feof@plt+0xa7e4>  // b.hs, b.nlast
  40d8a8:	subs	x2, x22, x20
  40d8ac:	b.eq	40d868 <feof@plt+0xa788>  // b.none
  40d8b0:	sub	x8, x8, x2
  40d8b4:	add	x0, x8, #0x10
  40d8b8:	mov	x1, x20
  40d8bc:	bl	402e30 <memmove@plt>
  40d8c0:	b	40d868 <feof@plt+0xa788>
  40d8c4:	mov	x9, x22
  40d8c8:	ldr	x11, [x8]
  40d8cc:	ldr	w12, [x11, #88]
  40d8d0:	cmp	w10, w12
  40d8d4:	b.ne	40d8e4 <feof@plt+0xa804>  // b.any
  40d8d8:	ldr	w10, [x23, #92]
  40d8dc:	ldr	w12, [x11, #92]
  40d8e0:	cmp	w10, w12
  40d8e4:	b.cs	40d86c <feof@plt+0xa78c>  // b.hs, b.nlast
  40d8e8:	str	x11, [x9]
  40d8ec:	ldr	w10, [x23, #88]
  40d8f0:	mov	x9, x8
  40d8f4:	sub	x8, x8, #0x8
  40d8f8:	b	40d8c8 <feof@plt+0xa7e8>
  40d8fc:	cmp	x20, x19
  40d900:	b.eq	40d9bc <feof@plt+0xa8dc>  // b.none
  40d904:	add	x21, x20, #0x8
  40d908:	cmp	x21, x19
  40d90c:	b.eq	40d9bc <feof@plt+0xa8dc>  // b.none
  40d910:	mov	x22, x20
  40d914:	b	40d930 <feof@plt+0xa850>
  40d918:	mov	x10, x20
  40d91c:	add	x21, x21, #0x8
  40d920:	cmp	x21, x19
  40d924:	add	x22, x22, #0x8
  40d928:	str	x23, [x10]
  40d92c:	b.eq	40d9bc <feof@plt+0xa8dc>  // b.none
  40d930:	ldr	x23, [x21]
  40d934:	ldr	x9, [x20]
  40d938:	ldr	w8, [x23, #88]
  40d93c:	ldr	w10, [x9, #88]
  40d940:	cmp	w8, w10
  40d944:	b.ne	40d954 <feof@plt+0xa874>  // b.any
  40d948:	ldr	w10, [x23, #92]
  40d94c:	ldr	w9, [x9, #92]
  40d950:	cmp	w10, w9
  40d954:	b.cs	40d974 <feof@plt+0xa894>  // b.hs, b.nlast
  40d958:	subs	x2, x21, x20
  40d95c:	b.eq	40d918 <feof@plt+0xa838>  // b.none
  40d960:	sub	x8, x22, x2
  40d964:	add	x0, x8, #0x10
  40d968:	mov	x1, x20
  40d96c:	bl	402e30 <memmove@plt>
  40d970:	b	40d918 <feof@plt+0xa838>
  40d974:	mov	x9, x22
  40d978:	mov	x10, x21
  40d97c:	ldr	x11, [x9]
  40d980:	ldr	w12, [x11, #88]
  40d984:	cmp	w8, w12
  40d988:	b.ne	40d998 <feof@plt+0xa8b8>  // b.any
  40d98c:	ldr	w8, [x23, #92]
  40d990:	ldr	w12, [x11, #92]
  40d994:	cmp	w8, w12
  40d998:	b.cs	40d91c <feof@plt+0xa83c>  // b.hs, b.nlast
  40d99c:	str	x11, [x10]
  40d9a0:	ldr	w8, [x23, #88]
  40d9a4:	mov	x10, x9
  40d9a8:	sub	x9, x9, #0x8
  40d9ac:	b	40d97c <feof@plt+0xa89c>
  40d9b0:	add	x8, x20, #0x80
  40d9b4:	cmp	x8, x19
  40d9b8:	b.ne	40d9e0 <feof@plt+0xa900>  // b.any
  40d9bc:	ldp	x20, x19, [sp, #48]
  40d9c0:	ldp	x22, x21, [sp, #32]
  40d9c4:	ldr	x23, [sp, #16]
  40d9c8:	ldp	x29, x30, [sp], #64
  40d9cc:	ret
  40d9d0:	add	x8, x8, #0x8
  40d9d4:	cmp	x8, x19
  40d9d8:	str	x9, [x10]
  40d9dc:	b.eq	40d9bc <feof@plt+0xa8dc>  // b.none
  40d9e0:	ldr	x9, [x8]
  40d9e4:	mov	x10, x8
  40d9e8:	mov	x11, x8
  40d9ec:	ldr	x12, [x11, #-8]!
  40d9f0:	ldr	w13, [x9, #88]
  40d9f4:	ldr	w14, [x12, #88]
  40d9f8:	cmp	w13, w14
  40d9fc:	b.ne	40da0c <feof@plt+0xa92c>  // b.any
  40da00:	ldr	w13, [x9, #92]
  40da04:	ldr	w14, [x12, #92]
  40da08:	cmp	w13, w14
  40da0c:	b.cs	40d9d0 <feof@plt+0xa8f0>  // b.hs, b.nlast
  40da10:	str	x12, [x10]
  40da14:	mov	x10, x11
  40da18:	b	40d9ec <feof@plt+0xa90c>
  40da1c:	sub	x8, x1, x0
  40da20:	cmp	x8, #0x10
  40da24:	b.ge	40da2c <feof@plt+0xa94c>  // b.tcont
  40da28:	ret
  40da2c:	asr	x10, x8, #3
  40da30:	sub	x9, x10, #0x2
  40da34:	sub	x11, x10, #0x1
  40da38:	cmp	x9, #0x0
  40da3c:	csel	x12, x11, x9, lt  // lt = tstop
  40da40:	cmp	x11, #0x0
  40da44:	asr	x9, x12, #1
  40da48:	csel	x10, x10, x11, lt  // lt = tstop
  40da4c:	asr	x10, x10, #1
  40da50:	orr	x11, x12, #0x1
  40da54:	mov	x13, x9
  40da58:	b	40da6c <feof@plt+0xa98c>
  40da5c:	mov	x15, x14
  40da60:	str	x13, [x0, x15, lsl #3]
  40da64:	sub	x13, x12, #0x1
  40da68:	cbz	x12, 40da28 <feof@plt+0xa948>
  40da6c:	mov	x12, x13
  40da70:	ldr	x13, [x0, x13, lsl #3]
  40da74:	cmp	x10, x12
  40da78:	mov	x14, x12
  40da7c:	b.le	40dae0 <feof@plt+0xaa00>
  40da80:	mov	x15, x12
  40da84:	b	40daa8 <feof@plt+0xa9c8>
  40da88:	cset	w17, cc  // cc = lo, ul, last
  40da8c:	cmp	w17, #0x0
  40da90:	csel	x14, x14, x16, ne  // ne = any
  40da94:	ldr	x16, [x0, x14, lsl #3]
  40da98:	cmp	x14, x10
  40da9c:	str	x16, [x0, x15, lsl #3]
  40daa0:	mov	x15, x14
  40daa4:	b.ge	40dae0 <feof@plt+0xaa00>  // b.tcont
  40daa8:	lsl	x16, x15, #1
  40daac:	mov	w14, #0x1                   	// #1
  40dab0:	add	x16, x16, #0x2
  40dab4:	bfi	x14, x15, #1, #63
  40dab8:	ldr	x17, [x0, x16, lsl #3]
  40dabc:	ldr	x18, [x0, x14, lsl #3]
  40dac0:	ldr	w1, [x17, #88]
  40dac4:	ldr	w2, [x18, #88]
  40dac8:	cmp	w1, w2
  40dacc:	b.ne	40da88 <feof@plt+0xa9a8>  // b.any
  40dad0:	ldr	w17, [x17, #92]
  40dad4:	ldr	w18, [x18, #92]
  40dad8:	cmp	w17, w18
  40dadc:	b	40da88 <feof@plt+0xa9a8>
  40dae0:	tbnz	w8, #3, 40daf8 <feof@plt+0xaa18>
  40dae4:	cmp	x14, x9
  40dae8:	b.ne	40daf8 <feof@plt+0xaa18>  // b.any
  40daec:	ldr	x14, [x0, x11, lsl #3]
  40daf0:	str	x14, [x0, x9, lsl #3]
  40daf4:	mov	x14, x11
  40daf8:	cmp	x14, x12
  40dafc:	b.gt	40db18 <feof@plt+0xaa38>
  40db00:	b	40da5c <feof@plt+0xa97c>
  40db04:	b.cs	40da5c <feof@plt+0xa97c>  // b.hs, b.nlast
  40db08:	cmp	x15, x12
  40db0c:	str	x16, [x0, x14, lsl #3]
  40db10:	mov	x14, x15
  40db14:	b.le	40da60 <feof@plt+0xa980>
  40db18:	sub	x15, x14, #0x1
  40db1c:	cmp	x15, #0x0
  40db20:	csel	x15, x14, x15, lt  // lt = tstop
  40db24:	asr	x15, x15, #1
  40db28:	ldr	x16, [x0, x15, lsl #3]
  40db2c:	ldr	w18, [x13, #88]
  40db30:	ldr	w17, [x16, #88]
  40db34:	cmp	w17, w18
  40db38:	b.ne	40db04 <feof@plt+0xaa24>  // b.any
  40db3c:	ldr	w17, [x16, #92]
  40db40:	ldr	w18, [x13, #92]
  40db44:	cmp	w17, w18
  40db48:	b.cc	40db08 <feof@plt+0xaa28>  // b.lo, b.ul, b.last
  40db4c:	b	40da5c <feof@plt+0xa97c>
  40db50:	ldr	x8, [x1]
  40db54:	ldr	x9, [x2]
  40db58:	ldr	w10, [x8, #88]
  40db5c:	ldr	w11, [x9, #88]
  40db60:	cmp	w10, w11
  40db64:	b.ne	40db74 <feof@plt+0xaa94>  // b.any
  40db68:	ldr	w12, [x8, #92]
  40db6c:	ldr	w13, [x9, #92]
  40db70:	cmp	w12, w13
  40db74:	b.cs	40dbb4 <feof@plt+0xaad4>  // b.hs, b.nlast
  40db78:	ldr	x12, [x3]
  40db7c:	ldr	w13, [x12, #88]
  40db80:	cmp	w11, w13
  40db84:	b.ne	40db94 <feof@plt+0xaab4>  // b.any
  40db88:	ldr	w9, [x9, #92]
  40db8c:	ldr	w11, [x12, #92]
  40db90:	cmp	w9, w11
  40db94:	b.cc	40dc14 <feof@plt+0xab34>  // b.lo, b.ul, b.last
  40db98:	cmp	w10, w13
  40db9c:	b.ne	40dbac <feof@plt+0xaacc>  // b.any
  40dba0:	ldr	w8, [x8, #92]
  40dba4:	ldr	w9, [x12, #92]
  40dba8:	cmp	w8, w9
  40dbac:	b.cs	40dbd4 <feof@plt+0xaaf4>  // b.hs, b.nlast
  40dbb0:	b	40dc00 <feof@plt+0xab20>
  40dbb4:	ldr	x12, [x3]
  40dbb8:	ldr	w13, [x12, #88]
  40dbbc:	cmp	w10, w13
  40dbc0:	b.ne	40dbd0 <feof@plt+0xaaf0>  // b.any
  40dbc4:	ldr	w8, [x8, #92]
  40dbc8:	ldr	w10, [x12, #92]
  40dbcc:	cmp	w8, w10
  40dbd0:	b.cs	40dbe8 <feof@plt+0xab08>  // b.hs, b.nlast
  40dbd4:	ldr	x8, [x1]
  40dbd8:	ldr	x9, [x0]
  40dbdc:	str	x8, [x0]
  40dbe0:	str	x9, [x1]
  40dbe4:	ret
  40dbe8:	cmp	w11, w13
  40dbec:	b.ne	40dbfc <feof@plt+0xab1c>  // b.any
  40dbf0:	ldr	w8, [x9, #92]
  40dbf4:	ldr	w9, [x12, #92]
  40dbf8:	cmp	w8, w9
  40dbfc:	b.cs	40dc14 <feof@plt+0xab34>  // b.hs, b.nlast
  40dc00:	ldr	x8, [x3]
  40dc04:	ldr	x9, [x0]
  40dc08:	str	x8, [x0]
  40dc0c:	str	x9, [x3]
  40dc10:	ret
  40dc14:	ldr	x8, [x2]
  40dc18:	ldr	x9, [x0]
  40dc1c:	str	x8, [x0]
  40dc20:	str	x9, [x2]
  40dc24:	ret
  40dc28:	sub	sp, sp, #0x70
  40dc2c:	stp	x29, x30, [sp, #80]
  40dc30:	stp	x20, x19, [sp, #96]
  40dc34:	add	x29, sp, #0x50
  40dc38:	mov	x19, x1
  40dc3c:	mov	x20, x0
  40dc40:	add	x0, sp, #0x8
  40dc44:	mov	w1, wzr
  40dc48:	bl	41a454 <feof@plt+0x17374>
  40dc4c:	ldr	x8, [sp, #16]
  40dc50:	add	x1, sp, #0x8
  40dc54:	mov	x0, x20
  40dc58:	str	x19, [x8, #192]
  40dc5c:	ldr	x8, [x20]
  40dc60:	ldr	x8, [x8, #24]
  40dc64:	blr	x8
  40dc68:	add	x0, sp, #0x8
  40dc6c:	bl	41a0d4 <feof@plt+0x16ff4>
  40dc70:	add	x0, sp, #0x8
  40dc74:	bl	41a558 <feof@plt+0x17478>
  40dc78:	ldp	x20, x19, [sp, #96]
  40dc7c:	ldp	x29, x30, [sp, #80]
  40dc80:	add	sp, sp, #0x70
  40dc84:	ret
  40dc88:	stp	x29, x30, [sp, #-48]!
  40dc8c:	str	x21, [sp, #16]
  40dc90:	stp	x20, x19, [sp, #32]
  40dc94:	mov	x29, sp
  40dc98:	ldr	x8, [x0, #16]
  40dc9c:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40dca0:	mov	x19, x0
  40dca4:	add	x9, x9, #0xe28
  40dca8:	cmp	x8, #0x1
  40dcac:	str	x9, [x0]
  40dcb0:	b.lt	40dcd4 <feof@plt+0xabf4>  // b.tstop
  40dcb4:	ldr	x20, [x19, #8]
  40dcb8:	add	x21, x20, x8, lsl #4
  40dcbc:	ldr	x9, [x20]
  40dcc0:	cmp	x9, #0x1
  40dcc4:	b.hi	40dcdc <feof@plt+0xabfc>  // b.pmore
  40dcc8:	add	x20, x20, #0x10
  40dccc:	cmp	x20, x21
  40dcd0:	b.cc	40dcbc <feof@plt+0xabdc>  // b.lo, b.ul, b.last
  40dcd4:	mov	x20, xzr
  40dcd8:	mov	x21, xzr
  40dcdc:	orr	x9, x20, x21
  40dce0:	cbnz	x9, 40dcf8 <feof@plt+0xac18>
  40dce4:	b	40dd34 <feof@plt+0xac54>
  40dce8:	mov	x21, xzr
  40dcec:	mov	x20, xzr
  40dcf0:	orr	x8, x20, x21
  40dcf4:	cbz	x8, 40dd30 <feof@plt+0xac50>
  40dcf8:	ldr	x0, [x20]
  40dcfc:	bl	402b20 <free@plt>
  40dd00:	ldr	x0, [x20, #8]
  40dd04:	cbz	x0, 40dd14 <feof@plt+0xac34>
  40dd08:	ldr	x8, [x0]
  40dd0c:	ldr	x8, [x8, #8]
  40dd10:	blr	x8
  40dd14:	add	x20, x20, #0x10
  40dd18:	cmp	x20, x21
  40dd1c:	b.cs	40dce8 <feof@plt+0xac08>  // b.hs, b.nlast
  40dd20:	ldr	x8, [x20]
  40dd24:	cmp	x8, #0x1
  40dd28:	b.ls	40dd14 <feof@plt+0xac34>  // b.plast
  40dd2c:	b	40dcf0 <feof@plt+0xac10>
  40dd30:	ldr	x8, [x19, #16]
  40dd34:	mov	x9, x8
  40dd38:	sub	x9, x9, #0x1
  40dd3c:	cmp	x9, x8
  40dd40:	b.cc	40dd38 <feof@plt+0xac58>  // b.lo, b.ul, b.last
  40dd44:	ldrb	w8, [x19, #52]
  40dd48:	ldr	x0, [x19, #8]
  40dd4c:	cbz	w8, 40dd60 <feof@plt+0xac80>
  40dd50:	ldp	x20, x19, [sp, #32]
  40dd54:	ldr	x21, [sp, #16]
  40dd58:	ldp	x29, x30, [sp], #48
  40dd5c:	b	40eff8 <feof@plt+0xbf18>
  40dd60:	ldp	x20, x19, [sp, #32]
  40dd64:	ldr	x21, [sp, #16]
  40dd68:	ldp	x29, x30, [sp], #48
  40dd6c:	b	402b20 <free@plt>
  40dd70:	stp	x29, x30, [sp, #-32]!
  40dd74:	str	x19, [sp, #16]
  40dd78:	mov	x29, sp
  40dd7c:	mov	x19, x0
  40dd80:	bl	40dc88 <feof@plt+0xaba8>
  40dd84:	mov	x0, x19
  40dd88:	ldr	x19, [sp, #16]
  40dd8c:	ldp	x29, x30, [sp], #32
  40dd90:	b	402d00 <_ZdlPv@plt>
  40dd94:	stp	x29, x30, [sp, #-80]!
  40dd98:	str	x25, [sp, #16]
  40dd9c:	stp	x24, x23, [sp, #32]
  40dda0:	stp	x22, x21, [sp, #48]
  40dda4:	stp	x20, x19, [sp, #64]
  40dda8:	mov	x29, sp
  40ddac:	mov	x19, x1
  40ddb0:	mov	x20, x0
  40ddb4:	mov	w1, #0x7b                  	// #123
  40ddb8:	mov	x0, x19
  40ddbc:	bl	41803c <feof@plt+0x14f5c>
  40ddc0:	ldp	x8, x9, [x20, #8]
  40ddc4:	cmp	x9, #0x1
  40ddc8:	b.lt	40ddec <feof@plt+0xad0c>  // b.tstop
  40ddcc:	add	x24, x8, x9, lsl #4
  40ddd0:	mov	x25, x8
  40ddd4:	ldr	x10, [x25]
  40ddd8:	cmp	x10, #0x1
  40dddc:	b.hi	40ddf4 <feof@plt+0xad14>  // b.pmore
  40dde0:	add	x25, x25, #0x10
  40dde4:	cmp	x25, x24
  40dde8:	b.cc	40ddd4 <feof@plt+0xacf4>  // b.lo, b.ul, b.last
  40ddec:	mov	x25, xzr
  40ddf0:	mov	x24, xzr
  40ddf4:	orr	x10, x25, x24
  40ddf8:	cbz	x10, 40debc <feof@plt+0xaddc>
  40ddfc:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1838>
  40de00:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1838>
  40de04:	add	x21, x21, #0xf23
  40de08:	add	x22, x22, #0xf20
  40de0c:	cmp	x9, #0x1
  40de10:	b.lt	40de30 <feof@plt+0xad50>  // b.tstop
  40de14:	add	x9, x8, x9, lsl #4
  40de18:	ldr	x10, [x8]
  40de1c:	cmp	x10, #0x1
  40de20:	b.hi	40de38 <feof@plt+0xad58>  // b.pmore
  40de24:	add	x8, x8, #0x10
  40de28:	cmp	x8, x9
  40de2c:	b.cc	40de18 <feof@plt+0xad38>  // b.lo, b.ul, b.last
  40de30:	mov	x8, xzr
  40de34:	mov	x9, xzr
  40de38:	cmp	x25, x8
  40de3c:	b.ne	40de48 <feof@plt+0xad68>  // b.any
  40de40:	cmp	x24, x9
  40de44:	b.eq	40de54 <feof@plt+0xad74>  // b.none
  40de48:	mov	x0, x19
  40de4c:	mov	x1, x22
  40de50:	bl	419e20 <feof@plt+0x16d40>
  40de54:	ldp	x2, x23, [x25]
  40de58:	mov	x0, x19
  40de5c:	mov	x1, x21
  40de60:	bl	41a658 <feof@plt+0x17578>
  40de64:	ldr	x8, [x23]
  40de68:	mov	x0, x23
  40de6c:	mov	x1, x19
  40de70:	ldr	x8, [x8, #24]
  40de74:	blr	x8
  40de78:	add	x25, x25, #0x10
  40de7c:	cmp	x25, x24
  40de80:	b.cs	40de9c <feof@plt+0xadbc>  // b.hs, b.nlast
  40de84:	ldr	x8, [x25]
  40de88:	cmp	x8, #0x1
  40de8c:	b.ls	40de78 <feof@plt+0xad98>  // b.plast
  40de90:	orr	x8, x25, x24
  40de94:	cbnz	x8, 40deac <feof@plt+0xadcc>
  40de98:	b	40debc <feof@plt+0xaddc>
  40de9c:	mov	x24, xzr
  40dea0:	mov	x25, xzr
  40dea4:	orr	x8, x25, x24
  40dea8:	cbz	x8, 40debc <feof@plt+0xaddc>
  40deac:	ldp	x8, x9, [x20, #8]
  40deb0:	cmp	x9, #0x1
  40deb4:	b.ge	40de14 <feof@plt+0xad34>  // b.tcont
  40deb8:	b	40de30 <feof@plt+0xad50>
  40debc:	mov	x0, x19
  40dec0:	ldp	x20, x19, [sp, #64]
  40dec4:	ldp	x22, x21, [sp, #48]
  40dec8:	ldp	x24, x23, [sp, #32]
  40decc:	ldr	x25, [sp, #16]
  40ded0:	mov	w1, #0x7d                  	// #125
  40ded4:	ldp	x29, x30, [sp], #80
  40ded8:	b	41803c <feof@plt+0x14f5c>
  40dedc:	sub	sp, sp, #0x40
  40dee0:	stp	x29, x30, [sp, #16]
  40dee4:	str	x21, [sp, #32]
  40dee8:	stp	x20, x19, [sp, #48]
  40deec:	add	x29, sp, #0x10
  40def0:	str	x1, [x29, #24]
  40def4:	cbz	x1, 40df94 <feof@plt+0xaeb4>
  40def8:	mov	x19, x2
  40defc:	cbz	x2, 40dfac <feof@plt+0xaecc>
  40df00:	add	x20, x0, #0x8
  40df04:	mov	x0, x1
  40df08:	bl	4610d8 <feof@plt+0x5dff8>
  40df0c:	mov	w2, w0
  40df10:	add	x1, x29, #0x18
  40df14:	mov	x0, x20
  40df18:	bl	40e5e0 <feof@plt+0xb500>
  40df1c:	ldr	x8, [x0], #8
  40df20:	cmp	x8, #0x0
  40df24:	csel	x21, xzr, x0, eq  // eq = none
  40df28:	cbz	x8, 40df48 <feof@plt+0xae68>
  40df2c:	ldr	x0, [x21]
  40df30:	cbz	x0, 40df40 <feof@plt+0xae60>
  40df34:	ldr	x8, [x0]
  40df38:	ldr	x8, [x8, #8]
  40df3c:	blr	x8
  40df40:	str	x19, [x21]
  40df44:	b	40df80 <feof@plt+0xaea0>
  40df48:	ldr	x0, [x29, #24]
  40df4c:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  40df50:	str	x0, [sp, #8]
  40df54:	bl	4610d8 <feof@plt+0x5dff8>
  40df58:	mov	w2, w0
  40df5c:	add	x1, sp, #0x8
  40df60:	mov	w3, #0x1                   	// #1
  40df64:	mov	x0, x20
  40df68:	bl	40e714 <feof@plt+0xb634>
  40df6c:	ldr	x8, [x0]
  40df70:	cbnz	x8, 40df7c <feof@plt+0xae9c>
  40df74:	ldr	x8, [sp, #8]
  40df78:	str	x8, [x0]
  40df7c:	str	x19, [x0, #8]
  40df80:	ldp	x20, x19, [sp, #48]
  40df84:	ldr	x21, [sp, #32]
  40df88:	ldp	x29, x30, [sp, #16]
  40df8c:	add	sp, sp, #0x40
  40df90:	ret
  40df94:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40df98:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  40df9c:	add	x0, x0, #0xf2a
  40dfa0:	add	x2, x2, #0xbd5
  40dfa4:	mov	w1, #0x55                  	// #85
  40dfa8:	bl	40f560 <feof@plt+0xc480>
  40dfac:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40dfb0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  40dfb4:	add	x0, x0, #0xf2a
  40dfb8:	add	x2, x2, #0xbd5
  40dfbc:	mov	w1, #0x56                  	// #86
  40dfc0:	bl	40f560 <feof@plt+0xc480>
  40dfc4:	stp	x29, x30, [sp, #-32]!
  40dfc8:	stp	x20, x19, [sp, #16]
  40dfcc:	mov	x29, sp
  40dfd0:	mov	x19, x0
  40dfd4:	ldr	x0, [x0, #8]
  40dfd8:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40dfdc:	add	x8, x8, #0xe58
  40dfe0:	str	x8, [x19]
  40dfe4:	cbz	x0, 40e040 <feof@plt+0xaf60>
  40dfe8:	mov	x20, xzr
  40dfec:	b	40dff8 <feof@plt+0xaf18>
  40dff0:	add	x20, x20, #0x1
  40dff4:	cbz	x0, 40e040 <feof@plt+0xaf60>
  40dff8:	ldr	w8, [x0, #4]
  40dffc:	cmp	x20, x8
  40e000:	b.cs	40e028 <feof@plt+0xaf48>  // b.hs, b.nlast
  40e004:	add	x8, x0, x20, lsl #3
  40e008:	ldr	x8, [x8, #8]
  40e00c:	cbz	x8, 40dff0 <feof@plt+0xaf10>
  40e010:	ldr	x9, [x8]
  40e014:	mov	x0, x8
  40e018:	ldr	x9, [x9, #8]
  40e01c:	blr	x9
  40e020:	ldr	x0, [x19, #8]
  40e024:	b	40dff0 <feof@plt+0xaf10>
  40e028:	ldr	w8, [x0]
  40e02c:	tbnz	w8, #31, 40e03c <feof@plt+0xaf5c>
  40e030:	bl	402b20 <free@plt>
  40e034:	str	xzr, [x19, #8]
  40e038:	b	40e040 <feof@plt+0xaf60>
  40e03c:	str	wzr, [x0, #4]
  40e040:	ldp	x20, x19, [sp, #16]
  40e044:	ldp	x29, x30, [sp], #32
  40e048:	ret
  40e04c:	stp	x29, x30, [sp, #-32]!
  40e050:	stp	x20, x19, [sp, #16]
  40e054:	mov	x29, sp
  40e058:	mov	x19, x0
  40e05c:	ldr	x0, [x0, #8]
  40e060:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40e064:	add	x8, x8, #0xe58
  40e068:	str	x8, [x19]
  40e06c:	cbz	x0, 40e0c4 <feof@plt+0xafe4>
  40e070:	mov	x20, xzr
  40e074:	b	40e080 <feof@plt+0xafa0>
  40e078:	add	x20, x20, #0x1
  40e07c:	cbz	x0, 40e0c4 <feof@plt+0xafe4>
  40e080:	ldr	w8, [x0, #4]
  40e084:	cmp	x20, x8
  40e088:	b.cs	40e0b0 <feof@plt+0xafd0>  // b.hs, b.nlast
  40e08c:	add	x8, x0, x20, lsl #3
  40e090:	ldr	x8, [x8, #8]
  40e094:	cbz	x8, 40e078 <feof@plt+0xaf98>
  40e098:	ldr	x9, [x8]
  40e09c:	mov	x0, x8
  40e0a0:	ldr	x9, [x9, #8]
  40e0a4:	blr	x9
  40e0a8:	ldr	x0, [x19, #8]
  40e0ac:	b	40e078 <feof@plt+0xaf98>
  40e0b0:	ldr	w8, [x0]
  40e0b4:	tbnz	w8, #31, 40e0c0 <feof@plt+0xafe0>
  40e0b8:	bl	402b20 <free@plt>
  40e0bc:	b	40e0c4 <feof@plt+0xafe4>
  40e0c0:	str	wzr, [x0, #4]
  40e0c4:	mov	x0, x19
  40e0c8:	ldp	x20, x19, [sp, #16]
  40e0cc:	ldp	x29, x30, [sp], #32
  40e0d0:	b	402d00 <_ZdlPv@plt>
  40e0d4:	stp	x29, x30, [sp, #-64]!
  40e0d8:	str	x23, [sp, #16]
  40e0dc:	stp	x22, x21, [sp, #32]
  40e0e0:	stp	x20, x19, [sp, #48]
  40e0e4:	mov	x29, sp
  40e0e8:	mov	x19, x1
  40e0ec:	mov	x20, x0
  40e0f0:	mov	w1, #0x5b                  	// #91
  40e0f4:	mov	x0, x19
  40e0f8:	bl	41803c <feof@plt+0x14f5c>
  40e0fc:	ldr	x8, [x20, #8]
  40e100:	cbz	x8, 40e15c <feof@plt+0xb07c>
  40e104:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1838>
  40e108:	mov	x23, xzr
  40e10c:	add	x21, x21, #0xf20
  40e110:	b	40e134 <feof@plt+0xb054>
  40e114:	ldr	x8, [x22]
  40e118:	mov	x0, x22
  40e11c:	mov	x1, x19
  40e120:	ldr	x8, [x8, #24]
  40e124:	blr	x8
  40e128:	ldr	x8, [x20, #8]
  40e12c:	add	x23, x23, #0x1
  40e130:	cbz	x8, 40e15c <feof@plt+0xb07c>
  40e134:	ldr	w9, [x8, #4]
  40e138:	cmp	x23, x9
  40e13c:	b.cs	40e15c <feof@plt+0xb07c>  // b.hs, b.nlast
  40e140:	add	x8, x8, x23, lsl #3
  40e144:	ldr	x22, [x8, #8]
  40e148:	cbz	x23, 40e114 <feof@plt+0xb034>
  40e14c:	mov	x0, x19
  40e150:	mov	x1, x21
  40e154:	bl	419e20 <feof@plt+0x16d40>
  40e158:	b	40e114 <feof@plt+0xb034>
  40e15c:	mov	x0, x19
  40e160:	ldp	x20, x19, [sp, #48]
  40e164:	ldp	x22, x21, [sp, #32]
  40e168:	ldr	x23, [sp, #16]
  40e16c:	mov	w1, #0x5d                  	// #93
  40e170:	ldp	x29, x30, [sp], #64
  40e174:	b	41803c <feof@plt+0x14f5c>
  40e178:	stp	x29, x30, [sp, #-80]!
  40e17c:	str	x25, [sp, #16]
  40e180:	stp	x24, x23, [sp, #32]
  40e184:	stp	x22, x21, [sp, #48]
  40e188:	stp	x20, x19, [sp, #64]
  40e18c:	mov	x29, sp
  40e190:	cbz	x1, 40e32c <feof@plt+0xb24c>
  40e194:	ldr	x23, [x0, #8]
  40e198:	mov	x19, x1
  40e19c:	mov	x20, x0
  40e1a0:	cbz	x23, 40e1e8 <feof@plt+0xb108>
  40e1a4:	ldp	w8, w9, [x23]
  40e1a8:	and	w0, w8, #0x7fffffff
  40e1ac:	cmp	w0, w9
  40e1b0:	b.ne	40e2f0 <feof@plt+0xb210>  // b.any
  40e1b4:	tbnz	w8, #31, 40e1f8 <feof@plt+0xb118>
  40e1b8:	add	w1, w0, #0x1
  40e1bc:	bl	41bd34 <feof@plt+0x18c54>
  40e1c0:	ldr	x8, [x20, #8]
  40e1c4:	mov	w9, w0
  40e1c8:	lsl	x9, x9, #3
  40e1cc:	mov	w21, w0
  40e1d0:	add	x1, x9, #0x8
  40e1d4:	mov	w22, wzr
  40e1d8:	cbz	x8, 40e320 <feof@plt+0xb240>
  40e1dc:	ldr	w25, [x8, #4]
  40e1e0:	mov	w24, wzr
  40e1e4:	b	40e228 <feof@plt+0xb148>
  40e1e8:	mov	w22, wzr
  40e1ec:	mov	w24, wzr
  40e1f0:	mov	w21, #0x4                   	// #4
  40e1f4:	b	40e214 <feof@plt+0xb134>
  40e1f8:	str	xzr, [x20, #8]
  40e1fc:	ldr	w22, [x23, #4]
  40e200:	mov	w8, #0x4                   	// #4
  40e204:	mov	w24, #0x1                   	// #1
  40e208:	add	w9, w22, #0x1
  40e20c:	cmp	w9, #0x4
  40e210:	csinc	w21, w8, w22, ls  // ls = plast
  40e214:	mov	w9, w21
  40e218:	lsl	x9, x9, #3
  40e21c:	mov	x8, xzr
  40e220:	mov	w25, wzr
  40e224:	add	x1, x9, #0x8
  40e228:	mov	x0, x8
  40e22c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  40e230:	and	w8, w21, #0x7fffffff
  40e234:	str	x0, [x20, #8]
  40e238:	stp	w8, w25, [x0]
  40e23c:	cbz	w24, 40e2f0 <feof@plt+0xb210>
  40e240:	ldr	x11, [x20, #8]
  40e244:	cbz	w22, 40e2ec <feof@plt+0xb20c>
  40e248:	sub	w12, w22, #0x1
  40e24c:	add	x8, x23, #0x8
  40e250:	cmp	w12, #0x3
  40e254:	add	x9, x11, #0x8
  40e258:	b.cs	40e264 <feof@plt+0xb184>  // b.hs, b.nlast
  40e25c:	mov	w10, w22
  40e260:	b	40e2d8 <feof@plt+0xb1f8>
  40e264:	lsl	x10, x12, #3
  40e268:	add	x13, x23, x10
  40e26c:	add	x13, x13, #0x10
  40e270:	cmp	x9, x13
  40e274:	b.cs	40e28c <feof@plt+0xb1ac>  // b.hs, b.nlast
  40e278:	add	x10, x11, x10
  40e27c:	add	x10, x10, #0x10
  40e280:	cmp	x8, x10
  40e284:	mov	w10, w22
  40e288:	b.cc	40e2d8 <feof@plt+0xb1f8>  // b.lo, b.ul, b.last
  40e28c:	add	x12, x12, #0x1
  40e290:	and	x13, x12, #0x1fffffffc
  40e294:	lsl	x8, x13, #3
  40e298:	add	x14, x11, #0x18
  40e29c:	add	x9, x23, x8
  40e2a0:	add	x11, x11, x8
  40e2a4:	sub	w10, w22, w13
  40e2a8:	add	x8, x9, #0x8
  40e2ac:	add	x9, x11, #0x8
  40e2b0:	add	x11, x23, #0x18
  40e2b4:	mov	x15, x13
  40e2b8:	ldp	q0, q1, [x11, #-16]
  40e2bc:	subs	x15, x15, #0x4
  40e2c0:	add	x11, x11, #0x20
  40e2c4:	stp	q0, q1, [x14, #-16]
  40e2c8:	add	x14, x14, #0x20
  40e2cc:	b.ne	40e2b8 <feof@plt+0xb1d8>  // b.any
  40e2d0:	cmp	x12, x13
  40e2d4:	b.eq	40e2e8 <feof@plt+0xb208>  // b.none
  40e2d8:	ldr	x11, [x8], #8
  40e2dc:	subs	w10, w10, #0x1
  40e2e0:	str	x11, [x9], #8
  40e2e4:	b.ne	40e2d8 <feof@plt+0xb1f8>  // b.any
  40e2e8:	ldr	x11, [x20, #8]
  40e2ec:	str	w22, [x11, #4]
  40e2f0:	ldr	x8, [x20, #8]
  40e2f4:	ldr	x25, [sp, #16]
  40e2f8:	ldr	w9, [x8, #4]
  40e2fc:	add	w10, w9, #0x1
  40e300:	add	x9, x8, x9, lsl #3
  40e304:	str	w10, [x8, #4]
  40e308:	str	x19, [x9, #8]
  40e30c:	ldp	x20, x19, [sp, #64]
  40e310:	ldp	x22, x21, [sp, #48]
  40e314:	ldp	x24, x23, [sp, #32]
  40e318:	ldp	x29, x30, [sp], #80
  40e31c:	ret
  40e320:	mov	w24, wzr
  40e324:	mov	w25, wzr
  40e328:	b	40e228 <feof@plt+0xb148>
  40e32c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40e330:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40e334:	add	x0, x0, #0xf2a
  40e338:	add	x2, x2, #0xd56
  40e33c:	mov	w1, #0x89                  	// #137
  40e340:	bl	40f560 <feof@plt+0xc480>
  40e344:	stp	x29, x30, [sp, #-32]!
  40e348:	stp	x28, x19, [sp, #16]
  40e34c:	mov	x29, sp
  40e350:	sub	sp, sp, #0x400
  40e354:	ldr	d0, [x0, #8]
  40e358:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40e35c:	mov	x19, x1
  40e360:	add	x2, x2, #0xf3c
  40e364:	mov	x0, sp
  40e368:	mov	w1, #0x400                 	// #1024
  40e36c:	bl	402df0 <snprintf@plt>
  40e370:	mov	x1, sp
  40e374:	mov	x0, x19
  40e378:	bl	419e20 <feof@plt+0x16d40>
  40e37c:	add	sp, sp, #0x400
  40e380:	ldp	x28, x19, [sp, #16]
  40e384:	ldp	x29, x30, [sp], #32
  40e388:	ret
  40e38c:	stp	x29, x30, [sp, #-32]!
  40e390:	str	x19, [sp, #16]
  40e394:	mov	x29, sp
  40e398:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40e39c:	add	x8, x8, #0xe88
  40e3a0:	str	x8, [x0]
  40e3a4:	cbz	x1, 40e3c4 <feof@plt+0xb2e4>
  40e3a8:	mov	x19, x0
  40e3ac:	mov	x0, x1
  40e3b0:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  40e3b4:	str	x0, [x19, #8]
  40e3b8:	ldr	x19, [sp, #16]
  40e3bc:	ldp	x29, x30, [sp], #32
  40e3c0:	ret
  40e3c4:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40e3c8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  40e3cc:	add	x0, x0, #0xf2a
  40e3d0:	add	x2, x2, #0x415
  40e3d4:	mov	w1, #0x9f                  	// #159
  40e3d8:	bl	40f560 <feof@plt+0xc480>
  40e3dc:	stp	x29, x30, [sp, #-96]!
  40e3e0:	str	x27, [sp, #16]
  40e3e4:	stp	x26, x25, [sp, #32]
  40e3e8:	stp	x24, x23, [sp, #48]
  40e3ec:	stp	x22, x21, [sp, #64]
  40e3f0:	stp	x20, x19, [sp, #80]
  40e3f4:	mov	x29, sp
  40e3f8:	mov	x19, x1
  40e3fc:	mov	x20, x0
  40e400:	mov	w1, #0x22                  	// #34
  40e404:	mov	x0, x19
  40e408:	bl	41803c <feof@plt+0x14f5c>
  40e40c:	ldr	x26, [x20, #8]
  40e410:	adrp	x20, 463000 <_obstack_memory_used@@Base+0x1838>
  40e414:	adrp	x27, 463000 <_obstack_memory_used@@Base+0x1838>
  40e418:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1838>
  40e41c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1838>
  40e420:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  40e424:	adrp	x24, 463000 <_obstack_memory_used@@Base+0x1838>
  40e428:	adrp	x25, 463000 <_obstack_memory_used@@Base+0x1838>
  40e42c:	add	x20, x20, #0xf42
  40e430:	add	x27, x27, #0xdf0
  40e434:	add	x21, x21, #0xf45
  40e438:	add	x22, x22, #0xf4e
  40e43c:	add	x23, x23, #0xf48
  40e440:	add	x24, x24, #0xf4b
  40e444:	add	x25, x25, #0xf3f
  40e448:	b	40e45c <feof@plt+0xb37c>
  40e44c:	mov	x0, x19
  40e450:	mov	x1, x20
  40e454:	bl	419e20 <feof@plt+0x16d40>
  40e458:	add	x26, x26, #0x1
  40e45c:	ldrb	w1, [x26]
  40e460:	cmp	w1, #0x22
  40e464:	b.hi	40e48c <feof@plt+0xb3ac>  // b.pmore
  40e468:	adr	x8, 40e44c <feof@plt+0xb36c>
  40e46c:	ldrb	w9, [x27, x1]
  40e470:	add	x8, x8, x9, lsl #2
  40e474:	br	x8
  40e478:	mov	x0, x19
  40e47c:	mov	x1, x21
  40e480:	bl	419e20 <feof@plt+0x16d40>
  40e484:	add	x26, x26, #0x1
  40e488:	b	40e45c <feof@plt+0xb37c>
  40e48c:	cmp	w1, #0x5c
  40e490:	b.eq	40e44c <feof@plt+0xb36c>  // b.none
  40e494:	mov	x0, x19
  40e498:	bl	41803c <feof@plt+0x14f5c>
  40e49c:	add	x26, x26, #0x1
  40e4a0:	b	40e45c <feof@plt+0xb37c>
  40e4a4:	mov	x0, x19
  40e4a8:	mov	x1, x22
  40e4ac:	bl	419e20 <feof@plt+0x16d40>
  40e4b0:	add	x26, x26, #0x1
  40e4b4:	b	40e45c <feof@plt+0xb37c>
  40e4b8:	mov	x0, x19
  40e4bc:	mov	x1, x23
  40e4c0:	bl	419e20 <feof@plt+0x16d40>
  40e4c4:	add	x26, x26, #0x1
  40e4c8:	b	40e45c <feof@plt+0xb37c>
  40e4cc:	mov	x0, x19
  40e4d0:	mov	x1, x24
  40e4d4:	bl	419e20 <feof@plt+0x16d40>
  40e4d8:	add	x26, x26, #0x1
  40e4dc:	b	40e45c <feof@plt+0xb37c>
  40e4e0:	mov	x0, x19
  40e4e4:	mov	x1, x25
  40e4e8:	bl	419e20 <feof@plt+0x16d40>
  40e4ec:	add	x26, x26, #0x1
  40e4f0:	b	40e45c <feof@plt+0xb37c>
  40e4f4:	mov	x0, x19
  40e4f8:	ldp	x20, x19, [sp, #80]
  40e4fc:	ldp	x22, x21, [sp, #64]
  40e500:	ldp	x24, x23, [sp, #48]
  40e504:	ldp	x26, x25, [sp, #32]
  40e508:	ldr	x27, [sp, #16]
  40e50c:	mov	w1, #0x22                  	// #34
  40e510:	ldp	x29, x30, [sp], #96
  40e514:	b	41803c <feof@plt+0x14f5c>
  40e518:	stp	x29, x30, [sp, #-16]!
  40e51c:	mov	x29, sp
  40e520:	ldr	w8, [x0, #8]
  40e524:	sub	w8, w8, #0x4
  40e528:	cmp	w8, #0x3
  40e52c:	b.cs	40e548 <feof@plt+0xb468>  // b.hs, b.nlast
  40e530:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40e534:	add	x9, x9, #0xf08
  40e538:	mov	x0, x1
  40e53c:	ldr	x1, [x9, w8, sxtw #3]
  40e540:	ldp	x29, x30, [sp], #16
  40e544:	b	419e20 <feof@plt+0x16d40>
  40e548:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40e54c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40e550:	add	x0, x0, #0xf2a
  40e554:	add	x2, x2, #0xf61
  40e558:	mov	w1, #0xde                  	// #222
  40e55c:	bl	40f560 <feof@plt+0xc480>
  40e560:	b	402d00 <_ZdlPv@plt>
  40e564:	mov	w0, #0x2                   	// #2
  40e568:	ret
  40e56c:	ldr	x8, [x0, #8]
  40e570:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  40e574:	add	x9, x9, #0xe88
  40e578:	str	x9, [x0]
  40e57c:	mov	x0, x8
  40e580:	b	402b20 <free@plt>
  40e584:	stp	x29, x30, [sp, #-32]!
  40e588:	str	x19, [sp, #16]
  40e58c:	mov	x29, sp
  40e590:	mov	x19, x0
  40e594:	ldr	x0, [x0, #8]
  40e598:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40e59c:	add	x8, x8, #0xe88
  40e5a0:	str	x8, [x19]
  40e5a4:	bl	402b20 <free@plt>
  40e5a8:	mov	x0, x19
  40e5ac:	ldr	x19, [sp, #16]
  40e5b0:	ldp	x29, x30, [sp], #32
  40e5b4:	b	402d00 <_ZdlPv@plt>
  40e5b8:	mov	w0, #0x3                   	// #3
  40e5bc:	ret
  40e5c0:	b	402d00 <_ZdlPv@plt>
  40e5c4:	ldr	w0, [x0, #8]
  40e5c8:	ret
  40e5cc:	mov	w0, wzr
  40e5d0:	ret
  40e5d4:	mov	w0, #0x1                   	// #1
  40e5d8:	ret
  40e5dc:	ret
  40e5e0:	sub	sp, sp, #0x70
  40e5e4:	stp	x29, x30, [sp, #16]
  40e5e8:	stp	x28, x27, [sp, #32]
  40e5ec:	stp	x26, x25, [sp, #48]
  40e5f0:	stp	x24, x23, [sp, #64]
  40e5f4:	stp	x22, x21, [sp, #80]
  40e5f8:	stp	x20, x19, [sp, #96]
  40e5fc:	add	x29, sp, #0x10
  40e600:	ldr	w8, [x0, #32]
  40e604:	ldr	w28, [x0, #40]
  40e608:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  40e60c:	add	x10, x10, #0xf68
  40e610:	add	w8, w8, #0x1
  40e614:	add	x9, x10, x28, lsl #4
  40e618:	str	w8, [x0, #32]
  40e61c:	ldp	w26, w8, [x9]
  40e620:	mov	w27, w2
  40e624:	ldr	w12, [x9, #12]
  40e628:	ldr	x23, [x0]
  40e62c:	mul	x8, x8, x27
  40e630:	lsr	x8, x8, #32
  40e634:	sub	w9, w2, w8
  40e638:	add	w8, w8, w9, lsr #1
  40e63c:	lsr	w8, w8, w12
  40e640:	msub	w25, w8, w26, w2
  40e644:	add	x22, x23, w25, uxtw #4
  40e648:	mov	x19, x0
  40e64c:	ldr	x0, [x22]
  40e650:	cbz	x0, 40e6f0 <feof@plt+0xb610>
  40e654:	ldr	x24, [x19, #8]
  40e658:	mov	w21, w2
  40e65c:	mov	x20, x1
  40e660:	cmp	x0, #0x1
  40e664:	b.eq	40e684 <feof@plt+0xb5a4>  // b.none
  40e668:	ldr	x1, [x20]
  40e66c:	str	x12, [sp, #8]
  40e670:	bl	402ed0 <strcmp@plt>
  40e674:	ldr	x12, [sp, #8]
  40e678:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  40e67c:	add	x10, x10, #0xf68
  40e680:	cbz	w0, 40e6f0 <feof@plt+0xb610>
  40e684:	add	x8, x10, x28, lsl #4
  40e688:	ldr	w8, [x8, #8]
  40e68c:	ldr	w10, [x19, #36]
  40e690:	sub	w9, w26, #0x2
  40e694:	mul	x8, x8, x27
  40e698:	lsr	x8, x8, #32
  40e69c:	sub	w11, w21, w8
  40e6a0:	add	w8, w8, w11, lsr #1
  40e6a4:	lsr	w8, w8, w12
  40e6a8:	msub	w8, w8, w9, w21
  40e6ac:	add	w21, w8, #0x1
  40e6b0:	add	w26, w10, #0x1
  40e6b4:	b	40e6bc <feof@plt+0xb5dc>
  40e6b8:	add	w26, w26, #0x1
  40e6bc:	add	w8, w21, w25
  40e6c0:	cmp	x24, x8
  40e6c4:	csel	w9, wzr, w24, hi  // hi = pmore
  40e6c8:	sub	w25, w8, w9
  40e6cc:	str	w26, [x19, #36]
  40e6d0:	add	x22, x23, w25, uxtw #4
  40e6d4:	ldr	x0, [x22]
  40e6d8:	cmp	x0, #0x1
  40e6dc:	b.eq	40e6b8 <feof@plt+0xb5d8>  // b.none
  40e6e0:	cbz	x0, 40e6f0 <feof@plt+0xb610>
  40e6e4:	ldr	x1, [x20]
  40e6e8:	bl	402ed0 <strcmp@plt>
  40e6ec:	cbnz	w0, 40e6b8 <feof@plt+0xb5d8>
  40e6f0:	mov	x0, x22
  40e6f4:	ldp	x20, x19, [sp, #96]
  40e6f8:	ldp	x22, x21, [sp, #80]
  40e6fc:	ldp	x24, x23, [sp, #64]
  40e700:	ldp	x26, x25, [sp, #48]
  40e704:	ldp	x28, x27, [sp, #32]
  40e708:	ldp	x29, x30, [sp, #16]
  40e70c:	add	sp, sp, #0x70
  40e710:	ret
  40e714:	sub	sp, sp, #0x70
  40e718:	stp	x29, x30, [sp, #16]
  40e71c:	stp	x28, x27, [sp, #32]
  40e720:	stp	x26, x25, [sp, #48]
  40e724:	stp	x24, x23, [sp, #64]
  40e728:	stp	x22, x21, [sp, #80]
  40e72c:	stp	x20, x19, [sp, #96]
  40e730:	add	x29, sp, #0x10
  40e734:	mov	w26, w3
  40e738:	mov	w23, w2
  40e73c:	mov	x21, x1
  40e740:	cmp	w3, #0x1
  40e744:	mov	x19, x0
  40e748:	b.ne	40e764 <feof@plt+0xb684>  // b.any
  40e74c:	ldp	x8, x9, [x19, #8]
  40e750:	add	x8, x8, x8, lsl #1
  40e754:	cmp	x8, x9, lsl #2
  40e758:	b.hi	40e764 <feof@plt+0xb684>  // b.pmore
  40e75c:	mov	x0, x19
  40e760:	bl	40e8bc <feof@plt+0xb7dc>
  40e764:	ldr	w8, [x19, #32]
  40e768:	ldr	w9, [x19, #40]
  40e76c:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  40e770:	add	x10, x10, #0xf68
  40e774:	add	w11, w8, #0x1
  40e778:	add	x8, x10, x9, lsl #4
  40e77c:	str	w11, [x19, #32]
  40e780:	ldp	w27, w9, [x8]
  40e784:	mov	w20, w23
  40e788:	ldr	w28, [x8, #12]
  40e78c:	ldr	x24, [x19]
  40e790:	mul	x9, x9, x20
  40e794:	lsr	x9, x9, #32
  40e798:	sub	w10, w23, w9
  40e79c:	add	w9, w9, w10, lsr #1
  40e7a0:	lsr	w9, w9, w28
  40e7a4:	msub	w25, w9, w27, w23
  40e7a8:	add	x22, x24, w25, uxtw #4
  40e7ac:	ldr	x0, [x22]
  40e7b0:	cbz	x0, 40e858 <feof@plt+0xb778>
  40e7b4:	stur	w26, [x29, #-4]
  40e7b8:	ldr	w9, [x8, #8]
  40e7bc:	ldr	x26, [x19, #8]
  40e7c0:	cmp	x0, #0x1
  40e7c4:	b.eq	40e7e0 <feof@plt+0xb700>  // b.none
  40e7c8:	ldr	x1, [x21]
  40e7cc:	str	x9, [sp]
  40e7d0:	bl	402ed0 <strcmp@plt>
  40e7d4:	cbz	w0, 40e898 <feof@plt+0xb7b8>
  40e7d8:	ldr	x9, [sp]
  40e7dc:	mov	x22, xzr
  40e7e0:	mul	x9, x9, x20
  40e7e4:	lsr	x9, x9, #32
  40e7e8:	sub	w10, w23, w9
  40e7ec:	sub	w8, w27, #0x2
  40e7f0:	add	w9, w9, w10, lsr #1
  40e7f4:	ldr	w27, [x19, #36]
  40e7f8:	lsr	w9, w9, w28
  40e7fc:	msub	w8, w9, w8, w23
  40e800:	add	w23, w8, #0x1
  40e804:	add	w27, w27, #0x1
  40e808:	add	w8, w23, w25
  40e80c:	cmp	x26, x8
  40e810:	csel	w9, wzr, w26, hi  // hi = pmore
  40e814:	sub	w25, w8, w9
  40e818:	str	w27, [x19, #36]
  40e81c:	add	x20, x24, w25, uxtw #4
  40e820:	ldr	x0, [x20]
  40e824:	cbz	x0, 40e878 <feof@plt+0xb798>
  40e828:	cmp	x0, #0x1
  40e82c:	b.eq	40e844 <feof@plt+0xb764>  // b.none
  40e830:	ldr	x1, [x21]
  40e834:	bl	402ed0 <strcmp@plt>
  40e838:	add	w27, w27, #0x1
  40e83c:	cbnz	w0, 40e808 <feof@plt+0xb728>
  40e840:	b	40e850 <feof@plt+0xb770>
  40e844:	cmp	x22, #0x0
  40e848:	csel	x22, x20, x22, eq  // eq = none
  40e84c:	b	40e804 <feof@plt+0xb724>
  40e850:	mov	x22, x20
  40e854:	b	40e898 <feof@plt+0xb7b8>
  40e858:	mov	x22, xzr
  40e85c:	cbz	w26, 40e880 <feof@plt+0xb7a0>
  40e860:	cbz	x22, 40e888 <feof@plt+0xb7a8>
  40e864:	ldr	x8, [x19, #24]
  40e868:	sub	x8, x8, #0x1
  40e86c:	str	x8, [x19, #24]
  40e870:	str	xzr, [x22]
  40e874:	b	40e898 <feof@plt+0xb7b8>
  40e878:	ldur	w26, [x29, #-4]
  40e87c:	cbnz	w26, 40e860 <feof@plt+0xb780>
  40e880:	mov	x22, xzr
  40e884:	b	40e898 <feof@plt+0xb7b8>
  40e888:	ldr	x8, [x19, #16]
  40e88c:	add	x22, x24, w25, uxtw #4
  40e890:	add	x8, x8, #0x1
  40e894:	str	x8, [x19, #16]
  40e898:	mov	x0, x22
  40e89c:	ldp	x20, x19, [sp, #96]
  40e8a0:	ldp	x22, x21, [sp, #80]
  40e8a4:	ldp	x24, x23, [sp, #64]
  40e8a8:	ldp	x26, x25, [sp, #48]
  40e8ac:	ldp	x28, x27, [sp, #32]
  40e8b0:	ldp	x29, x30, [sp, #16]
  40e8b4:	add	sp, sp, #0x70
  40e8b8:	ret
  40e8bc:	stp	x29, x30, [sp, #-64]!
  40e8c0:	stp	x24, x23, [sp, #16]
  40e8c4:	stp	x22, x21, [sp, #32]
  40e8c8:	stp	x20, x19, [sp, #48]
  40e8cc:	mov	x29, sp
  40e8d0:	ldp	x8, x9, [x0, #16]
  40e8d4:	ldp	x19, x24, [x0]
  40e8d8:	mov	x20, x0
  40e8dc:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  40e8e0:	sub	x8, x8, x9
  40e8e4:	lsl	x0, x8, #1
  40e8e8:	cmp	x0, x24
  40e8ec:	add	x23, x23, #0xf68
  40e8f0:	b.hi	40e910 <feof@plt+0xb830>  // b.pmore
  40e8f4:	ldr	w21, [x20, #40]
  40e8f8:	cmp	x24, #0x21
  40e8fc:	b.cc	40ea94 <feof@plt+0xb9b4>  // b.lo, b.ul, b.last
  40e900:	lsl	w8, w8, #3
  40e904:	cmp	x24, x8
  40e908:	mov	x22, x24
  40e90c:	b.ls	40e924 <feof@plt+0xb844>  // b.plast
  40e910:	bl	40eacc <feof@plt+0xb9ec>
  40e914:	mov	w8, w0
  40e918:	lsl	x8, x8, #4
  40e91c:	ldr	w22, [x23, x8]
  40e920:	mov	w21, w0
  40e924:	ldrb	w8, [x20, #44]
  40e928:	cbz	w8, 40eaa0 <feof@plt+0xb9c0>
  40e92c:	adrp	x1, 40e000 <feof@plt+0xaf20>
  40e930:	lsl	x0, x22, #4
  40e934:	add	x1, x1, #0xac8
  40e938:	mov	w2, #0x10                  	// #16
  40e93c:	mov	x3, x22
  40e940:	bl	40efc8 <feof@plt+0xbee8>
  40e944:	cbz	x0, 40eab0 <feof@plt+0xb9d0>
  40e948:	cbz	x22, 40e994 <feof@plt+0xb8b4>
  40e94c:	cmp	x22, #0x1
  40e950:	b.ne	40e95c <feof@plt+0xb87c>  // b.any
  40e954:	mov	x8, xzr
  40e958:	b	40e980 <feof@plt+0xb8a0>
  40e95c:	and	x8, x22, #0xfffffffffffffffe
  40e960:	add	x9, x0, #0x10
  40e964:	mov	x10, x8
  40e968:	stur	xzr, [x9, #-16]
  40e96c:	str	xzr, [x9], #32
  40e970:	subs	x10, x10, #0x2
  40e974:	b.ne	40e968 <feof@plt+0xb888>  // b.any
  40e978:	cmp	x22, x8
  40e97c:	b.eq	40e994 <feof@plt+0xb8b4>  // b.none
  40e980:	sub	x9, x22, x8
  40e984:	add	x8, x0, x8, lsl #4
  40e988:	subs	x9, x9, #0x1
  40e98c:	str	xzr, [x8], #16
  40e990:	b.ne	40e988 <feof@plt+0xb8a8>  // b.any
  40e994:	ldp	x9, x8, [x20, #16]
  40e998:	add	x24, x19, x24, lsl #4
  40e99c:	str	w21, [x20, #40]
  40e9a0:	mov	x21, x19
  40e9a4:	sub	x8, x9, x8
  40e9a8:	stp	x0, x22, [x20]
  40e9ac:	stp	x8, xzr, [x20, #16]
  40e9b0:	b	40e9c8 <feof@plt+0xb8e8>
  40e9b4:	ldr	q0, [x21]
  40e9b8:	str	q0, [x14]
  40e9bc:	add	x21, x21, #0x10
  40e9c0:	cmp	x21, x24
  40e9c4:	b.cs	40ea5c <feof@plt+0xb97c>  // b.hs, b.nlast
  40e9c8:	ldr	x0, [x21]
  40e9cc:	cmp	x0, #0x2
  40e9d0:	b.cc	40e9bc <feof@plt+0xb8dc>  // b.lo, b.ul, b.last
  40e9d4:	bl	4610d8 <feof@plt+0x5dff8>
  40e9d8:	ldr	w8, [x20, #40]
  40e9dc:	mov	w10, w0
  40e9e0:	add	x11, x23, x8, lsl #4
  40e9e4:	ldp	w13, w8, [x11]
  40e9e8:	ldr	w12, [x11, #12]
  40e9ec:	mul	x8, x8, x10
  40e9f0:	lsr	x9, x8, #32
  40e9f4:	sub	w14, w0, w9
  40e9f8:	ldr	x8, [x20]
  40e9fc:	add	w9, w9, w14, lsr #1
  40ea00:	lsr	w9, w9, w12
  40ea04:	msub	w9, w9, w13, w0
  40ea08:	add	x14, x8, w9, uxtw #4
  40ea0c:	ldr	x15, [x14]
  40ea10:	cbz	x15, 40e9b4 <feof@plt+0xb8d4>
  40ea14:	ldr	w14, [x11, #8]
  40ea18:	ldr	x11, [x20, #8]
  40ea1c:	sub	w13, w13, #0x2
  40ea20:	mul	x14, x14, x10
  40ea24:	lsr	x14, x14, #32
  40ea28:	sub	w15, w10, w14
  40ea2c:	add	w14, w14, w15, lsr #1
  40ea30:	lsr	w12, w14, w12
  40ea34:	msub	w10, w12, w13, w10
  40ea38:	add	w10, w10, #0x1
  40ea3c:	add	w9, w10, w9
  40ea40:	cmp	x11, x9
  40ea44:	csel	w12, wzr, w11, hi  // hi = pmore
  40ea48:	sub	w9, w9, w12
  40ea4c:	add	x14, x8, w9, uxtw #4
  40ea50:	ldr	x12, [x14]
  40ea54:	cbnz	x12, 40ea3c <feof@plt+0xb95c>
  40ea58:	b	40e9b4 <feof@plt+0xb8d4>
  40ea5c:	ldrb	w8, [x20, #44]
  40ea60:	cbz	w8, 40ea7c <feof@plt+0xb99c>
  40ea64:	mov	x0, x19
  40ea68:	ldp	x20, x19, [sp, #48]
  40ea6c:	ldp	x22, x21, [sp, #32]
  40ea70:	ldp	x24, x23, [sp, #16]
  40ea74:	ldp	x29, x30, [sp], #64
  40ea78:	b	40eff8 <feof@plt+0xbf18>
  40ea7c:	mov	x0, x19
  40ea80:	ldp	x20, x19, [sp, #48]
  40ea84:	ldp	x22, x21, [sp, #32]
  40ea88:	ldp	x24, x23, [sp, #16]
  40ea8c:	ldp	x29, x30, [sp], #64
  40ea90:	b	402b20 <free@plt>
  40ea94:	mov	x22, x24
  40ea98:	ldrb	w8, [x20, #44]
  40ea9c:	cbnz	w8, 40e92c <feof@plt+0xb84c>
  40eaa0:	mov	w1, #0x10                  	// #16
  40eaa4:	mov	x0, x22
  40eaa8:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40eaac:	cbnz	x0, 40e948 <feof@plt+0xb868>
  40eab0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40eab4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40eab8:	add	x0, x0, #0x6f1
  40eabc:	add	x2, x2, #0x708
  40eac0:	mov	w1, #0x2b5                 	// #693
  40eac4:	bl	40f560 <feof@plt+0xc480>
  40eac8:	ret
  40eacc:	stp	x29, x30, [sp, #-16]!
  40ead0:	mov	x29, sp
  40ead4:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  40ead8:	mov	x8, x0
  40eadc:	mov	w9, wzr
  40eae0:	mov	w0, #0x1e                  	// #30
  40eae4:	add	x10, x10, #0xf68
  40eae8:	sub	w11, w0, w9
  40eaec:	add	w11, w9, w11, lsr #1
  40eaf0:	lsl	x12, x11, #4
  40eaf4:	ldr	w12, [x10, x12]
  40eaf8:	cmp	x12, x8
  40eafc:	csel	w0, w0, w11, cc  // cc = lo, ul, last
  40eb00:	csinc	w9, w9, w11, cs  // cs = hs, nlast
  40eb04:	cmp	w0, w9
  40eb08:	b.ne	40eae8 <feof@plt+0xba08>  // b.any
  40eb0c:	mov	w9, w0
  40eb10:	lsl	x9, x9, #4
  40eb14:	ldr	w9, [x10, x9]
  40eb18:	cmp	x9, x8
  40eb1c:	b.cc	40eb28 <feof@plt+0xba48>  // b.lo, b.ul, b.last
  40eb20:	ldp	x29, x30, [sp], #16
  40eb24:	ret
  40eb28:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40eb2c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40eb30:	add	x0, x0, #0x148
  40eb34:	add	x2, x2, #0x15f
  40eb38:	mov	w1, #0x60                  	// #96
  40eb3c:	bl	40f560 <feof@plt+0xc480>
  40eb40:	stp	x29, x30, [sp, #-32]!
  40eb44:	str	x19, [sp, #16]
  40eb48:	mov	x29, sp
  40eb4c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40eb50:	add	x8, x8, #0x7d0
  40eb54:	ldarb	w8, [x8]
  40eb58:	tbz	w8, #0, 40eb70 <feof@plt+0xba90>
  40eb5c:	ldr	x19, [sp, #16]
  40eb60:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40eb64:	add	x0, x0, #0x798
  40eb68:	ldp	x29, x30, [sp], #32
  40eb6c:	ret
  40eb70:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40eb74:	add	x0, x0, #0x7d0
  40eb78:	bl	402fe0 <__cxa_guard_acquire@plt>
  40eb7c:	cbz	w0, 40eb5c <feof@plt+0xba7c>
  40eb80:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  40eb84:	add	x19, x19, #0x798
  40eb88:	mov	x0, x19
  40eb8c:	bl	40ebbc <feof@plt+0xbadc>
  40eb90:	adrp	x0, 40e000 <feof@plt+0xaf20>
  40eb94:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0x28838>
  40eb98:	add	x0, x0, #0xe20
  40eb9c:	add	x2, x2, #0x3d0
  40eba0:	mov	x1, x19
  40eba4:	bl	402de0 <__cxa_atexit@plt>
  40eba8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40ebac:	add	x0, x0, #0x7d0
  40ebb0:	bl	402bb0 <__cxa_guard_release@plt>
  40ebb4:	b	40eb5c <feof@plt+0xba7c>
  40ebb8:	ret
  40ebbc:	stp	x29, x30, [sp, #-64]!
  40ebc0:	str	x23, [sp, #16]
  40ebc4:	stp	x22, x21, [sp, #32]
  40ebc8:	stp	x20, x19, [sp, #48]
  40ebcc:	mov	x29, sp
  40ebd0:	mov	x19, x0
  40ebd4:	mov	w0, #0x30                  	// #48
  40ebd8:	bl	402d30 <_Znwm@plt>
  40ebdc:	mov	x20, x0
  40ebe0:	mov	w8, wzr
  40ebe4:	mov	w23, #0x1e                  	// #30
  40ebe8:	stp	xzr, xzr, [x0, #24]
  40ebec:	str	xzr, [x0, #16]
  40ebf0:	strb	wzr, [x0, #44]
  40ebf4:	sub	w9, w23, w8
  40ebf8:	add	w9, w8, w9, lsr #1
  40ebfc:	cmp	w9, #0x0
  40ec00:	csel	w23, w23, w9, eq  // eq = none
  40ec04:	csinc	w8, w8, wzr, ne  // ne = any
  40ec08:	cmp	w23, w8
  40ec0c:	b.ne	40ebf4 <feof@plt+0xbb14>  // b.any
  40ec10:	cbz	w23, 40edf0 <feof@plt+0xbd10>
  40ec14:	mov	w8, w23
  40ec18:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1838>
  40ec1c:	lsl	x8, x8, #4
  40ec20:	add	x22, x22, #0xf68
  40ec24:	ldr	w21, [x22, x8]
  40ec28:	mov	w1, #0x10                  	// #16
  40ec2c:	mov	x0, x21
  40ec30:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40ec34:	cbz	x0, 40ee08 <feof@plt+0xbd28>
  40ec38:	and	x8, x21, #0xfffffffe
  40ec3c:	add	x9, x0, #0x10
  40ec40:	mov	x10, x8
  40ec44:	stur	xzr, [x9, #-16]
  40ec48:	str	xzr, [x9], #32
  40ec4c:	subs	x10, x10, #0x2
  40ec50:	b.ne	40ec44 <feof@plt+0xbb64>  // b.any
  40ec54:	cmp	x8, x21
  40ec58:	b.eq	40ec78 <feof@plt+0xbb98>  // b.none
  40ec5c:	lsl	x9, x21, #4
  40ec60:	and	x9, x9, #0xfffffffe0
  40ec64:	sub	x8, x21, x8
  40ec68:	add	x9, x0, x9
  40ec6c:	subs	x8, x8, #0x1
  40ec70:	str	xzr, [x9], #16
  40ec74:	b.ne	40ec6c <feof@plt+0xbb8c>  // b.any
  40ec78:	stp	x0, x21, [x20]
  40ec7c:	mov	w0, #0x30                  	// #48
  40ec80:	str	w23, [x20, #40]
  40ec84:	str	x20, [x19, #40]
  40ec88:	bl	402d30 <_Znwm@plt>
  40ec8c:	mov	x20, x0
  40ec90:	mov	w8, wzr
  40ec94:	mov	w23, #0x1e                  	// #30
  40ec98:	stp	xzr, xzr, [x0, #24]
  40ec9c:	str	xzr, [x0, #16]
  40eca0:	strb	wzr, [x0, #44]
  40eca4:	sub	w9, w23, w8
  40eca8:	add	w9, w8, w9, lsr #1
  40ecac:	cmp	w9, #0x0
  40ecb0:	csel	w23, w23, w9, eq  // eq = none
  40ecb4:	csinc	w8, w8, wzr, ne  // ne = any
  40ecb8:	cmp	w23, w8
  40ecbc:	b.ne	40eca4 <feof@plt+0xbbc4>  // b.any
  40ecc0:	cbz	w23, 40edf0 <feof@plt+0xbd10>
  40ecc4:	mov	w8, w23
  40ecc8:	lsl	x8, x8, #4
  40eccc:	ldr	w21, [x22, x8]
  40ecd0:	mov	w1, #0x18                  	// #24
  40ecd4:	mov	x0, x21
  40ecd8:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40ecdc:	cbz	x0, 40ee08 <feof@plt+0xbd28>
  40ece0:	and	x8, x21, #0xfffffffe
  40ece4:	mov	x9, x8
  40ece8:	mov	x10, x0
  40ecec:	str	xzr, [x10]
  40ecf0:	str	xzr, [x10, #24]
  40ecf4:	subs	x9, x9, #0x2
  40ecf8:	add	x10, x10, #0x30
  40ecfc:	b.ne	40ecec <feof@plt+0xbc0c>  // b.any
  40ed00:	cmp	x8, x21
  40ed04:	b.eq	40ed24 <feof@plt+0xbc44>  // b.none
  40ed08:	lsr	x9, x21, #1
  40ed0c:	mov	w10, #0x30                  	// #48
  40ed10:	sub	x8, x21, x8
  40ed14:	madd	x9, x9, x10, x0
  40ed18:	subs	x8, x8, #0x1
  40ed1c:	str	xzr, [x9], #24
  40ed20:	b.ne	40ed18 <feof@plt+0xbc38>  // b.any
  40ed24:	stp	x0, x21, [x20]
  40ed28:	mov	w0, #0x30                  	// #48
  40ed2c:	str	w23, [x20, #40]
  40ed30:	str	x20, [x19, #48]
  40ed34:	bl	402d30 <_Znwm@plt>
  40ed38:	mov	x20, x0
  40ed3c:	mov	w8, wzr
  40ed40:	mov	w23, #0x1e                  	// #30
  40ed44:	stp	xzr, xzr, [x0, #24]
  40ed48:	str	xzr, [x0, #16]
  40ed4c:	strb	wzr, [x0, #44]
  40ed50:	sub	w9, w23, w8
  40ed54:	add	w9, w8, w9, lsr #1
  40ed58:	cmp	w9, #0x0
  40ed5c:	csel	w23, w23, w9, eq  // eq = none
  40ed60:	csinc	w8, w8, wzr, ne  // ne = any
  40ed64:	cmp	w23, w8
  40ed68:	b.ne	40ed50 <feof@plt+0xbc70>  // b.any
  40ed6c:	cbz	w23, 40edf0 <feof@plt+0xbd10>
  40ed70:	mov	w8, w23
  40ed74:	lsl	x8, x8, #4
  40ed78:	ldr	w21, [x22, x8]
  40ed7c:	mov	w1, #0x18                  	// #24
  40ed80:	mov	x0, x21
  40ed84:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  40ed88:	cbz	x0, 40ee08 <feof@plt+0xbd28>
  40ed8c:	and	x8, x21, #0xfffffffe
  40ed90:	mov	x9, x8
  40ed94:	mov	x10, x0
  40ed98:	str	xzr, [x10]
  40ed9c:	str	xzr, [x10, #24]
  40eda0:	subs	x9, x9, #0x2
  40eda4:	add	x10, x10, #0x30
  40eda8:	b.ne	40ed98 <feof@plt+0xbcb8>  // b.any
  40edac:	cmp	x8, x21
  40edb0:	b.eq	40edd0 <feof@plt+0xbcf0>  // b.none
  40edb4:	lsr	x9, x21, #1
  40edb8:	mov	w10, #0x30                  	// #48
  40edbc:	sub	x8, x21, x8
  40edc0:	madd	x9, x9, x10, x0
  40edc4:	subs	x8, x8, #0x1
  40edc8:	str	xzr, [x9], #24
  40edcc:	b.ne	40edc4 <feof@plt+0xbce4>  // b.any
  40edd0:	stp	x0, x21, [x20]
  40edd4:	str	w23, [x20, #40]
  40edd8:	str	x20, [x19]
  40eddc:	ldp	x20, x19, [sp, #48]
  40ede0:	ldp	x22, x21, [sp, #32]
  40ede4:	ldr	x23, [sp, #16]
  40ede8:	ldp	x29, x30, [sp], #64
  40edec:	ret
  40edf0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40edf4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40edf8:	add	x0, x0, #0x148
  40edfc:	add	x2, x2, #0x15f
  40ee00:	mov	w1, #0x60                  	// #96
  40ee04:	bl	40f560 <feof@plt+0xc480>
  40ee08:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  40ee0c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  40ee10:	add	x0, x0, #0x6f1
  40ee14:	add	x2, x2, #0x708
  40ee18:	mov	w1, #0x2b5                 	// #693
  40ee1c:	bl	40f560 <feof@plt+0xc480>
  40ee20:	stp	x29, x30, [sp, #-48]!
  40ee24:	stp	x22, x21, [sp, #16]
  40ee28:	stp	x20, x19, [sp, #32]
  40ee2c:	mov	x29, sp
  40ee30:	ldr	x20, [x0, #40]
  40ee34:	mov	x19, x0
  40ee38:	ldr	x8, [x20, #8]
  40ee3c:	cmp	x8, #0x1
  40ee40:	b.lt	40ee64 <feof@plt+0xbd84>  // b.tstop
  40ee44:	ldr	x21, [x20]
  40ee48:	add	x22, x21, x8, lsl #4
  40ee4c:	ldr	x8, [x21]
  40ee50:	cmp	x8, #0x1
  40ee54:	b.hi	40ee6c <feof@plt+0xbd8c>  // b.pmore
  40ee58:	add	x21, x21, #0x10
  40ee5c:	cmp	x21, x22
  40ee60:	b.cc	40ee4c <feof@plt+0xbd6c>  // b.lo, b.ul, b.last
  40ee64:	mov	x21, xzr
  40ee68:	mov	x22, xzr
  40ee6c:	orr	x8, x21, x22
  40ee70:	cbnz	x8, 40eec0 <feof@plt+0xbde0>
  40ee74:	cbnz	x20, 40eefc <feof@plt+0xbe1c>
  40ee78:	ldr	x20, [x19, #48]
  40ee7c:	cbnz	x20, 40ef50 <feof@plt+0xbe70>
  40ee80:	ldr	x19, [x19]
  40ee84:	cbz	x19, 40ef8c <feof@plt+0xbeac>
  40ee88:	ldr	x8, [x19, #8]
  40ee8c:	mov	x9, x8
  40ee90:	sub	x9, x9, #0x1
  40ee94:	cmp	x9, x8
  40ee98:	b.cc	40ee90 <feof@plt+0xbdb0>  // b.lo, b.ul, b.last
  40ee9c:	ldrb	w8, [x19, #44]
  40eea0:	ldr	x0, [x19]
  40eea4:	cbz	w8, 40ef24 <feof@plt+0xbe44>
  40eea8:	bl	40eff8 <feof@plt+0xbf18>
  40eeac:	b	40ef28 <feof@plt+0xbe48>
  40eeb0:	mov	x22, xzr
  40eeb4:	mov	x21, xzr
  40eeb8:	orr	x8, x21, x22
  40eebc:	cbz	x8, 40eef4 <feof@plt+0xbe14>
  40eec0:	ldr	x0, [x21]
  40eec4:	cbz	x0, 40eecc <feof@plt+0xbdec>
  40eec8:	bl	402d00 <_ZdlPv@plt>
  40eecc:	ldr	x0, [x21, #8]
  40eed0:	cbz	x0, 40eed8 <feof@plt+0xbdf8>
  40eed4:	bl	402d00 <_ZdlPv@plt>
  40eed8:	add	x21, x21, #0x10
  40eedc:	cmp	x21, x22
  40eee0:	b.cs	40eeb0 <feof@plt+0xbdd0>  // b.hs, b.nlast
  40eee4:	ldr	x8, [x21]
  40eee8:	cmp	x8, #0x1
  40eeec:	b.ls	40eed8 <feof@plt+0xbdf8>  // b.plast
  40eef0:	b	40eeb8 <feof@plt+0xbdd8>
  40eef4:	ldr	x20, [x19, #40]
  40eef8:	cbz	x20, 40ee78 <feof@plt+0xbd98>
  40eefc:	ldr	x8, [x20, #8]
  40ef00:	mov	x9, x8
  40ef04:	sub	x9, x9, #0x1
  40ef08:	cmp	x9, x8
  40ef0c:	b.cc	40ef04 <feof@plt+0xbe24>  // b.lo, b.ul, b.last
  40ef10:	ldrb	w8, [x20, #44]
  40ef14:	ldr	x0, [x20]
  40ef18:	cbz	w8, 40ef3c <feof@plt+0xbe5c>
  40ef1c:	bl	40eff8 <feof@plt+0xbf18>
  40ef20:	b	40ef40 <feof@plt+0xbe60>
  40ef24:	bl	402b20 <free@plt>
  40ef28:	mov	x0, x19
  40ef2c:	ldp	x20, x19, [sp, #32]
  40ef30:	ldp	x22, x21, [sp, #16]
  40ef34:	ldp	x29, x30, [sp], #48
  40ef38:	b	402d00 <_ZdlPv@plt>
  40ef3c:	bl	402b20 <free@plt>
  40ef40:	mov	x0, x20
  40ef44:	bl	402d00 <_ZdlPv@plt>
  40ef48:	ldr	x20, [x19, #48]
  40ef4c:	cbz	x20, 40ee80 <feof@plt+0xbda0>
  40ef50:	ldr	x8, [x20, #8]
  40ef54:	mov	x9, x8
  40ef58:	sub	x9, x9, #0x1
  40ef5c:	cmp	x9, x8
  40ef60:	b.cc	40ef58 <feof@plt+0xbe78>  // b.lo, b.ul, b.last
  40ef64:	ldrb	w8, [x20, #44]
  40ef68:	ldr	x0, [x20]
  40ef6c:	cbz	w8, 40ef78 <feof@plt+0xbe98>
  40ef70:	bl	40eff8 <feof@plt+0xbf18>
  40ef74:	b	40ef7c <feof@plt+0xbe9c>
  40ef78:	bl	402b20 <free@plt>
  40ef7c:	mov	x0, x20
  40ef80:	bl	402d00 <_ZdlPv@plt>
  40ef84:	ldr	x19, [x19]
  40ef88:	cbnz	x19, 40ee88 <feof@plt+0xbda8>
  40ef8c:	ldp	x20, x19, [sp, #32]
  40ef90:	ldp	x22, x21, [sp, #16]
  40ef94:	ldp	x29, x30, [sp], #48
  40ef98:	ret
  40ef9c:	ret
  40efa0:	cbnz	x1, 40efa8 <feof@plt+0xbec8>
  40efa4:	b	4621c8 <_obstack_memory_used@@Base+0xa00>
  40efa8:	stp	x29, x30, [sp, #-16]!
  40efac:	mov	x29, sp
  40efb0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40efb4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40efb8:	add	x0, x0, #0x17d
  40efbc:	add	x2, x2, #0x192
  40efc0:	mov	w1, #0x2f                  	// #47
  40efc4:	bl	40f560 <feof@plt+0xc480>
  40efc8:	cbnz	x1, 40efd4 <feof@plt+0xbef4>
  40efcc:	mov	w1, #0x1                   	// #1
  40efd0:	b	4621fc <_obstack_memory_used@@Base+0xa34>
  40efd4:	stp	x29, x30, [sp, #-16]!
  40efd8:	mov	x29, sp
  40efdc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40efe0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40efe4:	add	x0, x0, #0x17d
  40efe8:	add	x2, x2, #0x1a5
  40efec:	mov	w1, #0x37                  	// #55
  40eff0:	bl	40f560 <feof@plt+0xc480>
  40eff4:	b	46224c <_obstack_memory_used@@Base+0xa84>
  40eff8:	b	402b20 <free@plt>
  40effc:	ret
  40f000:	sub	sp, sp, #0x120
  40f004:	stp	x29, x30, [sp, #256]
  40f008:	str	x28, [sp, #272]
  40f00c:	add	x29, sp, #0x100
  40f010:	mov	x8, #0xffffffffffffffc8    	// #-56
  40f014:	mov	x9, sp
  40f018:	sub	x10, x29, #0x78
  40f01c:	movk	x8, #0xff80, lsl #32
  40f020:	add	x11, x29, #0x20
  40f024:	add	x9, x9, #0x80
  40f028:	add	x10, x10, #0x38
  40f02c:	stp	x9, x8, [x29, #-16]
  40f030:	stp	x11, x10, [x29, #-32]
  40f034:	stp	x1, x2, [x29, #-120]
  40f038:	stp	x3, x4, [x29, #-104]
  40f03c:	stp	x5, x6, [x29, #-88]
  40f040:	stur	x7, [x29, #-72]
  40f044:	stp	q0, q1, [sp]
  40f048:	ldp	q1, q0, [x29, #-32]
  40f04c:	sub	x1, x29, #0x40
  40f050:	stp	q2, q3, [sp, #32]
  40f054:	stp	q4, q5, [sp, #64]
  40f058:	stp	q6, q7, [sp, #96]
  40f05c:	stp	q1, q0, [x29, #-64]
  40f060:	bl	46239c <_obstack_memory_used@@Base+0xbd4>
  40f064:	ldr	x28, [sp, #272]
  40f068:	ldp	x29, x30, [sp, #256]
  40f06c:	add	sp, sp, #0x120
  40f070:	ret
  40f074:	stp	x29, x30, [sp, #-32]!
  40f078:	stp	x20, x19, [sp, #16]
  40f07c:	mov	x29, sp
  40f080:	ldr	x8, [x0]
  40f084:	mov	x19, x0
  40f088:	mov	x20, x1
  40f08c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40f090:	ldrb	w0, [x8, #67]
  40f094:	add	x1, x1, #0x2d8
  40f098:	mov	w2, #0x5                   	// #5
  40f09c:	bl	41260c <feof@plt+0xf52c>
  40f0a0:	ldr	x8, [x19]
  40f0a4:	mov	x19, x0
  40f0a8:	ldrb	w8, [x8, #67]
  40f0ac:	mov	w0, w8
  40f0b0:	bl	412690 <feof@plt+0xf5b0>
  40f0b4:	mov	x1, x19
  40f0b8:	mov	x2, x20
  40f0bc:	ldp	x20, x19, [sp, #16]
  40f0c0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  40f0c4:	add	x8, x8, #0x2de
  40f0c8:	mov	x3, x0
  40f0cc:	mov	x0, x8
  40f0d0:	ldp	x29, x30, [sp], #32
  40f0d4:	b	40f000 <feof@plt+0xbf20>
  40f0d8:	sub	sp, sp, #0x20
  40f0dc:	stp	x29, x30, [sp, #16]
  40f0e0:	add	x29, sp, #0x10
  40f0e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f0e8:	add	x0, x0, #0x2e7
  40f0ec:	bl	402f40 <getenv@plt>
  40f0f0:	cbz	x0, 40f108 <feof@plt+0xc028>
  40f0f4:	mov	w2, #0xa                   	// #10
  40f0f8:	mov	x1, xzr
  40f0fc:	bl	402af0 <strtol@plt>
  40f100:	cmp	w0, #0x0
  40f104:	b.gt	40f134 <feof@plt+0xc054>
  40f108:	add	x2, sp, #0x8
  40f10c:	mov	w1, #0x5413                	// #21523
  40f110:	mov	w0, wzr
  40f114:	strh	wzr, [sp, #10]
  40f118:	bl	402c50 <ioctl@plt>
  40f11c:	ldrh	w8, [sp, #10]
  40f120:	mov	w9, #0x7fffffff            	// #2147483647
  40f124:	cmp	w8, #0x0
  40f128:	csel	w8, w9, w8, eq  // eq = none
  40f12c:	cmp	w0, #0x0
  40f130:	csel	w0, w8, w9, eq  // eq = none
  40f134:	ldp	x29, x30, [sp, #16]
  40f138:	add	sp, sp, #0x20
  40f13c:	ret
  40f140:	stp	x29, x30, [sp, #-32]!
  40f144:	str	x19, [sp, #16]
  40f148:	mov	x29, sp
  40f14c:	mov	x19, x0
  40f150:	cbz	w1, 40f174 <feof@plt+0xc094>
  40f154:	sub	w8, w1, #0x1
  40f158:	cmp	w1, #0x2
  40f15c:	mov	w9, #0x7fffffff            	// #2147483647
  40f160:	csel	w8, w9, w8, lt  // lt = tstop
  40f164:	str	w8, [x19, #112]
  40f168:	ldr	x19, [sp, #16]
  40f16c:	ldp	x29, x30, [sp], #32
  40f170:	ret
  40f174:	ldr	x8, [x19]
  40f178:	ldr	x8, [x8, #8]
  40f17c:	ldr	x0, [x8, #192]
  40f180:	bl	402db0 <fileno_unlocked@plt>
  40f184:	bl	402b80 <isatty@plt>
  40f188:	cbz	w0, 40f1e4 <feof@plt+0xc104>
  40f18c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f190:	add	x0, x0, #0x2e7
  40f194:	bl	402f40 <getenv@plt>
  40f198:	cbz	x0, 40f1b4 <feof@plt+0xc0d4>
  40f19c:	mov	w2, #0xa                   	// #10
  40f1a0:	mov	x1, xzr
  40f1a4:	bl	402af0 <strtol@plt>
  40f1a8:	mov	x1, x0
  40f1ac:	cmp	w1, #0x0
  40f1b0:	b.gt	40f154 <feof@plt+0xc074>
  40f1b4:	add	x2, x29, #0x18
  40f1b8:	mov	w1, #0x5413                	// #21523
  40f1bc:	mov	w0, wzr
  40f1c0:	strh	wzr, [x29, #26]
  40f1c4:	bl	402c50 <ioctl@plt>
  40f1c8:	ldrh	w8, [x29, #26]
  40f1cc:	mov	w9, #0x7fffffff            	// #2147483647
  40f1d0:	cmp	w8, #0x0
  40f1d4:	csel	w8, w9, w8, eq  // eq = none
  40f1d8:	cmp	w0, #0x0
  40f1dc:	csel	w1, w8, w9, eq  // eq = none
  40f1e0:	b	40f154 <feof@plt+0xc074>
  40f1e4:	mov	w8, #0x7fffffff            	// #2147483647
  40f1e8:	b	40f164 <feof@plt+0xc084>
  40f1ec:	stp	x29, x30, [sp, #-32]!
  40f1f0:	stp	x20, x19, [sp, #16]
  40f1f4:	mov	x29, sp
  40f1f8:	mov	x19, x0
  40f1fc:	mov	w0, #0x48                  	// #72
  40f200:	mov	w20, w1
  40f204:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  40f208:	mov	w1, wzr
  40f20c:	str	x0, [x19]
  40f210:	bl	41a454 <feof@plt+0x17374>
  40f214:	movi	v0.2d, #0x0
  40f218:	sbfiz	x0, x20, #2, #32
  40f21c:	str	w20, [x19, #68]
  40f220:	stur	q0, [x19, #49]
  40f224:	stur	q0, [x19, #40]
  40f228:	stur	q0, [x19, #24]
  40f22c:	stur	q0, [x19, #8]
  40f230:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  40f234:	cmp	w20, #0x1
  40f238:	str	x0, [x19, #72]
  40f23c:	b.lt	40f268 <feof@plt+0xc188>  // b.tstop
  40f240:	cmp	w20, #0x1
  40f244:	str	wzr, [x0]
  40f248:	b.eq	40f268 <feof@plt+0xc188>  // b.none
  40f24c:	mov	w8, w20
  40f250:	mov	w9, #0x1                   	// #1
  40f254:	ldr	x10, [x19, #72]
  40f258:	str	wzr, [x10, x9, lsl #2]
  40f25c:	add	x9, x9, #0x1
  40f260:	cmp	x8, x9
  40f264:	b.ne	40f254 <feof@plt+0xc174>  // b.any
  40f268:	ldr	x8, [x19]
  40f26c:	strb	wzr, [x19, #108]
  40f270:	mov	x0, x19
  40f274:	ldr	w1, [x8, #40]
  40f278:	bl	40f140 <feof@plt+0xc060>
  40f27c:	mov	w8, #0x5e                  	// #94
  40f280:	mov	w9, #0x5e5e                	// #24158
  40f284:	strb	w8, [x19, #118]
  40f288:	adrp	x8, 40f000 <feof@plt+0xbf20>
  40f28c:	strh	w9, [x19, #116]
  40f290:	adrp	x9, 40f000 <feof@plt+0xbf20>
  40f294:	add	x8, x8, #0x2f0
  40f298:	add	x9, x9, #0x348
  40f29c:	stp	x8, x9, [x19, #136]
  40f2a0:	adrp	x8, 40f000 <feof@plt+0xbf20>
  40f2a4:	add	x8, x8, #0x39c
  40f2a8:	stp	x8, xzr, [x19, #152]
  40f2ac:	adrp	x8, 40f000 <feof@plt+0xbf20>
  40f2b0:	movi	v0.2d, #0x0
  40f2b4:	add	x8, x8, #0x3d4
  40f2b8:	str	wzr, [x19, #132]
  40f2bc:	stur	xzr, [x19, #119]
  40f2c0:	stur	wzr, [x19, #127]
  40f2c4:	stur	q0, [x19, #168]
  40f2c8:	stur	q0, [x19, #184]
  40f2cc:	str	wzr, [x19, #200]
  40f2d0:	stp	xzr, xzr, [x19, #208]
  40f2d4:	stur	xzr, [x19, #222]
  40f2d8:	stur	q0, [x19, #232]
  40f2dc:	stur	q0, [x19, #248]
  40f2e0:	str	x8, [x19, #264]
  40f2e4:	ldp	x20, x19, [sp, #16]
  40f2e8:	ldp	x29, x30, [sp], #32
  40f2ec:	ret
  40f2f0:	stp	x29, x30, [sp, #-48]!
  40f2f4:	str	x21, [sp, #16]
  40f2f8:	stp	x20, x19, [sp, #32]
  40f2fc:	mov	x29, sp
  40f300:	mov	x19, x1
  40f304:	mov	x20, x0
  40f308:	mov	x0, x1
  40f30c:	mov	w1, wzr
  40f310:	bl	417f48 <feof@plt+0x14e68>
  40f314:	mov	w1, w0
  40f318:	mov	x0, x20
  40f31c:	bl	40fcb8 <feof@plt+0xcbd8>
  40f320:	ldr	x21, [x20]
  40f324:	mov	x0, x20
  40f328:	mov	x1, x19
  40f32c:	bl	40f618 <feof@plt+0xc538>
  40f330:	mov	x1, x0
  40f334:	mov	x0, x21
  40f338:	ldp	x20, x19, [sp, #32]
  40f33c:	ldr	x21, [sp, #16]
  40f340:	ldp	x29, x30, [sp], #48
  40f344:	b	41a29c <feof@plt+0x171bc>
  40f348:	sub	sp, sp, #0x40
  40f34c:	stp	x29, x30, [sp, #32]
  40f350:	stp	x20, x19, [sp, #48]
  40f354:	add	x29, sp, #0x20
  40f358:	ldp	q1, q0, [x1]
  40f35c:	mov	x1, sp
  40f360:	mov	x19, x0
  40f364:	stp	q1, q0, [sp]
  40f368:	bl	40f73c <feof@plt+0xc65c>
  40f36c:	ldr	x8, [x19]
  40f370:	mov	x20, x0
  40f374:	mov	x1, x20
  40f378:	mov	x0, x8
  40f37c:	bl	419e20 <feof@plt+0x16d40>
  40f380:	mov	x0, x20
  40f384:	bl	402b20 <free@plt>
  40f388:	ldr	x0, [x19]
  40f38c:	ldp	x20, x19, [sp, #48]
  40f390:	ldp	x29, x30, [sp, #32]
  40f394:	add	sp, sp, #0x40
  40f398:	b	41a7a4 <feof@plt+0x176c4>
  40f39c:	stp	x29, x30, [sp, #-32]!
  40f3a0:	str	x19, [sp, #16]
  40f3a4:	mov	x29, sp
  40f3a8:	ldr	x8, [x1, #40]
  40f3ac:	ldr	w2, [x1, #56]
  40f3b0:	mov	x19, x0
  40f3b4:	mov	x1, x8
  40f3b8:	bl	413f54 <feof@plt+0x10e74>
  40f3bc:	ldr	x0, [x19]
  40f3c0:	bl	41a324 <feof@plt+0x17244>
  40f3c4:	ldr	x0, [x19]
  40f3c8:	ldr	x19, [sp, #16]
  40f3cc:	ldp	x29, x30, [sp], #32
  40f3d0:	b	41a0d4 <feof@plt+0x16ff4>
  40f3d4:	stp	x29, x30, [sp, #-32]!
  40f3d8:	stp	x20, x19, [sp, #16]
  40f3dc:	mov	x29, sp
  40f3e0:	ldr	w8, [x0, #56]
  40f3e4:	cbz	w8, 40f434 <feof@plt+0xc354>
  40f3e8:	ldrb	w8, [x0, #64]
  40f3ec:	ldr	x20, [x0]
  40f3f0:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40f3f4:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  40f3f8:	add	x9, x9, #0x615
  40f3fc:	add	x10, x10, #0x63e
  40f400:	cmp	w8, #0x0
  40f404:	mov	x19, x0
  40f408:	csel	x0, x10, x9, eq  // eq = none
  40f40c:	bl	402cd0 <gettext@plt>
  40f410:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f414:	ldr	x2, [x8, #2008]
  40f418:	mov	x1, x0
  40f41c:	mov	x0, x20
  40f420:	bl	41a6f4 <feof@plt+0x17614>
  40f424:	ldr	x0, [x19]
  40f428:	ldp	x20, x19, [sp, #16]
  40f42c:	ldp	x29, x30, [sp], #32
  40f430:	b	41ab20 <feof@plt+0x17a40>
  40f434:	ldp	x20, x19, [sp, #16]
  40f438:	ldp	x29, x30, [sp], #32
  40f43c:	ret
  40f440:	stp	x29, x30, [sp, #-32]!
  40f444:	str	x19, [sp, #16]
  40f448:	mov	x29, sp
  40f44c:	cmp	w1, #0x0
  40f450:	mov	w8, #0x2                   	// #2
  40f454:	mov	x19, x0
  40f458:	csel	w0, w8, w1, lt  // lt = tstop
  40f45c:	bl	4126ac <feof@plt+0xf5cc>
  40f460:	ldr	x8, [x19]
  40f464:	ldr	x19, [sp, #16]
  40f468:	and	w9, w0, #0x1
  40f46c:	strb	w9, [x8, #67]
  40f470:	ldp	x29, x30, [sp], #32
  40f474:	ret
  40f478:	stp	x29, x30, [sp, #-32]!
  40f47c:	stp	x20, x19, [sp, #16]
  40f480:	mov	x29, sp
  40f484:	ldr	x8, [x0, #264]
  40f488:	mov	x19, x0
  40f48c:	cbz	x8, 40f498 <feof@plt+0xc3b8>
  40f490:	mov	x0, x19
  40f494:	blr	x8
  40f498:	bl	41d5d4 <feof@plt+0x1a4f4>
  40f49c:	ldr	x0, [x19, #72]
  40f4a0:	bl	402b20 <free@plt>
  40f4a4:	ldr	x0, [x19]
  40f4a8:	str	xzr, [x19, #72]
  40f4ac:	ldr	x8, [x0]
  40f4b0:	ldr	x8, [x8]
  40f4b4:	blr	x8
  40f4b8:	ldr	x0, [x19]
  40f4bc:	bl	402b20 <free@plt>
  40f4c0:	ldr	x20, [x19, #232]
  40f4c4:	str	xzr, [x19]
  40f4c8:	cbz	x20, 40f4e4 <feof@plt+0xc404>
  40f4cc:	mov	x0, x20
  40f4d0:	ldr	x1, [x0, #8]!
  40f4d4:	bl	412514 <feof@plt+0xf434>
  40f4d8:	mov	x0, x20
  40f4dc:	bl	402d00 <_ZdlPv@plt>
  40f4e0:	str	xzr, [x19, #232]
  40f4e4:	ldp	x20, x19, [sp, #16]
  40f4e8:	ldp	x29, x30, [sp], #32
  40f4ec:	ret
  40f4f0:	stp	x29, x30, [sp, #-64]!
  40f4f4:	str	x23, [sp, #16]
  40f4f8:	stp	x22, x21, [sp, #32]
  40f4fc:	stp	x20, x19, [sp, #48]
  40f500:	mov	x29, sp
  40f504:	cbz	x3, 40f548 <feof@plt+0xc468>
  40f508:	mov	w19, w4
  40f50c:	mov	x21, x3
  40f510:	mov	x23, x2
  40f514:	mov	x22, x1
  40f518:	mov	x20, x0
  40f51c:	bl	402e70 <__errno_location@plt>
  40f520:	ldr	w8, [x0]
  40f524:	stp	x22, x23, [x20]
  40f528:	stp	x21, x21, [x20, #32]
  40f52c:	stp	w19, wzr, [x20, #56]
  40f530:	str	w8, [x20, #16]
  40f534:	ldp	x20, x19, [sp, #48]
  40f538:	ldp	x22, x21, [sp, #32]
  40f53c:	ldr	x23, [sp, #16]
  40f540:	ldp	x29, x30, [sp], #64
  40f544:	ret
  40f548:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f54c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40f550:	add	x0, x0, #0x580
  40f554:	add	x2, x2, #0x2ef
  40f558:	mov	w1, #0x112                 	// #274
  40f55c:	bl	40f560 <feof@plt+0xc480>
  40f560:	stp	x29, x30, [sp, #-32]!
  40f564:	stp	x20, x19, [sp, #16]
  40f568:	mov	x29, sp
  40f56c:	mov	x19, x2
  40f570:	mov	w20, w1
  40f574:	bl	410708 <feof@plt+0xd628>
  40f578:	mov	x2, x0
  40f57c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f580:	add	x0, x0, #0x605
  40f584:	mov	x1, x19
  40f588:	mov	w3, w20
  40f58c:	bl	4121e8 <feof@plt+0xf108>
  40f590:	stp	x29, x30, [sp, #-64]!
  40f594:	str	x23, [sp, #16]
  40f598:	stp	x22, x21, [sp, #32]
  40f59c:	stp	x20, x19, [sp, #48]
  40f5a0:	mov	x29, sp
  40f5a4:	cbz	x3, 40f5f0 <feof@plt+0xc510>
  40f5a8:	mov	x20, x0
  40f5ac:	mov	x0, x1
  40f5b0:	mov	w19, w4
  40f5b4:	mov	x21, x3
  40f5b8:	mov	x22, x2
  40f5bc:	bl	402cd0 <gettext@plt>
  40f5c0:	mov	x23, x0
  40f5c4:	bl	402e70 <__errno_location@plt>
  40f5c8:	ldr	w8, [x0]
  40f5cc:	stp	x23, x22, [x20]
  40f5d0:	stp	x21, x21, [x20, #32]
  40f5d4:	stp	w19, wzr, [x20, #56]
  40f5d8:	str	w8, [x20, #16]
  40f5dc:	ldp	x20, x19, [sp, #48]
  40f5e0:	ldp	x22, x21, [sp, #32]
  40f5e4:	ldr	x23, [sp, #16]
  40f5e8:	ldp	x29, x30, [sp], #64
  40f5ec:	ret
  40f5f0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f5f4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40f5f8:	add	x0, x0, #0x580
  40f5fc:	add	x2, x2, #0x30e
  40f600:	mov	w1, #0x123                 	// #291
  40f604:	bl	40f560 <feof@plt+0xc480>
  40f608:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  40f60c:	add	x8, x8, #0x1d0
  40f610:	ldr	x0, [x8, w0, uxtw #3]
  40f614:	ret
  40f618:	sub	sp, sp, #0x80
  40f61c:	stp	x29, x30, [sp, #64]
  40f620:	stp	x24, x23, [sp, #80]
  40f624:	stp	x22, x21, [sp, #96]
  40f628:	stp	x20, x19, [sp, #112]
  40f62c:	add	x29, sp, #0x40
  40f630:	ldr	w8, [x1, #56]
  40f634:	cmp	w8, #0xe
  40f638:	b.ge	40f724 <feof@plt+0xc644>  // b.tcont
  40f63c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40f640:	add	x9, x9, #0x248
  40f644:	mov	x19, x0
  40f648:	ldr	x0, [x9, x8, lsl #3]
  40f64c:	mov	x21, x1
  40f650:	bl	402cd0 <gettext@plt>
  40f654:	ldr	w8, [x21, #56]
  40f658:	mov	w9, #0x23fc                	// #9212
  40f65c:	mov	x20, x0
  40f660:	lsr	x9, x9, x8
  40f664:	tbnz	w9, #0, 40f678 <feof@plt+0xc598>
  40f668:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x838>
  40f66c:	add	x22, x22, #0xbb5
  40f670:	mov	x23, x22
  40f674:	b	40f6b8 <feof@plt+0xc5d8>
  40f678:	ldr	x24, [x19]
  40f67c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40f680:	add	x9, x9, #0x1d0
  40f684:	ldr	x22, [x9, x8, lsl #3]
  40f688:	ldrb	w23, [x24, #67]
  40f68c:	mov	x0, x22
  40f690:	bl	402a50 <strlen@plt>
  40f694:	mov	x2, x0
  40f698:	mov	w0, w23
  40f69c:	mov	x1, x22
  40f6a0:	bl	41260c <feof@plt+0xf52c>
  40f6a4:	ldrb	w8, [x24, #67]
  40f6a8:	mov	x23, x0
  40f6ac:	mov	w0, w8
  40f6b0:	bl	412690 <feof@plt+0xf5b0>
  40f6b4:	mov	x22, x0
  40f6b8:	ldr	x0, [x21, #40]
  40f6bc:	add	x8, sp, #0x20
  40f6c0:	mov	w1, wzr
  40f6c4:	bl	436c30 <feof@plt+0x33b50>
  40f6c8:	ldp	q0, q1, [sp, #32]
  40f6cc:	mov	x1, sp
  40f6d0:	mov	x0, x19
  40f6d4:	stp	q0, q1, [sp]
  40f6d8:	bl	40f73c <feof@plt+0xc65c>
  40f6dc:	mov	x19, x0
  40f6e0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f6e4:	add	x0, x0, #0x3c6
  40f6e8:	mov	x1, x19
  40f6ec:	mov	x2, x23
  40f6f0:	mov	x3, x20
  40f6f4:	mov	x4, x22
  40f6f8:	bl	40f000 <feof@plt+0xbf20>
  40f6fc:	mov	x20, x0
  40f700:	mov	x0, x19
  40f704:	bl	402b20 <free@plt>
  40f708:	mov	x0, x20
  40f70c:	ldp	x20, x19, [sp, #112]
  40f710:	ldp	x22, x21, [sp, #96]
  40f714:	ldp	x24, x23, [sp, #80]
  40f718:	ldp	x29, x30, [sp, #64]
  40f71c:	add	sp, sp, #0x80
  40f720:	ret
  40f724:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f728:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40f72c:	add	x0, x0, #0x580
  40f730:	add	x2, x2, #0x3ae
  40f734:	mov	w1, #0x16a                 	// #362
  40f738:	bl	40f560 <feof@plt+0xc480>
  40f73c:	stp	x29, x30, [sp, #-64]!
  40f740:	str	x23, [sp, #16]
  40f744:	stp	x22, x21, [sp, #32]
  40f748:	stp	x20, x19, [sp, #48]
  40f74c:	mov	x29, sp
  40f750:	ldr	x19, [x0]
  40f754:	mov	x23, x0
  40f758:	mov	x22, x1
  40f75c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40f760:	ldrb	w0, [x19, #67]
  40f764:	add	x1, x1, #0x2d8
  40f768:	mov	w2, #0x5                   	// #5
  40f76c:	bl	41260c <feof@plt+0xf52c>
  40f770:	ldrb	w8, [x19, #67]
  40f774:	mov	x19, x0
  40f778:	mov	w0, w8
  40f77c:	bl	412690 <feof@plt+0xf5b0>
  40f780:	ldr	x8, [x22]
  40f784:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f788:	ldr	x9, [x9, #2008]
  40f78c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40f790:	cmp	x8, #0x0
  40f794:	mov	x20, x0
  40f798:	csel	x21, x9, x8, eq  // eq = none
  40f79c:	add	x1, x1, #0x675
  40f7a0:	mov	x0, x21
  40f7a4:	bl	402ed0 <strcmp@plt>
  40f7a8:	cbz	w0, 40f7ec <feof@plt+0xc70c>
  40f7ac:	ldr	w3, [x22, #8]
  40f7b0:	ldrb	w8, [x23, #121]
  40f7b4:	cbz	w8, 40f7f8 <feof@plt+0xc718>
  40f7b8:	ldr	w4, [x22, #12]
  40f7bc:	cbz	w3, 40f800 <feof@plt+0xc720>
  40f7c0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  40f7c4:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40f7c8:	add	x8, x8, #0x6d2
  40f7cc:	add	x9, x9, #0x6d5
  40f7d0:	cmp	w4, #0x0
  40f7d4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f7d8:	csel	x2, x9, x8, eq  // eq = none
  40f7dc:	add	x0, x0, #0x8f0
  40f7e0:	mov	w1, #0x20                  	// #32
  40f7e4:	bl	402df0 <snprintf@plt>
  40f7e8:	b	40f808 <feof@plt+0xc728>
  40f7ec:	mov	w3, wzr
  40f7f0:	ldrb	w8, [x23, #121]
  40f7f4:	cbnz	w8, 40f7b8 <feof@plt+0xc6d8>
  40f7f8:	mov	w4, wzr
  40f7fc:	cbnz	w3, 40f7c0 <feof@plt+0xc6e0>
  40f800:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f804:	strb	wzr, [x8, #2288]
  40f808:	mov	x1, x19
  40f80c:	mov	x2, x21
  40f810:	mov	x4, x20
  40f814:	ldp	x20, x19, [sp, #48]
  40f818:	ldp	x22, x21, [sp, #32]
  40f81c:	ldr	x23, [sp, #16]
  40f820:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f824:	adrp	x3, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f828:	add	x0, x0, #0x680
  40f82c:	add	x3, x3, #0x8f0
  40f830:	ldp	x29, x30, [sp], #64
  40f834:	b	40f000 <feof@plt+0xbf20>
  40f838:	stp	x29, x30, [sp, #-32]!
  40f83c:	str	x19, [sp, #16]
  40f840:	mov	x29, sp
  40f844:	ldr	w2, [x0, #132]
  40f848:	cbz	w2, 40f864 <feof@plt+0xc784>
  40f84c:	ldp	w8, w9, [x0, #24]
  40f850:	ldr	w10, [x0, #56]
  40f854:	add	w8, w9, w8
  40f858:	add	w8, w8, w10
  40f85c:	cmp	w8, w2
  40f860:	b.ge	40f870 <feof@plt+0xc790>  // b.tcont
  40f864:	ldr	x19, [sp, #16]
  40f868:	ldp	x29, x30, [sp], #32
  40f86c:	ret
  40f870:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f874:	str	x0, [x29, #24]
  40f878:	ldr	x0, [x8, #1464]
  40f87c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  40f880:	add	x8, x8, #0x3d0
  40f884:	mov	w19, w1
  40f888:	mov	x1, x8
  40f88c:	bl	40f8a4 <feof@plt+0xc7c4>
  40f890:	tbz	w19, #0, 40f89c <feof@plt+0xc7bc>
  40f894:	ldr	x0, [x29, #24]
  40f898:	bl	40f478 <feof@plt+0xc398>
  40f89c:	mov	w0, #0x1                   	// #1
  40f8a0:	bl	402f70 <exit@plt>
  40f8a4:	sub	sp, sp, #0x110
  40f8a8:	stp	x29, x30, [sp, #240]
  40f8ac:	stp	x28, x19, [sp, #256]
  40f8b0:	add	x29, sp, #0xf0
  40f8b4:	mov	x8, #0xffffffffffffffd0    	// #-48
  40f8b8:	mov	x9, sp
  40f8bc:	sub	x10, x29, #0x70
  40f8c0:	mov	x19, x0
  40f8c4:	movk	x8, #0xff80, lsl #32
  40f8c8:	add	x11, x29, #0x20
  40f8cc:	add	x9, x9, #0x80
  40f8d0:	add	x10, x10, #0x30
  40f8d4:	mov	x0, x1
  40f8d8:	stp	x2, x3, [x29, #-112]
  40f8dc:	stp	x4, x5, [x29, #-96]
  40f8e0:	stp	x6, x7, [x29, #-80]
  40f8e4:	stp	q1, q2, [sp, #16]
  40f8e8:	stp	q3, q4, [sp, #48]
  40f8ec:	str	q0, [sp]
  40f8f0:	stp	q5, q6, [sp, #80]
  40f8f4:	str	q7, [sp, #112]
  40f8f8:	stp	x9, x8, [x29, #-16]
  40f8fc:	stp	x11, x10, [x29, #-32]
  40f900:	bl	402cd0 <gettext@plt>
  40f904:	ldp	q0, q1, [x29, #-32]
  40f908:	mov	x1, x0
  40f90c:	sub	x2, x29, #0x40
  40f910:	mov	x0, x19
  40f914:	stp	q0, q1, [x29, #-64]
  40f918:	bl	4030d0 <vfprintf@plt>
  40f91c:	ldp	x28, x19, [sp, #256]
  40f920:	ldp	x29, x30, [sp, #240]
  40f924:	add	sp, sp, #0x110
  40f928:	ret
  40f92c:	stp	x29, x30, [sp, #-32]!
  40f930:	str	x19, [sp, #16]
  40f934:	mov	x29, sp
  40f938:	sub	w8, w1, #0x6
  40f93c:	cmp	w8, #0x4
  40f940:	b.cc	40f978 <feof@plt+0xc898>  // b.lo, b.ul, b.last
  40f944:	sub	w8, w1, #0x2
  40f948:	cmp	w8, #0xb
  40f94c:	b.hi	40f9f0 <feof@plt+0xc910>  // b.pmore
  40f950:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40f954:	add	x9, x9, #0x1c0
  40f958:	adr	x10, 40f968 <feof@plt+0xc888>
  40f95c:	ldrb	w11, [x9, x8]
  40f960:	add	x10, x10, x11, lsl #2
  40f964:	br	x10
  40f968:	ldrb	w8, [x0, #120]
  40f96c:	cbnz	w8, 40fa68 <feof@plt+0xc988>
  40f970:	ldrb	w8, [x0, #128]
  40f974:	cbnz	w8, 40fa6c <feof@plt+0xc98c>
  40f978:	ldr	x19, [sp, #16]
  40f97c:	ldp	x29, x30, [sp], #32
  40f980:	ret
  40f984:	ldrb	w9, [x0, #120]
  40f988:	cbnz	w9, 40fa68 <feof@plt+0xc988>
  40f98c:	bl	40f478 <feof@plt+0xc398>
  40f990:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40f994:	ldr	x0, [x8, #1464]
  40f998:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40f99c:	add	x1, x1, #0x4d0
  40f9a0:	bl	40f8a4 <feof@plt+0xc7c4>
  40f9a4:	mov	w0, #0x1                   	// #1
  40f9a8:	bl	402f70 <exit@plt>
  40f9ac:	adrp	x2, 40f000 <feof@plt+0xbf20>
  40f9b0:	mov	x19, x0
  40f9b4:	add	x2, x2, #0xaa4
  40f9b8:	mov	x0, xzr
  40f9bc:	mov	w1, wzr
  40f9c0:	mov	x3, xzr
  40f9c4:	bl	43fd7c <feof@plt+0x3cc9c>
  40f9c8:	str	wzr, [x29, #28]
  40f9cc:	cbz	x0, 40fa10 <feof@plt+0xc930>
  40f9d0:	adrp	x2, 40f000 <feof@plt+0xbf20>
  40f9d4:	adrp	x3, 40f000 <feof@plt+0xbf20>
  40f9d8:	add	x2, x2, #0xb14
  40f9dc:	add	x3, x3, #0xaa4
  40f9e0:	add	x4, x29, #0x1c
  40f9e4:	mov	w1, #0x2                   	// #2
  40f9e8:	bl	43fdd4 <feof@plt+0x3ccf4>
  40f9ec:	b	40fa10 <feof@plt+0xc930>
  40f9f0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40f9f4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  40f9f8:	add	x0, x0, #0x580
  40f9fc:	add	x2, x2, #0x4e9
  40fa00:	mov	w1, #0x231                 	// #561
  40fa04:	bl	40f560 <feof@plt+0xc480>
  40fa08:	mov	x19, x0
  40fa0c:	str	wzr, [x29, #28]
  40fa10:	ldrb	w8, [x19, #120]
  40fa14:	cbnz	w8, 40fa68 <feof@plt+0xc988>
  40fa18:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fa1c:	ldr	x0, [x19, #1464]
  40fa20:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fa24:	add	x1, x1, #0x42f
  40fa28:	bl	40f8a4 <feof@plt+0xc7c4>
  40fa2c:	ldr	w8, [x29, #28]
  40fa30:	cmp	w8, #0x1
  40fa34:	b.lt	40fa48 <feof@plt+0xc968>  // b.tstop
  40fa38:	ldr	x0, [x19, #1464]
  40fa3c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fa40:	add	x1, x1, #0x47a
  40fa44:	bl	40f8a4 <feof@plt+0xc7c4>
  40fa48:	ldr	x0, [x19, #1464]
  40fa4c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fa50:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  40fa54:	add	x1, x1, #0x4b6
  40fa58:	add	x2, x2, #0x6b8
  40fa5c:	bl	40f8a4 <feof@plt+0xc7c4>
  40fa60:	mov	w0, #0x4                   	// #4
  40fa64:	bl	402f70 <exit@plt>
  40fa68:	bl	40fa98 <feof@plt+0xc9b8>
  40fa6c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fa70:	ldr	x8, [x8, #1464]
  40fa74:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fa78:	add	x1, x1, #0x400
  40fa7c:	mov	x19, x0
  40fa80:	mov	x0, x8
  40fa84:	bl	40f8a4 <feof@plt+0xc7c4>
  40fa88:	mov	x0, x19
  40fa8c:	bl	40f478 <feof@plt+0xc398>
  40fa90:	mov	w0, #0x1                   	// #1
  40fa94:	bl	402f70 <exit@plt>
  40fa98:	stp	x29, x30, [sp, #-16]!
  40fa9c:	mov	x29, sp
  40faa0:	bl	402f30 <abort@plt>
  40faa4:	tbz	w2, #31, 40faac <feof@plt+0xc9cc>
  40faa8:	ret
  40faac:	stp	x29, x30, [sp, #-48]!
  40fab0:	str	x21, [sp, #16]
  40fab4:	stp	x20, x19, [sp, #32]
  40fab8:	mov	x29, sp
  40fabc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fac0:	ldr	x20, [x8, #1464]
  40fac4:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1838>
  40fac8:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x838>
  40facc:	add	x8, x8, #0xf27
  40fad0:	add	x4, x4, #0xbb5
  40fad4:	cmp	w2, #0x0
  40fad8:	mov	x19, x1
  40fadc:	csel	x21, x4, x8, eq  // eq = none
  40fae0:	cbz	w2, 40faf0 <feof@plt+0xca10>
  40fae4:	mov	w0, w2
  40fae8:	bl	46231c <_obstack_memory_used@@Base+0xb54>
  40faec:	mov	x4, x0
  40faf0:	mov	x0, x20
  40faf4:	mov	x2, x19
  40faf8:	mov	x3, x21
  40fafc:	ldp	x20, x19, [sp, #32]
  40fb00:	ldr	x21, [sp, #16]
  40fb04:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fb08:	add	x1, x1, #0x68a
  40fb0c:	ldp	x29, x30, [sp], #48
  40fb10:	b	402a70 <fprintf@plt>
  40fb14:	stp	x29, x30, [sp, #-64]!
  40fb18:	str	x23, [sp, #16]
  40fb1c:	stp	x22, x21, [sp, #32]
  40fb20:	stp	x20, x19, [sp, #48]
  40fb24:	mov	x29, sp
  40fb28:	orr	x8, x2, x4
  40fb2c:	cbnz	x8, 40fb38 <feof@plt+0xca58>
  40fb30:	mov	w0, wzr
  40fb34:	b	40fc5c <feof@plt+0xcb7c>
  40fb38:	ldr	w8, [x0]
  40fb3c:	mov	x23, x4
  40fb40:	mov	w19, w3
  40fb44:	mov	x21, x2
  40fb48:	mov	x20, x1
  40fb4c:	mov	x22, x0
  40fb50:	cbz	x2, 40fb74 <feof@plt+0xca94>
  40fb54:	cbnz	w8, 40fb74 <feof@plt+0xca94>
  40fb58:	mov	x0, x21
  40fb5c:	bl	4613f4 <feof@plt+0x5e314>
  40fb60:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fb64:	add	x1, x1, #0x58a
  40fb68:	bl	402ed0 <strcmp@plt>
  40fb6c:	cbz	w0, 40fc5c <feof@plt+0xcb7c>
  40fb70:	ldr	w8, [x22]
  40fb74:	cmp	w8, #0x13
  40fb78:	b.gt	40fc58 <feof@plt+0xcb78>
  40fb7c:	add	w8, w8, #0x1
  40fb80:	str	w8, [x22]
  40fb84:	cbz	x23, 40fc70 <feof@plt+0xcb90>
  40fb88:	mov	w1, #0x400b                	// #16395
  40fb8c:	mov	x0, x23
  40fb90:	bl	44dc50 <feof@plt+0x4ab70>
  40fb94:	cmp	x0, #0x0
  40fb98:	csel	x23, x23, x0, eq  // eq = none
  40fb9c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  40fba0:	mov	x22, x0
  40fba4:	add	x1, x1, #0x846
  40fba8:	mov	w2, #0x4                   	// #4
  40fbac:	mov	x0, x23
  40fbb0:	bl	402d40 <strncmp@plt>
  40fbb4:	cbz	w0, 40fc14 <feof@plt+0xcb34>
  40fbb8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fbbc:	add	x1, x1, #0x6a7
  40fbc0:	mov	w2, #0xc                   	// #12
  40fbc4:	mov	x0, x23
  40fbc8:	bl	402d40 <strncmp@plt>
  40fbcc:	cbz	w0, 40fc28 <feof@plt+0xcb48>
  40fbd0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fbd4:	add	x1, x1, #0x6b4
  40fbd8:	mov	w2, #0x10                  	// #16
  40fbdc:	mov	x0, x23
  40fbe0:	bl	402d40 <strncmp@plt>
  40fbe4:	cbz	w0, 40fc3c <feof@plt+0xcb5c>
  40fbe8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fbec:	add	x1, x1, #0x6c5
  40fbf0:	mov	w2, #0xc                   	// #12
  40fbf4:	mov	x0, x23
  40fbf8:	bl	402d40 <strncmp@plt>
  40fbfc:	cbnz	w0, 40fc74 <feof@plt+0xcb94>
  40fc00:	ldrb	w8, [x23, #12]
  40fc04:	cbz	w8, 40fc4c <feof@plt+0xcb6c>
  40fc08:	cmp	w8, #0x28
  40fc0c:	b.eq	40fc4c <feof@plt+0xcb6c>  // b.none
  40fc10:	b	40fc74 <feof@plt+0xcb94>
  40fc14:	ldrb	w8, [x23, #4]
  40fc18:	cmp	w8, #0x28
  40fc1c:	b.eq	40fc4c <feof@plt+0xcb6c>  // b.none
  40fc20:	cbz	w8, 40fc4c <feof@plt+0xcb6c>
  40fc24:	b	40fbb8 <feof@plt+0xcad8>
  40fc28:	ldrb	w8, [x23, #12]
  40fc2c:	cbz	w8, 40fc4c <feof@plt+0xcb6c>
  40fc30:	cmp	w8, #0x28
  40fc34:	b.eq	40fc4c <feof@plt+0xcb6c>  // b.none
  40fc38:	b	40fbd0 <feof@plt+0xcaf0>
  40fc3c:	ldrb	w8, [x23, #16]
  40fc40:	cbz	w8, 40fc4c <feof@plt+0xcb6c>
  40fc44:	cmp	w8, #0x28
  40fc48:	b.ne	40fbe8 <feof@plt+0xcb08>  // b.any
  40fc4c:	cbz	x22, 40fc58 <feof@plt+0xcb78>
  40fc50:	mov	x0, x22
  40fc54:	bl	402b20 <free@plt>
  40fc58:	mov	w0, #0x1                   	// #1
  40fc5c:	ldp	x20, x19, [sp, #48]
  40fc60:	ldp	x22, x21, [sp, #32]
  40fc64:	ldr	x23, [sp, #16]
  40fc68:	ldp	x29, x30, [sp], #64
  40fc6c:	ret
  40fc70:	mov	x22, xzr
  40fc74:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fc78:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40fc7c:	ldr	x0, [x8, #1464]
  40fc80:	add	x9, x9, #0x6a3
  40fc84:	cmp	x23, #0x0
  40fc88:	csel	x3, x9, x23, eq  // eq = none
  40fc8c:	cmp	x21, #0x0
  40fc90:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fc94:	csel	x4, x9, x21, eq  // eq = none
  40fc98:	add	x1, x1, #0x692
  40fc9c:	mov	x2, x20
  40fca0:	mov	w5, w19
  40fca4:	bl	402a70 <fprintf@plt>
  40fca8:	cbz	x22, 40fb30 <feof@plt+0xca50>
  40fcac:	mov	x0, x22
  40fcb0:	bl	402b20 <free@plt>
  40fcb4:	b	40fb30 <feof@plt+0xca50>
  40fcb8:	sub	sp, sp, #0x70
  40fcbc:	stp	x29, x30, [sp, #16]
  40fcc0:	stp	x28, x27, [sp, #32]
  40fcc4:	stp	x26, x25, [sp, #48]
  40fcc8:	stp	x24, x23, [sp, #64]
  40fccc:	stp	x22, x21, [sp, #80]
  40fcd0:	stp	x20, x19, [sp, #96]
  40fcd4:	add	x29, sp, #0x10
  40fcd8:	str	xzr, [sp, #8]
  40fcdc:	mov	x19, x0
  40fce0:	ldr	x0, [x0]
  40fce4:	mov	w20, w1
  40fce8:	ldrb	w8, [x0, #65]
  40fcec:	cbz	w8, 40fcfc <feof@plt+0xcc1c>
  40fcf0:	bl	41a7a4 <feof@plt+0x176c4>
  40fcf4:	ldr	x8, [x19]
  40fcf8:	strb	wzr, [x8, #65]
  40fcfc:	cmp	w20, #0x2
  40fd00:	b.cc	40fee0 <feof@plt+0xce00>  // b.lo, b.ul, b.last
  40fd04:	adrp	x27, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fd08:	ldr	x0, [x27, #2408]
  40fd0c:	add	x3, sp, #0x8
  40fd10:	mov	w2, #0x2                   	// #2
  40fd14:	mov	w1, w20
  40fd18:	bl	435630 <feof@plt+0x32550>
  40fd1c:	ldr	x1, [sp, #8]
  40fd20:	cbz	x1, 40fee0 <feof@plt+0xce00>
  40fd24:	ldr	x8, [x19, #208]
  40fd28:	cmp	x8, x1
  40fd2c:	b.eq	40fee0 <feof@plt+0xce00>  // b.none
  40fd30:	str	x1, [x19, #208]
  40fd34:	ldr	w20, [x1, #20]
  40fd38:	cbz	w20, 40fee0 <feof@plt+0xce00>
  40fd3c:	ldr	x0, [x27, #2408]
  40fd40:	bl	4349ac <feof@plt+0x318cc>
  40fd44:	str	x0, [sp, #8]
  40fd48:	ldr	w9, [x0]
  40fd4c:	ldrh	w8, [x0, #6]
  40fd50:	ldr	w10, [x0, #16]
  40fd54:	ldrb	w11, [x19, #121]
  40fd58:	sub	w9, w20, w9
  40fd5c:	lsr	w12, w9, w8
  40fd60:	add	w3, w12, w10
  40fd64:	cbz	w11, 40fdb4 <feof@plt+0xccd4>
  40fd68:	and	w10, w8, #0xff
  40fd6c:	mov	w11, #0xffffffff            	// #-1
  40fd70:	lsl	w10, w11, w10
  40fd74:	bic	w9, w9, w10
  40fd78:	lsr	w8, w8, #8
  40fd7c:	lsr	w4, w9, w8
  40fd80:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fd84:	cbz	w3, 40fdc0 <feof@plt+0xcce0>
  40fd88:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  40fd8c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  40fd90:	add	x8, x8, #0x6d2
  40fd94:	add	x9, x9, #0x6d5
  40fd98:	cmp	w4, #0x0
  40fd9c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fda0:	csel	x2, x9, x8, eq  // eq = none
  40fda4:	add	x0, x0, #0x8f0
  40fda8:	mov	w1, #0x20                  	// #32
  40fdac:	bl	402df0 <snprintf@plt>
  40fdb0:	b	40fdc4 <feof@plt+0xcce4>
  40fdb4:	mov	w4, wzr
  40fdb8:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fdbc:	cbnz	w3, 40fd88 <feof@plt+0xcca8>
  40fdc0:	strb	wzr, [x28, #2288]
  40fdc4:	ldr	x20, [x19]
  40fdc8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  40fdcc:	add	x0, x0, #0x508
  40fdd0:	bl	402cd0 <gettext@plt>
  40fdd4:	ldr	x8, [sp, #8]
  40fdd8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  40fddc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x838>
  40fde0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x2838>
  40fde4:	ldr	x5, [x8, #8]
  40fde8:	adrp	x6, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fdec:	mov	x3, x0
  40fdf0:	add	x1, x1, #0x534
  40fdf4:	add	x2, x2, #0xbb5
  40fdf8:	add	x4, x4, #0x2d8
  40fdfc:	add	x6, x6, #0x8f0
  40fe00:	mov	x0, x20
  40fe04:	bl	41a6f4 <feof@plt+0x17614>
  40fe08:	ldr	x1, [sp, #8]
  40fe0c:	ldr	w26, [x1, #20]
  40fe10:	cbz	w26, 40fec8 <feof@plt+0xcde8>
  40fe14:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x2838>
  40fe18:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x2838>
  40fe1c:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x2838>
  40fe20:	adrp	x23, 464000 <_obstack_memory_used@@Base+0x2838>
  40fe24:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  40fe28:	adrp	x25, 464000 <_obstack_memory_used@@Base+0x2838>
  40fe2c:	add	x20, x20, #0x51e
  40fe30:	add	x21, x21, #0x534
  40fe34:	add	x22, x22, #0x542
  40fe38:	add	x23, x23, #0x2d8
  40fe3c:	add	x24, x24, #0x8f0
  40fe40:	add	x25, x25, #0x6d5
  40fe44:	b	40fe88 <feof@plt+0xcda8>
  40fe48:	strb	wzr, [x28, #2288]
  40fe4c:	ldr	x26, [x19]
  40fe50:	mov	x0, x20
  40fe54:	bl	402cd0 <gettext@plt>
  40fe58:	ldr	x8, [sp, #8]
  40fe5c:	mov	x3, x0
  40fe60:	mov	x0, x26
  40fe64:	mov	x1, x21
  40fe68:	ldr	x5, [x8, #8]
  40fe6c:	mov	x2, x22
  40fe70:	mov	x4, x23
  40fe74:	mov	x6, x24
  40fe78:	bl	41a6f4 <feof@plt+0x17614>
  40fe7c:	ldr	x1, [sp, #8]
  40fe80:	ldr	w26, [x1, #20]
  40fe84:	cbz	w26, 40fec8 <feof@plt+0xcde8>
  40fe88:	ldr	x0, [x27, #2408]
  40fe8c:	bl	4349ac <feof@plt+0x318cc>
  40fe90:	str	x0, [sp, #8]
  40fe94:	ldr	w8, [x0]
  40fe98:	ldrb	w9, [x0, #6]
  40fe9c:	ldr	w10, [x0, #16]
  40fea0:	sub	w8, w26, w8
  40fea4:	lsr	w8, w8, w9
  40fea8:	adds	w3, w8, w10
  40feac:	b.eq	40fe48 <feof@plt+0xcd68>  // b.none
  40feb0:	mov	w1, #0x20                  	// #32
  40feb4:	mov	x0, x24
  40feb8:	mov	x2, x25
  40febc:	mov	w4, wzr
  40fec0:	bl	402df0 <snprintf@plt>
  40fec4:	b	40fe4c <feof@plt+0xcd6c>
  40fec8:	ldr	x0, [x19]
  40fecc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  40fed0:	add	x1, x1, #0x59f
  40fed4:	bl	41a6f4 <feof@plt+0x17614>
  40fed8:	ldr	x0, [x19]
  40fedc:	bl	41a7a4 <feof@plt+0x176c4>
  40fee0:	ldp	x20, x19, [sp, #96]
  40fee4:	ldp	x22, x21, [sp, #80]
  40fee8:	ldp	x24, x23, [sp, #64]
  40feec:	ldp	x26, x25, [sp, #48]
  40fef0:	ldp	x28, x27, [sp, #32]
  40fef4:	ldp	x29, x30, [sp, #16]
  40fef8:	add	sp, sp, #0x70
  40fefc:	ret
  40ff00:	mov	w1, wzr
  40ff04:	b	417f48 <feof@plt+0x14e68>
  40ff08:	stp	x29, x30, [sp, #-64]!
  40ff0c:	stp	x24, x23, [sp, #16]
  40ff10:	stp	x22, x21, [sp, #32]
  40ff14:	stp	x20, x19, [sp, #48]
  40ff18:	mov	x29, sp
  40ff1c:	tbnz	w1, #31, 40ff84 <feof@plt+0xcea4>
  40ff20:	mov	w19, w2
  40ff24:	cmp	w2, #0xd
  40ff28:	mov	w23, wzr
  40ff2c:	b.gt	41002c <feof@plt+0xcf4c>
  40ff30:	ldr	w8, [x0, #68]
  40ff34:	mov	w21, w1
  40ff38:	mov	x20, x0
  40ff3c:	cmp	w8, w1
  40ff40:	b.le	41002c <feof@plt+0xcf4c>
  40ff44:	ldr	x8, [x20, #72]
  40ff48:	mov	w22, w3
  40ff4c:	mov	w24, w21
  40ff50:	ldr	w23, [x8, w21, uxtw #2]
  40ff54:	cbz	w3, 40ff8c <feof@plt+0xceac>
  40ff58:	cbnz	w23, 40ffa0 <feof@plt+0xcec0>
  40ff5c:	ldp	x8, x1, [x20, #168]
  40ff60:	mov	w0, w21
  40ff64:	blr	x8
  40ff68:	cbz	w0, 40ff94 <feof@plt+0xceb4>
  40ff6c:	ldrb	w8, [x20, #64]
  40ff70:	mov	w9, #0x4                   	// #4
  40ff74:	cmp	w8, #0x0
  40ff78:	mov	w8, #0x6                   	// #6
  40ff7c:	csel	w23, w8, w9, eq  // eq = none
  40ff80:	b	40ff98 <feof@plt+0xceb8>
  40ff84:	mov	w23, wzr
  40ff88:	b	41002c <feof@plt+0xcf4c>
  40ff8c:	str	w19, [x8, x24, lsl #2]
  40ff90:	b	41002c <feof@plt+0xcf4c>
  40ff94:	mov	w23, #0x1                   	// #1
  40ff98:	ldr	x8, [x20, #72]
  40ff9c:	str	w23, [x8, x24, lsl #2]
  40ffa0:	ldrsw	x24, [x20, #88]
  40ffa4:	add	x9, x24, x24, lsl #1
  40ffa8:	add	x8, x24, #0x1
  40ffac:	lsl	x9, x9, #2
  40ffb0:	sub	x8, x8, #0x1
  40ffb4:	cmp	x8, #0x1
  40ffb8:	b.lt	40ffe4 <feof@plt+0xcf04>  // b.tstop
  40ffbc:	ldr	x0, [x20, #80]
  40ffc0:	add	x10, x0, x9
  40ffc4:	ldur	w11, [x10, #-8]
  40ffc8:	sub	x10, x9, #0xc
  40ffcc:	mov	x9, x10
  40ffd0:	cmp	w11, w21
  40ffd4:	b.ne	40ffb0 <feof@plt+0xced0>  // b.any
  40ffd8:	add	x8, x0, x10
  40ffdc:	ldr	w23, [x8, #8]
  40ffe0:	b	40ffe8 <feof@plt+0xcf08>
  40ffe4:	ldr	x0, [x20, #80]
  40ffe8:	add	w8, w24, #0x1
  40ffec:	mov	w9, #0xc                   	// #12
  40fff0:	smull	x1, w8, w9
  40fff4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  40fff8:	add	x8, x24, x24, lsl #1
  40fffc:	lsl	x8, x8, #2
  410000:	str	x0, [x20, #80]
  410004:	str	w22, [x0, x8]
  410008:	ldr	x9, [x20, #80]
  41000c:	add	x9, x9, x8
  410010:	str	w21, [x9, #4]
  410014:	ldr	x9, [x20, #80]
  410018:	add	x8, x9, x8
  41001c:	str	w19, [x8, #8]
  410020:	ldr	w8, [x20, #88]
  410024:	add	w8, w8, #0x1
  410028:	str	w8, [x20, #88]
  41002c:	mov	w0, w23
  410030:	ldp	x20, x19, [sp, #48]
  410034:	ldp	x22, x21, [sp, #32]
  410038:	ldp	x24, x23, [sp, #16]
  41003c:	ldp	x29, x30, [sp], #64
  410040:	ret
  410044:	stp	x29, x30, [sp, #-32]!
  410048:	str	x19, [sp, #16]
  41004c:	mov	x29, sp
  410050:	ldrsw	x8, [x0, #104]
  410054:	mov	x19, x0
  410058:	ldr	x0, [x0, #96]
  41005c:	lsl	x8, x8, #2
  410060:	add	x1, x8, #0x4
  410064:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  410068:	ldrsw	x8, [x19, #104]
  41006c:	ldr	w9, [x19, #88]
  410070:	str	x0, [x19, #96]
  410074:	add	w10, w8, #0x1
  410078:	str	w10, [x19, #104]
  41007c:	ldr	x19, [sp, #16]
  410080:	str	w9, [x0, x8, lsl #2]
  410084:	ldp	x29, x30, [sp], #32
  410088:	ret
  41008c:	stp	x29, x30, [sp, #-48]!
  410090:	stp	x22, x21, [sp, #16]
  410094:	stp	x20, x19, [sp, #32]
  410098:	mov	x29, sp
  41009c:	ldr	w8, [x0, #104]
  4100a0:	mov	x19, x0
  4100a4:	mov	w20, w1
  4100a8:	cbz	w8, 4100c0 <feof@plt+0xcfe0>
  4100ac:	ldr	x9, [x19, #96]
  4100b0:	sub	w8, w8, #0x1
  4100b4:	str	w8, [x19, #104]
  4100b8:	ldr	w21, [x9, w8, sxtw #2]
  4100bc:	b	4100c4 <feof@plt+0xcfe4>
  4100c0:	mov	w21, wzr
  4100c4:	ldrsw	x8, [x19, #88]
  4100c8:	ldr	x0, [x19, #80]
  4100cc:	add	x8, x8, x8, lsl #1
  4100d0:	lsl	x22, x8, #2
  4100d4:	add	x1, x22, #0xc
  4100d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4100dc:	str	x0, [x19, #80]
  4100e0:	str	w20, [x0, x22]
  4100e4:	ldr	x8, [x19, #80]
  4100e8:	mov	w9, #0xf                   	// #15
  4100ec:	add	x8, x8, x22
  4100f0:	str	w21, [x8, #4]
  4100f4:	ldr	x8, [x19, #80]
  4100f8:	add	x8, x8, x22
  4100fc:	str	w9, [x8, #8]
  410100:	ldr	w8, [x19, #88]
  410104:	add	w8, w8, #0x1
  410108:	str	w8, [x19, #88]
  41010c:	ldp	x20, x19, [sp, #32]
  410110:	ldp	x22, x21, [sp, #16]
  410114:	ldp	x29, x30, [sp], #48
  410118:	ret
  41011c:	sub	sp, sp, #0x90
  410120:	stp	x29, x30, [sp, #64]
  410124:	stp	x26, x25, [sp, #80]
  410128:	stp	x24, x23, [sp, #96]
  41012c:	stp	x22, x21, [sp, #112]
  410130:	stp	x20, x19, [sp, #128]
  410134:	add	x29, sp, #0x40
  410138:	mov	x20, x1
  41013c:	mov	x19, x0
  410140:	mov	x0, x1
  410144:	mov	w1, wzr
  410148:	bl	417f48 <feof@plt+0x14e68>
  41014c:	ldr	w21, [x20, #56]
  410150:	mov	w1, w0
  410154:	cmp	w21, #0xa
  410158:	b.eq	410168 <feof@plt+0xd088>  // b.none
  41015c:	cmp	w21, #0x6
  410160:	mov	w8, w21
  410164:	b.ne	4101b4 <feof@plt+0xd0d4>  // b.any
  410168:	ldrb	w8, [x19, #129]
  41016c:	cbnz	w8, 4101c4 <feof@plt+0xd0e4>
  410170:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  410174:	ldr	x0, [x8, #2408]
  410178:	bl	4359a0 <feof@plt+0x328c0>
  41017c:	cbz	w0, 410188 <feof@plt+0xd0a8>
  410180:	ldrb	w8, [x19, #130]
  410184:	cbz	w8, 4101c4 <feof@plt+0xd0e4>
  410188:	ldr	w8, [x20, #56]
  41018c:	cmp	w8, #0xa
  410190:	b.ne	4101b4 <feof@plt+0xd0d4>  // b.any
  410194:	ldrb	w8, [x19, #122]
  410198:	mov	w9, #0x4                   	// #4
  41019c:	cmp	w8, #0x0
  4101a0:	mov	w8, #0x6                   	// #6
  4101a4:	csel	w21, w8, w9, eq  // eq = none
  4101a8:	str	w21, [x20, #56]
  4101ac:	mov	w8, w21
  4101b0:	b	4101d0 <feof@plt+0xd0f0>
  4101b4:	cmp	w8, #0x8
  4101b8:	b.ne	4101d0 <feof@plt+0xd0f0>  // b.any
  4101bc:	ldrb	w8, [x19, #220]
  4101c0:	cbz	w8, 4101cc <feof@plt+0xd0ec>
  4101c4:	mov	w0, wzr
  4101c8:	b	4105b4 <feof@plt+0xd4d4>
  4101cc:	mov	w8, #0x8                   	// #8
  4101d0:	ldr	w9, [x19, #216]
  4101d4:	cmp	w9, #0x1
  4101d8:	b.lt	4101fc <feof@plt+0xd11c>  // b.tstop
  4101dc:	cmp	w8, #0xd
  4101e0:	b.eq	4101ec <feof@plt+0xd10c>  // b.none
  4101e4:	cmp	w8, #0x3
  4101e8:	b.ne	4105e0 <feof@plt+0xd500>  // b.any
  4101ec:	cmp	w9, #0x1
  4101f0:	b.ne	4105e0 <feof@plt+0xd500>  // b.any
  4101f4:	ldr	x0, [x19]
  4101f8:	bl	41ab20 <feof@plt+0x17a40>
  4101fc:	ldrb	w8, [x19, #64]
  410200:	cbz	w8, 410218 <feof@plt+0xd138>
  410204:	ldr	w8, [x20, #56]
  410208:	cmp	w8, #0x6
  41020c:	b.ne	410218 <feof@plt+0xd138>  // b.any
  410210:	mov	w8, #0x4                   	// #4
  410214:	str	w8, [x20, #56]
  410218:	ldr	w0, [x20, #60]
  41021c:	cbz	w0, 41022c <feof@plt+0xd14c>
  410220:	ldr	w8, [x19, #124]
  410224:	cmp	w0, w8
  410228:	b.ne	4104b8 <feof@plt+0xd3d8>  // b.any
  41022c:	ldr	w8, [x20, #56]
  410230:	cmp	w8, #0x8
  410234:	b.eq	410258 <feof@plt+0xd178>  // b.none
  410238:	ldr	w2, [x19, #132]
  41023c:	cbz	w2, 410258 <feof@plt+0xd178>
  410240:	ldp	w8, w9, [x19, #24]
  410244:	ldr	w10, [x19, #56]
  410248:	add	w8, w9, w8
  41024c:	add	w8, w8, w10
  410250:	cmp	w8, w2
  410254:	b.ge	41064c <feof@plt+0xd56c>  // b.tcont
  410258:	ldr	w8, [x19, #216]
  41025c:	add	w8, w8, #0x1
  410260:	str	w8, [x19, #216]
  410264:	ldr	w8, [x20, #56]
  410268:	cmp	w8, #0xd
  41026c:	b.eq	410278 <feof@plt+0xd198>  // b.none
  410270:	cmp	w8, #0x3
  410274:	b.ne	4102b0 <feof@plt+0xd1d0>  // b.any
  410278:	ldr	w9, [x19, #24]
  41027c:	cmp	w9, #0x0
  410280:	b.gt	410290 <feof@plt+0xd1b0>
  410284:	ldr	w9, [x19, #28]
  410288:	cmp	w9, #0x1
  41028c:	b.lt	410298 <feof@plt+0xd1b8>  // b.tstop
  410290:	ldrb	w9, [x19, #120]
  410294:	cbz	w9, 410618 <feof@plt+0xd538>
  410298:	ldr	x9, [x19, #160]
  41029c:	cbz	x9, 4102b0 <feof@plt+0xd1d0>
  4102a0:	ldp	x1, x2, [x20]
  4102a4:	mov	x0, x19
  4102a8:	blr	x9
  4102ac:	ldr	w8, [x20, #56]
  4102b0:	cmp	w21, #0x6
  4102b4:	b.ne	4102d8 <feof@plt+0xd1f8>  // b.any
  4102b8:	cmp	w8, #0x4
  4102bc:	b.ne	4102d8 <feof@plt+0xd1f8>  // b.any
  4102c0:	ldr	w8, [x19, #56]
  4102c4:	add	w8, w8, #0x1
  4102c8:	str	w8, [x19, #56]
  4102cc:	ldr	w8, [x19, #244]
  4102d0:	cbnz	w8, 410304 <feof@plt+0xd224>
  4102d4:	b	4102f0 <feof@plt+0xd210>
  4102d8:	add	x8, x19, w8, sxtw #2
  4102dc:	ldr	w9, [x8, #8]
  4102e0:	add	w9, w9, #0x1
  4102e4:	str	w9, [x8, #8]
  4102e8:	ldr	w8, [x19, #244]
  4102ec:	cbnz	w8, 410304 <feof@plt+0xd224>
  4102f0:	ldr	x8, [x19, #248]
  4102f4:	cbz	x8, 410304 <feof@plt+0xd224>
  4102f8:	mov	x0, x19
  4102fc:	blr	x8
  410300:	ldr	w8, [x19, #244]
  410304:	add	w8, w8, #0x1
  410308:	mov	x9, x20
  41030c:	str	w8, [x19, #244]
  410310:	str	xzr, [x9, #48]!
  410314:	str	x9, [x20, #24]
  410318:	ldr	x0, [x19]
  41031c:	mov	x1, x20
  410320:	bl	4184a0 <feof@plt+0x153c0>
  410324:	ldr	x8, [x19, #136]
  410328:	mov	x0, x19
  41032c:	mov	x1, x20
  410330:	blr	x8
  410334:	ldr	x0, [x19]
  410338:	bl	419fac <feof@plt+0x16ecc>
  41033c:	ldrb	w8, [x19, #119]
  410340:	cbz	w8, 4103e0 <feof@plt+0xd300>
  410344:	ldr	x8, [x19, #184]
  410348:	ldp	w3, w1, [x20, #56]
  41034c:	mov	x0, x19
  410350:	mov	w2, w21
  410354:	blr	x8
  410358:	cbz	x0, 4103e0 <feof@plt+0xd300>
  41035c:	ldr	x23, [x19]
  410360:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  410364:	mov	x22, x0
  410368:	add	x1, x1, #0x6d9
  41036c:	mov	x0, x23
  410370:	bl	419e20 <feof@plt+0x16d40>
  410374:	ldr	w8, [x20, #56]
  410378:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  41037c:	add	x9, x9, #0x1d0
  410380:	ldrb	w24, [x23, #67]
  410384:	ldr	x25, [x9, x8, lsl #3]
  410388:	mov	x0, x25
  41038c:	bl	402a50 <strlen@plt>
  410390:	mov	x2, x0
  410394:	mov	w0, w24
  410398:	mov	x1, x25
  41039c:	bl	41260c <feof@plt+0xf52c>
  4103a0:	mov	x1, x0
  4103a4:	mov	x0, x23
  4103a8:	bl	419e20 <feof@plt+0x16d40>
  4103ac:	mov	x0, x23
  4103b0:	mov	x1, x22
  4103b4:	bl	419e20 <feof@plt+0x16d40>
  4103b8:	ldrb	w0, [x23, #67]
  4103bc:	bl	412690 <feof@plt+0xf5b0>
  4103c0:	mov	x1, x0
  4103c4:	mov	x0, x23
  4103c8:	bl	419e20 <feof@plt+0x16d40>
  4103cc:	mov	w1, #0x5d                  	// #93
  4103d0:	mov	x0, x23
  4103d4:	bl	41803c <feof@plt+0x14f5c>
  4103d8:	mov	x0, x22
  4103dc:	bl	402b20 <free@plt>
  4103e0:	ldr	x8, [x19, #152]
  4103e4:	mov	x0, x19
  4103e8:	mov	x1, x20
  4103ec:	mov	w2, w21
  4103f0:	blr	x8
  4103f4:	ldrb	w8, [x19, #229]
  4103f8:	cbz	w8, 41057c <feof@plt+0xd49c>
  4103fc:	ldr	x21, [x19]
  410400:	cbz	x21, 4105e8 <feof@plt+0xd508>
  410404:	ldr	x24, [x20, #40]
  410408:	cbz	x24, 410600 <feof@plt+0xd520>
  41040c:	ldr	w8, [x24, #120]
  410410:	cbz	w8, 410574 <feof@plt+0xd494>
  410414:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x2838>
  410418:	adrp	x23, 464000 <_obstack_memory_used@@Base+0x2838>
  41041c:	mov	w25, wzr
  410420:	add	x22, x22, #0x6f3
  410424:	add	x23, x23, #0x6fb
  410428:	b	4104a4 <feof@plt+0xd3c4>
  41042c:	ldr	x8, [x24, #152]
  410430:	sub	w9, w25, #0x2
  410434:	add	x8, x8, w9, sxtw #3
  410438:	ldr	x26, [x8]
  41043c:	add	x8, sp, #0x20
  410440:	ldr	w0, [x26]
  410444:	bl	41dba0 <feof@plt+0x1aac0>
  410448:	mov	x0, x21
  41044c:	mov	x1, x22
  410450:	bl	419e20 <feof@plt+0x16d40>
  410454:	ldr	x1, [sp, #32]
  410458:	mov	x0, x21
  41045c:	bl	4123c0 <feof@plt+0xf2e0>
  410460:	ldr	w0, [x26, #4]
  410464:	mov	x8, sp
  410468:	bl	41dba0 <feof@plt+0x1aac0>
  41046c:	ldp	w2, w3, [sp, #40]
  410470:	ldp	w4, w5, [sp, #8]
  410474:	mov	x0, x21
  410478:	mov	x1, x23
  41047c:	bl	41a658 <feof@plt+0x17578>
  410480:	ldr	x1, [x26, #8]
  410484:	mov	x0, x21
  410488:	bl	4123c0 <feof@plt+0xf2e0>
  41048c:	mov	x0, x21
  410490:	bl	41a7a4 <feof@plt+0x176c4>
  410494:	ldr	w8, [x24, #120]
  410498:	add	w25, w25, #0x1
  41049c:	cmp	w25, w8
  4104a0:	b.cs	410570 <feof@plt+0xd490>  // b.hs, b.nlast
  4104a4:	cmp	w25, #0x1
  4104a8:	b.gt	41042c <feof@plt+0xd34c>
  4104ac:	add	x8, x24, w25, sxtw #3
  4104b0:	add	x8, x8, #0x80
  4104b4:	b	410438 <feof@plt+0xd358>
  4104b8:	ldp	x8, x1, [x19, #168]
  4104bc:	blr	x8
  4104c0:	cbz	w0, 4105b4 <feof@plt+0xd4d4>
  4104c4:	ldr	w8, [x19, #88]
  4104c8:	cmp	w8, #0x1
  4104cc:	b.lt	410550 <feof@plt+0xd470>  // b.tstop
  4104d0:	mov	x0, x20
  4104d4:	mov	w1, wzr
  4104d8:	bl	417f48 <feof@plt+0x14e68>
  4104dc:	ldr	w23, [x19, #88]
  4104e0:	cmp	w23, #0x1
  4104e4:	b.lt	410550 <feof@plt+0xd470>  // b.tstop
  4104e8:	mov	w22, w0
  4104ec:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  4104f0:	mov	w25, #0xc                   	// #12
  4104f4:	b	410504 <feof@plt+0xd424>
  4104f8:	mov	w23, w9
  4104fc:	cmp	w23, #0x0
  410500:	b.le	410550 <feof@plt+0xd470>
  410504:	ldr	x9, [x19, #80]
  410508:	sxtw	x8, w23
  41050c:	sub	x23, x8, #0x1
  410510:	mul	x8, x23, x25
  410514:	ldr	x0, [x24, #2408]
  410518:	ldr	w1, [x9, x8]
  41051c:	mov	w2, w22
  410520:	bl	435a68 <feof@plt+0x32988>
  410524:	tbnz	w0, #31, 4104fc <feof@plt+0xd41c>
  410528:	ldr	x8, [x19, #80]
  41052c:	madd	x9, x23, x25, x8
  410530:	ldp	w9, w8, [x9, #4]
  410534:	cmp	w8, #0xf
  410538:	b.eq	4104f8 <feof@plt+0xd418>  // b.none
  41053c:	cbz	w9, 41054c <feof@plt+0xd46c>
  410540:	ldr	w10, [x20, #60]
  410544:	cmp	w9, w10
  410548:	b.ne	4104fc <feof@plt+0xd41c>  // b.any
  41054c:	cbnz	w8, 410560 <feof@plt+0xd480>
  410550:	ldr	x8, [x19, #72]
  410554:	ldrsw	x9, [x20, #60]
  410558:	ldr	w8, [x8, x9, lsl #2]
  41055c:	cbz	w8, 4105d0 <feof@plt+0xd4f0>
  410560:	str	w8, [x20, #56]
  410564:	cmp	w8, #0x1
  410568:	b.eq	4101c4 <feof@plt+0xd0e4>  // b.none
  41056c:	b	410230 <feof@plt+0xd150>
  410570:	ldr	x21, [x19]
  410574:	mov	x0, x21
  410578:	bl	41a0d4 <feof@plt+0x16ff4>
  41057c:	ldr	w1, [x20, #56]
  410580:	mov	x0, x19
  410584:	bl	40f92c <feof@plt+0xc84c>
  410588:	str	xzr, [x20, #48]
  41058c:	ldr	x0, [x19, #232]
  410590:	cbz	x0, 4105a4 <feof@plt+0xd4c4>
  410594:	ldr	x1, [x20, #40]
  410598:	ldrb	w8, [x1, #161]
  41059c:	cbnz	w8, 4105a4 <feof@plt+0xd4c4>
  4105a0:	bl	415dd8 <feof@plt+0x12cf8>
  4105a4:	ldr	w8, [x19, #216]
  4105a8:	mov	w0, #0x1                   	// #1
  4105ac:	sub	w8, w8, #0x1
  4105b0:	str	w8, [x19, #216]
  4105b4:	ldp	x20, x19, [sp, #128]
  4105b8:	ldp	x22, x21, [sp, #112]
  4105bc:	ldp	x24, x23, [sp, #96]
  4105c0:	ldp	x26, x25, [sp, #80]
  4105c4:	ldp	x29, x30, [sp, #64]
  4105c8:	add	sp, sp, #0x90
  4105cc:	ret
  4105d0:	ldr	w8, [x20, #56]
  4105d4:	cmp	w8, #0x1
  4105d8:	b.eq	4101c4 <feof@plt+0xd0e4>  // b.none
  4105dc:	b	410230 <feof@plt+0xd150>
  4105e0:	mov	x0, x19
  4105e4:	bl	410668 <feof@plt+0xd588>
  4105e8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4105ec:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4105f0:	add	x0, x0, #0x580
  4105f4:	add	x2, x2, #0x6dc
  4105f8:	mov	w1, #0x322                 	// #802
  4105fc:	bl	40f560 <feof@plt+0xc480>
  410600:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  410604:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  410608:	add	x0, x0, #0x580
  41060c:	add	x2, x2, #0x6dc
  410610:	mov	w1, #0x323                 	// #803
  410614:	bl	40f560 <feof@plt+0xc480>
  410618:	mov	x0, x20
  41061c:	bl	40ff00 <feof@plt+0xce20>
  410620:	add	x8, sp, #0x20
  410624:	bl	41dba0 <feof@plt+0x1aac0>
  410628:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41062c:	ldr	x2, [sp, #32]
  410630:	ldr	x0, [x8, #1464]
  410634:	ldr	w3, [sp, #40]
  410638:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41063c:	add	x1, x1, #0x545
  410640:	bl	40f8a4 <feof@plt+0xc7c4>
  410644:	mov	w0, #0x4                   	// #4
  410648:	bl	402f70 <exit@plt>
  41064c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  410650:	ldr	x0, [x8, #1464]
  410654:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  410658:	add	x1, x1, #0x3d0
  41065c:	bl	40f8a4 <feof@plt+0xc7c4>
  410660:	mov	w0, #0x1                   	// #1
  410664:	bl	402f70 <exit@plt>
  410668:	stp	x29, x30, [sp, #-32]!
  41066c:	str	x19, [sp, #16]
  410670:	mov	x29, sp
  410674:	ldr	w8, [x0, #216]
  410678:	mov	x19, x0
  41067c:	cmp	w8, #0x2
  410680:	b.gt	41068c <feof@plt+0xd5ac>
  410684:	ldr	x0, [x19]
  410688:	bl	41ab20 <feof@plt+0x17a40>
  41068c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  410690:	ldr	x0, [x8, #1464]
  410694:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  410698:	add	x1, x1, #0x72b
  41069c:	bl	40f8a4 <feof@plt+0xc7c4>
  4106a0:	mov	w1, #0x3                   	// #3
  4106a4:	mov	x0, x19
  4106a8:	bl	40f92c <feof@plt+0xc84c>
  4106ac:	bl	40fa98 <feof@plt+0xc9b8>
  4106b0:	tbnz	w0, #31, 4106e8 <feof@plt+0xd608>
  4106b4:	mov	w8, w0
  4106b8:	cbz	w0, 4106e0 <feof@plt+0xd600>
  4106bc:	mov	w9, #0xcccd                	// #52429
  4106c0:	mov	w0, wzr
  4106c4:	movk	w9, #0xcccc, lsl #16
  4106c8:	umull	x10, w8, w9
  4106cc:	cmp	w8, #0x9
  4106d0:	lsr	x8, x10, #35
  4106d4:	add	w0, w0, #0x1
  4106d8:	b.hi	4106c8 <feof@plt+0xd5e8>  // b.pmore
  4106dc:	ret
  4106e0:	mov	w0, #0x1                   	// #1
  4106e4:	ret
  4106e8:	stp	x29, x30, [sp, #-16]!
  4106ec:	mov	x29, sp
  4106f0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4106f4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4106f8:	add	x0, x0, #0x580
  4106fc:	add	x2, x2, #0x575
  410700:	mov	w1, #0x415                 	// #1045
  410704:	bl	40f560 <feof@plt+0xc480>
  410708:	ldrb	w8, [x0]
  41070c:	mov	x9, x0
  410710:	cmp	w8, #0x2e
  410714:	b.ne	410740 <feof@plt+0xd660>  // b.any
  410718:	mov	x9, x0
  41071c:	ldrb	w8, [x9, #1]
  410720:	cmp	w8, #0x2e
  410724:	b.ne	410768 <feof@plt+0xd688>  // b.any
  410728:	ldrb	w8, [x9, #2]
  41072c:	cmp	w8, #0x2f
  410730:	b.ne	410768 <feof@plt+0xd688>  // b.any
  410734:	ldrb	w8, [x9, #3]!
  410738:	cmp	w8, #0x2e
  41073c:	b.eq	41071c <feof@plt+0xd63c>  // b.none
  410740:	cmp	w8, #0x67
  410744:	b.ne	410768 <feof@plt+0xd688>  // b.any
  410748:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41074c:	add	x8, x8, #0x587
  410750:	ldrb	w10, [x9, #1]!
  410754:	ldrb	w11, [x8], #1
  410758:	cbz	w11, 410768 <feof@plt+0xd688>
  41075c:	cbz	w10, 410768 <feof@plt+0xd688>
  410760:	cmp	w10, w11
  410764:	b.eq	410750 <feof@plt+0xd670>  // b.none
  410768:	mov	x8, x9
  41076c:	cmp	x9, x0
  410770:	b.ls	410784 <feof@plt+0xd6a4>  // b.plast
  410774:	mov	x9, x8
  410778:	ldrb	w10, [x9, #-1]!
  41077c:	cmp	w10, #0x2f
  410780:	b.ne	410768 <feof@plt+0xd688>  // b.any
  410784:	mov	x0, x8
  410788:	ret
  41078c:	sub	sp, sp, #0x120
  410790:	stp	x29, x30, [sp, #256]
  410794:	stp	x28, x19, [sp, #272]
  410798:	add	x29, sp, #0x100
  41079c:	mov	x8, #0xffffffffffffffc8    	// #-56
  4107a0:	mov	x9, sp
  4107a4:	add	x10, sp, #0x80
  4107a8:	movk	x8, #0xff80, lsl #32
  4107ac:	add	x11, x29, #0x20
  4107b0:	add	x9, x9, #0x80
  4107b4:	add	x10, x10, #0x38
  4107b8:	mov	x19, x0
  4107bc:	stp	x1, x2, [sp, #128]
  4107c0:	stp	x3, x4, [sp, #144]
  4107c4:	stp	x5, x6, [sp, #160]
  4107c8:	str	x7, [sp, #176]
  4107cc:	stp	q0, q1, [sp]
  4107d0:	stp	q2, q3, [sp, #32]
  4107d4:	stp	q4, q5, [sp, #64]
  4107d8:	stp	q6, q7, [sp, #96]
  4107dc:	stp	x9, x8, [x29, #-56]
  4107e0:	stp	x11, x10, [x29, #-72]
  4107e4:	bl	402e70 <__errno_location@plt>
  4107e8:	ldr	w8, [x0]
  4107ec:	sub	x9, x29, #0x48
  4107f0:	mov	x0, x19
  4107f4:	stur	x9, [x29, #-32]
  4107f8:	stur	w8, [x29, #-24]
  4107fc:	bl	402cd0 <gettext@plt>
  410800:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  410804:	ldr	x8, [x19, #984]
  410808:	stur	x0, [x29, #-40]
  41080c:	stur	xzr, [x29, #-16]
  410810:	sub	x1, x29, #0x28
  410814:	ldr	x0, [x8]
  410818:	bl	41a098 <feof@plt+0x16fb8>
  41081c:	ldr	x8, [x19, #984]
  410820:	ldr	x0, [x8]
  410824:	bl	41ab20 <feof@plt+0x17a40>
  410828:	ldp	x28, x19, [sp, #272]
  41082c:	ldp	x29, x30, [sp, #256]
  410830:	add	sp, sp, #0x120
  410834:	ret
  410838:	sub	sp, sp, #0x1e0
  41083c:	stp	x29, x30, [sp, #432]
  410840:	stp	x28, x21, [sp, #448]
  410844:	stp	x20, x19, [sp, #464]
  410848:	add	x29, sp, #0x1b0
  41084c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  410850:	mov	x20, x2
  410854:	mov	w2, w1
  410858:	ldr	x1, [x8, #2408]
  41085c:	mov	x19, x0
  410860:	stp	x3, x4, [sp, #128]
  410864:	add	x0, sp, #0xa8
  410868:	mov	x3, xzr
  41086c:	stp	x5, x6, [sp, #144]
  410870:	str	x7, [sp, #160]
  410874:	stp	q1, q2, [sp, #16]
  410878:	stp	q3, q4, [sp, #48]
  41087c:	str	q0, [sp]
  410880:	stp	q5, q6, [sp, #80]
  410884:	str	q7, [sp, #112]
  410888:	add	x21, sp, #0xa8
  41088c:	bl	436a50 <feof@plt+0x33970>
  410890:	mov	x8, #0xffffffffffffffd8    	// #-40
  410894:	mov	x9, sp
  410898:	add	x10, sp, #0x80
  41089c:	movk	x8, #0xff80, lsl #32
  4108a0:	add	x11, x29, #0x30
  4108a4:	add	x9, x9, #0x80
  4108a8:	add	x10, x10, #0x28
  4108ac:	mov	x0, x20
  4108b0:	stp	x9, x8, [x29, #-80]
  4108b4:	stp	x11, x10, [x29, #-96]
  4108b8:	bl	402cd0 <gettext@plt>
  4108bc:	mov	x20, x0
  4108c0:	bl	402e70 <__errno_location@plt>
  4108c4:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  4108c8:	ldr	w8, [x0]
  4108cc:	ldr	d0, [x10, #704]
  4108d0:	sub	x9, x29, #0x60
  4108d4:	stp	x20, x9, [x29, #-64]
  4108d8:	stur	w8, [x29, #-48]
  4108dc:	stp	x21, x21, [x29, #-32]
  4108e0:	stur	d0, [x29, #-8]
  4108e4:	ldrb	w8, [x19, #220]
  4108e8:	cbnz	w8, 41094c <feof@plt+0xd86c>
  4108ec:	ldr	x0, [x19]
  4108f0:	bl	41a314 <feof@plt+0x17234>
  4108f4:	ldr	x20, [x19]
  4108f8:	mov	x21, x0
  4108fc:	sub	x1, x29, #0x40
  410900:	mov	x0, x19
  410904:	bl	40f618 <feof@plt+0xc538>
  410908:	mov	x1, x0
  41090c:	mov	x0, x20
  410910:	bl	41a29c <feof@plt+0x171bc>
  410914:	ldr	x0, [x19]
  410918:	sub	x1, x29, #0x40
  41091c:	bl	4184a0 <feof@plt+0x153c0>
  410920:	ldr	x0, [x19]
  410924:	bl	419fac <feof@plt+0x16ecc>
  410928:	ldr	x0, [x19]
  41092c:	bl	41a324 <feof@plt+0x17244>
  410930:	ldr	x0, [x19]
  410934:	mov	x1, x21
  410938:	bl	41a29c <feof@plt+0x171bc>
  41093c:	add	x1, sp, #0xa8
  410940:	mov	w2, #0x8                   	// #8
  410944:	mov	x0, x19
  410948:	bl	413f54 <feof@plt+0x10e74>
  41094c:	add	x0, sp, #0xa8
  410950:	bl	436b30 <feof@plt+0x33a50>
  410954:	ldp	x20, x19, [sp, #464]
  410958:	ldp	x28, x21, [sp, #448]
  41095c:	ldp	x29, x30, [sp, #432]
  410960:	add	sp, sp, #0x1e0
  410964:	ret
  410968:	sub	sp, sp, #0x1b0
  41096c:	stp	x29, x30, [sp, #368]
  410970:	str	x28, [sp, #384]
  410974:	stp	x22, x21, [sp, #400]
  410978:	stp	x20, x19, [sp, #416]
  41097c:	add	x29, sp, #0x170
  410980:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  410984:	ldr	x8, [x22, #984]
  410988:	stp	q4, q5, [sp, #64]
  41098c:	stp	q2, q3, [sp, #32]
  410990:	stp	q0, q1, [sp]
  410994:	stp	x6, x7, [sp, #152]
  410998:	stp	x4, x5, [sp, #136]
  41099c:	stp	q6, q7, [sp, #96]
  4109a0:	ldr	w9, [x8, #240]
  4109a4:	mov	x10, #0xffffffffffffffe0    	// #-32
  4109a8:	movk	x10, #0xff80, lsl #32
  4109ac:	mov	w20, w2
  4109b0:	add	w9, w9, #0x1
  4109b4:	str	w9, [x8, #240]
  4109b8:	mov	x8, sp
  4109bc:	add	x8, x8, #0x80
  4109c0:	stp	x8, x10, [x29, #-16]
  4109c4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4109c8:	mov	w2, w1
  4109cc:	ldr	x1, [x8, #2408]
  4109d0:	add	x9, sp, #0x88
  4109d4:	mov	x19, x3
  4109d8:	mov	w21, w0
  4109dc:	add	x9, x9, #0x20
  4109e0:	add	x8, x29, #0x40
  4109e4:	add	x0, sp, #0xa8
  4109e8:	mov	x3, xzr
  4109ec:	stp	x8, x9, [x29, #-32]
  4109f0:	bl	436a50 <feof@plt+0x33970>
  4109f4:	add	x0, sp, #0xa8
  4109f8:	sub	x3, x29, #0x20
  4109fc:	mov	w1, w20
  410a00:	mov	x2, x19
  410a04:	mov	w4, w21
  410a08:	bl	410a68 <feof@plt+0xd988>
  410a0c:	mov	w19, w0
  410a10:	add	x0, sp, #0xa8
  410a14:	bl	436b30 <feof@plt+0x33a50>
  410a18:	ldr	x0, [x22, #984]
  410a1c:	ldr	w8, [x0, #240]
  410a20:	subs	w8, w8, #0x1
  410a24:	str	w8, [x0, #240]
  410a28:	b.ne	410a4c <feof@plt+0xd96c>  // b.any
  410a2c:	ldr	w8, [x0, #244]
  410a30:	cmp	w8, #0x1
  410a34:	b.lt	410a48 <feof@plt+0xd968>  // b.tstop
  410a38:	ldr	x8, [x0, #256]
  410a3c:	cbz	x8, 410a48 <feof@plt+0xd968>
  410a40:	blr	x8
  410a44:	ldr	x0, [x22, #984]
  410a48:	str	wzr, [x0, #244]
  410a4c:	and	w0, w19, #0x1
  410a50:	ldp	x20, x19, [sp, #416]
  410a54:	ldp	x22, x21, [sp, #400]
  410a58:	ldr	x28, [sp, #384]
  410a5c:	ldp	x29, x30, [sp, #368]
  410a60:	add	sp, sp, #0x1b0
  410a64:	ret
  410a68:	sub	sp, sp, #0x80
  410a6c:	stp	x29, x30, [sp, #64]
  410a70:	stp	x24, x23, [sp, #80]
  410a74:	stp	x22, x21, [sp, #96]
  410a78:	stp	x20, x19, [sp, #112]
  410a7c:	add	x29, sp, #0x40
  410a80:	mov	x20, x3
  410a84:	mov	x19, x0
  410a88:	cmp	w4, #0xb
  410a8c:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  410a90:	b.ne	410ae0 <feof@plt+0xda00>  // b.any
  410a94:	cbz	x19, 410b4c <feof@plt+0xda6c>
  410a98:	ldr	x8, [x24, #984]
  410a9c:	mov	w9, #0x6                   	// #6
  410aa0:	mov	x0, x2
  410aa4:	ldrb	w8, [x8, #123]
  410aa8:	cmp	w8, #0x0
  410aac:	mov	w8, #0x4                   	// #4
  410ab0:	csel	w22, w8, w9, eq  // eq = none
  410ab4:	bl	402cd0 <gettext@plt>
  410ab8:	mov	x21, x0
  410abc:	bl	402e70 <__errno_location@plt>
  410ac0:	ldr	w8, [x0]
  410ac4:	ldr	x9, [x24, #984]
  410ac8:	stp	x21, x20, [sp]
  410acc:	stp	x19, x19, [sp, #32]
  410ad0:	str	w8, [sp, #16]
  410ad4:	ldr	w8, [x9, #124]
  410ad8:	stp	w22, w8, [sp, #56]
  410adc:	b	410b24 <feof@plt+0xda44>
  410ae0:	cbz	x19, 410b4c <feof@plt+0xda6c>
  410ae4:	mov	x0, x2
  410ae8:	mov	w22, w4
  410aec:	mov	w21, w1
  410af0:	bl	402cd0 <gettext@plt>
  410af4:	mov	x23, x0
  410af8:	bl	402e70 <__errno_location@plt>
  410afc:	ldr	w8, [x0]
  410b00:	cmp	w22, #0xa
  410b04:	stp	x23, x20, [sp]
  410b08:	stp	x19, x19, [sp, #32]
  410b0c:	str	w8, [sp, #16]
  410b10:	stp	w22, wzr, [sp, #56]
  410b14:	b.eq	410b20 <feof@plt+0xda40>  // b.none
  410b18:	cmp	w22, #0x6
  410b1c:	b.ne	410b24 <feof@plt+0xda44>  // b.any
  410b20:	str	w21, [sp, #60]
  410b24:	ldr	x0, [x24, #984]
  410b28:	mov	x1, sp
  410b2c:	bl	41011c <feof@plt+0xd03c>
  410b30:	ldp	x20, x19, [sp, #112]
  410b34:	ldp	x22, x21, [sp, #96]
  410b38:	ldp	x24, x23, [sp, #80]
  410b3c:	ldp	x29, x30, [sp, #64]
  410b40:	and	w0, w0, #0x1
  410b44:	add	sp, sp, #0x80
  410b48:	ret
  410b4c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  410b50:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  410b54:	add	x0, x0, #0x580
  410b58:	add	x2, x2, #0x30e
  410b5c:	mov	w1, #0x123                 	// #291
  410b60:	bl	40f560 <feof@plt+0xc480>
  410b64:	sub	sp, sp, #0xe0
  410b68:	stp	x29, x30, [sp, #192]
  410b6c:	stp	x20, x19, [sp, #208]
  410b70:	add	x29, sp, #0xc0
  410b74:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  410b78:	ldr	x10, [x20, #984]
  410b7c:	stp	q4, q5, [sp, #64]
  410b80:	stp	q2, q3, [sp, #32]
  410b84:	stp	q0, q1, [sp]
  410b88:	stp	x6, x7, [x29, #-48]
  410b8c:	stp	x4, x5, [x29, #-64]
  410b90:	stp	q6, q7, [sp, #96]
  410b94:	ldr	w11, [x10, #240]
  410b98:	mov	x8, x3
  410b9c:	mov	w9, w0
  410ba0:	mov	x12, #0xffffffffffffffe0    	// #-32
  410ba4:	add	w11, w11, #0x1
  410ba8:	mov	x13, sp
  410bac:	str	w11, [x10, #240]
  410bb0:	sub	x10, x29, #0x40
  410bb4:	movk	x12, #0xff80, lsl #32
  410bb8:	add	x11, x29, #0x20
  410bbc:	add	x13, x13, #0x80
  410bc0:	add	x10, x10, #0x20
  410bc4:	sub	x3, x29, #0x20
  410bc8:	mov	x0, x1
  410bcc:	mov	w1, w2
  410bd0:	mov	x2, x8
  410bd4:	mov	w4, w9
  410bd8:	stp	x13, x12, [x29, #-16]
  410bdc:	stp	x11, x10, [x29, #-32]
  410be0:	bl	410a68 <feof@plt+0xd988>
  410be4:	mov	w19, w0
  410be8:	ldr	x0, [x20, #984]
  410bec:	ldr	w8, [x0, #240]
  410bf0:	subs	w8, w8, #0x1
  410bf4:	str	w8, [x0, #240]
  410bf8:	b.ne	410c1c <feof@plt+0xdb3c>  // b.any
  410bfc:	ldr	w8, [x0, #244]
  410c00:	cmp	w8, #0x1
  410c04:	b.lt	410c18 <feof@plt+0xdb38>  // b.tstop
  410c08:	ldr	x8, [x0, #256]
  410c0c:	cbz	x8, 410c18 <feof@plt+0xdb38>
  410c10:	blr	x8
  410c14:	ldr	x0, [x20, #984]
  410c18:	str	wzr, [x0, #244]
  410c1c:	and	w0, w19, #0x1
  410c20:	ldp	x20, x19, [sp, #208]
  410c24:	ldp	x29, x30, [sp, #192]
  410c28:	add	sp, sp, #0xe0
  410c2c:	ret
  410c30:	sub	sp, sp, #0xe0
  410c34:	stp	x29, x30, [sp, #176]
  410c38:	stp	x22, x21, [sp, #192]
  410c3c:	stp	x20, x19, [sp, #208]
  410c40:	add	x29, sp, #0xb0
  410c44:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  410c48:	mov	w21, w2
  410c4c:	mov	w2, w1
  410c50:	ldr	x1, [x8, #2408]
  410c54:	mov	x20, x3
  410c58:	mov	w22, w0
  410c5c:	add	x0, sp, #0x8
  410c60:	mov	x3, xzr
  410c64:	mov	x19, x4
  410c68:	bl	436a50 <feof@plt+0x33970>
  410c6c:	add	x0, sp, #0x8
  410c70:	mov	w1, w21
  410c74:	mov	x2, x20
  410c78:	mov	x3, x19
  410c7c:	mov	w4, w22
  410c80:	bl	410a68 <feof@plt+0xd988>
  410c84:	mov	w19, w0
  410c88:	add	x0, sp, #0x8
  410c8c:	bl	436b30 <feof@plt+0x33a50>
  410c90:	and	w0, w19, #0x1
  410c94:	ldp	x20, x19, [sp, #208]
  410c98:	ldp	x22, x21, [sp, #192]
  410c9c:	ldp	x29, x30, [sp, #176]
  410ca0:	add	sp, sp, #0xe0
  410ca4:	ret
  410ca8:	sub	sp, sp, #0x1f0
  410cac:	stp	x29, x30, [sp, #448]
  410cb0:	stp	x28, x21, [sp, #464]
  410cb4:	stp	x20, x19, [sp, #480]
  410cb8:	add	x29, sp, #0x1c0
  410cbc:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  410cc0:	ldr	x9, [x20, #984]
  410cc4:	stp	q4, q5, [sp, #64]
  410cc8:	stp	q2, q3, [sp, #32]
  410ccc:	stp	q0, q1, [sp]
  410cd0:	stp	x6, x7, [sp, #168]
  410cd4:	stp	x4, x5, [sp, #152]
  410cd8:	stp	x2, x3, [sp, #136]
  410cdc:	stp	q6, q7, [sp, #96]
  410ce0:	ldr	w12, [x9, #240]
  410ce4:	mov	x19, x1
  410ce8:	mov	w8, w0
  410cec:	mov	x10, #0xffffffffffffffd0    	// #-48
  410cf0:	add	w12, w12, #0x1
  410cf4:	str	w12, [x9, #240]
  410cf8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  410cfc:	ldr	x1, [x9, #2408]
  410d00:	mov	x11, sp
  410d04:	add	x13, sp, #0x88
  410d08:	movk	x10, #0xff80, lsl #32
  410d0c:	add	x11, x11, #0x80
  410d10:	add	x13, x13, #0x30
  410d14:	add	x9, x29, #0x30
  410d18:	add	x0, sp, #0xb8
  410d1c:	mov	w2, w8
  410d20:	mov	x3, xzr
  410d24:	stp	x11, x10, [x29, #-80]
  410d28:	stp	x9, x13, [x29, #-96]
  410d2c:	add	x21, sp, #0xb8
  410d30:	bl	436a50 <feof@plt+0x33970>
  410d34:	mov	x0, x19
  410d38:	bl	402cd0 <gettext@plt>
  410d3c:	mov	x19, x0
  410d40:	bl	402e70 <__errno_location@plt>
  410d44:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  410d48:	ldr	w8, [x0]
  410d4c:	ldr	x0, [x20, #984]
  410d50:	ldr	d0, [x10, #704]
  410d54:	sub	x9, x29, #0x60
  410d58:	sub	x1, x29, #0x40
  410d5c:	stp	x19, x9, [x29, #-64]
  410d60:	stur	w8, [x29, #-48]
  410d64:	stp	x21, x21, [x29, #-32]
  410d68:	stur	d0, [x29, #-8]
  410d6c:	bl	41011c <feof@plt+0xd03c>
  410d70:	add	x0, sp, #0xb8
  410d74:	bl	436b30 <feof@plt+0x33a50>
  410d78:	ldr	x0, [x20, #984]
  410d7c:	ldr	w8, [x0, #240]
  410d80:	subs	w8, w8, #0x1
  410d84:	str	w8, [x0, #240]
  410d88:	b.ne	410dac <feof@plt+0xdccc>  // b.any
  410d8c:	ldr	w8, [x0, #244]
  410d90:	cmp	w8, #0x1
  410d94:	b.lt	410da8 <feof@plt+0xdcc8>  // b.tstop
  410d98:	ldr	x8, [x0, #256]
  410d9c:	cbz	x8, 410da8 <feof@plt+0xdcc8>
  410da0:	blr	x8
  410da4:	ldr	x0, [x20, #984]
  410da8:	str	wzr, [x0, #244]
  410dac:	ldp	x20, x19, [sp, #480]
  410db0:	ldp	x28, x21, [sp, #464]
  410db4:	ldp	x29, x30, [sp, #448]
  410db8:	add	sp, sp, #0x1f0
  410dbc:	ret
  410dc0:	sub	sp, sp, #0x140
  410dc4:	stp	x29, x30, [sp, #272]
  410dc8:	stp	x28, x21, [sp, #288]
  410dcc:	stp	x20, x19, [sp, #304]
  410dd0:	add	x29, sp, #0x110
  410dd4:	stp	x2, x3, [sp, #128]
  410dd8:	stp	x4, x5, [sp, #144]
  410ddc:	stp	x6, x7, [sp, #160]
  410de0:	stp	q1, q2, [sp, #16]
  410de4:	stp	q3, q4, [sp, #48]
  410de8:	str	q0, [sp]
  410dec:	stp	q5, q6, [sp, #80]
  410df0:	str	q7, [sp, #112]
  410df4:	cbz	x0, 410eb8 <feof@plt+0xddd8>
  410df8:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  410dfc:	ldr	x8, [x21, #984]
  410e00:	mov	x9, #0xffffffffffffffd0    	// #-48
  410e04:	mov	x10, sp
  410e08:	add	x11, sp, #0x80
  410e0c:	ldr	w12, [x8, #240]
  410e10:	mov	x19, x0
  410e14:	movk	x9, #0xff80, lsl #32
  410e18:	add	x13, x29, #0x30
  410e1c:	add	x10, x10, #0x80
  410e20:	add	x11, x11, #0x30
  410e24:	add	w12, w12, #0x1
  410e28:	mov	x0, x1
  410e2c:	str	w12, [x8, #240]
  410e30:	stp	x10, x9, [x29, #-80]
  410e34:	stp	x13, x11, [x29, #-96]
  410e38:	bl	402cd0 <gettext@plt>
  410e3c:	mov	x20, x0
  410e40:	bl	402e70 <__errno_location@plt>
  410e44:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  410e48:	ldr	w8, [x0]
  410e4c:	ldr	x0, [x21, #984]
  410e50:	ldr	d0, [x10, #704]
  410e54:	sub	x9, x29, #0x60
  410e58:	sub	x1, x29, #0x40
  410e5c:	stp	x20, x9, [x29, #-64]
  410e60:	stur	w8, [x29, #-48]
  410e64:	stp	x19, x19, [x29, #-32]
  410e68:	stur	d0, [x29, #-8]
  410e6c:	bl	41011c <feof@plt+0xd03c>
  410e70:	ldr	x0, [x21, #984]
  410e74:	ldr	w8, [x0, #240]
  410e78:	subs	w8, w8, #0x1
  410e7c:	str	w8, [x0, #240]
  410e80:	b.ne	410ea4 <feof@plt+0xddc4>  // b.any
  410e84:	ldr	w8, [x0, #244]
  410e88:	cmp	w8, #0x1
  410e8c:	b.lt	410ea0 <feof@plt+0xddc0>  // b.tstop
  410e90:	ldr	x8, [x0, #256]
  410e94:	cbz	x8, 410ea0 <feof@plt+0xddc0>
  410e98:	blr	x8
  410e9c:	ldr	x0, [x21, #984]
  410ea0:	str	wzr, [x0, #244]
  410ea4:	ldp	x20, x19, [sp, #304]
  410ea8:	ldp	x28, x21, [sp, #288]
  410eac:	ldp	x29, x30, [sp, #272]
  410eb0:	add	sp, sp, #0x140
  410eb4:	ret
  410eb8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  410ebc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  410ec0:	add	x0, x0, #0x580
  410ec4:	add	x2, x2, #0x597
  410ec8:	mov	w1, #0x4dc                 	// #1244
  410ecc:	bl	40f560 <feof@plt+0xc480>
  410ed0:	sub	sp, sp, #0x1f0
  410ed4:	stp	x29, x30, [sp, #432]
  410ed8:	stp	x28, x23, [sp, #448]
  410edc:	stp	x22, x21, [sp, #464]
  410ee0:	stp	x20, x19, [sp, #480]
  410ee4:	add	x29, sp, #0x1b0
  410ee8:	mov	x8, #0xffffffffffffffe0    	// #-32
  410eec:	mov	x9, sp
  410ef0:	movk	x8, #0xff80, lsl #32
  410ef4:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  410ef8:	add	x9, x9, #0x80
  410efc:	stp	x9, x8, [x29, #-80]
  410f00:	ldr	x8, [x22, #984]
  410f04:	add	x10, sp, #0x88
  410f08:	add	x11, x29, #0x40
  410f0c:	add	x9, x10, #0x20
  410f10:	stp	x4, x5, [sp, #136]
  410f14:	stp	x6, x7, [sp, #152]
  410f18:	stp	q0, q1, [sp]
  410f1c:	stp	q2, q3, [sp, #32]
  410f20:	stp	q4, q5, [sp, #64]
  410f24:	stp	q6, q7, [sp, #96]
  410f28:	stp	x11, x9, [x29, #-96]
  410f2c:	ldr	w9, [x8, #240]
  410f30:	mov	x21, x1
  410f34:	mov	x19, x3
  410f38:	mov	x20, x2
  410f3c:	add	w9, w9, #0x1
  410f40:	str	w9, [x8, #240]
  410f44:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  410f48:	ldr	x1, [x8, #2408]
  410f4c:	mov	w2, w0
  410f50:	add	x0, sp, #0xa8
  410f54:	mov	x3, xzr
  410f58:	add	x23, sp, #0xa8
  410f5c:	bl	436a50 <feof@plt+0x33970>
  410f60:	mov	x0, x20
  410f64:	mov	x1, x19
  410f68:	mov	x2, x21
  410f6c:	bl	402ab0 <ngettext@plt>
  410f70:	mov	x19, x0
  410f74:	bl	402e70 <__errno_location@plt>
  410f78:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  410f7c:	ldr	w8, [x0]
  410f80:	ldr	x0, [x22, #984]
  410f84:	ldr	d0, [x10, #704]
  410f88:	sub	x9, x29, #0x60
  410f8c:	sub	x1, x29, #0x40
  410f90:	stp	x19, x9, [x29, #-64]
  410f94:	stur	w8, [x29, #-48]
  410f98:	stp	x23, x23, [x29, #-32]
  410f9c:	stur	d0, [x29, #-8]
  410fa0:	bl	41011c <feof@plt+0xd03c>
  410fa4:	add	x0, sp, #0xa8
  410fa8:	bl	436b30 <feof@plt+0x33a50>
  410fac:	ldr	x0, [x22, #984]
  410fb0:	ldr	w8, [x0, #240]
  410fb4:	subs	w8, w8, #0x1
  410fb8:	str	w8, [x0, #240]
  410fbc:	b.ne	410fe0 <feof@plt+0xdf00>  // b.any
  410fc0:	ldr	w8, [x0, #244]
  410fc4:	cmp	w8, #0x1
  410fc8:	b.lt	410fdc <feof@plt+0xdefc>  // b.tstop
  410fcc:	ldr	x8, [x0, #256]
  410fd0:	cbz	x8, 410fdc <feof@plt+0xdefc>
  410fd4:	blr	x8
  410fd8:	ldr	x0, [x22, #984]
  410fdc:	str	wzr, [x0, #244]
  410fe0:	ldp	x20, x19, [sp, #480]
  410fe4:	ldp	x22, x21, [sp, #464]
  410fe8:	ldp	x28, x23, [sp, #448]
  410fec:	ldp	x29, x30, [sp, #432]
  410ff0:	add	sp, sp, #0x1f0
  410ff4:	ret
  410ff8:	stp	x29, x30, [sp, #-64]!
  410ffc:	str	x28, [sp, #16]
  411000:	stp	x22, x21, [sp, #32]
  411004:	stp	x20, x19, [sp, #48]
  411008:	mov	x29, sp
  41100c:	sub	sp, sp, #0x1c0
  411010:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  411014:	ldr	x8, [x21, #984]
  411018:	stp	q4, q5, [sp, #64]
  41101c:	stp	q2, q3, [sp, #32]
  411020:	stp	q0, q1, [sp]
  411024:	stp	x6, x7, [sp, #168]
  411028:	stp	x4, x5, [sp, #152]
  41102c:	stp	x2, x3, [sp, #136]
  411030:	stp	q6, q7, [sp, #96]
  411034:	ldr	w9, [x8, #240]
  411038:	mov	x19, x1
  41103c:	mov	x10, #0xffffffffffffffd0    	// #-48
  411040:	mov	x11, sp
  411044:	add	w9, w9, #0x1
  411048:	str	w9, [x8, #240]
  41104c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  411050:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  411054:	ldr	x1, [x8, #2408]
  411058:	ldr	w2, [x9, #2400]
  41105c:	add	x12, sp, #0x88
  411060:	mov	w20, w0
  411064:	movk	x10, #0xff80, lsl #32
  411068:	add	x11, x11, #0x80
  41106c:	add	x12, x12, #0x30
  411070:	add	x8, x29, #0x40
  411074:	add	x0, sp, #0xb8
  411078:	mov	x3, xzr
  41107c:	stp	x11, x10, [x29, #-80]
  411080:	stp	x8, x12, [x29, #-96]
  411084:	add	x22, sp, #0xb8
  411088:	bl	436a50 <feof@plt+0x33970>
  41108c:	mov	x0, x19
  411090:	bl	402cd0 <gettext@plt>
  411094:	mov	x19, x0
  411098:	bl	402e70 <__errno_location@plt>
  41109c:	ldr	w8, [x0]
  4110a0:	ldr	x0, [x21, #984]
  4110a4:	sub	x9, x29, #0x60
  4110a8:	mov	w10, #0x6                   	// #6
  4110ac:	sub	x1, x29, #0x40
  4110b0:	stp	x22, x22, [x29, #-32]
  4110b4:	stp	x19, x9, [x29, #-64]
  4110b8:	stur	w8, [x29, #-48]
  4110bc:	stp	w10, w20, [x29, #-8]
  4110c0:	bl	41011c <feof@plt+0xd03c>
  4110c4:	mov	w19, w0
  4110c8:	add	x0, sp, #0xb8
  4110cc:	bl	436b30 <feof@plt+0x33a50>
  4110d0:	ldr	x0, [x21, #984]
  4110d4:	ldr	w8, [x0, #240]
  4110d8:	subs	w8, w8, #0x1
  4110dc:	str	w8, [x0, #240]
  4110e0:	b.ne	411104 <feof@plt+0xe024>  // b.any
  4110e4:	ldr	w8, [x0, #244]
  4110e8:	cmp	w8, #0x1
  4110ec:	b.lt	411100 <feof@plt+0xe020>  // b.tstop
  4110f0:	ldr	x8, [x0, #256]
  4110f4:	cbz	x8, 411100 <feof@plt+0xe020>
  4110f8:	blr	x8
  4110fc:	ldr	x0, [x21, #984]
  411100:	str	wzr, [x0, #244]
  411104:	and	w0, w19, #0x1
  411108:	add	sp, sp, #0x1c0
  41110c:	ldp	x20, x19, [sp, #48]
  411110:	ldp	x22, x21, [sp, #32]
  411114:	ldr	x28, [sp, #16]
  411118:	ldp	x29, x30, [sp], #64
  41111c:	ret
  411120:	sub	sp, sp, #0x1f0
  411124:	stp	x29, x30, [sp, #432]
  411128:	str	x28, [sp, #448]
  41112c:	stp	x22, x21, [sp, #464]
  411130:	stp	x20, x19, [sp, #480]
  411134:	add	x29, sp, #0x1b0
  411138:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  41113c:	ldr	x8, [x21, #984]
  411140:	stp	q4, q5, [sp, #64]
  411144:	stp	q2, q3, [sp, #32]
  411148:	stp	q0, q1, [sp]
  41114c:	stp	x6, x7, [sp, #152]
  411150:	stp	x4, x5, [sp, #136]
  411154:	str	x3, [sp, #128]
  411158:	stp	q6, q7, [sp, #96]
  41115c:	ldr	w9, [x8, #240]
  411160:	mov	x10, #0xffffffffffffffd8    	// #-40
  411164:	mov	x11, sp
  411168:	movk	x10, #0xff80, lsl #32
  41116c:	add	w9, w9, #0x1
  411170:	str	w9, [x8, #240]
  411174:	add	x9, x11, #0x80
  411178:	stp	x9, x10, [x29, #-80]
  41117c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  411180:	mov	w20, w1
  411184:	ldr	x1, [x9, #2408]
  411188:	add	x8, sp, #0x80
  41118c:	mov	x19, x2
  411190:	mov	w2, w0
  411194:	add	x8, x8, #0x28
  411198:	add	x9, x29, #0x40
  41119c:	add	x0, sp, #0xa8
  4111a0:	mov	x3, xzr
  4111a4:	stp	x9, x8, [x29, #-96]
  4111a8:	add	x22, sp, #0xa8
  4111ac:	bl	436a50 <feof@plt+0x33970>
  4111b0:	mov	x0, x19
  4111b4:	bl	402cd0 <gettext@plt>
  4111b8:	mov	x19, x0
  4111bc:	bl	402e70 <__errno_location@plt>
  4111c0:	ldr	w8, [x0]
  4111c4:	ldr	x0, [x21, #984]
  4111c8:	sub	x9, x29, #0x60
  4111cc:	mov	w10, #0x6                   	// #6
  4111d0:	sub	x1, x29, #0x40
  4111d4:	stp	x22, x22, [x29, #-32]
  4111d8:	stp	x19, x9, [x29, #-64]
  4111dc:	stur	w8, [x29, #-48]
  4111e0:	stp	w10, w20, [x29, #-8]
  4111e4:	bl	41011c <feof@plt+0xd03c>
  4111e8:	mov	w19, w0
  4111ec:	add	x0, sp, #0xa8
  4111f0:	bl	436b30 <feof@plt+0x33a50>
  4111f4:	ldr	x0, [x21, #984]
  4111f8:	ldr	w8, [x0, #240]
  4111fc:	subs	w8, w8, #0x1
  411200:	str	w8, [x0, #240]
  411204:	b.ne	411228 <feof@plt+0xe148>  // b.any
  411208:	ldr	w8, [x0, #244]
  41120c:	cmp	w8, #0x1
  411210:	b.lt	411224 <feof@plt+0xe144>  // b.tstop
  411214:	ldr	x8, [x0, #256]
  411218:	cbz	x8, 411224 <feof@plt+0xe144>
  41121c:	blr	x8
  411220:	ldr	x0, [x21, #984]
  411224:	str	wzr, [x0, #244]
  411228:	and	w0, w19, #0x1
  41122c:	ldp	x20, x19, [sp, #480]
  411230:	ldp	x22, x21, [sp, #464]
  411234:	ldr	x28, [sp, #448]
  411238:	ldp	x29, x30, [sp, #432]
  41123c:	add	sp, sp, #0x1f0
  411240:	ret
  411244:	sub	sp, sp, #0x150
  411248:	stp	x29, x30, [sp, #272]
  41124c:	str	x28, [sp, #288]
  411250:	stp	x22, x21, [sp, #304]
  411254:	stp	x20, x19, [sp, #320]
  411258:	add	x29, sp, #0x110
  41125c:	stp	x3, x4, [sp, #136]
  411260:	stp	x5, x6, [sp, #152]
  411264:	str	x7, [sp, #168]
  411268:	stp	q1, q2, [sp, #16]
  41126c:	stp	q3, q4, [sp, #48]
  411270:	str	q0, [sp]
  411274:	stp	q5, q6, [sp, #80]
  411278:	str	q7, [sp, #112]
  41127c:	cbz	x0, 41134c <feof@plt+0xe26c>
  411280:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  411284:	ldr	x8, [x22, #984]
  411288:	mov	x9, #0xffffffffffffffd8    	// #-40
  41128c:	mov	x10, sp
  411290:	add	x11, sp, #0x88
  411294:	ldr	w12, [x8, #240]
  411298:	mov	x20, x0
  41129c:	movk	x9, #0xff80, lsl #32
  4112a0:	add	x13, x29, #0x40
  4112a4:	add	x10, x10, #0x80
  4112a8:	add	x11, x11, #0x28
  4112ac:	add	w12, w12, #0x1
  4112b0:	mov	x0, x2
  4112b4:	mov	w19, w1
  4112b8:	str	w12, [x8, #240]
  4112bc:	stp	x10, x9, [x29, #-80]
  4112c0:	stp	x13, x11, [x29, #-96]
  4112c4:	bl	402cd0 <gettext@plt>
  4112c8:	mov	x21, x0
  4112cc:	bl	402e70 <__errno_location@plt>
  4112d0:	ldr	w8, [x0]
  4112d4:	ldr	x0, [x22, #984]
  4112d8:	sub	x9, x29, #0x60
  4112dc:	mov	w10, #0x6                   	// #6
  4112e0:	sub	x1, x29, #0x40
  4112e4:	stp	x20, x20, [x29, #-32]
  4112e8:	stp	x21, x9, [x29, #-64]
  4112ec:	stur	w8, [x29, #-48]
  4112f0:	stp	w10, w19, [x29, #-8]
  4112f4:	bl	41011c <feof@plt+0xd03c>
  4112f8:	mov	w19, w0
  4112fc:	ldr	x0, [x22, #984]
  411300:	ldr	w8, [x0, #240]
  411304:	subs	w8, w8, #0x1
  411308:	str	w8, [x0, #240]
  41130c:	b.ne	411330 <feof@plt+0xe250>  // b.any
  411310:	ldr	w8, [x0, #244]
  411314:	cmp	w8, #0x1
  411318:	b.lt	41132c <feof@plt+0xe24c>  // b.tstop
  41131c:	ldr	x8, [x0, #256]
  411320:	cbz	x8, 41132c <feof@plt+0xe24c>
  411324:	blr	x8
  411328:	ldr	x0, [x22, #984]
  41132c:	str	wzr, [x0, #244]
  411330:	and	w0, w19, #0x1
  411334:	ldp	x20, x19, [sp, #320]
  411338:	ldp	x22, x21, [sp, #304]
  41133c:	ldr	x28, [sp, #288]
  411340:	ldp	x29, x30, [sp, #272]
  411344:	add	sp, sp, #0x150
  411348:	ret
  41134c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  411350:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  411354:	add	x0, x0, #0x580
  411358:	add	x2, x2, #0x59e
  41135c:	mov	w1, #0x518                 	// #1304
  411360:	bl	40f560 <feof@plt+0xc480>
  411364:	sub	sp, sp, #0x140
  411368:	stp	x29, x30, [sp, #256]
  41136c:	str	x28, [sp, #272]
  411370:	stp	x22, x21, [sp, #288]
  411374:	stp	x20, x19, [sp, #304]
  411378:	add	x29, sp, #0x100
  41137c:	stp	x5, x6, [x29, #-120]
  411380:	stur	x7, [x29, #-104]
  411384:	stp	q0, q1, [sp]
  411388:	stp	q2, q3, [sp, #32]
  41138c:	stp	q4, q5, [sp, #64]
  411390:	stp	q6, q7, [sp, #96]
  411394:	cbz	x0, 411468 <feof@plt+0xe388>
  411398:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41139c:	ldr	x8, [x22, #984]
  4113a0:	mov	x9, #0xffffffffffffffe8    	// #-24
  4113a4:	mov	x10, sp
  4113a8:	sub	x11, x29, #0x78
  4113ac:	ldr	w12, [x8, #240]
  4113b0:	mov	w19, w1
  4113b4:	mov	x20, x0
  4113b8:	movk	x9, #0xff80, lsl #32
  4113bc:	add	x13, x29, #0x40
  4113c0:	add	x10, x10, #0x80
  4113c4:	add	x11, x11, #0x18
  4113c8:	add	w12, w12, #0x1
  4113cc:	mov	x0, x3
  4113d0:	mov	x1, x4
  4113d4:	str	w12, [x8, #240]
  4113d8:	stp	x10, x9, [x29, #-80]
  4113dc:	stp	x13, x11, [x29, #-96]
  4113e0:	bl	402ab0 <ngettext@plt>
  4113e4:	mov	x21, x0
  4113e8:	bl	402e70 <__errno_location@plt>
  4113ec:	ldr	w8, [x0]
  4113f0:	ldr	x0, [x22, #984]
  4113f4:	sub	x9, x29, #0x60
  4113f8:	mov	w10, #0x6                   	// #6
  4113fc:	sub	x1, x29, #0x40
  411400:	stp	x20, x20, [x29, #-32]
  411404:	stp	x21, x9, [x29, #-64]
  411408:	stur	w8, [x29, #-48]
  41140c:	stp	w10, w19, [x29, #-8]
  411410:	bl	41011c <feof@plt+0xd03c>
  411414:	mov	w19, w0
  411418:	ldr	x0, [x22, #984]
  41141c:	ldr	w8, [x0, #240]
  411420:	subs	w8, w8, #0x1
  411424:	str	w8, [x0, #240]
  411428:	b.ne	41144c <feof@plt+0xe36c>  // b.any
  41142c:	ldr	w8, [x0, #244]
  411430:	cmp	w8, #0x1
  411434:	b.lt	411448 <feof@plt+0xe368>  // b.tstop
  411438:	ldr	x8, [x0, #256]
  41143c:	cbz	x8, 411448 <feof@plt+0xe368>
  411440:	blr	x8
  411444:	ldr	x0, [x22, #984]
  411448:	str	wzr, [x0, #244]
  41144c:	and	w0, w19, #0x1
  411450:	ldp	x20, x19, [sp, #304]
  411454:	ldp	x22, x21, [sp, #288]
  411458:	ldr	x28, [sp, #272]
  41145c:	ldp	x29, x30, [sp, #256]
  411460:	add	sp, sp, #0x140
  411464:	ret
  411468:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41146c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  411470:	add	x0, x0, #0x580
  411474:	add	x2, x2, #0x5a9
  411478:	mov	w1, #0x528                 	// #1320
  41147c:	bl	40f560 <feof@plt+0xc480>
  411480:	sub	sp, sp, #0x1f0
  411484:	stp	x29, x30, [sp, #416]
  411488:	str	x28, [sp, #432]
  41148c:	stp	x24, x23, [sp, #448]
  411490:	stp	x22, x21, [sp, #464]
  411494:	stp	x20, x19, [sp, #480]
  411498:	add	x29, sp, #0x1a0
  41149c:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  4114a0:	ldr	x8, [x23, #984]
  4114a4:	stp	q4, q5, [sp, #64]
  4114a8:	stp	q2, q3, [sp, #32]
  4114ac:	stp	q0, q1, [sp]
  4114b0:	stp	x6, x7, [sp, #136]
  4114b4:	str	x5, [sp, #128]
  4114b8:	stp	q6, q7, [sp, #96]
  4114bc:	ldr	w9, [x8, #240]
  4114c0:	mov	x10, #0xffffffffffffffe8    	// #-24
  4114c4:	movk	x10, #0xff80, lsl #32
  4114c8:	mov	w22, w1
  4114cc:	add	w9, w9, #0x1
  4114d0:	str	w9, [x8, #240]
  4114d4:	mov	x8, sp
  4114d8:	add	x8, x8, #0x80
  4114dc:	stp	x8, x10, [x29, #-80]
  4114e0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4114e4:	ldr	x1, [x8, #2408]
  4114e8:	add	x9, sp, #0x80
  4114ec:	mov	x20, x3
  4114f0:	mov	x21, x2
  4114f4:	mov	w2, w0
  4114f8:	add	x9, x9, #0x18
  4114fc:	add	x8, x29, #0x50
  411500:	add	x0, sp, #0x98
  411504:	mov	x3, xzr
  411508:	mov	x19, x4
  41150c:	stp	x8, x9, [x29, #-96]
  411510:	add	x24, sp, #0x98
  411514:	bl	436a50 <feof@plt+0x33970>
  411518:	mov	x0, x20
  41151c:	mov	x1, x19
  411520:	mov	x2, x21
  411524:	bl	402ab0 <ngettext@plt>
  411528:	mov	x19, x0
  41152c:	bl	402e70 <__errno_location@plt>
  411530:	ldr	w8, [x0]
  411534:	ldr	x0, [x23, #984]
  411538:	sub	x9, x29, #0x60
  41153c:	mov	w10, #0x6                   	// #6
  411540:	sub	x1, x29, #0x40
  411544:	stp	x24, x24, [x29, #-32]
  411548:	stp	x19, x9, [x29, #-64]
  41154c:	stur	w8, [x29, #-48]
  411550:	stp	w10, w22, [x29, #-8]
  411554:	bl	41011c <feof@plt+0xd03c>
  411558:	mov	w19, w0
  41155c:	add	x0, sp, #0x98
  411560:	bl	436b30 <feof@plt+0x33a50>
  411564:	ldr	x0, [x23, #984]
  411568:	ldr	w8, [x0, #240]
  41156c:	subs	w8, w8, #0x1
  411570:	str	w8, [x0, #240]
  411574:	b.ne	411598 <feof@plt+0xe4b8>  // b.any
  411578:	ldr	w8, [x0, #244]
  41157c:	cmp	w8, #0x1
  411580:	b.lt	411594 <feof@plt+0xe4b4>  // b.tstop
  411584:	ldr	x8, [x0, #256]
  411588:	cbz	x8, 411594 <feof@plt+0xe4b4>
  41158c:	blr	x8
  411590:	ldr	x0, [x23, #984]
  411594:	str	wzr, [x0, #244]
  411598:	and	w0, w19, #0x1
  41159c:	ldp	x20, x19, [sp, #480]
  4115a0:	ldp	x22, x21, [sp, #464]
  4115a4:	ldp	x24, x23, [sp, #448]
  4115a8:	ldr	x28, [sp, #432]
  4115ac:	ldp	x29, x30, [sp, #416]
  4115b0:	add	sp, sp, #0x1f0
  4115b4:	ret
  4115b8:	sub	sp, sp, #0x1f0
  4115bc:	stp	x29, x30, [sp, #432]
  4115c0:	str	x28, [sp, #448]
  4115c4:	stp	x22, x21, [sp, #464]
  4115c8:	stp	x20, x19, [sp, #480]
  4115cc:	add	x29, sp, #0x1b0
  4115d0:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  4115d4:	ldr	x8, [x21, #984]
  4115d8:	stp	q4, q5, [sp, #64]
  4115dc:	stp	q2, q3, [sp, #32]
  4115e0:	stp	q0, q1, [sp]
  4115e4:	stp	x6, x7, [sp, #152]
  4115e8:	stp	x4, x5, [sp, #136]
  4115ec:	str	x3, [sp, #128]
  4115f0:	stp	q6, q7, [sp, #96]
  4115f4:	ldr	w9, [x8, #240]
  4115f8:	mov	x10, #0xffffffffffffffd8    	// #-40
  4115fc:	mov	x11, sp
  411600:	movk	x10, #0xff80, lsl #32
  411604:	add	w9, w9, #0x1
  411608:	str	w9, [x8, #240]
  41160c:	add	x9, x11, #0x80
  411610:	stp	x9, x10, [x29, #-80]
  411614:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  411618:	mov	w20, w1
  41161c:	ldr	x1, [x9, #2408]
  411620:	add	x8, sp, #0x80
  411624:	mov	x19, x2
  411628:	mov	w2, w0
  41162c:	add	x8, x8, #0x28
  411630:	add	x9, x29, #0x40
  411634:	add	x0, sp, #0xa8
  411638:	mov	x3, xzr
  41163c:	stp	x9, x8, [x29, #-96]
  411640:	add	x22, sp, #0xa8
  411644:	bl	436a50 <feof@plt+0x33970>
  411648:	mov	x0, x19
  41164c:	bl	402cd0 <gettext@plt>
  411650:	mov	x19, x0
  411654:	bl	402e70 <__errno_location@plt>
  411658:	ldr	w8, [x0]
  41165c:	ldr	x0, [x21, #984]
  411660:	sub	x9, x29, #0x60
  411664:	mov	w10, #0xa                   	// #10
  411668:	sub	x1, x29, #0x40
  41166c:	stp	x22, x22, [x29, #-32]
  411670:	stp	x19, x9, [x29, #-64]
  411674:	stur	w8, [x29, #-48]
  411678:	stp	w10, w20, [x29, #-8]
  41167c:	bl	41011c <feof@plt+0xd03c>
  411680:	mov	w19, w0
  411684:	add	x0, sp, #0xa8
  411688:	bl	436b30 <feof@plt+0x33a50>
  41168c:	ldr	x0, [x21, #984]
  411690:	ldr	w8, [x0, #240]
  411694:	subs	w8, w8, #0x1
  411698:	str	w8, [x0, #240]
  41169c:	b.ne	4116c0 <feof@plt+0xe5e0>  // b.any
  4116a0:	ldr	w8, [x0, #244]
  4116a4:	cmp	w8, #0x1
  4116a8:	b.lt	4116bc <feof@plt+0xe5dc>  // b.tstop
  4116ac:	ldr	x8, [x0, #256]
  4116b0:	cbz	x8, 4116bc <feof@plt+0xe5dc>
  4116b4:	blr	x8
  4116b8:	ldr	x0, [x21, #984]
  4116bc:	str	wzr, [x0, #244]
  4116c0:	and	w0, w19, #0x1
  4116c4:	ldp	x20, x19, [sp, #480]
  4116c8:	ldp	x22, x21, [sp, #464]
  4116cc:	ldr	x28, [sp, #448]
  4116d0:	ldp	x29, x30, [sp, #432]
  4116d4:	add	sp, sp, #0x1f0
  4116d8:	ret
  4116dc:	sub	sp, sp, #0x150
  4116e0:	stp	x29, x30, [sp, #272]
  4116e4:	str	x28, [sp, #288]
  4116e8:	stp	x22, x21, [sp, #304]
  4116ec:	stp	x20, x19, [sp, #320]
  4116f0:	add	x29, sp, #0x110
  4116f4:	stp	x3, x4, [sp, #136]
  4116f8:	stp	x5, x6, [sp, #152]
  4116fc:	str	x7, [sp, #168]
  411700:	stp	q1, q2, [sp, #16]
  411704:	stp	q3, q4, [sp, #48]
  411708:	str	q0, [sp]
  41170c:	stp	q5, q6, [sp, #80]
  411710:	str	q7, [sp, #112]
  411714:	cbz	x0, 4117e4 <feof@plt+0xe704>
  411718:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41171c:	ldr	x8, [x22, #984]
  411720:	mov	x9, #0xffffffffffffffd8    	// #-40
  411724:	mov	x10, sp
  411728:	add	x11, sp, #0x88
  41172c:	ldr	w12, [x8, #240]
  411730:	mov	x20, x0
  411734:	movk	x9, #0xff80, lsl #32
  411738:	add	x13, x29, #0x40
  41173c:	add	x10, x10, #0x80
  411740:	add	x11, x11, #0x28
  411744:	add	w12, w12, #0x1
  411748:	mov	x0, x2
  41174c:	mov	w19, w1
  411750:	str	w12, [x8, #240]
  411754:	stp	x10, x9, [x29, #-80]
  411758:	stp	x13, x11, [x29, #-96]
  41175c:	bl	402cd0 <gettext@plt>
  411760:	mov	x21, x0
  411764:	bl	402e70 <__errno_location@plt>
  411768:	ldr	w8, [x0]
  41176c:	ldr	x0, [x22, #984]
  411770:	sub	x9, x29, #0x60
  411774:	mov	w10, #0xa                   	// #10
  411778:	sub	x1, x29, #0x40
  41177c:	stp	x20, x20, [x29, #-32]
  411780:	stp	x21, x9, [x29, #-64]
  411784:	stur	w8, [x29, #-48]
  411788:	stp	w10, w19, [x29, #-8]
  41178c:	bl	41011c <feof@plt+0xd03c>
  411790:	mov	w19, w0
  411794:	ldr	x0, [x22, #984]
  411798:	ldr	w8, [x0, #240]
  41179c:	subs	w8, w8, #0x1
  4117a0:	str	w8, [x0, #240]
  4117a4:	b.ne	4117c8 <feof@plt+0xe6e8>  // b.any
  4117a8:	ldr	w8, [x0, #244]
  4117ac:	cmp	w8, #0x1
  4117b0:	b.lt	4117c4 <feof@plt+0xe6e4>  // b.tstop
  4117b4:	ldr	x8, [x0, #256]
  4117b8:	cbz	x8, 4117c4 <feof@plt+0xe6e4>
  4117bc:	blr	x8
  4117c0:	ldr	x0, [x22, #984]
  4117c4:	str	wzr, [x0, #244]
  4117c8:	and	w0, w19, #0x1
  4117cc:	ldp	x20, x19, [sp, #320]
  4117d0:	ldp	x22, x21, [sp, #304]
  4117d4:	ldr	x28, [sp, #288]
  4117d8:	ldp	x29, x30, [sp, #272]
  4117dc:	add	sp, sp, #0x150
  4117e0:	ret
  4117e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4117e8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4117ec:	add	x0, x0, #0x580
  4117f0:	add	x2, x2, #0x5b3
  4117f4:	mov	w1, #0x565                 	// #1381
  4117f8:	bl	40f560 <feof@plt+0xc480>
  4117fc:	stp	x29, x30, [sp, #-64]!
  411800:	str	x28, [sp, #16]
  411804:	stp	x22, x21, [sp, #32]
  411808:	stp	x20, x19, [sp, #48]
  41180c:	mov	x29, sp
  411810:	sub	sp, sp, #0x1c0
  411814:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  411818:	ldr	x9, [x20, #984]
  41181c:	stp	q4, q5, [sp, #64]
  411820:	stp	q2, q3, [sp, #32]
  411824:	stp	q0, q1, [sp]
  411828:	stp	x6, x7, [sp, #168]
  41182c:	stp	x4, x5, [sp, #152]
  411830:	stp	x2, x3, [sp, #136]
  411834:	stp	q6, q7, [sp, #96]
  411838:	ldr	w12, [x9, #240]
  41183c:	mov	x19, x1
  411840:	mov	w8, w0
  411844:	mov	x10, #0xffffffffffffffd0    	// #-48
  411848:	add	w12, w12, #0x1
  41184c:	str	w12, [x9, #240]
  411850:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  411854:	ldr	x1, [x9, #2408]
  411858:	mov	x11, sp
  41185c:	add	x13, sp, #0x88
  411860:	movk	x10, #0xff80, lsl #32
  411864:	add	x11, x11, #0x80
  411868:	add	x13, x13, #0x30
  41186c:	add	x9, x29, #0x40
  411870:	add	x0, sp, #0xb8
  411874:	mov	w2, w8
  411878:	mov	x3, xzr
  41187c:	stp	x11, x10, [x29, #-80]
  411880:	stp	x9, x13, [x29, #-96]
  411884:	add	x21, sp, #0xb8
  411888:	bl	436a50 <feof@plt+0x33970>
  41188c:	ldr	x8, [x20, #984]
  411890:	mov	w9, #0x6                   	// #6
  411894:	mov	x0, x19
  411898:	ldrb	w8, [x8, #123]
  41189c:	cmp	w8, #0x0
  4118a0:	mov	w8, #0x4                   	// #4
  4118a4:	csel	w22, w8, w9, eq  // eq = none
  4118a8:	bl	402cd0 <gettext@plt>
  4118ac:	mov	x19, x0
  4118b0:	bl	402e70 <__errno_location@plt>
  4118b4:	ldr	w8, [x0]
  4118b8:	ldr	x0, [x20, #984]
  4118bc:	sub	x9, x29, #0x60
  4118c0:	stp	x21, x21, [x29, #-32]
  4118c4:	stp	x19, x9, [x29, #-64]
  4118c8:	stur	w8, [x29, #-48]
  4118cc:	ldr	w8, [x0, #124]
  4118d0:	sub	x1, x29, #0x40
  4118d4:	stp	w22, w8, [x29, #-8]
  4118d8:	bl	41011c <feof@plt+0xd03c>
  4118dc:	mov	w19, w0
  4118e0:	add	x0, sp, #0xb8
  4118e4:	bl	436b30 <feof@plt+0x33a50>
  4118e8:	ldr	x0, [x20, #984]
  4118ec:	ldr	w8, [x0, #240]
  4118f0:	subs	w8, w8, #0x1
  4118f4:	str	w8, [x0, #240]
  4118f8:	b.ne	41191c <feof@plt+0xe83c>  // b.any
  4118fc:	ldr	w8, [x0, #244]
  411900:	cmp	w8, #0x1
  411904:	b.lt	411918 <feof@plt+0xe838>  // b.tstop
  411908:	ldr	x8, [x0, #256]
  41190c:	cbz	x8, 411918 <feof@plt+0xe838>
  411910:	blr	x8
  411914:	ldr	x0, [x20, #984]
  411918:	str	wzr, [x0, #244]
  41191c:	and	w0, w19, #0x1
  411920:	add	sp, sp, #0x1c0
  411924:	ldp	x20, x19, [sp, #48]
  411928:	ldp	x22, x21, [sp, #32]
  41192c:	ldr	x28, [sp, #16]
  411930:	ldp	x29, x30, [sp], #64
  411934:	ret
  411938:	sub	sp, sp, #0x150
  41193c:	stp	x29, x30, [sp, #272]
  411940:	str	x28, [sp, #288]
  411944:	stp	x22, x21, [sp, #304]
  411948:	stp	x20, x19, [sp, #320]
  41194c:	add	x29, sp, #0x110
  411950:	stp	x2, x3, [sp, #128]
  411954:	stp	x4, x5, [sp, #144]
  411958:	stp	x6, x7, [sp, #160]
  41195c:	stp	q1, q2, [sp, #16]
  411960:	stp	q3, q4, [sp, #48]
  411964:	str	q0, [sp]
  411968:	stp	q5, q6, [sp, #80]
  41196c:	str	q7, [sp, #112]
  411970:	cbz	x0, 411a54 <feof@plt+0xe974>
  411974:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  411978:	ldr	x8, [x21, #984]
  41197c:	mov	x10, #0xffffffffffffffd0    	// #-48
  411980:	mov	x11, sp
  411984:	movk	x10, #0xff80, lsl #32
  411988:	ldr	w9, [x8, #240]
  41198c:	add	x11, x11, #0x80
  411990:	mov	x19, x0
  411994:	mov	x0, x1
  411998:	add	w9, w9, #0x1
  41199c:	str	w9, [x8, #240]
  4119a0:	stp	x11, x10, [x29, #-80]
  4119a4:	ldr	x10, [x21, #984]
  4119a8:	add	x8, sp, #0x80
  4119ac:	add	x9, x29, #0x40
  4119b0:	add	x8, x8, #0x30
  4119b4:	stp	x9, x8, [x29, #-96]
  4119b8:	ldrb	w8, [x10, #123]
  4119bc:	mov	w9, #0x6                   	// #6
  4119c0:	cmp	w8, #0x0
  4119c4:	mov	w8, #0x4                   	// #4
  4119c8:	csel	w22, w8, w9, eq  // eq = none
  4119cc:	bl	402cd0 <gettext@plt>
  4119d0:	mov	x20, x0
  4119d4:	bl	402e70 <__errno_location@plt>
  4119d8:	ldr	w8, [x0]
  4119dc:	ldr	x0, [x21, #984]
  4119e0:	sub	x9, x29, #0x60
  4119e4:	stp	x19, x19, [x29, #-32]
  4119e8:	stp	x20, x9, [x29, #-64]
  4119ec:	stur	w8, [x29, #-48]
  4119f0:	ldr	w8, [x0, #124]
  4119f4:	sub	x1, x29, #0x40
  4119f8:	stp	w22, w8, [x29, #-8]
  4119fc:	bl	41011c <feof@plt+0xd03c>
  411a00:	mov	w19, w0
  411a04:	ldr	x0, [x21, #984]
  411a08:	ldr	w8, [x0, #240]
  411a0c:	subs	w8, w8, #0x1
  411a10:	str	w8, [x0, #240]
  411a14:	b.ne	411a38 <feof@plt+0xe958>  // b.any
  411a18:	ldr	w8, [x0, #244]
  411a1c:	cmp	w8, #0x1
  411a20:	b.lt	411a34 <feof@plt+0xe954>  // b.tstop
  411a24:	ldr	x8, [x0, #256]
  411a28:	cbz	x8, 411a34 <feof@plt+0xe954>
  411a2c:	blr	x8
  411a30:	ldr	x0, [x21, #984]
  411a34:	str	wzr, [x0, #244]
  411a38:	and	w0, w19, #0x1
  411a3c:	ldp	x20, x19, [sp, #320]
  411a40:	ldp	x22, x21, [sp, #304]
  411a44:	ldr	x28, [sp, #288]
  411a48:	ldp	x29, x30, [sp, #272]
  411a4c:	add	sp, sp, #0x150
  411a50:	ret
  411a54:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  411a58:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  411a5c:	add	x0, x0, #0x580
  411a60:	add	x2, x2, #0x5bb
  411a64:	mov	w1, #0x587                 	// #1415
  411a68:	bl	40f560 <feof@plt+0xc480>
  411a6c:	sub	sp, sp, #0x1f0
  411a70:	stp	x29, x30, [sp, #448]
  411a74:	stp	x28, x21, [sp, #464]
  411a78:	stp	x20, x19, [sp, #480]
  411a7c:	add	x29, sp, #0x1c0
  411a80:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  411a84:	ldr	x8, [x20, #984]
  411a88:	stp	q4, q5, [sp, #64]
  411a8c:	stp	q2, q3, [sp, #32]
  411a90:	stp	q0, q1, [sp]
  411a94:	stp	x6, x7, [sp, #168]
  411a98:	stp	x4, x5, [sp, #152]
  411a9c:	stp	x2, x3, [sp, #136]
  411aa0:	str	x1, [sp, #128]
  411aa4:	stp	q6, q7, [sp, #96]
  411aa8:	ldr	w10, [x8, #240]
  411aac:	adrp	x13, 48a000 <_obstack_memory_used@@Base+0x28838>
  411ab0:	mov	x9, #0xffffffffffffffc8    	// #-56
  411ab4:	mov	x11, sp
  411ab8:	add	w10, w10, #0x1
  411abc:	str	w10, [x8, #240]
  411ac0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  411ac4:	ldr	x1, [x13, #2408]
  411ac8:	ldr	w2, [x8, #2400]
  411acc:	add	x12, sp, #0x80
  411ad0:	mov	x19, x0
  411ad4:	movk	x9, #0xff80, lsl #32
  411ad8:	add	x10, x11, #0x80
  411adc:	add	x11, x12, #0x38
  411ae0:	add	x8, x29, #0x30
  411ae4:	add	x0, sp, #0xb8
  411ae8:	mov	x3, xzr
  411aec:	stp	x10, x9, [x29, #-80]
  411af0:	stp	x8, x11, [x29, #-96]
  411af4:	add	x21, sp, #0xb8
  411af8:	bl	436a50 <feof@plt+0x33970>
  411afc:	mov	x0, x19
  411b00:	bl	402cd0 <gettext@plt>
  411b04:	mov	x19, x0
  411b08:	bl	402e70 <__errno_location@plt>
  411b0c:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  411b10:	ldr	w8, [x0]
  411b14:	ldr	x0, [x20, #984]
  411b18:	ldr	d0, [x10, #712]
  411b1c:	sub	x9, x29, #0x60
  411b20:	sub	x1, x29, #0x40
  411b24:	stp	x19, x9, [x29, #-64]
  411b28:	stur	w8, [x29, #-48]
  411b2c:	stp	x21, x21, [x29, #-32]
  411b30:	stur	d0, [x29, #-8]
  411b34:	bl	41011c <feof@plt+0xd03c>
  411b38:	add	x0, sp, #0xb8
  411b3c:	bl	436b30 <feof@plt+0x33a50>
  411b40:	ldr	x0, [x20, #984]
  411b44:	ldr	w8, [x0, #240]
  411b48:	subs	w8, w8, #0x1
  411b4c:	str	w8, [x0, #240]
  411b50:	b.ne	411b74 <feof@plt+0xea94>  // b.any
  411b54:	ldr	w8, [x0, #244]
  411b58:	cmp	w8, #0x1
  411b5c:	b.lt	411b70 <feof@plt+0xea90>  // b.tstop
  411b60:	ldr	x8, [x0, #256]
  411b64:	cbz	x8, 411b70 <feof@plt+0xea90>
  411b68:	blr	x8
  411b6c:	ldr	x0, [x20, #984]
  411b70:	str	wzr, [x0, #244]
  411b74:	ldp	x20, x19, [sp, #480]
  411b78:	ldp	x28, x21, [sp, #464]
  411b7c:	ldp	x29, x30, [sp, #448]
  411b80:	add	sp, sp, #0x1f0
  411b84:	ret
  411b88:	sub	sp, sp, #0x1f0
  411b8c:	stp	x29, x30, [sp, #432]
  411b90:	stp	x28, x23, [sp, #448]
  411b94:	stp	x22, x21, [sp, #464]
  411b98:	stp	x20, x19, [sp, #480]
  411b9c:	add	x29, sp, #0x1b0
  411ba0:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  411ba4:	ldr	x8, [x22, #984]
  411ba8:	stp	q4, q5, [sp, #64]
  411bac:	stp	q2, q3, [sp, #32]
  411bb0:	stp	q0, q1, [sp]
  411bb4:	stp	x6, x7, [sp, #152]
  411bb8:	stp	x4, x5, [sp, #136]
  411bbc:	stp	q6, q7, [sp, #96]
  411bc0:	ldr	w9, [x8, #240]
  411bc4:	mov	x10, #0xffffffffffffffe0    	// #-32
  411bc8:	movk	x10, #0xff80, lsl #32
  411bcc:	mov	x21, x1
  411bd0:	add	w9, w9, #0x1
  411bd4:	str	w9, [x8, #240]
  411bd8:	mov	x8, sp
  411bdc:	add	x8, x8, #0x80
  411be0:	stp	x8, x10, [x29, #-80]
  411be4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  411be8:	ldr	x1, [x8, #2408]
  411bec:	add	x9, sp, #0x88
  411bf0:	mov	x19, x3
  411bf4:	mov	x20, x2
  411bf8:	mov	w2, w0
  411bfc:	add	x9, x9, #0x20
  411c00:	add	x8, x29, #0x40
  411c04:	add	x0, sp, #0xa8
  411c08:	mov	x3, xzr
  411c0c:	stp	x8, x9, [x29, #-96]
  411c10:	add	x23, sp, #0xa8
  411c14:	bl	436a50 <feof@plt+0x33970>
  411c18:	mov	x0, x20
  411c1c:	mov	x1, x19
  411c20:	mov	x2, x21
  411c24:	bl	402ab0 <ngettext@plt>
  411c28:	mov	x19, x0
  411c2c:	bl	402e70 <__errno_location@plt>
  411c30:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  411c34:	ldr	w8, [x0]
  411c38:	ldr	x0, [x22, #984]
  411c3c:	ldr	d0, [x10, #712]
  411c40:	sub	x9, x29, #0x60
  411c44:	sub	x1, x29, #0x40
  411c48:	stp	x19, x9, [x29, #-64]
  411c4c:	stur	w8, [x29, #-48]
  411c50:	stp	x23, x23, [x29, #-32]
  411c54:	stur	d0, [x29, #-8]
  411c58:	bl	41011c <feof@plt+0xd03c>
  411c5c:	add	x0, sp, #0xa8
  411c60:	bl	436b30 <feof@plt+0x33a50>
  411c64:	ldr	x0, [x22, #984]
  411c68:	ldr	w8, [x0, #240]
  411c6c:	subs	w8, w8, #0x1
  411c70:	str	w8, [x0, #240]
  411c74:	b.ne	411c98 <feof@plt+0xebb8>  // b.any
  411c78:	ldr	w8, [x0, #244]
  411c7c:	cmp	w8, #0x1
  411c80:	b.lt	411c94 <feof@plt+0xebb4>  // b.tstop
  411c84:	ldr	x8, [x0, #256]
  411c88:	cbz	x8, 411c94 <feof@plt+0xebb4>
  411c8c:	blr	x8
  411c90:	ldr	x0, [x22, #984]
  411c94:	str	wzr, [x0, #244]
  411c98:	ldp	x20, x19, [sp, #480]
  411c9c:	ldp	x22, x21, [sp, #464]
  411ca0:	ldp	x28, x23, [sp, #448]
  411ca4:	ldp	x29, x30, [sp, #432]
  411ca8:	add	sp, sp, #0x1f0
  411cac:	ret
  411cb0:	sub	sp, sp, #0x1f0
  411cb4:	stp	x29, x30, [sp, #448]
  411cb8:	stp	x28, x21, [sp, #464]
  411cbc:	stp	x20, x19, [sp, #480]
  411cc0:	add	x29, sp, #0x1c0
  411cc4:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  411cc8:	ldr	x9, [x20, #984]
  411ccc:	stp	q4, q5, [sp, #64]
  411cd0:	stp	q2, q3, [sp, #32]
  411cd4:	stp	q0, q1, [sp]
  411cd8:	stp	x6, x7, [sp, #168]
  411cdc:	stp	x4, x5, [sp, #152]
  411ce0:	stp	x2, x3, [sp, #136]
  411ce4:	stp	q6, q7, [sp, #96]
  411ce8:	ldr	w12, [x9, #240]
  411cec:	mov	x19, x1
  411cf0:	mov	w8, w0
  411cf4:	mov	x10, #0xffffffffffffffd0    	// #-48
  411cf8:	add	w12, w12, #0x1
  411cfc:	str	w12, [x9, #240]
  411d00:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  411d04:	ldr	x1, [x9, #2408]
  411d08:	mov	x11, sp
  411d0c:	add	x13, sp, #0x88
  411d10:	movk	x10, #0xff80, lsl #32
  411d14:	add	x11, x11, #0x80
  411d18:	add	x13, x13, #0x30
  411d1c:	add	x9, x29, #0x30
  411d20:	add	x0, sp, #0xb8
  411d24:	mov	w2, w8
  411d28:	mov	x3, xzr
  411d2c:	stp	x11, x10, [x29, #-80]
  411d30:	stp	x9, x13, [x29, #-96]
  411d34:	add	x21, sp, #0xb8
  411d38:	bl	436a50 <feof@plt+0x33970>
  411d3c:	mov	x0, x19
  411d40:	bl	402cd0 <gettext@plt>
  411d44:	mov	x19, x0
  411d48:	bl	402e70 <__errno_location@plt>
  411d4c:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  411d50:	ldr	w8, [x0]
  411d54:	ldr	x0, [x20, #984]
  411d58:	ldr	d0, [x10, #712]
  411d5c:	sub	x9, x29, #0x60
  411d60:	sub	x1, x29, #0x40
  411d64:	stp	x19, x9, [x29, #-64]
  411d68:	stur	w8, [x29, #-48]
  411d6c:	stp	x21, x21, [x29, #-32]
  411d70:	stur	d0, [x29, #-8]
  411d74:	bl	41011c <feof@plt+0xd03c>
  411d78:	add	x0, sp, #0xb8
  411d7c:	bl	436b30 <feof@plt+0x33a50>
  411d80:	ldr	x0, [x20, #984]
  411d84:	ldr	w8, [x0, #240]
  411d88:	subs	w8, w8, #0x1
  411d8c:	str	w8, [x0, #240]
  411d90:	b.ne	411db4 <feof@plt+0xecd4>  // b.any
  411d94:	ldr	w8, [x0, #244]
  411d98:	cmp	w8, #0x1
  411d9c:	b.lt	411db0 <feof@plt+0xecd0>  // b.tstop
  411da0:	ldr	x8, [x0, #256]
  411da4:	cbz	x8, 411db0 <feof@plt+0xecd0>
  411da8:	blr	x8
  411dac:	ldr	x0, [x20, #984]
  411db0:	str	wzr, [x0, #244]
  411db4:	ldp	x20, x19, [sp, #480]
  411db8:	ldp	x28, x21, [sp, #464]
  411dbc:	ldp	x29, x30, [sp, #448]
  411dc0:	add	sp, sp, #0x1f0
  411dc4:	ret
  411dc8:	sub	sp, sp, #0x140
  411dcc:	stp	x29, x30, [sp, #272]
  411dd0:	stp	x28, x21, [sp, #288]
  411dd4:	stp	x20, x19, [sp, #304]
  411dd8:	add	x29, sp, #0x110
  411ddc:	stp	x2, x3, [sp, #128]
  411de0:	stp	x4, x5, [sp, #144]
  411de4:	stp	x6, x7, [sp, #160]
  411de8:	stp	q1, q2, [sp, #16]
  411dec:	stp	q3, q4, [sp, #48]
  411df0:	str	q0, [sp]
  411df4:	stp	q5, q6, [sp, #80]
  411df8:	str	q7, [sp, #112]
  411dfc:	cbz	x0, 411ec0 <feof@plt+0xede0>
  411e00:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  411e04:	ldr	x8, [x21, #984]
  411e08:	mov	x9, #0xffffffffffffffd0    	// #-48
  411e0c:	mov	x10, sp
  411e10:	add	x11, sp, #0x80
  411e14:	ldr	w12, [x8, #240]
  411e18:	mov	x19, x0
  411e1c:	movk	x9, #0xff80, lsl #32
  411e20:	add	x13, x29, #0x30
  411e24:	add	x10, x10, #0x80
  411e28:	add	x11, x11, #0x30
  411e2c:	add	w12, w12, #0x1
  411e30:	mov	x0, x1
  411e34:	str	w12, [x8, #240]
  411e38:	stp	x10, x9, [x29, #-80]
  411e3c:	stp	x13, x11, [x29, #-96]
  411e40:	bl	402cd0 <gettext@plt>
  411e44:	mov	x20, x0
  411e48:	bl	402e70 <__errno_location@plt>
  411e4c:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  411e50:	ldr	w8, [x0]
  411e54:	ldr	x0, [x21, #984]
  411e58:	ldr	d0, [x10, #712]
  411e5c:	sub	x9, x29, #0x60
  411e60:	sub	x1, x29, #0x40
  411e64:	stp	x20, x9, [x29, #-64]
  411e68:	stur	w8, [x29, #-48]
  411e6c:	stp	x19, x19, [x29, #-32]
  411e70:	stur	d0, [x29, #-8]
  411e74:	bl	41011c <feof@plt+0xd03c>
  411e78:	ldr	x0, [x21, #984]
  411e7c:	ldr	w8, [x0, #240]
  411e80:	subs	w8, w8, #0x1
  411e84:	str	w8, [x0, #240]
  411e88:	b.ne	411eac <feof@plt+0xedcc>  // b.any
  411e8c:	ldr	w8, [x0, #244]
  411e90:	cmp	w8, #0x1
  411e94:	b.lt	411ea8 <feof@plt+0xedc8>  // b.tstop
  411e98:	ldr	x8, [x0, #256]
  411e9c:	cbz	x8, 411ea8 <feof@plt+0xedc8>
  411ea0:	blr	x8
  411ea4:	ldr	x0, [x21, #984]
  411ea8:	str	wzr, [x0, #244]
  411eac:	ldp	x20, x19, [sp, #304]
  411eb0:	ldp	x28, x21, [sp, #288]
  411eb4:	ldp	x29, x30, [sp, #272]
  411eb8:	add	sp, sp, #0x140
  411ebc:	ret
  411ec0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  411ec4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  411ec8:	add	x0, x0, #0x580
  411ecc:	add	x2, x2, #0x5c5
  411ed0:	mov	w1, #0x5be                 	// #1470
  411ed4:	bl	40f560 <feof@plt+0xc480>
  411ed8:	sub	sp, sp, #0x1f0
  411edc:	stp	x29, x30, [sp, #448]
  411ee0:	stp	x28, x21, [sp, #464]
  411ee4:	stp	x20, x19, [sp, #480]
  411ee8:	add	x29, sp, #0x1c0
  411eec:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  411ef0:	ldr	x8, [x20, #984]
  411ef4:	stp	q4, q5, [sp, #64]
  411ef8:	stp	q2, q3, [sp, #32]
  411efc:	stp	q0, q1, [sp]
  411f00:	stp	x6, x7, [sp, #168]
  411f04:	stp	x4, x5, [sp, #152]
  411f08:	stp	x2, x3, [sp, #136]
  411f0c:	str	x1, [sp, #128]
  411f10:	stp	q6, q7, [sp, #96]
  411f14:	ldr	w10, [x8, #240]
  411f18:	adrp	x13, 48a000 <_obstack_memory_used@@Base+0x28838>
  411f1c:	mov	x9, #0xffffffffffffffc8    	// #-56
  411f20:	mov	x11, sp
  411f24:	add	w10, w10, #0x1
  411f28:	str	w10, [x8, #240]
  411f2c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  411f30:	ldr	x1, [x13, #2408]
  411f34:	ldr	w2, [x8, #2400]
  411f38:	add	x12, sp, #0x80
  411f3c:	mov	x19, x0
  411f40:	movk	x9, #0xff80, lsl #32
  411f44:	add	x10, x11, #0x80
  411f48:	add	x11, x12, #0x38
  411f4c:	add	x8, x29, #0x30
  411f50:	add	x0, sp, #0xb8
  411f54:	mov	x3, xzr
  411f58:	stp	x10, x9, [x29, #-80]
  411f5c:	stp	x8, x11, [x29, #-96]
  411f60:	add	x21, sp, #0xb8
  411f64:	bl	436a50 <feof@plt+0x33970>
  411f68:	mov	x0, x19
  411f6c:	bl	402cd0 <gettext@plt>
  411f70:	mov	x19, x0
  411f74:	bl	402e70 <__errno_location@plt>
  411f78:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  411f7c:	ldr	w8, [x0]
  411f80:	ldr	x0, [x20, #984]
  411f84:	ldr	d0, [x10, #720]
  411f88:	sub	x9, x29, #0x60
  411f8c:	sub	x1, x29, #0x40
  411f90:	stp	x19, x9, [x29, #-64]
  411f94:	stur	w8, [x29, #-48]
  411f98:	stp	x21, x21, [x29, #-32]
  411f9c:	stur	d0, [x29, #-8]
  411fa0:	bl	41011c <feof@plt+0xd03c>
  411fa4:	add	x0, sp, #0xb8
  411fa8:	bl	436b30 <feof@plt+0x33a50>
  411fac:	ldr	x0, [x20, #984]
  411fb0:	ldr	w8, [x0, #240]
  411fb4:	subs	w8, w8, #0x1
  411fb8:	str	w8, [x0, #240]
  411fbc:	b.ne	411fe0 <feof@plt+0xef00>  // b.any
  411fc0:	ldr	w8, [x0, #244]
  411fc4:	cmp	w8, #0x1
  411fc8:	b.lt	411fdc <feof@plt+0xeefc>  // b.tstop
  411fcc:	ldr	x8, [x0, #256]
  411fd0:	cbz	x8, 411fdc <feof@plt+0xeefc>
  411fd4:	blr	x8
  411fd8:	ldr	x0, [x20, #984]
  411fdc:	str	wzr, [x0, #244]
  411fe0:	ldp	x20, x19, [sp, #480]
  411fe4:	ldp	x28, x21, [sp, #464]
  411fe8:	ldp	x29, x30, [sp, #448]
  411fec:	add	sp, sp, #0x1f0
  411ff0:	ret
  411ff4:	sub	sp, sp, #0x1f0
  411ff8:	stp	x29, x30, [sp, #448]
  411ffc:	stp	x28, x21, [sp, #464]
  412000:	stp	x20, x19, [sp, #480]
  412004:	add	x29, sp, #0x1c0
  412008:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41200c:	ldr	x9, [x20, #984]
  412010:	stp	q4, q5, [sp, #64]
  412014:	stp	q2, q3, [sp, #32]
  412018:	stp	q0, q1, [sp]
  41201c:	stp	x6, x7, [sp, #168]
  412020:	stp	x4, x5, [sp, #152]
  412024:	stp	x2, x3, [sp, #136]
  412028:	stp	q6, q7, [sp, #96]
  41202c:	ldr	w12, [x9, #240]
  412030:	mov	x19, x1
  412034:	mov	w8, w0
  412038:	mov	x10, #0xffffffffffffffd0    	// #-48
  41203c:	add	w12, w12, #0x1
  412040:	str	w12, [x9, #240]
  412044:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  412048:	ldr	x1, [x9, #2408]
  41204c:	mov	x11, sp
  412050:	add	x13, sp, #0x88
  412054:	movk	x10, #0xff80, lsl #32
  412058:	add	x11, x11, #0x80
  41205c:	add	x13, x13, #0x30
  412060:	add	x9, x29, #0x30
  412064:	add	x0, sp, #0xb8
  412068:	mov	w2, w8
  41206c:	mov	x3, xzr
  412070:	stp	x11, x10, [x29, #-80]
  412074:	stp	x9, x13, [x29, #-96]
  412078:	add	x21, sp, #0xb8
  41207c:	bl	436a50 <feof@plt+0x33970>
  412080:	mov	x0, x19
  412084:	bl	402cd0 <gettext@plt>
  412088:	mov	x19, x0
  41208c:	bl	402e70 <__errno_location@plt>
  412090:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  412094:	ldr	w8, [x0]
  412098:	ldr	x0, [x20, #984]
  41209c:	ldr	d0, [x10, #720]
  4120a0:	sub	x9, x29, #0x60
  4120a4:	sub	x1, x29, #0x40
  4120a8:	stp	x19, x9, [x29, #-64]
  4120ac:	stur	w8, [x29, #-48]
  4120b0:	stp	x21, x21, [x29, #-32]
  4120b4:	stur	d0, [x29, #-8]
  4120b8:	bl	41011c <feof@plt+0xd03c>
  4120bc:	add	x0, sp, #0xb8
  4120c0:	bl	436b30 <feof@plt+0x33a50>
  4120c4:	ldr	x0, [x20, #984]
  4120c8:	ldr	w8, [x0, #240]
  4120cc:	subs	w8, w8, #0x1
  4120d0:	str	w8, [x0, #240]
  4120d4:	b.ne	4120f8 <feof@plt+0xf018>  // b.any
  4120d8:	ldr	w8, [x0, #244]
  4120dc:	cmp	w8, #0x1
  4120e0:	b.lt	4120f4 <feof@plt+0xf014>  // b.tstop
  4120e4:	ldr	x8, [x0, #256]
  4120e8:	cbz	x8, 4120f4 <feof@plt+0xf014>
  4120ec:	blr	x8
  4120f0:	ldr	x0, [x20, #984]
  4120f4:	str	wzr, [x0, #244]
  4120f8:	ldp	x20, x19, [sp, #480]
  4120fc:	ldp	x28, x21, [sp, #464]
  412100:	ldp	x29, x30, [sp, #448]
  412104:	add	sp, sp, #0x1f0
  412108:	ret
  41210c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  412110:	ldr	x8, [x8, #984]
  412114:	ldr	w9, [x8, #24]
  412118:	cbz	w9, 412124 <feof@plt+0xf044>
  41211c:	mov	w0, #0x1                   	// #1
  412120:	ret
  412124:	ldr	w8, [x8, #28]
  412128:	cmp	w8, #0x0
  41212c:	cset	w0, ne  // ne = any
  412130:	ret
  412134:	sub	sp, sp, #0x1a0
  412138:	stp	x29, x30, [sp, #384]
  41213c:	stp	x28, x19, [sp, #400]
  412140:	add	x29, sp, #0x180
  412144:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  412148:	ldr	x9, [x9, #984]
  41214c:	stp	q4, q5, [sp, #64]
  412150:	stp	q2, q3, [sp, #32]
  412154:	stp	q0, q1, [sp]
  412158:	stp	x6, x7, [sp, #168]
  41215c:	stp	x4, x5, [sp, #152]
  412160:	stp	x2, x3, [sp, #136]
  412164:	stp	q6, q7, [sp, #96]
  412168:	ldr	w12, [x9, #240]
  41216c:	mov	x19, x1
  412170:	mov	w8, w0
  412174:	mov	x10, #0xffffffffffffffd0    	// #-48
  412178:	add	w12, w12, #0x1
  41217c:	str	w12, [x9, #240]
  412180:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  412184:	ldr	x1, [x9, #2408]
  412188:	mov	x11, sp
  41218c:	add	x13, sp, #0x88
  412190:	movk	x10, #0xff80, lsl #32
  412194:	add	x11, x11, #0x80
  412198:	add	x13, x13, #0x30
  41219c:	add	x9, x29, #0x20
  4121a0:	add	x0, sp, #0xb8
  4121a4:	mov	w2, w8
  4121a8:	mov	x3, xzr
  4121ac:	stp	x11, x10, [x29, #-16]
  4121b0:	stp	x9, x13, [x29, #-32]
  4121b4:	bl	436a50 <feof@plt+0x33970>
  4121b8:	add	x0, sp, #0xb8
  4121bc:	sub	x3, x29, #0x20
  4121c0:	mov	w1, #0xffffffff            	// #-1
  4121c4:	mov	w4, #0x2                   	// #2
  4121c8:	mov	x2, x19
  4121cc:	bl	410a68 <feof@plt+0xd988>
  4121d0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4121d4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4121d8:	add	x0, x0, #0x580
  4121dc:	add	x2, x2, #0x5ce
  4121e0:	mov	w1, #0x5f6                 	// #1526
  4121e4:	bl	40f560 <feof@plt+0xc480>
  4121e8:	sub	sp, sp, #0x1a0
  4121ec:	stp	x29, x30, [sp, #384]
  4121f0:	stp	x28, x19, [sp, #400]
  4121f4:	add	x29, sp, #0x180
  4121f8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4121fc:	ldr	x8, [x8, #984]
  412200:	stp	q4, q5, [sp, #64]
  412204:	stp	q2, q3, [sp, #32]
  412208:	stp	q0, q1, [sp]
  41220c:	stp	x6, x7, [sp, #168]
  412210:	stp	x4, x5, [sp, #152]
  412214:	stp	x2, x3, [sp, #136]
  412218:	str	x1, [sp, #128]
  41221c:	stp	q6, q7, [sp, #96]
  412220:	ldr	w13, [x8, #240]
  412224:	adrp	x12, 48a000 <_obstack_memory_used@@Base+0x28838>
  412228:	adrp	x14, 48a000 <_obstack_memory_used@@Base+0x28838>
  41222c:	mov	x9, #0xffffffffffffffc8    	// #-56
  412230:	add	w13, w13, #0x1
  412234:	str	w13, [x8, #240]
  412238:	ldr	x1, [x12, #2408]
  41223c:	ldr	w2, [x14, #2400]
  412240:	mov	x10, sp
  412244:	add	x11, sp, #0x80
  412248:	mov	x19, x0
  41224c:	movk	x9, #0xff80, lsl #32
  412250:	add	x10, x10, #0x80
  412254:	add	x11, x11, #0x38
  412258:	add	x8, x29, #0x20
  41225c:	add	x0, sp, #0xb8
  412260:	mov	x3, xzr
  412264:	stp	x10, x9, [x29, #-16]
  412268:	stp	x8, x11, [x29, #-32]
  41226c:	bl	436a50 <feof@plt+0x33970>
  412270:	add	x0, sp, #0xb8
  412274:	sub	x3, x29, #0x20
  412278:	mov	w1, #0xffffffff            	// #-1
  41227c:	mov	w4, #0x3                   	// #3
  412280:	mov	x2, x19
  412284:	bl	410a68 <feof@plt+0xd988>
  412288:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41228c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  412290:	add	x0, x0, #0x580
  412294:	add	x2, x2, #0x5da
  412298:	mov	w1, #0x607                 	// #1543
  41229c:	bl	40f560 <feof@plt+0xc480>
  4122a0:	sub	sp, sp, #0x1a0
  4122a4:	stp	x29, x30, [sp, #384]
  4122a8:	stp	x28, x19, [sp, #400]
  4122ac:	add	x29, sp, #0x180
  4122b0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4122b4:	ldr	x8, [x8, #984]
  4122b8:	stp	q4, q5, [sp, #64]
  4122bc:	stp	q2, q3, [sp, #32]
  4122c0:	stp	q0, q1, [sp]
  4122c4:	stp	x6, x7, [sp, #168]
  4122c8:	stp	x4, x5, [sp, #152]
  4122cc:	stp	x2, x3, [sp, #136]
  4122d0:	str	x1, [sp, #128]
  4122d4:	stp	q6, q7, [sp, #96]
  4122d8:	ldr	w13, [x8, #240]
  4122dc:	adrp	x12, 48a000 <_obstack_memory_used@@Base+0x28838>
  4122e0:	adrp	x14, 48a000 <_obstack_memory_used@@Base+0x28838>
  4122e4:	mov	x9, #0xffffffffffffffc8    	// #-56
  4122e8:	add	w13, w13, #0x1
  4122ec:	str	w13, [x8, #240]
  4122f0:	ldr	x1, [x12, #2408]
  4122f4:	ldr	w2, [x14, #2400]
  4122f8:	mov	x10, sp
  4122fc:	add	x11, sp, #0x80
  412300:	mov	x19, x0
  412304:	movk	x9, #0xff80, lsl #32
  412308:	add	x10, x10, #0x80
  41230c:	add	x11, x11, #0x38
  412310:	add	x8, x29, #0x20
  412314:	add	x0, sp, #0xb8
  412318:	mov	x3, xzr
  41231c:	stp	x10, x9, [x29, #-16]
  412320:	stp	x8, x11, [x29, #-32]
  412324:	bl	436a50 <feof@plt+0x33970>
  412328:	add	x0, sp, #0xb8
  41232c:	sub	x3, x29, #0x20
  412330:	mov	w1, #0xffffffff            	// #-1
  412334:	mov	w4, #0xd                   	// #13
  412338:	mov	x2, x19
  41233c:	bl	410a68 <feof@plt+0xd988>
  412340:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  412344:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  412348:	add	x0, x0, #0x580
  41234c:	add	x2, x2, #0x5e9
  412350:	mov	w1, #0x617                 	// #1559
  412354:	bl	40f560 <feof@plt+0xc480>
  412358:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41235c:	ldr	x8, [x8, #984]
  412360:	ldr	w9, [x8, #240]
  412364:	add	w9, w9, #0x1
  412368:	str	w9, [x8, #240]
  41236c:	ret
  412370:	stp	x29, x30, [sp, #-32]!
  412374:	str	x19, [sp, #16]
  412378:	mov	x29, sp
  41237c:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  412380:	ldr	x0, [x19, #984]
  412384:	ldr	w8, [x0, #240]
  412388:	subs	w8, w8, #0x1
  41238c:	str	w8, [x0, #240]
  412390:	b.ne	4123b4 <feof@plt+0xf2d4>  // b.any
  412394:	ldr	w8, [x0, #244]
  412398:	cmp	w8, #0x1
  41239c:	b.lt	4123b0 <feof@plt+0xf2d0>  // b.tstop
  4123a0:	ldr	x8, [x0, #256]
  4123a4:	cbz	x8, 4123b0 <feof@plt+0xf2d0>
  4123a8:	blr	x8
  4123ac:	ldr	x0, [x19, #984]
  4123b0:	str	wzr, [x0, #244]
  4123b4:	ldr	x19, [sp, #16]
  4123b8:	ldp	x29, x30, [sp], #32
  4123bc:	ret
  4123c0:	stp	x29, x30, [sp, #-80]!
  4123c4:	stp	x26, x25, [sp, #16]
  4123c8:	stp	x24, x23, [sp, #32]
  4123cc:	stp	x22, x21, [sp, #48]
  4123d0:	stp	x20, x19, [sp, #64]
  4123d4:	mov	x29, sp
  4123d8:	cbz	x0, 4124e4 <feof@plt+0xf404>
  4123dc:	mov	x20, x1
  4123e0:	cbz	x1, 4124fc <feof@plt+0xf41c>
  4123e4:	mov	w1, #0x22                  	// #34
  4123e8:	mov	x19, x0
  4123ec:	bl	41803c <feof@plt+0x14f5c>
  4123f0:	ldrb	w8, [x20]
  4123f4:	cbz	w8, 4124c4 <feof@plt+0xf3e4>
  4123f8:	add	x25, x20, #0x1
  4123fc:	adrp	x20, 463000 <_obstack_memory_used@@Base+0x1838>
  412400:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1838>
  412404:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  412408:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x2838>
  41240c:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  412410:	adrp	x24, 464000 <_obstack_memory_used@@Base+0x2838>
  412414:	add	x20, x20, #0xf4e
  412418:	add	x21, x21, #0xf42
  41241c:	add	x26, x26, #0xe98
  412420:	add	x22, x22, #0x723
  412424:	add	x23, x23, #0xf3f
  412428:	add	x24, x24, #0x720
  41242c:	b	412444 <feof@plt+0xf364>
  412430:	mov	x0, x19
  412434:	mov	x1, x23
  412438:	bl	419e20 <feof@plt+0x16d40>
  41243c:	ldrb	w8, [x25], #1
  412440:	cbz	w8, 4124c4 <feof@plt+0xf3e4>
  412444:	and	w1, w8, #0xff
  412448:	cmp	w1, #0x21
  41244c:	b.gt	41246c <feof@plt+0xf38c>
  412450:	cmp	w1, #0x9
  412454:	b.eq	4124ac <feof@plt+0xf3cc>  // b.none
  412458:	cmp	w1, #0xa
  41245c:	b.ne	412488 <feof@plt+0xf3a8>  // b.any
  412460:	mov	x0, x19
  412464:	mov	x1, x21
  412468:	b	412438 <feof@plt+0xf358>
  41246c:	cmp	w1, #0x22
  412470:	b.eq	412430 <feof@plt+0xf350>  // b.none
  412474:	cmp	w1, #0x5c
  412478:	b.ne	412488 <feof@plt+0xf3a8>  // b.any
  41247c:	mov	x0, x19
  412480:	mov	x1, x24
  412484:	b	412438 <feof@plt+0xf358>
  412488:	ldrh	w8, [x26, w1, uxtw #1]
  41248c:	tbnz	w8, #4, 4124b8 <feof@plt+0xf3d8>
  412490:	lsr	w2, w1, #6
  412494:	ubfx	w3, w1, #3, #3
  412498:	and	w4, w1, #0x7
  41249c:	mov	x0, x19
  4124a0:	mov	x1, x22
  4124a4:	bl	41a658 <feof@plt+0x17578>
  4124a8:	b	41243c <feof@plt+0xf35c>
  4124ac:	mov	x0, x19
  4124b0:	mov	x1, x20
  4124b4:	b	412438 <feof@plt+0xf358>
  4124b8:	mov	x0, x19
  4124bc:	bl	41803c <feof@plt+0x14f5c>
  4124c0:	b	41243c <feof@plt+0xf35c>
  4124c4:	mov	x0, x19
  4124c8:	ldp	x20, x19, [sp, #64]
  4124cc:	ldp	x22, x21, [sp, #48]
  4124d0:	ldp	x24, x23, [sp, #32]
  4124d4:	ldp	x26, x25, [sp, #16]
  4124d8:	mov	w1, #0x22                  	// #34
  4124dc:	ldp	x29, x30, [sp], #80
  4124e0:	b	41803c <feof@plt+0x14f5c>
  4124e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4124e8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4124ec:	add	x0, x0, #0x580
  4124f0:	add	x2, x2, #0x70b
  4124f4:	mov	w1, #0x2f5                 	// #757
  4124f8:	bl	40f560 <feof@plt+0xc480>
  4124fc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  412500:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  412504:	add	x0, x0, #0x580
  412508:	add	x2, x2, #0x70b
  41250c:	mov	w1, #0x2f6                 	// #758
  412510:	bl	40f560 <feof@plt+0xc480>
  412514:	stp	x29, x30, [sp, #-64]!
  412518:	str	x23, [sp, #16]
  41251c:	stp	x22, x21, [sp, #32]
  412520:	stp	x20, x19, [sp, #48]
  412524:	mov	x29, sp
  412528:	cbz	x1, 4125f8 <feof@plt+0xf518>
  41252c:	ldr	x8, [x0, #16]
  412530:	mov	x20, x1
  412534:	mov	x19, x0
  412538:	cbz	x8, 412544 <feof@plt+0xf464>
  41253c:	ldr	x0, [x20]
  412540:	blr	x8
  412544:	ldr	x8, [x19, #24]
  412548:	cbz	x8, 412554 <feof@plt+0xf474>
  41254c:	ldr	x0, [x20, #8]
  412550:	blr	x8
  412554:	mov	x21, xzr
  412558:	str	xzr, [x20, #32]
  41255c:	ldr	x9, [x20, #16]
  412560:	cbz	x9, 412594 <feof@plt+0xf4b4>
  412564:	ldr	x8, [x19, #16]
  412568:	cbz	x8, 412574 <feof@plt+0xf494>
  41256c:	ldr	x0, [x9]
  412570:	blr	x8
  412574:	ldr	x8, [x19, #24]
  412578:	cbz	x8, 412588 <feof@plt+0xf4a8>
  41257c:	ldr	x9, [x20, #16]
  412580:	ldr	x0, [x9, #8]
  412584:	blr	x8
  412588:	ldr	x8, [x20, #16]
  41258c:	str	x21, [x8, #32]
  412590:	ldr	x21, [x20, #16]
  412594:	ldr	x9, [x20, #24]
  412598:	cbz	x9, 4125d4 <feof@plt+0xf4f4>
  41259c:	ldr	x8, [x19, #16]
  4125a0:	cbz	x8, 4125ac <feof@plt+0xf4cc>
  4125a4:	ldr	x0, [x9]
  4125a8:	blr	x8
  4125ac:	ldr	x8, [x19, #24]
  4125b0:	cbz	x8, 4125c0 <feof@plt+0xf4e0>
  4125b4:	ldr	x9, [x20, #24]
  4125b8:	ldr	x0, [x9, #8]
  4125bc:	blr	x8
  4125c0:	ldr	x8, [x20, #24]
  4125c4:	str	x21, [x8, #32]
  4125c8:	ldr	x22, [x20, #24]
  4125cc:	mov	x21, x22
  4125d0:	b	4125d8 <feof@plt+0xf4f8>
  4125d4:	mov	x22, x21
  4125d8:	ldr	x23, [x20, #32]
  4125dc:	mov	x0, x20
  4125e0:	bl	402d00 <_ZdlPv@plt>
  4125e4:	mov	x20, x23
  4125e8:	cbnz	x23, 41255c <feof@plt+0xf47c>
  4125ec:	mov	x21, xzr
  4125f0:	mov	x20, x22
  4125f4:	cbnz	x22, 41255c <feof@plt+0xf47c>
  4125f8:	ldp	x20, x19, [sp, #48]
  4125fc:	ldp	x22, x21, [sp, #32]
  412600:	ldr	x23, [sp, #16]
  412604:	ldp	x29, x30, [sp], #64
  412608:	ret
  41260c:	stp	x29, x30, [sp, #-48]!
  412610:	stp	x22, x21, [sp, #16]
  412614:	stp	x20, x19, [sp, #32]
  412618:	mov	x29, sp
  41261c:	tbz	w0, #0, 412674 <feof@plt+0xf594>
  412620:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  412624:	ldr	x0, [x8, #992]
  412628:	cbz	x0, 412674 <feof@plt+0xf594>
  41262c:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  412630:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x838>
  412634:	mov	x20, x2
  412638:	mov	x21, x1
  41263c:	add	x22, x22, #0x3f8
  412640:	add	x19, x19, #0xbb5
  412644:	b	412650 <feof@plt+0xf570>
  412648:	ldr	x0, [x22], #24
  41264c:	cbz	x0, 41267c <feof@plt+0xf59c>
  412650:	ldurb	w8, [x22, #-8]
  412654:	cmp	x8, x20
  412658:	b.ne	412648 <feof@plt+0xf568>  // b.any
  41265c:	mov	x1, x21
  412660:	mov	x2, x20
  412664:	bl	403090 <bcmp@plt>
  412668:	cbnz	w0, 412648 <feof@plt+0xf568>
  41266c:	ldur	x19, [x22, #-16]
  412670:	b	41267c <feof@plt+0xf59c>
  412674:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x838>
  412678:	add	x19, x19, #0xbb5
  41267c:	mov	x0, x19
  412680:	ldp	x20, x19, [sp, #32]
  412684:	ldp	x22, x21, [sp, #16]
  412688:	ldp	x29, x30, [sp], #48
  41268c:	ret
  412690:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x838>
  412694:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  412698:	add	x8, x8, #0xbb5
  41269c:	add	x9, x9, #0xba7
  4126a0:	tst	w0, #0x1
  4126a4:	csel	x0, x9, x8, ne  // ne = any
  4126a8:	ret
  4126ac:	stp	x29, x30, [sp, #-16]!
  4126b0:	mov	x29, sp
  4126b4:	cbz	w0, 412704 <feof@plt+0xf624>
  4126b8:	cmp	w0, #0x2
  4126bc:	b.eq	4126d0 <feof@plt+0xf5f0>  // b.none
  4126c0:	cmp	w0, #0x1
  4126c4:	b.ne	412710 <feof@plt+0xf630>  // b.any
  4126c8:	ldp	x29, x30, [sp], #16
  4126cc:	b	412728 <feof@plt+0xf648>
  4126d0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4126d4:	add	x0, x0, #0x856
  4126d8:	bl	402f40 <getenv@plt>
  4126dc:	cbz	x0, 412704 <feof@plt+0xf624>
  4126e0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4126e4:	add	x1, x1, #0x85b
  4126e8:	bl	402ed0 <strcmp@plt>
  4126ec:	cbz	w0, 412704 <feof@plt+0xf624>
  4126f0:	mov	w0, #0x2                   	// #2
  4126f4:	bl	402b80 <isatty@plt>
  4126f8:	cbz	w0, 412704 <feof@plt+0xf624>
  4126fc:	ldp	x29, x30, [sp], #16
  412700:	b	412728 <feof@plt+0xf648>
  412704:	mov	w0, wzr
  412708:	ldp	x29, x30, [sp], #16
  41270c:	ret
  412710:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  412714:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  412718:	add	x0, x0, #0x76a
  41271c:	add	x2, x2, #0x787
  412720:	mov	w1, #0xec                  	// #236
  412724:	bl	40f560 <feof@plt+0xc480>
  412728:	stp	x29, x30, [sp, #-96]!
  41272c:	stp	x28, x27, [sp, #16]
  412730:	stp	x26, x25, [sp, #32]
  412734:	stp	x24, x23, [sp, #48]
  412738:	stp	x22, x21, [sp, #64]
  41273c:	stp	x20, x19, [sp, #80]
  412740:	mov	x29, sp
  412744:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  412748:	add	x0, x0, #0x84b
  41274c:	bl	402f40 <getenv@plt>
  412750:	cbz	x0, 4128a0 <feof@plt+0xf7c0>
  412754:	ldrb	w24, [x0]
  412758:	mov	x19, x0
  41275c:	cbz	w24, 4128a8 <feof@plt+0xf7c8>
  412760:	adrp	x26, 48a000 <_obstack_memory_used@@Base+0x28838>
  412764:	mov	w27, #0x1b6d                	// #7021
  412768:	mov	x22, xzr
  41276c:	mov	x21, xzr
  412770:	mov	x20, xzr
  412774:	add	x26, x26, #0x3e0
  412778:	movk	w27, #0x4b5b, lsl #16
  41277c:	mov	w28, #0x1                   	// #1
  412780:	mov	x23, x19
  412784:	b	41278c <feof@plt+0xf6ac>
  412788:	ldrb	w24, [x19, #1]!
  41278c:	ands	w8, w24, #0xff
  412790:	b.eq	4127a4 <feof@plt+0xf6c4>  // b.none
  412794:	cmp	w8, #0x3d
  412798:	b.eq	412860 <feof@plt+0xf780>  // b.none
  41279c:	cmp	w8, #0x3a
  4127a0:	b.ne	412880 <feof@plt+0xf7a0>  // b.any
  4127a4:	ldr	x0, [x26]
  4127a8:	sub	x8, x19, x22
  4127ac:	sub	x9, x19, x23
  4127b0:	cmp	x22, #0x0
  4127b4:	csel	x21, x21, x9, ne  // ne = any
  4127b8:	csel	x20, x8, x20, ne  // ne = any
  4127bc:	mov	x25, x26
  4127c0:	cbnz	x0, 4127d0 <feof@plt+0xf6f0>
  4127c4:	b	4127ec <feof@plt+0xf70c>
  4127c8:	ldr	x0, [x25, #24]!
  4127cc:	cbz	x0, 4127ec <feof@plt+0xf70c>
  4127d0:	ldrb	w8, [x25, #16]
  4127d4:	cmp	x21, x8
  4127d8:	b.ne	4127c8 <feof@plt+0xf6e8>  // b.any
  4127dc:	mov	x1, x23
  4127e0:	mov	x2, x21
  4127e4:	bl	403090 <bcmp@plt>
  4127e8:	cbnz	w0, 4127c8 <feof@plt+0xf6e8>
  4127ec:	cbz	x22, 412844 <feof@plt+0xf764>
  4127f0:	ldr	x0, [x25, #8]
  4127f4:	cbz	x0, 412844 <feof@plt+0xf764>
  4127f8:	ldrb	w8, [x25, #17]
  4127fc:	cbz	w8, 412804 <feof@plt+0xf724>
  412800:	bl	402b20 <free@plt>
  412804:	add	x0, x20, #0x7
  412808:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  41280c:	mov	x24, x0
  412810:	mov	w8, #0x5b1b                	// #23323
  412814:	strh	w8, [x24], #2
  412818:	mov	x23, x0
  41281c:	mov	x0, x24
  412820:	mov	x1, x22
  412824:	mov	x2, x20
  412828:	bl	4029c0 <memcpy@plt>
  41282c:	add	x8, x24, x20
  412830:	str	x23, [x25, #8]
  412834:	str	w27, [x8]
  412838:	strb	wzr, [x8, #4]
  41283c:	strb	w28, [x25, #17]
  412840:	ldrb	w24, [x19]
  412844:	tst	w24, #0xff
  412848:	b.eq	4128a0 <feof@plt+0xf7c0>  // b.none
  41284c:	add	x19, x19, #0x1
  412850:	ldrb	w24, [x19]
  412854:	mov	x22, xzr
  412858:	mov	x23, x19
  41285c:	b	41278c <feof@plt+0xf6ac>
  412860:	subs	x21, x19, x23
  412864:	mov	w0, #0x1                   	// #1
  412868:	b.eq	4128ac <feof@plt+0xf7cc>  // b.none
  41286c:	cbnz	x22, 4128ac <feof@plt+0xf7cc>
  412870:	add	x19, x19, #0x1
  412874:	ldrb	w24, [x19]
  412878:	mov	x22, x19
  41287c:	b	41278c <feof@plt+0xf6ac>
  412880:	cbz	x22, 412788 <feof@plt+0xf6a8>
  412884:	and	w8, w24, #0xff
  412888:	cmp	w8, #0x3b
  41288c:	b.eq	412788 <feof@plt+0xf6a8>  // b.none
  412890:	sub	w8, w24, #0x30
  412894:	and	w8, w8, #0xff
  412898:	cmp	w8, #0x9
  41289c:	b.ls	412788 <feof@plt+0xf6a8>  // b.plast
  4128a0:	mov	w0, #0x1                   	// #1
  4128a4:	b	4128ac <feof@plt+0xf7cc>
  4128a8:	mov	w0, wzr
  4128ac:	ldp	x20, x19, [sp, #80]
  4128b0:	ldp	x22, x21, [sp, #64]
  4128b4:	ldp	x24, x23, [sp, #48]
  4128b8:	ldp	x26, x25, [sp, #32]
  4128bc:	ldp	x28, x27, [sp, #16]
  4128c0:	ldp	x29, x30, [sp], #96
  4128c4:	ret
  4128c8:	sub	sp, sp, #0xe0
  4128cc:	stp	x29, x30, [sp, #176]
  4128d0:	str	x21, [sp, #192]
  4128d4:	stp	x20, x19, [sp, #208]
  4128d8:	add	x29, sp, #0xb0
  4128dc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4128e0:	mov	w20, w1
  4128e4:	ldr	x1, [x8, #984]
  4128e8:	mov	x21, x0
  4128ec:	add	x0, sp, #0x18
  4128f0:	mov	w3, #0x4                   	// #4
  4128f4:	mov	x2, x21
  4128f8:	bl	4129d4 <feof@plt+0xf8f4>
  4128fc:	mov	w8, #0x1                   	// #1
  412900:	add	x0, sp, #0x18
  412904:	add	x1, sp, #0x8
  412908:	mov	w3, #0x1                   	// #1
  41290c:	mov	w2, wzr
  412910:	stp	w20, w8, [sp, #8]
  412914:	bl	413b4c <feof@plt+0x10a6c>
  412918:	mov	w19, wzr
  41291c:	tbz	w0, #0, 412938 <feof@plt+0xf858>
  412920:	mov	w2, #0x1                   	// #1
  412924:	mov	x0, x21
  412928:	mov	w1, w20
  41292c:	mov	x3, xzr
  412930:	mov	w19, #0x1                   	// #1
  412934:	bl	436a88 <feof@plt+0x339a8>
  412938:	ldr	x0, [sp, #160]
  41293c:	cbz	x0, 412950 <feof@plt+0xf870>
  412940:	ldr	w8, [x0]
  412944:	tbnz	w8, #31, 41296c <feof@plt+0xf88c>
  412948:	bl	402b20 <free@plt>
  41294c:	str	xzr, [sp, #160]
  412950:	ldr	x0, [sp, #152]
  412954:	cbz	x0, 412980 <feof@plt+0xf8a0>
  412958:	ldr	w8, [x0]
  41295c:	tbnz	w8, #31, 41297c <feof@plt+0xf89c>
  412960:	bl	402b20 <free@plt>
  412964:	str	xzr, [sp, #152]
  412968:	b	412980 <feof@plt+0xf8a0>
  41296c:	str	wzr, [x0, #4]
  412970:	ldr	x0, [sp, #152]
  412974:	cbnz	x0, 412958 <feof@plt+0xf878>
  412978:	b	412980 <feof@plt+0xf8a0>
  41297c:	str	wzr, [x0, #4]
  412980:	ldr	x0, [sp, #144]
  412984:	cbz	x0, 4129a0 <feof@plt+0xf8c0>
  412988:	ldr	w8, [x0]
  41298c:	tbnz	w8, #31, 41299c <feof@plt+0xf8bc>
  412990:	bl	402b20 <free@plt>
  412994:	str	xzr, [sp, #144]
  412998:	b	4129a0 <feof@plt+0xf8c0>
  41299c:	str	wzr, [x0, #4]
  4129a0:	ldr	w8, [sp, #92]
  4129a4:	cmn	w8, #0x1
  4129a8:	b.eq	4129bc <feof@plt+0xf8dc>  // b.none
  4129ac:	ldr	x8, [sp, #80]
  4129b0:	ldr	x1, [sp, #128]
  4129b4:	ldr	x0, [x8]
  4129b8:	bl	419e20 <feof@plt+0x16d40>
  4129bc:	mov	w0, w19
  4129c0:	ldp	x20, x19, [sp, #208]
  4129c4:	ldr	x21, [sp, #192]
  4129c8:	ldp	x29, x30, [sp, #176]
  4129cc:	add	sp, sp, #0xe0
  4129d0:	ret
  4129d4:	sub	sp, sp, #0x90
  4129d8:	stp	x29, x30, [sp, #48]
  4129dc:	stp	x28, x27, [sp, #64]
  4129e0:	stp	x26, x25, [sp, #80]
  4129e4:	stp	x24, x23, [sp, #96]
  4129e8:	stp	x22, x21, [sp, #112]
  4129ec:	stp	x20, x19, [sp, #128]
  4129f0:	add	x29, sp, #0x30
  4129f4:	str	x1, [x0]
  4129f8:	ldr	x8, [x1]
  4129fc:	mov	x20, x1
  412a00:	mov	x19, x0
  412a04:	mov	w1, wzr
  412a08:	str	x8, [x0, #8]
  412a0c:	mov	x0, x2
  412a10:	mov	w22, w3
  412a14:	mov	x21, x2
  412a18:	bl	436c0c <feof@plt+0x33b2c>
  412a1c:	ldr	w8, [x0]
  412a20:	mov	x0, x21
  412a24:	mov	w1, wzr
  412a28:	str	w8, [x19, #16]
  412a2c:	add	x8, x19, #0x18
  412a30:	bl	436c30 <feof@plt+0x33b50>
  412a34:	mov	w8, #0xffffffff            	// #-1
  412a38:	str	x20, [x19, #56]
  412a3c:	stp	w22, w8, [x19, #64]
  412a40:	ldr	x8, [x20]
  412a44:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  412a48:	add	x1, x1, #0x7b9
  412a4c:	mov	w2, #0x6                   	// #6
  412a50:	ldrb	w0, [x8, #67]
  412a54:	bl	41260c <feof@plt+0xf52c>
  412a58:	ldr	x8, [x19, #56]
  412a5c:	str	x0, [x19, #72]
  412a60:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  412a64:	add	x1, x1, #0x7c9
  412a68:	ldr	x8, [x8]
  412a6c:	mov	w2, #0x6                   	// #6
  412a70:	ldrb	w0, [x8, #67]
  412a74:	bl	41260c <feof@plt+0xf52c>
  412a78:	ldr	x8, [x19, #56]
  412a7c:	str	x0, [x19, #80]
  412a80:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  412a84:	add	x1, x1, #0x7e2
  412a88:	ldr	x8, [x8]
  412a8c:	mov	w2, #0xc                   	// #12
  412a90:	ldrb	w0, [x8, #67]
  412a94:	bl	41260c <feof@plt+0xf52c>
  412a98:	ldr	x8, [x19, #56]
  412a9c:	str	x0, [x19, #88]
  412aa0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  412aa4:	add	x1, x1, #0x7ef
  412aa8:	ldr	x8, [x8]
  412aac:	mov	w2, #0xc                   	// #12
  412ab0:	ldrb	w0, [x8, #67]
  412ab4:	bl	41260c <feof@plt+0xf52c>
  412ab8:	str	x0, [x19, #96]
  412abc:	ldr	x8, [x20]
  412ac0:	ldrb	w0, [x8, #67]
  412ac4:	bl	412690 <feof@plt+0xf5b0>
  412ac8:	str	x0, [x19, #104]
  412acc:	ldrb	w8, [x20, #221]
  412ad0:	str	x20, [sp, #8]
  412ad4:	strb	w8, [x19, #112]
  412ad8:	ldrb	w8, [x20, #222]
  412adc:	strb	w8, [x19, #113]
  412ae0:	ldrb	w8, [x20, #223]
  412ae4:	strb	w8, [x19, #114]
  412ae8:	ldr	w20, [x21, #8]
  412aec:	str	xzr, [x19, #120]
  412af0:	cbz	w20, 412b14 <feof@plt+0xfa34>
  412af4:	mov	w8, #0x28                  	// #40
  412af8:	orr	x9, xzr, #0x8
  412afc:	madd	x1, x20, x8, x9
  412b00:	mov	x0, xzr
  412b04:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412b08:	and	w8, w20, #0x7fffffff
  412b0c:	str	x0, [x19, #120]
  412b10:	stp	w8, wzr, [x0]
  412b14:	ldr	w20, [x21, #120]
  412b18:	str	xzr, [x19, #128]
  412b1c:	cbz	w20, 412b3c <feof@plt+0xfa5c>
  412b20:	lsl	x8, x20, #3
  412b24:	add	x1, x8, #0x8
  412b28:	mov	x0, xzr
  412b2c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412b30:	and	w8, w20, #0x7fffffff
  412b34:	str	x0, [x19, #128]
  412b38:	stp	w8, wzr, [x0]
  412b3c:	ldr	w8, [x21, #8]
  412b40:	str	xzr, [x19, #136]
  412b44:	adds	w20, w8, #0x1
  412b48:	b.cs	412b6c <feof@plt+0xfa8c>  // b.hs, b.nlast
  412b4c:	mov	w8, w20
  412b50:	lsl	x8, x8, #3
  412b54:	add	x1, x8, #0x8
  412b58:	mov	x0, xzr
  412b5c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412b60:	and	w8, w20, #0x7fffffff
  412b64:	str	x0, [x19, #136]
  412b68:	stp	w8, wzr, [x0]
  412b6c:	str	xzr, [x19, #144]
  412b70:	ldr	w8, [x21, #8]
  412b74:	cbz	w8, 412bac <feof@plt+0xfacc>
  412b78:	mov	w22, wzr
  412b7c:	mov	x0, x21
  412b80:	mov	w1, w22
  412b84:	bl	436c0c <feof@plt+0x33b2c>
  412b88:	mov	x1, x0
  412b8c:	mov	x0, x19
  412b90:	mov	w2, w22
  412b94:	mov	w3, wzr
  412b98:	bl	413b4c <feof@plt+0x10a6c>
  412b9c:	ldr	w8, [x21, #8]
  412ba0:	add	w22, w22, #0x1
  412ba4:	cmp	w22, w8
  412ba8:	b.cc	412b7c <feof@plt+0xfa9c>  // b.lo, b.ul, b.last
  412bac:	ldr	w8, [x21, #120]
  412bb0:	cbz	w8, 412da4 <feof@plt+0xfcc4>
  412bb4:	mov	w23, wzr
  412bb8:	mov	w24, #0x4                   	// #4
  412bbc:	b	412bf0 <feof@plt+0xfb10>
  412bc0:	ldr	x11, [x19, #128]
  412bc4:	str	w20, [x11, #4]
  412bc8:	ldr	x8, [x19, #128]
  412bcc:	ldr	w9, [x8, #4]
  412bd0:	add	w10, w9, #0x1
  412bd4:	add	x9, x8, x9, lsl #3
  412bd8:	str	w10, [x8, #4]
  412bdc:	str	x25, [x9, #8]
  412be0:	ldr	w8, [x21, #120]
  412be4:	add	w23, w23, #0x1
  412be8:	cmp	w23, w8
  412bec:	b.cs	412da4 <feof@plt+0xfcc4>  // b.hs, b.nlast
  412bf0:	cmp	w23, #0x1
  412bf4:	b.gt	412c04 <feof@plt+0xfb24>
  412bf8:	add	x8, x21, w23, sxtw #3
  412bfc:	add	x8, x8, #0x80
  412c00:	b	412c10 <feof@plt+0xfb30>
  412c04:	ldr	x8, [x21, #152]
  412c08:	add	x8, x8, w23, sxtw #3
  412c0c:	sub	x8, x8, #0x10
  412c10:	ldr	x25, [x8]
  412c14:	add	x8, sp, #0x10
  412c18:	ldr	w0, [x25]
  412c1c:	bl	41dba0 <feof@plt+0x1aac0>
  412c20:	ldr	x8, [sp, #16]
  412c24:	ldr	x9, [x19, #24]
  412c28:	cmp	x8, x9
  412c2c:	b.ne	412be0 <feof@plt+0xfb00>  // b.any
  412c30:	ldr	w0, [x25, #4]
  412c34:	add	x8, sp, #0x10
  412c38:	bl	41dba0 <feof@plt+0x1aac0>
  412c3c:	ldr	x8, [sp, #16]
  412c40:	ldr	x9, [x19, #24]
  412c44:	cmp	x8, x9
  412c48:	b.ne	412be0 <feof@plt+0xfb00>  // b.any
  412c4c:	ldr	x26, [x19, #128]
  412c50:	cbz	x26, 412c98 <feof@plt+0xfbb8>
  412c54:	ldp	w8, w9, [x26]
  412c58:	and	w0, w8, #0x7fffffff
  412c5c:	cmp	w0, w9
  412c60:	b.ne	412bc8 <feof@plt+0xfae8>  // b.any
  412c64:	tbnz	w8, #31, 412ca8 <feof@plt+0xfbc8>
  412c68:	add	w1, w0, #0x1
  412c6c:	bl	41bd34 <feof@plt+0x18c54>
  412c70:	ldr	x8, [x19, #128]
  412c74:	mov	w9, w0
  412c78:	lsl	x9, x9, #3
  412c7c:	mov	w22, w0
  412c80:	add	x1, x9, #0x8
  412c84:	mov	w20, wzr
  412c88:	cbz	x8, 412d98 <feof@plt+0xfcb8>
  412c8c:	ldr	w28, [x8, #4]
  412c90:	mov	w27, wzr
  412c94:	b	412cd4 <feof@plt+0xfbf4>
  412c98:	mov	w20, wzr
  412c9c:	mov	w27, wzr
  412ca0:	mov	w22, #0x4                   	// #4
  412ca4:	b	412cc0 <feof@plt+0xfbe0>
  412ca8:	str	xzr, [x19, #128]
  412cac:	ldr	w20, [x26, #4]
  412cb0:	mov	w27, #0x1                   	// #1
  412cb4:	add	w8, w20, #0x1
  412cb8:	cmp	w8, #0x4
  412cbc:	csinc	w22, w24, w20, ls  // ls = plast
  412cc0:	mov	w9, w22
  412cc4:	lsl	x9, x9, #3
  412cc8:	mov	x8, xzr
  412ccc:	mov	w28, wzr
  412cd0:	add	x1, x9, #0x8
  412cd4:	mov	x0, x8
  412cd8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412cdc:	and	w8, w22, #0x7fffffff
  412ce0:	str	x0, [x19, #128]
  412ce4:	stp	w8, w28, [x0]
  412ce8:	cbz	w27, 412bc8 <feof@plt+0xfae8>
  412cec:	ldr	x11, [x19, #128]
  412cf0:	cbz	w20, 412bc4 <feof@plt+0xfae4>
  412cf4:	sub	w12, w20, #0x1
  412cf8:	add	x8, x26, #0x8
  412cfc:	cmp	w12, #0x3
  412d00:	add	x9, x11, #0x8
  412d04:	b.cs	412d10 <feof@plt+0xfc30>  // b.hs, b.nlast
  412d08:	mov	w10, w20
  412d0c:	b	412d84 <feof@plt+0xfca4>
  412d10:	lsl	x10, x12, #3
  412d14:	add	x13, x26, x10
  412d18:	add	x13, x13, #0x10
  412d1c:	cmp	x13, x9
  412d20:	b.ls	412d38 <feof@plt+0xfc58>  // b.plast
  412d24:	add	x10, x11, x10
  412d28:	add	x10, x10, #0x10
  412d2c:	cmp	x10, x8
  412d30:	mov	w10, w20
  412d34:	b.hi	412d84 <feof@plt+0xfca4>  // b.pmore
  412d38:	add	x12, x12, #0x1
  412d3c:	and	x13, x12, #0x1fffffffc
  412d40:	lsl	x8, x13, #3
  412d44:	add	x14, x11, #0x18
  412d48:	add	x9, x26, x8
  412d4c:	add	x11, x11, x8
  412d50:	sub	w10, w20, w13
  412d54:	add	x8, x9, #0x8
  412d58:	add	x9, x11, #0x8
  412d5c:	add	x11, x26, #0x18
  412d60:	mov	x15, x13
  412d64:	ldp	q0, q1, [x11, #-16]
  412d68:	subs	x15, x15, #0x4
  412d6c:	add	x11, x11, #0x20
  412d70:	stp	q0, q1, [x14, #-16]
  412d74:	add	x14, x14, #0x20
  412d78:	b.ne	412d64 <feof@plt+0xfc84>  // b.any
  412d7c:	cmp	x12, x13
  412d80:	b.eq	412bc0 <feof@plt+0xfae0>  // b.none
  412d84:	ldr	x11, [x8], #8
  412d88:	subs	w10, w10, #0x1
  412d8c:	str	x11, [x9], #8
  412d90:	b.ne	412d84 <feof@plt+0xfca4>  // b.any
  412d94:	b	412bc0 <feof@plt+0xfae0>
  412d98:	mov	w27, wzr
  412d9c:	mov	w28, wzr
  412da0:	b	412cd4 <feof@plt+0xfbf4>
  412da4:	ldr	x8, [x19, #128]
  412da8:	cbz	x8, 412dcc <feof@plt+0xfcec>
  412dac:	ldr	w1, [x8, #4]
  412db0:	cmp	w1, #0x2
  412db4:	b.cc	412dcc <feof@plt+0xfcec>  // b.lo, b.ul, b.last
  412db8:	adrp	x3, 415000 <feof@plt+0x11f20>
  412dbc:	add	x0, x8, #0x8
  412dc0:	add	x3, x3, #0x904
  412dc4:	mov	w2, #0x8                   	// #8
  412dc8:	bl	420304 <feof@plt+0x1d224>
  412dcc:	mov	x24, x19
  412dd0:	ldr	x8, [x24, #136]!
  412dd4:	cbz	x8, 412de0 <feof@plt+0xfd00>
  412dd8:	ldr	w8, [x8, #4]
  412ddc:	cbnz	w8, 413b1c <feof@plt+0x10a3c>
  412de0:	ldr	x8, [x19, #120]
  412de4:	cbz	x8, 412e00 <feof@plt+0xfd20>
  412de8:	ldr	w8, [x8, #4]
  412dec:	adds	w8, w8, #0x1
  412df0:	b.cc	412e0c <feof@plt+0xfd2c>  // b.lo, b.ul, b.last
  412df4:	ldr	w20, [x19, #32]
  412df8:	mov	x21, xzr
  412dfc:	b	412e40 <feof@plt+0xfd60>
  412e00:	mov	w8, #0x1                   	// #1
  412e04:	mov	w20, #0x1                   	// #1
  412e08:	b	412e10 <feof@plt+0xfd30>
  412e0c:	mov	w20, w8
  412e10:	lsl	x8, x8, #3
  412e14:	add	x1, x8, #0x8
  412e18:	mov	x0, xzr
  412e1c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412e20:	and	w8, w20, #0x7fffffff
  412e24:	stp	w8, wzr, [x0]
  412e28:	ldr	w20, [x19, #32]
  412e2c:	mov	x21, x0
  412e30:	cbz	x0, 412e40 <feof@plt+0xfd60>
  412e34:	cbz	w8, 412e4c <feof@plt+0xfd6c>
  412e38:	mov	w23, wzr
  412e3c:	b	412e80 <feof@plt+0xfda0>
  412e40:	mov	w23, wzr
  412e44:	mov	w22, #0x4                   	// #4
  412e48:	b	412e60 <feof@plt+0xfd80>
  412e4c:	mov	w1, #0x1                   	// #1
  412e50:	mov	w0, wzr
  412e54:	bl	41bd34 <feof@plt+0x18c54>
  412e58:	ldr	w23, [x21, #4]
  412e5c:	mov	w22, w0
  412e60:	mov	w8, w22
  412e64:	lsl	x8, x8, #3
  412e68:	add	x1, x8, #0x8
  412e6c:	mov	x0, x21
  412e70:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412e74:	mov	x21, x0
  412e78:	and	w8, w22, #0x7fffffff
  412e7c:	stp	w8, w23, [x0]
  412e80:	mov	w9, w20
  412e84:	mov	w25, wzr
  412e88:	add	w22, w23, #0x1
  412e8c:	add	x8, x21, w23, uxtw #3
  412e90:	bfi	x9, x9, #32, #32
  412e94:	str	w22, [x21, #4]
  412e98:	str	x9, [x8, #8]
  412e9c:	b	412ec4 <feof@plt+0xfde4>
  412ea0:	mov	x0, x21
  412ea4:	ldr	w8, [x0, #4]
  412ea8:	bfi	x28, x20, #32, #32
  412eac:	add	w25, w25, #0x1
  412eb0:	mov	x21, x0
  412eb4:	add	w22, w8, #0x1
  412eb8:	add	x8, x0, x8, lsl #3
  412ebc:	str	w22, [x0, #4]
  412ec0:	str	x28, [x8, #8]
  412ec4:	ldr	x8, [x19, #120]
  412ec8:	cbz	x8, 412edc <feof@plt+0xfdfc>
  412ecc:	ldr	w9, [x8, #4]
  412ed0:	cmp	w25, w9
  412ed4:	b.cc	412ee8 <feof@plt+0xfe08>  // b.lo, b.ul, b.last
  412ed8:	b	413034 <feof@plt+0xff54>
  412edc:	mov	w9, wzr
  412ee0:	cmp	w25, w9
  412ee4:	b.cs	413034 <feof@plt+0xff54>  // b.hs, b.nlast
  412ee8:	mov	w9, #0x28                  	// #40
  412eec:	umaddl	x8, w25, w9, x8
  412ef0:	ldr	w28, [x8, #8]
  412ef4:	ldr	w20, [x8, #16]
  412ef8:	cmp	w28, w20
  412efc:	b.hi	413a2c <feof@plt+0x1094c>  // b.pmore
  412f00:	cbz	x21, 412f3c <feof@plt+0xfe5c>
  412f04:	ldr	w8, [x21]
  412f08:	and	w9, w8, #0x7fffffff
  412f0c:	cmp	w9, w22
  412f10:	b.ne	412ea0 <feof@plt+0xfdc0>  // b.any
  412f14:	add	w1, w22, #0x1
  412f18:	tbnz	w8, #31, 412f54 <feof@plt+0xfe74>
  412f1c:	mov	w0, w22
  412f20:	bl	41bd34 <feof@plt+0x18c54>
  412f24:	ldr	w27, [x21, #4]
  412f28:	mov	w23, w0
  412f2c:	mov	w22, wzr
  412f30:	mov	w26, wzr
  412f34:	mov	x0, x21
  412f38:	b	412f6c <feof@plt+0xfe8c>
  412f3c:	mov	w22, wzr
  412f40:	mov	w26, wzr
  412f44:	mov	x0, xzr
  412f48:	mov	w27, wzr
  412f4c:	mov	w23, #0x4                   	// #4
  412f50:	b	412f6c <feof@plt+0xfe8c>
  412f54:	cmp	w1, #0x4
  412f58:	mov	w8, #0x4                   	// #4
  412f5c:	mov	x0, xzr
  412f60:	mov	w27, wzr
  412f64:	csel	w23, w1, w8, hi  // hi = pmore
  412f68:	mov	w26, #0x1                   	// #1
  412f6c:	mov	w8, w23
  412f70:	lsl	x8, x8, #3
  412f74:	add	x1, x8, #0x8
  412f78:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  412f7c:	and	w8, w23, #0x7fffffff
  412f80:	stp	w8, w27, [x0]
  412f84:	cbz	w26, 412ea4 <feof@plt+0xfdc4>
  412f88:	cbz	w22, 41302c <feof@plt+0xff4c>
  412f8c:	sub	w10, w22, #0x1
  412f90:	add	x9, x21, #0x8
  412f94:	cmp	w10, #0x3
  412f98:	add	x8, x0, #0x8
  412f9c:	b.cs	412fa8 <feof@plt+0xfec8>  // b.hs, b.nlast
  412fa0:	mov	w10, w22
  412fa4:	b	41301c <feof@plt+0xff3c>
  412fa8:	lsl	x11, x10, #3
  412fac:	add	x12, x21, x11
  412fb0:	add	x12, x12, #0x10
  412fb4:	cmp	x8, x12
  412fb8:	b.cs	412fd4 <feof@plt+0xfef4>  // b.hs, b.nlast
  412fbc:	add	x11, x0, x11
  412fc0:	add	x11, x11, #0x10
  412fc4:	cmp	x11, x9
  412fc8:	b.ls	412fd4 <feof@plt+0xfef4>  // b.plast
  412fcc:	mov	w10, w22
  412fd0:	b	41301c <feof@plt+0xff3c>
  412fd4:	add	x11, x10, #0x1
  412fd8:	and	x12, x11, #0x1fffffffc
  412fdc:	lsl	x9, x12, #3
  412fe0:	add	x14, x21, x9
  412fe4:	add	x13, x0, #0x18
  412fe8:	sub	w10, w22, w12
  412fec:	add	x8, x8, x9
  412ff0:	add	x9, x14, #0x8
  412ff4:	add	x14, x21, #0x18
  412ff8:	mov	x15, x12
  412ffc:	ldp	q0, q1, [x14, #-16]
  413000:	subs	x15, x15, #0x4
  413004:	add	x14, x14, #0x20
  413008:	stp	q0, q1, [x13, #-16]
  41300c:	add	x13, x13, #0x20
  413010:	b.ne	412ffc <feof@plt+0xff1c>  // b.any
  413014:	cmp	x11, x12
  413018:	b.eq	41302c <feof@plt+0xff4c>  // b.none
  41301c:	ldr	x11, [x9], #8
  413020:	subs	w10, w10, #0x1
  413024:	str	x11, [x8], #8
  413028:	b.ne	41301c <feof@plt+0xff3c>  // b.any
  41302c:	str	w22, [x0, #4]
  413030:	b	412ea4 <feof@plt+0xfdc4>
  413034:	mov	w25, wzr
  413038:	mov	w26, #0x4                   	// #4
  41303c:	b	413060 <feof@plt+0xff80>
  413040:	mov	x0, x21
  413044:	ldr	w8, [x0, #4]
  413048:	add	w25, w25, #0x1
  41304c:	mov	x21, x0
  413050:	add	w22, w8, #0x1
  413054:	add	x8, x0, x8, lsl #3
  413058:	str	w22, [x0, #4]
  41305c:	str	x20, [x8, #8]
  413060:	ldr	x8, [x19, #128]
  413064:	cbz	x8, 413078 <feof@plt+0xff98>
  413068:	ldr	w9, [x8, #4]
  41306c:	cmp	w25, w9
  413070:	b.cc	413084 <feof@plt+0xffa4>  // b.lo, b.ul, b.last
  413074:	b	41320c <feof@plt+0x1012c>
  413078:	mov	w9, wzr
  41307c:	cmp	w25, w9
  413080:	b.cs	41320c <feof@plt+0x1012c>  // b.hs, b.nlast
  413084:	add	x8, x8, w25, uxtw #3
  413088:	ldr	x22, [x8, #8]
  41308c:	cbz	x22, 413a44 <feof@plt+0x10964>
  413090:	ldr	w0, [x22]
  413094:	add	x8, sp, #0x10
  413098:	bl	41dba0 <feof@plt+0x1aac0>
  41309c:	ldr	w20, [sp, #24]
  4130a0:	mov	x0, x22
  4130a4:	bl	437c48 <feof@plt+0x34b68>
  4130a8:	ldr	w9, [x22, #4]
  4130ac:	cmp	w20, #0x1
  4130b0:	cset	w8, gt
  4130b4:	and	w8, w8, w0
  4130b8:	sub	w20, w20, w8
  4130bc:	add	x8, sp, #0x10
  4130c0:	mov	w0, w9
  4130c4:	bl	41dba0 <feof@plt+0x1aac0>
  4130c8:	ldr	w8, [sp, #24]
  4130cc:	cmp	w20, w8
  4130d0:	b.hi	413a8c <feof@plt+0x109ac>  // b.pmore
  4130d4:	mov	w20, w20
  4130d8:	bfi	x20, x8, #32, #32
  4130dc:	cbz	x21, 413118 <feof@plt+0x10038>
  4130e0:	ldp	w8, w9, [x21]
  4130e4:	and	w22, w8, #0x7fffffff
  4130e8:	cmp	w22, w9
  4130ec:	b.ne	413040 <feof@plt+0xff60>  // b.any
  4130f0:	add	w1, w22, #0x1
  4130f4:	tbnz	w8, #31, 413130 <feof@plt+0x10050>
  4130f8:	mov	w0, w22
  4130fc:	bl	41bd34 <feof@plt+0x18c54>
  413100:	ldr	w27, [x21, #4]
  413104:	mov	w23, w0
  413108:	mov	w22, wzr
  41310c:	mov	w28, wzr
  413110:	mov	x0, x21
  413114:	b	413144 <feof@plt+0x10064>
  413118:	mov	w22, wzr
  41311c:	mov	w28, wzr
  413120:	mov	x0, xzr
  413124:	mov	w27, wzr
  413128:	mov	w23, #0x4                   	// #4
  41312c:	b	413144 <feof@plt+0x10064>
  413130:	cmp	w22, #0x4
  413134:	mov	x0, xzr
  413138:	mov	w27, wzr
  41313c:	csel	w23, w26, w1, cc  // cc = lo, ul, last
  413140:	mov	w28, #0x1                   	// #1
  413144:	mov	w8, w23
  413148:	lsl	x8, x8, #3
  41314c:	add	x1, x8, #0x8
  413150:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  413154:	and	w8, w23, #0x7fffffff
  413158:	stp	w8, w27, [x0]
  41315c:	cbz	w28, 413044 <feof@plt+0xff64>
  413160:	cbz	w22, 413204 <feof@plt+0x10124>
  413164:	sub	w10, w22, #0x1
  413168:	add	x9, x21, #0x8
  41316c:	cmp	w10, #0x3
  413170:	add	x8, x0, #0x8
  413174:	b.cs	413180 <feof@plt+0x100a0>  // b.hs, b.nlast
  413178:	mov	w10, w22
  41317c:	b	4131f4 <feof@plt+0x10114>
  413180:	lsl	x11, x10, #3
  413184:	add	x12, x21, x11
  413188:	add	x12, x12, #0x10
  41318c:	cmp	x8, x12
  413190:	b.cs	4131ac <feof@plt+0x100cc>  // b.hs, b.nlast
  413194:	add	x11, x0, x11
  413198:	add	x11, x11, #0x10
  41319c:	cmp	x11, x9
  4131a0:	b.ls	4131ac <feof@plt+0x100cc>  // b.plast
  4131a4:	mov	w10, w22
  4131a8:	b	4131f4 <feof@plt+0x10114>
  4131ac:	add	x11, x10, #0x1
  4131b0:	and	x12, x11, #0x1fffffffc
  4131b4:	lsl	x9, x12, #3
  4131b8:	add	x14, x21, x9
  4131bc:	add	x13, x0, #0x18
  4131c0:	sub	w10, w22, w12
  4131c4:	add	x8, x8, x9
  4131c8:	add	x9, x14, #0x8
  4131cc:	add	x14, x21, #0x18
  4131d0:	mov	x15, x12
  4131d4:	ldp	q0, q1, [x14, #-16]
  4131d8:	subs	x15, x15, #0x4
  4131dc:	add	x14, x14, #0x20
  4131e0:	stp	q0, q1, [x13, #-16]
  4131e4:	add	x13, x13, #0x20
  4131e8:	b.ne	4131d4 <feof@plt+0x100f4>  // b.any
  4131ec:	cmp	x11, x12
  4131f0:	b.eq	413204 <feof@plt+0x10124>  // b.none
  4131f4:	ldr	x11, [x9], #8
  4131f8:	subs	w10, w10, #0x1
  4131fc:	str	x11, [x8], #8
  413200:	b.ne	4131f4 <feof@plt+0x10114>  // b.any
  413204:	str	w22, [x0, #4]
  413208:	b	413044 <feof@plt+0xff64>
  41320c:	cbz	x21, 413ad4 <feof@plt+0x109f4>
  413210:	cmp	w22, #0x2
  413214:	b.cc	413234 <feof@plt+0x10154>  // b.lo, b.ul, b.last
  413218:	adrp	x3, 415000 <feof@plt+0x11f20>
  41321c:	add	x0, x21, #0x8
  413220:	mov	w1, w22
  413224:	add	x3, x3, #0x91c
  413228:	mov	w2, #0x8                   	// #8
  41322c:	bl	420304 <feof@plt+0x1d224>
  413230:	ldr	w22, [x21, #4]
  413234:	cbz	w22, 413ad4 <feof@plt+0x109f4>
  413238:	ldr	x23, [x24]
  41323c:	cbz	x23, 413284 <feof@plt+0x101a4>
  413240:	ldp	w8, w9, [x23]
  413244:	and	w0, w8, #0x7fffffff
  413248:	cmp	w0, w9
  41324c:	b.ne	41338c <feof@plt+0x102ac>  // b.any
  413250:	tbnz	w8, #31, 413294 <feof@plt+0x101b4>
  413254:	add	w1, w0, #0x1
  413258:	bl	41bd34 <feof@plt+0x18c54>
  41325c:	ldr	x8, [x24]
  413260:	mov	w9, w0
  413264:	lsl	x9, x9, #3
  413268:	mov	w22, w0
  41326c:	add	x1, x9, #0x8
  413270:	mov	w20, wzr
  413274:	cbz	x8, 413a20 <feof@plt+0x10940>
  413278:	ldr	w26, [x8, #4]
  41327c:	mov	w25, wzr
  413280:	b	4132c4 <feof@plt+0x101e4>
  413284:	mov	w20, wzr
  413288:	mov	w25, wzr
  41328c:	mov	w22, #0x4                   	// #4
  413290:	b	4132b0 <feof@plt+0x101d0>
  413294:	str	xzr, [x24]
  413298:	ldr	w20, [x23, #4]
  41329c:	mov	w8, #0x4                   	// #4
  4132a0:	mov	w25, #0x1                   	// #1
  4132a4:	add	w9, w20, #0x1
  4132a8:	cmp	w9, #0x4
  4132ac:	csinc	w22, w8, w20, ls  // ls = plast
  4132b0:	mov	w9, w22
  4132b4:	lsl	x9, x9, #3
  4132b8:	mov	x8, xzr
  4132bc:	mov	w26, wzr
  4132c0:	add	x1, x9, #0x8
  4132c4:	mov	x0, x8
  4132c8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4132cc:	and	w8, w22, #0x7fffffff
  4132d0:	str	x0, [x24]
  4132d4:	stp	w8, w26, [x0]
  4132d8:	cbz	w25, 41338c <feof@plt+0x102ac>
  4132dc:	ldr	x11, [x24]
  4132e0:	cbz	w20, 413388 <feof@plt+0x102a8>
  4132e4:	sub	w12, w20, #0x1
  4132e8:	add	x8, x23, #0x8
  4132ec:	cmp	w12, #0x3
  4132f0:	add	x9, x11, #0x8
  4132f4:	b.cs	413300 <feof@plt+0x10220>  // b.hs, b.nlast
  4132f8:	mov	w10, w20
  4132fc:	b	413374 <feof@plt+0x10294>
  413300:	lsl	x10, x12, #3
  413304:	add	x13, x23, x10
  413308:	add	x13, x13, #0x10
  41330c:	cmp	x9, x13
  413310:	b.cs	413328 <feof@plt+0x10248>  // b.hs, b.nlast
  413314:	add	x10, x11, x10
  413318:	add	x10, x10, #0x10
  41331c:	cmp	x8, x10
  413320:	mov	w10, w20
  413324:	b.cc	413374 <feof@plt+0x10294>  // b.lo, b.ul, b.last
  413328:	add	x12, x12, #0x1
  41332c:	and	x13, x12, #0x1fffffffc
  413330:	lsl	x8, x13, #3
  413334:	add	x14, x11, #0x18
  413338:	add	x9, x23, x8
  41333c:	add	x11, x11, x8
  413340:	sub	w10, w20, w13
  413344:	add	x8, x9, #0x8
  413348:	add	x9, x11, #0x8
  41334c:	add	x11, x23, #0x18
  413350:	mov	x15, x13
  413354:	ldp	q0, q1, [x11, #-16]
  413358:	subs	x15, x15, #0x4
  41335c:	add	x11, x11, #0x20
  413360:	stp	q0, q1, [x14, #-16]
  413364:	add	x14, x14, #0x20
  413368:	b.ne	413354 <feof@plt+0x10274>  // b.any
  41336c:	cmp	x12, x13
  413370:	b.eq	413384 <feof@plt+0x102a4>  // b.none
  413374:	ldr	x11, [x8], #8
  413378:	subs	w10, w10, #0x1
  41337c:	str	x11, [x9], #8
  413380:	b.ne	413374 <feof@plt+0x10294>  // b.any
  413384:	ldr	x11, [x24]
  413388:	str	w20, [x11, #4]
  41338c:	ldr	x8, [x24]
  413390:	mov	w23, #0x1                   	// #1
  413394:	ldr	w9, [x8, #4]
  413398:	add	w10, w9, #0x1
  41339c:	str	w10, [x8, #4]
  4133a0:	ldr	x10, [x21, #8]
  4133a4:	add	x8, x8, x9, lsl #3
  4133a8:	str	x10, [x8, #8]
  4133ac:	b	4133d8 <feof@plt+0x102f8>
  4133b0:	ldr	x11, [x24]
  4133b4:	str	w20, [x11, #4]
  4133b8:	ldr	x8, [x24]
  4133bc:	ldr	w9, [x8, #4]
  4133c0:	add	w10, w9, #0x1
  4133c4:	str	w10, [x8, #4]
  4133c8:	ldr	x10, [x27]
  4133cc:	add	x8, x8, x9, lsl #3
  4133d0:	str	x10, [x8, #8]
  4133d4:	add	w23, w23, #0x1
  4133d8:	ldr	x26, [x24]
  4133dc:	ldr	w8, [x21, #4]
  4133e0:	cbz	x26, 4133f4 <feof@plt+0x10314>
  4133e4:	ldr	w9, [x26, #4]
  4133e8:	cmp	w23, w8
  4133ec:	b.cc	413400 <feof@plt+0x10320>  // b.lo, b.ul, b.last
  4133f0:	b	413598 <feof@plt+0x104b8>
  4133f4:	mov	w9, wzr
  4133f8:	cmp	w23, w8
  4133fc:	b.cs	413598 <feof@plt+0x104b8>  // b.hs, b.nlast
  413400:	sub	w8, w9, #0x1
  413404:	add	x27, x21, w23, uxtw #3
  413408:	add	x10, x26, w8, uxtw #3
  41340c:	ldr	w9, [x27, #8]!
  413410:	ldr	w10, [x10, #8]
  413414:	cmp	w9, w10
  413418:	b.cc	413a5c <feof@plt+0x1097c>  // b.lo, b.ul, b.last
  41341c:	add	x8, x26, x8, lsl #3
  413420:	ldrb	w11, [x19, #114]
  413424:	ldr	w10, [x8, #12]!
  413428:	add	x11, x11, x10
  41342c:	add	x11, x11, #0x1
  413430:	cmp	x11, x9
  413434:	b.cs	41347c <feof@plt+0x1039c>  // b.hs, b.nlast
  413438:	ldp	w8, w9, [x26]
  41343c:	and	w0, w8, #0x7fffffff
  413440:	cmp	w0, w9
  413444:	b.ne	4133b8 <feof@plt+0x102d8>  // b.any
  413448:	tbnz	w8, #31, 41349c <feof@plt+0x103bc>
  41344c:	add	w1, w0, #0x1
  413450:	bl	41bd34 <feof@plt+0x18c54>
  413454:	ldr	x8, [x24]
  413458:	mov	w9, w0
  41345c:	lsl	x9, x9, #3
  413460:	mov	w22, w0
  413464:	add	x1, x9, #0x8
  413468:	mov	w20, wzr
  41346c:	cbz	x8, 4134cc <feof@plt+0x103ec>
  413470:	ldr	w28, [x8, #4]
  413474:	mov	w25, wzr
  413478:	b	4134d4 <feof@plt+0x103f4>
  41347c:	mov	w9, w23
  413480:	add	x9, x21, x9, lsl #3
  413484:	ldr	w9, [x9, #12]
  413488:	cmp	w9, w10
  41348c:	b.ls	4133d4 <feof@plt+0x102f4>  // b.plast
  413490:	str	w9, [x8]
  413494:	add	w23, w23, #0x1
  413498:	b	4133d8 <feof@plt+0x102f8>
  41349c:	str	xzr, [x24]
  4134a0:	ldr	w20, [x26, #4]
  4134a4:	mov	x8, xzr
  4134a8:	mov	w28, wzr
  4134ac:	mov	w25, #0x1                   	// #1
  4134b0:	add	w9, w20, #0x1
  4134b4:	cmp	w9, #0x4
  4134b8:	mov	w9, #0x4                   	// #4
  4134bc:	csinc	w22, w9, w20, ls  // ls = plast
  4134c0:	lsl	x9, x22, #3
  4134c4:	add	x1, x9, #0x8
  4134c8:	b	4134d4 <feof@plt+0x103f4>
  4134cc:	mov	w25, wzr
  4134d0:	mov	w28, wzr
  4134d4:	mov	x0, x8
  4134d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4134dc:	and	w8, w22, #0x7fffffff
  4134e0:	str	x0, [x24]
  4134e4:	stp	w8, w28, [x0]
  4134e8:	cbz	w25, 4133b8 <feof@plt+0x102d8>
  4134ec:	ldr	x11, [x24]
  4134f0:	cbz	w20, 4133b4 <feof@plt+0x102d4>
  4134f4:	sub	w12, w20, #0x1
  4134f8:	add	x8, x26, #0x8
  4134fc:	cmp	w12, #0x3
  413500:	add	x9, x11, #0x8
  413504:	b.cs	413510 <feof@plt+0x10430>  // b.hs, b.nlast
  413508:	mov	w10, w20
  41350c:	b	413584 <feof@plt+0x104a4>
  413510:	lsl	x10, x12, #3
  413514:	add	x13, x26, x10
  413518:	add	x13, x13, #0x10
  41351c:	cmp	x13, x9
  413520:	b.ls	413538 <feof@plt+0x10458>  // b.plast
  413524:	add	x10, x11, x10
  413528:	add	x10, x10, #0x10
  41352c:	cmp	x10, x8
  413530:	mov	w10, w20
  413534:	b.hi	413584 <feof@plt+0x104a4>  // b.pmore
  413538:	add	x12, x12, #0x1
  41353c:	and	x13, x12, #0x1fffffffc
  413540:	lsl	x8, x13, #3
  413544:	add	x14, x11, #0x18
  413548:	add	x9, x26, x8
  41354c:	add	x11, x11, x8
  413550:	sub	w10, w20, w13
  413554:	add	x8, x9, #0x8
  413558:	add	x9, x11, #0x8
  41355c:	add	x11, x26, #0x18
  413560:	mov	x15, x13
  413564:	ldp	q0, q1, [x11, #-16]
  413568:	subs	x15, x15, #0x4
  41356c:	add	x11, x11, #0x20
  413570:	stp	q0, q1, [x14, #-16]
  413574:	add	x14, x14, #0x20
  413578:	b.ne	413564 <feof@plt+0x10484>  // b.any
  41357c:	cmp	x12, x13
  413580:	b.eq	4133b0 <feof@plt+0x102d0>  // b.none
  413584:	ldr	x11, [x8], #8
  413588:	subs	w10, w10, #0x1
  41358c:	str	x11, [x9], #8
  413590:	b.ne	413584 <feof@plt+0x104a4>  // b.any
  413594:	b	4133b0 <feof@plt+0x102d0>
  413598:	cbz	w9, 413b04 <feof@plt+0x10a24>
  41359c:	mov	x8, xzr
  4135a0:	add	x9, x26, #0x14
  4135a4:	add	x10, x8, #0x1
  4135a8:	cbz	x26, 4135bc <feof@plt+0x104dc>
  4135ac:	ldr	w11, [x26, #4]
  4135b0:	cmp	x10, w11, uxtw
  4135b4:	b.cc	4135c8 <feof@plt+0x104e8>  // b.lo, b.ul, b.last
  4135b8:	b	413618 <feof@plt+0x10538>
  4135bc:	mov	w11, wzr
  4135c0:	cmp	x10, w11, uxtw
  4135c4:	b.cs	413618 <feof@plt+0x10538>  // b.hs, b.nlast
  4135c8:	add	x10, x26, w8, uxtw #3
  4135cc:	ldp	w12, w10, [x10, #8]
  4135d0:	cmp	w12, w10
  4135d4:	b.hi	413a74 <feof@plt+0x10994>  // b.pmore
  4135d8:	ldp	w11, w13, [x9, #-4]
  4135dc:	cmp	w11, w13
  4135e0:	b.hi	413aa4 <feof@plt+0x109c4>  // b.pmore
  4135e4:	cmp	w12, w11
  4135e8:	b.cs	413abc <feof@plt+0x109dc>  // b.hs, b.nlast
  4135ec:	add	w10, w10, #0x1
  4135f0:	add	x9, x9, #0x8
  4135f4:	cmp	w10, w11
  4135f8:	add	x8, x8, #0x1
  4135fc:	b.cc	4135a4 <feof@plt+0x104c4>  // b.lo, b.ul, b.last
  413600:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413604:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413608:	add	x0, x0, #0x866
  41360c:	add	x2, x2, #0x88f
  413610:	mov	w1, #0x4d8                 	// #1240
  413614:	bl	40f560 <feof@plt+0xc480>
  413618:	ldr	w8, [x21]
  41361c:	tbnz	w8, #31, 41362c <feof@plt+0x1054c>
  413620:	mov	x0, x21
  413624:	bl	402b20 <free@plt>
  413628:	b	413630 <feof@plt+0x10550>
  41362c:	str	wzr, [x21, #4]
  413630:	ldr	x8, [x19, #136]
  413634:	ldr	x21, [sp, #8]
  413638:	cbz	x8, 413aec <feof@plt+0x10a0c>
  41363c:	ldr	w9, [x8, #4]
  413640:	cbz	w9, 413aec <feof@plt+0x10a0c>
  413644:	sub	w9, w9, #0x1
  413648:	add	x8, x8, w9, uxtw #3
  41364c:	ldr	w8, [x8, #12]
  413650:	bic	w0, w8, w8, asr #31
  413654:	bl	4106b0 <feof@plt+0xd5d0>
  413658:	ldr	x8, [x19, #136]
  41365c:	str	w0, [x19, #144]
  413660:	cbz	x8, 413680 <feof@plt+0x105a0>
  413664:	ldr	w8, [x8, #4]
  413668:	cmp	w8, #0x2
  41366c:	b.cc	413680 <feof@plt+0x105a0>  // b.lo, b.ul, b.last
  413670:	cmp	w0, #0x3
  413674:	mov	w8, #0x3                   	// #3
  413678:	csel	w0, w0, w8, gt
  41367c:	str	w0, [x19, #144]
  413680:	ldr	w9, [x21, #224]
  413684:	ldr	x10, [x19]
  413688:	ldr	x8, [x19, #24]
  41368c:	ldr	w1, [x19, #32]
  413690:	sub	w11, w9, #0x1
  413694:	cmp	w0, w9
  413698:	csel	w9, w11, w0, lt  // lt = tstop
  41369c:	str	w9, [x19, #144]
  4136a0:	ldrsw	x20, [x10, #112]
  4136a4:	mov	x0, x8
  4136a8:	bl	41d7e0 <feof@plt+0x1a700>
  4136ac:	cbz	x0, 413708 <feof@plt+0x10628>
  4136b0:	ldrsw	x8, [x19, #36]
  4136b4:	cmp	x1, x8
  4136b8:	b.cc	413708 <feof@plt+0x10628>  // b.lo, b.ul, b.last
  4136bc:	ldrb	w9, [x19, #114]
  4136c0:	cbz	w9, 4136d0 <feof@plt+0x105f0>
  4136c4:	ldrsw	x9, [x19, #144]
  4136c8:	add	x8, x9, x8
  4136cc:	add	x8, x8, #0x2
  4136d0:	sub	x9, x1, x8
  4136d4:	mov	w10, #0xa                   	// #10
  4136d8:	cmp	x9, #0xa
  4136dc:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  4136e0:	cmp	x1, x20
  4136e4:	b.cc	413700 <feof@plt+0x10620>  // b.lo, b.ul, b.last
  4136e8:	sub	x9, x20, x9
  4136ec:	cmp	x8, x9
  4136f0:	b.ls	413700 <feof@plt+0x10620>  // b.plast
  4136f4:	sub	w8, w8, w9
  4136f8:	str	w8, [x19, #148]
  4136fc:	b	413704 <feof@plt+0x10624>
  413700:	ldr	w8, [x19, #148]
  413704:	tbnz	w8, #31, 413b34 <feof@plt+0x10a54>
  413708:	ldrb	w8, [x21, #228]
  41370c:	cbz	w8, 413a00 <feof@plt+0x10920>
  413710:	ldr	w8, [x19, #148]
  413714:	add	w20, w8, w20
  413718:	cmp	w20, #0x64
  41371c:	b.lt	413830 <feof@plt+0x10750>  // b.tstop
  413720:	ldrb	w8, [x19, #114]
  413724:	cbz	w8, 413794 <feof@plt+0x106b4>
  413728:	ldr	w8, [x19, #144]
  41372c:	cmp	w8, #0x4
  413730:	b.lt	41375c <feof@plt+0x1067c>  // b.tstop
  413734:	mov	w21, wzr
  413738:	ldr	x0, [x19, #8]
  41373c:	mov	w1, #0x20                  	// #32
  413740:	bl	41803c <feof@plt+0x14f5c>
  413744:	ldr	w8, [x19, #144]
  413748:	add	w21, w21, #0x1
  41374c:	sub	w9, w8, #0x3
  413750:	cmp	w21, w9
  413754:	b.lt	413738 <feof@plt+0x10658>  // b.tstop
  413758:	b	413760 <feof@plt+0x10680>
  41375c:	mov	w21, wzr
  413760:	ldr	x0, [x19, #8]
  413764:	cmp	w21, w8
  413768:	b.ge	413788 <feof@plt+0x106a8>  // b.tcont
  41376c:	mov	w1, #0x20                  	// #32
  413770:	bl	41803c <feof@plt+0x14f5c>
  413774:	ldr	w8, [x19, #144]
  413778:	ldr	x0, [x19, #8]
  41377c:	add	w21, w21, #0x1
  413780:	cmp	w21, w8
  413784:	b.lt	41376c <feof@plt+0x1068c>  // b.tstop
  413788:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41378c:	add	x1, x1, #0x8ae
  413790:	bl	419e20 <feof@plt+0x16d40>
  413794:	ldr	x0, [x19, #8]
  413798:	mov	w1, #0x20                  	// #32
  41379c:	bl	41803c <feof@plt+0x14f5c>
  4137a0:	ldr	w21, [x19, #148]
  4137a4:	cmp	w21, w20
  4137a8:	b.ge	413828 <feof@plt+0x10748>  // b.tcont
  4137ac:	mov	w22, #0xcccd                	// #52429
  4137b0:	mov	w23, #0x9998                	// #39320
  4137b4:	mov	w24, #0x851f                	// #34079
  4137b8:	mov	w25, #0x6667                	// #26215
  4137bc:	movk	w22, #0xcccc, lsl #16
  4137c0:	movk	w23, #0x1999, lsl #16
  4137c4:	movk	w24, #0x51eb, lsl #16
  4137c8:	movk	w25, #0x6666, lsl #16
  4137cc:	mov	w26, #0xa                   	// #10
  4137d0:	b	4137e4 <feof@plt+0x10704>
  4137d4:	mov	w1, #0x20                  	// #32
  4137d8:	bl	41803c <feof@plt+0x14f5c>
  4137dc:	cmp	w20, w21
  4137e0:	b.eq	413828 <feof@plt+0x10748>  // b.none
  4137e4:	add	w21, w21, #0x1
  4137e8:	ldr	x0, [x19, #8]
  4137ec:	madd	w8, w21, w22, w23
  4137f0:	ror	w8, w8, #1
  4137f4:	cmp	w8, w23
  4137f8:	b.hi	4137d4 <feof@plt+0x106f4>  // b.pmore
  4137fc:	smull	x8, w21, w24
  413800:	lsr	x9, x8, #63
  413804:	asr	x8, x8, #37
  413808:	add	w8, w8, w9
  41380c:	smull	x9, w8, w25
  413810:	lsr	x10, x9, #63
  413814:	asr	x9, x9, #34
  413818:	add	w9, w9, w10
  41381c:	msub	w8, w9, w26, w8
  413820:	add	w1, w8, #0x30
  413824:	b	4137d8 <feof@plt+0x106f8>
  413828:	ldr	x0, [x19, #8]
  41382c:	bl	41a7a4 <feof@plt+0x176c4>
  413830:	ldrb	w8, [x19, #114]
  413834:	cbz	w8, 4138a4 <feof@plt+0x107c4>
  413838:	ldr	w8, [x19, #144]
  41383c:	cmp	w8, #0x4
  413840:	b.lt	41386c <feof@plt+0x1078c>  // b.tstop
  413844:	mov	w21, wzr
  413848:	ldr	x0, [x19, #8]
  41384c:	mov	w1, #0x20                  	// #32
  413850:	bl	41803c <feof@plt+0x14f5c>
  413854:	ldr	w8, [x19, #144]
  413858:	add	w21, w21, #0x1
  41385c:	sub	w9, w8, #0x3
  413860:	cmp	w21, w9
  413864:	b.lt	413848 <feof@plt+0x10768>  // b.tstop
  413868:	b	413870 <feof@plt+0x10790>
  41386c:	mov	w21, wzr
  413870:	ldr	x0, [x19, #8]
  413874:	cmp	w21, w8
  413878:	b.ge	413898 <feof@plt+0x107b8>  // b.tcont
  41387c:	mov	w1, #0x20                  	// #32
  413880:	bl	41803c <feof@plt+0x14f5c>
  413884:	ldr	w8, [x19, #144]
  413888:	ldr	x0, [x19, #8]
  41388c:	add	w21, w21, #0x1
  413890:	cmp	w21, w8
  413894:	b.lt	41387c <feof@plt+0x1079c>  // b.tstop
  413898:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41389c:	add	x1, x1, #0x8ae
  4138a0:	bl	419e20 <feof@plt+0x16d40>
  4138a4:	ldr	x0, [x19, #8]
  4138a8:	mov	w1, #0x20                  	// #32
  4138ac:	bl	41803c <feof@plt+0x14f5c>
  4138b0:	ldr	w8, [x19, #148]
  4138b4:	cmp	w8, w20
  4138b8:	b.ge	41392c <feof@plt+0x1084c>  // b.tcont
  4138bc:	mov	w23, #0x6667                	// #26215
  4138c0:	add	w21, w8, #0x1
  4138c4:	neg	w22, w20
  4138c8:	movk	w23, #0x6666, lsl #16
  4138cc:	mov	w24, #0xa                   	// #10
  4138d0:	b	413900 <feof@plt+0x10820>
  4138d4:	smull	x9, w8, w23
  4138d8:	lsr	x10, x9, #63
  4138dc:	asr	x9, x9, #34
  4138e0:	add	w9, w9, w10
  4138e4:	msub	w8, w9, w24, w8
  4138e8:	add	w1, w8, #0x30
  4138ec:	bl	41803c <feof@plt+0x14f5c>
  4138f0:	add	w21, w21, #0x1
  4138f4:	add	w8, w22, w21
  4138f8:	cmp	w8, #0x1
  4138fc:	b.eq	41392c <feof@plt+0x1084c>  // b.none
  413900:	smull	x8, w21, w23
  413904:	lsr	x9, x8, #63
  413908:	asr	x8, x8, #34
  41390c:	add	w8, w8, w9
  413910:	ldr	x0, [x19, #8]
  413914:	add	w9, w8, w8, lsl #2
  413918:	lsl	w9, w9, #1
  41391c:	cmp	w9, w21
  413920:	b.eq	4138d4 <feof@plt+0x107f4>  // b.none
  413924:	mov	w1, #0x20                  	// #32
  413928:	b	4138ec <feof@plt+0x1080c>
  41392c:	ldr	x0, [x19, #8]
  413930:	bl	41a7a4 <feof@plt+0x176c4>
  413934:	ldrb	w8, [x19, #114]
  413938:	cbz	w8, 4139a8 <feof@plt+0x108c8>
  41393c:	ldr	w8, [x19, #144]
  413940:	cmp	w8, #0x4
  413944:	b.lt	413970 <feof@plt+0x10890>  // b.tstop
  413948:	mov	w21, wzr
  41394c:	ldr	x0, [x19, #8]
  413950:	mov	w1, #0x20                  	// #32
  413954:	bl	41803c <feof@plt+0x14f5c>
  413958:	ldr	w8, [x19, #144]
  41395c:	add	w21, w21, #0x1
  413960:	sub	w9, w8, #0x3
  413964:	cmp	w21, w9
  413968:	b.lt	41394c <feof@plt+0x1086c>  // b.tstop
  41396c:	b	413974 <feof@plt+0x10894>
  413970:	mov	w21, wzr
  413974:	ldr	x0, [x19, #8]
  413978:	cmp	w21, w8
  41397c:	b.ge	41399c <feof@plt+0x108bc>  // b.tcont
  413980:	mov	w1, #0x20                  	// #32
  413984:	bl	41803c <feof@plt+0x14f5c>
  413988:	ldr	w8, [x19, #144]
  41398c:	ldr	x0, [x19, #8]
  413990:	add	w21, w21, #0x1
  413994:	cmp	w21, w8
  413998:	b.lt	413980 <feof@plt+0x108a0>  // b.tstop
  41399c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4139a0:	add	x1, x1, #0x8ae
  4139a4:	bl	419e20 <feof@plt+0x16d40>
  4139a8:	ldr	x0, [x19, #8]
  4139ac:	mov	w1, #0x20                  	// #32
  4139b0:	bl	41803c <feof@plt+0x14f5c>
  4139b4:	ldr	w21, [x19, #148]
  4139b8:	ldr	x0, [x19, #8]
  4139bc:	cmp	w21, w20
  4139c0:	b.ge	4139fc <feof@plt+0x1091c>  // b.tcont
  4139c4:	mov	w22, #0x6667                	// #26215
  4139c8:	movk	w22, #0x6666, lsl #16
  4139cc:	mov	w23, #0xa                   	// #10
  4139d0:	add	w21, w21, #0x1
  4139d4:	smull	x8, w21, w22
  4139d8:	lsr	x9, x8, #63
  4139dc:	asr	x8, x8, #34
  4139e0:	add	w8, w8, w9
  4139e4:	msub	w8, w8, w23, w21
  4139e8:	add	w1, w8, #0x30
  4139ec:	bl	41803c <feof@plt+0x14f5c>
  4139f0:	ldr	x0, [x19, #8]
  4139f4:	cmp	w20, w21
  4139f8:	b.ne	4139d0 <feof@plt+0x108f0>  // b.any
  4139fc:	bl	41a7a4 <feof@plt+0x176c4>
  413a00:	ldp	x20, x19, [sp, #128]
  413a04:	ldp	x22, x21, [sp, #112]
  413a08:	ldp	x24, x23, [sp, #96]
  413a0c:	ldp	x26, x25, [sp, #80]
  413a10:	ldp	x28, x27, [sp, #64]
  413a14:	ldp	x29, x30, [sp, #48]
  413a18:	add	sp, sp, #0x90
  413a1c:	ret
  413a20:	mov	w25, wzr
  413a24:	mov	w26, wzr
  413a28:	b	4132c4 <feof@plt+0x101e4>
  413a2c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413a30:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413a34:	add	x0, x0, #0x866
  413a38:	add	x2, x2, #0x88f
  413a3c:	mov	w1, #0x4a4                 	// #1188
  413a40:	bl	40f560 <feof@plt+0xc480>
  413a44:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413a48:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413a4c:	add	x0, x0, #0x866
  413a50:	add	x2, x2, #0x88f
  413a54:	mov	w1, #0x4ad                 	// #1197
  413a58:	bl	40f560 <feof@plt+0xc480>
  413a5c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413a60:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413a64:	add	x0, x0, #0x866
  413a68:	add	x2, x2, #0x88f
  413a6c:	mov	w1, #0x4bc                 	// #1212
  413a70:	bl	40f560 <feof@plt+0xc480>
  413a74:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413a78:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413a7c:	add	x0, x0, #0x866
  413a80:	add	x2, x2, #0x88f
  413a84:	mov	w1, #0x4d3                 	// #1235
  413a88:	bl	40f560 <feof@plt+0xc480>
  413a8c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413a90:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413a94:	add	x0, x0, #0x866
  413a98:	add	x2, x2, #0x8a4
  413a9c:	mov	w1, #0xa5                  	// #165
  413aa0:	bl	40f560 <feof@plt+0xc480>
  413aa4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413aa8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413aac:	add	x0, x0, #0x866
  413ab0:	add	x2, x2, #0x88f
  413ab4:	mov	w1, #0x4d4                 	// #1236
  413ab8:	bl	40f560 <feof@plt+0xc480>
  413abc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413ac0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413ac4:	add	x0, x0, #0x866
  413ac8:	add	x2, x2, #0x88f
  413acc:	mov	w1, #0x4d6                 	// #1238
  413ad0:	bl	40f560 <feof@plt+0xc480>
  413ad4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413ad8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413adc:	add	x0, x0, #0x866
  413ae0:	add	x2, x2, #0x88f
  413ae4:	mov	w1, #0x4b6                 	// #1206
  413ae8:	bl	40f560 <feof@plt+0xc480>
  413aec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413af0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413af4:	add	x0, x0, #0x866
  413af8:	add	x2, x2, #0x888
  413afc:	mov	w1, #0x36a                 	// #874
  413b00:	bl	40f560 <feof@plt+0xc480>
  413b04:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413b08:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413b0c:	add	x0, x0, #0x866
  413b10:	add	x2, x2, #0x88f
  413b14:	mov	w1, #0x4cd                 	// #1229
  413b18:	bl	40f560 <feof@plt+0xc480>
  413b1c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413b20:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413b24:	add	x0, x0, #0x866
  413b28:	add	x2, x2, #0x88f
  413b2c:	mov	w1, #0x49b                 	// #1179
  413b30:	bl	40f560 <feof@plt+0xc480>
  413b34:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413b38:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413b3c:	add	x0, x0, #0x866
  413b40:	add	x2, x2, #0x888
  413b44:	mov	w1, #0x386                 	// #902
  413b48:	bl	40f560 <feof@plt+0xc480>
  413b4c:	sub	sp, sp, #0xf0
  413b50:	stp	x29, x30, [sp, #144]
  413b54:	stp	x28, x27, [sp, #160]
  413b58:	stp	x26, x25, [sp, #176]
  413b5c:	stp	x24, x23, [sp, #192]
  413b60:	stp	x22, x21, [sp, #208]
  413b64:	stp	x20, x19, [sp, #224]
  413b68:	add	x29, sp, #0x90
  413b6c:	cbz	x1, 413f3c <feof@plt+0x10e5c>
  413b70:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  413b74:	mov	x21, x1
  413b78:	mov	x20, x0
  413b7c:	ldr	x0, [x8, #2408]
  413b80:	ldr	w1, [x1]
  413b84:	mov	w22, w3
  413b88:	mov	w19, w2
  413b8c:	bl	4347b4 <feof@plt+0x316d4>
  413b90:	sub	x8, x29, #0x20
  413b94:	mov	w1, #0x1                   	// #1
  413b98:	mov	x24, x0
  413b9c:	lsr	x23, x0, #32
  413ba0:	bl	41dd44 <feof@plt+0x1ac64>
  413ba4:	sub	x8, x29, #0x40
  413ba8:	mov	w1, #0x2                   	// #2
  413bac:	mov	w0, w23
  413bb0:	bl	41dd44 <feof@plt+0x1ac64>
  413bb4:	ldr	w0, [x21]
  413bb8:	add	x8, sp, #0x30
  413bbc:	mov	w1, wzr
  413bc0:	bl	41dd44 <feof@plt+0x1ac64>
  413bc4:	ldur	x8, [x29, #-32]
  413bc8:	ldr	x9, [x20, #24]
  413bcc:	mov	w0, wzr
  413bd0:	cmp	x8, x9
  413bd4:	b.ne	413be8 <feof@plt+0x10b08>  // b.any
  413bd8:	ldur	x9, [x29, #-64]
  413bdc:	cmp	x9, x8
  413be0:	b.eq	413c08 <feof@plt+0x10b28>  // b.none
  413be4:	mov	w0, wzr
  413be8:	ldp	x20, x19, [sp, #224]
  413bec:	ldp	x22, x21, [sp, #208]
  413bf0:	ldp	x24, x23, [sp, #192]
  413bf4:	ldp	x26, x25, [sp, #176]
  413bf8:	ldp	x28, x27, [sp, #160]
  413bfc:	ldp	x29, x30, [sp, #144]
  413c00:	add	sp, sp, #0xf0
  413c04:	ret
  413c08:	ldr	w10, [x21, #4]
  413c0c:	cbz	w10, 413cd8 <feof@plt+0x10bf8>
  413c10:	ldr	x8, [x20, #120]
  413c14:	cbz	x8, 413c38 <feof@plt+0x10b58>
  413c18:	ldr	w8, [x8, #4]
  413c1c:	cbz	w8, 413c38 <feof@plt+0x10b58>
  413c20:	cbnz	w10, 413c38 <feof@plt+0x10b58>
  413c24:	ldr	w0, [x21]
  413c28:	ldr	w1, [x20, #16]
  413c2c:	bl	415960 <feof@plt+0x12880>
  413c30:	tbz	w0, #0, 413be4 <feof@plt+0x10b04>
  413c34:	ldr	w10, [x21, #4]
  413c38:	ldr	x8, [x21, #8]
  413c3c:	ldur	w9, [x29, #-24]
  413c40:	ldp	w16, w14, [sp, #56]
  413c44:	str	w10, [sp, #36]
  413c48:	str	x8, [sp, #40]
  413c4c:	ldur	w8, [x29, #-56]
  413c50:	cmp	w9, w8
  413c54:	b.gt	413cb4 <feof@plt+0x10bd4>
  413c58:	mov	w26, w8
  413c5c:	ldur	w8, [x29, #-20]
  413c60:	ldr	w1, [x20, #16]
  413c64:	ldur	w28, [x29, #-52]
  413c68:	mov	w0, w24
  413c6c:	mov	w27, w9
  413c70:	str	x8, [sp, #24]
  413c74:	mov	x24, x14
  413c78:	mov	x25, x16
  413c7c:	bl	415960 <feof@plt+0x12880>
  413c80:	mov	x16, x25
  413c84:	mov	x14, x24
  413c88:	tbz	w0, #0, 413cb4 <feof@plt+0x10bd4>
  413c8c:	ldr	w1, [x20, #16]
  413c90:	mov	w0, w23
  413c94:	bl	415960 <feof@plt+0x12880>
  413c98:	mov	x16, x25
  413c9c:	mov	x14, x24
  413ca0:	tbz	w0, #0, 413cb4 <feof@plt+0x10bd4>
  413ca4:	mov	x15, x28
  413ca8:	ldr	x28, [sp, #24]
  413cac:	mov	w25, w27
  413cb0:	b	413cf8 <feof@plt+0x10c18>
  413cb4:	ldr	x8, [x20, #120]
  413cb8:	cbz	x8, 413ce8 <feof@plt+0x10c08>
  413cbc:	ldr	w8, [x8, #4]
  413cc0:	mov	w26, w16
  413cc4:	mov	w15, w14
  413cc8:	mov	w25, w16
  413ccc:	mov	w28, w14
  413cd0:	cbnz	w8, 413be4 <feof@plt+0x10b04>
  413cd4:	b	413cf8 <feof@plt+0x10c18>
  413cd8:	ldr	x9, [sp, #48]
  413cdc:	cmp	x9, x8
  413ce0:	b.ne	413be4 <feof@plt+0x10b04>  // b.any
  413ce4:	b	413c10 <feof@plt+0x10b30>
  413ce8:	mov	w26, w16
  413cec:	mov	w15, w14
  413cf0:	mov	w25, w16
  413cf4:	mov	w28, w14
  413cf8:	tbz	w22, #0, 413da0 <feof@plt+0x10cc0>
  413cfc:	ldr	x8, [x20, #136]
  413d00:	ldur	w10, [x29, #-24]
  413d04:	mov	x9, xzr
  413d08:	add	x11, x8, #0xc
  413d0c:	b	413d18 <feof@plt+0x10c38>
  413d10:	add	x9, x9, #0x1
  413d14:	add	x11, x11, #0x8
  413d18:	cbz	x8, 413d2c <feof@plt+0x10c4c>
  413d1c:	ldr	w12, [x8, #4]
  413d20:	cmp	x9, w12, sxtw
  413d24:	b.lt	413d38 <feof@plt+0x10c58>  // b.tstop
  413d28:	b	413be4 <feof@plt+0x10b04>
  413d2c:	mov	w12, wzr
  413d30:	cmp	x9, w12, sxtw
  413d34:	b.ge	413be4 <feof@plt+0x10b04>  // b.tcont
  413d38:	ldur	w12, [x11, #-4]
  413d3c:	cmp	w12, w10
  413d40:	b.hi	413d10 <feof@plt+0x10c30>  // b.pmore
  413d44:	ldr	w12, [x11]
  413d48:	cmp	w12, w10
  413d4c:	b.cc	413d10 <feof@plt+0x10c30>  // b.lo, b.ul, b.last
  413d50:	ldrsw	x9, [x8, #4]
  413d54:	cmp	w9, #0x1
  413d58:	b.lt	413be4 <feof@plt+0x10b04>  // b.tstop
  413d5c:	ldur	w11, [x29, #-56]
  413d60:	mov	x10, xzr
  413d64:	add	x12, x8, #0xc
  413d68:	b	413d80 <feof@plt+0x10ca0>
  413d6c:	add	x10, x10, #0x1
  413d70:	mov	w0, wzr
  413d74:	cmp	x10, x9
  413d78:	add	x12, x12, #0x8
  413d7c:	b.ge	413be8 <feof@plt+0x10b08>  // b.tcont
  413d80:	ldur	w13, [x12, #-4]
  413d84:	cmp	w13, w11
  413d88:	b.hi	413d6c <feof@plt+0x10c8c>  // b.pmore
  413d8c:	ldr	w13, [x12]
  413d90:	cmp	w13, w11
  413d94:	b.cc	413d6c <feof@plt+0x10c8c>  // b.lo, b.ul, b.last
  413d98:	ldr	w10, [x21, #4]
  413d9c:	cbz	w10, 413efc <feof@plt+0x10e1c>
  413da0:	ldr	x22, [x20, #120]
  413da4:	cbz	x22, 413df4 <feof@plt+0x10d14>
  413da8:	ldp	w8, w9, [x22]
  413dac:	and	w0, w8, #0x7fffffff
  413db0:	cmp	w0, w9
  413db4:	b.ne	413e9c <feof@plt+0x10dbc>  // b.any
  413db8:	mov	x27, x16
  413dbc:	stp	x14, x15, [sp, #16]
  413dc0:	tbnz	w8, #31, 413e0c <feof@plt+0x10d2c>
  413dc4:	add	w1, w0, #0x1
  413dc8:	bl	41bd34 <feof@plt+0x18c54>
  413dcc:	mov	w21, w0
  413dd0:	ldr	x0, [x20, #120]
  413dd4:	mov	w8, #0x28                  	// #40
  413dd8:	umull	x8, w21, w8
  413ddc:	add	x1, x8, #0x8
  413de0:	cbz	x0, 413eec <feof@plt+0x10e0c>
  413de4:	ldr	w23, [x0, #4]
  413de8:	mov	w24, wzr
  413dec:	str	wzr, [sp, #12]
  413df0:	b	413e40 <feof@plt+0x10d60>
  413df4:	mov	x27, x16
  413df8:	stp	x14, x15, [sp, #16]
  413dfc:	str	wzr, [sp, #12]
  413e00:	mov	w24, wzr
  413e04:	mov	w21, #0x4                   	// #4
  413e08:	b	413e2c <feof@plt+0x10d4c>
  413e0c:	str	xzr, [x20, #120]
  413e10:	ldr	w10, [x22, #4]
  413e14:	mov	w8, #0x4                   	// #4
  413e18:	mov	w24, #0x1                   	// #1
  413e1c:	add	w9, w10, #0x1
  413e20:	cmp	w9, #0x4
  413e24:	csinc	w21, w8, w10, ls  // ls = plast
  413e28:	str	w10, [sp, #12]
  413e2c:	mov	w8, #0x28                  	// #40
  413e30:	umull	x8, w21, w8
  413e34:	mov	x0, xzr
  413e38:	mov	w23, wzr
  413e3c:	add	x1, x8, #0x8
  413e40:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  413e44:	and	w8, w21, #0x7fffffff
  413e48:	str	x0, [x20, #120]
  413e4c:	stp	w8, w23, [x0]
  413e50:	ldp	x14, x15, [sp, #16]
  413e54:	mov	x16, x27
  413e58:	cbz	w24, 413e9c <feof@plt+0x10dbc>
  413e5c:	ldr	x9, [x20, #120]
  413e60:	ldr	w12, [sp, #12]
  413e64:	cbz	w12, 413e98 <feof@plt+0x10db8>
  413e68:	add	x8, x22, #0x8
  413e6c:	add	x9, x9, #0x8
  413e70:	mov	w10, w12
  413e74:	ldr	x11, [x8, #32]
  413e78:	ldp	q1, q0, [x8]
  413e7c:	subs	w10, w10, #0x1
  413e80:	add	x8, x8, #0x28
  413e84:	str	x11, [x9, #32]
  413e88:	stp	q1, q0, [x9]
  413e8c:	add	x9, x9, #0x28
  413e90:	b.ne	413e74 <feof@plt+0x10d94>  // b.any
  413e94:	ldr	x9, [x20, #120]
  413e98:	str	w12, [x9, #4]
  413e9c:	ldr	x8, [x20, #120]
  413ea0:	mov	w9, #0x28                  	// #40
  413ea4:	mov	w10, w25
  413ea8:	mov	w11, w26
  413eac:	ldr	w12, [x8, #4]
  413eb0:	bfi	x10, x28, #32, #32
  413eb4:	bfi	x11, x15, #32, #32
  413eb8:	bfi	x16, x14, #32, #32
  413ebc:	add	w13, w12, #0x1
  413ec0:	madd	x9, x12, x9, x8
  413ec4:	str	w13, [x8, #4]
  413ec8:	stp	x10, x11, [x9, #8]
  413ecc:	ldr	w8, [sp, #36]
  413ed0:	mov	w0, #0x1                   	// #1
  413ed4:	stur	x16, [x9, #28]
  413ed8:	str	w19, [x9, #36]
  413edc:	str	w8, [x9, #24]
  413ee0:	ldr	x8, [sp, #40]
  413ee4:	str	x8, [x9, #40]
  413ee8:	b	413be8 <feof@plt+0x10b08>
  413eec:	str	wzr, [sp, #12]
  413ef0:	mov	w24, wzr
  413ef4:	mov	w23, wzr
  413ef8:	b	413e40 <feof@plt+0x10d60>
  413efc:	ldr	w11, [sp, #56]
  413f00:	mov	x10, xzr
  413f04:	add	x8, x8, #0xc
  413f08:	b	413f20 <feof@plt+0x10e40>
  413f0c:	add	x10, x10, #0x1
  413f10:	mov	w0, wzr
  413f14:	cmp	x10, x9
  413f18:	add	x8, x8, #0x8
  413f1c:	b.ge	413be8 <feof@plt+0x10b08>  // b.tcont
  413f20:	ldur	w12, [x8, #-4]
  413f24:	cmp	w12, w11
  413f28:	b.hi	413f0c <feof@plt+0x10e2c>  // b.pmore
  413f2c:	ldr	w12, [x8]
  413f30:	cmp	w12, w11
  413f34:	b.cc	413f0c <feof@plt+0x10e2c>  // b.lo, b.ul, b.last
  413f38:	b	413da0 <feof@plt+0x10cc0>
  413f3c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  413f40:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  413f44:	add	x0, x0, #0x866
  413f48:	add	x2, x2, #0x8b1
  413f4c:	mov	w1, #0x39f                 	// #927
  413f50:	bl	40f560 <feof@plt+0xc480>
  413f54:	sub	sp, sp, #0x1b0
  413f58:	stp	x29, x30, [sp, #336]
  413f5c:	stp	x28, x27, [sp, #352]
  413f60:	stp	x26, x25, [sp, #368]
  413f64:	stp	x24, x23, [sp, #384]
  413f68:	stp	x22, x21, [sp, #400]
  413f6c:	stp	x20, x19, [sp, #416]
  413f70:	add	x29, sp, #0x150
  413f74:	mov	x23, x0
  413f78:	ldr	x0, [x0]
  413f7c:	mov	w20, w2
  413f80:	mov	x21, x1
  413f84:	bl	41a7a4 <feof@plt+0x176c4>
  413f88:	mov	x0, x21
  413f8c:	mov	w1, wzr
  413f90:	bl	436bc4 <feof@plt+0x33ae4>
  413f94:	cmp	w0, #0x2
  413f98:	b.cc	415704 <feof@plt+0x12624>  // b.lo, b.ul, b.last
  413f9c:	ldrb	w8, [x23, #108]
  413fa0:	cbz	w8, 415704 <feof@plt+0x12624>
  413fa4:	ldr	w8, [x23, #200]
  413fa8:	cmp	w0, w8
  413fac:	b.ne	413fb8 <feof@plt+0x10ed8>  // b.any
  413fb0:	ldr	w8, [x21, #120]
  413fb4:	cbz	w8, 415704 <feof@plt+0x12624>
  413fb8:	ldr	x8, [x23]
  413fbc:	str	w0, [x23, #200]
  413fc0:	mov	x0, x8
  413fc4:	bl	41a314 <feof@plt+0x17234>
  413fc8:	ldr	x8, [x23]
  413fcc:	str	x0, [sp]
  413fd0:	mov	x1, xzr
  413fd4:	mov	x0, x8
  413fd8:	bl	41a29c <feof@plt+0x171bc>
  413fdc:	add	x0, sp, #0x88
  413fe0:	mov	x1, x23
  413fe4:	mov	x2, x21
  413fe8:	mov	w3, w20
  413fec:	add	x19, sp, #0x88
  413ff0:	bl	4129d4 <feof@plt+0xf8f4>
  413ff4:	mov	x24, xzr
  413ff8:	add	x8, x19, #0x18
  413ffc:	add	x25, x19, #0x38
  414000:	stp	x8, x23, [sp, #8]
  414004:	b	414010 <feof@plt+0x10f30>
  414008:	ldp	x23, x24, [sp, #16]
  41400c:	add	x24, x24, #0x1
  414010:	ldr	x19, [sp, #272]
  414014:	cbz	x19, 414028 <feof@plt+0x10f48>
  414018:	ldr	w8, [x19, #4]
  41401c:	cmp	x24, w8, sxtw
  414020:	b.lt	414034 <feof@plt+0x10f54>  // b.tstop
  414024:	b	415674 <feof@plt+0x12594>
  414028:	mov	w8, wzr
  41402c:	cmp	x24, w8, sxtw
  414030:	b.ge	415674 <feof@plt+0x12594>  // b.tcont
  414034:	ldrb	w8, [x23, #223]
  414038:	add	x9, x19, x24, lsl #3
  41403c:	add	x20, x9, #0x8
  414040:	cbz	w8, 414084 <feof@plt+0x10fa4>
  414044:	cbz	x24, 4141b4 <feof@plt+0x110d4>
  414048:	ldrb	w8, [sp, #250]
  41404c:	cbz	w8, 4158ec <feof@plt+0x1280c>
  414050:	ldr	w8, [sp, #280]
  414054:	ldr	x0, [sp, #144]
  414058:	tbnz	w8, #31, 41407c <feof@plt+0x10f9c>
  41405c:	mov	w21, #0xffffffff            	// #-1
  414060:	mov	w1, #0x2e                  	// #46
  414064:	bl	41803c <feof@plt+0x14f5c>
  414068:	ldr	w8, [sp, #280]
  41406c:	ldr	x0, [sp, #144]
  414070:	add	w21, w21, #0x1
  414074:	cmp	w21, w8
  414078:	b.lt	414060 <feof@plt+0x10f80>  // b.tstop
  41407c:	bl	41a7a4 <feof@plt+0x176c4>
  414080:	b	4141b4 <feof@plt+0x110d4>
  414084:	ldr	w9, [sp, #168]
  414088:	cbnz	x24, 414098 <feof@plt+0x10fb8>
  41408c:	ldr	w8, [x19, #12]
  414090:	cmp	w9, w8
  414094:	b.le	4141b4 <feof@plt+0x110d4>
  414098:	ldr	w8, [x20]
  41409c:	cmp	w8, w9
  4140a0:	b.hi	4140b4 <feof@plt+0x10fd4>  // b.pmore
  4140a4:	add	x10, x19, x24, lsl #3
  4140a8:	ldr	w10, [x10, #12]
  4140ac:	cmp	w10, w9
  4140b0:	b.cs	414190 <feof@plt+0x110b0>  // b.hs, b.nlast
  4140b4:	ldr	x11, [sp, #256]
  4140b8:	add	x9, x19, x24, lsl #3
  4140bc:	mov	x10, xzr
  4140c0:	add	x21, x9, #0xc
  4140c4:	add	x9, x11, #0x8
  4140c8:	b	4140d4 <feof@plt+0x10ff4>
  4140cc:	add	x10, x10, #0x1
  4140d0:	add	x9, x9, #0x28
  4140d4:	cbz	x11, 4140e8 <feof@plt+0x11008>
  4140d8:	ldr	w12, [x11, #4]
  4140dc:	cmp	x10, w12, uxtw
  4140e0:	b.cc	4140f4 <feof@plt+0x11014>  // b.lo, b.ul, b.last
  4140e4:	b	41412c <feof@plt+0x1104c>
  4140e8:	mov	w12, wzr
  4140ec:	cmp	x10, w12, uxtw
  4140f0:	b.cs	41412c <feof@plt+0x1104c>  // b.hs, b.nlast
  4140f4:	ldr	w12, [x9]
  4140f8:	cmp	w8, w12
  4140fc:	b.hi	4140cc <feof@plt+0x10fec>  // b.pmore
  414100:	ldr	w13, [x21]
  414104:	cmp	w13, w12
  414108:	b.cc	4140cc <feof@plt+0x10fec>  // b.lo, b.ul, b.last
  41410c:	ldr	x8, [sp, #8]
  414110:	ldp	q1, q0, [x8]
  414114:	stp	q1, q0, [x29, #-48]
  414118:	ldr	w8, [x9]
  41411c:	stur	w8, [x29, #-40]
  414120:	ldr	w8, [x9, #4]
  414124:	stur	w8, [x29, #-36]
  414128:	b	41419c <feof@plt+0x110bc>
  41412c:	mov	x22, xzr
  414130:	b	414138 <feof@plt+0x11058>
  414134:	add	x22, x22, #0x1
  414138:	ldr	x8, [sp, #264]
  41413c:	cbz	x8, 414150 <feof@plt+0x11070>
  414140:	ldr	w9, [x8, #4]
  414144:	cmp	x22, w9, uxtw
  414148:	b.cc	41415c <feof@plt+0x1107c>  // b.lo, b.ul, b.last
  41414c:	b	4158bc <feof@plt+0x127dc>
  414150:	mov	w9, wzr
  414154:	cmp	x22, w9, uxtw
  414158:	b.cs	4158bc <feof@plt+0x127dc>  // b.hs, b.nlast
  41415c:	add	x8, x8, x22, lsl #3
  414160:	ldr	x8, [x8, #8]
  414164:	ldr	w0, [x8]
  414168:	sub	x8, x29, #0x30
  41416c:	bl	41dba0 <feof@plt+0x1aac0>
  414170:	ldur	w8, [x29, #-40]
  414174:	ldr	w9, [x20]
  414178:	cmp	w9, w8
  41417c:	b.hi	414134 <feof@plt+0x11054>  // b.pmore
  414180:	ldr	w9, [x21]
  414184:	cmp	w9, w8
  414188:	b.cc	414134 <feof@plt+0x11054>  // b.lo, b.ul, b.last
  41418c:	b	41419c <feof@plt+0x110bc>
  414190:	ldr	x8, [sp, #8]
  414194:	ldp	q1, q0, [x8]
  414198:	stp	q1, q0, [x29, #-48]
  41419c:	ldp	q0, q1, [x29, #-48]
  4141a0:	ldr	x8, [x23, #144]
  4141a4:	add	x1, sp, #0x60
  4141a8:	mov	x0, x23
  4141ac:	stp	q0, q1, [sp, #96]
  4141b0:	blr	x8
  4141b4:	add	x8, x19, x24, lsl #3
  4141b8:	ldr	w8, [x8, #12]
  4141bc:	ldr	w22, [x20]
  4141c0:	str	x24, [sp, #24]
  4141c4:	str	x8, [sp, #56]
  4141c8:	cmp	w22, w8
  4141cc:	b.ls	4141f4 <feof@plt+0x11114>  // b.plast
  4141d0:	b	414008 <feof@plt+0x10f28>
  4141d4:	ldr	w8, [x24]
  4141d8:	tbnz	w8, #31, 4146cc <feof@plt+0x115ec>
  4141dc:	mov	x0, x24
  4141e0:	bl	402b20 <free@plt>
  4141e4:	ldr	x8, [sp, #56]
  4141e8:	cmp	x22, x8
  4141ec:	add	x22, x22, #0x1
  4141f0:	b.cs	414008 <feof@plt+0x10f28>  // b.hs, b.nlast
  4141f4:	ldr	x0, [sp, #160]
  4141f8:	mov	w1, w22
  4141fc:	bl	41d7e0 <feof@plt+0x1a700>
  414200:	cbz	x0, 4141e4 <feof@plt+0x11104>
  414204:	mov	x27, x0
  414208:	mov	x26, x1
  41420c:	mov	x19, xzr
  414210:	b	414220 <feof@plt+0x11140>
  414214:	ldr	x0, [sp, #144]
  414218:	bl	41a7a4 <feof@plt+0x176c4>
  41421c:	add	x19, x19, #0x1
  414220:	ldr	x8, [sp, #264]
  414224:	cbz	x8, 414238 <feof@plt+0x11158>
  414228:	ldr	w9, [x8, #4]
  41422c:	cmp	x19, w9, uxtw
  414230:	b.cc	414244 <feof@plt+0x11164>  // b.lo, b.ul, b.last
  414234:	b	4143b4 <feof@plt+0x112d4>
  414238:	mov	w9, wzr
  41423c:	cmp	x19, w9, uxtw
  414240:	b.cs	4143b4 <feof@plt+0x112d4>  // b.hs, b.nlast
  414244:	add	x8, x8, x19, lsl #3
  414248:	ldr	x20, [x8, #8]
  41424c:	mov	x0, x20
  414250:	bl	437c48 <feof@plt+0x34b68>
  414254:	tbz	w0, #0, 41421c <feof@plt+0x1113c>
  414258:	ldp	w8, w9, [x20]
  41425c:	cmp	w8, w9
  414260:	b.ne	415754 <feof@plt+0x12674>  // b.any
  414264:	ldr	x1, [sp, #160]
  414268:	mov	x0, x20
  41426c:	mov	w2, w22
  414270:	bl	437d38 <feof@plt+0x34c58>
  414274:	tbz	w0, #0, 41421c <feof@plt+0x1113c>
  414278:	ldr	w8, [sp, #204]
  41427c:	cmn	w8, #0x1
  414280:	b.eq	41429c <feof@plt+0x111bc>  // b.none
  414284:	ldr	x8, [sp, #192]
  414288:	ldr	x1, [sp, #240]
  41428c:	ldr	x0, [x8]
  414290:	bl	419e20 <feof@plt+0x16d40>
  414294:	mov	w8, #0xffffffff            	// #-1
  414298:	str	w8, [sp, #204]
  41429c:	ldrb	w8, [sp, #250]
  4142a0:	cbz	w8, 414310 <feof@plt+0x11230>
  4142a4:	ldr	w8, [sp, #280]
  4142a8:	cmp	w8, #0x4
  4142ac:	b.lt	4142d8 <feof@plt+0x111f8>  // b.tstop
  4142b0:	mov	w21, wzr
  4142b4:	ldr	x0, [sp, #144]
  4142b8:	mov	w1, #0x20                  	// #32
  4142bc:	bl	41803c <feof@plt+0x14f5c>
  4142c0:	ldr	w8, [sp, #280]
  4142c4:	add	w21, w21, #0x1
  4142c8:	sub	w9, w8, #0x3
  4142cc:	cmp	w21, w9
  4142d0:	b.lt	4142b4 <feof@plt+0x111d4>  // b.tstop
  4142d4:	b	4142dc <feof@plt+0x111fc>
  4142d8:	mov	w21, wzr
  4142dc:	ldr	x0, [sp, #144]
  4142e0:	cmp	w21, w8
  4142e4:	b.ge	414304 <feof@plt+0x11224>  // b.tcont
  4142e8:	mov	w1, #0x2b                  	// #43
  4142ec:	bl	41803c <feof@plt+0x14f5c>
  4142f0:	ldr	w8, [sp, #280]
  4142f4:	ldr	x0, [sp, #144]
  4142f8:	add	w21, w21, #0x1
  4142fc:	cmp	w21, w8
  414300:	b.lt	4142e8 <feof@plt+0x11208>  // b.tstop
  414304:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  414308:	add	x1, x1, #0x8ae
  41430c:	bl	419e20 <feof@plt+0x16d40>
  414310:	ldr	x0, [sp, #144]
  414314:	mov	w1, #0x2b                  	// #43
  414318:	bl	41803c <feof@plt+0x14f5c>
  41431c:	ldr	w8, [sp, #204]
  414320:	cmn	w8, #0x2
  414324:	b.eq	414358 <feof@plt+0x11278>  // b.none
  414328:	cmn	w8, #0x1
  41432c:	b.eq	414340 <feof@plt+0x11260>  // b.none
  414330:	ldr	x8, [sp, #192]
  414334:	ldr	x1, [sp, #240]
  414338:	ldr	x0, [x8]
  41433c:	bl	419e20 <feof@plt+0x16d40>
  414340:	ldr	x8, [sp, #192]
  414344:	mov	w9, #0xfffffffe            	// #-2
  414348:	str	w9, [sp, #204]
  41434c:	ldr	x1, [sp, #224]
  414350:	ldr	x0, [x8]
  414354:	bl	419e20 <feof@plt+0x16d40>
  414358:	ldr	x8, [x20, #16]
  41435c:	cmp	x8, #0x1
  414360:	b.eq	41438c <feof@plt+0x112ac>  // b.none
  414364:	mov	x21, xzr
  414368:	ldr	x8, [x20, #8]
  41436c:	ldr	x0, [sp, #144]
  414370:	ldrb	w1, [x8, x21]
  414374:	bl	41803c <feof@plt+0x14f5c>
  414378:	ldr	x8, [x20, #16]
  41437c:	add	x21, x21, #0x1
  414380:	sub	x8, x8, #0x1
  414384:	cmp	x21, x8
  414388:	b.cc	414368 <feof@plt+0x11288>  // b.lo, b.ul, b.last
  41438c:	ldr	w8, [sp, #204]
  414390:	cmn	w8, #0x1
  414394:	b.eq	414214 <feof@plt+0x11134>  // b.none
  414398:	ldr	x8, [sp, #192]
  41439c:	ldr	x1, [sp, #240]
  4143a0:	ldr	x0, [x8]
  4143a4:	bl	419e20 <feof@plt+0x16d40>
  4143a8:	mov	w8, #0xffffffff            	// #-1
  4143ac:	str	w8, [sp, #204]
  4143b0:	b	414214 <feof@plt+0x11134>
  4143b4:	ldr	w8, [sp, #204]
  4143b8:	cmn	w8, #0x1
  4143bc:	b.eq	4143d8 <feof@plt+0x112f8>  // b.none
  4143c0:	ldr	x8, [sp, #192]
  4143c4:	ldr	x1, [sp, #240]
  4143c8:	ldr	x0, [x8]
  4143cc:	bl	419e20 <feof@plt+0x16d40>
  4143d0:	mov	w8, #0xffffffff            	// #-1
  4143d4:	str	w8, [sp, #204]
  4143d8:	mov	x11, #0x2200                	// #8704
  4143dc:	cmp	w26, #0x1
  4143e0:	mov	w23, w26
  4143e4:	movk	x11, #0x1, lsl #32
  4143e8:	b.lt	414420 <feof@plt+0x11340>  // b.tstop
  4143ec:	and	x23, x26, #0xffffffff
  4143f0:	sub	x8, x27, #0x1
  4143f4:	ldrb	w9, [x8, x23]
  4143f8:	cmp	w9, #0x20
  4143fc:	b.hi	414424 <feof@plt+0x11344>  // b.pmore
  414400:	mov	w10, #0x1                   	// #1
  414404:	lsl	x9, x10, x9
  414408:	tst	x9, x11
  41440c:	b.eq	414424 <feof@plt+0x11344>  // b.none
  414410:	sub	x23, x23, #0x1
  414414:	add	x9, x23, #0x1
  414418:	cmp	x9, #0x1
  41441c:	b.gt	4143f4 <feof@plt+0x11314>
  414420:	tbnz	w23, #31, 4158d4 <feof@plt+0x127f4>
  414424:	cmp	w23, w26
  414428:	b.gt	4158a4 <feof@plt+0x127c4>
  41442c:	cbz	w23, 414450 <feof@plt+0x11370>
  414430:	add	x8, x27, w23, sxtw
  414434:	ldurb	w8, [x8, #-1]
  414438:	cmp	w8, #0x20
  41443c:	b.hi	414450 <feof@plt+0x11370>  // b.pmore
  414440:	mov	w9, #0x1                   	// #1
  414444:	lsl	x8, x9, x8
  414448:	tst	x8, x11
  41444c:	b.ne	41588c <feof@plt+0x127ac>  // b.any
  414450:	ldrb	w8, [sp, #250]
  414454:	ldrsw	x21, [sp, #284]
  414458:	cbz	w8, 4144b8 <feof@plt+0x113d8>
  41445c:	mov	w0, w22
  414460:	bl	4106b0 <feof@plt+0xd5d0>
  414464:	ldr	w9, [sp, #280]
  414468:	ldr	x8, [sp, #144]
  41446c:	cmp	w9, w0
  414470:	b.le	4144a0 <feof@plt+0x113c0>
  414474:	mov	w19, w0
  414478:	mov	w20, wzr
  41447c:	mov	w1, #0x20                  	// #32
  414480:	mov	x0, x8
  414484:	bl	41803c <feof@plt+0x14f5c>
  414488:	ldr	w9, [sp, #280]
  41448c:	ldr	x8, [sp, #144]
  414490:	add	w20, w20, #0x1
  414494:	sub	w9, w9, w19
  414498:	cmp	w20, w9
  41449c:	b.lt	41447c <feof@plt+0x1139c>  // b.tstop
  4144a0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4144a4:	mov	x0, x8
  4144a8:	add	x1, x1, #0x91d
  4144ac:	mov	w2, w22
  4144b0:	bl	41a658 <feof@plt+0x17578>
  4144b4:	b	4144c4 <feof@plt+0x113e4>
  4144b8:	ldr	x0, [sp, #144]
  4144bc:	mov	w1, #0x20                  	// #32
  4144c0:	bl	41803c <feof@plt+0x14f5c>
  4144c4:	ldr	w20, [sp, #284]
  4144c8:	cmp	w20, w23
  4144cc:	b.ge	414594 <feof@plt+0x114b4>  // b.tcont
  4144d0:	mov	w26, wzr
  4144d4:	add	x19, x27, x21
  4144d8:	mov	w27, #0x7fffffff            	// #2147483647
  4144dc:	b	41450c <feof@plt+0x1142c>
  4144e0:	ldr	x0, [sp, #144]
  4144e4:	mov	w8, #0x7fffffff            	// #2147483647
  4144e8:	cmp	w27, w8
  4144ec:	csel	w8, w20, w27, eq  // eq = none
  4144f0:	cmp	w1, #0x20
  4144f4:	csel	w27, w27, w8, eq  // eq = none
  4144f8:	csel	w26, w26, w20, eq  // eq = none
  4144fc:	bl	41803c <feof@plt+0x14f5c>
  414500:	cmp	w23, w20
  414504:	add	x19, x19, #0x1
  414508:	b.eq	41459c <feof@plt+0x114bc>  // b.none
  41450c:	ldrb	w8, [sp, #248]
  414510:	add	w20, w20, #0x1
  414514:	cbz	w8, 41456c <feof@plt+0x1148c>
  414518:	add	x0, sp, #0x88
  41451c:	sub	x5, x29, #0x30
  414520:	mov	w4, #0x7fffffff            	// #2147483647
  414524:	mov	w1, w22
  414528:	mov	w2, w20
  41452c:	mov	w3, wzr
  414530:	bl	415bb8 <feof@plt+0x12ad8>
  414534:	tbz	w0, #0, 414548 <feof@plt+0x11468>
  414538:	ldur	w1, [x29, #-48]
  41453c:	mov	x0, x25
  414540:	bl	415a80 <feof@plt+0x129a0>
  414544:	b	41456c <feof@plt+0x1148c>
  414548:	ldr	w8, [sp, #204]
  41454c:	cmn	w8, #0x1
  414550:	b.eq	41456c <feof@plt+0x1148c>  // b.none
  414554:	ldr	x8, [sp, #192]
  414558:	ldr	x1, [sp, #240]
  41455c:	ldr	x0, [x8]
  414560:	bl	419e20 <feof@plt+0x16d40>
  414564:	mov	w8, #0xffffffff            	// #-1
  414568:	str	w8, [sp, #204]
  41456c:	ldrb	w1, [x19]
  414570:	cmp	w1, #0xd
  414574:	b.hi	4144e0 <feof@plt+0x11400>  // b.pmore
  414578:	mov	w8, #0x1                   	// #1
  41457c:	lsl	w8, w8, w1
  414580:	mov	w9, #0x2201                	// #8705
  414584:	tst	w8, w9
  414588:	b.eq	4144e0 <feof@plt+0x11400>  // b.none
  41458c:	mov	w1, #0x20                  	// #32
  414590:	b	4144e0 <feof@plt+0x11400>
  414594:	mov	w26, wzr
  414598:	mov	w27, #0x7fffffff            	// #2147483647
  41459c:	ldr	w8, [sp, #204]
  4145a0:	cmn	w8, #0x1
  4145a4:	b.eq	4145c0 <feof@plt+0x114e0>  // b.none
  4145a8:	ldr	x8, [sp, #192]
  4145ac:	ldr	x1, [sp, #240]
  4145b0:	ldr	x0, [x8]
  4145b4:	bl	419e20 <feof@plt+0x16d40>
  4145b8:	mov	w8, #0xffffffff            	// #-1
  4145bc:	str	w8, [sp, #204]
  4145c0:	ldr	x0, [sp, #144]
  4145c4:	bl	41a7a4 <feof@plt+0x176c4>
  4145c8:	ldr	x9, [sp, #256]
  4145cc:	cbz	x9, 414754 <feof@plt+0x11674>
  4145d0:	ldr	w8, [x9, #4]
  4145d4:	cbz	w8, 414754 <feof@plt+0x11674>
  4145d8:	add	x10, x9, #0x8
  4145dc:	add	x9, x9, #0x30
  4145e0:	mov	x11, xzr
  4145e4:	mov	x12, x9
  4145e8:	mov	x13, x10
  4145ec:	b	414608 <feof@plt+0x11528>
  4145f0:	add	x11, x11, #0x1
  4145f4:	cmp	x11, x8
  4145f8:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  4145fc:	cmp	x8, x11
  414600:	add	x12, x12, #0x28
  414604:	b.eq	414754 <feof@plt+0x11674>  // b.none
  414608:	ldr	w14, [x13, #16]
  41460c:	cmp	w14, #0x2
  414610:	b.eq	414754 <feof@plt+0x11674>  // b.none
  414614:	ldr	w14, [x13]
  414618:	ldr	w13, [x13, #8]
  41461c:	cmp	w14, w13
  414620:	b.hi	415784 <feof@plt+0x126a4>  // b.pmore
  414624:	cmp	w14, w22
  414628:	b.hi	4145f0 <feof@plt+0x11510>  // b.pmore
  41462c:	cmp	w13, w22
  414630:	b.cc	4145f0 <feof@plt+0x11510>  // b.lo, b.ul, b.last
  414634:	ldr	w12, [sp, #172]
  414638:	mov	x11, xzr
  41463c:	add	w23, w12, #0x1
  414640:	add	w12, w26, #0x1
  414644:	b	414668 <feof@plt+0x11588>
  414648:	ccmp	w23, w26, #0x0, hi  // hi = pmore
  41464c:	csel	w23, w23, w12, gt
  414650:	add	x11, x11, #0x1
  414654:	cmp	x11, x8
  414658:	csel	x10, x9, xzr, cc  // cc = lo, ul, last
  41465c:	cmp	x8, x11
  414660:	add	x9, x9, #0x28
  414664:	b.eq	414690 <feof@plt+0x115b0>  // b.none
  414668:	ldr	w13, [x10]
  41466c:	cmp	w13, w22
  414670:	b.hi	414650 <feof@plt+0x11570>  // b.pmore
  414674:	ldr	w13, [x10, #8]
  414678:	cmp	w13, w22
  41467c:	b.ne	414648 <feof@plt+0x11568>  // b.any
  414680:	ldr	w10, [x10, #12]
  414684:	cmp	w23, w10
  414688:	csinc	w23, w23, w10, gt
  41468c:	b	414650 <feof@plt+0x11570>
  414690:	ldrb	w8, [sp, #250]
  414694:	cbz	w8, 41470c <feof@plt+0x1162c>
  414698:	ldr	w8, [sp, #280]
  41469c:	cmp	w8, #0x4
  4146a0:	b.lt	4146d4 <feof@plt+0x115f4>  // b.tstop
  4146a4:	mov	w19, wzr
  4146a8:	ldr	x0, [sp, #144]
  4146ac:	mov	w1, #0x20                  	// #32
  4146b0:	bl	41803c <feof@plt+0x14f5c>
  4146b4:	ldr	w8, [sp, #280]
  4146b8:	add	w19, w19, #0x1
  4146bc:	sub	w9, w8, #0x3
  4146c0:	cmp	w19, w9
  4146c4:	b.lt	4146a8 <feof@plt+0x115c8>  // b.tstop
  4146c8:	b	4146d8 <feof@plt+0x115f8>
  4146cc:	str	wzr, [x24, #4]
  4146d0:	b	4141e4 <feof@plt+0x11104>
  4146d4:	mov	w19, wzr
  4146d8:	ldr	x0, [sp, #144]
  4146dc:	cmp	w19, w8
  4146e0:	b.ge	414700 <feof@plt+0x11620>  // b.tcont
  4146e4:	mov	w1, #0x20                  	// #32
  4146e8:	bl	41803c <feof@plt+0x14f5c>
  4146ec:	ldr	w8, [sp, #280]
  4146f0:	ldr	x0, [sp, #144]
  4146f4:	add	w19, w19, #0x1
  4146f8:	cmp	w19, w8
  4146fc:	b.lt	4146e4 <feof@plt+0x11604>  // b.tstop
  414700:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  414704:	add	x1, x1, #0x8ae
  414708:	bl	419e20 <feof@plt+0x16d40>
  41470c:	ldr	x0, [sp, #144]
  414710:	mov	w1, #0x20                  	// #32
  414714:	bl	41803c <feof@plt+0x14f5c>
  414718:	ldr	w8, [sp, #284]
  41471c:	add	w20, w8, #0x1
  414720:	cmp	w20, w23
  414724:	b.lt	41478c <feof@plt+0x116ac>  // b.tstop
  414728:	ldr	w8, [sp, #204]
  41472c:	cmn	w8, #0x1
  414730:	b.eq	41474c <feof@plt+0x1166c>  // b.none
  414734:	ldr	x8, [sp, #192]
  414738:	ldr	x1, [sp, #240]
  41473c:	ldr	x0, [x8]
  414740:	bl	419e20 <feof@plt+0x16d40>
  414744:	mov	w8, #0xffffffff            	// #-1
  414748:	str	w8, [sp, #204]
  41474c:	ldr	x0, [sp, #144]
  414750:	bl	41a7a4 <feof@plt+0x176c4>
  414754:	ldrb	w8, [sp, #249]
  414758:	str	x22, [sp, #88]
  41475c:	cbz	w8, 414c74 <feof@plt+0x11b94>
  414760:	ldr	x8, [sp, #256]
  414764:	cbz	x8, 414c74 <feof@plt+0x11b94>
  414768:	mov	x19, xzr
  41476c:	mov	x26, xzr
  414770:	b	414858 <feof@plt+0x11778>
  414774:	ldr	x0, [sp, #144]
  414778:	mov	w1, #0x20                  	// #32
  41477c:	bl	41803c <feof@plt+0x14f5c>
  414780:	add	w20, w20, #0x1
  414784:	cmp	w23, w20
  414788:	b.eq	414728 <feof@plt+0x11648>  // b.none
  41478c:	add	x0, sp, #0x88
  414790:	sub	x5, x29, #0x30
  414794:	mov	w1, w22
  414798:	mov	w2, w20
  41479c:	mov	w3, w27
  4147a0:	mov	w4, w26
  4147a4:	bl	415bb8 <feof@plt+0x12ad8>
  4147a8:	tbz	w0, #0, 4147e0 <feof@plt+0x11700>
  4147ac:	ldur	w19, [x29, #-48]
  4147b0:	mov	x0, x25
  4147b4:	mov	w1, w19
  4147b8:	bl	415a80 <feof@plt+0x129a0>
  4147bc:	ldurb	w8, [x29, #-44]
  4147c0:	cbz	w8, 414808 <feof@plt+0x11728>
  4147c4:	sxtw	x8, w19
  4147c8:	cmp	w8, #0x2
  4147cc:	b.gt	414814 <feof@plt+0x11734>
  4147d0:	ldp	x9, x0, [sp, #136]
  4147d4:	add	x8, x9, x8
  4147d8:	ldrb	w1, [x8, #116]
  4147dc:	b	41477c <feof@plt+0x1169c>
  4147e0:	ldr	w8, [sp, #204]
  4147e4:	cmn	w8, #0x1
  4147e8:	b.eq	414774 <feof@plt+0x11694>  // b.none
  4147ec:	ldr	x8, [sp, #192]
  4147f0:	ldr	x1, [sp, #240]
  4147f4:	ldr	x0, [x8]
  4147f8:	bl	419e20 <feof@plt+0x16d40>
  4147fc:	mov	w8, #0xffffffff            	// #-1
  414800:	str	w8, [sp, #204]
  414804:	b	414774 <feof@plt+0x11694>
  414808:	ldr	x0, [sp, #144]
  41480c:	mov	w1, #0x7e                  	// #126
  414810:	b	41477c <feof@plt+0x1169c>
  414814:	ldr	x0, [sp, #144]
  414818:	mov	w1, #0x5e                  	// #94
  41481c:	b	41477c <feof@plt+0x1169c>
  414820:	mov	x0, x26
  414824:	ldr	w8, [x0, #4]
  414828:	mov	w10, #0x28                  	// #40
  41482c:	mov	x26, x0
  414830:	add	w9, w8, #0x1
  414834:	madd	x8, x8, x10, x0
  414838:	str	w9, [x0, #4]
  41483c:	stp	w19, w21, [x8, #8]
  414840:	stp	x20, x27, [x8, #16]
  414844:	str	x12, [x8, #32]
  414848:	str	wzr, [x8, #40]
  41484c:	ldr	x8, [sp, #256]
  414850:	add	x19, x19, #0x1
  414854:	cbz	x8, 41499c <feof@plt+0x118bc>
  414858:	ldr	w9, [x8, #4]
  41485c:	mov	w10, #0x28                  	// #40
  414860:	madd	x8, x19, x10, x8
  414864:	add	x8, x8, #0x8
  414868:	cmp	x19, x9
  41486c:	csel	x21, x8, xzr, cc  // cc = lo, ul, last
  414870:	b.cs	41499c <feof@plt+0x118bc>  // b.hs, b.nlast
  414874:	ldr	x0, [x21, #32]
  414878:	cbz	x0, 41484c <feof@plt+0x1176c>
  41487c:	ldr	w8, [x21, #20]
  414880:	cmp	w8, w22
  414884:	b.ne	41484c <feof@plt+0x1176c>  // b.any
  414888:	ldr	w8, [x21, #24]
  41488c:	ldr	w9, [sp, #284]
  414890:	cmp	w8, w9
  414894:	b.le	41484c <feof@plt+0x1176c>
  414898:	ldr	x8, [x0]
  41489c:	ldr	w1, [x21, #28]
  4148a0:	ldr	x8, [x8, #16]
  4148a4:	blr	x8
  4148a8:	bfxil	x27, x1, #0, #8
  4148ac:	cbz	x0, 41484c <feof@plt+0x1176c>
  4148b0:	ldr	w21, [x21, #24]
  4148b4:	mov	x20, x0
  4148b8:	bl	402a50 <strlen@plt>
  4148bc:	mov	x12, x0
  4148c0:	cbz	x26, 414904 <feof@plt+0x11824>
  4148c4:	ldp	w8, w9, [x26]
  4148c8:	and	w28, w8, #0x7fffffff
  4148cc:	cmp	w28, w9
  4148d0:	b.ne	414820 <feof@plt+0x11740>  // b.any
  4148d4:	str	w21, [sp, #80]
  4148d8:	mov	x21, x12
  4148dc:	add	w1, w28, #0x1
  4148e0:	tbnz	w8, #31, 414924 <feof@plt+0x11844>
  4148e4:	mov	w0, w28
  4148e8:	bl	41bd34 <feof@plt+0x18c54>
  4148ec:	ldr	w22, [x26, #4]
  4148f0:	mov	w23, w0
  4148f4:	mov	w28, wzr
  4148f8:	mov	w24, wzr
  4148fc:	mov	x0, x26
  414900:	b	41493c <feof@plt+0x1185c>
  414904:	str	w21, [sp, #80]
  414908:	mov	x21, x12
  41490c:	mov	w28, wzr
  414910:	mov	w24, wzr
  414914:	mov	x0, xzr
  414918:	mov	w22, wzr
  41491c:	mov	w23, #0x4                   	// #4
  414920:	b	41493c <feof@plt+0x1185c>
  414924:	cmp	w28, #0x4
  414928:	mov	w8, #0x4                   	// #4
  41492c:	mov	x0, xzr
  414930:	mov	w22, wzr
  414934:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  414938:	mov	w24, #0x1                   	// #1
  41493c:	mov	w8, #0x28                  	// #40
  414940:	umull	x8, w23, w8
  414944:	add	x1, x8, #0x8
  414948:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41494c:	and	w8, w23, #0x7fffffff
  414950:	stp	w8, w22, [x0]
  414954:	ldr	x22, [sp, #88]
  414958:	mov	x12, x21
  41495c:	ldr	w21, [sp, #80]
  414960:	cbz	w24, 414824 <feof@plt+0x11744>
  414964:	cbz	w28, 414994 <feof@plt+0x118b4>
  414968:	add	x8, x26, #0x8
  41496c:	add	x9, x0, #0x8
  414970:	mov	w10, w28
  414974:	ldr	x11, [x8, #32]
  414978:	ldp	q1, q0, [x8]
  41497c:	subs	w10, w10, #0x1
  414980:	add	x8, x8, #0x28
  414984:	str	x11, [x9, #32]
  414988:	stp	q1, q0, [x9]
  41498c:	add	x9, x9, #0x28
  414990:	b.ne	414974 <feof@plt+0x11894>  // b.any
  414994:	str	w28, [x0, #4]
  414998:	b	414824 <feof@plt+0x11744>
  41499c:	cbz	x26, 414c74 <feof@plt+0x11b94>
  4149a0:	ldr	w1, [x26, #4]
  4149a4:	cbz	w1, 414c5c <feof@plt+0x11b7c>
  4149a8:	cmp	w1, #0x1
  4149ac:	b.ne	4149bc <feof@plt+0x118dc>  // b.any
  4149b0:	mov	w8, wzr
  4149b4:	mov	w14, #0x28                  	// #40
  4149b8:	b	4149e0 <feof@plt+0x11900>
  4149bc:	adrp	x3, 415000 <feof@plt+0x11f20>
  4149c0:	add	x0, x26, #0x8
  4149c4:	mov	w2, #0x28                  	// #40
  4149c8:	add	x3, x3, #0xd40
  4149cc:	bl	420304 <feof@plt+0x1d224>
  4149d0:	ldr	w1, [x26, #4]
  4149d4:	mov	w14, #0x28                  	// #40
  4149d8:	cbz	w1, 41566c <feof@plt+0x1258c>
  4149dc:	sub	w8, w1, #0x1
  4149e0:	mov	w9, #0x1                   	// #1
  4149e4:	mov	w10, #0x7fffffff            	// #2147483647
  4149e8:	umaddl	x11, w8, w14, x26
  4149ec:	ldrsw	x12, [x11, #12]
  4149f0:	ldr	x13, [x11, #32]
  4149f4:	sub	w8, w8, #0x1
  4149f8:	add	x13, x13, x12
  4149fc:	cmp	x13, w10, sxtw
  414a00:	cinc	w9, w9, cs  // cs = hs, nlast
  414a04:	cmp	w1, w8
  414a08:	mov	w10, w12
  414a0c:	str	w9, [x11, #40]
  414a10:	b.hi	4149e8 <feof@plt+0x11908>  // b.pmore
  414a14:	add	w19, w9, #0x1
  414a18:	mov	w20, wzr
  414a1c:	mov	w27, wzr
  414a20:	add	x23, x26, #0x8
  414a24:	b	414a40 <feof@plt+0x11960>
  414a28:	ldr	x0, [sp, #144]
  414a2c:	bl	41a7a4 <feof@plt+0x176c4>
  414a30:	ldr	x22, [sp, #88]
  414a34:	add	w20, w20, #0x1
  414a38:	cmp	w20, w19
  414a3c:	b.eq	414c20 <feof@plt+0x11b40>  // b.none
  414a40:	ldrb	w8, [sp, #250]
  414a44:	cbz	w8, 414ab4 <feof@plt+0x119d4>
  414a48:	ldr	w8, [sp, #280]
  414a4c:	cmp	w8, #0x4
  414a50:	b.lt	414a7c <feof@plt+0x1199c>  // b.tstop
  414a54:	mov	w21, wzr
  414a58:	ldr	x0, [sp, #144]
  414a5c:	mov	w1, #0x20                  	// #32
  414a60:	bl	41803c <feof@plt+0x14f5c>
  414a64:	ldr	w8, [sp, #280]
  414a68:	add	w21, w21, #0x1
  414a6c:	sub	w9, w8, #0x3
  414a70:	cmp	w21, w9
  414a74:	b.lt	414a58 <feof@plt+0x11978>  // b.tstop
  414a78:	b	414a80 <feof@plt+0x119a0>
  414a7c:	mov	w21, wzr
  414a80:	ldr	x0, [sp, #144]
  414a84:	cmp	w21, w8
  414a88:	b.ge	414aa8 <feof@plt+0x119c8>  // b.tcont
  414a8c:	mov	w1, #0x20                  	// #32
  414a90:	bl	41803c <feof@plt+0x14f5c>
  414a94:	ldr	w8, [sp, #280]
  414a98:	ldr	x0, [sp, #144]
  414a9c:	add	w21, w21, #0x1
  414aa0:	cmp	w21, w8
  414aa4:	b.lt	414a8c <feof@plt+0x119ac>  // b.tstop
  414aa8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  414aac:	add	x1, x1, #0x8ae
  414ab0:	bl	419e20 <feof@plt+0x16d40>
  414ab4:	ldr	x0, [sp, #144]
  414ab8:	mov	w1, #0x20                  	// #32
  414abc:	bl	41803c <feof@plt+0x14f5c>
  414ac0:	ldr	w8, [x26, #4]
  414ac4:	cbz	w8, 414bf8 <feof@plt+0x11b18>
  414ac8:	ldr	w8, [sp, #284]
  414acc:	mov	x28, xzr
  414ad0:	mov	x21, x23
  414ad4:	add	w22, w8, #0x1
  414ad8:	b	414b00 <feof@plt+0x11a20>
  414adc:	ldr	w8, [x21, #24]
  414ae0:	add	w22, w22, w8
  414ae4:	ldr	w8, [x26, #4]
  414ae8:	add	x28, x28, #0x1
  414aec:	mov	w9, #0x28                  	// #40
  414af0:	madd	x9, x28, x9, x26
  414af4:	cmp	x28, x8
  414af8:	add	x21, x9, #0x8
  414afc:	b.cs	414bf8 <feof@plt+0x11b18>  // b.hs, b.nlast
  414b00:	ldr	w8, [x21, #32]
  414b04:	cmp	w20, w8
  414b08:	b.gt	414bf8 <feof@plt+0x11b18>
  414b0c:	ldr	w24, [x21, #4]
  414b10:	b.ne	414b7c <feof@plt+0x11a9c>  // b.any
  414b14:	cmp	w22, w24
  414b18:	b.gt	415724 <feof@plt+0x12644>
  414b1c:	b.ge	414b3c <feof@plt+0x11a5c>  // b.tcont
  414b20:	sub	w22, w24, w22
  414b24:	ldr	x0, [sp, #144]
  414b28:	mov	w1, #0x20                  	// #32
  414b2c:	bl	41803c <feof@plt+0x14f5c>
  414b30:	subs	w22, w22, #0x1
  414b34:	b.ne	414b24 <feof@plt+0x11a44>  // b.any
  414b38:	mov	w22, w24
  414b3c:	ldr	w1, [x21]
  414b40:	mov	x0, x25
  414b44:	bl	415a80 <feof@plt+0x129a0>
  414b48:	ldr	x0, [sp, #144]
  414b4c:	ldr	x1, [x21, #8]
  414b50:	bl	419e20 <feof@plt+0x16d40>
  414b54:	ldr	w8, [sp, #204]
  414b58:	cmn	w8, #0x1
  414b5c:	b.eq	414adc <feof@plt+0x119fc>  // b.none
  414b60:	ldr	x8, [sp, #192]
  414b64:	ldr	x1, [sp, #240]
  414b68:	ldr	x0, [x8]
  414b6c:	bl	419e20 <feof@plt+0x16d40>
  414b70:	mov	w8, #0xffffffff            	// #-1
  414b74:	str	w8, [sp, #204]
  414b78:	b	414adc <feof@plt+0x119fc>
  414b7c:	cmp	w24, w27
  414b80:	b.eq	414ae4 <feof@plt+0x11a04>  // b.none
  414b84:	cmp	w22, w24
  414b88:	b.gt	41576c <feof@plt+0x1268c>
  414b8c:	b.ge	414bb0 <feof@plt+0x11ad0>  // b.tcont
  414b90:	sub	w22, w24, w22
  414b94:	ldr	x0, [sp, #144]
  414b98:	mov	w1, #0x20                  	// #32
  414b9c:	bl	41803c <feof@plt+0x14f5c>
  414ba0:	subs	w22, w22, #0x1
  414ba4:	b.ne	414b94 <feof@plt+0x11ab4>  // b.any
  414ba8:	mov	w27, w24
  414bac:	b	414bb4 <feof@plt+0x11ad4>
  414bb0:	mov	w27, w22
  414bb4:	ldr	w1, [x21]
  414bb8:	mov	x0, x25
  414bbc:	bl	415a80 <feof@plt+0x129a0>
  414bc0:	ldr	x0, [sp, #144]
  414bc4:	mov	w1, #0x7c                  	// #124
  414bc8:	bl	41803c <feof@plt+0x14f5c>
  414bcc:	ldr	w8, [sp, #204]
  414bd0:	cmn	w8, #0x1
  414bd4:	b.eq	414bf0 <feof@plt+0x11b10>  // b.none
  414bd8:	ldr	x8, [sp, #192]
  414bdc:	ldr	x1, [sp, #240]
  414be0:	ldr	x0, [x8]
  414be4:	bl	419e20 <feof@plt+0x16d40>
  414be8:	mov	w8, #0xffffffff            	// #-1
  414bec:	str	w8, [sp, #204]
  414bf0:	add	w22, w27, #0x1
  414bf4:	b	414ae4 <feof@plt+0x11a04>
  414bf8:	ldr	w8, [sp, #204]
  414bfc:	cmn	w8, #0x1
  414c00:	b.eq	414a28 <feof@plt+0x11948>  // b.none
  414c04:	ldr	x8, [sp, #192]
  414c08:	ldr	x1, [sp, #240]
  414c0c:	ldr	x0, [x8]
  414c10:	bl	419e20 <feof@plt+0x16d40>
  414c14:	mov	w8, #0xffffffff            	// #-1
  414c18:	str	w8, [sp, #204]
  414c1c:	b	414a28 <feof@plt+0x11948>
  414c20:	ldr	w8, [x26, #4]
  414c24:	cbz	w8, 414c5c <feof@plt+0x11b7c>
  414c28:	mov	x19, xzr
  414c2c:	add	x20, x26, #0x18
  414c30:	b	414c44 <feof@plt+0x11b64>
  414c34:	add	x19, x19, #0x1
  414c38:	cmp	x19, w8, uxtw
  414c3c:	add	x20, x20, #0x28
  414c40:	b.cs	414c5c <feof@plt+0x11b7c>  // b.hs, b.nlast
  414c44:	ldrb	w9, [x20]
  414c48:	cbz	w9, 414c34 <feof@plt+0x11b54>
  414c4c:	ldur	x0, [x20, #-8]
  414c50:	bl	402b20 <free@plt>
  414c54:	ldr	w8, [x26, #4]
  414c58:	b	414c34 <feof@plt+0x11b54>
  414c5c:	ldr	w8, [x26]
  414c60:	tbnz	w8, #31, 414c70 <feof@plt+0x11b90>
  414c64:	mov	x0, x26
  414c68:	bl	402b20 <free@plt>
  414c6c:	b	414c74 <feof@plt+0x11b94>
  414c70:	str	wzr, [x26, #4]
  414c74:	ldr	x8, [sp, #160]
  414c78:	mov	x27, xzr
  414c7c:	mov	x24, xzr
  414c80:	str	x8, [sp, #64]
  414c84:	ldr	x8, [sp, #264]
  414c88:	cbnz	x8, 414cb8 <feof@plt+0x11bd8>
  414c8c:	b	414cc8 <feof@plt+0x11be8>
  414c90:	mov	x0, x24
  414c94:	ldr	w8, [x0, #4]
  414c98:	mov	x24, x0
  414c9c:	add	w9, w8, #0x1
  414ca0:	add	x8, x0, x8, lsl #3
  414ca4:	str	w9, [x0, #4]
  414ca8:	str	x20, [x8, #8]
  414cac:	add	x27, x27, #0x1
  414cb0:	ldr	x8, [sp, #264]
  414cb4:	cbz	x8, 414cc8 <feof@plt+0x11be8>
  414cb8:	ldr	w9, [x8, #4]
  414cbc:	cmp	x27, w9, uxtw
  414cc0:	b.cc	414cd4 <feof@plt+0x11bf4>  // b.lo, b.ul, b.last
  414cc4:	b	415090 <feof@plt+0x11fb0>
  414cc8:	mov	w9, wzr
  414ccc:	cmp	x27, w9, uxtw
  414cd0:	b.cs	415090 <feof@plt+0x11fb0>  // b.hs, b.nlast
  414cd4:	add	x8, x8, x27, lsl #3
  414cd8:	ldr	x28, [x8, #8]
  414cdc:	mov	x0, x28
  414ce0:	bl	437c48 <feof@plt+0x34b68>
  414ce4:	tbnz	w0, #0, 414cac <feof@plt+0x11bcc>
  414ce8:	ldr	x1, [sp, #160]
  414cec:	mov	x0, x28
  414cf0:	mov	w2, w22
  414cf4:	bl	437d38 <feof@plt+0x34c58>
  414cf8:	tbz	w0, #0, 414cac <feof@plt+0x11bcc>
  414cfc:	ldr	w0, [x28]
  414d00:	sub	x8, x29, #0x30
  414d04:	mov	x26, x25
  414d08:	bl	41dba0 <feof@plt+0x1aac0>
  414d0c:	ldr	w0, [x28, #4]
  414d10:	ldur	w19, [x29, #-36]
  414d14:	sub	x8, x29, #0x30
  414d18:	bl	41dba0 <feof@plt+0x1aac0>
  414d1c:	ldur	w22, [x29, #-36]
  414d20:	cmp	w19, w22
  414d24:	b.gt	41573c <feof@plt+0x1265c>
  414d28:	ldr	w0, [x28]
  414d2c:	sub	x8, x29, #0x30
  414d30:	bl	41dba0 <feof@plt+0x1aac0>
  414d34:	ldur	w25, [x29, #-36]
  414d38:	ldp	w9, w0, [x28]
  414d3c:	ldr	w8, [x28, #16]
  414d40:	mov	x23, x24
  414d44:	sub	w21, w25, #0x1
  414d48:	cmp	w9, w0
  414d4c:	add	w20, w21, w8
  414d50:	b.ne	414d64 <feof@plt+0x11c84>  // b.any
  414d54:	cbz	w8, 414d8c <feof@plt+0x11cac>
  414d58:	cmp	w25, w20
  414d5c:	b.le	414d8c <feof@plt+0x11cac>
  414d60:	b	41573c <feof@plt+0x1265c>
  414d64:	sub	x8, x29, #0x30
  414d68:	bl	41dba0 <feof@plt+0x1aac0>
  414d6c:	ldur	w8, [x29, #-36]
  414d70:	sub	w8, w8, #0x1
  414d74:	cmp	w8, w20
  414d78:	csel	w20, w8, w20, gt
  414d7c:	cmp	w25, w20
  414d80:	b.le	414d8c <feof@plt+0x11cac>
  414d84:	cmp	w21, w20
  414d88:	b.ne	41573c <feof@plt+0x1265c>  // b.any
  414d8c:	sub	w9, w22, #0x1
  414d90:	mov	x24, x23
  414d94:	cbz	x23, 414dd4 <feof@plt+0x11cf4>
  414d98:	ldr	w8, [x24, #4]
  414d9c:	cbz	w8, 414dd4 <feof@plt+0x11cf4>
  414da0:	sub	w8, w8, #0x1
  414da4:	add	x8, x24, w8, uxtw #3
  414da8:	ldr	x22, [x8, #8]
  414dac:	ldr	w8, [x22]
  414db0:	cmp	w8, w19
  414db4:	b.gt	41579c <feof@plt+0x126bc>
  414db8:	ldr	w8, [x22, #8]
  414dbc:	cmp	w8, w25
  414dc0:	b.gt	4157b4 <feof@plt+0x126d4>
  414dc4:	ldr	w8, [x22, #12]
  414dc8:	mov	x24, x23
  414dcc:	cmp	w8, w25
  414dd0:	b.ge	414e64 <feof@plt+0x11d84>  // b.tcont
  414dd4:	mov	w0, #0x28                  	// #40
  414dd8:	bfi	x19, x9, #32, #32
  414ddc:	bfi	x25, x20, #32, #32
  414de0:	bl	402d30 <_Znwm@plt>
  414de4:	mov	x20, x0
  414de8:	ldp	x0, x21, [x28, #8]
  414dec:	stp	x19, x25, [x20]
  414df0:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  414df4:	add	x8, x21, #0x1
  414df8:	stp	x0, x21, [x20, #16]
  414dfc:	str	x8, [x20, #32]
  414e00:	cbz	x24, 414e44 <feof@plt+0x11d64>
  414e04:	ldp	w8, w9, [x24]
  414e08:	ldr	x22, [sp, #88]
  414e0c:	mov	x25, x26
  414e10:	and	w28, w8, #0x7fffffff
  414e14:	cmp	w28, w9
  414e18:	b.ne	414c90 <feof@plt+0x11bb0>  // b.any
  414e1c:	add	w1, w28, #0x1
  414e20:	tbnz	w8, #31, 414fb0 <feof@plt+0x11ed0>
  414e24:	mov	w0, w28
  414e28:	bl	41bd34 <feof@plt+0x18c54>
  414e2c:	ldr	w19, [x24, #4]
  414e30:	mov	w23, w0
  414e34:	mov	w28, wzr
  414e38:	mov	w21, wzr
  414e3c:	mov	x0, x24
  414e40:	b	414fc8 <feof@plt+0x11ee8>
  414e44:	ldr	x22, [sp, #88]
  414e48:	mov	w28, wzr
  414e4c:	mov	w21, wzr
  414e50:	mov	x0, xzr
  414e54:	mov	w19, wzr
  414e58:	mov	w23, #0x4                   	// #4
  414e5c:	mov	x25, x26
  414e60:	b	414fc8 <feof@plt+0x11ee8>
  414e64:	ldr	w8, [x22, #4]
  414e68:	cmp	w8, w25
  414e6c:	stp	x8, x9, [sp, #72]
  414e70:	b.ge	41573c <feof@plt+0x1265c>  // b.tcont
  414e74:	ldr	x0, [sp, #64]
  414e78:	ldr	x1, [sp, #88]
  414e7c:	bl	41d7e0 <feof@plt+0x1a700>
  414e80:	ldr	x9, [sp, #80]
  414e84:	mov	x24, x23
  414e88:	cbz	x0, 414dd4 <feof@plt+0x11cf4>
  414e8c:	cmp	w25, w1
  414e90:	b.gt	414dd4 <feof@plt+0x11cf4>
  414e94:	ldr	x20, [x22, #24]
  414e98:	tbnz	w20, #31, 4157cc <feof@plt+0x126ec>
  414e9c:	ldr	x10, [sp, #72]
  414ea0:	mvn	w8, w10
  414ea4:	adds	w24, w25, w8
  414ea8:	b.mi	4157e4 <feof@plt+0x12704>  // b.first
  414eac:	ldr	w8, [x28, #16]
  414eb0:	add	w25, w24, w20
  414eb4:	adds	w8, w25, w8
  414eb8:	b.mi	4157fc <feof@plt+0x1271c>  // b.first
  414ebc:	ldr	x19, [x22, #32]
  414ec0:	mov	w9, w8
  414ec4:	cmp	x19, x9
  414ec8:	b.hi	414efc <feof@plt+0x11e1c>  // b.pmore
  414ecc:	stp	x1, x0, [sp, #32]
  414ed0:	ldr	x0, [x22, #16]
  414ed4:	lsl	x8, x9, #1
  414ed8:	add	x19, x8, #0x2
  414edc:	mov	x1, x19
  414ee0:	str	x9, [sp, #48]
  414ee4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  414ee8:	str	x0, [x22, #16]
  414eec:	ldr	x9, [sp, #48]
  414ef0:	ldr	x10, [sp, #72]
  414ef4:	ldp	x1, x0, [sp, #32]
  414ef8:	str	x19, [x22, #32]
  414efc:	tbnz	w10, #31, 415814 <feof@plt+0x12734>
  414f00:	cmp	w10, w1
  414f04:	b.ge	41582c <feof@plt+0x1274c>  // b.tcont
  414f08:	cmp	w21, w1
  414f0c:	b.gt	415844 <feof@plt+0x12764>
  414f10:	and	x8, x20, #0xffffffff
  414f14:	mov	w2, w24
  414f18:	mov	x21, x9
  414f1c:	add	x9, x8, x2
  414f20:	cmp	x9, x19
  414f24:	b.cs	41585c <feof@plt+0x1277c>  // b.hs, b.nlast
  414f28:	ldr	x9, [x22, #16]
  414f2c:	add	x1, x0, x10
  414f30:	add	x0, x9, x8
  414f34:	bl	4029c0 <memcpy@plt>
  414f38:	ldr	x2, [x28, #16]
  414f3c:	ldr	x9, [x22, #32]
  414f40:	mov	w8, w25
  414f44:	add	x10, x2, x8
  414f48:	cmp	x10, x9
  414f4c:	b.cs	41585c <feof@plt+0x1277c>  // b.hs, b.nlast
  414f50:	ldr	x9, [x22, #16]
  414f54:	ldr	x1, [x28, #8]
  414f58:	add	x0, x9, x8
  414f5c:	bl	4029c0 <memcpy@plt>
  414f60:	ldr	x8, [x22, #32]
  414f64:	str	x21, [x22, #24]
  414f68:	cmp	x8, x21
  414f6c:	b.ls	415874 <feof@plt+0x12794>  // b.plast
  414f70:	ldr	x8, [x22, #16]
  414f74:	mov	x25, x26
  414f78:	add	x27, x27, #0x1
  414f7c:	strb	wzr, [x8, x21]
  414f80:	ldr	x8, [sp, #80]
  414f84:	ldr	w9, [x22, #12]
  414f88:	str	w8, [x22, #4]
  414f8c:	ldr	w8, [x28, #16]
  414f90:	add	w8, w24, w8
  414f94:	add	w8, w8, w9
  414f98:	str	w8, [x22, #12]
  414f9c:	ldr	x22, [sp, #88]
  414fa0:	mov	x24, x23
  414fa4:	ldr	x8, [sp, #264]
  414fa8:	cbnz	x8, 414cb8 <feof@plt+0x11bd8>
  414fac:	b	414cc8 <feof@plt+0x11be8>
  414fb0:	cmp	w28, #0x4
  414fb4:	mov	w8, #0x4                   	// #4
  414fb8:	mov	x0, xzr
  414fbc:	mov	w19, wzr
  414fc0:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  414fc4:	mov	w21, #0x1                   	// #1
  414fc8:	mov	w8, w23
  414fcc:	lsl	x8, x8, #3
  414fd0:	add	x1, x8, #0x8
  414fd4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  414fd8:	and	w8, w23, #0x7fffffff
  414fdc:	stp	w8, w19, [x0]
  414fe0:	cbz	w21, 414c94 <feof@plt+0x11bb4>
  414fe4:	cbz	w28, 415088 <feof@plt+0x11fa8>
  414fe8:	sub	w10, w28, #0x1
  414fec:	add	x9, x24, #0x8
  414ff0:	cmp	w10, #0x3
  414ff4:	add	x8, x0, #0x8
  414ff8:	b.cs	415004 <feof@plt+0x11f24>  // b.hs, b.nlast
  414ffc:	mov	w10, w28
  415000:	b	415078 <feof@plt+0x11f98>
  415004:	lsl	x11, x10, #3
  415008:	add	x12, x24, x11
  41500c:	add	x12, x12, #0x10
  415010:	cmp	x8, x12
  415014:	b.cs	415030 <feof@plt+0x11f50>  // b.hs, b.nlast
  415018:	add	x11, x0, x11
  41501c:	add	x11, x11, #0x10
  415020:	cmp	x11, x9
  415024:	b.ls	415030 <feof@plt+0x11f50>  // b.plast
  415028:	mov	w10, w28
  41502c:	b	415078 <feof@plt+0x11f98>
  415030:	add	x11, x10, #0x1
  415034:	and	x12, x11, #0x1fffffffc
  415038:	lsl	x9, x12, #3
  41503c:	add	x14, x24, x9
  415040:	add	x13, x0, #0x18
  415044:	sub	w10, w28, w12
  415048:	add	x8, x8, x9
  41504c:	add	x9, x14, #0x8
  415050:	add	x14, x24, #0x18
  415054:	mov	x15, x12
  415058:	ldp	q0, q1, [x14, #-16]
  41505c:	subs	x15, x15, #0x4
  415060:	add	x14, x14, #0x20
  415064:	stp	q0, q1, [x13, #-16]
  415068:	add	x13, x13, #0x20
  41506c:	b.ne	415058 <feof@plt+0x11f78>  // b.any
  415070:	cmp	x11, x12
  415074:	b.eq	415088 <feof@plt+0x11fa8>  // b.none
  415078:	ldr	x11, [x9], #8
  41507c:	subs	w10, w10, #0x1
  415080:	str	x11, [x8], #8
  415084:	b.ne	415078 <feof@plt+0x11f98>  // b.any
  415088:	str	w28, [x0, #4]
  41508c:	b	414c94 <feof@plt+0x11bb4>
  415090:	ldr	w27, [sp, #284]
  415094:	cbz	x24, 4155d0 <feof@plt+0x124f0>
  415098:	ldr	w8, [x24, #4]
  41509c:	cbz	w8, 4155d0 <feof@plt+0x124f0>
  4150a0:	ldrb	w8, [sp, #250]
  4150a4:	cbz	w8, 41511c <feof@plt+0x1203c>
  4150a8:	ldr	w8, [sp, #280]
  4150ac:	cmp	w8, #0x4
  4150b0:	b.lt	4150dc <feof@plt+0x11ffc>  // b.tstop
  4150b4:	mov	w19, wzr
  4150b8:	ldr	x0, [sp, #144]
  4150bc:	mov	w1, #0x20                  	// #32
  4150c0:	bl	41803c <feof@plt+0x14f5c>
  4150c4:	ldr	w8, [sp, #280]
  4150c8:	add	w19, w19, #0x1
  4150cc:	sub	w9, w8, #0x3
  4150d0:	cmp	w19, w9
  4150d4:	b.lt	4150b8 <feof@plt+0x11fd8>  // b.tstop
  4150d8:	b	4150e0 <feof@plt+0x12000>
  4150dc:	mov	w19, wzr
  4150e0:	ldr	x0, [sp, #144]
  4150e4:	cmp	w19, w8
  4150e8:	b.ge	415108 <feof@plt+0x12028>  // b.tcont
  4150ec:	mov	w1, #0x20                  	// #32
  4150f0:	bl	41803c <feof@plt+0x14f5c>
  4150f4:	ldr	w8, [sp, #280]
  4150f8:	ldr	x0, [sp, #144]
  4150fc:	add	w19, w19, #0x1
  415100:	cmp	w19, w8
  415104:	b.lt	4150ec <feof@plt+0x1200c>  // b.tstop
  415108:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41510c:	add	x1, x1, #0x8ae
  415110:	bl	419e20 <feof@plt+0x16d40>
  415114:	ldr	w8, [x24, #4]
  415118:	cbz	w8, 4155d0 <feof@plt+0x124f0>
  41511c:	mov	w19, wzr
  415120:	b	415144 <feof@plt+0x12064>
  415124:	add	x28, x20, #0x18
  415128:	ldr	w8, [x28]
  41512c:	add	w21, w27, w8
  415130:	ldr	w8, [x24, #4]
  415134:	add	w19, w19, #0x1
  415138:	mov	w27, w21
  41513c:	cmp	w8, w19
  415140:	b.ls	4155d4 <feof@plt+0x124f4>  // b.plast
  415144:	add	x8, x24, w19, uxtw #3
  415148:	ldr	x20, [x8, #8]
  41514c:	ldp	w23, w28, [x20]
  415150:	add	w8, w28, #0x1
  415154:	cmp	w23, w8
  415158:	b.ne	4151d0 <feof@plt+0x120f0>  // b.any
  41515c:	ldr	w21, [x20, #8]
  415160:	cmp	w27, w21
  415164:	b.le	4152f8 <feof@plt+0x12218>
  415168:	ldr	w8, [sp, #204]
  41516c:	cmn	w8, #0x1
  415170:	b.eq	41518c <feof@plt+0x120ac>  // b.none
  415174:	ldr	x8, [sp, #192]
  415178:	ldr	x1, [sp, #240]
  41517c:	ldr	x0, [x8]
  415180:	bl	419e20 <feof@plt+0x16d40>
  415184:	mov	w8, #0xffffffff            	// #-1
  415188:	str	w8, [sp, #204]
  41518c:	ldr	x0, [sp, #144]
  415190:	bl	41a7a4 <feof@plt+0x176c4>
  415194:	ldrb	w8, [sp, #250]
  415198:	cbz	w8, 4152f4 <feof@plt+0x12214>
  41519c:	ldr	w8, [sp, #280]
  4151a0:	cmp	w8, #0x4
  4151a4:	b.lt	4152b8 <feof@plt+0x121d8>  // b.tstop
  4151a8:	mov	w22, wzr
  4151ac:	ldr	x0, [sp, #144]
  4151b0:	mov	w1, #0x20                  	// #32
  4151b4:	bl	41803c <feof@plt+0x14f5c>
  4151b8:	ldr	w8, [sp, #280]
  4151bc:	add	w22, w22, #0x1
  4151c0:	sub	w9, w8, #0x3
  4151c4:	cmp	w22, w9
  4151c8:	b.lt	4151ac <feof@plt+0x120cc>  // b.tstop
  4151cc:	b	4152bc <feof@plt+0x121dc>
  4151d0:	ldr	x10, [sp, #256]
  4151d4:	cbz	x10, 415248 <feof@plt+0x12168>
  4151d8:	ldr	w8, [x10, #4]
  4151dc:	cbz	w8, 415248 <feof@plt+0x12168>
  4151e0:	mov	x9, xzr
  4151e4:	add	x11, x10, #0x8
  4151e8:	add	x10, x10, #0x30
  4151ec:	b	415208 <feof@plt+0x12128>
  4151f0:	add	x9, x9, #0x1
  4151f4:	cmp	x9, x8
  4151f8:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  4151fc:	cmp	x8, x9
  415200:	add	x10, x10, #0x28
  415204:	b.eq	415248 <feof@plt+0x12168>  // b.none
  415208:	ldr	w12, [x11]
  41520c:	cmp	w12, w22
  415210:	b.ne	4151f0 <feof@plt+0x12110>  // b.any
  415214:	ldr	w12, [x11, #4]
  415218:	cmp	w12, w23
  41521c:	b.ne	4151f0 <feof@plt+0x12110>  // b.any
  415220:	ldr	w12, [x11, #8]
  415224:	cmp	w12, w22
  415228:	b.ne	4151f0 <feof@plt+0x12110>  // b.any
  41522c:	ldr	w11, [x11, #12]
  415230:	cmp	w11, w28
  415234:	b.ne	4151f0 <feof@plt+0x12110>  // b.any
  415238:	ldr	x8, [x20, #24]
  41523c:	cbz	x8, 415248 <feof@plt+0x12168>
  415240:	mov	w21, w27
  415244:	b	41547c <feof@plt+0x1239c>
  415248:	cmp	w27, w23
  41524c:	b.le	4153cc <feof@plt+0x122ec>
  415250:	ldr	w8, [sp, #204]
  415254:	cmn	w8, #0x1
  415258:	b.eq	415274 <feof@plt+0x12194>  // b.none
  41525c:	ldr	x8, [sp, #192]
  415260:	ldr	x1, [sp, #240]
  415264:	ldr	x0, [x8]
  415268:	bl	419e20 <feof@plt+0x16d40>
  41526c:	mov	w8, #0xffffffff            	// #-1
  415270:	str	w8, [sp, #204]
  415274:	ldr	x0, [sp, #144]
  415278:	bl	41a7a4 <feof@plt+0x176c4>
  41527c:	ldrb	w8, [sp, #250]
  415280:	cbz	w8, 4153c8 <feof@plt+0x122e8>
  415284:	ldr	w8, [sp, #280]
  415288:	cmp	w8, #0x4
  41528c:	b.lt	415390 <feof@plt+0x122b0>  // b.tstop
  415290:	mov	w21, wzr
  415294:	ldr	x0, [sp, #144]
  415298:	mov	w1, #0x20                  	// #32
  41529c:	bl	41803c <feof@plt+0x14f5c>
  4152a0:	ldr	w8, [sp, #280]
  4152a4:	add	w21, w21, #0x1
  4152a8:	sub	w9, w8, #0x3
  4152ac:	cmp	w21, w9
  4152b0:	b.lt	415294 <feof@plt+0x121b4>  // b.tstop
  4152b4:	b	415394 <feof@plt+0x122b4>
  4152b8:	mov	w22, wzr
  4152bc:	ldr	x0, [sp, #144]
  4152c0:	cmp	w22, w8
  4152c4:	b.ge	4152e4 <feof@plt+0x12204>  // b.tcont
  4152c8:	mov	w1, #0x20                  	// #32
  4152cc:	bl	41803c <feof@plt+0x14f5c>
  4152d0:	ldr	w8, [sp, #280]
  4152d4:	ldr	x0, [sp, #144]
  4152d8:	add	w22, w22, #0x1
  4152dc:	cmp	w22, w8
  4152e0:	b.lt	4152c8 <feof@plt+0x121e8>  // b.tstop
  4152e4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4152e8:	add	x1, x1, #0x8ae
  4152ec:	bl	419e20 <feof@plt+0x16d40>
  4152f0:	ldr	x22, [sp, #88]
  4152f4:	ldr	w27, [sp, #284]
  4152f8:	cmp	w27, w21
  4152fc:	b.ge	415320 <feof@plt+0x12240>  // b.tcont
  415300:	sub	w22, w21, w27
  415304:	ldr	x0, [sp, #144]
  415308:	mov	w1, #0x20                  	// #32
  41530c:	bl	41803c <feof@plt+0x14f5c>
  415310:	subs	w22, w22, #0x1
  415314:	b.ne	415304 <feof@plt+0x12224>  // b.any
  415318:	ldr	x22, [sp, #88]
  41531c:	mov	w27, w21
  415320:	ldr	w8, [sp, #204]
  415324:	cmn	w8, #0x2
  415328:	b.eq	41535c <feof@plt+0x1227c>  // b.none
  41532c:	cmn	w8, #0x1
  415330:	b.eq	415344 <feof@plt+0x12264>  // b.none
  415334:	ldr	x8, [sp, #192]
  415338:	ldr	x1, [sp, #240]
  41533c:	ldr	x0, [x8]
  415340:	bl	419e20 <feof@plt+0x16d40>
  415344:	ldr	x8, [sp, #192]
  415348:	mov	w9, #0xfffffffe            	// #-2
  41534c:	str	w9, [sp, #204]
  415350:	ldr	x1, [sp, #224]
  415354:	ldr	x0, [x8]
  415358:	bl	419e20 <feof@plt+0x16d40>
  41535c:	ldr	x0, [sp, #144]
  415360:	ldr	x1, [x20, #16]
  415364:	bl	419e20 <feof@plt+0x16d40>
  415368:	ldr	w8, [sp, #204]
  41536c:	cmn	w8, #0x1
  415370:	b.eq	415124 <feof@plt+0x12044>  // b.none
  415374:	ldr	x8, [sp, #192]
  415378:	ldr	x1, [sp, #240]
  41537c:	ldr	x0, [x8]
  415380:	bl	419e20 <feof@plt+0x16d40>
  415384:	mov	w8, #0xffffffff            	// #-1
  415388:	str	w8, [sp, #204]
  41538c:	b	415124 <feof@plt+0x12044>
  415390:	mov	w21, wzr
  415394:	ldr	x0, [sp, #144]
  415398:	cmp	w21, w8
  41539c:	b.ge	4153bc <feof@plt+0x122dc>  // b.tcont
  4153a0:	mov	w1, #0x20                  	// #32
  4153a4:	bl	41803c <feof@plt+0x14f5c>
  4153a8:	ldr	w8, [sp, #280]
  4153ac:	ldr	x0, [sp, #144]
  4153b0:	add	w21, w21, #0x1
  4153b4:	cmp	w21, w8
  4153b8:	b.lt	4153a0 <feof@plt+0x122c0>  // b.tstop
  4153bc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4153c0:	add	x1, x1, #0x8ae
  4153c4:	bl	419e20 <feof@plt+0x16d40>
  4153c8:	ldr	w27, [sp, #284]
  4153cc:	cmp	w27, w23
  4153d0:	b.ge	4153f0 <feof@plt+0x12310>  // b.tcont
  4153d4:	sub	w21, w23, w27
  4153d8:	ldr	x0, [sp, #144]
  4153dc:	mov	w1, #0x20                  	// #32
  4153e0:	bl	41803c <feof@plt+0x14f5c>
  4153e4:	subs	w21, w21, #0x1
  4153e8:	b.ne	4153d8 <feof@plt+0x122f8>  // b.any
  4153ec:	mov	w27, w23
  4153f0:	ldr	w8, [sp, #204]
  4153f4:	cmn	w8, #0x3
  4153f8:	b.eq	41542c <feof@plt+0x1234c>  // b.none
  4153fc:	cmn	w8, #0x1
  415400:	b.eq	415414 <feof@plt+0x12334>  // b.none
  415404:	ldr	x8, [sp, #192]
  415408:	ldr	x1, [sp, #240]
  41540c:	ldr	x0, [x8]
  415410:	bl	419e20 <feof@plt+0x16d40>
  415414:	ldr	x8, [sp, #192]
  415418:	mov	w9, #0xfffffffd            	// #-3
  41541c:	str	w9, [sp, #204]
  415420:	ldr	x1, [sp, #232]
  415424:	ldr	x0, [x8]
  415428:	bl	419e20 <feof@plt+0x16d40>
  41542c:	cmp	w27, w28
  415430:	b.le	41543c <feof@plt+0x1235c>
  415434:	mov	w21, w27
  415438:	b	415458 <feof@plt+0x12378>
  41543c:	ldr	x0, [sp, #144]
  415440:	mov	w1, #0x2d                  	// #45
  415444:	bl	41803c <feof@plt+0x14f5c>
  415448:	add	w21, w27, #0x1
  41544c:	cmp	w27, w28
  415450:	mov	w27, w21
  415454:	b.lt	41543c <feof@plt+0x1235c>  // b.tstop
  415458:	ldr	w8, [sp, #204]
  41545c:	cmn	w8, #0x1
  415460:	b.eq	41547c <feof@plt+0x1239c>  // b.none
  415464:	ldr	x8, [sp, #192]
  415468:	ldr	x1, [sp, #240]
  41546c:	ldr	x0, [x8]
  415470:	bl	419e20 <feof@plt+0x16d40>
  415474:	mov	w8, #0xffffffff            	// #-1
  415478:	str	w8, [sp, #204]
  41547c:	mov	x28, x20
  415480:	ldr	x8, [x28, #24]!
  415484:	cbz	x8, 415130 <feof@plt+0x12050>
  415488:	cmp	w21, w23
  41548c:	b.le	415534 <feof@plt+0x12454>
  415490:	ldr	w8, [sp, #204]
  415494:	cmn	w8, #0x1
  415498:	b.eq	4154b4 <feof@plt+0x123d4>  // b.none
  41549c:	ldr	x8, [sp, #192]
  4154a0:	ldr	x1, [sp, #240]
  4154a4:	ldr	x0, [x8]
  4154a8:	bl	419e20 <feof@plt+0x16d40>
  4154ac:	mov	w8, #0xffffffff            	// #-1
  4154b0:	str	w8, [sp, #204]
  4154b4:	ldr	x0, [sp, #144]
  4154b8:	bl	41a7a4 <feof@plt+0x176c4>
  4154bc:	ldrb	w8, [sp, #250]
  4154c0:	cbz	w8, 415530 <feof@plt+0x12450>
  4154c4:	ldr	w8, [sp, #280]
  4154c8:	cmp	w8, #0x4
  4154cc:	b.lt	4154f8 <feof@plt+0x12418>  // b.tstop
  4154d0:	mov	w21, wzr
  4154d4:	ldr	x0, [sp, #144]
  4154d8:	mov	w1, #0x20                  	// #32
  4154dc:	bl	41803c <feof@plt+0x14f5c>
  4154e0:	ldr	w8, [sp, #280]
  4154e4:	add	w21, w21, #0x1
  4154e8:	sub	w9, w8, #0x3
  4154ec:	cmp	w21, w9
  4154f0:	b.lt	4154d4 <feof@plt+0x123f4>  // b.tstop
  4154f4:	b	4154fc <feof@plt+0x1241c>
  4154f8:	mov	w21, wzr
  4154fc:	ldr	x0, [sp, #144]
  415500:	cmp	w21, w8
  415504:	b.ge	415524 <feof@plt+0x12444>  // b.tcont
  415508:	mov	w1, #0x20                  	// #32
  41550c:	bl	41803c <feof@plt+0x14f5c>
  415510:	ldr	w8, [sp, #280]
  415514:	ldr	x0, [sp, #144]
  415518:	add	w21, w21, #0x1
  41551c:	cmp	w21, w8
  415520:	b.lt	415508 <feof@plt+0x12428>  // b.tstop
  415524:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  415528:	add	x1, x1, #0x8ae
  41552c:	bl	419e20 <feof@plt+0x16d40>
  415530:	ldr	w21, [sp, #284]
  415534:	cmp	w21, w23
  415538:	b.ge	41555c <feof@plt+0x1247c>  // b.tcont
  41553c:	sub	w21, w23, w21
  415540:	ldr	x0, [sp, #144]
  415544:	mov	w1, #0x20                  	// #32
  415548:	bl	41803c <feof@plt+0x14f5c>
  41554c:	subs	w21, w21, #0x1
  415550:	b.ne	415540 <feof@plt+0x12460>  // b.any
  415554:	mov	w27, w23
  415558:	b	415560 <feof@plt+0x12480>
  41555c:	mov	w27, w21
  415560:	ldr	w8, [sp, #204]
  415564:	cmn	w8, #0x2
  415568:	b.eq	41559c <feof@plt+0x124bc>  // b.none
  41556c:	cmn	w8, #0x1
  415570:	b.eq	415584 <feof@plt+0x124a4>  // b.none
  415574:	ldr	x8, [sp, #192]
  415578:	ldr	x1, [sp, #240]
  41557c:	ldr	x0, [x8]
  415580:	bl	419e20 <feof@plt+0x16d40>
  415584:	ldr	x8, [sp, #192]
  415588:	mov	w9, #0xfffffffe            	// #-2
  41558c:	str	w9, [sp, #204]
  415590:	ldr	x1, [sp, #224]
  415594:	ldr	x0, [x8]
  415598:	bl	419e20 <feof@plt+0x16d40>
  41559c:	ldr	x0, [sp, #144]
  4155a0:	ldr	x1, [x20, #16]
  4155a4:	bl	419e20 <feof@plt+0x16d40>
  4155a8:	ldr	w8, [sp, #204]
  4155ac:	cmn	w8, #0x1
  4155b0:	b.eq	415128 <feof@plt+0x12048>  // b.none
  4155b4:	ldr	x8, [sp, #192]
  4155b8:	ldr	x1, [sp, #240]
  4155bc:	ldr	x0, [x8]
  4155c0:	bl	419e20 <feof@plt+0x16d40>
  4155c4:	mov	w8, #0xffffffff            	// #-1
  4155c8:	str	w8, [sp, #204]
  4155cc:	b	415128 <feof@plt+0x12048>
  4155d0:	mov	w21, w27
  4155d4:	cmp	w21, #0x1
  4155d8:	b.lt	41560c <feof@plt+0x1252c>  // b.tstop
  4155dc:	ldr	w8, [sp, #204]
  4155e0:	cmn	w8, #0x1
  4155e4:	b.eq	415600 <feof@plt+0x12520>  // b.none
  4155e8:	ldr	x8, [sp, #192]
  4155ec:	ldr	x1, [sp, #240]
  4155f0:	ldr	x0, [x8]
  4155f4:	bl	419e20 <feof@plt+0x16d40>
  4155f8:	mov	w8, #0xffffffff            	// #-1
  4155fc:	str	w8, [sp, #204]
  415600:	ldr	x0, [sp, #144]
  415604:	bl	41a7a4 <feof@plt+0x176c4>
  415608:	ldr	w21, [sp, #284]
  41560c:	tbz	w21, #31, 41562c <feof@plt+0x1254c>
  415610:	sub	w19, w21, #0x1
  415614:	ldr	x0, [sp, #144]
  415618:	mov	w1, #0x20                  	// #32
  41561c:	bl	41803c <feof@plt+0x14f5c>
  415620:	add	w19, w19, #0x1
  415624:	cmn	w19, #0x1
  415628:	b.lt	415614 <feof@plt+0x12534>  // b.tstop
  41562c:	cbz	x24, 4141e4 <feof@plt+0x11104>
  415630:	mov	x20, xzr
  415634:	b	415640 <feof@plt+0x12560>
  415638:	add	x20, x20, #0x1
  41563c:	cbz	x24, 4141e4 <feof@plt+0x11104>
  415640:	ldr	w8, [x24, #4]
  415644:	cmp	x20, x8
  415648:	b.cs	4141d4 <feof@plt+0x110f4>  // b.hs, b.nlast
  41564c:	add	x8, x24, x20, lsl #3
  415650:	ldr	x19, [x8, #8]
  415654:	cbz	x19, 415638 <feof@plt+0x12558>
  415658:	ldr	x0, [x19, #16]
  41565c:	bl	402b20 <free@plt>
  415660:	mov	x0, x19
  415664:	bl	402d00 <_ZdlPv@plt>
  415668:	b	415638 <feof@plt+0x12558>
  41566c:	mov	w19, #0x2                   	// #2
  415670:	b	414a18 <feof@plt+0x11938>
  415674:	ldr	x0, [x23]
  415678:	ldr	x1, [sp]
  41567c:	bl	41a29c <feof@plt+0x171bc>
  415680:	ldr	x0, [sp, #272]
  415684:	cbz	x0, 415698 <feof@plt+0x125b8>
  415688:	ldr	w8, [x0]
  41568c:	tbnz	w8, #31, 4156b4 <feof@plt+0x125d4>
  415690:	bl	402b20 <free@plt>
  415694:	str	xzr, [sp, #272]
  415698:	ldr	x0, [sp, #264]
  41569c:	cbz	x0, 4156c8 <feof@plt+0x125e8>
  4156a0:	ldr	w8, [x0]
  4156a4:	tbnz	w8, #31, 4156c4 <feof@plt+0x125e4>
  4156a8:	bl	402b20 <free@plt>
  4156ac:	str	xzr, [sp, #264]
  4156b0:	b	4156c8 <feof@plt+0x125e8>
  4156b4:	str	wzr, [x0, #4]
  4156b8:	ldr	x0, [sp, #264]
  4156bc:	cbnz	x0, 4156a0 <feof@plt+0x125c0>
  4156c0:	b	4156c8 <feof@plt+0x125e8>
  4156c4:	str	wzr, [x0, #4]
  4156c8:	ldr	x0, [sp, #256]
  4156cc:	cbz	x0, 4156e8 <feof@plt+0x12608>
  4156d0:	ldr	w8, [x0]
  4156d4:	tbnz	w8, #31, 4156e4 <feof@plt+0x12604>
  4156d8:	bl	402b20 <free@plt>
  4156dc:	str	xzr, [sp, #256]
  4156e0:	b	4156e8 <feof@plt+0x12608>
  4156e4:	str	wzr, [x0, #4]
  4156e8:	ldr	w8, [sp, #204]
  4156ec:	cmn	w8, #0x1
  4156f0:	b.eq	415704 <feof@plt+0x12624>  // b.none
  4156f4:	ldr	x8, [sp, #192]
  4156f8:	ldr	x1, [sp, #240]
  4156fc:	ldr	x0, [x8]
  415700:	bl	419e20 <feof@plt+0x16d40>
  415704:	ldp	x20, x19, [sp, #416]
  415708:	ldp	x22, x21, [sp, #400]
  41570c:	ldp	x24, x23, [sp, #384]
  415710:	ldp	x26, x25, [sp, #368]
  415714:	ldp	x28, x27, [sp, #352]
  415718:	ldp	x29, x30, [sp, #336]
  41571c:	add	sp, sp, #0x1b0
  415720:	ret
  415724:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415728:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41572c:	add	x0, x0, #0x866
  415730:	add	x2, x2, #0x96f
  415734:	mov	w1, #0x609                 	// #1545
  415738:	bl	40f560 <feof@plt+0xc480>
  41573c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415740:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415744:	add	x0, x0, #0x866
  415748:	add	x2, x2, #0x989
  41574c:	mov	w1, #0x6bc                 	// #1724
  415750:	bl	40f560 <feof@plt+0xc480>
  415754:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415758:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41575c:	add	x0, x0, #0x866
  415760:	add	x2, x2, #0x8fc
  415764:	mov	w1, #0x638                 	// #1592
  415768:	bl	40f560 <feof@plt+0xc480>
  41576c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415770:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415774:	add	x0, x0, #0x866
  415778:	add	x2, x2, #0x96f
  41577c:	mov	w1, #0x612                 	// #1554
  415780:	bl	40f560 <feof@plt+0xc480>
  415784:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415788:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41578c:	add	x0, x0, #0x866
  415790:	add	x2, x2, #0x95d
  415794:	mov	w1, #0x215                 	// #533
  415798:	bl	40f560 <feof@plt+0xc480>
  41579c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4157a0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4157a4:	add	x0, x0, #0x866
  4157a8:	add	x2, x2, #0x980
  4157ac:	mov	w1, #0x77b                 	// #1915
  4157b0:	bl	40f560 <feof@plt+0xc480>
  4157b4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4157b8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4157bc:	add	x0, x0, #0x866
  4157c0:	add	x2, x2, #0x980
  4157c4:	mov	w1, #0x77d                 	// #1917
  4157c8:	bl	40f560 <feof@plt+0xc480>
  4157cc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4157d0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4157d4:	add	x0, x0, #0x866
  4157d8:	add	x2, x2, #0x980
  4157dc:	mov	w1, #0x792                 	// #1938
  4157e0:	bl	40f560 <feof@plt+0xc480>
  4157e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4157e8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4157ec:	add	x0, x0, #0x866
  4157f0:	add	x2, x2, #0x980
  4157f4:	mov	w1, #0x794                 	// #1940
  4157f8:	bl	40f560 <feof@plt+0xc480>
  4157fc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415800:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415804:	add	x0, x0, #0x866
  415808:	add	x2, x2, #0x980
  41580c:	mov	w1, #0x796                 	// #1942
  415810:	bl	40f560 <feof@plt+0xc480>
  415814:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415818:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41581c:	add	x0, x0, #0x9a0
  415820:	add	x2, x2, #0x9b2
  415824:	mov	w1, #0x44                  	// #68
  415828:	bl	40f560 <feof@plt+0xc480>
  41582c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415830:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415834:	add	x0, x0, #0x9a0
  415838:	add	x2, x2, #0x9b2
  41583c:	mov	w1, #0x45                  	// #69
  415840:	bl	40f560 <feof@plt+0xc480>
  415844:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415848:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41584c:	add	x0, x0, #0x9a0
  415850:	add	x2, x2, #0x9b2
  415854:	mov	w1, #0x47                  	// #71
  415858:	bl	40f560 <feof@plt+0xc480>
  41585c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415860:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415864:	add	x0, x0, #0x866
  415868:	add	x2, x2, #0x996
  41586c:	mov	w1, #0x706                 	// #1798
  415870:	bl	40f560 <feof@plt+0xc480>
  415874:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415878:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41587c:	add	x0, x0, #0x866
  415880:	add	x2, x2, #0x9ba
  415884:	mov	w1, #0x732                 	// #1842
  415888:	bl	40f560 <feof@plt+0xc480>
  41588c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415890:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415894:	add	x0, x0, #0x866
  415898:	add	x2, x2, #0x923
  41589c:	mov	w1, #0x2be                 	// #702
  4158a0:	bl	40f560 <feof@plt+0xc480>
  4158a4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4158a8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4158ac:	add	x0, x0, #0x866
  4158b0:	add	x2, x2, #0x923
  4158b4:	mov	w1, #0x2ba                 	// #698
  4158b8:	bl	40f560 <feof@plt+0xc480>
  4158bc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4158c0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4158c4:	add	x0, x0, #0x866
  4158c8:	add	x2, x2, #0x8e6
  4158cc:	mov	w1, #0x449                 	// #1097
  4158d0:	bl	40f560 <feof@plt+0xc480>
  4158d4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4158d8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4158dc:	add	x0, x0, #0x866
  4158e0:	add	x2, x2, #0x923
  4158e4:	mov	w1, #0x2b9                 	// #697
  4158e8:	bl	40f560 <feof@plt+0xc480>
  4158ec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4158f0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4158f4:	add	x0, x0, #0x866
  4158f8:	add	x2, x2, #0x8ca
  4158fc:	mov	w1, #0x408                 	// #1032
  415900:	bl	40f560 <feof@plt+0xc480>
  415904:	ldr	x8, [x0]
  415908:	ldr	x9, [x1]
  41590c:	ldr	w8, [x8]
  415910:	ldr	w9, [x9]
  415914:	sub	w0, w8, w9
  415918:	ret
  41591c:	ldr	w8, [x0]
  415920:	ldr	w9, [x1]
  415924:	sub	x10, x8, x9
  415928:	cmp	x10, #0x0
  41592c:	mov	w9, #0x1                   	// #1
  415930:	cneg	w8, w9, le
  415934:	cbz	x10, 415940 <feof@plt+0x12860>
  415938:	mov	w0, w8
  41593c:	ret
  415940:	ldr	w8, [x0, #4]
  415944:	ldr	w10, [x1, #4]
  415948:	sub	x8, x8, x10
  41594c:	cmp	x8, #0x0
  415950:	cneg	w8, w9, le
  415954:	csel	w8, wzr, w8, eq  // eq = none
  415958:	mov	w0, w8
  41595c:	ret
  415960:	stp	x29, x30, [sp, #-64]!
  415964:	str	x23, [sp, #16]
  415968:	stp	x22, x21, [sp, #32]
  41596c:	stp	x20, x19, [sp, #48]
  415970:	mov	x29, sp
  415974:	mov	w19, w1
  415978:	mov	w20, w0
  41597c:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  415980:	tbz	w20, #31, 4159b4 <feof@plt+0x128d4>
  415984:	ldr	x0, [x23, #2408]
  415988:	mov	w1, w20
  41598c:	bl	43479c <feof@plt+0x316bc>
  415990:	mov	w20, w0
  415994:	tbz	w19, #31, 4159b8 <feof@plt+0x128d8>
  415998:	ldr	x0, [x23, #2408]
  41599c:	mov	w1, w19
  4159a0:	bl	43479c <feof@plt+0x316bc>
  4159a4:	mov	w19, w0
  4159a8:	cmp	w20, #0x2
  4159ac:	b.cs	4159c0 <feof@plt+0x128e0>  // b.hs, b.nlast
  4159b0:	b	415a34 <feof@plt+0x12954>
  4159b4:	tbnz	w19, #31, 415998 <feof@plt+0x128b8>
  4159b8:	cmp	w20, #0x2
  4159bc:	b.cc	415a34 <feof@plt+0x12954>  // b.lo, b.ul, b.last
  4159c0:	cmp	w19, #0x1
  4159c4:	b.ls	415a34 <feof@plt+0x12954>  // b.plast
  4159c8:	ldr	x0, [x23, #2408]
  4159cc:	mov	w1, w20
  4159d0:	bl	4345c8 <feof@plt+0x314e8>
  4159d4:	ldr	x8, [x23, #2408]
  4159d8:	mov	x21, x0
  4159dc:	mov	w1, w19
  4159e0:	mov	x0, x8
  4159e4:	bl	4345c8 <feof@plt+0x314e8>
  4159e8:	mov	x22, x0
  4159ec:	mov	x0, x21
  4159f0:	bl	4357f0 <feof@plt+0x32710>
  4159f4:	cmp	x21, x22
  4159f8:	b.ne	415a3c <feof@plt+0x1295c>  // b.any
  4159fc:	tbz	w0, #0, 415a54 <feof@plt+0x12974>
  415a00:	ldr	x0, [x23, #2408]
  415a04:	mov	x1, x21
  415a08:	mov	w2, w20
  415a0c:	bl	435808 <feof@plt+0x32728>
  415a10:	ldr	x8, [x23, #2408]
  415a14:	mov	w20, w0
  415a18:	mov	x1, x21
  415a1c:	mov	w2, w19
  415a20:	mov	x0, x8
  415a24:	bl	435808 <feof@plt+0x32728>
  415a28:	mov	w19, w0
  415a2c:	tbz	w20, #31, 4159b4 <feof@plt+0x128d4>
  415a30:	b	415984 <feof@plt+0x128a4>
  415a34:	cmp	w20, w19
  415a38:	b	415a68 <feof@plt+0x12988>
  415a3c:	tbnz	w0, #0, 415a4c <feof@plt+0x1296c>
  415a40:	mov	x0, x22
  415a44:	bl	4357f0 <feof@plt+0x32710>
  415a48:	tbz	w0, #0, 415a5c <feof@plt+0x1297c>
  415a4c:	mov	w0, wzr
  415a50:	b	415a6c <feof@plt+0x1298c>
  415a54:	mov	w0, #0x1                   	// #1
  415a58:	b	415a6c <feof@plt+0x1298c>
  415a5c:	ldr	x8, [x21, #8]
  415a60:	ldr	x9, [x22, #8]
  415a64:	cmp	x8, x9
  415a68:	cset	w0, eq  // eq = none
  415a6c:	ldp	x20, x19, [sp, #48]
  415a70:	ldp	x22, x21, [sp, #32]
  415a74:	ldr	x23, [sp, #16]
  415a78:	ldp	x29, x30, [sp], #64
  415a7c:	ret
  415a80:	stp	x29, x30, [sp, #-48]!
  415a84:	str	x21, [sp, #16]
  415a88:	stp	x20, x19, [sp, #32]
  415a8c:	mov	x29, sp
  415a90:	ldr	w8, [x0, #12]
  415a94:	cmp	w8, w1
  415a98:	b.ne	415aac <feof@plt+0x129cc>  // b.any
  415a9c:	ldp	x20, x19, [sp, #32]
  415aa0:	ldr	x21, [sp, #16]
  415aa4:	ldp	x29, x30, [sp], #48
  415aa8:	ret
  415aac:	mov	x19, x0
  415ab0:	mov	w20, w1
  415ab4:	cmn	w8, #0x1
  415ab8:	b.eq	415acc <feof@plt+0x129ec>  // b.none
  415abc:	ldr	x8, [x19]
  415ac0:	ldr	x1, [x19, #48]
  415ac4:	ldr	x0, [x8]
  415ac8:	bl	419e20 <feof@plt+0x16d40>
  415acc:	add	w8, w20, #0x3
  415ad0:	cmp	w8, #0x5
  415ad4:	str	w20, [x19, #12]
  415ad8:	b.hi	415b6c <feof@plt+0x12a8c>  // b.pmore
  415adc:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  415ae0:	add	x9, x9, #0x860
  415ae4:	adr	x10, 415a9c <feof@plt+0x129bc>
  415ae8:	ldrb	w11, [x9, x8]
  415aec:	add	x10, x10, x11, lsl #2
  415af0:	br	x10
  415af4:	ldr	x8, [x19]
  415af8:	ldr	x1, [x19, #40]
  415afc:	ldr	x0, [x8]
  415b00:	b	415b90 <feof@plt+0x12ab0>
  415b04:	ldr	x8, [x19]
  415b08:	ldr	x1, [x19, #16]
  415b0c:	ldr	x0, [x8]
  415b10:	b	415b90 <feof@plt+0x12ab0>
  415b14:	ldr	x8, [x19]
  415b18:	ldr	x1, [x19, #32]
  415b1c:	ldr	x0, [x8]
  415b20:	b	415b90 <feof@plt+0x12ab0>
  415b24:	ldr	x8, [x19]
  415b28:	ldr	w0, [x19, #8]
  415b2c:	ldr	x20, [x8]
  415b30:	ldrb	w21, [x20, #67]
  415b34:	bl	40f608 <feof@plt+0xc528>
  415b38:	mov	x19, x0
  415b3c:	bl	402a50 <strlen@plt>
  415b40:	mov	x2, x0
  415b44:	mov	w0, w21
  415b48:	mov	x1, x19
  415b4c:	bl	41260c <feof@plt+0xf52c>
  415b50:	mov	x1, x0
  415b54:	mov	x0, x20
  415b58:	b	415b90 <feof@plt+0x12ab0>
  415b5c:	ldr	x8, [x19]
  415b60:	ldr	x1, [x19, #24]
  415b64:	ldr	x0, [x8]
  415b68:	b	415b90 <feof@plt+0x12ab0>
  415b6c:	cmp	w20, #0x2
  415b70:	b.le	415ba0 <feof@plt+0x12ac0>
  415b74:	ldr	x8, [x19]
  415b78:	tst	w20, #0x1
  415b7c:	mov	w9, #0x10                  	// #16
  415b80:	mov	w10, #0x18                  	// #24
  415b84:	csel	x9, x10, x9, eq  // eq = none
  415b88:	ldr	x0, [x8]
  415b8c:	ldr	x1, [x19, x9]
  415b90:	ldp	x20, x19, [sp, #32]
  415b94:	ldr	x21, [sp, #16]
  415b98:	ldp	x29, x30, [sp], #48
  415b9c:	b	419e20 <feof@plt+0x16d40>
  415ba0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415ba4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415ba8:	add	x0, x0, #0x866
  415bac:	add	x2, x2, #0x911
  415bb0:	mov	w1, #0x17f                 	// #383
  415bb4:	bl	40f560 <feof@plt+0xc480>
  415bb8:	stp	x29, x30, [sp, #-16]!
  415bbc:	mov	x29, sp
  415bc0:	ldr	x11, [x0, #120]
  415bc4:	cbz	x11, 415c78 <feof@plt+0x12b98>
  415bc8:	ldr	w10, [x11, #4]
  415bcc:	cbz	w10, 415c78 <feof@plt+0x12b98>
  415bd0:	mov	x9, xzr
  415bd4:	add	x8, x11, #0x8
  415bd8:	add	x11, x11, #0x30
  415bdc:	b	415c00 <feof@plt+0x12b20>
  415be0:	ldr	w12, [x8, #12]
  415be4:	cmp	w12, w2
  415be8:	b.ge	415c8c <feof@plt+0x12bac>  // b.tcont
  415bec:	add	x9, x9, #0x1
  415bf0:	cmp	x9, x10
  415bf4:	csel	x8, x11, xzr, cc  // cc = lo, ul, last
  415bf8:	add	x11, x11, #0x28
  415bfc:	b.cs	415c78 <feof@plt+0x12b98>  // b.hs, b.nlast
  415c00:	ldr	w12, [x8, #16]
  415c04:	cmp	w12, #0x2
  415c08:	b.eq	415bec <feof@plt+0x12b0c>  // b.none
  415c0c:	ldr	w13, [x8]
  415c10:	ldr	w12, [x8, #8]
  415c14:	cmp	w13, w12
  415c18:	b.hi	415ce0 <feof@plt+0x12c00>  // b.pmore
  415c1c:	cmp	w13, w1
  415c20:	b.hi	415bec <feof@plt+0x12b0c>  // b.pmore
  415c24:	b.ne	415c44 <feof@plt+0x12b64>  // b.any
  415c28:	ldr	w13, [x8, #4]
  415c2c:	cmp	w13, w2
  415c30:	b.gt	415bec <feof@plt+0x12b0c>
  415c34:	cmp	w12, w1
  415c38:	b.hi	415c8c <feof@plt+0x12bac>  // b.pmore
  415c3c:	b.eq	415be0 <feof@plt+0x12b00>  // b.none
  415c40:	b	415d10 <feof@plt+0x12c30>
  415c44:	cmp	w13, w1
  415c48:	b.cs	415cf8 <feof@plt+0x12c18>  // b.hs, b.nlast
  415c4c:	cmp	w12, w1
  415c50:	b.cc	415bec <feof@plt+0x12b0c>  // b.lo, b.ul, b.last
  415c54:	b.hi	415c84 <feof@plt+0x12ba4>  // b.pmore
  415c58:	cmp	w12, w1
  415c5c:	b.eq	415be0 <feof@plt+0x12b00>  // b.none
  415c60:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415c64:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415c68:	add	x0, x0, #0x866
  415c6c:	add	x2, x2, #0x94e
  415c70:	mov	w1, #0x20b                 	// #523
  415c74:	bl	40f560 <feof@plt+0xc480>
  415c78:	mov	w0, wzr
  415c7c:	ldp	x29, x30, [sp], #16
  415c80:	ret
  415c84:	cmp	w13, w12
  415c88:	b.cs	415d28 <feof@plt+0x12c48>  // b.hs, b.nlast
  415c8c:	str	w9, [x5]
  415c90:	strb	wzr, [x5, #4]
  415c94:	ldr	w9, [x8, #16]
  415c98:	cbnz	w9, 415cc0 <feof@plt+0x12be0>
  415c9c:	ldr	w9, [x8, #20]
  415ca0:	cmp	w9, w1
  415ca4:	b.ne	415cc0 <feof@plt+0x12be0>  // b.any
  415ca8:	ldr	w8, [x8, #24]
  415cac:	cmp	w8, w2
  415cb0:	b.ne	415cc0 <feof@plt+0x12be0>  // b.any
  415cb4:	mov	w8, #0x1                   	// #1
  415cb8:	strb	w8, [x5, #4]
  415cbc:	b	415cd4 <feof@plt+0x12bf4>
  415cc0:	cmp	w2, w3
  415cc4:	mov	w0, wzr
  415cc8:	b.lt	415c7c <feof@plt+0x12b9c>  // b.tstop
  415ccc:	cmp	w2, w4
  415cd0:	b.gt	415c7c <feof@plt+0x12b9c>
  415cd4:	mov	w0, #0x1                   	// #1
  415cd8:	ldp	x29, x30, [sp], #16
  415cdc:	ret
  415ce0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415ce4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415ce8:	add	x0, x0, #0x866
  415cec:	add	x2, x2, #0x94e
  415cf0:	mov	w1, #0x1d8                 	// #472
  415cf4:	bl	40f560 <feof@plt+0xc480>
  415cf8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415cfc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415d00:	add	x0, x0, #0x866
  415d04:	add	x2, x2, #0x94e
  415d08:	mov	w1, #0x1fb                 	// #507
  415d0c:	bl	40f560 <feof@plt+0xc480>
  415d10:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415d14:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415d18:	add	x0, x0, #0x866
  415d1c:	add	x2, x2, #0x94e
  415d20:	mov	w1, #0x1f3                 	// #499
  415d24:	bl	40f560 <feof@plt+0xc480>
  415d28:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  415d2c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  415d30:	add	x0, x0, #0x866
  415d34:	add	x2, x2, #0x94e
  415d38:	mov	w1, #0x207                 	// #519
  415d3c:	bl	40f560 <feof@plt+0xc480>
  415d40:	ldr	w8, [x0, #4]
  415d44:	ldr	w9, [x1, #4]
  415d48:	sub	x10, x8, x9
  415d4c:	cmp	x10, #0x0
  415d50:	mov	w9, #0x1                   	// #1
  415d54:	cneg	w8, w9, le
  415d58:	cbz	x10, 415d64 <feof@plt+0x12c84>
  415d5c:	mov	w0, w8
  415d60:	ret
  415d64:	ldr	w8, [x0]
  415d68:	ldr	w10, [x1]
  415d6c:	sub	x8, x8, x10
  415d70:	cmp	x8, #0x0
  415d74:	cneg	w8, w9, le
  415d78:	csel	w8, wzr, w8, eq  // eq = none
  415d7c:	mov	w0, w8
  415d80:	ret
  415d84:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x960>
  415d88:	adrp	x10, 415000 <feof@plt+0x11f20>
  415d8c:	mov	w8, #0x1                   	// #1
  415d90:	add	x9, x9, #0xed0
  415d94:	add	x10, x10, #0xda8
  415d98:	strb	w8, [x0]
  415d9c:	stp	xzr, x9, [x0, #8]
  415da0:	stp	xzr, x10, [x0, #24]
  415da4:	ret
  415da8:	cbz	x0, 415dd4 <feof@plt+0x12cf4>
  415dac:	stp	x29, x30, [sp, #-32]!
  415db0:	str	x19, [sp, #16]
  415db4:	mov	x29, sp
  415db8:	mov	x19, x0
  415dbc:	ldr	x1, [x0, #8]!
  415dc0:	bl	417b10 <feof@plt+0x14a30>
  415dc4:	mov	x0, x19
  415dc8:	ldr	x19, [sp, #16]
  415dcc:	ldp	x29, x30, [sp], #32
  415dd0:	b	402d00 <_ZdlPv@plt>
  415dd4:	ret
  415dd8:	stp	x29, x30, [sp, #-48]!
  415ddc:	str	x21, [sp, #16]
  415de0:	stp	x20, x19, [sp, #32]
  415de4:	mov	x29, sp
  415de8:	ldrb	w8, [x0]
  415dec:	cbz	w8, 415e04 <feof@plt+0x12d24>
  415df0:	ldrb	w8, [x1, #160]
  415df4:	mov	x19, x0
  415df8:	mov	x20, x1
  415dfc:	cbz	w8, 415e14 <feof@plt+0x12d34>
  415e00:	strb	wzr, [x19]
  415e04:	ldp	x20, x19, [sp, #32]
  415e08:	ldr	x21, [sp, #16]
  415e0c:	ldp	x29, x30, [sp], #48
  415e10:	ret
  415e14:	ldr	w8, [x20, #120]
  415e18:	cbz	w8, 415e04 <feof@plt+0x12d24>
  415e1c:	mov	w21, wzr
  415e20:	b	415e34 <feof@plt+0x12d54>
  415e24:	ldr	w8, [x20, #120]
  415e28:	add	w21, w21, #0x1
  415e2c:	cmp	w21, w8
  415e30:	b.cs	415e04 <feof@plt+0x12d24>  // b.hs, b.nlast
  415e34:	cmp	w21, #0x1
  415e38:	b.gt	415e48 <feof@plt+0x12d68>
  415e3c:	add	x8, x20, w21, sxtw #3
  415e40:	add	x8, x8, #0x80
  415e44:	b	415e54 <feof@plt+0x12d74>
  415e48:	ldr	x8, [x20, #152]
  415e4c:	sub	w9, w21, #0x2
  415e50:	add	x8, x8, w9, sxtw #3
  415e54:	ldr	x1, [x8]
  415e58:	mov	x0, x19
  415e5c:	bl	415e6c <feof@plt+0x12d8c>
  415e60:	tbnz	w0, #0, 415e24 <feof@plt+0x12d44>
  415e64:	strb	wzr, [x19]
  415e68:	b	415e24 <feof@plt+0x12d44>
  415e6c:	sub	sp, sp, #0x70
  415e70:	stp	x29, x30, [sp, #64]
  415e74:	stp	x22, x21, [sp, #80]
  415e78:	stp	x20, x19, [sp, #96]
  415e7c:	add	x29, sp, #0x40
  415e80:	ldr	w9, [x1]
  415e84:	mov	x20, x0
  415e88:	add	x8, sp, #0x20
  415e8c:	mov	x19, x1
  415e90:	mov	w0, w9
  415e94:	bl	41dba0 <feof@plt+0x1aac0>
  415e98:	ldr	w0, [x19, #4]
  415e9c:	mov	x8, sp
  415ea0:	bl	41dba0 <feof@plt+0x1aac0>
  415ea4:	ldr	x1, [sp, #32]
  415ea8:	ldr	x8, [sp]
  415eac:	cmp	x1, x8
  415eb0:	b.ne	415f10 <feof@plt+0x12e30>  // b.any
  415eb4:	ldr	w8, [sp, #40]
  415eb8:	ldr	w9, [sp, #8]
  415ebc:	cmp	w8, w9
  415ec0:	b.ne	415f10 <feof@plt+0x12e30>  // b.any
  415ec4:	ldr	w8, [sp, #44]
  415ec8:	cbz	w8, 415f10 <feof@plt+0x12e30>
  415ecc:	ldr	w8, [sp, #12]
  415ed0:	cbz	w8, 415f10 <feof@plt+0x12e30>
  415ed4:	mov	x0, x20
  415ed8:	bl	415fa4 <feof@plt+0x12ec4>
  415edc:	ldrb	w8, [x20]
  415ee0:	cbz	w8, 415f10 <feof@plt+0x12e30>
  415ee4:	ldp	w1, w20, [sp, #40]
  415ee8:	ldr	w21, [sp, #12]
  415eec:	ldp	x22, x19, [x19, #8]
  415ef0:	bl	416778 <feof@plt+0x13698>
  415ef4:	cbz	x0, 415f14 <feof@plt+0x12e34>
  415ef8:	mov	w1, w20
  415efc:	mov	w2, w21
  415f00:	mov	x3, x22
  415f04:	mov	w4, w19
  415f08:	bl	416958 <feof@plt+0x13878>
  415f0c:	b	415f14 <feof@plt+0x12e34>
  415f10:	mov	w0, wzr
  415f14:	ldp	x20, x19, [sp, #96]
  415f18:	ldp	x22, x21, [sp, #80]
  415f1c:	ldp	x29, x30, [sp, #64]
  415f20:	and	w0, w0, #0x1
  415f24:	add	sp, sp, #0x70
  415f28:	ret
  415f2c:	sub	sp, sp, #0x70
  415f30:	stp	x29, x30, [sp, #80]
  415f34:	str	x19, [sp, #96]
  415f38:	add	x29, sp, #0x50
  415f3c:	ldrb	w8, [x0]
  415f40:	cbz	w8, 415f7c <feof@plt+0x12e9c>
  415f44:	bl	415fa4 <feof@plt+0x12ec4>
  415f48:	mov	x19, x0
  415f4c:	add	x0, sp, #0x8
  415f50:	mov	w1, wzr
  415f54:	bl	41a454 <feof@plt+0x17374>
  415f58:	add	x1, sp, #0x8
  415f5c:	mov	x0, x19
  415f60:	bl	4165b8 <feof@plt+0x134d8>
  415f64:	tbz	w0, #0, 415f84 <feof@plt+0x12ea4>
  415f68:	add	x0, sp, #0x8
  415f6c:	bl	4181b0 <feof@plt+0x150d0>
  415f70:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  415f74:	mov	x19, x0
  415f78:	b	415f88 <feof@plt+0x12ea8>
  415f7c:	mov	x19, xzr
  415f80:	b	415f90 <feof@plt+0x12eb0>
  415f84:	mov	x19, xzr
  415f88:	add	x0, sp, #0x8
  415f8c:	bl	41a558 <feof@plt+0x17478>
  415f90:	mov	x0, x19
  415f94:	ldr	x19, [sp, #96]
  415f98:	ldp	x29, x30, [sp, #80]
  415f9c:	add	sp, sp, #0x70
  415fa0:	ret
  415fa4:	stp	x29, x30, [sp, #-64]!
  415fa8:	stp	x24, x23, [sp, #16]
  415fac:	stp	x22, x21, [sp, #32]
  415fb0:	stp	x20, x19, [sp, #48]
  415fb4:	mov	x29, sp
  415fb8:	cbz	x1, 4160e4 <feof@plt+0x13004>
  415fbc:	add	x19, x0, #0x8
  415fc0:	mov	x22, x0
  415fc4:	mov	x0, x19
  415fc8:	mov	x21, x1
  415fcc:	bl	417c08 <feof@plt+0x14b28>
  415fd0:	ldr	x8, [x22, #8]
  415fd4:	cbz	x8, 415fec <feof@plt+0x12f0c>
  415fd8:	ldr	x9, [x22, #16]
  415fdc:	ldr	x0, [x8]
  415fe0:	mov	x1, x21
  415fe4:	blr	x9
  415fe8:	cbz	w0, 41609c <feof@plt+0x12fbc>
  415fec:	mov	w0, #0x30                  	// #48
  415ff0:	bl	402d30 <_Znwm@plt>
  415ff4:	adrp	x8, 416000 <feof@plt+0x12f20>
  415ff8:	adrp	x9, 416000 <feof@plt+0x12f20>
  415ffc:	add	x8, x8, #0x584
  416000:	add	x9, x9, #0x58c
  416004:	mov	w10, #0xffffffff            	// #-1
  416008:	mov	x20, x0
  41600c:	stp	x21, xzr, [x0]
  416010:	stp	x8, xzr, [x0, #16]
  416014:	str	x9, [x0, #32]
  416018:	str	w10, [x0, #40]
  41601c:	mov	x0, x19
  416020:	mov	x1, x21
  416024:	bl	417c08 <feof@plt+0x14b28>
  416028:	ldr	x8, [x19]
  41602c:	cbz	x8, 41606c <feof@plt+0x12f8c>
  416030:	ldr	x9, [x22, #16]
  416034:	ldr	x0, [x8]
  416038:	mov	x1, x21
  41603c:	blr	x9
  416040:	ldr	x24, [x22, #8]
  416044:	mov	w23, w0
  416048:	cbnz	w0, 416074 <feof@plt+0x12f94>
  41604c:	cbz	x24, 416074 <feof@plt+0x12f94>
  416050:	ldr	x8, [x22, #32]
  416054:	cbz	x8, 416064 <feof@plt+0x12f84>
  416058:	ldr	x0, [x24, #8]
  41605c:	blr	x8
  416060:	ldr	x24, [x19]
  416064:	str	x20, [x24, #8]
  416068:	b	4160cc <feof@plt+0x12fec>
  41606c:	mov	w23, wzr
  416070:	mov	x24, xzr
  416074:	mov	w0, #0x28                  	// #40
  416078:	bl	402d30 <_Znwm@plt>
  41607c:	stp	x21, x20, [x0]
  416080:	cbz	x24, 4160b0 <feof@plt+0x12fd0>
  416084:	tbnz	w23, #31, 4160b8 <feof@plt+0x12fd8>
  416088:	str	x24, [x0, #24]
  41608c:	ldr	x8, [x24, #16]
  416090:	str	x8, [x0, #16]
  416094:	str	xzr, [x24, #16]
  416098:	b	4160c8 <feof@plt+0x12fe8>
  41609c:	ldr	x8, [x19]
  4160a0:	cbz	x8, 415fec <feof@plt+0x12f0c>
  4160a4:	ldr	x20, [x8, #8]
  4160a8:	cbnz	x20, 4160cc <feof@plt+0x12fec>
  4160ac:	b	415fec <feof@plt+0x12f0c>
  4160b0:	stp	xzr, xzr, [x0, #16]
  4160b4:	b	4160c8 <feof@plt+0x12fe8>
  4160b8:	str	x24, [x0, #16]
  4160bc:	ldr	x8, [x24, #24]
  4160c0:	str	x8, [x0, #24]
  4160c4:	str	xzr, [x24, #24]
  4160c8:	str	x0, [x19]
  4160cc:	mov	x0, x20
  4160d0:	ldp	x20, x19, [sp, #48]
  4160d4:	ldp	x22, x21, [sp, #32]
  4160d8:	ldp	x24, x23, [sp, #16]
  4160dc:	ldp	x29, x30, [sp], #64
  4160e0:	ret
  4160e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4160e8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4160ec:	add	x0, x0, #0x9cc
  4160f0:	add	x2, x2, #0x9ee
  4160f4:	mov	w1, #0x149                 	// #329
  4160f8:	bl	40f560 <feof@plt+0xc480>
  4160fc:	sub	sp, sp, #0x70
  416100:	stp	x29, x30, [sp, #80]
  416104:	str	x19, [sp, #96]
  416108:	add	x29, sp, #0x50
  41610c:	mov	x19, x0
  416110:	add	x0, sp, #0x8
  416114:	mov	w1, wzr
  416118:	bl	41a454 <feof@plt+0x17374>
  41611c:	add	x1, sp, #0x8
  416120:	mov	x0, x19
  416124:	bl	4165b8 <feof@plt+0x134d8>
  416128:	tbz	w0, #0, 416140 <feof@plt+0x13060>
  41612c:	add	x0, sp, #0x8
  416130:	bl	4181b0 <feof@plt+0x150d0>
  416134:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  416138:	mov	x19, x0
  41613c:	b	416144 <feof@plt+0x13064>
  416140:	mov	x19, xzr
  416144:	add	x0, sp, #0x8
  416148:	bl	41a558 <feof@plt+0x17478>
  41614c:	mov	x0, x19
  416150:	ldr	x19, [sp, #96]
  416154:	ldp	x29, x30, [sp, #80]
  416158:	add	sp, sp, #0x70
  41615c:	ret
  416160:	stp	x29, x30, [sp, #-64]!
  416164:	str	x23, [sp, #16]
  416168:	stp	x22, x21, [sp, #32]
  41616c:	stp	x20, x19, [sp, #48]
  416170:	mov	x29, sp
  416174:	cbz	x1, 416264 <feof@plt+0x13184>
  416178:	add	x21, x0, #0x8
  41617c:	mov	x23, x0
  416180:	mov	x0, x21
  416184:	mov	w19, w3
  416188:	mov	w20, w2
  41618c:	mov	x22, x1
  416190:	bl	417c08 <feof@plt+0x14b28>
  416194:	ldr	x8, [x23, #8]
  416198:	cbz	x8, 4161b0 <feof@plt+0x130d0>
  41619c:	ldr	x9, [x23, #16]
  4161a0:	ldr	x0, [x8]
  4161a4:	mov	x1, x22
  4161a8:	blr	x9
  4161ac:	cbz	w0, 4161c8 <feof@plt+0x130e8>
  4161b0:	mov	w0, w19
  4161b4:	ldp	x20, x19, [sp, #48]
  4161b8:	ldp	x22, x21, [sp, #32]
  4161bc:	ldr	x23, [sp, #16]
  4161c0:	ldp	x29, x30, [sp], #64
  4161c4:	ret
  4161c8:	ldr	x8, [x21]
  4161cc:	cbz	x8, 4161b0 <feof@plt+0x130d0>
  4161d0:	ldr	x22, [x8, #8]
  4161d4:	cbz	x22, 4161b0 <feof@plt+0x130d0>
  4161d8:	add	x21, x22, #0x8
  4161dc:	mov	x0, x21
  4161e0:	mov	w1, w20
  4161e4:	bl	417da4 <feof@plt+0x14cc4>
  4161e8:	ldr	x8, [x22, #8]
  4161ec:	cbz	x8, 4161b0 <feof@plt+0x130d0>
  4161f0:	ldr	x9, [x22, #16]
  4161f4:	ldr	w0, [x8]
  4161f8:	mov	w1, w20
  4161fc:	blr	x9
  416200:	cbnz	w0, 4161b0 <feof@plt+0x130d0>
  416204:	ldr	x8, [x21]
  416208:	cbz	x8, 4161b0 <feof@plt+0x130d0>
  41620c:	ldr	x8, [x8, #8]
  416210:	cbz	x8, 4161b0 <feof@plt+0x130d0>
  416214:	ldr	x10, [x8, #24]
  416218:	cbz	x10, 4161b0 <feof@plt+0x130d0>
  41621c:	ldr	w8, [x10, #4]
  416220:	cbz	w8, 4161b0 <feof@plt+0x130d0>
  416224:	mov	x9, xzr
  416228:	add	x11, x10, #0x8
  41622c:	add	x10, x10, #0x10
  416230:	b	41624c <feof@plt+0x1316c>
  416234:	add	x9, x9, #0x1
  416238:	cmp	x9, x8
  41623c:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  416240:	cmp	x8, x9
  416244:	add	x10, x10, #0x8
  416248:	b.eq	4161b0 <feof@plt+0x130d0>  // b.none
  41624c:	ldr	w12, [x11]
  416250:	cmp	w12, w19
  416254:	b.gt	416234 <feof@plt+0x13154>
  416258:	ldr	w11, [x11, #4]
  41625c:	add	w19, w11, w19
  416260:	b	416234 <feof@plt+0x13154>
  416264:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416268:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41626c:	add	x0, x0, #0x9cc
  416270:	add	x2, x2, #0x9e5
  416274:	mov	w1, #0x140                 	// #320
  416278:	bl	40f560 <feof@plt+0xc480>
  41627c:	stp	x29, x30, [sp, #-48]!
  416280:	str	x21, [sp, #16]
  416284:	stp	x20, x19, [sp, #32]
  416288:	mov	x29, sp
  41628c:	cbz	x1, 4162e4 <feof@plt+0x13204>
  416290:	add	x19, x0, #0x8
  416294:	mov	x21, x0
  416298:	mov	x0, x19
  41629c:	mov	x20, x1
  4162a0:	bl	417c08 <feof@plt+0x14b28>
  4162a4:	ldr	x8, [x21, #8]
  4162a8:	cbz	x8, 4162c0 <feof@plt+0x131e0>
  4162ac:	ldr	x9, [x21, #16]
  4162b0:	ldr	x0, [x8]
  4162b4:	mov	x1, x20
  4162b8:	blr	x9
  4162bc:	cbz	w0, 4162d4 <feof@plt+0x131f4>
  4162c0:	mov	x0, xzr
  4162c4:	ldp	x20, x19, [sp, #32]
  4162c8:	ldr	x21, [sp, #16]
  4162cc:	ldp	x29, x30, [sp], #48
  4162d0:	ret
  4162d4:	ldr	x8, [x19]
  4162d8:	cbz	x8, 4162c0 <feof@plt+0x131e0>
  4162dc:	ldr	x0, [x8, #8]
  4162e0:	b	4162c4 <feof@plt+0x131e4>
  4162e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4162e8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4162ec:	add	x0, x0, #0x9cc
  4162f0:	add	x2, x2, #0x9e5
  4162f4:	mov	w1, #0x140                 	// #320
  4162f8:	bl	40f560 <feof@plt+0xc480>
  4162fc:	stp	x29, x30, [sp, #-48]!
  416300:	stp	x22, x21, [sp, #16]
  416304:	stp	x20, x19, [sp, #32]
  416308:	mov	x29, sp
  41630c:	add	x20, x0, #0x8
  416310:	mov	x22, x0
  416314:	mov	x0, x20
  416318:	mov	w19, w2
  41631c:	mov	w21, w1
  416320:	bl	417da4 <feof@plt+0x14cc4>
  416324:	ldr	x8, [x22, #8]
  416328:	cbz	x8, 416340 <feof@plt+0x13260>
  41632c:	ldr	x9, [x22, #16]
  416330:	ldr	w0, [x8]
  416334:	mov	w1, w21
  416338:	blr	x9
  41633c:	cbz	w0, 416354 <feof@plt+0x13274>
  416340:	mov	w0, w19
  416344:	ldp	x20, x19, [sp, #32]
  416348:	ldp	x22, x21, [sp, #16]
  41634c:	ldp	x29, x30, [sp], #48
  416350:	ret
  416354:	ldr	x8, [x20]
  416358:	cbz	x8, 416340 <feof@plt+0x13260>
  41635c:	ldr	x8, [x8, #8]
  416360:	cbz	x8, 416340 <feof@plt+0x13260>
  416364:	ldr	x10, [x8, #24]
  416368:	cbz	x10, 416340 <feof@plt+0x13260>
  41636c:	ldr	w8, [x10, #4]
  416370:	cbz	w8, 416340 <feof@plt+0x13260>
  416374:	mov	x9, xzr
  416378:	add	x11, x10, #0x8
  41637c:	add	x10, x10, #0x10
  416380:	b	41639c <feof@plt+0x132bc>
  416384:	add	x9, x9, #0x1
  416388:	cmp	x9, x8
  41638c:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  416390:	cmp	x8, x9
  416394:	add	x10, x10, #0x8
  416398:	b.eq	416340 <feof@plt+0x13260>  // b.none
  41639c:	ldr	w12, [x11]
  4163a0:	cmp	w12, w19
  4163a4:	b.gt	416384 <feof@plt+0x132a4>
  4163a8:	ldr	w11, [x11, #4]
  4163ac:	add	w19, w11, w19
  4163b0:	b	416384 <feof@plt+0x132a4>
  4163b4:	sub	sp, sp, #0x80
  4163b8:	stp	x29, x30, [sp, #80]
  4163bc:	str	x21, [sp, #96]
  4163c0:	stp	x20, x19, [sp, #112]
  4163c4:	add	x29, sp, #0x50
  4163c8:	ldrb	w8, [x0]
  4163cc:	cbz	w8, 416460 <feof@plt+0x13380>
  4163d0:	mov	x20, x0
  4163d4:	mov	w19, w1
  4163d8:	add	x0, sp, #0x8
  4163dc:	mov	w1, wzr
  4163e0:	bl	41a454 <feof@plt+0x17374>
  4163e4:	ldrb	w8, [x20]
  4163e8:	cbz	w8, 416444 <feof@plt+0x13364>
  4163ec:	mov	x8, xzr
  4163f0:	add	x9, x20, #0x8
  4163f4:	and	w19, w19, #0x1
  4163f8:	b	416420 <feof@plt+0x13340>
  4163fc:	cbz	x8, 416444 <feof@plt+0x13364>
  416400:	ldr	x20, [x8, #32]
  416404:	mov	x21, x8
  416408:	ldr	x0, [x21, #8]
  41640c:	add	x1, sp, #0x8
  416410:	mov	w2, w19
  416414:	bl	41706c <feof@plt+0x13f8c>
  416418:	add	x9, x21, #0x18
  41641c:	mov	x8, x20
  416420:	ldr	x9, [x9]
  416424:	cbz	x9, 4163fc <feof@plt+0x1331c>
  416428:	mov	x21, x9
  41642c:	ldr	x9, [x9, #16]
  416430:	mov	x20, x8
  416434:	str	x8, [x21, #32]
  416438:	mov	x8, x21
  41643c:	cbnz	x9, 416428 <feof@plt+0x13348>
  416440:	b	416408 <feof@plt+0x13328>
  416444:	add	x0, sp, #0x8
  416448:	bl	4181b0 <feof@plt+0x150d0>
  41644c:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  416450:	mov	x19, x0
  416454:	add	x0, sp, #0x8
  416458:	bl	41a558 <feof@plt+0x17478>
  41645c:	b	416464 <feof@plt+0x13384>
  416460:	mov	x19, xzr
  416464:	mov	x0, x19
  416468:	ldp	x20, x19, [sp, #112]
  41646c:	ldr	x21, [sp, #96]
  416470:	ldp	x29, x30, [sp, #80]
  416474:	add	sp, sp, #0x80
  416478:	ret
  41647c:	stp	x29, x30, [sp, #-48]!
  416480:	stp	x22, x21, [sp, #16]
  416484:	stp	x20, x19, [sp, #32]
  416488:	mov	x29, sp
  41648c:	ldrb	w8, [x0]
  416490:	cbz	w8, 4164f4 <feof@plt+0x13414>
  416494:	mov	x19, x1
  416498:	mov	x8, xzr
  41649c:	add	x9, x0, #0x8
  4164a0:	and	w20, w2, #0x1
  4164a4:	b	4164c0 <feof@plt+0x133e0>
  4164a8:	ldr	x0, [x22, #8]
  4164ac:	mov	x1, x19
  4164b0:	mov	w2, w20
  4164b4:	bl	41706c <feof@plt+0x13f8c>
  4164b8:	add	x9, x22, #0x18
  4164bc:	mov	x8, x21
  4164c0:	ldr	x9, [x9]
  4164c4:	cbz	x9, 4164e4 <feof@plt+0x13404>
  4164c8:	mov	x22, x9
  4164cc:	ldr	x9, [x9, #16]
  4164d0:	mov	x21, x8
  4164d4:	str	x8, [x22, #32]
  4164d8:	mov	x8, x22
  4164dc:	cbnz	x9, 4164c8 <feof@plt+0x133e8>
  4164e0:	b	4164a8 <feof@plt+0x133c8>
  4164e4:	cbz	x8, 4164f4 <feof@plt+0x13414>
  4164e8:	ldr	x21, [x8, #32]
  4164ec:	mov	x22, x8
  4164f0:	b	4164a8 <feof@plt+0x133c8>
  4164f4:	ldp	x20, x19, [sp, #32]
  4164f8:	ldp	x22, x21, [sp, #16]
  4164fc:	ldp	x29, x30, [sp], #48
  416500:	ret
  416504:	stp	x29, x30, [sp, #-48]!
  416508:	stp	x22, x21, [sp, #16]
  41650c:	stp	x20, x19, [sp, #32]
  416510:	mov	x29, sp
  416514:	mov	w19, w5
  416518:	mov	x20, x4
  41651c:	mov	w21, w3
  416520:	mov	w22, w2
  416524:	bl	416778 <feof@plt+0x13698>
  416528:	cbz	x0, 41654c <feof@plt+0x1346c>
  41652c:	mov	w1, w22
  416530:	mov	w2, w21
  416534:	mov	x3, x20
  416538:	mov	w4, w19
  41653c:	ldp	x20, x19, [sp, #32]
  416540:	ldp	x22, x21, [sp, #16]
  416544:	ldp	x29, x30, [sp], #48
  416548:	b	416958 <feof@plt+0x13878>
  41654c:	ldp	x20, x19, [sp, #32]
  416550:	ldp	x22, x21, [sp, #16]
  416554:	ldp	x29, x30, [sp], #48
  416558:	ret
  41655c:	adrp	x8, 416000 <feof@plt+0x12f20>
  416560:	adrp	x9, 416000 <feof@plt+0x12f20>
  416564:	add	x8, x8, #0x584
  416568:	add	x9, x9, #0x58c
  41656c:	mov	w10, #0xffffffff            	// #-1
  416570:	stp	x1, xzr, [x0]
  416574:	stp	x8, xzr, [x0, #16]
  416578:	str	x9, [x0, #32]
  41657c:	str	w10, [x0, #40]
  416580:	ret
  416584:	sub	w0, w0, w1
  416588:	ret
  41658c:	cbz	x0, 4165b4 <feof@plt+0x134d4>
  416590:	stp	x29, x30, [sp, #-32]!
  416594:	str	x19, [sp, #16]
  416598:	mov	x29, sp
  41659c:	mov	x19, x0
  4165a0:	bl	417a5c <feof@plt+0x1497c>
  4165a4:	mov	x0, x19
  4165a8:	ldr	x19, [sp, #16]
  4165ac:	ldp	x29, x30, [sp], #32
  4165b0:	b	402d00 <_ZdlPv@plt>
  4165b4:	ret
  4165b8:	stp	x29, x30, [sp, #-96]!
  4165bc:	str	x27, [sp, #16]
  4165c0:	stp	x26, x25, [sp, #32]
  4165c4:	stp	x24, x23, [sp, #48]
  4165c8:	stp	x22, x21, [sp, #64]
  4165cc:	stp	x20, x19, [sp, #80]
  4165d0:	mov	x29, sp
  4165d4:	ldr	w8, [x0, #40]
  4165d8:	mov	x20, x0
  4165dc:	mov	x19, x1
  4165e0:	cmn	w8, #0x1
  4165e4:	b.eq	41672c <feof@plt+0x1364c>  // b.none
  4165e8:	ldr	x0, [x20]
  4165ec:	bl	41db40 <feof@plt+0x1aa60>
  4165f0:	ldr	w26, [x20, #40]
  4165f4:	mov	w21, w0
  4165f8:	cmp	w26, #0x1
  4165fc:	b.lt	4166fc <feof@plt+0x1361c>  // b.tstop
  416600:	add	x22, x20, #0x8
  416604:	mov	w23, #0x1                   	// #1
  416608:	b	416618 <feof@plt+0x13538>
  41660c:	cmp	w23, w26
  416610:	add	w23, w23, #0x1
  416614:	b.eq	4166fc <feof@plt+0x1361c>  // b.none
  416618:	mov	x0, x22
  41661c:	mov	w1, w23
  416620:	bl	417da4 <feof@plt+0x14cc4>
  416624:	ldr	x8, [x22]
  416628:	cbz	x8, 416640 <feof@plt+0x13560>
  41662c:	ldr	x9, [x20, #16]
  416630:	ldr	w0, [x8]
  416634:	mov	w1, w23
  416638:	blr	x9
  41663c:	cbz	w0, 416694 <feof@plt+0x135b4>
  416640:	ldr	x0, [x20]
  416644:	mov	w1, w23
  416648:	bl	41d7e0 <feof@plt+0x1a700>
  41664c:	cbz	x0, 416710 <feof@plt+0x13630>
  416650:	mov	x25, x1
  416654:	cbz	x1, 41667c <feof@plt+0x1359c>
  416658:	mov	x24, x0
  41665c:	mov	w27, #0x80000000            	// #-2147483648
  416660:	cbz	x27, 416760 <feof@plt+0x13680>
  416664:	ldrb	w1, [x24], #1
  416668:	mov	x0, x19
  41666c:	bl	41803c <feof@plt+0x14f5c>
  416670:	subs	x25, x25, #0x1
  416674:	sub	x27, x27, #0x1
  416678:	b.ne	416660 <feof@plt+0x13580>  // b.any
  41667c:	cmp	w23, w26
  416680:	b.ge	41660c <feof@plt+0x1352c>  // b.tcont
  416684:	mov	w1, #0xa                   	// #10
  416688:	mov	x0, x19
  41668c:	bl	41803c <feof@plt+0x14f5c>
  416690:	b	41660c <feof@plt+0x1352c>
  416694:	ldr	x8, [x22]
  416698:	cbz	x8, 416640 <feof@plt+0x13560>
  41669c:	ldr	x24, [x8, #8]
  4166a0:	cbz	x24, 416640 <feof@plt+0x13560>
  4166a4:	ldr	x8, [x24, #32]
  4166a8:	cbz	x8, 4166e4 <feof@plt+0x13604>
  4166ac:	mov	x25, xzr
  4166b0:	ldr	w9, [x8, #4]
  4166b4:	cmp	x25, x9
  4166b8:	b.cs	4166e4 <feof@plt+0x13604>  // b.hs, b.nlast
  4166bc:	add	x8, x8, x25, lsl #3
  4166c0:	ldr	x8, [x8, #8]
  4166c4:	mov	x0, x19
  4166c8:	ldr	x1, [x8]
  4166cc:	bl	419e20 <feof@plt+0x16d40>
  4166d0:	mov	x0, x19
  4166d4:	bl	41a7a4 <feof@plt+0x176c4>
  4166d8:	ldr	x8, [x24, #32]
  4166dc:	add	x25, x25, #0x1
  4166e0:	cbnz	x8, 4166b0 <feof@plt+0x135d0>
  4166e4:	ldr	x1, [x24, #8]
  4166e8:	mov	x0, x19
  4166ec:	bl	419e20 <feof@plt+0x16d40>
  4166f0:	cmp	w23, w26
  4166f4:	b.ge	41660c <feof@plt+0x1352c>  // b.tcont
  4166f8:	b	416684 <feof@plt+0x135a4>
  4166fc:	tbnz	w21, #0, 41670c <feof@plt+0x1362c>
  416700:	mov	w1, #0xa                   	// #10
  416704:	mov	x0, x19
  416708:	bl	41803c <feof@plt+0x14f5c>
  41670c:	mov	w0, #0x1                   	// #1
  416710:	ldp	x20, x19, [sp, #80]
  416714:	ldp	x22, x21, [sp, #64]
  416718:	ldp	x24, x23, [sp, #48]
  41671c:	ldp	x26, x25, [sp, #32]
  416720:	ldr	x27, [sp, #16]
  416724:	ldp	x29, x30, [sp], #96
  416728:	ret
  41672c:	ldr	x0, [x20]
  416730:	str	wzr, [x20, #40]
  416734:	mov	w1, #0x1                   	// #1
  416738:	bl	41d7e0 <feof@plt+0x1a700>
  41673c:	cbz	x0, 4165e8 <feof@plt+0x13508>
  416740:	ldr	w8, [x20, #40]
  416744:	ldr	x0, [x20]
  416748:	add	w9, w8, #0x1
  41674c:	add	w1, w8, #0x2
  416750:	str	w9, [x20, #40]
  416754:	bl	41d7e0 <feof@plt+0x1a700>
  416758:	cbnz	x0, 416740 <feof@plt+0x13660>
  41675c:	b	4165e8 <feof@plt+0x13508>
  416760:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416764:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416768:	add	x0, x0, #0x9a0
  41676c:	add	x2, x2, #0xa5b
  416770:	mov	w1, #0x3d                  	// #61
  416774:	bl	40f560 <feof@plt+0xc480>
  416778:	stp	x29, x30, [sp, #-80]!
  41677c:	str	x25, [sp, #16]
  416780:	stp	x24, x23, [sp, #32]
  416784:	stp	x22, x21, [sp, #48]
  416788:	stp	x20, x19, [sp, #64]
  41678c:	mov	x29, sp
  416790:	add	x19, x0, #0x8
  416794:	mov	x22, x0
  416798:	mov	x0, x19
  41679c:	mov	w21, w1
  4167a0:	bl	417da4 <feof@plt+0x14cc4>
  4167a4:	ldr	x8, [x22, #8]
  4167a8:	cbz	x8, 4167c0 <feof@plt+0x136e0>
  4167ac:	ldr	x9, [x22, #16]
  4167b0:	ldr	w0, [x8]
  4167b4:	mov	w1, w21
  4167b8:	blr	x9
  4167bc:	cbz	w0, 4168c0 <feof@plt+0x137e0>
  4167c0:	mov	w0, #0x28                  	// #40
  4167c4:	bl	402d30 <_Znwm@plt>
  4167c8:	mov	x20, x0
  4167cc:	ldr	x0, [x22]
  4167d0:	movi	v0.2d, #0x0
  4167d4:	mov	x24, x20
  4167d8:	mov	w1, w21
  4167dc:	str	w21, [x20]
  4167e0:	str	q0, [x24, #8]!
  4167e4:	stur	q0, [x20, #24]
  4167e8:	bl	41d7e0 <feof@plt+0x1a700>
  4167ec:	cbz	x0, 416850 <feof@plt+0x13770>
  4167f0:	ldr	w8, [x20, #20]
  4167f4:	mov	x23, x0
  4167f8:	str	w1, [x20, #16]
  4167fc:	cmp	w8, w1
  416800:	b.le	41680c <feof@plt+0x1372c>
  416804:	ldr	x0, [x24]
  416808:	b	41682c <feof@plt+0x1374c>
  41680c:	ldr	x0, [x20, #8]
  416810:	lsl	w8, w1, #1
  416814:	add	w25, w8, #0x2
  416818:	sxtw	x1, w25
  41681c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  416820:	ldr	w1, [x20, #16]
  416824:	str	x0, [x20, #8]
  416828:	str	w25, [x20, #20]
  41682c:	sxtw	x2, w1
  416830:	mov	x1, x23
  416834:	bl	4029c0 <memcpy@plt>
  416838:	ldp	w8, w9, [x20, #16]
  41683c:	sxtw	x8, w8
  416840:	cmp	w8, w9
  416844:	b.ge	416940 <feof@plt+0x13860>  // b.tcont
  416848:	ldr	x9, [x24]
  41684c:	strb	wzr, [x9, x8]
  416850:	ldr	x8, [x24]
  416854:	cbz	x8, 4168a8 <feof@plt+0x137c8>
  416858:	mov	x0, x19
  41685c:	mov	w1, w21
  416860:	bl	417da4 <feof@plt+0x14cc4>
  416864:	ldr	x8, [x19]
  416868:	cbz	x8, 4168d4 <feof@plt+0x137f4>
  41686c:	ldr	x9, [x22, #16]
  416870:	ldr	w0, [x8]
  416874:	mov	w1, w21
  416878:	blr	x9
  41687c:	ldr	x24, [x22, #8]
  416880:	mov	w23, w0
  416884:	cbnz	w0, 4168dc <feof@plt+0x137fc>
  416888:	cbz	x24, 4168dc <feof@plt+0x137fc>
  41688c:	ldr	x8, [x22, #32]
  416890:	cbz	x8, 4168a0 <feof@plt+0x137c0>
  416894:	ldr	x0, [x24, #8]
  416898:	blr	x8
  41689c:	ldr	x24, [x19]
  4168a0:	str	x20, [x24, #8]
  4168a4:	b	416924 <feof@plt+0x13844>
  4168a8:	mov	x0, x20
  4168ac:	bl	417a5c <feof@plt+0x1497c>
  4168b0:	mov	x0, x20
  4168b4:	bl	402d00 <_ZdlPv@plt>
  4168b8:	mov	x20, xzr
  4168bc:	b	416924 <feof@plt+0x13844>
  4168c0:	ldr	x8, [x19]
  4168c4:	cbz	x8, 4167c0 <feof@plt+0x136e0>
  4168c8:	ldr	x20, [x8, #8]
  4168cc:	cbnz	x20, 416924 <feof@plt+0x13844>
  4168d0:	b	4167c0 <feof@plt+0x136e0>
  4168d4:	mov	w23, wzr
  4168d8:	mov	x24, xzr
  4168dc:	mov	w0, #0x28                  	// #40
  4168e0:	bl	402d30 <_Znwm@plt>
  4168e4:	str	w21, [x0]
  4168e8:	str	x20, [x0, #8]
  4168ec:	cbz	x24, 416908 <feof@plt+0x13828>
  4168f0:	tbnz	w23, #31, 416910 <feof@plt+0x13830>
  4168f4:	str	x24, [x0, #24]
  4168f8:	ldr	x8, [x24, #16]
  4168fc:	str	x8, [x0, #16]
  416900:	str	xzr, [x24, #16]
  416904:	b	416920 <feof@plt+0x13840>
  416908:	stp	xzr, xzr, [x0, #16]
  41690c:	b	416920 <feof@plt+0x13840>
  416910:	str	x24, [x0, #16]
  416914:	ldr	x8, [x24, #24]
  416918:	str	x8, [x0, #24]
  41691c:	str	xzr, [x24, #24]
  416920:	str	x0, [x19]
  416924:	mov	x0, x20
  416928:	ldp	x20, x19, [sp, #64]
  41692c:	ldp	x22, x21, [sp, #48]
  416930:	ldp	x24, x23, [sp, #32]
  416934:	ldr	x25, [sp, #16]
  416938:	ldp	x29, x30, [sp], #80
  41693c:	ret
  416940:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416944:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416948:	add	x0, x0, #0x9cc
  41694c:	add	x2, x2, #0x9ba
  416950:	mov	w1, #0x36b                 	// #875
  416954:	bl	40f560 <feof@plt+0xc480>
  416958:	stp	x29, x30, [sp, #-96]!
  41695c:	str	x27, [sp, #16]
  416960:	stp	x26, x25, [sp, #32]
  416964:	stp	x24, x23, [sp, #48]
  416968:	stp	x22, x21, [sp, #64]
  41696c:	stp	x20, x19, [sp, #80]
  416970:	mov	x29, sp
  416974:	mov	w21, w4
  416978:	mov	x23, x3
  41697c:	mov	w22, w2
  416980:	mov	w20, w1
  416984:	cmp	w4, #0x2
  416988:	mov	x19, x0
  41698c:	b.lt	416a10 <feof@plt+0x13930>  // b.tstop
  416990:	sxtw	x8, w21
  416994:	sub	x24, x8, #0x1
  416998:	ldrb	w8, [x23, x24]
  41699c:	cmp	w8, #0xa
  4169a0:	b.ne	416a10 <feof@plt+0x13930>  // b.any
  4169a4:	mov	w0, #0x10                  	// #16
  4169a8:	bl	402d30 <_Znwm@plt>
  4169ac:	mov	x20, x0
  4169b0:	mov	x0, x23
  4169b4:	mov	x1, x24
  4169b8:	bl	462364 <_obstack_memory_used@@Base+0xb9c>
  4169bc:	str	x0, [x20]
  4169c0:	str	w24, [x20, #8]
  4169c4:	ldr	x23, [x19, #32]
  4169c8:	cbz	x23, 416b08 <feof@plt+0x13a28>
  4169cc:	ldp	w8, w9, [x23]
  4169d0:	and	w0, w8, #0x7fffffff
  4169d4:	cmp	w0, w9
  4169d8:	b.ne	416ce8 <feof@plt+0x13c08>  // b.any
  4169dc:	tbnz	w8, #31, 416bf0 <feof@plt+0x13b10>
  4169e0:	add	w1, w0, #0x1
  4169e4:	bl	41bd34 <feof@plt+0x18c54>
  4169e8:	ldr	x8, [x19, #32]
  4169ec:	mov	w9, w0
  4169f0:	lsl	x9, x9, #3
  4169f4:	mov	w21, w0
  4169f8:	add	x1, x9, #0x8
  4169fc:	mov	w22, wzr
  416a00:	cbz	x8, 416e3c <feof@plt+0x13d5c>
  416a04:	ldr	w25, [x8, #4]
  416a08:	mov	w24, wzr
  416a0c:	b	416c20 <feof@plt+0x13b40>
  416a10:	ldr	x10, [x19, #24]
  416a14:	cbz	x10, 416aa4 <feof@plt+0x139c4>
  416a18:	ldr	w8, [x10, #4]
  416a1c:	cbz	w8, 416aa4 <feof@plt+0x139c4>
  416a20:	add	x9, x10, #0x8
  416a24:	mov	x11, xzr
  416a28:	add	x12, x10, #0x10
  416a2c:	mov	x13, x9
  416a30:	b	416a4c <feof@plt+0x1396c>
  416a34:	add	x11, x11, #0x1
  416a38:	cmp	x11, x8
  416a3c:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  416a40:	cmp	x8, x11
  416a44:	add	x12, x12, #0x8
  416a48:	b.eq	416a64 <feof@plt+0x13984>  // b.none
  416a4c:	ldr	w14, [x13]
  416a50:	cmp	w14, w20
  416a54:	b.gt	416a34 <feof@plt+0x13954>
  416a58:	ldr	w13, [x13, #4]
  416a5c:	add	w20, w13, w20
  416a60:	b	416a34 <feof@plt+0x13954>
  416a64:	cbz	w8, 416aa4 <feof@plt+0x139c4>
  416a68:	mov	x11, xzr
  416a6c:	add	x10, x10, #0x10
  416a70:	b	416a8c <feof@plt+0x139ac>
  416a74:	add	x11, x11, #0x1
  416a78:	cmp	x11, x8
  416a7c:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
  416a80:	cmp	x8, x11
  416a84:	add	x10, x10, #0x8
  416a88:	b.eq	416aa4 <feof@plt+0x139c4>  // b.none
  416a8c:	ldr	w12, [x9]
  416a90:	cmp	w12, w22
  416a94:	b.gt	416a74 <feof@plt+0x13994>
  416a98:	ldr	w9, [x9, #4]
  416a9c:	add	w22, w9, w22
  416aa0:	b	416a74 <feof@plt+0x13994>
  416aa4:	cmp	w20, #0x0
  416aa8:	b.le	416e54 <feof@plt+0x13d74>
  416aac:	cmp	w22, #0x0
  416ab0:	b.le	416e6c <feof@plt+0x13d8c>
  416ab4:	cmp	w20, w22
  416ab8:	b.le	416ac4 <feof@plt+0x139e4>
  416abc:	mov	w0, wzr
  416ac0:	b	416e20 <feof@plt+0x13d40>
  416ac4:	ldr	w8, [x19, #16]
  416ac8:	mov	w0, wzr
  416acc:	add	w9, w8, #0x1
  416ad0:	cmp	w20, w9
  416ad4:	b.gt	416e20 <feof@plt+0x13d40>
  416ad8:	cmp	w22, w9
  416adc:	b.gt	416e20 <feof@plt+0x13d40>
  416ae0:	sub	w24, w20, #0x1
  416ae4:	sub	w26, w22, #0x1
  416ae8:	ldr	w9, [x19, #20]
  416aec:	sub	w10, w24, w26
  416af0:	add	w10, w10, w21
  416af4:	add	w25, w10, w8
  416af8:	cmp	w9, w25
  416afc:	b.le	416b18 <feof@plt+0x13a38>
  416b00:	ldr	x0, [x19, #8]
  416b04:	b	416b38 <feof@plt+0x13a58>
  416b08:	mov	w22, wzr
  416b0c:	mov	w24, wzr
  416b10:	mov	w21, #0x4                   	// #4
  416b14:	b	416c0c <feof@plt+0x13b2c>
  416b18:	ldr	x0, [x19, #8]
  416b1c:	lsl	w8, w25, #1
  416b20:	add	w27, w8, #0x2
  416b24:	sxtw	x1, w27
  416b28:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  416b2c:	ldr	w8, [x19, #16]
  416b30:	str	x0, [x19, #8]
  416b34:	str	w27, [x19, #20]
  416b38:	cmp	w26, w8
  416b3c:	b.gt	416e84 <feof@plt+0x13da4>
  416b40:	add	x1, x0, w26, sxtw
  416b44:	add	x8, x0, w8, sxtw
  416b48:	sxtw	x26, w24
  416b4c:	sub	x2, x8, x1
  416b50:	add	x8, x0, x26
  416b54:	sxtw	x24, w21
  416b58:	add	x0, x8, x24
  416b5c:	bl	402e30 <memmove@plt>
  416b60:	ldr	x8, [x19, #8]
  416b64:	mov	x1, x23
  416b68:	mov	x2, x24
  416b6c:	add	x0, x8, x26
  416b70:	bl	4029c0 <memcpy@plt>
  416b74:	ldr	w8, [x19, #20]
  416b78:	str	w25, [x19, #16]
  416b7c:	cmp	w25, w8
  416b80:	b.ge	416e9c <feof@plt+0x13dbc>  // b.tcont
  416b84:	ldr	x8, [x19, #8]
  416b88:	strb	wzr, [x8, w25, sxtw]
  416b8c:	ldr	x24, [x19, #24]
  416b90:	add	w8, w20, w21
  416b94:	sub	w22, w8, w22
  416b98:	cbz	x24, 416be0 <feof@plt+0x13b00>
  416b9c:	ldp	w8, w9, [x24]
  416ba0:	and	w0, w8, #0x7fffffff
  416ba4:	cmp	w0, w9
  416ba8:	b.ne	416dfc <feof@plt+0x13d1c>  // b.any
  416bac:	tbnz	w8, #31, 416d04 <feof@plt+0x13c24>
  416bb0:	add	w1, w0, #0x1
  416bb4:	bl	41bd34 <feof@plt+0x18c54>
  416bb8:	ldr	x8, [x19, #24]
  416bbc:	mov	w9, w0
  416bc0:	lsl	x9, x9, #3
  416bc4:	mov	w21, w0
  416bc8:	add	x1, x9, #0x8
  416bcc:	mov	w23, wzr
  416bd0:	cbz	x8, 416e48 <feof@plt+0x13d68>
  416bd4:	ldr	w26, [x8, #4]
  416bd8:	mov	w25, wzr
  416bdc:	b	416d34 <feof@plt+0x13c54>
  416be0:	mov	w23, wzr
  416be4:	mov	w25, wzr
  416be8:	mov	w21, #0x4                   	// #4
  416bec:	b	416d20 <feof@plt+0x13c40>
  416bf0:	str	xzr, [x19, #32]
  416bf4:	ldr	w22, [x23, #4]
  416bf8:	mov	w8, #0x4                   	// #4
  416bfc:	mov	w24, #0x1                   	// #1
  416c00:	add	w9, w22, #0x1
  416c04:	cmp	w9, #0x4
  416c08:	csinc	w21, w8, w22, ls  // ls = plast
  416c0c:	mov	w9, w21
  416c10:	lsl	x9, x9, #3
  416c14:	mov	x8, xzr
  416c18:	mov	w25, wzr
  416c1c:	add	x1, x9, #0x8
  416c20:	mov	x0, x8
  416c24:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  416c28:	and	w8, w21, #0x7fffffff
  416c2c:	str	x0, [x19, #32]
  416c30:	stp	w8, w25, [x0]
  416c34:	cbz	w24, 416ce8 <feof@plt+0x13c08>
  416c38:	ldr	x11, [x19, #32]
  416c3c:	cbz	w22, 416ce4 <feof@plt+0x13c04>
  416c40:	sub	w12, w22, #0x1
  416c44:	add	x8, x23, #0x8
  416c48:	cmp	w12, #0x3
  416c4c:	add	x9, x11, #0x8
  416c50:	b.cs	416c5c <feof@plt+0x13b7c>  // b.hs, b.nlast
  416c54:	mov	w10, w22
  416c58:	b	416cd0 <feof@plt+0x13bf0>
  416c5c:	lsl	x10, x12, #3
  416c60:	add	x13, x23, x10
  416c64:	add	x13, x13, #0x10
  416c68:	cmp	x9, x13
  416c6c:	b.cs	416c84 <feof@plt+0x13ba4>  // b.hs, b.nlast
  416c70:	add	x10, x11, x10
  416c74:	add	x10, x10, #0x10
  416c78:	cmp	x8, x10
  416c7c:	mov	w10, w22
  416c80:	b.cc	416cd0 <feof@plt+0x13bf0>  // b.lo, b.ul, b.last
  416c84:	add	x12, x12, #0x1
  416c88:	and	x13, x12, #0x1fffffffc
  416c8c:	lsl	x8, x13, #3
  416c90:	add	x14, x11, #0x18
  416c94:	add	x9, x23, x8
  416c98:	add	x11, x11, x8
  416c9c:	sub	w10, w22, w13
  416ca0:	add	x8, x9, #0x8
  416ca4:	add	x9, x11, #0x8
  416ca8:	add	x11, x23, #0x18
  416cac:	mov	x15, x13
  416cb0:	ldp	q0, q1, [x11, #-16]
  416cb4:	subs	x15, x15, #0x4
  416cb8:	add	x11, x11, #0x20
  416cbc:	stp	q0, q1, [x14, #-16]
  416cc0:	add	x14, x14, #0x20
  416cc4:	b.ne	416cb0 <feof@plt+0x13bd0>  // b.any
  416cc8:	cmp	x12, x13
  416ccc:	b.eq	416ce0 <feof@plt+0x13c00>  // b.none
  416cd0:	ldr	x11, [x8], #8
  416cd4:	subs	w10, w10, #0x1
  416cd8:	str	x11, [x9], #8
  416cdc:	b.ne	416cd0 <feof@plt+0x13bf0>  // b.any
  416ce0:	ldr	x11, [x19, #32]
  416ce4:	str	w22, [x11, #4]
  416ce8:	ldr	x8, [x19, #32]
  416cec:	ldr	w9, [x8, #4]
  416cf0:	add	w10, w9, #0x1
  416cf4:	add	x9, x8, x9, lsl #3
  416cf8:	str	w10, [x8, #4]
  416cfc:	str	x20, [x9, #8]
  416d00:	b	416e1c <feof@plt+0x13d3c>
  416d04:	str	xzr, [x19, #24]
  416d08:	ldr	w23, [x24, #4]
  416d0c:	mov	w8, #0x4                   	// #4
  416d10:	mov	w25, #0x1                   	// #1
  416d14:	add	w9, w23, #0x1
  416d18:	cmp	w9, #0x4
  416d1c:	csinc	w21, w8, w23, ls  // ls = plast
  416d20:	mov	w9, w21
  416d24:	lsl	x9, x9, #3
  416d28:	mov	x8, xzr
  416d2c:	mov	w26, wzr
  416d30:	add	x1, x9, #0x8
  416d34:	mov	x0, x8
  416d38:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  416d3c:	and	w8, w21, #0x7fffffff
  416d40:	str	x0, [x19, #24]
  416d44:	stp	w8, w26, [x0]
  416d48:	cbz	w25, 416dfc <feof@plt+0x13d1c>
  416d4c:	ldr	x11, [x19, #24]
  416d50:	cbz	w23, 416df8 <feof@plt+0x13d18>
  416d54:	sub	w12, w23, #0x1
  416d58:	add	x8, x24, #0x8
  416d5c:	cmp	w12, #0x3
  416d60:	add	x9, x11, #0x8
  416d64:	b.cs	416d70 <feof@plt+0x13c90>  // b.hs, b.nlast
  416d68:	mov	w10, w23
  416d6c:	b	416de4 <feof@plt+0x13d04>
  416d70:	lsl	x10, x12, #3
  416d74:	add	x13, x24, x10
  416d78:	add	x13, x13, #0x10
  416d7c:	cmp	x9, x13
  416d80:	b.cs	416d98 <feof@plt+0x13cb8>  // b.hs, b.nlast
  416d84:	add	x10, x11, x10
  416d88:	add	x10, x10, #0x10
  416d8c:	cmp	x8, x10
  416d90:	mov	w10, w23
  416d94:	b.cc	416de4 <feof@plt+0x13d04>  // b.lo, b.ul, b.last
  416d98:	add	x12, x12, #0x1
  416d9c:	and	x13, x12, #0x1fffffffc
  416da0:	lsl	x8, x13, #3
  416da4:	add	x14, x11, #0x18
  416da8:	add	x9, x24, x8
  416dac:	add	x11, x11, x8
  416db0:	sub	w10, w23, w13
  416db4:	add	x8, x9, #0x8
  416db8:	add	x9, x11, #0x8
  416dbc:	add	x11, x24, #0x18
  416dc0:	mov	x15, x13
  416dc4:	ldp	q0, q1, [x11, #-16]
  416dc8:	subs	x15, x15, #0x4
  416dcc:	add	x11, x11, #0x20
  416dd0:	stp	q0, q1, [x14, #-16]
  416dd4:	add	x14, x14, #0x20
  416dd8:	b.ne	416dc4 <feof@plt+0x13ce4>  // b.any
  416ddc:	cmp	x12, x13
  416de0:	b.eq	416df4 <feof@plt+0x13d14>  // b.none
  416de4:	ldr	x11, [x8], #8
  416de8:	subs	w10, w10, #0x1
  416dec:	str	x11, [x9], #8
  416df0:	b.ne	416de4 <feof@plt+0x13d04>  // b.any
  416df4:	ldr	x11, [x19, #24]
  416df8:	str	w23, [x11, #4]
  416dfc:	ldr	x8, [x19, #24]
  416e00:	mov	w10, w20
  416e04:	bfi	x10, x22, #32, #32
  416e08:	ldr	w9, [x8, #4]
  416e0c:	add	w11, w9, #0x1
  416e10:	add	x9, x8, x9, lsl #3
  416e14:	str	w11, [x8, #4]
  416e18:	str	x10, [x9, #8]
  416e1c:	mov	w0, #0x1                   	// #1
  416e20:	ldp	x20, x19, [sp, #80]
  416e24:	ldp	x22, x21, [sp, #64]
  416e28:	ldp	x24, x23, [sp, #48]
  416e2c:	ldp	x26, x25, [sp, #32]
  416e30:	ldr	x27, [sp, #16]
  416e34:	ldp	x29, x30, [sp], #96
  416e38:	ret
  416e3c:	mov	w24, wzr
  416e40:	mov	w25, wzr
  416e44:	b	416c20 <feof@plt+0x13b40>
  416e48:	mov	w25, wzr
  416e4c:	mov	w26, wzr
  416e50:	b	416d34 <feof@plt+0x13c54>
  416e54:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416e58:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416e5c:	add	x0, x0, #0x9cc
  416e60:	add	x2, x2, #0xa4f
  416e64:	mov	w1, #0x2fa                 	// #762
  416e68:	bl	40f560 <feof@plt+0xc480>
  416e6c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416e70:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416e74:	add	x0, x0, #0x9cc
  416e78:	add	x2, x2, #0xa4f
  416e7c:	mov	w1, #0x2fb                 	// #763
  416e80:	bl	40f560 <feof@plt+0xc480>
  416e84:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416e88:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416e8c:	add	x0, x0, #0x9cc
  416e90:	add	x2, x2, #0xa4f
  416e94:	mov	w1, #0x30b                 	// #779
  416e98:	bl	40f560 <feof@plt+0xc480>
  416e9c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416ea0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416ea4:	add	x0, x0, #0x9cc
  416ea8:	add	x2, x2, #0x9ba
  416eac:	mov	w1, #0x36b                 	// #875
  416eb0:	bl	40f560 <feof@plt+0xc480>
  416eb4:	stp	x29, x30, [sp, #-48]!
  416eb8:	str	x21, [sp, #16]
  416ebc:	stp	x20, x19, [sp, #32]
  416ec0:	mov	x29, sp
  416ec4:	add	x19, x0, #0x8
  416ec8:	mov	x21, x0
  416ecc:	mov	x0, x19
  416ed0:	mov	w20, w1
  416ed4:	bl	417da4 <feof@plt+0x14cc4>
  416ed8:	ldr	x8, [x21, #8]
  416edc:	cbz	x8, 416ef4 <feof@plt+0x13e14>
  416ee0:	ldr	x9, [x21, #16]
  416ee4:	ldr	w0, [x8]
  416ee8:	mov	w1, w20
  416eec:	blr	x9
  416ef0:	cbz	w0, 416f08 <feof@plt+0x13e28>
  416ef4:	mov	x0, xzr
  416ef8:	ldp	x20, x19, [sp, #32]
  416efc:	ldr	x21, [sp, #16]
  416f00:	ldp	x29, x30, [sp], #48
  416f04:	ret
  416f08:	ldr	x8, [x19]
  416f0c:	cbz	x8, 416ef4 <feof@plt+0x13e14>
  416f10:	ldr	x0, [x8, #8]
  416f14:	b	416ef8 <feof@plt+0x13e18>
  416f18:	ldr	x9, [x0, #24]
  416f1c:	mov	w0, w1
  416f20:	cbz	x9, 416f68 <feof@plt+0x13e88>
  416f24:	ldr	w8, [x9, #4]
  416f28:	cbz	w8, 416f68 <feof@plt+0x13e88>
  416f2c:	add	x11, x9, #0x8
  416f30:	add	x9, x9, #0x10
  416f34:	mov	w10, #0x1                   	// #1
  416f38:	b	416f50 <feof@plt+0x13e70>
  416f3c:	cmp	x10, x8
  416f40:	csel	x11, x9, xzr, cc  // cc = lo, ul, last
  416f44:	add	x9, x9, #0x8
  416f48:	add	x10, x10, #0x1
  416f4c:	b.cs	416f68 <feof@plt+0x13e88>  // b.hs, b.nlast
  416f50:	ldr	w12, [x11]
  416f54:	cmp	w12, w0
  416f58:	b.gt	416f3c <feof@plt+0x13e5c>
  416f5c:	ldr	w11, [x11, #4]
  416f60:	add	w0, w11, w0
  416f64:	b	416f3c <feof@plt+0x13e5c>
  416f68:	ret
  416f6c:	stp	x29, x30, [sp, #-32]!
  416f70:	stp	x20, x19, [sp, #16]
  416f74:	mov	x29, sp
  416f78:	cbz	x1, 416fe4 <feof@plt+0x13f04>
  416f7c:	ldr	w8, [x0, #40]
  416f80:	mov	x20, x1
  416f84:	mov	x19, x0
  416f88:	cmn	w8, #0x1
  416f8c:	b.eq	416fb0 <feof@plt+0x13ed0>  // b.none
  416f90:	ldr	x0, [x19]
  416f94:	bl	41db40 <feof@plt+0x1aa60>
  416f98:	and	w8, w0, #0x1
  416f9c:	strb	w8, [x20]
  416fa0:	ldr	w0, [x19, #40]
  416fa4:	ldp	x20, x19, [sp, #16]
  416fa8:	ldp	x29, x30, [sp], #32
  416fac:	ret
  416fb0:	ldr	x0, [x19]
  416fb4:	str	wzr, [x19, #40]
  416fb8:	mov	w1, #0x1                   	// #1
  416fbc:	bl	41d7e0 <feof@plt+0x1a700>
  416fc0:	cbz	x0, 416f90 <feof@plt+0x13eb0>
  416fc4:	ldr	w8, [x19, #40]
  416fc8:	ldr	x0, [x19]
  416fcc:	add	w9, w8, #0x1
  416fd0:	add	w1, w8, #0x2
  416fd4:	str	w9, [x19, #40]
  416fd8:	bl	41d7e0 <feof@plt+0x1a700>
  416fdc:	cbnz	x0, 416fc4 <feof@plt+0x13ee4>
  416fe0:	b	416f90 <feof@plt+0x13eb0>
  416fe4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  416fe8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  416fec:	add	x0, x0, #0x9cc
  416ff0:	add	x2, x2, #0xa41
  416ff4:	mov	w1, #0x296                 	// #662
  416ff8:	bl	40f560 <feof@plt+0xc480>
  416ffc:	stp	x29, x30, [sp, #-48]!
  417000:	str	x21, [sp, #16]
  417004:	stp	x20, x19, [sp, #32]
  417008:	mov	x29, sp
  41700c:	ldr	x8, [x0, #32]
  417010:	mov	x19, x0
  417014:	mov	x20, x1
  417018:	cbz	x8, 417054 <feof@plt+0x13f74>
  41701c:	mov	x21, xzr
  417020:	ldr	w9, [x8, #4]
  417024:	cmp	x21, x9
  417028:	b.cs	417054 <feof@plt+0x13f74>  // b.hs, b.nlast
  41702c:	add	x8, x8, x21, lsl #3
  417030:	ldr	x8, [x8, #8]
  417034:	mov	x0, x20
  417038:	ldr	x1, [x8]
  41703c:	bl	419e20 <feof@plt+0x16d40>
  417040:	mov	x0, x20
  417044:	bl	41a7a4 <feof@plt+0x176c4>
  417048:	ldr	x8, [x19, #32]
  41704c:	add	x21, x21, #0x1
  417050:	cbnz	x8, 417020 <feof@plt+0x13f40>
  417054:	ldr	x1, [x19, #8]
  417058:	mov	x0, x20
  41705c:	ldp	x20, x19, [sp, #32]
  417060:	ldr	x21, [sp, #16]
  417064:	ldp	x29, x30, [sp], #48
  417068:	b	419e20 <feof@plt+0x16d40>
  41706c:	stp	x29, x30, [sp, #-96]!
  417070:	stp	x28, x27, [sp, #16]
  417074:	stp	x26, x25, [sp, #32]
  417078:	stp	x24, x23, [sp, #48]
  41707c:	stp	x22, x21, [sp, #64]
  417080:	stp	x20, x19, [sp, #80]
  417084:	mov	x29, sp
  417088:	mov	x19, x1
  41708c:	mov	x20, x0
  417090:	tbz	w2, #0, 4170f0 <feof@plt+0x14010>
  417094:	ldrb	w0, [x19, #67]
  417098:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41709c:	add	x1, x1, #0x805
  4170a0:	mov	w2, #0xd                   	// #13
  4170a4:	bl	41260c <feof@plt+0xf52c>
  4170a8:	mov	x1, x0
  4170ac:	mov	x0, x19
  4170b0:	bl	419e20 <feof@plt+0x16d40>
  4170b4:	ldr	x2, [x20]
  4170b8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4170bc:	add	x1, x1, #0xa01
  4170c0:	mov	x0, x19
  4170c4:	bl	41a658 <feof@plt+0x17578>
  4170c8:	ldr	x2, [x20]
  4170cc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4170d0:	add	x1, x1, #0xa09
  4170d4:	mov	x0, x19
  4170d8:	bl	41a658 <feof@plt+0x17578>
  4170dc:	ldrb	w0, [x19, #67]
  4170e0:	bl	412690 <feof@plt+0xf5b0>
  4170e4:	mov	x1, x0
  4170e8:	mov	x0, x19
  4170ec:	bl	419e20 <feof@plt+0x16d40>
  4170f0:	mov	x21, x20
  4170f4:	ldr	x8, [x21, #8]!
  4170f8:	cbz	x8, 417110 <feof@plt+0x14030>
  4170fc:	mov	x9, x8
  417100:	ldr	x8, [x8, #16]
  417104:	cbnz	x8, 4170fc <feof@plt+0x1401c>
  417108:	ldr	x28, [x9, #8]
  41710c:	b	417114 <feof@plt+0x14034>
  417110:	mov	x28, xzr
  417114:	ldr	w8, [x20, #40]
  417118:	cmn	w8, #0x1
  41711c:	b.eq	4172a4 <feof@plt+0x141c4>  // b.none
  417120:	ldr	x0, [x20]
  417124:	bl	41db40 <feof@plt+0x1aa60>
  417128:	cbz	x28, 417288 <feof@plt+0x141a8>
  41712c:	ldr	w25, [x20, #40]
  417130:	ldr	x8, [x20, #8]
  417134:	mov	w24, wzr
  417138:	mov	w27, #0x2                   	// #2
  41713c:	b	417154 <feof@plt+0x14074>
  417140:	mov	x9, x8
  417144:	cbz	x8, 417288 <feof@plt+0x141a8>
  417148:	ldr	x28, [x9, #8]
  41714c:	add	w24, w22, w24
  417150:	cbz	x28, 417288 <feof@plt+0x141a8>
  417154:	ldr	w23, [x28]
  417158:	mov	w9, #0x4                   	// #4
  41715c:	cmp	w23, #0x4
  417160:	csel	w9, w23, w9, gt
  417164:	sub	w22, w9, #0x3
  417168:	b	41718c <feof@plt+0x140ac>
  41716c:	ldr	w10, [x10, #4]
  417170:	cmp	w10, #0x0
  417174:	cinc	w10, w27, ne  // ne = any
  417178:	add	w9, w10, w9
  41717c:	ldr	w23, [x28]
  417180:	sub	w10, w23, #0x3
  417184:	cmp	w9, w10
  417188:	b.lt	4171f8 <feof@plt+0x14118>  // b.tstop
  41718c:	mov	x26, x28
  417190:	cbz	x8, 4171f8 <feof@plt+0x14118>
  417194:	mov	x0, x21
  417198:	mov	w1, w23
  41719c:	bl	417da4 <feof@plt+0x14cc4>
  4171a0:	ldp	x8, x9, [x20, #8]
  4171a4:	mov	w1, w23
  4171a8:	ldr	w0, [x8]
  4171ac:	blr	x9
  4171b0:	ldr	x8, [x20, #8]
  4171b4:	cmp	w0, #0x0
  4171b8:	b.le	4171c8 <feof@plt+0x140e8>
  4171bc:	mov	x10, x8
  4171c0:	cbnz	x8, 4171dc <feof@plt+0x140fc>
  4171c4:	b	4171f8 <feof@plt+0x14118>
  4171c8:	ldr	x9, [x8, #24]
  4171cc:	cbz	x9, 4171f8 <feof@plt+0x14118>
  4171d0:	mov	x10, x9
  4171d4:	ldr	x9, [x9, #16]
  4171d8:	cbnz	x9, 4171d0 <feof@plt+0x140f0>
  4171dc:	ldr	x28, [x10, #8]
  4171e0:	cbz	x28, 4171f8 <feof@plt+0x14118>
  4171e4:	ldr	x10, [x26, #24]
  4171e8:	ldr	w9, [x26]
  4171ec:	cbnz	x10, 41716c <feof@plt+0x1408c>
  4171f0:	add	w9, w9, #0x2
  4171f4:	b	41717c <feof@plt+0x1409c>
  4171f8:	ldr	x9, [x26, #24]
  4171fc:	ldr	w8, [x26]
  417200:	cbz	x9, 417218 <feof@plt+0x14138>
  417204:	ldr	w9, [x9, #4]
  417208:	cmp	w9, #0x0
  41720c:	cinc	w9, w27, ne  // ne = any
  417210:	add	w8, w9, w8
  417214:	b	41721c <feof@plt+0x1413c>
  417218:	add	w8, w8, #0x2
  41721c:	cmp	w8, w25
  417220:	csel	w3, w25, w8, gt
  417224:	add	w4, w22, w24
  417228:	mov	x0, x20
  41722c:	mov	x1, x19
  417230:	mov	w2, w22
  417234:	bl	4172d8 <feof@plt+0x141f8>
  417238:	ldr	x8, [x20, #8]
  41723c:	cbz	x8, 417288 <feof@plt+0x141a8>
  417240:	ldr	w23, [x26]
  417244:	mov	w22, w0
  417248:	mov	x0, x21
  41724c:	mov	w1, w23
  417250:	bl	417da4 <feof@plt+0x14cc4>
  417254:	ldp	x8, x9, [x20, #8]
  417258:	mov	w1, w23
  41725c:	ldr	w0, [x8]
  417260:	blr	x9
  417264:	ldr	x8, [x20, #8]
  417268:	cmp	w0, #0x0
  41726c:	b.gt	417140 <feof@plt+0x14060>
  417270:	ldr	x10, [x8, #24]
  417274:	cbz	x10, 417288 <feof@plt+0x141a8>
  417278:	mov	x9, x10
  41727c:	ldr	x10, [x10, #16]
  417280:	cbnz	x10, 417278 <feof@plt+0x14198>
  417284:	b	417148 <feof@plt+0x14068>
  417288:	ldp	x20, x19, [sp, #80]
  41728c:	ldp	x22, x21, [sp, #64]
  417290:	ldp	x24, x23, [sp, #48]
  417294:	ldp	x26, x25, [sp, #32]
  417298:	ldp	x28, x27, [sp, #16]
  41729c:	ldp	x29, x30, [sp], #96
  4172a0:	ret
  4172a4:	ldr	x0, [x20]
  4172a8:	str	wzr, [x20, #40]
  4172ac:	mov	w1, #0x1                   	// #1
  4172b0:	bl	41d7e0 <feof@plt+0x1a700>
  4172b4:	cbz	x0, 417120 <feof@plt+0x14040>
  4172b8:	ldr	w8, [x20, #40]
  4172bc:	ldr	x0, [x20]
  4172c0:	add	w9, w8, #0x1
  4172c4:	add	w1, w8, #0x2
  4172c8:	str	w9, [x20, #40]
  4172cc:	bl	41d7e0 <feof@plt+0x1a700>
  4172d0:	cbnz	x0, 4172b8 <feof@plt+0x141d8>
  4172d4:	b	417120 <feof@plt+0x14040>
  4172d8:	stp	x29, x30, [sp, #-96]!
  4172dc:	str	x27, [sp, #16]
  4172e0:	stp	x26, x25, [sp, #32]
  4172e4:	stp	x24, x23, [sp, #48]
  4172e8:	stp	x22, x21, [sp, #64]
  4172ec:	stp	x20, x19, [sp, #80]
  4172f0:	mov	x29, sp
  4172f4:	subs	w8, w3, w2
  4172f8:	mov	w25, w4
  4172fc:	mov	w19, w3
  417300:	mov	w24, w2
  417304:	mov	x20, x1
  417308:	mov	x21, x0
  41730c:	add	w22, w8, #0x1
  417310:	mov	w23, wzr
  417314:	b.ge	417394 <feof@plt+0x142b4>  // b.tcont
  417318:	ldrb	w0, [x20, #67]
  41731c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  417320:	add	x1, x1, #0x813
  417324:	mov	w2, #0x9                   	// #9
  417328:	bl	41260c <feof@plt+0xf52c>
  41732c:	mov	x1, x0
  417330:	mov	x0, x20
  417334:	bl	419e20 <feof@plt+0x16d40>
  417338:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41733c:	add	x1, x1, #0xa11
  417340:	mov	x0, x20
  417344:	mov	w2, w24
  417348:	mov	w3, w22
  41734c:	mov	w4, w25
  417350:	mov	w5, w23
  417354:	bl	41a658 <feof@plt+0x17578>
  417358:	ldrb	w0, [x20, #67]
  41735c:	bl	412690 <feof@plt+0xf5b0>
  417360:	mov	x1, x0
  417364:	mov	x0, x20
  417368:	bl	419e20 <feof@plt+0x16d40>
  41736c:	cmp	w19, w24
  417370:	b.ge	417400 <feof@plt+0x14320>  // b.tcont
  417374:	sub	w0, w23, w22
  417378:	ldp	x20, x19, [sp, #80]
  41737c:	ldp	x22, x21, [sp, #64]
  417380:	ldp	x24, x23, [sp, #48]
  417384:	ldp	x26, x25, [sp, #32]
  417388:	ldr	x27, [sp, #16]
  41738c:	ldp	x29, x30, [sp], #96
  417390:	ret
  417394:	add	x26, x21, #0x8
  417398:	mov	w27, w24
  41739c:	mov	x0, x26
  4173a0:	mov	w1, w27
  4173a4:	bl	417da4 <feof@plt+0x14cc4>
  4173a8:	ldr	x8, [x26]
  4173ac:	cbz	x8, 4173c4 <feof@plt+0x142e4>
  4173b0:	ldr	x9, [x21, #16]
  4173b4:	ldr	w0, [x8]
  4173b8:	mov	w1, w27
  4173bc:	blr	x9
  4173c0:	cbz	w0, 4173dc <feof@plt+0x142fc>
  4173c4:	mov	w8, #0x1                   	// #1
  4173c8:	cmp	w27, w19
  4173cc:	add	w27, w27, #0x1
  4173d0:	add	w23, w8, w23
  4173d4:	b.lt	41739c <feof@plt+0x142bc>  // b.tstop
  4173d8:	b	417318 <feof@plt+0x14238>
  4173dc:	ldr	x8, [x26]
  4173e0:	cbz	x8, 4173c4 <feof@plt+0x142e4>
  4173e4:	ldr	x8, [x8, #8]
  4173e8:	cbz	x8, 4173c4 <feof@plt+0x142e4>
  4173ec:	ldr	x8, [x8, #32]
  4173f0:	cbz	x8, 4173c4 <feof@plt+0x142e4>
  4173f4:	ldr	w8, [x8, #4]
  4173f8:	add	w8, w8, #0x1
  4173fc:	b	4173c8 <feof@plt+0x142e8>
  417400:	add	x25, x21, #0x8
  417404:	mov	x0, x25
  417408:	mov	w1, w24
  41740c:	bl	417da4 <feof@plt+0x14cc4>
  417410:	ldr	x8, [x25]
  417414:	cbz	x8, 41742c <feof@plt+0x1434c>
  417418:	ldr	x9, [x21, #16]
  41741c:	ldr	w0, [x8]
  417420:	mov	w1, w24
  417424:	blr	x9
  417428:	cbz	w0, 41748c <feof@plt+0x143ac>
  41742c:	ldr	x0, [x21]
  417430:	mov	w1, w24
  417434:	bl	41d7e0 <feof@plt+0x1a700>
  417438:	mov	x26, x0
  41743c:	mov	x27, x1
  417440:	mov	w1, #0x20                  	// #32
  417444:	mov	x0, x20
  417448:	bl	41803c <feof@plt+0x14f5c>
  41744c:	cmp	w27, #0x1
  417450:	b.lt	41746c <feof@plt+0x1438c>  // b.tstop
  417454:	and	x27, x27, #0xffffffff
  417458:	ldrb	w1, [x26], #1
  41745c:	mov	x0, x20
  417460:	bl	41803c <feof@plt+0x14f5c>
  417464:	subs	x27, x27, #0x1
  417468:	b.ne	417458 <feof@plt+0x14378>  // b.any
  41746c:	mov	w1, #0xa                   	// #10
  417470:	mov	x0, x20
  417474:	bl	41803c <feof@plt+0x14f5c>
  417478:	add	w26, w24, #0x1
  41747c:	cmp	w26, w19
  417480:	mov	w24, w26
  417484:	b.le	417404 <feof@plt+0x14324>
  417488:	b	417374 <feof@plt+0x14294>
  41748c:	ldr	x8, [x25]
  417490:	cbz	x8, 41742c <feof@plt+0x1434c>
  417494:	ldr	x8, [x8, #8]
  417498:	cbz	x8, 41742c <feof@plt+0x1434c>
  41749c:	mov	x0, x25
  4174a0:	mov	w1, w24
  4174a4:	bl	417da4 <feof@plt+0x14cc4>
  4174a8:	ldr	x8, [x25]
  4174ac:	mov	w26, w24
  4174b0:	cbz	x8, 4174f4 <feof@plt+0x14414>
  4174b4:	mov	w26, w24
  4174b8:	ldr	x9, [x21, #16]
  4174bc:	ldr	w0, [x8]
  4174c0:	mov	w1, w26
  4174c4:	blr	x9
  4174c8:	cbnz	w0, 4174f4 <feof@plt+0x14414>
  4174cc:	ldr	x8, [x25]
  4174d0:	cbz	x8, 4174f4 <feof@plt+0x14414>
  4174d4:	ldr	x8, [x8, #8]
  4174d8:	cbz	x8, 4174f4 <feof@plt+0x14414>
  4174dc:	add	w26, w26, #0x1
  4174e0:	mov	x0, x25
  4174e4:	mov	w1, w26
  4174e8:	bl	417da4 <feof@plt+0x14cc4>
  4174ec:	ldr	x8, [x25]
  4174f0:	cbnz	x8, 4174b8 <feof@plt+0x143d8>
  4174f4:	sub	w3, w26, #0x1
  4174f8:	mov	x0, x21
  4174fc:	mov	x1, x20
  417500:	mov	w2, w24
  417504:	bl	4175bc <feof@plt+0x144dc>
  417508:	b	41747c <feof@plt+0x1439c>
  41750c:	stp	x29, x30, [sp, #-64]!
  417510:	str	x23, [sp, #16]
  417514:	stp	x22, x21, [sp, #32]
  417518:	stp	x20, x19, [sp, #48]
  41751c:	mov	x29, sp
  417520:	cmp	w1, w2
  417524:	b.le	417544 <feof@plt+0x14464>
  417528:	mov	w20, wzr
  41752c:	mov	w0, w20
  417530:	ldp	x20, x19, [sp, #48]
  417534:	ldp	x22, x21, [sp, #32]
  417538:	ldr	x23, [sp, #16]
  41753c:	ldp	x29, x30, [sp], #64
  417540:	ret
  417544:	mov	w19, w2
  417548:	mov	w22, w1
  41754c:	mov	x21, x0
  417550:	mov	w20, wzr
  417554:	add	x23, x0, #0x8
  417558:	mov	x0, x23
  41755c:	mov	w1, w22
  417560:	bl	417da4 <feof@plt+0x14cc4>
  417564:	ldr	x8, [x23]
  417568:	cbz	x8, 417580 <feof@plt+0x144a0>
  41756c:	ldr	x9, [x21, #16]
  417570:	ldr	w0, [x8]
  417574:	mov	w1, w22
  417578:	blr	x9
  41757c:	cbz	w0, 417598 <feof@plt+0x144b8>
  417580:	mov	w8, #0x1                   	// #1
  417584:	cmp	w22, w19
  417588:	add	w22, w22, #0x1
  41758c:	add	w20, w8, w20
  417590:	b.lt	417558 <feof@plt+0x14478>  // b.tstop
  417594:	b	41752c <feof@plt+0x1444c>
  417598:	ldr	x8, [x23]
  41759c:	cbz	x8, 417580 <feof@plt+0x144a0>
  4175a0:	ldr	x8, [x8, #8]
  4175a4:	cbz	x8, 417580 <feof@plt+0x144a0>
  4175a8:	ldr	x8, [x8, #32]
  4175ac:	cbz	x8, 417580 <feof@plt+0x144a0>
  4175b0:	ldr	w8, [x8, #4]
  4175b4:	add	w8, w8, #0x1
  4175b8:	b	417584 <feof@plt+0x144a4>
  4175bc:	stp	x29, x30, [sp, #-80]!
  4175c0:	stp	x26, x25, [sp, #16]
  4175c4:	stp	x24, x23, [sp, #32]
  4175c8:	stp	x22, x21, [sp, #48]
  4175cc:	stp	x20, x19, [sp, #64]
  4175d0:	mov	x29, sp
  4175d4:	ldrb	w8, [x1, #67]
  4175d8:	mov	x19, x1
  4175dc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4175e0:	mov	w21, w2
  4175e4:	mov	x22, x0
  4175e8:	add	x1, x1, #0x81d
  4175ec:	mov	w2, #0xb                   	// #11
  4175f0:	mov	w0, w8
  4175f4:	mov	w20, w3
  4175f8:	bl	41260c <feof@plt+0xf52c>
  4175fc:	mov	x1, x0
  417600:	mov	x0, x19
  417604:	bl	419e20 <feof@plt+0x16d40>
  417608:	cmp	w21, w20
  41760c:	b.le	417648 <feof@plt+0x14568>
  417610:	ldrb	w0, [x19, #67]
  417614:	bl	412690 <feof@plt+0xf5b0>
  417618:	mov	x1, x0
  41761c:	mov	x0, x19
  417620:	bl	419e20 <feof@plt+0x16d40>
  417624:	ldrb	w0, [x19, #67]
  417628:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41762c:	add	x1, x1, #0x829
  417630:	mov	w2, #0xb                   	// #11
  417634:	bl	41260c <feof@plt+0xf52c>
  417638:	mov	x1, x0
  41763c:	mov	x0, x19
  417640:	bl	419e20 <feof@plt+0x16d40>
  417644:	b	417784 <feof@plt+0x146a4>
  417648:	add	x23, x22, #0x8
  41764c:	mov	w24, w21
  417650:	b	41766c <feof@plt+0x1458c>
  417654:	mov	w1, #0xa                   	// #10
  417658:	mov	x0, x19
  41765c:	bl	41803c <feof@plt+0x14f5c>
  417660:	cmp	w24, w20
  417664:	add	w24, w24, #0x1
  417668:	b.ge	4176f8 <feof@plt+0x14618>  // b.tcont
  41766c:	mov	x0, x23
  417670:	mov	w1, w24
  417674:	bl	417da4 <feof@plt+0x14cc4>
  417678:	ldr	x8, [x23]
  41767c:	cbz	x8, 4177ac <feof@plt+0x146cc>
  417680:	ldr	x9, [x22, #16]
  417684:	ldr	w0, [x8]
  417688:	mov	w1, w24
  41768c:	blr	x9
  417690:	cbnz	w0, 4177ac <feof@plt+0x146cc>
  417694:	ldr	x8, [x23]
  417698:	cbz	x8, 4177ac <feof@plt+0x146cc>
  41769c:	ldr	x8, [x8, #8]
  4176a0:	cbz	x8, 4177ac <feof@plt+0x146cc>
  4176a4:	ldr	x8, [x8, #24]
  4176a8:	cbz	x8, 417660 <feof@plt+0x14580>
  4176ac:	ldr	w8, [x8, #4]
  4176b0:	cbz	w8, 417660 <feof@plt+0x14580>
  4176b4:	ldr	x0, [x22]
  4176b8:	mov	w1, w24
  4176bc:	bl	41d7e0 <feof@plt+0x1a700>
  4176c0:	mov	x25, x0
  4176c4:	mov	x26, x1
  4176c8:	mov	w1, #0x2d                  	// #45
  4176cc:	mov	x0, x19
  4176d0:	bl	41803c <feof@plt+0x14f5c>
  4176d4:	cmp	w26, #0x1
  4176d8:	b.lt	417654 <feof@plt+0x14574>  // b.tstop
  4176dc:	and	x26, x26, #0xffffffff
  4176e0:	ldrb	w1, [x25], #1
  4176e4:	mov	x0, x19
  4176e8:	bl	41803c <feof@plt+0x14f5c>
  4176ec:	subs	x26, x26, #0x1
  4176f0:	b.ne	4176e0 <feof@plt+0x14600>  // b.any
  4176f4:	b	417654 <feof@plt+0x14574>
  4176f8:	ldrb	w0, [x19, #67]
  4176fc:	bl	412690 <feof@plt+0xf5b0>
  417700:	mov	x1, x0
  417704:	mov	x0, x19
  417708:	bl	419e20 <feof@plt+0x16d40>
  41770c:	ldrb	w0, [x19, #67]
  417710:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  417714:	add	x1, x1, #0x829
  417718:	mov	w2, #0xb                   	// #11
  41771c:	bl	41260c <feof@plt+0xf52c>
  417720:	mov	x1, x0
  417724:	mov	x0, x19
  417728:	bl	419e20 <feof@plt+0x16d40>
  41772c:	cmp	w21, w20
  417730:	b.gt	417784 <feof@plt+0x146a4>
  417734:	add	x23, x22, #0x8
  417738:	mov	x0, x23
  41773c:	mov	w1, w21
  417740:	bl	417da4 <feof@plt+0x14cc4>
  417744:	ldr	x8, [x23]
  417748:	cbz	x8, 4177c4 <feof@plt+0x146e4>
  41774c:	ldr	x9, [x22, #16]
  417750:	ldr	w0, [x8]
  417754:	mov	w1, w21
  417758:	blr	x9
  41775c:	cbnz	w0, 4177c4 <feof@plt+0x146e4>
  417760:	ldr	x8, [x23]
  417764:	cbz	x8, 4177c4 <feof@plt+0x146e4>
  417768:	ldr	x0, [x8, #8]
  41776c:	cbz	x0, 4177c4 <feof@plt+0x146e4>
  417770:	mov	x1, x19
  417774:	bl	4177dc <feof@plt+0x146fc>
  417778:	cmp	w21, w20
  41777c:	add	w21, w21, #0x1
  417780:	b.lt	417738 <feof@plt+0x14658>  // b.tstop
  417784:	ldrb	w0, [x19, #67]
  417788:	bl	412690 <feof@plt+0xf5b0>
  41778c:	mov	x1, x0
  417790:	mov	x0, x19
  417794:	ldp	x20, x19, [sp, #64]
  417798:	ldp	x22, x21, [sp, #48]
  41779c:	ldp	x24, x23, [sp, #32]
  4177a0:	ldp	x26, x25, [sp, #16]
  4177a4:	ldp	x29, x30, [sp], #80
  4177a8:	b	419e20 <feof@plt+0x16d40>
  4177ac:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4177b0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4177b4:	add	x0, x0, #0x9cc
  4177b8:	add	x2, x2, #0xa26
  4177bc:	mov	w1, #0x239                 	// #569
  4177c0:	bl	40f560 <feof@plt+0xc480>
  4177c4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4177c8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4177cc:	add	x0, x0, #0x9cc
  4177d0:	add	x2, x2, #0xa26
  4177d4:	mov	w1, #0x24b                 	// #587
  4177d8:	bl	40f560 <feof@plt+0xc480>
  4177dc:	stp	x29, x30, [sp, #-64]!
  4177e0:	str	x23, [sp, #16]
  4177e4:	stp	x22, x21, [sp, #32]
  4177e8:	stp	x20, x19, [sp, #48]
  4177ec:	mov	x29, sp
  4177f0:	ldr	x8, [x0, #32]
  4177f4:	mov	x20, x0
  4177f8:	mov	x19, x1
  4177fc:	cbz	x8, 417868 <feof@plt+0x14788>
  417800:	mov	w21, wzr
  417804:	b	417820 <feof@plt+0x14740>
  417808:	mov	w1, #0xa                   	// #10
  41780c:	mov	x0, x19
  417810:	bl	41803c <feof@plt+0x14f5c>
  417814:	ldr	x8, [x20, #32]
  417818:	add	w21, w21, #0x1
  41781c:	cbz	x8, 417868 <feof@plt+0x14788>
  417820:	ldr	w9, [x8, #4]
  417824:	cmp	w9, w21
  417828:	b.ls	417868 <feof@plt+0x14788>  // b.plast
  41782c:	add	x8, x8, w21, uxtw #3
  417830:	ldr	x8, [x8, #8]
  417834:	mov	w1, #0x2b                  	// #43
  417838:	mov	x0, x19
  41783c:	ldr	x22, [x8]
  417840:	ldr	w23, [x8, #8]
  417844:	bl	41803c <feof@plt+0x14f5c>
  417848:	cmp	w23, #0x1
  41784c:	b.lt	417808 <feof@plt+0x14728>  // b.tstop
  417850:	ldrb	w1, [x22], #1
  417854:	mov	x0, x19
  417858:	bl	41803c <feof@plt+0x14f5c>
  41785c:	subs	x23, x23, #0x1
  417860:	b.ne	417850 <feof@plt+0x14770>  // b.any
  417864:	b	417808 <feof@plt+0x14728>
  417868:	ldr	x8, [x20, #24]
  41786c:	cbz	x8, 4178ac <feof@plt+0x147cc>
  417870:	ldr	w8, [x8, #4]
  417874:	ldr	x21, [x20, #8]
  417878:	ldr	w20, [x20, #16]
  41787c:	cbz	w8, 4178b4 <feof@plt+0x147d4>
  417880:	mov	w1, #0x2b                  	// #43
  417884:	mov	x0, x19
  417888:	bl	41803c <feof@plt+0x14f5c>
  41788c:	cmp	w20, #0x1
  417890:	b.lt	4178e0 <feof@plt+0x14800>  // b.tstop
  417894:	ldrb	w1, [x21], #1
  417898:	mov	x0, x19
  41789c:	bl	41803c <feof@plt+0x14f5c>
  4178a0:	subs	x20, x20, #0x1
  4178a4:	b.ne	417894 <feof@plt+0x147b4>  // b.any
  4178a8:	b	4178e0 <feof@plt+0x14800>
  4178ac:	ldr	x21, [x20, #8]
  4178b0:	ldr	w20, [x20, #16]
  4178b4:	mov	w1, #0x20                  	// #32
  4178b8:	mov	x0, x19
  4178bc:	bl	41803c <feof@plt+0x14f5c>
  4178c0:	cmp	w20, #0x1
  4178c4:	b.lt	4178e0 <feof@plt+0x14800>  // b.tstop
  4178c8:	mov	w20, w20
  4178cc:	ldrb	w1, [x21], #1
  4178d0:	mov	x0, x19
  4178d4:	bl	41803c <feof@plt+0x14f5c>
  4178d8:	subs	x20, x20, #0x1
  4178dc:	b.ne	4178cc <feof@plt+0x147ec>  // b.any
  4178e0:	mov	x0, x19
  4178e4:	ldp	x20, x19, [sp, #48]
  4178e8:	ldp	x22, x21, [sp, #32]
  4178ec:	ldr	x23, [sp, #16]
  4178f0:	mov	w1, #0xa                   	// #10
  4178f4:	ldp	x29, x30, [sp], #64
  4178f8:	b	41803c <feof@plt+0x14f5c>
  4178fc:	ldr	x8, [x0, #32]
  417900:	cbz	x8, 417910 <feof@plt+0x14830>
  417904:	ldr	w8, [x8, #4]
  417908:	add	w0, w8, #0x1
  41790c:	ret
  417910:	mov	w0, #0x1                   	// #1
  417914:	ret
  417918:	stp	x29, x30, [sp, #-48]!
  41791c:	stp	x22, x21, [sp, #16]
  417920:	stp	x20, x19, [sp, #32]
  417924:	mov	x29, sp
  417928:	movi	v0.2d, #0x0
  41792c:	mov	x19, x0
  417930:	str	w2, [x0]
  417934:	mov	x21, x0
  417938:	stur	q0, [x0, #24]
  41793c:	mov	x0, x1
  417940:	mov	w1, w2
  417944:	str	q0, [x21, #8]!
  417948:	bl	41d7e0 <feof@plt+0x1a700>
  41794c:	cbz	x0, 4179b0 <feof@plt+0x148d0>
  417950:	ldr	w8, [x19, #20]
  417954:	mov	x20, x0
  417958:	str	w1, [x19, #16]
  41795c:	cmp	w8, w1
  417960:	b.le	41796c <feof@plt+0x1488c>
  417964:	ldr	x0, [x21]
  417968:	b	41798c <feof@plt+0x148ac>
  41796c:	ldr	x0, [x19, #8]
  417970:	lsl	w8, w1, #1
  417974:	add	w22, w8, #0x2
  417978:	sxtw	x1, w22
  41797c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  417980:	ldr	w1, [x19, #16]
  417984:	str	x0, [x19, #8]
  417988:	str	w22, [x19, #20]
  41798c:	sxtw	x2, w1
  417990:	mov	x1, x20
  417994:	bl	4029c0 <memcpy@plt>
  417998:	ldp	w8, w9, [x19, #16]
  41799c:	sxtw	x8, w8
  4179a0:	cmp	w8, w9
  4179a4:	b.ge	4179c0 <feof@plt+0x148e0>  // b.tcont
  4179a8:	ldr	x9, [x21]
  4179ac:	strb	wzr, [x9, x8]
  4179b0:	ldp	x20, x19, [sp, #32]
  4179b4:	ldp	x22, x21, [sp, #16]
  4179b8:	ldp	x29, x30, [sp], #48
  4179bc:	ret
  4179c0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  4179c4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  4179c8:	add	x0, x0, #0x9cc
  4179cc:	add	x2, x2, #0x9ba
  4179d0:	mov	w1, #0x36b                 	// #875
  4179d4:	bl	40f560 <feof@plt+0xc480>
  4179d8:	stp	x29, x30, [sp, #-32]!
  4179dc:	stp	x20, x19, [sp, #16]
  4179e0:	mov	x29, sp
  4179e4:	ldr	w8, [x0, #20]
  4179e8:	cmp	w8, w1
  4179ec:	b.gt	417a10 <feof@plt+0x14930>
  4179f0:	mov	x19, x0
  4179f4:	ldr	x0, [x0, #8]
  4179f8:	lsl	w8, w1, #1
  4179fc:	add	w20, w8, #0x2
  417a00:	sxtw	x1, w20
  417a04:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  417a08:	str	x0, [x19, #8]
  417a0c:	str	w20, [x19, #20]
  417a10:	ldp	x20, x19, [sp, #16]
  417a14:	ldp	x29, x30, [sp], #32
  417a18:	ret
  417a1c:	stp	x29, x30, [sp, #-16]!
  417a20:	mov	x29, sp
  417a24:	ldp	w8, w9, [x0, #16]
  417a28:	sxtw	x8, w8
  417a2c:	cmp	w8, w9
  417a30:	b.ge	417a44 <feof@plt+0x14964>  // b.tcont
  417a34:	ldr	x9, [x0, #8]
  417a38:	strb	wzr, [x9, x8]
  417a3c:	ldp	x29, x30, [sp], #16
  417a40:	ret
  417a44:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  417a48:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  417a4c:	add	x0, x0, #0x9cc
  417a50:	add	x2, x2, #0x9ba
  417a54:	mov	w1, #0x36b                 	// #875
  417a58:	bl	40f560 <feof@plt+0xc480>
  417a5c:	stp	x29, x30, [sp, #-48]!
  417a60:	str	x21, [sp, #16]
  417a64:	stp	x20, x19, [sp, #32]
  417a68:	mov	x29, sp
  417a6c:	mov	x19, x0
  417a70:	ldr	x0, [x0, #8]
  417a74:	bl	402b20 <free@plt>
  417a78:	ldr	x0, [x19, #32]
  417a7c:	cbz	x0, 417ad0 <feof@plt+0x149f0>
  417a80:	mov	x21, xzr
  417a84:	b	417a90 <feof@plt+0x149b0>
  417a88:	add	x21, x21, #0x1
  417a8c:	cbz	x0, 417ad0 <feof@plt+0x149f0>
  417a90:	ldr	w8, [x0, #4]
  417a94:	cmp	x21, x8
  417a98:	b.cs	417ac0 <feof@plt+0x149e0>  // b.hs, b.nlast
  417a9c:	add	x8, x0, x21, lsl #3
  417aa0:	ldr	x20, [x8, #8]
  417aa4:	cbz	x20, 417a88 <feof@plt+0x149a8>
  417aa8:	ldr	x0, [x20]
  417aac:	bl	402b20 <free@plt>
  417ab0:	mov	x0, x20
  417ab4:	bl	402d00 <_ZdlPv@plt>
  417ab8:	ldr	x0, [x19, #32]
  417abc:	b	417a88 <feof@plt+0x149a8>
  417ac0:	ldr	w8, [x0]
  417ac4:	tbnz	w8, #31, 417b00 <feof@plt+0x14a20>
  417ac8:	bl	402b20 <free@plt>
  417acc:	str	xzr, [x19, #32]
  417ad0:	ldr	x0, [x19, #24]
  417ad4:	cbz	x0, 417af0 <feof@plt+0x14a10>
  417ad8:	ldr	w8, [x0]
  417adc:	tbnz	w8, #31, 417aec <feof@plt+0x14a0c>
  417ae0:	bl	402b20 <free@plt>
  417ae4:	str	xzr, [x19, #24]
  417ae8:	b	417af0 <feof@plt+0x14a10>
  417aec:	str	wzr, [x0, #4]
  417af0:	ldp	x20, x19, [sp, #32]
  417af4:	ldr	x21, [sp, #16]
  417af8:	ldp	x29, x30, [sp], #48
  417afc:	ret
  417b00:	str	wzr, [x0, #4]
  417b04:	ldr	x0, [x19, #24]
  417b08:	cbnz	x0, 417ad8 <feof@plt+0x149f8>
  417b0c:	b	417af0 <feof@plt+0x14a10>
  417b10:	stp	x29, x30, [sp, #-64]!
  417b14:	str	x23, [sp, #16]
  417b18:	stp	x22, x21, [sp, #32]
  417b1c:	stp	x20, x19, [sp, #48]
  417b20:	mov	x29, sp
  417b24:	cbz	x1, 417bf4 <feof@plt+0x14b14>
  417b28:	ldr	x8, [x0, #16]
  417b2c:	mov	x20, x1
  417b30:	mov	x19, x0
  417b34:	cbz	x8, 417b40 <feof@plt+0x14a60>
  417b38:	ldr	w0, [x20]
  417b3c:	blr	x8
  417b40:	ldr	x8, [x19, #24]
  417b44:	cbz	x8, 417b50 <feof@plt+0x14a70>
  417b48:	ldr	x0, [x20, #8]
  417b4c:	blr	x8
  417b50:	mov	x21, xzr
  417b54:	str	xzr, [x20, #32]
  417b58:	ldr	x9, [x20, #16]
  417b5c:	cbz	x9, 417b90 <feof@plt+0x14ab0>
  417b60:	ldr	x8, [x19, #16]
  417b64:	cbz	x8, 417b70 <feof@plt+0x14a90>
  417b68:	ldr	w0, [x9]
  417b6c:	blr	x8
  417b70:	ldr	x8, [x19, #24]
  417b74:	cbz	x8, 417b84 <feof@plt+0x14aa4>
  417b78:	ldr	x9, [x20, #16]
  417b7c:	ldr	x0, [x9, #8]
  417b80:	blr	x8
  417b84:	ldr	x8, [x20, #16]
  417b88:	str	x21, [x8, #32]
  417b8c:	ldr	x21, [x20, #16]
  417b90:	ldr	x9, [x20, #24]
  417b94:	cbz	x9, 417bd0 <feof@plt+0x14af0>
  417b98:	ldr	x8, [x19, #16]
  417b9c:	cbz	x8, 417ba8 <feof@plt+0x14ac8>
  417ba0:	ldr	w0, [x9]
  417ba4:	blr	x8
  417ba8:	ldr	x8, [x19, #24]
  417bac:	cbz	x8, 417bbc <feof@plt+0x14adc>
  417bb0:	ldr	x9, [x20, #24]
  417bb4:	ldr	x0, [x9, #8]
  417bb8:	blr	x8
  417bbc:	ldr	x8, [x20, #24]
  417bc0:	str	x21, [x8, #32]
  417bc4:	ldr	x22, [x20, #24]
  417bc8:	mov	x21, x22
  417bcc:	b	417bd4 <feof@plt+0x14af4>
  417bd0:	mov	x22, x21
  417bd4:	ldr	x23, [x20, #32]
  417bd8:	mov	x0, x20
  417bdc:	bl	402d00 <_ZdlPv@plt>
  417be0:	mov	x20, x23
  417be4:	cbnz	x23, 417b58 <feof@plt+0x14a78>
  417be8:	mov	x21, xzr
  417bec:	mov	x20, x22
  417bf0:	cbnz	x22, 417b58 <feof@plt+0x14a78>
  417bf4:	ldp	x20, x19, [sp, #48]
  417bf8:	ldp	x22, x21, [sp, #32]
  417bfc:	ldr	x23, [sp, #16]
  417c00:	ldp	x29, x30, [sp], #64
  417c04:	ret
  417c08:	stp	x29, x30, [sp, #-80]!
  417c0c:	str	x25, [sp, #16]
  417c10:	stp	x24, x23, [sp, #32]
  417c14:	stp	x22, x21, [sp, #48]
  417c18:	stp	x20, x19, [sp, #64]
  417c1c:	mov	x29, sp
  417c20:	ldr	x22, [x0]
  417c24:	cbz	x22, 417d8c <feof@plt+0x14cac>
  417c28:	mov	x20, x1
  417c2c:	ldr	x8, [x0, #8]
  417c30:	ldr	x1, [x22]
  417c34:	mov	x19, x0
  417c38:	mov	x0, x20
  417c3c:	blr	x8
  417c40:	cbz	w0, 417d8c <feof@plt+0x14cac>
  417c44:	mov	w21, w0
  417c48:	mov	w23, #0x18                  	// #24
  417c4c:	mov	w24, #0x10                  	// #16
  417c50:	cmp	w21, #0x0
  417c54:	csel	x8, x24, x23, lt  // lt = tstop
  417c58:	ldr	x25, [x22, x8]
  417c5c:	cbz	x25, 417d8c <feof@plt+0x14cac>
  417c60:	ldr	x8, [x19, #8]
  417c64:	ldr	x1, [x25]
  417c68:	mov	x0, x20
  417c6c:	blr	x8
  417c70:	cbz	w0, 417d68 <feof@plt+0x14c88>
  417c74:	tbnz	w0, #31, 417cc4 <feof@plt+0x14be4>
  417c78:	ldr	x8, [x25, #24]
  417c7c:	cbz	x8, 417d68 <feof@plt+0x14c88>
  417c80:	mov	w8, #0x1                   	// #1
  417c84:	tst	w0, w21
  417c88:	b.lt	417cd8 <feof@plt+0x14bf8>  // b.tstop
  417c8c:	cmp	w21, #0x1
  417c90:	cset	w9, lt  // lt = tstop
  417c94:	eor	w8, w8, #0x1
  417c98:	orr	w9, w9, w8
  417c9c:	tbnz	w9, #0, 417cec <feof@plt+0x14c0c>
  417ca0:	ldr	x8, [x25, #24]
  417ca4:	ldr	x9, [x8, #16]
  417ca8:	str	x25, [x8, #16]
  417cac:	str	x9, [x25, #24]
  417cb0:	str	x8, [x22, #24]
  417cb4:	ldr	x9, [x8, #16]
  417cb8:	str	x22, [x8, #16]
  417cbc:	str	x9, [x22, #24]
  417cc0:	b	417d1c <feof@plt+0x14c3c>
  417cc4:	ldr	x8, [x25, #16]
  417cc8:	cbz	x8, 417d68 <feof@plt+0x14c88>
  417ccc:	mov	w8, wzr
  417cd0:	tst	w0, w21
  417cd4:	b.ge	417c8c <feof@plt+0x14bac>  // b.tcont
  417cd8:	ldr	x8, [x25, #16]
  417cdc:	ldr	x9, [x8, #24]
  417ce0:	str	x25, [x8, #24]
  417ce4:	str	x9, [x25, #16]
  417ce8:	b	417d0c <feof@plt+0x14c2c>
  417cec:	cmp	w21, #0x0
  417cf0:	cset	w9, ge  // ge = tcont
  417cf4:	orr	w8, w9, w8
  417cf8:	tbnz	w8, #0, 417d40 <feof@plt+0x14c60>
  417cfc:	ldr	x8, [x25, #24]
  417d00:	ldr	x9, [x8, #16]
  417d04:	str	x25, [x8, #16]
  417d08:	str	x9, [x25, #24]
  417d0c:	str	x8, [x22, #16]
  417d10:	ldr	x9, [x8, #24]
  417d14:	str	x22, [x8, #24]
  417d18:	str	x9, [x22, #16]
  417d1c:	mov	x22, x8
  417d20:	str	x8, [x19]
  417d24:	ldr	x8, [x19, #8]
  417d28:	ldr	x1, [x22]
  417d2c:	mov	x0, x20
  417d30:	blr	x8
  417d34:	mov	w21, w0
  417d38:	cbnz	w0, 417c50 <feof@plt+0x14b70>
  417d3c:	b	417d8c <feof@plt+0x14cac>
  417d40:	cmp	w21, #0x1
  417d44:	b.lt	417d60 <feof@plt+0x14c80>  // b.tstop
  417d48:	tbz	w0, #31, 417d60 <feof@plt+0x14c80>
  417d4c:	ldr	x8, [x25, #16]
  417d50:	ldr	x9, [x8, #24]
  417d54:	str	x25, [x8, #24]
  417d58:	str	x9, [x25, #16]
  417d5c:	b	417cb0 <feof@plt+0x14bd0>
  417d60:	ldr	x22, [x19]
  417d64:	b	417d24 <feof@plt+0x14c44>
  417d68:	tbnz	w21, #31, 417d7c <feof@plt+0x14c9c>
  417d6c:	ldr	x8, [x25, #16]
  417d70:	str	x22, [x25, #16]
  417d74:	str	x8, [x22, #24]
  417d78:	b	417d88 <feof@plt+0x14ca8>
  417d7c:	ldr	x8, [x25, #24]
  417d80:	str	x22, [x25, #24]
  417d84:	str	x8, [x22, #16]
  417d88:	str	x25, [x19]
  417d8c:	ldp	x20, x19, [sp, #64]
  417d90:	ldp	x22, x21, [sp, #48]
  417d94:	ldp	x24, x23, [sp, #32]
  417d98:	ldr	x25, [sp, #16]
  417d9c:	ldp	x29, x30, [sp], #80
  417da0:	ret
  417da4:	stp	x29, x30, [sp, #-80]!
  417da8:	str	x25, [sp, #16]
  417dac:	stp	x24, x23, [sp, #32]
  417db0:	stp	x22, x21, [sp, #48]
  417db4:	stp	x20, x19, [sp, #64]
  417db8:	mov	x29, sp
  417dbc:	ldr	x22, [x0]
  417dc0:	cbz	x22, 417f28 <feof@plt+0x14e48>
  417dc4:	mov	w20, w1
  417dc8:	ldr	x8, [x0, #8]
  417dcc:	ldr	w1, [x22]
  417dd0:	mov	x19, x0
  417dd4:	mov	w0, w20
  417dd8:	blr	x8
  417ddc:	cbz	w0, 417f28 <feof@plt+0x14e48>
  417de0:	mov	w21, w0
  417de4:	mov	w23, #0x18                  	// #24
  417de8:	mov	w24, #0x10                  	// #16
  417dec:	cmp	w21, #0x0
  417df0:	csel	x8, x24, x23, lt  // lt = tstop
  417df4:	ldr	x25, [x22, x8]
  417df8:	cbz	x25, 417f28 <feof@plt+0x14e48>
  417dfc:	ldr	x8, [x19, #8]
  417e00:	ldr	w1, [x25]
  417e04:	mov	w0, w20
  417e08:	blr	x8
  417e0c:	cbz	w0, 417f04 <feof@plt+0x14e24>
  417e10:	tbnz	w0, #31, 417e60 <feof@plt+0x14d80>
  417e14:	ldr	x8, [x25, #24]
  417e18:	cbz	x8, 417f04 <feof@plt+0x14e24>
  417e1c:	mov	w8, #0x1                   	// #1
  417e20:	tst	w0, w21
  417e24:	b.lt	417e74 <feof@plt+0x14d94>  // b.tstop
  417e28:	cmp	w21, #0x1
  417e2c:	cset	w9, lt  // lt = tstop
  417e30:	eor	w8, w8, #0x1
  417e34:	orr	w9, w9, w8
  417e38:	tbnz	w9, #0, 417e88 <feof@plt+0x14da8>
  417e3c:	ldr	x8, [x25, #24]
  417e40:	ldr	x9, [x8, #16]
  417e44:	str	x25, [x8, #16]
  417e48:	str	x9, [x25, #24]
  417e4c:	str	x8, [x22, #24]
  417e50:	ldr	x9, [x8, #16]
  417e54:	str	x22, [x8, #16]
  417e58:	str	x9, [x22, #24]
  417e5c:	b	417eb8 <feof@plt+0x14dd8>
  417e60:	ldr	x8, [x25, #16]
  417e64:	cbz	x8, 417f04 <feof@plt+0x14e24>
  417e68:	mov	w8, wzr
  417e6c:	tst	w0, w21
  417e70:	b.ge	417e28 <feof@plt+0x14d48>  // b.tcont
  417e74:	ldr	x8, [x25, #16]
  417e78:	ldr	x9, [x8, #24]
  417e7c:	str	x25, [x8, #24]
  417e80:	str	x9, [x25, #16]
  417e84:	b	417ea8 <feof@plt+0x14dc8>
  417e88:	cmp	w21, #0x0
  417e8c:	cset	w9, ge  // ge = tcont
  417e90:	orr	w8, w9, w8
  417e94:	tbnz	w8, #0, 417edc <feof@plt+0x14dfc>
  417e98:	ldr	x8, [x25, #24]
  417e9c:	ldr	x9, [x8, #16]
  417ea0:	str	x25, [x8, #16]
  417ea4:	str	x9, [x25, #24]
  417ea8:	str	x8, [x22, #16]
  417eac:	ldr	x9, [x8, #24]
  417eb0:	str	x22, [x8, #24]
  417eb4:	str	x9, [x22, #16]
  417eb8:	mov	x22, x8
  417ebc:	str	x8, [x19]
  417ec0:	ldr	x8, [x19, #8]
  417ec4:	ldr	w1, [x22]
  417ec8:	mov	w0, w20
  417ecc:	blr	x8
  417ed0:	mov	w21, w0
  417ed4:	cbnz	w0, 417dec <feof@plt+0x14d0c>
  417ed8:	b	417f28 <feof@plt+0x14e48>
  417edc:	cmp	w21, #0x1
  417ee0:	b.lt	417efc <feof@plt+0x14e1c>  // b.tstop
  417ee4:	tbz	w0, #31, 417efc <feof@plt+0x14e1c>
  417ee8:	ldr	x8, [x25, #16]
  417eec:	ldr	x9, [x8, #24]
  417ef0:	str	x25, [x8, #24]
  417ef4:	str	x9, [x25, #16]
  417ef8:	b	417e4c <feof@plt+0x14d6c>
  417efc:	ldr	x22, [x19]
  417f00:	b	417ec0 <feof@plt+0x14de0>
  417f04:	tbnz	w21, #31, 417f18 <feof@plt+0x14e38>
  417f08:	ldr	x8, [x25, #16]
  417f0c:	str	x22, [x25, #16]
  417f10:	str	x8, [x22, #24]
  417f14:	b	417f24 <feof@plt+0x14e44>
  417f18:	ldr	x8, [x25, #24]
  417f1c:	str	x22, [x25, #24]
  417f20:	str	x8, [x22, #16]
  417f24:	str	x25, [x19]
  417f28:	ldp	x20, x19, [sp, #64]
  417f2c:	ldp	x22, x21, [sp, #48]
  417f30:	ldp	x24, x23, [sp, #32]
  417f34:	ldr	x25, [sp, #16]
  417f38:	ldp	x29, x30, [sp], #80
  417f3c:	ret
  417f40:	ldr	x0, [x0, #32]
  417f44:	b	436ce8 <feof@plt+0x33c08>
  417f48:	cbz	w1, 417f54 <feof@plt+0x14e74>
  417f4c:	mov	w0, wzr
  417f50:	ret
  417f54:	ldr	x0, [x0, #32]
  417f58:	b	436bc4 <feof@plt+0x33ae4>
  417f5c:	stp	x29, x30, [sp, #-48]!
  417f60:	str	x21, [sp, #16]
  417f64:	stp	x20, x19, [sp, #32]
  417f68:	mov	x29, sp
  417f6c:	movi	v0.2d, #0x0
  417f70:	stp	x0, xzr, [x0, #176]
  417f74:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  417f78:	stp	q0, q0, [x0, #144]
  417f7c:	stp	q0, q0, [x0, #112]
  417f80:	stp	q0, q0, [x0, #80]
  417f84:	stp	q0, q0, [x0, #48]
  417f88:	stp	q0, q0, [x0, #16]
  417f8c:	str	q0, [x0]
  417f90:	ldr	x8, [x8, #1464]
  417f94:	adrp	x20, 420000 <feof@plt+0x1cf20>
  417f98:	adrp	x21, 420000 <feof@plt+0x1cf20>
  417f9c:	add	x20, x20, #0x2b0
  417fa0:	str	x8, [x0, #192]
  417fa4:	mov	x8, x0
  417fa8:	str	q0, [x8, #200]!
  417fac:	add	x21, x21, #0x2dc
  417fb0:	str	wzr, [x8, #128]
  417fb4:	stp	q0, q0, [x8, #96]
  417fb8:	stp	q0, q0, [x8, #64]
  417fbc:	mov	w8, #0x1                   	// #1
  417fc0:	mov	x1, xzr
  417fc4:	mov	x2, xzr
  417fc8:	mov	x3, x20
  417fcc:	mov	x4, x21
  417fd0:	add	x19, x0, #0x58
  417fd4:	stur	q0, [x0, #248]
  417fd8:	stur	q0, [x0, #232]
  417fdc:	stur	q0, [x0, #216]
  417fe0:	strb	w8, [x0, #332]
  417fe4:	bl	461450 <_obstack_begin@@Base>
  417fe8:	mov	x0, x19
  417fec:	mov	x3, x20
  417ff0:	mov	x4, x21
  417ff4:	ldp	x20, x19, [sp, #32]
  417ff8:	ldr	x21, [sp, #16]
  417ffc:	mov	x1, xzr
  418000:	mov	x2, xzr
  418004:	ldp	x29, x30, [sp], #48
  418008:	b	461450 <_obstack_begin@@Base>
  41800c:	stp	x29, x30, [sp, #-32]!
  418010:	str	x19, [sp, #16]
  418014:	mov	x29, sp
  418018:	mov	x19, x0
  41801c:	add	x0, x0, #0x58
  418020:	mov	x1, xzr
  418024:	bl	461734 <_obstack_free@@Base>
  418028:	mov	x0, x19
  41802c:	ldr	x19, [sp, #16]
  418030:	mov	x1, xzr
  418034:	ldp	x29, x30, [sp], #32
  418038:	b	461734 <_obstack_free@@Base>
  41803c:	stp	x29, x30, [sp, #-48]!
  418040:	str	x21, [sp, #16]
  418044:	stp	x20, x19, [sp, #32]
  418048:	mov	x29, sp
  41804c:	ldr	w8, [x0, #40]
  418050:	mov	x19, x0
  418054:	mov	w20, w1
  418058:	cmp	w8, #0x1
  41805c:	b.lt	4180c4 <feof@plt+0x14fe4>  // b.tstop
  418060:	ldr	x8, [x19, #8]
  418064:	ldr	w9, [x19, #28]
  418068:	ldr	w10, [x8, #200]
  41806c:	cmp	w9, w10
  418070:	b.gt	4180c4 <feof@plt+0x14fe4>
  418074:	ldr	x21, [x8, #176]
  418078:	ldp	x8, x9, [x21, #24]
  41807c:	cmp	x9, x8
  418080:	b.ne	418094 <feof@plt+0x14fb4>  // b.any
  418084:	mov	w1, #0x1                   	// #1
  418088:	mov	x0, x21
  41808c:	bl	4615ac <_obstack_newchunk@@Base>
  418090:	ldr	x8, [x21, #24]
  418094:	add	x9, x8, #0x1
  418098:	mov	w10, #0xa                   	// #10
  41809c:	adrp	x12, 474000 <_obstack_memory_used@@Base+0x12838>
  4180a0:	and	w11, w20, #0xff
  4180a4:	add	x12, x12, #0xe98
  4180a8:	str	x9, [x21, #24]
  4180ac:	strb	w10, [x8]
  4180b0:	ldr	x8, [x19, #8]
  4180b4:	ldrh	w9, [x12, w11, uxtw #1]
  4180b8:	strb	wzr, [x19, #65]
  4180bc:	str	wzr, [x8, #200]
  4180c0:	tbnz	w9, #6, 418104 <feof@plt+0x15024>
  4180c4:	ldr	x8, [x19, #8]
  4180c8:	ldr	x21, [x8, #176]
  4180cc:	ldp	x8, x9, [x21, #24]
  4180d0:	cmp	x9, x8
  4180d4:	b.ne	4180e8 <feof@plt+0x15008>  // b.any
  4180d8:	mov	w1, #0x1                   	// #1
  4180dc:	mov	x0, x21
  4180e0:	bl	4615ac <_obstack_newchunk@@Base>
  4180e4:	ldr	x8, [x21, #24]
  4180e8:	add	x9, x8, #0x1
  4180ec:	str	x9, [x21, #24]
  4180f0:	strb	w20, [x8]
  4180f4:	ldr	x8, [x19, #8]
  4180f8:	ldr	w9, [x8, #200]
  4180fc:	add	w9, w9, #0x1
  418100:	str	w9, [x8, #200]
  418104:	ldp	x20, x19, [sp, #32]
  418108:	ldr	x21, [sp, #16]
  41810c:	ldp	x29, x30, [sp], #48
  418110:	ret
  418114:	stp	x29, x30, [sp, #-48]!
  418118:	str	x21, [sp, #16]
  41811c:	stp	x20, x19, [sp, #32]
  418120:	mov	x29, sp
  418124:	ldr	x21, [x0, #8]
  418128:	mov	x19, x0
  41812c:	ldr	x20, [x21, #176]
  418130:	ldp	x8, x9, [x20, #24]
  418134:	cmp	x9, x8
  418138:	b.ne	41814c <feof@plt+0x1506c>  // b.any
  41813c:	mov	w1, #0x1                   	// #1
  418140:	mov	x0, x20
  418144:	bl	4615ac <_obstack_newchunk@@Base>
  418148:	ldr	x8, [x20, #24]
  41814c:	add	x9, x8, #0x1
  418150:	str	x9, [x20, #24]
  418154:	strb	wzr, [x8]
  418158:	ldr	x8, [x21, #176]
  41815c:	ldr	x9, [x19, #8]
  418160:	ldr	x0, [x8, #16]
  418164:	ldr	x1, [x9, #192]
  418168:	bl	4029a0 <fputs@plt>
  41816c:	ldr	x8, [x19, #8]
  418170:	ldr	x0, [x8, #176]
  418174:	ldp	x8, x1, [x0, #8]
  418178:	cmp	x1, x8
  41817c:	b.ls	418194 <feof@plt+0x150b4>  // b.plast
  418180:	ldr	x8, [x0, #32]
  418184:	cmp	x1, x8
  418188:	b.cs	418194 <feof@plt+0x150b4>  // b.hs, b.nlast
  41818c:	str	x1, [x0, #24]
  418190:	b	418198 <feof@plt+0x150b8>
  418194:	bl	461734 <_obstack_free@@Base>
  418198:	ldr	x8, [x19, #8]
  41819c:	ldr	x21, [sp, #16]
  4181a0:	str	wzr, [x8, #200]
  4181a4:	ldp	x20, x19, [sp, #32]
  4181a8:	ldp	x29, x30, [sp], #48
  4181ac:	ret
  4181b0:	stp	x29, x30, [sp, #-32]!
  4181b4:	stp	x20, x19, [sp, #16]
  4181b8:	mov	x29, sp
  4181bc:	ldr	x20, [x0, #8]
  4181c0:	ldr	x19, [x20, #176]
  4181c4:	ldp	x8, x9, [x19, #24]
  4181c8:	cmp	x9, x8
  4181cc:	b.ne	4181e0 <feof@plt+0x15100>  // b.any
  4181d0:	mov	w1, #0x1                   	// #1
  4181d4:	mov	x0, x19
  4181d8:	bl	4615ac <_obstack_newchunk@@Base>
  4181dc:	ldr	x8, [x19, #24]
  4181e0:	add	x9, x8, #0x1
  4181e4:	str	x9, [x19, #24]
  4181e8:	strb	wzr, [x8]
  4181ec:	ldr	x8, [x20, #176]
  4181f0:	ldp	x20, x19, [sp, #16]
  4181f4:	ldr	x0, [x8, #16]
  4181f8:	ldp	x29, x30, [sp], #32
  4181fc:	ret
  418200:	stp	x29, x30, [sp, #-32]!
  418204:	str	x19, [sp, #16]
  418208:	mov	x29, sp
  41820c:	ldr	x8, [x0, #8]
  418210:	mov	x19, x0
  418214:	ldr	x0, [x8, #176]
  418218:	ldp	x8, x1, [x0, #8]
  41821c:	cmp	x1, x8
  418220:	b.ls	418238 <feof@plt+0x15158>  // b.plast
  418224:	ldr	x8, [x0, #32]
  418228:	cmp	x1, x8
  41822c:	b.cs	418238 <feof@plt+0x15158>  // b.hs, b.nlast
  418230:	str	x1, [x0, #24]
  418234:	b	41823c <feof@plt+0x1515c>
  418238:	bl	461734 <_obstack_free@@Base>
  41823c:	ldr	x8, [x19, #8]
  418240:	ldr	x19, [sp, #16]
  418244:	str	wzr, [x8, #200]
  418248:	ldp	x29, x30, [sp], #32
  41824c:	ret
  418250:	stp	x29, x30, [sp, #-64]!
  418254:	stp	x24, x23, [sp, #16]
  418258:	stp	x22, x21, [sp, #32]
  41825c:	stp	x20, x19, [sp, #48]
  418260:	mov	x29, sp
  418264:	ldr	x22, [x0, #8]
  418268:	mov	x19, x0
  41826c:	mov	w20, w1
  418270:	ldr	x21, [x22, #176]
  418274:	ldp	x8, x9, [x21, #24]
  418278:	cmp	x9, x8
  41827c:	b.ne	418290 <feof@plt+0x151b0>  // b.any
  418280:	mov	w1, #0x1                   	// #1
  418284:	mov	x0, x21
  418288:	bl	4615ac <_obstack_newchunk@@Base>
  41828c:	ldr	x8, [x21, #24]
  418290:	add	x9, x8, #0x1
  418294:	str	x9, [x21, #24]
  418298:	strb	wzr, [x8]
  41829c:	ldr	x8, [x22, #176]
  4182a0:	ldr	x9, [x19, #8]
  4182a4:	adrp	x24, 464000 <_obstack_memory_used@@Base+0x2838>
  4182a8:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x2838>
  4182ac:	ldr	x23, [x8, #16]
  4182b0:	ldr	x21, [x9, #192]
  4182b4:	add	x24, x24, #0xa68
  4182b8:	add	x22, x22, #0xb30
  4182bc:	b	4182f0 <feof@plt+0x15210>
  4182c0:	mov	w1, #0x2                   	// #2
  4182c4:	mov	w2, #0x1                   	// #1
  4182c8:	mov	x0, x22
  4182cc:	mov	x3, x21
  4182d0:	bl	402fa0 <fwrite@plt>
  4182d4:	mov	w0, #0x5c                  	// #92
  4182d8:	mov	x1, x21
  4182dc:	bl	402d60 <fputc@plt>
  4182e0:	ldrb	w0, [x23]
  4182e4:	mov	x1, x21
  4182e8:	bl	402d60 <fputc@plt>
  4182ec:	add	x23, x23, #0x1
  4182f0:	ldrb	w0, [x23]
  4182f4:	cmp	w0, #0x3d
  4182f8:	b.le	418324 <feof@plt+0x15244>
  4182fc:	sub	w8, w0, #0x7b
  418300:	cmp	w8, #0x3
  418304:	b.cc	418344 <feof@plt+0x15264>  // b.lo, b.ul, b.last
  418308:	cmp	w0, #0x3e
  41830c:	b.eq	418344 <feof@plt+0x15264>  // b.none
  418310:	cmp	w0, #0x5c
  418314:	b.ne	4182e4 <feof@plt+0x15204>  // b.any
  418318:	ldrb	w8, [x23, #1]
  41831c:	cbnz	w8, 4182d4 <feof@plt+0x151f4>
  418320:	b	418394 <feof@plt+0x152b4>
  418324:	cmp	w0, #0x22
  418328:	b.hi	41833c <feof@plt+0x1525c>  // b.pmore
  41832c:	adr	x8, 4182c0 <feof@plt+0x151e0>
  418330:	ldrb	w9, [x24, x0]
  418334:	add	x8, x8, x9, lsl #2
  418338:	br	x8
  41833c:	cmp	w0, #0x3c
  418340:	b.ne	4182e4 <feof@plt+0x15204>  // b.any
  418344:	tbnz	w20, #0, 4182d4 <feof@plt+0x151f4>
  418348:	b	4182e4 <feof@plt+0x15204>
  41834c:	ldr	x8, [x19, #8]
  418350:	ldr	x0, [x8, #176]
  418354:	ldp	x8, x1, [x0, #8]
  418358:	cmp	x1, x8
  41835c:	b.ls	418374 <feof@plt+0x15294>  // b.plast
  418360:	ldr	x8, [x0, #32]
  418364:	cmp	x1, x8
  418368:	b.cs	418374 <feof@plt+0x15294>  // b.hs, b.nlast
  41836c:	str	x1, [x0, #24]
  418370:	b	418378 <feof@plt+0x15298>
  418374:	bl	461734 <_obstack_free@@Base>
  418378:	ldr	x8, [x19, #8]
  41837c:	str	wzr, [x8, #200]
  418380:	ldp	x20, x19, [sp, #48]
  418384:	ldp	x22, x21, [sp, #32]
  418388:	ldp	x24, x23, [sp, #16]
  41838c:	ldp	x29, x30, [sp], #64
  418390:	ret
  418394:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  418398:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41839c:	add	x0, x0, #0xb33
  4183a0:	add	x2, x2, #0xb4c
  4183a4:	mov	w1, #0x378                 	// #888
  4183a8:	bl	40f560 <feof@plt+0xc480>
  4183ac:	stp	x29, x30, [sp, #-64]!
  4183b0:	stp	x24, x23, [sp, #16]
  4183b4:	stp	x22, x21, [sp, #32]
  4183b8:	stp	x20, x19, [sp, #48]
  4183bc:	mov	x29, sp
  4183c0:	ldr	w21, [x0, #32]
  4183c4:	cmp	w21, #0x1
  4183c8:	b.lt	41848c <feof@plt+0x153ac>  // b.tstop
  4183cc:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  4183d0:	ldrh	w22, [x8, #3800]
  4183d4:	mov	x19, x0
  4183d8:	mov	w23, #0xa                   	// #10
  4183dc:	mov	w24, #0x20                  	// #32
  4183e0:	b	418408 <feof@plt+0x15328>
  4183e4:	add	x9, x8, #0x1
  4183e8:	str	x9, [x20, #24]
  4183ec:	strb	w24, [x8]
  4183f0:	ldr	x8, [x19, #8]
  4183f4:	ldr	w9, [x8, #200]
  4183f8:	add	w9, w9, #0x1
  4183fc:	str	w9, [x8, #200]
  418400:	subs	w21, w21, #0x1
  418404:	b.eq	41848c <feof@plt+0x153ac>  // b.none
  418408:	ldr	w8, [x19, #40]
  41840c:	cmp	w8, #0x1
  418410:	b.lt	418464 <feof@plt+0x15384>  // b.tstop
  418414:	ldr	x8, [x19, #8]
  418418:	ldr	w9, [x19, #28]
  41841c:	ldr	w10, [x8, #200]
  418420:	cmp	w9, w10
  418424:	b.gt	418464 <feof@plt+0x15384>
  418428:	ldr	x20, [x8, #176]
  41842c:	ldp	x8, x9, [x20, #24]
  418430:	cmp	x9, x8
  418434:	b.ne	418448 <feof@plt+0x15368>  // b.any
  418438:	mov	w1, #0x1                   	// #1
  41843c:	mov	x0, x20
  418440:	bl	4615ac <_obstack_newchunk@@Base>
  418444:	ldr	x8, [x20, #24]
  418448:	add	x9, x8, #0x1
  41844c:	str	x9, [x20, #24]
  418450:	strb	w23, [x8]
  418454:	ldr	x8, [x19, #8]
  418458:	strb	wzr, [x19, #65]
  41845c:	str	wzr, [x8, #200]
  418460:	tbnz	w22, #6, 418400 <feof@plt+0x15320>
  418464:	ldr	x8, [x19, #8]
  418468:	ldr	x20, [x8, #176]
  41846c:	ldp	x8, x9, [x20, #24]
  418470:	cmp	x9, x8
  418474:	b.ne	4183e4 <feof@plt+0x15304>  // b.any
  418478:	mov	w1, #0x1                   	// #1
  41847c:	mov	x0, x20
  418480:	bl	4615ac <_obstack_newchunk@@Base>
  418484:	ldr	x8, [x20, #24]
  418488:	b	4183e4 <feof@plt+0x15304>
  41848c:	ldp	x20, x19, [sp, #48]
  418490:	ldp	x22, x21, [sp, #32]
  418494:	ldp	x24, x23, [sp, #16]
  418498:	ldp	x29, x30, [sp], #64
  41849c:	ret
  4184a0:	sub	sp, sp, #0x1e0
  4184a4:	stp	x29, x30, [sp, #384]
  4184a8:	stp	x28, x27, [sp, #400]
  4184ac:	stp	x26, x25, [sp, #416]
  4184b0:	stp	x24, x23, [sp, #432]
  4184b4:	stp	x22, x21, [sp, #448]
  4184b8:	stp	x20, x19, [sp, #464]
  4184bc:	add	x29, sp, #0x180
  4184c0:	str	x1, [sp, #32]
  4184c4:	mov	x23, x0
  4184c8:	ldr	x27, [x23, #8]!
  4184cc:	mov	x28, x0
  4184d0:	mov	x10, x27
  4184d4:	ldr	x8, [x27, #120]
  4184d8:	ldr	x9, [x10, #112]!
  4184dc:	sub	x8, x8, x9
  4184e0:	cmp	x8, #0x1e7
  4184e4:	add	x8, x27, #0x58
  4184e8:	stp	x8, x10, [sp, #88]
  4184ec:	b.hi	418504 <feof@plt+0x15424>  // b.pmore
  4184f0:	ldr	x0, [sp, #88]
  4184f4:	mov	w1, #0x1e8                 	// #488
  4184f8:	bl	4615ac <_obstack_newchunk@@Base>
  4184fc:	ldr	x8, [sp, #96]
  418500:	ldr	x9, [x8]
  418504:	ldr	x8, [x27, #104]
  418508:	add	x10, x9, #0x1e8
  41850c:	str	x10, [x27, #112]
  418510:	cmp	x10, x8
  418514:	b.ne	418524 <feof@plt+0x15444>  // b.any
  418518:	ldrb	w9, [x27, #168]
  41851c:	orr	w9, w9, #0x2
  418520:	strb	w9, [x27, #168]
  418524:	ldr	x12, [x27, #136]
  418528:	ldr	x13, [x27, #96]
  41852c:	ldr	x11, [x27, #120]
  418530:	add	x9, sp, #0x70
  418534:	add	x10, x12, x10
  418538:	bic	x10, x10, x12
  41853c:	sub	x12, x10, x13
  418540:	sub	x13, x11, x13
  418544:	cmp	x12, x13
  418548:	str	x10, [x27, #112]
  41854c:	b.ls	41855c <feof@plt+0x1547c>  // b.plast
  418550:	ldr	x10, [sp, #96]
  418554:	str	x11, [x10]
  418558:	mov	x10, x11
  41855c:	ldr	x11, [x27, #184]
  418560:	str	x10, [x27, #104]
  418564:	mov	x10, x8
  418568:	movi	v0.2d, #0x0
  41856c:	str	x11, [x10], #8
  418570:	stp	x27, x10, [sp, #72]
  418574:	str	x8, [x27, #184]
  418578:	ldr	x8, [sp, #32]
  41857c:	stp	q0, q0, [x9, #208]
  418580:	stp	q0, q0, [x9, #176]
  418584:	stp	q0, q0, [x9, #144]
  418588:	str	q0, [x9, #128]
  41858c:	stp	q0, q0, [sp, #208]
  418590:	stp	q0, q0, [sp, #176]
  418594:	stp	q0, q0, [sp, #144]
  418598:	stp	q0, q0, [sp, #112]
  41859c:	ldr	x24, [x8]
  4185a0:	ldrb	w8, [x24]
  4185a4:	cbz	w8, 418bec <feof@plt+0x15b0c>
  4185a8:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x2838>
  4185ac:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  4185b0:	str	x23, [sp, #40]
  4185b4:	mov	x23, x28
  4185b8:	mov	x20, xzr
  4185bc:	mov	w28, wzr
  4185c0:	add	x21, sp, #0x70
  4185c4:	add	x22, x22, #0xb7b
  4185c8:	add	x19, x19, #0xa8b
  4185cc:	stp	wzr, wzr, [sp, #52]
  4185d0:	str	wzr, [sp, #64]
  4185d4:	b	4185ec <feof@plt+0x1550c>
  4185d8:	ldr	x11, [sp, #96]
  4185dc:	add	x10, x9, #0x1
  4185e0:	str	x10, [x11]
  4185e4:	strb	w8, [x9]
  4185e8:	ldrb	w8, [x24, #1]!
  4185ec:	and	w9, w8, #0xff
  4185f0:	cmp	w9, #0x25
  4185f4:	b.eq	418624 <feof@plt+0x15544>  // b.none
  4185f8:	cbz	w9, 418bf8 <feof@plt+0x15b18>
  4185fc:	ldp	x9, x10, [x27, #112]
  418600:	cmp	x10, x9
  418604:	b.ne	4185d8 <feof@plt+0x154f8>  // b.any
  418608:	ldr	x0, [sp, #88]
  41860c:	mov	w1, #0x1                   	// #1
  418610:	bl	4615ac <_obstack_newchunk@@Base>
  418614:	ldr	x9, [sp, #96]
  418618:	ldrb	w8, [x24]
  41861c:	ldr	x9, [x9]
  418620:	b	4185d8 <feof@plt+0x154f8>
  418624:	ldrb	w8, [x24, #1]
  418628:	sub	w9, w8, #0x25
  41862c:	cmp	w9, #0x2d
  418630:	b.hi	41867c <feof@plt+0x1559c>  // b.pmore
  418634:	adr	x8, 418644 <feof@plt+0x15564>
  418638:	ldrb	w10, [x19, x9]
  41863c:	add	x8, x8, x10, lsl #2
  418640:	br	x8
  418644:	ldp	x8, x9, [x27, #112]
  418648:	cmp	x9, x8
  41864c:	b.ne	418664 <feof@plt+0x15584>  // b.any
  418650:	ldr	x0, [sp, #88]
  418654:	mov	w1, #0x1                   	// #1
  418658:	bl	4615ac <_obstack_newchunk@@Base>
  41865c:	ldr	x8, [sp, #96]
  418660:	ldr	x8, [x8]
  418664:	ldr	x10, [sp, #96]
  418668:	add	x9, x8, #0x1
  41866c:	str	x9, [x10]
  418670:	mov	w9, #0x25                  	// #37
  418674:	strb	w9, [x8]
  418678:	b	4188ec <feof@plt+0x1580c>
  41867c:	cmp	w8, #0x6d
  418680:	b.eq	418894 <feof@plt+0x157b4>  // b.none
  418684:	cbz	w8, 419bb8 <feof@plt+0x16ad8>
  418688:	ldp	x8, x9, [x27, #112]
  41868c:	cmp	x9, x8
  418690:	b.ne	4186a8 <feof@plt+0x155c8>  // b.any
  418694:	ldr	x0, [sp, #88]
  418698:	mov	w1, #0x1                   	// #1
  41869c:	bl	4615ac <_obstack_newchunk@@Base>
  4186a0:	ldr	x8, [sp, #96]
  4186a4:	ldr	x8, [x8]
  4186a8:	ldr	x10, [sp, #96]
  4186ac:	add	x9, x8, #0x1
  4186b0:	cmp	x20, #0x3c
  4186b4:	str	x9, [x10]
  4186b8:	strb	wzr, [x8]
  4186bc:	b.cs	419c78 <feof@plt+0x16b98>  // b.hs, b.nlast
  4186c0:	ldp	x8, x9, [x27, #104]
  4186c4:	add	x24, x24, #0x1
  4186c8:	cmp	x9, x8
  4186cc:	b.ne	4186dc <feof@plt+0x155fc>  // b.any
  4186d0:	ldrb	w10, [x27, #168]
  4186d4:	orr	w10, w10, #0x2
  4186d8:	strb	w10, [x27, #168]
  4186dc:	ldr	x10, [x27, #136]
  4186e0:	ldr	x11, [x27, #96]
  4186e4:	ldr	x12, [x27, #120]
  4186e8:	add	x9, x10, x9
  4186ec:	bic	x9, x9, x10
  4186f0:	sub	x13, x12, x11
  4186f4:	sub	x10, x9, x11
  4186f8:	cmp	x10, x13
  4186fc:	csel	x9, x12, x9, hi  // hi = pmore
  418700:	stp	x9, x9, [x27, #104]
  418704:	ldr	x9, [sp, #80]
  418708:	str	x8, [x9, x20, lsl #3]
  41870c:	ldrb	w8, [x24]
  418710:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  418714:	add	x9, x9, #0xe98
  418718:	ldrh	w8, [x9, x8, lsl #1]
  41871c:	tbnz	w8, #2, 4188f8 <feof@plt+0x15818>
  418720:	ldr	w8, [sp, #56]
  418724:	tbnz	w8, #0, 419c90 <feof@plt+0x16bb0>
  418728:	ldr	w8, [sp, #52]
  41872c:	mov	w9, #0x1                   	// #1
  418730:	str	w9, [sp, #64]
  418734:	mov	w19, w8
  418738:	add	w8, w8, #0x1
  41873c:	stp	w8, wzr, [sp, #52]
  418740:	b	418934 <feof@plt+0x15854>
  418744:	ldrb	w0, [x23, #67]
  418748:	bl	412690 <feof@plt+0xf5b0>
  41874c:	b	4188a0 <feof@plt+0x157c0>
  418750:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  418754:	ldr	x26, [x19, #1368]
  418758:	mov	x0, x26
  41875c:	bl	402a50 <strlen@plt>
  418760:	mov	x25, x0
  418764:	ldp	x0, x8, [x27, #112]
  418768:	sub	x8, x8, x0
  41876c:	cmp	x8, x25
  418770:	b.cs	41878c <feof@plt+0x156ac>  // b.hs, b.nlast
  418774:	ldr	x0, [sp, #88]
  418778:	mov	x1, x25
  41877c:	bl	4615ac <_obstack_newchunk@@Base>
  418780:	ldr	x8, [sp, #96]
  418784:	ldr	x26, [x19, #1368]
  418788:	ldr	x0, [x8]
  41878c:	mov	x1, x26
  418790:	mov	x2, x25
  418794:	bl	4029c0 <memcpy@plt>
  418798:	ldr	x8, [x27, #112]
  41879c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  4187a0:	mov	w2, #0x5                   	// #5
  4187a4:	add	x1, x1, #0xd49
  4187a8:	add	x8, x8, x25
  4187ac:	str	x8, [x27, #112]
  4187b0:	ldrb	w0, [x23, #67]
  4187b4:	bl	41260c <feof@plt+0xf52c>
  4187b8:	mov	x25, x0
  4187bc:	bl	402a50 <strlen@plt>
  4187c0:	mov	x26, x0
  4187c4:	ldp	x0, x8, [x27, #112]
  4187c8:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  4187cc:	add	x19, x19, #0xa8b
  4187d0:	b	4188b0 <feof@plt+0x157d0>
  4187d4:	ldr	x8, [sp, #96]
  4187d8:	ldr	x25, [x8]
  4187dc:	b	418834 <feof@plt+0x15754>
  4187e0:	ldrb	w0, [x23, #67]
  4187e4:	bl	412690 <feof@plt+0xf5b0>
  4187e8:	mov	x25, x0
  4187ec:	bl	402a50 <strlen@plt>
  4187f0:	mov	x26, x0
  4187f4:	ldp	x0, x8, [x27, #112]
  4187f8:	sub	x8, x8, x0
  4187fc:	cmp	x8, x26
  418800:	b.cs	418818 <feof@plt+0x15738>  // b.hs, b.nlast
  418804:	ldr	x0, [sp, #88]
  418808:	mov	x1, x26
  41880c:	bl	4615ac <_obstack_newchunk@@Base>
  418810:	ldr	x8, [sp, #96]
  418814:	ldr	x0, [x8]
  418818:	mov	x1, x25
  41881c:	mov	x2, x26
  418820:	bl	4029c0 <memcpy@plt>
  418824:	ldr	x9, [sp, #96]
  418828:	ldr	x8, [x9]
  41882c:	add	x25, x8, x26
  418830:	str	x25, [x9]
  418834:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  418838:	ldr	x27, [x8, #1376]
  41883c:	mov	x0, x27
  418840:	bl	402a50 <strlen@plt>
  418844:	ldr	x8, [sp, #72]
  418848:	mov	x26, x0
  41884c:	ldr	x8, [x8, #120]
  418850:	sub	x8, x8, x25
  418854:	cmp	x8, x0
  418858:	b.cs	418878 <feof@plt+0x15798>  // b.hs, b.nlast
  41885c:	ldr	x0, [sp, #88]
  418860:	mov	x1, x26
  418864:	bl	4615ac <_obstack_newchunk@@Base>
  418868:	ldr	x8, [sp, #96]
  41886c:	ldr	x25, [x8]
  418870:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  418874:	ldr	x27, [x8, #1376]
  418878:	mov	x0, x25
  41887c:	mov	x1, x27
  418880:	mov	x2, x26
  418884:	bl	4029c0 <memcpy@plt>
  418888:	ldr	x9, [sp, #96]
  41888c:	ldr	x27, [sp, #72]
  418890:	b	4188e0 <feof@plt+0x15800>
  418894:	ldr	x8, [sp, #32]
  418898:	ldr	w0, [x8, #16]
  41889c:	bl	46231c <_obstack_memory_used@@Base+0xb54>
  4188a0:	mov	x25, x0
  4188a4:	bl	402a50 <strlen@plt>
  4188a8:	mov	x26, x0
  4188ac:	ldp	x0, x8, [x27, #112]
  4188b0:	sub	x8, x8, x0
  4188b4:	cmp	x8, x26
  4188b8:	b.cs	4188d0 <feof@plt+0x157f0>  // b.hs, b.nlast
  4188bc:	ldr	x0, [sp, #88]
  4188c0:	mov	x1, x26
  4188c4:	bl	4615ac <_obstack_newchunk@@Base>
  4188c8:	ldr	x8, [sp, #96]
  4188cc:	ldr	x0, [x8]
  4188d0:	mov	x1, x25
  4188d4:	mov	x2, x26
  4188d8:	bl	4029c0 <memcpy@plt>
  4188dc:	ldr	x9, [sp, #96]
  4188e0:	ldr	x8, [x9]
  4188e4:	add	x8, x8, x26
  4188e8:	str	x8, [x9]
  4188ec:	ldrb	w8, [x24, #2]!
  4188f0:	cbnz	w8, 4185ec <feof@plt+0x1550c>
  4188f4:	b	418bf8 <feof@plt+0x15b18>
  4188f8:	sub	x1, x29, #0x20
  4188fc:	mov	w2, #0xa                   	// #10
  418900:	mov	x0, x24
  418904:	bl	402e90 <strtoul@plt>
  418908:	ldur	x8, [x29, #-32]
  41890c:	ldrb	w9, [x8]
  418910:	cmp	w9, #0x24
  418914:	b.ne	419ca8 <feof@plt+0x16bc8>  // b.any
  418918:	ldr	w9, [sp, #64]
  41891c:	tbnz	w9, #0, 419cc0 <feof@plt+0x16be0>
  418920:	add	x24, x8, #0x1
  418924:	mov	w8, #0x1                   	// #1
  418928:	str	wzr, [sp, #64]
  41892c:	sub	w19, w0, #0x1
  418930:	str	w8, [sp, #56]
  418934:	cmp	w19, #0x1e
  418938:	b.cs	419cd8 <feof@plt+0x16bf8>  // b.hs, b.nlast
  41893c:	ldr	x8, [x21, w19, uxtw #3]
  418940:	add	x10, sp, #0x70
  418944:	cbnz	x8, 419cf0 <feof@plt+0x16c10>
  418948:	ldr	x9, [sp, #80]
  41894c:	orr	x8, x20, #0x1
  418950:	mov	w21, w19
  418954:	add	x26, x9, x8, lsl #3
  418958:	str	x26, [x10, x21, lsl #3]
  41895c:	b	41898c <feof@plt+0x158ac>
  418960:	ldrb	w9, [x24]
  418964:	ldr	x11, [sp, #96]
  418968:	add	x10, x8, #0x1
  41896c:	mov	w2, #0x6                   	// #6
  418970:	mov	x0, x22
  418974:	str	x10, [x11]
  418978:	strb	w9, [x8]
  41897c:	ldrb	w25, [x24], #1
  418980:	mov	w1, w25
  418984:	bl	402ce0 <memchr@plt>
  418988:	cbz	x0, 4189b0 <feof@plt+0x158d0>
  41898c:	ldp	x8, x9, [x27, #112]
  418990:	cmp	x9, x8
  418994:	b.ne	418960 <feof@plt+0x15880>  // b.any
  418998:	ldr	x0, [sp, #88]
  41899c:	mov	w1, #0x1                   	// #1
  4189a0:	bl	4615ac <_obstack_newchunk@@Base>
  4189a4:	ldr	x8, [sp, #96]
  4189a8:	ldr	x8, [x8]
  4189ac:	b	418960 <feof@plt+0x15880>
  4189b0:	cmp	w25, #0x2e
  4189b4:	b.ne	418a50 <feof@plt+0x15970>  // b.any
  4189b8:	ldrb	w8, [x24]
  4189bc:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  4189c0:	add	x9, x9, #0xe98
  4189c4:	ldrh	w9, [x9, x8, lsl #1]
  4189c8:	tbnz	w9, #2, 418a60 <feof@plt+0x15980>
  4189cc:	cmp	w8, #0x2a
  4189d0:	b.ne	419d08 <feof@plt+0x16c28>  // b.any
  4189d4:	ldp	x8, x9, [x27, #112]
  4189d8:	cmp	x9, x8
  4189dc:	b.ne	4189f4 <feof@plt+0x15914>  // b.any
  4189e0:	ldr	x0, [sp, #88]
  4189e4:	mov	w1, #0x1                   	// #1
  4189e8:	bl	4615ac <_obstack_newchunk@@Base>
  4189ec:	ldr	x8, [sp, #96]
  4189f0:	ldr	x8, [x8]
  4189f4:	ldr	x10, [sp, #96]
  4189f8:	add	x9, x8, #0x1
  4189fc:	str	x9, [x10]
  418a00:	mov	w9, #0x2a                  	// #42
  418a04:	strb	w9, [x8]
  418a08:	ldrb	w8, [x24, #1]!
  418a0c:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  418a10:	add	x9, x9, #0xe98
  418a14:	ldrh	w8, [x9, x8, lsl #1]
  418a18:	tbnz	w8, #2, 418ac8 <feof@plt+0x159e8>
  418a1c:	ldr	w8, [sp, #56]
  418a20:	cbnz	w8, 419d20 <feof@plt+0x16c40>
  418a24:	add	x8, sp, #0x70
  418a28:	ldr	x8, [x8, x21, lsl #3]
  418a2c:	add	x21, sp, #0x70
  418a30:	add	w9, w19, #0x1
  418a34:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  418a38:	str	x8, [x21, w9, uxtw #3]
  418a3c:	ldr	w8, [sp, #52]
  418a40:	add	x19, x19, #0xa8b
  418a44:	add	w8, w8, #0x1
  418a48:	str	w8, [sp, #52]
  418a4c:	b	418b1c <feof@plt+0x15a3c>
  418a50:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  418a54:	add	x21, sp, #0x70
  418a58:	add	x19, x19, #0xa8b
  418a5c:	b	418b60 <feof@plt+0x15a80>
  418a60:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  418a64:	add	x21, sp, #0x70
  418a68:	add	x19, x19, #0xa8b
  418a6c:	b	418a98 <feof@plt+0x159b8>
  418a70:	ldrb	w9, [x24]
  418a74:	ldr	x11, [sp, #96]
  418a78:	add	x10, x8, #0x1
  418a7c:	str	x10, [x11]
  418a80:	strb	w9, [x8]
  418a84:	ldrb	w8, [x24], #1
  418a88:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  418a8c:	add	x9, x9, #0xe98
  418a90:	ldrh	w9, [x9, x8, lsl #1]
  418a94:	tbz	w9, #2, 418abc <feof@plt+0x159dc>
  418a98:	ldp	x8, x9, [x27, #112]
  418a9c:	cmp	x9, x8
  418aa0:	b.ne	418a70 <feof@plt+0x15990>  // b.any
  418aa4:	ldr	x0, [sp, #88]
  418aa8:	mov	w1, #0x1                   	// #1
  418aac:	bl	4615ac <_obstack_newchunk@@Base>
  418ab0:	ldr	x8, [sp, #96]
  418ab4:	ldr	x8, [x8]
  418ab8:	b	418a70 <feof@plt+0x15990>
  418abc:	cmp	w8, #0x73
  418ac0:	b.eq	418b60 <feof@plt+0x15a80>  // b.none
  418ac4:	b	419d38 <feof@plt+0x16c58>
  418ac8:	sub	x1, x29, #0x20
  418acc:	mov	w2, #0xa                   	// #10
  418ad0:	mov	x0, x24
  418ad4:	bl	402e90 <strtoul@plt>
  418ad8:	cmp	w19, w0
  418adc:	b.ne	419d50 <feof@plt+0x16c70>  // b.any
  418ae0:	ldr	w8, [sp, #64]
  418ae4:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x2838>
  418ae8:	add	x19, x19, #0xa8b
  418aec:	cbnz	w8, 419d68 <feof@plt+0x16c88>
  418af0:	ldur	x8, [x29, #-32]
  418af4:	ldrb	w9, [x8]
  418af8:	cmp	w9, #0x24
  418afc:	b.ne	419d80 <feof@plt+0x16ca0>  // b.any
  418b00:	add	x9, sp, #0x70
  418b04:	ldr	x9, [x9, x21, lsl #3]
  418b08:	mov	w10, #0xffffffff            	// #-1
  418b0c:	add	x21, sp, #0x70
  418b10:	add	x10, x0, x10
  418b14:	add	x24, x8, #0x1
  418b18:	str	x9, [x21, w10, uxtw #3]
  418b1c:	ldrb	w8, [x24]
  418b20:	cmp	w8, #0x73
  418b24:	b.ne	419d98 <feof@plt+0x16cb8>  // b.any
  418b28:	ldp	x8, x9, [x27, #112]
  418b2c:	cmp	x9, x8
  418b30:	b.ne	418b48 <feof@plt+0x15a68>  // b.any
  418b34:	ldr	x0, [sp, #88]
  418b38:	mov	w1, #0x1                   	// #1
  418b3c:	bl	4615ac <_obstack_newchunk@@Base>
  418b40:	ldr	x8, [sp, #96]
  418b44:	ldr	x8, [x8]
  418b48:	ldr	x10, [sp, #96]
  418b4c:	add	x9, x8, #0x1
  418b50:	add	x24, x24, #0x1
  418b54:	str	x9, [x10]
  418b58:	mov	w9, #0x73                  	// #115
  418b5c:	strb	w9, [x8]
  418b60:	ldrb	w8, [x24]
  418b64:	cbz	w8, 418bf4 <feof@plt+0x15b14>
  418b68:	ldp	x8, x9, [x27, #112]
  418b6c:	cmp	x9, x8
  418b70:	b.ne	418b88 <feof@plt+0x15aa8>  // b.any
  418b74:	ldr	x0, [sp, #88]
  418b78:	mov	w1, #0x1                   	// #1
  418b7c:	bl	4615ac <_obstack_newchunk@@Base>
  418b80:	ldr	x8, [sp, #96]
  418b84:	ldr	x8, [x8]
  418b88:	add	x9, x8, #0x1
  418b8c:	str	x9, [x27, #112]
  418b90:	strb	wzr, [x8]
  418b94:	ldp	x8, x9, [x27, #104]
  418b98:	cmp	x9, x8
  418b9c:	b.ne	418bac <feof@plt+0x15acc>  // b.any
  418ba0:	ldrb	w10, [x27, #168]
  418ba4:	orr	w10, w10, #0x2
  418ba8:	strb	w10, [x27, #168]
  418bac:	ldr	x10, [x27, #136]
  418bb0:	ldr	x11, [x27, #96]
  418bb4:	ldr	x12, [x27, #120]
  418bb8:	add	x20, x20, #0x2
  418bbc:	add	x9, x10, x9
  418bc0:	bic	x9, x9, x10
  418bc4:	sub	x13, x12, x11
  418bc8:	sub	x10, x9, x11
  418bcc:	cmp	x10, x13
  418bd0:	csel	x9, x12, x9, hi  // hi = pmore
  418bd4:	stp	x9, x9, [x27, #104]
  418bd8:	str	x8, [x26]
  418bdc:	ldrb	w8, [x24]
  418be0:	add	w28, w28, #0x2
  418be4:	cbnz	w8, 4185ec <feof@plt+0x1550c>
  418be8:	b	418bf8 <feof@plt+0x15b18>
  418bec:	mov	w20, wzr
  418bf0:	b	418c00 <feof@plt+0x15b20>
  418bf4:	orr	w20, w28, #0x1
  418bf8:	mov	x28, x23
  418bfc:	ldr	x23, [sp, #40]
  418c00:	ldp	x8, x9, [x27, #112]
  418c04:	cmp	x9, x8
  418c08:	b.ne	418c20 <feof@plt+0x15b40>  // b.any
  418c0c:	ldr	x0, [sp, #88]
  418c10:	mov	w1, #0x1                   	// #1
  418c14:	bl	4615ac <_obstack_newchunk@@Base>
  418c18:	ldr	x8, [sp, #96]
  418c1c:	ldr	x8, [x8]
  418c20:	ldr	x10, [sp, #96]
  418c24:	add	x9, x8, #0x1
  418c28:	cmp	w20, #0x3c
  418c2c:	str	x9, [x10]
  418c30:	strb	wzr, [x8]
  418c34:	b.cs	419c60 <feof@plt+0x16b80>  // b.hs, b.nlast
  418c38:	ldp	x8, x9, [x27, #104]
  418c3c:	cmp	x9, x8
  418c40:	b.ne	418c50 <feof@plt+0x15b70>  // b.any
  418c44:	ldrb	w10, [x27, #168]
  418c48:	orr	w10, w10, #0x2
  418c4c:	strb	w10, [x27, #168]
  418c50:	ldr	x10, [x27, #136]
  418c54:	ldr	x11, [x27, #96]
  418c58:	ldr	x12, [x27, #120]
  418c5c:	add	x9, x10, x9
  418c60:	bic	x9, x9, x10
  418c64:	sub	x10, x12, x11
  418c68:	sub	x11, x9, x11
  418c6c:	cmp	x11, x10
  418c70:	csel	x9, x12, x9, hi  // hi = pmore
  418c74:	stp	x9, x9, [x27, #104]
  418c78:	ldr	x9, [sp, #80]
  418c7c:	adrp	x11, 464000 <_obstack_memory_used@@Base+0x2838>
  418c80:	ldr	d0, [x11, #2856]
  418c84:	add	w10, w20, #0x1
  418c88:	str	x8, [x9, w20, uxtw #3]
  418c8c:	ldr	x8, [sp, #88]
  418c90:	str	xzr, [x9, w10, uxtw #3]
  418c94:	str	x8, [x27, #176]
  418c98:	ldur	x8, [x28, #36]
  418c9c:	stur	d0, [x28, #36]
  418ca0:	ldr	x11, [sp, #112]
  418ca4:	str	x8, [sp, #24]
  418ca8:	cbz	x11, 419ad8 <feof@plt+0x169f8>
  418cac:	ldr	x8, [sp, #32]
  418cb0:	add	x9, sp, #0x68
  418cb4:	mov	w22, wzr
  418cb8:	add	x8, x8, #0x8
  418cbc:	str	x8, [sp, #56]
  418cc0:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  418cc4:	add	x8, x8, #0xed8
  418cc8:	ldrh	w10, [x8, #24]
  418ccc:	ldrh	w8, [x8]
  418cd0:	str	w10, [sp, #52]
  418cd4:	str	w8, [sp, #40]
  418cd8:	orr	x8, x9, #0x1
  418cdc:	str	x8, [sp, #16]
  418ce0:	b	418d3c <feof@plt+0x15c5c>
  418ce4:	add	x9, x8, #0x1
  418ce8:	str	x9, [x27, #112]
  418cec:	strb	wzr, [x8]
  418cf0:	ldp	x8, x9, [x27, #104]
  418cf4:	cmp	x9, x8
  418cf8:	b.eq	418ec8 <feof@plt+0x15de8>  // b.none
  418cfc:	ldr	x10, [x27, #136]
  418d00:	ldr	x11, [x27, #96]
  418d04:	ldr	x12, [x27, #120]
  418d08:	add	x9, x10, x9
  418d0c:	bic	x9, x9, x10
  418d10:	sub	x13, x12, x11
  418d14:	sub	x10, x9, x11
  418d18:	cmp	x10, x13
  418d1c:	csel	x9, x12, x9, hi  // hi = pmore
  418d20:	stp	x9, x9, [x27, #104]
  418d24:	add	x10, sp, #0x70
  418d28:	ldr	x9, [x10, w22, uxtw #3]
  418d2c:	add	w22, w22, #0x1
  418d30:	str	x8, [x9]
  418d34:	ldr	x11, [x10, w22, uxtw #3]
  418d38:	cbz	x11, 419ad8 <feof@plt+0x169f8>
  418d3c:	strb	wzr, [sp, #108]
  418d40:	ldr	x9, [x11]
  418d44:	mov	w8, wzr
  418d48:	mov	w26, wzr
  418d4c:	mov	w19, wzr
  418d50:	mov	w21, wzr
  418d54:	mov	w27, wzr
  418d58:	add	x25, x9, #0x1
  418d5c:	ldurb	w9, [x25, #-1]
  418d60:	cmp	w9, #0x6b
  418d64:	b.le	418d98 <feof@plt+0x15cb8>
  418d68:	cmp	w9, #0x6c
  418d6c:	b.eq	418dc8 <feof@plt+0x15ce8>  // b.none
  418d70:	cmp	w9, #0x77
  418d74:	b.eq	418ddc <feof@plt+0x15cfc>  // b.none
  418d78:	cmp	w9, #0x71
  418d7c:	b.ne	418dec <feof@plt+0x15d0c>  // b.any
  418d80:	tst	w8, #0xff
  418d84:	b.ne	419b28 <feof@plt+0x16a48>  // b.any
  418d88:	mov	w8, #0x1                   	// #1
  418d8c:	strb	w8, [sp, #108]
  418d90:	add	x25, x25, #0x1
  418d94:	b	418d5c <feof@plt+0x15c7c>
  418d98:	cmp	w9, #0x23
  418d9c:	b.eq	418db8 <feof@plt+0x15cd8>  // b.none
  418da0:	cmp	w9, #0x2b
  418da4:	b.ne	418dec <feof@plt+0x15d0c>  // b.any
  418da8:	tbnz	w19, #0, 419b40 <feof@plt+0x16a60>
  418dac:	mov	w19, #0x1                   	// #1
  418db0:	add	x25, x25, #0x1
  418db4:	b	418d5c <feof@plt+0x15c7c>
  418db8:	tbnz	w26, #0, 419b58 <feof@plt+0x16a78>
  418dbc:	mov	w26, #0x1                   	// #1
  418dc0:	add	x25, x25, #0x1
  418dc4:	b	418d5c <feof@plt+0x15c7c>
  418dc8:	cmp	w27, #0x2
  418dcc:	b.ge	419b70 <feof@plt+0x16a90>  // b.tcont
  418dd0:	add	w27, w27, #0x1
  418dd4:	add	x25, x25, #0x1
  418dd8:	b	418d5c <feof@plt+0x15c7c>
  418ddc:	tbnz	w21, #0, 419b88 <feof@plt+0x16aa8>
  418de0:	mov	w21, #0x1                   	// #1
  418de4:	add	x25, x25, #0x1
  418de8:	b	418d5c <feof@plt+0x15c7c>
  418dec:	cbz	w27, 418df8 <feof@plt+0x15d18>
  418df0:	eor	w10, w21, #0x1
  418df4:	tbz	w10, #0, 419ba0 <feof@plt+0x16ac0>
  418df8:	tst	w8, #0xff
  418dfc:	sub	x2, x25, #0x1
  418e00:	str	x11, [sp, #64]
  418e04:	b.eq	418e74 <feof@plt+0x15d94>  // b.none
  418e08:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  418e0c:	ldr	x20, [x8, #1368]
  418e10:	mov	w24, w22
  418e14:	mov	x22, x23
  418e18:	ldrb	w23, [x28, #67]
  418e1c:	mov	x0, x20
  418e20:	str	x2, [sp, #80]
  418e24:	bl	402a50 <strlen@plt>
  418e28:	add	x2, x20, x0
  418e2c:	mov	x0, x28
  418e30:	mov	x1, x20
  418e34:	bl	41a800 <feof@plt+0x17720>
  418e38:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  418e3c:	mov	w2, #0x5                   	// #5
  418e40:	mov	w0, w23
  418e44:	add	x1, x1, #0xd49
  418e48:	mov	x23, x22
  418e4c:	mov	w22, w24
  418e50:	bl	41260c <feof@plt+0xf52c>
  418e54:	mov	x20, x0
  418e58:	bl	402a50 <strlen@plt>
  418e5c:	add	x2, x20, x0
  418e60:	mov	x0, x28
  418e64:	mov	x1, x20
  418e68:	bl	41a800 <feof@plt+0x17720>
  418e6c:	ldr	x2, [sp, #80]
  418e70:	ldrb	w9, [x2]
  418e74:	sub	w8, w9, #0x2e
  418e78:	cmp	w8, #0x4a
  418e7c:	b.hi	419150 <feof@plt+0x16070>  // b.pmore
  418e80:	adrp	x11, 464000 <_obstack_memory_used@@Base+0x2838>
  418e84:	add	x11, x11, #0xab9
  418e88:	adr	x9, 418e98 <feof@plt+0x15db8>
  418e8c:	ldrb	w10, [x11, x8]
  418e90:	add	x9, x9, x10, lsl #2
  418e94:	br	x9
  418e98:	tbz	w21, #0, 418fa8 <feof@plt+0x15ec8>
  418e9c:	ldr	x8, [sp, #56]
  418ea0:	ldr	x8, [x8]
  418ea4:	ldrsw	x9, [x8, #24]
  418ea8:	tbz	w9, #31, 419230 <feof@plt+0x16150>
  418eac:	add	w10, w9, #0x8
  418eb0:	cmn	w9, #0x8
  418eb4:	str	w10, [x8, #24]
  418eb8:	b.gt	419230 <feof@plt+0x16150>
  418ebc:	ldr	x8, [x8, #8]
  418ec0:	add	x9, x8, x9
  418ec4:	b	41923c <feof@plt+0x1615c>
  418ec8:	ldrb	w10, [x27, #168]
  418ecc:	orr	w10, w10, #0x2
  418ed0:	strb	w10, [x27, #168]
  418ed4:	b	418cfc <feof@plt+0x15c1c>
  418ed8:	tbz	w21, #0, 4195a4 <feof@plt+0x164c4>
  418edc:	ldr	x8, [sp, #56]
  418ee0:	ldr	x10, [x23]
  418ee4:	ldr	x8, [x8]
  418ee8:	add	x0, x10, #0xcc
  418eec:	ldrsw	x9, [x8, #24]
  418ef0:	tbz	w9, #31, 4194d0 <feof@plt+0x163f0>
  418ef4:	add	w10, w9, #0x8
  418ef8:	cmn	w9, #0x8
  418efc:	str	w10, [x8, #24]
  418f00:	b.gt	4194d0 <feof@plt+0x163f0>
  418f04:	ldr	x8, [x8, #8]
  418f08:	add	x9, x8, x9
  418f0c:	b	4194dc <feof@plt+0x163fc>
  418f10:	ldr	x8, [sp, #56]
  418f14:	ldr	x10, [x23]
  418f18:	ldr	x8, [x8]
  418f1c:	add	x0, x10, #0xcc
  418f20:	ldrsw	x9, [x8, #28]
  418f24:	tbz	w9, #31, 41918c <feof@plt+0x160ac>
  418f28:	add	w10, w9, #0x10
  418f2c:	cmn	w9, #0x10
  418f30:	str	w10, [x8, #28]
  418f34:	b.gt	41918c <feof@plt+0x160ac>
  418f38:	ldr	x8, [x8, #16]
  418f3c:	add	x9, x8, x9
  418f40:	b	419198 <feof@plt+0x160b8>
  418f44:	tbz	w21, #0, 4195ec <feof@plt+0x1650c>
  418f48:	ldr	x8, [sp, #56]
  418f4c:	ldr	x10, [x23]
  418f50:	ldr	x8, [x8]
  418f54:	add	x0, x10, #0xcc
  418f58:	ldrsw	x9, [x8, #24]
  418f5c:	tbz	w9, #31, 4196b8 <feof@plt+0x165d8>
  418f60:	add	w10, w9, #0x8
  418f64:	cmn	w9, #0x8
  418f68:	str	w10, [x8, #24]
  418f6c:	b.gt	4196b8 <feof@plt+0x165d8>
  418f70:	ldr	x8, [x8, #8]
  418f74:	add	x9, x8, x9
  418f78:	b	4196c4 <feof@plt+0x165e4>
  418f7c:	ldr	x8, [sp, #56]
  418f80:	ldr	x8, [x8]
  418f84:	ldrsw	x9, [x8, #24]
  418f88:	tbz	w9, #31, 4191b0 <feof@plt+0x160d0>
  418f8c:	add	w10, w9, #0x8
  418f90:	cmn	w9, #0x8
  418f94:	str	w10, [x8, #24]
  418f98:	b.gt	4191b0 <feof@plt+0x160d0>
  418f9c:	ldr	x8, [x8, #8]
  418fa0:	add	x9, x8, x9
  418fa4:	b	4191bc <feof@plt+0x160dc>
  418fa8:	cmp	w27, #0x2
  418fac:	b.eq	4197dc <feof@plt+0x166fc>  // b.none
  418fb0:	cmp	w27, #0x1
  418fb4:	b.eq	4197a8 <feof@plt+0x166c8>  // b.none
  418fb8:	cbnz	w27, 419688 <feof@plt+0x165a8>
  418fbc:	ldr	x8, [sp, #56]
  418fc0:	ldr	x10, [x23]
  418fc4:	ldr	x8, [x8]
  418fc8:	add	x0, x10, #0xcc
  418fcc:	ldrsw	x9, [x8, #24]
  418fd0:	tbz	w9, #31, 41986c <feof@plt+0x1678c>
  418fd4:	add	w10, w9, #0x8
  418fd8:	cmn	w9, #0x8
  418fdc:	str	w10, [x8, #24]
  418fe0:	b.gt	41986c <feof@plt+0x1678c>
  418fe4:	ldr	x8, [x8, #8]
  418fe8:	add	x9, x8, x9
  418fec:	b	419878 <feof@plt+0x16798>
  418ff0:	tbz	w21, #0, 419640 <feof@plt+0x16560>
  418ff4:	ldr	x8, [sp, #56]
  418ff8:	ldr	x10, [x23]
  418ffc:	ldr	x8, [x8]
  419000:	add	x0, x10, #0xcc
  419004:	ldrsw	x9, [x8, #24]
  419008:	tbz	w9, #31, 4194f4 <feof@plt+0x16414>
  41900c:	add	w10, w9, #0x8
  419010:	cmn	w9, #0x8
  419014:	str	w10, [x8, #24]
  419018:	b.gt	4194f4 <feof@plt+0x16414>
  41901c:	ldr	x8, [x8, #8]
  419020:	add	x9, x8, x9
  419024:	b	419500 <feof@plt+0x16420>
  419028:	ldr	x8, [sp, #56]
  41902c:	ldr	x10, [x23]
  419030:	ldr	x8, [x8]
  419034:	add	x0, x10, #0xcc
  419038:	ldrsw	x9, [x8, #24]
  41903c:	tbz	w9, #31, 41925c <feof@plt+0x1617c>
  419040:	add	w10, w9, #0x8
  419044:	cmn	w9, #0x8
  419048:	str	w10, [x8, #24]
  41904c:	b.gt	41925c <feof@plt+0x1617c>
  419050:	ldr	x8, [x8, #8]
  419054:	add	x9, x8, x9
  419058:	b	419268 <feof@plt+0x16188>
  41905c:	ldrb	w8, [x25]
  419060:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  419064:	add	x9, x9, #0xe98
  419068:	ldrh	w9, [x9, x8, lsl #1]
  41906c:	tbnz	w9, #2, 419690 <feof@plt+0x165b0>
  419070:	cmp	w8, #0x2a
  419074:	b.ne	419bd0 <feof@plt+0x16af0>  // b.any
  419078:	ldrb	w8, [x25, #1]
  41907c:	ldr	x11, [sp, #64]
  419080:	cmp	w8, #0x73
  419084:	b.ne	419be8 <feof@plt+0x16b08>  // b.any
  419088:	ldr	x8, [sp, #56]
  41908c:	ldr	x27, [sp, #72]
  419090:	ldr	x8, [x8]
  419094:	ldrsw	x9, [x8, #24]
  419098:	tbz	w9, #31, 4196dc <feof@plt+0x165fc>
  41909c:	add	w10, w9, #0x8
  4190a0:	cmn	w9, #0x8
  4190a4:	str	w10, [x8, #24]
  4190a8:	b.gt	4196dc <feof@plt+0x165fc>
  4190ac:	ldr	x8, [x8, #8]
  4190b0:	add	x9, x8, x9
  4190b4:	b	4196e8 <feof@plt+0x16608>
  4190b8:	ldr	x8, [sp, #56]
  4190bc:	ldr	x8, [x8]
  4190c0:	ldrsw	x9, [x8, #24]
  4190c4:	tbz	w9, #31, 419280 <feof@plt+0x161a0>
  4190c8:	add	w10, w9, #0x8
  4190cc:	cmn	w9, #0x8
  4190d0:	str	w10, [x8, #24]
  4190d4:	b.gt	419280 <feof@plt+0x161a0>
  4190d8:	ldr	x8, [x8, #8]
  4190dc:	mov	w26, w22
  4190e0:	add	x9, x8, x9
  4190e4:	b	419290 <feof@plt+0x161b0>
  4190e8:	ldr	x8, [sp, #56]
  4190ec:	ldrb	w10, [sp, #108]
  4190f0:	ldr	x8, [x8]
  4190f4:	ldrsw	x9, [x8, #24]
  4190f8:	cbz	w10, 419770 <feof@plt+0x16690>
  4190fc:	ldr	x27, [sp, #72]
  419100:	tbz	w9, #31, 419518 <feof@plt+0x16438>
  419104:	add	w10, w9, #0x8
  419108:	cmn	w9, #0x8
  41910c:	str	w10, [x8, #24]
  419110:	b.gt	419518 <feof@plt+0x16438>
  419114:	ldr	x8, [x8, #8]
  419118:	add	x9, x8, x9
  41911c:	b	419524 <feof@plt+0x16444>
  419120:	ldr	x8, [sp, #56]
  419124:	ldr	x9, [x8]
  419128:	ldrb	w8, [x28, #67]
  41912c:	ldrsw	x10, [x9, #24]
  419130:	tbz	w10, #31, 419494 <feof@plt+0x163b4>
  419134:	add	w11, w10, #0x8
  419138:	cmn	w10, #0x8
  41913c:	str	w11, [x9, #24]
  419140:	b.gt	419494 <feof@plt+0x163b4>
  419144:	ldr	x9, [x9, #8]
  419148:	add	x10, x9, x10
  41914c:	b	4194a0 <feof@plt+0x163c0>
  419150:	ldr	x8, [x28, #48]
  419154:	cbz	x8, 419c00 <feof@plt+0x16b20>
  419158:	ldr	x9, [sp, #64]
  41915c:	ldr	x1, [sp, #32]
  419160:	and	w4, w21, #0x1
  419164:	and	w5, w19, #0x1
  419168:	and	w6, w26, #0x1
  41916c:	add	x7, sp, #0x6c
  419170:	mov	x0, x28
  419174:	mov	w3, w27
  419178:	str	x9, [sp]
  41917c:	blr	x8
  419180:	ldr	x27, [sp, #72]
  419184:	tbnz	w0, #0, 419a6c <feof@plt+0x1698c>
  419188:	b	419c18 <feof@plt+0x16b38>
  41918c:	ldr	x9, [x8]
  419190:	add	x10, x9, #0x8
  419194:	str	x10, [x8]
  419198:	ldr	d0, [x9]
  41919c:	ldr	x27, [sp, #72]
  4191a0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4191a4:	add	x1, x1, #0xb9b
  4191a8:	bl	402c30 <sprintf@plt>
  4191ac:	b	419a4c <feof@plt+0x1696c>
  4191b0:	ldr	x9, [x8]
  4191b4:	add	x10, x9, #0x8
  4191b8:	str	x10, [x8]
  4191bc:	ldr	w1, [x9]
  4191c0:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  4191c4:	add	x9, x9, #0xe98
  4191c8:	ldr	x27, [sp, #72]
  4191cc:	and	x8, x1, #0xff
  4191d0:	ldrh	w8, [x9, x8, lsl #1]
  4191d4:	tbnz	w8, #4, 419634 <feof@plt+0x16554>
  4191d8:	ldrb	w8, [sp, #108]
  4191dc:	cbz	w8, 419634 <feof@plt+0x16554>
  4191e0:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  4191e4:	and	x8, x1, #0xff
  4191e8:	add	x9, x9, #0xe98
  4191ec:	ldrh	w8, [x9, x8, lsl #1]
  4191f0:	strb	w1, [sp, #104]
  4191f4:	strb	wzr, [sp, #105]
  4191f8:	tbnz	w8, #4, 419810 <feof@plt+0x16730>
  4191fc:	and	w2, w1, #0xff
  419200:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419204:	sub	x0, x29, #0x20
  419208:	add	x1, x1, #0xbd5
  41920c:	bl	402c30 <sprintf@plt>
  419210:	sub	x8, x29, #0x20
  419214:	add	x2, x8, w0, sxtw
  419218:	sub	x1, x29, #0x20
  41921c:	mov	x0, x28
  419220:	bl	41a800 <feof@plt+0x17720>
  419224:	ldr	x2, [sp, #16]
  419228:	mov	x1, x2
  41922c:	b	419818 <feof@plt+0x16738>
  419230:	ldr	x9, [x8]
  419234:	add	x10, x9, #0x8
  419238:	str	x10, [x8]
  41923c:	ldr	x8, [x28, #8]
  419240:	ldr	x27, [sp, #72]
  419244:	ldr	x2, [x9]
  419248:	add	x0, x8, #0xcc
  41924c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  419250:	add	x1, x1, #0x911
  419254:	bl	402c30 <sprintf@plt>
  419258:	b	419a4c <feof@plt+0x1696c>
  41925c:	ldr	x9, [x8]
  419260:	add	x10, x9, #0x8
  419264:	str	x10, [x8]
  419268:	ldr	x2, [x9]
  41926c:	ldr	x27, [sp, #72]
  419270:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419274:	add	x1, x1, #0xb8f
  419278:	bl	402c30 <sprintf@plt>
  41927c:	b	419a4c <feof@plt+0x1696c>
  419280:	ldr	x9, [x8]
  419284:	mov	w26, w22
  419288:	add	x10, x9, #0x8
  41928c:	str	x10, [x8]
  419290:	ldr	x8, [sp, #56]
  419294:	ldr	x22, [x9]
  419298:	ldr	x27, [sp, #72]
  41929c:	ldr	x8, [x8]
  4192a0:	ldrsw	x10, [x8, #24]
  4192a4:	tbz	w10, #31, 4192cc <feof@plt+0x161ec>
  4192a8:	add	w9, w10, #0x8
  4192ac:	cmn	w10, #0x8
  4192b0:	str	w9, [x8, #24]
  4192b4:	b.gt	4192cc <feof@plt+0x161ec>
  4192b8:	ldr	x8, [x8, #8]
  4192bc:	add	x9, x8, x10
  4192c0:	ldr	w25, [x9]
  4192c4:	cbnz	w25, 4192e0 <feof@plt+0x16200>
  4192c8:	b	41948c <feof@plt+0x163ac>
  4192cc:	ldr	x9, [x8]
  4192d0:	add	x10, x9, #0x8
  4192d4:	str	x10, [x8]
  4192d8:	ldr	w25, [x9]
  4192dc:	cbz	w25, 41948c <feof@plt+0x163ac>
  4192e0:	mov	x19, xzr
  4192e4:	sub	w21, w25, #0x1
  4192e8:	b	419318 <feof@plt+0x16238>
  4192ec:	add	x9, x8, #0x1
  4192f0:	str	x9, [x24, #24]
  4192f4:	mov	w9, #0x20                  	// #32
  4192f8:	strb	w9, [x8]
  4192fc:	ldr	x8, [x23]
  419300:	ldr	w9, [x8, #200]
  419304:	add	w9, w9, #0x1
  419308:	str	w9, [x8, #200]
  41930c:	add	x19, x19, #0x1
  419310:	cmp	x25, x19
  419314:	b.eq	41948c <feof@plt+0x163ac>  // b.none
  419318:	ldr	x8, [x28, #8]
  41931c:	ldr	w2, [x22, x19, lsl #2]
  419320:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  419324:	add	x1, x1, #0x2b6
  419328:	add	x0, x8, #0xcc
  41932c:	bl	402c30 <sprintf@plt>
  419330:	ldr	x8, [x28, #8]
  419334:	add	x20, x8, #0xcc
  419338:	mov	x0, x20
  41933c:	bl	402a50 <strlen@plt>
  419340:	add	x2, x20, x0
  419344:	mov	x0, x28
  419348:	mov	x1, x20
  41934c:	bl	41a800 <feof@plt+0x17720>
  419350:	cmp	x19, x21
  419354:	b.cs	41930c <feof@plt+0x1622c>  // b.hs, b.nlast
  419358:	ldr	w8, [x28, #40]
  41935c:	cmp	w8, #0x1
  419360:	b.lt	4193bc <feof@plt+0x162dc>  // b.tstop
  419364:	ldr	x8, [x28, #8]
  419368:	ldr	w9, [x28, #28]
  41936c:	ldr	w10, [x8, #200]
  419370:	cmp	w9, w10
  419374:	b.gt	4193bc <feof@plt+0x162dc>
  419378:	ldr	x24, [x8, #176]
  41937c:	ldp	x8, x9, [x24, #24]
  419380:	cmp	x9, x8
  419384:	b.ne	419398 <feof@plt+0x162b8>  // b.any
  419388:	mov	w1, #0x1                   	// #1
  41938c:	mov	x0, x24
  419390:	bl	4615ac <_obstack_newchunk@@Base>
  419394:	ldr	x8, [x24, #24]
  419398:	add	x9, x8, #0x1
  41939c:	str	x9, [x24, #24]
  4193a0:	mov	w9, #0xa                   	// #10
  4193a4:	strb	w9, [x8]
  4193a8:	ldr	x8, [x28, #8]
  4193ac:	strb	wzr, [x28, #65]
  4193b0:	str	wzr, [x8, #200]
  4193b4:	ldr	w8, [sp, #52]
  4193b8:	tbnz	w8, #6, 419400 <feof@plt+0x16320>
  4193bc:	ldr	x8, [x23]
  4193c0:	ldr	x24, [x8, #176]
  4193c4:	ldp	x8, x9, [x24, #24]
  4193c8:	cmp	x9, x8
  4193cc:	b.ne	4193e0 <feof@plt+0x16300>  // b.any
  4193d0:	mov	w1, #0x1                   	// #1
  4193d4:	mov	x0, x24
  4193d8:	bl	4615ac <_obstack_newchunk@@Base>
  4193dc:	ldr	x8, [x24, #24]
  4193e0:	add	x9, x8, #0x1
  4193e4:	str	x9, [x24, #24]
  4193e8:	mov	w9, #0x2c                  	// #44
  4193ec:	strb	w9, [x8]
  4193f0:	ldr	x8, [x23]
  4193f4:	ldr	w9, [x8, #200]
  4193f8:	add	w9, w9, #0x1
  4193fc:	str	w9, [x8, #200]
  419400:	ldr	w8, [x28, #40]
  419404:	cmp	w8, #0x1
  419408:	b.lt	419464 <feof@plt+0x16384>  // b.tstop
  41940c:	ldr	x8, [x28, #8]
  419410:	ldr	w9, [x28, #28]
  419414:	ldr	w10, [x8, #200]
  419418:	cmp	w9, w10
  41941c:	b.gt	419464 <feof@plt+0x16384>
  419420:	ldr	x24, [x8, #176]
  419424:	ldp	x8, x9, [x24, #24]
  419428:	cmp	x9, x8
  41942c:	b.ne	419440 <feof@plt+0x16360>  // b.any
  419430:	mov	w1, #0x1                   	// #1
  419434:	mov	x0, x24
  419438:	bl	4615ac <_obstack_newchunk@@Base>
  41943c:	ldr	x8, [x24, #24]
  419440:	add	x9, x8, #0x1
  419444:	str	x9, [x24, #24]
  419448:	mov	w9, #0xa                   	// #10
  41944c:	strb	w9, [x8]
  419450:	ldr	x8, [x28, #8]
  419454:	strb	wzr, [x28, #65]
  419458:	str	wzr, [x8, #200]
  41945c:	ldr	w8, [sp, #40]
  419460:	tbnz	w8, #6, 41930c <feof@plt+0x1622c>
  419464:	ldr	x8, [x23]
  419468:	ldr	x24, [x8, #176]
  41946c:	ldp	x8, x9, [x24, #24]
  419470:	cmp	x9, x8
  419474:	b.ne	4192ec <feof@plt+0x1620c>  // b.any
  419478:	mov	w1, #0x1                   	// #1
  41947c:	mov	x0, x24
  419480:	bl	4615ac <_obstack_newchunk@@Base>
  419484:	ldr	x8, [x24, #24]
  419488:	b	4192ec <feof@plt+0x1620c>
  41948c:	mov	w22, w26
  419490:	b	419a6c <feof@plt+0x1698c>
  419494:	ldr	x10, [x9]
  419498:	add	x11, x10, #0x8
  41949c:	str	x11, [x9]
  4194a0:	ldr	x20, [x10]
  4194a4:	ldr	x27, [sp, #72]
  4194a8:	cmp	w8, #0x0
  4194ac:	cset	w24, ne  // ne = any
  4194b0:	mov	x0, x20
  4194b4:	bl	402a50 <strlen@plt>
  4194b8:	mov	x2, x0
  4194bc:	mov	w0, w24
  4194c0:	mov	x1, x20
  4194c4:	bl	41260c <feof@plt+0xf52c>
  4194c8:	mov	x20, x0
  4194cc:	b	419a58 <feof@plt+0x16978>
  4194d0:	ldr	x9, [x8]
  4194d4:	add	x10, x9, #0x8
  4194d8:	str	x10, [x8]
  4194dc:	ldr	x2, [x9]
  4194e0:	ldr	x27, [sp, #72]
  4194e4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4194e8:	add	x1, x1, #0xb92
  4194ec:	bl	402c30 <sprintf@plt>
  4194f0:	b	419a4c <feof@plt+0x1696c>
  4194f4:	ldr	x9, [x8]
  4194f8:	add	x10, x9, #0x8
  4194fc:	str	x10, [x8]
  419500:	ldr	x2, [x9]
  419504:	ldr	x27, [sp, #72]
  419508:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41950c:	add	x1, x1, #0xb86
  419510:	bl	402c30 <sprintf@plt>
  419514:	b	419a4c <feof@plt+0x1696c>
  419518:	ldr	x9, [x8]
  41951c:	add	x10, x9, #0x8
  419520:	str	x10, [x8]
  419524:	ldr	x25, [x9]
  419528:	mov	x0, x25
  41952c:	bl	402a50 <strlen@plt>
  419530:	cbz	x0, 419820 <feof@plt+0x16740>
  419534:	mov	x24, x0
  419538:	mov	x1, x25
  41953c:	b	419574 <feof@plt+0x16494>
  419540:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419544:	sub	x0, x29, #0x20
  419548:	add	x1, x1, #0xbd5
  41954c:	bl	402c30 <sprintf@plt>
  419550:	sub	x8, x29, #0x20
  419554:	add	x2, x8, w0, sxtw
  419558:	sub	x1, x29, #0x20
  41955c:	mov	x0, x28
  419560:	bl	41a800 <feof@plt+0x17720>
  419564:	add	x1, x25, #0x1
  419568:	subs	x24, x24, #0x1
  41956c:	add	x25, x25, #0x1
  419570:	b.eq	419824 <feof@plt+0x16744>  // b.none
  419574:	ldrb	w2, [x25]
  419578:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  41957c:	add	x8, x8, #0xe98
  419580:	ldrh	w8, [x8, x2, lsl #1]
  419584:	tbnz	w8, #4, 419568 <feof@plt+0x16488>
  419588:	cmp	x1, x25
  41958c:	b.cs	419540 <feof@plt+0x16460>  // b.hs, b.nlast
  419590:	sub	x2, x25, #0x1
  419594:	mov	x0, x28
  419598:	bl	41a800 <feof@plt+0x17720>
  41959c:	ldrb	w2, [x25]
  4195a0:	b	419540 <feof@plt+0x16460>
  4195a4:	cmp	w27, #0x2
  4195a8:	b.eq	41988c <feof@plt+0x167ac>  // b.none
  4195ac:	cmp	w27, #0x1
  4195b0:	b.eq	418edc <feof@plt+0x15dfc>  // b.none
  4195b4:	cbnz	w27, 419688 <feof@plt+0x165a8>
  4195b8:	ldr	x8, [sp, #56]
  4195bc:	ldr	x10, [x23]
  4195c0:	ldr	x8, [x8]
  4195c4:	add	x0, x10, #0xcc
  4195c8:	ldrsw	x9, [x8, #24]
  4195cc:	tbz	w9, #31, 419980 <feof@plt+0x168a0>
  4195d0:	add	w10, w9, #0x8
  4195d4:	cmn	w9, #0x8
  4195d8:	str	w10, [x8, #24]
  4195dc:	b.gt	419980 <feof@plt+0x168a0>
  4195e0:	ldr	x8, [x8, #8]
  4195e4:	add	x9, x8, x9
  4195e8:	b	41998c <feof@plt+0x168ac>
  4195ec:	cmp	w27, #0x2
  4195f0:	b.eq	4198f4 <feof@plt+0x16814>  // b.none
  4195f4:	cmp	w27, #0x1
  4195f8:	b.eq	4198c0 <feof@plt+0x167e0>  // b.none
  4195fc:	cbnz	w27, 419688 <feof@plt+0x165a8>
  419600:	ldr	x8, [sp, #56]
  419604:	ldr	x10, [x23]
  419608:	ldr	x8, [x8]
  41960c:	add	x0, x10, #0xcc
  419610:	ldrsw	x9, [x8, #24]
  419614:	tbz	w9, #31, 4199e8 <feof@plt+0x16908>
  419618:	add	w10, w9, #0x8
  41961c:	cmn	w9, #0x8
  419620:	str	w10, [x8, #24]
  419624:	b.gt	4199e8 <feof@plt+0x16908>
  419628:	ldr	x8, [x8, #8]
  41962c:	add	x9, x8, x9
  419630:	b	4199f4 <feof@plt+0x16914>
  419634:	mov	x0, x28
  419638:	bl	41803c <feof@plt+0x14f5c>
  41963c:	b	419a6c <feof@plt+0x1698c>
  419640:	cmp	w27, #0x2
  419644:	b.eq	419928 <feof@plt+0x16848>  // b.none
  419648:	cmp	w27, #0x1
  41964c:	b.eq	418ff4 <feof@plt+0x15f14>  // b.none
  419650:	cbnz	w27, 419688 <feof@plt+0x165a8>
  419654:	ldr	x8, [sp, #56]
  419658:	ldr	x10, [x23]
  41965c:	ldr	x8, [x8]
  419660:	add	x0, x10, #0xcc
  419664:	ldrsw	x9, [x8, #24]
  419668:	tbz	w9, #31, 419a2c <feof@plt+0x1694c>
  41966c:	add	w10, w9, #0x8
  419670:	cmn	w9, #0x8
  419674:	str	w10, [x8, #24]
  419678:	b.gt	419a2c <feof@plt+0x1694c>
  41967c:	ldr	x8, [x8, #8]
  419680:	add	x9, x8, x9
  419684:	b	419a38 <feof@plt+0x16958>
  419688:	ldr	x27, [sp, #72]
  41968c:	b	419a6c <feof@plt+0x1698c>
  419690:	sub	x1, x29, #0x20
  419694:	mov	w2, #0xa                   	// #10
  419698:	mov	x0, x25
  41969c:	bl	402e90 <strtoul@plt>
  4196a0:	ldur	x8, [x29, #-32]
  4196a4:	ldrb	w8, [x8]
  4196a8:	cmp	w8, #0x73
  4196ac:	b.ne	419c30 <feof@plt+0x16b50>  // b.any
  4196b0:	ldr	x27, [sp, #72]
  4196b4:	b	419700 <feof@plt+0x16620>
  4196b8:	ldr	x9, [x8]
  4196bc:	add	x10, x9, #0x8
  4196c0:	str	x10, [x8]
  4196c4:	ldr	x2, [x9]
  4196c8:	ldr	x27, [sp, #72]
  4196cc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4196d0:	add	x1, x1, #0xb9e
  4196d4:	bl	402c30 <sprintf@plt>
  4196d8:	b	419a4c <feof@plt+0x1696c>
  4196dc:	ldr	x9, [x8]
  4196e0:	add	x10, x9, #0x8
  4196e4:	str	x10, [x8]
  4196e8:	add	w22, w22, #0x1
  4196ec:	add	x8, sp, #0x70
  4196f0:	ldr	x8, [x8, w22, uxtw #3]
  4196f4:	cmp	x11, x8
  4196f8:	b.ne	419c48 <feof@plt+0x16b68>  // b.any
  4196fc:	ldr	w0, [x9]
  419700:	ldr	x8, [sp, #56]
  419704:	ldr	x8, [x8]
  419708:	ldrsw	x9, [x8, #24]
  41970c:	tbz	w9, #31, 41973c <feof@plt+0x1665c>
  419710:	add	w10, w9, #0x8
  419714:	cmn	w9, #0x8
  419718:	str	w10, [x8, #24]
  41971c:	b.gt	41973c <feof@plt+0x1665c>
  419720:	ldr	x8, [x8, #8]
  419724:	add	x9, x8, x9
  419728:	ldr	x24, [x9]
  41972c:	tbz	w0, #31, 419750 <feof@plt+0x16670>
  419730:	mov	x0, x24
  419734:	bl	402a50 <strlen@plt>
  419738:	b	41975c <feof@plt+0x1667c>
  41973c:	ldr	x9, [x8]
  419740:	add	x10, x9, #0x8
  419744:	str	x10, [x8]
  419748:	ldr	x24, [x9]
  41974c:	tbnz	w0, #31, 419730 <feof@plt+0x16650>
  419750:	mov	w1, w0
  419754:	mov	x0, x24
  419758:	bl	403020 <strnlen@plt>
  41975c:	add	x2, x24, x0
  419760:	mov	x0, x28
  419764:	mov	x1, x24
  419768:	bl	419e54 <feof@plt+0x16d74>
  41976c:	b	419a6c <feof@plt+0x1698c>
  419770:	ldr	x27, [sp, #72]
  419774:	tbz	w9, #31, 419794 <feof@plt+0x166b4>
  419778:	add	w10, w9, #0x8
  41977c:	cmn	w9, #0x8
  419780:	str	w10, [x8, #24]
  419784:	b.gt	419794 <feof@plt+0x166b4>
  419788:	ldr	x8, [x8, #8]
  41978c:	add	x9, x8, x9
  419790:	b	4197a0 <feof@plt+0x166c0>
  419794:	ldr	x9, [x8]
  419798:	add	x10, x9, #0x8
  41979c:	str	x10, [x8]
  4197a0:	ldr	x20, [x9]
  4197a4:	b	419a54 <feof@plt+0x16974>
  4197a8:	ldr	x8, [sp, #56]
  4197ac:	ldr	x10, [x23]
  4197b0:	ldr	x8, [x8]
  4197b4:	add	x0, x10, #0xcc
  4197b8:	ldrsw	x9, [x8, #24]
  4197bc:	tbz	w9, #31, 419830 <feof@plt+0x16750>
  4197c0:	add	w10, w9, #0x8
  4197c4:	cmn	w9, #0x8
  4197c8:	str	w10, [x8, #24]
  4197cc:	b.gt	419830 <feof@plt+0x16750>
  4197d0:	ldr	x8, [x8, #8]
  4197d4:	add	x9, x8, x9
  4197d8:	b	41983c <feof@plt+0x1675c>
  4197dc:	ldr	x8, [sp, #56]
  4197e0:	ldr	x10, [x23]
  4197e4:	ldr	x8, [x8]
  4197e8:	add	x0, x10, #0xcc
  4197ec:	ldrsw	x9, [x8, #24]
  4197f0:	tbz	w9, #31, 419848 <feof@plt+0x16768>
  4197f4:	add	w10, w9, #0x8
  4197f8:	cmn	w9, #0x8
  4197fc:	str	w10, [x8, #24]
  419800:	b.gt	419848 <feof@plt+0x16768>
  419804:	ldr	x8, [x8, #8]
  419808:	add	x9, x8, x9
  41980c:	b	419854 <feof@plt+0x16774>
  419810:	ldr	x2, [sp, #16]
  419814:	add	x1, sp, #0x68
  419818:	mov	x0, x28
  41981c:	b	419a68 <feof@plt+0x16988>
  419820:	mov	x1, x25
  419824:	mov	x0, x28
  419828:	mov	x2, x25
  41982c:	b	419a68 <feof@plt+0x16988>
  419830:	ldr	x9, [x8]
  419834:	add	x10, x9, #0x8
  419838:	str	x10, [x8]
  41983c:	ldr	x27, [sp, #72]
  419840:	ldr	x2, [x9]
  419844:	b	41924c <feof@plt+0x1616c>
  419848:	ldr	x9, [x8]
  41984c:	add	x10, x9, #0x8
  419850:	str	x10, [x8]
  419854:	ldr	x2, [x9]
  419858:	ldr	x27, [sp, #72]
  41985c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419860:	add	x1, x1, #0xb81
  419864:	bl	402c30 <sprintf@plt>
  419868:	b	419a4c <feof@plt+0x1696c>
  41986c:	ldr	x9, [x8]
  419870:	add	x10, x9, #0x8
  419874:	str	x10, [x8]
  419878:	ldr	x27, [sp, #72]
  41987c:	ldr	w2, [x9]
  419880:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  419884:	add	x1, x1, #0x229
  419888:	b	419a48 <feof@plt+0x16968>
  41988c:	ldr	x8, [sp, #56]
  419890:	ldr	x10, [x23]
  419894:	ldr	x8, [x8]
  419898:	add	x0, x10, #0xcc
  41989c:	ldrsw	x9, [x8, #24]
  4198a0:	tbz	w9, #31, 41995c <feof@plt+0x1687c>
  4198a4:	add	w10, w9, #0x8
  4198a8:	cmn	w9, #0x8
  4198ac:	str	w10, [x8, #24]
  4198b0:	b.gt	41995c <feof@plt+0x1687c>
  4198b4:	ldr	x8, [x8, #8]
  4198b8:	add	x9, x8, x9
  4198bc:	b	419968 <feof@plt+0x16888>
  4198c0:	ldr	x8, [sp, #56]
  4198c4:	ldr	x10, [x23]
  4198c8:	ldr	x8, [x8]
  4198cc:	add	x0, x10, #0xcc
  4198d0:	ldrsw	x9, [x8, #24]
  4198d4:	tbz	w9, #31, 4199a0 <feof@plt+0x168c0>
  4198d8:	add	w10, w9, #0x8
  4198dc:	cmn	w9, #0x8
  4198e0:	str	w10, [x8, #24]
  4198e4:	b.gt	4199a0 <feof@plt+0x168c0>
  4198e8:	ldr	x8, [x8, #8]
  4198ec:	add	x9, x8, x9
  4198f0:	b	4199ac <feof@plt+0x168cc>
  4198f4:	ldr	x8, [sp, #56]
  4198f8:	ldr	x10, [x23]
  4198fc:	ldr	x8, [x8]
  419900:	add	x0, x10, #0xcc
  419904:	ldrsw	x9, [x8, #24]
  419908:	tbz	w9, #31, 4199c4 <feof@plt+0x168e4>
  41990c:	add	w10, w9, #0x8
  419910:	cmn	w9, #0x8
  419914:	str	w10, [x8, #24]
  419918:	b.gt	4199c4 <feof@plt+0x168e4>
  41991c:	ldr	x8, [x8, #8]
  419920:	add	x9, x8, x9
  419924:	b	4199d0 <feof@plt+0x168f0>
  419928:	ldr	x8, [sp, #56]
  41992c:	ldr	x10, [x23]
  419930:	ldr	x8, [x8]
  419934:	add	x0, x10, #0xcc
  419938:	ldrsw	x9, [x8, #24]
  41993c:	tbz	w9, #31, 419a08 <feof@plt+0x16928>
  419940:	add	w10, w9, #0x8
  419944:	cmn	w9, #0x8
  419948:	str	w10, [x8, #24]
  41994c:	b.gt	419a08 <feof@plt+0x16928>
  419950:	ldr	x8, [x8, #8]
  419954:	add	x9, x8, x9
  419958:	b	419a14 <feof@plt+0x16934>
  41995c:	ldr	x9, [x8]
  419960:	add	x10, x9, #0x8
  419964:	str	x10, [x8]
  419968:	ldr	x2, [x9]
  41996c:	ldr	x27, [sp, #72]
  419970:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419974:	add	x1, x1, #0xb96
  419978:	bl	402c30 <sprintf@plt>
  41997c:	b	419a4c <feof@plt+0x1696c>
  419980:	ldr	x9, [x8]
  419984:	add	x10, x9, #0x8
  419988:	str	x10, [x8]
  41998c:	ldr	x27, [sp, #72]
  419990:	ldr	w2, [x9]
  419994:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  419998:	add	x1, x1, #0x372
  41999c:	b	419a48 <feof@plt+0x16968>
  4199a0:	ldr	x9, [x8]
  4199a4:	add	x10, x9, #0x8
  4199a8:	str	x10, [x8]
  4199ac:	ldr	x2, [x9]
  4199b0:	ldr	x27, [sp, #72]
  4199b4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4199b8:	add	x1, x1, #0xba6
  4199bc:	bl	402c30 <sprintf@plt>
  4199c0:	b	419a4c <feof@plt+0x1696c>
  4199c4:	ldr	x9, [x8]
  4199c8:	add	x10, x9, #0x8
  4199cc:	str	x10, [x8]
  4199d0:	ldr	x2, [x9]
  4199d4:	ldr	x27, [sp, #72]
  4199d8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  4199dc:	add	x1, x1, #0xbaa
  4199e0:	bl	402c30 <sprintf@plt>
  4199e4:	b	419a4c <feof@plt+0x1696c>
  4199e8:	ldr	x9, [x8]
  4199ec:	add	x10, x9, #0x8
  4199f0:	str	x10, [x8]
  4199f4:	ldr	x27, [sp, #72]
  4199f8:	ldr	w2, [x9]
  4199fc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419a00:	add	x1, x1, #0xba3
  419a04:	b	419a48 <feof@plt+0x16968>
  419a08:	ldr	x9, [x8]
  419a0c:	add	x10, x9, #0x8
  419a10:	str	x10, [x8]
  419a14:	ldr	x2, [x9]
  419a18:	ldr	x27, [sp, #72]
  419a1c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419a20:	add	x1, x1, #0xb8a
  419a24:	bl	402c30 <sprintf@plt>
  419a28:	b	419a4c <feof@plt+0x1696c>
  419a2c:	ldr	x9, [x8]
  419a30:	add	x10, x9, #0x8
  419a34:	str	x10, [x8]
  419a38:	ldr	x27, [sp, #72]
  419a3c:	ldr	w2, [x9]
  419a40:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  419a44:	add	x1, x1, #0x728
  419a48:	bl	402c30 <sprintf@plt>
  419a4c:	ldr	x8, [x28, #8]
  419a50:	add	x20, x8, #0xcc
  419a54:	mov	x0, x20
  419a58:	bl	402a50 <strlen@plt>
  419a5c:	add	x2, x20, x0
  419a60:	mov	x0, x28
  419a64:	mov	x1, x20
  419a68:	bl	41a800 <feof@plt+0x17720>
  419a6c:	ldrb	w8, [sp, #108]
  419a70:	cbz	w8, 419ab4 <feof@plt+0x169d4>
  419a74:	ldrb	w0, [x28, #67]
  419a78:	bl	412690 <feof@plt+0xf5b0>
  419a7c:	mov	x20, x0
  419a80:	bl	402a50 <strlen@plt>
  419a84:	add	x2, x20, x0
  419a88:	mov	x0, x28
  419a8c:	mov	x1, x20
  419a90:	bl	41a800 <feof@plt+0x17720>
  419a94:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  419a98:	ldr	x20, [x8, #1376]
  419a9c:	mov	x0, x20
  419aa0:	bl	402a50 <strlen@plt>
  419aa4:	add	x2, x20, x0
  419aa8:	mov	x0, x28
  419aac:	mov	x1, x20
  419ab0:	bl	41a800 <feof@plt+0x17720>
  419ab4:	ldp	x8, x9, [x27, #112]
  419ab8:	cmp	x9, x8
  419abc:	b.ne	418ce4 <feof@plt+0x15c04>  // b.any
  419ac0:	ldr	x0, [sp, #88]
  419ac4:	mov	w1, #0x1                   	// #1
  419ac8:	bl	4615ac <_obstack_newchunk@@Base>
  419acc:	ldr	x8, [sp, #96]
  419ad0:	ldr	x8, [x8]
  419ad4:	b	418ce4 <feof@plt+0x15c04>
  419ad8:	ldr	x0, [x28, #56]
  419adc:	cbz	x0, 419af0 <feof@plt+0x16a10>
  419ae0:	ldr	x8, [x0]
  419ae4:	mov	x1, x28
  419ae8:	ldr	x8, [x8, #16]
  419aec:	blr	x8
  419af0:	ldr	x8, [sp, #24]
  419af4:	str	x27, [x27, #176]
  419af8:	str	wzr, [x27, #200]
  419afc:	strb	wzr, [x28, #64]
  419b00:	stur	x8, [x28, #36]
  419b04:	str	wzr, [x28, #32]
  419b08:	ldp	x20, x19, [sp, #464]
  419b0c:	ldp	x22, x21, [sp, #448]
  419b10:	ldp	x24, x23, [sp, #432]
  419b14:	ldp	x26, x25, [sp, #416]
  419b18:	ldp	x28, x27, [sp, #400]
  419b1c:	ldp	x29, x30, [sp, #384]
  419b20:	add	sp, sp, #0x1e0
  419b24:	ret
  419b28:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419b2c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419b30:	add	x0, x0, #0xb33
  419b34:	add	x2, x2, #0xb71
  419b38:	mov	w1, #0x4c0                 	// #1216
  419b3c:	bl	40f560 <feof@plt+0xc480>
  419b40:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419b44:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419b48:	add	x0, x0, #0xb33
  419b4c:	add	x2, x2, #0xb71
  419b50:	mov	w1, #0x4c5                 	// #1221
  419b54:	bl	40f560 <feof@plt+0xc480>
  419b58:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419b5c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419b60:	add	x0, x0, #0xb33
  419b64:	add	x2, x2, #0xb71
  419b68:	mov	w1, #0x4ca                 	// #1226
  419b6c:	bl	40f560 <feof@plt+0xc480>
  419b70:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419b74:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419b78:	add	x0, x0, #0xb33
  419b7c:	add	x2, x2, #0xb71
  419b80:	mov	w1, #0x4d5                 	// #1237
  419b84:	bl	40f560 <feof@plt+0xc480>
  419b88:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419b8c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419b90:	add	x0, x0, #0xb33
  419b94:	add	x2, x2, #0xb71
  419b98:	mov	w1, #0x4cf                 	// #1231
  419b9c:	bl	40f560 <feof@plt+0xc480>
  419ba0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419ba4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419ba8:	add	x0, x0, #0xb33
  419bac:	add	x2, x2, #0xb71
  419bb0:	mov	w1, #0x4dc                 	// #1244
  419bb4:	bl	40f560 <feof@plt+0xc480>
  419bb8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419bbc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419bc0:	add	x0, x0, #0xb33
  419bc4:	add	x2, x2, #0xb71
  419bc8:	mov	w1, #0x41e                 	// #1054
  419bcc:	bl	40f560 <feof@plt+0xc480>
  419bd0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419bd4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419bd8:	add	x0, x0, #0xb33
  419bdc:	add	x2, x2, #0xb71
  419be0:	mov	w1, #0x54f                 	// #1359
  419be4:	bl	40f560 <feof@plt+0xc480>
  419be8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419bec:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419bf0:	add	x0, x0, #0xb33
  419bf4:	add	x2, x2, #0xb71
  419bf8:	mov	w1, #0x551                 	// #1361
  419bfc:	bl	40f560 <feof@plt+0xc480>
  419c00:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c04:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c08:	add	x0, x0, #0xb33
  419c0c:	add	x2, x2, #0xb71
  419c10:	mov	w1, #0x56d                 	// #1389
  419c14:	bl	40f560 <feof@plt+0xc480>
  419c18:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c1c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c20:	add	x0, x0, #0xb33
  419c24:	add	x2, x2, #0xb71
  419c28:	mov	w1, #0x571                 	// #1393
  419c2c:	bl	40f560 <feof@plt+0xc480>
  419c30:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c34:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c38:	add	x0, x0, #0xb33
  419c3c:	add	x2, x2, #0xb71
  419c40:	mov	w1, #0x54b                 	// #1355
  419c44:	bl	40f560 <feof@plt+0xc480>
  419c48:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c4c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c50:	add	x0, x0, #0xb33
  419c54:	add	x2, x2, #0xb71
  419c58:	mov	w1, #0x555                 	// #1365
  419c5c:	bl	40f560 <feof@plt+0xc480>
  419c60:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c64:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c68:	add	x0, x0, #0xb33
  419c6c:	add	x2, x2, #0xb71
  419c70:	mov	w1, #0x4a4                 	// #1188
  419c74:	bl	40f560 <feof@plt+0xc480>
  419c78:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c7c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c80:	add	x0, x0, #0xb33
  419c84:	add	x2, x2, #0xb71
  419c88:	mov	w1, #0x450                 	// #1104
  419c8c:	bl	40f560 <feof@plt+0xc480>
  419c90:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419c94:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419c98:	add	x0, x0, #0xb33
  419c9c:	add	x2, x2, #0xb71
  419ca0:	mov	w1, #0x464                 	// #1124
  419ca4:	bl	40f560 <feof@plt+0xc480>
  419ca8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419cac:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419cb0:	add	x0, x0, #0xb33
  419cb4:	add	x2, x2, #0xb71
  419cb8:	mov	w1, #0x45a                 	// #1114
  419cbc:	bl	40f560 <feof@plt+0xc480>
  419cc0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419cc4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419cc8:	add	x0, x0, #0xb33
  419ccc:	add	x2, x2, #0xb71
  419cd0:	mov	w1, #0x45e                 	// #1118
  419cd4:	bl	40f560 <feof@plt+0xc480>
  419cd8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419cdc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419ce0:	add	x0, x0, #0xb33
  419ce4:	add	x2, x2, #0xb71
  419ce8:	mov	w1, #0x466                 	// #1126
  419cec:	bl	40f560 <feof@plt+0xc480>
  419cf0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419cf4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419cf8:	add	x0, x0, #0xb33
  419cfc:	add	x2, x2, #0xb71
  419d00:	mov	w1, #0x467                 	// #1127
  419d04:	bl	40f560 <feof@plt+0xc480>
  419d08:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d0c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419d10:	add	x0, x0, #0xb33
  419d14:	add	x2, x2, #0xb71
  419d18:	mov	w1, #0x480                 	// #1152
  419d1c:	bl	40f560 <feof@plt+0xc480>
  419d20:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d24:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419d28:	add	x0, x0, #0xb33
  419d2c:	add	x2, x2, #0xb71
  419d30:	mov	w1, #0x492                 	// #1170
  419d34:	bl	40f560 <feof@plt+0xc480>
  419d38:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d3c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419d40:	add	x0, x0, #0xb33
  419d44:	add	x2, x2, #0xb71
  419d48:	mov	w1, #0x47c                 	// #1148
  419d4c:	bl	40f560 <feof@plt+0xc480>
  419d50:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d54:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419d58:	add	x0, x0, #0xb33
  419d5c:	add	x2, x2, #0xb71
  419d60:	mov	w1, #0x489                 	// #1161
  419d64:	bl	40f560 <feof@plt+0xc480>
  419d68:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d6c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419d70:	add	x0, x0, #0xb33
  419d74:	add	x2, x2, #0xb71
  419d78:	mov	w1, #0x48a                 	// #1162
  419d7c:	bl	40f560 <feof@plt+0xc480>
  419d80:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d84:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419d88:	add	x0, x0, #0xb33
  419d8c:	add	x2, x2, #0xb71
  419d90:	mov	w1, #0x48b                 	// #1163
  419d94:	bl	40f560 <feof@plt+0xc480>
  419d98:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  419d9c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  419da0:	add	x0, x0, #0xb33
  419da4:	add	x2, x2, #0xb71
  419da8:	mov	w1, #0x496                 	// #1174
  419dac:	bl	40f560 <feof@plt+0xc480>
  419db0:	stp	x29, x30, [sp, #-48]!
  419db4:	str	x21, [sp, #16]
  419db8:	stp	x20, x19, [sp, #32]
  419dbc:	mov	x29, sp
  419dc0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  419dc4:	ldr	x20, [x8, #1368]
  419dc8:	mov	x21, x0
  419dcc:	mov	w19, w1
  419dd0:	mov	x0, x20
  419dd4:	bl	402a50 <strlen@plt>
  419dd8:	add	x2, x20, x0
  419ddc:	mov	x0, x21
  419de0:	mov	x1, x20
  419de4:	bl	41a800 <feof@plt+0x17720>
  419de8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  419dec:	and	w0, w19, #0x1
  419df0:	add	x1, x1, #0xd49
  419df4:	mov	w2, #0x5                   	// #5
  419df8:	bl	41260c <feof@plt+0xf52c>
  419dfc:	mov	x19, x0
  419e00:	bl	402a50 <strlen@plt>
  419e04:	add	x2, x19, x0
  419e08:	mov	x0, x21
  419e0c:	mov	x1, x19
  419e10:	ldp	x20, x19, [sp, #32]
  419e14:	ldr	x21, [sp, #16]
  419e18:	ldp	x29, x30, [sp], #48
  419e1c:	b	41a800 <feof@plt+0x17720>
  419e20:	stp	x29, x30, [sp, #-32]!
  419e24:	stp	x20, x19, [sp, #16]
  419e28:	mov	x29, sp
  419e2c:	mov	x20, x0
  419e30:	mov	x0, x1
  419e34:	mov	x19, x1
  419e38:	bl	402a50 <strlen@plt>
  419e3c:	add	x2, x19, x0
  419e40:	mov	x0, x20
  419e44:	mov	x1, x19
  419e48:	ldp	x20, x19, [sp, #16]
  419e4c:	ldp	x29, x30, [sp], #32
  419e50:	b	41a800 <feof@plt+0x17720>
  419e54:	stp	x29, x30, [sp, #-64]!
  419e58:	str	x23, [sp, #16]
  419e5c:	stp	x22, x21, [sp, #32]
  419e60:	stp	x20, x19, [sp, #48]
  419e64:	mov	x29, sp
  419e68:	ldr	x8, [x0, #8]
  419e6c:	mov	x20, x2
  419e70:	mov	x21, x0
  419e74:	mov	x19, x1
  419e78:	ldr	w8, [x8, #200]
  419e7c:	cbz	w8, 419f18 <feof@plt+0x16e38>
  419e80:	ldr	x22, [x21, #8]
  419e84:	sub	x23, x20, x19
  419e88:	sxtw	x20, w23
  419e8c:	ldr	x21, [x22, #176]
  419e90:	ldp	x0, x8, [x21, #24]
  419e94:	sub	x8, x8, x0
  419e98:	cmp	x8, x20
  419e9c:	b.cs	419eb0 <feof@plt+0x16dd0>  // b.hs, b.nlast
  419ea0:	mov	x0, x21
  419ea4:	mov	x1, x20
  419ea8:	bl	4615ac <_obstack_newchunk@@Base>
  419eac:	ldr	x0, [x21, #24]
  419eb0:	mov	x1, x19
  419eb4:	mov	x2, x20
  419eb8:	bl	4029c0 <memcpy@plt>
  419ebc:	ldr	x8, [x21, #24]
  419ec0:	cmp	w23, #0x1
  419ec4:	add	x8, x8, x20
  419ec8:	str	x8, [x21, #24]
  419ecc:	b.lt	419f04 <feof@plt+0x16e24>  // b.tstop
  419ed0:	and	x8, x23, #0xffffffff
  419ed4:	b	419ef0 <feof@plt+0x16e10>
  419ed8:	ldr	w9, [x22, #200]
  419edc:	add	w9, w9, #0x1
  419ee0:	subs	x8, x8, #0x1
  419ee4:	add	x19, x19, #0x1
  419ee8:	str	w9, [x22, #200]
  419eec:	b.eq	419f04 <feof@plt+0x16e24>  // b.none
  419ef0:	ldrb	w9, [x19]
  419ef4:	cmp	w9, #0xa
  419ef8:	b.ne	419ed8 <feof@plt+0x16df8>  // b.any
  419efc:	mov	w9, wzr
  419f00:	b	419ee0 <feof@plt+0x16e00>
  419f04:	ldp	x20, x19, [sp, #48]
  419f08:	ldp	x22, x21, [sp, #32]
  419f0c:	ldr	x23, [sp, #16]
  419f10:	ldp	x29, x30, [sp], #64
  419f14:	ret
  419f18:	mov	x0, x21
  419f1c:	bl	41a350 <feof@plt+0x17270>
  419f20:	ldr	w8, [x21, #40]
  419f24:	cmp	w8, #0x1
  419f28:	b.lt	419e80 <feof@plt+0x16da0>  // b.tstop
  419f2c:	cmp	x19, x20
  419f30:	b.eq	419e80 <feof@plt+0x16da0>  // b.none
  419f34:	ldrb	w8, [x19]
  419f38:	cmp	w8, #0x20
  419f3c:	b.ne	419e80 <feof@plt+0x16da0>  // b.any
  419f40:	add	x19, x19, #0x1
  419f44:	cmp	x20, x19
  419f48:	b.ne	419f34 <feof@plt+0x16e54>  // b.any
  419f4c:	mov	x19, x20
  419f50:	b	419e80 <feof@plt+0x16da0>
  419f54:	stp	x29, x30, [sp, #-32]!
  419f58:	stp	x20, x19, [sp, #16]
  419f5c:	mov	x29, sp
  419f60:	mov	x19, x0
  419f64:	and	w0, w1, #0x1
  419f68:	bl	412690 <feof@plt+0xf5b0>
  419f6c:	mov	x20, x0
  419f70:	bl	402a50 <strlen@plt>
  419f74:	add	x2, x20, x0
  419f78:	mov	x0, x19
  419f7c:	mov	x1, x20
  419f80:	bl	41a800 <feof@plt+0x17720>
  419f84:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  419f88:	ldr	x20, [x8, #1376]
  419f8c:	mov	x0, x20
  419f90:	bl	402a50 <strlen@plt>
  419f94:	add	x2, x20, x0
  419f98:	mov	x0, x19
  419f9c:	mov	x1, x20
  419fa0:	ldp	x20, x19, [sp, #16]
  419fa4:	ldp	x29, x30, [sp], #32
  419fa8:	b	41a800 <feof@plt+0x17720>
  419fac:	stp	x29, x30, [sp, #-64]!
  419fb0:	str	x23, [sp, #16]
  419fb4:	stp	x22, x21, [sp, #32]
  419fb8:	stp	x20, x19, [sp, #48]
  419fbc:	mov	x29, sp
  419fc0:	ldr	x22, [x0, #8]
  419fc4:	ldr	x8, [x22, #176]
  419fc8:	cmp	x8, x22
  419fcc:	b.ne	41a068 <feof@plt+0x16f88>  // b.any
  419fd0:	ldr	w8, [x22, #200]
  419fd4:	cbnz	w8, 41a080 <feof@plt+0x16fa0>
  419fd8:	ldr	x19, [x22, #184]
  419fdc:	ldr	x21, [x19, #8]
  419fe0:	cbz	x21, 41a014 <feof@plt+0x16f34>
  419fe4:	mov	x20, x0
  419fe8:	mov	w23, #0x1                   	// #1
  419fec:	mov	x0, x21
  419ff0:	bl	402a50 <strlen@plt>
  419ff4:	add	x2, x21, x0
  419ff8:	mov	x0, x20
  419ffc:	mov	x1, x21
  41a000:	bl	41a800 <feof@plt+0x17720>
  41a004:	add	x8, x19, w23, uxtw #3
  41a008:	ldr	x21, [x8, #8]
  41a00c:	add	w23, w23, #0x1
  41a010:	cbnz	x21, 419fec <feof@plt+0x16f0c>
  41a014:	ldr	x8, [x22, #96]
  41a018:	ldr	x9, [x19]
  41a01c:	cmp	x8, x19
  41a020:	str	x9, [x22, #184]
  41a024:	b.cs	41a04c <feof@plt+0x16f6c>  // b.hs, b.nlast
  41a028:	ldr	x8, [x22, #120]
  41a02c:	cmp	x8, x19
  41a030:	b.ls	41a04c <feof@plt+0x16f6c>  // b.plast
  41a034:	stp	x19, x19, [x22, #104]
  41a038:	ldp	x20, x19, [sp, #48]
  41a03c:	ldp	x22, x21, [sp, #32]
  41a040:	ldr	x23, [sp, #16]
  41a044:	ldp	x29, x30, [sp], #64
  41a048:	ret
  41a04c:	add	x0, x22, #0x58
  41a050:	mov	x1, x19
  41a054:	ldp	x20, x19, [sp, #48]
  41a058:	ldp	x22, x21, [sp, #32]
  41a05c:	ldr	x23, [sp, #16]
  41a060:	ldp	x29, x30, [sp], #64
  41a064:	b	461734 <_obstack_free@@Base>
  41a068:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41a06c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41a070:	add	x0, x0, #0xb33
  41a074:	add	x2, x2, #0xbaf
  41a078:	mov	w1, #0x595                 	// #1429
  41a07c:	bl	40f560 <feof@plt+0xc480>
  41a080:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41a084:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41a088:	add	x0, x0, #0xb33
  41a08c:	add	x2, x2, #0xbaf
  41a090:	mov	w1, #0x596                 	// #1430
  41a094:	bl	40f560 <feof@plt+0xc480>
  41a098:	stp	x29, x30, [sp, #-32]!
  41a09c:	stp	x20, x19, [sp, #16]
  41a0a0:	mov	x29, sp
  41a0a4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41a0a8:	ldr	d0, [x8, #2856]
  41a0ac:	ldur	x20, [x0, #36]
  41a0b0:	mov	x19, x0
  41a0b4:	stur	d0, [x0, #36]
  41a0b8:	bl	4184a0 <feof@plt+0x153c0>
  41a0bc:	mov	x0, x19
  41a0c0:	bl	419fac <feof@plt+0x16ecc>
  41a0c4:	stur	x20, [x19, #36]
  41a0c8:	ldp	x20, x19, [sp, #16]
  41a0cc:	ldp	x29, x30, [sp], #32
  41a0d0:	ret
  41a0d4:	stp	x29, x30, [sp, #-48]!
  41a0d8:	str	x21, [sp, #16]
  41a0dc:	stp	x20, x19, [sp, #32]
  41a0e0:	mov	x29, sp
  41a0e4:	ldr	x21, [x0, #8]
  41a0e8:	strb	wzr, [x0, #64]
  41a0ec:	str	wzr, [x0, #32]
  41a0f0:	ldrb	w8, [x21, #332]
  41a0f4:	cbz	w8, 41a188 <feof@plt+0x170a8>
  41a0f8:	ldr	x20, [x21, #176]
  41a0fc:	mov	x19, x0
  41a100:	ldp	x8, x9, [x20, #24]
  41a104:	cmp	x9, x8
  41a108:	b.ne	41a11c <feof@plt+0x1703c>  // b.any
  41a10c:	mov	w1, #0x1                   	// #1
  41a110:	mov	x0, x20
  41a114:	bl	4615ac <_obstack_newchunk@@Base>
  41a118:	ldr	x8, [x20, #24]
  41a11c:	add	x9, x8, #0x1
  41a120:	str	x9, [x20, #24]
  41a124:	strb	wzr, [x8]
  41a128:	ldr	x8, [x21, #176]
  41a12c:	ldr	x9, [x19, #8]
  41a130:	ldr	x0, [x8, #16]
  41a134:	ldr	x1, [x9, #192]
  41a138:	bl	4029a0 <fputs@plt>
  41a13c:	ldr	x8, [x19, #8]
  41a140:	ldr	x0, [x8, #176]
  41a144:	ldp	x8, x1, [x0, #8]
  41a148:	cmp	x1, x8
  41a14c:	b.ls	41a164 <feof@plt+0x17084>  // b.plast
  41a150:	ldr	x8, [x0, #32]
  41a154:	cmp	x1, x8
  41a158:	b.cs	41a164 <feof@plt+0x17084>  // b.hs, b.nlast
  41a15c:	str	x1, [x0, #24]
  41a160:	b	41a168 <feof@plt+0x17088>
  41a164:	bl	461734 <_obstack_free@@Base>
  41a168:	ldr	x8, [x19, #8]
  41a16c:	ldr	x21, [sp, #16]
  41a170:	str	wzr, [x8, #200]
  41a174:	ldr	x8, [x19, #8]
  41a178:	ldp	x20, x19, [sp, #32]
  41a17c:	ldr	x0, [x8, #192]
  41a180:	ldp	x29, x30, [sp], #48
  41a184:	b	402e10 <fflush@plt>
  41a188:	ldp	x20, x19, [sp, #32]
  41a18c:	ldr	x21, [sp, #16]
  41a190:	ldp	x29, x30, [sp], #48
  41a194:	ret
  41a198:	stp	x29, x30, [sp, #-48]!
  41a19c:	str	x21, [sp, #16]
  41a1a0:	stp	x20, x19, [sp, #32]
  41a1a4:	mov	x29, sp
  41a1a8:	ldr	x21, [x0, #8]
  41a1ac:	strb	wzr, [x0, #64]
  41a1b0:	str	wzr, [x0, #32]
  41a1b4:	mov	x19, x0
  41a1b8:	ldr	x20, [x21, #176]
  41a1bc:	ldp	x8, x9, [x20, #24]
  41a1c0:	cmp	x9, x8
  41a1c4:	b.ne	41a1d8 <feof@plt+0x170f8>  // b.any
  41a1c8:	mov	w1, #0x1                   	// #1
  41a1cc:	mov	x0, x20
  41a1d0:	bl	4615ac <_obstack_newchunk@@Base>
  41a1d4:	ldr	x8, [x20, #24]
  41a1d8:	add	x9, x8, #0x1
  41a1dc:	str	x9, [x20, #24]
  41a1e0:	strb	wzr, [x8]
  41a1e4:	ldr	x8, [x21, #176]
  41a1e8:	ldr	x9, [x19, #8]
  41a1ec:	ldr	x0, [x8, #16]
  41a1f0:	ldr	x1, [x9, #192]
  41a1f4:	bl	4029a0 <fputs@plt>
  41a1f8:	ldr	x8, [x19, #8]
  41a1fc:	ldr	x0, [x8, #176]
  41a200:	ldp	x8, x1, [x0, #8]
  41a204:	cmp	x1, x8
  41a208:	b.ls	41a220 <feof@plt+0x17140>  // b.plast
  41a20c:	ldr	x8, [x0, #32]
  41a210:	cmp	x1, x8
  41a214:	b.cs	41a220 <feof@plt+0x17140>  // b.hs, b.nlast
  41a218:	str	x1, [x0, #24]
  41a21c:	b	41a224 <feof@plt+0x17144>
  41a220:	bl	461734 <_obstack_free@@Base>
  41a224:	ldr	x8, [x19, #8]
  41a228:	ldr	x21, [sp, #16]
  41a22c:	str	wzr, [x8, #200]
  41a230:	ldr	x8, [x19, #8]
  41a234:	ldp	x20, x19, [sp, #32]
  41a238:	ldr	x0, [x8, #192]
  41a23c:	ldp	x29, x30, [sp], #48
  41a240:	b	402e10 <fflush@plt>
  41a244:	stp	x29, x30, [sp, #-32]!
  41a248:	stp	x20, x19, [sp, #16]
  41a24c:	mov	x29, sp
  41a250:	mov	w19, w1
  41a254:	mov	x20, x0
  41a258:	cmp	w1, #0x1
  41a25c:	str	w1, [x0, #40]
  41a260:	b.lt	41a28c <feof@plt+0x171ac>  // b.tstop
  41a264:	ldr	w8, [x20, #36]
  41a268:	cmp	w8, #0x2
  41a26c:	b.cc	41a28c <feof@plt+0x171ac>  // b.lo, b.ul, b.last
  41a270:	ldr	x0, [x20, #16]
  41a274:	cbz	x0, 41a27c <feof@plt+0x1719c>
  41a278:	bl	402a50 <strlen@plt>
  41a27c:	sub	w8, w19, w0
  41a280:	add	w9, w19, #0x20
  41a284:	cmp	w8, #0x20
  41a288:	csel	w19, w9, w19, lt  // lt = tstop
  41a28c:	str	w19, [x20, #28]
  41a290:	ldp	x20, x19, [sp, #16]
  41a294:	ldp	x29, x30, [sp], #32
  41a298:	ret
  41a29c:	stp	x29, x30, [sp, #-48]!
  41a2a0:	str	x21, [sp, #16]
  41a2a4:	stp	x20, x19, [sp, #32]
  41a2a8:	mov	x29, sp
  41a2ac:	mov	x19, x0
  41a2b0:	ldr	x0, [x0, #16]
  41a2b4:	mov	x20, x1
  41a2b8:	bl	402b20 <free@plt>
  41a2bc:	ldr	w21, [x19, #40]
  41a2c0:	str	x20, [x19, #16]
  41a2c4:	cmp	w21, #0x1
  41a2c8:	b.lt	41a2fc <feof@plt+0x1721c>  // b.tstop
  41a2cc:	ldr	w8, [x19, #36]
  41a2d0:	cmp	w8, #0x2
  41a2d4:	b.cc	41a2fc <feof@plt+0x1721c>  // b.lo, b.ul, b.last
  41a2d8:	cbz	x20, 41a2e8 <feof@plt+0x17208>
  41a2dc:	mov	x0, x20
  41a2e0:	bl	402a50 <strlen@plt>
  41a2e4:	b	41a2ec <feof@plt+0x1720c>
  41a2e8:	mov	w0, wzr
  41a2ec:	sub	w8, w21, w0
  41a2f0:	add	w9, w21, #0x20
  41a2f4:	cmp	w8, #0x20
  41a2f8:	csel	w21, w9, w21, lt  // lt = tstop
  41a2fc:	strb	wzr, [x19, #64]
  41a300:	stp	w21, wzr, [x19, #28]
  41a304:	ldp	x20, x19, [sp, #32]
  41a308:	ldr	x21, [sp, #16]
  41a30c:	ldp	x29, x30, [sp], #48
  41a310:	ret
  41a314:	ldr	x8, [x0, #16]
  41a318:	str	xzr, [x0, #16]
  41a31c:	mov	x0, x8
  41a320:	ret
  41a324:	stp	x29, x30, [sp, #-32]!
  41a328:	str	x19, [sp, #16]
  41a32c:	mov	x29, sp
  41a330:	mov	x19, x0
  41a334:	ldr	x0, [x0, #16]
  41a338:	cbz	x0, 41a344 <feof@plt+0x17264>
  41a33c:	bl	402b20 <free@plt>
  41a340:	str	xzr, [x19, #16]
  41a344:	ldr	x19, [sp, #16]
  41a348:	ldp	x29, x30, [sp], #32
  41a34c:	ret
  41a350:	stp	x29, x30, [sp, #-64]!
  41a354:	stp	x24, x23, [sp, #16]
  41a358:	stp	x22, x21, [sp, #32]
  41a35c:	stp	x20, x19, [sp, #48]
  41a360:	mov	x29, sp
  41a364:	ldr	x20, [x0, #16]
  41a368:	cbz	x20, 41a440 <feof@plt+0x17360>
  41a36c:	ldr	w8, [x0, #36]
  41a370:	mov	x19, x0
  41a374:	cmp	w8, #0x2
  41a378:	b.eq	41a3ac <feof@plt+0x172cc>  // b.none
  41a37c:	cbnz	w8, 41a440 <feof@plt+0x17360>
  41a380:	ldrb	w8, [x19, #64]
  41a384:	cbz	w8, 41a3a0 <feof@plt+0x172c0>
  41a388:	mov	x0, x19
  41a38c:	ldp	x20, x19, [sp, #48]
  41a390:	ldp	x22, x21, [sp, #32]
  41a394:	ldp	x24, x23, [sp, #16]
  41a398:	ldp	x29, x30, [sp], #64
  41a39c:	b	4183ac <feof@plt+0x152cc>
  41a3a0:	ldr	w8, [x19, #32]
  41a3a4:	add	w8, w8, #0x3
  41a3a8:	str	w8, [x19, #32]
  41a3ac:	mov	x0, x20
  41a3b0:	bl	402a50 <strlen@plt>
  41a3b4:	ldr	x24, [x19, #8]
  41a3b8:	mov	x21, x0
  41a3bc:	sxtw	x23, w21
  41a3c0:	ldr	x22, [x24, #176]
  41a3c4:	ldp	x0, x8, [x22, #24]
  41a3c8:	sub	x8, x8, x0
  41a3cc:	cmp	x8, x23
  41a3d0:	b.cs	41a3e4 <feof@plt+0x17304>  // b.hs, b.nlast
  41a3d4:	mov	x0, x22
  41a3d8:	mov	x1, x23
  41a3dc:	bl	4615ac <_obstack_newchunk@@Base>
  41a3e0:	ldr	x0, [x22, #24]
  41a3e4:	mov	x1, x20
  41a3e8:	mov	x2, x23
  41a3ec:	bl	4029c0 <memcpy@plt>
  41a3f0:	ldr	x8, [x22, #24]
  41a3f4:	cmp	w21, #0x1
  41a3f8:	add	x8, x8, x23
  41a3fc:	str	x8, [x22, #24]
  41a400:	b.lt	41a438 <feof@plt+0x17358>  // b.tstop
  41a404:	and	x8, x21, #0xffffffff
  41a408:	b	41a424 <feof@plt+0x17344>
  41a40c:	ldr	w9, [x24, #200]
  41a410:	add	w9, w9, #0x1
  41a414:	subs	x8, x8, #0x1
  41a418:	add	x20, x20, #0x1
  41a41c:	str	w9, [x24, #200]
  41a420:	b.eq	41a438 <feof@plt+0x17358>  // b.none
  41a424:	ldrb	w9, [x20]
  41a428:	cmp	w9, #0xa
  41a42c:	b.ne	41a40c <feof@plt+0x1732c>  // b.any
  41a430:	mov	w9, wzr
  41a434:	b	41a414 <feof@plt+0x17334>
  41a438:	mov	w8, #0x1                   	// #1
  41a43c:	strb	w8, [x19, #64]
  41a440:	ldp	x20, x19, [sp, #48]
  41a444:	ldp	x22, x21, [sp, #32]
  41a448:	ldp	x24, x23, [sp, #16]
  41a44c:	ldp	x29, x30, [sp], #64
  41a450:	ret
  41a454:	stp	x29, x30, [sp, #-64]!
  41a458:	stp	x24, x23, [sp, #16]
  41a45c:	stp	x22, x21, [sp, #32]
  41a460:	stp	x20, x19, [sp, #48]
  41a464:	mov	x29, sp
  41a468:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41a46c:	add	x8, x8, #0xb18
  41a470:	mov	w20, w1
  41a474:	mov	x19, x0
  41a478:	str	x8, [x0]
  41a47c:	mov	w0, #0x1                   	// #1
  41a480:	mov	w1, #0x150                 	// #336
  41a484:	mov	w23, #0x1                   	// #1
  41a488:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41a48c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41a490:	ldr	x8, [x8, #1464]
  41a494:	movi	v0.2d, #0x0
  41a498:	stp	x0, xzr, [x0, #176]
  41a49c:	stp	q0, q0, [x0]
  41a4a0:	str	x8, [x0, #192]
  41a4a4:	mov	x8, x0
  41a4a8:	stp	q0, q0, [x0, #32]
  41a4ac:	stp	q0, q0, [x0, #64]
  41a4b0:	stp	q0, q0, [x0, #96]
  41a4b4:	stp	q0, q0, [x0, #128]
  41a4b8:	str	q0, [x0, #160]
  41a4bc:	str	q0, [x8, #200]!
  41a4c0:	stur	q0, [x0, #248]
  41a4c4:	stur	q0, [x0, #232]
  41a4c8:	stur	q0, [x0, #216]
  41a4cc:	str	wzr, [x8, #128]
  41a4d0:	stp	q0, q0, [x8, #96]
  41a4d4:	stp	q0, q0, [x8, #64]
  41a4d8:	strb	w23, [x0, #332]
  41a4dc:	adrp	x23, 420000 <feof@plt+0x1cf20>
  41a4e0:	adrp	x24, 420000 <feof@plt+0x1cf20>
  41a4e4:	add	x23, x23, #0x2b0
  41a4e8:	add	x24, x24, #0x2dc
  41a4ec:	mov	x1, xzr
  41a4f0:	mov	x2, xzr
  41a4f4:	mov	x3, x23
  41a4f8:	mov	x4, x24
  41a4fc:	mov	x21, x0
  41a500:	add	x22, x0, #0x58
  41a504:	bl	461450 <_obstack_begin@@Base>
  41a508:	mov	x0, x22
  41a50c:	mov	x1, xzr
  41a510:	mov	x2, xzr
  41a514:	mov	x3, x23
  41a518:	mov	x4, x24
  41a51c:	bl	461450 <_obstack_begin@@Base>
  41a520:	mov	w8, #0x10000               	// #65536
  41a524:	stp	xzr, xzr, [x19, #48]
  41a528:	str	w20, [x19, #40]
  41a52c:	stp	xzr, xzr, [x19, #24]
  41a530:	stp	x21, xzr, [x19, #8]
  41a534:	str	w20, [x19, #28]
  41a538:	str	w8, [x19, #64]
  41a53c:	strb	wzr, [x19, #64]
  41a540:	str	xzr, [x19, #32]
  41a544:	ldp	x20, x19, [sp, #48]
  41a548:	ldp	x22, x21, [sp, #32]
  41a54c:	ldp	x24, x23, [sp, #16]
  41a550:	ldp	x29, x30, [sp], #64
  41a554:	ret
  41a558:	stp	x29, x30, [sp, #-32]!
  41a55c:	stp	x20, x19, [sp, #16]
  41a560:	mov	x29, sp
  41a564:	mov	x19, x0
  41a568:	ldr	x0, [x0, #56]
  41a56c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41a570:	add	x8, x8, #0xb18
  41a574:	str	x8, [x19]
  41a578:	cbz	x0, 41a588 <feof@plt+0x174a8>
  41a57c:	ldr	x8, [x0]
  41a580:	ldr	x8, [x8, #8]
  41a584:	blr	x8
  41a588:	ldr	x20, [x19, #8]
  41a58c:	mov	x1, xzr
  41a590:	add	x0, x20, #0x58
  41a594:	bl	461734 <_obstack_free@@Base>
  41a598:	mov	x0, x20
  41a59c:	mov	x1, xzr
  41a5a0:	bl	461734 <_obstack_free@@Base>
  41a5a4:	ldr	x0, [x19, #8]
  41a5a8:	bl	402b20 <free@plt>
  41a5ac:	ldr	x0, [x19, #16]
  41a5b0:	ldp	x20, x19, [sp, #16]
  41a5b4:	ldp	x29, x30, [sp], #32
  41a5b8:	b	402b20 <free@plt>
  41a5bc:	stp	x29, x30, [sp, #-32]!
  41a5c0:	stp	x20, x19, [sp, #16]
  41a5c4:	mov	x29, sp
  41a5c8:	mov	x19, x0
  41a5cc:	ldr	x0, [x0, #56]
  41a5d0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41a5d4:	add	x8, x8, #0xb18
  41a5d8:	str	x8, [x19]
  41a5dc:	cbz	x0, 41a5ec <feof@plt+0x1750c>
  41a5e0:	ldr	x8, [x0]
  41a5e4:	ldr	x8, [x8, #8]
  41a5e8:	blr	x8
  41a5ec:	ldr	x20, [x19, #8]
  41a5f0:	mov	x1, xzr
  41a5f4:	add	x0, x20, #0x58
  41a5f8:	bl	461734 <_obstack_free@@Base>
  41a5fc:	mov	x0, x20
  41a600:	mov	x1, xzr
  41a604:	bl	461734 <_obstack_free@@Base>
  41a608:	ldr	x0, [x19, #8]
  41a60c:	bl	402b20 <free@plt>
  41a610:	ldr	x0, [x19, #16]
  41a614:	bl	402b20 <free@plt>
  41a618:	mov	x0, x19
  41a61c:	ldp	x20, x19, [sp, #16]
  41a620:	ldp	x29, x30, [sp], #32
  41a624:	b	402d00 <_ZdlPv@plt>
  41a628:	ldr	x8, [x0, #8]
  41a62c:	ldr	x8, [x8, #176]
  41a630:	ldp	x8, x9, [x8, #16]
  41a634:	sub	x10, x9, #0x1
  41a638:	cmp	x8, x9
  41a63c:	csel	x0, xzr, x10, eq  // eq = none
  41a640:	ret
  41a644:	ldr	x8, [x0, #8]
  41a648:	ldr	w9, [x0, #28]
  41a64c:	ldr	w8, [x8, #200]
  41a650:	sub	w0, w9, w8
  41a654:	ret
  41a658:	sub	sp, sp, #0x130
  41a65c:	stp	x29, x30, [sp, #256]
  41a660:	str	x28, [sp, #272]
  41a664:	stp	x20, x19, [sp, #288]
  41a668:	add	x29, sp, #0x100
  41a66c:	mov	x8, #0xffffffffffffffd0    	// #-48
  41a670:	mov	x9, sp
  41a674:	sub	x10, x29, #0x78
  41a678:	movk	x8, #0xff80, lsl #32
  41a67c:	add	x11, x29, #0x30
  41a680:	add	x9, x9, #0x80
  41a684:	add	x10, x10, #0x30
  41a688:	mov	x19, x1
  41a68c:	mov	x20, x0
  41a690:	stp	x2, x3, [x29, #-120]
  41a694:	stp	x4, x5, [x29, #-104]
  41a698:	stp	x6, x7, [x29, #-88]
  41a69c:	stp	q1, q2, [sp, #16]
  41a6a0:	stp	q3, q4, [sp, #48]
  41a6a4:	str	q0, [sp]
  41a6a8:	stp	q5, q6, [sp, #80]
  41a6ac:	str	q7, [sp, #112]
  41a6b0:	stp	x9, x8, [x29, #-56]
  41a6b4:	stp	x11, x10, [x29, #-72]
  41a6b8:	bl	402e70 <__errno_location@plt>
  41a6bc:	ldr	w8, [x0]
  41a6c0:	sub	x9, x29, #0x48
  41a6c4:	sub	x1, x29, #0x28
  41a6c8:	mov	x0, x20
  41a6cc:	stur	w8, [x29, #-24]
  41a6d0:	stp	x19, x9, [x29, #-40]
  41a6d4:	bl	4184a0 <feof@plt+0x153c0>
  41a6d8:	mov	x0, x20
  41a6dc:	bl	419fac <feof@plt+0x16ecc>
  41a6e0:	ldp	x20, x19, [sp, #288]
  41a6e4:	ldr	x28, [sp, #272]
  41a6e8:	ldp	x29, x30, [sp, #256]
  41a6ec:	add	sp, sp, #0x130
  41a6f0:	ret
  41a6f4:	sub	sp, sp, #0x130
  41a6f8:	stp	x29, x30, [sp, #256]
  41a6fc:	str	x28, [sp, #272]
  41a700:	stp	x20, x19, [sp, #288]
  41a704:	add	x29, sp, #0x100
  41a708:	mov	x8, #0xffffffffffffffd0    	// #-48
  41a70c:	mov	x9, sp
  41a710:	sub	x10, x29, #0x78
  41a714:	movk	x8, #0xff80, lsl #32
  41a718:	add	x11, x29, #0x30
  41a71c:	add	x9, x9, #0x80
  41a720:	add	x10, x10, #0x30
  41a724:	mov	x19, x1
  41a728:	mov	x20, x0
  41a72c:	stp	x2, x3, [x29, #-120]
  41a730:	stp	x4, x5, [x29, #-104]
  41a734:	stp	x6, x7, [x29, #-88]
  41a738:	stp	q1, q2, [sp, #16]
  41a73c:	stp	q3, q4, [sp, #48]
  41a740:	str	q0, [sp]
  41a744:	stp	q5, q6, [sp, #80]
  41a748:	str	q7, [sp, #112]
  41a74c:	stp	x9, x8, [x29, #-56]
  41a750:	stp	x11, x10, [x29, #-72]
  41a754:	bl	402e70 <__errno_location@plt>
  41a758:	ldr	w8, [x0]
  41a75c:	sub	x9, x29, #0x48
  41a760:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  41a764:	stp	x19, x9, [x29, #-40]
  41a768:	stur	w8, [x29, #-24]
  41a76c:	ldr	d0, [x10, #2856]
  41a770:	ldur	x19, [x20, #36]
  41a774:	sub	x1, x29, #0x28
  41a778:	mov	x0, x20
  41a77c:	stur	d0, [x20, #36]
  41a780:	bl	4184a0 <feof@plt+0x153c0>
  41a784:	mov	x0, x20
  41a788:	bl	419fac <feof@plt+0x16ecc>
  41a78c:	stur	x19, [x20, #36]
  41a790:	ldp	x20, x19, [sp, #288]
  41a794:	ldr	x28, [sp, #272]
  41a798:	ldp	x29, x30, [sp, #256]
  41a79c:	add	sp, sp, #0x130
  41a7a0:	ret
  41a7a4:	stp	x29, x30, [sp, #-32]!
  41a7a8:	stp	x20, x19, [sp, #16]
  41a7ac:	mov	x29, sp
  41a7b0:	ldr	x8, [x0, #8]
  41a7b4:	mov	x19, x0
  41a7b8:	ldr	x20, [x8, #176]
  41a7bc:	ldp	x8, x9, [x20, #24]
  41a7c0:	cmp	x9, x8
  41a7c4:	b.ne	41a7d8 <feof@plt+0x176f8>  // b.any
  41a7c8:	mov	w1, #0x1                   	// #1
  41a7cc:	mov	x0, x20
  41a7d0:	bl	4615ac <_obstack_newchunk@@Base>
  41a7d4:	ldr	x8, [x20, #24]
  41a7d8:	add	x9, x8, #0x1
  41a7dc:	mov	w10, #0xa                   	// #10
  41a7e0:	str	x9, [x20, #24]
  41a7e4:	strb	w10, [x8]
  41a7e8:	ldr	x8, [x19, #8]
  41a7ec:	strb	wzr, [x19, #65]
  41a7f0:	str	wzr, [x8, #200]
  41a7f4:	ldp	x20, x19, [sp, #16]
  41a7f8:	ldp	x29, x30, [sp], #32
  41a7fc:	ret
  41a800:	stp	x29, x30, [sp, #-96]!
  41a804:	stp	x28, x27, [sp, #16]
  41a808:	stp	x26, x25, [sp, #32]
  41a80c:	stp	x24, x23, [sp, #48]
  41a810:	stp	x22, x21, [sp, #64]
  41a814:	stp	x20, x19, [sp, #80]
  41a818:	mov	x29, sp
  41a81c:	ldr	w8, [x0, #40]
  41a820:	mov	x19, x2
  41a824:	mov	x20, x0
  41a828:	mov	x22, x1
  41a82c:	cmp	w8, #0x1
  41a830:	b.lt	41aa24 <feof@plt+0x17944>  // b.tstop
  41a834:	cmp	x22, x19
  41a838:	b.eq	41aa08 <feof@plt+0x17928>  // b.none
  41a83c:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  41a840:	ldrh	w24, [x8, #3800]
  41a844:	adrp	x25, 474000 <_obstack_memory_used@@Base+0x12838>
  41a848:	add	x25, x25, #0xe98
  41a84c:	mov	w26, #0xa                   	// #10
  41a850:	mov	w27, #0x20                  	// #32
  41a854:	b	41a880 <feof@plt+0x177a0>
  41a858:	add	x9, x8, #0x1
  41a85c:	str	x9, [x22, #24]
  41a860:	strb	w26, [x8]
  41a864:	ldr	x8, [x20, #8]
  41a868:	add	x21, x21, #0x1
  41a86c:	strb	wzr, [x20, #65]
  41a870:	str	wzr, [x8, #200]
  41a874:	cmp	x21, x19
  41a878:	mov	x22, x21
  41a87c:	b.eq	41aa08 <feof@plt+0x17928>  // b.none
  41a880:	cmp	x22, x19
  41a884:	b.eq	41a8b0 <feof@plt+0x177d0>  // b.none
  41a888:	mov	x21, x22
  41a88c:	ldrb	w8, [x21]
  41a890:	mov	w28, #0x1                   	// #1
  41a894:	cmp	x8, #0xa
  41a898:	b.eq	41a8b8 <feof@plt+0x177d8>  // b.none
  41a89c:	ldrh	w8, [x25, x8, lsl #1]
  41a8a0:	tbnz	w8, #0, 41a8b8 <feof@plt+0x177d8>
  41a8a4:	add	x21, x21, #0x1
  41a8a8:	cmp	x19, x21
  41a8ac:	b.ne	41a88c <feof@plt+0x177ac>  // b.any
  41a8b0:	mov	w28, wzr
  41a8b4:	mov	x21, x19
  41a8b8:	ldr	x8, [x20, #8]
  41a8bc:	ldrsw	x9, [x20, #28]
  41a8c0:	sub	x11, x21, x22
  41a8c4:	ldrsw	x10, [x8, #200]
  41a8c8:	sub	x9, x9, x10
  41a8cc:	cmp	x11, x9
  41a8d0:	b.lt	41a90c <feof@plt+0x1782c>  // b.tstop
  41a8d4:	ldr	x23, [x8, #176]
  41a8d8:	ldp	x8, x9, [x23, #24]
  41a8dc:	cmp	x9, x8
  41a8e0:	b.ne	41a8f4 <feof@plt+0x17814>  // b.any
  41a8e4:	mov	w1, #0x1                   	// #1
  41a8e8:	mov	x0, x23
  41a8ec:	bl	4615ac <_obstack_newchunk@@Base>
  41a8f0:	ldr	x8, [x23, #24]
  41a8f4:	add	x9, x8, #0x1
  41a8f8:	str	x9, [x23, #24]
  41a8fc:	strb	w26, [x8]
  41a900:	ldr	x8, [x20, #8]
  41a904:	strb	wzr, [x20, #65]
  41a908:	str	wzr, [x8, #200]
  41a90c:	mov	x0, x20
  41a910:	mov	x1, x22
  41a914:	mov	x2, x21
  41a918:	bl	419e54 <feof@plt+0x16d74>
  41a91c:	cbz	w28, 41a9cc <feof@plt+0x178ec>
  41a920:	ldrb	w8, [x21]
  41a924:	ldrh	w8, [x25, x8, lsl #1]
  41a928:	tbz	w8, #0, 41a9cc <feof@plt+0x178ec>
  41a92c:	ldr	w8, [x20, #40]
  41a930:	cmp	w8, #0x1
  41a934:	b.lt	41a988 <feof@plt+0x178a8>  // b.tstop
  41a938:	ldr	x8, [x20, #8]
  41a93c:	ldr	w9, [x20, #28]
  41a940:	ldr	w10, [x8, #200]
  41a944:	cmp	w9, w10
  41a948:	b.gt	41a988 <feof@plt+0x178a8>
  41a94c:	ldr	x22, [x8, #176]
  41a950:	ldp	x8, x9, [x22, #24]
  41a954:	cmp	x9, x8
  41a958:	b.ne	41a96c <feof@plt+0x1788c>  // b.any
  41a95c:	mov	w1, #0x1                   	// #1
  41a960:	mov	x0, x22
  41a964:	bl	4615ac <_obstack_newchunk@@Base>
  41a968:	ldr	x8, [x22, #24]
  41a96c:	add	x9, x8, #0x1
  41a970:	str	x9, [x22, #24]
  41a974:	strb	w26, [x8]
  41a978:	ldr	x8, [x20, #8]
  41a97c:	strb	wzr, [x20, #65]
  41a980:	str	wzr, [x8, #200]
  41a984:	tbnz	w24, #6, 41a9c8 <feof@plt+0x178e8>
  41a988:	ldr	x8, [x20, #8]
  41a98c:	ldr	x22, [x8, #176]
  41a990:	ldp	x8, x9, [x22, #24]
  41a994:	cmp	x9, x8
  41a998:	b.ne	41a9ac <feof@plt+0x178cc>  // b.any
  41a99c:	mov	w1, #0x1                   	// #1
  41a9a0:	mov	x0, x22
  41a9a4:	bl	4615ac <_obstack_newchunk@@Base>
  41a9a8:	ldr	x8, [x22, #24]
  41a9ac:	add	x9, x8, #0x1
  41a9b0:	str	x9, [x22, #24]
  41a9b4:	strb	w27, [x8]
  41a9b8:	ldr	x8, [x20, #8]
  41a9bc:	ldr	w9, [x8, #200]
  41a9c0:	add	w9, w9, #0x1
  41a9c4:	str	w9, [x8, #200]
  41a9c8:	add	x21, x21, #0x1
  41a9cc:	cmp	x21, x19
  41a9d0:	b.eq	41aa08 <feof@plt+0x17928>  // b.none
  41a9d4:	ldrb	w8, [x21]
  41a9d8:	cmp	w8, #0xa
  41a9dc:	b.ne	41a874 <feof@plt+0x17794>  // b.any
  41a9e0:	ldr	x8, [x20, #8]
  41a9e4:	ldr	x22, [x8, #176]
  41a9e8:	ldp	x8, x9, [x22, #24]
  41a9ec:	cmp	x9, x8
  41a9f0:	b.ne	41a858 <feof@plt+0x17778>  // b.any
  41a9f4:	mov	w1, #0x1                   	// #1
  41a9f8:	mov	x0, x22
  41a9fc:	bl	4615ac <_obstack_newchunk@@Base>
  41aa00:	ldr	x8, [x22, #24]
  41aa04:	b	41a858 <feof@plt+0x17778>
  41aa08:	ldp	x20, x19, [sp, #80]
  41aa0c:	ldp	x22, x21, [sp, #64]
  41aa10:	ldp	x24, x23, [sp, #48]
  41aa14:	ldp	x26, x25, [sp, #32]
  41aa18:	ldp	x28, x27, [sp, #16]
  41aa1c:	ldp	x29, x30, [sp], #96
  41aa20:	ret
  41aa24:	mov	x0, x20
  41aa28:	mov	x1, x22
  41aa2c:	mov	x2, x19
  41aa30:	ldp	x20, x19, [sp, #80]
  41aa34:	ldp	x22, x21, [sp, #64]
  41aa38:	ldp	x24, x23, [sp, #48]
  41aa3c:	ldp	x26, x25, [sp, #32]
  41aa40:	ldp	x28, x27, [sp, #16]
  41aa44:	ldp	x29, x30, [sp], #96
  41aa48:	b	419e54 <feof@plt+0x16d74>
  41aa4c:	stp	x29, x30, [sp, #-32]!
  41aa50:	stp	x20, x19, [sp, #16]
  41aa54:	mov	x29, sp
  41aa58:	ldr	w8, [x0, #24]
  41aa5c:	cbz	w8, 41ab14 <feof@plt+0x17a34>
  41aa60:	ldr	w8, [x0, #40]
  41aa64:	mov	x19, x0
  41aa68:	cmp	w8, #0x1
  41aa6c:	b.lt	41aacc <feof@plt+0x179ec>  // b.tstop
  41aa70:	ldr	x8, [x19, #8]
  41aa74:	ldr	w9, [x19, #28]
  41aa78:	ldr	w10, [x8, #200]
  41aa7c:	cmp	w9, w10
  41aa80:	b.gt	41aacc <feof@plt+0x179ec>
  41aa84:	ldr	x20, [x8, #176]
  41aa88:	ldp	x8, x9, [x20, #24]
  41aa8c:	cmp	x9, x8
  41aa90:	b.ne	41aaa4 <feof@plt+0x179c4>  // b.any
  41aa94:	mov	w1, #0x1                   	// #1
  41aa98:	mov	x0, x20
  41aa9c:	bl	4615ac <_obstack_newchunk@@Base>
  41aaa0:	ldr	x8, [x20, #24]
  41aaa4:	add	x9, x8, #0x1
  41aaa8:	mov	w10, #0xa                   	// #10
  41aaac:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41aab0:	str	x9, [x20, #24]
  41aab4:	strb	w10, [x8]
  41aab8:	ldr	x8, [x19, #8]
  41aabc:	ldrb	w9, [x11, #3800]
  41aac0:	strb	wzr, [x19, #65]
  41aac4:	str	wzr, [x8, #200]
  41aac8:	tbnz	w9, #6, 41ab10 <feof@plt+0x17a30>
  41aacc:	ldr	x8, [x19, #8]
  41aad0:	ldr	x20, [x8, #176]
  41aad4:	ldp	x8, x9, [x20, #24]
  41aad8:	cmp	x9, x8
  41aadc:	b.ne	41aaf0 <feof@plt+0x17a10>  // b.any
  41aae0:	mov	w1, #0x1                   	// #1
  41aae4:	mov	x0, x20
  41aae8:	bl	4615ac <_obstack_newchunk@@Base>
  41aaec:	ldr	x8, [x20, #24]
  41aaf0:	add	x9, x8, #0x1
  41aaf4:	mov	w10, #0x20                  	// #32
  41aaf8:	str	x9, [x20, #24]
  41aafc:	strb	w10, [x8]
  41ab00:	ldr	x8, [x19, #8]
  41ab04:	ldr	w9, [x8, #200]
  41ab08:	add	w9, w9, #0x1
  41ab0c:	str	w9, [x8, #200]
  41ab10:	str	wzr, [x19, #24]
  41ab14:	ldp	x20, x19, [sp, #16]
  41ab18:	ldp	x29, x30, [sp], #32
  41ab1c:	ret
  41ab20:	stp	x29, x30, [sp, #-32]!
  41ab24:	stp	x20, x19, [sp, #16]
  41ab28:	mov	x29, sp
  41ab2c:	ldr	x8, [x0, #8]
  41ab30:	mov	x19, x0
  41ab34:	ldr	x20, [x8, #176]
  41ab38:	ldp	x8, x9, [x20, #24]
  41ab3c:	cmp	x9, x8
  41ab40:	b.ne	41ab54 <feof@plt+0x17a74>  // b.any
  41ab44:	mov	w1, #0x1                   	// #1
  41ab48:	mov	x0, x20
  41ab4c:	bl	4615ac <_obstack_newchunk@@Base>
  41ab50:	ldr	x8, [x20, #24]
  41ab54:	add	x9, x8, #0x1
  41ab58:	mov	w10, #0xa                   	// #10
  41ab5c:	str	x9, [x20, #24]
  41ab60:	strb	w10, [x8]
  41ab64:	ldr	x8, [x19, #8]
  41ab68:	mov	x0, x19
  41ab6c:	strb	wzr, [x19, #65]
  41ab70:	str	wzr, [x8, #200]
  41ab74:	bl	41a0d4 <feof@plt+0x16ff4>
  41ab78:	strb	wzr, [x19, #65]
  41ab7c:	ldp	x20, x19, [sp, #16]
  41ab80:	ldp	x29, x30, [sp], #32
  41ab84:	ret
  41ab88:	stp	x29, x30, [sp, #-32]!
  41ab8c:	stp	x20, x19, [sp, #16]
  41ab90:	mov	x29, sp
  41ab94:	ldr	w8, [x0, #32]
  41ab98:	ldr	x9, [x0, #8]
  41ab9c:	mov	x19, x0
  41aba0:	add	w8, w8, w1
  41aba4:	str	w8, [x0, #32]
  41aba8:	ldr	x20, [x9, #176]
  41abac:	ldp	x8, x9, [x20, #24]
  41abb0:	cmp	x9, x8
  41abb4:	b.ne	41abc8 <feof@plt+0x17ae8>  // b.any
  41abb8:	mov	w1, #0x1                   	// #1
  41abbc:	mov	x0, x20
  41abc0:	bl	4615ac <_obstack_newchunk@@Base>
  41abc4:	ldr	x8, [x20, #24]
  41abc8:	add	x9, x8, #0x1
  41abcc:	mov	w10, #0xa                   	// #10
  41abd0:	str	x9, [x20, #24]
  41abd4:	strb	w10, [x8]
  41abd8:	ldr	x8, [x19, #8]
  41abdc:	mov	x0, x19
  41abe0:	strb	wzr, [x19, #65]
  41abe4:	str	wzr, [x8, #200]
  41abe8:	bl	4183ac <feof@plt+0x152cc>
  41abec:	strb	wzr, [x19, #65]
  41abf0:	ldp	x20, x19, [sp, #16]
  41abf4:	ldp	x29, x30, [sp], #32
  41abf8:	ret
  41abfc:	stp	x29, x30, [sp, #-32]!
  41ac00:	stp	x20, x19, [sp, #16]
  41ac04:	mov	x29, sp
  41ac08:	and	w1, w1, #0xff
  41ac0c:	mov	x19, x0
  41ac10:	bl	41803c <feof@plt+0x14f5c>
  41ac14:	ldr	w8, [x19, #40]
  41ac18:	cmp	w8, #0x1
  41ac1c:	b.lt	41ac7c <feof@plt+0x17b9c>  // b.tstop
  41ac20:	ldr	x8, [x19, #8]
  41ac24:	ldr	w9, [x19, #28]
  41ac28:	ldr	w10, [x8, #200]
  41ac2c:	cmp	w9, w10
  41ac30:	b.gt	41ac7c <feof@plt+0x17b9c>
  41ac34:	ldr	x20, [x8, #176]
  41ac38:	ldp	x8, x9, [x20, #24]
  41ac3c:	cmp	x9, x8
  41ac40:	b.ne	41ac54 <feof@plt+0x17b74>  // b.any
  41ac44:	mov	w1, #0x1                   	// #1
  41ac48:	mov	x0, x20
  41ac4c:	bl	4615ac <_obstack_newchunk@@Base>
  41ac50:	ldr	x8, [x20, #24]
  41ac54:	add	x9, x8, #0x1
  41ac58:	mov	w10, #0xa                   	// #10
  41ac5c:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41ac60:	str	x9, [x20, #24]
  41ac64:	strb	w10, [x8]
  41ac68:	ldr	x8, [x19, #8]
  41ac6c:	ldrb	w9, [x11, #3800]
  41ac70:	strb	wzr, [x19, #65]
  41ac74:	str	wzr, [x8, #200]
  41ac78:	tbnz	w9, #6, 41acc0 <feof@plt+0x17be0>
  41ac7c:	ldr	x8, [x19, #8]
  41ac80:	ldr	x20, [x8, #176]
  41ac84:	ldp	x8, x9, [x20, #24]
  41ac88:	cmp	x9, x8
  41ac8c:	b.ne	41aca0 <feof@plt+0x17bc0>  // b.any
  41ac90:	mov	w1, #0x1                   	// #1
  41ac94:	mov	x0, x20
  41ac98:	bl	4615ac <_obstack_newchunk@@Base>
  41ac9c:	ldr	x8, [x20, #24]
  41aca0:	add	x9, x8, #0x1
  41aca4:	mov	w10, #0x20                  	// #32
  41aca8:	str	x9, [x20, #24]
  41acac:	strb	w10, [x8]
  41acb0:	ldr	x8, [x19, #8]
  41acb4:	ldr	w9, [x8, #200]
  41acb8:	add	w9, w9, #0x1
  41acbc:	str	w9, [x8, #200]
  41acc0:	ldp	x20, x19, [sp, #16]
  41acc4:	ldp	x29, x30, [sp], #32
  41acc8:	ret
  41accc:	sub	sp, sp, #0x70
  41acd0:	stp	x29, x30, [sp, #32]
  41acd4:	stp	x26, x25, [sp, #48]
  41acd8:	stp	x24, x23, [sp, #64]
  41acdc:	stp	x22, x21, [sp, #80]
  41ace0:	stp	x20, x19, [sp, #96]
  41ace4:	add	x29, sp, #0x20
  41ace8:	mov	x19, x0
  41acec:	bl	402a50 <strlen@plt>
  41acf0:	cbz	x0, 41aef8 <feof@plt+0x17e18>
  41acf4:	mov	x20, x0
  41acf8:	mov	x22, xzr
  41acfc:	mov	w21, #0x1                   	// #1
  41ad00:	add	x0, x19, x22
  41ad04:	sub	x1, x20, x22
  41ad08:	sub	x2, x29, #0x8
  41ad0c:	bl	41af88 <feof@plt+0x17ea8>
  41ad10:	cbz	w0, 41af00 <feof@plt+0x17e20>
  41ad14:	ldur	w8, [x29, #-8]
  41ad18:	cmp	w8, #0x20
  41ad1c:	b.cc	41af00 <feof@plt+0x17e20>  // b.lo, b.ul, b.last
  41ad20:	sub	w8, w8, #0x7f
  41ad24:	cmp	w8, #0x20
  41ad28:	b.ls	41af00 <feof@plt+0x17e20>  // b.plast
  41ad2c:	cmp	w0, #0x2
  41ad30:	add	x22, x22, w0, sxtw
  41ad34:	cset	w8, cc  // cc = lo, ul, last
  41ad38:	cmp	x20, x22
  41ad3c:	and	w21, w21, w8
  41ad40:	b.hi	41ad00 <feof@plt+0x17c20>  // b.pmore
  41ad44:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ad48:	ldrb	w8, [x8, #2328]
  41ad4c:	cbnz	w8, 41aef8 <feof@plt+0x17e18>
  41ad50:	eor	w8, w21, #0x1
  41ad54:	cbz	w8, 41aef8 <feof@plt+0x17e18>
  41ad58:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ad5c:	ldr	x0, [x8, #2320]
  41ad60:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ad64:	cbz	x0, 41ae78 <feof@plt+0x17d98>
  41ad68:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  41ad6c:	add	x1, x1, #0xce2
  41ad70:	bl	402b10 <iconv_open@plt>
  41ad74:	cmn	x0, #0x1
  41ad78:	b.eq	41ae78 <feof@plt+0x17d98>  // b.none
  41ad7c:	mov	w23, #0x1                   	// #1
  41ad80:	mov	x22, x0
  41ad84:	mov	w25, #0x1                   	// #1
  41ad88:	bfi	x23, x20, #2, #62
  41ad8c:	adrp	x26, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ad90:	b	41ada0 <feof@plt+0x17cc0>
  41ad94:	mov	w25, wzr
  41ad98:	mov	w8, #0x1                   	// #1
  41ad9c:	cbnz	w8, 41ae6c <feof@plt+0x17d8c>
  41ada0:	ldr	x8, [x24, #1352]
  41ada4:	sub	x9, x23, #0x1
  41ada8:	mov	x0, x23
  41adac:	stur	x19, [x29, #-8]
  41adb0:	stp	x9, x20, [sp]
  41adb4:	blr	x8
  41adb8:	mov	x21, x0
  41adbc:	str	x0, [sp, #16]
  41adc0:	mov	x0, x22
  41adc4:	mov	x1, xzr
  41adc8:	mov	x2, xzr
  41adcc:	mov	x3, xzr
  41add0:	mov	x4, xzr
  41add4:	bl	402da0 <iconv@plt>
  41add8:	cmn	x0, #0x1
  41addc:	b.eq	41ad94 <feof@plt+0x17cb4>  // b.none
  41ade0:	sub	x1, x29, #0x8
  41ade4:	add	x2, sp, #0x8
  41ade8:	add	x3, sp, #0x10
  41adec:	mov	x4, sp
  41adf0:	mov	x0, x22
  41adf4:	bl	402da0 <iconv@plt>
  41adf8:	cmn	x0, #0x1
  41adfc:	b.eq	41ae40 <feof@plt+0x17d60>  // b.none
  41ae00:	ldr	x8, [sp, #8]
  41ae04:	cbnz	x8, 41ae40 <feof@plt+0x17d60>
  41ae08:	cbnz	x0, 41ad94 <feof@plt+0x17cb4>
  41ae0c:	add	x3, sp, #0x10
  41ae10:	mov	x4, sp
  41ae14:	mov	x0, x22
  41ae18:	mov	x1, xzr
  41ae1c:	mov	x2, xzr
  41ae20:	bl	402da0 <iconv@plt>
  41ae24:	cmn	x0, #0x1
  41ae28:	b.eq	41ae40 <feof@plt+0x17d60>  // b.none
  41ae2c:	ldr	x8, [sp, #16]
  41ae30:	strb	wzr, [x8]
  41ae34:	mov	w8, #0x1                   	// #1
  41ae38:	cbz	w8, 41ada0 <feof@plt+0x17cc0>
  41ae3c:	b	41ae6c <feof@plt+0x17d8c>
  41ae40:	bl	402e70 <__errno_location@plt>
  41ae44:	ldr	w8, [x0]
  41ae48:	cmp	w8, #0x7
  41ae4c:	b.ne	41ad94 <feof@plt+0x17cb4>  // b.any
  41ae50:	ldr	x8, [x26, #1360]
  41ae54:	mov	x0, x21
  41ae58:	lsl	x23, x23, #1
  41ae5c:	blr	x8
  41ae60:	mov	w8, wzr
  41ae64:	mov	x21, xzr
  41ae68:	cbz	w8, 41ada0 <feof@plt+0x17cc0>
  41ae6c:	mov	x0, x22
  41ae70:	bl	4029b0 <iconv_close@plt>
  41ae74:	tbnz	w25, #0, 41af68 <feof@plt+0x17e88>
  41ae78:	ldr	x8, [x24, #1352]
  41ae7c:	add	x9, x20, x20, lsl #2
  41ae80:	mov	w0, #0x1                   	// #1
  41ae84:	bfi	x0, x9, #1, #63
  41ae88:	blr	x8
  41ae8c:	mov	x21, x0
  41ae90:	mov	x22, x0
  41ae94:	cbz	x20, 41af64 <feof@plt+0x17e84>
  41ae98:	adrp	x23, 464000 <_obstack_memory_used@@Base+0x2838>
  41ae9c:	mov	x25, xzr
  41aea0:	add	x23, x23, #0xbce
  41aea4:	mov	x22, x21
  41aea8:	b	41aecc <feof@plt+0x17dec>
  41aeac:	ldur	w2, [x29, #-8]
  41aeb0:	mov	x0, x22
  41aeb4:	mov	x1, x23
  41aeb8:	bl	402c30 <sprintf@plt>
  41aebc:	add	x22, x22, #0xa
  41aec0:	add	x25, x25, x26
  41aec4:	cmp	x20, x25
  41aec8:	b.ls	41af64 <feof@plt+0x17e84>  // b.plast
  41aecc:	add	x24, x19, x25
  41aed0:	sub	x1, x20, x25
  41aed4:	sub	x2, x29, #0x8
  41aed8:	mov	x0, x24
  41aedc:	bl	41af88 <feof@plt+0x17ea8>
  41aee0:	cmp	w0, #0x1
  41aee4:	sxtw	x26, w0
  41aee8:	b.ne	41aeac <feof@plt+0x17dcc>  // b.any
  41aeec:	ldrb	w8, [x24]
  41aef0:	strb	w8, [x22], #1
  41aef4:	b	41aec0 <feof@plt+0x17de0>
  41aef8:	mov	x21, x19
  41aefc:	b	41af68 <feof@plt+0x17e88>
  41af00:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41af04:	ldr	x8, [x8, #1352]
  41af08:	mov	w0, #0x1                   	// #1
  41af0c:	bfi	x0, x20, #2, #62
  41af10:	blr	x8
  41af14:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x2838>
  41af18:	mov	x21, x0
  41af1c:	add	x22, x22, #0xbc8
  41af20:	mov	x23, x0
  41af24:	b	41af44 <feof@plt+0x17e64>
  41af28:	mov	x0, x23
  41af2c:	mov	x1, x22
  41af30:	bl	402c30 <sprintf@plt>
  41af34:	add	x23, x23, #0x4
  41af38:	subs	x20, x20, #0x1
  41af3c:	add	x19, x19, #0x1
  41af40:	b.eq	41af5c <feof@plt+0x17e7c>  // b.none
  41af44:	ldrb	w2, [x19]
  41af48:	sub	w8, w2, #0x20
  41af4c:	cmp	w8, #0x5e
  41af50:	b.hi	41af28 <feof@plt+0x17e48>  // b.pmore
  41af54:	strb	w2, [x23], #1
  41af58:	b	41af38 <feof@plt+0x17e58>
  41af5c:	strb	wzr, [x23]
  41af60:	b	41af68 <feof@plt+0x17e88>
  41af64:	strb	wzr, [x22]
  41af68:	mov	x0, x21
  41af6c:	ldp	x20, x19, [sp, #96]
  41af70:	ldp	x22, x21, [sp, #80]
  41af74:	ldp	x24, x23, [sp, #64]
  41af78:	ldp	x26, x25, [sp, #48]
  41af7c:	ldp	x29, x30, [sp, #32]
  41af80:	add	sp, sp, #0x70
  41af84:	ret
  41af88:	stp	x29, x30, [sp, #-16]!
  41af8c:	mov	x29, sp
  41af90:	cbz	x1, 41b0a8 <feof@plt+0x17fc8>
  41af94:	ldrb	w11, [x0]
  41af98:	mov	x8, x0
  41af9c:	tbnz	w11, #7, 41afac <feof@plt+0x17ecc>
  41afa0:	mov	w0, #0x1                   	// #1
  41afa4:	mov	w10, w11
  41afa8:	b	41b064 <feof@plt+0x17f84>
  41afac:	mov	x9, xzr
  41afb0:	mov	w10, w11
  41afb4:	mov	w12, w10
  41afb8:	add	x9, x9, #0x1
  41afbc:	lsl	w10, w10, #1
  41afc0:	tbnz	w12, #6, 41afb4 <feof@plt+0x17ed4>
  41afc4:	mov	w0, wzr
  41afc8:	cmp	x9, x1
  41afcc:	mov	w10, #0xffffffff            	// #-1
  41afd0:	b.hi	41b064 <feof@plt+0x17f84>  // b.pmore
  41afd4:	sub	x12, x9, #0x2
  41afd8:	cmp	x12, #0x4
  41afdc:	b.hi	41b064 <feof@plt+0x17f84>  // b.pmore
  41afe0:	mov	w10, #0x7                   	// #7
  41afe4:	mov	w14, #0xffffffff            	// #-1
  41afe8:	sub	w10, w10, w9
  41afec:	lsl	w10, w14, w10
  41aff0:	mov	x12, xzr
  41aff4:	sub	x13, x9, #0x1
  41aff8:	bic	w10, w11, w10
  41affc:	add	x11, x8, #0x1
  41b000:	mov	w8, w10
  41b004:	ldrb	w10, [x11, x12]
  41b008:	and	w14, w10, #0xc0
  41b00c:	cmp	w14, #0x80
  41b010:	b.ne	41b05c <feof@plt+0x17f7c>  // b.any
  41b014:	add	x12, x12, #0x1
  41b018:	cmp	x13, x12
  41b01c:	bfi	w10, w8, #6, #26
  41b020:	b.ne	41b000 <feof@plt+0x17f20>  // b.any
  41b024:	cmp	w10, #0x80
  41b028:	b.cc	41b05c <feof@plt+0x17f7c>  // b.lo, b.ul, b.last
  41b02c:	cmp	x9, #0x3
  41b030:	b.cc	41b03c <feof@plt+0x17f5c>  // b.lo, b.ul, b.last
  41b034:	cmp	w10, #0x800
  41b038:	b.cc	41b05c <feof@plt+0x17f7c>  // b.lo, b.ul, b.last
  41b03c:	cmp	x9, #0x4
  41b040:	b.cc	41b04c <feof@plt+0x17f6c>  // b.lo, b.ul, b.last
  41b044:	cmp	w10, #0x10, lsl #12
  41b048:	b.cc	41b05c <feof@plt+0x17f7c>  // b.lo, b.ul, b.last
  41b04c:	cmp	x9, #0x5
  41b050:	b.cc	41b070 <feof@plt+0x17f90>  // b.lo, b.ul, b.last
  41b054:	cmp	w10, #0x200, lsl #12
  41b058:	b.cs	41b070 <feof@plt+0x17f90>  // b.hs, b.nlast
  41b05c:	mov	w0, wzr
  41b060:	mov	w10, #0xffffffff            	// #-1
  41b064:	str	w10, [x2]
  41b068:	ldp	x29, x30, [sp], #16
  41b06c:	ret
  41b070:	lsr	w11, w10, #26
  41b074:	cmp	w11, #0x0
  41b078:	and	w8, w8, #0x3ffffe0
  41b07c:	cset	w11, eq  // eq = none
  41b080:	cmp	x9, #0x5
  41b084:	cset	w12, hi  // hi = pmore
  41b088:	cmp	w8, #0x360
  41b08c:	and	w8, w12, w11
  41b090:	cset	w11, eq  // eq = none
  41b094:	orr	w8, w8, w11
  41b098:	cmp	w8, #0x0
  41b09c:	csinv	w10, w10, wzr, eq  // eq = none
  41b0a0:	csel	w0, wzr, w9, ne  // ne = any
  41b0a4:	b	41b064 <feof@plt+0x17f84>
  41b0a8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41b0ac:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41b0b0:	add	x0, x0, #0xb33
  41b0b4:	add	x2, x2, #0xbdc
  41b0b8:	mov	w1, #0x71b                 	// #1819
  41b0bc:	bl	40f560 <feof@plt+0xc480>
  41b0c0:	stp	x29, x30, [sp, #-48]!
  41b0c4:	stp	x22, x21, [sp, #16]
  41b0c8:	stp	x20, x19, [sp, #32]
  41b0cc:	mov	x29, sp
  41b0d0:	ldrh	w8, [x1, #2]
  41b0d4:	mov	x20, x1
  41b0d8:	mov	x19, x0
  41b0dc:	cbz	w8, 41b364 <feof@plt+0x18284>
  41b0e0:	ldr	w8, [x19, #40]
  41b0e4:	cmp	w8, #0x1
  41b0e8:	b.lt	41b148 <feof@plt+0x18068>  // b.tstop
  41b0ec:	ldr	x8, [x19, #8]
  41b0f0:	ldr	w9, [x19, #28]
  41b0f4:	ldr	w10, [x8, #200]
  41b0f8:	cmp	w9, w10
  41b0fc:	b.gt	41b148 <feof@plt+0x18068>
  41b100:	ldr	x21, [x8, #176]
  41b104:	ldp	x8, x9, [x21, #24]
  41b108:	cmp	x9, x8
  41b10c:	b.ne	41b120 <feof@plt+0x18040>  // b.any
  41b110:	mov	w1, #0x1                   	// #1
  41b114:	mov	x0, x21
  41b118:	bl	4615ac <_obstack_newchunk@@Base>
  41b11c:	ldr	x8, [x21, #24]
  41b120:	add	x9, x8, #0x1
  41b124:	mov	w10, #0xa                   	// #10
  41b128:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41b12c:	str	x9, [x21, #24]
  41b130:	strb	w10, [x8]
  41b134:	ldr	x8, [x19, #8]
  41b138:	ldrb	w9, [x11, #3918]
  41b13c:	strb	wzr, [x19, #65]
  41b140:	str	wzr, [x8, #200]
  41b144:	tbnz	w9, #6, 41b18c <feof@plt+0x180ac>
  41b148:	ldr	x8, [x19, #8]
  41b14c:	ldr	x21, [x8, #176]
  41b150:	ldp	x8, x9, [x21, #24]
  41b154:	cmp	x9, x8
  41b158:	b.ne	41b16c <feof@plt+0x1808c>  // b.any
  41b15c:	mov	w1, #0x1                   	// #1
  41b160:	mov	x0, x21
  41b164:	bl	4615ac <_obstack_newchunk@@Base>
  41b168:	ldr	x8, [x21, #24]
  41b16c:	add	x9, x8, #0x1
  41b170:	mov	w10, #0x5b                  	// #91
  41b174:	str	x9, [x21, #24]
  41b178:	strb	w10, [x8]
  41b17c:	ldr	x8, [x19, #8]
  41b180:	ldr	w9, [x8, #200]
  41b184:	add	w9, w9, #0x1
  41b188:	str	w9, [x8, #200]
  41b18c:	ldr	x8, [x19, #8]
  41b190:	ldrh	w2, [x20]
  41b194:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b198:	add	x1, x1, #0x911
  41b19c:	add	x0, x8, #0xcc
  41b1a0:	bl	402c30 <sprintf@plt>
  41b1a4:	ldr	x8, [x19, #8]
  41b1a8:	add	x21, x8, #0xcc
  41b1ac:	mov	x0, x21
  41b1b0:	bl	402a50 <strlen@plt>
  41b1b4:	add	x2, x21, x0
  41b1b8:	mov	x0, x19
  41b1bc:	mov	x1, x21
  41b1c0:	bl	41a800 <feof@plt+0x17720>
  41b1c4:	ldr	w8, [x19, #40]
  41b1c8:	cmp	w8, #0x1
  41b1cc:	b.lt	41b22c <feof@plt+0x1814c>  // b.tstop
  41b1d0:	ldr	x8, [x19, #8]
  41b1d4:	ldr	w9, [x19, #28]
  41b1d8:	ldr	w10, [x8, #200]
  41b1dc:	cmp	w9, w10
  41b1e0:	b.gt	41b22c <feof@plt+0x1814c>
  41b1e4:	ldr	x21, [x8, #176]
  41b1e8:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  41b1ec:	ldrh	w22, [x10, #3824]
  41b1f0:	ldp	x8, x9, [x21, #24]
  41b1f4:	cmp	x9, x8
  41b1f8:	b.ne	41b20c <feof@plt+0x1812c>  // b.any
  41b1fc:	mov	w1, #0x1                   	// #1
  41b200:	mov	x0, x21
  41b204:	bl	4615ac <_obstack_newchunk@@Base>
  41b208:	ldr	x8, [x21, #24]
  41b20c:	add	x9, x8, #0x1
  41b210:	mov	w10, #0xa                   	// #10
  41b214:	str	x9, [x21, #24]
  41b218:	strb	w10, [x8]
  41b21c:	ldr	x8, [x19, #8]
  41b220:	strb	wzr, [x19, #65]
  41b224:	str	wzr, [x8, #200]
  41b228:	tbnz	w22, #6, 41b270 <feof@plt+0x18190>
  41b22c:	ldr	x8, [x19, #8]
  41b230:	ldr	x21, [x8, #176]
  41b234:	ldp	x8, x9, [x21, #24]
  41b238:	cmp	x9, x8
  41b23c:	b.ne	41b250 <feof@plt+0x18170>  // b.any
  41b240:	mov	w1, #0x1                   	// #1
  41b244:	mov	x0, x21
  41b248:	bl	4615ac <_obstack_newchunk@@Base>
  41b24c:	ldr	x8, [x21, #24]
  41b250:	add	x9, x8, #0x1
  41b254:	mov	w10, #0x2c                  	// #44
  41b258:	str	x9, [x21, #24]
  41b25c:	strb	w10, [x8]
  41b260:	ldr	x8, [x19, #8]
  41b264:	ldr	w9, [x8, #200]
  41b268:	add	w9, w9, #0x1
  41b26c:	str	w9, [x8, #200]
  41b270:	ldr	x8, [x19, #8]
  41b274:	ldrh	w2, [x20, #2]
  41b278:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b27c:	add	x1, x1, #0x911
  41b280:	add	x0, x8, #0xcc
  41b284:	bl	402c30 <sprintf@plt>
  41b288:	ldr	x8, [x19, #8]
  41b28c:	add	x20, x8, #0xcc
  41b290:	mov	x0, x20
  41b294:	bl	402a50 <strlen@plt>
  41b298:	add	x2, x20, x0
  41b29c:	mov	x0, x19
  41b2a0:	mov	x1, x20
  41b2a4:	bl	41a800 <feof@plt+0x17720>
  41b2a8:	ldr	w8, [x19, #40]
  41b2ac:	cmp	w8, #0x0
  41b2b0:	b.le	41b310 <feof@plt+0x18230>
  41b2b4:	ldr	x8, [x19, #8]
  41b2b8:	ldr	w9, [x19, #28]
  41b2bc:	ldr	w10, [x8, #200]
  41b2c0:	cmp	w9, w10
  41b2c4:	b.gt	41b310 <feof@plt+0x18230>
  41b2c8:	ldr	x20, [x8, #176]
  41b2cc:	ldp	x8, x9, [x20, #24]
  41b2d0:	cmp	x9, x8
  41b2d4:	b.ne	41b2e8 <feof@plt+0x18208>  // b.any
  41b2d8:	mov	w1, #0x1                   	// #1
  41b2dc:	mov	x0, x20
  41b2e0:	bl	4615ac <_obstack_newchunk@@Base>
  41b2e4:	ldr	x8, [x20, #24]
  41b2e8:	add	x9, x8, #0x1
  41b2ec:	mov	w10, #0xa                   	// #10
  41b2f0:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41b2f4:	str	x9, [x20, #24]
  41b2f8:	strb	w10, [x8]
  41b2fc:	ldr	x8, [x19, #8]
  41b300:	ldrb	w9, [x11, #3922]
  41b304:	strb	wzr, [x19, #65]
  41b308:	str	wzr, [x8, #200]
  41b30c:	tbnz	w9, #6, 41b354 <feof@plt+0x18274>
  41b310:	ldr	x8, [x19, #8]
  41b314:	ldr	x20, [x8, #176]
  41b318:	ldp	x8, x9, [x20, #24]
  41b31c:	cmp	x9, x8
  41b320:	b.ne	41b334 <feof@plt+0x18254>  // b.any
  41b324:	mov	w1, #0x1                   	// #1
  41b328:	mov	x0, x20
  41b32c:	bl	4615ac <_obstack_newchunk@@Base>
  41b330:	ldr	x8, [x20, #24]
  41b334:	add	x9, x8, #0x1
  41b338:	mov	w10, #0x5d                  	// #93
  41b33c:	str	x9, [x20, #24]
  41b340:	strb	w10, [x8]
  41b344:	ldr	x8, [x19, #8]
  41b348:	ldr	w9, [x8, #200]
  41b34c:	add	w9, w9, #0x1
  41b350:	str	w9, [x8, #200]
  41b354:	ldp	x20, x19, [sp, #32]
  41b358:	ldp	x22, x21, [sp, #16]
  41b35c:	ldp	x29, x30, [sp], #48
  41b360:	ret
  41b364:	ldr	x8, [x19, #8]
  41b368:	ldrh	w2, [x20]
  41b36c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b370:	add	x1, x1, #0x911
  41b374:	add	x0, x8, #0xcc
  41b378:	bl	402c30 <sprintf@plt>
  41b37c:	ldr	x8, [x19, #8]
  41b380:	add	x20, x8, #0xcc
  41b384:	mov	x0, x20
  41b388:	bl	402a50 <strlen@plt>
  41b38c:	add	x2, x20, x0
  41b390:	mov	x0, x19
  41b394:	mov	x1, x20
  41b398:	ldp	x20, x19, [sp, #32]
  41b39c:	ldp	x22, x21, [sp, #16]
  41b3a0:	ldp	x29, x30, [sp], #48
  41b3a4:	b	41a800 <feof@plt+0x17720>
  41b3a8:	stp	x29, x30, [sp, #-48]!
  41b3ac:	stp	x22, x21, [sp, #16]
  41b3b0:	stp	x20, x19, [sp, #32]
  41b3b4:	mov	x29, sp
  41b3b8:	ldr	x8, [x1, #8]
  41b3bc:	mov	x20, x1
  41b3c0:	mov	x19, x0
  41b3c4:	cbz	x8, 41b64c <feof@plt+0x1856c>
  41b3c8:	ldr	w8, [x19, #40]
  41b3cc:	cmp	w8, #0x1
  41b3d0:	b.lt	41b430 <feof@plt+0x18350>  // b.tstop
  41b3d4:	ldr	x8, [x19, #8]
  41b3d8:	ldr	w9, [x19, #28]
  41b3dc:	ldr	w10, [x8, #200]
  41b3e0:	cmp	w9, w10
  41b3e4:	b.gt	41b430 <feof@plt+0x18350>
  41b3e8:	ldr	x21, [x8, #176]
  41b3ec:	ldp	x8, x9, [x21, #24]
  41b3f0:	cmp	x9, x8
  41b3f4:	b.ne	41b408 <feof@plt+0x18328>  // b.any
  41b3f8:	mov	w1, #0x1                   	// #1
  41b3fc:	mov	x0, x21
  41b400:	bl	4615ac <_obstack_newchunk@@Base>
  41b404:	ldr	x8, [x21, #24]
  41b408:	add	x9, x8, #0x1
  41b40c:	mov	w10, #0xa                   	// #10
  41b410:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41b414:	str	x9, [x21, #24]
  41b418:	strb	w10, [x8]
  41b41c:	ldr	x8, [x19, #8]
  41b420:	ldrb	w9, [x11, #3918]
  41b424:	strb	wzr, [x19, #65]
  41b428:	str	wzr, [x8, #200]
  41b42c:	tbnz	w9, #6, 41b474 <feof@plt+0x18394>
  41b430:	ldr	x8, [x19, #8]
  41b434:	ldr	x21, [x8, #176]
  41b438:	ldp	x8, x9, [x21, #24]
  41b43c:	cmp	x9, x8
  41b440:	b.ne	41b454 <feof@plt+0x18374>  // b.any
  41b444:	mov	w1, #0x1                   	// #1
  41b448:	mov	x0, x21
  41b44c:	bl	4615ac <_obstack_newchunk@@Base>
  41b450:	ldr	x8, [x21, #24]
  41b454:	add	x9, x8, #0x1
  41b458:	mov	w10, #0x5b                  	// #91
  41b45c:	str	x9, [x21, #24]
  41b460:	strb	w10, [x8]
  41b464:	ldr	x8, [x19, #8]
  41b468:	ldr	w9, [x8, #200]
  41b46c:	add	w9, w9, #0x1
  41b470:	str	w9, [x8, #200]
  41b474:	ldr	x8, [x19, #8]
  41b478:	ldr	x2, [x20]
  41b47c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b480:	add	x1, x1, #0x911
  41b484:	add	x0, x8, #0xcc
  41b488:	bl	402c30 <sprintf@plt>
  41b48c:	ldr	x8, [x19, #8]
  41b490:	add	x21, x8, #0xcc
  41b494:	mov	x0, x21
  41b498:	bl	402a50 <strlen@plt>
  41b49c:	add	x2, x21, x0
  41b4a0:	mov	x0, x19
  41b4a4:	mov	x1, x21
  41b4a8:	bl	41a800 <feof@plt+0x17720>
  41b4ac:	ldr	w8, [x19, #40]
  41b4b0:	cmp	w8, #0x1
  41b4b4:	b.lt	41b514 <feof@plt+0x18434>  // b.tstop
  41b4b8:	ldr	x8, [x19, #8]
  41b4bc:	ldr	w9, [x19, #28]
  41b4c0:	ldr	w10, [x8, #200]
  41b4c4:	cmp	w9, w10
  41b4c8:	b.gt	41b514 <feof@plt+0x18434>
  41b4cc:	ldr	x21, [x8, #176]
  41b4d0:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  41b4d4:	ldrh	w22, [x10, #3824]
  41b4d8:	ldp	x8, x9, [x21, #24]
  41b4dc:	cmp	x9, x8
  41b4e0:	b.ne	41b4f4 <feof@plt+0x18414>  // b.any
  41b4e4:	mov	w1, #0x1                   	// #1
  41b4e8:	mov	x0, x21
  41b4ec:	bl	4615ac <_obstack_newchunk@@Base>
  41b4f0:	ldr	x8, [x21, #24]
  41b4f4:	add	x9, x8, #0x1
  41b4f8:	mov	w10, #0xa                   	// #10
  41b4fc:	str	x9, [x21, #24]
  41b500:	strb	w10, [x8]
  41b504:	ldr	x8, [x19, #8]
  41b508:	strb	wzr, [x19, #65]
  41b50c:	str	wzr, [x8, #200]
  41b510:	tbnz	w22, #6, 41b558 <feof@plt+0x18478>
  41b514:	ldr	x8, [x19, #8]
  41b518:	ldr	x21, [x8, #176]
  41b51c:	ldp	x8, x9, [x21, #24]
  41b520:	cmp	x9, x8
  41b524:	b.ne	41b538 <feof@plt+0x18458>  // b.any
  41b528:	mov	w1, #0x1                   	// #1
  41b52c:	mov	x0, x21
  41b530:	bl	4615ac <_obstack_newchunk@@Base>
  41b534:	ldr	x8, [x21, #24]
  41b538:	add	x9, x8, #0x1
  41b53c:	mov	w10, #0x2c                  	// #44
  41b540:	str	x9, [x21, #24]
  41b544:	strb	w10, [x8]
  41b548:	ldr	x8, [x19, #8]
  41b54c:	ldr	w9, [x8, #200]
  41b550:	add	w9, w9, #0x1
  41b554:	str	w9, [x8, #200]
  41b558:	ldr	x8, [x19, #8]
  41b55c:	ldr	x2, [x20, #8]
  41b560:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b564:	add	x1, x1, #0x911
  41b568:	add	x0, x8, #0xcc
  41b56c:	bl	402c30 <sprintf@plt>
  41b570:	ldr	x8, [x19, #8]
  41b574:	add	x20, x8, #0xcc
  41b578:	mov	x0, x20
  41b57c:	bl	402a50 <strlen@plt>
  41b580:	add	x2, x20, x0
  41b584:	mov	x0, x19
  41b588:	mov	x1, x20
  41b58c:	bl	41a800 <feof@plt+0x17720>
  41b590:	ldr	w8, [x19, #40]
  41b594:	cmp	w8, #0x0
  41b598:	b.le	41b5f8 <feof@plt+0x18518>
  41b59c:	ldr	x8, [x19, #8]
  41b5a0:	ldr	w9, [x19, #28]
  41b5a4:	ldr	w10, [x8, #200]
  41b5a8:	cmp	w9, w10
  41b5ac:	b.gt	41b5f8 <feof@plt+0x18518>
  41b5b0:	ldr	x20, [x8, #176]
  41b5b4:	ldp	x8, x9, [x20, #24]
  41b5b8:	cmp	x9, x8
  41b5bc:	b.ne	41b5d0 <feof@plt+0x184f0>  // b.any
  41b5c0:	mov	w1, #0x1                   	// #1
  41b5c4:	mov	x0, x20
  41b5c8:	bl	4615ac <_obstack_newchunk@@Base>
  41b5cc:	ldr	x8, [x20, #24]
  41b5d0:	add	x9, x8, #0x1
  41b5d4:	mov	w10, #0xa                   	// #10
  41b5d8:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41b5dc:	str	x9, [x20, #24]
  41b5e0:	strb	w10, [x8]
  41b5e4:	ldr	x8, [x19, #8]
  41b5e8:	ldrb	w9, [x11, #3922]
  41b5ec:	strb	wzr, [x19, #65]
  41b5f0:	str	wzr, [x8, #200]
  41b5f4:	tbnz	w9, #6, 41b63c <feof@plt+0x1855c>
  41b5f8:	ldr	x8, [x19, #8]
  41b5fc:	ldr	x20, [x8, #176]
  41b600:	ldp	x8, x9, [x20, #24]
  41b604:	cmp	x9, x8
  41b608:	b.ne	41b61c <feof@plt+0x1853c>  // b.any
  41b60c:	mov	w1, #0x1                   	// #1
  41b610:	mov	x0, x20
  41b614:	bl	4615ac <_obstack_newchunk@@Base>
  41b618:	ldr	x8, [x20, #24]
  41b61c:	add	x9, x8, #0x1
  41b620:	mov	w10, #0x5d                  	// #93
  41b624:	str	x9, [x20, #24]
  41b628:	strb	w10, [x8]
  41b62c:	ldr	x8, [x19, #8]
  41b630:	ldr	w9, [x8, #200]
  41b634:	add	w9, w9, #0x1
  41b638:	str	w9, [x8, #200]
  41b63c:	ldp	x20, x19, [sp, #32]
  41b640:	ldp	x22, x21, [sp, #16]
  41b644:	ldp	x29, x30, [sp], #48
  41b648:	ret
  41b64c:	ldr	x8, [x19, #8]
  41b650:	ldr	x2, [x20]
  41b654:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b658:	add	x1, x1, #0x911
  41b65c:	add	x0, x8, #0xcc
  41b660:	bl	402c30 <sprintf@plt>
  41b664:	ldr	x8, [x19, #8]
  41b668:	add	x20, x8, #0xcc
  41b66c:	mov	x0, x20
  41b670:	bl	402a50 <strlen@plt>
  41b674:	add	x2, x20, x0
  41b678:	mov	x0, x19
  41b67c:	mov	x1, x20
  41b680:	ldp	x20, x19, [sp, #32]
  41b684:	ldp	x22, x21, [sp, #16]
  41b688:	ldp	x29, x30, [sp], #48
  41b68c:	b	41a800 <feof@plt+0x17720>
  41b690:	stp	x29, x30, [sp, #-48]!
  41b694:	stp	x22, x21, [sp, #16]
  41b698:	stp	x20, x19, [sp, #32]
  41b69c:	mov	x29, sp
  41b6a0:	ldr	x8, [x1, #8]
  41b6a4:	mov	x20, x1
  41b6a8:	mov	x19, x0
  41b6ac:	cbz	x8, 41b934 <feof@plt+0x18854>
  41b6b0:	ldr	w8, [x19, #40]
  41b6b4:	cmp	w8, #0x1
  41b6b8:	b.lt	41b718 <feof@plt+0x18638>  // b.tstop
  41b6bc:	ldr	x8, [x19, #8]
  41b6c0:	ldr	w9, [x19, #28]
  41b6c4:	ldr	w10, [x8, #200]
  41b6c8:	cmp	w9, w10
  41b6cc:	b.gt	41b718 <feof@plt+0x18638>
  41b6d0:	ldr	x21, [x8, #176]
  41b6d4:	ldp	x8, x9, [x21, #24]
  41b6d8:	cmp	x9, x8
  41b6dc:	b.ne	41b6f0 <feof@plt+0x18610>  // b.any
  41b6e0:	mov	w1, #0x1                   	// #1
  41b6e4:	mov	x0, x21
  41b6e8:	bl	4615ac <_obstack_newchunk@@Base>
  41b6ec:	ldr	x8, [x21, #24]
  41b6f0:	add	x9, x8, #0x1
  41b6f4:	mov	w10, #0xa                   	// #10
  41b6f8:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41b6fc:	str	x9, [x21, #24]
  41b700:	strb	w10, [x8]
  41b704:	ldr	x8, [x19, #8]
  41b708:	ldrb	w9, [x11, #3918]
  41b70c:	strb	wzr, [x19, #65]
  41b710:	str	wzr, [x8, #200]
  41b714:	tbnz	w9, #6, 41b75c <feof@plt+0x1867c>
  41b718:	ldr	x8, [x19, #8]
  41b71c:	ldr	x21, [x8, #176]
  41b720:	ldp	x8, x9, [x21, #24]
  41b724:	cmp	x9, x8
  41b728:	b.ne	41b73c <feof@plt+0x1865c>  // b.any
  41b72c:	mov	w1, #0x1                   	// #1
  41b730:	mov	x0, x21
  41b734:	bl	4615ac <_obstack_newchunk@@Base>
  41b738:	ldr	x8, [x21, #24]
  41b73c:	add	x9, x8, #0x1
  41b740:	mov	w10, #0x5b                  	// #91
  41b744:	str	x9, [x21, #24]
  41b748:	strb	w10, [x8]
  41b74c:	ldr	x8, [x19, #8]
  41b750:	ldr	w9, [x8, #200]
  41b754:	add	w9, w9, #0x1
  41b758:	str	w9, [x8, #200]
  41b75c:	ldr	x8, [x19, #8]
  41b760:	ldr	x2, [x20]
  41b764:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b768:	add	x1, x1, #0x911
  41b76c:	add	x0, x8, #0xcc
  41b770:	bl	402c30 <sprintf@plt>
  41b774:	ldr	x8, [x19, #8]
  41b778:	add	x21, x8, #0xcc
  41b77c:	mov	x0, x21
  41b780:	bl	402a50 <strlen@plt>
  41b784:	add	x2, x21, x0
  41b788:	mov	x0, x19
  41b78c:	mov	x1, x21
  41b790:	bl	41a800 <feof@plt+0x17720>
  41b794:	ldr	w8, [x19, #40]
  41b798:	cmp	w8, #0x1
  41b79c:	b.lt	41b7fc <feof@plt+0x1871c>  // b.tstop
  41b7a0:	ldr	x8, [x19, #8]
  41b7a4:	ldr	w9, [x19, #28]
  41b7a8:	ldr	w10, [x8, #200]
  41b7ac:	cmp	w9, w10
  41b7b0:	b.gt	41b7fc <feof@plt+0x1871c>
  41b7b4:	ldr	x21, [x8, #176]
  41b7b8:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  41b7bc:	ldrh	w22, [x10, #3824]
  41b7c0:	ldp	x8, x9, [x21, #24]
  41b7c4:	cmp	x9, x8
  41b7c8:	b.ne	41b7dc <feof@plt+0x186fc>  // b.any
  41b7cc:	mov	w1, #0x1                   	// #1
  41b7d0:	mov	x0, x21
  41b7d4:	bl	4615ac <_obstack_newchunk@@Base>
  41b7d8:	ldr	x8, [x21, #24]
  41b7dc:	add	x9, x8, #0x1
  41b7e0:	mov	w10, #0xa                   	// #10
  41b7e4:	str	x9, [x21, #24]
  41b7e8:	strb	w10, [x8]
  41b7ec:	ldr	x8, [x19, #8]
  41b7f0:	strb	wzr, [x19, #65]
  41b7f4:	str	wzr, [x8, #200]
  41b7f8:	tbnz	w22, #6, 41b840 <feof@plt+0x18760>
  41b7fc:	ldr	x8, [x19, #8]
  41b800:	ldr	x21, [x8, #176]
  41b804:	ldp	x8, x9, [x21, #24]
  41b808:	cmp	x9, x8
  41b80c:	b.ne	41b820 <feof@plt+0x18740>  // b.any
  41b810:	mov	w1, #0x1                   	// #1
  41b814:	mov	x0, x21
  41b818:	bl	4615ac <_obstack_newchunk@@Base>
  41b81c:	ldr	x8, [x21, #24]
  41b820:	add	x9, x8, #0x1
  41b824:	mov	w10, #0x2c                  	// #44
  41b828:	str	x9, [x21, #24]
  41b82c:	strb	w10, [x8]
  41b830:	ldr	x8, [x19, #8]
  41b834:	ldr	w9, [x8, #200]
  41b838:	add	w9, w9, #0x1
  41b83c:	str	w9, [x8, #200]
  41b840:	ldr	x8, [x19, #8]
  41b844:	ldr	x2, [x20, #8]
  41b848:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b84c:	add	x1, x1, #0x911
  41b850:	add	x0, x8, #0xcc
  41b854:	bl	402c30 <sprintf@plt>
  41b858:	ldr	x8, [x19, #8]
  41b85c:	add	x20, x8, #0xcc
  41b860:	mov	x0, x20
  41b864:	bl	402a50 <strlen@plt>
  41b868:	add	x2, x20, x0
  41b86c:	mov	x0, x19
  41b870:	mov	x1, x20
  41b874:	bl	41a800 <feof@plt+0x17720>
  41b878:	ldr	w8, [x19, #40]
  41b87c:	cmp	w8, #0x0
  41b880:	b.le	41b8e0 <feof@plt+0x18800>
  41b884:	ldr	x8, [x19, #8]
  41b888:	ldr	w9, [x19, #28]
  41b88c:	ldr	w10, [x8, #200]
  41b890:	cmp	w9, w10
  41b894:	b.gt	41b8e0 <feof@plt+0x18800>
  41b898:	ldr	x20, [x8, #176]
  41b89c:	ldp	x8, x9, [x20, #24]
  41b8a0:	cmp	x9, x8
  41b8a4:	b.ne	41b8b8 <feof@plt+0x187d8>  // b.any
  41b8a8:	mov	w1, #0x1                   	// #1
  41b8ac:	mov	x0, x20
  41b8b0:	bl	4615ac <_obstack_newchunk@@Base>
  41b8b4:	ldr	x8, [x20, #24]
  41b8b8:	add	x9, x8, #0x1
  41b8bc:	mov	w10, #0xa                   	// #10
  41b8c0:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  41b8c4:	str	x9, [x20, #24]
  41b8c8:	strb	w10, [x8]
  41b8cc:	ldr	x8, [x19, #8]
  41b8d0:	ldrb	w9, [x11, #3922]
  41b8d4:	strb	wzr, [x19, #65]
  41b8d8:	str	wzr, [x8, #200]
  41b8dc:	tbnz	w9, #6, 41b924 <feof@plt+0x18844>
  41b8e0:	ldr	x8, [x19, #8]
  41b8e4:	ldr	x20, [x8, #176]
  41b8e8:	ldp	x8, x9, [x20, #24]
  41b8ec:	cmp	x9, x8
  41b8f0:	b.ne	41b904 <feof@plt+0x18824>  // b.any
  41b8f4:	mov	w1, #0x1                   	// #1
  41b8f8:	mov	x0, x20
  41b8fc:	bl	4615ac <_obstack_newchunk@@Base>
  41b900:	ldr	x8, [x20, #24]
  41b904:	add	x9, x8, #0x1
  41b908:	mov	w10, #0x5d                  	// #93
  41b90c:	str	x9, [x20, #24]
  41b910:	strb	w10, [x8]
  41b914:	ldr	x8, [x19, #8]
  41b918:	ldr	w9, [x8, #200]
  41b91c:	add	w9, w9, #0x1
  41b920:	str	w9, [x8, #200]
  41b924:	ldp	x20, x19, [sp, #32]
  41b928:	ldp	x22, x21, [sp, #16]
  41b92c:	ldp	x29, x30, [sp], #48
  41b930:	ret
  41b934:	ldr	x8, [x19, #8]
  41b938:	ldr	x2, [x20]
  41b93c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41b940:	add	x1, x1, #0x911
  41b944:	add	x0, x8, #0xcc
  41b948:	bl	402c30 <sprintf@plt>
  41b94c:	ldr	x8, [x19, #8]
  41b950:	add	x20, x8, #0xcc
  41b954:	mov	x0, x20
  41b958:	bl	402a50 <strlen@plt>
  41b95c:	add	x2, x20, x0
  41b960:	mov	x0, x19
  41b964:	mov	x1, x20
  41b968:	ldp	x20, x19, [sp, #32]
  41b96c:	ldp	x22, x21, [sp, #16]
  41b970:	ldp	x29, x30, [sp], #48
  41b974:	b	41a800 <feof@plt+0x17720>
  41b978:	stp	x29, x30, [sp, #-48]!
  41b97c:	str	x21, [sp, #16]
  41b980:	stp	x20, x19, [sp, #32]
  41b984:	mov	x29, sp
  41b988:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x838>
  41b98c:	add	x19, x19, #0xbb5
  41b990:	mov	w0, wzr
  41b994:	mov	x1, x19
  41b998:	bl	402d10 <setlocale@plt>
  41b99c:	mov	w0, #0x5                   	// #5
  41b9a0:	mov	x1, x19
  41b9a4:	bl	402d10 <setlocale@plt>
  41b9a8:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0xd838>
  41b9ac:	add	x19, x19, #0x651
  41b9b0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41b9b4:	add	x1, x1, #0xbed
  41b9b8:	mov	x0, x19
  41b9bc:	bl	402a20 <bindtextdomain@plt>
  41b9c0:	mov	x0, x19
  41b9c4:	bl	4029f0 <textdomain@plt>
  41b9c8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41b9cc:	add	x0, x0, #0xbff
  41b9d0:	bl	402cd0 <gettext@plt>
  41b9d4:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41b9d8:	str	x0, [x20, #1368]
  41b9dc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  41b9e0:	add	x0, x0, #0x1a3
  41b9e4:	bl	402cd0 <gettext@plt>
  41b9e8:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  41b9ec:	str	x0, [x21, #1376]
  41b9f0:	mov	w0, #0xe                   	// #14
  41b9f4:	bl	402fc0 <nl_langinfo@plt>
  41b9f8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41b9fc:	str	x0, [x8, #2320]
  41ba00:	cbz	x0, 41ba38 <feof@plt+0x18958>
  41ba04:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41ba08:	add	x1, x1, #0xc01
  41ba0c:	mov	x19, x0
  41ba10:	bl	402f50 <strcasecmp@plt>
  41ba14:	cbz	w0, 41ba2c <feof@plt+0x1894c>
  41ba18:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41ba1c:	add	x1, x1, #0xc07
  41ba20:	mov	x0, x19
  41ba24:	bl	402f50 <strcasecmp@plt>
  41ba28:	cbnz	w0, 41ba38 <feof@plt+0x18958>
  41ba2c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ba30:	mov	w9, #0x1                   	// #1
  41ba34:	strb	w9, [x8, #2328]
  41ba38:	ldr	x0, [x20, #1368]
  41ba3c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41ba40:	add	x1, x1, #0xbff
  41ba44:	bl	402ed0 <strcmp@plt>
  41ba48:	cbnz	w0, 41ba8c <feof@plt+0x189ac>
  41ba4c:	ldr	x0, [x21, #1376]
  41ba50:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0xd838>
  41ba54:	add	x19, x19, #0x1a3
  41ba58:	mov	x1, x19
  41ba5c:	bl	402ed0 <strcmp@plt>
  41ba60:	cbnz	w0, 41ba8c <feof@plt+0x189ac>
  41ba64:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ba68:	ldrb	w8, [x8, #2328]
  41ba6c:	str	x19, [x20, #1368]
  41ba70:	cbz	w8, 41ba8c <feof@plt+0x189ac>
  41ba74:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41ba78:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  41ba7c:	add	x8, x8, #0xc0c
  41ba80:	add	x9, x9, #0xc10
  41ba84:	str	x8, [x20, #1368]
  41ba88:	str	x9, [x21, #1376]
  41ba8c:	ldp	x20, x19, [sp, #32]
  41ba90:	ldr	x21, [sp, #16]
  41ba94:	ldp	x29, x30, [sp], #48
  41ba98:	ret
  41ba9c:	stp	x29, x30, [sp, #-48]!
  41baa0:	str	x21, [sp, #16]
  41baa4:	stp	x20, x19, [sp, #32]
  41baa8:	mov	x29, sp
  41baac:	mov	x19, x0
  41bab0:	mov	x0, xzr
  41bab4:	mov	x1, x19
  41bab8:	mov	x2, xzr
  41babc:	bl	402dd0 <mbstowcs@plt>
  41bac0:	add	x2, x0, #0x1
  41bac4:	lsl	x8, x2, #2
  41bac8:	add	x8, x8, #0xf
  41bacc:	and	x8, x8, #0xfffffffffffffff0
  41bad0:	mov	x9, sp
  41bad4:	sub	x21, x9, x8
  41bad8:	mov	x20, x0
  41badc:	mov	sp, x21
  41bae0:	mov	x0, x21
  41bae4:	mov	x1, x19
  41bae8:	bl	402dd0 <mbstowcs@plt>
  41baec:	mov	x0, x21
  41baf0:	mov	x1, x20
  41baf4:	bl	402f90 <wcswidth@plt>
  41baf8:	sxtw	x0, w0
  41bafc:	mov	sp, x29
  41bb00:	ldp	x20, x19, [sp, #32]
  41bb04:	ldr	x21, [sp, #16]
  41bb08:	ldp	x29, x30, [sp], #48
  41bb0c:	ret
  41bb10:	stp	x29, x30, [sp, #-32]!
  41bb14:	stp	x20, x19, [sp, #16]
  41bb18:	mov	x29, sp
  41bb1c:	bl	41ba9c <feof@plt+0x189bc>
  41bb20:	mov	x19, x0
  41bb24:	add	x0, x0, #0x1
  41bb28:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  41bb2c:	mov	w1, #0x20                  	// #32
  41bb30:	mov	x2, x19
  41bb34:	mov	x20, x0
  41bb38:	bl	402b40 <memset@plt>
  41bb3c:	strb	wzr, [x20, x19]
  41bb40:	mov	x0, x20
  41bb44:	ldp	x20, x19, [sp, #16]
  41bb48:	ldp	x29, x30, [sp], #32
  41bb4c:	ret
  41bb50:	sub	sp, sp, #0x40
  41bb54:	stp	x29, x30, [sp, #16]
  41bb58:	stp	x22, x21, [sp, #32]
  41bb5c:	stp	x20, x19, [sp, #48]
  41bb60:	add	x29, sp, #0x10
  41bb64:	mov	w0, #0x20                  	// #32
  41bb68:	mov	x19, x3
  41bb6c:	mov	x20, x2
  41bb70:	mov	x21, x1
  41bb74:	bl	402d30 <_Znwm@plt>
  41bb78:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41bb7c:	mov	x8, #0x300000000           	// #12884901888
  41bb80:	add	x22, x22, #0x928
  41bb84:	mov	x2, x0
  41bb88:	stp	xzr, xzr, [x0]
  41bb8c:	str	x8, [x0, #16]
  41bb90:	strb	wzr, [x0, #24]
  41bb94:	mov	x0, x22
  41bb98:	mov	x1, x21
  41bb9c:	bl	41c704 <feof@plt+0x19624>
  41bba0:	ldr	x0, [x22, #48]
  41bba4:	lsr	x2, x21, #3
  41bba8:	add	x1, sp, #0x8
  41bbac:	str	x21, [sp, #8]
  41bbb0:	bl	41cef0 <feof@plt+0x19e10>
  41bbb4:	ldr	x8, [x0]
  41bbb8:	cbz	x8, 41bbe0 <feof@plt+0x18b00>
  41bbbc:	ldr	x8, [x0, #8]
  41bbc0:	ldp	x9, x10, [x8]
  41bbc4:	ldr	x11, [x8, #16]
  41bbc8:	madd	x9, x19, x20, x9
  41bbcc:	add	x10, x10, #0x1
  41bbd0:	cmp	x11, x9
  41bbd4:	stp	x9, x10, [x8]
  41bbd8:	b.cs	41bbe0 <feof@plt+0x18b00>  // b.hs, b.nlast
  41bbdc:	str	x9, [x8, #16]
  41bbe0:	ldp	x9, x10, [x8, #32]
  41bbe4:	str	x19, [x8, #48]
  41bbe8:	add	x9, x9, x20
  41bbec:	cmp	x10, x9
  41bbf0:	str	x9, [x8, #32]
  41bbf4:	b.cs	41bbfc <feof@plt+0x18b1c>  // b.hs, b.nlast
  41bbf8:	str	x9, [x8, #40]
  41bbfc:	ldp	x20, x19, [sp, #48]
  41bc00:	ldp	x22, x21, [sp, #32]
  41bc04:	ldp	x29, x30, [sp, #16]
  41bc08:	add	sp, sp, #0x40
  41bc0c:	ret
  41bc10:	sub	sp, sp, #0x50
  41bc14:	stp	x29, x30, [sp, #16]
  41bc18:	stp	x24, x23, [sp, #32]
  41bc1c:	stp	x22, x21, [sp, #48]
  41bc20:	stp	x20, x19, [sp, #64]
  41bc24:	add	x29, sp, #0x10
  41bc28:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  41bc2c:	ldr	x0, [x24, #2392]
  41bc30:	lsr	x22, x1, #3
  41bc34:	mov	x21, x2
  41bc38:	mov	x23, x1
  41bc3c:	str	x1, [sp, #8]
  41bc40:	add	x1, sp, #0x8
  41bc44:	mov	w2, w22
  41bc48:	mov	w20, w4
  41bc4c:	mov	x19, x3
  41bc50:	bl	41cef0 <feof@plt+0x19e10>
  41bc54:	ldr	x8, [x0]
  41bc58:	cbnz	x8, 41bc88 <feof@plt+0x18ba8>
  41bc5c:	mov	w0, #0x20                  	// #32
  41bc60:	bl	402d30 <_Znwm@plt>
  41bc64:	mov	x8, #0x300000000           	// #12884901888
  41bc68:	mov	x2, x0
  41bc6c:	stp	xzr, xzr, [x0]
  41bc70:	str	x8, [x0, #16]
  41bc74:	strb	wzr, [x0, #24]
  41bc78:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  41bc7c:	add	x0, x0, #0x928
  41bc80:	mov	x1, x23
  41bc84:	bl	41c704 <feof@plt+0x19624>
  41bc88:	ldr	x0, [x24, #2392]
  41bc8c:	add	x1, sp, #0x8
  41bc90:	mov	w2, w22
  41bc94:	str	x23, [sp, #8]
  41bc98:	bl	41cef0 <feof@plt+0x19e10>
  41bc9c:	ldr	x8, [x0]
  41bca0:	cbz	x8, 41bcf4 <feof@plt+0x18c14>
  41bca4:	ldr	x22, [x0, #8]
  41bca8:	ldr	x8, [x22]
  41bcac:	subs	x8, x8, x21
  41bcb0:	b.cc	41bd1c <feof@plt+0x18c3c>  // b.lo, b.ul, b.last
  41bcb4:	str	x8, [x22]
  41bcb8:	tbz	w20, #0, 41bcf8 <feof@plt+0x18c18>
  41bcbc:	ldr	x8, [sp, #8]
  41bcc0:	ldr	x20, [x24, #2392]
  41bcc4:	add	x1, sp, #0x8
  41bcc8:	mov	w3, wzr
  41bccc:	lsr	x2, x8, #3
  41bcd0:	mov	x0, x20
  41bcd4:	bl	41cfd4 <feof@plt+0x19ef4>
  41bcd8:	cbz	x0, 41bcf8 <feof@plt+0x18c18>
  41bcdc:	mov	w8, #0x1                   	// #1
  41bce0:	str	x8, [x0]
  41bce4:	ldr	x8, [x20, #24]
  41bce8:	add	x8, x8, #0x1
  41bcec:	str	x8, [x20, #24]
  41bcf0:	b	41bcf8 <feof@plt+0x18c18>
  41bcf4:	mov	x22, xzr
  41bcf8:	ldr	x8, [x22, #32]
  41bcfc:	sub	x8, x8, x19
  41bd00:	str	x8, [x22, #32]
  41bd04:	ldp	x20, x19, [sp, #64]
  41bd08:	ldp	x22, x21, [sp, #48]
  41bd0c:	ldp	x24, x23, [sp, #32]
  41bd10:	ldp	x29, x30, [sp, #16]
  41bd14:	add	sp, sp, #0x50
  41bd18:	ret
  41bd1c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41bd20:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41bd24:	add	x0, x0, #0xc3b
  41bd28:	add	x2, x2, #0xc51
  41bd2c:	mov	w1, #0x97                  	// #151
  41bd30:	bl	40f560 <feof@plt+0xc480>
  41bd34:	cmp	w0, w1
  41bd38:	b.cs	41bd6c <feof@plt+0x18c8c>  // b.hs, b.nlast
  41bd3c:	cbz	w0, 41bd50 <feof@plt+0x18c70>
  41bd40:	cmp	w0, #0xf
  41bd44:	b.hi	41bd58 <feof@plt+0x18c78>  // b.pmore
  41bd48:	lsl	w8, w0, #1
  41bd4c:	b	41bd60 <feof@plt+0x18c80>
  41bd50:	mov	w8, #0x4                   	// #4
  41bd54:	b	41bd60 <feof@plt+0x18c80>
  41bd58:	add	w8, w0, w0, lsl #1
  41bd5c:	lsr	w8, w8, #1
  41bd60:	cmp	w8, w1
  41bd64:	csel	w0, w1, w8, cc  // cc = lo, ul, last
  41bd68:	ret
  41bd6c:	stp	x29, x30, [sp, #-16]!
  41bd70:	mov	x29, sp
  41bd74:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41bd78:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41bd7c:	add	x0, x0, #0xc14
  41bd80:	add	x2, x2, #0xc24
  41bd84:	mov	w1, #0xa2                  	// #162
  41bd88:	bl	40f560 <feof@plt+0xc480>
  41bd8c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x28838>
  41bd90:	add	x0, x0, #0x928
  41bd94:	mov	w1, #0x3                   	// #3
  41bd98:	mov	x2, xzr
  41bd9c:	b	41c140 <feof@plt+0x19060>
  41bda0:	stp	x29, x30, [sp, #-64]!
  41bda4:	str	x23, [sp, #16]
  41bda8:	stp	x22, x21, [sp, #32]
  41bdac:	stp	x20, x19, [sp, #48]
  41bdb0:	mov	x29, sp
  41bdb4:	mov	x19, x0
  41bdb8:	mov	w0, #0x30                  	// #48
  41bdbc:	bl	402d30 <_Znwm@plt>
  41bdc0:	mov	x20, x0
  41bdc4:	stp	xzr, xzr, [x0, #24]
  41bdc8:	str	xzr, [x0, #16]
  41bdcc:	strb	wzr, [x0, #44]
  41bdd0:	mov	w0, #0xd                   	// #13
  41bdd4:	bl	40eacc <feof@plt+0xb9ec>
  41bdd8:	mov	w8, w0
  41bddc:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  41bde0:	lsl	x8, x8, #4
  41bde4:	add	x23, x23, #0xf68
  41bde8:	ldr	w22, [x23, x8]
  41bdec:	mov	w21, w0
  41bdf0:	mov	w1, #0x10                  	// #16
  41bdf4:	mov	x0, x22
  41bdf8:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41bdfc:	cbz	x0, 41bfac <feof@plt+0x18ecc>
  41be00:	cbz	w22, 41be4c <feof@plt+0x18d6c>
  41be04:	cmp	w22, #0x1
  41be08:	b.ne	41be14 <feof@plt+0x18d34>  // b.any
  41be0c:	mov	x8, xzr
  41be10:	b	41be38 <feof@plt+0x18d58>
  41be14:	and	x8, x22, #0xfffffffe
  41be18:	add	x9, x0, #0x10
  41be1c:	mov	x10, x8
  41be20:	stur	xzr, [x9, #-16]
  41be24:	str	xzr, [x9], #32
  41be28:	subs	x10, x10, #0x2
  41be2c:	b.ne	41be20 <feof@plt+0x18d40>  // b.any
  41be30:	cmp	x8, x22
  41be34:	b.eq	41be4c <feof@plt+0x18d6c>  // b.none
  41be38:	sub	x9, x22, x8
  41be3c:	add	x8, x0, x8, lsl #4
  41be40:	subs	x9, x9, #0x1
  41be44:	str	xzr, [x8], #16
  41be48:	b.ne	41be40 <feof@plt+0x18d60>  // b.any
  41be4c:	stp	x0, x22, [x20]
  41be50:	mov	w0, #0x30                  	// #48
  41be54:	str	w21, [x20, #40]
  41be58:	str	x20, [x19, #40]
  41be5c:	bl	402d30 <_Znwm@plt>
  41be60:	mov	x20, x0
  41be64:	stp	xzr, xzr, [x0, #24]
  41be68:	str	xzr, [x0, #16]
  41be6c:	strb	wzr, [x0, #44]
  41be70:	mov	w0, #0xd                   	// #13
  41be74:	bl	40eacc <feof@plt+0xb9ec>
  41be78:	mov	w8, w0
  41be7c:	lsl	x8, x8, #4
  41be80:	ldr	w22, [x23, x8]
  41be84:	mov	w21, w0
  41be88:	mov	w1, #0x18                  	// #24
  41be8c:	mov	x0, x22
  41be90:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41be94:	cbz	x0, 41bfac <feof@plt+0x18ecc>
  41be98:	cbz	w22, 41beec <feof@plt+0x18e0c>
  41be9c:	cmp	w22, #0x1
  41bea0:	b.ne	41beac <feof@plt+0x18dcc>  // b.any
  41bea4:	mov	x8, xzr
  41bea8:	b	41bed4 <feof@plt+0x18df4>
  41beac:	and	x8, x22, #0xfffffffe
  41beb0:	mov	x9, x8
  41beb4:	mov	x10, x0
  41beb8:	str	xzr, [x10]
  41bebc:	str	xzr, [x10, #24]
  41bec0:	subs	x9, x9, #0x2
  41bec4:	add	x10, x10, #0x30
  41bec8:	b.ne	41beb8 <feof@plt+0x18dd8>  // b.any
  41becc:	cmp	x8, x22
  41bed0:	b.eq	41beec <feof@plt+0x18e0c>  // b.none
  41bed4:	mov	w10, #0x18                  	// #24
  41bed8:	sub	x9, x22, x8
  41bedc:	madd	x8, x8, x10, x0
  41bee0:	subs	x9, x9, #0x1
  41bee4:	str	xzr, [x8], #24
  41bee8:	b.ne	41bee0 <feof@plt+0x18e00>  // b.any
  41beec:	stp	x0, x22, [x20]
  41bef0:	mov	w0, #0x30                  	// #48
  41bef4:	str	w21, [x20, #40]
  41bef8:	str	x20, [x19, #48]
  41befc:	bl	402d30 <_Znwm@plt>
  41bf00:	mov	x20, x0
  41bf04:	stp	xzr, xzr, [x0, #24]
  41bf08:	str	xzr, [x0, #16]
  41bf0c:	strb	wzr, [x0, #44]
  41bf10:	mov	w0, #0xd                   	// #13
  41bf14:	bl	40eacc <feof@plt+0xb9ec>
  41bf18:	mov	w8, w0
  41bf1c:	lsl	x8, x8, #4
  41bf20:	ldr	w22, [x23, x8]
  41bf24:	mov	w21, w0
  41bf28:	mov	w1, #0x18                  	// #24
  41bf2c:	mov	x0, x22
  41bf30:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41bf34:	cbz	x0, 41bfac <feof@plt+0x18ecc>
  41bf38:	cbz	w22, 41bf8c <feof@plt+0x18eac>
  41bf3c:	cmp	w22, #0x1
  41bf40:	b.ne	41bf4c <feof@plt+0x18e6c>  // b.any
  41bf44:	mov	x8, xzr
  41bf48:	b	41bf74 <feof@plt+0x18e94>
  41bf4c:	and	x8, x22, #0xfffffffe
  41bf50:	mov	x9, x8
  41bf54:	mov	x10, x0
  41bf58:	str	xzr, [x10]
  41bf5c:	str	xzr, [x10, #24]
  41bf60:	subs	x9, x9, #0x2
  41bf64:	add	x10, x10, #0x30
  41bf68:	b.ne	41bf58 <feof@plt+0x18e78>  // b.any
  41bf6c:	cmp	x8, x22
  41bf70:	b.eq	41bf8c <feof@plt+0x18eac>  // b.none
  41bf74:	mov	w10, #0x18                  	// #24
  41bf78:	sub	x9, x22, x8
  41bf7c:	madd	x8, x8, x10, x0
  41bf80:	subs	x9, x9, #0x1
  41bf84:	str	xzr, [x8], #24
  41bf88:	b.ne	41bf80 <feof@plt+0x18ea0>  // b.any
  41bf8c:	stp	x0, x22, [x20]
  41bf90:	str	w21, [x20, #40]
  41bf94:	str	x20, [x19]
  41bf98:	ldp	x20, x19, [sp, #48]
  41bf9c:	ldp	x22, x21, [sp, #32]
  41bfa0:	ldr	x23, [sp, #16]
  41bfa4:	ldp	x29, x30, [sp], #64
  41bfa8:	ret
  41bfac:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  41bfb0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  41bfb4:	add	x0, x0, #0x6f1
  41bfb8:	add	x2, x2, #0x708
  41bfbc:	mov	w1, #0x2b5                 	// #693
  41bfc0:	bl	40f560 <feof@plt+0xc480>
  41bfc4:	stp	x29, x30, [sp, #-48]!
  41bfc8:	stp	x22, x21, [sp, #16]
  41bfcc:	stp	x20, x19, [sp, #32]
  41bfd0:	mov	x29, sp
  41bfd4:	ldr	x20, [x0, #40]
  41bfd8:	mov	x19, x0
  41bfdc:	ldr	x8, [x20, #8]
  41bfe0:	cmp	x8, #0x1
  41bfe4:	b.lt	41c008 <feof@plt+0x18f28>  // b.tstop
  41bfe8:	ldr	x21, [x20]
  41bfec:	add	x22, x21, x8, lsl #4
  41bff0:	ldr	x8, [x21]
  41bff4:	cmp	x8, #0x1
  41bff8:	b.hi	41c010 <feof@plt+0x18f30>  // b.pmore
  41bffc:	add	x21, x21, #0x10
  41c000:	cmp	x21, x22
  41c004:	b.cc	41bff0 <feof@plt+0x18f10>  // b.lo, b.ul, b.last
  41c008:	mov	x21, xzr
  41c00c:	mov	x22, xzr
  41c010:	orr	x8, x21, x22
  41c014:	cbnz	x8, 41c064 <feof@plt+0x18f84>
  41c018:	cbnz	x20, 41c0a0 <feof@plt+0x18fc0>
  41c01c:	ldr	x20, [x19, #48]
  41c020:	cbnz	x20, 41c0f4 <feof@plt+0x19014>
  41c024:	ldr	x19, [x19]
  41c028:	cbz	x19, 41c130 <feof@plt+0x19050>
  41c02c:	ldr	x8, [x19, #8]
  41c030:	mov	x9, x8
  41c034:	sub	x9, x9, #0x1
  41c038:	cmp	x9, x8
  41c03c:	b.cc	41c034 <feof@plt+0x18f54>  // b.lo, b.ul, b.last
  41c040:	ldrb	w8, [x19, #44]
  41c044:	ldr	x0, [x19]
  41c048:	cbz	w8, 41c0c8 <feof@plt+0x18fe8>
  41c04c:	bl	40eff8 <feof@plt+0xbf18>
  41c050:	b	41c0cc <feof@plt+0x18fec>
  41c054:	mov	x22, xzr
  41c058:	mov	x21, xzr
  41c05c:	orr	x8, x21, x22
  41c060:	cbz	x8, 41c098 <feof@plt+0x18fb8>
  41c064:	ldr	x0, [x21]
  41c068:	cbz	x0, 41c070 <feof@plt+0x18f90>
  41c06c:	bl	402d00 <_ZdlPv@plt>
  41c070:	ldr	x0, [x21, #8]
  41c074:	cbz	x0, 41c07c <feof@plt+0x18f9c>
  41c078:	bl	402d00 <_ZdlPv@plt>
  41c07c:	add	x21, x21, #0x10
  41c080:	cmp	x21, x22
  41c084:	b.cs	41c054 <feof@plt+0x18f74>  // b.hs, b.nlast
  41c088:	ldr	x8, [x21]
  41c08c:	cmp	x8, #0x1
  41c090:	b.ls	41c07c <feof@plt+0x18f9c>  // b.plast
  41c094:	b	41c05c <feof@plt+0x18f7c>
  41c098:	ldr	x20, [x19, #40]
  41c09c:	cbz	x20, 41c01c <feof@plt+0x18f3c>
  41c0a0:	ldr	x8, [x20, #8]
  41c0a4:	mov	x9, x8
  41c0a8:	sub	x9, x9, #0x1
  41c0ac:	cmp	x9, x8
  41c0b0:	b.cc	41c0a8 <feof@plt+0x18fc8>  // b.lo, b.ul, b.last
  41c0b4:	ldrb	w8, [x20, #44]
  41c0b8:	ldr	x0, [x20]
  41c0bc:	cbz	w8, 41c0e0 <feof@plt+0x19000>
  41c0c0:	bl	40eff8 <feof@plt+0xbf18>
  41c0c4:	b	41c0e4 <feof@plt+0x19004>
  41c0c8:	bl	402b20 <free@plt>
  41c0cc:	mov	x0, x19
  41c0d0:	ldp	x20, x19, [sp, #32]
  41c0d4:	ldp	x22, x21, [sp, #16]
  41c0d8:	ldp	x29, x30, [sp], #48
  41c0dc:	b	402d00 <_ZdlPv@plt>
  41c0e0:	bl	402b20 <free@plt>
  41c0e4:	mov	x0, x20
  41c0e8:	bl	402d00 <_ZdlPv@plt>
  41c0ec:	ldr	x20, [x19, #48]
  41c0f0:	cbz	x20, 41c024 <feof@plt+0x18f44>
  41c0f4:	ldr	x8, [x20, #8]
  41c0f8:	mov	x9, x8
  41c0fc:	sub	x9, x9, #0x1
  41c100:	cmp	x9, x8
  41c104:	b.cc	41c0fc <feof@plt+0x1901c>  // b.lo, b.ul, b.last
  41c108:	ldrb	w8, [x20, #44]
  41c10c:	ldr	x0, [x20]
  41c110:	cbz	w8, 41c11c <feof@plt+0x1903c>
  41c114:	bl	40eff8 <feof@plt+0xbf18>
  41c118:	b	41c120 <feof@plt+0x19040>
  41c11c:	bl	402b20 <free@plt>
  41c120:	mov	x0, x20
  41c124:	bl	402d00 <_ZdlPv@plt>
  41c128:	ldr	x19, [x19]
  41c12c:	cbnz	x19, 41c02c <feof@plt+0x18f4c>
  41c130:	ldp	x20, x19, [sp, #32]
  41c134:	ldp	x22, x21, [sp, #16]
  41c138:	ldp	x29, x30, [sp], #48
  41c13c:	ret
  41c140:	sub	sp, sp, #0xa0
  41c144:	stp	x29, x30, [sp, #80]
  41c148:	str	x25, [sp, #96]
  41c14c:	stp	x24, x23, [sp, #112]
  41c150:	stp	x22, x21, [sp, #128]
  41c154:	stp	x20, x19, [sp, #144]
  41c158:	add	x29, sp, #0x50
  41c15c:	adrp	x23, 48a000 <_obstack_memory_used@@Base+0x28838>
  41c160:	mov	w20, w1
  41c164:	ldr	x1, [x23, #1464]
  41c168:	mov	x21, x0
  41c16c:	mov	w0, #0xa                   	// #10
  41c170:	mov	x22, x2
  41c174:	bl	402d60 <fputc@plt>
  41c178:	ldr	x8, [x21, #40]
  41c17c:	mov	w1, #0x10                  	// #16
  41c180:	ldp	x9, x8, [x8, #16]
  41c184:	sub	x0, x9, x8
  41c188:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41c18c:	ldr	x9, [x21, #40]
  41c190:	mov	x19, x0
  41c194:	ldr	x8, [x9, #8]
  41c198:	cmp	x8, #0x1
  41c19c:	b.lt	41c1cc <feof@plt+0x190ec>  // b.tstop
  41c1a0:	ldr	x10, [x9]
  41c1a4:	add	x11, x10, x8, lsl #4
  41c1a8:	ldr	x8, [x10]
  41c1ac:	cmp	x8, #0x1
  41c1b0:	b.hi	41c1d8 <feof@plt+0x190f8>  // b.pmore
  41c1b4:	add	x10, x10, #0x10
  41c1b8:	mov	x9, xzr
  41c1bc:	cmp	x10, x11
  41c1c0:	mov	x8, xzr
  41c1c4:	b.cc	41c1a8 <feof@plt+0x190c8>  // b.lo, b.ul, b.last
  41c1c8:	b	41c1e0 <feof@plt+0x19100>
  41c1cc:	mov	x9, xzr
  41c1d0:	mov	x8, xzr
  41c1d4:	b	41c1e0 <feof@plt+0x19100>
  41c1d8:	mov	x9, x10
  41c1dc:	mov	x8, x11
  41c1e0:	mov	w24, wzr
  41c1e4:	orr	x10, x8, x9
  41c1e8:	cbz	x10, 41c25c <feof@plt+0x1917c>
  41c1ec:	ldr	x10, [x9]
  41c1f0:	ldr	w10, [x10, #20]
  41c1f4:	cmp	w10, w20
  41c1f8:	b.ne	41c20c <feof@plt+0x1912c>  // b.any
  41c1fc:	ldp	x10, x11, [x9]
  41c200:	add	x12, x19, w24, uxtw #4
  41c204:	add	w24, w24, #0x1
  41c208:	stp	x10, x11, [x12]
  41c20c:	add	x10, x9, #0x10
  41c210:	cmp	x10, x8
  41c214:	b.cs	41c23c <feof@plt+0x1915c>  // b.hs, b.nlast
  41c218:	ldr	x9, [x10]
  41c21c:	cmp	x9, #0x1
  41c220:	b.hi	41c248 <feof@plt+0x19168>  // b.pmore
  41c224:	add	x10, x10, #0x10
  41c228:	mov	x11, xzr
  41c22c:	cmp	x10, x8
  41c230:	mov	x9, xzr
  41c234:	b.cc	41c218 <feof@plt+0x19138>  // b.lo, b.ul, b.last
  41c238:	b	41c250 <feof@plt+0x19170>
  41c23c:	mov	x11, xzr
  41c240:	mov	x9, xzr
  41c244:	b	41c250 <feof@plt+0x19170>
  41c248:	mov	x11, x8
  41c24c:	mov	x9, x10
  41c250:	orr	x10, x9, x11
  41c254:	mov	x8, x11
  41c258:	cbnz	x10, 41c1ec <feof@plt+0x1910c>
  41c25c:	adrp	x8, 41d000 <feof@plt+0x19f20>
  41c260:	add	x8, x8, #0x570
  41c264:	cmp	x22, #0x0
  41c268:	mov	w1, w24
  41c26c:	csel	x3, x8, x22, eq  // eq = none
  41c270:	mov	w2, #0x10                  	// #16
  41c274:	mov	x0, x19
  41c278:	bl	420304 <feof@plt+0x1d224>
  41c27c:	ldr	x8, [x21, #40]
  41c280:	mov	w1, #0x10                  	// #16
  41c284:	ldp	x9, x8, [x8, #16]
  41c288:	sub	x0, x9, x8
  41c28c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41c290:	ldr	x9, [x21, #40]
  41c294:	mov	x21, x0
  41c298:	ldr	x8, [x9, #8]
  41c29c:	cmp	x8, #0x1
  41c2a0:	b.lt	41c2d0 <feof@plt+0x191f0>  // b.tstop
  41c2a4:	ldr	x10, [x9]
  41c2a8:	add	x11, x10, x8, lsl #4
  41c2ac:	ldr	x8, [x10]
  41c2b0:	cmp	x8, #0x1
  41c2b4:	b.hi	41c2dc <feof@plt+0x191fc>  // b.pmore
  41c2b8:	add	x10, x10, #0x10
  41c2bc:	mov	x9, xzr
  41c2c0:	cmp	x10, x11
  41c2c4:	mov	x8, xzr
  41c2c8:	b.cc	41c2ac <feof@plt+0x191cc>  // b.lo, b.ul, b.last
  41c2cc:	b	41c2e4 <feof@plt+0x19204>
  41c2d0:	mov	x9, xzr
  41c2d4:	mov	x8, xzr
  41c2d8:	b	41c2e4 <feof@plt+0x19204>
  41c2dc:	mov	x9, x10
  41c2e0:	mov	x8, x11
  41c2e4:	mov	w25, wzr
  41c2e8:	orr	x10, x8, x9
  41c2ec:	cbz	x10, 41c360 <feof@plt+0x19280>
  41c2f0:	ldr	x10, [x9]
  41c2f4:	ldr	w10, [x10, #20]
  41c2f8:	cmp	w10, w20
  41c2fc:	b.ne	41c310 <feof@plt+0x19230>  // b.any
  41c300:	ldp	x10, x11, [x9]
  41c304:	add	x12, x21, w25, uxtw #4
  41c308:	add	w25, w25, #0x1
  41c30c:	stp	x10, x11, [x12]
  41c310:	add	x10, x9, #0x10
  41c314:	cmp	x10, x8
  41c318:	b.cs	41c340 <feof@plt+0x19260>  // b.hs, b.nlast
  41c31c:	ldr	x9, [x10]
  41c320:	cmp	x9, #0x1
  41c324:	b.hi	41c34c <feof@plt+0x1926c>  // b.pmore
  41c328:	add	x10, x10, #0x10
  41c32c:	mov	x11, xzr
  41c330:	cmp	x10, x8
  41c334:	mov	x9, xzr
  41c338:	b.cc	41c31c <feof@plt+0x1923c>  // b.lo, b.ul, b.last
  41c33c:	b	41c354 <feof@plt+0x19274>
  41c340:	mov	x11, xzr
  41c344:	mov	x9, xzr
  41c348:	b	41c354 <feof@plt+0x19274>
  41c34c:	mov	x11, x8
  41c350:	mov	x9, x10
  41c354:	orr	x10, x9, x11
  41c358:	mov	x8, x11
  41c35c:	cbnz	x10, 41c2f0 <feof@plt+0x19210>
  41c360:	mov	w22, w25
  41c364:	adrp	x3, 41d000 <feof@plt+0x19f20>
  41c368:	add	x3, x3, #0x570
  41c36c:	mov	w2, #0x10                  	// #16
  41c370:	mov	x0, x21
  41c374:	mov	x1, x22
  41c378:	bl	420304 <feof@plt+0x1d224>
  41c37c:	mov	w8, #0x1                   	// #1
  41c380:	stp	xzr, xzr, [sp, #16]
  41c384:	stp	xzr, xzr, [sp, #56]
  41c388:	stp	xzr, x8, [sp, #32]
  41c38c:	str	xzr, [sp, #48]
  41c390:	cbz	w25, 41c468 <feof@plt+0x19388>
  41c394:	cmp	w22, #0x2
  41c398:	b.hi	41c3b0 <feof@plt+0x192d0>  // b.pmore
  41c39c:	mov	x8, xzr
  41c3a0:	mov	x9, xzr
  41c3a4:	movi	v0.2d, #0x0
  41c3a8:	movi	v1.2d, #0x0
  41c3ac:	b	41c428 <feof@plt+0x19348>
  41c3b0:	and	x8, x22, #0xfffffffe
  41c3b4:	mov	x9, xzr
  41c3b8:	mov	x10, xzr
  41c3bc:	add	x11, x21, #0x18
  41c3c0:	movi	v0.2d, #0x0
  41c3c4:	movi	v3.2d, #0x0
  41c3c8:	movi	v1.2d, #0x0
  41c3cc:	mov	x12, x8
  41c3d0:	movi	v2.2d, #0x0
  41c3d4:	ldur	x13, [x11, #-16]
  41c3d8:	ldr	x14, [x11], #32
  41c3dc:	subs	x12, x12, #0x2
  41c3e0:	ldr	q4, [x13]
  41c3e4:	ldr	q5, [x14]
  41c3e8:	ldr	x15, [x13, #16]
  41c3ec:	ldr	x16, [x14, #16]
  41c3f0:	add	v3.2d, v4.2d, v3.2d
  41c3f4:	ldr	q4, [x13, #32]
  41c3f8:	add	v0.2d, v5.2d, v0.2d
  41c3fc:	ldr	q5, [x14, #32]
  41c400:	add	x9, x15, x9
  41c404:	add	x10, x16, x10
  41c408:	add	v2.2d, v4.2d, v2.2d
  41c40c:	add	v1.2d, v5.2d, v1.2d
  41c410:	b.ne	41c3d4 <feof@plt+0x192f4>  // b.any
  41c414:	add	v0.2d, v0.2d, v3.2d
  41c418:	add	x9, x10, x9
  41c41c:	cmp	x8, x22
  41c420:	add	v1.2d, v1.2d, v2.2d
  41c424:	b.eq	41c458 <feof@plt+0x19378>  // b.none
  41c428:	sub	x10, x22, x8
  41c42c:	add	x8, x21, x8, lsl #4
  41c430:	add	x8, x8, #0x8
  41c434:	ldr	x11, [x8], #16
  41c438:	subs	x10, x10, #0x1
  41c43c:	ldr	q2, [x11]
  41c440:	ldr	x12, [x11, #16]
  41c444:	ldr	q3, [x11, #32]
  41c448:	add	v0.2d, v2.2d, v0.2d
  41c44c:	add	x9, x12, x9
  41c450:	add	v1.2d, v3.2d, v1.2d
  41c454:	b.ne	41c434 <feof@plt+0x19354>  // b.any
  41c458:	str	q0, [sp, #16]
  41c45c:	str	q1, [sp, #48]
  41c460:	stp	x9, xzr, [sp, #32]
  41c464:	str	xzr, [sp, #64]
  41c468:	mov	x0, x21
  41c46c:	bl	402b20 <free@plt>
  41c470:	ldr	x1, [x23, #1464]
  41c474:	mov	x21, #0xffffffffffffff74    	// #-140
  41c478:	mov	w0, #0x2d                  	// #45
  41c47c:	bl	402d60 <fputc@plt>
  41c480:	ldr	x1, [x23, #1464]
  41c484:	adds	x21, x21, #0x1
  41c488:	b.cc	41c478 <feof@plt+0x19398>  // b.lo, b.ul, b.last
  41c48c:	mov	w0, #0xa                   	// #10
  41c490:	bl	402d60 <fputc@plt>
  41c494:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  41c498:	add	x8, x8, #0xd70
  41c49c:	ldr	x20, [x8, w20, uxtw #3]
  41c4a0:	ldr	x0, [x23, #1464]
  41c4a4:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4a8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4ac:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4b0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4b4:	adrp	x5, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4b8:	adrp	x6, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4bc:	adrp	x7, 464000 <_obstack_memory_used@@Base+0x2838>
  41c4c0:	add	x21, x21, #0xca7
  41c4c4:	add	x1, x1, #0xc62
  41c4c8:	add	x3, x3, #0xc82
  41c4cc:	add	x4, x4, #0xc8c
  41c4d0:	add	x5, x5, #0xc91
  41c4d4:	add	x6, x6, #0xc96
  41c4d8:	add	x7, x7, #0xc9c
  41c4dc:	mov	x2, x20
  41c4e0:	str	x21, [sp]
  41c4e4:	bl	402a70 <fprintf@plt>
  41c4e8:	ldr	x1, [x23, #1464]
  41c4ec:	mov	x22, #0xffffffffffffff74    	// #-140
  41c4f0:	mov	w0, #0x2d                  	// #45
  41c4f4:	bl	402d60 <fputc@plt>
  41c4f8:	ldr	x1, [x23, #1464]
  41c4fc:	adds	x22, x22, #0x1
  41c500:	b.cc	41c4f0 <feof@plt+0x19410>  // b.lo, b.ul, b.last
  41c504:	mov	w0, #0xa                   	// #10
  41c508:	bl	402d60 <fputc@plt>
  41c50c:	subs	w8, w24, #0x1
  41c510:	b.mi	41c538 <feof@plt+0x19458>  // b.first
  41c514:	add	x8, x19, w8, uxtw #4
  41c518:	add	x22, x8, #0x8
  41c51c:	ldp	x1, x0, [x22, #-8]
  41c520:	add	x2, sp, #0x10
  41c524:	bl	41d378 <feof@plt+0x1a298>
  41c528:	sub	w24, w24, #0x1
  41c52c:	cmp	w24, #0x0
  41c530:	sub	x22, x22, #0x10
  41c534:	b.gt	41c51c <feof@plt+0x1943c>
  41c538:	ldr	x1, [x23, #1464]
  41c53c:	mov	x22, #0xffffffffffffff74    	// #-140
  41c540:	mov	w0, #0x2d                  	// #45
  41c544:	bl	402d60 <fputc@plt>
  41c548:	ldr	x1, [x23, #1464]
  41c54c:	adds	x22, x22, #0x1
  41c550:	b.cc	41c540 <feof@plt+0x19460>  // b.lo, b.ul, b.last
  41c554:	mov	w0, #0xa                   	// #10
  41c558:	bl	402d60 <fputc@plt>
  41c55c:	ldr	x0, [x23, #1464]
  41c560:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41c564:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x2838>
  41c568:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x2838>
  41c56c:	adrp	x5, 464000 <_obstack_memory_used@@Base+0x2838>
  41c570:	adrp	x6, 464000 <_obstack_memory_used@@Base+0x2838>
  41c574:	adrp	x7, 464000 <_obstack_memory_used@@Base+0x2838>
  41c578:	add	x1, x1, #0xc62
  41c57c:	add	x3, x3, #0xc82
  41c580:	add	x4, x4, #0xc8c
  41c584:	add	x5, x5, #0xc91
  41c588:	add	x6, x6, #0xc96
  41c58c:	add	x7, x7, #0xc9c
  41c590:	mov	x2, x20
  41c594:	str	x21, [sp]
  41c598:	bl	402a70 <fprintf@plt>
  41c59c:	ldr	x1, [x23, #1464]
  41c5a0:	mov	x20, #0xffffffffffffff74    	// #-140
  41c5a4:	mov	w0, #0x2d                  	// #45
  41c5a8:	bl	402d60 <fputc@plt>
  41c5ac:	ldr	x1, [x23, #1464]
  41c5b0:	adds	x20, x20, #0x1
  41c5b4:	b.cc	41c5a4 <feof@plt+0x194c4>  // b.lo, b.ul, b.last
  41c5b8:	mov	w0, #0xa                   	// #10
  41c5bc:	bl	402d60 <fputc@plt>
  41c5c0:	ldr	x8, [sp, #16]
  41c5c4:	ldr	x0, [x23, #1464]
  41c5c8:	lsr	x10, x8, #11
  41c5cc:	cmp	x10, #0x5
  41c5d0:	mov	x3, x8
  41c5d4:	b.cc	41c5f0 <feof@plt+0x19510>  // b.lo, b.ul, b.last
  41c5d8:	lsr	x9, x8, #21
  41c5dc:	cmp	x9, #0x4
  41c5e0:	b.hi	41c5ec <feof@plt+0x1950c>  // b.pmore
  41c5e4:	lsr	x3, x8, #10
  41c5e8:	b	41c5f0 <feof@plt+0x19510>
  41c5ec:	lsr	x3, x8, #20
  41c5f0:	ldr	x12, [sp, #24]
  41c5f4:	cmp	x8, #0xa00, lsl #12
  41c5f8:	mov	w8, #0x4d                  	// #77
  41c5fc:	mov	w9, #0x6b                  	// #107
  41c600:	csel	w11, w9, w8, cc  // cc = lo, ul, last
  41c604:	cmp	x10, #0x5
  41c608:	mov	w10, #0x20                  	// #32
  41c60c:	csel	w4, w10, w11, cc  // cc = lo, ul, last
  41c610:	lsr	x11, x12, #11
  41c614:	cmp	x11, #0x5
  41c618:	mov	x5, x12
  41c61c:	b.cc	41c638 <feof@plt+0x19558>  // b.lo, b.ul, b.last
  41c620:	lsr	x13, x12, #21
  41c624:	cmp	x13, #0x4
  41c628:	b.hi	41c634 <feof@plt+0x19554>  // b.pmore
  41c62c:	lsr	x5, x12, #10
  41c630:	b	41c638 <feof@plt+0x19558>
  41c634:	lsr	x5, x12, #20
  41c638:	cmp	x12, #0xa00, lsl #12
  41c63c:	ldr	x12, [sp, #48]
  41c640:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  41c644:	cmp	x11, #0x5
  41c648:	csel	w6, w10, w8, cc  // cc = lo, ul, last
  41c64c:	lsr	x8, x12, #11
  41c650:	cmp	x8, #0x5
  41c654:	mov	x7, x12
  41c658:	b.cc	41c674 <feof@plt+0x19594>  // b.lo, b.ul, b.last
  41c65c:	lsr	x9, x12, #21
  41c660:	cmp	x9, #0x4
  41c664:	b.hi	41c670 <feof@plt+0x19590>  // b.pmore
  41c668:	lsr	x7, x12, #10
  41c66c:	b	41c674 <feof@plt+0x19594>
  41c670:	lsr	x7, x12, #20
  41c674:	cmp	x12, #0xa00, lsl #12
  41c678:	mov	w9, #0x4d                  	// #77
  41c67c:	mov	w10, #0x6b                  	// #107
  41c680:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  41c684:	cmp	x8, #0x5
  41c688:	mov	w8, #0x20                  	// #32
  41c68c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41c690:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41c694:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  41c698:	add	x1, x1, #0xd4f
  41c69c:	add	x2, x2, #0xd68
  41c6a0:	str	w8, [sp]
  41c6a4:	bl	402a70 <fprintf@plt>
  41c6a8:	ldr	x1, [x23, #1464]
  41c6ac:	mov	x20, #0xffffffffffffff74    	// #-140
  41c6b0:	mov	w0, #0x2d                  	// #45
  41c6b4:	bl	402d60 <fputc@plt>
  41c6b8:	ldr	x1, [x23, #1464]
  41c6bc:	adds	x20, x20, #0x1
  41c6c0:	b.cc	41c6b0 <feof@plt+0x195d0>  // b.lo, b.ul, b.last
  41c6c4:	mov	w0, #0xa                   	// #10
  41c6c8:	bl	402d60 <fputc@plt>
  41c6cc:	mov	x0, x19
  41c6d0:	bl	402b20 <free@plt>
  41c6d4:	ldr	x1, [x23, #1464]
  41c6d8:	mov	w0, #0xa                   	// #10
  41c6dc:	bl	402d60 <fputc@plt>
  41c6e0:	ldp	x20, x19, [sp, #144]
  41c6e4:	ldp	x22, x21, [sp, #128]
  41c6e8:	ldp	x24, x23, [sp, #112]
  41c6ec:	ldr	x25, [sp, #96]
  41c6f0:	ldp	x29, x30, [sp, #80]
  41c6f4:	add	sp, sp, #0xa0
  41c6f8:	ret
  41c6fc:	ret
  41c700:	ret
  41c704:	sub	sp, sp, #0x50
  41c708:	stp	x29, x30, [sp, #16]
  41c70c:	str	x23, [sp, #32]
  41c710:	stp	x22, x21, [sp, #48]
  41c714:	stp	x20, x19, [sp, #64]
  41c718:	add	x29, sp, #0x10
  41c71c:	stp	x2, x1, [sp]
  41c720:	ldr	x8, [x2]
  41c724:	ldr	x21, [x0, #40]
  41c728:	mov	x20, x2
  41c72c:	mov	x19, x0
  41c730:	mov	w22, #0x79b9                	// #31161
  41c734:	add	x0, x29, #0x18
  41c738:	mov	w1, #0x8                   	// #8
  41c73c:	mov	w2, wzr
  41c740:	movk	w22, #0x9e37, lsl #16
  41c744:	str	x8, [x29, #24]
  41c748:	bl	461110 <feof@plt+0x5e030>
  41c74c:	ldr	x8, [x20, #8]
  41c750:	mov	w2, w0
  41c754:	add	x0, x29, #0x18
  41c758:	mov	w1, #0x8                   	// #8
  41c75c:	str	x8, [x29, #24]
  41c760:	bl	461110 <feof@plt+0x5e030>
  41c764:	ldr	w8, [x20, #16]
  41c768:	sub	w9, w22, w0
  41c76c:	mov	x1, sp
  41c770:	sub	w9, w9, w8
  41c774:	sub	w8, w8, w0
  41c778:	eor	w9, w9, w0, lsr #13
  41c77c:	sub	w8, w8, w9
  41c780:	sub	w10, w0, w9
  41c784:	eor	w8, w8, w9, lsl #8
  41c788:	sub	w10, w10, w8
  41c78c:	sub	w9, w9, w8
  41c790:	eor	w10, w10, w8, lsr #13
  41c794:	sub	w9, w9, w10
  41c798:	sub	w8, w8, w10
  41c79c:	eor	w9, w9, w10, lsr #12
  41c7a0:	sub	w8, w8, w9
  41c7a4:	sub	w10, w10, w9
  41c7a8:	eor	w8, w8, w9, lsl #16
  41c7ac:	sub	w10, w10, w8
  41c7b0:	sub	w9, w9, w8
  41c7b4:	eor	w10, w10, w8, lsr #5
  41c7b8:	sub	w9, w9, w10
  41c7bc:	sub	w8, w8, w10
  41c7c0:	eor	w9, w9, w10, lsr #3
  41c7c4:	sub	w8, w8, w9
  41c7c8:	eor	w8, w8, w9, lsl #10
  41c7cc:	sub	w9, w10, w9
  41c7d0:	sub	w9, w9, w8
  41c7d4:	eor	w2, w9, w8, lsr #15
  41c7d8:	mov	x0, x21
  41c7dc:	bl	41c95c <feof@plt+0x1987c>
  41c7e0:	ldr	x8, [x0]
  41c7e4:	cbz	x8, 41c80c <feof@plt+0x1972c>
  41c7e8:	mov	x20, x0
  41c7ec:	ldr	x0, [sp]
  41c7f0:	cbz	x0, 41c7f8 <feof@plt+0x19718>
  41c7f4:	bl	402d00 <_ZdlPv@plt>
  41c7f8:	ldr	x20, [x20, #8]
  41c7fc:	ldr	x8, [x20, #24]
  41c800:	add	x8, x8, #0x1
  41c804:	str	x8, [x20, #24]
  41c808:	b	41c8f8 <feof@plt+0x19818>
  41c80c:	mov	w0, #0x38                  	// #56
  41c810:	bl	402d30 <_Znwm@plt>
  41c814:	ldr	x23, [sp]
  41c818:	mov	w8, #0x1                   	// #1
  41c81c:	stp	xzr, xzr, [x0]
  41c820:	stp	xzr, x8, [x0, #16]
  41c824:	stp	xzr, xzr, [x0, #40]
  41c828:	str	xzr, [x0, #32]
  41c82c:	ldr	x8, [x23]
  41c830:	ldr	x21, [x19, #40]
  41c834:	mov	x20, x0
  41c838:	add	x0, x29, #0x18
  41c83c:	mov	w1, #0x8                   	// #8
  41c840:	mov	w2, wzr
  41c844:	str	x8, [x29, #24]
  41c848:	bl	461110 <feof@plt+0x5e030>
  41c84c:	ldr	x8, [x23, #8]
  41c850:	mov	w2, w0
  41c854:	add	x0, x29, #0x18
  41c858:	mov	w1, #0x8                   	// #8
  41c85c:	str	x8, [x29, #24]
  41c860:	bl	461110 <feof@plt+0x5e030>
  41c864:	ldr	w8, [x23, #16]
  41c868:	sub	w9, w22, w0
  41c86c:	mov	x1, sp
  41c870:	mov	w3, #0x1                   	// #1
  41c874:	sub	w9, w9, w8
  41c878:	sub	w8, w8, w0
  41c87c:	eor	w9, w9, w0, lsr #13
  41c880:	sub	w8, w8, w9
  41c884:	sub	w10, w0, w9
  41c888:	eor	w8, w8, w9, lsl #8
  41c88c:	sub	w10, w10, w8
  41c890:	sub	w9, w9, w8
  41c894:	eor	w10, w10, w8, lsr #13
  41c898:	sub	w9, w9, w10
  41c89c:	sub	w8, w8, w10
  41c8a0:	eor	w9, w9, w10, lsr #12
  41c8a4:	sub	w8, w8, w9
  41c8a8:	sub	w10, w10, w9
  41c8ac:	eor	w8, w8, w9, lsl #16
  41c8b0:	sub	w10, w10, w8
  41c8b4:	sub	w9, w9, w8
  41c8b8:	eor	w10, w10, w8, lsr #5
  41c8bc:	sub	w9, w9, w10
  41c8c0:	sub	w8, w8, w10
  41c8c4:	eor	w9, w9, w10, lsr #3
  41c8c8:	sub	w8, w8, w9
  41c8cc:	eor	w8, w8, w9, lsl #10
  41c8d0:	sub	w9, w10, w9
  41c8d4:	sub	w9, w9, w8
  41c8d8:	eor	w2, w9, w8, lsr #15
  41c8dc:	mov	x0, x21
  41c8e0:	bl	41ca88 <feof@plt+0x199a8>
  41c8e4:	ldr	x8, [x0]
  41c8e8:	cbnz	x8, 41c8f4 <feof@plt+0x19814>
  41c8ec:	ldr	x8, [sp]
  41c8f0:	str	x8, [x0]
  41c8f4:	str	x20, [x0, #8]
  41c8f8:	ldr	x8, [sp, #8]
  41c8fc:	ldr	x0, [x19, #48]
  41c900:	add	x1, sp, #0x8
  41c904:	lsr	x2, x8, #3
  41c908:	bl	41cef0 <feof@plt+0x19e10>
  41c90c:	ldr	x8, [x0]
  41c910:	cbnz	x8, 41c940 <feof@plt+0x19860>
  41c914:	ldr	x8, [sp, #8]
  41c918:	ldr	x0, [x19, #48]
  41c91c:	add	x1, sp, #0x8
  41c920:	mov	w3, #0x1                   	// #1
  41c924:	lsr	x2, x8, #3
  41c928:	bl	41cfd4 <feof@plt+0x19ef4>
  41c92c:	ldr	x8, [x0]
  41c930:	cbnz	x8, 41c93c <feof@plt+0x1985c>
  41c934:	ldr	x8, [sp, #8]
  41c938:	str	x8, [x0]
  41c93c:	stp	x20, xzr, [x0, #8]
  41c940:	mov	x0, x20
  41c944:	ldp	x20, x19, [sp, #64]
  41c948:	ldp	x22, x21, [sp, #48]
  41c94c:	ldr	x23, [sp, #32]
  41c950:	ldp	x29, x30, [sp, #16]
  41c954:	add	sp, sp, #0x50
  41c958:	ret
  41c95c:	ldr	w8, [x0, #32]
  41c960:	ldr	w14, [x0, #40]
  41c964:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1838>
  41c968:	add	x15, x15, #0xf68
  41c96c:	add	w8, w8, #0x1
  41c970:	add	x9, x15, x14, lsl #4
  41c974:	str	w8, [x0, #32]
  41c978:	ldp	w16, w8, [x9]
  41c97c:	mov	w13, w2
  41c980:	ldr	w12, [x9, #12]
  41c984:	ldr	x9, [x0]
  41c988:	mul	x8, x8, x13
  41c98c:	lsr	x8, x8, #32
  41c990:	sub	w10, w2, w8
  41c994:	add	w8, w8, w10, lsr #1
  41c998:	lsr	w8, w8, w12
  41c99c:	msub	w11, w8, w16, w2
  41c9a0:	add	x8, x9, w11, uxtw #4
  41c9a4:	ldr	x17, [x8]
  41c9a8:	cbz	x17, 41ca80 <feof@plt+0x199a0>
  41c9ac:	ldr	x10, [x0, #8]
  41c9b0:	cmp	x17, #0x1
  41c9b4:	b.eq	41c9ec <feof@plt+0x1990c>  // b.none
  41c9b8:	ldr	x18, [x1]
  41c9bc:	ldr	x3, [x17]
  41c9c0:	ldr	x4, [x18]
  41c9c4:	cmp	x3, x4
  41c9c8:	b.ne	41c9ec <feof@plt+0x1990c>  // b.any
  41c9cc:	ldr	x3, [x17, #8]
  41c9d0:	ldr	x4, [x18, #8]
  41c9d4:	cmp	x3, x4
  41c9d8:	b.ne	41c9ec <feof@plt+0x1990c>  // b.any
  41c9dc:	ldr	w17, [x17, #16]
  41c9e0:	ldr	w18, [x18, #16]
  41c9e4:	cmp	w17, w18
  41c9e8:	b.eq	41ca80 <feof@plt+0x199a0>  // b.none
  41c9ec:	add	x8, x15, x14, lsl #4
  41c9f0:	ldr	w8, [x8, #8]
  41c9f4:	ldr	w15, [x0, #36]
  41c9f8:	sub	w14, w16, #0x2
  41c9fc:	mul	x8, x8, x13
  41ca00:	lsr	x8, x8, #32
  41ca04:	sub	w13, w2, w8
  41ca08:	add	w8, w8, w13, lsr #1
  41ca0c:	lsr	w8, w8, w12
  41ca10:	msub	w8, w8, w14, w2
  41ca14:	add	w12, w8, #0x1
  41ca18:	add	w13, w15, #0x1
  41ca1c:	b	41ca24 <feof@plt+0x19944>
  41ca20:	add	w13, w13, #0x1
  41ca24:	add	w8, w12, w11
  41ca28:	cmp	x10, x8
  41ca2c:	csel	w11, wzr, w10, hi  // hi = pmore
  41ca30:	sub	w11, w8, w11
  41ca34:	str	w13, [x0, #36]
  41ca38:	add	x8, x9, w11, uxtw #4
  41ca3c:	ldr	x14, [x8]
  41ca40:	cmp	x14, #0x1
  41ca44:	b.eq	41ca20 <feof@plt+0x19940>  // b.none
  41ca48:	cbz	x14, 41ca80 <feof@plt+0x199a0>
  41ca4c:	ldr	x15, [x1]
  41ca50:	ldr	x16, [x14]
  41ca54:	ldr	x17, [x15]
  41ca58:	cmp	x16, x17
  41ca5c:	b.ne	41ca20 <feof@plt+0x19940>  // b.any
  41ca60:	ldr	x16, [x14, #8]
  41ca64:	ldr	x17, [x15, #8]
  41ca68:	cmp	x16, x17
  41ca6c:	b.ne	41ca20 <feof@plt+0x19940>  // b.any
  41ca70:	ldr	w14, [x14, #16]
  41ca74:	ldr	w15, [x15, #16]
  41ca78:	cmp	w14, w15
  41ca7c:	b.ne	41ca20 <feof@plt+0x19940>  // b.any
  41ca80:	mov	x0, x8
  41ca84:	ret
  41ca88:	stp	x29, x30, [sp, #-48]!
  41ca8c:	stp	x22, x21, [sp, #16]
  41ca90:	stp	x20, x19, [sp, #32]
  41ca94:	mov	x29, sp
  41ca98:	mov	w20, w3
  41ca9c:	mov	w22, w2
  41caa0:	mov	x21, x1
  41caa4:	cmp	w3, #0x1
  41caa8:	mov	x19, x0
  41caac:	b.ne	41cac8 <feof@plt+0x199e8>  // b.any
  41cab0:	ldp	x8, x9, [x19, #8]
  41cab4:	add	x8, x8, x8, lsl #1
  41cab8:	cmp	x8, x9, lsl #2
  41cabc:	b.hi	41cac8 <feof@plt+0x199e8>  // b.pmore
  41cac0:	mov	x0, x19
  41cac4:	bl	41cc44 <feof@plt+0x19b64>
  41cac8:	ldr	w8, [x19, #32]
  41cacc:	ldr	w9, [x19, #40]
  41cad0:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  41cad4:	add	x10, x10, #0xf68
  41cad8:	add	w8, w8, #0x1
  41cadc:	add	x10, x10, x9, lsl #4
  41cae0:	str	w8, [x19, #32]
  41cae4:	ldp	w12, w8, [x10]
  41cae8:	mov	w13, w22
  41caec:	ldr	w11, [x10, #12]
  41caf0:	mul	x8, x8, x13
  41caf4:	lsr	x9, x8, #32
  41caf8:	sub	w14, w22, w9
  41cafc:	ldr	x8, [x19]
  41cb00:	add	w9, w9, w14, lsr #1
  41cb04:	lsr	w9, w9, w11
  41cb08:	msub	w9, w9, w12, w22
  41cb0c:	add	x0, x8, w9, uxtw #4
  41cb10:	ldr	x15, [x0]
  41cb14:	cbz	x15, 41cbf4 <feof@plt+0x19b14>
  41cb18:	ldr	w14, [x10, #8]
  41cb1c:	ldr	x10, [x19, #8]
  41cb20:	cmp	x15, #0x1
  41cb24:	b.eq	41cb60 <feof@plt+0x19a80>  // b.none
  41cb28:	ldr	x16, [x21]
  41cb2c:	ldr	x17, [x15]
  41cb30:	ldr	x18, [x16]
  41cb34:	cmp	x17, x18
  41cb38:	b.ne	41cb5c <feof@plt+0x19a7c>  // b.any
  41cb3c:	ldr	x17, [x15, #8]
  41cb40:	ldr	x18, [x16, #8]
  41cb44:	cmp	x17, x18
  41cb48:	b.ne	41cb5c <feof@plt+0x19a7c>  // b.any
  41cb4c:	ldr	w15, [x15, #16]
  41cb50:	ldr	w16, [x16, #16]
  41cb54:	cmp	w15, w16
  41cb58:	b.eq	41cc34 <feof@plt+0x19b54>  // b.none
  41cb5c:	mov	x0, xzr
  41cb60:	sub	w15, w12, #0x2
  41cb64:	mul	x12, x14, x13
  41cb68:	lsr	x12, x12, #32
  41cb6c:	sub	w13, w22, w12
  41cb70:	add	w13, w12, w13, lsr #1
  41cb74:	ldr	w12, [x19, #36]
  41cb78:	lsr	w11, w13, w11
  41cb7c:	msub	w11, w11, w15, w22
  41cb80:	add	w11, w11, #0x1
  41cb84:	add	w9, w11, w9
  41cb88:	cmp	x10, x9
  41cb8c:	csel	w13, wzr, w10, hi  // hi = pmore
  41cb90:	add	w12, w12, #0x1
  41cb94:	sub	w9, w9, w13
  41cb98:	str	w12, [x19, #36]
  41cb9c:	add	x13, x8, w9, uxtw #4
  41cba0:	ldr	x14, [x13]
  41cba4:	cbz	x14, 41cbf8 <feof@plt+0x19b18>
  41cba8:	cmp	x14, #0x1
  41cbac:	b.eq	41cbe8 <feof@plt+0x19b08>  // b.none
  41cbb0:	ldr	x15, [x21]
  41cbb4:	ldr	x16, [x14]
  41cbb8:	ldr	x17, [x15]
  41cbbc:	cmp	x16, x17
  41cbc0:	b.ne	41cb84 <feof@plt+0x19aa4>  // b.any
  41cbc4:	ldr	x16, [x14, #8]
  41cbc8:	ldr	x17, [x15, #8]
  41cbcc:	cmp	x16, x17
  41cbd0:	b.ne	41cb84 <feof@plt+0x19aa4>  // b.any
  41cbd4:	ldr	w14, [x14, #16]
  41cbd8:	ldr	w15, [x15, #16]
  41cbdc:	cmp	w14, w15
  41cbe0:	b.ne	41cb84 <feof@plt+0x19aa4>  // b.any
  41cbe4:	b	41cc30 <feof@plt+0x19b50>
  41cbe8:	cmp	x0, #0x0
  41cbec:	csel	x0, x13, x0, eq  // eq = none
  41cbf0:	b	41cb84 <feof@plt+0x19aa4>
  41cbf4:	mov	x0, xzr
  41cbf8:	cbz	w20, 41cc14 <feof@plt+0x19b34>
  41cbfc:	cbz	x0, 41cc1c <feof@plt+0x19b3c>
  41cc00:	ldr	x8, [x19, #24]
  41cc04:	sub	x8, x8, #0x1
  41cc08:	str	x8, [x19, #24]
  41cc0c:	str	xzr, [x0]
  41cc10:	b	41cc34 <feof@plt+0x19b54>
  41cc14:	mov	x0, xzr
  41cc18:	b	41cc34 <feof@plt+0x19b54>
  41cc1c:	ldr	x10, [x19, #16]
  41cc20:	add	x0, x8, w9, uxtw #4
  41cc24:	add	x10, x10, #0x1
  41cc28:	str	x10, [x19, #16]
  41cc2c:	b	41cc34 <feof@plt+0x19b54>
  41cc30:	mov	x0, x13
  41cc34:	ldp	x20, x19, [sp, #32]
  41cc38:	ldp	x22, x21, [sp, #16]
  41cc3c:	ldp	x29, x30, [sp], #48
  41cc40:	ret
  41cc44:	stp	x29, x30, [sp, #-80]!
  41cc48:	str	x25, [sp, #16]
  41cc4c:	stp	x24, x23, [sp, #32]
  41cc50:	stp	x22, x21, [sp, #48]
  41cc54:	stp	x20, x19, [sp, #64]
  41cc58:	mov	x29, sp
  41cc5c:	ldp	x8, x9, [x0, #16]
  41cc60:	ldp	x19, x24, [x0]
  41cc64:	mov	x20, x0
  41cc68:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  41cc6c:	sub	x8, x8, x9
  41cc70:	lsl	x0, x8, #1
  41cc74:	cmp	x0, x24
  41cc78:	add	x23, x23, #0xf68
  41cc7c:	b.hi	41cc9c <feof@plt+0x19bbc>  // b.pmore
  41cc80:	ldr	w21, [x20, #40]
  41cc84:	cmp	x24, #0x21
  41cc88:	b.cc	41cebc <feof@plt+0x19ddc>  // b.lo, b.ul, b.last
  41cc8c:	lsl	w8, w8, #3
  41cc90:	cmp	x24, x8
  41cc94:	mov	x22, x24
  41cc98:	b.ls	41ccb0 <feof@plt+0x19bd0>  // b.plast
  41cc9c:	bl	40eacc <feof@plt+0xb9ec>
  41cca0:	mov	w8, w0
  41cca4:	lsl	x8, x8, #4
  41cca8:	ldr	w22, [x23, x8]
  41ccac:	mov	w21, w0
  41ccb0:	ldrb	w8, [x20, #44]
  41ccb4:	cbz	w8, 41cec8 <feof@plt+0x19de8>
  41ccb8:	adrp	x1, 41c000 <feof@plt+0x18f20>
  41ccbc:	lsl	x0, x22, #4
  41ccc0:	add	x1, x1, #0x6fc
  41ccc4:	mov	w2, #0x10                  	// #16
  41ccc8:	mov	x3, x22
  41cccc:	bl	40efc8 <feof@plt+0xbee8>
  41ccd0:	cbz	x0, 41ced8 <feof@plt+0x19df8>
  41ccd4:	cbz	x22, 41cd20 <feof@plt+0x19c40>
  41ccd8:	cmp	x22, #0x1
  41ccdc:	b.ne	41cce8 <feof@plt+0x19c08>  // b.any
  41cce0:	mov	x8, xzr
  41cce4:	b	41cd0c <feof@plt+0x19c2c>
  41cce8:	and	x8, x22, #0xfffffffffffffffe
  41ccec:	add	x9, x0, #0x10
  41ccf0:	mov	x10, x8
  41ccf4:	stur	xzr, [x9, #-16]
  41ccf8:	str	xzr, [x9], #32
  41ccfc:	subs	x10, x10, #0x2
  41cd00:	b.ne	41ccf4 <feof@plt+0x19c14>  // b.any
  41cd04:	cmp	x22, x8
  41cd08:	b.eq	41cd20 <feof@plt+0x19c40>  // b.none
  41cd0c:	sub	x9, x22, x8
  41cd10:	add	x8, x0, x8, lsl #4
  41cd14:	subs	x9, x9, #0x1
  41cd18:	str	xzr, [x8], #16
  41cd1c:	b.ne	41cd14 <feof@plt+0x19c34>  // b.any
  41cd20:	ldp	x9, x8, [x20, #16]
  41cd24:	str	w21, [x20, #40]
  41cd28:	mov	w21, #0x79b9                	// #31161
  41cd2c:	add	x24, x19, x24, lsl #4
  41cd30:	stp	x0, x22, [x20]
  41cd34:	sub	x8, x9, x8
  41cd38:	movk	w21, #0x9e37, lsl #16
  41cd3c:	mov	x22, x19
  41cd40:	stp	x8, xzr, [x20, #16]
  41cd44:	b	41cd5c <feof@plt+0x19c7c>
  41cd48:	ldr	q0, [x22]
  41cd4c:	str	q0, [x14]
  41cd50:	add	x22, x22, #0x10
  41cd54:	cmp	x22, x24
  41cd58:	b.cs	41ce88 <feof@plt+0x19da8>  // b.hs, b.nlast
  41cd5c:	ldr	x25, [x22]
  41cd60:	cmp	x25, #0x2
  41cd64:	b.cc	41cd50 <feof@plt+0x19c70>  // b.lo, b.ul, b.last
  41cd68:	ldr	x8, [x25]
  41cd6c:	add	x0, x29, #0x18
  41cd70:	mov	w1, #0x8                   	// #8
  41cd74:	mov	w2, wzr
  41cd78:	str	x8, [x29, #24]
  41cd7c:	bl	461110 <feof@plt+0x5e030>
  41cd80:	ldr	x8, [x25, #8]
  41cd84:	mov	w2, w0
  41cd88:	add	x0, x29, #0x18
  41cd8c:	mov	w1, #0x8                   	// #8
  41cd90:	str	x8, [x29, #24]
  41cd94:	bl	461110 <feof@plt+0x5e030>
  41cd98:	ldr	w8, [x25, #16]
  41cd9c:	ldr	w9, [x20, #40]
  41cda0:	add	w11, w0, w8
  41cda4:	sub	w12, w21, w11
  41cda8:	sub	w8, w8, w0
  41cdac:	eor	w12, w12, w0, lsr #13
  41cdb0:	sub	w8, w8, w12
  41cdb4:	sub	w13, w0, w12
  41cdb8:	eor	w8, w8, w12, lsl #8
  41cdbc:	sub	w13, w13, w8
  41cdc0:	sub	w12, w12, w8
  41cdc4:	eor	w13, w13, w8, lsr #13
  41cdc8:	sub	w12, w12, w13
  41cdcc:	sub	w8, w8, w13
  41cdd0:	eor	w12, w12, w13, lsr #12
  41cdd4:	sub	w8, w8, w12
  41cdd8:	sub	w13, w13, w12
  41cddc:	eor	w8, w8, w12, lsl #16
  41cde0:	sub	w13, w13, w8
  41cde4:	sub	w12, w12, w8
  41cde8:	eor	w13, w13, w8, lsr #5
  41cdec:	sub	w12, w12, w13
  41cdf0:	add	x10, x23, x9, lsl #4
  41cdf4:	sub	w8, w8, w13
  41cdf8:	eor	w12, w12, w13, lsr #3
  41cdfc:	ldp	w11, w14, [x10]
  41ce00:	sub	w8, w8, w12
  41ce04:	sub	w13, w13, w12
  41ce08:	eor	w8, w8, w12, lsl #10
  41ce0c:	sub	w12, w13, w8
  41ce10:	eor	w13, w12, w8, lsr #15
  41ce14:	ldr	w9, [x10, #12]
  41ce18:	mul	x8, x13, x14
  41ce1c:	lsr	x12, x8, #32
  41ce20:	sub	w14, w13, w12
  41ce24:	ldr	x8, [x20]
  41ce28:	add	w12, w12, w14, lsr #1
  41ce2c:	lsr	w12, w12, w9
  41ce30:	msub	w12, w12, w11, w13
  41ce34:	add	x14, x8, w12, uxtw #4
  41ce38:	ldr	x15, [x14]
  41ce3c:	cbz	x15, 41cd48 <feof@plt+0x19c68>
  41ce40:	ldr	w14, [x10, #8]
  41ce44:	ldr	x10, [x20, #8]
  41ce48:	sub	w11, w11, #0x2
  41ce4c:	mul	x14, x14, x13
  41ce50:	lsr	x14, x14, #32
  41ce54:	sub	w15, w13, w14
  41ce58:	add	w14, w14, w15, lsr #1
  41ce5c:	lsr	w9, w14, w9
  41ce60:	msub	w9, w9, w11, w13
  41ce64:	add	w9, w9, #0x1
  41ce68:	add	w11, w9, w12
  41ce6c:	cmp	x10, x11
  41ce70:	csel	w12, wzr, w10, hi  // hi = pmore
  41ce74:	sub	w12, w11, w12
  41ce78:	add	x14, x8, w12, uxtw #4
  41ce7c:	ldr	x11, [x14]
  41ce80:	cbnz	x11, 41ce68 <feof@plt+0x19d88>
  41ce84:	b	41cd48 <feof@plt+0x19c68>
  41ce88:	ldrb	w8, [x20, #44]
  41ce8c:	cbz	w8, 41ce9c <feof@plt+0x19dbc>
  41ce90:	mov	x0, x19
  41ce94:	bl	40eff8 <feof@plt+0xbf18>
  41ce98:	b	41cea4 <feof@plt+0x19dc4>
  41ce9c:	mov	x0, x19
  41cea0:	bl	402b20 <free@plt>
  41cea4:	ldp	x20, x19, [sp, #64]
  41cea8:	ldp	x22, x21, [sp, #48]
  41ceac:	ldp	x24, x23, [sp, #32]
  41ceb0:	ldr	x25, [sp, #16]
  41ceb4:	ldp	x29, x30, [sp], #80
  41ceb8:	ret
  41cebc:	mov	x22, x24
  41cec0:	ldrb	w8, [x20, #44]
  41cec4:	cbnz	w8, 41ccb8 <feof@plt+0x19bd8>
  41cec8:	mov	w1, #0x10                  	// #16
  41cecc:	mov	x0, x22
  41ced0:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41ced4:	cbnz	x0, 41ccd4 <feof@plt+0x19bf4>
  41ced8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  41cedc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  41cee0:	add	x0, x0, #0x6f1
  41cee4:	add	x2, x2, #0x708
  41cee8:	mov	w1, #0x2b5                 	// #693
  41ceec:	bl	40f560 <feof@plt+0xc480>
  41cef0:	ldr	w8, [x0, #32]
  41cef4:	ldr	w14, [x0, #40]
  41cef8:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1838>
  41cefc:	add	x15, x15, #0xf68
  41cf00:	add	w8, w8, #0x1
  41cf04:	add	x10, x15, x14, lsl #4
  41cf08:	str	w8, [x0, #32]
  41cf0c:	ldp	w12, w8, [x10]
  41cf10:	mov	w13, w2
  41cf14:	ldr	w16, [x10, #12]
  41cf18:	ldr	x9, [x0]
  41cf1c:	mul	x8, x8, x13
  41cf20:	lsr	x8, x8, #32
  41cf24:	sub	w10, w2, w8
  41cf28:	add	w8, w8, w10, lsr #1
  41cf2c:	lsr	w8, w8, w16
  41cf30:	msub	w11, w8, w12, w2
  41cf34:	mov	w8, #0x18                  	// #24
  41cf38:	umaddl	x8, w11, w8, x9
  41cf3c:	ldr	x17, [x8]
  41cf40:	cbz	x17, 41cfcc <feof@plt+0x19eec>
  41cf44:	ldr	x10, [x0, #8]
  41cf48:	cmp	x17, #0x1
  41cf4c:	b.eq	41cf5c <feof@plt+0x19e7c>  // b.none
  41cf50:	ldr	x18, [x1]
  41cf54:	cmp	x17, x18
  41cf58:	b.eq	41cfcc <feof@plt+0x19eec>  // b.none
  41cf5c:	add	x8, x15, x14, lsl #4
  41cf60:	ldr	w8, [x8, #8]
  41cf64:	ldr	w14, [x0, #36]
  41cf68:	sub	w15, w12, #0x2
  41cf6c:	mul	x8, x8, x13
  41cf70:	lsr	x8, x8, #32
  41cf74:	sub	w13, w2, w8
  41cf78:	add	w8, w8, w13, lsr #1
  41cf7c:	lsr	w8, w8, w16
  41cf80:	msub	w8, w8, w15, w2
  41cf84:	add	w12, w14, #0x1
  41cf88:	add	w13, w8, #0x1
  41cf8c:	mov	w14, #0x18                  	// #24
  41cf90:	b	41cf98 <feof@plt+0x19eb8>
  41cf94:	add	w12, w12, #0x1
  41cf98:	add	w8, w13, w11
  41cf9c:	cmp	x10, x8
  41cfa0:	csel	w11, wzr, w10, hi  // hi = pmore
  41cfa4:	sub	w11, w8, w11
  41cfa8:	str	w12, [x0, #36]
  41cfac:	umaddl	x8, w11, w14, x9
  41cfb0:	ldr	x15, [x8]
  41cfb4:	cmp	x15, #0x1
  41cfb8:	b.eq	41cf94 <feof@plt+0x19eb4>  // b.none
  41cfbc:	cbz	x15, 41cfcc <feof@plt+0x19eec>
  41cfc0:	ldr	x16, [x1]
  41cfc4:	cmp	x15, x16
  41cfc8:	b.ne	41cf94 <feof@plt+0x19eb4>  // b.any
  41cfcc:	mov	x0, x8
  41cfd0:	ret
  41cfd4:	stp	x29, x30, [sp, #-48]!
  41cfd8:	stp	x22, x21, [sp, #16]
  41cfdc:	stp	x20, x19, [sp, #32]
  41cfe0:	mov	x29, sp
  41cfe4:	mov	w20, w3
  41cfe8:	mov	w22, w2
  41cfec:	mov	x21, x1
  41cff0:	cmp	w3, #0x1
  41cff4:	mov	x19, x0
  41cff8:	b.ne	41d014 <feof@plt+0x19f34>  // b.any
  41cffc:	ldp	x8, x9, [x19, #8]
  41d000:	add	x8, x8, x8, lsl #1
  41d004:	cmp	x8, x9, lsl #2
  41d008:	b.hi	41d014 <feof@plt+0x19f34>  // b.pmore
  41d00c:	mov	x0, x19
  41d010:	bl	41d150 <feof@plt+0x1a070>
  41d014:	ldr	w8, [x19, #32]
  41d018:	ldr	w9, [x19, #40]
  41d01c:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  41d020:	add	x10, x10, #0xf68
  41d024:	add	w8, w8, #0x1
  41d028:	add	x10, x10, x9, lsl #4
  41d02c:	str	w8, [x19, #32]
  41d030:	ldp	w11, w9, [x10]
  41d034:	mov	w13, w22
  41d038:	ldr	w12, [x10, #12]
  41d03c:	ldr	x8, [x19]
  41d040:	mul	x9, x9, x13
  41d044:	lsr	x9, x9, #32
  41d048:	sub	w14, w22, w9
  41d04c:	add	w9, w9, w14, lsr #1
  41d050:	lsr	w9, w9, w12
  41d054:	msub	w9, w9, w11, w22
  41d058:	mov	w14, #0x18                  	// #24
  41d05c:	umaddl	x0, w9, w14, x8
  41d060:	ldr	x15, [x0]
  41d064:	cbz	x15, 41d104 <feof@plt+0x1a024>
  41d068:	ldr	w14, [x10, #8]
  41d06c:	ldr	x10, [x19, #8]
  41d070:	cmp	x15, #0x1
  41d074:	b.eq	41d088 <feof@plt+0x19fa8>  // b.none
  41d078:	ldr	x16, [x21]
  41d07c:	cmp	x15, x16
  41d080:	b.eq	41d140 <feof@plt+0x1a060>  // b.none
  41d084:	mov	x0, xzr
  41d088:	mul	x13, x14, x13
  41d08c:	lsr	x13, x13, #32
  41d090:	sub	w14, w22, w13
  41d094:	sub	w15, w11, #0x2
  41d098:	ldr	w11, [x19, #36]
  41d09c:	add	w13, w13, w14, lsr #1
  41d0a0:	lsr	w12, w13, w12
  41d0a4:	msub	w12, w12, w15, w22
  41d0a8:	add	w12, w12, #0x1
  41d0ac:	mov	w13, #0x18                  	// #24
  41d0b0:	add	w11, w11, #0x1
  41d0b4:	add	w9, w12, w9
  41d0b8:	cmp	x10, x9
  41d0bc:	csel	w14, wzr, w10, hi  // hi = pmore
  41d0c0:	sub	w9, w9, w14
  41d0c4:	str	w11, [x19, #36]
  41d0c8:	umaddl	x14, w9, w13, x8
  41d0cc:	ldr	x15, [x14]
  41d0d0:	cbz	x15, 41d108 <feof@plt+0x1a028>
  41d0d4:	cmp	x15, #0x1
  41d0d8:	b.eq	41d0f0 <feof@plt+0x1a010>  // b.none
  41d0dc:	ldr	x16, [x21]
  41d0e0:	add	w11, w11, #0x1
  41d0e4:	cmp	x15, x16
  41d0e8:	b.ne	41d0b4 <feof@plt+0x19fd4>  // b.any
  41d0ec:	b	41d0fc <feof@plt+0x1a01c>
  41d0f0:	cmp	x0, #0x0
  41d0f4:	csel	x0, x14, x0, eq  // eq = none
  41d0f8:	b	41d0b0 <feof@plt+0x19fd0>
  41d0fc:	mov	x0, x14
  41d100:	b	41d140 <feof@plt+0x1a060>
  41d104:	mov	x0, xzr
  41d108:	cbz	w20, 41d124 <feof@plt+0x1a044>
  41d10c:	cbz	x0, 41d12c <feof@plt+0x1a04c>
  41d110:	ldr	x8, [x19, #24]
  41d114:	sub	x8, x8, #0x1
  41d118:	str	x8, [x19, #24]
  41d11c:	str	xzr, [x0]
  41d120:	b	41d140 <feof@plt+0x1a060>
  41d124:	mov	x0, xzr
  41d128:	b	41d140 <feof@plt+0x1a060>
  41d12c:	ldr	x10, [x19, #16]
  41d130:	mov	w11, #0x18                  	// #24
  41d134:	umaddl	x0, w9, w11, x8
  41d138:	add	x10, x10, #0x1
  41d13c:	str	x10, [x19, #16]
  41d140:	ldp	x20, x19, [sp, #32]
  41d144:	ldp	x22, x21, [sp, #16]
  41d148:	ldp	x29, x30, [sp], #48
  41d14c:	ret
  41d150:	stp	x29, x30, [sp, #-64]!
  41d154:	stp	x24, x23, [sp, #16]
  41d158:	stp	x22, x21, [sp, #32]
  41d15c:	stp	x20, x19, [sp, #48]
  41d160:	mov	x29, sp
  41d164:	ldp	x8, x9, [x0, #16]
  41d168:	ldp	x19, x24, [x0]
  41d16c:	mov	x20, x0
  41d170:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  41d174:	sub	x8, x8, x9
  41d178:	lsl	x0, x8, #1
  41d17c:	cmp	x0, x24
  41d180:	add	x23, x23, #0xf68
  41d184:	b.hi	41d1a4 <feof@plt+0x1a0c4>  // b.pmore
  41d188:	ldr	w21, [x20, #40]
  41d18c:	cmp	x24, #0x21
  41d190:	b.cc	41d344 <feof@plt+0x1a264>  // b.lo, b.ul, b.last
  41d194:	lsl	w8, w8, #3
  41d198:	cmp	x24, x8
  41d19c:	mov	x22, x24
  41d1a0:	b.ls	41d1b8 <feof@plt+0x1a0d8>  // b.plast
  41d1a4:	bl	40eacc <feof@plt+0xb9ec>
  41d1a8:	mov	w8, w0
  41d1ac:	lsl	x8, x8, #4
  41d1b0:	ldr	w22, [x23, x8]
  41d1b4:	mov	w21, w0
  41d1b8:	ldrb	w8, [x20, #44]
  41d1bc:	cbz	w8, 41d350 <feof@plt+0x1a270>
  41d1c0:	add	x8, x22, x22, lsl #1
  41d1c4:	adrp	x1, 41c000 <feof@plt+0x18f20>
  41d1c8:	lsl	x0, x8, #3
  41d1cc:	add	x1, x1, #0x700
  41d1d0:	mov	w2, #0x18                  	// #24
  41d1d4:	mov	x3, x22
  41d1d8:	bl	40efc8 <feof@plt+0xbee8>
  41d1dc:	cbz	x0, 41d360 <feof@plt+0x1a280>
  41d1e0:	mov	w8, #0x18                  	// #24
  41d1e4:	cbz	x22, 41d238 <feof@plt+0x1a158>
  41d1e8:	cmp	x22, #0x1
  41d1ec:	b.ne	41d1f8 <feof@plt+0x1a118>  // b.any
  41d1f0:	mov	x9, xzr
  41d1f4:	b	41d220 <feof@plt+0x1a140>
  41d1f8:	and	x9, x22, #0xfffffffffffffffe
  41d1fc:	mov	x10, x9
  41d200:	mov	x11, x0
  41d204:	str	xzr, [x11]
  41d208:	str	xzr, [x11, #24]
  41d20c:	subs	x10, x10, #0x2
  41d210:	add	x11, x11, #0x30
  41d214:	b.ne	41d204 <feof@plt+0x1a124>  // b.any
  41d218:	cmp	x22, x9
  41d21c:	b.eq	41d238 <feof@plt+0x1a158>  // b.none
  41d220:	mov	w11, #0x18                  	// #24
  41d224:	sub	x10, x22, x9
  41d228:	madd	x9, x9, x11, x0
  41d22c:	subs	x10, x10, #0x1
  41d230:	str	xzr, [x9], #24
  41d234:	b.ne	41d22c <feof@plt+0x1a14c>  // b.any
  41d238:	ldp	x10, x9, [x20, #16]
  41d23c:	madd	x8, x24, x8, x19
  41d240:	stp	x0, x22, [x20]
  41d244:	str	w21, [x20, #40]
  41d248:	sub	x9, x10, x9
  41d24c:	stp	x9, xzr, [x20, #16]
  41d250:	mov	w9, #0x18                  	// #24
  41d254:	mov	x10, x19
  41d258:	b	41d278 <feof@plt+0x1a198>
  41d25c:	ldr	x11, [x10, #16]
  41d260:	ldr	q0, [x10]
  41d264:	str	x11, [x18, #16]
  41d268:	str	q0, [x18]
  41d26c:	add	x10, x10, #0x18
  41d270:	cmp	x10, x8
  41d274:	b.cs	41d30c <feof@plt+0x1a22c>  // b.hs, b.nlast
  41d278:	ldr	x11, [x10]
  41d27c:	cmp	x11, #0x2
  41d280:	b.cc	41d26c <feof@plt+0x1a18c>  // b.lo, b.ul, b.last
  41d284:	ldr	w12, [x20, #40]
  41d288:	ubfx	x17, x11, #3, #32
  41d28c:	add	x14, x23, x12, lsl #4
  41d290:	ldp	w15, w13, [x14]
  41d294:	lsr	x12, x11, #3
  41d298:	ldr	w16, [x14, #12]
  41d29c:	mul	x11, x17, x13
  41d2a0:	lsr	x13, x11, #32
  41d2a4:	sub	w18, w12, w13
  41d2a8:	ldr	x11, [x20]
  41d2ac:	add	w13, w13, w18, lsr #1
  41d2b0:	lsr	w13, w13, w16
  41d2b4:	msub	w13, w13, w15, w12
  41d2b8:	umaddl	x18, w13, w9, x11
  41d2bc:	ldr	x0, [x18]
  41d2c0:	cbz	x0, 41d25c <feof@plt+0x1a17c>
  41d2c4:	ldr	w18, [x14, #8]
  41d2c8:	ldr	x14, [x20, #8]
  41d2cc:	sub	w15, w15, #0x2
  41d2d0:	mul	x17, x17, x18
  41d2d4:	lsr	x17, x17, #32
  41d2d8:	sub	w18, w12, w17
  41d2dc:	add	w17, w17, w18, lsr #1
  41d2e0:	lsr	w16, w17, w16
  41d2e4:	msub	w12, w16, w15, w12
  41d2e8:	add	w12, w12, #0x1
  41d2ec:	add	w13, w12, w13
  41d2f0:	cmp	x14, x13
  41d2f4:	csel	w15, wzr, w14, hi  // hi = pmore
  41d2f8:	sub	w13, w13, w15
  41d2fc:	umaddl	x18, w13, w9, x11
  41d300:	ldr	x15, [x18]
  41d304:	cbnz	x15, 41d2ec <feof@plt+0x1a20c>
  41d308:	b	41d25c <feof@plt+0x1a17c>
  41d30c:	ldrb	w8, [x20, #44]
  41d310:	cbz	w8, 41d32c <feof@plt+0x1a24c>
  41d314:	mov	x0, x19
  41d318:	ldp	x20, x19, [sp, #48]
  41d31c:	ldp	x22, x21, [sp, #32]
  41d320:	ldp	x24, x23, [sp, #16]
  41d324:	ldp	x29, x30, [sp], #64
  41d328:	b	40eff8 <feof@plt+0xbf18>
  41d32c:	mov	x0, x19
  41d330:	ldp	x20, x19, [sp, #48]
  41d334:	ldp	x22, x21, [sp, #32]
  41d338:	ldp	x24, x23, [sp, #16]
  41d33c:	ldp	x29, x30, [sp], #64
  41d340:	b	402b20 <free@plt>
  41d344:	mov	x22, x24
  41d348:	ldrb	w8, [x20, #44]
  41d34c:	cbnz	w8, 41d1c0 <feof@plt+0x1a0e0>
  41d350:	mov	w1, #0x18                  	// #24
  41d354:	mov	x0, x22
  41d358:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  41d35c:	cbnz	x0, 41d1e0 <feof@plt+0x1a100>
  41d360:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  41d364:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  41d368:	add	x0, x0, #0x6f1
  41d36c:	add	x2, x2, #0x708
  41d370:	mov	w1, #0x2b5                 	// #693
  41d374:	bl	40f560 <feof@plt+0xc480>
  41d378:	stp	x29, x30, [sp, #-64]!
  41d37c:	stp	x28, x23, [sp, #16]
  41d380:	stp	x22, x21, [sp, #32]
  41d384:	stp	x20, x19, [sp, #48]
  41d388:	mov	x29, sp
  41d38c:	sub	sp, sp, #0x1, lsl #12
  41d390:	sub	sp, sp, #0x30
  41d394:	ldr	x8, [x1]
  41d398:	adrp	x23, 464000 <_obstack_memory_used@@Base+0x2838>
  41d39c:	mov	x20, x2
  41d3a0:	mov	x21, x1
  41d3a4:	mov	x19, x0
  41d3a8:	add	x23, x23, #0xd4a
  41d3ac:	mov	x0, x8
  41d3b0:	mov	x1, x23
  41d3b4:	mov	x22, x8
  41d3b8:	bl	4029e0 <strstr@plt>
  41d3bc:	add	x8, x0, #0x4
  41d3c0:	cbnz	x0, 41d3ac <feof@plt+0x1a2cc>
  41d3c4:	ldr	w3, [x21, #16]
  41d3c8:	ldr	x4, [x21, #8]
  41d3cc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41d3d0:	add	x1, x1, #0xd02
  41d3d4:	add	x0, sp, #0x30
  41d3d8:	mov	x2, x22
  41d3dc:	bl	402c30 <sprintf@plt>
  41d3e0:	strb	wzr, [sp, #96]
  41d3e4:	ldr	x8, [x19]
  41d3e8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  41d3ec:	ldr	x0, [x9, #1464]
  41d3f0:	ldr	x3, [x19, #48]
  41d3f4:	lsr	x12, x8, #11
  41d3f8:	cmp	x12, #0x5
  41d3fc:	mov	x4, x8
  41d400:	b.cc	41d41c <feof@plt+0x1a33c>  // b.lo, b.ul, b.last
  41d404:	lsr	x9, x8, #21
  41d408:	cmp	x9, #0x4
  41d40c:	b.hi	41d418 <feof@plt+0x1a338>  // b.pmore
  41d410:	lsr	x4, x8, #10
  41d414:	b	41d41c <feof@plt+0x1a33c>
  41d418:	lsr	x4, x8, #20
  41d41c:	ldr	x13, [x19, #16]
  41d420:	cmp	x8, #0xa00, lsl #12
  41d424:	mov	w9, #0x4d                  	// #77
  41d428:	mov	w10, #0x6b                  	// #107
  41d42c:	ldr	d0, [x20]
  41d430:	mov	w11, #0x20                  	// #32
  41d434:	csel	w14, w10, w9, cc  // cc = lo, ul, last
  41d438:	cmp	x12, #0x5
  41d43c:	csel	w5, w11, w14, cc  // cc = lo, ul, last
  41d440:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  41d444:	lsr	x12, x13, #11
  41d448:	cmp	x12, #0x5
  41d44c:	ucvtf	d1, x8
  41d450:	fmov	d2, x14
  41d454:	mov	x6, x13
  41d458:	b.cc	41d474 <feof@plt+0x1a394>  // b.lo, b.ul, b.last
  41d45c:	lsr	x8, x13, #21
  41d460:	cmp	x8, #0x4
  41d464:	b.hi	41d470 <feof@plt+0x1a390>  // b.pmore
  41d468:	lsr	x6, x13, #10
  41d46c:	b	41d474 <feof@plt+0x1a394>
  41d470:	lsr	x6, x13, #20
  41d474:	ldr	x8, [x19, #8]
  41d478:	cmp	x13, #0xa00, lsl #12
  41d47c:	ldr	x13, [x19, #32]
  41d480:	fmul	d3, d1, d2
  41d484:	ldr	d2, [x20, #8]
  41d488:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  41d48c:	fmov	d4, x14
  41d490:	ucvtf	d1, x8
  41d494:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  41d498:	cmp	x12, #0x5
  41d49c:	lsr	x10, x13, #11
  41d4a0:	ucvtf	d0, d0
  41d4a4:	fmul	d1, d1, d4
  41d4a8:	csel	w7, w11, w9, cc  // cc = lo, ul, last
  41d4ac:	cmp	x10, #0x5
  41d4b0:	ucvtf	d2, d2
  41d4b4:	mov	x9, x13
  41d4b8:	b.cc	41d4d4 <feof@plt+0x1a3f4>  // b.lo, b.ul, b.last
  41d4bc:	lsr	x9, x13, #21
  41d4c0:	cmp	x9, #0x4
  41d4c4:	b.hi	41d4d0 <feof@plt+0x1a3f0>  // b.pmore
  41d4c8:	lsr	x9, x13, #10
  41d4cc:	b	41d4d4 <feof@plt+0x1a3f4>
  41d4d0:	lsr	x9, x13, #20
  41d4d4:	ldr	x14, [x19, #40]
  41d4d8:	cmp	x13, #0xa00, lsl #12
  41d4dc:	mov	w11, #0x4d                  	// #77
  41d4e0:	mov	w12, #0x6b                  	// #107
  41d4e4:	csel	w15, w12, w11, cc  // cc = lo, ul, last
  41d4e8:	cmp	x10, #0x5
  41d4ec:	mov	w13, #0x20                  	// #32
  41d4f0:	csel	w10, w13, w15, cc  // cc = lo, ul, last
  41d4f4:	lsr	x15, x14, #11
  41d4f8:	fdiv	d0, d3, d0
  41d4fc:	cmp	x15, #0x5
  41d500:	fdiv	d1, d1, d2
  41d504:	mov	x16, x14
  41d508:	b.cc	41d524 <feof@plt+0x1a444>  // b.lo, b.ul, b.last
  41d50c:	lsr	x16, x14, #21
  41d510:	cmp	x16, #0x4
  41d514:	b.hi	41d520 <feof@plt+0x1a440>  // b.pmore
  41d518:	lsr	x16, x14, #10
  41d51c:	b	41d524 <feof@plt+0x1a444>
  41d520:	lsr	x16, x14, #20
  41d524:	cmp	x14, #0xa00, lsl #12
  41d528:	csel	w11, w12, w11, cc  // cc = lo, ul, last
  41d52c:	cmp	x15, #0x5
  41d530:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41d534:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  41d538:	add	x1, x1, #0xd0d
  41d53c:	add	x2, sp, #0x30
  41d540:	str	x16, [sp, #24]
  41d544:	str	w10, [sp, #16]
  41d548:	stp	x8, x9, [sp]
  41d54c:	str	w11, [sp, #32]
  41d550:	bl	402a70 <fprintf@plt>
  41d554:	add	sp, sp, #0x1, lsl #12
  41d558:	add	sp, sp, #0x30
  41d55c:	ldp	x20, x19, [sp, #48]
  41d560:	ldp	x22, x21, [sp, #32]
  41d564:	ldp	x28, x23, [sp, #16]
  41d568:	ldp	x29, x30, [sp], #64
  41d56c:	ret
  41d570:	ldr	x8, [x0, #8]
  41d574:	ldr	x9, [x1, #8]
  41d578:	ldr	x10, [x8]
  41d57c:	ldr	x11, [x9]
  41d580:	cmp	x10, x11
  41d584:	b.ne	41d5b0 <feof@plt+0x1a4d0>  // b.any
  41d588:	ldr	x10, [x8, #16]
  41d58c:	ldr	x11, [x9, #16]
  41d590:	cmp	x10, x11
  41d594:	b.ne	41d5b0 <feof@plt+0x1a4d0>  // b.any
  41d598:	ldr	x10, [x8, #8]
  41d59c:	ldr	x11, [x9, #8]
  41d5a0:	cmp	x10, x11
  41d5a4:	b.ne	41d5bc <feof@plt+0x1a4dc>  // b.any
  41d5a8:	mov	w0, wzr
  41d5ac:	ret
  41d5b0:	b.cs	41d5cc <feof@plt+0x1a4ec>  // b.hs, b.nlast
  41d5b4:	mov	w0, #0x1                   	// #1
  41d5b8:	ret
  41d5bc:	ldr	x8, [x8, #8]
  41d5c0:	ldr	x9, [x9, #8]
  41d5c4:	cmp	x8, x9
  41d5c8:	b.cc	41d5b4 <feof@plt+0x1a4d4>  // b.lo, b.ul, b.last
  41d5cc:	mov	w0, #0xffffffff            	// #-1
  41d5d0:	ret
  41d5d4:	stp	x29, x30, [sp, #-64]!
  41d5d8:	str	x23, [sp, #16]
  41d5dc:	stp	x22, x21, [sp, #32]
  41d5e0:	stp	x20, x19, [sp, #48]
  41d5e4:	mov	x29, sp
  41d5e8:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41d5ec:	ldr	x21, [x20, #2424]
  41d5f0:	cbz	x21, 41d668 <feof@plt+0x1a588>
  41d5f4:	mov	x19, x21
  41d5f8:	ldr	x8, [x19, #-8]!
  41d5fc:	cbz	x8, 41d65c <feof@plt+0x1a57c>
  41d600:	mov	w9, #0x58                  	// #88
  41d604:	mul	x22, x8, x9
  41d608:	b	41d61c <feof@plt+0x1a53c>
  41d60c:	bl	402b20 <free@plt>
  41d610:	stur	xzr, [x23, #-8]
  41d614:	subs	x22, x22, #0x58
  41d618:	b.eq	41d65c <feof@plt+0x1a57c>  // b.none
  41d61c:	add	x23, x21, x22
  41d620:	ldur	x0, [x23, #-72]
  41d624:	cbz	x0, 41d630 <feof@plt+0x1a550>
  41d628:	bl	402ae0 <fclose@plt>
  41d62c:	stur	xzr, [x23, #-72]
  41d630:	ldur	x0, [x23, #-64]
  41d634:	cbz	x0, 41d640 <feof@plt+0x1a560>
  41d638:	bl	402b20 <free@plt>
  41d63c:	stur	xzr, [x23, #-64]
  41d640:	add	x23, x21, x22
  41d644:	ldur	x0, [x23, #-8]
  41d648:	cbz	x0, 41d614 <feof@plt+0x1a534>
  41d64c:	ldr	w8, [x0]
  41d650:	tbz	w8, #31, 41d60c <feof@plt+0x1a52c>
  41d654:	str	wzr, [x0, #4]
  41d658:	b	41d614 <feof@plt+0x1a534>
  41d65c:	mov	x0, x19
  41d660:	bl	402e60 <_ZdaPv@plt>
  41d664:	str	xzr, [x20, #2424]
  41d668:	ldp	x20, x19, [sp, #48]
  41d66c:	ldp	x22, x21, [sp, #32]
  41d670:	ldr	x23, [sp, #16]
  41d674:	ldp	x29, x30, [sp], #64
  41d678:	ret
  41d67c:	stp	x29, x30, [sp, #-64]!
  41d680:	str	x23, [sp, #16]
  41d684:	stp	x22, x21, [sp, #32]
  41d688:	stp	x20, x19, [sp, #48]
  41d68c:	mov	x29, sp
  41d690:	cbz	x0, 41d744 <feof@plt+0x1a664>
  41d694:	mov	x19, x0
  41d698:	bl	41f6a0 <feof@plt+0x1c5c0>
  41d69c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41d6a0:	ldr	x22, [x8, #2424]
  41d6a4:	mov	x21, xzr
  41d6a8:	mov	x20, xzr
  41d6ac:	b	41d6bc <feof@plt+0x1a5dc>
  41d6b0:	add	x21, x21, #0x58
  41d6b4:	cmp	x21, #0x580
  41d6b8:	b.eq	41d6e8 <feof@plt+0x1a608>  // b.none
  41d6bc:	add	x23, x22, x21
  41d6c0:	ldr	x0, [x23, #8]
  41d6c4:	cbz	x0, 41d6b0 <feof@plt+0x1a5d0>
  41d6c8:	mov	x1, x19
  41d6cc:	bl	402ed0 <strcmp@plt>
  41d6d0:	cbnz	w0, 41d6b0 <feof@plt+0x1a5d0>
  41d6d4:	ldr	w8, [x22, x21]
  41d6d8:	mov	x20, x23
  41d6dc:	add	w8, w8, #0x1
  41d6e0:	str	w8, [x22, x21]
  41d6e4:	b	41d6b0 <feof@plt+0x1a5d0>
  41d6e8:	cbz	x20, 41d730 <feof@plt+0x1a650>
  41d6ec:	ldr	w8, [x20]
  41d6f0:	ldr	x0, [x20, #16]
  41d6f4:	str	xzr, [x20, #8]
  41d6f8:	add	w8, w8, #0x1
  41d6fc:	str	w8, [x20]
  41d700:	cbz	x0, 41d708 <feof@plt+0x1a628>
  41d704:	bl	402ae0 <fclose@plt>
  41d708:	ldr	x8, [x20, #80]
  41d70c:	str	xzr, [x20, #16]
  41d710:	stp	xzr, xzr, [x20, #48]
  41d714:	str	xzr, [x20, #40]
  41d718:	cbz	x8, 41d720 <feof@plt+0x1a640>
  41d71c:	str	wzr, [x8, #4]
  41d720:	mov	w8, #0x1                   	// #1
  41d724:	str	wzr, [x20]
  41d728:	str	xzr, [x20, #64]
  41d72c:	strb	w8, [x20, #72]
  41d730:	ldp	x20, x19, [sp, #48]
  41d734:	ldp	x22, x21, [sp, #32]
  41d738:	ldr	x23, [sp, #16]
  41d73c:	ldp	x29, x30, [sp], #64
  41d740:	ret
  41d744:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41d748:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41d74c:	add	x0, x0, #0xda8
  41d750:	add	x2, x2, #0xdba
  41d754:	mov	w1, #0x133                 	// #307
  41d758:	bl	40f560 <feof@plt+0xc480>
  41d75c:	movi	v0.2d, #0x0
  41d760:	mov	w8, #0x1                   	// #1
  41d764:	str	wzr, [x0]
  41d768:	stur	q0, [x0, #8]
  41d76c:	stur	q0, [x0, #24]
  41d770:	stur	q0, [x0, #40]
  41d774:	stur	q0, [x0, #56]
  41d778:	strb	w8, [x0, #72]
  41d77c:	str	xzr, [x0, #80]
  41d780:	ret
  41d784:	stp	x29, x30, [sp, #-32]!
  41d788:	str	x19, [sp, #16]
  41d78c:	mov	x29, sp
  41d790:	mov	x19, x0
  41d794:	ldr	x0, [x0, #16]
  41d798:	cbz	x0, 41d7a4 <feof@plt+0x1a6c4>
  41d79c:	bl	402ae0 <fclose@plt>
  41d7a0:	str	xzr, [x19, #16]
  41d7a4:	ldr	x0, [x19, #24]
  41d7a8:	cbz	x0, 41d7b4 <feof@plt+0x1a6d4>
  41d7ac:	bl	402b20 <free@plt>
  41d7b0:	str	xzr, [x19, #24]
  41d7b4:	ldr	x0, [x19, #80]
  41d7b8:	cbz	x0, 41d7d4 <feof@plt+0x1a6f4>
  41d7bc:	ldr	w8, [x0]
  41d7c0:	tbnz	w8, #31, 41d7d0 <feof@plt+0x1a6f0>
  41d7c4:	bl	402b20 <free@plt>
  41d7c8:	str	xzr, [x19, #80]
  41d7cc:	b	41d7d4 <feof@plt+0x1a6f4>
  41d7d0:	str	wzr, [x0, #4]
  41d7d4:	ldr	x19, [sp, #16]
  41d7d8:	ldp	x29, x30, [sp], #32
  41d7dc:	ret
  41d7e0:	sub	sp, sp, #0x40
  41d7e4:	stp	x29, x30, [sp, #32]
  41d7e8:	stp	x20, x19, [sp, #48]
  41d7ec:	add	x29, sp, #0x20
  41d7f0:	str	xzr, [sp, #8]
  41d7f4:	cbz	w1, 41d95c <feof@plt+0x1a87c>
  41d7f8:	mov	w20, w1
  41d7fc:	bl	41d98c <feof@plt+0x1a8ac>
  41d800:	cbz	x0, 41d878 <feof@plt+0x1a798>
  41d804:	ldr	x9, [x0, #56]
  41d808:	sxtw	x8, w20
  41d80c:	mov	x19, x0
  41d810:	cmp	x9, x8
  41d814:	b.cc	41d910 <feof@plt+0x1a830>  // b.lo, b.ul, b.last
  41d818:	ldr	x9, [x19, #80]
  41d81c:	cbz	x9, 41d880 <feof@plt+0x1a7a0>
  41d820:	ldr	w10, [x9, #4]
  41d824:	cbz	w10, 41d880 <feof@plt+0x1a7a0>
  41d828:	ldr	x11, [x19, #64]
  41d82c:	cmp	x11, #0x64
  41d830:	b.hi	41d88c <feof@plt+0x1a7ac>  // b.pmore
  41d834:	sub	w10, w8, #0x1
  41d838:	add	x9, x9, #0x8
  41d83c:	mov	w12, #0x18                  	// #24
  41d840:	sub	w13, w11, #0x1
  41d844:	umaddl	x10, w10, w12, x9
  41d848:	umaddl	x9, w13, w12, x9
  41d84c:	cmp	x11, x8
  41d850:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  41d854:	ldr	x10, [x9]
  41d858:	cmp	x10, x8
  41d85c:	b.ls	41d8c8 <feof@plt+0x1a7e8>  // b.plast
  41d860:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41d864:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41d868:	add	x0, x0, #0xda8
  41d86c:	add	x2, x2, #0x456
  41d870:	mov	w1, #0x2b2                 	// #690
  41d874:	bl	40f560 <feof@plt+0xc480>
  41d878:	mov	x1, xzr
  41d87c:	b	41d964 <feof@plt+0x1a884>
  41d880:	mov	x9, xzr
  41d884:	stp	xzr, xzr, [x19, #48]
  41d888:	b	41d910 <feof@plt+0x1a830>
  41d88c:	cmp	x11, x8
  41d890:	b.cs	41d89c <feof@plt+0x1a7bc>  // b.hs, b.nlast
  41d894:	sub	w11, w10, #0x1
  41d898:	b	41d8a8 <feof@plt+0x1a7c8>
  41d89c:	mov	w12, #0x64                  	// #100
  41d8a0:	mul	x12, x8, x12
  41d8a4:	udiv	x11, x12, x11
  41d8a8:	cmp	x11, x10
  41d8ac:	b.cs	41d904 <feof@plt+0x1a824>  // b.hs, b.nlast
  41d8b0:	and	x10, x11, #0xffffffff
  41d8b4:	mov	w11, #0x18                  	// #24
  41d8b8:	madd	x9, x10, x11, x9
  41d8bc:	ldr	x10, [x9, #8]!
  41d8c0:	cmp	x10, x8
  41d8c4:	b.hi	41d974 <feof@plt+0x1a894>  // b.pmore
  41d8c8:	cmp	x10, x8
  41d8cc:	b.ne	41d8f0 <feof@plt+0x1a810>  // b.any
  41d8d0:	ldr	x8, [x19, #24]
  41d8d4:	ldr	x10, [x9, #8]
  41d8d8:	add	x0, x8, x10
  41d8dc:	str	x0, [sp, #8]
  41d8e0:	ldr	x8, [x9, #16]
  41d8e4:	sub	x1, x8, x10
  41d8e8:	stur	x1, [x29, #-8]
  41d8ec:	b	41d964 <feof@plt+0x1a884>
  41d8f0:	ldr	x10, [x9, #8]
  41d8f4:	str	x10, [x19, #48]
  41d8f8:	ldr	x9, [x9]
  41d8fc:	sub	x9, x9, #0x1
  41d900:	b	41d90c <feof@plt+0x1a82c>
  41d904:	mov	x9, xzr
  41d908:	str	xzr, [x19, #48]
  41d90c:	str	x9, [x19, #56]
  41d910:	sub	x20, x8, #0x1
  41d914:	cmp	x9, x20
  41d918:	b.cs	41d93c <feof@plt+0x1a85c>  // b.hs, b.nlast
  41d91c:	sub	x1, x29, #0x8
  41d920:	add	x2, sp, #0x10
  41d924:	mov	x0, x19
  41d928:	bl	41f858 <feof@plt+0x1c778>
  41d92c:	tbz	w0, #0, 41d95c <feof@plt+0x1a87c>
  41d930:	ldr	x8, [x19, #56]
  41d934:	cmp	x8, x20
  41d938:	b.cc	41d91c <feof@plt+0x1a83c>  // b.lo, b.ul, b.last
  41d93c:	add	x1, sp, #0x8
  41d940:	sub	x2, x29, #0x8
  41d944:	mov	x0, x19
  41d948:	bl	41f858 <feof@plt+0x1c778>
  41d94c:	tbz	w0, #0, 41d95c <feof@plt+0x1a87c>
  41d950:	ldr	x0, [sp, #8]
  41d954:	ldur	x1, [x29, #-8]
  41d958:	b	41d964 <feof@plt+0x1a884>
  41d95c:	mov	x1, xzr
  41d960:	mov	x0, xzr
  41d964:	ldp	x20, x19, [sp, #48]
  41d968:	ldp	x29, x30, [sp, #32]
  41d96c:	add	sp, sp, #0x40
  41d970:	ret
  41d974:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41d978:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41d97c:	add	x0, x0, #0xda8
  41d980:	add	x2, x2, #0x456
  41d984:	mov	w1, #0x2c1                 	// #705
  41d988:	bl	40f560 <feof@plt+0xc480>
  41d98c:	sub	sp, sp, #0x70
  41d990:	stp	x29, x30, [sp, #48]
  41d994:	stp	x24, x23, [sp, #64]
  41d998:	stp	x22, x21, [sp, #80]
  41d99c:	stp	x20, x19, [sp, #96]
  41d9a0:	add	x29, sp, #0x30
  41d9a4:	mov	x20, x0
  41d9a8:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41d9ac:	cbz	x0, 41da10 <feof@plt+0x1a930>
  41d9b0:	bl	41f6a0 <feof@plt+0x1c5c0>
  41d9b4:	ldr	x23, [x22, #2424]
  41d9b8:	mov	x21, xzr
  41d9bc:	mov	x19, xzr
  41d9c0:	b	41d9d0 <feof@plt+0x1a8f0>
  41d9c4:	add	x21, x21, #0x58
  41d9c8:	cmp	x21, #0x580
  41d9cc:	b.eq	41d9fc <feof@plt+0x1a91c>  // b.none
  41d9d0:	add	x24, x23, x21
  41d9d4:	ldr	x0, [x24, #8]
  41d9d8:	cbz	x0, 41d9c4 <feof@plt+0x1a8e4>
  41d9dc:	mov	x1, x20
  41d9e0:	bl	402ed0 <strcmp@plt>
  41d9e4:	cbnz	w0, 41d9c4 <feof@plt+0x1a8e4>
  41d9e8:	ldr	w8, [x23, x21]
  41d9ec:	mov	x19, x24
  41d9f0:	add	w8, w8, #0x1
  41d9f4:	str	w8, [x23, x21]
  41d9f8:	b	41d9c4 <feof@plt+0x1a8e4>
  41d9fc:	cbz	x19, 41da10 <feof@plt+0x1a930>
  41da00:	ldr	w8, [x19]
  41da04:	add	w8, w8, #0x1
  41da08:	str	w8, [x19]
  41da0c:	b	41db0c <feof@plt+0x1aa2c>
  41da10:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  41da14:	add	x1, x1, #0xf4c
  41da18:	mov	x0, x20
  41da1c:	bl	402eb0 <fopen@plt>
  41da20:	cbz	x0, 41daf4 <feof@plt+0x1aa14>
  41da24:	mov	x21, x0
  41da28:	bl	41f6a0 <feof@plt+0x1c5c0>
  41da2c:	ldr	x9, [x22, #2424]
  41da30:	mov	x8, xzr
  41da34:	ldr	w10, [x9]
  41da38:	mov	x19, x9
  41da3c:	mov	w22, w10
  41da40:	add	x13, x9, x8
  41da44:	ldr	w11, [x13, #88]!
  41da48:	ldr	x12, [x13, #8]
  41da4c:	cmp	w11, w10
  41da50:	b.cc	41da60 <feof@plt+0x1a980>  // b.lo, b.ul, b.last
  41da54:	ldr	x10, [x19, #8]
  41da58:	cbz	x10, 41da64 <feof@plt+0x1a984>
  41da5c:	cbnz	x12, 41da64 <feof@plt+0x1a984>
  41da60:	mov	x19, x13
  41da64:	cmp	w22, w11
  41da68:	csel	w22, w11, w22, cc  // cc = lo, ul, last
  41da6c:	cbz	x12, 41da84 <feof@plt+0x1a9a4>
  41da70:	cmp	x8, #0x4d0
  41da74:	b.eq	41da84 <feof@plt+0x1a9a4>  // b.none
  41da78:	ldr	w10, [x19]
  41da7c:	add	x8, x8, #0x58
  41da80:	b	41da40 <feof@plt+0x1a960>
  41da84:	ldr	x0, [x19, #16]
  41da88:	str	x20, [x19, #8]
  41da8c:	cbz	x0, 41da94 <feof@plt+0x1a9b4>
  41da90:	bl	402ae0 <fclose@plt>
  41da94:	ldr	x8, [x19, #80]
  41da98:	str	x21, [x19, #16]
  41da9c:	stp	xzr, xzr, [x19, #48]
  41daa0:	str	xzr, [x19, #40]
  41daa4:	cbz	x8, 41daac <feof@plt+0x1a9cc>
  41daa8:	str	wzr, [x8, #4]
  41daac:	add	w8, w22, #0x1
  41dab0:	str	w8, [x19]
  41dab4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dab8:	ldr	x0, [x8, #2408]
  41dabc:	sub	x2, x29, #0x4
  41dac0:	mov	x1, x20
  41dac4:	stur	wzr, [x29, #-4]
  41dac8:	bl	4366e4 <feof@plt+0x33604>
  41dacc:	tbz	w0, #0, 41dafc <feof@plt+0x1aa1c>
  41dad0:	ldur	w0, [x29, #-4]
  41dad4:	cmp	w0, #0x1
  41dad8:	b.ls	41db28 <feof@plt+0x1aa48>  // b.plast
  41dadc:	add	x8, sp, #0x8
  41dae0:	mov	w1, #0x1                   	// #1
  41dae4:	mov	w2, wzr
  41dae8:	bl	41dbac <feof@plt+0x1aacc>
  41daec:	ldrsw	x8, [sp, #16]
  41daf0:	b	41db00 <feof@plt+0x1aa20>
  41daf4:	mov	x19, xzr
  41daf8:	b	41db0c <feof@plt+0x1aa2c>
  41dafc:	mov	x8, xzr
  41db00:	str	x8, [x19, #64]
  41db04:	mov	w8, #0x1                   	// #1
  41db08:	strb	w8, [x19, #72]
  41db0c:	mov	x0, x19
  41db10:	ldp	x20, x19, [sp, #96]
  41db14:	ldp	x22, x21, [sp, #80]
  41db18:	ldp	x24, x23, [sp, #64]
  41db1c:	ldp	x29, x30, [sp, #48]
  41db20:	add	sp, sp, #0x70
  41db24:	ret
  41db28:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41db2c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41db30:	add	x0, x0, #0xda8
  41db34:	add	x2, x2, #0x446
  41db38:	mov	w1, #0x107                 	// #263
  41db3c:	bl	40f560 <feof@plt+0xc480>
  41db40:	stp	x29, x30, [sp, #-16]!
  41db44:	mov	x29, sp
  41db48:	bl	41d98c <feof@plt+0x1a8ac>
  41db4c:	cbz	x0, 41db5c <feof@plt+0x1aa7c>
  41db50:	ldrb	w8, [x0, #72]
  41db54:	cmp	w8, #0x0
  41db58:	cset	w0, ne  // ne = any
  41db5c:	ldp	x29, x30, [sp], #16
  41db60:	ret
  41db64:	sub	sp, sp, #0x20
  41db68:	stp	x29, x30, [sp, #16]
  41db6c:	add	x29, sp, #0x10
  41db70:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41db74:	mov	w1, w0
  41db78:	ldr	x0, [x8, #2408]
  41db7c:	add	x3, sp, #0x8
  41db80:	mov	w2, #0x1                   	// #1
  41db84:	str	xzr, [sp, #8]
  41db88:	bl	435630 <feof@plt+0x32550>
  41db8c:	ldp	x29, x30, [sp, #16]
  41db90:	cmp	w0, #0x1
  41db94:	cset	w0, eq  // eq = none
  41db98:	add	sp, sp, #0x20
  41db9c:	ret
  41dba0:	mov	w1, #0x1                   	// #1
  41dba4:	mov	w2, wzr
  41dba8:	b	41dbac <feof@plt+0x1aacc>
  41dbac:	sub	sp, sp, #0x70
  41dbb0:	stp	x29, x30, [sp, #48]
  41dbb4:	stp	x24, x23, [sp, #64]
  41dbb8:	stp	x22, x21, [sp, #80]
  41dbbc:	stp	x20, x19, [sp, #96]
  41dbc0:	add	x29, sp, #0x30
  41dbc4:	mov	w23, w2
  41dbc8:	mov	w22, w1
  41dbcc:	mov	w21, w0
  41dbd0:	mov	x19, x8
  41dbd4:	tbnz	w0, #31, 41dbf4 <feof@plt+0x1ab14>
  41dbd8:	mov	x20, xzr
  41dbdc:	cmp	w21, #0x2
  41dbe0:	b.cc	41dc24 <feof@plt+0x1ab44>  // b.lo, b.ul, b.last
  41dbe4:	adrp	x24, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dbe8:	tbz	w22, #0, 41dc30 <feof@plt+0x1ab50>
  41dbec:	mov	w2, wzr
  41dbf0:	b	41dc48 <feof@plt+0x1ab68>
  41dbf4:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dbf8:	ldr	x0, [x20, #2408]
  41dbfc:	mov	w1, w21
  41dc00:	bl	434784 <feof@plt+0x316a4>
  41dc04:	ldr	x8, [x20, #2408]
  41dc08:	mov	x20, x0
  41dc0c:	mov	w1, w21
  41dc10:	mov	x0, x8
  41dc14:	bl	43479c <feof@plt+0x316bc>
  41dc18:	mov	w21, w0
  41dc1c:	cmp	w21, #0x2
  41dc20:	b.cs	41dbe4 <feof@plt+0x1ab04>  // b.hs, b.nlast
  41dc24:	mov	x22, xzr
  41dc28:	mov	x23, xzr
  41dc2c:	b	41dccc <feof@plt+0x1abec>
  41dc30:	ldr	x0, [x24, #2408]
  41dc34:	mov	w1, w21
  41dc38:	mov	x2, xzr
  41dc3c:	bl	435eb4 <feof@plt+0x32dd4>
  41dc40:	mov	w21, w0
  41dc44:	mov	w2, #0x1                   	// #1
  41dc48:	ldr	x0, [x24, #2408]
  41dc4c:	sub	x3, x29, #0x8
  41dc50:	mov	w1, w21
  41dc54:	bl	435630 <feof@plt+0x32550>
  41dc58:	mov	w21, w0
  41dc5c:	cbz	w23, 41dca8 <feof@plt+0x1abc8>
  41dc60:	cmp	w23, #0x1
  41dc64:	b.eq	41dc94 <feof@plt+0x1abb4>  // b.none
  41dc68:	cmp	w23, #0x2
  41dc6c:	b.ne	41dd20 <feof@plt+0x1ac40>  // b.any
  41dc70:	ldr	x0, [x24, #2408]
  41dc74:	mov	w1, w21
  41dc78:	bl	4347b4 <feof@plt+0x316d4>
  41dc7c:	lsr	x0, x0, #32
  41dc80:	cmp	w21, w0
  41dc84:	b.eq	41dca8 <feof@plt+0x1abc8>  // b.none
  41dc88:	and	w1, w22, #0x1
  41dc8c:	mov	w2, #0x2                   	// #2
  41dc90:	b	41dd14 <feof@plt+0x1ac34>
  41dc94:	ldr	x0, [x24, #2408]
  41dc98:	mov	w1, w21
  41dc9c:	bl	4347b4 <feof@plt+0x316d4>
  41dca0:	cmp	w21, w0
  41dca4:	b.ne	41dd0c <feof@plt+0x1ac2c>  // b.any
  41dca8:	ldr	x0, [x24, #2408]
  41dcac:	ldur	x1, [x29, #-8]
  41dcb0:	add	x8, sp, #0x8
  41dcb4:	mov	w2, w21
  41dcb8:	bl	436118 <feof@plt+0x33038>
  41dcbc:	ldr	x23, [sp, #16]
  41dcc0:	ldr	x22, [sp, #32]
  41dcc4:	cmp	w21, #0x1
  41dcc8:	b.hi	41dce8 <feof@plt+0x1ac08>  // b.pmore
  41dccc:	cbz	w21, 41dce0 <feof@plt+0x1ac00>
  41dcd0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41dcd4:	add	x0, x0, #0x675
  41dcd8:	bl	402cd0 <gettext@plt>
  41dcdc:	b	41dcec <feof@plt+0x1ac0c>
  41dce0:	mov	x0, xzr
  41dce4:	b	41dcec <feof@plt+0x1ac0c>
  41dce8:	ldr	x0, [sp, #8]
  41dcec:	stp	x0, x23, [x19]
  41dcf0:	stp	x20, x22, [x19, #16]
  41dcf4:	ldp	x20, x19, [sp, #96]
  41dcf8:	ldp	x22, x21, [sp, #80]
  41dcfc:	ldp	x24, x23, [sp, #64]
  41dd00:	ldp	x29, x30, [sp, #48]
  41dd04:	add	sp, sp, #0x70
  41dd08:	ret
  41dd0c:	and	w1, w22, #0x1
  41dd10:	mov	w2, #0x1                   	// #1
  41dd14:	mov	x8, x19
  41dd18:	bl	41dbac <feof@plt+0x1aacc>
  41dd1c:	b	41dcf4 <feof@plt+0x1ac14>
  41dd20:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41dd24:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41dd28:	add	x0, x0, #0xda8
  41dd2c:	add	x2, x2, #0x472
  41dd30:	mov	w1, #0xc7                  	// #199
  41dd34:	bl	40f560 <feof@plt+0xc480>
  41dd38:	mov	w2, w1
  41dd3c:	mov	w1, wzr
  41dd40:	b	41dbac <feof@plt+0x1aacc>
  41dd44:	mov	w2, w1
  41dd48:	mov	w1, wzr
  41dd4c:	b	41dbac <feof@plt+0x1aacc>
  41dd50:	stp	x29, x30, [sp, #-32]!
  41dd54:	stp	x20, x19, [sp, #16]
  41dd58:	mov	x29, sp
  41dd5c:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dd60:	ldr	x8, [x20, #2408]
  41dd64:	mov	w19, w0
  41dd68:	mov	w1, w19
  41dd6c:	mov	x0, x8
  41dd70:	bl	4359a0 <feof@plt+0x328c0>
  41dd74:	cbz	w0, 41dd94 <feof@plt+0x1acb4>
  41dd78:	ldr	x0, [x20, #2408]
  41dd7c:	mov	w1, w19
  41dd80:	ldp	x20, x19, [sp, #16]
  41dd84:	mov	w2, wzr
  41dd88:	mov	x3, xzr
  41dd8c:	ldp	x29, x30, [sp], #32
  41dd90:	b	435630 <feof@plt+0x32550>
  41dd94:	mov	w0, w19
  41dd98:	ldp	x20, x19, [sp, #16]
  41dd9c:	ldp	x29, x30, [sp], #32
  41dda0:	ret
  41dda4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dda8:	ldr	x8, [x8, #2408]
  41ddac:	mov	w1, w0
  41ddb0:	mov	w2, wzr
  41ddb4:	mov	x3, xzr
  41ddb8:	mov	x0, x8
  41ddbc:	b	435630 <feof@plt+0x32550>
  41ddc0:	stp	x29, x30, [sp, #-48]!
  41ddc4:	stp	x22, x21, [sp, #16]
  41ddc8:	stp	x20, x19, [sp, #32]
  41ddcc:	mov	x29, sp
  41ddd0:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ddd4:	ldr	x8, [x22, #2408]
  41ddd8:	mov	w20, w1
  41dddc:	mov	w1, w0
  41dde0:	mov	w19, w2
  41dde4:	mov	x0, x8
  41dde8:	bl	4348ac <feof@plt+0x317cc>
  41ddec:	ldr	x8, [x22, #2408]
  41ddf0:	mov	w21, w0
  41ddf4:	mov	w1, w20
  41ddf8:	mov	x0, x8
  41ddfc:	bl	4347b4 <feof@plt+0x316d4>
  41de00:	ldr	x8, [x22, #2408]
  41de04:	mov	x20, x0
  41de08:	mov	w1, w19
  41de0c:	mov	x0, x8
  41de10:	bl	4347b4 <feof@plt+0x316d4>
  41de14:	ldr	x8, [x22, #2408]
  41de18:	mov	x2, x0
  41de1c:	bfxil	x2, x20, #0, #32
  41de20:	mov	w1, w21
  41de24:	ldp	x20, x19, [sp, #32]
  41de28:	ldp	x22, x21, [sp, #16]
  41de2c:	mov	x0, x8
  41de30:	mov	x3, xzr
  41de34:	ldp	x29, x30, [sp], #48
  41de38:	b	4343a8 <feof@plt+0x312c8>
  41de3c:	stp	x29, x30, [sp, #-32]!
  41de40:	stp	x20, x19, [sp, #16]
  41de44:	mov	x29, sp
  41de48:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41de4c:	ldr	x8, [x20, #2408]
  41de50:	mov	x19, x1
  41de54:	mov	w1, w0
  41de58:	mov	x0, x8
  41de5c:	bl	4348ac <feof@plt+0x317cc>
  41de60:	ldr	x8, [x20, #2408]
  41de64:	mov	x2, x19
  41de68:	ldp	x20, x19, [sp, #16]
  41de6c:	mov	w1, w0
  41de70:	mov	x0, x8
  41de74:	mov	x3, xzr
  41de78:	ldp	x29, x30, [sp], #32
  41de7c:	b	4343a8 <feof@plt+0x312c8>
  41de80:	sub	sp, sp, #0xd0
  41de84:	stp	x29, x30, [sp, #112]
  41de88:	stp	x28, x27, [sp, #128]
  41de8c:	stp	x26, x25, [sp, #144]
  41de90:	stp	x24, x23, [sp, #160]
  41de94:	stp	x22, x21, [sp, #176]
  41de98:	stp	x20, x19, [sp, #192]
  41de9c:	add	x29, sp, #0x70
  41dea0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dea4:	ldr	x0, [x8, #2408]
  41dea8:	movi	v0.2d, #0x0
  41deac:	mov	x1, sp
  41deb0:	str	xzr, [sp, #96]
  41deb4:	stp	q0, q0, [sp, #64]
  41deb8:	stp	q0, q0, [sp, #32]
  41debc:	stp	q0, q0, [sp]
  41dec0:	bl	436798 <feof@plt+0x336b8>
  41dec4:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41dec8:	ldr	x0, [x19, #1464]
  41decc:	ldr	x2, [sp, #32]
  41ded0:	ldp	x25, x23, [sp, #64]
  41ded4:	ldp	x24, x21, [sp, #16]
  41ded8:	ldr	x22, [sp, #56]
  41dedc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41dee0:	add	x1, x1, #0xde5
  41dee4:	bl	402a70 <fprintf@plt>
  41dee8:	ldr	x8, [sp, #32]
  41deec:	cbz	x8, 41df08 <feof@plt+0x1ae28>
  41def0:	ldr	x9, [sp, #40]
  41def4:	ldr	x0, [x19, #1464]
  41def8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41defc:	add	x1, x1, #0xe1a
  41df00:	sdiv	x2, x9, x8
  41df04:	bl	402a70 <fprintf@plt>
  41df08:	ldr	x3, [x19, #1464]
  41df0c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41df10:	add	x0, x0, #0xe4f
  41df14:	mov	w1, #0x37                  	// #55
  41df18:	mov	w2, #0x1                   	// #1
  41df1c:	bl	402fa0 <fwrite@plt>
  41df20:	ldr	x8, [sp, #8]
  41df24:	ldr	x0, [x19, #1464]
  41df28:	mov	w9, #0x2800                	// #10240
  41df2c:	cmp	x8, x9
  41df30:	mov	x2, x8
  41df34:	b.lt	41df4c <feof@plt+0x1ae6c>  // b.tstop
  41df38:	cmp	x8, #0xa00, lsl #12
  41df3c:	b.ge	41df48 <feof@plt+0x1ae68>  // b.tcont
  41df40:	lsr	x2, x8, #10
  41df44:	b	41df4c <feof@plt+0x1ae6c>
  41df48:	lsr	x2, x8, #20
  41df4c:	cmp	x8, #0xa00, lsl #12
  41df50:	mov	w26, #0x4d                  	// #77
  41df54:	mov	w27, #0x6b                  	// #107
  41df58:	mov	w20, #0x2800                	// #10240
  41df5c:	csel	w9, w27, w26, lt  // lt = tstop
  41df60:	cmp	x8, x20
  41df64:	mov	w28, #0x20                  	// #32
  41df68:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41df6c:	csel	w3, w28, w9, lt  // lt = tstop
  41df70:	add	x1, x1, #0xe87
  41df74:	bl	402a70 <fprintf@plt>
  41df78:	ldr	x8, [sp, #24]
  41df7c:	ldr	x0, [x19, #1464]
  41df80:	cmp	x8, x20
  41df84:	mov	x2, x8
  41df88:	b.lt	41dfa0 <feof@plt+0x1aec0>  // b.tstop
  41df8c:	cmp	x8, #0xa00, lsl #12
  41df90:	b.ge	41df9c <feof@plt+0x1aebc>  // b.tcont
  41df94:	lsr	x2, x8, #10
  41df98:	b	41dfa0 <feof@plt+0x1aec0>
  41df9c:	lsr	x2, x8, #20
  41dfa0:	cmp	x8, #0xa00, lsl #12
  41dfa4:	mov	w20, #0x2800                	// #10240
  41dfa8:	csel	w9, w27, w26, lt  // lt = tstop
  41dfac:	cmp	x8, x20
  41dfb0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41dfb4:	csel	w3, w28, w9, lt  // lt = tstop
  41dfb8:	add	x1, x1, #0xeb4
  41dfbc:	bl	402a70 <fprintf@plt>
  41dfc0:	ldr	x8, [sp]
  41dfc4:	ldr	x0, [x19, #1464]
  41dfc8:	cmp	x8, x20
  41dfcc:	mov	x2, x8
  41dfd0:	b.lt	41dfe8 <feof@plt+0x1af08>  // b.tstop
  41dfd4:	cmp	x8, #0xa00, lsl #12
  41dfd8:	b.ge	41dfe4 <feof@plt+0x1af04>  // b.tcont
  41dfdc:	lsr	x2, x8, #10
  41dfe0:	b	41dfe8 <feof@plt+0x1af08>
  41dfe4:	lsr	x2, x8, #20
  41dfe8:	cmp	x8, #0xa00, lsl #12
  41dfec:	mov	w26, #0x4d                  	// #77
  41dff0:	mov	w27, #0x6b                  	// #107
  41dff4:	mov	w20, #0x2800                	// #10240
  41dff8:	csel	w9, w27, w26, lt  // lt = tstop
  41dffc:	cmp	x8, x20
  41e000:	mov	w28, #0x20                  	// #32
  41e004:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e008:	csel	w3, w28, w9, lt  // lt = tstop
  41e00c:	add	x1, x1, #0xee1
  41e010:	bl	402a70 <fprintf@plt>
  41e014:	ldr	x8, [sp, #16]
  41e018:	ldr	x0, [x19, #1464]
  41e01c:	cmp	x8, x20
  41e020:	mov	x2, x8
  41e024:	b.lt	41e03c <feof@plt+0x1af5c>  // b.tstop
  41e028:	cmp	x8, #0xa00, lsl #12
  41e02c:	b.ge	41e038 <feof@plt+0x1af58>  // b.tcont
  41e030:	lsr	x2, x8, #10
  41e034:	b	41e03c <feof@plt+0x1af5c>
  41e038:	lsr	x2, x8, #20
  41e03c:	cmp	x8, #0xa00, lsl #12
  41e040:	mov	w20, #0x2800                	// #10240
  41e044:	csel	w9, w27, w26, lt  // lt = tstop
  41e048:	cmp	x8, x20
  41e04c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e050:	csel	w3, w28, w9, lt  // lt = tstop
  41e054:	add	x1, x1, #0xf0e
  41e058:	bl	402a70 <fprintf@plt>
  41e05c:	ldr	x8, [sp, #48]
  41e060:	ldr	x0, [x19, #1464]
  41e064:	cmp	x8, x20
  41e068:	mov	x2, x8
  41e06c:	b.lt	41e084 <feof@plt+0x1afa4>  // b.tstop
  41e070:	cmp	x8, #0xa00, lsl #12
  41e074:	b.ge	41e080 <feof@plt+0x1afa0>  // b.tcont
  41e078:	lsr	x2, x8, #10
  41e07c:	b	41e084 <feof@plt+0x1afa4>
  41e080:	lsr	x2, x8, #20
  41e084:	cmp	x8, #0xa00, lsl #12
  41e088:	mov	w26, #0x4d                  	// #77
  41e08c:	mov	w27, #0x6b                  	// #107
  41e090:	mov	w20, #0x2800                	// #10240
  41e094:	csel	w9, w27, w26, lt  // lt = tstop
  41e098:	cmp	x8, x20
  41e09c:	mov	w28, #0x20                  	// #32
  41e0a0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e0a4:	csel	w3, w28, w9, lt  // lt = tstop
  41e0a8:	add	x1, x1, #0xf3b
  41e0ac:	bl	402a70 <fprintf@plt>
  41e0b0:	ldr	x8, [sp, #64]
  41e0b4:	ldr	x0, [x19, #1464]
  41e0b8:	cmp	x8, x20
  41e0bc:	mov	x2, x8
  41e0c0:	b.lt	41e0d8 <feof@plt+0x1aff8>  // b.tstop
  41e0c4:	cmp	x8, #0xa00, lsl #12
  41e0c8:	b.ge	41e0d4 <feof@plt+0x1aff4>  // b.tcont
  41e0cc:	lsr	x2, x8, #10
  41e0d0:	b	41e0d8 <feof@plt+0x1aff8>
  41e0d4:	lsr	x2, x8, #20
  41e0d8:	cmp	x8, #0xa00, lsl #12
  41e0dc:	mov	w20, #0x2800                	// #10240
  41e0e0:	csel	w9, w27, w26, lt  // lt = tstop
  41e0e4:	cmp	x8, x20
  41e0e8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e0ec:	csel	w3, w28, w9, lt  // lt = tstop
  41e0f0:	add	x1, x1, #0xf68
  41e0f4:	add	x25, x23, x25
  41e0f8:	bl	402a70 <fprintf@plt>
  41e0fc:	ldr	x8, [sp, #72]
  41e100:	ldr	x0, [x19, #1464]
  41e104:	cmp	x8, x20
  41e108:	mov	x2, x8
  41e10c:	b.lt	41e124 <feof@plt+0x1b044>  // b.tstop
  41e110:	cmp	x8, #0xa00, lsl #12
  41e114:	b.ge	41e120 <feof@plt+0x1b040>  // b.tcont
  41e118:	lsr	x2, x8, #10
  41e11c:	b	41e124 <feof@plt+0x1b044>
  41e120:	lsr	x2, x8, #20
  41e124:	add	x24, x24, x23
  41e128:	cmp	x8, #0xa00, lsl #12
  41e12c:	mov	w23, #0x4d                  	// #77
  41e130:	mov	w26, #0x6b                  	// #107
  41e134:	mov	w20, #0x2800                	// #10240
  41e138:	csel	w9, w26, w23, lt  // lt = tstop
  41e13c:	cmp	x8, x20
  41e140:	mov	w27, #0x20                  	// #32
  41e144:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e148:	csel	w3, w27, w9, lt  // lt = tstop
  41e14c:	add	x1, x1, #0xf95
  41e150:	bl	402a70 <fprintf@plt>
  41e154:	ldr	x0, [x19, #1464]
  41e158:	cmp	x25, x20
  41e15c:	mov	x2, x25
  41e160:	b.lt	41e178 <feof@plt+0x1b098>  // b.tstop
  41e164:	cmp	x25, #0xa00, lsl #12
  41e168:	b.ge	41e174 <feof@plt+0x1b094>  // b.tcont
  41e16c:	lsr	x2, x25, #10
  41e170:	b	41e178 <feof@plt+0x1b098>
  41e174:	lsr	x2, x25, #20
  41e178:	cmp	x25, #0xa00, lsl #12
  41e17c:	mov	w20, #0x2800                	// #10240
  41e180:	csel	w8, w26, w23, lt  // lt = tstop
  41e184:	cmp	x25, x20
  41e188:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e18c:	csel	w3, w27, w8, lt  // lt = tstop
  41e190:	add	x1, x1, #0xfc2
  41e194:	add	x22, x24, x22
  41e198:	bl	402a70 <fprintf@plt>
  41e19c:	ldr	x8, [sp, #80]
  41e1a0:	ldr	x0, [x19, #1464]
  41e1a4:	cmp	x8, x20
  41e1a8:	mov	x2, x8
  41e1ac:	b.lt	41e1c4 <feof@plt+0x1b0e4>  // b.tstop
  41e1b0:	cmp	x8, #0xa00, lsl #12
  41e1b4:	b.ge	41e1c0 <feof@plt+0x1b0e0>  // b.tcont
  41e1b8:	lsr	x2, x8, #10
  41e1bc:	b	41e1c4 <feof@plt+0x1b0e4>
  41e1c0:	lsr	x2, x8, #20
  41e1c4:	cmp	x8, #0xa00, lsl #12
  41e1c8:	mov	w23, #0x4d                  	// #77
  41e1cc:	mov	w24, #0x6b                  	// #107
  41e1d0:	mov	w20, #0x2800                	// #10240
  41e1d4:	add	x21, x25, x21
  41e1d8:	csel	w9, w24, w23, lt  // lt = tstop
  41e1dc:	cmp	x8, x20
  41e1e0:	mov	w25, #0x20                  	// #32
  41e1e4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e1e8:	csel	w3, w25, w9, lt  // lt = tstop
  41e1ec:	add	x1, x1, #0xfef
  41e1f0:	bl	402a70 <fprintf@plt>
  41e1f4:	ldr	x0, [x19, #1464]
  41e1f8:	cmp	x22, x20
  41e1fc:	mov	x2, x22
  41e200:	b.lt	41e218 <feof@plt+0x1b138>  // b.tstop
  41e204:	cmp	x22, #0xa00, lsl #12
  41e208:	b.ge	41e214 <feof@plt+0x1b134>  // b.tcont
  41e20c:	lsr	x2, x22, #10
  41e210:	b	41e218 <feof@plt+0x1b138>
  41e214:	lsr	x2, x22, #20
  41e218:	cmp	x22, #0xa00, lsl #12
  41e21c:	mov	w20, #0x2800                	// #10240
  41e220:	csel	w8, w24, w23, lt  // lt = tstop
  41e224:	cmp	x22, x20
  41e228:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e22c:	csel	w3, w25, w8, lt  // lt = tstop
  41e230:	add	x1, x1, #0x1c
  41e234:	bl	402a70 <fprintf@plt>
  41e238:	ldr	x0, [x19, #1464]
  41e23c:	cmp	x21, x20
  41e240:	mov	x2, x21
  41e244:	b.lt	41e25c <feof@plt+0x1b17c>  // b.tstop
  41e248:	cmp	x21, #0xa00, lsl #12
  41e24c:	b.ge	41e258 <feof@plt+0x1b178>  // b.tcont
  41e250:	lsr	x2, x21, #10
  41e254:	b	41e25c <feof@plt+0x1b17c>
  41e258:	lsr	x2, x21, #20
  41e25c:	cmp	x21, #0xa00, lsl #12
  41e260:	mov	w22, #0x4d                  	// #77
  41e264:	mov	w23, #0x6b                  	// #107
  41e268:	mov	w20, #0x2800                	// #10240
  41e26c:	csel	w8, w23, w22, lt  // lt = tstop
  41e270:	cmp	x21, x20
  41e274:	mov	w21, #0x20                  	// #32
  41e278:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e27c:	csel	w3, w21, w8, lt  // lt = tstop
  41e280:	add	x1, x1, #0x49
  41e284:	bl	402a70 <fprintf@plt>
  41e288:	ldr	x8, [sp, #88]
  41e28c:	ldr	x0, [x19, #1464]
  41e290:	cmp	x8, x20
  41e294:	mov	x2, x8
  41e298:	b.lt	41e2b0 <feof@plt+0x1b1d0>  // b.tstop
  41e29c:	cmp	x8, #0xa00, lsl #12
  41e2a0:	b.ge	41e2ac <feof@plt+0x1b1cc>  // b.tcont
  41e2a4:	lsr	x2, x8, #10
  41e2a8:	b	41e2b0 <feof@plt+0x1b1d0>
  41e2ac:	lsr	x2, x8, #20
  41e2b0:	cmp	x8, #0xa00, lsl #12
  41e2b4:	mov	w20, #0x2800                	// #10240
  41e2b8:	csel	w9, w23, w22, lt  // lt = tstop
  41e2bc:	cmp	x8, x20
  41e2c0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e2c4:	csel	w3, w21, w9, lt  // lt = tstop
  41e2c8:	add	x1, x1, #0x76
  41e2cc:	bl	402a70 <fprintf@plt>
  41e2d0:	ldr	x8, [sp, #96]
  41e2d4:	ldr	x0, [x19, #1464]
  41e2d8:	cmp	x8, x20
  41e2dc:	mov	x2, x8
  41e2e0:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  41e2e4:	b.lt	41e2fc <feof@plt+0x1b21c>  // b.tstop
  41e2e8:	cmp	x8, #0xa00, lsl #12
  41e2ec:	b.ge	41e2f8 <feof@plt+0x1b218>  // b.tcont
  41e2f0:	lsr	x2, x8, #10
  41e2f4:	b	41e2fc <feof@plt+0x1b21c>
  41e2f8:	lsr	x2, x8, #20
  41e2fc:	cmp	x8, #0xa00, lsl #12
  41e300:	mov	w21, #0x4d                  	// #77
  41e304:	mov	w22, #0x6b                  	// #107
  41e308:	mov	w9, #0x2800                	// #10240
  41e30c:	csel	w10, w22, w21, lt  // lt = tstop
  41e310:	cmp	x8, x9
  41e314:	mov	w23, #0x20                  	// #32
  41e318:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e31c:	csel	w3, w23, w10, lt  // lt = tstop
  41e320:	add	x1, x1, #0xa3
  41e324:	bl	402a70 <fprintf@plt>
  41e328:	ldr	x8, [x20, #2408]
  41e32c:	ldr	x0, [x19, #1464]
  41e330:	ldr	w8, [x8, #124]
  41e334:	lsr	w9, w8, #11
  41e338:	cmp	w9, #0x5
  41e33c:	mov	w10, w8
  41e340:	b.cc	41e35c <feof@plt+0x1b27c>  // b.lo, b.ul, b.last
  41e344:	lsr	w10, w8, #21
  41e348:	cmp	w10, #0x4
  41e34c:	b.hi	41e358 <feof@plt+0x1b278>  // b.pmore
  41e350:	lsr	w10, w8, #10
  41e354:	b	41e35c <feof@plt+0x1b27c>
  41e358:	lsr	w10, w8, #20
  41e35c:	cmp	w8, #0xa00, lsl #12
  41e360:	csel	w8, w22, w21, cc  // cc = lo, ul, last
  41e364:	cmp	w9, #0x5
  41e368:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e36c:	mov	w2, w10
  41e370:	csel	w3, w23, w8, cc  // cc = lo, ul, last
  41e374:	add	x1, x1, #0xd0
  41e378:	bl	402a70 <fprintf@plt>
  41e37c:	ldr	x8, [x20, #2408]
  41e380:	ldr	x0, [x19, #1464]
  41e384:	ldr	w9, [x8, #128]
  41e388:	lsr	w8, w9, #11
  41e38c:	cmp	w8, #0x5
  41e390:	mov	w10, w9
  41e394:	b.cc	41e3b0 <feof@plt+0x1b2d0>  // b.lo, b.ul, b.last
  41e398:	lsr	w10, w9, #21
  41e39c:	cmp	w10, #0x4
  41e3a0:	b.hi	41e3ac <feof@plt+0x1b2cc>  // b.pmore
  41e3a4:	lsr	w10, w9, #10
  41e3a8:	b	41e3b0 <feof@plt+0x1b2d0>
  41e3ac:	lsr	w10, w9, #20
  41e3b0:	mov	w2, w10
  41e3b4:	cmp	w9, #0xa00, lsl #12
  41e3b8:	mov	w9, #0x4d                  	// #77
  41e3bc:	mov	w10, #0x6b                  	// #107
  41e3c0:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  41e3c4:	cmp	w8, #0x5
  41e3c8:	mov	w8, #0x20                  	// #32
  41e3cc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e3d0:	csel	w3, w8, w9, cc  // cc = lo, ul, last
  41e3d4:	add	x1, x1, #0xfd
  41e3d8:	bl	402a70 <fprintf@plt>
  41e3dc:	ldr	x1, [x19, #1464]
  41e3e0:	mov	w0, #0xa                   	// #10
  41e3e4:	bl	402d60 <fputc@plt>
  41e3e8:	ldp	x20, x19, [sp, #192]
  41e3ec:	ldp	x22, x21, [sp, #176]
  41e3f0:	ldp	x24, x23, [sp, #160]
  41e3f4:	ldp	x26, x25, [sp, #144]
  41e3f8:	ldp	x28, x27, [sp, #128]
  41e3fc:	ldp	x29, x30, [sp, #112]
  41e400:	add	sp, sp, #0xd0
  41e404:	ret
  41e408:	sub	sp, sp, #0xa0
  41e40c:	stp	x29, x30, [sp, #64]
  41e410:	stp	x28, x27, [sp, #80]
  41e414:	stp	x26, x25, [sp, #96]
  41e418:	stp	x24, x23, [sp, #112]
  41e41c:	stp	x22, x21, [sp, #128]
  41e420:	stp	x20, x19, [sp, #144]
  41e424:	add	x29, sp, #0x40
  41e428:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e42c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41e430:	add	x1, x1, #0xa0d
  41e434:	add	x2, x2, #0x12a
  41e438:	mov	x19, x0
  41e43c:	bl	402a70 <fprintf@plt>
  41e440:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e444:	add	x1, x1, #0x484
  41e448:	mov	w3, #0x2                   	// #2
  41e44c:	mov	x0, x19
  41e450:	mov	w2, wzr
  41e454:	bl	402a70 <fprintf@plt>
  41e458:	mov	w0, #0xa                   	// #10
  41e45c:	mov	x1, x19
  41e460:	mov	w28, #0xa                   	// #10
  41e464:	bl	402d60 <fputc@plt>
  41e468:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  41e46c:	ldr	x8, [x21, #2408]
  41e470:	ldr	w9, [x8, #12]
  41e474:	cbz	w9, 41e958 <feof@plt+0x1b878>
  41e478:	mov	w22, #0xcccd                	// #52429
  41e47c:	mov	w24, #0x851f                	// #34079
  41e480:	mov	w20, #0x6667                	// #26215
  41e484:	mov	w2, wzr
  41e488:	mov	w10, #0x18                  	// #24
  41e48c:	movk	w22, #0xcccc, lsl #16
  41e490:	movk	w24, #0x51eb, lsl #16
  41e494:	movk	w20, #0x6666, lsl #16
  41e498:	b	41e4c4 <feof@plt+0x1b3e4>
  41e49c:	mov	w0, #0xa                   	// #10
  41e4a0:	mov	x1, x19
  41e4a4:	bl	402d60 <fputc@plt>
  41e4a8:	ldr	x8, [x21, #2408]
  41e4ac:	ldr	x2, [sp, #8]
  41e4b0:	mov	w10, #0x18                  	// #24
  41e4b4:	ldr	w9, [x8, #12]
  41e4b8:	add	w2, w2, #0x1
  41e4bc:	cmp	w2, w9
  41e4c0:	b.cs	41e958 <feof@plt+0x1b878>  // b.hs, b.nlast
  41e4c4:	sub	w9, w9, #0x1
  41e4c8:	cmp	w9, w2
  41e4cc:	b.ne	41e4d8 <feof@plt+0x1b3f8>  // b.any
  41e4d0:	ldr	x23, [x8], #56
  41e4d4:	b	41e4e4 <feof@plt+0x1b404>
  41e4d8:	ldr	x23, [x8]
  41e4dc:	add	w8, w2, #0x1
  41e4e0:	smaddl	x8, w8, w10, x23
  41e4e4:	ldr	w25, [x8]
  41e4e8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e4ec:	mov	x0, x19
  41e4f0:	add	x1, x1, #0x13d
  41e4f4:	sxtw	x26, w2
  41e4f8:	smaddl	x27, w2, w10, x23
  41e4fc:	str	x2, [sp, #8]
  41e500:	bl	402a70 <fprintf@plt>
  41e504:	ldr	w2, [x27]
  41e508:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e50c:	mov	x0, x19
  41e510:	add	x1, x1, #0x484
  41e514:	mov	w3, w25
  41e518:	str	w25, [sp, #28]
  41e51c:	bl	402a70 <fprintf@plt>
  41e520:	ldr	x2, [x27, #8]
  41e524:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e528:	mov	x0, x19
  41e52c:	add	x1, x1, #0x14f
  41e530:	bl	402a70 <fprintf@plt>
  41e534:	ldr	w2, [x27, #16]
  41e538:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e53c:	mov	x0, x19
  41e540:	add	x1, x1, #0x15b
  41e544:	bl	402a70 <fprintf@plt>
  41e548:	mov	x25, x27
  41e54c:	ldrb	w2, [x25, #6]!
  41e550:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e554:	mov	x0, x19
  41e558:	add	x1, x1, #0x173
  41e55c:	bl	402a70 <fprintf@plt>
  41e560:	ldrh	w8, [x25]
  41e564:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e568:	mov	x0, x19
  41e56c:	add	x1, x1, #0x190
  41e570:	and	w9, w8, #0xff
  41e574:	sub	w2, w9, w8, lsr #8
  41e578:	bl	402a70 <fprintf@plt>
  41e57c:	ldrb	w2, [x27, #7]
  41e580:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e584:	mov	x0, x19
  41e588:	add	x1, x1, #0x1a3
  41e58c:	bl	402a70 <fprintf@plt>
  41e590:	ldrsb	x8, [x27, #4]
  41e594:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x3838>
  41e598:	add	x3, x3, #0x1f4
  41e59c:	str	x27, [sp, #16]
  41e5a0:	cmp	x8, #0x4
  41e5a4:	b.hi	41e5b4 <feof@plt+0x1b4d4>  // b.pmore
  41e5a8:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  41e5ac:	add	x9, x9, #0x690
  41e5b0:	ldr	x3, [x9, x8, lsl #3]
  41e5b4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e5b8:	and	w2, w8, #0xff
  41e5bc:	mov	x0, x19
  41e5c0:	add	x1, x1, #0x1fc
  41e5c4:	bl	402a70 <fprintf@plt>
  41e5c8:	ldr	x0, [x21, #2408]
  41e5cc:	ldr	x1, [sp, #16]
  41e5d0:	bl	4349ac <feof@plt+0x318cc>
  41e5d4:	mov	w8, #0x18                  	// #24
  41e5d8:	madd	x8, x26, x8, x23
  41e5dc:	ldr	w2, [x8, #20]
  41e5e0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e5e4:	mov	x26, x0
  41e5e8:	mov	x0, x19
  41e5ec:	add	x1, x1, #0x20f
  41e5f0:	bl	402a70 <fprintf@plt>
  41e5f4:	cbz	x26, 41e624 <feof@plt+0x1b544>
  41e5f8:	ldr	x8, [x21, #2408]
  41e5fc:	mov	w9, #0xaaab                	// #43691
  41e600:	movk	w9, #0xaaaa, lsl #16
  41e604:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e608:	ldr	x8, [x8]
  41e60c:	mov	x0, x19
  41e610:	add	x1, x1, #0x22c
  41e614:	sub	x8, x26, x8
  41e618:	lsr	x8, x8, #3
  41e61c:	mul	w2, w8, w9
  41e620:	bl	402a70 <fprintf@plt>
  41e624:	mov	w0, #0xa                   	// #10
  41e628:	mov	x1, x19
  41e62c:	bl	402d60 <fputc@plt>
  41e630:	ldr	x27, [sp, #16]
  41e634:	ldr	w8, [sp, #28]
  41e638:	mov	w23, #0x1                   	// #1
  41e63c:	ldr	w26, [x27]
  41e640:	cmp	w26, w8
  41e644:	b.cc	41e6a8 <feof@plt+0x1b5c8>  // b.lo, b.ul, b.last
  41e648:	b	41e49c <feof@plt+0x1b3bc>
  41e64c:	mov	w0, #0xa                   	// #10
  41e650:	mov	x1, x19
  41e654:	bl	402d60 <fputc@plt>
  41e658:	mov	w3, #0x20                  	// #32
  41e65c:	mov	x0, x19
  41e660:	mov	x1, x21
  41e664:	mov	w2, w27
  41e668:	bl	402a70 <fprintf@plt>
  41e66c:	mov	w0, #0x7c                  	// #124
  41e670:	mov	x1, x19
  41e674:	bl	402d60 <fputc@plt>
  41e678:	mov	w0, #0xa                   	// #10
  41e67c:	mov	x1, x19
  41e680:	bl	402d60 <fputc@plt>
  41e684:	ldr	x27, [sp, #16]
  41e688:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  41e68c:	mov	w23, #0x1                   	// #1
  41e690:	ldrb	w8, [x25, #1]
  41e694:	lsl	w8, w23, w8
  41e698:	add	w26, w8, w26
  41e69c:	ldr	w8, [sp, #28]
  41e6a0:	cmp	w26, w8
  41e6a4:	b.cs	41e49c <feof@plt+0x1b3bc>  // b.hs, b.nlast
  41e6a8:	ldr	x0, [x21, #2408]
  41e6ac:	mov	w1, w26
  41e6b0:	bl	434860 <feof@plt+0x31780>
  41e6b4:	tbz	w0, #0, 41ebfc <feof@plt+0x1bb1c>
  41e6b8:	ldr	x0, [x21, #2408]
  41e6bc:	add	x8, sp, #0x20
  41e6c0:	mov	x1, x27
  41e6c4:	mov	w2, w26
  41e6c8:	bl	436118 <feof@plt+0x33038>
  41e6cc:	ldr	w8, [sp, #44]
  41e6d0:	cbnz	w8, 41e690 <feof@plt+0x1b5b0>
  41e6d4:	ldr	x0, [sp, #32]
  41e6d8:	ldr	w1, [sp, #40]
  41e6dc:	bl	41d7e0 <feof@plt+0x1a700>
  41e6e0:	cbz	x0, 41e49c <feof@plt+0x1b3bc>
  41e6e4:	ldr	x2, [sp, #32]
  41e6e8:	ldr	w3, [sp, #40]
  41e6ec:	mov	x27, x1
  41e6f0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e6f4:	mov	x6, x0
  41e6f8:	mov	x0, x19
  41e6fc:	add	x1, x1, #0x255
  41e700:	mov	w4, w26
  41e704:	mov	w5, w27
  41e708:	bl	402a70 <fprintf@plt>
  41e70c:	ldrb	w8, [x25]
  41e710:	mov	w9, #0xffffffff            	// #-1
  41e714:	ldr	w0, [sp, #40]
  41e718:	lsl	w8, w9, w8
  41e71c:	mvn	w8, w8
  41e720:	sxtw	x8, w8
  41e724:	cmp	x27, x8
  41e728:	csinc	x23, x8, x27, cs  // cs = hs, nlast
  41e72c:	bl	4106b0 <feof@plt+0xd5d0>
  41e730:	cmp	w0, #0x3
  41e734:	mov	w8, #0x3                   	// #3
  41e738:	csel	w21, w0, w8, gt
  41e73c:	mov	w0, w26
  41e740:	bl	4106b0 <feof@plt+0xd5d0>
  41e744:	ldr	x8, [sp, #32]
  41e748:	cmp	w0, #0x5
  41e74c:	mov	w9, #0x5                   	// #5
  41e750:	csel	w27, w0, w9, gt
  41e754:	mov	x0, x8
  41e758:	bl	402a50 <strlen@plt>
  41e75c:	ldr	w9, [sp, #28]
  41e760:	add	w8, w21, w27
  41e764:	add	w8, w8, w0
  41e768:	add	w27, w8, #0x6
  41e76c:	cmp	w9, #0x3e8
  41e770:	b.cc	41e7f8 <feof@plt+0x1b718>  // b.lo, b.ul, b.last
  41e774:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e778:	mov	w3, #0x20                  	// #32
  41e77c:	mov	x0, x19
  41e780:	add	x1, x1, #0x4ab
  41e784:	mov	w2, w27
  41e788:	bl	402a70 <fprintf@plt>
  41e78c:	mov	w0, #0x7c                  	// #124
  41e790:	mov	x1, x19
  41e794:	bl	402d60 <fputc@plt>
  41e798:	mov	w24, #0x4dd3                	// #19923
  41e79c:	cmp	w23, #0x2
  41e7a0:	movk	w24, #0x1062, lsl #16
  41e7a4:	b.lt	41e7e4 <feof@plt+0x1b704>  // b.tstop
  41e7a8:	mov	w21, #0x1                   	// #1
  41e7ac:	ldrb	w8, [x25, #1]
  41e7b0:	mov	x1, x19
  41e7b4:	lsl	w8, w21, w8
  41e7b8:	add	w8, w8, w26
  41e7bc:	umull	x8, w8, w24
  41e7c0:	lsr	x8, x8, #38
  41e7c4:	mul	x9, x8, x22
  41e7c8:	lsr	x9, x9, #35
  41e7cc:	msub	w8, w9, w28, w8
  41e7d0:	orr	w0, w8, #0x30
  41e7d4:	bl	402d60 <fputc@plt>
  41e7d8:	add	w21, w21, #0x1
  41e7dc:	cmp	w23, w21
  41e7e0:	b.ne	41e7ac <feof@plt+0x1b6cc>  // b.any
  41e7e4:	mov	w0, #0xa                   	// #10
  41e7e8:	mov	x1, x19
  41e7ec:	bl	402d60 <fputc@plt>
  41e7f0:	mov	w24, #0x851f                	// #34079
  41e7f4:	movk	w24, #0x51eb, lsl #16
  41e7f8:	ldr	w8, [sp, #28]
  41e7fc:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x3838>
  41e800:	add	x21, x21, #0x4ab
  41e804:	cmp	w8, #0x64
  41e808:	b.cc	41e884 <feof@plt+0x1b7a4>  // b.lo, b.ul, b.last
  41e80c:	mov	w3, #0x20                  	// #32
  41e810:	mov	x0, x19
  41e814:	mov	x1, x21
  41e818:	mov	w2, w27
  41e81c:	bl	402a70 <fprintf@plt>
  41e820:	mov	w0, #0x7c                  	// #124
  41e824:	mov	x1, x19
  41e828:	bl	402d60 <fputc@plt>
  41e82c:	cmp	w23, #0x2
  41e830:	b.lt	41e870 <feof@plt+0x1b790>  // b.tstop
  41e834:	mov	w21, #0x1                   	// #1
  41e838:	ldrb	w8, [x25, #1]
  41e83c:	mov	x1, x19
  41e840:	lsl	w8, w21, w8
  41e844:	add	w8, w8, w26
  41e848:	umull	x8, w8, w24
  41e84c:	lsr	x8, x8, #37
  41e850:	mul	x9, x8, x22
  41e854:	lsr	x9, x9, #35
  41e858:	msub	w8, w9, w28, w8
  41e85c:	orr	w0, w8, #0x30
  41e860:	bl	402d60 <fputc@plt>
  41e864:	add	w21, w21, #0x1
  41e868:	cmp	w23, w21
  41e86c:	b.ne	41e838 <feof@plt+0x1b758>  // b.any
  41e870:	mov	w0, #0xa                   	// #10
  41e874:	mov	x1, x19
  41e878:	bl	402d60 <fputc@plt>
  41e87c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x3838>
  41e880:	add	x21, x21, #0x4ab
  41e884:	mov	w3, #0x20                  	// #32
  41e888:	mov	x0, x19
  41e88c:	mov	x1, x21
  41e890:	mov	w2, w27
  41e894:	bl	402a70 <fprintf@plt>
  41e898:	mov	w0, #0x7c                  	// #124
  41e89c:	mov	x1, x19
  41e8a0:	bl	402d60 <fputc@plt>
  41e8a4:	cmp	w23, #0x2
  41e8a8:	b.lt	41e64c <feof@plt+0x1b56c>  // b.tstop
  41e8ac:	mov	w21, #0x1                   	// #1
  41e8b0:	ldrb	w8, [x25, #1]
  41e8b4:	mov	x1, x19
  41e8b8:	lsl	w8, w21, w8
  41e8bc:	add	w8, w8, w26
  41e8c0:	umull	x8, w8, w22
  41e8c4:	lsr	x8, x8, #35
  41e8c8:	mul	x9, x8, x22
  41e8cc:	lsr	x9, x9, #35
  41e8d0:	msub	w8, w9, w28, w8
  41e8d4:	orr	w0, w8, #0x30
  41e8d8:	bl	402d60 <fputc@plt>
  41e8dc:	add	w21, w21, #0x1
  41e8e0:	cmp	w23, w21
  41e8e4:	b.ne	41e8b0 <feof@plt+0x1b7d0>  // b.any
  41e8e8:	mov	w0, #0xa                   	// #10
  41e8ec:	mov	x1, x19
  41e8f0:	bl	402d60 <fputc@plt>
  41e8f4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e8f8:	mov	w3, #0x20                  	// #32
  41e8fc:	mov	x0, x19
  41e900:	add	x1, x1, #0x4ab
  41e904:	mov	w2, w27
  41e908:	bl	402a70 <fprintf@plt>
  41e90c:	mov	w0, #0x7c                  	// #124
  41e910:	mov	x1, x19
  41e914:	bl	402d60 <fputc@plt>
  41e918:	mov	w21, #0x1                   	// #1
  41e91c:	ldrb	w8, [x25, #1]
  41e920:	mov	x1, x19
  41e924:	lsl	w8, w21, w8
  41e928:	add	w8, w8, w26
  41e92c:	smull	x9, w8, w20
  41e930:	lsr	x10, x9, #63
  41e934:	asr	x9, x9, #34
  41e938:	add	w9, w9, w10
  41e93c:	msub	w8, w9, w28, w8
  41e940:	add	w0, w8, #0x30
  41e944:	bl	402d60 <fputc@plt>
  41e948:	add	w21, w21, #0x1
  41e94c:	cmp	w23, w21
  41e950:	b.ne	41e91c <feof@plt+0x1b83c>  // b.any
  41e954:	b	41e678 <feof@plt+0x1b598>
  41e958:	ldr	w9, [x8, #36]
  41e95c:	ldr	w20, [x8, #56]
  41e960:	cbz	w9, 41e978 <feof@plt+0x1b898>
  41e964:	ldr	x8, [x8, #24]
  41e968:	sub	w9, w9, #0x1
  41e96c:	sbfiz	x9, x9, #5, #32
  41e970:	ldr	w21, [x8, x9]
  41e974:	b	41e97c <feof@plt+0x1b89c>
  41e978:	mov	w21, #0x80000000            	// #-2147483648
  41e97c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  41e980:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41e984:	add	x1, x1, #0xa0d
  41e988:	add	x2, x2, #0x26a
  41e98c:	mov	x0, x19
  41e990:	bl	402a70 <fprintf@plt>
  41e994:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41e998:	add	x1, x1, #0x484
  41e99c:	mov	x0, x19
  41e9a0:	mov	w2, w20
  41e9a4:	mov	w3, w21
  41e9a8:	bl	402a70 <fprintf@plt>
  41e9ac:	mov	w0, #0xa                   	// #10
  41e9b0:	mov	x1, x19
  41e9b4:	bl	402d60 <fputc@plt>
  41e9b8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41e9bc:	ldr	x8, [x8, #2408]
  41e9c0:	ldr	w9, [x8, #36]
  41e9c4:	cbz	w9, 41eb64 <feof@plt+0x1ba84>
  41e9c8:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41e9cc:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x3838>
  41e9d0:	mov	w10, wzr
  41e9d4:	add	x25, x25, #0x2e8
  41e9d8:	add	x20, x20, #0x375
  41e9dc:	b	41ea04 <feof@plt+0x1b924>
  41e9e0:	mov	w0, #0xa                   	// #10
  41e9e4:	mov	x1, x19
  41e9e8:	bl	402d60 <fputc@plt>
  41e9ec:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  41e9f0:	ldr	x8, [x8, #2408]
  41e9f4:	ldr	w10, [sp, #28]
  41e9f8:	ldr	w9, [x8, #36]
  41e9fc:	cmp	w10, w9
  41ea00:	b.cs	41eb64 <feof@plt+0x1ba84>  // b.hs, b.nlast
  41ea04:	ldr	x8, [x8, #24]
  41ea08:	add	w10, w10, #0x1
  41ea0c:	sub	w22, w9, w10
  41ea10:	sxtw	x9, w22
  41ea14:	add	x27, x8, x9, lsl #5
  41ea18:	mov	x0, x27
  41ea1c:	str	w10, [sp, #28]
  41ea20:	bl	435994 <feof@plt+0x328b4>
  41ea24:	mov	x21, x27
  41ea28:	ldr	w4, [x21, #4]!
  41ea2c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41ea30:	mov	x3, x0
  41ea34:	mov	x0, x19
  41ea38:	add	x1, x1, #0x280
  41ea3c:	mov	w2, w22
  41ea40:	bl	402a70 <fprintf@plt>
  41ea44:	ldr	w2, [x27]
  41ea48:	ldr	w8, [x21]
  41ea4c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41ea50:	mov	x0, x19
  41ea54:	add	x1, x1, #0x484
  41ea58:	add	w3, w8, w2
  41ea5c:	bl	402a70 <fprintf@plt>
  41ea60:	ldr	w0, [x27, #24]
  41ea64:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41ea68:	add	x1, x1, #0x29a
  41ea6c:	mov	w2, w0
  41ea70:	bl	410ca8 <feof@plt+0xdbc8>
  41ea74:	ldr	w2, [x27]
  41ea78:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41ea7c:	mov	x0, x19
  41ea80:	add	x1, x1, #0x2b9
  41ea84:	bl	402a70 <fprintf@plt>
  41ea88:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x3838>
  41ea8c:	mov	w1, #0x13                  	// #19
  41ea90:	mov	w2, #0x1                   	// #1
  41ea94:	add	x0, x0, #0x2d4
  41ea98:	mov	x3, x19
  41ea9c:	bl	402fa0 <fwrite@plt>
  41eaa0:	ldr	w8, [x21]
  41eaa4:	cbz	w8, 41e9e0 <feof@plt+0x1b900>
  41eaa8:	mov	x22, xzr
  41eaac:	add	x26, x27, #0x10
  41eab0:	mov	w28, #0x1                   	// #1
  41eab4:	b	41eaf8 <feof@plt+0x1ba18>
  41eab8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41eabc:	mov	w0, w23
  41eac0:	add	x1, x1, #0x357
  41eac4:	mov	w2, w22
  41eac8:	mov	w3, w23
  41eacc:	bl	410ca8 <feof@plt+0xdbc8>
  41ead0:	mov	w0, w23
  41ead4:	mov	x1, x20
  41ead8:	mov	w2, w22
  41eadc:	mov	w3, w24
  41eae0:	bl	410ca8 <feof@plt+0xdbc8>
  41eae4:	ldr	w8, [x21]
  41eae8:	add	x22, x22, #0x1
  41eaec:	add	w28, w28, #0x2
  41eaf0:	cmp	x22, x8
  41eaf4:	b.cs	41e9e0 <feof@plt+0x1b900>  // b.hs, b.nlast
  41eaf8:	ldr	x8, [x26]
  41eafc:	sub	w9, w28, #0x1
  41eb00:	mov	x0, x19
  41eb04:	mov	x1, x25
  41eb08:	ldr	w23, [x8, w9, uxtw #2]
  41eb0c:	ldr	w24, [x8, w28, uxtw #2]
  41eb10:	mov	w2, w22
  41eb14:	mov	w3, w23
  41eb18:	mov	w4, w24
  41eb1c:	bl	402a70 <fprintf@plt>
  41eb20:	cmp	w23, w24
  41eb24:	b.ne	41eab8 <feof@plt+0x1b9d8>  // b.any
  41eb28:	ldr	w8, [x27]
  41eb2c:	subs	w3, w23, w8
  41eb30:	b.cs	41eb4c <feof@plt+0x1ba6c>  // b.hs, b.nlast
  41eb34:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41eb38:	mov	w0, w23
  41eb3c:	add	x1, x1, #0x2f8
  41eb40:	mov	w2, w22
  41eb44:	mov	w3, w23
  41eb48:	b	41eae0 <feof@plt+0x1ba00>
  41eb4c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  41eb50:	mov	x0, x19
  41eb54:	add	x1, x1, #0x324
  41eb58:	mov	w2, w23
  41eb5c:	bl	402a70 <fprintf@plt>
  41eb60:	b	41eae4 <feof@plt+0x1ba04>
  41eb64:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x2838>
  41eb68:	add	x20, x20, #0xa0d
  41eb6c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41eb70:	add	x2, x2, #0x393
  41eb74:	mov	x0, x19
  41eb78:	mov	x1, x20
  41eb7c:	bl	402a70 <fprintf@plt>
  41eb80:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x3838>
  41eb84:	add	x21, x21, #0x484
  41eb88:	mov	w2, #0x7fffffff            	// #2147483647
  41eb8c:	mov	w3, #0x80000000            	// #-2147483648
  41eb90:	mov	x0, x19
  41eb94:	mov	x1, x21
  41eb98:	bl	402a70 <fprintf@plt>
  41eb9c:	mov	w0, #0xa                   	// #10
  41eba0:	mov	x1, x19
  41eba4:	bl	402d60 <fputc@plt>
  41eba8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41ebac:	add	x2, x2, #0x3a2
  41ebb0:	mov	x0, x19
  41ebb4:	mov	x1, x20
  41ebb8:	bl	402a70 <fprintf@plt>
  41ebbc:	mov	w2, #0x80000000            	// #-2147483648
  41ebc0:	mov	w3, #0xffffffff            	// #-1
  41ebc4:	mov	x0, x19
  41ebc8:	mov	x1, x21
  41ebcc:	bl	402a70 <fprintf@plt>
  41ebd0:	mov	w0, #0xa                   	// #10
  41ebd4:	mov	x1, x19
  41ebd8:	bl	402d60 <fputc@plt>
  41ebdc:	ldp	x20, x19, [sp, #144]
  41ebe0:	ldp	x22, x21, [sp, #128]
  41ebe4:	ldp	x24, x23, [sp, #112]
  41ebe8:	ldp	x26, x25, [sp, #96]
  41ebec:	ldp	x28, x27, [sp, #80]
  41ebf0:	ldp	x29, x30, [sp, #64]
  41ebf4:	add	sp, sp, #0xa0
  41ebf8:	ret
  41ebfc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41ec00:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41ec04:	add	x0, x0, #0xda8
  41ec08:	add	x2, x2, #0x242
  41ec0c:	mov	w1, #0x454                 	// #1108
  41ec10:	bl	40f560 <feof@plt+0xc480>
  41ec14:	stp	x29, x30, [sp, #-48]!
  41ec18:	str	x21, [sp, #16]
  41ec1c:	stp	x20, x19, [sp, #32]
  41ec20:	mov	x29, sp
  41ec24:	mov	w21, w1
  41ec28:	str	w1, [x0]
  41ec2c:	adrp	x1, 41f000 <feof@plt+0x1bf20>
  41ec30:	mov	x19, x2
  41ec34:	mov	x20, x0
  41ec38:	sxtw	x3, w21
  41ec3c:	sbfiz	x0, x21, #2, #32
  41ec40:	add	x1, x1, #0xf10
  41ec44:	mov	w2, #0x4                   	// #4
  41ec48:	bl	40efa0 <feof@plt+0xbec0>
  41ec4c:	cmp	w21, #0x1
  41ec50:	str	x0, [x20, #8]
  41ec54:	b.lt	41ec8c <feof@plt+0x1bbac>  // b.tstop
  41ec58:	ldr	w8, [x19]
  41ec5c:	cmp	w21, #0x1
  41ec60:	str	w8, [x0]
  41ec64:	b.eq	41ec8c <feof@plt+0x1bbac>  // b.none
  41ec68:	mov	w8, w21
  41ec6c:	mov	w9, #0x1                   	// #1
  41ec70:	lsl	x11, x9, #2
  41ec74:	ldr	x10, [x20, #8]
  41ec78:	ldr	w12, [x19, x11]
  41ec7c:	add	x9, x9, #0x1
  41ec80:	cmp	x8, x9
  41ec84:	str	w12, [x10, x11]
  41ec88:	b.ne	41ec70 <feof@plt+0x1bb90>  // b.any
  41ec8c:	ldp	x20, x19, [sp, #32]
  41ec90:	ldr	x21, [sp, #16]
  41ec94:	ldp	x29, x30, [sp], #48
  41ec98:	ret
  41ec9c:	stp	x29, x30, [sp, #-32]!
  41eca0:	str	x19, [sp, #16]
  41eca4:	mov	x29, sp
  41eca8:	mov	x19, x0
  41ecac:	mov	w0, #0x40                  	// #64
  41ecb0:	mov	w1, wzr
  41ecb4:	bl	41fd3c <feof@plt+0x1cc5c>
  41ecb8:	str	x0, [x19]
  41ecbc:	ldr	x19, [sp, #16]
  41ecc0:	ldp	x29, x30, [sp], #32
  41ecc4:	ret
  41ecc8:	stp	x29, x30, [sp, #-64]!
  41eccc:	str	x23, [sp, #16]
  41ecd0:	stp	x22, x21, [sp, #32]
  41ecd4:	stp	x20, x19, [sp, #48]
  41ecd8:	mov	x29, sp
  41ecdc:	cmp	w1, #0x1
  41ece0:	b.le	41edcc <feof@plt+0x1bcec>
  41ece4:	mov	x19, x2
  41ece8:	cbz	x2, 41ede4 <feof@plt+0x1bd04>
  41ecec:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ecf0:	mov	w21, w1
  41ecf4:	mov	x20, x0
  41ecf8:	ldr	w1, [x19]
  41ecfc:	ldr	x0, [x22, #2408]
  41ed00:	mov	w2, #0x1                   	// #1
  41ed04:	mov	x3, xzr
  41ed08:	bl	435630 <feof@plt+0x32550>
  41ed0c:	ldr	x8, [x22, #2408]
  41ed10:	mov	w1, w0
  41ed14:	mov	x0, x8
  41ed18:	bl	4347b4 <feof@plt+0x316d4>
  41ed1c:	adrp	x1, 41f000 <feof@plt+0x1bf20>
  41ed20:	str	w0, [x29, #28]
  41ed24:	add	x1, x1, #0xf40
  41ed28:	mov	w0, #0x10                  	// #16
  41ed2c:	mov	w3, #0x1                   	// #1
  41ed30:	mov	x2, xzr
  41ed34:	bl	40efa0 <feof@plt+0xbec0>
  41ed38:	mov	w23, w21
  41ed3c:	adrp	x1, 41f000 <feof@plt+0x1bf20>
  41ed40:	mov	x22, x0
  41ed44:	str	w21, [x0]
  41ed48:	lsl	x0, x23, #2
  41ed4c:	add	x1, x1, #0xf10
  41ed50:	mov	w2, #0x4                   	// #4
  41ed54:	mov	x3, x23
  41ed58:	bl	40efa0 <feof@plt+0xbec0>
  41ed5c:	str	x0, [x22, #8]
  41ed60:	ldr	x8, [x19]
  41ed64:	cmp	w21, #0x2
  41ed68:	str	x8, [x0]
  41ed6c:	b.eq	41ed90 <feof@plt+0x1bcb0>  // b.none
  41ed70:	mov	w8, #0x2                   	// #2
  41ed74:	lsl	x10, x8, #2
  41ed78:	ldr	x9, [x22, #8]
  41ed7c:	ldr	w11, [x19, x10]
  41ed80:	add	x8, x8, #0x1
  41ed84:	cmp	x23, x8
  41ed88:	str	w11, [x9, x10]
  41ed8c:	b.ne	41ed74 <feof@plt+0x1bc94>  // b.any
  41ed90:	ldr	w2, [x29, #28]
  41ed94:	ldr	x0, [x20]
  41ed98:	add	x1, x29, #0x1c
  41ed9c:	mov	w3, #0x1                   	// #1
  41eda0:	bl	41ff44 <feof@plt+0x1ce64>
  41eda4:	ldr	w8, [x0]
  41eda8:	cbnz	w8, 41edb4 <feof@plt+0x1bcd4>
  41edac:	ldr	w8, [x29, #28]
  41edb0:	str	w8, [x0]
  41edb4:	str	x22, [x0, #8]
  41edb8:	ldp	x20, x19, [sp, #48]
  41edbc:	ldp	x22, x21, [sp, #32]
  41edc0:	ldr	x23, [sp, #16]
  41edc4:	ldp	x29, x30, [sp], #64
  41edc8:	ret
  41edcc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41edd0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41edd4:	add	x0, x0, #0xda8
  41edd8:	add	x2, x2, #0x3b3
  41eddc:	mov	w1, #0x4f6                 	// #1270
  41ede0:	bl	40f560 <feof@plt+0xc480>
  41ede4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41ede8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41edec:	add	x0, x0, #0xda8
  41edf0:	add	x2, x2, #0x3b3
  41edf4:	mov	w1, #0x4f7                 	// #1271
  41edf8:	bl	40f560 <feof@plt+0xc480>
  41edfc:	stp	x29, x30, [sp, #-32]!
  41ee00:	str	x19, [sp, #16]
  41ee04:	mov	x29, sp
  41ee08:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ee0c:	ldr	x8, [x19, #2408]
  41ee10:	mov	w1, w0
  41ee14:	mov	w2, #0x1                   	// #1
  41ee18:	mov	x3, xzr
  41ee1c:	mov	x0, x8
  41ee20:	bl	435630 <feof@plt+0x32550>
  41ee24:	ldr	x8, [x19, #2408]
  41ee28:	mov	w1, w0
  41ee2c:	mov	x0, x8
  41ee30:	bl	4347b4 <feof@plt+0x316d4>
  41ee34:	ldr	x19, [sp, #16]
  41ee38:	ldp	x29, x30, [sp], #32
  41ee3c:	ret
  41ee40:	sub	sp, sp, #0x40
  41ee44:	stp	x29, x30, [sp, #16]
  41ee48:	stp	x22, x21, [sp, #32]
  41ee4c:	stp	x20, x19, [sp, #48]
  41ee50:	add	x29, sp, #0x10
  41ee54:	cbz	x2, 41eed0 <feof@plt+0x1bdf0>
  41ee58:	mov	x19, x3
  41ee5c:	cbz	x3, 41eee8 <feof@plt+0x1be08>
  41ee60:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ee64:	mov	x21, x0
  41ee68:	ldr	x0, [x22, #2408]
  41ee6c:	mov	x20, x2
  41ee70:	mov	w2, #0x1                   	// #1
  41ee74:	mov	x3, xzr
  41ee78:	bl	435630 <feof@plt+0x32550>
  41ee7c:	ldr	x8, [x22, #2408]
  41ee80:	mov	w1, w0
  41ee84:	mov	x0, x8
  41ee88:	bl	4347b4 <feof@plt+0x316d4>
  41ee8c:	stur	w0, [x29, #-4]
  41ee90:	ldr	x0, [x21]
  41ee94:	sub	x1, x29, #0x4
  41ee98:	bl	41fe38 <feof@plt+0x1cd58>
  41ee9c:	cbz	x0, 41eebc <feof@plt+0x1bddc>
  41eea0:	ldr	x8, [x0]
  41eea4:	ldr	w8, [x8]
  41eea8:	str	w8, [x20]
  41eeac:	ldr	x8, [x0]
  41eeb0:	mov	w0, #0x1                   	// #1
  41eeb4:	ldr	x8, [x8, #8]
  41eeb8:	str	x8, [x19]
  41eebc:	ldp	x20, x19, [sp, #48]
  41eec0:	ldp	x22, x21, [sp, #32]
  41eec4:	ldp	x29, x30, [sp, #16]
  41eec8:	add	sp, sp, #0x40
  41eecc:	ret
  41eed0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41eed4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41eed8:	add	x0, x0, #0xda8
  41eedc:	add	x2, x2, #0x3cf
  41eee0:	mov	w1, #0x50d                 	// #1293
  41eee4:	bl	40f560 <feof@plt+0xc480>
  41eee8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41eeec:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41eef0:	add	x0, x0, #0xda8
  41eef4:	add	x2, x2, #0x3cf
  41eef8:	mov	w1, #0x50e                 	// #1294
  41eefc:	bl	40f560 <feof@plt+0xc480>
  41ef00:	sub	sp, sp, #0x140
  41ef04:	stp	x29, x30, [sp, #224]
  41ef08:	stp	x28, x27, [sp, #240]
  41ef0c:	stp	x26, x25, [sp, #256]
  41ef10:	stp	x24, x23, [sp, #272]
  41ef14:	stp	x22, x21, [sp, #288]
  41ef18:	stp	x20, x19, [sp, #304]
  41ef1c:	add	x29, sp, #0xe0
  41ef20:	cbz	x7, 41f610 <feof@plt+0x1c530>
  41ef24:	mov	x24, x0
  41ef28:	add	x0, sp, #0x60
  41ef2c:	mov	x22, x7
  41ef30:	mov	w23, w6
  41ef34:	mov	w25, w5
  41ef38:	mov	w26, w4
  41ef3c:	mov	w28, w3
  41ef40:	mov	w21, w2
  41ef44:	mov	x20, x1
  41ef48:	bl	4210fc <feof@plt+0x1e01c>
  41ef4c:	stur	w21, [x29, #-12]
  41ef50:	cbz	x24, 41f628 <feof@plt+0x1c548>
  41ef54:	cbz	w21, 41ef88 <feof@plt+0x1bea8>
  41ef58:	mov	x0, x24
  41ef5c:	bl	4269f4 <feof@plt+0x23914>
  41ef60:	ldrb	w8, [x0, #45]
  41ef64:	cmp	w8, #0x2
  41ef68:	b.ne	41ef94 <feof@plt+0x1beb4>  // b.any
  41ef6c:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41ef70:	ldr	x0, [x19, #2408]
  41ef74:	ldrb	w8, [x0, #116]
  41ef78:	cbz	w8, 41efc8 <feof@plt+0x1bee8>
  41ef7c:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41ef80:	add	x25, x25, #0x4f8
  41ef84:	b	41ef9c <feof@plt+0x1bebc>
  41ef88:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41ef8c:	add	x25, x25, #0x4cc
  41ef90:	b	41ef9c <feof@plt+0x1bebc>
  41ef94:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41ef98:	add	x25, x25, #0x4dd
  41ef9c:	add	x0, sp, #0x60
  41efa0:	bl	421134 <feof@plt+0x1e054>
  41efa4:	mov	x0, x25
  41efa8:	ldp	x20, x19, [sp, #304]
  41efac:	ldp	x22, x21, [sp, #288]
  41efb0:	ldp	x24, x23, [sp, #272]
  41efb4:	ldp	x26, x25, [sp, #256]
  41efb8:	ldp	x28, x27, [sp, #240]
  41efbc:	ldp	x29, x30, [sp, #224]
  41efc0:	add	sp, sp, #0x140
  41efc4:	ret
  41efc8:	str	x22, [sp, #24]
  41efcc:	stp	w23, w25, [sp, #36]
  41efd0:	str	w26, [sp, #44]
  41efd4:	cbz	x20, 41f024 <feof@plt+0x1bf44>
  41efd8:	mov	w2, #0x1                   	// #1
  41efdc:	mov	w1, w21
  41efe0:	mov	x3, xzr
  41efe4:	bl	435630 <feof@plt+0x32550>
  41efe8:	ldr	x8, [x19, #2408]
  41efec:	mov	w1, w0
  41eff0:	mov	x0, x8
  41eff4:	bl	4347b4 <feof@plt+0x316d4>
  41eff8:	stur	w0, [x29, #-48]
  41effc:	ldr	x0, [x20]
  41f000:	sub	x1, x29, #0x30
  41f004:	bl	41fe38 <feof@plt+0x1cd58>
  41f008:	cbz	x0, 41f024 <feof@plt+0x1bf44>
  41f00c:	ldr	x8, [x0]
  41f010:	ldr	w19, [x8]
  41f014:	cbz	w19, 41f438 <feof@plt+0x1c358>
  41f018:	ldr	x8, [x8, #8]
  41f01c:	str	x8, [sp, #72]
  41f020:	b	41f030 <feof@plt+0x1bf50>
  41f024:	sub	x8, x29, #0xc
  41f028:	str	x8, [sp, #72]
  41f02c:	mov	w19, #0x1                   	// #1
  41f030:	sxtw	x22, w19
  41f034:	mov	w20, #0x8                   	// #8
  41f038:	bfi	x20, x22, #4, #32
  41f03c:	mov	x0, xzr
  41f040:	mov	x1, x20
  41f044:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41f048:	and	w21, w19, #0x7fffffff
  41f04c:	mov	x27, x0
  41f050:	stp	w21, wzr, [x0]
  41f054:	mov	x0, xzr
  41f058:	mov	x1, x20
  41f05c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41f060:	mov	x23, x0
  41f064:	cmp	w19, #0x1
  41f068:	stp	w21, wzr, [x0]
  41f06c:	b.lt	41f444 <feof@plt+0x1c364>  // b.tstop
  41f070:	str	w28, [sp, #20]
  41f074:	mov	x26, xzr
  41f078:	and	x8, x22, #0xffffffff
  41f07c:	mov	x28, x27
  41f080:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41f084:	str	x22, [sp, #8]
  41f088:	str	x8, [sp, #48]
  41f08c:	b	41f0b4 <feof@plt+0x1bfd4>
  41f090:	ldr	x26, [sp, #88]
  41f094:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f098:	add	x25, x25, #0x60e
  41f09c:	tbz	w8, #0, 41f478 <feof@plt+0x1c398>
  41f0a0:	ldr	x8, [sp, #48]
  41f0a4:	add	x26, x26, #0x1
  41f0a8:	mov	x28, x27
  41f0ac:	cmp	x26, x8
  41f0b0:	b.eq	41f5d4 <feof@plt+0x1c4f4>  // b.none
  41f0b4:	ldr	x8, [sp, #72]
  41f0b8:	ldr	x0, [x19, #2408]
  41f0bc:	ldr	w1, [x8, x26, lsl #2]
  41f0c0:	bl	4347b4 <feof@plt+0x316d4>
  41f0c4:	ldr	x8, [x19, #2408]
  41f0c8:	mov	x21, x0
  41f0cc:	lsr	x20, x0, #32
  41f0d0:	ldr	w9, [x8, #36]
  41f0d4:	cbz	w9, 41f108 <feof@plt+0x1c028>
  41f0d8:	ldr	x8, [x8, #24]
  41f0dc:	sub	w9, w9, #0x1
  41f0e0:	sbfiz	x9, x9, #5, #32
  41f0e4:	ldr	w8, [x8, x9]
  41f0e8:	cmp	w8, w21
  41f0ec:	b.ls	41f114 <feof@plt+0x1c034>  // b.plast
  41f0f0:	mov	w8, #0x5fffffff            	// #1610612735
  41f0f4:	cmp	w21, w8
  41f0f8:	b.hi	41f5ec <feof@plt+0x1c50c>  // b.pmore
  41f0fc:	cmp	w20, w8
  41f100:	b.ls	41f11c <feof@plt+0x1c03c>  // b.plast
  41f104:	b	41f604 <feof@plt+0x1c524>
  41f108:	mov	w8, #0x80000000            	// #-2147483648
  41f10c:	cmp	w8, w21
  41f110:	b.hi	41f0f0 <feof@plt+0x1c010>  // b.pmore
  41f114:	cmp	w21, w20
  41f118:	b.ne	41f5f8 <feof@plt+0x1c518>  // b.any
  41f11c:	sub	x8, x29, #0x30
  41f120:	mov	w2, #0x1                   	// #1
  41f124:	mov	w0, w21
  41f128:	mov	w1, wzr
  41f12c:	bl	41dbac <feof@plt+0x1aacc>
  41f130:	sub	x8, x29, #0x50
  41f134:	mov	w2, #0x2                   	// #2
  41f138:	mov	w0, w20
  41f13c:	mov	w1, wzr
  41f140:	bl	41dbac <feof@plt+0x1aacc>
  41f144:	ldur	x0, [x29, #-48]
  41f148:	ldur	x8, [x29, #-80]
  41f14c:	cmp	x0, x8
  41f150:	b.ne	41f598 <feof@plt+0x1c4b8>  // b.any
  41f154:	ldur	w1, [x29, #-40]
  41f158:	ldur	w8, [x29, #-72]
  41f15c:	cmp	w1, w8
  41f160:	b.ne	41f5a4 <feof@plt+0x1c4c4>  // b.any
  41f164:	ldur	w8, [x29, #-36]
  41f168:	ldur	w9, [x29, #-68]
  41f16c:	cmp	w8, w9
  41f170:	b.gt	41f5b0 <feof@plt+0x1c4d0>
  41f174:	bl	41d7e0 <feof@plt+0x1a700>
  41f178:	cbz	x0, 41f5bc <feof@plt+0x1c4dc>
  41f17c:	ldur	w9, [x29, #-68]
  41f180:	ldursw	x11, [x29, #-36]
  41f184:	sub	w10, w9, w11
  41f188:	add	w22, w10, #0x1
  41f18c:	sub	x8, x11, #0x1
  41f190:	add	x12, x8, w22, sxtw
  41f194:	cmp	x1, x12
  41f198:	b.cc	41f5c8 <feof@plt+0x1c4e8>  // b.lo, b.ul, b.last
  41f19c:	cmp	w11, #0x0
  41f1a0:	b.le	41f640 <feof@plt+0x1c560>
  41f1a4:	cmp	w11, w1
  41f1a8:	b.gt	41f658 <feof@plt+0x1c578>
  41f1ac:	cmn	w10, #0x2
  41f1b0:	b.le	41f670 <feof@plt+0x1c590>
  41f1b4:	cmp	w9, w1
  41f1b8:	b.gt	41f688 <feof@plt+0x1c5a8>
  41f1bc:	add	x0, x0, w8, uxtw
  41f1c0:	mov	w1, w22
  41f1c4:	str	x26, [sp, #88]
  41f1c8:	bl	462364 <_obstack_memory_used@@Base+0xb9c>
  41f1cc:	str	x20, [sp, #80]
  41f1d0:	cbz	x28, 41f210 <feof@plt+0x1c130>
  41f1d4:	ldp	w8, w9, [x28]
  41f1d8:	and	w26, w8, #0x7fffffff
  41f1dc:	cmp	w26, w9
  41f1e0:	b.ne	41f22c <feof@plt+0x1c14c>  // b.any
  41f1e4:	add	w1, w26, #0x1
  41f1e8:	stp	x0, x23, [sp, #56]
  41f1ec:	tbnz	w8, #31, 41f234 <feof@plt+0x1c154>
  41f1f0:	mov	w0, w26
  41f1f4:	bl	41bd34 <feof@plt+0x18c54>
  41f1f8:	ldr	w19, [x28, #4]
  41f1fc:	mov	w23, w0
  41f200:	mov	w26, wzr
  41f204:	mov	w20, wzr
  41f208:	mov	x0, x28
  41f20c:	b	41f24c <feof@plt+0x1c16c>
  41f210:	stp	x0, x23, [sp, #56]
  41f214:	mov	w26, wzr
  41f218:	mov	w20, wzr
  41f21c:	mov	x0, xzr
  41f220:	mov	w19, wzr
  41f224:	mov	w23, #0x4                   	// #4
  41f228:	b	41f24c <feof@plt+0x1c16c>
  41f22c:	mov	x27, x28
  41f230:	b	41f298 <feof@plt+0x1c1b8>
  41f234:	cmp	w26, #0x4
  41f238:	mov	w8, #0x4                   	// #4
  41f23c:	mov	x0, xzr
  41f240:	mov	w19, wzr
  41f244:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  41f248:	mov	w20, #0x1                   	// #1
  41f24c:	mov	w8, w23
  41f250:	mov	w1, #0x8                   	// #8
  41f254:	bfi	x1, x8, #4, #32
  41f258:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41f25c:	and	w8, w23, #0x7fffffff
  41f260:	stp	w8, w19, [x0]
  41f264:	mov	x27, x0
  41f268:	ldp	x0, x23, [sp, #56]
  41f26c:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41f270:	cbz	w20, 41f298 <feof@plt+0x1c1b8>
  41f274:	cbz	w26, 41f294 <feof@plt+0x1c1b4>
  41f278:	add	x8, x28, #0x8
  41f27c:	add	x9, x27, #0x8
  41f280:	mov	w10, w26
  41f284:	ldr	q0, [x8], #16
  41f288:	subs	w10, w10, #0x1
  41f28c:	str	q0, [x9], #16
  41f290:	b.ne	41f284 <feof@plt+0x1c1a4>  // b.any
  41f294:	str	w26, [x27, #4]
  41f298:	ldr	w8, [x27, #4]
  41f29c:	sub	x3, x29, #0x58
  41f2a0:	mov	w2, #0x1                   	// #1
  41f2a4:	mov	w1, w21
  41f2a8:	add	w9, w8, #0x1
  41f2ac:	add	x8, x27, x8, lsl #4
  41f2b0:	str	w9, [x27, #4]
  41f2b4:	str	w22, [x8, #8]
  41f2b8:	str	x0, [x8, #16]
  41f2bc:	ldr	x0, [x19, #2408]
  41f2c0:	bl	435630 <feof@plt+0x32550>
  41f2c4:	ldr	x0, [x19, #2408]
  41f2c8:	sub	x3, x29, #0x60
  41f2cc:	mov	w2, #0x1                   	// #1
  41f2d0:	ldr	x1, [sp, #80]
  41f2d4:	bl	435630 <feof@plt+0x32550>
  41f2d8:	ldur	x9, [x29, #-88]
  41f2dc:	mov	w8, wzr
  41f2e0:	cbz	x9, 41f090 <feof@plt+0x1bfb0>
  41f2e4:	ldur	x1, [x29, #-96]
  41f2e8:	ldr	x26, [sp, #88]
  41f2ec:	cbz	x1, 41f094 <feof@plt+0x1bfb4>
  41f2f0:	ldr	x8, [x9, #8]
  41f2f4:	cmp	x9, x1
  41f2f8:	b.eq	41f31c <feof@plt+0x1c23c>  // b.none
  41f2fc:	ldr	x9, [x1, #8]
  41f300:	cmp	x8, x9
  41f304:	b.eq	41f31c <feof@plt+0x1c23c>  // b.none
  41f308:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f30c:	add	x25, x25, #0x62a
  41f310:	mov	w8, wzr
  41f314:	tbnz	wzr, #0, 41f0a0 <feof@plt+0x1bfc0>
  41f318:	b	41f478 <feof@plt+0x1c398>
  41f31c:	ldur	x9, [x29, #-48]
  41f320:	cmp	x8, x9
  41f324:	b.eq	41f33c <feof@plt+0x1c25c>  // b.none
  41f328:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f32c:	add	x25, x25, #0x662
  41f330:	mov	w8, wzr
  41f334:	tbnz	wzr, #0, 41f0a0 <feof@plt+0x1bfc0>
  41f338:	b	41f478 <feof@plt+0x1c398>
  41f33c:	ldr	x0, [x19, #2408]
  41f340:	ldp	w2, w3, [x29, #-40]
  41f344:	bl	435358 <feof@plt+0x32278>
  41f348:	ldr	x2, [x19, #2408]
  41f34c:	mov	w1, w0
  41f350:	add	x0, sp, #0x70
  41f354:	bl	422d98 <feof@plt+0x1fcb8>
  41f358:	cbz	x23, 41f394 <feof@plt+0x1c2b4>
  41f35c:	ldp	w8, w9, [x23]
  41f360:	and	w20, w8, #0x7fffffff
  41f364:	cmp	w20, w9
  41f368:	b.ne	41f3ac <feof@plt+0x1c2cc>  // b.any
  41f36c:	add	w1, w20, #0x1
  41f370:	tbnz	w8, #31, 41f3b4 <feof@plt+0x1c2d4>
  41f374:	mov	w0, w20
  41f378:	bl	41bd34 <feof@plt+0x18c54>
  41f37c:	ldr	w22, [x23, #4]
  41f380:	mov	w21, w0
  41f384:	mov	w20, wzr
  41f388:	mov	w19, wzr
  41f38c:	mov	x0, x23
  41f390:	b	41f3cc <feof@plt+0x1c2ec>
  41f394:	mov	w20, wzr
  41f398:	mov	w19, wzr
  41f39c:	mov	x0, xzr
  41f3a0:	mov	w22, wzr
  41f3a4:	mov	w21, #0x4                   	// #4
  41f3a8:	b	41f3cc <feof@plt+0x1c2ec>
  41f3ac:	mov	x0, x23
  41f3b0:	b	41f40c <feof@plt+0x1c32c>
  41f3b4:	cmp	w20, #0x4
  41f3b8:	mov	w8, #0x4                   	// #4
  41f3bc:	mov	x0, xzr
  41f3c0:	mov	w22, wzr
  41f3c4:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  41f3c8:	mov	w19, #0x1                   	// #1
  41f3cc:	mov	w8, w21
  41f3d0:	mov	w1, #0x8                   	// #8
  41f3d4:	bfi	x1, x8, #4, #32
  41f3d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41f3dc:	and	w8, w21, #0x7fffffff
  41f3e0:	stp	w8, w22, [x0]
  41f3e4:	cbz	w19, 41f40c <feof@plt+0x1c32c>
  41f3e8:	cbz	w20, 41f408 <feof@plt+0x1c328>
  41f3ec:	add	x8, x23, #0x8
  41f3f0:	add	x9, x0, #0x8
  41f3f4:	mov	w10, w20
  41f3f8:	ldr	q0, [x8], #16
  41f3fc:	subs	w10, w10, #0x1
  41f400:	str	q0, [x9], #16
  41f404:	b.ne	41f3f8 <feof@plt+0x1c318>  // b.any
  41f408:	str	w20, [x0, #4]
  41f40c:	ldr	w8, [x0, #4]
  41f410:	mov	x23, x0
  41f414:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41f418:	add	w9, w8, #0x1
  41f41c:	str	w9, [x0, #4]
  41f420:	ldr	q0, [sp, #112]
  41f424:	add	x8, x0, x8, lsl #4
  41f428:	stur	q0, [x8, #8]
  41f42c:	mov	w8, #0x1                   	// #1
  41f430:	tbnz	w8, #0, 41f0a0 <feof@plt+0x1bfc0>
  41f434:	b	41f478 <feof@plt+0x1c398>
  41f438:	mov	x22, xzr
  41f43c:	mov	x23, xzr
  41f440:	mov	x27, xzr
  41f444:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41f448:	add	x8, x27, #0x8
  41f44c:	cmp	x27, #0x0
  41f450:	add	x9, x23, #0x8
  41f454:	csel	x1, xzr, x8, eq  // eq = none
  41f458:	cmp	x23, #0x0
  41f45c:	csel	x2, xzr, x9, eq  // eq = none
  41f460:	add	x4, sp, #0x60
  41f464:	mov	x0, x24
  41f468:	mov	x3, x22
  41f46c:	mov	w5, w28
  41f470:	bl	4224e4 <feof@plt+0x1f404>
  41f474:	mov	x25, x0
  41f478:	mov	x28, x27
  41f47c:	cbz	x23, 41f490 <feof@plt+0x1c3b0>
  41f480:	ldr	w8, [x23]
  41f484:	tbnz	w8, #31, 41f4d0 <feof@plt+0x1c3f0>
  41f488:	mov	x0, x23
  41f48c:	bl	402b20 <free@plt>
  41f490:	cbz	x28, 41f4e4 <feof@plt+0x1c404>
  41f494:	ldr	w8, [x28, #4]
  41f498:	cbz	w8, 41f4bc <feof@plt+0x1c3dc>
  41f49c:	mov	x19, xzr
  41f4a0:	add	x20, x28, #0x10
  41f4a4:	ldr	x0, [x20], #16
  41f4a8:	bl	402b20 <free@plt>
  41f4ac:	ldr	w8, [x28, #4]
  41f4b0:	add	x19, x19, #0x1
  41f4b4:	cmp	x19, x8
  41f4b8:	b.cc	41f4a4 <feof@plt+0x1c3c4>  // b.lo, b.ul, b.last
  41f4bc:	ldr	w8, [x28]
  41f4c0:	tbnz	w8, #31, 41f4dc <feof@plt+0x1c3fc>
  41f4c4:	mov	x0, x28
  41f4c8:	bl	402b20 <free@plt>
  41f4cc:	b	41f4e0 <feof@plt+0x1c400>
  41f4d0:	str	wzr, [x23, #4]
  41f4d4:	cbnz	x28, 41f494 <feof@plt+0x1c3b4>
  41f4d8:	b	41f4e4 <feof@plt+0x1c404>
  41f4dc:	str	wzr, [x28, #4]
  41f4e0:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41f4e4:	cbnz	x25, 41ef9c <feof@plt+0x1bebc>
  41f4e8:	ldr	w8, [sp, #104]
  41f4ec:	ldr	w11, [sp, #44]
  41f4f0:	cmp	w8, w11
  41f4f4:	b.le	41f580 <feof@plt+0x1c4a0>
  41f4f8:	ldr	w10, [sp, #40]
  41f4fc:	cmp	w8, w10
  41f500:	b.le	41f58c <feof@plt+0x1c4ac>
  41f504:	ldr	w9, [sp, #36]
  41f508:	cmp	w8, w9
  41f50c:	b.le	41f5e0 <feof@plt+0x1c500>
  41f510:	ldr	x8, [sp, #96]
  41f514:	ldr	x0, [x19, #2408]
  41f518:	ldr	x1, [x8, w11, sxtw #3]
  41f51c:	ldr	x20, [x8, w10, sxtw #3]
  41f520:	add	x8, x8, w9, sxtw #3
  41f524:	ldr	w21, [x8, #4]
  41f528:	bl	4348ac <feof@plt+0x317cc>
  41f52c:	ldr	x8, [x19, #2408]
  41f530:	mov	w22, w0
  41f534:	mov	w1, w20
  41f538:	mov	x0, x8
  41f53c:	bl	4347b4 <feof@plt+0x316d4>
  41f540:	ldr	x8, [x19, #2408]
  41f544:	mov	x20, x0
  41f548:	mov	w1, w21
  41f54c:	mov	x0, x8
  41f550:	bl	4347b4 <feof@plt+0x316d4>
  41f554:	ldr	x8, [x19, #2408]
  41f558:	mov	x2, x0
  41f55c:	bfxil	x2, x20, #0, #32
  41f560:	mov	w1, w22
  41f564:	mov	x0, x8
  41f568:	mov	x3, xzr
  41f56c:	bl	4343a8 <feof@plt+0x312c8>
  41f570:	ldr	x8, [sp, #24]
  41f574:	mov	x25, xzr
  41f578:	str	w0, [x8]
  41f57c:	b	41ef9c <feof@plt+0x1bebc>
  41f580:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f584:	add	x25, x25, #0x403
  41f588:	b	41ef9c <feof@plt+0x1bebc>
  41f58c:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f590:	add	x25, x25, #0x41a
  41f594:	b	41ef9c <feof@plt+0x1bebc>
  41f598:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f59c:	add	x25, x25, #0x570
  41f5a0:	b	41f47c <feof@plt+0x1c39c>
  41f5a4:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f5a8:	add	x25, x25, #0x597
  41f5ac:	b	41f47c <feof@plt+0x1c39c>
  41f5b0:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f5b4:	add	x25, x25, #0x5be
  41f5b8:	b	41f47c <feof@plt+0x1c39c>
  41f5bc:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f5c0:	add	x25, x25, #0x5db
  41f5c4:	b	41f47c <feof@plt+0x1c39c>
  41f5c8:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f5cc:	add	x25, x25, #0x5f6
  41f5d0:	b	41f47c <feof@plt+0x1c39c>
  41f5d4:	ldr	w28, [sp, #20]
  41f5d8:	ldr	x22, [sp, #8]
  41f5dc:	b	41f448 <feof@plt+0x1c368>
  41f5e0:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f5e4:	add	x25, x25, #0x431
  41f5e8:	b	41ef9c <feof@plt+0x1bebc>
  41f5ec:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f5f0:	add	x25, x25, #0x50c
  41f5f4:	b	41f47c <feof@plt+0x1c39c>
  41f5f8:	adrp	x25, 470000 <_obstack_memory_used@@Base+0xe838>
  41f5fc:	add	x25, x25, #0xe59
  41f600:	b	41f47c <feof@plt+0x1c39c>
  41f604:	adrp	x25, 465000 <_obstack_memory_used@@Base+0x3838>
  41f608:	add	x25, x25, #0x53f
  41f60c:	b	41f47c <feof@plt+0x1c39c>
  41f610:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41f614:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41f618:	add	x0, x0, #0xda8
  41f61c:	add	x2, x2, #0x3e8
  41f620:	mov	w1, #0x5fa                 	// #1530
  41f624:	bl	40f560 <feof@plt+0xc480>
  41f628:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41f62c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41f630:	add	x0, x0, #0xda8
  41f634:	add	x2, x2, #0x4af
  41f638:	mov	w1, #0x551                 	// #1361
  41f63c:	bl	40f560 <feof@plt+0xc480>
  41f640:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41f644:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41f648:	add	x0, x0, #0x9a0
  41f64c:	add	x2, x2, #0x9b2
  41f650:	mov	w1, #0x44                  	// #68
  41f654:	bl	40f560 <feof@plt+0xc480>
  41f658:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41f65c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41f660:	add	x0, x0, #0x9a0
  41f664:	add	x2, x2, #0x9b2
  41f668:	mov	w1, #0x45                  	// #69
  41f66c:	bl	40f560 <feof@plt+0xc480>
  41f670:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41f674:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41f678:	add	x0, x0, #0x9a0
  41f67c:	add	x2, x2, #0x9b2
  41f680:	mov	w1, #0x46                  	// #70
  41f684:	bl	40f560 <feof@plt+0xc480>
  41f688:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41f68c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  41f690:	add	x0, x0, #0x9a0
  41f694:	add	x2, x2, #0x9b2
  41f698:	mov	w1, #0x47                  	// #71
  41f69c:	bl	40f560 <feof@plt+0xc480>
  41f6a0:	stp	x29, x30, [sp, #-32]!
  41f6a4:	str	x19, [sp, #16]
  41f6a8:	mov	x29, sp
  41f6ac:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  41f6b0:	ldr	x8, [x19, #2424]
  41f6b4:	cbnz	x8, 41f84c <feof@plt+0x1c76c>
  41f6b8:	mov	w0, #0x588                 	// #1416
  41f6bc:	bl	402970 <_Znam@plt>
  41f6c0:	mov	w10, #0x10                  	// #16
  41f6c4:	mov	x8, x0
  41f6c8:	movi	v0.2d, #0x0
  41f6cc:	mov	w9, #0x1                   	// #1
  41f6d0:	str	x10, [x0]
  41f6d4:	add	x10, x0, #0x118
  41f6d8:	str	wzr, [x8, #8]!
  41f6dc:	stp	q0, q0, [x0, #16]
  41f6e0:	stp	q0, q0, [x0, #48]
  41f6e4:	strb	w9, [x0, #80]
  41f6e8:	str	xzr, [x0, #88]
  41f6ec:	str	wzr, [x0, #96]
  41f6f0:	stur	q0, [x0, #104]
  41f6f4:	stur	q0, [x0, #120]
  41f6f8:	stur	q0, [x0, #136]
  41f6fc:	stur	q0, [x0, #152]
  41f700:	strb	w9, [x0, #168]
  41f704:	str	xzr, [x0, #176]
  41f708:	str	wzr, [x0, #184]
  41f70c:	stp	q0, q0, [x0, #192]
  41f710:	stp	q0, q0, [x0, #224]
  41f714:	strb	w9, [x0, #256]
  41f718:	str	xzr, [x0, #264]
  41f71c:	str	wzr, [x0, #272]
  41f720:	stp	q0, q0, [x10]
  41f724:	stp	q0, q0, [x10, #32]
  41f728:	add	x10, x0, #0x1c8
  41f72c:	strb	w9, [x0, #344]
  41f730:	str	xzr, [x0, #352]
  41f734:	str	wzr, [x0, #360]
  41f738:	stp	q0, q0, [x0, #368]
  41f73c:	stp	q0, q0, [x0, #400]
  41f740:	strb	w9, [x0, #432]
  41f744:	str	xzr, [x0, #440]
  41f748:	str	wzr, [x0, #448]
  41f74c:	stp	q0, q0, [x10]
  41f750:	stp	q0, q0, [x10, #32]
  41f754:	add	x10, x0, #0x278
  41f758:	strb	w9, [x0, #520]
  41f75c:	str	xzr, [x0, #528]
  41f760:	str	wzr, [x0, #536]
  41f764:	stp	q0, q0, [x0, #544]
  41f768:	stp	q0, q0, [x0, #576]
  41f76c:	strb	w9, [x0, #608]
  41f770:	str	xzr, [x0, #616]
  41f774:	str	wzr, [x0, #624]
  41f778:	stp	q0, q0, [x10]
  41f77c:	stp	q0, q0, [x10, #32]
  41f780:	add	x10, x0, #0x328
  41f784:	strb	w9, [x0, #696]
  41f788:	str	xzr, [x0, #704]
  41f78c:	str	wzr, [x0, #712]
  41f790:	stp	q0, q0, [x0, #720]
  41f794:	stp	q0, q0, [x0, #752]
  41f798:	strb	w9, [x0, #784]
  41f79c:	str	xzr, [x0, #792]
  41f7a0:	str	wzr, [x0, #800]
  41f7a4:	stp	q0, q0, [x10, #32]
  41f7a8:	stp	q0, q0, [x10]
  41f7ac:	add	x10, x0, #0x3d8
  41f7b0:	strb	w9, [x0, #872]
  41f7b4:	str	xzr, [x0, #880]
  41f7b8:	str	wzr, [x0, #888]
  41f7bc:	stp	q0, q0, [x0, #928]
  41f7c0:	stp	q0, q0, [x0, #896]
  41f7c4:	strb	w9, [x0, #960]
  41f7c8:	str	xzr, [x0, #968]
  41f7cc:	str	wzr, [x0, #976]
  41f7d0:	stp	q0, q0, [x10, #32]
  41f7d4:	stp	q0, q0, [x10]
  41f7d8:	add	x10, x0, #0x488
  41f7dc:	strb	w9, [x0, #1048]
  41f7e0:	str	xzr, [x0, #1056]
  41f7e4:	str	wzr, [x0, #1064]
  41f7e8:	str	q0, [x0, #1120]
  41f7ec:	str	q0, [x0, #1104]
  41f7f0:	str	q0, [x0, #1088]
  41f7f4:	str	q0, [x0, #1072]
  41f7f8:	strb	w9, [x0, #1136]
  41f7fc:	str	xzr, [x0, #1144]
  41f800:	str	wzr, [x0, #1152]
  41f804:	stp	q0, q0, [x10, #32]
  41f808:	stp	q0, q0, [x10]
  41f80c:	add	x10, x0, #0x538
  41f810:	strb	w9, [x0, #1224]
  41f814:	str	xzr, [x0, #1232]
  41f818:	str	wzr, [x0, #1240]
  41f81c:	str	q0, [x0, #1296]
  41f820:	str	q0, [x0, #1280]
  41f824:	str	q0, [x0, #1264]
  41f828:	str	q0, [x0, #1248]
  41f82c:	strb	w9, [x0, #1312]
  41f830:	str	xzr, [x0, #1320]
  41f834:	str	wzr, [x0, #1328]
  41f838:	stp	q0, q0, [x10, #32]
  41f83c:	stp	q0, q0, [x10]
  41f840:	strb	w9, [x0, #1400]
  41f844:	str	xzr, [x0, #1408]
  41f848:	str	x8, [x19, #2424]
  41f84c:	ldr	x19, [sp, #16]
  41f850:	ldp	x29, x30, [sp], #32
  41f854:	ret
  41f858:	sub	sp, sp, #0x80
  41f85c:	stp	x29, x30, [sp, #32]
  41f860:	stp	x28, x27, [sp, #48]
  41f864:	stp	x26, x25, [sp, #64]
  41f868:	stp	x24, x23, [sp, #80]
  41f86c:	stp	x22, x21, [sp, #96]
  41f870:	stp	x20, x19, [sp, #112]
  41f874:	add	x29, sp, #0x20
  41f878:	mov	x19, x2
  41f87c:	mov	x23, x1
  41f880:	mov	x20, x0
  41f884:	bl	41fc58 <feof@plt+0x1cb78>
  41f888:	ldp	x25, x8, [x20, #40]
  41f88c:	subs	x2, x25, x8
  41f890:	b.eq	41f8fc <feof@plt+0x1c81c>  // b.none
  41f894:	ldr	x9, [x20, #24]
  41f898:	add	x21, x9, x8
  41f89c:	mov	w1, #0xa                   	// #10
  41f8a0:	mov	x0, x21
  41f8a4:	bl	402ce0 <memchr@plt>
  41f8a8:	cbnz	x0, 41f8cc <feof@plt+0x1c7ec>
  41f8ac:	mov	x0, x20
  41f8b0:	bl	41fc58 <feof@plt+0x1cb78>
  41f8b4:	ldr	x8, [x20, #24]
  41f8b8:	tbz	w0, #0, 41f8dc <feof@plt+0x1c7fc>
  41f8bc:	ldp	x25, x9, [x20, #40]
  41f8c0:	add	x21, x8, x9
  41f8c4:	sub	x2, x25, x9
  41f8c8:	b	41f89c <feof@plt+0x1c7bc>
  41f8cc:	mov	x22, x0
  41f8d0:	mov	w8, wzr
  41f8d4:	add	x24, x0, #0x1
  41f8d8:	b	41f8ec <feof@plt+0x1c80c>
  41f8dc:	ldr	x25, [x20, #40]
  41f8e0:	mov	x24, xzr
  41f8e4:	add	x22, x8, x25
  41f8e8:	mov	w8, #0x1                   	// #1
  41f8ec:	ldr	x0, [x20, #16]
  41f8f0:	strb	w8, [x20, #72]
  41f8f4:	bl	403000 <ferror@plt>
  41f8f8:	cbz	w0, 41f904 <feof@plt+0x1c824>
  41f8fc:	mov	w0, wzr
  41f900:	b	41fc00 <feof@plt+0x1cb20>
  41f904:	cbz	x22, 41fc40 <feof@plt+0x1cb60>
  41f908:	ldr	x8, [x20, #48]
  41f90c:	cmp	x8, x25
  41f910:	b.cs	41f918 <feof@plt+0x1c838>  // b.hs, b.nlast
  41f914:	str	x21, [x23]
  41f918:	ldp	x9, x8, [x20, #56]
  41f91c:	add	x25, x9, #0x1
  41f920:	cmp	x25, x8
  41f924:	str	x25, [x20, #56]
  41f928:	b.hi	41faf0 <feof@plt+0x1ca10>  // b.pmore
  41f92c:	ldr	x26, [x20, #80]
  41f930:	cbz	x26, 41f940 <feof@plt+0x1c860>
  41f934:	ldr	w9, [x26, #4]
  41f938:	cmp	w9, #0x63
  41f93c:	b.hi	41faf0 <feof@plt+0x1ca10>  // b.pmore
  41f940:	cmp	x8, #0x64
  41f944:	b.hi	41f95c <feof@plt+0x1c87c>  // b.pmore
  41f948:	cbz	x26, 41f9d4 <feof@plt+0x1c8f4>
  41f94c:	ldr	w8, [x26, #4]
  41f950:	cmp	x25, x8
  41f954:	b.ls	41faf0 <feof@plt+0x1ca10>  // b.plast
  41f958:	b	41f9e0 <feof@plt+0x1c900>
  41f95c:	cbz	x26, 41fa3c <feof@plt+0x1c95c>
  41f960:	ldr	w0, [x26, #4]
  41f964:	cbz	w0, 41f97c <feof@plt+0x1c89c>
  41f968:	mov	w9, #0x64                  	// #100
  41f96c:	mul	x9, x25, x9
  41f970:	udiv	x8, x9, x8
  41f974:	cmp	x8, x0
  41f978:	b.cc	41faf0 <feof@plt+0x1ca10>  // b.lo, b.ul, b.last
  41f97c:	ldr	w8, [x26]
  41f980:	ldr	x9, [x20, #24]
  41f984:	ldr	x12, [x20, #48]
  41f988:	and	w10, w8, #0x7fffffff
  41f98c:	cmp	w10, w0
  41f990:	sub	x13, x22, x9
  41f994:	b.ne	41fad0 <feof@plt+0x1c9f0>  // b.any
  41f998:	stur	x12, [x29, #-8]
  41f99c:	str	x13, [sp, #16]
  41f9a0:	tbnz	w8, #31, 41fb1c <feof@plt+0x1ca3c>
  41f9a4:	add	w1, w0, #0x1
  41f9a8:	bl	41bd34 <feof@plt+0x18c54>
  41f9ac:	mov	w23, w0
  41f9b0:	ldr	x0, [x20, #80]
  41f9b4:	mov	w8, #0x18                  	// #24
  41f9b8:	umull	x8, w23, w8
  41f9bc:	add	x1, x8, #0x8
  41f9c0:	cbz	x0, 41fc20 <feof@plt+0x1cb40>
  41f9c4:	ldr	w27, [x0, #4]
  41f9c8:	mov	w28, wzr
  41f9cc:	str	wzr, [sp, #12]
  41f9d0:	b	41fa70 <feof@plt+0x1c990>
  41f9d4:	mov	x8, xzr
  41f9d8:	cmp	x25, x8
  41f9dc:	b.ls	41faf0 <feof@plt+0x1ca10>  // b.plast
  41f9e0:	ldr	x8, [x20, #24]
  41f9e4:	ldr	x13, [x20, #48]
  41f9e8:	sub	x12, x22, x8
  41f9ec:	cbz	x26, 41fb04 <feof@plt+0x1ca24>
  41f9f0:	ldp	w8, w9, [x26]
  41f9f4:	and	w0, w8, #0x7fffffff
  41f9f8:	cmp	w0, w9
  41f9fc:	b.ne	41fbc8 <feof@plt+0x1cae8>  // b.any
  41fa00:	stur	x12, [x29, #-8]
  41fa04:	str	x13, [sp, #16]
  41fa08:	tbnz	w8, #31, 41fb40 <feof@plt+0x1ca60>
  41fa0c:	add	w1, w0, #0x1
  41fa10:	bl	41bd34 <feof@plt+0x18c54>
  41fa14:	mov	w23, w0
  41fa18:	ldr	x0, [x20, #80]
  41fa1c:	mov	w8, #0x18                  	// #24
  41fa20:	umull	x8, w23, w8
  41fa24:	add	x1, x8, #0x8
  41fa28:	cbz	x0, 41fc30 <feof@plt+0x1cb50>
  41fa2c:	ldr	w27, [x0, #4]
  41fa30:	mov	w28, wzr
  41fa34:	str	wzr, [sp, #12]
  41fa38:	b	41fb74 <feof@plt+0x1ca94>
  41fa3c:	ldr	x8, [x20, #24]
  41fa40:	ldr	x9, [x20, #48]
  41fa44:	str	wzr, [sp, #12]
  41fa48:	mov	w28, wzr
  41fa4c:	sub	x8, x22, x8
  41fa50:	stur	x9, [x29, #-8]
  41fa54:	str	x8, [sp, #16]
  41fa58:	mov	w23, #0x4                   	// #4
  41fa5c:	mov	w8, #0x18                  	// #24
  41fa60:	umull	x8, w23, w8
  41fa64:	mov	x0, xzr
  41fa68:	mov	w27, wzr
  41fa6c:	add	x1, x8, #0x8
  41fa70:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41fa74:	and	w8, w23, #0x7fffffff
  41fa78:	str	x0, [x20, #80]
  41fa7c:	stp	w8, w27, [x0]
  41fa80:	cbz	w28, 41fac8 <feof@plt+0x1c9e8>
  41fa84:	ldr	x9, [x20, #80]
  41fa88:	ldr	w14, [sp, #12]
  41fa8c:	cbz	w14, 41fab8 <feof@plt+0x1c9d8>
  41fa90:	add	x8, x26, #0x8
  41fa94:	add	x9, x9, #0x8
  41fa98:	mov	w10, w14
  41fa9c:	ldr	x11, [x8, #16]
  41faa0:	ldr	q0, [x8], #24
  41faa4:	subs	w10, w10, #0x1
  41faa8:	str	x11, [x9, #16]
  41faac:	str	q0, [x9], #24
  41fab0:	b.ne	41fa9c <feof@plt+0x1c9bc>  // b.any
  41fab4:	ldr	x9, [x20, #80]
  41fab8:	ldur	x12, [x29, #-8]
  41fabc:	ldr	x13, [sp, #16]
  41fac0:	str	w14, [x9, #4]
  41fac4:	b	41fad0 <feof@plt+0x1c9f0>
  41fac8:	ldur	x12, [x29, #-8]
  41facc:	ldr	x13, [sp, #16]
  41fad0:	ldr	x8, [x20, #80]
  41fad4:	mov	w10, #0x18                  	// #24
  41fad8:	ldr	w9, [x8, #4]
  41fadc:	add	w11, w9, #0x1
  41fae0:	madd	x9, x9, x10, x8
  41fae4:	str	w11, [x8, #4]
  41fae8:	stp	x25, x12, [x9, #8]
  41faec:	str	x13, [x9, #24]
  41faf0:	sub	x8, x22, x21
  41faf4:	cbz	x24, 41fbf0 <feof@plt+0x1cb10>
  41faf8:	ldr	x9, [x20, #24]
  41fafc:	sub	x9, x24, x9
  41fb00:	b	41fbf4 <feof@plt+0x1cb14>
  41fb04:	str	x13, [sp, #16]
  41fb08:	stur	x12, [x29, #-8]
  41fb0c:	str	wzr, [sp, #12]
  41fb10:	mov	w28, wzr
  41fb14:	mov	w23, #0x4                   	// #4
  41fb18:	b	41fb60 <feof@plt+0x1ca80>
  41fb1c:	str	xzr, [x20, #80]
  41fb20:	ldr	w10, [x26, #4]
  41fb24:	mov	w8, #0x4                   	// #4
  41fb28:	mov	w28, #0x1                   	// #1
  41fb2c:	add	w9, w10, #0x1
  41fb30:	cmp	w9, #0x4
  41fb34:	csinc	w23, w8, w10, ls  // ls = plast
  41fb38:	str	w10, [sp, #12]
  41fb3c:	b	41fa5c <feof@plt+0x1c97c>
  41fb40:	str	xzr, [x20, #80]
  41fb44:	ldr	w10, [x26, #4]
  41fb48:	mov	w8, #0x4                   	// #4
  41fb4c:	mov	w28, #0x1                   	// #1
  41fb50:	add	w9, w10, #0x1
  41fb54:	cmp	w9, #0x4
  41fb58:	csinc	w23, w8, w10, ls  // ls = plast
  41fb5c:	str	w10, [sp, #12]
  41fb60:	mov	w8, #0x18                  	// #24
  41fb64:	umull	x8, w23, w8
  41fb68:	mov	x0, xzr
  41fb6c:	mov	w27, wzr
  41fb70:	add	x1, x8, #0x8
  41fb74:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41fb78:	and	w8, w23, #0x7fffffff
  41fb7c:	str	x0, [x20, #80]
  41fb80:	stp	w8, w27, [x0]
  41fb84:	ldur	x12, [x29, #-8]
  41fb88:	ldr	x13, [sp, #16]
  41fb8c:	cbz	w28, 41fbc8 <feof@plt+0x1cae8>
  41fb90:	ldr	x9, [x20, #80]
  41fb94:	ldr	w14, [sp, #12]
  41fb98:	cbz	w14, 41fbc4 <feof@plt+0x1cae4>
  41fb9c:	add	x8, x26, #0x8
  41fba0:	add	x9, x9, #0x8
  41fba4:	mov	w10, w14
  41fba8:	ldr	x11, [x8, #16]
  41fbac:	ldr	q0, [x8], #24
  41fbb0:	subs	w10, w10, #0x1
  41fbb4:	str	x11, [x9, #16]
  41fbb8:	str	q0, [x9], #24
  41fbbc:	b.ne	41fba8 <feof@plt+0x1cac8>  // b.any
  41fbc0:	ldr	x9, [x20, #80]
  41fbc4:	str	w14, [x9, #4]
  41fbc8:	ldr	x8, [x20, #80]
  41fbcc:	mov	w10, #0x18                  	// #24
  41fbd0:	ldr	w9, [x8, #4]
  41fbd4:	add	w11, w9, #0x1
  41fbd8:	madd	x9, x9, x10, x8
  41fbdc:	str	w11, [x8, #4]
  41fbe0:	stp	x25, x13, [x9, #8]
  41fbe4:	str	x12, [x9, #24]
  41fbe8:	sub	x8, x22, x21
  41fbec:	cbnz	x24, 41faf8 <feof@plt+0x1ca18>
  41fbf0:	ldr	x9, [x20, #40]
  41fbf4:	mov	w0, #0x1                   	// #1
  41fbf8:	str	x9, [x20, #48]
  41fbfc:	str	x8, [x19]
  41fc00:	ldp	x20, x19, [sp, #112]
  41fc04:	ldp	x22, x21, [sp, #96]
  41fc08:	ldp	x24, x23, [sp, #80]
  41fc0c:	ldp	x26, x25, [sp, #64]
  41fc10:	ldp	x28, x27, [sp, #48]
  41fc14:	ldp	x29, x30, [sp, #32]
  41fc18:	add	sp, sp, #0x80
  41fc1c:	ret
  41fc20:	str	wzr, [sp, #12]
  41fc24:	mov	w28, wzr
  41fc28:	mov	w27, wzr
  41fc2c:	b	41fa70 <feof@plt+0x1c990>
  41fc30:	str	wzr, [sp, #12]
  41fc34:	mov	w28, wzr
  41fc38:	mov	w27, wzr
  41fc3c:	b	41fb74 <feof@plt+0x1ca94>
  41fc40:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x2838>
  41fc44:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x3838>
  41fc48:	add	x0, x0, #0xda8
  41fc4c:	add	x2, x2, #0x464
  41fc50:	mov	w1, #0x241                 	// #577
  41fc54:	bl	40f560 <feof@plt+0xc480>
  41fc58:	stp	x29, x30, [sp, #-48]!
  41fc5c:	str	x21, [sp, #16]
  41fc60:	stp	x20, x19, [sp, #32]
  41fc64:	mov	x29, sp
  41fc68:	ldr	x8, [x0, #40]
  41fc6c:	mov	x19, x0
  41fc70:	cbz	x8, 41fc90 <feof@plt+0x1cbb0>
  41fc74:	ldr	x9, [x19, #32]
  41fc78:	cmp	x8, x9
  41fc7c:	b.eq	41fc90 <feof@plt+0x1cbb0>  // b.none
  41fc80:	ldr	x9, [x19, #48]
  41fc84:	sub	x8, x8, #0x1
  41fc88:	cmp	x9, x8
  41fc8c:	b.cc	41fd10 <feof@plt+0x1cc30>  // b.lo, b.ul, b.last
  41fc90:	ldr	x0, [x19, #16]
  41fc94:	bl	4030e0 <feof@plt>
  41fc98:	cbnz	w0, 41fd10 <feof@plt+0x1cc30>
  41fc9c:	ldr	x20, [x19, #16]
  41fca0:	mov	x0, x20
  41fca4:	bl	403000 <ferror@plt>
  41fca8:	cbnz	w0, 41fd10 <feof@plt+0x1cc30>
  41fcac:	ldp	x21, x8, [x19, #32]
  41fcb0:	cmp	x8, x21
  41fcb4:	b.ne	41fce4 <feof@plt+0x1cc04>  // b.any
  41fcb8:	ldr	x0, [x19, #24]
  41fcbc:	lsl	x9, x8, #1
  41fcc0:	cmp	x8, #0x0
  41fcc4:	mov	w8, #0x1000                	// #4096
  41fcc8:	csel	x21, x8, x9, eq  // eq = none
  41fccc:	mov	x1, x21
  41fcd0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  41fcd4:	ldr	x8, [x19, #40]
  41fcd8:	ldr	x20, [x19, #16]
  41fcdc:	stp	x0, x21, [x19, #24]
  41fce0:	b	41fce8 <feof@plt+0x1cc08>
  41fce4:	ldr	x0, [x19, #24]
  41fce8:	add	x0, x0, x8
  41fcec:	sub	x2, x21, x8
  41fcf0:	mov	w1, #0x1                   	// #1
  41fcf4:	mov	x3, x20
  41fcf8:	bl	4029d0 <fread@plt>
  41fcfc:	ldr	x8, [x19, #16]
  41fd00:	mov	x20, x0
  41fd04:	mov	x0, x8
  41fd08:	bl	403000 <ferror@plt>
  41fd0c:	cbz	w0, 41fd24 <feof@plt+0x1cc44>
  41fd10:	mov	w0, wzr
  41fd14:	ldp	x20, x19, [sp, #32]
  41fd18:	ldr	x21, [sp, #16]
  41fd1c:	ldp	x29, x30, [sp], #48
  41fd20:	ret
  41fd24:	ldr	x8, [x19, #40]
  41fd28:	cmp	x20, #0x0
  41fd2c:	cset	w0, ne  // ne = any
  41fd30:	add	x8, x8, x20
  41fd34:	str	x8, [x19, #40]
  41fd38:	b	41fd14 <feof@plt+0x1cc34>
  41fd3c:	stp	x29, x30, [sp, #-48]!
  41fd40:	str	x21, [sp, #16]
  41fd44:	stp	x20, x19, [sp, #32]
  41fd48:	mov	x29, sp
  41fd4c:	adrp	x1, 41f000 <feof@plt+0x1bf20>
  41fd50:	mov	x20, x0
  41fd54:	add	x1, x1, #0xf14
  41fd58:	mov	w0, #0x30                  	// #48
  41fd5c:	mov	w3, #0x1                   	// #1
  41fd60:	mov	x2, xzr
  41fd64:	mov	w21, #0x1                   	// #1
  41fd68:	bl	40efa0 <feof@plt+0xbec0>
  41fd6c:	mov	x19, x0
  41fd70:	stp	xzr, xzr, [x0, #24]
  41fd74:	str	xzr, [x0, #16]
  41fd78:	strb	w21, [x0, #44]
  41fd7c:	mov	x0, x20
  41fd80:	bl	40eacc <feof@plt+0xb9ec>
  41fd84:	mov	w8, w0
  41fd88:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  41fd8c:	lsl	x8, x8, #4
  41fd90:	add	x9, x9, #0xf68
  41fd94:	ldr	w21, [x9, x8]
  41fd98:	adrp	x1, 41f000 <feof@plt+0x1bf20>
  41fd9c:	mov	w20, w0
  41fda0:	add	x1, x1, #0xf3c
  41fda4:	lsl	x0, x21, #4
  41fda8:	mov	w2, #0x10                  	// #16
  41fdac:	mov	x3, x21
  41fdb0:	bl	40efc8 <feof@plt+0xbee8>
  41fdb4:	cbz	x0, 41fe20 <feof@plt+0x1cd40>
  41fdb8:	cbz	w21, 41fe04 <feof@plt+0x1cd24>
  41fdbc:	cmp	w21, #0x1
  41fdc0:	b.ne	41fdcc <feof@plt+0x1ccec>  // b.any
  41fdc4:	mov	x8, xzr
  41fdc8:	b	41fdf0 <feof@plt+0x1cd10>
  41fdcc:	and	x8, x21, #0xfffffffe
  41fdd0:	add	x9, x0, #0x10
  41fdd4:	mov	x10, x8
  41fdd8:	stur	wzr, [x9, #-16]
  41fddc:	str	wzr, [x9], #32
  41fde0:	subs	x10, x10, #0x2
  41fde4:	b.ne	41fdd8 <feof@plt+0x1ccf8>  // b.any
  41fde8:	cmp	x8, x21
  41fdec:	b.eq	41fe04 <feof@plt+0x1cd24>  // b.none
  41fdf0:	sub	x9, x21, x8
  41fdf4:	add	x8, x0, x8, lsl #4
  41fdf8:	subs	x9, x9, #0x1
  41fdfc:	str	wzr, [x8], #16
  41fe00:	b.ne	41fdf8 <feof@plt+0x1cd18>  // b.any
  41fe04:	stp	x0, x21, [x19]
  41fe08:	str	w20, [x19, #40]
  41fe0c:	mov	x0, x19
  41fe10:	ldp	x20, x19, [sp, #32]
  41fe14:	ldr	x21, [sp, #16]
  41fe18:	ldp	x29, x30, [sp], #48
  41fe1c:	ret
  41fe20:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  41fe24:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  41fe28:	add	x0, x0, #0x6f1
  41fe2c:	add	x2, x2, #0x708
  41fe30:	mov	w1, #0x2b5                 	// #693
  41fe34:	bl	40f560 <feof@plt+0xc480>
  41fe38:	ldr	w8, [x0, #32]
  41fe3c:	ldr	w12, [x0, #40]
  41fe40:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1838>
  41fe44:	add	x14, x14, #0xf68
  41fe48:	add	w8, w8, #0x1
  41fe4c:	ldr	w10, [x1]
  41fe50:	add	x9, x14, x12, lsl #4
  41fe54:	str	w8, [x0, #32]
  41fe58:	ldp	w15, w8, [x9]
  41fe5c:	ldr	w11, [x9, #12]
  41fe60:	mul	x8, x8, x10
  41fe64:	lsr	x8, x8, #32
  41fe68:	sub	w9, w10, w8
  41fe6c:	add	w9, w8, w9, lsr #1
  41fe70:	ldr	x8, [x0]
  41fe74:	lsr	w9, w9, w11
  41fe78:	msub	w9, w9, w15, w10
  41fe7c:	lsl	x13, x9, #4
  41fe80:	ldr	w13, [x8, x13]
  41fe84:	cbz	w13, 41fefc <feof@plt+0x1ce1c>
  41fe88:	ldr	w16, [x1]
  41fe8c:	cmp	w13, w16
  41fe90:	b.eq	41fefc <feof@plt+0x1ce1c>  // b.none
  41fe94:	add	x12, x14, x12, lsl #4
  41fe98:	ldr	w13, [x12, #8]
  41fe9c:	sub	w14, w15, #0x2
  41fea0:	ldr	w15, [x0, #36]
  41fea4:	ldr	x12, [x0, #8]
  41fea8:	mul	x13, x13, x10
  41feac:	lsr	x13, x13, #32
  41feb0:	sub	w16, w10, w13
  41feb4:	add	w13, w13, w16, lsr #1
  41feb8:	lsr	w11, w13, w11
  41febc:	msub	w10, w11, w14, w10
  41fec0:	add	w10, w10, #0x1
  41fec4:	add	w11, w15, #0x1
  41fec8:	add	w9, w10, w9
  41fecc:	cmp	x12, x9
  41fed0:	csel	w13, wzr, w12, hi  // hi = pmore
  41fed4:	sub	w9, w9, w13
  41fed8:	str	w11, [x0, #36]
  41fedc:	lsl	x13, x9, #4
  41fee0:	ldr	w13, [x8, x13]
  41fee4:	cbz	w13, 41fef8 <feof@plt+0x1ce18>
  41fee8:	ldr	w14, [x1]
  41feec:	add	w11, w11, #0x1
  41fef0:	cmp	w13, w14
  41fef4:	b.ne	41fec8 <feof@plt+0x1cde8>  // b.any
  41fef8:	mov	w9, w9
  41fefc:	add	x8, x8, x9, lsl #4
  41ff00:	add	x8, x8, #0x8
  41ff04:	cmp	w13, #0x0
  41ff08:	csel	x0, xzr, x8, eq  // eq = none
  41ff0c:	ret
  41ff10:	ret
  41ff14:	ldr	x8, [x0, #8]
  41ff18:	mov	x9, x8
  41ff1c:	sub	x9, x9, #0x1
  41ff20:	cmp	x9, x8
  41ff24:	b.cc	41ff1c <feof@plt+0x1ce3c>  // b.lo, b.ul, b.last
  41ff28:	ldrb	w8, [x0, #44]
  41ff2c:	ldr	x0, [x0]
  41ff30:	cbz	w8, 41ff38 <feof@plt+0x1ce58>
  41ff34:	b	40eff8 <feof@plt+0xbf18>
  41ff38:	b	402b20 <free@plt>
  41ff3c:	ret
  41ff40:	ret
  41ff44:	stp	x29, x30, [sp, #-48]!
  41ff48:	stp	x22, x21, [sp, #16]
  41ff4c:	stp	x20, x19, [sp, #32]
  41ff50:	mov	x29, sp
  41ff54:	mov	w19, w3
  41ff58:	mov	w22, w2
  41ff5c:	mov	x21, x1
  41ff60:	cmp	w3, #0x1
  41ff64:	mov	x20, x0
  41ff68:	b.ne	41ff84 <feof@plt+0x1cea4>  // b.any
  41ff6c:	ldp	x8, x9, [x20, #8]
  41ff70:	add	x8, x8, x8, lsl #1
  41ff74:	cmp	x8, x9, lsl #2
  41ff78:	b.hi	41ff84 <feof@plt+0x1cea4>  // b.pmore
  41ff7c:	mov	x0, x20
  41ff80:	bl	420070 <feof@plt+0x1cf90>
  41ff84:	ldr	w8, [x20, #32]
  41ff88:	ldr	w9, [x20, #40]
  41ff8c:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  41ff90:	add	x10, x10, #0xf68
  41ff94:	add	w8, w8, #0x1
  41ff98:	add	x12, x10, x9, lsl #4
  41ff9c:	str	w8, [x20, #32]
  41ffa0:	ldp	w13, w8, [x12]
  41ffa4:	mov	w11, w22
  41ffa8:	ldr	w10, [x12, #12]
  41ffac:	mul	x8, x8, x11
  41ffb0:	lsr	x9, x8, #32
  41ffb4:	sub	w14, w22, w9
  41ffb8:	ldr	x8, [x20]
  41ffbc:	add	w9, w9, w14, lsr #1
  41ffc0:	lsr	w9, w9, w10
  41ffc4:	msub	w9, w9, w13, w22
  41ffc8:	add	x0, x8, w9, uxtw #4
  41ffcc:	ldr	w14, [x0]
  41ffd0:	cbz	w14, 420044 <feof@plt+0x1cf64>
  41ffd4:	ldr	w15, [x21]
  41ffd8:	cmp	w14, w15
  41ffdc:	b.eq	420060 <feof@plt+0x1cf80>  // b.none
  41ffe0:	ldr	w14, [x12, #8]
  41ffe4:	ldr	w15, [x20, #36]
  41ffe8:	ldr	x12, [x20, #8]
  41ffec:	sub	w13, w13, #0x2
  41fff0:	mul	x11, x14, x11
  41fff4:	lsr	x11, x11, #32
  41fff8:	sub	w14, w22, w11
  41fffc:	add	w11, w11, w14, lsr #1
  420000:	lsr	w10, w11, w10
  420004:	msub	w10, w10, w13, w22
  420008:	add	w10, w10, #0x1
  42000c:	add	w11, w15, #0x1
  420010:	add	w9, w10, w9
  420014:	cmp	x12, x9
  420018:	csel	w13, wzr, w12, hi  // hi = pmore
  42001c:	sub	w9, w9, w13
  420020:	str	w11, [x20, #36]
  420024:	add	x0, x8, w9, uxtw #4
  420028:	ldr	w13, [x0]
  42002c:	cbz	w13, 420044 <feof@plt+0x1cf64>
  420030:	ldr	w14, [x21]
  420034:	add	w11, w11, #0x1
  420038:	cmp	w13, w14
  42003c:	b.ne	420010 <feof@plt+0x1cf30>  // b.any
  420040:	b	420060 <feof@plt+0x1cf80>
  420044:	cbz	w19, 42005c <feof@plt+0x1cf7c>
  420048:	ldr	x10, [x20, #16]
  42004c:	add	x0, x8, w9, uxtw #4
  420050:	add	x10, x10, #0x1
  420054:	str	x10, [x20, #16]
  420058:	b	420060 <feof@plt+0x1cf80>
  42005c:	mov	x0, xzr
  420060:	ldp	x20, x19, [sp, #32]
  420064:	ldp	x22, x21, [sp, #16]
  420068:	ldp	x29, x30, [sp], #48
  42006c:	ret
  420070:	stp	x29, x30, [sp, #-64]!
  420074:	stp	x24, x23, [sp, #16]
  420078:	stp	x22, x21, [sp, #32]
  42007c:	stp	x20, x19, [sp, #48]
  420080:	mov	x29, sp
  420084:	ldp	x8, x9, [x0, #16]
  420088:	ldp	x19, x24, [x0]
  42008c:	mov	x20, x0
  420090:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  420094:	sub	x8, x8, x9
  420098:	lsl	x0, x8, #1
  42009c:	cmp	x0, x24
  4200a0:	add	x23, x23, #0xf68
  4200a4:	b.hi	4200c4 <feof@plt+0x1cfe4>  // b.pmore
  4200a8:	ldr	w21, [x20, #40]
  4200ac:	cmp	x24, #0x21
  4200b0:	b.cc	42023c <feof@plt+0x1d15c>  // b.lo, b.ul, b.last
  4200b4:	lsl	w8, w8, #3
  4200b8:	cmp	x24, x8
  4200bc:	mov	x22, x24
  4200c0:	b.ls	4200d8 <feof@plt+0x1cff8>  // b.plast
  4200c4:	bl	40eacc <feof@plt+0xb9ec>
  4200c8:	mov	w8, w0
  4200cc:	lsl	x8, x8, #4
  4200d0:	ldr	w22, [x23, x8]
  4200d4:	mov	w21, w0
  4200d8:	ldrb	w8, [x20, #44]
  4200dc:	cbz	w8, 420248 <feof@plt+0x1d168>
  4200e0:	adrp	x1, 41f000 <feof@plt+0x1bf20>
  4200e4:	lsl	x0, x22, #4
  4200e8:	add	x1, x1, #0xf3c
  4200ec:	mov	w2, #0x10                  	// #16
  4200f0:	mov	x3, x22
  4200f4:	bl	40efc8 <feof@plt+0xbee8>
  4200f8:	cbz	x0, 420258 <feof@plt+0x1d178>
  4200fc:	cbz	x22, 420148 <feof@plt+0x1d068>
  420100:	cmp	x22, #0x1
  420104:	b.ne	420110 <feof@plt+0x1d030>  // b.any
  420108:	mov	x8, xzr
  42010c:	b	420134 <feof@plt+0x1d054>
  420110:	and	x8, x22, #0xfffffffffffffffe
  420114:	add	x9, x0, #0x10
  420118:	mov	x10, x8
  42011c:	stur	wzr, [x9, #-16]
  420120:	str	wzr, [x9], #32
  420124:	subs	x10, x10, #0x2
  420128:	b.ne	42011c <feof@plt+0x1d03c>  // b.any
  42012c:	cmp	x22, x8
  420130:	b.eq	420148 <feof@plt+0x1d068>  // b.none
  420134:	sub	x9, x22, x8
  420138:	add	x8, x0, x8, lsl #4
  42013c:	subs	x9, x9, #0x1
  420140:	str	wzr, [x8], #16
  420144:	b.ne	42013c <feof@plt+0x1d05c>  // b.any
  420148:	ldp	x10, x9, [x20, #16]
  42014c:	add	x8, x19, x24, lsl #4
  420150:	stp	x0, x22, [x20]
  420154:	str	w21, [x20, #40]
  420158:	sub	x9, x10, x9
  42015c:	stp	x9, xzr, [x20, #16]
  420160:	mov	x9, x19
  420164:	b	42017c <feof@plt+0x1d09c>
  420168:	ldr	q0, [x9]
  42016c:	str	q0, [x16]
  420170:	add	x9, x9, #0x10
  420174:	cmp	x9, x8
  420178:	b.cs	420204 <feof@plt+0x1d124>  // b.hs, b.nlast
  42017c:	ldr	w10, [x9]
  420180:	cbz	w10, 420170 <feof@plt+0x1d090>
  420184:	ldr	w11, [x20, #40]
  420188:	add	x14, x23, x11, lsl #4
  42018c:	ldp	w15, w11, [x14]
  420190:	ldr	w13, [x14, #12]
  420194:	mul	x11, x11, x10
  420198:	lsr	x12, x11, #32
  42019c:	sub	w16, w10, w12
  4201a0:	ldr	x11, [x20]
  4201a4:	add	w12, w12, w16, lsr #1
  4201a8:	lsr	w12, w12, w13
  4201ac:	msub	w12, w12, w15, w10
  4201b0:	add	x16, x11, w12, uxtw #4
  4201b4:	ldr	w17, [x16]
  4201b8:	cbz	w17, 420168 <feof@plt+0x1d088>
  4201bc:	ldr	w16, [x14, #8]
  4201c0:	ldr	x14, [x20, #8]
  4201c4:	sub	w15, w15, #0x2
  4201c8:	mul	x16, x16, x10
  4201cc:	lsr	x16, x16, #32
  4201d0:	sub	w17, w10, w16
  4201d4:	add	w16, w16, w17, lsr #1
  4201d8:	lsr	w13, w16, w13
  4201dc:	msub	w10, w13, w15, w10
  4201e0:	add	w10, w10, #0x1
  4201e4:	add	w12, w10, w12
  4201e8:	cmp	x14, x12
  4201ec:	csel	w13, wzr, w14, hi  // hi = pmore
  4201f0:	sub	w12, w12, w13
  4201f4:	add	x16, x11, w12, uxtw #4
  4201f8:	ldr	w13, [x16]
  4201fc:	cbnz	w13, 4201e4 <feof@plt+0x1d104>
  420200:	b	420168 <feof@plt+0x1d088>
  420204:	ldrb	w8, [x20, #44]
  420208:	cbz	w8, 420224 <feof@plt+0x1d144>
  42020c:	mov	x0, x19
  420210:	ldp	x20, x19, [sp, #48]
  420214:	ldp	x22, x21, [sp, #32]
  420218:	ldp	x24, x23, [sp, #16]
  42021c:	ldp	x29, x30, [sp], #64
  420220:	b	40eff8 <feof@plt+0xbf18>
  420224:	mov	x0, x19
  420228:	ldp	x20, x19, [sp, #48]
  42022c:	ldp	x22, x21, [sp, #32]
  420230:	ldp	x24, x23, [sp, #16]
  420234:	ldp	x29, x30, [sp], #64
  420238:	b	402b20 <free@plt>
  42023c:	mov	x22, x24
  420240:	ldrb	w8, [x20, #44]
  420244:	cbnz	w8, 4200e0 <feof@plt+0x1d000>
  420248:	mov	w1, #0x10                  	// #16
  42024c:	mov	x0, x22
  420250:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  420254:	cbnz	x0, 4200fc <feof@plt+0x1d01c>
  420258:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1838>
  42025c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1838>
  420260:	add	x0, x0, #0x6f1
  420264:	add	x2, x2, #0x708
  420268:	mov	w1, #0x2b5                 	// #693
  42026c:	bl	40f560 <feof@plt+0xc480>
  420270:	str	xzr, [x0]
  420274:	ret
  420278:	stp	x29, x30, [sp, #-32]!
  42027c:	stp	x20, x19, [sp, #16]
  420280:	mov	x29, sp
  420284:	mov	x19, x0
  420288:	ldr	x0, [x0]
  42028c:	cbz	x0, 4202a4 <feof@plt+0x1d1c4>
  420290:	ldr	x20, [x0]
  420294:	bl	402b20 <free@plt>
  420298:	mov	x0, x20
  42029c:	str	x20, [x19]
  4202a0:	cbnz	x20, 420290 <feof@plt+0x1d1b0>
  4202a4:	ldp	x20, x19, [sp, #16]
  4202a8:	ldp	x29, x30, [sp], #32
  4202ac:	ret
  4202b0:	cmp	x0, #0x10, lsl #12
  4202b4:	b.ne	4202d0 <feof@plt+0x1d1f0>  // b.any
  4202b8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4202bc:	ldr	x0, [x8, #2432]
  4202c0:	cbz	x0, 4202d4 <feof@plt+0x1d1f4>
  4202c4:	ldr	x9, [x0]
  4202c8:	str	x9, [x8, #2432]
  4202cc:	ret
  4202d0:	b	4621c8 <_obstack_memory_used@@Base+0xa00>
  4202d4:	mov	w0, #0x10000               	// #65536
  4202d8:	b	4621c8 <_obstack_memory_used@@Base+0xa00>
  4202dc:	ldr	x8, [x0]
  4202e0:	sub	x8, x8, x0
  4202e4:	cmp	x8, #0x10, lsl #12
  4202e8:	b.ne	420300 <feof@plt+0x1d220>  // b.any
  4202ec:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4202f0:	ldr	x9, [x8, #2432]
  4202f4:	str	x9, [x0]
  4202f8:	str	x0, [x8, #2432]
  4202fc:	ret
  420300:	b	402b20 <free@plt>
  420304:	cmp	x1, #0x2
  420308:	b.cc	4203ac <feof@plt+0x1d2cc>  // b.lo, b.ul, b.last
  42030c:	sub	sp, sp, #0x160
  420310:	stp	x29, x30, [sp, #304]
  420314:	stp	x28, x21, [sp, #320]
  420318:	stp	x20, x19, [sp, #336]
  42031c:	add	x29, sp, #0x130
  420320:	eor	x10, x2, x2, asr #63
  420324:	lsr	x11, x1, #1
  420328:	mov	x20, x0
  42032c:	cmp	x2, #0x0
  420330:	mov	w8, #0x5                   	// #5
  420334:	mov	w9, #0x3                   	// #3
  420338:	stp	x3, x0, [x29, #-40]
  42033c:	mul	x0, x10, x11
  420340:	mov	x19, x1
  420344:	csel	x8, x9, x8, lt  // lt = tstop
  420348:	cmp	x0, #0x100
  42034c:	stp	x1, x10, [x29, #-24]
  420350:	stur	x8, [x29, #-8]
  420354:	b.hi	420374 <feof@plt+0x1d294>  // b.pmore
  420358:	sub	x1, x29, #0x28
  42035c:	add	x4, sp, #0x8
  420360:	mov	x0, x20
  420364:	mov	x2, x19
  420368:	mov	x3, x20
  42036c:	bl	4203b0 <feof@plt+0x1d2d0>
  420370:	b	42039c <feof@plt+0x1d2bc>
  420374:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  420378:	mov	x21, x0
  42037c:	sub	x1, x29, #0x28
  420380:	mov	x0, x20
  420384:	mov	x2, x19
  420388:	mov	x3, x20
  42038c:	mov	x4, x21
  420390:	bl	4203b0 <feof@plt+0x1d2d0>
  420394:	mov	x0, x21
  420398:	bl	402b20 <free@plt>
  42039c:	ldp	x20, x19, [sp, #336]
  4203a0:	ldp	x28, x21, [sp, #320]
  4203a4:	ldp	x29, x30, [sp, #304]
  4203a8:	add	sp, sp, #0x160
  4203ac:	ret
  4203b0:	stp	x29, x30, [sp, #-96]!
  4203b4:	str	x27, [sp, #16]
  4203b8:	stp	x26, x25, [sp, #32]
  4203bc:	stp	x24, x23, [sp, #48]
  4203c0:	stp	x22, x21, [sp, #64]
  4203c4:	stp	x20, x19, [sp, #80]
  4203c8:	mov	x29, sp
  4203cc:	ldr	x8, [x1, #32]
  4203d0:	mov	x20, x3
  4203d4:	mov	x19, x1
  4203d8:	mov	x23, x2
  4203dc:	cmp	x8, x2
  4203e0:	mov	x24, x0
  4203e4:	b.cc	4205b8 <feof@plt+0x1d4d8>  // b.lo, b.ul, b.last
  4203e8:	ldr	x8, [x19, #24]
  4203ec:	ldr	x2, [x19]
  4203f0:	mov	x1, x24
  4203f4:	stp	x20, x23, [x19, #8]
  4203f8:	add	x21, x24, x8
  4203fc:	mov	x0, x21
  420400:	add	x23, x21, x8
  420404:	bl	420a08 <feof@plt+0x1d928>
  420408:	ldr	x9, [x19, #16]
  42040c:	eor	x20, x0, x24
  420410:	eor	x21, x0, x21
  420414:	cmp	x9, #0x3
  420418:	b.ne	420450 <feof@plt+0x1d370>  // b.any
  42041c:	ldr	x2, [x19]
  420420:	mov	x0, x23
  420424:	mov	x1, x21
  420428:	bl	420a08 <feof@plt+0x1d928>
  42042c:	ldr	x2, [x19]
  420430:	eor	x21, x0, x21
  420434:	eor	x23, x0, x23
  420438:	mov	x0, x21
  42043c:	mov	x1, x20
  420440:	bl	420a08 <feof@plt+0x1d928>
  420444:	ldr	x9, [x19, #16]
  420448:	eor	x20, x0, x20
  42044c:	eor	x21, x0, x21
  420450:	ldr	x8, [x19, #24]
  420454:	cmp	x9, #0x3
  420458:	b.hi	420488 <feof@plt+0x1d3a8>  // b.pmore
  42045c:	cmp	x8, #0x8
  420460:	b.ne	4206a0 <feof@plt+0x1d5c0>  // b.any
  420464:	ldr	x8, [x20]
  420468:	ldr	x10, [x21]
  42046c:	ldr	x11, [x19, #8]
  420470:	cmp	x9, #0x3
  420474:	b.ne	420480 <feof@plt+0x1d3a0>  // b.any
  420478:	ldr	x9, [x23]
  42047c:	str	x9, [x11, #16]
  420480:	stp	x8, x10, [x11]
  420484:	b	42059c <feof@plt+0x1d4bc>
  420488:	add	x25, x23, x8
  42048c:	cmp	x9, #0x5
  420490:	add	x22, x25, x8
  420494:	b.ne	4204c8 <feof@plt+0x1d3e8>  // b.any
  420498:	ldr	x2, [x19]
  42049c:	mov	x0, x22
  4204a0:	mov	x1, x25
  4204a4:	bl	420a08 <feof@plt+0x1d928>
  4204a8:	ldr	x2, [x19]
  4204ac:	eor	x22, x0, x22
  4204b0:	eor	x25, x0, x25
  4204b4:	mov	x0, x22
  4204b8:	mov	x1, x23
  4204bc:	bl	420a08 <feof@plt+0x1d928>
  4204c0:	eor	x23, x0, x23
  4204c4:	eor	x22, x0, x22
  4204c8:	ldr	x2, [x19]
  4204cc:	mov	x0, x25
  4204d0:	mov	x1, x23
  4204d4:	bl	420a08 <feof@plt+0x1d928>
  4204d8:	ldr	x8, [x19, #16]
  4204dc:	eor	x24, x0, x23
  4204e0:	eor	x23, x0, x25
  4204e4:	cmp	x8, #0x5
  4204e8:	b.ne	42051c <feof@plt+0x1d43c>  // b.any
  4204ec:	ldr	x2, [x19]
  4204f0:	mov	x0, x23
  4204f4:	mov	x1, x20
  4204f8:	bl	420a08 <feof@plt+0x1d928>
  4204fc:	ldr	x2, [x19]
  420500:	eor	x20, x0, x20
  420504:	eor	x23, x0, x23
  420508:	mov	x0, x22
  42050c:	mov	x1, x21
  420510:	bl	420a08 <feof@plt+0x1d928>
  420514:	eor	x21, x0, x21
  420518:	eor	x22, x0, x22
  42051c:	ldr	x2, [x19]
  420520:	mov	x0, x24
  420524:	mov	x1, x20
  420528:	bl	420a08 <feof@plt+0x1d928>
  42052c:	ldr	x2, [x19]
  420530:	eor	x25, x0, x20
  420534:	eor	x20, x0, x24
  420538:	mov	x0, x23
  42053c:	mov	x1, x21
  420540:	bl	420a08 <feof@plt+0x1d928>
  420544:	ldr	x2, [x19]
  420548:	eor	x21, x0, x21
  42054c:	eor	x23, x0, x23
  420550:	mov	x0, x20
  420554:	mov	x1, x21
  420558:	bl	420a08 <feof@plt+0x1d928>
  42055c:	ldr	x10, [x19, #24]
  420560:	eor	x9, x0, x21
  420564:	eor	x8, x0, x20
  420568:	cmp	x10, #0x8
  42056c:	b.ne	4206cc <feof@plt+0x1d5ec>  // b.any
  420570:	ldp	x11, x13, [x19, #8]
  420574:	ldr	x10, [x25]
  420578:	ldr	x9, [x9]
  42057c:	ldr	x12, [x8]
  420580:	ldr	x8, [x23]
  420584:	cmp	x13, #0x5
  420588:	b.ne	420594 <feof@plt+0x1d4b4>  // b.any
  42058c:	ldr	x13, [x22]
  420590:	str	x13, [x11, #32]
  420594:	stp	x10, x9, [x11]
  420598:	stp	x12, x8, [x11, #16]
  42059c:	ldp	x20, x19, [sp, #80]
  4205a0:	ldp	x22, x21, [sp, #64]
  4205a4:	ldp	x24, x23, [sp, #48]
  4205a8:	ldp	x26, x25, [sp, #32]
  4205ac:	ldr	x27, [sp, #16]
  4205b0:	ldp	x29, x30, [sp], #96
  4205b4:	ret
  4205b8:	ldr	x8, [x19, #24]
  4205bc:	lsr	x25, x23, #1
  4205c0:	cmp	x24, x20
  4205c4:	sub	x2, x23, x25
  4205c8:	mul	x27, x8, x25
  4205cc:	add	x26, x24, x27
  4205d0:	add	x22, x20, x27
  4205d4:	mov	x0, x26
  4205d8:	mov	x1, x19
  4205dc:	mov	x3, x22
  4205e0:	csel	x21, x4, x24, eq  // eq = none
  4205e4:	bl	4203b0 <feof@plt+0x1d2d0>
  4205e8:	mov	x0, x24
  4205ec:	mov	x1, x19
  4205f0:	mov	x2, x25
  4205f4:	mov	x3, x21
  4205f8:	mov	x4, x26
  4205fc:	bl	4203b0 <feof@plt+0x1d2d0>
  420600:	ldr	x8, [x19, #24]
  420604:	ldr	x9, [x19]
  420608:	add	x10, x21, x27
  42060c:	mov	x0, x22
  420610:	sub	x1, x10, x8
  420614:	blr	x9
  420618:	tbz	w0, #31, 420678 <feof@plt+0x1d598>
  42061c:	ldr	x8, [x19, #24]
  420620:	cmp	x8, #0x8
  420624:	madd	x23, x8, x23, x20
  420628:	b.ne	420704 <feof@plt+0x1d624>  // b.any
  42062c:	ldr	x8, [x19]
  420630:	mov	x0, x22
  420634:	mov	x1, x21
  420638:	blr	x8
  42063c:	sbfx	x8, x0, #31, #1
  420640:	bic	x9, x21, x8
  420644:	and	x10, x22, x8
  420648:	orr	x9, x10, x9
  42064c:	ldr	x9, [x9]
  420650:	and	x8, x8, #0x8
  420654:	add	x22, x22, x8
  420658:	str	x9, [x20], #8
  42065c:	cmp	x20, x22
  420660:	b.eq	42059c <feof@plt+0x1d4bc>  // b.none
  420664:	eor	x8, x8, #0x8
  420668:	cmp	x22, x23
  42066c:	add	x21, x21, x8
  420670:	b.ne	42062c <feof@plt+0x1d54c>  // b.any
  420674:	mov	x22, x23
  420678:	sub	x2, x22, x20
  42067c:	mov	x0, x20
  420680:	mov	x1, x21
  420684:	ldp	x20, x19, [sp, #80]
  420688:	ldp	x22, x21, [sp, #64]
  42068c:	ldp	x24, x23, [sp, #48]
  420690:	ldp	x26, x25, [sp, #32]
  420694:	ldr	x27, [sp, #16]
  420698:	ldp	x29, x30, [sp], #96
  42069c:	b	4029c0 <memcpy@plt>
  4206a0:	cmp	x8, #0x4
  4206a4:	b.ne	420758 <feof@plt+0x1d678>  // b.any
  4206a8:	ldr	w8, [x20]
  4206ac:	ldr	w10, [x21]
  4206b0:	ldr	x11, [x19, #8]
  4206b4:	cmp	x9, #0x3
  4206b8:	b.ne	4206c4 <feof@plt+0x1d5e4>  // b.any
  4206bc:	ldr	w9, [x23]
  4206c0:	str	w9, [x11, #8]
  4206c4:	stp	w8, w10, [x11]
  4206c8:	b	42059c <feof@plt+0x1d4bc>
  4206cc:	cmp	x10, #0x4
  4206d0:	b.ne	420768 <feof@plt+0x1d688>  // b.any
  4206d4:	ldp	x11, x13, [x19, #8]
  4206d8:	ldr	w10, [x25]
  4206dc:	ldr	w9, [x9]
  4206e0:	ldr	w12, [x8]
  4206e4:	ldr	w8, [x23]
  4206e8:	cmp	x13, #0x5
  4206ec:	b.ne	4206f8 <feof@plt+0x1d618>  // b.any
  4206f0:	ldr	w13, [x22]
  4206f4:	str	w13, [x11, #16]
  4206f8:	stp	w10, w9, [x11]
  4206fc:	stp	w12, w8, [x11, #8]
  420700:	b	42059c <feof@plt+0x1d4bc>
  420704:	cmp	x8, #0x4
  420708:	b.ne	420900 <feof@plt+0x1d820>  // b.any
  42070c:	ldr	x8, [x19]
  420710:	mov	x0, x22
  420714:	mov	x1, x21
  420718:	blr	x8
  42071c:	sbfx	x8, x0, #31, #1
  420720:	bic	x9, x21, x8
  420724:	and	x10, x22, x8
  420728:	orr	x9, x10, x9
  42072c:	ldr	w9, [x9]
  420730:	and	x8, x8, #0x4
  420734:	add	x22, x22, x8
  420738:	str	w9, [x20], #4
  42073c:	cmp	x20, x22
  420740:	b.eq	42059c <feof@plt+0x1d4bc>  // b.none
  420744:	eor	x8, x8, #0x4
  420748:	cmp	x22, x23
  42074c:	add	x21, x21, x8
  420750:	b.ne	42070c <feof@plt+0x1d62c>  // b.any
  420754:	b	420674 <feof@plt+0x1d594>
  420758:	cmp	x8, #0x8
  42075c:	b.cs	420778 <feof@plt+0x1d698>  // b.hs, b.nlast
  420760:	mov	x9, xzr
  420764:	b	4208f4 <feof@plt+0x1d814>
  420768:	cmp	x10, #0x8
  42076c:	b.cs	4207c8 <feof@plt+0x1d6e8>  // b.hs, b.nlast
  420770:	mov	x11, xzr
  420774:	b	4208a8 <feof@plt+0x1d7c8>
  420778:	mov	x10, xzr
  42077c:	ldr	x13, [x20, x10]
  420780:	ldr	x11, [x21, x10]
  420784:	ldr	x12, [x19, #8]
  420788:	cmp	x9, #0x3
  42078c:	b.ne	42079c <feof@plt+0x1d6bc>  // b.any
  420790:	ldr	x9, [x23, x10]
  420794:	add	x8, x12, x8, lsl #1
  420798:	str	x9, [x8, x10]
  42079c:	str	x13, [x12, x10]
  4207a0:	ldr	x8, [x19, #24]
  4207a4:	add	x9, x10, #0x10
  4207a8:	add	x8, x12, x8
  4207ac:	str	x11, [x8, x10]
  4207b0:	ldr	x8, [x19, #24]
  4207b4:	cmp	x9, x8
  4207b8:	b.hi	4208b4 <feof@plt+0x1d7d4>  // b.pmore
  4207bc:	ldr	x9, [x19, #16]
  4207c0:	add	x10, x10, #0x8
  4207c4:	b	42077c <feof@plt+0x1d69c>
  4207c8:	mov	x12, xzr
  4207cc:	ldp	x11, x17, [x19, #8]
  4207d0:	ldr	x16, [x25, x12]
  4207d4:	ldr	x14, [x9, x12]
  4207d8:	ldr	x15, [x8, x12]
  4207dc:	ldr	x13, [x23, x12]
  4207e0:	cmp	x17, #0x5
  4207e4:	b.ne	4207f4 <feof@plt+0x1d714>  // b.any
  4207e8:	ldr	x17, [x22, x12]
  4207ec:	add	x10, x11, x10, lsl #2
  4207f0:	str	x17, [x10, x12]
  4207f4:	str	x16, [x11, x12]
  4207f8:	ldr	x10, [x19, #24]
  4207fc:	add	x16, x11, x10
  420800:	str	x14, [x16, x12]
  420804:	ldr	x14, [x19, #24]
  420808:	add	x16, x14, x10
  42080c:	add	x16, x11, x16
  420810:	str	x15, [x16, x12]
  420814:	ldr	x15, [x19, #24]
  420818:	add	x14, x15, x14
  42081c:	add	x10, x14, x10
  420820:	add	x10, x11, x10
  420824:	str	x13, [x10, x12]
  420828:	ldr	x10, [x19, #24]
  42082c:	add	x11, x12, #0x8
  420830:	add	x12, x12, #0x10
  420834:	cmp	x12, x10
  420838:	mov	x12, x11
  42083c:	b.ls	4207cc <feof@plt+0x1d6ec>  // b.plast
  420840:	b	4208a8 <feof@plt+0x1d7c8>
  420844:	ldp	x12, x17, [x19, #8]
  420848:	ldrb	w16, [x25, x11]
  42084c:	ldrb	w14, [x9, x11]
  420850:	ldrb	w15, [x8, x11]
  420854:	ldrb	w13, [x23, x11]
  420858:	cmp	x17, #0x5
  42085c:	b.ne	42086c <feof@plt+0x1d78c>  // b.any
  420860:	ldrb	w17, [x22, x11]
  420864:	add	x10, x12, x10, lsl #2
  420868:	strb	w17, [x10, x11]
  42086c:	strb	w16, [x12, x11]
  420870:	ldr	x10, [x19, #24]
  420874:	add	x16, x12, x10
  420878:	strb	w14, [x16, x11]
  42087c:	ldr	x14, [x19, #24]
  420880:	add	x16, x14, x10
  420884:	add	x16, x12, x16
  420888:	strb	w15, [x16, x11]
  42088c:	ldr	x15, [x19, #24]
  420890:	add	x14, x15, x14
  420894:	add	x10, x14, x10
  420898:	add	x10, x12, x10
  42089c:	strb	w13, [x10, x11]
  4208a0:	ldr	x10, [x19, #24]
  4208a4:	add	x11, x11, #0x1
  4208a8:	cmp	x11, x10
  4208ac:	b.cc	420844 <feof@plt+0x1d764>  // b.lo, b.ul, b.last
  4208b0:	b	42059c <feof@plt+0x1d4bc>
  4208b4:	add	x9, x10, #0x8
  4208b8:	b	4208f4 <feof@plt+0x1d814>
  4208bc:	ldp	x10, x13, [x19, #8]
  4208c0:	ldrb	w12, [x20, x9]
  4208c4:	ldrb	w11, [x21, x9]
  4208c8:	cmp	x13, #0x3
  4208cc:	b.ne	4208dc <feof@plt+0x1d7fc>  // b.any
  4208d0:	ldrb	w13, [x23, x9]
  4208d4:	add	x8, x10, x8, lsl #1
  4208d8:	strb	w13, [x8, x9]
  4208dc:	strb	w12, [x10, x9]
  4208e0:	ldr	x8, [x19, #24]
  4208e4:	add	x8, x10, x8
  4208e8:	strb	w11, [x8, x9]
  4208ec:	ldr	x8, [x19, #24]
  4208f0:	add	x9, x9, #0x1
  4208f4:	cmp	x9, x8
  4208f8:	b.cc	4208bc <feof@plt+0x1d7dc>  // b.lo, b.ul, b.last
  4208fc:	b	42059c <feof@plt+0x1d4bc>
  420900:	ldr	x8, [x19]
  420904:	mov	x0, x22
  420908:	mov	x1, x21
  42090c:	blr	x8
  420910:	ldr	x2, [x19, #24]
  420914:	sbfx	x24, x0, #31, #1
  420918:	bic	x8, x21, x24
  42091c:	and	x9, x22, x24
  420920:	orr	x1, x9, x8
  420924:	mov	x0, x20
  420928:	bl	4029c0 <memcpy@plt>
  42092c:	ldr	x8, [x19, #24]
  420930:	and	x9, x8, x24
  420934:	add	x20, x20, x8
  420938:	add	x22, x22, x9
  42093c:	cmp	x22, x20
  420940:	b.eq	42059c <feof@plt+0x1d4bc>  // b.none
  420944:	bic	x8, x8, x24
  420948:	cmp	x22, x23
  42094c:	add	x21, x21, x8
  420950:	b.ne	420900 <feof@plt+0x1d820>  // b.any
  420954:	b	420674 <feof@plt+0x1d594>
  420958:	cmp	x1, #0x2
  42095c:	b.cc	420a04 <feof@plt+0x1d924>  // b.lo, b.ul, b.last
  420960:	sub	sp, sp, #0x160
  420964:	stp	x29, x30, [sp, #304]
  420968:	stp	x28, x21, [sp, #320]
  42096c:	stp	x20, x19, [sp, #336]
  420970:	add	x29, sp, #0x130
  420974:	mvn	x8, x2
  420978:	lsr	x11, x1, #1
  42097c:	eor	x8, x8, x8, asr #63
  420980:	mov	x20, x0
  420984:	cmp	x2, #0x0
  420988:	mov	w9, #0x5                   	// #5
  42098c:	mov	w10, #0x3                   	// #3
  420990:	stp	x3, x0, [x29, #-40]
  420994:	mul	x0, x8, x11
  420998:	mov	x19, x1
  42099c:	csel	x9, x10, x9, ge  // ge = tcont
  4209a0:	cmp	x0, #0x100
  4209a4:	stp	x1, x8, [x29, #-24]
  4209a8:	stur	x9, [x29, #-8]
  4209ac:	b.hi	4209cc <feof@plt+0x1d8ec>  // b.pmore
  4209b0:	sub	x1, x29, #0x28
  4209b4:	add	x4, sp, #0x8
  4209b8:	mov	x0, x20
  4209bc:	mov	x2, x19
  4209c0:	mov	x3, x20
  4209c4:	bl	4203b0 <feof@plt+0x1d2d0>
  4209c8:	b	4209f4 <feof@plt+0x1d914>
  4209cc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4209d0:	mov	x21, x0
  4209d4:	sub	x1, x29, #0x28
  4209d8:	mov	x0, x20
  4209dc:	mov	x2, x19
  4209e0:	mov	x3, x20
  4209e4:	mov	x4, x21
  4209e8:	bl	4203b0 <feof@plt+0x1d2d0>
  4209ec:	mov	x0, x21
  4209f0:	bl	402b20 <free@plt>
  4209f4:	ldp	x20, x19, [sp, #336]
  4209f8:	ldp	x28, x21, [sp, #320]
  4209fc:	ldp	x29, x30, [sp, #304]
  420a00:	add	sp, sp, #0x160
  420a04:	ret
  420a08:	stp	x29, x30, [sp, #-32]!
  420a0c:	str	x19, [sp, #16]
  420a10:	mov	x29, sp
  420a14:	eor	x19, x1, x0
  420a18:	blr	x2
  420a1c:	sbfx	x8, x0, #31, #1
  420a20:	and	x0, x19, x8
  420a24:	ldr	x19, [sp, #16]
  420a28:	ldp	x29, x30, [sp], #32
  420a2c:	ret
  420a30:	sub	sp, sp, #0x70
  420a34:	stp	x29, x30, [sp, #32]
  420a38:	stp	x26, x25, [sp, #48]
  420a3c:	stp	x24, x23, [sp, #64]
  420a40:	stp	x22, x21, [sp, #80]
  420a44:	stp	x20, x19, [sp, #96]
  420a48:	ldr	x10, [x0, #1232]
  420a4c:	ldr	x9, [x0, #1168]
  420a50:	ldr	x8, [x0, #1176]
  420a54:	ldrb	w22, [x0, #1242]
  420a58:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0xb838>
  420a5c:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0xb838>
  420a60:	adrp	x26, 46d000 <_obstack_memory_used@@Base+0xb838>
  420a64:	adrp	x23, 46d000 <_obstack_memory_used@@Base+0xb838>
  420a68:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0xb838>
  420a6c:	mov	x19, x0
  420a70:	add	x20, x20, #0xce2
  420a74:	add	x25, x25, #0xcb2
  420a78:	add	x26, x26, #0xcc1
  420a7c:	cmp	x10, #0x20
  420a80:	add	x23, x23, #0xc94
  420a84:	add	x24, x24, #0xca3
  420a88:	add	x29, sp, #0x20
  420a8c:	b.cc	420a9c <feof@plt+0x1d9bc>  // b.lo, b.ul, b.last
  420a90:	cmp	w22, #0x0
  420a94:	csel	x10, x24, x23, ne  // ne = any
  420a98:	b	420ab8 <feof@plt+0x1d9d8>
  420a9c:	cmp	x10, #0x10
  420aa0:	b.cc	420ab0 <feof@plt+0x1d9d0>  // b.lo, b.ul, b.last
  420aa4:	cmp	w22, #0x0
  420aa8:	csel	x10, x26, x25, ne  // ne = any
  420aac:	b	420ab8 <feof@plt+0x1d9d8>
  420ab0:	adrp	x10, 46d000 <_obstack_memory_used@@Base+0xb838>
  420ab4:	add	x10, x10, #0xce2
  420ab8:	cmp	x9, #0x0
  420abc:	csel	x1, x20, x9, eq  // eq = none
  420ac0:	cmp	x8, #0x0
  420ac4:	csel	x21, x10, x8, eq  // eq = none
  420ac8:	add	x8, sp, #0x8
  420acc:	mov	x0, x19
  420ad0:	mov	x2, x20
  420ad4:	bl	420bd0 <feof@plt+0x1daf0>
  420ad8:	ldr	x8, [sp, #24]
  420adc:	ldur	q0, [sp, #8]
  420ae0:	add	x9, x19, #0x208
  420ae4:	mov	x0, x19
  420ae8:	str	x8, [x9, #16]
  420aec:	str	q0, [x9]
  420af0:	ldr	x8, [x19, #1216]
  420af4:	mov	x1, x20
  420af8:	mov	x2, x20
  420afc:	str	w8, [x9, #16]
  420b00:	add	x8, sp, #0x8
  420b04:	bl	420bd0 <feof@plt+0x1daf0>
  420b08:	ldr	x8, [sp, #24]
  420b0c:	ldur	q0, [sp, #8]
  420b10:	ldr	x9, [x19, #1216]
  420b14:	cmp	w22, #0x0
  420b18:	str	x8, [x19, #560]
  420b1c:	csel	x1, x26, x25, ne  // ne = any
  420b20:	add	x8, sp, #0x8
  420b24:	mov	x0, x19
  420b28:	mov	x2, x20
  420b2c:	str	q0, [x19, #544]
  420b30:	str	w9, [x19, #560]
  420b34:	csel	x22, x24, x23, ne  // ne = any
  420b38:	bl	420bd0 <feof@plt+0x1daf0>
  420b3c:	ldr	x8, [sp, #24]
  420b40:	ldur	q0, [sp, #8]
  420b44:	add	x9, x19, #0x238
  420b48:	mov	w10, #0x10                  	// #16
  420b4c:	str	x8, [x9, #16]
  420b50:	add	x8, sp, #0x8
  420b54:	mov	x0, x19
  420b58:	mov	x1, x22
  420b5c:	mov	x2, x20
  420b60:	str	q0, [x9]
  420b64:	str	w10, [x9, #16]
  420b68:	bl	420bd0 <feof@plt+0x1daf0>
  420b6c:	ldr	x8, [sp, #24]
  420b70:	ldur	q0, [sp, #8]
  420b74:	mov	w9, #0x20                  	// #32
  420b78:	mov	x0, x19
  420b7c:	str	x8, [x19, #608]
  420b80:	add	x8, sp, #0x8
  420b84:	mov	x1, x21
  420b88:	mov	x2, x20
  420b8c:	str	q0, [x19, #592]
  420b90:	str	w9, [x19, #608]
  420b94:	bl	420bd0 <feof@plt+0x1daf0>
  420b98:	ldr	x8, [sp, #24]
  420b9c:	ldur	q0, [sp, #8]
  420ba0:	add	x9, x19, #0x268
  420ba4:	str	x8, [x9, #16]
  420ba8:	str	q0, [x9]
  420bac:	ldr	x8, [x19, #1232]
  420bb0:	str	w8, [x9, #16]
  420bb4:	ldp	x20, x19, [sp, #96]
  420bb8:	ldp	x22, x21, [sp, #80]
  420bbc:	ldp	x24, x23, [sp, #64]
  420bc0:	ldp	x26, x25, [sp, #48]
  420bc4:	ldp	x29, x30, [sp, #32]
  420bc8:	add	sp, sp, #0x70
  420bcc:	ret
  420bd0:	stp	x29, x30, [sp, #-64]!
  420bd4:	stp	x22, x21, [sp, #32]
  420bd8:	stp	x20, x19, [sp, #48]
  420bdc:	mov	x21, x1
  420be0:	mov	x20, x0
  420be4:	mov	x0, x1
  420be8:	mov	x1, x2
  420bec:	str	x23, [sp, #16]
  420bf0:	mov	x29, sp
  420bf4:	mov	x22, x2
  420bf8:	mov	x19, x8
  420bfc:	bl	402f50 <strcasecmp@plt>
  420c00:	cbz	w0, 420d4c <feof@plt+0x1dc6c>
  420c04:	mov	x0, x21
  420c08:	bl	402a50 <strlen@plt>
  420c0c:	mov	x23, x0
  420c10:	mov	x0, x22
  420c14:	bl	402a50 <strlen@plt>
  420c18:	add	x8, x23, x0
  420c1c:	add	x8, x8, #0x11
  420c20:	and	x8, x8, #0xfffffffffffffff0
  420c24:	mov	x9, sp
  420c28:	sub	x23, x9, x8
  420c2c:	mov	sp, x23
  420c30:	mov	x0, x23
  420c34:	mov	x1, x22
  420c38:	bl	402c00 <strcpy@plt>
  420c3c:	bl	402a50 <strlen@plt>
  420c40:	mov	w8, #0x2f                  	// #47
  420c44:	strh	w8, [x23, x0]
  420c48:	mov	x0, x23
  420c4c:	mov	x1, x21
  420c50:	bl	4030a0 <strcat@plt>
  420c54:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420c58:	add	x1, x1, #0xc8e
  420c5c:	bl	402f50 <strcasecmp@plt>
  420c60:	cbz	w0, 420d68 <feof@plt+0x1dc88>
  420c64:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420c68:	add	x1, x1, #0xc9d
  420c6c:	mov	x0, x23
  420c70:	bl	402f50 <strcasecmp@plt>
  420c74:	cbz	w0, 420d70 <feof@plt+0x1dc90>
  420c78:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420c7c:	add	x1, x1, #0xcac
  420c80:	mov	x0, x23
  420c84:	bl	402f50 <strcasecmp@plt>
  420c88:	cbz	w0, 420d78 <feof@plt+0x1dc98>
  420c8c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420c90:	add	x1, x1, #0xcbb
  420c94:	mov	x0, x23
  420c98:	bl	402f50 <strcasecmp@plt>
  420c9c:	cbz	w0, 420d80 <feof@plt+0x1dca0>
  420ca0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420ca4:	add	x1, x1, #0xcca
  420ca8:	mov	x0, x23
  420cac:	bl	402f50 <strcasecmp@plt>
  420cb0:	cbz	w0, 420d88 <feof@plt+0x1dca8>
  420cb4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420cb8:	add	x1, x1, #0xcd9
  420cbc:	mov	x0, x23
  420cc0:	bl	402f50 <strcasecmp@plt>
  420cc4:	cbz	w0, 420d90 <feof@plt+0x1dcb0>
  420cc8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420ccc:	add	x1, x1, #0xce8
  420cd0:	mov	x0, x23
  420cd4:	bl	402f50 <strcasecmp@plt>
  420cd8:	cbz	w0, 420d98 <feof@plt+0x1dcb8>
  420cdc:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  420ce0:	add	x1, x1, #0xcf7
  420ce4:	mov	x0, x23
  420ce8:	bl	402f50 <strcasecmp@plt>
  420cec:	cbz	w0, 420da0 <feof@plt+0x1dcc0>
  420cf0:	adrp	x8, 420000 <feof@plt+0x1cf20>
  420cf4:	add	x8, x8, #0xe90
  420cf8:	mov	x0, x21
  420cfc:	mov	x1, x22
  420d00:	str	x8, [x19]
  420d04:	bl	402b10 <iconv_open@plt>
  420d08:	mov	w8, #0xffffffff            	// #-1
  420d0c:	cmn	x0, #0x1
  420d10:	str	x0, [x19, #8]
  420d14:	str	w8, [x19, #16]
  420d18:	b.ne	420dc4 <feof@plt+0x1dce4>  // b.any
  420d1c:	bl	402e70 <__errno_location@plt>
  420d20:	ldr	w8, [x0]
  420d24:	cmp	w8, #0x16
  420d28:	b.ne	420ddc <feof@plt+0x1dcfc>  // b.any
  420d2c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  420d30:	add	x2, x2, #0xc53
  420d34:	mov	w1, #0x3                   	// #3
  420d38:	mov	x0, x20
  420d3c:	mov	x3, x22
  420d40:	mov	x4, x21
  420d44:	bl	4288a0 <feof@plt+0x257c0>
  420d48:	b	420df0 <feof@plt+0x1dd10>
  420d4c:	adrp	x8, 422000 <feof@plt+0x1ef20>
  420d50:	add	x8, x8, #0x5ac
  420d54:	mov	x9, #0xffffffffffffffff    	// #-1
  420d58:	mov	w10, #0xffffffff            	// #-1
  420d5c:	stp	x8, x9, [x19]
  420d60:	str	w10, [x19, #16]
  420d64:	b	420dc4 <feof@plt+0x1dce4>
  420d68:	mov	x8, xzr
  420d6c:	b	420da4 <feof@plt+0x1dcc4>
  420d70:	mov	w8, #0x1                   	// #1
  420d74:	b	420da4 <feof@plt+0x1dcc4>
  420d78:	mov	w8, #0x2                   	// #2
  420d7c:	b	420da4 <feof@plt+0x1dcc4>
  420d80:	mov	w8, #0x3                   	// #3
  420d84:	b	420da4 <feof@plt+0x1dcc4>
  420d88:	mov	w8, #0x4                   	// #4
  420d8c:	b	420da4 <feof@plt+0x1dcc4>
  420d90:	mov	w8, #0x5                   	// #5
  420d94:	b	420da4 <feof@plt+0x1dcc4>
  420d98:	mov	w8, #0x6                   	// #6
  420d9c:	b	420da4 <feof@plt+0x1dcc4>
  420da0:	mov	w8, #0x7                   	// #7
  420da4:	adrp	x10, 469000 <_obstack_memory_used@@Base+0x7838>
  420da8:	mov	w9, #0x18                  	// #24
  420dac:	add	x10, x10, #0xe88
  420db0:	madd	x8, x8, x9, x10
  420db4:	ldur	q0, [x8, #8]
  420db8:	mov	w8, #0xffffffff            	// #-1
  420dbc:	str	w8, [x19, #16]
  420dc0:	str	q0, [x19]
  420dc4:	mov	sp, x29
  420dc8:	ldp	x20, x19, [sp, #48]
  420dcc:	ldp	x22, x21, [sp, #32]
  420dd0:	ldr	x23, [sp, #16]
  420dd4:	ldp	x29, x30, [sp], #64
  420dd8:	ret
  420ddc:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  420de0:	add	x2, x2, #0xc83
  420de4:	mov	w1, #0x3                   	// #3
  420de8:	mov	x0, x20
  420dec:	bl	4292f8 <feof@plt+0x26218>
  420df0:	adrp	x8, 422000 <feof@plt+0x1ef20>
  420df4:	add	x8, x8, #0x5ac
  420df8:	str	x8, [x19]
  420dfc:	b	420dc4 <feof@plt+0x1dce4>
  420e00:	stp	x29, x30, [sp, #-32]!
  420e04:	stp	x20, x19, [sp, #16]
  420e08:	ldr	x8, [x0, #520]
  420e0c:	adrp	x20, 420000 <feof@plt+0x1cf20>
  420e10:	add	x20, x20, #0xe90
  420e14:	mov	x19, x0
  420e18:	cmp	x8, x20
  420e1c:	mov	x29, sp
  420e20:	b.ne	420e2c <feof@plt+0x1dd4c>  // b.any
  420e24:	ldr	x0, [x19, #528]
  420e28:	bl	4029b0 <iconv_close@plt>
  420e2c:	ldr	x8, [x19, #544]
  420e30:	cmp	x8, x20
  420e34:	b.ne	420e40 <feof@plt+0x1dd60>  // b.any
  420e38:	ldr	x0, [x19, #552]
  420e3c:	bl	4029b0 <iconv_close@plt>
  420e40:	ldr	x8, [x19, #568]
  420e44:	cmp	x8, x20
  420e48:	b.ne	420e54 <feof@plt+0x1dd74>  // b.any
  420e4c:	ldr	x0, [x19, #576]
  420e50:	bl	4029b0 <iconv_close@plt>
  420e54:	ldr	x8, [x19, #592]
  420e58:	cmp	x8, x20
  420e5c:	b.ne	420e68 <feof@plt+0x1dd88>  // b.any
  420e60:	ldr	x0, [x19, #600]
  420e64:	bl	4029b0 <iconv_close@plt>
  420e68:	ldr	x8, [x19, #616]
  420e6c:	cmp	x8, x20
  420e70:	b.eq	420e80 <feof@plt+0x1dda0>  // b.none
  420e74:	ldp	x20, x19, [sp, #16]
  420e78:	ldp	x29, x30, [sp], #32
  420e7c:	ret
  420e80:	ldr	x0, [x19, #624]
  420e84:	ldp	x20, x19, [sp, #16]
  420e88:	ldp	x29, x30, [sp], #32
  420e8c:	b	4029b0 <iconv_close@plt>
  420e90:	sub	sp, sp, #0x50
  420e94:	stp	x22, x21, [sp, #48]
  420e98:	stp	x20, x19, [sp, #64]
  420e9c:	mov	x19, x3
  420ea0:	mov	x21, x2
  420ea4:	mov	x22, x1
  420ea8:	mov	x1, xzr
  420eac:	mov	x2, xzr
  420eb0:	mov	x3, xzr
  420eb4:	mov	x4, xzr
  420eb8:	stp	x29, x30, [sp, #32]
  420ebc:	add	x29, sp, #0x20
  420ec0:	mov	x20, x0
  420ec4:	bl	402da0 <iconv@plt>
  420ec8:	cmn	x0, #0x1
  420ecc:	b.eq	420fac <feof@plt+0x1decc>  // b.none
  420ed0:	stur	x22, [x29, #-8]
  420ed4:	ldr	x8, [x19]
  420ed8:	ldr	x9, [x19, #16]
  420edc:	sub	x1, x29, #0x8
  420ee0:	add	x2, sp, #0x8
  420ee4:	add	x3, sp, #0x10
  420ee8:	add	x8, x8, x9
  420eec:	stp	x21, x8, [sp, #8]
  420ef0:	ldr	x8, [x19, #8]
  420ef4:	mov	x4, sp
  420ef8:	mov	x0, x20
  420efc:	sub	x8, x8, x9
  420f00:	str	x8, [sp]
  420f04:	bl	402da0 <iconv@plt>
  420f08:	ldr	x8, [sp, #8]
  420f0c:	cbnz	x8, 420fc4 <feof@plt+0x1dee4>
  420f10:	add	x3, sp, #0x10
  420f14:	mov	x4, sp
  420f18:	mov	x0, x20
  420f1c:	mov	x1, xzr
  420f20:	mov	x2, xzr
  420f24:	bl	402da0 <iconv@plt>
  420f28:	cmn	x0, #0x1
  420f2c:	b.eq	420f48 <feof@plt+0x1de68>  // b.none
  420f30:	ldr	x8, [x19, #8]
  420f34:	ldr	x9, [sp]
  420f38:	mov	w0, #0x1                   	// #1
  420f3c:	sub	x8, x8, x9
  420f40:	str	x8, [x19, #16]
  420f44:	b	420fb0 <feof@plt+0x1ded0>
  420f48:	bl	402e70 <__errno_location@plt>
  420f4c:	ldr	w8, [x0]
  420f50:	cmp	w8, #0x7
  420f54:	b.ne	420fac <feof@plt+0x1decc>  // b.any
  420f58:	ldr	x8, [sp]
  420f5c:	add	x8, x8, #0x100
  420f60:	str	x8, [sp]
  420f64:	ldp	x0, x8, [x19]
  420f68:	add	x1, x8, #0x100
  420f6c:	str	x1, [x19, #8]
  420f70:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  420f74:	str	x0, [x19]
  420f78:	ldr	x8, [x19, #8]
  420f7c:	ldr	x9, [sp]
  420f80:	add	x3, sp, #0x10
  420f84:	mov	x4, sp
  420f88:	add	x8, x0, x8
  420f8c:	sub	x8, x8, x9
  420f90:	mov	x0, x20
  420f94:	mov	x1, xzr
  420f98:	mov	x2, xzr
  420f9c:	str	x8, [sp, #16]
  420fa0:	bl	402da0 <iconv@plt>
  420fa4:	cmn	x0, #0x1
  420fa8:	b.ne	420f30 <feof@plt+0x1de50>  // b.any
  420fac:	mov	w0, wzr
  420fb0:	ldp	x20, x19, [sp, #64]
  420fb4:	ldp	x22, x21, [sp, #48]
  420fb8:	ldp	x29, x30, [sp, #32]
  420fbc:	add	sp, sp, #0x50
  420fc0:	ret
  420fc4:	bl	402e70 <__errno_location@plt>
  420fc8:	mov	x21, x0
  420fcc:	ldr	w8, [x21]
  420fd0:	cmp	w8, #0x7
  420fd4:	b.ne	420fac <feof@plt+0x1decc>  // b.any
  420fd8:	ldr	x8, [sp]
  420fdc:	add	x8, x8, #0x100
  420fe0:	str	x8, [sp]
  420fe4:	ldp	x0, x8, [x19]
  420fe8:	add	x1, x8, #0x100
  420fec:	str	x1, [x19, #8]
  420ff0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  420ff4:	str	x0, [x19]
  420ff8:	ldr	x8, [x19, #8]
  420ffc:	ldr	x9, [sp]
  421000:	sub	x1, x29, #0x8
  421004:	add	x2, sp, #0x8
  421008:	add	x8, x0, x8
  42100c:	sub	x8, x8, x9
  421010:	add	x3, sp, #0x10
  421014:	mov	x4, sp
  421018:	mov	x0, x20
  42101c:	str	x8, [sp, #16]
  421020:	bl	402da0 <iconv@plt>
  421024:	ldr	x8, [sp, #8]
  421028:	cbz	x8, 420f10 <feof@plt+0x1de30>
  42102c:	b	420fcc <feof@plt+0x1deec>
  421030:	sub	sp, sp, #0x40
  421034:	stp	x20, x19, [sp, #48]
  421038:	mov	w20, w1
  42103c:	cmp	w1, #0x7f
  421040:	mov	x19, x0
  421044:	stp	x29, x30, [sp, #32]
  421048:	add	x29, sp, #0x20
  42104c:	b.cc	421060 <feof@plt+0x1df80>  // b.lo, b.ul, b.last
  421050:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421054:	mov	w3, w20
  421058:	add	x2, x2, #0x93c
  42105c:	b	4210d8 <feof@plt+0x1dff8>
  421060:	mov	w8, #0x1                   	// #1
  421064:	mov	w0, #0x1                   	// #1
  421068:	sturb	w20, [x29, #-4]
  42106c:	str	x8, [sp, #8]
  421070:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  421074:	str	x0, [sp]
  421078:	str	xzr, [sp, #16]
  42107c:	ldr	x8, [x19, #520]
  421080:	ldr	x0, [x19, #528]
  421084:	sub	x1, x29, #0x4
  421088:	mov	x3, sp
  42108c:	mov	w2, #0x1                   	// #1
  421090:	blr	x8
  421094:	tbz	w0, #0, 4210b4 <feof@plt+0x1dfd4>
  421098:	ldr	x8, [sp, #16]
  42109c:	cmp	x8, #0x1
  4210a0:	b.ne	4210cc <feof@plt+0x1dfec>  // b.any
  4210a4:	ldr	x0, [sp]
  4210a8:	ldrb	w19, [x0]
  4210ac:	bl	402b20 <free@plt>
  4210b0:	b	4210e8 <feof@plt+0x1e008>
  4210b4:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4210b8:	add	x2, x2, #0x976
  4210bc:	mov	w1, #0x4                   	// #4
  4210c0:	mov	x0, x19
  4210c4:	bl	4292f8 <feof@plt+0x26218>
  4210c8:	b	4210e4 <feof@plt+0x1e004>
  4210cc:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4210d0:	mov	w3, w20
  4210d4:	add	x2, x2, #0x99c
  4210d8:	mov	w1, #0x4                   	// #4
  4210dc:	mov	x0, x19
  4210e0:	bl	4288a0 <feof@plt+0x257c0>
  4210e4:	mov	w19, wzr
  4210e8:	mov	w0, w19
  4210ec:	ldp	x20, x19, [sp, #48]
  4210f0:	ldp	x29, x30, [sp, #32]
  4210f4:	add	sp, sp, #0x40
  4210f8:	ret
  4210fc:	stp	x29, x30, [sp, #-32]!
  421100:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x3838>
  421104:	ldr	d0, [x8, #1768]
  421108:	str	x19, [sp, #16]
  42110c:	mov	x19, x0
  421110:	str	xzr, [x0]
  421114:	str	d0, [x0, #8]
  421118:	mov	w0, #0x40                  	// #64
  42111c:	mov	x29, sp
  421120:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  421124:	str	x0, [x19]
  421128:	ldr	x19, [sp, #16]
  42112c:	ldp	x29, x30, [sp], #32
  421130:	ret
  421134:	ldr	x0, [x0]
  421138:	b	402b20 <free@plt>
  42113c:	stp	x29, x30, [sp, #-32]!
  421140:	stp	x20, x19, [sp, #16]
  421144:	ldp	w8, w9, [x0, #8]
  421148:	mov	x19, x0
  42114c:	sxtw	x9, w9
  421150:	mov	x20, x1
  421154:	cmp	w8, w9
  421158:	mov	x29, sp
  42115c:	b.ge	421168 <feof@plt+0x1e088>  // b.tcont
  421160:	ldr	x0, [x19]
  421164:	b	421184 <feof@plt+0x1e0a4>
  421168:	ldr	x0, [x19]
  42116c:	lsl	w8, w9, #1
  421170:	lsl	x1, x9, #4
  421174:	str	w8, [x19, #12]
  421178:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42117c:	ldr	w8, [x19, #8]
  421180:	str	x0, [x19]
  421184:	add	w9, w8, #0x1
  421188:	str	w9, [x19, #8]
  42118c:	str	x20, [x0, w8, sxtw #3]
  421190:	ldp	x20, x19, [sp, #16]
  421194:	ldp	x29, x30, [sp], #32
  421198:	ret
  42119c:	stp	x29, x30, [sp, #-64]!
  4211a0:	cmp	w1, #0x1
  4211a4:	str	x23, [sp, #16]
  4211a8:	stp	x22, x21, [sp, #32]
  4211ac:	stp	x20, x19, [sp, #48]
  4211b0:	mov	x29, sp
  4211b4:	b.lt	421230 <feof@plt+0x1e150>  // b.tstop
  4211b8:	mov	x19, x2
  4211bc:	mov	w20, w1
  4211c0:	mov	x21, x0
  4211c4:	mov	w22, #0x60000000            	// #1610612736
  4211c8:	b	4211fc <feof@plt+0x1e11c>
  4211cc:	ldr	x0, [x21]
  4211d0:	lsl	w8, w9, #1
  4211d4:	lsl	x1, x9, #4
  4211d8:	str	w8, [x21, #12]
  4211dc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4211e0:	ldr	w8, [x21, #8]
  4211e4:	str	x0, [x21]
  4211e8:	add	w9, w8, #0x1
  4211ec:	subs	w20, w20, #0x1
  4211f0:	str	w9, [x21, #8]
  4211f4:	str	x23, [x0, w8, sxtw #3]
  4211f8:	b.eq	421230 <feof@plt+0x1e150>  // b.none
  4211fc:	ldr	w23, [x19]
  421200:	cmp	w23, w22
  421204:	b.hi	421214 <feof@plt+0x1e134>  // b.pmore
  421208:	ldr	w8, [x19, #4]
  42120c:	add	w8, w8, w23
  421210:	str	w8, [x19]
  421214:	ldp	w8, w9, [x21, #8]
  421218:	bfi	x23, x23, #32, #32
  42121c:	sxtw	x9, w9
  421220:	cmp	w8, w9
  421224:	b.ge	4211cc <feof@plt+0x1e0ec>  // b.tcont
  421228:	ldr	x0, [x21]
  42122c:	b	4211e8 <feof@plt+0x1e108>
  421230:	ldp	x20, x19, [sp, #48]
  421234:	ldp	x22, x21, [sp, #32]
  421238:	ldr	x23, [sp, #16]
  42123c:	ldp	x29, x30, [sp], #64
  421240:	ret
  421244:	mov	x8, x0
  421248:	ldr	w0, [x0]
  42124c:	mov	w9, #0x60000000            	// #1610612736
  421250:	cmp	w0, w9
  421254:	b.hi	421264 <feof@plt+0x1e184>  // b.pmore
  421258:	ldr	w9, [x8, #4]
  42125c:	add	w9, w9, w0
  421260:	str	w9, [x8]
  421264:	bfi	x0, x0, #32, #32
  421268:	ret
  42126c:	sub	sp, sp, #0x70
  421270:	stp	x29, x30, [sp, #16]
  421274:	stp	x28, x27, [sp, #32]
  421278:	stp	x26, x25, [sp, #48]
  42127c:	stp	x24, x23, [sp, #64]
  421280:	stp	x22, x21, [sp, #80]
  421284:	stp	x20, x19, [sp, #96]
  421288:	ldrb	w8, [x0, #1120]
  42128c:	ldr	x21, [x1]
  421290:	mov	x26, x7
  421294:	mov	x27, x6
  421298:	mov	x24, x4
  42129c:	mov	w22, w3
  4212a0:	mov	x25, x1
  4212a4:	mov	x20, x0
  4212a8:	mov	x28, x2
  4212ac:	add	x29, sp, #0x10
  4212b0:	str	x5, [sp, #8]
  4212b4:	cbz	w8, 4212e0 <feof@plt+0x1e200>
  4212b8:	cbnz	w22, 421318 <feof@plt+0x1e238>
  4212bc:	ldrb	w8, [x20, #1138]
  4212c0:	cbz	w8, 421318 <feof@plt+0x1e238>
  4212c4:	ldurb	w3, [x21, #-1]
  4212c8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4212cc:	add	x2, x2, #0xa48
  4212d0:	mov	w1, #0x6                   	// #6
  4212d4:	mov	x0, x20
  4212d8:	bl	4289d0 <feof@plt+0x258f0>
  4212dc:	b	421318 <feof@plt+0x1e238>
  4212e0:	ldrb	w9, [x20, #1152]
  4212e4:	cbz	w9, 421304 <feof@plt+0x1e224>
  4212e8:	ldrsb	w9, [x20, #1198]
  4212ec:	cmp	w9, #0x1
  4212f0:	b.lt	4212b8 <feof@plt+0x1e1d8>  // b.tstop
  4212f4:	cbnz	w8, 4212b8 <feof@plt+0x1e1d8>
  4212f8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4212fc:	add	x2, x2, #0xa0e
  421300:	b	42130c <feof@plt+0x1e22c>
  421304:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421308:	add	x2, x2, #0x9d6
  42130c:	mov	x0, x20
  421310:	mov	w1, wzr
  421314:	bl	4288a0 <feof@plt+0x257c0>
  421318:	ldurb	w8, [x21, #-1]
  42131c:	sub	x4, x21, #0x2
  421320:	cmp	w8, #0x75
  421324:	b.eq	421338 <feof@plt+0x1e258>  // b.none
  421328:	cmp	w8, #0x55
  42132c:	b.ne	421340 <feof@plt+0x1e260>  // b.any
  421330:	mov	w19, #0x8                   	// #8
  421334:	b	421360 <feof@plt+0x1e280>
  421338:	mov	w19, #0x4                   	// #4
  42133c:	b	421360 <feof@plt+0x1e280>
  421340:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421344:	add	x2, x2, #0xa7b
  421348:	mov	w1, #0x4                   	// #4
  42134c:	mov	x0, x20
  421350:	mov	w19, #0x4                   	// #4
  421354:	mov	x23, x4
  421358:	bl	4288a0 <feof@plt+0x257c0>
  42135c:	mov	x4, x23
  421360:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  421364:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  421368:	mov	w23, wzr
  42136c:	add	x8, x8, #0xe98
  421370:	add	x9, x9, #0xc33
  421374:	mov	w10, #0x60000000            	// #1610612736
  421378:	ldrb	w11, [x21]
  42137c:	ldrh	w12, [x8, x11, lsl #1]
  421380:	tbz	w12, #8, 4213d0 <feof@plt+0x1e2f0>
  421384:	cbz	x26, 4213a8 <feof@plt+0x1e2c8>
  421388:	cbz	x27, 4216e4 <feof@plt+0x1e604>
  42138c:	ldr	w12, [x26]
  421390:	cmp	w12, w10
  421394:	b.hi	4213a4 <feof@plt+0x1e2c4>  // b.pmore
  421398:	ldr	w13, [x26, #4]
  42139c:	add	w13, w13, w12
  4213a0:	str	w13, [x26]
  4213a4:	str	w12, [x27, #4]
  4213a8:	ldrb	w11, [x9, x11]
  4213ac:	add	x21, x21, #0x1
  4213b0:	cmp	x21, x28
  4213b4:	add	w23, w11, w23, lsl #4
  4213b8:	sub	w11, w19, #0x1
  4213bc:	b.cs	4213d4 <feof@plt+0x1e2f4>  // b.hs, b.nlast
  4213c0:	cmp	w19, #0x1
  4213c4:	mov	w19, w11
  4213c8:	b.ne	421378 <feof@plt+0x1e298>  // b.any
  4213cc:	b	4213d4 <feof@plt+0x1e2f4>
  4213d0:	mov	w11, w19
  4213d4:	cbz	w22, 4213e8 <feof@plt+0x1e308>
  4213d8:	cbz	w11, 4213e8 <feof@plt+0x1e308>
  4213dc:	mov	w23, wzr
  4213e0:	mov	w0, wzr
  4213e4:	b	4214bc <feof@plt+0x1e3dc>
  4213e8:	str	x21, [x25]
  4213ec:	cbz	w11, 421400 <feof@plt+0x1e320>
  4213f0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4213f4:	sub	w3, w21, w4
  4213f8:	add	x2, x2, #0xac1
  4213fc:	b	4214a8 <feof@plt+0x1e3c8>
  421400:	cmp	w23, #0x9f
  421404:	b.hi	421434 <feof@plt+0x1e354>  // b.pmore
  421408:	ldrb	w8, [x20, #1120]
  42140c:	cbnz	w8, 421434 <feof@plt+0x1e354>
  421410:	sub	w8, w23, #0x24
  421414:	cmp	w8, #0x3c
  421418:	b.hi	42149c <feof@plt+0x1e3bc>  // b.pmore
  42141c:	mov	w9, #0x1                   	// #1
  421420:	lsl	x8, x9, x8
  421424:	mov	x9, #0x1000000010000000    	// #1152921504875282432
  421428:	movk	x9, #0x1
  42142c:	tst	x8, x9
  421430:	b.eq	42149c <feof@plt+0x1e3bc>  // b.none
  421434:	tbnz	w23, #31, 42149c <feof@plt+0x1e3bc>
  421438:	and	w8, w23, #0xfffff800
  42143c:	mov	w9, #0xd800                	// #55296
  421440:	cmp	w8, w9
  421444:	b.eq	42149c <feof@plt+0x1e3bc>  // b.none
  421448:	cbz	w22, 4214e4 <feof@plt+0x1e404>
  42144c:	cmp	w23, #0x24
  421450:	b.ne	4214e4 <feof@plt+0x1e404>  // b.any
  421454:	ldrb	w8, [x20, #1146]
  421458:	cbz	w8, 4214e4 <feof@plt+0x1e404>
  42145c:	ldrb	w8, [x20, #1148]
  421460:	ldr	x19, [sp, #8]
  421464:	cbz	w8, 421488 <feof@plt+0x1e3a8>
  421468:	ldrb	w8, [x20, #18]
  42146c:	cbnz	w8, 421488 <feof@plt+0x1e3a8>
  421470:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421474:	add	x2, x2, #0xb12
  421478:	mov	w1, #0x2                   	// #2
  42147c:	mov	x0, x20
  421480:	strb	wzr, [x20, #1148]
  421484:	bl	4288a0 <feof@plt+0x257c0>
  421488:	mov	w23, #0x24                  	// #36
  42148c:	strb	wzr, [x24, #4]
  421490:	str	w23, [x24]
  421494:	mov	w0, #0x1                   	// #1
  421498:	b	4214c0 <feof@plt+0x1e3e0>
  42149c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4214a0:	sub	w3, w21, w4
  4214a4:	add	x2, x2, #0xaea
  4214a8:	mov	w1, #0x3                   	// #3
  4214ac:	mov	x0, x20
  4214b0:	bl	4288a0 <feof@plt+0x257c0>
  4214b4:	mov	w23, #0x1                   	// #1
  4214b8:	mov	w0, #0x1                   	// #1
  4214bc:	ldr	x19, [sp, #8]
  4214c0:	str	w23, [x19]
  4214c4:	ldp	x20, x19, [sp, #96]
  4214c8:	ldp	x22, x21, [sp, #80]
  4214cc:	ldp	x24, x23, [sp, #64]
  4214d0:	ldp	x26, x25, [sp, #48]
  4214d4:	ldp	x28, x27, [sp, #32]
  4214d8:	ldp	x29, x30, [sp, #16]
  4214dc:	add	sp, sp, #0x70
  4214e0:	ret
  4214e4:	cbz	w22, 4214b8 <feof@plt+0x1e3d8>
  4214e8:	lsr	w8, w23, #16
  4214ec:	cmp	w8, #0x10
  4214f0:	b.hi	42159c <feof@plt+0x1e4bc>  // b.pmore
  4214f4:	adrp	x8, 469000 <_obstack_memory_used@@Base+0x7838>
  4214f8:	mov	x19, x24
  4214fc:	mov	w10, wzr
  421500:	mov	w9, #0x73c                 	// #1852
  421504:	add	x8, x8, #0xf48
  421508:	add	w11, w9, w10
  42150c:	cmp	w11, #0x0
  421510:	cinc	w11, w11, lt  // lt = tstop
  421514:	asr	w11, w11, #1
  421518:	add	x12, x8, w11, sxtw #3
  42151c:	ldr	w12, [x12, #4]
  421520:	cmp	w12, w23
  421524:	csel	w9, w9, w11, cc  // cc = lo, ul, last
  421528:	csinc	w10, w10, w11, cs  // cs = hs, nlast
  42152c:	cmp	w9, w10
  421530:	b.ne	421508 <feof@plt+0x1e428>  // b.any
  421534:	ldrb	w10, [x20, #1154]
  421538:	cbz	w10, 42154c <feof@plt+0x1e46c>
  42153c:	ldrb	w10, [x20, #1164]
  421540:	cbz	w10, 421554 <feof@plt+0x1e474>
  421544:	mov	w10, #0x8                   	// #8
  421548:	b	421578 <feof@plt+0x1e498>
  42154c:	mov	w10, #0xd                   	// #13
  421550:	b	421578 <feof@plt+0x1e498>
  421554:	ldrb	w10, [x20, #1152]
  421558:	cbz	w10, 421564 <feof@plt+0x1e484>
  42155c:	mov	w10, #0x1                   	// #1
  421560:	b	421578 <feof@plt+0x1e498>
  421564:	ldrb	w10, [x20, #1120]
  421568:	mov	w11, #0x4                   	// #4
  42156c:	cmp	w10, #0x0
  421570:	mov	w10, #0xd                   	// #13
  421574:	csel	w10, w10, w11, eq  // eq = none
  421578:	sbfiz	x11, x9, #3, #32
  42157c:	ldrh	w25, [x8, x11]
  421580:	tst	w10, w25
  421584:	b.eq	42159c <feof@plt+0x1e4bc>  // b.none
  421588:	ldrb	w10, [x20, #1164]
  42158c:	sxtw	x9, w9
  421590:	cbz	w10, 4215b8 <feof@plt+0x1e4d8>
  421594:	mov	w26, #0x10                  	// #16
  421598:	b	4215c8 <feof@plt+0x1e4e8>
  42159c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4215a0:	sub	w3, w21, w4
  4215a4:	add	x2, x2, #0xb2e
  4215a8:	mov	w1, #0x3                   	// #3
  4215ac:	mov	x0, x20
  4215b0:	bl	4288a0 <feof@plt+0x257c0>
  4215b4:	b	4214b8 <feof@plt+0x1e3d8>
  4215b8:	ldrb	w10, [x20, #1152]
  4215bc:	cmp	w10, #0x0
  4215c0:	cset	w10, ne  // ne = any
  4215c4:	lsl	w26, w10, #1
  4215c8:	add	x8, x8, x9, lsl #3
  4215cc:	ldrb	w27, [x8, #2]
  4215d0:	cbz	w27, 4215ec <feof@plt+0x1e50c>
  4215d4:	ldrb	w8, [x19, #4]
  4215d8:	cmp	w27, w8
  4215dc:	b.cs	4215ec <feof@plt+0x1e50c>  // b.hs, b.nlast
  4215e0:	mov	w8, #0x3                   	// #3
  4215e4:	str	w8, [x19, #8]
  4215e8:	b	4216bc <feof@plt+0x1e5dc>
  4215ec:	tbnz	w25, #8, 421600 <feof@plt+0x1e520>
  4215f0:	tbnz	w25, #7, 4216b4 <feof@plt+0x1e5d4>
  4215f4:	tbnz	w25, #6, 421684 <feof@plt+0x1e5a4>
  4215f8:	tbnz	w25, #5, 421624 <feof@plt+0x1e544>
  4215fc:	b	4216ac <feof@plt+0x1e5cc>
  421600:	ldr	w2, [x19]
  421604:	mov	w8, #0xffffee9f            	// #-4449
  421608:	add	w8, w23, w8
  42160c:	cmp	w8, #0x14
  421610:	b.hi	421638 <feof@plt+0x1e558>  // b.pmore
  421614:	mov	w8, #0xffffef00            	// #-4352
  421618:	add	w8, w2, w8
  42161c:	cmp	w8, #0x12
  421620:	b.hi	4216b4 <feof@plt+0x1e5d4>  // b.pmore
  421624:	ldr	w8, [x19, #8]
  421628:	mov	w9, #0x2                   	// #2
  42162c:	cmp	w8, #0x2
  421630:	csel	w8, w8, w9, gt
  421634:	b	4216b0 <feof@plt+0x1e5d0>
  421638:	mov	w8, #0xffffee58            	// #-4520
  42163c:	add	w8, w23, w8
  421640:	cmp	w8, #0x1a
  421644:	b.hi	421694 <feof@plt+0x1e5b4>  // b.pmore
  421648:	mov	w8, #0xffff5400            	// #-44032
  42164c:	add	w8, w2, w8
  421650:	lsr	w9, w8, #2
  421654:	cmp	w9, #0xae8
  421658:	b.hi	4216b4 <feof@plt+0x1e5d4>  // b.pmore
  42165c:	mov	w9, #0x6db7                	// #28087
  421660:	and	w8, w8, #0xffff
  421664:	movk	w9, #0xb6db, lsl #16
  421668:	mul	w8, w8, w9
  42166c:	mov	w9, #0x9249                	// #37449
  421670:	ror	w8, w8, #2
  421674:	movk	w9, #0x924, lsl #16
  421678:	cmp	w8, w9
  42167c:	b.hi	4216b4 <feof@plt+0x1e5d4>  // b.pmore
  421680:	b	421624 <feof@plt+0x1e544>
  421684:	ldr	w8, [x19, #8]
  421688:	cmp	w8, #0x1
  42168c:	csinc	w8, w8, wzr, gt
  421690:	b	4216b0 <feof@plt+0x1e5d0>
  421694:	mov	x0, x20
  421698:	mov	w1, w23
  42169c:	mov	x24, x4
  4216a0:	bl	4237d4 <feof@plt+0x206f4>
  4216a4:	mov	x4, x24
  4216a8:	tbnz	w0, #0, 4216b4 <feof@plt+0x1e5d4>
  4216ac:	mov	w8, #0x3                   	// #3
  4216b0:	str	w8, [x19, #8]
  4216b4:	cbnz	w27, 4216bc <feof@plt+0x1e5dc>
  4216b8:	str	w23, [x19]
  4216bc:	cmp	w22, #0x1
  4216c0:	mov	w0, #0x1                   	// #1
  4216c4:	strb	w27, [x19, #4]
  4216c8:	b.ne	4214bc <feof@plt+0x1e3dc>  // b.any
  4216cc:	and	w8, w26, w25
  4216d0:	cbz	w8, 4214bc <feof@plt+0x1e3dc>
  4216d4:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4216d8:	sub	w3, w21, w4
  4216dc:	add	x2, x2, #0xb65
  4216e0:	b	4215a8 <feof@plt+0x1e4c8>
  4216e4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  4216e8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4216ec:	add	x0, x0, #0xa9b
  4216f0:	add	x2, x2, #0xab2
  4216f4:	mov	w1, #0x434                 	// #1076
  4216f8:	bl	40f560 <feof@plt+0xc480>
  4216fc:	mov	x5, xzr
  421700:	mov	x6, xzr
  421704:	b	421708 <feof@plt+0x1e628>
  421708:	sub	sp, sp, #0x140
  42170c:	sub	w8, w4, #0x39
  421710:	stp	x20, x19, [sp, #304]
  421714:	mov	x19, x6
  421718:	cmp	w8, #0x9
  42171c:	mov	x20, x0
  421720:	stp	x29, x30, [sp, #224]
  421724:	stp	x28, x27, [sp, #240]
  421728:	stp	x26, x25, [sp, #256]
  42172c:	stp	x24, x23, [sp, #272]
  421730:	stp	x22, x21, [sp, #288]
  421734:	add	x29, sp, #0xe0
  421738:	stp	x1, x5, [sp, #48]
  42173c:	str	x3, [sp, #80]
  421740:	str	x2, [sp, #40]
  421744:	b.hi	4217a0 <feof@plt+0x1e6c0>  // b.pmore
  421748:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  42174c:	add	x9, x9, #0x6f0
  421750:	adr	x10, 421760 <feof@plt+0x1e680>
  421754:	ldrb	w11, [x9, x8]
  421758:	add	x10, x10, x11, lsl #2
  42175c:	br	x10
  421760:	add	x8, x20, #0x268
  421764:	add	x9, x20, #0x270
  421768:	add	x10, x20, #0x278
  42176c:	b	4217ac <feof@plt+0x1e6cc>
  421770:	add	x8, x20, #0x220
  421774:	add	x9, x20, #0x228
  421778:	add	x10, x20, #0x230
  42177c:	b	4217ac <feof@plt+0x1e6cc>
  421780:	add	x8, x20, #0x250
  421784:	add	x9, x20, #0x258
  421788:	add	x10, x20, #0x260
  42178c:	b	4217ac <feof@plt+0x1e6cc>
  421790:	add	x8, x20, #0x238
  421794:	add	x9, x20, #0x240
  421798:	add	x10, x20, #0x248
  42179c:	b	4217ac <feof@plt+0x1e6cc>
  4217a0:	add	x8, x20, #0x208
  4217a4:	add	x9, x20, #0x210
  4217a8:	add	x10, x20, #0x218
  4217ac:	ldr	x11, [sp, #56]
  4217b0:	cmp	x11, #0x0
  4217b4:	cset	w11, ne  // ne = any
  4217b8:	cmp	x19, #0x0
  4217bc:	cset	w12, ne  // ne = any
  4217c0:	cmp	w11, w12
  4217c4:	b.ne	42249c <feof@plt+0x1f3bc>  // b.any
  4217c8:	ldr	w11, [x8, #20]
  4217cc:	ldr	x8, [x8]
  4217d0:	ldr	w10, [x10]
  4217d4:	ldr	x9, [x9]
  4217d8:	str	w11, [sp, #20]
  4217dc:	str	x8, [sp, #112]
  4217e0:	ldr	x8, [sp, #80]
  4217e4:	str	x10, [sp, #32]
  4217e8:	str	x9, [sp, #96]
  4217ec:	cbz	x8, 421814 <feof@plt+0x1e734>
  4217f0:	ldr	x8, [sp, #48]
  4217f4:	mov	w9, #0x100                 	// #256
  4217f8:	ldr	w8, [x8]
  4217fc:	cmp	w8, #0x100
  421800:	csel	w0, w8, w9, hi  // hi = pmore
  421804:	stur	x0, [x29, #-96]
  421808:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42180c:	stur	x0, [x29, #-104]
  421810:	stur	xzr, [x29, #-88]
  421814:	ldr	x8, [sp, #32]
  421818:	str	x20, [sp, #104]
  42181c:	sxtw	x11, w8
  421820:	ldr	x8, [sp, #40]
  421824:	str	x11, [sp, #8]
  421828:	cbz	x8, 422250 <feof@plt+0x1f170>
  42182c:	ldr	x8, [sp, #80]
  421830:	mov	w9, #0x20                  	// #32
  421834:	mov	x10, #0xffffffffffffffff    	// #-1
  421838:	mov	w20, #0x1                   	// #1
  42183c:	cmp	x8, #0x0
  421840:	sub	x8, x29, #0x68
  421844:	csel	x8, x8, xzr, ne  // ne = any
  421848:	cmp	x11, #0x20
  42184c:	str	x8, [sp, #88]
  421850:	csel	x8, x11, x9, cc  // cc = lo, ul, last
  421854:	lsl	x8, x10, x8
  421858:	mov	x23, xzr
  42185c:	mov	x21, xzr
  421860:	movk	w20, #0x6000, lsl #16
  421864:	eor	x8, x8, #0xffffffff
  421868:	str	x8, [sp, #64]
  42186c:	b	421884 <feof@plt+0x1e7a4>
  421870:	tbz	w0, #0, 4222a0 <feof@plt+0x1f1c0>
  421874:	ldr	x8, [sp, #40]
  421878:	add	x23, x23, #0x1
  42187c:	cmp	x23, x8
  421880:	b.eq	422254 <feof@plt+0x1f174>  // b.none
  421884:	ldp	x8, x12, [sp, #48]
  421888:	lsl	x10, x23, #4
  42188c:	add	x9, x8, x10
  421890:	ldr	x8, [x9, #8]
  421894:	add	x10, x12, x10
  421898:	cmp	x12, #0x0
  42189c:	csel	x21, x10, x21, ne  // ne = any
  4218a0:	ldrb	w11, [x8]
  4218a4:	cmp	w11, #0x4c
  4218a8:	b.eq	42190c <feof@plt+0x1e82c>  // b.none
  4218ac:	cmp	w11, #0x55
  4218b0:	b.eq	42190c <feof@plt+0x1e82c>  // b.none
  4218b4:	cmp	w11, #0x75
  4218b8:	b.ne	4219a4 <feof@plt+0x1e8c4>  // b.any
  4218bc:	add	x10, x8, #0x1
  4218c0:	cbz	x21, 4218dc <feof@plt+0x1e7fc>
  4218c4:	ldr	w11, [x21]
  4218c8:	cmp	w11, w20
  4218cc:	b.cs	4218dc <feof@plt+0x1e7fc>  // b.hs, b.nlast
  4218d0:	ldr	w12, [x21, #4]
  4218d4:	add	w11, w12, w11
  4218d8:	str	w11, [x21]
  4218dc:	ldrb	w11, [x10]
  4218e0:	cmp	w11, #0x38
  4218e4:	b.ne	421914 <feof@plt+0x1e834>  // b.any
  4218e8:	add	x10, x8, #0x2
  4218ec:	cbz	x21, 421910 <feof@plt+0x1e830>
  4218f0:	ldr	w11, [x21]
  4218f4:	cmp	w11, w20
  4218f8:	b.cs	421910 <feof@plt+0x1e830>  // b.hs, b.nlast
  4218fc:	ldr	w12, [x21, #4]
  421900:	add	w11, w12, w11
  421904:	str	w11, [x21]
  421908:	b	421910 <feof@plt+0x1e830>
  42190c:	add	x10, x8, #0x1
  421910:	ldrb	w11, [x10]
  421914:	cmp	w11, #0x22
  421918:	b.eq	4219b0 <feof@plt+0x1e8d0>  // b.none
  42191c:	cmp	w11, #0x27
  421920:	b.eq	4219b0 <feof@plt+0x1e8d0>  // b.none
  421924:	cmp	w11, #0x52
  421928:	b.ne	4222b8 <feof@plt+0x1f1d8>  // b.any
  42192c:	add	x11, x10, #0x2
  421930:	cbz	x21, 42195c <feof@plt+0x1e87c>
  421934:	ldr	w13, [x21]
  421938:	cmp	w13, w20
  42193c:	b.cs	42195c <feof@plt+0x1e87c>  // b.hs, b.nlast
  421940:	ldr	w12, [x21, #4]
  421944:	add	w13, w12, w13
  421948:	cmp	w13, w20
  42194c:	str	w13, [x21]
  421950:	b.cs	42195c <feof@plt+0x1e87c>  // b.hs, b.nlast
  421954:	add	w12, w12, w13
  421958:	str	w12, [x21]
  42195c:	ldrb	w12, [x10, #2]
  421960:	add	x24, x10, #0x3
  421964:	cmp	w12, #0x28
  421968:	b.ne	421984 <feof@plt+0x1e8a4>  // b.any
  42196c:	mov	x10, x11
  421970:	cbnz	x21, 42215c <feof@plt+0x1f07c>
  421974:	b	422174 <feof@plt+0x1f094>
  421978:	ldrb	w10, [x24], #1
  42197c:	cmp	w10, #0x28
  421980:	b.eq	422154 <feof@plt+0x1f074>  // b.none
  421984:	cbz	x21, 421978 <feof@plt+0x1e898>
  421988:	ldr	w10, [x21]
  42198c:	cmp	w10, w20
  421990:	b.cs	421978 <feof@plt+0x1e898>  // b.hs, b.nlast
  421994:	ldr	w12, [x21, #4]
  421998:	add	w10, w12, w10
  42199c:	str	w10, [x21]
  4219a0:	b	421978 <feof@plt+0x1e898>
  4219a4:	mov	x10, x8
  4219a8:	cmp	w11, #0x22
  4219ac:	b.ne	42191c <feof@plt+0x1e83c>  // b.any
  4219b0:	add	x24, x10, #0x1
  4219b4:	cbz	x21, 4219d0 <feof@plt+0x1e8f0>
  4219b8:	ldr	w10, [x21]
  4219bc:	cmp	w10, w20
  4219c0:	b.cs	4219d0 <feof@plt+0x1e8f0>  // b.hs, b.nlast
  4219c4:	ldr	w11, [x21, #4]
  4219c8:	add	w10, w11, w10
  4219cc:	str	w10, [x21]
  4219d0:	ldr	w12, [x9]
  4219d4:	cmp	x21, #0x0
  4219d8:	cset	w9, ne  // ne = any
  4219dc:	cmp	x19, #0x0
  4219e0:	add	x8, x8, x12
  4219e4:	sub	x25, x8, #0x1
  4219e8:	cset	w10, eq  // eq = none
  4219ec:	cset	w11, ne  // ne = any
  4219f0:	cmp	x24, x25
  4219f4:	str	x8, [sp, #24]
  4219f8:	b.cs	421874 <feof@plt+0x1e794>  // b.hs, b.nlast
  4219fc:	eor	w8, w11, w9
  421a00:	str	w8, [sp, #76]
  421a04:	eor	w8, w10, w9
  421a08:	str	w8, [sp, #16]
  421a0c:	ldr	x8, [sp, #24]
  421a10:	sub	x26, x8, #0x2
  421a14:	b	421a4c <feof@plt+0x1e96c>
  421a18:	ldr	x0, [x19]
  421a1c:	lsl	w8, w10, #1
  421a20:	lsl	x1, x10, #4
  421a24:	str	w8, [x19, #12]
  421a28:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  421a2c:	ldr	w8, [x19, #8]
  421a30:	str	x0, [x19]
  421a34:	add	w9, w8, #0x1
  421a38:	str	w9, [x19, #8]
  421a3c:	str	x22, [x0, w8, sxtw #3]
  421a40:	add	x24, x28, #0x2
  421a44:	cmp	x24, x25
  421a48:	b.cs	421874 <feof@plt+0x1e794>  // b.hs, b.nlast
  421a4c:	ldrb	w8, [x24]
  421a50:	mov	x9, x24
  421a54:	cmp	w8, #0x5c
  421a58:	b.ne	421a70 <feof@plt+0x1e990>  // b.any
  421a5c:	mov	w22, #0x1                   	// #1
  421a60:	mov	x28, x24
  421a64:	subs	x2, x28, x24
  421a68:	b.hi	421aa8 <feof@plt+0x1e9c8>  // b.pmore
  421a6c:	b	421aec <feof@plt+0x1ea0c>
  421a70:	cmp	x26, x9
  421a74:	add	x8, x9, #0x1
  421a78:	b.eq	421a94 <feof@plt+0x1e9b4>  // b.none
  421a7c:	ldrb	w9, [x9, #1]
  421a80:	mov	x28, x8
  421a84:	cmp	w9, #0x5c
  421a88:	mov	x9, x8
  421a8c:	b.ne	421a70 <feof@plt+0x1e990>  // b.any
  421a90:	b	421a98 <feof@plt+0x1e9b8>
  421a94:	mov	x28, x25
  421a98:	cmp	x8, x25
  421a9c:	cset	w22, cc  // cc = lo, ul, last
  421aa0:	subs	x2, x28, x24
  421aa4:	b.ls	421aec <feof@plt+0x1ea0c>  // b.plast
  421aa8:	ldr	x8, [sp, #80]
  421aac:	cbz	x8, 421ac8 <feof@plt+0x1e9e8>
  421ab0:	ldr	x0, [sp, #96]
  421ab4:	ldr	x8, [sp, #112]
  421ab8:	sub	x3, x29, #0x68
  421abc:	mov	x1, x24
  421ac0:	blr	x8
  421ac4:	tbz	w0, #0, 4222a0 <feof@plt+0x1f1c0>
  421ac8:	cbz	x21, 421aec <feof@plt+0x1ea0c>
  421acc:	ldr	x8, [sp, #112]
  421ad0:	adrp	x9, 422000 <feof@plt+0x1ef20>
  421ad4:	add	x9, x9, #0x5ac
  421ad8:	cmp	x8, x9
  421adc:	b.ne	42243c <feof@plt+0x1f35c>  // b.any
  421ae0:	sub	w24, w28, w24
  421ae4:	cmp	w24, #0x1
  421ae8:	b.ge	421b48 <feof@plt+0x1ea68>  // b.tcont
  421aec:	cbz	w22, 421874 <feof@plt+0x1e794>
  421af0:	add	x24, x28, #0x1
  421af4:	cbz	x21, 421b7c <feof@plt+0x1ea9c>
  421af8:	ldr	w22, [x21]
  421afc:	cmp	w22, w20
  421b00:	b.cs	421b10 <feof@plt+0x1ea30>  // b.hs, b.nlast
  421b04:	ldr	w8, [x21, #4]
  421b08:	add	w8, w8, w22
  421b0c:	str	w8, [x21]
  421b10:	lsl	x27, x22, #32
  421b14:	b	421b84 <feof@plt+0x1eaa4>
  421b18:	ldr	x0, [x19]
  421b1c:	lsl	w8, w9, #1
  421b20:	lsl	x1, x9, #4
  421b24:	str	w8, [x19, #12]
  421b28:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  421b2c:	ldr	w8, [x19, #8]
  421b30:	str	x0, [x19]
  421b34:	add	w9, w8, #0x1
  421b38:	subs	w24, w24, #0x1
  421b3c:	str	w9, [x19, #8]
  421b40:	str	x27, [x0, w8, sxtw #3]
  421b44:	b.eq	421aec <feof@plt+0x1ea0c>  // b.none
  421b48:	ldr	w27, [x21]
  421b4c:	cmp	w27, w20
  421b50:	b.cs	421b60 <feof@plt+0x1ea80>  // b.hs, b.nlast
  421b54:	ldr	w8, [x21, #4]
  421b58:	add	w8, w8, w27
  421b5c:	str	w8, [x21]
  421b60:	ldp	w8, w9, [x19, #8]
  421b64:	bfi	x27, x27, #32, #32
  421b68:	sxtw	x9, w9
  421b6c:	cmp	w8, w9
  421b70:	b.ge	421b18 <feof@plt+0x1ea38>  // b.tcont
  421b74:	ldr	x0, [x19]
  421b78:	b	421b34 <feof@plt+0x1ea54>
  421b7c:	mov	x22, xzr
  421b80:	mov	x27, xzr
  421b84:	ldrb	w3, [x24]
  421b88:	sub	w8, w3, #0x22
  421b8c:	cmp	w8, #0x59
  421b90:	sturb	w3, [x29, #-48]
  421b94:	b.hi	421c30 <feof@plt+0x1eb50>  // b.pmore
  421b98:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x3838>
  421b9c:	add	x11, x11, #0x6fa
  421ba0:	adr	x9, 421bb0 <feof@plt+0x1ead0>
  421ba4:	ldrh	w10, [x11, x8, lsl #1]
  421ba8:	add	x9, x9, x10, lsl #2
  421bac:	br	x9
  421bb0:	ldr	w8, [sp, #76]
  421bb4:	tbnz	w8, #0, 422454 <feof@plt+0x1f374>
  421bb8:	cmp	x24, x25
  421bbc:	lsr	x27, x27, #32
  421bc0:	b.cs	421c68 <feof@plt+0x1eb88>  // b.hs, b.nlast
  421bc4:	mov	x9, xzr
  421bc8:	mov	w1, wzr
  421bcc:	add	x8, x28, #0x4
  421bd0:	sub	x10, x26, x28
  421bd4:	b	421be8 <feof@plt+0x1eb08>
  421bd8:	add	w11, w11, w1, lsl #3
  421bdc:	cmp	x10, x9
  421be0:	sub	w1, w11, #0x30
  421be4:	b.eq	421e08 <feof@plt+0x1ed28>  // b.none
  421be8:	cmp	x9, #0x3
  421bec:	b.eq	421dc0 <feof@plt+0x1ece0>  // b.none
  421bf0:	ldrb	w11, [x24, x9]
  421bf4:	and	w12, w11, #0xf8
  421bf8:	cmp	w12, #0x30
  421bfc:	b.ne	421dc8 <feof@plt+0x1ece8>  // b.any
  421c00:	add	x9, x9, #0x1
  421c04:	cbz	x21, 421bd8 <feof@plt+0x1eaf8>
  421c08:	ldr	w27, [x21]
  421c0c:	cmp	w27, w20
  421c10:	b.cs	421bd8 <feof@plt+0x1eaf8>  // b.hs, b.nlast
  421c14:	ldr	w12, [x21, #4]
  421c18:	add	w12, w12, w27
  421c1c:	str	w12, [x21]
  421c20:	b	421bd8 <feof@plt+0x1eaf8>
  421c24:	ldr	x8, [sp, #104]
  421c28:	ldrb	w8, [x8, #1154]
  421c2c:	cbz	w8, 421fe4 <feof@plt+0x1ef04>
  421c30:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  421c34:	add	x8, x8, #0xe98
  421c38:	ldrh	w8, [x8, x3, lsl #1]
  421c3c:	mov	w9, #0xac                  	// #172
  421c40:	tst	w8, w9
  421c44:	b.eq	421dd0 <feof@plt+0x1ecf0>  // b.none
  421c48:	ldr	x0, [sp, #104]
  421c4c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421c50:	mov	w1, #0x2                   	// #2
  421c54:	add	x2, x2, #0xda9
  421c58:	bl	4288a0 <feof@plt+0x257c0>
  421c5c:	ldr	x3, [sp, #88]
  421c60:	cbnz	x3, 422000 <feof@plt+0x1ef20>
  421c64:	b	42202c <feof@plt+0x1ef4c>
  421c68:	mov	w1, wzr
  421c6c:	b	421e0c <feof@plt+0x1ed2c>
  421c70:	orr	x8, x27, x22
  421c74:	stp	x24, x8, [x29, #-32]
  421c78:	ldr	w8, [sp, #16]
  421c7c:	stur	wzr, [x29, #-72]
  421c80:	stur	xzr, [x29, #-80]
  421c84:	tbz	w8, #0, 42246c <feof@plt+0x1f38c>
  421c88:	ldr	x22, [sp, #88]
  421c8c:	add	x8, x28, #0x2
  421c90:	stur	x8, [x29, #-32]
  421c94:	cbz	x21, 421cb4 <feof@plt+0x1ebd4>
  421c98:	ldr	w8, [x21]
  421c9c:	cmp	w8, w20
  421ca0:	b.cs	421cb0 <feof@plt+0x1ebd0>  // b.hs, b.nlast
  421ca4:	ldr	w9, [x21, #4]
  421ca8:	add	w9, w9, w8
  421cac:	str	w9, [x21]
  421cb0:	stur	w8, [x29, #-20]
  421cb4:	ldr	x0, [sp, #104]
  421cb8:	sub	x1, x29, #0x20
  421cbc:	sub	x4, x29, #0x50
  421cc0:	sub	x5, x29, #0x24
  421cc4:	sub	x6, x29, #0x18
  421cc8:	mov	x2, x25
  421ccc:	mov	w3, wzr
  421cd0:	mov	x7, x21
  421cd4:	bl	42126c <feof@plt+0x1e18c>
  421cd8:	ldur	w9, [x29, #-36]
  421cdc:	cmp	w9, #0x80
  421ce0:	b.cs	421eb4 <feof@plt+0x1edd4>  // b.hs, b.nlast
  421ce4:	sturb	w9, [x29, #-11]
  421ce8:	mov	x8, #0xffffffffffffffff    	// #-1
  421cec:	mov	w28, #0x1                   	// #1
  421cf0:	sub	x14, x29, #0x10
  421cf4:	add	x9, x14, x8
  421cf8:	add	x1, x9, #0x6
  421cfc:	neg	x2, x8
  421d00:	sub	x0, x29, #0x2c
  421d04:	bl	4029c0 <memcpy@plt>
  421d08:	cbz	x22, 421d3c <feof@plt+0x1ec5c>
  421d0c:	ldr	x0, [sp, #96]
  421d10:	ldr	x8, [sp, #112]
  421d14:	sub	x1, x29, #0x2c
  421d18:	mov	x2, x28
  421d1c:	mov	x3, x22
  421d20:	blr	x8
  421d24:	tbnz	w0, #0, 421d3c <feof@plt+0x1ec5c>
  421d28:	ldr	x0, [sp, #104]
  421d2c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421d30:	mov	w1, #0x3                   	// #3
  421d34:	add	x2, x2, #0xe29
  421d38:	bl	4292f8 <feof@plt+0x26218>
  421d3c:	cbz	x21, 421d48 <feof@plt+0x1ec68>
  421d40:	cmp	w28, #0x1
  421d44:	b.ge	421d80 <feof@plt+0x1eca0>  // b.tcont
  421d48:	ldur	x24, [x29, #-32]
  421d4c:	b	421a44 <feof@plt+0x1e964>
  421d50:	ldr	x0, [x19]
  421d54:	lsl	w8, w9, #1
  421d58:	lsl	x1, x9, #4
  421d5c:	str	w8, [x19, #12]
  421d60:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  421d64:	ldr	w8, [x19, #8]
  421d68:	str	x0, [x19]
  421d6c:	add	w9, w8, #0x1
  421d70:	subs	w28, w28, #0x1
  421d74:	str	w9, [x19, #8]
  421d78:	str	x22, [x0, w8, sxtw #3]
  421d7c:	b.eq	421d48 <feof@plt+0x1ec68>  // b.none
  421d80:	ldp	w8, w9, [x19, #8]
  421d84:	ldur	x22, [x29, #-24]
  421d88:	sxtw	x9, w9
  421d8c:	cmp	w8, w9
  421d90:	b.ge	421d50 <feof@plt+0x1ec70>  // b.tcont
  421d94:	ldr	x0, [x19]
  421d98:	b	421d6c <feof@plt+0x1ec8c>
  421d9c:	ldr	x0, [sp, #104]
  421da0:	ldrb	w8, [x0, #1154]
  421da4:	cbz	w8, 421db8 <feof@plt+0x1ecd8>
  421da8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421dac:	mov	w1, #0x2                   	// #2
  421db0:	add	x2, x2, #0xd81
  421db4:	bl	4288a0 <feof@plt+0x257c0>
  421db8:	mov	w8, #0x1b                  	// #27
  421dbc:	b	421ff4 <feof@plt+0x1ef14>
  421dc0:	mov	x24, x8
  421dc4:	b	421e0c <feof@plt+0x1ed2c>
  421dc8:	add	x24, x24, x9
  421dcc:	b	421e0c <feof@plt+0x1ed2c>
  421dd0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  421dd4:	sub	x0, x29, #0x50
  421dd8:	add	x1, x1, #0xbc9
  421ddc:	mov	w2, w3
  421de0:	bl	402c30 <sprintf@plt>
  421de4:	ldr	x0, [sp, #104]
  421de8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421dec:	sub	x3, x29, #0x50
  421df0:	mov	w1, #0x2                   	// #2
  421df4:	add	x2, x2, #0xdc8
  421df8:	bl	4288a0 <feof@plt+0x257c0>
  421dfc:	ldr	x3, [sp, #88]
  421e00:	cbnz	x3, 422000 <feof@plt+0x1ef20>
  421e04:	b	42202c <feof@plt+0x1ef4c>
  421e08:	mov	x24, x25
  421e0c:	ldr	x9, [sp, #64]
  421e10:	mov	w8, w1
  421e14:	and	x28, x9, x8
  421e18:	cmp	x28, x8
  421e1c:	b.eq	421e38 <feof@plt+0x1ed58>  // b.none
  421e20:	ldr	x0, [sp, #104]
  421e24:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421e28:	mov	w1, #0x2                   	// #2
  421e2c:	add	x2, x2, #0xee3
  421e30:	bl	4288a0 <feof@plt+0x257c0>
  421e34:	mov	w1, w28
  421e38:	ldr	x2, [sp, #88]
  421e3c:	cbz	x2, 421e68 <feof@plt+0x1ed88>
  421e40:	ldp	x0, x8, [sp, #104]
  421e44:	sub	x3, x29, #0x50
  421e48:	stur	x8, [x29, #-80]
  421e4c:	ldr	x8, [sp, #96]
  421e50:	stur	x8, [x29, #-72]
  421e54:	ldr	x8, [sp, #32]
  421e58:	stur	w8, [x29, #-64]
  421e5c:	ldr	w8, [sp, #20]
  421e60:	stur	w8, [x29, #-60]
  421e64:	bl	4245d8 <feof@plt+0x214f8>
  421e68:	cbz	x19, 421a44 <feof@plt+0x1e964>
  421e6c:	ldp	w8, w9, [x19, #8]
  421e70:	bfi	x22, x27, #32, #32
  421e74:	sxtw	x9, w9
  421e78:	cmp	w8, w9
  421e7c:	b.ge	421e88 <feof@plt+0x1eda8>  // b.tcont
  421e80:	ldr	x0, [x19]
  421e84:	b	421ea4 <feof@plt+0x1edc4>
  421e88:	ldr	x0, [x19]
  421e8c:	lsl	w8, w9, #1
  421e90:	lsl	x1, x9, #4
  421e94:	str	w8, [x19, #12]
  421e98:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  421e9c:	ldr	w8, [x19, #8]
  421ea0:	str	x0, [x19]
  421ea4:	add	w9, w8, #0x1
  421ea8:	str	w9, [x19, #8]
  421eac:	str	x22, [x0, w8, sxtw #3]
  421eb0:	b	421a44 <feof@plt+0x1e964>
  421eb4:	adrp	x11, 46d000 <_obstack_memory_used@@Base+0xb838>
  421eb8:	adrp	x10, 46d000 <_obstack_memory_used@@Base+0xb838>
  421ebc:	mov	x8, xzr
  421ec0:	add	x11, x11, #0x937
  421ec4:	add	x10, x10, #0x931
  421ec8:	sub	x14, x29, #0x10
  421ecc:	b	421ee0 <feof@plt+0x1ee00>
  421ed0:	sub	x8, x8, #0x1
  421ed4:	add	x10, x10, #0x1
  421ed8:	add	x11, x11, #0x1
  421edc:	mov	w9, w12
  421ee0:	mov	w12, #0x80                  	// #128
  421ee4:	add	x13, x14, x8
  421ee8:	bfxil	w12, w9, #0, #6
  421eec:	cmp	w9, #0xfbf
  421ef0:	strb	w12, [x13, #5]
  421ef4:	lsr	w12, w9, #6
  421ef8:	b.hi	421ed0 <feof@plt+0x1edf0>  // b.pmore
  421efc:	ldrb	w13, [x11]
  421f00:	tst	w12, w13
  421f04:	b.ne	421ed0 <feof@plt+0x1edf0>  // b.any
  421f08:	ldrb	w10, [x10]
  421f0c:	mov	w12, #0x2                   	// #2
  421f10:	sub	x28, x12, x8
  421f14:	add	x11, x14, x8
  421f18:	orr	w9, w10, w9, lsr #6
  421f1c:	cmp	x28, #0x6
  421f20:	strb	w9, [x11, #4]
  421f24:	b.ls	422064 <feof@plt+0x1ef84>  // b.plast
  421f28:	bl	402e70 <__errno_location@plt>
  421f2c:	mov	w8, #0x7                   	// #7
  421f30:	str	w8, [x0]
  421f34:	ldr	x0, [sp, #104]
  421f38:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421f3c:	mov	w1, #0x3                   	// #3
  421f40:	add	x2, x2, #0xc10
  421f44:	bl	4292f8 <feof@plt+0x26218>
  421f48:	ldur	x24, [x29, #-32]
  421f4c:	b	421a44 <feof@plt+0x1e964>
  421f50:	mov	w8, #0xd                   	// #13
  421f54:	b	421ff4 <feof@plt+0x1ef14>
  421f58:	ldr	x0, [sp, #104]
  421f5c:	ldrb	w8, [x0, #1138]
  421f60:	cbz	w8, 421f74 <feof@plt+0x1ee94>
  421f64:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421f68:	mov	w1, #0x6                   	// #6
  421f6c:	add	x2, x2, #0xd4f
  421f70:	bl	4289d0 <feof@plt+0x258f0>
  421f74:	mov	w8, #0x7                   	// #7
  421f78:	b	421ff4 <feof@plt+0x1ef14>
  421f7c:	mov	w8, #0x8                   	// #8
  421f80:	b	421ff4 <feof@plt+0x1ef14>
  421f84:	ldr	w8, [sp, #76]
  421f88:	cbnz	w8, 422484 <feof@plt+0x1f3a4>
  421f8c:	ldr	x0, [sp, #104]
  421f90:	ldrb	w8, [x0, #1138]
  421f94:	cbz	w8, 421fa8 <feof@plt+0x1eec8>
  421f98:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  421f9c:	mov	w1, #0x6                   	// #6
  421fa0:	add	x2, x2, #0xe5f
  421fa4:	bl	4289d0 <feof@plt+0x258f0>
  421fa8:	cbz	x21, 422074 <feof@plt+0x1ef94>
  421fac:	ldr	w10, [x21]
  421fb0:	cmp	w10, w20
  421fb4:	b.cs	421fc4 <feof@plt+0x1eee4>  // b.hs, b.nlast
  421fb8:	ldr	w8, [x21, #4]
  421fbc:	add	w8, w8, w10
  421fc0:	str	w8, [x21]
  421fc4:	bfi	x10, x10, #32, #32
  421fc8:	b	422078 <feof@plt+0x1ef98>
  421fcc:	mov	w8, #0xb                   	// #11
  421fd0:	b	421ff4 <feof@plt+0x1ef14>
  421fd4:	mov	w8, #0xa                   	// #10
  421fd8:	b	421ff4 <feof@plt+0x1ef14>
  421fdc:	mov	w8, #0xc                   	// #12
  421fe0:	sturb	w8, [x29, #-48]
  421fe4:	ldr	x3, [sp, #88]
  421fe8:	cbnz	x3, 422000 <feof@plt+0x1ef20>
  421fec:	b	42202c <feof@plt+0x1ef4c>
  421ff0:	mov	w8, #0x9                   	// #9
  421ff4:	sturb	w8, [x29, #-48]
  421ff8:	ldr	x3, [sp, #88]
  421ffc:	cbz	x3, 42202c <feof@plt+0x1ef4c>
  422000:	ldr	x0, [sp, #96]
  422004:	ldr	x8, [sp, #112]
  422008:	sub	x1, x29, #0x30
  42200c:	mov	w2, #0x1                   	// #1
  422010:	blr	x8
  422014:	tbnz	w0, #0, 42202c <feof@plt+0x1ef4c>
  422018:	ldr	x0, [sp, #104]
  42201c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422020:	mov	w1, #0x3                   	// #3
  422024:	add	x2, x2, #0xde7
  422028:	bl	4292f8 <feof@plt+0x26218>
  42202c:	cbz	x21, 421a40 <feof@plt+0x1e960>
  422030:	ldr	w9, [x21]
  422034:	cmp	w9, w20
  422038:	b.cs	422048 <feof@plt+0x1ef68>  // b.hs, b.nlast
  42203c:	ldr	w8, [x21, #4]
  422040:	add	w8, w8, w9
  422044:	str	w8, [x21]
  422048:	ldp	w8, w10, [x19, #8]
  42204c:	bfi	x22, x9, #32, #32
  422050:	sxtw	x10, w10
  422054:	cmp	w8, w10
  422058:	b.ge	421a18 <feof@plt+0x1e938>  // b.tcont
  42205c:	ldr	x0, [x19]
  422060:	b	421a34 <feof@plt+0x1e954>
  422064:	cmp	x8, #0x1
  422068:	b.gt	421d08 <feof@plt+0x1ec28>
  42206c:	sub	x8, x8, #0x2
  422070:	b	421cf4 <feof@plt+0x1ec14>
  422074:	orr	x10, x27, x22
  422078:	add	x24, x28, #0x2
  42207c:	cmp	x24, x25
  422080:	b.cs	42209c <feof@plt+0x1efbc>  // b.hs, b.nlast
  422084:	ldrb	w8, [x24]
  422088:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  42208c:	add	x9, x9, #0xc33
  422090:	ldrb	w9, [x9, x8]
  422094:	cmp	w9, #0x63
  422098:	b.ne	4220b4 <feof@plt+0x1efd4>  // b.any
  42209c:	ldr	x0, [sp, #104]
  4220a0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4220a4:	mov	w1, #0x3                   	// #3
  4220a8:	add	x2, x2, #0xe91
  4220ac:	bl	4288a0 <feof@plt+0x257c0>
  4220b0:	b	421a44 <feof@plt+0x1e964>
  4220b4:	ldr	x13, [sp, #24]
  4220b8:	mov	w8, wzr
  4220bc:	mov	w1, wzr
  4220c0:	lsr	x27, x10, #32
  4220c4:	add	x10, x28, #0x4
  4220c8:	cbz	x21, 4220e4 <feof@plt+0x1f004>
  4220cc:	ldr	w27, [x21]
  4220d0:	cmp	w27, w20
  4220d4:	b.cs	4220e4 <feof@plt+0x1f004>  // b.hs, b.nlast
  4220d8:	ldr	w11, [x21, #4]
  4220dc:	add	w11, w11, w27
  4220e0:	str	w11, [x21]
  4220e4:	lsl	w11, w1, #4
  4220e8:	and	w12, w1, #0xf0000000
  4220ec:	cmp	x13, x10
  4220f0:	orr	w8, w12, w8
  4220f4:	add	w1, w11, w9, uxtb
  4220f8:	b.eq	422120 <feof@plt+0x1f040>  // b.none
  4220fc:	ldurb	w9, [x10, #-1]
  422100:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  422104:	add	x11, x11, #0xc33
  422108:	add	x10, x10, #0x1
  42210c:	ldrb	w9, [x11, x9]
  422110:	cmp	w9, #0x63
  422114:	b.ne	4220c8 <feof@plt+0x1efe8>  // b.any
  422118:	sub	x24, x10, #0x2
  42211c:	b	422124 <feof@plt+0x1f044>
  422120:	mov	x24, x25
  422124:	ldr	x10, [sp, #64]
  422128:	mov	w9, w1
  42212c:	and	x28, x10, x9
  422130:	cmp	x28, x9
  422134:	cset	w9, ne  // ne = any
  422138:	orr	w8, w8, w9
  42213c:	cbz	w8, 421e38 <feof@plt+0x1ed58>
  422140:	ldr	x0, [sp, #104]
  422144:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422148:	mov	w1, #0x2                   	// #2
  42214c:	add	x2, x2, #0xeb6
  422150:	b	421e30 <feof@plt+0x1ed50>
  422154:	sub	x10, x24, #0x1
  422158:	cbz	x21, 422174 <feof@plt+0x1f094>
  42215c:	ldr	w12, [x21]
  422160:	cmp	w12, w20
  422164:	b.cs	422174 <feof@plt+0x1f094>  // b.hs, b.nlast
  422168:	ldr	w13, [x21, #4]
  42216c:	add	w12, w13, w12
  422170:	str	w12, [x21]
  422174:	ldr	w9, [x9]
  422178:	sub	x11, x24, x11
  42217c:	add	x10, x10, x11
  422180:	mvn	x11, x11
  422184:	add	x10, x10, #0x2
  422188:	add	x8, x8, x9
  42218c:	add	x9, x8, x11
  422190:	cmp	x8, x10
  422194:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  422198:	ldr	x8, [sp, #80]
  42219c:	cbz	x8, 4221c4 <feof@plt+0x1f0e4>
  4221a0:	ldr	x0, [sp, #96]
  4221a4:	ldr	x8, [sp, #112]
  4221a8:	sub	x2, x22, x24
  4221ac:	sub	x3, x29, #0x68
  4221b0:	mov	x1, x24
  4221b4:	blr	x8
  4221b8:	cbz	x21, 421870 <feof@plt+0x1e790>
  4221bc:	tbnz	w0, #0, 4221c8 <feof@plt+0x1f0e8>
  4221c0:	b	421870 <feof@plt+0x1e790>
  4221c4:	cbz	x21, 421874 <feof@plt+0x1e794>
  4221c8:	ldr	x8, [sp, #112]
  4221cc:	adrp	x9, 422000 <feof@plt+0x1ef20>
  4221d0:	add	x9, x9, #0x5ac
  4221d4:	cmp	x8, x9
  4221d8:	b.ne	4224b4 <feof@plt+0x1f3d4>  // b.any
  4221dc:	sub	w22, w22, w24
  4221e0:	cmp	w22, #0x1
  4221e4:	b.ge	42221c <feof@plt+0x1f13c>  // b.tcont
  4221e8:	b	421874 <feof@plt+0x1e794>
  4221ec:	ldr	x0, [x19]
  4221f0:	lsl	w8, w9, #1
  4221f4:	lsl	x1, x9, #4
  4221f8:	str	w8, [x19, #12]
  4221fc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  422200:	ldr	w8, [x19, #8]
  422204:	str	x0, [x19]
  422208:	add	w9, w8, #0x1
  42220c:	subs	w22, w22, #0x1
  422210:	str	w9, [x19, #8]
  422214:	str	x24, [x0, w8, sxtw #3]
  422218:	b.eq	421874 <feof@plt+0x1e794>  // b.none
  42221c:	ldr	w24, [x21]
  422220:	cmp	w24, w20
  422224:	b.cs	422234 <feof@plt+0x1f154>  // b.hs, b.nlast
  422228:	ldr	w8, [x21, #4]
  42222c:	add	w8, w8, w24
  422230:	str	w8, [x21]
  422234:	ldp	w8, w9, [x19, #8]
  422238:	bfi	x24, x24, #32, #32
  42223c:	sxtw	x9, w9
  422240:	cmp	w8, w9
  422244:	b.ge	4221ec <feof@plt+0x1f10c>  // b.tcont
  422248:	ldr	x0, [x19]
  42224c:	b	422208 <feof@plt+0x1f128>
  422250:	mov	x21, xzr
  422254:	ldr	x8, [sp, #80]
  422258:	cbz	x8, 4223b0 <feof@plt+0x1f2d0>
  42225c:	ldr	x8, [sp, #104]
  422260:	ldr	x10, [sp, #8]
  422264:	ldr	x20, [x8, #1216]
  422268:	cmp	x20, x10
  42226c:	b.ne	4222e8 <feof@plt+0x1f208>  // b.any
  422270:	ldp	x10, x8, [x29, #-96]
  422274:	add	x9, x8, #0x1
  422278:	cmp	x9, x10
  42227c:	b.ls	422384 <feof@plt+0x1f2a4>  // b.plast
  422280:	ldur	x0, [x29, #-104]
  422284:	add	x1, x10, #0x100
  422288:	stur	x1, [x29, #-96]
  42228c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  422290:	ldur	x8, [x29, #-88]
  422294:	stur	x0, [x29, #-104]
  422298:	add	x9, x8, #0x1
  42229c:	b	422388 <feof@plt+0x1f2a8>
  4222a0:	ldr	x0, [sp, #104]
  4222a4:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4222a8:	add	x2, x2, #0x976
  4222ac:	mov	w1, #0x3                   	// #3
  4222b0:	bl	4292f8 <feof@plt+0x26218>
  4222b4:	b	4222d8 <feof@plt+0x1f1f8>
  4222b8:	cbz	x19, 4224cc <feof@plt+0x1f3ec>
  4222bc:	ldr	x0, [sp, #104]
  4222c0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4222c4:	add	x2, x2, #0xd3c
  4222c8:	mov	w1, #0x3                   	// #3
  4222cc:	bl	4288a0 <feof@plt+0x257c0>
  4222d0:	ldr	x8, [sp, #80]
  4222d4:	cbz	x8, 4222e0 <feof@plt+0x1f200>
  4222d8:	ldur	x0, [x29, #-104]
  4222dc:	bl	402b20 <free@plt>
  4222e0:	mov	w0, wzr
  4222e4:	b	42241c <feof@plt+0x1f33c>
  4222e8:	ldrb	w22, [x8, #1242]
  4222ec:	ldp	x8, x23, [x29, #-96]
  4222f0:	cmp	x20, #0x20
  4222f4:	mov	w9, #0x20                  	// #32
  4222f8:	udiv	x24, x10, x20
  4222fc:	csel	x25, x20, x9, cc  // cc = lo, ul, last
  422300:	add	x9, x23, x24
  422304:	cmp	x9, x8
  422308:	b.ls	422328 <feof@plt+0x1f248>  // b.plast
  42230c:	ldur	x0, [x29, #-104]
  422310:	add	x1, x8, #0x100
  422314:	stur	x1, [x29, #-96]
  422318:	mov	x26, x10
  42231c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  422320:	mov	x10, x26
  422324:	stur	x0, [x29, #-104]
  422328:	cmp	x20, x10
  42232c:	b.hi	422374 <feof@plt+0x1f294>  // b.pmore
  422330:	mov	x10, #0xffffffffffffffff    	// #-1
  422334:	lsl	x10, x10, x25
  422338:	mov	w8, wzr
  42233c:	mov	x9, xzr
  422340:	eor	w10, w10, #0xff
  422344:	ldur	x12, [x29, #-104]
  422348:	mvn	x13, x9
  42234c:	cmp	w22, #0x0
  422350:	add	x13, x24, x13
  422354:	csel	x13, x9, x13, eq  // eq = none
  422358:	add	x9, x9, #0x1
  42235c:	and	w11, w8, w10
  422360:	lsr	w8, w8, w20
  422364:	add	x13, x13, x23
  422368:	cmp	x24, x9
  42236c:	strb	w11, [x12, x13]
  422370:	b.hi	422344 <feof@plt+0x1f264>  // b.pmore
  422374:	ldur	x8, [x29, #-88]
  422378:	add	x1, x8, x24
  42237c:	stur	x1, [x29, #-88]
  422380:	b	422394 <feof@plt+0x1f2b4>
  422384:	ldur	x0, [x29, #-104]
  422388:	stur	x9, [x29, #-88]
  42238c:	strb	wzr, [x0, x8]
  422390:	ldur	x1, [x29, #-88]
  422394:	ldur	x0, [x29, #-104]
  422398:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42239c:	ldr	x9, [sp, #80]
  4223a0:	stur	x0, [x29, #-104]
  4223a4:	str	x0, [x9, #8]
  4223a8:	ldur	x8, [x29, #-88]
  4223ac:	str	w8, [x9]
  4223b0:	cbz	x21, 422418 <feof@plt+0x1f338>
  4223b4:	ldr	w20, [x21]
  4223b8:	mov	w8, #0x1                   	// #1
  4223bc:	movk	w8, #0x6000, lsl #16
  4223c0:	cmp	w20, w8
  4223c4:	b.cs	4223d4 <feof@plt+0x1f2f4>  // b.hs, b.nlast
  4223c8:	ldr	w8, [x21, #4]
  4223cc:	add	w8, w8, w20
  4223d0:	str	w8, [x21]
  4223d4:	ldp	w8, w9, [x19, #8]
  4223d8:	bfi	x20, x20, #32, #32
  4223dc:	sxtw	x9, w9
  4223e0:	cmp	w8, w9
  4223e4:	b.ge	4223f0 <feof@plt+0x1f310>  // b.tcont
  4223e8:	ldr	x0, [x19]
  4223ec:	b	42240c <feof@plt+0x1f32c>
  4223f0:	ldr	x0, [x19]
  4223f4:	lsl	w8, w9, #1
  4223f8:	lsl	x1, x9, #4
  4223fc:	str	w8, [x19, #12]
  422400:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  422404:	ldr	w8, [x19, #8]
  422408:	str	x0, [x19]
  42240c:	add	w9, w8, #0x1
  422410:	str	w9, [x19, #8]
  422414:	str	x20, [x0, w8, sxtw #3]
  422418:	mov	w0, #0x1                   	// #1
  42241c:	ldp	x20, x19, [sp, #304]
  422420:	ldp	x22, x21, [sp, #288]
  422424:	ldp	x24, x23, [sp, #272]
  422428:	ldp	x26, x25, [sp, #256]
  42242c:	ldp	x28, x27, [sp, #240]
  422430:	ldp	x29, x30, [sp, #224]
  422434:	add	sp, sp, #0x140
  422438:	ret
  42243c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  422440:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422444:	add	x0, x0, #0xa9b
  422448:	add	x2, x2, #0xd25
  42244c:	mov	w1, #0x66c                 	// #1644
  422450:	bl	40f560 <feof@plt+0xc480>
  422454:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  422458:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  42245c:	add	x0, x0, #0xa9b
  422460:	add	x2, x2, #0xed7
  422464:	mov	w1, #0x540                 	// #1344
  422468:	bl	40f560 <feof@plt+0xc480>
  42246c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  422470:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422474:	add	x0, x0, #0xa9b
  422478:	add	x2, x2, #0xe1d
  42247c:	mov	w1, #0x48d                 	// #1165
  422480:	bl	40f560 <feof@plt+0xc480>
  422484:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  422488:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  42248c:	add	x0, x0, #0xa9b
  422490:	add	x2, x2, #0xe53
  422494:	mov	w1, #0x4f9                 	// #1273
  422498:	bl	40f560 <feof@plt+0xc480>
  42249c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  4224a0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4224a4:	add	x0, x0, #0xa9b
  4224a8:	add	x2, x2, #0xd25
  4224ac:	mov	w1, #0x5fc                 	// #1532
  4224b0:	bl	40f560 <feof@plt+0xc480>
  4224b4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  4224b8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4224bc:	add	x0, x0, #0xa9b
  4224c0:	add	x2, x2, #0xd25
  4224c4:	mov	w1, #0x641                 	// #1601
  4224c8:	bl	40f560 <feof@plt+0xc480>
  4224cc:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  4224d0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4224d4:	add	x0, x0, #0xa9b
  4224d8:	add	x2, x2, #0xd25
  4224dc:	mov	w1, #0x64d                 	// #1613
  4224e0:	bl	40f560 <feof@plt+0xc480>
  4224e4:	stp	x29, x30, [sp, #-32]!
  4224e8:	sub	w9, w5, #0x39
  4224ec:	stp	x20, x19, [sp, #16]
  4224f0:	mov	x6, x4
  4224f4:	mov	x8, x2
  4224f8:	cmp	w9, #0x9
  4224fc:	mov	x19, x0
  422500:	mov	x29, sp
  422504:	b.hi	422540 <feof@plt+0x1f460>  // b.pmore
  422508:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x3838>
  42250c:	add	x10, x10, #0x7ae
  422510:	adr	x11, 422520 <feof@plt+0x1f440>
  422514:	ldrb	w12, [x10, x9]
  422518:	add	x11, x11, x12, lsl #2
  42251c:	br	x11
  422520:	add	x9, x19, #0x268
  422524:	b	422544 <feof@plt+0x1f464>
  422528:	add	x9, x19, #0x238
  42252c:	b	422544 <feof@plt+0x1f464>
  422530:	add	x9, x19, #0x250
  422534:	b	422544 <feof@plt+0x1f464>
  422538:	add	x9, x19, #0x220
  42253c:	b	422544 <feof@plt+0x1f464>
  422540:	add	x9, x19, #0x208
  422544:	ldr	x9, [x9]
  422548:	adrp	x10, 422000 <feof@plt+0x1ef20>
  42254c:	add	x10, x10, #0x5ac
  422550:	cmp	x9, x10
  422554:	b.eq	422564 <feof@plt+0x1f484>  // b.none
  422558:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  42255c:	add	x0, x0, #0xba9
  422560:	b	4225a0 <feof@plt+0x1f4c0>
  422564:	ldr	x20, [x19, #1000]
  422568:	adrp	x9, 422000 <feof@plt+0x1ef20>
  42256c:	add	x9, x9, #0x628
  422570:	mov	x0, x19
  422574:	mov	x2, x3
  422578:	mov	x3, xzr
  42257c:	mov	w4, w5
  422580:	mov	x5, x8
  422584:	str	x9, [x19, #1000]
  422588:	bl	421708 <feof@plt+0x1e628>
  42258c:	adrp	x8, 46d000 <_obstack_memory_used@@Base+0xb838>
  422590:	add	x8, x8, #0xbd9
  422594:	tst	w0, #0x1
  422598:	csel	x0, xzr, x8, ne  // ne = any
  42259c:	str	x20, [x19, #1000]
  4225a0:	ldp	x20, x19, [sp, #16]
  4225a4:	ldp	x29, x30, [sp], #32
  4225a8:	ret
  4225ac:	stp	x29, x30, [sp, #-48]!
  4225b0:	str	x21, [sp, #16]
  4225b4:	stp	x20, x19, [sp, #32]
  4225b8:	ldp	x10, x8, [x3, #8]
  4225bc:	mov	x19, x3
  4225c0:	mov	x20, x2
  4225c4:	mov	x21, x1
  4225c8:	add	x9, x8, x2
  4225cc:	cmp	x9, x10
  4225d0:	mov	x29, sp
  4225d4:	b.ls	4225f4 <feof@plt+0x1f514>  // b.plast
  4225d8:	ldr	x0, [x19]
  4225dc:	add	x1, x9, x9, lsr #2
  4225e0:	str	x1, [x19, #8]
  4225e4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4225e8:	ldr	x8, [x19, #16]
  4225ec:	str	x0, [x19]
  4225f0:	b	4225f8 <feof@plt+0x1f518>
  4225f4:	ldr	x0, [x19]
  4225f8:	add	x0, x0, x8
  4225fc:	mov	x1, x21
  422600:	mov	x2, x20
  422604:	bl	4029c0 <memcpy@plt>
  422608:	ldr	x8, [x19, #16]
  42260c:	ldr	x21, [sp, #16]
  422610:	mov	w0, #0x1                   	// #1
  422614:	add	x8, x8, x20
  422618:	str	x8, [x19, #16]
  42261c:	ldp	x20, x19, [sp, #32]
  422620:	ldp	x29, x30, [sp], #48
  422624:	ret
  422628:	mov	w0, #0x1                   	// #1
  42262c:	ret
  422630:	sub	sp, sp, #0x40
  422634:	stp	x29, x30, [sp, #32]
  422638:	str	x19, [sp, #48]
  42263c:	add	x19, x0, #0x208
  422640:	ldr	x8, [x19, #16]
  422644:	ldr	q0, [x19]
  422648:	mov	w4, #0x3e                  	// #62
  42264c:	mov	x5, xzr
  422650:	str	x8, [sp, #16]
  422654:	str	q0, [sp]
  422658:	ldr	x9, [x0, #1216]
  42265c:	adrp	x8, 422000 <feof@plt+0x1ef20>
  422660:	add	x8, x8, #0x5ac
  422664:	str	x8, [x0, #520]
  422668:	mov	x8, #0xffffffffffffffff    	// #-1
  42266c:	mov	x6, xzr
  422670:	add	x29, sp, #0x20
  422674:	str	x8, [x0, #528]
  422678:	str	w9, [x19, #16]
  42267c:	bl	421708 <feof@plt+0x1e628>
  422680:	ldr	q0, [sp]
  422684:	ldr	x8, [sp, #16]
  422688:	and	w0, w0, #0x1
  42268c:	str	q0, [x19]
  422690:	str	x8, [x19, #16]
  422694:	ldr	x19, [sp, #48]
  422698:	ldp	x29, x30, [sp, #32]
  42269c:	add	sp, sp, #0x40
  4226a0:	ret
  4226a4:	sub	sp, sp, #0x70
  4226a8:	stp	x29, x30, [sp, #16]
  4226ac:	str	x27, [sp, #32]
  4226b0:	stp	x26, x25, [sp, #48]
  4226b4:	stp	x24, x23, [sp, #64]
  4226b8:	stp	x22, x21, [sp, #80]
  4226bc:	stp	x20, x19, [sp, #96]
  4226c0:	stp	xzr, xzr, [sp]
  4226c4:	mov	x21, x1
  4226c8:	ldr	w8, [x1, #8]!
  4226cc:	mov	w10, #0x2                   	// #2
  4226d0:	mov	x19, x3
  4226d4:	mov	x20, x2
  4226d8:	ldurb	w4, [x1, #-4]
  4226dc:	mov	x22, x0
  4226e0:	add	x29, sp, #0x10
  4226e4:	cmp	w4, #0x3c
  4226e8:	orr	w23, w4, #0x4
  4226ec:	cset	w9, eq  // eq = none
  4226f0:	cmp	w23, #0x3c
  4226f4:	cinc	x10, x10, ne  // ne = any
  4226f8:	add	x9, x10, w9, uxtw #1
  4226fc:	cmp	x9, x8
  422700:	b.ne	42271c <feof@plt+0x1f63c>  // b.any
  422704:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422708:	add	x2, x2, #0xbf7
  42270c:	mov	w1, #0x3                   	// #3
  422710:	mov	x0, x22
  422714:	bl	4288a0 <feof@plt+0x257c0>
  422718:	b	422778 <feof@plt+0x1f698>
  42271c:	mov	x3, sp
  422720:	mov	w2, #0x1                   	// #1
  422724:	mov	x0, x22
  422728:	mov	x5, xzr
  42272c:	mov	x6, xzr
  422730:	bl	421708 <feof@plt+0x1e628>
  422734:	tbz	w0, #0, 422778 <feof@plt+0x1f698>
  422738:	ldp	x10, x8, [sp]
  42273c:	cmp	w23, #0x3c
  422740:	b.eq	4227a8 <feof@plt+0x1f6c8>  // b.none
  422744:	ldrb	w24, [x21, #4]
  422748:	ldrb	w9, [x22, #1242]
  42274c:	sub	w11, w24, #0x39
  422750:	cmp	w11, #0x9
  422754:	b.hi	4228cc <feof@plt+0x1f7ec>  // b.pmore
  422758:	adrp	x12, 465000 <_obstack_memory_used@@Base+0x3838>
  42275c:	add	x12, x12, #0x7b8
  422760:	adr	x13, 422770 <feof@plt+0x1f690>
  422764:	ldrb	w14, [x12, x11]
  422768:	add	x13, x13, x14, lsl #2
  42276c:	br	x13
  422770:	add	x11, x22, #0x278
  422774:	b	4228d0 <feof@plt+0x1f7f0>
  422778:	mov	w23, wzr
  42277c:	str	wzr, [x20]
  422780:	str	wzr, [x19]
  422784:	mov	w0, w23
  422788:	ldp	x20, x19, [sp, #96]
  42278c:	ldp	x22, x21, [sp, #80]
  422790:	ldp	x24, x23, [sp, #64]
  422794:	ldp	x26, x25, [sp, #48]
  422798:	ldr	x27, [sp, #32]
  42279c:	ldp	x29, x30, [sp, #16]
  4227a0:	add	sp, sp, #0x70
  4227a4:	ret
  4227a8:	ldr	x25, [x22, #1216]
  4227ac:	mov	x9, #0xffffffffffffffff    	// #-1
  4227b0:	mov	w11, #0xff                  	// #255
  4227b4:	mov	w23, wzr
  4227b8:	lsl	x9, x9, x25
  4227bc:	cmp	x25, #0x20
  4227c0:	eor	x9, x9, #0xff
  4227c4:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  4227c8:	subs	w24, w10, #0x1
  4227cc:	b.eq	422860 <feof@plt+0x1f780>  // b.none
  4227d0:	ldr	x10, [x22, #1224]
  4227d4:	udiv	x26, x10, x25
  4227d8:	mov	x10, x24
  4227dc:	ldrb	w11, [x8], #1
  4227e0:	lsl	w12, w23, w25
  4227e4:	cmp	x25, #0x20
  4227e8:	csel	w12, w12, wzr, cc  // cc = lo, ul, last
  4227ec:	and	w11, w9, w11
  4227f0:	subs	x10, x10, #0x1
  4227f4:	orr	w23, w12, w11
  4227f8:	b.ne	4227dc <feof@plt+0x1f6fc>  // b.any
  4227fc:	cmp	x24, x26
  422800:	b.ls	422828 <feof@plt+0x1f748>  // b.plast
  422804:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422808:	add	x2, x2, #0xf06
  42280c:	mov	x0, x22
  422810:	mov	w1, wzr
  422814:	bl	4288a0 <feof@plt+0x257c0>
  422818:	cmp	x26, #0x1
  42281c:	b.ls	422880 <feof@plt+0x1f7a0>  // b.plast
  422820:	mov	x24, x26
  422824:	b	42284c <feof@plt+0x1f76c>
  422828:	cmp	x24, #0x2
  42282c:	b.cc	422860 <feof@plt+0x1f780>  // b.lo, b.ul, b.last
  422830:	ldrb	w8, [x22, #1137]
  422834:	cbz	w8, 42284c <feof@plt+0x1f76c>
  422838:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  42283c:	add	x2, x2, #0xf2f
  422840:	mov	w1, #0x5                   	// #5
  422844:	mov	x0, x22
  422848:	bl	4289d0 <feof@plt+0x258f0>
  42284c:	ldr	x25, [x22, #1224]
  422850:	mov	w8, wzr
  422854:	cmp	x25, #0x1f
  422858:	b.ls	422898 <feof@plt+0x1f7b8>  // b.plast
  42285c:	b	4228c0 <feof@plt+0x1f7e0>
  422860:	ldrb	w8, [x22, #1240]
  422864:	b	422888 <feof@plt+0x1f7a8>
  422868:	add	x11, x22, #0x248
  42286c:	b	4228d0 <feof@plt+0x1f7f0>
  422870:	add	x11, x22, #0x260
  422874:	b	4228d0 <feof@plt+0x1f7f0>
  422878:	add	x11, x22, #0x230
  42287c:	b	4228d0 <feof@plt+0x1f7f0>
  422880:	ldrb	w8, [x22, #1240]
  422884:	mov	x24, x26
  422888:	cmp	w8, #0x0
  42288c:	cset	w8, ne  // ne = any
  422890:	cmp	x25, #0x1f
  422894:	b.hi	4228c0 <feof@plt+0x1f7e0>  // b.pmore
  422898:	mov	w9, #0xffffffff            	// #-1
  42289c:	lsl	w9, w9, w25
  4228a0:	tbnz	w8, #0, 4228b8 <feof@plt+0x1f7d8>
  4228a4:	sub	w10, w25, #0x1
  4228a8:	lsr	w10, w23, w10
  4228ac:	tbz	w10, #0, 4228b8 <feof@plt+0x1f7d8>
  4228b0:	orr	w23, w9, w23
  4228b4:	b	4228c0 <feof@plt+0x1f7e0>
  4228b8:	mvn	w9, w9
  4228bc:	and	w23, w23, w9
  4228c0:	str	w24, [x20]
  4228c4:	str	w8, [x19]
  4228c8:	b	4229b4 <feof@plt+0x1f8d4>
  4228cc:	add	x11, x22, #0x218
  4228d0:	ldrsw	x25, [x11]
  4228d4:	ldr	x11, [x22, #1216]
  4228d8:	mov	w12, #0x20                  	// #32
  4228dc:	mov	x26, #0xffffffffffffffff    	// #-1
  4228e0:	cmp	x25, #0x20
  4228e4:	udiv	x13, x25, x11
  4228e8:	csel	x27, x25, x12, cc  // cc = lo, ul, last
  4228ec:	cmp	x11, #0x20
  4228f0:	and	x10, x10, #0xffffffff
  4228f4:	csel	x15, x11, x12, cc  // cc = lo, ul, last
  4228f8:	cmp	x11, x25
  4228fc:	lsl	x12, x13, #1
  422900:	b.ls	42290c <feof@plt+0x1f82c>  // b.plast
  422904:	mov	w23, wzr
  422908:	b	422954 <feof@plt+0x1f874>
  42290c:	lsl	x16, x26, x15
  422910:	sub	x15, x10, x12
  422914:	mov	x14, xzr
  422918:	mov	w23, wzr
  42291c:	eor	x16, x16, #0xff
  422920:	add	x17, x15, x13
  422924:	mvn	x0, x14
  422928:	add	x18, x14, x15
  42292c:	cmp	w9, #0x0
  422930:	add	x0, x17, x0
  422934:	csel	x18, x0, x18, eq  // eq = none
  422938:	ldrb	w18, [x8, x18]
  42293c:	lsl	w0, w23, w11
  422940:	add	x14, x14, #0x1
  422944:	cmp	x14, x13
  422948:	and	w18, w16, w18
  42294c:	orr	w23, w0, w18
  422950:	b.cc	422924 <feof@plt+0x1f844>  // b.lo, b.ul, b.last
  422954:	cmp	x10, x12
  422958:	b.ls	422970 <feof@plt+0x1f890>  // b.plast
  42295c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422960:	add	x2, x2, #0xf06
  422964:	mov	x0, x22
  422968:	mov	w1, wzr
  42296c:	bl	4288a0 <feof@plt+0x257c0>
  422970:	cmp	w25, #0x1f
  422974:	orr	w8, w24, #0x1
  422978:	b.hi	422998 <feof@plt+0x1f8b8>  // b.pmore
  42297c:	lsl	x9, x26, x27
  422980:	cmp	w8, #0x3b
  422984:	mvn	x9, x9
  422988:	b.eq	422994 <feof@plt+0x1f8b4>  // b.none
  42298c:	ldrb	w10, [x22, #1241]
  422990:	cbz	w10, 4229cc <feof@plt+0x1f8ec>
  422994:	and	w23, w23, w9
  422998:	mov	w9, #0x1                   	// #1
  42299c:	cmp	w8, #0x3b
  4229a0:	mov	w8, #0x1                   	// #1
  4229a4:	b.eq	4229ac <feof@plt+0x1f8cc>  // b.none
  4229a8:	ldrb	w8, [x22, #1241]
  4229ac:	str	w8, [x19]
  4229b0:	str	w9, [x20]
  4229b4:	ldr	x0, [sp, #8]
  4229b8:	ldr	x8, [x21, #16]
  4229bc:	cmp	x0, x8
  4229c0:	b.eq	422784 <feof@plt+0x1f6a4>  // b.none
  4229c4:	bl	402b20 <free@plt>
  4229c8:	b	422784 <feof@plt+0x1f6a4>
  4229cc:	sub	w10, w25, #0x1
  4229d0:	lsr	w10, w23, w10
  4229d4:	tbz	w10, #0, 422994 <feof@plt+0x1f8b4>
  4229d8:	orn	w23, w23, w9
  4229dc:	b	422998 <feof@plt+0x1f8b8>
  4229e0:	stp	x29, x30, [sp, #-96]!
  4229e4:	stp	x28, x27, [sp, #16]
  4229e8:	stp	x26, x25, [sp, #32]
  4229ec:	stp	x24, x23, [sp, #48]
  4229f0:	stp	x22, x21, [sp, #64]
  4229f4:	stp	x20, x19, [sp, #80]
  4229f8:	mov	x29, sp
  4229fc:	sub	sp, sp, #0x10
  422a00:	add	x9, x2, #0x10
  422a04:	mov	x8, sp
  422a08:	and	x9, x9, #0xfffffffffffffff0
  422a0c:	mov	x20, x0
  422a10:	sub	x19, x8, x9
  422a14:	mov	sp, x19
  422a18:	cbz	x2, 422b84 <feof@plt+0x1faa4>
  422a1c:	stur	x20, [x29, #-16]
  422a20:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12838>
  422a24:	adrp	x28, 46d000 <_obstack_memory_used@@Base+0xb838>
  422a28:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  422a2c:	mov	x21, x2
  422a30:	mov	x22, x1
  422a34:	mov	x25, xzr
  422a38:	add	x24, x19, x2
  422a3c:	mov	w13, #0x7                   	// #7
  422a40:	mov	w14, #0x3                   	// #3
  422a44:	add	x27, x27, #0xe98
  422a48:	add	x28, x28, #0x936
  422a4c:	add	x20, x20, #0xc33
  422a50:	mov	x23, x19
  422a54:	b	422a68 <feof@plt+0x1f988>
  422a58:	strb	w8, [x23], #1
  422a5c:	add	x25, x25, #0x1
  422a60:	cmp	x25, x21
  422a64:	b.cs	422b7c <feof@plt+0x1fa9c>  // b.hs, b.nlast
  422a68:	ldrb	w8, [x22, x25]
  422a6c:	cmp	w8, #0x5c
  422a70:	b.ne	422a58 <feof@plt+0x1f978>  // b.any
  422a74:	add	x9, x25, #0x2
  422a78:	cmp	x9, x21
  422a7c:	add	x25, x25, #0x1
  422a80:	mov	w8, wzr
  422a84:	b.cs	422ad0 <feof@plt+0x1f9f0>  // b.hs, b.nlast
  422a88:	ldrb	w10, [x22, x25]
  422a8c:	cmp	w10, #0x75
  422a90:	csel	w10, w14, w13, eq  // eq = none
  422a94:	ldrb	w11, [x22, x9]
  422a98:	ldrh	w12, [x27, x11, lsl #1]
  422a9c:	tbz	w12, #8, 422abc <feof@plt+0x1f9dc>
  422aa0:	ldrb	w11, [x20, x11]
  422aa4:	subs	w10, w10, #0x1
  422aa8:	add	x9, x9, #0x1
  422aac:	add	w8, w11, w8, lsl #4
  422ab0:	b.cc	422abc <feof@plt+0x1f9dc>  // b.lo, b.ul, b.last
  422ab4:	cmp	x9, x21
  422ab8:	b.cc	422a94 <feof@plt+0x1f9b4>  // b.lo, b.ul, b.last
  422abc:	cmp	w8, #0x24
  422ac0:	sub	x25, x9, #0x1
  422ac4:	b.eq	422a58 <feof@plt+0x1f978>  // b.none
  422ac8:	cmp	w8, #0x80
  422acc:	b.cs	422b14 <feof@plt+0x1fa34>  // b.hs, b.nlast
  422ad0:	sturb	w8, [x29, #-3]
  422ad4:	mov	x26, #0xffffffffffffffff    	// #-1
  422ad8:	mov	w8, #0x1                   	// #1
  422adc:	sub	x9, x24, x23
  422ae0:	cmp	x9, x8
  422ae4:	b.cc	422b8c <feof@plt+0x1faac>  // b.lo, b.ul, b.last
  422ae8:	tbz	x26, #63, 422a5c <feof@plt+0x1f97c>
  422aec:	sub	x8, x29, #0x8
  422af0:	add	x8, x8, x26
  422af4:	add	x1, x8, #0x6
  422af8:	neg	x2, x26
  422afc:	mov	x0, x23
  422b00:	bl	4029c0 <memcpy@plt>
  422b04:	mov	w14, #0x3                   	// #3
  422b08:	mov	w13, #0x7                   	// #7
  422b0c:	sub	x23, x23, x26
  422b10:	b	422a5c <feof@plt+0x1f97c>
  422b14:	mov	x9, xzr
  422b18:	sub	x10, x29, #0x8
  422b1c:	b	422b2c <feof@plt+0x1fa4c>
  422b20:	add	x9, x9, #0x1
  422b24:	sub	x10, x10, #0x1
  422b28:	mov	w8, w11
  422b2c:	mov	w11, #0x80                  	// #128
  422b30:	bfxil	w11, w8, #0, #6
  422b34:	cmp	w8, #0xfbf
  422b38:	strb	w11, [x10, #5]
  422b3c:	lsr	w11, w8, #6
  422b40:	b.hi	422b20 <feof@plt+0x1fa40>  // b.pmore
  422b44:	add	x12, x28, x9
  422b48:	ldrb	w12, [x12, #1]
  422b4c:	tst	w11, w12
  422b50:	b.ne	422b20 <feof@plt+0x1fa40>  // b.any
  422b54:	adrp	x11, 46d000 <_obstack_memory_used@@Base+0xb838>
  422b58:	add	x11, x11, #0x930
  422b5c:	add	x11, x11, x9
  422b60:	ldrb	w11, [x11, #1]
  422b64:	mov	x12, #0xfffffffffffffffe    	// #-2
  422b68:	sub	x26, x12, x9
  422b6c:	orr	w8, w11, w8, lsr #6
  422b70:	strb	w8, [x10, #4]
  422b74:	add	x8, x9, #0x2
  422b78:	b	422adc <feof@plt+0x1f9fc>
  422b7c:	ldur	x20, [x29, #-16]
  422b80:	b	422bb0 <feof@plt+0x1fad0>
  422b84:	mov	x23, x19
  422b88:	b	422bb0 <feof@plt+0x1fad0>
  422b8c:	bl	402e70 <__errno_location@plt>
  422b90:	ldur	x20, [x29, #-16]
  422b94:	mov	w8, #0x7                   	// #7
  422b98:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422b9c:	str	w8, [x0]
  422ba0:	add	x2, x2, #0xc10
  422ba4:	mov	w1, #0x3                   	// #3
  422ba8:	mov	x0, x20
  422bac:	bl	4292f8 <feof@plt+0x26218>
  422bb0:	ldr	x0, [x20, #1088]
  422bb4:	sub	x2, x23, x19
  422bb8:	mov	w3, #0x1                   	// #1
  422bbc:	mov	x1, x19
  422bc0:	bl	43cee8 <feof@plt+0x39e08>
  422bc4:	mov	sp, x29
  422bc8:	ldp	x20, x19, [sp, #80]
  422bcc:	ldp	x22, x21, [sp, #64]
  422bd0:	ldp	x24, x23, [sp, #48]
  422bd4:	ldp	x26, x25, [sp, #32]
  422bd8:	ldp	x28, x27, [sp, #16]
  422bdc:	ldp	x29, x30, [sp], #96
  422be0:	ret
  422be4:	sub	sp, sp, #0x70
  422be8:	stp	x22, x21, [sp, #80]
  422bec:	mov	x21, x2
  422bf0:	mov	x2, x1
  422bf4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0xb838>
  422bf8:	add	x1, x1, #0xce2
  422bfc:	add	x8, sp, #0x8
  422c00:	stp	x29, x30, [sp, #32]
  422c04:	str	x25, [sp, #48]
  422c08:	stp	x24, x23, [sp, #64]
  422c0c:	stp	x20, x19, [sp, #96]
  422c10:	add	x29, sp, #0x20
  422c14:	mov	x20, x6
  422c18:	mov	x19, x5
  422c1c:	mov	x24, x4
  422c20:	mov	x23, x3
  422c24:	mov	x22, x0
  422c28:	bl	420bd0 <feof@plt+0x1daf0>
  422c2c:	ldr	x25, [sp, #8]
  422c30:	adrp	x8, 422000 <feof@plt+0x1ef20>
  422c34:	add	x8, x8, #0x5ac
  422c38:	cmp	x25, x8
  422c3c:	b.eq	422cbc <feof@plt+0x1fbdc>  // b.none
  422c40:	ldr	x23, [sp, #16]
  422c44:	cmp	x24, #0x10, lsl #12
  422c48:	mov	w8, #0x10000               	// #65536
  422c4c:	csel	x0, x24, x8, hi  // hi = pmore
  422c50:	str	x0, [sp, #16]
  422c54:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  422c58:	str	x0, [sp, #8]
  422c5c:	add	x3, sp, #0x8
  422c60:	mov	x0, x23
  422c64:	mov	x1, x21
  422c68:	mov	x2, x24
  422c6c:	str	xzr, [sp, #24]
  422c70:	blr	x25
  422c74:	tbnz	w0, #0, 422c98 <feof@plt+0x1fbb8>
  422c78:	ldr	x3, [x22, #1184]
  422c7c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  422c80:	adrp	x4, 46d000 <_obstack_memory_used@@Base+0xb838>
  422c84:	add	x2, x2, #0xc37
  422c88:	add	x4, x4, #0xce2
  422c8c:	mov	w1, #0x3                   	// #3
  422c90:	mov	x0, x22
  422c94:	bl	4288a0 <feof@plt+0x257c0>
  422c98:	mov	x0, x21
  422c9c:	bl	402b20 <free@plt>
  422ca0:	adrp	x8, 420000 <feof@plt+0x1cf20>
  422ca4:	add	x8, x8, #0xe90
  422ca8:	cmp	x25, x8
  422cac:	b.ne	422cc4 <feof@plt+0x1fbe4>  // b.any
  422cb0:	mov	x0, x23
  422cb4:	bl	4029b0 <iconv_close@plt>
  422cb8:	b	422cc4 <feof@plt+0x1fbe4>
  422cbc:	stp	x21, x23, [sp, #8]
  422cc0:	str	x24, [sp, #24]
  422cc4:	ldp	x9, x8, [sp, #16]
  422cc8:	ldr	x0, [sp, #8]
  422ccc:	add	x10, x8, #0x1, lsl #12
  422cd0:	cmp	x10, x9
  422cd4:	add	x1, x8, #0x10
  422cd8:	b.cc	422ce4 <feof@plt+0x1fc04>  // b.lo, b.ul, b.last
  422cdc:	cmp	x1, x9
  422ce0:	b.ls	422cf0 <feof@plt+0x1fc10>  // b.plast
  422ce4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  422ce8:	ldr	x8, [sp, #24]
  422cec:	str	x0, [sp, #8]
  422cf0:	add	x8, x0, x8
  422cf4:	stp	xzr, xzr, [x8]
  422cf8:	ldr	x8, [sp, #24]
  422cfc:	ldr	x9, [sp, #8]
  422d00:	cbz	x8, 422d14 <feof@plt+0x1fc34>
  422d04:	add	x10, x8, x9
  422d08:	ldurb	w10, [x10, #-1]
  422d0c:	cmp	w10, #0xd
  422d10:	b.eq	422d18 <feof@plt+0x1fc38>  // b.none
  422d14:	mov	w10, #0xa                   	// #10
  422d18:	strb	w10, [x9, x8]
  422d1c:	ldr	x10, [sp, #24]
  422d20:	ldr	x8, [sp, #8]
  422d24:	subs	x9, x10, #0x3
  422d28:	mov	x0, x8
  422d2c:	str	x10, [x20]
  422d30:	b.cc	422d6c <feof@plt+0x1fc8c>  // b.lo, b.ul, b.last
  422d34:	ldrb	w10, [x8]
  422d38:	mov	x0, x8
  422d3c:	cmp	w10, #0xef
  422d40:	b.ne	422d6c <feof@plt+0x1fc8c>  // b.any
  422d44:	ldrb	w10, [x8, #1]
  422d48:	mov	x0, x8
  422d4c:	cmp	w10, #0xbb
  422d50:	b.ne	422d6c <feof@plt+0x1fc8c>  // b.any
  422d54:	ldrb	w10, [x8, #2]
  422d58:	mov	x0, x8
  422d5c:	cmp	w10, #0xbf
  422d60:	b.ne	422d6c <feof@plt+0x1fc8c>  // b.any
  422d64:	add	x0, x8, #0x3
  422d68:	str	x9, [x20]
  422d6c:	str	x8, [x19]
  422d70:	ldp	x20, x19, [sp, #96]
  422d74:	ldp	x22, x21, [sp, #80]
  422d78:	ldp	x24, x23, [sp, #64]
  422d7c:	ldr	x25, [sp, #48]
  422d80:	ldp	x29, x30, [sp, #32]
  422d84:	add	sp, sp, #0x70
  422d88:	ret
  422d8c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0xb838>
  422d90:	add	x0, x0, #0xce2
  422d94:	ret
  422d98:	stp	x29, x30, [sp, #-48]!
  422d9c:	stp	x20, x19, [sp, #32]
  422da0:	mov	x20, x0
  422da4:	str	x2, [x0, #8]
  422da8:	mov	x0, x2
  422dac:	str	x21, [sp, #16]
  422db0:	mov	x29, sp
  422db4:	mov	x19, x2
  422db8:	bl	4347b4 <feof@plt+0x316d4>
  422dbc:	mov	x1, x0
  422dc0:	mov	w2, #0x1                   	// #1
  422dc4:	mov	x0, x19
  422dc8:	mov	x3, xzr
  422dcc:	mov	w21, #0x1                   	// #1
  422dd0:	bl	435630 <feof@plt+0x32550>
  422dd4:	mov	w1, w0
  422dd8:	str	w0, [x20]
  422ddc:	mov	x0, x19
  422de0:	bl	4345c8 <feof@plt+0x314e8>
  422de4:	ldrb	w8, [x0, #7]
  422de8:	lsl	w8, w21, w8
  422dec:	str	w8, [x20, #4]
  422df0:	ldp	x20, x19, [sp, #32]
  422df4:	ldr	x21, [sp, #16]
  422df8:	ldp	x29, x30, [sp], #48
  422dfc:	ret
  422e00:	stp	x29, x30, [sp, #-96]!
  422e04:	str	x27, [sp, #16]
  422e08:	stp	x26, x25, [sp, #32]
  422e0c:	stp	x24, x23, [sp, #48]
  422e10:	stp	x22, x21, [sp, #64]
  422e14:	stp	x20, x19, [sp, #80]
  422e18:	ldp	x10, x9, [x3, #8]
  422e1c:	ldr	x8, [x3]
  422e20:	cmp	x0, #0x0
  422e24:	mov	w11, #0x3                   	// #3
  422e28:	mov	w12, #0x1                   	// #1
  422e2c:	mov	x19, x3
  422e30:	mov	x21, x2
  422e34:	mov	x20, x1
  422e38:	csel	x22, x11, xzr, ne  // ne = any
  422e3c:	add	x8, x8, x9
  422e40:	sub	x9, x10, x9
  422e44:	cinc	x23, x12, ne  // ne = any
  422e48:	cinc	x24, x12, eq  // eq = none
  422e4c:	csel	x25, xzr, x11, ne  // ne = any
  422e50:	mov	x29, sp
  422e54:	mov	x26, x9
  422e58:	subs	x9, x26, #0x4
  422e5c:	b.cc	422f80 <feof@plt+0x1fea0>  // b.lo, b.ul, b.last
  422e60:	cbz	x21, 423004 <feof@plt+0x1ff24>
  422e64:	ldrsb	w11, [x20]
  422e68:	and	w10, w11, #0xff
  422e6c:	tbz	w11, #31, 422fc8 <feof@plt+0x1fee8>
  422e70:	and	w11, w10, #0xe0
  422e74:	cmp	w11, #0xc0
  422e78:	b.ne	422e88 <feof@plt+0x1fda8>  // b.any
  422e7c:	mov	w13, #0x1f                  	// #31
  422e80:	mov	w11, #0x2                   	// #2
  422e84:	b	422ee4 <feof@plt+0x1fe04>
  422e88:	and	w11, w10, #0xf0
  422e8c:	cmp	w11, #0xe0
  422e90:	b.ne	422ea0 <feof@plt+0x1fdc0>  // b.any
  422e94:	mov	w13, #0xf                   	// #15
  422e98:	mov	w11, #0x3                   	// #3
  422e9c:	b	422ee4 <feof@plt+0x1fe04>
  422ea0:	and	w11, w10, #0xf8
  422ea4:	cmp	w11, #0xf0
  422ea8:	b.ne	422eb8 <feof@plt+0x1fdd8>  // b.any
  422eac:	mov	w13, #0x7                   	// #7
  422eb0:	mov	w11, #0x4                   	// #4
  422eb4:	b	422ee4 <feof@plt+0x1fe04>
  422eb8:	and	w11, w10, #0xfc
  422ebc:	cmp	w11, #0xf8
  422ec0:	b.ne	422ed0 <feof@plt+0x1fdf0>  // b.any
  422ec4:	mov	w13, #0x3                   	// #3
  422ec8:	mov	w11, #0x5                   	// #5
  422ecc:	b	422ee4 <feof@plt+0x1fe04>
  422ed0:	and	w11, w10, #0xfe
  422ed4:	cmp	w11, #0xfc
  422ed8:	b.ne	42304c <feof@plt+0x1ff6c>  // b.any
  422edc:	mov	w13, #0x1                   	// #1
  422ee0:	mov	w11, #0x6                   	// #6
  422ee4:	subs	x12, x21, x11
  422ee8:	b.cc	423034 <feof@plt+0x1ff54>  // b.lo, b.ul, b.last
  422eec:	and	w10, w13, w10
  422ef0:	mov	w14, #0x1                   	// #1
  422ef4:	mov	w13, w10
  422ef8:	ldrb	w10, [x20, x14]
  422efc:	and	w15, w10, #0xc0
  422f00:	cmp	w15, #0x80
  422f04:	b.ne	422f60 <feof@plt+0x1fe80>  // b.any
  422f08:	add	x14, x14, #0x1
  422f0c:	cmp	x11, x14
  422f10:	bfi	w10, w13, #6, #26
  422f14:	b.ne	422ef4 <feof@plt+0x1fe14>  // b.any
  422f18:	cmp	w10, #0x80
  422f1c:	b.cc	422f60 <feof@plt+0x1fe80>  // b.lo, b.ul, b.last
  422f20:	cmp	x11, #0x3
  422f24:	b.cc	422f30 <feof@plt+0x1fe50>  // b.lo, b.ul, b.last
  422f28:	cmp	w10, #0x800
  422f2c:	b.cc	422f60 <feof@plt+0x1fe80>  // b.lo, b.ul, b.last
  422f30:	cmp	x11, #0x4
  422f34:	b.cc	422f40 <feof@plt+0x1fe60>  // b.lo, b.ul, b.last
  422f38:	cmp	w10, #0x10, lsl #12
  422f3c:	b.cc	422f60 <feof@plt+0x1fe80>  // b.lo, b.ul, b.last
  422f40:	cmp	x11, #0x5
  422f44:	b.cc	422f50 <feof@plt+0x1fe70>  // b.lo, b.ul, b.last
  422f48:	cmp	w10, #0x200, lsl #12
  422f4c:	b.cc	422f60 <feof@plt+0x1fe80>  // b.lo, b.ul, b.last
  422f50:	cmp	x11, #0x6
  422f54:	b.cc	422f68 <feof@plt+0x1fe88>  // b.lo, b.ul, b.last
  422f58:	lsr	w14, w10, #26
  422f5c:	cbnz	w14, 422f68 <feof@plt+0x1fe88>
  422f60:	mov	w27, #0x54                  	// #84
  422f64:	b	422f84 <feof@plt+0x1fea4>
  422f68:	mov	w27, #0x54                  	// #84
  422f6c:	tbnz	w10, #31, 422f84 <feof@plt+0x1fea4>
  422f70:	and	w13, w13, #0x3ffffe0
  422f74:	cmp	w13, #0x360
  422f78:	b.eq	422f84 <feof@plt+0x1fea4>  // b.none
  422f7c:	b	422ff8 <feof@plt+0x1ff18>
  422f80:	mov	w27, #0x7                   	// #7
  422f84:	cbz	x21, 423004 <feof@plt+0x1ff24>
  422f88:	cmp	w27, #0x7
  422f8c:	b.ne	423038 <feof@plt+0x1ff58>  // b.any
  422f90:	ldp	x0, x8, [x19]
  422f94:	add	x27, x26, #0x100
  422f98:	add	x1, x8, #0x100
  422f9c:	str	x1, [x19, #8]
  422fa0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  422fa4:	ldr	x8, [x19, #8]
  422fa8:	str	x0, [x19]
  422fac:	add	x8, x0, x8
  422fb0:	sub	x8, x8, x26
  422fb4:	sub	x8, x8, #0x100
  422fb8:	mov	x26, x27
  422fbc:	subs	x9, x26, #0x4
  422fc0:	b.cs	422e60 <feof@plt+0x1fd80>  // b.hs, b.nlast
  422fc4:	b	422f80 <feof@plt+0x1fea0>
  422fc8:	sub	x21, x21, #0x1
  422fcc:	add	x20, x20, #0x1
  422fd0:	strb	w10, [x8, x22]
  422fd4:	lsr	w11, w10, #8
  422fd8:	lsr	w12, w10, #16
  422fdc:	lsr	w10, w10, #24
  422fe0:	strb	w11, [x8, x23]
  422fe4:	strb	w12, [x8, x24]
  422fe8:	strb	w10, [x8, x25]
  422fec:	add	x8, x8, #0x4
  422ff0:	cbnz	x21, 422e54 <feof@plt+0x1fd74>
  422ff4:	b	423008 <feof@plt+0x1ff28>
  422ff8:	add	x20, x20, x11
  422ffc:	mov	x21, x12
  423000:	b	422fd0 <feof@plt+0x1fef0>
  423004:	mov	x9, x26
  423008:	ldr	x8, [x19, #8]
  42300c:	mov	w0, #0x1                   	// #1
  423010:	sub	x8, x8, x9
  423014:	str	x8, [x19, #16]
  423018:	ldp	x20, x19, [sp, #80]
  42301c:	ldp	x22, x21, [sp, #64]
  423020:	ldp	x24, x23, [sp, #48]
  423024:	ldp	x26, x25, [sp, #32]
  423028:	ldr	x27, [sp, #16]
  42302c:	ldp	x29, x30, [sp], #96
  423030:	ret
  423034:	mov	w27, #0x16                  	// #22
  423038:	bl	402e70 <__errno_location@plt>
  42303c:	mov	x8, x0
  423040:	mov	w0, wzr
  423044:	str	w27, [x8]
  423048:	b	423018 <feof@plt+0x1ff38>
  42304c:	mov	w27, #0x54                  	// #84
  423050:	b	423038 <feof@plt+0x1ff58>
  423054:	sub	sp, sp, #0x70
  423058:	stp	x29, x30, [sp, #16]
  42305c:	stp	x28, x27, [sp, #32]
  423060:	stp	x26, x25, [sp, #48]
  423064:	stp	x24, x23, [sp, #64]
  423068:	stp	x22, x21, [sp, #80]
  42306c:	stp	x20, x19, [sp, #96]
  423070:	ldp	x10, x9, [x3, #8]
  423074:	ldr	x8, [x3]
  423078:	cmp	x0, #0x0
  42307c:	mov	w11, #0x2                   	// #2
  423080:	mov	x19, x3
  423084:	mov	x21, x2
  423088:	mov	x20, x1
  42308c:	cset	w22, eq  // eq = none
  423090:	cset	w23, ne  // ne = any
  423094:	cinc	x12, x11, ne  // ne = any
  423098:	cinc	x26, x11, eq  // eq = none
  42309c:	add	x8, x8, x9
  4230a0:	sub	x25, x10, x9
  4230a4:	add	x29, sp, #0x10
  4230a8:	str	x12, [sp, #8]
  4230ac:	sub	x28, x21, #0x1
  4230b0:	add	x27, x20, #0x1
  4230b4:	cbz	x21, 4232a8 <feof@plt+0x201c8>
  4230b8:	ldrsb	w10, [x20]
  4230bc:	and	w9, w10, #0xff
  4230c0:	tbnz	w10, #31, 4230e4 <feof@plt+0x20004>
  4230c4:	mov	x11, x27
  4230c8:	mov	x10, x28
  4230cc:	cmp	x25, #0x2
  4230d0:	b.cs	42327c <feof@plt+0x2019c>  // b.hs, b.nlast
  4230d4:	mov	w24, #0x7                   	// #7
  4230d8:	cmp	w24, #0x7
  4230dc:	b.eq	423204 <feof@plt+0x20124>  // b.none
  4230e0:	b	4232c0 <feof@plt+0x201e0>
  4230e4:	and	w10, w9, #0xe0
  4230e8:	cmp	w10, #0xc0
  4230ec:	b.ne	4230fc <feof@plt+0x2001c>  // b.any
  4230f0:	mov	w11, #0x1f                  	// #31
  4230f4:	mov	w12, #0x2                   	// #2
  4230f8:	b	423158 <feof@plt+0x20078>
  4230fc:	and	w10, w9, #0xf0
  423100:	cmp	w10, #0xe0
  423104:	b.ne	423114 <feof@plt+0x20034>  // b.any
  423108:	mov	w11, #0xf                   	// #15
  42310c:	mov	w12, #0x3                   	// #3
  423110:	b	423158 <feof@plt+0x20078>
  423114:	and	w10, w9, #0xf8
  423118:	cmp	w10, #0xf0
  42311c:	b.ne	42312c <feof@plt+0x2004c>  // b.any
  423120:	mov	w11, #0x7                   	// #7
  423124:	mov	w12, #0x4                   	// #4
  423128:	b	423158 <feof@plt+0x20078>
  42312c:	and	w10, w9, #0xfc
  423130:	cmp	w10, #0xf8
  423134:	b.ne	423144 <feof@plt+0x20064>  // b.any
  423138:	mov	w11, #0x3                   	// #3
  42313c:	mov	w12, #0x5                   	// #5
  423140:	b	423158 <feof@plt+0x20078>
  423144:	and	w10, w9, #0xfe
  423148:	cmp	w10, #0xfc
  42314c:	b.ne	4232f0 <feof@plt+0x20210>  // b.any
  423150:	mov	w11, #0x1                   	// #1
  423154:	mov	w12, #0x6                   	// #6
  423158:	subs	x10, x21, x12
  42315c:	b.cc	4232bc <feof@plt+0x201dc>  // b.lo, b.ul, b.last
  423160:	and	w9, w11, w9
  423164:	add	x11, x20, x12
  423168:	mov	w14, #0x1                   	// #1
  42316c:	mov	w13, w9
  423170:	ldrb	w9, [x20, x14]
  423174:	and	w15, w9, #0xc0
  423178:	cmp	w15, #0x80
  42317c:	b.ne	4231f8 <feof@plt+0x20118>  // b.any
  423180:	add	x14, x14, #0x1
  423184:	cmp	x12, x14
  423188:	bfi	w9, w13, #6, #26
  42318c:	b.ne	42316c <feof@plt+0x2008c>  // b.any
  423190:	cmp	w9, #0x80
  423194:	b.cc	4231f8 <feof@plt+0x20118>  // b.lo, b.ul, b.last
  423198:	cmp	x12, #0x3
  42319c:	b.cc	4231a8 <feof@plt+0x200c8>  // b.lo, b.ul, b.last
  4231a0:	cmp	w9, #0x800
  4231a4:	b.cc	4231f8 <feof@plt+0x20118>  // b.lo, b.ul, b.last
  4231a8:	cmp	x12, #0x4
  4231ac:	b.cc	4231b8 <feof@plt+0x200d8>  // b.lo, b.ul, b.last
  4231b0:	cmp	w9, #0x10, lsl #12
  4231b4:	b.cc	4231f8 <feof@plt+0x20118>  // b.lo, b.ul, b.last
  4231b8:	cmp	x12, #0x5
  4231bc:	b.cc	4231c8 <feof@plt+0x200e8>  // b.lo, b.ul, b.last
  4231c0:	cmp	w9, #0x200, lsl #12
  4231c4:	b.cc	4231f8 <feof@plt+0x20118>  // b.lo, b.ul, b.last
  4231c8:	cmp	x12, #0x6
  4231cc:	b.cc	4231d8 <feof@plt+0x200f8>  // b.lo, b.ul, b.last
  4231d0:	lsr	w12, w9, #26
  4231d4:	cbz	w12, 4231f8 <feof@plt+0x20118>
  4231d8:	mov	w24, #0x54                  	// #84
  4231dc:	tbnz	w9, #31, 4231fc <feof@plt+0x2011c>
  4231e0:	and	w12, w13, #0x3ffffe0
  4231e4:	cmp	w12, #0x360
  4231e8:	b.eq	4231fc <feof@plt+0x2011c>  // b.none
  4231ec:	lsr	w12, w9, #16
  4231f0:	cmp	w12, #0x10
  4231f4:	b.ls	423238 <feof@plt+0x20158>  // b.plast
  4231f8:	mov	w24, #0x54                  	// #84
  4231fc:	cmp	w24, #0x7
  423200:	b.ne	4232c0 <feof@plt+0x201e0>  // b.any
  423204:	ldp	x0, x8, [x19]
  423208:	add	x24, x25, #0x100
  42320c:	add	x1, x8, #0x100
  423210:	str	x1, [x19, #8]
  423214:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  423218:	ldr	x8, [x19, #8]
  42321c:	str	x0, [x19]
  423220:	add	x8, x0, x8
  423224:	sub	x8, x8, x25
  423228:	sub	x8, x8, #0x100
  42322c:	mov	x25, x24
  423230:	cbnz	x21, 4230b8 <feof@plt+0x1ffd8>
  423234:	b	4232a8 <feof@plt+0x201c8>
  423238:	cbz	w12, 4230cc <feof@plt+0x1ffec>
  42323c:	cmp	x25, #0x4
  423240:	b.cc	4230d4 <feof@plt+0x1fff4>  // b.lo, b.ul, b.last
  423244:	sub	w14, w9, #0x10, lsl #12
  423248:	mov	w15, #0xd800                	// #55296
  42324c:	add	w15, w15, w14, lsr #10
  423250:	strb	w15, [x8, x23]
  423254:	lsr	w15, w15, #8
  423258:	strb	w15, [x8, x22]
  42325c:	ldr	x15, [sp, #8]
  423260:	mov	w9, #0xffffffdc            	// #-36
  423264:	mov	x12, #0xfffffffffffffffc    	// #-4
  423268:	mov	x13, x26
  42326c:	bfxil	w9, w14, #8, #2
  423270:	strb	w14, [x8, x15]
  423274:	mov	w14, #0x4                   	// #4
  423278:	b	423290 <feof@plt+0x201b0>
  42327c:	strb	w9, [x8, x23]
  423280:	lsr	w9, w9, #8
  423284:	mov	x12, #0xfffffffffffffffe    	// #-2
  423288:	mov	x13, x22
  42328c:	mov	w14, #0x2                   	// #2
  423290:	strb	w9, [x8, x13]
  423294:	add	x8, x8, x14
  423298:	add	x25, x25, x12
  42329c:	mov	x20, x11
  4232a0:	mov	x21, x10
  4232a4:	cbnz	x10, 4230ac <feof@plt+0x1ffcc>
  4232a8:	ldr	x8, [x19, #8]
  4232ac:	mov	w0, #0x1                   	// #1
  4232b0:	sub	x8, x8, x25
  4232b4:	str	x8, [x19, #16]
  4232b8:	b	4232d0 <feof@plt+0x201f0>
  4232bc:	mov	w24, #0x16                  	// #22
  4232c0:	bl	402e70 <__errno_location@plt>
  4232c4:	mov	x8, x0
  4232c8:	mov	w0, wzr
  4232cc:	str	w24, [x8]
  4232d0:	ldp	x20, x19, [sp, #96]
  4232d4:	ldp	x22, x21, [sp, #80]
  4232d8:	ldp	x24, x23, [sp, #64]
  4232dc:	ldp	x26, x25, [sp, #48]
  4232e0:	ldp	x28, x27, [sp, #32]
  4232e4:	ldp	x29, x30, [sp, #16]
  4232e8:	add	sp, sp, #0x70
  4232ec:	ret
  4232f0:	mov	w24, #0x54                  	// #84
  4232f4:	b	4232c0 <feof@plt+0x201e0>
  4232f8:	sub	sp, sp, #0x70
  4232fc:	stp	x29, x30, [sp, #16]
  423300:	stp	x28, x27, [sp, #32]
  423304:	stp	x26, x25, [sp, #48]
  423308:	stp	x24, x23, [sp, #64]
  42330c:	stp	x22, x21, [sp, #80]
  423310:	stp	x20, x19, [sp, #96]
  423314:	ldp	x10, x8, [x3, #8]
  423318:	ldr	x9, [x3]
  42331c:	cmp	x0, #0x0
  423320:	mov	w11, #0x3                   	// #3
  423324:	mov	w12, #0x1                   	// #1
  423328:	adrp	x26, 46d000 <_obstack_memory_used@@Base+0xb838>
  42332c:	adrp	x16, 46d000 <_obstack_memory_used@@Base+0xb838>
  423330:	mov	x19, x3
  423334:	mov	x20, x2
  423338:	mov	x21, x1
  42333c:	mov	w13, #0x7ffffffe            	// #2147483646
  423340:	mov	w14, #0xd800                	// #55296
  423344:	add	x15, sp, #0x8
  423348:	add	x26, x26, #0x936
  42334c:	add	x16, x16, #0x930
  423350:	csel	x17, xzr, x11, ne  // ne = any
  423354:	cinc	x25, x12, eq  // eq = none
  423358:	cinc	x27, x12, ne  // ne = any
  42335c:	csel	x24, x11, xzr, ne  // ne = any
  423360:	add	x0, x9, x8
  423364:	sub	x23, x10, x8
  423368:	mov	x18, #0xfffffffffffffffe    	// #-2
  42336c:	add	x29, sp, #0x10
  423370:	mov	x22, x23
  423374:	cmp	x20, #0x4
  423378:	b.cs	423388 <feof@plt+0x202a8>  // b.hs, b.nlast
  42337c:	mov	w23, #0x16                  	// #22
  423380:	cbz	x20, 4234f4 <feof@plt+0x20414>
  423384:	b	423440 <feof@plt+0x20360>
  423388:	ldrb	w8, [x21, x17]
  42338c:	ldrb	w11, [x21, x25]
  423390:	ldrb	w12, [x21, x27]
  423394:	ldrb	w9, [x21, x24]
  423398:	lsl	w10, w8, #24
  42339c:	bfi	w10, w11, #16, #8
  4233a0:	bfi	w10, w12, #8, #8
  4233a4:	orr	w8, w10, w9
  4233a8:	cmp	w8, w13
  4233ac:	mov	w23, #0x54                  	// #84
  4233b0:	b.hi	423528 <feof@plt+0x20448>  // b.pmore
  4233b4:	and	w10, w10, #0xfffff800
  4233b8:	cmp	w10, w14
  4233bc:	b.eq	423528 <feof@plt+0x20448>  // b.none
  4233c0:	cmp	w8, #0x80
  4233c4:	b.cs	4233d8 <feof@plt+0x202f8>  // b.hs, b.nlast
  4233c8:	strb	w9, [sp, #13]
  4233cc:	mov	x28, #0xffffffffffffffff    	// #-1
  4233d0:	mov	w8, #0x1                   	// #1
  4233d4:	b	423430 <feof@plt+0x20350>
  4233d8:	mov	x9, xzr
  4233dc:	add	x10, sp, #0x8
  4233e0:	b	4233f0 <feof@plt+0x20310>
  4233e4:	add	x9, x9, #0x1
  4233e8:	sub	x10, x10, #0x1
  4233ec:	mov	w8, w11
  4233f0:	mov	w11, #0x80                  	// #128
  4233f4:	bfxil	w11, w8, #0, #6
  4233f8:	cmp	w8, #0xfbf
  4233fc:	strb	w11, [x10, #5]
  423400:	lsr	w11, w8, #6
  423404:	b.hi	4233e4 <feof@plt+0x20304>  // b.pmore
  423408:	add	x12, x26, x9
  42340c:	ldrb	w12, [x12, #1]
  423410:	tst	w11, w12
  423414:	b.ne	4233e4 <feof@plt+0x20304>  // b.any
  423418:	add	x11, x16, x9
  42341c:	ldrb	w11, [x11, #1]
  423420:	sub	x28, x18, x9
  423424:	orr	w8, w11, w8, lsr #6
  423428:	strb	w8, [x10, #4]
  42342c:	add	x8, x9, #0x2
  423430:	subs	x23, x22, x8
  423434:	b.cs	4234a4 <feof@plt+0x203c4>  // b.hs, b.nlast
  423438:	mov	w23, #0x7                   	// #7
  42343c:	cbz	x20, 4234f4 <feof@plt+0x20414>
  423440:	cmp	w23, #0x7
  423444:	b.ne	423528 <feof@plt+0x20448>  // b.any
  423448:	ldp	x0, x8, [x19]
  42344c:	add	x9, x22, #0x100
  423450:	str	x9, [sp]
  423454:	mov	x28, x16
  423458:	add	x1, x8, #0x100
  42345c:	str	x1, [x19, #8]
  423460:	mov	x23, x17
  423464:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  423468:	ldr	x8, [x19, #8]
  42346c:	mov	x18, #0xfffffffffffffffe    	// #-2
  423470:	mov	x17, x23
  423474:	mov	x16, x28
  423478:	add	x8, x0, x8
  42347c:	sub	x8, x8, x22
  423480:	ldr	x22, [sp]
  423484:	add	x15, sp, #0x8
  423488:	mov	w14, #0xd800                	// #55296
  42348c:	mov	w13, #0x7ffffffe            	// #2147483646
  423490:	str	x0, [x19]
  423494:	sub	x0, x8, #0x100
  423498:	cmp	x20, #0x4
  42349c:	b.cs	423388 <feof@plt+0x202a8>  // b.hs, b.nlast
  4234a0:	b	42337c <feof@plt+0x2029c>
  4234a4:	tbz	x28, #63, 4234e4 <feof@plt+0x20404>
  4234a8:	add	x8, x15, x28
  4234ac:	add	x1, x8, #0x6
  4234b0:	neg	x2, x28
  4234b4:	mov	x22, x0
  4234b8:	str	x17, [sp]
  4234bc:	bl	4029c0 <memcpy@plt>
  4234c0:	ldr	x17, [sp]
  4234c4:	mov	x0, x22
  4234c8:	adrp	x16, 46d000 <_obstack_memory_used@@Base+0xb838>
  4234cc:	mov	x18, #0xfffffffffffffffe    	// #-2
  4234d0:	add	x16, x16, #0x930
  4234d4:	add	x15, sp, #0x8
  4234d8:	mov	w14, #0xd800                	// #55296
  4234dc:	mov	w13, #0x7ffffffe            	// #2147483646
  4234e0:	sub	x0, x22, x28
  4234e4:	subs	x20, x20, #0x4
  4234e8:	add	x21, x21, #0x4
  4234ec:	b.ne	423370 <feof@plt+0x20290>  // b.any
  4234f0:	b	4234f8 <feof@plt+0x20418>
  4234f4:	mov	x23, x22
  4234f8:	ldr	x8, [x19, #8]
  4234fc:	mov	w0, #0x1                   	// #1
  423500:	sub	x8, x8, x23
  423504:	str	x8, [x19, #16]
  423508:	ldp	x20, x19, [sp, #96]
  42350c:	ldp	x22, x21, [sp, #80]
  423510:	ldp	x24, x23, [sp, #64]
  423514:	ldp	x26, x25, [sp, #48]
  423518:	ldp	x28, x27, [sp, #32]
  42351c:	ldp	x29, x30, [sp, #16]
  423520:	add	sp, sp, #0x70
  423524:	ret
  423528:	bl	402e70 <__errno_location@plt>
  42352c:	mov	x8, x0
  423530:	mov	w0, wzr
  423534:	str	w23, [x8]
  423538:	b	423508 <feof@plt+0x20428>
  42353c:	sub	sp, sp, #0x80
  423540:	stp	x29, x30, [sp, #32]
  423544:	stp	x28, x27, [sp, #48]
  423548:	stp	x26, x25, [sp, #64]
  42354c:	stp	x24, x23, [sp, #80]
  423550:	stp	x22, x21, [sp, #96]
  423554:	stp	x20, x19, [sp, #112]
  423558:	ldp	x10, x8, [x3, #8]
  42355c:	ldr	x9, [x3]
  423560:	add	x29, sp, #0x20
  423564:	mov	x20, x2
  423568:	cmp	x0, #0x0
  42356c:	mov	w13, #0x2                   	// #2
  423570:	mov	w14, #0x2400                	// #9216
  423574:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0xb838>
  423578:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  42357c:	mov	x19, x3
  423580:	mov	x21, x1
  423584:	movk	w14, #0xfca0, lsl #16
  423588:	sub	x15, x29, #0x8
  42358c:	mov	w16, #0x4                   	// #4
  423590:	mov	x17, #0xfffffffffffffffc    	// #-4
  423594:	mov	x18, #0xfffffffffffffffe    	// #-2
  423598:	add	x25, x25, #0x936
  42359c:	cset	w26, ne  // ne = any
  4235a0:	cset	w27, eq  // eq = none
  4235a4:	cinc	x3, x13, eq  // eq = none
  4235a8:	cinc	x1, x13, ne  // ne = any
  4235ac:	add	x0, x9, x8
  4235b0:	sub	x28, x10, x8
  4235b4:	add	x2, x2, #0x930
  4235b8:	mov	x24, x28
  4235bc:	cmp	x20, #0x2
  4235c0:	b.cc	42369c <feof@plt+0x205bc>  // b.lo, b.ul, b.last
  4235c4:	ldrb	w9, [x21, x27]
  4235c8:	ldrb	w22, [x21, x26]
  4235cc:	and	w8, w9, #0xfc
  4235d0:	cmp	w8, #0xd8
  4235d4:	bfi	w22, w9, #8, #8
  4235d8:	b.eq	4235fc <feof@plt+0x2051c>  // b.none
  4235dc:	cmp	w8, #0xdc
  4235e0:	b.eq	4237b4 <feof@plt+0x206d4>  // b.none
  4235e4:	cmp	w22, #0x80
  4235e8:	b.cs	42362c <feof@plt+0x2054c>  // b.hs, b.nlast
  4235ec:	sturb	w22, [x29, #-3]
  4235f0:	mov	x23, #0xffffffffffffffff    	// #-1
  4235f4:	mov	w8, #0x1                   	// #1
  4235f8:	b	423688 <feof@plt+0x205a8>
  4235fc:	cmp	x20, #0x4
  423600:	b.cc	4237bc <feof@plt+0x206dc>  // b.lo, b.ul, b.last
  423604:	ldrb	w8, [x21, x3]
  423608:	and	w9, w8, #0xfc
  42360c:	cmp	w9, #0xdc
  423610:	b.ne	4237b4 <feof@plt+0x206d4>  // b.any
  423614:	ldrb	w9, [x21, x1]
  423618:	bfi	w9, w8, #8, #8
  42361c:	add	w8, w9, w22, lsl #10
  423620:	add	w22, w8, w14
  423624:	cmp	w22, #0x80
  423628:	b.cc	4235ec <feof@plt+0x2050c>  // b.lo, b.ul, b.last
  42362c:	mov	x8, xzr
  423630:	sub	x9, x29, #0x8
  423634:	mov	w10, w22
  423638:	b	423648 <feof@plt+0x20568>
  42363c:	add	x8, x8, #0x1
  423640:	sub	x9, x9, #0x1
  423644:	mov	w10, w11
  423648:	mov	w11, #0x80                  	// #128
  42364c:	bfxil	w11, w10, #0, #6
  423650:	cmp	w10, #0xfbf
  423654:	strb	w11, [x9, #5]
  423658:	lsr	w11, w10, #6
  42365c:	b.hi	42363c <feof@plt+0x2055c>  // b.pmore
  423660:	add	x12, x25, x8
  423664:	ldrb	w12, [x12, #1]
  423668:	tst	w11, w12
  42366c:	b.ne	42363c <feof@plt+0x2055c>  // b.any
  423670:	add	x11, x2, x8
  423674:	ldrb	w11, [x11, #1]
  423678:	sub	x23, x18, x8
  42367c:	add	x8, x8, #0x2
  423680:	orr	w10, w11, w10, lsr #6
  423684:	strb	w10, [x9, #4]
  423688:	subs	x28, x24, x8
  42368c:	b.cs	423718 <feof@plt+0x20638>  // b.hs, b.nlast
  423690:	mov	w22, #0x7                   	// #7
  423694:	cbz	x20, 423780 <feof@plt+0x206a0>
  423698:	b	4236a4 <feof@plt+0x205c4>
  42369c:	mov	w22, #0x16                  	// #22
  4236a0:	cbz	x20, 423780 <feof@plt+0x206a0>
  4236a4:	cmp	w22, #0x7
  4236a8:	b.ne	4237c0 <feof@plt+0x206e0>  // b.any
  4236ac:	ldp	x0, x8, [x19]
  4236b0:	mov	x28, x1
  4236b4:	mov	x23, x3
  4236b8:	add	x22, x24, #0x100
  4236bc:	add	x1, x8, #0x100
  4236c0:	str	x1, [x19, #8]
  4236c4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4236c8:	ldr	x8, [x19, #8]
  4236cc:	mov	w14, #0x2400                	// #9216
  4236d0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4236d4:	str	x0, [x19]
  4236d8:	add	x8, x0, x8
  4236dc:	sub	x8, x8, x24
  4236e0:	sub	x0, x8, #0x100
  4236e4:	mov	x24, x22
  4236e8:	mov	w13, #0x2                   	// #2
  4236ec:	movk	w14, #0xfca0, lsl #16
  4236f0:	sub	x15, x29, #0x8
  4236f4:	mov	w16, #0x4                   	// #4
  4236f8:	mov	x17, #0xfffffffffffffffc    	// #-4
  4236fc:	mov	x18, #0xfffffffffffffffe    	// #-2
  423700:	mov	x3, x23
  423704:	mov	x1, x28
  423708:	add	x2, x2, #0x930
  42370c:	cmp	x20, #0x2
  423710:	b.cs	4235c4 <feof@plt+0x204e4>  // b.hs, b.nlast
  423714:	b	42369c <feof@plt+0x205bc>
  423718:	tbz	x23, #63, 423764 <feof@plt+0x20684>
  42371c:	add	x8, x15, x23
  423720:	stp	x3, x1, [sp, #8]
  423724:	add	x1, x8, #0x6
  423728:	neg	x2, x23
  42372c:	mov	x24, x0
  423730:	bl	4029c0 <memcpy@plt>
  423734:	ldp	x3, x1, [sp, #8]
  423738:	mov	x0, x24
  42373c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  423740:	mov	w14, #0x2400                	// #9216
  423744:	add	x2, x2, #0x930
  423748:	mov	x18, #0xfffffffffffffffe    	// #-2
  42374c:	mov	x17, #0xfffffffffffffffc    	// #-4
  423750:	mov	w16, #0x4                   	// #4
  423754:	sub	x15, x29, #0x8
  423758:	movk	w14, #0xfca0, lsl #16
  42375c:	mov	w13, #0x2                   	// #2
  423760:	sub	x0, x24, x23
  423764:	cmp	w22, #0x10, lsl #12
  423768:	csel	x8, x13, x16, cc  // cc = lo, ul, last
  42376c:	csel	x9, x18, x17, cc  // cc = lo, ul, last
  423770:	adds	x20, x9, x20
  423774:	add	x21, x21, x8
  423778:	b.ne	4235b8 <feof@plt+0x204d8>  // b.any
  42377c:	b	423784 <feof@plt+0x206a4>
  423780:	mov	x28, x24
  423784:	ldr	x8, [x19, #8]
  423788:	mov	w0, #0x1                   	// #1
  42378c:	sub	x8, x8, x28
  423790:	str	x8, [x19, #16]
  423794:	ldp	x20, x19, [sp, #112]
  423798:	ldp	x22, x21, [sp, #96]
  42379c:	ldp	x24, x23, [sp, #80]
  4237a0:	ldp	x26, x25, [sp, #64]
  4237a4:	ldp	x28, x27, [sp, #48]
  4237a8:	ldp	x29, x30, [sp, #32]
  4237ac:	add	sp, sp, #0x80
  4237b0:	ret
  4237b4:	mov	w22, #0x54                  	// #84
  4237b8:	b	4237c0 <feof@plt+0x206e0>
  4237bc:	mov	w22, #0x16                  	// #22
  4237c0:	bl	402e70 <__errno_location@plt>
  4237c4:	mov	x8, x0
  4237c8:	mov	w0, wzr
  4237cc:	str	w22, [x8]
  4237d0:	b	423794 <feof@plt+0x206b4>
  4237d4:	mov	w3, w1
  4237d8:	cmp	w1, #0x652
  4237dc:	mov	x8, x0
  4237e0:	b.gt	423840 <feof@plt+0x20760>
  4237e4:	sub	w9, w3, #0x300
  4237e8:	cmp	w9, #0x45
  4237ec:	b.hi	4240b8 <feof@plt+0x20fd8>  // b.pmore
  4237f0:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x3838>
  4237f4:	add	x10, x10, #0x7c2
  4237f8:	adr	x11, 42380c <feof@plt+0x2072c>
  4237fc:	ldrh	w12, [x10, x9, lsl #1]
  423800:	add	x11, x11, x12, lsl #2
  423804:	mov	w0, #0x1                   	// #1
  423808:	br	x11
  42380c:	mov	w8, #0x1eff                	// #7935
  423810:	cmp	w2, w8
  423814:	mov	w0, wzr
  423818:	b.gt	4241d0 <feof@plt+0x210f0>
  42381c:	sub	w8, w2, #0x41
  423820:	cmp	w8, #0x10c
  423824:	b.hi	4243e8 <feof@plt+0x21308>  // b.pmore
  423828:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  42382c:	add	x9, x9, #0x920
  423830:	adr	x10, 423d44 <feof@plt+0x20c64>
  423834:	ldrh	w11, [x9, x8, lsl #1]
  423838:	add	x10, x10, x11, lsl #2
  42383c:	br	x10
  423840:	cmp	w3, #0xcd4
  423844:	b.gt	423888 <feof@plt+0x207a8>
  423848:	cmp	w3, #0xb3d
  42384c:	b.le	4238f8 <feof@plt+0x20818>
  423850:	cmp	w3, #0xbbd
  423854:	b.le	42395c <feof@plt+0x2087c>
  423858:	cmp	w3, #0xc55
  42385c:	b.gt	423a00 <feof@plt+0x20920>
  423860:	cmp	w3, #0xbbe
  423864:	b.eq	423fac <feof@plt+0x20ecc>  // b.none
  423868:	cmp	w3, #0xbd7
  42386c:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  423870:	cmp	w2, #0xb92
  423874:	mov	w0, wzr
  423878:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  42387c:	cmp	w2, #0xbc6
  423880:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  423884:	b	4245c4 <feof@plt+0x214e4>
  423888:	cmp	w3, #0xdde
  42388c:	b.le	42392c <feof@plt+0x2084c>
  423890:	mov	w9, #0x3098                	// #12440
  423894:	cmp	w3, w9
  423898:	b.le	423980 <feof@plt+0x208a0>
  42389c:	mov	w9, #0x10b9                	// #4281
  4238a0:	movk	w9, #0x1, lsl #16
  4238a4:	cmp	w3, w9
  4238a8:	b.gt	423a1c <feof@plt+0x2093c>
  4238ac:	mov	w9, #0x3099                	// #12441
  4238b0:	cmp	w3, w9
  4238b4:	b.eq	423fbc <feof@plt+0x20edc>  // b.none
  4238b8:	mov	w9, #0x309a                	// #12442
  4238bc:	cmp	w3, w9
  4238c0:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  4238c4:	mov	w8, #0xffffcf91            	// #-12399
  4238c8:	add	w8, w2, w8
  4238cc:	cmp	w8, #0xc
  4238d0:	mov	w0, wzr
  4238d4:	b.ls	42411c <feof@plt+0x2103c>  // b.plast
  4238d8:	mov	w8, #0xffffcf31            	// #-12495
  4238dc:	add	w8, w2, w8
  4238e0:	cmp	w8, #0xc
  4238e4:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4238e8:	mov	w9, #0x1                   	// #1
  4238ec:	lsl	w8, w9, w8
  4238f0:	mov	w9, #0x1249                	// #4681
  4238f4:	b	424428 <feof@plt+0x21348>
  4238f8:	cmp	w3, #0x93b
  4238fc:	b.gt	4239bc <feof@plt+0x208dc>
  423900:	cmp	w3, #0x653
  423904:	b.eq	423fe8 <feof@plt+0x20f08>  // b.none
  423908:	cmp	w3, #0x654
  42390c:	b.eq	423ff4 <feof@plt+0x20f14>  // b.none
  423910:	cmp	w3, #0x655
  423914:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  423918:	sub	w8, w2, #0x622
  42391c:	cmp	w8, #0x6
  423920:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  423924:	mov	w9, #0x1c                  	// #28
  423928:	b	4240ac <feof@plt+0x20fcc>
  42392c:	cmp	w3, #0xd56
  423930:	b.gt	4239e0 <feof@plt+0x20900>
  423934:	cmp	w3, #0xcd5
  423938:	b.eq	424024 <feof@plt+0x20f44>  // b.none
  42393c:	cmp	w3, #0xcd6
  423940:	b.eq	423a10 <feof@plt+0x20930>  // b.none
  423944:	cmp	w3, #0xd3e
  423948:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  42394c:	and	w8, w2, #0xfffffffe
  423950:	cmp	w8, #0xd46
  423954:	cset	w0, ne  // ne = any
  423958:	ret
  42395c:	cmp	w3, #0xb3e
  423960:	b.eq	423974 <feof@plt+0x20894>  // b.none
  423964:	cmp	w3, #0xb56
  423968:	b.eq	423974 <feof@plt+0x20894>  // b.none
  42396c:	cmp	w3, #0xb57
  423970:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  423974:	cmp	w2, #0xb47
  423978:	cset	w0, ne  // ne = any
  42397c:	ret
  423980:	cmp	w3, #0xddf
  423984:	b.eq	4239f8 <feof@plt+0x20918>  // b.none
  423988:	mov	w9, #0x102e                	// #4142
  42398c:	cmp	w3, w9
  423990:	b.eq	424038 <feof@plt+0x20f58>  // b.none
  423994:	mov	w9, #0x1b35                	// #6965
  423998:	cmp	w3, w9
  42399c:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  4239a0:	mov	w8, #0xffffe4fb            	// #-6917
  4239a4:	add	w8, w2, w8
  4239a8:	cmp	w8, #0x3e
  4239ac:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  4239b0:	mov	x9, #0xffffffffffffeeaa    	// #-4438
  4239b4:	movk	x9, #0x195f, lsl #48
  4239b8:	b	423ccc <feof@plt+0x20bec>
  4239bc:	cmp	w3, #0x93c
  4239c0:	b.eq	424048 <feof@plt+0x20f68>  // b.none
  4239c4:	cmp	w3, #0x9be
  4239c8:	b.eq	4239d4 <feof@plt+0x208f4>  // b.none
  4239cc:	cmp	w3, #0x9d7
  4239d0:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  4239d4:	cmp	w2, #0x9c7
  4239d8:	cset	w0, ne  // ne = any
  4239dc:	ret
  4239e0:	cmp	w3, #0xd57
  4239e4:	b.eq	424060 <feof@plt+0x20f80>  // b.none
  4239e8:	cmp	w3, #0xdca
  4239ec:	b.eq	42406c <feof@plt+0x20f8c>  // b.none
  4239f0:	cmp	w3, #0xdcf
  4239f4:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  4239f8:	sub	w8, w2, #0xdd9
  4239fc:	b	423a48 <feof@plt+0x20968>
  423a00:	cmp	w3, #0xc56
  423a04:	b.eq	424084 <feof@plt+0x20fa4>  // b.none
  423a08:	cmp	w3, #0xcc2
  423a0c:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  423a10:	cmp	w2, #0xcc6
  423a14:	cset	w0, ne  // ne = any
  423a18:	ret
  423a1c:	mov	w9, #0x10ba                	// #4282
  423a20:	movk	w9, #0x1, lsl #16
  423a24:	cmp	w3, w9
  423a28:	b.eq	424090 <feof@plt+0x20fb0>  // b.none
  423a2c:	mov	w9, #0x1127                	// #4391
  423a30:	movk	w9, #0x1, lsl #16
  423a34:	cmp	w3, w9
  423a38:	b.ne	4240b8 <feof@plt+0x20fd8>  // b.any
  423a3c:	mov	w8, #0xeecf                	// #61135
  423a40:	movk	w8, #0xfffe, lsl #16
  423a44:	add	w8, w2, w8
  423a48:	cmp	w8, #0x1
  423a4c:	cset	w0, hi  // hi = pmore
  423a50:	ret
  423a54:	sub	w8, w2, #0x41
  423a58:	cmp	w8, #0x16f
  423a5c:	mov	w0, wzr
  423a60:	b.ls	424150 <feof@plt+0x21070>  // b.plast
  423a64:	mov	w8, #0xffffe100            	// #-7936
  423a68:	add	w8, w2, w8
  423a6c:	cmp	w8, #0xfe
  423a70:	b.hi	4244b4 <feof@plt+0x213d4>  // b.pmore
  423a74:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  423a78:	add	x9, x9, #0x722
  423a7c:	adr	x10, 423d44 <feof@plt+0x20c64>
  423a80:	ldrh	w11, [x9, x8, lsl #1]
  423a84:	add	x10, x10, x11, lsl #2
  423a88:	br	x10
  423a8c:	sub	w8, w2, #0x41
  423a90:	cmp	w8, #0x39
  423a94:	mov	w0, wzr
  423a98:	b.hi	423abc <feof@plt+0x209dc>  // b.pmore
  423a9c:	mov	w9, #0x1                   	// #1
  423aa0:	lsl	x8, x9, x8
  423aa4:	mov	x9, #0x43d5                	// #17365
  423aa8:	movk	x9, #0x354, lsl #16
  423aac:	movk	x9, #0x43d5, lsl #32
  423ab0:	movk	x9, #0x354, lsl #48
  423ab4:	tst	x8, x9
  423ab8:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  423abc:	mov	w8, #0xffffe160            	// #-7840
  423ac0:	add	w8, w2, w8
  423ac4:	cmp	w8, #0x2d
  423ac8:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  423acc:	mov	w9, #0x1                   	// #1
  423ad0:	lsl	x8, x9, x8
  423ad4:	mov	x9, #0x3                   	// #3
  423ad8:	movk	x9, #0x300, lsl #16
  423adc:	movk	x9, #0x3000, lsl #32
  423ae0:	b	423d3c <feof@plt+0x20c5c>
  423ae4:	sub	w8, w2, #0x41
  423ae8:	cmp	w8, #0xc2
  423aec:	mov	w0, wzr
  423af0:	b.hi	42440c <feof@plt+0x2132c>  // b.pmore
  423af4:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  423af8:	add	x9, x9, #0x168
  423afc:	adr	x10, 423d44 <feof@plt+0x20c64>
  423b00:	ldrh	w11, [x9, x8, lsl #1]
  423b04:	add	x10, x10, x11, lsl #2
  423b08:	br	x10
  423b0c:	cmp	w2, #0x390
  423b10:	mov	w0, wzr
  423b14:	b.gt	424168 <feof@plt+0x21088>
  423b18:	sub	w8, w2, #0x41
  423b1c:	cmp	w8, #0xbb
  423b20:	b.hi	42453c <feof@plt+0x2145c>  // b.pmore
  423b24:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  423b28:	add	x9, x9, #0xff0
  423b2c:	adr	x10, 423d44 <feof@plt+0x20c64>
  423b30:	ldrh	w11, [x9, x8, lsl #1]
  423b34:	add	x10, x10, x11, lsl #2
  423b38:	br	x10
  423b3c:	cmp	w2, #0x40f
  423b40:	mov	w0, wzr
  423b44:	b.le	424260 <feof@plt+0x21180>
  423b48:	mov	w8, #0x1e9f                	// #7839
  423b4c:	cmp	w2, w8
  423b50:	b.gt	424488 <feof@plt+0x213a8>
  423b54:	sub	w8, w2, #0x410
  423b58:	cmp	w8, #0x33
  423b5c:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  423b60:	mov	w9, #0x1                   	// #1
  423b64:	lsl	x8, x9, x8
  423b68:	mov	x9, #0x8000800080008       	// #2251834173947912
  423b6c:	movk	x9, #0x161
  423b70:	movk	x9, #0x161, lsl #32
  423b74:	b	423d3c <feof@plt+0x20c5c>
  423b78:	sub	w8, w2, #0x41
  423b7c:	cmp	w8, #0x13e
  423b80:	mov	w0, wzr
  423b84:	b.hi	4245ac <feof@plt+0x214cc>  // b.pmore
  423b88:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  423b8c:	add	x9, x9, #0xd72
  423b90:	adr	x10, 423d44 <feof@plt+0x20c64>
  423b94:	ldrh	w11, [x9, x8, lsl #1]
  423b98:	add	x10, x10, x11, lsl #2
  423b9c:	br	x10
  423ba0:	cmp	w2, #0x398
  423ba4:	mov	w0, wzr
  423ba8:	b.le	42423c <feof@plt+0x2115c>
  423bac:	sub	w8, w2, #0x399
  423bb0:	cmp	w8, #0xbd
  423bb4:	b.hi	424564 <feof@plt+0x21484>  // b.pmore
  423bb8:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  423bbc:	add	x9, x9, #0xbf6
  423bc0:	adr	x10, 423d44 <feof@plt+0x20c64>
  423bc4:	ldrh	w11, [x9, x8, lsl #1]
  423bc8:	add	x10, x10, x11, lsl #2
  423bcc:	br	x10
  423bd0:	sub	w8, w2, #0x41
  423bd4:	cmp	w8, #0xc2
  423bd8:	mov	w0, wzr
  423bdc:	b.hi	42440c <feof@plt+0x2132c>  // b.pmore
  423be0:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  423be4:	add	x9, x9, #0x906
  423be8:	adr	x10, 423d44 <feof@plt+0x20c64>
  423bec:	ldrh	w11, [x9, x8, lsl #1]
  423bf0:	add	x10, x10, x11, lsl #2
  423bf4:	br	x10
  423bf8:	sub	w8, w2, #0x41
  423bfc:	cmp	w8, #0x39
  423c00:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  423c04:	mov	x9, #0xfffefffefffefffe    	// #-281479271743490
  423c08:	movk	x9, #0xffef, lsl #16
  423c0c:	movk	x9, #0xaf, lsl #48
  423c10:	b	423ccc <feof@plt+0x20bec>
  423c14:	sub	w8, w2, #0x4f
  423c18:	cmp	w8, #0x26
  423c1c:	mov	w0, wzr
  423c20:	b.hi	423c3c <feof@plt+0x20b5c>  // b.pmore
  423c24:	mov	w9, #0x1                   	// #1
  423c28:	lsl	x8, x9, x8
  423c2c:	mov	x9, #0x41                  	// #65
  423c30:	movk	x9, #0x41, lsl #32
  423c34:	tst	x8, x9
  423c38:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  423c3c:	cmp	w2, #0x423
  423c40:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  423c44:	cmp	w2, #0x443
  423c48:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  423c4c:	b	4245c4 <feof@plt+0x214e4>
  423c50:	sub	w8, w2, #0x41
  423c54:	cmp	w8, #0xbb
  423c58:	mov	w0, wzr
  423c5c:	b.hi	424584 <feof@plt+0x214a4>  // b.pmore
  423c60:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  423c64:	add	x9, x9, #0x78e
  423c68:	adr	x10, 423d44 <feof@plt+0x20c64>
  423c6c:	ldrh	w11, [x9, x8, lsl #1]
  423c70:	add	x10, x10, x11, lsl #2
  423c74:	br	x10
  423c78:	sub	w8, w2, #0x41
  423c7c:	cmp	w8, #0x34
  423c80:	mov	w0, wzr
  423c84:	b.hi	423ca8 <feof@plt+0x20bc8>  // b.pmore
  423c88:	mov	w9, #0x1                   	// #1
  423c8c:	lsl	x8, x9, x8
  423c90:	mov	x9, #0x4111                	// #16657
  423c94:	movk	x9, #0x12, lsl #16
  423c98:	movk	x9, #0x4111, lsl #32
  423c9c:	movk	x9, #0x12, lsl #48
  423ca0:	tst	x8, x9
  423ca4:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  423ca8:	sub	w8, w2, #0x474
  423cac:	b	4245bc <feof@plt+0x214dc>
  423cb0:	sub	w8, w2, #0x41
  423cb4:	cmp	w8, #0x35
  423cb8:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  423cbc:	mov	x9, #0xbeee                	// #48878
  423cc0:	movk	x9, #0xffed, lsl #16
  423cc4:	movk	x9, #0xbeee, lsl #32
  423cc8:	movk	x9, #0xd, lsl #48
  423ccc:	lsr	x8, x9, x8
  423cd0:	and	w0, w8, #0x1
  423cd4:	ret
  423cd8:	mov	w8, #0x1fb2                	// #8114
  423cdc:	cmp	w2, w8
  423ce0:	mov	w0, wzr
  423ce4:	b.gt	4240e0 <feof@plt+0x21000>
  423ce8:	sub	w8, w2, #0x391
  423cec:	cmp	w8, #0x38
  423cf0:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  423cf4:	mov	w9, #0x1                   	// #1
  423cf8:	lsl	x8, x9, x8
  423cfc:	mov	x9, #0x4151                	// #16721
  423d00:	movk	x9, #0x100, lsl #16
  423d04:	b	423d34 <feof@plt+0x20c54>
  423d08:	mov	w8, #0x1fb2                	// #8114
  423d0c:	cmp	w2, w8
  423d10:	mov	w0, wzr
  423d14:	b.gt	4240e0 <feof@plt+0x21000>
  423d18:	sub	w8, w2, #0x391
  423d1c:	cmp	w8, #0x38
  423d20:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  423d24:	mov	w9, #0x1                   	// #1
  423d28:	lsl	x8, x9, x8
  423d2c:	mov	x9, #0x4151                	// #16721
  423d30:	movk	x9, #0x111, lsl #16
  423d34:	movk	x9, #0x4151, lsl #32
  423d38:	movk	x9, #0x111, lsl #48
  423d3c:	tst	x8, x9
  423d40:	b.eq	4245c4 <feof@plt+0x214e4>  // b.none
  423d44:	ret
  423d48:	sub	w8, w2, #0x4f
  423d4c:	cmp	w8, #0x1e2
  423d50:	mov	w0, wzr
  423d54:	b.hi	424324 <feof@plt+0x21244>  // b.pmore
  423d58:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  423d5c:	add	x9, x9, #0x290
  423d60:	adr	x10, 423d44 <feof@plt+0x20c64>
  423d64:	ldrh	w11, [x9, x8, lsl #1]
  423d68:	add	x10, x10, x11, lsl #2
  423d6c:	br	x10
  423d70:	sub	w8, w2, #0x41
  423d74:	cmp	w8, #0x1f2
  423d78:	mov	w0, wzr
  423d7c:	b.hi	4242fc <feof@plt+0x2121c>  // b.pmore
  423d80:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  423d84:	add	x9, x9, #0xcba
  423d88:	adr	x10, 423d44 <feof@plt+0x20c64>
  423d8c:	ldrh	w11, [x9, x8, lsl #1]
  423d90:	add	x10, x10, x11, lsl #2
  423d94:	br	x10
  423d98:	mov	w8, #0x1e77                	// #7799
  423d9c:	cmp	w2, w8
  423da0:	mov	w0, wzr
  423da4:	b.gt	4244d8 <feof@plt+0x213f8>
  423da8:	sub	w8, w2, #0xd9
  423dac:	cmp	w8, #0x13e
  423db0:	b.hi	424598 <feof@plt+0x214b8>  // b.pmore
  423db4:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  423db8:	add	x9, x9, #0xa3c
  423dbc:	adr	x10, 423d44 <feof@plt+0x20c64>
  423dc0:	ldrh	w11, [x9, x8, lsl #1]
  423dc4:	add	x10, x10, x11, lsl #2
  423dc8:	br	x10
  423dcc:	mov	w8, #0x1ea1                	// #7841
  423dd0:	cmp	w2, w8
  423dd4:	mov	w0, wzr
  423dd8:	b.gt	4242d8 <feof@plt+0x211f8>
  423ddc:	sub	w8, w2, #0x61
  423de0:	cmp	w8, #0xa2
  423de4:	b.hi	42434c <feof@plt+0x2126c>  // b.pmore
  423de8:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  423dec:	add	x9, x9, #0x840
  423df0:	adr	x10, 423d44 <feof@plt+0x20c64>
  423df4:	ldrh	w11, [x9, x8, lsl #1]
  423df8:	add	x10, x10, x11, lsl #2
  423dfc:	br	x10
  423e00:	mov	w8, #0xffffe1a0            	// #-7776
  423e04:	add	w8, w2, w8
  423e08:	cmp	w8, #0x37
  423e0c:	mov	w0, wzr
  423e10:	b.ls	424220 <feof@plt+0x21140>  // b.plast
  423e14:	sub	w8, w2, #0x15a
  423e18:	cmp	w8, #0xb
  423e1c:	b.hi	423e34 <feof@plt+0x20d54>  // b.pmore
  423e20:	mov	w9, #0x1                   	// #1
  423e24:	lsl	w8, w9, w8
  423e28:	mov	w9, #0xccf                 	// #3279
  423e2c:	tst	w8, w9
  423e30:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  423e34:	sub	w8, w2, #0x53
  423e38:	cmp	w8, #0x21
  423e3c:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  423e40:	mov	w9, #0x1                   	// #1
  423e44:	lsl	x8, x9, x8
  423e48:	tst	x8, #0x300000003
  423e4c:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  423e50:	b	4245c4 <feof@plt+0x214e4>
  423e54:	sub	w8, w2, #0x43
  423e58:	cmp	w8, #0x1dc
  423e5c:	mov	w0, wzr
  423e60:	b.hi	4241a8 <feof@plt+0x210c8>  // b.pmore
  423e64:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  423e68:	add	x9, x9, #0x30a
  423e6c:	adr	x10, 423d44 <feof@plt+0x20c64>
  423e70:	ldrh	w11, [x9, x8, lsl #1]
  423e74:	add	x10, x10, x11, lsl #2
  423e78:	br	x10
  423e7c:	sub	w8, w2, #0x41
  423e80:	cmp	w8, #0x1f0
  423e84:	mov	w0, wzr
  423e88:	b.hi	4241f8 <feof@plt+0x21118>  // b.pmore
  423e8c:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x4838>
  423e90:	add	x9, x9, #0xd44
  423e94:	adr	x10, 423d44 <feof@plt+0x20c64>
  423e98:	ldrh	w11, [x9, x8, lsl #1]
  423e9c:	add	x10, x10, x11, lsl #2
  423ea0:	br	x10
  423ea4:	sub	w8, w2, #0x44
  423ea8:	cmp	w8, #0x1d3
  423eac:	mov	w0, wzr
  423eb0:	b.hi	424370 <feof@plt+0x21290>  // b.pmore
  423eb4:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x4838>
  423eb8:	add	x9, x9, #0x7e0
  423ebc:	adr	x10, 423d44 <feof@plt+0x20c64>
  423ec0:	ldrh	w11, [x9, x8, lsl #1]
  423ec4:	add	x10, x10, x11, lsl #2
  423ec8:	br	x10
  423ecc:	cmp	w2, #0x21d
  423ed0:	mov	w0, wzr
  423ed4:	b.le	4242b8 <feof@plt+0x211d8>
  423ed8:	mov	w8, #0xffffe1de            	// #-7714
  423edc:	add	w8, w2, w8
  423ee0:	cmp	w8, #0x5
  423ee4:	b.hi	423efc <feof@plt+0x20e1c>  // b.pmore
  423ee8:	mov	w9, #0x1                   	// #1
  423eec:	lsl	w8, w9, w8
  423ef0:	mov	w9, #0x33                  	// #51
  423ef4:	tst	w8, w9
  423ef8:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  423efc:	sub	w8, w2, #0x21e
  423f00:	b	4245bc <feof@plt+0x214dc>
  423f04:	sub	w8, w2, #0x45
  423f08:	cmp	w8, #0x1d2
  423f0c:	mov	w0, wzr
  423f10:	b.hi	4243c0 <feof@plt+0x212e0>  // b.pmore
  423f14:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x4838>
  423f18:	add	x9, x9, #0x292
  423f1c:	adr	x10, 423d44 <feof@plt+0x20c64>
  423f20:	ldrh	w11, [x9, x8, lsl #1]
  423f24:	add	x10, x10, x11, lsl #2
  423f28:	br	x10
  423f2c:	sub	w8, w2, #0x42
  423f30:	cmp	w8, #0x1dd
  423f34:	mov	w0, wzr
  423f38:	b.hi	424398 <feof@plt+0x212b8>  // b.pmore
  423f3c:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  423f40:	add	x9, x9, #0xdaa
  423f44:	adr	x10, 423d44 <feof@plt+0x20c64>
  423f48:	ldrh	w11, [x9, x8, lsl #1]
  423f4c:	add	x10, x10, x11, lsl #2
  423f50:	br	x10
  423f54:	mov	w8, #0xffffe100            	// #-7936
  423f58:	add	w8, w2, w8
  423f5c:	cmp	w8, #0xfe
  423f60:	mov	w0, wzr
  423f64:	b.hi	424434 <feof@plt+0x21354>  // b.pmore
  423f68:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  423f6c:	add	x9, x9, #0xbac
  423f70:	adr	x10, 423d44 <feof@plt+0x20c64>
  423f74:	ldrh	w11, [x9, x8, lsl #1]
  423f78:	add	x10, x10, x11, lsl #2
  423f7c:	br	x10
  423f80:	mov	w8, #0xffffe100            	// #-7936
  423f84:	add	w8, w2, w8
  423f88:	cmp	w8, #0xf6
  423f8c:	mov	w0, wzr
  423f90:	b.hi	4244f4 <feof@plt+0x21414>  // b.pmore
  423f94:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  423f98:	add	x9, x9, #0x9be
  423f9c:	adr	x10, 423d44 <feof@plt+0x20c64>
  423fa0:	ldrh	w11, [x9, x8, lsl #1]
  423fa4:	add	x10, x10, x11, lsl #2
  423fa8:	br	x10
  423fac:	and	w8, w2, #0xfffffffe
  423fb0:	cmp	w8, #0xbc6
  423fb4:	cset	w0, ne  // ne = any
  423fb8:	ret
  423fbc:	mov	w8, #0xffffcfba            	// #-12358
  423fc0:	add	w8, w2, w8
  423fc4:	cmp	w8, #0xb7
  423fc8:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  423fcc:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  423fd0:	add	x9, x9, #0x84e
  423fd4:	adr	x10, 423d44 <feof@plt+0x20c64>
  423fd8:	ldrh	w11, [x9, x8, lsl #1]
  423fdc:	add	x10, x10, x11, lsl #2
  423fe0:	mov	w0, wzr
  423fe4:	br	x10
  423fe8:	cmp	w2, #0x627
  423fec:	cset	w0, ne  // ne = any
  423ff0:	ret
  423ff4:	sub	w8, w2, #0x627
  423ff8:	cmp	w8, #0x23
  423ffc:	mov	w0, wzr
  424000:	b.ls	424134 <feof@plt+0x21054>  // b.plast
  424004:	sub	w8, w2, #0x6c1
  424008:	cmp	w8, #0x14
  42400c:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424010:	mov	w9, #0x1                   	// #1
  424014:	lsl	w8, w9, w8
  424018:	mov	w9, #0x1                   	// #1
  42401c:	movk	w9, #0x12, lsl #16
  424020:	b	424428 <feof@plt+0x21348>
  424024:	sub	w8, w2, #0xcbf
  424028:	cmp	w8, #0xc
  42402c:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  424030:	mov	w9, #0x77e                 	// #1918
  424034:	b	4240ac <feof@plt+0x20fcc>
  424038:	mov	w8, #0x1025                	// #4133
  42403c:	cmp	w2, w8
  424040:	cset	w0, ne  // ne = any
  424044:	ret
  424048:	sub	w8, w2, #0x915
  42404c:	cmp	w8, #0x1f
  424050:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  424054:	mov	w9, #0xcf78                	// #53112
  424058:	movk	w9, #0x33b7, lsl #16
  42405c:	b	4240ac <feof@plt+0x20fcc>
  424060:	cmp	w2, #0xd46
  424064:	cset	w0, ne  // ne = any
  424068:	ret
  42406c:	cmp	w2, #0xdd9
  424070:	mov	w0, wzr
  424074:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  424078:	cmp	w2, #0xddc
  42407c:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  424080:	b	4245c4 <feof@plt+0x214e4>
  424084:	cmp	w2, #0xc46
  424088:	cset	w0, ne  // ne = any
  42408c:	ret
  424090:	mov	w8, #0xeecf                	// #61135
  424094:	movk	w8, #0xfffe, lsl #16
  424098:	add	w8, w2, w8
  42409c:	add	w8, w8, #0x98
  4240a0:	cmp	w8, #0xd
  4240a4:	b.cs	4245c4 <feof@plt+0x214e4>  // b.hs, b.nlast
  4240a8:	mov	w9, #0xffa                 	// #4090
  4240ac:	lsr	w8, w9, w8
  4240b0:	and	w0, w8, #0x1
  4240b4:	ret
  4240b8:	stp	x29, x30, [sp, #-16]!
  4240bc:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  4240c0:	add	x2, x2, #0xd06
  4240c4:	mov	w1, #0x4                   	// #4
  4240c8:	mov	x0, x8
  4240cc:	mov	x29, sp
  4240d0:	bl	4288a0 <feof@plt+0x257c0>
  4240d4:	mov	w0, #0x1                   	// #1
  4240d8:	ldp	x29, x30, [sp], #16
  4240dc:	ret
  4240e0:	mov	w8, #0xffffe04d            	// #-8115
  4240e4:	add	w8, w2, w8
  4240e8:	cmp	w8, #0x19
  4240ec:	b.hi	424108 <feof@plt+0x21028>  // b.pmore
  4240f0:	mov	w9, #0x1                   	// #1
  4240f4:	lsl	w8, w9, w8
  4240f8:	mov	w9, #0x201                 	// #513
  4240fc:	movk	w9, #0x201, lsl #16
  424100:	tst	w8, w9
  424104:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424108:	mov	w8, #0x1ff3                	// #8179
  42410c:	cmp	w2, w8
  424110:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  424114:	mov	w8, #0x1ffc                	// #8188
  424118:	b	4244a8 <feof@plt+0x213c8>
  42411c:	mov	w9, #0x1                   	// #1
  424120:	lsl	w8, w9, w8
  424124:	mov	w9, #0x1249                	// #4681
  424128:	tst	w8, w9
  42412c:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424130:	b	4238d8 <feof@plt+0x207f8>
  424134:	mov	w9, #0x1                   	// #1
  424138:	lsl	x8, x9, x8
  42413c:	mov	x9, #0x1                   	// #1
  424140:	movk	x9, #0xa, lsl #32
  424144:	tst	x8, x9
  424148:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  42414c:	b	424004 <feof@plt+0x20f24>
  424150:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  424154:	add	x9, x9, #0x2ee
  424158:	adr	x10, 423d44 <feof@plt+0x20c64>
  42415c:	ldrh	w11, [x9, x8, lsl #1]
  424160:	add	x10, x10, x11, lsl #2
  424164:	br	x10
  424168:	cmp	w2, #0x417
  42416c:	b.le	424464 <feof@plt+0x21384>
  424170:	mov	w8, #0x1e35                	// #7733
  424174:	cmp	w2, w8
  424178:	b.le	42451c <feof@plt+0x2143c>
  42417c:	mov	w8, #0xffffe1ca            	// #-7734
  424180:	add	w8, w2, w8
  424184:	cmp	w8, #0x25
  424188:	b.hi	424498 <feof@plt+0x213b8>  // b.pmore
  42418c:	mov	w9, #0x1                   	// #1
  424190:	lsl	x8, x9, x8
  424194:	mov	x9, #0x3                   	// #3
  424198:	movk	x9, #0x30, lsl #32
  42419c:	tst	x8, x9
  4241a0:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  4241a4:	b	424498 <feof@plt+0x213b8>
  4241a8:	mov	w8, #0xffffe1f6            	// #-7690
  4241ac:	add	w8, w2, w8
  4241b0:	cmp	w8, #0xbd
  4241b4:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4241b8:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  4241bc:	add	x9, x9, #0x6c4
  4241c0:	adr	x10, 423d44 <feof@plt+0x20c64>
  4241c4:	ldrh	w11, [x9, x8, lsl #1]
  4241c8:	add	x10, x10, x11, lsl #2
  4241cc:	br	x10
  4241d0:	mov	w8, #0xffffe100            	// #-7936
  4241d4:	add	w8, w2, w8
  4241d8:	cmp	w8, #0xfe
  4241dc:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4241e0:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  4241e4:	add	x9, x9, #0xc8a
  4241e8:	adr	x10, 423d44 <feof@plt+0x20c64>
  4241ec:	ldrh	w11, [x9, x8, lsl #1]
  4241f0:	add	x10, x10, x11, lsl #2
  4241f4:	br	x10
  4241f8:	mov	w8, #0xffffe200            	// #-7680
  4241fc:	add	w8, w2, w8
  424200:	cmp	w8, #0xf1
  424204:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424208:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  42420c:	add	x9, x9, #0x126
  424210:	adr	x10, 423d44 <feof@plt+0x20c64>
  424214:	ldrh	w11, [x9, x8, lsl #1]
  424218:	add	x10, x10, x11, lsl #2
  42421c:	br	x10
  424220:	mov	w9, #0x1                   	// #1
  424224:	lsl	x8, x9, x8
  424228:	mov	x9, #0xcf3                 	// #3315
  42422c:	movk	x9, #0x80, lsl #48
  424230:	tst	x8, x9
  424234:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424238:	b	423e14 <feof@plt+0x20d34>
  42423c:	sub	w8, w2, #0x41
  424240:	cmp	w8, #0xb4
  424244:	b.hi	4245b8 <feof@plt+0x214d8>  // b.pmore
  424248:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  42424c:	add	x9, x9, #0xa8c
  424250:	adr	x10, 423d44 <feof@plt+0x20c64>
  424254:	ldrh	w11, [x9, x8, lsl #1]
  424258:	add	x10, x10, x11, lsl #2
  42425c:	br	x10
  424260:	sub	w8, w2, #0x41
  424264:	cmp	w8, #0x34
  424268:	b.hi	424288 <feof@plt+0x211a8>  // b.pmore
  42426c:	mov	w9, #0x1                   	// #1
  424270:	lsl	x8, x9, x8
  424274:	mov	x9, #0x10001000100010      	// #4503668347895824
  424278:	movk	x9, #0x4151
  42427c:	movk	x9, #0x4151, lsl #32
  424280:	tst	x8, x9
  424284:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424288:	sub	w8, w2, #0x391
  42428c:	cmp	w8, #0x34
  424290:	b.hi	4242b0 <feof@plt+0x211d0>  // b.pmore
  424294:	mov	w9, #0x1                   	// #1
  424298:	lsl	x8, x9, x8
  42429c:	mov	x9, #0x10001000100010      	// #4503668347895824
  4242a0:	movk	x9, #0x101
  4242a4:	movk	x9, #0x101, lsl #32
  4242a8:	tst	x8, x9
  4242ac:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  4242b0:	sub	w8, w2, #0x228
  4242b4:	b	4245bc <feof@plt+0x214dc>
  4242b8:	sub	w8, w2, #0x124
  4242bc:	cmp	w8, #0x2
  4242c0:	b.cc	423d44 <feof@plt+0x20c64>  // b.lo, b.ul, b.last
  4242c4:	cmp	w2, #0x48
  4242c8:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4242cc:	cmp	w2, #0x68
  4242d0:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4242d4:	b	4245c4 <feof@plt+0x214e4>
  4242d8:	mov	w8, #0xffffe15e            	// #-7842
  4242dc:	add	w8, w2, w8
  4242e0:	cmp	w8, #0x13
  4242e4:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4242e8:	mov	w9, #0x1                   	// #1
  4242ec:	lsl	w8, w9, w8
  4242f0:	mov	w9, #0xf3ff                	// #62463
  4242f4:	movk	w9, #0xf, lsl #16
  4242f8:	b	424428 <feof@plt+0x21348>
  4242fc:	mov	w8, #0xffffe1fe            	// #-7682
  424300:	add	w8, w2, w8
  424304:	cmp	w8, #0xf7
  424308:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  42430c:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  424310:	add	x9, x9, #0xa0
  424314:	adr	x10, 423d44 <feof@plt+0x20c64>
  424318:	ldrh	w11, [x9, x8, lsl #1]
  42431c:	add	x10, x10, x11, lsl #2
  424320:	br	x10
  424324:	mov	w8, #0xffffe1b4            	// #-7756
  424328:	add	w8, w2, w8
  42432c:	cmp	w8, #0x9b
  424330:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424334:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x6838>
  424338:	add	x9, x9, #0x656
  42433c:	adr	x10, 423d44 <feof@plt+0x20c64>
  424340:	ldrh	w11, [x9, x8, lsl #1]
  424344:	add	x10, x10, x11, lsl #2
  424348:	br	x10
  42434c:	sub	w8, w2, #0x1cd
  424350:	cmp	w8, #0x5a
  424354:	b.hi	4245cc <feof@plt+0x214ec>  // b.pmore
  424358:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x5838>
  42435c:	add	x9, x9, #0x986
  424360:	adr	x10, 423d44 <feof@plt+0x20c64>
  424364:	ldrh	w11, [x9, x8, lsl #1]
  424368:	add	x10, x10, x11, lsl #2
  42436c:	br	x10
  424370:	mov	w8, #0xffffe1f6            	// #-7690
  424374:	add	w8, w2, w8
  424378:	cmp	w8, #0xdd
  42437c:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424380:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x4838>
  424384:	add	x9, x9, #0xb88
  424388:	adr	x10, 423d44 <feof@plt+0x20c64>
  42438c:	ldrh	w11, [x9, x8, lsl #1]
  424390:	add	x10, x10, x11, lsl #2
  424394:	br	x10
  424398:	mov	w8, #0xffffe1fe            	// #-7682
  42439c:	add	w8, w2, w8
  4243a0:	cmp	w8, #0x95
  4243a4:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4243a8:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x4838>
  4243ac:	add	x9, x9, #0x166
  4243b0:	adr	x10, 423d44 <feof@plt+0x20c64>
  4243b4:	ldrh	w11, [x9, x8, lsl #1]
  4243b8:	add	x10, x10, x11, lsl #2
  4243bc:	br	x10
  4243c0:	mov	w8, #0xffffe1ec            	// #-7700
  4243c4:	add	w8, w2, w8
  4243c8:	cmp	w8, #0xd3
  4243cc:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4243d0:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x4838>
  4243d4:	add	x9, x9, #0x638
  4243d8:	adr	x10, 423d44 <feof@plt+0x20c64>
  4243dc:	ldrh	w11, [x9, x8, lsl #1]
  4243e0:	add	x10, x10, x11, lsl #2
  4243e4:	br	x10
  4243e8:	sub	w8, w2, #0x391
  4243ec:	cmp	w8, #0xa7
  4243f0:	b.hi	42440c <feof@plt+0x2132c>  // b.pmore
  4243f4:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  4243f8:	add	x9, x9, #0xb3a
  4243fc:	adr	x10, 423d44 <feof@plt+0x20c64>
  424400:	ldrh	w11, [x9, x8, lsl #1]
  424404:	add	x10, x10, x11, lsl #2
  424408:	br	x10
  42440c:	sub	w8, w2, #0x1a0
  424410:	cmp	w8, #0x10
  424414:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424418:	mov	w9, #0x1                   	// #1
  42441c:	lsl	w8, w9, w8
  424420:	mov	w9, #0x8003                	// #32771
  424424:	movk	w9, #0x1, lsl #16
  424428:	tst	w8, w9
  42442c:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424430:	b	4245c4 <feof@plt+0x214e4>
  424434:	sub	w8, w2, #0x3b1
  424438:	cmp	w8, #0x1a
  42443c:	b.hi	424458 <feof@plt+0x21378>  // b.pmore
  424440:	mov	w9, #0x1                   	// #1
  424444:	lsl	w8, w9, w8
  424448:	mov	w9, #0x141                 	// #321
  42444c:	movk	w9, #0x710, lsl #16
  424450:	tst	w8, w9
  424454:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424458:	cmp	w2, #0xa8
  42445c:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  424460:	b	4245c4 <feof@plt+0x214e4>
  424464:	sub	w8, w2, #0x391
  424468:	cmp	w8, #0x34
  42446c:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424470:	mov	w9, #0x1                   	// #1
  424474:	lsl	x8, x9, x8
  424478:	mov	x9, #0x10001000100010      	// #4503668347895824
  42447c:	movk	x9, #0x101
  424480:	movk	x9, #0x101, lsl #32
  424484:	b	423d3c <feof@plt+0x20c5c>
  424488:	mov	w8, #0xffffe160            	// #-7840
  42448c:	add	w8, w2, w8
  424490:	cmp	w8, #0x2
  424494:	b.cc	423d44 <feof@plt+0x20c64>  // b.lo, b.ul, b.last
  424498:	mov	w8, #0x1fb3                	// #8115
  42449c:	cmp	w2, w8
  4244a0:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4244a4:	mov	w8, #0x1fbc                	// #8124
  4244a8:	cmp	w2, w8
  4244ac:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4244b0:	b	4245c4 <feof@plt+0x214e4>
  4244b4:	sub	w8, w2, #0x391
  4244b8:	cmp	w8, #0xa9
  4244bc:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  4244c0:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x7838>
  4244c4:	add	x9, x9, #0x5ce
  4244c8:	adr	x10, 423d44 <feof@plt+0x20c64>
  4244cc:	ldrh	w11, [x9, x8, lsl #1]
  4244d0:	add	x10, x10, x11, lsl #2
  4244d4:	br	x10
  4244d8:	mov	w8, #0xffffe188            	// #-7800
  4244dc:	add	w8, w2, w8
  4244e0:	cmp	w8, #0x4
  4244e4:	b.cc	423d44 <feof@plt+0x20c64>  // b.lo, b.ul, b.last
  4244e8:	mov	w8, #0xffffe11a            	// #-7910
  4244ec:	add	w8, w2, w8
  4244f0:	b	4245bc <feof@plt+0x214dc>
  4244f4:	sub	w8, w2, #0x391
  4244f8:	cmp	w8, #0x3d
  4244fc:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424500:	mov	w9, #0x1                   	// #1
  424504:	lsl	x8, x9, x8
  424508:	mov	x9, #0x41                  	// #65
  42450c:	movk	x9, #0x2900, lsl #16
  424510:	movk	x9, #0x41, lsl #32
  424514:	movk	x9, #0x2100, lsl #48
  424518:	b	423d3c <feof@plt+0x20c5c>
  42451c:	sub	w8, w2, #0x418
  424520:	cmp	w8, #0x2b
  424524:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424528:	mov	w9, #0x1                   	// #1
  42452c:	lsl	x8, x9, x8
  424530:	mov	x9, #0x801                 	// #2049
  424534:	movk	x9, #0x801, lsl #32
  424538:	b	423d3c <feof@plt+0x20c5c>
  42453c:	sub	w8, w2, #0x226
  424540:	cmp	w8, #0x9
  424544:	b.hi	42455c <feof@plt+0x2147c>  // b.pmore
  424548:	mov	w9, #0x1                   	// #1
  42454c:	lsl	w8, w9, w8
  424550:	mov	w9, #0x303                 	// #771
  424554:	tst	w8, w9
  424558:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  42455c:	sub	w8, w2, #0x1ea
  424560:	b	4245bc <feof@plt+0x214dc>
  424564:	sub	w8, w2, #0x4d8
  424568:	cmp	w8, #0x11
  42456c:	b.hi	4245c4 <feof@plt+0x214e4>  // b.pmore
  424570:	mov	w9, #0x1                   	// #1
  424574:	lsl	w8, w9, w8
  424578:	tst	w8, #0x30003
  42457c:	b.ne	423d44 <feof@plt+0x20c64>  // b.any
  424580:	b	4245c4 <feof@plt+0x214e4>
  424584:	cmp	w2, #0x1b7
  424588:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  42458c:	cmp	w2, #0x292
  424590:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  424594:	b	4245c4 <feof@plt+0x214e4>
  424598:	cmp	w2, #0x55
  42459c:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4245a0:	cmp	w2, #0x75
  4245a4:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4245a8:	b	4245c4 <feof@plt+0x214e4>
  4245ac:	mov	w8, #0xffffe19e            	// #-7778
  4245b0:	add	w8, w2, w8
  4245b4:	b	4245bc <feof@plt+0x214dc>
  4245b8:	sub	w8, w2, #0x16a
  4245bc:	cmp	w8, #0x2
  4245c0:	b.cc	423d44 <feof@plt+0x20c64>  // b.lo, b.ul, b.last
  4245c4:	mov	w0, #0x1                   	// #1
  4245c8:	ret
  4245cc:	cmp	w2, #0x41
  4245d0:	b.eq	423d44 <feof@plt+0x20c64>  // b.none
  4245d4:	b	4245c4 <feof@plt+0x214e4>
  4245d8:	stp	x29, x30, [sp, #-80]!
  4245dc:	stp	x26, x25, [sp, #16]
  4245e0:	stp	x24, x23, [sp, #32]
  4245e4:	stp	x22, x21, [sp, #48]
  4245e8:	stp	x20, x19, [sp, #64]
  4245ec:	ldrsw	x25, [x3, #16]
  4245f0:	ldr	x21, [x0, #1216]
  4245f4:	mov	x19, x2
  4245f8:	mov	w20, w1
  4245fc:	mov	x29, sp
  424600:	cmp	x21, x25
  424604:	b.ne	424638 <feof@plt+0x21558>  // b.any
  424608:	ldp	x10, x8, [x19, #8]
  42460c:	add	x9, x8, #0x1
  424610:	cmp	x9, x10
  424614:	b.ls	4246c8 <feof@plt+0x215e8>  // b.plast
  424618:	ldr	x0, [x19]
  42461c:	add	x1, x10, #0x100
  424620:	str	x1, [x19, #8]
  424624:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  424628:	ldr	x8, [x19, #16]
  42462c:	str	x0, [x19]
  424630:	add	x9, x8, #0x1
  424634:	b	4246cc <feof@plt+0x215ec>
  424638:	ldp	x8, x23, [x19, #8]
  42463c:	ldrb	w22, [x0, #1242]
  424640:	cmp	x21, #0x20
  424644:	mov	w9, #0x20                  	// #32
  424648:	udiv	x24, x25, x21
  42464c:	csel	x26, x21, x9, cc  // cc = lo, ul, last
  424650:	add	x9, x23, x24
  424654:	cmp	x9, x8
  424658:	b.ls	424670 <feof@plt+0x21590>  // b.plast
  42465c:	ldr	x0, [x19]
  424660:	add	x1, x8, #0x100
  424664:	str	x1, [x19, #8]
  424668:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42466c:	str	x0, [x19]
  424670:	cmp	x21, x25
  424674:	b.hi	4246b8 <feof@plt+0x215d8>  // b.pmore
  424678:	mov	x9, #0xffffffffffffffff    	// #-1
  42467c:	lsl	x9, x9, x26
  424680:	mov	x8, xzr
  424684:	eor	w9, w9, #0xff
  424688:	ldr	x11, [x19]
  42468c:	mvn	x12, x8
  424690:	cmp	w22, #0x0
  424694:	add	x12, x24, x12
  424698:	csel	x12, x8, x12, eq  // eq = none
  42469c:	add	x8, x8, #0x1
  4246a0:	and	w10, w20, w9
  4246a4:	lsr	w20, w20, w21
  4246a8:	add	x12, x12, x23
  4246ac:	cmp	x24, x8
  4246b0:	strb	w10, [x11, x12]
  4246b4:	b.hi	424688 <feof@plt+0x215a8>  // b.pmore
  4246b8:	ldr	x8, [x19, #16]
  4246bc:	add	x8, x8, x24
  4246c0:	str	x8, [x19, #16]
  4246c4:	b	4246d4 <feof@plt+0x215f4>
  4246c8:	ldr	x0, [x19]
  4246cc:	str	x9, [x19, #16]
  4246d0:	strb	w20, [x0, x8]
  4246d4:	ldp	x20, x19, [sp, #64]
  4246d8:	ldp	x22, x21, [sp, #48]
  4246dc:	ldp	x24, x23, [sp, #32]
  4246e0:	ldp	x26, x25, [sp, #16]
  4246e4:	ldp	x29, x30, [sp], #80
  4246e8:	ret
  4246ec:	sub	sp, sp, #0x100
  4246f0:	stp	x29, x30, [sp, #176]
  4246f4:	stp	x24, x23, [sp, #208]
  4246f8:	stp	x22, x21, [sp, #224]
  4246fc:	stp	x20, x19, [sp, #240]
  424700:	ldrb	w23, [x0, #27]
  424704:	ldrb	w24, [x0, #25]
  424708:	mov	x19, x0
  42470c:	mov	w20, w1
  424710:	str	x25, [sp, #192]
  424714:	add	x29, sp, #0xb0
  424718:	cbz	w23, 424720 <feof@plt+0x21640>
  42471c:	strb	wzr, [x19, #24]
  424720:	cbz	w24, 424744 <feof@plt+0x21664>
  424724:	ldrb	w8, [x19, #1154]
  424728:	cbz	w8, 424740 <feof@plt+0x21660>
  42472c:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  424730:	add	x2, x2, #0xf52
  424734:	mov	w1, #0x2                   	// #2
  424738:	mov	x0, x19
  42473c:	bl	4288a0 <feof@plt+0x257c0>
  424740:	strh	wzr, [x19, #24]
  424744:	ldr	x8, [x19, #40]
  424748:	mov	w21, #0x1                   	// #1
  42474c:	mov	w9, #0x53                  	// #83
  424750:	strb	w21, [x19, #16]
  424754:	strb	wzr, [x19, #21]
  424758:	strb	w9, [x19, #156]
  42475c:	ldr	w8, [x8, #60]
  424760:	mov	x0, x19
  424764:	str	w8, [x19, #48]
  424768:	bl	42fda4 <feof@plt+0x2ccc4>
  42476c:	ldrb	w8, [x0, #4]
  424770:	cmp	w8, #0x16
  424774:	b.eq	42483c <feof@plt+0x2175c>  // b.none
  424778:	cmp	w8, #0x37
  42477c:	b.eq	424844 <feof@plt+0x21764>  // b.none
  424780:	mov	x22, x0
  424784:	cmp	w8, #0x35
  424788:	b.ne	424798 <feof@plt+0x216b8>  // b.any
  42478c:	ldr	x8, [x22, #8]
  424790:	ldrb	w8, [x8, #16]
  424794:	tbnz	w8, #0, 42485c <feof@plt+0x2177c>
  424798:	ldr	w8, [x19, #1116]
  42479c:	cmp	w8, #0x15
  4247a0:	b.eq	424850 <feof@plt+0x21770>  // b.none
  4247a4:	ldrb	w8, [x19, #18]
  4247a8:	cbnz	w8, 42494c <feof@plt+0x2186c>
  4247ac:	mov	x0, x19
  4247b0:	mov	x1, x22
  4247b4:	bl	433540 <feof@plt+0x30460>
  4247b8:	ldr	x8, [x19, #1064]
  4247bc:	mov	x20, x0
  4247c0:	cbz	x8, 424934 <feof@plt+0x21854>
  4247c4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4247c8:	add	x2, x2, #0xa08
  4247cc:	mov	x0, x19
  4247d0:	mov	x1, x20
  4247d4:	blr	x8
  4247d8:	cbz	x0, 424934 <feof@plt+0x21854>
  4247dc:	ldr	x1, [x19, #40]
  4247e0:	ldr	w2, [x22]
  4247e4:	mov	x21, x0
  4247e8:	add	x0, sp, #0x8
  4247ec:	mov	x3, xzr
  4247f0:	bl	436a50 <feof@plt+0x33970>
  4247f4:	ldr	x0, [x19, #40]
  4247f8:	ldr	w1, [x22]
  4247fc:	bl	4347b4 <feof@plt+0x316d4>
  424800:	mov	x1, x0
  424804:	add	x0, sp, #0x8
  424808:	mov	x2, x21
  42480c:	bl	4377fc <feof@plt+0x3471c>
  424810:	adrp	x3, 46d000 <_obstack_memory_used@@Base+0xb838>
  424814:	add	x3, x3, #0xfba
  424818:	add	x2, sp, #0x8
  42481c:	mov	w1, #0x3                   	// #3
  424820:	mov	x0, x19
  424824:	mov	x4, x20
  424828:	mov	x5, x21
  42482c:	bl	429238 <feof@plt+0x26158>
  424830:	add	x0, sp, #0x8
  424834:	bl	436b30 <feof@plt+0x33a50>
  424838:	b	42494c <feof@plt+0x2186c>
  42483c:	mov	x25, xzr
  424840:	b	4249ec <feof@plt+0x2190c>
  424844:	ldr	w8, [x19, #1116]
  424848:	cmp	w8, #0x15
  42484c:	b.ne	42487c <feof@plt+0x2179c>  // b.any
  424850:	mov	w21, wzr
  424854:	mov	x25, xzr
  424858:	b	4249ec <feof@plt+0x2190c>
  42485c:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  424860:	lsr	w8, w8, #1
  424864:	add	x9, x9, #0x828
  424868:	mov	w10, #0x18                  	// #24
  42486c:	umaddl	x22, w8, w10, x9
  424870:	ldrb	w8, [x22, #19]
  424874:	tbz	w8, #1, 4248b8 <feof@plt+0x217d8>
  424878:	b	4248bc <feof@plt+0x217dc>
  42487c:	ldrb	w8, [x19, #1154]
  424880:	cbz	w8, 4248a8 <feof@plt+0x217c8>
  424884:	ldrb	w8, [x19, #1155]
  424888:	cbnz	w8, 4248a8 <feof@plt+0x217c8>
  42488c:	ldrb	w8, [x19, #18]
  424890:	cbnz	w8, 4248a8 <feof@plt+0x217c8>
  424894:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  424898:	add	x2, x2, #0xf8f
  42489c:	mov	w1, #0x2                   	// #2
  4248a0:	mov	x0, x19
  4248a4:	bl	4288a0 <feof@plt+0x257c0>
  4248a8:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0xc838>
  4248ac:	add	x22, x22, #0x9f0
  4248b0:	ldrb	w8, [x22, #19]
  4248b4:	tbnz	w8, #1, 4248bc <feof@plt+0x217dc>
  4248b8:	strb	wzr, [x19, #440]
  4248bc:	ldrb	w9, [x19, #1155]
  4248c0:	cbz	w9, 4248ec <feof@plt+0x2180c>
  4248c4:	ldrb	w9, [x19, #1244]
  4248c8:	cbnz	w9, 4248dc <feof@plt+0x217fc>
  4248cc:	mov	x25, xzr
  4248d0:	mov	w21, wzr
  4248d4:	cbnz	w20, 4249ec <feof@plt+0x2190c>
  4248d8:	tbz	w8, #3, 4249ec <feof@plt+0x2190c>
  4248dc:	and	w8, w8, #0x4
  4248e0:	strb	w8, [x19, #19]
  4248e4:	strb	w8, [x19, #17]
  4248e8:	b	4249c8 <feof@plt+0x218e8>
  4248ec:	ldrb	w9, [x19, #18]
  4248f0:	and	w10, w8, #0x4
  4248f4:	strb	w10, [x19, #19]
  4248f8:	strb	w10, [x19, #17]
  4248fc:	cbz	w9, 424954 <feof@plt+0x21874>
  424900:	ldrb	w8, [x19, #1138]
  424904:	cbz	w8, 4249c8 <feof@plt+0x218e8>
  424908:	adrp	x8, 46e000 <_obstack_memory_used@@Base+0xc838>
  42490c:	add	x8, x8, #0x900
  424910:	cmp	x22, x8
  424914:	b.eq	424994 <feof@plt+0x218b4>  // b.none
  424918:	ldrb	w8, [x22, #18]
  42491c:	cbz	w20, 4249ac <feof@plt+0x218cc>
  424920:	cbnz	w8, 4249c8 <feof@plt+0x218e8>
  424924:	ldr	x3, [x22, #8]
  424928:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42492c:	add	x2, x2, #0x4a7
  424930:	b	4249bc <feof@plt+0x218dc>
  424934:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  424938:	add	x2, x2, #0xff1
  42493c:	mov	w1, #0x3                   	// #3
  424940:	mov	x0, x19
  424944:	mov	x3, x20
  424948:	bl	4288a0 <feof@plt+0x257c0>
  42494c:	mov	x25, xzr
  424950:	b	4249dc <feof@plt+0x218fc>
  424954:	ldrb	w9, [x22, #18]
  424958:	cmp	w9, #0x2
  42495c:	b.ne	424b24 <feof@plt+0x21a44>  // b.any
  424960:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  424964:	add	x9, x9, #0x990
  424968:	cmp	x22, x9
  42496c:	b.eq	424b1c <feof@plt+0x21a3c>  // b.none
  424970:	ldrb	w9, [x19, #1154]
  424974:	cbz	w9, 424b24 <feof@plt+0x21a44>
  424978:	ldr	x3, [x22, #8]
  42497c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424980:	add	x2, x2, #0x445
  424984:	mov	w1, #0x2                   	// #2
  424988:	mov	x0, x19
  42498c:	bl	4288a0 <feof@plt+0x257c0>
  424990:	b	424900 <feof@plt+0x21820>
  424994:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424998:	add	x2, x2, #0x47e
  42499c:	mov	w1, #0x6                   	// #6
  4249a0:	mov	x0, x19
  4249a4:	bl	4289d0 <feof@plt+0x258f0>
  4249a8:	b	4249c8 <feof@plt+0x218e8>
  4249ac:	cbz	w8, 4249c8 <feof@plt+0x218e8>
  4249b0:	ldr	x3, [x22, #8]
  4249b4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4249b8:	add	x2, x2, #0x4d5
  4249bc:	mov	w1, #0x6                   	// #6
  4249c0:	mov	x0, x19
  4249c4:	bl	4289d0 <feof@plt+0x258f0>
  4249c8:	ldrb	w8, [x19, #18]
  4249cc:	cbz	w8, 4249e4 <feof@plt+0x21904>
  4249d0:	ldrb	w8, [x22, #19]
  4249d4:	tst	w8, #0x1
  4249d8:	csel	x25, xzr, x22, eq  // eq = none
  4249dc:	mov	w21, #0x1                   	// #1
  4249e0:	b	4249ec <feof@plt+0x2190c>
  4249e4:	mov	w21, #0x1                   	// #1
  4249e8:	mov	x25, x22
  4249ec:	ldrb	w8, [x19, #1160]
  4249f0:	str	x25, [x19, #144]
  4249f4:	cbz	w8, 424a00 <feof@plt+0x21920>
  4249f8:	mov	x0, x19
  4249fc:	bl	424b64 <feof@plt+0x21a84>
  424a00:	cbz	x25, 424a18 <feof@plt+0x21938>
  424a04:	ldr	x8, [x19, #144]
  424a08:	mov	x0, x19
  424a0c:	ldr	x8, [x8]
  424a10:	blr	x8
  424a14:	b	424a28 <feof@plt+0x21948>
  424a18:	cbnz	w21, 424a28 <feof@plt+0x21948>
  424a1c:	mov	w1, #0x1                   	// #1
  424a20:	mov	x0, x19
  424a24:	bl	438d5c <feof@plt+0x35c7c>
  424a28:	ldrb	w9, [x19, #1160]
  424a2c:	ldrb	w8, [x19, #32]
  424a30:	cbz	w9, 424a64 <feof@plt+0x21984>
  424a34:	cbnz	w8, 424a44 <feof@plt+0x21964>
  424a38:	ldrb	w8, [x19, #24]
  424a3c:	sub	w8, w8, #0x1
  424a40:	strb	w8, [x19, #24]
  424a44:	ldr	x8, [x19, #144]
  424a48:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  424a4c:	add	x9, x9, #0x828
  424a50:	cmp	x8, x9
  424a54:	b.eq	424ac0 <feof@plt+0x219e0>  // b.none
  424a58:	mov	x0, x19
  424a5c:	bl	43d710 <feof@plt+0x3a630>
  424a60:	b	424ac0 <feof@plt+0x219e0>
  424a64:	cbz	w21, 424ac0 <feof@plt+0x219e0>
  424a68:	cbz	w8, 424a78 <feof@plt+0x21998>
  424a6c:	b	424ac0 <feof@plt+0x219e0>
  424a70:	mov	x0, x19
  424a74:	bl	4384c8 <feof@plt+0x353e8>
  424a78:	ldr	x8, [x19, #136]
  424a7c:	ldr	x8, [x8, #8]
  424a80:	cbnz	x8, 424a70 <feof@plt+0x21990>
  424a84:	ldr	x8, [x19, #448]
  424a88:	ldurb	w8, [x8, #-20]
  424a8c:	cmp	w8, #0x16
  424a90:	b.eq	424aa8 <feof@plt+0x219c8>  // b.none
  424a94:	mov	x0, x19
  424a98:	bl	42fda4 <feof@plt+0x2ccc4>
  424a9c:	ldrb	w8, [x0, #4]
  424aa0:	cmp	w8, #0x16
  424aa4:	b.ne	424a94 <feof@plt+0x219b4>  // b.any
  424aa8:	ldr	w8, [x19, #500]
  424aac:	cbnz	w8, 424ac0 <feof@plt+0x219e0>
  424ab0:	ldr	x8, [x19, #472]
  424ab4:	add	x9, x19, #0x1c8
  424ab8:	str	x9, [x19, #488]
  424abc:	str	x8, [x19, #448]
  424ac0:	ldrb	w8, [x19, #1123]
  424ac4:	strb	wzr, [x19, #16]
  424ac8:	sturh	wzr, [x19, #19]
  424acc:	str	xzr, [x19, #144]
  424ad0:	cmp	w8, #0x0
  424ad4:	cset	w8, eq  // eq = none
  424ad8:	strb	w8, [x19, #21]
  424adc:	cbz	w24, 424af0 <feof@plt+0x21a10>
  424ae0:	ldrb	w8, [x19, #32]
  424ae4:	cbnz	w8, 424af0 <feof@plt+0x21a10>
  424ae8:	mov	w8, #0x201                 	// #513
  424aec:	strh	w8, [x19, #24]
  424af0:	cbz	w23, 424afc <feof@plt+0x21a1c>
  424af4:	mov	w8, #0x1                   	// #1
  424af8:	strb	w8, [x19, #24]
  424afc:	mov	w0, w21
  424b00:	ldp	x20, x19, [sp, #240]
  424b04:	ldp	x22, x21, [sp, #224]
  424b08:	ldp	x24, x23, [sp, #208]
  424b0c:	ldr	x25, [sp, #192]
  424b10:	ldp	x29, x30, [sp, #176]
  424b14:	add	sp, sp, #0x100
  424b18:	ret
  424b1c:	ldrb	w9, [x19, #1122]
  424b20:	cbz	w9, 424970 <feof@plt+0x21890>
  424b24:	tbnz	w8, #5, 424b40 <feof@plt+0x21a60>
  424b28:	adrp	x8, 46e000 <_obstack_memory_used@@Base+0xc838>
  424b2c:	add	x8, x8, #0x990
  424b30:	cmp	x22, x8
  424b34:	b.ne	424900 <feof@plt+0x21820>  // b.any
  424b38:	ldrb	w8, [x19, #1122]
  424b3c:	cbnz	w8, 424900 <feof@plt+0x21820>
  424b40:	ldrb	w8, [x19, #1132]
  424b44:	cbz	w8, 424900 <feof@plt+0x21820>
  424b48:	ldr	x3, [x22, #8]
  424b4c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424b50:	add	x2, x2, #0x45c
  424b54:	mov	w1, #0x1                   	// #1
  424b58:	mov	x0, x19
  424b5c:	bl	4289d0 <feof@plt+0x258f0>
  424b60:	b	424900 <feof@plt+0x21820>
  424b64:	stp	x29, x30, [sp, #-32]!
  424b68:	stp	x20, x19, [sp, #16]
  424b6c:	ldr	x8, [x0, #144]
  424b70:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  424b74:	add	x9, x9, #0x828
  424b78:	mov	x19, x0
  424b7c:	cmp	x8, x9
  424b80:	mov	x29, sp
  424b84:	b.eq	424c30 <feof@plt+0x21b50>  // b.none
  424b88:	cbz	x8, 424b9c <feof@plt+0x21abc>
  424b8c:	ldrb	w9, [x8, #19]
  424b90:	tst	w9, #0x10
  424b94:	cset	w9, eq  // eq = none
  424b98:	b	424ba0 <feof@plt+0x21ac0>
  424b9c:	mov	w9, wzr
  424ba0:	ldrb	w10, [x19, #18]
  424ba4:	adrp	x11, 46e000 <_obstack_memory_used@@Base+0xc838>
  424ba8:	add	x11, x11, #0x888
  424bac:	add	x12, x11, #0x78
  424bb0:	cmp	w10, #0x0
  424bb4:	cset	w20, ne  // ne = any
  424bb8:	cmp	x8, x11
  424bbc:	cset	w10, eq  // eq = none
  424bc0:	cmp	x8, x12
  424bc4:	cset	w8, eq  // eq = none
  424bc8:	orr	w8, w10, w8
  424bcc:	strb	w8, [x19, #20]
  424bd0:	cbz	w8, 424bd8 <feof@plt+0x21af8>
  424bd4:	strb	wzr, [x19, #18]
  424bd8:	cbz	w9, 424c08 <feof@plt+0x21b28>
  424bdc:	ldrb	w8, [x19, #24]
  424be0:	mov	x0, x19
  424be4:	mov	x1, xzr
  424be8:	mov	w2, wzr
  424bec:	add	w8, w8, #0x1
  424bf0:	strb	w8, [x19, #24]
  424bf4:	bl	43d7a0 <feof@plt+0x3a6c0>
  424bf8:	ldrb	w8, [x19, #24]
  424bfc:	sub	w8, w8, #0x1
  424c00:	strb	w8, [x19, #24]
  424c04:	b	424c18 <feof@plt+0x21b38>
  424c08:	mov	x0, x19
  424c0c:	mov	x1, xzr
  424c10:	mov	w2, wzr
  424c14:	bl	43d7a0 <feof@plt+0x3a6c0>
  424c18:	ldr	x1, [x19, #1312]
  424c1c:	ldr	x8, [x19, #1328]
  424c20:	mov	x0, x19
  424c24:	strb	w20, [x19, #18]
  424c28:	sub	x2, x8, x1
  424c2c:	bl	43d6dc <feof@plt+0x3a5fc>
  424c30:	ldrb	w8, [x19, #24]
  424c34:	add	w8, w8, #0x1
  424c38:	strb	w8, [x19, #24]
  424c3c:	ldp	x20, x19, [sp, #16]
  424c40:	ldp	x29, x30, [sp], #32
  424c44:	ret
  424c48:	adrp	x1, 424000 <feof@plt+0x20f20>
  424c4c:	add	x1, x1, #0xc58
  424c50:	mov	x2, xzr
  424c54:	b	42f0fc <feof@plt+0x2c01c>
  424c58:	ldrh	w8, [x1, #18]
  424c5c:	mov	w9, #0xff34                	// #65332
  424c60:	mov	w0, #0x1                   	// #1
  424c64:	str	xzr, [x1, #24]
  424c68:	and	w8, w8, w9
  424c6c:	strh	w8, [x1, #18]
  424c70:	ret
  424c74:	stp	x29, x30, [sp, #-32]!
  424c78:	stp	x20, x19, [sp, #16]
  424c7c:	mov	x19, x0
  424c80:	ldr	x0, [x0, #40]
  424c84:	mov	w8, w3
  424c88:	mov	x3, x2
  424c8c:	mov	w2, w4
  424c90:	mov	w4, w8
  424c94:	mov	x29, sp
  424c98:	bl	434b8c <feof@plt+0x31aac>
  424c9c:	mov	x20, x0
  424ca0:	cbz	x0, 424cb4 <feof@plt+0x21bd4>
  424ca4:	ldr	x0, [x19, #40]
  424ca8:	ldr	w1, [x20, #16]
  424cac:	mov	w2, #0x7f                  	// #127
  424cb0:	bl	435084 <feof@plt+0x31fa4>
  424cb4:	ldr	x2, [x19, #912]
  424cb8:	cbz	x2, 424cd0 <feof@plt+0x21bf0>
  424cbc:	mov	x0, x19
  424cc0:	mov	x1, x20
  424cc4:	ldp	x20, x19, [sp, #16]
  424cc8:	ldp	x29, x30, [sp], #32
  424ccc:	br	x2
  424cd0:	ldp	x20, x19, [sp, #16]
  424cd4:	ldp	x29, x30, [sp], #32
  424cd8:	ret
  424cdc:	cbz	x3, 424d18 <feof@plt+0x21c38>
  424ce0:	stp	x29, x30, [sp, #-32]!
  424ce4:	stp	x20, x19, [sp, #16]
  424ce8:	mov	x19, x3
  424cec:	mov	w3, wzr
  424cf0:	mov	x29, sp
  424cf4:	mov	w20, w4
  424cf8:	bl	424d28 <feof@plt+0x21c48>
  424cfc:	cbz	x0, 424d0c <feof@plt+0x21c2c>
  424d00:	and	w8, w20, #0x1
  424d04:	strb	w8, [x0, #19]
  424d08:	str	x19, [x0, #24]
  424d0c:	ldp	x20, x19, [sp, #16]
  424d10:	ldp	x29, x30, [sp], #32
  424d14:	ret
  424d18:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424d1c:	add	x2, x2, #0x15
  424d20:	mov	w1, #0x4                   	// #4
  424d24:	b	4288a0 <feof@plt+0x257c0>
  424d28:	stp	x29, x30, [sp, #-64]!
  424d2c:	stp	x22, x21, [sp, #32]
  424d30:	stp	x20, x19, [sp, #48]
  424d34:	mov	x20, x2
  424d38:	mov	x21, x1
  424d3c:	mov	x19, x0
  424d40:	str	x23, [sp, #16]
  424d44:	mov	x29, sp
  424d48:	cbz	x1, 424dc4 <feof@plt+0x21ce4>
  424d4c:	mov	x0, x21
  424d50:	and	w23, w3, #0x1
  424d54:	bl	402a50 <strlen@plt>
  424d58:	mov	x2, x0
  424d5c:	mov	x0, x19
  424d60:	mov	x1, x21
  424d64:	bl	42f080 <feof@plt+0x2bfa0>
  424d68:	ldr	x8, [x19, #896]
  424d6c:	mov	x22, x0
  424d70:	cbz	x8, 424d88 <feof@plt+0x21ca8>
  424d74:	ldr	x9, [x8, #8]
  424d78:	cmp	x9, x22
  424d7c:	b.eq	424de0 <feof@plt+0x21d00>  // b.none
  424d80:	ldr	x8, [x8]
  424d84:	cbnz	x8, 424d74 <feof@plt+0x21c94>
  424d88:	mov	w1, #0x20                  	// #32
  424d8c:	mov	x0, x19
  424d90:	bl	4340c4 <feof@plt+0x30fe4>
  424d94:	movi	v0.2d, #0x0
  424d98:	stp	q0, q0, [x0]
  424d9c:	ldr	x9, [x19, #896]
  424da0:	mov	x8, x0
  424da4:	mov	w10, #0x1                   	// #1
  424da8:	str	x9, [x0]
  424dac:	str	x0, [x19, #896]
  424db0:	str	x22, [x0, #8]
  424db4:	strb	w10, [x0, #16]
  424db8:	strb	w23, [x0, #19]
  424dbc:	add	x23, x8, #0x18
  424dc0:	b	424e10 <feof@plt+0x21d30>
  424dc4:	tbz	w3, #0, 424e0c <feof@plt+0x21d2c>
  424dc8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424dcc:	add	x2, x2, #0x553
  424dd0:	mov	w1, #0x4                   	// #4
  424dd4:	mov	x0, x19
  424dd8:	mov	x3, x20
  424ddc:	b	424e8c <feof@plt+0x21dac>
  424de0:	ldrb	w9, [x8, #16]
  424de4:	cbz	w9, 424e78 <feof@plt+0x21d98>
  424de8:	ldrb	w9, [x8, #19]
  424dec:	cmp	w9, w23
  424df0:	b.eq	424dbc <feof@plt+0x21cdc>  // b.none
  424df4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424df8:	add	x2, x2, #0x50e
  424dfc:	mov	w1, #0x4                   	// #4
  424e00:	mov	x0, x19
  424e04:	mov	x3, x21
  424e08:	b	424e8c <feof@plt+0x21dac>
  424e0c:	add	x23, x19, #0x380
  424e10:	mov	x0, x20
  424e14:	bl	402a50 <strlen@plt>
  424e18:	mov	x2, x0
  424e1c:	mov	x0, x19
  424e20:	mov	x1, x20
  424e24:	bl	42f080 <feof@plt+0x2bfa0>
  424e28:	ldr	x8, [x23]
  424e2c:	mov	x22, x0
  424e30:	cbz	x8, 424e48 <feof@plt+0x21d68>
  424e34:	ldr	x9, [x8, #8]
  424e38:	cmp	x9, x22
  424e3c:	b.eq	424e70 <feof@plt+0x21d90>  // b.none
  424e40:	ldr	x8, [x8]
  424e44:	cbnz	x8, 424e34 <feof@plt+0x21d54>
  424e48:	mov	w1, #0x20                  	// #32
  424e4c:	mov	x0, x19
  424e50:	bl	4340c4 <feof@plt+0x30fe4>
  424e54:	movi	v0.2d, #0x0
  424e58:	stp	q0, q0, [x0]
  424e5c:	ldr	x8, [x23]
  424e60:	str	x8, [x0]
  424e64:	str	x0, [x23]
  424e68:	str	x22, [x0, #8]
  424e6c:	b	424e94 <feof@plt+0x21db4>
  424e70:	ldrb	w8, [x8, #16]
  424e74:	cbz	w8, 424ea8 <feof@plt+0x21dc8>
  424e78:	ldr	x3, [x22]
  424e7c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424e80:	add	x2, x2, #0x590
  424e84:	mov	w1, #0x4                   	// #4
  424e88:	mov	x0, x19
  424e8c:	bl	4288a0 <feof@plt+0x257c0>
  424e90:	mov	x0, xzr
  424e94:	ldp	x20, x19, [sp, #48]
  424e98:	ldp	x22, x21, [sp, #32]
  424e9c:	ldr	x23, [sp, #16]
  424ea0:	ldp	x29, x30, [sp], #64
  424ea4:	ret
  424ea8:	cbz	x21, 424ecc <feof@plt+0x21dec>
  424eac:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424eb0:	add	x2, x2, #0x5c9
  424eb4:	mov	w1, #0x4                   	// #4
  424eb8:	mov	x0, x19
  424ebc:	mov	x3, x21
  424ec0:	mov	x4, x20
  424ec4:	bl	4288a0 <feof@plt+0x257c0>
  424ec8:	b	424e90 <feof@plt+0x21db0>
  424ecc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424ed0:	add	x2, x2, #0x5ed
  424ed4:	b	424dd0 <feof@plt+0x21cf0>
  424ed8:	stp	x29, x30, [sp, #-32]!
  424edc:	stp	x20, x19, [sp, #16]
  424ee0:	mov	w19, w3
  424ee4:	and	w3, w5, #0x1
  424ee8:	mov	x29, sp
  424eec:	mov	w20, w4
  424ef0:	bl	424d28 <feof@plt+0x21c48>
  424ef4:	cbz	x0, 424f0c <feof@plt+0x21e2c>
  424ef8:	and	w8, w20, #0x1
  424efc:	mov	w9, #0x1                   	// #1
  424f00:	strb	w9, [x0, #18]
  424f04:	strb	w8, [x0, #19]
  424f08:	str	w19, [x0, #24]
  424f0c:	ldp	x20, x19, [sp, #16]
  424f10:	ldp	x29, x30, [sp], #32
  424f14:	ret
  424f18:	stp	x29, x30, [sp, #-48]!
  424f1c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424f20:	add	x2, x2, #0x3a
  424f24:	mov	x1, xzr
  424f28:	mov	w3, wzr
  424f2c:	str	x21, [sp, #16]
  424f30:	stp	x20, x19, [sp, #32]
  424f34:	mov	x29, sp
  424f38:	mov	x19, x0
  424f3c:	bl	424d28 <feof@plt+0x21c48>
  424f40:	adrp	x8, 425000 <feof@plt+0x21f20>
  424f44:	mov	w21, #0x1                   	// #1
  424f48:	add	x8, x8, #0x84
  424f4c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424f50:	strb	w21, [x0, #17]
  424f54:	str	x8, [x0, #24]
  424f58:	add	x2, x2, #0x3f
  424f5c:	mov	x0, x19
  424f60:	mov	x1, xzr
  424f64:	mov	w3, wzr
  424f68:	bl	424d28 <feof@plt+0x21c48>
  424f6c:	adrp	x8, 425000 <feof@plt+0x21f20>
  424f70:	add	x8, x8, #0x110
  424f74:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424f78:	strb	w21, [x0, #17]
  424f7c:	str	x8, [x0, #24]
  424f80:	add	x2, x2, #0x4a
  424f84:	mov	x0, x19
  424f88:	mov	x1, xzr
  424f8c:	mov	w3, wzr
  424f90:	bl	424d28 <feof@plt+0x21c48>
  424f94:	adrp	x8, 425000 <feof@plt+0x21f20>
  424f98:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0xc838>
  424f9c:	add	x8, x8, #0x3d0
  424fa0:	add	x20, x20, #0x54
  424fa4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424fa8:	strb	w21, [x0, #17]
  424fac:	str	x8, [x0, #24]
  424fb0:	add	x2, x2, #0x58
  424fb4:	mov	x0, x19
  424fb8:	mov	x1, x20
  424fbc:	mov	w3, wzr
  424fc0:	bl	424d28 <feof@plt+0x21c48>
  424fc4:	adrp	x8, 425000 <feof@plt+0x21f20>
  424fc8:	add	x8, x8, #0x844
  424fcc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424fd0:	strb	w21, [x0, #17]
  424fd4:	str	x8, [x0, #24]
  424fd8:	add	x2, x2, #0x5f
  424fdc:	mov	x0, x19
  424fe0:	mov	x1, x20
  424fe4:	mov	w3, wzr
  424fe8:	bl	424d28 <feof@plt+0x21c48>
  424fec:	adrp	x8, 425000 <feof@plt+0x21f20>
  424ff0:	add	x8, x8, #0x8ec
  424ff4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  424ff8:	strb	w21, [x0, #17]
  424ffc:	str	x8, [x0, #24]
  425000:	add	x2, x2, #0x219
  425004:	mov	x0, x19
  425008:	mov	x1, x20
  42500c:	mov	w3, wzr
  425010:	bl	424d28 <feof@plt+0x21c48>
  425014:	adrp	x8, 425000 <feof@plt+0x21f20>
  425018:	add	x8, x8, #0x9bc
  42501c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  425020:	strb	w21, [x0, #17]
  425024:	str	x8, [x0, #24]
  425028:	add	x2, x2, #0x668
  42502c:	mov	x0, x19
  425030:	mov	x1, x20
  425034:	mov	w3, wzr
  425038:	bl	424d28 <feof@plt+0x21c48>
  42503c:	adrp	x8, 425000 <feof@plt+0x21f20>
  425040:	add	x8, x8, #0xacc
  425044:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x2838>
  425048:	strb	w21, [x0, #17]
  42504c:	str	x8, [x0, #24]
  425050:	add	x2, x2, #0x5e3
  425054:	mov	x0, x19
  425058:	mov	x1, x20
  42505c:	mov	w3, wzr
  425060:	bl	424d28 <feof@plt+0x21c48>
  425064:	adrp	x8, 425000 <feof@plt+0x21f20>
  425068:	add	x8, x8, #0xad4
  42506c:	strb	w21, [x0, #17]
  425070:	str	x8, [x0, #24]
  425074:	ldp	x20, x19, [sp, #32]
  425078:	ldr	x21, [sp, #16]
  42507c:	ldp	x29, x30, [sp], #48
  425080:	ret
  425084:	stp	x29, x30, [sp, #-32]!
  425088:	ldr	x8, [x0, #40]
  42508c:	str	x19, [sp, #16]
  425090:	mov	x19, x0
  425094:	mov	x29, sp
  425098:	ldr	w8, [x8, #48]
  42509c:	cmp	w8, #0x1
  4250a0:	b.ne	4250b8 <feof@plt+0x21fd8>  // b.any
  4250a4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4250a8:	add	x2, x2, #0x60e
  4250ac:	mov	x0, x19
  4250b0:	mov	w1, wzr
  4250b4:	bl	4288a0 <feof@plt+0x257c0>
  4250b8:	ldr	x8, [x19, #448]
  4250bc:	ldurb	w8, [x8, #-20]
  4250c0:	cmp	w8, #0x16
  4250c4:	b.eq	4250f8 <feof@plt+0x22018>  // b.none
  4250c8:	mov	x0, x19
  4250cc:	bl	42fda4 <feof@plt+0x2ccc4>
  4250d0:	ldrb	w8, [x0, #4]
  4250d4:	cmp	w8, #0x16
  4250d8:	b.eq	4250f8 <feof@plt+0x22018>  // b.none
  4250dc:	ldr	x8, [x19, #144]
  4250e0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4250e4:	add	x2, x2, #0x249
  4250e8:	mov	x0, x19
  4250ec:	ldr	x3, [x8, #8]
  4250f0:	mov	w1, wzr
  4250f4:	bl	428b00 <feof@plt+0x25a20>
  4250f8:	ldr	x8, [x19]
  4250fc:	mov	x0, x19
  425100:	ldr	x19, [sp, #16]
  425104:	ldr	x1, [x8, #80]
  425108:	ldp	x29, x30, [sp], #32
  42510c:	b	42d79c <feof@plt+0x2a6bc>
  425110:	stp	x29, x30, [sp, #-64]!
  425114:	str	x23, [sp, #16]
  425118:	stp	x22, x21, [sp, #32]
  42511c:	stp	x20, x19, [sp, #48]
  425120:	mov	x29, sp
  425124:	mov	x19, x0
  425128:	bl	425cf4 <feof@plt+0x22c14>
  42512c:	cbz	x0, 42530c <feof@plt+0x2222c>
  425130:	ldr	w8, [x0, #8]
  425134:	mov	x10, sp
  425138:	add	w9, w8, #0x2
  42513c:	add	x9, x9, #0xf
  425140:	and	x9, x9, #0x1fffffff0
  425144:	sub	x20, x10, x9
  425148:	mov	sp, x20
  42514c:	ldr	x9, [x0, #16]
  425150:	mov	x10, x9
  425154:	ldrb	w11, [x10], #1
  425158:	add	x8, x9, x8
  42515c:	sub	x8, x8, #0x1
  425160:	cmp	w11, #0x4c
  425164:	csel	x9, x9, x10, ne  // ne = any
  425168:	add	x10, x9, #0x1
  42516c:	cmp	x10, x8
  425170:	mov	x9, x20
  425174:	b.cs	4251c0 <feof@plt+0x220e0>  // b.hs, b.nlast
  425178:	mov	x9, x20
  42517c:	b	425194 <feof@plt+0x220b4>
  425180:	mov	x10, x12
  425184:	add	x10, x10, #0x1
  425188:	cmp	x10, x8
  42518c:	strb	w11, [x9], #1
  425190:	b.cs	4251c0 <feof@plt+0x220e0>  // b.hs, b.nlast
  425194:	ldrb	w11, [x10]
  425198:	cmp	w11, #0x5c
  42519c:	b.ne	425184 <feof@plt+0x220a4>  // b.any
  4251a0:	mov	x12, x10
  4251a4:	ldrb	w11, [x12, #1]!
  4251a8:	cmp	w11, #0x5c
  4251ac:	b.eq	425180 <feof@plt+0x220a0>  // b.none
  4251b0:	cmp	w11, #0x22
  4251b4:	b.eq	425180 <feof@plt+0x220a0>  // b.none
  4251b8:	mov	w11, #0x5c                  	// #92
  4251bc:	b	425184 <feof@plt+0x220a4>
  4251c0:	strb	wzr, [x9]
  4251c4:	ldr	x8, [x19, #448]
  4251c8:	ldurb	w8, [x8, #-20]
  4251cc:	cmp	w8, #0x16
  4251d0:	b.eq	425210 <feof@plt+0x22130>  // b.none
  4251d4:	mov	x0, x19
  4251d8:	bl	42fda4 <feof@plt+0x2ccc4>
  4251dc:	ldrb	w8, [x0, #4]
  4251e0:	cmp	w8, #0x16
  4251e4:	b.eq	425210 <feof@plt+0x22130>  // b.none
  4251e8:	ldr	x8, [x19, #144]
  4251ec:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4251f0:	add	x2, x2, #0x249
  4251f4:	mov	x0, x19
  4251f8:	ldr	x3, [x8, #8]
  4251fc:	mov	w1, wzr
  425200:	bl	428b00 <feof@plt+0x25a20>
  425204:	b	425210 <feof@plt+0x22130>
  425208:	mov	x0, x19
  42520c:	bl	4384c8 <feof@plt+0x353e8>
  425210:	ldr	x8, [x19, #136]
  425214:	ldr	x8, [x8, #8]
  425218:	cbnz	x8, 425208 <feof@plt+0x22128>
  42521c:	ldr	x8, [x19, #448]
  425220:	ldurb	w8, [x8, #-20]
  425224:	cmp	w8, #0x16
  425228:	b.eq	425240 <feof@plt+0x22160>  // b.none
  42522c:	mov	x0, x19
  425230:	bl	42fda4 <feof@plt+0x2ccc4>
  425234:	ldrb	w8, [x0, #4]
  425238:	cmp	w8, #0x16
  42523c:	b.ne	42522c <feof@plt+0x2214c>  // b.any
  425240:	mov	w0, #0x20                  	// #32
  425244:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  425248:	mov	x21, x0
  42524c:	stp	xzr, xzr, [x0, #16]
  425250:	mov	x0, x20
  425254:	bl	402a50 <strlen@plt>
  425258:	add	x0, x0, #0x1
  42525c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  425260:	mov	x1, x20
  425264:	mov	x22, x0
  425268:	str	x0, [x21, #8]
  42526c:	bl	402c00 <strcpy@plt>
  425270:	ldr	x8, [x19, #1400]
  425274:	mov	x0, x19
  425278:	mov	x1, x22
  42527c:	str	x8, [x21]
  425280:	bl	42fa2c <feof@plt+0x2c94c>
  425284:	ldrb	w8, [x0, #18]
  425288:	tst	w8, #0x3
  42528c:	b.eq	4253ac <feof@plt+0x222cc>  // b.none
  425290:	mov	x20, x0
  425294:	mov	x0, x19
  425298:	mov	x1, x20
  42529c:	bl	439d74 <feof@plt+0x36c94>
  4252a0:	mov	x22, x0
  4252a4:	bl	402a50 <strlen@plt>
  4252a8:	mov	x23, x0
  4252ac:	add	x0, x0, #0x2
  4252b0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4252b4:	mov	w8, #0xa                   	// #10
  4252b8:	str	x0, [x21, #16]
  4252bc:	strh	w8, [x0, x23]
  4252c0:	ldr	x8, [x20, #24]
  4252c4:	ldrb	w9, [x21, #28]
  4252c8:	mov	x1, x22
  4252cc:	mov	x2, x23
  4252d0:	ldr	w8, [x8, #8]
  4252d4:	str	w8, [x21, #24]
  4252d8:	ldr	x8, [x20, #24]
  4252dc:	ldrb	w8, [x8, #19]
  4252e0:	bfxil	w9, w8, #4, #1
  4252e4:	strb	w9, [x21, #28]
  4252e8:	ldr	x8, [x20, #24]
  4252ec:	and	w9, w9, #0xfffffffd
  4252f0:	ldrb	w8, [x8, #19]
  4252f4:	lsr	w8, w8, #4
  4252f8:	and	w8, w8, #0x2
  4252fc:	orr	w8, w8, w9
  425300:	strb	w8, [x21, #28]
  425304:	bl	4029c0 <memcpy@plt>
  425308:	b	4253b4 <feof@plt+0x222d4>
  42530c:	ldr	x8, [x19, #448]
  425310:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  425314:	add	x4, x4, #0x628
  425318:	mov	w1, #0x3                   	// #3
  42531c:	ldur	w2, [x8, #-24]
  425320:	mov	x0, x19
  425324:	mov	w3, wzr
  425328:	bl	428d60 <feof@plt+0x25c80>
  42532c:	ldr	x8, [x19, #448]
  425330:	ldurb	w8, [x8, #-20]
  425334:	cmp	w8, #0x16
  425338:	b.eq	425378 <feof@plt+0x22298>  // b.none
  42533c:	mov	x0, x19
  425340:	bl	42fda4 <feof@plt+0x2ccc4>
  425344:	ldrb	w8, [x0, #4]
  425348:	cmp	w8, #0x16
  42534c:	b.eq	425378 <feof@plt+0x22298>  // b.none
  425350:	ldr	x8, [x19, #144]
  425354:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425358:	add	x2, x2, #0x249
  42535c:	mov	x0, x19
  425360:	ldr	x3, [x8, #8]
  425364:	mov	w1, wzr
  425368:	bl	428b00 <feof@plt+0x25a20>
  42536c:	b	425378 <feof@plt+0x22298>
  425370:	mov	x0, x19
  425374:	bl	4384c8 <feof@plt+0x353e8>
  425378:	ldr	x8, [x19, #136]
  42537c:	ldr	x8, [x8, #8]
  425380:	cbnz	x8, 425370 <feof@plt+0x22290>
  425384:	ldr	x8, [x19, #448]
  425388:	ldurb	w8, [x8, #-20]
  42538c:	cmp	w8, #0x16
  425390:	b.eq	4253b8 <feof@plt+0x222d8>  // b.none
  425394:	mov	x0, x19
  425398:	bl	42fda4 <feof@plt+0x2ccc4>
  42539c:	ldrb	w8, [x0, #4]
  4253a0:	cmp	w8, #0x16
  4253a4:	b.ne	425394 <feof@plt+0x222b4>  // b.any
  4253a8:	b	4253b8 <feof@plt+0x222d8>
  4253ac:	mov	w8, #0x4                   	// #4
  4253b0:	strb	w8, [x21, #28]
  4253b4:	str	x21, [x19, #1400]
  4253b8:	mov	sp, x29
  4253bc:	ldp	x20, x19, [sp, #48]
  4253c0:	ldp	x22, x21, [sp, #32]
  4253c4:	ldr	x23, [sp, #16]
  4253c8:	ldp	x29, x30, [sp], #64
  4253cc:	ret
  4253d0:	stp	x29, x30, [sp, #-64]!
  4253d4:	stp	x24, x23, [sp, #16]
  4253d8:	stp	x22, x21, [sp, #32]
  4253dc:	stp	x20, x19, [sp, #48]
  4253e0:	ldr	x20, [x0, #1400]
  4253e4:	mov	x29, sp
  4253e8:	mov	x19, x0
  4253ec:	bl	425cf4 <feof@plt+0x22c14>
  4253f0:	cbz	x0, 425540 <feof@plt+0x22460>
  4253f4:	ldr	w8, [x0, #8]
  4253f8:	mov	x10, sp
  4253fc:	add	w9, w8, #0x2
  425400:	add	x9, x9, #0xf
  425404:	and	x9, x9, #0x1fffffff0
  425408:	sub	x21, x10, x9
  42540c:	mov	sp, x21
  425410:	ldr	x9, [x0, #16]
  425414:	mov	x10, x9
  425418:	ldrb	w11, [x10], #1
  42541c:	add	x8, x9, x8
  425420:	sub	x8, x8, #0x1
  425424:	cmp	w11, #0x4c
  425428:	csel	x9, x9, x10, ne  // ne = any
  42542c:	add	x10, x9, #0x1
  425430:	cmp	x10, x8
  425434:	mov	x9, x21
  425438:	b.cs	425484 <feof@plt+0x223a4>  // b.hs, b.nlast
  42543c:	mov	x9, x21
  425440:	b	425458 <feof@plt+0x22378>
  425444:	mov	x10, x12
  425448:	add	x10, x10, #0x1
  42544c:	cmp	x10, x8
  425450:	strb	w11, [x9], #1
  425454:	b.cs	425484 <feof@plt+0x223a4>  // b.hs, b.nlast
  425458:	ldrb	w11, [x10]
  42545c:	cmp	w11, #0x5c
  425460:	b.ne	425448 <feof@plt+0x22368>  // b.any
  425464:	mov	x12, x10
  425468:	ldrb	w11, [x12, #1]!
  42546c:	cmp	w11, #0x5c
  425470:	b.eq	425444 <feof@plt+0x22364>  // b.none
  425474:	cmp	w11, #0x22
  425478:	b.eq	425444 <feof@plt+0x22364>  // b.none
  42547c:	mov	w11, #0x5c                  	// #92
  425480:	b	425448 <feof@plt+0x22368>
  425484:	strb	wzr, [x9]
  425488:	ldr	x8, [x19, #448]
  42548c:	ldurb	w8, [x8, #-20]
  425490:	cmp	w8, #0x16
  425494:	b.eq	4254d4 <feof@plt+0x223f4>  // b.none
  425498:	mov	x0, x19
  42549c:	bl	42fda4 <feof@plt+0x2ccc4>
  4254a0:	ldrb	w8, [x0, #4]
  4254a4:	cmp	w8, #0x16
  4254a8:	b.eq	4254d4 <feof@plt+0x223f4>  // b.none
  4254ac:	ldr	x8, [x19, #144]
  4254b0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4254b4:	add	x2, x2, #0x249
  4254b8:	mov	x0, x19
  4254bc:	ldr	x3, [x8, #8]
  4254c0:	mov	w1, wzr
  4254c4:	bl	428b00 <feof@plt+0x25a20>
  4254c8:	b	4254d4 <feof@plt+0x223f4>
  4254cc:	mov	x0, x19
  4254d0:	bl	4384c8 <feof@plt+0x353e8>
  4254d4:	ldr	x8, [x19, #136]
  4254d8:	ldr	x8, [x8, #8]
  4254dc:	cbnz	x8, 4254cc <feof@plt+0x223ec>
  4254e0:	ldr	x8, [x19, #448]
  4254e4:	ldurb	w8, [x8, #-20]
  4254e8:	cmp	w8, #0x16
  4254ec:	b.eq	425504 <feof@plt+0x22424>  // b.none
  4254f0:	mov	x0, x19
  4254f4:	bl	42fda4 <feof@plt+0x2ccc4>
  4254f8:	ldrb	w8, [x0, #4]
  4254fc:	cmp	w8, #0x16
  425500:	b.ne	4254f0 <feof@plt+0x22410>  // b.any
  425504:	cbz	x20, 4255dc <feof@plt+0x224fc>
  425508:	ldr	x22, [x20, #8]
  42550c:	mov	x1, x21
  425510:	mov	x0, x22
  425514:	bl	402ed0 <strcmp@plt>
  425518:	cbz	w0, 4255f4 <feof@plt+0x22514>
  42551c:	mov	x23, x20
  425520:	ldr	x20, [x20]
  425524:	cbz	x20, 4255dc <feof@plt+0x224fc>
  425528:	ldr	x22, [x20, #8]
  42552c:	mov	x1, x21
  425530:	mov	x0, x22
  425534:	bl	402ed0 <strcmp@plt>
  425538:	cbnz	w0, 42551c <feof@plt+0x2243c>
  42553c:	b	4255f8 <feof@plt+0x22518>
  425540:	ldr	x8, [x19, #448]
  425544:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  425548:	add	x4, x4, #0x64d
  42554c:	mov	w1, #0x3                   	// #3
  425550:	ldur	w2, [x8, #-24]
  425554:	mov	x0, x19
  425558:	mov	w3, wzr
  42555c:	bl	428d60 <feof@plt+0x25c80>
  425560:	ldr	x8, [x19, #448]
  425564:	ldurb	w8, [x8, #-20]
  425568:	cmp	w8, #0x16
  42556c:	b.eq	4255ac <feof@plt+0x224cc>  // b.none
  425570:	mov	x0, x19
  425574:	bl	42fda4 <feof@plt+0x2ccc4>
  425578:	ldrb	w8, [x0, #4]
  42557c:	cmp	w8, #0x16
  425580:	b.eq	4255ac <feof@plt+0x224cc>  // b.none
  425584:	ldr	x8, [x19, #144]
  425588:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42558c:	add	x2, x2, #0x249
  425590:	mov	x0, x19
  425594:	ldr	x3, [x8, #8]
  425598:	mov	w1, wzr
  42559c:	bl	428b00 <feof@plt+0x25a20>
  4255a0:	b	4255ac <feof@plt+0x224cc>
  4255a4:	mov	x0, x19
  4255a8:	bl	4384c8 <feof@plt+0x353e8>
  4255ac:	ldr	x8, [x19, #136]
  4255b0:	ldr	x8, [x8, #8]
  4255b4:	cbnz	x8, 4255a4 <feof@plt+0x224c4>
  4255b8:	ldr	x8, [x19, #448]
  4255bc:	ldurb	w8, [x8, #-20]
  4255c0:	cmp	w8, #0x16
  4255c4:	b.eq	4255dc <feof@plt+0x224fc>  // b.none
  4255c8:	mov	x0, x19
  4255cc:	bl	42fda4 <feof@plt+0x2ccc4>
  4255d0:	ldrb	w8, [x0, #4]
  4255d4:	cmp	w8, #0x16
  4255d8:	b.ne	4255c8 <feof@plt+0x224e8>  // b.any
  4255dc:	mov	sp, x29
  4255e0:	ldp	x20, x19, [sp, #48]
  4255e4:	ldp	x22, x21, [sp, #32]
  4255e8:	ldp	x24, x23, [sp, #16]
  4255ec:	ldp	x29, x30, [sp], #64
  4255f0:	ret
  4255f4:	mov	x23, xzr
  4255f8:	ldr	x8, [x20]
  4255fc:	add	x9, x19, #0x578
  425600:	cmp	x23, #0x0
  425604:	csel	x9, x9, x23, eq  // eq = none
  425608:	mov	x0, x19
  42560c:	mov	x1, x22
  425610:	str	x8, [x9]
  425614:	bl	42fa2c <feof@plt+0x2c94c>
  425618:	cbz	x0, 4257e8 <feof@plt+0x22708>
  42561c:	ldr	x8, [x19, #1024]
  425620:	mov	x21, x0
  425624:	cbz	x8, 425630 <feof@plt+0x22550>
  425628:	mov	x0, x19
  42562c:	blr	x8
  425630:	ldrb	w8, [x21, #18]
  425634:	tbz	w8, #1, 425670 <feof@plt+0x22590>
  425638:	ldr	x8, [x19, #944]
  42563c:	cbz	x8, 425650 <feof@plt+0x22570>
  425640:	ldr	w1, [x19, #48]
  425644:	mov	x0, x19
  425648:	mov	x2, x21
  42564c:	blr	x8
  425650:	ldrb	w8, [x19, #1151]
  425654:	cbz	w8, 425668 <feof@plt+0x22588>
  425658:	mov	x0, x19
  42565c:	mov	x1, x21
  425660:	mov	x2, xzr
  425664:	bl	437dc8 <feof@plt+0x34ce8>
  425668:	mov	x0, x21
  42566c:	bl	438e70 <feof@plt+0x35d90>
  425670:	ldrb	w8, [x20, #28]
  425674:	tbnz	w8, #2, 4257e8 <feof@plt+0x22708>
  425678:	ldr	x21, [x20, #16]
  42567c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0xc838>
  425680:	add	x1, x1, #0x671
  425684:	mov	x0, x21
  425688:	bl	402c60 <strcspn@plt>
  42568c:	mov	x22, x0
  425690:	mov	x0, x19
  425694:	mov	x1, x21
  425698:	mov	w2, w22
  42569c:	bl	42f080 <feof@plt+0x2bfa0>
  4256a0:	ldr	x8, [x20, #16]
  4256a4:	mov	x21, x0
  4256a8:	mov	w1, #0xa                   	// #10
  4256ac:	add	x22, x8, w22, sxtw
  4256b0:	mov	x0, x22
  4256b4:	bl	402b60 <strchr@plt>
  4256b8:	ldr	x9, [x19, #840]
  4256bc:	ldr	x8, [x19, #832]
  4256c0:	mov	x23, x0
  4256c4:	sub	x9, x9, x8
  4256c8:	cmp	x9, #0xc7
  4256cc:	b.hi	4256e0 <feof@plt+0x22600>  // b.pmore
  4256d0:	add	x0, x19, #0x328
  4256d4:	mov	w1, #0xc8                  	// #200
  4256d8:	bl	4615ac <_obstack_newchunk@@Base>
  4256dc:	ldr	x8, [x19, #832]
  4256e0:	ldr	x24, [x19, #824]
  4256e4:	add	x8, x8, #0xc8
  4256e8:	str	x8, [x19, #832]
  4256ec:	cmp	x8, x24
  4256f0:	b.ne	425700 <feof@plt+0x22620>  // b.any
  4256f4:	ldrb	w9, [x19, #888]
  4256f8:	orr	w9, w9, #0x2
  4256fc:	strb	w9, [x19, #888]
  425700:	ldr	x10, [x19, #856]
  425704:	ldr	x11, [x19, #816]
  425708:	ldr	x9, [x19, #840]
  42570c:	add	x8, x10, x8
  425710:	bic	x8, x8, x10
  425714:	sub	x10, x8, x11
  425718:	sub	x11, x9, x11
  42571c:	cmp	x10, x11
  425720:	str	x8, [x19, #832]
  425724:	b.ls	425730 <feof@plt+0x22650>  // b.plast
  425728:	mov	x8, x9
  42572c:	str	x9, [x19, #832]
  425730:	str	x8, [x19, #824]
  425734:	movi	v0.2d, #0x0
  425738:	mov	w8, #0x2                   	// #2
  42573c:	str	xzr, [x24, #192]
  425740:	stp	q0, q0, [x24, #160]
  425744:	stp	q0, q0, [x24, #128]
  425748:	stp	q0, q0, [x24, #96]
  42574c:	stp	q0, q0, [x24, #64]
  425750:	stp	q0, q0, [x24, #32]
  425754:	stp	q0, q0, [x24]
  425758:	stp	x22, x22, [x24, #16]
  42575c:	str	x23, [x24, #32]
  425760:	strb	w8, [x24, #105]
  425764:	ldr	x8, [x19]
  425768:	mov	w22, #0x1                   	// #1
  42576c:	strb	w22, [x24, #104]
  425770:	str	x8, [x24, #72]
  425774:	str	x24, [x19]
  425778:	cbz	x24, 425814 <feof@plt+0x22734>
  42577c:	mov	x0, x19
  425780:	bl	42f144 <feof@plt+0x2c064>
  425784:	mov	x0, x19
  425788:	mov	x1, x21
  42578c:	strb	w22, [x24, #106]
  425790:	bl	439054 <feof@plt+0x35f74>
  425794:	tbz	w0, #0, 42582c <feof@plt+0x2274c>
  425798:	mov	x0, x19
  42579c:	bl	426b60 <feof@plt+0x23a80>
  4257a0:	ldr	w8, [x20, #24]
  4257a4:	ldr	x9, [x21, #24]
  4257a8:	str	w8, [x9, #8]
  4257ac:	ldr	x8, [x21, #24]
  4257b0:	ldrb	w9, [x20, #28]
  4257b4:	ldrb	w10, [x8, #19]
  4257b8:	ubfiz	w9, w9, #4, #1
  4257bc:	and	w10, w10, #0xffffffef
  4257c0:	orr	w9, w10, w9
  4257c4:	strb	w9, [x8, #19]
  4257c8:	ldr	x8, [x21, #24]
  4257cc:	ldrb	w9, [x20, #28]
  4257d0:	ldrb	w10, [x8, #19]
  4257d4:	lsl	w9, w9, #4
  4257d8:	and	w9, w9, #0x20
  4257dc:	and	w10, w10, #0xffffffdf
  4257e0:	orr	w9, w10, w9
  4257e4:	strb	w9, [x8, #19]
  4257e8:	ldr	x0, [x20, #16]
  4257ec:	bl	402b20 <free@plt>
  4257f0:	ldr	x0, [x20, #8]
  4257f4:	bl	402b20 <free@plt>
  4257f8:	mov	x0, x20
  4257fc:	mov	sp, x29
  425800:	ldp	x20, x19, [sp, #48]
  425804:	ldp	x22, x21, [sp, #32]
  425808:	ldp	x24, x23, [sp, #16]
  42580c:	ldp	x29, x30, [sp], #64
  425810:	b	402b20 <free@plt>
  425814:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  425818:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42581c:	add	x0, x0, #0x675
  425820:	add	x2, x2, #0x68f
  425824:	mov	w1, #0x9ac                 	// #2476
  425828:	bl	40f560 <feof@plt+0xc480>
  42582c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  425830:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425834:	add	x0, x0, #0x675
  425838:	add	x2, x2, #0x68f
  42583c:	mov	w1, #0x9a8                 	// #2472
  425840:	bl	40f560 <feof@plt+0xc480>
  425844:	stp	x29, x30, [sp, #-48]!
  425848:	stp	x20, x19, [sp, #32]
  42584c:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0xc838>
  425850:	mov	x19, x0
  425854:	mov	w8, #0x1                   	// #1
  425858:	add	x20, x20, #0x6c7
  42585c:	str	x21, [sp, #16]
  425860:	mov	x29, sp
  425864:	strb	w8, [x0, #23]
  425868:	b	425880 <feof@plt+0x227a0>
  42586c:	mov	x0, x21
  425870:	bl	438e70 <feof@plt+0x35d90>
  425874:	ldrh	w8, [x21, #18]
  425878:	orr	w8, w8, #0x18
  42587c:	strh	w8, [x21, #18]
  425880:	mov	x0, x19
  425884:	bl	42fda4 <feof@plt+0x2ccc4>
  425888:	ldrb	w8, [x0, #4]
  42588c:	cmp	w8, #0x35
  425890:	b.ne	4258bc <feof@plt+0x227dc>  // b.any
  425894:	ldr	x21, [x0, #8]
  425898:	ldrh	w8, [x21, #18]
  42589c:	tbnz	w8, #3, 425880 <feof@plt+0x227a0>
  4258a0:	tbz	w8, #1, 42586c <feof@plt+0x2278c>
  4258a4:	ldr	x3, [x21]
  4258a8:	mov	x0, x19
  4258ac:	mov	w1, wzr
  4258b0:	mov	x2, x20
  4258b4:	bl	4288a0 <feof@plt+0x257c0>
  4258b8:	b	42586c <feof@plt+0x2278c>
  4258bc:	cmp	w8, #0x16
  4258c0:	b.eq	4258d8 <feof@plt+0x227f8>  // b.none
  4258c4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4258c8:	add	x2, x2, #0x6a2
  4258cc:	mov	w1, #0x3                   	// #3
  4258d0:	mov	x0, x19
  4258d4:	bl	4288a0 <feof@plt+0x257c0>
  4258d8:	strb	wzr, [x19, #23]
  4258dc:	ldp	x20, x19, [sp, #32]
  4258e0:	ldr	x21, [sp, #16]
  4258e4:	ldp	x29, x30, [sp], #48
  4258e8:	ret
  4258ec:	stp	x29, x30, [sp, #-32]!
  4258f0:	ldr	x8, [x0, #40]
  4258f4:	str	x19, [sp, #16]
  4258f8:	mov	x19, x0
  4258fc:	mov	x29, sp
  425900:	ldr	w8, [x8, #48]
  425904:	cmp	w8, #0x1
  425908:	b.ne	425928 <feof@plt+0x22848>  // b.any
  42590c:	mov	x0, x19
  425910:	ldr	x19, [sp, #16]
  425914:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425918:	add	x2, x2, #0x6e5
  42591c:	mov	w1, wzr
  425920:	ldp	x29, x30, [sp], #32
  425924:	b	4288a0 <feof@plt+0x257c0>
  425928:	ldr	x8, [x19, #448]
  42592c:	ldurb	w8, [x8, #-20]
  425930:	cmp	w8, #0x16
  425934:	b.eq	425974 <feof@plt+0x22894>  // b.none
  425938:	mov	x0, x19
  42593c:	bl	42fda4 <feof@plt+0x2ccc4>
  425940:	ldrb	w8, [x0, #4]
  425944:	cmp	w8, #0x16
  425948:	b.eq	425974 <feof@plt+0x22894>  // b.none
  42594c:	ldr	x8, [x19, #144]
  425950:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425954:	add	x2, x2, #0x249
  425958:	mov	x0, x19
  42595c:	ldr	x3, [x8, #8]
  425960:	mov	w1, wzr
  425964:	bl	428b00 <feof@plt+0x25a20>
  425968:	b	425974 <feof@plt+0x22894>
  42596c:	mov	x0, x19
  425970:	bl	4384c8 <feof@plt+0x353e8>
  425974:	ldr	x8, [x19, #136]
  425978:	ldr	x8, [x8, #8]
  42597c:	cbnz	x8, 42596c <feof@plt+0x2288c>
  425980:	ldr	x8, [x19, #448]
  425984:	ldurb	w8, [x8, #-20]
  425988:	cmp	w8, #0x16
  42598c:	b.eq	4259a4 <feof@plt+0x228c4>  // b.none
  425990:	mov	x0, x19
  425994:	bl	42fda4 <feof@plt+0x2ccc4>
  425998:	ldrb	w8, [x0, #4]
  42599c:	cmp	w8, #0x16
  4259a0:	b.ne	425990 <feof@plt+0x228b0>  // b.any
  4259a4:	mov	x0, x19
  4259a8:	ldr	x19, [sp, #16]
  4259ac:	mov	w1, #0x1                   	// #1
  4259b0:	mov	w2, wzr
  4259b4:	ldp	x29, x30, [sp], #32
  4259b8:	b	42de40 <feof@plt+0x2ad60>
  4259bc:	sub	sp, sp, #0x40
  4259c0:	stp	x29, x30, [sp, #16]
  4259c4:	add	x29, sp, #0x10
  4259c8:	sub	x1, x29, #0x4
  4259cc:	add	x3, sp, #0x8
  4259d0:	mov	x2, xzr
  4259d4:	stp	x22, x21, [sp, #32]
  4259d8:	stp	x20, x19, [sp, #48]
  4259dc:	mov	x20, x0
  4259e0:	bl	428018 <feof@plt+0x24f38>
  4259e4:	cbz	x0, 425ab8 <feof@plt+0x229d8>
  4259e8:	ldur	w2, [x29, #-4]
  4259ec:	mov	x19, x0
  4259f0:	mov	x0, x20
  4259f4:	mov	x1, x19
  4259f8:	bl	42e01c <feof@plt+0x2af3c>
  4259fc:	tbnz	w0, #31, 425a98 <feof@plt+0x229b8>
  425a00:	cbz	w0, 425ab0 <feof@plt+0x229d0>
  425a04:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425a08:	add	x2, x2, #0x733
  425a0c:	mov	x0, x20
  425a10:	mov	w1, wzr
  425a14:	mov	x3, x19
  425a18:	bl	4288a0 <feof@plt+0x257c0>
  425a1c:	mov	x0, x20
  425a20:	bl	4385d0 <feof@plt+0x354f0>
  425a24:	ldrb	w8, [x0, #4]
  425a28:	cmp	w8, #0x16
  425a2c:	b.eq	425ab0 <feof@plt+0x229d0>  // b.none
  425a30:	mov	w1, #0x1                   	// #1
  425a34:	mov	x0, x20
  425a38:	bl	438d5c <feof@plt+0x35c7c>
  425a3c:	ldr	x8, [x20, #448]
  425a40:	ldrb	w9, [x20, #24]
  425a44:	mov	x0, x20
  425a48:	mov	x1, xzr
  425a4c:	ldur	w21, [x8, #-24]
  425a50:	add	w8, w9, #0x1
  425a54:	strb	w8, [x20, #24]
  425a58:	bl	433cb4 <feof@plt+0x30bd4>
  425a5c:	ldrb	w8, [x20, #24]
  425a60:	mov	x22, x0
  425a64:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  425a68:	add	x4, x4, #0xaac
  425a6c:	sub	w8, w8, #0x1
  425a70:	mov	x0, x20
  425a74:	mov	w1, wzr
  425a78:	mov	w2, w21
  425a7c:	mov	w3, wzr
  425a80:	mov	x5, x22
  425a84:	strb	w8, [x20, #24]
  425a88:	bl	428d60 <feof@plt+0x25c80>
  425a8c:	mov	x0, x22
  425a90:	bl	402b20 <free@plt>
  425a94:	b	425ab0 <feof@plt+0x229d0>
  425a98:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425a9c:	add	x2, x2, #0x718
  425aa0:	mov	x0, x20
  425aa4:	mov	w1, wzr
  425aa8:	mov	x3, x19
  425aac:	bl	4288a0 <feof@plt+0x257c0>
  425ab0:	mov	x0, x19
  425ab4:	bl	402b20 <free@plt>
  425ab8:	ldp	x20, x19, [sp, #48]
  425abc:	ldp	x22, x21, [sp, #32]
  425ac0:	ldp	x29, x30, [sp, #16]
  425ac4:	add	sp, sp, #0x40
  425ac8:	ret
  425acc:	mov	w1, wzr
  425ad0:	b	4287ec <feof@plt+0x2570c>
  425ad4:	mov	w1, #0x1                   	// #1
  425ad8:	b	4287ec <feof@plt+0x2570c>
  425adc:	stp	x29, x30, [sp, #-32]!
  425ae0:	str	x19, [sp, #16]
  425ae4:	mov	x19, x0
  425ae8:	ldr	x0, [x0, #896]
  425aec:	mov	x29, sp
  425af0:	bl	425b20 <feof@plt+0x22a40>
  425af4:	sbfiz	x0, x0, #3, #32
  425af8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  425afc:	ldr	x8, [x19, #896]
  425b00:	mov	x19, x0
  425b04:	mov	x1, x19
  425b08:	mov	x0, x8
  425b0c:	bl	425b74 <feof@plt+0x22a94>
  425b10:	mov	x0, x19
  425b14:	ldr	x19, [sp, #16]
  425b18:	ldp	x29, x30, [sp], #32
  425b1c:	ret
  425b20:	stp	x29, x30, [sp, #-32]!
  425b24:	stp	x20, x19, [sp, #16]
  425b28:	mov	x29, sp
  425b2c:	cbz	x0, 425b60 <feof@plt+0x22a80>
  425b30:	mov	x19, x0
  425b34:	mov	w20, wzr
  425b38:	b	425b48 <feof@plt+0x22a68>
  425b3c:	ldr	x19, [x19]
  425b40:	add	w20, w20, #0x1
  425b44:	cbz	x19, 425b64 <feof@plt+0x22a84>
  425b48:	ldrb	w8, [x19, #16]
  425b4c:	cbz	w8, 425b3c <feof@plt+0x22a5c>
  425b50:	ldr	x0, [x19, #24]
  425b54:	bl	425b20 <feof@plt+0x22a40>
  425b58:	add	w20, w0, w20
  425b5c:	b	425b3c <feof@plt+0x22a5c>
  425b60:	mov	w20, wzr
  425b64:	mov	w0, w20
  425b68:	ldp	x20, x19, [sp, #16]
  425b6c:	ldp	x29, x30, [sp], #32
  425b70:	ret
  425b74:	stp	x29, x30, [sp, #-32]!
  425b78:	stp	x20, x19, [sp, #16]
  425b7c:	mov	x19, x1
  425b80:	mov	x29, sp
  425b84:	cbz	x0, 425bcc <feof@plt+0x22aec>
  425b88:	mov	x20, x0
  425b8c:	b	425bb0 <feof@plt+0x22ad0>
  425b90:	ldr	x8, [x20, #8]
  425b94:	ldr	w1, [x8, #8]
  425b98:	ldr	x0, [x8]
  425b9c:	add	w2, w1, #0x1
  425ba0:	bl	462290 <_obstack_memory_used@@Base+0xac8>
  425ba4:	str	x0, [x19], #8
  425ba8:	ldr	x20, [x20]
  425bac:	cbz	x20, 425bcc <feof@plt+0x22aec>
  425bb0:	ldrb	w8, [x20, #16]
  425bb4:	cbz	w8, 425b90 <feof@plt+0x22ab0>
  425bb8:	ldr	x0, [x20, #24]
  425bbc:	mov	x1, x19
  425bc0:	bl	425b74 <feof@plt+0x22a94>
  425bc4:	mov	x19, x0
  425bc8:	b	425b90 <feof@plt+0x22ab0>
  425bcc:	mov	x0, x19
  425bd0:	ldp	x20, x19, [sp, #16]
  425bd4:	ldp	x29, x30, [sp], #32
  425bd8:	ret
  425bdc:	stp	x29, x30, [sp, #-32]!
  425be0:	ldr	x8, [x0, #896]
  425be4:	str	x19, [sp, #16]
  425be8:	mov	x19, x1
  425bec:	mov	x2, x19
  425bf0:	mov	x1, x8
  425bf4:	mov	x29, sp
  425bf8:	bl	425c0c <feof@plt+0x22b2c>
  425bfc:	mov	x0, x19
  425c00:	ldr	x19, [sp, #16]
  425c04:	ldp	x29, x30, [sp], #32
  425c08:	b	402b20 <free@plt>
  425c0c:	stp	x29, x30, [sp, #-48]!
  425c10:	stp	x20, x19, [sp, #32]
  425c14:	mov	x19, x2
  425c18:	stp	x22, x21, [sp, #16]
  425c1c:	mov	x29, sp
  425c20:	cbz	x1, 425c80 <feof@plt+0x22ba0>
  425c24:	mov	x20, x1
  425c28:	mov	x21, x0
  425c2c:	b	425c60 <feof@plt+0x22b80>
  425c30:	ldr	x22, [x19]
  425c34:	mov	x0, x22
  425c38:	bl	402a50 <strlen@plt>
  425c3c:	mov	x2, x0
  425c40:	mov	x0, x21
  425c44:	mov	x1, x22
  425c48:	bl	42f080 <feof@plt+0x2bfa0>
  425c4c:	str	x0, [x20, #8]
  425c50:	ldr	x0, [x19], #8
  425c54:	bl	402b20 <free@plt>
  425c58:	ldr	x20, [x20]
  425c5c:	cbz	x20, 425c80 <feof@plt+0x22ba0>
  425c60:	ldrb	w8, [x20, #16]
  425c64:	cbz	w8, 425c30 <feof@plt+0x22b50>
  425c68:	ldr	x1, [x20, #24]
  425c6c:	mov	x0, x21
  425c70:	mov	x2, x19
  425c74:	bl	425c0c <feof@plt+0x22b2c>
  425c78:	mov	x19, x0
  425c7c:	b	425c30 <feof@plt+0x22b50>
  425c80:	mov	x0, x19
  425c84:	ldp	x20, x19, [sp, #32]
  425c88:	ldp	x22, x21, [sp, #16]
  425c8c:	ldp	x29, x30, [sp], #48
  425c90:	ret
  425c94:	stp	x29, x30, [sp, #-32]!
  425c98:	stp	x20, x19, [sp, #16]
  425c9c:	mov	x29, sp
  425ca0:	mov	w20, w1
  425ca4:	mov	x19, x0
  425ca8:	bl	425cf4 <feof@plt+0x22c14>
  425cac:	mov	w8, #0x53                  	// #83
  425cb0:	strb	w8, [x19, #156]
  425cb4:	cbz	x0, 425cd0 <feof@plt+0x22bf0>
  425cb8:	add	x1, x0, #0x8
  425cbc:	mov	x0, x19
  425cc0:	mov	w2, w20
  425cc4:	bl	425dcc <feof@plt+0x22cec>
  425cc8:	mov	w0, #0x1                   	// #1
  425ccc:	b	425ce8 <feof@plt+0x22c08>
  425cd0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  425cd4:	add	x2, x2, #0x6d
  425cd8:	mov	w1, #0x3                   	// #3
  425cdc:	mov	x0, x19
  425ce0:	bl	4288a0 <feof@plt+0x257c0>
  425ce4:	mov	w0, wzr
  425ce8:	ldp	x20, x19, [sp, #16]
  425cec:	ldp	x29, x30, [sp], #32
  425cf0:	ret
  425cf4:	stp	x29, x30, [sp, #-48]!
  425cf8:	stp	x20, x19, [sp, #32]
  425cfc:	mov	x19, x0
  425d00:	str	x21, [sp, #16]
  425d04:	mov	x29, sp
  425d08:	mov	x0, x19
  425d0c:	bl	4385d0 <feof@plt+0x354f0>
  425d10:	ldrb	w8, [x0, #4]
  425d14:	cmp	w8, #0x53
  425d18:	b.eq	425d08 <feof@plt+0x22c28>  // b.none
  425d1c:	cmp	w8, #0x16
  425d20:	b.ne	425d38 <feof@plt+0x22c58>  // b.any
  425d24:	mov	x20, x0
  425d28:	mov	w1, #0x1                   	// #1
  425d2c:	mov	x0, x19
  425d30:	bl	438d5c <feof@plt+0x35c7c>
  425d34:	ldrb	w8, [x20, #4]
  425d38:	cmp	w8, #0x14
  425d3c:	b.ne	425db8 <feof@plt+0x22cd8>  // b.any
  425d40:	mov	x0, x19
  425d44:	bl	4385d0 <feof@plt+0x354f0>
  425d48:	ldrb	w8, [x0, #4]
  425d4c:	cmp	w8, #0x53
  425d50:	b.eq	425d40 <feof@plt+0x22c60>  // b.none
  425d54:	mov	x20, x0
  425d58:	cmp	w8, #0x16
  425d5c:	b.ne	425d70 <feof@plt+0x22c90>  // b.any
  425d60:	mov	w1, #0x1                   	// #1
  425d64:	mov	x0, x19
  425d68:	bl	438d5c <feof@plt+0x35c7c>
  425d6c:	ldrb	w8, [x20, #4]
  425d70:	sub	w8, w8, #0x3e
  425d74:	cmp	w8, #0x4
  425d78:	b.hi	425db8 <feof@plt+0x22cd8>  // b.pmore
  425d7c:	mov	x0, x19
  425d80:	bl	4385d0 <feof@plt+0x354f0>
  425d84:	ldrb	w8, [x0, #4]
  425d88:	cmp	w8, #0x53
  425d8c:	b.eq	425d7c <feof@plt+0x22c9c>  // b.none
  425d90:	cmp	w8, #0x16
  425d94:	b.ne	425dac <feof@plt+0x22ccc>  // b.any
  425d98:	mov	x21, x0
  425d9c:	mov	w1, #0x1                   	// #1
  425da0:	mov	x0, x19
  425da4:	bl	438d5c <feof@plt+0x35c7c>
  425da8:	ldrb	w8, [x21, #4]
  425dac:	cmp	w8, #0x15
  425db0:	csel	x0, x20, xzr, eq  // eq = none
  425db4:	b	425dbc <feof@plt+0x22cdc>
  425db8:	mov	x0, xzr
  425dbc:	ldp	x20, x19, [sp, #32]
  425dc0:	ldr	x21, [sp, #16]
  425dc4:	ldp	x29, x30, [sp], #48
  425dc8:	ret
  425dcc:	stp	x29, x30, [sp, #-96]!
  425dd0:	stp	x28, x27, [sp, #16]
  425dd4:	stp	x26, x25, [sp, #32]
  425dd8:	stp	x24, x23, [sp, #48]
  425ddc:	stp	x22, x21, [sp, #64]
  425de0:	stp	x20, x19, [sp, #80]
  425de4:	ldr	w8, [x1]
  425de8:	mov	x10, sp
  425dec:	mov	w20, w2
  425df0:	mov	x19, x0
  425df4:	sub	w9, w8, #0x1
  425df8:	add	x9, x9, #0xf
  425dfc:	and	x9, x9, #0x1fffffff0
  425e00:	sub	x21, x10, x9
  425e04:	mov	x29, sp
  425e08:	mov	sp, x21
  425e0c:	ldr	x9, [x1, #8]
  425e10:	mov	x22, x21
  425e14:	mov	x10, x9
  425e18:	ldrb	w11, [x10], #1
  425e1c:	add	x8, x9, x8
  425e20:	sub	x8, x8, #0x1
  425e24:	cmp	w11, #0x4c
  425e28:	csel	x9, x9, x10, ne  // ne = any
  425e2c:	add	x9, x9, #0x1
  425e30:	cmp	x9, x8
  425e34:	b.cs	425e80 <feof@plt+0x22da0>  // b.hs, b.nlast
  425e38:	mov	x22, x21
  425e3c:	b	425e54 <feof@plt+0x22d74>
  425e40:	mov	x9, x11
  425e44:	add	x9, x9, #0x1
  425e48:	cmp	x9, x8
  425e4c:	strb	w10, [x22], #1
  425e50:	b.cs	425e80 <feof@plt+0x22da0>  // b.hs, b.nlast
  425e54:	ldrb	w10, [x9]
  425e58:	cmp	w10, #0x5c
  425e5c:	b.ne	425e44 <feof@plt+0x22d64>  // b.any
  425e60:	mov	x11, x9
  425e64:	ldrb	w10, [x11, #1]!
  425e68:	cmp	w10, #0x5c
  425e6c:	b.eq	425e40 <feof@plt+0x22d60>  // b.none
  425e70:	cmp	w10, #0x22
  425e74:	b.eq	425e40 <feof@plt+0x22d60>  // b.none
  425e78:	mov	w10, #0x5c                  	// #92
  425e7c:	b	425e44 <feof@plt+0x22d64>
  425e80:	mov	w8, #0xa                   	// #10
  425e84:	strb	w8, [x22]
  425e88:	ldr	x23, [x19, #136]
  425e8c:	ldr	x24, [x19, #448]
  425e90:	ldr	x25, [x19, #488]
  425e94:	mov	w0, #0x1                   	// #1
  425e98:	mov	w1, #0x38                  	// #56
  425e9c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  425ea0:	ldr	x8, [x19, #840]
  425ea4:	ldr	x9, [x19, #832]
  425ea8:	str	x0, [x19, #136]
  425eac:	sub	x8, x8, x9
  425eb0:	cmp	x8, #0xc7
  425eb4:	b.hi	425ec8 <feof@plt+0x22de8>  // b.pmore
  425eb8:	add	x0, x19, #0x328
  425ebc:	mov	w1, #0xc8                  	// #200
  425ec0:	bl	4615ac <_obstack_newchunk@@Base>
  425ec4:	ldr	x9, [x19, #832]
  425ec8:	ldr	x8, [x19, #824]
  425ecc:	add	x9, x9, #0xc8
  425ed0:	str	x9, [x19, #832]
  425ed4:	cmp	x9, x8
  425ed8:	b.ne	425ee8 <feof@plt+0x22e08>  // b.any
  425edc:	ldrb	w10, [x19, #888]
  425ee0:	orr	w10, w10, #0x2
  425ee4:	strb	w10, [x19, #888]
  425ee8:	ldr	x11, [x19, #856]
  425eec:	ldr	x12, [x19, #816]
  425ef0:	ldr	x10, [x19, #840]
  425ef4:	add	x9, x11, x9
  425ef8:	bic	x9, x9, x11
  425efc:	sub	x11, x9, x12
  425f00:	sub	x12, x10, x12
  425f04:	cmp	x11, x12
  425f08:	str	x9, [x19, #832]
  425f0c:	b.ls	425f18 <feof@plt+0x22e38>  // b.plast
  425f10:	mov	x9, x10
  425f14:	str	x10, [x19, #832]
  425f18:	str	x9, [x19, #824]
  425f1c:	movi	v0.2d, #0x0
  425f20:	mov	w9, #0x2                   	// #2
  425f24:	str	xzr, [x8, #192]
  425f28:	stp	q0, q0, [x8, #160]
  425f2c:	stp	q0, q0, [x8, #128]
  425f30:	stp	q0, q0, [x8, #96]
  425f34:	stp	q0, q0, [x8, #64]
  425f38:	stp	q0, q0, [x8, #32]
  425f3c:	stp	q0, q0, [x8]
  425f40:	stp	x21, x21, [x8, #16]
  425f44:	str	x22, [x8, #32]
  425f48:	strb	w9, [x8, #105]
  425f4c:	ldr	x10, [x19]
  425f50:	mov	w9, #0x1                   	// #1
  425f54:	strb	w9, [x8, #104]
  425f58:	str	x10, [x8, #72]
  425f5c:	str	x8, [x19]
  425f60:	cbz	x10, 425f6c <feof@plt+0x22e8c>
  425f64:	ldr	x10, [x10, #80]
  425f68:	str	x10, [x8, #80]
  425f6c:	ldr	x8, [x19, #40]
  425f70:	strb	w9, [x19, #16]
  425f74:	mov	w9, #0x53                  	// #83
  425f78:	strb	wzr, [x19, #21]
  425f7c:	strb	w9, [x19, #156]
  425f80:	ldr	w8, [x8, #60]
  425f84:	mov	x0, x19
  425f88:	str	w8, [x19, #48]
  425f8c:	bl	42f144 <feof@plt+0x2c064>
  425f90:	ldr	x21, [x19, #144]
  425f94:	adrp	x8, 46e000 <_obstack_memory_used@@Base+0xc838>
  425f98:	add	x8, x8, #0x930
  425f9c:	mov	x0, x19
  425fa0:	str	x8, [x19, #144]
  425fa4:	bl	4277b0 <feof@plt+0x246d0>
  425fa8:	ldrb	w9, [x19, #1160]
  425fac:	ldrb	w8, [x19, #32]
  425fb0:	cbz	w9, 425fe4 <feof@plt+0x22f04>
  425fb4:	cbnz	w8, 425fc4 <feof@plt+0x22ee4>
  425fb8:	ldrb	w8, [x19, #24]
  425fbc:	sub	w8, w8, #0x1
  425fc0:	strb	w8, [x19, #24]
  425fc4:	ldr	x8, [x19, #144]
  425fc8:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  425fcc:	add	x9, x9, #0x828
  425fd0:	cmp	x8, x9
  425fd4:	b.eq	42603c <feof@plt+0x22f5c>  // b.none
  425fd8:	mov	x0, x19
  425fdc:	bl	43d710 <feof@plt+0x3a630>
  425fe0:	b	42603c <feof@plt+0x22f5c>
  425fe4:	cbnz	w8, 42603c <feof@plt+0x22f5c>
  425fe8:	b	425ff4 <feof@plt+0x22f14>
  425fec:	mov	x0, x19
  425ff0:	bl	4384c8 <feof@plt+0x353e8>
  425ff4:	ldr	x8, [x19, #136]
  425ff8:	ldr	x8, [x8, #8]
  425ffc:	cbnz	x8, 425fec <feof@plt+0x22f0c>
  426000:	ldr	x8, [x19, #448]
  426004:	ldurb	w8, [x8, #-20]
  426008:	cmp	w8, #0x16
  42600c:	b.eq	426024 <feof@plt+0x22f44>  // b.none
  426010:	mov	x0, x19
  426014:	bl	42fda4 <feof@plt+0x2ccc4>
  426018:	ldrb	w8, [x0, #4]
  42601c:	cmp	w8, #0x16
  426020:	b.ne	426010 <feof@plt+0x22f30>  // b.any
  426024:	ldr	w8, [x19, #500]
  426028:	cbnz	w8, 42603c <feof@plt+0x22f5c>
  42602c:	ldr	x8, [x19, #472]
  426030:	add	x9, x19, #0x1c8
  426034:	str	x9, [x19, #488]
  426038:	str	x8, [x19, #448]
  42603c:	ldrb	w8, [x19, #1123]
  426040:	ldrb	w9, [x19, #156]
  426044:	add	x22, x19, #0x98
  426048:	strb	wzr, [x19, #16]
  42604c:	cmp	w8, #0x0
  426050:	cset	w8, eq  // eq = none
  426054:	cmp	w9, #0x51
  426058:	sturh	wzr, [x19, #19]
  42605c:	str	x21, [x19, #144]
  426060:	strb	w8, [x19, #21]
  426064:	b.ne	426104 <feof@plt+0x23024>  // b.any
  426068:	mov	w0, #0x4b0                 	// #1200
  42606c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  426070:	ldr	q0, [x22]
  426074:	ldr	x8, [x22, #16]
  426078:	mov	x21, x0
  42607c:	mov	x26, xzr
  426080:	mov	w27, #0x32                  	// #50
  426084:	mov	w22, #0x1                   	// #1
  426088:	mov	w28, #0x18                  	// #24
  42608c:	str	q0, [x0]
  426090:	str	x8, [x0, #16]
  426094:	b	4260d8 <feof@plt+0x22ff8>
  426098:	mov	x0, x19
  42609c:	bl	4385d0 <feof@plt+0x354f0>
  4260a0:	ldr	q0, [x0]
  4260a4:	add	x8, x21, x26
  4260a8:	ldr	x9, [x0, #16]
  4260ac:	add	x22, x22, #0x1
  4260b0:	stur	q0, [x8, #24]
  4260b4:	ldrh	w10, [x8, #30]
  4260b8:	ldrb	w11, [x8, #28]
  4260bc:	str	x9, [x8, #40]
  4260c0:	add	x26, x26, #0x18
  4260c4:	orr	w9, w10, #0x400
  4260c8:	cmp	w11, #0x52
  4260cc:	str	w20, [x8, #24]
  4260d0:	strh	w9, [x8, #30]
  4260d4:	b.eq	42613c <feof@plt+0x2305c>  // b.none
  4260d8:	cmp	x22, w27, uxtw
  4260dc:	b.ne	426098 <feof@plt+0x22fb8>  // b.any
  4260e0:	add	w8, w27, w27, lsl #1
  4260e4:	cmp	w8, #0x0
  4260e8:	cinc	w8, w8, lt  // lt = tstop
  4260ec:	asr	w27, w8, #1
  4260f0:	smull	x1, w27, w28
  4260f4:	mov	x0, x21
  4260f8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4260fc:	mov	x21, x0
  426100:	b	426098 <feof@plt+0x22fb8>
  426104:	mov	w0, #0x18                  	// #24
  426108:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42610c:	ldr	x8, [x22, #16]
  426110:	ldr	q0, [x22]
  426114:	mov	x21, x0
  426118:	str	x8, [x0, #16]
  42611c:	str	q0, [x0]
  426120:	ldr	x8, [x19, #904]
  426124:	cbz	x8, 426138 <feof@plt+0x23058>
  426128:	ldr	x1, [x19, #448]
  42612c:	mov	x0, x19
  426130:	mov	w2, wzr
  426134:	blr	x8
  426138:	mov	w22, #0x1                   	// #1
  42613c:	ldr	x8, [x19]
  426140:	mov	x0, x19
  426144:	str	xzr, [x8, #80]
  426148:	bl	426b60 <feof@plt+0x23a80>
  42614c:	ldr	x0, [x19, #136]
  426150:	bl	402b20 <free@plt>
  426154:	mov	x0, x19
  426158:	mov	x1, xzr
  42615c:	mov	x2, x21
  426160:	mov	w3, w22
  426164:	str	x23, [x19, #136]
  426168:	str	x24, [x19, #448]
  42616c:	str	x25, [x19, #488]
  426170:	bl	4383a8 <feof@plt+0x352c8>
  426174:	mov	sp, x29
  426178:	ldp	x20, x19, [sp, #80]
  42617c:	ldp	x22, x21, [sp, #64]
  426180:	ldp	x24, x23, [sp, #48]
  426184:	ldp	x26, x25, [sp, #32]
  426188:	ldp	x28, x27, [sp, #16]
  42618c:	ldp	x29, x30, [sp], #96
  426190:	ret
  426194:	stp	x29, x30, [sp, #-96]!
  426198:	mov	x29, sp
  42619c:	stp	x20, x19, [sp, #80]
  4261a0:	mov	x20, x1
  4261a4:	add	x2, x29, #0x18
  4261a8:	mov	w1, #0x4                   	// #4
  4261ac:	str	x27, [sp, #16]
  4261b0:	stp	x26, x25, [sp, #32]
  4261b4:	stp	x24, x23, [sp, #48]
  4261b8:	stp	x22, x21, [sp, #64]
  4261bc:	mov	x21, x0
  4261c0:	bl	4262ac <feof@plt+0x231cc>
  4261c4:	mov	x19, x0
  4261c8:	str	wzr, [x20]
  4261cc:	cbz	x0, 426250 <feof@plt+0x23170>
  4261d0:	mov	x23, x19
  4261d4:	ldr	x26, [x23, #24]!
  4261d8:	cbz	x26, 426288 <feof@plt+0x231a8>
  4261dc:	ldr	x24, [x29, #24]
  4261e0:	cbz	x24, 426270 <feof@plt+0x23190>
  4261e4:	add	x25, x24, #0x18
  4261e8:	b	426204 <feof@plt+0x23124>
  4261ec:	ldr	w8, [x26, #12]
  4261f0:	cmp	w27, w8
  4261f4:	b.eq	426278 <feof@plt+0x23198>  // b.none
  4261f8:	ldr	x23, [x23]
  4261fc:	ldr	x26, [x23]
  426200:	cbz	x26, 42627c <feof@plt+0x2319c>
  426204:	ldr	w8, [x26, #12]
  426208:	ldr	w9, [x24, #12]
  42620c:	cmp	w8, w9
  426210:	b.ne	4261f8 <feof@plt+0x23118>  // b.any
  426214:	cbz	w8, 42627c <feof@plt+0x2319c>
  426218:	mov	x27, xzr
  42621c:	add	x21, x26, #0x18
  426220:	mov	x22, x25
  426224:	mov	x0, x21
  426228:	mov	x1, x22
  42622c:	bl	433868 <feof@plt+0x30788>
  426230:	cbz	w0, 4261ec <feof@plt+0x2310c>
  426234:	ldr	w8, [x26, #12]
  426238:	add	x27, x27, #0x1
  42623c:	add	x22, x22, #0x18
  426240:	add	x21, x21, #0x18
  426244:	cmp	x27, x8
  426248:	b.cc	426224 <feof@plt+0x23144>  // b.lo, b.ul, b.last
  42624c:	b	4261f0 <feof@plt+0x23110>
  426250:	ldr	x8, [x21, #448]
  426254:	ldurb	w8, [x8, #-20]
  426258:	cmp	w8, #0x16
  42625c:	b.ne	426288 <feof@plt+0x231a8>  // b.any
  426260:	mov	w1, #0x1                   	// #1
  426264:	mov	x0, x21
  426268:	bl	438d5c <feof@plt+0x35c7c>
  42626c:	b	426288 <feof@plt+0x231a8>
  426270:	mov	w8, #0x1                   	// #1
  426274:	b	426284 <feof@plt+0x231a4>
  426278:	ldr	x26, [x23]
  42627c:	cmp	x26, #0x0
  426280:	cset	w8, ne  // ne = any
  426284:	str	w8, [x20]
  426288:	cmp	x19, #0x0
  42628c:	ldp	x20, x19, [sp, #80]
  426290:	ldp	x22, x21, [sp, #64]
  426294:	ldp	x24, x23, [sp, #48]
  426298:	ldp	x26, x25, [sp, #32]
  42629c:	ldr	x27, [sp, #16]
  4262a0:	cset	w0, eq  // eq = none
  4262a4:	ldp	x29, x30, [sp], #96
  4262a8:	ret
  4262ac:	stp	x29, x30, [sp, #-96]!
  4262b0:	stp	x26, x25, [sp, #32]
  4262b4:	stp	x24, x23, [sp, #48]
  4262b8:	stp	x22, x21, [sp, #64]
  4262bc:	stp	x20, x19, [sp, #80]
  4262c0:	ldrb	w8, [x0, #24]
  4262c4:	str	x27, [sp, #16]
  4262c8:	mov	x29, sp
  4262cc:	mov	x21, x2
  4262d0:	add	w8, w8, #0x1
  4262d4:	mov	w22, w1
  4262d8:	mov	x19, x0
  4262dc:	strb	w8, [x0, #24]
  4262e0:	str	xzr, [x2]
  4262e4:	bl	4385d0 <feof@plt+0x354f0>
  4262e8:	ldrb	w8, [x0, #4]
  4262ec:	mov	x20, x0
  4262f0:	cmp	w8, #0x35
  4262f4:	b.eq	42631c <feof@plt+0x2323c>  // b.none
  4262f8:	cmp	w8, #0x16
  4262fc:	b.ne	4263f8 <feof@plt+0x23318>  // b.any
  426300:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  426304:	add	x2, x2, #0x774
  426308:	mov	w1, #0x3                   	// #3
  42630c:	mov	x0, x19
  426310:	bl	4288a0 <feof@plt+0x257c0>
  426314:	mov	x0, xzr
  426318:	b	4264b0 <feof@plt+0x233d0>
  42631c:	ldr	w23, [x20]
  426320:	mov	x0, x19
  426324:	bl	4385d0 <feof@plt+0x354f0>
  426328:	ldrb	w8, [x0, #4]
  42632c:	cmp	w8, #0x14
  426330:	b.ne	42641c <feof@plt+0x2333c>  // b.any
  426334:	mov	x22, x19
  426338:	ldr	x8, [x22, #56]!
  42633c:	ldp	x2, x9, [x8, #16]
  426340:	sub	x8, x9, x2
  426344:	cmp	x8, #0x2f
  426348:	b.hi	426364 <feof@plt+0x23284>  // b.pmore
  42634c:	mov	w2, #0x30                  	// #48
  426350:	mov	x0, x19
  426354:	mov	x1, x22
  426358:	bl	433fb8 <feof@plt+0x30ed8>
  42635c:	ldr	x8, [x19, #56]
  426360:	ldr	x2, [x8, #16]
  426364:	mov	w1, #0x1                   	// #1
  426368:	mov	x0, x19
  42636c:	bl	438fdc <feof@plt+0x35efc>
  426370:	mov	x23, x0
  426374:	mov	w25, wzr
  426378:	mov	w26, #0x18                  	// #24
  42637c:	str	xzr, [x0]
  426380:	b	42639c <feof@plt+0x232bc>
  426384:	ldr	x8, [x24, #16]
  426388:	ldr	q0, [x24]
  42638c:	madd	x9, x27, x26, x23
  426390:	add	w25, w25, #0x1
  426394:	str	x8, [x9, #40]
  426398:	stur	q0, [x9, #24]
  42639c:	mov	x0, x19
  4263a0:	bl	4385d0 <feof@plt+0x354f0>
  4263a4:	ldrb	w8, [x0, #4]
  4263a8:	cmp	w8, #0x15
  4263ac:	b.eq	42643c <feof@plt+0x2335c>  // b.none
  4263b0:	cmp	w8, #0x16
  4263b4:	b.eq	426458 <feof@plt+0x23378>  // b.none
  4263b8:	ldr	x8, [x22]
  4263bc:	mov	x24, x0
  4263c0:	mov	w27, w25
  4263c4:	ldp	x23, x9, [x8, #16]
  4263c8:	umull	x8, w25, w26
  4263cc:	add	x8, x8, #0x48
  4263d0:	sub	x9, x9, x23
  4263d4:	cmp	x9, x8
  4263d8:	b.cs	426384 <feof@plt+0x232a4>  // b.hs, b.nlast
  4263dc:	mov	w2, #0x18                  	// #24
  4263e0:	mov	x0, x19
  4263e4:	mov	x1, x22
  4263e8:	bl	433fb8 <feof@plt+0x30ed8>
  4263ec:	ldr	x8, [x19, #56]
  4263f0:	ldr	x23, [x8, #16]
  4263f4:	b	426384 <feof@plt+0x232a4>
  4263f8:	ldr	w2, [x20]
  4263fc:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  426400:	add	x4, x4, #0x790
  426404:	mov	w1, #0x3                   	// #3
  426408:	mov	x0, x19
  42640c:	mov	w3, wzr
  426410:	bl	428d60 <feof@plt+0x25c80>
  426414:	mov	x0, xzr
  426418:	b	4264b0 <feof@plt+0x233d0>
  42641c:	cmp	w22, #0x11
  426420:	b.eq	426464 <feof@plt+0x23384>  // b.none
  426424:	cmp	w22, #0x4
  426428:	b.ne	4264dc <feof@plt+0x233fc>  // b.any
  42642c:	mov	w1, #0x1                   	// #1
  426430:	mov	x0, x19
  426434:	bl	438d5c <feof@plt+0x35c7c>
  426438:	b	42646c <feof@plt+0x2338c>
  42643c:	cbz	w25, 4264f4 <feof@plt+0x23414>
  426440:	ldrh	w8, [x23, #30]
  426444:	str	w25, [x23, #12]
  426448:	and	w8, w8, #0xfffe
  42644c:	strh	w8, [x23, #30]
  426450:	str	x23, [x21]
  426454:	b	42646c <feof@plt+0x2338c>
  426458:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42645c:	add	x2, x2, #0x7cc
  426460:	b	426308 <feof@plt+0x23228>
  426464:	cmp	w8, #0x16
  426468:	b.ne	4264dc <feof@plt+0x233fc>  // b.any
  42646c:	ldr	x8, [x20, #8]
  426470:	mov	x9, sp
  426474:	ldr	w2, [x8, #8]
  426478:	add	w20, w2, #0x1
  42647c:	add	x10, x20, #0xf
  426480:	and	x10, x10, #0x1fffffff0
  426484:	sub	x21, x9, x10
  426488:	mov	sp, x21
  42648c:	mov	w9, #0x23                  	// #35
  426490:	mov	x0, x21
  426494:	strb	w9, [x0], #1
  426498:	ldr	x1, [x8]
  42649c:	bl	4029c0 <memcpy@plt>
  4264a0:	mov	x0, x19
  4264a4:	mov	x1, x21
  4264a8:	mov	w2, w20
  4264ac:	bl	42f080 <feof@plt+0x2bfa0>
  4264b0:	ldrb	w8, [x19, #24]
  4264b4:	sub	w8, w8, #0x1
  4264b8:	strb	w8, [x19, #24]
  4264bc:	mov	sp, x29
  4264c0:	ldp	x20, x19, [sp, #80]
  4264c4:	ldp	x22, x21, [sp, #64]
  4264c8:	ldp	x24, x23, [sp, #48]
  4264cc:	ldp	x26, x25, [sp, #32]
  4264d0:	ldr	x27, [sp, #16]
  4264d4:	ldp	x29, x30, [sp], #96
  4264d8:	ret
  4264dc:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  4264e0:	add	x4, x4, #0x7b0
  4264e4:	mov	w1, #0x3                   	// #3
  4264e8:	mov	x0, x19
  4264ec:	mov	w2, w23
  4264f0:	b	42640c <feof@plt+0x2332c>
  4264f4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4264f8:	add	x2, x2, #0x7eb
  4264fc:	b	426308 <feof@plt+0x23228>
  426500:	stp	x29, x30, [sp, #-48]!
  426504:	stp	x20, x19, [sp, #32]
  426508:	mov	x19, x0
  42650c:	mov	x0, x1
  426510:	stp	x22, x21, [sp, #16]
  426514:	mov	x29, sp
  426518:	mov	x22, x1
  42651c:	bl	402a50 <strlen@plt>
  426520:	add	x9, x0, #0x12
  426524:	mov	x8, sp
  426528:	and	x9, x9, #0xfffffffffffffff0
  42652c:	mov	x20, x0
  426530:	sub	x21, x8, x9
  426534:	mov	sp, x21
  426538:	mov	x0, x21
  42653c:	mov	x1, x22
  426540:	mov	x2, x20
  426544:	bl	4029c0 <memcpy@plt>
  426548:	mov	w1, #0x3d                  	// #61
  42654c:	mov	x0, x22
  426550:	bl	402b60 <strchr@plt>
  426554:	cbz	x0, 426564 <feof@plt+0x23484>
  426558:	sub	x8, x0, x22
  42655c:	mov	w9, #0x20                  	// #32
  426560:	b	426578 <feof@plt+0x23498>
  426564:	mov	w9, #0x20                  	// #32
  426568:	add	x8, x20, #0x1
  42656c:	strb	w9, [x21, x20]
  426570:	add	x20, x20, #0x2
  426574:	mov	w9, #0x31                  	// #49
  426578:	strb	w9, [x21, x8]
  42657c:	mov	w8, #0xa                   	// #10
  426580:	mov	x0, x19
  426584:	mov	w1, wzr
  426588:	mov	x2, x21
  42658c:	mov	x3, x20
  426590:	strb	w8, [x21, x20]
  426594:	bl	4265ac <feof@plt+0x234cc>
  426598:	mov	sp, x29
  42659c:	ldp	x20, x19, [sp, #32]
  4265a0:	ldp	x22, x21, [sp, #16]
  4265a4:	ldp	x29, x30, [sp], #48
  4265a8:	ret
  4265ac:	stp	x29, x30, [sp, #-48]!
  4265b0:	stp	x22, x21, [sp, #16]
  4265b4:	stp	x20, x19, [sp, #32]
  4265b8:	ldr	x8, [x0, #840]
  4265bc:	ldr	x9, [x0, #832]
  4265c0:	mov	x22, x3
  4265c4:	mov	x21, x2
  4265c8:	mov	x19, x0
  4265cc:	sub	x8, x8, x9
  4265d0:	cmp	x8, #0xc7
  4265d4:	mov	w20, w1
  4265d8:	mov	x29, sp
  4265dc:	b.hi	4265f0 <feof@plt+0x23510>  // b.pmore
  4265e0:	add	x0, x19, #0x328
  4265e4:	mov	w1, #0xc8                  	// #200
  4265e8:	bl	4615ac <_obstack_newchunk@@Base>
  4265ec:	ldr	x9, [x19, #832]
  4265f0:	ldr	x8, [x19, #824]
  4265f4:	add	x9, x9, #0xc8
  4265f8:	str	x9, [x19, #832]
  4265fc:	cmp	x9, x8
  426600:	b.ne	426610 <feof@plt+0x23530>  // b.any
  426604:	ldrb	w10, [x19, #888]
  426608:	orr	w10, w10, #0x2
  42660c:	strb	w10, [x19, #888]
  426610:	ldr	x11, [x19, #856]
  426614:	ldr	x12, [x19, #816]
  426618:	ldr	x10, [x19, #840]
  42661c:	add	x9, x11, x9
  426620:	bic	x9, x9, x11
  426624:	sub	x11, x9, x12
  426628:	sub	x12, x10, x12
  42662c:	cmp	x11, x12
  426630:	str	x9, [x19, #832]
  426634:	b.ls	426640 <feof@plt+0x23560>  // b.plast
  426638:	mov	x9, x10
  42663c:	str	x10, [x19, #832]
  426640:	str	x9, [x19, #824]
  426644:	movi	v0.2d, #0x0
  426648:	add	x9, x21, x22
  42664c:	mov	w10, #0x2                   	// #2
  426650:	str	xzr, [x8, #192]
  426654:	stp	q0, q0, [x8, #160]
  426658:	stp	q0, q0, [x8, #128]
  42665c:	stp	q0, q0, [x8, #96]
  426660:	stp	q0, q0, [x8, #64]
  426664:	stp	q0, q0, [x8, #32]
  426668:	stp	q0, q0, [x8]
  42666c:	stp	x21, x21, [x8, #16]
  426670:	str	x9, [x8, #32]
  426674:	strb	w10, [x8, #105]
  426678:	ldr	x9, [x19]
  42667c:	mov	w10, #0x1                   	// #1
  426680:	strb	w10, [x8, #104]
  426684:	mov	x0, x19
  426688:	str	x9, [x8, #72]
  42668c:	str	x8, [x19]
  426690:	ldr	x8, [x19, #40]
  426694:	mov	w9, #0x53                  	// #83
  426698:	strb	w10, [x19, #16]
  42669c:	strb	wzr, [x19, #21]
  4266a0:	strb	w9, [x19, #156]
  4266a4:	ldr	w8, [x8, #60]
  4266a8:	str	w8, [x19, #48]
  4266ac:	bl	42f144 <feof@plt+0x2c064>
  4266b0:	ldrb	w9, [x19, #1160]
  4266b4:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0xc838>
  4266b8:	add	x21, x21, #0x828
  4266bc:	mov	w8, #0x18                  	// #24
  4266c0:	smaddl	x8, w20, w8, x21
  4266c4:	str	x8, [x19, #144]
  4266c8:	cbz	w9, 4266d8 <feof@plt+0x235f8>
  4266cc:	mov	x0, x19
  4266d0:	bl	424b64 <feof@plt+0x21a84>
  4266d4:	ldr	x8, [x19, #144]
  4266d8:	ldr	x8, [x8]
  4266dc:	mov	x0, x19
  4266e0:	blr	x8
  4266e4:	ldrb	w9, [x19, #1160]
  4266e8:	ldrb	w8, [x19, #32]
  4266ec:	cbz	w9, 426718 <feof@plt+0x23638>
  4266f0:	cbnz	w8, 426700 <feof@plt+0x23620>
  4266f4:	ldrb	w8, [x19, #24]
  4266f8:	sub	w8, w8, #0x1
  4266fc:	strb	w8, [x19, #24]
  426700:	ldr	x8, [x19, #144]
  426704:	cmp	x8, x21
  426708:	b.eq	426770 <feof@plt+0x23690>  // b.none
  42670c:	mov	x0, x19
  426710:	bl	43d710 <feof@plt+0x3a630>
  426714:	b	426770 <feof@plt+0x23690>
  426718:	cbnz	w8, 426770 <feof@plt+0x23690>
  42671c:	b	426728 <feof@plt+0x23648>
  426720:	mov	x0, x19
  426724:	bl	4384c8 <feof@plt+0x353e8>
  426728:	ldr	x8, [x19, #136]
  42672c:	ldr	x8, [x8, #8]
  426730:	cbnz	x8, 426720 <feof@plt+0x23640>
  426734:	ldr	x8, [x19, #448]
  426738:	ldurb	w8, [x8, #-20]
  42673c:	cmp	w8, #0x16
  426740:	b.eq	426758 <feof@plt+0x23678>  // b.none
  426744:	mov	x0, x19
  426748:	bl	42fda4 <feof@plt+0x2ccc4>
  42674c:	ldrb	w8, [x0, #4]
  426750:	cmp	w8, #0x16
  426754:	b.ne	426744 <feof@plt+0x23664>  // b.any
  426758:	ldr	w8, [x19, #500]
  42675c:	cbnz	w8, 426770 <feof@plt+0x23690>
  426760:	ldr	x8, [x19, #472]
  426764:	add	x9, x19, #0x1c8
  426768:	str	x9, [x19, #488]
  42676c:	str	x8, [x19, #448]
  426770:	ldrb	w8, [x19, #1123]
  426774:	strb	wzr, [x19, #16]
  426778:	sturh	wzr, [x19, #19]
  42677c:	str	xzr, [x19, #144]
  426780:	cmp	w8, #0x0
  426784:	cset	w8, eq  // eq = none
  426788:	strb	w8, [x19, #21]
  42678c:	mov	x0, x19
  426790:	ldp	x20, x19, [sp, #32]
  426794:	ldp	x22, x21, [sp, #16]
  426798:	ldp	x29, x30, [sp], #48
  42679c:	b	426b60 <feof@plt+0x23a80>
  4267a0:	sub	sp, sp, #0x120
  4267a4:	stp	x29, x30, [sp, #240]
  4267a8:	add	x29, sp, #0xf0
  4267ac:	mov	x9, #0xffffffffffffffd0    	// #-48
  4267b0:	mov	x10, sp
  4267b4:	sub	x11, x29, #0x70
  4267b8:	movk	x9, #0xff80, lsl #32
  4267bc:	add	x12, x29, #0x30
  4267c0:	add	x10, x10, #0x80
  4267c4:	add	x11, x11, #0x30
  4267c8:	stp	x10, x9, [x29, #-16]
  4267cc:	stp	x12, x11, [x29, #-32]
  4267d0:	stp	x2, x3, [x29, #-112]
  4267d4:	stp	x4, x5, [x29, #-96]
  4267d8:	stp	x6, x7, [x29, #-80]
  4267dc:	stp	q1, q2, [sp, #16]
  4267e0:	str	q0, [sp]
  4267e4:	ldp	q1, q0, [x29, #-32]
  4267e8:	mov	x8, x1
  4267ec:	stp	x20, x19, [sp, #272]
  4267f0:	mov	x19, x0
  4267f4:	sub	x1, x29, #0x40
  4267f8:	mov	x0, x8
  4267fc:	str	x28, [sp, #256]
  426800:	stp	q3, q4, [sp, #48]
  426804:	stp	q5, q6, [sp, #80]
  426808:	str	q7, [sp, #112]
  42680c:	stp	q1, q0, [x29, #-64]
  426810:	bl	46239c <_obstack_memory_used@@Base+0xbd4>
  426814:	mov	x20, x0
  426818:	mov	x0, x19
  42681c:	mov	x1, x20
  426820:	bl	426500 <feof@plt+0x23420>
  426824:	mov	x0, x20
  426828:	bl	402b20 <free@plt>
  42682c:	ldp	x20, x19, [sp, #272]
  426830:	ldr	x28, [sp, #256]
  426834:	ldp	x29, x30, [sp, #240]
  426838:	add	sp, sp, #0x120
  42683c:	ret
  426840:	stp	x29, x30, [sp, #-48]!
  426844:	stp	x20, x19, [sp, #32]
  426848:	mov	x20, x0
  42684c:	mov	x0, x1
  426850:	stp	x22, x21, [sp, #16]
  426854:	mov	x29, sp
  426858:	mov	x19, x1
  42685c:	bl	402a50 <strlen@plt>
  426860:	add	x9, x0, #0x10
  426864:	mov	x8, sp
  426868:	and	x9, x9, #0xfffffffffffffff0
  42686c:	sub	x22, x8, x9
  426870:	mov	x21, x0
  426874:	mov	sp, x22
  426878:	mov	x0, x22
  42687c:	mov	x1, x19
  426880:	mov	x2, x21
  426884:	bl	4029c0 <memcpy@plt>
  426888:	mov	w8, #0xa                   	// #10
  42688c:	mov	x0, x20
  426890:	mov	w1, wzr
  426894:	mov	x2, x22
  426898:	mov	x3, x21
  42689c:	strb	w8, [x22, x21]
  4268a0:	bl	4265ac <feof@plt+0x234cc>
  4268a4:	mov	sp, x29
  4268a8:	ldp	x20, x19, [sp, #32]
  4268ac:	ldp	x22, x21, [sp, #16]
  4268b0:	ldp	x29, x30, [sp], #48
  4268b4:	ret
  4268b8:	stp	x29, x30, [sp, #-48]!
  4268bc:	stp	x20, x19, [sp, #32]
  4268c0:	mov	x20, x0
  4268c4:	mov	x0, x1
  4268c8:	stp	x22, x21, [sp, #16]
  4268cc:	mov	x29, sp
  4268d0:	mov	x19, x1
  4268d4:	bl	402a50 <strlen@plt>
  4268d8:	add	x9, x0, #0x10
  4268dc:	mov	x8, sp
  4268e0:	and	x9, x9, #0xfffffffffffffff0
  4268e4:	sub	x22, x8, x9
  4268e8:	mov	x21, x0
  4268ec:	mov	sp, x22
  4268f0:	mov	x0, x22
  4268f4:	mov	x1, x19
  4268f8:	mov	x2, x21
  4268fc:	bl	4029c0 <memcpy@plt>
  426900:	mov	w8, #0xa                   	// #10
  426904:	mov	w1, #0x7                   	// #7
  426908:	mov	x0, x20
  42690c:	mov	x2, x22
  426910:	mov	x3, x21
  426914:	strb	w8, [x22, x21]
  426918:	bl	4265ac <feof@plt+0x234cc>
  42691c:	mov	sp, x29
  426920:	ldp	x20, x19, [sp, #32]
  426924:	ldp	x22, x21, [sp, #16]
  426928:	ldp	x29, x30, [sp], #48
  42692c:	ret
  426930:	mov	w2, #0x10                  	// #16
  426934:	b	426938 <feof@plt+0x23858>
  426938:	stp	x29, x30, [sp, #-64]!
  42693c:	stp	x20, x19, [sp, #48]
  426940:	mov	x20, x0
  426944:	mov	x0, x1
  426948:	stp	x24, x23, [sp, #16]
  42694c:	stp	x22, x21, [sp, #32]
  426950:	mov	x29, sp
  426954:	mov	w19, w2
  426958:	mov	x22, x1
  42695c:	bl	402a50 <strlen@plt>
  426960:	mov	x21, x0
  426964:	mov	w1, #0x3d                  	// #61
  426968:	mov	x0, x22
  42696c:	bl	402b60 <strchr@plt>
  426970:	add	x9, x21, #0x11
  426974:	mov	x8, sp
  426978:	and	x9, x9, #0xfffffffffffffff0
  42697c:	mov	x24, x0
  426980:	sub	x23, x8, x9
  426984:	mov	sp, x23
  426988:	mov	x0, x23
  42698c:	mov	x1, x22
  426990:	mov	x2, x21
  426994:	bl	4029c0 <memcpy@plt>
  426998:	cbz	x24, 4269b8 <feof@plt+0x238d8>
  42699c:	sub	x8, x24, x22
  4269a0:	mov	w9, #0x28                  	// #40
  4269a4:	strb	w9, [x23, x8]
  4269a8:	add	x8, x21, #0x1
  4269ac:	mov	w9, #0x29                  	// #41
  4269b0:	strb	w9, [x23, x21]
  4269b4:	mov	x21, x8
  4269b8:	mov	w8, #0xa                   	// #10
  4269bc:	mov	x0, x20
  4269c0:	mov	w1, w19
  4269c4:	mov	x2, x23
  4269c8:	mov	x3, x21
  4269cc:	strb	w8, [x23, x21]
  4269d0:	bl	4265ac <feof@plt+0x234cc>
  4269d4:	mov	sp, x29
  4269d8:	ldp	x20, x19, [sp, #48]
  4269dc:	ldp	x22, x21, [sp, #32]
  4269e0:	ldp	x24, x23, [sp, #16]
  4269e4:	ldp	x29, x30, [sp], #64
  4269e8:	ret
  4269ec:	mov	w2, #0x11                  	// #17
  4269f0:	b	426938 <feof@plt+0x23858>
  4269f4:	add	x0, x0, #0x458
  4269f8:	ret
  4269fc:	add	x0, x0, #0x388
  426a00:	ret
  426a04:	ldp	q0, q1, [x1, #32]
  426a08:	ldp	q2, q3, [x1]
  426a0c:	add	x8, x0, #0x388
  426a10:	stp	q0, q1, [x8, #32]
  426a14:	stp	q2, q3, [x8]
  426a18:	ldp	q1, q0, [x1, #96]
  426a1c:	ldp	q3, q2, [x1, #64]
  426a20:	stp	q1, q0, [x8, #96]
  426a24:	stp	q3, q2, [x8, #64]
  426a28:	ldr	x9, [x1, #176]
  426a2c:	ldp	q1, q0, [x1, #144]
  426a30:	ldr	q2, [x1, #128]
  426a34:	str	x9, [x8, #176]
  426a38:	stp	q1, q0, [x8, #144]
  426a3c:	str	q2, [x8, #128]
  426a40:	ret
  426a44:	stp	x29, x30, [sp, #-32]!
  426a48:	str	x19, [sp, #16]
  426a4c:	mov	x19, x0
  426a50:	ldr	x0, [x0, #712]
  426a54:	mov	x29, sp
  426a58:	cbnz	x0, 426a64 <feof@plt+0x23984>
  426a5c:	bl	43c344 <feof@plt+0x39264>
  426a60:	str	x0, [x19, #712]
  426a64:	ldr	x19, [sp, #16]
  426a68:	ldp	x29, x30, [sp], #32
  426a6c:	ret
  426a70:	stp	x29, x30, [sp, #-48]!
  426a74:	stp	x22, x21, [sp, #16]
  426a78:	stp	x20, x19, [sp, #32]
  426a7c:	ldr	x9, [x0, #840]
  426a80:	ldr	x8, [x0, #832]
  426a84:	mov	w20, w3
  426a88:	mov	x22, x2
  426a8c:	mov	x19, x0
  426a90:	sub	x9, x9, x8
  426a94:	cmp	x9, #0xc7
  426a98:	mov	x21, x1
  426a9c:	mov	x29, sp
  426aa0:	b.hi	426ab4 <feof@plt+0x239d4>  // b.pmore
  426aa4:	add	x0, x19, #0x328
  426aa8:	mov	w1, #0xc8                  	// #200
  426aac:	bl	4615ac <_obstack_newchunk@@Base>
  426ab0:	ldr	x8, [x19, #832]
  426ab4:	ldr	x0, [x19, #824]
  426ab8:	add	x8, x8, #0xc8
  426abc:	str	x8, [x19, #832]
  426ac0:	cmp	x8, x0
  426ac4:	b.ne	426ad4 <feof@plt+0x239f4>  // b.any
  426ac8:	ldrb	w9, [x19, #888]
  426acc:	orr	w9, w9, #0x2
  426ad0:	strb	w9, [x19, #888]
  426ad4:	ldr	x10, [x19, #856]
  426ad8:	ldr	x11, [x19, #816]
  426adc:	ldr	x9, [x19, #840]
  426ae0:	add	x8, x10, x8
  426ae4:	bic	x8, x8, x10
  426ae8:	sub	x10, x8, x11
  426aec:	sub	x11, x9, x11
  426af0:	cmp	x10, x11
  426af4:	str	x8, [x19, #832]
  426af8:	b.ls	426b04 <feof@plt+0x23a24>  // b.plast
  426afc:	mov	x8, x9
  426b00:	str	x9, [x19, #832]
  426b04:	str	x8, [x19, #824]
  426b08:	movi	v0.2d, #0x0
  426b0c:	add	x8, x21, x22
  426b10:	ubfiz	w9, w20, #1, #1
  426b14:	str	xzr, [x0, #192]
  426b18:	stp	q0, q0, [x0, #160]
  426b1c:	stp	q0, q0, [x0, #128]
  426b20:	stp	q0, q0, [x0, #96]
  426b24:	stp	q0, q0, [x0, #64]
  426b28:	stp	q0, q0, [x0, #32]
  426b2c:	stp	q0, q0, [x0]
  426b30:	stp	x21, x21, [x0, #16]
  426b34:	str	x8, [x0, #32]
  426b38:	strb	w9, [x0, #105]
  426b3c:	ldr	x8, [x19]
  426b40:	mov	w9, #0x1                   	// #1
  426b44:	strb	w9, [x0, #104]
  426b48:	str	x8, [x0, #72]
  426b4c:	str	x0, [x19]
  426b50:	ldp	x20, x19, [sp, #32]
  426b54:	ldp	x22, x21, [sp, #16]
  426b58:	ldp	x29, x30, [sp], #48
  426b5c:	ret
  426b60:	stp	x29, x30, [sp, #-80]!
  426b64:	stp	x24, x23, [sp, #32]
  426b68:	stp	x22, x21, [sp, #48]
  426b6c:	stp	x20, x19, [sp, #64]
  426b70:	ldr	x21, [x0]
  426b74:	mov	x19, x0
  426b78:	str	x25, [sp, #16]
  426b7c:	mov	x29, sp
  426b80:	ldr	x23, [x21, #96]
  426b84:	ldr	x20, [x21, #80]
  426b88:	cbz	x23, 426bcc <feof@plt+0x23aec>
  426b8c:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0xc838>
  426b90:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0xc838>
  426b94:	mov	w24, #0x18                  	// #24
  426b98:	add	x25, x25, #0x828
  426b9c:	add	x22, x22, #0x9a
  426ba0:	ldrsw	x8, [x23, #28]
  426ba4:	ldr	w2, [x23, #8]
  426ba8:	mov	w1, #0x3                   	// #3
  426bac:	mov	x0, x19
  426bb0:	madd	x8, x8, x24, x25
  426bb4:	ldr	x5, [x8, #8]
  426bb8:	mov	w3, wzr
  426bbc:	mov	x4, x22
  426bc0:	bl	428d60 <feof@plt+0x25c80>
  426bc4:	ldr	x23, [x23]
  426bc8:	cbnz	x23, 426ba0 <feof@plt+0x23ac0>
  426bcc:	strb	wzr, [x19, #18]
  426bd0:	ldr	x8, [x21, #72]
  426bd4:	str	x8, [x19]
  426bd8:	ldp	x22, x0, [x21, #40]
  426bdc:	bl	402b20 <free@plt>
  426be0:	ldr	x8, [x19, #816]
  426be4:	cmp	x8, x21
  426be8:	b.cs	426c24 <feof@plt+0x23b44>  // b.hs, b.nlast
  426bec:	ldr	x8, [x19, #840]
  426bf0:	cmp	x8, x21
  426bf4:	b.ls	426c24 <feof@plt+0x23b44>  // b.plast
  426bf8:	str	x21, [x19, #824]
  426bfc:	str	x21, [x19, #832]
  426c00:	cbnz	x20, 426c34 <feof@plt+0x23b54>
  426c04:	cbz	x22, 426c9c <feof@plt+0x23bbc>
  426c08:	mov	x0, x22
  426c0c:	ldp	x20, x19, [sp, #64]
  426c10:	ldp	x22, x21, [sp, #48]
  426c14:	ldp	x24, x23, [sp, #32]
  426c18:	ldr	x25, [sp, #16]
  426c1c:	ldp	x29, x30, [sp], #80
  426c20:	b	402b20 <free@plt>
  426c24:	add	x0, x19, #0x328
  426c28:	mov	x1, x21
  426c2c:	bl	461734 <_obstack_free@@Base>
  426c30:	cbz	x20, 426c04 <feof@plt+0x23b24>
  426c34:	mov	x0, x19
  426c38:	mov	x1, x20
  426c3c:	mov	x2, x22
  426c40:	bl	42e1e8 <feof@plt+0x2b108>
  426c44:	ldr	x0, [x19, #40]
  426c48:	mov	w1, #0x1                   	// #1
  426c4c:	mov	w2, wzr
  426c50:	mov	x3, xzr
  426c54:	mov	w4, wzr
  426c58:	bl	434b8c <feof@plt+0x31aac>
  426c5c:	mov	x20, x0
  426c60:	cbz	x0, 426c74 <feof@plt+0x23b94>
  426c64:	ldr	x0, [x19, #40]
  426c68:	ldr	w1, [x20, #16]
  426c6c:	mov	w2, #0x7f                  	// #127
  426c70:	bl	435084 <feof@plt+0x31fa4>
  426c74:	ldr	x2, [x19, #912]
  426c78:	cbz	x2, 426c9c <feof@plt+0x23bbc>
  426c7c:	mov	x0, x19
  426c80:	mov	x1, x20
  426c84:	ldp	x20, x19, [sp, #64]
  426c88:	ldp	x22, x21, [sp, #48]
  426c8c:	ldp	x24, x23, [sp, #32]
  426c90:	ldr	x25, [sp, #16]
  426c94:	ldp	x29, x30, [sp], #80
  426c98:	br	x2
  426c9c:	ldp	x20, x19, [sp, #64]
  426ca0:	ldp	x22, x21, [sp, #48]
  426ca4:	ldp	x24, x23, [sp, #32]
  426ca8:	ldr	x25, [sp, #16]
  426cac:	ldp	x29, x30, [sp], #80
  426cb0:	ret
  426cb4:	stp	x29, x30, [sp, #-48]!
  426cb8:	str	x21, [sp, #16]
  426cbc:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0xc838>
  426cc0:	stp	x20, x19, [sp, #32]
  426cc4:	mov	x19, x0
  426cc8:	mov	x20, xzr
  426ccc:	add	x21, x21, #0x838
  426cd0:	mov	x29, sp
  426cd4:	ldur	x1, [x21, #-8]
  426cd8:	ldrh	w2, [x21], #24
  426cdc:	mov	x0, x19
  426ce0:	bl	42f080 <feof@plt+0x2bfa0>
  426ce4:	mov	w8, #0x1                   	// #1
  426ce8:	bfi	w8, w20, #1, #31
  426cec:	add	x20, x20, #0x1
  426cf0:	cmp	x20, #0x13
  426cf4:	strb	w8, [x0, #16]
  426cf8:	b.ne	426cd4 <feof@plt+0x23bf4>  // b.any
  426cfc:	ldp	x20, x19, [sp, #32]
  426d00:	ldr	x21, [sp, #16]
  426d04:	ldp	x29, x30, [sp], #48
  426d08:	ret
  426d0c:	b	426d10 <feof@plt+0x23c30>
  426d10:	stp	x29, x30, [sp, #-64]!
  426d14:	stp	x20, x19, [sp, #48]
  426d18:	mov	x19, x0
  426d1c:	mov	w0, #0x400                 	// #1024
  426d20:	stp	x24, x23, [sp, #16]
  426d24:	stp	x22, x21, [sp, #32]
  426d28:	mov	x29, sp
  426d2c:	mov	w21, #0x400                 	// #1024
  426d30:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  426d34:	mov	x20, x0
  426d38:	mov	x23, xzr
  426d3c:	mov	w24, #0x20                  	// #32
  426d40:	mov	x0, x19
  426d44:	bl	4385d0 <feof@plt+0x354f0>
  426d48:	ldrb	w8, [x0, #4]
  426d4c:	cmp	w8, #0x53
  426d50:	b.eq	426d40 <feof@plt+0x23c60>  // b.none
  426d54:	cmp	w8, #0x2
  426d58:	b.eq	426dd8 <feof@plt+0x23cf8>  // b.none
  426d5c:	cmp	w8, #0x16
  426d60:	b.eq	426dc4 <feof@plt+0x23ce4>  // b.none
  426d64:	mov	x22, x0
  426d68:	bl	433218 <feof@plt+0x30138>
  426d6c:	add	w8, w0, #0x2
  426d70:	add	x9, x23, x8
  426d74:	cmp	x9, x21
  426d78:	b.ls	426d94 <feof@plt+0x23cb4>  // b.plast
  426d7c:	add	x8, x21, x8
  426d80:	lsl	x21, x8, #1
  426d84:	mov	x0, x20
  426d88:	mov	x1, x21
  426d8c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  426d90:	mov	x20, x0
  426d94:	ldrb	w8, [x22, #6]
  426d98:	tbz	w8, #0, 426da8 <feof@plt+0x23cc8>
  426d9c:	add	x8, x23, #0x1
  426da0:	strb	w24, [x20, x23]
  426da4:	mov	x23, x8
  426da8:	add	x2, x20, x23
  426dac:	mov	w3, #0x1                   	// #1
  426db0:	mov	x0, x19
  426db4:	mov	x1, x22
  426db8:	bl	4333ec <feof@plt+0x3030c>
  426dbc:	sub	x23, x0, x20
  426dc0:	b	426d40 <feof@plt+0x23c60>
  426dc4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  426dc8:	add	x2, x2, #0x807
  426dcc:	mov	w1, #0x3                   	// #3
  426dd0:	mov	x0, x19
  426dd4:	bl	4288a0 <feof@plt+0x257c0>
  426dd8:	strb	wzr, [x20, x23]
  426ddc:	mov	x0, x20
  426de0:	ldp	x20, x19, [sp, #48]
  426de4:	ldp	x22, x21, [sp, #32]
  426de8:	ldp	x24, x23, [sp, #16]
  426dec:	ldp	x29, x30, [sp], #64
  426df0:	ret
  426df4:	stp	x29, x30, [sp, #-32]!
  426df8:	mov	w1, #0x1                   	// #1
  426dfc:	stp	x20, x19, [sp, #16]
  426e00:	mov	x29, sp
  426e04:	mov	x20, x0
  426e08:	bl	427dec <feof@plt+0x24d0c>
  426e0c:	cbz	x0, 426e68 <feof@plt+0x23d88>
  426e10:	ldrb	w9, [x20, #1124]
  426e14:	ldr	x8, [x20, #1024]
  426e18:	mov	x19, x0
  426e1c:	cmp	w9, #0x0
  426e20:	cset	w9, eq  // eq = none
  426e24:	strb	w9, [x20, #21]
  426e28:	cbz	x8, 426e34 <feof@plt+0x23d54>
  426e2c:	mov	x0, x20
  426e30:	blr	x8
  426e34:	mov	x0, x20
  426e38:	mov	x1, x19
  426e3c:	bl	439054 <feof@plt+0x35f74>
  426e40:	tbz	w0, #0, 426e5c <feof@plt+0x23d7c>
  426e44:	ldr	x8, [x20, #936]
  426e48:	cbz	x8, 426e5c <feof@plt+0x23d7c>
  426e4c:	ldr	w1, [x20, #48]
  426e50:	mov	x0, x20
  426e54:	mov	x2, x19
  426e58:	blr	x8
  426e5c:	ldrh	w8, [x19, #18]
  426e60:	and	w8, w8, #0xffffff7f
  426e64:	strh	w8, [x19, #18]
  426e68:	ldp	x20, x19, [sp, #16]
  426e6c:	ldp	x29, x30, [sp], #32
  426e70:	ret
  426e74:	mov	w1, wzr
  426e78:	b	427ec8 <feof@plt+0x24de8>
  426e7c:	stp	x29, x30, [sp, #-48]!
  426e80:	stp	x20, x19, [sp, #32]
  426e84:	str	x21, [sp, #16]
  426e88:	ldr	x21, [x0]
  426e8c:	mov	x19, x0
  426e90:	mov	x29, sp
  426e94:	ldr	x20, [x21, #96]
  426e98:	cbz	x20, 426f14 <feof@plt+0x23e34>
  426e9c:	ldrb	w8, [x20, #25]
  426ea0:	cbz	w8, 426f34 <feof@plt+0x23e54>
  426ea4:	ldr	x8, [x20]
  426ea8:	cbnz	x8, 426ec0 <feof@plt+0x23de0>
  426eac:	ldr	x9, [x20, #16]
  426eb0:	cbz	x9, 426ec0 <feof@plt+0x23de0>
  426eb4:	mov	w10, #0x1                   	// #1
  426eb8:	strb	w10, [x19, #440]
  426ebc:	str	x9, [x19, #424]
  426ec0:	str	x8, [x21, #96]
  426ec4:	ldr	x8, [x19, #816]
  426ec8:	ldrb	w9, [x20, #25]
  426ecc:	cmp	x8, x20
  426ed0:	strb	w9, [x19, #18]
  426ed4:	b.cs	426efc <feof@plt+0x23e1c>  // b.hs, b.nlast
  426ed8:	ldr	x8, [x19, #840]
  426edc:	cmp	x8, x20
  426ee0:	b.ls	426efc <feof@plt+0x23e1c>  // b.plast
  426ee4:	str	x20, [x19, #824]
  426ee8:	str	x20, [x19, #832]
  426eec:	ldp	x20, x19, [sp, #32]
  426ef0:	ldr	x21, [sp, #16]
  426ef4:	ldp	x29, x30, [sp], #48
  426ef8:	ret
  426efc:	add	x0, x19, #0x328
  426f00:	mov	x1, x20
  426f04:	ldp	x20, x19, [sp, #32]
  426f08:	ldr	x21, [sp, #16]
  426f0c:	ldp	x29, x30, [sp], #48
  426f10:	b	461734 <_obstack_free@@Base>
  426f14:	mov	x0, x19
  426f18:	ldp	x20, x19, [sp, #32]
  426f1c:	ldr	x21, [sp, #16]
  426f20:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  426f24:	add	x2, x2, #0x26e
  426f28:	mov	w1, #0x3                   	// #3
  426f2c:	ldp	x29, x30, [sp], #48
  426f30:	b	4288a0 <feof@plt+0x257c0>
  426f34:	ldrb	w8, [x19, #1140]
  426f38:	cbz	w8, 426ea4 <feof@plt+0x23dc4>
  426f3c:	ldr	x8, [x19, #448]
  426f40:	ldurb	w8, [x8, #-20]
  426f44:	cmp	w8, #0x16
  426f48:	b.eq	426ea4 <feof@plt+0x23dc4>  // b.none
  426f4c:	mov	x0, x19
  426f50:	bl	42fda4 <feof@plt+0x2ccc4>
  426f54:	ldrb	w8, [x0, #4]
  426f58:	cmp	w8, #0x16
  426f5c:	b.eq	426ea4 <feof@plt+0x23dc4>  // b.none
  426f60:	ldr	x8, [x19, #144]
  426f64:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  426f68:	add	x2, x2, #0x249
  426f6c:	mov	w1, #0x8                   	// #8
  426f70:	ldr	x3, [x8, #8]
  426f74:	mov	x0, x19
  426f78:	bl	428b00 <feof@plt+0x25a20>
  426f7c:	b	426ea4 <feof@plt+0x23dc4>
  426f80:	stp	x29, x30, [sp, #-48]!
  426f84:	stp	x20, x19, [sp, #32]
  426f88:	ldrb	w8, [x0, #18]
  426f8c:	mov	x19, x0
  426f90:	str	x21, [sp, #16]
  426f94:	mov	x29, sp
  426f98:	cbz	w8, 426fc0 <feof@plt+0x23ee0>
  426f9c:	mov	w20, #0x1                   	// #1
  426fa0:	mov	x0, x19
  426fa4:	mov	w1, w20
  426fa8:	ldp	x20, x19, [sp, #32]
  426fac:	ldr	x21, [sp, #16]
  426fb0:	mov	w2, #0x3                   	// #3
  426fb4:	mov	x3, xzr
  426fb8:	ldp	x29, x30, [sp], #48
  426fbc:	b	428244 <feof@plt+0x25164>
  426fc0:	mov	x0, x19
  426fc4:	mov	w1, wzr
  426fc8:	bl	427dec <feof@plt+0x24d0c>
  426fcc:	cbz	x0, 426f9c <feof@plt+0x23ebc>
  426fd0:	ldrh	w8, [x0, #18]
  426fd4:	mov	x21, x0
  426fd8:	ubfx	w9, w8, #8, #1
  426fdc:	tst	w8, #0x2
  426fe0:	and	w10, w8, #0x3
  426fe4:	csinc	w20, w9, wzr, ne  // ne = any
  426fe8:	cmp	w10, #0x2
  426fec:	b.ne	427064 <feof@plt+0x23f84>  // b.any
  426ff0:	ldr	x8, [x21, #24]
  426ff4:	ldrb	w9, [x8, #19]
  426ff8:	orr	w9, w9, #0x20
  426ffc:	strb	w9, [x8, #19]
  427000:	ldrh	w8, [x21, #18]
  427004:	tbz	w8, #7, 427068 <feof@plt+0x23f88>
  427008:	ldr	x8, [x19, #1032]
  42700c:	cbz	x8, 427020 <feof@plt+0x23f40>
  427010:	ldr	w1, [x19, #48]
  427014:	mov	x0, x19
  427018:	mov	x2, x21
  42701c:	blr	x8
  427020:	ldr	x8, [x19, #448]
  427024:	ldurb	w8, [x8, #-20]
  427028:	cmp	w8, #0x16
  42702c:	b.eq	426fa0 <feof@plt+0x23ec0>  // b.none
  427030:	mov	x0, x19
  427034:	bl	42fda4 <feof@plt+0x2ccc4>
  427038:	ldrb	w8, [x0, #4]
  42703c:	cmp	w8, #0x16
  427040:	b.eq	426fa0 <feof@plt+0x23ec0>  // b.none
  427044:	ldr	x8, [x19, #144]
  427048:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42704c:	add	x2, x2, #0x249
  427050:	mov	x0, x19
  427054:	ldr	x3, [x8, #8]
  427058:	mov	w1, wzr
  42705c:	bl	428b00 <feof@plt+0x25a20>
  427060:	b	426fa0 <feof@plt+0x23ec0>
  427064:	tbnz	w8, #7, 427008 <feof@plt+0x23f28>
  427068:	mov	x0, x19
  42706c:	mov	x1, x21
  427070:	bl	439cc0 <feof@plt+0x36be0>
  427074:	ldr	x8, [x19, #1032]
  427078:	cbnz	x8, 427010 <feof@plt+0x23f30>
  42707c:	b	427020 <feof@plt+0x23f40>
  427080:	stp	x29, x30, [sp, #-32]!
  427084:	ldrb	w8, [x0, #18]
  427088:	str	x19, [sp, #16]
  42708c:	mov	x19, x0
  427090:	mov	x29, sp
  427094:	cbz	w8, 4270a0 <feof@plt+0x23fc0>
  427098:	mov	w1, #0x1                   	// #1
  42709c:	b	4270b4 <feof@plt+0x23fd4>
  4270a0:	mov	w1, #0x1                   	// #1
  4270a4:	mov	x0, x19
  4270a8:	bl	42a6cc <feof@plt+0x275ec>
  4270ac:	mvn	w8, w0
  4270b0:	and	w1, w8, #0x1
  4270b4:	ldr	x3, [x19, #432]
  4270b8:	mov	x0, x19
  4270bc:	ldr	x19, [sp, #16]
  4270c0:	mov	w2, #0x4                   	// #4
  4270c4:	ldp	x29, x30, [sp], #32
  4270c8:	b	428244 <feof@plt+0x25164>
  4270cc:	stp	x29, x30, [sp, #-32]!
  4270d0:	stp	x20, x19, [sp, #16]
  4270d4:	ldr	x8, [x0]
  4270d8:	mov	x19, x0
  4270dc:	mov	x29, sp
  4270e0:	ldr	x20, [x8, #96]
  4270e4:	cbz	x20, 427154 <feof@plt+0x24074>
  4270e8:	ldr	w8, [x20, #28]
  4270ec:	cmp	w8, #0x5
  4270f0:	b.ne	427124 <feof@plt+0x24044>  // b.any
  4270f4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4270f8:	add	x2, x2, #0x293
  4270fc:	mov	w1, #0x3                   	// #3
  427100:	mov	x0, x19
  427104:	bl	4288a0 <feof@plt+0x257c0>
  427108:	ldr	w2, [x20, #8]
  42710c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  427110:	add	x4, x4, #0x2a5
  427114:	mov	w1, #0x3                   	// #3
  427118:	mov	x0, x19
  42711c:	mov	w3, wzr
  427120:	bl	428d60 <feof@plt+0x25c80>
  427124:	ldrb	w8, [x20, #24]
  427128:	mov	w9, #0x5                   	// #5
  42712c:	str	w9, [x20, #28]
  427130:	mov	w9, #0x1                   	// #1
  427134:	strb	w8, [x19, #18]
  427138:	ldrb	w8, [x20, #25]
  42713c:	strb	w9, [x20, #24]
  427140:	str	xzr, [x20, #16]
  427144:	cbz	w8, 427170 <feof@plt+0x24090>
  427148:	ldp	x20, x19, [sp, #16]
  42714c:	ldp	x29, x30, [sp], #32
  427150:	ret
  427154:	mov	x0, x19
  427158:	ldp	x20, x19, [sp, #16]
  42715c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427160:	add	x2, x2, #0x281
  427164:	mov	w1, #0x3                   	// #3
  427168:	ldp	x29, x30, [sp], #32
  42716c:	b	4288a0 <feof@plt+0x257c0>
  427170:	ldrb	w8, [x19, #1140]
  427174:	cbz	w8, 427148 <feof@plt+0x24068>
  427178:	ldr	x8, [x19, #448]
  42717c:	ldurb	w8, [x8, #-20]
  427180:	cmp	w8, #0x16
  427184:	b.eq	427148 <feof@plt+0x24068>  // b.none
  427188:	mov	x0, x19
  42718c:	bl	42fda4 <feof@plt+0x2ccc4>
  427190:	ldrb	w8, [x0, #4]
  427194:	cmp	w8, #0x16
  427198:	b.eq	427148 <feof@plt+0x24068>  // b.none
  42719c:	ldr	x8, [x19, #144]
  4271a0:	mov	x0, x19
  4271a4:	ldp	x20, x19, [sp, #16]
  4271a8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4271ac:	ldr	x3, [x8, #8]
  4271b0:	add	x2, x2, #0x249
  4271b4:	mov	w1, #0x8                   	// #8
  4271b8:	ldp	x29, x30, [sp], #32
  4271bc:	b	428b00 <feof@plt+0x25a20>
  4271c0:	stp	x29, x30, [sp, #-48]!
  4271c4:	stp	x20, x19, [sp, #32]
  4271c8:	ldrb	w8, [x0, #18]
  4271cc:	mov	x19, x0
  4271d0:	str	x21, [sp, #16]
  4271d4:	mov	x29, sp
  4271d8:	cbz	w8, 427204 <feof@plt+0x24124>
  4271dc:	mov	x20, xzr
  4271e0:	mov	w21, #0x1                   	// #1
  4271e4:	mov	x0, x19
  4271e8:	mov	w1, w21
  4271ec:	mov	x3, x20
  4271f0:	ldp	x20, x19, [sp, #32]
  4271f4:	ldr	x21, [sp, #16]
  4271f8:	mov	w2, #0x6                   	// #6
  4271fc:	ldp	x29, x30, [sp], #48
  427200:	b	428244 <feof@plt+0x25164>
  427204:	mov	x0, x19
  427208:	mov	w1, wzr
  42720c:	bl	427dec <feof@plt+0x24d0c>
  427210:	mov	x20, x0
  427214:	cbz	x0, 4271e0 <feof@plt+0x24100>
  427218:	ldrh	w8, [x20, #18]
  42721c:	and	w9, w8, #0x3
  427220:	cmp	w9, #0x2
  427224:	lsr	w9, w8, #1
  427228:	mov	w10, w8
  42722c:	b.ne	427244 <feof@plt+0x24164>  // b.any
  427230:	ldr	x10, [x20, #24]
  427234:	ldrb	w11, [x10, #19]
  427238:	orr	w11, w11, #0x20
  42723c:	strb	w11, [x10, #19]
  427240:	ldrh	w10, [x20, #18]
  427244:	bic	w21, w9, w8, lsr #8
  427248:	tbnz	w10, #7, 427258 <feof@plt+0x24178>
  42724c:	mov	x0, x19
  427250:	mov	x1, x20
  427254:	bl	439cc0 <feof@plt+0x36be0>
  427258:	ldr	x8, [x19, #1032]
  42725c:	and	w21, w21, #0x1
  427260:	cbz	x8, 427274 <feof@plt+0x24194>
  427264:	ldr	w1, [x19, #48]
  427268:	mov	x0, x19
  42726c:	mov	x2, x20
  427270:	blr	x8
  427274:	ldr	x8, [x19, #448]
  427278:	ldurb	w8, [x8, #-20]
  42727c:	cmp	w8, #0x16
  427280:	b.eq	4271e4 <feof@plt+0x24104>  // b.none
  427284:	mov	x0, x19
  427288:	bl	42fda4 <feof@plt+0x2ccc4>
  42728c:	ldrb	w8, [x0, #4]
  427290:	cmp	w8, #0x16
  427294:	b.eq	4271e4 <feof@plt+0x24104>  // b.none
  427298:	ldr	x8, [x19, #144]
  42729c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4272a0:	add	x2, x2, #0x249
  4272a4:	mov	x0, x19
  4272a8:	ldr	x3, [x8, #8]
  4272ac:	mov	w1, wzr
  4272b0:	bl	428b00 <feof@plt+0x25a20>
  4272b4:	b	4271e4 <feof@plt+0x24104>
  4272b8:	stp	x29, x30, [sp, #-32]!
  4272bc:	mov	w1, #0x1                   	// #1
  4272c0:	stp	x20, x19, [sp, #16]
  4272c4:	mov	x29, sp
  4272c8:	mov	x19, x0
  4272cc:	bl	427dec <feof@plt+0x24d0c>
  4272d0:	cbz	x0, 42737c <feof@plt+0x2429c>
  4272d4:	ldr	x8, [x19, #1024]
  4272d8:	mov	x20, x0
  4272dc:	cbz	x8, 4272e8 <feof@plt+0x24208>
  4272e0:	mov	x0, x19
  4272e4:	blr	x8
  4272e8:	ldr	x8, [x19, #944]
  4272ec:	cbz	x8, 427300 <feof@plt+0x24220>
  4272f0:	ldr	w1, [x19, #48]
  4272f4:	mov	x0, x19
  4272f8:	mov	x2, x20
  4272fc:	blr	x8
  427300:	ldrh	w8, [x20, #18]
  427304:	tbz	w8, #1, 42737c <feof@plt+0x2429c>
  427308:	tbnz	w8, #5, 427344 <feof@plt+0x24264>
  42730c:	mvn	w8, w8
  427310:	tst	w8, #0x3
  427314:	b.ne	42735c <feof@plt+0x2427c>  // b.any
  427318:	ldrb	w8, [x19, #1143]
  42731c:	cbz	w8, 42735c <feof@plt+0x2427c>
  427320:	ldr	w2, [x19, #48]
  427324:	ldr	x5, [x20]
  427328:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42732c:	add	x4, x4, #0x2c0
  427330:	mov	w1, #0xb                   	// #11
  427334:	mov	x0, x19
  427338:	mov	w3, wzr
  42733c:	bl	428e5c <feof@plt+0x25d7c>
  427340:	b	42735c <feof@plt+0x2427c>
  427344:	ldr	x3, [x20]
  427348:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42734c:	add	x2, x2, #0x2c0
  427350:	mov	x0, x19
  427354:	mov	w1, wzr
  427358:	bl	4288a0 <feof@plt+0x257c0>
  42735c:	ldrb	w8, [x19, #1151]
  427360:	cbz	w8, 427374 <feof@plt+0x24294>
  427364:	mov	x0, x19
  427368:	mov	x1, x20
  42736c:	mov	x2, xzr
  427370:	bl	437dc8 <feof@plt+0x34ce8>
  427374:	mov	x0, x20
  427378:	bl	438e70 <feof@plt+0x35d90>
  42737c:	ldr	x8, [x19, #448]
  427380:	ldurb	w8, [x8, #-20]
  427384:	cmp	w8, #0x16
  427388:	b.eq	4273a0 <feof@plt+0x242c0>  // b.none
  42738c:	mov	x0, x19
  427390:	bl	42fda4 <feof@plt+0x2ccc4>
  427394:	ldrb	w8, [x0, #4]
  427398:	cmp	w8, #0x16
  42739c:	b.ne	4273ac <feof@plt+0x242cc>  // b.any
  4273a0:	ldp	x20, x19, [sp, #16]
  4273a4:	ldp	x29, x30, [sp], #32
  4273a8:	ret
  4273ac:	ldr	x8, [x19, #144]
  4273b0:	mov	x0, x19
  4273b4:	ldp	x20, x19, [sp, #16]
  4273b8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4273bc:	ldr	x3, [x8, #8]
  4273c0:	add	x2, x2, #0x249
  4273c4:	mov	w1, wzr
  4273c8:	ldp	x29, x30, [sp], #32
  4273cc:	b	428b00 <feof@plt+0x25a20>
  4273d0:	sub	sp, sp, #0x50
  4273d4:	stp	x29, x30, [sp, #16]
  4273d8:	stp	x24, x23, [sp, #32]
  4273dc:	stp	x22, x21, [sp, #48]
  4273e0:	stp	x20, x19, [sp, #64]
  4273e4:	ldr	x23, [x0, #40]
  4273e8:	mov	w10, #0x18                  	// #24
  4273ec:	ldrb	w11, [x0, #1152]
  4273f0:	add	x29, sp, #0x10
  4273f4:	ldr	w8, [x23, #12]
  4273f8:	ldr	x9, [x23]
  4273fc:	cmp	w11, #0x0
  427400:	mov	x19, x0
  427404:	sub	w8, w8, #0x1
  427408:	smaddl	x8, w8, w10, x9
  42740c:	ldrb	w21, [x8, #5]
  427410:	ldr	x20, [x8, #8]
  427414:	mov	w8, #0x7fffffff            	// #2147483647
  427418:	mov	w9, #0x7fff                	// #32767
  42741c:	csel	w24, w9, w8, eq  // eq = none
  427420:	bl	4385d0 <feof@plt+0x354f0>
  427424:	ldrb	w8, [x0, #4]
  427428:	cmp	w8, #0x16
  42742c:	b.eq	4274ec <feof@plt+0x2440c>  // b.none
  427430:	mov	x1, x0
  427434:	cmp	w8, #0x37
  427438:	b.ne	4274b8 <feof@plt+0x243d8>  // b.any
  42743c:	ldr	w9, [x1, #8]
  427440:	cbz	w9, 427514 <feof@plt+0x24434>
  427444:	ldr	x10, [x1, #16]
  427448:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  42744c:	mov	w8, wzr
  427450:	mov	w12, wzr
  427454:	add	x11, x11, #0xe98
  427458:	mov	w13, #0xa                   	// #10
  42745c:	ldrb	w14, [x10]
  427460:	ldrh	w15, [x11, x14, lsl #1]
  427464:	tbz	w15, #2, 4274b8 <feof@plt+0x243d8>
  427468:	madd	w14, w12, w13, w14
  42746c:	sub	w22, w14, #0x30
  427470:	cmp	w22, w12
  427474:	sub	x9, x9, #0x1
  427478:	add	x10, x10, #0x1
  42747c:	csinc	w8, w8, wzr, cs  // cs = hs, nlast
  427480:	mov	w12, w22
  427484:	cbnz	x9, 42745c <feof@plt+0x2437c>
  427488:	ldrb	w9, [x19, #1154]
  42748c:	cbz	w9, 427524 <feof@plt+0x24444>
  427490:	sub	w9, w22, #0x1
  427494:	cmp	w9, w24
  427498:	b.cs	4274a4 <feof@plt+0x243c4>  // b.hs, b.nlast
  42749c:	tst	w8, #0xff
  4274a0:	b.eq	427540 <feof@plt+0x24460>  // b.none
  4274a4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4274a8:	add	x2, x2, #0x31e
  4274ac:	mov	w1, #0x2                   	// #2
  4274b0:	mov	x0, x19
  4274b4:	b	42753c <feof@plt+0x2445c>
  4274b8:	mov	x0, x19
  4274bc:	bl	433540 <feof@plt+0x30460>
  4274c0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4274c4:	add	x2, x2, #0x2f3
  4274c8:	mov	x3, x0
  4274cc:	mov	x0, x19
  4274d0:	ldp	x20, x19, [sp, #64]
  4274d4:	ldp	x22, x21, [sp, #48]
  4274d8:	ldp	x24, x23, [sp, #32]
  4274dc:	ldp	x29, x30, [sp, #16]
  4274e0:	mov	w1, #0x3                   	// #3
  4274e4:	add	sp, sp, #0x50
  4274e8:	b	4288a0 <feof@plt+0x257c0>
  4274ec:	mov	x0, x19
  4274f0:	ldp	x20, x19, [sp, #64]
  4274f4:	ldp	x22, x21, [sp, #48]
  4274f8:	ldp	x24, x23, [sp, #32]
  4274fc:	ldp	x29, x30, [sp, #16]
  427500:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427504:	add	x2, x2, #0x2d0
  427508:	mov	w1, #0x3                   	// #3
  42750c:	add	sp, sp, #0x50
  427510:	b	4288a0 <feof@plt+0x257c0>
  427514:	mov	w22, wzr
  427518:	mov	w8, wzr
  42751c:	ldrb	w9, [x19, #1154]
  427520:	cbnz	w9, 427490 <feof@plt+0x243b0>
  427524:	tst	w8, #0xff
  427528:	b.eq	427540 <feof@plt+0x24460>  // b.none
  42752c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427530:	add	x2, x2, #0x31e
  427534:	mov	x0, x19
  427538:	mov	w1, wzr
  42753c:	bl	4288a0 <feof@plt+0x257c0>
  427540:	mov	x0, x19
  427544:	bl	4385d0 <feof@plt+0x354f0>
  427548:	ldrb	w8, [x0, #4]
  42754c:	cmp	w8, #0x16
  427550:	b.eq	4275d4 <feof@plt+0x244f4>  // b.none
  427554:	mov	x1, x0
  427558:	cmp	w8, #0x3e
  42755c:	b.ne	427668 <feof@plt+0x24588>  // b.any
  427560:	add	x1, x1, #0x8
  427564:	mov	x3, sp
  427568:	mov	w2, #0x1                   	// #1
  42756c:	mov	w4, #0x3e                  	// #62
  427570:	mov	x0, x19
  427574:	stp	xzr, xzr, [sp]
  427578:	bl	422630 <feof@plt+0x1f550>
  42757c:	ldr	x8, [x19, #448]
  427580:	ldr	x9, [sp, #8]
  427584:	tst	w0, #0x1
  427588:	ldurb	w8, [x8, #-20]
  42758c:	csel	x20, x9, x20, ne  // ne = any
  427590:	cmp	w8, #0x16
  427594:	b.eq	4275d4 <feof@plt+0x244f4>  // b.none
  427598:	mov	x0, x19
  42759c:	bl	4385d0 <feof@plt+0x354f0>
  4275a0:	ldrb	w8, [x0, #4]
  4275a4:	cmp	w8, #0x16
  4275a8:	b.eq	4275d4 <feof@plt+0x244f4>  // b.none
  4275ac:	ldr	x8, [x19, #144]
  4275b0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4275b4:	add	x2, x2, #0x249
  4275b8:	mov	x0, x19
  4275bc:	ldr	x3, [x8, #8]
  4275c0:	mov	w1, wzr
  4275c4:	bl	428b00 <feof@plt+0x25a20>
  4275c8:	b	4275d4 <feof@plt+0x244f4>
  4275cc:	mov	x0, x19
  4275d0:	bl	4384c8 <feof@plt+0x353e8>
  4275d4:	ldr	x8, [x19, #136]
  4275d8:	ldr	x8, [x8, #8]
  4275dc:	cbnz	x8, 4275cc <feof@plt+0x244ec>
  4275e0:	ldr	x8, [x19, #448]
  4275e4:	ldurb	w8, [x8, #-20]
  4275e8:	cmp	w8, #0x16
  4275ec:	b.eq	427604 <feof@plt+0x24524>  // b.none
  4275f0:	mov	x0, x19
  4275f4:	bl	42fda4 <feof@plt+0x2ccc4>
  4275f8:	ldrb	w8, [x0, #4]
  4275fc:	cmp	w8, #0x16
  427600:	b.ne	4275f0 <feof@plt+0x24510>  // b.any
  427604:	ldr	x0, [x19, #40]
  427608:	mov	w1, #0x3                   	// #3
  42760c:	mov	w2, w21
  427610:	mov	x3, x20
  427614:	mov	w4, w22
  427618:	bl	434b8c <feof@plt+0x31aac>
  42761c:	mov	x20, x0
  427620:	cbz	x0, 427634 <feof@plt+0x24554>
  427624:	ldr	x0, [x19, #40]
  427628:	ldr	w1, [x20, #16]
  42762c:	mov	w2, #0x7f                  	// #127
  427630:	bl	435084 <feof@plt+0x31fa4>
  427634:	ldr	x8, [x19, #912]
  427638:	cbz	x8, 427648 <feof@plt+0x24568>
  42763c:	mov	x0, x19
  427640:	mov	x1, x20
  427644:	blr	x8
  427648:	mov	w8, #0x1                   	// #1
  42764c:	strb	w8, [x23, #116]
  427650:	ldp	x20, x19, [sp, #64]
  427654:	ldp	x22, x21, [sp, #48]
  427658:	ldp	x24, x23, [sp, #32]
  42765c:	ldp	x29, x30, [sp, #16]
  427660:	add	sp, sp, #0x50
  427664:	ret
  427668:	mov	x0, x19
  42766c:	bl	433540 <feof@plt+0x30460>
  427670:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427674:	add	x2, x2, #0x337
  427678:	b	4274c8 <feof@plt+0x243e8>
  42767c:	stp	x29, x30, [sp, #-32]!
  427680:	stp	x20, x19, [sp, #16]
  427684:	ldr	x8, [x0]
  427688:	mov	x19, x0
  42768c:	mov	x29, sp
  427690:	ldr	x20, [x8, #96]
  427694:	cbz	x20, 4276ec <feof@plt+0x2460c>
  427698:	ldr	w8, [x20, #28]
  42769c:	cmp	w8, #0x5
  4276a0:	b.ne	4276d4 <feof@plt+0x245f4>  // b.any
  4276a4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4276a8:	add	x2, x2, #0x366
  4276ac:	mov	w1, #0x3                   	// #3
  4276b0:	mov	x0, x19
  4276b4:	bl	4288a0 <feof@plt+0x257c0>
  4276b8:	ldr	w2, [x20, #8]
  4276bc:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  4276c0:	add	x4, x4, #0x2a5
  4276c4:	mov	w1, #0x3                   	// #3
  4276c8:	mov	x0, x19
  4276cc:	mov	w3, wzr
  4276d0:	bl	428d60 <feof@plt+0x25c80>
  4276d4:	ldrb	w8, [x20, #24]
  4276d8:	mov	w9, #0x9                   	// #9
  4276dc:	str	w9, [x20, #28]
  4276e0:	cbz	w8, 427708 <feof@plt+0x24628>
  4276e4:	mov	w8, #0x1                   	// #1
  4276e8:	b	427724 <feof@plt+0x24644>
  4276ec:	mov	x0, x19
  4276f0:	ldp	x20, x19, [sp, #16]
  4276f4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4276f8:	add	x2, x2, #0x354
  4276fc:	mov	w1, #0x3                   	// #3
  427700:	ldp	x29, x30, [sp], #32
  427704:	b	4288a0 <feof@plt+0x257c0>
  427708:	mov	x0, x19
  42770c:	mov	w1, wzr
  427710:	bl	42a6cc <feof@plt+0x275ec>
  427714:	mvn	w8, w0
  427718:	and	w9, w0, #0x1
  42771c:	and	w8, w8, #0x1
  427720:	strb	w9, [x20, #24]
  427724:	strb	w8, [x19, #18]
  427728:	str	xzr, [x20, #16]
  42772c:	ldp	x20, x19, [sp, #16]
  427730:	ldp	x29, x30, [sp], #32
  427734:	ret
  427738:	stp	x29, x30, [sp, #-48]!
  42773c:	stp	x20, x19, [sp, #32]
  427740:	ldr	x9, [x0, #144]
  427744:	ldr	x8, [x0, #448]
  427748:	ldrb	w10, [x0, #24]
  42774c:	str	x21, [sp, #16]
  427750:	ldr	x1, [x9, #8]
  427754:	ldur	w20, [x8, #-24]
  427758:	add	w8, w10, #0x1
  42775c:	mov	x29, sp
  427760:	mov	x19, x0
  427764:	strb	w8, [x0, #24]
  427768:	bl	433cb4 <feof@plt+0x30bd4>
  42776c:	ldrb	w8, [x19, #24]
  427770:	mov	x21, x0
  427774:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  427778:	add	x4, x4, #0xaac
  42777c:	sub	w8, w8, #0x1
  427780:	mov	w1, #0x3                   	// #3
  427784:	mov	x0, x19
  427788:	mov	w2, w20
  42778c:	mov	w3, wzr
  427790:	mov	x5, x21
  427794:	strb	w8, [x19, #24]
  427798:	bl	428d60 <feof@plt+0x25c80>
  42779c:	mov	x0, x21
  4277a0:	ldp	x20, x19, [sp, #32]
  4277a4:	ldr	x21, [sp, #16]
  4277a8:	ldp	x29, x30, [sp], #48
  4277ac:	b	402b20 <free@plt>
  4277b0:	sub	sp, sp, #0x50
  4277b4:	stp	x29, x30, [sp, #32]
  4277b8:	add	x29, sp, #0x20
  4277bc:	stp	x22, x21, [sp, #48]
  4277c0:	stp	x20, x19, [sp, #64]
  4277c4:	stur	wzr, [x29, #-4]
  4277c8:	ldrb	w8, [x0, #24]
  4277cc:	sub	x1, x29, #0x4
  4277d0:	mov	x19, x0
  4277d4:	add	w8, w8, #0x1
  4277d8:	strb	w8, [x0, #24]
  4277dc:	bl	438c38 <feof@plt+0x35b58>
  4277e0:	ldr	x8, [x0, #16]
  4277e4:	ldr	q0, [x0]
  4277e8:	mov	x20, x0
  4277ec:	str	x8, [sp, #16]
  4277f0:	str	q0, [sp]
  4277f4:	ldrb	w8, [x0, #4]
  4277f8:	cmp	w8, #0x35
  4277fc:	b.ne	427820 <feof@plt+0x24740>  // b.any
  427800:	ldr	x21, [x19, #896]
  427804:	cbz	x21, 427820 <feof@plt+0x24740>
  427808:	ldr	x8, [x20, #8]
  42780c:	ldr	x9, [x21, #8]
  427810:	cmp	x9, x8
  427814:	b.eq	4278d0 <feof@plt+0x247f0>  // b.none
  427818:	ldr	x21, [x21]
  42781c:	cbnz	x21, 42780c <feof@plt+0x2472c>
  427820:	mov	w1, #0x1                   	// #1
  427824:	ldr	x8, [x19, #960]
  427828:	cbz	x8, 4278b0 <feof@plt+0x247d0>
  42782c:	cmp	w1, #0x1
  427830:	b.eq	427898 <feof@plt+0x247b8>  // b.none
  427834:	ldr	x8, [x19, #136]
  427838:	ldr	x8, [x8, #8]
  42783c:	cbz	x8, 427898 <feof@plt+0x247b8>
  427840:	mov	w0, #0x30                  	// #48
  427844:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  427848:	ldr	q0, [sp]
  42784c:	ldr	x8, [sp, #16]
  427850:	mov	x2, x0
  427854:	mov	w3, #0x2                   	// #2
  427858:	str	q0, [x0]
  42785c:	ldrh	w9, [x0, #6]
  427860:	str	x8, [x0, #16]
  427864:	mov	x1, xzr
  427868:	orr	w8, w9, #0x400
  42786c:	strh	w8, [x0, #6]
  427870:	ldr	q0, [x20]
  427874:	ldr	x8, [x20, #16]
  427878:	stur	q0, [x0, #24]
  42787c:	ldrh	w9, [x0, #30]
  427880:	str	x8, [x0, #40]
  427884:	orr	w8, w9, #0x400
  427888:	strh	w8, [x0, #30]
  42788c:	mov	x0, x19
  427890:	bl	4383a8 <feof@plt+0x352c8>
  427894:	b	4278a0 <feof@plt+0x247c0>
  427898:	mov	x0, x19
  42789c:	bl	438d5c <feof@plt+0x35c7c>
  4278a0:	ldr	x8, [x19, #960]
  4278a4:	ldr	w1, [x19, #48]
  4278a8:	mov	x0, x19
  4278ac:	blr	x8
  4278b0:	ldrb	w8, [x19, #24]
  4278b4:	sub	w8, w8, #0x1
  4278b8:	strb	w8, [x19, #24]
  4278bc:	ldp	x20, x19, [sp, #64]
  4278c0:	ldp	x22, x21, [sp, #48]
  4278c4:	ldp	x29, x30, [sp, #32]
  4278c8:	add	sp, sp, #0x50
  4278cc:	ret
  4278d0:	ldrb	w8, [x21, #16]
  4278d4:	cbz	w8, 42793c <feof@plt+0x2485c>
  4278d8:	ldrb	w22, [x21, #19]
  4278dc:	cbz	w22, 4278ec <feof@plt+0x2480c>
  4278e0:	ldrb	w8, [x19, #24]
  4278e4:	sub	w8, w8, #0x1
  4278e8:	strb	w8, [x19, #24]
  4278ec:	mov	x0, x19
  4278f0:	bl	4385d0 <feof@plt+0x354f0>
  4278f4:	ldrb	w8, [x0, #4]
  4278f8:	cmp	w8, #0x35
  4278fc:	b.ne	427924 <feof@plt+0x24844>  // b.any
  427900:	ldr	x21, [x21, #24]
  427904:	cbz	x21, 427928 <feof@plt+0x24848>
  427908:	ldr	x8, [x0, #8]
  42790c:	ldr	x9, [x21, #8]
  427910:	cmp	x9, x8
  427914:	b.eq	427928 <feof@plt+0x24848>  // b.none
  427918:	ldr	x21, [x21]
  42791c:	cbnz	x21, 42790c <feof@plt+0x2482c>
  427920:	b	427928 <feof@plt+0x24848>
  427924:	mov	x21, xzr
  427928:	cbz	w22, 427938 <feof@plt+0x24858>
  42792c:	ldrb	w8, [x19, #24]
  427930:	add	w8, w8, #0x1
  427934:	strb	w8, [x19, #24]
  427938:	cbz	x21, 4279cc <feof@plt+0x248ec>
  42793c:	ldrb	w8, [x21, #18]
  427940:	cbz	w8, 42797c <feof@plt+0x2489c>
  427944:	ldur	w8, [x29, #-4]
  427948:	mov	w9, #0x51                  	// #81
  42794c:	strb	w9, [x19, #156]
  427950:	mov	w9, #0x1                   	// #1
  427954:	str	w8, [x19, #152]
  427958:	ldrh	w8, [x20, #6]
  42795c:	strh	w8, [x19, #158]
  427960:	ldr	w8, [x21, #24]
  427964:	strb	w9, [x19, #32]
  427968:	str	w8, [x19, #160]
  42796c:	ldrb	w8, [x21, #19]
  427970:	strb	w8, [x19, #33]
  427974:	cbnz	w8, 4278b0 <feof@plt+0x247d0>
  427978:	b	4279bc <feof@plt+0x248dc>
  42797c:	ldr	x8, [x19, #904]
  427980:	cbz	x8, 427994 <feof@plt+0x248b4>
  427984:	mov	x0, x19
  427988:	mov	x1, x20
  42798c:	mov	w2, wzr
  427990:	blr	x8
  427994:	ldrb	w8, [x21, #19]
  427998:	cbz	w8, 4279a8 <feof@plt+0x248c8>
  42799c:	ldrb	w8, [x19, #24]
  4279a0:	sub	w8, w8, #0x1
  4279a4:	strb	w8, [x19, #24]
  4279a8:	ldr	x8, [x21, #24]
  4279ac:	mov	x0, x19
  4279b0:	blr	x8
  4279b4:	ldrb	w8, [x21, #19]
  4279b8:	cbz	w8, 4278b0 <feof@plt+0x247d0>
  4279bc:	ldrb	w8, [x19, #24]
  4279c0:	add	w8, w8, #0x1
  4279c4:	strb	w8, [x19, #24]
  4279c8:	b	4278b0 <feof@plt+0x247d0>
  4279cc:	mov	w1, #0x2                   	// #2
  4279d0:	mov	x20, x0
  4279d4:	ldr	x8, [x19, #960]
  4279d8:	cbnz	x8, 42782c <feof@plt+0x2474c>
  4279dc:	b	4278b0 <feof@plt+0x247d0>
  4279e0:	stp	x29, x30, [sp, #-48]!
  4279e4:	stp	x20, x19, [sp, #32]
  4279e8:	ldr	x9, [x0, #144]
  4279ec:	ldr	x8, [x0, #448]
  4279f0:	ldrb	w10, [x0, #24]
  4279f4:	str	x21, [sp, #16]
  4279f8:	ldr	x1, [x9, #8]
  4279fc:	ldur	w20, [x8, #-24]
  427a00:	add	w8, w10, #0x1
  427a04:	mov	x29, sp
  427a08:	mov	x19, x0
  427a0c:	strb	w8, [x0, #24]
  427a10:	bl	433cb4 <feof@plt+0x30bd4>
  427a14:	ldrb	w8, [x19, #24]
  427a18:	mov	x21, x0
  427a1c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  427a20:	add	x4, x4, #0xaac
  427a24:	sub	w8, w8, #0x1
  427a28:	mov	w1, #0x12                  	// #18
  427a2c:	mov	x0, x19
  427a30:	mov	w2, w20
  427a34:	mov	w3, wzr
  427a38:	mov	x5, x21
  427a3c:	strb	w8, [x19, #24]
  427a40:	bl	429054 <feof@plt+0x25f74>
  427a44:	mov	x0, x21
  427a48:	ldp	x20, x19, [sp, #32]
  427a4c:	ldr	x21, [sp, #16]
  427a50:	ldp	x29, x30, [sp], #48
  427a54:	b	402b20 <free@plt>
  427a58:	stp	x29, x30, [sp, #-32]!
  427a5c:	ldr	x8, [x0, #40]
  427a60:	str	x19, [sp, #16]
  427a64:	mov	x19, x0
  427a68:	mov	x29, sp
  427a6c:	ldr	w8, [x8, #48]
  427a70:	cmp	w8, #0x1
  427a74:	b.ne	427a94 <feof@plt+0x249b4>  // b.any
  427a78:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427a7c:	add	x2, x2, #0x378
  427a80:	mov	x0, x19
  427a84:	mov	w1, wzr
  427a88:	bl	4288a0 <feof@plt+0x257c0>
  427a8c:	mov	w1, wzr
  427a90:	b	427a98 <feof@plt+0x249b8>
  427a94:	mov	w1, #0x1                   	// #1
  427a98:	mov	x0, x19
  427a9c:	ldr	x19, [sp, #16]
  427aa0:	ldp	x29, x30, [sp], #32
  427aa4:	b	427ec8 <feof@plt+0x24de8>
  427aa8:	stp	x29, x30, [sp, #-32]!
  427aac:	str	x19, [sp, #16]
  427ab0:	mov	x29, sp
  427ab4:	mov	x19, x0
  427ab8:	bl	4385d0 <feof@plt+0x354f0>
  427abc:	ldrb	w8, [x0, #4]
  427ac0:	cmp	w8, #0x3e
  427ac4:	b.ne	427ae4 <feof@plt+0x24a04>  // b.any
  427ac8:	ldr	x8, [x19, #952]
  427acc:	cbz	x8, 427b00 <feof@plt+0x24a20>
  427ad0:	ldr	w1, [x19, #48]
  427ad4:	add	x2, x0, #0x8
  427ad8:	mov	x0, x19
  427adc:	blr	x8
  427ae0:	b	427b00 <feof@plt+0x24a20>
  427ae4:	ldr	x8, [x19, #144]
  427ae8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427aec:	add	x2, x2, #0x39d
  427af0:	mov	w1, #0x3                   	// #3
  427af4:	ldr	x3, [x8, #8]
  427af8:	mov	x0, x19
  427afc:	bl	4288a0 <feof@plt+0x257c0>
  427b00:	ldr	x8, [x19, #448]
  427b04:	ldurb	w8, [x8, #-20]
  427b08:	cmp	w8, #0x16
  427b0c:	b.eq	427b24 <feof@plt+0x24a44>  // b.none
  427b10:	mov	x0, x19
  427b14:	bl	42fda4 <feof@plt+0x2ccc4>
  427b18:	ldrb	w8, [x0, #4]
  427b1c:	cmp	w8, #0x16
  427b20:	b.ne	427b30 <feof@plt+0x24a50>  // b.any
  427b24:	ldr	x19, [sp, #16]
  427b28:	ldp	x29, x30, [sp], #32
  427b2c:	ret
  427b30:	ldr	x8, [x19, #144]
  427b34:	mov	x0, x19
  427b38:	ldr	x19, [sp, #16]
  427b3c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427b40:	ldr	x3, [x8, #8]
  427b44:	add	x2, x2, #0x249
  427b48:	mov	w1, wzr
  427b4c:	ldp	x29, x30, [sp], #32
  427b50:	b	428b00 <feof@plt+0x25a20>
  427b54:	mov	w1, #0x2                   	// #2
  427b58:	b	427ec8 <feof@plt+0x24de8>
  427b5c:	sub	sp, sp, #0x70
  427b60:	add	x2, sp, #0x8
  427b64:	mov	w1, #0x10                  	// #16
  427b68:	stp	x29, x30, [sp, #16]
  427b6c:	stp	x28, x27, [sp, #32]
  427b70:	stp	x26, x25, [sp, #48]
  427b74:	stp	x24, x23, [sp, #64]
  427b78:	stp	x22, x21, [sp, #80]
  427b7c:	stp	x20, x19, [sp, #96]
  427b80:	add	x29, sp, #0x10
  427b84:	mov	x19, x0
  427b88:	bl	4262ac <feof@plt+0x231cc>
  427b8c:	cbz	x0, 427ca4 <feof@plt+0x24bc4>
  427b90:	mov	x23, x0
  427b94:	ldr	x24, [sp, #8]
  427b98:	ldr	x27, [x23, #24]!
  427b9c:	mov	x20, x0
  427ba0:	cbz	x27, 427c3c <feof@plt+0x24b5c>
  427ba4:	add	x25, x24, #0x18
  427ba8:	mov	x26, x23
  427bac:	b	427bc8 <feof@plt+0x24ae8>
  427bb0:	ldr	w8, [x27, #12]
  427bb4:	cmp	w28, w8
  427bb8:	b.eq	427c14 <feof@plt+0x24b34>  // b.none
  427bbc:	ldr	x26, [x26]
  427bc0:	ldr	x27, [x26]
  427bc4:	cbz	x27, 427c3c <feof@plt+0x24b5c>
  427bc8:	ldr	w8, [x27, #12]
  427bcc:	ldr	w9, [x24, #12]
  427bd0:	cmp	w8, w9
  427bd4:	b.ne	427bbc <feof@plt+0x24adc>  // b.any
  427bd8:	cbz	w8, 427c1c <feof@plt+0x24b3c>
  427bdc:	mov	x28, xzr
  427be0:	add	x21, x27, #0x18
  427be4:	mov	x22, x25
  427be8:	mov	x0, x21
  427bec:	mov	x1, x22
  427bf0:	bl	433868 <feof@plt+0x30788>
  427bf4:	cbz	w0, 427bb0 <feof@plt+0x24ad0>
  427bf8:	ldr	w8, [x27, #12]
  427bfc:	add	x28, x28, #0x1
  427c00:	add	x22, x22, #0x18
  427c04:	add	x21, x21, #0x18
  427c08:	cmp	x28, x8
  427c0c:	b.cc	427be8 <feof@plt+0x24b08>  // b.lo, b.ul, b.last
  427c10:	b	427bb4 <feof@plt+0x24ad4>
  427c14:	ldr	x8, [x26]
  427c18:	cbz	x8, 427c3c <feof@plt+0x24b5c>
  427c1c:	ldr	x8, [x20]
  427c20:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427c24:	add	x2, x2, #0x3b3
  427c28:	mov	x0, x19
  427c2c:	add	x3, x8, #0x1
  427c30:	mov	w1, wzr
  427c34:	bl	4288a0 <feof@plt+0x257c0>
  427c38:	b	427ca4 <feof@plt+0x24bc4>
  427c3c:	ldr	w8, [x24, #12]
  427c40:	mov	w9, #0x18                  	// #24
  427c44:	orr	x10, xzr, #0x18
  427c48:	mov	x0, x19
  427c4c:	madd	x1, x8, x9, x10
  427c50:	bl	4341ac <feof@plt+0x310cc>
  427c54:	str	x0, [sp, #8]
  427c58:	ldr	x8, [x23]
  427c5c:	str	x8, [x0]
  427c60:	str	x0, [x23]
  427c64:	ldr	x8, [x19, #448]
  427c68:	ldurb	w8, [x8, #-20]
  427c6c:	cmp	w8, #0x16
  427c70:	b.eq	427ca4 <feof@plt+0x24bc4>  // b.none
  427c74:	mov	x0, x19
  427c78:	bl	42fda4 <feof@plt+0x2ccc4>
  427c7c:	ldrb	w8, [x0, #4]
  427c80:	cmp	w8, #0x16
  427c84:	b.eq	427ca4 <feof@plt+0x24bc4>  // b.none
  427c88:	ldr	x8, [x19, #144]
  427c8c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427c90:	add	x2, x2, #0x249
  427c94:	mov	x0, x19
  427c98:	ldr	x3, [x8, #8]
  427c9c:	mov	w1, wzr
  427ca0:	bl	428b00 <feof@plt+0x25a20>
  427ca4:	ldp	x20, x19, [sp, #96]
  427ca8:	ldp	x22, x21, [sp, #80]
  427cac:	ldp	x24, x23, [sp, #64]
  427cb0:	ldp	x26, x25, [sp, #48]
  427cb4:	ldp	x28, x27, [sp, #32]
  427cb8:	ldp	x29, x30, [sp, #16]
  427cbc:	add	sp, sp, #0x70
  427cc0:	ret
  427cc4:	sub	sp, sp, #0x60
  427cc8:	add	x2, sp, #0x8
  427ccc:	mov	w1, #0x11                  	// #17
  427cd0:	stp	x29, x30, [sp, #16]
  427cd4:	stp	x26, x25, [sp, #32]
  427cd8:	stp	x24, x23, [sp, #48]
  427cdc:	stp	x22, x21, [sp, #64]
  427ce0:	stp	x20, x19, [sp, #80]
  427ce4:	add	x29, sp, #0x10
  427ce8:	mov	x19, x0
  427cec:	bl	4262ac <feof@plt+0x231cc>
  427cf0:	cbz	x0, 427dd0 <feof@plt+0x24cf0>
  427cf4:	ldr	x23, [sp, #8]
  427cf8:	mov	x20, x0
  427cfc:	cbz	x23, 427d74 <feof@plt+0x24c94>
  427d00:	ldr	x25, [x20, #24]!
  427d04:	cbz	x25, 427d90 <feof@plt+0x24cb0>
  427d08:	add	x24, x23, #0x18
  427d0c:	b	427d28 <feof@plt+0x24c48>
  427d10:	ldr	w8, [x25, #12]
  427d14:	cmp	w26, w8
  427d18:	b.eq	427d80 <feof@plt+0x24ca0>  // b.none
  427d1c:	ldr	x20, [x20]
  427d20:	ldr	x25, [x20]
  427d24:	cbz	x25, 427d90 <feof@plt+0x24cb0>
  427d28:	ldr	w8, [x25, #12]
  427d2c:	ldr	w9, [x23, #12]
  427d30:	cmp	w8, w9
  427d34:	b.ne	427d1c <feof@plt+0x24c3c>  // b.any
  427d38:	cbz	w8, 427d88 <feof@plt+0x24ca8>
  427d3c:	mov	x26, xzr
  427d40:	add	x21, x25, #0x18
  427d44:	mov	x22, x24
  427d48:	mov	x0, x21
  427d4c:	mov	x1, x22
  427d50:	bl	433868 <feof@plt+0x30788>
  427d54:	cbz	w0, 427d10 <feof@plt+0x24c30>
  427d58:	ldr	w8, [x25, #12]
  427d5c:	add	x26, x26, #0x1
  427d60:	add	x22, x22, #0x18
  427d64:	add	x21, x21, #0x18
  427d68:	cmp	x26, x8
  427d6c:	b.cc	427d48 <feof@plt+0x24c68>  // b.lo, b.ul, b.last
  427d70:	b	427d14 <feof@plt+0x24c34>
  427d74:	mov	x0, x20
  427d78:	bl	438e70 <feof@plt+0x35d90>
  427d7c:	b	427dd0 <feof@plt+0x24cf0>
  427d80:	ldr	x25, [x20]
  427d84:	cbz	x25, 427d90 <feof@plt+0x24cb0>
  427d88:	ldr	x8, [x25]
  427d8c:	str	x8, [x20]
  427d90:	ldr	x8, [x19, #448]
  427d94:	ldurb	w8, [x8, #-20]
  427d98:	cmp	w8, #0x16
  427d9c:	b.eq	427dd0 <feof@plt+0x24cf0>  // b.none
  427da0:	mov	x0, x19
  427da4:	bl	42fda4 <feof@plt+0x2ccc4>
  427da8:	ldrb	w8, [x0, #4]
  427dac:	cmp	w8, #0x16
  427db0:	b.eq	427dd0 <feof@plt+0x24cf0>  // b.none
  427db4:	ldr	x8, [x19, #144]
  427db8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427dbc:	add	x2, x2, #0x249
  427dc0:	mov	x0, x19
  427dc4:	ldr	x3, [x8, #8]
  427dc8:	mov	w1, wzr
  427dcc:	bl	428b00 <feof@plt+0x25a20>
  427dd0:	ldp	x20, x19, [sp, #80]
  427dd4:	ldp	x22, x21, [sp, #64]
  427dd8:	ldp	x24, x23, [sp, #48]
  427ddc:	ldp	x26, x25, [sp, #32]
  427de0:	ldp	x29, x30, [sp, #16]
  427de4:	add	sp, sp, #0x60
  427de8:	ret
  427dec:	stp	x29, x30, [sp, #-32]!
  427df0:	stp	x20, x19, [sp, #16]
  427df4:	mov	x29, sp
  427df8:	mov	w20, w1
  427dfc:	mov	x19, x0
  427e00:	bl	42fda4 <feof@plt+0x2ccc4>
  427e04:	ldrb	w8, [x0, #4]
  427e08:	cmp	w8, #0x35
  427e0c:	b.ne	427e48 <feof@plt+0x24d68>  // b.any
  427e10:	ldr	x0, [x0, #8]
  427e14:	tbz	w20, #0, 427e3c <feof@plt+0x24d5c>
  427e18:	ldr	x8, [x19, #1248]
  427e1c:	cmp	x0, x8
  427e20:	b.eq	427e98 <feof@plt+0x24db8>  // b.none
  427e24:	ldr	x8, [x19, #1288]
  427e28:	cmp	x0, x8
  427e2c:	b.eq	427ea4 <feof@plt+0x24dc4>  // b.none
  427e30:	ldr	x8, [x19, #1296]
  427e34:	cmp	x0, x8
  427e38:	b.eq	427ea4 <feof@plt+0x24dc4>  // b.none
  427e3c:	ldrb	w8, [x0, #18]
  427e40:	tbnz	w8, #3, 427eb8 <feof@plt+0x24dd8>
  427e44:	b	427ebc <feof@plt+0x24ddc>
  427e48:	ldrb	w9, [x0, #6]
  427e4c:	tbnz	w9, #4, 427e6c <feof@plt+0x24d8c>
  427e50:	cmp	w8, #0x16
  427e54:	b.ne	427e8c <feof@plt+0x24dac>  // b.any
  427e58:	ldr	x8, [x19, #144]
  427e5c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427e60:	add	x2, x2, #0x19c
  427e64:	ldr	x3, [x8, #8]
  427e68:	b	427e7c <feof@plt+0x24d9c>
  427e6c:	ldr	x8, [x0, #8]
  427e70:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427e74:	add	x2, x2, #0x15c
  427e78:	ldr	x3, [x8]
  427e7c:	mov	w1, #0x3                   	// #3
  427e80:	mov	x0, x19
  427e84:	bl	4288a0 <feof@plt+0x257c0>
  427e88:	b	427eb8 <feof@plt+0x24dd8>
  427e8c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427e90:	add	x2, x2, #0x1c1
  427e94:	b	427eac <feof@plt+0x24dcc>
  427e98:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427e9c:	add	x2, x2, #0x102
  427ea0:	b	427eac <feof@plt+0x24dcc>
  427ea4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427ea8:	add	x2, x2, #0x12b
  427eac:	mov	w1, #0x3                   	// #3
  427eb0:	mov	x0, x19
  427eb4:	bl	4288a0 <feof@plt+0x257c0>
  427eb8:	mov	x0, xzr
  427ebc:	ldp	x20, x19, [sp, #16]
  427ec0:	ldp	x29, x30, [sp], #32
  427ec4:	ret
  427ec8:	sub	sp, sp, #0x50
  427ecc:	stp	x29, x30, [sp, #32]
  427ed0:	stp	x22, x21, [sp, #48]
  427ed4:	stp	x20, x19, [sp, #64]
  427ed8:	str	xzr, [sp, #16]
  427edc:	ldrb	w8, [x0, #1123]
  427ee0:	add	x29, sp, #0x20
  427ee4:	mov	w21, w1
  427ee8:	sub	x1, x29, #0x4
  427eec:	cmp	w8, #0x0
  427ef0:	cset	w8, eq  // eq = none
  427ef4:	add	x2, sp, #0x10
  427ef8:	add	x3, sp, #0xc
  427efc:	mov	x20, x0
  427f00:	strb	w8, [x0, #21]
  427f04:	bl	428018 <feof@plt+0x24f38>
  427f08:	mov	x19, x0
  427f0c:	cbz	x0, 427ff0 <feof@plt+0x24f10>
  427f10:	ldrb	w8, [x19]
  427f14:	cbz	w8, 427f58 <feof@plt+0x24e78>
  427f18:	ldr	x8, [x20, #40]
  427f1c:	ldr	w8, [x8, #48]
  427f20:	cmp	w8, #0xc8
  427f24:	b.cc	427f40 <feof@plt+0x24e60>  // b.lo, b.ul, b.last
  427f28:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  427f2c:	add	x2, x2, #0x1f7
  427f30:	mov	w1, #0x3                   	// #3
  427f34:	mov	x0, x20
  427f38:	bl	4288a0 <feof@plt+0x257c0>
  427f3c:	b	427ff0 <feof@plt+0x24f10>
  427f40:	ldr	x8, [x20, #136]
  427f44:	ldr	x8, [x8, #8]
  427f48:	cbz	x8, 427f80 <feof@plt+0x24ea0>
  427f4c:	mov	x0, x20
  427f50:	bl	4384c8 <feof@plt+0x353e8>
  427f54:	b	427f40 <feof@plt+0x24e60>
  427f58:	ldr	x8, [x20, #144]
  427f5c:	ldr	w2, [sp, #12]
  427f60:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  427f64:	add	x4, x4, #0x1e1
  427f68:	ldr	x5, [x8, #8]
  427f6c:	mov	w1, #0x3                   	// #3
  427f70:	mov	x0, x20
  427f74:	mov	w3, wzr
  427f78:	bl	428d60 <feof@plt+0x25c80>
  427f7c:	b	427ff0 <feof@plt+0x24f10>
  427f80:	ldr	x8, [x20, #448]
  427f84:	ldurb	w8, [x8, #-20]
  427f88:	cmp	w8, #0x16
  427f8c:	b.eq	427fa4 <feof@plt+0x24ec4>  // b.none
  427f90:	mov	x0, x20
  427f94:	bl	42fda4 <feof@plt+0x2ccc4>
  427f98:	ldrb	w8, [x0, #4]
  427f9c:	cmp	w8, #0x16
  427fa0:	b.ne	427f90 <feof@plt+0x24eb0>  // b.any
  427fa4:	ldr	x8, [x20, #928]
  427fa8:	cbz	x8, 427fd4 <feof@plt+0x24ef4>
  427fac:	ldr	x9, [x20, #144]
  427fb0:	ldur	w22, [x29, #-4]
  427fb4:	ldr	w1, [x20, #48]
  427fb8:	ldr	x5, [sp, #16]
  427fbc:	ldr	x2, [x9, #8]
  427fc0:	mov	x0, x20
  427fc4:	mov	x3, x19
  427fc8:	mov	w4, w22
  427fcc:	blr	x8
  427fd0:	b	427fd8 <feof@plt+0x24ef8>
  427fd4:	ldur	w22, [x29, #-4]
  427fd8:	ldr	w4, [sp, #12]
  427fdc:	mov	x0, x20
  427fe0:	mov	x1, x19
  427fe4:	mov	w2, w22
  427fe8:	mov	w3, w21
  427fec:	bl	42d7ac <feof@plt+0x2a6cc>
  427ff0:	mov	x0, x19
  427ff4:	bl	402b20 <free@plt>
  427ff8:	ldr	x0, [sp, #16]
  427ffc:	cbz	x0, 428004 <feof@plt+0x24f24>
  428000:	bl	402b20 <free@plt>
  428004:	ldp	x20, x19, [sp, #64]
  428008:	ldp	x22, x21, [sp, #48]
  42800c:	ldp	x29, x30, [sp, #32]
  428010:	add	sp, sp, #0x50
  428014:	ret
  428018:	stp	x29, x30, [sp, #-96]!
  42801c:	stp	x22, x21, [sp, #64]
  428020:	stp	x20, x19, [sp, #80]
  428024:	mov	x21, x3
  428028:	mov	x20, x2
  42802c:	mov	x22, x1
  428030:	mov	x19, x0
  428034:	stp	x28, x27, [sp, #16]
  428038:	stp	x26, x25, [sp, #32]
  42803c:	stp	x24, x23, [sp, #48]
  428040:	mov	x29, sp
  428044:	mov	x0, x19
  428048:	bl	4385d0 <feof@plt+0x354f0>
  42804c:	ldrb	w8, [x0, #4]
  428050:	cmp	w8, #0x53
  428054:	b.eq	428044 <feof@plt+0x24f64>  // b.none
  428058:	ldr	w8, [x0]
  42805c:	mov	x23, x0
  428060:	str	w8, [x21]
  428064:	ldrb	w8, [x0, #4]
  428068:	cmp	w8, #0x3
  42806c:	b.eq	4280e8 <feof@plt+0x25008>  // b.none
  428070:	cmp	w8, #0x44
  428074:	b.eq	4280ac <feof@plt+0x24fcc>  // b.none
  428078:	cmp	w8, #0x3e
  42807c:	b.ne	428090 <feof@plt+0x24fb0>  // b.any
  428080:	ldr	x8, [x23, #16]
  428084:	ldrb	w8, [x8]
  428088:	cmp	w8, #0x52
  42808c:	b.ne	4280ac <feof@plt+0x24fcc>  // b.any
  428090:	ldr	x8, [x19, #144]
  428094:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  428098:	add	x9, x9, #0x930
  42809c:	cmp	x8, x9
  4280a0:	b.eq	428160 <feof@plt+0x25080>  // b.none
  4280a4:	ldr	x3, [x8, #8]
  4280a8:	b	428168 <feof@plt+0x25088>
  4280ac:	ldr	w8, [x23, #8]
  4280b0:	sub	w0, w8, #0x1
  4280b4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4280b8:	ldr	w9, [x23, #8]
  4280bc:	ldr	x8, [x23, #16]
  4280c0:	mov	x21, x0
  4280c4:	sub	w24, w9, #0x2
  4280c8:	add	x1, x8, #0x1
  4280cc:	mov	x2, x24
  4280d0:	bl	4029c0 <memcpy@plt>
  4280d4:	strb	wzr, [x21, x24]
  4280d8:	ldrb	w8, [x23, #4]
  4280dc:	cmp	w8, #0x44
  4280e0:	cset	w8, eq  // eq = none
  4280e4:	b	4280f8 <feof@plt+0x25018>
  4280e8:	mov	x0, x19
  4280ec:	bl	426d10 <feof@plt+0x23c30>
  4280f0:	mov	x21, x0
  4280f4:	mov	w8, #0x1                   	// #1
  4280f8:	str	w8, [x22]
  4280fc:	ldr	x8, [x19, #144]
  428100:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  428104:	add	x9, x9, #0x930
  428108:	cmp	x8, x9
  42810c:	b.eq	428180 <feof@plt+0x250a0>  // b.none
  428110:	cbz	x20, 42811c <feof@plt+0x2503c>
  428114:	ldrb	w8, [x19, #1123]
  428118:	cbz	w8, 4281a0 <feof@plt+0x250c0>
  42811c:	ldr	x8, [x19, #448]
  428120:	ldurb	w8, [x8, #-20]
  428124:	cmp	w8, #0x16
  428128:	b.eq	428180 <feof@plt+0x250a0>  // b.none
  42812c:	mov	x0, x19
  428130:	bl	4385d0 <feof@plt+0x354f0>
  428134:	ldrb	w8, [x0, #4]
  428138:	cmp	w8, #0x16
  42813c:	b.eq	428180 <feof@plt+0x250a0>  // b.none
  428140:	ldr	x8, [x19, #144]
  428144:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428148:	add	x2, x2, #0x249
  42814c:	mov	x0, x19
  428150:	ldr	x3, [x8, #8]
  428154:	mov	w1, wzr
  428158:	bl	428b00 <feof@plt+0x25a20>
  42815c:	b	428180 <feof@plt+0x250a0>
  428160:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0xc838>
  428164:	add	x3, x3, #0x212
  428168:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42816c:	add	x2, x2, #0x224
  428170:	mov	w1, #0x3                   	// #3
  428174:	mov	x0, x19
  428178:	bl	4288a0 <feof@plt+0x257c0>
  42817c:	mov	x21, xzr
  428180:	mov	x0, x21
  428184:	ldp	x20, x19, [sp, #80]
  428188:	ldp	x22, x21, [sp, #64]
  42818c:	ldp	x24, x23, [sp, #48]
  428190:	ldp	x26, x25, [sp, #32]
  428194:	ldp	x28, x27, [sp, #16]
  428198:	ldp	x29, x30, [sp], #96
  42819c:	ret
  4281a0:	mov	w0, #0x40                  	// #64
  4281a4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4281a8:	ldr	x8, [x19, #448]
  4281ac:	mov	x22, x0
  4281b0:	mov	x25, xzr
  4281b4:	ldurb	w8, [x8, #-20]
  4281b8:	cmp	w8, #0x16
  4281bc:	b.ne	4281cc <feof@plt+0x250ec>  // b.any
  4281c0:	str	xzr, [x22, x25, lsl #3]
  4281c4:	str	x22, [x20]
  4281c8:	b	428180 <feof@plt+0x250a0>
  4281cc:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0xc838>
  4281d0:	mov	w26, #0x8                   	// #8
  4281d4:	add	x23, x23, #0x249
  4281d8:	mov	x0, x19
  4281dc:	bl	42fda4 <feof@plt+0x2ccc4>
  4281e0:	ldrb	w8, [x0, #4]
  4281e4:	cmp	w8, #0x16
  4281e8:	b.eq	4281c0 <feof@plt+0x250e0>  // b.none
  4281ec:	cmp	w8, #0x4f
  4281f0:	b.eq	428210 <feof@plt+0x25130>  // b.none
  4281f4:	ldr	x8, [x19, #144]
  4281f8:	mov	w1, #0x2                   	// #2
  4281fc:	mov	x0, x19
  428200:	mov	x2, x23
  428204:	ldr	x3, [x8, #8]
  428208:	bl	4288a0 <feof@plt+0x257c0>
  42820c:	b	4281d8 <feof@plt+0x250f8>
  428210:	add	x27, x25, #0x1
  428214:	mov	x24, x0
  428218:	cmp	x27, x26
  42821c:	b.cc	428238 <feof@plt+0x25158>  // b.lo, b.ul, b.last
  428220:	lsl	x1, x26, #4
  428224:	mov	x0, x22
  428228:	lsl	x28, x26, #1
  42822c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  428230:	mov	x22, x0
  428234:	mov	x26, x28
  428238:	str	x24, [x22, x25, lsl #3]
  42823c:	mov	x25, x27
  428240:	b	4281d8 <feof@plt+0x250f8>
  428244:	stp	x29, x30, [sp, #-64]!
  428248:	stp	x22, x21, [sp, #32]
  42824c:	stp	x20, x19, [sp, #48]
  428250:	ldr	x8, [x0, #840]
  428254:	ldr	x9, [x0, #832]
  428258:	str	x23, [sp, #16]
  42825c:	ldr	x23, [x0]
  428260:	mov	x20, x3
  428264:	sub	x8, x8, x9
  428268:	mov	w22, w2
  42826c:	mov	x19, x0
  428270:	cmp	x8, #0x1f
  428274:	mov	w21, w1
  428278:	mov	x29, sp
  42827c:	b.hi	428290 <feof@plt+0x251b0>  // b.pmore
  428280:	add	x0, x19, #0x328
  428284:	mov	w1, #0x20                  	// #32
  428288:	bl	4615ac <_obstack_newchunk@@Base>
  42828c:	ldr	x9, [x19, #832]
  428290:	ldr	x8, [x19, #824]
  428294:	add	x9, x9, #0x20
  428298:	str	x9, [x19, #832]
  42829c:	cmp	x9, x8
  4282a0:	b.ne	4282b0 <feof@plt+0x251d0>  // b.any
  4282a4:	ldrb	w10, [x19, #888]
  4282a8:	orr	w10, w10, #0x2
  4282ac:	strb	w10, [x19, #888]
  4282b0:	ldr	x11, [x19, #856]
  4282b4:	ldr	x12, [x19, #816]
  4282b8:	ldr	x10, [x19, #840]
  4282bc:	add	x9, x11, x9
  4282c0:	bic	x9, x9, x11
  4282c4:	sub	x11, x9, x12
  4282c8:	sub	x12, x10, x12
  4282cc:	cmp	x11, x12
  4282d0:	str	x9, [x19, #832]
  4282d4:	b.ls	4282e0 <feof@plt+0x25200>  // b.plast
  4282d8:	mov	x9, x10
  4282dc:	str	x10, [x19, #832]
  4282e0:	ldr	w10, [x19, #48]
  4282e4:	str	x9, [x19, #824]
  4282e8:	str	w10, [x8, #8]
  4282ec:	ldr	x9, [x23, #96]
  4282f0:	str	x9, [x8]
  4282f4:	ldrb	w9, [x19, #18]
  4282f8:	str	w22, [x8, #28]
  4282fc:	cmp	w9, #0x0
  428300:	cset	w9, ne  // ne = any
  428304:	cmp	w21, #0x0
  428308:	cset	w10, eq  // eq = none
  42830c:	strb	w9, [x8, #25]
  428310:	orr	w9, w10, w9
  428314:	strb	w9, [x8, #24]
  428318:	ldrb	w9, [x19, #440]
  42831c:	cbz	w9, 428328 <feof@plt+0x25248>
  428320:	ldr	x9, [x19, #424]
  428324:	cbz	x9, 42832c <feof@plt+0x2524c>
  428328:	mov	x20, xzr
  42832c:	str	x20, [x8, #16]
  428330:	strb	w21, [x19, #18]
  428334:	str	x8, [x23, #96]
  428338:	ldp	x20, x19, [sp, #48]
  42833c:	ldp	x22, x21, [sp, #32]
  428340:	ldr	x23, [sp, #16]
  428344:	ldp	x29, x30, [sp], #64
  428348:	ret
  42834c:	sub	sp, sp, #0x60
  428350:	stp	x29, x30, [sp, #16]
  428354:	stp	x24, x23, [sp, #48]
  428358:	stp	x22, x21, [sp, #64]
  42835c:	stp	x20, x19, [sp, #80]
  428360:	ldr	x20, [x0, #40]
  428364:	mov	w10, #0x18                  	// #24
  428368:	mov	w1, #0x1                   	// #1
  42836c:	str	x25, [sp, #32]
  428370:	ldr	w8, [x20, #12]
  428374:	ldr	x9, [x20]
  428378:	add	x29, sp, #0x10
  42837c:	mov	x19, x0
  428380:	sub	w8, w8, #0x1
  428384:	smaddl	x8, w8, w10, x9
  428388:	ldr	x21, [x8, #8]
  42838c:	ldrb	w23, [x8, #5]
  428390:	bl	438d5c <feof@plt+0x35c7c>
  428394:	mov	x0, x19
  428398:	bl	4385d0 <feof@plt+0x354f0>
  42839c:	ldrb	w8, [x0, #4]
  4283a0:	mov	x1, x0
  4283a4:	cmp	w8, #0x37
  4283a8:	b.ne	4283ec <feof@plt+0x2530c>  // b.any
  4283ac:	ldr	w8, [x1, #8]
  4283b0:	cbz	w8, 428424 <feof@plt+0x25344>
  4283b4:	ldr	x9, [x1, #16]
  4283b8:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  4283bc:	mov	w22, wzr
  4283c0:	add	x10, x10, #0xe98
  4283c4:	mov	w11, #0xa                   	// #10
  4283c8:	ldrb	w12, [x9]
  4283cc:	ldrh	w13, [x10, x12, lsl #1]
  4283d0:	tbz	w13, #2, 4283ec <feof@plt+0x2530c>
  4283d4:	madd	w12, w22, w11, w12
  4283d8:	sub	x8, x8, #0x1
  4283dc:	add	x9, x9, #0x1
  4283e0:	sub	w22, w12, #0x30
  4283e4:	cbnz	x8, 4283c8 <feof@plt+0x252e8>
  4283e8:	b	428428 <feof@plt+0x25348>
  4283ec:	mov	x0, x19
  4283f0:	bl	433540 <feof@plt+0x30460>
  4283f4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4283f8:	add	x2, x2, #0x3c4
  4283fc:	mov	x3, x0
  428400:	mov	x0, x19
  428404:	ldp	x20, x19, [sp, #80]
  428408:	ldp	x22, x21, [sp, #64]
  42840c:	ldp	x24, x23, [sp, #48]
  428410:	ldr	x25, [sp, #32]
  428414:	ldp	x29, x30, [sp, #16]
  428418:	mov	w1, #0x3                   	// #3
  42841c:	add	sp, sp, #0x60
  428420:	b	4288a0 <feof@plt+0x257c0>
  428424:	mov	w22, wzr
  428428:	mov	x0, x19
  42842c:	bl	4385d0 <feof@plt+0x354f0>
  428430:	ldrb	w8, [x0, #4]
  428434:	cmp	w8, #0x16
  428438:	b.eq	428550 <feof@plt+0x25470>  // b.none
  42843c:	mov	x1, x0
  428440:	cmp	w8, #0x3e
  428444:	b.ne	428558 <feof@plt+0x25478>  // b.any
  428448:	add	x1, x1, #0x8
  42844c:	mov	x3, sp
  428450:	mov	w2, #0x1                   	// #1
  428454:	mov	w4, #0x3e                  	// #62
  428458:	mov	x0, x19
  42845c:	stp	xzr, xzr, [sp]
  428460:	bl	422630 <feof@plt+0x1f550>
  428464:	ldr	x8, [sp, #8]
  428468:	tst	w0, #0x1
  42846c:	mov	x0, x19
  428470:	csel	x21, x8, x21, ne  // ne = any
  428474:	bl	42fda4 <feof@plt+0x2ccc4>
  428478:	ldrb	w8, [x0, #4]
  42847c:	cmp	w8, #0x16
  428480:	b.eq	428598 <feof@plt+0x254b8>  // b.none
  428484:	mov	x1, x0
  428488:	cmp	w8, #0x37
  42848c:	b.ne	42856c <feof@plt+0x2548c>  // b.any
  428490:	ldr	w8, [x1, #8]
  428494:	cmp	w8, #0x1
  428498:	b.ne	42856c <feof@plt+0x2548c>  // b.any
  42849c:	ldr	x8, [x1, #16]
  4284a0:	ldrb	w8, [x8]
  4284a4:	cmp	w8, #0x34
  4284a8:	b.eq	42856c <feof@plt+0x2548c>  // b.none
  4284ac:	sub	w9, w8, #0x31
  4284b0:	cmp	w9, #0x4
  4284b4:	b.cs	42856c <feof@plt+0x2548c>  // b.hs, b.nlast
  4284b8:	cmp	w8, #0x32
  4284bc:	b.eq	4286f8 <feof@plt+0x25618>  // b.none
  4284c0:	cmp	w8, #0x31
  4284c4:	b.ne	428748 <feof@plt+0x25668>  // b.any
  4284c8:	mov	x0, x19
  4284cc:	mov	x1, x21
  4284d0:	bl	42de20 <feof@plt+0x2ad40>
  4284d4:	mov	x0, x19
  4284d8:	bl	42fda4 <feof@plt+0x2ccc4>
  4284dc:	ldrb	w8, [x0, #4]
  4284e0:	cmp	w8, #0x16
  4284e4:	b.eq	428544 <feof@plt+0x25464>  // b.none
  4284e8:	mov	x1, x0
  4284ec:	cmp	w8, #0x37
  4284f0:	b.ne	428524 <feof@plt+0x25444>  // b.any
  4284f4:	ldr	w8, [x1, #8]
  4284f8:	cmp	w8, #0x1
  4284fc:	b.ne	428524 <feof@plt+0x25444>  // b.any
  428500:	ldr	x8, [x1, #16]
  428504:	ldrb	w8, [x8]
  428508:	sub	w9, w8, #0x32
  42850c:	cmp	w9, #0x2
  428510:	b.hi	428524 <feof@plt+0x25444>  // b.pmore
  428514:	cmp	w8, #0x34
  428518:	b.eq	428524 <feof@plt+0x25444>  // b.none
  42851c:	cmp	w8, #0x32
  428520:	b.ne	4287e4 <feof@plt+0x25704>  // b.any
  428524:	mov	x0, x19
  428528:	bl	433540 <feof@plt+0x30460>
  42852c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428530:	mov	x3, x0
  428534:	add	x2, x2, #0x421
  428538:	mov	w1, #0x3                   	// #3
  42853c:	mov	x0, x19
  428540:	bl	4288a0 <feof@plt+0x257c0>
  428544:	mov	w24, wzr
  428548:	mov	w23, wzr
  42854c:	b	4285a0 <feof@plt+0x254c0>
  428550:	mov	w24, #0x3                   	// #3
  428554:	b	4285f4 <feof@plt+0x25514>
  428558:	mov	x0, x19
  42855c:	bl	433540 <feof@plt+0x30460>
  428560:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428564:	add	x2, x2, #0x337
  428568:	b	4283fc <feof@plt+0x2531c>
  42856c:	mov	x0, x19
  428570:	bl	433540 <feof@plt+0x30460>
  428574:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428578:	mov	x3, x0
  42857c:	add	x2, x2, #0x421
  428580:	mov	w1, #0x3                   	// #3
  428584:	mov	x0, x19
  428588:	mov	w24, #0x3                   	// #3
  42858c:	bl	4288a0 <feof@plt+0x257c0>
  428590:	mov	w23, wzr
  428594:	b	4285a0 <feof@plt+0x254c0>
  428598:	mov	w23, wzr
  42859c:	mov	w24, #0x3                   	// #3
  4285a0:	ldr	x8, [x19]
  4285a4:	strb	w23, [x8, #106]
  4285a8:	ldr	x8, [x19, #448]
  4285ac:	ldurb	w8, [x8, #-20]
  4285b0:	cmp	w8, #0x16
  4285b4:	b.eq	4285f4 <feof@plt+0x25514>  // b.none
  4285b8:	mov	x0, x19
  4285bc:	bl	42fda4 <feof@plt+0x2ccc4>
  4285c0:	ldrb	w8, [x0, #4]
  4285c4:	cmp	w8, #0x16
  4285c8:	b.eq	4285f4 <feof@plt+0x25514>  // b.none
  4285cc:	ldr	x8, [x19, #144]
  4285d0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4285d4:	add	x2, x2, #0x249
  4285d8:	mov	x0, x19
  4285dc:	ldr	x3, [x8, #8]
  4285e0:	mov	w1, wzr
  4285e4:	bl	428b00 <feof@plt+0x25a20>
  4285e8:	b	4285f4 <feof@plt+0x25514>
  4285ec:	mov	x0, x19
  4285f0:	bl	4384c8 <feof@plt+0x353e8>
  4285f4:	ldr	x8, [x19, #136]
  4285f8:	ldr	x8, [x8, #8]
  4285fc:	cbnz	x8, 4285ec <feof@plt+0x2550c>
  428600:	ldr	x8, [x19, #448]
  428604:	ldurb	w8, [x8, #-20]
  428608:	cmp	w8, #0x16
  42860c:	b.eq	428624 <feof@plt+0x25544>  // b.none
  428610:	mov	x0, x19
  428614:	bl	42fda4 <feof@plt+0x2ccc4>
  428618:	ldrb	w8, [x0, #4]
  42861c:	cmp	w8, #0x16
  428620:	b.ne	428610 <feof@plt+0x25530>  // b.any
  428624:	cmp	w24, #0x1
  428628:	b.ne	428684 <feof@plt+0x255a4>  // b.any
  42862c:	ldr	w8, [x20, #12]
  428630:	ldr	x9, [x20]
  428634:	mov	w10, #0x18                  	// #24
  428638:	mov	x0, x20
  42863c:	sub	w8, w8, #0x1
  428640:	smaddl	x25, w8, w10, x9
  428644:	mov	x1, x25
  428648:	bl	4349ac <feof@plt+0x318cc>
  42864c:	ldr	w8, [x25, #20]
  428650:	cbz	w8, 428668 <feof@plt+0x25588>
  428654:	cbz	x0, 428684 <feof@plt+0x255a4>
  428658:	ldr	x0, [x0, #8]
  42865c:	mov	x1, x21
  428660:	bl	45ffd0 <feof@plt+0x5cef0>
  428664:	cbz	w0, 428684 <feof@plt+0x255a4>
  428668:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42866c:	add	x2, x2, #0x3eb
  428670:	mov	x0, x19
  428674:	mov	w1, wzr
  428678:	mov	x3, x21
  42867c:	bl	4289d0 <feof@plt+0x258f0>
  428680:	b	4286dc <feof@plt+0x255fc>
  428684:	ldr	x0, [x19, #40]
  428688:	mov	w1, w24
  42868c:	mov	w2, w23
  428690:	mov	x3, x21
  428694:	ldr	w8, [x0, #56]
  428698:	mov	w4, w22
  42869c:	sub	w8, w8, #0x1
  4286a0:	str	w8, [x0, #56]
  4286a4:	bl	434b8c <feof@plt+0x31aac>
  4286a8:	mov	x21, x0
  4286ac:	cbz	x0, 4286c0 <feof@plt+0x255e0>
  4286b0:	ldr	x0, [x19, #40]
  4286b4:	ldr	w1, [x21, #16]
  4286b8:	mov	w2, #0x7f                  	// #127
  4286bc:	bl	435084 <feof@plt+0x31fa4>
  4286c0:	ldr	x8, [x19, #912]
  4286c4:	cbz	x8, 4286d4 <feof@plt+0x255f4>
  4286c8:	mov	x0, x19
  4286cc:	mov	x1, x21
  4286d0:	blr	x8
  4286d4:	mov	w8, #0x1                   	// #1
  4286d8:	strb	w8, [x20, #116]
  4286dc:	ldp	x20, x19, [sp, #80]
  4286e0:	ldp	x22, x21, [sp, #64]
  4286e4:	ldp	x24, x23, [sp, #48]
  4286e8:	ldr	x25, [sp, #32]
  4286ec:	ldp	x29, x30, [sp, #16]
  4286f0:	add	sp, sp, #0x60
  4286f4:	ret
  4286f8:	mov	x0, x19
  4286fc:	bl	42fda4 <feof@plt+0x2ccc4>
  428700:	ldrb	w8, [x0, #4]
  428704:	cmp	w8, #0x16
  428708:	b.eq	4287d8 <feof@plt+0x256f8>  // b.none
  42870c:	mov	x1, x0
  428710:	cmp	w8, #0x37
  428714:	b.ne	4287b8 <feof@plt+0x256d8>  // b.any
  428718:	ldr	w8, [x1, #8]
  42871c:	cmp	w8, #0x1
  428720:	b.ne	4287b8 <feof@plt+0x256d8>  // b.any
  428724:	ldr	x8, [x1, #16]
  428728:	ldrb	w8, [x8]
  42872c:	cmp	w8, #0x34
  428730:	b.eq	4287b8 <feof@plt+0x256d8>  // b.none
  428734:	sub	w8, w8, #0x33
  428738:	cmp	w8, #0x2
  42873c:	b.cs	4287b8 <feof@plt+0x256d8>  // b.hs, b.nlast
  428740:	mov	w24, #0x1                   	// #1
  428744:	b	42874c <feof@plt+0x2566c>
  428748:	mov	w24, #0x3                   	// #3
  42874c:	mov	x0, x19
  428750:	bl	42fda4 <feof@plt+0x2ccc4>
  428754:	ldrb	w8, [x0, #4]
  428758:	cmp	w8, #0x16
  42875c:	b.eq	4287b0 <feof@plt+0x256d0>  // b.none
  428760:	mov	x1, x0
  428764:	cmp	w8, #0x37
  428768:	b.ne	428790 <feof@plt+0x256b0>  // b.any
  42876c:	ldr	w8, [x1, #8]
  428770:	cmp	w8, #0x1
  428774:	b.ne	428790 <feof@plt+0x256b0>  // b.any
  428778:	ldr	x8, [x1, #16]
  42877c:	ldrb	w8, [x8]
  428780:	cmp	w8, #0x34
  428784:	b.ne	428790 <feof@plt+0x256b0>  // b.any
  428788:	mov	w23, #0x2                   	// #2
  42878c:	b	4285a0 <feof@plt+0x254c0>
  428790:	mov	x0, x19
  428794:	bl	433540 <feof@plt+0x30460>
  428798:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42879c:	mov	x3, x0
  4287a0:	add	x2, x2, #0x421
  4287a4:	mov	w1, #0x3                   	// #3
  4287a8:	mov	x0, x19
  4287ac:	bl	4288a0 <feof@plt+0x257c0>
  4287b0:	mov	w23, #0x1                   	// #1
  4287b4:	b	4285a0 <feof@plt+0x254c0>
  4287b8:	mov	x0, x19
  4287bc:	bl	433540 <feof@plt+0x30460>
  4287c0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4287c4:	mov	x3, x0
  4287c8:	add	x2, x2, #0x421
  4287cc:	mov	w1, #0x3                   	// #3
  4287d0:	mov	x0, x19
  4287d4:	bl	4288a0 <feof@plt+0x257c0>
  4287d8:	mov	w23, wzr
  4287dc:	mov	w24, #0x1                   	// #1
  4287e0:	b	4285a0 <feof@plt+0x254c0>
  4287e4:	mov	w24, wzr
  4287e8:	b	42874c <feof@plt+0x2566c>
  4287ec:	sub	sp, sp, #0x30
  4287f0:	stp	x29, x30, [sp, #16]
  4287f4:	stp	x20, x19, [sp, #32]
  4287f8:	add	x29, sp, #0x10
  4287fc:	mov	w20, w1
  428800:	mov	x19, x0
  428804:	bl	42fda4 <feof@plt+0x2ccc4>
  428808:	ldrb	w8, [x0, #4]
  42880c:	cmp	w8, #0x3e
  428810:	b.ne	428864 <feof@plt+0x25784>  // b.any
  428814:	add	x1, x0, #0x8
  428818:	mov	x3, sp
  42881c:	mov	w2, #0x1                   	// #1
  428820:	mov	w4, #0x3e                  	// #62
  428824:	mov	x0, x19
  428828:	bl	422630 <feof@plt+0x1f550>
  42882c:	tbz	w0, #0, 428864 <feof@plt+0x25784>
  428830:	ldr	w8, [sp]
  428834:	cbz	w8, 428864 <feof@plt+0x25784>
  428838:	ldr	x3, [sp, #8]
  42883c:	tst	w20, #0x1
  428840:	mov	w8, #0x3                   	// #3
  428844:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428848:	csel	w1, w8, wzr, ne  // ne = any
  42884c:	add	x2, x2, #0xaac
  428850:	mov	x0, x19
  428854:	bl	4288a0 <feof@plt+0x257c0>
  428858:	ldr	x0, [sp, #8]
  42885c:	bl	402b20 <free@plt>
  428860:	b	428890 <feof@plt+0x257b0>
  428864:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x2838>
  428868:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  42886c:	add	x8, x8, #0x668
  428870:	add	x9, x9, #0x5e3
  428874:	tst	w20, #0x1
  428878:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42887c:	csel	x3, x9, x8, ne  // ne = any
  428880:	add	x2, x2, #0x751
  428884:	mov	w1, #0x3                   	// #3
  428888:	mov	x0, x19
  42888c:	bl	4288a0 <feof@plt+0x257c0>
  428890:	ldp	x20, x19, [sp, #32]
  428894:	ldp	x29, x30, [sp, #16]
  428898:	add	sp, sp, #0x30
  42889c:	ret
  4288a0:	sub	sp, sp, #0x1b0
  4288a4:	stp	x29, x30, [sp, #368]
  4288a8:	add	x29, sp, #0x170
  4288ac:	mov	x8, #0xffffffffffffffd8    	// #-40
  4288b0:	mov	x9, sp
  4288b4:	add	x10, sp, #0x80
  4288b8:	movk	x8, #0xff80, lsl #32
  4288bc:	add	x11, x29, #0x40
  4288c0:	add	x9, x9, #0x80
  4288c4:	add	x10, x10, #0x28
  4288c8:	stp	x22, x21, [sp, #400]
  4288cc:	stp	x20, x19, [sp, #416]
  4288d0:	stp	x3, x4, [sp, #128]
  4288d4:	stp	x5, x6, [sp, #144]
  4288d8:	stp	q1, q2, [sp, #16]
  4288dc:	stp	q3, q4, [sp, #48]
  4288e0:	str	q0, [sp]
  4288e4:	stp	q5, q6, [sp, #80]
  4288e8:	str	q7, [sp, #112]
  4288ec:	stp	x9, x8, [sp, #184]
  4288f0:	str	x10, [sp, #176]
  4288f4:	stp	x7, x11, [sp, #160]
  4288f8:	ldrb	w8, [x0, #1160]
  4288fc:	mov	x20, x2
  428900:	mov	x19, x0
  428904:	mov	w21, w1
  428908:	str	x28, [sp, #384]
  42890c:	cbz	w8, 428920 <feof@plt+0x25840>
  428910:	ldrb	w8, [x19, #16]
  428914:	cbz	w8, 42893c <feof@plt+0x2585c>
  428918:	ldr	w2, [x19, #48]
  42891c:	b	42894c <feof@plt+0x2586c>
  428920:	ldr	x9, [x19, #488]
  428924:	ldr	x8, [x19, #448]
  428928:	ldr	x9, [x9, #16]
  42892c:	cmp	x8, x9
  428930:	b.eq	428948 <feof@plt+0x25868>  // b.none
  428934:	ldur	w2, [x8, #-24]
  428938:	b	42894c <feof@plt+0x2586c>
  42893c:	ldr	x8, [x19, #40]
  428940:	ldr	w2, [x8, #60]
  428944:	b	42894c <feof@plt+0x2586c>
  428948:	mov	w2, wzr
  42894c:	ldr	x1, [x19, #40]
  428950:	sub	x0, x29, #0xa8
  428954:	mov	x3, xzr
  428958:	bl	436a50 <feof@plt+0x33970>
  42895c:	ldr	x22, [x19, #1000]
  428960:	cbz	x22, 4289b8 <feof@plt+0x258d8>
  428964:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428968:	add	x0, x0, #0xaaf
  42896c:	mov	x1, x20
  428970:	bl	402cb0 <dgettext@plt>
  428974:	mov	x4, x0
  428978:	sub	x3, x29, #0xa8
  42897c:	add	x5, sp, #0xa8
  428980:	mov	x0, x19
  428984:	mov	w1, w21
  428988:	mov	w2, wzr
  42898c:	blr	x22
  428990:	mov	w19, w0
  428994:	sub	x0, x29, #0xa8
  428998:	bl	436b30 <feof@plt+0x33a50>
  42899c:	and	w0, w19, #0x1
  4289a0:	ldp	x20, x19, [sp, #416]
  4289a4:	ldp	x22, x21, [sp, #400]
  4289a8:	ldr	x28, [sp, #384]
  4289ac:	ldp	x29, x30, [sp, #368]
  4289b0:	add	sp, sp, #0x1b0
  4289b4:	ret
  4289b8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  4289bc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4289c0:	add	x0, x0, #0xab6
  4289c4:	add	x2, x2, #0xae5
  4289c8:	mov	w1, #0x29                  	// #41
  4289cc:	bl	40f560 <feof@plt+0xc480>
  4289d0:	sub	sp, sp, #0x1b0
  4289d4:	stp	x29, x30, [sp, #368]
  4289d8:	add	x29, sp, #0x170
  4289dc:	mov	x8, #0xffffffffffffffd8    	// #-40
  4289e0:	mov	x9, sp
  4289e4:	add	x10, sp, #0x80
  4289e8:	movk	x8, #0xff80, lsl #32
  4289ec:	add	x11, x29, #0x40
  4289f0:	add	x9, x9, #0x80
  4289f4:	add	x10, x10, #0x28
  4289f8:	stp	x22, x21, [sp, #400]
  4289fc:	stp	x20, x19, [sp, #416]
  428a00:	stp	x3, x4, [sp, #128]
  428a04:	stp	x5, x6, [sp, #144]
  428a08:	stp	q1, q2, [sp, #16]
  428a0c:	stp	q3, q4, [sp, #48]
  428a10:	str	q0, [sp]
  428a14:	stp	q5, q6, [sp, #80]
  428a18:	str	q7, [sp, #112]
  428a1c:	stp	x9, x8, [sp, #184]
  428a20:	str	x10, [sp, #176]
  428a24:	stp	x7, x11, [sp, #160]
  428a28:	ldrb	w8, [x0, #1160]
  428a2c:	mov	x20, x2
  428a30:	mov	x19, x0
  428a34:	mov	w21, w1
  428a38:	str	x28, [sp, #384]
  428a3c:	cbz	w8, 428a50 <feof@plt+0x25970>
  428a40:	ldrb	w8, [x19, #16]
  428a44:	cbz	w8, 428a6c <feof@plt+0x2598c>
  428a48:	ldr	w2, [x19, #48]
  428a4c:	b	428a7c <feof@plt+0x2599c>
  428a50:	ldr	x9, [x19, #488]
  428a54:	ldr	x8, [x19, #448]
  428a58:	ldr	x9, [x9, #16]
  428a5c:	cmp	x8, x9
  428a60:	b.eq	428a78 <feof@plt+0x25998>  // b.none
  428a64:	ldur	w2, [x8, #-24]
  428a68:	b	428a7c <feof@plt+0x2599c>
  428a6c:	ldr	x8, [x19, #40]
  428a70:	ldr	w2, [x8, #60]
  428a74:	b	428a7c <feof@plt+0x2599c>
  428a78:	mov	w2, wzr
  428a7c:	ldr	x1, [x19, #40]
  428a80:	sub	x0, x29, #0xa8
  428a84:	mov	x3, xzr
  428a88:	bl	436a50 <feof@plt+0x33970>
  428a8c:	ldr	x22, [x19, #1000]
  428a90:	cbz	x22, 428ae8 <feof@plt+0x25a08>
  428a94:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428a98:	add	x0, x0, #0xaaf
  428a9c:	mov	x1, x20
  428aa0:	bl	402cb0 <dgettext@plt>
  428aa4:	mov	x4, x0
  428aa8:	sub	x3, x29, #0xa8
  428aac:	add	x5, sp, #0xa8
  428ab0:	mov	x0, x19
  428ab4:	mov	w1, wzr
  428ab8:	mov	w2, w21
  428abc:	blr	x22
  428ac0:	mov	w19, w0
  428ac4:	sub	x0, x29, #0xa8
  428ac8:	bl	436b30 <feof@plt+0x33a50>
  428acc:	and	w0, w19, #0x1
  428ad0:	ldp	x20, x19, [sp, #416]
  428ad4:	ldp	x22, x21, [sp, #400]
  428ad8:	ldr	x28, [sp, #384]
  428adc:	ldp	x29, x30, [sp, #368]
  428ae0:	add	sp, sp, #0x1b0
  428ae4:	ret
  428ae8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428aec:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428af0:	add	x0, x0, #0xab6
  428af4:	add	x2, x2, #0xae5
  428af8:	mov	w1, #0x29                  	// #41
  428afc:	bl	40f560 <feof@plt+0xc480>
  428b00:	sub	sp, sp, #0x1b0
  428b04:	stp	x29, x30, [sp, #368]
  428b08:	add	x29, sp, #0x170
  428b0c:	mov	x8, #0xffffffffffffffd8    	// #-40
  428b10:	mov	x9, sp
  428b14:	add	x10, sp, #0x80
  428b18:	movk	x8, #0xff80, lsl #32
  428b1c:	add	x11, x29, #0x40
  428b20:	add	x9, x9, #0x80
  428b24:	add	x10, x10, #0x28
  428b28:	stp	x22, x21, [sp, #400]
  428b2c:	stp	x20, x19, [sp, #416]
  428b30:	stp	x3, x4, [sp, #128]
  428b34:	stp	x5, x6, [sp, #144]
  428b38:	stp	q1, q2, [sp, #16]
  428b3c:	stp	q3, q4, [sp, #48]
  428b40:	str	q0, [sp]
  428b44:	stp	q5, q6, [sp, #80]
  428b48:	str	q7, [sp, #112]
  428b4c:	stp	x9, x8, [sp, #184]
  428b50:	str	x10, [sp, #176]
  428b54:	stp	x7, x11, [sp, #160]
  428b58:	ldrb	w8, [x0, #1160]
  428b5c:	mov	x20, x2
  428b60:	mov	x19, x0
  428b64:	mov	w21, w1
  428b68:	str	x28, [sp, #384]
  428b6c:	cbz	w8, 428b80 <feof@plt+0x25aa0>
  428b70:	ldrb	w8, [x19, #16]
  428b74:	cbz	w8, 428b9c <feof@plt+0x25abc>
  428b78:	ldr	w2, [x19, #48]
  428b7c:	b	428bac <feof@plt+0x25acc>
  428b80:	ldr	x9, [x19, #488]
  428b84:	ldr	x8, [x19, #448]
  428b88:	ldr	x9, [x9, #16]
  428b8c:	cmp	x8, x9
  428b90:	b.eq	428ba8 <feof@plt+0x25ac8>  // b.none
  428b94:	ldur	w2, [x8, #-24]
  428b98:	b	428bac <feof@plt+0x25acc>
  428b9c:	ldr	x8, [x19, #40]
  428ba0:	ldr	w2, [x8, #60]
  428ba4:	b	428bac <feof@plt+0x25acc>
  428ba8:	mov	w2, wzr
  428bac:	ldr	x1, [x19, #40]
  428bb0:	sub	x0, x29, #0xa8
  428bb4:	mov	x3, xzr
  428bb8:	bl	436a50 <feof@plt+0x33970>
  428bbc:	ldr	x22, [x19, #1000]
  428bc0:	cbz	x22, 428c18 <feof@plt+0x25b38>
  428bc4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428bc8:	add	x0, x0, #0xaaf
  428bcc:	mov	x1, x20
  428bd0:	bl	402cb0 <dgettext@plt>
  428bd4:	mov	x4, x0
  428bd8:	sub	x3, x29, #0xa8
  428bdc:	add	x5, sp, #0xa8
  428be0:	mov	w1, #0x2                   	// #2
  428be4:	mov	x0, x19
  428be8:	mov	w2, w21
  428bec:	blr	x22
  428bf0:	mov	w19, w0
  428bf4:	sub	x0, x29, #0xa8
  428bf8:	bl	436b30 <feof@plt+0x33a50>
  428bfc:	and	w0, w19, #0x1
  428c00:	ldp	x20, x19, [sp, #416]
  428c04:	ldp	x22, x21, [sp, #400]
  428c08:	ldr	x28, [sp, #384]
  428c0c:	ldp	x29, x30, [sp, #368]
  428c10:	add	sp, sp, #0x1b0
  428c14:	ret
  428c18:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428c1c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428c20:	add	x0, x0, #0xab6
  428c24:	add	x2, x2, #0xae5
  428c28:	mov	w1, #0x29                  	// #41
  428c2c:	bl	40f560 <feof@plt+0xc480>
  428c30:	sub	sp, sp, #0x1b0
  428c34:	stp	x29, x30, [sp, #368]
  428c38:	add	x29, sp, #0x170
  428c3c:	mov	x8, #0xffffffffffffffd8    	// #-40
  428c40:	mov	x9, sp
  428c44:	add	x10, sp, #0x80
  428c48:	movk	x8, #0xff80, lsl #32
  428c4c:	add	x11, x29, #0x40
  428c50:	add	x9, x9, #0x80
  428c54:	add	x10, x10, #0x28
  428c58:	stp	x22, x21, [sp, #400]
  428c5c:	stp	x20, x19, [sp, #416]
  428c60:	stp	x3, x4, [sp, #128]
  428c64:	stp	x5, x6, [sp, #144]
  428c68:	stp	q1, q2, [sp, #16]
  428c6c:	stp	q3, q4, [sp, #48]
  428c70:	str	q0, [sp]
  428c74:	stp	q5, q6, [sp, #80]
  428c78:	str	q7, [sp, #112]
  428c7c:	stp	x9, x8, [sp, #184]
  428c80:	str	x10, [sp, #176]
  428c84:	stp	x7, x11, [sp, #160]
  428c88:	ldrb	w8, [x0, #1160]
  428c8c:	mov	x20, x2
  428c90:	mov	x19, x0
  428c94:	mov	w21, w1
  428c98:	str	x28, [sp, #384]
  428c9c:	cbz	w8, 428cb0 <feof@plt+0x25bd0>
  428ca0:	ldrb	w8, [x19, #16]
  428ca4:	cbz	w8, 428ccc <feof@plt+0x25bec>
  428ca8:	ldr	w2, [x19, #48]
  428cac:	b	428cdc <feof@plt+0x25bfc>
  428cb0:	ldr	x9, [x19, #488]
  428cb4:	ldr	x8, [x19, #448]
  428cb8:	ldr	x9, [x9, #16]
  428cbc:	cmp	x8, x9
  428cc0:	b.eq	428cd8 <feof@plt+0x25bf8>  // b.none
  428cc4:	ldur	w2, [x8, #-24]
  428cc8:	b	428cdc <feof@plt+0x25bfc>
  428ccc:	ldr	x8, [x19, #40]
  428cd0:	ldr	w2, [x8, #60]
  428cd4:	b	428cdc <feof@plt+0x25bfc>
  428cd8:	mov	w2, wzr
  428cdc:	ldr	x1, [x19, #40]
  428ce0:	sub	x0, x29, #0xa8
  428ce4:	mov	x3, xzr
  428ce8:	bl	436a50 <feof@plt+0x33970>
  428cec:	ldr	x22, [x19, #1000]
  428cf0:	cbz	x22, 428d48 <feof@plt+0x25c68>
  428cf4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428cf8:	add	x0, x0, #0xaaf
  428cfc:	mov	x1, x20
  428d00:	bl	402cb0 <dgettext@plt>
  428d04:	mov	x4, x0
  428d08:	sub	x3, x29, #0xa8
  428d0c:	add	x5, sp, #0xa8
  428d10:	mov	w1, #0x1                   	// #1
  428d14:	mov	x0, x19
  428d18:	mov	w2, w21
  428d1c:	blr	x22
  428d20:	mov	w19, w0
  428d24:	sub	x0, x29, #0xa8
  428d28:	bl	436b30 <feof@plt+0x33a50>
  428d2c:	and	w0, w19, #0x1
  428d30:	ldp	x20, x19, [sp, #416]
  428d34:	ldp	x22, x21, [sp, #400]
  428d38:	ldr	x28, [sp, #384]
  428d3c:	ldp	x29, x30, [sp, #368]
  428d40:	add	sp, sp, #0x1b0
  428d44:	ret
  428d48:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428d4c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428d50:	add	x0, x0, #0xab6
  428d54:	add	x2, x2, #0xae5
  428d58:	mov	w1, #0x29                  	// #41
  428d5c:	bl	40f560 <feof@plt+0xc480>
  428d60:	sub	sp, sp, #0x1a0
  428d64:	stp	x29, x30, [sp, #352]
  428d68:	add	x29, sp, #0x160
  428d6c:	mov	x8, #0xffffffffffffffe8    	// #-24
  428d70:	mov	x9, sp
  428d74:	add	x10, sp, #0x80
  428d78:	movk	x8, #0xff80, lsl #32
  428d7c:	add	x11, x29, #0x40
  428d80:	add	x9, x9, #0x80
  428d84:	add	x10, x10, #0x18
  428d88:	stp	x22, x21, [sp, #384]
  428d8c:	stp	x20, x19, [sp, #400]
  428d90:	stp	x5, x6, [sp, #128]
  428d94:	stp	q0, q1, [sp]
  428d98:	stp	q2, q3, [sp, #32]
  428d9c:	stp	q4, q5, [sp, #64]
  428da0:	stp	q6, q7, [sp, #96]
  428da4:	stp	x9, x8, [sp, #168]
  428da8:	str	x10, [sp, #160]
  428dac:	stp	x7, x11, [sp, #144]
  428db0:	ldr	x8, [x0, #1000]
  428db4:	str	x28, [sp, #368]
  428db8:	cbz	x8, 428e44 <feof@plt+0x25d64>
  428dbc:	mov	w22, w1
  428dc0:	ldr	x1, [x0, #40]
  428dc4:	mov	w21, w3
  428dc8:	mov	x19, x0
  428dcc:	sub	x0, x29, #0xa8
  428dd0:	mov	x3, xzr
  428dd4:	mov	x20, x4
  428dd8:	bl	436a50 <feof@plt+0x33970>
  428ddc:	cbz	w21, 428dec <feof@plt+0x25d0c>
  428de0:	sub	x0, x29, #0xa8
  428de4:	mov	w1, w21
  428de8:	bl	436cdc <feof@plt+0x33bfc>
  428dec:	ldr	x21, [x19, #1000]
  428df0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428df4:	add	x0, x0, #0xaaf
  428df8:	mov	x1, x20
  428dfc:	bl	402cb0 <dgettext@plt>
  428e00:	mov	x4, x0
  428e04:	sub	x3, x29, #0xa8
  428e08:	add	x5, sp, #0x98
  428e0c:	mov	x0, x19
  428e10:	mov	w1, w22
  428e14:	mov	w2, wzr
  428e18:	blr	x21
  428e1c:	mov	w19, w0
  428e20:	sub	x0, x29, #0xa8
  428e24:	bl	436b30 <feof@plt+0x33a50>
  428e28:	and	w0, w19, #0x1
  428e2c:	ldp	x20, x19, [sp, #400]
  428e30:	ldp	x22, x21, [sp, #384]
  428e34:	ldr	x28, [sp, #368]
  428e38:	ldp	x29, x30, [sp, #352]
  428e3c:	add	sp, sp, #0x1a0
  428e40:	ret
  428e44:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428e48:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428e4c:	add	x0, x0, #0xab6
  428e50:	add	x2, x2, #0xacc
  428e54:	mov	w1, #0x9f                  	// #159
  428e58:	bl	40f560 <feof@plt+0xc480>
  428e5c:	sub	sp, sp, #0x1a0
  428e60:	stp	x29, x30, [sp, #352]
  428e64:	add	x29, sp, #0x160
  428e68:	mov	x8, #0xffffffffffffffe8    	// #-24
  428e6c:	mov	x9, sp
  428e70:	add	x10, sp, #0x80
  428e74:	movk	x8, #0xff80, lsl #32
  428e78:	add	x11, x29, #0x40
  428e7c:	add	x9, x9, #0x80
  428e80:	add	x10, x10, #0x18
  428e84:	stp	x22, x21, [sp, #384]
  428e88:	stp	x20, x19, [sp, #400]
  428e8c:	stp	x5, x6, [sp, #128]
  428e90:	stp	q0, q1, [sp]
  428e94:	stp	q2, q3, [sp, #32]
  428e98:	stp	q4, q5, [sp, #64]
  428e9c:	stp	q6, q7, [sp, #96]
  428ea0:	stp	x9, x8, [sp, #168]
  428ea4:	str	x10, [sp, #160]
  428ea8:	stp	x7, x11, [sp, #144]
  428eac:	ldr	x8, [x0, #1000]
  428eb0:	str	x28, [sp, #368]
  428eb4:	cbz	x8, 428f40 <feof@plt+0x25e60>
  428eb8:	mov	w22, w1
  428ebc:	ldr	x1, [x0, #40]
  428ec0:	mov	w21, w3
  428ec4:	mov	x19, x0
  428ec8:	sub	x0, x29, #0xa8
  428ecc:	mov	x3, xzr
  428ed0:	mov	x20, x4
  428ed4:	bl	436a50 <feof@plt+0x33970>
  428ed8:	cbz	w21, 428ee8 <feof@plt+0x25e08>
  428edc:	sub	x0, x29, #0xa8
  428ee0:	mov	w1, w21
  428ee4:	bl	436cdc <feof@plt+0x33bfc>
  428ee8:	ldr	x21, [x19, #1000]
  428eec:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428ef0:	add	x0, x0, #0xaaf
  428ef4:	mov	x1, x20
  428ef8:	bl	402cb0 <dgettext@plt>
  428efc:	mov	x4, x0
  428f00:	sub	x3, x29, #0xa8
  428f04:	add	x5, sp, #0x98
  428f08:	mov	x0, x19
  428f0c:	mov	w1, wzr
  428f10:	mov	w2, w22
  428f14:	blr	x21
  428f18:	mov	w19, w0
  428f1c:	sub	x0, x29, #0xa8
  428f20:	bl	436b30 <feof@plt+0x33a50>
  428f24:	and	w0, w19, #0x1
  428f28:	ldp	x20, x19, [sp, #400]
  428f2c:	ldp	x22, x21, [sp, #384]
  428f30:	ldr	x28, [sp, #368]
  428f34:	ldp	x29, x30, [sp, #352]
  428f38:	add	sp, sp, #0x1a0
  428f3c:	ret
  428f40:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428f44:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  428f48:	add	x0, x0, #0xab6
  428f4c:	add	x2, x2, #0xacc
  428f50:	mov	w1, #0x9f                  	// #159
  428f54:	bl	40f560 <feof@plt+0xc480>
  428f58:	sub	sp, sp, #0x1a0
  428f5c:	stp	x29, x30, [sp, #352]
  428f60:	add	x29, sp, #0x160
  428f64:	mov	x8, #0xffffffffffffffe8    	// #-24
  428f68:	mov	x9, sp
  428f6c:	add	x10, sp, #0x80
  428f70:	movk	x8, #0xff80, lsl #32
  428f74:	add	x11, x29, #0x40
  428f78:	add	x9, x9, #0x80
  428f7c:	add	x10, x10, #0x18
  428f80:	stp	x22, x21, [sp, #384]
  428f84:	stp	x20, x19, [sp, #400]
  428f88:	stp	x5, x6, [sp, #128]
  428f8c:	stp	q0, q1, [sp]
  428f90:	stp	q2, q3, [sp, #32]
  428f94:	stp	q4, q5, [sp, #64]
  428f98:	stp	q6, q7, [sp, #96]
  428f9c:	stp	x9, x8, [sp, #168]
  428fa0:	str	x10, [sp, #160]
  428fa4:	stp	x7, x11, [sp, #144]
  428fa8:	ldr	x8, [x0, #1000]
  428fac:	str	x28, [sp, #368]
  428fb0:	cbz	x8, 42903c <feof@plt+0x25f5c>
  428fb4:	mov	w22, w1
  428fb8:	ldr	x1, [x0, #40]
  428fbc:	mov	w21, w3
  428fc0:	mov	x19, x0
  428fc4:	sub	x0, x29, #0xa8
  428fc8:	mov	x3, xzr
  428fcc:	mov	x20, x4
  428fd0:	bl	436a50 <feof@plt+0x33970>
  428fd4:	cbz	w21, 428fe4 <feof@plt+0x25f04>
  428fd8:	sub	x0, x29, #0xa8
  428fdc:	mov	w1, w21
  428fe0:	bl	436cdc <feof@plt+0x33bfc>
  428fe4:	ldr	x21, [x19, #1000]
  428fe8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  428fec:	add	x0, x0, #0xaaf
  428ff0:	mov	x1, x20
  428ff4:	bl	402cb0 <dgettext@plt>
  428ff8:	mov	x4, x0
  428ffc:	sub	x3, x29, #0xa8
  429000:	add	x5, sp, #0x98
  429004:	mov	w1, #0x2                   	// #2
  429008:	mov	x0, x19
  42900c:	mov	w2, w22
  429010:	blr	x21
  429014:	mov	w19, w0
  429018:	sub	x0, x29, #0xa8
  42901c:	bl	436b30 <feof@plt+0x33a50>
  429020:	and	w0, w19, #0x1
  429024:	ldp	x20, x19, [sp, #400]
  429028:	ldp	x22, x21, [sp, #384]
  42902c:	ldr	x28, [sp, #368]
  429030:	ldp	x29, x30, [sp, #352]
  429034:	add	sp, sp, #0x1a0
  429038:	ret
  42903c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  429040:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  429044:	add	x0, x0, #0xab6
  429048:	add	x2, x2, #0xacc
  42904c:	mov	w1, #0x9f                  	// #159
  429050:	bl	40f560 <feof@plt+0xc480>
  429054:	sub	sp, sp, #0x1a0
  429058:	stp	x29, x30, [sp, #352]
  42905c:	add	x29, sp, #0x160
  429060:	mov	x8, #0xffffffffffffffe8    	// #-24
  429064:	mov	x9, sp
  429068:	add	x10, sp, #0x80
  42906c:	movk	x8, #0xff80, lsl #32
  429070:	add	x11, x29, #0x40
  429074:	add	x9, x9, #0x80
  429078:	add	x10, x10, #0x18
  42907c:	stp	x22, x21, [sp, #384]
  429080:	stp	x20, x19, [sp, #400]
  429084:	stp	x5, x6, [sp, #128]
  429088:	stp	q0, q1, [sp]
  42908c:	stp	q2, q3, [sp, #32]
  429090:	stp	q4, q5, [sp, #64]
  429094:	stp	q6, q7, [sp, #96]
  429098:	stp	x9, x8, [sp, #168]
  42909c:	str	x10, [sp, #160]
  4290a0:	stp	x7, x11, [sp, #144]
  4290a4:	ldr	x8, [x0, #1000]
  4290a8:	str	x28, [sp, #368]
  4290ac:	cbz	x8, 429138 <feof@plt+0x26058>
  4290b0:	mov	w22, w1
  4290b4:	ldr	x1, [x0, #40]
  4290b8:	mov	w21, w3
  4290bc:	mov	x19, x0
  4290c0:	sub	x0, x29, #0xa8
  4290c4:	mov	x3, xzr
  4290c8:	mov	x20, x4
  4290cc:	bl	436a50 <feof@plt+0x33970>
  4290d0:	cbz	w21, 4290e0 <feof@plt+0x26000>
  4290d4:	sub	x0, x29, #0xa8
  4290d8:	mov	w1, w21
  4290dc:	bl	436cdc <feof@plt+0x33bfc>
  4290e0:	ldr	x21, [x19, #1000]
  4290e4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  4290e8:	add	x0, x0, #0xaaf
  4290ec:	mov	x1, x20
  4290f0:	bl	402cb0 <dgettext@plt>
  4290f4:	mov	x4, x0
  4290f8:	sub	x3, x29, #0xa8
  4290fc:	add	x5, sp, #0x98
  429100:	mov	w1, #0x1                   	// #1
  429104:	mov	x0, x19
  429108:	mov	w2, w22
  42910c:	blr	x21
  429110:	mov	w19, w0
  429114:	sub	x0, x29, #0xa8
  429118:	bl	436b30 <feof@plt+0x33a50>
  42911c:	and	w0, w19, #0x1
  429120:	ldp	x20, x19, [sp, #400]
  429124:	ldp	x22, x21, [sp, #384]
  429128:	ldr	x28, [sp, #368]
  42912c:	ldp	x29, x30, [sp, #352]
  429130:	add	sp, sp, #0x1a0
  429134:	ret
  429138:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  42913c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  429140:	add	x0, x0, #0xab6
  429144:	add	x2, x2, #0xacc
  429148:	mov	w1, #0x9f                  	// #159
  42914c:	bl	40f560 <feof@plt+0xc480>
  429150:	sub	sp, sp, #0x1b0
  429154:	stp	x29, x30, [sp, #368]
  429158:	add	x29, sp, #0x170
  42915c:	mov	x8, #0xffffffffffffffe0    	// #-32
  429160:	mov	x9, sp
  429164:	add	x10, sp, #0x88
  429168:	movk	x8, #0xff80, lsl #32
  42916c:	add	x11, x29, #0x40
  429170:	add	x9, x9, #0x80
  429174:	add	x10, x10, #0x20
  429178:	stp	x22, x21, [sp, #400]
  42917c:	stp	x20, x19, [sp, #416]
  429180:	stp	x4, x5, [sp, #136]
  429184:	stp	x6, x7, [sp, #152]
  429188:	stp	q0, q1, [sp]
  42918c:	stp	q2, q3, [sp, #32]
  429190:	stp	q4, q5, [sp, #64]
  429194:	stp	q6, q7, [sp, #96]
  429198:	stp	x9, x8, [x29, #-16]
  42919c:	stp	x11, x10, [x29, #-32]
  4291a0:	ldr	x8, [x0, #40]
  4291a4:	mov	x20, x3
  4291a8:	mov	x19, x0
  4291ac:	mov	w21, w1
  4291b0:	add	x0, sp, #0xa8
  4291b4:	mov	x1, x8
  4291b8:	mov	x3, xzr
  4291bc:	str	x28, [sp, #384]
  4291c0:	bl	436a50 <feof@plt+0x33970>
  4291c4:	ldr	x22, [x19, #1000]
  4291c8:	cbz	x22, 429220 <feof@plt+0x26140>
  4291cc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  4291d0:	add	x0, x0, #0xaaf
  4291d4:	mov	x1, x20
  4291d8:	bl	402cb0 <dgettext@plt>
  4291dc:	mov	x4, x0
  4291e0:	add	x3, sp, #0xa8
  4291e4:	sub	x5, x29, #0x20
  4291e8:	mov	x0, x19
  4291ec:	mov	w1, w21
  4291f0:	mov	w2, wzr
  4291f4:	blr	x22
  4291f8:	mov	w19, w0
  4291fc:	add	x0, sp, #0xa8
  429200:	bl	436b30 <feof@plt+0x33a50>
  429204:	and	w0, w19, #0x1
  429208:	ldp	x20, x19, [sp, #416]
  42920c:	ldp	x22, x21, [sp, #400]
  429210:	ldr	x28, [sp, #384]
  429214:	ldp	x29, x30, [sp, #368]
  429218:	add	sp, sp, #0x1b0
  42921c:	ret
  429220:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  429224:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  429228:	add	x0, x0, #0xab6
  42922c:	add	x2, x2, #0xae5
  429230:	mov	w1, #0x29                  	// #41
  429234:	bl	40f560 <feof@plt+0xc480>
  429238:	sub	sp, sp, #0xf0
  42923c:	stp	x29, x30, [sp, #192]
  429240:	add	x29, sp, #0xc0
  429244:	mov	x8, #0xffffffffffffffe0    	// #-32
  429248:	mov	x9, sp
  42924c:	sub	x10, x29, #0x40
  429250:	movk	x8, #0xff80, lsl #32
  429254:	add	x11, x29, #0x30
  429258:	add	x9, x9, #0x80
  42925c:	add	x10, x10, #0x20
  429260:	stp	x22, x21, [sp, #208]
  429264:	stp	x20, x19, [sp, #224]
  429268:	stp	x4, x5, [x29, #-64]
  42926c:	stp	x6, x7, [x29, #-48]
  429270:	stp	q0, q1, [sp]
  429274:	stp	q2, q3, [sp, #32]
  429278:	stp	q4, q5, [sp, #64]
  42927c:	stp	q6, q7, [sp, #96]
  429280:	stp	x9, x8, [x29, #-16]
  429284:	stp	x11, x10, [x29, #-32]
  429288:	ldr	x22, [x0, #1000]
  42928c:	cbz	x22, 4292e0 <feof@plt+0x26200>
  429290:	mov	x20, x0
  429294:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  429298:	mov	w21, w1
  42929c:	add	x0, x0, #0xaaf
  4292a0:	mov	x1, x3
  4292a4:	mov	x19, x2
  4292a8:	bl	402cb0 <dgettext@plt>
  4292ac:	mov	x4, x0
  4292b0:	sub	x5, x29, #0x20
  4292b4:	mov	x0, x20
  4292b8:	mov	w1, w21
  4292bc:	mov	w2, wzr
  4292c0:	mov	x3, x19
  4292c4:	blr	x22
  4292c8:	ldp	x20, x19, [sp, #224]
  4292cc:	ldp	x22, x21, [sp, #208]
  4292d0:	ldp	x29, x30, [sp, #192]
  4292d4:	and	w0, w0, #0x1
  4292d8:	add	sp, sp, #0xf0
  4292dc:	ret
  4292e0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  4292e4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  4292e8:	add	x0, x0, #0xab6
  4292ec:	add	x2, x2, #0xae5
  4292f0:	mov	w1, #0x29                  	// #41
  4292f4:	bl	40f560 <feof@plt+0xc480>
  4292f8:	stp	x29, x30, [sp, #-48]!
  4292fc:	stp	x20, x19, [sp, #32]
  429300:	mov	x20, x0
  429304:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  429308:	mov	w19, w1
  42930c:	add	x0, x0, #0xaaf
  429310:	mov	x1, x2
  429314:	str	x21, [sp, #16]
  429318:	mov	x29, sp
  42931c:	bl	402cb0 <dgettext@plt>
  429320:	mov	x21, x0
  429324:	bl	402e70 <__errno_location@plt>
  429328:	ldr	w0, [x0]
  42932c:	bl	46231c <_obstack_memory_used@@Base+0xb54>
  429330:	mov	x4, x0
  429334:	mov	x0, x20
  429338:	mov	w1, w19
  42933c:	mov	x3, x21
  429340:	ldp	x20, x19, [sp, #32]
  429344:	ldr	x21, [sp, #16]
  429348:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0xc838>
  42934c:	add	x2, x2, #0xaa8
  429350:	ldp	x29, x30, [sp], #48
  429354:	b	4288a0 <feof@plt+0x257c0>
  429358:	stp	x29, x30, [sp, #-48]!
  42935c:	stp	x22, x21, [sp, #16]
  429360:	stp	x20, x19, [sp, #32]
  429364:	ldrb	w8, [x2]
  429368:	mov	w19, w3
  42936c:	mov	x22, x2
  429370:	mov	w20, w1
  429374:	mov	x21, x0
  429378:	mov	x29, sp
  42937c:	cbnz	w8, 429398 <feof@plt+0x262b8>
  429380:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  429384:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  429388:	add	x0, x0, #0xaaf
  42938c:	add	x1, x1, #0x353
  429390:	bl	402cb0 <dgettext@plt>
  429394:	mov	x22, x0
  429398:	bl	402e70 <__errno_location@plt>
  42939c:	ldr	w0, [x0]
  4293a0:	bl	46231c <_obstack_memory_used@@Base+0xb54>
  4293a4:	mov	x5, x0
  4293a8:	mov	x0, x21
  4293ac:	mov	w1, w20
  4293b0:	mov	w2, w19
  4293b4:	mov	x4, x22
  4293b8:	ldp	x20, x19, [sp, #32]
  4293bc:	ldp	x22, x21, [sp, #16]
  4293c0:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0xc838>
  4293c4:	add	x3, x3, #0xaa8
  4293c8:	ldp	x29, x30, [sp], #48
  4293cc:	b	429150 <feof@plt+0x26070>
  4293d0:	b	4293d4 <feof@plt+0x262f4>
  4293d4:	stp	x22, x21, [sp, #-32]!
  4293d8:	subs	x8, x2, #0x2
  4293dc:	stp	x20, x19, [sp, #16]
  4293e0:	b.ne	42942c <feof@plt+0x2634c>  // b.any
  4293e4:	ldrb	w9, [x1]
  4293e8:	orr	w10, w9, #0x20
  4293ec:	cmp	w10, #0x64
  4293f0:	b.ne	42942c <feof@plt+0x2634c>  // b.any
  4293f4:	ldrb	w10, [x1, #1]
  4293f8:	sub	w10, w10, #0x44
  4293fc:	cmp	w10, #0x28
  429400:	b.hi	42942c <feof@plt+0x2634c>  // b.pmore
  429404:	adrp	x11, 46e000 <_obstack_memory_used@@Base+0xc838>
  429408:	add	x11, x11, #0xaf8
  42940c:	adr	x12, 42941c <feof@plt+0x2633c>
  429410:	ldrb	w13, [x11, x10]
  429414:	add	x12, x12, x13, lsl #2
  429418:	br	x12
  42941c:	cmp	w9, #0x44
  429420:	mov	w8, #0x4020                	// #16416
  429424:	csel	w8, w8, wzr, eq  // eq = none
  429428:	b	42981c <feof@plt+0x2673c>
  42942c:	ldrb	w17, [x0, #1163]
  429430:	cbz	x2, 429498 <feof@plt+0x263b8>
  429434:	cbz	w17, 429498 <feof@plt+0x263b8>
  429438:	sub	x10, x2, #0x1
  42943c:	ldrb	w9, [x1, x10]
  429440:	sub	w9, w9, #0x4b
  429444:	cmp	w9, #0x27
  429448:	b.hi	429498 <feof@plt+0x263b8>  // b.pmore
  42944c:	adrp	x11, 46e000 <_obstack_memory_used@@Base+0xc838>
  429450:	add	x11, x11, #0xb21
  429454:	adr	x12, 429468 <feof@plt+0x26388>
  429458:	ldrb	w13, [x11, x9]
  42945c:	add	x12, x12, x13, lsl #2
  429460:	mov	w9, #0x200000              	// #2097152
  429464:	br	x12
  429468:	mov	w9, #0x100000              	// #1048576
  42946c:	cmp	x2, #0x1
  429470:	b.eq	429490 <feof@plt+0x263b0>  // b.none
  429474:	ldrb	w11, [x1]
  429478:	orr	w12, w11, #0x20
  42947c:	cmp	w12, #0x75
  429480:	b.ne	429764 <feof@plt+0x26684>  // b.any
  429484:	cmp	x10, #0x1
  429488:	orr	x9, x9, #0x1000
  42948c:	b.ne	42975c <feof@plt+0x2667c>  // b.any
  429490:	mov	w8, w9
  429494:	b	42981c <feof@plt+0x2673c>
  429498:	cbz	x2, 429610 <feof@plt+0x26530>
  42949c:	adrp	x8, 46e000 <_obstack_memory_used@@Base+0xc838>
  4294a0:	mov	x15, xzr
  4294a4:	mov	x9, xzr
  4294a8:	mov	x10, xzr
  4294ac:	mov	x16, xzr
  4294b0:	mov	x11, xzr
  4294b4:	mov	x13, xzr
  4294b8:	mov	x12, xzr
  4294bc:	mov	x14, xzr
  4294c0:	mov	x18, xzr
  4294c4:	add	x8, x8, #0xb53
  4294c8:	mov	w3, #0xa                   	// #10
  4294cc:	mov	x6, x2
  4294d0:	mov	x4, x1
  4294d4:	b	4294e8 <feof@plt+0x26408>
  4294d8:	add	x16, x16, #0x1
  4294dc:	add	x4, x4, #0x1
  4294e0:	mov	x6, x5
  4294e4:	cbz	x5, 429634 <feof@plt+0x26554>
  4294e8:	ldrb	w5, [x4]
  4294ec:	sub	w5, w5, #0x44
  4294f0:	cmp	w5, #0x33
  4294f4:	b.hi	429818 <feof@plt+0x26738>  // b.pmore
  4294f8:	adr	x7, 4294d8 <feof@plt+0x263f8>
  4294fc:	ldrb	w19, [x8, x5]
  429500:	add	x7, x7, x19, lsl #2
  429504:	sub	x5, x6, #0x1
  429508:	br	x7
  42950c:	add	x14, x14, #0x1
  429510:	b	4294dc <feof@plt+0x263fc>
  429514:	add	x19, x18, #0x1
  429518:	cbz	x5, 4297f4 <feof@plt+0x26714>
  42951c:	ldrb	w7, [x0, #1120]
  429520:	cbnz	w7, 4295bc <feof@plt+0x264dc>
  429524:	ldrb	w7, [x4, #1]
  429528:	cmp	w7, #0x31
  42952c:	b.cc	4295bc <feof@plt+0x264dc>  // b.lo, b.ul, b.last
  429530:	cbnz	x15, 4295bc <feof@plt+0x264dc>
  429534:	cmp	w7, #0x39
  429538:	b.hi	4295bc <feof@plt+0x264dc>  // b.pmore
  42953c:	cmp	w7, #0x30
  429540:	b.cc	4295c4 <feof@plt+0x264e4>  // b.lo, b.ul, b.last
  429544:	add	x19, x4, x6
  429548:	mov	x5, xzr
  42954c:	mov	x15, xzr
  429550:	sub	x21, x6, #0x2
  429554:	sub	x20, x19, #0x1
  429558:	mov	x19, #0xffffffffffffffff    	// #-1
  42955c:	cmp	x15, #0xef
  429560:	b.hi	4295d0 <feof@plt+0x264f0>  // b.pmore
  429564:	and	w22, w7, #0xff
  429568:	cmp	w22, #0x39
  42956c:	b.hi	4295d0 <feof@plt+0x264f0>  // b.pmore
  429570:	mul	x15, x15, x3
  429574:	add	x15, x15, w7, uxtb
  429578:	cmp	x21, x5
  42957c:	sub	x15, x15, #0x30
  429580:	b.eq	429600 <feof@plt+0x26520>  // b.none
  429584:	add	x7, x4, x5
  429588:	ldrb	w7, [x7, #2]
  42958c:	add	x5, x5, #0x1
  429590:	sub	x19, x19, #0x1
  429594:	cmp	w7, #0x2f
  429598:	b.hi	42955c <feof@plt+0x2647c>  // b.pmore
  42959c:	add	x4, x4, x5
  4295a0:	b	4295f4 <feof@plt+0x26514>
  4295a4:	add	x12, x12, #0x1
  4295a8:	b	4294dc <feof@plt+0x263fc>
  4295ac:	add	x11, x11, #0x1
  4295b0:	b	4294dc <feof@plt+0x263fc>
  4295b4:	add	x13, x13, #0x1
  4295b8:	b	4294dc <feof@plt+0x263fc>
  4295bc:	mov	x18, x19
  4295c0:	b	4294dc <feof@plt+0x263fc>
  4295c4:	mov	x15, xzr
  4295c8:	add	x10, x10, #0x1
  4295cc:	b	4294dc <feof@plt+0x263fc>
  4295d0:	and	w7, w7, #0xff
  4295d4:	cmp	w7, #0x78
  4295d8:	add	x4, x4, x5
  4295dc:	b.ne	4295f4 <feof@plt+0x26514>  // b.any
  4295e0:	sub	x5, x6, x5
  4295e4:	add	x4, x4, #0x1
  4295e8:	add	x9, x9, #0x1
  4295ec:	sub	x5, x5, #0x2
  4295f0:	b	4294dc <feof@plt+0x263fc>
  4295f4:	add	x5, x6, x19
  4295f8:	add	x10, x10, #0x1
  4295fc:	b	4294dc <feof@plt+0x263fc>
  429600:	mov	x5, xzr
  429604:	mov	x4, x20
  429608:	add	x10, x10, #0x1
  42960c:	b	4294dc <feof@plt+0x263fc>
  429610:	mov	x18, xzr
  429614:	mov	x14, xzr
  429618:	mov	x12, xzr
  42961c:	mov	x13, xzr
  429620:	mov	x11, xzr
  429624:	mov	x16, xzr
  429628:	mov	x10, xzr
  42962c:	mov	x9, xzr
  429630:	mov	x15, xzr
  429634:	cmp	x15, #0xf0
  429638:	mov	w8, wzr
  42963c:	b.hi	42981c <feof@plt+0x2673c>  // b.pmore
  429640:	add	x3, x14, x18
  429644:	add	x3, x3, x12
  429648:	add	x3, x3, x13
  42964c:	add	x3, x3, x11
  429650:	add	x3, x3, x10
  429654:	add	x3, x3, x9
  429658:	orr	x3, x3, x16
  42965c:	cmp	x3, #0x1
  429660:	b.hi	42981c <feof@plt+0x2673c>  // b.pmore
  429664:	cbz	x9, 429680 <feof@plt+0x265a0>
  429668:	cmp	x15, #0x20
  42966c:	b.eq	429680 <feof@plt+0x265a0>  // b.none
  429670:	cmp	x15, #0x80
  429674:	b.eq	429680 <feof@plt+0x265a0>  // b.none
  429678:	cmp	x15, #0x40
  42967c:	b.ne	429818 <feof@plt+0x26738>  // b.any
  429680:	cmp	x10, #0x0
  429684:	cset	w3, ne  // ne = any
  429688:	cmp	x15, #0x10
  42968c:	cset	w4, ne  // ne = any
  429690:	tst	x15, #0x1f
  429694:	cset	w5, ne  // ne = any
  429698:	cmp	x15, #0x60
  42969c:	cset	w8, eq  // eq = none
  4296a0:	and	w6, w3, w8
  4296a4:	mov	w8, wzr
  4296a8:	tbnz	w6, #0, 42981c <feof@plt+0x2673c>
  4296ac:	and	w3, w3, w4
  4296b0:	and	w3, w3, w5
  4296b4:	tbnz	w3, #0, 42981c <feof@plt+0x2673c>
  4296b8:	cbz	x16, 4297a0 <feof@plt+0x266c0>
  4296bc:	cbz	w17, 429818 <feof@plt+0x26738>
  4296c0:	ldrb	w8, [x0, #1120]
  4296c4:	cbz	w8, 4297ac <feof@plt+0x266cc>
  4296c8:	ldr	w8, [x0, #1116]
  4296cc:	cmp	w8, #0xf
  4296d0:	b.lt	4297ac <feof@plt+0x266cc>  // b.tstop
  4296d4:	ldrb	w8, [x1]
  4296d8:	cmp	w8, #0x69
  4296dc:	b.ne	4297ac <feof@plt+0x266cc>  // b.any
  4296e0:	cmp	x2, #0x1
  4296e4:	b.eq	429818 <feof@plt+0x26738>  // b.none
  4296e8:	cmp	x2, #0x2
  4296ec:	b.ne	4297ac <feof@plt+0x266cc>  // b.any
  4296f0:	ldrb	w17, [x1, #1]
  4296f4:	mov	w8, wzr
  4296f8:	cmp	w17, #0x66
  4296fc:	b.eq	42981c <feof@plt+0x2673c>  // b.none
  429700:	cmp	w17, #0x6c
  429704:	b.eq	42981c <feof@plt+0x2673c>  // b.none
  429708:	b	4297ac <feof@plt+0x266cc>
  42970c:	cmp	w9, #0x44
  429710:	mov	w8, #0x4010                	// #16400
  429714:	csel	w8, w8, wzr, eq  // eq = none
  429718:	b	42981c <feof@plt+0x2673c>
  42971c:	cmp	w9, #0x44
  429720:	mov	w8, #0x4040                	// #16448
  429724:	csel	w8, w8, wzr, eq  // eq = none
  429728:	b	42981c <feof@plt+0x2673c>
  42972c:	cmp	w9, #0x44
  429730:	mov	w8, #0x4020                	// #16416
  429734:	csel	w8, wzr, w8, eq  // eq = none
  429738:	b	42981c <feof@plt+0x2673c>
  42973c:	cmp	w9, #0x44
  429740:	mov	w8, #0x4010                	// #16400
  429744:	csel	w8, wzr, w8, eq  // eq = none
  429748:	b	42981c <feof@plt+0x2673c>
  42974c:	cmp	w9, #0x44
  429750:	mov	w8, #0x4040                	// #16448
  429754:	csel	w8, wzr, w8, eq  // eq = none
  429758:	b	42981c <feof@plt+0x2673c>
  42975c:	ldrb	w11, [x1, #1]!
  429760:	mov	x10, x8
  429764:	sub	w8, w11, #0x48
  429768:	ror	w11, w8, #2
  42976c:	cmp	w11, #0x9
  429770:	mov	w8, wzr
  429774:	b.hi	42981c <feof@plt+0x2673c>  // b.pmore
  429778:	adrp	x12, 46e000 <_obstack_memory_used@@Base+0xc838>
  42977c:	add	x12, x12, #0xb49
  429780:	adr	x13, 429790 <feof@plt+0x266b0>
  429784:	ldrb	w14, [x12, x11]
  429788:	add	x13, x13, x14, lsl #2
  42978c:	br	x13
  429790:	cmp	x10, #0x1
  429794:	b.ne	429818 <feof@plt+0x26738>  // b.any
  429798:	orr	w8, w9, #0x10
  42979c:	b	42981c <feof@plt+0x2673c>
  4297a0:	orr	x8, x11, x13
  4297a4:	cbz	x8, 4297ac <feof@plt+0x266cc>
  4297a8:	cbz	w17, 429818 <feof@plt+0x26738>
  4297ac:	cmp	x16, #0x0
  4297b0:	cset	w8, ne  // ne = any
  4297b4:	lsl	x8, x8, #13
  4297b8:	cbz	x18, 4297fc <feof@plt+0x2671c>
  4297bc:	mov	w11, #0x10                  	// #16
  4297c0:	orr	w8, w11, w8
  4297c4:	b	42981c <feof@plt+0x2673c>
  4297c8:	cmp	x10, #0x2
  4297cc:	b.eq	42980c <feof@plt+0x2672c>  // b.none
  4297d0:	cmp	x10, #0x1
  4297d4:	b.eq	4297ec <feof@plt+0x2670c>  // b.none
  4297d8:	b	429818 <feof@plt+0x26738>
  4297dc:	cmp	x10, #0x2
  4297e0:	b.eq	42982c <feof@plt+0x2674c>  // b.none
  4297e4:	cmp	x10, #0x1
  4297e8:	b.ne	429818 <feof@plt+0x26738>  // b.any
  4297ec:	orr	w8, w9, #0x20
  4297f0:	b	42981c <feof@plt+0x2673c>
  4297f4:	mov	x18, x19
  4297f8:	b	429634 <feof@plt+0x26554>
  4297fc:	cbz	x14, 429840 <feof@plt+0x26760>
  429800:	mov	w11, #0x20                  	// #32
  429804:	orr	w8, w11, w8
  429808:	b	42981c <feof@plt+0x2673c>
  42980c:	ldrb	w8, [x1, #1]
  429810:	cmp	w8, #0x4c
  429814:	b.eq	429838 <feof@plt+0x26758>  // b.none
  429818:	mov	w8, wzr
  42981c:	ldp	x20, x19, [sp, #16]
  429820:	mov	w0, w8
  429824:	ldp	x22, x21, [sp], #32
  429828:	ret
  42982c:	ldrb	w8, [x1, #1]
  429830:	cmp	w8, #0x6c
  429834:	b.ne	429818 <feof@plt+0x26738>  // b.any
  429838:	orr	w8, w9, #0x40
  42983c:	b	42981c <feof@plt+0x2673c>
  429840:	orr	x13, x13, x12
  429844:	cmp	x12, #0x0
  429848:	mov	w12, #0x40                  	// #64
  42984c:	mov	w14, #0x10000               	// #65536
  429850:	csel	x12, x14, x12, eq  // eq = none
  429854:	orr	x14, x13, x11
  429858:	cmp	x13, #0x0
  42985c:	mov	w11, #0x20000               	// #131072
  429860:	csel	x11, x11, x12, eq  // eq = none
  429864:	cbz	x14, 429870 <feof@plt+0x26790>
  429868:	orr	w8, w11, w8
  42986c:	b	42981c <feof@plt+0x2673c>
  429870:	lsl	x11, x15, #24
  429874:	cbz	x10, 429884 <feof@plt+0x267a4>
  429878:	orr	x11, x11, #0x400000
  42987c:	orr	w8, w11, w8
  429880:	b	42981c <feof@plt+0x2673c>
  429884:	orr	x10, x11, #0x800000
  429888:	cmp	x9, #0x0
  42988c:	mov	w9, #0x8000                	// #32768
  429890:	csel	x11, x10, x9, ne  // ne = any
  429894:	b	429868 <feof@plt+0x26788>
  429898:	cbz	x2, 429924 <feof@plt+0x26844>
  42989c:	mov	x11, xzr
  4298a0:	mov	x10, xzr
  4298a4:	mov	x9, xzr
  4298a8:	mov	w12, #0x1                   	// #1
  4298ac:	mov	x13, x2
  4298b0:	b	4298c0 <feof@plt+0x267e0>
  4298b4:	add	x11, x11, #0x1
  4298b8:	sub	x13, x13, #0x1
  4298bc:	cbz	x13, 429930 <feof@plt+0x26850>
  4298c0:	add	x8, x1, x13
  4298c4:	ldurb	w14, [x8, #-1]
  4298c8:	mov	w8, wzr
  4298cc:	sub	w15, w14, #0x49
  4298d0:	cmp	w15, #0x2c
  4298d4:	b.hi	4299d0 <feof@plt+0x268f0>  // b.pmore
  4298d8:	lsl	x16, x12, x15
  4298dc:	tst	x16, #0x300000003
  4298e0:	b.ne	4298b4 <feof@plt+0x267d4>  // b.any
  4298e4:	lsl	x16, x12, x15
  4298e8:	tst	x16, #0x800000008
  4298ec:	b.ne	429904 <feof@plt+0x26824>  // b.any
  4298f0:	lsl	x14, x12, x15
  4298f4:	tst	x14, #0x100000001000
  4298f8:	b.eq	4299d0 <feof@plt+0x268f0>  // b.none
  4298fc:	add	x9, x9, #0x1
  429900:	b	4298b8 <feof@plt+0x267d8>
  429904:	add	x10, x10, #0x1
  429908:	cmp	x10, #0x2
  42990c:	b.ne	4298b8 <feof@plt+0x267d8>  // b.any
  429910:	ldrb	w8, [x1, x13]
  429914:	cmp	w14, w8
  429918:	b.ne	429990 <feof@plt+0x268b0>  // b.any
  42991c:	mov	w10, #0x2                   	// #2
  429920:	b	4298b8 <feof@plt+0x267d8>
  429924:	mov	x9, xzr
  429928:	mov	x10, xzr
  42992c:	mov	x11, xzr
  429930:	cmp	x10, #0x2
  429934:	mov	w8, wzr
  429938:	b.hi	4299d0 <feof@plt+0x268f0>  // b.pmore
  42993c:	orr	x12, x11, x9
  429940:	cmp	x12, #0x1
  429944:	b.hi	4299d0 <feof@plt+0x268f0>  // b.pmore
  429948:	cbz	x11, 429998 <feof@plt+0x268b8>
  42994c:	ldrb	w8, [x0, #1163]
  429950:	cbz	w8, 4299d0 <feof@plt+0x268f0>
  429954:	ldrb	w8, [x0, #1120]
  429958:	cbz	w8, 429998 <feof@plt+0x268b8>
  42995c:	ldr	w8, [x0, #1116]
  429960:	cmp	w8, #0xf
  429964:	b.lt	429998 <feof@plt+0x268b8>  // b.tstop
  429968:	ldrb	w8, [x1]
  42996c:	cmp	w8, #0x69
  429970:	b.ne	429998 <feof@plt+0x268b8>  // b.any
  429974:	cmp	x2, #0x1
  429978:	b.eq	429990 <feof@plt+0x268b0>  // b.none
  42997c:	cmp	x2, #0x2
  429980:	b.ne	429998 <feof@plt+0x268b8>  // b.any
  429984:	ldrb	w8, [x1, #1]
  429988:	cmp	w8, #0x6c
  42998c:	b.ne	429998 <feof@plt+0x268b8>  // b.any
  429990:	mov	w0, wzr
  429994:	ret
  429998:	cmp	x11, #0x0
  42999c:	cset	w13, ne  // ne = any
  4299a0:	cmp	x9, #0x0
  4299a4:	mov	w8, #0x40                  	// #64
  4299a8:	mov	w11, #0x20                  	// #32
  4299ac:	cset	w9, ne  // ne = any
  4299b0:	cmp	x10, #0x1
  4299b4:	mov	w12, #0x10                  	// #16
  4299b8:	lsl	w9, w9, #12
  4299bc:	csel	w8, w11, w8, eq  // eq = none
  4299c0:	cmp	x10, #0x0
  4299c4:	bfi	w9, w13, #13, #1
  4299c8:	csel	w8, w12, w8, eq  // eq = none
  4299cc:	orr	w8, w9, w8
  4299d0:	mov	w0, w8
  4299d4:	ret
  4299d8:	sub	w8, w0, #0x4a
  4299dc:	cmp	w8, #0x4
  4299e0:	b.hi	4299e8 <feof@plt+0x26908>  // b.pmore
  4299e4:	sub	w0, w0, #0xc
  4299e8:	ret
  4299ec:	sub	w8, w0, #0x3e
  4299f0:	cmp	w8, #0x4
  4299f4:	b.hi	4299fc <feof@plt+0x2691c>  // b.pmore
  4299f8:	add	w0, w0, #0xc
  4299fc:	ret
  429a00:	sub	w8, w0, #0x45
  429a04:	cmp	w8, #0x4
  429a08:	b.hi	429a10 <feof@plt+0x26930>  // b.pmore
  429a0c:	sub	w0, w0, #0xd
  429a10:	ret
  429a14:	sub	w8, w0, #0x38
  429a18:	cmp	w8, #0x4
  429a1c:	b.hi	429a24 <feof@plt+0x26944>  // b.pmore
  429a20:	add	w0, w0, #0xd
  429a24:	ret
  429a28:	sub	w8, w0, #0x4a
  429a2c:	cmp	w8, #0x5
  429a30:	cset	w0, cc  // cc = lo, ul, last
  429a34:	ret
  429a38:	sub	w8, w0, #0x45
  429a3c:	cmp	w8, #0x5
  429a40:	cset	w0, cc  // cc = lo, ul, last
  429a44:	ret
  429a48:	ldr	w8, [x0, #8]
  429a4c:	ldr	x9, [x0, #16]
  429a50:	cbz	w8, 429a7c <feof@plt+0x2699c>
  429a54:	mov	x10, xzr
  429a58:	ldrb	w11, [x9, x10]
  429a5c:	cmp	w11, #0x22
  429a60:	b.eq	429a80 <feof@plt+0x269a0>  // b.none
  429a64:	cmp	w11, #0x27
  429a68:	b.eq	429a80 <feof@plt+0x269a0>  // b.none
  429a6c:	add	x10, x10, #0x1
  429a70:	cmp	x8, x10
  429a74:	b.ne	429a58 <feof@plt+0x26978>  // b.any
  429a78:	b	429a88 <feof@plt+0x269a8>
  429a7c:	mov	w10, wzr
  429a80:	cmp	w10, w8
  429a84:	b.ne	429a90 <feof@plt+0x269b0>  // b.any
  429a88:	add	x0, x9, w8, uxtw
  429a8c:	ret
  429a90:	ldrb	w10, [x9, w10, uxtw]
  429a94:	cbz	x8, 429a88 <feof@plt+0x269a8>
  429a98:	sub	w11, w8, #0x1
  429a9c:	ldrb	w11, [x9, w11, uxtw]
  429aa0:	sub	x8, x8, #0x1
  429aa4:	cmp	w11, w10
  429aa8:	b.ne	429a94 <feof@plt+0x269b4>  // b.any
  429aac:	add	w8, w8, #0x1
  429ab0:	add	x0, x9, w8, uxtw
  429ab4:	ret
  429ab8:	sub	sp, sp, #0x70
  429abc:	stp	x29, x30, [sp, #16]
  429ac0:	stp	x28, x27, [sp, #32]
  429ac4:	stp	x26, x25, [sp, #48]
  429ac8:	stp	x24, x23, [sp, #64]
  429acc:	stp	x22, x21, [sp, #80]
  429ad0:	stp	x20, x19, [sp, #96]
  429ad4:	ldr	x8, [x1, #16]
  429ad8:	mov	x20, x0
  429adc:	add	x29, sp, #0x10
  429ae0:	cbz	x2, 429ae8 <feof@plt+0x26a08>
  429ae4:	str	xzr, [x2]
  429ae8:	ldr	w9, [x1, #8]
  429aec:	cmp	w9, #0x1
  429af0:	b.ne	429afc <feof@plt+0x26a1c>  // b.any
  429af4:	mov	w0, #0x111                 	// #273
  429af8:	b	42a260 <feof@plt+0x27180>
  429afc:	ldrb	w10, [x8]
  429b00:	adrp	x24, 474000 <_obstack_memory_used@@Base+0x12838>
  429b04:	mov	x21, x8
  429b08:	add	x24, x24, #0xe98
  429b0c:	cmp	w10, #0x30
  429b10:	b.ne	429b3c <feof@plt+0x26a5c>  // b.any
  429b14:	mov	x10, x21
  429b18:	ldrb	w11, [x10, #1]!
  429b1c:	mov	w25, #0x8                   	// #8
  429b20:	cmp	w11, #0x61
  429b24:	b.gt	429b44 <feof@plt+0x26a64>
  429b28:	cmp	w11, #0x42
  429b2c:	b.eq	429b74 <feof@plt+0x26a94>  // b.none
  429b30:	cmp	w11, #0x58
  429b34:	b.eq	429b54 <feof@plt+0x26a74>  // b.none
  429b38:	b	429bb4 <feof@plt+0x26ad4>
  429b3c:	mov	w25, #0xa                   	// #10
  429b40:	b	429bb8 <feof@plt+0x26ad8>
  429b44:	cmp	w11, #0x62
  429b48:	b.eq	429b74 <feof@plt+0x26a94>  // b.none
  429b4c:	cmp	w11, #0x78
  429b50:	b.ne	429bb4 <feof@plt+0x26ad4>  // b.any
  429b54:	ldrb	w11, [x21, #2]!
  429b58:	cmp	x11, #0x2e
  429b5c:	b.eq	429b8c <feof@plt+0x26aac>  // b.none
  429b60:	ldrh	w12, [x24, x11, lsl #1]
  429b64:	tbnz	w12, #8, 429b8c <feof@plt+0x26aac>
  429b68:	cmp	w11, #0x27
  429b6c:	b.eq	429b9c <feof@plt+0x26abc>  // b.none
  429b70:	b	429bb0 <feof@plt+0x26ad0>
  429b74:	ldrb	w11, [x21, #2]!
  429b78:	sub	w12, w11, #0x30
  429b7c:	cmp	w12, #0x2
  429b80:	b.cs	429b94 <feof@plt+0x26ab4>  // b.hs, b.nlast
  429b84:	mov	w25, #0x2                   	// #2
  429b88:	b	429bb8 <feof@plt+0x26ad8>
  429b8c:	mov	w25, #0x10                  	// #16
  429b90:	b	429bb8 <feof@plt+0x26ad8>
  429b94:	cmp	w11, #0x27
  429b98:	b.ne	429bb0 <feof@plt+0x26ad0>  // b.any
  429b9c:	ldrb	w11, [x20, #1166]
  429ba0:	cbz	w11, 429bb0 <feof@plt+0x26ad0>
  429ba4:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429ba8:	add	x4, x4, #0xca4
  429bac:	b	42a248 <feof@plt+0x27168>
  429bb0:	mov	w25, #0x8                   	// #8
  429bb4:	mov	x21, x10
  429bb8:	add	x12, x8, x9
  429bbc:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  429bc0:	mov	w10, wzr
  429bc4:	mov	w26, wzr
  429bc8:	mov	w19, wzr
  429bcc:	add	x8, x8, #0xc33
  429bd0:	mov	w28, w10
  429bd4:	b	429bec <feof@plt+0x26b0c>
  429bd8:	mov	x21, x9
  429bdc:	ldrb	w9, [x8, x27]
  429be0:	mov	w26, #0x1                   	// #1
  429be4:	cmp	w19, w9
  429be8:	csel	w19, w9, w19, cc  // cc = lo, ul, last
  429bec:	mov	x23, x21
  429bf0:	ldrb	w27, [x21], #1
  429bf4:	ldrh	w9, [x24, x27, lsl #1]
  429bf8:	tbnz	w9, #2, 429bdc <feof@plt+0x26afc>
  429bfc:	cmp	w25, #0x10
  429c00:	b.ne	429c08 <feof@plt+0x26b28>  // b.any
  429c04:	tbnz	w9, #8, 429bdc <feof@plt+0x26afc>
  429c08:	cmp	w27, #0x27
  429c0c:	b.ne	429c48 <feof@plt+0x26b68>  // b.any
  429c10:	ldrb	w9, [x20, #1166]
  429c14:	cbz	w9, 429c80 <feof@plt+0x26ba0>
  429c18:	ldrb	w27, [x23, #1]
  429c1c:	add	x9, x23, #0x2
  429c20:	ldrh	w10, [x24, x27, lsl #1]
  429c24:	tbnz	w10, #2, 429bd8 <feof@plt+0x26af8>
  429c28:	cmp	w25, #0x10
  429c2c:	b.ne	429c34 <feof@plt+0x26b54>  // b.any
  429c30:	tbnz	w10, #8, 429bd8 <feof@plt+0x26af8>
  429c34:	cmp	w27, #0x2e
  429c38:	b.ne	429d18 <feof@plt+0x26c38>  // b.any
  429c3c:	mov	w10, #0x1                   	// #1
  429c40:	mov	x21, x9
  429c44:	b	429c54 <feof@plt+0x26b74>
  429c48:	cmp	w27, #0x2e
  429c4c:	b.ne	429c8c <feof@plt+0x26bac>  // b.any
  429c50:	mov	w10, wzr
  429c54:	tbnz	w10, #0, 429d00 <feof@plt+0x26c20>
  429c58:	ldrb	w9, [x21]
  429c5c:	cmp	w9, #0x27
  429c60:	b.ne	429c6c <feof@plt+0x26b8c>  // b.any
  429c64:	ldrb	w9, [x20, #1166]
  429c68:	cbnz	w9, 429d00 <feof@plt+0x26c20>
  429c6c:	mov	w10, #0x1                   	// #1
  429c70:	cbz	w28, 429bd0 <feof@plt+0x26af0>
  429c74:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429c78:	add	x4, x4, #0xd0d
  429c7c:	b	42a248 <feof@plt+0x27168>
  429c80:	mov	w22, wzr
  429c84:	cbnz	w22, 429cc8 <feof@plt+0x26be8>
  429c88:	b	429d50 <feof@plt+0x26c70>
  429c8c:	mov	w22, wzr
  429c90:	cmp	w25, #0x10
  429c94:	orr	w9, w27, #0x20
  429c98:	cset	w8, eq  // eq = none
  429c9c:	cmp	w25, #0xb
  429ca0:	cset	w10, cc  // cc = lo, ul, last
  429ca4:	cmp	w9, #0x65
  429ca8:	cset	w11, eq  // eq = none
  429cac:	cmp	w9, #0x70
  429cb0:	and	w10, w10, w11
  429cb4:	cset	w9, eq  // eq = none
  429cb8:	tbnz	w10, #0, 429cd4 <feof@plt+0x26bf4>
  429cbc:	and	w8, w8, w9
  429cc0:	cbnz	w8, 429cd4 <feof@plt+0x26bf4>
  429cc4:	cbz	w22, 429d50 <feof@plt+0x26c70>
  429cc8:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429ccc:	add	x4, x4, #0xd54
  429cd0:	b	42a248 <feof@plt+0x27168>
  429cd4:	tbnz	w22, #0, 429cec <feof@plt+0x26c0c>
  429cd8:	ldrb	w27, [x21]
  429cdc:	cmp	w27, #0x27
  429ce0:	b.ne	429cf8 <feof@plt+0x26c18>  // b.any
  429ce4:	ldrb	w8, [x20, #1166]
  429ce8:	cbz	w8, 429d0c <feof@plt+0x26c2c>
  429cec:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429cf0:	add	x4, x4, #0xd2f
  429cf4:	b	42a248 <feof@plt+0x27168>
  429cf8:	mov	w28, #0x2                   	// #2
  429cfc:	b	429dd8 <feof@plt+0x26cf8>
  429d00:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429d04:	add	x4, x4, #0xce3
  429d08:	b	42a248 <feof@plt+0x27168>
  429d0c:	mov	w28, #0x2                   	// #2
  429d10:	mov	w27, #0x27                  	// #39
  429d14:	b	429dd8 <feof@plt+0x26cf8>
  429d18:	cmp	w27, #0x27
  429d1c:	b.ne	429d34 <feof@plt+0x26c54>  // b.any
  429d20:	ldrb	w8, [x20, #1166]
  429d24:	cbz	w8, 429d44 <feof@plt+0x26c64>
  429d28:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429d2c:	add	x4, x4, #0xcc9
  429d30:	b	42a248 <feof@plt+0x27168>
  429d34:	mov	w22, #0x1                   	// #1
  429d38:	mov	x23, x21
  429d3c:	mov	x21, x9
  429d40:	b	429c90 <feof@plt+0x26bb0>
  429d44:	mov	w22, #0x1                   	// #1
  429d48:	mov	x23, x21
  429d4c:	cbnz	w22, 429cc8 <feof@plt+0x26be8>
  429d50:	cmp	w25, #0x10
  429d54:	b.eq	429dd4 <feof@plt+0x26cf4>  // b.none
  429d58:	cbnz	w28, 429dd4 <feof@plt+0x26cf4>
  429d5c:	str	x2, [sp]
  429d60:	sub	x2, x12, x23
  429d64:	mov	x0, x20
  429d68:	mov	x1, x23
  429d6c:	stur	w3, [x29, #-4]
  429d70:	mov	x21, x12
  429d74:	bl	4293d4 <feof@plt+0x262f4>
  429d78:	tst	w0, #0x300000
  429d7c:	b.eq	429dc4 <feof@plt+0x26ce4>  // b.none
  429d80:	ldrb	w8, [x20, #1154]
  429d84:	ldur	w3, [x29, #-4]
  429d88:	cmp	w25, #0x8
  429d8c:	mov	w9, #0xa                   	// #10
  429d90:	orr	w19, w0, #0x2
  429d94:	csel	w25, w9, w25, eq  // eq = none
  429d98:	cbz	w8, 42a0dc <feof@plt+0x26ffc>
  429d9c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429da0:	add	x4, x4, #0xd7b
  429da4:	mov	w1, #0x2                   	// #2
  429da8:	mov	x0, x20
  429dac:	mov	w2, w3
  429db0:	mov	w3, wzr
  429db4:	bl	428d60 <feof@plt+0x25c80>
  429db8:	ldur	w3, [x29, #-4]
  429dbc:	tbnz	w19, #13, 42a0e0 <feof@plt+0x27000>
  429dc0:	b	42a10c <feof@plt+0x2702c>
  429dc4:	ldur	w3, [x29, #-4]
  429dc8:	ldr	x2, [sp]
  429dcc:	mov	w28, wzr
  429dd0:	mov	x12, x21
  429dd4:	mov	x21, x23
  429dd8:	cmp	w28, #0x0
  429ddc:	ccmp	w25, #0x8, #0x0, ne  // ne = any
  429de0:	mov	w8, #0xa                   	// #10
  429de4:	csel	w25, w8, w25, eq  // eq = none
  429de8:	cmp	w19, w25
  429dec:	b.cs	429e08 <feof@plt+0x26d28>  // b.hs, b.nlast
  429df0:	cbz	w28, 429e40 <feof@plt+0x26d60>
  429df4:	cmp	w25, #0x2
  429df8:	b.ne	429ecc <feof@plt+0x26dec>  // b.any
  429dfc:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429e00:	add	x4, x4, #0xdf0
  429e04:	b	42a248 <feof@plt+0x27168>
  429e08:	cmp	w25, #0x2
  429e0c:	add	w5, w19, #0x30
  429e10:	b.ne	429e20 <feof@plt+0x26d40>  // b.any
  429e14:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429e18:	add	x4, x4, #0xda5
  429e1c:	b	429e28 <feof@plt+0x26d48>
  429e20:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429e24:	add	x4, x4, #0xdcb
  429e28:	mov	w1, #0x3                   	// #3
  429e2c:	mov	x0, x20
  429e30:	mov	w2, w3
  429e34:	mov	w3, wzr
  429e38:	bl	428d60 <feof@plt+0x25c80>
  429e3c:	b	42a25c <feof@plt+0x2717c>
  429e40:	subs	x23, x12, x21
  429e44:	b.eq	429f18 <feof@plt+0x26e38>  // b.none
  429e48:	mov	x10, xzr
  429e4c:	mov	x9, xzr
  429e50:	mov	x8, xzr
  429e54:	mov	w11, #0x1                   	// #1
  429e58:	mov	x12, x23
  429e5c:	b	429e6c <feof@plt+0x26d8c>
  429e60:	add	x10, x10, #0x1
  429e64:	sub	x12, x12, #0x1
  429e68:	cbz	x12, 429f24 <feof@plt+0x26e44>
  429e6c:	add	x13, x21, x12
  429e70:	ldurb	w13, [x13, #-1]
  429e74:	sub	w14, w13, #0x49
  429e78:	cmp	w14, #0x2c
  429e7c:	b.hi	429f7c <feof@plt+0x26e9c>  // b.pmore
  429e80:	lsl	x15, x11, x14
  429e84:	tst	x15, #0x300000003
  429e88:	b.ne	429e60 <feof@plt+0x26d80>  // b.any
  429e8c:	lsl	x15, x11, x14
  429e90:	tst	x15, #0x800000008
  429e94:	b.ne	429eac <feof@plt+0x26dcc>  // b.any
  429e98:	lsl	x13, x11, x14
  429e9c:	tst	x13, #0x100000001000
  429ea0:	b.eq	429f7c <feof@plt+0x26e9c>  // b.none
  429ea4:	add	x8, x8, #0x1
  429ea8:	b	429e64 <feof@plt+0x26d84>
  429eac:	add	x9, x9, #0x1
  429eb0:	cmp	x9, #0x2
  429eb4:	b.ne	429e64 <feof@plt+0x26d84>  // b.any
  429eb8:	ldrb	w9, [x21, x12]
  429ebc:	cmp	w13, w9
  429ec0:	b.ne	429f7c <feof@plt+0x26e9c>  // b.any
  429ec4:	mov	w9, #0x2                   	// #2
  429ec8:	b	429e64 <feof@plt+0x26d84>
  429ecc:	cmp	w25, #0x10
  429ed0:	cset	w8, ne  // ne = any
  429ed4:	orr	w8, w26, w8
  429ed8:	tbz	w8, #0, 429f0c <feof@plt+0x26e2c>
  429edc:	b.ne	42a1b0 <feof@plt+0x270d0>  // b.any
  429ee0:	ldrb	w8, [x20, #1154]
  429ee4:	cbz	w8, 42a1b0 <feof@plt+0x270d0>
  429ee8:	ldrb	w8, [x20, #1127]
  429eec:	cbnz	w8, 42a1b0 <feof@plt+0x270d0>
  429ef0:	ldrb	w8, [x20, #1120]
  429ef4:	mov	x26, x12
  429ef8:	mov	x23, x2
  429efc:	cbz	w8, 42a184 <feof@plt+0x270a4>
  429f00:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429f04:	add	x4, x4, #0xe45
  429f08:	b	42a18c <feof@plt+0x270ac>
  429f0c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429f10:	add	x4, x4, #0xe1a
  429f14:	b	42a248 <feof@plt+0x27168>
  429f18:	mov	x8, xzr
  429f1c:	mov	x9, xzr
  429f20:	mov	x10, xzr
  429f24:	cmp	x9, #0x2
  429f28:	b.hi	429f7c <feof@plt+0x26e9c>  // b.pmore
  429f2c:	orr	x11, x10, x8
  429f30:	cmp	x11, #0x1
  429f34:	b.hi	429f7c <feof@plt+0x26e9c>  // b.pmore
  429f38:	cbz	x10, 429fc4 <feof@plt+0x26ee4>
  429f3c:	ldrb	w11, [x20, #1163]
  429f40:	cbz	w11, 429f7c <feof@plt+0x26e9c>
  429f44:	ldrb	w11, [x20, #1120]
  429f48:	cbz	w11, 429fc4 <feof@plt+0x26ee4>
  429f4c:	ldr	w11, [x20, #1116]
  429f50:	cmp	w11, #0xf
  429f54:	b.lt	429fc4 <feof@plt+0x26ee4>  // b.tstop
  429f58:	cmp	w27, #0x69
  429f5c:	b.ne	429fc4 <feof@plt+0x26ee4>  // b.any
  429f60:	cmp	x23, #0x1
  429f64:	b.eq	429f7c <feof@plt+0x26e9c>  // b.none
  429f68:	cmp	x23, #0x2
  429f6c:	b.ne	429fc4 <feof@plt+0x26ee4>  // b.any
  429f70:	ldrb	w11, [x21, #1]
  429f74:	cmp	w11, #0x6c
  429f78:	b.ne	429fc4 <feof@plt+0x26ee4>  // b.any
  429f7c:	ldrb	w8, [x20, #1161]
  429f80:	cbz	w8, 429f9c <feof@plt+0x26ebc>
  429f84:	mov	w8, #0x40                  	// #64
  429f88:	movk	w8, #0x100, lsl #16
  429f8c:	cbz	x2, 42a000 <feof@plt+0x26f20>
  429f90:	add	w19, w8, #0x1, lsl #12
  429f94:	str	x21, [x2]
  429f98:	b	42a004 <feof@plt+0x26f24>
  429f9c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  429fa0:	add	x4, x4, #0xfc9
  429fa4:	mov	w1, #0x3                   	// #3
  429fa8:	mov	x0, x20
  429fac:	mov	w2, w3
  429fb0:	mov	w3, wzr
  429fb4:	mov	w5, w23
  429fb8:	mov	x6, x21
  429fbc:	bl	428d60 <feof@plt+0x25c80>
  429fc0:	b	42a25c <feof@plt+0x2717c>
  429fc4:	cmp	x10, #0x0
  429fc8:	cset	w13, ne  // ne = any
  429fcc:	cmp	x8, #0x0
  429fd0:	mov	w10, #0x40                  	// #64
  429fd4:	mov	w11, #0x20                  	// #32
  429fd8:	cset	w8, ne  // ne = any
  429fdc:	cmp	x9, #0x1
  429fe0:	mov	w12, #0x10                  	// #16
  429fe4:	lsl	w8, w8, #12
  429fe8:	csel	w10, w11, w10, eq  // eq = none
  429fec:	cmp	x9, #0x0
  429ff0:	bfi	w8, w13, #13, #1
  429ff4:	csel	w9, w12, w10, eq  // eq = none
  429ff8:	orr	w19, w8, w9
  429ffc:	b	42a004 <feof@plt+0x26f24>
  42a000:	orr	w19, w8, #0x1000
  42a004:	ldrb	w8, [x20, #1138]
  42a008:	cbz	w8, 42a07c <feof@plt+0x26f9c>
  42a00c:	mov	x0, x20
  42a010:	mov	w22, w3
  42a014:	bl	438c3c <feof@plt+0x35b5c>
  42a018:	mov	w3, w22
  42a01c:	cbnz	w0, 42a07c <feof@plt+0x26f9c>
  42a020:	and	w8, w19, #0xf0
  42a024:	cmp	w8, #0x40
  42a028:	and	w8, w19, #0x3000
  42a02c:	b.ne	42a040 <feof@plt+0x26f60>  // b.any
  42a030:	ldrb	w9, [x20, #1139]
  42a034:	cmp	w9, #0x0
  42a038:	cset	w9, ne  // ne = any
  42a03c:	b	42a044 <feof@plt+0x26f64>
  42a040:	mov	w9, wzr
  42a044:	cbnz	w8, 42a04c <feof@plt+0x26f6c>
  42a048:	cbz	w9, 42a07c <feof@plt+0x26f9c>
  42a04c:	cmp	w9, #0x0
  42a050:	mov	w8, #0x6                   	// #6
  42a054:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a058:	cinc	w1, w8, ne  // ne = any
  42a05c:	add	x4, x4, #0xf0e
  42a060:	mov	x0, x20
  42a064:	mov	w2, w3
  42a068:	mov	w3, wzr
  42a06c:	mov	w5, w23
  42a070:	mov	x6, x21
  42a074:	bl	428e5c <feof@plt+0x25d7c>
  42a078:	mov	w3, w22
  42a07c:	and	w8, w19, #0xf0
  42a080:	cmp	w8, #0x40
  42a084:	b.ne	42a0d8 <feof@plt+0x26ff8>  // b.any
  42a088:	ldrb	w8, [x20, #1139]
  42a08c:	cbz	w8, 42a0d8 <feof@plt+0x26ff8>
  42a090:	ldrb	w8, [x20, #1120]
  42a094:	ldrb	w9, [x20, #1152]
  42a098:	adrp	x10, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a09c:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a0a0:	add	x10, x10, #0xff3
  42a0a4:	add	x11, x11, #0x1b
  42a0a8:	cmp	w8, #0x0
  42a0ac:	csel	x4, x11, x10, eq  // eq = none
  42a0b0:	mov	w1, #0x7                   	// #7
  42a0b4:	mov	x0, x20
  42a0b8:	mov	w2, w3
  42a0bc:	mov	w21, w3
  42a0c0:	mov	w3, wzr
  42a0c4:	cbz	w9, 42a0d0 <feof@plt+0x26ff0>
  42a0c8:	bl	428e5c <feof@plt+0x25d7c>
  42a0cc:	b	42a0d4 <feof@plt+0x26ff4>
  42a0d0:	bl	428f58 <feof@plt+0x25e78>
  42a0d4:	mov	w3, w21
  42a0d8:	orr	w19, w19, #0x1
  42a0dc:	tbz	w19, #13, 42a10c <feof@plt+0x2702c>
  42a0e0:	ldrb	w8, [x20, #1154]
  42a0e4:	cbz	w8, 42a10c <feof@plt+0x2702c>
  42a0e8:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a0ec:	add	x4, x4, #0x41
  42a0f0:	mov	w1, #0x2                   	// #2
  42a0f4:	mov	x0, x20
  42a0f8:	mov	w2, w3
  42a0fc:	mov	w21, w3
  42a100:	mov	w3, wzr
  42a104:	bl	428d60 <feof@plt+0x25c80>
  42a108:	mov	w3, w21
  42a10c:	cmp	w25, #0x10
  42a110:	b.eq	42a16c <feof@plt+0x2708c>  // b.none
  42a114:	cmp	w25, #0xa
  42a118:	b.eq	42a174 <feof@plt+0x27094>  // b.none
  42a11c:	cmp	w25, #0x2
  42a120:	b.ne	42a17c <feof@plt+0x2709c>  // b.any
  42a124:	ldrb	w8, [x20, #1165]
  42a128:	cbnz	w8, 42a164 <feof@plt+0x27084>
  42a12c:	ldrb	w8, [x20, #1154]
  42a130:	cbz	w8, 42a164 <feof@plt+0x27084>
  42a134:	ldrb	w8, [x20, #1120]
  42a138:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a13c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a140:	add	x9, x9, #0x69
  42a144:	add	x10, x10, #0x9f
  42a148:	cmp	w8, #0x0
  42a14c:	csel	x4, x10, x9, eq  // eq = none
  42a150:	mov	w1, #0x2                   	// #2
  42a154:	mov	x0, x20
  42a158:	mov	w2, w3
  42a15c:	mov	w3, wzr
  42a160:	bl	428d60 <feof@plt+0x25c80>
  42a164:	orr	w0, w19, #0x800
  42a168:	b	42a260 <feof@plt+0x27180>
  42a16c:	orr	w0, w19, #0x200
  42a170:	b	42a260 <feof@plt+0x27180>
  42a174:	orr	w0, w19, #0x100
  42a178:	b	42a260 <feof@plt+0x27180>
  42a17c:	orr	w0, w19, #0x400
  42a180:	b	42a260 <feof@plt+0x27180>
  42a184:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a188:	add	x4, x4, #0xe70
  42a18c:	mov	w1, #0x2                   	// #2
  42a190:	mov	x0, x20
  42a194:	mov	w2, w3
  42a198:	mov	w19, w3
  42a19c:	mov	w3, wzr
  42a1a0:	bl	428d60 <feof@plt+0x25c80>
  42a1a4:	mov	w3, w19
  42a1a8:	mov	x2, x23
  42a1ac:	mov	x12, x26
  42a1b0:	cmp	w28, #0x2
  42a1b4:	b.ne	42a238 <feof@plt+0x27158>  // b.any
  42a1b8:	ldrb	w8, [x21]
  42a1bc:	cmp	w8, #0x2d
  42a1c0:	b.eq	42a1cc <feof@plt+0x270ec>  // b.none
  42a1c4:	cmp	w8, #0x2b
  42a1c8:	b.ne	42a1d0 <feof@plt+0x270f0>  // b.any
  42a1cc:	ldrb	w8, [x21, #1]!
  42a1d0:	ldrh	w9, [x24, w8, uxtw #1]
  42a1d4:	tbnz	w9, #2, 42a1f4 <feof@plt+0x27114>
  42a1d8:	cmp	w8, #0x27
  42a1dc:	b.ne	42a1e8 <feof@plt+0x27108>  // b.any
  42a1e0:	ldrb	w8, [x20, #1166]
  42a1e4:	cbnz	w8, 429cec <feof@plt+0x26c0c>
  42a1e8:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a1ec:	add	x4, x4, #0xe99
  42a1f0:	b	42a248 <feof@plt+0x27168>
  42a1f4:	and	w8, w8, #0xff
  42a1f8:	add	x21, x21, #0x1
  42a1fc:	cmp	w8, #0x27
  42a200:	b.ne	42a214 <feof@plt+0x27134>  // b.any
  42a204:	ldrb	w8, [x20, #1166]
  42a208:	cmp	w8, #0x0
  42a20c:	cset	w22, ne  // ne = any
  42a210:	b	42a218 <feof@plt+0x27138>
  42a214:	mov	w22, wzr
  42a218:	ldrb	w8, [x21]
  42a21c:	ldrh	w9, [x24, x8, lsl #1]
  42a220:	tbnz	w9, #2, 42a1f4 <feof@plt+0x27114>
  42a224:	cmp	w8, #0x27
  42a228:	b.ne	42a280 <feof@plt+0x271a0>  // b.any
  42a22c:	ldrb	w9, [x20, #1166]
  42a230:	cbnz	w9, 42a1f4 <feof@plt+0x27114>
  42a234:	b	42a280 <feof@plt+0x271a0>
  42a238:	cmp	w25, #0x10
  42a23c:	b.ne	42a280 <feof@plt+0x271a0>  // b.any
  42a240:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a244:	add	x4, x4, #0xeb0
  42a248:	mov	w1, #0x3                   	// #3
  42a24c:	mov	x0, x20
  42a250:	mov	w2, w3
  42a254:	mov	w3, wzr
  42a258:	bl	428d60 <feof@plt+0x25c80>
  42a25c:	mov	w0, wzr
  42a260:	ldp	x20, x19, [sp, #96]
  42a264:	ldp	x22, x21, [sp, #80]
  42a268:	ldp	x24, x23, [sp, #64]
  42a26c:	ldp	x26, x25, [sp, #48]
  42a270:	ldp	x28, x27, [sp, #32]
  42a274:	ldp	x29, x30, [sp, #16]
  42a278:	add	sp, sp, #0x70
  42a27c:	ret
  42a280:	cbnz	w22, 429cc8 <feof@plt+0x26be8>
  42a284:	sub	x24, x12, x21
  42a288:	mov	x22, x2
  42a28c:	mov	x0, x20
  42a290:	mov	x1, x21
  42a294:	mov	x2, x24
  42a298:	mov	w19, w3
  42a29c:	mov	x26, x12
  42a2a0:	bl	4293d4 <feof@plt+0x262f4>
  42a2a4:	mov	w23, w0
  42a2a8:	cbz	w0, 42a334 <feof@plt+0x27254>
  42a2ac:	cmp	x26, x21
  42a2b0:	b.eq	42a2ec <feof@plt+0x2720c>  // b.none
  42a2b4:	ldrb	w8, [x20, #1138]
  42a2b8:	cbz	w8, 42a2ec <feof@plt+0x2720c>
  42a2bc:	mov	x0, x20
  42a2c0:	bl	438c3c <feof@plt+0x35b5c>
  42a2c4:	cbnz	w0, 42a2ec <feof@plt+0x2720c>
  42a2c8:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a2cc:	add	x4, x4, #0xf0e
  42a2d0:	mov	w1, #0x6                   	// #6
  42a2d4:	mov	x0, x20
  42a2d8:	mov	w2, w19
  42a2dc:	mov	w3, wzr
  42a2e0:	mov	w5, w24
  42a2e4:	mov	x6, x21
  42a2e8:	bl	428e5c <feof@plt+0x25d7c>
  42a2ec:	cmp	w23, #0x20
  42a2f0:	b.ne	42a30c <feof@plt+0x2722c>  // b.any
  42a2f4:	ldrb	w8, [x20, #1154]
  42a2f8:	mov	w3, w19
  42a2fc:	cbz	w8, 42a3ac <feof@plt+0x272cc>
  42a300:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a304:	add	x4, x4, #0xf36
  42a308:	b	42a394 <feof@plt+0x272b4>
  42a30c:	cmp	w25, #0xa
  42a310:	mov	w3, w19
  42a314:	b.eq	42a350 <feof@plt+0x27270>  // b.none
  42a318:	tbz	w23, #14, 42a350 <feof@plt+0x27270>
  42a31c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a320:	add	x4, x4, #0xf64
  42a324:	mov	w1, #0x3                   	// #3
  42a328:	mov	x0, x20
  42a32c:	mov	w2, w3
  42a330:	b	42a3cc <feof@plt+0x272ec>
  42a334:	ldrb	w8, [x20, #1161]
  42a338:	cbz	w8, 42a3b8 <feof@plt+0x272d8>
  42a33c:	mov	w23, #0x40                  	// #64
  42a340:	movk	w23, #0x100, lsl #16
  42a344:	cbz	x22, 42a2ac <feof@plt+0x271cc>
  42a348:	str	x21, [x22]
  42a34c:	b	42a2ac <feof@plt+0x271cc>
  42a350:	tst	w23, #0x300000
  42a354:	b.eq	42a380 <feof@plt+0x272a0>  // b.none
  42a358:	ldrb	w8, [x20, #1154]
  42a35c:	cbz	w8, 42a380 <feof@plt+0x272a0>
  42a360:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a364:	add	x4, x4, #0xd7b
  42a368:	mov	w1, #0x2                   	// #2
  42a36c:	mov	x0, x20
  42a370:	mov	w2, w3
  42a374:	mov	w3, wzr
  42a378:	bl	428d60 <feof@plt+0x25c80>
  42a37c:	mov	w3, w19
  42a380:	tbz	w23, #14, 42a3ac <feof@plt+0x272cc>
  42a384:	ldrb	w8, [x20, #1154]
  42a388:	cbz	w8, 42a3ac <feof@plt+0x272cc>
  42a38c:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a390:	add	x4, x4, #0xf9d
  42a394:	mov	w1, #0x2                   	// #2
  42a398:	mov	x0, x20
  42a39c:	mov	w2, w3
  42a3a0:	mov	w3, wzr
  42a3a4:	bl	428d60 <feof@plt+0x25c80>
  42a3a8:	mov	w3, w19
  42a3ac:	orr	w19, w23, #0x2
  42a3b0:	tbnz	w19, #13, 42a0e0 <feof@plt+0x27000>
  42a3b4:	b	42a10c <feof@plt+0x2702c>
  42a3b8:	adrp	x4, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a3bc:	add	x4, x4, #0xee3
  42a3c0:	mov	w1, #0x3                   	// #3
  42a3c4:	mov	x0, x20
  42a3c8:	mov	w2, w19
  42a3cc:	mov	w3, wzr
  42a3d0:	mov	w5, w24
  42a3d4:	b	429fb8 <feof@plt+0x26ed8>
  42a3d8:	sub	sp, sp, #0x50
  42a3dc:	stp	x20, x19, [sp, #64]
  42a3e0:	mov	x19, x8
  42a3e4:	ubfx	w8, w2, #12, #1
  42a3e8:	stp	x29, x30, [sp, #16]
  42a3ec:	stp	x24, x23, [sp, #32]
  42a3f0:	stp	x22, x21, [sp, #48]
  42a3f4:	stp	xzr, xzr, [x19]
  42a3f8:	strb	w8, [x19, #16]
  42a3fc:	strb	wzr, [x19, #17]
  42a400:	ldr	w10, [x1, #8]
  42a404:	ldr	x11, [x1, #16]
  42a408:	add	x29, sp, #0x10
  42a40c:	cmp	w10, #0x1
  42a410:	b.ne	42a424 <feof@plt+0x27344>  // b.any
  42a414:	ldrb	w8, [x11]
  42a418:	sub	x8, x8, #0x30
  42a41c:	str	x8, [x19, #8]
  42a420:	b	42a6b4 <feof@plt+0x275d4>
  42a424:	ldr	x9, [x0, #1208]
  42a428:	and	w13, w2, #0xf00
  42a42c:	cmp	w13, #0x200
  42a430:	add	x12, x11, x10
  42a434:	b.eq	42a45c <feof@plt+0x2737c>  // b.none
  42a438:	cmp	w13, #0x800
  42a43c:	b.eq	42a470 <feof@plt+0x27390>  // b.none
  42a440:	cmp	w13, #0x400
  42a444:	b.ne	42a48c <feof@plt+0x273ac>  // b.any
  42a448:	add	x11, x11, #0x1
  42a44c:	mov	w10, #0x8                   	// #8
  42a450:	cmp	x11, x12
  42a454:	b.cs	42a480 <feof@plt+0x273a0>  // b.hs, b.nlast
  42a458:	b	42a498 <feof@plt+0x273b8>
  42a45c:	add	x11, x11, #0x2
  42a460:	mov	w10, #0x10                  	// #16
  42a464:	cmp	x11, x12
  42a468:	b.cs	42a480 <feof@plt+0x273a0>  // b.hs, b.nlast
  42a46c:	b	42a498 <feof@plt+0x273b8>
  42a470:	add	x11, x11, #0x2
  42a474:	mov	w10, #0x2                   	// #2
  42a478:	cmp	x11, x12
  42a47c:	b.cc	42a498 <feof@plt+0x273b8>  // b.lo, b.ul, b.last
  42a480:	mov	x13, xzr
  42a484:	mov	x14, xzr
  42a488:	b	42a658 <feof@plt+0x27578>
  42a48c:	mov	w10, #0xa                   	// #10
  42a490:	cmp	x11, x12
  42a494:	b.cs	42a480 <feof@plt+0x273a0>  // b.hs, b.nlast
  42a498:	neg	x3, x9
  42a49c:	mov	x4, #0xffffffffffffffff    	// #-1
  42a4a0:	subs	x16, x9, #0x40
  42a4a4:	lsr	x3, x4, x3
  42a4a8:	mov	w5, #0x3                   	// #3
  42a4ac:	lsl	x4, x4, x9
  42a4b0:	csinc	x7, xzr, x3, cs  // cs = hs, nlast
  42a4b4:	cmp	w10, #0x10
  42a4b8:	mvn	x3, x4
  42a4bc:	sub	x4, x7, x10
  42a4c0:	cinc	x5, x5, eq  // eq = none
  42a4c4:	cmp	w10, #0x2
  42a4c8:	mov	w6, #0x40                  	// #64
  42a4cc:	adrp	x18, 474000 <_obstack_memory_used@@Base+0x12838>
  42a4d0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  42a4d4:	udiv	x7, x4, x10
  42a4d8:	csinc	x4, x5, xzr, ne  // ne = any
  42a4dc:	mov	x14, xzr
  42a4e0:	mov	x13, xzr
  42a4e4:	mov	w15, wzr
  42a4e8:	add	x17, x19, #0x12
  42a4ec:	add	x18, x18, #0xe98
  42a4f0:	add	x1, x1, #0xc33
  42a4f4:	add	x7, x7, #0x1
  42a4f8:	sub	x5, x6, x4
  42a4fc:	mov	w6, #0x2                   	// #2
  42a500:	b	42a518 <feof@plt+0x27438>
  42a504:	madd	x13, x13, x10, x20
  42a508:	str	x13, [x19, #8]
  42a50c:	add	x11, x11, #0x1
  42a510:	cmp	x12, x11
  42a514:	b.eq	42a62c <feof@plt+0x2754c>  // b.none
  42a518:	ldrb	w20, [x11]
  42a51c:	ldrh	w21, [x18, x20, lsl #1]
  42a520:	tbnz	w21, #2, 42a530 <feof@plt+0x27450>
  42a524:	cmp	w10, #0x10
  42a528:	b.ne	42a5b8 <feof@plt+0x274d8>  // b.any
  42a52c:	tbz	w21, #8, 42a5b8 <feof@plt+0x274d8>
  42a530:	ldrb	w20, [x1, x20]
  42a534:	cmp	x13, x7
  42a538:	b.cc	42a504 <feof@plt+0x27424>  // b.lo, b.ul, b.last
  42a53c:	lsr	x7, x14, x5
  42a540:	lsl	x21, x14, x4
  42a544:	lsr	x23, x13, x5
  42a548:	cmp	x7, #0x0
  42a54c:	lsl	x22, x13, x4
  42a550:	lsl	x24, x13, #1
  42a554:	extr	x13, x14, x13, #63
  42a558:	orr	x14, x21, x23
  42a55c:	cset	w21, ne  // ne = any
  42a560:	cmp	w10, #0xa
  42a564:	csel	x23, x13, xzr, eq  // eq = none
  42a568:	csel	x13, x24, xzr, eq  // eq = none
  42a56c:	mvn	x7, x22
  42a570:	adds	x13, x13, x20
  42a574:	cset	w20, cs  // cs = hs, nlast
  42a578:	csinc	x24, x6, xzr, cs  // cs = hs, nlast
  42a57c:	cmp	x13, x7
  42a580:	csel	x20, x20, x24, ls  // ls = plast
  42a584:	mvn	x7, x14
  42a588:	add	x13, x13, x22
  42a58c:	add	x22, x20, x23
  42a590:	cmp	x22, x7
  42a594:	cset	w7, hi  // hi = pmore
  42a598:	cmp	x9, #0x41
  42a59c:	orr	w20, w21, w7
  42a5a0:	add	x14, x22, x14
  42a5a4:	b.cc	42a5cc <feof@plt+0x274ec>  // b.lo, b.ul, b.last
  42a5a8:	cmp	x16, #0x3f
  42a5ac:	b.hi	42a5fc <feof@plt+0x2751c>  // b.pmore
  42a5b0:	and	x7, x14, x3
  42a5b4:	b	42a5ec <feof@plt+0x2750c>
  42a5b8:	cmp	w20, #0x27
  42a5bc:	b.ne	42a62c <feof@plt+0x2754c>  // b.any
  42a5c0:	ldrb	w20, [x0, #1166]
  42a5c4:	cbnz	w20, 42a50c <feof@plt+0x2742c>
  42a5c8:	b	42a62c <feof@plt+0x2754c>
  42a5cc:	cmp	x9, #0x40
  42a5d0:	b.ne	42a5dc <feof@plt+0x274fc>  // b.any
  42a5d4:	mov	x7, xzr
  42a5d8:	b	42a5ec <feof@plt+0x2750c>
  42a5dc:	mov	x7, xzr
  42a5e0:	cmp	x13, x3
  42a5e4:	and	x13, x13, x3
  42a5e8:	b.hi	42a5f4 <feof@plt+0x27514>  // b.pmore
  42a5ec:	cmp	x7, x14
  42a5f0:	b.eq	42a5fc <feof@plt+0x2751c>  // b.none
  42a5f4:	mov	w20, #0x1                   	// #1
  42a5f8:	mov	x14, x7
  42a5fc:	ldr	w21, [sp, #8]
  42a600:	ldrh	w22, [sp, #12]
  42a604:	and	w15, w15, #0x1
  42a608:	orr	w15, w20, w15
  42a60c:	cmp	w15, #0x0
  42a610:	mov	x7, xzr
  42a614:	cset	w15, ne  // ne = any
  42a618:	stp	x14, x13, [x19]
  42a61c:	strb	w20, [x19, #17]
  42a620:	strh	w22, [x17, #4]
  42a624:	str	w21, [x17]
  42a628:	b	42a50c <feof@plt+0x2742c>
  42a62c:	tbnz	w2, #24, 42a658 <feof@plt+0x27578>
  42a630:	tbz	w15, #0, 42a658 <feof@plt+0x27578>
  42a634:	ldp	x20, x19, [sp, #64]
  42a638:	ldp	x22, x21, [sp, #48]
  42a63c:	ldp	x24, x23, [sp, #32]
  42a640:	ldp	x29, x30, [sp, #16]
  42a644:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a648:	add	x2, x2, #0xc4
  42a64c:	mov	w1, #0x2                   	// #2
  42a650:	add	sp, sp, #0x50
  42a654:	b	4288a0 <feof@plt+0x257c0>
  42a658:	cbnz	w8, 42a6b4 <feof@plt+0x275d4>
  42a65c:	ldrb	w8, [x0, #1160]
  42a660:	cbz	w8, 42a66c <feof@plt+0x2758c>
  42a664:	ldrb	w8, [x0, #16]
  42a668:	cbnz	w8, 42a6b4 <feof@plt+0x275d4>
  42a66c:	cmp	x9, #0x40
  42a670:	mov	x8, #0xffffffffffffffbf    	// #-65
  42a674:	csinv	x8, x8, xzr, hi  // hi = pmore
  42a678:	csel	x11, x14, x13, hi  // hi = pmore
  42a67c:	add	x8, x9, x8
  42a680:	lsr	x8, x11, x8
  42a684:	tbz	w8, #0, 42a6b4 <feof@plt+0x275d4>
  42a688:	cmp	w10, #0xa
  42a68c:	b.ne	42a6ac <feof@plt+0x275cc>  // b.any
  42a690:	ldrb	w8, [x0, #1152]
  42a694:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a698:	add	x2, x2, #0xef
  42a69c:	cmp	w8, #0x0
  42a6a0:	cset	w8, ne  // ne = any
  42a6a4:	lsl	w1, w8, #1
  42a6a8:	bl	4288a0 <feof@plt+0x257c0>
  42a6ac:	mov	w8, #0x1                   	// #1
  42a6b0:	strb	w8, [x19, #16]
  42a6b4:	ldp	x20, x19, [sp, #64]
  42a6b8:	ldp	x22, x21, [sp, #48]
  42a6bc:	ldp	x24, x23, [sp, #32]
  42a6c0:	ldp	x29, x30, [sp, #16]
  42a6c4:	add	sp, sp, #0x50
  42a6c8:	ret
  42a6cc:	sub	sp, sp, #0x1b0
  42a6d0:	stp	x29, x30, [sp, #336]
  42a6d4:	stp	x28, x27, [sp, #352]
  42a6d8:	stp	x26, x25, [sp, #368]
  42a6dc:	stp	x24, x23, [sp, #384]
  42a6e0:	stp	x22, x21, [sp, #400]
  42a6e4:	stp	x20, x19, [sp, #416]
  42a6e8:	stp	w1, wzr, [sp, #64]
  42a6ec:	ldr	x27, [x0, #1096]
  42a6f0:	add	x29, sp, #0x150
  42a6f4:	add	x9, x0, #0x50
  42a6f8:	mov	w8, #0x16                  	// #22
  42a6fc:	str	x9, [sp, #72]
  42a700:	sub	x9, x29, #0x40
  42a704:	str	wzr, [sp, #116]
  42a708:	str	wzr, [x0, #28]
  42a70c:	str	xzr, [x0, #432]
  42a710:	sub	x10, x29, #0x28
  42a714:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a718:	str	w8, [x27, #36]
  42a71c:	add	x8, x9, #0x12
  42a720:	mov	x19, x0
  42a724:	mov	w25, wzr
  42a728:	sub	x22, x29, #0x58
  42a72c:	add	x23, x23, #0xbf4
  42a730:	mov	x21, #0xffffffffffffffff    	// #-1
  42a734:	str	x8, [sp, #104]
  42a738:	add	x8, x10, #0x12
  42a73c:	str	x8, [sp, #96]
  42a740:	mov	w24, #0x1                   	// #1
  42a744:	mov	x28, x27
  42a748:	add	x27, x27, #0x8
  42a74c:	b	42a7ac <feof@plt+0x276cc>
  42a750:	lsl	x10, x21, x10
  42a754:	mov	x9, xzr
  42a758:	bic	x8, x8, x10
  42a75c:	ldr	w11, [sp, #120]
  42a760:	ldrh	w12, [sp, #124]
  42a764:	mov	w10, wzr
  42a768:	str	w11, [sp, #128]
  42a76c:	strh	w12, [sp, #132]
  42a770:	cmp	w10, #0x0
  42a774:	cset	w10, ne  // ne = any
  42a778:	stp	x9, x8, [x22, #24]
  42a77c:	ldrh	w8, [sp, #132]
  42a780:	ldr	w9, [sp, #128]
  42a784:	sturb	w10, [x29, #-48]
  42a788:	ldr	x10, [sp, #104]
  42a78c:	sturb	wzr, [x29, #-47]
  42a790:	strh	w8, [x10, #4]
  42a794:	str	w9, [x10]
  42a798:	ldr	x8, [x22, #40]
  42a79c:	ldur	q0, [x22, #24]
  42a7a0:	mov	w24, wzr
  42a7a4:	str	x8, [x27, #16]
  42a7a8:	str	q0, [x27]
  42a7ac:	add	x1, sp, #0x74
  42a7b0:	mov	x0, x19
  42a7b4:	add	w25, w25, #0x1
  42a7b8:	bl	438c38 <feof@plt+0x35b58>
  42a7bc:	ldrb	w20, [x0, #4]
  42a7c0:	ldr	w2, [sp, #116]
  42a7c4:	mov	x26, x0
  42a7c8:	sub	w8, w20, #0x37
  42a7cc:	cmp	w8, #0x6
  42a7d0:	b.cc	42a7f4 <feof@plt+0x27714>  // b.lo, b.ul, b.last
  42a7d4:	cmp	w20, #0x35
  42a7d8:	b.hi	42ac34 <feof@plt+0x27b54>  // b.pmore
  42a7dc:	adrp	x10, 46e000 <_obstack_memory_used@@Base+0xc838>
  42a7e0:	add	x10, x10, #0xb88
  42a7e4:	adr	x8, 42a7f4 <feof@plt+0x27714>
  42a7e8:	ldrh	w9, [x10, x20, lsl #1]
  42a7ec:	add	x8, x8, x9, lsl #2
  42a7f0:	br	x8
  42a7f4:	tbz	w24, #0, 42be50 <feof@plt+0x28d70>
  42a7f8:	sub	w8, w20, #0x25
  42a7fc:	cmp	w8, #0x17
  42a800:	stur	wzr, [x29, #-88]
  42a804:	b.hi	42bfec <feof@plt+0x28f0c>  // b.pmore
  42a808:	adr	x9, 42a818 <feof@plt+0x27738>
  42a80c:	ldrh	w10, [x23, x8, lsl #1]
  42a810:	add	x9, x9, x10, lsl #2
  42a814:	br	x9
  42a818:	sub	x2, x29, #0x28
  42a81c:	sub	x3, x29, #0x58
  42a820:	mov	x0, x19
  42a824:	mov	x1, x26
  42a828:	bl	4226a4 <feof@plt+0x1f5c4>
  42a82c:	ldur	w10, [x29, #-88]
  42a830:	mov	x9, xzr
  42a834:	mov	w8, w0
  42a838:	tbz	w0, #31, 42a770 <feof@plt+0x27690>
  42a83c:	cbnz	w10, 42a770 <feof@plt+0x27690>
  42a840:	ldr	w9, [sp, #128]
  42a844:	ldrh	w10, [sp, #132]
  42a848:	orr	x8, x8, #0xffffffff00000000
  42a84c:	str	w9, [sp, #120]
  42a850:	strh	w10, [sp, #124]
  42a854:	ldr	x10, [x19, #1208]
  42a858:	cmp	x10, #0x41
  42a85c:	b.cc	42a878 <feof@plt+0x27798>  // b.lo, b.ul, b.last
  42a860:	sub	x9, x10, #0x40
  42a864:	cmp	x9, #0x3f
  42a868:	b.hi	42a994 <feof@plt+0x278b4>  // b.pmore
  42a86c:	lsl	x9, x21, x9
  42a870:	mvn	x9, x9
  42a874:	b	42a75c <feof@plt+0x2767c>
  42a878:	cmp	x10, #0x40
  42a87c:	b.ne	42a750 <feof@plt+0x27670>  // b.any
  42a880:	mov	x9, xzr
  42a884:	b	42a75c <feof@plt+0x2767c>
  42a888:	mov	x0, x19
  42a88c:	mov	x1, x26
  42a890:	mov	w3, w2
  42a894:	mov	x2, xzr
  42a898:	mov	w20, w3
  42a89c:	bl	429ab8 <feof@plt+0x269d8>
  42a8a0:	mov	w24, w0
  42a8a4:	stur	w0, [x29, #-40]
  42a8a8:	tbz	w0, #24, 42a8c0 <feof@plt+0x277e0>
  42a8ac:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a8b0:	mov	w1, #0x3                   	// #3
  42a8b4:	mov	x0, x19
  42a8b8:	add	x2, x2, #0x238
  42a8bc:	bl	4288a0 <feof@plt+0x257c0>
  42a8c0:	and	w8, w24, #0xf
  42a8c4:	cmp	w8, #0x1
  42a8c8:	b.eq	42aa40 <feof@plt+0x27960>  // b.none
  42a8cc:	cmp	w8, #0x2
  42a8d0:	b.ne	42ab58 <feof@plt+0x27a78>  // b.any
  42a8d4:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a8d8:	mov	w2, w20
  42a8dc:	mov	w1, #0x3                   	// #3
  42a8e0:	mov	x0, x19
  42a8e4:	mov	w3, wzr
  42a8e8:	add	x4, x4, #0x268
  42a8ec:	b	42ab54 <feof@plt+0x27a74>
  42a8f0:	ldrb	w8, [x19, #18]
  42a8f4:	cbnz	w8, 42ab98 <feof@plt+0x27ab8>
  42a8f8:	ldrb	w8, [x19, #1154]
  42a8fc:	cbz	w8, 42ab78 <feof@plt+0x27a98>
  42a900:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a904:	mov	w1, #0x2                   	// #2
  42a908:	mov	x0, x19
  42a90c:	mov	w3, wzr
  42a910:	add	x4, x4, #0x2e5
  42a914:	bl	428d60 <feof@plt+0x25c80>
  42a918:	b	42ab98 <feof@plt+0x27ab8>
  42a91c:	ldr	x8, [x26, #8]
  42a920:	ldr	x9, [x19, #1248]
  42a924:	cmp	x8, x9
  42a928:	b.eq	42a99c <feof@plt+0x278bc>  // b.none
  42a92c:	ldr	x9, [x19, #1288]
  42a930:	cmp	x8, x9
  42a934:	b.eq	42aa5c <feof@plt+0x2797c>  // b.none
  42a938:	ldr	x9, [x19, #1296]
  42a93c:	cmp	x8, x9
  42a940:	b.eq	42ab64 <feof@plt+0x27a84>  // b.none
  42a944:	ldrb	w9, [x19, #1120]
  42a948:	cbz	w9, 42a964 <feof@plt+0x27884>
  42a94c:	ldr	x11, [x19, #1256]
  42a950:	cmp	x8, x11
  42a954:	b.eq	42abb4 <feof@plt+0x27ad4>  // b.none
  42a958:	ldr	x9, [x19, #1264]
  42a95c:	cmp	x8, x9
  42a960:	b.eq	42abb4 <feof@plt+0x27ad4>  // b.none
  42a964:	ldrb	w9, [x19, #1149]
  42a968:	cbz	w9, 42ab58 <feof@plt+0x27a78>
  42a96c:	ldr	w9, [x19, #28]
  42a970:	cbnz	w9, 42ab58 <feof@plt+0x27a78>
  42a974:	ldr	x5, [x8]
  42a978:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a97c:	mov	w1, #0xd                   	// #13
  42a980:	mov	x0, x19
  42a984:	mov	w3, wzr
  42a988:	add	x4, x4, #0x2c1
  42a98c:	bl	428e5c <feof@plt+0x25d7c>
  42a990:	b	42ab58 <feof@plt+0x27a78>
  42a994:	mov	x9, #0xffffffffffffffff    	// #-1
  42a998:	b	42a75c <feof@plt+0x2767c>
  42a99c:	ldrb	w8, [x19, #24]
  42a9a0:	ldr	x20, [x19, #136]
  42a9a4:	mov	x0, x19
  42a9a8:	add	w8, w8, #0x1
  42a9ac:	strb	w8, [x19, #24]
  42a9b0:	bl	4385d0 <feof@plt+0x354f0>
  42a9b4:	ldrb	w8, [x0, #4]
  42a9b8:	cmp	w8, #0x14
  42a9bc:	b.ne	42aa70 <feof@plt+0x27990>  // b.any
  42a9c0:	mov	x0, x19
  42a9c4:	bl	4385d0 <feof@plt+0x354f0>
  42a9c8:	ldrb	w8, [x0, #4]
  42a9cc:	mov	x21, x0
  42a9d0:	mov	w9, #0x1                   	// #1
  42a9d4:	cmp	w8, #0x35
  42a9d8:	b.eq	42aa80 <feof@plt+0x279a0>  // b.none
  42a9dc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42a9e0:	mov	w1, #0x3                   	// #3
  42a9e4:	mov	x0, x19
  42a9e8:	add	x2, x2, #0x365
  42a9ec:	bl	4288a0 <feof@plt+0x257c0>
  42a9f0:	ldrb	w8, [x21, #6]
  42a9f4:	tbz	w8, #4, 42abdc <feof@plt+0x27afc>
  42a9f8:	sturh	wzr, [x29, #-34]
  42a9fc:	ldrb	w8, [x21, #4]
  42aa00:	mov	x0, x19
  42aa04:	mov	x1, x21
  42aa08:	sturb	w8, [x29, #-36]
  42aa0c:	bl	433540 <feof@plt+0x30460>
  42aa10:	mov	x21, x0
  42aa14:	sub	x1, x29, #0x28
  42aa18:	mov	x0, x19
  42aa1c:	bl	433540 <feof@plt+0x30460>
  42aa20:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42aa24:	mov	x4, x0
  42aa28:	mov	w1, #0x3                   	// #3
  42aa2c:	mov	x0, x19
  42aa30:	add	x2, x2, #0x38f
  42aa34:	mov	x3, x21
  42aa38:	bl	4288a0 <feof@plt+0x257c0>
  42aa3c:	b	42abdc <feof@plt+0x27afc>
  42aa40:	tbnz	w24, #13, 42ab3c <feof@plt+0x27a5c>
  42aa44:	sub	x8, x29, #0x40
  42aa48:	mov	x0, x19
  42aa4c:	mov	x1, x26
  42aa50:	mov	w2, w24
  42aa54:	bl	42a3d8 <feof@plt+0x272f8>
  42aa58:	b	42a798 <feof@plt+0x276b8>
  42aa5c:	sub	x8, x29, #0x40
  42aa60:	mov	x0, x19
  42aa64:	mov	w1, wzr
  42aa68:	bl	42c0d8 <feof@plt+0x28ff8>
  42aa6c:	b	42a798 <feof@plt+0x276b8>
  42aa70:	mov	x21, x0
  42aa74:	mov	w9, wzr
  42aa78:	cmp	w8, #0x35
  42aa7c:	b.ne	42a9dc <feof@plt+0x278fc>  // b.any
  42aa80:	ldr	x21, [x21, #8]
  42aa84:	cbz	w9, 42aa9c <feof@plt+0x279bc>
  42aa88:	mov	x0, x19
  42aa8c:	bl	4385d0 <feof@plt+0x354f0>
  42aa90:	ldrb	w8, [x0, #4]
  42aa94:	cmp	w8, #0x15
  42aa98:	b.ne	42abc8 <feof@plt+0x27ae8>  // b.any
  42aa9c:	cbz	x21, 42abdc <feof@plt+0x27afc>
  42aaa0:	ldr	x8, [sp, #72]
  42aaa4:	cmp	x20, x8
  42aaa8:	b.ne	42aab8 <feof@plt+0x279d8>  // b.any
  42aaac:	ldr	x8, [x19, #136]
  42aab0:	cmp	x8, x20
  42aab4:	b.eq	42aad4 <feof@plt+0x279f4>  // b.none
  42aab8:	ldrb	w8, [x19, #1150]
  42aabc:	cbz	w8, 42aad4 <feof@plt+0x279f4>
  42aac0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42aac4:	mov	w1, #0x18                  	// #24
  42aac8:	mov	x0, x19
  42aacc:	add	x2, x2, #0x3be
  42aad0:	bl	428b00 <feof@plt+0x25a20>
  42aad4:	ldrh	w8, [x21, #18]
  42aad8:	and	w9, w8, #0x3
  42aadc:	cmp	w9, #0x2
  42aae0:	b.ne	42aaf8 <feof@plt+0x27a18>  // b.any
  42aae4:	ldr	x8, [x21, #24]
  42aae8:	ldrb	w9, [x8, #19]
  42aaec:	orr	w9, w9, #0x20
  42aaf0:	strb	w9, [x8, #19]
  42aaf4:	ldrh	w8, [x21, #18]
  42aaf8:	tbnz	w8, #7, 42ab08 <feof@plt+0x27a28>
  42aafc:	mov	x0, x19
  42ab00:	mov	x1, x21
  42ab04:	bl	439cc0 <feof@plt+0x36be0>
  42ab08:	ldrb	w8, [x19, #24]
  42ab0c:	str	x21, [x19, #432]
  42ab10:	sub	w8, w8, #0x1
  42ab14:	strb	w8, [x19, #24]
  42ab18:	sturh	wzr, [x29, #-48]
  42ab1c:	str	xzr, [x22, #24]
  42ab20:	ldrh	w9, [x21, #18]
  42ab24:	mov	x8, xzr
  42ab28:	tbz	w9, #1, 42abf4 <feof@plt+0x27b14>
  42ab2c:	mov	w8, #0xffffffff            	// #-1
  42ab30:	eor	w8, w8, w9, lsr #8
  42ab34:	and	x8, x8, #0x1
  42ab38:	b	42abf4 <feof@plt+0x27b14>
  42ab3c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ab40:	mov	w2, w20
  42ab44:	mov	w1, #0x3                   	// #3
  42ab48:	mov	x0, x19
  42ab4c:	mov	w3, wzr
  42ab50:	add	x4, x4, #0x295
  42ab54:	bl	428d60 <feof@plt+0x25c80>
  42ab58:	mov	w10, wzr
  42ab5c:	mov	x8, xzr
  42ab60:	b	42abac <feof@plt+0x27acc>
  42ab64:	sub	x8, x29, #0x40
  42ab68:	mov	w1, #0x1                   	// #1
  42ab6c:	mov	x0, x19
  42ab70:	bl	42c0d8 <feof@plt+0x28ff8>
  42ab74:	b	42a798 <feof@plt+0x276b8>
  42ab78:	ldrb	w8, [x19, #1132]
  42ab7c:	cbz	w8, 42ab98 <feof@plt+0x27ab8>
  42ab80:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ab84:	mov	w1, #0x1                   	// #1
  42ab88:	mov	x0, x19
  42ab8c:	mov	w3, wzr
  42ab90:	add	x4, x4, #0x304
  42ab94:	bl	428e5c <feof@plt+0x25d7c>
  42ab98:	sub	x1, x29, #0x28
  42ab9c:	mov	x0, x19
  42aba0:	bl	426194 <feof@plt+0x230b4>
  42aba4:	ldur	w8, [x29, #-40]
  42aba8:	ldur	w10, [x29, #-88]
  42abac:	mov	x9, xzr
  42abb0:	b	42a770 <feof@plt+0x27690>
  42abb4:	cmp	x8, x11
  42abb8:	mov	w10, wzr
  42abbc:	mov	x9, xzr
  42abc0:	cset	w8, eq  // eq = none
  42abc4:	b	42a770 <feof@plt+0x27690>
  42abc8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42abcc:	mov	w1, #0x3                   	// #3
  42abd0:	mov	x0, x19
  42abd4:	add	x2, x2, #0x349
  42abd8:	bl	4288a0 <feof@plt+0x257c0>
  42abdc:	ldrb	w9, [x19, #24]
  42abe0:	mov	x8, xzr
  42abe4:	sub	w9, w9, #0x1
  42abe8:	strb	w9, [x19, #24]
  42abec:	sturh	wzr, [x29, #-48]
  42abf0:	str	xzr, [x22, #24]
  42abf4:	str	x8, [x22, #32]
  42abf8:	mov	x21, #0xffffffffffffffff    	// #-1
  42abfc:	b	42a798 <feof@plt+0x276b8>
  42ac00:	cmp	w25, #0x1
  42ac04:	cset	w8, eq  // eq = none
  42ac08:	mov	w20, #0x1                   	// #1
  42ac0c:	str	w8, [sp, #68]
  42ac10:	b	42ac3c <feof@plt+0x27b5c>
  42ac14:	tst	w24, #0x1
  42ac18:	mov	w8, #0x1b                  	// #27
  42ac1c:	csel	w20, w8, w20, ne  // ne = any
  42ac20:	b	42ac3c <feof@plt+0x27b5c>
  42ac24:	tst	w24, #0x1
  42ac28:	mov	w8, #0x1c                  	// #28
  42ac2c:	csel	w20, w8, w20, ne  // ne = any
  42ac30:	b	42ac3c <feof@plt+0x27b5c>
  42ac34:	cmp	w20, #0x1b
  42ac38:	b.cs	42bea4 <feof@plt+0x28dc4>  // b.hs, b.nlast
  42ac3c:	mov	w8, #0x4002                	// #16386
  42ac40:	movk	w8, #0x1810, lsl #16
  42ac44:	mov	x27, x28
  42ac48:	lsr	x8, x8, x20
  42ac4c:	str	w2, [sp, #84]
  42ac50:	tbnz	w8, #0, 42ac7c <feof@plt+0x27b9c>
  42ac54:	tbz	w24, #0, 42acb0 <feof@plt+0x27bd0>
  42ac58:	subs	w8, w20, #0x15
  42ac5c:	b.eq	42ac84 <feof@plt+0x27ba4>  // b.none
  42ac60:	ldr	w2, [sp, #84]
  42ac64:	cmp	w20, #0x16
  42ac68:	b.ne	42ac98 <feof@plt+0x27bb8>  // b.any
  42ac6c:	ldr	w9, [x27, #36]
  42ac70:	cmp	w9, #0x16
  42ac74:	b.ne	42ac9c <feof@plt+0x27bbc>  // b.any
  42ac78:	b	42bfa4 <feof@plt+0x28ec4>
  42ac7c:	tbnz	w24, #0, 42acb0 <feof@plt+0x27bd0>
  42ac80:	b	42bf24 <feof@plt+0x28e44>
  42ac84:	ldr	w9, [x27, #36]
  42ac88:	ldr	w2, [sp, #84]
  42ac8c:	cmp	w9, #0x14
  42ac90:	b.ne	42ac9c <feof@plt+0x27bbc>  // b.any
  42ac94:	b	42bfd0 <feof@plt+0x28ef0>
  42ac98:	ldr	w9, [x27, #36]
  42ac9c:	orr	w9, w9, #0x2
  42aca0:	cmp	w9, #0x16
  42aca4:	b.ne	42bf54 <feof@plt+0x28e74>  // b.any
  42aca8:	cmp	w8, #0x2
  42acac:	b.cs	42bf70 <feof@plt+0x28e90>  // b.hs, b.nlast
  42acb0:	mov	x21, x27
  42acb4:	ldr	w3, [x21, #36]!
  42acb8:	sub	w8, w3, #0x1
  42acbc:	cmp	w8, #0x1b
  42acc0:	b.ls	42ace0 <feof@plt+0x27c00>  // b.plast
  42acc4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42acc8:	mov	w1, #0x4                   	// #4
  42accc:	mov	x0, x19
  42acd0:	add	x2, x2, #0x440
  42acd4:	bl	4288a0 <feof@plt+0x257c0>
  42acd8:	mov	x27, xzr
  42acdc:	b	42ace8 <feof@plt+0x27c08>
  42ace0:	cmp	w20, #0x14
  42ace4:	b.ne	42ad20 <feof@plt+0x27c40>  // b.any
  42ace8:	ldr	w2, [sp, #84]
  42acec:	mov	x21, #0xffffffffffffffff    	// #-1
  42acf0:	cbz	x27, 42be80 <feof@plt+0x28da0>
  42acf4:	cmp	w20, #0x16
  42acf8:	b.eq	42bec4 <feof@plt+0x28de4>  // b.none
  42acfc:	sub	w8, w20, #0xf
  42ad00:	cmp	w8, #0x6
  42ad04:	b.hi	42be04 <feof@plt+0x28d24>  // b.pmore
  42ad08:	adrp	x11, 46e000 <_obstack_memory_used@@Base+0xc838>
  42ad0c:	add	x11, x11, #0xc5c
  42ad10:	adr	x9, 42a744 <feof@plt+0x27664>
  42ad14:	ldrh	w10, [x11, x8, lsl #1]
  42ad18:	add	x9, x9, x10, lsl #2
  42ad1c:	br	x9
  42ad20:	adrp	x10, 46e000 <_obstack_memory_used@@Base+0xc838>
  42ad24:	lsl	x8, x20, #1
  42ad28:	add	x10, x10, #0xc6a
  42ad2c:	lsl	x9, x3, #1
  42ad30:	ldrb	w8, [x10, x8]
  42ad34:	ldrb	w9, [x10, x9]
  42ad38:	mov	w10, #0xbffc                	// #49148
  42ad3c:	movk	w10, #0x78d, lsl #16
  42ad40:	lsr	x10, x10, x20
  42ad44:	ldr	w2, [sp, #84]
  42ad48:	and	w10, w10, #0x1
  42ad4c:	sub	w28, w8, w10
  42ad50:	cmp	w28, w9
  42ad54:	b.cs	42bcfc <feof@plt+0x28c1c>  // b.hs, b.nlast
  42ad58:	str	w28, [sp, #52]
  42ad5c:	str	w25, [sp, #32]
  42ad60:	b	42ad94 <feof@plt+0x27cb4>
  42ad64:	ldr	w3, [x27, #-4]!
  42ad68:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  42ad6c:	add	x9, x9, #0xc6a
  42ad70:	ldr	w2, [sp, #84]
  42ad74:	lsl	x8, x3, #1
  42ad78:	ldrb	w8, [x9, x8]
  42ad7c:	mov	x21, x27
  42ad80:	mov	x27, x23
  42ad84:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0xc838>
  42ad88:	cmp	w28, w8
  42ad8c:	add	x23, x23, #0xbf4
  42ad90:	b.cs	42bcfc <feof@plt+0x28c1c>  // b.hs, b.nlast
  42ad94:	ldrb	w8, [x19, #1141]
  42ad98:	cbz	w8, 42ae7c <feof@plt+0x27d9c>
  42ad9c:	mov	w8, #0xffc                 	// #4092
  42ada0:	movk	w8, #0x604, lsl #16
  42ada4:	lsr	x8, x8, x3
  42ada8:	tbz	w8, #0, 42ae7c <feof@plt+0x27d9c>
  42adac:	ldrb	w9, [x27, #24]
  42adb0:	ldurb	w8, [x27, #-16]
  42adb4:	cmp	w9, w8
  42adb8:	b.eq	42ae7c <feof@plt+0x27d9c>  // b.none
  42adbc:	ldr	x8, [x19, #1208]
  42adc0:	cmp	x8, #0x40
  42adc4:	cbz	w9, 42ae20 <feof@plt+0x27d40>
  42adc8:	mov	x9, #0xffffffffffffffe8    	// #-24
  42adcc:	mov	x10, #0xffffffffffffffe0    	// #-32
  42add0:	csel	x9, x10, x9, hi  // hi = pmore
  42add4:	ldr	x9, [x27, x9]
  42add8:	mov	x10, #0xffffffffffffffbf    	// #-65
  42addc:	csinv	x10, x10, xzr, hi  // hi = pmore
  42ade0:	add	x8, x8, x10
  42ade4:	lsr	x8, x9, x8
  42ade8:	tbz	w8, #0, 42ae7c <feof@plt+0x27d9c>
  42adec:	ldur	w8, [x27, #-8]
  42adf0:	ldr	x1, [x27]
  42adf4:	mov	x0, x19
  42adf8:	str	w8, [sp, #88]
  42adfc:	bl	433540 <feof@plt+0x30460>
  42ae00:	ldr	w2, [sp, #88]
  42ae04:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ae08:	mov	x5, x0
  42ae0c:	mov	x0, x19
  42ae10:	mov	w1, wzr
  42ae14:	mov	w3, wzr
  42ae18:	add	x4, x4, #0x4d3
  42ae1c:	b	42ae74 <feof@plt+0x27d94>
  42ae20:	mov	w9, #0x10                  	// #16
  42ae24:	mov	w10, #0x8                   	// #8
  42ae28:	csel	x9, x10, x9, hi  // hi = pmore
  42ae2c:	ldr	x9, [x27, x9]
  42ae30:	mov	x10, #0xffffffffffffffbf    	// #-65
  42ae34:	csinv	x10, x10, xzr, hi  // hi = pmore
  42ae38:	add	x8, x8, x10
  42ae3c:	lsr	x8, x9, x8
  42ae40:	tbz	w8, #0, 42ae7c <feof@plt+0x27d9c>
  42ae44:	ldr	w8, [x27, #32]
  42ae48:	ldr	x1, [x27]
  42ae4c:	mov	x0, x19
  42ae50:	str	w8, [sp, #88]
  42ae54:	bl	433540 <feof@plt+0x30460>
  42ae58:	ldr	w2, [sp, #88]
  42ae5c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ae60:	mov	x5, x0
  42ae64:	mov	x0, x19
  42ae68:	mov	w1, wzr
  42ae6c:	mov	w3, wzr
  42ae70:	add	x4, x4, #0x507
  42ae74:	bl	428d60 <feof@plt+0x25c80>
  42ae78:	ldr	w2, [sp, #84]
  42ae7c:	ldr	w8, [x21]
  42ae80:	sub	w9, w8, #0x1
  42ae84:	cmp	w9, #0x1b
  42ae88:	b.hi	42bd4c <feof@plt+0x28c6c>  // b.pmore
  42ae8c:	adrp	x12, 46e000 <_obstack_memory_used@@Base+0xc838>
  42ae90:	add	x12, x12, #0xc24
  42ae94:	adr	x10, 42aea4 <feof@plt+0x27dc4>
  42ae98:	ldrh	w11, [x12, x9, lsl #1]
  42ae9c:	add	x10, x10, x11, lsl #2
  42aea0:	br	x10
  42aea4:	ldur	x8, [x27, #-16]
  42aea8:	ldur	q0, [x27, #-32]
  42aeac:	sub	x1, x29, #0x80
  42aeb0:	sub	x2, x29, #0xa0
  42aeb4:	stur	x8, [x29, #-112]
  42aeb8:	stur	q0, [x29, #-128]
  42aebc:	ldr	x8, [x27, #24]
  42aec0:	ldur	q0, [x27, #8]
  42aec4:	mov	x0, x19
  42aec8:	stur	x8, [x29, #-144]
  42aecc:	stur	q0, [x29, #-160]
  42aed0:	ldr	w3, [x21]
  42aed4:	sub	x8, x29, #0x28
  42aed8:	bl	42c264 <feof@plt+0x29184>
  42aedc:	ldr	x8, [x22, #64]
  42aee0:	ldr	q0, [x22, #48]
  42aee4:	stur	x8, [x27, #-16]
  42aee8:	stur	q0, [x27, #-32]
  42aeec:	b	42bcb4 <feof@plt+0x28bd4>
  42aef0:	ldrh	w9, [x27, #30]
  42aef4:	ldur	w21, [x27, #26]
  42aef8:	ldp	x23, x28, [x27, #8]
  42aefc:	str	x27, [sp, #56]
  42af00:	ldrb	w27, [x27, #24]
  42af04:	cmp	w8, #0xe
  42af08:	bfi	x21, x9, #32, #32
  42af0c:	b.eq	42b14c <feof@plt+0x2806c>  // b.none
  42af10:	cmp	w8, #0x1c
  42af14:	b.eq	42b180 <feof@plt+0x280a0>  // b.none
  42af18:	cmp	w8, #0x1b
  42af1c:	b.ne	42b1b8 <feof@plt+0x280d8>  // b.any
  42af20:	ldrb	w8, [x19, #1138]
  42af24:	cbz	w8, 42b47c <feof@plt+0x2839c>
  42af28:	ldr	w8, [x19, #28]
  42af2c:	cbz	w8, 42b4a4 <feof@plt+0x283c4>
  42af30:	mov	w8, wzr
  42af34:	b	42b47c <feof@plt+0x2839c>
  42af38:	mov	x8, x27
  42af3c:	ldr	w10, [x8, #-14]!
  42af40:	ldrh	w12, [x8, #4]
  42af44:	ldur	x9, [x8, #-18]
  42af48:	ldur	x11, [x8, #-10]
  42af4c:	ldurb	w14, [x8, #-2]
  42af50:	str	w10, [sp, #168]
  42af54:	strh	w12, [sp, #172]
  42af58:	ldrb	w15, [x8, #38]
  42af5c:	ldur	x10, [x8, #22]
  42af60:	ldur	x12, [x8, #30]
  42af64:	ldr	w13, [x21]
  42af68:	orr	w14, w15, w14
  42af6c:	cbnz	w14, 42b27c <feof@plt+0x2819c>
  42af70:	ldr	x14, [x19, #1208]
  42af74:	subs	x15, x14, #0x41
  42af78:	b.cc	42b250 <feof@plt+0x28170>  // b.lo, b.ul, b.last
  42af7c:	mov	w14, #0x1                   	// #1
  42af80:	lsl	x15, x14, x15
  42af84:	and	x14, x15, x9
  42af88:	and	x15, x15, x10
  42af8c:	b	42b264 <feof@plt+0x28184>
  42af90:	mov	x8, x27
  42af94:	ldr	w9, [x8, #-14]!
  42af98:	ldrh	w12, [x8, #4]
  42af9c:	ldurb	w13, [x8, #-2]
  42afa0:	ldur	x10, [x8, #-18]
  42afa4:	ldur	x11, [x8, #-10]
  42afa8:	str	w9, [sp, #152]
  42afac:	strh	w12, [sp, #156]
  42afb0:	ldrb	w9, [x8, #38]
  42afb4:	ldr	w14, [x21]
  42afb8:	cmp	w13, #0x0
  42afbc:	ldur	x12, [x8, #22]
  42afc0:	ldur	x13, [x8, #30]
  42afc4:	csinc	w9, w9, wzr, eq  // eq = none
  42afc8:	cmp	w14, #0xa
  42afcc:	b.eq	42b1d4 <feof@plt+0x280f4>  // b.none
  42afd0:	cmp	w14, #0x9
  42afd4:	b.ne	42b1e0 <feof@plt+0x28100>  // b.any
  42afd8:	and	x11, x13, x11
  42afdc:	and	x10, x12, x10
  42afe0:	b	42b1e8 <feof@plt+0x28108>
  42afe4:	mov	x23, x27
  42afe8:	ldr	w8, [x23, #-14]!
  42afec:	ldrh	w9, [x23, #4]
  42aff0:	ldur	x4, [x23, #-18]
  42aff4:	ldur	x16, [x23, #-10]
  42aff8:	ldurb	w3, [x23, #-2]
  42affc:	ldurb	w17, [x23, #-1]
  42b000:	str	w8, [sp, #136]
  42b004:	strh	w9, [sp, #140]
  42b008:	ldur	x10, [x23, #22]
  42b00c:	ldur	x11, [x23, #30]
  42b010:	ldrh	w9, [x23, #44]
  42b014:	ldr	w8, [x23, #40]
  42b018:	ldr	w1, [x21]
  42b01c:	ldur	w2, [x23, #46]
  42b020:	cbz	w3, 42b2f8 <feof@plt+0x28218>
  42b024:	ldr	x0, [x19, #1208]
  42b028:	b	42b308 <feof@plt+0x28228>
  42b02c:	ldurh	w8, [x27, #-10]
  42b030:	ldur	w9, [x27, #-14]
  42b034:	ldp	x10, x11, [x27, #-32]
  42b038:	strh	w8, [sp, #164]
  42b03c:	str	w9, [sp, #160]
  42b040:	ldp	x12, x13, [x27, #8]
  42b044:	ldr	w14, [x21]
  42b048:	sturh	w8, [x29, #-36]
  42b04c:	stur	w9, [x29, #-40]
  42b050:	cmp	x11, x13
  42b054:	cset	w8, eq  // eq = none
  42b058:	cmp	x10, x12
  42b05c:	cset	w9, eq  // eq = none
  42b060:	cmp	w14, #0x18
  42b064:	and	w8, w9, w8
  42b068:	cset	w9, eq  // eq = none
  42b06c:	eor	w8, w9, w8
  42b070:	sturh	wzr, [x27, #-16]
  42b074:	stp	xzr, x8, [x27, #-32]
  42b078:	ldurh	w8, [x29, #-36]
  42b07c:	ldur	w9, [x29, #-40]
  42b080:	sturh	w8, [x27, #-10]
  42b084:	stur	w9, [x27, #-14]
  42b088:	b	42bcb4 <feof@plt+0x28bd4>
  42b08c:	ldp	x12, x14, [x27, #-32]
  42b090:	ldurb	w8, [x27, #-16]
  42b094:	ldp	x11, x13, [x27, #8]
  42b098:	cbz	w8, 42b394 <feof@plt+0x282b4>
  42b09c:	ldr	x8, [x19, #1208]
  42b0a0:	mov	w9, wzr
  42b0a4:	mov	w10, #0x1                   	// #1
  42b0a8:	mov	x6, #0xffffffffffffffff    	// #-1
  42b0ac:	b	42baa0 <feof@plt+0x289c0>
  42b0b0:	ldp	x9, x8, [x27, #-32]
  42b0b4:	orr	x9, x9, x8
  42b0b8:	sub	x8, x27, #0x28
  42b0bc:	cbnz	x9, 42b208 <feof@plt+0x28128>
  42b0c0:	ldr	w10, [x19, #28]
  42b0c4:	sub	w10, w10, #0x1
  42b0c8:	str	w10, [x19, #28]
  42b0cc:	b	42b218 <feof@plt+0x28138>
  42b0d0:	ldp	x9, x8, [x27, #-32]
  42b0d4:	orr	x9, x9, x8
  42b0d8:	sub	x8, x27, #0x28
  42b0dc:	cbz	x9, 42b208 <feof@plt+0x28128>
  42b0e0:	ldr	w9, [x19, #28]
  42b0e4:	sub	w9, w9, #0x1
  42b0e8:	str	w9, [x19, #28]
  42b0ec:	mov	w9, #0x1                   	// #1
  42b0f0:	b	42b218 <feof@plt+0x28138>
  42b0f4:	mov	x8, x27
  42b0f8:	ldr	x9, [x8, #-72]!
  42b0fc:	ldr	x10, [x8, #8]
  42b100:	orr	x9, x9, x10
  42b104:	cbz	x9, 42b118 <feof@plt+0x28038>
  42b108:	ldr	w9, [x19, #28]
  42b10c:	sub	w9, w9, #0x1
  42b110:	str	w9, [x19, #28]
  42b114:	mov	x9, #0xffffffffffffffff    	// #-1
  42b118:	mov	w10, #0x28                  	// #40
  42b11c:	madd	x9, x9, x10, x27
  42b120:	ldr	x10, [x9, #24]
  42b124:	ldur	q0, [x9, #8]
  42b128:	str	x10, [x8, #16]
  42b12c:	str	q0, [x8], #-8
  42b130:	ldr	w9, [x9, #32]
  42b134:	ldurb	w10, [x27, #-16]
  42b138:	stur	w9, [x27, #-48]
  42b13c:	cbz	w10, 42b3b0 <feof@plt+0x282d0>
  42b140:	mov	w9, #0x1                   	// #1
  42b144:	sturb	w9, [x27, #-56]
  42b148:	b	42b228 <feof@plt+0x28148>
  42b14c:	ldr	x9, [x19, #1208]
  42b150:	mvn	x28, x28
  42b154:	cmp	x9, #0x41
  42b158:	b.cc	42b340 <feof@plt+0x28260>  // b.lo, b.ul, b.last
  42b15c:	sub	x9, x9, #0x40
  42b160:	cmp	x9, #0x3f
  42b164:	mvn	x23, x23
  42b168:	mov	w8, wzr
  42b16c:	b.hi	42b47c <feof@plt+0x2839c>  // b.pmore
  42b170:	mov	x10, #0xffffffffffffffff    	// #-1
  42b174:	lsl	x9, x10, x9
  42b178:	bic	x23, x23, x9
  42b17c:	b	42b47c <feof@plt+0x2839c>
  42b180:	ldr	x8, [x19, #1208]
  42b184:	neg	x9, x23
  42b188:	cmp	x28, #0x0
  42b18c:	csinv	x10, x9, x23, eq  // eq = none
  42b190:	cmp	x8, #0x41
  42b194:	neg	x9, x28
  42b198:	b.cc	42b354 <feof@plt+0x28274>  // b.lo, b.ul, b.last
  42b19c:	sub	x8, x8, #0x40
  42b1a0:	cmp	x8, #0x3f
  42b1a4:	b.hi	42b444 <feof@plt+0x28364>  // b.pmore
  42b1a8:	mov	x11, #0xffffffffffffffff    	// #-1
  42b1ac:	lsl	x8, x11, x8
  42b1b0:	bic	x10, x10, x8
  42b1b4:	b	42b444 <feof@plt+0x28364>
  42b1b8:	orr	x9, x28, x23
  42b1bc:	cmp	x9, #0x0
  42b1c0:	mov	w27, wzr
  42b1c4:	mov	w8, wzr
  42b1c8:	cset	w28, eq  // eq = none
  42b1cc:	mov	x23, xzr
  42b1d0:	b	42b47c <feof@plt+0x2839c>
  42b1d4:	orr	x11, x13, x11
  42b1d8:	orr	x10, x12, x10
  42b1dc:	b	42b1e8 <feof@plt+0x28108>
  42b1e0:	eor	x11, x13, x11
  42b1e4:	eor	x10, x12, x10
  42b1e8:	ldr	w12, [sp, #152]
  42b1ec:	ldrh	w13, [sp, #156]
  42b1f0:	stur	w12, [x29, #-40]
  42b1f4:	sturh	w13, [x29, #-36]
  42b1f8:	stp	x10, x11, [x27, #-32]
  42b1fc:	sturb	w9, [x27, #-16]
  42b200:	sturb	wzr, [x27, #-15]
  42b204:	b	42b380 <feof@plt+0x282a0>
  42b208:	ldp	x10, x9, [x27, #8]
  42b20c:	orr	x9, x10, x9
  42b210:	cmp	x9, #0x0
  42b214:	cset	w9, ne  // ne = any
  42b218:	ldr	w10, [x27, #32]
  42b21c:	stp	xzr, x9, [x27, #-32]
  42b220:	sturh	wzr, [x27, #-16]
  42b224:	stur	w10, [x27, #-8]
  42b228:	mov	x21, x8
  42b22c:	ldr	w3, [x21, #36]!
  42b230:	adrp	x9, 46e000 <_obstack_memory_used@@Base+0xc838>
  42b234:	mov	x27, x8
  42b238:	add	x9, x9, #0xc6a
  42b23c:	lsl	x8, x3, #1
  42b240:	ldrb	w8, [x9, x8]
  42b244:	cmp	w28, w8
  42b248:	b.cc	42ad94 <feof@plt+0x27cb4>  // b.lo, b.ul, b.last
  42b24c:	b	42bcfc <feof@plt+0x28c1c>
  42b250:	sub	x14, x14, #0x1
  42b254:	mov	w15, #0x1                   	// #1
  42b258:	lsl	x15, x15, x14
  42b25c:	and	x14, x15, x11
  42b260:	and	x15, x15, x12
  42b264:	cmp	x14, #0x0
  42b268:	cset	w14, eq  // eq = none
  42b26c:	cmp	x15, #0x0
  42b270:	cset	w15, eq  // eq = none
  42b274:	eor	w15, w14, w15
  42b278:	tbnz	w15, #0, 42b288 <feof@plt+0x281a8>
  42b27c:	cmp	x9, x10
  42b280:	b.ls	42b2a8 <feof@plt+0x281c8>  // b.plast
  42b284:	mov	w14, #0x1                   	// #1
  42b288:	cmp	w13, #0x2
  42b28c:	b.eq	42b2c0 <feof@plt+0x281e0>  // b.none
  42b290:	cmp	w13, #0x19
  42b294:	b.eq	42b368 <feof@plt+0x28288>  // b.none
  42b298:	cmp	w13, #0x3
  42b29c:	b.ne	42b2dc <feof@plt+0x281fc>  // b.any
  42b2a0:	eor	w14, w14, #0x1
  42b2a4:	b	42b368 <feof@plt+0x28288>
  42b2a8:	cset	w14, eq  // eq = none
  42b2ac:	cmp	x11, x12
  42b2b0:	cset	w15, cs  // cs = hs, nlast
  42b2b4:	and	w14, w14, w15
  42b2b8:	cmp	w13, #0x2
  42b2bc:	b.ne	42b290 <feof@plt+0x281b0>  // b.any
  42b2c0:	cbz	w14, 42b368 <feof@plt+0x28288>
  42b2c4:	cmp	x11, x12
  42b2c8:	cset	w11, ne  // ne = any
  42b2cc:	cmp	x9, x10
  42b2d0:	cset	w9, ne  // ne = any
  42b2d4:	orr	w14, w9, w11
  42b2d8:	b	42b368 <feof@plt+0x28288>
  42b2dc:	cbz	w14, 42b364 <feof@plt+0x28284>
  42b2e0:	cmp	x11, x12
  42b2e4:	cset	w11, eq  // eq = none
  42b2e8:	cmp	x9, x10
  42b2ec:	cset	w9, eq  // eq = none
  42b2f0:	and	w14, w9, w11
  42b2f4:	b	42b368 <feof@plt+0x28288>
  42b2f8:	ldrb	w12, [x23, #38]
  42b2fc:	ldr	x0, [x19, #1208]
  42b300:	mov	x18, #0xffffffffffffffff    	// #-1
  42b304:	cbz	w12, 42b3c4 <feof@plt+0x282e4>
  42b308:	str	wzr, [sp, #8]
  42b30c:	mov	w15, wzr
  42b310:	mov	w14, #0x1                   	// #1
  42b314:	cbz	x10, 42b614 <feof@plt+0x28534>
  42b318:	sub	x12, x0, #0x41
  42b31c:	mov	w13, #0x1                   	// #1
  42b320:	lsl	x13, x13, x12
  42b324:	mov	x12, x0
  42b328:	sub	x12, x12, #0x1
  42b32c:	tst	x13, x10
  42b330:	lsr	x13, x13, #1
  42b334:	b.eq	42b328 <feof@plt+0x28248>  // b.none
  42b338:	str	x27, [sp, #56]
  42b33c:	b	42b650 <feof@plt+0x28570>
  42b340:	cmp	x9, #0x40
  42b344:	b.ne	42b41c <feof@plt+0x2833c>  // b.any
  42b348:	mov	x23, xzr
  42b34c:	mov	w8, wzr
  42b350:	b	42b47c <feof@plt+0x2839c>
  42b354:	cmp	x8, #0x40
  42b358:	b.ne	42b434 <feof@plt+0x28354>  // b.any
  42b35c:	mov	x10, xzr
  42b360:	b	42b444 <feof@plt+0x28364>
  42b364:	mov	w14, #0x1                   	// #1
  42b368:	ldr	w9, [sp, #168]
  42b36c:	ldrh	w10, [sp, #172]
  42b370:	stur	w9, [x29, #-40]
  42b374:	sturh	w10, [x29, #-36]
  42b378:	stp	xzr, x14, [x27, #-32]
  42b37c:	sturh	wzr, [x27, #-16]
  42b380:	ldurh	w9, [x29, #-36]
  42b384:	ldur	w10, [x29, #-40]
  42b388:	strh	w9, [x8, #4]
  42b38c:	str	w10, [x8]
  42b390:	b	42bcb4 <feof@plt+0x28bd4>
  42b394:	ldrb	w9, [x27, #24]
  42b398:	ldr	x8, [x19, #1208]
  42b39c:	mov	x6, #0xffffffffffffffff    	// #-1
  42b3a0:	cbz	w9, 42b4c0 <feof@plt+0x283e0>
  42b3a4:	mov	w9, wzr
  42b3a8:	mov	w10, #0x1                   	// #1
  42b3ac:	b	42baa0 <feof@plt+0x289c0>
  42b3b0:	ldrb	w9, [x27, #24]
  42b3b4:	cmp	w9, #0x0
  42b3b8:	cset	w9, ne  // ne = any
  42b3bc:	sturb	w9, [x27, #-56]
  42b3c0:	b	42b228 <feof@plt+0x28148>
  42b3c4:	subs	x14, x0, #0x40
  42b3c8:	mov	x12, #0xffffffffffffffbf    	// #-65
  42b3cc:	csinv	x12, x12, xzr, hi  // hi = pmore
  42b3d0:	csel	x13, x4, x16, hi  // hi = pmore
  42b3d4:	add	x12, x0, x12
  42b3d8:	lsr	x12, x13, x12
  42b3dc:	tbz	w12, #0, 42b50c <feof@plt+0x2842c>
  42b3e0:	ldr	w12, [sp, #136]
  42b3e4:	ldrh	w15, [sp, #140]
  42b3e8:	neg	x13, x4
  42b3ec:	cmp	x16, #0x0
  42b3f0:	csinv	x13, x13, x4, eq  // eq = none
  42b3f4:	cmp	x0, #0x41
  42b3f8:	str	w12, [sp, #128]
  42b3fc:	neg	x12, x16
  42b400:	strh	w15, [sp, #132]
  42b404:	b.cc	42b514 <feof@plt+0x28434>  // b.lo, b.ul, b.last
  42b408:	cmp	x14, #0x3f
  42b40c:	b.hi	42b550 <feof@plt+0x28470>  // b.pmore
  42b410:	lsl	x14, x18, x14
  42b414:	bic	x13, x13, x14
  42b418:	b	42b550 <feof@plt+0x28470>
  42b41c:	mov	x10, #0xffffffffffffffff    	// #-1
  42b420:	lsl	x9, x10, x9
  42b424:	mov	x23, xzr
  42b428:	mov	w8, wzr
  42b42c:	bic	x28, x28, x9
  42b430:	b	42b47c <feof@plt+0x2839c>
  42b434:	mov	x11, #0xffffffffffffffff    	// #-1
  42b438:	lsl	x8, x11, x8
  42b43c:	mov	x10, xzr
  42b440:	bic	x9, x9, x8
  42b444:	cmp	w27, #0x0
  42b448:	cset	w11, eq  // eq = none
  42b44c:	cmp	x9, x28
  42b450:	orr	x8, x10, x9
  42b454:	cset	w12, eq  // eq = none
  42b458:	cmp	x10, x23
  42b45c:	and	w11, w11, w12
  42b460:	cset	w12, eq  // eq = none
  42b464:	cmp	x8, #0x0
  42b468:	and	w8, w12, w11
  42b46c:	cset	w11, ne  // ne = any
  42b470:	and	w8, w11, w8
  42b474:	mov	x23, x10
  42b478:	mov	x28, x9
  42b47c:	ldr	x9, [sp, #56]
  42b480:	stp	x23, x28, [x9, #-32]
  42b484:	ldr	w28, [sp, #52]
  42b488:	sturb	w8, [x9, #-15]
  42b48c:	lsr	x8, x21, #32
  42b490:	sturb	w27, [x9, #-16]
  42b494:	mov	x27, x9
  42b498:	stur	w21, [x9, #-14]
  42b49c:	sturh	w8, [x9, #-10]
  42b4a0:	b	42bcb4 <feof@plt+0x28bd4>
  42b4a4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42b4a8:	mov	w1, #0x6                   	// #6
  42b4ac:	mov	x0, x19
  42b4b0:	add	x2, x2, #0x53c
  42b4b4:	bl	4289d0 <feof@plt+0x258f0>
  42b4b8:	mov	w8, wzr
  42b4bc:	b	42b47c <feof@plt+0x2839c>
  42b4c0:	subs	x15, x8, #0x40
  42b4c4:	mov	x9, #0xffffffffffffffbf    	// #-65
  42b4c8:	csinv	x9, x9, xzr, hi  // hi = pmore
  42b4cc:	csel	x10, x12, x14, hi  // hi = pmore
  42b4d0:	add	x9, x8, x9
  42b4d4:	lsr	x9, x10, x9
  42b4d8:	tbz	w9, #0, 42b524 <feof@plt+0x28444>
  42b4dc:	neg	x9, x12
  42b4e0:	cmp	x14, #0x0
  42b4e4:	csinv	x12, x9, x12, eq  // eq = none
  42b4e8:	cmp	x8, #0x41
  42b4ec:	neg	x14, x14
  42b4f0:	b.cc	42b534 <feof@plt+0x28454>  // b.lo, b.ul, b.last
  42b4f4:	cmp	x15, #0x3f
  42b4f8:	b.hi	42ba28 <feof@plt+0x28948>  // b.pmore
  42b4fc:	lsl	x10, x6, x15
  42b500:	mov	w9, #0x1                   	// #1
  42b504:	bic	x12, x12, x10
  42b508:	b	42ba2c <feof@plt+0x2894c>
  42b50c:	mov	w15, wzr
  42b510:	b	42b590 <feof@plt+0x284b0>
  42b514:	cmp	x0, #0x40
  42b518:	b.ne	42b544 <feof@plt+0x28464>  // b.any
  42b51c:	mov	x13, xzr
  42b520:	b	42b550 <feof@plt+0x28470>
  42b524:	cmp	x8, #0x40
  42b528:	mov	w9, wzr
  42b52c:	b.hi	42ba2c <feof@plt+0x2894c>  // b.pmore
  42b530:	b	42ba48 <feof@plt+0x28968>
  42b534:	cmp	x8, #0x40
  42b538:	b.ne	42ba38 <feof@plt+0x28958>  // b.any
  42b53c:	mov	x12, xzr
  42b540:	b	42ba44 <feof@plt+0x28964>
  42b544:	lsl	x14, x18, x0
  42b548:	mov	x13, xzr
  42b54c:	bic	x12, x12, x14
  42b550:	cmp	x12, x16
  42b554:	orr	x14, x13, x12
  42b558:	ldr	w15, [sp, #128]
  42b55c:	cset	w16, eq  // eq = none
  42b560:	cmp	x13, x4
  42b564:	cset	w17, eq  // eq = none
  42b568:	cmp	x14, #0x0
  42b56c:	ldrh	w14, [sp, #132]
  42b570:	and	w16, w16, w17
  42b574:	cset	w17, ne  // ne = any
  42b578:	and	w17, w17, w16
  42b57c:	str	w15, [sp, #136]
  42b580:	mov	w15, #0x1                   	// #1
  42b584:	mov	x16, x12
  42b588:	mov	x4, x13
  42b58c:	strh	w14, [sp, #140]
  42b590:	subs	x12, x0, #0x40
  42b594:	mov	x13, #0xffffffffffffffbf    	// #-65
  42b598:	csinv	x13, x13, xzr, hi  // hi = pmore
  42b59c:	csel	x14, x10, x11, hi  // hi = pmore
  42b5a0:	add	x13, x0, x13
  42b5a4:	lsr	x13, x14, x13
  42b5a8:	tbz	w13, #0, 42b5e4 <feof@plt+0x28504>
  42b5ac:	neg	x13, x10
  42b5b0:	cmp	x11, #0x0
  42b5b4:	eor	w14, w15, #0x1
  42b5b8:	csinv	x10, x13, x10, eq  // eq = none
  42b5bc:	cmp	x0, #0x41
  42b5c0:	neg	x11, x11
  42b5c4:	str	w14, [sp, #8]
  42b5c8:	b.cc	42b5f0 <feof@plt+0x28510>  // b.lo, b.ul, b.last
  42b5cc:	cmp	x12, #0x3f
  42b5d0:	b.hi	42b600 <feof@plt+0x28520>  // b.pmore
  42b5d4:	lsl	x12, x18, x12
  42b5d8:	mov	w14, wzr
  42b5dc:	bic	x10, x10, x12
  42b5e0:	b	42b314 <feof@plt+0x28234>
  42b5e4:	mov	w14, wzr
  42b5e8:	str	w15, [sp, #8]
  42b5ec:	b	42b314 <feof@plt+0x28234>
  42b5f0:	cmp	x0, #0x40
  42b5f4:	b.ne	42b608 <feof@plt+0x28528>  // b.any
  42b5f8:	mov	w14, wzr
  42b5fc:	b	42b614 <feof@plt+0x28534>
  42b600:	mov	w14, wzr
  42b604:	b	42b314 <feof@plt+0x28234>
  42b608:	lsl	x10, x18, x0
  42b60c:	mov	w14, wzr
  42b610:	bic	x11, x11, x10
  42b614:	cbz	x11, 42b6ec <feof@plt+0x2860c>
  42b618:	cmp	x0, #0x40
  42b61c:	mov	x10, #0xffffffffffffffbf    	// #-65
  42b620:	csinv	x10, x10, xzr, hi  // hi = pmore
  42b624:	add	x12, x10, x0
  42b628:	mov	w10, #0x1                   	// #1
  42b62c:	lsl	x10, x10, x12
  42b630:	tst	x10, x11
  42b634:	str	x27, [sp, #56]
  42b638:	b.ne	42b64c <feof@plt+0x2856c>  // b.any
  42b63c:	lsr	x10, x10, #1
  42b640:	tst	x10, x11
  42b644:	sub	x12, x12, #0x1
  42b648:	b.eq	42b63c <feof@plt+0x2855c>  // b.none
  42b64c:	mov	x10, xzr
  42b650:	bfi	x8, x9, #32, #32
  42b654:	mvn	x9, x12
  42b658:	adds	x27, x0, x9
  42b65c:	mov	w9, #0x1                   	// #1
  42b660:	str	w15, [sp, #12]
  42b664:	str	w1, [sp, #28]
  42b668:	str	w14, [sp, #36]
  42b66c:	str	x23, [sp, #16]
  42b670:	str	x0, [sp, #40]
  42b674:	str	x9, [sp, #88]
  42b678:	b.cc	42b6d0 <feof@plt+0x285f0>  // b.lo, b.ul, b.last
  42b67c:	sub	x9, x27, #0x40
  42b680:	cmp	x27, #0x3f
  42b684:	csel	x21, xzr, x11, hi  // hi = pmore
  42b688:	csel	x9, x9, x27, hi  // hi = pmore
  42b68c:	csel	x23, x11, x10, hi  // hi = pmore
  42b690:	cbz	x9, 42b6a8 <feof@plt+0x285c8>
  42b694:	neg	x11, x9
  42b698:	lsl	x10, x23, x9
  42b69c:	lsr	x11, x21, x11
  42b6a0:	orr	x23, x11, x10
  42b6a4:	lsl	x21, x21, x9
  42b6a8:	ldr	x10, [sp, #40]
  42b6ac:	cmp	x10, #0x41
  42b6b0:	b.cc	42b6dc <feof@plt+0x285fc>  // b.lo, b.ul, b.last
  42b6b4:	sub	x9, x10, #0x40
  42b6b8:	cmp	x9, #0x3f
  42b6bc:	b.hi	42b710 <feof@plt+0x28630>  // b.pmore
  42b6c0:	mov	x10, #0xffffffffffffffff    	// #-1
  42b6c4:	lsl	x9, x10, x9
  42b6c8:	bic	x23, x23, x9
  42b6cc:	b	42b710 <feof@plt+0x28630>
  42b6d0:	mov	x21, xzr
  42b6d4:	mov	x23, xzr
  42b6d8:	b	42b710 <feof@plt+0x28630>
  42b6dc:	cmp	x10, #0x40
  42b6e0:	b.ne	42b700 <feof@plt+0x28620>  // b.any
  42b6e4:	mov	x23, xzr
  42b6e8:	b	42b710 <feof@plt+0x28630>
  42b6ec:	ldr	w8, [x19, #28]
  42b6f0:	cbz	w8, 42b8e4 <feof@plt+0x28804>
  42b6f4:	add	x21, sp, #0x88
  42b6f8:	mov	w14, w3
  42b6fc:	b	42b9f0 <feof@plt+0x28910>
  42b700:	mov	x9, #0xffffffffffffffff    	// #-1
  42b704:	lsl	x9, x9, x10
  42b708:	mov	x23, xzr
  42b70c:	bic	x21, x21, x9
  42b710:	ldr	x9, [sp, #88]
  42b714:	mov	x28, xzr
  42b718:	mov	x25, xzr
  42b71c:	bfi	x9, x8, #16, #48
  42b720:	ldr	x8, [sp, #40]
  42b724:	str	x9, [sp, #88]
  42b728:	sub	x8, x8, #0x1
  42b72c:	str	x8, [sp]
  42b730:	mov	w8, #0x1                   	// #1
  42b734:	b	42b748 <feof@plt+0x28668>
  42b738:	orr	x28, x9, x28
  42b73c:	sub	x27, x27, #0x1
  42b740:	extr	x21, x23, x21, #1
  42b744:	lsr	x23, x23, #1
  42b748:	cmp	x4, x23
  42b74c:	b.hi	42b760 <feof@plt+0x28680>  // b.pmore
  42b750:	cmp	x16, x21
  42b754:	b.cc	42b7d8 <feof@plt+0x286f8>  // b.lo, b.ul, b.last
  42b758:	cmp	x4, x23
  42b75c:	b.ne	42b7d8 <feof@plt+0x286f8>  // b.any
  42b760:	stp	x4, x16, [x22, #24]
  42b764:	ldr	w9, [sp, #136]
  42b768:	ldrh	w10, [sp, #140]
  42b76c:	sturb	w8, [x29, #-48]
  42b770:	ldr	x8, [sp, #104]
  42b774:	ldr	x11, [sp, #88]
  42b778:	sturb	w17, [x29, #-47]
  42b77c:	sub	x1, x29, #0x40
  42b780:	strh	w10, [x8, #4]
  42b784:	str	w9, [x8]
  42b788:	sub	x8, x29, #0x28
  42b78c:	sub	x2, x29, #0x58
  42b790:	mov	w3, #0x5                   	// #5
  42b794:	mov	x0, x19
  42b798:	stp	x21, x11, [x22, #8]
  42b79c:	str	x23, [x22]
  42b7a0:	bl	42c264 <feof@plt+0x29184>
  42b7a4:	ldr	x10, [sp, #96]
  42b7a8:	ldp	x4, x16, [x22, #48]
  42b7ac:	ldurb	w8, [x29, #-24]
  42b7b0:	ldurb	w17, [x29, #-23]
  42b7b4:	ldr	w9, [x10]
  42b7b8:	ldrh	w10, [x10, #4]
  42b7bc:	cmp	x27, #0x40
  42b7c0:	str	w9, [sp, #136]
  42b7c4:	mov	w9, #0x1                   	// #1
  42b7c8:	lsl	x9, x9, x27
  42b7cc:	strh	w10, [sp, #140]
  42b7d0:	b.cs	42b738 <feof@plt+0x28658>  // b.hs, b.nlast
  42b7d4:	orr	x25, x9, x25
  42b7d8:	cbnz	x27, 42b73c <feof@plt+0x2865c>
  42b7dc:	ldr	w8, [sp, #28]
  42b7e0:	cmp	w8, #0x7
  42b7e4:	b.ne	42b808 <feof@plt+0x28728>  // b.any
  42b7e8:	ldr	x27, [sp, #56]
  42b7ec:	ldr	x23, [sp, #16]
  42b7f0:	ldr	x13, [sp, #40]
  42b7f4:	ldr	w14, [sp, #36]
  42b7f8:	tbz	w14, #0, 42b864 <feof@plt+0x28784>
  42b7fc:	mov	w17, wzr
  42b800:	sub	x21, x29, #0x60
  42b804:	b	42b9e8 <feof@plt+0x28908>
  42b808:	ldr	x27, [sp, #56]
  42b80c:	ldr	x23, [sp, #16]
  42b810:	ldr	x12, [sp, #40]
  42b814:	ldr	w8, [sp, #12]
  42b818:	cbz	w8, 42b8c4 <feof@plt+0x287e4>
  42b81c:	ldr	w8, [sp, #136]
  42b820:	ldrh	w10, [sp, #140]
  42b824:	ldr	w14, [sp, #36]
  42b828:	neg	x9, x4
  42b82c:	cmp	x16, #0x0
  42b830:	csinv	x9, x9, x4, eq  // eq = none
  42b834:	cmp	x12, #0x41
  42b838:	stur	w8, [x29, #-40]
  42b83c:	neg	x8, x16
  42b840:	mov	x11, #0xffffffffffffffff    	// #-1
  42b844:	sturh	w10, [x29, #-36]
  42b848:	b.cc	42b8d4 <feof@plt+0x287f4>  // b.lo, b.ul, b.last
  42b84c:	sub	x10, x12, #0x40
  42b850:	cmp	x10, #0x3f
  42b854:	b.hi	42b940 <feof@plt+0x28860>  // b.pmore
  42b858:	lsl	x10, x11, x10
  42b85c:	bic	x9, x9, x10
  42b860:	b	42b940 <feof@plt+0x28860>
  42b864:	ldr	x8, [sp]
  42b868:	ldr	w14, [sp, #8]
  42b86c:	sub	x9, x13, #0x41
  42b870:	mov	w10, #0x1                   	// #1
  42b874:	lsl	x8, x10, x8
  42b878:	lsl	x9, x10, x9
  42b87c:	cbz	w14, 42b9ac <feof@plt+0x288cc>
  42b880:	ldur	w10, [x29, #-96]
  42b884:	ldurh	w11, [x29, #-92]
  42b888:	neg	x12, x28
  42b88c:	cmp	x25, #0x0
  42b890:	csinv	x28, x12, x28, eq  // eq = none
  42b894:	cmp	x13, #0x41
  42b898:	neg	x25, x25
  42b89c:	mov	x12, #0xffffffffffffffff    	// #-1
  42b8a0:	str	w10, [sp, #120]
  42b8a4:	strh	w11, [sp, #124]
  42b8a8:	b.cc	42b924 <feof@plt+0x28844>  // b.lo, b.ul, b.last
  42b8ac:	sub	x11, x13, #0x40
  42b8b0:	cmp	x11, #0x3f
  42b8b4:	b.hi	42b99c <feof@plt+0x288bc>  // b.pmore
  42b8b8:	lsl	x11, x12, x11
  42b8bc:	bic	x28, x28, x11
  42b8c0:	b	42b99c <feof@plt+0x288bc>
  42b8c4:	ldr	w14, [sp, #36]
  42b8c8:	mov	w17, wzr
  42b8cc:	add	x21, sp, #0x88
  42b8d0:	b	42b9f0 <feof@plt+0x28910>
  42b8d4:	cmp	x12, #0x40
  42b8d8:	b.ne	42b934 <feof@plt+0x28854>  // b.any
  42b8dc:	mov	x9, xzr
  42b8e0:	b	42b940 <feof@plt+0x28860>
  42b8e4:	mov	x25, x4
  42b8e8:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42b8ec:	mov	w1, #0x3                   	// #3
  42b8f0:	mov	x0, x19
  42b8f4:	mov	w28, w3
  42b8f8:	mov	w3, wzr
  42b8fc:	add	x4, x4, #0x58b
  42b900:	add	x21, sp, #0x88
  42b904:	str	x16, [sp, #88]
  42b908:	str	w17, [sp, #40]
  42b90c:	bl	428d60 <feof@plt+0x25c80>
  42b910:	ldr	w17, [sp, #40]
  42b914:	ldr	x16, [sp, #88]
  42b918:	mov	x4, x25
  42b91c:	mov	w14, w28
  42b920:	b	42b9f0 <feof@plt+0x28910>
  42b924:	cmp	x13, #0x40
  42b928:	b.ne	42b990 <feof@plt+0x288b0>  // b.any
  42b92c:	mov	x28, xzr
  42b930:	b	42b99c <feof@plt+0x288bc>
  42b934:	lsl	x10, x11, x12
  42b938:	mov	x9, xzr
  42b93c:	bic	x8, x8, x10
  42b940:	cmp	w14, #0x0
  42b944:	cset	w11, eq  // eq = none
  42b948:	cmp	x8, x16
  42b94c:	cset	w12, eq  // eq = none
  42b950:	cmp	x9, x4
  42b954:	orr	x10, x9, x8
  42b958:	and	w11, w11, w12
  42b95c:	cset	w12, eq  // eq = none
  42b960:	ldur	w13, [x29, #-40]
  42b964:	cmp	x10, #0x0
  42b968:	and	w10, w12, w11
  42b96c:	ldurh	w11, [x29, #-36]
  42b970:	cset	w12, ne  // ne = any
  42b974:	add	x21, sp, #0x88
  42b978:	and	w17, w12, w10
  42b97c:	mov	x16, x8
  42b980:	mov	x4, x9
  42b984:	str	w13, [sp, #136]
  42b988:	strh	w11, [sp, #140]
  42b98c:	b	42b9f0 <feof@plt+0x28910>
  42b990:	lsl	x11, x12, x13
  42b994:	mov	x28, xzr
  42b998:	bic	x25, x25, x11
  42b99c:	ldr	w11, [sp, #120]
  42b9a0:	ldrh	w12, [sp, #124]
  42b9a4:	stur	w11, [x29, #-96]
  42b9a8:	sturh	w12, [x29, #-92]
  42b9ac:	ldr	x10, [sp, #40]
  42b9b0:	and	x9, x28, x9
  42b9b4:	and	x8, x25, x8
  42b9b8:	sub	x21, x29, #0x60
  42b9bc:	cmp	x10, #0x40
  42b9c0:	csel	x8, x9, x8, hi  // hi = pmore
  42b9c4:	cmp	x8, #0x0
  42b9c8:	cset	w8, eq  // eq = none
  42b9cc:	orr	x10, x25, x28
  42b9d0:	eor	w8, w14, w8
  42b9d4:	ldr	w14, [sp, #36]
  42b9d8:	cmp	x10, #0x0
  42b9dc:	eor	w8, w8, #0x1
  42b9e0:	cset	w9, ne  // ne = any
  42b9e4:	and	w17, w9, w8
  42b9e8:	mov	x16, x25
  42b9ec:	mov	x4, x28
  42b9f0:	ldrh	w8, [x21, #4]
  42b9f4:	ldr	w9, [x21]
  42b9f8:	strh	w8, [sp, #148]
  42b9fc:	str	w9, [sp, #144]
  42ba00:	stp	x4, x16, [x27, #-32]
  42ba04:	sturb	w14, [x27, #-16]
  42ba08:	sturb	w17, [x27, #-15]
  42ba0c:	ldrh	w8, [sp, #148]
  42ba10:	ldr	w9, [sp, #144]
  42ba14:	ldr	w28, [sp, #52]
  42ba18:	ldr	w25, [sp, #32]
  42ba1c:	strh	w8, [x23, #4]
  42ba20:	str	w9, [x23]
  42ba24:	b	42bcb4 <feof@plt+0x28bd4>
  42ba28:	mov	w9, #0x1                   	// #1
  42ba2c:	mov	x10, #0xffffffffffffffbf    	// #-65
  42ba30:	mov	x16, x11
  42ba34:	b	42ba50 <feof@plt+0x28970>
  42ba38:	lsl	x9, x6, x8
  42ba3c:	mov	x12, xzr
  42ba40:	bic	x14, x14, x9
  42ba44:	mov	w9, #0x1                   	// #1
  42ba48:	mov	x10, #0xffffffffffffffff    	// #-1
  42ba4c:	mov	x16, x13
  42ba50:	add	x10, x8, x10
  42ba54:	lsr	x10, x16, x10
  42ba58:	tbz	w10, #0, 42ba9c <feof@plt+0x289bc>
  42ba5c:	neg	x10, x11
  42ba60:	cmp	x13, #0x0
  42ba64:	eor	w9, w9, #0x1
  42ba68:	csinv	x11, x10, x11, eq  // eq = none
  42ba6c:	cmp	x8, #0x41
  42ba70:	neg	x13, x13
  42ba74:	b.cc	42ba90 <feof@plt+0x289b0>  // b.lo, b.ul, b.last
  42ba78:	cmp	x15, #0x3f
  42ba7c:	b.hi	42ba9c <feof@plt+0x289bc>  // b.pmore
  42ba80:	lsl	x15, x6, x15
  42ba84:	mov	w10, wzr
  42ba88:	bic	x11, x11, x15
  42ba8c:	b	42baa0 <feof@plt+0x289c0>
  42ba90:	cmp	x8, #0x40
  42ba94:	b.ne	42bce8 <feof@plt+0x28c08>  // b.any
  42ba98:	mov	x11, xzr
  42ba9c:	mov	w10, wzr
  42baa0:	cmp	x12, #0x0
  42baa4:	and	x16, x13, #0xffffffff
  42baa8:	lsr	x13, x13, #32
  42baac:	and	x17, x12, #0xffffffff
  42bab0:	and	x15, x14, #0xffffffff
  42bab4:	lsr	x14, x14, #32
  42bab8:	lsr	x12, x12, #32
  42babc:	and	x18, x11, #0xffffffff
  42bac0:	lsr	x0, x11, #32
  42bac4:	cset	w1, ne  // ne = any
  42bac8:	cmp	x11, #0x0
  42bacc:	mul	x5, x16, x17
  42bad0:	mul	x17, x13, x17
  42bad4:	mul	x11, x16, x15
  42bad8:	mul	x2, x13, x14
  42badc:	mul	x3, x13, x15
  42bae0:	mul	x4, x16, x14
  42bae4:	mul	x13, x13, x12
  42bae8:	mul	x12, x16, x12
  42baec:	mul	x16, x18, x15
  42baf0:	mul	x15, x0, x15
  42baf4:	mul	x0, x0, x14
  42baf8:	mul	x14, x18, x14
  42bafc:	cset	w18, ne  // ne = any
  42bb00:	adds	x5, x5, x17, lsl #32
  42bb04:	and	w18, w1, w18
  42bb08:	lsr	x1, x12, #32
  42bb0c:	cinc	x13, x13, cs  // cs = hs, nlast
  42bb10:	adds	x12, x5, x12, lsl #32
  42bb14:	add	x17, x1, x17, lsr #32
  42bb18:	cinc	x13, x13, cs  // cs = hs, nlast
  42bb1c:	add	x2, x2, x3, lsr #32
  42bb20:	lsr	x5, x14, #32
  42bb24:	cmn	x17, x13
  42bb28:	add	x1, x2, x4, lsr #32
  42bb2c:	add	x2, x5, x15, lsr #32
  42bb30:	cset	w13, ne  // ne = any
  42bb34:	adds	x15, x16, x15, lsl #32
  42bb38:	cinc	x16, x0, cs  // cs = hs, nlast
  42bb3c:	adds	x14, x15, x14, lsl #32
  42bb40:	add	x12, x1, x12
  42bb44:	cinc	x17, x16, cs  // cs = hs, nlast
  42bb48:	adds	x11, x11, x3, lsl #32
  42bb4c:	cinc	x12, x12, cs  // cs = hs, nlast
  42bb50:	adds	x16, x11, x4, lsl #32
  42bb54:	add	x11, x12, x14
  42bb58:	cinc	x15, x11, cs  // cs = hs, nlast
  42bb5c:	cmn	x2, x17
  42bb60:	orr	w13, w18, w13
  42bb64:	cset	w11, ne  // ne = any
  42bb68:	cmp	x8, #0x41
  42bb6c:	orr	w14, w13, w11
  42bb70:	b.cc	42bb90 <feof@plt+0x28ab0>  // b.lo, b.ul, b.last
  42bb74:	sub	x11, x8, #0x40
  42bb78:	cmp	x11, #0x3f
  42bb7c:	b.hi	42bba4 <feof@plt+0x28ac4>  // b.pmore
  42bb80:	lsl	x11, x6, x11
  42bb84:	bic	x11, x15, x11
  42bb88:	mov	x13, x16
  42bb8c:	b	42bbbc <feof@plt+0x28adc>
  42bb90:	cmp	x8, #0x40
  42bb94:	b.ne	42bbb0 <feof@plt+0x28ad0>  // b.any
  42bb98:	mov	x11, xzr
  42bb9c:	mov	x13, x16
  42bba0:	b	42bbbc <feof@plt+0x28adc>
  42bba4:	mov	x13, x16
  42bba8:	mov	x11, x15
  42bbac:	b	42bbbc <feof@plt+0x28adc>
  42bbb0:	lsl	x12, x6, x8
  42bbb4:	mov	x11, xzr
  42bbb8:	bic	x13, x16, x12
  42bbbc:	cmp	x13, x16
  42bbc0:	cset	w16, ne  // ne = any
  42bbc4:	cmp	x11, x15
  42bbc8:	cset	w15, ne  // ne = any
  42bbcc:	orr	w15, w16, w15
  42bbd0:	sub	x12, x27, #0xe
  42bbd4:	orr	w14, w14, w15
  42bbd8:	cbz	w9, 42bc48 <feof@plt+0x28b68>
  42bbdc:	ldur	w15, [x29, #-40]
  42bbe0:	ldurh	w16, [x29, #-36]
  42bbe4:	neg	x17, x11
  42bbe8:	cmp	x13, #0x0
  42bbec:	csinv	x11, x17, x11, eq  // eq = none
  42bbf0:	cmp	x8, #0x41
  42bbf4:	neg	x13, x13
  42bbf8:	stur	w15, [x29, #-96]
  42bbfc:	sturh	w16, [x29, #-92]
  42bc00:	b.cc	42bc1c <feof@plt+0x28b3c>  // b.lo, b.ul, b.last
  42bc04:	sub	x15, x8, #0x40
  42bc08:	cmp	x15, #0x3f
  42bc0c:	b.hi	42bc38 <feof@plt+0x28b58>  // b.pmore
  42bc10:	lsl	x15, x6, x15
  42bc14:	bic	x11, x11, x15
  42bc18:	b	42bc38 <feof@plt+0x28b58>
  42bc1c:	cmp	x8, #0x40
  42bc20:	b.ne	42bc2c <feof@plt+0x28b4c>  // b.any
  42bc24:	mov	x11, xzr
  42bc28:	b	42bc38 <feof@plt+0x28b58>
  42bc2c:	lsl	x15, x6, x8
  42bc30:	mov	x11, xzr
  42bc34:	bic	x13, x13, x15
  42bc38:	ldur	w15, [x29, #-96]
  42bc3c:	ldurh	w16, [x29, #-92]
  42bc40:	stur	w15, [x29, #-40]
  42bc44:	sturh	w16, [x29, #-36]
  42bc48:	orr	w14, w10, w14
  42bc4c:	tbz	w14, #0, 42bc58 <feof@plt+0x28b78>
  42bc50:	eor	w8, w10, #0x1
  42bc54:	b	42bc98 <feof@plt+0x28bb8>
  42bc58:	cmp	x8, #0x40
  42bc5c:	mov	x14, #0xffffffffffffffbf    	// #-65
  42bc60:	csinv	x14, x14, xzr, hi  // hi = pmore
  42bc64:	csel	x15, x11, x13, hi  // hi = pmore
  42bc68:	add	x8, x8, x14
  42bc6c:	lsr	x8, x15, x8
  42bc70:	tst	x8, #0x1
  42bc74:	cset	w8, eq  // eq = none
  42bc78:	eor	w8, w9, w8
  42bc7c:	cmp	w8, #0x1
  42bc80:	b.eq	42bc94 <feof@plt+0x28bb4>  // b.none
  42bc84:	orr	x8, x11, x13
  42bc88:	cmp	x8, #0x0
  42bc8c:	cset	w8, ne  // ne = any
  42bc90:	b	42bc98 <feof@plt+0x28bb8>
  42bc94:	mov	w8, wzr
  42bc98:	stp	x11, x13, [x27, #-32]
  42bc9c:	sturb	w10, [x27, #-16]
  42bca0:	sturb	w8, [x27, #-15]
  42bca4:	ldurh	w8, [x29, #-36]
  42bca8:	ldur	w9, [x29, #-40]
  42bcac:	strh	w8, [x12, #4]
  42bcb0:	str	w9, [x12]
  42bcb4:	ldr	w8, [x27, #32]
  42bcb8:	ldurb	w9, [x27, #-15]
  42bcbc:	sub	x23, x27, #0x28
  42bcc0:	stur	w8, [x27, #-8]
  42bcc4:	cbz	w9, 42ad64 <feof@plt+0x27c84>
  42bcc8:	ldr	w8, [x19, #28]
  42bccc:	cbnz	w8, 42ad64 <feof@plt+0x27c84>
  42bcd0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bcd4:	mov	w1, #0x2                   	// #2
  42bcd8:	mov	x0, x19
  42bcdc:	add	x2, x2, #0x48d
  42bce0:	bl	4288a0 <feof@plt+0x257c0>
  42bce4:	b	42ad64 <feof@plt+0x27c84>
  42bce8:	lsl	x15, x6, x8
  42bcec:	mov	x11, xzr
  42bcf0:	mov	w10, wzr
  42bcf4:	bic	x13, x13, x15
  42bcf8:	b	42baa0 <feof@plt+0x289c0>
  42bcfc:	cmp	w20, #0x15
  42bd00:	mov	x21, #0xffffffffffffffff    	// #-1
  42bd04:	b.ne	42acf0 <feof@plt+0x27c10>  // b.any
  42bd08:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bd0c:	mov	w1, #0x3                   	// #3
  42bd10:	mov	x0, x19
  42bd14:	add	x2, x2, #0x4b9
  42bd18:	bl	4288a0 <feof@plt+0x257c0>
  42bd1c:	ldr	w2, [sp, #84]
  42bd20:	mov	x27, xzr
  42bd24:	b	42acf0 <feof@plt+0x27c10>
  42bd28:	orr	w8, w20, #0x1
  42bd2c:	cmp	w8, #0x13
  42bd30:	mov	x21, #0xffffffffffffffff    	// #-1
  42bd34:	b.eq	42acf0 <feof@plt+0x27c10>  // b.none
  42bd38:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bd3c:	mov	w1, #0x3                   	// #3
  42bd40:	mov	x0, x19
  42bd44:	add	x2, x2, #0x473
  42bd48:	b	42bd18 <feof@plt+0x28c38>
  42bd4c:	ldr	w3, [x27, #36]
  42bd50:	b	42acc4 <feof@plt+0x27be4>
  42bd54:	cmp	w20, #0x15
  42bd58:	b.ne	42bd84 <feof@plt+0x28ca4>  // b.any
  42bd5c:	ldr	x8, [x27, #24]
  42bd60:	ldur	q0, [x27, #8]
  42bd64:	ldr	w9, [x27, #32]
  42bd68:	mov	x21, #0xffffffffffffffff    	// #-1
  42bd6c:	stur	x8, [x27, #-16]
  42bd70:	sub	x8, x27, #0x28
  42bd74:	stur	q0, [x27, #-32]
  42bd78:	stur	w9, [x27, #-8]
  42bd7c:	mov	x27, x8
  42bd80:	b	42acf0 <feof@plt+0x27c10>
  42bd84:	ldr	x8, [x27]
  42bd88:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bd8c:	mov	w1, #0x3                   	// #3
  42bd90:	mov	x0, x19
  42bd94:	ldr	w2, [x8]
  42bd98:	mov	w3, wzr
  42bd9c:	add	x4, x4, #0x459
  42bda0:	bl	428d60 <feof@plt+0x25c80>
  42bda4:	ldr	w2, [sp, #84]
  42bda8:	mov	x27, xzr
  42bdac:	b	42acec <feof@plt+0x27c0c>
  42bdb0:	ldp	x9, x8, [x27, #8]
  42bdb4:	orr	x8, x9, x8
  42bdb8:	cbnz	x8, 42be04 <feof@plt+0x28d24>
  42bdbc:	b	42bdcc <feof@plt+0x28cec>
  42bdc0:	ldp	x9, x8, [x27, #8]
  42bdc4:	orr	x8, x9, x8
  42bdc8:	cbz	x8, 42be04 <feof@plt+0x28d24>
  42bdcc:	ldr	w8, [x19, #28]
  42bdd0:	add	w8, w8, #0x1
  42bdd4:	b	42be00 <feof@plt+0x28d20>
  42bdd8:	ldr	w8, [x27, #36]
  42bddc:	cmp	w8, #0x11
  42bde0:	b.ne	42bf98 <feof@plt+0x28eb8>  // b.any
  42bde4:	ldp	x10, x9, [x27, #-32]
  42bde8:	ldr	w8, [x19, #28]
  42bdec:	orr	x9, x10, x9
  42bdf0:	cbz	x9, 42bdfc <feof@plt+0x28d1c>
  42bdf4:	add	w8, w8, #0x1
  42bdf8:	b	42be00 <feof@plt+0x28d20>
  42bdfc:	sub	w8, w8, #0x1
  42be00:	str	w8, [x19, #28]
  42be04:	ldr	x8, [x19, #1104]
  42be08:	add	x27, x27, #0x28
  42be0c:	cmp	x27, x8
  42be10:	b.ne	42be44 <feof@plt+0x28d64>  // b.any
  42be14:	ldr	x0, [x19, #1096]
  42be18:	sub	x21, x8, x0
  42be1c:	lsl	x8, x21, #1
  42be20:	add	x24, x8, #0x320
  42be24:	mov	x1, x24
  42be28:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42be2c:	ldr	w2, [sp, #84]
  42be30:	add	x8, x0, x24
  42be34:	add	x27, x0, x21
  42be38:	mov	x21, #0xffffffffffffffff    	// #-1
  42be3c:	str	x0, [x19, #1096]
  42be40:	str	x8, [x19, #1104]
  42be44:	str	x26, [x27]
  42be48:	stp	w2, w20, [x27, #32]
  42be4c:	b	42a740 <feof@plt+0x27660>
  42be50:	mov	x0, x19
  42be54:	mov	x1, x26
  42be58:	mov	w20, w2
  42be5c:	bl	433540 <feof@plt+0x30460>
  42be60:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42be64:	mov	x5, x0
  42be68:	add	x4, x4, #0x120
  42be6c:	mov	w1, #0x3                   	// #3
  42be70:	mov	x0, x19
  42be74:	mov	w2, w20
  42be78:	mov	w3, wzr
  42be7c:	bl	428d60 <feof@plt+0x25c80>
  42be80:	mov	w0, wzr
  42be84:	ldp	x20, x19, [sp, #416]
  42be88:	ldp	x22, x21, [sp, #400]
  42be8c:	ldp	x24, x23, [sp, #384]
  42be90:	ldp	x26, x25, [sp, #368]
  42be94:	ldp	x28, x27, [sp, #352]
  42be98:	ldp	x29, x30, [sp, #336]
  42be9c:	add	sp, sp, #0x1b0
  42bea0:	ret
  42bea4:	mov	x0, x19
  42bea8:	mov	x1, x26
  42beac:	mov	w20, w2
  42beb0:	bl	433540 <feof@plt+0x30460>
  42beb4:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42beb8:	mov	x5, x0
  42bebc:	add	x4, x4, #0x14a
  42bec0:	b	42be6c <feof@plt+0x28d8c>
  42bec4:	ldr	w9, [sp, #68]
  42bec8:	cmp	w25, #0x3
  42becc:	cset	w8, eq  // eq = none
  42bed0:	and	w8, w8, w9
  42bed4:	tbnz	w8, #0, 42bee4 <feof@plt+0x28e04>
  42bed8:	ldr	x8, [x19, #432]
  42bedc:	cbz	x8, 42bee4 <feof@plt+0x28e04>
  42bee0:	str	xzr, [x19, #432]
  42bee4:	ldr	x8, [x19, #1096]
  42bee8:	cmp	x27, x8
  42beec:	b.eq	42bf40 <feof@plt+0x28e60>  // b.none
  42bef0:	ldr	w10, [sp, #64]
  42bef4:	ldr	w2, [x27, #32]
  42bef8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0xd838>
  42befc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bf00:	add	x8, x8, #0x1bb
  42bf04:	add	x9, x9, #0x587
  42bf08:	tst	w10, #0x1
  42bf0c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bf10:	csel	x5, x9, x8, ne  // ne = any
  42bf14:	add	x4, x4, #0x221
  42bf18:	mov	w1, #0x4                   	// #4
  42bf1c:	mov	x0, x19
  42bf20:	b	42be78 <feof@plt+0x28d98>
  42bf24:	mov	x0, x19
  42bf28:	mov	x1, x26
  42bf2c:	bl	433540 <feof@plt+0x30460>
  42bf30:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bf34:	mov	x5, x0
  42bf38:	add	x4, x4, #0x120
  42bf3c:	b	42bf88 <feof@plt+0x28ea8>
  42bf40:	ldp	x9, x8, [x27, #8]
  42bf44:	orr	x8, x9, x8
  42bf48:	cmp	x8, #0x0
  42bf4c:	cset	w0, ne  // ne = any
  42bf50:	b	42be84 <feof@plt+0x28da4>
  42bf54:	ldr	x1, [x27]
  42bf58:	mov	x0, x19
  42bf5c:	bl	433540 <feof@plt+0x30460>
  42bf60:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bf64:	mov	x5, x0
  42bf68:	add	x4, x4, #0x1c1
  42bf6c:	b	42bf88 <feof@plt+0x28ea8>
  42bf70:	mov	x0, x19
  42bf74:	mov	x1, x26
  42bf78:	bl	433540 <feof@plt+0x30460>
  42bf7c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bf80:	mov	x5, x0
  42bf84:	add	x4, x4, #0x1e4
  42bf88:	ldr	w2, [sp, #84]
  42bf8c:	mov	w1, #0x3                   	// #3
  42bf90:	mov	x0, x19
  42bf94:	b	42be78 <feof@plt+0x28d98>
  42bf98:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bf9c:	add	x4, x4, #0x206
  42bfa0:	b	42bfd8 <feof@plt+0x28ef8>
  42bfa4:	ldr	w10, [sp, #64]
  42bfa8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bfac:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bfb0:	add	x8, x8, #0x1bb
  42bfb4:	add	x9, x9, #0x587
  42bfb8:	tst	w10, #0x1
  42bfbc:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bfc0:	csel	x5, x9, x8, ne  // ne = any
  42bfc4:	add	x4, x4, #0x1a5
  42bfc8:	mov	w1, #0x3                   	// #3
  42bfcc:	b	42bf1c <feof@plt+0x28e3c>
  42bfd0:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bfd4:	add	x4, x4, #0x17e
  42bfd8:	mov	w1, #0x3                   	// #3
  42bfdc:	mov	x0, x19
  42bfe0:	mov	w3, wzr
  42bfe4:	bl	428d60 <feof@plt+0x25c80>
  42bfe8:	b	42be80 <feof@plt+0x28da0>
  42bfec:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bff0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42bff4:	add	x0, x0, #0x32a
  42bff8:	add	x2, x2, #0x33e
  42bffc:	mov	w1, #0x4ad                 	// #1197
  42c000:	bl	40f560 <feof@plt+0xc480>
  42c004:	stp	x29, x30, [sp, #-48]!
  42c008:	stp	x20, x19, [sp, #32]
  42c00c:	mov	x19, x0
  42c010:	ldr	x8, [x0, #1104]
  42c014:	ldr	x0, [x0, #1096]
  42c018:	str	x21, [sp, #16]
  42c01c:	mov	x29, sp
  42c020:	sub	x21, x8, x0
  42c024:	lsl	x8, x21, #1
  42c028:	add	x20, x8, #0x320
  42c02c:	mov	x1, x20
  42c030:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42c034:	add	x8, x0, x20
  42c038:	str	x0, [x19, #1096]
  42c03c:	str	x8, [x19, #1104]
  42c040:	add	x0, x0, x21
  42c044:	ldp	x20, x19, [sp, #32]
  42c048:	ldr	x21, [sp, #16]
  42c04c:	ldp	x29, x30, [sp], #48
  42c050:	ret
  42c054:	ldrb	w9, [x0, #16]
  42c058:	cbnz	w9, 42c0c4 <feof@plt+0x28fe4>
  42c05c:	subs	x9, x1, #0x41
  42c060:	b.cc	42c090 <feof@plt+0x28fb0>  // b.lo, b.ul, b.last
  42c064:	and	x10, x1, #0xffffffffffffffc0
  42c068:	cmp	x10, #0x40
  42c06c:	b.ne	42c0c4 <feof@plt+0x28fe4>  // b.any
  42c070:	ldr	x10, [x0]
  42c074:	lsr	x9, x10, x9
  42c078:	tbz	w9, #0, 42c0c4 <feof@plt+0x28fe4>
  42c07c:	neg	x9, x1
  42c080:	mov	x11, #0xffffffffffffffff    	// #-1
  42c084:	lsr	x9, x11, x9
  42c088:	orn	x9, x10, x9
  42c08c:	b	42c0c0 <feof@plt+0x28fe0>
  42c090:	ldr	x9, [x0, #8]
  42c094:	sub	x10, x1, #0x1
  42c098:	lsr	x10, x9, x10
  42c09c:	tbz	w10, #0, 42c0c4 <feof@plt+0x28fe4>
  42c0a0:	cmp	x1, #0x3f
  42c0a4:	b.hi	42c0bc <feof@plt+0x28fdc>  // b.pmore
  42c0a8:	neg	x10, x1
  42c0ac:	mov	x11, #0xffffffffffffffff    	// #-1
  42c0b0:	lsr	x10, x11, x10
  42c0b4:	orn	x9, x9, x10
  42c0b8:	str	x9, [x0, #8]
  42c0bc:	mov	x9, #0xffffffffffffffff    	// #-1
  42c0c0:	str	x9, [x0]
  42c0c4:	ldr	x9, [x0, #16]
  42c0c8:	ldr	q0, [x0]
  42c0cc:	str	x9, [x8, #16]
  42c0d0:	str	q0, [x8]
  42c0d4:	ret
  42c0d8:	stp	x29, x30, [sp, #-80]!
  42c0dc:	stp	x24, x23, [sp, #32]
  42c0e0:	stp	x22, x21, [sp, #48]
  42c0e4:	stp	x20, x19, [sp, #64]
  42c0e8:	stp	xzr, xzr, [x8]
  42c0ec:	strh	wzr, [x8, #16]
  42c0f0:	mov	x20, x8
  42c0f4:	ldrb	w8, [x0, #26]
  42c0f8:	str	x25, [sp, #16]
  42c0fc:	mov	x29, sp
  42c100:	mov	w21, w1
  42c104:	add	w8, w8, #0x1
  42c108:	mov	x19, x0
  42c10c:	strb	w8, [x0, #26]
  42c110:	bl	4385d0 <feof@plt+0x354f0>
  42c114:	ldrb	w8, [x0, #4]
  42c118:	cmp	w8, #0x14
  42c11c:	b.ne	42c190 <feof@plt+0x290b0>  // b.any
  42c120:	mov	x0, x19
  42c124:	bl	4385d0 <feof@plt+0x354f0>
  42c128:	ldrb	w8, [x0, #4]
  42c12c:	mov	x22, x0
  42c130:	mov	w25, #0x1                   	// #1
  42c134:	cmp	w8, #0x3
  42c138:	b.eq	42c1a0 <feof@plt+0x290c0>  // b.none
  42c13c:	cmp	w8, #0x44
  42c140:	b.eq	42c14c <feof@plt+0x2906c>  // b.none
  42c144:	cmp	w8, #0x3e
  42c148:	b.ne	42c21c <feof@plt+0x2913c>  // b.any
  42c14c:	ldr	w9, [x22, #8]
  42c150:	cmp	w8, #0x44
  42c154:	cset	w24, eq  // eq = none
  42c158:	sub	w0, w9, #0x1
  42c15c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42c160:	ldr	x8, [x22, #16]
  42c164:	ldr	w9, [x22, #8]
  42c168:	mov	x23, x0
  42c16c:	add	x1, x8, #0x1
  42c170:	sub	w2, w9, #0x2
  42c174:	bl	4029c0 <memcpy@plt>
  42c178:	ldr	w8, [x22, #8]
  42c17c:	sub	w8, w8, #0x2
  42c180:	strb	wzr, [x23, w8, uxtw]
  42c184:	ldr	x22, [x22, #8]
  42c188:	cbnz	x23, 42c1b8 <feof@plt+0x290d8>
  42c18c:	b	42c1dc <feof@plt+0x290fc>
  42c190:	mov	x22, x0
  42c194:	mov	w25, wzr
  42c198:	cmp	w8, #0x3
  42c19c:	b.ne	42c13c <feof@plt+0x2905c>  // b.any
  42c1a0:	mov	x0, x19
  42c1a4:	bl	426d0c <feof@plt+0x23c2c>
  42c1a8:	mov	x23, x0
  42c1ac:	mov	x22, xzr
  42c1b0:	mov	w24, #0x1                   	// #1
  42c1b4:	cbz	x23, 42c1dc <feof@plt+0x290fc>
  42c1b8:	mov	x0, x19
  42c1bc:	mov	x1, x23
  42c1c0:	mov	w2, w24
  42c1c4:	mov	w3, w21
  42c1c8:	bl	42e63c <feof@plt+0x2b55c>
  42c1cc:	and	x8, x0, #0x1
  42c1d0:	mov	x0, x23
  42c1d4:	str	x8, [x20, #8]
  42c1d8:	bl	402b20 <free@plt>
  42c1dc:	cbz	w25, 42c238 <feof@plt+0x29158>
  42c1e0:	ldr	x8, [x19, #448]
  42c1e4:	ldurb	w8, [x8, #-20]
  42c1e8:	cmp	w8, #0x16
  42c1ec:	b.eq	42c238 <feof@plt+0x29158>  // b.none
  42c1f0:	mov	x0, x19
  42c1f4:	bl	4385d0 <feof@plt+0x354f0>
  42c1f8:	ldrb	w8, [x0, #4]
  42c1fc:	cmp	w8, #0x15
  42c200:	b.eq	42c238 <feof@plt+0x29158>  // b.none
  42c204:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42c208:	add	x2, x2, #0x41c
  42c20c:	mov	w1, #0x3                   	// #3
  42c210:	mov	x0, x19
  42c214:	bl	4288a0 <feof@plt+0x257c0>
  42c218:	b	42c238 <feof@plt+0x29158>
  42c21c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42c220:	add	x2, x2, #0x3e8
  42c224:	mov	w1, #0x3                   	// #3
  42c228:	mov	x0, x19
  42c22c:	bl	4288a0 <feof@plt+0x257c0>
  42c230:	mov	x22, xzr
  42c234:	cbnz	w25, 42c1e0 <feof@plt+0x29100>
  42c238:	cbz	x22, 42c240 <feof@plt+0x29160>
  42c23c:	str	x22, [x19, #432]
  42c240:	ldrb	w8, [x19, #26]
  42c244:	ldr	x25, [sp, #16]
  42c248:	sub	w8, w8, #0x1
  42c24c:	strb	w8, [x19, #26]
  42c250:	ldp	x20, x19, [sp, #64]
  42c254:	ldp	x22, x21, [sp, #48]
  42c258:	ldp	x24, x23, [sp, #32]
  42c25c:	ldp	x29, x30, [sp], #80
  42c260:	ret
  42c264:	sub	sp, sp, #0x80
  42c268:	stp	x29, x30, [sp, #80]
  42c26c:	stp	x20, x19, [sp, #112]
  42c270:	ldr	x9, [x0, #1208]
  42c274:	sub	w10, w3, #0xc
  42c278:	str	x21, [sp, #96]
  42c27c:	mov	x21, x2
  42c280:	mov	x20, x1
  42c284:	cmp	w10, #0x2
  42c288:	mov	x19, x8
  42c28c:	add	x29, sp, #0x50
  42c290:	b.cc	42c2c4 <feof@plt+0x291e4>  // b.lo, b.ul, b.last
  42c294:	cmp	w3, #0x4
  42c298:	b.eq	42c340 <feof@plt+0x29260>  // b.none
  42c29c:	cmp	w3, #0x5
  42c2a0:	b.ne	42c364 <feof@plt+0x29284>  // b.any
  42c2a4:	ldp	x14, x12, [x20]
  42c2a8:	ldp	x15, x13, [x21]
  42c2ac:	ldrb	w8, [x20, #16]
  42c2b0:	subs	x10, x12, x13
  42c2b4:	cset	w11, cc  // cc = lo, ul, last
  42c2b8:	cbz	w8, 42c398 <feof@plt+0x292b8>
  42c2bc:	mov	w8, #0x1                   	// #1
  42c2c0:	b	42c39c <feof@plt+0x292bc>
  42c2c4:	ldrb	w10, [x21, #16]
  42c2c8:	ldr	x8, [x21]
  42c2cc:	cbnz	w10, 42c5bc <feof@plt+0x294dc>
  42c2d0:	ldr	x11, [x21, #8]
  42c2d4:	subs	x14, x9, #0x40
  42c2d8:	mov	x10, #0xffffffffffffffbf    	// #-65
  42c2dc:	csinv	x10, x10, xzr, hi  // hi = pmore
  42c2e0:	csel	x12, x8, x11, hi  // hi = pmore
  42c2e4:	add	x10, x9, x10
  42c2e8:	lsr	x10, x12, x10
  42c2ec:	tbz	w10, #0, 42c5bc <feof@plt+0x294dc>
  42c2f0:	mov	x10, x21
  42c2f4:	ldr	w13, [x10, #18]!
  42c2f8:	cmp	w3, #0xd
  42c2fc:	mov	w12, #0xc                   	// #12
  42c300:	neg	x15, x8
  42c304:	ldrh	w16, [x10, #4]
  42c308:	cinc	w3, w12, ne  // ne = any
  42c30c:	cmp	x11, #0x0
  42c310:	csinv	x12, x15, x8, eq  // eq = none
  42c314:	cmp	x9, #0x41
  42c318:	stur	w13, [x29, #-16]
  42c31c:	neg	x13, x11
  42c320:	sturh	w16, [x29, #-12]
  42c324:	b.cc	42c4b0 <feof@plt+0x293d0>  // b.lo, b.ul, b.last
  42c328:	cmp	x14, #0x3f
  42c32c:	b.hi	42c57c <feof@plt+0x2949c>  // b.pmore
  42c330:	mov	x15, #0xffffffffffffffff    	// #-1
  42c334:	lsl	x14, x15, x14
  42c338:	bic	x12, x12, x14
  42c33c:	b	42c57c <feof@plt+0x2949c>
  42c340:	ldp	x15, x12, [x20]
  42c344:	ldp	x14, x13, [x21]
  42c348:	ldrb	w8, [x20, #16]
  42c34c:	adds	x10, x13, x12
  42c350:	add	x11, x14, x15
  42c354:	cinc	x11, x11, cs  // cs = hs, nlast
  42c358:	cbz	w8, 42c3e8 <feof@plt+0x29308>
  42c35c:	mov	w8, #0x1                   	// #1
  42c360:	b	42c3ec <feof@plt+0x2930c>
  42c364:	ldrb	w8, [x0, #1154]
  42c368:	cbz	w8, 42c38c <feof@plt+0x292ac>
  42c36c:	ldrb	w8, [x0, #1152]
  42c370:	cbz	w8, 42c37c <feof@plt+0x2929c>
  42c374:	ldr	w8, [x0, #28]
  42c378:	cbnz	w8, 42c38c <feof@plt+0x292ac>
  42c37c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42c380:	add	x2, x2, #0x56a
  42c384:	mov	w1, #0x15                  	// #21
  42c388:	bl	428b00 <feof@plt+0x25a20>
  42c38c:	ldr	x8, [x21, #16]
  42c390:	ldr	q0, [x21]
  42c394:	b	42c908 <feof@plt+0x29828>
  42c398:	ldrb	w8, [x21, #16]
  42c39c:	ldr	w16, [x29, #24]
  42c3a0:	ldrh	w17, [x29, #28]
  42c3a4:	cmp	x9, #0x41
  42c3a8:	str	w16, [sp, #16]
  42c3ac:	strh	w17, [sp, #20]
  42c3b0:	b.cc	42c3d8 <feof@plt+0x292f8>  // b.lo, b.ul, b.last
  42c3b4:	sub	x17, x14, x15
  42c3b8:	sub	x16, x9, #0x40
  42c3bc:	cmp	x16, #0x3f
  42c3c0:	sub	x11, x17, x11
  42c3c4:	b.hi	42c440 <feof@plt+0x29360>  // b.pmore
  42c3c8:	mov	x17, #0xffffffffffffffff    	// #-1
  42c3cc:	lsl	x16, x17, x16
  42c3d0:	bic	x11, x11, x16
  42c3d4:	b	42c440 <feof@plt+0x29360>
  42c3d8:	cmp	x9, #0x40
  42c3dc:	b.ne	42c430 <feof@plt+0x29350>  // b.any
  42c3e0:	mov	x11, xzr
  42c3e4:	b	42c440 <feof@plt+0x29360>
  42c3e8:	ldrb	w8, [x21, #16]
  42c3ec:	ldr	w16, [x29, #24]
  42c3f0:	ldrh	w17, [x29, #28]
  42c3f4:	cmp	x9, #0x41
  42c3f8:	str	w16, [sp, #8]
  42c3fc:	strh	w17, [sp, #12]
  42c400:	b.cc	42c420 <feof@plt+0x29340>  // b.lo, b.ul, b.last
  42c404:	sub	x16, x9, #0x40
  42c408:	cmp	x16, #0x3f
  42c40c:	b.hi	42c480 <feof@plt+0x293a0>  // b.pmore
  42c410:	mov	x17, #0xffffffffffffffff    	// #-1
  42c414:	lsl	x16, x17, x16
  42c418:	bic	x11, x11, x16
  42c41c:	b	42c480 <feof@plt+0x293a0>
  42c420:	cmp	x9, #0x40
  42c424:	b.ne	42c470 <feof@plt+0x29390>  // b.any
  42c428:	mov	x11, xzr
  42c42c:	b	42c480 <feof@plt+0x293a0>
  42c430:	mov	x16, #0xffffffffffffffff    	// #-1
  42c434:	lsl	x16, x16, x9
  42c438:	mov	x11, xzr
  42c43c:	bic	x10, x10, x16
  42c440:	ldr	w16, [sp, #16]
  42c444:	ldrh	w17, [sp, #20]
  42c448:	str	w16, [x29, #24]
  42c44c:	strh	w17, [x29, #28]
  42c450:	cbnz	w8, 42c548 <feof@plt+0x29468>
  42c454:	subs	x16, x9, #0x41
  42c458:	b.cc	42c4c0 <feof@plt+0x293e0>  // b.lo, b.ul, b.last
  42c45c:	mov	w12, #0x1                   	// #1
  42c460:	lsl	x13, x12, x16
  42c464:	and	x12, x14, x13
  42c468:	and	x13, x15, x13
  42c46c:	b	42c4d4 <feof@plt+0x293f4>
  42c470:	mov	x16, #0xffffffffffffffff    	// #-1
  42c474:	lsl	x16, x16, x9
  42c478:	mov	x11, xzr
  42c47c:	bic	x10, x10, x16
  42c480:	ldr	w16, [sp, #8]
  42c484:	ldrh	w17, [sp, #12]
  42c488:	str	w16, [x29, #24]
  42c48c:	strh	w17, [x29, #28]
  42c490:	cbnz	w8, 42c548 <feof@plt+0x29468>
  42c494:	subs	x16, x9, #0x41
  42c498:	b.cc	42c51c <feof@plt+0x2943c>  // b.lo, b.ul, b.last
  42c49c:	mov	w12, #0x1                   	// #1
  42c4a0:	lsl	x13, x12, x16
  42c4a4:	and	x12, x15, x13
  42c4a8:	and	x13, x14, x13
  42c4ac:	b	42c530 <feof@plt+0x29450>
  42c4b0:	cmp	x9, #0x40
  42c4b4:	b.ne	42c56c <feof@plt+0x2948c>  // b.any
  42c4b8:	mov	x12, xzr
  42c4bc:	b	42c57c <feof@plt+0x2949c>
  42c4c0:	sub	x14, x9, #0x1
  42c4c4:	mov	w15, #0x1                   	// #1
  42c4c8:	lsl	x14, x15, x14
  42c4cc:	and	x12, x12, x14
  42c4d0:	and	x13, x13, x14
  42c4d4:	cmp	x12, #0x0
  42c4d8:	cset	w14, eq  // eq = none
  42c4dc:	cmp	x13, #0x0
  42c4e0:	cset	w13, eq  // eq = none
  42c4e4:	cmp	w14, w13
  42c4e8:	b.eq	42c548 <feof@plt+0x29468>  // b.none
  42c4ec:	cmp	x12, #0x0
  42c4f0:	mov	x12, #0xffffffffffffffbf    	// #-65
  42c4f4:	cset	w13, eq  // eq = none
  42c4f8:	cmp	x9, #0x40
  42c4fc:	csinv	x12, x12, xzr, hi  // hi = pmore
  42c500:	csel	x14, x11, x10, hi  // hi = pmore
  42c504:	add	x9, x9, x12
  42c508:	lsr	x9, x14, x9
  42c50c:	tst	x9, #0x1
  42c510:	cset	w9, eq  // eq = none
  42c514:	eor	w9, w13, w9
  42c518:	b	42c54c <feof@plt+0x2946c>
  42c51c:	sub	x14, x9, #0x1
  42c520:	mov	w15, #0x1                   	// #1
  42c524:	lsl	x14, x15, x14
  42c528:	and	x12, x12, x14
  42c52c:	and	x13, x13, x14
  42c530:	cmp	x12, #0x0
  42c534:	cset	w14, eq  // eq = none
  42c538:	cmp	x13, #0x0
  42c53c:	cset	w13, eq  // eq = none
  42c540:	eor	w13, w14, w13
  42c544:	tbz	w13, #0, 42c4ec <feof@plt+0x2940c>
  42c548:	mov	w9, wzr
  42c54c:	stp	x11, x10, [x19]
  42c550:	ldrh	w10, [x29, #28]
  42c554:	ldr	w11, [x29, #24]
  42c558:	strb	w8, [x19, #16]
  42c55c:	strb	w9, [x19, #17]
  42c560:	strh	w10, [x19, #22]
  42c564:	stur	w11, [x19, #18]
  42c568:	b	42c920 <feof@plt+0x29840>
  42c56c:	mov	x14, #0xffffffffffffffff    	// #-1
  42c570:	lsl	x14, x14, x9
  42c574:	mov	x12, xzr
  42c578:	bic	x13, x13, x14
  42c57c:	cmp	x13, x11
  42c580:	orr	x11, x12, x13
  42c584:	stp	x12, x13, [x21]
  42c588:	cset	w13, eq  // eq = none
  42c58c:	cmp	x12, x8
  42c590:	cset	w8, eq  // eq = none
  42c594:	cmp	x11, #0x0
  42c598:	and	w8, w13, w8
  42c59c:	cset	w11, ne  // ne = any
  42c5a0:	and	w8, w11, w8
  42c5a4:	strb	w8, [x21, #17]
  42c5a8:	ldurh	w8, [x29, #-12]
  42c5ac:	ldur	w11, [x29, #-16]
  42c5b0:	strh	w8, [x10, #4]
  42c5b4:	mov	x8, x12
  42c5b8:	str	w11, [x10]
  42c5bc:	cbz	x8, 42c604 <feof@plt+0x29524>
  42c5c0:	mov	x8, #0xffffffffffffffff    	// #-1
  42c5c4:	cmp	w3, #0xd
  42c5c8:	b.ne	42c610 <feof@plt+0x29530>  // b.any
  42c5cc:	ldr	x10, [x20, #16]
  42c5d0:	ldr	q0, [x20]
  42c5d4:	cmp	x8, x9
  42c5d8:	str	x10, [sp, #48]
  42c5dc:	str	q0, [sp, #32]
  42c5e0:	b.cs	42c674 <feof@plt+0x29594>  // b.hs, b.nlast
  42c5e4:	ldp	x10, x11, [sp, #32]
  42c5e8:	subs	x12, x8, #0x40
  42c5ec:	b.cc	42c68c <feof@plt+0x295ac>  // b.lo, b.ul, b.last
  42c5f0:	mov	x13, xzr
  42c5f4:	mov	x14, x11
  42c5f8:	mov	x15, x12
  42c5fc:	stp	x11, xzr, [sp, #32]
  42c600:	b	42c698 <feof@plt+0x295b8>
  42c604:	ldr	x8, [x21, #8]
  42c608:	cmp	w3, #0xd
  42c60c:	b.eq	42c5cc <feof@plt+0x294ec>  // b.none
  42c610:	ldp	x14, x13, [x20]
  42c614:	ldrb	w11, [x20, #16]
  42c618:	subs	x12, x9, #0x40
  42c61c:	mov	x15, #0xffffffffffffffbf    	// #-65
  42c620:	mov	x10, x20
  42c624:	csinv	x15, x15, xzr, hi  // hi = pmore
  42c628:	ldr	w16, [x10, #18]!
  42c62c:	ldrh	w17, [x20, #22]
  42c630:	csel	x18, x14, x13, hi  // hi = pmore
  42c634:	cmp	w11, #0x0
  42c638:	add	x11, x9, x15
  42c63c:	lsr	x11, x18, x11
  42c640:	cset	w15, eq  // eq = none
  42c644:	and	w11, w11, w15
  42c648:	cmp	x8, x9
  42c64c:	sbfx	x11, x11, #0, #1
  42c650:	strh	w17, [sp, #28]
  42c654:	str	w16, [sp, #24]
  42c658:	b.cs	42c684 <feof@plt+0x295a4>  // b.hs, b.nlast
  42c65c:	cmp	x9, #0x3f
  42c660:	b.hi	42c6d8 <feof@plt+0x295f8>  // b.pmore
  42c664:	lsl	x14, x11, x9
  42c668:	orr	x13, x14, x13
  42c66c:	mov	x14, x11
  42c670:	b	42c6e8 <feof@plt+0x29608>
  42c674:	ldrb	w8, [sp, #48]
  42c678:	cbz	w8, 42c730 <feof@plt+0x29650>
  42c67c:	mov	w8, wzr
  42c680:	b	42c740 <feof@plt+0x29660>
  42c684:	mov	x8, x11
  42c688:	b	42c750 <feof@plt+0x29670>
  42c68c:	mov	x13, x11
  42c690:	mov	x14, x10
  42c694:	mov	x15, x8
  42c698:	cbz	x15, 42c6b4 <feof@plt+0x295d4>
  42c69c:	neg	x16, x15
  42c6a0:	lsl	x14, x14, x15
  42c6a4:	lsr	x16, x13, x16
  42c6a8:	lsl	x13, x13, x15
  42c6ac:	orr	x14, x16, x14
  42c6b0:	stp	x14, x13, [sp, #32]
  42c6b4:	subs	x16, x9, #0x41
  42c6b8:	b.cc	42c720 <feof@plt+0x29640>  // b.lo, b.ul, b.last
  42c6bc:	sub	x15, x9, #0x40
  42c6c0:	cmp	x15, #0x3f
  42c6c4:	b.hi	42c7e4 <feof@plt+0x29704>  // b.pmore
  42c6c8:	mov	x17, #0xffffffffffffffff    	// #-1
  42c6cc:	lsl	x15, x17, x15
  42c6d0:	bic	x14, x14, x15
  42c6d4:	b	42c7e4 <feof@plt+0x29704>
  42c6d8:	cmp	x9, #0x7f
  42c6dc:	b.hi	42c6e8 <feof@plt+0x29608>  // b.pmore
  42c6e0:	lsl	x15, x11, x9
  42c6e4:	orr	x14, x15, x14
  42c6e8:	sub	x16, x8, #0x40
  42c6ec:	cmp	x8, #0x3f
  42c6f0:	csel	x15, x11, x14, hi  // hi = pmore
  42c6f4:	csel	x16, x16, x8, hi  // hi = pmore
  42c6f8:	csel	x8, x14, x13, hi  // hi = pmore
  42c6fc:	cbz	x16, 42c74c <feof@plt+0x2966c>
  42c700:	neg	x13, x16
  42c704:	lsr	x8, x8, x16
  42c708:	lsr	x14, x15, x16
  42c70c:	lsl	x15, x15, x13
  42c710:	lsl	x11, x11, x13
  42c714:	orr	x8, x8, x15
  42c718:	orr	x11, x14, x11
  42c71c:	b	42c750 <feof@plt+0x29670>
  42c720:	cmp	x9, #0x40
  42c724:	b.ne	42c7d4 <feof@plt+0x296f4>  // b.any
  42c728:	mov	x14, xzr
  42c72c:	b	42c7e4 <feof@plt+0x29704>
  42c730:	ldp	x9, x8, [sp, #32]
  42c734:	orr	x8, x9, x8
  42c738:	cmp	x8, #0x0
  42c73c:	cset	w8, ne  // ne = any
  42c740:	strb	w8, [sp, #49]
  42c744:	stp	xzr, xzr, [sp, #32]
  42c748:	b	42c900 <feof@plt+0x29820>
  42c74c:	mov	x11, x15
  42c750:	ldr	w13, [sp, #24]
  42c754:	ldrh	w14, [sp, #28]
  42c758:	cmp	x9, #0x41
  42c75c:	str	w13, [x29, #24]
  42c760:	strh	w14, [x29, #28]
  42c764:	b.cc	42c780 <feof@plt+0x296a0>  // b.lo, b.ul, b.last
  42c768:	cmp	x12, #0x3f
  42c76c:	b.hi	42c7a0 <feof@plt+0x296c0>  // b.pmore
  42c770:	mov	x9, #0xffffffffffffffff    	// #-1
  42c774:	lsl	x9, x9, x12
  42c778:	bic	x11, x11, x9
  42c77c:	b	42c7a0 <feof@plt+0x296c0>
  42c780:	cmp	x9, #0x40
  42c784:	b.ne	42c790 <feof@plt+0x296b0>  // b.any
  42c788:	mov	x11, xzr
  42c78c:	b	42c7a0 <feof@plt+0x296c0>
  42c790:	mov	x12, #0xffffffffffffffff    	// #-1
  42c794:	lsl	x9, x12, x9
  42c798:	mov	x11, xzr
  42c79c:	bic	x8, x8, x9
  42c7a0:	ldr	w9, [x29, #24]
  42c7a4:	ldrh	w12, [x29, #28]
  42c7a8:	str	w9, [sp, #24]
  42c7ac:	strh	w12, [sp, #28]
  42c7b0:	stur	w9, [x29, #-8]
  42c7b4:	sturh	w12, [x29, #-4]
  42c7b8:	stp	x11, x8, [x20]
  42c7bc:	and	w8, w12, #0xffff
  42c7c0:	mov	w9, w9
  42c7c4:	strb	wzr, [x20, #17]
  42c7c8:	strh	w8, [x10, #4]
  42c7cc:	str	w9, [x10]
  42c7d0:	b	42c910 <feof@plt+0x29830>
  42c7d4:	mov	x15, #0xffffffffffffffff    	// #-1
  42c7d8:	lsl	x15, x15, x9
  42c7dc:	mov	x14, xzr
  42c7e0:	bic	x13, x13, x15
  42c7e4:	ldrb	w15, [sp, #48]
  42c7e8:	stp	x14, x13, [sp, #32]
  42c7ec:	cbz	w15, 42c7f8 <feof@plt+0x29718>
  42c7f0:	strb	wzr, [sp, #49]
  42c7f4:	b	42c900 <feof@plt+0x29820>
  42c7f8:	ldur	w17, [sp, #50]
  42c7fc:	ldrh	w18, [sp, #54]
  42c800:	subs	x15, x9, #0x40
  42c804:	stur	w17, [x29, #-8]
  42c808:	sturh	w18, [x29, #-4]
  42c80c:	b.ls	42c828 <feof@plt+0x29748>  // b.plast
  42c810:	lsr	x16, x14, x16
  42c814:	tst	x16, #0x1
  42c818:	csetm	x17, ne  // ne = any
  42c81c:	cmp	x9, #0x7f
  42c820:	b.ls	42c840 <feof@plt+0x29760>  // b.plast
  42c824:	b	42c858 <feof@plt+0x29778>
  42c828:	sub	x16, x9, #0x1
  42c82c:	lsr	x16, x13, x16
  42c830:	tst	x16, #0x1
  42c834:	csetm	x17, ne  // ne = any
  42c838:	cmp	x9, #0x40
  42c83c:	b.ne	42c84c <feof@plt+0x2976c>  // b.any
  42c840:	lsl	x16, x17, x9
  42c844:	orr	x14, x16, x14
  42c848:	b	42c858 <feof@plt+0x29778>
  42c84c:	lsl	x14, x17, x9
  42c850:	orr	x13, x14, x13
  42c854:	mov	x14, x17
  42c858:	cmp	x8, #0x3f
  42c85c:	csel	x16, x17, x14, hi  // hi = pmore
  42c860:	csel	x12, x12, x8, hi  // hi = pmore
  42c864:	csel	x8, x14, x13, hi  // hi = pmore
  42c868:	cbz	x12, 42c888 <feof@plt+0x297a8>
  42c86c:	neg	x13, x12
  42c870:	lsr	x8, x8, x12
  42c874:	lsr	x12, x16, x12
  42c878:	lsl	x14, x16, x13
  42c87c:	lsl	x13, x17, x13
  42c880:	orr	x8, x8, x14
  42c884:	orr	x16, x12, x13
  42c888:	ldur	w12, [x29, #-8]
  42c88c:	ldurh	w13, [x29, #-4]
  42c890:	cmp	x9, #0x41
  42c894:	str	w12, [x29, #24]
  42c898:	strh	w13, [x29, #28]
  42c89c:	b.cc	42c8b8 <feof@plt+0x297d8>  // b.lo, b.ul, b.last
  42c8a0:	cmp	x15, #0x3f
  42c8a4:	b.hi	42c8d8 <feof@plt+0x297f8>  // b.pmore
  42c8a8:	mov	x9, #0xffffffffffffffff    	// #-1
  42c8ac:	lsl	x9, x9, x15
  42c8b0:	bic	x16, x16, x9
  42c8b4:	b	42c8d8 <feof@plt+0x297f8>
  42c8b8:	cmp	x9, #0x40
  42c8bc:	b.ne	42c8c8 <feof@plt+0x297e8>  // b.any
  42c8c0:	mov	x16, xzr
  42c8c4:	b	42c8d8 <feof@plt+0x297f8>
  42c8c8:	mov	x12, #0xffffffffffffffff    	// #-1
  42c8cc:	lsl	x9, x12, x9
  42c8d0:	mov	x16, xzr
  42c8d4:	bic	x8, x8, x9
  42c8d8:	ldr	w9, [x29, #24]
  42c8dc:	ldrh	w12, [x29, #28]
  42c8e0:	cmp	x11, x8
  42c8e4:	cset	w8, ne  // ne = any
  42c8e8:	cmp	x10, x16
  42c8ec:	cset	w10, ne  // ne = any
  42c8f0:	orr	w8, w10, w8
  42c8f4:	stur	w9, [x29, #-8]
  42c8f8:	sturh	w12, [x29, #-4]
  42c8fc:	strb	w8, [sp, #49]
  42c900:	ldr	x8, [sp, #48]
  42c904:	ldr	q0, [sp, #32]
  42c908:	str	x8, [x20, #16]
  42c90c:	str	q0, [x20]
  42c910:	ldr	x8, [x20, #16]
  42c914:	ldr	q0, [x20]
  42c918:	str	x8, [x19, #16]
  42c91c:	str	q0, [x19]
  42c920:	ldp	x20, x19, [sp, #112]
  42c924:	ldr	x21, [sp, #96]
  42c928:	ldp	x29, x30, [sp, #80]
  42c92c:	add	sp, sp, #0x80
  42c930:	ret
  42c934:	ldr	w8, [x0, #204]
  42c938:	cmp	w8, #0x0
  42c93c:	cset	w0, ne  // ne = any
  42c940:	ret
  42c944:	sub	sp, sp, #0x130
  42c948:	stp	x24, x23, [sp, #256]
  42c94c:	stp	x22, x21, [sp, #272]
  42c950:	stp	x20, x19, [sp, #288]
  42c954:	mov	w21, w6
  42c958:	mov	w23, w4
  42c95c:	mov	x22, x2
  42c960:	mov	x24, x1
  42c964:	mov	x19, x0
  42c968:	stp	x29, x30, [sp, #208]
  42c96c:	stp	x28, x27, [sp, #224]
  42c970:	stp	x26, x25, [sp, #240]
  42c974:	add	x29, sp, #0xd0
  42c978:	stp	w5, w3, [sp, #64]
  42c97c:	cbnz	x2, 42c998 <feof@plt+0x298b8>
  42c980:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0xd838>
  42c984:	add	x3, x3, #0x5a3
  42c988:	mov	w1, #0x4                   	// #4
  42c98c:	mov	x0, x19
  42c990:	mov	w2, w21
  42c994:	bl	429150 <feof@plt+0x26070>
  42c998:	ldr	x20, [x19, #296]
  42c99c:	mov	x0, x24
  42c9a0:	bl	4610d8 <feof@plt+0x5dff8>
  42c9a4:	mov	w2, w0
  42c9a8:	mov	w3, #0x1                   	// #1
  42c9ac:	mov	x0, x20
  42c9b0:	mov	x1, x24
  42c9b4:	bl	460a90 <feof@plt+0x5d9b0>
  42c9b8:	ldr	x8, [x0]
  42c9bc:	cbz	x8, 42c9d4 <feof@plt+0x298f4>
  42c9c0:	ldr	x9, [x8, #8]
  42c9c4:	cmp	x9, x22
  42c9c8:	b.eq	42ca3c <feof@plt+0x2995c>  // b.none
  42c9cc:	ldr	x8, [x8]
  42c9d0:	cbnz	x8, 42c9c0 <feof@plt+0x298e0>
  42c9d4:	str	x0, [sp, #48]
  42c9d8:	mov	w0, #0x1                   	// #1
  42c9dc:	mov	w1, #0xd8                  	// #216
  42c9e0:	stp	w21, w23, [sp, #16]
  42c9e4:	mov	w20, #0x1                   	// #1
  42c9e8:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  42c9ec:	ldr	x8, [x19]
  42c9f0:	mov	w9, #0xffffffff            	// #-1
  42c9f4:	mov	x21, x0
  42c9f8:	mov	x28, x0
  42c9fc:	cmp	x8, #0x0
  42ca00:	cset	w8, eq  // eq = none
  42ca04:	str	w9, [x0, #200]
  42ca08:	strb	w8, [x0, #212]
  42ca0c:	mov	x0, x24
  42ca10:	str	x22, [x28, #64]!
  42ca14:	str	x24, [sp, #8]
  42ca18:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  42ca1c:	ldr	w8, [sp, #64]
  42ca20:	str	x0, [x21]
  42ca24:	tbnz	w8, #0, 42ca48 <feof@plt+0x29968>
  42ca28:	ldr	x8, [x19]
  42ca2c:	cbz	x8, 42ca44 <feof@plt+0x29964>
  42ca30:	ldr	x8, [x8, #80]
  42ca34:	ldrb	w20, [x8, #214]
  42ca38:	b	42ca48 <feof@plt+0x29968>
  42ca3c:	ldr	x21, [x8, #24]
  42ca40:	b	42d22c <feof@plt+0x2a14c>
  42ca44:	mov	w20, wzr
  42ca48:	add	x8, x19, #0x148
  42ca4c:	str	x22, [sp, #56]
  42ca50:	str	wzr, [sp, #24]
  42ca54:	str	xzr, [sp, #32]
  42ca58:	strb	w20, [x21, #214]
  42ca5c:	str	x8, [sp, #40]
  42ca60:	ldr	w8, [sp, #68]
  42ca64:	tbnz	w8, #0, 42cf80 <feof@plt+0x29ea0>
  42ca68:	ldrb	w8, [x19, #1145]
  42ca6c:	cbz	w8, 42cb88 <feof@plt+0x29aa8>
  42ca70:	ldr	x23, [x21, #64]
  42ca74:	ldr	x20, [x21]
  42ca78:	b	42caa8 <feof@plt+0x299c8>
  42ca7c:	mov	x0, x27
  42ca80:	mov	x1, x20
  42ca84:	mov	x2, x25
  42ca88:	bl	4029c0 <memcpy@plt>
  42ca8c:	strb	wzr, [x26, x22]
  42ca90:	ldrb	w2, [x23, #20]
  42ca94:	mov	x0, x19
  42ca98:	mov	x1, x26
  42ca9c:	bl	42e94c <feof@plt+0x2b86c>
  42caa0:	mov	x23, x0
  42caa4:	add	x20, x24, #0x1
  42caa8:	ldr	x8, [x23, #32]
  42caac:	cbz	x8, 42cabc <feof@plt+0x299dc>
  42cab0:	ldr	x0, [x8]
  42cab4:	cbnz	x0, 42cad0 <feof@plt+0x299f0>
  42cab8:	b	42caf4 <feof@plt+0x29a14>
  42cabc:	mov	x0, x23
  42cac0:	bl	42e698 <feof@plt+0x2b5b8>
  42cac4:	ldr	x8, [x23, #32]
  42cac8:	ldr	x0, [x8]
  42cacc:	cbz	x0, 42caf4 <feof@plt+0x29a14>
  42cad0:	mov	x22, xzr
  42cad4:	mov	x1, x20
  42cad8:	bl	45ffd0 <feof@plt+0x5cef0>
  42cadc:	cbz	w0, 42cb70 <feof@plt+0x29a90>
  42cae0:	ldr	x8, [x23, #32]
  42cae4:	add	x8, x8, x22
  42cae8:	ldr	x0, [x8, #16]
  42caec:	add	x22, x22, #0x10
  42caf0:	cbnz	x0, 42cad4 <feof@plt+0x299f4>
  42caf4:	ldrb	w8, [x20]
  42caf8:	cmp	w8, #0x2f
  42cafc:	b.eq	42cb88 <feof@plt+0x29aa8>  // b.none
  42cb00:	mov	w1, #0x2f                  	// #47
  42cb04:	mov	x0, x20
  42cb08:	bl	402b60 <strchr@plt>
  42cb0c:	cbz	x0, 42cb88 <feof@plt+0x29aa8>
  42cb10:	mov	x24, x0
  42cb14:	subs	x8, x0, x20
  42cb18:	b.eq	42cb88 <feof@plt+0x29aa8>  // b.none
  42cb1c:	ldr	w9, [x23, #16]
  42cb20:	add	x25, x8, #0x1
  42cb24:	add	x22, x25, x9
  42cb28:	add	x0, x22, #0x2
  42cb2c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42cb30:	ldr	w2, [x23, #16]
  42cb34:	ldr	x1, [x23, #8]
  42cb38:	mov	x26, x0
  42cb3c:	add	x27, x0, x2
  42cb40:	bl	4029c0 <memcpy@plt>
  42cb44:	ldr	w8, [x23, #16]
  42cb48:	cbz	w8, 42ca7c <feof@plt+0x2999c>
  42cb4c:	ldr	x9, [x23, #8]
  42cb50:	sub	w8, w8, #0x1
  42cb54:	ldrb	w8, [x9, w8, uxtw]
  42cb58:	cmp	w8, #0x2f
  42cb5c:	b.eq	42ca7c <feof@plt+0x2999c>  // b.none
  42cb60:	mov	w8, #0x2f                  	// #47
  42cb64:	strb	w8, [x27], #1
  42cb68:	add	x22, x22, #0x1
  42cb6c:	b	42ca7c <feof@plt+0x2999c>
  42cb70:	ldr	x8, [x23, #32]
  42cb74:	add	x8, x8, x22
  42cb78:	ldr	x0, [x8, #8]
  42cb7c:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  42cb80:	mov	x25, x0
  42cb84:	cbnz	x0, 42cbac <feof@plt+0x29acc>
  42cb88:	ldr	x25, [x21, #64]
  42cb8c:	ldr	x20, [x21]
  42cb90:	ldr	x8, [x25, #40]
  42cb94:	cbz	x8, 42cbfc <feof@plt+0x29b1c>
  42cb98:	mov	x0, x20
  42cb9c:	mov	x1, x25
  42cba0:	blr	x8
  42cba4:	mov	x25, x0
  42cba8:	cbz	x25, 42ccd0 <feof@plt+0x29bf0>
  42cbac:	ldrb	w8, [x19, #1245]
  42cbb0:	cbz	w8, 42cc54 <feof@plt+0x29b74>
  42cbb4:	ldr	x8, [x28]
  42cbb8:	ldrb	w8, [x8, #20]
  42cbbc:	cbz	w8, 42cc54 <feof@plt+0x29b74>
  42cbc0:	mov	x0, x25
  42cbc4:	bl	461418 <feof@plt+0x5e338>
  42cbc8:	mov	x20, x0
  42cbcc:	cbz	x0, 42cc4c <feof@plt+0x29b6c>
  42cbd0:	mov	x0, x20
  42cbd4:	bl	402a50 <strlen@plt>
  42cbd8:	mov	x23, x0
  42cbdc:	mov	x0, x25
  42cbe0:	bl	402a50 <strlen@plt>
  42cbe4:	cmp	x23, x0
  42cbe8:	b.cs	42cc4c <feof@plt+0x29b6c>  // b.hs, b.nlast
  42cbec:	mov	x0, x25
  42cbf0:	bl	402b20 <free@plt>
  42cbf4:	mov	x25, x20
  42cbf8:	b	42cc54 <feof@plt+0x29b74>
  42cbfc:	ldr	w23, [x25, #16]
  42cc00:	mov	x0, x20
  42cc04:	bl	402a50 <strlen@plt>
  42cc08:	add	x22, x23, #0x1
  42cc0c:	add	x24, x0, #0x1
  42cc10:	add	x0, x24, x22
  42cc14:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42cc18:	ldr	x1, [x25, #8]
  42cc1c:	mov	x2, x23
  42cc20:	mov	x25, x0
  42cc24:	bl	4029c0 <memcpy@plt>
  42cc28:	cbz	w23, 42ccb8 <feof@plt+0x29bd8>
  42cc2c:	add	x8, x23, x25
  42cc30:	ldurb	w8, [x8, #-1]
  42cc34:	cmp	w8, #0x2f
  42cc38:	b.eq	42ccbc <feof@plt+0x29bdc>  // b.none
  42cc3c:	mov	w8, #0x2f                  	// #47
  42cc40:	strb	w8, [x25, x23]
  42cc44:	mov	x23, x22
  42cc48:	b	42ccbc <feof@plt+0x29bdc>
  42cc4c:	mov	x0, x20
  42cc50:	bl	402b20 <free@plt>
  42cc54:	mov	x0, x25
  42cc58:	bl	4610d8 <feof@plt+0x5dff8>
  42cc5c:	ldr	x8, [x19, #320]
  42cc60:	mov	w23, w0
  42cc64:	mov	x1, x25
  42cc68:	mov	w2, w23
  42cc6c:	mov	x0, x8
  42cc70:	bl	460930 <feof@plt+0x5d850>
  42cc74:	cbz	x0, 42cc84 <feof@plt+0x29ba4>
  42cc78:	mov	w8, #0x2                   	// #2
  42cc7c:	str	w8, [x21, #204]
  42cc80:	b	42cf20 <feof@plt+0x29e40>
  42cc84:	ldr	x8, [x21]
  42cc88:	str	x25, [x21, #8]
  42cc8c:	ldrb	w8, [x8]
  42cc90:	cbz	w8, 42ce54 <feof@plt+0x29d74>
  42cc94:	ldr	x8, [x19, #968]
  42cc98:	cbz	x8, 42ce54 <feof@plt+0x29d74>
  42cc9c:	ldr	x8, [x19, #280]
  42cca0:	cbz	x8, 42cce8 <feof@plt+0x29c08>
  42cca4:	ldrb	w9, [x8, #214]
  42cca8:	cbz	w9, 42cce0 <feof@plt+0x29c00>
  42ccac:	ldr	x8, [x8, #32]
  42ccb0:	cbnz	x8, 42cca4 <feof@plt+0x29bc4>
  42ccb4:	b	42cce8 <feof@plt+0x29c08>
  42ccb8:	mov	x23, xzr
  42ccbc:	add	x0, x25, x23
  42ccc0:	mov	x1, x20
  42ccc4:	mov	x2, x24
  42ccc8:	bl	4029c0 <memcpy@plt>
  42cccc:	cbnz	x25, 42cbac <feof@plt+0x29acc>
  42ccd0:	mov	w8, #0x2                   	// #2
  42ccd4:	str	w8, [x21, #204]
  42ccd8:	str	xzr, [x21, #8]
  42ccdc:	b	42cf20 <feof@plt+0x29e40>
  42cce0:	ldrb	w8, [x8, #212]
  42cce4:	cbz	w8, 42ce54 <feof@plt+0x29d74>
  42cce8:	mov	x0, x25
  42ccec:	bl	402a50 <strlen@plt>
  42ccf0:	add	x22, x0, #0x5
  42ccf4:	mov	x27, x0
  42ccf8:	mov	x0, x22
  42ccfc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42cd00:	mov	x1, x25
  42cd04:	mov	x2, x27
  42cd08:	mov	x24, x0
  42cd0c:	bl	4029c0 <memcpy@plt>
  42cd10:	mov	w9, #0x672e                	// #26414
  42cd14:	add	x8, x24, x27
  42cd18:	movk	w9, #0x6863, lsl #16
  42cd1c:	add	x2, sp, #0x48
  42cd20:	mov	w0, wzr
  42cd24:	mov	x1, x24
  42cd28:	str	w9, [x8]
  42cd2c:	strb	wzr, [x8, #4]
  42cd30:	bl	402ef0 <__xstat@plt>
  42cd34:	cbnz	w0, 42ce4c <feof@plt+0x29d6c>
  42cd38:	ldr	w8, [sp, #88]
  42cd3c:	and	w8, w8, #0xf000
  42cd40:	cmp	w8, #0x4, lsl #12
  42cd44:	b.ne	42ce18 <feof@plt+0x29d38>  // b.any
  42cd48:	mov	x0, x24
  42cd4c:	bl	402dc0 <opendir@plt>
  42cd50:	cbz	x0, 42ce44 <feof@plt+0x29d64>
  42cd54:	mov	x26, x0
  42cd58:	add	x8, x27, x24
  42cd5c:	mov	w9, #0x2f                  	// #47
  42cd60:	strb	w9, [x8, #4]
  42cd64:	str	x22, [sp, #24]
  42cd68:	mov	x0, x26
  42cd6c:	bl	402d50 <readdir@plt>
  42cd70:	cbnz	x0, 42cd84 <feof@plt+0x29ca4>
  42cd74:	b	42ce34 <feof@plt+0x29d54>
  42cd78:	mov	x0, x26
  42cd7c:	bl	402d50 <readdir@plt>
  42cd80:	cbz	x0, 42ce34 <feof@plt+0x29d54>
  42cd84:	add	x27, x0, #0x13
  42cd88:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  42cd8c:	mov	x0, x27
  42cd90:	add	x1, x1, #0x17c
  42cd94:	bl	402ed0 <strcmp@plt>
  42cd98:	cbz	w0, 42cd78 <feof@plt+0x29c98>
  42cd9c:	mov	x0, x27
  42cda0:	bl	402a50 <strlen@plt>
  42cda4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  42cda8:	mov	x20, x0
  42cdac:	mov	x0, x27
  42cdb0:	add	x1, x1, #0x17b
  42cdb4:	bl	402ed0 <strcmp@plt>
  42cdb8:	cbz	w0, 42cd78 <feof@plt+0x29c98>
  42cdbc:	ldr	x9, [sp, #24]
  42cdc0:	add	x2, x20, #0x1
  42cdc4:	add	x8, x2, x22
  42cdc8:	cmp	x8, x9
  42cdcc:	b.ls	42cdf0 <feof@plt+0x29d10>  // b.plast
  42cdd0:	add	x8, x9, x20
  42cdd4:	add	x1, x8, #0x41
  42cdd8:	mov	x0, x24
  42cddc:	str	x1, [sp, #24]
  42cde0:	mov	x20, x2
  42cde4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42cde8:	mov	x2, x20
  42cdec:	mov	x24, x0
  42cdf0:	add	x0, x24, x22
  42cdf4:	mov	x1, x27
  42cdf8:	bl	4029c0 <memcpy@plt>
  42cdfc:	mov	x0, x19
  42ce00:	mov	x1, x21
  42ce04:	mov	x2, x24
  42ce08:	bl	42eb50 <feof@plt+0x2ba70>
  42ce0c:	tbz	w0, #0, 42cd68 <feof@plt+0x29c88>
  42ce10:	mov	w20, #0x1                   	// #1
  42ce14:	b	42ce38 <feof@plt+0x29d58>
  42ce18:	mov	x0, x19
  42ce1c:	mov	x1, x21
  42ce20:	mov	x2, x24
  42ce24:	bl	42eb50 <feof@plt+0x2ba70>
  42ce28:	and	w20, w0, #0x1
  42ce2c:	cbz	w20, 42ce44 <feof@plt+0x29d64>
  42ce30:	b	42d268 <feof@plt+0x2a188>
  42ce34:	mov	w20, wzr
  42ce38:	mov	x0, x26
  42ce3c:	bl	402c20 <closedir@plt>
  42ce40:	cbnz	w20, 42d268 <feof@plt+0x2a188>
  42ce44:	mov	w8, #0x1                   	// #1
  42ce48:	str	w8, [sp, #24]
  42ce4c:	mov	x0, x24
  42ce50:	bl	402b20 <free@plt>
  42ce54:	mov	x0, x21
  42ce58:	bl	42e478 <feof@plt+0x2b398>
  42ce5c:	tbnz	w0, #0, 42d018 <feof@plt+0x29f38>
  42ce60:	ldr	w8, [x21, #204]
  42ce64:	cmp	w8, #0x2
  42ce68:	b.ne	42d004 <feof@plt+0x29f24>  // b.any
  42ce6c:	mov	x0, x25
  42ce70:	bl	402a50 <strlen@plt>
  42ce74:	mov	x20, x0
  42ce78:	ldp	x0, x8, [x19, #352]
  42ce7c:	add	x1, x20, #0x1
  42ce80:	sub	x8, x8, x0
  42ce84:	cmp	x8, x1
  42ce88:	b.cs	42ce98 <feof@plt+0x29db8>  // b.hs, b.nlast
  42ce8c:	ldr	x0, [sp, #40]
  42ce90:	bl	4615ac <_obstack_newchunk@@Base>
  42ce94:	ldr	x0, [x19, #352]
  42ce98:	mov	x1, x25
  42ce9c:	mov	x2, x20
  42cea0:	bl	4029c0 <memcpy@plt>
  42cea4:	ldr	x8, [x19, #352]
  42cea8:	add	x8, x8, x20
  42ceac:	add	x9, x8, #0x1
  42ceb0:	str	x9, [x19, #352]
  42ceb4:	strb	wzr, [x8]
  42ceb8:	ldp	x20, x8, [x19, #344]
  42cebc:	cmp	x8, x20
  42cec0:	b.ne	42ced0 <feof@plt+0x29df0>  // b.any
  42cec4:	ldrb	w9, [x19, #408]
  42cec8:	orr	w9, w9, #0x2
  42cecc:	strb	w9, [x19, #408]
  42ced0:	ldr	x9, [x19, #376]
  42ced4:	ldr	x10, [x19, #336]
  42ced8:	ldr	x11, [x19, #360]
  42cedc:	mov	x0, x25
  42cee0:	add	x8, x9, x8
  42cee4:	bic	x8, x8, x9
  42cee8:	sub	x12, x11, x10
  42ceec:	sub	x9, x8, x10
  42cef0:	cmp	x9, x12
  42cef4:	csel	x8, x11, x8, hi  // hi = pmore
  42cef8:	stp	x8, x8, [x19, #344]
  42cefc:	bl	402b20 <free@plt>
  42cf00:	ldr	x0, [x19, #320]
  42cf04:	mov	w3, #0x1                   	// #1
  42cf08:	mov	x1, x20
  42cf0c:	mov	w2, w23
  42cf10:	bl	460a90 <feof@plt+0x5d9b0>
  42cf14:	str	x20, [x0]
  42cf18:	ldr	x8, [x21]
  42cf1c:	str	x8, [x21, #8]
  42cf20:	ldr	x8, [x28]
  42cf24:	ldr	x20, [x8]
  42cf28:	str	x20, [x28]
  42cf2c:	cbz	x20, 42cf90 <feof@plt+0x29eb0>
  42cf30:	ldr	x8, [x19, #208]
  42cf34:	cmp	x20, x8
  42cf38:	b.eq	42cf54 <feof@plt+0x29e74>  // b.none
  42cf3c:	ldr	x8, [x19, #200]
  42cf40:	cmp	x20, x8
  42cf44:	b.ne	42ca60 <feof@plt+0x29980>  // b.any
  42cf48:	mov	w8, #0x1                   	// #1
  42cf4c:	str	w8, [sp, #32]
  42cf50:	b	42cf5c <feof@plt+0x29e7c>
  42cf54:	mov	w8, #0x1                   	// #1
  42cf58:	str	w8, [sp, #36]
  42cf5c:	ldr	x8, [sp, #48]
  42cf60:	ldr	x22, [x8]
  42cf64:	cbz	x22, 42ca60 <feof@plt+0x29980>
  42cf68:	ldr	x8, [x22, #8]
  42cf6c:	cmp	x8, x20
  42cf70:	b.eq	42cfe4 <feof@plt+0x29f04>  // b.none
  42cf74:	ldr	x22, [x22]
  42cf78:	cbnz	x22, 42cf68 <feof@plt+0x29e88>
  42cf7c:	b	42ca60 <feof@plt+0x29980>
  42cf80:	ldr	x22, [sp, #48]
  42cf84:	mov	w24, wzr
  42cf88:	mov	w23, wzr
  42cf8c:	b	42d0bc <feof@plt+0x29fdc>
  42cf90:	ldr	x8, [x19, #984]
  42cf94:	cbz	x8, 42d034 <feof@plt+0x29f54>
  42cf98:	ldr	x1, [sp, #8]
  42cf9c:	mov	x0, x19
  42cfa0:	mov	x2, x28
  42cfa4:	blr	x8
  42cfa8:	str	x0, [x21, #8]
  42cfac:	cbz	x0, 42d02c <feof@plt+0x29f4c>
  42cfb0:	mov	x0, x21
  42cfb4:	bl	42e478 <feof@plt+0x2b398>
  42cfb8:	tbz	w0, #0, 42d024 <feof@plt+0x29f44>
  42cfbc:	ldr	x8, [x19, #280]
  42cfc0:	ldr	x1, [sp, #48]
  42cfc4:	str	x8, [x21, #32]
  42cfc8:	str	x21, [x19, #280]
  42cfcc:	ldr	x8, [x1]
  42cfd0:	cbnz	x8, 42d22c <feof@plt+0x2a14c>
  42cfd4:	str	x21, [x1]
  42cfd8:	ldr	x0, [x19, #296]
  42cfdc:	bl	460f60 <feof@plt+0x5de80>
  42cfe0:	b	42d22c <feof@plt+0x2a14c>
  42cfe4:	ldr	x0, [x21]
  42cfe8:	bl	402b20 <free@plt>
  42cfec:	mov	x0, x21
  42cff0:	bl	402b20 <free@plt>
  42cff4:	ldr	x21, [x22, #24]
  42cff8:	ldr	x22, [sp, #48]
  42cffc:	ldp	w23, w24, [sp, #32]
  42d000:	b	42d0cc <feof@plt+0x29fec>
  42d004:	ldr	w3, [sp, #16]
  42d008:	mov	x0, x19
  42d00c:	mov	x1, x21
  42d010:	mov	w2, wzr
  42d014:	bl	42d270 <feof@plt+0x2a190>
  42d018:	ldr	x22, [sp, #48]
  42d01c:	ldp	w23, w24, [sp, #32]
  42d020:	b	42d0bc <feof@plt+0x29fdc>
  42d024:	ldr	x0, [x21, #8]
  42d028:	bl	402b20 <free@plt>
  42d02c:	ldr	x8, [x21]
  42d030:	str	x8, [x21, #8]
  42d034:	ldr	w8, [sp, #24]
  42d038:	ldr	x22, [sp, #48]
  42d03c:	tst	w8, #0xff
  42d040:	b.eq	42d07c <feof@plt+0x29f9c>  // b.none
  42d044:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42d048:	add	x2, x2, #0x5bf
  42d04c:	mov	w1, #0x3                   	// #3
  42d050:	mov	x0, x19
  42d054:	bl	4288a0 <feof@plt+0x257c0>
  42d058:	mov	x0, x19
  42d05c:	bl	4269f4 <feof@plt+0x23914>
  42d060:	ldrb	w8, [x0, #84]
  42d064:	cbnz	w8, 42d07c <feof@plt+0x29f9c>
  42d068:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42d06c:	add	x2, x2, #0x5f7
  42d070:	mov	w1, #0x3                   	// #3
  42d074:	mov	x0, x19
  42d078:	bl	4288a0 <feof@plt+0x257c0>
  42d07c:	ldp	w23, w24, [sp, #32]
  42d080:	ldr	w2, [sp, #20]
  42d084:	ldr	w8, [sp, #64]
  42d088:	tbz	w8, #0, 42d0ac <feof@plt+0x29fcc>
  42d08c:	ldr	x0, [x21]
  42d090:	bl	402b20 <free@plt>
  42d094:	mov	x0, x21
  42d098:	bl	402b20 <free@plt>
  42d09c:	ldr	x8, [x22]
  42d0a0:	cbz	x8, 42d250 <feof@plt+0x2a170>
  42d0a4:	mov	x21, xzr
  42d0a8:	b	42d22c <feof@plt+0x2a14c>
  42d0ac:	ldr	w3, [sp, #16]
  42d0b0:	mov	x0, x19
  42d0b4:	mov	x1, x21
  42d0b8:	bl	42d270 <feof@plt+0x2a190>
  42d0bc:	ldr	x8, [x19, #280]
  42d0c0:	mov	x20, xzr
  42d0c4:	str	x8, [x21, #32]
  42d0c8:	str	x21, [x19, #280]
  42d0cc:	ldr	x0, [x19, #312]
  42d0d0:	ldr	w8, [x0]
  42d0d4:	cmp	w8, #0x7f
  42d0d8:	b.ne	42d0f8 <feof@plt+0x2a018>  // b.any
  42d0dc:	mov	w0, #0xff0                 	// #4080
  42d0e0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42d0e4:	str	wzr, [x0]
  42d0e8:	ldr	x9, [x19, #312]
  42d0ec:	mov	w8, wzr
  42d0f0:	str	x9, [x0, #8]
  42d0f4:	str	x0, [x19, #312]
  42d0f8:	add	w9, w8, #0x1
  42d0fc:	str	w9, [x0]
  42d100:	ldr	x9, [x22]
  42d104:	mov	w8, w8
  42d108:	add	x8, x0, x8, lsl #5
  42d10c:	str	x9, [x8, #16]!
  42d110:	ldr	x9, [sp, #56]
  42d114:	str	x9, [x8, #8]
  42d118:	ldr	x9, [x19, #40]
  42d11c:	ldr	w9, [x9, #56]
  42d120:	str	x21, [x8, #24]
  42d124:	str	w9, [x8, #16]
  42d128:	str	x8, [x22]
  42d12c:	tbz	w24, #0, 42d1b0 <feof@plt+0x2a0d0>
  42d130:	ldr	x9, [x19, #208]
  42d134:	ldr	x10, [sp, #56]
  42d138:	cmp	x9, x10
  42d13c:	b.eq	42d1b0 <feof@plt+0x2a0d0>  // b.none
  42d140:	cmp	x20, x9
  42d144:	b.eq	42d1b0 <feof@plt+0x2a0d0>  // b.none
  42d148:	ldr	x0, [x19, #312]
  42d14c:	ldr	w11, [x0]
  42d150:	cmp	w11, #0x7f
  42d154:	b.ne	42d180 <feof@plt+0x2a0a0>  // b.any
  42d158:	mov	w0, #0xff0                 	// #4080
  42d15c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42d160:	str	wzr, [x0]
  42d164:	ldr	x8, [x19, #312]
  42d168:	mov	w11, wzr
  42d16c:	str	x8, [x0, #8]
  42d170:	str	x0, [x19, #312]
  42d174:	ldr	x10, [x22]
  42d178:	ldr	x9, [x19, #208]
  42d17c:	b	42d184 <feof@plt+0x2a0a4>
  42d180:	mov	x10, x8
  42d184:	add	w8, w11, #0x1
  42d188:	mov	w11, w11
  42d18c:	str	w8, [x0]
  42d190:	add	x8, x0, x11, lsl #5
  42d194:	str	x10, [x8, #16]!
  42d198:	str	x9, [x8, #8]
  42d19c:	ldr	x9, [x19, #40]
  42d1a0:	ldr	w9, [x9, #56]
  42d1a4:	str	x21, [x8, #24]
  42d1a8:	str	w9, [x8, #16]
  42d1ac:	str	x8, [x22]
  42d1b0:	tbz	w23, #0, 42d22c <feof@plt+0x2a14c>
  42d1b4:	ldr	x9, [x19, #200]
  42d1b8:	ldr	x10, [sp, #56]
  42d1bc:	cmp	x9, x10
  42d1c0:	b.eq	42d22c <feof@plt+0x2a14c>  // b.none
  42d1c4:	cmp	x20, x9
  42d1c8:	b.eq	42d22c <feof@plt+0x2a14c>  // b.none
  42d1cc:	ldr	x0, [x19, #312]
  42d1d0:	ldr	w10, [x0]
  42d1d4:	cmp	w10, #0x7f
  42d1d8:	b.ne	42d200 <feof@plt+0x2a120>  // b.any
  42d1dc:	mov	w0, #0xff0                 	// #4080
  42d1e0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42d1e4:	str	wzr, [x0]
  42d1e8:	ldr	x8, [x19, #312]
  42d1ec:	mov	w10, wzr
  42d1f0:	str	x8, [x0, #8]
  42d1f4:	str	x0, [x19, #312]
  42d1f8:	ldr	x8, [x22]
  42d1fc:	ldr	x9, [x19, #200]
  42d200:	add	w11, w10, #0x1
  42d204:	mov	w10, w10
  42d208:	add	x10, x0, x10, lsl #5
  42d20c:	str	w11, [x0]
  42d210:	str	x8, [x10, #16]!
  42d214:	str	x9, [x10, #8]
  42d218:	ldr	x8, [x19, #40]
  42d21c:	ldr	w8, [x8, #56]
  42d220:	str	x21, [x10, #24]
  42d224:	str	w8, [x10, #16]
  42d228:	str	x10, [x22]
  42d22c:	mov	x0, x21
  42d230:	ldp	x20, x19, [sp, #288]
  42d234:	ldp	x22, x21, [sp, #272]
  42d238:	ldp	x24, x23, [sp, #256]
  42d23c:	ldp	x26, x25, [sp, #240]
  42d240:	ldp	x28, x27, [sp, #224]
  42d244:	ldp	x29, x30, [sp, #208]
  42d248:	add	sp, sp, #0x130
  42d24c:	ret
  42d250:	str	x21, [x22]
  42d254:	ldr	x0, [x19, #296]
  42d258:	mov	x1, x22
  42d25c:	bl	460f60 <feof@plt+0x5de80>
  42d260:	mov	x21, xzr
  42d264:	b	42d22c <feof@plt+0x2a14c>
  42d268:	str	x24, [x21, #16]
  42d26c:	b	42d018 <feof@plt+0x29f38>
  42d270:	stp	x29, x30, [sp, #-64]!
  42d274:	stp	x24, x23, [sp, #16]
  42d278:	stp	x22, x21, [sp, #32]
  42d27c:	stp	x20, x19, [sp, #48]
  42d280:	ldr	x8, [x0, #40]
  42d284:	mov	w19, w3
  42d288:	mov	x20, x0
  42d28c:	mov	x21, x1
  42d290:	ldr	w8, [x8, #60]
  42d294:	mov	x29, sp
  42d298:	cmp	w8, #0x2
  42d29c:	b.cc	42d2c0 <feof@plt+0x2a1e0>  // b.lo, b.ul, b.last
  42d2a0:	ldr	x8, [x20]
  42d2a4:	cbz	x8, 42d2b4 <feof@plt+0x2a1d4>
  42d2a8:	ldrb	w8, [x8, #106]
  42d2ac:	cmp	w8, #0x0
  42d2b0:	cset	w8, ne  // ne = any
  42d2b4:	ldrb	w9, [x20, #26]
  42d2b8:	cbnz	w9, 42d2cc <feof@plt+0x2a1ec>
  42d2bc:	b	42d2e0 <feof@plt+0x2a200>
  42d2c0:	mov	w8, wzr
  42d2c4:	ldrb	w9, [x20, #26]
  42d2c8:	cbz	w9, 42d2e0 <feof@plt+0x2a200>
  42d2cc:	ldp	x20, x19, [sp, #48]
  42d2d0:	ldp	x22, x21, [sp, #32]
  42d2d4:	ldp	x24, x23, [sp, #16]
  42d2d8:	ldp	x29, x30, [sp], #64
  42d2dc:	ret
  42d2e0:	ldr	w22, [x20, #1200]
  42d2e4:	ldr	w23, [x21, #204]
  42d2e8:	cmp	w2, #0x0
  42d2ec:	cset	w9, ne  // ne = any
  42d2f0:	orr	w24, w9, w8
  42d2f4:	bl	402e70 <__errno_location@plt>
  42d2f8:	cmp	w22, w24
  42d2fc:	str	w23, [x0]
  42d300:	b.le	42d32c <feof@plt+0x2a24c>
  42d304:	cmp	w23, #0x2
  42d308:	b.ne	42d338 <feof@plt+0x2a258>  // b.any
  42d30c:	ldrb	w8, [x20, #1204]
  42d310:	cbz	w8, 42d338 <feof@plt+0x2a258>
  42d314:	ldr	x0, [x20, #712]
  42d318:	ldr	x1, [x21]
  42d31c:	bl	43c718 <feof@plt+0x39638>
  42d320:	ldrb	w8, [x20, #1207]
  42d324:	cbnz	w8, 42d338 <feof@plt+0x2a258>
  42d328:	b	42d2cc <feof@plt+0x2a1ec>
  42d32c:	cbz	w22, 42d338 <feof@plt+0x2a258>
  42d330:	ldrb	w8, [x20, #1207]
  42d334:	cbz	w8, 42d364 <feof@plt+0x2a284>
  42d338:	ldr	x2, [x21, #8]
  42d33c:	cbnz	x2, 42d344 <feof@plt+0x2a264>
  42d340:	ldr	x2, [x21]
  42d344:	mov	w1, #0x6                   	// #6
  42d348:	mov	x0, x20
  42d34c:	mov	w3, w19
  42d350:	ldp	x20, x19, [sp, #48]
  42d354:	ldp	x22, x21, [sp, #32]
  42d358:	ldp	x24, x23, [sp, #16]
  42d35c:	ldp	x29, x30, [sp], #64
  42d360:	b	429358 <feof@plt+0x26278>
  42d364:	ldr	x2, [x21, #8]
  42d368:	cbnz	x2, 42d370 <feof@plt+0x2a290>
  42d36c:	ldr	x2, [x21]
  42d370:	mov	x0, x20
  42d374:	mov	w1, wzr
  42d378:	b	42d34c <feof@plt+0x2a26c>
  42d37c:	sub	sp, sp, #0x90
  42d380:	stp	x29, x30, [sp, #48]
  42d384:	stp	x28, x27, [sp, #64]
  42d388:	stp	x26, x25, [sp, #80]
  42d38c:	stp	x24, x23, [sp, #96]
  42d390:	stp	x22, x21, [sp, #112]
  42d394:	stp	x20, x19, [sp, #128]
  42d398:	ldrb	w8, [x1, #210]
  42d39c:	add	x29, sp, #0x30
  42d3a0:	cbz	w8, 42d3cc <feof@plt+0x2a2ec>
  42d3a4:	mov	w22, wzr
  42d3a8:	mov	w0, w22
  42d3ac:	ldp	x20, x19, [sp, #128]
  42d3b0:	ldp	x22, x21, [sp, #112]
  42d3b4:	ldp	x24, x23, [sp, #96]
  42d3b8:	ldp	x26, x25, [sp, #80]
  42d3bc:	ldp	x28, x27, [sp, #64]
  42d3c0:	ldp	x29, x30, [sp, #48]
  42d3c4:	add	sp, sp, #0x90
  42d3c8:	ret
  42d3cc:	mov	w22, w3
  42d3d0:	mov	w21, w2
  42d3d4:	mov	x19, x1
  42d3d8:	mov	x20, x0
  42d3dc:	tbz	w2, #0, 42d3f4 <feof@plt+0x2a314>
  42d3e0:	mov	w8, #0x1                   	// #1
  42d3e4:	strb	w8, [x20, #417]
  42d3e8:	ldrh	w9, [x19, #208]
  42d3ec:	strb	w8, [x19, #210]
  42d3f0:	cbnz	w9, 42d3a4 <feof@plt+0x2a2c4>
  42d3f4:	ldr	x8, [x19, #56]
  42d3f8:	cbz	x8, 42d404 <feof@plt+0x2a324>
  42d3fc:	ldrb	w8, [x8, #18]
  42d400:	tbnz	w8, #1, 42d3a4 <feof@plt+0x2a2c4>
  42d404:	ldr	x1, [x19, #16]
  42d408:	cbz	x1, 42d43c <feof@plt+0x2a35c>
  42d40c:	ldr	x8, [x20, #976]
  42d410:	ldr	w2, [x19, #200]
  42d414:	ldr	x3, [x19, #8]
  42d418:	mov	x0, x20
  42d41c:	blr	x8
  42d420:	ldr	x0, [x19, #16]
  42d424:	mov	w8, #0xffffffff            	// #-1
  42d428:	str	w8, [x19, #200]
  42d42c:	bl	402b20 <free@plt>
  42d430:	mov	w22, wzr
  42d434:	str	xzr, [x19, #16]
  42d438:	b	42d3a8 <feof@plt+0x2a2c8>
  42d43c:	mov	x0, x20
  42d440:	mov	x1, x19
  42d444:	mov	w2, w22
  42d448:	bl	42ec78 <feof@plt+0x2bb98>
  42d44c:	tbz	w0, #0, 42d3a4 <feof@plt+0x2a2c4>
  42d450:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  42d454:	ldr	x24, [x8, #2440]
  42d458:	cbz	x24, 42d594 <feof@plt+0x2a4b4>
  42d45c:	tbnz	w21, #0, 42d468 <feof@plt+0x2a388>
  42d460:	ldrb	w8, [x24, #8]
  42d464:	cbz	w8, 42d594 <feof@plt+0x2a4b4>
  42d468:	ldr	x8, [x19, #120]
  42d46c:	and	w9, w21, #0x1
  42d470:	strb	wzr, [sp, #32]
  42d474:	str	x19, [sp, #40]
  42d478:	str	x8, [sp, #8]
  42d47c:	strb	w9, [sp, #33]
  42d480:	ldr	x25, [x24]
  42d484:	cbz	x25, 42d594 <feof@plt+0x2a4b4>
  42d488:	add	x9, sp, #0x8
  42d48c:	mov	w8, wzr
  42d490:	mov	x27, xzr
  42d494:	add	x9, x9, #0x8
  42d498:	mov	w26, #0xffffffff            	// #-1
  42d49c:	str	x9, [sp]
  42d4a0:	b	42d4b0 <feof@plt+0x2a3d0>
  42d4a4:	add	x27, x28, #0x1
  42d4a8:	cmp	x27, x25
  42d4ac:	b.cs	42d594 <feof@plt+0x2a4b4>  // b.hs, b.nlast
  42d4b0:	add	x9, x25, x27
  42d4b4:	lsr	x28, x9, #1
  42d4b8:	add	x23, x24, x28, lsl #5
  42d4bc:	ldr	x9, [x23, #16]!
  42d4c0:	ldr	x10, [sp, #8]
  42d4c4:	rev	x9, x9
  42d4c8:	rev	x10, x10
  42d4cc:	cmp	x10, x9
  42d4d0:	cset	w9, hi  // hi = pmore
  42d4d4:	cset	w10, cc  // cc = lo, ul, last
  42d4d8:	subs	w9, w9, w10
  42d4dc:	b.ne	42d54c <feof@plt+0x2a46c>  // b.any
  42d4e0:	tst	w8, #0xff
  42d4e4:	b.ne	42d504 <feof@plt+0x2a424>  // b.any
  42d4e8:	ldr	x8, [sp, #40]
  42d4ec:	ldr	x2, [sp]
  42d4f0:	ldr	x0, [x8, #40]
  42d4f4:	ldr	x1, [x8, #120]
  42d4f8:	bl	459f4c <feof@plt+0x56e6c>
  42d4fc:	mov	w8, #0x1                   	// #1
  42d500:	strb	w8, [sp, #32]
  42d504:	add	x11, x24, x28, lsl #5
  42d508:	ldr	x9, [x11, #24]!
  42d50c:	ldr	x12, [sp, #16]
  42d510:	rev	x10, x9
  42d514:	rev	x9, x12
  42d518:	cmp	x9, x10
  42d51c:	b.ne	42d540 <feof@plt+0x2a460>  // b.any
  42d520:	ldr	x9, [sp, #24]
  42d524:	ldr	x10, [x11, #8]
  42d528:	rev	x9, x9
  42d52c:	rev	x10, x10
  42d530:	cmp	x9, x10
  42d534:	b.ne	42d540 <feof@plt+0x2a460>  // b.any
  42d538:	mov	w9, wzr
  42d53c:	b	42d548 <feof@plt+0x2a468>
  42d540:	cmp	x9, x10
  42d544:	cneg	w9, w26, cs  // cs = hs, nlast
  42d548:	cbz	w9, 42d560 <feof@plt+0x2a480>
  42d54c:	tbz	w9, #31, 42d4a4 <feof@plt+0x2a3c4>
  42d550:	mov	x25, x28
  42d554:	cmp	x27, x25
  42d558:	b.cc	42d4b0 <feof@plt+0x2a3d0>  // b.lo, b.ul, b.last
  42d55c:	b	42d594 <feof@plt+0x2a4b4>
  42d560:	ldrb	w9, [sp, #33]
  42d564:	cbnz	w9, 42d578 <feof@plt+0x2a498>
  42d568:	add	x9, x24, x28, lsl #5
  42d56c:	ldrb	w9, [x9, #40]
  42d570:	cbz	w9, 42d4a4 <feof@plt+0x2a3c4>
  42d574:	b	42d57c <feof@plt+0x2a49c>
  42d578:	cbz	x23, 42d594 <feof@plt+0x2a4b4>
  42d57c:	mov	w22, wzr
  42d580:	tbnz	w21, #0, 42d3a8 <feof@plt+0x2a2c8>
  42d584:	mov	w8, #0x1                   	// #1
  42d588:	strb	w8, [x20, #417]
  42d58c:	strb	w8, [x19, #210]
  42d590:	b	42d3a8 <feof@plt+0x2a2c8>
  42d594:	ldrb	w8, [x20, #417]
  42d598:	cbz	w8, 42d6cc <feof@plt+0x2a5ec>
  42d59c:	ldr	x25, [x20, #280]
  42d5a0:	cbz	x25, 42d6cc <feof@plt+0x2a5ec>
  42d5a4:	mov	w26, #0xffffffff            	// #-1
  42d5a8:	b	42d5bc <feof@plt+0x2a4dc>
  42d5ac:	ldr	w8, [x25, #204]
  42d5b0:	cbz	w8, 42d5d4 <feof@plt+0x2a4f4>
  42d5b4:	ldr	x25, [x25, #32]
  42d5b8:	cbz	x25, 42d6cc <feof@plt+0x2a5ec>
  42d5bc:	cmp	x25, x19
  42d5c0:	b.eq	42d5b4 <feof@plt+0x2a4d4>  // b.none
  42d5c4:	tbnz	w21, #0, 42d5ac <feof@plt+0x2a4cc>
  42d5c8:	ldrb	w8, [x25, #210]
  42d5cc:	cbnz	w8, 42d5ac <feof@plt+0x2a4cc>
  42d5d0:	b	42d5b4 <feof@plt+0x2a4d4>
  42d5d4:	ldr	x8, [x25, #160]
  42d5d8:	ldr	x9, [x19, #160]
  42d5dc:	cmp	x8, x9
  42d5e0:	b.ne	42d5b4 <feof@plt+0x2a4d4>  // b.any
  42d5e4:	ldr	x8, [x25, #120]
  42d5e8:	ldr	x9, [x19, #120]
  42d5ec:	cmp	x8, x9
  42d5f0:	b.ne	42d5b4 <feof@plt+0x2a4d4>  // b.any
  42d5f4:	ldr	x8, [x25, #40]
  42d5f8:	mov	x23, x25
  42d5fc:	cbz	x8, 42d650 <feof@plt+0x2a570>
  42d600:	ldrb	w8, [x25, #213]
  42d604:	mov	x23, x25
  42d608:	cbnz	w8, 42d650 <feof@plt+0x2a570>
  42d60c:	ldr	x27, [x25, #64]
  42d610:	ldr	x24, [x25]
  42d614:	mov	w0, #0x1                   	// #1
  42d618:	mov	w1, #0xd8                  	// #216
  42d61c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  42d620:	ldr	x8, [x20]
  42d624:	mov	x23, x0
  42d628:	str	w26, [x0, #200]
  42d62c:	str	x27, [x0, #64]
  42d630:	cmp	x8, #0x0
  42d634:	cset	w8, eq  // eq = none
  42d638:	strb	w8, [x0, #212]
  42d63c:	mov	x0, x24
  42d640:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  42d644:	str	x0, [x23]
  42d648:	ldr	x8, [x25, #8]
  42d64c:	str	x8, [x23, #8]
  42d650:	mov	x0, x20
  42d654:	mov	x1, x23
  42d658:	mov	w2, w22
  42d65c:	bl	42ec78 <feof@plt+0x2bb98>
  42d660:	tbz	w0, #0, 42d68c <feof@plt+0x2a5ac>
  42d664:	ldr	x2, [x23, #120]
  42d668:	ldr	x8, [x19, #120]
  42d66c:	cmp	x2, x8
  42d670:	b.ne	42d68c <feof@plt+0x2a5ac>  // b.any
  42d674:	ldr	x0, [x23, #40]
  42d678:	ldr	x1, [x19, #40]
  42d67c:	bl	403090 <bcmp@plt>
  42d680:	cmp	w0, #0x0
  42d684:	cset	w24, eq  // eq = none
  42d688:	b	42d690 <feof@plt+0x2a5b0>
  42d68c:	mov	w24, wzr
  42d690:	ldr	x8, [x25, #40]
  42d694:	cbz	x8, 42d6c4 <feof@plt+0x2a5e4>
  42d698:	ldrb	w8, [x25, #213]
  42d69c:	cbnz	w8, 42d6c4 <feof@plt+0x2a5e4>
  42d6a0:	ldr	x0, [x23, #48]
  42d6a4:	str	xzr, [x23, #8]
  42d6a8:	bl	402b20 <free@plt>
  42d6ac:	ldr	x0, [x23]
  42d6b0:	bl	402b20 <free@plt>
  42d6b4:	ldr	x0, [x23, #8]
  42d6b8:	bl	402b20 <free@plt>
  42d6bc:	mov	x0, x23
  42d6c0:	bl	402b20 <free@plt>
  42d6c4:	tbz	w24, #0, 42d5b4 <feof@plt+0x2a4d4>
  42d6c8:	b	42d3a4 <feof@plt+0x2a2c4>
  42d6cc:	ldr	x8, [x20]
  42d6d0:	cbz	x8, 42d6f0 <feof@plt+0x2a610>
  42d6d4:	ldr	x9, [x19, #64]
  42d6d8:	cbz	x9, 42d6f0 <feof@plt+0x2a610>
  42d6dc:	ldrb	w8, [x8, #106]
  42d6e0:	ldrb	w9, [x9, #20]
  42d6e4:	cmp	w8, w9
  42d6e8:	csel	w21, w8, w9, hi  // hi = pmore
  42d6ec:	b	42d6f4 <feof@plt+0x2a614>
  42d6f0:	mov	w21, wzr
  42d6f4:	ldr	w8, [x20, #1200]
  42d6f8:	cmp	w21, #0x0
  42d6fc:	cset	w9, ne  // ne = any
  42d700:	cmp	w8, w9
  42d704:	b.le	42d72c <feof@plt+0x2a64c>
  42d708:	ldrh	w8, [x19, #208]
  42d70c:	cbnz	w8, 42d72c <feof@plt+0x2a64c>
  42d710:	ldrb	w8, [x19, #212]
  42d714:	cbz	w8, 42d720 <feof@plt+0x2a640>
  42d718:	ldrb	w8, [x20, #1206]
  42d71c:	cbnz	w8, 42d72c <feof@plt+0x2a64c>
  42d720:	ldr	x0, [x20, #712]
  42d724:	ldr	x1, [x19, #8]
  42d728:	bl	43c718 <feof@plt+0x39638>
  42d72c:	ldrh	w8, [x19, #208]
  42d730:	strb	wzr, [x19, #213]
  42d734:	ldr	x1, [x19, #40]
  42d738:	ldr	x2, [x19, #120]
  42d73c:	add	w8, w8, #0x1
  42d740:	strh	w8, [x19, #208]
  42d744:	ldrb	w8, [x20, #1155]
  42d748:	cbz	w8, 42d758 <feof@plt+0x2a678>
  42d74c:	ldrb	w8, [x20, #1244]
  42d750:	eor	w3, w8, #0x1
  42d754:	b	42d75c <feof@plt+0x2a67c>
  42d758:	mov	w3, wzr
  42d75c:	mov	x0, x20
  42d760:	bl	426a70 <feof@plt+0x23990>
  42d764:	str	x19, [x0, #80]
  42d768:	strb	w21, [x0, #106]
  42d76c:	ldr	x8, [x19, #48]
  42d770:	mov	w22, #0x1                   	// #1
  42d774:	mov	w3, #0x1                   	// #1
  42d778:	mov	w1, wzr
  42d77c:	str	x8, [x0, #40]
  42d780:	strb	w22, [x20, #440]
  42d784:	str	xzr, [x20, #424]
  42d788:	ldr	x2, [x19, #8]
  42d78c:	mov	x0, x20
  42d790:	mov	w4, w21
  42d794:	bl	424c74 <feof@plt+0x21b94>
  42d798:	b	42d3a8 <feof@plt+0x2a2c8>
  42d79c:	mov	w8, #0x1                   	// #1
  42d7a0:	strb	w8, [x0, #417]
  42d7a4:	strb	w8, [x1, #210]
  42d7a8:	ret
  42d7ac:	stp	x29, x30, [sp, #-64]!
  42d7b0:	stp	x24, x23, [sp, #16]
  42d7b4:	stp	x22, x21, [sp, #32]
  42d7b8:	stp	x20, x19, [sp, #48]
  42d7bc:	mov	w20, w4
  42d7c0:	mov	w21, w3
  42d7c4:	mov	w22, w2
  42d7c8:	mov	x23, x1
  42d7cc:	subs	w24, w3, #0x3
  42d7d0:	mov	x19, x0
  42d7d4:	mov	x29, sp
  42d7d8:	b.ne	42d7f4 <feof@plt+0x2a714>  // b.any
  42d7dc:	ldr	x9, [x19, #488]
  42d7e0:	ldr	x8, [x19, #448]
  42d7e4:	ldr	x9, [x9, #16]
  42d7e8:	cmp	x8, x9
  42d7ec:	b.eq	42d7f4 <feof@plt+0x2a714>  // b.none
  42d7f0:	stur	wzr, [x8, #-24]
  42d7f4:	mov	x0, x19
  42d7f8:	mov	x1, x23
  42d7fc:	mov	w2, w22
  42d800:	mov	w3, w21
  42d804:	bl	42d908 <feof@plt+0x2a828>
  42d808:	cbz	x0, 42d844 <feof@plt+0x2a764>
  42d80c:	cmp	w21, #0x4
  42d810:	mov	x2, x0
  42d814:	cset	w5, eq  // eq = none
  42d818:	mov	x0, x19
  42d81c:	mov	x1, x23
  42d820:	mov	w3, wzr
  42d824:	mov	w4, w22
  42d828:	mov	w6, w20
  42d82c:	bl	42c944 <feof@plt+0x29864>
  42d830:	cmp	w21, #0x4
  42d834:	mov	x22, x0
  42d838:	b.ne	42d85c <feof@plt+0x2a77c>  // b.any
  42d83c:	mov	w0, wzr
  42d840:	cbnz	x22, 42d85c <feof@plt+0x2a77c>
  42d844:	ldp	x20, x19, [sp, #48]
  42d848:	ldp	x22, x21, [sp, #32]
  42d84c:	ldp	x24, x23, [sp, #16]
  42d850:	and	w0, w0, #0x1
  42d854:	ldp	x29, x30, [sp], #64
  42d858:	ret
  42d85c:	ldr	x8, [x22, #16]
  42d860:	cbz	x8, 42d88c <feof@plt+0x2a7ac>
  42d864:	cmp	w21, #0x2
  42d868:	mov	x0, x19
  42d86c:	mov	x1, x22
  42d870:	mov	w3, w20
  42d874:	ldp	x20, x19, [sp, #48]
  42d878:	ldp	x22, x21, [sp, #32]
  42d87c:	ldp	x24, x23, [sp, #16]
  42d880:	cset	w2, eq  // eq = none
  42d884:	ldp	x29, x30, [sp], #64
  42d888:	b	42d37c <feof@plt+0x2a29c>
  42d88c:	cmp	w24, #0x2
  42d890:	b.cc	42d864 <feof@plt+0x2a784>  // b.lo, b.ul, b.last
  42d894:	ldr	w8, [x22, #204]
  42d898:	cbnz	w8, 42d864 <feof@plt+0x2a784>
  42d89c:	ldr	x0, [x19, #40]
  42d8a0:	ldr	w1, [x0, #56]
  42d8a4:	bl	435838 <feof@plt+0x32758>
  42d8a8:	ldr	x8, [x19, #40]
  42d8ac:	mov	w23, w0
  42d8b0:	mov	w1, w20
  42d8b4:	mov	x0, x8
  42d8b8:	bl	435838 <feof@plt+0x32758>
  42d8bc:	cmp	w23, w0
  42d8c0:	b.le	42d864 <feof@plt+0x2a784>
  42d8c4:	ldr	x8, [x19, #40]
  42d8c8:	cmp	w21, #0x2
  42d8cc:	cset	w2, eq  // eq = none
  42d8d0:	mov	x0, x19
  42d8d4:	ldr	w9, [x8, #56]
  42d8d8:	mov	x1, x22
  42d8dc:	mov	w3, w20
  42d8e0:	sub	w9, w9, #0x1
  42d8e4:	str	w9, [x8, #56]
  42d8e8:	bl	42d37c <feof@plt+0x2a29c>
  42d8ec:	tbnz	w0, #0, 42d844 <feof@plt+0x2a764>
  42d8f0:	ldr	x8, [x19, #40]
  42d8f4:	mov	w0, wzr
  42d8f8:	ldr	w9, [x8, #56]
  42d8fc:	add	w9, w9, #0x1
  42d900:	str	w9, [x8, #56]
  42d904:	b	42d844 <feof@plt+0x2a764>
  42d908:	stp	x29, x30, [sp, #-48]!
  42d90c:	stp	x22, x21, [sp, #16]
  42d910:	stp	x20, x19, [sp, #32]
  42d914:	ldrb	w9, [x1]
  42d918:	mov	x19, x0
  42d91c:	mov	x29, sp
  42d920:	cmp	w9, #0x2f
  42d924:	b.ne	42d930 <feof@plt+0x2a850>  // b.any
  42d928:	add	x0, x19, #0xd8
  42d92c:	b	42d994 <feof@plt+0x2a8b4>
  42d930:	ldr	x9, [x19]
  42d934:	add	x10, x19, #0x120
  42d938:	mov	x8, x1
  42d93c:	add	x11, x9, #0x50
  42d940:	cmp	x9, #0x0
  42d944:	csel	x10, x10, x11, eq  // eq = none
  42d948:	ldr	x22, [x10]
  42d94c:	cmp	w3, #0x1
  42d950:	b.ne	42d968 <feof@plt+0x2a888>  // b.any
  42d954:	ldr	x10, [x22, #64]
  42d958:	cbz	x10, 42d968 <feof@plt+0x2a888>
  42d95c:	add	x11, x19, #0xd8
  42d960:	cmp	x10, x11
  42d964:	b.ne	42d970 <feof@plt+0x2a890>  // b.any
  42d968:	cbz	w2, 42d9a4 <feof@plt+0x2a8c4>
  42d96c:	add	x10, x19, #0xd0
  42d970:	ldr	x0, [x10]
  42d974:	cbnz	x0, 42d994 <feof@plt+0x2a8b4>
  42d978:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42d97c:	add	x2, x2, #0x695
  42d980:	mov	w1, #0x3                   	// #3
  42d984:	mov	x0, x19
  42d988:	mov	x3, x8
  42d98c:	bl	4288a0 <feof@plt+0x257c0>
  42d990:	mov	x0, xzr
  42d994:	ldp	x20, x19, [sp, #32]
  42d998:	ldp	x22, x21, [sp, #16]
  42d99c:	ldp	x29, x30, [sp], #48
  42d9a0:	ret
  42d9a4:	cmp	w3, #0x3
  42d9a8:	b.ne	42d9c0 <feof@plt+0x2a8e0>  // b.any
  42d9ac:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42d9b0:	add	x1, x1, #0x692
  42d9b4:	mov	x0, x19
  42d9b8:	mov	w2, wzr
  42d9bc:	b	42da2c <feof@plt+0x2a94c>
  42d9c0:	ldrb	w10, [x19, #416]
  42d9c4:	cbz	w10, 42d9d8 <feof@plt+0x2a8f8>
  42d9c8:	add	x10, x19, #0xc8
  42d9cc:	ldr	x0, [x10]
  42d9d0:	cbnz	x0, 42d994 <feof@plt+0x2a8b4>
  42d9d4:	b	42d978 <feof@plt+0x2a898>
  42d9d8:	ldr	x20, [x22, #24]
  42d9dc:	cbnz	x20, 42da14 <feof@plt+0x2a934>
  42d9e0:	ldr	x0, [x22, #8]
  42d9e4:	bl	4613f4 <feof@plt+0x5e314>
  42d9e8:	ldr	x8, [x22, #8]
  42d9ec:	sub	x21, x0, x8
  42d9f0:	add	x0, x21, #0x1
  42d9f4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42d9f8:	ldr	x1, [x22, #8]
  42d9fc:	mov	x2, x21
  42da00:	mov	x20, x0
  42da04:	bl	4029c0 <memcpy@plt>
  42da08:	strb	wzr, [x20, x21]
  42da0c:	str	x20, [x22, #24]
  42da10:	ldr	x9, [x19]
  42da14:	cbz	x9, 42da20 <feof@plt+0x2a940>
  42da18:	ldrb	w2, [x9, #106]
  42da1c:	b	42da24 <feof@plt+0x2a944>
  42da20:	mov	w2, wzr
  42da24:	mov	x0, x19
  42da28:	mov	x1, x20
  42da2c:	ldp	x20, x19, [sp, #32]
  42da30:	ldp	x22, x21, [sp, #16]
  42da34:	ldp	x29, x30, [sp], #48
  42da38:	b	42e94c <feof@plt+0x2b86c>
  42da3c:	stp	x29, x30, [sp, #-32]!
  42da40:	stp	x20, x19, [sp, #16]
  42da44:	ldr	x19, [x0, #296]
  42da48:	mov	x0, x1
  42da4c:	mov	x29, sp
  42da50:	mov	x20, x1
  42da54:	bl	4610d8 <feof@plt+0x5dff8>
  42da58:	mov	w2, w0
  42da5c:	mov	x0, x19
  42da60:	mov	x1, x20
  42da64:	bl	460930 <feof@plt+0x5d850>
  42da68:	cbnz	x0, 42da78 <feof@plt+0x2a998>
  42da6c:	b	42da90 <feof@plt+0x2a9b0>
  42da70:	ldr	x0, [x0]
  42da74:	cbz	x0, 42da90 <feof@plt+0x2a9b0>
  42da78:	ldr	x8, [x0, #8]
  42da7c:	cbz	x8, 42da70 <feof@plt+0x2a990>
  42da80:	ldr	x8, [x0, #24]
  42da84:	ldr	w8, [x8, #204]
  42da88:	cbnz	w8, 42da70 <feof@plt+0x2a990>
  42da8c:	mov	w0, #0x1                   	// #1
  42da90:	ldp	x20, x19, [sp, #16]
  42da94:	ldp	x29, x30, [sp], #32
  42da98:	ret
  42da9c:	stp	x29, x30, [sp, #-48]!
  42daa0:	stp	x22, x21, [sp, #16]
  42daa4:	stp	x20, x19, [sp, #32]
  42daa8:	ldr	x20, [x0, #296]
  42daac:	mov	x21, x0
  42dab0:	mov	x0, x1
  42dab4:	mov	x29, sp
  42dab8:	mov	w19, w2
  42dabc:	mov	x22, x1
  42dac0:	bl	4610d8 <feof@plt+0x5dff8>
  42dac4:	mov	w2, w0
  42dac8:	mov	x0, x20
  42dacc:	mov	x1, x22
  42dad0:	bl	460930 <feof@plt+0x5d850>
  42dad4:	mov	x20, x0
  42dad8:	tbnz	w19, #31, 42dae4 <feof@plt+0x2aa04>
  42dadc:	cbnz	x20, 42db14 <feof@plt+0x2aa34>
  42dae0:	b	42daf8 <feof@plt+0x2aa18>
  42dae4:	ldr	x0, [x21, #40]
  42dae8:	mov	w1, w19
  42daec:	bl	43479c <feof@plt+0x316bc>
  42daf0:	mov	w19, w0
  42daf4:	cbnz	x20, 42db14 <feof@plt+0x2aa34>
  42daf8:	mov	w0, wzr
  42dafc:	ldp	x20, x19, [sp, #32]
  42db00:	ldp	x22, x21, [sp, #16]
  42db04:	ldp	x29, x30, [sp], #48
  42db08:	ret
  42db0c:	ldr	x20, [x20]
  42db10:	cbz	x20, 42daf8 <feof@plt+0x2aa18>
  42db14:	ldr	x8, [x20, #8]
  42db18:	cbz	x8, 42db0c <feof@plt+0x2aa2c>
  42db1c:	ldr	x8, [x20, #24]
  42db20:	ldr	w8, [x8, #204]
  42db24:	cbnz	w8, 42db0c <feof@plt+0x2aa2c>
  42db28:	ldr	w8, [x20, #16]
  42db2c:	cmp	w8, w19
  42db30:	b.hi	42db0c <feof@plt+0x2aa2c>  // b.pmore
  42db34:	mov	w0, #0x1                   	// #1
  42db38:	b	42dafc <feof@plt+0x2aa1c>
  42db3c:	stp	x29, x30, [sp, #-64]!
  42db40:	str	x23, [sp, #16]
  42db44:	stp	x22, x21, [sp, #32]
  42db48:	stp	x20, x19, [sp, #48]
  42db4c:	adrp	x20, 42d000 <feof@plt+0x29f20>
  42db50:	adrp	x21, 42d000 <feof@plt+0x29f20>
  42db54:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x838>
  42db58:	adrp	x23, 402000 <_Unwind_Backtrace@plt-0x960>
  42db5c:	add	x20, x20, #0xc28
  42db60:	add	x21, x21, #0xc48
  42db64:	add	x22, x22, #0x1fc
  42db68:	add	x23, x23, #0xb20
  42db6c:	mov	x19, x0
  42db70:	mov	w0, #0x7f                  	// #127
  42db74:	mov	x1, x20
  42db78:	mov	x2, x21
  42db7c:	mov	x3, xzr
  42db80:	mov	x4, x22
  42db84:	mov	x5, x23
  42db88:	mov	x29, sp
  42db8c:	bl	460240 <feof@plt+0x5d160>
  42db90:	str	x0, [x19, #296]
  42db94:	mov	w0, #0x7f                  	// #127
  42db98:	mov	x1, x20
  42db9c:	mov	x2, x21
  42dba0:	mov	x3, xzr
  42dba4:	mov	x4, x22
  42dba8:	mov	x5, x23
  42dbac:	bl	460240 <feof@plt+0x5d160>
  42dbb0:	str	x0, [x19, #304]
  42dbb4:	mov	w0, #0xff0                 	// #4080
  42dbb8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42dbbc:	str	wzr, [x0]
  42dbc0:	ldr	x8, [x19, #312]
  42dbc4:	adrp	x1, 461000 <feof@plt+0x5df20>
  42dbc8:	adrp	x2, 42d000 <feof@plt+0x29f20>
  42dbcc:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x838>
  42dbd0:	str	x8, [x0, #8]
  42dbd4:	str	x0, [x19, #312]
  42dbd8:	add	x1, x1, #0xd8
  42dbdc:	add	x2, x2, #0xc80
  42dbe0:	mov	w0, #0x7f                  	// #127
  42dbe4:	mov	x3, xzr
  42dbe8:	mov	x4, x22
  42dbec:	mov	x5, x23
  42dbf0:	add	x20, x20, #0x1c8
  42dbf4:	bl	460240 <feof@plt+0x5d160>
  42dbf8:	str	x0, [x19, #320]
  42dbfc:	add	x8, x19, #0x148
  42dc00:	mov	x3, x20
  42dc04:	mov	x4, x23
  42dc08:	ldp	x20, x19, [sp, #48]
  42dc0c:	ldp	x22, x21, [sp, #32]
  42dc10:	ldr	x23, [sp, #16]
  42dc14:	mov	x0, x8
  42dc18:	mov	x1, xzr
  42dc1c:	mov	x2, xzr
  42dc20:	ldp	x29, x30, [sp], #64
  42dc24:	b	461450 <_obstack_begin@@Base>
  42dc28:	ldr	x8, [x0, #8]
  42dc2c:	cbz	x8, 42dc3c <feof@plt+0x2ab5c>
  42dc30:	ldr	x8, [x0, #24]
  42dc34:	ldr	x0, [x8]
  42dc38:	b	4610d8 <feof@plt+0x5dff8>
  42dc3c:	ldr	x8, [x0, #24]
  42dc40:	ldr	x0, [x8, #8]!
  42dc44:	b	4610d8 <feof@plt+0x5dff8>
  42dc48:	stp	x29, x30, [sp, #-16]!
  42dc4c:	ldr	x8, [x0, #8]
  42dc50:	mov	x29, sp
  42dc54:	cbz	x8, 42dc60 <feof@plt+0x2ab80>
  42dc58:	ldr	x8, [x0, #24]
  42dc5c:	b	42dc68 <feof@plt+0x2ab88>
  42dc60:	ldr	x8, [x0, #24]
  42dc64:	add	x8, x8, #0x8
  42dc68:	ldr	x0, [x8]
  42dc6c:	bl	45ffd0 <feof@plt+0x5cef0>
  42dc70:	cmp	w0, #0x0
  42dc74:	cset	w0, eq  // eq = none
  42dc78:	ldp	x29, x30, [sp], #16
  42dc7c:	ret
  42dc80:	stp	x29, x30, [sp, #-16]!
  42dc84:	mov	x29, sp
  42dc88:	bl	45ffd0 <feof@plt+0x5cef0>
  42dc8c:	cmp	w0, #0x0
  42dc90:	cset	w0, eq  // eq = none
  42dc94:	ldp	x29, x30, [sp], #16
  42dc98:	ret
  42dc9c:	stp	x29, x30, [sp, #-32]!
  42dca0:	stp	x20, x19, [sp, #16]
  42dca4:	mov	x19, x0
  42dca8:	ldr	x0, [x0, #296]
  42dcac:	mov	x29, sp
  42dcb0:	bl	460754 <feof@plt+0x5d674>
  42dcb4:	ldr	x0, [x19, #304]
  42dcb8:	bl	460754 <feof@plt+0x5d674>
  42dcbc:	ldr	x0, [x19, #320]
  42dcc0:	bl	460754 <feof@plt+0x5d674>
  42dcc4:	add	x0, x19, #0x148
  42dcc8:	mov	x1, xzr
  42dccc:	bl	461734 <_obstack_free@@Base>
  42dcd0:	ldr	x0, [x19, #312]
  42dcd4:	cbz	x0, 42dce8 <feof@plt+0x2ac08>
  42dcd8:	ldr	x20, [x0, #8]
  42dcdc:	bl	402b20 <free@plt>
  42dce0:	mov	x0, x20
  42dce4:	cbnz	x20, 42dcd8 <feof@plt+0x2abf8>
  42dce8:	ldr	x19, [x19, #280]
  42dcec:	cbz	x19, 42dd1c <feof@plt+0x2ac3c>
  42dcf0:	ldr	x0, [x19, #48]
  42dcf4:	ldr	x20, [x19, #32]
  42dcf8:	bl	402b20 <free@plt>
  42dcfc:	ldr	x0, [x19]
  42dd00:	bl	402b20 <free@plt>
  42dd04:	ldr	x0, [x19, #8]
  42dd08:	bl	402b20 <free@plt>
  42dd0c:	mov	x0, x19
  42dd10:	bl	402b20 <free@plt>
  42dd14:	mov	x19, x20
  42dd18:	cbnz	x20, 42dcf0 <feof@plt+0x2ac10>
  42dd1c:	ldp	x20, x19, [sp, #16]
  42dd20:	ldp	x29, x30, [sp], #32
  42dd24:	ret
  42dd28:	stp	x29, x30, [sp, #-64]!
  42dd2c:	str	x23, [sp, #16]
  42dd30:	stp	x22, x21, [sp, #32]
  42dd34:	stp	x20, x19, [sp, #48]
  42dd38:	mov	x29, sp
  42dd3c:	mov	x19, x0
  42dd40:	bl	42dc9c <feof@plt+0x2abbc>
  42dd44:	adrp	x20, 42d000 <feof@plt+0x29f20>
  42dd48:	adrp	x21, 42d000 <feof@plt+0x29f20>
  42dd4c:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x838>
  42dd50:	adrp	x23, 402000 <_Unwind_Backtrace@plt-0x960>
  42dd54:	add	x20, x20, #0xc28
  42dd58:	add	x21, x21, #0xc48
  42dd5c:	add	x22, x22, #0x1fc
  42dd60:	add	x23, x23, #0xb20
  42dd64:	mov	w0, #0x7f                  	// #127
  42dd68:	mov	x1, x20
  42dd6c:	mov	x2, x21
  42dd70:	mov	x3, xzr
  42dd74:	mov	x4, x22
  42dd78:	mov	x5, x23
  42dd7c:	str	xzr, [x19, #312]
  42dd80:	str	xzr, [x19, #280]
  42dd84:	bl	460240 <feof@plt+0x5d160>
  42dd88:	str	x0, [x19, #296]
  42dd8c:	mov	w0, #0x7f                  	// #127
  42dd90:	mov	x1, x20
  42dd94:	mov	x2, x21
  42dd98:	mov	x3, xzr
  42dd9c:	mov	x4, x22
  42dda0:	mov	x5, x23
  42dda4:	bl	460240 <feof@plt+0x5d160>
  42dda8:	str	x0, [x19, #304]
  42ddac:	mov	w0, #0xff0                 	// #4080
  42ddb0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42ddb4:	str	wzr, [x0]
  42ddb8:	ldr	x8, [x19, #312]
  42ddbc:	adrp	x1, 461000 <feof@plt+0x5df20>
  42ddc0:	adrp	x2, 42d000 <feof@plt+0x29f20>
  42ddc4:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x838>
  42ddc8:	str	x8, [x0, #8]
  42ddcc:	str	x0, [x19, #312]
  42ddd0:	add	x1, x1, #0xd8
  42ddd4:	add	x2, x2, #0xc80
  42ddd8:	mov	w0, #0x7f                  	// #127
  42dddc:	mov	x3, xzr
  42dde0:	mov	x4, x22
  42dde4:	mov	x5, x23
  42dde8:	add	x20, x20, #0x1c8
  42ddec:	bl	460240 <feof@plt+0x5d160>
  42ddf0:	str	x0, [x19, #320]
  42ddf4:	add	x8, x19, #0x148
  42ddf8:	mov	x3, x20
  42ddfc:	mov	x4, x23
  42de00:	ldp	x20, x19, [sp, #48]
  42de04:	ldp	x22, x21, [sp, #32]
  42de08:	ldr	x23, [sp, #16]
  42de0c:	mov	x0, x8
  42de10:	mov	x1, xzr
  42de14:	mov	x2, xzr
  42de18:	ldp	x29, x30, [sp], #64
  42de1c:	b	461450 <_obstack_begin@@Base>
  42de20:	ldr	x8, [x0]
  42de24:	mov	w3, #0x1                   	// #1
  42de28:	mov	w4, wzr
  42de2c:	mov	w5, wzr
  42de30:	ldr	x8, [x8, #80]
  42de34:	mov	w6, wzr
  42de38:	ldr	x2, [x8, #64]
  42de3c:	b	42c944 <feof@plt+0x29864>
  42de40:	ldr	x8, [x0, #40]
  42de44:	cmp	w2, #0x0
  42de48:	mov	w10, #0x1                   	// #1
  42de4c:	cinc	w10, w10, ne  // ne = any
  42de50:	cmp	w1, #0x0
  42de54:	csel	w4, wzr, w10, eq  // eq = none
  42de58:	ldr	w10, [x8, #12]
  42de5c:	ldr	x11, [x0]
  42de60:	ldr	x12, [x8]
  42de64:	mov	w9, #0x18                  	// #24
  42de68:	sub	w10, w10, #0x1
  42de6c:	strb	w4, [x11, #106]
  42de70:	smaddl	x9, w10, w9, x12
  42de74:	ldr	w8, [x8, #60]
  42de78:	ldr	w10, [x9]
  42de7c:	ldrb	w11, [x9, #6]
  42de80:	ldr	w12, [x9, #16]
  42de84:	ldr	x2, [x9, #8]
  42de88:	sub	w8, w8, w10
  42de8c:	lsr	w8, w8, w11
  42de90:	add	w3, w8, w12
  42de94:	mov	w1, #0x2                   	// #2
  42de98:	b	424c74 <feof@plt+0x21b94>
  42de9c:	mov	w3, #0x1                   	// #1
  42dea0:	mov	w4, wzr
  42dea4:	b	424c74 <feof@plt+0x21b94>
  42dea8:	sub	sp, sp, #0x40
  42deac:	stp	x29, x30, [sp, #16]
  42deb0:	stp	x20, x19, [sp, #48]
  42deb4:	str	xzr, [sp]
  42deb8:	mov	x19, x0
  42debc:	ldr	x0, [x0, #296]
  42dec0:	str	x21, [sp, #32]
  42dec4:	add	x29, sp, #0x10
  42dec8:	bl	460234 <feof@plt+0x5d154>
  42decc:	str	x0, [sp, #8]
  42ded0:	ldr	x0, [x19, #296]
  42ded4:	adrp	x1, 42d000 <feof@plt+0x29f20>
  42ded8:	add	x1, x1, #0xf90
  42dedc:	mov	x2, sp
  42dee0:	bl	461028 <feof@plt+0x5df48>
  42dee4:	ldr	x0, [sp]
  42dee8:	cbz	x0, 42df7c <feof@plt+0x2ae9c>
  42deec:	ldr	x1, [sp, #8]
  42def0:	adrp	x3, 42e000 <feof@plt+0x2af20>
  42def4:	add	x3, x3, #0x10
  42def8:	mov	w2, #0x8                   	// #8
  42defc:	bl	402b90 <qsort@plt>
  42df00:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  42df04:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42df08:	add	x0, x0, #0xaaf
  42df0c:	add	x1, x1, #0x61e
  42df10:	bl	402cb0 <dgettext@plt>
  42df14:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  42df18:	ldr	x1, [x19, #1464]
  42df1c:	bl	402b50 <fputs_unlocked@plt>
  42df20:	ldp	x0, x8, [sp]
  42df24:	cbz	x8, 42df78 <feof@plt+0x2ae98>
  42df28:	mov	x20, xzr
  42df2c:	mov	w21, #0xa                   	// #10
  42df30:	ldr	x0, [x0, x20, lsl #3]
  42df34:	ldr	x1, [x19, #1464]
  42df38:	bl	402b50 <fputs_unlocked@plt>
  42df3c:	ldr	x0, [x19, #1464]
  42df40:	ldp	x8, x9, [x0, #40]
  42df44:	cmp	x8, x9
  42df48:	b.cs	42df6c <feof@plt+0x2ae8c>  // b.hs, b.nlast
  42df4c:	add	x9, x8, #0x1
  42df50:	str	x9, [x0, #40]
  42df54:	strb	w21, [x8]
  42df58:	ldp	x0, x8, [sp]
  42df5c:	add	x20, x20, #0x1
  42df60:	cmp	x20, x8
  42df64:	b.cc	42df30 <feof@plt+0x2ae50>  // b.lo, b.ul, b.last
  42df68:	b	42df78 <feof@plt+0x2ae98>
  42df6c:	mov	w1, #0xa                   	// #10
  42df70:	bl	402ad0 <__overflow@plt>
  42df74:	b	42df58 <feof@plt+0x2ae78>
  42df78:	bl	402b20 <free@plt>
  42df7c:	ldp	x20, x19, [sp, #48]
  42df80:	ldr	x21, [sp, #32]
  42df84:	ldp	x29, x30, [sp, #16]
  42df88:	add	sp, sp, #0x40
  42df8c:	ret
  42df90:	stp	x29, x30, [sp, #-32]!
  42df94:	stp	x20, x19, [sp, #16]
  42df98:	ldr	x8, [x0]
  42df9c:	mov	x29, sp
  42dfa0:	ldr	x9, [x8, #8]
  42dfa4:	cbz	x9, 42e000 <feof@plt+0x2af20>
  42dfa8:	ldr	x20, [x8, #24]
  42dfac:	ldrb	w8, [x20, #210]
  42dfb0:	cbnz	w8, 42e000 <feof@plt+0x2af20>
  42dfb4:	ldr	x8, [x20, #56]
  42dfb8:	cbnz	x8, 42e000 <feof@plt+0x2af20>
  42dfbc:	ldrh	w8, [x20, #208]
  42dfc0:	cmp	w8, #0x1
  42dfc4:	b.ne	42e000 <feof@plt+0x2af20>  // b.any
  42dfc8:	ldrb	w8, [x20, #212]
  42dfcc:	cbnz	w8, 42e000 <feof@plt+0x2af20>
  42dfd0:	ldp	x8, x0, [x1]
  42dfd4:	mov	x19, x1
  42dfd8:	cbnz	x8, 42dff0 <feof@plt+0x2af10>
  42dfdc:	mov	w1, #0x8                   	// #8
  42dfe0:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  42dfe4:	mov	x8, x0
  42dfe8:	mov	x0, xzr
  42dfec:	stp	x8, xzr, [x19]
  42dff0:	ldr	x9, [x20, #8]
  42dff4:	add	x10, x0, #0x1
  42dff8:	str	x10, [x19, #8]
  42dffc:	str	x9, [x8, x0, lsl #3]
  42e000:	ldp	x20, x19, [sp, #16]
  42e004:	mov	w0, #0x1                   	// #1
  42e008:	ldp	x29, x30, [sp], #32
  42e00c:	ret
  42e010:	ldr	x0, [x0]
  42e014:	ldr	x1, [x1]
  42e018:	b	402ed0 <strcmp@plt>
  42e01c:	stp	x29, x30, [sp, #-48]!
  42e020:	mov	w3, wzr
  42e024:	str	x21, [sp, #16]
  42e028:	stp	x20, x19, [sp, #32]
  42e02c:	mov	x29, sp
  42e030:	mov	w20, w2
  42e034:	mov	x21, x1
  42e038:	mov	x19, x0
  42e03c:	bl	42d908 <feof@plt+0x2a828>
  42e040:	cbz	x0, 42e06c <feof@plt+0x2af8c>
  42e044:	mov	x2, x0
  42e048:	mov	x0, x19
  42e04c:	mov	x1, x21
  42e050:	mov	w3, wzr
  42e054:	mov	w4, w20
  42e058:	mov	w5, wzr
  42e05c:	mov	w6, wzr
  42e060:	bl	42c944 <feof@plt+0x29864>
  42e064:	ldr	w8, [x0, #204]
  42e068:	cbz	w8, 42e074 <feof@plt+0x2af94>
  42e06c:	mov	w0, #0xffffffff            	// #-1
  42e070:	b	42e0a8 <feof@plt+0x2afc8>
  42e074:	mov	x20, x0
  42e078:	ldr	w0, [x0, #200]
  42e07c:	cmn	w0, #0x1
  42e080:	b.eq	42e090 <feof@plt+0x2afb0>  // b.none
  42e084:	bl	402ec0 <close@plt>
  42e088:	mov	w8, #0xffffffff            	// #-1
  42e08c:	str	w8, [x20, #200]
  42e090:	ldr	x8, [x19]
  42e094:	ldr	x9, [x20, #160]
  42e098:	ldr	x8, [x8, #80]
  42e09c:	ldr	x8, [x8, #160]
  42e0a0:	cmp	x9, x8
  42e0a4:	cset	w0, gt
  42e0a8:	ldp	x20, x19, [sp, #32]
  42e0ac:	ldr	x21, [sp, #16]
  42e0b0:	ldp	x29, x30, [sp], #48
  42e0b4:	ret
  42e0b8:	stp	x29, x30, [sp, #-32]!
  42e0bc:	stp	x20, x19, [sp, #16]
  42e0c0:	ldr	x9, [x0, #488]
  42e0c4:	ldr	x8, [x0, #448]
  42e0c8:	mov	x19, x0
  42e0cc:	mov	x20, x1
  42e0d0:	ldr	x9, [x9, #16]
  42e0d4:	mov	x29, sp
  42e0d8:	cmp	x8, x9
  42e0dc:	b.eq	42e0e4 <feof@plt+0x2b004>  // b.none
  42e0e0:	stur	wzr, [x8, #-24]
  42e0e4:	ldrb	w8, [x20]
  42e0e8:	cmp	w8, #0x2f
  42e0ec:	b.ne	42e0f8 <feof@plt+0x2b018>  // b.any
  42e0f0:	add	x2, x19, #0xd8
  42e0f4:	b	42e114 <feof@plt+0x2b034>
  42e0f8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42e0fc:	add	x1, x1, #0x692
  42e100:	mov	x0, x19
  42e104:	mov	w2, wzr
  42e108:	bl	42e94c <feof@plt+0x2b86c>
  42e10c:	mov	x2, x0
  42e110:	cbz	x0, 42e14c <feof@plt+0x2b06c>
  42e114:	mov	x0, x19
  42e118:	mov	x1, x20
  42e11c:	mov	w3, wzr
  42e120:	mov	w4, wzr
  42e124:	mov	w5, wzr
  42e128:	mov	w6, wzr
  42e12c:	bl	42c944 <feof@plt+0x29864>
  42e130:	mov	x1, x0
  42e134:	mov	x0, x19
  42e138:	ldp	x20, x19, [sp, #16]
  42e13c:	mov	w2, wzr
  42e140:	mov	w3, wzr
  42e144:	ldp	x29, x30, [sp], #32
  42e148:	b	42d37c <feof@plt+0x2a29c>
  42e14c:	ldp	x20, x19, [sp, #16]
  42e150:	ldp	x29, x30, [sp], #32
  42e154:	ret
  42e158:	stp	x29, x30, [sp, #-32]!
  42e15c:	ldrb	w8, [x1]
  42e160:	str	x19, [sp, #16]
  42e164:	mov	x3, x1
  42e168:	mov	x19, x0
  42e16c:	cmp	w8, #0x2f
  42e170:	mov	x29, sp
  42e174:	b.ne	42e180 <feof@plt+0x2b0a0>  // b.any
  42e178:	add	x2, x19, #0xd8
  42e17c:	b	42e188 <feof@plt+0x2b0a8>
  42e180:	ldr	x2, [x19, #208]
  42e184:	cbz	x2, 42e1c4 <feof@plt+0x2b0e4>
  42e188:	mov	w4, #0x1                   	// #1
  42e18c:	mov	w5, #0x1                   	// #1
  42e190:	mov	x0, x19
  42e194:	mov	x1, x3
  42e198:	mov	w3, wzr
  42e19c:	mov	w6, wzr
  42e1a0:	bl	42c944 <feof@plt+0x29864>
  42e1a4:	cbz	x0, 42e1d8 <feof@plt+0x2b0f8>
  42e1a8:	mov	x1, x0
  42e1ac:	mov	x0, x19
  42e1b0:	ldr	x19, [sp, #16]
  42e1b4:	mov	w2, wzr
  42e1b8:	mov	w3, wzr
  42e1bc:	ldp	x29, x30, [sp], #32
  42e1c0:	b	42d37c <feof@plt+0x2a29c>
  42e1c4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42e1c8:	add	x2, x2, #0x695
  42e1cc:	mov	w1, #0x3                   	// #3
  42e1d0:	mov	x0, x19
  42e1d4:	bl	4288a0 <feof@plt+0x257c0>
  42e1d8:	ldr	x19, [sp, #16]
  42e1dc:	mov	w0, wzr
  42e1e0:	ldp	x29, x30, [sp], #32
  42e1e4:	ret
  42e1e8:	ldrb	w8, [x0, #440]
  42e1ec:	cbz	w8, 42e1f8 <feof@plt+0x2b118>
  42e1f0:	ldr	x8, [x1, #56]
  42e1f4:	cbz	x8, 42e214 <feof@plt+0x2b134>
  42e1f8:	strb	wzr, [x0, #440]
  42e1fc:	cbz	x2, 42e224 <feof@plt+0x2b144>
  42e200:	ldr	x8, [x1, #48]
  42e204:	cmp	x8, x2
  42e208:	b.eq	42e228 <feof@plt+0x2b148>  // b.none
  42e20c:	mov	x0, x2
  42e210:	b	402b20 <free@plt>
  42e214:	ldr	x8, [x0, #424]
  42e218:	str	x8, [x1, #56]
  42e21c:	strb	wzr, [x0, #440]
  42e220:	cbnz	x2, 42e200 <feof@plt+0x2b120>
  42e224:	ret
  42e228:	strb	wzr, [x1, #213]
  42e22c:	stp	xzr, xzr, [x1, #40]
  42e230:	mov	x0, x2
  42e234:	b	402b20 <free@plt>
  42e238:	ldr	x0, [x0]
  42e23c:	ret
  42e240:	add	x0, x0, #0x48
  42e244:	ret
  42e248:	stp	x29, x30, [sp, #-48]!
  42e24c:	cmp	w3, #0x0
  42e250:	cset	w8, ne  // ne = any
  42e254:	str	x21, [sp, #16]
  42e258:	stp	x20, x19, [sp, #32]
  42e25c:	mov	x29, sp
  42e260:	stp	x1, x1, [x0, #200]
  42e264:	strb	w8, [x0, #416]
  42e268:	cbz	x1, 42e2a4 <feof@plt+0x2b1c4>
  42e26c:	mov	x19, x2
  42e270:	mov	x20, x1
  42e274:	mov	x21, x0
  42e278:	b	42e284 <feof@plt+0x2b1a4>
  42e27c:	ldr	x20, [x20]
  42e280:	cbz	x20, 42e2a4 <feof@plt+0x2b1c4>
  42e284:	ldr	x0, [x20, #8]
  42e288:	str	xzr, [x20, #32]
  42e28c:	bl	402a50 <strlen@plt>
  42e290:	cmp	x20, x19
  42e294:	str	w0, [x20, #16]
  42e298:	b.ne	42e27c <feof@plt+0x2b19c>  // b.any
  42e29c:	str	x19, [x21, #208]
  42e2a0:	b	42e27c <feof@plt+0x2b19c>
  42e2a4:	ldp	x20, x19, [sp, #32]
  42e2a8:	ldr	x21, [sp, #16]
  42e2ac:	ldp	x29, x30, [sp], #48
  42e2b0:	ret
  42e2b4:	ldr	x0, [x0, #8]
  42e2b8:	ret
  42e2bc:	ldr	x0, [x0, #64]
  42e2c0:	ret
  42e2c4:	ldr	x0, [x0]
  42e2c8:	ret
  42e2cc:	ldr	x0, [x0, #80]
  42e2d0:	ret
  42e2d4:	ldr	x0, [x0, #72]
  42e2d8:	ret
  42e2dc:	stp	x29, x30, [sp, #-96]!
  42e2e0:	stp	x26, x25, [sp, #32]
  42e2e4:	stp	x24, x23, [sp, #48]
  42e2e8:	stp	x22, x21, [sp, #64]
  42e2ec:	stp	x20, x19, [sp, #80]
  42e2f0:	ldr	x8, [x0, #280]
  42e2f4:	mov	x21, x0
  42e2f8:	mov	x19, x1
  42e2fc:	mov	w1, #0x10                  	// #16
  42e300:	str	x27, [sp, #16]
  42e304:	mov	x29, sp
  42e308:	cbz	x8, 42e318 <feof@plt+0x2b238>
  42e30c:	ldr	x8, [x8, #32]
  42e310:	add	x1, x1, #0x20
  42e314:	cbnz	x8, 42e30c <feof@plt+0x2b22c>
  42e318:	mov	w0, #0x1                   	// #1
  42e31c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  42e320:	str	xzr, [x0]
  42e324:	strb	wzr, [x0, #8]
  42e328:	ldr	x22, [x21, #280]
  42e32c:	mov	x20, x0
  42e330:	cbz	x22, 42e3f0 <feof@plt+0x2b310>
  42e334:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1838>
  42e338:	add	x25, x20, #0x10
  42e33c:	add	x23, x23, #0x58a
  42e340:	b	42e368 <feof@plt+0x2b288>
  42e344:	ldr	x0, [x22, #40]
  42e348:	ldr	x1, [x22, #120]
  42e34c:	add	x2, x8, #0x8
  42e350:	bl	459f4c <feof@plt+0x56e6c>
  42e354:	ldr	x8, [x22, #120]
  42e358:	lsl	x9, x26, #5
  42e35c:	str	x8, [x25, x9]
  42e360:	ldr	x22, [x22, #32]
  42e364:	cbz	x22, 42e3e8 <feof@plt+0x2b308>
  42e368:	ldrb	w8, [x22, #211]
  42e36c:	cbnz	w8, 42e360 <feof@plt+0x2b280>
  42e370:	ldr	w8, [x22, #204]
  42e374:	cbnz	w8, 42e360 <feof@plt+0x2b280>
  42e378:	ldrh	w8, [x22, #208]
  42e37c:	cbz	w8, 42e360 <feof@plt+0x2b280>
  42e380:	ldr	x26, [x20]
  42e384:	add	x8, x26, #0x1
  42e388:	str	x8, [x20]
  42e38c:	ldrb	w9, [x22, #210]
  42e390:	add	x8, x25, x26, lsl #5
  42e394:	strb	w9, [x8, #24]
  42e398:	ldrb	w10, [x20, #8]
  42e39c:	orr	w9, w10, w9
  42e3a0:	strb	w9, [x20, #8]
  42e3a4:	ldrb	w9, [x22, #213]
  42e3a8:	cbnz	w9, 42e344 <feof@plt+0x2b264>
  42e3ac:	ldr	w27, [x22, #200]
  42e3b0:	mov	x0, x22
  42e3b4:	bl	42e478 <feof@plt+0x2b398>
  42e3b8:	tbz	w0, #0, 42e454 <feof@plt+0x2b374>
  42e3bc:	ldr	w0, [x22, #200]
  42e3c0:	mov	x1, x23
  42e3c4:	bl	460124 <feof@plt+0x5d044>
  42e3c8:	add	x8, x25, x26, lsl #5
  42e3cc:	add	x1, x8, #0x8
  42e3d0:	mov	x24, x0
  42e3d4:	bl	459cbc <feof@plt+0x56bdc>
  42e3d8:	mov	x0, x24
  42e3dc:	bl	402ae0 <fclose@plt>
  42e3e0:	str	w27, [x22, #200]
  42e3e4:	b	42e354 <feof@plt+0x2b274>
  42e3e8:	ldr	x1, [x20]
  42e3ec:	b	42e3f4 <feof@plt+0x2b314>
  42e3f0:	mov	x1, xzr
  42e3f4:	adrp	x3, 42e000 <feof@plt+0x2af20>
  42e3f8:	mov	w21, #0x10                  	// #16
  42e3fc:	add	x0, x20, #0x10
  42e400:	add	x3, x3, #0x544
  42e404:	mov	w2, #0x20                  	// #32
  42e408:	bfi	x21, x1, #5, #59
  42e40c:	bl	402b90 <qsort@plt>
  42e410:	mov	w2, #0x1                   	// #1
  42e414:	mov	x0, x20
  42e418:	mov	x1, x21
  42e41c:	mov	x3, x19
  42e420:	bl	402f80 <fwrite_unlocked@plt>
  42e424:	cmp	x0, #0x1
  42e428:	mov	x0, x20
  42e42c:	cset	w19, eq  // eq = none
  42e430:	bl	402b20 <free@plt>
  42e434:	mov	w0, w19
  42e438:	ldp	x20, x19, [sp, #80]
  42e43c:	ldp	x22, x21, [sp, #64]
  42e440:	ldp	x24, x23, [sp, #48]
  42e444:	ldp	x26, x25, [sp, #32]
  42e448:	ldr	x27, [sp, #16]
  42e44c:	ldp	x29, x30, [sp], #96
  42e450:	ret
  42e454:	mov	x0, x21
  42e458:	mov	x1, x22
  42e45c:	mov	w2, wzr
  42e460:	mov	w3, wzr
  42e464:	bl	42d270 <feof@plt+0x2a190>
  42e468:	mov	x0, x20
  42e46c:	bl	402b20 <free@plt>
  42e470:	mov	w19, wzr
  42e474:	b	42e434 <feof@plt+0x2b354>
  42e478:	stp	x29, x30, [sp, #-32]!
  42e47c:	stp	x20, x19, [sp, #16]
  42e480:	mov	x19, x0
  42e484:	ldr	x0, [x0, #8]
  42e488:	mov	x29, sp
  42e48c:	ldrb	w8, [x0]
  42e490:	cbz	w8, 42e4b8 <feof@plt+0x2b3d8>
  42e494:	mov	w1, #0x100                 	// #256
  42e498:	mov	w2, #0x1b6                 	// #438
  42e49c:	bl	402ac0 <open@plt>
  42e4a0:	mov	x20, x19
  42e4a4:	cmn	w0, #0x1
  42e4a8:	str	w0, [x20, #200]!
  42e4ac:	b.eq	42e51c <feof@plt+0x2b43c>  // b.none
  42e4b0:	mov	w1, w0
  42e4b4:	b	42e4c4 <feof@plt+0x2b3e4>
  42e4b8:	mov	x20, x19
  42e4bc:	mov	w1, wzr
  42e4c0:	str	wzr, [x20, #200]!
  42e4c4:	add	x2, x19, #0x48
  42e4c8:	mov	w0, wzr
  42e4cc:	bl	402980 <__fxstat@plt>
  42e4d0:	cbnz	w0, 42e4f0 <feof@plt+0x2b410>
  42e4d4:	ldr	w8, [x19, #88]
  42e4d8:	and	w8, w8, #0xf000
  42e4dc:	cmp	w8, #0x4, lsl #12
  42e4e0:	b.ne	42e538 <feof@plt+0x2b458>  // b.any
  42e4e4:	bl	402e70 <__errno_location@plt>
  42e4e8:	mov	w8, #0x2                   	// #2
  42e4ec:	str	w8, [x0]
  42e4f0:	ldr	w0, [x20]
  42e4f4:	bl	402ec0 <close@plt>
  42e4f8:	mov	w8, #0xffffffff            	// #-1
  42e4fc:	str	w8, [x20]
  42e500:	bl	402e70 <__errno_location@plt>
  42e504:	ldr	w8, [x0]
  42e508:	mov	w0, wzr
  42e50c:	str	w8, [x19, #204]
  42e510:	ldp	x20, x19, [sp, #16]
  42e514:	ldp	x29, x30, [sp], #32
  42e518:	ret
  42e51c:	bl	402e70 <__errno_location@plt>
  42e520:	ldr	w8, [x0]
  42e524:	cmp	w8, #0x14
  42e528:	b.ne	42e504 <feof@plt+0x2b424>  // b.any
  42e52c:	mov	w8, #0x2                   	// #2
  42e530:	str	w8, [x0]
  42e534:	b	42e504 <feof@plt+0x2b424>
  42e538:	mov	w8, wzr
  42e53c:	mov	w0, #0x1                   	// #1
  42e540:	b	42e50c <feof@plt+0x2b42c>
  42e544:	ldr	x8, [x0]
  42e548:	ldr	x9, [x1]
  42e54c:	rev	x8, x8
  42e550:	rev	x9, x9
  42e554:	cmp	x8, x9
  42e558:	b.ne	42e5ac <feof@plt+0x2b4cc>  // b.any
  42e55c:	ldr	x8, [x0, #8]
  42e560:	ldr	x9, [x1, #8]
  42e564:	rev	x8, x8
  42e568:	rev	x9, x9
  42e56c:	cmp	x8, x9
  42e570:	b.ne	42e5ac <feof@plt+0x2b4cc>  // b.any
  42e574:	ldr	x8, [x0, #16]
  42e578:	ldr	x9, [x1, #16]
  42e57c:	rev	x8, x8
  42e580:	rev	x9, x9
  42e584:	cmp	x8, x9
  42e588:	b.ne	42e5ac <feof@plt+0x2b4cc>  // b.any
  42e58c:	ldr	x8, [x0, #24]
  42e590:	ldr	x9, [x1, #24]
  42e594:	rev	x8, x8
  42e598:	rev	x9, x9
  42e59c:	cmp	x8, x9
  42e5a0:	b.ne	42e5ac <feof@plt+0x2b4cc>  // b.any
  42e5a4:	mov	w0, wzr
  42e5a8:	ret
  42e5ac:	cmp	x8, x9
  42e5b0:	mov	w8, #0xffffffff            	// #-1
  42e5b4:	cneg	w0, w8, cs  // cs = hs, nlast
  42e5b8:	ret
  42e5bc:	sub	sp, sp, #0x50
  42e5c0:	stp	x20, x19, [sp, #64]
  42e5c4:	mov	x19, x1
  42e5c8:	mov	x0, sp
  42e5cc:	mov	w1, #0x10                  	// #16
  42e5d0:	mov	w2, #0x1                   	// #1
  42e5d4:	mov	x3, x19
  42e5d8:	stp	x29, x30, [sp, #48]
  42e5dc:	add	x29, sp, #0x30
  42e5e0:	bl	402b30 <fread_unlocked@plt>
  42e5e4:	cmp	x0, #0x1
  42e5e8:	b.ne	42e628 <feof@plt+0x2b548>  // b.any
  42e5ec:	ldr	x20, [sp]
  42e5f0:	mov	w0, #0x10                  	// #16
  42e5f4:	bfi	x0, x20, #5, #59
  42e5f8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42e5fc:	ldr	q0, [sp]
  42e600:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  42e604:	str	x0, [x8, #2440]
  42e608:	mov	w1, #0x20                  	// #32
  42e60c:	str	q0, [x0], #16
  42e610:	mov	x2, x20
  42e614:	mov	x3, x19
  42e618:	bl	402b30 <fread_unlocked@plt>
  42e61c:	cmp	x0, x20
  42e620:	cset	w0, eq  // eq = none
  42e624:	b	42e62c <feof@plt+0x2b54c>
  42e628:	mov	w0, wzr
  42e62c:	ldp	x20, x19, [sp, #64]
  42e630:	ldp	x29, x30, [sp, #48]
  42e634:	add	sp, sp, #0x50
  42e638:	ret
  42e63c:	stp	x29, x30, [sp, #-48]!
  42e640:	str	x21, [sp, #16]
  42e644:	stp	x20, x19, [sp, #32]
  42e648:	mov	x29, sp
  42e64c:	mov	w19, w2
  42e650:	mov	x20, x1
  42e654:	mov	x21, x0
  42e658:	bl	42d908 <feof@plt+0x2a828>
  42e65c:	mov	x2, x0
  42e660:	mov	x0, x21
  42e664:	mov	x1, x20
  42e668:	mov	w3, wzr
  42e66c:	mov	w4, w19
  42e670:	mov	w5, wzr
  42e674:	mov	w6, wzr
  42e678:	bl	42c944 <feof@plt+0x29864>
  42e67c:	ldr	w8, [x0, #204]
  42e680:	ldp	x20, x19, [sp, #32]
  42e684:	ldr	x21, [sp, #16]
  42e688:	cmp	w8, #0x2
  42e68c:	cset	w0, ne  // ne = any
  42e690:	ldp	x29, x30, [sp], #48
  42e694:	ret
  42e698:	stp	x29, x30, [sp, #-96]!
  42e69c:	stp	x28, x27, [sp, #16]
  42e6a0:	stp	x26, x25, [sp, #32]
  42e6a4:	stp	x24, x23, [sp, #48]
  42e6a8:	stp	x22, x21, [sp, #64]
  42e6ac:	stp	x20, x19, [sp, #80]
  42e6b0:	mov	x29, sp
  42e6b4:	sub	sp, sp, #0x10
  42e6b8:	ldr	w21, [x0, #16]
  42e6bc:	mov	x8, sp
  42e6c0:	mov	x27, x0
  42e6c4:	add	x9, x21, #0x1b
  42e6c8:	and	x9, x9, #0x1fffffff0
  42e6cc:	sub	x20, x8, x9
  42e6d0:	mov	sp, x20
  42e6d4:	ldr	x1, [x0, #8]
  42e6d8:	mov	x0, x20
  42e6dc:	mov	x2, x21
  42e6e0:	bl	4029c0 <memcpy@plt>
  42e6e4:	cbz	w21, 42e70c <feof@plt+0x2b62c>
  42e6e8:	add	x8, x21, x20
  42e6ec:	ldurb	w8, [x8, #-1]
  42e6f0:	cmp	w8, #0x2f
  42e6f4:	b.eq	42e710 <feof@plt+0x2b630>  // b.none
  42e6f8:	add	x8, x21, #0x1
  42e6fc:	mov	w9, #0x2f                  	// #47
  42e700:	strb	w9, [x20, x21]
  42e704:	mov	x21, x8
  42e708:	b	42e710 <feof@plt+0x2b630>
  42e70c:	mov	x21, xzr
  42e710:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0xd838>
  42e714:	add	x8, x8, #0x64a
  42e718:	ldr	x8, [x8]
  42e71c:	mov	w10, #0x6367                	// #25447
  42e720:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  42e724:	add	x9, x20, x21
  42e728:	movk	w10, #0x63, lsl #16
  42e72c:	add	x1, x1, #0xf4c
  42e730:	mov	x0, x20
  42e734:	str	x8, [x9]
  42e738:	stur	w10, [x9, #7]
  42e73c:	bl	4600f0 <feof@plt+0x5d010>
  42e740:	mov	x20, x0
  42e744:	mov	w0, #0x48                  	// #72
  42e748:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42e74c:	str	x0, [x27, #32]
  42e750:	cbz	x20, 42e924 <feof@plt+0x2b844>
  42e754:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  42e758:	mov	x19, xzr
  42e75c:	mov	w25, #0x9                   	// #9
  42e760:	add	x26, x26, #0xe98
  42e764:	mov	x28, x19
  42e768:	ldp	x8, x9, [x20, #8]
  42e76c:	cmp	x8, x9
  42e770:	b.cs	42e794 <feof@plt+0x2b6b4>  // b.hs, b.nlast
  42e774:	add	x9, x8, #0x1
  42e778:	str	x9, [x20, #8]
  42e77c:	ldrb	w21, [x8]
  42e780:	and	w8, w21, #0xff
  42e784:	ldrh	w8, [x26, w8, uxtw #1]
  42e788:	tst	w8, #0xc00
  42e78c:	b.ne	42e768 <feof@plt+0x2b688>  // b.any
  42e790:	b	42e7ac <feof@plt+0x2b6cc>
  42e794:	mov	x0, x20
  42e798:	bl	402e80 <__uflow@plt>
  42e79c:	mov	w21, w0
  42e7a0:	cmn	w0, #0x1
  42e7a4:	b.ne	42e780 <feof@plt+0x2b6a0>  // b.any
  42e7a8:	b	42e914 <feof@plt+0x2b834>
  42e7ac:	add	x19, x28, #0x2
  42e7b0:	cmp	x19, x25
  42e7b4:	b.ls	42e7cc <feof@plt+0x2b6ec>  // b.plast
  42e7b8:	ldr	x0, [x27, #32]
  42e7bc:	add	x25, x25, #0x8
  42e7c0:	lsl	x1, x25, #3
  42e7c4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42e7c8:	str	x0, [x27, #32]
  42e7cc:	mov	w0, w21
  42e7d0:	mov	x1, x20
  42e7d4:	bl	42ea50 <feof@plt+0x2b970>
  42e7d8:	ldr	x8, [x27, #32]
  42e7dc:	str	x0, [x8, x28, lsl #3]
  42e7e0:	ldp	x8, x9, [x20, #8]
  42e7e4:	cmp	x8, x9
  42e7e8:	b.cs	42e808 <feof@plt+0x2b728>  // b.hs, b.nlast
  42e7ec:	add	x9, x8, #0x1
  42e7f0:	str	x9, [x20, #8]
  42e7f4:	ldrb	w0, [x8]
  42e7f8:	and	w8, w0, #0xff
  42e7fc:	ldrh	w8, [x26, w8, uxtw #1]
  42e800:	tbnz	w8, #0, 42e7e0 <feof@plt+0x2b700>
  42e804:	b	42e818 <feof@plt+0x2b738>
  42e808:	mov	x0, x20
  42e80c:	bl	402e80 <__uflow@plt>
  42e810:	cmn	w0, #0x1
  42e814:	b.ne	42e7f8 <feof@plt+0x2b718>  // b.any
  42e818:	mov	x1, x20
  42e81c:	bl	42ea50 <feof@plt+0x2b970>
  42e820:	ldrb	w8, [x0]
  42e824:	mov	x21, x0
  42e828:	cmp	w8, #0x2f
  42e82c:	b.ne	42e844 <feof@plt+0x2b764>  // b.any
  42e830:	ldr	x8, [x27, #32]
  42e834:	lsl	x9, x28, #3
  42e838:	orr	x9, x9, #0x8
  42e83c:	str	x21, [x8, x9]
  42e840:	b	42e8d4 <feof@plt+0x2b7f4>
  42e844:	ldr	w22, [x27, #16]
  42e848:	mov	x0, x21
  42e84c:	stur	x19, [x29, #-8]
  42e850:	mov	x19, x25
  42e854:	mov	x24, x27
  42e858:	bl	402a50 <strlen@plt>
  42e85c:	add	x25, x22, #0x1
  42e860:	add	x23, x0, #0x1
  42e864:	add	x0, x23, x25
  42e868:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42e86c:	ldr	x1, [x27, #8]
  42e870:	mov	x2, x22
  42e874:	mov	x24, x0
  42e878:	bl	4029c0 <memcpy@plt>
  42e87c:	cbz	w22, 42e8a0 <feof@plt+0x2b7c0>
  42e880:	add	x8, x22, x24
  42e884:	ldurb	w8, [x8, #-1]
  42e888:	cmp	w8, #0x2f
  42e88c:	b.eq	42e8a4 <feof@plt+0x2b7c4>  // b.none
  42e890:	mov	w8, #0x2f                  	// #47
  42e894:	strb	w8, [x24, x22]
  42e898:	mov	x22, x25
  42e89c:	b	42e8a4 <feof@plt+0x2b7c4>
  42e8a0:	mov	x22, xzr
  42e8a4:	mov	x25, x19
  42e8a8:	ldur	x19, [x29, #-8]
  42e8ac:	add	x0, x24, x22
  42e8b0:	mov	x1, x21
  42e8b4:	mov	x2, x23
  42e8b8:	bl	4029c0 <memcpy@plt>
  42e8bc:	ldr	x8, [x27, #32]
  42e8c0:	lsl	x9, x28, #3
  42e8c4:	orr	x9, x9, #0x8
  42e8c8:	mov	x0, x21
  42e8cc:	str	x24, [x8, x9]
  42e8d0:	bl	402b20 <free@plt>
  42e8d4:	ldp	x8, x9, [x20, #8]
  42e8d8:	cmp	x8, x9
  42e8dc:	b.cs	42e900 <feof@plt+0x2b820>  // b.hs, b.nlast
  42e8e0:	add	x9, x8, #0x1
  42e8e4:	str	x9, [x20, #8]
  42e8e8:	ldrb	w0, [x8]
  42e8ec:	cmn	w0, #0x1
  42e8f0:	b.eq	42e764 <feof@plt+0x2b684>  // b.none
  42e8f4:	cmp	w0, #0xa
  42e8f8:	b.ne	42e8d4 <feof@plt+0x2b7f4>  // b.any
  42e8fc:	b	42e764 <feof@plt+0x2b684>
  42e900:	mov	x0, x20
  42e904:	bl	402e80 <__uflow@plt>
  42e908:	cmn	w0, #0x1
  42e90c:	b.ne	42e8f4 <feof@plt+0x2b814>  // b.any
  42e910:	b	42e764 <feof@plt+0x2b684>
  42e914:	mov	x0, x20
  42e918:	bl	402ae0 <fclose@plt>
  42e91c:	ldr	x0, [x27, #32]
  42e920:	b	42e928 <feof@plt+0x2b848>
  42e924:	mov	x28, xzr
  42e928:	str	xzr, [x0, x28, lsl #3]
  42e92c:	mov	sp, x29
  42e930:	ldp	x20, x19, [sp, #80]
  42e934:	ldp	x22, x21, [sp, #64]
  42e938:	ldp	x24, x23, [sp, #48]
  42e93c:	ldp	x26, x25, [sp, #32]
  42e940:	ldp	x28, x27, [sp, #16]
  42e944:	ldp	x29, x30, [sp], #96
  42e948:	ret
  42e94c:	stp	x29, x30, [sp, #-64]!
  42e950:	stp	x22, x21, [sp, #32]
  42e954:	stp	x20, x19, [sp, #48]
  42e958:	ldr	x20, [x0, #304]
  42e95c:	mov	x19, x0
  42e960:	mov	x0, x1
  42e964:	str	x23, [sp, #16]
  42e968:	mov	x29, sp
  42e96c:	mov	w22, w2
  42e970:	mov	x23, x1
  42e974:	bl	4610d8 <feof@plt+0x5dff8>
  42e978:	mov	w2, w0
  42e97c:	mov	w3, #0x1                   	// #1
  42e980:	mov	x0, x20
  42e984:	mov	x1, x23
  42e988:	bl	460a90 <feof@plt+0x5d9b0>
  42e98c:	ldr	x8, [x0]
  42e990:	mov	x20, x0
  42e994:	cbz	x8, 42e9a8 <feof@plt+0x2b8c8>
  42e998:	ldr	x9, [x8, #8]
  42e99c:	cbz	x9, 42ea34 <feof@plt+0x2b954>
  42e9a0:	ldr	x8, [x8]
  42e9a4:	cbnz	x8, 42e998 <feof@plt+0x2b8b8>
  42e9a8:	mov	w0, #0x1                   	// #1
  42e9ac:	mov	w1, #0x40                  	// #64
  42e9b0:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  42e9b4:	ldr	x8, [x19, #200]
  42e9b8:	mov	x21, x0
  42e9bc:	stp	x8, x23, [x0]
  42e9c0:	mov	x0, x23
  42e9c4:	bl	402a50 <strlen@plt>
  42e9c8:	str	w0, [x21, #16]
  42e9cc:	strb	w22, [x21, #20]
  42e9d0:	str	xzr, [x21, #40]
  42e9d4:	ldr	x0, [x19, #312]
  42e9d8:	ldr	w8, [x0]
  42e9dc:	cmp	w8, #0x7f
  42e9e0:	b.ne	42ea00 <feof@plt+0x2b920>  // b.any
  42e9e4:	mov	w0, #0xff0                 	// #4080
  42e9e8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42e9ec:	str	wzr, [x0]
  42e9f0:	ldr	x9, [x19, #312]
  42e9f4:	mov	w8, wzr
  42e9f8:	str	x9, [x0, #8]
  42e9fc:	str	x0, [x19, #312]
  42ea00:	add	w9, w8, #0x1
  42ea04:	str	w9, [x0]
  42ea08:	ldr	x9, [x20]
  42ea0c:	mov	w8, w8
  42ea10:	add	x8, x0, x8, lsl #5
  42ea14:	str	x9, [x8, #16]!
  42ea18:	str	xzr, [x8, #8]
  42ea1c:	ldr	x9, [x19, #40]
  42ea20:	ldr	w9, [x9, #56]
  42ea24:	str	x21, [x8, #24]
  42ea28:	str	w9, [x8, #16]
  42ea2c:	str	x8, [x20]
  42ea30:	b	42ea38 <feof@plt+0x2b958>
  42ea34:	ldr	x21, [x8, #24]
  42ea38:	mov	x0, x21
  42ea3c:	ldp	x20, x19, [sp, #48]
  42ea40:	ldp	x22, x21, [sp, #32]
  42ea44:	ldr	x23, [sp, #16]
  42ea48:	ldp	x29, x30, [sp], #64
  42ea4c:	ret
  42ea50:	stp	x29, x30, [sp, #-80]!
  42ea54:	stp	x22, x21, [sp, #48]
  42ea58:	mov	w21, w0
  42ea5c:	mov	w0, #0x15                  	// #21
  42ea60:	stp	x26, x25, [sp, #16]
  42ea64:	stp	x24, x23, [sp, #32]
  42ea68:	stp	x20, x19, [sp, #64]
  42ea6c:	mov	x29, sp
  42ea70:	mov	x19, x1
  42ea74:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42ea78:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  42ea7c:	and	w8, w21, #0xff
  42ea80:	add	x22, x22, #0xe98
  42ea84:	ldrh	w8, [x22, w8, uxtw #1]
  42ea88:	mov	x20, x0
  42ea8c:	tst	w8, #0xc00
  42ea90:	b.eq	42eac4 <feof@plt+0x2b9e4>  // b.none
  42ea94:	mov	x23, x20
  42ea98:	mov	w0, w21
  42ea9c:	mov	x1, x19
  42eaa0:	strb	wzr, [x23]
  42eaa4:	bl	402a40 <ungetc@plt>
  42eaa8:	mov	x0, x20
  42eaac:	ldp	x20, x19, [sp, #64]
  42eab0:	ldp	x22, x21, [sp, #48]
  42eab4:	ldp	x24, x23, [sp, #32]
  42eab8:	ldp	x26, x25, [sp, #16]
  42eabc:	ldp	x29, x30, [sp], #80
  42eac0:	ret
  42eac4:	mov	w24, #0x14                  	// #20
  42eac8:	mov	x23, x20
  42eacc:	strb	w21, [x20]
  42ead0:	b	42ead8 <feof@plt+0x2b9f8>
  42ead4:	strb	w21, [x23]
  42ead8:	ldp	x8, x9, [x19, #8]
  42eadc:	add	x23, x23, #0x1
  42eae0:	cmp	x8, x9
  42eae4:	b.cs	42eb38 <feof@plt+0x2ba58>  // b.hs, b.nlast
  42eae8:	add	x9, x8, #0x1
  42eaec:	str	x9, [x19, #8]
  42eaf0:	ldrb	w21, [x8]
  42eaf4:	and	w8, w21, #0xff
  42eaf8:	ldrh	w8, [x22, w8, uxtw #1]
  42eafc:	tst	w8, #0xc00
  42eb00:	b.ne	42ea98 <feof@plt+0x2b9b8>  // b.any
  42eb04:	sub	x25, x23, x20
  42eb08:	cmp	x25, w24, sxtw
  42eb0c:	b.ne	42ead4 <feof@plt+0x2b9f4>  // b.any
  42eb10:	mov	w8, #0x1                   	// #1
  42eb14:	bfi	w8, w24, #1, #31
  42eb18:	sxtw	x1, w8
  42eb1c:	mov	x0, x20
  42eb20:	lsl	w26, w24, #1
  42eb24:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42eb28:	mov	x20, x0
  42eb2c:	add	x23, x0, x25
  42eb30:	mov	w24, w26
  42eb34:	b	42ead4 <feof@plt+0x2b9f4>
  42eb38:	mov	x0, x19
  42eb3c:	bl	402e80 <__uflow@plt>
  42eb40:	mov	w21, w0
  42eb44:	cmn	w0, #0x1
  42eb48:	b.ne	42eaf4 <feof@plt+0x2ba14>  // b.any
  42eb4c:	b	42ea98 <feof@plt+0x2b9b8>
  42eb50:	sub	sp, sp, #0x50
  42eb54:	stp	x29, x30, [sp, #16]
  42eb58:	stp	x24, x23, [sp, #32]
  42eb5c:	stp	x22, x21, [sp, #48]
  42eb60:	stp	x20, x19, [sp, #64]
  42eb64:	ldr	x24, [x1, #8]
  42eb68:	mov	x22, x0
  42eb6c:	mov	x0, x1
  42eb70:	add	x29, sp, #0x10
  42eb74:	mov	x20, x2
  42eb78:	mov	x19, x1
  42eb7c:	str	x2, [x1, #8]
  42eb80:	bl	42e478 <feof@plt+0x2b398>
  42eb84:	tbz	w0, #0, 42ec30 <feof@plt+0x2bb50>
  42eb88:	ldr	x8, [x22, #968]
  42eb8c:	ldr	w2, [x19, #200]
  42eb90:	mov	x0, x22
  42eb94:	mov	x1, x20
  42eb98:	blr	x8
  42eb9c:	mov	w23, w0
  42eba0:	and	w21, w0, #0x1
  42eba4:	tbnz	w0, #0, 42ebb8 <feof@plt+0x2bad8>
  42eba8:	ldr	w0, [x19, #200]
  42ebac:	bl	402ec0 <close@plt>
  42ebb0:	mov	w8, #0xffffffff            	// #-1
  42ebb4:	str	w8, [x19, #200]
  42ebb8:	ldrb	w8, [x22, #1131]
  42ebbc:	cbz	w8, 42ec34 <feof@plt+0x2bb54>
  42ebc0:	ldr	x8, [x22, #40]
  42ebc4:	ldr	w9, [x8, #48]
  42ebc8:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  42ebcc:	ldr	x0, [x8, #1464]
  42ebd0:	cmp	w9, #0x2
  42ebd4:	b.cc	42ec54 <feof@plt+0x2bb74>  // b.lo, b.ul, b.last
  42ebd8:	mov	w9, #0x1                   	// #1
  42ebdc:	mov	w10, #0x2e                  	// #46
  42ebe0:	ldp	x11, x12, [x0, #40]
  42ebe4:	cmp	x11, x12
  42ebe8:	b.cs	42ec14 <feof@plt+0x2bb34>  // b.hs, b.nlast
  42ebec:	add	x12, x11, #0x1
  42ebf0:	str	x12, [x0, #40]
  42ebf4:	strb	w10, [x11]
  42ebf8:	ldr	x11, [x22, #40]
  42ebfc:	ldr	x0, [x8, #1464]
  42ec00:	add	w9, w9, #0x1
  42ec04:	ldr	w11, [x11, #48]
  42ec08:	cmp	w9, w11
  42ec0c:	b.cc	42ebe0 <feof@plt+0x2bb00>  // b.lo, b.ul, b.last
  42ec10:	b	42ec54 <feof@plt+0x2bb74>
  42ec14:	mov	w1, #0x2e                  	// #46
  42ec18:	stur	w9, [x29, #-4]
  42ec1c:	bl	402ad0 <__overflow@plt>
  42ec20:	ldur	w9, [x29, #-4]
  42ec24:	mov	w10, #0x2e                  	// #46
  42ec28:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  42ec2c:	b	42ebf8 <feof@plt+0x2bb18>
  42ec30:	mov	w21, wzr
  42ec34:	str	x24, [x19, #8]
  42ec38:	mov	w0, w21
  42ec3c:	ldp	x20, x19, [sp, #64]
  42ec40:	ldp	x22, x21, [sp, #48]
  42ec44:	ldp	x24, x23, [sp, #32]
  42ec48:	ldp	x29, x30, [sp, #16]
  42ec4c:	add	sp, sp, #0x50
  42ec50:	ret
  42ec54:	tst	w23, #0x1
  42ec58:	mov	w8, #0x78                  	// #120
  42ec5c:	mov	w9, #0x21                  	// #33
  42ec60:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ec64:	csel	w2, w9, w8, ne  // ne = any
  42ec68:	add	x1, x1, #0x65a
  42ec6c:	mov	x3, x20
  42ec70:	bl	402a70 <fprintf@plt>
  42ec74:	b	42ec34 <feof@plt+0x2bb54>
  42ec78:	stp	x29, x30, [sp, #-80]!
  42ec7c:	stp	x24, x23, [sp, #32]
  42ec80:	stp	x22, x21, [sp, #48]
  42ec84:	stp	x20, x19, [sp, #64]
  42ec88:	ldrb	w8, [x1, #213]
  42ec8c:	str	x25, [sp, #16]
  42ec90:	mov	x29, sp
  42ec94:	cbz	w8, 42eca0 <feof@plt+0x2bbc0>
  42ec98:	mov	w0, #0x1                   	// #1
  42ec9c:	b	42ecb8 <feof@plt+0x2bbd8>
  42eca0:	ldrb	w8, [x1, #211]
  42eca4:	mov	x19, x1
  42eca8:	cbnz	w8, 42ecb4 <feof@plt+0x2bbd4>
  42ecac:	ldr	w8, [x19, #204]
  42ecb0:	cbz	w8, 42ecd0 <feof@plt+0x2bbf0>
  42ecb4:	mov	w0, wzr
  42ecb8:	ldp	x20, x19, [sp, #64]
  42ecbc:	ldp	x22, x21, [sp, #48]
  42ecc0:	ldp	x24, x23, [sp, #32]
  42ecc4:	ldr	x25, [sp, #16]
  42ecc8:	ldp	x29, x30, [sp], #80
  42eccc:	ret
  42ecd0:	ldr	w8, [x19, #200]
  42ecd4:	mov	w21, w2
  42ecd8:	mov	x20, x0
  42ecdc:	cmn	w8, #0x1
  42ece0:	b.ne	42ecf0 <feof@plt+0x2bc10>  // b.any
  42ece4:	mov	x0, x19
  42ece8:	bl	42e478 <feof@plt+0x2b398>
  42ecec:	tbz	w0, #0, 42edac <feof@plt+0x2bccc>
  42ecf0:	ldr	w8, [x19, #88]
  42ecf4:	and	w25, w8, #0xf000
  42ecf8:	cmp	w25, #0x6, lsl #12
  42ecfc:	b.ne	42ed24 <feof@plt+0x2bc44>  // b.any
  42ed00:	ldr	x4, [x19, #8]
  42ed04:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ed08:	add	x3, x3, #0x661
  42ed0c:	mov	w1, #0x3                   	// #3
  42ed10:	mov	x0, x20
  42ed14:	mov	w2, w21
  42ed18:	bl	429150 <feof@plt+0x26070>
  42ed1c:	mov	w8, #0x1                   	// #1
  42ed20:	b	42ee58 <feof@plt+0x2bd78>
  42ed24:	cmp	w25, #0x8, lsl #12
  42ed28:	b.ne	42ed34 <feof@plt+0x2bc54>  // b.any
  42ed2c:	ldr	x22, [x19, #120]
  42ed30:	b	42ed38 <feof@plt+0x2bc58>
  42ed34:	mov	w22, #0x2000                	// #8192
  42ed38:	add	x0, x22, #0x10
  42ed3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42ed40:	ldr	w8, [x19, #200]
  42ed44:	mov	x23, x0
  42ed48:	mov	x1, x23
  42ed4c:	mov	x2, x22
  42ed50:	mov	w0, w8
  42ed54:	bl	402bd0 <read@plt>
  42ed58:	cmp	x0, #0x1
  42ed5c:	b.lt	42edc8 <feof@plt+0x2bce8>  // b.tstop
  42ed60:	mov	x24, xzr
  42ed64:	b	42ed80 <feof@plt+0x2bca0>
  42ed68:	ldr	w0, [x19, #200]
  42ed6c:	add	x1, x23, x24
  42ed70:	sub	x2, x22, x24
  42ed74:	bl	402bd0 <read@plt>
  42ed78:	cmp	x0, #0x0
  42ed7c:	b.le	42edcc <feof@plt+0x2bcec>
  42ed80:	add	x24, x24, x0
  42ed84:	cmp	x24, x22
  42ed88:	b.ne	42ed68 <feof@plt+0x2bc88>  // b.any
  42ed8c:	cmp	w25, #0x8, lsl #12
  42ed90:	b.eq	42ee24 <feof@plt+0x2bd44>  // b.none
  42ed94:	lsl	x22, x22, #1
  42ed98:	add	x1, x22, #0x10
  42ed9c:	mov	x0, x23
  42eda0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42eda4:	mov	x23, x0
  42eda8:	b	42ed68 <feof@plt+0x2bc88>
  42edac:	mov	x0, x20
  42edb0:	mov	x1, x19
  42edb4:	mov	w2, wzr
  42edb8:	mov	w3, w21
  42edbc:	bl	42d270 <feof@plt+0x2a190>
  42edc0:	mov	w0, wzr
  42edc4:	b	42ecb8 <feof@plt+0x2bbd8>
  42edc8:	mov	x24, xzr
  42edcc:	tbnz	x0, #63, 42ee00 <feof@plt+0x2bd20>
  42edd0:	cmp	x24, x22
  42edd4:	b.eq	42ee28 <feof@plt+0x2bd48>  // b.none
  42edd8:	cmp	w25, #0x8, lsl #12
  42eddc:	b.ne	42ee28 <feof@plt+0x2bd48>  // b.any
  42ede0:	ldr	x4, [x19, #8]
  42ede4:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ede8:	add	x3, x3, #0x676
  42edec:	mov	x0, x20
  42edf0:	mov	w1, wzr
  42edf4:	mov	w2, w21
  42edf8:	bl	429150 <feof@plt+0x26070>
  42edfc:	b	42ee28 <feof@plt+0x2bd48>
  42ee00:	ldr	x2, [x19, #8]
  42ee04:	mov	w1, #0x3                   	// #3
  42ee08:	mov	x0, x20
  42ee0c:	mov	w3, w21
  42ee10:	bl	429358 <feof@plt+0x26278>
  42ee14:	mov	x0, x23
  42ee18:	bl	402b20 <free@plt>
  42ee1c:	mov	w8, #0x1                   	// #1
  42ee20:	b	42ee58 <feof@plt+0x2bd78>
  42ee24:	mov	x24, x22
  42ee28:	ldr	x1, [x20, #1184]
  42ee2c:	add	x3, x22, #0x10
  42ee30:	add	x5, x19, #0x30
  42ee34:	add	x6, x19, #0x78
  42ee38:	mov	x0, x20
  42ee3c:	mov	x2, x23
  42ee40:	mov	x4, x24
  42ee44:	bl	422be4 <feof@plt+0x1fb04>
  42ee48:	mov	w8, wzr
  42ee4c:	mov	w9, #0x1                   	// #1
  42ee50:	str	x0, [x19, #40]
  42ee54:	strb	w9, [x19, #213]
  42ee58:	ldr	w0, [x19, #200]
  42ee5c:	strb	w8, [x19, #211]
  42ee60:	bl	402ec0 <close@plt>
  42ee64:	ldrb	w8, [x19, #211]
  42ee68:	mov	w9, #0xffffffff            	// #-1
  42ee6c:	str	w9, [x19, #200]
  42ee70:	cmp	w8, #0x0
  42ee74:	cset	w0, eq  // eq = none
  42ee78:	b	42ecb8 <feof@plt+0x2bbd8>
  42ee7c:	stp	x29, x30, [sp, #-32]!
  42ee80:	stp	x20, x19, [sp, #16]
  42ee84:	mov	x20, x1
  42ee88:	mov	x19, x0
  42ee8c:	mov	x29, sp
  42ee90:	cbnz	x1, 42eed4 <feof@plt+0x2bdf4>
  42ee94:	mov	w8, #0x1                   	// #1
  42ee98:	mov	w0, #0xd                   	// #13
  42ee9c:	strb	w8, [x19, #1304]
  42eea0:	bl	43ce3c <feof@plt+0x39d5c>
  42eea4:	adrp	x8, 42e000 <feof@plt+0x2af20>
  42eea8:	add	x8, x8, #0xfe4
  42eeac:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x838>
  42eeb0:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x960>
  42eeb4:	mov	x20, x0
  42eeb8:	str	x8, [x0, #96]
  42eebc:	add	x0, x19, #0x2d0
  42eec0:	add	x3, x3, #0x1c8
  42eec4:	add	x4, x4, #0xb20
  42eec8:	mov	x1, xzr
  42eecc:	mov	x2, xzr
  42eed0:	bl	461450 <_obstack_begin@@Base>
  42eed4:	mov	x0, x19
  42eed8:	str	x19, [x20, #120]
  42eedc:	str	x20, [x19, #1088]
  42eee0:	bl	426cb4 <feof@plt+0x23bd4>
  42eee4:	mov	x0, x19
  42eee8:	bl	424f18 <feof@plt+0x21e38>
  42eeec:	ldr	x0, [x19, #1088]
  42eef0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  42eef4:	add	x1, x1, #0xb05
  42eef8:	mov	w2, #0x7                   	// #7
  42eefc:	mov	w3, #0x1                   	// #1
  42ef00:	bl	43cee8 <feof@plt+0x39e08>
  42ef04:	ldr	x8, [x19, #1088]
  42ef08:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  42ef0c:	str	x0, [x19, #1248]
  42ef10:	add	x1, x1, #0xf51
  42ef14:	mov	w2, #0x4                   	// #4
  42ef18:	mov	w3, #0x1                   	// #1
  42ef1c:	mov	x0, x8
  42ef20:	bl	43cee8 <feof@plt+0x39e08>
  42ef24:	ldr	x8, [x19, #1088]
  42ef28:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  42ef2c:	str	x0, [x19, #1256]
  42ef30:	add	x1, x1, #0xf56
  42ef34:	mov	w2, #0x5                   	// #5
  42ef38:	mov	w3, #0x1                   	// #1
  42ef3c:	mov	x0, x8
  42ef40:	bl	43cee8 <feof@plt+0x39e08>
  42ef44:	ldr	x8, [x19, #1088]
  42ef48:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ef4c:	str	x0, [x19, #1264]
  42ef50:	add	x1, x1, #0x6bf
  42ef54:	mov	w2, #0xb                   	// #11
  42ef58:	mov	w3, #0x1                   	// #1
  42ef5c:	mov	x0, x8
  42ef60:	bl	43cee8 <feof@plt+0x39e08>
  42ef64:	str	x0, [x19, #1272]
  42ef68:	ldrh	w8, [x0, #18]
  42ef6c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  42ef70:	add	x1, x1, #0xdc6
  42ef74:	mov	w2, #0xa                   	// #10
  42ef78:	orr	w8, w8, #0x10
  42ef7c:	strh	w8, [x0, #18]
  42ef80:	ldr	x0, [x19, #1088]
  42ef84:	mov	w3, #0x1                   	// #1
  42ef88:	bl	43cee8 <feof@plt+0x39e08>
  42ef8c:	str	x0, [x19, #1280]
  42ef90:	ldrh	w8, [x0, #18]
  42ef94:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ef98:	add	x1, x1, #0x6cb
  42ef9c:	mov	w2, #0xf                   	// #15
  42efa0:	orr	w8, w8, #0x10
  42efa4:	strh	w8, [x0, #18]
  42efa8:	ldr	x0, [x19, #1088]
  42efac:	mov	w3, #0x1                   	// #1
  42efb0:	bl	43cee8 <feof@plt+0x39e08>
  42efb4:	ldr	x8, [x19, #1088]
  42efb8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0xd838>
  42efbc:	str	x0, [x19, #1288]
  42efc0:	add	x1, x1, #0x6db
  42efc4:	mov	w2, #0x14                  	// #20
  42efc8:	mov	w3, #0x1                   	// #1
  42efcc:	mov	x0, x8
  42efd0:	bl	43cee8 <feof@plt+0x39e08>
  42efd4:	str	x0, [x19, #1296]
  42efd8:	ldp	x20, x19, [sp, #16]
  42efdc:	ldp	x29, x30, [sp], #32
  42efe0:	ret
  42efe4:	stp	x29, x30, [sp, #-32]!
  42efe8:	str	x19, [sp, #16]
  42efec:	ldr	x19, [x0, #120]
  42eff0:	mov	x29, sp
  42eff4:	ldr	x9, [x19, #752]
  42eff8:	ldr	x8, [x19, #744]
  42effc:	sub	x9, x9, x8
  42f000:	cmp	x9, #0x1f
  42f004:	b.hi	42f018 <feof@plt+0x2bf38>  // b.pmore
  42f008:	add	x0, x19, #0x2d0
  42f00c:	mov	w1, #0x20                  	// #32
  42f010:	bl	4615ac <_obstack_newchunk@@Base>
  42f014:	ldr	x8, [x19, #744]
  42f018:	ldr	x0, [x19, #736]
  42f01c:	add	x8, x8, #0x20
  42f020:	str	x8, [x19, #744]
  42f024:	cmp	x8, x0
  42f028:	b.ne	42f038 <feof@plt+0x2bf58>  // b.any
  42f02c:	ldrb	w9, [x19, #800]
  42f030:	orr	w9, w9, #0x2
  42f034:	strb	w9, [x19, #800]
  42f038:	ldr	x10, [x19, #768]
  42f03c:	ldr	x11, [x19, #728]
  42f040:	ldr	x9, [x19, #752]
  42f044:	add	x8, x10, x8
  42f048:	bic	x8, x8, x10
  42f04c:	sub	x10, x8, x11
  42f050:	sub	x11, x9, x11
  42f054:	cmp	x10, x11
  42f058:	str	x8, [x19, #744]
  42f05c:	b.ls	42f068 <feof@plt+0x2bf88>  // b.plast
  42f060:	mov	x8, x9
  42f064:	str	x9, [x19, #744]
  42f068:	movi	v0.2d, #0x0
  42f06c:	str	x8, [x19, #736]
  42f070:	stp	q0, q0, [x0]
  42f074:	ldr	x19, [sp, #16]
  42f078:	ldp	x29, x30, [sp], #32
  42f07c:	ret
  42f080:	ldr	x0, [x0, #1088]
  42f084:	mov	w2, w2
  42f088:	mov	w3, #0x1                   	// #1
  42f08c:	b	43cee8 <feof@plt+0x39e08>
  42f090:	stp	x29, x30, [sp, #-32]!
  42f094:	ldrb	w8, [x0, #1304]
  42f098:	str	x19, [sp, #16]
  42f09c:	mov	x29, sp
  42f0a0:	cbz	w8, 42f0c4 <feof@plt+0x2bfe4>
  42f0a4:	mov	x19, x0
  42f0a8:	ldr	x0, [x0, #1088]
  42f0ac:	bl	43ceb0 <feof@plt+0x39dd0>
  42f0b0:	add	x0, x19, #0x2d0
  42f0b4:	ldr	x19, [sp, #16]
  42f0b8:	mov	x1, xzr
  42f0bc:	ldp	x29, x30, [sp], #32
  42f0c0:	b	461734 <_obstack_free@@Base>
  42f0c4:	ldr	x19, [sp, #16]
  42f0c8:	ldp	x29, x30, [sp], #32
  42f0cc:	ret
  42f0d0:	stp	x29, x30, [sp, #-16]!
  42f0d4:	ldr	x0, [x0, #1088]
  42f0d8:	mov	w3, wzr
  42f0dc:	sxtw	x2, w2
  42f0e0:	mov	x29, sp
  42f0e4:	bl	43cee8 <feof@plt+0x39e08>
  42f0e8:	cbz	x0, 42f0f4 <feof@plt+0x2c014>
  42f0ec:	ldrh	w8, [x0, #18]
  42f0f0:	ubfx	w0, w8, #1, #1
  42f0f4:	ldp	x29, x30, [sp], #16
  42f0f8:	ret
  42f0fc:	ldr	x0, [x0, #1088]
  42f100:	b	43d20c <feof@plt+0x3a12c>
  42f104:	stp	x29, x30, [sp, #-16]!
  42f108:	ldrb	w8, [x0, #4]
  42f10c:	mov	x29, sp
  42f110:	cmp	w8, #0x35
  42f114:	b.ne	42f134 <feof@plt+0x2c054>  // b.any
  42f118:	ldr	x8, [x0, #8]
  42f11c:	ldr	x0, [x8]
  42f120:	bl	402ed0 <strcmp@plt>
  42f124:	cmp	w0, #0x0
  42f128:	cset	w0, eq  // eq = none
  42f12c:	ldp	x29, x30, [sp], #16
  42f130:	ret
  42f134:	mov	w0, wzr
  42f138:	ldp	x29, x30, [sp], #16
  42f13c:	ret
  42f140:	ret
  42f144:	sub	sp, sp, #0x90
  42f148:	stp	x29, x30, [sp, #48]
  42f14c:	stp	x28, x27, [sp, #64]
  42f150:	stp	x26, x25, [sp, #80]
  42f154:	stp	x24, x23, [sp, #96]
  42f158:	stp	x22, x21, [sp, #112]
  42f15c:	stp	x20, x19, [sp, #128]
  42f160:	ldr	x19, [x0]
  42f164:	add	x29, sp, #0x30
  42f168:	ldr	x20, [x19, #16]
  42f16c:	ldrb	w8, [x19, #105]
  42f170:	str	xzr, [x19, #56]
  42f174:	strb	wzr, [x19, #104]
  42f178:	stp	x20, x20, [x19]
  42f17c:	tbnz	w8, #1, 42f364 <feof@plt+0x2c284>
  42f180:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f184:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f188:	ldr	q6, [x10, #1776]
  42f18c:	ldr	q7, [x11, #1792]
  42f190:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  42f194:	mov	w9, wzr
  42f198:	mov	x8, xzr
  42f19c:	mov	w21, #0xffffffff            	// #-1
  42f1a0:	movi	v4.16b, #0xa
  42f1a4:	movi	v5.16b, #0xd
  42f1a8:	movi	v16.16b, #0x5c
  42f1ac:	movi	v17.16b, #0x3f
  42f1b0:	add	x10, x10, #0x998
  42f1b4:	and	x11, x20, #0xfff
  42f1b8:	cmp	x11, #0xff1
  42f1bc:	and	x11, x20, #0xfffffffffffffff0
  42f1c0:	b.cs	42f1cc <feof@plt+0x2c0ec>  // b.hs, b.nlast
  42f1c4:	ldr	q0, [x20]
  42f1c8:	b	42f218 <feof@plt+0x2c138>
  42f1cc:	ldr	q0, [x11]
  42f1d0:	and	w12, w20, #0xf
  42f1d4:	lsl	w12, w21, w12
  42f1d8:	cmeq	v1.16b, v0.16b, v4.16b
  42f1dc:	cmeq	v2.16b, v0.16b, v5.16b
  42f1e0:	cmeq	v3.16b, v0.16b, v16.16b
  42f1e4:	cmeq	v0.16b, v0.16b, v17.16b
  42f1e8:	orr	v0.16b, v0.16b, v2.16b
  42f1ec:	orr	v0.16b, v0.16b, v1.16b
  42f1f0:	orr	v0.16b, v0.16b, v3.16b
  42f1f4:	and	v0.16b, v0.16b, v6.16b
  42f1f8:	uaddlp	v0.8h, v0.16b
  42f1fc:	ushl	v0.8h, v0.8h, v7.8h
  42f200:	addv	h0, v0.8h
  42f204:	fmov	w13, s0
  42f208:	and	w12, w12, w13
  42f20c:	ands	w12, w12, #0xffff
  42f210:	b.ne	42f25c <feof@plt+0x2c17c>  // b.any
  42f214:	ldr	q0, [x11, #16]!
  42f218:	cmeq	v1.16b, v0.16b, v4.16b
  42f21c:	cmeq	v2.16b, v0.16b, v5.16b
  42f220:	cmeq	v3.16b, v0.16b, v16.16b
  42f224:	cmeq	v0.16b, v0.16b, v17.16b
  42f228:	orr	v0.16b, v0.16b, v2.16b
  42f22c:	orr	v0.16b, v0.16b, v1.16b
  42f230:	orr	v0.16b, v0.16b, v3.16b
  42f234:	addp	d1, v0.2d
  42f238:	fmov	x12, d1
  42f23c:	cbz	x12, 42f214 <feof@plt+0x2c134>
  42f240:	and	v0.16b, v0.16b, v6.16b
  42f244:	uaddlp	v0.8h, v0.16b
  42f248:	ushl	v0.8h, v0.8h, v7.8h
  42f24c:	cmp	x11, x20
  42f250:	addv	h0, v0.8h
  42f254:	csel	x11, x20, x11, cc  // cc = lo, ul, last
  42f258:	fmov	w12, s0
  42f25c:	rbit	w12, w12
  42f260:	clz	w12, w12
  42f264:	add	x20, x11, x12
  42f268:	ldrb	w11, [x20]
  42f26c:	cmp	w11, #0x5c
  42f270:	b.ne	42f280 <feof@plt+0x2c1a0>  // b.any
  42f274:	mov	x8, x20
  42f278:	add	x20, x20, #0x1
  42f27c:	b	42f1b4 <feof@plt+0x2c0d4>
  42f280:	cmp	w11, #0x3f
  42f284:	b.ne	42f380 <feof@plt+0x2c2a0>  // b.any
  42f288:	ldrb	w11, [x20, #1]
  42f28c:	cmp	w11, #0x3f
  42f290:	b.ne	42f278 <feof@plt+0x2c198>  // b.any
  42f294:	stp	q7, q6, [sp]
  42f298:	ldrb	w23, [x20, #2]
  42f29c:	mov	x22, x8
  42f2a0:	stur	x0, [x29, #-8]
  42f2a4:	ldrb	w8, [x10, x23]
  42f2a8:	cbz	w8, 42f2dc <feof@plt+0x2c1fc>
  42f2ac:	ldr	w8, [x19, #64]
  42f2b0:	cmp	w9, w8
  42f2b4:	b.ne	42f308 <feof@plt+0x2c228>  // b.any
  42f2b8:	ldr	x0, [x19, #48]
  42f2bc:	lsl	w8, w9, #1
  42f2c0:	add	w8, w8, #0xc8
  42f2c4:	lsl	x1, x8, #4
  42f2c8:	str	w8, [x19, #64]
  42f2cc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42f2d0:	ldr	w9, [x19, #60]
  42f2d4:	str	x0, [x19, #48]
  42f2d8:	b	42f30c <feof@plt+0x2c22c>
  42f2dc:	ldur	x0, [x29, #-8]
  42f2e0:	ldp	q7, q6, [sp]
  42f2e4:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  42f2e8:	add	x10, x10, #0x998
  42f2ec:	mov	x8, x22
  42f2f0:	movi	v4.16b, #0xa
  42f2f4:	movi	v5.16b, #0xd
  42f2f8:	movi	v16.16b, #0x5c
  42f2fc:	movi	v17.16b, #0x3f
  42f300:	add	x20, x20, #0x1
  42f304:	b	42f1b4 <feof@plt+0x2c0d4>
  42f308:	ldr	x0, [x19, #48]
  42f30c:	add	x8, x0, w9, uxtw #4
  42f310:	ldur	x0, [x29, #-8]
  42f314:	add	w9, w9, #0x1
  42f318:	str	x20, [x8]
  42f31c:	str	w23, [x8, #8]
  42f320:	str	w9, [x19, #60]
  42f324:	ldrb	w11, [x0, #1125]
  42f328:	ldp	q7, q6, [sp]
  42f32c:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  42f330:	add	x10, x10, #0x998
  42f334:	mov	x8, x22
  42f338:	movi	v4.16b, #0xa
  42f33c:	movi	v5.16b, #0xd
  42f340:	movi	v16.16b, #0x5c
  42f344:	movi	v17.16b, #0x3f
  42f348:	cbz	w11, 42f278 <feof@plt+0x2c198>
  42f34c:	mov	x21, x20
  42f350:	ldrb	w8, [x21, #2]!
  42f354:	add	x22, x19, #0x20
  42f358:	ldrb	w8, [x10, x8]
  42f35c:	strb	w8, [x20]
  42f360:	b	42f500 <feof@plt+0x2c420>
  42f364:	ldrb	w8, [x20]
  42f368:	cmp	w8, #0xa
  42f36c:	b.eq	42f434 <feof@plt+0x2c354>  // b.none
  42f370:	cmp	w8, #0xd
  42f374:	b.eq	42f414 <feof@plt+0x2c334>  // b.none
  42f378:	add	x20, x20, #0x1
  42f37c:	b	42f364 <feof@plt+0x2c284>
  42f380:	mov	x22, x19
  42f384:	ldr	x10, [x22, #32]!
  42f388:	cmp	x20, x10
  42f38c:	b.eq	42f434 <feof@plt+0x2c354>  // b.none
  42f390:	cmp	w11, #0xd
  42f394:	mov	x21, x20
  42f398:	b.eq	42f4b4 <feof@plt+0x2c3d4>  // b.none
  42f39c:	cbz	x8, 42f438 <feof@plt+0x2c358>
  42f3a0:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  42f3a4:	mov	x23, xzr
  42f3a8:	sub	x10, x20, #0x1
  42f3ac:	add	x11, x11, #0xe98
  42f3b0:	ldrb	w12, [x10, x23]
  42f3b4:	sub	x23, x23, #0x1
  42f3b8:	ldrh	w12, [x11, x12, lsl #1]
  42f3bc:	tbnz	w12, #11, 42f3b0 <feof@plt+0x2c2d0>
  42f3c0:	sub	x10, x8, x20
  42f3c4:	cmp	x10, x23
  42f3c8:	b.ne	42f438 <feof@plt+0x2c358>  // b.any
  42f3cc:	mov	x24, x8
  42f3d0:	ldr	w8, [x19, #64]
  42f3d4:	cmn	x23, #0x1
  42f3d8:	mov	w10, #0x20                  	// #32
  42f3dc:	mov	w11, #0x5c                  	// #92
  42f3e0:	csel	w25, w11, w10, eq  // eq = none
  42f3e4:	cmp	w9, w8
  42f3e8:	stur	x0, [x29, #-8]
  42f3ec:	b.ne	42f4dc <feof@plt+0x2c3fc>  // b.any
  42f3f0:	ldr	x0, [x19, #48]
  42f3f4:	lsl	w8, w9, #1
  42f3f8:	add	w8, w8, #0xc8
  42f3fc:	lsl	x1, x8, #4
  42f400:	str	w8, [x19, #64]
  42f404:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42f408:	ldr	w9, [x19, #60]
  42f40c:	str	x0, [x19, #48]
  42f410:	b	42f4e0 <feof@plt+0x2c400>
  42f414:	ldr	x8, [x19, #32]
  42f418:	cmp	x8, x20
  42f41c:	b.eq	42f434 <feof@plt+0x2c354>  // b.none
  42f420:	mov	x8, x20
  42f424:	ldrb	w9, [x8, #1]!
  42f428:	cmp	w9, #0xa
  42f42c:	csel	x21, x8, x20, eq  // eq = none
  42f430:	b	42f438 <feof@plt+0x2c358>
  42f434:	mov	x21, x20
  42f438:	mov	w8, #0xa                   	// #10
  42f43c:	strb	w8, [x20], #1
  42f440:	ldp	w8, w9, [x19, #60]
  42f444:	cmp	w8, w9
  42f448:	b.ne	42f470 <feof@plt+0x2c390>  // b.any
  42f44c:	ldr	x0, [x19, #48]
  42f450:	lsl	w8, w8, #1
  42f454:	add	w8, w8, #0xc8
  42f458:	lsl	x1, x8, #4
  42f45c:	str	w8, [x19, #64]
  42f460:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42f464:	ldr	w8, [x19, #60]
  42f468:	str	x0, [x19, #48]
  42f46c:	b	42f474 <feof@plt+0x2c394>
  42f470:	ldr	x0, [x19, #48]
  42f474:	add	x9, x0, w8, uxtw #4
  42f478:	mov	w10, #0xa                   	// #10
  42f47c:	add	w8, w8, #0x1
  42f480:	add	x11, x21, #0x1
  42f484:	str	x20, [x9]
  42f488:	str	w10, [x9, #8]
  42f48c:	str	w8, [x19, #60]
  42f490:	str	x11, [x19, #16]
  42f494:	ldp	x20, x19, [sp, #128]
  42f498:	ldp	x22, x21, [sp, #112]
  42f49c:	ldp	x24, x23, [sp, #96]
  42f4a0:	ldp	x26, x25, [sp, #80]
  42f4a4:	ldp	x28, x27, [sp, #64]
  42f4a8:	ldp	x29, x30, [sp, #48]
  42f4ac:	add	sp, sp, #0x90
  42f4b0:	ret
  42f4b4:	mov	x11, x20
  42f4b8:	ldrb	w12, [x11, #1]!
  42f4bc:	mov	x21, x20
  42f4c0:	cmp	w12, #0xa
  42f4c4:	b.ne	42f39c <feof@plt+0x2c2bc>  // b.any
  42f4c8:	cmp	x11, x10
  42f4cc:	mov	x21, x11
  42f4d0:	b.ne	42f39c <feof@plt+0x2c2bc>  // b.any
  42f4d4:	mov	x21, x11
  42f4d8:	b	42f438 <feof@plt+0x2c358>
  42f4dc:	ldr	x0, [x19, #48]
  42f4e0:	add	x10, x20, x23
  42f4e4:	add	x8, x0, w9, uxtw #4
  42f4e8:	add	w9, w9, #0x1
  42f4ec:	sub	x20, x10, #0x1
  42f4f0:	str	x24, [x8]
  42f4f4:	str	w25, [x8, #8]
  42f4f8:	str	w9, [x19, #60]
  42f4fc:	str	x24, [x19, #16]
  42f500:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  42f504:	add	x26, x26, #0xe98
  42f508:	mov	w28, #0x20                  	// #32
  42f50c:	mov	w24, #0x5c                  	// #92
  42f510:	mov	x25, x21
  42f514:	ldrb	w11, [x21, #1]!
  42f518:	mov	x8, x20
  42f51c:	cmp	w11, #0x3f
  42f520:	strb	w11, [x20, #1]!
  42f524:	b.eq	42f540 <feof@plt+0x2c460>  // b.none
  42f528:	cmp	w11, #0xd
  42f52c:	b.eq	42f590 <feof@plt+0x2c4b0>  // b.none
  42f530:	cmp	w11, #0xa
  42f534:	b.ne	42f510 <feof@plt+0x2c430>  // b.any
  42f538:	ldr	x11, [x22]
  42f53c:	b	42f5a8 <feof@plt+0x2c4c8>
  42f540:	ldrb	w8, [x25, #2]
  42f544:	cmp	w8, #0x3f
  42f548:	b.ne	42f510 <feof@plt+0x2c430>  // b.any
  42f54c:	ldrb	w23, [x25, #3]!
  42f550:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  42f554:	add	x8, x8, #0x998
  42f558:	ldrb	w8, [x8, x23]
  42f55c:	cbz	w8, 42f510 <feof@plt+0x2c430>
  42f560:	ldp	w8, w9, [x19, #60]
  42f564:	cmp	w8, w9
  42f568:	b.ne	42f660 <feof@plt+0x2c580>  // b.any
  42f56c:	ldr	x0, [x19, #48]
  42f570:	lsl	w8, w8, #1
  42f574:	add	w8, w8, #0xc8
  42f578:	lsl	x1, x8, #4
  42f57c:	str	w8, [x19, #64]
  42f580:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42f584:	ldr	w8, [x19, #60]
  42f588:	str	x0, [x19, #48]
  42f58c:	b	42f664 <feof@plt+0x2c584>
  42f590:	ldr	x11, [x22]
  42f594:	cmp	x21, x11
  42f598:	b.eq	42f438 <feof@plt+0x2c358>  // b.none
  42f59c:	ldrb	w12, [x25, #2]!
  42f5a0:	cmp	w12, #0xa
  42f5a4:	csel	x21, x25, x21, eq  // eq = none
  42f5a8:	cmp	x21, x11
  42f5ac:	b.eq	42f438 <feof@plt+0x2c358>  // b.none
  42f5b0:	ldr	x11, [x19, #16]
  42f5b4:	cmp	x20, x11
  42f5b8:	b.eq	42f438 <feof@plt+0x2c358>  // b.none
  42f5bc:	mvn	x12, x8
  42f5c0:	mov	x10, xzr
  42f5c4:	add	x11, x12, x11
  42f5c8:	ldrb	w12, [x8, x10]
  42f5cc:	ldrh	w13, [x26, x12, lsl #1]
  42f5d0:	tbz	w13, #11, 42f5e4 <feof@plt+0x2c504>
  42f5d4:	sub	x10, x10, #0x1
  42f5d8:	cmp	x11, x10
  42f5dc:	b.ne	42f5c8 <feof@plt+0x2c4e8>  // b.any
  42f5e0:	b	42f438 <feof@plt+0x2c358>
  42f5e4:	cmp	w12, #0x5c
  42f5e8:	b.ne	42f438 <feof@plt+0x2c358>  // b.any
  42f5ec:	ldp	w9, w11, [x19, #60]
  42f5f0:	cmp	x10, #0x0
  42f5f4:	mov	x23, x26
  42f5f8:	csel	w20, w24, w28, eq  // eq = none
  42f5fc:	cmp	w9, w11
  42f600:	mov	x26, x8
  42f604:	mov	x27, x10
  42f608:	add	x25, x8, x10
  42f60c:	b.ne	42f634 <feof@plt+0x2c554>  // b.any
  42f610:	ldr	x0, [x19, #48]
  42f614:	lsl	w8, w9, #1
  42f618:	add	w8, w8, #0xc8
  42f61c:	lsl	x1, x8, #4
  42f620:	str	w8, [x19, #64]
  42f624:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  42f628:	ldr	w9, [x19, #60]
  42f62c:	str	x0, [x19, #48]
  42f630:	b	42f638 <feof@plt+0x2c558>
  42f634:	ldr	x0, [x19, #48]
  42f638:	add	x8, x0, w9, uxtw #4
  42f63c:	add	w9, w9, #0x1
  42f640:	add	x10, x26, x27
  42f644:	str	x25, [x8]
  42f648:	str	w20, [x8, #8]
  42f64c:	str	w9, [x19, #60]
  42f650:	sub	x20, x10, #0x1
  42f654:	str	x25, [x19, #16]
  42f658:	mov	x26, x23
  42f65c:	b	42f510 <feof@plt+0x2c430>
  42f660:	ldr	x0, [x19, #48]
  42f664:	add	x9, x0, w8, uxtw #4
  42f668:	add	w8, w8, #0x1
  42f66c:	str	x20, [x9]
  42f670:	str	w23, [x9, #8]
  42f674:	str	w8, [x19, #60]
  42f678:	ldur	x8, [x29, #-8]
  42f67c:	ldrb	w8, [x8, #1125]
  42f680:	cbz	w8, 42f510 <feof@plt+0x2c430>
  42f684:	ldrb	w10, [x25]
  42f688:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  42f68c:	add	x8, x8, #0x998
  42f690:	mov	x21, x25
  42f694:	ldrb	w8, [x8, x10]
  42f698:	strb	w8, [x20]
  42f69c:	b	42f510 <feof@plt+0x2c430>
  42f6a0:	stp	x29, x30, [sp, #-96]!
  42f6a4:	stp	x28, x27, [sp, #16]
  42f6a8:	stp	x26, x25, [sp, #32]
  42f6ac:	stp	x24, x23, [sp, #48]
  42f6b0:	stp	x22, x21, [sp, #64]
  42f6b4:	stp	x20, x19, [sp, #80]
  42f6b8:	ldr	x26, [x0]
  42f6bc:	mov	x29, sp
  42f6c0:	ldr	x9, [x26, #48]
  42f6c4:	ldr	w10, [x26, #56]
  42f6c8:	ldr	x11, [x26]
  42f6cc:	add	x24, x9, w10, uxtw #4
  42f6d0:	ldr	x8, [x24]
  42f6d4:	cmp	x8, x11
  42f6d8:	b.ls	42f6f8 <feof@plt+0x2c618>  // b.plast
  42f6dc:	ldp	x20, x19, [sp, #80]
  42f6e0:	ldp	x22, x21, [sp, #64]
  42f6e4:	ldp	x24, x23, [sp, #48]
  42f6e8:	ldp	x26, x25, [sp, #32]
  42f6ec:	ldp	x28, x27, [sp, #16]
  42f6f0:	ldp	x29, x30, [sp], #96
  42f6f4:	ret
  42f6f8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f6fc:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f700:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x28838>
  42f704:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  42f708:	mov	x19, x0
  42f70c:	mov	w20, w1
  42f710:	add	x21, x21, #0xeb1
  42f714:	mov	w27, #0x18                  	// #24
  42f718:	add	x22, x22, #0xe88
  42f71c:	add	x28, x28, #0x998
  42f720:	add	x23, x23, #0xe98
  42f724:	b	42f788 <feof@plt+0x2c6a8>
  42f728:	ldr	x8, [x24]
  42f72c:	mov	w2, wzr
  42f730:	str	x8, [x26, #8]
  42f734:	ldr	x0, [x19, #40]
  42f738:	ldr	w8, [x0, #12]
  42f73c:	ldr	x9, [x0]
  42f740:	sub	w8, w8, #0x1
  42f744:	smaddl	x8, w8, w27, x9
  42f748:	ldr	w9, [x0, #60]
  42f74c:	ldr	w10, [x8]
  42f750:	ldrb	w11, [x8, #6]
  42f754:	ldr	w8, [x8, #16]
  42f758:	sub	w9, w9, w10
  42f75c:	lsr	w9, w9, w11
  42f760:	add	w8, w8, w9
  42f764:	add	w1, w8, #0x1
  42f768:	bl	435084 <feof@plt+0x31fa4>
  42f76c:	ldr	x9, [x26, #48]
  42f770:	ldr	w10, [x26, #56]
  42f774:	ldr	x11, [x26]
  42f778:	add	x24, x9, w10, uxtw #4
  42f77c:	ldr	x8, [x24]
  42f780:	cmp	x8, x11
  42f784:	b.hi	42f6dc <feof@plt+0x2c5fc>  // b.pmore
  42f788:	add	w11, w10, #0x1
  42f78c:	ldr	w12, [x26, #8]
  42f790:	str	w11, [x26, #56]
  42f794:	add	x9, x9, x10, lsl #4
  42f798:	ldr	w5, [x9, #8]
  42f79c:	sub	w9, w8, w12
  42f7a0:	add	w25, w9, #0x1
  42f7a4:	cmp	w5, #0x5c
  42f7a8:	b.eq	42f7b4 <feof@plt+0x2c6d4>  // b.none
  42f7ac:	cmp	w5, #0x20
  42f7b0:	b.ne	42f814 <feof@plt+0x2c734>  // b.any
  42f7b4:	cbnz	w20, 42f7dc <feof@plt+0x2c6fc>
  42f7b8:	cmp	w5, #0x20
  42f7bc:	b.ne	42f7dc <feof@plt+0x2c6fc>  // b.any
  42f7c0:	ldr	x8, [x19, #40]
  42f7c4:	mov	x0, x19
  42f7c8:	mov	w1, wzr
  42f7cc:	mov	w3, w25
  42f7d0:	ldr	w2, [x8, #60]
  42f7d4:	mov	x4, x22
  42f7d8:	bl	428d60 <feof@plt+0x25c80>
  42f7dc:	ldr	x8, [x26, #16]
  42f7e0:	ldr	x9, [x26, #32]
  42f7e4:	cmp	x8, x9
  42f7e8:	b.ls	42f728 <feof@plt+0x2c648>  // b.plast
  42f7ec:	ldr	x8, [x19, #40]
  42f7f0:	mov	w1, #0x2                   	// #2
  42f7f4:	mov	x0, x19
  42f7f8:	mov	w3, w25
  42f7fc:	ldr	w2, [x8, #60]
  42f800:	mov	x4, x21
  42f804:	bl	428d60 <feof@plt+0x25c80>
  42f808:	ldr	x8, [x26, #32]
  42f80c:	str	x8, [x26, #16]
  42f810:	b	42f728 <feof@plt+0x2c648>
  42f814:	ldrb	w6, [x28, x5]
  42f818:	cbz	w6, 42f850 <feof@plt+0x2c770>
  42f81c:	ldrb	w9, [x19, #1136]
  42f820:	cbz	w9, 42f76c <feof@plt+0x2c68c>
  42f824:	cbz	w20, 42f858 <feof@plt+0x2c778>
  42f828:	cmp	w5, #0x2f
  42f82c:	b.ne	42f76c <feof@plt+0x2c68c>  // b.any
  42f830:	ldrb	w9, [x19, #1125]
  42f834:	cbz	w9, 42f884 <feof@plt+0x2c7a4>
  42f838:	ldr	x9, [x24, #16]
  42f83c:	cmp	x9, x8
  42f840:	b.ne	42f76c <feof@plt+0x2c68c>  // b.any
  42f844:	ldr	x8, [x19, #40]
  42f848:	ldr	w2, [x8, #60]
  42f84c:	b	42f868 <feof@plt+0x2c788>
  42f850:	cbz	w5, 42f76c <feof@plt+0x2c68c>
  42f854:	b	42f8cc <feof@plt+0x2c7ec>
  42f858:	ldr	x8, [x19, #40]
  42f85c:	ldrb	w9, [x19, #1125]
  42f860:	ldr	w2, [x8, #60]
  42f864:	cbz	w9, 42f8b0 <feof@plt+0x2c7d0>
  42f868:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f86c:	mov	w1, #0x4                   	// #4
  42f870:	mov	x0, x19
  42f874:	mov	w3, w25
  42f878:	add	x4, x4, #0xed2
  42f87c:	bl	428e5c <feof@plt+0x25d7c>
  42f880:	b	42f76c <feof@plt+0x2c68c>
  42f884:	add	x8, x8, #0x2
  42f888:	ldrb	w9, [x8, #1]!
  42f88c:	ldrh	w10, [x23, x9, lsl #1]
  42f890:	tbnz	w10, #11, 42f888 <feof@plt+0x2c7a8>
  42f894:	cmp	w9, #0xa
  42f898:	b.ne	42f76c <feof@plt+0x2c68c>  // b.any
  42f89c:	ldr	x9, [x24, #16]
  42f8a0:	cmp	x8, x9
  42f8a4:	b.cs	42f76c <feof@plt+0x2c68c>  // b.hs, b.nlast
  42f8a8:	ldr	x8, [x19, #40]
  42f8ac:	ldr	w2, [x8, #60]
  42f8b0:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f8b4:	mov	w1, #0x4                   	// #4
  42f8b8:	mov	x0, x19
  42f8bc:	mov	w3, w25
  42f8c0:	add	x4, x4, #0xef0
  42f8c4:	bl	428e5c <feof@plt+0x25d7c>
  42f8c8:	b	42f76c <feof@plt+0x2c68c>
  42f8cc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f8d0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f8d4:	add	x0, x0, #0xf20
  42f8d8:	add	x2, x2, #0xf33
  42f8dc:	mov	w1, #0x48b                 	// #1163
  42f8e0:	bl	40f560 <feof@plt+0xc480>
  42f8e4:	stp	x29, x30, [sp, #-64]!
  42f8e8:	stp	x22, x21, [sp, #32]
  42f8ec:	stp	x20, x19, [sp, #48]
  42f8f0:	ldr	x22, [x0]
  42f8f4:	str	x23, [sp, #16]
  42f8f8:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0xd838>
  42f8fc:	mov	x19, x0
  42f900:	ldr	x8, [x22]
  42f904:	mov	w23, #0x18                  	// #24
  42f908:	add	x20, x20, #0xf4b
  42f90c:	mov	x29, sp
  42f910:	ldrb	w9, [x8, #1]!
  42f914:	cmp	w9, #0x2f
  42f918:	cinc	x21, x8, eq  // eq = none
  42f91c:	mov	x8, x21
  42f920:	ldrb	w9, [x21], #1
  42f924:	cmp	w9, #0xa
  42f928:	b.eq	42f988 <feof@plt+0x2c8a8>  // b.none
  42f92c:	cmp	w9, #0x2f
  42f930:	b.ne	42f91c <feof@plt+0x2c83c>  // b.any
  42f934:	ldurb	w9, [x8, #-1]
  42f938:	cmp	w9, #0x2a
  42f93c:	b.eq	42fa00 <feof@plt+0x2c920>  // b.none
  42f940:	ldrb	w9, [x19, #1133]
  42f944:	cbz	w9, 42f91c <feof@plt+0x2c83c>
  42f948:	ldrb	w9, [x21]
  42f94c:	cmp	w9, #0x2a
  42f950:	b.ne	42f91c <feof@plt+0x2c83c>  // b.any
  42f954:	ldrb	w8, [x8, #2]
  42f958:	cmp	w8, #0x2f
  42f95c:	b.eq	42f91c <feof@plt+0x2c83c>  // b.none
  42f960:	str	x21, [x22]
  42f964:	ldr	x8, [x19, #40]
  42f968:	ldr	w9, [x22, #8]
  42f96c:	mov	w1, #0x2                   	// #2
  42f970:	mov	x0, x19
  42f974:	ldr	w2, [x8, #60]
  42f978:	sub	w3, w21, w9
  42f97c:	mov	x4, x20
  42f980:	bl	428e5c <feof@plt+0x25d7c>
  42f984:	b	42f91c <feof@plt+0x2c83c>
  42f988:	mov	w1, #0x1                   	// #1
  42f98c:	mov	x0, x19
  42f990:	str	x8, [x22]
  42f994:	mov	w21, #0x1                   	// #1
  42f998:	bl	42f6a0 <feof@plt+0x2c5c0>
  42f99c:	ldr	x8, [x22, #16]
  42f9a0:	ldr	x9, [x22, #32]
  42f9a4:	cmp	x8, x9
  42f9a8:	b.cs	42fa14 <feof@plt+0x2c934>  // b.hs, b.nlast
  42f9ac:	mov	x0, x19
  42f9b0:	bl	42f144 <feof@plt+0x2c064>
  42f9b4:	ldr	x0, [x19, #40]
  42f9b8:	ldr	w10, [x22, #16]
  42f9bc:	ldr	w11, [x22, #8]
  42f9c0:	ldr	w8, [x0, #12]
  42f9c4:	ldr	x9, [x0]
  42f9c8:	sub	w2, w10, w11
  42f9cc:	sub	w8, w8, #0x1
  42f9d0:	smaddl	x8, w8, w23, x9
  42f9d4:	ldr	w9, [x0, #60]
  42f9d8:	ldr	w12, [x8]
  42f9dc:	ldrb	w13, [x8, #6]
  42f9e0:	ldr	w8, [x8, #16]
  42f9e4:	sub	w9, w9, w12
  42f9e8:	lsr	w9, w9, w13
  42f9ec:	add	w8, w8, w9
  42f9f0:	add	w1, w8, #0x1
  42f9f4:	bl	435084 <feof@plt+0x31fa4>
  42f9f8:	ldr	x21, [x22]
  42f9fc:	b	42f91c <feof@plt+0x2c83c>
  42fa00:	mov	w1, #0x1                   	// #1
  42fa04:	mov	x0, x19
  42fa08:	str	x21, [x22]
  42fa0c:	bl	42f6a0 <feof@plt+0x2c5c0>
  42fa10:	mov	w21, wzr
  42fa14:	mov	w0, w21
  42fa18:	ldp	x20, x19, [sp, #48]
  42fa1c:	ldp	x22, x21, [sp, #32]
  42fa20:	ldr	x23, [sp, #16]
  42fa24:	ldp	x29, x30, [sp], #64
  42fa28:	ret
  42fa2c:	stp	x29, x30, [sp, #-32]!
  42fa30:	stp	x20, x19, [sp, #16]
  42fa34:	mov	x8, x1
  42fa38:	ldrb	w12, [x1]
  42fa3c:	ldrb	w10, [x8, #1]!
  42fa40:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  42fa44:	add	x9, x9, #0xe98
  42fa48:	mov	w11, #0x204                 	// #516
  42fa4c:	ldrh	w13, [x9, x10, lsl #1]
  42fa50:	mov	x19, x0
  42fa54:	sub	w12, w12, #0x71
  42fa58:	mov	x29, sp
  42fa5c:	tst	w13, w11
  42fa60:	b.eq	42fa84 <feof@plt+0x2c9a4>  // b.none
  42fa64:	mov	w13, #0x43                  	// #67
  42fa68:	mul	w12, w12, w13
  42fa6c:	add	w12, w12, w10, uxtb
  42fa70:	ldrb	w10, [x8, #1]!
  42fa74:	sub	w12, w12, #0x71
  42fa78:	ldrh	w14, [x9, x10, lsl #1]
  42fa7c:	tst	w14, w11
  42fa80:	b.ne	42fa68 <feof@plt+0x2c988>  // b.any
  42fa84:	ldr	x0, [x19, #1088]
  42fa88:	sub	x8, x8, x1
  42fa8c:	add	w3, w12, w8
  42fa90:	and	x2, x8, #0xffffffff
  42fa94:	mov	w4, #0x1                   	// #1
  42fa98:	bl	43cf1c <feof@plt+0x39e3c>
  42fa9c:	ldrh	w8, [x0, #18]
  42faa0:	mov	x20, x0
  42faa4:	tbz	w8, #4, 42fab0 <feof@plt+0x2c9d0>
  42faa8:	ldrb	w9, [x19, #18]
  42faac:	cbz	w9, 42fac0 <feof@plt+0x2c9e0>
  42fab0:	mov	x0, x20
  42fab4:	ldp	x20, x19, [sp, #16]
  42fab8:	ldp	x29, x30, [sp], #32
  42fabc:	ret
  42fac0:	tbz	w8, #3, 42fae4 <feof@plt+0x2ca04>
  42fac4:	ldrb	w8, [x19, #23]
  42fac8:	cbnz	w8, 42fae4 <feof@plt+0x2ca04>
  42facc:	ldr	x3, [x20]
  42fad0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fad4:	add	x2, x2, #0x61
  42fad8:	mov	w1, #0x3                   	// #3
  42fadc:	mov	x0, x19
  42fae0:	bl	4288a0 <feof@plt+0x257c0>
  42fae4:	ldr	x8, [x19, #1272]
  42fae8:	cmp	x8, x20
  42faec:	b.ne	42fb20 <feof@plt+0x2ca40>  // b.any
  42faf0:	ldrb	w8, [x19, #22]
  42faf4:	cbnz	w8, 42fb20 <feof@plt+0x2ca40>
  42faf8:	ldrb	w8, [x19, #1120]
  42fafc:	cbz	w8, 42fb0c <feof@plt+0x2ca2c>
  42fb00:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fb04:	add	x2, x2, #0x7e
  42fb08:	b	42fb14 <feof@plt+0x2ca34>
  42fb0c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fb10:	add	x2, x2, #0xc5
  42fb14:	mov	w1, #0x2                   	// #2
  42fb18:	mov	x0, x19
  42fb1c:	bl	4288a0 <feof@plt+0x257c0>
  42fb20:	ldr	x8, [x19, #1280]
  42fb24:	cmp	x8, x20
  42fb28:	b.ne	42fb74 <feof@plt+0x2ca94>  // b.any
  42fb2c:	ldrb	w8, [x19, #1154]
  42fb30:	cbz	w8, 42fb3c <feof@plt+0x2ca5c>
  42fb34:	ldrb	w8, [x19, #1167]
  42fb38:	cbz	w8, 42fb50 <feof@plt+0x2ca70>
  42fb3c:	ldrb	w8, [x19, #22]
  42fb40:	cbnz	w8, 42fb74 <feof@plt+0x2ca94>
  42fb44:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fb48:	add	x2, x2, #0x164
  42fb4c:	b	42fb68 <feof@plt+0x2ca88>
  42fb50:	ldr	x8, [x19]
  42fb54:	cbz	x8, 42fb60 <feof@plt+0x2ca80>
  42fb58:	ldrb	w8, [x8, #106]
  42fb5c:	cbnz	w8, 42fb74 <feof@plt+0x2ca94>
  42fb60:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fb64:	add	x2, x2, #0x13c
  42fb68:	mov	w1, #0x2                   	// #2
  42fb6c:	mov	x0, x19
  42fb70:	bl	4288a0 <feof@plt+0x257c0>
  42fb74:	ldrb	w8, [x20, #19]
  42fb78:	tbz	w8, #1, 42fab0 <feof@plt+0x2c9d0>
  42fb7c:	ldr	x3, [x20]
  42fb80:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fb84:	add	x2, x2, #0x10a
  42fb88:	mov	w1, #0xf                   	// #15
  42fb8c:	mov	x0, x19
  42fb90:	bl	4289d0 <feof@plt+0x258f0>
  42fb94:	b	42fab0 <feof@plt+0x2c9d0>
  42fb98:	add	x0, x0, #0x568
  42fb9c:	ret
  42fba0:	stp	x29, x30, [sp, #-48]!
  42fba4:	str	x21, [sp, #16]
  42fba8:	mov	w21, #0x18                  	// #24
  42fbac:	stp	x20, x19, [sp, #32]
  42fbb0:	mov	x20, x0
  42fbb4:	umull	x0, w1, w21
  42fbb8:	mov	x29, sp
  42fbbc:	mov	w19, w1
  42fbc0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42fbc4:	umaddl	x8, w19, w21, x0
  42fbc8:	stp	x0, x8, [x20, #16]
  42fbcc:	str	xzr, [x20]
  42fbd0:	ldp	x20, x19, [sp, #32]
  42fbd4:	ldr	x21, [sp, #16]
  42fbd8:	ldp	x29, x30, [sp], #48
  42fbdc:	ret
  42fbe0:	stp	x29, x30, [sp, #-16]!
  42fbe4:	ldr	w8, [x0, #48]
  42fbe8:	mov	x29, sp
  42fbec:	cbz	w8, 42fc20 <feof@plt+0x2cb40>
  42fbf0:	cmp	w8, #0x2
  42fbf4:	b.eq	42fc20 <feof@plt+0x2cb40>  // b.none
  42fbf8:	cmp	w8, #0x1
  42fbfc:	b.ne	42fc34 <feof@plt+0x2cb54>  // b.any
  42fc00:	ldp	x9, x8, [x0, #16]
  42fc04:	sub	x8, x8, x9
  42fc08:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42fc0c:	asr	x8, x8, #3
  42fc10:	movk	x9, #0xaaab
  42fc14:	mul	x0, x8, x9
  42fc18:	ldp	x29, x30, [sp], #16
  42fc1c:	ret
  42fc20:	ldp	x9, x8, [x0, #16]
  42fc24:	sub	x8, x8, x9
  42fc28:	lsr	x0, x8, #3
  42fc2c:	ldp	x29, x30, [sp], #16
  42fc30:	ret
  42fc34:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  42fc38:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42fc3c:	add	x0, x0, #0xf20
  42fc40:	add	x2, x2, #0xf5f
  42fc44:	mov	w1, #0x99f                 	// #2463
  42fc48:	bl	40f560 <feof@plt+0xc480>
  42fc4c:	stp	x29, x30, [sp, #-64]!
  42fc50:	stp	x22, x21, [sp, #32]
  42fc54:	stp	x20, x19, [sp, #48]
  42fc58:	ldr	x11, [x0, #136]
  42fc5c:	mov	x19, x0
  42fc60:	str	x23, [sp, #16]
  42fc64:	mov	x29, sp
  42fc68:	ldr	x12, [x11, #8]
  42fc6c:	cbz	x12, 42fcd8 <feof@plt+0x2cbf8>
  42fc70:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42fc74:	movk	x8, #0xaaab
  42fc78:	ldr	w9, [x11, #48]
  42fc7c:	mov	x10, x12
  42fc80:	cbz	w9, 42fcb0 <feof@plt+0x2cbd0>
  42fc84:	cmp	w9, #0x2
  42fc88:	b.eq	42fcb0 <feof@plt+0x2cbd0>  // b.none
  42fc8c:	cmp	w9, #0x1
  42fc90:	b.ne	42fd74 <feof@plt+0x2cc94>  // b.any
  42fc94:	ldp	x11, x12, [x11, #16]
  42fc98:	sub	x12, x12, x11
  42fc9c:	asr	x12, x12, #3
  42fca0:	mul	x12, x12, x8
  42fca4:	subs	w21, w1, w12
  42fca8:	b.ge	42fcc4 <feof@plt+0x2cbe4>  // b.tcont
  42fcac:	b	42fd38 <feof@plt+0x2cc58>
  42fcb0:	ldp	x11, x12, [x11, #16]
  42fcb4:	sub	x12, x12, x11
  42fcb8:	lsr	x12, x12, #3
  42fcbc:	subs	w21, w1, w12
  42fcc0:	b.lt	42fd38 <feof@plt+0x2cc58>  // b.tstop
  42fcc4:	ldr	x12, [x10, #8]
  42fcc8:	mov	w1, w21
  42fccc:	mov	x11, x10
  42fcd0:	cbnz	x12, 42fc78 <feof@plt+0x2cb98>
  42fcd4:	b	42fcdc <feof@plt+0x2cbfc>
  42fcd8:	mov	w21, w1
  42fcdc:	ldr	w8, [x19, #500]
  42fce0:	ldr	x22, [x19, #904]
  42fce4:	mov	w1, wzr
  42fce8:	str	xzr, [x19, #904]
  42fcec:	add	w8, w8, #0x1
  42fcf0:	str	w8, [x19, #500]
  42fcf4:	mov	x0, x19
  42fcf8:	mov	w23, w1
  42fcfc:	bl	42fda4 <feof@plt+0x2ccc4>
  42fd00:	mov	x20, x0
  42fd04:	cmp	w21, w23
  42fd08:	add	w1, w23, #0x1
  42fd0c:	b.eq	42fd1c <feof@plt+0x2cc3c>  // b.none
  42fd10:	ldrb	w8, [x20, #4]
  42fd14:	cmp	w8, #0x16
  42fd18:	b.ne	42fcf4 <feof@plt+0x2cc14>  // b.any
  42fd1c:	mov	x0, x19
  42fd20:	bl	438d04 <feof@plt+0x35c24>
  42fd24:	ldr	w8, [x19, #500]
  42fd28:	str	x22, [x19, #904]
  42fd2c:	sub	w8, w8, #0x1
  42fd30:	str	w8, [x19, #500]
  42fd34:	b	42fd5c <feof@plt+0x2cc7c>
  42fd38:	cbz	w9, 42fd58 <feof@plt+0x2cc78>
  42fd3c:	cmp	w9, #0x2
  42fd40:	b.eq	42fd58 <feof@plt+0x2cc78>  // b.none
  42fd44:	cmp	w9, #0x1
  42fd48:	b.ne	42fd8c <feof@plt+0x2ccac>  // b.any
  42fd4c:	mov	w8, #0x18                  	// #24
  42fd50:	smaddl	x20, w1, w8, x11
  42fd54:	b	42fd5c <feof@plt+0x2cc7c>
  42fd58:	ldr	x20, [x11, w1, sxtw #3]
  42fd5c:	mov	x0, x20
  42fd60:	ldp	x20, x19, [sp, #48]
  42fd64:	ldp	x22, x21, [sp, #32]
  42fd68:	ldr	x23, [sp, #16]
  42fd6c:	ldp	x29, x30, [sp], #64
  42fd70:	ret
  42fd74:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  42fd78:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42fd7c:	add	x0, x0, #0xf20
  42fd80:	add	x2, x2, #0xf5f
  42fd84:	mov	w1, #0x99f                 	// #2463
  42fd88:	bl	40f560 <feof@plt+0xc480>
  42fd8c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  42fd90:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  42fd94:	add	x0, x0, #0xf20
  42fd98:	add	x2, x2, #0x1aa
  42fd9c:	mov	w1, #0x9ad                 	// #2477
  42fda0:	bl	40f560 <feof@plt+0xc480>
  42fda4:	stp	x29, x30, [sp, #-64]!
  42fda8:	stp	x22, x21, [sp, #32]
  42fdac:	stp	x20, x19, [sp, #48]
  42fdb0:	mov	x19, x0
  42fdb4:	add	x21, x0, #0x98
  42fdb8:	mov	w22, #0x1770                	// #6000
  42fdbc:	str	x23, [sp, #16]
  42fdc0:	mov	x29, sp
  42fdc4:	ldr	x23, [x19, #488]
  42fdc8:	ldr	x20, [x19, #448]
  42fdcc:	ldr	x8, [x23, #24]
  42fdd0:	cmp	x20, x8
  42fdd4:	b.eq	42fde8 <feof@plt+0x2cd08>  // b.none
  42fdd8:	ldr	x8, [x23, #16]
  42fddc:	cmp	x20, x8
  42fde0:	b.cs	42fe2c <feof@plt+0x2cd4c>  // b.hs, b.nlast
  42fde4:	b	42ff1c <feof@plt+0x2ce3c>
  42fde8:	ldr	x8, [x23]
  42fdec:	cbnz	x8, 42fe1c <feof@plt+0x2cd3c>
  42fdf0:	mov	w0, #0x20                  	// #32
  42fdf4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42fdf8:	mov	x20, x0
  42fdfc:	str	x0, [x23]
  42fe00:	str	x23, [x0, #8]
  42fe04:	mov	w0, #0x1770                	// #6000
  42fe08:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  42fe0c:	add	x8, x0, x22
  42fe10:	stp	x0, x8, [x20, #16]
  42fe14:	str	xzr, [x20]
  42fe18:	ldr	x8, [x23]
  42fe1c:	str	x8, [x19, #488]
  42fe20:	ldr	x20, [x8, #16]
  42fe24:	mov	x23, x8
  42fe28:	str	x20, [x19, #448]
  42fe2c:	ldr	x8, [x23, #24]
  42fe30:	cmp	x20, x8
  42fe34:	b.cs	42ff1c <feof@plt+0x2ce3c>  // b.hs, b.nlast
  42fe38:	ldr	w8, [x19, #496]
  42fe3c:	cbz	w8, 42fe5c <feof@plt+0x2cd7c>
  42fe40:	sub	w8, w8, #0x1
  42fe44:	add	x9, x20, #0x18
  42fe48:	str	w8, [x19, #496]
  42fe4c:	str	x9, [x19, #448]
  42fe50:	ldrh	w8, [x20, #6]
  42fe54:	tbnz	w8, #6, 42fe70 <feof@plt+0x2cd90>
  42fe58:	b	42feb4 <feof@plt+0x2cdd4>
  42fe5c:	mov	x0, x19
  42fe60:	bl	4300b4 <feof@plt+0x2cfd4>
  42fe64:	mov	x20, x0
  42fe68:	ldrh	w8, [x20, #6]
  42fe6c:	tbz	w8, #6, 42feb4 <feof@plt+0x2cdd4>
  42fe70:	ldrb	w9, [x20, #4]
  42fe74:	cmp	w9, #0x25
  42fe78:	b.ne	42fe88 <feof@plt+0x2cda8>  // b.any
  42fe7c:	ldrb	w9, [x19, #25]
  42fe80:	cmp	w9, #0x1
  42fe84:	b.ne	42fee0 <feof@plt+0x2ce00>  // b.any
  42fe88:	ldrb	w8, [x19, #32]
  42fe8c:	cmp	w8, #0x0
  42fe90:	csel	x20, x20, x21, eq  // eq = none
  42fe94:	ldr	x8, [x19, #904]
  42fe98:	cbz	x8, 42feb4 <feof@plt+0x2cdd4>
  42fe9c:	ldrb	w9, [x19, #18]
  42fea0:	cbnz	w9, 42feb4 <feof@plt+0x2cdd4>
  42fea4:	ldrb	w2, [x19, #25]
  42fea8:	mov	x0, x19
  42feac:	mov	x1, x20
  42feb0:	blr	x8
  42feb4:	ldrb	w8, [x19, #16]
  42feb8:	cbnz	w8, 42ff04 <feof@plt+0x2ce24>
  42febc:	ldrb	w8, [x19, #32]
  42fec0:	cbnz	w8, 42ff04 <feof@plt+0x2ce24>
  42fec4:	ldrb	w8, [x19, #18]
  42fec8:	strb	wzr, [x19, #440]
  42fecc:	cbz	w8, 42ff04 <feof@plt+0x2ce24>
  42fed0:	ldrb	w8, [x20, #4]
  42fed4:	cmp	w8, #0x16
  42fed8:	b.ne	42fdc4 <feof@plt+0x2cce4>  // b.any
  42fedc:	b	42ff04 <feof@plt+0x2ce24>
  42fee0:	and	w1, w8, #0x1
  42fee4:	mov	x0, x19
  42fee8:	bl	4246ec <feof@plt+0x2160c>
  42feec:	cbz	w0, 42fe94 <feof@plt+0x2cdb4>
  42fef0:	ldrb	w8, [x19, #156]
  42fef4:	mov	x20, x21
  42fef8:	cmp	w8, #0x53
  42fefc:	b.eq	42fdc4 <feof@plt+0x2cce4>  // b.none
  42ff00:	b	42fe94 <feof@plt+0x2cdb4>
  42ff04:	mov	x0, x20
  42ff08:	ldp	x20, x19, [sp, #48]
  42ff0c:	ldp	x22, x21, [sp, #32]
  42ff10:	ldr	x23, [sp, #16]
  42ff14:	ldp	x29, x30, [sp], #64
  42ff18:	ret
  42ff1c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ff20:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  42ff24:	add	x0, x0, #0xf20
  42ff28:	add	x2, x2, #0xf84
  42ff2c:	mov	w1, #0xa1d                 	// #2589
  42ff30:	bl	40f560 <feof@plt+0xc480>
  42ff34:	stp	x29, x30, [sp, #-80]!
  42ff38:	stp	x26, x25, [sp, #16]
  42ff3c:	stp	x24, x23, [sp, #32]
  42ff40:	stp	x22, x21, [sp, #48]
  42ff44:	stp	x20, x19, [sp, #64]
  42ff48:	ldr	x25, [x0, #488]
  42ff4c:	ldr	x21, [x0, #448]
  42ff50:	ldr	w22, [x0, #496]
  42ff54:	mov	x19, x0
  42ff58:	ldr	x8, [x25, #24]
  42ff5c:	mov	x29, sp
  42ff60:	sub	x23, x8, x21
  42ff64:	cbz	w22, 42fff0 <feof@plt+0x2cf10>
  42ff68:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42ff6c:	asr	x8, x23, #3
  42ff70:	movk	x9, #0xaaab
  42ff74:	mul	x24, x8, x9
  42ff78:	cmp	x24, x22
  42ff7c:	b.gt	42ffc4 <feof@plt+0x2cee4>
  42ff80:	ldr	x20, [x25]
  42ff84:	cbz	x20, 430078 <feof@plt+0x2cf98>
  42ff88:	cmp	x24, x22
  42ff8c:	b.ge	42ffa8 <feof@plt+0x2cec8>  // b.tcont
  42ff90:	ldr	x1, [x20, #16]
  42ff94:	sub	x8, x22, x24
  42ff98:	add	x8, x8, x8, lsl #1
  42ff9c:	lsl	x2, x8, #3
  42ffa0:	add	x0, x1, #0x18
  42ffa4:	bl	402e30 <memmove@plt>
  42ffa8:	ldr	x8, [x19, #488]
  42ffac:	ldr	x9, [x20, #16]
  42ffb0:	ldr	x8, [x8, #24]
  42ffb4:	ldur	x10, [x8, #-8]
  42ffb8:	ldur	q0, [x8, #-24]
  42ffbc:	str	x10, [x9, #16]
  42ffc0:	str	q0, [x9]
  42ffc4:	cmp	x23, #0x19
  42ffc8:	b.lt	42fff0 <feof@plt+0x2cf10>  // b.tstop
  42ffcc:	ldr	x1, [x19, #448]
  42ffd0:	sub	x8, x24, #0x1
  42ffd4:	cmp	x8, x22
  42ffd8:	csel	x8, x22, x8, gt
  42ffdc:	add	x8, x8, x8, lsl #1
  42ffe0:	add	x0, x1, #0x18
  42ffe4:	lsl	x2, x8, #3
  42ffe8:	bl	402e30 <memmove@plt>
  42ffec:	b	43004c <feof@plt+0x2cf6c>
  42fff0:	cbnz	x23, 43004c <feof@plt+0x2cf6c>
  42fff4:	ldr	x22, [x19, #488]
  42fff8:	ldr	x8, [x19, #448]
  42fffc:	ldr	x9, [x22, #24]
  430000:	cmp	x8, x9
  430004:	b.ne	43004c <feof@plt+0x2cf6c>  // b.any
  430008:	ldr	x8, [x22]
  43000c:	cbnz	x8, 430040 <feof@plt+0x2cf60>
  430010:	mov	w0, #0x20                  	// #32
  430014:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  430018:	mov	x20, x0
  43001c:	str	x0, [x22]
  430020:	str	x22, [x0, #8]
  430024:	mov	w0, #0x1770                	// #6000
  430028:	mov	w23, #0x1770                	// #6000
  43002c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  430030:	add	x8, x0, x23
  430034:	stp	x0, x8, [x20, #16]
  430038:	str	xzr, [x20]
  43003c:	ldr	x8, [x22]
  430040:	str	x8, [x19, #488]
  430044:	ldr	x8, [x8, #16]
  430048:	str	x8, [x19, #448]
  43004c:	ldr	x0, [x19, #448]
  430050:	add	x8, x0, #0x18
  430054:	str	x8, [x19, #448]
  430058:	ldur	w8, [x21, #-24]
  43005c:	str	w8, [x0]
  430060:	ldp	x20, x19, [sp, #64]
  430064:	ldp	x22, x21, [sp, #48]
  430068:	ldp	x24, x23, [sp, #32]
  43006c:	ldp	x26, x25, [sp, #16]
  430070:	ldp	x29, x30, [sp], #80
  430074:	ret
  430078:	mov	w0, #0x20                  	// #32
  43007c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  430080:	mov	x20, x0
  430084:	str	x0, [x25]
  430088:	str	x25, [x0, #8]
  43008c:	mov	w0, #0x1770                	// #6000
  430090:	mov	w26, #0x1770                	// #6000
  430094:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  430098:	add	x8, x0, x26
  43009c:	stp	x0, x8, [x20, #16]
  4300a0:	str	xzr, [x20]
  4300a4:	ldr	x20, [x25]
  4300a8:	cmp	x24, x22
  4300ac:	b.lt	42ff90 <feof@plt+0x2ceb0>  // b.tstop
  4300b0:	b	42ffa8 <feof@plt+0x2cec8>
  4300b4:	sub	sp, sp, #0x70
  4300b8:	stp	x29, x30, [sp, #16]
  4300bc:	stp	x28, x27, [sp, #32]
  4300c0:	stp	x26, x25, [sp, #48]
  4300c4:	stp	x24, x23, [sp, #64]
  4300c8:	stp	x22, x21, [sp, #80]
  4300cc:	stp	x20, x19, [sp, #96]
  4300d0:	ldr	x19, [x0, #448]
  4300d4:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0xd838>
  4300d8:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12838>
  4300dc:	mov	x20, x0
  4300e0:	mov	w22, wzr
  4300e4:	add	x24, x0, #0x1c8
  4300e8:	add	x25, x25, #0x720
  4300ec:	add	x8, x19, #0x18
  4300f0:	add	x27, x27, #0xe98
  4300f4:	add	x29, sp, #0x10
  4300f8:	str	x8, [x0, #448]
  4300fc:	strh	wzr, [x19, #6]
  430100:	ldr	x23, [x20]
  430104:	ldrb	w8, [x23, #104]
  430108:	cbz	w8, 4301e4 <feof@plt+0x2d104>
  43010c:	ldrb	w8, [x20, #32]
  430110:	cbnz	w8, 430e04 <feof@plt+0x2dd24>
  430114:	ldrb	w8, [x20, #16]
  430118:	cbnz	w8, 430d7c <feof@plt+0x2dc9c>
  43011c:	mov	x8, x23
  430120:	ldr	x10, [x8, #16]
  430124:	ldr	x9, [x8, #32]
  430128:	cmp	x10, x9
  43012c:	b.cc	430190 <feof@plt+0x2d0b0>  // b.lo, b.ul, b.last
  430130:	ldrb	w11, [x20, #25]
  430134:	cbnz	w11, 430d7c <feof@plt+0x2dc9c>
  430138:	ldrb	w26, [x8, #105]
  43013c:	cmp	x10, x9
  430140:	b.ls	430158 <feof@plt+0x2d078>  // b.plast
  430144:	ldr	x10, [x8, #24]
  430148:	cmp	x10, x9
  43014c:	b.eq	430158 <feof@plt+0x2d078>  // b.none
  430150:	tbnz	w26, #1, 430158 <feof@plt+0x2d078>
  430154:	str	x9, [x8, #16]
  430158:	mov	x0, x20
  43015c:	bl	426b60 <feof@plt+0x23a80>
  430160:	ldr	x8, [x20]
  430164:	cmp	x8, #0x0
  430168:	cset	w9, ne  // ne = any
  43016c:	tst	w26, #0x4
  430170:	cset	w10, eq  // eq = none
  430174:	and	w9, w10, w9
  430178:	and	w21, w21, w9
  43017c:	tbnz	w26, #2, 4301a0 <feof@plt+0x2d0c0>
  430180:	cbz	x8, 4301a0 <feof@plt+0x2d0c0>
  430184:	ldrb	w9, [x8, #104]
  430188:	cbnz	w9, 430120 <feof@plt+0x2d040>
  43018c:	b	4301a4 <feof@plt+0x2d0c4>
  430190:	mov	x0, x20
  430194:	bl	42f144 <feof@plt+0x2c064>
  430198:	ldr	x8, [x20]
  43019c:	b	4301a4 <feof@plt+0x2d0c4>
  4301a0:	tbz	w21, #0, 430d7c <feof@plt+0x2dc9c>
  4301a4:	ldr	w9, [x20, #500]
  4301a8:	cmp	x23, x8
  4301ac:	cset	w8, eq  // eq = none
  4301b0:	and	w22, w22, w8
  4301b4:	cbnz	w9, 4301c8 <feof@plt+0x2d0e8>
  4301b8:	ldr	x19, [x20, #472]
  4301bc:	str	x24, [x20, #488]
  4301c0:	add	x8, x19, #0x18
  4301c4:	str	x8, [x20, #448]
  4301c8:	mov	w9, #0x40                  	// #64
  4301cc:	strh	w9, [x19, #6]
  4301d0:	ldrb	w8, [x20, #25]
  4301d4:	cmp	w8, #0x2
  4301d8:	cinc	w8, w9, eq  // eq = none
  4301dc:	strh	w8, [x19, #6]
  4301e0:	ldr	x23, [x20]
  4301e4:	ldr	x8, [x20, #40]
  4301e8:	ldr	w8, [x8, #60]
  4301ec:	str	w8, [x19]
  4301f0:	b	4301fc <feof@plt+0x2d11c>
  4301f4:	sub	x8, x8, #0x1
  4301f8:	str	x8, [x21]
  4301fc:	ldr	w9, [x23, #56]
  430200:	ldr	x10, [x23, #48]
  430204:	ldr	x8, [x23]
  430208:	lsl	x9, x9, #4
  43020c:	ldr	x9, [x10, x9]
  430210:	cmp	x8, x9
  430214:	b.cc	43023c <feof@plt+0x2d15c>  // b.lo, b.ul, b.last
  430218:	ldr	x9, [x20, #8]
  43021c:	cbnz	x9, 43023c <feof@plt+0x2d15c>
  430220:	mov	x0, x20
  430224:	mov	w1, wzr
  430228:	bl	42f6a0 <feof@plt+0x2c5c0>
  43022c:	ldr	x8, [x20, #40]
  430230:	ldr	w8, [x8, #60]
  430234:	str	w8, [x19]
  430238:	ldr	x8, [x23]
  43023c:	add	x9, x8, #0x1
  430240:	str	x9, [x23]
  430244:	ldr	w21, [x20, #1408]
  430248:	ldrb	w28, [x8]
  43024c:	cbnz	w21, 430264 <feof@plt+0x2d184>
  430250:	ldr	w8, [x23, #8]
  430254:	ldr	x0, [x20, #40]
  430258:	sub	w1, w9, w8
  43025c:	bl	435288 <feof@plt+0x321a8>
  430260:	mov	w21, w0
  430264:	cmp	w28, #0x7e
  430268:	str	w21, [x19]
  43026c:	b.hi	431208 <feof@plt+0x2e128>  // b.pmore
  430270:	adr	x8, 430280 <feof@plt+0x2d1a0>
  430274:	ldrh	w9, [x25, x28, lsl #1]
  430278:	add	x8, x8, x9, lsl #2
  43027c:	br	x8
  430280:	ldrh	w8, [x19, #6]
  430284:	mov	w26, wzr
  430288:	orr	w8, w8, #0x1
  43028c:	strh	w8, [x19, #6]
  430290:	ldr	x21, [x20]
  430294:	b	4302b4 <feof@plt+0x2d1d4>
  430298:	mov	w26, #0x1                   	// #1
  43029c:	ldr	x9, [x21]
  4302a0:	add	x8, x9, #0x1
  4302a4:	str	x8, [x21]
  4302a8:	ldrb	w28, [x9]
  4302ac:	ldrh	w9, [x27, x28, lsl #1]
  4302b0:	tbz	w9, #11, 430324 <feof@plt+0x2d244>
  4302b4:	and	w8, w28, #0xff
  4302b8:	cmp	w8, #0x20
  4302bc:	b.eq	43029c <feof@plt+0x2d1bc>  // b.none
  4302c0:	cmp	w8, #0x9
  4302c4:	b.eq	43029c <feof@plt+0x2d1bc>  // b.none
  4302c8:	cbz	w8, 430298 <feof@plt+0x2d1b8>
  4302cc:	ldrb	w8, [x20, #16]
  4302d0:	cbz	w8, 43029c <feof@plt+0x2d1bc>
  4302d4:	ldrb	w8, [x20, #1154]
  4302d8:	cbz	w8, 43029c <feof@plt+0x2d1bc>
  4302dc:	ldr	x8, [x20, #40]
  4302e0:	ldr	w9, [x21]
  4302e4:	ldr	w10, [x21, #8]
  4302e8:	and	w11, w28, #0xff
  4302ec:	ldr	w2, [x8, #60]
  4302f0:	adrp	x8, 470000 <_obstack_memory_used@@Base+0xe838>
  4302f4:	sub	w3, w9, w10
  4302f8:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  4302fc:	add	x8, x8, #0x1ed
  430300:	add	x9, x9, #0x1e3
  430304:	cmp	w11, #0xc
  430308:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  43030c:	csel	x5, x9, x8, eq  // eq = none
  430310:	add	x4, x4, #0x1c5
  430314:	mov	w1, #0x2                   	// #2
  430318:	mov	x0, x20
  43031c:	bl	428d60 <feof@plt+0x25c80>
  430320:	b	43029c <feof@plt+0x2d1bc>
  430324:	tbz	w26, #0, 4301f4 <feof@plt+0x2d114>
  430328:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43032c:	add	x2, x2, #0x1fa
  430330:	mov	x0, x20
  430334:	mov	w1, wzr
  430338:	bl	4288a0 <feof@plt+0x257c0>
  43033c:	ldr	x8, [x21]
  430340:	b	4301f4 <feof@plt+0x2d114>
  430344:	ldr	x21, [x23]
  430348:	ldrb	w28, [x21]
  43034c:	cmp	w28, #0x2a
  430350:	b.eq	4303ac <feof@plt+0x2d2cc>  // b.none
  430354:	cmp	w28, #0x2f
  430358:	b.ne	4315fc <feof@plt+0x2e51c>  // b.any
  43035c:	ldrb	w8, [x20, #1160]
  430360:	cbnz	w8, 431610 <feof@plt+0x2e530>
  430364:	ldr	x8, [x20]
  430368:	cbz	x8, 430374 <feof@plt+0x2d294>
  43036c:	ldrb	w8, [x8, #106]
  430370:	cbnz	w8, 430458 <feof@plt+0x2d378>
  430374:	ldr	w8, [x20, #1116]
  430378:	cbz	w8, 430410 <feof@plt+0x2d330>
  43037c:	ldrsb	w9, [x20, #1198]
  430380:	cmp	w9, #0x1
  430384:	b.lt	4303d0 <feof@plt+0x2d2f0>  // b.tstop
  430388:	ldrb	w9, [x20, #1120]
  43038c:	cbnz	w9, 4303d0 <feof@plt+0x2d2f0>
  430390:	ldrb	w9, [x23, #105]
  430394:	tbnz	w9, #0, 4303d0 <feof@plt+0x2d2f0>
  430398:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43039c:	add	x2, x2, #0x7
  4303a0:	mov	x0, x20
  4303a4:	mov	w1, wzr
  4303a8:	b	430430 <feof@plt+0x2d350>
  4303ac:	mov	x0, x20
  4303b0:	bl	42f8e4 <feof@plt+0x2c804>
  4303b4:	tbz	w0, #0, 4304c0 <feof@plt+0x2d3e0>
  4303b8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  4303bc:	add	x2, x2, #0xf93
  4303c0:	mov	w1, #0x3                   	// #3
  4303c4:	mov	x0, x20
  4303c8:	bl	4288a0 <feof@plt+0x257c0>
  4303cc:	b	4304c0 <feof@plt+0x2d3e0>
  4303d0:	sub	w8, w8, #0x5
  4303d4:	cmp	w8, #0x1
  4303d8:	b.hi	430458 <feof@plt+0x2d378>  // b.pmore
  4303dc:	ldrb	w8, [x21, #1]
  4303e0:	cmp	w8, #0x2a
  4303e4:	b.eq	431610 <feof@plt+0x2e530>  // b.none
  4303e8:	ldrb	w8, [x20, #16]
  4303ec:	cbnz	w8, 431610 <feof@plt+0x2e530>
  4303f0:	ldrb	w8, [x20, #18]
  4303f4:	cbnz	w8, 431610 <feof@plt+0x2e530>
  4303f8:	ldrb	w8, [x23, #105]
  4303fc:	tbnz	w8, #0, 430458 <feof@plt+0x2d378>
  430400:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  430404:	add	x2, x2, #0xfa8
  430408:	mov	w1, #0x3                   	// #3
  43040c:	b	43042c <feof@plt+0x2d34c>
  430410:	ldrb	w9, [x20, #1154]
  430414:	cbz	w9, 43037c <feof@plt+0x2d29c>
  430418:	ldrb	w9, [x23, #105]
  43041c:	tbnz	w9, #0, 43037c <feof@plt+0x2d29c>
  430420:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  430424:	add	x2, x2, #0xfa8
  430428:	mov	w1, #0x2                   	// #2
  43042c:	mov	x0, x20
  430430:	bl	4288a0 <feof@plt+0x257c0>
  430434:	tbz	w0, #0, 43044c <feof@plt+0x2d36c>
  430438:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0xd838>
  43043c:	add	x2, x2, #0xfd6
  430440:	mov	w1, #0x5                   	// #5
  430444:	mov	x0, x20
  430448:	bl	4288a0 <feof@plt+0x257c0>
  43044c:	ldrb	w8, [x23, #105]
  430450:	orr	w8, w8, #0x1
  430454:	strb	w8, [x23, #105]
  430458:	ldr	x8, [x20]
  43045c:	ldr	x10, [x20, #40]
  430460:	ldr	x9, [x8]
  430464:	ldr	w26, [x10, #60]
  430468:	ldrb	w11, [x9]
  43046c:	cmp	w11, #0xa
  430470:	b.eq	430488 <feof@plt+0x2d3a8>  // b.none
  430474:	add	x9, x9, #0x1
  430478:	str	x9, [x8]
  43047c:	ldrb	w10, [x9], #1
  430480:	cmp	w10, #0xa
  430484:	b.ne	430478 <feof@plt+0x2d398>  // b.any
  430488:	mov	w1, #0x1                   	// #1
  43048c:	mov	x0, x20
  430490:	bl	42f6a0 <feof@plt+0x2c5c0>
  430494:	ldr	x8, [x20, #40]
  430498:	ldr	w8, [x8, #60]
  43049c:	cmp	w26, w8
  4304a0:	b.eq	4304c0 <feof@plt+0x2d3e0>  // b.none
  4304a4:	ldrb	w8, [x20, #1133]
  4304a8:	cbz	w8, 4304c0 <feof@plt+0x2d3e0>
  4304ac:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4304b0:	add	x2, x2, #0x34
  4304b4:	mov	w1, #0x2                   	// #2
  4304b8:	mov	x0, x20
  4304bc:	bl	4289d0 <feof@plt+0x258f0>
  4304c0:	ldrb	w10, [x20, #1144]
  4304c4:	add	x9, x21, #0x1
  4304c8:	sub	w8, w10, #0x3
  4304cc:	cmp	w8, #0x2
  4304d0:	b.cc	430628 <feof@plt+0x2d548>  // b.lo, b.ul, b.last
  4304d4:	cmp	w10, #0x1
  4304d8:	b.eq	4308cc <feof@plt+0x2d7ec>  // b.none
  4304dc:	cmp	w10, #0x2
  4304e0:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  4304e4:	ldr	x8, [x20]
  4304e8:	ldr	x8, [x8]
  4304ec:	sub	x10, x8, x9
  4304f0:	cmp	x10, #0x8
  4304f4:	b.cs	43050c <feof@plt+0x2d42c>  // b.hs, b.nlast
  4304f8:	b	430c08 <feof@plt+0x2db28>
  4304fc:	add	x9, x9, #0x1
  430500:	sub	x10, x8, x9
  430504:	cmp	x10, #0x7
  430508:	b.ls	430c08 <feof@plt+0x2db28>  // b.plast
  43050c:	ldrb	w10, [x9]
  430510:	orr	w10, w10, #0x20
  430514:	cmp	w10, #0x66
  430518:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  43051c:	ldrb	w10, [x9, #1]
  430520:	orr	w10, w10, #0x20
  430524:	cmp	w10, #0x61
  430528:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  43052c:	ldrb	w10, [x9, #2]
  430530:	orr	w10, w10, #0x20
  430534:	cmp	w10, #0x6c
  430538:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  43053c:	ldrb	w10, [x9, #3]
  430540:	orr	w10, w10, #0x20
  430544:	cmp	w10, #0x6c
  430548:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  43054c:	mov	x10, x9
  430550:	ldrb	w11, [x10, #4]!
  430554:	orr	w11, w11, #0x20
  430558:	cmp	w11, #0x73
  43055c:	b.ne	430568 <feof@plt+0x2d488>  // b.any
  430560:	add	x9, x9, #0x5
  430564:	b	43056c <feof@plt+0x2d48c>
  430568:	mov	x9, x10
  43056c:	ldrb	w10, [x9]
  430570:	cmp	w10, #0x2d
  430574:	b.hi	430598 <feof@plt+0x2d4b8>  // b.pmore
  430578:	mov	w11, #0x1                   	// #1
  43057c:	mov	x12, #0x200                 	// #512
  430580:	lsl	x11, x11, x10
  430584:	movk	x12, #0x2001, lsl #32
  430588:	tst	x11, x12
  43058c:	b.eq	430598 <feof@plt+0x2d4b8>  // b.none
  430590:	add	x9, x9, #0x1
  430594:	b	43056c <feof@plt+0x2d48c>
  430598:	cmp	w10, #0x54
  43059c:	b.eq	4305a8 <feof@plt+0x2d4c8>  // b.none
  4305a0:	cmp	w10, #0x74
  4305a4:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  4305a8:	ldrb	w10, [x9, #1]
  4305ac:	orr	w10, w10, #0x20
  4305b0:	cmp	w10, #0x68
  4305b4:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  4305b8:	ldrb	w10, [x9, #2]
  4305bc:	orr	w10, w10, #0x20
  4305c0:	cmp	w10, #0x72
  4305c4:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  4305c8:	ldrb	w10, [x9, #3]
  4305cc:	sub	w10, w10, #0x4f
  4305d0:	cmp	w10, #0x26
  4305d4:	b.hi	4304fc <feof@plt+0x2d41c>  // b.pmore
  4305d8:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0xd838>
  4305dc:	add	x11, x11, #0x81e
  4305e0:	adr	x12, 4304fc <feof@plt+0x2d41c>
  4305e4:	ldrh	w13, [x11, x10, lsl #1]
  4305e8:	add	x12, x12, x13, lsl #2
  4305ec:	mov	w26, #0x1                   	// #1
  4305f0:	br	x12
  4305f4:	ldrb	w10, [x9, #4]
  4305f8:	orr	w10, w10, #0x20
  4305fc:	cmp	w10, #0x75
  430600:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  430604:	ldrb	w10, [x9, #5]
  430608:	orr	w10, w10, #0x20
  43060c:	cmp	w10, #0x67
  430610:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  430614:	ldrb	w10, [x9, #6]
  430618:	orr	w10, w10, #0x20
  43061c:	cmp	w10, #0x68
  430620:	b.ne	4304fc <feof@plt+0x2d41c>  // b.any
  430624:	b	4308cc <feof@plt+0x2d7ec>
  430628:	ldrb	w8, [x9]
  43062c:	cmp	w8, #0x2d
  430630:	b.eq	430644 <feof@plt+0x2d564>  // b.none
  430634:	cmp	w8, #0x6c
  430638:	b.eq	4306b0 <feof@plt+0x2d5d0>  // b.none
  43063c:	cmp	w8, #0x40
  430640:	b.ne	430724 <feof@plt+0x2d644>  // b.any
  430644:	ldr	x10, [x20]
  430648:	mvn	x11, x9
  43064c:	ldr	x10, [x10]
  430650:	add	x10, x10, x11
  430654:	cmp	x10, #0xb
  430658:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  43065c:	ldur	x10, [x21, #2]
  430660:	ldur	x11, [x21, #5]
  430664:	mov	x12, #0x6166                	// #24934
  430668:	mov	x13, #0x746c                	// #29804
  43066c:	movk	x12, #0x6c6c, lsl #16
  430670:	movk	x13, #0x7268, lsl #16
  430674:	movk	x12, #0x6874, lsl #32
  430678:	movk	x13, #0x756f, lsl #32
  43067c:	movk	x12, #0x6f72, lsl #48
  430680:	movk	x13, #0x6867, lsl #48
  430684:	eor	x10, x10, x12
  430688:	eor	x11, x11, x13
  43068c:	orr	x10, x10, x11
  430690:	cbnz	x10, 430c08 <feof@plt+0x2db28>
  430694:	cmp	w8, #0x40
  430698:	b.ne	430894 <feof@plt+0x2d7b4>  // b.any
  43069c:	ldrb	w8, [x21, #13]
  4306a0:	cmp	w8, #0x40
  4306a4:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  4306a8:	mov	w8, #0xd                   	// #13
  4306ac:	b	430898 <feof@plt+0x2d7b8>
  4306b0:	ldr	x8, [x20]
  4306b4:	mvn	x9, x9
  4306b8:	ldr	x8, [x8]
  4306bc:	add	x8, x8, x9
  4306c0:	cmp	x8, #0x10
  4306c4:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  4306c8:	ldur	x8, [x21, #2]
  4306cc:	ldur	x9, [x21, #10]
  4306d0:	mov	x10, #0x6e69                	// #28265
  4306d4:	mov	x11, #0x746c                	// #29804
  4306d8:	movk	x10, #0x2074, lsl #16
  4306dc:	movk	x11, #0x7268, lsl #16
  4306e0:	movk	x10, #0x662d, lsl #32
  4306e4:	movk	x11, #0x756f, lsl #32
  4306e8:	movk	x10, #0x6c61, lsl #48
  4306ec:	movk	x11, #0x6867, lsl #48
  4306f0:	eor	x8, x8, x10
  4306f4:	eor	x9, x9, x11
  4306f8:	orr	x8, x8, x9
  4306fc:	cbnz	x8, 430c08 <feof@plt+0x2db28>
  430700:	add	x8, x21, #0x12
  430704:	b	43070c <feof@plt+0x2d62c>
  430708:	add	x8, x8, #0x1
  43070c:	ldrb	w9, [x8]
  430710:	cmp	w9, #0x20
  430714:	b.eq	430708 <feof@plt+0x2d628>  // b.none
  430718:	cmp	w9, #0x9
  43071c:	b.eq	430708 <feof@plt+0x2d628>  // b.none
  430720:	b	4308a0 <feof@plt+0x2d7c0>
  430724:	cmp	w10, #0x4
  430728:	b.ne	4307c8 <feof@plt+0x2d6e8>  // b.any
  43072c:	add	x9, x21, #0x8
  430730:	b	43073c <feof@plt+0x2d65c>
  430734:	ldurb	w8, [x9, #-6]
  430738:	add	x9, x9, #0x1
  43073c:	and	w8, w8, #0xff
  430740:	cmp	w8, #0x20
  430744:	b.eq	430734 <feof@plt+0x2d654>  // b.none
  430748:	cmp	w8, #0x9
  43074c:	b.eq	430734 <feof@plt+0x2d654>  // b.none
  430750:	ldr	x8, [x20]
  430754:	ldr	x8, [x8]
  430758:	sub	x8, x8, x9
  43075c:	add	x10, x8, #0x7
  430760:	cmp	x10, #0x8
  430764:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  430768:	ldur	w10, [x9, #-7]
  43076c:	ldur	w11, [x9, #-4]
  430770:	mov	w12, #0x4146                	// #16710
  430774:	mov	w13, #0x544c                	// #21580
  430778:	movk	w12, #0x4c4c, lsl #16
  43077c:	movk	w13, #0x5248, lsl #16
  430780:	eor	w10, w10, w12
  430784:	eor	w11, w11, w13
  430788:	orr	w10, w10, w11
  43078c:	cbnz	w10, 430c08 <feof@plt+0x2db28>
  430790:	ldrb	w10, [x9]
  430794:	cmp	w10, #0x55
  430798:	b.ne	4309f0 <feof@plt+0x2d910>  // b.any
  43079c:	mov	w8, #0x8                   	// #8
  4307a0:	add	x8, x9, x8
  4307a4:	sub	x8, x8, #0x7
  4307a8:	b	4307b0 <feof@plt+0x2d6d0>
  4307ac:	add	x8, x8, #0x1
  4307b0:	ldrb	w9, [x8]
  4307b4:	cmp	w9, #0x20
  4307b8:	b.eq	4307ac <feof@plt+0x2d6cc>  // b.none
  4307bc:	cmp	w9, #0x9
  4307c0:	b.eq	4307ac <feof@plt+0x2d6cc>  // b.none
  4307c4:	b	4308a0 <feof@plt+0x2d7c0>
  4307c8:	mov	x10, xzr
  4307cc:	and	w9, w8, #0xff
  4307d0:	cmp	w9, #0x2e
  4307d4:	b.hi	430804 <feof@plt+0x2d724>  // b.pmore
  4307d8:	and	x9, x8, #0xff
  4307dc:	mov	w11, #0x1                   	// #1
  4307e0:	lsl	x9, x11, x9
  4307e4:	mov	x11, #0x200                 	// #512
  4307e8:	movk	x11, #0x4003, lsl #32
  4307ec:	tst	x9, x11
  4307f0:	b.eq	430804 <feof@plt+0x2d724>  // b.none
  4307f4:	add	x8, x21, x10
  4307f8:	ldrb	w8, [x8, #2]
  4307fc:	add	x10, x10, #0x1
  430800:	b	4307cc <feof@plt+0x2d6ec>
  430804:	orr	w11, w8, #0x20
  430808:	add	x9, x21, x10
  43080c:	and	w11, w11, #0xff
  430810:	cmp	w11, #0x65
  430814:	add	x9, x9, #0x1
  430818:	b.ne	4308d4 <feof@plt+0x2d7f4>  // b.any
  43081c:	ldr	x11, [x20]
  430820:	ldr	x11, [x11]
  430824:	sub	x9, x11, x9
  430828:	cmp	x9, #0xd
  43082c:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  430830:	and	w9, w8, #0xff
  430834:	cmp	w9, #0x45
  430838:	b.ne	430864 <feof@plt+0x2d784>  // b.any
  43083c:	add	x9, x21, x10
  430840:	ldrh	w11, [x9, #2]
  430844:	ldrb	w9, [x9, #4]
  430848:	mov	w12, #0x534c                	// #21324
  43084c:	mov	w13, #0x45                  	// #69
  430850:	eor	w11, w11, w12
  430854:	eor	w9, w9, w13
  430858:	orr	w9, w11, w9
  43085c:	tst	w9, #0xffff
  430860:	b.eq	430a14 <feof@plt+0x2d934>  // b.none
  430864:	add	x9, x21, x10
  430868:	ldrh	w11, [x9, #2]
  43086c:	ldrb	w9, [x9, #4]
  430870:	mov	w12, #0x736c                	// #29548
  430874:	mov	w13, #0x65                  	// #101
  430878:	eor	w11, w11, w12
  43087c:	eor	w9, w9, w13
  430880:	orr	w9, w11, w9
  430884:	tst	w9, #0xffff
  430888:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  43088c:	mov	w11, wzr
  430890:	b	430a18 <feof@plt+0x2d938>
  430894:	mov	w8, #0xc                   	// #12
  430898:	add	x8, x9, x8
  43089c:	ldrb	w9, [x8]
  4308a0:	ldrb	w10, [x21]
  4308a4:	cmp	w10, #0x2a
  4308a8:	b.ne	4308c4 <feof@plt+0x2d7e4>  // b.any
  4308ac:	cmp	w9, #0x2a
  4308b0:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  4308b4:	ldrb	w8, [x8, #1]
  4308b8:	cmp	w8, #0x2f
  4308bc:	b.eq	4308cc <feof@plt+0x2d7ec>  // b.none
  4308c0:	b	430c08 <feof@plt+0x2db28>
  4308c4:	cmp	w9, #0xa
  4308c8:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  4308cc:	mov	w26, #0x1                   	// #1
  4308d0:	b	430c0c <feof@plt+0x2db2c>
  4308d4:	cmp	w11, #0x69
  4308d8:	b.ne	430964 <feof@plt+0x2d884>  // b.any
  4308dc:	ldr	x11, [x20]
  4308e0:	ldr	x11, [x11]
  4308e4:	sub	x9, x11, x9
  4308e8:	cmp	x9, #0x14
  4308ec:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  4308f0:	and	w9, w8, #0xff
  4308f4:	cmp	w9, #0x49
  4308f8:	b.ne	43092c <feof@plt+0x2d84c>  // b.any
  4308fc:	add	x9, x21, x10
  430900:	ldur	x11, [x9, #2]
  430904:	ldrh	w9, [x9, #10]
  430908:	mov	x12, #0x544e                	// #21582
  43090c:	movk	x12, #0x4e45, lsl #16
  430910:	movk	x12, #0x4954, lsl #32
  430914:	movk	x12, #0x4e4f, lsl #48
  430918:	mov	w13, #0x4c41                	// #19521
  43091c:	eor	x11, x11, x12
  430920:	eor	x9, x9, x13
  430924:	orr	x9, x11, x9
  430928:	cbz	x9, 430a68 <feof@plt+0x2d988>
  43092c:	add	x9, x21, x10
  430930:	ldur	x11, [x9, #2]
  430934:	ldrh	w9, [x9, #10]
  430938:	mov	x12, #0x746e                	// #29806
  43093c:	movk	x12, #0x6e65, lsl #16
  430940:	movk	x12, #0x6974, lsl #32
  430944:	movk	x12, #0x6e6f, lsl #48
  430948:	mov	w13, #0x6c61                	// #27745
  43094c:	eor	x11, x11, x12
  430950:	eor	x9, x9, x13
  430954:	orr	x9, x11, x9
  430958:	cbnz	x9, 430c08 <feof@plt+0x2db28>
  43095c:	mov	w11, wzr
  430960:	b	430a6c <feof@plt+0x2d98c>
  430964:	mov	w11, wzr
  430968:	orr	w10, w8, #0x20
  43096c:	and	w10, w10, #0xff
  430970:	cmp	w10, #0x66
  430974:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430978:	ldr	x10, [x20]
  43097c:	ldr	x10, [x10]
  430980:	sub	x12, x10, x9
  430984:	cmp	x12, #0x8
  430988:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  43098c:	and	w12, w8, #0xff
  430990:	cmp	w12, #0x46
  430994:	b.ne	4309bc <feof@plt+0x2d8dc>  // b.any
  430998:	ldurh	w12, [x9, #1]
  43099c:	ldrb	w13, [x9, #3]
  4309a0:	mov	w14, #0x4c41                	// #19521
  4309a4:	mov	w15, #0x4c                  	// #76
  4309a8:	eor	w12, w12, w14
  4309ac:	eor	w13, w13, w15
  4309b0:	orr	w12, w12, w13
  4309b4:	tst	w12, #0xffff
  4309b8:	b.eq	430afc <feof@plt+0x2da1c>  // b.none
  4309bc:	tbnz	w11, #0, 430c08 <feof@plt+0x2db28>
  4309c0:	ldurh	w11, [x9, #1]
  4309c4:	ldrb	w12, [x9, #3]
  4309c8:	mov	w13, #0x6c61                	// #27745
  4309cc:	mov	w14, #0x6c                  	// #108
  4309d0:	eor	w11, w11, w13
  4309d4:	eor	w12, w12, w14
  4309d8:	orr	w11, w11, w12
  4309dc:	tst	w11, #0xffff
  4309e0:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  4309e4:	mov	w12, wzr
  4309e8:	mov	w14, #0x73                  	// #115
  4309ec:	b	430b04 <feof@plt+0x2da24>
  4309f0:	cmp	x8, #0x4
  4309f4:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  4309f8:	ldr	w8, [x9]
  4309fc:	mov	w10, #0x554f                	// #21839
  430a00:	movk	w10, #0x4847, lsl #16
  430a04:	cmp	w8, w10
  430a08:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430a0c:	mov	w8, #0xb                   	// #11
  430a10:	b	4307a0 <feof@plt+0x2d6c0>
  430a14:	mov	w11, #0x1                   	// #1
  430a18:	add	x9, x21, x10
  430a1c:	ldrb	w10, [x9, #5]!
  430a20:	cmp	w10, #0x2c
  430a24:	cinc	x9, x9, eq  // eq = none
  430a28:	ldrb	w10, [x9]
  430a2c:	cmp	w10, #0x20
  430a30:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430a34:	ldrb	w10, [x9, #1]!
  430a38:	cbz	w11, 430a44 <feof@plt+0x2d964>
  430a3c:	cmp	w10, #0x66
  430a40:	b.eq	430c08 <feof@plt+0x2db28>  // b.none
  430a44:	and	w8, w8, #0xff
  430a48:	cmp	w8, #0x65
  430a4c:	b.ne	430a58 <feof@plt+0x2d978>  // b.any
  430a50:	cmp	w10, #0x46
  430a54:	b.eq	430c08 <feof@plt+0x2db28>  // b.none
  430a58:	cmp	w11, #0x0
  430a5c:	cset	w11, ne  // ne = any
  430a60:	mov	w8, w10
  430a64:	b	430968 <feof@plt+0x2d888>
  430a68:	mov	w11, #0x1                   	// #1
  430a6c:	add	x12, x21, x10
  430a70:	ldrb	w9, [x12, #12]
  430a74:	cmp	w9, #0x20
  430a78:	b.ne	430a94 <feof@plt+0x2d9b4>  // b.any
  430a7c:	add	x9, x12, #0xd
  430a80:	cbz	w11, 430ad8 <feof@plt+0x2d9f8>
  430a84:	ldrb	w10, [x12, #13]
  430a88:	cmp	w10, #0x66
  430a8c:	b.ne	430ad8 <feof@plt+0x2d9f8>  // b.any
  430a90:	b	430c08 <feof@plt+0x2db28>
  430a94:	cbz	w11, 430ab0 <feof@plt+0x2d9d0>
  430a98:	ldr	w9, [x12, #12]
  430a9c:	mov	w12, #0x594c                	// #22860
  430aa0:	movk	w12, #0x4620, lsl #16
  430aa4:	cmp	w9, w12
  430aa8:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430aac:	b	430ad0 <feof@plt+0x2d9f0>
  430ab0:	ldrh	w9, [x12, #12]
  430ab4:	ldrb	w12, [x12, #14]
  430ab8:	mov	w13, #0x796c                	// #31084
  430abc:	eor	w9, w9, w13
  430ac0:	eor	w12, w12, #0x20
  430ac4:	orr	w9, w9, w12
  430ac8:	tst	w9, #0xffff
  430acc:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430ad0:	add	x9, x21, x10
  430ad4:	add	x9, x9, #0xf
  430ad8:	and	w10, w8, #0xff
  430adc:	ldrb	w8, [x9]
  430ae0:	cmp	w10, #0x69
  430ae4:	b.ne	430af0 <feof@plt+0x2da10>  // b.any
  430ae8:	cmp	w8, #0x46
  430aec:	b.eq	430c08 <feof@plt+0x2db28>  // b.none
  430af0:	cmp	w11, #0x0
  430af4:	cset	w11, ne  // ne = any
  430af8:	b	430968 <feof@plt+0x2d888>
  430afc:	mov	w14, #0x53                  	// #83
  430b00:	mov	w12, #0x1                   	// #1
  430b04:	mov	x11, x9
  430b08:	ldrb	w13, [x11, #4]!
  430b0c:	cmp	w14, w13
  430b10:	b.ne	430b28 <feof@plt+0x2da48>  // b.any
  430b14:	ldrb	w14, [x9, #5]
  430b18:	cmp	w14, #0x20
  430b1c:	b.ne	430b28 <feof@plt+0x2da48>  // b.any
  430b20:	add	x11, x9, #0x6
  430b24:	b	430b58 <feof@plt+0x2da78>
  430b28:	cmp	w13, #0x2d
  430b2c:	b.eq	430b38 <feof@plt+0x2da58>  // b.none
  430b30:	cmp	w13, #0x20
  430b34:	b.ne	430b40 <feof@plt+0x2da60>  // b.any
  430b38:	add	x11, x9, #0x5
  430b3c:	b	430b58 <feof@plt+0x2da78>
  430b40:	cmp	w12, #0x0
  430b44:	mov	w9, #0x74                  	// #116
  430b48:	mov	w14, #0x54                  	// #84
  430b4c:	csel	w9, w14, w9, ne  // ne = any
  430b50:	cmp	w9, w13
  430b54:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430b58:	and	w8, w8, #0xff
  430b5c:	cmp	w8, #0x66
  430b60:	b.eq	430b70 <feof@plt+0x2da90>  // b.none
  430b64:	ldrb	w8, [x11]
  430b68:	cmp	w8, #0x54
  430b6c:	b.eq	430b80 <feof@plt+0x2daa0>  // b.none
  430b70:	tbnz	w12, #0, 430c08 <feof@plt+0x2db28>
  430b74:	ldrb	w8, [x11]
  430b78:	cmp	w8, #0x74
  430b7c:	b.ne	430c08 <feof@plt+0x2db28>  // b.any
  430b80:	sub	x8, x10, x11
  430b84:	cmp	x8, #0x4
  430b88:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  430b8c:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  430b90:	adrp	x10, 470000 <_obstack_memory_used@@Base+0xe838>
  430b94:	add	x9, x9, #0x408
  430b98:	add	x10, x10, #0x404
  430b9c:	cmp	w12, #0x0
  430ba0:	csel	x9, x10, x9, ne  // ne = any
  430ba4:	ldurh	w13, [x11, #1]
  430ba8:	ldrb	w14, [x11, #3]
  430bac:	ldrh	w10, [x9]
  430bb0:	ldrb	w9, [x9, #2]
  430bb4:	eor	w10, w13, w10
  430bb8:	eor	w9, w14, w9
  430bbc:	orr	w9, w10, w9
  430bc0:	tst	w9, #0xffff
  430bc4:	b.eq	430c50 <feof@plt+0x2db70>  // b.none
  430bc8:	cmp	x8, #0x7
  430bcc:	b.cc	430c08 <feof@plt+0x2db28>  // b.lo, b.ul, b.last
  430bd0:	adrp	x8, 470000 <_obstack_memory_used@@Base+0xe838>
  430bd4:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  430bd8:	add	x8, x8, #0x3ca
  430bdc:	add	x9, x9, #0x40c
  430be0:	cmp	w12, #0x0
  430be4:	csel	x8, x9, x8, ne  // ne = any
  430be8:	ldur	w10, [x11, #1]
  430bec:	ldurh	w12, [x11, #5]
  430bf0:	ldr	w9, [x8]
  430bf4:	ldrh	w8, [x8, #4]
  430bf8:	eor	w9, w10, w9
  430bfc:	eor	w8, w12, w8
  430c00:	orr	w8, w9, w8
  430c04:	cbz	w8, 430c58 <feof@plt+0x2db78>
  430c08:	mov	w26, w22
  430c0c:	ldr	x8, [x20, #1072]
  430c10:	cbz	x8, 430c34 <feof@plt+0x2db54>
  430c14:	ldr	x9, [x20]
  430c18:	ldr	w1, [x19]
  430c1c:	sub	x2, x21, #0x1
  430c20:	mov	x0, x20
  430c24:	ldr	x9, [x9]
  430c28:	sub	x9, x9, x21
  430c2c:	add	x3, x9, #0x1
  430c30:	blr	x8
  430c34:	ldrb	w8, [x20, #21]
  430c38:	cbnz	w8, 43161c <feof@plt+0x2e53c>
  430c3c:	ldrh	w8, [x19, #6]
  430c40:	mov	w22, w26
  430c44:	orr	w8, w8, #0x1
  430c48:	strh	w8, [x19, #6]
  430c4c:	b	4301e4 <feof@plt+0x2d104>
  430c50:	mov	w8, #0x4                   	// #4
  430c54:	b	430c5c <feof@plt+0x2db7c>
  430c58:	mov	w8, #0x7                   	// #7
  430c5c:	add	x8, x11, x8
  430c60:	ldrb	w9, [x8]
  430c64:	cmp	w9, #0x2e
  430c68:	b.hi	4308a0 <feof@plt+0x2d7c0>  // b.pmore
  430c6c:	mov	w10, #0x1                   	// #1
  430c70:	mov	x11, #0x200                 	// #512
  430c74:	lsl	x10, x10, x9
  430c78:	movk	x11, #0x4003, lsl #32
  430c7c:	tst	x10, x11
  430c80:	b.eq	430c8c <feof@plt+0x2dbac>  // b.none
  430c84:	add	x8, x8, #0x1
  430c88:	b	430c60 <feof@plt+0x2db80>
  430c8c:	cmp	x9, #0x2d
  430c90:	b.ne	4308a0 <feof@plt+0x2d7c0>  // b.any
  430c94:	ldrb	w9, [x21]
  430c98:	add	x10, x8, #0x1
  430c9c:	cmp	w9, #0x2a
  430ca0:	b.eq	430cd8 <feof@plt+0x2dbf8>  // b.none
  430ca4:	mov	x8, x10
  430ca8:	b	430cb0 <feof@plt+0x2dbd0>
  430cac:	add	x8, x8, #0x1
  430cb0:	ldrb	w9, [x8]
  430cb4:	cmp	w9, #0xd
  430cb8:	b.hi	430cac <feof@plt+0x2dbcc>  // b.pmore
  430cbc:	mov	w10, #0x1                   	// #1
  430cc0:	lsl	w10, w10, w9
  430cc4:	mov	w11, #0x2401                	// #9217
  430cc8:	tst	w10, w11
  430ccc:	b.eq	430cac <feof@plt+0x2dbcc>  // b.none
  430cd0:	b	4308a0 <feof@plt+0x2d7c0>
  430cd4:	add	x10, x8, #0x1
  430cd8:	ldrb	w9, [x10]
  430cdc:	mov	x8, x10
  430ce0:	cmp	w9, #0x29
  430ce4:	b.le	430d08 <feof@plt+0x2dc28>
  430ce8:	cmp	w9, #0x2a
  430cec:	b.ne	430cd4 <feof@plt+0x2dbf4>  // b.any
  430cf0:	mov	x10, x8
  430cf4:	ldrb	w9, [x10, #1]!
  430cf8:	cmp	w9, #0x2f
  430cfc:	mov	w9, #0x2a                  	// #42
  430d00:	b.ne	430cd8 <feof@plt+0x2dbf8>  // b.any
  430d04:	b	4308a0 <feof@plt+0x2d7c0>
  430d08:	cbz	w9, 4308a0 <feof@plt+0x2d7c0>
  430d0c:	cmp	w9, #0xa
  430d10:	b.eq	4308a0 <feof@plt+0x2d7c0>  // b.none
  430d14:	cmp	w9, #0xd
  430d18:	b.ne	430cd4 <feof@plt+0x2dbf4>  // b.any
  430d1c:	b	4308a0 <feof@plt+0x2d7c0>
  430d20:	ldr	x8, [x23]
  430d24:	ldr	x9, [x23, #32]
  430d28:	cmp	x8, x9
  430d2c:	b.cs	430d70 <feof@plt+0x2dc90>  // b.hs, b.nlast
  430d30:	ldr	x0, [x20, #40]
  430d34:	mov	w10, #0x18                  	// #24
  430d38:	mov	w2, wzr
  430d3c:	ldr	w8, [x0, #12]
  430d40:	ldr	x9, [x0]
  430d44:	sub	w8, w8, #0x1
  430d48:	smaddl	x8, w8, w10, x9
  430d4c:	ldr	w9, [x0, #60]
  430d50:	ldr	w10, [x8]
  430d54:	ldrb	w11, [x8, #6]
  430d58:	ldr	w8, [x8, #16]
  430d5c:	sub	w9, w9, w10
  430d60:	lsr	w9, w9, w11
  430d64:	add	w8, w8, w9
  430d68:	add	w1, w8, #0x1
  430d6c:	bl	435084 <feof@plt+0x31fa4>
  430d70:	mov	w8, #0x1                   	// #1
  430d74:	strb	w8, [x23, #104]
  430d78:	b	4300fc <feof@plt+0x2d01c>
  430d7c:	mov	w8, #0x16                  	// #22
  430d80:	strb	w8, [x19, #4]
  430d84:	ldrb	w8, [x20, #16]
  430d88:	cbnz	w8, 4315a4 <feof@plt+0x2e4c4>
  430d8c:	ldr	x8, [x20, #40]
  430d90:	mov	w9, #0x40                  	// #64
  430d94:	ldr	w8, [x8, #60]
  430d98:	strh	w9, [x19, #6]
  430d9c:	str	w8, [x19]
  430da0:	b	4315a4 <feof@plt+0x2e4c4>
  430da4:	cmp	w28, #0x4c
  430da8:	b.eq	430db4 <feof@plt+0x2dcd4>  // b.none
  430dac:	ldrb	w8, [x20, #1130]
  430db0:	cbz	w8, 4312b0 <feof@plt+0x2e1d0>
  430db4:	ldr	x8, [x23]
  430db8:	ldrb	w9, [x8]
  430dbc:	cmp	w9, #0x27
  430dc0:	cset	w10, eq  // eq = none
  430dc4:	cmp	w28, #0x52
  430dc8:	cset	w11, ne  // ne = any
  430dcc:	cmp	w9, #0x22
  430dd0:	b.eq	430e2c <feof@plt+0x2dd4c>  // b.none
  430dd4:	and	w10, w11, w10
  430dd8:	tbnz	w10, #0, 430e2c <feof@plt+0x2dd4c>
  430ddc:	cmp	w28, #0x52
  430de0:	b.eq	431278 <feof@plt+0x2e198>  // b.none
  430de4:	cmp	w9, #0x52
  430de8:	b.ne	431278 <feof@plt+0x2e198>  // b.any
  430dec:	ldrb	w9, [x8, #1]
  430df0:	cmp	w9, #0x22
  430df4:	b.ne	4314b0 <feof@plt+0x2e3d0>  // b.any
  430df8:	ldrb	w9, [x20, #1130]
  430dfc:	cbnz	w9, 430e2c <feof@plt+0x2dd4c>
  430e00:	b	4314b0 <feof@plt+0x2e3d0>
  430e04:	mov	w8, #0x52                  	// #82
  430e08:	strb	w8, [x19, #4]
  430e0c:	ldrb	w8, [x20, #33]
  430e10:	strb	wzr, [x20, #32]
  430e14:	cbnz	w8, 4315a4 <feof@plt+0x2e4c4>
  430e18:	ldrb	w8, [x20, #24]
  430e1c:	sub	w8, w8, #0x1
  430e20:	strb	w8, [x20, #24]
  430e24:	b	4315a4 <feof@plt+0x2e4c4>
  430e28:	ldr	x8, [x23]
  430e2c:	sub	x2, x8, #0x1
  430e30:	mov	x0, x20
  430e34:	mov	x1, x19
  430e38:	bl	431ae4 <feof@plt+0x2ea04>
  430e3c:	b	431524 <feof@plt+0x2e444>
  430e40:	ldr	x8, [x23]
  430e44:	mov	x2, sp
  430e48:	mov	w1, #0x1                   	// #1
  430e4c:	mov	x0, x20
  430e50:	sub	x21, x8, #0x1
  430e54:	str	x21, [x23]
  430e58:	str	wzr, [sp, #8]
  430e5c:	str	xzr, [sp]
  430e60:	bl	433140 <feof@plt+0x30060>
  430e64:	tbz	w0, #0, 4311fc <feof@plt+0x2e11c>
  430e68:	mov	w8, #0x35                  	// #53
  430e6c:	add	x4, x19, #0x10
  430e70:	mov	x3, sp
  430e74:	mov	w2, #0x1                   	// #1
  430e78:	mov	x0, x20
  430e7c:	mov	x1, x21
  430e80:	strb	w8, [x19, #4]
  430e84:	bl	432ee8 <feof@plt+0x2fe08>
  430e88:	str	x0, [x19, #8]
  430e8c:	b	4310dc <feof@plt+0x2dffc>
  430e90:	mov	w8, #0x1                   	// #1
  430e94:	strb	w8, [x19, #4]
  430e98:	ldr	x8, [x23]
  430e9c:	ldrb	w9, [x8]
  430ea0:	cmp	w9, #0x3d
  430ea4:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  430ea8:	add	x8, x8, #0x1
  430eac:	mov	w9, #0x18                  	// #24
  430eb0:	b	431498 <feof@plt+0x2e3b8>
  430eb4:	mov	w8, #0x8                   	// #8
  430eb8:	strb	w8, [x19, #4]
  430ebc:	ldr	x8, [x23]
  430ec0:	ldrb	w9, [x8]
  430ec4:	cmp	w9, #0x3d
  430ec8:	b.ne	4312c4 <feof@plt+0x2e1e4>  // b.any
  430ecc:	add	x8, x8, #0x1
  430ed0:	mov	w9, #0x1f                  	// #31
  430ed4:	b	431498 <feof@plt+0x2e3b8>
  430ed8:	mov	w8, #0x14                  	// #20
  430edc:	strb	w8, [x19, #4]
  430ee0:	b	431528 <feof@plt+0x2e448>
  430ee4:	mov	w8, #0x4                   	// #4
  430ee8:	strb	w8, [x19, #4]
  430eec:	ldr	x8, [x23]
  430ef0:	ldrb	w9, [x8]
  430ef4:	cmp	w9, #0x3d
  430ef8:	b.eq	431378 <feof@plt+0x2e298>  // b.none
  430efc:	cmp	w9, #0x2b
  430f00:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  430f04:	add	x8, x8, #0x1
  430f08:	mov	w9, #0x2d                  	// #45
  430f0c:	b	431498 <feof@plt+0x2e3b8>
  430f10:	ldrb	w8, [x20, #19]
  430f14:	cbz	w8, 430f38 <feof@plt+0x2de58>
  430f18:	ldr	x8, [x23]
  430f1c:	mov	x0, x20
  430f20:	mov	x1, x19
  430f24:	sub	x2, x8, #0x1
  430f28:	bl	431ae4 <feof@plt+0x2ea04>
  430f2c:	ldrb	w8, [x19, #4]
  430f30:	cmp	w8, #0x3
  430f34:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  430f38:	mov	w8, #0x3                   	// #3
  430f3c:	strb	w8, [x19, #4]
  430f40:	ldr	x8, [x23]
  430f44:	ldrb	w9, [x8]
  430f48:	cmp	w9, #0x3c
  430f4c:	b.eq	4313fc <feof@plt+0x2e31c>  // b.none
  430f50:	cmp	w9, #0x3d
  430f54:	b.ne	431428 <feof@plt+0x2e348>  // b.any
  430f58:	add	x8, x8, #0x1
  430f5c:	mov	w9, #0x1a                  	// #26
  430f60:	b	431498 <feof@plt+0x2e3b8>
  430f64:	mov	w8, #0x11                  	// #17
  430f68:	strb	w8, [x19, #4]
  430f6c:	b	431528 <feof@plt+0x2e448>
  430f70:	mov	w8, #0x34                  	// #52
  430f74:	strb	w8, [x19, #4]
  430f78:	b	431528 <feof@plt+0x2e448>
  430f7c:	mov	w8, #0x2a                  	// #42
  430f80:	strb	w8, [x19, #4]
  430f84:	b	431528 <feof@plt+0x2e448>
  430f88:	mov	w8, #0x25                  	// #37
  430f8c:	strb	w8, [x19, #4]
  430f90:	ldr	x8, [x23]
  430f94:	ldrb	w9, [x8]
  430f98:	cmp	w9, #0x23
  430f9c:	b.ne	430fb0 <feof@plt+0x2ded0>  // b.any
  430fa0:	add	x8, x8, #0x1
  430fa4:	mov	w9, #0x26                  	// #38
  430fa8:	str	x8, [x23]
  430fac:	strb	w9, [x19, #4]
  430fb0:	str	wzr, [x19, #8]
  430fb4:	b	431524 <feof@plt+0x2e444>
  430fb8:	mov	w8, #0x9                   	// #9
  430fbc:	strb	w8, [x19, #4]
  430fc0:	ldr	x8, [x23]
  430fc4:	ldrb	w9, [x8]
  430fc8:	cmp	w9, #0x3d
  430fcc:	b.eq	431384 <feof@plt+0x2e2a4>  // b.none
  430fd0:	cmp	w9, #0x26
  430fd4:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  430fd8:	add	x8, x8, #0x1
  430fdc:	mov	w9, #0xf                   	// #15
  430fe0:	b	431498 <feof@plt+0x2e3b8>
  430fe4:	mov	w8, #0x15                  	// #21
  430fe8:	strb	w8, [x19, #4]
  430fec:	b	431528 <feof@plt+0x2e448>
  430ff0:	mov	w8, #0x6                   	// #6
  430ff4:	strb	w8, [x19, #4]
  430ff8:	ldr	x8, [x23]
  430ffc:	ldrb	w9, [x8]
  431000:	cmp	w9, #0x3d
  431004:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431008:	add	x8, x8, #0x1
  43100c:	mov	w9, #0x1d                  	// #29
  431010:	b	431498 <feof@plt+0x2e3b8>
  431014:	mov	w8, #0x13                  	// #19
  431018:	strb	w8, [x19, #4]
  43101c:	b	431528 <feof@plt+0x2e448>
  431020:	mov	w8, #0x5                   	// #5
  431024:	strb	w8, [x19, #4]
  431028:	ldr	x8, [x23]
  43102c:	ldrb	w9, [x8]
  431030:	cmp	w9, #0x2d
  431034:	b.eq	4313e4 <feof@plt+0x2e304>  // b.none
  431038:	cmp	w9, #0x3d
  43103c:	b.eq	4313f0 <feof@plt+0x2e310>  // b.none
  431040:	cmp	w9, #0x3e
  431044:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431048:	add	x8, x8, #0x1
  43104c:	mov	w9, #0x2f                  	// #47
  431050:	str	x8, [x23]
  431054:	strb	w9, [x19, #4]
  431058:	ldr	x8, [x23]
  43105c:	ldrb	w9, [x8]
  431060:	cmp	w9, #0x2a
  431064:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431068:	ldrb	w9, [x20, #1120]
  43106c:	cbz	w9, 431524 <feof@plt+0x2e444>
  431070:	add	x8, x8, #0x1
  431074:	mov	w9, #0x32                  	// #50
  431078:	b	431498 <feof@plt+0x2e3b8>
  43107c:	mov	w8, #0x30                  	// #48
  431080:	strb	w8, [x19, #4]
  431084:	ldr	x8, [x23]
  431088:	ldrb	w9, [x8]
  43108c:	ldrh	w10, [x27, x9, lsl #1]
  431090:	tbnz	w10, #2, 4310bc <feof@plt+0x2dfdc>
  431094:	cmp	w9, #0x2a
  431098:	b.eq	431488 <feof@plt+0x2e3a8>  // b.none
  43109c:	cmp	w9, #0x2e
  4310a0:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  4310a4:	ldrb	w9, [x8, #1]
  4310a8:	cmp	w9, #0x2e
  4310ac:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  4310b0:	add	x8, x8, #0x2
  4310b4:	mov	w9, #0x2c                  	// #44
  4310b8:	b	431498 <feof@plt+0x2e3b8>
  4310bc:	mov	w8, #0x37                  	// #55
  4310c0:	add	x1, x19, #0x8
  4310c4:	mov	x2, sp
  4310c8:	mov	x0, x20
  4310cc:	str	wzr, [sp, #8]
  4310d0:	str	xzr, [sp]
  4310d4:	strb	w8, [x19, #4]
  4310d8:	bl	431898 <feof@plt+0x2e7b8>
  4310dc:	mov	x2, sp
  4310e0:	mov	x0, x20
  4310e4:	mov	x1, x19
  4310e8:	bl	4319f0 <feof@plt+0x2e910>
  4310ec:	b	431524 <feof@plt+0x2e444>
  4310f0:	mov	w8, #0x12                  	// #18
  4310f4:	strb	w8, [x19, #4]
  4310f8:	ldr	x8, [x23]
  4310fc:	ldrb	w9, [x8]
  431100:	cmp	w9, #0x3e
  431104:	b.eq	431390 <feof@plt+0x2e2b0>  // b.none
  431108:	cmp	w9, #0x3a
  43110c:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431110:	ldrb	w9, [x20, #1120]
  431114:	cbz	w9, 431524 <feof@plt+0x2e444>
  431118:	add	x8, x8, #0x1
  43111c:	mov	w9, #0x31                  	// #49
  431120:	b	431498 <feof@plt+0x2e3b8>
  431124:	mov	w8, #0x2b                  	// #43
  431128:	strb	w8, [x19, #4]
  43112c:	b	431528 <feof@plt+0x2e448>
  431130:	strb	wzr, [x19, #4]
  431134:	ldr	x8, [x23]
  431138:	ldrb	w9, [x8]
  43113c:	cmp	w9, #0x3d
  431140:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431144:	add	x8, x8, #0x1
  431148:	mov	w9, #0x17                  	// #23
  43114c:	b	431498 <feof@plt+0x2e3b8>
  431150:	mov	w8, #0x2                   	// #2
  431154:	strb	w8, [x19, #4]
  431158:	ldr	x8, [x23]
  43115c:	ldrb	w9, [x8]
  431160:	cmp	w9, #0x3e
  431164:	b.eq	4313ac <feof@plt+0x2e2cc>  // b.none
  431168:	cmp	w9, #0x3d
  43116c:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431170:	add	x8, x8, #0x1
  431174:	mov	w9, #0x19                  	// #25
  431178:	b	431498 <feof@plt+0x2e3b8>
  43117c:	mov	w8, #0x27                  	// #39
  431180:	strb	w8, [x19, #4]
  431184:	b	431528 <feof@plt+0x2e448>
  431188:	mov	w8, #0x28                  	// #40
  43118c:	strb	w8, [x19, #4]
  431190:	b	431528 <feof@plt+0x2e448>
  431194:	mov	w8, #0xb                   	// #11
  431198:	strb	w8, [x19, #4]
  43119c:	ldr	x8, [x23]
  4311a0:	ldrb	w9, [x8]
  4311a4:	cmp	w9, #0x3d
  4311a8:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  4311ac:	add	x8, x8, #0x1
  4311b0:	mov	w9, #0x22                  	// #34
  4311b4:	b	431498 <feof@plt+0x2e3b8>
  4311b8:	mov	w8, #0x29                  	// #41
  4311bc:	strb	w8, [x19, #4]
  4311c0:	b	431528 <feof@plt+0x2e448>
  4311c4:	mov	w8, #0xa                   	// #10
  4311c8:	strb	w8, [x19, #4]
  4311cc:	ldr	x8, [x23]
  4311d0:	ldrb	w9, [x8]
  4311d4:	cmp	w9, #0x3d
  4311d8:	b.eq	4313d8 <feof@plt+0x2e2f8>  // b.none
  4311dc:	cmp	w9, #0x7c
  4311e0:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  4311e4:	add	x8, x8, #0x1
  4311e8:	mov	w9, #0x10                  	// #16
  4311ec:	b	431498 <feof@plt+0x2e3b8>
  4311f0:	mov	w8, #0xe                   	// #14
  4311f4:	strb	w8, [x19, #4]
  4311f8:	b	431528 <feof@plt+0x2e448>
  4311fc:	ldr	x8, [x23]
  431200:	add	x8, x8, #0x1
  431204:	str	x8, [x23]
  431208:	ldr	x8, [x20, #64]
  43120c:	ldr	x21, [x23]
  431210:	ldp	x0, x9, [x8, #16]
  431214:	sub	x9, x9, x0
  431218:	cmp	x9, #0x1
  43121c:	b.hi	43134c <feof@plt+0x2e26c>  // b.pmore
  431220:	mov	x9, x20
  431224:	ldr	x8, [x9, #72]!
  431228:	cbz	x8, 431254 <feof@plt+0x2e174>
  43122c:	ldr	x10, [x8, #24]
  431230:	ldr	x11, [x8, #8]
  431234:	sub	x10, x10, x11
  431238:	sub	x10, x10, #0x2
  43123c:	lsr	x10, x10, #1
  431240:	cmp	x10, #0xfa1
  431244:	b.cc	43132c <feof@plt+0x2e24c>  // b.lo, b.ul, b.last
  431248:	mov	x9, x8
  43124c:	ldr	x8, [x8]
  431250:	cbnz	x8, 43122c <feof@plt+0x2e14c>
  431254:	mov	w0, #0x1f60                	// #8032
  431258:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43125c:	mov	w8, #0x1f40                	// #8000
  431260:	add	x8, x0, x8
  431264:	str	x0, [x0, #8008]
  431268:	str	x0, [x0, #8016]
  43126c:	str	x8, [x0, #8024]
  431270:	str	xzr, [x0, #8000]
  431274:	b	431340 <feof@plt+0x2e260>
  431278:	cmp	w28, #0x75
  43127c:	b.ne	4314b0 <feof@plt+0x2e3d0>  // b.any
  431280:	cmp	w9, #0x38
  431284:	b.ne	4314b0 <feof@plt+0x2e3d0>  // b.any
  431288:	ldrb	w9, [x8, #1]
  43128c:	cmp	w9, #0x22
  431290:	b.eq	430e2c <feof@plt+0x2dd4c>  // b.none
  431294:	cmp	w9, #0x52
  431298:	b.eq	4314a4 <feof@plt+0x2e3c4>  // b.none
  43129c:	cmp	w9, #0x27
  4312a0:	b.ne	4314b0 <feof@plt+0x2e3d0>  // b.any
  4312a4:	ldrb	w9, [x20, #1129]
  4312a8:	cbnz	w9, 430e2c <feof@plt+0x2dd4c>
  4312ac:	b	4314b0 <feof@plt+0x2e3d0>
  4312b0:	cmp	w28, #0x52
  4312b4:	b.eq	4314b0 <feof@plt+0x2e3d0>  // b.none
  4312b8:	ldrb	w8, [x20, #1128]
  4312bc:	cbnz	w8, 430db4 <feof@plt+0x2dcd4>
  4312c0:	b	4314b0 <feof@plt+0x2e3d0>
  4312c4:	ldrb	w10, [x20, #1126]
  4312c8:	cbz	w10, 431524 <feof@plt+0x2e444>
  4312cc:	cmp	w9, #0x3e
  4312d0:	b.eq	4315c8 <feof@plt+0x2e4e8>  // b.none
  4312d4:	cmp	w9, #0x3a
  4312d8:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  4312dc:	add	x8, x8, #0x1
  4312e0:	str	x8, [x23]
  4312e4:	ldrh	w8, [x19, #6]
  4312e8:	mov	w9, #0x25                  	// #37
  4312ec:	strb	w9, [x19, #4]
  4312f0:	orr	w8, w8, #0x2
  4312f4:	strh	w8, [x19, #6]
  4312f8:	ldr	x8, [x23]
  4312fc:	ldrb	w9, [x8]
  431300:	cmp	w9, #0x25
  431304:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431308:	ldrb	w9, [x8, #1]
  43130c:	cmp	w9, #0x3a
  431310:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431314:	add	x8, x8, #0x2
  431318:	mov	w9, #0x26                  	// #38
  43131c:	str	x8, [x23]
  431320:	strb	w9, [x19, #4]
  431324:	str	wzr, [x19, #8]
  431328:	b	431524 <feof@plt+0x2e444>
  43132c:	ldr	x10, [x8]
  431330:	str	x10, [x9]
  431334:	ldr	x0, [x8, #8]
  431338:	str	xzr, [x8]
  43133c:	str	x0, [x8, #16]
  431340:	ldr	x9, [x20, #64]
  431344:	str	x9, [x8]
  431348:	str	x8, [x20, #64]
  43134c:	add	x9, x0, #0x2
  431350:	str	x9, [x8, #16]
  431354:	ldurb	w8, [x21, #-1]
  431358:	mov	w9, #0x3d                  	// #61
  43135c:	mov	w10, #0x1                   	// #1
  431360:	strb	wzr, [x0, #1]
  431364:	strb	w8, [x0]
  431368:	strb	w9, [x19, #4]
  43136c:	str	w10, [x19, #8]
  431370:	str	x0, [x19, #16]
  431374:	b	431524 <feof@plt+0x2e444>
  431378:	add	x8, x8, #0x1
  43137c:	mov	w9, #0x1b                  	// #27
  431380:	b	431498 <feof@plt+0x2e3b8>
  431384:	add	x8, x8, #0x1
  431388:	mov	w9, #0x20                  	// #32
  43138c:	b	431498 <feof@plt+0x2e3b8>
  431390:	ldrb	w9, [x20, #1126]
  431394:	cbz	w9, 431524 <feof@plt+0x2e444>
  431398:	add	x8, x8, #0x1
  43139c:	str	x8, [x23]
  4313a0:	ldrh	w8, [x19, #6]
  4313a4:	mov	w9, #0x28                  	// #40
  4313a8:	b	4315ec <feof@plt+0x2e50c>
  4313ac:	add	x8, x8, #0x1
  4313b0:	mov	w9, #0xc                   	// #12
  4313b4:	str	x8, [x23]
  4313b8:	strb	w9, [x19, #4]
  4313bc:	ldr	x8, [x23]
  4313c0:	ldrb	w9, [x8]
  4313c4:	cmp	w9, #0x3d
  4313c8:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  4313cc:	add	x8, x8, #0x1
  4313d0:	mov	w9, #0x23                  	// #35
  4313d4:	b	431498 <feof@plt+0x2e3b8>
  4313d8:	add	x8, x8, #0x1
  4313dc:	mov	w9, #0x21                  	// #33
  4313e0:	b	431498 <feof@plt+0x2e3b8>
  4313e4:	add	x8, x8, #0x1
  4313e8:	mov	w9, #0x2e                  	// #46
  4313ec:	b	431498 <feof@plt+0x2e3b8>
  4313f0:	add	x8, x8, #0x1
  4313f4:	mov	w9, #0x1c                  	// #28
  4313f8:	b	431498 <feof@plt+0x2e3b8>
  4313fc:	add	x8, x8, #0x1
  431400:	mov	w9, #0xd                   	// #13
  431404:	str	x8, [x23]
  431408:	strb	w9, [x19, #4]
  43140c:	ldr	x8, [x23]
  431410:	ldrb	w9, [x8]
  431414:	cmp	w9, #0x3d
  431418:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  43141c:	add	x8, x8, #0x1
  431420:	mov	w9, #0x24                  	// #36
  431424:	b	431498 <feof@plt+0x2e3b8>
  431428:	ldrb	w10, [x20, #1126]
  43142c:	cbz	w10, 431524 <feof@plt+0x2e444>
  431430:	cmp	w9, #0x25
  431434:	b.eq	4315dc <feof@plt+0x2e4fc>  // b.none
  431438:	cmp	w9, #0x3a
  43143c:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431440:	ldrb	w9, [x20, #1120]
  431444:	cbz	w9, 431474 <feof@plt+0x2e394>
  431448:	ldr	w9, [x20, #1116]
  43144c:	sub	w9, w9, #0xb
  431450:	cmp	w9, #0x2
  431454:	b.cc	431474 <feof@plt+0x2e394>  // b.lo, b.ul, b.last
  431458:	ldrb	w9, [x8, #1]
  43145c:	cmp	w9, #0x3a
  431460:	b.ne	431474 <feof@plt+0x2e394>  // b.any
  431464:	ldrb	w9, [x8, #2]
  431468:	orr	w9, w9, #0x4
  43146c:	cmp	w9, #0x3e
  431470:	b.ne	431524 <feof@plt+0x2e444>  // b.any
  431474:	add	x8, x8, #0x1
  431478:	str	x8, [x23]
  43147c:	ldrh	w8, [x19, #6]
  431480:	mov	w9, #0x27                  	// #39
  431484:	b	4315ec <feof@plt+0x2e50c>
  431488:	ldrb	w9, [x20, #1120]
  43148c:	cbz	w9, 431524 <feof@plt+0x2e444>
  431490:	add	x8, x8, #0x1
  431494:	mov	w9, #0x33                  	// #51
  431498:	str	x8, [x23]
  43149c:	strb	w9, [x19, #4]
  4314a0:	b	431524 <feof@plt+0x2e444>
  4314a4:	ldrb	w9, [x8, #2]
  4314a8:	cmp	w9, #0x22
  4314ac:	b.eq	430df8 <feof@plt+0x2dd18>  // b.none
  4314b0:	mov	w8, #0x35                  	// #53
  4314b4:	strb	w8, [x19, #4]
  4314b8:	str	wzr, [sp, #8]
  4314bc:	str	xzr, [sp]
  4314c0:	ldr	x8, [x23]
  4314c4:	add	x4, x19, #0x10
  4314c8:	mov	x3, sp
  4314cc:	mov	x0, x20
  4314d0:	sub	x1, x8, #0x1
  4314d4:	mov	w2, wzr
  4314d8:	bl	432ee8 <feof@plt+0x2fe08>
  4314dc:	str	x0, [x19, #8]
  4314e0:	mov	x2, sp
  4314e4:	mov	x0, x20
  4314e8:	mov	x1, x19
  4314ec:	bl	4319f0 <feof@plt+0x2e910>
  4314f0:	ldr	x8, [x19, #8]
  4314f4:	ldrb	w9, [x8, #18]
  4314f8:	tbz	w9, #2, 431514 <feof@plt+0x2e434>
  4314fc:	ldrh	w9, [x19, #6]
  431500:	orr	w9, w9, #0x10
  431504:	strh	w9, [x19, #6]
  431508:	ldrb	w8, [x8, #16]
  43150c:	lsr	w8, w8, #1
  431510:	strb	w8, [x19, #4]
  431514:	tbz	w22, #0, 431524 <feof@plt+0x2e444>
  431518:	ldrh	w8, [x19, #6]
  43151c:	orr	w8, w8, #0x20
  431520:	strh	w8, [x19, #6]
  431524:	ldr	w21, [x19]
  431528:	cmp	w21, #0x2
  43152c:	b.cc	4315a4 <feof@plt+0x2e4c4>  // b.lo, b.ul, b.last
  431530:	ldrb	w8, [x19, #4]
  431534:	cmp	w8, #0x16
  431538:	b.eq	4315a4 <feof@plt+0x2e4c4>  // b.none
  43153c:	ldr	w9, [x23, #56]
  431540:	ldr	x10, [x23, #48]
  431544:	ldr	x8, [x23]
  431548:	lsl	x9, x9, #4
  43154c:	ldr	x9, [x10, x9]
  431550:	cmp	x8, x9
  431554:	b.cc	431574 <feof@plt+0x2e494>  // b.lo, b.ul, b.last
  431558:	ldr	x9, [x20, #8]
  43155c:	cbnz	x9, 431574 <feof@plt+0x2e494>
  431560:	mov	x0, x20
  431564:	mov	w1, wzr
  431568:	bl	42f6a0 <feof@plt+0x2c5c0>
  43156c:	ldr	w21, [x19]
  431570:	ldr	x8, [x23]
  431574:	ldr	w9, [x23, #8]
  431578:	ldr	x0, [x20, #40]
  43157c:	sub	w1, w8, w9
  431580:	bl	435288 <feof@plt+0x321a8>
  431584:	ldr	x8, [x20, #40]
  431588:	ldr	w1, [x19]
  43158c:	mov	w2, w21
  431590:	bfi	x2, x0, #32, #32
  431594:	mov	x0, x8
  431598:	mov	x3, xzr
  43159c:	bl	4343a8 <feof@plt+0x312c8>
  4315a0:	str	w0, [x19]
  4315a4:	mov	x0, x19
  4315a8:	ldp	x20, x19, [sp, #96]
  4315ac:	ldp	x22, x21, [sp, #80]
  4315b0:	ldp	x24, x23, [sp, #64]
  4315b4:	ldp	x26, x25, [sp, #48]
  4315b8:	ldp	x28, x27, [sp, #32]
  4315bc:	ldp	x29, x30, [sp, #16]
  4315c0:	add	sp, sp, #0x70
  4315c4:	ret
  4315c8:	add	x8, x8, #0x1
  4315cc:	str	x8, [x23]
  4315d0:	ldrh	w8, [x19, #6]
  4315d4:	mov	w9, #0x2a                  	// #42
  4315d8:	b	4315ec <feof@plt+0x2e50c>
  4315dc:	add	x8, x8, #0x1
  4315e0:	str	x8, [x23]
  4315e4:	ldrh	w8, [x19, #6]
  4315e8:	mov	w9, #0x29                  	// #41
  4315ec:	orr	w8, w8, #0x2
  4315f0:	strh	w8, [x19, #6]
  4315f4:	strb	w9, [x19, #4]
  4315f8:	b	431524 <feof@plt+0x2e444>
  4315fc:	cmp	w28, #0x3d
  431600:	b.ne	431610 <feof@plt+0x2e530>  // b.any
  431604:	add	x8, x21, #0x1
  431608:	mov	w9, #0x1e                  	// #30
  43160c:	b	431498 <feof@plt+0x2e3b8>
  431610:	mov	w8, #0x7                   	// #7
  431614:	strb	w8, [x19, #4]
  431618:	b	431524 <feof@plt+0x2e444>
  43161c:	tbz	w26, #0, 43162c <feof@plt+0x2e54c>
  431620:	ldrh	w8, [x19, #6]
  431624:	orr	w8, w8, #0x20
  431628:	strh	w8, [x19, #6]
  43162c:	ldr	x8, [x20]
  431630:	ldrb	w10, [x20, #16]
  431634:	mov	w11, #0x1                   	// #1
  431638:	cmp	w28, #0x2f
  43163c:	ldr	x8, [x8]
  431640:	ldurb	w9, [x8, #-1]
  431644:	sub	w8, w8, w21
  431648:	ldrh	w9, [x27, x9, lsl #1]
  43164c:	bic	w9, w11, w9, lsr #10
  431650:	add	w25, w9, w8
  431654:	cbz	w10, 431664 <feof@plt+0x2e584>
  431658:	mov	w24, w25
  43165c:	b.eq	431674 <feof@plt+0x2e594>  // b.none
  431660:	b	431678 <feof@plt+0x2e598>
  431664:	b.ne	4317d0 <feof@plt+0x2e6f0>  // b.any
  431668:	ldrb	w8, [x20, #25]
  43166c:	mov	w24, w25
  431670:	cbz	w8, 431678 <feof@plt+0x2e598>
  431674:	add	w24, w25, #0x2
  431678:	mov	w1, w24
  43167c:	mov	x0, x20
  431680:	bl	4335d8 <feof@plt+0x304f8>
  431684:	mov	w8, #0x4f                  	// #79
  431688:	mov	w9, #0x2f                  	// #47
  43168c:	mov	x22, x0
  431690:	str	w24, [x19, #8]
  431694:	str	x0, [x19, #16]
  431698:	strb	w8, [x19, #4]
  43169c:	strb	w9, [x0], #1
  4316a0:	sub	w2, w25, #0x1
  4316a4:	mov	x1, x21
  4316a8:	bl	4029c0 <memcpy@plt>
  4316ac:	ldrb	w8, [x20, #16]
  4316b0:	cbz	w8, 4316c0 <feof@plt+0x2e5e0>
  4316b4:	cmp	w28, #0x2f
  4316b8:	b.eq	4316d0 <feof@plt+0x2e5f0>  // b.none
  4316bc:	b	43173c <feof@plt+0x2e65c>
  4316c0:	cmp	w28, #0x2f
  4316c4:	b.ne	43173c <feof@plt+0x2e65c>  // b.any
  4316c8:	ldrb	w8, [x20, #25]
  4316cc:	cbz	w8, 43173c <feof@plt+0x2e65c>
  4316d0:	sub	w9, w24, #0x2
  4316d4:	mov	w8, #0x2a                  	// #42
  4316d8:	sub	w10, w24, #0x1
  4316dc:	mov	w11, #0x2f                  	// #47
  4316e0:	cmp	w9, #0x3
  4316e4:	strb	w8, [x22, #1]
  4316e8:	strb	w8, [x22, x9]
  4316ec:	strb	w11, [x22, w10, uxtw]
  4316f0:	b.cc	43173c <feof@plt+0x2e65c>  // b.lo, b.ul, b.last
  4316f4:	add	x8, x22, #0x3
  4316f8:	sub	x9, x9, #0x2
  4316fc:	mov	w10, #0x7c                  	// #124
  431700:	b	431714 <feof@plt+0x2e634>
  431704:	sturb	w10, [x8, #-1]
  431708:	subs	x9, x9, #0x1
  43170c:	add	x8, x8, #0x1
  431710:	b.eq	43173c <feof@plt+0x2e65c>  // b.none
  431714:	ldurb	w11, [x8, #-1]
  431718:	cmp	w11, #0x2f
  43171c:	b.ne	431708 <feof@plt+0x2e628>  // b.any
  431720:	ldurb	w11, [x8, #-2]
  431724:	cmp	w11, #0x2a
  431728:	b.eq	431704 <feof@plt+0x2e624>  // b.none
  43172c:	ldrb	w11, [x8]
  431730:	cmp	w11, #0x2a
  431734:	b.eq	431704 <feof@plt+0x2e624>  // b.none
  431738:	b	431708 <feof@plt+0x2e628>
  43173c:	ldr	w8, [x20, #1396]
  431740:	cbnz	w8, 43175c <feof@plt+0x2e67c>
  431744:	mov	w8, #0x100                 	// #256
  431748:	mov	w0, #0x1000                	// #4096
  43174c:	str	w8, [x20, #1396]
  431750:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  431754:	ldr	w8, [x20, #1396]
  431758:	str	x0, [x20, #1384]
  43175c:	ldr	w9, [x20, #1392]
  431760:	cmp	w9, w8
  431764:	b.ne	431780 <feof@plt+0x2e6a0>  // b.any
  431768:	ldr	x0, [x20, #1384]
  43176c:	lsl	w8, w8, #1
  431770:	sbfiz	x1, x8, #4, #32
  431774:	str	w8, [x20, #1396]
  431778:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43177c:	str	x0, [x20, #1384]
  431780:	ldrsw	x21, [x19, #8]
  431784:	add	x0, x21, #0x1
  431788:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43178c:	ldrsw	x8, [x20, #1392]
  431790:	ldr	x22, [x20, #1384]
  431794:	mov	x2, x21
  431798:	lsl	x24, x8, #4
  43179c:	str	x0, [x22, x24]
  4317a0:	ldr	x1, [x19, #16]
  4317a4:	bl	4029c0 <memcpy@plt>
  4317a8:	ldr	x8, [x22, x24]
  4317ac:	strb	wzr, [x8, x21]
  4317b0:	ldr	x8, [x20, #1384]
  4317b4:	ldrsw	x9, [x20, #1392]
  4317b8:	ldr	w10, [x19]
  4317bc:	add	x8, x8, x9, lsl #4
  4317c0:	add	w9, w9, #0x1
  4317c4:	str	w10, [x8, #8]
  4317c8:	str	w9, [x20, #1392]
  4317cc:	b	431524 <feof@plt+0x2e444>
  4317d0:	mov	w24, w25
  4317d4:	b	431678 <feof@plt+0x2e598>
  4317d8:	stp	x29, x30, [sp, #-48]!
  4317dc:	stp	x20, x19, [sp, #32]
  4317e0:	ldrb	w8, [x0, #16]
  4317e4:	str	x21, [sp, #16]
  4317e8:	mov	x29, sp
  4317ec:	cbz	w8, 431808 <feof@plt+0x2e728>
  4317f0:	mov	w19, wzr
  4317f4:	mov	w0, w19
  4317f8:	ldp	x20, x19, [sp, #32]
  4317fc:	ldr	x21, [sp, #16]
  431800:	ldp	x29, x30, [sp], #48
  431804:	ret
  431808:	ldr	x8, [x0]
  43180c:	mov	x20, x0
  431810:	ldrb	w9, [x8, #104]
  431814:	cbz	w9, 431880 <feof@plt+0x2e7a0>
  431818:	ldr	x10, [x8, #16]
  43181c:	ldr	x9, [x8, #32]
  431820:	cmp	x10, x9
  431824:	b.cc	431888 <feof@plt+0x2e7a8>  // b.lo, b.ul, b.last
  431828:	ldrb	w11, [x20, #25]
  43182c:	cbnz	w11, 4317f0 <feof@plt+0x2e710>
  431830:	ldrb	w21, [x8, #105]
  431834:	cmp	x10, x9
  431838:	b.ls	431850 <feof@plt+0x2e770>  // b.plast
  43183c:	ldr	x10, [x8, #24]
  431840:	cmp	x10, x9
  431844:	b.eq	431850 <feof@plt+0x2e770>  // b.none
  431848:	tbnz	w21, #1, 431850 <feof@plt+0x2e770>
  43184c:	str	x9, [x8, #16]
  431850:	mov	x0, x20
  431854:	bl	426b60 <feof@plt+0x23a80>
  431858:	ldr	x8, [x20]
  43185c:	cmp	x8, #0x0
  431860:	cset	w9, ne  // ne = any
  431864:	tst	w21, #0x4
  431868:	cset	w10, eq  // eq = none
  43186c:	and	w9, w10, w9
  431870:	and	w19, w19, w9
  431874:	tbnz	w21, #2, 4317f4 <feof@plt+0x2e714>
  431878:	cbnz	x8, 431810 <feof@plt+0x2e730>
  43187c:	b	4317f4 <feof@plt+0x2e714>
  431880:	mov	w19, #0x1                   	// #1
  431884:	b	4317f4 <feof@plt+0x2e714>
  431888:	mov	x0, x20
  43188c:	bl	42f144 <feof@plt+0x2c064>
  431890:	mov	w19, #0x1                   	// #1
  431894:	b	4317f4 <feof@plt+0x2e714>
  431898:	stp	x29, x30, [sp, #-80]!
  43189c:	stp	x24, x23, [sp, #32]
  4318a0:	stp	x22, x21, [sp, #48]
  4318a4:	stp	x20, x19, [sp, #64]
  4318a8:	ldr	x8, [x0]
  4318ac:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4318b0:	mov	x21, x2
  4318b4:	mov	x19, x1
  4318b8:	ldr	x22, [x8]
  4318bc:	mov	x20, x0
  4318c0:	add	x23, x23, #0xe98
  4318c4:	mov	w24, #0x204                 	// #516
  4318c8:	mov	x9, x22
  4318cc:	str	x25, [sp, #16]
  4318d0:	mov	x29, sp
  4318d4:	mov	x10, x9
  4318d8:	b	4318f0 <feof@plt+0x2e810>
  4318dc:	ldrb	w12, [x20, #1127]
  4318e0:	cbz	w12, 43195c <feof@plt+0x2e87c>
  4318e4:	str	w11, [x21]
  4318e8:	strb	wzr, [x21, #4]
  4318ec:	add	x10, x10, #0x1
  4318f0:	ldrb	w11, [x10]
  4318f4:	ldrh	w12, [x23, x11, lsl #1]
  4318f8:	cmp	x11, #0x2e
  4318fc:	and	w12, w12, w24
  431900:	b.eq	4318e4 <feof@plt+0x2e804>  // b.none
  431904:	cbnz	w12, 4318e4 <feof@plt+0x2e804>
  431908:	cmp	w11, #0x2d
  43190c:	b.eq	43192c <feof@plt+0x2e84c>  // b.none
  431910:	cmp	w11, #0x2b
  431914:	b.eq	43192c <feof@plt+0x2e84c>  // b.none
  431918:	cmp	w11, #0x27
  43191c:	b.ne	43195c <feof@plt+0x2e87c>  // b.any
  431920:	ldrb	w12, [x20, #1166]
  431924:	cbnz	w12, 4318e4 <feof@plt+0x2e804>
  431928:	b	43195c <feof@plt+0x2e87c>
  43192c:	ldurb	w12, [x10, #-1]
  431930:	cmp	w12, #0x64
  431934:	b.gt	43194c <feof@plt+0x2e86c>
  431938:	cmp	w12, #0x45
  43193c:	b.eq	4318e4 <feof@plt+0x2e804>  // b.none
  431940:	cmp	w12, #0x50
  431944:	b.eq	4318dc <feof@plt+0x2e7fc>  // b.none
  431948:	b	43195c <feof@plt+0x2e87c>
  43194c:	cmp	w12, #0x65
  431950:	b.eq	4318e4 <feof@plt+0x2e804>  // b.none
  431954:	cmp	w12, #0x70
  431958:	b.eq	4318dc <feof@plt+0x2e7fc>  // b.none
  43195c:	mov	x25, x10
  431960:	cmp	x10, x9
  431964:	b.ls	431980 <feof@plt+0x2e8a0>  // b.plast
  431968:	mov	x10, x25
  43196c:	ldrb	w11, [x10, #-1]!
  431970:	cmp	w11, #0x27
  431974:	b.ne	431980 <feof@plt+0x2e8a0>  // b.any
  431978:	ldrb	w11, [x20, #1166]
  43197c:	cbnz	w11, 43195c <feof@plt+0x2e87c>
  431980:	mov	x0, x20
  431984:	mov	w1, wzr
  431988:	mov	x2, x21
  43198c:	str	x25, [x8]
  431990:	bl	433140 <feof@plt+0x30060>
  431994:	tbz	w0, #0, 4319a4 <feof@plt+0x2e8c4>
  431998:	ldr	x8, [x20]
  43199c:	ldr	x9, [x8]
  4319a0:	b	4318d4 <feof@plt+0x2e7f4>
  4319a4:	sub	x21, x22, #0x1
  4319a8:	sub	w8, w25, w21
  4319ac:	add	w1, w8, #0x1
  4319b0:	mov	x0, x20
  4319b4:	str	w8, [x19]
  4319b8:	bl	4335d8 <feof@plt+0x304f8>
  4319bc:	ldr	w2, [x19]
  4319c0:	mov	x1, x21
  4319c4:	mov	x20, x0
  4319c8:	bl	4029c0 <memcpy@plt>
  4319cc:	ldr	w8, [x19]
  4319d0:	ldr	x25, [sp, #16]
  4319d4:	strb	wzr, [x20, x8]
  4319d8:	str	x20, [x19, #8]
  4319dc:	ldp	x20, x19, [sp, #64]
  4319e0:	ldp	x22, x21, [sp, #48]
  4319e4:	ldp	x24, x23, [sp, #32]
  4319e8:	ldp	x29, x30, [sp], #80
  4319ec:	ret
  4319f0:	stp	x29, x30, [sp, #-48]!
  4319f4:	stp	x22, x21, [sp, #16]
  4319f8:	stp	x20, x19, [sp, #32]
  4319fc:	ldr	w8, [x0, #1192]
  431a00:	ldr	w9, [x2, #8]
  431a04:	mov	x29, sp
  431a08:	cmp	w8, w9
  431a0c:	b.ge	431a1c <feof@plt+0x2e93c>  // b.tcont
  431a10:	ldrb	w8, [x0, #18]
  431a14:	mov	x19, x0
  431a18:	cbz	w8, 431a2c <feof@plt+0x2e94c>
  431a1c:	ldp	x20, x19, [sp, #32]
  431a20:	ldp	x22, x21, [sp, #16]
  431a24:	ldp	x29, x30, [sp], #48
  431a28:	ret
  431a2c:	ldrb	w8, [x1, #4]
  431a30:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  431a34:	add	x9, x9, #0x918
  431a38:	mov	x20, x2
  431a3c:	lsl	x8, x8, #4
  431a40:	ldr	w8, [x9, x8]
  431a44:	mov	x21, x1
  431a48:	cmp	w8, #0x1
  431a4c:	b.eq	431a60 <feof@plt+0x2e980>  // b.none
  431a50:	cmp	w8, #0x2
  431a54:	b.ne	431a74 <feof@plt+0x2e994>  // b.any
  431a58:	ldr	w8, [x21, #8]
  431a5c:	b	431a78 <feof@plt+0x2e998>
  431a60:	ldr	x8, [x21, #8]
  431a64:	ldr	w8, [x8, #8]
  431a68:	add	w8, w8, w8, lsl #2
  431a6c:	lsl	w8, w8, #1
  431a70:	b	431a78 <feof@plt+0x2e998>
  431a74:	mov	w8, #0x6                   	// #6
  431a78:	mov	w0, w8
  431a7c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  431a80:	mov	x22, x0
  431a84:	mov	x0, x19
  431a88:	mov	x1, x21
  431a8c:	mov	x2, x22
  431a90:	mov	w3, wzr
  431a94:	bl	4333ec <feof@plt+0x3030c>
  431a98:	ldr	w8, [x20, #8]
  431a9c:	ldr	w2, [x21]
  431aa0:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  431aa4:	adrp	x10, 470000 <_obstack_memory_used@@Base+0xe838>
  431aa8:	add	x9, x9, #0x22a
  431aac:	add	x10, x10, #0x214
  431ab0:	cmp	w8, #0x1
  431ab4:	sub	w5, w0, w22
  431ab8:	csel	x4, x10, x9, eq  // eq = none
  431abc:	mov	w1, #0x10                  	// #16
  431ac0:	mov	x0, x19
  431ac4:	mov	w3, wzr
  431ac8:	mov	x6, x22
  431acc:	bl	428e5c <feof@plt+0x25d7c>
  431ad0:	mov	x0, x22
  431ad4:	ldp	x20, x19, [sp, #32]
  431ad8:	ldp	x22, x21, [sp, #16]
  431adc:	ldp	x29, x30, [sp], #48
  431ae0:	b	402b20 <free@plt>
  431ae4:	sub	sp, sp, #0xf0
  431ae8:	stp	x29, x30, [sp, #144]
  431aec:	stp	x28, x27, [sp, #160]
  431af0:	stp	x26, x25, [sp, #176]
  431af4:	stp	x24, x23, [sp, #192]
  431af8:	stp	x22, x21, [sp, #208]
  431afc:	stp	x20, x19, [sp, #224]
  431b00:	mov	x8, x2
  431b04:	ldrb	w9, [x8], #1
  431b08:	mov	x26, x2
  431b0c:	mov	x21, x1
  431b10:	mov	x23, x0
  431b14:	cmp	w9, #0x4c
  431b18:	add	x29, sp, #0x90
  431b1c:	b.eq	431b38 <feof@plt+0x2ea58>  // b.none
  431b20:	cmp	w9, #0x75
  431b24:	b.eq	431b40 <feof@plt+0x2ea60>  // b.none
  431b28:	cmp	w9, #0x55
  431b2c:	mov	x12, x8
  431b30:	mov	w10, w9
  431b34:	b.ne	431b5c <feof@plt+0x2ea7c>  // b.any
  431b38:	ldrb	w10, [x26, #1]
  431b3c:	b	431b58 <feof@plt+0x2ea78>
  431b40:	ldrb	w10, [x26, #1]
  431b44:	cmp	w10, #0x38
  431b48:	b.ne	431b58 <feof@plt+0x2ea78>  // b.any
  431b4c:	ldrb	w10, [x26, #2]
  431b50:	add	x12, x26, #0x3
  431b54:	b	431b5c <feof@plt+0x2ea7c>
  431b58:	add	x12, x26, #0x2
  431b5c:	cmp	w10, #0x22
  431b60:	stur	x23, [x29, #-64]
  431b64:	b.eq	431bbc <feof@plt+0x2eadc>  // b.none
  431b68:	cmp	w10, #0x27
  431b6c:	b.eq	431bf4 <feof@plt+0x2eb14>  // b.none
  431b70:	cmp	w10, #0x52
  431b74:	b.ne	431c24 <feof@plt+0x2eb44>  // b.any
  431b78:	ldr	x10, [x23]
  431b7c:	cmp	w9, #0x4c
  431b80:	str	x21, [sp, #40]
  431b84:	ldr	x11, [x10, #48]
  431b88:	ldr	w10, [x10, #56]
  431b8c:	add	x20, x11, x10, lsl #4
  431b90:	b.eq	431c34 <feof@plt+0x2eb54>  // b.none
  431b94:	cmp	w9, #0x55
  431b98:	b.eq	431c3c <feof@plt+0x2eb5c>  // b.none
  431b9c:	cmp	w9, #0x75
  431ba0:	b.ne	431c44 <feof@plt+0x2eb64>  // b.any
  431ba4:	ldrb	w8, [x8]
  431ba8:	mov	w9, #0x40                  	// #64
  431bac:	cmp	w8, #0x38
  431bb0:	mov	w8, #0x42                  	// #66
  431bb4:	csel	w8, w8, w9, eq  // eq = none
  431bb8:	b	431c48 <feof@plt+0x2eb68>
  431bbc:	cmp	w9, #0x4c
  431bc0:	b.eq	4329f8 <feof@plt+0x2f918>  // b.none
  431bc4:	cmp	w9, #0x55
  431bc8:	b.eq	432a08 <feof@plt+0x2f928>  // b.none
  431bcc:	cmp	w9, #0x75
  431bd0:	b.ne	432a18 <feof@plt+0x2f938>  // b.any
  431bd4:	ldrb	w8, [x8]
  431bd8:	mov	w9, #0x40                  	// #64
  431bdc:	mov	w10, #0x42                  	// #66
  431be0:	mov	w24, #0x22                  	// #34
  431be4:	cmp	w8, #0x38
  431be8:	csel	w22, w10, w9, eq  // eq = none
  431bec:	mov	w8, wzr
  431bf0:	b	432a4c <feof@plt+0x2f96c>
  431bf4:	cmp	w9, #0x4c
  431bf8:	b.eq	432a28 <feof@plt+0x2f948>  // b.none
  431bfc:	cmp	w9, #0x55
  431c00:	b.eq	432a30 <feof@plt+0x2f950>  // b.none
  431c04:	cmp	w9, #0x75
  431c08:	b.ne	432a38 <feof@plt+0x2f958>  // b.any
  431c0c:	ldrb	w8, [x8]
  431c10:	mov	w9, #0x3a                  	// #58
  431c14:	mov	w10, #0x3c                  	// #60
  431c18:	cmp	w8, #0x38
  431c1c:	csel	w22, w10, w9, eq  // eq = none
  431c20:	b	432a3c <feof@plt+0x2f95c>
  431c24:	mov	w22, #0x44                  	// #68
  431c28:	mov	w24, #0x3e                  	// #62
  431c2c:	mov	w8, wzr
  431c30:	b	432a4c <feof@plt+0x2f96c>
  431c34:	mov	w8, #0x3f                  	// #63
  431c38:	b	431c48 <feof@plt+0x2eb68>
  431c3c:	mov	w8, #0x41                  	// #65
  431c40:	b	431c48 <feof@plt+0x2eb68>
  431c44:	mov	w8, #0x3e                  	// #62
  431c48:	str	w8, [sp, #36]
  431c4c:	mov	x25, xzr
  431c50:	mov	x22, xzr
  431c54:	mov	x19, xzr
  431c58:	mov	w8, wzr
  431c5c:	add	x27, x12, #0x1
  431c60:	add	x28, x23, #0x48
  431c64:	stur	xzr, [x29, #-48]
  431c68:	str	wzr, [sp, #60]
  431c6c:	str	xzr, [sp, #48]
  431c70:	stp	x27, x12, [sp, #8]
  431c74:	str	x26, [sp, #24]
  431c78:	stur	x28, [x29, #-56]
  431c7c:	ldr	x11, [sp, #48]
  431c80:	mov	w9, w8
  431c84:	mov	w8, w11
  431c88:	mov	x24, x27
  431c8c:	str	x11, [sp, #48]
  431c90:	str	x8, [sp, #64]
  431c94:	sub	x20, x20, #0x10
  431c98:	ldr	x8, [x20, #16]!
  431c9c:	cmp	x8, x24
  431ca0:	b.cc	431c98 <feof@plt+0x2ebb8>  // b.lo, b.ul, b.last
  431ca4:	stur	w9, [x29, #-68]
  431ca8:	b.eq	431cec <feof@plt+0x2ec0c>  // b.none
  431cac:	mov	x27, x24
  431cb0:	ldrb	w21, [x27], #1
  431cb4:	cmp	x19, #0x10
  431cb8:	b.ls	4324c0 <feof@plt+0x2f3e0>  // b.plast
  431cbc:	ldur	w8, [x29, #-68]
  431cc0:	cbnz	w8, 432548 <feof@plt+0x2f468>
  431cc4:	ldr	x8, [sp, #64]
  431cc8:	mov	w9, wzr
  431ccc:	mov	x24, x27
  431cd0:	cmp	x19, x8
  431cd4:	b.ls	431c94 <feof@plt+0x2ebb4>  // b.plast
  431cd8:	b	4324d4 <feof@plt+0x2f3f4>
  431cdc:	mov	x26, x24
  431ce0:	ldr	x8, [x20, #16]!
  431ce4:	cmp	x8, x24
  431ce8:	b.ne	431cac <feof@plt+0x2ebcc>  // b.any
  431cec:	ldr	w21, [x20, #8]
  431cf0:	cbz	w21, 431ce0 <feof@plt+0x2ec00>
  431cf4:	cmp	w21, #0x5c
  431cf8:	b.eq	431d04 <feof@plt+0x2ec24>  // b.none
  431cfc:	cmp	w21, #0x20
  431d00:	b.ne	431d50 <feof@plt+0x2ec70>  // b.any
  431d04:	sub	x21, x24, x26
  431d08:	cbz	x25, 431db8 <feof@plt+0x2ecd8>
  431d0c:	ldp	x0, x8, [x22, #16]
  431d10:	sub	x28, x8, x0
  431d14:	subs	x27, x21, x28
  431d18:	b.ls	431e30 <feof@plt+0x2ed50>  // b.plast
  431d1c:	mov	x1, x26
  431d20:	mov	x2, x28
  431d24:	bl	4029c0 <memcpy@plt>
  431d28:	ldr	x8, [x22, #16]
  431d2c:	mov	x0, x23
  431d30:	mov	x1, x22
  431d34:	mov	x2, x27
  431d38:	add	x8, x8, x28
  431d3c:	str	x8, [x22, #16]
  431d40:	add	x26, x26, x28
  431d44:	bl	433ee4 <feof@plt+0x30e04>
  431d48:	mov	x22, x0
  431d4c:	b	431e34 <feof@plt+0x2ed54>
  431d50:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  431d54:	add	x8, x8, #0x998
  431d58:	ldrb	w8, [x8, x21]
  431d5c:	cbz	w8, 432eb8 <feof@plt+0x2fdd8>
  431d60:	str	wzr, [x20, #8]
  431d64:	ldrb	w8, [x23, #1125]
  431d68:	cbz	w8, 431ce0 <feof@plt+0x2ec00>
  431d6c:	sub	x23, x24, x26
  431d70:	cbz	x25, 431f98 <feof@plt+0x2eeb8>
  431d74:	ldp	x0, x8, [x22, #16]
  431d78:	sub	x28, x8, x0
  431d7c:	subs	x27, x23, x28
  431d80:	b.ls	432010 <feof@plt+0x2ef30>  // b.plast
  431d84:	mov	x1, x26
  431d88:	mov	x2, x28
  431d8c:	bl	4029c0 <memcpy@plt>
  431d90:	ldr	x8, [x22, #16]
  431d94:	ldur	x0, [x29, #-64]
  431d98:	mov	x1, x22
  431d9c:	mov	x2, x27
  431da0:	add	x8, x8, x28
  431da4:	str	x8, [x22, #16]
  431da8:	add	x26, x26, x28
  431dac:	bl	433ee4 <feof@plt+0x30e04>
  431db0:	mov	x22, x0
  431db4:	b	432014 <feof@plt+0x2ef34>
  431db8:	ldr	x25, [x28]
  431dbc:	cbz	x25, 431e3c <feof@plt+0x2ed5c>
  431dc0:	ldr	x8, [x25, #24]
  431dc4:	ldr	x9, [x25, #8]
  431dc8:	add	x10, x21, x21, lsl #1
  431dcc:	sub	x8, x8, x9
  431dd0:	mov	w9, #0x1f40                	// #8000
  431dd4:	cmp	x8, x21
  431dd8:	add	x9, x9, x10, lsr #1
  431ddc:	b.cc	431df0 <feof@plt+0x2ed10>  // b.lo, b.ul, b.last
  431de0:	cmp	x8, x9
  431de4:	b.hi	431df0 <feof@plt+0x2ed10>  // b.pmore
  431de8:	mov	x8, x28
  431dec:	b	431e18 <feof@plt+0x2ed38>
  431df0:	mov	x8, x25
  431df4:	ldr	x25, [x25]
  431df8:	cbz	x25, 431e3c <feof@plt+0x2ed5c>
  431dfc:	ldr	x10, [x25, #24]
  431e00:	ldr	x11, [x25, #8]
  431e04:	sub	x10, x10, x11
  431e08:	cmp	x10, x21
  431e0c:	b.cc	431df0 <feof@plt+0x2ed10>  // b.lo, b.ul, b.last
  431e10:	cmp	x10, x9
  431e14:	b.hi	431df0 <feof@plt+0x2ed10>  // b.pmore
  431e18:	ldr	x9, [x25]
  431e1c:	str	x9, [x8]
  431e20:	ldr	x8, [x25, #8]
  431e24:	str	xzr, [x25]
  431e28:	str	x8, [x25, #16]
  431e2c:	b	431e64 <feof@plt+0x2ed84>
  431e30:	mov	x27, x21
  431e34:	ldur	x28, [x29, #-56]
  431e38:	b	431e6c <feof@plt+0x2ed8c>
  431e3c:	mov	w8, #0x1f40                	// #8000
  431e40:	cmp	x21, x8
  431e44:	csel	x8, x21, x8, hi  // hi = pmore
  431e48:	add	x8, x8, #0x7
  431e4c:	and	x22, x8, #0xfffffffffffffff8
  431e50:	add	x0, x22, #0x20
  431e54:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  431e58:	add	x25, x0, x22
  431e5c:	stp	x0, x25, [x25, #16]
  431e60:	stp	xzr, x0, [x25]
  431e64:	mov	x27, x21
  431e68:	mov	x22, x25
  431e6c:	ldr	x0, [x22, #16]
  431e70:	mov	x1, x26
  431e74:	mov	x2, x27
  431e78:	bl	4029c0 <memcpy@plt>
  431e7c:	ldr	x8, [x22, #16]
  431e80:	add	x8, x8, x27
  431e84:	str	x8, [x22, #16]
  431e88:	cbz	x25, 431eb8 <feof@plt+0x2edd8>
  431e8c:	ldr	x9, [x22, #24]
  431e90:	ldur	x26, [x29, #-48]
  431e94:	cmp	x9, x8
  431e98:	b.ne	431f4c <feof@plt+0x2ee6c>  // b.any
  431e9c:	mov	w2, #0x1                   	// #1
  431ea0:	mov	x0, x23
  431ea4:	mov	x1, x22
  431ea8:	str	x8, [x22, #16]
  431eac:	bl	433ee4 <feof@plt+0x30e04>
  431eb0:	mov	x22, x0
  431eb4:	b	431f4c <feof@plt+0x2ee6c>
  431eb8:	ldr	x25, [x28]
  431ebc:	ldur	x26, [x29, #-48]
  431ec0:	mov	w11, #0x1f41                	// #8001
  431ec4:	cbz	x25, 431f08 <feof@plt+0x2ee28>
  431ec8:	ldr	x8, [x25, #8]
  431ecc:	ldr	x9, [x25, #24]
  431ed0:	mvn	x8, x8
  431ed4:	add	x8, x9, x8
  431ed8:	cmp	x8, x11
  431edc:	b.cc	431f30 <feof@plt+0x2ee50>  // b.lo, b.ul, b.last
  431ee0:	mov	x8, x25
  431ee4:	ldr	x25, [x25]
  431ee8:	cbz	x25, 431f08 <feof@plt+0x2ee28>
  431eec:	ldr	x9, [x25, #8]
  431ef0:	ldr	x10, [x25, #24]
  431ef4:	mvn	x9, x9
  431ef8:	add	x9, x10, x9
  431efc:	cmp	x9, x11
  431f00:	b.cs	431ee0 <feof@plt+0x2ee00>  // b.hs, b.nlast
  431f04:	b	431f34 <feof@plt+0x2ee54>
  431f08:	mov	w0, #0x1f60                	// #8032
  431f0c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  431f10:	mov	w8, #0x1f40                	// #8000
  431f14:	add	x25, x0, x8
  431f18:	str	x0, [x0, #8008]
  431f1c:	str	x0, [x0, #8016]
  431f20:	str	x25, [x0, #8024]
  431f24:	str	xzr, [x0, #8000]
  431f28:	mov	x22, x25
  431f2c:	b	431f4c <feof@plt+0x2ee6c>
  431f30:	mov	x8, x28
  431f34:	ldr	x9, [x25]
  431f38:	mov	x22, x25
  431f3c:	str	x9, [x8]
  431f40:	ldr	x8, [x25, #8]
  431f44:	str	xzr, [x25]
  431f48:	str	x8, [x25, #16]
  431f4c:	ldr	x8, [x22, #16]
  431f50:	mov	w9, #0x5c                  	// #92
  431f54:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x2838>
  431f58:	add	x10, x10, #0x721
  431f5c:	strb	w9, [x8]
  431f60:	ldr	x8, [x22, #16]
  431f64:	add	x9, x21, x26
  431f68:	cmp	x24, x10
  431f6c:	add	x21, x9, #0x1
  431f70:	add	x8, x8, #0x1
  431f74:	str	x8, [x22, #16]
  431f78:	b.eq	432254 <feof@plt+0x2f174>  // b.none
  431f7c:	cmp	x19, #0x10
  431f80:	b.hi	432254 <feof@plt+0x2f174>  // b.pmore
  431f84:	mov	w8, #0x5c                  	// #92
  431f88:	sub	x9, x29, #0x28
  431f8c:	strb	w8, [x9, x19]
  431f90:	add	x19, x19, #0x1
  431f94:	b	432254 <feof@plt+0x2f174>
  431f98:	ldr	x25, [x28]
  431f9c:	cbz	x25, 43201c <feof@plt+0x2ef3c>
  431fa0:	ldr	x8, [x25, #24]
  431fa4:	ldr	x9, [x25, #8]
  431fa8:	add	x10, x23, x23, lsl #1
  431fac:	sub	x8, x8, x9
  431fb0:	mov	w9, #0x1f40                	// #8000
  431fb4:	cmp	x8, x23
  431fb8:	add	x9, x9, x10, lsr #1
  431fbc:	b.cc	431fd0 <feof@plt+0x2eef0>  // b.lo, b.ul, b.last
  431fc0:	cmp	x8, x9
  431fc4:	b.hi	431fd0 <feof@plt+0x2eef0>  // b.pmore
  431fc8:	mov	x8, x28
  431fcc:	b	431ff8 <feof@plt+0x2ef18>
  431fd0:	mov	x8, x25
  431fd4:	ldr	x25, [x25]
  431fd8:	cbz	x25, 43201c <feof@plt+0x2ef3c>
  431fdc:	ldr	x10, [x25, #24]
  431fe0:	ldr	x11, [x25, #8]
  431fe4:	sub	x10, x10, x11
  431fe8:	cmp	x10, x23
  431fec:	b.cc	431fd0 <feof@plt+0x2eef0>  // b.lo, b.ul, b.last
  431ff0:	cmp	x10, x9
  431ff4:	b.hi	431fd0 <feof@plt+0x2eef0>  // b.pmore
  431ff8:	ldr	x9, [x25]
  431ffc:	str	x9, [x8]
  432000:	ldr	x8, [x25, #8]
  432004:	str	xzr, [x25]
  432008:	str	x8, [x25, #16]
  43200c:	b	432044 <feof@plt+0x2ef64>
  432010:	mov	x27, x23
  432014:	ldur	x28, [x29, #-56]
  432018:	b	43204c <feof@plt+0x2ef6c>
  43201c:	mov	w8, #0x1f40                	// #8000
  432020:	cmp	x23, x8
  432024:	csel	x8, x23, x8, hi  // hi = pmore
  432028:	add	x8, x8, #0x7
  43202c:	and	x22, x8, #0xfffffffffffffff8
  432030:	add	x0, x22, #0x20
  432034:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  432038:	add	x25, x0, x22
  43203c:	stp	x0, x25, [x25, #16]
  432040:	stp	xzr, x0, [x25]
  432044:	mov	x27, x23
  432048:	mov	x22, x25
  43204c:	ldr	x0, [x22, #16]
  432050:	mov	x1, x26
  432054:	mov	x2, x27
  432058:	bl	4029c0 <memcpy@plt>
  43205c:	ldr	x8, [x22, #16]
  432060:	add	x0, x8, x27
  432064:	str	x0, [x22, #16]
  432068:	cbz	x25, 4320c0 <feof@plt+0x2efe0>
  43206c:	ldr	x8, [x22, #24]
  432070:	sub	x26, x8, x0
  432074:	cmp	x26, #0x1
  432078:	b.hi	432110 <feof@plt+0x2f030>  // b.pmore
  43207c:	adrp	x27, 464000 <_obstack_memory_used@@Base+0x2838>
  432080:	add	x27, x27, #0x6a4
  432084:	mov	x1, x27
  432088:	mov	x2, x26
  43208c:	bl	4029c0 <memcpy@plt>
  432090:	ldr	x8, [x22, #16]
  432094:	ldur	x0, [x29, #-64]
  432098:	add	x28, x27, x26
  43209c:	mov	x1, x22
  4320a0:	add	x8, x8, x26
  4320a4:	str	x8, [x22, #16]
  4320a8:	mov	w8, #0x2                   	// #2
  4320ac:	sub	x26, x8, x26
  4320b0:	mov	x2, x26
  4320b4:	bl	433ee4 <feof@plt+0x30e04>
  4320b8:	mov	x22, x0
  4320bc:	b	432168 <feof@plt+0x2f088>
  4320c0:	ldr	x25, [x28]
  4320c4:	cbz	x25, 432118 <feof@plt+0x2f038>
  4320c8:	ldr	x8, [x25, #24]
  4320cc:	ldr	x9, [x25, #8]
  4320d0:	sub	x8, x8, x9
  4320d4:	sub	x8, x8, #0x2
  4320d8:	lsr	x8, x8, #1
  4320dc:	cmp	x8, #0xfa1
  4320e0:	b.cc	43213c <feof@plt+0x2f05c>  // b.lo, b.ul, b.last
  4320e4:	mov	x8, x25
  4320e8:	ldr	x25, [x25]
  4320ec:	cbz	x25, 432118 <feof@plt+0x2f038>
  4320f0:	ldr	x9, [x25, #24]
  4320f4:	ldr	x10, [x25, #8]
  4320f8:	sub	x9, x9, x10
  4320fc:	sub	x9, x9, #0x2
  432100:	lsr	x9, x9, #1
  432104:	cmp	x9, #0xfa1
  432108:	b.cs	4320e4 <feof@plt+0x2f004>  // b.hs, b.nlast
  43210c:	b	432140 <feof@plt+0x2f060>
  432110:	mov	w26, #0x2                   	// #2
  432114:	b	43215c <feof@plt+0x2f07c>
  432118:	mov	w0, #0x1f60                	// #8032
  43211c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  432120:	mov	w8, #0x1f40                	// #8000
  432124:	add	x25, x0, x8
  432128:	str	x0, [x0, #8008]
  43212c:	str	x0, [x0, #8016]
  432130:	str	xzr, [x0, #8000]
  432134:	str	x25, [x0, #8024]
  432138:	b	432154 <feof@plt+0x2f074>
  43213c:	mov	x8, x28
  432140:	ldr	x9, [x25]
  432144:	str	x9, [x8]
  432148:	ldr	x8, [x25, #8]
  43214c:	str	xzr, [x25]
  432150:	str	x8, [x25, #16]
  432154:	mov	w26, #0x2                   	// #2
  432158:	mov	x22, x25
  43215c:	adrp	x27, 464000 <_obstack_memory_used@@Base+0x2838>
  432160:	add	x27, x27, #0x6a4
  432164:	mov	x28, x27
  432168:	ldr	x0, [x22, #16]
  43216c:	mov	x1, x28
  432170:	mov	x2, x26
  432174:	bl	4029c0 <memcpy@plt>
  432178:	ldr	x8, [x22, #16]
  43217c:	cmp	x24, x27
  432180:	add	x8, x8, x26
  432184:	str	x8, [x22, #16]
  432188:	b.eq	4321ac <feof@plt+0x2f0cc>  // b.none
  43218c:	ldp	x28, x10, [x29, #-56]
  432190:	cmp	x19, #0x10
  432194:	b.hi	4321b0 <feof@plt+0x2f0d0>  // b.pmore
  432198:	sub	x8, x29, #0x28
  43219c:	mov	w9, #0x3f3f                	// #16191
  4321a0:	strh	w9, [x8, x19]
  4321a4:	add	x19, x19, #0x2
  4321a8:	b	4321b0 <feof@plt+0x2f0d0>
  4321ac:	ldp	x28, x10, [x29, #-56]
  4321b0:	and	w8, w21, #0xff
  4321b4:	cmp	w8, #0x2f
  4321b8:	add	x23, x10, x23
  4321bc:	b.ne	432460 <feof@plt+0x2f380>  // b.any
  4321c0:	ldr	x8, [x20, #16]
  4321c4:	cmp	x8, x24
  4321c8:	b.ne	432460 <feof@plt+0x2f380>  // b.any
  4321cc:	ldr	w8, [x20, #24]
  4321d0:	cmp	w8, #0x20
  4321d4:	b.eq	4321e0 <feof@plt+0x2f100>  // b.none
  4321d8:	cmp	w8, #0x5c
  4321dc:	b.ne	432ed0 <feof@plt+0x2fdf0>  // b.any
  4321e0:	ldp	x8, x9, [x22, #16]
  4321e4:	cmp	x9, x8
  4321e8:	b.ne	432204 <feof@plt+0x2f124>  // b.any
  4321ec:	ldur	x0, [x29, #-64]
  4321f0:	mov	w2, #0x1                   	// #1
  4321f4:	mov	x1, x22
  4321f8:	bl	433ee4 <feof@plt+0x30e04>
  4321fc:	ldr	x8, [x0, #16]
  432200:	mov	x22, x0
  432204:	mov	w9, #0x2f                  	// #47
  432208:	strb	w9, [x8]
  43220c:	ldr	x8, [x22, #16]
  432210:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  432214:	add	x9, x9, #0x693
  432218:	cmp	x24, x9
  43221c:	add	x8, x8, #0x1
  432220:	add	x21, x23, #0x3
  432224:	str	x8, [x22, #16]
  432228:	b.eq	43224c <feof@plt+0x2f16c>  // b.none
  43222c:	ldur	x23, [x29, #-64]
  432230:	cmp	x19, #0x10
  432234:	b.hi	432250 <feof@plt+0x2f170>  // b.pmore
  432238:	sub	x8, x29, #0x28
  43223c:	mov	w9, #0x2f                  	// #47
  432240:	strb	w9, [x8, x19]
  432244:	add	x19, x19, #0x1
  432248:	b	432250 <feof@plt+0x2f170>
  43224c:	ldur	x23, [x29, #-64]
  432250:	add	x20, x20, #0x10
  432254:	ldr	w8, [x20, #8]
  432258:	cmp	w8, #0x20
  43225c:	b.ne	43235c <feof@plt+0x2f27c>  // b.any
  432260:	cbz	x25, 432288 <feof@plt+0x2f1a8>
  432264:	ldp	x9, x8, [x22, #16]
  432268:	cmp	x8, x9
  43226c:	b.ne	432318 <feof@plt+0x2f238>  // b.any
  432270:	mov	w2, #0x1                   	// #1
  432274:	mov	x0, x23
  432278:	mov	x1, x22
  43227c:	bl	433ee4 <feof@plt+0x30e04>
  432280:	mov	x22, x0
  432284:	b	432318 <feof@plt+0x2f238>
  432288:	ldr	x25, [x28]
  43228c:	mov	w11, #0x1f41                	// #8001
  432290:	cbz	x25, 4322d4 <feof@plt+0x2f1f4>
  432294:	ldr	x8, [x25, #8]
  432298:	ldr	x9, [x25, #24]
  43229c:	mvn	x8, x8
  4322a0:	add	x8, x9, x8
  4322a4:	cmp	x8, x11
  4322a8:	b.cc	4322fc <feof@plt+0x2f21c>  // b.lo, b.ul, b.last
  4322ac:	mov	x8, x25
  4322b0:	ldr	x25, [x25]
  4322b4:	cbz	x25, 4322d4 <feof@plt+0x2f1f4>
  4322b8:	ldr	x9, [x25, #8]
  4322bc:	ldr	x10, [x25, #24]
  4322c0:	mvn	x9, x9
  4322c4:	add	x9, x10, x9
  4322c8:	cmp	x9, x11
  4322cc:	b.cs	4322ac <feof@plt+0x2f1cc>  // b.hs, b.nlast
  4322d0:	b	432300 <feof@plt+0x2f220>
  4322d4:	mov	w0, #0x1f60                	// #8032
  4322d8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4322dc:	mov	w8, #0x1f40                	// #8000
  4322e0:	add	x25, x0, x8
  4322e4:	str	x0, [x0, #8008]
  4322e8:	str	x0, [x0, #8016]
  4322ec:	str	x25, [x0, #8024]
  4322f0:	str	xzr, [x0, #8000]
  4322f4:	mov	x22, x25
  4322f8:	b	432318 <feof@plt+0x2f238>
  4322fc:	mov	x8, x28
  432300:	ldr	x9, [x25]
  432304:	mov	x22, x25
  432308:	str	x9, [x8]
  43230c:	ldr	x8, [x25, #8]
  432310:	str	xzr, [x25]
  432314:	str	x8, [x25, #16]
  432318:	ldr	x8, [x22, #16]
  43231c:	mov	w9, #0x20                  	// #32
  432320:	add	x21, x21, #0x1
  432324:	strb	w9, [x8]
  432328:	ldr	x8, [x22, #16]
  43232c:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  432330:	add	x9, x9, #0x143
  432334:	cmp	x24, x9
  432338:	add	x8, x8, #0x1
  43233c:	str	x8, [x22, #16]
  432340:	b.eq	43235c <feof@plt+0x2f27c>  // b.none
  432344:	cmp	x19, #0x10
  432348:	b.hi	43235c <feof@plt+0x2f27c>  // b.pmore
  43234c:	sub	x8, x29, #0x28
  432350:	mov	w9, #0x20                  	// #32
  432354:	strb	w9, [x8, x19]
  432358:	add	x19, x19, #0x1
  43235c:	cbz	x25, 432384 <feof@plt+0x2f2a4>
  432360:	ldp	x9, x8, [x22, #16]
  432364:	cmp	x8, x9
  432368:	b.ne	432414 <feof@plt+0x2f334>  // b.any
  43236c:	mov	w2, #0x1                   	// #1
  432370:	mov	x0, x23
  432374:	mov	x1, x22
  432378:	bl	433ee4 <feof@plt+0x30e04>
  43237c:	mov	x22, x0
  432380:	b	432414 <feof@plt+0x2f334>
  432384:	ldr	x25, [x28]
  432388:	mov	w11, #0x1f41                	// #8001
  43238c:	cbz	x25, 4323d0 <feof@plt+0x2f2f0>
  432390:	ldr	x8, [x25, #8]
  432394:	ldr	x9, [x25, #24]
  432398:	mvn	x8, x8
  43239c:	add	x8, x9, x8
  4323a0:	cmp	x8, x11
  4323a4:	b.cc	4323f8 <feof@plt+0x2f318>  // b.lo, b.ul, b.last
  4323a8:	mov	x8, x25
  4323ac:	ldr	x25, [x25]
  4323b0:	cbz	x25, 4323d0 <feof@plt+0x2f2f0>
  4323b4:	ldr	x9, [x25, #8]
  4323b8:	ldr	x10, [x25, #24]
  4323bc:	mvn	x9, x9
  4323c0:	add	x9, x10, x9
  4323c4:	cmp	x9, x11
  4323c8:	b.cs	4323a8 <feof@plt+0x2f2c8>  // b.hs, b.nlast
  4323cc:	b	4323fc <feof@plt+0x2f31c>
  4323d0:	mov	w0, #0x1f60                	// #8032
  4323d4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4323d8:	mov	w8, #0x1f40                	// #8000
  4323dc:	add	x25, x0, x8
  4323e0:	str	x0, [x0, #8008]
  4323e4:	str	x0, [x0, #8016]
  4323e8:	str	x25, [x0, #8024]
  4323ec:	str	xzr, [x0, #8000]
  4323f0:	mov	x22, x25
  4323f4:	b	432414 <feof@plt+0x2f334>
  4323f8:	mov	x8, x28
  4323fc:	ldr	x9, [x25]
  432400:	mov	x22, x25
  432404:	str	x9, [x8]
  432408:	ldr	x8, [x25, #8]
  43240c:	str	xzr, [x25]
  432410:	str	x8, [x25, #16]
  432414:	ldr	x8, [x22, #16]
  432418:	mov	w9, #0xa                   	// #10
  43241c:	strb	w9, [x8]
  432420:	ldr	x8, [x22, #16]
  432424:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x838>
  432428:	add	x9, x9, #0xbb4
  43242c:	cmp	x24, x9
  432430:	add	x8, x8, #0x1
  432434:	str	x8, [x22, #16]
  432438:	add	x8, x21, #0x1
  43243c:	stur	x8, [x29, #-48]
  432440:	b.eq	431cdc <feof@plt+0x2ebfc>  // b.none
  432444:	cmp	x19, #0x10
  432448:	b.hi	431cdc <feof@plt+0x2ebfc>  // b.pmore
  43244c:	sub	x8, x29, #0x28
  432450:	mov	w9, #0xa                   	// #10
  432454:	strb	w9, [x8, x19]
  432458:	add	x19, x19, #0x1
  43245c:	b	431cdc <feof@plt+0x2ebfc>
  432460:	ldp	x8, x9, [x22, #16]
  432464:	add	x27, x24, #0x1
  432468:	cmp	x9, x8
  43246c:	b.ne	432488 <feof@plt+0x2f3a8>  // b.any
  432470:	ldur	x0, [x29, #-64]
  432474:	mov	w2, #0x1                   	// #1
  432478:	mov	x1, x22
  43247c:	bl	433ee4 <feof@plt+0x30e04>
  432480:	ldr	x8, [x0, #16]
  432484:	mov	x22, x0
  432488:	strb	w21, [x8]
  43248c:	ldr	x8, [x22, #16]
  432490:	cmp	x19, #0x10
  432494:	add	x8, x8, #0x1
  432498:	str	x8, [x22, #16]
  43249c:	add	x8, x23, #0x3
  4324a0:	stur	x8, [x29, #-48]
  4324a4:	b.hi	4324b4 <feof@plt+0x2f3d4>  // b.pmore
  4324a8:	sub	x8, x29, #0x28
  4324ac:	strb	w21, [x8, x19]
  4324b0:	add	x19, x19, #0x1
  4324b4:	ldur	x23, [x29, #-64]
  4324b8:	mov	x26, x27
  4324bc:	b	431cbc <feof@plt+0x2ebdc>
  4324c0:	add	x8, x19, #0x1
  4324c4:	sub	x9, x29, #0x28
  4324c8:	strb	w21, [x9, x19]
  4324cc:	mov	x19, x8
  4324d0:	b	431cbc <feof@plt+0x2ebdc>
  4324d4:	ldr	x11, [sp, #64]
  4324d8:	adrp	x13, 46f000 <_obstack_memory_used@@Base+0xd838>
  4324dc:	sub	x12, x29, #0x14
  4324e0:	add	x13, x13, #0x86c
  4324e4:	sub	x8, x29, #0x28
  4324e8:	ldrb	w5, [x8, x11]
  4324ec:	sub	w8, w5, #0x21
  4324f0:	cmp	w8, #0x5d
  4324f4:	strb	w5, [x12, x11]
  4324f8:	b.hi	43252c <feof@plt+0x2f44c>  // b.pmore
  4324fc:	adr	x9, 43250c <feof@plt+0x2f42c>
  432500:	ldrb	w10, [x13, x8]
  432504:	add	x9, x9, x10, lsl #2
  432508:	br	x9
  43250c:	cmp	x11, #0xf
  432510:	b.hi	43252c <feof@plt+0x2f44c>  // b.pmore
  432514:	add	x11, x11, #0x1
  432518:	cmp	x19, x11
  43251c:	b.ne	4324e4 <feof@plt+0x2f404>  // b.any
  432520:	mov	w9, wzr
  432524:	mov	x11, x19
  432528:	b	431c84 <feof@plt+0x2eba4>
  43252c:	cmp	w5, #0x28
  432530:	b.ne	432d64 <feof@plt+0x2fc84>  // b.any
  432534:	mov	w8, #0x22                  	// #34
  432538:	strb	w8, [x12, x11]
  43253c:	mov	w9, #0x1                   	// #1
  432540:	mov	w19, #0x11                  	// #17
  432544:	b	431c84 <feof@plt+0x2eba4>
  432548:	cmp	w8, #0x2
  43254c:	b.ne	43259c <feof@plt+0x2f4bc>  // b.any
  432550:	ldr	x8, [sp, #48]
  432554:	ldr	w9, [sp, #60]
  432558:	cmp	w9, w8
  43255c:	mov	w8, w9
  432560:	b.hi	432868 <feof@plt+0x2f788>  // b.pmore
  432564:	str	w8, [sp, #60]
  432568:	mov	w8, w8
  43256c:	cmp	x19, x8
  432570:	b.ls	4325a4 <feof@plt+0x2f4c4>  // b.plast
  432574:	sub	x9, x29, #0x28
  432578:	sub	x10, x29, #0x14
  43257c:	ldrb	w9, [x9, x8]
  432580:	ldrb	w8, [x10, x8]
  432584:	cmp	w9, w8
  432588:	b.ne	4325a4 <feof@plt+0x2f4c4>  // b.any
  43258c:	ldr	w9, [sp, #60]
  432590:	ldr	x8, [sp, #48]
  432594:	add	w9, w9, #0x1
  432598:	b	432558 <feof@plt+0x2f478>
  43259c:	mov	x10, x19
  4325a0:	b	4325c0 <feof@plt+0x2f4e0>
  4325a4:	mov	w8, #0x1                   	// #1
  4325a8:	stur	w8, [x29, #-68]
  4325ac:	ldr	w8, [sp, #60]
  4325b0:	cmp	x19, w8, uxtw
  4325b4:	mov	w8, #0x2                   	// #2
  4325b8:	b.eq	431c7c <feof@plt+0x2eb9c>  // b.none
  4325bc:	mov	w10, #0x11                  	// #17
  4325c0:	ldr	w11, [sp, #60]
  4325c4:	and	w9, w21, #0xff
  4325c8:	mov	x19, xzr
  4325cc:	cmp	w9, #0x29
  4325d0:	mov	w8, #0x2                   	// #2
  4325d4:	str	wzr, [sp, #60]
  4325d8:	b.eq	431c7c <feof@plt+0x2eb9c>  // b.none
  4325dc:	ldur	w8, [x29, #-68]
  4325e0:	cmp	w9, #0xa
  4325e4:	mov	x19, x10
  4325e8:	str	w11, [sp, #60]
  4325ec:	b.ne	431c7c <feof@plt+0x2eb9c>  // b.any
  4325f0:	ldrb	w8, [x23, #16]
  4325f4:	cbnz	w8, 432e08 <feof@plt+0x2fd28>
  4325f8:	ldrb	w8, [x23, #25]
  4325fc:	cbz	w8, 432614 <feof@plt+0x2f534>
  432600:	ldr	x8, [x23]
  432604:	ldr	x9, [x8, #16]
  432608:	ldr	x8, [x8, #32]
  43260c:	cmp	x9, x8
  432610:	b.cs	432e08 <feof@plt+0x2fd28>  // b.hs, b.nlast
  432614:	sub	x19, x27, x26
  432618:	str	w11, [sp, #60]
  43261c:	str	x10, [sp, #64]
  432620:	cbz	x25, 43266c <feof@plt+0x2f58c>
  432624:	ldp	x0, x8, [x22, #16]
  432628:	ldur	w21, [x29, #-68]
  43262c:	sub	x28, x8, x0
  432630:	subs	x27, x19, x28
  432634:	b.ls	4326e8 <feof@plt+0x2f608>  // b.plast
  432638:	mov	x1, x26
  43263c:	mov	x2, x28
  432640:	bl	4029c0 <memcpy@plt>
  432644:	ldr	x8, [x22, #16]
  432648:	mov	x0, x23
  43264c:	mov	x1, x22
  432650:	mov	x2, x27
  432654:	add	x8, x8, x28
  432658:	str	x8, [x22, #16]
  43265c:	add	x26, x26, x28
  432660:	bl	433ee4 <feof@plt+0x30e04>
  432664:	mov	x22, x0
  432668:	b	4326ec <feof@plt+0x2f60c>
  43266c:	ldr	x25, [x28]
  432670:	ldur	w21, [x29, #-68]
  432674:	cbz	x25, 4326f4 <feof@plt+0x2f614>
  432678:	ldr	x8, [x25, #24]
  43267c:	ldr	x9, [x25, #8]
  432680:	add	x10, x19, x19, lsl #1
  432684:	sub	x8, x8, x9
  432688:	mov	w9, #0x1f40                	// #8000
  43268c:	cmp	x8, x19
  432690:	add	x9, x9, x10, lsr #1
  432694:	b.cc	4326a8 <feof@plt+0x2f5c8>  // b.lo, b.ul, b.last
  432698:	cmp	x8, x9
  43269c:	b.hi	4326a8 <feof@plt+0x2f5c8>  // b.pmore
  4326a0:	mov	x8, x28
  4326a4:	b	4326d0 <feof@plt+0x2f5f0>
  4326a8:	mov	x8, x25
  4326ac:	ldr	x25, [x25]
  4326b0:	cbz	x25, 4326f4 <feof@plt+0x2f614>
  4326b4:	ldr	x10, [x25, #24]
  4326b8:	ldr	x11, [x25, #8]
  4326bc:	sub	x10, x10, x11
  4326c0:	cmp	x10, x19
  4326c4:	b.cc	4326a8 <feof@plt+0x2f5c8>  // b.lo, b.ul, b.last
  4326c8:	cmp	x10, x9
  4326cc:	b.hi	4326a8 <feof@plt+0x2f5c8>  // b.pmore
  4326d0:	ldr	x9, [x25]
  4326d4:	str	x9, [x8]
  4326d8:	ldr	x8, [x25, #8]
  4326dc:	str	xzr, [x25]
  4326e0:	str	x8, [x25, #16]
  4326e4:	b	43271c <feof@plt+0x2f63c>
  4326e8:	mov	x27, x19
  4326ec:	ldur	x28, [x29, #-56]
  4326f0:	b	432724 <feof@plt+0x2f644>
  4326f4:	mov	w8, #0x1f40                	// #8000
  4326f8:	cmp	x19, x8
  4326fc:	csel	x8, x19, x8, hi  // hi = pmore
  432700:	add	x8, x8, #0x7
  432704:	and	x20, x8, #0xfffffffffffffff8
  432708:	add	x0, x20, #0x20
  43270c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  432710:	add	x25, x0, x20
  432714:	stp	x0, x25, [x25, #16]
  432718:	stp	xzr, x0, [x25]
  43271c:	mov	x27, x19
  432720:	mov	x22, x25
  432724:	ldr	x0, [x22, #16]
  432728:	mov	x1, x26
  43272c:	mov	x2, x27
  432730:	bl	4029c0 <memcpy@plt>
  432734:	ldr	x8, [x22, #16]
  432738:	add	x8, x8, x27
  43273c:	str	x8, [x22, #16]
  432740:	ldr	x8, [x23]
  432744:	ldr	x9, [x8]
  432748:	ldr	x10, [x8, #32]
  43274c:	cmp	x9, x10
  432750:	b.cs	432798 <feof@plt+0x2f6b8>  // b.hs, b.nlast
  432754:	ldr	x0, [x23, #40]
  432758:	mov	w10, #0x18                  	// #24
  43275c:	mov	w2, wzr
  432760:	ldr	w8, [x0, #12]
  432764:	ldr	x9, [x0]
  432768:	sub	w8, w8, #0x1
  43276c:	smaddl	x8, w8, w10, x9
  432770:	ldr	w9, [x0, #60]
  432774:	ldr	w10, [x8]
  432778:	ldrb	w11, [x8, #6]
  43277c:	ldr	w8, [x8, #16]
  432780:	sub	w9, w9, w10
  432784:	lsr	w9, w9, w11
  432788:	add	w8, w8, w9
  43278c:	add	w1, w8, #0x1
  432790:	bl	435084 <feof@plt+0x31fa4>
  432794:	ldr	x8, [x23]
  432798:	mov	w9, #0x1                   	// #1
  43279c:	mov	x0, x23
  4327a0:	mov	w1, wzr
  4327a4:	strb	w9, [x8, #104]
  4327a8:	str	x24, [x8]
  4327ac:	bl	42f6a0 <feof@plt+0x2c5c0>
  4327b0:	ldrb	w8, [x23, #16]
  4327b4:	ldur	x24, [x29, #-48]
  4327b8:	cbnz	w8, 432d04 <feof@plt+0x2fc24>
  4327bc:	ldr	x8, [x23]
  4327c0:	add	x24, x19, x24
  4327c4:	ldrb	w9, [x8, #104]
  4327c8:	cbz	w9, 432844 <feof@plt+0x2f764>
  4327cc:	ldr	x10, [x8, #16]
  4327d0:	ldr	x9, [x8, #32]
  4327d4:	cmp	x10, x9
  4327d8:	b.cc	432838 <feof@plt+0x2f758>  // b.lo, b.ul, b.last
  4327dc:	ldrb	w11, [x23, #25]
  4327e0:	cbnz	w11, 432d04 <feof@plt+0x2fc24>
  4327e4:	ldrb	w20, [x8, #105]
  4327e8:	cmp	x10, x9
  4327ec:	b.ls	432804 <feof@plt+0x2f724>  // b.plast
  4327f0:	ldr	x10, [x8, #24]
  4327f4:	cmp	x10, x9
  4327f8:	b.eq	432804 <feof@plt+0x2f724>  // b.none
  4327fc:	tbnz	w20, #1, 432804 <feof@plt+0x2f724>
  432800:	str	x9, [x8, #16]
  432804:	mov	x0, x23
  432808:	bl	426b60 <feof@plt+0x23a80>
  43280c:	ldr	x8, [x23]
  432810:	cmp	x8, #0x0
  432814:	cset	w9, ne  // ne = any
  432818:	tst	w20, #0x4
  43281c:	cset	w10, eq  // eq = none
  432820:	and	w9, w10, w9
  432824:	and	w19, w19, w9
  432828:	tbnz	w20, #2, 432830 <feof@plt+0x2f750>
  43282c:	cbnz	x8, 4327c4 <feof@plt+0x2f6e4>
  432830:	tbnz	w19, #0, 432844 <feof@plt+0x2f764>
  432834:	b	432d04 <feof@plt+0x2fc24>
  432838:	mov	x0, x23
  43283c:	bl	42f144 <feof@plt+0x2c064>
  432840:	ldr	x8, [x23]
  432844:	ldr	x27, [x8]
  432848:	ldr	x9, [x8, #48]
  43284c:	ldr	w8, [x8, #56]
  432850:	ldr	x19, [sp, #64]
  432854:	stur	x24, [x29, #-48]
  432858:	mov	x26, x27
  43285c:	add	x20, x9, x8, lsl #4
  432860:	mov	w8, w21
  432864:	b	431c7c <feof@plt+0x2eb9c>
  432868:	ldr	w21, [sp, #36]
  43286c:	mov	x24, x27
  432870:	ldrb	w8, [x23, #1161]
  432874:	cbz	w8, 43292c <feof@plt+0x2f84c>
  432878:	ldrb	w11, [x24]
  43287c:	adrp	x19, 474000 <_obstack_memory_used@@Base+0x12838>
  432880:	add	x19, x19, #0xe98
  432884:	cmp	x11, #0x5f
  432888:	b.ne	432898 <feof@plt+0x2f7b8>  // b.any
  43288c:	ldrb	w8, [x24, #1]
  432890:	cmp	w8, #0x5f
  432894:	b.ne	432900 <feof@plt+0x2f820>  // b.any
  432898:	ldrh	w8, [x19, x11, lsl #1]
  43289c:	tbz	w8, #9, 432900 <feof@plt+0x2f820>
  4328a0:	mov	x8, x24
  4328a4:	ldrb	w10, [x8, #1]!
  4328a8:	mov	w9, #0x204                 	// #516
  4328ac:	sub	w11, w11, #0x71
  4328b0:	ldrh	w12, [x19, x10, lsl #1]
  4328b4:	tst	w12, w9
  4328b8:	b.eq	4328dc <feof@plt+0x2f7fc>  // b.none
  4328bc:	mov	w12, #0x43                  	// #67
  4328c0:	mul	w11, w11, w12
  4328c4:	add	w11, w11, w10, uxtb
  4328c8:	ldrb	w10, [x8, #1]!
  4328cc:	sub	w11, w11, #0x71
  4328d0:	ldrh	w13, [x19, x10, lsl #1]
  4328d4:	tst	w13, w9
  4328d8:	b.ne	4328c0 <feof@plt+0x2f7e0>  // b.any
  4328dc:	ldr	x0, [x23, #1088]
  4328e0:	sub	x2, x8, x24
  4328e4:	add	w3, w11, w2
  4328e8:	mov	x1, x24
  4328ec:	mov	w4, wzr
  4328f0:	bl	43cf1c <feof@plt+0x39e3c>
  4328f4:	cbz	x0, 432900 <feof@plt+0x2f820>
  4328f8:	ldrb	w8, [x0, #18]
  4328fc:	tbnz	w8, #1, 432da4 <feof@plt+0x2fcc4>
  432900:	ldrb	w8, [x24]
  432904:	ldrh	w8, [x19, x8, lsl #1]
  432908:	tbz	w8, #9, 43292c <feof@plt+0x2f84c>
  43290c:	mov	w0, w21
  432910:	bl	4299ec <feof@plt+0x2690c>
  432914:	mov	w21, w0
  432918:	mov	w8, #0x204                 	// #516
  43291c:	ldrb	w9, [x24, #1]!
  432920:	ldrh	w9, [x19, x9, lsl #1]
  432924:	tst	w9, w8
  432928:	b.ne	43291c <feof@plt+0x2f83c>  // b.any
  43292c:	ldr	x8, [x23]
  432930:	sub	x22, x24, x26
  432934:	str	x24, [x8]
  432938:	cbz	x25, 4329c0 <feof@plt+0x2f8e0>
  43293c:	ldur	x8, [x29, #-48]
  432940:	mov	x0, x23
  432944:	add	x19, x22, x8
  432948:	add	x1, x19, #0x1
  43294c:	bl	4335d8 <feof@plt+0x304f8>
  432950:	ldr	x8, [sp, #40]
  432954:	mov	x20, x0
  432958:	str	w19, [x8, #8]
  43295c:	mov	x19, x25
  432960:	strb	w21, [x8, #4]
  432964:	str	x0, [x8, #16]
  432968:	ldp	x1, x8, [x19, #8]
  43296c:	mov	x0, x20
  432970:	sub	x2, x8, x1
  432974:	bl	4029c0 <memcpy@plt>
  432978:	ldp	x9, x8, [x19, #8]
  43297c:	ldr	x19, [x19]
  432980:	sub	x8, x8, x9
  432984:	add	x20, x20, x8
  432988:	cbnz	x19, 432968 <feof@plt+0x2f888>
  43298c:	mov	x9, x25
  432990:	mov	x8, x9
  432994:	ldr	x9, [x9]
  432998:	cbnz	x9, 432990 <feof@plt+0x2f8b0>
  43299c:	ldr	x9, [x28]
  4329a0:	mov	x0, x20
  4329a4:	mov	x1, x26
  4329a8:	mov	x2, x22
  4329ac:	str	x9, [x8]
  4329b0:	str	x25, [x28]
  4329b4:	bl	4029c0 <memcpy@plt>
  4329b8:	strb	wzr, [x20, x22]
  4329bc:	b	432ce4 <feof@plt+0x2fc04>
  4329c0:	add	w1, w22, #0x1
  4329c4:	mov	x0, x23
  4329c8:	bl	4335d8 <feof@plt+0x304f8>
  4329cc:	and	x23, x22, #0xffffffff
  4329d0:	mov	x1, x26
  4329d4:	mov	x2, x23
  4329d8:	mov	x20, x0
  4329dc:	bl	4029c0 <memcpy@plt>
  4329e0:	ldr	x8, [sp, #40]
  4329e4:	strb	wzr, [x20, x23]
  4329e8:	strb	w21, [x8, #4]
  4329ec:	str	w22, [x8, #8]
  4329f0:	str	x20, [x8, #16]
  4329f4:	b	432ce4 <feof@plt+0x2fc04>
  4329f8:	mov	w22, #0x3f                  	// #63
  4329fc:	mov	w24, #0x22                  	// #34
  432a00:	mov	w8, wzr
  432a04:	b	432a4c <feof@plt+0x2f96c>
  432a08:	mov	w22, #0x41                  	// #65
  432a0c:	mov	w24, #0x22                  	// #34
  432a10:	mov	w8, wzr
  432a14:	b	432a4c <feof@plt+0x2f96c>
  432a18:	mov	w22, #0x3e                  	// #62
  432a1c:	mov	w24, #0x22                  	// #34
  432a20:	mov	w8, wzr
  432a24:	b	432a4c <feof@plt+0x2f96c>
  432a28:	mov	w22, #0x39                  	// #57
  432a2c:	b	432a3c <feof@plt+0x2f95c>
  432a30:	mov	w22, #0x3b                  	// #59
  432a34:	b	432a3c <feof@plt+0x2f95c>
  432a38:	mov	w22, #0x38                  	// #56
  432a3c:	mov	w24, #0x27                  	// #39
  432a40:	mov	w8, wzr
  432a44:	b	432a4c <feof@plt+0x2f96c>
  432a48:	add	x12, x23, #0x2
  432a4c:	mov	x23, x12
  432a50:	ldrb	w9, [x12], #1
  432a54:	cmp	w9, #0x5c
  432a58:	b.ne	432a74 <feof@plt+0x2f994>  // b.any
  432a5c:	ldur	x10, [x29, #-64]
  432a60:	ldrb	w10, [x10, #19]
  432a64:	cbnz	w10, 432a74 <feof@plt+0x2f994>
  432a68:	ldrb	w10, [x12]
  432a6c:	cmp	w10, #0xa
  432a70:	b.ne	432a48 <feof@plt+0x2f968>  // b.any
  432a74:	cmp	w24, w9
  432a78:	b.eq	432a94 <feof@plt+0x2f9b4>  // b.none
  432a7c:	cbz	w9, 432a8c <feof@plt+0x2f9ac>
  432a80:	cmp	w9, #0xa
  432a84:	b.ne	432a4c <feof@plt+0x2f96c>  // b.any
  432a88:	b	432ac0 <feof@plt+0x2f9e0>
  432a8c:	mov	w8, #0x1                   	// #1
  432a90:	b	432a4c <feof@plt+0x2f96c>
  432a94:	mov	x23, x12
  432a98:	tbz	w8, #0, 432adc <feof@plt+0x2f9fc>
  432a9c:	ldur	x8, [x29, #-64]
  432aa0:	ldrb	w8, [x8, #18]
  432aa4:	cbnz	w8, 432adc <feof@plt+0x2f9fc>
  432aa8:	ldur	x0, [x29, #-64]
  432aac:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  432ab0:	add	x2, x2, #0x23f
  432ab4:	mov	w1, wzr
  432ab8:	bl	4288a0 <feof@plt+0x257c0>
  432abc:	b	432adc <feof@plt+0x2f9fc>
  432ac0:	cmp	w24, #0x3e
  432ac4:	b.ne	432ad4 <feof@plt+0x2f9f4>  // b.any
  432ac8:	mov	w8, #0x3                   	// #3
  432acc:	strb	w8, [x21, #4]
  432ad0:	b	432ce4 <feof@plt+0x2fc04>
  432ad4:	mov	w22, #0x3d                  	// #61
  432ad8:	tbnz	w8, #0, 432a9c <feof@plt+0x2f9bc>
  432adc:	ldur	x19, [x29, #-64]
  432ae0:	cmp	w22, #0x3d
  432ae4:	b.ne	432b0c <feof@plt+0x2fa2c>  // b.any
  432ae8:	ldr	w8, [x19, #1116]
  432aec:	cmp	w8, #0x15
  432af0:	b.eq	432b0c <feof@plt+0x2fa2c>  // b.none
  432af4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  432af8:	add	x2, x2, #0x266
  432afc:	mov	w1, #0x2                   	// #2
  432b00:	mov	x0, x19
  432b04:	mov	w3, w24
  432b08:	bl	4288a0 <feof@plt+0x257c0>
  432b0c:	ldrb	w8, [x19, #1161]
  432b10:	cbz	w8, 432bdc <feof@plt+0x2fafc>
  432b14:	ldrb	w12, [x23]
  432b18:	cmp	x12, #0x5f
  432b1c:	b.ne	432b2c <feof@plt+0x2fa4c>  // b.any
  432b20:	ldrb	w8, [x23, #1]
  432b24:	cmp	w8, #0x5f
  432b28:	b.ne	432ba0 <feof@plt+0x2fac0>  // b.any
  432b2c:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  432b30:	add	x9, x9, #0xe98
  432b34:	ldrh	w8, [x9, x12, lsl #1]
  432b38:	tbz	w8, #9, 432ba0 <feof@plt+0x2fac0>
  432b3c:	mov	x8, x23
  432b40:	ldrb	w11, [x8, #1]!
  432b44:	mov	w10, #0x204                 	// #516
  432b48:	sub	w12, w12, #0x71
  432b4c:	ldrh	w13, [x9, x11, lsl #1]
  432b50:	tst	w13, w10
  432b54:	b.eq	432b78 <feof@plt+0x2fa98>  // b.none
  432b58:	mov	w13, #0x43                  	// #67
  432b5c:	mul	w12, w12, w13
  432b60:	add	w12, w12, w11, uxtb
  432b64:	ldrb	w11, [x8, #1]!
  432b68:	sub	w12, w12, #0x71
  432b6c:	ldrh	w14, [x9, x11, lsl #1]
  432b70:	tst	w14, w10
  432b74:	b.ne	432b5c <feof@plt+0x2fa7c>  // b.any
  432b78:	ldur	x9, [x29, #-64]
  432b7c:	sub	x2, x8, x23
  432b80:	add	w3, w12, w2
  432b84:	mov	x1, x23
  432b88:	ldr	x0, [x9, #1088]
  432b8c:	mov	w4, wzr
  432b90:	bl	43cf1c <feof@plt+0x39e3c>
  432b94:	cbz	x0, 432ba0 <feof@plt+0x2fac0>
  432b98:	ldrb	w8, [x0, #18]
  432b9c:	tbnz	w8, #1, 432c7c <feof@plt+0x2fb9c>
  432ba0:	ldrb	w8, [x23]
  432ba4:	adrp	x19, 474000 <_obstack_memory_used@@Base+0x12838>
  432ba8:	add	x19, x19, #0xe98
  432bac:	ldrh	w8, [x19, x8, lsl #1]
  432bb0:	tbz	w8, #9, 432ca8 <feof@plt+0x2fbc8>
  432bb4:	mov	w0, w22
  432bb8:	bl	429a14 <feof@plt+0x26934>
  432bbc:	bl	4299ec <feof@plt+0x2690c>
  432bc0:	mov	w22, w0
  432bc4:	mov	w8, #0x204                 	// #516
  432bc8:	ldrb	w9, [x23, #1]!
  432bcc:	ldrh	w9, [x19, x9, lsl #1]
  432bd0:	tst	w9, w8
  432bd4:	b.ne	432bc8 <feof@plt+0x2fae8>  // b.any
  432bd8:	b	432ca8 <feof@plt+0x2fbc8>
  432bdc:	ldrb	w8, [x19, #1199]
  432be0:	cbz	w8, 432ca8 <feof@plt+0x2fbc8>
  432be4:	ldrb	w12, [x23]
  432be8:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  432bec:	add	x9, x9, #0xe98
  432bf0:	ldrh	w8, [x9, x12, lsl #1]
  432bf4:	tbz	w8, #9, 432ca8 <feof@plt+0x2fbc8>
  432bf8:	mov	x8, x23
  432bfc:	ldrb	w11, [x8, #1]!
  432c00:	mov	w10, #0x204                 	// #516
  432c04:	sub	w12, w12, #0x71
  432c08:	ldrh	w13, [x9, x11, lsl #1]
  432c0c:	tst	w13, w10
  432c10:	b.eq	432c34 <feof@plt+0x2fb54>  // b.none
  432c14:	mov	w13, #0x43                  	// #67
  432c18:	mul	w12, w12, w13
  432c1c:	add	w12, w12, w11, uxtb
  432c20:	ldrb	w11, [x8, #1]!
  432c24:	sub	w12, w12, #0x71
  432c28:	ldrh	w14, [x9, x11, lsl #1]
  432c2c:	tst	w14, w10
  432c30:	b.ne	432c18 <feof@plt+0x2fb38>  // b.any
  432c34:	ldur	x9, [x29, #-64]
  432c38:	sub	x2, x8, x23
  432c3c:	add	w3, w12, w2
  432c40:	mov	x1, x23
  432c44:	ldr	x0, [x9, #1088]
  432c48:	mov	w4, wzr
  432c4c:	bl	43cf1c <feof@plt+0x39e3c>
  432c50:	cbz	x0, 432ca8 <feof@plt+0x2fbc8>
  432c54:	ldrb	w8, [x0, #18]
  432c58:	tbz	w8, #1, 432ca8 <feof@plt+0x2fbc8>
  432c5c:	ldur	x0, [x29, #-64]
  432c60:	ldrb	w8, [x0, #18]
  432c64:	cbnz	w8, 432ca8 <feof@plt+0x2fbc8>
  432c68:	ldr	w2, [x21]
  432c6c:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432c70:	add	x4, x4, #0x2da
  432c74:	mov	w1, #0x17                  	// #23
  432c78:	b	432ca0 <feof@plt+0x2fbc0>
  432c7c:	ldur	x0, [x29, #-64]
  432c80:	ldrb	w8, [x0, #1162]
  432c84:	cbz	w8, 432ca8 <feof@plt+0x2fbc8>
  432c88:	ldrb	w8, [x0, #18]
  432c8c:	cbnz	w8, 432ca8 <feof@plt+0x2fbc8>
  432c90:	ldr	w2, [x21]
  432c94:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432c98:	add	x4, x4, #0x287
  432c9c:	mov	w1, #0x13                  	// #19
  432ca0:	mov	w3, wzr
  432ca4:	bl	428e5c <feof@plt+0x25d7c>
  432ca8:	ldur	x0, [x29, #-64]
  432cac:	sub	x19, x23, x26
  432cb0:	add	w1, w19, #0x1
  432cb4:	ldr	x8, [x0]
  432cb8:	str	x23, [x8]
  432cbc:	bl	4335d8 <feof@plt+0x304f8>
  432cc0:	and	x23, x19, #0xffffffff
  432cc4:	mov	x1, x26
  432cc8:	mov	x2, x23
  432ccc:	mov	x20, x0
  432cd0:	bl	4029c0 <memcpy@plt>
  432cd4:	strb	wzr, [x20, x23]
  432cd8:	strb	w22, [x21, #4]
  432cdc:	str	w19, [x21, #8]
  432ce0:	str	x20, [x21, #16]
  432ce4:	ldp	x20, x19, [sp, #224]
  432ce8:	ldp	x22, x21, [sp, #208]
  432cec:	ldp	x24, x23, [sp, #192]
  432cf0:	ldp	x26, x25, [sp, #176]
  432cf4:	ldp	x28, x27, [sp, #160]
  432cf8:	ldp	x29, x30, [sp, #144]
  432cfc:	add	sp, sp, #0xf0
  432d00:	ret
  432d04:	ldr	x10, [sp, #40]
  432d08:	mov	w8, #0x16                  	// #22
  432d0c:	mov	w9, #0x40                  	// #64
  432d10:	strb	w8, [x10, #4]
  432d14:	ldr	x8, [x23, #40]
  432d18:	ldr	w2, [x10]
  432d1c:	ldr	w8, [x8, #60]
  432d20:	strh	w9, [x10, #6]
  432d24:	str	w8, [x10]
  432d28:	cbz	x25, 432d48 <feof@plt+0x2fc68>
  432d2c:	mov	x9, x25
  432d30:	mov	x8, x9
  432d34:	ldr	x9, [x9]
  432d38:	cbnz	x9, 432d30 <feof@plt+0x2fc50>
  432d3c:	ldr	x9, [x28]
  432d40:	str	x9, [x8]
  432d44:	str	x25, [x28]
  432d48:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432d4c:	add	x4, x4, #0x3a8
  432d50:	mov	w1, #0x3                   	// #3
  432d54:	mov	x0, x23
  432d58:	mov	w3, wzr
  432d5c:	bl	428d60 <feof@plt+0x25c80>
  432d60:	b	432ce4 <feof@plt+0x2fc04>
  432d64:	ldr	x8, [x23]
  432d68:	cmp	w11, #0x10
  432d6c:	ldr	w8, [x8, #8]
  432d70:	sub	w8, w27, w8
  432d74:	add	w3, w8, #0x1
  432d78:	b.ne	432dd8 <feof@plt+0x2fcf8>  // b.any
  432d7c:	ldr	x21, [sp, #40]
  432d80:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432d84:	add	x4, x4, #0x321
  432d88:	mov	w1, #0x3                   	// #3
  432d8c:	ldr	w2, [x21]
  432d90:	mov	x0, x23
  432d94:	bl	428d60 <feof@plt+0x25c80>
  432d98:	ldp	x20, x24, [sp, #16]
  432d9c:	ldr	x19, [sp, #8]
  432da0:	b	432e50 <feof@plt+0x2fd70>
  432da4:	ldrb	w8, [x23, #1162]
  432da8:	cbz	w8, 43292c <feof@plt+0x2f84c>
  432dac:	ldrb	w8, [x23, #18]
  432db0:	cbnz	w8, 43292c <feof@plt+0x2f84c>
  432db4:	ldr	x8, [sp, #40]
  432db8:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432dbc:	add	x4, x4, #0x287
  432dc0:	mov	w1, #0x13                  	// #19
  432dc4:	ldr	w2, [x8]
  432dc8:	mov	x0, x23
  432dcc:	mov	w3, wzr
  432dd0:	bl	428e5c <feof@plt+0x25d7c>
  432dd4:	b	43292c <feof@plt+0x2f84c>
  432dd8:	ldr	x8, [sp, #40]
  432ddc:	ldp	x20, x24, [sp, #16]
  432de0:	ldr	x19, [sp, #8]
  432de4:	cmp	w5, #0xa
  432de8:	ldr	w2, [x8]
  432dec:	b.ne	432e38 <feof@plt+0x2fd58>  // b.any
  432df0:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432df4:	add	x4, x4, #0x350
  432df8:	mov	w1, #0x3                   	// #3
  432dfc:	mov	x0, x23
  432e00:	bl	428d60 <feof@plt+0x25c80>
  432e04:	b	432e4c <feof@plt+0x2fd6c>
  432e08:	ldr	x8, [sp, #40]
  432e0c:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432e10:	add	x4, x4, #0x3a8
  432e14:	mov	w1, #0x3                   	// #3
  432e18:	ldr	w2, [x8]
  432e1c:	mov	x0, x23
  432e20:	mov	w3, wzr
  432e24:	bl	428d60 <feof@plt+0x25c80>
  432e28:	mov	w21, #0x3d                  	// #61
  432e2c:	ldrb	w8, [x23, #1161]
  432e30:	cbnz	w8, 432878 <feof@plt+0x2f798>
  432e34:	b	43292c <feof@plt+0x2f84c>
  432e38:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  432e3c:	add	x4, x4, #0x379
  432e40:	mov	w1, #0x3                   	// #3
  432e44:	mov	x0, x23
  432e48:	bl	428d60 <feof@plt+0x25c80>
  432e4c:	ldr	x21, [sp, #40]
  432e50:	ldr	x8, [x23]
  432e54:	eor	x9, x24, #0xffffffff
  432e58:	add	x19, x9, x19
  432e5c:	add	w1, w19, #0x1
  432e60:	mov	x0, x23
  432e64:	str	x20, [x8]
  432e68:	bl	4335d8 <feof@plt+0x304f8>
  432e6c:	and	x22, x19, #0xffffffff
  432e70:	mov	x1, x24
  432e74:	mov	x2, x22
  432e78:	mov	x20, x0
  432e7c:	bl	4029c0 <memcpy@plt>
  432e80:	mov	w8, #0x3d                  	// #61
  432e84:	strb	wzr, [x20, x22]
  432e88:	str	w19, [x21, #8]
  432e8c:	strb	w8, [x21, #4]
  432e90:	str	x20, [x21, #16]
  432e94:	cbz	x25, 432ce4 <feof@plt+0x2fc04>
  432e98:	mov	x9, x25
  432e9c:	mov	x8, x9
  432ea0:	ldr	x9, [x9]
  432ea4:	cbnz	x9, 432e9c <feof@plt+0x2fdbc>
  432ea8:	ldr	x9, [x28]
  432eac:	str	x9, [x8]
  432eb0:	str	x25, [x28]
  432eb4:	b	432ce4 <feof@plt+0x2fc04>
  432eb8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  432ebc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  432ec0:	add	x0, x0, #0xf20
  432ec4:	add	x2, x2, #0x312
  432ec8:	mov	w1, #0x6f0                 	// #1776
  432ecc:	bl	40f560 <feof@plt+0xc480>
  432ed0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  432ed4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  432ed8:	add	x0, x0, #0xf20
  432edc:	add	x2, x2, #0x312
  432ee0:	mov	w1, #0x6e1                 	// #1761
  432ee4:	bl	40f560 <feof@plt+0xc480>
  432ee8:	stp	x29, x30, [sp, #-80]!
  432eec:	stp	x24, x23, [sp, #32]
  432ef0:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  432ef4:	stp	x22, x21, [sp, #48]
  432ef8:	stp	x20, x19, [sp, #64]
  432efc:	mov	x20, x4
  432f00:	mov	x22, x3
  432f04:	mov	x21, x1
  432f08:	mov	x19, x0
  432f0c:	add	x23, x23, #0xe98
  432f10:	str	x25, [sp, #16]
  432f14:	mov	x29, sp
  432f18:	tbnz	w2, #0, 432f84 <feof@plt+0x2fea4>
  432f1c:	ldr	x8, [x19]
  432f20:	ldrb	w12, [x21]
  432f24:	mov	w9, #0x204                 	// #516
  432f28:	ldr	x24, [x8]
  432f2c:	sub	w25, w12, #0x71
  432f30:	ldrb	w10, [x24]
  432f34:	ldrh	w11, [x23, x10, lsl #1]
  432f38:	tst	w11, w9
  432f3c:	b.eq	432f60 <feof@plt+0x2fe80>  // b.none
  432f40:	mov	w11, #0x43                  	// #67
  432f44:	mul	w12, w25, w11
  432f48:	add	w12, w12, w10, uxtb
  432f4c:	ldrb	w10, [x24, #1]!
  432f50:	sub	w25, w12, #0x71
  432f54:	ldrh	w13, [x23, x10, lsl #1]
  432f58:	tst	w13, w9
  432f5c:	b.ne	432f44 <feof@plt+0x2fe64>  // b.any
  432f60:	ldurb	w9, [x24, #-1]
  432f64:	mov	x0, x19
  432f68:	mov	w1, wzr
  432f6c:	mov	x2, x22
  432f70:	strb	wzr, [x22, #4]
  432f74:	str	w9, [x22]
  432f78:	str	x24, [x8]
  432f7c:	bl	433140 <feof@plt+0x30060>
  432f80:	tbz	w0, #0, 433018 <feof@plt+0x2ff38>
  432f84:	mov	w24, #0x204                 	// #516
  432f88:	b	432fa0 <feof@plt+0x2fec0>
  432f8c:	mov	x0, x19
  432f90:	mov	w1, wzr
  432f94:	mov	x2, x22
  432f98:	bl	433140 <feof@plt+0x30060>
  432f9c:	tbz	w0, #0, 432fe0 <feof@plt+0x2ff00>
  432fa0:	ldr	x8, [x19]
  432fa4:	ldr	x10, [x8]
  432fa8:	ldrb	w9, [x10]
  432fac:	ldrh	w11, [x23, x9, lsl #1]
  432fb0:	tst	w11, w24
  432fb4:	b.eq	432f8c <feof@plt+0x2feac>  // b.none
  432fb8:	add	x10, x10, #0x1
  432fbc:	and	w9, w9, #0xff
  432fc0:	strb	wzr, [x22, #4]
  432fc4:	str	w9, [x22]
  432fc8:	str	x10, [x8]
  432fcc:	ldrb	w9, [x10], #1
  432fd0:	ldrh	w11, [x23, x9, lsl #1]
  432fd4:	tst	w11, w24
  432fd8:	b.ne	432fbc <feof@plt+0x2fedc>  // b.any
  432fdc:	b	432f8c <feof@plt+0x2feac>
  432fe0:	ldr	x8, [x19]
  432fe4:	mov	x0, x19
  432fe8:	mov	x1, x21
  432fec:	ldr	x8, [x8]
  432ff0:	sub	x2, x8, x21
  432ff4:	bl	4229e0 <feof@plt+0x1f900>
  432ff8:	ldr	x8, [x19]
  432ffc:	mov	x22, x0
  433000:	mov	x0, x19
  433004:	mov	x1, x21
  433008:	ldr	w8, [x8]
  43300c:	sub	w2, w8, w21
  433010:	bl	42f080 <feof@plt+0x2bfa0>
  433014:	b	433038 <feof@plt+0x2ff58>
  433018:	ldr	x0, [x19, #1088]
  43301c:	sub	x8, x24, x21
  433020:	add	w3, w25, w8
  433024:	and	x2, x8, #0xffffffff
  433028:	mov	w4, #0x1                   	// #1
  43302c:	mov	x1, x21
  433030:	bl	43cf1c <feof@plt+0x39e3c>
  433034:	mov	x22, x0
  433038:	str	x0, [x20]
  43303c:	ldrh	w8, [x22, #18]
  433040:	tbz	w8, #4, 43304c <feof@plt+0x2ff6c>
  433044:	ldrb	w9, [x19, #18]
  433048:	cbz	w9, 433068 <feof@plt+0x2ff88>
  43304c:	mov	x0, x22
  433050:	ldp	x20, x19, [sp, #64]
  433054:	ldp	x22, x21, [sp, #48]
  433058:	ldp	x24, x23, [sp, #32]
  43305c:	ldr	x25, [sp, #16]
  433060:	ldp	x29, x30, [sp], #80
  433064:	ret
  433068:	tbz	w8, #3, 43308c <feof@plt+0x2ffac>
  43306c:	ldrb	w8, [x19, #23]
  433070:	cbnz	w8, 43308c <feof@plt+0x2ffac>
  433074:	ldr	x3, [x22]
  433078:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43307c:	add	x2, x2, #0x61
  433080:	mov	w1, #0x3                   	// #3
  433084:	mov	x0, x19
  433088:	bl	4288a0 <feof@plt+0x257c0>
  43308c:	ldr	x8, [x19, #1272]
  433090:	cmp	x22, x8
  433094:	b.ne	4330c8 <feof@plt+0x2ffe8>  // b.any
  433098:	ldrb	w8, [x19, #22]
  43309c:	cbnz	w8, 4330c8 <feof@plt+0x2ffe8>
  4330a0:	ldrb	w8, [x19, #1120]
  4330a4:	cbz	w8, 4330b4 <feof@plt+0x2ffd4>
  4330a8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4330ac:	add	x2, x2, #0x7e
  4330b0:	b	4330bc <feof@plt+0x2ffdc>
  4330b4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4330b8:	add	x2, x2, #0xc5
  4330bc:	mov	w1, #0x2                   	// #2
  4330c0:	mov	x0, x19
  4330c4:	bl	4288a0 <feof@plt+0x257c0>
  4330c8:	ldr	x8, [x19, #1280]
  4330cc:	cmp	x22, x8
  4330d0:	b.ne	43311c <feof@plt+0x3003c>  // b.any
  4330d4:	ldrb	w8, [x19, #1154]
  4330d8:	cbz	w8, 4330e4 <feof@plt+0x30004>
  4330dc:	ldrb	w8, [x19, #1167]
  4330e0:	cbz	w8, 4330f8 <feof@plt+0x30018>
  4330e4:	ldrb	w8, [x19, #22]
  4330e8:	cbnz	w8, 43311c <feof@plt+0x3003c>
  4330ec:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4330f0:	add	x2, x2, #0x164
  4330f4:	b	433110 <feof@plt+0x30030>
  4330f8:	ldr	x8, [x19]
  4330fc:	cbz	x8, 433108 <feof@plt+0x30028>
  433100:	ldrb	w8, [x8, #106]
  433104:	cbnz	w8, 43311c <feof@plt+0x3003c>
  433108:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43310c:	add	x2, x2, #0x13c
  433110:	mov	w1, #0x2                   	// #2
  433114:	mov	x0, x19
  433118:	bl	4288a0 <feof@plt+0x257c0>
  43311c:	ldrb	w8, [x22, #19]
  433120:	tbz	w8, #1, 43304c <feof@plt+0x2ff6c>
  433124:	ldr	x3, [x22]
  433128:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43312c:	add	x2, x2, #0x10a
  433130:	mov	w1, #0xf                   	// #15
  433134:	mov	x0, x19
  433138:	bl	4289d0 <feof@plt+0x258f0>
  43313c:	b	43304c <feof@plt+0x2ff6c>
  433140:	stp	x29, x30, [sp, #-32]!
  433144:	str	x19, [sp, #16]
  433148:	ldr	x19, [x0]
  43314c:	mov	x29, sp
  433150:	ldr	x8, [x19]
  433154:	ldrb	w9, [x8]
  433158:	cmp	w9, #0x24
  43315c:	b.ne	433198 <feof@plt+0x300b8>  // b.any
  433160:	ldrb	w9, [x0, #1146]
  433164:	cbz	w9, 4331f4 <feof@plt+0x30114>
  433168:	add	x8, x8, #0x1
  43316c:	str	x8, [x19]
  433170:	ldrb	w8, [x0, #1148]
  433174:	cbz	w8, 4331ec <feof@plt+0x3010c>
  433178:	ldrb	w8, [x0, #18]
  43317c:	cbnz	w8, 4331ec <feof@plt+0x3010c>
  433180:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0xb838>
  433184:	add	x2, x2, #0xb12
  433188:	mov	w1, #0x2                   	// #2
  43318c:	strb	wzr, [x0, #1148]
  433190:	bl	4288a0 <feof@plt+0x257c0>
  433194:	b	4331ec <feof@plt+0x3010c>
  433198:	ldrb	w10, [x0, #1147]
  43319c:	cmp	w9, #0x5c
  4331a0:	ccmp	w10, #0x0, #0x4, eq  // eq = none
  4331a4:	b.eq	4331f4 <feof@plt+0x30114>  // b.none
  4331a8:	ldrb	w9, [x8, #1]
  4331ac:	orr	w9, w9, #0x20
  4331b0:	cmp	w9, #0x75
  4331b4:	b.ne	4331f4 <feof@plt+0x30114>  // b.any
  4331b8:	mov	x4, x2
  4331bc:	ldr	x2, [x19, #32]
  4331c0:	add	x8, x8, #0x2
  4331c4:	str	x8, [x19]
  4331c8:	cmp	w1, #0x0
  4331cc:	mov	w8, #0x1                   	// #1
  4331d0:	cinc	w3, w8, eq  // eq = none
  4331d4:	add	x5, x29, #0x1c
  4331d8:	mov	x1, x19
  4331dc:	mov	x6, xzr
  4331e0:	mov	x7, xzr
  4331e4:	bl	42126c <feof@plt+0x1e18c>
  4331e8:	tbz	w0, #0, 433204 <feof@plt+0x30124>
  4331ec:	mov	w0, #0x1                   	// #1
  4331f0:	b	4331f8 <feof@plt+0x30118>
  4331f4:	mov	w0, wzr
  4331f8:	ldr	x19, [sp, #16]
  4331fc:	ldp	x29, x30, [sp], #32
  433200:	ret
  433204:	ldr	x8, [x19]
  433208:	mov	w0, wzr
  43320c:	sub	x8, x8, #0x2
  433210:	str	x8, [x19]
  433214:	b	4331f8 <feof@plt+0x30118>
  433218:	ldrb	w8, [x0, #4]
  43321c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  433220:	add	x9, x9, #0x918
  433224:	lsl	x8, x8, #4
  433228:	ldr	w8, [x9, x8]
  43322c:	cmp	w8, #0x1
  433230:	b.eq	433244 <feof@plt+0x30164>  // b.none
  433234:	cmp	w8, #0x2
  433238:	b.ne	433258 <feof@plt+0x30178>  // b.any
  43323c:	ldr	w0, [x0, #8]
  433240:	ret
  433244:	ldr	x8, [x0, #8]
  433248:	ldr	w8, [x8, #8]
  43324c:	add	w8, w8, w8, lsl #2
  433250:	lsl	w0, w8, #1
  433254:	ret
  433258:	mov	w0, #0x6                   	// #6
  43325c:	ret
  433260:	stp	x29, x30, [sp, #-48]!
  433264:	stp	x22, x21, [sp, #16]
  433268:	stp	x20, x19, [sp, #32]
  43326c:	ldr	w8, [x1, #8]
  433270:	mov	x19, x0
  433274:	mov	x29, sp
  433278:	cbz	w8, 4332c4 <feof@plt+0x301e4>
  43327c:	ldr	x21, [x1]
  433280:	mov	x20, x1
  433284:	mov	x22, xzr
  433288:	b	4332a0 <feof@plt+0x301c0>
  43328c:	strb	w8, [x19], #1
  433290:	ldr	w8, [x20, #8]
  433294:	add	x22, x22, #0x1
  433298:	cmp	x22, x8
  43329c:	b.cs	4332c4 <feof@plt+0x301e4>  // b.hs, b.nlast
  4332a0:	add	x1, x21, x22
  4332a4:	ldrsb	w8, [x1]
  4332a8:	tbz	w8, #31, 43328c <feof@plt+0x301ac>
  4332ac:	mov	x0, x19
  4332b0:	bl	4332d8 <feof@plt+0x301f8>
  4332b4:	add	x8, x22, x0
  4332b8:	sub	x22, x8, #0x1
  4332bc:	add	x19, x19, #0xa
  4332c0:	b	433290 <feof@plt+0x301b0>
  4332c4:	mov	x0, x19
  4332c8:	ldp	x20, x19, [sp, #32]
  4332cc:	ldp	x22, x21, [sp, #16]
  4332d0:	ldp	x29, x30, [sp], #48
  4332d4:	ret
  4332d8:	stp	x29, x30, [sp, #-16]!
  4332dc:	ldrb	w9, [x1]
  4332e0:	mov	x29, sp
  4332e4:	tbnz	w9, #7, 4332f4 <feof@plt+0x30214>
  4332e8:	mov	x8, xzr
  4332ec:	and	x9, x9, #0x7f
  4332f0:	b	433358 <feof@plt+0x30278>
  4332f4:	mov	x8, xzr
  4332f8:	mov	w10, w9
  4332fc:	mov	w11, w10
  433300:	lsl	w10, w10, #1
  433304:	sub	x8, x8, #0x1
  433308:	tbnz	w11, #6, 4332fc <feof@plt+0x3021c>
  43330c:	mvn	x10, x8
  433310:	mov	w11, #0x3f                  	// #63
  433314:	lsr	x11, x11, x10
  433318:	cmn	w8, #0x1
  43331c:	and	x9, x11, x9
  433320:	b.eq	433354 <feof@plt+0x30274>  // b.none
  433324:	add	x11, x1, #0x1
  433328:	ldrb	w12, [x11]
  43332c:	and	w13, w12, #0xc0
  433330:	cmp	w13, #0x80
  433334:	b.ne	4333d4 <feof@plt+0x302f4>  // b.any
  433338:	bfi	x12, x9, #6, #58
  43333c:	subs	w10, w10, #0x1
  433340:	mov	x9, x12
  433344:	add	x11, x11, #0x1
  433348:	b.ne	433328 <feof@plt+0x30248>  // b.any
  43334c:	neg	x8, x8
  433350:	b	433358 <feof@plt+0x30278>
  433354:	mov	w8, #0x1                   	// #1
  433358:	mov	w10, #0x555c                	// #21852
  43335c:	adrp	x12, 470000 <_obstack_memory_used@@Base+0xe838>
  433360:	ubfx	x11, x9, #28, #4
  433364:	add	x12, x12, #0x58b
  433368:	ubfx	x13, x9, #24, #4
  43336c:	ubfx	x14, x9, #20, #4
  433370:	ubfx	x15, x9, #16, #4
  433374:	ubfx	x16, x9, #12, #4
  433378:	ubfx	x17, x9, #8, #4
  43337c:	strh	w10, [x0]
  433380:	ubfx	x10, x9, #4, #4
  433384:	and	x9, x9, #0xf
  433388:	ldrb	w11, [x12, x11]
  43338c:	ldrb	w13, [x12, x13]
  433390:	ldrb	w14, [x12, x14]
  433394:	ldrb	w15, [x12, x15]
  433398:	ldrb	w16, [x12, x16]
  43339c:	ldrb	w17, [x12, x17]
  4333a0:	ldrb	w10, [x12, x10]
  4333a4:	ldrb	w9, [x12, x9]
  4333a8:	strb	w11, [x0, #2]
  4333ac:	strb	w13, [x0, #3]
  4333b0:	strb	w14, [x0, #4]
  4333b4:	strb	w15, [x0, #5]
  4333b8:	strb	w16, [x0, #6]
  4333bc:	strb	w17, [x0, #7]
  4333c0:	strb	w10, [x0, #8]
  4333c4:	strb	w9, [x0, #9]
  4333c8:	mov	x0, x8
  4333cc:	ldp	x29, x30, [sp], #16
  4333d0:	ret
  4333d4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0xd838>
  4333d8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4333dc:	add	x0, x0, #0xf20
  4333e0:	add	x2, x2, #0x57f
  4333e4:	mov	w1, #0xc89                 	// #3209
  4333e8:	bl	40f560 <feof@plt+0xc480>
  4333ec:	stp	x29, x30, [sp, #-48]!
  4333f0:	stp	x22, x21, [sp, #16]
  4333f4:	stp	x20, x19, [sp, #32]
  4333f8:	ldrb	w8, [x1, #4]
  4333fc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  433400:	add	x9, x9, #0x918
  433404:	mov	x19, x2
  433408:	lsl	x10, x8, #4
  43340c:	ldr	w10, [x9, x10]
  433410:	mov	x29, sp
  433414:	cmp	w10, #0x3
  433418:	b.hi	43352c <feof@plt+0x3044c>  // b.pmore
  43341c:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0xd838>
  433420:	add	x11, x11, #0x8ca
  433424:	adr	x12, 433438 <feof@plt+0x30358>
  433428:	ldrb	w13, [x11, x10]
  43342c:	add	x12, x12, x13, lsl #2
  433430:	mov	x20, x1
  433434:	br	x12
  433438:	ldrh	w10, [x20, #6]
  43343c:	tbnz	w10, #1, 433500 <feof@plt+0x30420>
  433440:	tbnz	w10, #4, 433450 <feof@plt+0x30370>
  433444:	add	x8, x9, x8, lsl #4
  433448:	add	x8, x8, #0x8
  43344c:	b	433510 <feof@plt+0x30430>
  433450:	tbz	w3, #0, 4334b0 <feof@plt+0x303d0>
  433454:	ldr	x8, [x20, #16]
  433458:	mov	x0, x19
  43345c:	ldr	x1, [x8]
  433460:	ldr	w2, [x8, #8]
  433464:	bl	4029c0 <memcpy@plt>
  433468:	ldr	x8, [x20, #16]
  43346c:	ldr	w8, [x8, #8]
  433470:	add	x19, x19, x8
  433474:	b	43352c <feof@plt+0x3044c>
  433478:	ldr	x1, [x20, #16]
  43347c:	ldr	w2, [x20, #8]
  433480:	mov	x0, x19
  433484:	bl	4029c0 <memcpy@plt>
  433488:	ldr	w8, [x20, #8]
  43348c:	add	x19, x19, x8
  433490:	b	43352c <feof@plt+0x3044c>
  433494:	add	x8, x9, x8, lsl #4
  433498:	ldr	x3, [x8, #8]
  43349c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4334a0:	add	x2, x2, #0x47
  4334a4:	mov	w1, #0x4                   	// #4
  4334a8:	bl	4288a0 <feof@plt+0x257c0>
  4334ac:	b	43352c <feof@plt+0x3044c>
  4334b0:	ldr	x20, [x20, #8]
  4334b4:	ldr	w8, [x20, #8]
  4334b8:	cbz	w8, 43352c <feof@plt+0x3044c>
  4334bc:	ldr	x21, [x20]
  4334c0:	mov	x22, xzr
  4334c4:	b	4334dc <feof@plt+0x303fc>
  4334c8:	strb	w8, [x19], #1
  4334cc:	ldr	w8, [x20, #8]
  4334d0:	add	x22, x22, #0x1
  4334d4:	cmp	x22, x8
  4334d8:	b.cs	43352c <feof@plt+0x3044c>  // b.hs, b.nlast
  4334dc:	add	x1, x21, x22
  4334e0:	ldrsb	w8, [x1]
  4334e4:	tbz	w8, #31, 4334c8 <feof@plt+0x303e8>
  4334e8:	mov	x0, x19
  4334ec:	bl	4332d8 <feof@plt+0x301f8>
  4334f0:	add	x8, x22, x0
  4334f4:	sub	x22, x8, #0x1
  4334f8:	add	x19, x19, #0xa
  4334fc:	b	4334cc <feof@plt+0x303ec>
  433500:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  433504:	add	x9, x9, #0xe58
  433508:	add	x8, x9, x8, lsl #3
  43350c:	sub	x8, x8, #0x128
  433510:	ldr	x9, [x8]
  433514:	ldrb	w8, [x9]
  433518:	cbz	w8, 43352c <feof@plt+0x3044c>
  43351c:	add	x9, x9, #0x1
  433520:	strb	w8, [x19], #1
  433524:	ldrb	w8, [x9], #1
  433528:	cbnz	w8, 433520 <feof@plt+0x30440>
  43352c:	mov	x0, x19
  433530:	ldp	x20, x19, [sp, #32]
  433534:	ldp	x22, x21, [sp, #16]
  433538:	ldp	x29, x30, [sp], #48
  43353c:	ret
  433540:	stp	x29, x30, [sp, #-48]!
  433544:	stp	x20, x19, [sp, #32]
  433548:	ldrb	w8, [x1, #4]
  43354c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  433550:	add	x9, x9, #0x918
  433554:	mov	x19, x1
  433558:	lsl	x8, x8, #4
  43355c:	ldr	w8, [x9, x8]
  433560:	mov	x20, x0
  433564:	str	x21, [sp, #16]
  433568:	mov	x29, sp
  43356c:	cmp	w8, #0x1
  433570:	b.eq	433584 <feof@plt+0x304a4>  // b.none
  433574:	cmp	w8, #0x2
  433578:	b.ne	433598 <feof@plt+0x304b8>  // b.any
  43357c:	ldr	w8, [x19, #8]
  433580:	b	43359c <feof@plt+0x304bc>
  433584:	ldr	x8, [x19, #8]
  433588:	ldr	w8, [x8, #8]
  43358c:	add	w8, w8, w8, lsl #2
  433590:	lsl	w8, w8, #1
  433594:	b	43359c <feof@plt+0x304bc>
  433598:	mov	w8, #0x6                   	// #6
  43359c:	add	w1, w8, #0x1
  4335a0:	mov	x0, x20
  4335a4:	bl	4335d8 <feof@plt+0x304f8>
  4335a8:	mov	x21, x0
  4335ac:	mov	x0, x20
  4335b0:	mov	x1, x19
  4335b4:	mov	x2, x21
  4335b8:	mov	w3, wzr
  4335bc:	bl	4333ec <feof@plt+0x3030c>
  4335c0:	strb	wzr, [x0]
  4335c4:	mov	x0, x21
  4335c8:	ldp	x20, x19, [sp, #32]
  4335cc:	ldr	x21, [sp, #16]
  4335d0:	ldp	x29, x30, [sp], #48
  4335d4:	ret
  4335d8:	stp	x29, x30, [sp, #-48]!
  4335dc:	stp	x20, x19, [sp, #32]
  4335e0:	ldr	x8, [x0, #64]
  4335e4:	str	x21, [sp, #16]
  4335e8:	mov	x20, x0
  4335ec:	mov	x19, x1
  4335f0:	ldp	x0, x9, [x8, #16]
  4335f4:	mov	x29, sp
  4335f8:	sub	x9, x9, x0
  4335fc:	cmp	x9, x1
  433600:	b.cs	4336a8 <feof@plt+0x305c8>  // b.hs, b.nlast
  433604:	mov	x9, x20
  433608:	ldr	x8, [x9, #72]!
  43360c:	cbz	x8, 43365c <feof@plt+0x3057c>
  433610:	ldr	x10, [x8, #24]
  433614:	ldr	x11, [x8, #8]
  433618:	add	x12, x19, x19, lsl #1
  43361c:	mov	w13, #0x1f40                	// #8000
  433620:	sub	x11, x10, x11
  433624:	cmp	x11, x19
  433628:	add	x10, x13, x12, lsr #1
  43362c:	b.cc	433638 <feof@plt+0x30558>  // b.lo, b.ul, b.last
  433630:	cmp	x11, x10
  433634:	b.ls	433688 <feof@plt+0x305a8>  // b.plast
  433638:	mov	x9, x8
  43363c:	ldr	x8, [x8]
  433640:	cbz	x8, 43365c <feof@plt+0x3057c>
  433644:	ldr	x11, [x8, #24]
  433648:	ldr	x12, [x8, #8]
  43364c:	sub	x11, x11, x12
  433650:	cmp	x11, x19
  433654:	b.cs	433630 <feof@plt+0x30550>  // b.hs, b.nlast
  433658:	b	433638 <feof@plt+0x30558>
  43365c:	mov	w8, #0x1f40                	// #8000
  433660:	cmp	x19, x8
  433664:	csel	x8, x19, x8, hi  // hi = pmore
  433668:	add	x8, x8, #0x7
  43366c:	and	x21, x8, #0xfffffffffffffff8
  433670:	add	x0, x21, #0x20
  433674:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  433678:	add	x8, x0, x21
  43367c:	stp	x0, x8, [x8, #16]
  433680:	stp	xzr, x0, [x8]
  433684:	b	43369c <feof@plt+0x305bc>
  433688:	ldr	x10, [x8]
  43368c:	str	x10, [x9]
  433690:	ldr	x0, [x8, #8]
  433694:	str	xzr, [x8]
  433698:	str	x0, [x8, #16]
  43369c:	ldr	x9, [x20, #64]
  4336a0:	str	x9, [x8]
  4336a4:	str	x8, [x20, #64]
  4336a8:	add	x9, x0, x19
  4336ac:	str	x9, [x8, #16]
  4336b0:	ldp	x20, x19, [sp, #32]
  4336b4:	ldr	x21, [sp, #16]
  4336b8:	ldp	x29, x30, [sp], #48
  4336bc:	ret
  4336c0:	tbnz	w1, #1, 4336e0 <feof@plt+0x30600>
  4336c4:	and	w8, w1, #0xff
  4336c8:	tbnz	w8, #4, 4336f8 <feof@plt+0x30618>
  4336cc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0xd838>
  4336d0:	add	x8, x8, #0x918
  4336d4:	add	x8, x8, w0, uxtw #4
  4336d8:	ldr	x0, [x8, #8]
  4336dc:	ret
  4336e0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0xd838>
  4336e4:	add	x8, x8, #0xe58
  4336e8:	add	x8, x8, w0, sxtw #3
  4336ec:	sub	x8, x8, #0x128
  4336f0:	ldr	x0, [x8]
  4336f4:	ret
  4336f8:	b	43f654 <feof@plt+0x3c574>
  4336fc:	sub	sp, sp, #0x40
  433700:	stp	x29, x30, [sp, #16]
  433704:	stp	x22, x21, [sp, #32]
  433708:	stp	x20, x19, [sp, #48]
  43370c:	ldrb	w8, [x0, #4]
  433710:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  433714:	add	x9, x9, #0x918
  433718:	mov	x20, x0
  43371c:	lsl	x10, x8, #4
  433720:	ldr	w10, [x9, x10]
  433724:	mov	x19, x1
  433728:	add	x29, sp, #0x10
  43372c:	cmp	w10, #0x2
  433730:	b.eq	4337e4 <feof@plt+0x30704>  // b.none
  433734:	cmp	w10, #0x1
  433738:	b.eq	433758 <feof@plt+0x30678>  // b.none
  43373c:	cbnz	w10, 433854 <feof@plt+0x30774>
  433740:	ldrh	w10, [x20, #6]
  433744:	tbnz	w10, #1, 433808 <feof@plt+0x30728>
  433748:	tbnz	w10, #4, 433758 <feof@plt+0x30678>
  43374c:	add	x8, x9, x8, lsl #4
  433750:	add	x8, x8, #0x8
  433754:	b	433818 <feof@plt+0x30738>
  433758:	ldr	x8, [x20, #8]
  43375c:	ldr	w9, [x8, #8]
  433760:	cbz	w9, 433854 <feof@plt+0x30774>
  433764:	ldr	x21, [x8]
  433768:	mov	x22, xzr
  43376c:	b	4337a8 <feof@plt+0x306c8>
  433770:	add	x0, sp, #0x4
  433774:	bl	4332d8 <feof@plt+0x301f8>
  433778:	add	x8, x22, x0
  43377c:	add	x0, sp, #0x4
  433780:	mov	w1, #0x1                   	// #1
  433784:	mov	w2, #0xa                   	// #10
  433788:	mov	x3, x19
  43378c:	sub	x22, x8, #0x1
  433790:	bl	402f80 <fwrite_unlocked@plt>
  433794:	ldr	x8, [x20, #8]
  433798:	add	x22, x22, #0x1
  43379c:	ldr	w9, [x8, #8]
  4337a0:	cmp	x22, x9
  4337a4:	b.cs	433854 <feof@plt+0x30774>  // b.hs, b.nlast
  4337a8:	add	x1, x21, x22
  4337ac:	ldrsb	w9, [x1]
  4337b0:	tbnz	w9, #31, 433770 <feof@plt+0x30690>
  4337b4:	ldr	x9, [x8]
  4337b8:	ldp	x8, x10, [x19, #40]
  4337bc:	ldrb	w1, [x9, x22]
  4337c0:	cmp	x8, x10
  4337c4:	b.cs	4337d8 <feof@plt+0x306f8>  // b.hs, b.nlast
  4337c8:	add	x9, x8, #0x1
  4337cc:	str	x9, [x19, #40]
  4337d0:	strb	w1, [x8]
  4337d4:	b	433794 <feof@plt+0x306b4>
  4337d8:	mov	x0, x19
  4337dc:	bl	402ad0 <__overflow@plt>
  4337e0:	b	433794 <feof@plt+0x306b4>
  4337e4:	ldr	x0, [x20, #16]
  4337e8:	ldr	w2, [x20, #8]
  4337ec:	mov	x3, x19
  4337f0:	ldp	x20, x19, [sp, #48]
  4337f4:	ldp	x22, x21, [sp, #32]
  4337f8:	ldp	x29, x30, [sp, #16]
  4337fc:	mov	w1, #0x1                   	// #1
  433800:	add	sp, sp, #0x40
  433804:	b	402f80 <fwrite_unlocked@plt>
  433808:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  43380c:	add	x9, x9, #0xe58
  433810:	add	x8, x9, x8, lsl #3
  433814:	sub	x8, x8, #0x128
  433818:	ldr	x20, [x8]
  43381c:	ldrb	w8, [x20], #1
  433820:	ldp	x9, x10, [x19, #40]
  433824:	cmp	x9, x10
  433828:	b.cs	433844 <feof@plt+0x30764>  // b.hs, b.nlast
  43382c:	add	x10, x9, #0x1
  433830:	str	x10, [x19, #40]
  433834:	strb	w8, [x9]
  433838:	ldrb	w8, [x20], #1
  43383c:	cbnz	w8, 433820 <feof@plt+0x30740>
  433840:	b	433854 <feof@plt+0x30774>
  433844:	and	w1, w8, #0xff
  433848:	mov	x0, x19
  43384c:	bl	402ad0 <__overflow@plt>
  433850:	b	433838 <feof@plt+0x30758>
  433854:	ldp	x20, x19, [sp, #48]
  433858:	ldp	x22, x21, [sp, #32]
  43385c:	ldp	x29, x30, [sp, #16]
  433860:	add	sp, sp, #0x40
  433864:	ret
  433868:	stp	x29, x30, [sp, #-16]!
  43386c:	ldrb	w8, [x0, #4]
  433870:	ldrb	w9, [x1, #4]
  433874:	mov	x29, sp
  433878:	cmp	w8, w9
  43387c:	b.ne	433918 <feof@plt+0x30838>  // b.any
  433880:	ldrh	w9, [x0, #6]
  433884:	ldrh	w10, [x1, #6]
  433888:	cmp	w9, w10
  43388c:	b.ne	433918 <feof@plt+0x30838>  // b.any
  433890:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  433894:	lsl	x9, x8, #4
  433898:	add	x10, x10, #0x918
  43389c:	ldr	w9, [x10, x9]
  4338a0:	cmp	w9, #0x1
  4338a4:	b.eq	4338d4 <feof@plt+0x307f4>  // b.none
  4338a8:	cmp	w9, #0x2
  4338ac:	b.eq	4338f4 <feof@plt+0x30814>  // b.none
  4338b0:	cmp	w9, #0x3
  4338b4:	b.ne	433924 <feof@plt+0x30844>  // b.any
  4338b8:	cmp	w8, #0x50
  4338bc:	b.ne	433944 <feof@plt+0x30864>  // b.any
  4338c0:	ldr	w8, [x0, #8]
  4338c4:	ldr	w9, [x1, #8]
  4338c8:	cmp	w8, w9
  4338cc:	b.eq	4338e4 <feof@plt+0x30804>  // b.none
  4338d0:	b	433918 <feof@plt+0x30838>
  4338d4:	ldr	x8, [x0, #8]
  4338d8:	ldr	x9, [x1, #8]
  4338dc:	cmp	x8, x9
  4338e0:	b.ne	433918 <feof@plt+0x30838>  // b.any
  4338e4:	ldr	x8, [x0, #16]
  4338e8:	ldr	x9, [x1, #16]
  4338ec:	cmp	x8, x9
  4338f0:	b	433938 <feof@plt+0x30858>
  4338f4:	ldr	w2, [x0, #8]
  4338f8:	ldr	w8, [x1, #8]
  4338fc:	cmp	w2, w8
  433900:	b.ne	433918 <feof@plt+0x30838>  // b.any
  433904:	ldr	x0, [x0, #16]
  433908:	ldr	x1, [x1, #16]
  43390c:	bl	403090 <bcmp@plt>
  433910:	cmp	w0, #0x0
  433914:	b	433938 <feof@plt+0x30858>
  433918:	mov	w0, wzr
  43391c:	ldp	x29, x30, [sp], #16
  433920:	ret
  433924:	cmp	w8, #0x26
  433928:	b.ne	433944 <feof@plt+0x30864>  // b.any
  43392c:	ldr	w8, [x0, #8]
  433930:	ldr	w9, [x1, #8]
  433934:	cmp	w8, w9
  433938:	cset	w0, eq  // eq = none
  43393c:	ldp	x29, x30, [sp], #16
  433940:	ret
  433944:	mov	w0, #0x1                   	// #1
  433948:	ldp	x29, x30, [sp], #16
  43394c:	ret
  433950:	ldrb	w10, [x1, #6]
  433954:	ldrb	w9, [x1, #4]
  433958:	ldrh	w13, [x2, #6]
  43395c:	ldrb	w11, [x2, #4]
  433960:	mov	w14, #0x35                  	// #53
  433964:	tst	w10, #0x10
  433968:	csel	w12, w9, w14, eq  // eq = none
  43396c:	tst	w13, #0x10
  433970:	mov	x8, x0
  433974:	csel	w9, w11, w14, eq  // eq = none
  433978:	tbnz	w13, #1, 433998 <feof@plt+0x308b8>
  43397c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  433980:	lsl	x13, x9, #4
  433984:	add	x10, x10, #0x918
  433988:	ldr	w13, [x10, x13]
  43398c:	cbz	w13, 4339ac <feof@plt+0x308cc>
  433990:	mov	w10, #0xffffffff            	// #-1
  433994:	b	4339d4 <feof@plt+0x308f4>
  433998:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  43399c:	add	x10, x10, #0xe58
  4339a0:	add	x10, x10, w9, uxtw #3
  4339a4:	sub	x10, x10, #0x128
  4339a8:	b	4339b4 <feof@plt+0x308d4>
  4339ac:	add	x10, x10, x9, lsl #4
  4339b0:	add	x10, x10, #0x8
  4339b4:	ldr	x10, [x10]
  4339b8:	cmp	w12, #0xd
  4339bc:	ldrb	w10, [x10]
  4339c0:	b.hi	4339d4 <feof@plt+0x308f4>  // b.pmore
  4339c4:	cmp	w10, #0x3d
  4339c8:	b.ne	4339d4 <feof@plt+0x308f4>  // b.any
  4339cc:	mov	w0, #0x1                   	// #1
  4339d0:	ret
  4339d4:	sub	w12, w12, #0x2
  4339d8:	cmp	w12, #0x40
  4339dc:	mov	w0, wzr
  4339e0:	b.hi	433be4 <feof@plt+0x30b04>  // b.pmore
  4339e4:	adrp	x13, 46f000 <_obstack_memory_used@@Base+0xd838>
  4339e8:	add	x13, x13, #0x8ce
  4339ec:	adr	x14, 4339fc <feof@plt+0x3091c>
  4339f0:	ldrb	w15, [x13, x12]
  4339f4:	add	x14, x14, x15, lsl #2
  4339f8:	br	x14
  4339fc:	ldrb	w8, [x8, #1161]
  433a00:	cbz	w8, 433a34 <feof@plt+0x30954>
  433a04:	cmp	w9, #0x35
  433a08:	b.eq	4339cc <feof@plt+0x308ec>  // b.none
  433a0c:	sub	x8, x11, #0x37
  433a10:	cmp	x8, #0x18
  433a14:	b.hi	433a34 <feof@plt+0x30954>  // b.pmore
  433a18:	ldr	x8, [x2, #16]
  433a1c:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  433a20:	add	x9, x9, #0xe98
  433a24:	ldrb	w8, [x8]
  433a28:	ldrh	w8, [x9, x8, lsl #1]
  433a2c:	ubfx	w0, w8, #9, #1
  433a30:	b	433be4 <feof@plt+0x30b04>
  433a34:	mov	w0, wzr
  433a38:	ret
  433a3c:	orr	w8, w10, #0x4
  433a40:	cmp	w8, #0x3e
  433a44:	cset	w0, eq  // eq = none
  433a48:	ret
  433a4c:	cmp	w10, #0x3e
  433a50:	cset	w0, eq  // eq = none
  433a54:	ret
  433a58:	cmp	w10, #0x25
  433a5c:	mov	w0, #0x1                   	// #1
  433a60:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433a64:	cmp	w10, #0x3c
  433a68:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433a6c:	cmp	w10, #0x3a
  433a70:	cset	w0, eq  // eq = none
  433a74:	ret
  433a78:	cmp	w10, #0x2b
  433a7c:	cset	w0, eq  // eq = none
  433a80:	ret
  433a84:	cmp	w10, #0x2d
  433a88:	cset	w8, eq  // eq = none
  433a8c:	cmp	w10, #0x3e
  433a90:	b	433ac8 <feof@plt+0x309e8>
  433a94:	cmp	w10, #0x2f
  433a98:	cset	w8, eq  // eq = none
  433a9c:	cmp	w10, #0x2a
  433aa0:	b	433ac8 <feof@plt+0x309e8>
  433aa4:	cmp	w10, #0x26
  433aa8:	cset	w0, eq  // eq = none
  433aac:	ret
  433ab0:	cmp	w10, #0x7c
  433ab4:	cset	w0, eq  // eq = none
  433ab8:	ret
  433abc:	cmp	w10, #0x23
  433ac0:	cset	w8, eq  // eq = none
  433ac4:	cmp	w10, #0x25
  433ac8:	cset	w9, eq  // eq = none
  433acc:	orr	w0, w8, w9
  433ad0:	ret
  433ad4:	cmp	w10, #0x2a
  433ad8:	cset	w0, eq  // eq = none
  433adc:	ret
  433ae0:	cmp	w10, #0x25
  433ae4:	mov	w0, #0x1                   	// #1
  433ae8:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433aec:	cmp	w10, #0x2e
  433af0:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433af4:	cmp	w9, #0x37
  433af8:	cset	w0, eq  // eq = none
  433afc:	ret
  433b00:	cmp	w9, #0x35
  433b04:	mov	w0, #0x1                   	// #1
  433b08:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433b0c:	cmp	w9, #0x38
  433b10:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433b14:	cmp	w9, #0x37
  433b18:	b.ne	433b68 <feof@plt+0x30a88>  // b.any
  433b1c:	ldr	w10, [x2, #8]
  433b20:	cbz	w10, 4339cc <feof@plt+0x308ec>
  433b24:	ldr	x11, [x2, #16]
  433b28:	adrp	x12, 474000 <_obstack_memory_used@@Base+0x12838>
  433b2c:	add	x12, x12, #0xe98
  433b30:	mov	w13, #0x204                 	// #516
  433b34:	mov	w0, #0x1                   	// #1
  433b38:	b	433b48 <feof@plt+0x30a68>
  433b3c:	subs	x10, x10, #0x1
  433b40:	add	x11, x11, #0x1
  433b44:	b.eq	433be4 <feof@plt+0x30b04>  // b.none
  433b48:	ldrb	w14, [x11]
  433b4c:	ldrh	w15, [x12, x14, lsl #1]
  433b50:	tst	w15, w13
  433b54:	b.ne	433b3c <feof@plt+0x30a5c>  // b.any
  433b58:	cmp	w14, #0x24
  433b5c:	b.ne	433b68 <feof@plt+0x30a88>  // b.any
  433b60:	ldrb	w14, [x8, #1146]
  433b64:	cbnz	w14, 433b3c <feof@plt+0x30a5c>
  433b68:	cmp	w9, #0x3e
  433b6c:	cset	w0, eq  // eq = none
  433b70:	ret
  433b74:	orr	w8, w9, #0x2
  433b78:	cmp	w8, #0x37
  433b7c:	cset	w8, eq  // eq = none
  433b80:	cmp	w10, #0x2e
  433b84:	cset	w9, eq  // eq = none
  433b88:	cmp	w10, #0x2b
  433b8c:	orr	w8, w8, w9
  433b90:	cset	w9, eq  // eq = none
  433b94:	cmp	w10, #0x2d
  433b98:	orr	w8, w9, w8
  433b9c:	cset	w9, eq  // eq = none
  433ba0:	orr	w0, w9, w8
  433ba4:	ret
  433ba8:	ldr	x10, [x1, #16]
  433bac:	cmp	w9, #0x35
  433bb0:	ldrb	w10, [x10]
  433bb4:	b.ne	433bc0 <feof@plt+0x30ae0>  // b.any
  433bb8:	cmp	w10, #0x5c
  433bbc:	b.eq	4339cc <feof@plt+0x308ec>  // b.none
  433bc0:	cmp	w10, #0x40
  433bc4:	mov	w0, wzr
  433bc8:	b.ne	433be4 <feof@plt+0x30b04>  // b.any
  433bcc:	ldrb	w8, [x8, #1122]
  433bd0:	cbz	w8, 433be4 <feof@plt+0x30b04>
  433bd4:	cmp	w9, #0x35
  433bd8:	cset	w8, eq  // eq = none
  433bdc:	cmp	w9, #0x3e
  433be0:	b	433ac8 <feof@plt+0x309e8>
  433be4:	ret
  433be8:	stp	x29, x30, [sp, #-48]!
  433bec:	stp	x22, x21, [sp, #16]
  433bf0:	stp	x20, x19, [sp, #32]
  433bf4:	mov	x29, sp
  433bf8:	mov	x19, x1
  433bfc:	mov	x20, x0
  433c00:	bl	4385d0 <feof@plt+0x354f0>
  433c04:	ldrb	w8, [x0, #4]
  433c08:	cmp	w8, #0x16
  433c0c:	b.ne	433c3c <feof@plt+0x30b5c>  // b.any
  433c10:	ldp	x8, x9, [x19, #40]
  433c14:	cmp	x8, x9
  433c18:	b.cs	433c9c <feof@plt+0x30bbc>  // b.hs, b.nlast
  433c1c:	add	x9, x8, #0x1
  433c20:	mov	w10, #0xa                   	// #10
  433c24:	str	x9, [x19, #40]
  433c28:	strb	w10, [x8]
  433c2c:	ldp	x20, x19, [sp, #32]
  433c30:	ldp	x22, x21, [sp, #16]
  433c34:	ldp	x29, x30, [sp], #48
  433c38:	ret
  433c3c:	mov	x21, x0
  433c40:	mov	w22, #0x20                  	// #32
  433c44:	b	433c60 <feof@plt+0x30b80>
  433c48:	add	x9, x8, #0x1
  433c4c:	str	x9, [x19, #40]
  433c50:	strb	w22, [x8]
  433c54:	ldrb	w8, [x21, #4]
  433c58:	cmp	w8, #0x16
  433c5c:	b.eq	433c10 <feof@plt+0x30b30>  // b.none
  433c60:	mov	x0, x21
  433c64:	mov	x1, x19
  433c68:	bl	4336fc <feof@plt+0x3061c>
  433c6c:	mov	x0, x20
  433c70:	bl	4385d0 <feof@plt+0x354f0>
  433c74:	ldrb	w8, [x0, #6]
  433c78:	mov	x21, x0
  433c7c:	tbz	w8, #0, 433c54 <feof@plt+0x30b74>
  433c80:	ldp	x8, x9, [x19, #40]
  433c84:	cmp	x8, x9
  433c88:	b.cc	433c48 <feof@plt+0x30b68>  // b.lo, b.ul, b.last
  433c8c:	mov	w1, #0x20                  	// #32
  433c90:	mov	x0, x19
  433c94:	bl	402ad0 <__overflow@plt>
  433c98:	b	433c54 <feof@plt+0x30b74>
  433c9c:	mov	x0, x19
  433ca0:	ldp	x20, x19, [sp, #32]
  433ca4:	ldp	x22, x21, [sp, #16]
  433ca8:	mov	w1, #0xa                   	// #10
  433cac:	ldp	x29, x30, [sp], #48
  433cb0:	b	402ad0 <__overflow@plt>
  433cb4:	stp	x29, x30, [sp, #-80]!
  433cb8:	stp	x20, x19, [sp, #64]
  433cbc:	mov	x19, x0
  433cc0:	str	x25, [sp, #16]
  433cc4:	stp	x24, x23, [sp, #32]
  433cc8:	stp	x22, x21, [sp, #48]
  433ccc:	mov	x29, sp
  433cd0:	cbz	x1, 433d0c <feof@plt+0x30c2c>
  433cd4:	mov	x0, x1
  433cd8:	mov	x22, x1
  433cdc:	bl	402a50 <strlen@plt>
  433ce0:	mov	x23, x0
  433ce4:	add	w20, w23, #0x78
  433ce8:	mov	x0, x20
  433cec:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  433cf0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  433cf4:	add	x1, x1, #0x5c
  433cf8:	mov	x2, x22
  433cfc:	mov	x21, x0
  433d00:	bl	402c30 <sprintf@plt>
  433d04:	add	w23, w23, #0x2
  433d08:	b	433d20 <feof@plt+0x30c40>
  433d0c:	mov	w0, #0x78                  	// #120
  433d10:	mov	w20, #0x78                  	// #120
  433d14:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  433d18:	mov	x21, x0
  433d1c:	mov	w23, wzr
  433d20:	mov	x0, x19
  433d24:	bl	4385d0 <feof@plt+0x354f0>
  433d28:	ldrb	w8, [x0, #4]
  433d2c:	cmp	w8, #0x16
  433d30:	b.ne	433d54 <feof@plt+0x30c74>  // b.any
  433d34:	strb	wzr, [x21, w23, uxtw]
  433d38:	mov	x0, x21
  433d3c:	ldp	x20, x19, [sp, #64]
  433d40:	ldp	x22, x21, [sp, #48]
  433d44:	ldp	x24, x23, [sp, #32]
  433d48:	ldr	x25, [sp, #16]
  433d4c:	ldp	x29, x30, [sp], #80
  433d50:	ret
  433d54:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0xd838>
  433d58:	mov	x22, x0
  433d5c:	add	x24, x24, #0x918
  433d60:	mov	w25, #0x20                  	// #32
  433d64:	b	433d74 <feof@plt+0x30c94>
  433d68:	ldrb	w8, [x22, #4]
  433d6c:	cmp	w8, #0x16
  433d70:	b.eq	433d34 <feof@plt+0x30c54>  // b.none
  433d74:	and	x8, x8, #0xff
  433d78:	lsl	x8, x8, #4
  433d7c:	ldr	w8, [x24, x8]
  433d80:	cmp	w8, #0x1
  433d84:	b.eq	433d98 <feof@plt+0x30cb8>  // b.none
  433d88:	cmp	w8, #0x2
  433d8c:	b.ne	433dac <feof@plt+0x30ccc>  // b.any
  433d90:	ldr	w8, [x22, #8]
  433d94:	b	433db0 <feof@plt+0x30cd0>
  433d98:	ldr	x8, [x22, #8]
  433d9c:	ldr	w8, [x8, #8]
  433da0:	add	w8, w8, w8, lsl #2
  433da4:	lsl	w8, w8, #1
  433da8:	b	433db0 <feof@plt+0x30cd0>
  433dac:	mov	w8, #0x6                   	// #6
  433db0:	add	w8, w23, w8
  433db4:	add	w8, w8, #0x2
  433db8:	cmp	w8, w20
  433dbc:	b.ls	433ddc <feof@plt+0x30cfc>  // b.plast
  433dc0:	lsl	w9, w20, #1
  433dc4:	cmp	w8, w9
  433dc8:	csel	w20, w8, w9, hi  // hi = pmore
  433dcc:	mov	x0, x21
  433dd0:	mov	x1, x20
  433dd4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  433dd8:	mov	x21, x0
  433ddc:	add	x2, x21, w23, uxtw
  433de0:	mov	x0, x19
  433de4:	mov	x1, x22
  433de8:	mov	w3, wzr
  433dec:	bl	4333ec <feof@plt+0x3030c>
  433df0:	sub	x23, x0, x21
  433df4:	mov	x0, x19
  433df8:	bl	4385d0 <feof@plt+0x354f0>
  433dfc:	ldrb	w8, [x0, #6]
  433e00:	mov	x22, x0
  433e04:	tbz	w8, #0, 433d68 <feof@plt+0x30c88>
  433e08:	add	w8, w23, #0x1
  433e0c:	strb	w25, [x21, w23, uxtw]
  433e10:	mov	w23, w8
  433e14:	b	433d68 <feof@plt+0x30c88>
  433e18:	mov	x9, x1
  433e1c:	mov	x8, x9
  433e20:	ldr	x9, [x9]
  433e24:	cbnz	x9, 433e1c <feof@plt+0x30d3c>
  433e28:	ldr	x9, [x0, #72]
  433e2c:	str	x9, [x8]
  433e30:	str	x1, [x0, #72]
  433e34:	ret
  433e38:	stp	x29, x30, [sp, #-32]!
  433e3c:	str	x19, [sp, #16]
  433e40:	mov	x8, x0
  433e44:	ldr	x0, [x8, #72]!
  433e48:	mov	x29, sp
  433e4c:	cbz	x0, 433e94 <feof@plt+0x30db4>
  433e50:	mov	x9, x0
  433e54:	ldr	x11, [x9, #8]!
  433e58:	add	x10, x1, x1, lsl #1
  433e5c:	mov	w13, #0x1f40                	// #8000
  433e60:	add	x10, x13, x10, lsr #1
  433e64:	ldr	x12, [x9, #16]
  433e68:	sub	x11, x12, x11
  433e6c:	cmp	x11, x1
  433e70:	ccmp	x11, x10, #0x2, cs  // cs = hs, nlast
  433e74:	b.ls	433ec4 <feof@plt+0x30de4>  // b.plast
  433e78:	mov	x8, x0
  433e7c:	ldr	x0, [x0]
  433e80:	cbz	x0, 433e94 <feof@plt+0x30db4>
  433e84:	mov	x9, x0
  433e88:	ldr	x11, [x9, #8]!
  433e8c:	ldr	x12, [x9, #16]
  433e90:	b	433e68 <feof@plt+0x30d88>
  433e94:	mov	w8, #0x1f40                	// #8000
  433e98:	cmp	x1, x8
  433e9c:	csel	x8, x1, x8, hi  // hi = pmore
  433ea0:	add	x8, x8, #0x7
  433ea4:	and	x19, x8, #0xfffffffffffffff8
  433ea8:	add	x0, x19, #0x20
  433eac:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  433eb0:	mov	x8, x0
  433eb4:	add	x0, x0, x19
  433eb8:	stp	x8, x0, [x0, #16]
  433ebc:	stp	xzr, x8, [x0]
  433ec0:	b	433ed8 <feof@plt+0x30df8>
  433ec4:	ldr	x10, [x0]
  433ec8:	str	x10, [x8]
  433ecc:	str	xzr, [x0]
  433ed0:	ldr	x8, [x9]
  433ed4:	str	x8, [x0, #16]
  433ed8:	ldr	x19, [sp, #16]
  433edc:	ldp	x29, x30, [sp], #32
  433ee0:	ret
  433ee4:	stp	x29, x30, [sp, #-32]!
  433ee8:	stp	x20, x19, [sp, #16]
  433eec:	ldp	x9, x8, [x1, #16]
  433ef0:	ldr	x20, [x0, #72]!
  433ef4:	mov	x19, x1
  433ef8:	mov	x29, sp
  433efc:	sub	x8, x8, x9
  433f00:	add	x8, x2, x8, lsl #1
  433f04:	cbz	x20, 433f54 <feof@plt+0x30e74>
  433f08:	ldr	x9, [x20, #24]
  433f0c:	ldr	x10, [x20, #8]
  433f10:	add	x11, x8, x8, lsl #1
  433f14:	mov	w12, #0x1f40                	// #8000
  433f18:	sub	x10, x9, x10
  433f1c:	cmp	x10, x8
  433f20:	add	x9, x12, x11, lsr #1
  433f24:	b.cc	433f30 <feof@plt+0x30e50>  // b.lo, b.ul, b.last
  433f28:	cmp	x10, x9
  433f2c:	b.ls	433f80 <feof@plt+0x30ea0>  // b.plast
  433f30:	mov	x0, x20
  433f34:	ldr	x20, [x20]
  433f38:	cbz	x20, 433f54 <feof@plt+0x30e74>
  433f3c:	ldr	x10, [x20, #24]
  433f40:	ldr	x11, [x20, #8]
  433f44:	sub	x10, x10, x11
  433f48:	cmp	x10, x8
  433f4c:	b.cs	433f28 <feof@plt+0x30e48>  // b.hs, b.nlast
  433f50:	b	433f30 <feof@plt+0x30e50>
  433f54:	mov	w9, #0x1f40                	// #8000
  433f58:	cmp	x8, x9
  433f5c:	csel	x8, x8, x9, hi  // hi = pmore
  433f60:	add	x8, x8, #0x7
  433f64:	and	x20, x8, #0xfffffffffffffff8
  433f68:	add	x0, x20, #0x20
  433f6c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  433f70:	add	x20, x0, x20
  433f74:	stp	x0, x20, [x20, #16]
  433f78:	stp	xzr, x0, [x20]
  433f7c:	b	433f94 <feof@plt+0x30eb4>
  433f80:	ldr	x8, [x20]
  433f84:	str	x8, [x0]
  433f88:	ldr	x8, [x20, #8]
  433f8c:	str	xzr, [x20]
  433f90:	str	x8, [x20, #16]
  433f94:	str	x20, [x19]
  433f98:	ldp	x1, x8, [x19, #16]
  433f9c:	ldr	x0, [x20, #8]
  433fa0:	sub	x2, x8, x1
  433fa4:	bl	4029c0 <memcpy@plt>
  433fa8:	mov	x0, x20
  433fac:	ldp	x20, x19, [sp, #16]
  433fb0:	ldp	x29, x30, [sp], #32
  433fb4:	ret
  433fb8:	stp	x29, x30, [sp, #-48]!
  433fbc:	stp	x20, x19, [sp, #32]
  433fc0:	ldr	x20, [x1]
  433fc4:	str	x21, [sp, #16]
  433fc8:	mov	x19, x1
  433fcc:	mov	x29, sp
  433fd0:	ldp	x9, x8, [x20, #16]
  433fd4:	ldr	x21, [x0, #72]!
  433fd8:	sub	x8, x8, x9
  433fdc:	add	x8, x2, x8, lsl #1
  433fe0:	cbz	x21, 434030 <feof@plt+0x30f50>
  433fe4:	ldr	x9, [x21, #24]
  433fe8:	ldr	x10, [x21, #8]
  433fec:	add	x11, x8, x8, lsl #1
  433ff0:	mov	w12, #0x1f40                	// #8000
  433ff4:	sub	x10, x9, x10
  433ff8:	cmp	x10, x8
  433ffc:	add	x9, x12, x11, lsr #1
  434000:	b.cc	43400c <feof@plt+0x30f2c>  // b.lo, b.ul, b.last
  434004:	cmp	x10, x9
  434008:	b.ls	43405c <feof@plt+0x30f7c>  // b.plast
  43400c:	mov	x0, x21
  434010:	ldr	x21, [x21]
  434014:	cbz	x21, 434030 <feof@plt+0x30f50>
  434018:	ldr	x10, [x21, #24]
  43401c:	ldr	x11, [x21, #8]
  434020:	sub	x10, x10, x11
  434024:	cmp	x10, x8
  434028:	b.cs	434004 <feof@plt+0x30f24>  // b.hs, b.nlast
  43402c:	b	43400c <feof@plt+0x30f2c>
  434030:	mov	w9, #0x1f40                	// #8000
  434034:	cmp	x8, x9
  434038:	csel	x8, x8, x9, hi  // hi = pmore
  43403c:	add	x8, x8, #0x7
  434040:	and	x21, x8, #0xfffffffffffffff8
  434044:	add	x0, x21, #0x20
  434048:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43404c:	add	x21, x0, x21
  434050:	stp	x0, x21, [x21, #16]
  434054:	stp	xzr, x0, [x21]
  434058:	b	434070 <feof@plt+0x30f90>
  43405c:	ldr	x8, [x21]
  434060:	str	x8, [x0]
  434064:	ldr	x8, [x21, #8]
  434068:	str	xzr, [x21]
  43406c:	str	x8, [x21, #16]
  434070:	ldp	x1, x8, [x20, #16]
  434074:	ldr	x0, [x21, #8]
  434078:	sub	x2, x8, x1
  43407c:	bl	4029c0 <memcpy@plt>
  434080:	str	x20, [x21]
  434084:	str	x21, [x19]
  434088:	ldp	x20, x19, [sp, #32]
  43408c:	ldr	x21, [sp, #16]
  434090:	ldp	x29, x30, [sp], #48
  434094:	ret
  434098:	stp	x29, x30, [sp, #-32]!
  43409c:	str	x19, [sp, #16]
  4340a0:	mov	x29, sp
  4340a4:	cbz	x0, 4340b8 <feof@plt+0x30fd8>
  4340a8:	ldp	x19, x0, [x0]
  4340ac:	bl	402b20 <free@plt>
  4340b0:	mov	x0, x19
  4340b4:	cbnz	x19, 4340a8 <feof@plt+0x30fc8>
  4340b8:	ldr	x19, [sp, #16]
  4340bc:	ldp	x29, x30, [sp], #32
  4340c0:	ret
  4340c4:	stp	x29, x30, [sp, #-48]!
  4340c8:	stp	x20, x19, [sp, #32]
  4340cc:	ldr	x8, [x0, #56]
  4340d0:	str	x21, [sp, #16]
  4340d4:	mov	x20, x0
  4340d8:	mov	x19, x1
  4340dc:	ldp	x0, x9, [x8, #16]
  4340e0:	mov	x29, sp
  4340e4:	sub	x9, x9, x0
  4340e8:	cmp	x9, x1
  4340ec:	b.cs	434194 <feof@plt+0x310b4>  // b.hs, b.nlast
  4340f0:	mov	x9, x20
  4340f4:	ldr	x8, [x9, #72]!
  4340f8:	cbz	x8, 434148 <feof@plt+0x31068>
  4340fc:	ldr	x10, [x8, #24]
  434100:	ldr	x11, [x8, #8]
  434104:	add	x12, x19, x19, lsl #1
  434108:	mov	w13, #0x1f40                	// #8000
  43410c:	sub	x11, x10, x11
  434110:	cmp	x11, x19
  434114:	add	x10, x13, x12, lsr #1
  434118:	b.cc	434124 <feof@plt+0x31044>  // b.lo, b.ul, b.last
  43411c:	cmp	x11, x10
  434120:	b.ls	434174 <feof@plt+0x31094>  // b.plast
  434124:	mov	x9, x8
  434128:	ldr	x8, [x8]
  43412c:	cbz	x8, 434148 <feof@plt+0x31068>
  434130:	ldr	x11, [x8, #24]
  434134:	ldr	x12, [x8, #8]
  434138:	sub	x11, x11, x12
  43413c:	cmp	x11, x19
  434140:	b.cs	43411c <feof@plt+0x3103c>  // b.hs, b.nlast
  434144:	b	434124 <feof@plt+0x31044>
  434148:	mov	w8, #0x1f40                	// #8000
  43414c:	cmp	x19, x8
  434150:	csel	x8, x19, x8, hi  // hi = pmore
  434154:	add	x8, x8, #0x7
  434158:	and	x21, x8, #0xfffffffffffffff8
  43415c:	add	x0, x21, #0x20
  434160:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  434164:	add	x8, x0, x21
  434168:	stp	x0, x8, [x8, #16]
  43416c:	stp	xzr, x0, [x8]
  434170:	b	434188 <feof@plt+0x310a8>
  434174:	ldr	x10, [x8]
  434178:	str	x10, [x9]
  43417c:	ldr	x0, [x8, #8]
  434180:	str	xzr, [x8]
  434184:	str	x0, [x8, #16]
  434188:	ldr	x9, [x20, #56]
  43418c:	str	x9, [x8]
  434190:	str	x8, [x20, #56]
  434194:	add	x9, x0, x19
  434198:	str	x9, [x8, #16]
  43419c:	ldp	x20, x19, [sp, #32]
  4341a0:	ldr	x21, [sp, #16]
  4341a4:	ldp	x29, x30, [sp], #48
  4341a8:	ret
  4341ac:	stp	x29, x30, [sp, #-48]!
  4341b0:	stp	x20, x19, [sp, #32]
  4341b4:	ldr	x8, [x0, #1088]
  4341b8:	ldr	x9, [x0, #56]
  4341bc:	mov	x20, x1
  4341c0:	str	x21, [sp, #16]
  4341c4:	ldr	x8, [x8, #104]
  4341c8:	ldr	x19, [x9, #16]
  4341cc:	mov	x29, sp
  4341d0:	cbz	x8, 4341f4 <feof@plt+0x31114>
  4341d4:	mov	x0, x20
  4341d8:	blr	x8
  4341dc:	mov	x1, x19
  4341e0:	mov	x2, x20
  4341e4:	mov	x21, x0
  4341e8:	bl	4029c0 <memcpy@plt>
  4341ec:	mov	x19, x21
  4341f0:	b	4341fc <feof@plt+0x3111c>
  4341f4:	add	x8, x19, x20
  4341f8:	str	x8, [x9, #16]
  4341fc:	mov	x0, x19
  434200:	ldp	x20, x19, [sp, #32]
  434204:	ldr	x21, [sp, #16]
  434208:	ldp	x29, x30, [sp], #48
  43420c:	ret
  434210:	ldrb	w8, [x0, #4]
  434214:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  434218:	add	x10, x10, #0x918
  43421c:	lsl	x9, x8, #4
  434220:	ldr	w9, [x10, x9]
  434224:	cmp	w9, #0x3
  434228:	b.hi	434284 <feof@plt+0x311a4>  // b.pmore
  43422c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0xd838>
  434230:	add	x10, x10, #0x90f
  434234:	adr	x11, 434248 <feof@plt+0x31168>
  434238:	ldrb	w12, [x10, x9]
  43423c:	add	x11, x11, x12, lsl #2
  434240:	mov	w0, wzr
  434244:	br	x11
  434248:	cmp	w8, #0x26
  43424c:	mov	w8, #0x6                   	// #6
  434250:	mov	w9, #0x4                   	// #4
  434254:	csel	w0, w9, w8, eq  // eq = none
  434258:	ret
  43425c:	mov	w0, #0x2                   	// #2
  434260:	ret
  434264:	sub	w8, w8, #0x50
  434268:	cmp	w8, #0x4
  43426c:	b.cs	434284 <feof@plt+0x311a4>  // b.hs, b.nlast
  434270:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0xd838>
  434274:	sxtb	x8, w8
  434278:	add	x9, x9, #0x710
  43427c:	ldr	w0, [x9, x8, lsl #2]
  434280:	ret
  434284:	mov	w0, #0x6                   	// #6
  434288:	ret
  43428c:	str	w1, [x0, #1408]
  434290:	ret
  434294:	str	wzr, [x0, #1408]
  434298:	ret
  43429c:	ldr	x0, [x0, #88]
  4342a0:	cbz	x0, 4342a8 <feof@plt+0x311c8>
  4342a4:	b	460754 <feof@plt+0x5d674>
  4342a8:	ret
  4342ac:	stp	x29, x30, [sp, #-48]!
  4342b0:	adrp	x1, 434000 <feof@plt+0x30f20>
  4342b4:	adrp	x2, 434000 <feof@plt+0x30f20>
  4342b8:	stp	x20, x19, [sp, #32]
  4342bc:	mov	x19, x0
  4342c0:	add	x1, x1, #0x340
  4342c4:	add	x2, x2, #0x35c
  4342c8:	mov	w0, #0x64                  	// #100
  4342cc:	mov	x3, xzr
  4342d0:	str	x21, [sp, #16]
  4342d4:	mov	x29, sp
  4342d8:	bl	460564 <feof@plt+0x5d484>
  4342dc:	ldr	w8, [x19, #96]
  4342e0:	str	x0, [x19, #88]
  4342e4:	cbz	w8, 434330 <feof@plt+0x31250>
  4342e8:	ldr	x1, [x19, #104]
  4342ec:	mov	w2, #0x1                   	// #1
  4342f0:	bl	460e5c <feof@plt+0x5dd7c>
  4342f4:	ldr	w8, [x19, #96]
  4342f8:	cmp	w8, #0x2
  4342fc:	b.cc	434330 <feof@plt+0x31250>  // b.lo, b.ul, b.last
  434300:	mov	w20, #0x1                   	// #1
  434304:	mov	w21, #0x18                  	// #24
  434308:	ldr	x8, [x19, #104]
  43430c:	ldr	x0, [x19, #88]
  434310:	mov	w2, #0x1                   	// #1
  434314:	add	x1, x8, x21
  434318:	bl	460e5c <feof@plt+0x5dd7c>
  43431c:	ldr	w8, [x19, #96]
  434320:	add	x20, x20, #0x1
  434324:	add	x21, x21, #0x18
  434328:	cmp	x20, x8
  43432c:	b.cc	434308 <feof@plt+0x31228>  // b.lo, b.ul, b.last
  434330:	ldp	x20, x19, [sp, #32]
  434334:	ldr	x21, [sp, #16]
  434338:	ldp	x29, x30, [sp], #48
  43433c:	ret
  434340:	ldp	w8, w9, [x0]
  434344:	ldr	w10, [x0, #8]
  434348:	ldr	w11, [x0, #16]
  43434c:	add	w8, w9, w8
  434350:	add	w8, w8, w10
  434354:	add	w0, w8, w11
  434358:	ret
  43435c:	ldr	w8, [x0]
  434360:	ldr	w9, [x1]
  434364:	cmp	w8, w9
  434368:	b.ne	4343a0 <feof@plt+0x312c0>  // b.any
  43436c:	ldr	w8, [x0, #4]
  434370:	ldr	w9, [x1, #4]
  434374:	cmp	w8, w9
  434378:	b.ne	4343a0 <feof@plt+0x312c0>  // b.any
  43437c:	ldr	w8, [x0, #8]
  434380:	ldr	w9, [x1, #8]
  434384:	cmp	w8, w9
  434388:	b.ne	4343a0 <feof@plt+0x312c0>  // b.any
  43438c:	ldr	x8, [x0, #16]
  434390:	ldr	x9, [x1, #16]
  434394:	cmp	x8, x9
  434398:	cset	w0, eq  // eq = none
  43439c:	ret
  4343a0:	mov	w0, wzr
  4343a4:	ret
  4343a8:	sub	sp, sp, #0x60
  4343ac:	stp	x22, x21, [sp, #64]
  4343b0:	stp	x20, x19, [sp, #80]
  4343b4:	mov	x21, x3
  4343b8:	mov	x20, x2
  4343bc:	mov	w22, w1
  4343c0:	mov	x19, x0
  4343c4:	stp	x29, x30, [sp, #32]
  4343c8:	stp	x24, x23, [sp, #48]
  4343cc:	add	x29, sp, #0x20
  4343d0:	tbnz	w1, #31, 4343dc <feof@plt+0x312fc>
  4343d4:	cbz	x21, 4343f4 <feof@plt+0x31314>
  4343d8:	b	434400 <feof@plt+0x31320>
  4343dc:	ldr	x8, [x19, #104]
  4343e0:	and	w9, w22, #0x7fffffff
  4343e4:	mov	w10, #0x18                  	// #24
  4343e8:	umull	x9, w9, w10
  4343ec:	ldr	w22, [x8, x9]
  4343f0:	cbnz	x21, 434400 <feof@plt+0x31320>
  4343f4:	cbnz	w22, 434400 <feof@plt+0x31320>
  4343f8:	mov	w23, wzr
  4343fc:	b	434598 <feof@plt+0x314b8>
  434400:	lsr	w8, w22, #28
  434404:	cmp	w8, #0x4
  434408:	lsr	x23, x20, #32
  43440c:	b.hi	434484 <feof@plt+0x313a4>  // b.pmore
  434410:	cmp	w20, #0x2
  434414:	b.cc	434484 <feof@plt+0x313a4>  // b.lo, b.ul, b.last
  434418:	subs	w24, w23, w20
  43441c:	b.cc	434484 <feof@plt+0x313a4>  // b.lo, b.ul, b.last
  434420:	cbnz	x21, 434484 <feof@plt+0x313a4>
  434424:	cmp	w22, w20
  434428:	b.ne	434484 <feof@plt+0x313a4>  // b.any
  43442c:	ldr	w8, [x19, #36]
  434430:	cbz	w8, 434450 <feof@plt+0x31370>
  434434:	ldr	x9, [x19, #24]
  434438:	sub	w8, w8, #0x1
  43443c:	sbfiz	x8, x8, #5, #32
  434440:	ldr	w8, [x9, x8]
  434444:	cmp	w8, w23
  434448:	b.hi	43445c <feof@plt+0x3137c>  // b.pmore
  43444c:	b	434484 <feof@plt+0x313a4>
  434450:	mov	w8, #0x80000000            	// #-2147483648
  434454:	cmp	w8, w23
  434458:	b.ls	434484 <feof@plt+0x313a4>  // b.plast
  43445c:	cmp	w8, w20
  434460:	b.ls	434484 <feof@plt+0x313a4>  // b.plast
  434464:	mov	x0, x19
  434468:	mov	w1, w20
  43446c:	bl	4345c8 <feof@plt+0x314e8>
  434470:	ldrh	w8, [x0, #6]
  434474:	lsr	x9, x8, #8
  434478:	lsr	w8, w24, w9
  43447c:	lsr	w9, w8, w9
  434480:	cbz	w9, 4345b4 <feof@plt+0x314d4>
  434484:	cmp	w22, w20
  434488:	b.ne	434498 <feof@plt+0x313b8>  // b.any
  43448c:	cbnz	x21, 434498 <feof@plt+0x313b8>
  434490:	cmp	w22, w23
  434494:	b.eq	434598 <feof@plt+0x314b8>  // b.none
  434498:	cbnz	x21, 4344a8 <feof@plt+0x313c8>
  43449c:	ldr	w8, [x19, #128]
  4344a0:	add	w8, w8, #0x1
  4344a4:	str	w8, [x19, #128]
  4344a8:	stp	w22, w20, [sp, #8]
  4344ac:	str	w23, [sp, #16]
  4344b0:	str	x21, [sp, #24]
  4344b4:	ldr	x0, [x19, #88]
  4344b8:	add	x1, sp, #0x8
  4344bc:	mov	w2, #0x1                   	// #1
  4344c0:	bl	460e5c <feof@plt+0x5dd7c>
  4344c4:	ldr	x8, [x0]
  4344c8:	cbnz	x8, 43457c <feof@plt+0x3149c>
  4344cc:	ldp	w8, w9, [x19, #96]
  4344d0:	mov	x20, x0
  4344d4:	cmp	w8, w9
  4344d8:	b.cc	434548 <feof@plt+0x31468>  // b.lo, b.ul, b.last
  4344dc:	ldr	x8, [x19, #72]
  4344e0:	ldr	x21, [x19, #104]
  4344e4:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x838>
  4344e8:	add	x10, x10, #0x24c
  4344ec:	cmp	x8, #0x0
  4344f0:	lsl	w11, w9, #1
  4344f4:	mov	w12, #0x80                  	// #128
  4344f8:	csel	x8, x10, x8, eq  // eq = none
  4344fc:	cmp	w9, #0x0
  434500:	mov	w13, #0x18                  	// #24
  434504:	csel	w9, w12, w11, eq  // eq = none
  434508:	umull	x1, w9, w13
  43450c:	mov	x0, x21
  434510:	str	w9, [x19, #100]
  434514:	blr	x8
  434518:	sub	x8, x0, x21
  43451c:	str	x0, [x19, #104]
  434520:	str	x8, [sp]
  434524:	ldr	w8, [x19, #100]
  434528:	cmp	w8, #0x81
  43452c:	b.cc	434544 <feof@plt+0x31464>  // b.lo, b.ul, b.last
  434530:	ldr	x0, [x19, #88]
  434534:	adrp	x1, 434000 <feof@plt+0x30f20>
  434538:	add	x1, x1, #0x768
  43453c:	mov	x2, sp
  434540:	bl	461028 <feof@plt+0x5df48>
  434544:	ldr	w8, [x19, #96]
  434548:	ldr	x9, [x19, #104]
  43454c:	mov	w10, #0x18                  	// #24
  434550:	add	w11, w8, #0x1
  434554:	umaddl	x9, w8, w10, x9
  434558:	str	x9, [x20]
  43455c:	str	w11, [x19, #96]
  434560:	ldr	x9, [x19, #104]
  434564:	ldr	x11, [sp, #24]
  434568:	ldur	q0, [sp, #8]
  43456c:	umaddl	x8, w8, w10, x9
  434570:	str	x11, [x8, #16]
  434574:	str	q0, [x8]
  434578:	ldr	x8, [x20]
  43457c:	ldr	x9, [x19, #104]
  434580:	sub	x8, x8, x9
  434584:	mov	w9, #0xaaab                	// #43691
  434588:	lsr	x8, x8, #3
  43458c:	movk	w9, #0xaaaa, lsl #16
  434590:	mul	w8, w8, w9
  434594:	orr	w23, w8, #0x80000000
  434598:	mov	w0, w23
  43459c:	ldp	x20, x19, [sp, #80]
  4345a0:	ldp	x22, x21, [sp, #64]
  4345a4:	ldp	x24, x23, [sp, #48]
  4345a8:	ldp	x29, x30, [sp, #32]
  4345ac:	add	sp, sp, #0x60
  4345b0:	ret
  4345b4:	ldr	w9, [x19, #124]
  4345b8:	orr	w23, w8, w20
  4345bc:	add	w8, w9, #0x1
  4345c0:	str	w8, [x19, #124]
  4345c4:	b	434598 <feof@plt+0x314b8>
  4345c8:	tbz	w1, #31, 4345e4 <feof@plt+0x31504>
  4345cc:	ldr	x8, [x0, #104]
  4345d0:	and	w9, w1, #0x7fffffff
  4345d4:	mov	w10, #0x18                  	// #24
  4345d8:	umull	x9, w9, w10
  4345dc:	ldr	w1, [x8, x9]
  4345e0:	tbnz	w1, #31, 4346d8 <feof@plt+0x315f8>
  4345e4:	mov	w8, wzr
  4345e8:	mov	w9, w1
  4345ec:	lsr	w10, w9, #28
  4345f0:	cmp	w10, #0x7
  4345f4:	b.cc	434618 <feof@plt+0x31538>  // b.lo, b.ul, b.last
  4345f8:	tbnz	w9, #31, 434618 <feof@plt+0x31538>
  4345fc:	cbz	w8, 434664 <feof@plt+0x31584>
  434600:	ldr	x8, [x0, #104]
  434604:	and	w9, w1, #0x7fffffff
  434608:	mov	w10, #0x18                  	// #24
  43460c:	umull	x9, w9, w10
  434610:	ldr	w1, [x8, x9]
  434614:	b	434668 <feof@plt+0x31588>
  434618:	cbz	w8, 434630 <feof@plt+0x31550>
  43461c:	ldr	x8, [x0, #104]
  434620:	and	w9, w1, #0x7fffffff
  434624:	mov	w10, #0x18                  	// #24
  434628:	umull	x9, w9, w10
  43462c:	ldr	w1, [x8, x9]
  434630:	mov	x8, xzr
  434634:	cbz	x0, 434758 <feof@plt+0x31678>
  434638:	cmp	w1, #0x2
  43463c:	b.cc	434758 <feof@plt+0x31678>  // b.lo, b.ul, b.last
  434640:	ldrsw	x10, [x0, #16]
  434644:	ldr	x9, [x0]
  434648:	mov	w8, #0x18                  	// #24
  43464c:	madd	x8, x10, x8, x9
  434650:	ldr	w11, [x8]
  434654:	cmp	w1, w11
  434658:	b.cs	4346f0 <feof@plt+0x31610>  // b.hs, b.nlast
  43465c:	mov	w11, wzr
  434660:	b	434714 <feof@plt+0x31634>
  434664:	cbz	x0, 434760 <feof@plt+0x31680>
  434668:	ldrsw	x10, [x0, #40]
  43466c:	ldr	x9, [x0, #24]
  434670:	add	x8, x9, x10, lsl #5
  434674:	ldr	w11, [x8]
  434678:	cmp	w1, w11
  43467c:	b.cs	434688 <feof@plt+0x315a8>  // b.hs, b.nlast
  434680:	ldr	w8, [x0, #36]
  434684:	b	4346c0 <feof@plt+0x315e0>
  434688:	cbz	w10, 434758 <feof@plt+0x31678>
  43468c:	ldur	w11, [x8, #-32]
  434690:	cmp	w1, w11
  434694:	b.cc	434758 <feof@plt+0x31678>  // b.lo, b.ul, b.last
  434698:	sub	w8, w10, #0x1
  43469c:	mov	w10, wzr
  4346a0:	b	4346c0 <feof@plt+0x315e0>
  4346a4:	add	w11, w10, w8
  4346a8:	lsr	w11, w11, #1
  4346ac:	lsl	x12, x11, #5
  4346b0:	ldr	w12, [x9, x12]
  4346b4:	cmp	w12, w1
  4346b8:	csinc	w10, w10, w11, ls  // ls = plast
  4346bc:	csel	w8, w8, w11, hi  // hi = pmore
  4346c0:	cmp	w10, w8
  4346c4:	b.cc	4346a4 <feof@plt+0x315c4>  // b.lo, b.ul, b.last
  4346c8:	str	w8, [x0, #40]
  4346cc:	sxtw	x8, w8
  4346d0:	add	x0, x9, x8, lsl #5
  4346d4:	ret
  4346d8:	and	x9, x1, #0x7fffffff
  4346dc:	mov	w10, #0x18                  	// #24
  4346e0:	mul	x9, x9, x10
  4346e4:	ldr	w9, [x8, x9]
  4346e8:	mov	w8, #0x1                   	// #1
  4346ec:	b	4345ec <feof@plt+0x3150c>
  4346f0:	ldr	w12, [x0, #12]
  4346f4:	add	w11, w10, #0x1
  4346f8:	cmp	w11, w12
  4346fc:	b.eq	434758 <feof@plt+0x31678>  // b.none
  434700:	ldr	w11, [x8, #24]
  434704:	cmp	w1, w11
  434708:	mov	w11, w10
  43470c:	mov	w10, w12
  434710:	b.cc	434758 <feof@plt+0x31678>  // b.lo, b.ul, b.last
  434714:	sub	w8, w10, w11
  434718:	cmp	w8, #0x2
  43471c:	b.cc	43474c <feof@plt+0x3166c>  // b.lo, b.ul, b.last
  434720:	mov	w8, #0x18                  	// #24
  434724:	add	w12, w11, w10
  434728:	lsr	w12, w12, #1
  43472c:	umull	x13, w12, w8
  434730:	ldr	w13, [x9, x13]
  434734:	cmp	w13, w1
  434738:	csel	w11, w11, w12, hi  // hi = pmore
  43473c:	csel	w10, w12, w10, hi  // hi = pmore
  434740:	sub	w12, w10, w11
  434744:	cmp	w12, #0x1
  434748:	b.hi	434724 <feof@plt+0x31644>  // b.pmore
  43474c:	mov	w8, #0x18                  	// #24
  434750:	smaddl	x8, w11, w8, x9
  434754:	str	w11, [x0, #16]
  434758:	mov	x0, x8
  43475c:	ret
  434760:	mov	x0, xzr
  434764:	ret
  434768:	ldr	x9, [x0]
  43476c:	ldr	x10, [x1]
  434770:	mov	x8, x0
  434774:	mov	w0, #0x1                   	// #1
  434778:	add	x9, x10, x9
  43477c:	str	x9, [x8]
  434780:	ret
  434784:	ldr	x8, [x0, #104]
  434788:	and	w9, w1, #0x7fffffff
  43478c:	mov	w10, #0x18                  	// #24
  434790:	umaddl	x8, w9, w10, x8
  434794:	ldr	x0, [x8, #16]
  434798:	ret
  43479c:	ldr	x8, [x0, #104]
  4347a0:	and	w9, w1, #0x7fffffff
  4347a4:	mov	w10, #0x18                  	// #24
  4347a8:	umull	x9, w9, w10
  4347ac:	ldr	w0, [x8, x9]
  4347b0:	ret
  4347b4:	stp	x29, x30, [sp, #-32]!
  4347b8:	str	x19, [sp, #16]
  4347bc:	mov	w19, w1
  4347c0:	mov	x29, sp
  4347c4:	tbnz	w1, #31, 4347ec <feof@plt+0x3170c>
  4347c8:	cmp	w19, #0x2
  4347cc:	b.cc	434848 <feof@plt+0x31768>  // b.lo, b.ul, b.last
  4347d0:	ldr	w8, [x0, #36]
  4347d4:	cbz	w8, 434804 <feof@plt+0x31724>
  4347d8:	ldr	x9, [x0, #24]
  4347dc:	sub	w8, w8, #0x1
  4347e0:	sbfiz	x8, x8, #5, #32
  4347e4:	ldr	w8, [x9, x8]
  4347e8:	b	434808 <feof@plt+0x31728>
  4347ec:	ldr	x8, [x0, #104]
  4347f0:	and	w9, w19, #0x7fffffff
  4347f4:	mov	w10, #0x18                  	// #24
  4347f8:	umaddl	x8, w9, w10, x8
  4347fc:	ldp	w19, w8, [x8, #4]
  434800:	b	43484c <feof@plt+0x3176c>
  434804:	mov	w8, #0x80000000            	// #-2147483648
  434808:	mov	w9, #0x50000000            	// #1342177280
  43480c:	cmp	w19, w9
  434810:	b.hi	434848 <feof@plt+0x31768>  // b.pmore
  434814:	cmp	w8, w19
  434818:	b.ls	434848 <feof@plt+0x31768>  // b.plast
  43481c:	mov	w1, w19
  434820:	bl	4345c8 <feof@plt+0x314e8>
  434824:	ldrh	w8, [x0, #6]
  434828:	mov	w9, #0xffffffff            	// #-1
  43482c:	lsr	x8, x8, #8
  434830:	lsl	w9, w9, w8
  434834:	bic	w9, w19, w9
  434838:	sub	w19, w19, w9
  43483c:	lsl	w8, w9, w8
  434840:	add	w8, w19, w8
  434844:	b	43484c <feof@plt+0x3176c>
  434848:	mov	w8, w19
  43484c:	mov	w0, w19
  434850:	ldr	x19, [sp, #16]
  434854:	bfi	x0, x8, #32, #32
  434858:	ldp	x29, x30, [sp], #32
  43485c:	ret
  434860:	stp	x29, x30, [sp, #-32]!
  434864:	str	x19, [sp, #16]
  434868:	mov	x29, sp
  43486c:	tbnz	w1, #31, 434894 <feof@plt+0x317b4>
  434870:	mov	w19, w1
  434874:	bl	4345c8 <feof@plt+0x314e8>
  434878:	cbz	x0, 43489c <feof@plt+0x317bc>
  43487c:	ldrb	w8, [x0, #7]
  434880:	mov	w9, #0xffffffff            	// #-1
  434884:	lsl	w8, w9, w8
  434888:	bics	wzr, w19, w8
  43488c:	cset	w0, eq  // eq = none
  434890:	b	4348a0 <feof@plt+0x317c0>
  434894:	mov	w0, wzr
  434898:	b	4348a0 <feof@plt+0x317c0>
  43489c:	mov	w0, #0x1                   	// #1
  4348a0:	ldr	x19, [sp, #16]
  4348a4:	ldp	x29, x30, [sp], #32
  4348a8:	ret
  4348ac:	stp	x29, x30, [sp, #-32]!
  4348b0:	str	x19, [sp, #16]
  4348b4:	mov	w19, w1
  4348b8:	mov	x29, sp
  4348bc:	tbnz	w1, #31, 4348e4 <feof@plt+0x31804>
  4348c0:	ldr	w8, [x0, #36]
  4348c4:	cbz	w8, 434900 <feof@plt+0x31820>
  4348c8:	ldr	x9, [x0, #24]
  4348cc:	sub	w8, w8, #0x1
  4348d0:	sbfiz	x8, x8, #5, #32
  4348d4:	ldr	w8, [x9, x8]
  4348d8:	cmp	w19, #0x2
  4348dc:	b.cs	43490c <feof@plt+0x3182c>  // b.hs, b.nlast
  4348e0:	b	43492c <feof@plt+0x3184c>
  4348e4:	ldr	x8, [x0, #104]
  4348e8:	and	w9, w19, #0x7fffffff
  4348ec:	mov	w10, #0x18                  	// #24
  4348f0:	umull	x9, w9, w10
  4348f4:	ldr	w19, [x8, x9]
  4348f8:	ldr	w8, [x0, #36]
  4348fc:	cbnz	w8, 4348c8 <feof@plt+0x317e8>
  434900:	mov	w8, #0x80000000            	// #-2147483648
  434904:	cmp	w19, #0x2
  434908:	b.cc	43492c <feof@plt+0x3184c>  // b.lo, b.ul, b.last
  43490c:	cmp	w19, w8
  434910:	b.cs	43492c <feof@plt+0x3184c>  // b.hs, b.nlast
  434914:	mov	w1, w19
  434918:	bl	4345c8 <feof@plt+0x314e8>
  43491c:	ldrb	w8, [x0, #7]
  434920:	mov	w9, #0xffffffff            	// #-1
  434924:	lsl	w8, w9, w8
  434928:	and	w19, w8, w19
  43492c:	mov	w0, w19
  434930:	ldr	x19, [sp, #16]
  434934:	ldp	x29, x30, [sp], #32
  434938:	ret
  43493c:	stp	x29, x30, [sp, #-32]!
  434940:	movi	v0.2d, #0x0
  434944:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x838>
  434948:	stp	x20, x19, [sp, #16]
  43494c:	mov	w19, w1
  434950:	add	x8, x8, #0x24c
  434954:	stp	q0, q0, [x0, #96]
  434958:	stp	q0, q0, [x0, #64]
  43495c:	stp	q0, q0, [x0, #32]
  434960:	stp	q0, q0, [x0]
  434964:	movi	v0.2s, #0x1
  434968:	adrp	x1, 434000 <feof@plt+0x30f20>
  43496c:	adrp	x2, 434000 <feof@plt+0x30f20>
  434970:	mov	x20, x0
  434974:	str	xzr, [x0, #128]
  434978:	str	x8, [x0, #72]
  43497c:	str	d0, [x0, #56]
  434980:	add	x1, x1, #0x340
  434984:	add	x2, x2, #0x35c
  434988:	mov	w0, #0x64                  	// #100
  43498c:	mov	x3, xzr
  434990:	mov	x29, sp
  434994:	bl	460564 <feof@plt+0x5d484>
  434998:	str	x0, [x20, #88]
  43499c:	str	w19, [x20, #112]
  4349a0:	ldp	x20, x19, [sp, #16]
  4349a4:	ldp	x29, x30, [sp], #32
  4349a8:	ret
  4349ac:	ldr	w9, [x1, #20]
  4349b0:	tbz	w9, #31, 4349c8 <feof@plt+0x318e8>
  4349b4:	ldr	x8, [x0, #104]
  4349b8:	and	x9, x9, #0x7fffffff
  4349bc:	mov	w10, #0x18                  	// #24
  4349c0:	mul	x9, x9, x10
  4349c4:	ldr	w9, [x8, x9]
  4349c8:	mov	x8, xzr
  4349cc:	cbz	x0, 434a64 <feof@plt+0x31984>
  4349d0:	cmp	w9, #0x2
  4349d4:	b.cc	434a64 <feof@plt+0x31984>  // b.lo, b.ul, b.last
  4349d8:	ldrsw	x11, [x0, #16]
  4349dc:	ldr	x10, [x0]
  4349e0:	mov	w8, #0x18                  	// #24
  4349e4:	madd	x8, x11, x8, x10
  4349e8:	ldr	w12, [x8]
  4349ec:	cmp	w9, w12
  4349f0:	b.cs	4349fc <feof@plt+0x3191c>  // b.hs, b.nlast
  4349f4:	mov	w12, wzr
  4349f8:	b	434a20 <feof@plt+0x31940>
  4349fc:	ldr	w13, [x0, #12]
  434a00:	add	w12, w11, #0x1
  434a04:	cmp	w12, w13
  434a08:	b.eq	434a64 <feof@plt+0x31984>  // b.none
  434a0c:	ldr	w12, [x8, #24]
  434a10:	cmp	w9, w12
  434a14:	mov	w12, w11
  434a18:	mov	w11, w13
  434a1c:	b.cc	434a64 <feof@plt+0x31984>  // b.lo, b.ul, b.last
  434a20:	sub	w8, w11, w12
  434a24:	cmp	w8, #0x2
  434a28:	b.cc	434a58 <feof@plt+0x31978>  // b.lo, b.ul, b.last
  434a2c:	mov	w8, #0x18                  	// #24
  434a30:	add	w13, w12, w11
  434a34:	lsr	w13, w13, #1
  434a38:	umull	x14, w13, w8
  434a3c:	ldr	w14, [x10, x14]
  434a40:	cmp	w14, w9
  434a44:	csel	w12, w12, w13, hi  // hi = pmore
  434a48:	csel	w11, w13, w11, hi  // hi = pmore
  434a4c:	sub	w13, w11, w12
  434a50:	cmp	w13, #0x1
  434a54:	b.hi	434a30 <feof@plt+0x31950>  // b.pmore
  434a58:	mov	w8, #0x18                  	// #24
  434a5c:	smaddl	x8, w12, w8, x10
  434a60:	str	w12, [x0, #16]
  434a64:	mov	x0, x8
  434a68:	ret
  434a6c:	stp	x29, x30, [sp, #-64]!
  434a70:	stp	x22, x21, [sp, #32]
  434a74:	stp	x20, x19, [sp, #48]
  434a78:	ldr	w8, [x0, #12]
  434a7c:	ldr	x9, [x0]
  434a80:	mov	w21, #0x18                  	// #24
  434a84:	str	x23, [sp, #16]
  434a88:	sub	w8, w8, #0x1
  434a8c:	smaddl	x11, w8, w21, x9
  434a90:	mov	x23, x11
  434a94:	ldr	w8, [x23, #20]!
  434a98:	mov	x29, sp
  434a9c:	cbnz	w8, 434ab4 <feof@plt+0x319d4>
  434aa0:	ldp	x20, x19, [sp, #48]
  434aa4:	ldp	x22, x21, [sp, #32]
  434aa8:	ldr	x23, [sp, #16]
  434aac:	ldp	x29, x30, [sp], #64
  434ab0:	ret
  434ab4:	adrp	x20, 470000 <_obstack_memory_used@@Base+0xe838>
  434ab8:	mov	x19, x0
  434abc:	adrp	x22, 48a000 <_obstack_memory_used@@Base+0x28838>
  434ac0:	add	x20, x20, #0x5ad
  434ac4:	ldr	x0, [x22, #1464]
  434ac8:	ldr	x2, [x11, #8]
  434acc:	mov	x1, x20
  434ad0:	bl	402a70 <fprintf@plt>
  434ad4:	ldr	w8, [x23]
  434ad8:	tbz	w8, #31, 434aec <feof@plt+0x31a0c>
  434adc:	ldr	x9, [x19, #104]
  434ae0:	and	x8, x8, #0x7fffffff
  434ae4:	mul	x8, x8, x21
  434ae8:	ldr	w8, [x9, x8]
  434aec:	cmp	w8, #0x2
  434af0:	b.cs	434afc <feof@plt+0x31a1c>  // b.hs, b.nlast
  434af4:	mov	x11, xzr
  434af8:	b	434b7c <feof@plt+0x31a9c>
  434afc:	ldrsw	x10, [x19, #16]
  434b00:	ldr	x9, [x19]
  434b04:	madd	x11, x10, x21, x9
  434b08:	ldr	w12, [x11]
  434b0c:	cmp	w8, w12
  434b10:	b.cs	434b1c <feof@plt+0x31a3c>  // b.hs, b.nlast
  434b14:	mov	w12, wzr
  434b18:	b	434b40 <feof@plt+0x31a60>
  434b1c:	ldr	w13, [x19, #12]
  434b20:	add	w12, w10, #0x1
  434b24:	cmp	w12, w13
  434b28:	b.eq	434b7c <feof@plt+0x31a9c>  // b.none
  434b2c:	ldr	w12, [x11, #24]
  434b30:	cmp	w8, w12
  434b34:	mov	w12, w10
  434b38:	mov	w10, w13
  434b3c:	b.cc	434b7c <feof@plt+0x31a9c>  // b.lo, b.ul, b.last
  434b40:	sub	w11, w10, w12
  434b44:	cmp	w11, #0x2
  434b48:	b.cc	434b74 <feof@plt+0x31a94>  // b.lo, b.ul, b.last
  434b4c:	add	w11, w12, w10
  434b50:	lsr	w11, w11, #1
  434b54:	umull	x13, w11, w21
  434b58:	ldr	w13, [x9, x13]
  434b5c:	cmp	w13, w8
  434b60:	csel	w12, w12, w11, hi  // hi = pmore
  434b64:	csel	w10, w11, w10, hi  // hi = pmore
  434b68:	sub	w11, w10, w12
  434b6c:	cmp	w11, #0x1
  434b70:	b.hi	434b4c <feof@plt+0x31a6c>  // b.pmore
  434b74:	smaddl	x11, w12, w21, x9
  434b78:	str	w12, [x19, #16]
  434b7c:	mov	x23, x11
  434b80:	ldr	w8, [x23, #20]!
  434b84:	cbz	w8, 434aa0 <feof@plt+0x319c0>
  434b88:	b	434ac4 <feof@plt+0x319e4>
  434b8c:	stp	x29, x30, [sp, #-96]!
  434b90:	stp	x28, x27, [sp, #16]
  434b94:	stp	x26, x25, [sp, #32]
  434b98:	stp	x24, x23, [sp, #48]
  434b9c:	stp	x22, x21, [sp, #64]
  434ba0:	stp	x20, x19, [sp, #80]
  434ba4:	ldr	w8, [x0, #56]
  434ba8:	mov	w21, w4
  434bac:	mov	x24, x3
  434bb0:	mov	w22, w2
  434bb4:	lsr	w9, w8, #29
  434bb8:	mov	x19, x0
  434bbc:	cmp	w9, #0x2
  434bc0:	mov	w23, w1
  434bc4:	mov	x29, sp
  434bc8:	b.hi	434bec <feof@plt+0x31b0c>  // b.pmore
  434bcc:	ldr	w10, [x19, #120]
  434bd0:	mov	w9, #0x1                   	// #1
  434bd4:	lsl	w9, w9, w10
  434bd8:	add	w8, w9, w8
  434bdc:	cbz	w10, 434bf0 <feof@plt+0x31b10>
  434be0:	neg	w9, w9
  434be4:	and	w8, w8, w9
  434be8:	b	434bf0 <feof@plt+0x31b10>
  434bec:	add	w8, w8, #0x1
  434bf0:	ldr	w26, [x19, #12]
  434bf4:	cmp	w23, #0x1
  434bf8:	b.ne	434c2c <feof@plt+0x31b4c>  // b.any
  434bfc:	cbnz	x24, 434c2c <feof@plt+0x31b4c>
  434c00:	ldr	x9, [x19]
  434c04:	sub	w10, w26, #0x1
  434c08:	mov	w11, #0x18                  	// #24
  434c0c:	smaddl	x9, w10, w11, x9
  434c10:	ldr	w9, [x9, #20]
  434c14:	cbnz	w9, 434c2c <feof@plt+0x31b4c>
  434c18:	ldr	w8, [x19, #48]
  434c1c:	mov	x20, xzr
  434c20:	sub	w8, w8, #0x1
  434c24:	str	w8, [x19, #48]
  434c28:	b	434ea0 <feof@plt+0x31dc0>
  434c2c:	ldr	w9, [x19, #8]
  434c30:	lsr	w10, w8, #28
  434c34:	cmp	w10, #0x6
  434c38:	csel	w25, wzr, w8, hi  // hi = pmore
  434c3c:	cmp	w26, w9
  434c40:	b.ne	434cb8 <feof@plt+0x31bd8>  // b.any
  434c44:	ldr	x10, [x19, #80]
  434c48:	lsl	w8, w26, #1
  434c4c:	cmp	w26, #0x0
  434c50:	mov	w9, #0x100                 	// #256
  434c54:	ldr	x20, [x19]
  434c58:	csel	w8, w9, w8, eq  // eq = none
  434c5c:	mov	w27, #0x18                  	// #24
  434c60:	umull	x0, w8, w27
  434c64:	blr	x10
  434c68:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  434c6c:	movk	x8, #0xaaab
  434c70:	ldr	x9, [x19, #72]
  434c74:	umulh	x8, x0, x8
  434c78:	lsr	x28, x8, #4
  434c7c:	ubfx	x8, x8, #4, #32
  434c80:	add	x8, x8, w28, uxtw #1
  434c84:	lsl	x1, x8, #3
  434c88:	mov	x0, x20
  434c8c:	blr	x9
  434c90:	sub	w8, w28, w26
  434c94:	mov	x20, x0
  434c98:	madd	x0, x26, x27, x0
  434c9c:	umull	x2, w8, w27
  434ca0:	mov	w1, wzr
  434ca4:	bl	402b40 <memset@plt>
  434ca8:	ldr	w8, [x19, #12]
  434cac:	str	x20, [x19]
  434cb0:	str	w28, [x19, #8]
  434cb4:	b	434cc0 <feof@plt+0x31be0>
  434cb8:	ldr	x20, [x19]
  434cbc:	mov	w8, w26
  434cc0:	mov	w9, #0x18                  	// #24
  434cc4:	add	w8, w8, #0x1
  434cc8:	madd	x20, x26, x9, x20
  434ccc:	str	w8, [x19, #12]
  434cd0:	str	w25, [x20]
  434cd4:	strb	w23, [x20, #4]
  434cd8:	cbz	x24, 434cf8 <feof@plt+0x31c18>
  434cdc:	ldrb	w8, [x24]
  434ce0:	cmp	w8, #0x0
  434ce4:	adrp	x8, 470000 <_obstack_memory_used@@Base+0xe838>
  434ce8:	ccmp	w23, #0x3, #0x4, eq  // eq = none
  434cec:	add	x8, x8, #0x5d9
  434cf0:	csel	x2, x8, x24, ne  // ne = any
  434cf4:	b	434cfc <feof@plt+0x31c1c>
  434cf8:	mov	x2, xzr
  434cfc:	cmp	w23, #0x3
  434d00:	mov	w8, #0x2                   	// #2
  434d04:	csel	w8, w8, w23, eq  // eq = none
  434d08:	cmp	w8, #0x1
  434d0c:	b.ne	434d28 <feof@plt+0x31c48>  // b.any
  434d10:	ldur	w10, [x20, #-4]
  434d14:	tbnz	w10, #31, 434d30 <feof@plt+0x31c50>
  434d18:	cmp	w10, #0x2
  434d1c:	b.cs	434d4c <feof@plt+0x31c6c>  // b.hs, b.nlast
  434d20:	mov	x9, xzr
  434d24:	b	434dd8 <feof@plt+0x31cf8>
  434d28:	mov	x9, xzr
  434d2c:	b	434e00 <feof@plt+0x31d20>
  434d30:	ldr	x9, [x19, #104]
  434d34:	and	x10, x10, #0x7fffffff
  434d38:	mov	w11, #0x18                  	// #24
  434d3c:	mul	x10, x10, x11
  434d40:	ldr	w10, [x9, x10]
  434d44:	cmp	w10, #0x2
  434d48:	b.cc	434d20 <feof@plt+0x31c40>  // b.lo, b.ul, b.last
  434d4c:	ldrsw	x12, [x19, #16]
  434d50:	ldr	x11, [x19]
  434d54:	mov	w9, #0x18                  	// #24
  434d58:	madd	x9, x12, x9, x11
  434d5c:	ldr	w13, [x9]
  434d60:	cmp	w10, w13
  434d64:	b.cs	434db4 <feof@plt+0x31cd4>  // b.hs, b.nlast
  434d68:	mov	w13, wzr
  434d6c:	sub	w9, w12, w13
  434d70:	cmp	w9, #0x2
  434d74:	b.cc	434da4 <feof@plt+0x31cc4>  // b.lo, b.ul, b.last
  434d78:	mov	w9, #0x18                  	// #24
  434d7c:	add	w14, w13, w12
  434d80:	lsr	w14, w14, #1
  434d84:	umull	x15, w14, w9
  434d88:	ldr	w15, [x11, x15]
  434d8c:	cmp	w15, w10
  434d90:	csel	w13, w13, w14, hi  // hi = pmore
  434d94:	csel	w12, w14, w12, hi  // hi = pmore
  434d98:	sub	w14, w12, w13
  434d9c:	cmp	w14, #0x1
  434da0:	b.hi	434d7c <feof@plt+0x31c9c>  // b.pmore
  434da4:	mov	w9, #0x18                  	// #24
  434da8:	smaddl	x9, w13, w9, x11
  434dac:	str	w13, [x19, #16]
  434db0:	b	434dd8 <feof@plt+0x31cf8>
  434db4:	ldr	w14, [x19, #12]
  434db8:	add	w13, w12, #0x1
  434dbc:	cmp	w13, w14
  434dc0:	b.eq	434dd8 <feof@plt+0x31cf8>  // b.none
  434dc4:	ldr	w13, [x9, #24]
  434dc8:	cmp	w10, w13
  434dcc:	mov	w13, w12
  434dd0:	mov	w12, w14
  434dd4:	b.cs	434d6c <feof@plt+0x31c8c>  // b.hs, b.nlast
  434dd8:	cbnz	x2, 434e00 <feof@plt+0x31d20>
  434ddc:	ldr	w10, [x9, #24]
  434de0:	ldr	w11, [x9]
  434de4:	ldrb	w12, [x9, #6]
  434de8:	ldr	w13, [x9, #16]
  434dec:	ldr	x2, [x9, #8]
  434df0:	ldrb	w22, [x9, #5]
  434df4:	sub	w10, w10, w11
  434df8:	lsr	w10, w10, w12
  434dfc:	add	w21, w10, w13
  434e00:	strb	w22, [x20, #5]
  434e04:	str	x2, [x20, #8]
  434e08:	str	w21, [x20, #16]
  434e0c:	ldr	w10, [x19, #12]
  434e10:	cmp	w8, #0x2
  434e14:	sub	w10, w10, #0x1
  434e18:	str	w10, [x19, #16]
  434e1c:	strh	wzr, [x20, #6]
  434e20:	stp	w25, w25, [x19, #56]
  434e24:	str	wzr, [x19, #64]
  434e28:	b.eq	434e60 <feof@plt+0x31d80>  // b.none
  434e2c:	cbnz	w8, 434e68 <feof@plt+0x31d88>
  434e30:	ldr	w21, [x19, #48]
  434e34:	cbz	w21, 434e88 <feof@plt+0x31da8>
  434e38:	ldur	w8, [x20, #-24]
  434e3c:	ldr	w9, [x20]
  434e40:	ldurb	w10, [x20, #-18]
  434e44:	mov	w11, #0xffffffff            	// #-1
  434e48:	mvn	w12, w8
  434e4c:	add	w9, w9, w12
  434e50:	lsl	w10, w11, w10
  434e54:	and	w9, w10, w9
  434e58:	add	w8, w9, w8
  434e5c:	b	434e8c <feof@plt+0x31dac>
  434e60:	ldur	w8, [x20, #-4]
  434e64:	b	434e80 <feof@plt+0x31da0>
  434e68:	cmp	w8, #0x1
  434e6c:	b.ne	434ea0 <feof@plt+0x31dc0>  // b.any
  434e70:	ldr	w8, [x19, #48]
  434e74:	sub	w8, w8, #0x1
  434e78:	str	w8, [x19, #48]
  434e7c:	ldr	w8, [x9, #20]
  434e80:	str	w8, [x20, #20]
  434e84:	b	434ea0 <feof@plt+0x31dc0>
  434e88:	mov	w8, wzr
  434e8c:	str	w8, [x20, #20]
  434e90:	ldrb	w8, [x19, #52]
  434e94:	add	w9, w21, #0x1
  434e98:	str	w9, [x19, #48]
  434e9c:	cbnz	w8, 434ec0 <feof@plt+0x31de0>
  434ea0:	mov	x0, x20
  434ea4:	ldp	x20, x19, [sp, #80]
  434ea8:	ldp	x22, x21, [sp, #64]
  434eac:	ldp	x24, x23, [sp, #48]
  434eb0:	ldp	x26, x25, [sp, #32]
  434eb4:	ldp	x28, x27, [sp, #16]
  434eb8:	ldp	x29, x30, [sp], #96
  434ebc:	ret
  434ec0:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  434ec4:	ldr	x0, [x19, #1464]
  434ec8:	cbz	w21, 434f08 <feof@plt+0x31e28>
  434ecc:	mov	w22, #0x2e                  	// #46
  434ed0:	ldp	x8, x9, [x0, #40]
  434ed4:	cmp	x8, x9
  434ed8:	b.cs	434ef8 <feof@plt+0x31e18>  // b.hs, b.nlast
  434edc:	add	x9, x8, #0x1
  434ee0:	str	x9, [x0, #40]
  434ee4:	strb	w22, [x8]
  434ee8:	ldr	x0, [x19, #1464]
  434eec:	subs	w21, w21, #0x1
  434ef0:	b.ne	434ed0 <feof@plt+0x31df0>  // b.any
  434ef4:	b	434f04 <feof@plt+0x31e24>
  434ef8:	mov	w1, #0x2e                  	// #46
  434efc:	bl	402ad0 <__overflow@plt>
  434f00:	b	434ee8 <feof@plt+0x31e08>
  434f04:	ldr	x2, [x20, #8]
  434f08:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  434f0c:	add	x1, x1, #0xa0c
  434f10:	bl	402a70 <fprintf@plt>
  434f14:	b	434ea0 <feof@plt+0x31dc0>
  434f18:	ldr	x8, [x0, #24]
  434f1c:	cmp	x8, #0x0
  434f20:	cset	w0, ne  // ne = any
  434f24:	ret
  434f28:	stp	x29, x30, [sp, #-80]!
  434f2c:	stp	x26, x25, [sp, #16]
  434f30:	stp	x24, x23, [sp, #32]
  434f34:	stp	x22, x21, [sp, #48]
  434f38:	stp	x20, x19, [sp, #64]
  434f3c:	ldr	w24, [x0, #36]
  434f40:	mov	w21, w3
  434f44:	mov	w20, w2
  434f48:	mov	x19, x0
  434f4c:	mov	x22, x1
  434f50:	mov	x29, sp
  434f54:	cbz	w24, 434f6c <feof@plt+0x31e8c>
  434f58:	ldr	x8, [x19, #24]
  434f5c:	sub	w9, w24, #0x1
  434f60:	sbfiz	x9, x9, #5, #32
  434f64:	ldr	w8, [x8, x9]
  434f68:	b	434f70 <feof@plt+0x31e90>
  434f6c:	mov	w8, #0x80000000            	// #-2147483648
  434f70:	sub	w25, w8, w21
  434f74:	lsr	w8, w25, #28
  434f78:	cmp	w8, #0x7
  434f7c:	b.cs	434f88 <feof@plt+0x31ea8>  // b.hs, b.nlast
  434f80:	mov	x23, xzr
  434f84:	b	435044 <feof@plt+0x31f64>
  434f88:	ldr	w8, [x19, #32]
  434f8c:	cmp	w24, w8
  434f90:	b.ne	434ff0 <feof@plt+0x31f10>  // b.any
  434f94:	ldr	x9, [x19, #80]
  434f98:	lsl	w8, w24, #1
  434f9c:	cmp	w24, #0x0
  434fa0:	ldr	x23, [x19, #24]
  434fa4:	mov	w10, #0x100                 	// #256
  434fa8:	csel	w8, w10, w8, eq  // eq = none
  434fac:	lsl	x0, x8, #5
  434fb0:	blr	x9
  434fb4:	ldr	x8, [x19, #72]
  434fb8:	lsr	x26, x0, #5
  434fbc:	and	x1, x0, #0x1fffffffe0
  434fc0:	mov	x0, x23
  434fc4:	blr	x8
  434fc8:	sub	w8, w26, w24
  434fcc:	mov	x23, x0
  434fd0:	add	x0, x0, x24, lsl #5
  434fd4:	lsl	x2, x8, #5
  434fd8:	mov	w1, wzr
  434fdc:	bl	402b40 <memset@plt>
  434fe0:	ldr	w8, [x19, #36]
  434fe4:	str	x23, [x19, #24]
  434fe8:	str	w26, [x19, #32]
  434fec:	b	434ff8 <feof@plt+0x31f18>
  434ff0:	ldr	x23, [x19, #24]
  434ff4:	mov	w8, w24
  434ff8:	add	x23, x23, x24, lsl #5
  434ffc:	add	w8, w8, #0x1
  435000:	str	w8, [x19, #36]
  435004:	str	x22, [x23, #8]
  435008:	stp	w25, w21, [x23]
  43500c:	ldr	x8, [x19, #72]
  435010:	lsl	w9, w21, #1
  435014:	lsl	x21, x9, #2
  435018:	mov	x0, xzr
  43501c:	mov	x1, x21
  435020:	blr	x8
  435024:	mov	w1, wzr
  435028:	mov	x2, x21
  43502c:	str	x0, [x23, #16]
  435030:	str	w20, [x23, #24]
  435034:	bl	402b40 <memset@plt>
  435038:	ldr	w8, [x19, #36]
  43503c:	sub	w8, w8, #0x1
  435040:	str	w8, [x19, #40]
  435044:	mov	x0, x23
  435048:	ldp	x20, x19, [sp, #64]
  43504c:	ldp	x22, x21, [sp, #48]
  435050:	ldp	x24, x23, [sp, #32]
  435054:	ldp	x26, x25, [sp, #16]
  435058:	ldp	x29, x30, [sp], #80
  43505c:	ret
  435060:	ldr	x8, [x0, #16]
  435064:	mov	w10, #0x1                   	// #1
  435068:	lsl	w9, w1, #1
  43506c:	bfi	w10, w1, #1, #31
  435070:	str	w2, [x8, w9, uxtw #2]
  435074:	str	w3, [x8, w10, uxtw #2]
  435078:	ldr	w8, [x0]
  43507c:	add	w0, w8, w1
  435080:	ret
  435084:	stp	x29, x30, [sp, #-64]!
  435088:	stp	x24, x23, [sp, #16]
  43508c:	stp	x22, x21, [sp, #32]
  435090:	stp	x20, x19, [sp, #48]
  435094:	ldr	w9, [x0, #12]
  435098:	ldr	x11, [x0]
  43509c:	mov	w12, #0x18                  	// #24
  4350a0:	mov	x19, x0
  4350a4:	sub	w9, w9, #0x1
  4350a8:	ldp	w10, w8, [x0, #56]
  4350ac:	smaddl	x0, w9, w12, x11
  4350b0:	ldr	w13, [x0]
  4350b4:	ldrh	w16, [x0, #6]
  4350b8:	ldr	w9, [x0, #16]
  4350bc:	mov	w20, w1
  4350c0:	sub	w11, w8, w13
  4350c4:	lsr	w15, w11, w16
  4350c8:	sub	w9, w1, w9
  4350cc:	mov	w21, #0x6fffffff            	// #1879048191
  4350d0:	and	w12, w16, #0xff
  4350d4:	sub	w14, w9, w15
  4350d8:	lsr	w11, w16, #8
  4350dc:	mov	x29, sp
  4350e0:	tbnz	w14, #31, 435134 <feof@plt+0x32054>
  4350e4:	cmp	w14, #0xb
  4350e8:	mul	w1, w14, w12
  4350ec:	sub	w17, w12, w11
  4350f0:	cset	w18, lt  // lt = tstop
  4350f4:	cmp	w1, #0x3e9
  4350f8:	lsr	w3, w2, w17
  4350fc:	cset	w1, lt  // lt = tstop
  435100:	cbnz	w3, 435134 <feof@plt+0x32054>
  435104:	orr	w18, w18, w1
  435108:	cbz	w18, 435134 <feof@plt+0x32054>
  43510c:	cmp	w2, #0x50
  435110:	b.hi	43511c <feof@plt+0x3203c>  // b.pmore
  435114:	cmp	w17, #0x9
  435118:	b.gt	435134 <feof@plt+0x32054>
  43511c:	mov	w17, #0x1                   	// #1
  435120:	movk	w17, #0x5000, lsl #16
  435124:	cmp	w10, w17
  435128:	b.cc	4351a4 <feof@plt+0x320c4>  // b.lo, b.ul, b.last
  43512c:	cmp	w16, #0xff
  435130:	b.ls	435184 <feof@plt+0x320a4>  // b.plast
  435134:	cmp	w2, #0x1, lsl #12
  435138:	b.hi	4351b0 <feof@plt+0x320d0>  // b.pmore
  43513c:	mov	w8, #0x1                   	// #1
  435140:	movk	w8, #0x6000, lsl #16
  435144:	cmp	w10, w8
  435148:	b.cs	4351b0 <feof@plt+0x320d0>  // b.hs, b.nlast
  43514c:	mov	w8, #0x50000000            	// #1342177280
  435150:	cmp	w10, w8
  435154:	b.hi	435160 <feof@plt+0x32080>  // b.pmore
  435158:	ldr	w23, [x19, #120]
  43515c:	b	435164 <feof@plt+0x32084>
  435160:	mov	w23, wzr
  435164:	mov	w8, #0x6                   	// #6
  435168:	mov	w16, #0x1                   	// #1
  43516c:	add	w8, w8, #0x1
  435170:	lsl	w22, w16, w8
  435174:	cmp	w22, w2
  435178:	b.ls	43516c <feof@plt+0x3208c>  // b.plast
  43517c:	add	w24, w23, w8
  435180:	b	4351c8 <feof@plt+0x320e8>
  435184:	mov	w16, #0x1                   	// #1
  435188:	movk	w16, #0x6000, lsl #16
  43518c:	cmp	w10, w16
  435190:	b.cc	4351a4 <feof@plt+0x320c4>  // b.lo, b.ul, b.last
  435194:	cmp	w10, w21
  435198:	b.hi	4351b0 <feof@plt+0x320d0>  // b.pmore
  43519c:	ldr	w16, [x19, #64]
  4351a0:	cbnz	w16, 4351b0 <feof@plt+0x320d0>
  4351a4:	ldr	w22, [x19, #64]
  4351a8:	lsl	w9, w14, w12
  4351ac:	b	435224 <feof@plt+0x32144>
  4351b0:	mov	w22, wzr
  4351b4:	mov	w24, wzr
  4351b8:	mov	w23, wzr
  4351bc:	cmp	w10, w21
  4351c0:	mov	w8, wzr
  4351c4:	b.hi	435250 <feof@plt+0x32170>  // b.pmore
  4351c8:	cbnz	w15, 4351f0 <feof@plt+0x32110>
  4351cc:	tbnz	w14, #31, 4351f0 <feof@plt+0x32110>
  4351d0:	sub	w8, w10, w13
  4351d4:	mov	w10, #0xffffffff            	// #-1
  4351d8:	lsl	w10, w10, w12
  4351dc:	bic	w8, w8, w10
  4351e0:	lsr	w8, w8, w11
  4351e4:	sub	w10, w24, w23
  4351e8:	lsr	w8, w8, w10
  4351ec:	cbz	w8, 435268 <feof@plt+0x32188>
  4351f0:	ldrb	w2, [x0, #5]
  4351f4:	ldr	x3, [x0, #8]
  4351f8:	mov	w1, #0x2                   	// #2
  4351fc:	mov	x0, x19
  435200:	mov	w4, w20
  435204:	bl	434b8c <feof@plt+0x31aac>
  435208:	ldr	w10, [x0, #16]
  43520c:	mov	w9, w24
  435210:	ldr	w8, [x0]
  435214:	bfi	w9, w23, #8, #24
  435218:	strh	w9, [x0, #6]
  43521c:	sub	w9, w20, w10
  435220:	lsl	w9, w9, w24
  435224:	add	w8, w9, w8
  435228:	cmp	w8, w21
  43522c:	b.ls	435238 <feof@plt+0x32158>  // b.plast
  435230:	mov	w8, wzr
  435234:	b	435250 <feof@plt+0x32170>
  435238:	ldr	w9, [x19, #56]
  43523c:	str	w8, [x19, #60]
  435240:	cmp	w8, w9
  435244:	b.ls	43524c <feof@plt+0x3216c>  // b.plast
  435248:	str	w8, [x19, #56]
  43524c:	str	w22, [x19, #64]
  435250:	ldp	x20, x19, [sp, #48]
  435254:	ldp	x22, x21, [sp, #32]
  435258:	ldp	x24, x23, [sp, #16]
  43525c:	mov	w0, w8
  435260:	ldp	x29, x30, [sp], #64
  435264:	ret
  435268:	cmp	w23, w11
  43526c:	b.lt	4351f0 <feof@plt+0x32110>  // b.tstop
  435270:	mov	w8, w9
  435274:	mov	w9, #0x20                  	// #32
  435278:	sub	x9, x9, w24, sxtw
  43527c:	lsr	x8, x8, x9
  435280:	cbz	x8, 435208 <feof@plt+0x32128>
  435284:	b	4351f0 <feof@plt+0x32110>
  435288:	stp	x29, x30, [sp, #-48]!
  43528c:	str	x21, [sp, #16]
  435290:	stp	x20, x19, [sp, #32]
  435294:	mov	x19, x0
  435298:	ldp	w0, w8, [x0, #60]
  43529c:	mov	w20, w1
  4352a0:	mov	x29, sp
  4352a4:	cmp	w8, w1
  4352a8:	b.ls	4352bc <feof@plt+0x321dc>  // b.plast
  4352ac:	ldr	w9, [x19, #12]
  4352b0:	ldr	x8, [x19]
  4352b4:	sub	w9, w9, #0x1
  4352b8:	b	435320 <feof@plt+0x32240>
  4352bc:	cmp	w20, #0x1, lsl #12
  4352c0:	b.hi	435348 <feof@plt+0x32268>  // b.pmore
  4352c4:	mov	w8, #0x60000000            	// #1610612736
  4352c8:	cmp	w0, w8
  4352cc:	b.hi	435348 <feof@plt+0x32268>  // b.pmore
  4352d0:	ldr	w8, [x19, #12]
  4352d4:	ldr	x9, [x19]
  4352d8:	mov	w21, #0x18                  	// #24
  4352dc:	add	w2, w20, #0x32
  4352e0:	sub	w8, w8, #0x1
  4352e4:	smaddl	x8, w8, w21, x9
  4352e8:	ldr	w9, [x8]
  4352ec:	ldrb	w10, [x8, #6]
  4352f0:	ldr	w8, [x8, #16]
  4352f4:	sub	w9, w0, w9
  4352f8:	lsr	w9, w9, w10
  4352fc:	add	w1, w9, w8
  435300:	mov	x0, x19
  435304:	bl	435084 <feof@plt+0x31fa4>
  435308:	ldr	w9, [x19, #12]
  43530c:	ldr	x8, [x19]
  435310:	sub	w9, w9, #0x1
  435314:	smaddl	x10, w9, w21, x8
  435318:	ldrb	w10, [x10, #6]
  43531c:	cbz	w10, 435348 <feof@plt+0x32268>
  435320:	sxtw	x9, w9
  435324:	mov	w10, #0x18                  	// #24
  435328:	madd	x8, x9, x10, x8
  43532c:	ldrb	w8, [x8, #7]
  435330:	ldr	w9, [x19, #56]
  435334:	lsl	w8, w20, w8
  435338:	add	w0, w8, w0
  43533c:	cmp	w0, w9
  435340:	b.cc	435348 <feof@plt+0x32268>  // b.lo, b.ul, b.last
  435344:	str	w0, [x19, #56]
  435348:	ldp	x20, x19, [sp, #32]
  43534c:	ldr	x21, [sp, #16]
  435350:	ldp	x29, x30, [sp], #48
  435354:	ret
  435358:	ldr	w8, [x1, #16]
  43535c:	ldrh	w9, [x1, #6]
  435360:	ldr	w10, [x1]
  435364:	sub	w8, w2, w8
  435368:	lsl	w8, w8, w9
  43536c:	add	w8, w8, w10
  435370:	mov	w10, #0x60000000            	// #1610612736
  435374:	cmp	w8, w10
  435378:	b.hi	435398 <feof@plt+0x322b8>  // b.pmore
  43537c:	and	w10, w9, #0xff
  435380:	mov	w11, #0xffffffff            	// #-1
  435384:	lsl	w10, w11, w10
  435388:	bic	w10, w3, w10
  43538c:	lsr	w9, w9, #8
  435390:	lsl	w9, w10, w9
  435394:	add	w8, w9, w8
  435398:	ldr	w9, [x0, #36]
  43539c:	cbz	w9, 4353b4 <feof@plt+0x322d4>
  4353a0:	ldr	x10, [x0, #24]
  4353a4:	sub	w9, w9, #0x1
  4353a8:	sbfiz	x9, x9, #5, #32
  4353ac:	ldr	w9, [x10, x9]
  4353b0:	b	4353b8 <feof@plt+0x322d8>
  4353b4:	mov	w9, #0x80000000            	// #-2147483648
  4353b8:	ldr	w10, [x0, #56]
  4353bc:	sub	w11, w9, #0x1
  4353c0:	cmp	w8, w9
  4353c4:	csel	w8, w8, w11, cc  // cc = lo, ul, last
  4353c8:	cmp	w8, w10
  4353cc:	b.ls	4353d4 <feof@plt+0x322f4>  // b.plast
  4353d0:	str	w8, [x0, #56]
  4353d4:	mov	w0, w8
  4353d8:	ret
  4353dc:	stp	x29, x30, [sp, #-64]!
  4353e0:	stp	x22, x21, [sp, #32]
  4353e4:	stp	x20, x19, [sp, #48]
  4353e8:	mov	w21, w2
  4353ec:	mov	w19, w1
  4353f0:	mov	x20, x0
  4353f4:	str	x23, [sp, #16]
  4353f8:	mov	x29, sp
  4353fc:	tbz	w1, #31, 435418 <feof@plt+0x32338>
  435400:	ldr	x8, [x20, #104]
  435404:	and	w9, w19, #0x7fffffff
  435408:	mov	w10, #0x18                  	// #24
  43540c:	umull	x9, w9, w10
  435410:	ldr	w19, [x8, x9]
  435414:	tbnz	w19, #31, 4354dc <feof@plt+0x323fc>
  435418:	mov	w8, w19
  43541c:	lsr	w9, w8, #28
  435420:	cmp	w9, #0x7
  435424:	b.cc	43542c <feof@plt+0x3234c>  // b.lo, b.ul, b.last
  435428:	tbz	w8, #31, 4355e4 <feof@plt+0x32504>
  43542c:	cbz	w21, 4355e4 <feof@plt+0x32504>
  435430:	cmp	w19, #0x2
  435434:	b.cc	4355e4 <feof@plt+0x32504>  // b.lo, b.ul, b.last
  435438:	mov	x0, x20
  43543c:	mov	w1, w19
  435440:	bl	4345c8 <feof@plt+0x314e8>
  435444:	ldr	w8, [x0]
  435448:	mov	x22, x0
  43544c:	lsr	w9, w8, #28
  435450:	cmp	w9, #0x7
  435454:	b.cs	4354f0 <feof@plt+0x32410>  // b.hs, b.nlast
  435458:	ldrh	w9, [x22, #6]
  43545c:	lsr	w10, w9, #8
  435460:	lsl	w11, w21, w10
  435464:	add	w11, w11, w19
  435468:	cmp	w8, w11
  43546c:	b.cs	4355e4 <feof@plt+0x32504>  // b.hs, b.nlast
  435470:	ldr	w11, [x22, #16]
  435474:	ldr	w13, [x20, #12]
  435478:	sub	w8, w19, w8
  43547c:	mov	w12, #0xffffffff            	// #-1
  435480:	ldr	x14, [x20]
  435484:	lsr	w15, w8, w9
  435488:	lsl	w9, w12, w9
  43548c:	bic	w8, w8, w9
  435490:	lsr	w9, w8, w10
  435494:	add	w8, w15, w11
  435498:	sub	w10, w13, #0x1
  43549c:	mov	w11, #0x18                  	// #24
  4354a0:	smaddl	x11, w10, w11, x14
  4354a4:	cmp	x11, x22
  4354a8:	b.eq	435540 <feof@plt+0x32460>  // b.none
  4354ac:	ldrh	w12, [x22, #6]
  4354b0:	ldr	w13, [x22, #24]
  4354b4:	lsr	w10, w12, #8
  4354b8:	lsl	w14, w21, w10
  4354bc:	add	w14, w14, w19
  4354c0:	cmp	w14, w13
  4354c4:	b.cc	43554c <feof@plt+0x3246c>  // b.lo, b.ul, b.last
  4354c8:	ldr	w10, [x22, #40]
  4354cc:	add	x22, x22, #0x18
  4354d0:	cmp	w8, w10
  4354d4:	b.cs	4354a4 <feof@plt+0x323c4>  // b.hs, b.nlast
  4354d8:	b	4355e4 <feof@plt+0x32504>
  4354dc:	and	x9, x19, #0x7fffffff
  4354e0:	mov	w10, #0x18                  	// #24
  4354e4:	mul	x9, x9, x10
  4354e8:	ldr	w8, [x8, x9]
  4354ec:	b	43541c <feof@plt+0x3233c>
  4354f0:	mov	w23, #0x18                  	// #24
  4354f4:	b	435528 <feof@plt+0x32448>
  4354f8:	ldr	x9, [x22, #16]
  4354fc:	sub	w8, w19, w8
  435500:	lsl	w8, w8, #1
  435504:	mov	x0, x20
  435508:	ldr	w19, [x9, w8, uxtw #2]
  43550c:	mov	w1, w19
  435510:	bl	4345c8 <feof@plt+0x314e8>
  435514:	ldr	w8, [x0]
  435518:	mov	x22, x0
  43551c:	lsr	w9, w8, #28
  435520:	cmp	w9, #0x7
  435524:	b.cc	435458 <feof@plt+0x32378>  // b.lo, b.ul, b.last
  435528:	tbz	w19, #31, 4354f8 <feof@plt+0x32418>
  43552c:	ldr	x9, [x20, #104]
  435530:	and	w10, w19, #0x7fffffff
  435534:	umull	x10, w10, w23
  435538:	ldr	w19, [x9, x10]
  43553c:	b	4354f8 <feof@plt+0x32418>
  435540:	ldrh	w12, [x11, #6]
  435544:	mov	x22, x11
  435548:	lsr	w10, w12, #8
  43554c:	and	w11, w12, #0xff
  435550:	add	w9, w9, w21
  435554:	sub	w12, w11, w10
  435558:	lsr	w12, w9, w12
  43555c:	cbnz	w12, 4355e4 <feof@plt+0x32504>
  435560:	ldr	w12, [x22, #16]
  435564:	ldr	w13, [x22]
  435568:	sub	w8, w8, w12
  43556c:	lsl	w8, w8, w11
  435570:	add	w8, w8, w13
  435574:	mov	w12, #0x60000000            	// #1610612736
  435578:	cmp	w8, w12
  43557c:	b.hi	435594 <feof@plt+0x324b4>  // b.pmore
  435580:	mov	w12, #0xffffffff            	// #-1
  435584:	lsl	w11, w12, w11
  435588:	bic	w9, w9, w11
  43558c:	lsl	w9, w9, w10
  435590:	add	w8, w8, w9
  435594:	ldr	w9, [x20, #36]
  435598:	cbz	w9, 4355b0 <feof@plt+0x324d0>
  43559c:	ldr	x10, [x20, #24]
  4355a0:	sub	w9, w9, #0x1
  4355a4:	sbfiz	x9, x9, #5, #32
  4355a8:	ldr	w9, [x10, x9]
  4355ac:	b	4355b4 <feof@plt+0x324d4>
  4355b0:	mov	w9, #0x80000000            	// #-2147483648
  4355b4:	ldr	w10, [x20, #56]
  4355b8:	sub	w11, w9, #0x1
  4355bc:	cmp	w8, w9
  4355c0:	csel	w21, w8, w11, cc  // cc = lo, ul, last
  4355c4:	cmp	w21, w10
  4355c8:	b.ls	4355d0 <feof@plt+0x324f0>  // b.plast
  4355cc:	str	w21, [x20, #56]
  4355d0:	mov	x0, x20
  4355d4:	mov	w1, w21
  4355d8:	bl	4345c8 <feof@plt+0x314e8>
  4355dc:	cmp	x22, x0
  4355e0:	csel	w19, w21, w19, eq  // eq = none
  4355e4:	mov	w0, w19
  4355e8:	ldp	x20, x19, [sp, #48]
  4355ec:	ldp	x22, x21, [sp, #32]
  4355f0:	ldr	x23, [sp, #16]
  4355f4:	ldp	x29, x30, [sp], #64
  4355f8:	ret
  4355fc:	tbz	w1, #31, 435614 <feof@plt+0x32534>
  435600:	ldr	x8, [x0, #104]
  435604:	and	w9, w1, #0x7fffffff
  435608:	mov	w10, #0x18                  	// #24
  43560c:	umull	x9, w9, w10
  435610:	ldr	w1, [x8, x9]
  435614:	lsr	w8, w1, #28
  435618:	cmp	w8, #0x6
  43561c:	cset	w8, hi  // hi = pmore
  435620:	cmp	w1, #0x0
  435624:	cset	w9, ge  // ge = tcont
  435628:	and	w0, w8, w9
  43562c:	ret
  435630:	stp	x29, x30, [sp, #-64]!
  435634:	stp	x22, x21, [sp, #32]
  435638:	stp	x20, x19, [sp, #48]
  43563c:	mov	x20, x3
  435640:	mov	w19, w1
  435644:	mov	x21, x0
  435648:	mov	w8, w1
  43564c:	str	x23, [sp, #16]
  435650:	mov	x29, sp
  435654:	tbnz	w1, #31, 43566c <feof@plt+0x3258c>
  435658:	cmp	w8, #0x1
  43565c:	b.hi	435688 <feof@plt+0x325a8>  // b.pmore
  435660:	cbz	x20, 4357c0 <feof@plt+0x326e0>
  435664:	str	xzr, [x20]
  435668:	b	4357c0 <feof@plt+0x326e0>
  43566c:	ldr	x8, [x21, #104]
  435670:	and	w9, w19, #0x7fffffff
  435674:	mov	w10, #0x18                  	// #24
  435678:	umull	x9, w9, w10
  43567c:	ldr	w8, [x8, x9]
  435680:	cmp	w8, #0x1
  435684:	b.ls	435660 <feof@plt+0x32580>  // b.plast
  435688:	cmp	w2, #0x2
  43568c:	b.eq	43575c <feof@plt+0x3267c>  // b.none
  435690:	cmp	w2, #0x1
  435694:	b.eq	4356fc <feof@plt+0x3261c>  // b.none
  435698:	cbnz	w2, 4357d8 <feof@plt+0x326f8>
  43569c:	tbz	w19, #31, 4356b4 <feof@plt+0x325d4>
  4356a0:	ldr	x8, [x21, #104]
  4356a4:	and	w9, w19, #0x7fffffff
  4356a8:	mov	w10, #0x18                  	// #24
  4356ac:	umull	x9, w9, w10
  4356b0:	ldr	w19, [x8, x9]
  4356b4:	mov	x0, x21
  4356b8:	mov	w1, w19
  4356bc:	bl	4345c8 <feof@plt+0x314e8>
  4356c0:	cbz	x0, 4357b8 <feof@plt+0x326d8>
  4356c4:	ldr	w8, [x0]
  4356c8:	lsr	w8, w8, #28
  4356cc:	cmp	w8, #0x7
  4356d0:	b.cc	4357b8 <feof@plt+0x326d8>  // b.lo, b.ul, b.last
  4356d4:	mov	w22, #0x6fffffff            	// #1879048191
  4356d8:	ldr	w19, [x0, #24]
  4356dc:	mov	x0, x21
  4356e0:	mov	w1, w19
  4356e4:	bl	4345c8 <feof@plt+0x314e8>
  4356e8:	cbz	x0, 4357b8 <feof@plt+0x326d8>
  4356ec:	ldr	w8, [x0]
  4356f0:	cmp	w8, w22
  4356f4:	b.hi	4356d8 <feof@plt+0x325f8>  // b.pmore
  4356f8:	b	4357b8 <feof@plt+0x326d8>
  4356fc:	mov	x0, x21
  435700:	mov	w1, w19
  435704:	bl	4345c8 <feof@plt+0x314e8>
  435708:	cbz	x0, 4357b8 <feof@plt+0x326d8>
  43570c:	mov	w22, #0x18                  	// #24
  435710:	b	435734 <feof@plt+0x32654>
  435714:	ldr	x9, [x0, #16]
  435718:	sub	w8, w19, w8
  43571c:	lsl	w8, w8, #1
  435720:	mov	x0, x21
  435724:	ldr	w19, [x9, w8, uxtw #2]
  435728:	mov	w1, w19
  43572c:	bl	4345c8 <feof@plt+0x314e8>
  435730:	cbz	x0, 4357b8 <feof@plt+0x326d8>
  435734:	ldr	w8, [x0]
  435738:	lsr	w9, w8, #28
  43573c:	cmp	w9, #0x6
  435740:	b.ls	4357b8 <feof@plt+0x326d8>  // b.plast
  435744:	tbz	w19, #31, 435714 <feof@plt+0x32634>
  435748:	ldr	x9, [x21, #104]
  43574c:	and	w10, w19, #0x7fffffff
  435750:	umull	x10, w10, w22
  435754:	ldr	w19, [x9, x10]
  435758:	b	435714 <feof@plt+0x32634>
  43575c:	mov	w23, #0x18                  	// #24
  435760:	mov	w22, w19
  435764:	tbz	w19, #31, 4357a8 <feof@plt+0x326c8>
  435768:	b	435798 <feof@plt+0x326b8>
  43576c:	ldr	w8, [x0]
  435770:	lsr	w9, w8, #28
  435774:	cmp	w9, #0x6
  435778:	b.ls	4357b8 <feof@plt+0x326d8>  // b.plast
  43577c:	ldr	x9, [x0, #16]
  435780:	sub	w8, w22, w8
  435784:	mov	w10, #0x1                   	// #1
  435788:	bfi	w10, w8, #1, #31
  43578c:	ldr	w19, [x9, w10, uxtw #2]
  435790:	mov	w22, w19
  435794:	tbz	w19, #31, 4357a8 <feof@plt+0x326c8>
  435798:	ldr	x8, [x21, #104]
  43579c:	and	w9, w19, #0x7fffffff
  4357a0:	umull	x9, w9, w23
  4357a4:	ldr	w22, [x8, x9]
  4357a8:	mov	x0, x21
  4357ac:	mov	w1, w22
  4357b0:	bl	4345c8 <feof@plt+0x314e8>
  4357b4:	cbnz	x0, 43576c <feof@plt+0x3268c>
  4357b8:	cbz	x20, 4357c0 <feof@plt+0x326e0>
  4357bc:	str	x0, [x20]
  4357c0:	mov	w0, w19
  4357c4:	ldp	x20, x19, [sp, #48]
  4357c8:	ldp	x22, x21, [sp, #32]
  4357cc:	ldr	x23, [sp, #16]
  4357d0:	ldp	x29, x30, [sp], #64
  4357d4:	ret
  4357d8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  4357dc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4357e0:	add	x0, x0, #0x5e1
  4357e4:	add	x2, x2, #0x613
  4357e8:	mov	w1, #0x621                 	// #1569
  4357ec:	bl	40f560 <feof@plt+0xc480>
  4357f0:	cbz	x0, 435804 <feof@plt+0x32724>
  4357f4:	ldr	w8, [x0]
  4357f8:	lsr	w8, w8, #28
  4357fc:	cmp	w8, #0x6
  435800:	cset	w0, hi  // hi = pmore
  435804:	ret
  435808:	tbz	w2, #31, 435820 <feof@plt+0x32740>
  43580c:	ldr	x8, [x0, #104]
  435810:	and	w9, w2, #0x7fffffff
  435814:	mov	w10, #0x18                  	// #24
  435818:	umull	x9, w9, w10
  43581c:	ldr	w2, [x8, x9]
  435820:	ldr	w8, [x1]
  435824:	ldr	x9, [x1, #16]
  435828:	sub	w8, w2, w8
  43582c:	lsl	w8, w8, #1
  435830:	ldr	w0, [x9, w8, uxtw #2]
  435834:	ret
  435838:	stp	x29, x30, [sp, #-48]!
  43583c:	stp	x20, x19, [sp, #32]
  435840:	mov	w19, w1
  435844:	mov	x20, x0
  435848:	str	x21, [sp, #16]
  43584c:	mov	x29, sp
  435850:	tbnz	w1, #31, 435864 <feof@plt+0x32784>
  435854:	cmp	w19, #0x2
  435858:	b.cs	435880 <feof@plt+0x327a0>  // b.hs, b.nlast
  43585c:	mov	w0, wzr
  435860:	b	4358e8 <feof@plt+0x32808>
  435864:	ldr	x8, [x20, #104]
  435868:	and	w9, w19, #0x7fffffff
  43586c:	mov	w10, #0x18                  	// #24
  435870:	umull	x9, w9, w10
  435874:	ldr	w19, [x8, x9]
  435878:	cmp	w19, #0x2
  43587c:	b.cc	43585c <feof@plt+0x3277c>  // b.lo, b.ul, b.last
  435880:	tbz	w19, #31, 435898 <feof@plt+0x327b8>
  435884:	ldr	x8, [x20, #104]
  435888:	and	w9, w19, #0x7fffffff
  43588c:	mov	w10, #0x18                  	// #24
  435890:	umull	x9, w9, w10
  435894:	ldr	w19, [x8, x9]
  435898:	mov	x0, x20
  43589c:	mov	w1, w19
  4358a0:	bl	4345c8 <feof@plt+0x314e8>
  4358a4:	ldr	w8, [x0]
  4358a8:	lsr	w9, w8, #28
  4358ac:	cmp	w9, #0x7
  4358b0:	b.cc	4358d4 <feof@plt+0x327f4>  // b.lo, b.ul, b.last
  4358b4:	mov	w21, #0x6fffffff            	// #1879048191
  4358b8:	ldr	w19, [x0, #24]
  4358bc:	mov	x0, x20
  4358c0:	mov	w1, w19
  4358c4:	bl	4345c8 <feof@plt+0x314e8>
  4358c8:	ldr	w8, [x0]
  4358cc:	cmp	w8, w21
  4358d0:	b.hi	4358b8 <feof@plt+0x327d8>  // b.pmore
  4358d4:	ldrb	w9, [x0, #6]
  4358d8:	ldr	w10, [x0, #16]
  4358dc:	sub	w8, w19, w8
  4358e0:	lsr	w8, w8, w9
  4358e4:	add	w0, w8, w10
  4358e8:	ldp	x20, x19, [sp, #32]
  4358ec:	ldr	x21, [sp, #16]
  4358f0:	ldp	x29, x30, [sp], #48
  4358f4:	ret
  4358f8:	stp	x29, x30, [sp, #-32]!
  4358fc:	stp	x20, x19, [sp, #16]
  435900:	mov	x19, x0
  435904:	mov	x29, sp
  435908:	tbnz	w1, #31, 43591c <feof@plt+0x3283c>
  43590c:	cmp	w1, #0x2
  435910:	b.cs	435938 <feof@plt+0x32858>  // b.hs, b.nlast
  435914:	mov	x0, xzr
  435918:	b	435988 <feof@plt+0x328a8>
  43591c:	ldr	x8, [x19, #104]
  435920:	and	w9, w1, #0x7fffffff
  435924:	mov	w10, #0x18                  	// #24
  435928:	umull	x9, w9, w10
  43592c:	ldr	w1, [x8, x9]
  435930:	cmp	w1, #0x2
  435934:	b.cc	435914 <feof@plt+0x32834>  // b.lo, b.ul, b.last
  435938:	tbz	w1, #31, 435950 <feof@plt+0x32870>
  43593c:	ldr	x8, [x19, #104]
  435940:	and	w9, w1, #0x7fffffff
  435944:	mov	w10, #0x18                  	// #24
  435948:	umull	x9, w9, w10
  43594c:	ldr	w1, [x8, x9]
  435950:	mov	x0, x19
  435954:	bl	4345c8 <feof@plt+0x314e8>
  435958:	ldr	w8, [x0]
  43595c:	lsr	w8, w8, #28
  435960:	cmp	w8, #0x7
  435964:	b.cc	435984 <feof@plt+0x328a4>  // b.lo, b.ul, b.last
  435968:	mov	w20, #0x6fffffff            	// #1879048191
  43596c:	ldr	w1, [x0, #24]
  435970:	mov	x0, x19
  435974:	bl	4345c8 <feof@plt+0x314e8>
  435978:	ldr	w8, [x0]
  43597c:	cmp	w8, w20
  435980:	b.hi	43596c <feof@plt+0x3288c>  // b.pmore
  435984:	ldr	x0, [x0, #8]
  435988:	ldp	x20, x19, [sp, #16]
  43598c:	ldp	x29, x30, [sp], #32
  435990:	ret
  435994:	ldr	x8, [x0, #8]
  435998:	ldr	x0, [x8]
  43599c:	ret
  4359a0:	stp	x29, x30, [sp, #-48]!
  4359a4:	stp	x20, x19, [sp, #32]
  4359a8:	mov	w20, w1
  4359ac:	mov	x19, x0
  4359b0:	str	x21, [sp, #16]
  4359b4:	mov	x29, sp
  4359b8:	tbnz	w1, #31, 4359cc <feof@plt+0x328ec>
  4359bc:	cmp	w20, #0x2
  4359c0:	b.cs	4359e8 <feof@plt+0x32908>  // b.hs, b.nlast
  4359c4:	mov	w0, wzr
  4359c8:	b	435a58 <feof@plt+0x32978>
  4359cc:	ldr	x8, [x19, #104]
  4359d0:	and	w9, w20, #0x7fffffff
  4359d4:	mov	w10, #0x18                  	// #24
  4359d8:	umull	x9, w9, w10
  4359dc:	ldr	w20, [x8, x9]
  4359e0:	cmp	w20, #0x2
  4359e4:	b.cc	4359c4 <feof@plt+0x328e4>  // b.lo, b.ul, b.last
  4359e8:	mov	x0, x19
  4359ec:	mov	w1, w20
  4359f0:	bl	4345c8 <feof@plt+0x314e8>
  4359f4:	cbz	x0, 435a58 <feof@plt+0x32978>
  4359f8:	mov	w21, #0x18                  	// #24
  4359fc:	b	435a10 <feof@plt+0x32930>
  435a00:	mov	x0, x19
  435a04:	mov	w1, w20
  435a08:	bl	4345c8 <feof@plt+0x314e8>
  435a0c:	cbz	x0, 435a58 <feof@plt+0x32978>
  435a10:	ldr	w8, [x0]
  435a14:	lsr	w9, w8, #28
  435a18:	cmp	w9, #0x6
  435a1c:	b.ls	435a54 <feof@plt+0x32974>  // b.plast
  435a20:	tbz	w20, #31, 435a34 <feof@plt+0x32954>
  435a24:	ldr	x9, [x19, #104]
  435a28:	and	w10, w20, #0x7fffffff
  435a2c:	umull	x10, w10, w21
  435a30:	ldr	w20, [x9, x10]
  435a34:	ldr	x9, [x0, #16]
  435a38:	sub	w8, w20, w8
  435a3c:	lsl	w8, w8, #1
  435a40:	ldr	w20, [x9, w8, uxtw #2]
  435a44:	cmp	w20, #0x1
  435a48:	b.hi	435a00 <feof@plt+0x32920>  // b.pmore
  435a4c:	ldr	w20, [x0, #24]
  435a50:	b	435a00 <feof@plt+0x32920>
  435a54:	ldrb	w0, [x0, #5]
  435a58:	ldp	x20, x19, [sp, #32]
  435a5c:	ldr	x21, [sp, #16]
  435a60:	ldp	x29, x30, [sp], #48
  435a64:	ret
  435a68:	stp	x29, x30, [sp, #-80]!
  435a6c:	stp	x22, x21, [sp, #48]
  435a70:	stp	x20, x19, [sp, #64]
  435a74:	mov	w20, w2
  435a78:	mov	w21, w1
  435a7c:	mov	x19, x0
  435a80:	mov	w22, w1
  435a84:	str	x25, [sp, #16]
  435a88:	stp	x24, x23, [sp, #32]
  435a8c:	mov	x29, sp
  435a90:	tbnz	w1, #31, 435aac <feof@plt+0x329cc>
  435a94:	mov	w23, w20
  435a98:	tbnz	w20, #31, 435ac8 <feof@plt+0x329e8>
  435a9c:	cmp	w22, w23
  435aa0:	b.ne	435ae4 <feof@plt+0x32a04>  // b.any
  435aa4:	mov	w0, wzr
  435aa8:	b	435cf8 <feof@plt+0x32c18>
  435aac:	ldr	x8, [x19, #104]
  435ab0:	and	w9, w21, #0x7fffffff
  435ab4:	mov	w10, #0x18                  	// #24
  435ab8:	umull	x9, w9, w10
  435abc:	ldr	w22, [x8, x9]
  435ac0:	mov	w23, w20
  435ac4:	tbz	w20, #31, 435a9c <feof@plt+0x329bc>
  435ac8:	ldr	x8, [x19, #104]
  435acc:	and	w9, w20, #0x7fffffff
  435ad0:	mov	w10, #0x18                  	// #24
  435ad4:	umull	x9, w9, w10
  435ad8:	ldr	w23, [x8, x9]
  435adc:	cmp	w22, w23
  435ae0:	b.eq	435aa4 <feof@plt+0x329c4>  // b.none
  435ae4:	mov	w24, w22
  435ae8:	tbz	w22, #31, 435b00 <feof@plt+0x32a20>
  435aec:	ldr	x8, [x19, #104]
  435af0:	and	w9, w22, #0x7fffffff
  435af4:	mov	w10, #0x18                  	// #24
  435af8:	umull	x9, w9, w10
  435afc:	ldr	w24, [x8, x9]
  435b00:	lsr	w8, w24, #28
  435b04:	cmp	w8, #0x7
  435b08:	mov	w25, #0x6fffffff            	// #1879048191
  435b0c:	b.cc	435b38 <feof@plt+0x32a58>  // b.lo, b.ul, b.last
  435b10:	tbnz	w24, #31, 435b38 <feof@plt+0x32a58>
  435b14:	mov	w8, w22
  435b18:	tbz	w22, #31, 435b30 <feof@plt+0x32a50>
  435b1c:	ldr	x8, [x19, #104]
  435b20:	and	w9, w22, #0x7fffffff
  435b24:	mov	w10, #0x18                  	// #24
  435b28:	umull	x9, w9, w10
  435b2c:	ldr	w8, [x8, x9]
  435b30:	cmp	w8, #0x2
  435b34:	b.cs	435c74 <feof@plt+0x32b94>  // b.hs, b.nlast
  435b38:	mov	w8, w23
  435b3c:	tbnz	w23, #31, 435b4c <feof@plt+0x32a6c>
  435b40:	cmp	w8, w25
  435b44:	b.hi	435b68 <feof@plt+0x32a88>  // b.pmore
  435b48:	b	435c34 <feof@plt+0x32b54>
  435b4c:	ldr	x8, [x19, #104]
  435b50:	and	w9, w23, #0x7fffffff
  435b54:	mov	w10, #0x18                  	// #24
  435b58:	umull	x9, w9, w10
  435b5c:	ldr	w8, [x8, x9]
  435b60:	cmp	w8, w25
  435b64:	b.ls	435c34 <feof@plt+0x32b54>  // b.plast
  435b68:	tbnz	w8, #31, 435c34 <feof@plt+0x32b54>
  435b6c:	mov	w8, w23
  435b70:	tbz	w23, #31, 435b88 <feof@plt+0x32aa8>
  435b74:	ldr	x8, [x19, #104]
  435b78:	and	w9, w23, #0x7fffffff
  435b7c:	mov	w10, #0x18                  	// #24
  435b80:	umull	x9, w9, w10
  435b84:	ldr	w8, [x8, x9]
  435b88:	cmp	w8, #0x2
  435b8c:	b.cs	435cb0 <feof@plt+0x32bd0>  // b.hs, b.nlast
  435b90:	cmp	w22, w23
  435b94:	b.ne	435c34 <feof@plt+0x32b54>  // b.any
  435b98:	cmp	w24, w25
  435b9c:	b.ls	435c34 <feof@plt+0x32b54>  // b.plast
  435ba0:	tbnz	w24, #31, 435c34 <feof@plt+0x32b54>
  435ba4:	mov	x0, x19
  435ba8:	mov	w1, w21
  435bac:	bl	4345c8 <feof@plt+0x314e8>
  435bb0:	mov	x22, x0
  435bb4:	mov	x0, x19
  435bb8:	mov	w1, w20
  435bbc:	bl	4345c8 <feof@plt+0x314e8>
  435bc0:	cbz	x22, 435d10 <feof@plt+0x32c30>
  435bc4:	mov	x23, x0
  435bc8:	b	435be4 <feof@plt+0x32b04>
  435bcc:	ldr	w21, [x22, #24]
  435bd0:	mov	x0, x19
  435bd4:	mov	w1, w21
  435bd8:	bl	4345c8 <feof@plt+0x314e8>
  435bdc:	mov	x22, x0
  435be0:	cbz	x0, 435d10 <feof@plt+0x32c30>
  435be4:	cbz	x23, 435cec <feof@plt+0x32c0c>
  435be8:	ldr	w8, [x22]
  435bec:	lsr	w9, w8, #28
  435bf0:	cmp	w9, #0x7
  435bf4:	b.cc	435cec <feof@plt+0x32c0c>  // b.lo, b.ul, b.last
  435bf8:	cmp	x22, x23
  435bfc:	b.eq	435cec <feof@plt+0x32c0c>  // b.none
  435c00:	ldr	w9, [x23]
  435c04:	lsr	w10, w9, #28
  435c08:	cmp	w10, #0x7
  435c0c:	b.cc	435cec <feof@plt+0x32c0c>  // b.lo, b.ul, b.last
  435c10:	cmp	w8, w9
  435c14:	b.cc	435bcc <feof@plt+0x32aec>  // b.lo, b.ul, b.last
  435c18:	ldr	w20, [x23, #24]
  435c1c:	mov	x0, x19
  435c20:	mov	w1, w20
  435c24:	bl	4345c8 <feof@plt+0x314e8>
  435c28:	mov	x23, x0
  435c2c:	cbnz	x22, 435be4 <feof@plt+0x32b04>
  435c30:	b	435d10 <feof@plt+0x32c30>
  435c34:	tbnz	w22, #31, 435c44 <feof@plt+0x32b64>
  435c38:	tbnz	w23, #31, 435c5c <feof@plt+0x32b7c>
  435c3c:	sub	w0, w23, w22
  435c40:	b	435cf8 <feof@plt+0x32c18>
  435c44:	ldr	x8, [x19, #104]
  435c48:	and	w9, w22, #0x7fffffff
  435c4c:	mov	w10, #0x18                  	// #24
  435c50:	umull	x9, w9, w10
  435c54:	ldr	w22, [x8, x9]
  435c58:	tbz	w23, #31, 435c3c <feof@plt+0x32b5c>
  435c5c:	ldr	x8, [x19, #104]
  435c60:	and	w9, w23, #0x7fffffff
  435c64:	mov	w10, #0x18                  	// #24
  435c68:	umull	x9, w9, w10
  435c6c:	ldr	w23, [x8, x9]
  435c70:	b	435c3c <feof@plt+0x32b5c>
  435c74:	tbz	w22, #31, 435c8c <feof@plt+0x32bac>
  435c78:	ldr	x8, [x19, #104]
  435c7c:	and	w9, w22, #0x7fffffff
  435c80:	mov	w10, #0x18                  	// #24
  435c84:	umull	x9, w9, w10
  435c88:	ldr	w22, [x8, x9]
  435c8c:	mov	x0, x19
  435c90:	mov	w1, w22
  435c94:	bl	4345c8 <feof@plt+0x314e8>
  435c98:	cbz	x0, 435b38 <feof@plt+0x32a58>
  435c9c:	ldr	w8, [x0]
  435ca0:	cmp	w8, w25
  435ca4:	b.ls	435b38 <feof@plt+0x32a58>  // b.plast
  435ca8:	ldr	w22, [x0, #24]
  435cac:	b	435c8c <feof@plt+0x32bac>
  435cb0:	tbz	w23, #31, 435cc8 <feof@plt+0x32be8>
  435cb4:	ldr	x8, [x19, #104]
  435cb8:	and	w9, w23, #0x7fffffff
  435cbc:	mov	w10, #0x18                  	// #24
  435cc0:	umull	x9, w9, w10
  435cc4:	ldr	w23, [x8, x9]
  435cc8:	mov	x0, x19
  435ccc:	mov	w1, w23
  435cd0:	bl	4345c8 <feof@plt+0x314e8>
  435cd4:	cbz	x0, 435b90 <feof@plt+0x32ab0>
  435cd8:	ldr	w8, [x0]
  435cdc:	cmp	w8, w25
  435ce0:	b.ls	435b90 <feof@plt+0x32ab0>  // b.plast
  435ce4:	ldr	w23, [x0, #24]
  435ce8:	b	435cc8 <feof@plt+0x32be8>
  435cec:	cmp	x22, x23
  435cf0:	b.ne	435d10 <feof@plt+0x32c30>  // b.any
  435cf4:	sub	w0, w20, w21
  435cf8:	ldp	x20, x19, [sp, #64]
  435cfc:	ldp	x22, x21, [sp, #48]
  435d00:	ldp	x24, x23, [sp, #32]
  435d04:	ldr	x25, [sp, #16]
  435d08:	ldp	x29, x30, [sp], #80
  435d0c:	ret
  435d10:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  435d14:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  435d18:	add	x0, x0, #0x5e1
  435d1c:	add	x2, x2, #0x5f9
  435d20:	mov	w1, #0x549                 	// #1353
  435d24:	bl	40f560 <feof@plt+0xc480>
  435d28:	stp	x29, x30, [sp, #-48]!
  435d2c:	stp	x20, x19, [sp, #32]
  435d30:	mov	x19, x0
  435d34:	stp	x22, x21, [sp, #16]
  435d38:	mov	x29, sp
  435d3c:	tbz	w1, #31, 435d58 <feof@plt+0x32c78>
  435d40:	ldr	x8, [x19, #104]
  435d44:	and	w9, w1, #0x7fffffff
  435d48:	mov	w10, #0x18                  	// #24
  435d4c:	umull	x9, w9, w10
  435d50:	ldr	w1, [x8, x9]
  435d54:	tbnz	w1, #31, 435dfc <feof@plt+0x32d1c>
  435d58:	mov	w8, w1
  435d5c:	lsr	w9, w8, #28
  435d60:	cmp	w9, #0x7
  435d64:	mov	w0, wzr
  435d68:	b.cc	435dec <feof@plt+0x32d0c>  // b.lo, b.ul, b.last
  435d6c:	tbnz	w8, #31, 435dec <feof@plt+0x32d0c>
  435d70:	mov	w21, #0x6fffffff            	// #1879048191
  435d74:	mov	w22, #0x18                  	// #24
  435d78:	mov	x0, x19
  435d7c:	mov	w20, w1
  435d80:	bl	4345c8 <feof@plt+0x314e8>
  435d84:	mov	w10, w20
  435d88:	tbz	w20, #31, 435d9c <feof@plt+0x32cbc>
  435d8c:	ldr	x8, [x19, #104]
  435d90:	and	w9, w20, #0x7fffffff
  435d94:	umull	x9, w9, w22
  435d98:	ldr	w10, [x8, x9]
  435d9c:	ldr	w9, [x0]
  435da0:	ldr	x8, [x0, #16]
  435da4:	sub	w10, w10, w9
  435da8:	lsl	w10, w10, #1
  435dac:	ldr	w1, [x8, w10, uxtw #2]
  435db0:	mov	w10, w1
  435db4:	tbz	w1, #31, 435dc8 <feof@plt+0x32ce8>
  435db8:	ldr	x10, [x19, #104]
  435dbc:	and	x11, x1, #0x7fffffff
  435dc0:	mul	x11, x11, x22
  435dc4:	ldr	w10, [x10, x11]
  435dc8:	cmp	w10, w21
  435dcc:	b.ls	435dd4 <feof@plt+0x32cf4>  // b.plast
  435dd0:	tbz	w10, #31, 435d78 <feof@plt+0x32c98>
  435dd4:	sub	w9, w20, w9
  435dd8:	mov	w10, #0x1                   	// #1
  435ddc:	bfi	w10, w9, #1, #31
  435de0:	ldr	w8, [x8, w10, uxtw #2]
  435de4:	cmp	w1, w8
  435de8:	cset	w0, eq  // eq = none
  435dec:	ldp	x20, x19, [sp, #32]
  435df0:	ldp	x22, x21, [sp, #16]
  435df4:	ldp	x29, x30, [sp], #48
  435df8:	ret
  435dfc:	and	x9, x1, #0x7fffffff
  435e00:	mov	w10, #0x18                  	// #24
  435e04:	mul	x9, x9, x10
  435e08:	ldr	w8, [x8, x9]
  435e0c:	b	435d5c <feof@plt+0x32c7c>
  435e10:	stp	x29, x30, [sp, #-48]!
  435e14:	stp	x22, x21, [sp, #16]
  435e18:	stp	x20, x19, [sp, #32]
  435e1c:	ldr	x22, [x2]
  435e20:	mov	x19, x2
  435e24:	mov	x20, x0
  435e28:	mov	x29, sp
  435e2c:	tbz	w1, #31, 435e58 <feof@plt+0x32d78>
  435e30:	ldr	x8, [x20, #104]
  435e34:	and	w9, w1, #0x7fffffff
  435e38:	mov	w10, #0x18                  	// #24
  435e3c:	umull	x9, w9, w10
  435e40:	ldr	w1, [x8, x9]
  435e44:	tbz	w1, #31, 435e58 <feof@plt+0x32d78>
  435e48:	and	x9, x1, #0x7fffffff
  435e4c:	mov	w10, #0x18                  	// #24
  435e50:	mul	x9, x9, x10
  435e54:	ldr	w1, [x8, x9]
  435e58:	ldr	w8, [x22]
  435e5c:	ldr	x9, [x22, #16]
  435e60:	mov	x0, x20
  435e64:	sub	w8, w1, w8
  435e68:	lsl	w8, w8, #1
  435e6c:	ldr	w21, [x9, w8, uxtw #2]
  435e70:	mov	w1, w21
  435e74:	bl	4345c8 <feof@plt+0x314e8>
  435e78:	cbz	x0, 435e8c <feof@plt+0x32dac>
  435e7c:	ldr	w8, [x0]
  435e80:	lsr	w8, w8, #28
  435e84:	cmp	w8, #0x6
  435e88:	b.hi	435e9c <feof@plt+0x32dbc>  // b.pmore
  435e8c:	ldr	w21, [x22, #24]
  435e90:	mov	x0, x20
  435e94:	mov	w1, w21
  435e98:	bl	4345c8 <feof@plt+0x314e8>
  435e9c:	str	x0, [x19]
  435ea0:	mov	w0, w21
  435ea4:	ldp	x20, x19, [sp, #32]
  435ea8:	ldp	x22, x21, [sp, #16]
  435eac:	ldp	x29, x30, [sp], #48
  435eb0:	ret
  435eb4:	stp	x29, x30, [sp, #-80]!
  435eb8:	stp	x22, x21, [sp, #48]
  435ebc:	stp	x20, x19, [sp, #64]
  435ec0:	mov	x20, x2
  435ec4:	mov	w19, w1
  435ec8:	mov	x21, x0
  435ecc:	stp	x26, x25, [sp, #16]
  435ed0:	stp	x24, x23, [sp, #32]
  435ed4:	mov	x29, sp
  435ed8:	tbz	w1, #31, 435ef0 <feof@plt+0x32e10>
  435edc:	ldr	x8, [x21, #104]
  435ee0:	and	w9, w19, #0x7fffffff
  435ee4:	mov	w10, #0x18                  	// #24
  435ee8:	umull	x9, w9, w10
  435eec:	ldr	w19, [x8, x9]
  435ef0:	mov	x0, x21
  435ef4:	mov	w1, w19
  435ef8:	bl	4345c8 <feof@plt+0x314e8>
  435efc:	cbz	x0, 4360fc <feof@plt+0x3301c>
  435f00:	ldr	w8, [x0]
  435f04:	mov	x22, x0
  435f08:	lsr	w8, w8, #28
  435f0c:	cmp	w8, #0x7
  435f10:	b.cc	4360fc <feof@plt+0x3301c>  // b.lo, b.ul, b.last
  435f14:	mov	w8, w19
  435f18:	tbnz	w19, #31, 435f2c <feof@plt+0x32e4c>
  435f1c:	cmp	w8, #0x2
  435f20:	b.cs	435f48 <feof@plt+0x32e68>  // b.hs, b.nlast
  435f24:	mov	x0, xzr
  435f28:	b	435fac <feof@plt+0x32ecc>
  435f2c:	ldr	x8, [x21, #104]
  435f30:	and	w9, w19, #0x7fffffff
  435f34:	mov	w10, #0x18                  	// #24
  435f38:	umull	x9, w9, w10
  435f3c:	ldr	w8, [x8, x9]
  435f40:	cmp	w8, #0x2
  435f44:	b.cc	435f24 <feof@plt+0x32e44>  // b.lo, b.ul, b.last
  435f48:	mov	x0, x21
  435f4c:	mov	w1, w19
  435f50:	bl	4345c8 <feof@plt+0x314e8>
  435f54:	cbz	x0, 435fac <feof@plt+0x32ecc>
  435f58:	mov	w24, #0x18                  	// #24
  435f5c:	mov	w23, w19
  435f60:	b	435f84 <feof@plt+0x32ea4>
  435f64:	ldr	x9, [x0, #16]
  435f68:	sub	w8, w23, w8
  435f6c:	lsl	w8, w8, #1
  435f70:	mov	x0, x21
  435f74:	ldr	w23, [x9, w8, uxtw #2]
  435f78:	mov	w1, w23
  435f7c:	bl	4345c8 <feof@plt+0x314e8>
  435f80:	cbz	x0, 435fb0 <feof@plt+0x32ed0>
  435f84:	ldr	w8, [x0]
  435f88:	lsr	w9, w8, #28
  435f8c:	cmp	w9, #0x6
  435f90:	b.ls	435fb0 <feof@plt+0x32ed0>  // b.plast
  435f94:	tbz	w23, #31, 435f64 <feof@plt+0x32e84>
  435f98:	ldr	x9, [x21, #104]
  435f9c:	and	w10, w23, #0x7fffffff
  435fa0:	umull	x10, w10, w24
  435fa4:	ldr	w23, [x9, x10]
  435fa8:	b	435f64 <feof@plt+0x32e84>
  435fac:	mov	w23, w19
  435fb0:	cmp	w23, #0x2
  435fb4:	b.cc	435fc0 <feof@plt+0x32ee0>  // b.lo, b.ul, b.last
  435fb8:	ldrb	w8, [x0, #5]
  435fbc:	cbz	w8, 4360fc <feof@plt+0x3301c>
  435fc0:	mov	w25, #0x6fffffff            	// #1879048191
  435fc4:	mov	w26, #0x18                  	// #24
  435fc8:	b	435fdc <feof@plt+0x32efc>
  435fcc:	mov	x0, xzr
  435fd0:	mov	w23, w19
  435fd4:	mov	x22, x24
  435fd8:	cbz	x24, 4360f4 <feof@plt+0x33014>
  435fdc:	ldr	w8, [x22]
  435fe0:	cmp	w8, w25
  435fe4:	b.ls	4360f4 <feof@plt+0x33014>  // b.plast
  435fe8:	cmp	w23, #0x2
  435fec:	b.cc	435ff8 <feof@plt+0x32f18>  // b.lo, b.ul, b.last
  435ff0:	ldrb	w9, [x0, #5]
  435ff4:	cbz	w9, 4360f4 <feof@plt+0x33014>
  435ff8:	tbz	w19, #31, 43601c <feof@plt+0x32f3c>
  435ffc:	ldr	x9, [x21, #104]
  436000:	and	w10, w19, #0x7fffffff
  436004:	umull	x10, w10, w26
  436008:	ldr	w19, [x9, x10]
  43600c:	tbz	w19, #31, 43601c <feof@plt+0x32f3c>
  436010:	and	x10, x19, #0x7fffffff
  436014:	mul	x10, x10, x26
  436018:	ldr	w19, [x9, x10]
  43601c:	ldr	x9, [x22, #16]
  436020:	sub	w8, w19, w8
  436024:	lsl	w8, w8, #1
  436028:	mov	x0, x21
  43602c:	ldr	w19, [x9, w8, uxtw #2]
  436030:	mov	w1, w19
  436034:	bl	4345c8 <feof@plt+0x314e8>
  436038:	cbz	x0, 436060 <feof@plt+0x32f80>
  43603c:	ldr	w8, [x0]
  436040:	mov	x24, x0
  436044:	cmp	w8, w25
  436048:	b.ls	436060 <feof@plt+0x32f80>  // b.plast
  43604c:	mov	w8, w19
  436050:	tbnz	w19, #31, 43607c <feof@plt+0x32f9c>
  436054:	cmp	w8, #0x2
  436058:	b.cc	435fcc <feof@plt+0x32eec>  // b.lo, b.ul, b.last
  43605c:	b	436094 <feof@plt+0x32fb4>
  436060:	ldr	w19, [x22, #24]
  436064:	mov	x0, x21
  436068:	mov	w1, w19
  43606c:	bl	4345c8 <feof@plt+0x314e8>
  436070:	mov	x24, x0
  436074:	mov	w8, w19
  436078:	tbz	w19, #31, 436054 <feof@plt+0x32f74>
  43607c:	ldr	x8, [x21, #104]
  436080:	and	w9, w19, #0x7fffffff
  436084:	umull	x9, w9, w26
  436088:	ldr	w8, [x8, x9]
  43608c:	cmp	w8, #0x2
  436090:	b.cc	435fcc <feof@plt+0x32eec>  // b.lo, b.ul, b.last
  436094:	mov	x0, x21
  436098:	mov	w1, w19
  43609c:	bl	4345c8 <feof@plt+0x314e8>
  4360a0:	mov	w23, w19
  4360a4:	cbnz	x0, 4360cc <feof@plt+0x32fec>
  4360a8:	b	435fd4 <feof@plt+0x32ef4>
  4360ac:	ldr	x9, [x0, #16]
  4360b0:	sub	w8, w23, w8
  4360b4:	lsl	w8, w8, #1
  4360b8:	mov	x0, x21
  4360bc:	ldr	w23, [x9, w8, uxtw #2]
  4360c0:	mov	w1, w23
  4360c4:	bl	4345c8 <feof@plt+0x314e8>
  4360c8:	cbz	x0, 435fd4 <feof@plt+0x32ef4>
  4360cc:	ldr	w8, [x0]
  4360d0:	lsr	w9, w8, #28
  4360d4:	cmp	w9, #0x6
  4360d8:	b.ls	435fd4 <feof@plt+0x32ef4>  // b.plast
  4360dc:	tbz	w23, #31, 4360ac <feof@plt+0x32fcc>
  4360e0:	ldr	x9, [x21, #104]
  4360e4:	and	w10, w23, #0x7fffffff
  4360e8:	umull	x10, w10, w26
  4360ec:	ldr	w23, [x9, x10]
  4360f0:	b	4360ac <feof@plt+0x32fcc>
  4360f4:	cbz	x20, 4360fc <feof@plt+0x3301c>
  4360f8:	str	x22, [x20]
  4360fc:	mov	w0, w19
  436100:	ldp	x20, x19, [sp, #64]
  436104:	ldp	x22, x21, [sp, #48]
  436108:	ldp	x24, x23, [sp, #32]
  43610c:	ldp	x26, x25, [sp, #16]
  436110:	ldp	x29, x30, [sp], #80
  436114:	ret
  436118:	stp	x29, x30, [sp, #-16]!
  43611c:	movi	v0.2d, #0x0
  436120:	mov	x29, sp
  436124:	stp	q0, q0, [x8]
  436128:	tbnz	w2, #31, 43613c <feof@plt+0x3305c>
  43612c:	cmp	w2, #0x2
  436130:	b.cs	436160 <feof@plt+0x33080>  // b.hs, b.nlast
  436134:	ldp	x29, x30, [sp], #16
  436138:	ret
  43613c:	ldr	x9, [x0, #104]
  436140:	and	w10, w2, #0x7fffffff
  436144:	mov	w11, #0x18                  	// #24
  436148:	umaddl	x9, w10, w11, x9
  43614c:	ldr	x10, [x9, #16]
  436150:	str	x10, [x8, #16]
  436154:	ldr	w2, [x9]
  436158:	cmp	w2, #0x2
  43615c:	b.cc	436134 <feof@plt+0x33054>  // b.lo, b.ul, b.last
  436160:	cbz	x1, 4361e0 <feof@plt+0x33100>
  436164:	mov	w9, w2
  436168:	tbz	w2, #31, 436180 <feof@plt+0x330a0>
  43616c:	ldr	x9, [x0, #104]
  436170:	and	w10, w2, #0x7fffffff
  436174:	mov	w11, #0x18                  	// #24
  436178:	umull	x10, w10, w11
  43617c:	ldr	w9, [x9, x10]
  436180:	lsr	w10, w9, #28
  436184:	cmp	w10, #0x7
  436188:	b.cc	436190 <feof@plt+0x330b0>  // b.lo, b.ul, b.last
  43618c:	tbz	w9, #31, 4361f8 <feof@plt+0x33118>
  436190:	ldr	x9, [x1, #8]
  436194:	mov	w11, #0xffffffff            	// #-1
  436198:	str	x9, [x8]
  43619c:	ldr	w9, [x1]
  4361a0:	ldrh	w10, [x1, #6]
  4361a4:	ldr	w12, [x1, #16]
  4361a8:	sub	w9, w2, w9
  4361ac:	lsl	w11, w11, w10
  4361b0:	bic	w11, w9, w11
  4361b4:	lsr	w9, w9, w10
  4361b8:	lsr	x10, x10, #8
  4361bc:	add	w9, w9, w12
  4361c0:	lsr	w10, w11, w10
  4361c4:	stp	w9, w10, [x8, #8]
  4361c8:	ldrb	w9, [x1, #5]
  4361cc:	cmp	w9, #0x0
  4361d0:	cset	w9, ne  // ne = any
  4361d4:	strb	w9, [x8, #24]
  4361d8:	ldp	x29, x30, [sp], #16
  4361dc:	ret
  4361e0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  4361e4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4361e8:	add	x0, x0, #0x5e1
  4361ec:	add	x2, x2, #0x62c
  4361f0:	mov	w1, #0x6bd                 	// #1725
  4361f4:	bl	40f560 <feof@plt+0xc480>
  4361f8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  4361fc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  436200:	add	x0, x0, #0x5e1
  436204:	add	x2, x2, #0x62c
  436208:	mov	w1, #0x6c5                 	// #1733
  43620c:	bl	40f560 <feof@plt+0xc480>
  436210:	sub	sp, sp, #0x60
  436214:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x3838>
  436218:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x3838>
  43621c:	add	x8, x8, #0x1b5
  436220:	add	x9, x9, #0x1be
  436224:	stp	x29, x30, [sp, #48]
  436228:	stp	x22, x21, [sp, #64]
  43622c:	stp	x20, x19, [sp, #80]
  436230:	stp	x8, x9, [sp, #8]
  436234:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  436238:	ldr	x8, [x8, #1464]
  43623c:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x3838>
  436240:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x3838>
  436244:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  436248:	cmp	x0, #0x0
  43624c:	mov	x20, x1
  436250:	add	x10, x10, #0x1c7
  436254:	add	x11, x11, #0x1d1
  436258:	add	x9, x9, #0x644
  43625c:	csel	x19, x8, x0, eq  // eq = none
  436260:	add	x29, sp, #0x30
  436264:	stp	x10, x11, [sp, #24]
  436268:	str	x9, [sp, #40]
  43626c:	tbz	w3, #0, 4362c4 <feof@plt+0x331e4>
  436270:	ldr	x8, [x20, #24]
  436274:	sxtw	x9, w2
  436278:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  43627c:	adrp	x5, 470000 <_obstack_memory_used@@Base+0xe838>
  436280:	add	x20, x8, x9, lsl #5
  436284:	ldr	w4, [x20]
  436288:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1838>
  43628c:	add	x1, x1, #0x653
  436290:	add	x5, x5, #0x644
  436294:	add	x6, x6, #0x4ac
  436298:	mov	x0, x19
  43629c:	mov	x3, x20
  4362a0:	bl	402a70 <fprintf@plt>
  4362a4:	ldr	x8, [x20, #8]
  4362a8:	ldr	w3, [x20, #4]
  4362ac:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4362b0:	add	x1, x1, #0x6b1
  4362b4:	ldr	x2, [x8]
  4362b8:	mov	x0, x19
  4362bc:	bl	402a70 <fprintf@plt>
  4362c0:	b	43643c <feof@plt+0x3335c>
  4362c4:	ldr	x8, [x20]
  4362c8:	mov	w9, #0x18                  	// #24
  4362cc:	smaddl	x21, w2, w9, x8
  4362d0:	ldrb	w8, [x21, #4]
  4362d4:	ldr	w4, [x21]
  4362d8:	cmp	x8, #0x4
  4362dc:	b.hi	4362ec <feof@plt+0x3320c>  // b.pmore
  4362e0:	add	x9, sp, #0x8
  4362e4:	ldr	x5, [x9, x8, lsl #3]
  4362e8:	b	4362f4 <feof@plt+0x33214>
  4362ec:	adrp	x5, 464000 <_obstack_memory_used@@Base+0x2838>
  4362f0:	add	x5, x5, #0x6a3
  4362f4:	ldrb	w8, [x21, #5]
  4362f8:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  4362fc:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  436300:	add	x9, x9, #0x683
  436304:	add	x10, x10, #0x4ac
  436308:	cmp	w8, #0x0
  43630c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  436310:	csel	x6, x10, x9, eq  // eq = none
  436314:	add	x1, x1, #0x653
  436318:	mov	x0, x19
  43631c:	mov	x3, x21
  436320:	bl	402a70 <fprintf@plt>
  436324:	ldr	w8, [x21, #20]
  436328:	tbnz	w8, #31, 43633c <feof@plt+0x3325c>
  43632c:	cmp	w8, #0x2
  436330:	b.cs	436358 <feof@plt+0x33278>  // b.hs, b.nlast
  436334:	mov	x22, xzr
  436338:	b	4363e4 <feof@plt+0x33304>
  43633c:	ldr	x9, [x20, #104]
  436340:	and	x8, x8, #0x7fffffff
  436344:	mov	w10, #0x18                  	// #24
  436348:	mul	x8, x8, x10
  43634c:	ldr	w8, [x9, x8]
  436350:	cmp	w8, #0x2
  436354:	b.cc	436334 <feof@plt+0x33254>  // b.lo, b.ul, b.last
  436358:	ldrsw	x10, [x20, #16]
  43635c:	ldr	x9, [x20]
  436360:	mov	w11, #0x18                  	// #24
  436364:	madd	x22, x10, x11, x9
  436368:	ldr	w11, [x22]
  43636c:	cmp	w8, w11
  436370:	b.cs	43637c <feof@plt+0x3329c>  // b.hs, b.nlast
  436374:	mov	w11, wzr
  436378:	b	4363a0 <feof@plt+0x332c0>
  43637c:	ldr	w12, [x20, #12]
  436380:	add	w11, w10, #0x1
  436384:	cmp	w11, w12
  436388:	b.eq	4363e4 <feof@plt+0x33304>  // b.none
  43638c:	ldr	w11, [x22, #24]
  436390:	cmp	w8, w11
  436394:	mov	w11, w10
  436398:	mov	w10, w12
  43639c:	b.cc	4363e4 <feof@plt+0x33304>  // b.lo, b.ul, b.last
  4363a0:	sub	w12, w10, w11
  4363a4:	cmp	w12, #0x2
  4363a8:	b.cc	4363d8 <feof@plt+0x332f8>  // b.lo, b.ul, b.last
  4363ac:	mov	w12, #0x18                  	// #24
  4363b0:	add	w13, w11, w10
  4363b4:	lsr	w13, w13, #1
  4363b8:	umull	x14, w13, w12
  4363bc:	ldr	w14, [x9, x14]
  4363c0:	cmp	w14, w8
  4363c4:	csel	w11, w11, w13, hi  // hi = pmore
  4363c8:	csel	w10, w13, w10, hi  // hi = pmore
  4363cc:	sub	w13, w10, w11
  4363d0:	cmp	w13, #0x1
  4363d4:	b.hi	4363b0 <feof@plt+0x332d0>  // b.pmore
  4363d8:	mov	w8, #0x18                  	// #24
  4363dc:	smaddl	x22, w11, w8, x9
  4363e0:	str	w11, [x20, #16]
  4363e4:	ldr	x2, [x21, #8]
  4363e8:	ldr	w3, [x21, #16]
  4363ec:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4363f0:	add	x1, x1, #0x687
  4363f4:	mov	x0, x19
  4363f8:	bl	402a70 <fprintf@plt>
  4363fc:	cbz	x22, 436420 <feof@plt+0x33340>
  436400:	ldr	x8, [x20]
  436404:	ldr	x3, [x22, #8]
  436408:	mov	w9, #0xaaab                	// #43691
  43640c:	movk	w9, #0xaaaa, lsl #16
  436410:	sub	x8, x22, x8
  436414:	lsr	x8, x8, #3
  436418:	mul	w2, w8, w9
  43641c:	b	43642c <feof@plt+0x3334c>
  436420:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  436424:	add	x3, x3, #0x6ac
  436428:	mov	w2, #0xffffffff            	// #-1
  43642c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  436430:	add	x1, x1, #0x694
  436434:	mov	x0, x19
  436438:	bl	402a70 <fprintf@plt>
  43643c:	mov	x1, x19
  436440:	ldp	x20, x19, [sp, #80]
  436444:	ldp	x22, x21, [sp, #64]
  436448:	ldp	x29, x30, [sp, #48]
  43644c:	mov	w0, #0xa                   	// #10
  436450:	add	sp, sp, #0x60
  436454:	b	402d60 <fputc@plt>
  436458:	sub	sp, sp, #0x70
  43645c:	stp	x22, x21, [sp, #80]
  436460:	stp	x20, x19, [sp, #96]
  436464:	mov	x19, x2
  436468:	mov	w20, w1
  43646c:	mov	x22, x0
  436470:	stp	x29, x30, [sp, #32]
  436474:	str	x25, [sp, #48]
  436478:	stp	x24, x23, [sp, #64]
  43647c:	add	x29, sp, #0x20
  436480:	tbz	w1, #31, 436498 <feof@plt+0x333b8>
  436484:	ldr	x8, [x22, #104]
  436488:	and	w9, w20, #0x7fffffff
  43648c:	mov	w10, #0x18                  	// #24
  436490:	umull	x9, w9, w10
  436494:	ldr	w20, [x8, x9]
  436498:	cbz	w20, 4366c8 <feof@plt+0x335e8>
  43649c:	mov	w8, w20
  4364a0:	tbnz	w20, #31, 4364d4 <feof@plt+0x333f4>
  4364a4:	cmp	w8, #0x2
  4364a8:	b.cs	4364f0 <feof@plt+0x33410>  // b.hs, b.nlast
  4364ac:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x838>
  4364b0:	add	x21, x21, #0xbb5
  4364b4:	mov	x7, xzr
  4364b8:	mov	w4, #0xffffffff            	// #-1
  4364bc:	mov	w24, w20
  4364c0:	mov	w5, #0xffffffff            	// #-1
  4364c4:	mov	w6, #0xffffffff            	// #-1
  4364c8:	mov	x3, x21
  4364cc:	mov	w8, #0xffffffff            	// #-1
  4364d0:	b	4366a8 <feof@plt+0x335c8>
  4364d4:	ldr	x8, [x22, #104]
  4364d8:	and	w9, w20, #0x7fffffff
  4364dc:	mov	w10, #0x18                  	// #24
  4364e0:	umull	x9, w9, w10
  4364e4:	ldr	w8, [x8, x9]
  4364e8:	cmp	w8, #0x2
  4364ec:	b.cc	4364ac <feof@plt+0x333cc>  // b.lo, b.ul, b.last
  4364f0:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x838>
  4364f4:	mov	w25, #0x18                  	// #24
  4364f8:	add	x21, x21, #0xbb5
  4364fc:	mov	w24, w20
  436500:	mov	w23, w24
  436504:	tbz	w24, #31, 436518 <feof@plt+0x33438>
  436508:	ldr	x8, [x22, #104]
  43650c:	and	w9, w24, #0x7fffffff
  436510:	umull	x9, w9, w25
  436514:	ldr	w23, [x8, x9]
  436518:	mov	x0, x22
  43651c:	mov	w1, w23
  436520:	bl	4345c8 <feof@plt+0x314e8>
  436524:	mov	x7, x0
  436528:	cbz	x0, 43655c <feof@plt+0x3347c>
  43652c:	ldr	w8, [x7]
  436530:	lsr	w9, w8, #28
  436534:	cmp	w9, #0x7
  436538:	b.cc	436574 <feof@plt+0x33494>  // b.lo, b.ul, b.last
  43653c:	ldr	x9, [x7, #16]
  436540:	sub	w8, w23, w8
  436544:	mov	w10, #0x1                   	// #1
  436548:	bfi	w10, w8, #1, #31
  43654c:	ldr	w24, [x9, w10, uxtw #2]
  436550:	mov	w23, w24
  436554:	tbz	w24, #31, 436518 <feof@plt+0x33438>
  436558:	b	436508 <feof@plt+0x33428>
  43655c:	mov	w4, #0xffffffff            	// #-1
  436560:	mov	x3, x21
  436564:	mov	w5, #0xffffffff            	// #-1
  436568:	mov	w6, #0xffffffff            	// #-1
  43656c:	mov	w8, #0xffffffff            	// #-1
  436570:	b	4366a8 <feof@plt+0x335c8>
  436574:	ldrb	w8, [x7, #5]
  436578:	ldr	w9, [x7]
  43657c:	ldrh	w10, [x7, #6]
  436580:	ldr	w11, [x7, #16]
  436584:	ldr	x21, [x7, #8]
  436588:	cmp	w8, #0x0
  43658c:	mov	w8, #0xffffffff            	// #-1
  436590:	sub	w9, w24, w9
  436594:	lsl	w8, w8, w10
  436598:	bic	w8, w9, w8
  43659c:	lsr	w9, w9, w10
  4365a0:	lsr	x10, x10, #8
  4365a4:	cset	w6, ne  // ne = any
  4365a8:	cmp	w24, w20
  4365ac:	add	w4, w9, w11
  4365b0:	lsr	w5, w8, w10
  4365b4:	cset	w8, ne  // ne = any
  4365b8:	b.eq	4365cc <feof@plt+0x334ec>  // b.none
  4365bc:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  4365c0:	mov	w8, #0x1                   	// #1
  4365c4:	add	x3, x3, #0x6c8
  4365c8:	b	4366a8 <feof@plt+0x335c8>
  4365cc:	ldr	w9, [x7, #20]
  4365d0:	tbz	w9, #31, 4365e8 <feof@plt+0x33508>
  4365d4:	ldr	x10, [x22, #104]
  4365d8:	and	x9, x9, #0x7fffffff
  4365dc:	mov	w11, #0x18                  	// #24
  4365e0:	mul	x9, x9, x11
  4365e4:	ldr	w9, [x10, x9]
  4365e8:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  4365ec:	add	x3, x3, #0x6cc
  4365f0:	cbz	x22, 436620 <feof@plt+0x33540>
  4365f4:	cmp	w9, #0x2
  4365f8:	b.cc	436620 <feof@plt+0x33540>  // b.lo, b.ul, b.last
  4365fc:	ldrsw	x11, [x22, #16]
  436600:	ldr	x10, [x22]
  436604:	mov	w12, #0x18                  	// #24
  436608:	madd	x13, x11, x12, x10
  43660c:	ldr	w12, [x13]
  436610:	cmp	w9, w12
  436614:	b.cs	436628 <feof@plt+0x33548>  // b.hs, b.nlast
  436618:	mov	w12, wzr
  43661c:	b	43664c <feof@plt+0x3356c>
  436620:	mov	w8, wzr
  436624:	b	4366a4 <feof@plt+0x335c4>
  436628:	ldr	w14, [x22, #12]
  43662c:	add	w12, w11, #0x1
  436630:	cmp	w12, w14
  436634:	b.eq	436690 <feof@plt+0x335b0>  // b.none
  436638:	ldr	w12, [x13, #24]
  43663c:	cmp	w9, w12
  436640:	mov	w12, w11
  436644:	mov	w11, w14
  436648:	b.cc	436694 <feof@plt+0x335b4>  // b.lo, b.ul, b.last
  43664c:	sub	w13, w11, w12
  436650:	cmp	w13, #0x2
  436654:	b.cc	436684 <feof@plt+0x335a4>  // b.lo, b.ul, b.last
  436658:	mov	w13, #0x18                  	// #24
  43665c:	add	w14, w12, w11
  436660:	lsr	w14, w14, #1
  436664:	umull	x15, w14, w13
  436668:	ldr	w15, [x10, x15]
  43666c:	cmp	w15, w9
  436670:	csel	w12, w12, w14, hi  // hi = pmore
  436674:	csel	w11, w14, w11, hi  // hi = pmore
  436678:	sub	w14, w11, w12
  43667c:	cmp	w14, #0x1
  436680:	b.hi	43665c <feof@plt+0x3357c>  // b.pmore
  436684:	mov	w9, #0x18                  	// #24
  436688:	smaddl	x13, w12, w9, x10
  43668c:	str	w12, [x22, #16]
  436690:	cbz	x13, 43669c <feof@plt+0x335bc>
  436694:	ldr	x3, [x13, #8]
  436698:	b	4366a4 <feof@plt+0x335c4>
  43669c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  4366a0:	add	x3, x3, #0x6cc
  4366a4:	mov	w24, w20
  4366a8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4366ac:	add	x1, x1, #0x6d3
  4366b0:	mov	x0, x19
  4366b4:	mov	x2, x21
  4366b8:	str	w24, [sp, #16]
  4366bc:	str	w20, [sp, #8]
  4366c0:	str	w8, [sp]
  4366c4:	bl	402a70 <fprintf@plt>
  4366c8:	ldp	x20, x19, [sp, #96]
  4366cc:	ldp	x22, x21, [sp, #80]
  4366d0:	ldp	x24, x23, [sp, #64]
  4366d4:	ldr	x25, [sp, #48]
  4366d8:	ldp	x29, x30, [sp, #32]
  4366dc:	add	sp, sp, #0x70
  4366e0:	ret
  4366e4:	stp	x29, x30, [sp, #-64]!
  4366e8:	stp	x24, x23, [sp, #16]
  4366ec:	stp	x22, x21, [sp, #32]
  4366f0:	stp	x20, x19, [sp, #48]
  4366f4:	mov	x29, sp
  4366f8:	cbz	x0, 436764 <feof@plt+0x33684>
  4366fc:	ldr	w22, [x0, #12]
  436700:	mov	x20, x0
  436704:	cbz	w22, 436760 <feof@plt+0x33680>
  436708:	cmp	w22, #0x1
  43670c:	b.mi	436760 <feof@plt+0x33680>  // b.first
  436710:	mov	x19, x2
  436714:	mov	x21, x1
  436718:	mov	w23, #0x18                  	// #24
  43671c:	b	43672c <feof@plt+0x3364c>
  436720:	cmp	w22, #0x2
  436724:	mov	w22, w24
  436728:	b.mi	436760 <feof@plt+0x33680>  // b.first
  43672c:	ldr	x8, [x20]
  436730:	sub	w24, w22, #0x1
  436734:	umaddl	x8, w24, w23, x8
  436738:	ldr	x0, [x8, #8]
  43673c:	cbz	x0, 436720 <feof@plt+0x33640>
  436740:	mov	x1, x21
  436744:	bl	45ffd0 <feof@plt+0x5cef0>
  436748:	cbnz	w0, 436720 <feof@plt+0x33640>
  43674c:	ldr	w8, [x20, #12]
  436750:	cmp	w8, w22
  436754:	b.ne	436778 <feof@plt+0x33698>  // b.any
  436758:	ldr	w8, [x20, #56]
  43675c:	b	43678c <feof@plt+0x336ac>
  436760:	mov	w0, wzr
  436764:	ldp	x20, x19, [sp, #48]
  436768:	ldp	x22, x21, [sp, #32]
  43676c:	ldp	x24, x23, [sp, #16]
  436770:	ldp	x29, x30, [sp], #64
  436774:	ret
  436778:	ldr	x8, [x20]
  43677c:	mov	w9, #0x18                  	// #24
  436780:	smull	x9, w22, w9
  436784:	ldr	w8, [x8, x9]
  436788:	sub	w8, w8, #0x1
  43678c:	mov	w0, #0x1                   	// #1
  436790:	str	w8, [x19]
  436794:	b	436764 <feof@plt+0x33684>
  436798:	ldp	w9, w11, [x0, #8]
  43679c:	ldp	w10, w8, [x0, #32]
  4367a0:	ldr	x16, [x0, #24]
  4367a4:	add	x12, x9, x9, lsl #1
  4367a8:	add	x14, x11, x11, lsl #1
  4367ac:	lsl	x13, x12, #3
  4367b0:	lsl	x12, x14, #3
  4367b4:	lsl	x10, x10, #5
  4367b8:	cbz	x16, 4367d0 <feof@plt+0x336f0>
  4367bc:	sub	w14, w8, #0x1
  4367c0:	sxtw	x14, w14
  4367c4:	add	x17, x16, x14, lsl #5
  4367c8:	cmp	x16, x17
  4367cc:	b.ls	436820 <feof@plt+0x33740>  // b.plast
  4367d0:	mov	x14, xzr
  4367d4:	mov	x15, xzr
  4367d8:	stp	x9, x11, [x1]
  4367dc:	stp	x13, x12, [x1, #16]
  4367e0:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4367e4:	ldr	w9, [x9, #2448]
  4367e8:	adrp	x11, 48a000 <_obstack_memory_used@@Base+0x28838>
  4367ec:	str	x9, [x1, #32]
  4367f0:	ldr	w9, [x11, #2452]
  4367f4:	lsl	x11, x8, #5
  4367f8:	stp	x10, x11, [x1, #56]
  4367fc:	stp	x14, x15, [x1, #72]
  436800:	stp	x9, x8, [x1, #40]
  436804:	ldr	w8, [x0, #100]
  436808:	add	x8, x8, x8, lsl #1
  43680c:	lsl	x8, x8, #3
  436810:	str	x8, [x1, #88]
  436814:	ldr	w8, [x0, #96]
  436818:	str	x8, [x1, #96]
  43681c:	ret
  436820:	mov	x14, xzr
  436824:	mov	x15, xzr
  436828:	b	436838 <feof@plt+0x33758>
  43682c:	add	x16, x16, #0x20
  436830:	cmp	x16, x17
  436834:	b.hi	4367d8 <feof@plt+0x336f8>  // b.pmore
  436838:	ldr	w18, [x16, #4]
  43683c:	lsl	w18, w18, #1
  436840:	add	x14, x14, w18, uxtw #2
  436844:	cbz	w18, 43682c <feof@plt+0x3374c>
  436848:	ldr	x2, [x16, #16]
  43684c:	mov	x3, xzr
  436850:	add	x4, x2, x3, lsl #2
  436854:	ldp	w5, w4, [x4]
  436858:	add	x6, x15, #0x4
  43685c:	add	x3, x3, #0x2
  436860:	cmp	w5, w4
  436864:	csel	x15, x6, x15, eq  // eq = none
  436868:	cmp	x3, x18
  43686c:	b.cc	436850 <feof@plt+0x33770>  // b.lo, b.ul, b.last
  436870:	b	43682c <feof@plt+0x3374c>
  436874:	stp	x29, x30, [sp, #-96]!
  436878:	stp	x28, x27, [sp, #16]
  43687c:	stp	x26, x25, [sp, #32]
  436880:	stp	x24, x23, [sp, #48]
  436884:	stp	x22, x21, [sp, #64]
  436888:	stp	x20, x19, [sp, #80]
  43688c:	mov	x29, sp
  436890:	cbz	x1, 436a34 <feof@plt+0x33954>
  436894:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  436898:	ldr	x8, [x8, #1464]
  43689c:	mov	w22, w2
  4368a0:	ldr	w2, [x1, #12]
  4368a4:	cmp	x0, #0x0
  4368a8:	mov	x20, x1
  4368ac:	csel	x21, x8, x0, eq  // eq = none
  4368b0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4368b4:	add	x1, x1, #0x704
  4368b8:	mov	x0, x21
  4368bc:	mov	w19, w3
  4368c0:	bl	402a70 <fprintf@plt>
  4368c4:	ldr	w2, [x20, #36]
  4368c8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4368cc:	add	x1, x1, #0x71d
  4368d0:	mov	x0, x21
  4368d4:	bl	402a70 <fprintf@plt>
  4368d8:	ldr	w2, [x20, #48]
  4368dc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4368e0:	add	x1, x1, #0x736
  4368e4:	mov	x0, x21
  4368e8:	bl	402a70 <fprintf@plt>
  4368ec:	ldr	w2, [x20, #56]
  4368f0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  4368f4:	add	x1, x1, #0x74f
  4368f8:	mov	x0, x21
  4368fc:	bl	402a70 <fprintf@plt>
  436900:	cbz	w22, 436958 <feof@plt+0x33878>
  436904:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  436908:	add	x0, x0, #0x768
  43690c:	mov	w1, #0x14                  	// #20
  436910:	mov	w2, #0x1                   	// #1
  436914:	mov	x3, x21
  436918:	bl	402fa0 <fwrite@plt>
  43691c:	mov	w23, wzr
  436920:	ldr	w8, [x20, #12]
  436924:	cmp	w23, w8
  436928:	b.cs	43694c <feof@plt+0x3386c>  // b.hs, b.nlast
  43692c:	mov	x0, x21
  436930:	mov	x1, x20
  436934:	mov	w2, w23
  436938:	mov	w3, wzr
  43693c:	bl	436210 <feof@plt+0x33130>
  436940:	add	w23, w23, #0x1
  436944:	cmp	w22, w23
  436948:	b.ne	436920 <feof@plt+0x33840>  // b.any
  43694c:	mov	w0, #0xa                   	// #10
  436950:	mov	x1, x21
  436954:	bl	402d60 <fputc@plt>
  436958:	cbz	w19, 436a34 <feof@plt+0x33954>
  43695c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  436960:	add	x0, x0, #0x77d
  436964:	mov	w1, #0x11                  	// #17
  436968:	mov	w2, #0x1                   	// #1
  43696c:	mov	x3, x21
  436970:	bl	402fa0 <fwrite@plt>
  436974:	adrp	x23, 470000 <_obstack_memory_used@@Base+0xe838>
  436978:	adrp	x24, 470000 <_obstack_memory_used@@Base+0xe838>
  43697c:	adrp	x25, 463000 <_obstack_memory_used@@Base+0x1838>
  436980:	adrp	x26, 470000 <_obstack_memory_used@@Base+0xe838>
  436984:	mov	w22, wzr
  436988:	add	x23, x23, #0x653
  43698c:	add	x24, x24, #0x644
  436990:	add	x25, x25, #0x4ac
  436994:	add	x26, x26, #0x6b1
  436998:	ldr	w8, [x20, #36]
  43699c:	cmp	w22, w8
  4369a0:	b.cs	436a10 <feof@plt+0x33930>  // b.hs, b.nlast
  4369a4:	ldr	x8, [x20, #24]
  4369a8:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  4369ac:	ldr	x9, [x9, #1464]
  4369b0:	sxtw	x10, w22
  4369b4:	add	x27, x8, x10, lsl #5
  4369b8:	ldr	w4, [x27]
  4369bc:	cmp	x21, #0x0
  4369c0:	csel	x28, x9, x21, eq  // eq = none
  4369c4:	mov	x0, x28
  4369c8:	mov	x1, x23
  4369cc:	mov	w2, w22
  4369d0:	mov	x3, x27
  4369d4:	mov	x5, x24
  4369d8:	mov	x6, x25
  4369dc:	bl	402a70 <fprintf@plt>
  4369e0:	ldr	x8, [x27, #8]
  4369e4:	ldr	w3, [x27, #4]
  4369e8:	mov	x0, x28
  4369ec:	mov	x1, x26
  4369f0:	ldr	x2, [x8]
  4369f4:	bl	402a70 <fprintf@plt>
  4369f8:	mov	w0, #0xa                   	// #10
  4369fc:	mov	x1, x28
  436a00:	bl	402d60 <fputc@plt>
  436a04:	add	w22, w22, #0x1
  436a08:	cmp	w19, w22
  436a0c:	b.ne	436998 <feof@plt+0x338b8>  // b.any
  436a10:	mov	x1, x21
  436a14:	ldp	x20, x19, [sp, #80]
  436a18:	ldp	x22, x21, [sp, #64]
  436a1c:	ldp	x24, x23, [sp, #48]
  436a20:	ldp	x26, x25, [sp, #32]
  436a24:	ldp	x28, x27, [sp, #16]
  436a28:	mov	w0, #0xa                   	// #10
  436a2c:	ldp	x29, x30, [sp], #96
  436a30:	b	402d60 <fputc@plt>
  436a34:	ldp	x20, x19, [sp, #80]
  436a38:	ldp	x22, x21, [sp, #64]
  436a3c:	ldp	x24, x23, [sp, #48]
  436a40:	ldp	x26, x25, [sp, #32]
  436a44:	ldp	x28, x27, [sp, #16]
  436a48:	ldp	x29, x30, [sp], #96
  436a4c:	ret
  436a50:	mov	w8, #0x1                   	// #1
  436a54:	str	x1, [x0]
  436a58:	str	wzr, [x0, #64]
  436a5c:	str	xzr, [x0, #72]
  436a60:	str	wzr, [x0, #80]
  436a64:	strb	wzr, [x0, #84]
  436a68:	str	wzr, [x0, #120]
  436a6c:	str	wzr, [x0, #144]
  436a70:	str	xzr, [x0, #152]
  436a74:	strh	wzr, [x0, #160]
  436a78:	stp	w2, wzr, [x0, #16]
  436a7c:	str	w8, [x0, #8]
  436a80:	str	x3, [x0, #24]
  436a84:	ret
  436a88:	stp	x29, x30, [sp, #-64]!
  436a8c:	stp	x22, x21, [sp, #32]
  436a90:	stp	x20, x19, [sp, #48]
  436a94:	ldrsw	x8, [x0, #8]
  436a98:	mov	x19, x3
  436a9c:	mov	w20, w2
  436aa0:	mov	w21, w1
  436aa4:	mov	x22, x0
  436aa8:	add	w9, w8, #0x1
  436aac:	cmp	w8, #0x2
  436ab0:	str	x23, [sp, #16]
  436ab4:	mov	x29, sp
  436ab8:	str	w9, [x0, #8]
  436abc:	b.gt	436ad0 <feof@plt+0x339f0>
  436ac0:	add	x8, x22, x8, lsl #4
  436ac4:	stp	w21, w20, [x8, #16]
  436ac8:	add	x8, x8, #0x18
  436acc:	b	436b18 <feof@plt+0x33a38>
  436ad0:	ldr	x0, [x22, #72]
  436ad4:	sub	w23, w8, #0x3
  436ad8:	cbz	x0, 436afc <feof@plt+0x33a1c>
  436adc:	ldrsw	x8, [x22, #64]
  436ae0:	cmp	w23, w8
  436ae4:	b.lt	436b10 <feof@plt+0x33a30>  // b.tstop
  436ae8:	lsl	w9, w8, #1
  436aec:	lsl	x1, x8, #5
  436af0:	str	w9, [x22, #64]
  436af4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  436af8:	b	436b0c <feof@plt+0x33a2c>
  436afc:	mov	w8, #0x10                  	// #16
  436b00:	mov	w0, #0x100                 	// #256
  436b04:	str	w8, [x22, #64]
  436b08:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  436b0c:	str	x0, [x22, #72]
  436b10:	add	x8, x0, w23, uxtw #4
  436b14:	stp	w21, w20, [x8], #8
  436b18:	str	x19, [x8]
  436b1c:	ldp	x20, x19, [sp, #48]
  436b20:	ldp	x22, x21, [sp, #32]
  436b24:	ldr	x23, [sp, #16]
  436b28:	ldp	x29, x30, [sp], #64
  436b2c:	ret
  436b30:	stp	x29, x30, [sp, #-48]!
  436b34:	stp	x20, x19, [sp, #32]
  436b38:	ldr	w8, [x0, #120]
  436b3c:	mov	x19, x0
  436b40:	str	x21, [sp, #16]
  436b44:	mov	x29, sp
  436b48:	cbz	w8, 436ba8 <feof@plt+0x33ac8>
  436b4c:	mov	w21, wzr
  436b50:	b	436b60 <feof@plt+0x33a80>
  436b54:	add	w21, w21, #0x1
  436b58:	cmp	w21, w8
  436b5c:	b.cs	436ba8 <feof@plt+0x33ac8>  // b.hs, b.nlast
  436b60:	cmp	w21, #0x1
  436b64:	b.gt	436b7c <feof@plt+0x33a9c>
  436b68:	add	x9, x19, w21, sxtw #3
  436b6c:	add	x9, x9, #0x80
  436b70:	ldr	x20, [x9]
  436b74:	cbnz	x20, 436b90 <feof@plt+0x33ab0>
  436b78:	b	436b54 <feof@plt+0x33a74>
  436b7c:	ldr	x9, [x19, #152]
  436b80:	sub	w10, w21, #0x2
  436b84:	add	x9, x9, w10, sxtw #3
  436b88:	ldr	x20, [x9]
  436b8c:	cbz	x20, 436b54 <feof@plt+0x33a74>
  436b90:	ldr	x0, [x20, #8]
  436b94:	bl	402b20 <free@plt>
  436b98:	mov	x0, x20
  436b9c:	bl	402d00 <_ZdlPv@plt>
  436ba0:	ldr	w8, [x19, #120]
  436ba4:	b	436b54 <feof@plt+0x33a74>
  436ba8:	ldr	x0, [x19, #152]
  436bac:	bl	402b20 <free@plt>
  436bb0:	ldr	x0, [x19, #72]
  436bb4:	ldp	x20, x19, [sp, #32]
  436bb8:	ldr	x21, [sp, #16]
  436bbc:	ldp	x29, x30, [sp], #48
  436bc0:	b	402b20 <free@plt>
  436bc4:	cmp	w1, #0x2
  436bc8:	b.gt	436bd8 <feof@plt+0x33af8>
  436bcc:	add	x8, x0, w1, sxtw #4
  436bd0:	ldr	w0, [x8, #16]!
  436bd4:	ret
  436bd8:	ldr	x8, [x0, #72]
  436bdc:	add	x8, x8, w1, sxtw #4
  436be0:	ldr	w0, [x8, #-48]!
  436be4:	ret
  436be8:	cmp	w1, #0x2
  436bec:	b.gt	436bfc <feof@plt+0x33b1c>
  436bf0:	add	x8, x0, w1, sxtw #4
  436bf4:	add	x0, x8, #0x10
  436bf8:	ret
  436bfc:	ldr	x8, [x0, #72]
  436c00:	add	x8, x8, w1, sxtw #4
  436c04:	sub	x0, x8, #0x30
  436c08:	ret
  436c0c:	cmp	w1, #0x2
  436c10:	b.gt	436c20 <feof@plt+0x33b40>
  436c14:	add	x8, x0, w1, sxtw #4
  436c18:	add	x0, x8, #0x10
  436c1c:	ret
  436c20:	ldr	x8, [x0, #72]
  436c24:	add	x8, x8, w1, sxtw #4
  436c28:	sub	x0, x8, #0x30
  436c2c:	ret
  436c30:	sub	sp, sp, #0x40
  436c34:	stp	x20, x19, [sp, #48]
  436c38:	mov	x20, x0
  436c3c:	mov	x19, x8
  436c40:	stp	x29, x30, [sp, #32]
  436c44:	add	x29, sp, #0x20
  436c48:	cbz	w1, 436c60 <feof@plt+0x33b80>
  436c4c:	cmp	w1, #0x2
  436c50:	b.gt	436cb4 <feof@plt+0x33bd4>
  436c54:	add	x8, x20, w1, sxtw #4
  436c58:	add	x8, x8, #0x10
  436c5c:	b	436cc0 <feof@plt+0x33be0>
  436c60:	ldrb	w8, [x20, #84]
  436c64:	cbnz	w8, 436c98 <feof@plt+0x33bb8>
  436c68:	ldr	w0, [x20, #16]
  436c6c:	mov	x8, sp
  436c70:	mov	w1, wzr
  436c74:	bl	41dd44 <feof@plt+0x1ac64>
  436c78:	ldp	q0, q1, [sp]
  436c7c:	ldr	w8, [x20, #80]
  436c80:	stur	q1, [x20, #104]
  436c84:	stur	q0, [x20, #88]
  436c88:	cbz	w8, 436c90 <feof@plt+0x33bb0>
  436c8c:	str	w8, [x20, #100]
  436c90:	mov	w8, #0x1                   	// #1
  436c94:	strb	w8, [x20, #84]
  436c98:	ldur	q0, [x20, #104]
  436c9c:	ldur	q1, [x20, #88]
  436ca0:	stp	q1, q0, [x19]
  436ca4:	ldp	x20, x19, [sp, #48]
  436ca8:	ldp	x29, x30, [sp, #32]
  436cac:	add	sp, sp, #0x40
  436cb0:	ret
  436cb4:	ldr	x8, [x20, #72]
  436cb8:	add	x8, x8, w1, sxtw #4
  436cbc:	sub	x8, x8, #0x30
  436cc0:	ldr	w0, [x8]
  436cc4:	mov	x8, x19
  436cc8:	ldp	x20, x19, [sp, #48]
  436ccc:	ldp	x29, x30, [sp, #32]
  436cd0:	mov	w1, wzr
  436cd4:	add	sp, sp, #0x40
  436cd8:	b	41dd44 <feof@plt+0x1ac64>
  436cdc:	str	w1, [x0, #80]
  436ce0:	strb	wzr, [x0, #84]
  436ce4:	ret
  436ce8:	stp	x29, x30, [sp, #-48]!
  436cec:	stp	x22, x21, [sp, #16]
  436cf0:	stp	x20, x19, [sp, #32]
  436cf4:	ldr	w8, [x0, #8]
  436cf8:	mov	w19, w3
  436cfc:	mov	x20, x0
  436d00:	mov	w21, w2
  436d04:	cmp	w8, w1
  436d08:	mov	x29, sp
  436d0c:	b.ne	436d34 <feof@plt+0x33c54>  // b.any
  436d10:	add	w8, w1, #0x1
  436d14:	cmp	w1, #0x2
  436d18:	str	w8, [x20, #8]
  436d1c:	b.gt	436d50 <feof@plt+0x33c70>
  436d20:	add	x8, x20, w1, sxtw #4
  436d24:	stp	w21, w19, [x8, #16]
  436d28:	str	xzr, [x8, #24]
  436d2c:	cbnz	w1, 436db8 <feof@plt+0x33cd8>
  436d30:	b	436d90 <feof@plt+0x33cb0>
  436d34:	cmp	w1, #0x2
  436d38:	b.gt	436d7c <feof@plt+0x33c9c>
  436d3c:	add	x8, x20, w1, sxtw #4
  436d40:	add	x8, x8, #0x10
  436d44:	stp	w21, w19, [x8]
  436d48:	cbnz	w1, 436db8 <feof@plt+0x33cd8>
  436d4c:	b	436d90 <feof@plt+0x33cb0>
  436d50:	ldr	x0, [x20, #72]
  436d54:	sub	w22, w1, #0x3
  436d58:	cbz	x0, 436d98 <feof@plt+0x33cb8>
  436d5c:	ldrsw	x8, [x20, #64]
  436d60:	cmp	w22, w8
  436d64:	b.lt	436dac <feof@plt+0x33ccc>  // b.tstop
  436d68:	lsl	w9, w8, #1
  436d6c:	lsl	x1, x8, #5
  436d70:	str	w9, [x20, #64]
  436d74:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  436d78:	b	436da8 <feof@plt+0x33cc8>
  436d7c:	ldr	x8, [x20, #72]
  436d80:	add	x8, x8, w1, sxtw #4
  436d84:	sub	x8, x8, #0x30
  436d88:	stp	w21, w19, [x8]
  436d8c:	cbnz	w1, 436db8 <feof@plt+0x33cd8>
  436d90:	strb	wzr, [x20, #84]
  436d94:	b	436db8 <feof@plt+0x33cd8>
  436d98:	mov	w8, #0x10                  	// #16
  436d9c:	mov	w0, #0x100                 	// #256
  436da0:	str	w8, [x20, #64]
  436da4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  436da8:	str	x0, [x20, #72]
  436dac:	add	x8, x0, w22, uxtw #4
  436db0:	stp	w21, w19, [x8]
  436db4:	str	xzr, [x8, #8]
  436db8:	ldp	x20, x19, [sp, #32]
  436dbc:	ldp	x22, x21, [sp, #16]
  436dc0:	ldp	x29, x30, [sp], #48
  436dc4:	ret
  436dc8:	stp	x29, x30, [sp, #-48]!
  436dcc:	stp	x20, x19, [sp, #32]
  436dd0:	str	x21, [sp, #16]
  436dd4:	mov	x20, x0
  436dd8:	ldr	w21, [x0, #16]
  436ddc:	ldr	x0, [x0]
  436de0:	mov	x19, x1
  436de4:	mov	x29, sp
  436de8:	tbnz	w21, #31, 436e10 <feof@plt+0x33d30>
  436dec:	cmp	w21, #0x2
  436df0:	b.cc	436e58 <feof@plt+0x33d78>  // b.lo, b.ul, b.last
  436df4:	ldr	w8, [x0, #36]
  436df8:	cbz	w8, 436e28 <feof@plt+0x33d48>
  436dfc:	ldr	x9, [x0, #24]
  436e00:	sub	w8, w8, #0x1
  436e04:	sbfiz	x8, x8, #5, #32
  436e08:	ldr	w8, [x9, x8]
  436e0c:	b	436e2c <feof@plt+0x33d4c>
  436e10:	ldr	x8, [x0, #104]
  436e14:	and	x9, x21, #0x7fffffff
  436e18:	mov	w10, #0x18                  	// #24
  436e1c:	madd	x8, x9, x10, x8
  436e20:	ldr	w21, [x8, #4]
  436e24:	b	436e58 <feof@plt+0x33d78>
  436e28:	mov	w8, #0x80000000            	// #-2147483648
  436e2c:	mov	w9, #0x50000000            	// #1342177280
  436e30:	cmp	w21, w9
  436e34:	b.hi	436e58 <feof@plt+0x33d78>  // b.pmore
  436e38:	cmp	w8, w21
  436e3c:	b.ls	436e58 <feof@plt+0x33d78>  // b.plast
  436e40:	mov	w1, w21
  436e44:	bl	4345c8 <feof@plt+0x314e8>
  436e48:	ldrb	w8, [x0, #7]
  436e4c:	mov	w9, #0xffffffff            	// #-1
  436e50:	lsl	w8, w9, w8
  436e54:	and	w21, w8, w21
  436e58:	mov	x0, x20
  436e5c:	mov	w1, w21
  436e60:	mov	w2, w21
  436e64:	mov	x3, x19
  436e68:	ldp	x20, x19, [sp, #32]
  436e6c:	ldr	x21, [sp, #16]
  436e70:	ldp	x29, x30, [sp], #48
  436e74:	b	436f28 <feof@plt+0x33e48>
  436e78:	stp	x29, x30, [sp, #-48]!
  436e7c:	stp	x20, x19, [sp, #32]
  436e80:	mov	x20, x0
  436e84:	ldr	x0, [x0]
  436e88:	str	x21, [sp, #16]
  436e8c:	mov	x19, x2
  436e90:	mov	w21, w1
  436e94:	mov	x29, sp
  436e98:	tbnz	w1, #31, 436ec0 <feof@plt+0x33de0>
  436e9c:	cmp	w21, #0x2
  436ea0:	b.cc	436f08 <feof@plt+0x33e28>  // b.lo, b.ul, b.last
  436ea4:	ldr	w8, [x0, #36]
  436ea8:	cbz	w8, 436ed8 <feof@plt+0x33df8>
  436eac:	ldr	x9, [x0, #24]
  436eb0:	sub	w8, w8, #0x1
  436eb4:	sbfiz	x8, x8, #5, #32
  436eb8:	ldr	w8, [x9, x8]
  436ebc:	b	436edc <feof@plt+0x33dfc>
  436ec0:	ldr	x8, [x0, #104]
  436ec4:	and	w9, w21, #0x7fffffff
  436ec8:	mov	w10, #0x18                  	// #24
  436ecc:	umaddl	x8, w9, w10, x8
  436ed0:	ldr	w21, [x8, #4]
  436ed4:	b	436f08 <feof@plt+0x33e28>
  436ed8:	mov	w8, #0x80000000            	// #-2147483648
  436edc:	mov	w9, #0x50000000            	// #1342177280
  436ee0:	cmp	w21, w9
  436ee4:	b.hi	436f08 <feof@plt+0x33e28>  // b.pmore
  436ee8:	cmp	w8, w21
  436eec:	b.ls	436f08 <feof@plt+0x33e28>  // b.plast
  436ef0:	mov	w1, w21
  436ef4:	bl	4345c8 <feof@plt+0x314e8>
  436ef8:	ldrb	w8, [x0, #7]
  436efc:	mov	w9, #0xffffffff            	// #-1
  436f00:	lsl	w8, w9, w8
  436f04:	and	w21, w8, w21
  436f08:	mov	x0, x20
  436f0c:	mov	w1, w21
  436f10:	mov	w2, w21
  436f14:	mov	x3, x19
  436f18:	ldp	x20, x19, [sp, #32]
  436f1c:	ldr	x21, [sp, #16]
  436f20:	ldp	x29, x30, [sp], #48
  436f24:	b	436f28 <feof@plt+0x33e48>
  436f28:	sub	sp, sp, #0x80
  436f2c:	stp	x29, x30, [sp, #64]
  436f30:	stp	x24, x23, [sp, #80]
  436f34:	stp	x22, x21, [sp, #96]
  436f38:	stp	x20, x19, [sp, #112]
  436f3c:	ldrb	w8, [x0, #160]
  436f40:	add	x29, sp, #0x40
  436f44:	cbnz	w8, 437340 <feof@plt+0x34260>
  436f48:	mov	w8, #0x1                   	// #1
  436f4c:	movk	w8, #0x6000, lsl #16
  436f50:	mov	x19, x0
  436f54:	mov	w22, w1
  436f58:	cmp	w1, w8
  436f5c:	b.cs	437008 <feof@plt+0x33f28>  // b.hs, b.nlast
  436f60:	mov	w21, w2
  436f64:	cmp	w2, w8
  436f68:	b.cs	437070 <feof@plt+0x33f90>  // b.hs, b.nlast
  436f6c:	add	x8, sp, #0x20
  436f70:	mov	w1, #0x1                   	// #1
  436f74:	mov	w0, w22
  436f78:	mov	x20, x3
  436f7c:	mov	w23, #0x1                   	// #1
  436f80:	bl	41dd44 <feof@plt+0x1ac64>
  436f84:	mov	x8, sp
  436f88:	mov	w1, #0x1                   	// #1
  436f8c:	mov	w0, w21
  436f90:	bl	41dd44 <feof@plt+0x1ac64>
  436f94:	ldr	x8, [sp, #32]
  436f98:	ldr	x9, [sp]
  436f9c:	cmp	x8, x9
  436fa0:	b.eq	4370d8 <feof@plt+0x33ff8>  // b.none
  436fa4:	ldr	w8, [x19, #120]
  436fa8:	strb	w23, [x19, #160]
  436fac:	cbz	w8, 43733c <feof@plt+0x3425c>
  436fb0:	mov	w21, wzr
  436fb4:	b	436fec <feof@plt+0x33f0c>
  436fb8:	ldr	x9, [x19, #152]
  436fbc:	sub	w10, w21, #0x2
  436fc0:	add	x9, x9, w10, sxtw #3
  436fc4:	ldr	x20, [x9]
  436fc8:	cbz	x20, 436fe0 <feof@plt+0x33f00>
  436fcc:	ldr	x0, [x20, #8]
  436fd0:	bl	402b20 <free@plt>
  436fd4:	mov	x0, x20
  436fd8:	bl	402d00 <_ZdlPv@plt>
  436fdc:	ldr	w8, [x19, #120]
  436fe0:	add	w21, w21, #0x1
  436fe4:	cmp	w21, w8
  436fe8:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  436fec:	cmp	w21, #0x1
  436ff0:	b.gt	436fb8 <feof@plt+0x33ed8>
  436ff4:	add	x9, x19, w21, sxtw #3
  436ff8:	add	x9, x9, #0x80
  436ffc:	ldr	x20, [x9]
  437000:	cbnz	x20, 436fcc <feof@plt+0x33eec>
  437004:	b	436fe0 <feof@plt+0x33f00>
  437008:	ldr	w8, [x19, #120]
  43700c:	mov	w9, #0x1                   	// #1
  437010:	strb	w9, [x19, #160]
  437014:	cbz	w8, 43733c <feof@plt+0x3425c>
  437018:	mov	w21, wzr
  43701c:	b	437054 <feof@plt+0x33f74>
  437020:	ldr	x9, [x19, #152]
  437024:	sub	w10, w21, #0x2
  437028:	add	x9, x9, w10, sxtw #3
  43702c:	ldr	x20, [x9]
  437030:	cbz	x20, 437048 <feof@plt+0x33f68>
  437034:	ldr	x0, [x20, #8]
  437038:	bl	402b20 <free@plt>
  43703c:	mov	x0, x20
  437040:	bl	402d00 <_ZdlPv@plt>
  437044:	ldr	w8, [x19, #120]
  437048:	add	w21, w21, #0x1
  43704c:	cmp	w21, w8
  437050:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  437054:	cmp	w21, #0x1
  437058:	b.gt	437020 <feof@plt+0x33f40>
  43705c:	add	x9, x19, w21, sxtw #3
  437060:	add	x9, x9, #0x80
  437064:	ldr	x20, [x9]
  437068:	cbnz	x20, 437034 <feof@plt+0x33f54>
  43706c:	b	437048 <feof@plt+0x33f68>
  437070:	ldr	w8, [x19, #120]
  437074:	mov	w9, #0x1                   	// #1
  437078:	strb	w9, [x19, #160]
  43707c:	cbz	w8, 43733c <feof@plt+0x3425c>
  437080:	mov	w21, wzr
  437084:	b	4370bc <feof@plt+0x33fdc>
  437088:	ldr	x9, [x19, #152]
  43708c:	sub	w10, w21, #0x2
  437090:	add	x9, x9, w10, sxtw #3
  437094:	ldr	x20, [x9]
  437098:	cbz	x20, 4370b0 <feof@plt+0x33fd0>
  43709c:	ldr	x0, [x20, #8]
  4370a0:	bl	402b20 <free@plt>
  4370a4:	mov	x0, x20
  4370a8:	bl	402d00 <_ZdlPv@plt>
  4370ac:	ldr	w8, [x19, #120]
  4370b0:	add	w21, w21, #0x1
  4370b4:	cmp	w21, w8
  4370b8:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  4370bc:	cmp	w21, #0x1
  4370c0:	b.gt	437088 <feof@plt+0x33fa8>
  4370c4:	add	x9, x19, w21, sxtw #3
  4370c8:	add	x9, x9, #0x80
  4370cc:	ldr	x20, [x9]
  4370d0:	cbnz	x20, 43709c <feof@plt+0x33fbc>
  4370d4:	b	4370b0 <feof@plt+0x33fd0>
  4370d8:	ldr	w8, [sp, #40]
  4370dc:	ldr	w9, [sp, #8]
  4370e0:	cmp	w8, w9
  4370e4:	b.ne	437160 <feof@plt+0x34080>  // b.any
  4370e8:	ldr	w23, [sp, #44]
  4370ec:	ldr	w8, [sp, #12]
  4370f0:	cmp	w23, w8
  4370f4:	b.le	4371c8 <feof@plt+0x340e8>
  4370f8:	ldr	w8, [x19, #120]
  4370fc:	mov	w9, #0x1                   	// #1
  437100:	strb	w9, [x19, #160]
  437104:	cbz	w8, 43733c <feof@plt+0x3425c>
  437108:	mov	w21, wzr
  43710c:	b	437144 <feof@plt+0x34064>
  437110:	ldr	x9, [x19, #152]
  437114:	sub	w10, w21, #0x2
  437118:	add	x9, x9, w10, sxtw #3
  43711c:	ldr	x20, [x9]
  437120:	cbz	x20, 437138 <feof@plt+0x34058>
  437124:	ldr	x0, [x20, #8]
  437128:	bl	402b20 <free@plt>
  43712c:	mov	x0, x20
  437130:	bl	402d00 <_ZdlPv@plt>
  437134:	ldr	w8, [x19, #120]
  437138:	add	w21, w21, #0x1
  43713c:	cmp	w21, w8
  437140:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  437144:	cmp	w21, #0x1
  437148:	b.gt	437110 <feof@plt+0x34030>
  43714c:	add	x9, x19, w21, sxtw #3
  437150:	add	x9, x9, #0x80
  437154:	ldr	x20, [x9]
  437158:	cbnz	x20, 437124 <feof@plt+0x34044>
  43715c:	b	437138 <feof@plt+0x34058>
  437160:	ldr	w8, [x19, #120]
  437164:	mov	w9, #0x1                   	// #1
  437168:	strb	w9, [x19, #160]
  43716c:	cbz	w8, 43733c <feof@plt+0x3425c>
  437170:	mov	w21, wzr
  437174:	b	4371ac <feof@plt+0x340cc>
  437178:	ldr	x9, [x19, #152]
  43717c:	sub	w10, w21, #0x2
  437180:	add	x9, x9, w10, sxtw #3
  437184:	ldr	x20, [x9]
  437188:	cbz	x20, 4371a0 <feof@plt+0x340c0>
  43718c:	ldr	x0, [x20, #8]
  437190:	bl	402b20 <free@plt>
  437194:	mov	x0, x20
  437198:	bl	402d00 <_ZdlPv@plt>
  43719c:	ldr	w8, [x19, #120]
  4371a0:	add	w21, w21, #0x1
  4371a4:	cmp	w21, w8
  4371a8:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  4371ac:	cmp	w21, #0x1
  4371b0:	b.gt	437178 <feof@plt+0x34098>
  4371b4:	add	x9, x19, w21, sxtw #3
  4371b8:	add	x9, x9, #0x80
  4371bc:	ldr	x20, [x9]
  4371c0:	cbnz	x20, 43718c <feof@plt+0x340ac>
  4371c4:	b	4371a0 <feof@plt+0x340c0>
  4371c8:	mov	w1, #0xa                   	// #10
  4371cc:	mov	x0, x20
  4371d0:	bl	402b60 <strchr@plt>
  4371d4:	cbz	x0, 437254 <feof@plt+0x34174>
  4371d8:	cmp	w22, w21
  4371dc:	b.ne	437274 <feof@plt+0x34194>  // b.any
  4371e0:	cmp	w23, #0x1
  4371e4:	b.ne	4372d8 <feof@plt+0x341f8>  // b.any
  4371e8:	ldrb	w8, [x0, #1]
  4371ec:	cbz	w8, 437254 <feof@plt+0x34174>
  4371f0:	ldr	w8, [x19, #120]
  4371f4:	mov	w9, #0x1                   	// #1
  4371f8:	strb	w9, [x19, #160]
  4371fc:	cbz	w8, 43733c <feof@plt+0x3425c>
  437200:	mov	w21, wzr
  437204:	b	437214 <feof@plt+0x34134>
  437208:	add	w21, w21, #0x1
  43720c:	cmp	w21, w8
  437210:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  437214:	cmp	w21, #0x1
  437218:	b.gt	437228 <feof@plt+0x34148>
  43721c:	add	x9, x19, w21, sxtw #3
  437220:	add	x9, x9, #0x80
  437224:	b	437234 <feof@plt+0x34154>
  437228:	ldr	x9, [x19, #152]
  43722c:	sub	w10, w21, #0x2
  437230:	add	x9, x9, w10, sxtw #3
  437234:	ldr	x20, [x9]
  437238:	cbz	x20, 437208 <feof@plt+0x34128>
  43723c:	ldr	x0, [x20, #8]
  437240:	bl	402b20 <free@plt>
  437244:	mov	x0, x20
  437248:	bl	402d00 <_ZdlPv@plt>
  43724c:	ldr	w8, [x19, #120]
  437250:	b	437208 <feof@plt+0x34128>
  437254:	ldr	w8, [x19, #120]
  437258:	cbz	w8, 4373e4 <feof@plt+0x34304>
  43725c:	sub	w9, w8, #0x1
  437260:	cmp	w9, #0x1
  437264:	b.gt	437358 <feof@plt+0x34278>
  437268:	add	x8, x19, w9, sxtw #3
  43726c:	add	x8, x8, #0x80
  437270:	b	437364 <feof@plt+0x34284>
  437274:	ldr	w8, [x19, #120]
  437278:	mov	w9, #0x1                   	// #1
  43727c:	strb	w9, [x19, #160]
  437280:	cbz	w8, 43733c <feof@plt+0x3425c>
  437284:	mov	w21, wzr
  437288:	b	437298 <feof@plt+0x341b8>
  43728c:	add	w21, w21, #0x1
  437290:	cmp	w21, w8
  437294:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  437298:	cmp	w21, #0x1
  43729c:	b.gt	4372ac <feof@plt+0x341cc>
  4372a0:	add	x9, x19, w21, sxtw #3
  4372a4:	add	x9, x9, #0x80
  4372a8:	b	4372b8 <feof@plt+0x341d8>
  4372ac:	ldr	x9, [x19, #152]
  4372b0:	sub	w10, w21, #0x2
  4372b4:	add	x9, x9, w10, sxtw #3
  4372b8:	ldr	x20, [x9]
  4372bc:	cbz	x20, 43728c <feof@plt+0x341ac>
  4372c0:	ldr	x0, [x20, #8]
  4372c4:	bl	402b20 <free@plt>
  4372c8:	mov	x0, x20
  4372cc:	bl	402d00 <_ZdlPv@plt>
  4372d0:	ldr	w8, [x19, #120]
  4372d4:	b	43728c <feof@plt+0x341ac>
  4372d8:	ldr	w8, [x19, #120]
  4372dc:	mov	w9, #0x1                   	// #1
  4372e0:	strb	w9, [x19, #160]
  4372e4:	cbz	w8, 43733c <feof@plt+0x3425c>
  4372e8:	mov	w21, wzr
  4372ec:	b	4372fc <feof@plt+0x3421c>
  4372f0:	add	w21, w21, #0x1
  4372f4:	cmp	w21, w8
  4372f8:	b.cs	43733c <feof@plt+0x3425c>  // b.hs, b.nlast
  4372fc:	cmp	w21, #0x1
  437300:	b.gt	437310 <feof@plt+0x34230>
  437304:	add	x9, x19, w21, sxtw #3
  437308:	add	x9, x9, #0x80
  43730c:	b	43731c <feof@plt+0x3423c>
  437310:	ldr	x9, [x19, #152]
  437314:	sub	w10, w21, #0x2
  437318:	add	x9, x9, w10, sxtw #3
  43731c:	ldr	x20, [x9]
  437320:	cbz	x20, 4372f0 <feof@plt+0x34210>
  437324:	ldr	x0, [x20, #8]
  437328:	bl	402b20 <free@plt>
  43732c:	mov	x0, x20
  437330:	bl	402d00 <_ZdlPv@plt>
  437334:	ldr	w8, [x19, #120]
  437338:	b	4372f0 <feof@plt+0x34210>
  43733c:	str	wzr, [x19, #120]
  437340:	ldp	x20, x19, [sp, #112]
  437344:	ldp	x22, x21, [sp, #96]
  437348:	ldp	x24, x23, [sp, #80]
  43734c:	ldp	x29, x30, [sp, #64]
  437350:	add	sp, sp, #0x80
  437354:	ret
  437358:	ldr	x9, [x19, #152]
  43735c:	sub	w8, w8, #0x3
  437360:	add	x8, x9, w8, sxtw #3
  437364:	ldr	x23, [x8]
  437368:	cbz	x23, 4373e4 <feof@plt+0x34304>
  43736c:	ldr	x24, [x23, #16]
  437370:	cbz	x24, 437388 <feof@plt+0x342a8>
  437374:	ldr	x8, [x23, #8]
  437378:	add	x8, x24, x8
  43737c:	ldurb	w8, [x8, #-1]
  437380:	cmp	w8, #0xa
  437384:	b.eq	4373e4 <feof@plt+0x34304>  // b.none
  437388:	ldr	w8, [x23, #4]
  43738c:	cmp	w8, w22
  437390:	b.ne	4373e4 <feof@plt+0x34304>  // b.any
  437394:	mov	x0, x20
  437398:	str	w21, [x23, #4]
  43739c:	bl	402a50 <strlen@plt>
  4373a0:	ldr	x8, [x23, #8]
  4373a4:	add	x9, x24, x0
  4373a8:	mov	x19, x0
  4373ac:	add	x1, x9, #0x1
  4373b0:	mov	x0, x8
  4373b4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  4373b8:	ldr	x8, [x23, #16]
  4373bc:	str	x0, [x23, #8]
  4373c0:	mov	x1, x20
  4373c4:	mov	x2, x19
  4373c8:	add	x0, x0, x8
  4373cc:	bl	4029c0 <memcpy@plt>
  4373d0:	ldp	x9, x8, [x23, #8]
  4373d4:	add	x8, x8, x19
  4373d8:	str	x8, [x23, #16]
  4373dc:	strb	wzr, [x9, x8]
  4373e0:	b	437340 <feof@plt+0x34260>
  4373e4:	mov	w0, #0x18                  	// #24
  4373e8:	bl	402d30 <_Znwm@plt>
  4373ec:	mov	x23, x0
  4373f0:	stp	w22, w21, [x0]
  4373f4:	mov	x0, x20
  4373f8:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  4373fc:	str	x0, [x23, #8]
  437400:	mov	x0, x20
  437404:	bl	402a50 <strlen@plt>
  437408:	str	x0, [x23, #16]
  43740c:	ldrsw	x8, [x19, #120]
  437410:	add	w9, w8, #0x1
  437414:	cmp	w8, #0x1
  437418:	str	w9, [x19, #120]
  43741c:	b.gt	43742c <feof@plt+0x3434c>
  437420:	add	x8, x19, x8, lsl #3
  437424:	str	x23, [x8, #128]
  437428:	b	437340 <feof@plt+0x34260>
  43742c:	ldr	x0, [x19, #152]
  437430:	sub	w20, w8, #0x2
  437434:	cbz	x0, 437458 <feof@plt+0x34378>
  437438:	ldrsw	x8, [x19, #144]
  43743c:	cmp	w20, w8
  437440:	b.lt	43746c <feof@plt+0x3438c>  // b.tstop
  437444:	lsl	w9, w8, #1
  437448:	lsl	x1, x8, #4
  43744c:	str	w9, [x19, #144]
  437450:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  437454:	b	437468 <feof@plt+0x34388>
  437458:	mov	w8, #0x10                  	// #16
  43745c:	mov	w0, #0x80                  	// #128
  437460:	str	w8, [x19, #144]
  437464:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  437468:	str	x0, [x19, #152]
  43746c:	str	x23, [x0, w20, uxtw #3]
  437470:	b	437340 <feof@plt+0x34260>
  437474:	ldr	w8, [x0, #16]
  437478:	mov	x2, x1
  43747c:	mov	w1, w8
  437480:	b	437484 <feof@plt+0x343a4>
  437484:	stp	x29, x30, [sp, #-48]!
  437488:	stp	x22, x21, [sp, #16]
  43748c:	stp	x20, x19, [sp, #32]
  437490:	mov	x19, x0
  437494:	ldr	x0, [x0]
  437498:	mov	x20, x2
  43749c:	mov	w21, w1
  4374a0:	mov	x29, sp
  4374a4:	tbnz	w1, #31, 4374cc <feof@plt+0x343ec>
  4374a8:	cmp	w21, #0x2
  4374ac:	b.cc	437528 <feof@plt+0x34448>  // b.lo, b.ul, b.last
  4374b0:	ldr	w8, [x0, #36]
  4374b4:	cbz	w8, 4374e4 <feof@plt+0x34404>
  4374b8:	ldr	x9, [x0, #24]
  4374bc:	sub	w8, w8, #0x1
  4374c0:	sbfiz	x8, x8, #5, #32
  4374c4:	ldr	w8, [x9, x8]
  4374c8:	b	4374e8 <feof@plt+0x34408>
  4374cc:	ldr	x8, [x0, #104]
  4374d0:	and	w9, w21, #0x7fffffff
  4374d4:	mov	w10, #0x18                  	// #24
  4374d8:	umaddl	x8, w9, w10, x8
  4374dc:	ldr	w21, [x8, #8]
  4374e0:	b	437528 <feof@plt+0x34448>
  4374e4:	mov	w8, #0x80000000            	// #-2147483648
  4374e8:	mov	w9, #0x50000000            	// #1342177280
  4374ec:	cmp	w21, w9
  4374f0:	b.hi	437528 <feof@plt+0x34448>  // b.pmore
  4374f4:	cmp	w8, w21
  4374f8:	b.ls	437528 <feof@plt+0x34448>  // b.plast
  4374fc:	mov	w1, w21
  437500:	bl	4345c8 <feof@plt+0x314e8>
  437504:	ldrh	w8, [x0, #6]
  437508:	mov	w9, #0xffffffff            	// #-1
  43750c:	ldr	x0, [x19]
  437510:	lsr	x8, x8, #8
  437514:	lsl	w9, w9, w8
  437518:	bic	w9, w21, w9
  43751c:	sub	w10, w21, w9
  437520:	lsl	w8, w9, w8
  437524:	add	w21, w10, w8
  437528:	mov	w2, #0x1                   	// #1
  43752c:	mov	w1, w21
  437530:	mov	w22, #0x1                   	// #1
  437534:	bl	4353dc <feof@plt+0x322fc>
  437538:	cmp	w0, w21
  43753c:	b.ne	4375a8 <feof@plt+0x344c8>  // b.any
  437540:	ldr	w8, [x19, #120]
  437544:	strb	w22, [x19, #160]
  437548:	cbz	w8, 4375c8 <feof@plt+0x344e8>
  43754c:	mov	w21, wzr
  437550:	b	437560 <feof@plt+0x34480>
  437554:	add	w21, w21, #0x1
  437558:	cmp	w21, w8
  43755c:	b.cs	4375c8 <feof@plt+0x344e8>  // b.hs, b.nlast
  437560:	cmp	w21, #0x1
  437564:	b.gt	43757c <feof@plt+0x3449c>
  437568:	add	x9, x19, w21, sxtw #3
  43756c:	add	x9, x9, #0x80
  437570:	ldr	x20, [x9]
  437574:	cbnz	x20, 437590 <feof@plt+0x344b0>
  437578:	b	437554 <feof@plt+0x34474>
  43757c:	ldr	x9, [x19, #152]
  437580:	sub	w10, w21, #0x2
  437584:	add	x9, x9, w10, sxtw #3
  437588:	ldr	x20, [x9]
  43758c:	cbz	x20, 437554 <feof@plt+0x34474>
  437590:	ldr	x0, [x20, #8]
  437594:	bl	402b20 <free@plt>
  437598:	mov	x0, x20
  43759c:	bl	402d00 <_ZdlPv@plt>
  4375a0:	ldr	w8, [x19, #120]
  4375a4:	b	437554 <feof@plt+0x34474>
  4375a8:	mov	w1, w0
  4375ac:	mov	x0, x19
  4375b0:	mov	x3, x20
  4375b4:	ldp	x20, x19, [sp, #32]
  4375b8:	ldp	x22, x21, [sp, #16]
  4375bc:	mov	w2, w1
  4375c0:	ldp	x29, x30, [sp], #48
  4375c4:	b	436f28 <feof@plt+0x33e48>
  4375c8:	str	wzr, [x19, #120]
  4375cc:	ldp	x20, x19, [sp, #32]
  4375d0:	ldp	x22, x21, [sp, #16]
  4375d4:	ldp	x29, x30, [sp], #48
  4375d8:	ret
  4375dc:	stp	x29, x30, [sp, #-48]!
  4375e0:	stp	x20, x19, [sp, #32]
  4375e4:	ldr	w8, [x0, #120]
  4375e8:	mov	x19, x0
  4375ec:	mov	w9, #0x1                   	// #1
  4375f0:	str	x21, [sp, #16]
  4375f4:	mov	x29, sp
  4375f8:	strb	w9, [x0, #160]
  4375fc:	cbz	w8, 43765c <feof@plt+0x3457c>
  437600:	mov	w21, wzr
  437604:	b	437614 <feof@plt+0x34534>
  437608:	add	w21, w21, #0x1
  43760c:	cmp	w21, w8
  437610:	b.cs	43765c <feof@plt+0x3457c>  // b.hs, b.nlast
  437614:	cmp	w21, #0x1
  437618:	b.gt	437630 <feof@plt+0x34550>
  43761c:	add	x9, x19, w21, sxtw #3
  437620:	add	x9, x9, #0x80
  437624:	ldr	x20, [x9]
  437628:	cbnz	x20, 437644 <feof@plt+0x34564>
  43762c:	b	437608 <feof@plt+0x34528>
  437630:	ldr	x9, [x19, #152]
  437634:	sub	w10, w21, #0x2
  437638:	add	x9, x9, w10, sxtw #3
  43763c:	ldr	x20, [x9]
  437640:	cbz	x20, 437608 <feof@plt+0x34528>
  437644:	ldr	x0, [x20, #8]
  437648:	bl	402b20 <free@plt>
  43764c:	mov	x0, x20
  437650:	bl	402d00 <_ZdlPv@plt>
  437654:	ldr	w8, [x19, #120]
  437658:	b	437608 <feof@plt+0x34528>
  43765c:	str	wzr, [x19, #120]
  437660:	ldp	x20, x19, [sp, #32]
  437664:	ldr	x21, [sp, #16]
  437668:	ldp	x29, x30, [sp], #48
  43766c:	ret
  437670:	stp	x29, x30, [sp, #-32]!
  437674:	stp	x20, x19, [sp, #16]
  437678:	mov	x19, x0
  43767c:	ldr	w20, [x0, #16]
  437680:	ldr	x0, [x0]
  437684:	mov	x29, sp
  437688:	tbnz	w20, #31, 4376b0 <feof@plt+0x345d0>
  43768c:	cmp	w20, #0x2
  437690:	b.cc	43770c <feof@plt+0x3462c>  // b.lo, b.ul, b.last
  437694:	ldr	w8, [x0, #36]
  437698:	cbz	w8, 4376c8 <feof@plt+0x345e8>
  43769c:	ldr	x9, [x0, #24]
  4376a0:	sub	w8, w8, #0x1
  4376a4:	sbfiz	x8, x8, #5, #32
  4376a8:	ldr	w8, [x9, x8]
  4376ac:	b	4376cc <feof@plt+0x345ec>
  4376b0:	ldr	x8, [x0, #104]
  4376b4:	and	x9, x20, #0x7fffffff
  4376b8:	mov	w10, #0x18                  	// #24
  4376bc:	madd	x8, x9, x10, x8
  4376c0:	ldp	w20, w8, [x8, #4]
  4376c4:	b	437710 <feof@plt+0x34630>
  4376c8:	mov	w8, #0x80000000            	// #-2147483648
  4376cc:	mov	w9, #0x50000000            	// #1342177280
  4376d0:	cmp	w20, w9
  4376d4:	b.hi	43770c <feof@plt+0x3462c>  // b.pmore
  4376d8:	cmp	w8, w20
  4376dc:	b.ls	43770c <feof@plt+0x3462c>  // b.plast
  4376e0:	mov	w1, w20
  4376e4:	bl	4345c8 <feof@plt+0x314e8>
  4376e8:	ldrh	w8, [x0, #6]
  4376ec:	mov	w9, #0xffffffff            	// #-1
  4376f0:	lsr	x8, x8, #8
  4376f4:	lsl	w9, w9, w8
  4376f8:	bic	w9, w20, w9
  4376fc:	sub	w20, w20, w9
  437700:	lsl	w8, w9, w8
  437704:	add	w8, w20, w8
  437708:	b	437710 <feof@plt+0x34630>
  43770c:	mov	w8, w20
  437710:	mov	w1, w20
  437714:	mov	x0, x19
  437718:	ldp	x20, x19, [sp, #16]
  43771c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x838>
  437720:	bfi	x1, x8, #32, #32
  437724:	add	x2, x2, #0xbb5
  437728:	ldp	x29, x30, [sp], #32
  43772c:	b	4377fc <feof@plt+0x3471c>
  437730:	stp	x29, x30, [sp, #-32]!
  437734:	stp	x20, x19, [sp, #16]
  437738:	mov	x19, x0
  43773c:	ldr	x0, [x0]
  437740:	mov	w20, w1
  437744:	mov	x29, sp
  437748:	tbnz	w1, #31, 437770 <feof@plt+0x34690>
  43774c:	cmp	w20, #0x2
  437750:	b.cc	4377cc <feof@plt+0x346ec>  // b.lo, b.ul, b.last
  437754:	ldr	w8, [x0, #36]
  437758:	cbz	w8, 437788 <feof@plt+0x346a8>
  43775c:	ldr	x9, [x0, #24]
  437760:	sub	w8, w8, #0x1
  437764:	sbfiz	x8, x8, #5, #32
  437768:	ldr	w8, [x9, x8]
  43776c:	b	43778c <feof@plt+0x346ac>
  437770:	ldr	x8, [x0, #104]
  437774:	and	w9, w20, #0x7fffffff
  437778:	mov	w10, #0x18                  	// #24
  43777c:	umaddl	x8, w9, w10, x8
  437780:	ldp	w20, w8, [x8, #4]
  437784:	b	4377d0 <feof@plt+0x346f0>
  437788:	mov	w8, #0x80000000            	// #-2147483648
  43778c:	mov	w9, #0x50000000            	// #1342177280
  437790:	cmp	w20, w9
  437794:	b.hi	4377cc <feof@plt+0x346ec>  // b.pmore
  437798:	cmp	w8, w20
  43779c:	b.ls	4377cc <feof@plt+0x346ec>  // b.plast
  4377a0:	mov	w1, w20
  4377a4:	bl	4345c8 <feof@plt+0x314e8>
  4377a8:	ldrh	w8, [x0, #6]
  4377ac:	mov	w9, #0xffffffff            	// #-1
  4377b0:	lsr	x8, x8, #8
  4377b4:	lsl	w9, w9, w8
  4377b8:	bic	w9, w20, w9
  4377bc:	sub	w20, w20, w9
  4377c0:	lsl	w8, w9, w8
  4377c4:	add	w8, w20, w8
  4377c8:	b	4377d0 <feof@plt+0x346f0>
  4377cc:	mov	w8, w20
  4377d0:	mov	w1, w20
  4377d4:	mov	x0, x19
  4377d8:	ldp	x20, x19, [sp, #16]
  4377dc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x838>
  4377e0:	bfi	x1, x8, #32, #32
  4377e4:	add	x2, x2, #0xbb5
  4377e8:	ldp	x29, x30, [sp], #32
  4377ec:	b	4377fc <feof@plt+0x3471c>
  4377f0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x838>
  4377f4:	add	x2, x2, #0xbb5
  4377f8:	b	4377fc <feof@plt+0x3471c>
  4377fc:	stp	x29, x30, [sp, #-64]!
  437800:	stp	x22, x21, [sp, #32]
  437804:	stp	x20, x19, [sp, #48]
  437808:	mov	x19, x0
  43780c:	ldr	x0, [x0]
  437810:	str	x23, [sp, #16]
  437814:	mov	x23, x1
  437818:	mov	x20, x2
  43781c:	mov	w21, w23
  437820:	mov	x29, sp
  437824:	tbz	w23, #31, 43783c <feof@plt+0x3475c>
  437828:	ldr	x8, [x0, #104]
  43782c:	and	x9, x23, #0x7fffffff
  437830:	mov	w10, #0x18                  	// #24
  437834:	mul	x9, x9, x10
  437838:	ldr	w21, [x8, x9]
  43783c:	ldr	w8, [x0, #36]
  437840:	lsr	x22, x23, #32
  437844:	cbz	w8, 437864 <feof@plt+0x34784>
  437848:	ldr	x9, [x0, #24]
  43784c:	sub	w8, w8, #0x1
  437850:	sbfiz	x8, x8, #5, #32
  437854:	ldr	w8, [x9, x8]
  437858:	cmp	w21, #0x2
  43785c:	b.cs	437870 <feof@plt+0x34790>  // b.hs, b.nlast
  437860:	b	437894 <feof@plt+0x347b4>
  437864:	mov	w8, #0x80000000            	// #-2147483648
  437868:	cmp	w21, #0x2
  43786c:	b.cc	437894 <feof@plt+0x347b4>  // b.lo, b.ul, b.last
  437870:	cmp	w21, w8
  437874:	b.cs	437894 <feof@plt+0x347b4>  // b.hs, b.nlast
  437878:	mov	w1, w21
  43787c:	bl	4345c8 <feof@plt+0x314e8>
  437880:	ldrb	w8, [x0, #7]
  437884:	ldr	x0, [x19]
  437888:	mov	w9, #0xffffffff            	// #-1
  43788c:	lsl	w8, w9, w8
  437890:	and	w21, w8, w21
  437894:	tbnz	w22, #31, 4378bc <feof@plt+0x347dc>
  437898:	ldr	w8, [x0, #36]
  43789c:	cbz	w8, 4378d8 <feof@plt+0x347f8>
  4378a0:	ldr	x9, [x0, #24]
  4378a4:	sub	w8, w8, #0x1
  4378a8:	sbfiz	x8, x8, #5, #32
  4378ac:	ldr	w8, [x9, x8]
  4378b0:	cmp	w22, #0x2
  4378b4:	b.cs	4378e4 <feof@plt+0x34804>  // b.hs, b.nlast
  4378b8:	b	437908 <feof@plt+0x34828>
  4378bc:	ldr	x8, [x0, #104]
  4378c0:	ubfx	x9, x23, #32, #31
  4378c4:	mov	w10, #0x18                  	// #24
  4378c8:	mul	x9, x9, x10
  4378cc:	ldr	w22, [x8, x9]
  4378d0:	ldr	w8, [x0, #36]
  4378d4:	cbnz	w8, 4378a0 <feof@plt+0x347c0>
  4378d8:	mov	w8, #0x80000000            	// #-2147483648
  4378dc:	cmp	w22, #0x2
  4378e0:	b.cc	437908 <feof@plt+0x34828>  // b.lo, b.ul, b.last
  4378e4:	cmp	w22, w8
  4378e8:	b.cs	437908 <feof@plt+0x34828>  // b.hs, b.nlast
  4378ec:	mov	w1, w22
  4378f0:	bl	4345c8 <feof@plt+0x314e8>
  4378f4:	ldrb	w8, [x0, #7]
  4378f8:	ldr	x0, [x19]
  4378fc:	mov	w9, #0xffffffff            	// #-1
  437900:	lsl	w8, w9, w8
  437904:	and	w22, w8, w22
  437908:	mov	w2, #0x1                   	// #1
  43790c:	mov	w1, w22
  437910:	mov	w23, #0x1                   	// #1
  437914:	bl	4353dc <feof@plt+0x322fc>
  437918:	cmp	w0, w22
  43791c:	b.ne	437988 <feof@plt+0x348a8>  // b.any
  437920:	ldr	w8, [x19, #120]
  437924:	strb	w23, [x19, #160]
  437928:	cbz	w8, 4379ac <feof@plt+0x348cc>
  43792c:	mov	w21, wzr
  437930:	b	437940 <feof@plt+0x34860>
  437934:	add	w21, w21, #0x1
  437938:	cmp	w21, w8
  43793c:	b.cs	4379ac <feof@plt+0x348cc>  // b.hs, b.nlast
  437940:	cmp	w21, #0x1
  437944:	b.gt	43795c <feof@plt+0x3487c>
  437948:	add	x9, x19, w21, sxtw #3
  43794c:	add	x9, x9, #0x80
  437950:	ldr	x20, [x9]
  437954:	cbnz	x20, 437970 <feof@plt+0x34890>
  437958:	b	437934 <feof@plt+0x34854>
  43795c:	ldr	x9, [x19, #152]
  437960:	sub	w10, w21, #0x2
  437964:	add	x9, x9, w10, sxtw #3
  437968:	ldr	x20, [x9]
  43796c:	cbz	x20, 437934 <feof@plt+0x34854>
  437970:	ldr	x0, [x20, #8]
  437974:	bl	402b20 <free@plt>
  437978:	mov	x0, x20
  43797c:	bl	402d00 <_ZdlPv@plt>
  437980:	ldr	w8, [x19, #120]
  437984:	b	437934 <feof@plt+0x34854>
  437988:	mov	w2, w0
  43798c:	mov	x0, x19
  437990:	mov	w1, w21
  437994:	mov	x3, x20
  437998:	ldp	x20, x19, [sp, #48]
  43799c:	ldp	x22, x21, [sp, #32]
  4379a0:	ldr	x23, [sp, #16]
  4379a4:	ldp	x29, x30, [sp], #64
  4379a8:	b	436f28 <feof@plt+0x33e48>
  4379ac:	str	wzr, [x19, #120]
  4379b0:	ldp	x20, x19, [sp, #48]
  4379b4:	ldp	x22, x21, [sp, #32]
  4379b8:	ldr	x23, [sp, #16]
  4379bc:	ldp	x29, x30, [sp], #64
  4379c0:	ret
  4379c4:	stp	x29, x30, [sp, #-48]!
  4379c8:	stp	x20, x19, [sp, #32]
  4379cc:	str	x21, [sp, #16]
  4379d0:	mov	x19, x0
  4379d4:	ldr	w21, [x0, #16]
  4379d8:	ldr	x0, [x0]
  4379dc:	mov	x20, x1
  4379e0:	mov	x29, sp
  4379e4:	tbnz	w21, #31, 437a0c <feof@plt+0x3492c>
  4379e8:	cmp	w21, #0x2
  4379ec:	b.cc	437a68 <feof@plt+0x34988>  // b.lo, b.ul, b.last
  4379f0:	ldr	w8, [x0, #36]
  4379f4:	cbz	w8, 437a24 <feof@plt+0x34944>
  4379f8:	ldr	x9, [x0, #24]
  4379fc:	sub	w8, w8, #0x1
  437a00:	sbfiz	x8, x8, #5, #32
  437a04:	ldr	w8, [x9, x8]
  437a08:	b	437a28 <feof@plt+0x34948>
  437a0c:	ldr	x8, [x0, #104]
  437a10:	and	x9, x21, #0x7fffffff
  437a14:	mov	w10, #0x18                  	// #24
  437a18:	madd	x8, x9, x10, x8
  437a1c:	ldp	w21, w8, [x8, #4]
  437a20:	b	437a6c <feof@plt+0x3498c>
  437a24:	mov	w8, #0x80000000            	// #-2147483648
  437a28:	mov	w9, #0x50000000            	// #1342177280
  437a2c:	cmp	w21, w9
  437a30:	b.hi	437a68 <feof@plt+0x34988>  // b.pmore
  437a34:	cmp	w8, w21
  437a38:	b.ls	437a68 <feof@plt+0x34988>  // b.plast
  437a3c:	mov	w1, w21
  437a40:	bl	4345c8 <feof@plt+0x314e8>
  437a44:	ldrh	w8, [x0, #6]
  437a48:	mov	w9, #0xffffffff            	// #-1
  437a4c:	lsr	x8, x8, #8
  437a50:	lsl	w9, w9, w8
  437a54:	bic	w9, w21, w9
  437a58:	sub	w21, w21, w9
  437a5c:	lsl	w8, w9, w8
  437a60:	add	w8, w21, w8
  437a64:	b	437a6c <feof@plt+0x3498c>
  437a68:	mov	w8, w21
  437a6c:	mov	w1, w21
  437a70:	mov	x0, x19
  437a74:	mov	x2, x20
  437a78:	ldp	x20, x19, [sp, #32]
  437a7c:	ldr	x21, [sp, #16]
  437a80:	bfi	x1, x8, #32, #32
  437a84:	ldp	x29, x30, [sp], #48
  437a88:	b	4377fc <feof@plt+0x3471c>
  437a8c:	stp	x29, x30, [sp, #-48]!
  437a90:	stp	x20, x19, [sp, #32]
  437a94:	mov	x20, x0
  437a98:	ldr	x0, [x0]
  437a9c:	str	x21, [sp, #16]
  437aa0:	mov	x19, x2
  437aa4:	mov	w21, w1
  437aa8:	mov	x29, sp
  437aac:	tbnz	w1, #31, 437ad4 <feof@plt+0x349f4>
  437ab0:	cmp	w21, #0x2
  437ab4:	b.cc	437b30 <feof@plt+0x34a50>  // b.lo, b.ul, b.last
  437ab8:	ldr	w8, [x0, #36]
  437abc:	cbz	w8, 437aec <feof@plt+0x34a0c>
  437ac0:	ldr	x9, [x0, #24]
  437ac4:	sub	w8, w8, #0x1
  437ac8:	sbfiz	x8, x8, #5, #32
  437acc:	ldr	w8, [x9, x8]
  437ad0:	b	437af0 <feof@plt+0x34a10>
  437ad4:	ldr	x8, [x0, #104]
  437ad8:	and	w9, w21, #0x7fffffff
  437adc:	mov	w10, #0x18                  	// #24
  437ae0:	umaddl	x8, w9, w10, x8
  437ae4:	ldp	w21, w8, [x8, #4]
  437ae8:	b	437b34 <feof@plt+0x34a54>
  437aec:	mov	w8, #0x80000000            	// #-2147483648
  437af0:	mov	w9, #0x50000000            	// #1342177280
  437af4:	cmp	w21, w9
  437af8:	b.hi	437b30 <feof@plt+0x34a50>  // b.pmore
  437afc:	cmp	w8, w21
  437b00:	b.ls	437b30 <feof@plt+0x34a50>  // b.plast
  437b04:	mov	w1, w21
  437b08:	bl	4345c8 <feof@plt+0x314e8>
  437b0c:	ldrh	w8, [x0, #6]
  437b10:	mov	w9, #0xffffffff            	// #-1
  437b14:	lsr	x8, x8, #8
  437b18:	lsl	w9, w9, w8
  437b1c:	bic	w9, w21, w9
  437b20:	sub	w21, w21, w9
  437b24:	lsl	w8, w9, w8
  437b28:	add	w8, w21, w8
  437b2c:	b	437b34 <feof@plt+0x34a54>
  437b30:	mov	w8, w21
  437b34:	mov	w1, w21
  437b38:	mov	x0, x20
  437b3c:	mov	x2, x19
  437b40:	ldp	x20, x19, [sp, #32]
  437b44:	ldr	x21, [sp, #16]
  437b48:	bfi	x1, x8, #32, #32
  437b4c:	ldp	x29, x30, [sp], #48
  437b50:	b	4377fc <feof@plt+0x3471c>
  437b54:	ldr	w8, [x0, #120]
  437b58:	cbz	w8, 437b74 <feof@plt+0x34a94>
  437b5c:	sub	w9, w8, #0x1
  437b60:	cmp	w9, #0x1
  437b64:	b.gt	437b7c <feof@plt+0x34a9c>
  437b68:	add	x8, x0, w9, sxtw #3
  437b6c:	ldr	x0, [x8, #128]!
  437b70:	ret
  437b74:	mov	x0, xzr
  437b78:	ret
  437b7c:	ldr	x9, [x0, #152]
  437b80:	sub	w8, w8, #0x3
  437b84:	add	x8, x9, w8, sxtw #3
  437b88:	ldr	x0, [x8]
  437b8c:	ret
  437b90:	stp	x29, x30, [sp, #-48]!
  437b94:	stp	x20, x19, [sp, #32]
  437b98:	ldrb	w8, [x0, #160]
  437b9c:	str	x21, [sp, #16]
  437ba0:	mov	x29, sp
  437ba4:	cbnz	w8, 437c34 <feof@plt+0x34b54>
  437ba8:	mov	w8, #0x1                   	// #1
  437bac:	movk	w8, #0x6000, lsl #16
  437bb0:	cmp	w1, w8
  437bb4:	b.cs	437bc0 <feof@plt+0x34ae0>  // b.hs, b.nlast
  437bb8:	mov	w0, wzr
  437bbc:	b	437c38 <feof@plt+0x34b58>
  437bc0:	ldr	w8, [x0, #120]
  437bc4:	mov	x19, x0
  437bc8:	mov	w9, #0x1                   	// #1
  437bcc:	strb	w9, [x0, #160]
  437bd0:	cbz	w8, 437c30 <feof@plt+0x34b50>
  437bd4:	mov	w21, wzr
  437bd8:	b	437be8 <feof@plt+0x34b08>
  437bdc:	add	w21, w21, #0x1
  437be0:	cmp	w21, w8
  437be4:	b.cs	437c30 <feof@plt+0x34b50>  // b.hs, b.nlast
  437be8:	cmp	w21, #0x1
  437bec:	b.gt	437c04 <feof@plt+0x34b24>
  437bf0:	add	x9, x19, w21, sxtw #3
  437bf4:	add	x9, x9, #0x80
  437bf8:	ldr	x20, [x9]
  437bfc:	cbnz	x20, 437c18 <feof@plt+0x34b38>
  437c00:	b	437bdc <feof@plt+0x34afc>
  437c04:	ldr	x9, [x19, #152]
  437c08:	sub	w10, w21, #0x2
  437c0c:	add	x9, x9, w10, sxtw #3
  437c10:	ldr	x20, [x9]
  437c14:	cbz	x20, 437bdc <feof@plt+0x34afc>
  437c18:	ldr	x0, [x20, #8]
  437c1c:	bl	402b20 <free@plt>
  437c20:	mov	x0, x20
  437c24:	bl	402d00 <_ZdlPv@plt>
  437c28:	ldr	w8, [x19, #120]
  437c2c:	b	437bdc <feof@plt+0x34afc>
  437c30:	str	wzr, [x19, #120]
  437c34:	mov	w0, #0x1                   	// #1
  437c38:	ldp	x20, x19, [sp, #32]
  437c3c:	ldr	x21, [sp, #16]
  437c40:	ldp	x29, x30, [sp], #48
  437c44:	ret
  437c48:	ldr	x8, [x0, #16]
  437c4c:	cbz	x8, 437c68 <feof@plt+0x34b88>
  437c50:	ldr	x9, [x0, #8]
  437c54:	add	x8, x8, x9
  437c58:	ldurb	w8, [x8, #-1]
  437c5c:	cmp	w8, #0xa
  437c60:	cset	w0, eq  // eq = none
  437c64:	ret
  437c68:	mov	w0, wzr
  437c6c:	ret
  437c70:	stp	x29, x30, [sp, #-48]!
  437c74:	stp	x20, x19, [sp, #32]
  437c78:	ldr	w8, [x0, #4]
  437c7c:	str	x21, [sp, #16]
  437c80:	mov	x29, sp
  437c84:	cmp	w8, w1
  437c88:	b.ne	437ce8 <feof@plt+0x34c08>  // b.any
  437c8c:	mov	x19, x0
  437c90:	str	w2, [x0, #4]
  437c94:	mov	x0, x3
  437c98:	mov	x20, x3
  437c9c:	bl	402a50 <strlen@plt>
  437ca0:	ldp	x8, x9, [x19, #8]
  437ca4:	mov	x21, x0
  437ca8:	add	x9, x0, x9
  437cac:	add	x1, x9, #0x1
  437cb0:	mov	x0, x8
  437cb4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  437cb8:	ldr	x8, [x19, #16]
  437cbc:	str	x0, [x19, #8]
  437cc0:	mov	x1, x20
  437cc4:	mov	x2, x21
  437cc8:	add	x0, x0, x8
  437ccc:	bl	4029c0 <memcpy@plt>
  437cd0:	ldp	x9, x8, [x19, #8]
  437cd4:	mov	w0, #0x1                   	// #1
  437cd8:	add	x8, x8, x21
  437cdc:	str	x8, [x19, #16]
  437ce0:	strb	wzr, [x9, x8]
  437ce4:	b	437cec <feof@plt+0x34c0c>
  437ce8:	mov	w0, wzr
  437cec:	ldp	x20, x19, [sp, #32]
  437cf0:	ldr	x21, [sp, #16]
  437cf4:	ldp	x29, x30, [sp], #48
  437cf8:	ret
  437cfc:	stp	x29, x30, [sp, #-32]!
  437d00:	stp	x20, x19, [sp, #16]
  437d04:	mov	x20, x0
  437d08:	stp	w1, w2, [x0]
  437d0c:	mov	x0, x3
  437d10:	mov	x29, sp
  437d14:	mov	x19, x3
  437d18:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  437d1c:	str	x0, [x20, #8]
  437d20:	mov	x0, x19
  437d24:	bl	402a50 <strlen@plt>
  437d28:	str	x0, [x20, #16]
  437d2c:	ldp	x20, x19, [sp, #16]
  437d30:	ldp	x29, x30, [sp], #32
  437d34:	ret
  437d38:	sub	sp, sp, #0x70
  437d3c:	stp	x29, x30, [sp, #64]
  437d40:	stp	x20, x19, [sp, #96]
  437d44:	str	x21, [sp, #80]
  437d48:	mov	x21, x0
  437d4c:	ldr	w0, [x0]
  437d50:	mov	x20, x1
  437d54:	add	x8, sp, #0x20
  437d58:	mov	w1, #0x1                   	// #1
  437d5c:	add	x29, sp, #0x40
  437d60:	mov	w19, w2
  437d64:	bl	41dd44 <feof@plt+0x1ac64>
  437d68:	ldr	x8, [sp, #32]
  437d6c:	cmp	x8, x20
  437d70:	b.ne	437d80 <feof@plt+0x34ca0>  // b.any
  437d74:	ldr	w8, [sp, #40]
  437d78:	cmp	w8, w19
  437d7c:	b.le	437d88 <feof@plt+0x34ca8>
  437d80:	mov	w0, wzr
  437d84:	b	437db4 <feof@plt+0x34cd4>
  437d88:	ldr	w0, [x21, #4]
  437d8c:	mov	x8, sp
  437d90:	mov	w1, #0x1                   	// #1
  437d94:	bl	41dd44 <feof@plt+0x1ac64>
  437d98:	ldr	x8, [sp]
  437d9c:	ldr	w9, [sp, #8]
  437da0:	cmp	x8, x20
  437da4:	cset	w8, eq  // eq = none
  437da8:	cmp	w9, w19
  437dac:	cset	w9, ge  // ge = tcont
  437db0:	and	w0, w8, w9
  437db4:	ldp	x20, x19, [sp, #96]
  437db8:	ldr	x21, [sp, #80]
  437dbc:	ldp	x29, x30, [sp, #64]
  437dc0:	add	sp, sp, #0x70
  437dc4:	ret
  437dc8:	stp	x29, x30, [sp, #-48]!
  437dcc:	stp	x20, x19, [sp, #32]
  437dd0:	ldrh	w8, [x1, #18]
  437dd4:	str	x21, [sp, #16]
  437dd8:	mov	x29, sp
  437ddc:	and	w8, w8, #0x3
  437de0:	cmp	w8, #0x2
  437de4:	b.ne	437e30 <feof@plt+0x34d50>  // b.any
  437de8:	ldr	x21, [x1, #24]
  437dec:	mov	x20, x1
  437df0:	ldrb	w8, [x21, #19]
  437df4:	tbnz	w8, #5, 437e30 <feof@plt+0x34d50>
  437df8:	mov	x19, x0
  437dfc:	ldr	x0, [x0, #40]
  437e00:	ldr	w1, [x21, #8]
  437e04:	bl	4345c8 <feof@plt+0x314e8>
  437e08:	ldr	w8, [x0, #20]
  437e0c:	cbnz	w8, 437e30 <feof@plt+0x34d50>
  437e10:	ldr	w2, [x21, #8]
  437e14:	ldr	x5, [x20]
  437e18:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  437e1c:	add	x4, x4, #0x848
  437e20:	mov	w1, #0xe                   	// #14
  437e24:	mov	x0, x19
  437e28:	mov	w3, wzr
  437e2c:	bl	428e5c <feof@plt+0x25d7c>
  437e30:	ldp	x20, x19, [sp, #32]
  437e34:	ldr	x21, [sp, #16]
  437e38:	mov	w0, #0x1                   	// #1
  437e3c:	ldp	x29, x30, [sp], #48
  437e40:	ret
  437e44:	sub	sp, sp, #0x50
  437e48:	stp	x29, x30, [sp, #16]
  437e4c:	stp	x24, x23, [sp, #32]
  437e50:	stp	x22, x21, [sp, #48]
  437e54:	stp	x20, x19, [sp, #64]
  437e58:	ldr	w8, [x1, #24]
  437e5c:	mov	x20, x1
  437e60:	mov	x19, x0
  437e64:	add	x29, sp, #0x10
  437e68:	cmp	w8, #0xa
  437e6c:	b.hi	437f0c <feof@plt+0x34e2c>  // b.pmore
  437e70:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  437e74:	add	x9, x9, #0x790
  437e78:	adr	x10, 437e88 <feof@plt+0x34da8>
  437e7c:	ldrb	w11, [x9, x8]
  437e80:	add	x10, x10, x11, lsl #2
  437e84:	br	x10
  437e88:	ldrb	w8, [x19, #1134]
  437e8c:	cbz	w8, 437ea8 <feof@plt+0x34dc8>
  437e90:	ldr	x3, [x20]
  437e94:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  437e98:	add	x2, x2, #0x87b
  437e9c:	mov	w1, #0x14                  	// #20
  437ea0:	mov	x0, x19
  437ea4:	bl	4289d0 <feof@plt+0x258f0>
  437ea8:	ldr	x8, [x19, #640]
  437eac:	cbnz	x8, 4381e4 <feof@plt+0x35104>
  437eb0:	ldr	x0, [x19, #656]
  437eb4:	cmn	x0, #0x2
  437eb8:	b.ne	437ed0 <feof@plt+0x34df0>  // b.any
  437ebc:	ldr	x8, [x19, #1056]
  437ec0:	cbz	x8, 4380ec <feof@plt+0x3500c>
  437ec4:	mov	x0, x19
  437ec8:	blr	x8
  437ecc:	str	x0, [x19, #656]
  437ed0:	tbnz	x0, #63, 4380ec <feof@plt+0x3500c>
  437ed4:	add	x0, x19, #0x290
  437ed8:	bl	402a60 <gmtime@plt>
  437edc:	mov	x21, x0
  437ee0:	cbnz	x0, 43811c <feof@plt+0x3503c>
  437ee4:	b	4381b8 <feof@plt+0x350d8>
  437ee8:	ldr	x8, [x19, #40]
  437eec:	ldr	w8, [x8, #48]
  437ef0:	sub	w21, w8, #0x1
  437ef4:	b	438208 <feof@plt+0x35128>
  437ef8:	ldrb	w9, [x19, #1160]
  437efc:	ldr	x8, [x19, #40]
  437f00:	cbz	w9, 4380c0 <feof@plt+0x34fe0>
  437f04:	ldr	w1, [x8, #60]
  437f08:	b	4380dc <feof@plt+0x34ffc>
  437f0c:	ldr	x3, [x20]
  437f10:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  437f14:	add	x2, x2, #0x85f
  437f18:	mov	w1, #0x4                   	// #4
  437f1c:	mov	x0, x19
  437f20:	bl	4288a0 <feof@plt+0x257c0>
  437f24:	b	438204 <feof@plt+0x35124>
  437f28:	ldr	x8, [x19]
  437f2c:	cbz	x8, 438204 <feof@plt+0x35124>
  437f30:	ldrb	w8, [x8, #106]
  437f34:	cbz	w8, 438204 <feof@plt+0x35124>
  437f38:	mov	w21, wzr
  437f3c:	b	438208 <feof@plt+0x35128>
  437f40:	ldrb	w8, [x19, #1134]
  437f44:	cbz	w8, 437f60 <feof@plt+0x34e80>
  437f48:	ldr	x3, [x20]
  437f4c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  437f50:	add	x2, x2, #0x87b
  437f54:	mov	w1, #0x14                  	// #20
  437f58:	mov	x0, x19
  437f5c:	bl	4289d0 <feof@plt+0x258f0>
  437f60:	mov	x0, x19
  437f64:	bl	42e2c4 <feof@plt+0x2b1e4>
  437f68:	ldr	x20, [x0, #88]
  437f6c:	cbnz	x20, 438228 <feof@plt+0x35148>
  437f70:	mov	x21, x0
  437f74:	bl	42e2cc <feof@plt+0x2b1ec>
  437f78:	cbz	x0, 4381a4 <feof@plt+0x350c4>
  437f7c:	bl	42e240 <feof@plt+0x2b160>
  437f80:	cbz	x0, 43817c <feof@plt+0x3509c>
  437f84:	add	x0, x0, #0x58
  437f88:	bl	402c90 <localtime@plt>
  437f8c:	cbz	x0, 43817c <feof@plt+0x3509c>
  437f90:	bl	402e00 <asctime@plt>
  437f94:	mov	x22, x0
  437f98:	bl	402a50 <strlen@plt>
  437f9c:	mov	x23, x0
  437fa0:	add	x1, x0, #0x2
  437fa4:	mov	x0, x19
  437fa8:	bl	4335d8 <feof@plt+0x304f8>
  437fac:	mov	w24, #0x22                  	// #34
  437fb0:	mov	x20, x0
  437fb4:	strb	w24, [x0], #1
  437fb8:	mov	x1, x22
  437fbc:	bl	402c00 <strcpy@plt>
  437fc0:	strb	w24, [x20, x23]
  437fc4:	b	438198 <feof@plt+0x350b8>
  437fc8:	ldr	x0, [x19, #40]
  437fcc:	ldr	w1, [x0, #60]
  437fd0:	bl	4358f8 <feof@plt+0x32818>
  437fd4:	mov	x21, x0
  437fd8:	b	437fec <feof@plt+0x34f0c>
  437fdc:	ldr	x0, [x19, #288]
  437fe0:	bl	42e238 <feof@plt+0x2b158>
  437fe4:	mov	x21, x0
  437fe8:	cbz	x0, 438244 <feof@plt+0x35164>
  437fec:	ldr	x8, [x19, #1080]
  437ff0:	cbz	x8, 438000 <feof@plt+0x34f20>
  437ff4:	mov	x0, x21
  437ff8:	blr	x8
  437ffc:	mov	x21, x0
  438000:	mov	x0, x21
  438004:	bl	402a50 <strlen@plt>
  438008:	mov	x22, x0
  43800c:	lsl	w8, w22, #1
  438010:	add	w1, w8, #0x3
  438014:	mov	x0, x19
  438018:	bl	4335d8 <feof@plt+0x304f8>
  43801c:	mov	w8, #0x22                  	// #34
  438020:	mov	x9, x0
  438024:	mov	x20, x0
  438028:	strb	w8, [x9], #1
  43802c:	cbz	w22, 43806c <feof@plt+0x34f8c>
  438030:	mov	w10, #0x5c                  	// #92
  438034:	b	438044 <feof@plt+0x34f64>
  438038:	strb	w10, [x9], #1
  43803c:	strb	w11, [x9], #1
  438040:	cbz	w22, 43806c <feof@plt+0x34f8c>
  438044:	ldrb	w11, [x21], #1
  438048:	sub	w22, w22, #0x1
  43804c:	cmp	w11, #0x5c
  438050:	b.eq	438038 <feof@plt+0x34f58>  // b.none
  438054:	cmp	w11, #0x22
  438058:	b.eq	438038 <feof@plt+0x34f58>  // b.none
  43805c:	cmp	w11, #0xa
  438060:	b.ne	43803c <feof@plt+0x34f5c>  // b.any
  438064:	mov	w11, #0x6e                  	// #110
  438068:	b	438038 <feof@plt+0x34f58>
  43806c:	strh	w8, [x9]
  438070:	cbnz	x20, 438228 <feof@plt+0x35148>
  438074:	b	438204 <feof@plt+0x35124>
  438078:	ldr	x8, [x19, #1040]
  43807c:	mov	x0, x19
  438080:	blr	x8
  438084:	mov	w21, w0
  438088:	b	438208 <feof@plt+0x35128>
  43808c:	ldrb	w8, [x19, #1244]
  438090:	cbz	w8, 4380b0 <feof@plt+0x34fd0>
  438094:	ldrb	w8, [x19, #16]
  438098:	cbz	w8, 4380b0 <feof@plt+0x34fd0>
  43809c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4380a0:	add	x2, x2, #0x96c
  4380a4:	mov	w1, #0x3                   	// #3
  4380a8:	mov	x0, x19
  4380ac:	bl	4288a0 <feof@plt+0x257c0>
  4380b0:	ldr	w21, [x19, #1376]
  4380b4:	add	w8, w21, #0x1
  4380b8:	str	w8, [x19, #1376]
  4380bc:	b	438208 <feof@plt+0x35128>
  4380c0:	mov	x0, x8
  4380c4:	mov	w1, w2
  4380c8:	mov	w2, wzr
  4380cc:	mov	x3, xzr
  4380d0:	bl	435630 <feof@plt+0x32550>
  4380d4:	ldr	x8, [x19, #40]
  4380d8:	mov	w1, w0
  4380dc:	mov	x0, x8
  4380e0:	bl	435838 <feof@plt+0x32758>
  4380e4:	mov	w21, w0
  4380e8:	b	438208 <feof@plt+0x35128>
  4380ec:	bl	402e70 <__errno_location@plt>
  4380f0:	mov	x21, x0
  4380f4:	str	wzr, [x0]
  4380f8:	mov	x0, xzr
  4380fc:	bl	402e40 <time@plt>
  438100:	cmn	x0, #0x1
  438104:	str	x0, [sp, #8]
  438108:	b.eq	4381b0 <feof@plt+0x350d0>  // b.none
  43810c:	add	x0, sp, #0x8
  438110:	bl	402c90 <localtime@plt>
  438114:	mov	x21, x0
  438118:	cbz	x0, 4381b8 <feof@plt+0x350d8>
  43811c:	mov	w1, #0xe                   	// #14
  438120:	mov	x0, x19
  438124:	bl	4335d8 <feof@plt+0x304f8>
  438128:	str	x0, [x19, #640]
  43812c:	ldp	w3, w8, [x21, #12]
  438130:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  438134:	sxtw	x8, w8
  438138:	add	x9, x9, #0x7e8
  43813c:	ldr	w10, [x21, #20]
  438140:	ldr	x2, [x9, x8, lsl #3]
  438144:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  438148:	add	x1, x1, #0x913
  43814c:	add	w4, w10, #0x76c
  438150:	bl	402c30 <sprintf@plt>
  438154:	mov	w1, #0xb                   	// #11
  438158:	mov	x0, x19
  43815c:	bl	4335d8 <feof@plt+0x304f8>
  438160:	str	x0, [x19, #648]
  438164:	ldp	w3, w2, [x21, #4]
  438168:	ldr	w4, [x21]
  43816c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  438170:	add	x1, x1, #0x920
  438174:	bl	402c30 <sprintf@plt>
  438178:	b	4381e4 <feof@plt+0x35104>
  43817c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438180:	add	x2, x2, #0x8a8
  438184:	mov	x0, x19
  438188:	mov	w1, wzr
  43818c:	bl	4292f8 <feof@plt+0x26218>
  438190:	adrp	x20, 470000 <_obstack_memory_used@@Base+0xe838>
  438194:	add	x20, x20, #0x8cb
  438198:	str	x20, [x21, #88]
  43819c:	cbnz	x20, 438228 <feof@plt+0x35148>
  4381a0:	b	438204 <feof@plt+0x35124>
  4381a4:	ldr	x20, [x21, #88]
  4381a8:	cbnz	x20, 438228 <feof@plt+0x35148>
  4381ac:	b	438204 <feof@plt+0x35124>
  4381b0:	ldr	w8, [x21]
  4381b4:	cbz	w8, 43810c <feof@plt+0x3502c>
  4381b8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4381bc:	add	x2, x2, #0x931
  4381c0:	mov	x0, x19
  4381c4:	mov	w1, wzr
  4381c8:	bl	4292f8 <feof@plt+0x26218>
  4381cc:	adrp	x8, 470000 <_obstack_memory_used@@Base+0xe838>
  4381d0:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  4381d4:	add	x8, x8, #0x953
  4381d8:	add	x9, x9, #0x961
  4381dc:	str	x8, [x19, #640]
  4381e0:	str	x9, [x19, #648]
  4381e4:	ldr	w8, [x20, #24]
  4381e8:	cmp	w8, #0x1
  4381ec:	b.ne	4381fc <feof@plt+0x3511c>  // b.any
  4381f0:	ldr	x20, [x19, #640]
  4381f4:	cbnz	x20, 438228 <feof@plt+0x35148>
  4381f8:	b	438204 <feof@plt+0x35124>
  4381fc:	ldr	x20, [x19, #648]
  438200:	cbnz	x20, 438228 <feof@plt+0x35148>
  438204:	mov	w21, #0x1                   	// #1
  438208:	mov	w1, #0x15                  	// #21
  43820c:	mov	x0, x19
  438210:	bl	4335d8 <feof@plt+0x304f8>
  438214:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  438218:	add	x1, x1, #0x372
  43821c:	mov	w2, w21
  438220:	mov	x20, x0
  438224:	bl	402c30 <sprintf@plt>
  438228:	mov	x0, x20
  43822c:	ldp	x20, x19, [sp, #64]
  438230:	ldp	x22, x21, [sp, #48]
  438234:	ldp	x24, x23, [sp, #32]
  438238:	ldp	x29, x30, [sp, #16]
  43823c:	add	sp, sp, #0x50
  438240:	ret
  438244:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438248:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43824c:	add	x0, x0, #0x8e6
  438250:	add	x2, x2, #0x8fb
  438254:	mov	w1, #0x1c5                 	// #453
  438258:	bl	40f560 <feof@plt+0xc480>
  43825c:	cbz	w2, 43829c <feof@plt+0x351bc>
  438260:	mov	w8, #0x5c                  	// #92
  438264:	b	438274 <feof@plt+0x35194>
  438268:	strb	w8, [x0], #1
  43826c:	strb	w9, [x0], #1
  438270:	cbz	w2, 43829c <feof@plt+0x351bc>
  438274:	ldrb	w9, [x1], #1
  438278:	sub	w2, w2, #0x1
  43827c:	cmp	w9, #0x5c
  438280:	b.eq	438268 <feof@plt+0x35188>  // b.none
  438284:	cmp	w9, #0x22
  438288:	b.eq	438268 <feof@plt+0x35188>  // b.none
  43828c:	cmp	w9, #0xa
  438290:	b.ne	43826c <feof@plt+0x3518c>  // b.any
  438294:	mov	w9, #0x6e                  	// #110
  438298:	b	438268 <feof@plt+0x35188>
  43829c:	ret
  4382a0:	stp	x29, x30, [sp, #-48]!
  4382a4:	stp	x20, x19, [sp, #32]
  4382a8:	ldrh	w5, [x1, #16]
  4382ac:	str	x21, [sp, #16]
  4382b0:	mov	x29, sp
  4382b4:	cmp	w5, w3
  4382b8:	b.ne	4382c4 <feof@plt+0x351e4>  // b.any
  4382bc:	mov	w0, #0x1                   	// #1
  4382c0:	b	438350 <feof@plt+0x35270>
  4382c4:	mov	w8, w3
  4382c8:	mov	x20, x2
  4382cc:	mov	x21, x1
  4382d0:	mov	x19, x0
  4382d4:	b.ls	43830c <feof@plt+0x3522c>  // b.plast
  4382d8:	add	w9, w8, #0x1
  4382dc:	cmp	w9, w5
  4382e0:	b.ne	4382ec <feof@plt+0x3520c>  // b.any
  4382e4:	ldrb	w9, [x21, #19]
  4382e8:	tbnz	w9, #3, 438360 <feof@plt+0x35280>
  4382ec:	ldr	x3, [x20]
  4382f0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4382f4:	add	x2, x2, #0xa3d
  4382f8:	mov	w1, #0x3                   	// #3
  4382fc:	mov	x0, x19
  438300:	mov	w4, w5
  438304:	mov	w5, w8
  438308:	b	438324 <feof@plt+0x35244>
  43830c:	ldr	x3, [x20]
  438310:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438314:	add	x2, x2, #0xa71
  438318:	mov	w1, #0x3                   	// #3
  43831c:	mov	x0, x19
  438320:	mov	w4, w8
  438324:	bl	4288a0 <feof@plt+0x257c0>
  438328:	ldr	w2, [x21, #8]
  43832c:	cmp	w2, #0x3
  438330:	b.cc	43834c <feof@plt+0x3526c>  // b.lo, b.ul, b.last
  438334:	ldr	x4, [x20]
  438338:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  43833c:	add	x3, x3, #0xaa3
  438340:	mov	w1, #0x5                   	// #5
  438344:	mov	x0, x19
  438348:	bl	429150 <feof@plt+0x26070>
  43834c:	mov	w0, wzr
  438350:	ldp	x20, x19, [sp, #32]
  438354:	ldr	x21, [sp, #16]
  438358:	ldp	x29, x30, [sp], #48
  43835c:	ret
  438360:	mov	w0, #0x1                   	// #1
  438364:	tbnz	w9, #4, 438350 <feof@plt+0x35270>
  438368:	ldrb	w8, [x19, #1154]
  43836c:	cbz	w8, 438350 <feof@plt+0x35270>
  438370:	ldrb	w8, [x19, #1167]
  438374:	cbnz	w8, 4382bc <feof@plt+0x351dc>
  438378:	ldrb	w8, [x19, #1120]
  43837c:	cbz	w8, 43838c <feof@plt+0x352ac>
  438380:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438384:	add	x2, x2, #0x9a9
  438388:	b	438394 <feof@plt+0x352b4>
  43838c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438390:	add	x2, x2, #0x9f4
  438394:	mov	w1, #0x2                   	// #2
  438398:	mov	x0, x19
  43839c:	bl	4288a0 <feof@plt+0x257c0>
  4383a0:	mov	w0, #0x1                   	// #1
  4383a4:	b	438350 <feof@plt+0x35270>
  4383a8:	stp	x29, x30, [sp, #-48]!
  4383ac:	stp	x22, x21, [sp, #16]
  4383b0:	stp	x20, x19, [sp, #32]
  4383b4:	ldr	x8, [x0, #136]
  4383b8:	mov	w19, w3
  4383bc:	mov	x20, x2
  4383c0:	mov	x21, x0
  4383c4:	mov	x22, x1
  4383c8:	mov	x29, sp
  4383cc:	cbz	x1, 438404 <feof@plt+0x35324>
  4383d0:	ldr	x0, [x8]
  4383d4:	cbz	x0, 438424 <feof@plt+0x35344>
  4383d8:	mov	w8, #0x1                   	// #1
  4383dc:	mov	w9, #0x18                  	// #24
  4383e0:	str	x0, [x21, #136]
  4383e4:	str	w8, [x0, #48]
  4383e8:	umaddl	x8, w19, w9, x20
  4383ec:	stp	xzr, x22, [x0, #32]
  4383f0:	stp	x20, x8, [x0, #16]
  4383f4:	ldp	x20, x19, [sp, #32]
  4383f8:	ldp	x22, x21, [sp, #16]
  4383fc:	ldp	x29, x30, [sp], #48
  438400:	ret
  438404:	ldr	w9, [x8, #48]
  438408:	cmp	w9, #0x2
  43840c:	add	x9, x8, #0x28
  438410:	b.ne	438418 <feof@plt+0x35338>  // b.any
  438414:	ldr	x9, [x9]
  438418:	ldr	x22, [x9]
  43841c:	ldr	x0, [x8]
  438420:	cbnz	x0, 4383d8 <feof@plt+0x352f8>
  438424:	mov	w0, #0x38                  	// #56
  438428:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43842c:	movi	v0.2d, #0x0
  438430:	str	xzr, [x0, #48]
  438434:	stp	q0, q0, [x0, #16]
  438438:	ldr	x8, [x21, #136]
  43843c:	stp	xzr, x8, [x0]
  438440:	str	x0, [x8]
  438444:	b	4383d8 <feof@plt+0x352f8>
  438448:	stp	x29, x30, [sp, #-48]!
  43844c:	stp	x22, x21, [sp, #16]
  438450:	stp	x20, x19, [sp, #32]
  438454:	ldr	x8, [x0, #136]
  438458:	mov	x22, x0
  43845c:	mov	x19, x3
  438460:	mov	x20, x2
  438464:	ldr	x0, [x8]
  438468:	mov	x21, x1
  43846c:	mov	x29, sp
  438470:	cbnz	x0, 438494 <feof@plt+0x353b4>
  438474:	mov	w0, #0x38                  	// #56
  438478:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43847c:	movi	v0.2d, #0x0
  438480:	str	xzr, [x0, #48]
  438484:	stp	q0, q0, [x0, #16]
  438488:	ldr	x8, [x22, #136]
  43848c:	stp	xzr, x8, [x0]
  438490:	str	x0, [x8]
  438494:	mov	w8, #0x1                   	// #1
  438498:	add	x9, x20, x19
  43849c:	str	x0, [x22, #136]
  4384a0:	stp	xzr, x21, [x0, #32]
  4384a4:	str	w8, [x0, #48]
  4384a8:	stp	x20, x9, [x0, #16]
  4384ac:	ldrh	w8, [x21, #18]
  4384b0:	orr	w8, w8, #0x40
  4384b4:	strh	w8, [x21, #18]
  4384b8:	ldp	x20, x19, [sp, #32]
  4384bc:	ldp	x22, x21, [sp, #16]
  4384c0:	ldp	x29, x30, [sp], #48
  4384c4:	ret
  4384c8:	stp	x29, x30, [sp, #-48]!
  4384cc:	stp	x22, x21, [sp, #16]
  4384d0:	stp	x20, x19, [sp, #32]
  4384d4:	ldr	x19, [x0, #136]
  4384d8:	add	x8, x0, #0x50
  4384dc:	mov	x29, sp
  4384e0:	cmp	x19, x8
  4384e4:	b.eq	4385b8 <feof@plt+0x354d8>  // b.none
  4384e8:	ldr	x21, [x19, #40]
  4384ec:	mov	x20, x0
  4384f0:	cbz	x21, 43855c <feof@plt+0x3547c>
  4384f4:	ldr	w8, [x19, #48]
  4384f8:	cmp	w8, #0x2
  4384fc:	b.ne	438588 <feof@plt+0x354a8>  // b.any
  438500:	ldr	x8, [x19, #32]
  438504:	ldr	x22, [x21]
  438508:	cbz	x8, 438518 <feof@plt+0x35438>
  43850c:	ldr	x0, [x21, #8]
  438510:	cbz	x0, 438518 <feof@plt+0x35438>
  438514:	bl	402b20 <free@plt>
  438518:	mov	x0, x21
  43851c:	bl	402b20 <free@plt>
  438520:	str	xzr, [x19, #40]
  438524:	cbz	x22, 438544 <feof@plt+0x35464>
  438528:	ldr	x8, [x19, #8]
  43852c:	cbnz	x8, 438594 <feof@plt+0x354b4>
  438530:	cmp	x8, x22
  438534:	b.eq	438544 <feof@plt+0x35464>  // b.none
  438538:	ldrh	w8, [x22, #18]
  43853c:	and	w8, w8, #0xffffffbf
  438540:	strh	w8, [x22, #18]
  438544:	ldr	x8, [x20, #184]
  438548:	cmp	x22, x8
  43854c:	b.ne	43855c <feof@plt+0x3547c>  // b.any
  438550:	ldr	x8, [x19, #8]
  438554:	cbnz	x8, 43855c <feof@plt+0x3547c>
  438558:	str	xzr, [x20, #184]
  43855c:	ldr	x0, [x19, #32]
  438560:	cbz	x0, 438568 <feof@plt+0x35488>
  438564:	bl	434098 <feof@plt+0x30fb8>
  438568:	ldr	x8, [x19, #8]
  43856c:	mov	x0, x19
  438570:	str	x8, [x20, #136]
  438574:	str	xzr, [x8]
  438578:	ldp	x20, x19, [sp, #32]
  43857c:	ldp	x22, x21, [sp, #16]
  438580:	ldp	x29, x30, [sp], #48
  438584:	b	402b20 <free@plt>
  438588:	mov	x22, x21
  43858c:	ldr	x8, [x19, #8]
  438590:	cbz	x8, 438530 <feof@plt+0x35450>
  438594:	ldr	w9, [x8, #48]
  438598:	add	x8, x8, #0x28
  43859c:	cmp	w9, #0x2
  4385a0:	b.ne	4385a8 <feof@plt+0x354c8>  // b.any
  4385a4:	ldr	x8, [x8]
  4385a8:	ldr	x8, [x8]
  4385ac:	cmp	x8, x22
  4385b0:	b.ne	438538 <feof@plt+0x35458>  // b.any
  4385b4:	b	438544 <feof@plt+0x35464>
  4385b8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  4385bc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4385c0:	add	x0, x0, #0x8e6
  4385c4:	add	x2, x2, #0xabb
  4385c8:	mov	w1, #0x9eb                 	// #2539
  4385cc:	bl	40f560 <feof@plt+0xc480>
  4385d0:	mov	x1, xzr
  4385d4:	b	4385d8 <feof@plt+0x354f8>
  4385d8:	sub	sp, sp, #0x80
  4385dc:	stp	x29, x30, [sp, #32]
  4385e0:	stp	x28, x27, [sp, #48]
  4385e4:	stp	x26, x25, [sp, #64]
  4385e8:	stp	x24, x23, [sp, #80]
  4385ec:	stp	x22, x21, [sp, #96]
  4385f0:	stp	x20, x19, [sp, #112]
  4385f4:	ldrb	w26, [x0, #192]
  4385f8:	mov	x20, x1
  4385fc:	mov	x19, x0
  438600:	mov	w21, wzr
  438604:	add	x25, x0, #0xb0
  438608:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x28838>
  43860c:	add	x29, sp, #0x20
  438610:	b	438624 <feof@plt+0x35544>
  438614:	mov	x0, x19
  438618:	bl	4384c8 <feof@plt+0x353e8>
  43861c:	ldrb	w8, [x19, #16]
  438620:	cbz	w8, 438a44 <feof@plt+0x35964>
  438624:	ldr	x8, [x19, #136]
  438628:	ldr	x9, [x8, #8]
  43862c:	cbz	x9, 43867c <feof@plt+0x3559c>
  438630:	ldr	w10, [x8, #48]
  438634:	cbz	w10, 438658 <feof@plt+0x35578>
  438638:	cmp	w10, #0x2
  43863c:	b.eq	438658 <feof@plt+0x35578>  // b.none
  438640:	cmp	w10, #0x1
  438644:	b.ne	438bc0 <feof@plt+0x35ae0>  // b.any
  438648:	ldp	x9, x10, [x8, #16]
  43864c:	cmp	x9, x10
  438650:	b.eq	438664 <feof@plt+0x35584>  // b.none
  438654:	b	4386a4 <feof@plt+0x355c4>
  438658:	ldp	x9, x11, [x8, #16]
  43865c:	cmp	x9, x11
  438660:	b.ne	438690 <feof@plt+0x355b0>  // b.any
  438664:	ldr	x8, [x8, #40]
  438668:	cbz	x8, 438614 <feof@plt+0x35534>
  43866c:	ldr	w8, [x28, #2448]
  438670:	add	w8, w8, #0x1
  438674:	str	w8, [x28, #2448]
  438678:	b	438614 <feof@plt+0x35534>
  43867c:	mov	x0, x19
  438680:	bl	42fda4 <feof@plt+0x2ccc4>
  438684:	ldr	w21, [x0]
  438688:	mov	x22, x0
  43868c:	b	4386bc <feof@plt+0x355dc>
  438690:	cbz	w10, 438788 <feof@plt+0x356a8>
  438694:	cmp	w10, #0x2
  438698:	b.eq	438764 <feof@plt+0x35684>  // b.none
  43869c:	cmp	w10, #0x1
  4386a0:	b.ne	438bf0 <feof@plt+0x35b10>  // b.any
  4386a4:	mov	x10, x9
  4386a8:	ldr	w21, [x10], #24
  4386ac:	mov	x22, x9
  4386b0:	str	x10, [x8, #16]
  4386b4:	ldrb	w8, [x22, #6]
  4386b8:	tbnz	w8, #3, 4387f0 <feof@plt+0x35710>
  4386bc:	ldrb	w9, [x19, #16]
  4386c0:	ldrb	w8, [x22, #4]
  4386c4:	cbz	w9, 4386d0 <feof@plt+0x355f0>
  4386c8:	cmp	w8, #0x4f
  4386cc:	b.eq	438624 <feof@plt+0x35544>  // b.none
  4386d0:	cmp	w8, #0x35
  4386d4:	b.ne	438a48 <feof@plt+0x35968>  // b.any
  4386d8:	ldr	x1, [x22, #8]
  4386dc:	ldrh	w8, [x1, #18]
  4386e0:	tst	w8, #0x3
  4386e4:	b.eq	438a48 <feof@plt+0x35968>  // b.none
  4386e8:	ldrb	w9, [x22, #7]
  4386ec:	tbnz	w9, #2, 438a48 <feof@plt+0x35968>
  4386f0:	tbnz	w8, #6, 438af0 <feof@plt+0x35a10>
  4386f4:	ldrb	w8, [x19, #192]
  4386f8:	cbnz	w8, 43872c <feof@plt+0x3564c>
  4386fc:	ldr	x8, [x19, #136]
  438700:	cbz	x8, 438720 <feof@plt+0x35640>
  438704:	ldr	w9, [x8, #48]
  438708:	add	x8, x8, #0x28
  43870c:	cmp	w9, #0x2
  438710:	b.ne	438718 <feof@plt+0x35638>  // b.any
  438714:	ldr	x8, [x8]
  438718:	ldr	x8, [x8]
  43871c:	cbnz	x8, 43872c <feof@plt+0x3564c>
  438720:	ldr	w8, [x22]
  438724:	str	x1, [x19, #184]
  438728:	str	w8, [x19, #176]
  43872c:	ldrb	w8, [x19, #24]
  438730:	cbnz	w8, 438a48 <feof@plt+0x35968>
  438734:	ldrb	w8, [x1, #19]
  438738:	tbz	w8, #0, 4387b4 <feof@plt+0x356d4>
  43873c:	ldr	x8, [x19, #992]
  438740:	cbz	x8, 438a48 <feof@plt+0x35968>
  438744:	mov	x0, x19
  438748:	mov	w1, wzr
  43874c:	bl	42fc4c <feof@plt+0x2cb6c>
  438750:	ldrb	w8, [x0, #4]
  438754:	cmp	w8, #0x53
  438758:	b.ne	438794 <feof@plt+0x356b4>  // b.any
  43875c:	mov	w23, #0x1                   	// #1
  438760:	b	43879c <feof@plt+0x356bc>
  438764:	ldr	x10, [x8, #40]
  438768:	ldr	x22, [x9]
  43876c:	ldr	x11, [x10, #8]
  438770:	cbz	x11, 4387dc <feof@plt+0x356fc>
  438774:	ldr	x9, [x10, #16]
  438778:	ldr	w21, [x9], #4
  43877c:	str	x9, [x10, #16]
  438780:	ldr	x9, [x8, #16]
  438784:	b	4387e0 <feof@plt+0x35700>
  438788:	ldr	x22, [x9], #8
  43878c:	ldr	w21, [x22]
  438790:	b	4387e4 <feof@plt+0x35704>
  438794:	ldrb	w8, [x0, #6]
  438798:	and	w23, w8, #0x1
  43879c:	ldr	x8, [x19, #992]
  4387a0:	mov	x0, x19
  4387a4:	mov	x1, x22
  4387a8:	blr	x8
  4387ac:	mov	x1, x0
  4387b0:	cbz	x0, 438b1c <feof@plt+0x35a3c>
  4387b4:	mov	x0, x19
  4387b8:	mov	x2, x22
  4387bc:	mov	w3, w21
  4387c0:	bl	43a0cc <feof@plt+0x36fec>
  4387c4:	cbz	w0, 438a48 <feof@plt+0x35968>
  4387c8:	cmp	w0, #0x2
  4387cc:	b.eq	438624 <feof@plt+0x35544>  // b.none
  4387d0:	ldrb	w8, [x19, #16]
  4387d4:	cbnz	w8, 438624 <feof@plt+0x35544>
  4387d8:	b	438ad0 <feof@plt+0x359f0>
  4387dc:	ldr	w21, [x22]
  4387e0:	add	x9, x9, #0x8
  4387e4:	str	x9, [x8, #16]
  4387e8:	ldrb	w8, [x22, #6]
  4387ec:	tbz	w8, #3, 4386bc <feof@plt+0x355dc>
  4387f0:	stur	x22, [x29, #-8]
  4387f4:	ldr	x27, [x19, #136]
  4387f8:	cbz	x27, 438c08 <feof@plt+0x35b28>
  4387fc:	ldr	w8, [x27, #48]
  438800:	add	x9, x27, #0x28
  438804:	cmp	w8, #0x2
  438808:	b.ne	438810 <feof@plt+0x35730>  // b.any
  43880c:	ldr	x9, [x9]
  438810:	ldr	x9, [x9]
  438814:	cbz	x9, 438c08 <feof@plt+0x35b28>
  438818:	cmp	w8, #0x2
  43881c:	mov	x9, x25
  438820:	b.ne	438830 <feof@plt+0x35750>  // b.any
  438824:	ldr	x9, [x27, #40]
  438828:	ldr	x9, [x9, #16]
  43882c:	sub	x9, x9, #0x4
  438830:	ldr	w23, [x9]
  438834:	mov	x24, xzr
  438838:	cbz	w8, 438880 <feof@plt+0x357a0>
  43883c:	cmp	w8, #0x2
  438840:	b.eq	43885c <feof@plt+0x3577c>  // b.none
  438844:	cmp	w8, #0x1
  438848:	b.ne	438890 <feof@plt+0x357b0>  // b.any
  43884c:	ldr	x24, [x27, #16]
  438850:	add	x8, x24, #0x18
  438854:	str	x8, [x27, #16]
  438858:	b	438890 <feof@plt+0x357b0>
  43885c:	ldr	x8, [x27, #16]
  438860:	ldr	x9, [x27, #40]
  438864:	add	x10, x8, #0x8
  438868:	str	x10, [x27, #16]
  43886c:	ldr	x10, [x9, #16]
  438870:	ldr	x24, [x8]
  438874:	add	x8, x10, #0x4
  438878:	str	x8, [x9, #16]
  43887c:	b	438890 <feof@plt+0x357b0>
  438880:	ldr	x8, [x27, #16]
  438884:	add	x9, x8, #0x8
  438888:	str	x9, [x27, #16]
  43888c:	ldr	x24, [x8]
  438890:	ldrb	w8, [x24, #4]
  438894:	cmp	w8, #0x53
  438898:	b.ne	4388a4 <feof@plt+0x357c4>  // b.any
  43889c:	ldrb	w8, [x24, #6]
  4388a0:	tbnz	w8, #3, 438bd8 <feof@plt+0x35af8>
  4388a4:	sub	x2, x29, #0x8
  4388a8:	mov	x0, x19
  4388ac:	mov	w1, w23
  4388b0:	mov	x3, x24
  4388b4:	bl	43b6e8 <feof@plt+0x38608>
  4388b8:	tbz	w0, #0, 4388d0 <feof@plt+0x357f0>
  4388bc:	ldrb	w8, [x24, #6]
  4388c0:	tbz	w8, #3, 4388d0 <feof@plt+0x357f0>
  4388c4:	ldr	w8, [x27, #48]
  4388c8:	cbnz	w8, 43883c <feof@plt+0x3575c>
  4388cc:	b	438880 <feof@plt+0x357a0>
  4388d0:	ldr	w8, [x27, #48]
  4388d4:	cmp	w8, #0x2
  4388d8:	b.ne	438990 <feof@plt+0x358b0>  // b.any
  4388dc:	mov	w0, #0x10                  	// #16
  4388e0:	str	x20, [sp, #8]
  4388e4:	mov	x20, x25
  4388e8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4388ec:	mov	x24, x0
  4388f0:	mov	w1, #0x8                   	// #8
  4388f4:	mov	x0, x19
  4388f8:	bl	433e38 <feof@plt+0x30d58>
  4388fc:	ldp	x8, x9, [x0, #16]
  438900:	cmp	x8, x9
  438904:	b.hi	438c20 <feof@plt+0x35b40>  // b.pmore
  438908:	ldur	x9, [x29, #-8]
  43890c:	mov	x25, x0
  438910:	stur	w26, [x29, #-12]
  438914:	cbz	x24, 438928 <feof@plt+0x35848>
  438918:	ldr	x10, [x25, #8]
  43891c:	sub	x10, x8, x10
  438920:	lsr	x10, x10, #3
  438924:	str	w23, [x24, w10, uxtw #2]
  438928:	str	x9, [x8], #8
  43892c:	str	x8, [x25, #16]
  438930:	ldr	x8, [x27, #40]
  438934:	ldr	x27, [x25, #8]
  438938:	ldr	x26, [x8]
  43893c:	ldr	x8, [x19, #136]
  438940:	cbz	x26, 4389fc <feof@plt+0x3591c>
  438944:	ldr	x23, [x8]
  438948:	cbz	x23, 438a1c <feof@plt+0x3593c>
  43894c:	mov	w8, #0x2                   	// #2
  438950:	mov	w0, #0x18                  	// #24
  438954:	str	x23, [x19, #136]
  438958:	str	w8, [x23, #48]
  43895c:	str	x25, [x23, #32]
  438960:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  438964:	add	x8, x27, #0x8
  438968:	stp	x26, x24, [x0]
  43896c:	str	x24, [x0, #16]
  438970:	stp	x27, x8, [x23, #16]
  438974:	ldur	w26, [x29, #-12]
  438978:	mov	x25, x20
  43897c:	ldr	x20, [sp, #8]
  438980:	str	x0, [x23, #40]
  438984:	ldrb	w8, [x19, #16]
  438988:	cbnz	w8, 438624 <feof@plt+0x35544>
  43898c:	b	438ad0 <feof@plt+0x359f0>
  438990:	ldr	x8, [x19, #136]
  438994:	ldur	x23, [x29, #-8]
  438998:	ldr	w9, [x8, #48]
  43899c:	cmp	w9, #0x2
  4389a0:	add	x9, x8, #0x28
  4389a4:	b.ne	4389ac <feof@plt+0x358cc>  // b.any
  4389a8:	ldr	x9, [x9]
  4389ac:	ldr	x0, [x8]
  4389b0:	ldr	x24, [x9]
  4389b4:	mov	w27, #0x1                   	// #1
  4389b8:	cbnz	x0, 4389dc <feof@plt+0x358fc>
  4389bc:	mov	w0, #0x38                  	// #56
  4389c0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4389c4:	movi	v0.2d, #0x0
  4389c8:	stp	q0, q0, [x0, #16]
  4389cc:	str	xzr, [x0, #48]
  4389d0:	ldr	x8, [x19, #136]
  4389d4:	stp	xzr, x8, [x0]
  4389d8:	str	x0, [x8]
  4389dc:	add	x8, x23, #0x18
  4389e0:	str	x0, [x19, #136]
  4389e4:	str	w27, [x0, #48]
  4389e8:	stp	xzr, x24, [x0, #32]
  4389ec:	stp	x23, x8, [x0, #16]
  4389f0:	ldrb	w8, [x19, #16]
  4389f4:	cbnz	w8, 438624 <feof@plt+0x35544>
  4389f8:	b	438ad0 <feof@plt+0x359f0>
  4389fc:	ldr	w9, [x8, #48]
  438a00:	cmp	w9, #0x2
  438a04:	add	x9, x8, #0x28
  438a08:	b.ne	438a10 <feof@plt+0x35930>  // b.any
  438a0c:	ldr	x9, [x9]
  438a10:	ldr	x26, [x9]
  438a14:	ldr	x23, [x8]
  438a18:	cbnz	x23, 43894c <feof@plt+0x3586c>
  438a1c:	mov	w0, #0x38                  	// #56
  438a20:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  438a24:	movi	v0.2d, #0x0
  438a28:	stp	q0, q0, [x0, #16]
  438a2c:	str	xzr, [x0, #48]
  438a30:	ldr	x8, [x19, #136]
  438a34:	mov	x23, x0
  438a38:	stp	xzr, x8, [x0]
  438a3c:	str	x0, [x8]
  438a40:	b	43894c <feof@plt+0x3586c>
  438a44:	add	x22, x19, #0x298
  438a48:	cbz	x20, 438a78 <feof@plt+0x35998>
  438a4c:	cbnz	w21, 438a54 <feof@plt+0x35974>
  438a50:	ldr	w21, [x22]
  438a54:	str	w21, [x20]
  438a58:	ldrb	w8, [x19, #1157]
  438a5c:	cbz	w8, 438aa0 <feof@plt+0x359c0>
  438a60:	ldrb	w8, [x19, #1160]
  438a64:	cbz	w8, 438a74 <feof@plt+0x35994>
  438a68:	ldrb	w8, [x19, #16]
  438a6c:	cbz	w8, 438a74 <feof@plt+0x35994>
  438a70:	ldr	w21, [x19, #48]
  438a74:	str	w21, [x20]
  438a78:	strb	w26, [x19, #192]
  438a7c:	mov	x0, x22
  438a80:	ldp	x20, x19, [sp, #112]
  438a84:	ldp	x22, x21, [sp, #96]
  438a88:	ldp	x24, x23, [sp, #80]
  438a8c:	ldp	x26, x25, [sp, #64]
  438a90:	ldp	x28, x27, [sp, #48]
  438a94:	ldp	x29, x30, [sp, #32]
  438a98:	add	sp, sp, #0x80
  438a9c:	ret
  438aa0:	ldr	x8, [x19, #136]
  438aa4:	cbz	x8, 438a60 <feof@plt+0x35980>
  438aa8:	ldr	w9, [x8, #48]
  438aac:	add	x8, x8, #0x28
  438ab0:	cmp	w9, #0x2
  438ab4:	b.ne	438abc <feof@plt+0x359dc>  // b.any
  438ab8:	ldr	x8, [x8]
  438abc:	ldr	x8, [x8]
  438ac0:	cbz	x8, 438a60 <feof@plt+0x35980>
  438ac4:	ldr	w21, [x25]
  438ac8:	str	w21, [x20]
  438acc:	b	438a60 <feof@plt+0x35980>
  438ad0:	mov	x0, x19
  438ad4:	bl	42ff34 <feof@plt+0x2ce54>
  438ad8:	mov	w8, #0x53                  	// #83
  438adc:	str	x22, [x0, #8]
  438ae0:	strb	w8, [x0, #4]
  438ae4:	strh	wzr, [x0, #6]
  438ae8:	mov	x22, x0
  438aec:	b	438a48 <feof@plt+0x35968>
  438af0:	mov	x0, x19
  438af4:	bl	42ff34 <feof@plt+0x2ce54>
  438af8:	ldrb	w8, [x22, #4]
  438afc:	strb	w8, [x0, #4]
  438b00:	ldrh	w8, [x22, #6]
  438b04:	orr	w8, w8, #0x400
  438b08:	strh	w8, [x0, #6]
  438b0c:	ldur	q0, [x22, #8]
  438b10:	mov	x22, x0
  438b14:	stur	q0, [x0, #8]
  438b18:	b	438a48 <feof@plt+0x35968>
  438b1c:	cbz	w23, 438a48 <feof@plt+0x35968>
  438b20:	mov	x0, x19
  438b24:	mov	w1, wzr
  438b28:	bl	42fc4c <feof@plt+0x2cb6c>
  438b2c:	ldrb	w8, [x0, #4]
  438b30:	cmp	w8, #0x53
  438b34:	b.eq	438a48 <feof@plt+0x35968>  // b.none
  438b38:	ldrb	w8, [x0, #6]
  438b3c:	mov	x24, x0
  438b40:	tbnz	w8, #0, 438a48 <feof@plt+0x35968>
  438b44:	mov	x0, x19
  438b48:	bl	42ff34 <feof@plt+0x2ce54>
  438b4c:	mov	w8, #0x53                  	// #83
  438b50:	str	x24, [x0, #8]
  438b54:	strb	w8, [x0, #4]
  438b58:	strh	wzr, [x0, #6]
  438b5c:	ldr	x8, [x19, #136]
  438b60:	mov	x23, x0
  438b64:	ldr	w9, [x8, #48]
  438b68:	cmp	w9, #0x2
  438b6c:	add	x9, x8, #0x28
  438b70:	b.ne	438b78 <feof@plt+0x35a98>  // b.any
  438b74:	ldr	x9, [x9]
  438b78:	ldr	x0, [x8]
  438b7c:	ldr	x24, [x9]
  438b80:	cbnz	x0, 438ba4 <feof@plt+0x35ac4>
  438b84:	mov	w0, #0x38                  	// #56
  438b88:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  438b8c:	movi	v0.2d, #0x0
  438b90:	str	xzr, [x0, #48]
  438b94:	stp	q0, q0, [x0, #16]
  438b98:	ldr	x8, [x19, #136]
  438b9c:	stp	xzr, x8, [x0]
  438ba0:	str	x0, [x8]
  438ba4:	mov	w8, #0x1                   	// #1
  438ba8:	add	x9, x23, #0x18
  438bac:	str	x0, [x19, #136]
  438bb0:	stp	xzr, x24, [x0, #32]
  438bb4:	str	w8, [x0, #48]
  438bb8:	stp	x23, x9, [x0, #16]
  438bbc:	b	438a48 <feof@plt+0x35968>
  438bc0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438bc4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438bc8:	add	x0, x0, #0x8e6
  438bcc:	add	x2, x2, #0xbcb
  438bd0:	mov	w1, #0xa2f                 	// #2607
  438bd4:	bl	40f560 <feof@plt+0xc480>
  438bd8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438bdc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438be0:	add	x0, x0, #0x8e6
  438be4:	add	x2, x2, #0xc02
  438be8:	mov	w1, #0x380                 	// #896
  438bec:	bl	40f560 <feof@plt+0xc480>
  438bf0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438bf4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438bf8:	add	x0, x0, #0x8e6
  438bfc:	add	x2, x2, #0xbe2
  438c00:	mov	w1, #0xa59                 	// #2649
  438c04:	bl	40f560 <feof@plt+0xc480>
  438c08:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438c0c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438c10:	add	x0, x0, #0x8e6
  438c14:	add	x2, x2, #0xc02
  438c18:	mov	w1, #0x352                 	// #850
  438c1c:	bl	40f560 <feof@plt+0xc480>
  438c20:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438c24:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438c28:	add	x0, x0, #0x8e6
  438c2c:	add	x2, x2, #0xc53
  438c30:	mov	w1, #0x953                 	// #2387
  438c34:	bl	40f560 <feof@plt+0xc480>
  438c38:	b	4385d8 <feof@plt+0x354f8>
  438c3c:	ldr	x8, [x0, #136]
  438c40:	ldr	w9, [x8, #48]
  438c44:	add	x8, x8, #0x28
  438c48:	cmp	w9, #0x2
  438c4c:	b.ne	438c54 <feof@plt+0x35b74>  // b.any
  438c50:	ldr	x8, [x8]
  438c54:	ldr	x8, [x8]
  438c58:	cbz	x8, 438c70 <feof@plt+0x35b90>
  438c5c:	ldr	x8, [x8, #24]
  438c60:	cbz	x8, 438c70 <feof@plt+0x35b90>
  438c64:	ldrb	w8, [x8, #19]
  438c68:	ubfx	w0, w8, #4, #1
  438c6c:	ret
  438c70:	mov	w0, wzr
  438c74:	ret
  438c78:	stp	x29, x30, [sp, #-32]!
  438c7c:	ldr	x8, [x0]
  438c80:	str	x19, [sp, #16]
  438c84:	mov	x19, x0
  438c88:	mov	x29, sp
  438c8c:	ldrb	w9, [x8, #105]
  438c90:	orr	w9, w9, #0x4
  438c94:	strb	w9, [x8, #105]
  438c98:	ldrb	w8, [x0, #27]
  438c9c:	ldrb	w9, [x0, #24]
  438ca0:	ldrb	w10, [x0, #1160]
  438ca4:	add	w8, w8, #0x1
  438ca8:	add	w9, w9, #0x1
  438cac:	strb	w8, [x0, #27]
  438cb0:	strb	w9, [x0, #24]
  438cb4:	cbz	w10, 438cc8 <feof@plt+0x35be8>
  438cb8:	mov	x0, x19
  438cbc:	bl	43d73c <feof@plt+0x3a65c>
  438cc0:	tbnz	w0, #0, 438cb8 <feof@plt+0x35bd8>
  438cc4:	b	438ce0 <feof@plt+0x35c00>
  438cc8:	mov	x0, x19
  438ccc:	mov	x1, xzr
  438cd0:	bl	4385d8 <feof@plt+0x354f8>
  438cd4:	ldrb	w8, [x0, #4]
  438cd8:	cmp	w8, #0x16
  438cdc:	b.ne	438cc8 <feof@plt+0x35be8>  // b.any
  438ce0:	ldrb	w8, [x19, #27]
  438ce4:	ldrb	w9, [x19, #24]
  438ce8:	sub	w8, w8, #0x1
  438cec:	sub	w9, w9, #0x1
  438cf0:	strb	w8, [x19, #27]
  438cf4:	strb	w9, [x19, #24]
  438cf8:	ldr	x19, [sp, #16]
  438cfc:	ldp	x29, x30, [sp], #32
  438d00:	ret
  438d04:	ldr	w8, [x0, #496]
  438d08:	add	w8, w8, w1
  438d0c:	str	w8, [x0, #496]
  438d10:	cbz	w1, 438d58 <feof@plt+0x35c78>
  438d14:	ldr	x8, [x0, #448]
  438d18:	ldr	x9, [x0, #488]
  438d1c:	b	438d24 <feof@plt+0x35c44>
  438d20:	cbz	w1, 438d58 <feof@plt+0x35c78>
  438d24:	sub	x8, x8, #0x18
  438d28:	str	x8, [x0, #448]
  438d2c:	ldr	x10, [x9, #16]
  438d30:	sub	w1, w1, #0x1
  438d34:	cmp	x8, x10
  438d38:	b.ne	438d20 <feof@plt+0x35c40>  // b.any
  438d3c:	ldr	x10, [x9, #8]
  438d40:	cbz	x10, 438d20 <feof@plt+0x35c40>
  438d44:	str	x10, [x0, #488]
  438d48:	ldr	x8, [x10, #24]
  438d4c:	mov	x9, x10
  438d50:	str	x8, [x0, #448]
  438d54:	b	438d20 <feof@plt+0x35c40>
  438d58:	ret
  438d5c:	stp	x29, x30, [sp, #-16]!
  438d60:	ldr	x8, [x0, #136]
  438d64:	mov	x29, sp
  438d68:	ldr	x9, [x8, #8]
  438d6c:	cbz	x9, 438d9c <feof@plt+0x35cbc>
  438d70:	cmp	w1, #0x1
  438d74:	b.ne	438e28 <feof@plt+0x35d48>  // b.any
  438d78:	ldr	w9, [x8, #48]
  438d7c:	cbz	w9, 438e14 <feof@plt+0x35d34>
  438d80:	cmp	w9, #0x2
  438d84:	b.eq	438df0 <feof@plt+0x35d10>  // b.none
  438d88:	cmp	w9, #0x1
  438d8c:	b.ne	438e40 <feof@plt+0x35d60>  // b.any
  438d90:	ldr	x9, [x8, #16]
  438d94:	sub	x9, x9, #0x18
  438d98:	b	438e1c <feof@plt+0x35d3c>
  438d9c:	ldr	w8, [x0, #496]
  438da0:	add	w8, w8, w1
  438da4:	str	w8, [x0, #496]
  438da8:	cbz	w1, 438e20 <feof@plt+0x35d40>
  438dac:	ldr	x8, [x0, #448]
  438db0:	ldr	x9, [x0, #488]
  438db4:	b	438dbc <feof@plt+0x35cdc>
  438db8:	cbz	w1, 438e20 <feof@plt+0x35d40>
  438dbc:	sub	x8, x8, #0x18
  438dc0:	str	x8, [x0, #448]
  438dc4:	ldr	x10, [x9, #16]
  438dc8:	sub	w1, w1, #0x1
  438dcc:	cmp	x8, x10
  438dd0:	b.ne	438db8 <feof@plt+0x35cd8>  // b.any
  438dd4:	ldr	x10, [x9, #8]
  438dd8:	cbz	x10, 438db8 <feof@plt+0x35cd8>
  438ddc:	str	x10, [x0, #488]
  438de0:	ldr	x8, [x10, #24]
  438de4:	mov	x9, x10
  438de8:	str	x8, [x0, #448]
  438dec:	b	438db8 <feof@plt+0x35cd8>
  438df0:	ldr	x9, [x8, #16]
  438df4:	sub	x9, x9, #0x8
  438df8:	str	x9, [x8, #16]
  438dfc:	ldr	x8, [x0, #136]
  438e00:	ldr	x8, [x8, #40]
  438e04:	cbz	x8, 438e58 <feof@plt+0x35d78>
  438e08:	ldr	x9, [x8, #16]
  438e0c:	sub	x9, x9, #0x4
  438e10:	b	438e1c <feof@plt+0x35d3c>
  438e14:	ldr	x9, [x8, #16]
  438e18:	sub	x9, x9, #0x8
  438e1c:	str	x9, [x8, #16]
  438e20:	ldp	x29, x30, [sp], #16
  438e24:	ret
  438e28:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438e2c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438e30:	add	x0, x0, #0x8e6
  438e34:	add	x2, x2, #0xacc
  438e38:	mov	w1, #0xb8f                 	// #2959
  438e3c:	bl	40f560 <feof@plt+0xc480>
  438e40:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438e44:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438e48:	add	x0, x0, #0x8e6
  438e4c:	add	x2, x2, #0xacc
  438e50:	mov	w1, #0xba1                 	// #2977
  438e54:	bl	40f560 <feof@plt+0xc480>
  438e58:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  438e5c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438e60:	add	x0, x0, #0x8e6
  438e64:	add	x2, x2, #0xacc
  438e68:	mov	w1, #0xb9e                 	// #2974
  438e6c:	bl	40f560 <feof@plt+0xc480>
  438e70:	ldrh	w8, [x0, #18]
  438e74:	mov	w9, #0xff3c                	// #65340
  438e78:	str	xzr, [x0, #24]
  438e7c:	and	w8, w8, w9
  438e80:	strh	w8, [x0, #18]
  438e84:	ret
  438e88:	stp	x29, x30, [sp, #-64]!
  438e8c:	stp	x24, x23, [sp, #16]
  438e90:	stp	x22, x21, [sp, #32]
  438e94:	stp	x20, x19, [sp, #48]
  438e98:	ldrh	w8, [x2, #18]
  438e9c:	mov	x19, x2
  438ea0:	mov	x21, x0
  438ea4:	mov	x29, sp
  438ea8:	and	w8, w8, #0x3
  438eac:	cmp	w8, #0x1
  438eb0:	b.ne	438ed4 <feof@plt+0x35df4>  // b.any
  438eb4:	ldr	x3, [x19]
  438eb8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  438ebc:	add	x2, x2, #0xadf
  438ec0:	mov	w1, #0x3                   	// #3
  438ec4:	mov	x0, x21
  438ec8:	bl	4288a0 <feof@plt+0x257c0>
  438ecc:	mov	w0, wzr
  438ed0:	b	438f84 <feof@plt+0x35ea4>
  438ed4:	ldr	w8, [x21, #512]
  438ed8:	add	w23, w1, #0x1
  438edc:	add	w9, w23, w23, lsl #1
  438ee0:	lsl	w24, w9, #3
  438ee4:	mov	x20, x3
  438ee8:	mov	w22, w1
  438eec:	cmp	w24, w8
  438ef0:	b.ls	438f0c <feof@plt+0x35e2c>  // b.plast
  438ef4:	ldr	x0, [x21, #504]
  438ef8:	mov	w1, w24
  438efc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  438f00:	str	x0, [x21, #504]
  438f04:	str	w24, [x21, #512]
  438f08:	b	438f10 <feof@plt+0x35e30>
  438f0c:	ldr	x0, [x21, #504]
  438f10:	mov	w8, #0x18                  	// #24
  438f14:	umaddl	x8, w22, w8, x0
  438f18:	str	x19, [x8]
  438f1c:	ldr	x9, [x19, #24]
  438f20:	mov	x1, x21
  438f24:	mov	w22, w22
  438f28:	lsl	x10, x22, #3
  438f2c:	str	x9, [x8, #8]
  438f30:	ldrh	w9, [x19, #18]
  438f34:	add	x10, x10, #0x8
  438f38:	and	w9, w9, #0x3
  438f3c:	str	w9, [x8, #16]
  438f40:	ldr	x8, [x1, #56]!
  438f44:	ldp	x8, x9, [x8, #16]
  438f48:	sub	x9, x9, x8
  438f4c:	cmp	x9, x10
  438f50:	b.cs	438f68 <feof@plt+0x35e88>  // b.hs, b.nlast
  438f54:	mov	w2, #0x8                   	// #8
  438f58:	mov	x0, x21
  438f5c:	bl	433fb8 <feof@plt+0x30ed8>
  438f60:	ldr	x8, [x21, #56]
  438f64:	ldr	x8, [x8, #16]
  438f68:	str	x20, [x8, x22, lsl #3]
  438f6c:	ldrh	w8, [x19, #18]
  438f70:	mov	w0, #0x1                   	// #1
  438f74:	strh	w23, [x19, #24]
  438f78:	and	w8, w8, #0xfffc
  438f7c:	orr	w8, w8, #0x1
  438f80:	strh	w8, [x19, #18]
  438f84:	ldp	x20, x19, [sp, #48]
  438f88:	ldp	x22, x21, [sp, #32]
  438f8c:	ldp	x24, x23, [sp, #16]
  438f90:	ldp	x29, x30, [sp], #64
  438f94:	ret
  438f98:	cbz	w1, 438fd8 <feof@plt+0x35ef8>
  438f9c:	sub	w8, w1, #0x1
  438fa0:	mov	w9, #0x18                  	// #24
  438fa4:	umull	x8, w8, w9
  438fa8:	ldr	x9, [x0, #504]
  438fac:	subs	w1, w1, #0x1
  438fb0:	add	x9, x9, x8
  438fb4:	ldr	x10, [x9]
  438fb8:	ldrh	w11, [x9, #16]
  438fbc:	sub	x8, x8, #0x18
  438fc0:	ldrh	w12, [x10, #18]
  438fc4:	bfxil	w12, w11, #0, #2
  438fc8:	strh	w12, [x10, #18]
  438fcc:	ldr	x9, [x9, #8]
  438fd0:	str	x9, [x10, #24]
  438fd4:	b.ne	438fa8 <feof@plt+0x35ec8>  // b.any
  438fd8:	ret
  438fdc:	ldr	w8, [x0, #48]
  438fe0:	ldrb	w9, [x2, #19]
  438fe4:	str	xzr, [x2]
  438fe8:	strb	wzr, [x2, #18]
  438fec:	str	w8, [x2, #8]
  438ff0:	and	w8, w9, #0xfffffff7
  438ff4:	strh	wzr, [x2, #16]
  438ff8:	strb	w8, [x2, #19]
  438ffc:	ldrb	w10, [x0, #1151]
  439000:	mov	w8, #0xd7                  	// #215
  439004:	and	w8, w9, w8
  439008:	str	wzr, [x2, #12]
  43900c:	cmp	w10, #0x0
  439010:	cset	w9, eq  // eq = none
  439014:	bfi	w8, w9, #5, #1
  439018:	and	w9, w8, #0xbbbbbbbb
  43901c:	strb	w9, [x2, #19]
  439020:	ldr	x9, [x0]
  439024:	cbz	x9, 439038 <feof@plt+0x35f58>
  439028:	ldrb	w9, [x9, #106]
  43902c:	cmp	w9, #0x0
  439030:	cset	w9, ne  // ne = any
  439034:	lsl	w9, w9, #4
  439038:	mov	w10, #0xa0                  	// #160
  43903c:	and	w8, w8, w10
  439040:	bfxil	w8, w1, #0, #2
  439044:	orr	w8, w8, w9
  439048:	mov	x0, x2
  43904c:	strb	w8, [x2, #19]
  439050:	ret
  439054:	sub	sp, sp, #0xd0
  439058:	stp	x29, x30, [sp, #112]
  43905c:	stp	x28, x27, [sp, #128]
  439060:	stp	x26, x25, [sp, #144]
  439064:	stp	x24, x23, [sp, #160]
  439068:	stp	x22, x21, [sp, #176]
  43906c:	stp	x20, x19, [sp, #192]
  439070:	ldrb	w8, [x0, #1160]
  439074:	mov	x21, x0
  439078:	mov	x22, x1
  43907c:	add	x29, sp, #0x70
  439080:	str	x0, [sp, #40]
  439084:	cbz	w8, 439098 <feof@plt+0x35fb8>
  439088:	mov	x0, x21
  43908c:	bl	43e9d4 <feof@plt+0x3b8f4>
  439090:	mov	x23, x0
  439094:	b	4398a8 <feof@plt+0x367c8>
  439098:	ldr	x19, [x21, #448]
  43909c:	add	x8, sp, #0x30
  4390a0:	mov	x0, x21
  4390a4:	str	x8, [x21, #448]
  4390a8:	bl	4300b4 <feof@plt+0x2cfd4>
  4390ac:	str	x19, [x21, #448]
  4390b0:	ldrb	w8, [x0, #6]
  4390b4:	mov	x23, x0
  4390b8:	str	x22, [sp, #8]
  4390bc:	tbnz	w8, #0, 4393f0 <feof@plt+0x36310>
  4390c0:	ldrb	w8, [x23, #4]
  4390c4:	cmp	w8, #0x4f
  4390c8:	b.eq	4392c8 <feof@plt+0x361e8>  // b.none
  4390cc:	cmp	w8, #0x16
  4390d0:	b.eq	4393f0 <feof@plt+0x36310>  // b.none
  4390d4:	cmp	w8, #0x14
  4390d8:	b.ne	4392d0 <feof@plt+0x361f0>  // b.any
  4390dc:	adrp	x19, 470000 <_obstack_memory_used@@Base+0xe838>
  4390e0:	adrp	x23, 471000 <_obstack_memory_used@@Base+0xf838>
  4390e4:	adrp	x24, 471000 <_obstack_memory_used@@Base+0xf838>
  4390e8:	adrp	x22, 471000 <_obstack_memory_used@@Base+0xf838>
  4390ec:	mov	w8, wzr
  4390f0:	mov	w27, wzr
  4390f4:	mov	w9, wzr
  4390f8:	add	x19, x19, #0x79b
  4390fc:	add	x23, x23, #0x47
  439100:	add	x24, x24, #0x75
  439104:	mov	w25, #0x1                   	// #1
  439108:	add	x22, x22, #0x16
  43910c:	b	43912c <feof@plt+0x3604c>
  439110:	tst	w28, #0xff
  439114:	cset	w11, eq  // eq = none
  439118:	mov	w8, wzr
  43911c:	mov	w9, wzr
  439120:	and	w11, w11, w26
  439124:	mov	w27, w20
  439128:	tbz	w11, #0, 4392fc <feof@plt+0x3621c>
  43912c:	mov	x0, x21
  439130:	mov	w26, w9
  439134:	mov	w20, w27
  439138:	mov	w28, w8
  43913c:	bl	42fda4 <feof@plt+0x2ccc4>
  439140:	ldrb	w10, [x0, #4]
  439144:	mov	x1, x0
  439148:	sub	w8, w10, #0x13
  43914c:	cmp	w8, #0x22
  439150:	b.hi	43917c <feof@plt+0x3609c>  // b.pmore
  439154:	adr	x9, 439110 <feof@plt+0x36030>
  439158:	ldrb	w11, [x19, x8]
  43915c:	add	x9, x9, x11, lsl #2
  439160:	br	x9
  439164:	tst	w28, #0xff
  439168:	b.ne	439b28 <feof@plt+0x36a48>  // b.any
  43916c:	cbz	w20, 439b28 <feof@plt+0x36a48>
  439170:	eor	w8, w26, #0x1
  439174:	tbnz	w8, #0, 439110 <feof@plt+0x36030>
  439178:	b	439b28 <feof@plt+0x36a48>
  43917c:	cmp	w10, #0x4f
  439180:	b.ne	4392fc <feof@plt+0x3621c>  // b.any
  439184:	ldrb	w11, [x21, #1124]
  439188:	mov	w8, w28
  43918c:	mov	w27, w20
  439190:	mov	w9, w26
  439194:	cbz	w11, 43912c <feof@plt+0x3604c>
  439198:	b	4392fc <feof@plt+0x3621c>
  43919c:	tst	w28, #0xff
  4391a0:	b.ne	4392fc <feof@plt+0x3621c>  // b.any
  4391a4:	tbz	w26, #0, 439230 <feof@plt+0x36150>
  4391a8:	ldrb	w10, [x21, #1154]
  4391ac:	mov	w8, #0x1                   	// #1
  4391b0:	mov	w27, w20
  4391b4:	mov	w9, #0x1                   	// #1
  4391b8:	cbz	w10, 43912c <feof@plt+0x3604c>
  4391bc:	ldrb	w10, [x21, #1142]
  4391c0:	mov	w8, #0x1                   	// #1
  4391c4:	mov	w27, w20
  4391c8:	mov	w9, #0x1                   	// #1
  4391cc:	cbz	w10, 43912c <feof@plt+0x3604c>
  4391d0:	ldrb	w8, [x21, #1120]
  4391d4:	mov	w1, #0xa                   	// #10
  4391d8:	mov	x0, x21
  4391dc:	cmp	w8, #0x0
  4391e0:	csel	x2, x24, x23, eq  // eq = none
  4391e4:	bl	428b00 <feof@plt+0x25a20>
  4391e8:	mov	w8, #0x1                   	// #1
  4391ec:	mov	w27, w20
  4391f0:	mov	w9, #0x1                   	// #1
  4391f4:	b	43912c <feof@plt+0x3604c>
  4391f8:	tst	w28, #0xff
  4391fc:	b.ne	4392fc <feof@plt+0x3621c>  // b.any
  439200:	eor	w8, w26, #0x1
  439204:	tbz	w8, #0, 4392fc <feof@plt+0x3621c>
  439208:	ldp	x2, x3, [x1, #8]
  43920c:	mov	x0, x21
  439210:	mov	w1, w20
  439214:	mov	w26, w20
  439218:	bl	438e88 <feof@plt+0x35da8>
  43921c:	mov	w8, wzr
  439220:	add	w27, w20, #0x1
  439224:	mov	w9, #0x1                   	// #1
  439228:	tbnz	w0, #0, 43912c <feof@plt+0x3604c>
  43922c:	b	439b44 <feof@plt+0x36a64>
  439230:	ldr	x2, [x21, #1272]
  439234:	mov	x0, x21
  439238:	mov	w1, w20
  43923c:	mov	x3, x2
  439240:	bl	438e88 <feof@plt+0x35da8>
  439244:	ldrb	w8, [x21, #1152]
  439248:	add	w27, w20, #0x1
  43924c:	strb	w25, [x21, #22]
  439250:	cbz	w8, 43928c <feof@plt+0x361ac>
  439254:	ldrsb	w8, [x21, #1198]
  439258:	mov	w9, wzr
  43925c:	cmp	w8, #0x1
  439260:	mov	w8, #0x1                   	// #1
  439264:	b.lt	43912c <feof@plt+0x3604c>  // b.tstop
  439268:	ldrb	w10, [x21, #1120]
  43926c:	mov	w9, wzr
  439270:	mov	w8, #0x1                   	// #1
  439274:	cbnz	w10, 43912c <feof@plt+0x3604c>
  439278:	mov	x0, x21
  43927c:	mov	w1, wzr
  439280:	mov	x2, x22
  439284:	bl	4288a0 <feof@plt+0x257c0>
  439288:	b	4392bc <feof@plt+0x361dc>
  43928c:	ldrb	w8, [x21, #1154]
  439290:	cbz	w8, 439254 <feof@plt+0x36174>
  439294:	ldrb	w8, [x21, #1142]
  439298:	cbz	w8, 439254 <feof@plt+0x36174>
  43929c:	ldrb	w8, [x21, #1120]
  4392a0:	mov	w1, #0xa                   	// #10
  4392a4:	mov	x0, x21
  4392a8:	cmp	w8, #0x0
  4392ac:	adrp	x8, 470000 <_obstack_memory_used@@Base+0xe838>
  4392b0:	add	x8, x8, #0xfe3
  4392b4:	csel	x2, x22, x8, eq  // eq = none
  4392b8:	bl	428b00 <feof@plt+0x25a20>
  4392bc:	mov	w9, wzr
  4392c0:	mov	w8, #0x1                   	// #1
  4392c4:	b	43912c <feof@plt+0x3604c>
  4392c8:	ldrb	w9, [x21, #1124]
  4392cc:	cbz	w9, 4393f0 <feof@plt+0x36310>
  4392d0:	ldrb	w9, [x21, #1152]
  4392d4:	cbz	w9, 439344 <feof@plt+0x36264>
  4392d8:	ldrb	w8, [x21, #1120]
  4392dc:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  4392e0:	adrp	x10, 470000 <_obstack_memory_used@@Base+0xe838>
  4392e4:	add	x9, x9, #0xe69
  4392e8:	add	x10, x10, #0xe9c
  4392ec:	cmp	w8, #0x0
  4392f0:	csel	x2, x10, x9, eq  // eq = none
  4392f4:	mov	w1, #0x2                   	// #2
  4392f8:	b	4393e8 <feof@plt+0x36308>
  4392fc:	adrp	x8, 470000 <_obstack_memory_used@@Base+0xe838>
  439300:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  439304:	adrp	x11, 470000 <_obstack_memory_used@@Base+0xe838>
  439308:	adrp	x12, 470000 <_obstack_memory_used@@Base+0xe838>
  43930c:	adrp	x13, 470000 <_obstack_memory_used@@Base+0xe838>
  439310:	add	x8, x8, #0xf3b
  439314:	add	x9, x9, #0xf5f
  439318:	add	x11, x11, #0xf7f
  43931c:	add	x12, x12, #0xfaa
  439320:	add	x13, x13, #0xfca
  439324:	tst	w28, #0xff
  439328:	stp	x8, x9, [x29, #-40]
  43932c:	stp	x11, x12, [x29, #-24]
  439330:	stur	x13, [x29, #-8]
  439334:	b.eq	439374 <feof@plt+0x36294>  // b.none
  439338:	mov	x3, xzr
  43933c:	mov	w19, #0x4                   	// #4
  439340:	b	4393a0 <feof@plt+0x362c0>
  439344:	sub	w8, w8, #0x34
  439348:	cmp	w8, #0xf
  43934c:	mov	w1, wzr
  439350:	b.hi	4393e0 <feof@plt+0x36300>  // b.pmore
  439354:	adrp	x9, 470000 <_obstack_memory_used@@Base+0xe838>
  439358:	add	x9, x9, #0x7be
  43935c:	adr	x10, 43936c <feof@plt+0x3628c>
  439360:	ldrb	w11, [x9, x8]
  439364:	add	x10, x10, x11, lsl #2
  439368:	br	x10
  43936c:	mov	w1, #0x2                   	// #2
  439370:	b	4393e0 <feof@plt+0x36300>
  439374:	cmp	w10, #0x16
  439378:	b.ne	439390 <feof@plt+0x362b0>  // b.any
  43937c:	tst	w26, #0x1
  439380:	mov	w8, #0x2                   	// #2
  439384:	mov	x3, xzr
  439388:	cinc	x19, x8, ne  // ne = any
  43938c:	b	4393a0 <feof@plt+0x362c0>
  439390:	mov	x0, x21
  439394:	and	x19, x26, #0x1
  439398:	bl	433540 <feof@plt+0x30460>
  43939c:	mov	x3, x0
  4393a0:	sub	x8, x29, #0x28
  4393a4:	ldr	x2, [x8, x19, lsl #3]
  4393a8:	ldr	x22, [sp, #8]
  4393ac:	mov	w1, #0x3                   	// #3
  4393b0:	mov	x0, x21
  4393b4:	bl	4288a0 <feof@plt+0x257c0>
  4393b8:	b	439860 <feof@plt+0x36780>
  4393bc:	ldr	x8, [x23, #16]
  4393c0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  4393c4:	add	x0, x0, #0xecd
  4393c8:	mov	w2, #0x1d                  	// #29
  4393cc:	ldrb	w1, [x8]
  4393d0:	bl	402ce0 <memchr@plt>
  4393d4:	cmp	x0, #0x0
  4393d8:	cset	w8, eq  // eq = none
  4393dc:	lsl	w1, w8, #1
  4393e0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  4393e4:	add	x2, x2, #0xeea
  4393e8:	mov	x0, x21
  4393ec:	bl	4288a0 <feof@plt+0x257c0>
  4393f0:	mov	w20, wzr
  4393f4:	mov	w28, wzr
  4393f8:	mov	x24, xzr
  4393fc:	mov	x9, x21
  439400:	ldr	x8, [x9, #56]!
  439404:	str	x9, [sp, #24]
  439408:	ldp	x27, x9, [x8, #16]
  43940c:	sub	x8, x9, x27
  439410:	cmp	x8, #0x2f
  439414:	b.hi	439430 <feof@plt+0x36350>  // b.pmore
  439418:	ldr	x1, [sp, #24]
  43941c:	mov	w2, #0x30                  	// #48
  439420:	mov	x0, x21
  439424:	bl	433fb8 <feof@plt+0x30ed8>
  439428:	ldr	x8, [x21, #56]
  43942c:	ldr	x27, [x8, #16]
  439430:	ldr	w8, [x21, #48]
  439434:	ldrb	w9, [x27, #19]
  439438:	str	xzr, [x27]
  43943c:	strb	wzr, [x27, #18]
  439440:	str	w8, [x27, #8]
  439444:	and	w8, w9, #0xfffffff7
  439448:	strh	wzr, [x27, #16]
  43944c:	strb	w8, [x27, #19]
  439450:	ldrb	w10, [x21, #1151]
  439454:	mov	w8, #0xd7                  	// #215
  439458:	and	w8, w9, w8
  43945c:	str	wzr, [x27, #12]
  439460:	cmp	w10, #0x0
  439464:	cset	w9, eq  // eq = none
  439468:	bfi	w8, w9, #5, #1
  43946c:	and	w9, w8, #0xbbbbbbbb
  439470:	strb	w9, [x27, #19]
  439474:	ldr	x9, [x21]
  439478:	cbz	x9, 43948c <feof@plt+0x363ac>
  43947c:	ldrb	w9, [x9, #106]
  439480:	cmp	w9, #0x0
  439484:	cset	w9, ne  // ne = any
  439488:	lsl	w9, w9, #4
  43948c:	mov	w10, #0xa0                  	// #160
  439490:	and	w8, w8, w10
  439494:	orr	w8, w9, w8
  439498:	strb	w8, [x27, #19]
  43949c:	str	w20, [sp, #4]
  4394a0:	cbz	x23, 4394c4 <feof@plt+0x363e4>
  4394a4:	ldr	x9, [x23, #16]
  4394a8:	ldr	q0, [x23]
  4394ac:	add	x1, x27, #0x18
  4394b0:	mov	w10, #0x1                   	// #1
  4394b4:	str	x9, [x27, #40]
  4394b8:	stur	q0, [x27, #24]
  4394bc:	str	w10, [x27, #12]
  4394c0:	b	4394dc <feof@plt+0x363fc>
  4394c4:	orr	w8, w8, w28, lsl #3
  4394c8:	orr	w8, w8, #0x4
  4394cc:	mov	x1, xzr
  4394d0:	strh	w20, [x27, #16]
  4394d4:	str	x24, [x27]
  4394d8:	strb	w8, [x27, #19]
  4394dc:	ldr	x24, [sp, #24]
  4394e0:	adrp	x19, 474000 <_obstack_memory_used@@Base+0x12838>
  4394e4:	mov	w23, wzr
  4394e8:	ubfx	w8, w8, #3, #1
  4394ec:	mov	w9, #0x1                   	// #1
  4394f0:	mov	w22, #0x18                  	// #24
  4394f4:	add	x19, x19, #0xe98
  4394f8:	str	wzr, [sp, #20]
  4394fc:	stur	x21, [x29, #-40]
  439500:	sturb	wzr, [x29, #-30]
  439504:	stur	xzr, [x29, #-28]
  439508:	stur	wzr, [x29, #-20]
  43950c:	sturb	w9, [x29, #-32]
  439510:	sturb	w8, [x29, #-31]
  439514:	b	43953c <feof@plt+0x3645c>
  439518:	ldr	w9, [sp, #20]
  43951c:	str	w8, [x1, #8]
  439520:	add	w9, w9, #0x1
  439524:	str	w9, [sp, #20]
  439528:	mov	w23, #0x1                   	// #1
  43952c:	sub	x0, x29, #0x28
  439530:	bl	43c1cc <feof@plt+0x390ec>
  439534:	mov	x1, xzr
  439538:	cbz	w0, 439858 <feof@plt+0x36778>
  43953c:	cbnz	x1, 43974c <feof@plt+0x3666c>
  439540:	ldr	x8, [x24]
  439544:	ldr	w9, [x27, #12]
  439548:	ldp	x27, x10, [x8, #16]
  43954c:	sub	x8, x10, x27
  439550:	orr	x10, xzr, #0x30
  439554:	madd	x9, x9, x22, x10
  439558:	cmp	x8, x9
  43955c:	b.cs	439578 <feof@plt+0x36498>  // b.hs, b.nlast
  439560:	mov	w2, #0x18                  	// #24
  439564:	mov	x0, x21
  439568:	mov	x1, x24
  43956c:	bl	433fb8 <feof@plt+0x30ed8>
  439570:	ldr	x8, [x21, #56]
  439574:	ldr	x27, [x8, #16]
  439578:	ldr	w8, [x27, #12]
  43957c:	ldr	x20, [x21, #448]
  439580:	mov	x0, x21
  439584:	madd	x8, x8, x22, x27
  439588:	add	x8, x8, #0x18
  43958c:	str	x8, [x21, #448]
  439590:	bl	4300b4 <feof@plt+0x2cfd4>
  439594:	str	x20, [x21, #448]
  439598:	ldrb	w8, [x0, #4]
  43959c:	str	w23, [sp, #36]
  4395a0:	cmp	w8, #0x35
  4395a4:	b.ne	4395d0 <feof@plt+0x364f0>  // b.any
  4395a8:	ldr	x9, [x0, #8]
  4395ac:	ldrh	w10, [x9, #18]
  4395b0:	and	w10, w10, #0x3
  4395b4:	cmp	w10, #0x1
  4395b8:	b.ne	4395d0 <feof@plt+0x364f0>  // b.any
  4395bc:	mov	w8, #0x50                  	// #80
  4395c0:	strb	w8, [x0, #4]
  4395c4:	ldrh	w8, [x9, #24]
  4395c8:	str	w8, [x0, #8]
  4395cc:	b	43972c <feof@plt+0x3664c>
  4395d0:	ldrb	w9, [x21, #1138]
  4395d4:	cbz	w9, 43972c <feof@plt+0x3664c>
  4395d8:	ldrh	w9, [x27, #16]
  4395dc:	cbz	w9, 43972c <feof@plt+0x3664c>
  4395e0:	cmp	w8, #0x3e
  4395e4:	b.eq	4395f0 <feof@plt+0x36510>  // b.none
  4395e8:	cmp	w8, #0x38
  4395ec:	b.ne	43972c <feof@plt+0x3664c>  // b.any
  4395f0:	ldr	w8, [x0, #8]
  4395f4:	cmp	w8, #0x3
  4395f8:	b.cc	43972c <feof@plt+0x3664c>  // b.lo, b.ul, b.last
  4395fc:	ldr	x9, [x0, #16]
  439600:	add	x8, x8, x9
  439604:	sub	x23, x8, #0x1
  439608:	add	x24, x9, #0x1
  43960c:	b	43961c <feof@plt+0x3653c>
  439610:	ldr	x21, [sp, #40]
  439614:	cmp	x24, x23
  439618:	b.cs	43972c <feof@plt+0x3664c>  // b.hs, b.nlast
  43961c:	mov	w11, #0x204                 	// #516
  439620:	cmp	x24, x23
  439624:	b.cc	439684 <feof@plt+0x365a4>  // b.lo, b.ul, b.last
  439628:	cmp	x24, x23
  43962c:	b.cs	4396a4 <feof@plt+0x365c4>  // b.hs, b.nlast
  439630:	mov	x8, x24
  439634:	b	439644 <feof@plt+0x36564>
  439638:	add	x8, x8, #0x1
  43963c:	cmp	x23, x8
  439640:	b.eq	4396b4 <feof@plt+0x365d4>  // b.none
  439644:	ldrb	w9, [x8]
  439648:	ldrh	w10, [x19, x9, lsl #1]
  43964c:	tst	w10, w11
  439650:	b.ne	439638 <feof@plt+0x36558>  // b.any
  439654:	cmp	w9, #0x24
  439658:	b.ne	439664 <feof@plt+0x36584>  // b.any
  43965c:	ldrb	w9, [x21, #1146]
  439660:	cbnz	w9, 439638 <feof@plt+0x36558>
  439664:	mov	x22, x24
  439668:	mov	x24, x8
  43966c:	ldrh	w20, [x27, #16]
  439670:	cbnz	x20, 4396cc <feof@plt+0x365ec>
  439674:	b	439610 <feof@plt+0x36530>
  439678:	add	x24, x24, #0x1
  43967c:	cmp	x23, x24
  439680:	b.eq	4396bc <feof@plt+0x365dc>  // b.none
  439684:	ldrb	w8, [x24]
  439688:	ldrh	w9, [x19, x8, lsl #1]
  43968c:	tbnz	w9, #9, 439628 <feof@plt+0x36548>
  439690:	cmp	w8, #0x24
  439694:	b.ne	439678 <feof@plt+0x36598>  // b.any
  439698:	ldrb	w8, [x21, #1146]
  43969c:	cbz	w8, 439678 <feof@plt+0x36598>
  4396a0:	b	439628 <feof@plt+0x36548>
  4396a4:	mov	x22, x24
  4396a8:	ldrh	w20, [x27, #16]
  4396ac:	cbnz	x20, 4396cc <feof@plt+0x365ec>
  4396b0:	b	439610 <feof@plt+0x36530>
  4396b4:	mov	x22, x24
  4396b8:	b	4396c0 <feof@plt+0x365e0>
  4396bc:	mov	x22, x23
  4396c0:	mov	x24, x23
  4396c4:	ldrh	w20, [x27, #16]
  4396c8:	cbz	x20, 439610 <feof@plt+0x36530>
  4396cc:	ldr	x28, [x27]
  4396d0:	sub	x21, x24, x22
  4396d4:	and	x25, x21, #0xffffffff
  4396d8:	b	4396e8 <feof@plt+0x36608>
  4396dc:	subs	x20, x20, #0x1
  4396e0:	add	x28, x28, #0x8
  4396e4:	b.eq	439610 <feof@plt+0x36530>  // b.none
  4396e8:	ldr	x8, [x28]
  4396ec:	ldr	w9, [x8, #8]
  4396f0:	cmp	w9, w21
  4396f4:	b.ne	4396dc <feof@plt+0x365fc>  // b.any
  4396f8:	ldr	x26, [x8]
  4396fc:	mov	x0, x22
  439700:	mov	x2, x25
  439704:	mov	x1, x26
  439708:	bl	403090 <bcmp@plt>
  43970c:	cbnz	w0, 4396dc <feof@plt+0x365fc>
  439710:	ldr	x0, [sp, #40]
  439714:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  439718:	mov	w1, #0x6                   	// #6
  43971c:	add	x2, x2, #0xa1
  439720:	mov	x3, x26
  439724:	bl	4289d0 <feof@plt+0x258f0>
  439728:	b	439610 <feof@plt+0x36530>
  43972c:	ldr	w8, [x27, #12]
  439730:	ldr	x24, [sp, #24]
  439734:	ldr	w23, [sp, #36]
  439738:	mov	w22, #0x18                  	// #24
  43973c:	add	w9, w8, #0x1
  439740:	madd	x8, x8, x22, x27
  439744:	add	x1, x8, #0x18
  439748:	str	w9, [x27, #12]
  43974c:	ldr	w8, [x27, #12]
  439750:	cmp	w8, #0x2
  439754:	b.cc	4397dc <feof@plt+0x366fc>  // b.lo, b.ul, b.last
  439758:	ldurb	w9, [x1, #-20]
  43975c:	cmp	w9, #0x25
  439760:	b.ne	4397dc <feof@plt+0x366fc>  // b.any
  439764:	ldrb	w9, [x27, #19]
  439768:	tbz	w9, #2, 4397dc <feof@plt+0x366fc>
  43976c:	ldrb	w9, [x1, #4]
  439770:	cmp	w9, #0x50
  439774:	b.ne	4397d0 <feof@plt+0x366f0>  // b.any
  439778:	ldrh	w9, [x1, #6]
  43977c:	sub	x8, x1, #0x18
  439780:	tbz	w9, #0, 43978c <feof@plt+0x366ac>
  439784:	orr	w9, w9, #0x200
  439788:	strh	w9, [x1, #6]
  43978c:	ldurh	w10, [x1, #-18]
  439790:	tbz	w10, #1, 43979c <feof@plt+0x366bc>
  439794:	orr	w9, w9, #0x100
  439798:	strh	w9, [x1, #6]
  43979c:	and	w9, w9, #0xfffffffe
  4397a0:	and	w10, w10, #0x1
  4397a4:	orr	w9, w10, w9
  4397a8:	orr	w9, w9, #0x4
  4397ac:	strh	w9, [x1, #6]
  4397b0:	ldr	x9, [x1, #16]
  4397b4:	ldr	q0, [x1]
  4397b8:	str	x9, [x8, #16]
  4397bc:	str	q0, [x8]
  4397c0:	ldr	w8, [x27, #12]
  4397c4:	sub	w8, w8, #0x1
  4397c8:	str	w8, [x27, #12]
  4397cc:	b	4397dc <feof@plt+0x366fc>
  4397d0:	ldr	w9, [x21, #1116]
  4397d4:	cmp	w9, #0x15
  4397d8:	b.ne	439ad8 <feof@plt+0x369f8>  // b.any
  4397dc:	ldrb	w9, [x1, #4]
  4397e0:	cmp	w9, #0x26
  4397e4:	b.eq	4397f8 <feof@plt+0x36718>  // b.none
  4397e8:	cmp	w9, #0x16
  4397ec:	b.eq	439840 <feof@plt+0x36760>  // b.none
  4397f0:	mov	w23, wzr
  4397f4:	b	43952c <feof@plt+0x3644c>
  4397f8:	subs	w8, w8, #0x1
  4397fc:	b.eq	439844 <feof@plt+0x36764>  // b.none
  439800:	tbnz	w23, #0, 439518 <feof@plt+0x36438>
  439804:	str	w8, [x27, #12]
  439808:	ldurh	w8, [x1, #-18]
  43980c:	ldrh	w10, [x1, #6]
  439810:	orr	w9, w8, #0x8
  439814:	tst	w10, #0x3
  439818:	sturh	w9, [x1, #-18]
  43981c:	b.eq	439528 <feof@plt+0x36448>  // b.none
  439820:	mov	w12, #0x108                 	// #264
  439824:	orr	w8, w8, w12
  439828:	tst	w10, #0x2
  43982c:	and	w11, w10, #0x1
  439830:	csel	w8, w9, w8, eq  // eq = none
  439834:	orr	w8, w8, w11, lsl #9
  439838:	sturh	w8, [x1, #-18]
  43983c:	b	439528 <feof@plt+0x36448>
  439840:	tbz	w23, #0, 4399b4 <feof@plt+0x368d4>
  439844:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  439848:	add	x2, x2, #0xe33
  43984c:	mov	w1, #0x3                   	// #3
  439850:	mov	x0, x21
  439854:	bl	4288a0 <feof@plt+0x257c0>
  439858:	ldr	x22, [sp, #8]
  43985c:	ldr	w20, [sp, #4]
  439860:	mov	x23, xzr
  439864:	strb	wzr, [x21, #22]
  439868:	cbz	w20, 4398a8 <feof@plt+0x367c8>
  43986c:	sub	w8, w20, #0x1
  439870:	mov	w9, #0x18                  	// #24
  439874:	umull	x8, w8, w9
  439878:	ldr	x9, [x21, #504]
  43987c:	sub	w20, w20, #0x1
  439880:	add	x9, x9, x8
  439884:	ldr	x10, [x9]
  439888:	ldrh	w11, [x9, #16]
  43988c:	sub	x8, x8, #0x18
  439890:	ldrh	w12, [x10, #18]
  439894:	bfxil	w12, w11, #0, #2
  439898:	strh	w12, [x10, #18]
  43989c:	ldr	x9, [x9, #8]
  4398a0:	str	x9, [x10, #24]
  4398a4:	cbnz	w20, 439878 <feof@plt+0x36798>
  4398a8:	cbz	x23, 43992c <feof@plt+0x3684c>
  4398ac:	ldrh	w19, [x22, #18]
  4398b0:	tbz	w19, #1, 439c00 <feof@plt+0x36b20>
  4398b4:	and	w8, w19, #0x3
  4398b8:	cmp	w8, #0x2
  4398bc:	b.ne	439908 <feof@plt+0x36828>  // b.any
  4398c0:	ldrb	w8, [x21, #1151]
  4398c4:	cbz	w8, 439908 <feof@plt+0x36828>
  4398c8:	ldr	x19, [x22, #24]
  4398cc:	ldrb	w8, [x19, #19]
  4398d0:	tbnz	w8, #5, 439908 <feof@plt+0x36828>
  4398d4:	ldr	x0, [x21, #40]
  4398d8:	ldr	w1, [x19, #8]
  4398dc:	bl	4345c8 <feof@plt+0x314e8>
  4398e0:	ldr	w8, [x0, #20]
  4398e4:	cbnz	w8, 439908 <feof@plt+0x36828>
  4398e8:	ldr	w2, [x19, #8]
  4398ec:	ldr	x5, [x22]
  4398f0:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  4398f4:	add	x4, x4, #0x848
  4398f8:	mov	w1, #0xe                   	// #14
  4398fc:	mov	x0, x21
  439900:	mov	w3, wzr
  439904:	bl	428e5c <feof@plt+0x25d7c>
  439908:	ldrh	w8, [x22, #18]
  43990c:	tbnz	w8, #5, 439b84 <feof@plt+0x36aa4>
  439910:	mvn	w9, w8
  439914:	tst	w9, #0x3
  439918:	b.ne	439934 <feof@plt+0x36854>  // b.any
  43991c:	ldr	x8, [sp, #40]
  439920:	ldrb	w8, [x8, #1143]
  439924:	cbnz	w8, 439b84 <feof@plt+0x36aa4>
  439928:	b	439bec <feof@plt+0x36b0c>
  43992c:	mov	w0, wzr
  439930:	b	439c38 <feof@plt+0x36b58>
  439934:	tbnz	w8, #8, 439bec <feof@plt+0x36b0c>
  439938:	ldr	x21, [x22, #24]
  43993c:	ldrb	w8, [x21, #18]
  439940:	cbz	w8, 43995c <feof@plt+0x3687c>
  439944:	ldr	x0, [sp, #40]
  439948:	sub	w2, w8, #0x1
  43994c:	mov	x1, x21
  439950:	ldr	x9, [x0, #1048]
  439954:	blr	x9
  439958:	strb	wzr, [x21, #18]
  43995c:	ldrh	w9, [x21, #16]
  439960:	ldrh	w8, [x23, #16]
  439964:	cmp	w9, w8
  439968:	b.ne	439b84 <feof@plt+0x36aa4>  // b.any
  43996c:	ldrb	w8, [x21, #19]
  439970:	ldrb	w10, [x23, #19]
  439974:	eor	w10, w10, w8
  439978:	tst	w10, #0xc
  43997c:	b.ne	439b84 <feof@plt+0x36aa4>  // b.any
  439980:	sub	w9, w9, #0x1
  439984:	cmn	w9, #0x1
  439988:	b.eq	439b08 <feof@plt+0x36a28>  // b.none
  43998c:	ldr	x10, [x21]
  439990:	ldr	x11, [x23]
  439994:	mov	w12, w9
  439998:	lsl	x12, x12, #3
  43999c:	ldr	x10, [x10, x12]
  4399a0:	ldr	x11, [x11, x12]
  4399a4:	sub	w9, w9, #0x1
  4399a8:	cmp	x10, x11
  4399ac:	b.eq	439984 <feof@plt+0x368a4>  // b.none
  4399b0:	b	439b84 <feof@plt+0x36aa4>
  4399b4:	ldurb	w8, [x29, #-31]
  4399b8:	cbz	w8, 4399dc <feof@plt+0x368fc>
  4399bc:	ldur	w8, [x29, #-28]
  4399c0:	cbz	w8, 4399e4 <feof@plt+0x36904>
  4399c4:	ldur	x0, [x29, #-40]
  4399c8:	ldur	w2, [x29, #-20]
  4399cc:	adrp	x3, 471000 <_obstack_memory_used@@Base+0xf838>
  4399d0:	add	x3, x3, #0xdb
  4399d4:	mov	w1, #0x3                   	// #3
  4399d8:	bl	429150 <feof@plt+0x26070>
  4399dc:	ldur	w8, [x29, #-28]
  4399e0:	cbnz	w8, 439858 <feof@plt+0x36778>
  4399e4:	ldr	w8, [x27, #12]
  4399e8:	mov	w9, #0x18                  	// #24
  4399ec:	mov	x0, x21
  4399f0:	sub	w8, w8, #0x1
  4399f4:	str	w8, [x27, #12]
  4399f8:	umull	x8, w8, w9
  4399fc:	add	x1, x8, #0x18
  439a00:	bl	4341ac <feof@plt+0x310cc>
  439a04:	ldr	w8, [x0, #12]
  439a08:	mov	x23, x0
  439a0c:	cbz	w8, 439a1c <feof@plt+0x3693c>
  439a10:	ldrh	w9, [x23, #30]
  439a14:	and	w9, w9, #0xfffe
  439a18:	strh	w9, [x23, #30]
  439a1c:	ldr	x22, [sp, #8]
  439a20:	ldr	w20, [sp, #4]
  439a24:	ldr	w12, [sp, #20]
  439a28:	cbz	w12, 439864 <feof@plt+0x36784>
  439a2c:	ldr	x9, [x24]
  439a30:	mov	x11, x24
  439a34:	ldp	x1, x10, [x9, #16]
  439a38:	mov	w9, #0x18                  	// #24
  439a3c:	umull	x24, w12, w9
  439a40:	sub	x9, x10, x1
  439a44:	cmp	x9, x24
  439a48:	b.cs	439a68 <feof@plt+0x36988>  // b.hs, b.nlast
  439a4c:	mov	x0, x21
  439a50:	mov	x1, x11
  439a54:	mov	x2, x24
  439a58:	bl	433fb8 <feof@plt+0x30ed8>
  439a5c:	ldr	x8, [x21, #56]
  439a60:	ldr	x1, [x8, #16]
  439a64:	ldr	w8, [x23, #12]
  439a68:	add	x9, x23, #0x18
  439a6c:	cbz	w8, 439ae4 <feof@plt+0x36a04>
  439a70:	mov	w11, wzr
  439a74:	mov	w10, wzr
  439a78:	mov	w13, wzr
  439a7c:	mov	w12, #0x18                  	// #24
  439a80:	b	439aa8 <feof@plt+0x369c8>
  439a84:	ldr	x15, [x14, #16]
  439a88:	ldr	q0, [x14]
  439a8c:	umaddl	x14, w10, w12, x9
  439a90:	add	w10, w10, #0x1
  439a94:	str	x15, [x14, #16]
  439a98:	str	q0, [x14]
  439a9c:	add	w11, w11, #0x1
  439aa0:	cmp	w11, w8
  439aa4:	b.eq	439ae8 <feof@plt+0x36a08>  // b.none
  439aa8:	umaddl	x14, w11, w12, x9
  439aac:	ldrb	w15, [x14, #4]
  439ab0:	cmp	w15, #0x26
  439ab4:	b.ne	439a84 <feof@plt+0x369a4>  // b.any
  439ab8:	ldr	x8, [x14, #16]
  439abc:	ldr	q0, [x14]
  439ac0:	umaddl	x14, w13, w12, x1
  439ac4:	add	w13, w13, #0x1
  439ac8:	str	x8, [x14, #16]
  439acc:	str	q0, [x14]
  439ad0:	ldr	w8, [x23, #12]
  439ad4:	b	439a9c <feof@plt+0x369bc>
  439ad8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  439adc:	add	x2, x2, #0xf12
  439ae0:	b	43984c <feof@plt+0x3676c>
  439ae4:	mov	w10, wzr
  439ae8:	mov	w8, #0x18                  	// #24
  439aec:	umaddl	x0, w10, w8, x9
  439af0:	mov	x2, x24
  439af4:	bl	4029c0 <memcpy@plt>
  439af8:	ldrb	w8, [x23, #19]
  439afc:	orr	w8, w8, #0x40
  439b00:	strb	w8, [x23, #19]
  439b04:	b	439864 <feof@plt+0x36784>
  439b08:	and	w8, w8, #0x3
  439b0c:	cmp	w8, #0x2
  439b10:	b.ne	439b4c <feof@plt+0x36a6c>  // b.any
  439b14:	mov	x0, x21
  439b18:	mov	x1, x23
  439b1c:	bl	43ed68 <feof@plt+0x3bc88>
  439b20:	tbnz	w0, #0, 439b84 <feof@plt+0x36aa4>
  439b24:	b	439bec <feof@plt+0x36b0c>
  439b28:	mov	w8, w20
  439b2c:	lsl	x1, x8, #3
  439b30:	mov	x0, x21
  439b34:	bl	4341ac <feof@plt+0x310cc>
  439b38:	mov	x24, x0
  439b3c:	mov	x23, xzr
  439b40:	b	4393fc <feof@plt+0x3631c>
  439b44:	ldr	x22, [sp, #8]
  439b48:	b	439860 <feof@plt+0x36780>
  439b4c:	ldr	w19, [x21, #12]
  439b50:	ldr	w8, [x23, #12]
  439b54:	cmp	w19, w8
  439b58:	b.ne	439b84 <feof@plt+0x36aa4>  // b.any
  439b5c:	mov	w20, #0x18                  	// #24
  439b60:	cbz	x19, 439bec <feof@plt+0x36b0c>
  439b64:	sub	w8, w19, #0x1
  439b68:	umaddl	x9, w8, w20, x21
  439b6c:	umaddl	x8, w8, w20, x23
  439b70:	add	x0, x9, #0x18
  439b74:	add	x1, x8, #0x18
  439b78:	bl	433868 <feof@plt+0x30788>
  439b7c:	sub	x19, x19, #0x1
  439b80:	cbnz	w0, 439b60 <feof@plt+0x36a80>
  439b84:	ldr	x0, [sp, #40]
  439b88:	ldrh	w8, [x22, #18]
  439b8c:	mov	w9, #0x23                  	// #35
  439b90:	ldr	x5, [x22]
  439b94:	ldr	w2, [x0, #48]
  439b98:	and	w8, w8, w9
  439b9c:	cmp	w8, #0x3
  439ba0:	mov	w8, #0xb                   	// #11
  439ba4:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  439ba8:	csel	w1, w8, wzr, eq  // eq = none
  439bac:	add	x4, x4, #0xafe
  439bb0:	mov	w3, wzr
  439bb4:	bl	428f58 <feof@plt+0x25e78>
  439bb8:	tbz	w0, #0, 439bec <feof@plt+0x36b0c>
  439bbc:	ldrh	w8, [x22, #18]
  439bc0:	and	w8, w8, #0x3
  439bc4:	cmp	w8, #0x2
  439bc8:	b.ne	439bec <feof@plt+0x36b0c>  // b.any
  439bcc:	ldr	x8, [x22, #24]
  439bd0:	ldr	x0, [sp, #40]
  439bd4:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  439bd8:	add	x4, x4, #0xb0d
  439bdc:	ldr	w2, [x8, #8]
  439be0:	mov	w1, #0x5                   	// #5
  439be4:	mov	w3, wzr
  439be8:	bl	428d60 <feof@plt+0x25c80>
  439bec:	ldrh	w8, [x22, #18]
  439bf0:	mov	w9, #0xffffff3c            	// #-196
  439bf4:	str	xzr, [x22, #24]
  439bf8:	and	w19, w8, w9
  439bfc:	strh	w19, [x22, #18]
  439c00:	ldr	x20, [x22]
  439c04:	and	w8, w19, #0xfffffffc
  439c08:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  439c0c:	orr	w21, w8, #0x2
  439c10:	add	x1, x1, #0xb3d
  439c14:	mov	w2, #0x7                   	// #7
  439c18:	mov	x0, x20
  439c1c:	strh	w21, [x22, #18]
  439c20:	str	x23, [x22, #24]
  439c24:	bl	402d40 <strncmp@plt>
  439c28:	cbz	w0, 439c58 <feof@plt+0x36b78>
  439c2c:	and	w8, w21, #0xfffffeff
  439c30:	mov	w0, #0x1                   	// #1
  439c34:	strh	w8, [x22, #18]
  439c38:	ldp	x20, x19, [sp, #192]
  439c3c:	ldp	x22, x21, [sp, #176]
  439c40:	ldp	x24, x23, [sp, #160]
  439c44:	ldp	x26, x25, [sp, #144]
  439c48:	ldp	x28, x27, [sp, #128]
  439c4c:	ldp	x29, x30, [sp, #112]
  439c50:	add	sp, sp, #0xd0
  439c54:	ret
  439c58:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  439c5c:	add	x1, x1, #0xb45
  439c60:	mov	x0, x20
  439c64:	bl	402ed0 <strcmp@plt>
  439c68:	cbz	w0, 439c2c <feof@plt+0x36b4c>
  439c6c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  439c70:	add	x1, x1, #0xb5a
  439c74:	mov	x0, x20
  439c78:	bl	402ed0 <strcmp@plt>
  439c7c:	cbz	w0, 439c2c <feof@plt+0x36b4c>
  439c80:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  439c84:	add	x1, x1, #0xb6e
  439c88:	mov	x0, x20
  439c8c:	bl	402ed0 <strcmp@plt>
  439c90:	cbz	w0, 439c2c <feof@plt+0x36b4c>
  439c94:	mov	w9, #0xfffffc02            	// #-1022
  439c98:	and	w8, w19, #0x3fc
  439c9c:	and	w9, w21, w9
  439ca0:	orr	w8, w8, w9
  439ca4:	orr	w21, w8, #0x20
  439ca8:	strh	w21, [x22, #18]
  439cac:	b	439c2c <feof@plt+0x36b4c>
  439cb0:	ldr	x8, [x1, #24]
  439cb4:	add	w9, w2, #0x1
  439cb8:	strb	w9, [x8, #18]
  439cbc:	ret
  439cc0:	stp	x29, x30, [sp, #-48]!
  439cc4:	stp	x20, x19, [sp, #32]
  439cc8:	ldrh	w8, [x1, #18]
  439ccc:	mov	x19, x1
  439cd0:	mov	x20, x0
  439cd4:	str	x21, [sp, #16]
  439cd8:	orr	w9, w8, #0x80
  439cdc:	ands	w8, w8, #0x3
  439ce0:	mov	x29, sp
  439ce4:	strh	w9, [x1, #18]
  439ce8:	b.eq	439d44 <feof@plt+0x36c64>  // b.none
  439cec:	cmp	w8, #0x3
  439cf0:	b.eq	439d20 <feof@plt+0x36c40>  // b.none
  439cf4:	cmp	w8, #0x2
  439cf8:	b.ne	439d5c <feof@plt+0x36c7c>  // b.any
  439cfc:	ldr	x21, [x19, #24]
  439d00:	ldrb	w8, [x21, #18]
  439d04:	cbz	w8, 439d20 <feof@plt+0x36c40>
  439d08:	ldr	x9, [x20, #1048]
  439d0c:	sub	w2, w8, #0x1
  439d10:	mov	x0, x20
  439d14:	mov	x1, x21
  439d18:	blr	x9
  439d1c:	strb	wzr, [x21, #18]
  439d20:	ldr	x3, [x20, #1008]
  439d24:	cbz	x3, 439d4c <feof@plt+0x36c6c>
  439d28:	ldr	w1, [x20, #48]
  439d2c:	mov	x0, x20
  439d30:	mov	x2, x19
  439d34:	ldp	x20, x19, [sp, #32]
  439d38:	ldr	x21, [sp, #16]
  439d3c:	ldp	x29, x30, [sp], #48
  439d40:	br	x3
  439d44:	ldr	x3, [x20, #1016]
  439d48:	cbnz	x3, 439d28 <feof@plt+0x36c48>
  439d4c:	ldp	x20, x19, [sp, #32]
  439d50:	ldr	x21, [sp, #16]
  439d54:	ldp	x29, x30, [sp], #48
  439d58:	ret
  439d5c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  439d60:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  439d64:	add	x0, x0, #0x8e6
  439d68:	add	x2, x2, #0xb85
  439d6c:	mov	w1, #0xe0b                 	// #3595
  439d70:	bl	40f560 <feof@plt+0xc480>
  439d74:	stp	x29, x30, [sp, #-80]!
  439d78:	stp	x26, x25, [sp, #16]
  439d7c:	stp	x24, x23, [sp, #32]
  439d80:	stp	x22, x21, [sp, #48]
  439d84:	stp	x20, x19, [sp, #64]
  439d88:	ldr	x20, [x1, #24]
  439d8c:	ldr	w9, [x1, #8]
  439d90:	mov	x21, x1
  439d94:	mov	x19, x0
  439d98:	ldrb	w8, [x20, #19]
  439d9c:	add	w9, w9, w9, lsl #2
  439da0:	lsl	w10, w9, #1
  439da4:	mov	x29, sp
  439da8:	tbnz	w8, #2, 439db4 <feof@plt+0x36cd4>
  439dac:	add	w23, w10, #0x2
  439db0:	b	439e34 <feof@plt+0x36d54>
  439db4:	ldrh	w9, [x20, #16]
  439db8:	add	w23, w10, #0x6
  439dbc:	cbz	x9, 439e34 <feof@plt+0x36d54>
  439dc0:	ldr	x10, [x20]
  439dc4:	cmp	w9, #0x1
  439dc8:	b.ne	439dd4 <feof@plt+0x36cf4>  // b.any
  439dcc:	mov	x11, xzr
  439dd0:	b	439e18 <feof@plt+0x36d38>
  439dd4:	and	x11, x9, #0xfffe
  439dd8:	mov	w12, wzr
  439ddc:	add	x13, x10, #0x8
  439de0:	mov	x14, x11
  439de4:	ldp	x15, x16, [x13, #-8]
  439de8:	subs	x14, x14, #0x2
  439dec:	add	x13, x13, #0x10
  439df0:	ldr	w15, [x15, #8]
  439df4:	ldr	w16, [x16, #8]
  439df8:	add	w15, w23, w15
  439dfc:	add	w12, w12, w16
  439e00:	add	w23, w15, #0x1
  439e04:	add	w12, w12, #0x1
  439e08:	b.ne	439de4 <feof@plt+0x36d04>  // b.any
  439e0c:	cmp	x11, x9
  439e10:	add	w23, w12, w23
  439e14:	b.eq	439e34 <feof@plt+0x36d54>  // b.none
  439e18:	ldr	x12, [x10, x11, lsl #3]
  439e1c:	add	x11, x11, #0x1
  439e20:	cmp	x11, x9
  439e24:	ldr	w12, [x12, #8]
  439e28:	add	w12, w23, w12
  439e2c:	add	w23, w12, #0x1
  439e30:	b.cc	439e18 <feof@plt+0x36d38>  // b.lo, b.ul, b.last
  439e34:	ldrb	w9, [x19, #1160]
  439e38:	cbz	w9, 439f50 <feof@plt+0x36e70>
  439e3c:	mov	x0, x20
  439e40:	bl	43e8bc <feof@plt+0x3b7dc>
  439e44:	add	w23, w23, w0
  439e48:	ldr	w8, [x19, #512]
  439e4c:	ldr	x0, [x19, #504]
  439e50:	cmp	w23, w8
  439e54:	b.ls	439e68 <feof@plt+0x36d88>  // b.plast
  439e58:	mov	w1, w23
  439e5c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  439e60:	str	x0, [x19, #504]
  439e64:	str	w23, [x19, #512]
  439e68:	mov	x1, x21
  439e6c:	bl	433260 <feof@plt+0x30180>
  439e70:	ldrb	w8, [x20, #19]
  439e74:	mov	x21, x0
  439e78:	tbz	w8, #2, 439f10 <feof@plt+0x36e30>
  439e7c:	mov	w8, #0x28                  	// #40
  439e80:	strb	w8, [x21], #1
  439e84:	ldrh	w8, [x20, #16]
  439e88:	cbz	w8, 439f08 <feof@plt+0x36e28>
  439e8c:	mov	x22, xzr
  439e90:	mov	w23, #0x2c                  	// #44
  439e94:	mov	w24, #0x2e2e                	// #11822
  439e98:	mov	w25, #0x2e                  	// #46
  439e9c:	b	439eb0 <feof@plt+0x36dd0>
  439ea0:	strb	w23, [x21], #1
  439ea4:	ldrh	w8, [x20, #16]
  439ea8:	cmp	x22, x8
  439eac:	b.cs	439f08 <feof@plt+0x36e28>  // b.hs, b.nlast
  439eb0:	ldr	x9, [x20]
  439eb4:	ldr	x26, [x9, x22, lsl #3]
  439eb8:	ldr	x9, [x19, #1272]
  439ebc:	cmp	x26, x9
  439ec0:	b.eq	439ee0 <feof@plt+0x36e00>  // b.none
  439ec4:	ldr	x1, [x26]
  439ec8:	ldr	w2, [x26, #8]
  439ecc:	mov	x0, x21
  439ed0:	bl	4029c0 <memcpy@plt>
  439ed4:	ldr	w9, [x26, #8]
  439ed8:	ldrh	w8, [x20, #16]
  439edc:	add	x21, x21, x9
  439ee0:	add	x22, x22, #0x1
  439ee4:	cmp	x22, w8, uxth
  439ee8:	b.cc	439ea0 <feof@plt+0x36dc0>  // b.lo, b.ul, b.last
  439eec:	ldrb	w8, [x20, #19]
  439ef0:	tbz	w8, #3, 439ea4 <feof@plt+0x36dc4>
  439ef4:	add	x8, x21, #0x3
  439ef8:	strh	w24, [x21]
  439efc:	strb	w25, [x21, #2]
  439f00:	mov	x21, x8
  439f04:	b	439ea4 <feof@plt+0x36dc4>
  439f08:	mov	w8, #0x29                  	// #41
  439f0c:	strb	w8, [x21], #1
  439f10:	mov	w8, #0x20                  	// #32
  439f14:	strb	w8, [x21], #1
  439f18:	ldrb	w8, [x19, #1160]
  439f1c:	cbz	w8, 439fb8 <feof@plt+0x36ed8>
  439f20:	mov	x0, x20
  439f24:	mov	x1, x21
  439f28:	bl	43e920 <feof@plt+0x3b840>
  439f2c:	mov	x21, x0
  439f30:	strb	wzr, [x21]
  439f34:	ldr	x0, [x19, #504]
  439f38:	ldp	x20, x19, [sp, #64]
  439f3c:	ldp	x22, x21, [sp, #48]
  439f40:	ldp	x24, x23, [sp, #32]
  439f44:	ldp	x26, x25, [sp, #16]
  439f48:	ldp	x29, x30, [sp], #80
  439f4c:	ret
  439f50:	ldr	w9, [x20, #12]
  439f54:	tbnz	w8, #6, 43a070 <feof@plt+0x36f90>
  439f58:	cbz	w9, 439e48 <feof@plt+0x36d68>
  439f5c:	mov	w24, w9
  439f60:	add	x22, x20, #0x18
  439f64:	b	439fa0 <feof@plt+0x36ec0>
  439f68:	mov	x0, x22
  439f6c:	bl	433218 <feof@plt+0x30138>
  439f70:	ldrh	w8, [x22, #6]
  439f74:	add	w9, w0, w23
  439f78:	add	x22, x22, #0x18
  439f7c:	ubfx	w10, w8, #2, #1
  439f80:	add	w9, w9, w10
  439f84:	tst	w8, #0x8
  439f88:	add	w10, w9, #0x3
  439f8c:	and	w8, w8, #0x1
  439f90:	csel	w9, w9, w10, eq  // eq = none
  439f94:	subs	x24, x24, #0x1
  439f98:	add	w23, w9, w8
  439f9c:	b.eq	439e48 <feof@plt+0x36d68>  // b.none
  439fa0:	ldrb	w8, [x22, #4]
  439fa4:	cmp	w8, #0x50
  439fa8:	b.ne	439f68 <feof@plt+0x36e88>  // b.any
  439fac:	ldr	x8, [x22, #16]
  439fb0:	ldr	w0, [x8, #8]
  439fb4:	b	439f70 <feof@plt+0x36e90>
  439fb8:	ldr	w8, [x20, #12]
  439fbc:	cbz	w8, 439f30 <feof@plt+0x36e50>
  439fc0:	ldrb	w9, [x20, #19]
  439fc4:	tbnz	w9, #6, 43a09c <feof@plt+0x36fbc>
  439fc8:	mov	w22, w8
  439fcc:	add	x20, x20, #0x18
  439fd0:	mov	w23, #0x2320                	// #8992
  439fd4:	mov	w24, #0x23                  	// #35
  439fd8:	mov	w25, #0x20                  	// #32
  439fdc:	b	439fec <feof@plt+0x36f0c>
  439fe0:	subs	x22, x22, #0x1
  439fe4:	add	x20, x20, #0x18
  439fe8:	b.eq	439f30 <feof@plt+0x36e50>  // b.none
  439fec:	ldrh	w8, [x20, #6]
  439ff0:	tbz	w8, #0, 439ffc <feof@plt+0x36f1c>
  439ff4:	strb	w25, [x21], #1
  439ff8:	ldrh	w8, [x20, #6]
  439ffc:	tbz	w8, #2, 43a004 <feof@plt+0x36f24>
  43a000:	strb	w24, [x21], #1
  43a004:	ldrb	w8, [x20, #4]
  43a008:	cmp	w8, #0x50
  43a00c:	b.ne	43a03c <feof@plt+0x36f5c>  // b.any
  43a010:	ldr	x8, [x20, #16]
  43a014:	mov	x0, x21
  43a018:	ldr	x1, [x8]
  43a01c:	ldr	w2, [x8, #8]
  43a020:	bl	4029c0 <memcpy@plt>
  43a024:	ldr	x8, [x20, #16]
  43a028:	ldr	w8, [x8, #8]
  43a02c:	add	x21, x21, x8
  43a030:	ldrb	w8, [x20, #6]
  43a034:	tbz	w8, #3, 439fe0 <feof@plt+0x36f00>
  43a038:	b	43a05c <feof@plt+0x36f7c>
  43a03c:	mov	w3, #0x1                   	// #1
  43a040:	mov	x0, x19
  43a044:	mov	x1, x20
  43a048:	mov	x2, x21
  43a04c:	bl	4333ec <feof@plt+0x3030c>
  43a050:	mov	x21, x0
  43a054:	ldrb	w8, [x20, #6]
  43a058:	tbz	w8, #3, 439fe0 <feof@plt+0x36f00>
  43a05c:	add	x8, x21, #0x3
  43a060:	strh	w23, [x21]
  43a064:	strb	w24, [x21, #2]
  43a068:	mov	x21, x8
  43a06c:	b	439fe0 <feof@plt+0x36f00>
  43a070:	mov	w8, #0x18                  	// #24
  43a074:	cbz	x9, 439e48 <feof@plt+0x36d68>
  43a078:	sub	w10, w9, #0x1
  43a07c:	umaddl	x10, w10, w8, x20
  43a080:	ldrb	w10, [x10, #28]
  43a084:	sub	x9, x9, #0x1
  43a088:	cmp	w10, #0x26
  43a08c:	b.eq	43a074 <feof@plt+0x36f94>  // b.none
  43a090:	add	w9, w9, #0x1
  43a094:	cbnz	w9, 439f5c <feof@plt+0x36e7c>
  43a098:	b	439e48 <feof@plt+0x36d68>
  43a09c:	mov	w9, #0x18                  	// #24
  43a0a0:	cbz	x8, 439f30 <feof@plt+0x36e50>
  43a0a4:	sub	w10, w8, #0x1
  43a0a8:	umaddl	x10, w10, w9, x20
  43a0ac:	ldrb	w10, [x10, #28]
  43a0b0:	sub	x8, x8, #0x1
  43a0b4:	cmp	w10, #0x26
  43a0b8:	b.eq	43a0a0 <feof@plt+0x36fc0>  // b.none
  43a0bc:	cmn	w8, #0x1
  43a0c0:	b.eq	439f30 <feof@plt+0x36e50>  // b.none
  43a0c4:	add	x8, x8, #0x1
  43a0c8:	b	439fc8 <feof@plt+0x36ee8>
  43a0cc:	sub	sp, sp, #0x140
  43a0d0:	mov	w8, #0x1                   	// #1
  43a0d4:	stp	x29, x30, [sp, #224]
  43a0d8:	stp	x28, x27, [sp, #240]
  43a0dc:	stp	x26, x25, [sp, #256]
  43a0e0:	stp	x24, x23, [sp, #272]
  43a0e4:	stp	x22, x21, [sp, #288]
  43a0e8:	stp	x20, x19, [sp, #304]
  43a0ec:	strb	wzr, [x0, #440]
  43a0f0:	strb	wzr, [x0, #19]
  43a0f4:	strb	w8, [x0, #192]
  43a0f8:	ldrh	w8, [x1, #18]
  43a0fc:	mov	w26, w3
  43a100:	mov	x27, x1
  43a104:	mov	x19, x0
  43a108:	and	w9, w8, #0x3
  43a10c:	cmp	w9, #0x2
  43a110:	add	x29, sp, #0xe0
  43a114:	b.ne	43a188 <feof@plt+0x370a8>  // b.any
  43a118:	ldr	x25, [x27, #24]
  43a11c:	stur	xzr, [x29, #-48]
  43a120:	str	x2, [sp, #72]
  43a124:	ldrb	w9, [x25, #19]
  43a128:	tbz	w9, #2, 43b2a8 <feof@plt+0x381c8>
  43a12c:	stur	wzr, [x29, #-52]
  43a130:	ldrb	w8, [x19, #24]
  43a134:	ldr	w9, [x19, #500]
  43a138:	mov	x0, xzr
  43a13c:	mov	w10, #0x1                   	// #1
  43a140:	add	w8, w8, #0x1
  43a144:	add	w9, w9, #0x1
  43a148:	strb	w8, [x19, #24]
  43a14c:	str	w9, [x19, #500]
  43a150:	strb	w10, [x19, #25]
  43a154:	mov	x20, x0
  43a158:	mov	x0, x19
  43a15c:	mov	x1, xzr
  43a160:	bl	4385d8 <feof@plt+0x354f8>
  43a164:	ldrb	w8, [x0, #4]
  43a168:	cmp	w8, #0x53
  43a16c:	b.ne	43a1e8 <feof@plt+0x37108>  // b.any
  43a170:	cbz	x20, 43a154 <feof@plt+0x37074>
  43a174:	ldrb	w8, [x20, #6]
  43a178:	tbnz	w8, #0, 43a158 <feof@plt+0x37078>
  43a17c:	ldr	x8, [x0, #8]
  43a180:	cbnz	x8, 43a158 <feof@plt+0x37078>
  43a184:	b	43a154 <feof@plt+0x37074>
  43a188:	ldr	x8, [x19, #184]
  43a18c:	strb	wzr, [x19, #192]
  43a190:	ldrh	w9, [x8, #18]
  43a194:	and	w9, w9, #0x3
  43a198:	cmp	w9, #0x2
  43a19c:	b.ne	43a1b8 <feof@plt+0x370d8>  // b.any
  43a1a0:	ldr	x8, [x8, #24]
  43a1a4:	ldrb	w8, [x8, #19]
  43a1a8:	tbz	w8, #2, 43a1b8 <feof@plt+0x370d8>
  43a1ac:	ldrb	w8, [x19, #1157]
  43a1b0:	mov	w3, w26
  43a1b4:	cbnz	w8, 43a1bc <feof@plt+0x370dc>
  43a1b8:	ldr	w3, [x19, #176]
  43a1bc:	mov	x0, x19
  43a1c0:	mov	x1, x27
  43a1c4:	mov	w2, w26
  43a1c8:	ldp	x20, x19, [sp, #304]
  43a1cc:	ldp	x22, x21, [sp, #288]
  43a1d0:	ldp	x24, x23, [sp, #272]
  43a1d4:	ldp	x26, x25, [sp, #256]
  43a1d8:	ldp	x28, x27, [sp, #240]
  43a1dc:	ldp	x29, x30, [sp, #224]
  43a1e0:	add	sp, sp, #0x140
  43a1e4:	b	43b8b0 <feof@plt+0x387d0>
  43a1e8:	cmp	w8, #0x14
  43a1ec:	b.eq	43a280 <feof@plt+0x371a0>  // b.none
  43a1f0:	cmp	w8, #0x16
  43a1f4:	b.ne	43a204 <feof@plt+0x37124>  // b.any
  43a1f8:	add	x8, x19, #0x2b0
  43a1fc:	cmp	x0, x8
  43a200:	b.ne	43a278 <feof@plt+0x37198>  // b.any
  43a204:	mov	w1, #0x1                   	// #1
  43a208:	mov	x0, x19
  43a20c:	bl	438d5c <feof@plt+0x35c7c>
  43a210:	cbz	x20, 43a278 <feof@plt+0x37198>
  43a214:	ldr	x8, [x19, #136]
  43a218:	ldr	w9, [x8, #48]
  43a21c:	cmp	w9, #0x2
  43a220:	add	x9, x8, #0x28
  43a224:	b.ne	43a22c <feof@plt+0x3714c>  // b.any
  43a228:	ldr	x9, [x9]
  43a22c:	ldr	x0, [x8]
  43a230:	ldr	x21, [x9]
  43a234:	cbnz	x0, 43a258 <feof@plt+0x37178>
  43a238:	mov	w0, #0x38                  	// #56
  43a23c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43a240:	movi	v0.2d, #0x0
  43a244:	str	xzr, [x0, #48]
  43a248:	stp	q0, q0, [x0, #16]
  43a24c:	ldr	x8, [x19, #136]
  43a250:	stp	xzr, x8, [x0]
  43a254:	str	x0, [x8]
  43a258:	mov	x10, xzr
  43a25c:	mov	w8, #0x1                   	// #1
  43a260:	add	x9, x20, #0x18
  43a264:	str	x0, [x19, #136]
  43a268:	stp	xzr, x21, [x0, #32]
  43a26c:	str	w8, [x0, #48]
  43a270:	stp	x20, x9, [x0, #16]
  43a274:	b	43a2a0 <feof@plt+0x371c0>
  43a278:	mov	x10, xzr
  43a27c:	b	43a2a0 <feof@plt+0x371c0>
  43a280:	mov	w8, #0x2                   	// #2
  43a284:	sub	x2, x29, #0x30
  43a288:	sub	x3, x29, #0x34
  43a28c:	mov	x0, x19
  43a290:	mov	x1, x27
  43a294:	strb	w8, [x19, #25]
  43a298:	bl	43bb2c <feof@plt+0x38a4c>
  43a29c:	mov	x10, x0
  43a2a0:	ldr	w8, [x19, #500]
  43a2a4:	ldrb	w9, [x19, #24]
  43a2a8:	strb	wzr, [x19, #25]
  43a2ac:	sub	w8, w8, #0x1
  43a2b0:	sub	w9, w9, #0x1
  43a2b4:	str	w8, [x19, #500]
  43a2b8:	strb	w9, [x19, #24]
  43a2bc:	cbz	x10, 43a6a0 <feof@plt+0x375c0>
  43a2c0:	ldrh	w8, [x25, #16]
  43a2c4:	str	x10, [sp, #40]
  43a2c8:	cbz	w8, 43b244 <feof@plt+0x38164>
  43a2cc:	ldr	x8, [sp, #40]
  43a2d0:	str	x25, [sp, #48]
  43a2d4:	str	x27, [sp, #64]
  43a2d8:	str	w26, [sp, #28]
  43a2dc:	ldr	x28, [x8, #8]
  43a2e0:	stur	xzr, [x29, #-16]
  43a2e4:	ldrb	w8, [x25, #19]
  43a2e8:	ldr	w24, [x25, #12]
  43a2ec:	str	x28, [sp, #112]
  43a2f0:	tbnz	w8, #6, 43b678 <feof@plt+0x38598>
  43a2f4:	cmp	w24, #0x0
  43a2f8:	cset	w8, eq  // eq = none
  43a2fc:	cbz	w24, 43a6ec <feof@plt+0x3760c>
  43a300:	str	w8, [sp, #100]
  43a304:	mov	x21, xzr
  43a308:	mov	w8, w24
  43a30c:	add	x11, x19, #0x40
  43a310:	mov	w9, #0x18                  	// #24
  43a314:	mov	w23, #0x30                  	// #48
  43a318:	mov	w20, #0x5c                  	// #92
  43a31c:	mov	w10, w24
  43a320:	stur	x8, [x29, #-96]
  43a324:	stur	x11, [x29, #-80]
  43a328:	b	43a354 <feof@plt+0x37274>
  43a32c:	madd	x8, x22, x23, x28
  43a330:	ldr	w8, [x8, #24]
  43a334:	add	w8, w24, w8
  43a338:	add	w24, w8, #0x1
  43a33c:	ldur	w10, [x29, #-88]
  43a340:	mov	w9, #0x18                  	// #24
  43a344:	ldur	x8, [x29, #-96]
  43a348:	add	x21, x21, #0x1
  43a34c:	cmp	x21, x8
  43a350:	b.eq	43a6e4 <feof@plt+0x37604>  // b.none
  43a354:	madd	x8, x21, x9, x25
  43a358:	ldrb	w8, [x8, #28]
  43a35c:	cmp	w8, #0x50
  43a360:	b.ne	43a344 <feof@plt+0x37264>  // b.any
  43a364:	madd	x8, x21, x9, x25
  43a368:	ldr	w9, [x8, #32]
  43a36c:	ldrh	w8, [x8, #30]
  43a370:	mov	w12, #0x18                  	// #24
  43a374:	add	w10, w10, #0x2
  43a378:	sub	w22, w9, #0x1
  43a37c:	umaddl	x9, w22, w23, x28
  43a380:	stur	w10, [x29, #-88]
  43a384:	stur	x9, [x29, #-64]
  43a388:	tbnz	w8, #2, 43a3c8 <feof@plt+0x372e8>
  43a38c:	tbnz	w8, #3, 43a32c <feof@plt+0x3724c>
  43a390:	cbz	x21, 43a3a0 <feof@plt+0x372c0>
  43a394:	madd	x8, x21, x12, x25
  43a398:	ldrb	w8, [x8, #6]
  43a39c:	tbnz	w8, #3, 43a32c <feof@plt+0x3724c>
  43a3a0:	madd	x8, x22, x23, x28
  43a3a4:	ldr	x8, [x8, #8]
  43a3a8:	cbnz	x8, 43a3bc <feof@plt+0x372dc>
  43a3ac:	ldur	x1, [x29, #-64]
  43a3b0:	mov	x0, x19
  43a3b4:	bl	43bfc8 <feof@plt+0x38ee8>
  43a3b8:	ldur	x11, [x29, #-80]
  43a3bc:	madd	x8, x22, x23, x28
  43a3c0:	ldr	w8, [x8, #28]
  43a3c4:	b	43a334 <feof@plt+0x37254>
  43a3c8:	madd	x9, x22, x23, x28
  43a3cc:	ldr	x8, [x9, #16]!
  43a3d0:	add	w24, w24, #0x2
  43a3d4:	cbnz	x8, 43a33c <feof@plt+0x3725c>
  43a3d8:	ldr	x8, [x11]
  43a3dc:	stur	x9, [x29, #-104]
  43a3e0:	ldp	x27, x9, [x8, #16]
  43a3e4:	sub	x8, x9, x27
  43a3e8:	cmp	x8, #0x2
  43a3ec:	b.hi	43a408 <feof@plt+0x37328>  // b.pmore
  43a3f0:	ldur	x1, [x29, #-80]
  43a3f4:	mov	w2, #0x3                   	// #3
  43a3f8:	mov	x0, x19
  43a3fc:	bl	433fb8 <feof@plt+0x30ed8>
  43a400:	ldr	x8, [x19, #64]
  43a404:	ldr	x27, [x8, #16]
  43a408:	mov	w8, #0x22                  	// #34
  43a40c:	strb	w8, [x27], #1
  43a410:	madd	x9, x22, x23, x28
  43a414:	ldr	w8, [x9, #24]!
  43a418:	stur	x9, [x29, #-72]
  43a41c:	cbz	w8, 43a640 <feof@plt+0x37560>
  43a420:	str	x24, [sp, #104]
  43a424:	mov	x24, xzr
  43a428:	mov	w26, wzr
  43a42c:	mov	x25, xzr
  43a430:	b	43a45c <feof@plt+0x3737c>
  43a434:	ldr	x8, [x28, #16]
  43a438:	mov	x25, xzr
  43a43c:	ldrb	w8, [x8]
  43a440:	cmp	w8, #0x5c
  43a444:	csinc	w26, wzr, w26, ne  // ne = any
  43a448:	ldur	x8, [x29, #-72]
  43a44c:	add	x24, x24, #0x1
  43a450:	ldr	w8, [x8]
  43a454:	cmp	x24, x8
  43a458:	b.cs	43a614 <feof@plt+0x37534>  // b.hs, b.nlast
  43a45c:	ldur	x8, [x29, #-64]
  43a460:	ldr	x8, [x8]
  43a464:	ldr	x28, [x8, x24, lsl #3]
  43a468:	ldrb	w0, [x28, #4]
  43a46c:	sub	w8, w0, #0x38
  43a470:	cmp	w8, #0x1b
  43a474:	b.hi	43a5dc <feof@plt+0x374fc>  // b.pmore
  43a478:	mov	w9, #0x1                   	// #1
  43a47c:	lsl	w9, w9, w8
  43a480:	mov	w10, #0x7df                 	// #2015
  43a484:	tst	w9, w10
  43a488:	b.eq	43a5b8 <feof@plt+0x374d8>  // b.none
  43a48c:	mov	x0, x28
  43a490:	bl	433218 <feof@plt+0x30138>
  43a494:	mov	w8, w0
  43a498:	ldur	x1, [x29, #-80]
  43a49c:	lsl	x8, x8, #2
  43a4a0:	mov	w22, #0x1                   	// #1
  43a4a4:	ldr	x9, [x1]
  43a4a8:	add	x23, x8, #0x3
  43a4ac:	ldr	x10, [x9, #24]
  43a4b0:	sub	x8, x10, x27
  43a4b4:	cmp	x8, x23
  43a4b8:	b.cs	43a4e0 <feof@plt+0x37400>  // b.hs, b.nlast
  43a4bc:	ldr	x8, [x9, #16]
  43a4c0:	mov	x0, x19
  43a4c4:	mov	x2, x23
  43a4c8:	sub	x27, x27, x8
  43a4cc:	bl	433fb8 <feof@plt+0x30ed8>
  43a4d0:	ldr	x8, [x19, #64]
  43a4d4:	ldr	x8, [x8, #16]
  43a4d8:	add	x27, x8, x27
  43a4dc:	b	43a4e4 <feof@plt+0x37404>
  43a4e0:	ldr	x8, [x9, #16]
  43a4e4:	sub	x9, x27, #0x1
  43a4e8:	cmp	x9, x8
  43a4ec:	b.eq	43a508 <feof@plt+0x37428>  // b.none
  43a4f0:	cmp	x25, #0x0
  43a4f4:	csel	x8, x28, x25, eq  // eq = none
  43a4f8:	ldrb	w8, [x8, #6]
  43a4fc:	tbz	w8, #0, 43a508 <feof@plt+0x37428>
  43a500:	mov	w8, #0x20                  	// #32
  43a504:	strb	w8, [x27], #1
  43a508:	cbz	w22, 43a578 <feof@plt+0x37498>
  43a50c:	mov	x0, x19
  43a510:	mov	x1, x23
  43a514:	bl	433e38 <feof@plt+0x30d58>
  43a518:	ldr	x23, [x0, #16]
  43a51c:	mov	x25, x0
  43a520:	mov	w3, #0x1                   	// #1
  43a524:	mov	x0, x19
  43a528:	mov	x1, x28
  43a52c:	mov	x2, x23
  43a530:	bl	4333ec <feof@plt+0x3030c>
  43a534:	cmp	w0, w23
  43a538:	b.eq	43a594 <feof@plt+0x374b4>  // b.none
  43a53c:	sub	w8, w23, w0
  43a540:	b	43a554 <feof@plt+0x37474>
  43a544:	strb	w20, [x27], #1
  43a548:	adds	w8, w8, #0x1
  43a54c:	strb	w9, [x27], #1
  43a550:	b.cs	43a594 <feof@plt+0x374b4>  // b.hs, b.nlast
  43a554:	ldrb	w9, [x23], #1
  43a558:	cmp	w9, #0x5c
  43a55c:	b.eq	43a544 <feof@plt+0x37464>  // b.none
  43a560:	cmp	w9, #0x22
  43a564:	b.eq	43a544 <feof@plt+0x37464>  // b.none
  43a568:	cmp	w9, #0xa
  43a56c:	b.ne	43a548 <feof@plt+0x37468>  // b.any
  43a570:	mov	w9, #0x6e                  	// #110
  43a574:	b	43a544 <feof@plt+0x37464>
  43a578:	mov	w3, #0x1                   	// #1
  43a57c:	mov	x0, x19
  43a580:	mov	x1, x28
  43a584:	mov	x2, x27
  43a588:	bl	4333ec <feof@plt+0x3030c>
  43a58c:	mov	x27, x0
  43a590:	b	43a5a0 <feof@plt+0x374c0>
  43a594:	mov	x0, x19
  43a598:	mov	x1, x25
  43a59c:	bl	433e18 <feof@plt+0x30d38>
  43a5a0:	ldrb	w8, [x28, #4]
  43a5a4:	cmp	w8, #0x3d
  43a5a8:	b.eq	43a434 <feof@plt+0x37354>  // b.none
  43a5ac:	mov	x25, xzr
  43a5b0:	mov	w26, wzr
  43a5b4:	b	43a448 <feof@plt+0x37368>
  43a5b8:	cmp	w8, #0x1b
  43a5bc:	b.ne	43a5dc <feof@plt+0x374fc>  // b.any
  43a5c0:	cbz	x25, 43a60c <feof@plt+0x3752c>
  43a5c4:	ldrb	w8, [x25, #6]
  43a5c8:	tbnz	w8, #0, 43a448 <feof@plt+0x37368>
  43a5cc:	ldr	x8, [x28, #8]
  43a5d0:	cbnz	x8, 43a448 <feof@plt+0x37368>
  43a5d4:	mov	x25, xzr
  43a5d8:	b	43a448 <feof@plt+0x37368>
  43a5dc:	bl	429a28 <feof@plt+0x26948>
  43a5e0:	tbnz	w0, #0, 43a48c <feof@plt+0x373ac>
  43a5e4:	ldrb	w0, [x28, #4]
  43a5e8:	bl	429a38 <feof@plt+0x26958>
  43a5ec:	mov	w23, w0
  43a5f0:	mov	x0, x28
  43a5f4:	bl	433218 <feof@plt+0x30138>
  43a5f8:	mov	w8, w0
  43a5fc:	tbnz	w23, #0, 43a498 <feof@plt+0x373b8>
  43a600:	ldur	x1, [x29, #-80]
  43a604:	mov	w22, wzr
  43a608:	b	43a4a4 <feof@plt+0x373c4>
  43a60c:	ldr	x25, [x28, #8]
  43a610:	b	43a448 <feof@plt+0x37368>
  43a614:	ldr	x25, [sp, #48]
  43a618:	ldr	x24, [sp, #104]
  43a61c:	tbz	w26, #0, 43a638 <feof@plt+0x37558>
  43a620:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43a624:	mov	x0, x19
  43a628:	mov	w1, wzr
  43a62c:	add	x2, x2, #0xd7c
  43a630:	bl	4288a0 <feof@plt+0x257c0>
  43a634:	sub	x27, x27, #0x1
  43a638:	ldr	w26, [sp, #28]
  43a63c:	ldr	x28, [sp, #112]
  43a640:	mov	x8, x27
  43a644:	mov	w9, #0x22                  	// #34
  43a648:	strb	w9, [x8], #2
  43a64c:	ldr	x9, [x19, #64]
  43a650:	mov	x0, x19
  43a654:	ldr	x22, [x9, #16]
  43a658:	str	x8, [x9, #16]
  43a65c:	sub	x8, x27, x22
  43a660:	add	x23, x8, #0x1
  43a664:	bl	42ff34 <feof@plt+0x2ce54>
  43a668:	mov	w8, #0x3e                  	// #62
  43a66c:	strb	wzr, [x22, w23, uxtw]
  43a670:	strb	w8, [x0, #4]
  43a674:	ldur	x8, [x29, #-104]
  43a678:	ldr	x27, [sp, #64]
  43a67c:	ldur	w10, [x29, #-88]
  43a680:	ldur	x11, [x29, #-80]
  43a684:	str	w23, [x0, #8]
  43a688:	str	x22, [x0, #16]
  43a68c:	strh	wzr, [x0, #6]
  43a690:	str	x0, [x8]
  43a694:	mov	w9, #0x18                  	// #24
  43a698:	mov	w23, #0x30                  	// #48
  43a69c:	b	43a344 <feof@plt+0x37264>
  43a6a0:	ldrb	w8, [x19, #1138]
  43a6a4:	cbz	w8, 43a6cc <feof@plt+0x375ec>
  43a6a8:	ldr	x8, [x27, #24]
  43a6ac:	ldrb	w8, [x8, #19]
  43a6b0:	tbnz	w8, #4, 43a6cc <feof@plt+0x375ec>
  43a6b4:	ldr	x3, [x27]
  43a6b8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43a6bc:	add	x2, x2, #0xc69
  43a6c0:	mov	w1, #0x6                   	// #6
  43a6c4:	mov	x0, x19
  43a6c8:	bl	4289d0 <feof@plt+0x258f0>
  43a6cc:	ldur	x1, [x29, #-48]
  43a6d0:	cbz	x1, 43a6dc <feof@plt+0x375fc>
  43a6d4:	mov	x0, x19
  43a6d8:	bl	433e18 <feof@plt+0x30d38>
  43a6dc:	mov	w0, wzr
  43a6e0:	b	43b62c <feof@plt+0x3854c>
  43a6e4:	stur	w10, [x29, #-88]
  43a6e8:	b	43a6fc <feof@plt+0x3761c>
  43a6ec:	mov	w8, #0x1                   	// #1
  43a6f0:	stur	xzr, [x29, #-96]
  43a6f4:	stur	wzr, [x29, #-88]
  43a6f8:	str	w8, [sp, #100]
  43a6fc:	ldrb	w22, [x19, #1157]
  43a700:	mov	w20, w24
  43a704:	lsl	x23, x20, #3
  43a708:	str	w22, [sp, #104]
  43a70c:	cbz	w22, 43a764 <feof@plt+0x37684>
  43a710:	lsl	x0, x20, #4
  43a714:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43a718:	stur	x0, [x29, #-16]
  43a71c:	mov	x0, x19
  43a720:	mov	x1, x23
  43a724:	bl	433e38 <feof@plt+0x30d58>
  43a728:	mov	x8, x0
  43a72c:	ldr	x9, [x8, #8]!
  43a730:	mov	x21, x0
  43a734:	ldr	x0, [x19, #40]
  43a738:	cmp	w22, #0x1
  43a73c:	str	x9, [sp, #16]
  43a740:	stur	x8, [x29, #-80]
  43a744:	ldur	w8, [x29, #-88]
  43a748:	mov	x1, x27
  43a74c:	mov	w2, w26
  43a750:	csel	w3, w8, w20, eq  // eq = none
  43a754:	bl	434f28 <feof@plt+0x31e48>
  43a758:	stur	x0, [x29, #-104]
  43a75c:	mov	x0, x21
  43a760:	b	43a784 <feof@plt+0x376a4>
  43a764:	mov	x0, x19
  43a768:	mov	x1, x23
  43a76c:	bl	433e38 <feof@plt+0x30d58>
  43a770:	mov	x8, x0
  43a774:	ldr	x9, [x8, #8]!
  43a778:	str	x9, [sp, #16]
  43a77c:	stur	x8, [x29, #-80]
  43a780:	stur	xzr, [x29, #-104]
  43a784:	ldrh	w8, [x25, #16]
  43a788:	mov	w10, #0x30                  	// #48
  43a78c:	ldrb	w9, [x25, #19]
  43a790:	stur	x0, [x29, #-88]
  43a794:	madd	x8, x8, x10, x28
  43a798:	ldur	w8, [x8, #-24]
  43a79c:	stur	xzr, [x29, #-28]
  43a7a0:	ubfx	w9, w9, #3, #1
  43a7a4:	stur	x19, [x29, #-40]
  43a7a8:	cmp	w8, #0x0
  43a7ac:	cset	w8, ne  // ne = any
  43a7b0:	sturb	w8, [x29, #-32]
  43a7b4:	ldr	w8, [sp, #100]
  43a7b8:	sturb	w9, [x29, #-31]
  43a7bc:	sturb	wzr, [x29, #-30]
  43a7c0:	stur	wzr, [x29, #-20]
  43a7c4:	tbz	w8, #0, 43a864 <feof@plt+0x37784>
  43a7c8:	ldr	w8, [sp, #104]
  43a7cc:	cbz	w8, 43b1b8 <feof@plt+0x380d8>
  43a7d0:	mov	x20, x0
  43a7d4:	ldur	x22, [x29, #-16]
  43a7d8:	ldr	x8, [x20, #16]!
  43a7dc:	ldur	x9, [x29, #-80]
  43a7e0:	ldr	x10, [x19, #136]
  43a7e4:	mov	x23, x27
  43a7e8:	ldr	x9, [x9]
  43a7ec:	cbnz	x27, 43a808 <feof@plt+0x37728>
  43a7f0:	ldr	w11, [x10, #48]
  43a7f4:	cmp	w11, #0x2
  43a7f8:	add	x11, x10, #0x28
  43a7fc:	b.ne	43a804 <feof@plt+0x37724>  // b.any
  43a800:	ldr	x11, [x11]
  43a804:	ldr	x23, [x11]
  43a808:	ldr	x25, [x10]
  43a80c:	sub	x21, x8, x9
  43a810:	cbnz	x25, 43a83c <feof@plt+0x3775c>
  43a814:	mov	w0, #0x38                  	// #56
  43a818:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43a81c:	mov	x25, x0
  43a820:	movi	v0.2d, #0x0
  43a824:	ldur	x0, [x29, #-88]
  43a828:	str	xzr, [x25, #48]
  43a82c:	stp	q0, q0, [x25, #16]
  43a830:	ldr	x8, [x19, #136]
  43a834:	stp	xzr, x8, [x25]
  43a838:	str	x25, [x8]
  43a83c:	str	x25, [x19, #136]
  43a840:	mov	w8, #0x2                   	// #2
  43a844:	str	x0, [x25, #32]
  43a848:	mov	w0, #0x18                  	// #24
  43a84c:	str	w8, [x25, #48]
  43a850:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43a854:	stp	x23, x22, [x0]
  43a858:	str	x22, [x0, #16]
  43a85c:	str	x0, [x25, #40]
  43a860:	b	43b20c <feof@plt+0x3812c>
  43a864:	mov	x22, xzr
  43a868:	add	x1, x25, #0x18
  43a86c:	add	x21, x19, #0x298
  43a870:	mov	w20, #0x18                  	// #24
  43a874:	stur	wzr, [x29, #-64]
  43a878:	stp	x21, xzr, [sp, #80]
  43a87c:	b	43a89c <feof@plt+0x377bc>
  43a880:	ldur	x0, [x29, #-88]
  43a884:	ldur	x9, [x29, #-96]
  43a888:	add	x22, x22, #0x1
  43a88c:	madd	x8, x22, x20, x25
  43a890:	add	x1, x8, #0x18
  43a894:	cmp	x22, x9
  43a898:	b.eq	43a7c8 <feof@plt+0x376e8>  // b.none
  43a89c:	sub	x0, x29, #0x28
  43a8a0:	stur	x1, [x29, #-72]
  43a8a4:	bl	43c1cc <feof@plt+0x390ec>
  43a8a8:	cmp	w0, #0x2
  43a8ac:	b.eq	43aa3c <feof@plt+0x3795c>  // b.none
  43a8b0:	cmp	w0, #0x4
  43a8b4:	b.eq	43a980 <feof@plt+0x378a0>  // b.none
  43a8b8:	cmp	w0, #0x3
  43a8bc:	b.ne	43a880 <feof@plt+0x377a0>  // b.any
  43a8c0:	ldur	x0, [x29, #-88]
  43a8c4:	cbz	x22, 43a960 <feof@plt+0x37880>
  43a8c8:	ldur	x8, [x29, #-72]
  43a8cc:	ldurb	w8, [x8, #-18]
  43a8d0:	tbnz	w8, #3, 43a960 <feof@plt+0x37880>
  43a8d4:	mov	x0, x19
  43a8d8:	bl	42ff34 <feof@plt+0x2ce54>
  43a8dc:	mov	x23, x0
  43a8e0:	mov	w8, #0x53                  	// #83
  43a8e4:	strb	w8, [x23, #4]
  43a8e8:	ldur	x8, [x29, #-72]
  43a8ec:	strh	wzr, [x23, #6]
  43a8f0:	ldur	x0, [x29, #-88]
  43a8f4:	str	x8, [x23, #8]
  43a8f8:	ldrb	w8, [x19, #1157]
  43a8fc:	ldp	x20, x9, [x0, #16]
  43a900:	cmp	w8, #0x1
  43a904:	ldur	w8, [x29, #-64]
  43a908:	csel	w1, w8, w22, hi  // hi = pmore
  43a90c:	cmp	x20, x9
  43a910:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43a914:	ldur	x21, [x29, #-16]
  43a918:	cbz	x21, 43a950 <feof@plt+0x37870>
  43a91c:	ldur	x8, [x29, #-80]
  43a920:	ldr	w2, [x23]
  43a924:	ldr	x8, [x8]
  43a928:	sub	x8, x20, x8
  43a92c:	ubfx	x24, x8, #3, #32
  43a930:	ldur	x8, [x29, #-104]
  43a934:	cbz	x8, 43a94c <feof@plt+0x3786c>
  43a938:	mov	x0, x8
  43a93c:	mov	w3, w2
  43a940:	bl	435060 <feof@plt+0x31f80>
  43a944:	mov	w2, w0
  43a948:	ldur	x0, [x29, #-88]
  43a94c:	str	w2, [x21, x24, lsl #2]
  43a950:	ldr	x21, [sp, #80]
  43a954:	str	x23, [x20], #8
  43a958:	str	x20, [x0, #16]
  43a95c:	mov	w20, #0x18                  	// #24
  43a960:	ldur	x9, [x29, #-80]
  43a964:	ldr	x8, [x0, #16]
  43a968:	ldr	x9, [x9]
  43a96c:	sub	x10, x8, #0x8
  43a970:	cmp	x8, x9
  43a974:	csel	x8, xzr, x10, eq  // eq = none
  43a978:	str	x8, [sp, #88]
  43a97c:	b	43a884 <feof@plt+0x377a4>
  43a980:	ldp	x0, x9, [x29, #-88]
  43a984:	ldr	x13, [sp, #88]
  43a988:	mov	w12, #0x18                  	// #24
  43a98c:	ldr	x8, [x0, #16]
  43a990:	ldr	x9, [x9]
  43a994:	sub	x10, x8, #0x8
  43a998:	cmp	x8, x9
  43a99c:	csel	x20, xzr, x10, eq  // eq = none
  43a9a0:	cmp	x20, #0x0
  43a9a4:	cset	w10, ne  // ne = any
  43a9a8:	cmp	x20, x13
  43a9ac:	b.eq	43a9f4 <feof@plt+0x37914>  // b.none
  43a9b0:	cbz	x20, 43a9f4 <feof@plt+0x37914>
  43a9b4:	ldr	x11, [x20]
  43a9b8:	ldrb	w11, [x11, #4]
  43a9bc:	cmp	w11, #0x53
  43a9c0:	b.ne	43a9f4 <feof@plt+0x37914>  // b.any
  43a9c4:	cmp	x8, x9
  43a9c8:	b.ls	43a9d4 <feof@plt+0x378f4>  // b.plast
  43a9cc:	sub	x8, x8, #0x8
  43a9d0:	str	x8, [x0, #16]
  43a9d4:	sub	x10, x8, #0x8
  43a9d8:	cmp	x8, x9
  43a9dc:	csel	x20, xzr, x10, eq  // eq = none
  43a9e0:	cmp	x20, #0x0
  43a9e4:	cset	w10, ne  // ne = any
  43a9e8:	cmp	x20, x13
  43a9ec:	b.eq	43a9f4 <feof@plt+0x37914>  // b.none
  43a9f0:	cbnz	x20, 43a9b4 <feof@plt+0x378d4>
  43a9f4:	madd	x21, x22, x12, x25
  43a9f8:	ldrb	w11, [x21, #30]!
  43a9fc:	tbnz	w11, #3, 43aab8 <feof@plt+0x379d8>
  43aa00:	ldr	x10, [x0, #24]
  43aa04:	ldr	x21, [sp, #80]
  43aa08:	cmp	x8, x10
  43aa0c:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43aa10:	ldur	x10, [x29, #-16]
  43aa14:	mov	w20, #0x18                  	// #24
  43aa18:	cbz	x10, 43aa2c <feof@plt+0x3794c>
  43aa1c:	ldr	w11, [x21]
  43aa20:	sub	x9, x8, x9
  43aa24:	lsr	x9, x9, #3
  43aa28:	str	w11, [x10, w9, uxtw #2]
  43aa2c:	str	x21, [x8], #8
  43aa30:	str	xzr, [sp, #88]
  43aa34:	str	x8, [x0, #16]
  43aa38:	b	43a884 <feof@plt+0x377a4>
  43aa3c:	madd	x8, x22, x20, x25
  43aa40:	ldrb	w8, [x8, #28]
  43aa44:	cmp	w8, #0x50
  43aa48:	b.ne	43aad4 <feof@plt+0x379f4>  // b.any
  43aa4c:	madd	x8, x22, x20, x25
  43aa50:	ldrh	w11, [x8, #30]!
  43aa54:	str	x8, [sp, #56]
  43aa58:	mov	x17, x8
  43aa5c:	ldr	w8, [x17, #2]!
  43aa60:	ldur	x0, [x29, #-88]
  43aa64:	ldr	w13, [sp, #104]
  43aa68:	ldur	x16, [x29, #-72]
  43aa6c:	sub	w9, w8, #0x1
  43aa70:	tbnz	w11, #2, 43ab50 <feof@plt+0x37a70>
  43aa74:	mov	w14, #0x30                  	// #48
  43aa78:	umaddl	x10, w9, w14, x28
  43aa7c:	tbnz	w11, #3, 43abd4 <feof@plt+0x37af4>
  43aa80:	cbz	x22, 43aa8c <feof@plt+0x379ac>
  43aa84:	ldurb	w11, [x16, #-18]
  43aa88:	tbnz	w11, #3, 43ac20 <feof@plt+0x37b40>
  43aa8c:	ldrb	w8, [x19, #1157]
  43aa90:	madd	x10, x9, x14, x28
  43aa94:	ldr	w15, [x10, #28]
  43aa98:	ldr	x26, [x10, #8]
  43aa9c:	cmp	w8, #0x0
  43aaa0:	cset	w18, ne  // ne = any
  43aaa4:	cbz	w8, 43ac4c <feof@plt+0x37b6c>
  43aaa8:	cbz	x26, 43ac70 <feof@plt+0x37b90>
  43aaac:	madd	x9, x9, x14, x28
  43aab0:	ldr	x9, [x9, #40]
  43aab4:	b	43ac74 <feof@plt+0x37b94>
  43aab8:	cbz	w10, 43aacc <feof@plt+0x379ec>
  43aabc:	ldr	x8, [x20]
  43aac0:	ldrb	w8, [x8, #4]
  43aac4:	cmp	w8, #0x53
  43aac8:	b.ne	43ab7c <feof@plt+0x37a9c>  // b.any
  43aacc:	str	xzr, [sp, #88]
  43aad0:	b	43abc8 <feof@plt+0x37ae8>
  43aad4:	ldrb	w8, [x19, #1157]
  43aad8:	ldur	x0, [x29, #-88]
  43aadc:	cmp	w8, #0x1
  43aae0:	ldp	x20, x9, [x0, #16]
  43aae4:	ldur	w8, [x29, #-64]
  43aae8:	csel	w1, w8, w22, hi  // hi = pmore
  43aaec:	cmp	x20, x9
  43aaf0:	ldur	x9, [x29, #-72]
  43aaf4:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43aaf8:	ldur	x21, [x29, #-16]
  43aafc:	cbz	x21, 43ab38 <feof@plt+0x37a58>
  43ab00:	ldur	x8, [x29, #-80]
  43ab04:	ldr	w2, [x9]
  43ab08:	ldr	x8, [x8]
  43ab0c:	sub	x8, x20, x8
  43ab10:	ubfx	x23, x8, #3, #32
  43ab14:	ldur	x8, [x29, #-104]
  43ab18:	cbz	x8, 43ab34 <feof@plt+0x37a54>
  43ab1c:	mov	x0, x8
  43ab20:	mov	w3, w2
  43ab24:	bl	435060 <feof@plt+0x31f80>
  43ab28:	ldur	x9, [x29, #-72]
  43ab2c:	mov	w2, w0
  43ab30:	ldur	x0, [x29, #-88]
  43ab34:	str	w2, [x21, x23, lsl #2]
  43ab38:	ldur	w8, [x29, #-64]
  43ab3c:	str	x9, [x20], #8
  43ab40:	str	x20, [x0, #16]
  43ab44:	add	w8, w8, #0x1
  43ab48:	stur	w8, [x29, #-64]
  43ab4c:	b	43abc8 <feof@plt+0x37ae8>
  43ab50:	ldrb	w8, [x19, #1157]
  43ab54:	mov	w10, #0x30                  	// #48
  43ab58:	madd	x9, x9, x10, x28
  43ab5c:	add	x26, x9, #0x10
  43ab60:	cbz	w8, 43abf8 <feof@plt+0x37b18>
  43ab64:	ldr	x25, [x26]
  43ab68:	str	xzr, [sp, #32]
  43ab6c:	mov	w12, #0x1                   	// #1
  43ab70:	mov	w18, #0x1                   	// #1
  43ab74:	mov	w15, #0x1                   	// #1
  43ab78:	b	43adb0 <feof@plt+0x37cd0>
  43ab7c:	mov	x0, x19
  43ab80:	bl	42ff34 <feof@plt+0x2ce54>
  43ab84:	ldr	x8, [x20]
  43ab88:	str	xzr, [sp, #88]
  43ab8c:	ldrb	w8, [x8, #4]
  43ab90:	strb	w8, [x0, #4]
  43ab94:	ldr	x8, [x20]
  43ab98:	ldur	q0, [x8, #8]
  43ab9c:	stur	q0, [x0, #8]
  43aba0:	ldr	x8, [x20]
  43aba4:	ldrh	w9, [x21]
  43aba8:	ldrh	w8, [x8, #6]
  43abac:	tst	w9, #0x8
  43abb0:	and	w9, w8, #0xfffffff7
  43abb4:	orr	w8, w8, #0x8
  43abb8:	csel	w8, w9, w8, eq  // eq = none
  43abbc:	strh	w8, [x0, #6]
  43abc0:	str	x0, [x20]
  43abc4:	ldur	x0, [x29, #-88]
  43abc8:	ldr	x21, [sp, #80]
  43abcc:	mov	w20, #0x18                  	// #24
  43abd0:	b	43a884 <feof@plt+0x377a4>
  43abd4:	madd	x8, x9, x14, x28
  43abd8:	ldrb	w11, [x19, #1157]
  43abdc:	ldr	w15, [x8, #24]
  43abe0:	ldr	x26, [x10]
  43abe4:	cbz	w11, 43ac10 <feof@plt+0x37b30>
  43abe8:	cbz	x26, 43ac54 <feof@plt+0x37b74>
  43abec:	madd	x8, x9, x14, x28
  43abf0:	ldr	x8, [x8, #32]
  43abf4:	b	43ac58 <feof@plt+0x37b78>
  43abf8:	mov	x25, xzr
  43abfc:	mov	w18, wzr
  43ac00:	str	xzr, [sp, #32]
  43ac04:	mov	w12, #0x1                   	// #1
  43ac08:	mov	w15, #0x1                   	// #1
  43ac0c:	b	43adb0 <feof@plt+0x37cd0>
  43ac10:	mov	w12, wzr
  43ac14:	mov	x25, xzr
  43ac18:	mov	w18, wzr
  43ac1c:	b	43adac <feof@plt+0x37ccc>
  43ac20:	ldrb	w12, [x19, #1157]
  43ac24:	madd	x11, x9, x14, x28
  43ac28:	ldr	w15, [x11, #24]
  43ac2c:	ldr	x26, [x10]
  43ac30:	cmp	w12, #0x0
  43ac34:	cset	w18, ne  // ne = any
  43ac38:	cbz	w12, 43acf4 <feof@plt+0x37c14>
  43ac3c:	cbz	x26, 43acfc <feof@plt+0x37c1c>
  43ac40:	madd	x9, x9, x14, x28
  43ac44:	ldr	x9, [x9, #32]
  43ac48:	b	43ad00 <feof@plt+0x37c20>
  43ac4c:	mov	x25, xzr
  43ac50:	b	43ac7c <feof@plt+0x37b9c>
  43ac54:	mov	x8, xzr
  43ac58:	cmp	x26, #0x0
  43ac5c:	mov	w12, wzr
  43ac60:	str	xzr, [sp, #32]
  43ac64:	csel	x25, xzr, x8, eq  // eq = none
  43ac68:	mov	w18, #0x1                   	// #1
  43ac6c:	b	43adb0 <feof@plt+0x37cd0>
  43ac70:	mov	x9, xzr
  43ac74:	cmp	x26, #0x0
  43ac78:	csel	x25, xzr, x9, eq  // eq = none
  43ac7c:	ldr	x12, [sp, #88]
  43ac80:	cbz	x12, 43aca4 <feof@plt+0x37bc4>
  43ac84:	ldur	x10, [x29, #-80]
  43ac88:	ldr	x9, [x0, #16]
  43ac8c:	ldr	x10, [x10]
  43ac90:	sub	x11, x9, #0x8
  43ac94:	cmp	x9, x10
  43ac98:	csel	x9, xzr, x11, eq  // eq = none
  43ac9c:	cmp	x9, x12
  43aca0:	b.eq	43acb0 <feof@plt+0x37bd0>  // b.none
  43aca4:	str	xzr, [sp, #32]
  43aca8:	mov	w12, #0x2                   	// #2
  43acac:	b	43adb0 <feof@plt+0x37cd0>
  43acb0:	cbz	w15, 43aca4 <feof@plt+0x37bc4>
  43acb4:	sub	w9, w15, #0x1
  43acb8:	add	x9, x26, w9, uxtw #3
  43acbc:	add	x9, x9, #0x8
  43acc0:	ldr	x10, [x26]
  43acc4:	ldrb	w10, [x10, #4]
  43acc8:	cmp	w10, #0x53
  43accc:	b.ne	43aca4 <feof@plt+0x37bc4>  // b.any
  43acd0:	add	x10, x25, #0x4
  43acd4:	cmp	w8, #0x0
  43acd8:	add	x26, x26, #0x8
  43acdc:	csel	x25, x10, x25, ne  // ne = any
  43ace0:	subs	w15, w15, #0x1
  43ace4:	mov	w12, #0x2                   	// #2
  43ace8:	b.ne	43acc0 <feof@plt+0x37be0>  // b.any
  43acec:	mov	x26, x9
  43acf0:	b	43adac <feof@plt+0x37ccc>
  43acf4:	mov	x25, xzr
  43acf8:	b	43ad08 <feof@plt+0x37c28>
  43acfc:	mov	x9, xzr
  43ad00:	cmp	x26, #0x0
  43ad04:	csel	x25, xzr, x9, eq  // eq = none
  43ad08:	ldur	x10, [x29, #-80]
  43ad0c:	ldr	x9, [x0, #16]
  43ad10:	ldr	x10, [x10]
  43ad14:	sub	x11, x9, x10
  43ad18:	lsr	x11, x11, #3
  43ad1c:	cbz	w11, 43ada8 <feof@plt+0x37cc8>
  43ad20:	sub	x11, x9, #0x8
  43ad24:	cmp	x9, x10
  43ad28:	csel	x12, xzr, x11, eq  // eq = none
  43ad2c:	str	x12, [sp, #32]
  43ad30:	ldr	x12, [x12]
  43ad34:	ldrb	w12, [x12, #4]
  43ad38:	cmp	w12, #0x13
  43ad3c:	b.ne	43ad70 <feof@plt+0x37c90>  // b.any
  43ad40:	ldr	x12, [sp, #48]
  43ad44:	ldrb	w12, [x12, #19]
  43ad48:	tbz	w12, #3, 43ad70 <feof@plt+0x37c90>
  43ad4c:	ldr	x12, [sp, #48]
  43ad50:	ldrh	w12, [x12, #16]
  43ad54:	cmp	w8, w12
  43ad58:	b.ne	43ad70 <feof@plt+0x37c90>  // b.any
  43ad5c:	cbz	x26, 43ad90 <feof@plt+0x37cb0>
  43ad60:	ldr	x8, [x26]
  43ad64:	cbz	x8, 43ad90 <feof@plt+0x37cb0>
  43ad68:	mov	w12, wzr
  43ad6c:	b	43adb0 <feof@plt+0x37cd0>
  43ad70:	ldr	x8, [sp, #88]
  43ad74:	ldr	x9, [sp, #32]
  43ad78:	mov	w12, wzr
  43ad7c:	cmp	x9, x8
  43ad80:	ccmp	w15, #0x0, #0x0, ne  // ne = any
  43ad84:	csel	x9, xzr, x9, ne  // ne = any
  43ad88:	str	x9, [sp, #32]
  43ad8c:	b	43adb0 <feof@plt+0x37cd0>
  43ad90:	cmp	x9, x10
  43ad94:	b.ls	43ada8 <feof@plt+0x37cc8>  // b.plast
  43ad98:	mov	w12, wzr
  43ad9c:	str	xzr, [sp, #32]
  43ada0:	str	x11, [x0, #16]
  43ada4:	b	43adb0 <feof@plt+0x37cd0>
  43ada8:	mov	w12, wzr
  43adac:	str	xzr, [sp, #32]
  43adb0:	ldrb	w8, [x19, #16]
  43adb4:	stp	w18, w15, [sp, #96]
  43adb8:	cbz	w8, 43adcc <feof@plt+0x37cec>
  43adbc:	cbz	x22, 43aecc <feof@plt+0x37dec>
  43adc0:	ldrb	w8, [x19, #17]
  43adc4:	cbnz	w8, 43add0 <feof@plt+0x37cf0>
  43adc8:	b	43aecc <feof@plt+0x37dec>
  43adcc:	cbz	x22, 43aecc <feof@plt+0x37dec>
  43add0:	ldurb	w8, [x16, #-18]
  43add4:	tbnz	w8, #3, 43aecc <feof@plt+0x37dec>
  43add8:	ldr	x8, [sp, #88]
  43addc:	cbz	x8, 43ae04 <feof@plt+0x37d24>
  43ade0:	ldur	x9, [x29, #-80]
  43ade4:	ldr	x8, [x0, #16]
  43ade8:	ldr	x9, [x9]
  43adec:	sub	x10, x8, #0x8
  43adf0:	cmp	x8, x9
  43adf4:	ldr	x9, [sp, #88]
  43adf8:	csel	x8, xzr, x10, eq  // eq = none
  43adfc:	cmp	x8, x9
  43ae00:	b.eq	43aecc <feof@plt+0x37dec>  // b.none
  43ae04:	mov	x0, x19
  43ae08:	mov	x20, x17
  43ae0c:	mov	w24, w12
  43ae10:	bl	42ff34 <feof@plt+0x2ce54>
  43ae14:	ldur	x16, [x29, #-72]
  43ae18:	mov	x10, x0
  43ae1c:	mov	w8, #0x53                  	// #83
  43ae20:	strb	w8, [x10, #4]
  43ae24:	str	x16, [x10, #8]
  43ae28:	strh	wzr, [x10, #6]
  43ae2c:	ldur	x0, [x29, #-88]
  43ae30:	ldrb	w8, [x19, #1157]
  43ae34:	ldp	x21, x9, [x0, #16]
  43ae38:	cmp	w8, #0x1
  43ae3c:	ldur	w8, [x29, #-64]
  43ae40:	csel	w1, w8, w22, hi  // hi = pmore
  43ae44:	cmp	x21, x9
  43ae48:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43ae4c:	ldur	x23, [x29, #-16]
  43ae50:	ldp	w15, w13, [sp, #100]
  43ae54:	ldr	w18, [sp, #96]
  43ae58:	mov	w12, w24
  43ae5c:	mov	x17, x20
  43ae60:	cbz	x23, 43aec0 <feof@plt+0x37de0>
  43ae64:	str	x17, [sp, #8]
  43ae68:	ldur	x8, [x29, #-80]
  43ae6c:	ldr	w2, [x10]
  43ae70:	ldr	x8, [x8]
  43ae74:	sub	x8, x21, x8
  43ae78:	ubfx	x9, x8, #3, #32
  43ae7c:	ldur	x8, [x29, #-104]
  43ae80:	cbz	x8, 43aeb8 <feof@plt+0x37dd8>
  43ae84:	mov	x0, x8
  43ae88:	mov	w3, w2
  43ae8c:	mov	x20, x10
  43ae90:	str	x9, [sp]
  43ae94:	bl	435060 <feof@plt+0x31f80>
  43ae98:	ldr	x9, [sp]
  43ae9c:	ldp	w18, w15, [sp, #96]
  43aea0:	ldur	x16, [x29, #-72]
  43aea4:	ldr	w13, [sp, #104]
  43aea8:	mov	w2, w0
  43aeac:	ldur	x0, [x29, #-88]
  43aeb0:	mov	x10, x20
  43aeb4:	mov	w12, w24
  43aeb8:	ldr	x17, [sp, #8]
  43aebc:	str	w2, [x23, x9, lsl #2]
  43aec0:	str	x10, [x21], #8
  43aec4:	str	x21, [x0, #16]
  43aec8:	ldr	x21, [sp, #80]
  43aecc:	cbz	w15, 43afe8 <feof@plt+0x37f08>
  43aed0:	ldur	x21, [x29, #-16]
  43aed4:	mov	w27, wzr
  43aed8:	b	43aee8 <feof@plt+0x37e08>
  43aedc:	add	w27, w27, #0x1
  43aee0:	cmp	w15, w27
  43aee4:	b.eq	43afac <feof@plt+0x37ecc>  // b.none
  43aee8:	ldrb	w8, [x19, #1157]
  43aeec:	ldur	w10, [x29, #-64]
  43aef0:	cmp	w13, #0x1
  43aef4:	csel	w9, w27, wzr, hi  // hi = pmore
  43aef8:	cmp	w8, #0x1
  43aefc:	add	w9, w9, w10
  43af00:	csel	w1, w9, w22, hi  // hi = pmore
  43af04:	cbz	x26, 43af9c <feof@plt+0x37ebc>
  43af08:	ldr	x24, [x26]
  43af0c:	mov	x8, x25
  43af10:	cbnz	w18, 43af18 <feof@plt+0x37e38>
  43af14:	ldr	x8, [x26]
  43af18:	ldp	x23, x9, [x0, #16]
  43af1c:	cmp	x23, x9
  43af20:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43af24:	cbz	x21, 43af74 <feof@plt+0x37e94>
  43af28:	ldur	x9, [x29, #-80]
  43af2c:	ldr	w2, [x8]
  43af30:	ldr	x9, [x9]
  43af34:	sub	x8, x23, x9
  43af38:	ubfx	x28, x8, #3, #32
  43af3c:	ldur	x8, [x29, #-104]
  43af40:	cbz	x8, 43af6c <feof@plt+0x37e8c>
  43af44:	ldr	w3, [x16]
  43af48:	mov	x0, x8
  43af4c:	mov	w20, w12
  43af50:	bl	435060 <feof@plt+0x31f80>
  43af54:	ldp	w18, w15, [sp, #96]
  43af58:	ldur	x16, [x29, #-72]
  43af5c:	ldr	w13, [sp, #104]
  43af60:	mov	w2, w0
  43af64:	ldur	x0, [x29, #-88]
  43af68:	mov	w12, w20
  43af6c:	str	w2, [x21, x28, lsl #2]
  43af70:	ldr	x28, [sp, #112]
  43af74:	orr	w8, w12, #0x2
  43af78:	str	x24, [x23], #8
  43af7c:	cmp	w8, #0x2
  43af80:	str	x23, [x0, #16]
  43af84:	b.ne	43aedc <feof@plt+0x37dfc>  // b.any
  43af88:	add	x8, x25, #0x4
  43af8c:	cmp	w18, #0x0
  43af90:	add	x26, x26, #0x8
  43af94:	csel	x25, x25, x8, eq  // eq = none
  43af98:	b	43aedc <feof@plt+0x37dfc>
  43af9c:	mov	x24, xzr
  43afa0:	mov	x8, x25
  43afa4:	cbnz	w18, 43af18 <feof@plt+0x37e38>
  43afa8:	b	43af14 <feof@plt+0x37e34>
  43afac:	ldp	x8, x27, [sp, #56]
  43afb0:	ldr	w26, [sp, #28]
  43afb4:	ldr	x25, [sp, #48]
  43afb8:	ldr	x21, [sp, #80]
  43afbc:	ldrb	w8, [x8]
  43afc0:	ldr	x12, [sp, #32]
  43afc4:	mov	w20, #0x18                  	// #24
  43afc8:	tbz	w8, #3, 43b0dc <feof@plt+0x37ffc>
  43afcc:	ldur	x9, [x29, #-80]
  43afd0:	ldr	x8, [x0, #16]
  43afd4:	ldr	x9, [x9]
  43afd8:	sub	x10, x8, #0x8
  43afdc:	cmp	x8, x9
  43afe0:	csel	x12, xzr, x10, eq  // eq = none
  43afe4:	b	43b0dc <feof@plt+0x37ffc>
  43afe8:	ldrb	w8, [x19, #1154]
  43afec:	ldr	x25, [sp, #48]
  43aff0:	cbz	w8, 43b014 <feof@plt+0x37f34>
  43aff4:	ldrb	w8, [x19, #1152]
  43aff8:	cbnz	w8, 43b014 <feof@plt+0x37f34>
  43affc:	ldrb	w8, [x25, #19]
  43b000:	tbnz	w8, #4, 43b014 <feof@plt+0x37f34>
  43b004:	ldr	x8, [x19]
  43b008:	cbz	x8, 43b078 <feof@plt+0x37f98>
  43b00c:	ldrb	w8, [x8, #106]
  43b010:	cbz	w8, 43b078 <feof@plt+0x37f98>
  43b014:	ldrsb	w8, [x19, #1198]
  43b018:	ldr	w26, [sp, #28]
  43b01c:	mov	w20, #0x18                  	// #24
  43b020:	cmp	w8, #0x1
  43b024:	b.lt	43b0d8 <feof@plt+0x37ff8>  // b.tstop
  43b028:	ldrb	w8, [x19, #1120]
  43b02c:	ldr	x12, [sp, #32]
  43b030:	cbnz	w8, 43b0dc <feof@plt+0x37ffc>
  43b034:	ldrb	w8, [x25, #19]
  43b038:	tbnz	w8, #4, 43b0dc <feof@plt+0x37ffc>
  43b03c:	ldr	x8, [x19]
  43b040:	cbz	x8, 43b04c <feof@plt+0x37f6c>
  43b044:	ldrb	w8, [x8, #106]
  43b048:	cbnz	w8, 43b0dc <feof@plt+0x37ffc>
  43b04c:	ldr	x3, [x27]
  43b050:	ldr	w4, [x17]
  43b054:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43b058:	mov	w1, #0x16                  	// #22
  43b05c:	mov	x0, x19
  43b060:	add	x2, x2, #0xd2e
  43b064:	bl	4289d0 <feof@plt+0x258f0>
  43b068:	ldr	x12, [sp, #32]
  43b06c:	ldr	w15, [sp, #100]
  43b070:	ldur	x0, [x29, #-88]
  43b074:	b	43b0dc <feof@plt+0x37ffc>
  43b078:	ldrb	w8, [x19, #1120]
  43b07c:	ldr	w26, [sp, #28]
  43b080:	mov	w20, #0x18                  	// #24
  43b084:	cbz	w8, 43b0a4 <feof@plt+0x37fc4>
  43b088:	ldr	x3, [x27]
  43b08c:	ldr	w4, [x17]
  43b090:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43b094:	mov	w1, #0x15                  	// #21
  43b098:	mov	x0, x19
  43b09c:	add	x2, x2, #0xcde
  43b0a0:	b	43b0cc <feof@plt+0x37fec>
  43b0a4:	ldrsb	w8, [x19, #1198]
  43b0a8:	cbz	w8, 43b0d8 <feof@plt+0x37ff8>
  43b0ac:	ldr	x3, [x27]
  43b0b0:	ldr	w4, [x17]
  43b0b4:	cmp	w8, #0x0
  43b0b8:	mov	w8, #0x15                  	// #21
  43b0bc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43b0c0:	cinc	w1, w8, gt
  43b0c4:	mov	x0, x19
  43b0c8:	add	x2, x2, #0xd2e
  43b0cc:	bl	428b00 <feof@plt+0x25a20>
  43b0d0:	ldr	w15, [sp, #100]
  43b0d4:	ldur	x0, [x29, #-88]
  43b0d8:	ldr	x12, [sp, #32]
  43b0dc:	ldrb	w8, [x19, #16]
  43b0e0:	cbnz	w8, 43b150 <feof@plt+0x38070>
  43b0e4:	ldr	x8, [sp, #56]
  43b0e8:	ldrb	w8, [x8]
  43b0ec:	tbnz	w8, #3, 43b150 <feof@plt+0x38070>
  43b0f0:	ldr	x8, [x0, #16]
  43b0f4:	ldr	x9, [sp, #88]
  43b0f8:	cbz	x9, 43b11c <feof@plt+0x3803c>
  43b0fc:	ldur	x9, [x29, #-80]
  43b100:	sub	x10, x8, #0x8
  43b104:	ldr	x9, [x9]
  43b108:	cmp	x8, x9
  43b10c:	csel	x9, xzr, x10, eq  // eq = none
  43b110:	ldr	x10, [sp, #88]
  43b114:	cmp	x9, x10
  43b118:	b.eq	43b150 <feof@plt+0x38070>  // b.none
  43b11c:	ldr	x9, [x0, #24]
  43b120:	cmp	x8, x9
  43b124:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43b128:	ldur	x9, [x29, #-16]
  43b12c:	cbz	x9, 43b148 <feof@plt+0x38068>
  43b130:	ldur	x10, [x29, #-80]
  43b134:	ldr	w11, [x21]
  43b138:	ldr	x10, [x10]
  43b13c:	sub	x10, x8, x10
  43b140:	lsr	x10, x10, #3
  43b144:	str	w11, [x9, w10, uxtw #2]
  43b148:	str	x21, [x8], #8
  43b14c:	str	x8, [x0, #16]
  43b150:	cbz	x12, 43b1a8 <feof@plt+0x380c8>
  43b154:	mov	x0, x19
  43b158:	mov	x23, x12
  43b15c:	bl	42ff34 <feof@plt+0x2ce54>
  43b160:	ldr	x8, [x23]
  43b164:	ldr	x9, [sp, #56]
  43b168:	ldr	w15, [sp, #100]
  43b16c:	ldrb	w8, [x8, #4]
  43b170:	strb	w8, [x0, #4]
  43b174:	ldr	x8, [x23]
  43b178:	ldur	q0, [x8, #8]
  43b17c:	stur	q0, [x0, #8]
  43b180:	ldr	x8, [x23]
  43b184:	ldrh	w9, [x9]
  43b188:	ldrh	w8, [x8, #6]
  43b18c:	tst	w9, #0x8
  43b190:	and	w9, w8, #0xfffffff7
  43b194:	orr	w8, w8, #0x8
  43b198:	csel	w8, w9, w8, eq  // eq = none
  43b19c:	strh	w8, [x0, #6]
  43b1a0:	str	x0, [x23]
  43b1a4:	ldur	x0, [x29, #-88]
  43b1a8:	ldur	w8, [x29, #-64]
  43b1ac:	add	w8, w15, w8
  43b1b0:	stur	w8, [x29, #-64]
  43b1b4:	b	43a884 <feof@plt+0x377a4>
  43b1b8:	mov	x20, x0
  43b1bc:	ldr	x8, [x20, #16]!
  43b1c0:	ldur	x10, [x29, #-80]
  43b1c4:	ldr	x9, [x19, #136]
  43b1c8:	ldr	x10, [x10]
  43b1cc:	ldr	x25, [x9]
  43b1d0:	sub	x21, x8, x10
  43b1d4:	cbnz	x25, 43b200 <feof@plt+0x38120>
  43b1d8:	mov	w0, #0x38                  	// #56
  43b1dc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b1e0:	mov	x25, x0
  43b1e4:	movi	v0.2d, #0x0
  43b1e8:	ldur	x0, [x29, #-88]
  43b1ec:	str	xzr, [x25, #48]
  43b1f0:	stp	q0, q0, [x25, #16]
  43b1f4:	ldr	x8, [x19, #136]
  43b1f8:	stp	xzr, x8, [x25]
  43b1fc:	str	x25, [x8]
  43b200:	str	x25, [x19, #136]
  43b204:	str	wzr, [x25, #48]
  43b208:	stp	x0, x27, [x25, #32]
  43b20c:	ldr	x9, [sp, #16]
  43b210:	lsr	x8, x21, #3
  43b214:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  43b218:	add	x8, x9, w8, uxtw #3
  43b21c:	stp	x9, x8, [x25, #16]
  43b220:	ldur	x9, [x29, #-80]
  43b224:	ldr	x8, [x20]
  43b228:	ldr	w11, [x10, #2452]
  43b22c:	ldr	x25, [sp, #48]
  43b230:	ldr	x9, [x9]
  43b234:	sub	x8, x8, x9
  43b238:	lsr	x8, x8, #3
  43b23c:	add	w8, w11, w8
  43b240:	str	w8, [x10, #2452]
  43b244:	ldur	w20, [x29, #-52]
  43b248:	cbz	w20, 43b29c <feof@plt+0x381bc>
  43b24c:	ldr	x8, [sp, #40]
  43b250:	ldr	x8, [x8, #8]
  43b254:	add	x21, x8, #0x28
  43b258:	b	43b268 <feof@plt+0x38188>
  43b25c:	subs	x20, x20, #0x1
  43b260:	add	x21, x21, #0x30
  43b264:	b.eq	43b29c <feof@plt+0x381bc>  // b.none
  43b268:	ldur	x0, [x21, #-32]
  43b26c:	cbz	x0, 43b278 <feof@plt+0x38198>
  43b270:	bl	402b20 <free@plt>
  43b274:	stur	xzr, [x21, #-32]
  43b278:	ldur	x0, [x21, #-8]
  43b27c:	cbz	x0, 43b288 <feof@plt+0x381a8>
  43b280:	bl	402b20 <free@plt>
  43b284:	stur	xzr, [x21, #-8]
  43b288:	ldr	x0, [x21]
  43b28c:	cbz	x0, 43b25c <feof@plt+0x3817c>
  43b290:	bl	402b20 <free@plt>
  43b294:	str	xzr, [x21]
  43b298:	b	43b25c <feof@plt+0x3817c>
  43b29c:	ldr	x0, [sp, #40]
  43b2a0:	bl	434098 <feof@plt+0x30fb8>
  43b2a4:	ldrh	w8, [x27, #18]
  43b2a8:	orr	w9, w8, #0x40
  43b2ac:	strh	w9, [x27, #18]
  43b2b0:	tbnz	w8, #7, 43b310 <feof@plt+0x38230>
  43b2b4:	orr	w9, w8, #0xc0
  43b2b8:	ands	w8, w8, #0x3
  43b2bc:	strh	w9, [x27, #18]
  43b2c0:	b.eq	43b59c <feof@plt+0x384bc>  // b.none
  43b2c4:	cmp	w8, #0x3
  43b2c8:	b.eq	43b2f8 <feof@plt+0x38218>  // b.none
  43b2cc:	cmp	w8, #0x2
  43b2d0:	b.ne	43b6d0 <feof@plt+0x385f0>  // b.any
  43b2d4:	ldr	x23, [x27, #24]
  43b2d8:	ldrb	w8, [x23, #18]
  43b2dc:	cbz	w8, 43b2f8 <feof@plt+0x38218>
  43b2e0:	ldr	x9, [x19, #1048]
  43b2e4:	sub	w2, w8, #0x1
  43b2e8:	mov	x0, x19
  43b2ec:	mov	x1, x23
  43b2f0:	blr	x9
  43b2f4:	strb	wzr, [x23, #18]
  43b2f8:	ldr	x8, [x19, #1008]
  43b2fc:	cbz	x8, 43b310 <feof@plt+0x38230>
  43b300:	ldr	w1, [x19, #48]
  43b304:	mov	x0, x19
  43b308:	mov	x2, x27
  43b30c:	blr	x8
  43b310:	ldr	x8, [x19, #1032]
  43b314:	cbz	x8, 43b328 <feof@plt+0x38248>
  43b318:	mov	x0, x19
  43b31c:	mov	w1, w26
  43b320:	mov	x2, x27
  43b324:	blr	x8
  43b328:	ldrb	w8, [x25, #19]
  43b32c:	ldrh	w9, [x25, #16]
  43b330:	orr	w10, w8, #0x20
  43b334:	strb	w10, [x25, #19]
  43b338:	cbz	w9, 43b458 <feof@plt+0x38378>
  43b33c:	ldur	x20, [x29, #-48]
  43b340:	cbz	x20, 43b628 <feof@plt+0x38548>
  43b344:	ldrb	w8, [x19, #16]
  43b348:	cbnz	w8, 43b3cc <feof@plt+0x382ec>
  43b34c:	mov	x0, x19
  43b350:	bl	42ff34 <feof@plt+0x2ce54>
  43b354:	ldr	x9, [sp, #72]
  43b358:	mov	w8, #0x53                  	// #83
  43b35c:	strb	w8, [x0, #4]
  43b360:	strh	wzr, [x0, #6]
  43b364:	str	x9, [x0, #8]
  43b368:	ldr	x8, [x19, #136]
  43b36c:	mov	x21, x0
  43b370:	ldr	w9, [x8, #48]
  43b374:	cmp	w9, #0x2
  43b378:	add	x9, x8, #0x28
  43b37c:	b.ne	43b384 <feof@plt+0x382a4>  // b.any
  43b380:	ldr	x9, [x9]
  43b384:	ldr	x0, [x8]
  43b388:	ldr	x22, [x9]
  43b38c:	cbnz	x0, 43b3b4 <feof@plt+0x382d4>
  43b390:	mov	w0, #0x38                  	// #56
  43b394:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b398:	movi	v0.2d, #0x0
  43b39c:	str	xzr, [x0, #48]
  43b3a0:	stp	q0, q0, [x0, #16]
  43b3a4:	ldr	x8, [x19, #136]
  43b3a8:	stp	xzr, x8, [x0]
  43b3ac:	str	x0, [x8]
  43b3b0:	ldur	x20, [x29, #-48]
  43b3b4:	mov	w8, #0x1                   	// #1
  43b3b8:	add	x9, x21, #0x18
  43b3bc:	str	x0, [x19, #136]
  43b3c0:	stp	xzr, x22, [x0, #32]
  43b3c4:	str	w8, [x0, #48]
  43b3c8:	stp	x21, x9, [x0, #16]
  43b3cc:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x28838>
  43b3d0:	b	43b3dc <feof@plt+0x382fc>
  43b3d4:	mov	x20, x22
  43b3d8:	cbz	x22, 43b44c <feof@plt+0x3836c>
  43b3dc:	ldp	x22, x24, [x20]
  43b3e0:	str	xzr, [x20]
  43b3e4:	ldr	x8, [x19, #136]
  43b3e8:	ldr	x9, [x20, #16]
  43b3ec:	ldr	x0, [x8]
  43b3f0:	sub	x8, x9, x24
  43b3f4:	lsr	x23, x8, #3
  43b3f8:	cbnz	x0, 43b41c <feof@plt+0x3833c>
  43b3fc:	mov	w0, #0x38                  	// #56
  43b400:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b404:	movi	v0.2d, #0x0
  43b408:	stp	q0, q0, [x0, #16]
  43b40c:	str	xzr, [x0, #48]
  43b410:	ldr	x8, [x19, #136]
  43b414:	stp	xzr, x8, [x0]
  43b418:	str	x0, [x8]
  43b41c:	add	x8, x24, w23, uxtw #3
  43b420:	str	x0, [x19, #136]
  43b424:	str	wzr, [x0, #48]
  43b428:	stp	x20, xzr, [x0, #32]
  43b42c:	stp	x24, x8, [x0, #16]
  43b430:	stur	x22, [x29, #-48]
  43b434:	ldrb	w8, [x19, #1157]
  43b438:	cbnz	w8, 43b3d4 <feof@plt+0x382f4>
  43b43c:	ldr	w8, [x21, #2452]
  43b440:	add	w8, w8, w23
  43b444:	str	w8, [x21, #2452]
  43b448:	b	43b3d4 <feof@plt+0x382f4>
  43b44c:	strb	wzr, [x19, #192]
  43b450:	mov	w0, #0x2                   	// #2
  43b454:	b	43b630 <feof@plt+0x38550>
  43b458:	ldr	w23, [x25, #12]
  43b45c:	tbnz	w8, #6, 43b650 <feof@plt+0x38570>
  43b460:	ldrb	w8, [x19, #1157]
  43b464:	add	x21, x25, #0x18
  43b468:	cbz	w8, 43b5a8 <feof@plt+0x384c8>
  43b46c:	mov	w20, w23
  43b470:	lsl	x0, x20, #4
  43b474:	lsl	x25, x20, #3
  43b478:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b47c:	mov	x24, x0
  43b480:	mov	x0, x19
  43b484:	mov	x1, x25
  43b488:	bl	433e38 <feof@plt+0x30d58>
  43b48c:	ldr	x8, [x19, #40]
  43b490:	mov	x25, x0
  43b494:	mov	x1, x27
  43b498:	mov	w2, w26
  43b49c:	mov	x0, x8
  43b4a0:	mov	w3, w23
  43b4a4:	str	x27, [sp, #64]
  43b4a8:	bl	434f28 <feof@plt+0x31e48>
  43b4ac:	cbz	w23, 43b518 <feof@plt+0x38438>
  43b4b0:	ldr	x27, [x25, #16]
  43b4b4:	mov	x22, x0
  43b4b8:	mov	x26, xzr
  43b4bc:	b	43b4dc <feof@plt+0x383fc>
  43b4c0:	str	w2, [x24, x28, lsl #2]
  43b4c4:	add	x26, x26, #0x1
  43b4c8:	str	x21, [x27], #8
  43b4cc:	cmp	w20, w26
  43b4d0:	add	x21, x21, #0x18
  43b4d4:	str	x27, [x25, #16]
  43b4d8:	b.eq	43b518 <feof@plt+0x38438>  // b.none
  43b4dc:	ldr	x8, [x25, #24]
  43b4e0:	cmp	x27, x8
  43b4e4:	b.hi	43b6b8 <feof@plt+0x385d8>  // b.pmore
  43b4e8:	cbz	x24, 43b4c4 <feof@plt+0x383e4>
  43b4ec:	ldr	x8, [x25, #8]
  43b4f0:	ldr	w2, [x21]
  43b4f4:	sub	x8, x27, x8
  43b4f8:	ubfx	x28, x8, #3, #32
  43b4fc:	cbz	x22, 43b4c0 <feof@plt+0x383e0>
  43b500:	mov	x0, x22
  43b504:	mov	w1, w26
  43b508:	mov	w3, w2
  43b50c:	bl	435060 <feof@plt+0x31f80>
  43b510:	mov	w2, w0
  43b514:	b	43b4c0 <feof@plt+0x383e0>
  43b518:	ldr	x21, [x25, #8]
  43b51c:	ldr	x8, [x19, #136]
  43b520:	ldr	x26, [sp, #64]
  43b524:	cbnz	x26, 43b540 <feof@plt+0x38460>
  43b528:	ldr	w9, [x8, #48]
  43b52c:	cmp	w9, #0x2
  43b530:	add	x9, x8, #0x28
  43b534:	b.ne	43b53c <feof@plt+0x3845c>  // b.any
  43b538:	ldr	x9, [x9]
  43b53c:	ldr	x26, [x9]
  43b540:	ldr	x22, [x8]
  43b544:	cbnz	x22, 43b56c <feof@plt+0x3848c>
  43b548:	mov	w0, #0x38                  	// #56
  43b54c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b550:	movi	v0.2d, #0x0
  43b554:	str	xzr, [x0, #48]
  43b558:	stp	q0, q0, [x0, #16]
  43b55c:	ldr	x8, [x19, #136]
  43b560:	mov	x22, x0
  43b564:	stp	xzr, x8, [x0]
  43b568:	str	x0, [x8]
  43b56c:	mov	w8, #0x2                   	// #2
  43b570:	mov	w0, #0x18                  	// #24
  43b574:	str	x22, [x19, #136]
  43b578:	str	w8, [x22, #48]
  43b57c:	str	x25, [x22, #32]
  43b580:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b584:	add	x8, x21, x20, lsl #3
  43b588:	stp	x26, x24, [x0]
  43b58c:	str	x24, [x0, #16]
  43b590:	str	x0, [x22, #40]
  43b594:	stp	x21, x8, [x22, #16]
  43b598:	b	43b610 <feof@plt+0x38530>
  43b59c:	ldr	x8, [x19, #1016]
  43b5a0:	cbnz	x8, 43b300 <feof@plt+0x38220>
  43b5a4:	b	43b310 <feof@plt+0x38230>
  43b5a8:	ldr	x8, [x19, #136]
  43b5ac:	cbnz	x27, 43b5c8 <feof@plt+0x384e8>
  43b5b0:	ldr	w9, [x8, #48]
  43b5b4:	cmp	w9, #0x2
  43b5b8:	add	x9, x8, #0x28
  43b5bc:	b.ne	43b5c4 <feof@plt+0x384e4>  // b.any
  43b5c0:	ldr	x9, [x9]
  43b5c4:	ldr	x27, [x9]
  43b5c8:	ldr	x0, [x8]
  43b5cc:	cbnz	x0, 43b5f0 <feof@plt+0x38510>
  43b5d0:	mov	w0, #0x38                  	// #56
  43b5d4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b5d8:	movi	v0.2d, #0x0
  43b5dc:	str	xzr, [x0, #48]
  43b5e0:	stp	q0, q0, [x0, #16]
  43b5e4:	ldr	x8, [x19, #136]
  43b5e8:	stp	xzr, x8, [x0]
  43b5ec:	str	x0, [x8]
  43b5f0:	mov	w8, #0x1                   	// #1
  43b5f4:	mov	w9, #0x18                  	// #24
  43b5f8:	str	x0, [x19, #136]
  43b5fc:	str	w8, [x0, #48]
  43b600:	umaddl	x8, w23, w9, x25
  43b604:	add	x8, x8, #0x18
  43b608:	stp	xzr, x27, [x0, #32]
  43b60c:	stp	x21, x8, [x0, #16]
  43b610:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  43b614:	ldr	w9, [x8, #2452]
  43b618:	add	w9, w9, w23
  43b61c:	str	w9, [x8, #2452]
  43b620:	ldur	x20, [x29, #-48]
  43b624:	cbnz	x20, 43b344 <feof@plt+0x38264>
  43b628:	mov	w0, #0x1                   	// #1
  43b62c:	strb	wzr, [x19, #192]
  43b630:	ldp	x20, x19, [sp, #304]
  43b634:	ldp	x22, x21, [sp, #288]
  43b638:	ldp	x24, x23, [sp, #272]
  43b63c:	ldp	x26, x25, [sp, #256]
  43b640:	ldp	x28, x27, [sp, #240]
  43b644:	ldp	x29, x30, [sp, #224]
  43b648:	add	sp, sp, #0x140
  43b64c:	ret
  43b650:	mov	w8, #0x18                  	// #24
  43b654:	cbz	x23, 43b460 <feof@plt+0x38380>
  43b658:	sub	w9, w23, #0x1
  43b65c:	umaddl	x9, w9, w8, x25
  43b660:	ldrb	w9, [x9, #28]
  43b664:	sub	x23, x23, #0x1
  43b668:	cmp	w9, #0x26
  43b66c:	b.eq	43b654 <feof@plt+0x38574>  // b.none
  43b670:	add	w23, w23, #0x1
  43b674:	b	43b460 <feof@plt+0x38380>
  43b678:	mov	w8, #0x18                  	// #24
  43b67c:	cbz	x24, 43b6a4 <feof@plt+0x385c4>
  43b680:	sub	w9, w24, #0x1
  43b684:	umaddl	x9, w9, w8, x25
  43b688:	ldrb	w9, [x9, #28]
  43b68c:	sub	x24, x24, #0x1
  43b690:	cmp	w9, #0x26
  43b694:	b.eq	43b67c <feof@plt+0x3859c>  // b.none
  43b698:	ldr	x28, [sp, #112]
  43b69c:	add	w24, w24, #0x1
  43b6a0:	b	43a2f4 <feof@plt+0x37214>
  43b6a4:	stur	xzr, [x29, #-96]
  43b6a8:	stur	wzr, [x29, #-88]
  43b6ac:	ldr	x28, [sp, #112]
  43b6b0:	mov	w8, #0x1                   	// #1
  43b6b4:	b	43a6f8 <feof@plt+0x37618>
  43b6b8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  43b6bc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43b6c0:	add	x0, x0, #0x8e6
  43b6c4:	add	x2, x2, #0xc53
  43b6c8:	mov	w1, #0x953                 	// #2387
  43b6cc:	bl	40f560 <feof@plt+0xc480>
  43b6d0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  43b6d4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43b6d8:	add	x0, x0, #0x8e6
  43b6dc:	add	x2, x2, #0xb85
  43b6e0:	mov	w1, #0xe0b                 	// #3595
  43b6e4:	bl	40f560 <feof@plt+0xc480>
  43b6e8:	stp	x29, x30, [sp, #-80]!
  43b6ec:	stp	x26, x25, [sp, #16]
  43b6f0:	stp	x24, x23, [sp, #32]
  43b6f4:	stp	x22, x21, [sp, #48]
  43b6f8:	stp	x20, x19, [sp, #64]
  43b6fc:	ldr	x8, [x2]
  43b700:	mov	x19, x0
  43b704:	mov	x29, sp
  43b708:	mov	x21, x3
  43b70c:	mov	x0, x8
  43b710:	mov	x23, x2
  43b714:	mov	w20, w1
  43b718:	bl	433218 <feof@plt+0x30138>
  43b71c:	mov	w22, w0
  43b720:	mov	x0, x21
  43b724:	bl	433218 <feof@plt+0x30138>
  43b728:	add	w8, w22, w0
  43b72c:	add	w8, w8, #0x1
  43b730:	add	x8, x8, #0xf
  43b734:	and	x8, x8, #0x1fffffff0
  43b738:	mov	x9, sp
  43b73c:	sub	x22, x9, x8
  43b740:	mov	sp, x22
  43b744:	ldr	x1, [x23]
  43b748:	mov	w3, #0x1                   	// #1
  43b74c:	mov	x0, x19
  43b750:	mov	x2, x22
  43b754:	bl	4333ec <feof@plt+0x3030c>
  43b758:	ldr	x8, [x23]
  43b75c:	mov	x24, x0
  43b760:	mov	x2, x0
  43b764:	ldrb	w8, [x8, #4]
  43b768:	cmp	w8, #0x7
  43b76c:	b.ne	43b788 <feof@plt+0x386a8>  // b.any
  43b770:	ldrb	w8, [x21, #4]
  43b774:	mov	x2, x24
  43b778:	cbz	w8, 43b788 <feof@plt+0x386a8>
  43b77c:	mov	w8, #0x20                  	// #32
  43b780:	mov	x2, x24
  43b784:	strb	w8, [x2], #1
  43b788:	ldrb	w8, [x21, #4]
  43b78c:	cmp	w8, #0x53
  43b790:	b.eq	43b7a8 <feof@plt+0x386c8>  // b.none
  43b794:	mov	w3, #0x1                   	// #1
  43b798:	mov	x0, x19
  43b79c:	mov	x1, x21
  43b7a0:	bl	4333ec <feof@plt+0x3030c>
  43b7a4:	mov	x2, x0
  43b7a8:	mov	w8, #0xa                   	// #10
  43b7ac:	strb	w8, [x2]
  43b7b0:	sub	x2, x2, x22
  43b7b4:	mov	w3, #0x1                   	// #1
  43b7b8:	mov	x0, x19
  43b7bc:	mov	x1, x22
  43b7c0:	bl	426a70 <feof@plt+0x23990>
  43b7c4:	mov	x0, x19
  43b7c8:	bl	42f144 <feof@plt+0x2c064>
  43b7cc:	mov	x0, x19
  43b7d0:	bl	42ff34 <feof@plt+0x2ce54>
  43b7d4:	str	x0, [x19, #448]
  43b7d8:	mov	x0, x19
  43b7dc:	bl	4300b4 <feof@plt+0x2cfd4>
  43b7e0:	ldr	x8, [x19]
  43b7e4:	mov	x25, x0
  43b7e8:	ldr	x9, [x8]
  43b7ec:	ldr	x8, [x8, #32]
  43b7f0:	cmp	x9, x8
  43b7f4:	b.eq	43b884 <feof@plt+0x387a4>  // b.none
  43b7f8:	ldr	w26, [x25]
  43b7fc:	mov	x0, x19
  43b800:	bl	426b60 <feof@plt+0x23a80>
  43b804:	mov	w1, #0x1                   	// #1
  43b808:	mov	x0, x19
  43b80c:	bl	438d5c <feof@plt+0x35c7c>
  43b810:	strb	wzr, [x24]
  43b814:	ldr	x8, [x23]
  43b818:	mov	w0, wzr
  43b81c:	ldr	x9, [x8, #16]
  43b820:	ldr	q0, [x8]
  43b824:	str	x9, [x25, #16]
  43b828:	str	q0, [x25]
  43b82c:	str	x25, [x23]
  43b830:	ldrh	w8, [x25, #6]
  43b834:	str	w26, [x25]
  43b838:	and	w8, w8, #0xfffffff7
  43b83c:	strh	w8, [x25, #6]
  43b840:	ldr	w8, [x19, #1116]
  43b844:	cmp	w8, #0x15
  43b848:	b.eq	43b894 <feof@plt+0x387b4>  // b.none
  43b84c:	mov	x0, x19
  43b850:	mov	x1, x21
  43b854:	bl	433540 <feof@plt+0x30460>
  43b858:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  43b85c:	mov	x6, x0
  43b860:	add	x4, x4, #0xc13
  43b864:	mov	w1, #0x3                   	// #3
  43b868:	mov	x0, x19
  43b86c:	mov	w2, w20
  43b870:	mov	w3, wzr
  43b874:	mov	x5, x22
  43b878:	bl	428d60 <feof@plt+0x25c80>
  43b87c:	mov	w0, wzr
  43b880:	b	43b894 <feof@plt+0x387b4>
  43b884:	mov	x0, x19
  43b888:	str	x25, [x23]
  43b88c:	bl	426b60 <feof@plt+0x23a80>
  43b890:	mov	w0, #0x1                   	// #1
  43b894:	mov	sp, x29
  43b898:	ldp	x20, x19, [sp, #64]
  43b89c:	ldp	x22, x21, [sp, #48]
  43b8a0:	ldp	x24, x23, [sp, #32]
  43b8a4:	ldp	x26, x25, [sp, #16]
  43b8a8:	ldp	x29, x30, [sp], #80
  43b8ac:	ret
  43b8b0:	stp	x29, x30, [sp, #-80]!
  43b8b4:	stp	x24, x23, [sp, #32]
  43b8b8:	stp	x22, x21, [sp, #48]
  43b8bc:	stp	x20, x19, [sp, #64]
  43b8c0:	ldr	w8, [x1, #24]
  43b8c4:	mov	w23, w2
  43b8c8:	mov	x19, x0
  43b8cc:	str	x25, [sp, #16]
  43b8d0:	cmp	w8, #0x7
  43b8d4:	mov	x29, sp
  43b8d8:	b.ne	43b8ec <feof@plt+0x3880c>  // b.any
  43b8dc:	ldrb	w8, [x19, #16]
  43b8e0:	cbz	w8, 43baf0 <feof@plt+0x38a10>
  43b8e4:	mov	w0, wzr
  43b8e8:	b	43bad4 <feof@plt+0x389f4>
  43b8ec:	mov	x0, x19
  43b8f0:	mov	w2, w3
  43b8f4:	mov	x20, x1
  43b8f8:	bl	437e44 <feof@plt+0x34d64>
  43b8fc:	mov	x21, x0
  43b900:	bl	402a50 <strlen@plt>
  43b904:	add	x8, x0, #0x10
  43b908:	and	x8, x8, #0xfffffffffffffff0
  43b90c:	mov	x9, sp
  43b910:	sub	x24, x9, x8
  43b914:	mov	x22, x0
  43b918:	mov	sp, x24
  43b91c:	mov	x0, x24
  43b920:	mov	x1, x21
  43b924:	mov	x2, x22
  43b928:	bl	4029c0 <memcpy@plt>
  43b92c:	mov	w8, #0xa                   	// #10
  43b930:	mov	w3, #0x1                   	// #1
  43b934:	mov	x0, x19
  43b938:	mov	x1, x24
  43b93c:	mov	x2, x22
  43b940:	strb	w8, [x24, x22]
  43b944:	bl	426a70 <feof@plt+0x23990>
  43b948:	mov	x0, x19
  43b94c:	bl	42f144 <feof@plt+0x2c064>
  43b950:	mov	x0, x19
  43b954:	bl	42ff34 <feof@plt+0x2ce54>
  43b958:	str	x0, [x19, #448]
  43b95c:	mov	x0, x19
  43b960:	bl	4300b4 <feof@plt+0x2cfd4>
  43b964:	str	w23, [x0]
  43b968:	ldr	x8, [x19, #136]
  43b96c:	mov	x21, x0
  43b970:	ldr	w9, [x8, #48]
  43b974:	cmp	w9, #0x2
  43b978:	b.ne	43ba58 <feof@plt+0x38978>  // b.any
  43b97c:	mov	w0, #0x10                  	// #16
  43b980:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43b984:	mov	x22, x0
  43b988:	mov	w1, #0x8                   	// #8
  43b98c:	mov	x0, x19
  43b990:	bl	433e38 <feof@plt+0x30d58>
  43b994:	ldr	x8, [x19, #40]
  43b998:	mov	x24, x0
  43b99c:	mov	w3, #0x1                   	// #1
  43b9a0:	mov	x1, x20
  43b9a4:	mov	x0, x8
  43b9a8:	mov	w2, w23
  43b9ac:	bl	434f28 <feof@plt+0x31e48>
  43b9b0:	ldp	x23, x8, [x24, #16]
  43b9b4:	cmp	x23, x8
  43b9b8:	b.hi	43bb14 <feof@plt+0x38a34>  // b.pmore
  43b9bc:	cbz	x22, 43b9ec <feof@plt+0x3890c>
  43b9c0:	ldr	x8, [x19, #40]
  43b9c4:	ldr	x9, [x24, #8]
  43b9c8:	ldr	w2, [x8, #112]
  43b9cc:	sub	x8, x23, x9
  43b9d0:	ubfx	x25, x8, #3, #32
  43b9d4:	cbz	x0, 43b9e8 <feof@plt+0x38908>
  43b9d8:	mov	w1, wzr
  43b9dc:	mov	w3, w2
  43b9e0:	bl	435060 <feof@plt+0x31f80>
  43b9e4:	mov	w2, w0
  43b9e8:	str	w2, [x22, x25, lsl #2]
  43b9ec:	str	x21, [x23], #8
  43b9f0:	str	x23, [x24, #16]
  43b9f4:	ldr	x8, [x19, #136]
  43b9f8:	ldr	x23, [x24, #8]
  43b9fc:	ldr	x21, [x8]
  43ba00:	cbnz	x21, 43ba28 <feof@plt+0x38948>
  43ba04:	mov	w0, #0x38                  	// #56
  43ba08:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43ba0c:	movi	v0.2d, #0x0
  43ba10:	str	xzr, [x0, #48]
  43ba14:	stp	q0, q0, [x0, #16]
  43ba18:	ldr	x8, [x19, #136]
  43ba1c:	mov	x21, x0
  43ba20:	stp	xzr, x8, [x0]
  43ba24:	str	x0, [x8]
  43ba28:	mov	w8, #0x2                   	// #2
  43ba2c:	mov	w0, #0x18                  	// #24
  43ba30:	str	x21, [x19, #136]
  43ba34:	str	w8, [x21, #48]
  43ba38:	str	x24, [x21, #32]
  43ba3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43ba40:	add	x8, x23, #0x8
  43ba44:	stp	x20, x22, [x0]
  43ba48:	str	x22, [x0, #16]
  43ba4c:	str	x0, [x21, #40]
  43ba50:	stp	x23, x8, [x21, #16]
  43ba54:	b	43ba9c <feof@plt+0x389bc>
  43ba58:	ldr	x0, [x8]
  43ba5c:	ldr	x22, [x8, #40]
  43ba60:	cbnz	x0, 43ba84 <feof@plt+0x389a4>
  43ba64:	mov	w0, #0x38                  	// #56
  43ba68:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43ba6c:	movi	v0.2d, #0x0
  43ba70:	str	xzr, [x0, #48]
  43ba74:	stp	q0, q0, [x0, #16]
  43ba78:	ldr	x8, [x19, #136]
  43ba7c:	stp	xzr, x8, [x0]
  43ba80:	str	x0, [x8]
  43ba84:	mov	w8, #0x1                   	// #1
  43ba88:	add	x9, x21, #0x18
  43ba8c:	str	x0, [x19, #136]
  43ba90:	stp	xzr, x22, [x0, #32]
  43ba94:	str	w8, [x0, #48]
  43ba98:	stp	x21, x9, [x0, #16]
  43ba9c:	ldr	x8, [x19]
  43baa0:	ldr	x9, [x8]
  43baa4:	ldr	x8, [x8, #32]
  43baa8:	cmp	x9, x8
  43baac:	b.eq	43bac8 <feof@plt+0x389e8>  // b.none
  43bab0:	ldr	x3, [x20]
  43bab4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43bab8:	add	x2, x2, #0x85f
  43babc:	mov	w1, #0x4                   	// #4
  43bac0:	mov	x0, x19
  43bac4:	bl	4288a0 <feof@plt+0x257c0>
  43bac8:	mov	x0, x19
  43bacc:	bl	426b60 <feof@plt+0x23a80>
  43bad0:	mov	w0, #0x1                   	// #1
  43bad4:	mov	sp, x29
  43bad8:	ldp	x20, x19, [sp, #64]
  43badc:	ldp	x22, x21, [sp, #48]
  43bae0:	ldp	x24, x23, [sp, #32]
  43bae4:	ldr	x25, [sp, #16]
  43bae8:	ldp	x29, x30, [sp], #80
  43baec:	ret
  43baf0:	mov	x0, x19
  43baf4:	mov	w1, w23
  43baf8:	mov	sp, x29
  43bafc:	ldp	x20, x19, [sp, #64]
  43bb00:	ldp	x22, x21, [sp, #48]
  43bb04:	ldp	x24, x23, [sp, #32]
  43bb08:	ldr	x25, [sp, #16]
  43bb0c:	ldp	x29, x30, [sp], #80
  43bb10:	b	425c94 <feof@plt+0x22bb4>
  43bb14:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xe838>
  43bb18:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43bb1c:	add	x0, x0, #0x8e6
  43bb20:	add	x2, x2, #0xc53
  43bb24:	mov	w1, #0x953                 	// #2387
  43bb28:	bl	40f560 <feof@plt+0xc480>
  43bb2c:	sub	sp, sp, #0xb0
  43bb30:	stp	x29, x30, [sp, #80]
  43bb34:	stp	x28, x27, [sp, #96]
  43bb38:	stp	x26, x25, [sp, #112]
  43bb3c:	stp	x24, x23, [sp, #128]
  43bb40:	stp	x22, x21, [sp, #144]
  43bb44:	stp	x20, x19, [sp, #160]
  43bb48:	stp	x3, x1, [sp, #16]
  43bb4c:	ldr	x8, [x1, #24]
  43bb50:	add	x29, sp, #0x50
  43bb54:	ldrb	w22, [x0, #1157]
  43bb58:	mov	x25, x2
  43bb5c:	stur	x8, [x29, #-24]
  43bb60:	ldrh	w8, [x8, #16]
  43bb64:	mov	x20, x0
  43bb68:	cmp	w8, #0x0
  43bb6c:	csinc	w19, w8, wzr, ne  // ne = any
  43bb70:	mov	w8, #0x1c0                 	// #448
  43bb74:	umull	x1, w19, w8
  43bb78:	bl	433e38 <feof@plt+0x30d58>
  43bb7c:	ldr	x24, [x0, #8]
  43bb80:	add	x8, x19, w19, uxtw #1
  43bb84:	lsl	x26, x8, #4
  43bb88:	mov	x21, x0
  43bb8c:	mov	x0, x24
  43bb90:	mov	w1, wzr
  43bb94:	mov	x2, x26
  43bb98:	bl	402b40 <memset@plt>
  43bb9c:	mov	w23, wzr
  43bba0:	add	x8, x24, x26
  43bba4:	add	x9, x20, #0x2b0
  43bba8:	mov	w19, #0x201                 	// #513
  43bbac:	mov	x26, x21
  43bbb0:	stur	x9, [x29, #-32]
  43bbb4:	str	x8, [x21, #16]
  43bbb8:	str	x24, [sp, #8]
  43bbbc:	str	x21, [sp, #32]
  43bbc0:	b	43bbd4 <feof@plt+0x38af4>
  43bbc4:	ldrb	w9, [x27, #4]
  43bbc8:	sub	w10, w9, #0x15
  43bbcc:	cmp	w10, #0x1
  43bbd0:	b.ls	43beac <feof@plt+0x38dcc>  // b.plast
  43bbd4:	ldr	x8, [x26, #16]
  43bbd8:	add	w9, w23, #0x1
  43bbdc:	stur	w23, [x29, #-36]
  43bbe0:	stur	w9, [x29, #-12]
  43bbe4:	str	x8, [x24]
  43bbe8:	cbz	w22, 43bbf8 <feof@plt+0x38b18>
  43bbec:	mov	w0, #0xc8                  	// #200
  43bbf0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43bbf4:	str	x0, [x24, #32]
  43bbf8:	mov	w8, wzr
  43bbfc:	mov	w23, #0x32                  	// #50
  43bc00:	stur	wzr, [x29, #-16]
  43bc04:	add	w21, w8, #0x2
  43bc08:	stur	w8, [x29, #-8]
  43bc0c:	b	43bc20 <feof@plt+0x38b40>
  43bc10:	strh	w19, [x20, #24]
  43bc14:	ldrb	w8, [x27, #4]
  43bc18:	cmp	w8, #0x16
  43bc1c:	b.eq	43be18 <feof@plt+0x38d38>  // b.none
  43bc20:	ldr	x8, [x24]
  43bc24:	ldr	x9, [x26, #24]
  43bc28:	add	x8, x8, x21, lsl #3
  43bc2c:	cmp	x9, x8
  43bc30:	b.cs	43bc50 <feof@plt+0x38b70>  // b.hs, b.nlast
  43bc34:	mov	w2, #0x1f40                	// #8000
  43bc38:	mov	x0, x20
  43bc3c:	mov	x1, x26
  43bc40:	bl	433ee4 <feof@plt+0x30e04>
  43bc44:	ldr	x8, [x0, #16]
  43bc48:	mov	x26, x0
  43bc4c:	str	x8, [x24]
  43bc50:	cbz	w22, 43bc70 <feof@plt+0x38b90>
  43bc54:	cmp	w21, w23
  43bc58:	b.ls	43bc70 <feof@plt+0x38b90>  // b.plast
  43bc5c:	ldr	x0, [x24, #32]
  43bc60:	add	w23, w23, #0x3e8
  43bc64:	lsl	x1, x23, #2
  43bc68:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43bc6c:	str	x0, [x24, #32]
  43bc70:	sub	x1, x29, #0x4
  43bc74:	mov	x0, x20
  43bc78:	bl	4385d8 <feof@plt+0x354f8>
  43bc7c:	ldrb	w8, [x0, #4]
  43bc80:	mov	x28, x0
  43bc84:	cmp	w8, #0x51
  43bc88:	b.ne	43bd3c <feof@plt+0x38c5c>  // b.any
  43bc8c:	mov	x0, x20
  43bc90:	bl	42ff34 <feof@plt+0x2ce54>
  43bc94:	ldr	q0, [x28]
  43bc98:	ldr	x8, [x28, #16]
  43bc9c:	mov	x27, x0
  43bca0:	str	q0, [x0]
  43bca4:	str	x8, [x0, #16]
  43bca8:	ldr	x28, [x25]
  43bcac:	cbz	x28, 43bce4 <feof@plt+0x38c04>
  43bcb0:	ldp	x8, x9, [x28, #16]
  43bcb4:	sub	x9, x9, x8
  43bcb8:	cmp	x9, #0x8
  43bcbc:	b.cs	43bcf8 <feof@plt+0x38c18>  // b.hs, b.nlast
  43bcc0:	ldr	x9, [x28, #8]
  43bcc4:	mov	x0, x20
  43bcc8:	sub	x8, x8, x9
  43bccc:	lsl	x1, x8, #1
  43bcd0:	bl	433e38 <feof@plt+0x30d58>
  43bcd4:	str	x0, [x25]
  43bcd8:	str	x28, [x0]
  43bcdc:	ldr	x28, [x25]
  43bce0:	b	43bcf8 <feof@plt+0x38c18>
  43bce4:	mov	w1, #0x100                 	// #256
  43bce8:	mov	x0, x20
  43bcec:	bl	433e38 <feof@plt+0x30d58>
  43bcf0:	mov	x28, x0
  43bcf4:	str	x0, [x25]
  43bcf8:	ldr	x8, [x28, #16]
  43bcfc:	str	x27, [x8]
  43bd00:	ldr	x8, [x25]
  43bd04:	ldr	x9, [x8, #16]
  43bd08:	add	x9, x9, #0x8
  43bd0c:	str	x9, [x8, #16]
  43bd10:	ldrb	w8, [x27, #4]
  43bd14:	cmp	w8, #0x52
  43bd18:	b.eq	43bc10 <feof@plt+0x38b30>  // b.none
  43bd1c:	sub	x1, x29, #0x4
  43bd20:	mov	x0, x20
  43bd24:	bl	4385d8 <feof@plt+0x354f8>
  43bd28:	ldrb	w8, [x0, #4]
  43bd2c:	mov	x27, x0
  43bd30:	cmp	w8, #0x16
  43bd34:	b.ne	43bca8 <feof@plt+0x38bc8>  // b.any
  43bd38:	b	43bc10 <feof@plt+0x38b30>
  43bd3c:	sub	w9, w8, #0x13
  43bd40:	cmp	w9, #0x12
  43bd44:	b.hi	43bd94 <feof@plt+0x38cb4>  // b.pmore
  43bd48:	adrp	x11, 470000 <_obstack_memory_used@@Base+0xe838>
  43bd4c:	add	x11, x11, #0x7ce
  43bd50:	adr	x8, 43bd64 <feof@plt+0x38c84>
  43bd54:	ldrb	w10, [x11, x9]
  43bd58:	add	x8, x8, x10, lsl #2
  43bd5c:	mov	x27, x28
  43bd60:	br	x8
  43bd64:	ldur	w8, [x29, #-16]
  43bd68:	ldur	w12, [x29, #-8]
  43bd6c:	cbnz	w8, 43bddc <feof@plt+0x38cfc>
  43bd70:	ldur	x9, [x29, #-24]
  43bd74:	ldrb	w8, [x9, #19]
  43bd78:	tbz	w8, #3, 43be14 <feof@plt+0x38d34>
  43bd7c:	ldrh	w8, [x9, #16]
  43bd80:	ldur	w9, [x29, #-12]
  43bd84:	cmp	w9, w8
  43bd88:	b.ne	43be14 <feof@plt+0x38d34>  // b.any
  43bd8c:	stur	wzr, [x29, #-16]
  43bd90:	b	43bddc <feof@plt+0x38cfc>
  43bd94:	cmp	w8, #0x53
  43bd98:	b.ne	43bdc8 <feof@plt+0x38ce8>  // b.any
  43bd9c:	ldur	w12, [x29, #-8]
  43bda0:	mov	w8, wzr
  43bda4:	cbz	w12, 43bc04 <feof@plt+0x38b24>
  43bda8:	b	43bddc <feof@plt+0x38cfc>
  43bdac:	ldur	w8, [x29, #-16]
  43bdb0:	add	w8, w8, #0x1
  43bdb4:	b	43bdc4 <feof@plt+0x38ce4>
  43bdb8:	ldur	w8, [x29, #-16]
  43bdbc:	cbz	w8, 43be14 <feof@plt+0x38d34>
  43bdc0:	sub	w8, w8, #0x1
  43bdc4:	stur	w8, [x29, #-16]
  43bdc8:	ldur	w12, [x29, #-8]
  43bdcc:	b	43bddc <feof@plt+0x38cfc>
  43bdd0:	ldrb	w8, [x28, #6]
  43bdd4:	ldur	w12, [x29, #-8]
  43bdd8:	tbnz	w8, #6, 43be14 <feof@plt+0x38d34>
  43bddc:	ldrb	w10, [x20, #1157]
  43bde0:	ldr	x9, [x24]
  43bde4:	mov	w8, w12
  43bde8:	cbz	w10, 43be08 <feof@plt+0x38d28>
  43bdec:	ldr	x10, [x24, #32]
  43bdf0:	ldur	w11, [x29, #-4]
  43bdf4:	str	x28, [x9, x8, lsl #3]
  43bdf8:	cbz	x10, 43be00 <feof@plt+0x38d20>
  43bdfc:	str	w11, [x10, x8, lsl #2]
  43be00:	add	w8, w12, #0x1
  43be04:	b	43bc04 <feof@plt+0x38b24>
  43be08:	str	x28, [x9, x8, lsl #3]
  43be0c:	add	w8, w12, #0x1
  43be10:	b	43bc04 <feof@plt+0x38b24>
  43be14:	mov	x27, x28
  43be18:	ldp	w23, w8, [x29, #-12]
  43be1c:	mov	w8, w8
  43be20:	cbz	x8, 43be44 <feof@plt+0x38d64>
  43be24:	ldr	x9, [x24]
  43be28:	sub	w10, w8, #0x1
  43be2c:	sub	x8, x8, #0x1
  43be30:	ldr	x9, [x9, w10, uxtw #3]
  43be34:	ldrb	w9, [x9, #4]
  43be38:	cmp	w9, #0x53
  43be3c:	b.eq	43be20 <feof@plt+0x38d40>  // b.none
  43be40:	add	w8, w8, #0x1
  43be44:	str	w8, [x24, #24]
  43be48:	ldrb	w11, [x20, #1157]
  43be4c:	ldr	x10, [x24]
  43be50:	mov	w9, w8
  43be54:	cbz	w11, 43be74 <feof@plt+0x38d94>
  43be58:	ldr	x8, [x24, #32]
  43be5c:	ldr	w11, [x20, #688]
  43be60:	ldur	x12, [x29, #-32]
  43be64:	str	x12, [x10, x9, lsl #3]
  43be68:	cbz	x8, 43be7c <feof@plt+0x38d9c>
  43be6c:	str	w11, [x8, x9, lsl #2]
  43be70:	b	43be7c <feof@plt+0x38d9c>
  43be74:	ldur	x8, [x29, #-32]
  43be78:	str	x8, [x10, x9, lsl #3]
  43be7c:	ldur	x8, [x29, #-24]
  43be80:	ldrh	w8, [x8, #16]
  43be84:	cmp	w23, w8
  43be88:	b.hi	43bbc4 <feof@plt+0x38ae4>  // b.pmore
  43be8c:	mov	x10, x24
  43be90:	ldr	x11, [x10], #48
  43be94:	add	w9, w9, #0x1
  43be98:	cmp	w23, w8
  43be9c:	add	x9, x11, w9, uxtw #3
  43bea0:	csel	x24, x24, x10, eq  // eq = none
  43bea4:	str	x9, [x26, #16]
  43bea8:	b	43bbc4 <feof@plt+0x38ae4>
  43beac:	cmp	w9, #0x16
  43beb0:	b.ne	43bef8 <feof@plt+0x38e18>  // b.any
  43beb4:	ldr	x8, [x20, #136]
  43beb8:	ldr	x19, [sp, #32]
  43bebc:	ldr	x8, [x8, #8]
  43bec0:	cbnz	x8, 43becc <feof@plt+0x38dec>
  43bec4:	ldrb	w8, [x20, #16]
  43bec8:	cbz	w8, 43bed8 <feof@plt+0x38df8>
  43becc:	mov	w1, #0x1                   	// #1
  43bed0:	mov	x0, x20
  43bed4:	bl	438d5c <feof@plt+0x35c7c>
  43bed8:	ldr	x8, [sp, #24]
  43bedc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0xe838>
  43bee0:	add	x2, x2, #0xcaf
  43bee4:	mov	w1, #0x3                   	// #3
  43bee8:	ldr	x3, [x8]
  43beec:	mov	x0, x20
  43bef0:	bl	4288a0 <feof@plt+0x257c0>
  43bef4:	b	43bf68 <feof@plt+0x38e88>
  43bef8:	ldr	x19, [sp, #32]
  43befc:	ldur	x1, [x29, #-24]
  43bf00:	ldur	w9, [x29, #-36]
  43bf04:	mov	w25, w23
  43bf08:	cbnz	w9, 43bf28 <feof@plt+0x38e48>
  43bf0c:	cbz	w8, 43bf18 <feof@plt+0x38e38>
  43bf10:	mov	w25, #0x1                   	// #1
  43bf14:	b	43bf28 <feof@plt+0x38e48>
  43bf18:	ldr	x8, [sp, #8]
  43bf1c:	ldr	w8, [x8, #24]
  43bf20:	cmp	w8, #0x0
  43bf24:	cset	w25, ne  // ne = any
  43bf28:	ldr	x2, [sp, #24]
  43bf2c:	mov	x0, x20
  43bf30:	mov	w3, w25
  43bf34:	mov	x21, x1
  43bf38:	bl	4382a0 <feof@plt+0x351c0>
  43bf3c:	tbz	w0, #0, 43bf68 <feof@plt+0x38e88>
  43bf40:	ldrb	w8, [x21, #19]
  43bf44:	tbz	w8, #3, 43bfb8 <feof@plt+0x38ed8>
  43bf48:	ldrh	w8, [x21, #16]
  43bf4c:	cmp	w25, w8
  43bf50:	b.cs	43bf9c <feof@plt+0x38ebc>  // b.hs, b.nlast
  43bf54:	ldr	x10, [sp, #8]
  43bf58:	mov	w9, #0x30                  	// #48
  43bf5c:	madd	x8, x8, x9, x10
  43bf60:	stur	xzr, [x8, #-48]
  43bf64:	b	43bfb8 <feof@plt+0x38ed8>
  43bf68:	mov	x0, x20
  43bf6c:	mov	x1, x19
  43bf70:	bl	433e18 <feof@plt+0x30d38>
  43bf74:	mov	x19, xzr
  43bf78:	mov	x0, x19
  43bf7c:	ldp	x20, x19, [sp, #160]
  43bf80:	ldp	x22, x21, [sp, #144]
  43bf84:	ldp	x24, x23, [sp, #128]
  43bf88:	ldp	x26, x25, [sp, #112]
  43bf8c:	ldp	x28, x27, [sp, #96]
  43bf90:	ldp	x29, x30, [sp, #80]
  43bf94:	add	sp, sp, #0xb0
  43bf98:	ret
  43bf9c:	cmp	w25, #0x1
  43bfa0:	b.ne	43bfb8 <feof@plt+0x38ed8>  // b.any
  43bfa4:	ldr	x9, [sp, #8]
  43bfa8:	ldr	w9, [x9, #24]
  43bfac:	cbnz	w9, 43bfb8 <feof@plt+0x38ed8>
  43bfb0:	ldrb	w9, [x20, #1153]
  43bfb4:	cbz	w9, 43bf54 <feof@plt+0x38e74>
  43bfb8:	ldr	x8, [sp, #16]
  43bfbc:	cbz	x8, 43bf78 <feof@plt+0x38e98>
  43bfc0:	str	w23, [x8]
  43bfc4:	b	43bf78 <feof@plt+0x38e98>
  43bfc8:	sub	sp, sp, #0x60
  43bfcc:	stp	x29, x30, [sp, #16]
  43bfd0:	stp	x26, x25, [sp, #32]
  43bfd4:	stp	x24, x23, [sp, #48]
  43bfd8:	stp	x22, x21, [sp, #64]
  43bfdc:	stp	x20, x19, [sp, #80]
  43bfe0:	ldr	w8, [x1, #24]
  43bfe4:	add	x29, sp, #0x10
  43bfe8:	cbz	w8, 43c1b0 <feof@plt+0x390d0>
  43bfec:	ldr	x8, [x1, #8]
  43bff0:	mov	x20, x1
  43bff4:	cbnz	x8, 43c1b0 <feof@plt+0x390d0>
  43bff8:	ldrb	w8, [x0, #1138]
  43bffc:	ldrb	w21, [x0, #1157]
  43c000:	mov	x19, x0
  43c004:	strb	wzr, [x0, #1138]
  43c008:	cmp	w8, #0x0
  43c00c:	mov	w0, #0x800                 	// #2048
  43c010:	cset	w22, ne  // ne = any
  43c014:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c018:	str	x0, [x20, #8]
  43c01c:	ldrb	w8, [x19, #1157]
  43c020:	cbz	w8, 43c030 <feof@plt+0x38f50>
  43c024:	mov	w0, #0x400                 	// #1024
  43c028:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c02c:	str	x0, [x20, #40]
  43c030:	cbz	w21, 43c0b0 <feof@plt+0x38fd0>
  43c034:	ldr	x8, [x19, #136]
  43c038:	ldr	x25, [x20, #32]
  43c03c:	ldr	x23, [x20]
  43c040:	ldr	w24, [x20, #24]
  43c044:	ldr	w9, [x8, #48]
  43c048:	cmp	w9, #0x2
  43c04c:	add	x9, x8, #0x28
  43c050:	b.ne	43c058 <feof@plt+0x38f78>  // b.any
  43c054:	ldr	x9, [x9]
  43c058:	ldr	x21, [x8]
  43c05c:	ldr	x26, [x9]
  43c060:	cbnz	x21, 43c088 <feof@plt+0x38fa8>
  43c064:	mov	w0, #0x38                  	// #56
  43c068:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c06c:	movi	v0.2d, #0x0
  43c070:	str	xzr, [x0, #48]
  43c074:	stp	q0, q0, [x0, #16]
  43c078:	ldr	x8, [x19, #136]
  43c07c:	mov	x21, x0
  43c080:	stp	xzr, x8, [x0]
  43c084:	str	x0, [x8]
  43c088:	mov	w8, #0x2                   	// #2
  43c08c:	mov	w0, #0x18                  	// #24
  43c090:	str	x21, [x19, #136]
  43c094:	str	w8, [x21, #48]
  43c098:	str	xzr, [x21, #32]
  43c09c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c0a0:	stp	x26, x25, [x0]
  43c0a4:	str	x25, [x0, #16]
  43c0a8:	str	x0, [x21, #40]
  43c0ac:	b	43c0f4 <feof@plt+0x39014>
  43c0b0:	ldr	x8, [x19, #136]
  43c0b4:	ldr	x23, [x20]
  43c0b8:	ldr	w24, [x20, #24]
  43c0bc:	ldr	x21, [x8]
  43c0c0:	cbnz	x21, 43c0e8 <feof@plt+0x39008>
  43c0c4:	mov	w0, #0x38                  	// #56
  43c0c8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c0cc:	movi	v0.2d, #0x0
  43c0d0:	str	xzr, [x0, #48]
  43c0d4:	stp	q0, q0, [x0, #16]
  43c0d8:	ldr	x8, [x19, #136]
  43c0dc:	mov	x21, x0
  43c0e0:	stp	xzr, x8, [x0]
  43c0e4:	str	x0, [x8]
  43c0e8:	str	x21, [x19, #136]
  43c0ec:	stp	xzr, xzr, [x21, #32]
  43c0f0:	str	wzr, [x21, #48]
  43c0f4:	add	w8, w24, #0x1
  43c0f8:	add	x8, x23, w8, uxtw #3
  43c0fc:	stp	x23, x8, [x21, #16]
  43c100:	ldr	w8, [x20, #28]
  43c104:	mov	w21, #0x100                 	// #256
  43c108:	b	43c118 <feof@plt+0x39038>
  43c10c:	str	x0, [x9, x8, lsl #3]
  43c110:	add	w8, w8, #0x1
  43c114:	str	w8, [x20, #28]
  43c118:	add	w23, w8, #0x1
  43c11c:	cmp	x21, x23
  43c120:	b.cs	43c160 <feof@plt+0x39080>  // b.hs, b.nlast
  43c124:	ldr	x0, [x20, #8]
  43c128:	lsl	x1, x23, #4
  43c12c:	lsl	x21, x23, #1
  43c130:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43c134:	str	x0, [x20, #8]
  43c138:	ldrb	w8, [x19, #1157]
  43c13c:	cbz	w8, 43c160 <feof@plt+0x39080>
  43c140:	ldr	x0, [x20, #40]
  43c144:	lsl	x1, x23, #3
  43c148:	cbz	x0, 43c154 <feof@plt+0x39074>
  43c14c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43c150:	b	43c15c <feof@plt+0x3907c>
  43c154:	mov	x0, x1
  43c158:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c15c:	str	x0, [x20, #40]
  43c160:	sub	x1, x29, #0x4
  43c164:	mov	x0, x19
  43c168:	bl	4385d8 <feof@plt+0x354f8>
  43c16c:	ldrb	w8, [x0, #4]
  43c170:	cmp	w8, #0x16
  43c174:	b.eq	43c1a4 <feof@plt+0x390c4>  // b.none
  43c178:	ldr	w8, [x20, #28]
  43c17c:	ldrb	w10, [x19, #1157]
  43c180:	ldr	x9, [x20, #8]
  43c184:	cbz	w10, 43c10c <feof@plt+0x3902c>
  43c188:	ldr	x10, [x20, #40]
  43c18c:	ldur	w11, [x29, #-4]
  43c190:	str	x0, [x9, x8, lsl #3]
  43c194:	cbz	x10, 43c110 <feof@plt+0x39030>
  43c198:	str	w11, [x10, x8, lsl #2]
  43c19c:	ldr	w8, [x20, #28]
  43c1a0:	b	43c110 <feof@plt+0x39030>
  43c1a4:	mov	x0, x19
  43c1a8:	bl	4384c8 <feof@plt+0x353e8>
  43c1ac:	strb	w22, [x19, #1138]
  43c1b0:	ldp	x20, x19, [sp, #80]
  43c1b4:	ldp	x22, x21, [sp, #64]
  43c1b8:	ldp	x24, x23, [sp, #48]
  43c1bc:	ldp	x26, x25, [sp, #32]
  43c1c0:	ldp	x29, x30, [sp, #16]
  43c1c4:	add	sp, sp, #0x60
  43c1c8:	ret
  43c1cc:	stp	x29, x30, [sp, #-16]!
  43c1d0:	ldrb	w8, [x0, #9]
  43c1d4:	mov	x29, sp
  43c1d8:	cbz	w8, 43c250 <feof@plt+0x39170>
  43c1dc:	ldrb	w9, [x1, #4]
  43c1e0:	cmp	w9, #0x35
  43c1e4:	b.ne	43c1fc <feof@plt+0x3911c>  // b.any
  43c1e8:	ldr	x8, [x0]
  43c1ec:	ldr	x10, [x1, #8]
  43c1f0:	ldr	x11, [x8, #1280]
  43c1f4:	cmp	x10, x11
  43c1f8:	b.eq	43c270 <feof@plt+0x39190>  // b.none
  43c1fc:	ldr	w8, [x0, #12]
  43c200:	cmp	w8, #0x1
  43c204:	b.ne	43c224 <feof@plt+0x39144>  // b.any
  43c208:	cmp	w9, #0x14
  43c20c:	b.ne	43c25c <feof@plt+0x3917c>  // b.any
  43c210:	mov	w8, #0x2                   	// #2
  43c214:	str	w8, [x0, #12]
  43c218:	mov	w0, #0x1                   	// #1
  43c21c:	ldp	x29, x30, [sp], #16
  43c220:	ret
  43c224:	cmp	w8, #0x2
  43c228:	b.lt	43c250 <feof@plt+0x39170>  // b.tstop
  43c22c:	b.ne	43c2c4 <feof@plt+0x391e4>  // b.any
  43c230:	cmp	w9, #0x26
  43c234:	b.ne	43c2bc <feof@plt+0x391dc>  // b.any
  43c238:	ldr	x0, [x0]
  43c23c:	ldr	w2, [x1]
  43c240:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  43c244:	add	x3, x3, #0xe04
  43c248:	mov	w1, #0x3                   	// #3
  43c24c:	b	43c290 <feof@plt+0x391b0>
  43c250:	mov	w0, #0x2                   	// #2
  43c254:	ldp	x29, x30, [sp], #16
  43c258:	ret
  43c25c:	ldr	x8, [x0]
  43c260:	ldr	w2, [x0, #20]
  43c264:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  43c268:	add	x3, x3, #0xdd1
  43c26c:	b	43c288 <feof@plt+0x391a8>
  43c270:	ldr	w9, [x0, #12]
  43c274:	cmp	w9, #0x1
  43c278:	b.lt	43c2a0 <feof@plt+0x391c0>  // b.tstop
  43c27c:	ldr	w2, [x1]
  43c280:	adrp	x3, 470000 <_obstack_memory_used@@Base+0xe838>
  43c284:	add	x3, x3, #0xda7
  43c288:	mov	w1, #0x3                   	// #3
  43c28c:	mov	x0, x8
  43c290:	bl	429150 <feof@plt+0x26070>
  43c294:	mov	w0, wzr
  43c298:	ldp	x29, x30, [sp], #16
  43c29c:	ret
  43c2a0:	add	w8, w9, #0x1
  43c2a4:	str	w8, [x0, #12]
  43c2a8:	ldr	w8, [x1]
  43c2ac:	str	w8, [x0, #20]
  43c2b0:	mov	w0, #0x3                   	// #3
  43c2b4:	ldp	x29, x30, [sp], #16
  43c2b8:	ret
  43c2bc:	mov	w8, #0x3                   	// #3
  43c2c0:	str	w8, [x0, #12]
  43c2c4:	ldrb	w9, [x0, #10]
  43c2c8:	strb	wzr, [x0, #10]
  43c2cc:	ldrb	w10, [x1, #4]
  43c2d0:	cmp	w10, #0x14
  43c2d4:	b.eq	43c2fc <feof@plt+0x3921c>  // b.none
  43c2d8:	cmp	w10, #0x15
  43c2dc:	b.eq	43c308 <feof@plt+0x39228>  // b.none
  43c2e0:	cmp	w10, #0x26
  43c2e4:	b.ne	43c32c <feof@plt+0x3924c>  // b.any
  43c2e8:	mov	w8, #0x1                   	// #1
  43c2ec:	strb	w8, [x0, #10]
  43c2f0:	ldr	w8, [x1]
  43c2f4:	str	w8, [x0, #16]
  43c2f8:	b	43c32c <feof@plt+0x3924c>
  43c2fc:	add	w8, w8, #0x1
  43c300:	str	w8, [x0, #12]
  43c304:	b	43c32c <feof@plt+0x3924c>
  43c308:	sub	w8, w8, #0x1
  43c30c:	cmp	w8, #0x2
  43c310:	str	w8, [x0, #12]
  43c314:	b.ne	43c32c <feof@plt+0x3924c>  // b.any
  43c318:	str	wzr, [x0, #12]
  43c31c:	cbnz	w9, 43c238 <feof@plt+0x39158>
  43c320:	mov	w0, #0x4                   	// #4
  43c324:	ldp	x29, x30, [sp], #16
  43c328:	ret
  43c32c:	ldrb	w8, [x0, #8]
  43c330:	cmp	w8, #0x0
  43c334:	mov	w8, #0x1                   	// #1
  43c338:	cinc	w0, w8, ne  // ne = any
  43c33c:	ldp	x29, x30, [sp], #16
  43c340:	ret
  43c344:	mov	w0, #0x1                   	// #1
  43c348:	mov	w1, #0x38                  	// #56
  43c34c:	b	4621fc <_obstack_memory_used@@Base+0xa34>
  43c350:	stp	x29, x30, [sp, #-32]!
  43c354:	stp	x20, x19, [sp, #16]
  43c358:	mov	x19, x0
  43c35c:	ldr	x0, [x0]
  43c360:	mov	x29, sp
  43c364:	cbz	x0, 43c394 <feof@plt+0x392b4>
  43c368:	ldr	w8, [x19, #8]
  43c36c:	cbz	w8, 43c390 <feof@plt+0x392b0>
  43c370:	mov	x20, xzr
  43c374:	ldr	x0, [x0, x20, lsl #3]
  43c378:	bl	402b20 <free@plt>
  43c37c:	ldr	w8, [x19, #8]
  43c380:	ldr	x0, [x19]
  43c384:	add	x20, x20, #0x1
  43c388:	cmp	x20, x8
  43c38c:	b.cc	43c374 <feof@plt+0x39294>  // b.lo, b.ul, b.last
  43c390:	bl	402b20 <free@plt>
  43c394:	ldr	x0, [x19, #16]
  43c398:	cbz	x0, 43c3c8 <feof@plt+0x392e8>
  43c39c:	ldr	w8, [x19, #24]
  43c3a0:	cbz	w8, 43c3c4 <feof@plt+0x392e4>
  43c3a4:	mov	x20, xzr
  43c3a8:	ldr	x0, [x0, x20, lsl #3]
  43c3ac:	bl	402b20 <free@plt>
  43c3b0:	ldr	w8, [x19, #24]
  43c3b4:	ldr	x0, [x19, #16]
  43c3b8:	add	x20, x20, #0x1
  43c3bc:	cmp	x20, x8
  43c3c0:	b.cc	43c3a8 <feof@plt+0x392c8>  // b.lo, b.ul, b.last
  43c3c4:	bl	402b20 <free@plt>
  43c3c8:	ldr	x0, [x19, #32]
  43c3cc:	cbz	x0, 43c404 <feof@plt+0x39324>
  43c3d0:	ldr	w8, [x19, #48]
  43c3d4:	cbz	w8, 43c3f8 <feof@plt+0x39318>
  43c3d8:	mov	x20, xzr
  43c3dc:	ldr	x0, [x0, x20, lsl #3]
  43c3e0:	bl	402b20 <free@plt>
  43c3e4:	ldr	w8, [x19, #48]
  43c3e8:	ldr	x0, [x19, #32]
  43c3ec:	add	x20, x20, #0x1
  43c3f0:	cmp	x20, x8
  43c3f4:	b.cc	43c3dc <feof@plt+0x392fc>  // b.lo, b.ul, b.last
  43c3f8:	bl	402b20 <free@plt>
  43c3fc:	ldr	x0, [x19, #40]
  43c400:	bl	402b20 <free@plt>
  43c404:	mov	x0, x19
  43c408:	ldp	x20, x19, [sp, #16]
  43c40c:	ldp	x29, x30, [sp], #32
  43c410:	b	402b20 <free@plt>
  43c414:	stp	x29, x30, [sp, #-48]!
  43c418:	stp	x22, x21, [sp, #16]
  43c41c:	stp	x20, x19, [sp, #32]
  43c420:	ldp	w8, w9, [x0, #8]
  43c424:	mov	w20, w2
  43c428:	mov	x19, x0
  43c42c:	mov	x21, x1
  43c430:	cmp	w8, w9
  43c434:	mov	x29, sp
  43c438:	b.ne	43c458 <feof@plt+0x39378>  // b.any
  43c43c:	ldr	x0, [x19]
  43c440:	lsl	w8, w8, #1
  43c444:	add	w8, w8, #0x4
  43c448:	lsl	x1, x8, #3
  43c44c:	str	w8, [x19, #12]
  43c450:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43c454:	str	x0, [x19]
  43c458:	ldr	x8, [x19, #32]
  43c45c:	cbz	x8, 43c4e4 <feof@plt+0x39404>
  43c460:	ldr	w9, [x19, #48]
  43c464:	cbz	w9, 43c4e4 <feof@plt+0x39404>
  43c468:	mov	x22, xzr
  43c46c:	ldr	x9, [x19, #40]
  43c470:	lsl	x10, x22, #3
  43c474:	ldr	x0, [x8, x10]
  43c478:	mov	x1, x21
  43c47c:	ldr	x2, [x9, x10]
  43c480:	bl	45ffd4 <feof@plt+0x5cef4>
  43c484:	cbnz	w0, 43c4c4 <feof@plt+0x393e4>
  43c488:	ldr	x8, [x19, #40]
  43c48c:	ldr	x8, [x8, x22, lsl #3]
  43c490:	add	x9, x21, x8
  43c494:	ldrb	w10, [x9]
  43c498:	cmp	w10, #0x2f
  43c49c:	b.ne	43c4c4 <feof@plt+0x393e4>  // b.any
  43c4a0:	ldrb	w10, [x9, #1]
  43c4a4:	cmp	w10, #0x2e
  43c4a8:	b.ne	43c4dc <feof@plt+0x393fc>  // b.any
  43c4ac:	ldrb	w10, [x9, #2]
  43c4b0:	cmp	w10, #0x2e
  43c4b4:	b.ne	43c4dc <feof@plt+0x393fc>  // b.any
  43c4b8:	ldrb	w9, [x9, #3]
  43c4bc:	cmp	w9, #0x2f
  43c4c0:	b.ne	43c4dc <feof@plt+0x393fc>  // b.any
  43c4c4:	ldr	w8, [x19, #48]
  43c4c8:	add	x22, x22, #0x1
  43c4cc:	cmp	x22, x8
  43c4d0:	b.cs	43c4e4 <feof@plt+0x39404>  // b.hs, b.nlast
  43c4d4:	ldr	x8, [x19, #32]
  43c4d8:	b	43c46c <feof@plt+0x3938c>
  43c4dc:	add	x8, x21, x8
  43c4e0:	add	x21, x8, #0x1
  43c4e4:	ldrb	w8, [x21]
  43c4e8:	cmp	w8, #0x2e
  43c4ec:	b.ne	43c510 <feof@plt+0x39430>  // b.any
  43c4f0:	ldrb	w8, [x21, #1]
  43c4f4:	cmp	w8, #0x2f
  43c4f8:	b.ne	43c510 <feof@plt+0x39430>  // b.any
  43c4fc:	add	x21, x21, #0x1
  43c500:	ldrb	w8, [x21, #1]!
  43c504:	cmp	w8, #0x2f
  43c508:	b.eq	43c500 <feof@plt+0x39420>  // b.none
  43c50c:	b	43c4e8 <feof@plt+0x39408>
  43c510:	mov	x0, x21
  43c514:	cbz	w20, 43c520 <feof@plt+0x39440>
  43c518:	bl	43c548 <feof@plt+0x39468>
  43c51c:	b	43c524 <feof@plt+0x39444>
  43c520:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  43c524:	ldr	w8, [x19, #8]
  43c528:	ldr	x9, [x19]
  43c52c:	add	w10, w8, #0x1
  43c530:	str	w10, [x19, #8]
  43c534:	str	x0, [x9, x8, lsl #3]
  43c538:	ldp	x20, x19, [sp, #32]
  43c53c:	ldp	x22, x21, [sp, #16]
  43c540:	ldp	x29, x30, [sp], #48
  43c544:	ret
  43c548:	stp	x29, x30, [sp, #-32]!
  43c54c:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  43c550:	str	x19, [sp, #16]
  43c554:	mov	x19, x0
  43c558:	mov	w8, wzr
  43c55c:	add	x9, x9, #0xf3
  43c560:	mov	x10, x0
  43c564:	mov	x29, sp
  43c568:	b	43c57c <feof@plt+0x3949c>
  43c56c:	sub	w8, w8, w11
  43c570:	add	w8, w8, #0x1
  43c574:	add	x10, x10, #0x1
  43c578:	add	w8, w8, #0x1
  43c57c:	ldrb	w11, [x10]
  43c580:	cmp	w11, #0x24
  43c584:	b.hi	43c574 <feof@plt+0x39494>  // b.pmore
  43c588:	adr	x12, 43c570 <feof@plt+0x39490>
  43c58c:	ldrb	w13, [x9, x11]
  43c590:	add	x12, x12, x13, lsl #2
  43c594:	br	x12
  43c598:	mov	x11, xzr
  43c59c:	add	x12, x10, x11
  43c5a0:	sub	x12, x12, #0x1
  43c5a4:	cmp	x12, x19
  43c5a8:	b.cc	43c56c <feof@plt+0x3948c>  // b.lo, b.ul, b.last
  43c5ac:	ldrb	w12, [x12]
  43c5b0:	sub	x11, x11, #0x1
  43c5b4:	cmp	w12, #0x5c
  43c5b8:	b.eq	43c59c <feof@plt+0x394bc>  // b.none
  43c5bc:	sub	w8, w8, w11
  43c5c0:	b	43c574 <feof@plt+0x39494>
  43c5c4:	add	w8, w8, #0x1
  43c5c8:	sxtw	x0, w8
  43c5cc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c5d0:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  43c5d4:	sub	x8, x19, #0x1
  43c5d8:	add	x9, x9, #0x118
  43c5dc:	mov	w10, #0x5c                  	// #92
  43c5e0:	mov	w11, #0x24                  	// #36
  43c5e4:	mov	x13, x19
  43c5e8:	mov	x12, x0
  43c5ec:	b	43c600 <feof@plt+0x39520>
  43c5f0:	strb	w10, [x12], #1
  43c5f4:	ldrb	w14, [x13], #1
  43c5f8:	add	x8, x8, #0x1
  43c5fc:	strb	w14, [x12], #1
  43c600:	ldrb	w14, [x13]
  43c604:	cmp	w14, #0x24
  43c608:	b.hi	43c5f4 <feof@plt+0x39514>  // b.pmore
  43c60c:	adr	x15, 43c5f0 <feof@plt+0x39510>
  43c610:	ldrb	w16, [x9, x14]
  43c614:	add	x15, x15, x16, lsl #2
  43c618:	br	x15
  43c61c:	mov	x14, x8
  43c620:	cmp	x14, x19
  43c624:	b.cc	43c5f0 <feof@plt+0x39510>  // b.lo, b.ul, b.last
  43c628:	ldrb	w15, [x14], #-1
  43c62c:	strb	w10, [x12], #1
  43c630:	cmp	w15, #0x5c
  43c634:	b.eq	43c620 <feof@plt+0x39540>  // b.none
  43c638:	b	43c5f4 <feof@plt+0x39514>
  43c63c:	strb	w11, [x12], #1
  43c640:	b	43c5f4 <feof@plt+0x39514>
  43c644:	ldr	x19, [sp, #16]
  43c648:	strb	wzr, [x12]
  43c64c:	ldp	x29, x30, [sp], #32
  43c650:	ret
  43c654:	stp	x29, x30, [sp, #-48]!
  43c658:	stp	x20, x19, [sp, #32]
  43c65c:	ldr	w8, [x0, #8]
  43c660:	str	x21, [sp, #16]
  43c664:	mov	x29, sp
  43c668:	cbnz	w8, 43c6e0 <feof@plt+0x39600>
  43c66c:	ldrb	w8, [x1]
  43c670:	mov	x19, x0
  43c674:	cbz	w8, 43c6f4 <feof@plt+0x39614>
  43c678:	mov	x0, x1
  43c67c:	bl	4613f4 <feof@plt+0x5e314>
  43c680:	mov	x21, x0
  43c684:	bl	402a50 <strlen@plt>
  43c688:	add	x9, x0, #0x12
  43c68c:	mov	x8, sp
  43c690:	and	x9, x9, #0xfffffffffffffff0
  43c694:	sub	x20, x8, x9
  43c698:	mov	sp, x20
  43c69c:	mov	x0, x20
  43c6a0:	mov	x1, x21
  43c6a4:	bl	402c00 <strcpy@plt>
  43c6a8:	mov	w1, #0x2e                  	// #46
  43c6ac:	mov	x0, x20
  43c6b0:	bl	402e50 <strrchr@plt>
  43c6b4:	cbnz	x0, 43c6c4 <feof@plt+0x395e4>
  43c6b8:	mov	x0, x20
  43c6bc:	bl	402a50 <strlen@plt>
  43c6c0:	add	x0, x20, x0
  43c6c4:	mov	w8, #0x6f2e                	// #28462
  43c6c8:	strb	wzr, [x0, #2]
  43c6cc:	strh	w8, [x0]
  43c6d0:	mov	w2, #0x1                   	// #1
  43c6d4:	mov	x0, x19
  43c6d8:	mov	x1, x20
  43c6dc:	bl	43c414 <feof@plt+0x39334>
  43c6e0:	mov	sp, x29
  43c6e4:	ldp	x20, x19, [sp, #32]
  43c6e8:	ldr	x21, [sp, #16]
  43c6ec:	ldp	x29, x30, [sp], #48
  43c6f0:	ret
  43c6f4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0xe838>
  43c6f8:	add	x1, x1, #0x451
  43c6fc:	mov	w2, #0x1                   	// #1
  43c700:	mov	x0, x19
  43c704:	mov	sp, x29
  43c708:	ldp	x20, x19, [sp, #32]
  43c70c:	ldr	x21, [sp, #16]
  43c710:	ldp	x29, x30, [sp], #48
  43c714:	b	43c414 <feof@plt+0x39334>
  43c718:	stp	x29, x30, [sp, #-48]!
  43c71c:	stp	x20, x19, [sp, #32]
  43c720:	ldr	x8, [x0, #32]
  43c724:	mov	x19, x0
  43c728:	mov	x20, x1
  43c72c:	str	x21, [sp, #16]
  43c730:	mov	x29, sp
  43c734:	cbz	x8, 43c7bc <feof@plt+0x396dc>
  43c738:	ldr	w9, [x19, #48]
  43c73c:	cbz	w9, 43c7bc <feof@plt+0x396dc>
  43c740:	mov	x21, xzr
  43c744:	ldr	x9, [x19, #40]
  43c748:	lsl	x10, x21, #3
  43c74c:	ldr	x0, [x8, x10]
  43c750:	mov	x1, x20
  43c754:	ldr	x2, [x9, x10]
  43c758:	bl	45ffd4 <feof@plt+0x5cef4>
  43c75c:	cbnz	w0, 43c79c <feof@plt+0x396bc>
  43c760:	ldr	x8, [x19, #40]
  43c764:	ldr	x8, [x8, x21, lsl #3]
  43c768:	add	x9, x20, x8
  43c76c:	ldrb	w10, [x9]
  43c770:	cmp	w10, #0x2f
  43c774:	b.ne	43c79c <feof@plt+0x396bc>  // b.any
  43c778:	ldrb	w10, [x9, #1]
  43c77c:	cmp	w10, #0x2e
  43c780:	b.ne	43c7b4 <feof@plt+0x396d4>  // b.any
  43c784:	ldrb	w10, [x9, #2]
  43c788:	cmp	w10, #0x2e
  43c78c:	b.ne	43c7b4 <feof@plt+0x396d4>  // b.any
  43c790:	ldrb	w9, [x9, #3]
  43c794:	cmp	w9, #0x2f
  43c798:	b.ne	43c7b4 <feof@plt+0x396d4>  // b.any
  43c79c:	ldr	w8, [x19, #48]
  43c7a0:	add	x21, x21, #0x1
  43c7a4:	cmp	x21, x8
  43c7a8:	b.cs	43c7bc <feof@plt+0x396dc>  // b.hs, b.nlast
  43c7ac:	ldr	x8, [x19, #32]
  43c7b0:	b	43c744 <feof@plt+0x39664>
  43c7b4:	add	x8, x20, x8
  43c7b8:	add	x20, x8, #0x1
  43c7bc:	ldrb	w8, [x20]
  43c7c0:	cmp	w8, #0x2e
  43c7c4:	b.ne	43c7e8 <feof@plt+0x39708>  // b.any
  43c7c8:	ldrb	w8, [x20, #1]
  43c7cc:	cmp	w8, #0x2f
  43c7d0:	b.ne	43c7e8 <feof@plt+0x39708>  // b.any
  43c7d4:	add	x20, x20, #0x1
  43c7d8:	ldrb	w8, [x20, #1]!
  43c7dc:	cmp	w8, #0x2f
  43c7e0:	b.eq	43c7d8 <feof@plt+0x396f8>  // b.none
  43c7e4:	b	43c7c0 <feof@plt+0x396e0>
  43c7e8:	mov	x0, x20
  43c7ec:	bl	43c548 <feof@plt+0x39468>
  43c7f0:	ldp	w8, w9, [x19, #24]
  43c7f4:	mov	x20, x0
  43c7f8:	cmp	w8, w9
  43c7fc:	b.ne	43c824 <feof@plt+0x39744>  // b.any
  43c800:	ldr	x0, [x19, #16]
  43c804:	lsl	w8, w8, #1
  43c808:	add	w8, w8, #0x8
  43c80c:	lsl	x1, x8, #3
  43c810:	str	w8, [x19, #28]
  43c814:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43c818:	ldr	w8, [x19, #24]
  43c81c:	str	x0, [x19, #16]
  43c820:	b	43c828 <feof@plt+0x39748>
  43c824:	ldr	x0, [x19, #16]
  43c828:	add	w9, w8, #0x1
  43c82c:	str	w9, [x19, #24]
  43c830:	str	x20, [x0, w8, uxtw #3]
  43c834:	ldp	x20, x19, [sp, #32]
  43c838:	ldr	x21, [sp, #16]
  43c83c:	ldp	x29, x30, [sp], #48
  43c840:	ret
  43c844:	stp	x29, x30, [sp, #-64]!
  43c848:	stp	x24, x23, [sp, #16]
  43c84c:	stp	x22, x21, [sp, #32]
  43c850:	stp	x20, x19, [sp, #48]
  43c854:	ldrb	w8, [x1]
  43c858:	mov	x29, sp
  43c85c:	cbz	w8, 43c92c <feof@plt+0x3984c>
  43c860:	mov	x20, x1
  43c864:	mov	x19, x0
  43c868:	b	43c894 <feof@plt+0x397b4>
  43c86c:	ldr	x9, [x19, #32]
  43c870:	mov	w10, w8
  43c874:	lsl	x10, x10, #3
  43c878:	add	w8, w8, #0x1
  43c87c:	str	x22, [x9, x10]
  43c880:	ldr	x9, [x19, #40]
  43c884:	str	x21, [x9, x10]
  43c888:	str	w8, [x19, #48]
  43c88c:	ldrb	w8, [x20]
  43c890:	cbz	w8, 43c92c <feof@plt+0x3984c>
  43c894:	add	x23, x20, #0x1
  43c898:	ands	w8, w8, #0xff
  43c89c:	b.eq	43c8b4 <feof@plt+0x397d4>  // b.none
  43c8a0:	cmp	w8, #0x3a
  43c8a4:	b.eq	43c8b4 <feof@plt+0x397d4>  // b.none
  43c8a8:	ldrb	w8, [x23], #1
  43c8ac:	ands	w8, w8, #0xff
  43c8b0:	b.ne	43c8a0 <feof@plt+0x397c0>  // b.any
  43c8b4:	sub	x24, x23, #0x1
  43c8b8:	sub	x21, x24, x20
  43c8bc:	add	x0, x21, #0x1
  43c8c0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43c8c4:	mov	x1, x20
  43c8c8:	mov	x2, x21
  43c8cc:	mov	x22, x0
  43c8d0:	bl	4029c0 <memcpy@plt>
  43c8d4:	strb	wzr, [x22, x21]
  43c8d8:	ldurb	w9, [x23, #-1]
  43c8dc:	ldp	w8, w10, [x19, #48]
  43c8e0:	cmp	w9, #0x3a
  43c8e4:	csel	x20, x23, x24, eq  // eq = none
  43c8e8:	cmp	w8, w10
  43c8ec:	b.ne	43c86c <feof@plt+0x3978c>  // b.any
  43c8f0:	ldr	x0, [x19, #32]
  43c8f4:	lsl	w8, w8, #1
  43c8f8:	add	w8, w8, #0x8
  43c8fc:	lsl	x1, x8, #3
  43c900:	str	w8, [x19, #52]
  43c904:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43c908:	ldr	w9, [x19, #52]
  43c90c:	ldr	x8, [x19, #40]
  43c910:	str	x0, [x19, #32]
  43c914:	lsl	x1, x9, #3
  43c918:	mov	x0, x8
  43c91c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43c920:	ldr	w8, [x19, #48]
  43c924:	str	x0, [x19, #40]
  43c928:	b	43c86c <feof@plt+0x3978c>
  43c92c:	ldp	x20, x19, [sp, #48]
  43c930:	ldp	x22, x21, [sp, #32]
  43c934:	ldp	x24, x23, [sp, #16]
  43c938:	ldp	x29, x30, [sp], #64
  43c93c:	ret
  43c940:	stp	x29, x30, [sp, #-80]!
  43c944:	stp	x26, x25, [sp, #16]
  43c948:	stp	x24, x23, [sp, #32]
  43c94c:	stp	x22, x21, [sp, #48]
  43c950:	stp	x20, x19, [sp, #64]
  43c954:	ldr	w8, [x0, #8]
  43c958:	sub	w9, w2, #0x1
  43c95c:	cmp	w9, #0x21
  43c960:	mov	w9, #0x22                  	// #34
  43c964:	mov	x19, x1
  43c968:	mov	x20, x0
  43c96c:	csel	w24, w9, w2, cc  // cc = lo, ul, last
  43c970:	mov	x29, sp
  43c974:	cbz	w8, 43ca3c <feof@plt+0x3995c>
  43c978:	ldr	x8, [x20]
  43c97c:	ldr	x0, [x8]
  43c980:	bl	402a50 <strlen@plt>
  43c984:	ldr	x8, [x20]
  43c988:	mov	x21, x0
  43c98c:	mov	x1, x19
  43c990:	ldr	x8, [x8]
  43c994:	mov	x0, x8
  43c998:	bl	402b50 <fputs_unlocked@plt>
  43c99c:	ldr	w8, [x20, #8]
  43c9a0:	cmp	w8, #0x2
  43c9a4:	b.cc	43ca40 <feof@plt+0x39960>  // b.lo, b.ul, b.last
  43c9a8:	adrp	x22, 471000 <_obstack_memory_used@@Base+0xf838>
  43c9ac:	mov	w25, #0x1                   	// #1
  43c9b0:	add	x22, x22, #0x140
  43c9b4:	mov	w26, #0x20                  	// #32
  43c9b8:	b	43c9ec <feof@plt+0x3990c>
  43c9bc:	mov	x0, x22
  43c9c0:	mov	x1, x19
  43c9c4:	bl	402b50 <fputs_unlocked@plt>
  43c9c8:	ldr	x8, [x20]
  43c9cc:	mov	x1, x19
  43c9d0:	add	w21, w23, #0x1
  43c9d4:	ldr	x0, [x8, x25, lsl #3]
  43c9d8:	bl	402b50 <fputs_unlocked@plt>
  43c9dc:	ldr	w8, [x20, #8]
  43c9e0:	add	x25, x25, #0x1
  43c9e4:	cmp	x25, x8
  43c9e8:	b.cs	43ca40 <feof@plt+0x39960>  // b.hs, b.nlast
  43c9ec:	ldr	x8, [x20]
  43c9f0:	ldr	x0, [x8, x25, lsl #3]
  43c9f4:	bl	402a50 <strlen@plt>
  43c9f8:	mov	x23, x0
  43c9fc:	add	w21, w21, w23
  43ca00:	cbz	w24, 43ca0c <feof@plt+0x3992c>
  43ca04:	cmp	w21, w24
  43ca08:	b.hi	43c9bc <feof@plt+0x398dc>  // b.pmore
  43ca0c:	ldp	x8, x9, [x19, #40]
  43ca10:	cmp	x8, x9
  43ca14:	b.cs	43ca2c <feof@plt+0x3994c>  // b.hs, b.nlast
  43ca18:	add	x9, x8, #0x1
  43ca1c:	str	x9, [x19, #40]
  43ca20:	strb	w26, [x8]
  43ca24:	mov	w23, w21
  43ca28:	b	43c9c8 <feof@plt+0x398e8>
  43ca2c:	mov	w1, #0x20                  	// #32
  43ca30:	mov	x0, x19
  43ca34:	bl	402ad0 <__overflow@plt>
  43ca38:	b	43ca24 <feof@plt+0x39944>
  43ca3c:	mov	w21, wzr
  43ca40:	ldp	x8, x9, [x19, #40]
  43ca44:	cmp	x8, x9
  43ca48:	b.cs	43cafc <feof@plt+0x39a1c>  // b.hs, b.nlast
  43ca4c:	add	x9, x8, #0x1
  43ca50:	mov	w10, #0x3a                  	// #58
  43ca54:	str	x9, [x19, #40]
  43ca58:	strb	w10, [x8]
  43ca5c:	ldr	w8, [x20, #24]
  43ca60:	cbz	w8, 43cb10 <feof@plt+0x39a30>
  43ca64:	adrp	x22, 471000 <_obstack_memory_used@@Base+0xf838>
  43ca68:	mov	x23, xzr
  43ca6c:	add	x22, x22, #0x140
  43ca70:	mov	w25, #0x20                  	// #32
  43ca74:	b	43caa4 <feof@plt+0x399c4>
  43ca78:	mov	x0, x22
  43ca7c:	mov	x1, x19
  43ca80:	bl	402b50 <fputs_unlocked@plt>
  43ca84:	ldr	x8, [x20, #16]
  43ca88:	mov	x1, x19
  43ca8c:	ldr	x0, [x8, x23, lsl #3]
  43ca90:	bl	402b50 <fputs_unlocked@plt>
  43ca94:	ldr	w8, [x20, #24]
  43ca98:	add	x23, x23, #0x1
  43ca9c:	cmp	x23, x8
  43caa0:	b.cs	43cb10 <feof@plt+0x39a30>  // b.hs, b.nlast
  43caa4:	ldr	x8, [x20, #16]
  43caa8:	mov	w26, w21
  43caac:	ldr	x0, [x8, x23, lsl #3]
  43cab0:	bl	402a50 <strlen@plt>
  43cab4:	mov	x21, x0
  43cab8:	add	w8, w26, w21
  43cabc:	add	w26, w8, #0x1
  43cac0:	cbz	w24, 43cacc <feof@plt+0x399ec>
  43cac4:	cmp	w26, w24
  43cac8:	b.hi	43ca78 <feof@plt+0x39998>  // b.pmore
  43cacc:	ldp	x8, x9, [x19, #40]
  43cad0:	cmp	x8, x9
  43cad4:	b.cs	43caec <feof@plt+0x39a0c>  // b.hs, b.nlast
  43cad8:	add	x9, x8, #0x1
  43cadc:	str	x9, [x19, #40]
  43cae0:	strb	w25, [x8]
  43cae4:	mov	w21, w26
  43cae8:	b	43ca84 <feof@plt+0x399a4>
  43caec:	mov	w1, #0x20                  	// #32
  43caf0:	mov	x0, x19
  43caf4:	bl	402ad0 <__overflow@plt>
  43caf8:	b	43cae4 <feof@plt+0x39a04>
  43cafc:	mov	w1, #0x3a                  	// #58
  43cb00:	mov	x0, x19
  43cb04:	bl	402ad0 <__overflow@plt>
  43cb08:	ldr	w8, [x20, #24]
  43cb0c:	cbnz	w8, 43ca64 <feof@plt+0x39984>
  43cb10:	ldp	x8, x9, [x19, #40]
  43cb14:	cmp	x8, x9
  43cb18:	b.cs	43cb44 <feof@plt+0x39a64>  // b.hs, b.nlast
  43cb1c:	add	x9, x8, #0x1
  43cb20:	mov	w10, #0xa                   	// #10
  43cb24:	str	x9, [x19, #40]
  43cb28:	strb	w10, [x8]
  43cb2c:	ldp	x20, x19, [sp, #64]
  43cb30:	ldp	x22, x21, [sp, #48]
  43cb34:	ldp	x24, x23, [sp, #32]
  43cb38:	ldp	x26, x25, [sp, #16]
  43cb3c:	ldp	x29, x30, [sp], #80
  43cb40:	ret
  43cb44:	mov	x0, x19
  43cb48:	ldp	x20, x19, [sp, #64]
  43cb4c:	ldp	x22, x21, [sp, #48]
  43cb50:	ldp	x24, x23, [sp, #32]
  43cb54:	ldp	x26, x25, [sp, #16]
  43cb58:	mov	w1, #0xa                   	// #10
  43cb5c:	ldp	x29, x30, [sp], #80
  43cb60:	b	402ad0 <__overflow@plt>
  43cb64:	stp	x29, x30, [sp, #-64]!
  43cb68:	stp	x22, x21, [sp, #32]
  43cb6c:	stp	x20, x19, [sp, #48]
  43cb70:	ldr	w8, [x0, #24]
  43cb74:	str	x23, [sp, #16]
  43cb78:	mov	x29, sp
  43cb7c:	cmp	w8, #0x2
  43cb80:	b.cc	43cc34 <feof@plt+0x39b54>  // b.lo, b.ul, b.last
  43cb84:	mov	x19, x0
  43cb88:	mov	x20, x1
  43cb8c:	mov	w21, #0x1                   	// #1
  43cb90:	mov	w22, #0xa                   	// #10
  43cb94:	mov	w23, #0x3a                  	// #58
  43cb98:	ldp	x8, x9, [x20, #40]
  43cb9c:	cmp	x8, x9
  43cba0:	b.cs	43cc04 <feof@plt+0x39b24>  // b.hs, b.nlast
  43cba4:	add	x9, x8, #0x1
  43cba8:	str	x9, [x20, #40]
  43cbac:	strb	w22, [x8]
  43cbb0:	ldr	x8, [x19, #16]
  43cbb4:	mov	x1, x20
  43cbb8:	ldr	x0, [x8, x21, lsl #3]
  43cbbc:	bl	402b50 <fputs_unlocked@plt>
  43cbc0:	ldp	x8, x9, [x20, #40]
  43cbc4:	cmp	x8, x9
  43cbc8:	b.cs	43cc14 <feof@plt+0x39b34>  // b.hs, b.nlast
  43cbcc:	add	x9, x8, #0x1
  43cbd0:	str	x9, [x20, #40]
  43cbd4:	strb	w23, [x8]
  43cbd8:	ldp	x8, x9, [x20, #40]
  43cbdc:	cmp	x8, x9
  43cbe0:	b.cs	43cc24 <feof@plt+0x39b44>  // b.hs, b.nlast
  43cbe4:	add	x9, x8, #0x1
  43cbe8:	str	x9, [x20, #40]
  43cbec:	strb	w22, [x8]
  43cbf0:	ldr	w8, [x19, #24]
  43cbf4:	add	x21, x21, #0x1
  43cbf8:	cmp	x21, x8
  43cbfc:	b.cc	43cb98 <feof@plt+0x39ab8>  // b.lo, b.ul, b.last
  43cc00:	b	43cc34 <feof@plt+0x39b54>
  43cc04:	mov	w1, #0xa                   	// #10
  43cc08:	mov	x0, x20
  43cc0c:	bl	402ad0 <__overflow@plt>
  43cc10:	b	43cbb0 <feof@plt+0x39ad0>
  43cc14:	mov	w1, #0x3a                  	// #58
  43cc18:	mov	x0, x20
  43cc1c:	bl	402ad0 <__overflow@plt>
  43cc20:	b	43cbd8 <feof@plt+0x39af8>
  43cc24:	mov	w1, #0xa                   	// #10
  43cc28:	mov	x0, x20
  43cc2c:	bl	402ad0 <__overflow@plt>
  43cc30:	b	43cbf0 <feof@plt+0x39b10>
  43cc34:	ldp	x20, x19, [sp, #48]
  43cc38:	ldp	x22, x21, [sp, #32]
  43cc3c:	ldr	x23, [sp, #16]
  43cc40:	ldp	x29, x30, [sp], #64
  43cc44:	ret
  43cc48:	sub	sp, sp, #0x40
  43cc4c:	stp	x22, x21, [sp, #32]
  43cc50:	stp	x20, x19, [sp, #48]
  43cc54:	mov	x19, x1
  43cc58:	add	x21, x0, #0x18
  43cc5c:	mov	x20, x0
  43cc60:	mov	w1, #0x4                   	// #4
  43cc64:	mov	w2, #0x1                   	// #1
  43cc68:	mov	x0, x21
  43cc6c:	mov	x3, x19
  43cc70:	stp	x29, x30, [sp, #16]
  43cc74:	add	x29, sp, #0x10
  43cc78:	bl	402f80 <fwrite_unlocked@plt>
  43cc7c:	cmp	x0, #0x1
  43cc80:	b.ne	43ccf4 <feof@plt+0x39c14>  // b.any
  43cc84:	ldr	w8, [x21]
  43cc88:	cbz	w8, 43ccec <feof@plt+0x39c0c>
  43cc8c:	mov	x22, xzr
  43cc90:	ldr	x8, [x20, #16]
  43cc94:	ldr	x0, [x8, x22, lsl #3]
  43cc98:	bl	402a50 <strlen@plt>
  43cc9c:	str	x0, [sp, #8]
  43cca0:	add	x0, sp, #0x8
  43cca4:	mov	w1, #0x8                   	// #8
  43cca8:	mov	w2, #0x1                   	// #1
  43ccac:	mov	x3, x19
  43ccb0:	bl	402f80 <fwrite_unlocked@plt>
  43ccb4:	cmp	x0, #0x1
  43ccb8:	b.ne	43ccf4 <feof@plt+0x39c14>  // b.any
  43ccbc:	ldr	x8, [x20, #16]
  43ccc0:	ldr	x1, [sp, #8]
  43ccc4:	mov	w2, #0x1                   	// #1
  43ccc8:	mov	x3, x19
  43cccc:	ldr	x0, [x8, x22, lsl #3]
  43ccd0:	bl	402f80 <fwrite_unlocked@plt>
  43ccd4:	cmp	x0, #0x1
  43ccd8:	b.ne	43ccf4 <feof@plt+0x39c14>  // b.any
  43ccdc:	ldr	w8, [x21]
  43cce0:	add	x22, x22, #0x1
  43cce4:	cmp	x22, x8
  43cce8:	b.cc	43cc90 <feof@plt+0x39bb0>  // b.lo, b.ul, b.last
  43ccec:	mov	w0, wzr
  43ccf0:	b	43ccf8 <feof@plt+0x39c18>
  43ccf4:	mov	w0, #0xffffffff            	// #-1
  43ccf8:	ldp	x20, x19, [sp, #48]
  43ccfc:	ldp	x22, x21, [sp, #32]
  43cd00:	ldp	x29, x30, [sp, #16]
  43cd04:	add	sp, sp, #0x40
  43cd08:	ret
  43cd0c:	sub	sp, sp, #0x60
  43cd10:	stp	x29, x30, [sp, #16]
  43cd14:	stp	x20, x19, [sp, #80]
  43cd18:	add	x29, sp, #0x10
  43cd1c:	mov	x20, x1
  43cd20:	stp	x22, x21, [sp, #64]
  43cd24:	mov	x19, x2
  43cd28:	mov	x21, x0
  43cd2c:	sub	x0, x29, #0x4
  43cd30:	mov	w1, #0x1                   	// #1
  43cd34:	mov	w2, #0x4                   	// #4
  43cd38:	mov	x3, x20
  43cd3c:	stp	x26, x25, [sp, #32]
  43cd40:	stp	x24, x23, [sp, #48]
  43cd44:	bl	402b30 <fread_unlocked@plt>
  43cd48:	cmp	x0, #0x4
  43cd4c:	b.ne	43ce00 <feof@plt+0x39d20>  // b.any
  43cd50:	mov	w0, #0x200                 	// #512
  43cd54:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43cd58:	ldur	w25, [x29, #-4]
  43cd5c:	mov	x22, x0
  43cd60:	cbz	w25, 43ce08 <feof@plt+0x39d28>
  43cd64:	mov	w26, wzr
  43cd68:	mov	w23, #0x200                 	// #512
  43cd6c:	b	43cd7c <feof@plt+0x39c9c>
  43cd70:	add	w26, w26, #0x1
  43cd74:	cmp	w26, w25
  43cd78:	b.cs	43ce08 <feof@plt+0x39d28>  // b.hs, b.nlast
  43cd7c:	mov	x0, sp
  43cd80:	mov	w1, #0x1                   	// #1
  43cd84:	mov	w2, #0x8                   	// #8
  43cd88:	mov	x3, x20
  43cd8c:	bl	402b30 <fread_unlocked@plt>
  43cd90:	cmp	x0, #0x8
  43cd94:	b.ne	43ce10 <feof@plt+0x39d30>  // b.any
  43cd98:	ldr	x24, [sp]
  43cd9c:	add	x8, x24, #0x1
  43cda0:	cmp	x23, x8
  43cda4:	b.cs	43cdbc <feof@plt+0x39cdc>  // b.hs, b.nlast
  43cda8:	add	x23, x24, #0x80
  43cdac:	mov	x0, x22
  43cdb0:	mov	x1, x23
  43cdb4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43cdb8:	mov	x22, x0
  43cdbc:	mov	w1, #0x1                   	// #1
  43cdc0:	mov	x0, x22
  43cdc4:	mov	x2, x24
  43cdc8:	mov	x3, x20
  43cdcc:	bl	402b30 <fread_unlocked@plt>
  43cdd0:	cmp	x0, x24
  43cdd4:	b.ne	43ce10 <feof@plt+0x39d30>  // b.any
  43cdd8:	strb	wzr, [x22, x24]
  43cddc:	cbz	x19, 43cd70 <feof@plt+0x39c90>
  43cde0:	mov	x0, x22
  43cde4:	mov	x1, x19
  43cde8:	bl	45ffd0 <feof@plt+0x5cef0>
  43cdec:	cbz	w0, 43cd70 <feof@plt+0x39c90>
  43cdf0:	mov	x0, x21
  43cdf4:	mov	x1, x22
  43cdf8:	bl	43c718 <feof@plt+0x39638>
  43cdfc:	b	43cd70 <feof@plt+0x39c90>
  43ce00:	mov	w19, #0xffffffff            	// #-1
  43ce04:	b	43ce1c <feof@plt+0x39d3c>
  43ce08:	mov	w19, wzr
  43ce0c:	b	43ce14 <feof@plt+0x39d34>
  43ce10:	mov	w19, #0xffffffff            	// #-1
  43ce14:	mov	x0, x22
  43ce18:	bl	402b20 <free@plt>
  43ce1c:	mov	w0, w19
  43ce20:	ldp	x20, x19, [sp, #80]
  43ce24:	ldp	x22, x21, [sp, #64]
  43ce28:	ldp	x24, x23, [sp, #48]
  43ce2c:	ldp	x26, x25, [sp, #32]
  43ce30:	ldp	x29, x30, [sp, #16]
  43ce34:	add	sp, sp, #0x60
  43ce38:	ret
  43ce3c:	stp	x29, x30, [sp, #-48]!
  43ce40:	str	x21, [sp, #16]
  43ce44:	mov	w21, #0x1                   	// #1
  43ce48:	stp	x20, x19, [sp, #32]
  43ce4c:	lsl	w19, w21, w0
  43ce50:	mov	w0, #0x1                   	// #1
  43ce54:	mov	w1, #0x90                  	// #144
  43ce58:	mov	x29, sp
  43ce5c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  43ce60:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x838>
  43ce64:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x960>
  43ce68:	add	x3, x3, #0x1c8
  43ce6c:	add	x4, x4, #0xb20
  43ce70:	mov	x1, xzr
  43ce74:	mov	x2, xzr
  43ce78:	mov	x20, x0
  43ce7c:	bl	461450 <_obstack_begin@@Base>
  43ce80:	mov	w1, #0x8                   	// #8
  43ce84:	mov	x0, x19
  43ce88:	str	xzr, [x20, #48]
  43ce8c:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  43ce90:	str	x0, [x20, #88]
  43ce94:	strb	w21, [x20, #136]
  43ce98:	str	w19, [x20, #112]
  43ce9c:	mov	x0, x20
  43cea0:	ldp	x20, x19, [sp, #32]
  43cea4:	ldr	x21, [sp, #16]
  43cea8:	ldp	x29, x30, [sp], #48
  43ceac:	ret
  43ceb0:	stp	x29, x30, [sp, #-32]!
  43ceb4:	mov	x1, xzr
  43ceb8:	str	x19, [sp, #16]
  43cebc:	mov	x29, sp
  43cec0:	mov	x19, x0
  43cec4:	bl	461734 <_obstack_free@@Base>
  43cec8:	ldrb	w8, [x19, #136]
  43cecc:	cbz	w8, 43ced8 <feof@plt+0x39df8>
  43ced0:	ldr	x0, [x19, #88]
  43ced4:	bl	402b20 <free@plt>
  43ced8:	mov	x0, x19
  43cedc:	ldr	x19, [sp, #16]
  43cee0:	ldp	x29, x30, [sp], #32
  43cee4:	b	402b20 <free@plt>
  43cee8:	mov	w4, w3
  43ceec:	mov	w8, wzr
  43cef0:	cbz	x2, 43cf14 <feof@plt+0x39e34>
  43cef4:	mov	w9, #0x43                  	// #67
  43cef8:	mov	x10, x2
  43cefc:	mov	x11, x1
  43cf00:	ldrb	w12, [x11], #1
  43cf04:	sub	x10, x10, #0x1
  43cf08:	madd	w8, w8, w9, w12
  43cf0c:	sub	w8, w8, #0x71
  43cf10:	cbnz	x10, 43cf00 <feof@plt+0x39e20>
  43cf14:	add	w3, w8, w2
  43cf18:	b	43cf1c <feof@plt+0x39e3c>
  43cf1c:	sub	sp, sp, #0x70
  43cf20:	stp	x29, x30, [sp, #16]
  43cf24:	stp	x28, x27, [sp, #32]
  43cf28:	stp	x26, x25, [sp, #48]
  43cf2c:	stp	x24, x23, [sp, #64]
  43cf30:	stp	x22, x21, [sp, #80]
  43cf34:	stp	x20, x19, [sp, #96]
  43cf38:	ldr	w9, [x0, #112]
  43cf3c:	ldr	w8, [x0, #128]
  43cf40:	ldr	x27, [x0, #88]
  43cf44:	add	x29, sp, #0x10
  43cf48:	sub	w28, w9, #0x1
  43cf4c:	add	w8, w8, #0x1
  43cf50:	stp	w4, w9, [sp, #4]
  43cf54:	and	w26, w28, w3
  43cf58:	str	w8, [x0, #128]
  43cf5c:	ldr	x20, [x27, w26, uxtw #3]
  43cf60:	mov	w23, w3
  43cf64:	mov	x21, x2
  43cf68:	mov	x22, x1
  43cf6c:	mov	x19, x0
  43cf70:	cmn	x20, #0x1
  43cf74:	stur	w26, [x29, #-4]
  43cf78:	b.eq	43cfd0 <feof@plt+0x39ef0>  // b.none
  43cf7c:	cbnz	x20, 43cf90 <feof@plt+0x39eb0>
  43cf80:	ldp	w8, w10, [sp, #4]
  43cf84:	cbnz	w8, 43d054 <feof@plt+0x39f74>
  43cf88:	mov	x20, xzr
  43cf8c:	b	43d1e8 <feof@plt+0x3a108>
  43cf90:	ldr	w8, [x20, #12]
  43cf94:	cmp	w8, w23
  43cf98:	b.ne	43cfc8 <feof@plt+0x39ee8>  // b.any
  43cf9c:	ldr	w8, [x20, #8]
  43cfa0:	cmp	w8, w21
  43cfa4:	b.ne	43cfc8 <feof@plt+0x39ee8>  // b.any
  43cfa8:	ldr	x0, [x20]
  43cfac:	mov	x1, x22
  43cfb0:	mov	x2, x21
  43cfb4:	bl	403090 <bcmp@plt>
  43cfb8:	ldr	w8, [sp, #8]
  43cfbc:	stur	w8, [x29, #-4]
  43cfc0:	cbnz	w0, 43cfd0 <feof@plt+0x39ef0>
  43cfc4:	b	43d1e8 <feof@plt+0x3a108>
  43cfc8:	ldr	w8, [sp, #8]
  43cfcc:	stur	w8, [x29, #-4]
  43cfd0:	ldr	w24, [x19, #132]
  43cfd4:	add	w8, w23, w23, lsl #4
  43cfd8:	and	w8, w28, w8
  43cfdc:	orr	w25, w8, #0x1
  43cfe0:	add	w24, w24, #0x1
  43cfe4:	add	w8, w26, w25
  43cfe8:	str	w24, [x19, #132]
  43cfec:	and	w26, w8, w28
  43cff0:	ldr	x20, [x27, w26, uxtw #3]
  43cff4:	cbz	x20, 43d048 <feof@plt+0x39f68>
  43cff8:	cmn	x20, #0x1
  43cffc:	b.eq	43d030 <feof@plt+0x39f50>  // b.none
  43d000:	ldr	w8, [x20, #12]
  43d004:	cmp	w8, w23
  43d008:	b.ne	43cfe0 <feof@plt+0x39f00>  // b.any
  43d00c:	ldr	w8, [x20, #8]
  43d010:	cmp	w8, w21
  43d014:	b.ne	43cfe0 <feof@plt+0x39f00>  // b.any
  43d018:	ldr	x0, [x20]
  43d01c:	mov	x1, x22
  43d020:	mov	x2, x21
  43d024:	bl	403090 <bcmp@plt>
  43d028:	cbnz	w0, 43cfe0 <feof@plt+0x39f00>
  43d02c:	b	43d1e8 <feof@plt+0x3a108>
  43d030:	ldr	w8, [sp, #8]
  43d034:	ldur	w9, [x29, #-4]
  43d038:	cmp	w9, w8
  43d03c:	csel	w9, w9, w26, eq  // eq = none
  43d040:	stur	w9, [x29, #-4]
  43d044:	b	43cfe0 <feof@plt+0x39f00>
  43d048:	ldr	w8, [sp, #4]
  43d04c:	ldur	w10, [x29, #-4]
  43d050:	cbz	w8, 43cf88 <feof@plt+0x39ea8>
  43d054:	ldr	w9, [sp, #8]
  43d058:	ldr	x8, [x19, #96]
  43d05c:	mov	x0, x19
  43d060:	cmp	w10, w9
  43d064:	csel	w24, w26, w10, eq  // eq = none
  43d068:	blr	x8
  43d06c:	ldr	x8, [x19, #88]
  43d070:	mov	x20, x0
  43d074:	str	x0, [x8, w24, uxtw #3]
  43d078:	stp	w21, w23, [x0, #8]
  43d07c:	ldr	x8, [x19, #104]
  43d080:	cbz	x8, 43d0a4 <feof@plt+0x39fc4>
  43d084:	add	x0, x21, #0x1
  43d088:	blr	x8
  43d08c:	mov	x1, x22
  43d090:	mov	x2, x21
  43d094:	mov	x23, x0
  43d098:	bl	4029c0 <memcpy@plt>
  43d09c:	strb	wzr, [x23, x21]
  43d0a0:	b	43d130 <feof@plt+0x3a050>
  43d0a4:	ldp	x0, x8, [x19, #24]
  43d0a8:	add	x1, x21, #0x1
  43d0ac:	sub	x8, x8, x0
  43d0b0:	cmp	x8, x1
  43d0b4:	b.cs	43d0c4 <feof@plt+0x39fe4>  // b.hs, b.nlast
  43d0b8:	mov	x0, x19
  43d0bc:	bl	4615ac <_obstack_newchunk@@Base>
  43d0c0:	ldr	x0, [x19, #24]
  43d0c4:	mov	x1, x22
  43d0c8:	mov	x2, x21
  43d0cc:	bl	4029c0 <memcpy@plt>
  43d0d0:	ldr	x8, [x19, #24]
  43d0d4:	add	x8, x8, x21
  43d0d8:	add	x9, x8, #0x1
  43d0dc:	str	x9, [x19, #24]
  43d0e0:	strb	wzr, [x8]
  43d0e4:	ldp	x23, x8, [x19, #16]
  43d0e8:	cmp	x8, x23
  43d0ec:	b.ne	43d0fc <feof@plt+0x3a01c>  // b.any
  43d0f0:	ldrb	w9, [x19, #80]
  43d0f4:	orr	w9, w9, #0x2
  43d0f8:	strb	w9, [x19, #80]
  43d0fc:	ldr	x10, [x19, #48]
  43d100:	ldr	x11, [x19, #8]
  43d104:	ldr	x9, [x19, #32]
  43d108:	add	x8, x10, x8
  43d10c:	bic	x8, x8, x10
  43d110:	sub	x10, x8, x11
  43d114:	sub	x11, x9, x11
  43d118:	cmp	x10, x11
  43d11c:	str	x8, [x19, #24]
  43d120:	b.ls	43d12c <feof@plt+0x3a04c>  // b.plast
  43d124:	mov	x8, x9
  43d128:	str	x9, [x19, #24]
  43d12c:	str	x8, [x19, #16]
  43d130:	str	x23, [x20]
  43d134:	ldp	w8, w9, [x19, #112]
  43d138:	add	w9, w9, #0x1
  43d13c:	add	w10, w8, w8, lsl #1
  43d140:	cmp	w10, w9, lsl #2
  43d144:	str	w9, [x19, #116]
  43d148:	b.hi	43d1e8 <feof@plt+0x3a108>  // b.pmore
  43d14c:	lsl	w21, w8, #1
  43d150:	mov	w1, #0x8                   	// #8
  43d154:	mov	x0, x21
  43d158:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  43d15c:	mov	x22, x0
  43d160:	ldr	x0, [x19, #88]
  43d164:	ldr	w9, [x19, #112]
  43d168:	sub	w8, w21, #0x1
  43d16c:	mov	x10, x0
  43d170:	add	x9, x0, x9, lsl #3
  43d174:	b	43d188 <feof@plt+0x3a0a8>
  43d178:	str	x11, [x22, x12, lsl #3]
  43d17c:	add	x10, x10, #0x8
  43d180:	cmp	x10, x9
  43d184:	b.cs	43d1cc <feof@plt+0x3a0ec>  // b.hs, b.nlast
  43d188:	ldr	x11, [x10]
  43d18c:	add	x12, x11, #0x1
  43d190:	cmp	x12, #0x2
  43d194:	b.cc	43d17c <feof@plt+0x3a09c>  // b.lo, b.ul, b.last
  43d198:	ldr	w13, [x11, #12]
  43d19c:	and	w12, w13, w8
  43d1a0:	ldr	x14, [x22, w12, uxtw #3]
  43d1a4:	cbz	x14, 43d178 <feof@plt+0x3a098>
  43d1a8:	add	w13, w13, w13, lsl #4
  43d1ac:	and	w13, w13, w8
  43d1b0:	orr	w13, w13, #0x1
  43d1b4:	add	w12, w12, w13
  43d1b8:	and	w12, w12, w8
  43d1bc:	ldr	x14, [x22, w12, uxtw #3]
  43d1c0:	cbnz	x14, 43d1b4 <feof@plt+0x3a0d4>
  43d1c4:	mov	w12, w12
  43d1c8:	b	43d178 <feof@plt+0x3a098>
  43d1cc:	ldrb	w8, [x19, #136]
  43d1d0:	cbz	w8, 43d1d8 <feof@plt+0x3a0f8>
  43d1d4:	bl	402b20 <free@plt>
  43d1d8:	mov	w8, #0x1                   	// #1
  43d1dc:	str	x22, [x19, #88]
  43d1e0:	strb	w8, [x19, #136]
  43d1e4:	str	w21, [x19, #112]
  43d1e8:	mov	x0, x20
  43d1ec:	ldp	x20, x19, [sp, #96]
  43d1f0:	ldp	x22, x21, [sp, #80]
  43d1f4:	ldp	x24, x23, [sp, #64]
  43d1f8:	ldp	x26, x25, [sp, #48]
  43d1fc:	ldp	x28, x27, [sp, #32]
  43d200:	ldp	x29, x30, [sp, #16]
  43d204:	add	sp, sp, #0x70
  43d208:	ret
  43d20c:	stp	x29, x30, [sp, #-64]!
  43d210:	stp	x22, x21, [sp, #32]
  43d214:	stp	x20, x19, [sp, #48]
  43d218:	ldr	x22, [x0, #88]
  43d21c:	ldr	w8, [x0, #112]
  43d220:	str	x23, [sp, #16]
  43d224:	mov	x19, x2
  43d228:	mov	x20, x1
  43d22c:	mov	x21, x0
  43d230:	add	x23, x22, x8, lsl #3
  43d234:	mov	x29, sp
  43d238:	b	43d248 <feof@plt+0x3a168>
  43d23c:	add	x22, x22, #0x8
  43d240:	cmp	x22, x23
  43d244:	b.cs	43d268 <feof@plt+0x3a188>  // b.hs, b.nlast
  43d248:	ldr	x1, [x22]
  43d24c:	add	x8, x1, #0x1
  43d250:	cmp	x8, #0x2
  43d254:	b.cc	43d23c <feof@plt+0x3a15c>  // b.lo, b.ul, b.last
  43d258:	ldr	x0, [x21, #120]
  43d25c:	mov	x2, x19
  43d260:	blr	x20
  43d264:	cbnz	w0, 43d23c <feof@plt+0x3a15c>
  43d268:	ldp	x20, x19, [sp, #48]
  43d26c:	ldp	x22, x21, [sp, #32]
  43d270:	ldr	x23, [sp, #16]
  43d274:	ldp	x29, x30, [sp], #64
  43d278:	ret
  43d27c:	stp	x29, x30, [sp, #-64]!
  43d280:	stp	x24, x23, [sp, #16]
  43d284:	stp	x22, x21, [sp, #32]
  43d288:	stp	x20, x19, [sp, #48]
  43d28c:	ldr	x22, [x0, #88]
  43d290:	ldr	w8, [x0, #112]
  43d294:	mov	x19, x2
  43d298:	mov	x20, x1
  43d29c:	mov	x21, x0
  43d2a0:	add	x23, x22, x8, lsl #3
  43d2a4:	mov	x24, #0xffffffffffffffff    	// #-1
  43d2a8:	mov	x29, sp
  43d2ac:	b	43d2bc <feof@plt+0x3a1dc>
  43d2b0:	add	x22, x22, #0x8
  43d2b4:	cmp	x22, x23
  43d2b8:	b.cs	43d2e4 <feof@plt+0x3a204>  // b.hs, b.nlast
  43d2bc:	ldr	x1, [x22]
  43d2c0:	add	x8, x1, #0x1
  43d2c4:	cmp	x8, #0x2
  43d2c8:	b.cc	43d2b0 <feof@plt+0x3a1d0>  // b.lo, b.ul, b.last
  43d2cc:	ldr	x0, [x21, #120]
  43d2d0:	mov	x2, x19
  43d2d4:	blr	x20
  43d2d8:	cbz	w0, 43d2b0 <feof@plt+0x3a1d0>
  43d2dc:	str	x24, [x22]
  43d2e0:	b	43d2b0 <feof@plt+0x3a1d0>
  43d2e4:	ldp	x20, x19, [sp, #48]
  43d2e8:	ldp	x22, x21, [sp, #32]
  43d2ec:	ldp	x24, x23, [sp, #16]
  43d2f0:	ldp	x29, x30, [sp], #64
  43d2f4:	ret
  43d2f8:	stp	x29, x30, [sp, #-64]!
  43d2fc:	stp	x22, x21, [sp, #32]
  43d300:	stp	x20, x19, [sp, #48]
  43d304:	ldrb	w8, [x0, #136]
  43d308:	str	x23, [sp, #16]
  43d30c:	mov	w19, w3
  43d310:	mov	w21, w2
  43d314:	mov	x22, x1
  43d318:	mov	x20, x0
  43d31c:	and	w23, w4, #0x1
  43d320:	mov	x29, sp
  43d324:	cbz	w8, 43d330 <feof@plt+0x3a250>
  43d328:	ldr	x0, [x20, #88]
  43d32c:	bl	402b20 <free@plt>
  43d330:	str	x22, [x20, #88]
  43d334:	stp	w21, w19, [x20, #112]
  43d338:	strb	w23, [x20, #136]
  43d33c:	ldp	x20, x19, [sp, #48]
  43d340:	ldp	x22, x21, [sp, #32]
  43d344:	ldr	x23, [sp, #16]
  43d348:	ldp	x29, x30, [sp], #64
  43d34c:	ret
  43d350:	stp	d11, d10, [sp, #-128]!
  43d354:	stp	d9, d8, [sp, #16]
  43d358:	stp	x29, x30, [sp, #32]
  43d35c:	stp	x26, x25, [sp, #64]
  43d360:	stp	x24, x23, [sp, #80]
  43d364:	stp	x22, x21, [sp, #96]
  43d368:	stp	x20, x19, [sp, #112]
  43d36c:	str	x27, [sp, #48]
  43d370:	ldr	x8, [x0, #88]
  43d374:	ldr	w27, [x0, #112]
  43d378:	mov	x20, x0
  43d37c:	mov	x22, xzr
  43d380:	mov	x19, xzr
  43d384:	mov	x25, xzr
  43d388:	mov	x23, xzr
  43d38c:	add	x9, x8, x27, lsl #3
  43d390:	fmov	d8, xzr
  43d394:	mov	x29, sp
  43d398:	ldr	x10, [x8]
  43d39c:	cbz	x10, 43d3d0 <feof@plt+0x3a2f0>
  43d3a0:	cmn	x10, #0x1
  43d3a4:	b.ne	43d3b0 <feof@plt+0x3a2d0>  // b.any
  43d3a8:	add	x22, x22, #0x1
  43d3ac:	b	43d3d0 <feof@plt+0x3a2f0>
  43d3b0:	ldr	w10, [x10, #8]
  43d3b4:	add	x23, x23, #0x1
  43d3b8:	ucvtf	d0, w10
  43d3bc:	cmp	x19, x10
  43d3c0:	fmul	d0, d0, d0
  43d3c4:	add	x25, x25, x10
  43d3c8:	csel	x19, x10, x19, cc  // cc = lo, ul, last
  43d3cc:	fadd	d8, d8, d0
  43d3d0:	add	x8, x8, #0x8
  43d3d4:	cmp	x8, x9
  43d3d8:	b.cc	43d398 <feof@plt+0x3a2b8>  // b.lo, b.ul, b.last
  43d3dc:	ldr	w24, [x20, #116]
  43d3e0:	adrp	x26, 48a000 <_obstack_memory_used@@Base+0x28838>
  43d3e4:	ldr	x0, [x26, #1464]
  43d3e8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d3ec:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d3f0:	add	x1, x1, #0x150
  43d3f4:	add	x2, x2, #0x167
  43d3f8:	mov	x3, x24
  43d3fc:	lsl	x21, x27, #3
  43d400:	bl	402a70 <fprintf@plt>
  43d404:	ldr	x0, [x26, #1464]
  43d408:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  43d40c:	ucvtf	d0, x23
  43d410:	fmov	d1, x8
  43d414:	fmul	d0, d0, d1
  43d418:	ucvtf	d9, w24
  43d41c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d420:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d424:	fdiv	d0, d0, d9
  43d428:	add	x1, x1, #0x170
  43d42c:	add	x2, x2, #0x183
  43d430:	mov	x3, x23
  43d434:	bl	402a70 <fprintf@plt>
  43d438:	ldr	x0, [x26, #1464]
  43d43c:	ldr	w3, [x20, #112]
  43d440:	adrp	x23, 471000 <_obstack_memory_used@@Base+0xf838>
  43d444:	add	x23, x23, #0x15d
  43d448:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d44c:	add	x2, x2, #0x190
  43d450:	mov	x1, x23
  43d454:	bl	402a70 <fprintf@plt>
  43d458:	ldr	x0, [x26, #1464]
  43d45c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d460:	add	x2, x2, #0x197
  43d464:	mov	x1, x23
  43d468:	mov	x3, x22
  43d46c:	bl	402a70 <fprintf@plt>
  43d470:	ldr	x8, [x20, #104]
  43d474:	cbnz	x8, 43d4b0 <feof@plt+0x3a3d0>
  43d478:	mov	x0, x20
  43d47c:	bl	4617c8 <_obstack_memory_used@@Base>
  43d480:	mov	x8, x0
  43d484:	ldr	x0, [x26, #1464]
  43d488:	lsr	x9, x25, #11
  43d48c:	cmp	x9, #0x5
  43d490:	sub	x8, x8, x25
  43d494:	mov	x3, x25
  43d498:	b.cc	43d4dc <feof@plt+0x3a3fc>  // b.lo, b.ul, b.last
  43d49c:	lsr	x10, x25, #21
  43d4a0:	cmp	x10, #0x4
  43d4a4:	b.hi	43d4d8 <feof@plt+0x3a3f8>  // b.pmore
  43d4a8:	lsr	x3, x25, #10
  43d4ac:	b	43d4dc <feof@plt+0x3a3fc>
  43d4b0:	ldr	x0, [x26, #1464]
  43d4b4:	lsr	x8, x25, #11
  43d4b8:	cmp	x8, #0x5
  43d4bc:	mov	x3, x25
  43d4c0:	b.cc	43d520 <feof@plt+0x3a440>  // b.lo, b.ul, b.last
  43d4c4:	lsr	x9, x25, #21
  43d4c8:	cmp	x9, #0x4
  43d4cc:	b.hi	43d51c <feof@plt+0x3a43c>  // b.pmore
  43d4d0:	lsr	x3, x25, #10
  43d4d4:	b	43d520 <feof@plt+0x3a440>
  43d4d8:	lsr	x3, x25, #20
  43d4dc:	cmp	x25, #0xa00, lsl #12
  43d4e0:	mov	w10, #0x4d                  	// #77
  43d4e4:	mov	w11, #0x6b                  	// #107
  43d4e8:	mov	w12, #0x20                  	// #32
  43d4ec:	lsr	x13, x8, #11
  43d4f0:	csel	w14, w11, w10, cc  // cc = lo, ul, last
  43d4f4:	cmp	x9, #0x5
  43d4f8:	csel	w4, w12, w14, cc  // cc = lo, ul, last
  43d4fc:	cmp	x13, #0x5
  43d500:	mov	x5, x8
  43d504:	b.cc	43d558 <feof@plt+0x3a478>  // b.lo, b.ul, b.last
  43d508:	lsr	x9, x8, #21
  43d50c:	cmp	x9, #0x4
  43d510:	b.hi	43d554 <feof@plt+0x3a474>  // b.pmore
  43d514:	lsr	x5, x8, #10
  43d518:	b	43d558 <feof@plt+0x3a478>
  43d51c:	lsr	x3, x25, #20
  43d520:	cmp	x25, #0xa00, lsl #12
  43d524:	mov	w9, #0x4d                  	// #77
  43d528:	mov	w10, #0x6b                  	// #107
  43d52c:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  43d530:	cmp	x8, #0x5
  43d534:	mov	w8, #0x20                  	// #32
  43d538:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d53c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d540:	csel	w4, w8, w9, cc  // cc = lo, ul, last
  43d544:	add	x1, x1, #0x1a0
  43d548:	add	x2, x2, #0x1ac
  43d54c:	bl	402a70 <fprintf@plt>
  43d550:	b	43d57c <feof@plt+0x3a49c>
  43d554:	lsr	x5, x8, #20
  43d558:	cmp	x8, #0xa00, lsl #12
  43d55c:	csel	w8, w11, w10, cc  // cc = lo, ul, last
  43d560:	cmp	x13, #0x5
  43d564:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d568:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d56c:	csel	w6, w12, w8, cc  // cc = lo, ul, last
  43d570:	add	x1, x1, #0x1b7
  43d574:	add	x2, x2, #0x1d4
  43d578:	bl	402a70 <fprintf@plt>
  43d57c:	ldr	x0, [x26, #1464]
  43d580:	cmp	w27, #0x500
  43d584:	b.cc	43d5a0 <feof@plt+0x3a4c0>  // b.lo, b.ul, b.last
  43d588:	ubfx	x8, x27, #18, #14
  43d58c:	cmp	w8, #0x4
  43d590:	b.hi	43d59c <feof@plt+0x3a4bc>  // b.pmore
  43d594:	lsr	x21, x27, #7
  43d598:	b	43d5a0 <feof@plt+0x3a4c0>
  43d59c:	lsr	x21, x27, #17
  43d5a0:	cmp	w27, #0x140, lsl #12
  43d5a4:	mov	w8, #0x4d                  	// #77
  43d5a8:	mov	w9, #0x6b                  	// #107
  43d5ac:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  43d5b0:	cmp	w27, #0x500
  43d5b4:	mov	w9, #0x20                  	// #32
  43d5b8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d5bc:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d5c0:	csel	w4, w9, w8, cc  // cc = lo, ul, last
  43d5c4:	add	x1, x1, #0x1a0
  43d5c8:	add	x2, x2, #0x1e3
  43d5cc:	mov	x3, x21
  43d5d0:	bl	402a70 <fprintf@plt>
  43d5d4:	ldp	s2, s1, [x20, #128]
  43d5d8:	ldr	x0, [x26, #1464]
  43d5dc:	ucvtf	d0, x25
  43d5e0:	adrp	x21, 471000 <_obstack_memory_used@@Base+0xf838>
  43d5e4:	fdiv	d10, d8, d9
  43d5e8:	fdiv	d8, d0, d9
  43d5ec:	ucvtf	d0, d1
  43d5f0:	ucvtf	d1, d2
  43d5f4:	add	x21, x21, #0x1ef
  43d5f8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d5fc:	fdiv	d0, d0, d1
  43d600:	add	x2, x2, #0x1fa
  43d604:	mov	x1, x21
  43d608:	fmul	d11, d8, d8
  43d60c:	bl	402a70 <fprintf@plt>
  43d610:	ldr	s0, [x20, #128]
  43d614:	ldr	x0, [x26, #1464]
  43d618:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d61c:	add	x2, x2, #0x207
  43d620:	ucvtf	d0, d0
  43d624:	fdiv	d0, d9, d0
  43d628:	mov	x1, x21
  43d62c:	bl	402a70 <fprintf@plt>
  43d630:	fsub	d0, d10, d11
  43d634:	fcmp	d0, #0.0
  43d638:	b.mi	43d6c4 <feof@plt+0x3a5e4>  // b.first
  43d63c:	ldr	x0, [x26, #1464]
  43d640:	fmov	d1, xzr
  43d644:	b.eq	43d670 <feof@plt+0x3a590>  // b.none
  43d648:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43d64c:	ldr	d2, [x8, #328]
  43d650:	mov	v1.16b, v0.16b
  43d654:	fmul	d3, d1, d1
  43d658:	fsub	d3, d3, d0
  43d65c:	fadd	d4, d1, d1
  43d660:	fdiv	d3, d3, d4
  43d664:	fcmp	d3, d2
  43d668:	fsub	d1, d1, d3
  43d66c:	b.gt	43d654 <feof@plt+0x3a574>
  43d670:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d674:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d678:	add	x1, x1, #0x213
  43d67c:	add	x2, x2, #0x22f
  43d680:	mov	v0.16b, v8.16b
  43d684:	bl	402a70 <fprintf@plt>
  43d688:	ldr	x0, [x26, #1464]
  43d68c:	mov	x3, x19
  43d690:	ldp	x20, x19, [sp, #112]
  43d694:	ldp	x22, x21, [sp, #96]
  43d698:	ldp	x24, x23, [sp, #80]
  43d69c:	ldp	x26, x25, [sp, #64]
  43d6a0:	ldr	x27, [sp, #48]
  43d6a4:	ldp	x29, x30, [sp, #32]
  43d6a8:	ldp	d9, d8, [sp, #16]
  43d6ac:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43d6b0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d6b4:	add	x1, x1, #0x15d
  43d6b8:	add	x2, x2, #0x23b
  43d6bc:	ldp	d11, d10, [sp], #128
  43d6c0:	b	402a70 <fprintf@plt>
  43d6c4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0xf838>
  43d6c8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43d6cc:	add	x0, x0, #0x24a
  43d6d0:	add	x2, x2, #0x260
  43d6d4:	mov	w1, #0x165                 	// #357
  43d6d8:	bl	40f560 <feof@plt+0xc480>
  43d6dc:	ldr	x8, [x0]
  43d6e0:	add	x10, x1, x2
  43d6e4:	str	x8, [x0, #8]
  43d6e8:	ldr	x9, [x8]
  43d6ec:	str	x9, [x0, #1344]
  43d6f0:	ldr	x9, [x8, #32]
  43d6f4:	str	x9, [x0, #1352]
  43d6f8:	ldr	x9, [x8, #16]
  43d6fc:	str	x9, [x0, #1360]
  43d700:	strb	wzr, [x8, #104]
  43d704:	stp	x1, x1, [x8]
  43d708:	str	x10, [x8, #32]
  43d70c:	ret
  43d710:	ldr	x8, [x0, #8]
  43d714:	ldr	x9, [x0, #1344]
  43d718:	mov	w10, #0x1                   	// #1
  43d71c:	str	x9, [x8]
  43d720:	ldr	x9, [x0, #1352]
  43d724:	str	x9, [x8, #32]
  43d728:	ldr	x9, [x0, #1360]
  43d72c:	strb	w10, [x8, #104]
  43d730:	str	x9, [x8, #8]
  43d734:	str	xzr, [x0, #8]
  43d738:	ret
  43d73c:	stp	x29, x30, [sp, #-32]!
  43d740:	str	x19, [sp, #16]
  43d744:	mov	x19, x0
  43d748:	mov	x29, sp
  43d74c:	ldr	x8, [x19]
  43d750:	ldrb	w8, [x8, #104]
  43d754:	cbz	w8, 43d764 <feof@plt+0x3a684>
  43d758:	mov	x0, x19
  43d75c:	bl	4317d8 <feof@plt+0x2e6f8>
  43d760:	tbz	w0, #0, 43d790 <feof@plt+0x3a6b0>
  43d764:	mov	x0, x19
  43d768:	mov	x1, xzr
  43d76c:	mov	w2, wzr
  43d770:	bl	43d7a0 <feof@plt+0x3a6c0>
  43d774:	tbz	w0, #0, 43d74c <feof@plt+0x3a66c>
  43d778:	ldrb	w8, [x19, #18]
  43d77c:	cbnz	w8, 43d74c <feof@plt+0x3a66c>
  43d780:	ldr	x8, [x19]
  43d784:	cmp	x8, #0x0
  43d788:	cset	w0, ne  // ne = any
  43d78c:	b	43d794 <feof@plt+0x3a6b4>
  43d790:	mov	w0, wzr
  43d794:	ldr	x19, [sp, #16]
  43d798:	ldp	x29, x30, [sp], #32
  43d79c:	ret
  43d7a0:	sub	sp, sp, #0x100
  43d7a4:	stp	x29, x30, [sp, #160]
  43d7a8:	stp	x28, x27, [sp, #176]
  43d7ac:	stp	x26, x25, [sp, #192]
  43d7b0:	stp	x24, x23, [sp, #208]
  43d7b4:	stp	x22, x21, [sp, #224]
  43d7b8:	stp	x20, x19, [sp, #240]
  43d7bc:	ldr	x8, [x0]
  43d7c0:	ldr	x9, [x0, #136]
  43d7c4:	ldrb	w10, [x0, #19]
  43d7c8:	mov	w25, w2
  43d7cc:	ldr	x8, [x8]
  43d7d0:	mov	x19, x0
  43d7d4:	cmp	w10, #0x0
  43d7d8:	cset	w10, ne  // ne = any
  43d7dc:	str	x8, [x9, #16]
  43d7e0:	ldr	x8, [x0]
  43d7e4:	ldr	x9, [x0, #136]
  43d7e8:	add	x29, sp, #0xa0
  43d7ec:	str	w10, [sp, #60]
  43d7f0:	ldr	x8, [x8, #32]
  43d7f4:	str	x8, [x9, #24]
  43d7f8:	tbnz	w2, #0, 43d810 <feof@plt+0x3a730>
  43d7fc:	ldr	x8, [x19, #1312]
  43d800:	ldr	x9, [x19, #40]
  43d804:	str	x8, [x19, #1328]
  43d808:	ldr	w8, [x9, #60]
  43d80c:	str	w8, [x19, #1336]
  43d810:	str	xzr, [sp, #40]
  43d814:	ldr	x8, [x19]
  43d818:	cmp	x1, #0x0
  43d81c:	mov	w27, wzr
  43d820:	cset	w9, ne  // ne = any
  43d824:	ldr	x8, [x8]
  43d828:	stur	wzr, [x29, #-76]
  43d82c:	str	xzr, [sp, #8]
  43d830:	stur	xzr, [x29, #-72]
  43d834:	str	xzr, [sp, #32]
  43d838:	stur	xzr, [x29, #-64]
  43d83c:	str	wzr, [sp, #64]
  43d840:	str	wzr, [sp, #48]
  43d844:	str	x1, [sp, #72]
  43d848:	str	w9, [sp, #20]
  43d84c:	str	x8, [sp, #24]
  43d850:	stur	w25, [x29, #-52]
  43d854:	ldr	x24, [x19, #136]
  43d858:	ldr	x9, [x19, #1320]
  43d85c:	ldr	x21, [x19, #1328]
  43d860:	ldp	x23, x8, [x24, #16]
  43d864:	sub	x9, x9, x21
  43d868:	sub	x8, x8, x23
  43d86c:	add	x8, x8, #0x3
  43d870:	cmp	x8, x9
  43d874:	b.ls	43d8a8 <feof@plt+0x3a7c8>  // b.plast
  43d878:	ldr	x0, [x19, #1312]
  43d87c:	sub	x20, x21, x0
  43d880:	add	x8, x20, x8
  43d884:	add	x8, x8, x8, lsl #1
  43d888:	lsr	x22, x8, #1
  43d88c:	mov	x1, x22
  43d890:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43d894:	add	x8, x0, x22
  43d898:	add	x21, x0, x20
  43d89c:	str	x0, [x19, #1312]
  43d8a0:	str	x8, [x19, #1320]
  43d8a4:	str	x21, [x19, #1328]
  43d8a8:	ldur	w25, [x29, #-52]
  43d8ac:	mov	w20, w27
  43d8b0:	sub	w27, w27, #0x1
  43d8b4:	b	43d8c0 <feof@plt+0x3a7e0>
  43d8b8:	ldr	x8, [x19]
  43d8bc:	ldr	x23, [x8]
  43d8c0:	ldr	x8, [x24, #8]
  43d8c4:	mov	x28, x23
  43d8c8:	mov	x26, x21
  43d8cc:	cbnz	x8, 43d900 <feof@plt+0x3a820>
  43d8d0:	tbnz	w25, #0, 43d900 <feof@plt+0x3a820>
  43d8d4:	ldr	x8, [x19]
  43d8d8:	ldr	w9, [x8, #56]
  43d8dc:	ldr	x10, [x8, #48]
  43d8e0:	lsl	x9, x9, #4
  43d8e4:	ldr	x9, [x10, x9]
  43d8e8:	cmp	x28, x9
  43d8ec:	b.cc	43d900 <feof@plt+0x3a820>  // b.lo, b.ul, b.last
  43d8f0:	mov	x0, x19
  43d8f4:	mov	w1, wzr
  43d8f8:	str	x28, [x8]
  43d8fc:	bl	42f6a0 <feof@plt+0x2c5c0>
  43d900:	mov	x23, x28
  43d904:	ldrb	w8, [x23], #1
  43d908:	mov	x21, x26
  43d90c:	cmp	w8, #0x7a
  43d910:	strb	w8, [x21], #1
  43d914:	b.hi	43dd24 <feof@plt+0x3ac44>  // b.pmore
  43d918:	adrp	x11, 471000 <_obstack_memory_used@@Base+0xf838>
  43d91c:	add	x11, x11, #0x26c
  43d920:	adr	x9, 43d8c0 <feof@plt+0x3a7e0>
  43d924:	ldrh	w10, [x11, x8, lsl #1]
  43d928:	add	x9, x9, x10, lsl #2
  43d92c:	br	x9
  43d930:	ldr	x8, [x24, #8]
  43d934:	str	x26, [x19, #1328]
  43d938:	cbnz	x8, 43e0c0 <feof@plt+0x3afe0>
  43d93c:	ldr	x8, [x19]
  43d940:	mov	w22, #0x1                   	// #1
  43d944:	str	x23, [x8]
  43d948:	tbnz	w25, #0, 43e588 <feof@plt+0x3b4a8>
  43d94c:	strb	w22, [x8, #104]
  43d950:	ldr	x0, [x19, #40]
  43d954:	mov	w10, #0x18                  	// #24
  43d958:	mov	w2, wzr
  43d95c:	ldr	w8, [x0, #12]
  43d960:	ldr	x9, [x0]
  43d964:	sub	w8, w8, #0x1
  43d968:	smaddl	x8, w8, w10, x9
  43d96c:	ldr	w9, [x0, #60]
  43d970:	ldr	w10, [x8]
  43d974:	ldrb	w11, [x8, #6]
  43d978:	ldr	w8, [x8, #16]
  43d97c:	sub	w9, w9, w10
  43d980:	lsr	w9, w9, w11
  43d984:	add	w8, w8, w9
  43d988:	add	w1, w8, #0x1
  43d98c:	bl	435084 <feof@plt+0x31fa4>
  43d990:	cmp	w27, #0x1
  43d994:	b.hi	43e588 <feof@plt+0x3b4a8>  // b.pmore
  43d998:	ldrb	w8, [x19, #16]
  43d99c:	cbnz	w8, 43e584 <feof@plt+0x3b4a4>
  43d9a0:	mov	x0, x19
  43d9a4:	bl	4317d8 <feof@plt+0x2e6f8>
  43d9a8:	tbz	w0, #0, 43e584 <feof@plt+0x3b4a4>
  43d9ac:	cmp	w20, #0x2
  43d9b0:	b.ne	43d8b8 <feof@plt+0x3a7d8>  // b.any
  43d9b4:	mov	w8, #0x20                  	// #32
  43d9b8:	strb	w8, [x26]
  43d9bc:	b	43d8b8 <feof@plt+0x3a7d8>
  43d9c0:	ldr	w8, [sp, #64]
  43d9c4:	add	x21, x26, #0x1
  43d9c8:	cbnz	w8, 43dfb8 <feof@plt+0x3aed8>
  43d9cc:	ldrb	w8, [x23]
  43d9d0:	cmp	w8, #0x2a
  43d9d4:	b.ne	43dfb4 <feof@plt+0x3aed4>  // b.any
  43d9d8:	ldr	w2, [sp, #20]
  43d9dc:	mov	x0, x19
  43d9e0:	mov	x1, x23
  43d9e4:	str	x21, [x19, #1328]
  43d9e8:	bl	43e654 <feof@plt+0x3b574>
  43d9ec:	ldr	x21, [x19, #1328]
  43d9f0:	mov	x23, x0
  43d9f4:	str	wzr, [sp, #64]
  43d9f8:	b	43d8c0 <feof@plt+0x3a7e0>
  43d9fc:	ldr	x8, [sp, #72]
  43da00:	ldr	w9, [sp, #64]
  43da04:	ldrb	w10, [x19, #18]
  43da08:	cmp	x8, #0x0
  43da0c:	cset	w8, ne  // ne = any
  43da10:	cmp	w9, #0x0
  43da14:	cset	w9, eq  // eq = none
  43da18:	cbnz	w10, 43dd24 <feof@plt+0x3ac44>
  43da1c:	orr	w8, w8, w9
  43da20:	tbz	w8, #0, 43dd24 <feof@plt+0x3ac44>
  43da24:	str	x26, [x19, #1328]
  43da28:	ldrb	w8, [x28]
  43da2c:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  43da30:	mov	x22, xzr
  43da34:	mov	x25, x26
  43da38:	add	x10, x10, #0xe98
  43da3c:	mov	w11, #0x204                 	// #516
  43da40:	add	x9, x28, x22
  43da44:	strb	w8, [x26, x22]
  43da48:	ldrb	w8, [x9, #1]
  43da4c:	add	x25, x25, #0x1
  43da50:	add	x22, x22, #0x1
  43da54:	ldrh	w9, [x10, x8, lsl #1]
  43da58:	tst	w9, w11
  43da5c:	b.ne	43da40 <feof@plt+0x3a960>  // b.any
  43da60:	ldr	x8, [x19, #136]
  43da64:	add	x9, x28, x22
  43da68:	add	x21, x26, x22
  43da6c:	mov	w3, #0x1                   	// #1
  43da70:	str	x9, [x8, #16]
  43da74:	ldr	x1, [x19, #1328]
  43da78:	ldr	x0, [x19, #1088]
  43da7c:	sub	x2, x21, x1
  43da80:	bl	43cee8 <feof@plt+0x39e08>
  43da84:	str	x21, [x19, #1328]
  43da88:	ldr	x23, [x24, #16]
  43da8c:	ldrh	w8, [x0, #18]
  43da90:	mov	x28, x0
  43da94:	cmp	w20, #0x1
  43da98:	b.hi	43daa8 <feof@plt+0x3a9c8>  // b.pmore
  43da9c:	tbz	w8, #1, 43daa8 <feof@plt+0x3a9c8>
  43daa0:	ldrb	w9, [x19, #24]
  43daa4:	cbz	w9, 43dda0 <feof@plt+0x3acc0>
  43daa8:	ldr	x9, [sp, #72]
  43daac:	cbz	x9, 43dabc <feof@plt+0x3a9dc>
  43dab0:	and	w8, w8, #0x3
  43dab4:	cmp	w8, #0x1
  43dab8:	b.eq	43db20 <feof@plt+0x3aa40>  // b.none
  43dabc:	cmp	w20, #0x5
  43dac0:	mov	w27, #0x6                   	// #6
  43dac4:	b.eq	43d8a8 <feof@plt+0x3a7c8>  // b.none
  43dac8:	ldrb	w8, [x19, #20]
  43dacc:	cbz	w8, 43ddc8 <feof@plt+0x3ace8>
  43dad0:	ldr	x8, [x19, #1248]
  43dad4:	mov	w27, #0x3                   	// #3
  43dad8:	cmp	x8, x28
  43dadc:	b.eq	43d8a8 <feof@plt+0x3a7c8>  // b.none
  43dae0:	ldr	x8, [x19, #1288]
  43dae4:	mov	w27, #0x8                   	// #8
  43dae8:	cmp	x8, x28
  43daec:	b.eq	43d8a8 <feof@plt+0x3a7c8>  // b.none
  43daf0:	ldr	x8, [x19, #1296]
  43daf4:	mov	w27, #0x8                   	// #8
  43daf8:	cmp	x8, x28
  43dafc:	b.eq	43d8a8 <feof@plt+0x3a7c8>  // b.none
  43db00:	mov	x21, x25
  43db04:	b	43dd28 <feof@plt+0x3ac48>
  43db08:	ldr	w9, [sp, #64]
  43db0c:	add	x21, x26, #0x1
  43db10:	cmp	w9, w8
  43db14:	b.ne	43dd90 <feof@plt+0x3acb0>  // b.any
  43db18:	str	wzr, [sp, #64]
  43db1c:	b	43dd28 <feof@plt+0x3ac48>
  43db20:	str	x26, [x19, #1328]
  43db24:	ldrh	w2, [x28, #24]
  43db28:	ldr	x1, [sp, #72]
  43db2c:	mov	x0, x19
  43db30:	bl	43e7bc <feof@plt+0x3b6dc>
  43db34:	ldr	x21, [x19, #1312]
  43db38:	b	43dd28 <feof@plt+0x3ac48>
  43db3c:	ldr	x8, [sp, #24]
  43db40:	add	x21, x26, #0x1
  43db44:	cmp	x28, x8
  43db48:	b.ne	43df88 <feof@plt+0x3aea8>  // b.any
  43db4c:	ldr	x8, [x19, #136]
  43db50:	ldr	x8, [x8, #8]
  43db54:	cbnz	x8, 43df88 <feof@plt+0x3aea8>
  43db58:	ldrb	w8, [x19, #16]
  43db5c:	cbnz	w8, 43df88 <feof@plt+0x3aea8>
  43db60:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  43db64:	add	x26, x26, #0xe98
  43db68:	str	x21, [x19, #1328]
  43db6c:	mov	x22, x23
  43db70:	ldrb	w8, [x23], #1
  43db74:	mov	x25, x21
  43db78:	ldrh	w9, [x26, x8, lsl #1]
  43db7c:	strb	w8, [x21], #1
  43db80:	tbnz	w9, #11, 43db6c <feof@plt+0x3aa8c>
  43db84:	cmp	w8, #0x2f
  43db88:	b.ne	43def4 <feof@plt+0x3ae14>  // b.any
  43db8c:	ldrb	w8, [x23]
  43db90:	cmp	w8, #0x2a
  43db94:	b.ne	43def4 <feof@plt+0x3ae14>  // b.any
  43db98:	mov	x0, x19
  43db9c:	mov	x1, x23
  43dba0:	mov	w2, wzr
  43dba4:	str	x21, [x19, #1328]
  43dba8:	bl	43e654 <feof@plt+0x3b574>
  43dbac:	ldr	x21, [x19, #1328]
  43dbb0:	mov	x23, x0
  43dbb4:	b	43db6c <feof@plt+0x3aa8c>
  43dbb8:	ldr	w8, [sp, #64]
  43dbbc:	add	x21, x26, #0x1
  43dbc0:	cbnz	w8, 43dd28 <feof@plt+0x3ac48>
  43dbc4:	ldr	w8, [sp, #48]
  43dbc8:	cmp	w27, #0x7
  43dbcc:	add	w8, w8, #0x1
  43dbd0:	str	w8, [sp, #48]
  43dbd4:	b.hi	43db18 <feof@plt+0x3aa38>  // b.pmore
  43dbd8:	adrp	x10, 471000 <_obstack_memory_used@@Base+0xf838>
  43dbdc:	add	x10, x10, #0x362
  43dbe0:	adr	x8, 43db18 <feof@plt+0x3aa38>
  43dbe4:	ldrb	w9, [x10, x27]
  43dbe8:	add	x8, x8, x9, lsl #2
  43dbec:	br	x8
  43dbf0:	ldur	x11, [x29, #-72]
  43dbf4:	ldrh	w8, [x11, #18]
  43dbf8:	tbnz	w8, #6, 43df98 <feof@plt+0x3aeb8>
  43dbfc:	ldr	x9, [sp, #32]
  43dc00:	ldr	x10, [sp, #8]
  43dc04:	ldr	x8, [x19, #1312]
  43dc08:	str	wzr, [sp, #64]
  43dc0c:	mov	w20, #0x2                   	// #2
  43dc10:	str	x10, [x9]
  43dc14:	mov	w9, #0x1                   	// #1
  43dc18:	str	w9, [sp, #48]
  43dc1c:	add	x21, x8, x10
  43dc20:	b	43dd28 <feof@plt+0x3ac48>
  43dc24:	ldr	w8, [sp, #64]
  43dc28:	add	x21, x26, #0x1
  43dc2c:	cbnz	w8, 43dd28 <feof@plt+0x3ac48>
  43dc30:	ldr	w8, [sp, #48]
  43dc34:	cmp	w20, #0x2
  43dc38:	sub	w8, w8, #0x1
  43dc3c:	b.ne	43de64 <feof@plt+0x3ad84>  // b.any
  43dc40:	cbnz	w8, 43de64 <feof@plt+0x3ad84>
  43dc44:	ldur	x2, [x29, #-72]
  43dc48:	ldrh	w8, [x2, #18]
  43dc4c:	mvn	w8, w8
  43dc50:	tst	w8, #0x3
  43dc54:	b.ne	43de8c <feof@plt+0x3adac>  // b.any
  43dc58:	ldp	w8, w3, [sp, #40]
  43dc5c:	add	w3, w3, #0x1
  43dc60:	cmp	w3, w8
  43dc64:	b.hi	43dc78 <feof@plt+0x3ab98>  // b.pmore
  43dc68:	ldr	x8, [x19, #1312]
  43dc6c:	ldr	x9, [sp, #32]
  43dc70:	sub	x8, x21, x8
  43dc74:	str	x8, [x9, w3, uxtw #3]
  43dc78:	ldr	w8, [sp, #40]
  43dc7c:	movi	v0.2d, #0x0
  43dc80:	sub	x1, x29, #0x30
  43dc84:	mov	x0, x19
  43dc88:	stp	q0, q0, [x29, #-32]
  43dc8c:	stur	q0, [x29, #-48]
  43dc90:	sturh	w8, [x29, #-32]
  43dc94:	str	w3, [sp, #44]
  43dc98:	bl	4382a0 <feof@plt+0x351c0>
  43dc9c:	tbnz	w0, #0, 43e160 <feof@plt+0x3b080>
  43dca0:	mov	w20, wzr
  43dca4:	str	wzr, [sp, #64]
  43dca8:	str	wzr, [sp, #48]
  43dcac:	b	43dd28 <feof@plt+0x3ac48>
  43dcb0:	cmp	w20, #0x2
  43dcb4:	add	x21, x26, #0x1
  43dcb8:	b.ne	43dd28 <feof@plt+0x3ac48>  // b.any
  43dcbc:	ldr	w10, [sp, #44]
  43dcc0:	ldr	w8, [sp, #64]
  43dcc4:	cbnz	w8, 43dd28 <feof@plt+0x3ac48>
  43dcc8:	ldr	w8, [sp, #48]
  43dccc:	cmp	w8, #0x1
  43dcd0:	b.ne	43dd28 <feof@plt+0x3ac48>  // b.any
  43dcd4:	ldr	w8, [sp, #40]
  43dcd8:	add	w10, w10, #0x1
  43dcdc:	str	w10, [sp, #44]
  43dce0:	cmp	w10, w8
  43dce4:	b.ls	43de40 <feof@plt+0x3ad60>  // b.plast
  43dce8:	mov	w8, #0x1                   	// #1
  43dcec:	str	wzr, [sp, #64]
  43dcf0:	str	w8, [sp, #48]
  43dcf4:	mov	w20, #0x2                   	// #2
  43dcf8:	b	43dd28 <feof@plt+0x3ac48>
  43dcfc:	ldp	w8, w9, [sp, #60]
  43dd00:	tst	w8, #0x1
  43dd04:	mov	w8, #0x3e                  	// #62
  43dd08:	csel	w9, w8, w9, ne  // ne = any
  43dd0c:	str	w9, [sp, #64]
  43dd10:	b	43dd24 <feof@plt+0x3ac44>
  43dd14:	ldr	w8, [sp, #64]
  43dd18:	cmp	w8, #0x3e
  43dd1c:	csel	w8, wzr, w8, eq  // eq = none
  43dd20:	str	w8, [sp, #64]
  43dd24:	add	x21, x26, #0x1
  43dd28:	ldrb	w8, [x19, #16]
  43dd2c:	cbnz	w8, 43dd34 <feof@plt+0x3ac54>
  43dd30:	strb	wzr, [x19, #440]
  43dd34:	mov	w8, #0x16b                 	// #363
  43dd38:	lsr	w8, w8, w20
  43dd3c:	tst	w8, #0x1
  43dd40:	csel	w8, w20, wzr, eq  // eq = none
  43dd44:	cmp	w20, #0x9
  43dd48:	str	wzr, [sp, #60]
  43dd4c:	csel	w27, w8, w20, cc  // cc = lo, ul, last
  43dd50:	b	43d8a8 <feof@plt+0x3a7c8>
  43dd54:	ldrb	w8, [x23]
  43dd58:	add	x21, x26, #0x1
  43dd5c:	sub	w9, w8, #0x22
  43dd60:	cmp	w9, #0x3a
  43dd64:	b.hi	43dd28 <feof@plt+0x3ac48>  // b.pmore
  43dd68:	mov	w10, #0x1                   	// #1
  43dd6c:	lsl	x9, x10, x9
  43dd70:	mov	x10, #0x21                  	// #33
  43dd74:	movk	x10, #0x400, lsl #48
  43dd78:	tst	x9, x10
  43dd7c:	b.eq	43dd28 <feof@plt+0x3ac48>  // b.none
  43dd80:	add	x23, x28, #0x2
  43dd84:	add	x21, x26, #0x2
  43dd88:	strb	w8, [x26, #1]
  43dd8c:	b	43dd28 <feof@plt+0x3ac48>
  43dd90:	cmp	w9, #0x0
  43dd94:	csel	w9, w8, w9, eq  // eq = none
  43dd98:	str	w9, [sp, #64]
  43dd9c:	b	43dd28 <feof@plt+0x3ac48>
  43dda0:	strb	wzr, [x19, #440]
  43dda4:	ldrh	w10, [x28, #18]
  43dda8:	and	w8, w10, #0x3
  43ddac:	cmp	w8, #0x3
  43ddb0:	b.ne	43ddd0 <feof@plt+0x3acf0>  // b.any
  43ddb4:	ldr	w9, [x28, #24]
  43ddb8:	cmp	w9, #0xa
  43ddbc:	b.ne	43dfc0 <feof@plt+0x3aee0>  // b.any
  43ddc0:	mov	w8, #0x1                   	// #1
  43ddc4:	b	43dde0 <feof@plt+0x3ad00>
  43ddc8:	add	x21, x26, x22
  43ddcc:	b	43dd28 <feof@plt+0x3ac48>
  43ddd0:	ldr	x9, [x28, #24]
  43ddd4:	ldrb	w11, [x9, #19]
  43ddd8:	tbz	w11, #2, 43dfc0 <feof@plt+0x3aee0>
  43dddc:	ldrh	w8, [x9, #16]
  43dde0:	ldur	x1, [x29, #-64]
  43dde4:	add	x21, x26, x22
  43dde8:	str	w8, [sp, #40]
  43ddec:	cbz	x1, 43ddf8 <feof@plt+0x3ad18>
  43ddf0:	mov	x0, x19
  43ddf4:	bl	433e18 <feof@plt+0x30d38>
  43ddf8:	ldr	w8, [sp, #40]
  43ddfc:	mov	x0, x19
  43de00:	lsl	w8, w8, #3
  43de04:	add	w1, w8, #0x8
  43de08:	bl	433e38 <feof@plt+0x30d58>
  43de0c:	ldr	x8, [x19, #40]
  43de10:	ldr	x9, [x19, #1312]
  43de14:	ldr	x10, [x0, #16]
  43de18:	str	wzr, [sp, #44]
  43de1c:	ldr	w8, [x8, #60]
  43de20:	stur	x0, [x29, #-64]
  43de24:	str	x10, [sp, #32]
  43de28:	mov	w27, #0x1                   	// #1
  43de2c:	stur	w8, [x29, #-76]
  43de30:	sub	x8, x26, x9
  43de34:	str	x8, [sp, #8]
  43de38:	stur	x28, [x29, #-72]
  43de3c:	b	43d8a8 <feof@plt+0x3a7c8>
  43de40:	ldr	x8, [x19, #1312]
  43de44:	mov	w9, #0x1                   	// #1
  43de48:	str	w9, [sp, #48]
  43de4c:	ldr	x9, [sp, #32]
  43de50:	sub	x8, x21, x8
  43de54:	str	wzr, [sp, #64]
  43de58:	mov	w20, #0x2                   	// #2
  43de5c:	str	x8, [x9, w10, uxtw #3]
  43de60:	b	43dd28 <feof@plt+0x3ac48>
  43de64:	cmp	w20, #0x9
  43de68:	str	w8, [sp, #48]
  43de6c:	b.hi	43db18 <feof@plt+0x3aa38>  // b.pmore
  43de70:	mov	w8, #0x1                   	// #1
  43de74:	lsl	w8, w8, w20
  43de78:	mov	w9, #0x290                 	// #656
  43de7c:	tst	w8, w9
  43de80:	b.eq	43db18 <feof@plt+0x3aa38>  // b.none
  43de84:	mov	w20, wzr
  43de88:	b	43db18 <feof@plt+0x3aa38>
  43de8c:	ldr	x1, [x2, #24]
  43de90:	ldp	w9, w10, [sp, #40]
  43de94:	ldrb	w8, [x1, #19]
  43de98:	add	w22, w10, #0x1
  43de9c:	cmp	w22, w9
  43dea0:	orr	w8, w8, #0x20
  43dea4:	strb	w8, [x1, #19]
  43dea8:	b.hi	43debc <feof@plt+0x3addc>  // b.pmore
  43deac:	ldr	x8, [x19, #1312]
  43deb0:	ldr	x9, [sp, #32]
  43deb4:	sub	x8, x21, x8
  43deb8:	str	x8, [x9, w22, uxtw #3]
  43debc:	cbnz	w10, 43e0a0 <feof@plt+0x3afc0>
  43dec0:	ldrh	w8, [x1, #16]
  43dec4:	cbz	w8, 43e08c <feof@plt+0x3afac>
  43dec8:	mov	w22, #0x1                   	// #1
  43decc:	b	43e0a0 <feof@plt+0x3afc0>
  43ded0:	str	wzr, [sp, #64]
  43ded4:	mov	w20, #0x4                   	// #4
  43ded8:	b	43dd28 <feof@plt+0x3ac48>
  43dedc:	str	wzr, [sp, #64]
  43dee0:	mov	w20, #0x7                   	// #7
  43dee4:	b	43dd28 <feof@plt+0x3ac48>
  43dee8:	str	wzr, [sp, #64]
  43deec:	mov	w20, #0x9                   	// #9
  43def0:	b	43dd28 <feof@plt+0x3ac48>
  43def4:	str	x25, [x19, #1328]
  43def8:	ldrb	w8, [x22]
  43defc:	cmp	x8, #0xa
  43df00:	b.eq	43e600 <feof@plt+0x3b520>  // b.none
  43df04:	ldrh	w9, [x26, x8, lsl #1]
  43df08:	tbz	w9, #2, 43df18 <feof@plt+0x3ae38>
  43df0c:	ldr	w10, [x19, #1116]
  43df10:	cmp	w10, #0x15
  43df14:	b.ne	43e5e4 <feof@plt+0x3b504>  // b.any
  43df18:	tbnz	w9, #9, 43df2c <feof@plt+0x3ae4c>
  43df1c:	cmp	w8, #0x24
  43df20:	b.ne	43df74 <feof@plt+0x3ae94>  // b.any
  43df24:	ldrb	w9, [x19, #1146]
  43df28:	cbz	w9, 43df74 <feof@plt+0x3ae94>
  43df2c:	mov	x21, x25
  43df30:	mov	x9, x22
  43df34:	mov	w11, #0x204                 	// #516
  43df38:	strb	w8, [x21], #1
  43df3c:	ldrb	w8, [x9, #1]!
  43df40:	ldrh	w10, [x26, x8, lsl #1]
  43df44:	tst	w10, w11
  43df48:	b.ne	43df38 <feof@plt+0x3ae58>  // b.any
  43df4c:	ldr	x8, [x19, #136]
  43df50:	mov	w3, #0x1                   	// #1
  43df54:	str	x9, [x8, #16]
  43df58:	ldr	x1, [x19, #1328]
  43df5c:	ldr	x0, [x19, #1088]
  43df60:	sub	x2, x21, x1
  43df64:	bl	43cee8 <feof@plt+0x39e08>
  43df68:	str	x21, [x19, #1328]
  43df6c:	ldrb	w8, [x0, #16]
  43df70:	tbnz	w8, #0, 43e5e4 <feof@plt+0x3b504>
  43df74:	ldr	w8, [x19, #1116]
  43df78:	cmp	w8, #0x15
  43df7c:	b.ne	43e5e4 <feof@plt+0x3b504>  // b.any
  43df80:	mov	x21, x25
  43df84:	mov	x23, x22
  43df88:	ldrb	w8, [x19, #20]
  43df8c:	mov	w27, #0x5                   	// #5
  43df90:	cbnz	w8, 43d8a8 <feof@plt+0x3a7c8>
  43df94:	b	43dd28 <feof@plt+0x3ac48>
  43df98:	mvn	w8, w8
  43df9c:	tst	w8, #0x3
  43dfa0:	b.ne	43dfd8 <feof@plt+0x3aef8>  // b.any
  43dfa4:	ldr	w8, [x11, #24]
  43dfa8:	cmp	w8, #0xa
  43dfac:	b.eq	43dfe4 <feof@plt+0x3af04>  // b.none
  43dfb0:	b	43e014 <feof@plt+0x3af34>
  43dfb4:	mov	w8, wzr
  43dfb8:	str	w8, [sp, #64]
  43dfbc:	b	43dd28 <feof@plt+0x3ac48>
  43dfc0:	tbz	w10, #6, 43e0d0 <feof@plt+0x3aff0>
  43dfc4:	cmp	w8, #0x3
  43dfc8:	b.ne	43e030 <feof@plt+0x3af50>  // b.any
  43dfcc:	cmp	w9, #0xa
  43dfd0:	b.eq	43e03c <feof@plt+0x3af5c>  // b.none
  43dfd4:	b	43e06c <feof@plt+0x3af8c>
  43dfd8:	ldr	x8, [x11, #24]
  43dfdc:	ldrb	w8, [x8, #19]
  43dfe0:	tbz	w8, #2, 43e014 <feof@plt+0x3af34>
  43dfe4:	ldr	x8, [x19, #136]
  43dfe8:	mov	w9, #0x1                   	// #1
  43dfec:	b	43dffc <feof@plt+0x3af1c>
  43dff0:	ldr	x8, [x8, #8]
  43dff4:	add	x9, x9, #0x1
  43dff8:	cbz	x8, 43dbfc <feof@plt+0x3ab1c>
  43dffc:	cmp	x9, #0x15
  43e000:	b.cc	43dff0 <feof@plt+0x3af10>  // b.lo, b.ul, b.last
  43e004:	ldr	x10, [x8, #40]
  43e008:	cmp	x10, x11
  43e00c:	b.ne	43dff0 <feof@plt+0x3af10>  // b.any
  43e010:	cbz	x8, 43dbfc <feof@plt+0x3ab1c>
  43e014:	ldr	x3, [x11]
  43e018:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43e01c:	mov	w1, #0x3                   	// #3
  43e020:	mov	x0, x19
  43e024:	add	x2, x2, #0x36a
  43e028:	bl	4288a0 <feof@plt+0x257c0>
  43e02c:	b	43de84 <feof@plt+0x3ada4>
  43e030:	ldr	x8, [x28, #24]
  43e034:	ldrb	w8, [x8, #19]
  43e038:	tbz	w8, #2, 43e06c <feof@plt+0x3af8c>
  43e03c:	ldr	x8, [x19, #136]
  43e040:	mov	w9, #0x1                   	// #1
  43e044:	b	43e054 <feof@plt+0x3af74>
  43e048:	ldr	x8, [x8, #8]
  43e04c:	add	x9, x9, #0x1
  43e050:	cbz	x8, 43e0d0 <feof@plt+0x3aff0>
  43e054:	cmp	x9, #0x15
  43e058:	b.cc	43e048 <feof@plt+0x3af68>  // b.lo, b.ul, b.last
  43e05c:	ldr	x10, [x8, #40]
  43e060:	cmp	x10, x28
  43e064:	b.ne	43e048 <feof@plt+0x3af68>  // b.any
  43e068:	cbz	x8, 43e0d0 <feof@plt+0x3aff0>
  43e06c:	ldr	x3, [x28]
  43e070:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43e074:	mov	w1, #0x3                   	// #3
  43e078:	mov	x0, x19
  43e07c:	add	x2, x2, #0x36a
  43e080:	add	x21, x26, x22
  43e084:	bl	4288a0 <feof@plt+0x257c0>
  43e088:	b	43dd28 <feof@plt+0x3ac48>
  43e08c:	ldr	x8, [x19, #1312]
  43e090:	ldr	x9, [sp, #8]
  43e094:	add	x8, x8, x9
  43e098:	cmp	x8, x26
  43e09c:	cset	w22, ne  // ne = any
  43e0a0:	mov	x0, x19
  43e0a4:	mov	w3, w22
  43e0a8:	bl	4382a0 <feof@plt+0x351c0>
  43e0ac:	tbnz	w0, #0, 43e350 <feof@plt+0x3b270>
  43e0b0:	mov	w20, wzr
  43e0b4:	str	wzr, [sp, #64]
  43e0b8:	stp	w22, wzr, [sp, #44]
  43e0bc:	b	43dd28 <feof@plt+0x3ac48>
  43e0c0:	mov	x0, x19
  43e0c4:	bl	4384c8 <feof@plt+0x353e8>
  43e0c8:	mov	w27, w20
  43e0cc:	b	43d854 <feof@plt+0x3a774>
  43e0d0:	str	x26, [x19, #1328]
  43e0d4:	ldrh	w8, [x28, #18]
  43e0d8:	mov	x20, x28
  43e0dc:	mvn	w8, w8
  43e0e0:	tst	w8, #0x3
  43e0e4:	b.ne	43e12c <feof@plt+0x3b04c>  // b.any
  43e0e8:	mov	x0, x19
  43e0ec:	mov	x1, x20
  43e0f0:	mov	w2, wzr
  43e0f4:	bl	437e44 <feof@plt+0x34d64>
  43e0f8:	mov	x22, x0
  43e0fc:	bl	402a50 <strlen@plt>
  43e100:	mov	x28, x0
  43e104:	add	x1, x0, #0x1
  43e108:	mov	x0, x19
  43e10c:	bl	4335d8 <feof@plt+0x304f8>
  43e110:	mov	x1, x22
  43e114:	mov	x2, x28
  43e118:	mov	x21, x0
  43e11c:	bl	4029c0 <memcpy@plt>
  43e120:	mov	w8, #0xa                   	// #10
  43e124:	strb	w8, [x21, x28]
  43e128:	b	43e144 <feof@plt+0x3b064>
  43e12c:	ldr	x8, [x20, #24]
  43e130:	ldrb	w9, [x8, #19]
  43e134:	ldr	x21, [x8, #24]
  43e138:	ldr	w28, [x8, #12]
  43e13c:	orr	w9, w9, #0x20
  43e140:	strb	w9, [x8, #19]
  43e144:	mov	x0, x19
  43e148:	mov	x1, x20
  43e14c:	mov	x2, x21
  43e150:	mov	x3, x28
  43e154:	bl	438448 <feof@plt+0x35368>
  43e158:	mov	w27, wzr
  43e15c:	b	43d854 <feof@plt+0x3a774>
  43e160:	ldr	x20, [sp, #32]
  43e164:	ldr	x10, [x19, #1312]
  43e168:	mov	x0, x19
  43e16c:	ldp	x9, x8, [x20]
  43e170:	sub	x21, x8, x9
  43e174:	ldr	x8, [sp, #8]
  43e178:	add	x1, x21, #0x2
  43e17c:	add	x8, x10, x8
  43e180:	str	x8, [x19, #1328]
  43e184:	str	x23, [x24, #16]
  43e188:	bl	4335d8 <feof@plt+0x304f8>
  43e18c:	mov	x22, x0
  43e190:	mov	w8, #0x28                  	// #40
  43e194:	strb	w8, [x22], #1
  43e198:	ldr	x8, [x19, #1312]
  43e19c:	ldr	x9, [x20]
  43e1a0:	mov	x25, x0
  43e1a4:	mov	x0, x22
  43e1a8:	mov	x2, x21
  43e1ac:	add	x1, x8, x9
  43e1b0:	bl	4029c0 <memcpy@plt>
  43e1b4:	add	x8, x21, x25
  43e1b8:	mov	w9, #0xa                   	// #10
  43e1bc:	strb	w9, [x8, #1]
  43e1c0:	ldr	x10, [x24, #24]
  43e1c4:	add	x9, x22, x21
  43e1c8:	mov	w2, #0x1                   	// #1
  43e1cc:	mov	x0, x19
  43e1d0:	str	x10, [sp, #64]
  43e1d4:	ldp	x8, x10, [x19]
  43e1d8:	mov	x1, xzr
  43e1dc:	str	x10, [sp, #48]
  43e1e0:	ldrb	w10, [x8, #104]
  43e1e4:	ldr	x27, [x8, #32]
  43e1e8:	ldp	x26, x28, [x8]
  43e1ec:	str	x9, [x8, #32]
  43e1f0:	str	w10, [sp, #4]
  43e1f4:	stp	x25, x25, [x8]
  43e1f8:	strb	wzr, [x8, #104]
  43e1fc:	ldrb	w9, [x19, #16]
  43e200:	str	x8, [x19, #8]
  43e204:	mov	w8, #0x1                   	// #1
  43e208:	strb	w8, [x19, #16]
  43e20c:	ldr	x20, [x24, #8]
  43e210:	cmp	w9, #0x0
  43e214:	cset	w22, ne  // ne = any
  43e218:	str	xzr, [x24, #8]
  43e21c:	bl	43d7a0 <feof@plt+0x3a6c0>
  43e220:	ldr	x9, [x19, #1320]
  43e224:	ldr	x8, [x19, #1328]
  43e228:	strb	w22, [x19, #16]
  43e22c:	sub	x9, x9, x8
  43e230:	cmp	x9, #0x3
  43e234:	b.hi	43e268 <feof@plt+0x3b188>  // b.pmore
  43e238:	ldr	x0, [x19, #1312]
  43e23c:	sub	x21, x8, x0
  43e240:	add	x8, x21, x21, lsl #1
  43e244:	add	x8, x8, #0xc
  43e248:	lsr	x22, x8, #1
  43e24c:	mov	x1, x22
  43e250:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43e254:	add	x9, x0, x22
  43e258:	add	x8, x0, x21
  43e25c:	str	x0, [x19, #1312]
  43e260:	str	x9, [x19, #1320]
  43e264:	str	x8, [x19, #1328]
  43e268:	mov	w9, #0xa                   	// #10
  43e26c:	strb	w9, [x8]
  43e270:	ldr	x8, [x19, #1312]
  43e274:	ldr	x22, [sp, #8]
  43e278:	ldr	x9, [x19]
  43e27c:	mov	x0, x19
  43e280:	mov	w2, wzr
  43e284:	add	x8, x8, x22
  43e288:	stp	x8, x8, [x9]
  43e28c:	ldr	x10, [x19, #1328]
  43e290:	ldur	x21, [x29, #-72]
  43e294:	str	x10, [x9, #32]
  43e298:	str	x8, [x24, #16]
  43e29c:	ldr	x8, [x19]
  43e2a0:	mov	x1, x21
  43e2a4:	ldr	x8, [x8, #32]
  43e2a8:	str	x8, [x24, #24]
  43e2ac:	ldrb	w8, [x19, #24]
  43e2b0:	add	w8, w8, #0x1
  43e2b4:	strb	w8, [x19, #24]
  43e2b8:	bl	437e44 <feof@plt+0x34d64>
  43e2bc:	ldrb	w8, [x19, #24]
  43e2c0:	sub	w8, w8, #0x1
  43e2c4:	strb	w8, [x19, #24]
  43e2c8:	str	x20, [x24, #8]
  43e2cc:	ldr	x8, [x19]
  43e2d0:	mov	x20, x0
  43e2d4:	stp	x26, x28, [x8]
  43e2d8:	ldr	w9, [sp, #4]
  43e2dc:	str	x27, [x8, #32]
  43e2e0:	strb	w9, [x8, #104]
  43e2e4:	ldr	x8, [x19, #1312]
  43e2e8:	ldr	x9, [sp, #48]
  43e2ec:	add	x8, x8, x22
  43e2f0:	str	x8, [x19, #1328]
  43e2f4:	ldr	x8, [sp, #64]
  43e2f8:	str	x9, [x19, #8]
  43e2fc:	stp	x23, x8, [x24, #16]
  43e300:	bl	402a50 <strlen@plt>
  43e304:	mov	x28, x0
  43e308:	add	x1, x0, #0x1
  43e30c:	mov	x0, x19
  43e310:	bl	4335d8 <feof@plt+0x304f8>
  43e314:	mov	x1, x20
  43e318:	mov	x2, x28
  43e31c:	mov	x22, x0
  43e320:	bl	4029c0 <memcpy@plt>
  43e324:	mov	w8, #0xa                   	// #10
  43e328:	mov	x0, x19
  43e32c:	mov	x1, x21
  43e330:	mov	x2, x22
  43e334:	mov	x3, x28
  43e338:	strb	w8, [x22, x28]
  43e33c:	bl	438448 <feof@plt+0x35368>
  43e340:	mov	w27, wzr
  43e344:	str	wzr, [sp, #64]
  43e348:	str	wzr, [sp, #48]
  43e34c:	b	43d854 <feof@plt+0x3a774>
  43e350:	ldr	x8, [x19, #1312]
  43e354:	ldr	x9, [sp, #8]
  43e358:	mov	w25, w22
  43e35c:	add	x8, x8, x9
  43e360:	str	x8, [x19, #1328]
  43e364:	ldur	x8, [x29, #-72]
  43e368:	str	x23, [x24, #16]
  43e36c:	ldr	x20, [x8, #24]
  43e370:	ldrh	w8, [x20, #16]
  43e374:	cbz	w8, 43e3c4 <feof@plt+0x3b2e4>
  43e378:	ldr	x9, [x20, #24]
  43e37c:	ldrh	w11, [x9, #4]
  43e380:	ldr	w8, [x9]
  43e384:	cbz	w11, 43e41c <feof@plt+0x3b33c>
  43e388:	ldr	x21, [sp, #32]
  43e38c:	mov	x10, x8
  43e390:	add	x10, x10, #0xd
  43e394:	add	x11, x21, w11, uxth #3
  43e398:	and	x10, x10, #0x1fffffff8
  43e39c:	ldp	x13, x12, [x11, #-8]
  43e3a0:	add	x9, x9, x10
  43e3a4:	ldr	w10, [x9]
  43e3a8:	ldrh	w11, [x9, #4]
  43e3ac:	mvn	x13, x13
  43e3b0:	add	x12, x13, x12
  43e3b4:	add	x8, x8, x10
  43e3b8:	add	x8, x8, x12, lsl #1
  43e3bc:	cbnz	w11, 43e390 <feof@plt+0x3b2b0>
  43e3c0:	b	43e420 <feof@plt+0x3b340>
  43e3c4:	ldur	x8, [x29, #-72]
  43e3c8:	ldrh	w8, [x8, #18]
  43e3cc:	mvn	w8, w8
  43e3d0:	tst	w8, #0x3
  43e3d4:	b.ne	43e54c <feof@plt+0x3b46c>  // b.any
  43e3d8:	ldur	x1, [x29, #-72]
  43e3dc:	mov	x0, x19
  43e3e0:	mov	w2, wzr
  43e3e4:	bl	437e44 <feof@plt+0x34d64>
  43e3e8:	mov	x20, x0
  43e3ec:	bl	402a50 <strlen@plt>
  43e3f0:	mov	x22, x0
  43e3f4:	add	x1, x0, #0x1
  43e3f8:	mov	x0, x19
  43e3fc:	bl	4335d8 <feof@plt+0x304f8>
  43e400:	mov	x1, x20
  43e404:	mov	x2, x22
  43e408:	mov	x28, x0
  43e40c:	bl	4029c0 <memcpy@plt>
  43e410:	mov	w8, #0xa                   	// #10
  43e414:	strb	w8, [x28, x22]
  43e418:	b	43e560 <feof@plt+0x3b480>
  43e41c:	ldr	x21, [sp, #32]
  43e420:	add	x1, x8, #0x1
  43e424:	mov	x0, x19
  43e428:	bl	433e38 <feof@plt+0x30d58>
  43e42c:	ldr	x9, [x0, #16]
  43e430:	ldr	x10, [x20, #24]
  43e434:	mov	x22, x0
  43e438:	mov	w8, wzr
  43e43c:	mov	x3, xzr
  43e440:	mov	w16, #0x5c                  	// #92
  43e444:	b	43e458 <feof@plt+0x3b378>
  43e448:	ldr	w11, [x10]
  43e44c:	add	x11, x11, #0xd
  43e450:	and	x11, x11, #0x1fffffff8
  43e454:	add	x10, x10, x11
  43e458:	ldr	w11, [x10]
  43e45c:	add	x3, x3, x11
  43e460:	cbz	w11, 43e488 <feof@plt+0x3b3a8>
  43e464:	add	x12, x10, #0x6
  43e468:	ldrb	w13, [x12], #1
  43e46c:	cmp	w8, #0x0
  43e470:	cset	w14, eq  // eq = none
  43e474:	cmp	w13, #0x22
  43e478:	csel	w8, w14, w8, eq  // eq = none
  43e47c:	subs	x11, x11, #0x1
  43e480:	strb	w13, [x9], #1
  43e484:	b.ne	43e468 <feof@plt+0x3b388>  // b.any
  43e488:	ldrh	w11, [x10, #4]
  43e48c:	cbz	x11, 43e51c <feof@plt+0x3b43c>
  43e490:	add	x11, x21, x11, lsl #3
  43e494:	ldp	x12, x14, [x11, #-8]
  43e498:	mvn	x11, x12
  43e49c:	cmn	x14, x11
  43e4a0:	b.eq	43e448 <feof@plt+0x3b368>  // b.none
  43e4a4:	ldr	x11, [x19, #1312]
  43e4a8:	mov	w13, wzr
  43e4ac:	add	x11, x11, x12
  43e4b0:	sub	x12, x12, x14
  43e4b4:	add	x12, x12, #0x1
  43e4b8:	mov	x14, x11
  43e4bc:	b	43e4dc <feof@plt+0x3b3fc>
  43e4c0:	strb	w16, [x9], #1
  43e4c4:	add	x3, x3, #0x1
  43e4c8:	ldrb	w15, [x14], #1
  43e4cc:	adds	x12, x12, #0x1
  43e4d0:	add	x3, x3, #0x1
  43e4d4:	strb	w15, [x9], #1
  43e4d8:	b.cs	43e448 <feof@plt+0x3b368>  // b.hs, b.nlast
  43e4dc:	cbz	w8, 43e4c8 <feof@plt+0x3b3e8>
  43e4e0:	ldrb	w15, [x14]
  43e4e4:	cmp	w15, #0x22
  43e4e8:	b.ne	43e50c <feof@plt+0x3b42c>  // b.any
  43e4ec:	cmp	x14, x11
  43e4f0:	b.ls	43e4c0 <feof@plt+0x3b3e0>  // b.plast
  43e4f4:	ldurb	w15, [x14, #-1]
  43e4f8:	cmp	w15, #0x5c
  43e4fc:	b.eq	43e4c0 <feof@plt+0x3b3e0>  // b.none
  43e500:	cmp	w13, #0x0
  43e504:	cset	w13, eq  // eq = none
  43e508:	b	43e4c0 <feof@plt+0x3b3e0>
  43e50c:	cbz	w13, 43e4c8 <feof@plt+0x3b3e8>
  43e510:	cmp	w15, #0x5c
  43e514:	b.eq	43e4c0 <feof@plt+0x3b3e0>  // b.none
  43e518:	b	43e4c8 <feof@plt+0x3b3e8>
  43e51c:	mov	w8, #0xa                   	// #10
  43e520:	strb	w8, [x9]
  43e524:	ldr	x2, [x22, #16]
  43e528:	ldur	x1, [x29, #-72]
  43e52c:	mov	x0, x19
  43e530:	bl	438448 <feof@plt+0x35368>
  43e534:	stp	w25, wzr, [sp, #44]
  43e538:	ldr	x8, [x19, #136]
  43e53c:	mov	w27, wzr
  43e540:	str	wzr, [sp, #64]
  43e544:	str	x22, [x8, #32]
  43e548:	b	43d854 <feof@plt+0x3a774>
  43e54c:	ldrb	w8, [x20, #19]
  43e550:	ldr	x28, [x20, #24]
  43e554:	ldr	w22, [x20, #12]
  43e558:	orr	w8, w8, #0x20
  43e55c:	strb	w8, [x20, #19]
  43e560:	ldur	x1, [x29, #-72]
  43e564:	mov	x0, x19
  43e568:	mov	x2, x28
  43e56c:	mov	x3, x22
  43e570:	bl	438448 <feof@plt+0x35368>
  43e574:	mov	w27, wzr
  43e578:	str	wzr, [sp, #64]
  43e57c:	stp	w25, wzr, [sp, #44]
  43e580:	b	43d854 <feof@plt+0x3a774>
  43e584:	mov	w22, #0x1                   	// #1
  43e588:	ldp	x21, x1, [x29, #-72]
  43e58c:	cbz	x1, 43e598 <feof@plt+0x3b4b8>
  43e590:	mov	x0, x19
  43e594:	bl	433e18 <feof@plt+0x30d38>
  43e598:	cmp	w20, #0x2
  43e59c:	b.ne	43e5c0 <feof@plt+0x3b4e0>  // b.any
  43e5a0:	ldr	x5, [x21]
  43e5a4:	ldur	w2, [x29, #-76]
  43e5a8:	adrp	x4, 470000 <_obstack_memory_used@@Base+0xe838>
  43e5ac:	add	x4, x4, #0xcaf
  43e5b0:	mov	w1, #0x3                   	// #3
  43e5b4:	mov	x0, x19
  43e5b8:	mov	w3, wzr
  43e5bc:	bl	428d60 <feof@plt+0x25c80>
  43e5c0:	mov	w0, w22
  43e5c4:	ldp	x20, x19, [sp, #240]
  43e5c8:	ldp	x22, x21, [sp, #224]
  43e5cc:	ldp	x24, x23, [sp, #208]
  43e5d0:	ldp	x26, x25, [sp, #192]
  43e5d4:	ldp	x28, x27, [sp, #176]
  43e5d8:	ldp	x29, x30, [sp, #160]
  43e5dc:	add	sp, sp, #0x100
  43e5e0:	ret
  43e5e4:	ldr	x8, [x19]
  43e5e8:	mov	x0, x19
  43e5ec:	mov	w1, wzr
  43e5f0:	str	x22, [x8]
  43e5f4:	bl	4246ec <feof@plt+0x2160c>
  43e5f8:	mov	w22, wzr
  43e5fc:	b	43e588 <feof@plt+0x3b4a8>
  43e600:	ldr	x8, [x19]
  43e604:	mov	w9, #0x1                   	// #1
  43e608:	mov	w10, #0x18                  	// #24
  43e60c:	mov	w2, wzr
  43e610:	strb	w9, [x8, #104]
  43e614:	ldr	x0, [x19, #40]
  43e618:	ldr	w8, [x0, #12]
  43e61c:	ldr	x9, [x0]
  43e620:	sub	w8, w8, #0x1
  43e624:	smaddl	x8, w8, w10, x9
  43e628:	ldr	w9, [x0, #60]
  43e62c:	ldr	w10, [x8]
  43e630:	ldrb	w11, [x8, #6]
  43e634:	ldr	w8, [x8, #16]
  43e638:	sub	w9, w9, w10
  43e63c:	lsr	w9, w9, w11
  43e640:	add	w8, w8, w9
  43e644:	add	w1, w8, #0x1
  43e648:	bl	435084 <feof@plt+0x31fa4>
  43e64c:	mov	w22, wzr
  43e650:	b	43e588 <feof@plt+0x3b4a8>
  43e654:	stp	x29, x30, [sp, #-64]!
  43e658:	stp	x22, x21, [sp, #32]
  43e65c:	stp	x20, x19, [sp, #48]
  43e660:	str	x23, [sp, #16]
  43e664:	ldr	x8, [x0, #40]
  43e668:	ldr	x23, [x0]
  43e66c:	mov	x20, x1
  43e670:	mov	x19, x0
  43e674:	ldr	w22, [x8, #60]
  43e678:	str	x1, [x23]
  43e67c:	ldr	x8, [x0, #136]
  43e680:	mov	w21, w2
  43e684:	mov	x29, sp
  43e688:	ldr	x8, [x8, #8]
  43e68c:	cbz	x8, 43e6e0 <feof@plt+0x3b600>
  43e690:	mov	x8, x20
  43e694:	ldrb	w9, [x8, #1]!
  43e698:	cmp	w9, #0x2f
  43e69c:	cinc	x8, x8, eq  // eq = none
  43e6a0:	b	43e6ac <feof@plt+0x3b5cc>
  43e6a4:	cmp	w10, #0xa
  43e6a8:	b.eq	43e750 <feof@plt+0x3b670>  // b.none
  43e6ac:	mov	x9, x8
  43e6b0:	ldrb	w10, [x8], #1
  43e6b4:	cmp	w10, #0x2f
  43e6b8:	b.ne	43e6a4 <feof@plt+0x3b5c4>  // b.any
  43e6bc:	ldurb	w10, [x9, #-1]
  43e6c0:	cmp	w10, #0x2a
  43e6c4:	b.ne	43e6ac <feof@plt+0x3b5cc>  // b.any
  43e6c8:	add	x8, x9, #0x1
  43e6cc:	mov	w22, wzr
  43e6d0:	str	x8, [x23]
  43e6d4:	ldrb	w8, [x19, #16]
  43e6d8:	cbnz	w8, 43e77c <feof@plt+0x3b69c>
  43e6dc:	b	43e6f8 <feof@plt+0x3b618>
  43e6e0:	mov	x0, x19
  43e6e4:	bl	42f8e4 <feof@plt+0x2c804>
  43e6e8:	tbnz	w0, #0, 43e754 <feof@plt+0x3b674>
  43e6ec:	mov	w22, wzr
  43e6f0:	ldrb	w8, [x19, #16]
  43e6f4:	cbnz	w8, 43e77c <feof@plt+0x3b69c>
  43e6f8:	ldrb	w8, [x19, #1123]
  43e6fc:	cbnz	w8, 43e788 <feof@plt+0x3b6a8>
  43e700:	ldr	x8, [x23]
  43e704:	ldr	x0, [x19, #1328]
  43e708:	mov	x1, x20
  43e70c:	sub	x21, x8, x20
  43e710:	mov	x2, x21
  43e714:	bl	4029c0 <memcpy@plt>
  43e718:	ldr	x8, [x19, #1328]
  43e71c:	add	x8, x8, x21
  43e720:	str	x8, [x19, #1328]
  43e724:	cbz	w22, 43e7a4 <feof@plt+0x3b6c4>
  43e728:	add	x9, x8, #0x1
  43e72c:	mov	w10, #0x2a                  	// #42
  43e730:	str	x9, [x19, #1328]
  43e734:	strb	w10, [x8]
  43e738:	ldr	x8, [x19, #1328]
  43e73c:	mov	w9, #0x2f                  	// #47
  43e740:	add	x10, x8, #0x1
  43e744:	str	x10, [x19, #1328]
  43e748:	strb	w9, [x8]
  43e74c:	b	43e7a4 <feof@plt+0x3b6c4>
  43e750:	str	x9, [x23]
  43e754:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0xd838>
  43e758:	add	x4, x4, #0xf93
  43e75c:	mov	w1, #0x3                   	// #3
  43e760:	mov	x0, x19
  43e764:	mov	w2, w22
  43e768:	mov	w3, wzr
  43e76c:	bl	428d60 <feof@plt+0x25c80>
  43e770:	mov	w22, #0x1                   	// #1
  43e774:	ldrb	w8, [x19, #16]
  43e778:	cbz	w8, 43e6f8 <feof@plt+0x3b618>
  43e77c:	cbz	w21, 43e798 <feof@plt+0x3b6b8>
  43e780:	ldrb	w8, [x19, #1124]
  43e784:	cbz	w8, 43e700 <feof@plt+0x3b620>
  43e788:	ldr	x8, [x19, #1328]
  43e78c:	sub	x8, x8, #0x1
  43e790:	str	x8, [x19, #1328]
  43e794:	b	43e7a4 <feof@plt+0x3b6c4>
  43e798:	ldr	x8, [x19, #1328]
  43e79c:	mov	w9, #0x20                  	// #32
  43e7a0:	sturb	w9, [x8, #-1]
  43e7a4:	ldr	x0, [x23]
  43e7a8:	ldp	x20, x19, [sp, #48]
  43e7ac:	ldp	x22, x21, [sp, #32]
  43e7b0:	ldr	x23, [sp, #16]
  43e7b4:	ldp	x29, x30, [sp], #64
  43e7b8:	ret
  43e7bc:	stp	x29, x30, [sp, #-64]!
  43e7c0:	stp	x24, x23, [sp, #16]
  43e7c4:	stp	x22, x21, [sp, #32]
  43e7c8:	stp	x20, x19, [sp, #48]
  43e7cc:	ldr	x8, [x0, #1328]
  43e7d0:	ldr	x9, [x0, #1312]
  43e7d4:	ldrh	w10, [x1, #16]
  43e7d8:	mov	x19, x1
  43e7dc:	mov	x21, x0
  43e7e0:	sub	x20, x8, x9
  43e7e4:	mov	x29, sp
  43e7e8:	cbz	w10, 43e87c <feof@plt+0x3b79c>
  43e7ec:	mov	x23, x21
  43e7f0:	ldr	w8, [x19, #12]
  43e7f4:	ldr	x9, [x23, #56]!
  43e7f8:	add	x11, x20, #0xd
  43e7fc:	and	x24, x11, #0xfffffffffffffff8
  43e800:	mov	w22, w2
  43e804:	ldp	x9, x10, [x9, #16]
  43e808:	add	x2, x24, x8
  43e80c:	sub	x10, x10, x9
  43e810:	cmp	x2, x10
  43e814:	b.ls	43e830 <feof@plt+0x3b750>  // b.plast
  43e818:	mov	x0, x21
  43e81c:	mov	x1, x23
  43e820:	bl	433fb8 <feof@plt+0x30ed8>
  43e824:	ldr	x8, [x21, #56]
  43e828:	ldr	x9, [x8, #16]
  43e82c:	ldr	w8, [x19, #12]
  43e830:	add	x8, x9, x8
  43e834:	str	x9, [x19, #24]
  43e838:	str	w20, [x8]
  43e83c:	strh	w22, [x8, #4]
  43e840:	ldr	x1, [x21, #1312]
  43e844:	add	x0, x8, #0x6
  43e848:	mov	x2, x20
  43e84c:	bl	4029c0 <memcpy@plt>
  43e850:	ldr	x8, [x21, #1312]
  43e854:	str	x8, [x21, #1328]
  43e858:	ldr	w8, [x19, #12]
  43e85c:	add	w8, w8, w24
  43e860:	str	w8, [x19, #12]
  43e864:	cbnz	w22, 43e8a8 <feof@plt+0x3b7c8>
  43e868:	ldr	x9, [x23]
  43e86c:	ldr	x10, [x9, #16]
  43e870:	add	x8, x10, w8, uxtw
  43e874:	str	x8, [x9, #16]
  43e878:	b	43e8a8 <feof@plt+0x3b7c8>
  43e87c:	add	x1, x20, #0x1
  43e880:	mov	x0, x21
  43e884:	bl	4335d8 <feof@plt+0x304f8>
  43e888:	ldr	x1, [x21, #1312]
  43e88c:	mov	x2, x20
  43e890:	mov	x21, x0
  43e894:	bl	4029c0 <memcpy@plt>
  43e898:	mov	w8, #0xa                   	// #10
  43e89c:	strb	w8, [x21, x20]
  43e8a0:	str	x21, [x19, #24]
  43e8a4:	str	w20, [x19, #12]
  43e8a8:	ldp	x20, x19, [sp, #48]
  43e8ac:	ldp	x22, x21, [sp, #32]
  43e8b0:	ldp	x24, x23, [sp, #16]
  43e8b4:	ldp	x29, x30, [sp], #64
  43e8b8:	ret
  43e8bc:	ldrb	w9, [x0, #19]
  43e8c0:	mov	x8, x0
  43e8c4:	tbz	w9, #2, 43e918 <feof@plt+0x3b838>
  43e8c8:	ldrh	w9, [x8, #16]
  43e8cc:	cbz	w9, 43e918 <feof@plt+0x3b838>
  43e8d0:	ldr	x9, [x8, #24]
  43e8d4:	ldrh	w11, [x9, #4]
  43e8d8:	ldr	w0, [x9]
  43e8dc:	cbz	w11, 43e914 <feof@plt+0x3b834>
  43e8e0:	ldr	x8, [x8]
  43e8e4:	mov	x10, x0
  43e8e8:	add	x11, x8, w11, uxth #3
  43e8ec:	ldur	x11, [x11, #-8]
  43e8f0:	add	x10, x10, #0xd
  43e8f4:	and	x10, x10, #0x1fffffff8
  43e8f8:	add	x9, x9, x10
  43e8fc:	ldr	w12, [x11, #8]
  43e900:	ldr	w10, [x9]
  43e904:	ldrh	w11, [x9, #4]
  43e908:	add	x12, x0, x12
  43e90c:	add	x0, x12, x10
  43e910:	cbnz	w11, 43e8e8 <feof@plt+0x3b808>
  43e914:	ret
  43e918:	ldr	w0, [x8, #12]
  43e91c:	ret
  43e920:	stp	x29, x30, [sp, #-48]!
  43e924:	stp	x22, x21, [sp, #16]
  43e928:	stp	x20, x19, [sp, #32]
  43e92c:	ldrb	w8, [x0, #19]
  43e930:	mov	x19, x0
  43e934:	mov	x20, x1
  43e938:	mov	x29, sp
  43e93c:	tbz	w8, #2, 43e9a8 <feof@plt+0x3b8c8>
  43e940:	ldrh	w8, [x19, #16]
  43e944:	cbz	w8, 43e9a8 <feof@plt+0x3b8c8>
  43e948:	ldr	x21, [x19, #24]
  43e94c:	ldr	w2, [x21]
  43e950:	add	x1, x21, #0x6
  43e954:	mov	x0, x20
  43e958:	bl	4029c0 <memcpy@plt>
  43e95c:	ldr	w9, [x21]
  43e960:	ldrh	w8, [x21, #4]
  43e964:	add	x20, x20, x9
  43e968:	cbz	w8, 43e9c0 <feof@plt+0x3b8e0>
  43e96c:	ldr	x9, [x19]
  43e970:	mov	x0, x20
  43e974:	add	x8, x9, w8, uxth #3
  43e978:	ldur	x22, [x8, #-8]
  43e97c:	ldr	x1, [x22]
  43e980:	ldr	w2, [x22, #8]
  43e984:	bl	4029c0 <memcpy@plt>
  43e988:	ldr	w8, [x21]
  43e98c:	ldr	w9, [x22, #8]
  43e990:	add	x8, x8, #0xd
  43e994:	and	x8, x8, #0x1fffffff8
  43e998:	add	x21, x21, x8
  43e99c:	ldr	w2, [x21]
  43e9a0:	add	x20, x20, x9
  43e9a4:	b	43e950 <feof@plt+0x3b870>
  43e9a8:	ldr	x1, [x19, #24]
  43e9ac:	ldr	w2, [x19, #12]
  43e9b0:	mov	x0, x20
  43e9b4:	bl	4029c0 <memcpy@plt>
  43e9b8:	ldr	w8, [x19, #12]
  43e9bc:	add	x20, x20, x8
  43e9c0:	mov	x0, x20
  43e9c4:	ldp	x20, x19, [sp, #32]
  43e9c8:	ldp	x22, x21, [sp, #16]
  43e9cc:	ldp	x29, x30, [sp], #48
  43e9d0:	ret
  43e9d4:	stp	x29, x30, [sp, #-80]!
  43e9d8:	stp	x24, x23, [sp, #32]
  43e9dc:	stp	x22, x21, [sp, #48]
  43e9e0:	stp	x20, x19, [sp, #64]
  43e9e4:	ldr	x8, [x0, #1312]
  43e9e8:	ldr	x9, [x0]
  43e9ec:	ldr	x24, [x0, #136]
  43e9f0:	mov	x19, x0
  43e9f4:	str	x8, [x0, #1328]
  43e9f8:	ldr	x9, [x9]
  43e9fc:	str	x25, [sp, #16]
  43ea00:	mov	x29, sp
  43ea04:	str	x9, [x24, #16]
  43ea08:	ldr	x8, [x0]
  43ea0c:	ldr	x10, [x8, #32]
  43ea10:	str	x10, [x24, #24]
  43ea14:	ldr	x11, [x0, #1320]
  43ea18:	ldr	x8, [x0, #1328]
  43ea1c:	sub	x10, x10, x9
  43ea20:	add	x10, x10, #0x3
  43ea24:	sub	x11, x11, x8
  43ea28:	cmp	x10, x11
  43ea2c:	b.ls	43ea64 <feof@plt+0x3b984>  // b.plast
  43ea30:	ldr	x0, [x19, #1312]
  43ea34:	sub	x21, x8, x0
  43ea38:	add	x8, x21, x10
  43ea3c:	add	x8, x8, x8, lsl #1
  43ea40:	lsr	x20, x8, #1
  43ea44:	mov	x1, x20
  43ea48:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  43ea4c:	add	x9, x0, x20
  43ea50:	add	x8, x0, x21
  43ea54:	str	x0, [x19, #1312]
  43ea58:	str	x9, [x19, #1320]
  43ea5c:	str	x8, [x19, #1328]
  43ea60:	ldr	x9, [x24, #16]
  43ea64:	ldrb	w9, [x9]
  43ea68:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  43ea6c:	add	x23, x23, #0xe98
  43ea70:	mov	w20, wzr
  43ea74:	cmp	w9, #0x28
  43ea78:	b.ne	43ebb8 <feof@plt+0x3bad8>  // b.any
  43ea7c:	ldr	x9, [x19, #136]
  43ea80:	mov	w21, #0x204                 	// #516
  43ea84:	ldr	x9, [x9, #16]
  43ea88:	add	x1, x9, #0x1
  43ea8c:	b	43eaa4 <feof@plt+0x3b9c4>
  43ea90:	sub	x8, x8, #0x1
  43ea94:	str	x8, [x19, #1328]
  43ea98:	ldurb	w9, [x1, #-1]
  43ea9c:	cmp	w9, #0x2c
  43eaa0:	b.ne	43ebc4 <feof@plt+0x3bae4>  // b.any
  43eaa4:	mov	x22, x1
  43eaa8:	ldrb	w10, [x1], #1
  43eaac:	mov	x9, x8
  43eab0:	ldrh	w11, [x23, x10, lsl #1]
  43eab4:	strb	w10, [x8], #1
  43eab8:	tbnz	w11, #11, 43eaa4 <feof@plt+0x3b9c4>
  43eabc:	cmp	w10, #0x2f
  43eac0:	b.ne	43eaec <feof@plt+0x3ba0c>  // b.any
  43eac4:	ldrb	w10, [x1]
  43eac8:	cmp	w10, #0x2a
  43eacc:	b.ne	43eaec <feof@plt+0x3ba0c>  // b.any
  43ead0:	mov	x0, x19
  43ead4:	mov	w2, wzr
  43ead8:	str	x8, [x19, #1328]
  43eadc:	bl	43e654 <feof@plt+0x3b574>
  43eae0:	ldr	x8, [x19, #1328]
  43eae4:	mov	x1, x0
  43eae8:	b	43eaa4 <feof@plt+0x3b9c4>
  43eaec:	str	x9, [x19, #1328]
  43eaf0:	ldrb	w8, [x22]
  43eaf4:	ldrh	w10, [x23, x8, lsl #1]
  43eaf8:	tbnz	w10, #9, 43eb0c <feof@plt+0x3ba2c>
  43eafc:	cmp	w8, #0x24
  43eb00:	b.ne	43ebd4 <feof@plt+0x3baf4>  // b.any
  43eb04:	ldrb	w10, [x19, #1146]
  43eb08:	cbz	w10, 43ec44 <feof@plt+0x3bb64>
  43eb0c:	mov	x10, xzr
  43eb10:	add	x11, x22, x10
  43eb14:	strb	w8, [x9, x10]
  43eb18:	ldrb	w8, [x11, #1]
  43eb1c:	add	x10, x10, #0x1
  43eb20:	ldrh	w11, [x23, x8, lsl #1]
  43eb24:	tst	w11, w21
  43eb28:	b.ne	43eb10 <feof@plt+0x3ba30>  // b.any
  43eb2c:	ldr	x8, [x19, #136]
  43eb30:	add	x11, x22, x10
  43eb34:	add	x25, x9, x10
  43eb38:	mov	w3, #0x1                   	// #1
  43eb3c:	str	x11, [x8, #16]
  43eb40:	ldr	x1, [x19, #1328]
  43eb44:	ldr	x0, [x19, #1088]
  43eb48:	sub	x2, x25, x1
  43eb4c:	bl	43cee8 <feof@plt+0x39e08>
  43eb50:	mov	x2, x0
  43eb54:	mov	x0, x19
  43eb58:	mov	w1, w20
  43eb5c:	mov	x3, x2
  43eb60:	str	x25, [x19, #1328]
  43eb64:	bl	438e88 <feof@plt+0x35da8>
  43eb68:	tbz	w0, #0, 43ec44 <feof@plt+0x3bb64>
  43eb6c:	ldr	x8, [x19, #136]
  43eb70:	add	w20, w20, #0x1
  43eb74:	ldr	x1, [x8, #16]
  43eb78:	ldr	x8, [x19, #1328]
  43eb7c:	ldrb	w9, [x1], #1
  43eb80:	ldrh	w10, [x23, x9, lsl #1]
  43eb84:	strb	w9, [x8], #1
  43eb88:	tbnz	w10, #11, 43eb7c <feof@plt+0x3ba9c>
  43eb8c:	cmp	w9, #0x2f
  43eb90:	b.ne	43ea90 <feof@plt+0x3b9b0>  // b.any
  43eb94:	ldrb	w9, [x1]
  43eb98:	cmp	w9, #0x2a
  43eb9c:	b.ne	43ea90 <feof@plt+0x3b9b0>  // b.any
  43eba0:	mov	x0, x19
  43eba4:	mov	w2, wzr
  43eba8:	str	x8, [x19, #1328]
  43ebac:	bl	43e654 <feof@plt+0x3b574>
  43ebb0:	mov	x1, x0
  43ebb4:	b	43eb78 <feof@plt+0x3ba98>
  43ebb8:	mov	w25, wzr
  43ebbc:	mov	x22, xzr
  43ebc0:	b	43ec08 <feof@plt+0x3bb28>
  43ebc4:	sub	x22, x1, #0x1
  43ebc8:	cmp	w9, #0x29
  43ebcc:	b.eq	43ebe4 <feof@plt+0x3bb04>  // b.none
  43ebd0:	b	43ec44 <feof@plt+0x3bb64>
  43ebd4:	cbnz	w20, 43ec44 <feof@plt+0x3bb64>
  43ebd8:	cmp	w8, #0x29
  43ebdc:	b.ne	43ec44 <feof@plt+0x3bb64>  // b.any
  43ebe0:	mov	w20, wzr
  43ebe4:	ldr	x8, [x19, #136]
  43ebe8:	mov	w10, w20
  43ebec:	add	x9, x22, #0x1
  43ebf0:	lsl	x1, x10, #3
  43ebf4:	mov	x0, x19
  43ebf8:	str	x9, [x8, #16]
  43ebfc:	bl	4341ac <feof@plt+0x310cc>
  43ec00:	mov	x22, x0
  43ec04:	mov	w25, #0x4                   	// #4
  43ec08:	mov	w1, #0x30                  	// #48
  43ec0c:	mov	x0, x19
  43ec10:	bl	4340c4 <feof@plt+0x30fe4>
  43ec14:	mov	x2, x0
  43ec18:	mov	w1, #0x2                   	// #2
  43ec1c:	mov	x0, x19
  43ec20:	bl	438fdc <feof@plt+0x35efc>
  43ec24:	ldrb	w8, [x0, #19]
  43ec28:	mov	x21, x0
  43ec2c:	str	x22, [x0]
  43ec30:	strh	w20, [x0, #16]
  43ec34:	and	w8, w8, #0xfffffffb
  43ec38:	orr	w8, w8, w25
  43ec3c:	strb	w8, [x0, #19]
  43ec40:	b	43ec74 <feof@plt+0x3bb94>
  43ec44:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  43ec48:	add	x2, x2, #0x399
  43ec4c:	mov	w1, #0x3                   	// #3
  43ec50:	mov	x0, x19
  43ec54:	bl	4288a0 <feof@plt+0x257c0>
  43ec58:	mov	x8, x22
  43ec5c:	ldrb	w9, [x8], #1
  43ec60:	ldr	x10, [x19, #136]
  43ec64:	mov	x21, xzr
  43ec68:	cmp	w9, #0x29
  43ec6c:	csel	x8, x22, x8, ne  // ne = any
  43ec70:	str	x8, [x10, #16]
  43ec74:	ldr	x1, [x24, #16]
  43ec78:	ldrb	w22, [x19, #1124]
  43ec7c:	ldr	x8, [x19, #1328]
  43ec80:	mov	x9, x1
  43ec84:	ldrb	w11, [x1], #1
  43ec88:	mov	x10, x8
  43ec8c:	ldrh	w12, [x23, x11, lsl #1]
  43ec90:	strb	w11, [x8], #1
  43ec94:	tbnz	w12, #11, 43ec80 <feof@plt+0x3bba0>
  43ec98:	cmp	w11, #0x2f
  43ec9c:	b.ne	43eccc <feof@plt+0x3bbec>  // b.any
  43eca0:	cbz	w22, 43eccc <feof@plt+0x3bbec>
  43eca4:	ldrb	w11, [x1]
  43eca8:	cmp	w11, #0x2a
  43ecac:	b.ne	43eccc <feof@plt+0x3bbec>  // b.any
  43ecb0:	mov	x0, x19
  43ecb4:	mov	w2, wzr
  43ecb8:	str	x8, [x19, #1328]
  43ecbc:	bl	43e654 <feof@plt+0x3b574>
  43ecc0:	ldr	x8, [x19, #1328]
  43ecc4:	mov	x1, x0
  43ecc8:	b	43ec80 <feof@plt+0x3bba0>
  43eccc:	ldr	x8, [x19]
  43ecd0:	str	x10, [x19, #1328]
  43ecd4:	mov	x0, x19
  43ecd8:	mov	x1, x21
  43ecdc:	str	x9, [x8]
  43ece0:	ldrb	w8, [x19, #24]
  43ece4:	mov	w2, wzr
  43ece8:	add	w8, w8, #0x1
  43ecec:	strb	w8, [x19, #24]
  43ecf0:	bl	43d7a0 <feof@plt+0x3a6c0>
  43ecf4:	ldrb	w8, [x19, #24]
  43ecf8:	mov	x0, x19
  43ecfc:	mov	w1, w20
  43ed00:	sub	w8, w8, #0x1
  43ed04:	strb	w8, [x19, #24]
  43ed08:	bl	438f98 <feof@plt+0x35eb8>
  43ed0c:	cbz	x21, 43ed4c <feof@plt+0x3bc6c>
  43ed10:	ldr	x8, [x19, #1312]
  43ed14:	ldr	x10, [x19, #1328]
  43ed18:	mov	x9, x10
  43ed1c:	cmp	x10, x8
  43ed20:	b.ls	43ed38 <feof@plt+0x3bc58>  // b.plast
  43ed24:	mov	x10, x9
  43ed28:	ldrb	w11, [x10, #-1]!
  43ed2c:	ldrh	w11, [x23, x11, lsl #1]
  43ed30:	tst	w11, #0xc00
  43ed34:	b.ne	43ed18 <feof@plt+0x3bc38>  // b.any
  43ed38:	mov	x0, x19
  43ed3c:	mov	x1, x21
  43ed40:	mov	w2, wzr
  43ed44:	str	x9, [x19, #1328]
  43ed48:	bl	43e7bc <feof@plt+0x3b6dc>
  43ed4c:	mov	x0, x21
  43ed50:	ldp	x20, x19, [sp, #64]
  43ed54:	ldp	x22, x21, [sp, #48]
  43ed58:	ldp	x24, x23, [sp, #32]
  43ed5c:	ldr	x25, [sp, #16]
  43ed60:	ldp	x29, x30, [sp], #80
  43ed64:	ret
  43ed68:	stp	x29, x30, [sp, #-96]!
  43ed6c:	stp	x26, x25, [sp, #32]
  43ed70:	stp	x24, x23, [sp, #48]
  43ed74:	stp	x22, x21, [sp, #64]
  43ed78:	stp	x20, x19, [sp, #80]
  43ed7c:	ldr	w8, [x0, #12]
  43ed80:	ldr	w9, [x1, #12]
  43ed84:	mov	x19, x0
  43ed88:	str	x27, [sp, #16]
  43ed8c:	mov	x29, sp
  43ed90:	add	w0, w9, w8
  43ed94:	mov	x21, x1
  43ed98:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  43ed9c:	ldr	w8, [x19, #12]
  43eda0:	ldrh	w9, [x19, #16]
  43eda4:	ldr	x22, [x19, #24]
  43eda8:	mov	x19, x0
  43edac:	add	x20, x0, x8
  43edb0:	cbz	w9, 43efc0 <feof@plt+0x3bee0>
  43edb4:	ldr	x21, [x21, #24]
  43edb8:	mov	x25, x22
  43edbc:	ldrh	w8, [x25, #4]!
  43edc0:	ldrh	w9, [x21, #4]
  43edc4:	cmp	w8, w9
  43edc8:	b.ne	43f170 <feof@plt+0x3c090>  // b.any
  43edcc:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  43edd0:	mov	w26, wzr
  43edd4:	mov	w27, wzr
  43edd8:	add	x23, x23, #0xe98
  43eddc:	mov	w24, #0x20                  	// #32
  43ede0:	ldr	w9, [x22]
  43ede4:	cbz	w9, 43ee9c <feof@plt+0x3bdbc>
  43ede8:	add	x10, x22, #0x6
  43edec:	mov	x8, x19
  43edf0:	b	43ee10 <feof@plt+0x3bd30>
  43edf4:	mov	w12, w27
  43edf8:	add	x10, x10, #0x1
  43edfc:	sub	x9, x9, #0x1
  43ee00:	mov	w27, w12
  43ee04:	strb	w11, [x8]
  43ee08:	add	x8, x8, #0x1
  43ee0c:	cbz	x9, 43eea0 <feof@plt+0x3bdc0>
  43ee10:	ldrb	w11, [x10]
  43ee14:	tst	w27, #0xff
  43ee18:	b.ne	43ee58 <feof@plt+0x3bd78>  // b.any
  43ee1c:	ldrh	w12, [x23, x11, lsl #1]
  43ee20:	and	w12, w12, #0xc00
  43ee24:	cbz	w12, 43ee58 <feof@plt+0x3bd78>
  43ee28:	add	x11, x10, x9
  43ee2c:	sub	x13, x9, #0x1
  43ee30:	mov	x9, x13
  43ee34:	cbz	x13, 43ee80 <feof@plt+0x3bda0>
  43ee38:	ldrb	w12, [x10, #1]
  43ee3c:	ldrh	w13, [x23, x12, lsl #1]
  43ee40:	add	x12, x10, #0x1
  43ee44:	mov	x10, x12
  43ee48:	and	w14, w13, #0xc00
  43ee4c:	sub	x13, x9, #0x1
  43ee50:	cbnz	w14, 43ee30 <feof@plt+0x3bd50>
  43ee54:	b	43ee84 <feof@plt+0x3bda4>
  43ee58:	cmp	w11, #0x27
  43ee5c:	b.eq	43ee68 <feof@plt+0x3bd88>  // b.none
  43ee60:	cmp	w11, #0x22
  43ee64:	b.ne	43edf4 <feof@plt+0x3bd14>  // b.any
  43ee68:	tst	w27, #0xff
  43ee6c:	mov	w12, w11
  43ee70:	b.eq	43edf8 <feof@plt+0x3bd18>  // b.none
  43ee74:	cmp	w11, w27, uxtb
  43ee78:	csel	w12, wzr, w27, eq  // eq = none
  43ee7c:	b	43edf8 <feof@plt+0x3bd18>
  43ee80:	mov	x12, x11
  43ee84:	mov	w27, wzr
  43ee88:	strb	w24, [x8]
  43ee8c:	mov	x10, x12
  43ee90:	add	x8, x8, #0x1
  43ee94:	cbnz	x9, 43ee10 <feof@plt+0x3bd30>
  43ee98:	b	43eea0 <feof@plt+0x3bdc0>
  43ee9c:	mov	x8, x19
  43eea0:	ldr	w9, [x21]
  43eea4:	sub	x2, x8, x19
  43eea8:	cbz	w9, 43ef60 <feof@plt+0x3be80>
  43eeac:	add	x10, x21, #0x6
  43eeb0:	mov	x8, x20
  43eeb4:	b	43eed4 <feof@plt+0x3bdf4>
  43eeb8:	mov	w12, w26
  43eebc:	add	x10, x10, #0x1
  43eec0:	sub	x9, x9, #0x1
  43eec4:	mov	w26, w12
  43eec8:	strb	w11, [x8]
  43eecc:	add	x8, x8, #0x1
  43eed0:	cbz	x9, 43ef64 <feof@plt+0x3be84>
  43eed4:	ldrb	w11, [x10]
  43eed8:	tst	w26, #0xff
  43eedc:	b.ne	43ef1c <feof@plt+0x3be3c>  // b.any
  43eee0:	ldrh	w12, [x23, x11, lsl #1]
  43eee4:	and	w12, w12, #0xc00
  43eee8:	cbz	w12, 43ef1c <feof@plt+0x3be3c>
  43eeec:	add	x11, x10, x9
  43eef0:	sub	x13, x9, #0x1
  43eef4:	mov	x9, x13
  43eef8:	cbz	x13, 43ef44 <feof@plt+0x3be64>
  43eefc:	ldrb	w12, [x10, #1]
  43ef00:	ldrh	w13, [x23, x12, lsl #1]
  43ef04:	add	x12, x10, #0x1
  43ef08:	mov	x10, x12
  43ef0c:	and	w14, w13, #0xc00
  43ef10:	sub	x13, x9, #0x1
  43ef14:	cbnz	w14, 43eef4 <feof@plt+0x3be14>
  43ef18:	b	43ef48 <feof@plt+0x3be68>
  43ef1c:	cmp	w11, #0x27
  43ef20:	b.eq	43ef2c <feof@plt+0x3be4c>  // b.none
  43ef24:	cmp	w11, #0x22
  43ef28:	b.ne	43eeb8 <feof@plt+0x3bdd8>  // b.any
  43ef2c:	tst	w26, #0xff
  43ef30:	mov	w12, w11
  43ef34:	b.eq	43eebc <feof@plt+0x3bddc>  // b.none
  43ef38:	cmp	w11, w26, uxtb
  43ef3c:	csel	w12, wzr, w26, eq  // eq = none
  43ef40:	b	43eebc <feof@plt+0x3bddc>
  43ef44:	mov	x12, x11
  43ef48:	mov	w26, wzr
  43ef4c:	strb	w24, [x8]
  43ef50:	mov	x10, x12
  43ef54:	add	x8, x8, #0x1
  43ef58:	cbnz	x9, 43eed4 <feof@plt+0x3bdf4>
  43ef5c:	b	43ef64 <feof@plt+0x3be84>
  43ef60:	mov	x8, x20
  43ef64:	sub	x8, x8, x20
  43ef68:	cmp	x2, x8
  43ef6c:	b.ne	43f170 <feof@plt+0x3c090>  // b.any
  43ef70:	mov	x0, x19
  43ef74:	mov	x1, x20
  43ef78:	bl	403090 <bcmp@plt>
  43ef7c:	cbnz	w0, 43f170 <feof@plt+0x3c090>
  43ef80:	ldrh	w8, [x25]
  43ef84:	cbz	w8, 43f19c <feof@plt+0x3c0bc>
  43ef88:	ldr	w8, [x22]
  43ef8c:	ldr	w9, [x21]
  43ef90:	add	x8, x8, #0xd
  43ef94:	add	x9, x9, #0xd
  43ef98:	and	x8, x8, #0x1fffffff8
  43ef9c:	and	x9, x9, #0x1fffffff8
  43efa0:	add	x22, x22, x8
  43efa4:	add	x21, x21, x9
  43efa8:	mov	x25, x22
  43efac:	ldrh	w8, [x25, #4]!
  43efb0:	ldrh	w9, [x21, #4]
  43efb4:	cmp	w8, w9
  43efb8:	b.eq	43ede0 <feof@plt+0x3bd00>  // b.none
  43efbc:	b	43f170 <feof@plt+0x3c090>
  43efc0:	mov	x9, x19
  43efc4:	cbz	w8, 43f080 <feof@plt+0x3bfa0>
  43efc8:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  43efcc:	mov	w12, wzr
  43efd0:	add	x10, x10, #0xe98
  43efd4:	mov	w11, #0x20                  	// #32
  43efd8:	mov	x9, x19
  43efdc:	b	43effc <feof@plt+0x3bf1c>
  43efe0:	mov	w14, w12
  43efe4:	add	x22, x22, #0x1
  43efe8:	sub	x8, x8, #0x1
  43efec:	strb	w13, [x9]
  43eff0:	add	x9, x9, #0x1
  43eff4:	mov	w12, w14
  43eff8:	cbz	x8, 43f080 <feof@plt+0x3bfa0>
  43effc:	ldrb	w13, [x22]
  43f000:	tst	w12, #0xff
  43f004:	b.ne	43f044 <feof@plt+0x3bf64>  // b.any
  43f008:	ldrh	w14, [x10, x13, lsl #1]
  43f00c:	and	w14, w14, #0xc00
  43f010:	cbz	w14, 43f044 <feof@plt+0x3bf64>
  43f014:	add	x12, x22, x8
  43f018:	sub	x14, x8, #0x1
  43f01c:	mov	x8, x14
  43f020:	cbz	x14, 43f06c <feof@plt+0x3bf8c>
  43f024:	ldrb	w13, [x22, #1]
  43f028:	ldrh	w14, [x10, x13, lsl #1]
  43f02c:	add	x13, x22, #0x1
  43f030:	mov	x22, x13
  43f034:	and	w15, w14, #0xc00
  43f038:	sub	x14, x8, #0x1
  43f03c:	cbnz	w15, 43f01c <feof@plt+0x3bf3c>
  43f040:	b	43f070 <feof@plt+0x3bf90>
  43f044:	cmp	w13, #0x27
  43f048:	b.eq	43f054 <feof@plt+0x3bf74>  // b.none
  43f04c:	cmp	w13, #0x22
  43f050:	b.ne	43efe0 <feof@plt+0x3bf00>  // b.any
  43f054:	tst	w12, #0xff
  43f058:	mov	w14, w13
  43f05c:	b.eq	43efe4 <feof@plt+0x3bf04>  // b.none
  43f060:	cmp	w13, w12, uxtb
  43f064:	csel	w14, wzr, w12, eq  // eq = none
  43f068:	b	43efe4 <feof@plt+0x3bf04>
  43f06c:	mov	x13, x12
  43f070:	mov	w14, wzr
  43f074:	strb	w11, [x9]
  43f078:	mov	x22, x13
  43f07c:	b	43eff0 <feof@plt+0x3bf10>
  43f080:	ldr	w8, [x21, #12]
  43f084:	sub	x2, x9, x19
  43f088:	mov	x9, x20
  43f08c:	cbz	w8, 43f14c <feof@plt+0x3c06c>
  43f090:	ldr	x12, [x21, #24]
  43f094:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  43f098:	mov	w13, wzr
  43f09c:	add	x10, x10, #0xe98
  43f0a0:	mov	w11, #0x20                  	// #32
  43f0a4:	mov	x9, x20
  43f0a8:	b	43f0c8 <feof@plt+0x3bfe8>
  43f0ac:	mov	w15, w13
  43f0b0:	add	x12, x12, #0x1
  43f0b4:	sub	x8, x8, #0x1
  43f0b8:	strb	w14, [x9]
  43f0bc:	add	x9, x9, #0x1
  43f0c0:	mov	w13, w15
  43f0c4:	cbz	x8, 43f14c <feof@plt+0x3c06c>
  43f0c8:	ldrb	w14, [x12]
  43f0cc:	tst	w13, #0xff
  43f0d0:	b.ne	43f110 <feof@plt+0x3c030>  // b.any
  43f0d4:	ldrh	w15, [x10, x14, lsl #1]
  43f0d8:	and	w15, w15, #0xc00
  43f0dc:	cbz	w15, 43f110 <feof@plt+0x3c030>
  43f0e0:	add	x13, x12, x8
  43f0e4:	sub	x15, x8, #0x1
  43f0e8:	mov	x8, x15
  43f0ec:	cbz	x15, 43f138 <feof@plt+0x3c058>
  43f0f0:	ldrb	w14, [x12, #1]
  43f0f4:	ldrh	w15, [x10, x14, lsl #1]
  43f0f8:	add	x14, x12, #0x1
  43f0fc:	mov	x12, x14
  43f100:	and	w16, w15, #0xc00
  43f104:	sub	x15, x8, #0x1
  43f108:	cbnz	w16, 43f0e8 <feof@plt+0x3c008>
  43f10c:	b	43f13c <feof@plt+0x3c05c>
  43f110:	cmp	w14, #0x27
  43f114:	b.eq	43f120 <feof@plt+0x3c040>  // b.none
  43f118:	cmp	w14, #0x22
  43f11c:	b.ne	43f0ac <feof@plt+0x3bfcc>  // b.any
  43f120:	tst	w13, #0xff
  43f124:	mov	w15, w14
  43f128:	b.eq	43f0b0 <feof@plt+0x3bfd0>  // b.none
  43f12c:	cmp	w14, w13, uxtb
  43f130:	csel	w15, wzr, w13, eq  // eq = none
  43f134:	b	43f0b0 <feof@plt+0x3bfd0>
  43f138:	mov	x14, x13
  43f13c:	mov	w15, wzr
  43f140:	strb	w11, [x9]
  43f144:	mov	x12, x14
  43f148:	b	43f0bc <feof@plt+0x3bfdc>
  43f14c:	sub	x8, x9, x20
  43f150:	cmp	x2, x8
  43f154:	b.ne	43f170 <feof@plt+0x3c090>  // b.any
  43f158:	mov	x0, x19
  43f15c:	mov	x1, x20
  43f160:	bl	403090 <bcmp@plt>
  43f164:	cmp	w0, #0x0
  43f168:	cset	w20, ne  // ne = any
  43f16c:	b	43f174 <feof@plt+0x3c094>
  43f170:	mov	w20, #0x1                   	// #1
  43f174:	mov	x0, x19
  43f178:	bl	402b20 <free@plt>
  43f17c:	mov	w0, w20
  43f180:	ldp	x20, x19, [sp, #80]
  43f184:	ldp	x22, x21, [sp, #64]
  43f188:	ldp	x24, x23, [sp, #48]
  43f18c:	ldp	x26, x25, [sp, #32]
  43f190:	ldr	x27, [sp, #16]
  43f194:	ldp	x29, x30, [sp], #96
  43f198:	ret
  43f19c:	mov	w20, wzr
  43f1a0:	b	43f174 <feof@plt+0x3c094>
  43f1a4:	sxtw	x8, w1
  43f1a8:	sbfiz	x9, x1, #4, #32
  43f1ac:	adrp	x10, 471000 <_obstack_memory_used@@Base+0xf838>
  43f1b0:	add	x10, x10, #0x3f2
  43f1b4:	sub	x8, x9, x8
  43f1b8:	add	x8, x10, x8
  43f1bc:	ldrb	w9, [x8]
  43f1c0:	ldrb	w11, [x8, #1]
  43f1c4:	ldrb	w12, [x8, #2]
  43f1c8:	add	x10, x0, #0x48d
  43f1cc:	strb	w9, [x0, #1152]
  43f1d0:	ldrb	w9, [x8, #3]
  43f1d4:	strb	w11, [x0, #1120]
  43f1d8:	ldrb	w11, [x8, #4]
  43f1dc:	strb	w12, [x0, #1127]
  43f1e0:	ldrb	w12, [x8, #5]
  43f1e4:	strb	w9, [x0, #1147]
  43f1e8:	ldrb	w9, [x8, #6]
  43f1ec:	strb	w11, [x0, #1164]
  43f1f0:	ldrb	w11, [x8, #7]
  43f1f4:	strb	w12, [x0, #1153]
  43f1f8:	ldrb	w12, [x8, #8]
  43f1fc:	strb	w9, [x0, #1126]
  43f200:	ldrb	w9, [x8, #9]
  43f204:	strb	w11, [x0, #1128]
  43f208:	ldrh	w11, [x8, #10]
  43f20c:	strb	w12, [x0, #1130]
  43f210:	ldrb	w12, [x8, #12]
  43f214:	strb	w9, [x0, #1161]
  43f218:	ldrb	w9, [x8, #13]
  43f21c:	ldrb	w8, [x8, #14]
  43f220:	str	w1, [x0, #1116]
  43f224:	strh	w11, [x10]
  43f228:	strb	w12, [x0, #1125]
  43f22c:	strb	w9, [x0, #1129]
  43f230:	strb	w8, [x0, #1167]
  43f234:	ret
  43f238:	stp	x29, x30, [sp, #-64]!
  43f23c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  43f240:	ldrb	w9, [x8, #2712]
  43f244:	stp	x22, x21, [sp, #32]
  43f248:	stp	x20, x19, [sp, #48]
  43f24c:	mov	x21, x2
  43f250:	mov	x19, x1
  43f254:	mov	w22, w0
  43f258:	stp	x24, x23, [sp, #16]
  43f25c:	mov	x29, sp
  43f260:	tbnz	w9, #0, 43f2c4 <feof@plt+0x3c1e4>
  43f264:	mov	w9, #0x1                   	// #1
  43f268:	strb	w9, [x8, #2712]
  43f26c:	bl	42f140 <feof@plt+0x2c060>
  43f270:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  43f274:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0xc838>
  43f278:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  43f27c:	add	x8, x8, #0x9b9
  43f280:	mov	w9, #0x5d                  	// #93
  43f284:	mov	w10, #0x7c                  	// #124
  43f288:	mov	w11, #0x5b5e                	// #23390
  43f28c:	mov	w12, #0x7d                  	// #125
  43f290:	mov	w13, #0x5c                  	// #92
  43f294:	mov	w14, #0x237b                	// #9083
  43f298:	mov	w15, #0x7e                  	// #126
  43f29c:	add	x0, x0, #0xaaf
  43f2a0:	add	x1, x1, #0xbed
  43f2a4:	strb	w9, [x8, #8]
  43f2a8:	strb	w10, [x8]
  43f2ac:	strh	w11, [x8, #6]
  43f2b0:	strb	w12, [x8, #29]
  43f2b4:	strb	w13, [x8, #14]
  43f2b8:	sturh	w14, [x8, #27]
  43f2bc:	strb	w15, [x8, #12]
  43f2c0:	bl	402a20 <bindtextdomain@plt>
  43f2c4:	mov	w0, #0x1                   	// #1
  43f2c8:	mov	w1, #0x588                 	// #1416
  43f2cc:	mov	w24, #0x1                   	// #1
  43f2d0:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  43f2d4:	sxtw	x8, w22
  43f2d8:	sbfiz	x9, x22, #4, #32
  43f2dc:	adrp	x10, 471000 <_obstack_memory_used@@Base+0xf838>
  43f2e0:	add	x10, x10, #0x3f2
  43f2e4:	sub	x8, x9, x8
  43f2e8:	add	x8, x10, x8
  43f2ec:	ldrb	w10, [x8, #1]
  43f2f0:	ldrb	w11, [x8, #2]
  43f2f4:	movi	v0.2d, #0x0
  43f2f8:	mov	x23, x0
  43f2fc:	str	q0, [x23, #80]!
  43f300:	ldrb	w9, [x8]
  43f304:	strb	w10, [x0, #1120]
  43f308:	ldrb	w10, [x8, #4]
  43f30c:	strb	w11, [x0, #1127]
  43f310:	ldrb	w11, [x8, #5]
  43f314:	strb	w9, [x0, #1152]
  43f318:	ldrb	w9, [x8, #3]
  43f31c:	strb	w10, [x0, #1164]
  43f320:	ldrb	w10, [x8, #7]
  43f324:	strb	w11, [x0, #1153]
  43f328:	ldrb	w11, [x8, #8]
  43f32c:	strb	w9, [x0, #1147]
  43f330:	ldrb	w9, [x8, #6]
  43f334:	strb	w10, [x0, #1128]
  43f338:	ldrb	w10, [x8, #9]
  43f33c:	strb	w11, [x0, #1130]
  43f340:	ldrh	w11, [x8, #10]
  43f344:	strb	w9, [x0, #1126]
  43f348:	add	x9, x0, #0x48d
  43f34c:	strb	w10, [x0, #1161]
  43f350:	ldrb	w10, [x8, #12]
  43f354:	str	xzr, [x0, #128]
  43f358:	str	w22, [x0, #1116]
  43f35c:	stp	q0, q0, [x0, #96]
  43f360:	strh	w11, [x9]
  43f364:	ldrb	w11, [x8, #13]
  43f368:	ldrb	w8, [x8, #14]
  43f36c:	add	x9, x0, #0x463
  43f370:	strb	w10, [x0, #1125]
  43f374:	mov	w10, #0x101                 	// #257
  43f378:	strb	w11, [x0, #1129]
  43f37c:	mov	w11, #0x8                   	// #8
  43f380:	strb	w8, [x0, #1167]
  43f384:	strh	w10, [x9]
  43f388:	mov	w9, #0xff                  	// #255
  43f38c:	mov	w8, #0x102                 	// #258
  43f390:	str	w11, [x0, #1112]
  43f394:	add	x11, x0, #0x473
  43f398:	strh	w9, [x0, #1198]
  43f39c:	mov	w9, #0x100                 	// #256
  43f3a0:	strh	w8, [x0, #1136]
  43f3a4:	strb	w24, [x0, #1132]
  43f3a8:	strh	w9, [x11]
  43f3ac:	add	x11, x0, #0x485
  43f3b0:	strb	w24, [x0, #1146]
  43f3b4:	strb	w24, [x0, #1148]
  43f3b8:	strh	w10, [x0, #1142]
  43f3bc:	strb	wzr, [x0, #1144]
  43f3c0:	strh	w8, [x11]
  43f3c4:	mov	w11, #0x20                  	// #32
  43f3c8:	dup	v0.2d, x11
  43f3cc:	adrp	x11, 471000 <_obstack_memory_used@@Base+0xf838>
  43f3d0:	ldr	q1, [x11, #960]
  43f3d4:	add	x8, x0, #0x4b8
  43f3d8:	mov	x20, x0
  43f3dc:	str	w24, [x0, #1192]
  43f3e0:	strh	w10, [x0, #1162]
  43f3e4:	strb	w24, [x0, #1245]
  43f3e8:	strb	wzr, [x0, #1134]
  43f3ec:	stp	q1, q0, [x8]
  43f3f0:	strh	w9, [x0, #1240]
  43f3f4:	strb	w24, [x0, #1242]
  43f3f8:	bl	422d8c <feof@plt+0x1fcac>
  43f3fc:	str	x0, [x20, #1168]
  43f400:	str	xzr, [x20, #1176]
  43f404:	bl	422d8c <feof@plt+0x1fcac>
  43f408:	ldrb	w9, [x20, #1123]
  43f40c:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x838>
  43f410:	add	x8, x8, #0xbb5
  43f414:	str	x8, [x20, #224]
  43f418:	mov	w8, #0x53                  	// #83
  43f41c:	str	x21, [x20, #40]
  43f420:	strb	w8, [x20, #668]
  43f424:	mov	w8, #0x16                  	// #22
  43f428:	cmp	w9, #0x0
  43f42c:	add	x21, x20, #0x1c8
  43f430:	str	x0, [x20, #1184]
  43f434:	strb	w8, [x20, #692]
  43f438:	cset	w8, eq  // eq = none
  43f43c:	mov	w1, #0xfa                  	// #250
  43f440:	mov	x0, x21
  43f444:	str	xzr, [x20, #672]
  43f448:	strh	wzr, [x20, #694]
  43f44c:	strb	w8, [x20, #21]
  43f450:	bl	42fba0 <feof@plt+0x2cac0>
  43f454:	ldr	x8, [x20, #472]
  43f458:	mov	x0, x20
  43f45c:	mov	x1, xzr
  43f460:	str	x21, [x20, #488]
  43f464:	str	x23, [x20, #136]
  43f468:	str	xzr, [x20, #120]
  43f46c:	str	xzr, [x20, #88]
  43f470:	str	x8, [x20, #448]
  43f474:	str	xzr, [x23]
  43f478:	bl	433e38 <feof@plt+0x30d58>
  43f47c:	str	x0, [x20, #56]
  43f480:	mov	x0, x20
  43f484:	mov	x1, xzr
  43f488:	bl	433e38 <feof@plt+0x30d58>
  43f48c:	str	x0, [x20, #64]
  43f490:	mov	x8, #0xfffffffffffffffe    	// #-2
  43f494:	mov	x0, x20
  43f498:	str	xzr, [x20, #1400]
  43f49c:	str	wzr, [x20, #1408]
  43f4a0:	str	x8, [x20, #656]
  43f4a4:	bl	42c004 <feof@plt+0x28f24>
  43f4a8:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x838>
  43f4ac:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x960>
  43f4b0:	add	x0, x20, #0x328
  43f4b4:	add	x3, x3, #0x1c8
  43f4b8:	add	x4, x4, #0xb20
  43f4bc:	mov	x1, xzr
  43f4c0:	mov	x2, xzr
  43f4c4:	bl	461450 <_obstack_begin@@Base>
  43f4c8:	mov	x0, x20
  43f4cc:	bl	42db3c <feof@plt+0x2aa5c>
  43f4d0:	mov	x0, x20
  43f4d4:	mov	x1, x19
  43f4d8:	bl	42ee7c <feof@plt+0x2bd9c>
  43f4dc:	mov	x0, x20
  43f4e0:	ldp	x20, x19, [sp, #48]
  43f4e4:	ldp	x22, x21, [sp, #32]
  43f4e8:	ldp	x24, x23, [sp, #16]
  43f4ec:	ldp	x29, x30, [sp], #64
  43f4f0:	ret
  43f4f4:	str	x1, [x0, #40]
  43f4f8:	ret
  43f4fc:	stp	x29, x30, [sp, #-48]!
  43f500:	stp	x22, x21, [sp, #16]
  43f504:	stp	x20, x19, [sp, #32]
  43f508:	mov	x19, x0
  43f50c:	ldr	x0, [x0, #1096]
  43f510:	mov	x29, sp
  43f514:	bl	402b20 <free@plt>
  43f518:	ldr	x8, [x19]
  43f51c:	cbz	x8, 43f530 <feof@plt+0x3c450>
  43f520:	mov	x0, x19
  43f524:	bl	426b60 <feof@plt+0x23a80>
  43f528:	ldr	x8, [x19]
  43f52c:	cbnz	x8, 43f520 <feof@plt+0x3c440>
  43f530:	ldr	x0, [x19, #1312]
  43f534:	bl	402b20 <free@plt>
  43f538:	ldr	x0, [x19, #504]
  43f53c:	cbz	x0, 43f54c <feof@plt+0x3c46c>
  43f540:	bl	402b20 <free@plt>
  43f544:	str	xzr, [x19, #504]
  43f548:	str	wzr, [x19, #512]
  43f54c:	ldr	x0, [x19, #712]
  43f550:	cbz	x0, 43f558 <feof@plt+0x3c478>
  43f554:	bl	43c350 <feof@plt+0x39270>
  43f558:	add	x0, x19, #0x328
  43f55c:	mov	x1, xzr
  43f560:	bl	461734 <_obstack_free@@Base>
  43f564:	mov	x0, x19
  43f568:	bl	42f090 <feof@plt+0x2bfb0>
  43f56c:	mov	x0, x19
  43f570:	bl	42dc9c <feof@plt+0x2abbc>
  43f574:	mov	x0, x19
  43f578:	bl	420e00 <feof@plt+0x1dd20>
  43f57c:	ldr	x0, [x19, #56]
  43f580:	bl	434098 <feof@plt+0x30fb8>
  43f584:	ldr	x0, [x19, #64]
  43f588:	bl	434098 <feof@plt+0x30fb8>
  43f58c:	ldr	x0, [x19, #72]
  43f590:	bl	434098 <feof@plt+0x30fb8>
  43f594:	add	x21, x19, #0x1c8
  43f598:	mov	x20, x21
  43f59c:	b	43f5a8 <feof@plt+0x3c4c8>
  43f5a0:	mov	x20, x22
  43f5a4:	cbz	x22, 43f5c8 <feof@plt+0x3c4e8>
  43f5a8:	ldr	x0, [x20, #16]
  43f5ac:	ldr	x22, [x20]
  43f5b0:	bl	402b20 <free@plt>
  43f5b4:	cmp	x20, x21
  43f5b8:	b.eq	43f5a0 <feof@plt+0x3c4c0>  // b.none
  43f5bc:	mov	x0, x20
  43f5c0:	bl	402b20 <free@plt>
  43f5c4:	b	43f5a0 <feof@plt+0x3c4c0>
  43f5c8:	ldr	x0, [x19, #80]
  43f5cc:	cbz	x0, 43f5e0 <feof@plt+0x3c500>
  43f5d0:	ldr	x20, [x0]
  43f5d4:	bl	402b20 <free@plt>
  43f5d8:	mov	x0, x20
  43f5dc:	cbnz	x20, 43f5d0 <feof@plt+0x3c4f0>
  43f5e0:	ldr	x0, [x19, #1384]
  43f5e4:	cbz	x0, 43f638 <feof@plt+0x3c558>
  43f5e8:	ldr	w8, [x19, #1392]
  43f5ec:	cmp	w8, #0x1
  43f5f0:	b.lt	43f634 <feof@plt+0x3c554>  // b.tstop
  43f5f4:	mov	x20, xzr
  43f5f8:	mov	x21, xzr
  43f5fc:	ldr	x0, [x0, x20]
  43f600:	bl	402b20 <free@plt>
  43f604:	ldrsw	x8, [x19, #1392]
  43f608:	ldr	x0, [x19, #1384]
  43f60c:	add	x21, x21, #0x1
  43f610:	add	x20, x20, #0x10
  43f614:	cmp	x21, x8
  43f618:	b.lt	43f5fc <feof@plt+0x3c51c>  // b.tstop
  43f61c:	b	43f634 <feof@plt+0x3c554>
  43f620:	ldr	x8, [x20]
  43f624:	str	x8, [x19, #1400]
  43f628:	ldr	x0, [x20, #8]
  43f62c:	bl	402b20 <free@plt>
  43f630:	mov	x0, x20
  43f634:	bl	402b20 <free@plt>
  43f638:	ldr	x20, [x19, #1400]
  43f63c:	cbnz	x20, 43f620 <feof@plt+0x3c540>
  43f640:	mov	x0, x19
  43f644:	ldp	x20, x19, [sp, #32]
  43f648:	ldp	x22, x21, [sp, #16]
  43f64c:	ldp	x29, x30, [sp], #48
  43f650:	b	402b20 <free@plt>
  43f654:	sub	w8, w0, #0x1
  43f658:	cmp	w8, #0x21
  43f65c:	mov	x0, xzr
  43f660:	b.hi	43f6fc <feof@plt+0x3c61c>  // b.pmore
  43f664:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  43f668:	add	x9, x9, #0x3d0
  43f66c:	adr	x10, 43f684 <feof@plt+0x3c5a4>
  43f670:	ldrb	w11, [x9, x8]
  43f674:	add	x10, x10, x11, lsl #2
  43f678:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f67c:	add	x8, x8, #0x540
  43f680:	br	x10
  43f684:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f688:	add	x8, x8, #0x590
  43f68c:	b	43f6f8 <feof@plt+0x3c618>
  43f690:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f694:	add	x8, x8, #0x560
  43f698:	b	43f6f8 <feof@plt+0x3c618>
  43f69c:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6a0:	add	x8, x8, #0x570
  43f6a4:	b	43f6f8 <feof@plt+0x3c618>
  43f6a8:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6ac:	add	x8, x8, #0x5d0
  43f6b0:	b	43f6f8 <feof@plt+0x3c618>
  43f6b4:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6b8:	add	x8, x8, #0x580
  43f6bc:	b	43f6f8 <feof@plt+0x3c618>
  43f6c0:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6c4:	add	x8, x8, #0x5b0
  43f6c8:	b	43f6f8 <feof@plt+0x3c618>
  43f6cc:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6d0:	add	x8, x8, #0x5a0
  43f6d4:	b	43f6f8 <feof@plt+0x3c618>
  43f6d8:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6dc:	add	x8, x8, #0x550
  43f6e0:	b	43f6f8 <feof@plt+0x3c618>
  43f6e4:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6e8:	add	x8, x8, #0x5c0
  43f6ec:	b	43f6f8 <feof@plt+0x3c618>
  43f6f0:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f6f4:	add	x8, x8, #0x5e0
  43f6f8:	ldr	x0, [x8]
  43f6fc:	ret
  43f700:	stp	x29, x30, [sp, #-48]!
  43f704:	stp	x22, x21, [sp, #16]
  43f708:	stp	x20, x19, [sp, #32]
  43f70c:	ldrb	w8, [x0, #1160]
  43f710:	mov	x19, x0
  43f714:	mov	x29, sp
  43f718:	cbz	w8, 43f724 <feof@plt+0x3c644>
  43f71c:	mov	w8, #0xa                   	// #10
  43f720:	b	43f740 <feof@plt+0x3c660>
  43f724:	ldrb	w8, [x19, #1243]
  43f728:	cbz	w8, 43f734 <feof@plt+0x3c654>
  43f72c:	ldrb	w8, [x19, #1153]
  43f730:	cbz	w8, 43f73c <feof@plt+0x3c65c>
  43f734:	mov	w8, #0xb                   	// #11
  43f738:	b	43f740 <feof@plt+0x3c660>
  43f73c:	mov	w8, #0xc                   	// #12
  43f740:	adrp	x20, 471000 <_obstack_memory_used@@Base+0xf838>
  43f744:	add	x20, x20, #0x5f0
  43f748:	add	x21, x20, x8, lsl #4
  43f74c:	mov	w22, #0x23                  	// #35
  43f750:	b	43f768 <feof@plt+0x3c688>
  43f754:	ldrh	w8, [x20, #10]
  43f758:	str	w8, [x0, #24]
  43f75c:	add	x20, x20, #0x10
  43f760:	cmp	x20, x21
  43f764:	b.cs	43f7b8 <feof@plt+0x3c6d8>  // b.hs, b.nlast
  43f768:	ldrh	w8, [x20, #10]
  43f76c:	cmp	w8, #0xa
  43f770:	b.ne	43f788 <feof@plt+0x3c6a8>  // b.any
  43f774:	ldr	w8, [x19, #1116]
  43f778:	cmp	w8, #0x15
  43f77c:	b.eq	43f75c <feof@plt+0x3c67c>  // b.none
  43f780:	ldr	x8, [x19, #1040]
  43f784:	cbz	x8, 43f75c <feof@plt+0x3c67c>
  43f788:	ldr	x1, [x20]
  43f78c:	ldrh	w2, [x20, #8]
  43f790:	mov	x0, x19
  43f794:	bl	42f080 <feof@plt+0x2bfa0>
  43f798:	ldrh	w8, [x0, #18]
  43f79c:	orr	w9, w8, #0x3
  43f7a0:	strh	w9, [x0, #18]
  43f7a4:	ldrb	w9, [x20, #12]
  43f7a8:	cbz	w9, 43f754 <feof@plt+0x3c674>
  43f7ac:	orr	w8, w8, w22
  43f7b0:	strh	w8, [x0, #18]
  43f7b4:	b	43f754 <feof@plt+0x3c674>
  43f7b8:	ldp	x20, x19, [sp, #32]
  43f7bc:	ldp	x22, x21, [sp, #16]
  43f7c0:	ldp	x29, x30, [sp], #48
  43f7c4:	ret
  43f7c8:	stp	x29, x30, [sp, #-64]!
  43f7cc:	stp	x22, x21, [sp, #32]
  43f7d0:	stp	x20, x19, [sp, #48]
  43f7d4:	ldrb	w8, [x0, #1160]
  43f7d8:	mov	x19, x0
  43f7dc:	mov	w20, w1
  43f7e0:	str	x23, [sp, #16]
  43f7e4:	mov	x29, sp
  43f7e8:	cbz	w8, 43f7f4 <feof@plt+0x3c714>
  43f7ec:	mov	w8, #0xa                   	// #10
  43f7f0:	b	43f810 <feof@plt+0x3c730>
  43f7f4:	ldrb	w8, [x19, #1243]
  43f7f8:	cbz	w8, 43f804 <feof@plt+0x3c724>
  43f7fc:	ldrb	w8, [x19, #1153]
  43f800:	cbz	w8, 43f80c <feof@plt+0x3c72c>
  43f804:	mov	w8, #0xb                   	// #11
  43f808:	b	43f810 <feof@plt+0x3c730>
  43f80c:	mov	w8, #0xc                   	// #12
  43f810:	adrp	x21, 471000 <_obstack_memory_used@@Base+0xf838>
  43f814:	add	x21, x21, #0x5f0
  43f818:	add	x22, x21, x8, lsl #4
  43f81c:	mov	w23, #0x23                  	// #35
  43f820:	b	43f838 <feof@plt+0x3c758>
  43f824:	ldrh	w8, [x21, #10]
  43f828:	str	w8, [x0, #24]
  43f82c:	add	x21, x21, #0x10
  43f830:	cmp	x21, x22
  43f834:	b.cs	43f888 <feof@plt+0x3c7a8>  // b.hs, b.nlast
  43f838:	ldrh	w8, [x21, #10]
  43f83c:	cmp	w8, #0xa
  43f840:	b.ne	43f858 <feof@plt+0x3c778>  // b.any
  43f844:	ldr	w8, [x19, #1116]
  43f848:	cmp	w8, #0x15
  43f84c:	b.eq	43f82c <feof@plt+0x3c74c>  // b.none
  43f850:	ldr	x8, [x19, #1040]
  43f854:	cbz	x8, 43f82c <feof@plt+0x3c74c>
  43f858:	ldr	x1, [x21]
  43f85c:	ldrh	w2, [x21, #8]
  43f860:	mov	x0, x19
  43f864:	bl	42f080 <feof@plt+0x2bfa0>
  43f868:	ldrh	w8, [x0, #18]
  43f86c:	orr	w9, w8, #0x3
  43f870:	strh	w9, [x0, #18]
  43f874:	ldrb	w9, [x21, #12]
  43f878:	cbz	w9, 43f824 <feof@plt+0x3c744>
  43f87c:	orr	w8, w8, w23
  43f880:	strh	w8, [x0, #18]
  43f884:	b	43f824 <feof@plt+0x3c744>
  43f888:	ldrb	w8, [x19, #1160]
  43f88c:	cbnz	w8, 43f8b0 <feof@plt+0x3c7d0>
  43f890:	ldrb	w8, [x19, #1243]
  43f894:	cbz	w8, 43f8a0 <feof@plt+0x3c7c0>
  43f898:	ldrb	w8, [x19, #1153]
  43f89c:	cbz	w8, 43f8b0 <feof@plt+0x3c7d0>
  43f8a0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43f8a4:	add	x1, x1, #0x790
  43f8a8:	mov	x0, x19
  43f8ac:	bl	426840 <feof@plt+0x23760>
  43f8b0:	ldrb	w9, [x19, #1120]
  43f8b4:	ldr	w8, [x19, #1116]
  43f8b8:	cbz	w9, 43f8d4 <feof@plt+0x3c7f4>
  43f8bc:	sub	w8, w8, #0xd
  43f8c0:	cmp	w8, #0x8
  43f8c4:	b.cs	43f904 <feof@plt+0x3c824>  // b.hs, b.nlast
  43f8c8:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  43f8cc:	add	x9, x9, #0x6b0
  43f8d0:	b	43f918 <feof@plt+0x3c838>
  43f8d4:	sub	w8, w8, #0x2
  43f8d8:	cmp	w8, #0x14
  43f8dc:	b.cs	43f8f0 <feof@plt+0x3c810>  // b.hs, b.nlast
  43f8e0:	mov	w9, #0x1d7                 	// #471
  43f8e4:	movk	w9, #0x8, lsl #16
  43f8e8:	lsr	w9, w9, w8
  43f8ec:	tbnz	w9, #0, 43f910 <feof@plt+0x3c830>
  43f8f0:	ldrb	w8, [x19, #1152]
  43f8f4:	cbz	w8, 43f924 <feof@plt+0x3c844>
  43f8f8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43f8fc:	add	x1, x1, #0x873
  43f900:	b	43f91c <feof@plt+0x3c83c>
  43f904:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43f908:	add	x1, x1, #0x7eb
  43f90c:	b	43f91c <feof@plt+0x3c83c>
  43f910:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  43f914:	add	x9, x9, #0x6f0
  43f918:	ldr	x1, [x9, w8, sxtw #3]
  43f91c:	mov	x0, x19
  43f920:	bl	426840 <feof@plt+0x23760>
  43f924:	ldrb	w8, [x19, #1128]
  43f928:	cbz	w8, 43f964 <feof@plt+0x3c884>
  43f92c:	ldrb	w8, [x19, #1120]
  43f930:	cbz	w8, 43f944 <feof@plt+0x3c864>
  43f934:	ldr	w8, [x19, #1116]
  43f938:	sub	w8, w8, #0xb
  43f93c:	cmp	w8, #0x2
  43f940:	b.cc	43f964 <feof@plt+0x3c884>  // b.lo, b.ul, b.last
  43f944:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43f948:	add	x1, x1, #0x88c
  43f94c:	mov	x0, x19
  43f950:	bl	426840 <feof@plt+0x23760>
  43f954:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43f958:	add	x1, x1, #0x89e
  43f95c:	mov	x0, x19
  43f960:	bl	426840 <feof@plt+0x23760>
  43f964:	adrp	x8, 471000 <_obstack_memory_used@@Base+0xf838>
  43f968:	adrp	x9, 471000 <_obstack_memory_used@@Base+0xf838>
  43f96c:	add	x8, x8, #0x8b0
  43f970:	add	x9, x9, #0x8c2
  43f974:	cmp	w20, #0x0
  43f978:	csel	x1, x9, x8, eq  // eq = none
  43f97c:	mov	x0, x19
  43f980:	bl	426840 <feof@plt+0x23760>
  43f984:	ldrb	w8, [x19, #1122]
  43f988:	cbz	w8, 43f9ac <feof@plt+0x3c8cc>
  43f98c:	mov	x0, x19
  43f990:	ldp	x20, x19, [sp, #48]
  43f994:	ldp	x22, x21, [sp, #32]
  43f998:	ldr	x23, [sp, #16]
  43f99c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  43f9a0:	add	x1, x1, #0x8d4
  43f9a4:	ldp	x29, x30, [sp], #64
  43f9a8:	b	426840 <feof@plt+0x23760>
  43f9ac:	ldp	x20, x19, [sp, #48]
  43f9b0:	ldp	x22, x21, [sp, #32]
  43f9b4:	ldr	x23, [sp, #16]
  43f9b8:	ldp	x29, x30, [sp], #64
  43f9bc:	ret
  43f9c0:	stp	x29, x30, [sp, #-48]!
  43f9c4:	stp	x22, x21, [sp, #16]
  43f9c8:	stp	x20, x19, [sp, #32]
  43f9cc:	ldrb	w8, [x0, #1120]
  43f9d0:	mov	x19, x0
  43f9d4:	mov	x29, sp
  43f9d8:	cbz	w8, 43f9e0 <feof@plt+0x3c900>
  43f9dc:	strb	wzr, [x19, #1138]
  43f9e0:	ldrb	w9, [x19, #1155]
  43f9e4:	cbz	w9, 43f9fc <feof@plt+0x3c91c>
  43f9e8:	ldrb	w9, [x19, #1244]
  43f9ec:	cbnz	w9, 43f9f8 <feof@plt+0x3c918>
  43f9f0:	mov	w9, #0x1                   	// #1
  43f9f4:	strb	w9, [x19, #24]
  43f9f8:	strb	wzr, [x19, #1160]
  43f9fc:	ldrb	w9, [x19, #1136]
  43fa00:	cmp	w9, #0x2
  43fa04:	b.ne	43fa18 <feof@plt+0x3c938>  // b.any
  43fa08:	ldrb	w9, [x19, #1125]
  43fa0c:	cmp	w9, #0x0
  43fa10:	cset	w9, eq  // eq = none
  43fa14:	strb	w9, [x19, #1136]
  43fa18:	ldrb	w9, [x19, #1160]
  43fa1c:	cbz	w9, 43fa28 <feof@plt+0x3c948>
  43fa20:	strb	wzr, [x19, #1125]
  43fa24:	strb	wzr, [x19, #1136]
  43fa28:	cbz	w8, 43fa38 <feof@plt+0x3c958>
  43fa2c:	ldrb	w8, [x19, #1158]
  43fa30:	cmp	w8, #0x0
  43fa34:	cset	w8, ne  // ne = any
  43fa38:	ldrb	w9, [x19, #1159]
  43fa3c:	mov	w10, #0x84                  	// #132
  43fa40:	orr	w10, w8, w10
  43fa44:	cmp	w9, #0x0
  43fa48:	csel	w8, w8, w10, eq  // eq = none
  43fa4c:	cbz	w8, 43faa4 <feof@plt+0x3c9c4>
  43fa50:	adrp	x21, 471000 <_obstack_memory_used@@Base+0xf838>
  43fa54:	adrp	x22, 471000 <_obstack_memory_used@@Base+0xf838>
  43fa58:	lsl	w20, w8, #2
  43fa5c:	add	x21, x21, #0x540
  43fa60:	add	x22, x22, #0x5f0
  43fa64:	ldr	x1, [x21]
  43fa68:	ldrh	w2, [x21, #8]
  43fa6c:	mov	x0, x19
  43fa70:	bl	42f080 <feof@plt+0x2bfa0>
  43fa74:	ldrh	w8, [x0, #18]
  43fa78:	ldrb	w9, [x0, #16]
  43fa7c:	orr	w8, w8, w20
  43fa80:	and	w9, w9, #0xfe
  43fa84:	strh	w8, [x0, #18]
  43fa88:	strb	w9, [x0, #16]
  43fa8c:	ldrb	w8, [x21, #10]
  43fa90:	add	x21, x21, #0x10
  43fa94:	cmp	x21, x22
  43fa98:	lsl	w8, w8, #1
  43fa9c:	strb	w8, [x0, #16]
  43faa0:	b.cc	43fa64 <feof@plt+0x3c984>  // b.lo, b.ul, b.last
  43faa4:	ldp	x20, x19, [sp, #32]
  43faa8:	ldp	x22, x21, [sp, #16]
  43faac:	ldp	x29, x30, [sp], #48
  43fab0:	ret
  43fab4:	stp	x29, x30, [sp, #-48]!
  43fab8:	stp	x20, x19, [sp, #32]
  43fabc:	ldr	w8, [x0, #1200]
  43fac0:	mov	x19, x0
  43fac4:	mov	x20, x1
  43fac8:	str	x21, [sp, #16]
  43facc:	mov	x29, sp
  43fad0:	cbz	w8, 43faec <feof@plt+0x3ca0c>
  43fad4:	ldr	x0, [x19, #712]
  43fad8:	cbnz	x0, 43fae4 <feof@plt+0x3ca04>
  43fadc:	bl	43c344 <feof@plt+0x39264>
  43fae0:	str	x0, [x19, #712]
  43fae4:	mov	x1, x20
  43fae8:	bl	43c654 <feof@plt+0x39574>
  43faec:	add	x2, x19, #0xd8
  43faf0:	mov	x0, x19
  43faf4:	mov	x1, x20
  43faf8:	mov	w3, wzr
  43fafc:	mov	w4, wzr
  43fb00:	mov	w5, wzr
  43fb04:	mov	w6, wzr
  43fb08:	bl	42c944 <feof@plt+0x29864>
  43fb0c:	str	x0, [x19, #288]
  43fb10:	bl	42c934 <feof@plt+0x29854>
  43fb14:	tbz	w0, #0, 43fb20 <feof@plt+0x3ca40>
  43fb18:	mov	x20, xzr
  43fb1c:	b	43fbcc <feof@plt+0x3caec>
  43fb20:	ldr	x1, [x19, #288]
  43fb24:	mov	x0, x19
  43fb28:	mov	w2, wzr
  43fb2c:	mov	w3, wzr
  43fb30:	bl	42d37c <feof@plt+0x2a29c>
  43fb34:	ldrb	w8, [x19, #1155]
  43fb38:	cbz	w8, 43fbcc <feof@plt+0x3caec>
  43fb3c:	mov	x0, x19
  43fb40:	bl	4300b4 <feof@plt+0x2cfd4>
  43fb44:	ldrb	w8, [x0, #4]
  43fb48:	cmp	w8, #0x25
  43fb4c:	b.ne	43fba4 <feof@plt+0x3cac4>  // b.any
  43fb50:	mov	x20, x0
  43fb54:	mov	w8, #0x1                   	// #1
  43fb58:	mov	x0, x19
  43fb5c:	strb	w8, [x19, #16]
  43fb60:	bl	4300b4 <feof@plt+0x2cfd4>
  43fb64:	mov	x21, x0
  43fb68:	mov	w1, #0x1                   	// #1
  43fb6c:	mov	x0, x19
  43fb70:	bl	438d5c <feof@plt+0x35c7c>
  43fb74:	strb	wzr, [x19, #16]
  43fb78:	ldrb	w8, [x21, #4]
  43fb7c:	cmp	w8, #0x37
  43fb80:	b.ne	43fba4 <feof@plt+0x3cac4>  // b.any
  43fb84:	ldrh	w8, [x20, #6]
  43fb88:	mov	x0, x19
  43fb8c:	and	w1, w8, #0x1
  43fb90:	bl	4246ec <feof@plt+0x2160c>
  43fb94:	cbz	w0, 43fba4 <feof@plt+0x3cac4>
  43fb98:	mov	x0, x19
  43fb9c:	bl	43fc78 <feof@plt+0x3cb98>
  43fba0:	b	43fbb0 <feof@plt+0x3cad0>
  43fba4:	mov	w1, #0x1                   	// #1
  43fba8:	mov	x0, x19
  43fbac:	bl	438d5c <feof@plt+0x35c7c>
  43fbb0:	ldr	x8, [x19, #40]
  43fbb4:	mov	w10, #0x18                  	// #24
  43fbb8:	ldr	w9, [x8, #12]
  43fbbc:	ldr	x8, [x8]
  43fbc0:	sub	w9, w9, #0x1
  43fbc4:	smaddl	x8, w9, w10, x8
  43fbc8:	ldr	x20, [x8, #8]
  43fbcc:	mov	x0, x20
  43fbd0:	ldp	x20, x19, [sp, #32]
  43fbd4:	ldr	x21, [sp, #16]
  43fbd8:	ldp	x29, x30, [sp], #48
  43fbdc:	ret
  43fbe0:	stp	x29, x30, [sp, #-32]!
  43fbe4:	stp	x20, x19, [sp, #16]
  43fbe8:	ldrb	w8, [x0, #1151]
  43fbec:	mov	x19, x0
  43fbf0:	mov	x20, x1
  43fbf4:	mov	x29, sp
  43fbf8:	cbz	w8, 43fc1c <feof@plt+0x3cb3c>
  43fbfc:	adrp	x1, 437000 <feof@plt+0x33f20>
  43fc00:	add	x1, x1, #0xdc8
  43fc04:	mov	x0, x19
  43fc08:	mov	x2, xzr
  43fc0c:	bl	42f0fc <feof@plt+0x2c01c>
  43fc10:	b	43fc1c <feof@plt+0x3cb3c>
  43fc14:	mov	x0, x19
  43fc18:	bl	426b60 <feof@plt+0x23a80>
  43fc1c:	ldr	x8, [x19]
  43fc20:	cbnz	x8, 43fc14 <feof@plt+0x3cb34>
  43fc24:	cbz	x20, 43fc54 <feof@plt+0x3cb74>
  43fc28:	ldr	w8, [x19, #1200]
  43fc2c:	cbz	w8, 43fc54 <feof@plt+0x3cb74>
  43fc30:	ldr	x0, [x19, #712]
  43fc34:	mov	w2, #0x48                  	// #72
  43fc38:	mov	x1, x20
  43fc3c:	bl	43c940 <feof@plt+0x39860>
  43fc40:	ldrb	w8, [x19, #1205]
  43fc44:	cbz	w8, 43fc54 <feof@plt+0x3cb74>
  43fc48:	ldr	x0, [x19, #712]
  43fc4c:	mov	x1, x20
  43fc50:	bl	43cb64 <feof@plt+0x39a84>
  43fc54:	ldrb	w8, [x19, #1131]
  43fc58:	cbz	w8, 43fc6c <feof@plt+0x3cb8c>
  43fc5c:	mov	x0, x19
  43fc60:	ldp	x20, x19, [sp, #16]
  43fc64:	ldp	x29, x30, [sp], #32
  43fc68:	b	42dea8 <feof@plt+0x2adc8>
  43fc6c:	ldp	x20, x19, [sp, #16]
  43fc70:	ldp	x29, x30, [sp], #32
  43fc74:	ret
  43fc78:	stp	x29, x30, [sp, #-48]!
  43fc7c:	stp	x22, x21, [sp, #16]
  43fc80:	stp	x20, x19, [sp, #32]
  43fc84:	mov	x29, sp
  43fc88:	mov	x19, x0
  43fc8c:	bl	4300b4 <feof@plt+0x2cfd4>
  43fc90:	ldrb	w8, [x0, #4]
  43fc94:	cmp	w8, #0x25
  43fc98:	b.ne	43fd50 <feof@plt+0x3cc70>  // b.any
  43fc9c:	mov	x0, x19
  43fca0:	bl	4300b4 <feof@plt+0x2cfd4>
  43fca4:	ldrb	w8, [x0, #4]
  43fca8:	cmp	w8, #0x37
  43fcac:	b.ne	43fd58 <feof@plt+0x3cc78>  // b.any
  43fcb0:	mov	x0, x19
  43fcb4:	bl	4300b4 <feof@plt+0x2cfd4>
  43fcb8:	ldrb	w8, [x0, #4]
  43fcbc:	cmp	w8, #0x3e
  43fcc0:	b.ne	43fd60 <feof@plt+0x3cc80>  // b.any
  43fcc4:	ldr	w8, [x0, #8]
  43fcc8:	mov	x20, x0
  43fccc:	cmp	w8, #0x5
  43fcd0:	b.cc	43fd60 <feof@plt+0x3cc80>  // b.lo, b.ul, b.last
  43fcd4:	ldr	x9, [x20, #16]
  43fcd8:	sub	w10, w8, #0x2
  43fcdc:	ldrb	w10, [x9, w10, uxtw]
  43fce0:	cmp	w10, #0x2f
  43fce4:	b.ne	43fd60 <feof@plt+0x3cc80>  // b.any
  43fce8:	sub	w10, w8, #0x3
  43fcec:	ldrb	w11, [x9, x10]
  43fcf0:	cmp	w11, #0x2f
  43fcf4:	b.ne	43fd60 <feof@plt+0x3cc80>  // b.any
  43fcf8:	ldr	x22, [x19, #920]
  43fcfc:	cbz	x22, 43fd3c <feof@plt+0x3cc5c>
  43fd00:	add	x10, x10, #0xf
  43fd04:	mov	x11, sp
  43fd08:	and	x10, x10, #0x1fffffff0
  43fd0c:	sub	x21, x11, x10
  43fd10:	mov	sp, x21
  43fd14:	add	x1, x9, #0x1
  43fd18:	sub	w2, w8, #0x4
  43fd1c:	mov	x0, x21
  43fd20:	bl	4029c0 <memcpy@plt>
  43fd24:	ldr	w8, [x20, #8]
  43fd28:	mov	x0, x19
  43fd2c:	mov	x1, x21
  43fd30:	sub	w8, w8, #0x4
  43fd34:	strb	wzr, [x21, w8, uxtw]
  43fd38:	blr	x22
  43fd3c:	mov	sp, x29
  43fd40:	ldp	x20, x19, [sp, #32]
  43fd44:	ldp	x22, x21, [sp, #16]
  43fd48:	ldp	x29, x30, [sp], #48
  43fd4c:	ret
  43fd50:	mov	w1, #0x1                   	// #1
  43fd54:	b	43fd64 <feof@plt+0x3cc84>
  43fd58:	mov	w1, #0x2                   	// #2
  43fd5c:	b	43fd64 <feof@plt+0x3cc84>
  43fd60:	mov	w1, #0x3                   	// #3
  43fd64:	mov	x0, x19
  43fd68:	mov	sp, x29
  43fd6c:	ldp	x20, x19, [sp, #32]
  43fd70:	ldp	x22, x21, [sp, #16]
  43fd74:	ldp	x29, x30, [sp], #48
  43fd78:	b	438d5c <feof@plt+0x35c7c>
  43fd7c:	sub	sp, sp, #0x60
  43fd80:	stp	x29, x30, [sp, #80]
  43fd84:	add	x29, sp, #0x50
  43fd88:	movi	v0.2d, #0x0
  43fd8c:	stp	q0, q0, [sp]
  43fd90:	str	x0, [sp]
  43fd94:	str	w1, [sp, #8]
  43fd98:	mov	x0, sp
  43fd9c:	mov	w1, #0x48                  	// #72
  43fda0:	str	xzr, [sp, #64]
  43fda4:	stp	q0, q0, [sp, #32]
  43fda8:	bl	43feec <feof@plt+0x3ce0c>
  43fdac:	cbz	x0, 43fdc8 <feof@plt+0x3cce8>
  43fdb0:	ldp	q0, q3, [sp]
  43fdb4:	ldr	x8, [sp, #64]
  43fdb8:	ldp	q1, q2, [sp, #32]
  43fdbc:	stp	q0, q3, [x0]
  43fdc0:	str	x8, [x0, #64]
  43fdc4:	stp	q1, q2, [x0, #32]
  43fdc8:	ldp	x29, x30, [sp, #80]
  43fdcc:	add	sp, sp, #0x60
  43fdd0:	ret
  43fdd4:	sub	sp, sp, #0x50
  43fdd8:	stp	x29, x30, [sp, #48]
  43fddc:	str	x19, [sp, #64]
  43fde0:	add	x29, sp, #0x30
  43fde4:	add	w8, w1, #0x1
  43fde8:	stp	x0, x2, [sp, #8]
  43fdec:	stp	x3, x4, [sp, #24]
  43fdf0:	mov	w1, #0x1000                	// #4096
  43fdf4:	mov	x2, xzr
  43fdf8:	mov	x3, xzr
  43fdfc:	mov	x19, x0
  43fe00:	str	w8, [sp]
  43fe04:	str	wzr, [sp, #40]
  43fe08:	bl	43feec <feof@plt+0x3ce0c>
  43fe0c:	cbz	x0, 43fe30 <feof@plt+0x3cd50>
  43fe10:	mov	x1, x0
  43fe14:	mov	w2, #0x1000                	// #4096
  43fe18:	mov	x0, x19
  43fe1c:	mov	x3, xzr
  43fe20:	mov	x4, xzr
  43fe24:	bl	4400b0 <feof@plt+0x3cfd0>
  43fe28:	mov	w8, #0x1                   	// #1
  43fe2c:	b	43fe34 <feof@plt+0x3cd54>
  43fe30:	mov	w8, wzr
  43fe34:	adrp	x0, 43f000 <feof@plt+0x3bf20>
  43fe38:	add	x0, x0, #0xe5c
  43fe3c:	mov	x1, sp
  43fe40:	str	w8, [sp, #44]
  43fe44:	bl	402960 <_Unwind_Backtrace@plt>
  43fe48:	ldr	w0, [sp, #40]
  43fe4c:	ldr	x19, [sp, #64]
  43fe50:	ldp	x29, x30, [sp, #48]
  43fe54:	add	sp, sp, #0x50
  43fe58:	ret
  43fe5c:	stp	x29, x30, [sp, #-32]!
  43fe60:	str	x19, [sp, #16]
  43fe64:	mov	x29, sp
  43fe68:	mov	x19, x1
  43fe6c:	add	x1, x29, #0x1c
  43fe70:	str	wzr, [x29, #28]
  43fe74:	bl	402990 <_Unwind_GetIPInfo@plt>
  43fe78:	ldr	w8, [x19]
  43fe7c:	subs	w8, w8, #0x1
  43fe80:	b.lt	43fe90 <feof@plt+0x3cdb0>  // b.tstop
  43fe84:	mov	w0, wzr
  43fe88:	str	w8, [x19]
  43fe8c:	b	43fee0 <feof@plt+0x3ce00>
  43fe90:	ldr	w8, [x29, #28]
  43fe94:	ldr	w9, [x19, #44]
  43fe98:	cmp	w8, #0x0
  43fe9c:	cset	w8, eq  // eq = none
  43fea0:	sub	x1, x0, x8
  43fea4:	cbz	w9, 43feb8 <feof@plt+0x3cdd8>
  43fea8:	ldp	x0, x2, [x19, #8]
  43feac:	ldp	x3, x4, [x19, #24]
  43feb0:	bl	440328 <feof@plt+0x3d248>
  43feb4:	b	43fed0 <feof@plt+0x3cdf0>
  43feb8:	ldr	x8, [x19, #16]
  43febc:	ldr	x0, [x19, #32]
  43fec0:	mov	x2, xzr
  43fec4:	mov	w3, wzr
  43fec8:	mov	x4, xzr
  43fecc:	blr	x8
  43fed0:	cmp	w0, #0x0
  43fed4:	mov	w8, #0x5                   	// #5
  43fed8:	str	w0, [x19, #40]
  43fedc:	csel	w0, wzr, w8, eq  // eq = none
  43fee0:	ldr	x19, [sp, #16]
  43fee4:	ldp	x29, x30, [sp], #32
  43fee8:	ret
  43feec:	stp	x29, x30, [sp, #-64]!
  43fef0:	stp	x24, x23, [sp, #16]
  43fef4:	stp	x22, x21, [sp, #32]
  43fef8:	stp	x20, x19, [sp, #48]
  43fefc:	mov	x29, sp
  43ff00:	ldr	w8, [x0, #8]
  43ff04:	mov	x20, x3
  43ff08:	mov	x19, x2
  43ff0c:	mov	x21, x0
  43ff10:	mov	x22, x1
  43ff14:	cbz	w8, 43ff30 <feof@plt+0x3ce50>
  43ff18:	add	x8, x21, #0x3c
  43ff1c:	mov	w9, #0x1                   	// #1
  43ff20:	ldaxr	w10, [x8]
  43ff24:	stlxr	w11, w9, [x8]
  43ff28:	cbnz	w11, 43ff20 <feof@plt+0x3ce40>
  43ff2c:	cbnz	w10, 440018 <feof@plt+0x3cf38>
  43ff30:	mov	x8, x21
  43ff34:	ldr	x23, [x8, #64]!
  43ff38:	cbz	x23, 440004 <feof@plt+0x3cf24>
  43ff3c:	ldr	x9, [x23, #8]
  43ff40:	cmp	x9, x22
  43ff44:	b.cs	43ff64 <feof@plt+0x3ce84>  // b.hs, b.nlast
  43ff48:	mov	x10, x23
  43ff4c:	ldr	x23, [x23]
  43ff50:	cbz	x23, 440004 <feof@plt+0x3cf24>
  43ff54:	ldr	x9, [x23, #8]
  43ff58:	cmp	x9, x22
  43ff5c:	b.cc	43ff48 <feof@plt+0x3ce68>  // b.lo, b.ul, b.last
  43ff60:	b	43ff68 <feof@plt+0x3ce88>
  43ff64:	mov	x10, x8
  43ff68:	ldr	x11, [x23]
  43ff6c:	add	x12, x22, #0x7
  43ff70:	and	x22, x12, #0xfffffffffffffff8
  43ff74:	subs	x9, x9, x22
  43ff78:	str	x11, [x10]
  43ff7c:	b.ls	440004 <feof@plt+0x3cf24>  // b.plast
  43ff80:	cmp	x9, #0x10
  43ff84:	b.cc	440004 <feof@plt+0x3cf24>  // b.lo, b.ul, b.last
  43ff88:	ldr	x10, [x8]
  43ff8c:	cbz	x10, 43fff8 <feof@plt+0x3cf18>
  43ff90:	mov	x12, xzr
  43ff94:	mov	x11, xzr
  43ff98:	mov	x13, x10
  43ff9c:	mov	x0, x8
  43ffa0:	b	43ffb8 <feof@plt+0x3ced8>
  43ffa4:	mov	x11, x0
  43ffa8:	mov	x0, x13
  43ffac:	ldr	x13, [x13]
  43ffb0:	add	x12, x12, #0x1
  43ffb4:	cbz	x13, 43ffd4 <feof@plt+0x3cef4>
  43ffb8:	cbz	x11, 43ffa4 <feof@plt+0x3cec4>
  43ffbc:	ldr	x14, [x11]
  43ffc0:	ldr	x15, [x13, #8]
  43ffc4:	ldr	x14, [x14, #8]
  43ffc8:	cmp	x15, x14
  43ffcc:	b.cc	43ffa4 <feof@plt+0x3cec4>  // b.lo, b.ul, b.last
  43ffd0:	b	43ffa8 <feof@plt+0x3cec8>
  43ffd4:	cmp	x12, #0x10
  43ffd8:	b.cc	43fff8 <feof@plt+0x3cf18>  // b.lo, b.ul, b.last
  43ffdc:	ldr	x10, [x11]
  43ffe0:	ldr	x12, [x10, #8]
  43ffe4:	cmp	x12, x9
  43ffe8:	b.cs	440004 <feof@plt+0x3cf24>  // b.hs, b.nlast
  43ffec:	ldr	x10, [x10]
  43fff0:	str	x10, [x11]
  43fff4:	ldr	x10, [x8]
  43fff8:	add	x11, x23, x22
  43fffc:	stp	x10, x9, [x11]
  440000:	str	x11, [x8]
  440004:	ldr	w8, [x21, #8]
  440008:	cbz	w8, 440014 <feof@plt+0x3cf34>
  44000c:	add	x8, x21, #0x3c
  440010:	stlr	wzr, [x8]
  440014:	cbnz	x23, 440098 <feof@plt+0x3cfb8>
  440018:	bl	402fd0 <getpagesize@plt>
  44001c:	sxtw	x8, w0
  440020:	add	x9, x22, x8
  440024:	sub	x9, x9, #0x1
  440028:	neg	x8, x8
  44002c:	and	x24, x9, x8
  440030:	mov	w2, #0x3                   	// #3
  440034:	mov	w3, #0x22                  	// #34
  440038:	mov	w4, #0xffffffff            	// #-1
  44003c:	mov	x0, xzr
  440040:	mov	x1, x24
  440044:	mov	x5, xzr
  440048:	bl	402d20 <mmap@plt>
  44004c:	cmn	x0, #0x1
  440050:	b.eq	440078 <feof@plt+0x3cf98>  // b.none
  440054:	add	x8, x22, #0x7
  440058:	and	x8, x8, #0xfffffffffffffff8
  44005c:	mov	x23, x0
  440060:	subs	x2, x24, x8
  440064:	b.ls	440098 <feof@plt+0x3cfb8>  // b.plast
  440068:	add	x1, x23, x8
  44006c:	mov	x0, x21
  440070:	bl	4400b0 <feof@plt+0x3cfd0>
  440074:	b	440098 <feof@plt+0x3cfb8>
  440078:	cbz	x19, 440094 <feof@plt+0x3cfb4>
  44007c:	bl	402e70 <__errno_location@plt>
  440080:	ldr	w2, [x0]
  440084:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  440088:	add	x1, x1, #0x99a
  44008c:	mov	x0, x20
  440090:	blr	x19
  440094:	mov	x23, xzr
  440098:	mov	x0, x23
  44009c:	ldp	x20, x19, [sp, #48]
  4400a0:	ldp	x22, x21, [sp, #32]
  4400a4:	ldp	x24, x23, [sp, #16]
  4400a8:	ldp	x29, x30, [sp], #64
  4400ac:	ret
  4400b0:	stp	x29, x30, [sp, #-48]!
  4400b4:	str	x21, [sp, #16]
  4400b8:	stp	x20, x19, [sp, #32]
  4400bc:	mov	x29, sp
  4400c0:	mov	x21, x2
  4400c4:	mov	x20, x1
  4400c8:	cmp	x2, #0x10, lsl #12
  4400cc:	mov	x19, x0
  4400d0:	b.cc	4400fc <feof@plt+0x3d01c>  // b.lo, b.ul, b.last
  4400d4:	bl	402fd0 <getpagesize@plt>
  4400d8:	sxtw	x8, w0
  4400dc:	sub	x8, x8, #0x1
  4400e0:	orr	x9, x20, x21
  4400e4:	tst	x8, x9
  4400e8:	b.ne	4400fc <feof@plt+0x3d01c>  // b.any
  4400ec:	mov	x0, x20
  4400f0:	mov	x1, x21
  4400f4:	bl	402d90 <munmap@plt>
  4400f8:	cbz	w0, 4401b0 <feof@plt+0x3d0d0>
  4400fc:	ldr	w8, [x19, #8]
  440100:	cbz	w8, 44011c <feof@plt+0x3d03c>
  440104:	add	x8, x19, #0x3c
  440108:	mov	w9, #0x1                   	// #1
  44010c:	ldaxr	w10, [x8]
  440110:	stlxr	w11, w9, [x8]
  440114:	cbnz	w11, 44010c <feof@plt+0x3d02c>
  440118:	cbnz	w10, 4401b0 <feof@plt+0x3d0d0>
  44011c:	cmp	x21, #0x10
  440120:	b.cc	4401a0 <feof@plt+0x3d0c0>  // b.lo, b.ul, b.last
  440124:	mov	x8, x19
  440128:	ldr	x9, [x8, #64]!
  44012c:	cbz	x9, 440198 <feof@plt+0x3d0b8>
  440130:	mov	x11, xzr
  440134:	mov	x10, xzr
  440138:	mov	x12, x9
  44013c:	mov	x0, x8
  440140:	b	440158 <feof@plt+0x3d078>
  440144:	mov	x10, x0
  440148:	mov	x0, x12
  44014c:	ldr	x12, [x12]
  440150:	add	x11, x11, #0x1
  440154:	cbz	x12, 440174 <feof@plt+0x3d094>
  440158:	cbz	x10, 440144 <feof@plt+0x3d064>
  44015c:	ldr	x13, [x10]
  440160:	ldr	x14, [x12, #8]
  440164:	ldr	x13, [x13, #8]
  440168:	cmp	x14, x13
  44016c:	b.cc	440144 <feof@plt+0x3d064>  // b.lo, b.ul, b.last
  440170:	b	440148 <feof@plt+0x3d068>
  440174:	cmp	x11, #0x10
  440178:	b.cc	440198 <feof@plt+0x3d0b8>  // b.lo, b.ul, b.last
  44017c:	ldr	x9, [x10]
  440180:	ldr	x11, [x9, #8]
  440184:	cmp	x11, x21
  440188:	b.cs	4401a0 <feof@plt+0x3d0c0>  // b.hs, b.nlast
  44018c:	ldr	x9, [x9]
  440190:	str	x9, [x10]
  440194:	ldr	x9, [x8]
  440198:	stp	x9, x21, [x20]
  44019c:	str	x20, [x8]
  4401a0:	ldr	w8, [x19, #8]
  4401a4:	cbz	w8, 4401b0 <feof@plt+0x3d0d0>
  4401a8:	add	x8, x19, #0x3c
  4401ac:	stlr	wzr, [x8]
  4401b0:	ldp	x20, x19, [sp, #32]
  4401b4:	ldr	x21, [sp, #16]
  4401b8:	ldp	x29, x30, [sp], #48
  4401bc:	ret
  4401c0:	stp	x29, x30, [sp, #-80]!
  4401c4:	str	x25, [sp, #16]
  4401c8:	stp	x24, x23, [sp, #32]
  4401cc:	stp	x22, x21, [sp, #48]
  4401d0:	stp	x20, x19, [sp, #64]
  4401d4:	mov	x29, sp
  4401d8:	ldr	x8, [x4, #16]
  4401dc:	mov	x19, x4
  4401e0:	mov	x20, x1
  4401e4:	cmp	x8, x1
  4401e8:	b.cs	440224 <feof@plt+0x3d144>  // b.hs, b.nlast
  4401ec:	mov	x22, x3
  4401f0:	mov	x24, x2
  4401f4:	mov	x21, x0
  4401f8:	bl	402fd0 <getpagesize@plt>
  4401fc:	ldr	x9, [x19, #8]
  440200:	cbz	x9, 44022c <feof@plt+0x3d14c>
  440204:	sxtw	x8, w0
  440208:	add	x9, x9, x20
  44020c:	cmp	x9, x8
  440210:	lsl	x9, x9, #1
  440214:	b.cs	440234 <feof@plt+0x3d154>  // b.hs, b.nlast
  440218:	cmp	x9, x8
  44021c:	csel	x23, x8, x9, hi  // hi = pmore
  440220:	b	440244 <feof@plt+0x3d164>
  440224:	ldp	x22, x9, [x19]
  440228:	b	4402a0 <feof@plt+0x3d1c0>
  44022c:	lsl	x23, x20, #4
  440230:	b	440244 <feof@plt+0x3d164>
  440234:	add	x9, x8, x9
  440238:	sub	x9, x9, #0x1
  44023c:	neg	x8, x8
  440240:	and	x23, x9, x8
  440244:	mov	x0, x21
  440248:	mov	x1, x23
  44024c:	mov	x2, x24
  440250:	mov	x3, x22
  440254:	bl	43feec <feof@plt+0x3ce0c>
  440258:	cbz	x0, 4402b0 <feof@plt+0x3d1d0>
  44025c:	ldr	x24, [x19]
  440260:	mov	x22, x0
  440264:	cbz	x24, 440290 <feof@plt+0x3d1b0>
  440268:	ldr	x25, [x19, #8]
  44026c:	mov	x0, x22
  440270:	mov	x1, x24
  440274:	mov	x2, x25
  440278:	bl	4029c0 <memcpy@plt>
  44027c:	ldr	x8, [x19, #16]
  440280:	mov	x0, x21
  440284:	mov	x1, x24
  440288:	add	x2, x8, x25
  44028c:	bl	4400b0 <feof@plt+0x3cfd0>
  440290:	ldr	x9, [x19, #8]
  440294:	str	x22, [x19]
  440298:	sub	x8, x23, x9
  44029c:	str	x8, [x19, #16]
  4402a0:	add	x0, x22, x9
  4402a4:	add	x9, x9, x20
  4402a8:	sub	x8, x8, x20
  4402ac:	stp	x9, x8, [x19, #8]
  4402b0:	ldp	x20, x19, [sp, #64]
  4402b4:	ldp	x22, x21, [sp, #48]
  4402b8:	ldp	x24, x23, [sp, #32]
  4402bc:	ldr	x25, [sp, #16]
  4402c0:	ldp	x29, x30, [sp], #80
  4402c4:	ret
  4402c8:	ldp	x0, x8, [x1]
  4402cc:	add	x8, x0, x8
  4402d0:	stp	x8, xzr, [x1]
  4402d4:	ret
  4402d8:	stp	x29, x30, [sp, #-32]!
  4402dc:	str	x19, [sp, #16]
  4402e0:	mov	x29, sp
  4402e4:	ldp	x8, x9, [x1, #8]
  4402e8:	ldr	x10, [x1]
  4402ec:	mov	x19, x1
  4402f0:	add	x11, x8, #0x7
  4402f4:	add	x8, x9, x8
  4402f8:	and	x9, x11, #0xfffffffffffffff8
  4402fc:	sub	x2, x8, x9
  440300:	add	x1, x10, x9
  440304:	bl	4400b0 <feof@plt+0x3cfd0>
  440308:	ldr	x8, [x19, #8]
  44030c:	str	xzr, [x19, #16]
  440310:	cbnz	x8, 440318 <feof@plt+0x3d238>
  440314:	str	xzr, [x19]
  440318:	ldr	x19, [sp, #16]
  44031c:	mov	w0, #0x1                   	// #1
  440320:	ldp	x29, x30, [sp], #32
  440324:	ret
  440328:	stp	x29, x30, [sp, #-64]!
  44032c:	str	x23, [sp, #16]
  440330:	stp	x22, x21, [sp, #32]
  440334:	stp	x20, x19, [sp, #48]
  440338:	mov	x29, sp
  44033c:	mov	x21, x2
  440340:	mov	x22, x1
  440344:	mov	x1, x3
  440348:	mov	x2, x4
  44034c:	mov	x19, x4
  440350:	mov	x20, x3
  440354:	mov	x23, x0
  440358:	bl	4403ac <feof@plt+0x3d2cc>
  44035c:	cbz	w0, 440368 <feof@plt+0x3d288>
  440360:	ldr	w8, [x23, #56]
  440364:	cbz	w8, 440380 <feof@plt+0x3d2a0>
  440368:	ldp	x20, x19, [sp, #48]
  44036c:	ldp	x22, x21, [sp, #32]
  440370:	ldr	x23, [sp, #16]
  440374:	mov	w0, wzr
  440378:	ldp	x29, x30, [sp], #64
  44037c:	ret
  440380:	ldr	x5, [x23, #24]
  440384:	mov	x0, x23
  440388:	mov	x1, x22
  44038c:	mov	x2, x21
  440390:	mov	x3, x20
  440394:	mov	x4, x19
  440398:	ldp	x20, x19, [sp, #48]
  44039c:	ldp	x22, x21, [sp, #32]
  4403a0:	ldr	x23, [sp, #16]
  4403a4:	ldp	x29, x30, [sp], #64
  4403a8:	br	x5
  4403ac:	sub	sp, sp, #0x90
  4403b0:	stp	x29, x30, [sp, #80]
  4403b4:	str	x23, [sp, #96]
  4403b8:	stp	x22, x21, [sp, #112]
  4403bc:	stp	x20, x19, [sp, #128]
  4403c0:	add	x29, sp, #0x50
  4403c4:	ldr	w8, [x0, #8]
  4403c8:	mov	x21, x2
  4403cc:	mov	x19, x0
  4403d0:	mov	x20, x1
  4403d4:	cbz	w8, 440400 <feof@plt+0x3d320>
  4403d8:	add	x8, x19, #0x38
  4403dc:	ldar	w8, [x8]
  4403e0:	cbz	w8, 440408 <feof@plt+0x3d328>
  4403e4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  4403e8:	add	x1, x1, #0x99f
  4403ec:	mov	w2, #0xffffffff            	// #-1
  4403f0:	mov	x0, x21
  4403f4:	blr	x20
  4403f8:	mov	w0, wzr
  4403fc:	b	44059c <feof@plt+0x3d4bc>
  440400:	ldr	w8, [x19, #56]
  440404:	cbnz	w8, 4403e4 <feof@plt+0x3d304>
  440408:	ldr	w8, [x19, #8]
  44040c:	cbz	w8, 440424 <feof@plt+0x3d344>
  440410:	add	x8, x19, #0x18
  440414:	ldar	x8, [x8]
  440418:	str	x8, [x29, #24]
  44041c:	cbnz	x8, 440598 <feof@plt+0x3d4b8>
  440420:	b	440430 <feof@plt+0x3d350>
  440424:	ldr	x8, [x19, #24]
  440428:	str	x8, [x29, #24]
  44042c:	cbnz	x8, 440598 <feof@plt+0x3d4b8>
  440430:	ldr	x22, [x19]
  440434:	cbz	x22, 440474 <feof@plt+0x3d394>
  440438:	add	x3, sp, #0xc
  44043c:	mov	x0, x22
  440440:	mov	x1, x20
  440444:	mov	x2, x21
  440448:	bl	440670 <feof@plt+0x3d590>
  44044c:	ldr	w8, [sp, #12]
  440450:	cmp	w0, #0x0
  440454:	cset	w9, lt  // lt = tstop
  440458:	mov	w2, w0
  44045c:	cmp	w8, #0x0
  440460:	cset	w10, eq  // eq = none
  440464:	and	w23, w9, w10
  440468:	tbz	w0, #31, 440544 <feof@plt+0x3d464>
  44046c:	cbnz	w8, 440478 <feof@plt+0x3d398>
  440470:	b	440544 <feof@plt+0x3d464>
  440474:	mov	w23, wzr
  440478:	adrp	x22, 471000 <_obstack_memory_used@@Base+0xf838>
  44047c:	add	x22, x22, #0x9c5
  440480:	add	x3, sp, #0xc
  440484:	mov	x0, x22
  440488:	mov	x1, x20
  44048c:	mov	x2, x21
  440490:	bl	440670 <feof@plt+0x3d590>
  440494:	ldr	w8, [sp, #12]
  440498:	mov	w9, #0xffffffff            	// #-1
  44049c:	mov	w2, w0
  4404a0:	cmp	w8, #0x0
  4404a4:	ccmp	w0, w9, #0x0, eq  // eq = none
  4404a8:	csinc	w23, w23, wzr, gt
  4404ac:	tbz	w0, #31, 440544 <feof@plt+0x3d464>
  4404b0:	cbz	w8, 440544 <feof@plt+0x3d464>
  4404b4:	adrp	x22, 471000 <_obstack_memory_used@@Base+0xf838>
  4404b8:	add	x22, x22, #0x9d4
  4404bc:	add	x3, sp, #0xc
  4404c0:	mov	x0, x22
  4404c4:	mov	x1, x20
  4404c8:	mov	x2, x21
  4404cc:	bl	440670 <feof@plt+0x3d590>
  4404d0:	ldr	w8, [sp, #12]
  4404d4:	mov	w9, #0xffffffff            	// #-1
  4404d8:	mov	w2, w0
  4404dc:	cmp	w8, #0x0
  4404e0:	ccmp	w0, w9, #0x0, eq  // eq = none
  4404e4:	csinc	w23, w23, wzr, gt
  4404e8:	tbz	w0, #31, 440544 <feof@plt+0x3d464>
  4404ec:	cbz	w8, 440544 <feof@plt+0x3d464>
  4404f0:	add	x22, sp, #0x10
  4404f4:	bl	402cf0 <getpid@plt>
  4404f8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xf838>
  4404fc:	sxtw	x3, w0
  440500:	add	x2, x2, #0x9e7
  440504:	add	x0, sp, #0x10
  440508:	mov	w1, #0x40                  	// #64
  44050c:	bl	402df0 <snprintf@plt>
  440510:	add	x0, sp, #0x10
  440514:	add	x3, sp, #0xc
  440518:	mov	x1, x20
  44051c:	mov	x2, x21
  440520:	bl	440670 <feof@plt+0x3d590>
  440524:	ldr	w8, [sp, #12]
  440528:	mov	w9, #0xffffffff            	// #-1
  44052c:	mov	w2, w0
  440530:	cmp	w8, #0x0
  440534:	ccmp	w0, w9, #0x0, eq  // eq = none
  440538:	csinc	w23, w23, wzr, gt
  44053c:	tbz	w0, #31, 440544 <feof@plt+0x3d464>
  440540:	cbnz	w8, 44057c <feof@plt+0x3d49c>
  440544:	tbnz	w2, #31, 44057c <feof@plt+0x3d49c>
  440548:	add	x5, x29, #0x18
  44054c:	mov	x0, x19
  440550:	mov	x1, x22
  440554:	mov	x3, x20
  440558:	mov	x4, x21
  44055c:	bl	4408ec <feof@plt+0x3d80c>
  440560:	cbz	w0, 4405c8 <feof@plt+0x3d4e8>
  440564:	ldr	w9, [x19, #8]
  440568:	ldr	x8, [x29, #24]
  44056c:	cbz	w9, 440594 <feof@plt+0x3d4b4>
  440570:	add	x9, x19, #0x18
  440574:	stlr	x8, [x9]
  440578:	b	440598 <feof@plt+0x3d4b8>
  44057c:	cbnz	w23, 4405c8 <feof@plt+0x3d4e8>
  440580:	ldr	x1, [x19]
  440584:	cbz	x1, 4405b4 <feof@plt+0x3d4d4>
  440588:	mov	w2, #0x2                   	// #2
  44058c:	mov	x0, x21
  440590:	b	4405c4 <feof@plt+0x3d4e4>
  440594:	str	x8, [x19, #24]
  440598:	mov	w0, #0x1                   	// #1
  44059c:	ldp	x20, x19, [sp, #128]
  4405a0:	ldp	x22, x21, [sp, #112]
  4405a4:	ldr	x23, [sp, #96]
  4405a8:	ldp	x29, x30, [sp, #80]
  4405ac:	add	sp, sp, #0x90
  4405b0:	ret
  4405b4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  4405b8:	add	x1, x1, #0x9fe
  4405bc:	mov	x0, x21
  4405c0:	mov	w2, wzr
  4405c4:	blr	x20
  4405c8:	ldr	w8, [x19, #8]
  4405cc:	cbz	w8, 4405e4 <feof@plt+0x3d504>
  4405d0:	add	x8, x19, #0x38
  4405d4:	mov	w9, #0x1                   	// #1
  4405d8:	mov	w0, wzr
  4405dc:	stlr	w9, [x8]
  4405e0:	b	44059c <feof@plt+0x3d4bc>
  4405e4:	mov	w8, #0x1                   	// #1
  4405e8:	mov	w0, wzr
  4405ec:	str	w8, [x19, #56]
  4405f0:	b	44059c <feof@plt+0x3d4bc>
  4405f4:	stp	x29, x30, [sp, #-64]!
  4405f8:	str	x23, [sp, #16]
  4405fc:	stp	x22, x21, [sp, #32]
  440600:	stp	x20, x19, [sp, #48]
  440604:	mov	x29, sp
  440608:	mov	x21, x2
  44060c:	mov	x22, x1
  440610:	mov	x1, x3
  440614:	mov	x2, x4
  440618:	mov	x19, x4
  44061c:	mov	x20, x3
  440620:	mov	x23, x0
  440624:	bl	4403ac <feof@plt+0x3d2cc>
  440628:	cbz	w0, 44065c <feof@plt+0x3d57c>
  44062c:	ldr	w8, [x23, #56]
  440630:	cbz	w8, 44063c <feof@plt+0x3d55c>
  440634:	mov	w0, wzr
  440638:	b	44065c <feof@plt+0x3d57c>
  44063c:	ldr	x8, [x23, #40]
  440640:	mov	x0, x23
  440644:	mov	x1, x22
  440648:	mov	x2, x21
  44064c:	mov	x3, x20
  440650:	mov	x4, x19
  440654:	blr	x8
  440658:	mov	w0, #0x1                   	// #1
  44065c:	ldp	x20, x19, [sp, #48]
  440660:	ldp	x22, x21, [sp, #32]
  440664:	ldr	x23, [sp, #16]
  440668:	ldp	x29, x30, [sp], #64
  44066c:	ret
  440670:	stp	x29, x30, [sp, #-64]!
  440674:	str	x23, [sp, #16]
  440678:	stp	x22, x21, [sp, #32]
  44067c:	stp	x20, x19, [sp, #48]
  440680:	mov	x29, sp
  440684:	mov	x21, x3
  440688:	mov	x20, x2
  44068c:	mov	x19, x1
  440690:	mov	x22, x0
  440694:	cbz	x3, 44069c <feof@plt+0x3d5bc>
  440698:	str	wzr, [x21]
  44069c:	mov	w1, #0x80000               	// #524288
  4406a0:	mov	x0, x22
  4406a4:	bl	402ac0 <open@plt>
  4406a8:	tbnz	w0, #31, 4406c0 <feof@plt+0x3d5e0>
  4406ac:	mov	w1, #0x2                   	// #2
  4406b0:	mov	w2, #0x1                   	// #1
  4406b4:	mov	w23, w0
  4406b8:	bl	403060 <fcntl@plt>
  4406bc:	b	4406f4 <feof@plt+0x3d614>
  4406c0:	bl	402e70 <__errno_location@plt>
  4406c4:	cbz	x21, 4406e0 <feof@plt+0x3d600>
  4406c8:	ldr	w8, [x0]
  4406cc:	cmp	w8, #0x2
  4406d0:	b.ne	4406e0 <feof@plt+0x3d600>  // b.any
  4406d4:	mov	w8, #0x1                   	// #1
  4406d8:	str	w8, [x21]
  4406dc:	b	4406f0 <feof@plt+0x3d610>
  4406e0:	ldr	w2, [x0]
  4406e4:	mov	x0, x20
  4406e8:	mov	x1, x22
  4406ec:	blr	x19
  4406f0:	mov	w23, #0xffffffff            	// #-1
  4406f4:	mov	w0, w23
  4406f8:	ldp	x20, x19, [sp, #48]
  4406fc:	ldp	x22, x21, [sp, #32]
  440700:	ldr	x23, [sp, #16]
  440704:	ldp	x29, x30, [sp], #64
  440708:	ret
  44070c:	stp	x29, x30, [sp, #-32]!
  440710:	stp	x20, x19, [sp, #16]
  440714:	mov	x29, sp
  440718:	mov	x20, x2
  44071c:	mov	x19, x1
  440720:	bl	402ec0 <close@plt>
  440724:	tbnz	w0, #31, 440730 <feof@plt+0x3d650>
  440728:	mov	w0, #0x1                   	// #1
  44072c:	b	44074c <feof@plt+0x3d66c>
  440730:	bl	402e70 <__errno_location@plt>
  440734:	ldr	w2, [x0]
  440738:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  44073c:	add	x1, x1, #0xa2d
  440740:	mov	x0, x20
  440744:	blr	x19
  440748:	mov	w0, wzr
  44074c:	ldp	x20, x19, [sp, #16]
  440750:	ldp	x29, x30, [sp], #32
  440754:	ret
  440758:	stp	x29, x30, [sp, #-80]!
  44075c:	stp	x26, x25, [sp, #16]
  440760:	stp	x24, x23, [sp, #32]
  440764:	stp	x22, x21, [sp, #48]
  440768:	stp	x20, x19, [sp, #64]
  44076c:	mov	x29, sp
  440770:	mov	x20, x3
  440774:	mov	x25, x2
  440778:	mov	x26, x1
  44077c:	mov	w1, #0x13b4                	// #5044
  440780:	mov	x2, x3
  440784:	mov	x3, x4
  440788:	mov	x22, x6
  44078c:	mov	x23, x5
  440790:	mov	x19, x4
  440794:	mov	x21, x0
  440798:	bl	43feec <feof@plt+0x3ce0c>
  44079c:	cbz	x0, 4407e8 <feof@plt+0x3d708>
  4407a0:	mov	x24, x0
  4407a4:	mov	x0, x21
  4407a8:	mov	x1, x26
  4407ac:	mov	x2, x25
  4407b0:	mov	x3, x24
  4407b4:	mov	x4, x20
  4407b8:	mov	x5, x19
  4407bc:	mov	x6, x23
  4407c0:	mov	x7, x22
  4407c4:	bl	440800 <feof@plt+0x3d720>
  4407c8:	mov	w22, w0
  4407cc:	mov	w2, #0x13b4                	// #5044
  4407d0:	mov	x0, x21
  4407d4:	mov	x1, x24
  4407d8:	mov	x3, x20
  4407dc:	mov	x4, x19
  4407e0:	bl	4400b0 <feof@plt+0x3cfd0>
  4407e4:	mov	w0, w22
  4407e8:	ldp	x20, x19, [sp, #64]
  4407ec:	ldp	x22, x21, [sp, #48]
  4407f0:	ldp	x24, x23, [sp, #32]
  4407f4:	ldp	x26, x25, [sp, #16]
  4407f8:	ldp	x29, x30, [sp], #80
  4407fc:	ret
  440800:	stp	x29, x30, [sp, #-80]!
  440804:	str	x25, [sp, #16]
  440808:	stp	x24, x23, [sp, #32]
  44080c:	stp	x22, x21, [sp, #48]
  440810:	stp	x20, x19, [sp, #64]
  440814:	mov	x29, sp
  440818:	subs	x23, x2, #0xc
  44081c:	str	xzr, [x6]
  440820:	str	xzr, [x7]
  440824:	b.cc	4408d0 <feof@plt+0x3d7f0>  // b.lo, b.ul, b.last
  440828:	ldr	w8, [x1]
  44082c:	mov	w9, #0x4c5a                	// #19546
  440830:	movk	w9, #0x4249, lsl #16
  440834:	mov	x22, x1
  440838:	cmp	w8, w9
  44083c:	b.ne	4408d0 <feof@plt+0x3d7f0>  // b.any
  440840:	ldrb	w8, [x22, #5]
  440844:	ldrb	w9, [x22, #4]
  440848:	ldrb	w10, [x22, #6]
  44084c:	ldrb	w11, [x22, #7]
  440850:	lsl	w8, w8, #8
  440854:	bfi	w8, w9, #16, #8
  440858:	ldrb	w9, [x22, #8]
  44085c:	orr	w8, w8, w10
  440860:	ldrb	w10, [x22, #9]
  440864:	lsl	x8, x8, #16
  440868:	bfi	x8, x11, #8, #8
  44086c:	ldrb	w11, [x22, #10]
  440870:	ldrb	w24, [x22, #11]
  440874:	orr	x8, x8, x9
  440878:	lsl	x9, x10, #8
  44087c:	bfi	x9, x8, #16, #48
  440880:	orr	x8, x9, x11
  440884:	bfi	x24, x8, #8, #56
  440888:	mov	x21, x3
  44088c:	mov	x1, x24
  440890:	mov	x2, x4
  440894:	mov	x3, x5
  440898:	mov	x19, x7
  44089c:	mov	x20, x6
  4408a0:	bl	43feec <feof@plt+0x3ce0c>
  4408a4:	cbz	x0, 4408d4 <feof@plt+0x3d7f4>
  4408a8:	mov	x25, x0
  4408ac:	add	x0, x22, #0xc
  4408b0:	mov	x1, x23
  4408b4:	mov	x2, x21
  4408b8:	mov	x3, x25
  4408bc:	mov	x4, x24
  4408c0:	bl	442434 <feof@plt+0x3f354>
  4408c4:	cbz	w0, 4408d0 <feof@plt+0x3d7f0>
  4408c8:	str	x25, [x20]
  4408cc:	str	x24, [x19]
  4408d0:	mov	w0, #0x1                   	// #1
  4408d4:	ldp	x20, x19, [sp, #64]
  4408d8:	ldp	x22, x21, [sp, #48]
  4408dc:	ldp	x24, x23, [sp, #32]
  4408e0:	ldr	x25, [sp, #16]
  4408e4:	ldp	x29, x30, [sp], #80
  4408e8:	ret
  4408ec:	sub	sp, sp, #0xe0
  4408f0:	stp	x29, x30, [sp, #128]
  4408f4:	stp	x28, x27, [sp, #144]
  4408f8:	stp	x26, x25, [sp, #160]
  4408fc:	stp	x24, x23, [sp, #176]
  440900:	stp	x22, x21, [sp, #192]
  440904:	stp	x20, x19, [sp, #208]
  440908:	add	x29, sp, #0x80
  44090c:	mov	x23, x4
  440910:	mov	x24, x3
  440914:	adrp	x25, 440000 <feof@plt+0x3cf20>
  440918:	mov	x19, x5
  44091c:	add	x25, x25, #0xa68
  440920:	mov	w8, #0x1                   	// #1
  440924:	sub	x26, x29, #0x8
  440928:	sub	x6, x29, #0x10
  44092c:	sub	x7, x29, #0x4
  440930:	mov	x3, xzr
  440934:	mov	x4, x24
  440938:	mov	x5, x23
  44093c:	mov	w21, w2
  440940:	mov	x22, x1
  440944:	mov	x20, x0
  440948:	stur	x25, [x29, #-16]
  44094c:	str	wzr, [sp, #40]
  440950:	str	xzr, [sp, #32]
  440954:	str	wzr, [sp, #24]
  440958:	sub	x27, x29, #0x10
  44095c:	str	w8, [sp, #16]
  440960:	stp	x26, xzr, [sp]
  440964:	sub	x28, x29, #0x4
  440968:	bl	440a90 <feof@plt+0x3d9b0>
  44096c:	cbz	w0, 440a48 <feof@plt+0x3d968>
  440970:	cmp	w0, #0x0
  440974:	adrp	x0, 442000 <feof@plt+0x3ef20>
  440978:	csinv	w8, w21, wzr, lt  // lt = tstop
  44097c:	add	x0, x0, #0x224
  440980:	add	x1, sp, #0x30
  440984:	stp	x20, x24, [sp, #48]
  440988:	stp	x23, x27, [sp, #64]
  44098c:	stp	x28, x26, [sp, #80]
  440990:	str	x22, [sp, #96]
  440994:	str	w8, [sp, #104]
  440998:	bl	402cc0 <dl_iterate_phdr@plt>
  44099c:	ldr	w10, [x20, #8]
  4409a0:	ldur	w9, [x29, #-4]
  4409a4:	add	x8, x20, #0x28
  4409a8:	cbz	w10, 4409c0 <feof@plt+0x3d8e0>
  4409ac:	cbz	w9, 4409d4 <feof@plt+0x3d8f4>
  4409b0:	adrp	x9, 442000 <feof@plt+0x3ef20>
  4409b4:	add	x9, x9, #0x314
  4409b8:	stlr	x9, [x8]
  4409bc:	b	440a0c <feof@plt+0x3d92c>
  4409c0:	cbz	w9, 4409f0 <feof@plt+0x3d910>
  4409c4:	adrp	x9, 442000 <feof@plt+0x3ef20>
  4409c8:	add	x9, x9, #0x314
  4409cc:	str	x9, [x8]
  4409d0:	b	440a0c <feof@plt+0x3d92c>
  4409d4:	adrp	x9, 442000 <feof@plt+0x3ef20>
  4409d8:	add	x9, x9, #0x420
  4409dc:	ldaxr	x10, [x8]
  4409e0:	cbnz	x10, 440a08 <feof@plt+0x3d928>
  4409e4:	stlxr	w10, x9, [x8]
  4409e8:	cbnz	w10, 4409dc <feof@plt+0x3d8fc>
  4409ec:	b	440a0c <feof@plt+0x3d92c>
  4409f0:	ldr	x9, [x8]
  4409f4:	cbnz	x9, 440a0c <feof@plt+0x3d92c>
  4409f8:	adrp	x9, 442000 <feof@plt+0x3ef20>
  4409fc:	add	x9, x9, #0x420
  440a00:	str	x9, [x8]
  440a04:	b	440a0c <feof@plt+0x3d92c>
  440a08:	clrex
  440a0c:	ldr	w8, [x20, #8]
  440a10:	cbz	w8, 440a28 <feof@plt+0x3d948>
  440a14:	add	x8, x20, #0x18
  440a18:	ldar	x8, [x8]
  440a1c:	str	x8, [x19]
  440a20:	cbnz	x8, 440a34 <feof@plt+0x3d954>
  440a24:	b	440a3c <feof@plt+0x3d95c>
  440a28:	ldr	x8, [x20, #24]
  440a2c:	str	x8, [x19]
  440a30:	cbz	x8, 440a3c <feof@plt+0x3d95c>
  440a34:	cmp	x8, x25
  440a38:	b.ne	440a44 <feof@plt+0x3d964>  // b.any
  440a3c:	ldur	x8, [x29, #-16]
  440a40:	str	x8, [x19]
  440a44:	mov	w0, #0x1                   	// #1
  440a48:	ldp	x20, x19, [sp, #208]
  440a4c:	ldp	x22, x21, [sp, #192]
  440a50:	ldp	x24, x23, [sp, #176]
  440a54:	ldp	x26, x25, [sp, #160]
  440a58:	ldp	x28, x27, [sp, #144]
  440a5c:	ldp	x29, x30, [sp, #128]
  440a60:	add	sp, sp, #0xe0
  440a64:	ret
  440a68:	stp	x29, x30, [sp, #-16]!
  440a6c:	mov	x29, sp
  440a70:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440a74:	mov	x0, x4
  440a78:	add	x1, x1, #0x321
  440a7c:	mov	w2, #0xffffffff            	// #-1
  440a80:	blr	x3
  440a84:	mov	w0, wzr
  440a88:	ldp	x29, x30, [sp], #16
  440a8c:	ret
  440a90:	stp	x29, x30, [sp, #-96]!
  440a94:	stp	x28, x27, [sp, #16]
  440a98:	stp	x26, x25, [sp, #32]
  440a9c:	stp	x24, x23, [sp, #48]
  440aa0:	stp	x22, x21, [sp, #64]
  440aa4:	stp	x20, x19, [sp, #80]
  440aa8:	mov	x29, sp
  440aac:	sub	sp, sp, #0x3c0
  440ab0:	ldr	w28, [x29, #120]
  440ab4:	ldr	x21, [x29, #96]
  440ab8:	mov	x26, x7
  440abc:	mov	x24, x6
  440ac0:	mov	x25, x5
  440ac4:	mov	x22, x4
  440ac8:	mov	x23, x3
  440acc:	mov	w20, w2
  440ad0:	mov	x27, x1
  440ad4:	mov	x19, x0
  440ad8:	cbnz	w28, 440ae4 <feof@plt+0x3da04>
  440adc:	str	wzr, [x26]
  440ae0:	str	wzr, [x21]
  440ae4:	sub	x6, x29, #0x28
  440ae8:	mov	w3, #0x40                  	// #64
  440aec:	mov	x0, x19
  440af0:	mov	w1, w20
  440af4:	mov	x2, xzr
  440af8:	mov	x4, x22
  440afc:	mov	x5, x25
  440b00:	bl	443988 <feof@plt+0x408a8>
  440b04:	cbz	w0, 440c2c <feof@plt+0x3db4c>
  440b08:	ldur	x8, [x29, #-40]
  440b0c:	stp	x27, x24, [sp, #232]
  440b10:	stp	x26, x23, [sp, #248]
  440b14:	str	w28, [sp, #280]
  440b18:	ldrb	w9, [x8, #5]
  440b1c:	str	x21, [sp, #224]
  440b20:	str	w20, [sp, #324]
  440b24:	ldrb	w24, [x8]
  440b28:	str	w9, [sp, #300]
  440b2c:	ldrh	w9, [x8, #18]
  440b30:	ldrb	w23, [x8, #1]
  440b34:	mov	x2, x22
  440b38:	ldrb	w22, [x8, #2]
  440b3c:	str	w9, [sp, #264]
  440b40:	ldr	w9, [x8, #48]
  440b44:	ldrb	w20, [x8, #3]
  440b48:	mov	x0, x19
  440b4c:	ldrb	w21, [x8, #4]
  440b50:	ldrb	w19, [x8, #6]
  440b54:	mov	x3, x25
  440b58:	ldrh	w25, [x8, #16]
  440b5c:	ldr	x27, [x8, #40]
  440b60:	ldrh	w26, [x8, #60]
  440b64:	ldrh	w28, [x8, #62]
  440b68:	sub	x1, x29, #0x28
  440b6c:	str	w9, [sp, #272]
  440b70:	str	x0, [sp, #288]
  440b74:	stp	x3, x2, [sp, #304]
  440b78:	bl	443a48 <feof@plt+0x40968>
  440b7c:	cmp	w24, #0x7f
  440b80:	b.ne	440bdc <feof@plt+0x3dafc>  // b.any
  440b84:	cmp	w23, #0x45
  440b88:	b.ne	440bdc <feof@plt+0x3dafc>  // b.any
  440b8c:	cmp	w22, #0x4c
  440b90:	b.ne	440bdc <feof@plt+0x3dafc>  // b.any
  440b94:	cmp	w20, #0x46
  440b98:	b.ne	440bdc <feof@plt+0x3dafc>  // b.any
  440b9c:	cmp	w19, #0x1
  440ba0:	b.ne	440be8 <feof@plt+0x3db08>  // b.any
  440ba4:	ldr	x22, [sp, #312]
  440ba8:	ldr	w20, [sp, #324]
  440bac:	cmp	w21, #0x2
  440bb0:	b.ne	440c08 <feof@plt+0x3db28>  // b.any
  440bb4:	ldr	w8, [sp, #300]
  440bb8:	sub	w8, w8, #0x1
  440bbc:	cmp	w8, #0x2
  440bc0:	b.cs	440c14 <feof@plt+0x3db34>  // b.hs, b.nlast
  440bc4:	ldr	w8, [x29, #112]
  440bc8:	cbz	w8, 440c6c <feof@plt+0x3db8c>
  440bcc:	cmp	w25, #0x3
  440bd0:	b.ne	440c6c <feof@plt+0x3db8c>  // b.any
  440bd4:	mov	w25, #0xffffffff            	// #-1
  440bd8:	b	440c48 <feof@plt+0x3db68>
  440bdc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440be0:	add	x1, x1, #0x341
  440be4:	b	440bf0 <feof@plt+0x3db10>
  440be8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440bec:	add	x1, x1, #0x35c
  440bf0:	ldp	x25, x22, [sp, #304]
  440bf4:	mov	w2, wzr
  440bf8:	mov	x0, x25
  440bfc:	blr	x22
  440c00:	ldr	w20, [sp, #324]
  440c04:	b	440c2c <feof@plt+0x3db4c>
  440c08:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440c0c:	add	x1, x1, #0x388
  440c10:	b	440c1c <feof@plt+0x3db3c>
  440c14:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440c18:	add	x1, x1, #0x3b0
  440c1c:	ldr	x25, [sp, #304]
  440c20:	mov	w2, wzr
  440c24:	mov	x0, x25
  440c28:	blr	x22
  440c2c:	cmn	w20, #0x1
  440c30:	b.eq	440c44 <feof@plt+0x3db64>  // b.none
  440c34:	mov	w0, w20
  440c38:	mov	x1, x22
  440c3c:	mov	x2, x25
  440c40:	bl	44070c <feof@plt+0x3d62c>
  440c44:	mov	w25, wzr
  440c48:	mov	w0, w25
  440c4c:	add	sp, sp, #0x3c0
  440c50:	ldp	x20, x19, [sp, #80]
  440c54:	ldp	x22, x21, [sp, #64]
  440c58:	ldp	x24, x23, [sp, #48]
  440c5c:	ldp	x26, x25, [sp, #32]
  440c60:	ldp	x28, x27, [sp, #16]
  440c64:	ldp	x29, x30, [sp], #96
  440c68:	ret
  440c6c:	cmp	w26, #0x0
  440c70:	mov	w9, #0xffff                	// #65535
  440c74:	cset	w8, eq  // eq = none
  440c78:	cmp	w28, w9
  440c7c:	cset	w9, eq  // eq = none
  440c80:	cbz	x27, 440d00 <feof@plt+0x3dc20>
  440c84:	ldr	x25, [sp, #304]
  440c88:	ldr	x21, [sp, #288]
  440c8c:	orr	w8, w8, w9
  440c90:	cbz	w8, 440d08 <feof@plt+0x3dc28>
  440c94:	add	x6, sp, #0x220
  440c98:	mov	w3, #0x8                   	// #8
  440c9c:	mov	x0, x21
  440ca0:	mov	w1, w20
  440ca4:	mov	x2, x27
  440ca8:	mov	x4, x22
  440cac:	mov	x5, x25
  440cb0:	bl	443988 <feof@plt+0x408a8>
  440cb4:	cbz	w0, 440c2c <feof@plt+0x3db4c>
  440cb8:	ldr	x8, [sp, #544]
  440cbc:	cbnz	w26, 440cc4 <feof@plt+0x3dbe4>
  440cc0:	ldr	w26, [x8, #32]
  440cc4:	mov	w9, #0xffff                	// #65535
  440cc8:	cmp	w28, w9
  440ccc:	b.ne	440ce8 <feof@plt+0x3dc08>  // b.any
  440cd0:	ldr	w8, [x8, #40]
  440cd4:	lsr	w9, w8, #16
  440cd8:	cmp	w9, #0x0
  440cdc:	sub	w10, w8, #0x100
  440ce0:	ccmp	w8, w26, #0x0, ne  // ne = any
  440ce4:	csel	w28, w10, w8, cs  // cs = hs, nlast
  440ce8:	add	x1, sp, #0x220
  440cec:	mov	x0, x21
  440cf0:	mov	x2, x22
  440cf4:	mov	x3, x25
  440cf8:	bl	443a48 <feof@plt+0x40968>
  440cfc:	b	440d08 <feof@plt+0x3dc28>
  440d00:	ldr	x25, [sp, #304]
  440d04:	ldr	x21, [sp, #288]
  440d08:	sub	w8, w26, #0x1
  440d0c:	add	x2, x27, #0x40
  440d10:	lsl	x3, x8, #6
  440d14:	sub	x6, x29, #0x40
  440d18:	mov	x0, x21
  440d1c:	mov	w1, w20
  440d20:	mov	x4, x22
  440d24:	mov	x5, x25
  440d28:	bl	443988 <feof@plt+0x408a8>
  440d2c:	cbz	w0, 440c2c <feof@plt+0x3db4c>
  440d30:	ldur	x9, [x29, #-64]
  440d34:	sub	w8, w28, #0x1
  440d38:	sub	x6, x29, #0x58
  440d3c:	mov	x0, x21
  440d40:	str	x9, [sp, #176]
  440d44:	add	x8, x9, x8, lsl #6
  440d48:	ldp	x2, x3, [x8, #24]
  440d4c:	mov	w1, w20
  440d50:	mov	x4, x22
  440d54:	mov	x5, x25
  440d58:	str	x3, [sp, #208]
  440d5c:	bl	443988 <feof@plt+0x408a8>
  440d60:	cbz	w0, 440e44 <feof@plt+0x3dd64>
  440d64:	ldur	x9, [x29, #-88]
  440d68:	add	x8, sp, #0x220
  440d6c:	movi	v0.2d, #0x0
  440d70:	cmp	w26, #0x2
  440d74:	str	x9, [sp, #200]
  440d78:	stp	q0, q0, [x8]
  440d7c:	stp	q0, q0, [x8, #32]
  440d80:	stp	q0, q0, [x8, #64]
  440d84:	stp	q0, q0, [x8, #96]
  440d88:	stp	q0, q0, [x8, #128]
  440d8c:	stp	q0, q0, [x8, #160]
  440d90:	stp	q0, q0, [x8, #192]
  440d94:	stp	q0, q0, [x8, #224]
  440d98:	stp	q0, q0, [x8, #256]
  440d9c:	stp	q0, q0, [x8, #288]
  440da0:	str	w26, [sp, #104]
  440da4:	b.cc	4412b4 <feof@plt+0x3e1d4>  // b.lo, b.ul, b.last
  440da8:	ldr	w8, [sp, #280]
  440dac:	ldr	x11, [x29, #128]
  440db0:	ldr	w12, [sp, #264]
  440db4:	ldr	w13, [x29, #136]
  440db8:	cmp	w8, #0x0
  440dbc:	cset	w10, ne  // ne = any
  440dc0:	cmp	x11, #0x0
  440dc4:	str	x11, [sp, #96]
  440dc8:	cset	w11, eq  // eq = none
  440dcc:	and	w10, w10, w11
  440dd0:	ldr	w11, [sp, #272]
  440dd4:	add	x8, sp, #0x160
  440dd8:	cmp	w12, #0x15
  440ddc:	ldr	x19, [sp, #176]
  440de0:	mov	w9, w26
  440de4:	str	w10, [sp, #196]
  440de8:	cset	w10, eq  // eq = none
  440dec:	tst	w11, #0x2
  440df0:	add	x8, x8, #0x18
  440df4:	cset	w11, eq  // eq = none
  440df8:	str	x8, [sp, #80]
  440dfc:	sub	x8, x9, #0x1
  440e00:	mov	x27, xzr
  440e04:	mov	w24, wzr
  440e08:	mov	w28, wzr
  440e0c:	and	w10, w10, w11
  440e10:	str	x8, [sp, #184]
  440e14:	mov	w8, w13
  440e18:	str	xzr, [sp, #160]
  440e1c:	str	wzr, [sp, #220]
  440e20:	stp	xzr, xzr, [sp, #120]
  440e24:	str	wzr, [sp, #168]
  440e28:	str	xzr, [sp, #112]
  440e2c:	str	wzr, [sp, #108]
  440e30:	stp	xzr, xzr, [sp, #136]
  440e34:	str	wzr, [sp, #156]
  440e38:	str	w10, [sp, #192]
  440e3c:	str	x8, [sp, #88]
  440e40:	b	440e84 <feof@plt+0x3dda4>
  440e44:	sub	x1, x29, #0x40
  440e48:	b	441640 <feof@plt+0x3e560>
  440e4c:	ldr	x8, [x20, #16]
  440e50:	ldr	x9, [sp, #376]
  440e54:	ldr	w20, [sp, #324]
  440e58:	stp	x8, x9, [sp, #352]
  440e5c:	ldr	x8, [x19]
  440e60:	ldr	x19, [sp, #176]
  440e64:	str	x8, [sp, #368]
  440e68:	add	x8, sp, #0x160
  440e6c:	str	x8, [sp, #136]
  440e70:	mov	w13, w21
  440e74:	ldr	x8, [sp, #184]
  440e78:	add	x27, x27, #0x1
  440e7c:	cmp	x8, x27
  440e80:	b.eq	441410 <feof@plt+0x3e330>  // b.none
  440e84:	and	x8, x27, #0xffffffff
  440e88:	add	x23, x19, x8, lsl #6
  440e8c:	ldr	w9, [x23, #4]!
  440e90:	mov	x26, x8
  440e94:	add	x8, x27, #0x1
  440e98:	cmp	w9, #0xb
  440e9c:	b.eq	440eb0 <feof@plt+0x3ddd0>  // b.none
  440ea0:	cmp	w9, #0x2
  440ea4:	b.ne	440eb4 <feof@plt+0x3ddd4>  // b.any
  440ea8:	str	w8, [sp, #164]
  440eac:	b	440eb4 <feof@plt+0x3ddd4>
  440eb0:	str	w8, [sp, #160]
  440eb4:	lsl	x8, x26, #6
  440eb8:	ldr	w8, [x19, x8]
  440ebc:	ldr	x9, [sp, #208]
  440ec0:	cmp	x9, x8
  440ec4:	b.ls	4413e8 <feof@plt+0x3e308>  // b.plast
  440ec8:	ldr	x9, [sp, #200]
  440ecc:	str	x23, [sp, #264]
  440ed0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440ed4:	add	x1, x1, #0x45c
  440ed8:	add	x23, x9, x8
  440edc:	mov	x0, x23
  440ee0:	mov	w21, w13
  440ee4:	bl	402ed0 <strcmp@plt>
  440ee8:	str	x23, [sp, #272]
  440eec:	cbz	w0, 440fac <feof@plt+0x3decc>
  440ef0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440ef4:	mov	x0, x23
  440ef8:	add	x1, x1, #0x468
  440efc:	bl	402ed0 <strcmp@plt>
  440f00:	cbz	w0, 440fb4 <feof@plt+0x3ded4>
  440f04:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f08:	mov	x0, x23
  440f0c:	add	x1, x1, #0x474
  440f10:	bl	402ed0 <strcmp@plt>
  440f14:	cbz	w0, 440fbc <feof@plt+0x3dedc>
  440f18:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f1c:	mov	x0, x23
  440f20:	add	x1, x1, #0x482
  440f24:	bl	402ed0 <strcmp@plt>
  440f28:	cbz	w0, 440fc4 <feof@plt+0x3dee4>
  440f2c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f30:	mov	x0, x23
  440f34:	add	x1, x1, #0x490
  440f38:	bl	402ed0 <strcmp@plt>
  440f3c:	cbz	w0, 440fcc <feof@plt+0x3deec>
  440f40:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f44:	mov	x0, x23
  440f48:	add	x1, x1, #0x49b
  440f4c:	bl	402ed0 <strcmp@plt>
  440f50:	cbz	w0, 440fd4 <feof@plt+0x3def4>
  440f54:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f58:	mov	x0, x23
  440f5c:	add	x1, x1, #0x4a8
  440f60:	bl	402ed0 <strcmp@plt>
  440f64:	cbz	w0, 440fdc <feof@plt+0x3defc>
  440f68:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f6c:	mov	x0, x23
  440f70:	add	x1, x1, #0x4b5
  440f74:	bl	402ed0 <strcmp@plt>
  440f78:	cbz	w0, 440fe4 <feof@plt+0x3df04>
  440f7c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f80:	mov	x0, x23
  440f84:	add	x1, x1, #0x4c4
  440f88:	bl	402ed0 <strcmp@plt>
  440f8c:	cbz	w0, 440fec <feof@plt+0x3df0c>
  440f90:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  440f94:	mov	x0, x23
  440f98:	add	x1, x1, #0x4d3
  440f9c:	bl	402ed0 <strcmp@plt>
  440fa0:	cbnz	w0, 441010 <feof@plt+0x3df30>
  440fa4:	mov	w8, #0x9                   	// #9
  440fa8:	b	440ff0 <feof@plt+0x3df10>
  440fac:	mov	x8, xzr
  440fb0:	b	440ff0 <feof@plt+0x3df10>
  440fb4:	mov	w8, #0x1                   	// #1
  440fb8:	b	440ff0 <feof@plt+0x3df10>
  440fbc:	mov	w8, #0x2                   	// #2
  440fc0:	b	440ff0 <feof@plt+0x3df10>
  440fc4:	mov	w8, #0x3                   	// #3
  440fc8:	b	440ff0 <feof@plt+0x3df10>
  440fcc:	mov	w8, #0x4                   	// #4
  440fd0:	b	440ff0 <feof@plt+0x3df10>
  440fd4:	mov	w8, #0x5                   	// #5
  440fd8:	b	440ff0 <feof@plt+0x3df10>
  440fdc:	mov	w8, #0x6                   	// #6
  440fe0:	b	440ff0 <feof@plt+0x3df10>
  440fe4:	mov	w8, #0x7                   	// #7
  440fe8:	b	440ff0 <feof@plt+0x3df10>
  440fec:	mov	w8, #0x8                   	// #8
  440ff0:	add	x9, x19, x26, lsl #6
  440ff4:	ldur	q0, [x9, #24]
  440ff8:	add	x10, sp, #0x220
  440ffc:	add	x8, x10, x8, lsl #5
  441000:	str	q0, [x8]
  441004:	ldr	w9, [x9, #8]
  441008:	ubfx	w9, w9, #11, #1
  44100c:	str	w9, [x8, #24]
  441010:	ldr	w8, [sp, #220]
  441014:	ldr	w9, [sp, #196]
  441018:	cmp	w8, #0x0
  44101c:	cset	w8, ne  // ne = any
  441020:	orr	w8, w9, w8
  441024:	tbnz	w8, #0, 441040 <feof@plt+0x3df60>
  441028:	ldr	x0, [sp, #272]
  44102c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  441030:	add	x1, x1, #0x3f5
  441034:	bl	402ed0 <strcmp@plt>
  441038:	cbz	w0, 44106c <feof@plt+0x3df8c>
  44103c:	str	wzr, [sp, #220]
  441040:	mov	w13, w21
  441044:	ldr	w8, [sp, #280]
  441048:	orr	w8, w24, w8
  44104c:	cbnz	w8, 4411b4 <feof@plt+0x3e0d4>
  441050:	ldr	x0, [sp, #272]
  441054:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  441058:	add	x1, x1, #0x40c
  44105c:	bl	402ed0 <strcmp@plt>
  441060:	cbz	w0, 441138 <feof@plt+0x3e058>
  441064:	mov	w24, wzr
  441068:	b	4411b0 <feof@plt+0x3e0d0>
  44106c:	str	w24, [sp, #172]
  441070:	add	x24, x19, x26, lsl #6
  441074:	ldr	x3, [x24, #32]!
  441078:	ldr	x0, [sp, #288]
  44107c:	add	x6, sp, #0x1d8
  441080:	mov	w1, w20
  441084:	ldur	x2, [x24, #-8]
  441088:	mov	x4, x22
  44108c:	mov	x5, x25
  441090:	bl	443988 <feof@plt+0x408a8>
  441094:	cbz	w0, 441da0 <feof@plt+0x3ecc0>
  441098:	ldr	x19, [sp, #472]
  44109c:	ldr	w8, [x19, #8]
  4410a0:	cmp	w8, #0x3
  4410a4:	b.ne	4410f8 <feof@plt+0x3e018>  // b.any
  4410a8:	ldr	w8, [x19]
  4410ac:	cmp	w8, #0x4
  4410b0:	b.ne	4410f8 <feof@plt+0x3e018>  // b.any
  4410b4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4410b8:	add	x0, x19, #0xc
  4410bc:	mov	w2, #0x4                   	// #4
  4410c0:	add	x1, x1, #0x408
  4410c4:	bl	402d40 <strncmp@plt>
  4410c8:	cbnz	w0, 4410f8 <feof@plt+0x3e018>
  4410cc:	ldr	w8, [x19, #4]
  4410d0:	ldr	x9, [x24]
  4410d4:	add	x10, x19, #0x10
  4410d8:	add	w11, w8, #0x10
  4410dc:	cmp	x9, x11
  4410e0:	ldr	w9, [sp, #168]
  4410e4:	csel	w9, w9, w8, hi  // hi = pmore
  4410e8:	ldr	x8, [sp, #128]
  4410ec:	str	w9, [sp, #168]
  4410f0:	csel	x8, x8, x10, hi  // hi = pmore
  4410f4:	str	x8, [sp, #128]
  4410f8:	ldr	w24, [sp, #172]
  4410fc:	ldr	x19, [sp, #176]
  441100:	mov	w13, w21
  441104:	cbz	w21, 441190 <feof@plt+0x3e0b0>
  441108:	ldr	w8, [sp, #168]
  44110c:	cmp	w8, w13
  441110:	b.ne	441f5c <feof@plt+0x3ee7c>  // b.any
  441114:	ldr	x0, [sp, #128]
  441118:	ldp	x2, x1, [sp, #88]
  44111c:	bl	403090 <bcmp@plt>
  441120:	mov	w8, #0x1                   	// #1
  441124:	str	w8, [sp, #220]
  441128:	cbnz	w0, 441f70 <feof@plt+0x3ee90>
  44112c:	mov	w13, w21
  441130:	str	w21, [sp, #168]
  441134:	b	441044 <feof@plt+0x3df64>
  441138:	add	x19, x19, x26, lsl #6
  44113c:	ldr	x3, [x19, #32]!
  441140:	ldr	x0, [sp, #288]
  441144:	add	x6, sp, #0x1c0
  441148:	mov	w1, w20
  44114c:	ldur	x2, [x19, #-8]
  441150:	mov	x4, x22
  441154:	mov	x5, x25
  441158:	bl	443988 <feof@plt+0x408a8>
  44115c:	cbz	w0, 441de4 <feof@plt+0x3ed04>
  441160:	ldr	x23, [sp, #448]
  441164:	ldr	x19, [x19]
  441168:	mov	x0, x23
  44116c:	mov	x1, x19
  441170:	bl	403020 <strnlen@plt>
  441174:	add	x8, x0, #0x3
  441178:	and	x8, x8, #0xfffffffffffffffc
  44117c:	add	x9, x8, #0x4
  441180:	cmp	x9, x19
  441184:	b.ls	44119c <feof@plt+0x3e0bc>  // b.plast
  441188:	mov	w24, #0x1                   	// #1
  44118c:	b	4411ac <feof@plt+0x3e0cc>
  441190:	mov	w8, #0x1                   	// #1
  441194:	str	w8, [sp, #220]
  441198:	b	441044 <feof@plt+0x3df64>
  44119c:	ldr	w8, [x23, x8]
  4411a0:	mov	w24, #0x1                   	// #1
  4411a4:	str	x23, [sp, #112]
  4411a8:	str	w8, [sp, #108]
  4411ac:	ldr	x19, [sp, #176]
  4411b0:	mov	w13, w21
  4411b4:	cbnz	w28, 441248 <feof@plt+0x3e168>
  4411b8:	ldr	x0, [sp, #272]
  4411bc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4411c0:	add	x1, x1, #0x41b
  4411c4:	bl	402ed0 <strcmp@plt>
  4411c8:	cbz	w0, 4411d4 <feof@plt+0x3e0f4>
  4411cc:	mov	w28, wzr
  4411d0:	b	441244 <feof@plt+0x3e164>
  4411d4:	add	x19, x19, x26, lsl #6
  4411d8:	ldr	x3, [x19, #32]!
  4411dc:	ldr	x0, [sp, #288]
  4411e0:	add	x6, sp, #0x1a8
  4411e4:	mov	w1, w20
  4411e8:	ldur	x2, [x19, #-8]
  4411ec:	mov	x4, x22
  4411f0:	mov	x5, x25
  4411f4:	bl	443988 <feof@plt+0x408a8>
  4411f8:	cbz	w0, 441df0 <feof@plt+0x3ed10>
  4411fc:	ldr	x28, [sp, #424]
  441200:	ldr	x19, [x19]
  441204:	mov	x0, x28
  441208:	mov	x1, x19
  44120c:	bl	403020 <strnlen@plt>
  441210:	ldr	x10, [sp, #144]
  441214:	add	x8, x0, #0x1
  441218:	cmp	x0, x19
  44121c:	add	x9, x28, x8
  441220:	csel	x10, x9, x10, cc  // cc = lo, ul, last
  441224:	ldr	w9, [sp, #156]
  441228:	sub	w8, w19, w8
  44122c:	ldr	x19, [sp, #176]
  441230:	str	x28, [sp, #120]
  441234:	csel	w9, w8, w9, cc  // cc = lo, ul, last
  441238:	mov	w28, #0x1                   	// #1
  44123c:	str	x10, [sp, #144]
  441240:	str	w9, [sp, #156]
  441244:	mov	w13, w21
  441248:	ldr	w8, [sp, #192]
  44124c:	cbz	w8, 440e74 <feof@plt+0x3dd94>
  441250:	ldr	x8, [sp, #264]
  441254:	ldr	w8, [x8]
  441258:	cmp	w8, #0x1
  44125c:	b.ne	440e74 <feof@plt+0x3dd94>  // b.any
  441260:	ldr	x0, [sp, #272]
  441264:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  441268:	add	x1, x1, #0x42d
  44126c:	bl	402ed0 <strcmp@plt>
  441270:	cbnz	w0, 440e70 <feof@plt+0x3dd90>
  441274:	mov	w1, w20
  441278:	add	x20, x19, x26, lsl #6
  44127c:	mov	x19, x20
  441280:	ldr	x3, [x19, #32]!
  441284:	ldr	x0, [sp, #288]
  441288:	ldr	x6, [sp, #80]
  44128c:	mov	x4, x22
  441290:	ldur	x2, [x19, #-8]
  441294:	mov	x5, x25
  441298:	bl	443988 <feof@plt+0x408a8>
  44129c:	cbnz	w0, 440e4c <feof@plt+0x3dd6c>
  4412a0:	str	w24, [sp, #172]
  4412a4:	ldr	x24, [sp, #136]
  4412a8:	ldr	w20, [sp, #324]
  4412ac:	ldr	x21, [sp, #288]
  4412b0:	b	44156c <feof@plt+0x3e48c>
  4412b4:	ldr	x19, [sp, #176]
  4412b8:	mov	w23, wzr
  4412bc:	str	wzr, [sp, #220]
  4412c0:	stp	xzr, xzr, [sp, #120]
  4412c4:	str	wzr, [sp, #168]
  4412c8:	mov	w24, wzr
  4412cc:	mov	x27, xzr
  4412d0:	str	wzr, [sp, #108]
  4412d4:	mov	w28, wzr
  4412d8:	stp	xzr, xzr, [sp, #136]
  4412dc:	str	wzr, [sp, #156]
  4412e0:	mov	w10, w23
  4412e4:	ldr	w9, [sp, #280]
  4412e8:	ldr	x21, [sp, #288]
  4412ec:	mov	w8, wzr
  4412f0:	cbnz	w9, 441420 <feof@plt+0x3e340>
  4412f4:	ldr	x23, [sp, #136]
  4412f8:	cbz	w10, 441424 <feof@plt+0x3e344>
  4412fc:	sub	w8, w10, #0x1
  441300:	str	w24, [sp, #172]
  441304:	mov	x24, x23
  441308:	add	x23, x19, x8, lsl #6
  44130c:	ldr	w19, [x23, #40]
  441310:	ldr	w8, [sp, #104]
  441314:	cmp	w19, w8
  441318:	b.cs	441558 <feof@plt+0x3e478>  // b.hs, b.nlast
  44131c:	ldr	x3, [x23, #32]!
  441320:	add	x6, sp, #0x208
  441324:	mov	x0, x21
  441328:	mov	w1, w20
  44132c:	ldur	x2, [x23, #-8]
  441330:	mov	x4, x22
  441334:	mov	x5, x25
  441338:	bl	443988 <feof@plt+0x408a8>
  44133c:	cbz	w0, 44156c <feof@plt+0x3e48c>
  441340:	ldr	x9, [sp, #176]
  441344:	sub	w8, w19, #0x1
  441348:	mov	x19, x21
  44134c:	add	x6, sp, #0x1f0
  441350:	add	x21, x9, x8, lsl #6
  441354:	ldr	x3, [x21, #32]!
  441358:	mov	x0, x19
  44135c:	mov	w1, w20
  441360:	mov	x4, x22
  441364:	ldur	x2, [x21, #-8]
  441368:	mov	x5, x25
  44136c:	bl	443988 <feof@plt+0x408a8>
  441370:	cbz	w0, 441d8c <feof@plt+0x3ecac>
  441374:	mov	w1, #0x18                  	// #24
  441378:	mov	x0, x19
  44137c:	mov	x2, x22
  441380:	mov	x3, x25
  441384:	bl	43feec <feof@plt+0x3ce0c>
  441388:	cbz	x0, 441e00 <feof@plt+0x3ed20>
  44138c:	ldr	x8, [x21]
  441390:	ldr	x9, [x23]
  441394:	ldr	x1, [sp, #520]
  441398:	ldr	x19, [sp, #496]
  44139c:	str	x8, [sp, #280]
  4413a0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4413a4:	movk	x8, #0xaaab
  4413a8:	umulh	x8, x9, x8
  4413ac:	mov	x26, x0
  4413b0:	cmp	x9, #0x18
  4413b4:	lsr	x23, x8, #4
  4413b8:	str	w28, [sp, #272]
  4413bc:	str	x9, [sp, #264]
  4413c0:	b.cc	441e08 <feof@plt+0x3ed28>  // b.lo, b.ul, b.last
  4413c4:	cmp	x23, #0x1
  4413c8:	csinc	x10, x23, xzr, hi  // hi = pmore
  4413cc:	cmp	x10, #0x2
  4413d0:	b.cs	442004 <feof@plt+0x3ef24>  // b.hs, b.nlast
  4413d4:	ldr	x21, [sp, #288]
  4413d8:	mov	x8, xzr
  4413dc:	mov	x28, xzr
  4413e0:	mov	x9, x1
  4413e4:	b	4420b0 <feof@plt+0x3efd0>
  4413e8:	str	w24, [sp, #172]
  4413ec:	ldr	x24, [sp, #136]
  4413f0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4413f4:	add	x1, x1, #0x3d7
  4413f8:	mov	x0, x25
  4413fc:	mov	w2, wzr
  441400:	blr	x22
  441404:	mov	w19, wzr
  441408:	ldr	x21, [sp, #288]
  44140c:	b	441570 <feof@plt+0x3e490>
  441410:	ldr	x27, [sp, #112]
  441414:	ldp	w23, w10, [sp, #160]
  441418:	cbnz	w10, 4412e4 <feof@plt+0x3e204>
  44141c:	b	4412e0 <feof@plt+0x3e200>
  441420:	ldr	x23, [sp, #136]
  441424:	sub	x1, x29, #0x40
  441428:	mov	x0, x21
  44142c:	mov	x2, x22
  441430:	mov	x3, x25
  441434:	str	w8, [sp, #324]
  441438:	mov	w19, w28
  44143c:	bl	443a48 <feof@plt+0x40968>
  441440:	sub	x1, x29, #0x58
  441444:	mov	x0, x21
  441448:	mov	x2, x22
  44144c:	mov	x3, x25
  441450:	bl	443a48 <feof@plt+0x40968>
  441454:	ldr	x8, [sp, #128]
  441458:	cbz	x8, 441758 <feof@plt+0x3e678>
  44145c:	ldr	w26, [sp, #168]
  441460:	str	w24, [sp, #172]
  441464:	mov	x24, x23
  441468:	str	x27, [sp, #112]
  44146c:	mov	w23, w26
  441470:	lsl	x8, x23, #1
  441474:	add	x27, x8, #0x21
  441478:	mov	x0, x21
  44147c:	mov	x1, x27
  441480:	mov	x2, x22
  441484:	mov	x3, x25
  441488:	bl	43feec <feof@plt+0x3ce0c>
  44148c:	cbz	x0, 441654 <feof@plt+0x3e574>
  441490:	adrp	x8, 472000 <_obstack_memory_used@@Base+0x10838>
  441494:	add	x8, x8, #0x500
  441498:	ldur	q0, [x8, #9]
  44149c:	ldr	q1, [x8]
  4414a0:	mov	x28, x0
  4414a4:	stur	q0, [x0, #9]
  4414a8:	str	q1, [x0]
  4414ac:	cbz	w26, 441664 <feof@plt+0x3e584>
  4414b0:	ldr	x11, [sp, #128]
  4414b4:	ldrb	w9, [x11]
  4414b8:	lsr	w8, w9, #4
  4414bc:	cmp	w9, #0xa0
  4414c0:	orr	w10, w8, #0x30
  4414c4:	add	w8, w8, #0x57
  4414c8:	csel	w8, w10, w8, cc  // cc = lo, ul, last
  4414cc:	mov	w10, #0x30                  	// #48
  4414d0:	bfxil	w10, w9, #0, #4
  4414d4:	and	w9, w9, #0xf
  4414d8:	cmp	w9, #0xa
  4414dc:	add	w9, w9, #0x57
  4414e0:	strb	w8, [x28, #25]
  4414e4:	add	x8, x28, #0x1c
  4414e8:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  4414ec:	mov	w10, #0x2f                  	// #47
  4414f0:	cmp	w26, #0x1
  4414f4:	strb	w9, [x28, #26]
  4414f8:	strb	w10, [x28, #27]
  4414fc:	b.eq	441668 <feof@plt+0x3e588>  // b.none
  441500:	sub	x9, x23, #0x1
  441504:	add	x10, x11, #0x1
  441508:	ldrb	w12, [x10], #1
  44150c:	lsr	w11, w12, #4
  441510:	cmp	w12, #0xa0
  441514:	orr	w13, w11, #0x30
  441518:	add	w11, w11, #0x57
  44151c:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  441520:	mov	w13, #0x30                  	// #48
  441524:	bfxil	w13, w12, #0, #4
  441528:	and	w12, w12, #0xf
  44152c:	cmp	w12, #0xa
  441530:	add	w12, w12, #0x57
  441534:	strb	w11, [x8]
  441538:	add	x11, x8, #0x2
  44153c:	csel	w12, w13, w12, cc  // cc = lo, ul, last
  441540:	subs	x9, x9, #0x1
  441544:	strb	w12, [x8, #1]
  441548:	mov	x8, x11
  44154c:	b.ne	441508 <feof@plt+0x3e428>  // b.any
  441550:	mov	x8, x11
  441554:	b	441668 <feof@plt+0x3e588>
  441558:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44155c:	add	x1, x1, #0x432
  441560:	mov	x0, x25
  441564:	mov	w2, wzr
  441568:	blr	x22
  44156c:	mov	w19, wzr
  441570:	mov	w23, #0x1                   	// #1
  441574:	sub	x1, x29, #0x40
  441578:	mov	x0, x21
  44157c:	mov	x2, x22
  441580:	mov	x3, x25
  441584:	bl	443a48 <feof@plt+0x40968>
  441588:	sub	x1, x29, #0x58
  44158c:	mov	x0, x21
  441590:	mov	x2, x22
  441594:	mov	x3, x25
  441598:	bl	443a48 <feof@plt+0x40968>
  44159c:	tbnz	w23, #0, 4415b4 <feof@plt+0x3e4d4>
  4415a0:	add	x1, sp, #0x208
  4415a4:	mov	x0, x21
  4415a8:	mov	x2, x22
  4415ac:	mov	x3, x25
  4415b0:	bl	443a48 <feof@plt+0x40968>
  4415b4:	mov	w23, wzr
  4415b8:	cbz	w19, 4415d0 <feof@plt+0x3e4f0>
  4415bc:	add	x1, sp, #0x1f0
  4415c0:	mov	x0, x21
  4415c4:	mov	x2, x22
  4415c8:	mov	x3, x25
  4415cc:	bl	443a48 <feof@plt+0x40968>
  4415d0:	ldr	w8, [sp, #172]
  4415d4:	cbz	w8, 4415ec <feof@plt+0x3e50c>
  4415d8:	add	x1, sp, #0x1c0
  4415dc:	mov	x0, x21
  4415e0:	mov	x2, x22
  4415e4:	mov	x3, x25
  4415e8:	bl	443a48 <feof@plt+0x40968>
  4415ec:	cbz	w28, 441604 <feof@plt+0x3e524>
  4415f0:	add	x1, sp, #0x1a8
  4415f4:	mov	x0, x21
  4415f8:	mov	x2, x22
  4415fc:	mov	x3, x25
  441600:	bl	443a48 <feof@plt+0x40968>
  441604:	ldr	w8, [sp, #220]
  441608:	cbz	w8, 441620 <feof@plt+0x3e540>
  44160c:	add	x1, sp, #0x1d8
  441610:	mov	x0, x21
  441614:	mov	x2, x22
  441618:	mov	x3, x25
  44161c:	bl	443a48 <feof@plt+0x40968>
  441620:	cbz	w23, 441638 <feof@plt+0x3e558>
  441624:	add	x1, sp, #0x190
  441628:	mov	x0, x21
  44162c:	mov	x2, x22
  441630:	mov	x3, x25
  441634:	bl	443a48 <feof@plt+0x40968>
  441638:	cbz	x24, 440c2c <feof@plt+0x3db4c>
  44163c:	add	x1, x24, #0x18
  441640:	mov	x0, x21
  441644:	mov	x2, x22
  441648:	mov	x3, x25
  44164c:	bl	443a48 <feof@plt+0x40968>
  441650:	b	440c2c <feof@plt+0x3db4c>
  441654:	mov	x23, x24
  441658:	ldr	w24, [sp, #172]
  44165c:	ldr	x27, [sp, #112]
  441660:	b	441758 <feof@plt+0x3e678>
  441664:	add	x8, x28, #0x19
  441668:	mov	w10, #0x642e                	// #25646
  44166c:	mov	w9, #0x6775                	// #26485
  441670:	movk	w10, #0x6265, lsl #16
  441674:	add	x3, sp, #0x190
  441678:	mov	x0, x28
  44167c:	mov	x1, x22
  441680:	mov	x2, x25
  441684:	mov	x23, x24
  441688:	strh	w9, [x8, #4]
  44168c:	str	w10, [x8]
  441690:	strb	wzr, [x8, #6]
  441694:	bl	440670 <feof@plt+0x3d590>
  441698:	mov	w26, w0
  44169c:	mov	x0, x21
  4416a0:	mov	x1, x28
  4416a4:	mov	x2, x27
  4416a8:	mov	x3, x22
  4416ac:	mov	x4, x25
  4416b0:	bl	4400b0 <feof@plt+0x3cfd0>
  4416b4:	ldr	w24, [sp, #172]
  4416b8:	ldr	x27, [sp, #112]
  4416bc:	tbnz	w26, #31, 441758 <feof@plt+0x3e678>
  4416c0:	add	x1, sp, #0x1d8
  4416c4:	mov	x0, x21
  4416c8:	mov	x2, x22
  4416cc:	mov	x3, x25
  4416d0:	bl	443a48 <feof@plt+0x40968>
  4416d4:	cbz	w24, 4416ec <feof@plt+0x3e60c>
  4416d8:	add	x1, sp, #0x1c0
  4416dc:	mov	x0, x21
  4416e0:	mov	x2, x22
  4416e4:	mov	x3, x25
  4416e8:	bl	443a48 <feof@plt+0x40968>
  4416ec:	cbz	w19, 441704 <feof@plt+0x3e624>
  4416f0:	add	x1, sp, #0x1a8
  4416f4:	mov	x0, x21
  4416f8:	mov	x2, x22
  4416fc:	mov	x3, x25
  441700:	bl	443a48 <feof@plt+0x40968>
  441704:	mov	w8, #0x1                   	// #1
  441708:	str	w8, [sp, #24]
  44170c:	ldr	x8, [sp, #224]
  441710:	ldp	x7, x3, [sp, #248]
  441714:	ldr	x6, [sp, #240]
  441718:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  44171c:	add	x1, x1, #0xbb5
  441720:	mov	x0, x21
  441724:	mov	w2, w26
  441728:	mov	x4, x22
  44172c:	mov	x5, x25
  441730:	str	wzr, [sp, #40]
  441734:	str	xzr, [sp, #32]
  441738:	str	wzr, [sp, #16]
  44173c:	stp	x8, xzr, [sp]
  441740:	bl	440a90 <feof@plt+0x3d9b0>
  441744:	mov	x2, x25
  441748:	mov	w25, w0
  44174c:	tbz	w0, #31, 441830 <feof@plt+0x3e750>
  441750:	mov	w0, w26
  441754:	b	4418e8 <feof@plt+0x3e808>
  441758:	ldr	w8, [sp, #220]
  44175c:	cbz	w8, 441774 <feof@plt+0x3e694>
  441760:	add	x1, sp, #0x1d8
  441764:	mov	x0, x21
  441768:	mov	x2, x22
  44176c:	mov	x3, x25
  441770:	bl	443a48 <feof@plt+0x40968>
  441774:	ldr	x26, [sp, #232]
  441778:	cbz	x23, 441790 <feof@plt+0x3e6b0>
  44177c:	add	x1, x23, #0x18
  441780:	mov	x0, x21
  441784:	mov	x2, x22
  441788:	mov	x3, x25
  44178c:	bl	443a48 <feof@plt+0x40968>
  441790:	cbz	x27, 441838 <feof@plt+0x3e758>
  441794:	ldr	w3, [sp, #108]
  441798:	mov	x0, x21
  44179c:	mov	x1, x26
  4417a0:	mov	x2, x27
  4417a4:	mov	x4, x22
  4417a8:	mov	x5, x25
  4417ac:	bl	4433ec <feof@plt+0x4030c>
  4417b0:	tbnz	w0, #31, 441838 <feof@plt+0x3e758>
  4417b4:	mov	w27, w0
  4417b8:	add	x1, sp, #0x1c0
  4417bc:	mov	x0, x21
  4417c0:	mov	x2, x22
  4417c4:	mov	x3, x25
  4417c8:	bl	443a48 <feof@plt+0x40968>
  4417cc:	cbz	w19, 4417e4 <feof@plt+0x3e704>
  4417d0:	add	x1, sp, #0x1a8
  4417d4:	mov	x0, x21
  4417d8:	mov	x2, x22
  4417dc:	mov	x3, x25
  4417e0:	bl	443a48 <feof@plt+0x40968>
  4417e4:	mov	w8, #0x1                   	// #1
  4417e8:	str	w8, [sp, #24]
  4417ec:	ldr	x8, [sp, #224]
  4417f0:	ldp	x7, x3, [sp, #248]
  4417f4:	ldr	x6, [sp, #240]
  4417f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x838>
  4417fc:	add	x1, x1, #0xbb5
  441800:	mov	x0, x21
  441804:	mov	w2, w27
  441808:	mov	x4, x22
  44180c:	mov	x5, x25
  441810:	str	wzr, [sp, #40]
  441814:	str	xzr, [sp, #32]
  441818:	str	wzr, [sp, #16]
  44181c:	stp	x8, xzr, [sp]
  441820:	bl	440a90 <feof@plt+0x3d9b0>
  441824:	mov	x2, x25
  441828:	mov	w25, w0
  44182c:	tbnz	w0, #31, 4418e4 <feof@plt+0x3e804>
  441830:	mov	w0, w20
  441834:	b	4418e8 <feof@plt+0x3e808>
  441838:	cbz	w24, 441850 <feof@plt+0x3e770>
  44183c:	add	x1, sp, #0x1c0
  441840:	mov	x0, x21
  441844:	mov	x2, x22
  441848:	mov	x3, x25
  44184c:	bl	443a48 <feof@plt+0x40968>
  441850:	ldr	x2, [sp, #120]
  441854:	str	xzr, [sp, #344]
  441858:	cbz	x2, 4418f4 <feof@plt+0x3e814>
  44185c:	mov	x0, x21
  441860:	mov	x1, x26
  441864:	mov	w3, wzr
  441868:	mov	x4, x22
  44186c:	mov	x5, x25
  441870:	bl	4433ec <feof@plt+0x4030c>
  441874:	tbnz	w0, #31, 4418f4 <feof@plt+0x3e814>
  441878:	ldr	w8, [sp, #156]
  44187c:	ldp	x7, x3, [sp, #248]
  441880:	ldr	x6, [sp, #240]
  441884:	mov	w27, w0
  441888:	str	w8, [sp, #40]
  44188c:	ldr	x8, [sp, #144]
  441890:	add	x9, sp, #0x158
  441894:	mov	x0, x21
  441898:	mov	x1, x26
  44189c:	str	x8, [sp, #32]
  4418a0:	mov	w8, #0x1                   	// #1
  4418a4:	str	w8, [sp, #24]
  4418a8:	ldr	x8, [sp, #224]
  4418ac:	mov	w2, w27
  4418b0:	mov	x4, x22
  4418b4:	mov	x5, x25
  4418b8:	str	wzr, [sp, #16]
  4418bc:	stp	x8, x9, [sp]
  4418c0:	bl	440a90 <feof@plt+0x3d9b0>
  4418c4:	mov	x3, x25
  4418c8:	mov	w25, w0
  4418cc:	add	x1, sp, #0x1a8
  4418d0:	mov	x0, x21
  4418d4:	mov	x2, x22
  4418d8:	bl	443a48 <feof@plt+0x40968>
  4418dc:	tbz	w25, #31, 44190c <feof@plt+0x3e82c>
  4418e0:	ldr	x2, [sp, #304]
  4418e4:	mov	w0, w27
  4418e8:	mov	x1, x22
  4418ec:	bl	44070c <feof@plt+0x3d62c>
  4418f0:	b	440c48 <feof@plt+0x3db68>
  4418f4:	cbz	w19, 44190c <feof@plt+0x3e82c>
  4418f8:	ldr	x3, [sp, #304]
  4418fc:	add	x1, sp, #0x1a8
  441900:	mov	x0, x21
  441904:	mov	x2, x22
  441908:	bl	443a48 <feof@plt+0x40968>
  44190c:	ldr	x8, [sp, #552]
  441910:	ldr	x10, [sp, #544]
  441914:	ldr	x9, [sp, #584]
  441918:	cmp	x8, #0x0
  44191c:	add	x11, x10, x8
  441920:	bic	x8, x11, x11, asr #63
  441924:	csel	x25, xzr, x10, eq  // eq = none
  441928:	csel	x8, xzr, x8, eq  // eq = none
  44192c:	cbz	x9, 44194c <feof@plt+0x3e86c>
  441930:	ldr	x10, [sp, #576]
  441934:	cmp	x10, x25
  441938:	add	x9, x10, x9
  44193c:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  441940:	csel	x25, x10, x25, eq  // eq = none
  441944:	cmp	x9, x8
  441948:	csel	x8, x9, x8, gt
  44194c:	ldr	w19, [sp, #324]
  441950:	ldr	x9, [sp, #616]
  441954:	cbz	x9, 441974 <feof@plt+0x3e894>
  441958:	ldr	x10, [sp, #608]
  44195c:	cmp	x10, x25
  441960:	add	x9, x10, x9
  441964:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  441968:	csel	x25, x10, x25, eq  // eq = none
  44196c:	cmp	x9, x8
  441970:	csel	x8, x9, x8, gt
  441974:	ldr	x9, [sp, #648]
  441978:	cbz	x9, 441998 <feof@plt+0x3e8b8>
  44197c:	ldr	x10, [sp, #640]
  441980:	cmp	x10, x25
  441984:	add	x9, x10, x9
  441988:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  44198c:	csel	x25, x10, x25, eq  // eq = none
  441990:	cmp	x9, x8
  441994:	csel	x8, x9, x8, gt
  441998:	ldr	x9, [sp, #680]
  44199c:	cbz	x9, 4419bc <feof@plt+0x3e8dc>
  4419a0:	ldr	x10, [sp, #672]
  4419a4:	cmp	x10, x25
  4419a8:	add	x9, x10, x9
  4419ac:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  4419b0:	csel	x25, x10, x25, eq  // eq = none
  4419b4:	cmp	x9, x8
  4419b8:	csel	x8, x9, x8, gt
  4419bc:	ldr	x9, [sp, #712]
  4419c0:	cbz	x9, 4419e0 <feof@plt+0x3e900>
  4419c4:	ldr	x10, [sp, #704]
  4419c8:	cmp	x10, x25
  4419cc:	add	x9, x10, x9
  4419d0:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  4419d4:	csel	x25, x10, x25, eq  // eq = none
  4419d8:	cmp	x9, x8
  4419dc:	csel	x8, x9, x8, gt
  4419e0:	ldr	x9, [sp, #744]
  4419e4:	cbz	x9, 441a04 <feof@plt+0x3e924>
  4419e8:	ldr	x10, [sp, #736]
  4419ec:	cmp	x10, x25
  4419f0:	add	x9, x10, x9
  4419f4:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  4419f8:	csel	x25, x10, x25, eq  // eq = none
  4419fc:	cmp	x9, x8
  441a00:	csel	x8, x9, x8, gt
  441a04:	ldr	x9, [sp, #776]
  441a08:	cbz	x9, 441a28 <feof@plt+0x3e948>
  441a0c:	ldr	x10, [sp, #768]
  441a10:	cmp	x10, x25
  441a14:	add	x9, x10, x9
  441a18:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  441a1c:	csel	x25, x10, x25, eq  // eq = none
  441a20:	cmp	x9, x8
  441a24:	csel	x8, x9, x8, gt
  441a28:	ldr	x9, [sp, #808]
  441a2c:	cbz	x9, 441a4c <feof@plt+0x3e96c>
  441a30:	ldr	x10, [sp, #800]
  441a34:	cmp	x10, x25
  441a38:	add	x9, x10, x9
  441a3c:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  441a40:	csel	x25, x10, x25, eq  // eq = none
  441a44:	cmp	x9, x8
  441a48:	csel	x8, x9, x8, gt
  441a4c:	ldr	x9, [sp, #840]
  441a50:	cbz	x9, 441a70 <feof@plt+0x3e990>
  441a54:	ldr	x10, [sp, #832]
  441a58:	cmp	x10, x25
  441a5c:	add	x9, x10, x9
  441a60:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  441a64:	csel	x25, x10, x25, eq  // eq = none
  441a68:	cmp	x9, x8
  441a6c:	csel	x8, x9, x8, gt
  441a70:	cbz	x25, 441d6c <feof@plt+0x3ec8c>
  441a74:	cbz	x8, 441d6c <feof@plt+0x3ec8c>
  441a78:	ldr	x19, [sp, #304]
  441a7c:	sub	x3, x8, x25
  441a80:	add	x6, sp, #0x190
  441a84:	mov	x0, x21
  441a88:	mov	w1, w20
  441a8c:	mov	x2, x25
  441a90:	mov	x4, x22
  441a94:	mov	x5, x19
  441a98:	bl	443988 <feof@plt+0x408a8>
  441a9c:	cbz	w0, 441dac <feof@plt+0x3eccc>
  441aa0:	mov	w0, w20
  441aa4:	mov	x1, x22
  441aa8:	mov	x2, x19
  441aac:	bl	44070c <feof@plt+0x3d62c>
  441ab0:	mov	w23, #0x1                   	// #1
  441ab4:	cbz	w0, 441fa4 <feof@plt+0x3eec4>
  441ab8:	ldr	x11, [sp, #544]
  441abc:	ldr	x9, [sp, #400]
  441ac0:	ldr	x8, [sp, #552]
  441ac4:	ldr	x12, [sp, #576]
  441ac8:	ldr	x14, [sp, #608]
  441acc:	ldr	x16, [sp, #640]
  441ad0:	ldr	x18, [sp, #672]
  441ad4:	ldr	x1, [sp, #704]
  441ad8:	ldr	x3, [sp, #736]
  441adc:	ldr	x5, [sp, #768]
  441ae0:	ldr	x7, [sp, #800]
  441ae4:	ldr	x20, [sp, #832]
  441ae8:	ldr	x10, [sp, #584]
  441aec:	ldr	x13, [sp, #616]
  441af0:	ldr	x15, [sp, #648]
  441af4:	sub	x11, x11, x25
  441af8:	ldr	x17, [sp, #680]
  441afc:	sub	x12, x12, x25
  441b00:	sub	x14, x14, x25
  441b04:	sub	x16, x16, x25
  441b08:	sub	x18, x18, x25
  441b0c:	sub	x1, x1, x25
  441b10:	sub	x3, x3, x25
  441b14:	sub	x5, x5, x25
  441b18:	sub	x7, x7, x25
  441b1c:	sub	x20, x20, x25
  441b20:	cmp	x8, #0x0
  441b24:	add	x11, x9, x11
  441b28:	ldr	x0, [sp, #712]
  441b2c:	add	x12, x9, x12
  441b30:	add	x14, x9, x14
  441b34:	add	x16, x9, x16
  441b38:	add	x18, x9, x18
  441b3c:	add	x1, x9, x1
  441b40:	add	x3, x9, x3
  441b44:	add	x5, x9, x5
  441b48:	add	x7, x9, x7
  441b4c:	add	x9, x9, x20
  441b50:	cset	w20, ne  // ne = any
  441b54:	cinc	w21, w23, ne  // ne = any
  441b58:	csel	x11, xzr, x11, eq  // eq = none
  441b5c:	cmp	x10, #0x0
  441b60:	ldr	x2, [sp, #744]
  441b64:	csel	w10, w20, w21, eq  // eq = none
  441b68:	csel	x12, xzr, x12, eq  // eq = none
  441b6c:	cmp	x13, #0x0
  441b70:	ldr	x4, [sp, #776]
  441b74:	str	x11, [sp, #560]
  441b78:	csel	x11, xzr, x14, eq  // eq = none
  441b7c:	cinc	w10, w10, ne  // ne = any
  441b80:	cmp	x15, #0x0
  441b84:	ldr	x6, [sp, #808]
  441b88:	str	x12, [sp, #592]
  441b8c:	csel	x12, xzr, x16, eq  // eq = none
  441b90:	cinc	w10, w10, ne  // ne = any
  441b94:	cmp	x17, #0x0
  441b98:	ldr	x19, [sp, #840]
  441b9c:	str	x11, [sp, #624]
  441ba0:	str	x12, [sp, #656]
  441ba4:	csel	x11, xzr, x18, eq  // eq = none
  441ba8:	cinc	w12, w10, ne  // ne = any
  441bac:	cmp	x0, #0x0
  441bb0:	csel	x10, xzr, x1, eq  // eq = none
  441bb4:	cmp	x2, #0x0
  441bb8:	ldr	x21, [sp, #288]
  441bbc:	str	x10, [sp, #720]
  441bc0:	csel	x10, xzr, x3, eq  // eq = none
  441bc4:	cmp	x4, #0x0
  441bc8:	ldr	x20, [x29, #104]
  441bcc:	str	x11, [sp, #688]
  441bd0:	csel	x11, xzr, x5, eq  // eq = none
  441bd4:	cmp	x6, #0x0
  441bd8:	str	x10, [sp, #752]
  441bdc:	csel	x10, xzr, x7, eq  // eq = none
  441be0:	cmp	x19, #0x0
  441be4:	mov	x24, xzr
  441be8:	mov	x22, xzr
  441bec:	mov	w19, w12
  441bf0:	csel	x9, xzr, x9, eq  // eq = none
  441bf4:	add	x25, sp, #0x220
  441bf8:	str	x11, [sp, #784]
  441bfc:	str	x10, [sp, #816]
  441c00:	str	x9, [sp, #848]
  441c04:	cbnz	x8, 441c88 <feof@plt+0x3eba8>
  441c08:	b	441c1c <feof@plt+0x3eb3c>
  441c0c:	add	x8, x25, x24
  441c10:	ldr	x8, [x8, #40]
  441c14:	add	x24, x24, #0x20
  441c18:	cbnz	x8, 441c88 <feof@plt+0x3eba8>
  441c1c:	add	x23, x25, x24
  441c20:	ldr	x2, [x23, #168]
  441c24:	cbz	x2, 441c88 <feof@plt+0x3eba8>
  441c28:	mov	w26, w19
  441c2c:	cbnz	x22, 441c4c <feof@plt+0x3eb6c>
  441c30:	ldp	x3, x2, [sp, #304]
  441c34:	mov	w1, #0x13b4                	// #5044
  441c38:	mov	x0, x21
  441c3c:	bl	43feec <feof@plt+0x3ce0c>
  441c40:	cbz	x0, 4420f0 <feof@plt+0x3f010>
  441c44:	ldr	x2, [x23, #168]
  441c48:	mov	x22, x0
  441c4c:	add	x19, x25, x24
  441c50:	ldr	x1, [x19, #176]
  441c54:	ldp	x5, x4, [sp, #304]
  441c58:	add	x6, sp, #0x150
  441c5c:	add	x7, sp, #0x148
  441c60:	mov	x0, x21
  441c64:	mov	x3, x22
  441c68:	stp	xzr, xzr, [sp, #328]
  441c6c:	bl	440800 <feof@plt+0x3d720>
  441c70:	cbz	w0, 4420f0 <feof@plt+0x3f010>
  441c74:	ldp	x9, x8, [sp, #328]
  441c78:	str	x8, [x19, #16]
  441c7c:	str	x9, [x23, #8]
  441c80:	str	wzr, [x19, #24]
  441c84:	mov	w19, w26
  441c88:	cmp	x24, #0x80
  441c8c:	b.ne	441c0c <feof@plt+0x3eb2c>  // b.any
  441c90:	ldr	x25, [sp, #304]
  441c94:	mov	x24, xzr
  441c98:	add	x28, sp, #0x220
  441c9c:	b	441cc8 <feof@plt+0x3ebe8>
  441ca0:	mov	x25, xzr
  441ca4:	mov	x8, xzr
  441ca8:	str	x25, [x23, #16]
  441cac:	ldr	x25, [sp, #304]
  441cb0:	sub	w19, w19, #0x1
  441cb4:	str	x8, [x27, #8]
  441cb8:	str	wzr, [x27, #24]
  441cbc:	add	x24, x24, #0x20
  441cc0:	cmp	x24, #0xa0
  441cc4:	b.eq	441f78 <feof@plt+0x3ee98>  // b.none
  441cc8:	add	x27, x28, x24
  441ccc:	ldr	x8, [x27, #8]
  441cd0:	cbz	x8, 441cbc <feof@plt+0x3ebdc>
  441cd4:	ldr	w9, [x27, #24]
  441cd8:	cbz	w9, 441cbc <feof@plt+0x3ebdc>
  441cdc:	cbnz	x22, 441d00 <feof@plt+0x3ec20>
  441ce0:	ldr	x2, [sp, #312]
  441ce4:	mov	w1, #0x13b4                	// #5044
  441ce8:	mov	x0, x21
  441cec:	mov	x3, x25
  441cf0:	bl	43feec <feof@plt+0x3ce0c>
  441cf4:	cbz	x0, 4421f0 <feof@plt+0x3f110>
  441cf8:	ldr	x8, [x27, #8]
  441cfc:	mov	x22, x0
  441d00:	subs	x26, x8, #0x18
  441d04:	add	x23, x28, x24
  441d08:	b.cc	441ca0 <feof@plt+0x3ebc0>  // b.lo, b.ul, b.last
  441d0c:	ldr	x21, [x23, #16]
  441d10:	ldr	w8, [x21]
  441d14:	cmp	w8, #0x1
  441d18:	b.ne	441d5c <feof@plt+0x3ec7c>  // b.any
  441d1c:	ldr	x1, [x21, #8]
  441d20:	ldr	x0, [sp, #288]
  441d24:	ldr	x2, [sp, #312]
  441d28:	mov	x3, x25
  441d2c:	bl	43feec <feof@plt+0x3ce0c>
  441d30:	cbz	x0, 4421f8 <feof@plt+0x3f118>
  441d34:	ldr	x4, [x21, #8]
  441d38:	mov	x25, x0
  441d3c:	add	x0, x21, #0x18
  441d40:	mov	x1, x26
  441d44:	mov	x2, x22
  441d48:	mov	x3, x25
  441d4c:	bl	442434 <feof@plt+0x3f354>
  441d50:	cbz	w0, 441d5c <feof@plt+0x3ec7c>
  441d54:	ldr	x8, [x21, #8]
  441d58:	b	441d64 <feof@plt+0x3ec84>
  441d5c:	mov	x25, xzr
  441d60:	mov	x8, xzr
  441d64:	ldr	x21, [sp, #288]
  441d68:	b	441ca8 <feof@plt+0x3ebc8>
  441d6c:	ldr	x25, [sp, #304]
  441d70:	mov	w0, w20
  441d74:	mov	x1, x22
  441d78:	mov	x2, x25
  441d7c:	bl	44070c <feof@plt+0x3d62c>
  441d80:	cbz	w0, 441dc8 <feof@plt+0x3ece8>
  441d84:	mov	w25, #0x1                   	// #1
  441d88:	b	440c48 <feof@plt+0x3db68>
  441d8c:	mov	w8, wzr
  441d90:	mov	w23, wzr
  441d94:	mov	x21, x19
  441d98:	mov	w19, wzr
  441d9c:	b	441574 <feof@plt+0x3e494>
  441da0:	ldr	x24, [sp, #136]
  441da4:	str	wzr, [sp, #220]
  441da8:	b	441404 <feof@plt+0x3e324>
  441dac:	mov	w28, wzr
  441db0:	mov	x24, xzr
  441db4:	mov	w23, wzr
  441db8:	mov	x25, x19
  441dbc:	str	wzr, [sp, #220]
  441dc0:	str	wzr, [sp, #172]
  441dc4:	b	442218 <feof@plt+0x3f138>
  441dc8:	str	wzr, [sp, #220]
  441dcc:	str	wzr, [sp, #172]
  441dd0:	mov	w28, wzr
  441dd4:	mov	x24, xzr
  441dd8:	mov	w23, wzr
  441ddc:	cbnz	w19, 4415bc <feof@plt+0x3e4dc>
  441de0:	b	4415d0 <feof@plt+0x3e4f0>
  441de4:	ldr	x24, [sp, #136]
  441de8:	str	wzr, [sp, #172]
  441dec:	b	441404 <feof@plt+0x3e324>
  441df0:	str	w24, [sp, #172]
  441df4:	ldr	x24, [sp, #136]
  441df8:	mov	w28, wzr
  441dfc:	b	441404 <feof@plt+0x3e324>
  441e00:	ldr	x21, [sp, #288]
  441e04:	b	4421e4 <feof@plt+0x3f104>
  441e08:	ldr	x21, [sp, #288]
  441e0c:	mov	x28, xzr
  441e10:	add	x8, x28, x28, lsl #1
  441e14:	str	x1, [sp, #208]
  441e18:	lsl	x1, x8, #3
  441e1c:	mov	x0, x21
  441e20:	mov	x2, x22
  441e24:	mov	x3, x25
  441e28:	str	x27, [sp, #112]
  441e2c:	str	x1, [sp, #200]
  441e30:	bl	43feec <feof@plt+0x3ce0c>
  441e34:	cbz	x0, 4421c8 <feof@plt+0x3f0e8>
  441e38:	ldp	x17, x8, [sp, #256]
  441e3c:	mov	x27, x0
  441e40:	ldr	x0, [sp, #280]
  441e44:	cmp	x8, #0x18
  441e48:	b.cc	441efc <feof@plt+0x3ee1c>  // b.lo, b.ul, b.last
  441e4c:	ldr	x10, [sp, #208]
  441e50:	mov	w8, wzr
  441e54:	mov	x9, xzr
  441e58:	mov	w11, #0x18                  	// #24
  441e5c:	add	x10, x10, #0x8
  441e60:	b	441e8c <feof@plt+0x3edac>
  441e64:	madd	x12, x12, x11, x27
  441e68:	add	x13, x13, x17
  441e6c:	str	x13, [x12, #8]
  441e70:	ldr	x13, [x10, #8]
  441e74:	add	w8, w8, #0x1
  441e78:	str	x13, [x12, #16]
  441e7c:	add	x9, x9, #0x1
  441e80:	cmp	x9, x23
  441e84:	add	x10, x10, #0x18
  441e88:	b.cs	441efc <feof@plt+0x3ee1c>  // b.hs, b.nlast
  441e8c:	ldurb	w12, [x10, #-4]
  441e90:	and	w12, w12, #0xf
  441e94:	sub	w12, w12, #0x1
  441e98:	and	w12, w12, #0xff
  441e9c:	cmp	w12, #0x1
  441ea0:	b.hi	441e7c <feof@plt+0x3ed9c>  // b.pmore
  441ea4:	ldurh	w12, [x10, #-2]
  441ea8:	cbz	w12, 441e7c <feof@plt+0x3ed9c>
  441eac:	ldur	w12, [x10, #-8]
  441eb0:	cmp	x0, x12
  441eb4:	b.ls	44219c <feof@plt+0x3f0bc>  // b.plast
  441eb8:	add	x12, x19, x12
  441ebc:	umull	x13, w8, w11
  441ec0:	str	x12, [x27, x13]
  441ec4:	ldr	x13, [x10]
  441ec8:	mov	w12, w8
  441ecc:	cbz	x24, 441e64 <feof@plt+0x3ed84>
  441ed0:	ldr	x15, [x24]
  441ed4:	mov	x16, x24
  441ed8:	subs	x14, x13, x15
  441edc:	b.cc	441e64 <feof@plt+0x3ed84>  // b.lo, b.ul, b.last
  441ee0:	ldr	x16, [x16, #16]
  441ee4:	add	x15, x16, x15
  441ee8:	cmp	x13, x15
  441eec:	b.cs	441e64 <feof@plt+0x3ed84>  // b.hs, b.nlast
  441ef0:	ldr	x13, [x24, #8]
  441ef4:	ldr	x13, [x13, x14]
  441ef8:	b	441e64 <feof@plt+0x3ed84>
  441efc:	adrp	x3, 443000 <feof@plt+0x3ff20>
  441f00:	add	x3, x3, #0x970
  441f04:	mov	w2, #0x18                  	// #24
  441f08:	mov	x0, x27
  441f0c:	mov	x1, x28
  441f10:	bl	449fb4 <feof@plt+0x46ed4>
  441f14:	add	x1, sp, #0x208
  441f18:	mov	x0, x21
  441f1c:	mov	x2, x22
  441f20:	mov	x3, x25
  441f24:	stp	xzr, x27, [x26]
  441f28:	str	x28, [x26, #16]
  441f2c:	bl	443a48 <feof@plt+0x40968>
  441f30:	ldr	x9, [sp, #248]
  441f34:	mov	w8, #0x1                   	// #1
  441f38:	str	w8, [x9]
  441f3c:	ldr	w9, [x21, #8]
  441f40:	add	x8, x21, #0x30
  441f44:	cbnz	w9, 441fc0 <feof@plt+0x3eee0>
  441f48:	mov	x9, x8
  441f4c:	ldr	x8, [x8]
  441f50:	cbnz	x8, 441f48 <feof@plt+0x3ee68>
  441f54:	str	x26, [x9]
  441f58:	b	441fe0 <feof@plt+0x3ef00>
  441f5c:	ldr	x24, [sp, #136]
  441f60:	mov	w8, #0x1                   	// #1
  441f64:	mov	w19, wzr
  441f68:	str	w8, [sp, #220]
  441f6c:	b	441408 <feof@plt+0x3e328>
  441f70:	ldr	x24, [sp, #136]
  441f74:	b	441404 <feof@plt+0x3e324>
  441f78:	cbz	x22, 441f94 <feof@plt+0x3eeb4>
  441f7c:	ldr	x3, [sp, #312]
  441f80:	mov	w2, #0x13b4                	// #5044
  441f84:	mov	x0, x21
  441f88:	mov	x1, x22
  441f8c:	mov	x4, x25
  441f90:	bl	4400b0 <feof@plt+0x3cfd0>
  441f94:	cbz	w19, 4420f8 <feof@plt+0x3f018>
  441f98:	ldr	x22, [sp, #312]
  441f9c:	mov	w23, #0x1                   	// #1
  441fa0:	b	442114 <feof@plt+0x3f034>
  441fa4:	ldr	x25, [sp, #304]
  441fa8:	str	wzr, [sp, #220]
  441fac:	str	wzr, [sp, #172]
  441fb0:	mov	w28, wzr
  441fb4:	mov	x24, xzr
  441fb8:	b	442218 <feof@plt+0x3f138>
  441fbc:	clrex
  441fc0:	mov	x10, x8
  441fc4:	mov	x9, x10
  441fc8:	ldar	x10, [x10]
  441fcc:	cbnz	x10, 441fc4 <feof@plt+0x3eee4>
  441fd0:	ldaxr	x10, [x9]
  441fd4:	cbnz	x10, 441fbc <feof@plt+0x3eedc>
  441fd8:	stlxr	w10, x26, [x9]
  441fdc:	cbnz	w10, 441fd0 <feof@plt+0x3eef0>
  441fe0:	ldp	x25, x22, [sp, #304]
  441fe4:	ldr	x21, [sp, #288]
  441fe8:	ldr	w20, [sp, #324]
  441fec:	ldr	w28, [sp, #272]
  441ff0:	mov	x23, x24
  441ff4:	ldr	w24, [sp, #172]
  441ff8:	ldr	x27, [sp, #112]
  441ffc:	mov	w8, #0x1                   	// #1
  442000:	b	441424 <feof@plt+0x3e344>
  442004:	and	x8, x10, #0xffffffffffffffe
  442008:	mov	w9, #0x18                  	// #24
  44200c:	mov	x11, xzr
  442010:	mov	x12, xzr
  442014:	madd	x9, x8, x9, x1
  442018:	add	x13, x1, #0x1e
  44201c:	mov	x14, x8
  442020:	b	442064 <feof@plt+0x3ef84>
  442024:	cmp	w18, #0x2
  442028:	and	w15, w15, #0xff
  44202c:	cset	w18, cc  // cc = lo, ul, last
  442030:	cmp	w15, #0x2
  442034:	cset	w15, cc  // cc = lo, ul, last
  442038:	tst	w16, #0xffff
  44203c:	cset	w16, ne  // ne = any
  442040:	tst	w17, #0xffff
  442044:	cset	w17, ne  // ne = any
  442048:	and	w15, w15, w16
  44204c:	add	x11, x11, x15
  442050:	and	w15, w18, w17
  442054:	subs	x14, x14, #0x2
  442058:	add	x12, x12, x15
  44205c:	add	x13, x13, #0x30
  442060:	b.eq	4420a0 <feof@plt+0x3efc0>  // b.none
  442064:	ldurb	w15, [x13, #-26]
  442068:	ldurb	w16, [x13, #-2]
  44206c:	and	w15, w15, #0xf
  442070:	sub	w15, w15, #0x1
  442074:	and	w16, w16, #0xf
  442078:	and	w17, w15, #0xff
  44207c:	cmp	w17, #0x1
  442080:	sub	w17, w16, #0x1
  442084:	b.hi	44208c <feof@plt+0x3efac>  // b.pmore
  442088:	ldurh	w16, [x13, #-24]
  44208c:	and	w18, w17, #0xff
  442090:	cmp	w18, #0x1
  442094:	b.hi	442024 <feof@plt+0x3ef44>  // b.pmore
  442098:	ldrh	w17, [x13]
  44209c:	b	442024 <feof@plt+0x3ef44>
  4420a0:	ldr	x21, [sp, #288]
  4420a4:	cmp	x10, x8
  4420a8:	add	x28, x12, x11
  4420ac:	b.eq	441e10 <feof@plt+0x3ed30>  // b.none
  4420b0:	add	x9, x9, #0x6
  4420b4:	b	4420c8 <feof@plt+0x3efe8>
  4420b8:	add	x8, x8, #0x1
  4420bc:	cmp	x8, x23
  4420c0:	add	x9, x9, #0x18
  4420c4:	b.cs	441e10 <feof@plt+0x3ed30>  // b.hs, b.nlast
  4420c8:	ldurb	w10, [x9, #-2]
  4420cc:	and	w10, w10, #0xf
  4420d0:	sub	w10, w10, #0x1
  4420d4:	and	w10, w10, #0xff
  4420d8:	cmp	w10, #0x1
  4420dc:	b.hi	4420b8 <feof@plt+0x3efd8>  // b.pmore
  4420e0:	ldrh	w10, [x9]
  4420e4:	cmp	w10, #0x0
  4420e8:	cinc	x28, x28, ne  // ne = any
  4420ec:	b	4420b8 <feof@plt+0x3efd8>
  4420f0:	ldp	x25, x22, [sp, #304]
  4420f4:	b	442200 <feof@plt+0x3f120>
  4420f8:	ldr	x22, [sp, #312]
  4420fc:	add	x1, sp, #0x190
  442100:	mov	x0, x21
  442104:	mov	x3, x25
  442108:	mov	x2, x22
  44210c:	bl	443a48 <feof@plt+0x40968>
  442110:	mov	w23, wzr
  442114:	ldr	w13, [sp, #300]
  442118:	ldr	x2, [sp, #560]
  44211c:	ldr	x3, [sp, #552]
  442120:	ldr	x4, [sp, #592]
  442124:	ldr	x5, [sp, #584]
  442128:	ldr	x6, [sp, #624]
  44212c:	ldr	x7, [sp, #616]
  442130:	ldr	x8, [sp, #656]
  442134:	ldr	x9, [sp, #648]
  442138:	ldr	x10, [sp, #688]
  44213c:	ldr	x11, [sp, #680]
  442140:	ldr	x12, [sp, #344]
  442144:	ldr	x14, [sp, #240]
  442148:	ldr	x1, [sp, #256]
  44214c:	cmp	w13, #0x2
  442150:	cset	w13, eq  // eq = none
  442154:	mov	x0, x21
  442158:	stp	x14, x20, [sp, #64]
  44215c:	stp	x22, x25, [sp, #48]
  442160:	str	x12, [sp, #40]
  442164:	str	w13, [sp, #32]
  442168:	stp	x10, x11, [sp, #16]
  44216c:	stp	x8, x9, [sp]
  442170:	bl	443a98 <feof@plt+0x409b8>
  442174:	cbz	w0, 442188 <feof@plt+0x3f0a8>
  442178:	ldr	x8, [sp, #224]
  44217c:	mov	w25, #0x1                   	// #1
  442180:	str	w25, [x8]
  442184:	b	440c48 <feof@plt+0x3db68>
  442188:	str	wzr, [sp, #220]
  44218c:	str	wzr, [sp, #172]
  442190:	mov	w28, wzr
  442194:	mov	x24, xzr
  442198:	b	442214 <feof@plt+0x3f134>
  44219c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4421a0:	add	x1, x1, #0x4df
  4421a4:	mov	x0, x25
  4421a8:	mov	w2, wzr
  4421ac:	blr	x22
  4421b0:	ldr	x2, [sp, #200]
  4421b4:	mov	x0, x21
  4421b8:	mov	x1, x27
  4421bc:	mov	x3, x22
  4421c0:	mov	x4, x25
  4421c4:	bl	4400b0 <feof@plt+0x3cfd0>
  4421c8:	mov	w2, #0x18                  	// #24
  4421cc:	mov	x0, x21
  4421d0:	mov	x1, x26
  4421d4:	mov	x3, x22
  4421d8:	mov	x4, x25
  4421dc:	bl	4400b0 <feof@plt+0x3cfd0>
  4421e0:	ldr	w28, [sp, #272]
  4421e4:	mov	w23, wzr
  4421e8:	mov	w19, #0x1                   	// #1
  4421ec:	b	441574 <feof@plt+0x3e494>
  4421f0:	ldr	x22, [sp, #312]
  4421f4:	b	442200 <feof@plt+0x3f120>
  4421f8:	ldp	x25, x22, [sp, #304]
  4421fc:	ldr	x21, [sp, #288]
  442200:	str	wzr, [sp, #220]
  442204:	str	wzr, [sp, #172]
  442208:	mov	w28, wzr
  44220c:	mov	x24, xzr
  442210:	mov	w23, #0x1                   	// #1
  442214:	mov	w20, #0xffffffff            	// #-1
  442218:	ldr	w19, [sp, #324]
  44221c:	cbnz	w19, 4415bc <feof@plt+0x3e4dc>
  442220:	b	4415d0 <feof@plt+0x3e4f0>
  442224:	sub	sp, sp, #0x70
  442228:	stp	x29, x30, [sp, #64]
  44222c:	str	x21, [sp, #80]
  442230:	stp	x20, x19, [sp, #96]
  442234:	add	x29, sp, #0x40
  442238:	ldr	x20, [x0, #8]
  44223c:	mov	x21, x0
  442240:	mov	x19, x2
  442244:	cbz	x20, 44228c <feof@plt+0x3f1ac>
  442248:	ldrb	w8, [x20]
  44224c:	cbz	w8, 44228c <feof@plt+0x3f1ac>
  442250:	ldr	w0, [x19, #56]
  442254:	cmn	w0, #0x1
  442258:	b.eq	442270 <feof@plt+0x3f190>  // b.none
  44225c:	ldp	x1, x2, [x19, #8]
  442260:	bl	44070c <feof@plt+0x3d62c>
  442264:	mov	w8, #0xffffffff            	// #-1
  442268:	str	w8, [x19, #56]
  44226c:	ldr	x20, [x21, #8]
  442270:	ldp	x1, x2, [x19, #8]
  442274:	add	x3, x29, #0x1c
  442278:	mov	x0, x20
  44227c:	bl	440670 <feof@plt+0x3d590>
  442280:	mov	w2, w0
  442284:	tbz	w0, #31, 4422a4 <feof@plt+0x3f1c4>
  442288:	b	4422fc <feof@plt+0x3f21c>
  44228c:	ldr	w2, [x19, #56]
  442290:	cmn	w2, #0x1
  442294:	b.eq	4422fc <feof@plt+0x3f21c>  // b.none
  442298:	ldr	x20, [x19, #48]
  44229c:	mov	w8, #0xffffffff            	// #-1
  4422a0:	str	w8, [x19, #56]
  4422a4:	ldr	x3, [x21]
  4422a8:	ldp	x0, x4, [x19]
  4422ac:	ldr	x5, [x19, #16]
  4422b0:	ldr	x7, [x19, #32]
  4422b4:	add	x8, x29, #0x18
  4422b8:	sub	x6, x29, #0x8
  4422bc:	mov	x1, x20
  4422c0:	str	wzr, [sp, #40]
  4422c4:	str	xzr, [sp, #32]
  4422c8:	str	wzr, [sp, #24]
  4422cc:	str	wzr, [sp, #16]
  4422d0:	stp	x8, xzr, [sp]
  4422d4:	bl	440a90 <feof@plt+0x3d9b0>
  4422d8:	cbz	w0, 4422fc <feof@plt+0x3f21c>
  4422dc:	ldr	w8, [x29, #24]
  4422e0:	cbz	w8, 4422fc <feof@plt+0x3f21c>
  4422e4:	ldr	x8, [x19, #40]
  4422e8:	mov	w9, #0x1                   	// #1
  4422ec:	str	w9, [x8]
  4422f0:	ldur	x8, [x29, #-8]
  4422f4:	ldr	x9, [x19, #24]
  4422f8:	str	x8, [x9]
  4422fc:	ldp	x20, x19, [sp, #96]
  442300:	ldr	x21, [sp, #80]
  442304:	ldp	x29, x30, [sp, #64]
  442308:	mov	w0, wzr
  44230c:	add	sp, sp, #0x70
  442310:	ret
  442314:	ldr	w8, [x0, #8]
  442318:	mov	x5, x2
  44231c:	cbz	w8, 442390 <feof@plt+0x3f2b0>
  442320:	add	x8, x0, #0x30
  442324:	ldar	x9, [x8]
  442328:	cbz	x9, 44240c <feof@plt+0x3f32c>
  44232c:	mov	w10, #0x18                  	// #24
  442330:	b	44233c <feof@plt+0x3f25c>
  442334:	ldar	x9, [x9]
  442338:	cbz	x9, 44240c <feof@plt+0x3f32c>
  44233c:	ldr	x13, [x9, #16]
  442340:	cbz	x13, 442334 <feof@plt+0x3f254>
  442344:	ldr	x12, [x9, #8]
  442348:	mov	x8, xzr
  44234c:	b	44235c <feof@plt+0x3f27c>
  442350:	cmp	x8, x14
  442354:	mov	x13, x14
  442358:	b.cs	442334 <feof@plt+0x3f254>  // b.hs, b.nlast
  44235c:	add	x11, x13, x8
  442360:	lsr	x14, x11, #1
  442364:	madd	x11, x14, x10, x12
  442368:	ldr	x3, [x11, #8]
  44236c:	cmp	x3, x1
  442370:	b.hi	442350 <feof@plt+0x3f270>  // b.pmore
  442374:	ldr	x8, [x11, #16]
  442378:	add	x15, x8, x3
  44237c:	cmp	x15, x1
  442380:	b.hi	4423fc <feof@plt+0x3f31c>  // b.pmore
  442384:	add	x8, x14, #0x1
  442388:	mov	x14, x13
  44238c:	b	442350 <feof@plt+0x3f270>
  442390:	ldr	x9, [x0, #48]
  442394:	cbz	x9, 44240c <feof@plt+0x3f32c>
  442398:	mov	w10, #0x18                  	// #24
  44239c:	b	4423a8 <feof@plt+0x3f2c8>
  4423a0:	ldr	x9, [x9]
  4423a4:	cbz	x9, 44240c <feof@plt+0x3f32c>
  4423a8:	ldr	x13, [x9, #16]
  4423ac:	cbz	x13, 4423a0 <feof@plt+0x3f2c0>
  4423b0:	ldr	x12, [x9, #8]
  4423b4:	mov	x8, xzr
  4423b8:	b	4423c8 <feof@plt+0x3f2e8>
  4423bc:	cmp	x8, x14
  4423c0:	mov	x13, x14
  4423c4:	b.cs	4423a0 <feof@plt+0x3f2c0>  // b.hs, b.nlast
  4423c8:	add	x11, x13, x8
  4423cc:	lsr	x14, x11, #1
  4423d0:	madd	x11, x14, x10, x12
  4423d4:	ldr	x3, [x11, #8]
  4423d8:	cmp	x3, x1
  4423dc:	b.hi	4423bc <feof@plt+0x3f2dc>  // b.pmore
  4423e0:	ldr	x8, [x11, #16]
  4423e4:	add	x15, x8, x3
  4423e8:	cmp	x15, x1
  4423ec:	b.hi	4423fc <feof@plt+0x3f31c>  // b.pmore
  4423f0:	add	x8, x14, #0x1
  4423f4:	mov	x14, x13
  4423f8:	b	4423bc <feof@plt+0x3f2dc>
  4423fc:	ldr	x2, [x11]
  442400:	mov	x0, x4
  442404:	mov	x4, x8
  442408:	br	x5
  44240c:	mov	x0, x4
  442410:	mov	x2, xzr
  442414:	mov	x3, xzr
  442418:	mov	x4, xzr
  44241c:	br	x5
  442420:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  442424:	mov	x0, x4
  442428:	add	x1, x1, #0x53f
  44242c:	mov	w2, #0xffffffff            	// #-1
  442430:	br	x3
  442434:	sub	sp, sp, #0xd0
  442438:	stp	x29, x30, [sp, #112]
  44243c:	stp	x28, x27, [sp, #128]
  442440:	stp	x26, x25, [sp, #144]
  442444:	stp	x24, x23, [sp, #160]
  442448:	stp	x22, x21, [sp, #176]
  44244c:	stp	x20, x19, [sp, #192]
  442450:	add	x29, sp, #0x70
  442454:	mov	x19, x3
  442458:	add	x27, x0, x1
  44245c:	cmp	x1, #0x5
  442460:	add	x20, x3, x4
  442464:	mov	x23, x3
  442468:	b.lt	442dbc <feof@plt+0x3fcdc>  // b.tstop
  44246c:	mov	w8, #0x1278                	// #4728
  442470:	mov	w9, #0x1378                	// #4984
  442474:	add	x10, x2, #0x800
  442478:	str	x10, [sp, #32]
  44247c:	add	x10, x2, x8
  442480:	add	x8, x2, x9
  442484:	mov	x26, x2
  442488:	mov	x25, x0
  44248c:	str	x8, [sp, #8]
  442490:	mov	x23, x19
  442494:	stur	x27, [x29, #-48]
  442498:	str	x2, [sp, #40]
  44249c:	stur	x20, [x29, #-40]
  4424a0:	str	x4, [sp]
  4424a4:	str	x10, [sp, #48]
  4424a8:	ldrsb	w8, [x25]
  4424ac:	mov	w0, wzr
  4424b0:	tbnz	w8, #31, 442dc8 <feof@plt+0x3fce8>
  4424b4:	and	w9, w8, #0xf
  4424b8:	cmp	w9, #0x8
  4424bc:	b.ne	442dc8 <feof@plt+0x3fce8>  // b.any
  4424c0:	ldrb	w9, [x25, #1]
  4424c4:	tbnz	w9, #5, 442dc4 <feof@plt+0x3fce4>
  4424c8:	and	w8, w8, #0xff
  4424cc:	bfi	w9, w8, #8, #8
  4424d0:	mov	w8, #0x7bdf                	// #31711
  4424d4:	movk	w8, #0xbdef, lsl #16
  4424d8:	mul	w8, w9, w8
  4424dc:	mov	w9, #0x1084                	// #4228
  4424e0:	movk	w9, #0x842, lsl #16
  4424e4:	cmp	w8, w9
  4424e8:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  4424ec:	add	x25, x25, #0x2
  4424f0:	tst	x25, #0x3
  4424f4:	b.eq	44251c <feof@plt+0x3f43c>  // b.none
  4424f8:	mov	w24, wzr
  4424fc:	mov	x21, xzr
  442500:	ldrb	w8, [x25], #1
  442504:	lsl	x8, x8, x24
  442508:	tst	x25, #0x3
  44250c:	orr	x21, x8, x21
  442510:	add	w24, w24, #0x8
  442514:	b.ne	442500 <feof@plt+0x3f420>  // b.any
  442518:	b	442534 <feof@plt+0x3f454>
  44251c:	mov	w24, wzr
  442520:	mov	x21, xzr
  442524:	b	442534 <feof@plt+0x3f454>
  442528:	ldr	x26, [sp, #40]
  44252c:	ldr	x8, [sp, #56]
  442530:	tbnz	w8, #0, 442dac <feof@plt+0x3fccc>
  442534:	cmp	w24, #0xe
  442538:	b.hi	44255c <feof@plt+0x3f47c>  // b.pmore
  44253c:	sub	x8, x27, x25
  442540:	cmp	x8, #0x4
  442544:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442548:	ldr	w8, [x25], #4
  44254c:	lsl	x8, x8, x24
  442550:	add	w24, w24, #0x20
  442554:	orr	x21, x8, x21
  442558:	prfm	pldl1strm, [x25]
  44255c:	ubfx	w8, w21, #1, #2
  442560:	str	x21, [sp, #56]
  442564:	cbz	w8, 442680 <feof@plt+0x3f5a0>
  442568:	lsr	x21, x21, #3
  44256c:	cmp	w8, #0x1
  442570:	sub	w28, w24, #0x3
  442574:	b.eq	442714 <feof@plt+0x3f634>  // b.none
  442578:	cmp	w8, #0x3
  44257c:	b.eq	442dc4 <feof@plt+0x3fce4>  // b.none
  442580:	cmp	w28, #0xe
  442584:	b.hi	4425a8 <feof@plt+0x3f4c8>  // b.pmore
  442588:	sub	x8, x27, x25
  44258c:	cmp	x8, #0x4
  442590:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442594:	ldr	w8, [x25], #4
  442598:	lsl	x8, x8, x28
  44259c:	add	w28, w24, #0x1d
  4425a0:	orr	x21, x8, x21
  4425a4:	prfm	pldl1strm, [x25]
  4425a8:	and	w20, w21, #0x1f
  4425ac:	cmp	w20, #0x1d
  4425b0:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  4425b4:	ubfx	w22, w21, #5, #5
  4425b8:	cmp	w22, #0x1d
  4425bc:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  4425c0:	sub	w9, w28, #0xe
  4425c4:	lsr	x10, x21, #14
  4425c8:	cmp	w9, #0xe
  4425cc:	stp	xzr, xzr, [x29, #-24]
  4425d0:	stur	wzr, [x29, #-9]
  4425d4:	b.hi	4425f8 <feof@plt+0x3f518>  // b.pmore
  4425d8:	sub	x8, x27, x25
  4425dc:	cmp	x8, #0x4
  4425e0:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  4425e4:	ldr	w8, [x25], #4
  4425e8:	lsl	x8, x8, x9
  4425ec:	add	w9, w28, #0x12
  4425f0:	orr	x10, x8, x10
  4425f4:	prfm	pldl1strm, [x25]
  4425f8:	ubfx	w8, w21, #10, #4
  4425fc:	and	w11, w10, #0x7
  442600:	ubfx	w12, w10, #3, #3
  442604:	ubfx	w13, w10, #6, #3
  442608:	ubfx	w14, w10, #9, #3
  44260c:	sturb	w11, [x29, #-8]
  442610:	sturb	w12, [x29, #-7]
  442614:	sturb	w13, [x29, #-6]
  442618:	sturb	w14, [x29, #-24]
  44261c:	cbz	w8, 442734 <feof@plt+0x3f654>
  442620:	add	w8, w8, #0x4
  442624:	ubfx	w11, w10, #12, #3
  442628:	lsr	x21, x10, #15
  44262c:	cmp	w8, #0x5
  442630:	sub	w28, w9, #0xf
  442634:	sturb	w11, [x29, #-16]
  442638:	b.eq	44273c <feof@plt+0x3f65c>  // b.none
  44263c:	cmp	w28, #0xe
  442640:	b.hi	442664 <feof@plt+0x3f584>  // b.pmore
  442644:	sub	x10, x27, x25
  442648:	cmp	x10, #0x4
  44264c:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442650:	ldr	w10, [x25], #4
  442654:	lsl	x10, x10, x28
  442658:	add	w28, w9, #0x11
  44265c:	orr	x21, x10, x21
  442660:	prfm	pldl1strm, [x25]
  442664:	and	w9, w21, #0x7
  442668:	cmp	w8, #0x6
  44266c:	sturb	w9, [x29, #-17]
  442670:	b.ne	442c24 <feof@plt+0x3fb44>  // b.any
  442674:	lsr	x21, x21, #3
  442678:	sub	w28, w28, #0x3
  44267c:	b	44273c <feof@plt+0x3f65c>
  442680:	sub	w8, w24, #0xc
  442684:	lsr	w8, w8, #3
  442688:	mvn	x8, x8
  44268c:	add	x9, x8, x25
  442690:	sub	x8, x27, x9
  442694:	cmp	x8, #0x4
  442698:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  44269c:	ldrh	w8, [x9, #2]
  4426a0:	ldrh	w24, [x9]
  4426a4:	eor	w8, w8, #0xffff
  4426a8:	cmp	w8, w24
  4426ac:	b.ne	442dc4 <feof@plt+0x3fce4>  // b.any
  4426b0:	add	x25, x9, #0x4
  4426b4:	sub	w9, w27, w25
  4426b8:	cmp	w8, w9
  4426bc:	mov	w0, wzr
  4426c0:	b.hi	442dc8 <feof@plt+0x3fce8>  // b.pmore
  4426c4:	sub	w9, w20, w23
  4426c8:	cmp	w8, w9
  4426cc:	b.hi	442dc8 <feof@plt+0x3fce8>  // b.pmore
  4426d0:	mov	x0, x23
  4426d4:	mov	x1, x25
  4426d8:	mov	x2, x24
  4426dc:	bl	4029c0 <memcpy@plt>
  4426e0:	add	x25, x25, x24
  4426e4:	tst	x25, #0x3
  4426e8:	add	x23, x23, x24
  4426ec:	b.eq	442728 <feof@plt+0x3f648>  // b.none
  4426f0:	mov	w24, wzr
  4426f4:	mov	x21, xzr
  4426f8:	ldrb	w8, [x25], #1
  4426fc:	lsl	x8, x8, x24
  442700:	tst	x25, #0x3
  442704:	orr	x21, x8, x21
  442708:	add	w24, w24, #0x8
  44270c:	b.ne	4426f8 <feof@plt+0x3f618>  // b.any
  442710:	b	44252c <feof@plt+0x3f44c>
  442714:	adrp	x13, 471000 <_obstack_memory_used@@Base+0xf838>
  442718:	adrp	x26, 471000 <_obstack_memory_used@@Base+0xf838>
  44271c:	add	x13, x13, #0xd1c
  442720:	add	x26, x26, #0xa3c
  442724:	b	4427b8 <feof@plt+0x3f6d8>
  442728:	mov	x21, xzr
  44272c:	mov	w24, wzr
  442730:	b	44252c <feof@plt+0x3f44c>
  442734:	lsr	x21, x10, #12
  442738:	sub	w28, w9, #0xc
  44273c:	sub	x0, x29, #0x18
  442740:	mov	w1, #0x13                  	// #19
  442744:	mov	x2, x26
  442748:	mov	x3, x26
  44274c:	bl	44307c <feof@plt+0x3ff9c>
  442750:	cbz	w0, 442dc4 <feof@plt+0x3fce4>
  442754:	ldr	x24, [sp, #48]
  442758:	add	w9, w20, #0x101
  44275c:	add	w8, w22, #0x1
  442760:	stur	x9, [x29, #-32]
  442764:	add	x9, x24, x9
  442768:	add	x20, x9, x8
  44276c:	cmp	x20, x24
  442770:	stp	x9, x8, [sp, #16]
  442774:	b.hi	442ab0 <feof@plt+0x3f9d0>  // b.pmore
  442778:	ldr	x8, [sp, #8]
  44277c:	ldrb	w8, [x8]
  442780:	cbz	w8, 442dc4 <feof@plt+0x3fce4>
  442784:	ldr	x0, [sp, #48]
  442788:	ldur	x1, [x29, #-32]
  44278c:	mov	x2, x26
  442790:	mov	x3, x26
  442794:	bl	44307c <feof@plt+0x3ff9c>
  442798:	cbz	w0, 442dc4 <feof@plt+0x3fce4>
  44279c:	ldp	x0, x1, [sp, #16]
  4427a0:	ldr	x3, [sp, #32]
  4427a4:	mov	x2, x26
  4427a8:	bl	44307c <feof@plt+0x3ff9c>
  4427ac:	cbz	w0, 442dc4 <feof@plt+0x3fce4>
  4427b0:	ldr	x13, [sp, #32]
  4427b4:	ldur	x20, [x29, #-40]
  4427b8:	mov	w24, w28
  4427bc:	stur	x13, [x29, #-32]
  4427c0:	b	4427e8 <feof@plt+0x3f708>
  4427c4:	mov	w22, w28
  4427c8:	add	x1, x23, x19
  4427cc:	mov	x0, x23
  4427d0:	mov	x2, x22
  4427d4:	bl	4029c0 <memcpy@plt>
  4427d8:	add	x23, x23, x22
  4427dc:	mov	x19, x20
  4427e0:	ldp	x27, x20, [x29, #-48]
  4427e4:	ldur	x13, [x29, #-32]
  4427e8:	cmp	w24, #0xe
  4427ec:	b.hi	442810 <feof@plt+0x3f730>  // b.pmore
  4427f0:	sub	x8, x27, x25
  4427f4:	cmp	x8, #0x4
  4427f8:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  4427fc:	ldr	w8, [x25], #4
  442800:	lsl	x8, x8, x24
  442804:	add	w24, w24, #0x20
  442808:	orr	x21, x8, x21
  44280c:	prfm	pldl1strm, [x25]
  442810:	and	x8, x21, #0xff
  442814:	ldrh	w10, [x26, x8, lsl #1]
  442818:	ubfx	w9, w10, #9, #3
  44281c:	and	x8, x10, #0x1ff
  442820:	tbnz	w10, #12, 44282c <feof@plt+0x3f74c>
  442824:	add	w9, w9, #0x1
  442828:	b	442854 <feof@plt+0x3f774>
  44282c:	mov	w10, #0xffffffff            	// #-1
  442830:	lsl	w9, w10, w9
  442834:	mvn	w9, w9
  442838:	and	x9, x9, x21, lsr #8
  44283c:	add	x8, x8, x9
  442840:	add	x8, x26, x8, lsl #1
  442844:	ldrh	w10, [x8, #512]
  442848:	mov	w9, #0x8                   	// #8
  44284c:	and	w8, w10, #0x1ff
  442850:	bfxil	w9, w10, #9, #3
  442854:	sub	w24, w24, w9
  442858:	cmp	w8, #0xff
  44285c:	lsr	x21, x21, x9
  442860:	b.hi	442878 <feof@plt+0x3f798>  // b.pmore
  442864:	cmp	x23, x20
  442868:	b.eq	442dc4 <feof@plt+0x3fce4>  // b.none
  44286c:	strb	w8, [x23], #1
  442870:	prfm	pstl1keep, [x23]
  442874:	b	4427e8 <feof@plt+0x3f708>
  442878:	cmp	w8, #0x100
  44287c:	b.eq	442528 <feof@plt+0x3f448>  // b.none
  442880:	cmp	w8, #0x108
  442884:	b.hi	442898 <feof@plt+0x3f7b8>  // b.pmore
  442888:	sub	w28, w8, #0xfe
  44288c:	cmp	w24, #0xe
  442890:	b.ls	442928 <feof@plt+0x3f848>  // b.plast
  442894:	b	442948 <feof@plt+0x3f868>
  442898:	cmp	w8, #0x11d
  44289c:	b.ne	4428b0 <feof@plt+0x3f7d0>  // b.any
  4428a0:	mov	w28, #0x102                 	// #258
  4428a4:	cmp	w24, #0xe
  4428a8:	b.ls	442928 <feof@plt+0x3f848>  // b.plast
  4428ac:	b	442948 <feof@plt+0x3f868>
  4428b0:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  4428b4:	cmp	w24, #0xe
  4428b8:	b.hi	4428dc <feof@plt+0x3f7fc>  // b.pmore
  4428bc:	sub	x9, x27, x25
  4428c0:	cmp	x9, #0x4
  4428c4:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  4428c8:	ldr	w9, [x25], #4
  4428cc:	lsl	x9, x9, x24
  4428d0:	add	w24, w24, #0x20
  4428d4:	orr	x21, x9, x21
  4428d8:	prfm	pldl1strm, [x25]
  4428dc:	sub	w8, w8, #0x109
  4428e0:	lsr	w9, w8, #2
  4428e4:	mov	w11, #0xfffffff8            	// #-8
  4428e8:	mov	w12, #0x2                   	// #2
  4428ec:	and	w8, w8, #0x3
  4428f0:	add	w10, w9, #0x1
  4428f4:	lsl	w11, w11, w9
  4428f8:	lsl	w9, w12, w9
  4428fc:	lsl	w8, w8, w10
  442900:	eor	w11, w11, #0xfffffff8
  442904:	sub	w9, w9, #0x1
  442908:	add	w8, w8, w11
  44290c:	and	w9, w9, w21
  442910:	add	w8, w8, w9
  442914:	lsr	x21, x21, x10
  442918:	add	w28, w8, #0xb
  44291c:	sub	w24, w24, w10
  442920:	cmp	w24, #0xe
  442924:	b.hi	442948 <feof@plt+0x3f868>  // b.pmore
  442928:	sub	x8, x27, x25
  44292c:	cmp	x8, #0x4
  442930:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442934:	ldr	w8, [x25], #4
  442938:	lsl	x8, x8, x24
  44293c:	add	w24, w24, #0x20
  442940:	orr	x21, x8, x21
  442944:	prfm	pldl1strm, [x25]
  442948:	and	x8, x21, #0xff
  44294c:	ldrh	w10, [x13, x8, lsl #1]
  442950:	ubfx	w9, w10, #9, #3
  442954:	and	x8, x10, #0x1ff
  442958:	tbnz	w10, #12, 442964 <feof@plt+0x3f884>
  44295c:	add	w9, w9, #0x1
  442960:	b	44298c <feof@plt+0x3f8ac>
  442964:	mov	w10, #0xffffffff            	// #-1
  442968:	lsl	w9, w10, w9
  44296c:	mvn	w9, w9
  442970:	and	x9, x9, x21, lsr #8
  442974:	add	x8, x8, x9
  442978:	add	x8, x13, x8, lsl #1
  44297c:	ldrh	w10, [x8, #512]
  442980:	mov	w9, #0x8                   	// #8
  442984:	and	w8, w10, #0x1ff
  442988:	bfxil	w9, w10, #9, #3
  44298c:	sub	w24, w24, w9
  442990:	lsr	x21, x21, x9
  442994:	cbz	w8, 4429b0 <feof@plt+0x3f8d0>
  442998:	cmp	w8, #0x1d
  44299c:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  4429a0:	cmp	w8, #0x3
  4429a4:	b.hi	4429e4 <feof@plt+0x3f904>  // b.pmore
  4429a8:	add	w27, w8, #0x1
  4429ac:	b	442a50 <feof@plt+0x3f970>
  4429b0:	cmp	x23, x19
  4429b4:	b.eq	442dc4 <feof@plt+0x3fce4>  // b.none
  4429b8:	sub	w8, w20, w23
  4429bc:	cmp	w28, w8
  4429c0:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  4429c4:	ldurb	w1, [x23, #-1]
  4429c8:	mov	w22, w28
  4429cc:	mov	x0, x23
  4429d0:	mov	x2, x22
  4429d4:	bl	402b40 <memset@plt>
  4429d8:	ldur	x13, [x29, #-32]
  4429dc:	add	x23, x23, x22
  4429e0:	b	4427e8 <feof@plt+0x3f708>
  4429e4:	cmp	w24, #0xe
  4429e8:	b.hi	442a0c <feof@plt+0x3f92c>  // b.pmore
  4429ec:	sub	x9, x27, x25
  4429f0:	cmp	x9, #0x4
  4429f4:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  4429f8:	ldr	w9, [x25], #4
  4429fc:	lsl	x9, x9, x24
  442a00:	add	w24, w24, #0x20
  442a04:	orr	x21, x9, x21
  442a08:	prfm	pldl1strm, [x25]
  442a0c:	sub	w8, w8, #0x4
  442a10:	lsr	w9, w8, #1
  442a14:	mov	w11, #0xfffffffc            	// #-4
  442a18:	mov	w12, #0x2                   	// #2
  442a1c:	and	w8, w8, #0x1
  442a20:	add	w10, w9, #0x1
  442a24:	lsl	w11, w11, w9
  442a28:	lsl	w9, w12, w9
  442a2c:	lsl	w8, w8, w10
  442a30:	eor	w11, w11, #0xfffffffc
  442a34:	sub	w9, w9, #0x1
  442a38:	add	w8, w8, w11
  442a3c:	and	w9, w9, w21
  442a40:	add	w8, w8, w9
  442a44:	lsr	x21, x21, x10
  442a48:	add	w27, w8, #0x5
  442a4c:	sub	w24, w24, w10
  442a50:	sub	w8, w23, w19
  442a54:	cmp	w27, w8
  442a58:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  442a5c:	sub	w8, w20, w23
  442a60:	cmp	w28, w8
  442a64:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  442a68:	mov	x8, xzr
  442a6c:	mov	x20, x19
  442a70:	cmp	w27, w28
  442a74:	sub	x19, x8, w27, uxtw
  442a78:	b.cs	4427c4 <feof@plt+0x3f6e4>  // b.hs, b.nlast
  442a7c:	cmp	w28, w27
  442a80:	csel	w22, w28, w27, cc  // cc = lo, ul, last
  442a84:	add	x1, x23, x19
  442a88:	mov	x0, x23
  442a8c:	mov	x2, x22
  442a90:	bl	4029c0 <memcpy@plt>
  442a94:	subs	w28, w28, w22
  442a98:	add	x23, x23, x22
  442a9c:	b.ne	442a7c <feof@plt+0x3f99c>  // b.any
  442aa0:	b	4427dc <feof@plt+0x3f6fc>
  442aa4:	strb	w8, [x24], #1
  442aa8:	cmp	x24, x20
  442aac:	b.cs	442778 <feof@plt+0x3f698>  // b.hs, b.nlast
  442ab0:	cmp	w28, #0xe
  442ab4:	b.hi	442ad8 <feof@plt+0x3f9f8>  // b.pmore
  442ab8:	sub	x8, x27, x25
  442abc:	cmp	x8, #0x4
  442ac0:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442ac4:	ldr	w8, [x25], #4
  442ac8:	lsl	x8, x8, x28
  442acc:	add	w28, w28, #0x20
  442ad0:	orr	x21, x8, x21
  442ad4:	prfm	pldl1strm, [x25]
  442ad8:	and	x8, x21, #0xff
  442adc:	ldrh	w8, [x26, x8, lsl #1]
  442ae0:	tbnz	w8, #12, 442dc4 <feof@plt+0x3fce4>
  442ae4:	ubfx	x9, x8, #9, #3
  442ae8:	add	x9, x9, #0x1
  442aec:	tst	w8, #0x1f0
  442af0:	lsr	x21, x21, x9
  442af4:	sub	w28, w28, w9
  442af8:	b.eq	442aa4 <feof@plt+0x3f9c4>  // b.none
  442afc:	and	w8, w8, #0x1ff
  442b00:	cmp	w8, #0x12
  442b04:	b.eq	442b80 <feof@plt+0x3faa0>  // b.none
  442b08:	cmp	w8, #0x11
  442b0c:	b.eq	442bb4 <feof@plt+0x3fad4>  // b.none
  442b10:	cmp	w8, #0x10
  442b14:	b.ne	442dc4 <feof@plt+0x3fce4>  // b.any
  442b18:	ldr	x8, [sp, #48]
  442b1c:	cmp	x24, x8
  442b20:	b.eq	442dc4 <feof@plt+0x3fce4>  // b.none
  442b24:	and	w9, w21, #0x3
  442b28:	add	w8, w9, #0x3
  442b2c:	sub	w10, w20, w24
  442b30:	cmp	w8, w10
  442b34:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  442b38:	ldurb	w8, [x24, #-1]
  442b3c:	lsr	x21, x21, #2
  442b40:	cmp	w9, #0x1
  442b44:	sub	w28, w28, #0x2
  442b48:	b.eq	442b64 <feof@plt+0x3fa84>  // b.none
  442b4c:	cmp	w9, #0x2
  442b50:	b.eq	442b60 <feof@plt+0x3fa80>  // b.none
  442b54:	cmp	w9, #0x3
  442b58:	b.ne	442b68 <feof@plt+0x3fa88>  // b.any
  442b5c:	strb	w8, [x24], #1
  442b60:	strb	w8, [x24], #1
  442b64:	strb	w8, [x24], #1
  442b68:	add	x9, x24, #0x3
  442b6c:	strb	w8, [x24]
  442b70:	strb	w8, [x24, #1]
  442b74:	strb	w8, [x24, #2]
  442b78:	mov	x24, x9
  442b7c:	b	442aa8 <feof@plt+0x3f9c8>
  442b80:	and	w8, w21, #0x7f
  442b84:	add	w22, w8, #0xb
  442b88:	sub	w8, w20, w24
  442b8c:	cmp	w22, w8
  442b90:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  442b94:	mov	x0, x24
  442b98:	mov	w1, wzr
  442b9c:	mov	x2, x22
  442ba0:	sub	w28, w28, #0x7
  442ba4:	lsr	x21, x21, #7
  442ba8:	bl	402b40 <memset@plt>
  442bac:	add	x24, x24, x22
  442bb0:	b	442aa8 <feof@plt+0x3f9c8>
  442bb4:	and	w8, w21, #0x7
  442bb8:	add	w9, w8, #0x3
  442bbc:	sub	w10, w20, w24
  442bc0:	cmp	w9, w10
  442bc4:	b.hi	442dc4 <feof@plt+0x3fce4>  // b.pmore
  442bc8:	sub	w8, w8, #0x1
  442bcc:	lsr	x21, x21, #3
  442bd0:	cmp	w8, #0x6
  442bd4:	sub	w28, w28, #0x3
  442bd8:	b.hi	442c10 <feof@plt+0x3fb30>  // b.pmore
  442bdc:	adrp	x11, 471000 <_obstack_memory_used@@Base+0xf838>
  442be0:	add	x11, x11, #0xa34
  442be4:	adr	x9, 442bf4 <feof@plt+0x3fb14>
  442be8:	ldrb	w10, [x11, x8]
  442bec:	add	x9, x9, x10, lsl #2
  442bf0:	br	x9
  442bf4:	strb	wzr, [x24], #1
  442bf8:	strb	wzr, [x24], #1
  442bfc:	strb	wzr, [x24], #1
  442c00:	strb	wzr, [x24], #1
  442c04:	strb	wzr, [x24], #1
  442c08:	strb	wzr, [x24], #1
  442c0c:	strb	wzr, [x24], #1
  442c10:	add	x8, x24, #0x3
  442c14:	strh	wzr, [x24]
  442c18:	strb	wzr, [x24, #2]
  442c1c:	mov	x24, x8
  442c20:	b	442aa8 <feof@plt+0x3f9c8>
  442c24:	ubfx	w9, w21, #3, #3
  442c28:	cmp	w8, #0x7
  442c2c:	sturb	w9, [x29, #-15]
  442c30:	b.ne	442c40 <feof@plt+0x3fb60>  // b.any
  442c34:	lsr	x21, x21, #6
  442c38:	sub	w28, w28, #0x6
  442c3c:	b	44273c <feof@plt+0x3f65c>
  442c40:	ubfx	w9, w21, #6, #3
  442c44:	cmp	w8, #0x8
  442c48:	sturb	w9, [x29, #-18]
  442c4c:	b.ne	442c5c <feof@plt+0x3fb7c>  // b.any
  442c50:	lsr	x21, x21, #9
  442c54:	sub	w28, w28, #0x9
  442c58:	b	44273c <feof@plt+0x3f65c>
  442c5c:	ubfx	w9, w21, #9, #3
  442c60:	cmp	w8, #0x9
  442c64:	sturb	w9, [x29, #-14]
  442c68:	b.ne	442c78 <feof@plt+0x3fb98>  // b.any
  442c6c:	lsr	x21, x21, #12
  442c70:	sub	w28, w28, #0xc
  442c74:	b	44273c <feof@plt+0x3f65c>
  442c78:	ubfx	w9, w21, #12, #3
  442c7c:	lsr	x21, x21, #15
  442c80:	cmp	w8, #0xa
  442c84:	sturb	w9, [x29, #-19]
  442c88:	sub	w9, w28, #0xf
  442c8c:	b.ne	442c98 <feof@plt+0x3fbb8>  // b.any
  442c90:	mov	w28, w9
  442c94:	b	44273c <feof@plt+0x3f65c>
  442c98:	cmp	w9, #0xe
  442c9c:	b.hi	442cc0 <feof@plt+0x3fbe0>  // b.pmore
  442ca0:	sub	x10, x27, x25
  442ca4:	cmp	x10, #0x4
  442ca8:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442cac:	ldr	w10, [x25], #4
  442cb0:	lsl	x10, x10, x9
  442cb4:	add	w9, w28, #0x11
  442cb8:	orr	x21, x10, x21
  442cbc:	prfm	pldl1strm, [x25]
  442cc0:	and	w10, w21, #0x7
  442cc4:	cmp	w8, #0xb
  442cc8:	sturb	w10, [x29, #-13]
  442ccc:	b.ne	442cdc <feof@plt+0x3fbfc>  // b.any
  442cd0:	lsr	x21, x21, #3
  442cd4:	sub	w28, w9, #0x3
  442cd8:	b	44273c <feof@plt+0x3f65c>
  442cdc:	ubfx	w10, w21, #3, #3
  442ce0:	cmp	w8, #0xc
  442ce4:	sturb	w10, [x29, #-20]
  442ce8:	b.ne	442cf8 <feof@plt+0x3fc18>  // b.any
  442cec:	lsr	x21, x21, #6
  442cf0:	sub	w28, w9, #0x6
  442cf4:	b	44273c <feof@plt+0x3f65c>
  442cf8:	ubfx	w10, w21, #6, #3
  442cfc:	cmp	w8, #0xd
  442d00:	sturb	w10, [x29, #-12]
  442d04:	b.ne	442d14 <feof@plt+0x3fc34>  // b.any
  442d08:	lsr	x21, x21, #9
  442d0c:	sub	w28, w9, #0x9
  442d10:	b	44273c <feof@plt+0x3f65c>
  442d14:	ubfx	w10, w21, #9, #3
  442d18:	cmp	w8, #0xe
  442d1c:	sturb	w10, [x29, #-21]
  442d20:	b.ne	442d2c <feof@plt+0x3fc4c>  // b.any
  442d24:	lsr	x21, x21, #12
  442d28:	b	442738 <feof@plt+0x3f658>
  442d2c:	ubfx	w10, w21, #12, #3
  442d30:	lsr	x21, x21, #15
  442d34:	cmp	w8, #0xf
  442d38:	sub	w28, w9, #0xf
  442d3c:	sturb	w10, [x29, #-11]
  442d40:	b.eq	44273c <feof@plt+0x3f65c>  // b.none
  442d44:	cmp	w28, #0xe
  442d48:	b.hi	442d6c <feof@plt+0x3fc8c>  // b.pmore
  442d4c:	sub	x10, x27, x25
  442d50:	cmp	x10, #0x4
  442d54:	b.lt	442dc4 <feof@plt+0x3fce4>  // b.tstop
  442d58:	ldr	w10, [x25], #4
  442d5c:	lsl	x10, x10, x28
  442d60:	add	w28, w9, #0x11
  442d64:	orr	x21, x10, x21
  442d68:	prfm	pldl1strm, [x25]
  442d6c:	and	w9, w21, #0x7
  442d70:	cmp	w8, #0x10
  442d74:	sturb	w9, [x29, #-22]
  442d78:	b.eq	442674 <feof@plt+0x3f594>  // b.none
  442d7c:	ubfx	w9, w21, #3, #3
  442d80:	cmp	w8, #0x11
  442d84:	sturb	w9, [x29, #-10]
  442d88:	b.eq	442c34 <feof@plt+0x3fb54>  // b.none
  442d8c:	ubfx	w9, w21, #6, #3
  442d90:	cmp	w8, #0x12
  442d94:	sturb	w9, [x29, #-23]
  442d98:	b.eq	442c50 <feof@plt+0x3fb70>  // b.none
  442d9c:	ubfx	w8, w21, #9, #3
  442da0:	lsr	x21, x21, #12
  442da4:	sturb	w8, [x29, #-9]
  442da8:	b	442c70 <feof@plt+0x3fb90>
  442dac:	ldr	x4, [sp]
  442db0:	sub	x8, x27, x25
  442db4:	cmp	x8, #0x5
  442db8:	b.ge	4424a8 <feof@plt+0x3f3c8>  // b.tcont
  442dbc:	cmp	x23, x20
  442dc0:	b.eq	442de8 <feof@plt+0x3fd08>  // b.none
  442dc4:	mov	w0, wzr
  442dc8:	ldp	x20, x19, [sp, #192]
  442dcc:	ldp	x22, x21, [sp, #176]
  442dd0:	ldp	x24, x23, [sp, #160]
  442dd4:	ldp	x26, x25, [sp, #144]
  442dd8:	ldp	x28, x27, [sp, #128]
  442ddc:	ldp	x29, x30, [sp, #112]
  442de0:	add	sp, sp, #0xd0
  442de4:	ret
  442de8:	ldur	w8, [x27, #-4]
  442dec:	lsr	x9, x4, #4
  442df0:	cmp	x9, #0x15b
  442df4:	b.cc	443014 <feof@plt+0x3ff34>  // b.lo, b.ul, b.last
  442df8:	mov	w13, #0x8071                	// #32881
  442dfc:	mov	w9, wzr
  442e00:	mov	w10, #0x1                   	// #1
  442e04:	mov	w11, #0x15b0                	// #5552
  442e08:	mov	x12, #0xffffffffffffea50    	// #-5552
  442e0c:	movk	w13, #0x8007, lsl #16
  442e10:	mov	w14, #0xfff1                	// #65521
  442e14:	mov	x15, xzr
  442e18:	add	x16, x19, x15
  442e1c:	ldrb	w17, [x16]
  442e20:	ldrb	w18, [x16, #1]
  442e24:	add	x15, x15, #0x10
  442e28:	add	w10, w10, w17
  442e2c:	ldrb	w17, [x16, #2]
  442e30:	add	w9, w10, w9
  442e34:	add	w10, w10, w18
  442e38:	ldrb	w18, [x16, #3]
  442e3c:	add	w9, w9, w10
  442e40:	add	w10, w10, w17
  442e44:	ldrb	w17, [x16, #4]
  442e48:	add	w9, w9, w10
  442e4c:	add	w10, w10, w18
  442e50:	ldrb	w18, [x16, #5]
  442e54:	add	w9, w9, w10
  442e58:	add	w10, w10, w17
  442e5c:	ldrb	w17, [x16, #6]
  442e60:	add	w9, w9, w10
  442e64:	add	w10, w10, w18
  442e68:	ldrb	w18, [x16, #7]
  442e6c:	add	w9, w9, w10
  442e70:	add	w10, w10, w17
  442e74:	ldrb	w17, [x16, #8]
  442e78:	add	w9, w9, w10
  442e7c:	add	w10, w10, w18
  442e80:	ldrb	w18, [x16, #9]
  442e84:	add	w9, w9, w10
  442e88:	add	w10, w10, w17
  442e8c:	ldrb	w17, [x16, #10]
  442e90:	add	w9, w9, w10
  442e94:	add	w10, w10, w18
  442e98:	ldrb	w18, [x16, #11]
  442e9c:	add	w9, w9, w10
  442ea0:	add	w10, w10, w17
  442ea4:	ldrb	w17, [x16, #12]
  442ea8:	add	w9, w9, w10
  442eac:	add	w10, w10, w18
  442eb0:	ldrb	w18, [x16, #13]
  442eb4:	add	w9, w9, w10
  442eb8:	add	w10, w10, w17
  442ebc:	ldrb	w17, [x16, #14]
  442ec0:	ldrb	w16, [x16, #15]
  442ec4:	add	w9, w9, w10
  442ec8:	add	w10, w10, w18
  442ecc:	add	w9, w9, w10
  442ed0:	add	w10, w10, w17
  442ed4:	sub	w17, w15, #0x10
  442ed8:	lsr	w17, w17, #5
  442edc:	add	w9, w9, w10
  442ee0:	add	w10, w10, w16
  442ee4:	cmp	w17, #0xad
  442ee8:	add	w9, w9, w10
  442eec:	b.cc	442e18 <feof@plt+0x3fd38>  // b.lo, b.ul, b.last
  442ef0:	add	x4, x4, x12
  442ef4:	umull	x15, w10, w13
  442ef8:	umull	x16, w9, w13
  442efc:	lsr	x15, x15, #47
  442f00:	lsr	x16, x16, #47
  442f04:	lsr	x17, x4, #4
  442f08:	add	x19, x19, x11
  442f0c:	msub	w10, w15, w14, w10
  442f10:	cmp	x17, #0x15a
  442f14:	msub	w9, w16, w14, w9
  442f18:	b.hi	442e14 <feof@plt+0x3fd34>  // b.pmore
  442f1c:	subs	x11, x4, #0x10
  442f20:	b.cc	443024 <feof@plt+0x3ff44>  // b.lo, b.ul, b.last
  442f24:	and	x12, x11, #0xfffffffffffffff0
  442f28:	add	x13, x12, #0x10
  442f2c:	mov	x14, x19
  442f30:	ldrb	w15, [x14]
  442f34:	ldrb	w16, [x14, #1]
  442f38:	sub	x4, x4, #0x10
  442f3c:	cmp	x4, #0xf
  442f40:	add	w10, w10, w15
  442f44:	ldrb	w15, [x14, #2]
  442f48:	add	w9, w10, w9
  442f4c:	add	w10, w10, w16
  442f50:	ldrb	w16, [x14, #3]
  442f54:	add	w9, w9, w10
  442f58:	add	w10, w10, w15
  442f5c:	ldrb	w15, [x14, #4]
  442f60:	add	w9, w9, w10
  442f64:	add	w10, w10, w16
  442f68:	ldrb	w16, [x14, #5]
  442f6c:	add	w9, w9, w10
  442f70:	add	w10, w10, w15
  442f74:	ldrb	w15, [x14, #6]
  442f78:	add	w9, w9, w10
  442f7c:	add	w10, w10, w16
  442f80:	ldrb	w16, [x14, #7]
  442f84:	add	w9, w9, w10
  442f88:	add	w10, w10, w15
  442f8c:	ldrb	w15, [x14, #8]
  442f90:	add	w9, w9, w10
  442f94:	add	w10, w10, w16
  442f98:	ldrb	w16, [x14, #9]
  442f9c:	add	w9, w9, w10
  442fa0:	add	w10, w10, w15
  442fa4:	ldrb	w15, [x14, #10]
  442fa8:	add	w9, w9, w10
  442fac:	add	w10, w10, w16
  442fb0:	ldrb	w16, [x14, #11]
  442fb4:	add	w9, w9, w10
  442fb8:	add	w10, w10, w15
  442fbc:	ldrb	w15, [x14, #12]
  442fc0:	add	w9, w9, w10
  442fc4:	add	w10, w10, w16
  442fc8:	ldrb	w16, [x14, #13]
  442fcc:	add	w9, w9, w10
  442fd0:	add	w10, w10, w15
  442fd4:	ldrb	w15, [x14, #14]
  442fd8:	add	w9, w9, w10
  442fdc:	add	w10, w10, w16
  442fe0:	add	w9, w9, w10
  442fe4:	add	w10, w10, w15
  442fe8:	ldrb	w15, [x14, #15]
  442fec:	add	w9, w9, w10
  442ff0:	add	x14, x14, #0x10
  442ff4:	add	w10, w10, w15
  442ff8:	add	w9, w9, w10
  442ffc:	b.hi	442f30 <feof@plt+0x3fe50>  // b.pmore
  443000:	add	x19, x19, x13
  443004:	sub	x4, x11, x12
  443008:	rev	w8, w8
  44300c:	cbnz	x4, 44302c <feof@plt+0x3ff4c>
  443010:	b	443048 <feof@plt+0x3ff68>
  443014:	mov	w9, wzr
  443018:	mov	w10, #0x1                   	// #1
  44301c:	subs	x11, x4, #0x10
  443020:	b.cs	442f24 <feof@plt+0x3fe44>  // b.hs, b.nlast
  443024:	rev	w8, w8
  443028:	cbz	x4, 443048 <feof@plt+0x3ff68>
  44302c:	mov	x11, xzr
  443030:	ldrb	w12, [x19, x11]
  443034:	add	x11, x11, #0x1
  443038:	cmp	x4, w11, uxtw
  44303c:	add	w10, w10, w12
  443040:	add	w9, w10, w9
  443044:	b.hi	443030 <feof@plt+0x3ff50>  // b.pmore
  443048:	mov	w11, #0x8071                	// #32881
  44304c:	movk	w11, #0x8007, lsl #16
  443050:	umull	x13, w10, w11
  443054:	umull	x11, w9, w11
  443058:	mov	w12, #0xfff1                	// #65521
  44305c:	lsr	x13, x13, #47
  443060:	lsr	x11, x11, #47
  443064:	msub	w10, w13, w12, w10
  443068:	msub	w9, w11, w12, w9
  44306c:	orr	w9, w10, w9, lsl #16
  443070:	cmp	w9, w8
  443074:	cset	w0, eq  // eq = none
  443078:	b	442dc8 <feof@plt+0x3fce8>
  44307c:	sub	sp, sp, #0xc0
  443080:	stp	x29, x30, [sp, #112]
  443084:	str	x25, [sp, #128]
  443088:	stp	x24, x23, [sp, #144]
  44308c:	stp	x22, x21, [sp, #160]
  443090:	stp	x20, x19, [sp, #176]
  443094:	add	x29, sp, #0x70
  443098:	mov	x19, x3
  44309c:	add	x20, x2, #0x1, lsl #12
  4430a0:	movi	v0.2d, #0x0
  4430a4:	stp	q0, q0, [x29, #-32]
  4430a8:	cbz	x1, 44310c <feof@plt+0x4002c>
  4430ac:	mov	x8, xzr
  4430b0:	sub	x9, x29, #0x20
  4430b4:	add	x10, sp, #0x30
  4430b8:	add	x11, sp, #0x10
  4430bc:	b	4430ec <feof@plt+0x4000c>
  4430c0:	ldrh	w12, [x11, x12, lsl #1]
  4430c4:	strh	w8, [x20, x12, lsl #1]
  4430c8:	ldrb	w12, [x0, x8]
  4430cc:	lsl	x14, x12, #1
  4430d0:	ldrh	w13, [x9, x14]
  4430d4:	strh	w8, [x11, x14]
  4430d8:	add	x8, x8, #0x1
  4430dc:	add	w13, w13, #0x1
  4430e0:	cmp	x1, x8
  4430e4:	strh	w13, [x9, x12, lsl #1]
  4430e8:	b.eq	44310c <feof@plt+0x4002c>  // b.none
  4430ec:	ldrb	w12, [x0, x8]
  4430f0:	cmp	x12, #0xf
  4430f4:	b.hi	4433c4 <feof@plt+0x402e4>  // b.pmore
  4430f8:	ldrh	w13, [x9, x12, lsl #1]
  4430fc:	cbnz	w13, 4430c0 <feof@plt+0x3ffe0>
  443100:	lsl	x14, x12, #1
  443104:	strh	w8, [x10, x14]
  443108:	b	4430d4 <feof@plt+0x3fff4>
  44310c:	mov	w2, #0x800                 	// #2048
  443110:	mov	x0, x19
  443114:	mov	w1, wzr
  443118:	bl	402b40 <memset@plt>
  44311c:	mov	w8, wzr
  443120:	mov	w9, #0x1                   	// #1
  443124:	sub	x10, x29, #0x20
  443128:	add	x11, sp, #0x30
  44312c:	mov	w12, #0x1                   	// #1
  443130:	b	443140 <feof@plt+0x40060>
  443134:	add	x12, x12, #0x1
  443138:	cmp	x12, #0x9
  44313c:	b.eq	4431e4 <feof@plt+0x40104>  // b.none
  443140:	ldrh	w13, [x10, x12, lsl #1]
  443144:	cbz	w13, 443134 <feof@plt+0x40054>
  443148:	lsl	w17, w9, w12
  44314c:	cmp	w17, w13
  443150:	b.cc	4433c4 <feof@plt+0x402e4>  // b.lo, b.ul, b.last
  443154:	ldrh	w15, [x11, x12, lsl #1]
  443158:	sub	x18, x12, #0x1
  44315c:	mov	x14, xzr
  443160:	lsl	x16, x18, #9
  443164:	sxtw	x17, w17
  443168:	lsl	w18, w9, w18
  44316c:	cmp	w15, #0x1ff
  443170:	b.hi	4433c4 <feof@plt+0x402e4>  // b.pmore
  443174:	cmp	w8, #0xff
  443178:	b.hi	44319c <feof@plt+0x400bc>  // b.pmore
  44317c:	orr	w0, w16, w15
  443180:	mov	w1, w8
  443184:	ldrh	w2, [x19, x1, lsl #1]
  443188:	cbnz	w2, 4433c4 <feof@plt+0x402e4>
  44318c:	strh	w0, [x19, x1, lsl #1]
  443190:	add	x1, x1, x17
  443194:	cmp	x1, #0x100
  443198:	b.cc	443184 <feof@plt+0x400a4>  // b.lo, b.ul, b.last
  44319c:	add	x14, x14, #0x1
  4431a0:	cmp	x14, x13
  4431a4:	b.cs	4431b0 <feof@plt+0x400d0>  // b.hs, b.nlast
  4431a8:	mov	w15, w15
  4431ac:	ldrh	w15, [x20, x15, lsl #1]
  4431b0:	mov	w1, w18
  4431b4:	mov	w0, w1
  4431b8:	tst	w1, w8
  4431bc:	lsr	w1, w1, #1
  4431c0:	b.ne	4431b4 <feof@plt+0x400d4>  // b.any
  4431c4:	sub	w1, w0, #0x1
  4431c8:	and	w8, w1, w8
  4431cc:	cmp	w0, #0x0
  4431d0:	add	w8, w8, w0
  4431d4:	csel	w8, wzr, w8, eq  // eq = none
  4431d8:	cmp	x14, x13
  4431dc:	b.ne	44316c <feof@plt+0x4008c>  // b.any
  4431e0:	b	443134 <feof@plt+0x40054>
  4431e4:	mov	w9, #0x9                   	// #9
  4431e8:	sub	x10, x29, #0x20
  4431ec:	mov	x11, sp
  4431f0:	mov	w12, #0x1                   	// #1
  4431f4:	b	443208 <feof@plt+0x40128>
  4431f8:	cbnz	w13, 4433c4 <feof@plt+0x402e4>
  4431fc:	add	x9, x9, #0x1
  443200:	cmp	x9, #0x10
  443204:	b.eq	443274 <feof@plt+0x40194>  // b.none
  443208:	ldrh	w13, [x10, x9, lsl #1]
  44320c:	cbz	w13, 4431fc <feof@plt+0x4011c>
  443210:	mov	x14, xzr
  443214:	add	x15, x11, x9, lsl #1
  443218:	sturh	w8, [x15, #-18]
  44321c:	b	443234 <feof@plt+0x40154>
  443220:	add	w8, w17, w8
  443224:	bic	w13, w13, w15
  443228:	add	w14, w14, #0x1
  44322c:	cmp	x9, x14
  443230:	b.ls	4431f8 <feof@plt+0x40118>  // b.plast
  443234:	lsl	w15, w12, w14
  443238:	tst	w15, w13
  44323c:	b.eq	443228 <feof@plt+0x40148>  // b.none
  443240:	subs	x16, x9, x14
  443244:	b.eq	443224 <feof@plt+0x40144>  // b.none
  443248:	sub	w17, w16, #0x1
  44324c:	mov	w18, #0x1                   	// #1
  443250:	lsl	w17, w18, w17
  443254:	tst	w17, w8
  443258:	b.eq	443220 <feof@plt+0x40140>  // b.none
  44325c:	bic	w8, w8, w17
  443260:	cmp	x16, w18, uxtw
  443264:	add	w18, w18, #0x1
  443268:	lsr	w17, w17, #1
  44326c:	b.hi	443254 <feof@plt+0x40174>  // b.pmore
  443270:	b	443224 <feof@plt+0x40144>
  443274:	mov	x21, xzr
  443278:	add	x8, x19, #0x200
  44327c:	mov	w9, #0xf                   	// #15
  443280:	sub	x10, x29, #0x20
  443284:	add	x11, sp, #0x30
  443288:	mov	x12, sp
  44328c:	mov	w13, #0x1                   	// #1
  443290:	b	4432a8 <feof@plt+0x401c8>
  443294:	mov	x6, x21
  443298:	sub	x9, x9, #0x1
  44329c:	cmp	x9, #0x8
  4432a0:	mov	x21, x6
  4432a4:	b.ls	4433e4 <feof@plt+0x40304>  // b.plast
  4432a8:	ldrh	w14, [x10, x9, lsl #1]
  4432ac:	cbz	x14, 443294 <feof@plt+0x401b4>
  4432b0:	lsl	x18, x9, #1
  4432b4:	add	x0, x18, x12
  4432b8:	ldrh	w17, [x11, x18]
  4432bc:	ldurh	w1, [x0, #-18]
  4432c0:	sub	x16, x9, #0x8
  4432c4:	lsl	w18, w13, w16
  4432c8:	sub	w3, w9, #0x1
  4432cc:	mov	x15, xzr
  4432d0:	mov	x4, xzr
  4432d4:	mov	x5, xzr
  4432d8:	sxtw	x0, w18
  4432dc:	lsl	x2, x16, #9
  4432e0:	lsl	w3, w13, w3
  4432e4:	mov	w7, #0x100                 	// #256
  4432e8:	and	w22, w1, #0xff
  4432ec:	cmp	x7, x22
  4432f0:	b.ne	4432fc <feof@plt+0x4021c>  // b.any
  4432f4:	mov	x6, x21
  4432f8:	b	443348 <feof@plt+0x40268>
  4432fc:	ldrh	w5, [x19, x22, lsl #1]
  443300:	cbz	w5, 443324 <feof@plt+0x40244>
  443304:	tbz	w5, #12, 4433c4 <feof@plt+0x402e4>
  443308:	ubfx	x4, x5, #9, #3
  44330c:	cmp	x16, x4
  443310:	b.hi	4433c4 <feof@plt+0x402e4>  // b.pmore
  443314:	and	x5, x5, #0x1ff
  443318:	mov	x6, x21
  44331c:	mov	x7, x22
  443320:	b	443348 <feof@plt+0x40268>
  443324:	cmp	x21, #0x1ff
  443328:	b.hi	4433c4 <feof@plt+0x402e4>  // b.pmore
  44332c:	add	w4, w21, w2
  443330:	add	w4, w4, #0x1, lsl #12
  443334:	add	x6, x21, x0
  443338:	strh	w4, [x19, x22, lsl #1]
  44333c:	mov	x7, x22
  443340:	mov	x5, x21
  443344:	mov	x4, x16
  443348:	lsr	w21, w1, #8
  44334c:	lsl	w22, w13, w4
  443350:	cmp	w21, w22
  443354:	b.cs	443378 <feof@plt+0x40298>  // b.hs, b.nlast
  443358:	orr	w23, w2, w17
  44335c:	add	x24, x8, x5, lsl #1
  443360:	ldrh	w25, [x24, x21, lsl #1]
  443364:	cbnz	w25, 4433c4 <feof@plt+0x402e4>
  443368:	strh	w23, [x24, x21, lsl #1]
  44336c:	add	x21, x21, x18
  443370:	cmp	x21, x22
  443374:	b.cc	443360 <feof@plt+0x40280>  // b.lo, b.ul, b.last
  443378:	add	x15, x15, #0x1
  44337c:	cmp	x15, x14
  443380:	b.cs	44338c <feof@plt+0x402ac>  // b.hs, b.nlast
  443384:	mov	w17, w17
  443388:	ldrh	w17, [x20, x17, lsl #1]
  44338c:	mov	w22, w3
  443390:	mov	w21, w22
  443394:	tst	w22, w1
  443398:	lsr	w22, w22, #1
  44339c:	b.ne	443390 <feof@plt+0x402b0>  // b.any
  4433a0:	sub	w22, w21, #0x1
  4433a4:	and	w1, w22, w1
  4433a8:	cmp	w21, #0x0
  4433ac:	add	w1, w1, w21
  4433b0:	csel	w1, wzr, w1, eq  // eq = none
  4433b4:	cmp	x15, x14
  4433b8:	mov	x21, x6
  4433bc:	b.ne	4432e8 <feof@plt+0x40208>  // b.any
  4433c0:	b	443298 <feof@plt+0x401b8>
  4433c4:	mov	w0, wzr
  4433c8:	ldp	x20, x19, [sp, #176]
  4433cc:	ldp	x22, x21, [sp, #160]
  4433d0:	ldp	x24, x23, [sp, #144]
  4433d4:	ldr	x25, [sp, #128]
  4433d8:	ldp	x29, x30, [sp, #112]
  4433dc:	add	sp, sp, #0xc0
  4433e0:	ret
  4433e4:	mov	w0, #0x1                   	// #1
  4433e8:	b	4433c8 <feof@plt+0x402e8>
  4433ec:	sub	sp, sp, #0x120
  4433f0:	stp	x29, x30, [sp, #192]
  4433f4:	stp	x28, x27, [sp, #208]
  4433f8:	stp	x26, x25, [sp, #224]
  4433fc:	stp	x24, x23, [sp, #240]
  443400:	stp	x22, x21, [sp, #256]
  443404:	stp	x20, x19, [sp, #272]
  443408:	add	x29, sp, #0xc0
  44340c:	mov	x24, x2
  443410:	mov	x22, x0
  443414:	add	x2, sp, #0x38
  443418:	mov	w0, wzr
  44341c:	mov	x19, x5
  443420:	mov	x20, x4
  443424:	mov	w21, w3
  443428:	mov	x26, x1
  44342c:	bl	402f20 <__lxstat@plt>
  443430:	mov	x23, xzr
  443434:	str	w21, [sp, #20]
  443438:	tbnz	w0, #31, 4435dc <feof@plt+0x404fc>
  44343c:	ldr	w8, [sp, #72]
  443440:	and	w8, w8, #0xf000
  443444:	cmp	w8, #0xa, lsl #12
  443448:	b.ne	4435dc <feof@plt+0x404fc>  // b.any
  44344c:	mov	x27, xzr
  443450:	mov	x23, xzr
  443454:	mov	w1, #0x80                  	// #128
  443458:	mov	x0, x22
  44345c:	mov	x2, x20
  443460:	mov	x3, x19
  443464:	bl	43feec <feof@plt+0x3ce0c>
  443468:	cbz	x0, 4435fc <feof@plt+0x4051c>
  44346c:	mov	x28, x0
  443470:	mov	w25, #0x80                  	// #128
  443474:	mov	x0, x26
  443478:	mov	x1, x28
  44347c:	mov	x2, x25
  443480:	bl	402a00 <readlink@plt>
  443484:	tbnz	x0, #63, 4435e4 <feof@plt+0x40504>
  443488:	sub	x8, x25, #0x1
  44348c:	cmp	x0, x8
  443490:	b.cc	4434d0 <feof@plt+0x403f0>  // b.lo, b.ul, b.last
  443494:	mov	x0, x22
  443498:	mov	x1, x28
  44349c:	mov	x2, x25
  4434a0:	mov	x3, x20
  4434a4:	mov	x4, x19
  4434a8:	bl	4400b0 <feof@plt+0x3cfd0>
  4434ac:	lsl	x25, x25, #1
  4434b0:	mov	x0, x22
  4434b4:	mov	x1, x25
  4434b8:	mov	x2, x20
  4434bc:	mov	x3, x19
  4434c0:	bl	43feec <feof@plt+0x3ce0c>
  4434c4:	mov	x28, x0
  4434c8:	cbnz	x0, 443474 <feof@plt+0x40394>
  4434cc:	b	4435fc <feof@plt+0x4051c>
  4434d0:	strb	wzr, [x28, x0]
  4434d4:	ldrb	w8, [x28]
  4434d8:	cmp	w8, #0x2f
  4434dc:	b.eq	44358c <feof@plt+0x404ac>  // b.none
  4434e0:	mov	w1, #0x2f                  	// #47
  4434e4:	mov	x0, x26
  4434e8:	bl	402e50 <strrchr@plt>
  4434ec:	cbz	x0, 44358c <feof@plt+0x404ac>
  4434f0:	sub	x8, x0, x26
  4434f4:	mov	x0, x28
  4434f8:	str	x24, [sp, #24]
  4434fc:	add	x24, x8, #0x1
  443500:	bl	402a50 <strlen@plt>
  443504:	add	x8, x24, x0
  443508:	add	x1, x8, #0x1
  44350c:	mov	x0, x22
  443510:	mov	x2, x20
  443514:	mov	x3, x19
  443518:	str	x1, [sp, #8]
  44351c:	bl	43feec <feof@plt+0x3ce0c>
  443520:	cbz	x0, 443964 <feof@plt+0x40884>
  443524:	mov	x1, x26
  443528:	mov	x2, x24
  44352c:	mov	x21, x0
  443530:	bl	4029c0 <memcpy@plt>
  443534:	add	x8, x21, x24
  443538:	mov	x0, x28
  44353c:	str	x8, [sp]
  443540:	bl	402a50 <strlen@plt>
  443544:	mov	x26, x0
  443548:	ldr	x0, [sp]
  44354c:	mov	x1, x28
  443550:	mov	x2, x26
  443554:	bl	4029c0 <memcpy@plt>
  443558:	add	x8, x26, x24
  44355c:	mov	x0, x22
  443560:	mov	x1, x28
  443564:	mov	x2, x25
  443568:	mov	x3, x20
  44356c:	mov	x4, x19
  443570:	strb	wzr, [x21, x8]
  443574:	bl	4400b0 <feof@plt+0x3cfd0>
  443578:	ldr	x25, [sp, #8]
  44357c:	ldr	x24, [sp, #24]
  443580:	mov	x26, x21
  443584:	cbnz	x23, 443594 <feof@plt+0x404b4>
  443588:	b	4435ac <feof@plt+0x404cc>
  44358c:	mov	x26, x28
  443590:	cbz	x23, 4435ac <feof@plt+0x404cc>
  443594:	mov	x0, x22
  443598:	mov	x1, x23
  44359c:	mov	x2, x27
  4435a0:	mov	x3, x20
  4435a4:	mov	x4, x19
  4435a8:	bl	4400b0 <feof@plt+0x3cfd0>
  4435ac:	add	x2, sp, #0x38
  4435b0:	mov	w0, wzr
  4435b4:	mov	x1, x26
  4435b8:	bl	402f20 <__lxstat@plt>
  4435bc:	tbnz	w0, #31, 44395c <feof@plt+0x4087c>
  4435c0:	ldr	w8, [sp, #72]
  4435c4:	mov	x27, x25
  4435c8:	mov	x23, x26
  4435cc:	and	w8, w8, #0xf000
  4435d0:	cmp	w8, #0xa, lsl #12
  4435d4:	b.eq	443454 <feof@plt+0x40374>  // b.none
  4435d8:	b	443600 <feof@plt+0x40520>
  4435dc:	mov	x25, x23
  4435e0:	b	443600 <feof@plt+0x40520>
  4435e4:	mov	x0, x22
  4435e8:	mov	x1, x28
  4435ec:	mov	x2, x25
  4435f0:	mov	x3, x20
  4435f4:	mov	x4, x19
  4435f8:	bl	4400b0 <feof@plt+0x3cfd0>
  4435fc:	mov	x25, x27
  443600:	mov	w1, #0x2f                  	// #47
  443604:	mov	x0, x26
  443608:	str	x23, [sp, #24]
  44360c:	bl	402e50 <strrchr@plt>
  443610:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x838>
  443614:	sub	x8, x0, x26
  443618:	add	x9, x9, #0xbb5
  44361c:	cmp	x0, #0x0
  443620:	mov	x0, x24
  443624:	csel	x28, x9, x26, eq  // eq = none
  443628:	csinc	x27, xzr, x8, eq  // eq = none
  44362c:	bl	402a50 <strlen@plt>
  443630:	add	x23, x27, x0
  443634:	mov	x26, x0
  443638:	add	x1, x23, #0x1
  44363c:	mov	x0, x22
  443640:	mov	x2, x20
  443644:	mov	x3, x19
  443648:	str	x1, [sp, #8]
  44364c:	bl	43feec <feof@plt+0x3ce0c>
  443650:	mov	x21, x22
  443654:	mov	x22, x24
  443658:	str	x28, [sp]
  44365c:	cbz	x0, 4436c4 <feof@plt+0x405e4>
  443660:	mov	x1, x28
  443664:	mov	x2, x27
  443668:	mov	x24, x0
  44366c:	bl	4029c0 <memcpy@plt>
  443670:	add	x0, x24, x27
  443674:	mov	x1, x22
  443678:	mov	x2, x26
  44367c:	bl	4029c0 <memcpy@plt>
  443680:	add	x3, sp, #0x38
  443684:	mov	x0, x24
  443688:	mov	x1, x20
  44368c:	mov	x2, x19
  443690:	strb	wzr, [x24, x23]
  443694:	bl	440670 <feof@plt+0x3d590>
  443698:	ldr	x2, [sp, #8]
  44369c:	mov	w26, w0
  4436a0:	mov	x0, x21
  4436a4:	mov	x1, x24
  4436a8:	mov	x3, x20
  4436ac:	mov	x4, x19
  4436b0:	bl	4400b0 <feof@plt+0x3cfd0>
  4436b4:	mov	x28, x22
  4436b8:	mov	x22, x21
  4436bc:	tbz	w26, #31, 44382c <feof@plt+0x4074c>
  4436c0:	b	4436cc <feof@plt+0x405ec>
  4436c4:	mov	x28, x22
  4436c8:	mov	x22, x21
  4436cc:	mov	x0, x28
  4436d0:	bl	402a50 <strlen@plt>
  4436d4:	add	x23, x27, x0
  4436d8:	add	x21, x23, #0x8
  4436dc:	mov	x26, x0
  4436e0:	mov	x0, x22
  4436e4:	mov	x1, x21
  4436e8:	mov	x2, x20
  4436ec:	mov	x3, x19
  4436f0:	bl	43feec <feof@plt+0x3ce0c>
  4436f4:	cbz	x0, 443770 <feof@plt+0x40690>
  4436f8:	ldr	x1, [sp]
  4436fc:	mov	x2, x27
  443700:	mov	x24, x0
  443704:	add	x23, x23, #0x7
  443708:	bl	4029c0 <memcpy@plt>
  44370c:	add	x8, x24, x27
  443710:	mov	w9, #0x642e                	// #25646
  443714:	mov	w10, #0x7562                	// #30050
  443718:	movk	w9, #0x6265, lsl #16
  44371c:	movk	w10, #0x2f67, lsl #16
  443720:	add	x0, x8, #0x7
  443724:	mov	x1, x28
  443728:	mov	x2, x26
  44372c:	str	w9, [x8]
  443730:	stur	w10, [x8, #3]
  443734:	bl	4029c0 <memcpy@plt>
  443738:	add	x3, sp, #0x38
  44373c:	mov	x0, x24
  443740:	mov	x1, x20
  443744:	mov	x2, x19
  443748:	strb	wzr, [x24, x23]
  44374c:	bl	440670 <feof@plt+0x3d590>
  443750:	mov	w26, w0
  443754:	mov	x0, x22
  443758:	mov	x1, x24
  44375c:	mov	x2, x21
  443760:	mov	x3, x20
  443764:	mov	x4, x19
  443768:	bl	4400b0 <feof@plt+0x3cfd0>
  44376c:	tbz	w26, #31, 44382c <feof@plt+0x4074c>
  443770:	mov	x0, x28
  443774:	bl	402a50 <strlen@plt>
  443778:	add	x23, x27, x0
  44377c:	add	x21, x23, #0x10
  443780:	mov	x26, x0
  443784:	mov	x0, x22
  443788:	mov	x1, x21
  44378c:	mov	x2, x20
  443790:	mov	x3, x19
  443794:	bl	43feec <feof@plt+0x3ce0c>
  443798:	cbz	x0, 443828 <feof@plt+0x40748>
  44379c:	adrp	x8, 472000 <_obstack_memory_used@@Base+0x10838>
  4437a0:	add	x8, x8, #0x529
  4437a4:	ldur	x9, [x8, #7]
  4437a8:	ldr	x8, [x8]
  4437ac:	ldr	x1, [sp]
  4437b0:	add	x10, x23, #0xf
  4437b4:	add	x23, x0, #0xf
  4437b8:	mov	x24, x0
  4437bc:	stur	x9, [x0, #7]
  4437c0:	str	x8, [x0]
  4437c4:	mov	x0, x23
  4437c8:	mov	x2, x27
  4437cc:	str	x10, [sp, #8]
  4437d0:	bl	4029c0 <memcpy@plt>
  4437d4:	add	x0, x23, x27
  4437d8:	mov	x1, x28
  4437dc:	mov	x2, x26
  4437e0:	bl	4029c0 <memcpy@plt>
  4437e4:	ldr	x8, [sp, #8]
  4437e8:	add	x3, sp, #0x38
  4437ec:	mov	x0, x24
  4437f0:	mov	x1, x20
  4437f4:	mov	x2, x19
  4437f8:	strb	wzr, [x24, x8]
  4437fc:	bl	440670 <feof@plt+0x3d590>
  443800:	mov	w23, w0
  443804:	mov	x0, x22
  443808:	mov	x1, x24
  44380c:	mov	x2, x21
  443810:	mov	x3, x20
  443814:	mov	x4, x19
  443818:	bl	4400b0 <feof@plt+0x3cfd0>
  44381c:	cmp	w23, #0x0
  443820:	csinv	w26, w23, wzr, ge  // ge = tcont
  443824:	b	44382c <feof@plt+0x4074c>
  443828:	mov	w26, #0xffffffff            	// #-1
  44382c:	ldr	x23, [sp, #24]
  443830:	mov	x27, x25
  443834:	cbz	x23, 443854 <feof@plt+0x40774>
  443838:	cbz	x27, 443854 <feof@plt+0x40774>
  44383c:	mov	x0, x22
  443840:	mov	x1, x23
  443844:	mov	x2, x27
  443848:	mov	x3, x20
  44384c:	mov	x4, x19
  443850:	bl	4400b0 <feof@plt+0x3cfd0>
  443854:	tbnz	w26, #31, 443934 <feof@plt+0x40854>
  443858:	ldr	w23, [sp, #20]
  44385c:	cbz	w23, 443938 <feof@plt+0x40858>
  443860:	add	x2, sp, #0x38
  443864:	mov	w0, wzr
  443868:	mov	w1, w26
  44386c:	bl	402980 <__fxstat@plt>
  443870:	tbnz	w0, #31, 4438dc <feof@plt+0x407fc>
  443874:	ldr	x3, [sp, #104]
  443878:	add	x6, sp, #0x20
  44387c:	mov	x0, x22
  443880:	mov	w1, w26
  443884:	mov	x2, xzr
  443888:	mov	x4, x20
  44388c:	mov	x5, x19
  443890:	bl	443988 <feof@plt+0x408a8>
  443894:	cbz	w0, 4438f4 <feof@plt+0x40814>
  443898:	ldr	x10, [sp, #104]
  44389c:	cmp	x10, #0x1
  4438a0:	b.lt	443904 <feof@plt+0x40824>  // b.tstop
  4438a4:	ldr	x8, [sp, #32]
  4438a8:	adrp	x11, 471000 <_obstack_memory_used@@Base+0xf838>
  4438ac:	mov	w9, #0xffffffff            	// #-1
  4438b0:	add	x11, x11, #0xf1c
  4438b4:	add	x10, x8, x10
  4438b8:	ldrb	w12, [x8], #1
  4438bc:	and	w13, w9, #0xff
  4438c0:	eor	w12, w13, w12
  4438c4:	ldr	w12, [x11, w12, uxtw #2]
  4438c8:	cmp	x8, x10
  4438cc:	eor	w9, w12, w9, lsr #8
  4438d0:	b.cc	4438b8 <feof@plt+0x407d8>  // b.lo, b.ul, b.last
  4438d4:	mvn	w21, w9
  4438d8:	b	443908 <feof@plt+0x40828>
  4438dc:	bl	402e70 <__errno_location@plt>
  4438e0:	ldr	w2, [x0]
  4438e4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4438e8:	add	x1, x1, #0x539
  4438ec:	mov	x0, x19
  4438f0:	blr	x20
  4438f4:	mov	w21, wzr
  4438f8:	cmp	w21, w23
  4438fc:	b.eq	443938 <feof@plt+0x40858>  // b.none
  443900:	b	443924 <feof@plt+0x40844>
  443904:	mov	w21, wzr
  443908:	add	x1, sp, #0x20
  44390c:	mov	x0, x22
  443910:	mov	x2, x20
  443914:	mov	x3, x19
  443918:	bl	443a48 <feof@plt+0x40968>
  44391c:	cmp	w21, w23
  443920:	b.eq	443938 <feof@plt+0x40858>  // b.none
  443924:	mov	w0, w26
  443928:	mov	x1, x20
  44392c:	mov	x2, x19
  443930:	bl	44070c <feof@plt+0x3d62c>
  443934:	mov	w26, #0xffffffff            	// #-1
  443938:	mov	w0, w26
  44393c:	ldp	x20, x19, [sp, #272]
  443940:	ldp	x22, x21, [sp, #256]
  443944:	ldp	x24, x23, [sp, #240]
  443948:	ldp	x26, x25, [sp, #224]
  44394c:	ldp	x28, x27, [sp, #208]
  443950:	ldp	x29, x30, [sp, #192]
  443954:	add	sp, sp, #0x120
  443958:	ret
  44395c:	mov	x23, x26
  443960:	b	443600 <feof@plt+0x40520>
  443964:	mov	w26, #0xffffffff            	// #-1
  443968:	cbnz	x23, 443838 <feof@plt+0x40758>
  44396c:	b	443854 <feof@plt+0x40774>
  443970:	ldr	x8, [x0, #8]
  443974:	ldr	x9, [x1, #8]
  443978:	cmp	x8, x9
  44397c:	cset	w8, hi  // hi = pmore
  443980:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  443984:	ret
  443988:	stp	x29, x30, [sp, #-80]!
  44398c:	str	x25, [sp, #16]
  443990:	stp	x24, x23, [sp, #32]
  443994:	stp	x22, x21, [sp, #48]
  443998:	stp	x20, x19, [sp, #64]
  44399c:	mov	x29, sp
  4439a0:	mov	x21, x6
  4439a4:	mov	x20, x5
  4439a8:	mov	x19, x4
  4439ac:	mov	x22, x3
  4439b0:	mov	x23, x2
  4439b4:	mov	w24, w1
  4439b8:	bl	402fd0 <getpagesize@plt>
  4439bc:	sxtw	x8, w0
  4439c0:	udiv	x9, x23, x8
  4439c4:	add	x10, x22, x8
  4439c8:	msub	w25, w9, w0, w23
  4439cc:	add	x9, x10, x25
  4439d0:	sub	x9, x9, #0x1
  4439d4:	neg	x8, x8
  4439d8:	and	x22, x9, x8
  4439dc:	sub	x5, x23, x25
  4439e0:	mov	w2, #0x1                   	// #1
  4439e4:	mov	w3, #0x2                   	// #2
  4439e8:	mov	x0, xzr
  4439ec:	mov	x1, x22
  4439f0:	mov	w4, w24
  4439f4:	bl	402d20 <mmap@plt>
  4439f8:	cmn	x0, #0x1
  4439fc:	b.eq	443a14 <feof@plt+0x40934>  // b.none
  443a00:	add	x8, x0, x25
  443a04:	stp	x0, x22, [x21, #8]
  443a08:	mov	w0, #0x1                   	// #1
  443a0c:	str	x8, [x21]
  443a10:	b	443a30 <feof@plt+0x40950>
  443a14:	bl	402e70 <__errno_location@plt>
  443a18:	ldr	w2, [x0]
  443a1c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xf838>
  443a20:	add	x1, x1, #0x99a
  443a24:	mov	x0, x20
  443a28:	blr	x19
  443a2c:	mov	w0, wzr
  443a30:	ldp	x20, x19, [sp, #64]
  443a34:	ldp	x22, x21, [sp, #48]
  443a38:	ldp	x24, x23, [sp, #32]
  443a3c:	ldr	x25, [sp, #16]
  443a40:	ldp	x29, x30, [sp], #80
  443a44:	ret
  443a48:	stp	x29, x30, [sp, #-32]!
  443a4c:	str	x19, [sp, #16]
  443a50:	mov	x29, sp
  443a54:	ldp	x0, x1, [x1, #8]
  443a58:	mov	x19, x3
  443a5c:	str	x2, [x29, #24]
  443a60:	bl	402d90 <munmap@plt>
  443a64:	tbnz	w0, #31, 443a74 <feof@plt+0x40994>
  443a68:	ldr	x19, [sp, #16]
  443a6c:	ldp	x29, x30, [sp], #32
  443a70:	ret
  443a74:	bl	402e70 <__errno_location@plt>
  443a78:	ldr	w2, [x0]
  443a7c:	mov	x0, x19
  443a80:	ldr	x3, [x29, #24]
  443a84:	ldr	x19, [sp, #16]
  443a88:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  443a8c:	add	x1, x1, #0x561
  443a90:	ldp	x29, x30, [sp], #32
  443a94:	br	x3
  443a98:	stp	x29, x30, [sp, #-96]!
  443a9c:	stp	x28, x27, [sp, #16]
  443aa0:	stp	x26, x25, [sp, #32]
  443aa4:	stp	x24, x23, [sp, #48]
  443aa8:	stp	x22, x21, [sp, #64]
  443aac:	stp	x20, x19, [sp, #80]
  443ab0:	mov	x29, sp
  443ab4:	sub	sp, sp, #0x2e0
  443ab8:	ldr	x8, [x29, #136]
  443abc:	ldp	x21, x20, [x29, #144]
  443ac0:	ldr	w9, [x29, #128]
  443ac4:	mov	x22, x5
  443ac8:	str	x8, [sp, #208]
  443acc:	ldr	x8, [x29, #120]
  443ad0:	mov	x23, x4
  443ad4:	mov	x19, x0
  443ad8:	str	x1, [sp, #232]
  443adc:	str	x8, [sp, #248]
  443ae0:	ldr	x8, [x29, #112]
  443ae4:	stp	xzr, xzr, [sp, #328]
  443ae8:	stp	xzr, xzr, [sp, #344]
  443aec:	stp	xzr, xzr, [sp, #288]
  443af0:	str	x8, [sp, #240]
  443af4:	ldr	x8, [x29, #104]
  443af8:	stp	xzr, xzr, [sp, #304]
  443afc:	stp	x2, x3, [sp, #472]
  443b00:	str	wzr, [sp, #512]
  443b04:	str	x8, [sp, #224]
  443b08:	ldr	x8, [x29, #96]
  443b0c:	str	x2, [sp, #464]
  443b10:	str	w9, [sp, #256]
  443b14:	str	w9, [sp, #488]
  443b18:	str	x8, [sp, #216]
  443b1c:	adrp	x8, 472000 <_obstack_memory_used@@Base+0x10838>
  443b20:	add	x8, x8, #0x45c
  443b24:	stp	xzr, x8, [sp, #448]
  443b28:	stp	x21, x20, [sp, #496]
  443b2c:	stp	xzr, xzr, [sp, #432]
  443b30:	cbz	x3, 444be8 <feof@plt+0x41b08>
  443b34:	mov	x26, x7
  443b38:	mov	x28, x6
  443b3c:	mov	w8, wzr
  443b40:	mov	x11, x2
  443b44:	mov	x12, x3
  443b48:	str	xzr, [sp, #272]
  443b4c:	str	xzr, [sp, #184]
  443b50:	cbnz	w8, 444af4 <feof@plt+0x41a14>
  443b54:	cmp	x12, #0x3
  443b58:	stp	x2, x3, [sp, #160]
  443b5c:	str	x11, [sp, #176]
  443b60:	b.hi	443bb4 <feof@plt+0x40ad4>  // b.pmore
  443b64:	ldr	w8, [sp, #464]
  443b68:	ldr	x4, [sp, #456]
  443b6c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  443b70:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443b74:	sub	w5, w11, w8
  443b78:	sub	x0, x29, #0xd8
  443b7c:	mov	w1, #0xc8                  	// #200
  443b80:	add	x2, x2, #0x6df
  443b84:	add	x3, x3, #0x6cf
  443b88:	mov	x24, x12
  443b8c:	bl	402df0 <snprintf@plt>
  443b90:	ldp	x8, x0, [sp, #496]
  443b94:	sub	x1, x29, #0xd8
  443b98:	mov	w2, wzr
  443b9c:	blr	x8
  443ba0:	mov	x12, x24
  443ba4:	mov	w8, wzr
  443ba8:	mov	w9, #0x1                   	// #1
  443bac:	str	w9, [sp, #512]
  443bb0:	b	443c14 <feof@plt+0x40b34>
  443bb4:	ldr	w8, [sp, #488]
  443bb8:	add	x9, x11, #0x4
  443bbc:	sub	x12, x12, #0x4
  443bc0:	stp	x9, x12, [sp, #472]
  443bc4:	cbz	w8, 443be8 <feof@plt+0x40b08>
  443bc8:	ldrb	w8, [x11]
  443bcc:	ldrb	w9, [x11, #1]
  443bd0:	ldrb	w10, [x11, #2]
  443bd4:	lsl	w8, w8, #24
  443bd8:	bfi	w8, w9, #16, #8
  443bdc:	bfi	w8, w10, #8, #8
  443be0:	add	x9, x11, #0x3
  443be4:	b	443c04 <feof@plt+0x40b24>
  443be8:	ldrb	w8, [x11, #3]
  443bec:	ldrb	w9, [x11, #2]
  443bf0:	ldrb	w10, [x11, #1]
  443bf4:	lsl	w8, w8, #24
  443bf8:	bfi	w8, w9, #16, #8
  443bfc:	bfi	w8, w10, #8, #8
  443c00:	mov	x9, x11
  443c04:	ldrb	w9, [x9]
  443c08:	orr	w8, w8, w9
  443c0c:	cmn	w8, #0x1
  443c10:	b.eq	4440b0 <feof@plt+0x40fd0>  // b.none
  443c14:	str	wzr, [sp, #260]
  443c18:	mov	w0, w8
  443c1c:	add	x8, sp, #0x1c8
  443c20:	ldp	q1, q0, [x8]
  443c24:	ldp	q2, q3, [x8, #32]
  443c28:	subs	x12, x12, x0
  443c2c:	str	q1, [sp, #368]
  443c30:	stp	q0, q2, [sp, #384]
  443c34:	str	q3, [sp, #416]
  443c38:	str	x0, [sp, #392]
  443c3c:	b.cc	444d58 <feof@plt+0x41c78>  // b.lo, b.ul, b.last
  443c40:	ldr	x9, [sp, #472]
  443c44:	ldr	x8, [sp, #384]
  443c48:	cmp	x0, #0x1
  443c4c:	add	x13, x9, x0
  443c50:	stp	x13, x12, [sp, #472]
  443c54:	b.ls	444dac <feof@plt+0x41ccc>  // b.plast
  443c58:	ldr	w10, [sp, #400]
  443c5c:	add	x9, x8, #0x2
  443c60:	sub	x11, x0, #0x2
  443c64:	stp	x9, x11, [sp, #384]
  443c68:	cmp	w10, #0x0
  443c6c:	cinc	x10, x8, eq  // eq = none
  443c70:	cinc	x8, x8, ne  // ne = any
  443c74:	ldrb	w10, [x10]
  443c78:	ldrb	w11, [x8]
  443c7c:	bfi	w11, w10, #8, #8
  443c80:	sub	w8, w11, #0x2
  443c84:	and	w8, w8, #0xffff
  443c88:	cmp	w8, #0x3
  443c8c:	b.cs	444dfc <feof@plt+0x41d1c>  // b.hs, b.nlast
  443c90:	str	x0, [sp, #144]
  443c94:	add	x4, sp, #0x1b0
  443c98:	mov	w1, #0x8                   	// #8
  443c9c:	mov	x0, x19
  443ca0:	mov	x2, x21
  443ca4:	mov	x3, x20
  443ca8:	str	w11, [sp, #140]
  443cac:	stp	x13, x12, [sp, #120]
  443cb0:	bl	4401c0 <feof@plt+0x3d0e0>
  443cb4:	cbz	x0, 444af4 <feof@plt+0x41a14>
  443cb8:	mov	x25, x0
  443cbc:	mov	w1, #0x88                  	// #136
  443cc0:	mov	x0, x19
  443cc4:	mov	x2, x21
  443cc8:	mov	x3, x20
  443ccc:	bl	43feec <feof@plt+0x3ce0c>
  443cd0:	cbz	x0, 444af4 <feof@plt+0x41a14>
  443cd4:	ldr	x8, [sp, #272]
  443cd8:	str	x0, [x25]
  443cdc:	str	x0, [sp, #152]
  443ce0:	str	xzr, [x0, #88]!
  443ce4:	add	x8, x8, #0x1
  443ce8:	str	x8, [sp, #272]
  443cec:	ldr	w8, [sp, #260]
  443cf0:	str	x0, [sp, #200]
  443cf4:	str	xzr, [x0, #8]
  443cf8:	cbz	w8, 444094 <feof@plt+0x40fb4>
  443cfc:	add	x0, sp, #0x170
  443d00:	bl	44557c <feof@plt+0x4249c>
  443d04:	ldr	x8, [sp, #200]
  443d08:	cmp	x0, x26
  443d0c:	stp	xzr, xzr, [x8]
  443d10:	b.cs	444e3c <feof@plt+0x41d5c>  // b.hs, b.nlast
  443d14:	stp	x23, x22, [sp, #88]
  443d18:	add	x25, x28, x0
  443d1c:	sub	x22, x26, x0
  443d20:	str	wzr, [sp, #280]
  443d24:	str	xzr, [sp, #264]
  443d28:	stp	x26, x25, [sp, #104]
  443d2c:	str	x22, [sp, #192]
  443d30:	mov	w9, #0x2                   	// #2
  443d34:	mov	x23, xzr
  443d38:	mov	w27, wzr
  443d3c:	mov	w8, wzr
  443d40:	sub	x9, x9, x22
  443d44:	b	443d64 <feof@plt+0x40c84>
  443d48:	and	x9, x24, #0x7f
  443d4c:	lsl	x9, x9, x27
  443d50:	orr	x23, x9, x23
  443d54:	sxtb	w10, w24
  443d58:	add	w27, w27, #0x7
  443d5c:	add	x9, x26, #0x1
  443d60:	tbz	w10, #31, 443dc0 <feof@plt+0x40ce0>
  443d64:	cbz	x22, 444ab4 <feof@plt+0x419d4>
  443d68:	ldrb	w24, [x25], #1
  443d6c:	mov	x26, x9
  443d70:	cmp	w27, #0x3f
  443d74:	sub	x22, x22, #0x1
  443d78:	b.ls	443d48 <feof@plt+0x40c68>  // b.plast
  443d7c:	cbnz	w8, 443d54 <feof@plt+0x40c74>
  443d80:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  443d84:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443d88:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  443d8c:	sub	w5, w25, w28
  443d90:	sub	x0, x29, #0xd8
  443d94:	mov	w1, #0xc8                  	// #200
  443d98:	add	x2, x2, #0x6df
  443d9c:	add	x3, x3, #0x798
  443da0:	add	x4, x4, #0x474
  443da4:	bl	402df0 <snprintf@plt>
  443da8:	sub	x1, x29, #0xd8
  443dac:	mov	x0, x20
  443db0:	mov	w2, wzr
  443db4:	blr	x21
  443db8:	mov	w8, #0x1                   	// #1
  443dbc:	b	443d54 <feof@plt+0x40c74>
  443dc0:	cbz	x23, 44413c <feof@plt+0x4105c>
  443dc4:	ldr	w8, [sp, #280]
  443dc8:	cbnz	w8, 444af4 <feof@plt+0x41a14>
  443dcc:	ldr	x9, [sp, #264]
  443dd0:	adrp	x27, 472000 <_obstack_memory_used@@Base+0x10838>
  443dd4:	mov	w22, wzr
  443dd8:	mov	x23, x25
  443ddc:	add	x9, x9, #0x1
  443de0:	add	x27, x27, #0x6df
  443de4:	str	x9, [sp, #264]
  443de8:	b	443df8 <feof@plt+0x40d18>
  443dec:	add	w22, w22, #0x7
  443df0:	add	x26, x26, #0x1
  443df4:	tbz	w24, #31, 443e98 <feof@plt+0x40db8>
  443df8:	cmp	x26, #0x1
  443dfc:	mov	x25, x23
  443e00:	b.eq	443e54 <feof@plt+0x40d74>  // b.none
  443e04:	mov	x23, x25
  443e08:	ldrsb	w24, [x23], #1
  443e0c:	cmp	w22, #0x40
  443e10:	b.cc	443dec <feof@plt+0x40d0c>  // b.lo, b.ul, b.last
  443e14:	cbnz	w8, 443dec <feof@plt+0x40d0c>
  443e18:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443e1c:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  443e20:	sub	w5, w23, w28
  443e24:	sub	x0, x29, #0xd8
  443e28:	mov	w1, #0xc8                  	// #200
  443e2c:	mov	x2, x27
  443e30:	add	x3, x3, #0x798
  443e34:	add	x4, x4, #0x474
  443e38:	bl	402df0 <snprintf@plt>
  443e3c:	sub	x1, x29, #0xd8
  443e40:	mov	x0, x20
  443e44:	mov	w2, wzr
  443e48:	blr	x21
  443e4c:	mov	w8, #0x1                   	// #1
  443e50:	b	443dec <feof@plt+0x40d0c>
  443e54:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443e58:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  443e5c:	sub	w5, w25, w28
  443e60:	sub	x0, x29, #0xd8
  443e64:	mov	w1, #0xc8                  	// #200
  443e68:	mov	x2, x27
  443e6c:	add	x3, x3, #0x6cf
  443e70:	add	x4, x4, #0x474
  443e74:	bl	402df0 <snprintf@plt>
  443e78:	sub	x1, x29, #0xd8
  443e7c:	mov	x0, x20
  443e80:	mov	w2, wzr
  443e84:	blr	x21
  443e88:	mov	w8, #0x1                   	// #1
  443e8c:	mov	x22, xzr
  443e90:	str	w8, [sp, #280]
  443e94:	b	443efc <feof@plt+0x40e1c>
  443e98:	cmp	x26, #0x1
  443e9c:	b.ne	443ee8 <feof@plt+0x40e08>  // b.any
  443ea0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443ea4:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  443ea8:	sub	w5, w23, w28
  443eac:	sub	x0, x29, #0xd8
  443eb0:	mov	w1, #0xc8                  	// #200
  443eb4:	mov	x2, x27
  443eb8:	add	x3, x3, #0x6cf
  443ebc:	add	x4, x4, #0x474
  443ec0:	bl	402df0 <snprintf@plt>
  443ec4:	sub	x1, x29, #0xd8
  443ec8:	mov	x0, x20
  443ecc:	mov	w2, wzr
  443ed0:	blr	x21
  443ed4:	mov	w8, #0x1                   	// #1
  443ed8:	mov	x22, xzr
  443edc:	str	w8, [sp, #280]
  443ee0:	mov	x25, x23
  443ee4:	b	443efc <feof@plt+0x40e1c>
  443ee8:	add	x25, x25, #0x2
  443eec:	neg	x22, x26
  443ef0:	str	wzr, [sp, #280]
  443ef4:	b	443efc <feof@plt+0x40e1c>
  443ef8:	cbz	x26, 443d30 <feof@plt+0x40c50>
  443efc:	mov	x26, xzr
  443f00:	mov	w23, wzr
  443f04:	mov	w8, wzr
  443f08:	b	443f24 <feof@plt+0x40e44>
  443f0c:	and	x9, x24, #0x7f
  443f10:	lsl	x9, x9, x23
  443f14:	orr	x26, x9, x26
  443f18:	sxtb	w9, w24
  443f1c:	add	w23, w23, #0x7
  443f20:	tbz	w9, #31, 443fd0 <feof@plt+0x40ef0>
  443f24:	cbz	x22, 443f78 <feof@plt+0x40e98>
  443f28:	ldrb	w24, [x25], #1
  443f2c:	cmp	w23, #0x3f
  443f30:	sub	x22, x22, #0x1
  443f34:	b.ls	443f0c <feof@plt+0x40e2c>  // b.plast
  443f38:	cbnz	w8, 443f18 <feof@plt+0x40e38>
  443f3c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443f40:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  443f44:	sub	w5, w25, w28
  443f48:	sub	x0, x29, #0xd8
  443f4c:	mov	w1, #0xc8                  	// #200
  443f50:	mov	x2, x27
  443f54:	add	x3, x3, #0x798
  443f58:	add	x4, x4, #0x474
  443f5c:	bl	402df0 <snprintf@plt>
  443f60:	sub	x1, x29, #0xd8
  443f64:	mov	x0, x20
  443f68:	mov	w2, wzr
  443f6c:	blr	x21
  443f70:	mov	w8, #0x1                   	// #1
  443f74:	b	443f18 <feof@plt+0x40e38>
  443f78:	ldr	w8, [sp, #280]
  443f7c:	cbz	w8, 443f8c <feof@plt+0x40eac>
  443f80:	mov	x22, xzr
  443f84:	mov	x26, xzr
  443f88:	b	443fd0 <feof@plt+0x40ef0>
  443f8c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  443f90:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  443f94:	sub	w5, w25, w28
  443f98:	sub	x0, x29, #0xd8
  443f9c:	mov	w1, #0xc8                  	// #200
  443fa0:	mov	x2, x27
  443fa4:	add	x3, x3, #0x6cf
  443fa8:	add	x4, x4, #0x474
  443fac:	bl	402df0 <snprintf@plt>
  443fb0:	sub	x1, x29, #0xd8
  443fb4:	mov	x0, x20
  443fb8:	mov	w2, wzr
  443fbc:	blr	x21
  443fc0:	mov	w8, #0x1                   	// #1
  443fc4:	mov	x22, xzr
  443fc8:	mov	x26, xzr
  443fcc:	str	w8, [sp, #280]
  443fd0:	mov	w23, wzr
  443fd4:	mov	w8, wzr
  443fd8:	b	443fe4 <feof@plt+0x40f04>
  443fdc:	add	w23, w23, #0x7
  443fe0:	tbz	w24, #31, 443ef8 <feof@plt+0x40e18>
  443fe4:	cbz	x22, 444038 <feof@plt+0x40f58>
  443fe8:	ldrsb	w24, [x25], #1
  443fec:	cmp	w23, #0x40
  443ff0:	sub	x22, x22, #0x1
  443ff4:	b.cc	443fdc <feof@plt+0x40efc>  // b.lo, b.ul, b.last
  443ff8:	cbnz	w8, 443fdc <feof@plt+0x40efc>
  443ffc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444000:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444004:	sub	w5, w25, w28
  444008:	sub	x0, x29, #0xd8
  44400c:	mov	w1, #0xc8                  	// #200
  444010:	mov	x2, x27
  444014:	add	x3, x3, #0x798
  444018:	add	x4, x4, #0x474
  44401c:	bl	402df0 <snprintf@plt>
  444020:	sub	x1, x29, #0xd8
  444024:	mov	x0, x20
  444028:	mov	w2, wzr
  44402c:	blr	x21
  444030:	mov	w8, #0x1                   	// #1
  444034:	b	443fdc <feof@plt+0x40efc>
  444038:	ldr	w8, [sp, #280]
  44403c:	cbz	w8, 44404c <feof@plt+0x40f6c>
  444040:	mov	x22, xzr
  444044:	cbnz	x26, 443efc <feof@plt+0x40e1c>
  444048:	b	443d30 <feof@plt+0x40c50>
  44404c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444050:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444054:	sub	w5, w25, w28
  444058:	sub	x0, x29, #0xd8
  44405c:	mov	w1, #0xc8                  	// #200
  444060:	mov	x2, x27
  444064:	add	x3, x3, #0x6cf
  444068:	add	x4, x4, #0x474
  44406c:	bl	402df0 <snprintf@plt>
  444070:	sub	x1, x29, #0xd8
  444074:	mov	x0, x20
  444078:	mov	w2, wzr
  44407c:	blr	x21
  444080:	mov	x22, xzr
  444084:	mov	w8, #0x1                   	// #1
  444088:	str	w8, [sp, #280]
  44408c:	cbnz	x26, 443efc <feof@plt+0x40e1c>
  444090:	b	443d30 <feof@plt+0x40c50>
  444094:	ldp	x8, x9, [sp, #384]
  444098:	cmp	x9, #0x3
  44409c:	b.hi	4440c8 <feof@plt+0x40fe8>  // b.pmore
  4440a0:	ldr	w9, [sp, #424]
  4440a4:	cbz	w9, 4440ec <feof@plt+0x4100c>
  4440a8:	mov	x0, xzr
  4440ac:	b	443d04 <feof@plt+0x40c24>
  4440b0:	add	x0, sp, #0x1c8
  4440b4:	bl	44557c <feof@plt+0x4249c>
  4440b8:	ldr	x12, [sp, #480]
  4440bc:	mov	w8, #0x1                   	// #1
  4440c0:	str	w8, [sp, #260]
  4440c4:	b	443c1c <feof@plt+0x40b3c>
  4440c8:	ldr	w10, [sp, #400]
  4440cc:	add	x11, x8, #0x4
  4440d0:	sub	x9, x9, #0x4
  4440d4:	stp	x11, x9, [sp, #384]
  4440d8:	cbz	w10, 444134 <feof@plt+0x41054>
  4440dc:	ldr	w8, [x8]
  4440e0:	lsl	x8, x8, #32
  4440e4:	rev	x0, x8
  4440e8:	b	443d04 <feof@plt+0x40c24>
  4440ec:	ldr	w9, [sp, #376]
  4440f0:	ldr	x4, [sp, #368]
  4440f4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4440f8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4440fc:	sub	w5, w8, w9
  444100:	sub	x0, x29, #0xd8
  444104:	mov	w1, #0xc8                  	// #200
  444108:	add	x2, x2, #0x6df
  44410c:	add	x3, x3, #0x6cf
  444110:	bl	402df0 <snprintf@plt>
  444114:	ldp	x8, x0, [sp, #408]
  444118:	sub	x1, x29, #0xd8
  44411c:	mov	w2, wzr
  444120:	blr	x8
  444124:	mov	w8, #0x1                   	// #1
  444128:	mov	x0, xzr
  44412c:	str	w8, [sp, #424]
  444130:	b	443d04 <feof@plt+0x40c24>
  444134:	ldr	w0, [x8]
  444138:	b	443d04 <feof@plt+0x40c24>
  44413c:	ldr	x26, [sp, #104]
  444140:	ldr	x27, [sp, #192]
  444144:	ldr	w8, [sp, #280]
  444148:	cbnz	w8, 444af4 <feof@plt+0x41a14>
  44414c:	ldr	x23, [sp, #264]
  444150:	cbz	x23, 444978 <feof@plt+0x41898>
  444154:	lsl	x24, x23, #5
  444158:	mov	x0, x19
  44415c:	mov	x1, x24
  444160:	mov	x2, x21
  444164:	mov	x3, x20
  444168:	bl	43feec <feof@plt+0x3ce0c>
  44416c:	ldr	x8, [sp, #152]
  444170:	str	x0, [x8, #96]
  444174:	cbz	x0, 444af4 <feof@plt+0x41a14>
  444178:	ldr	x8, [sp, #200]
  44417c:	mov	w1, wzr
  444180:	mov	x2, x24
  444184:	str	x23, [x8]
  444188:	bl	402b40 <memset@plt>
  44418c:	ldr	x26, [sp, #112]
  444190:	str	xzr, [sp, #56]
  444194:	mov	w9, #0x2                   	// #2
  444198:	mov	w23, wzr
  44419c:	mov	w8, wzr
  4441a0:	mov	x25, x27
  4441a4:	sub	x9, x9, x27
  4441a8:	str	xzr, [sp, #264]
  4441ac:	b	4441d4 <feof@plt+0x410f4>
  4441b0:	ldr	x10, [sp, #264]
  4441b4:	and	x9, x24, #0x7f
  4441b8:	lsl	x9, x9, x23
  4441bc:	orr	x10, x9, x10
  4441c0:	str	x10, [sp, #264]
  4441c4:	sxtb	w10, w24
  4441c8:	add	w23, w23, #0x7
  4441cc:	add	x9, x22, #0x1
  4441d0:	tbz	w10, #31, 444230 <feof@plt+0x41150>
  4441d4:	cbz	x25, 444924 <feof@plt+0x41844>
  4441d8:	ldrb	w24, [x26], #1
  4441dc:	mov	x22, x9
  4441e0:	cmp	w23, #0x3f
  4441e4:	sub	x25, x25, #0x1
  4441e8:	b.ls	4441b0 <feof@plt+0x410d0>  // b.plast
  4441ec:	cbnz	w8, 4441c4 <feof@plt+0x410e4>
  4441f0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4441f4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4441f8:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4441fc:	sub	w5, w26, w28
  444200:	sub	x0, x29, #0xd8
  444204:	mov	w1, #0xc8                  	// #200
  444208:	add	x2, x2, #0x6df
  44420c:	add	x3, x3, #0x798
  444210:	add	x4, x4, #0x474
  444214:	bl	402df0 <snprintf@plt>
  444218:	sub	x1, x29, #0xd8
  44421c:	mov	x0, x20
  444220:	mov	w2, wzr
  444224:	blr	x21
  444228:	mov	w8, #0x1                   	// #1
  44422c:	b	4441c4 <feof@plt+0x410e4>
  444230:	ldr	x8, [sp, #264]
  444234:	cbz	x8, 44495c <feof@plt+0x4187c>
  444238:	mov	x24, x26
  44423c:	adrp	x26, 472000 <_obstack_memory_used@@Base+0x10838>
  444240:	mov	w23, wzr
  444244:	mov	w8, wzr
  444248:	add	x26, x26, #0x6df
  44424c:	str	xzr, [sp, #64]
  444250:	b	444278 <feof@plt+0x41198>
  444254:	ldr	x10, [sp, #64]
  444258:	and	x9, x25, #0x7f
  44425c:	lsl	x9, x9, x23
  444260:	orr	x10, x9, x10
  444264:	str	x10, [sp, #64]
  444268:	sxtb	w9, w25
  44426c:	add	w23, w23, #0x7
  444270:	add	x22, x22, #0x1
  444274:	tbz	w9, #31, 44430c <feof@plt+0x4122c>
  444278:	cmp	x22, #0x1
  44427c:	b.eq	4442d0 <feof@plt+0x411f0>  // b.none
  444280:	mov	x27, x24
  444284:	ldrb	w25, [x24], #1
  444288:	cmp	w23, #0x3f
  44428c:	b.ls	444254 <feof@plt+0x41174>  // b.plast
  444290:	cbnz	w8, 444268 <feof@plt+0x41188>
  444294:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444298:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  44429c:	sub	w5, w24, w28
  4442a0:	sub	x0, x29, #0xd8
  4442a4:	mov	w1, #0xc8                  	// #200
  4442a8:	mov	x2, x26
  4442ac:	add	x3, x3, #0x798
  4442b0:	add	x4, x4, #0x474
  4442b4:	bl	402df0 <snprintf@plt>
  4442b8:	sub	x1, x29, #0xd8
  4442bc:	mov	x0, x20
  4442c0:	mov	w2, wzr
  4442c4:	blr	x21
  4442c8:	mov	w8, #0x1                   	// #1
  4442cc:	b	444268 <feof@plt+0x41188>
  4442d0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4442d4:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4442d8:	sub	w5, w24, w28
  4442dc:	sub	x0, x29, #0xd8
  4442e0:	mov	w1, #0xc8                  	// #200
  4442e4:	mov	x2, x26
  4442e8:	add	x3, x3, #0x6cf
  4442ec:	add	x4, x4, #0x474
  4442f0:	bl	402df0 <snprintf@plt>
  4442f4:	sub	x1, x29, #0xd8
  4442f8:	mov	x0, x20
  4442fc:	mov	w2, wzr
  444300:	blr	x21
  444304:	str	xzr, [sp, #64]
  444308:	b	444348 <feof@plt+0x41268>
  44430c:	cmp	x22, #0x1
  444310:	b.ne	444358 <feof@plt+0x41278>  // b.any
  444314:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444318:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  44431c:	sub	w5, w24, w28
  444320:	sub	x0, x29, #0xd8
  444324:	mov	w1, #0xc8                  	// #200
  444328:	mov	x2, x26
  44432c:	add	x3, x3, #0x6cf
  444330:	add	x4, x4, #0x474
  444334:	bl	402df0 <snprintf@plt>
  444338:	sub	x1, x29, #0xd8
  44433c:	mov	x0, x20
  444340:	mov	w2, wzr
  444344:	blr	x21
  444348:	mov	x26, xzr
  44434c:	str	wzr, [sp, #52]
  444350:	mov	w9, #0x1                   	// #1
  444354:	b	44436c <feof@plt+0x4128c>
  444358:	ldrb	w8, [x27, #1]
  44435c:	mov	w9, wzr
  444360:	add	x24, x27, #0x2
  444364:	neg	x26, x22
  444368:	str	w8, [sp, #52]
  44436c:	mov	x22, xzr
  444370:	str	w9, [sp, #84]
  444374:	str	w9, [sp, #280]
  444378:	str	x26, [sp, #192]
  44437c:	str	x24, [sp, #112]
  444380:	mov	x23, xzr
  444384:	mov	w27, wzr
  444388:	mov	w8, wzr
  44438c:	b	4443a8 <feof@plt+0x412c8>
  444390:	and	x9, x25, #0x7f
  444394:	lsl	x9, x9, x27
  444398:	orr	x23, x9, x23
  44439c:	sxtb	w9, w25
  4443a0:	add	w27, w27, #0x7
  4443a4:	tbz	w9, #31, 444400 <feof@plt+0x41320>
  4443a8:	cbz	x26, 4444c4 <feof@plt+0x413e4>
  4443ac:	ldrb	w25, [x24], #1
  4443b0:	cmp	w27, #0x3f
  4443b4:	sub	x26, x26, #0x1
  4443b8:	b.ls	444390 <feof@plt+0x412b0>  // b.plast
  4443bc:	cbnz	w8, 44439c <feof@plt+0x412bc>
  4443c0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4443c4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4443c8:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4443cc:	sub	w5, w24, w28
  4443d0:	sub	x0, x29, #0xd8
  4443d4:	mov	w1, #0xc8                  	// #200
  4443d8:	add	x2, x2, #0x6df
  4443dc:	add	x3, x3, #0x798
  4443e0:	add	x4, x4, #0x474
  4443e4:	bl	402df0 <snprintf@plt>
  4443e8:	sub	x1, x29, #0xd8
  4443ec:	mov	x0, x20
  4443f0:	mov	w2, wzr
  4443f4:	blr	x21
  4443f8:	mov	w8, #0x1                   	// #1
  4443fc:	b	44439c <feof@plt+0x412bc>
  444400:	cbz	x23, 444504 <feof@plt+0x41424>
  444404:	adrp	x27, 472000 <_obstack_memory_used@@Base+0x10838>
  444408:	mov	w23, wzr
  44440c:	mov	w8, wzr
  444410:	add	x22, x22, #0x1
  444414:	add	x27, x27, #0x6df
  444418:	b	444424 <feof@plt+0x41344>
  44441c:	add	w23, w23, #0x7
  444420:	tbz	w25, #31, 444380 <feof@plt+0x412a0>
  444424:	cbz	x26, 444478 <feof@plt+0x41398>
  444428:	ldrsb	w25, [x24], #1
  44442c:	cmp	w23, #0x40
  444430:	sub	x26, x26, #0x1
  444434:	b.cc	44441c <feof@plt+0x4133c>  // b.lo, b.ul, b.last
  444438:	cbnz	w8, 44441c <feof@plt+0x4133c>
  44443c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444440:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444444:	sub	w5, w24, w28
  444448:	sub	x0, x29, #0xd8
  44444c:	mov	w1, #0xc8                  	// #200
  444450:	mov	x2, x27
  444454:	add	x3, x3, #0x798
  444458:	add	x4, x4, #0x474
  44445c:	bl	402df0 <snprintf@plt>
  444460:	sub	x1, x29, #0xd8
  444464:	mov	x0, x20
  444468:	mov	w2, wzr
  44446c:	blr	x21
  444470:	mov	w8, #0x1                   	// #1
  444474:	b	44441c <feof@plt+0x4133c>
  444478:	ldr	w8, [sp, #280]
  44447c:	cbnz	w8, 444380 <feof@plt+0x412a0>
  444480:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444484:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444488:	sub	w5, w24, w28
  44448c:	sub	x0, x29, #0xd8
  444490:	mov	w1, #0xc8                  	// #200
  444494:	mov	x2, x27
  444498:	add	x3, x3, #0x6cf
  44449c:	add	x4, x4, #0x474
  4444a0:	bl	402df0 <snprintf@plt>
  4444a4:	sub	x1, x29, #0xd8
  4444a8:	mov	x0, x20
  4444ac:	mov	w2, wzr
  4444b0:	blr	x21
  4444b4:	mov	w8, #0x1                   	// #1
  4444b8:	mov	x26, xzr
  4444bc:	str	w8, [sp, #280]
  4444c0:	b	444380 <feof@plt+0x412a0>
  4444c4:	ldr	w8, [sp, #280]
  4444c8:	cbnz	w8, 444504 <feof@plt+0x41424>
  4444cc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4444d0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4444d4:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4444d8:	sub	w5, w24, w28
  4444dc:	sub	x0, x29, #0xd8
  4444e0:	mov	w1, #0xc8                  	// #200
  4444e4:	add	x2, x2, #0x6df
  4444e8:	add	x3, x3, #0x6cf
  4444ec:	add	x4, x4, #0x474
  4444f0:	bl	402df0 <snprintf@plt>
  4444f4:	sub	x1, x29, #0xd8
  4444f8:	mov	x0, x20
  4444fc:	mov	w2, wzr
  444500:	blr	x21
  444504:	cbz	x22, 44472c <feof@plt+0x4164c>
  444508:	lsl	x1, x22, #3
  44450c:	mov	x0, x19
  444510:	mov	x2, x21
  444514:	mov	x3, x20
  444518:	bl	43feec <feof@plt+0x3ce0c>
  44451c:	ldr	x26, [sp, #112]
  444520:	ldr	x27, [sp, #192]
  444524:	cbz	x0, 444e48 <feof@plt+0x41d68>
  444528:	str	x0, [sp, #72]
  44452c:	str	xzr, [sp, #280]
  444530:	b	444550 <feof@plt+0x41470>
  444534:	ldr	x23, [sp, #72]
  444538:	ldr	x11, [sp, #280]
  44453c:	cbz	x24, 444724 <feof@plt+0x41644>
  444540:	add	x8, x23, x11, lsl #3
  444544:	add	x11, x11, #0x1
  444548:	stp	w24, w25, [x8]
  44454c:	str	x11, [sp, #280]
  444550:	mov	x24, xzr
  444554:	mov	w23, wzr
  444558:	mov	w8, wzr
  44455c:	b	444578 <feof@plt+0x41498>
  444560:	and	x9, x25, #0x7f
  444564:	lsl	x9, x9, x23
  444568:	orr	x24, x9, x24
  44456c:	sxtb	w9, w25
  444570:	add	w23, w23, #0x7
  444574:	tbz	w9, #31, 44462c <feof@plt+0x4154c>
  444578:	cbz	x27, 4445d0 <feof@plt+0x414f0>
  44457c:	ldrb	w25, [x26], #1
  444580:	cmp	w23, #0x3f
  444584:	sub	x27, x27, #0x1
  444588:	b.ls	444560 <feof@plt+0x41480>  // b.plast
  44458c:	cbnz	w8, 44456c <feof@plt+0x4148c>
  444590:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444594:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444598:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  44459c:	sub	w5, w26, w28
  4445a0:	sub	x0, x29, #0xd8
  4445a4:	mov	w1, #0xc8                  	// #200
  4445a8:	add	x2, x2, #0x6df
  4445ac:	add	x3, x3, #0x798
  4445b0:	add	x4, x4, #0x474
  4445b4:	bl	402df0 <snprintf@plt>
  4445b8:	sub	x1, x29, #0xd8
  4445bc:	mov	x0, x20
  4445c0:	mov	w2, wzr
  4445c4:	blr	x21
  4445c8:	mov	w8, #0x1                   	// #1
  4445cc:	b	44456c <feof@plt+0x4148c>
  4445d0:	ldr	w8, [sp, #84]
  4445d4:	cbz	w8, 4445e4 <feof@plt+0x41504>
  4445d8:	mov	x27, xzr
  4445dc:	mov	x24, xzr
  4445e0:	b	44462c <feof@plt+0x4154c>
  4445e4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4445e8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4445ec:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4445f0:	sub	w5, w26, w28
  4445f4:	sub	x0, x29, #0xd8
  4445f8:	mov	w1, #0xc8                  	// #200
  4445fc:	add	x2, x2, #0x6df
  444600:	add	x3, x3, #0x6cf
  444604:	add	x4, x4, #0x474
  444608:	bl	402df0 <snprintf@plt>
  44460c:	sub	x1, x29, #0xd8
  444610:	mov	x0, x20
  444614:	mov	w2, wzr
  444618:	blr	x21
  44461c:	mov	w8, #0x1                   	// #1
  444620:	mov	x27, xzr
  444624:	mov	x24, xzr
  444628:	str	w8, [sp, #84]
  44462c:	mov	x25, xzr
  444630:	mov	w23, wzr
  444634:	mov	w8, wzr
  444638:	b	444658 <feof@plt+0x41578>
  44463c:	and	x9, x26, #0x7f
  444640:	lsl	x9, x9, x23
  444644:	orr	x25, x9, x25
  444648:	sxtb	w9, w26
  44464c:	add	w23, w23, #0x7
  444650:	mov	x26, x22
  444654:	tbz	w9, #31, 444534 <feof@plt+0x41454>
  444658:	cbz	x27, 4446b4 <feof@plt+0x415d4>
  44465c:	mov	x22, x26
  444660:	ldrb	w26, [x22], #1
  444664:	cmp	w23, #0x3f
  444668:	sub	x27, x27, #0x1
  44466c:	b.ls	44463c <feof@plt+0x4155c>  // b.plast
  444670:	cbnz	w8, 444648 <feof@plt+0x41568>
  444674:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444678:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44467c:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444680:	sub	w5, w22, w28
  444684:	sub	x0, x29, #0xd8
  444688:	mov	w1, #0xc8                  	// #200
  44468c:	add	x2, x2, #0x6df
  444690:	add	x3, x3, #0x798
  444694:	add	x4, x4, #0x474
  444698:	bl	402df0 <snprintf@plt>
  44469c:	sub	x1, x29, #0xd8
  4446a0:	mov	x0, x20
  4446a4:	mov	w2, wzr
  4446a8:	blr	x21
  4446ac:	mov	w8, #0x1                   	// #1
  4446b0:	b	444648 <feof@plt+0x41568>
  4446b4:	ldr	w8, [sp, #84]
  4446b8:	ldr	x23, [sp, #72]
  4446bc:	cbz	w8, 4446d4 <feof@plt+0x415f4>
  4446c0:	mov	x27, xzr
  4446c4:	mov	x25, xzr
  4446c8:	ldr	x11, [sp, #280]
  4446cc:	cbnz	x24, 444540 <feof@plt+0x41460>
  4446d0:	b	444724 <feof@plt+0x41644>
  4446d4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4446d8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4446dc:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4446e0:	sub	w5, w26, w28
  4446e4:	sub	x0, x29, #0xd8
  4446e8:	mov	w1, #0xc8                  	// #200
  4446ec:	add	x2, x2, #0x6df
  4446f0:	add	x3, x3, #0x6cf
  4446f4:	add	x4, x4, #0x474
  4446f8:	bl	402df0 <snprintf@plt>
  4446fc:	sub	x1, x29, #0xd8
  444700:	mov	x0, x20
  444704:	mov	w2, wzr
  444708:	blr	x21
  44470c:	mov	w8, #0x1                   	// #1
  444710:	mov	x27, xzr
  444714:	mov	x25, xzr
  444718:	str	w8, [sp, #84]
  44471c:	ldr	x11, [sp, #280]
  444720:	cbnz	x24, 444540 <feof@plt+0x41460>
  444724:	ldr	x9, [sp, #152]
  444728:	b	444894 <feof@plt+0x417b4>
  44472c:	ldr	x9, [sp, #152]
  444730:	ldr	x26, [sp, #112]
  444734:	mov	w8, wzr
  444738:	b	444744 <feof@plt+0x41664>
  44473c:	add	w22, w22, #0x7
  444740:	tbz	w23, #31, 444800 <feof@plt+0x41720>
  444744:	ldr	x10, [sp, #192]
  444748:	cbz	x10, 4447a8 <feof@plt+0x416c8>
  44474c:	ldrsb	w23, [x26], #1
  444750:	cmp	w22, #0x40
  444754:	sub	x10, x10, #0x1
  444758:	str	x10, [sp, #192]
  44475c:	b.cc	44473c <feof@plt+0x4165c>  // b.lo, b.ul, b.last
  444760:	cbnz	w8, 44473c <feof@plt+0x4165c>
  444764:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444768:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44476c:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444770:	sub	w5, w26, w28
  444774:	sub	x0, x29, #0xd8
  444778:	mov	w1, #0xc8                  	// #200
  44477c:	add	x2, x2, #0x6df
  444780:	add	x3, x3, #0x798
  444784:	add	x4, x4, #0x474
  444788:	bl	402df0 <snprintf@plt>
  44478c:	sub	x1, x29, #0xd8
  444790:	mov	x0, x20
  444794:	mov	w2, wzr
  444798:	blr	x21
  44479c:	ldr	x9, [sp, #152]
  4447a0:	mov	w8, #0x1                   	// #1
  4447a4:	b	44473c <feof@plt+0x4165c>
  4447a8:	ldr	w8, [sp, #84]
  4447ac:	cbz	w8, 4447b8 <feof@plt+0x416d8>
  4447b0:	str	xzr, [sp, #192]
  4447b4:	b	444800 <feof@plt+0x41720>
  4447b8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4447bc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4447c0:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4447c4:	sub	w5, w26, w28
  4447c8:	sub	x0, x29, #0xd8
  4447cc:	mov	w1, #0xc8                  	// #200
  4447d0:	add	x2, x2, #0x6df
  4447d4:	add	x3, x3, #0x6cf
  4447d8:	add	x4, x4, #0x474
  4447dc:	bl	402df0 <snprintf@plt>
  4447e0:	sub	x1, x29, #0xd8
  4447e4:	mov	x0, x20
  4447e8:	mov	w2, wzr
  4447ec:	blr	x21
  4447f0:	ldr	x9, [sp, #152]
  4447f4:	mov	w8, #0x1                   	// #1
  4447f8:	str	xzr, [sp, #192]
  4447fc:	str	w8, [sp, #84]
  444800:	mov	w22, wzr
  444804:	mov	w8, wzr
  444808:	b	444814 <feof@plt+0x41734>
  44480c:	add	w22, w22, #0x7
  444810:	tbz	w23, #31, 444888 <feof@plt+0x417a8>
  444814:	ldr	x10, [sp, #192]
  444818:	cbz	x10, 444878 <feof@plt+0x41798>
  44481c:	ldrsb	w23, [x26], #1
  444820:	cmp	w22, #0x40
  444824:	sub	x10, x10, #0x1
  444828:	str	x10, [sp, #192]
  44482c:	b.cc	44480c <feof@plt+0x4172c>  // b.lo, b.ul, b.last
  444830:	cbnz	w8, 44480c <feof@plt+0x4172c>
  444834:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444838:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44483c:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444840:	sub	w5, w26, w28
  444844:	sub	x0, x29, #0xd8
  444848:	mov	w1, #0xc8                  	// #200
  44484c:	add	x2, x2, #0x6df
  444850:	add	x3, x3, #0x798
  444854:	add	x4, x4, #0x474
  444858:	bl	402df0 <snprintf@plt>
  44485c:	sub	x1, x29, #0xd8
  444860:	mov	x0, x20
  444864:	mov	w2, wzr
  444868:	blr	x21
  44486c:	ldr	x9, [sp, #152]
  444870:	mov	w8, #0x1                   	// #1
  444874:	b	44480c <feof@plt+0x4172c>
  444878:	ldr	w8, [sp, #84]
  44487c:	cbz	w8, 4448d0 <feof@plt+0x417f0>
  444880:	mov	x27, xzr
  444884:	b	44488c <feof@plt+0x417ac>
  444888:	ldr	x27, [sp, #192]
  44488c:	mov	x11, xzr
  444890:	mov	x23, xzr
  444894:	ldr	x8, [x9, #96]
  444898:	ldr	x9, [sp, #56]
  44489c:	ldr	x10, [sp, #264]
  4448a0:	add	x8, x8, x9, lsl #5
  4448a4:	str	x10, [x8]
  4448a8:	ldr	x10, [sp, #64]
  4448ac:	add	x9, x9, #0x1
  4448b0:	str	w10, [x8, #8]
  4448b4:	ldr	w10, [sp, #52]
  4448b8:	stp	x11, x23, [x8, #16]
  4448bc:	str	x9, [sp, #56]
  4448c0:	str	w10, [x8, #12]
  4448c4:	ldr	w8, [sp, #84]
  4448c8:	cbz	w8, 444194 <feof@plt+0x410b4>
  4448cc:	b	444e48 <feof@plt+0x41d68>
  4448d0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4448d4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4448d8:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4448dc:	sub	w5, w26, w28
  4448e0:	sub	x0, x29, #0xd8
  4448e4:	mov	w1, #0xc8                  	// #200
  4448e8:	add	x2, x2, #0x6df
  4448ec:	add	x3, x3, #0x6cf
  4448f0:	add	x4, x4, #0x474
  4448f4:	bl	402df0 <snprintf@plt>
  4448f8:	sub	x1, x29, #0xd8
  4448fc:	mov	x0, x20
  444900:	mov	w2, wzr
  444904:	blr	x21
  444908:	ldr	x9, [sp, #152]
  44490c:	mov	w8, #0x1                   	// #1
  444910:	mov	x27, xzr
  444914:	mov	x11, xzr
  444918:	mov	x23, xzr
  44491c:	str	w8, [sp, #84]
  444920:	b	444894 <feof@plt+0x417b4>
  444924:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444928:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44492c:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444930:	sub	w5, w26, w28
  444934:	sub	x0, x29, #0xd8
  444938:	mov	w1, #0xc8                  	// #200
  44493c:	add	x2, x2, #0x6df
  444940:	add	x3, x3, #0x6cf
  444944:	add	x4, x4, #0x474
  444948:	bl	402df0 <snprintf@plt>
  44494c:	sub	x1, x29, #0xd8
  444950:	mov	x0, x20
  444954:	mov	w2, wzr
  444958:	blr	x21
  44495c:	ldr	x8, [sp, #152]
  444960:	adrp	x3, 445000 <feof@plt+0x41f20>
  444964:	mov	w2, #0x20                  	// #32
  444968:	add	x3, x3, #0x628
  44496c:	ldp	x1, x0, [x8, #88]
  444970:	bl	449fb4 <feof@plt+0x46ed4>
  444974:	ldr	x26, [sp, #104]
  444978:	ldp	x8, x9, [sp, #384]
  44497c:	ldp	x23, x22, [sp, #88]
  444980:	cbz	x9, 44499c <feof@plt+0x418bc>
  444984:	add	x11, x8, #0x1
  444988:	sub	x10, x9, #0x1
  44498c:	stp	x11, x10, [sp, #384]
  444990:	ldrb	w9, [x8]
  444994:	mov	x8, x11
  444998:	b	4449f8 <feof@plt+0x41918>
  44499c:	ldr	w9, [sp, #424]
  4449a0:	cbz	w9, 4449b0 <feof@plt+0x418d0>
  4449a4:	mov	x10, xzr
  4449a8:	mov	w9, wzr
  4449ac:	b	4449f8 <feof@plt+0x41918>
  4449b0:	ldr	w9, [sp, #376]
  4449b4:	ldr	x4, [sp, #368]
  4449b8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4449bc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4449c0:	sub	w5, w8, w9
  4449c4:	sub	x0, x29, #0xd8
  4449c8:	mov	w1, #0xc8                  	// #200
  4449cc:	add	x2, x2, #0x6df
  4449d0:	add	x3, x3, #0x6cf
  4449d4:	bl	402df0 <snprintf@plt>
  4449d8:	ldp	x8, x0, [sp, #408]
  4449dc:	sub	x1, x29, #0xd8
  4449e0:	mov	w2, wzr
  4449e4:	blr	x8
  4449e8:	ldp	x8, x10, [sp, #384]
  4449ec:	mov	w11, #0x1                   	// #1
  4449f0:	mov	w9, wzr
  4449f4:	str	w11, [sp, #424]
  4449f8:	ldp	x11, x14, [sp, #144]
  4449fc:	ldr	w13, [sp, #260]
  444a00:	ldr	x12, [sp, #184]
  444a04:	ldp	x1, x3, [sp, #232]
  444a08:	stp	x8, x10, [x14]
  444a0c:	ldr	x10, [sp, #176]
  444a10:	cmp	w13, #0x0
  444a14:	str	w9, [x14, #48]
  444a18:	mov	w9, #0xc                   	// #12
  444a1c:	sub	x8, x8, x10
  444a20:	ldr	w10, [sp, #140]
  444a24:	add	x11, x11, x12
  444a28:	stp	x8, x12, [x14, #16]
  444a2c:	ldr	x4, [sp, #248]
  444a30:	stp	w10, w13, [x14, #40]
  444a34:	mov	w10, #0x4                   	// #4
  444a38:	csel	x9, x10, x9, eq  // eq = none
  444a3c:	add	x8, x11, x9
  444a40:	str	x8, [sp, #184]
  444a44:	str	x8, [x14, #32]
  444a48:	add	x8, sp, #0x16c
  444a4c:	str	x8, [sp, #40]
  444a50:	add	x8, sp, #0x148
  444a54:	stp	x14, x8, [sp, #24]
  444a58:	ldp	x8, x5, [sp, #208]
  444a5c:	ldr	x6, [sp, #224]
  444a60:	ldr	w7, [sp, #256]
  444a64:	movi	v0.2d, #0x0
  444a68:	add	x2, sp, #0x170
  444a6c:	mov	x0, x19
  444a70:	stur	q0, [x14, #56]
  444a74:	stur	q0, [x14, #72]
  444a78:	stur	q0, [x14, #104]
  444a7c:	stur	q0, [x14, #120]
  444a80:	stp	x21, x20, [sp, #8]
  444a84:	str	x8, [sp]
  444a88:	bl	445014 <feof@plt+0x41f34>
  444a8c:	cbz	w0, 444af4 <feof@plt+0x41a14>
  444a90:	ldr	w8, [sp, #424]
  444a94:	cbnz	w8, 444af4 <feof@plt+0x41a14>
  444a98:	ldr	w8, [sp, #512]
  444a9c:	ldp	x11, x12, [sp, #120]
  444aa0:	ldp	x2, x3, [sp, #160]
  444aa4:	cbnz	x12, 443b50 <feof@plt+0x40a70>
  444aa8:	ldr	x28, [sp, #272]
  444aac:	cbnz	w8, 444af8 <feof@plt+0x41a18>
  444ab0:	b	444bec <feof@plt+0x41b0c>
  444ab4:	ldr	w8, [sp, #280]
  444ab8:	cbnz	w8, 444af4 <feof@plt+0x41a14>
  444abc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444ac0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444ac4:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  444ac8:	sub	w5, w25, w28
  444acc:	add	x2, x2, #0x6df
  444ad0:	add	x3, x3, #0x6cf
  444ad4:	add	x4, x4, #0x474
  444ad8:	sub	x0, x29, #0xd8
  444adc:	mov	w1, #0xc8                  	// #200
  444ae0:	bl	402df0 <snprintf@plt>
  444ae4:	sub	x1, x29, #0xd8
  444ae8:	mov	x0, x20
  444aec:	mov	w2, wzr
  444af0:	blr	x21
  444af4:	ldr	x28, [sp, #272]
  444af8:	cbz	x28, 444bb8 <feof@plt+0x41ad8>
  444afc:	ldr	x22, [sp, #432]
  444b00:	mov	x23, xzr
  444b04:	b	444b44 <feof@plt+0x41a64>
  444b08:	mov	x2, xzr
  444b0c:	mov	x0, x19
  444b10:	mov	x3, x21
  444b14:	mov	x4, x20
  444b18:	bl	4400b0 <feof@plt+0x3cfd0>
  444b1c:	stp	xzr, xzr, [x24]
  444b20:	ldr	x1, [x22, x23, lsl #3]
  444b24:	mov	w2, #0x88                  	// #136
  444b28:	mov	x0, x19
  444b2c:	mov	x3, x21
  444b30:	mov	x4, x20
  444b34:	bl	4400b0 <feof@plt+0x3cfd0>
  444b38:	add	x23, x23, #0x1
  444b3c:	cmp	x23, x28
  444b40:	b.eq	444b98 <feof@plt+0x41ab8>  // b.none
  444b44:	ldr	x25, [x22, x23, lsl #3]
  444b48:	mov	x24, x25
  444b4c:	ldr	x8, [x24, #88]!
  444b50:	ldr	x1, [x25, #96]
  444b54:	cbz	x8, 444b08 <feof@plt+0x41a28>
  444b58:	mov	x26, xzr
  444b5c:	mov	x27, xzr
  444b60:	add	x8, x1, x26
  444b64:	ldp	x9, x1, [x8, #16]
  444b68:	mov	x0, x19
  444b6c:	mov	x3, x21
  444b70:	mov	x4, x20
  444b74:	lsl	x2, x9, #3
  444b78:	bl	4400b0 <feof@plt+0x3cfd0>
  444b7c:	ldp	x8, x1, [x25, #88]
  444b80:	add	x27, x27, #0x1
  444b84:	add	x26, x26, #0x20
  444b88:	cmp	x27, x8
  444b8c:	b.cc	444b60 <feof@plt+0x41a80>  // b.lo, b.ul, b.last
  444b90:	lsl	x2, x8, #5
  444b94:	b	444b0c <feof@plt+0x41a2c>
  444b98:	ldp	x8, x9, [sp, #440]
  444b9c:	add	x1, sp, #0x1b0
  444ba0:	mov	x0, x19
  444ba4:	mov	x2, x21
  444ba8:	add	x8, x9, x8
  444bac:	mov	x3, x20
  444bb0:	stp	xzr, x8, [sp, #440]
  444bb4:	bl	4402d8 <feof@plt+0x3d1f8>
  444bb8:	ldr	x8, [sp, #352]
  444bbc:	cbz	x8, 444cfc <feof@plt+0x41c1c>
  444bc0:	ldp	x8, x9, [sp, #336]
  444bc4:	add	x1, sp, #0x148
  444bc8:	mov	x0, x19
  444bcc:	mov	x2, x21
  444bd0:	add	x8, x9, x8
  444bd4:	mov	x3, x20
  444bd8:	stp	xzr, x8, [sp, #336]
  444bdc:	bl	4402d8 <feof@plt+0x3d1f8>
  444be0:	str	xzr, [sp, #352]
  444be4:	b	444cfc <feof@plt+0x41c1c>
  444be8:	mov	x28, xzr
  444bec:	ldr	q0, [sp, #432]
  444bf0:	ldr	x8, [sp, #448]
  444bf4:	mov	x25, x2
  444bf8:	mov	x24, x3
  444bfc:	add	x1, sp, #0x148
  444c00:	mov	x0, x19
  444c04:	mov	x2, x21
  444c08:	mov	x3, x20
  444c0c:	mov	x27, x23
  444c10:	mov	x26, x22
  444c14:	str	q0, [sp, #288]
  444c18:	stp	x8, x28, [sp, #304]
  444c1c:	bl	4402d8 <feof@plt+0x3d1f8>
  444c20:	cbz	w0, 444cfc <feof@plt+0x41c1c>
  444c24:	add	x1, sp, #0x120
  444c28:	mov	x0, x19
  444c2c:	mov	x2, x21
  444c30:	mov	x3, x20
  444c34:	bl	4402d8 <feof@plt+0x3d1f8>
  444c38:	cbz	w0, 444cfc <feof@plt+0x41c1c>
  444c3c:	ldr	x22, [sp, #328]
  444c40:	ldr	x23, [sp, #352]
  444c44:	ldr	x8, [sp, #312]
  444c48:	ldr	x28, [sp, #288]
  444c4c:	adrp	x3, 444000 <feof@plt+0x40f20>
  444c50:	add	x3, x3, #0xfa4
  444c54:	mov	w2, #0x18                  	// #24
  444c58:	mov	x0, x22
  444c5c:	mov	x1, x23
  444c60:	str	x8, [sp, #280]
  444c64:	bl	449fb4 <feof@plt+0x46ed4>
  444c68:	mov	w1, #0xa0                  	// #160
  444c6c:	mov	x0, x19
  444c70:	mov	x2, x21
  444c74:	mov	x3, x20
  444c78:	bl	43feec <feof@plt+0x3ce0c>
  444c7c:	cbz	x0, 444cfc <feof@plt+0x41c1c>
  444c80:	ldr	x10, [sp, #208]
  444c84:	ldp	x8, x9, [x29, #160]
  444c88:	movi	v0.2d, #0x0
  444c8c:	stp	x23, x28, [x0, #32]
  444c90:	stp	xzr, x10, [x0]
  444c94:	ldr	x10, [sp, #232]
  444c98:	stp	x24, x27, [x0, #64]
  444c9c:	stp	q0, q0, [x0, #128]
  444ca0:	stp	x10, x22, [x0, #16]
  444ca4:	ldr	x10, [sp, #280]
  444ca8:	stp	x10, x25, [x0, #48]
  444cac:	ldr	x10, [sp, #216]
  444cb0:	stp	x26, x10, [x0, #80]
  444cb4:	ldr	x10, [sp, #224]
  444cb8:	str	x10, [x0, #96]
  444cbc:	ldr	x10, [sp, #240]
  444cc0:	str	x10, [x0, #104]
  444cc4:	ldr	x10, [sp, #248]
  444cc8:	str	x10, [x0, #112]
  444ccc:	ldr	w10, [sp, #256]
  444cd0:	str	w10, [x0, #120]
  444cd4:	cbz	x9, 444cdc <feof@plt+0x41bfc>
  444cd8:	str	x0, [x9]
  444cdc:	ldr	w10, [x19, #8]
  444ce0:	add	x9, x19, #0x20
  444ce4:	cbnz	w10, 444d24 <feof@plt+0x41c44>
  444ce8:	mov	x10, x9
  444cec:	ldr	x9, [x9]
  444cf0:	cbnz	x9, 444ce8 <feof@plt+0x41c08>
  444cf4:	str	x0, [x10]
  444cf8:	b	444d44 <feof@plt+0x41c64>
  444cfc:	mov	w0, wzr
  444d00:	add	sp, sp, #0x2e0
  444d04:	ldp	x20, x19, [sp, #80]
  444d08:	ldp	x22, x21, [sp, #64]
  444d0c:	ldp	x24, x23, [sp, #48]
  444d10:	ldp	x26, x25, [sp, #32]
  444d14:	ldp	x28, x27, [sp, #16]
  444d18:	ldp	x29, x30, [sp], #96
  444d1c:	ret
  444d20:	clrex
  444d24:	mov	x11, x9
  444d28:	mov	x10, x11
  444d2c:	ldar	x11, [x11]
  444d30:	cbnz	x11, 444d28 <feof@plt+0x41c48>
  444d34:	ldaxr	x11, [x10]
  444d38:	cbnz	x11, 444d20 <feof@plt+0x41c40>
  444d3c:	stlxr	w11, x0, [x10]
  444d40:	cbnz	w11, 444d34 <feof@plt+0x41c54>
  444d44:	adrp	x9, 444000 <feof@plt+0x40f20>
  444d48:	add	x9, x9, #0xec0
  444d4c:	mov	w0, #0x1                   	// #1
  444d50:	str	x9, [x8]
  444d54:	b	444d00 <feof@plt+0x41c20>
  444d58:	ldr	w8, [sp, #512]
  444d5c:	cbnz	w8, 444af4 <feof@plt+0x41a14>
  444d60:	ldr	w8, [sp, #472]
  444d64:	ldr	w9, [sp, #464]
  444d68:	ldr	x4, [sp, #456]
  444d6c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444d70:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444d74:	sub	w5, w8, w9
  444d78:	add	x2, x2, #0x6df
  444d7c:	add	x3, x3, #0x6cf
  444d80:	sub	x0, x29, #0xd8
  444d84:	mov	w1, #0xc8                  	// #200
  444d88:	bl	402df0 <snprintf@plt>
  444d8c:	ldp	x8, x0, [sp, #496]
  444d90:	sub	x1, x29, #0xd8
  444d94:	mov	w2, wzr
  444d98:	blr	x8
  444d9c:	ldr	x28, [sp, #272]
  444da0:	mov	w8, #0x1                   	// #1
  444da4:	str	w8, [sp, #512]
  444da8:	b	444af8 <feof@plt+0x41a18>
  444dac:	ldr	w9, [sp, #424]
  444db0:	cbnz	w9, 444e00 <feof@plt+0x41d20>
  444db4:	ldr	w9, [sp, #376]
  444db8:	ldr	x4, [sp, #368]
  444dbc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444dc0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444dc4:	sub	w5, w8, w9
  444dc8:	add	x2, x2, #0x6df
  444dcc:	add	x3, x3, #0x6cf
  444dd0:	sub	x0, x29, #0xd8
  444dd4:	mov	w1, #0xc8                  	// #200
  444dd8:	bl	402df0 <snprintf@plt>
  444ddc:	ldp	x8, x0, [sp, #408]
  444de0:	sub	x1, x29, #0xd8
  444de4:	mov	w2, wzr
  444de8:	blr	x8
  444dec:	ldr	x8, [sp, #384]
  444df0:	mov	w9, #0x1                   	// #1
  444df4:	str	w9, [sp, #424]
  444df8:	b	444e00 <feof@plt+0x41d20>
  444dfc:	mov	x8, x9
  444e00:	ldr	w9, [sp, #376]
  444e04:	ldr	x4, [sp, #368]
  444e08:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  444e0c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  444e10:	sub	w5, w8, w9
  444e14:	add	x2, x2, #0x6df
  444e18:	add	x3, x3, #0x6b4
  444e1c:	sub	x0, x29, #0xd8
  444e20:	mov	w1, #0xc8                  	// #200
  444e24:	bl	402df0 <snprintf@plt>
  444e28:	ldp	x8, x0, [sp, #408]
  444e2c:	sub	x1, x29, #0xd8
  444e30:	mov	w2, wzr
  444e34:	blr	x8
  444e38:	b	444af4 <feof@plt+0x41a14>
  444e3c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  444e40:	add	x1, x1, #0x6ee
  444e44:	b	444ae8 <feof@plt+0x41a08>
  444e48:	ldr	x9, [sp, #152]
  444e4c:	ldp	x8, x1, [x9, #88]
  444e50:	cbz	x8, 444e9c <feof@plt+0x41dbc>
  444e54:	ldr	x28, [sp, #272]
  444e58:	mov	x22, xzr
  444e5c:	mov	x23, xzr
  444e60:	add	x8, x1, x22
  444e64:	ldp	x9, x1, [x8, #16]
  444e68:	mov	x0, x19
  444e6c:	mov	x3, x21
  444e70:	mov	x4, x20
  444e74:	lsl	x2, x9, #3
  444e78:	bl	4400b0 <feof@plt+0x3cfd0>
  444e7c:	ldr	x9, [sp, #152]
  444e80:	add	x23, x23, #0x1
  444e84:	add	x22, x22, #0x20
  444e88:	ldp	x8, x1, [x9, #88]
  444e8c:	cmp	x23, x8
  444e90:	b.cc	444e60 <feof@plt+0x41d80>  // b.lo, b.ul, b.last
  444e94:	lsl	x2, x8, #5
  444e98:	b	444ea4 <feof@plt+0x41dc4>
  444e9c:	ldr	x28, [sp, #272]
  444ea0:	mov	x2, xzr
  444ea4:	mov	x0, x19
  444ea8:	mov	x3, x21
  444eac:	mov	x4, x20
  444eb0:	bl	4400b0 <feof@plt+0x3cfd0>
  444eb4:	ldr	x8, [sp, #200]
  444eb8:	stp	xzr, xzr, [x8]
  444ebc:	b	444af8 <feof@plt+0x41a18>
  444ec0:	sub	sp, sp, #0x50
  444ec4:	stp	x29, x30, [sp, #16]
  444ec8:	stp	x24, x23, [sp, #32]
  444ecc:	stp	x22, x21, [sp, #48]
  444ed0:	stp	x20, x19, [sp, #64]
  444ed4:	add	x29, sp, #0x10
  444ed8:	ldr	w8, [x0, #8]
  444edc:	mov	x20, x4
  444ee0:	mov	x22, x3
  444ee4:	mov	x19, x2
  444ee8:	mov	x23, x0
  444eec:	mov	x21, x1
  444ef0:	cbz	w8, 444f38 <feof@plt+0x41e58>
  444ef4:	add	x8, x23, #0x20
  444ef8:	ldar	x24, [x8]
  444efc:	cbz	x24, 444f74 <feof@plt+0x41e94>
  444f00:	sub	x6, x29, #0x4
  444f04:	mov	x0, x23
  444f08:	mov	x1, x24
  444f0c:	mov	x2, x21
  444f10:	mov	x3, x19
  444f14:	mov	x4, x22
  444f18:	mov	x5, x20
  444f1c:	bl	446a30 <feof@plt+0x43950>
  444f20:	ldur	w8, [x29, #-4]
  444f24:	orr	w8, w8, w0
  444f28:	cbnz	w8, 444f8c <feof@plt+0x41eac>
  444f2c:	ldar	x24, [x24]
  444f30:	cbnz	x24, 444f00 <feof@plt+0x41e20>
  444f34:	b	444f74 <feof@plt+0x41e94>
  444f38:	ldr	x24, [x23, #32]
  444f3c:	cbz	x24, 444f74 <feof@plt+0x41e94>
  444f40:	sub	x6, x29, #0x4
  444f44:	mov	x0, x23
  444f48:	mov	x1, x24
  444f4c:	mov	x2, x21
  444f50:	mov	x3, x19
  444f54:	mov	x4, x22
  444f58:	mov	x5, x20
  444f5c:	bl	446a30 <feof@plt+0x43950>
  444f60:	ldur	w8, [x29, #-4]
  444f64:	orr	w8, w8, w0
  444f68:	cbnz	w8, 444f8c <feof@plt+0x41eac>
  444f6c:	ldr	x24, [x24]
  444f70:	cbnz	x24, 444f40 <feof@plt+0x41e60>
  444f74:	mov	x0, x20
  444f78:	mov	x1, x21
  444f7c:	mov	x2, xzr
  444f80:	mov	w3, wzr
  444f84:	mov	x4, xzr
  444f88:	blr	x19
  444f8c:	ldp	x20, x19, [sp, #64]
  444f90:	ldp	x22, x21, [sp, #48]
  444f94:	ldp	x24, x23, [sp, #32]
  444f98:	ldp	x29, x30, [sp, #16]
  444f9c:	add	sp, sp, #0x50
  444fa0:	ret
  444fa4:	ldr	x8, [x0]
  444fa8:	ldr	x9, [x1]
  444fac:	cmp	x8, x9
  444fb0:	b.cs	444fbc <feof@plt+0x41edc>  // b.hs, b.nlast
  444fb4:	mov	w0, #0xffffffff            	// #-1
  444fb8:	ret
  444fbc:	b.ls	444fc8 <feof@plt+0x41ee8>  // b.plast
  444fc0:	mov	w0, #0x1                   	// #1
  444fc4:	ret
  444fc8:	ldr	x8, [x0, #8]
  444fcc:	ldr	x9, [x1, #8]
  444fd0:	cmp	x8, x9
  444fd4:	b.cs	444fe0 <feof@plt+0x41f00>  // b.hs, b.nlast
  444fd8:	mov	w0, #0x1                   	// #1
  444fdc:	ret
  444fe0:	b.ls	444fec <feof@plt+0x41f0c>  // b.plast
  444fe4:	mov	w0, #0xffffffff            	// #-1
  444fe8:	ret
  444fec:	ldr	x8, [x0, #16]
  444ff0:	ldr	x9, [x1, #16]
  444ff4:	ldr	x8, [x8, #56]
  444ff8:	ldr	x9, [x9, #56]
  444ffc:	cmp	x8, x9
  445000:	b.ge	44500c <feof@plt+0x41f2c>  // b.tcont
  445004:	mov	w0, #0xffffffff            	// #-1
  445008:	ret
  44500c:	cset	w0, gt
  445010:	ret
  445014:	sub	sp, sp, #0x1d0
  445018:	stp	x29, x30, [sp, #368]
  44501c:	stp	x28, x27, [sp, #384]
  445020:	stp	x26, x25, [sp, #400]
  445024:	stp	x24, x23, [sp, #416]
  445028:	stp	x22, x21, [sp, #432]
  44502c:	stp	x20, x19, [sp, #448]
  445030:	add	x29, sp, #0x170
  445034:	ldr	x8, [x2, #24]
  445038:	cbz	x8, 4454ec <feof@plt+0x4240c>
  44503c:	ldr	x9, [x29, #136]
  445040:	ldp	x27, x20, [x29, #120]
  445044:	ldr	x28, [x29, #96]
  445048:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  44504c:	str	x9, [sp, #128]
  445050:	ldr	x9, [x29, #112]
  445054:	mov	w26, w7
  445058:	mov	x23, x4
  44505c:	mov	x24, x3
  445060:	str	x9, [sp, #144]
  445064:	ldr	x9, [x29, #104]
  445068:	mov	x19, x2
  44506c:	add	x21, x21, #0x798
  445070:	stp	x0, x1, [sp, #112]
  445074:	stp	x5, x6, [sp, #96]
  445078:	str	x9, [sp, #152]
  44507c:	str	x20, [sp, #136]
  445080:	ldr	x10, [x19, #16]
  445084:	cbz	x8, 4454f4 <feof@plt+0x42414>
  445088:	mov	w9, wzr
  44508c:	mov	w22, wzr
  445090:	mov	x20, xzr
  445094:	add	x11, x10, #0x1
  445098:	sub	x8, x8, #0x1
  44509c:	stp	x11, x8, [x19, #16]
  4450a0:	ldrb	w25, [x10]
  4450a4:	cmp	w22, #0x3f
  4450a8:	b.hi	4450c4 <feof@plt+0x41fe4>  // b.pmore
  4450ac:	and	x8, x25, #0x7f
  4450b0:	lsl	x8, x8, x22
  4450b4:	orr	x20, x8, x20
  4450b8:	sxtb	w8, w25
  4450bc:	tbnz	w8, #31, 4450d0 <feof@plt+0x41ff0>
  4450c0:	b	445120 <feof@plt+0x42040>
  4450c4:	cbz	w9, 4450e0 <feof@plt+0x42000>
  4450c8:	sxtb	w8, w25
  4450cc:	tbz	w8, #31, 445120 <feof@plt+0x42040>
  4450d0:	ldp	x10, x8, [x19, #16]
  4450d4:	add	w22, w22, #0x7
  4450d8:	cbnz	x8, 445094 <feof@plt+0x41fb4>
  4450dc:	b	4454f4 <feof@plt+0x42414>
  4450e0:	ldr	w8, [x19, #8]
  4450e4:	ldr	x4, [x19]
  4450e8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4450ec:	add	x0, sp, #0xa0
  4450f0:	sub	w5, w11, w8
  4450f4:	mov	w1, #0xc8                  	// #200
  4450f8:	add	x2, x2, #0x6df
  4450fc:	mov	x3, x21
  445100:	bl	402df0 <snprintf@plt>
  445104:	ldp	x8, x0, [x19, #40]
  445108:	add	x1, sp, #0xa0
  44510c:	mov	w2, wzr
  445110:	blr	x8
  445114:	mov	w9, #0x1                   	// #1
  445118:	sxtb	w8, w25
  44511c:	tbnz	w8, #31, 4450d0 <feof@plt+0x41ff0>
  445120:	cbz	x20, 4454ec <feof@plt+0x4240c>
  445124:	ldr	x8, [x27, #88]
  445128:	sub	x10, x20, #0x1
  44512c:	cmp	x10, x8
  445130:	b.cs	445300 <feof@plt+0x42220>  // b.hs, b.nlast
  445134:	ldr	x9, [x27, #96]
  445138:	add	x25, x9, x10, lsl #5
  44513c:	ldr	x10, [x25]
  445140:	cmp	x10, x20
  445144:	b.ne	445308 <feof@plt+0x42228>  // b.any
  445148:	cbz	x25, 445554 <feof@plt+0x42474>
  44514c:	ldr	x9, [sp, #128]
  445150:	cbz	x9, 44515c <feof@plt+0x4207c>
  445154:	ldr	w8, [x25, #8]
  445158:	str	w8, [x9]
  44515c:	ldr	x8, [x25, #16]
  445160:	str	w26, [sp, #60]
  445164:	cbz	x8, 445344 <feof@plt+0x42264>
  445168:	str	xzr, [sp, #88]
  44516c:	stp	xzr, xzr, [sp, #64]
  445170:	ldr	x8, [x25, #24]
  445174:	mov	x26, xzr
  445178:	mov	x22, xzr
  44517c:	mov	x20, xzr
  445180:	str	wzr, [sp, #56]
  445184:	str	wzr, [sp, #84]
  445188:	b	4451bc <feof@plt+0x420dc>
  44518c:	ldr	w9, [sp, #160]
  445190:	ldr	x10, [sp, #168]
  445194:	cmp	w9, #0x1
  445198:	ldr	w9, [sp, #92]
  44519c:	csel	x22, x10, x22, eq  // eq = none
  4451a0:	csinc	w9, w9, wzr, ne  // ne = any
  4451a4:	str	w9, [sp, #92]
  4451a8:	ldr	x9, [x25, #16]
  4451ac:	add	x20, x20, #0x1
  4451b0:	add	x26, x26, #0x8
  4451b4:	cmp	x20, x9
  4451b8:	b.cs	445358 <feof@plt+0x42278>  // b.hs, b.nlast
  4451bc:	add	x8, x8, x26
  4451c0:	ldp	w3, w2, [x27, #40]
  4451c4:	ldr	w0, [x8, #4]
  4451c8:	ldr	w4, [x27, #48]
  4451cc:	add	x8, sp, #0xa0
  4451d0:	mov	x1, x19
  4451d4:	mov	x5, x24
  4451d8:	mov	x6, x23
  4451dc:	mov	x7, x28
  4451e0:	str	x8, [sp]
  4451e4:	bl	445640 <feof@plt+0x42560>
  4451e8:	cbz	w0, 445554 <feof@plt+0x42474>
  4451ec:	ldr	x8, [x25, #24]
  4451f0:	ldr	w10, [x8, x26]
  4451f4:	sub	w9, w10, #0x3
  4451f8:	cmp	w9, #0x18
  4451fc:	b.hi	44523c <feof@plt+0x4215c>  // b.pmore
  445200:	adrp	x12, 472000 <_obstack_memory_used@@Base+0x10838>
  445204:	add	x12, x12, #0x568
  445208:	adr	x10, 44518c <feof@plt+0x420ac>
  44520c:	ldrb	w11, [x12, x9]
  445210:	add	x10, x10, x11, lsl #2
  445214:	br	x10
  445218:	ldr	w9, [x25, #8]
  44521c:	cmp	w9, #0x11
  445220:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  445224:	ldr	w9, [sp, #160]
  445228:	cmp	w9, #0x4
  44522c:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  445230:	ldr	x9, [sp, #168]
  445234:	str	x9, [x27, #64]
  445238:	b	4451a8 <feof@plt+0x420c8>
  44523c:	cmp	w10, #0x55
  445240:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  445244:	ldr	w9, [sp, #160]
  445248:	cmp	w9, #0x8
  44524c:	b.eq	445258 <feof@plt+0x42178>  // b.none
  445250:	cmp	w9, #0x2
  445254:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  445258:	ldr	x9, [sp, #168]
  44525c:	str	x9, [sp, #64]
  445260:	mov	w9, #0x1                   	// #1
  445264:	str	w9, [sp, #88]
  445268:	b	4451a8 <feof@plt+0x420c8>
  44526c:	ldr	w9, [x25, #8]
  445270:	cmp	w9, #0x11
  445274:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  445278:	ldr	w9, [sp, #160]
  44527c:	cmp	w9, #0x8
  445280:	b.eq	44528c <feof@plt+0x421ac>  // b.none
  445284:	cmp	w9, #0x2
  445288:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  44528c:	ldr	x9, [sp, #168]
  445290:	str	x9, [x27, #56]
  445294:	b	4451a8 <feof@plt+0x420c8>
  445298:	ldr	w9, [sp, #160]
  44529c:	cmp	w9, #0x2
  4452a0:	b.eq	4452e4 <feof@plt+0x42204>  // b.none
  4452a4:	cmp	w9, #0x1
  4452a8:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  4452ac:	ldr	x9, [sp, #168]
  4452b0:	str	x9, [sp, #72]
  4452b4:	mov	w9, #0x1                   	// #1
  4452b8:	str	w9, [sp, #84]
  4452bc:	b	4451a8 <feof@plt+0x420c8>
  4452c0:	ldr	w9, [x25, #8]
  4452c4:	cmp	w9, #0x11
  4452c8:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  4452cc:	ldr	w9, [sp, #160]
  4452d0:	cmp	w9, #0x4
  4452d4:	b.ne	4451a8 <feof@plt+0x420c8>  // b.any
  4452d8:	ldr	x9, [sp, #168]
  4452dc:	str	x9, [x27, #72]
  4452e0:	b	4451a8 <feof@plt+0x420c8>
  4452e4:	ldr	x9, [sp, #168]
  4452e8:	str	x9, [sp, #72]
  4452ec:	mov	w9, #0x1                   	// #1
  4452f0:	str	w9, [sp, #84]
  4452f4:	mov	w9, #0x1                   	// #1
  4452f8:	str	w9, [sp, #56]
  4452fc:	b	4451a8 <feof@plt+0x420c8>
  445300:	cbz	x8, 445540 <feof@plt+0x42460>
  445304:	ldr	x9, [x27, #96]
  445308:	mov	x10, xzr
  44530c:	b	44531c <feof@plt+0x4223c>
  445310:	cmp	x10, x11
  445314:	mov	x8, x11
  445318:	b.cs	445540 <feof@plt+0x42460>  // b.hs, b.nlast
  44531c:	add	x11, x8, x10
  445320:	lsr	x11, x11, #1
  445324:	add	x25, x9, x11, lsl #5
  445328:	ldr	x12, [x25]
  44532c:	cmp	x12, x20
  445330:	b.hi	445310 <feof@plt+0x42230>  // b.pmore
  445334:	b.cs	445148 <feof@plt+0x42068>  // b.hs, b.nlast
  445338:	add	x10, x11, #0x1
  44533c:	mov	x11, x8
  445340:	b	445310 <feof@plt+0x42230>
  445344:	stp	xzr, xzr, [sp, #64]
  445348:	str	wzr, [sp, #84]
  44534c:	str	wzr, [sp, #56]
  445350:	str	xzr, [sp, #88]
  445354:	mov	x22, xzr
  445358:	ldr	w8, [x25, #8]
  44535c:	ldr	w26, [sp, #60]
  445360:	cmp	w8, #0x2e
  445364:	b.eq	445370 <feof@plt+0x42290>  // b.none
  445368:	cmp	w8, #0x11
  44536c:	b.ne	44548c <feof@plt+0x423ac>  // b.any
  445370:	ldr	w8, [sp, #88]
  445374:	cbz	w8, 4453b4 <feof@plt+0x422d4>
  445378:	ldr	x8, [sp, #136]
  44537c:	ldp	x0, x1, [sp, #112]
  445380:	ldr	x3, [sp, #64]
  445384:	ldp	x6, x7, [sp, #96]
  445388:	str	x8, [sp, #16]
  44538c:	ldr	x8, [sp, #144]
  445390:	mov	x2, x27
  445394:	mov	x4, x22
  445398:	mov	w5, w26
  44539c:	str	x8, [sp, #8]
  4453a0:	ldr	x8, [sp, #152]
  4453a4:	str	x8, [sp]
  4453a8:	bl	446590 <feof@plt+0x434b0>
  4453ac:	cbnz	w0, 445468 <feof@plt+0x42388>
  4453b0:	b	445554 <feof@plt+0x42474>
  4453b4:	ldr	w8, [sp, #84]
  4453b8:	cbz	w8, 445468 <feof@plt+0x42388>
  4453bc:	ldr	w8, [sp, #92]
  4453c0:	cbz	w8, 445468 <feof@plt+0x42388>
  4453c4:	ldr	w8, [sp, #56]
  4453c8:	ldr	x10, [sp, #120]
  4453cc:	ldr	x11, [sp, #72]
  4453d0:	cmp	w8, #0x0
  4453d4:	ldr	x8, [sp, #136]
  4453d8:	csel	x9, xzr, x22, eq  // eq = none
  4453dc:	add	x22, x22, x10
  4453e0:	add	x10, x11, x10
  4453e4:	ldr	x8, [x8, #24]
  4453e8:	add	x13, x10, x9
  4453ec:	cbz	x8, 445430 <feof@plt+0x42350>
  4453f0:	ldr	x9, [sp, #136]
  4453f4:	sub	x11, x8, #0x1
  4453f8:	mov	w8, #0x18                  	// #24
  4453fc:	ldr	x10, [x9]
  445400:	madd	x8, x11, x8, x10
  445404:	ldr	x9, [x8, #8]!
  445408:	cmp	x22, x9
  44540c:	b.eq	44541c <feof@plt+0x4233c>  // b.none
  445410:	add	x12, x9, #0x1
  445414:	cmp	x22, x12
  445418:	b.ne	445430 <feof@plt+0x42350>  // b.any
  44541c:	mov	w12, #0x18                  	// #24
  445420:	madd	x10, x11, x12, x10
  445424:	ldr	x10, [x10, #16]
  445428:	cmp	x10, x27
  44542c:	b.eq	4454dc <feof@plt+0x423fc>  // b.none
  445430:	ldr	x20, [sp, #136]
  445434:	ldr	x0, [sp, #112]
  445438:	ldp	x3, x2, [sp, #144]
  44543c:	mov	w1, #0x18                  	// #24
  445440:	mov	x4, x20
  445444:	str	x13, [sp, #72]
  445448:	bl	4401c0 <feof@plt+0x3d0e0>
  44544c:	cbz	x0, 445554 <feof@plt+0x42474>
  445450:	ldr	x8, [sp, #72]
  445454:	str	x27, [x0, #16]
  445458:	stp	x22, x8, [x0]
  44545c:	ldr	x8, [x20, #24]
  445460:	add	x8, x8, #0x1
  445464:	str	x8, [x20, #24]
  445468:	ldr	w8, [x25, #8]
  44546c:	cmp	w8, #0x11
  445470:	b.ne	44548c <feof@plt+0x423ac>  // b.any
  445474:	ldr	w8, [sp, #88]
  445478:	cbnz	w8, 4454ec <feof@plt+0x4240c>
  44547c:	ldr	w8, [sp, #84]
  445480:	cbz	w8, 44548c <feof@plt+0x423ac>
  445484:	ldr	w8, [sp, #92]
  445488:	cbnz	w8, 4454ec <feof@plt+0x4240c>
  44548c:	ldr	w8, [x25, #12]
  445490:	ldr	x20, [sp, #136]
  445494:	cbz	w8, 4454cc <feof@plt+0x423ec>
  445498:	ldr	x8, [sp, #144]
  44549c:	ldp	x0, x1, [sp, #112]
  4454a0:	ldp	x5, x6, [sp, #96]
  4454a4:	mov	x2, x19
  4454a8:	stp	x8, x27, [sp, #16]
  4454ac:	ldr	x8, [sp, #152]
  4454b0:	mov	x3, x24
  4454b4:	mov	x4, x23
  4454b8:	mov	w7, w26
  4454bc:	stp	x20, xzr, [sp, #32]
  4454c0:	stp	x28, x8, [sp]
  4454c4:	bl	445014 <feof@plt+0x41f34>
  4454c8:	cbz	w0, 445554 <feof@plt+0x42474>
  4454cc:	ldr	x8, [x19, #24]
  4454d0:	mov	w22, #0x1                   	// #1
  4454d4:	cbnz	x8, 445080 <feof@plt+0x41fa0>
  4454d8:	b	445558 <feof@plt+0x42478>
  4454dc:	cmp	x13, x9
  4454e0:	b.ls	445468 <feof@plt+0x42388>  // b.plast
  4454e4:	str	x13, [x8]
  4454e8:	b	445468 <feof@plt+0x42388>
  4454ec:	mov	w22, #0x1                   	// #1
  4454f0:	b	445558 <feof@plt+0x42478>
  4454f4:	ldr	w8, [x19, #56]
  4454f8:	mov	w22, #0x1                   	// #1
  4454fc:	cbnz	w8, 445558 <feof@plt+0x42478>
  445500:	ldr	w8, [x19, #8]
  445504:	ldr	x4, [x19]
  445508:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  44550c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  445510:	sub	w5, w10, w8
  445514:	add	x2, x2, #0x6df
  445518:	add	x3, x3, #0x6cf
  44551c:	add	x0, sp, #0xa0
  445520:	mov	w1, #0xc8                  	// #200
  445524:	bl	402df0 <snprintf@plt>
  445528:	ldp	x8, x0, [x19, #40]
  44552c:	add	x1, sp, #0xa0
  445530:	mov	w2, wzr
  445534:	blr	x8
  445538:	str	w22, [x19, #56]
  44553c:	b	445558 <feof@plt+0x42478>
  445540:	ldp	x0, x8, [sp, #144]
  445544:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  445548:	add	x1, x1, #0x709
  44554c:	mov	w2, wzr
  445550:	blr	x8
  445554:	mov	w22, wzr
  445558:	mov	w0, w22
  44555c:	ldp	x20, x19, [sp, #448]
  445560:	ldp	x22, x21, [sp, #432]
  445564:	ldp	x24, x23, [sp, #416]
  445568:	ldp	x26, x25, [sp, #400]
  44556c:	ldp	x28, x27, [sp, #384]
  445570:	ldp	x29, x30, [sp, #368]
  445574:	add	sp, sp, #0x1d0
  445578:	ret
  44557c:	sub	sp, sp, #0xf0
  445580:	stp	x29, x30, [sp, #208]
  445584:	str	x19, [sp, #224]
  445588:	add	x29, sp, #0xd0
  44558c:	ldp	x8, x9, [x0, #16]
  445590:	mov	x19, x0
  445594:	cmp	x9, #0x7
  445598:	b.hi	4455ac <feof@plt+0x424cc>  // b.pmore
  44559c:	ldr	w9, [x19, #56]
  4455a0:	cbz	w9, 4455cc <feof@plt+0x424ec>
  4455a4:	mov	x0, xzr
  4455a8:	b	445618 <feof@plt+0x42538>
  4455ac:	ldr	w10, [x19, #32]
  4455b0:	add	x11, x8, #0x8
  4455b4:	sub	x9, x9, #0x8
  4455b8:	stp	x11, x9, [x19, #16]
  4455bc:	cbz	w10, 445614 <feof@plt+0x42534>
  4455c0:	ldr	x8, [x8]
  4455c4:	rev	x0, x8
  4455c8:	b	445618 <feof@plt+0x42538>
  4455cc:	ldr	w9, [x19, #8]
  4455d0:	ldr	x4, [x19]
  4455d4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4455d8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4455dc:	sub	w5, w8, w9
  4455e0:	add	x2, x2, #0x6df
  4455e4:	add	x3, x3, #0x6cf
  4455e8:	add	x0, sp, #0x8
  4455ec:	mov	w1, #0xc8                  	// #200
  4455f0:	bl	402df0 <snprintf@plt>
  4455f4:	ldp	x8, x0, [x19, #40]
  4455f8:	add	x1, sp, #0x8
  4455fc:	mov	w2, wzr
  445600:	blr	x8
  445604:	mov	w8, #0x1                   	// #1
  445608:	mov	x0, xzr
  44560c:	str	w8, [x19, #56]
  445610:	b	445618 <feof@plt+0x42538>
  445614:	ldr	x0, [x8]
  445618:	ldr	x19, [sp, #224]
  44561c:	ldp	x29, x30, [sp, #208]
  445620:	add	sp, sp, #0xf0
  445624:	ret
  445628:	ldr	x8, [x0]
  44562c:	ldr	x9, [x1]
  445630:	cmp	x8, x9
  445634:	cset	w8, hi  // hi = pmore
  445638:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  44563c:	ret
  445640:	sub	sp, sp, #0x140
  445644:	stp	x29, x30, [sp, #224]
  445648:	stp	x28, x27, [sp, #240]
  44564c:	stp	x26, x25, [sp, #256]
  445650:	stp	x24, x23, [sp, #272]
  445654:	stp	x22, x21, [sp, #288]
  445658:	stp	x20, x19, [sp, #304]
  44565c:	add	x29, sp, #0xe0
  445660:	ldr	x26, [x29, #96]
  445664:	sub	w8, w0, #0x1
  445668:	mov	x20, x7
  44566c:	mov	w23, w2
  445670:	mov	x19, x1
  445674:	cmp	w8, #0x1f
  445678:	stp	xzr, xzr, [x26]
  44567c:	b.hi	4456b0 <feof@plt+0x425d0>  // b.pmore
  445680:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  445684:	add	x9, x9, #0x582
  445688:	adr	x10, 4456a8 <feof@plt+0x425c8>
  44568c:	ldrh	w11, [x9, x8, lsl #1]
  445690:	add	x10, x10, x11, lsl #2
  445694:	mov	x22, x6
  445698:	mov	x21, x5
  44569c:	mov	w24, w4
  4456a0:	mov	w25, w3
  4456a4:	br	x10
  4456a8:	mov	w8, #0x2                   	// #2
  4456ac:	b	445af8 <feof@plt+0x42a18>
  4456b0:	mov	w8, #0xffffe0ff            	// #-7937
  4456b4:	add	w8, w0, w8
  4456b8:	cmp	w8, #0x20
  4456bc:	b.hi	445f00 <feof@plt+0x42e20>  // b.pmore
  4456c0:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  4456c4:	add	x9, x9, #0x5c2
  4456c8:	adr	x10, 4456d8 <feof@plt+0x425f8>
  4456cc:	ldrh	w11, [x9, x8, lsl #1]
  4456d0:	add	x10, x10, x11, lsl #2
  4456d4:	br	x10
  4456d8:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  4456dc:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  4456e0:	mov	x22, xzr
  4456e4:	mov	w23, wzr
  4456e8:	mov	w8, wzr
  4456ec:	mov	w9, #0x8                   	// #8
  4456f0:	add	x20, x20, #0x6df
  4456f4:	add	x21, x21, #0x798
  4456f8:	str	w9, [x26]
  4456fc:	b	445718 <feof@plt+0x42638>
  445700:	and	x9, x24, #0x7f
  445704:	lsl	x9, x9, x23
  445708:	orr	x22, x9, x22
  44570c:	sxtb	w9, w24
  445710:	add	w23, w23, #0x7
  445714:	tbz	w9, #31, 445f68 <feof@plt+0x42e88>
  445718:	ldp	x10, x11, [x19, #16]
  44571c:	cbz	x11, 445e90 <feof@plt+0x42db0>
  445720:	add	x9, x10, #0x1
  445724:	sub	x11, x11, #0x1
  445728:	stp	x9, x11, [x19, #16]
  44572c:	ldrb	w24, [x10]
  445730:	cmp	w23, #0x3f
  445734:	b.ls	445700 <feof@plt+0x42620>  // b.plast
  445738:	cbnz	w8, 44570c <feof@plt+0x4262c>
  44573c:	ldr	w8, [x19, #8]
  445740:	ldr	x4, [x19]
  445744:	add	x0, sp, #0x10
  445748:	mov	w1, #0xc8                  	// #200
  44574c:	sub	w5, w9, w8
  445750:	mov	x2, x20
  445754:	mov	x3, x21
  445758:	bl	402df0 <snprintf@plt>
  44575c:	ldp	x8, x0, [x19, #40]
  445760:	add	x1, sp, #0x10
  445764:	mov	w2, wzr
  445768:	blr	x8
  44576c:	mov	w8, #0x1                   	// #1
  445770:	b	44570c <feof@plt+0x4262c>
  445774:	sub	w8, w24, #0x1
  445778:	mov	w9, #0x1                   	// #1
  44577c:	cmp	w8, #0x7
  445780:	str	w9, [x26]
  445784:	b.hi	4461f4 <feof@plt+0x43114>  // b.pmore
  445788:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  44578c:	add	x9, x9, #0x614
  445790:	adr	x10, 445ad8 <feof@plt+0x429f8>
  445794:	ldrh	w11, [x9, x8, lsl #1]
  445798:	add	x10, x10, x11, lsl #2
  44579c:	br	x10
  4457a0:	mov	w8, #0xa                   	// #10
  4457a4:	str	w8, [x26]
  4457a8:	ldp	x9, x8, [x19, #16]
  4457ac:	cmp	x8, #0x1
  4457b0:	b.hi	445fa0 <feof@plt+0x42ec0>  // b.pmore
  4457b4:	ldr	w10, [x19, #56]
  4457b8:	cbnz	w10, 445824 <feof@plt+0x42744>
  4457bc:	ldr	w8, [x19, #8]
  4457c0:	ldr	x4, [x19]
  4457c4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4457c8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4457cc:	sub	w5, w9, w8
  4457d0:	add	x2, x2, #0x6df
  4457d4:	add	x3, x3, #0x6cf
  4457d8:	add	x0, sp, #0x10
  4457dc:	mov	w1, #0xc8                  	// #200
  4457e0:	bl	402df0 <snprintf@plt>
  4457e4:	ldp	x8, x0, [x19, #40]
  4457e8:	add	x1, sp, #0x10
  4457ec:	mov	w2, wzr
  4457f0:	blr	x8
  4457f4:	ldr	x8, [x19, #24]
  4457f8:	mov	w10, #0x1                   	// #1
  4457fc:	mov	x9, xzr
  445800:	str	w10, [x19, #56]
  445804:	b	44630c <feof@plt+0x4322c>
  445808:	mov	w8, #0xa                   	// #10
  44580c:	str	w8, [x26]
  445810:	ldp	x9, x8, [x19, #16]
  445814:	cmp	x8, #0x3
  445818:	b.hi	445fc4 <feof@plt+0x42ee4>  // b.pmore
  44581c:	ldr	w10, [x19, #56]
  445820:	cbz	w10, 4457bc <feof@plt+0x426dc>
  445824:	mov	x9, xzr
  445828:	b	44630c <feof@plt+0x4322c>
  44582c:	mov	w8, #0x2                   	// #2
  445830:	b	445b1c <feof@plt+0x42a3c>
  445834:	mov	w8, #0x2                   	// #2
  445838:	b	445b50 <feof@plt+0x42a70>
  44583c:	mov	w8, #0x2                   	// #2
  445840:	str	w8, [x26]
  445844:	b	44601c <feof@plt+0x42f3c>
  445848:	mov	w8, #0x4                   	// #4
  44584c:	str	w8, [x26]
  445850:	ldp	x20, x21, [x19, #16]
  445854:	mov	x0, x20
  445858:	mov	x1, x21
  44585c:	bl	403020 <strnlen@plt>
  445860:	add	x9, x0, #0x1
  445864:	subs	x8, x21, x9
  445868:	b.cs	445fe8 <feof@plt+0x42f08>  // b.hs, b.nlast
  44586c:	ldr	w8, [x19, #56]
  445870:	cbz	w8, 4462ac <feof@plt+0x431cc>
  445874:	mov	x20, xzr
  445878:	b	4462f0 <feof@plt+0x43210>
  44587c:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  445880:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  445884:	mov	x22, xzr
  445888:	mov	w23, wzr
  44588c:	mov	w8, wzr
  445890:	mov	w9, #0xa                   	// #10
  445894:	add	x20, x20, #0x6df
  445898:	add	x21, x21, #0x798
  44589c:	str	w9, [x26]
  4458a0:	b	4458bc <feof@plt+0x427dc>
  4458a4:	and	x9, x24, #0x7f
  4458a8:	lsl	x9, x9, x23
  4458ac:	orr	x22, x9, x22
  4458b0:	sxtb	w9, w24
  4458b4:	add	w23, w23, #0x7
  4458b8:	tbz	w9, #31, 445ef0 <feof@plt+0x42e10>
  4458bc:	ldp	x10, x11, [x19, #16]
  4458c0:	cbz	x11, 445d9c <feof@plt+0x42cbc>
  4458c4:	add	x9, x10, #0x1
  4458c8:	sub	x11, x11, #0x1
  4458cc:	stp	x9, x11, [x19, #16]
  4458d0:	ldrb	w24, [x10]
  4458d4:	cmp	w23, #0x3f
  4458d8:	b.ls	4458a4 <feof@plt+0x427c4>  // b.plast
  4458dc:	cbnz	w8, 4458b0 <feof@plt+0x427d0>
  4458e0:	ldr	w8, [x19, #8]
  4458e4:	ldr	x4, [x19]
  4458e8:	add	x0, sp, #0x10
  4458ec:	mov	w1, #0xc8                  	// #200
  4458f0:	sub	w5, w9, w8
  4458f4:	mov	x2, x20
  4458f8:	mov	x3, x21
  4458fc:	bl	402df0 <snprintf@plt>
  445900:	ldp	x8, x0, [x19, #40]
  445904:	add	x1, sp, #0x10
  445908:	mov	w2, wzr
  44590c:	blr	x8
  445910:	mov	w8, #0x1                   	// #1
  445914:	b	4458b0 <feof@plt+0x427d0>
  445918:	mov	w8, #0xa                   	// #10
  44591c:	str	w8, [x26]
  445920:	ldp	x8, x9, [x19, #16]
  445924:	cbz	x9, 4460dc <feof@plt+0x42ffc>
  445928:	add	x10, x8, #0x1
  44592c:	sub	x9, x9, #0x1
  445930:	stp	x10, x9, [x19, #16]
  445934:	ldrb	w8, [x8]
  445938:	cmp	x9, x8
  44593c:	b.cc	446314 <feof@plt+0x43234>  // b.lo, b.ul, b.last
  445940:	b	446460 <feof@plt+0x43380>
  445944:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  445948:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  44594c:	mov	x22, xzr
  445950:	mov	w23, wzr
  445954:	mov	w8, wzr
  445958:	mov	w9, #0x3                   	// #3
  44595c:	add	x20, x20, #0x6df
  445960:	add	x21, x21, #0x791
  445964:	str	w9, [x26]
  445968:	b	445984 <feof@plt+0x428a4>
  44596c:	and	x9, x24, #0x7f
  445970:	lsl	x9, x9, x23
  445974:	orr	x22, x9, x22
  445978:	sxtb	w9, w24
  44597c:	add	w23, w23, #0x7
  445980:	tbz	w9, #31, 44605c <feof@plt+0x42f7c>
  445984:	ldp	x10, x11, [x19, #16]
  445988:	cbz	x11, 445f78 <feof@plt+0x42e98>
  44598c:	add	x9, x10, #0x1
  445990:	sub	x11, x11, #0x1
  445994:	stp	x9, x11, [x19, #16]
  445998:	ldrb	w24, [x10]
  44599c:	cmp	w23, #0x3f
  4459a0:	b.ls	44596c <feof@plt+0x4288c>  // b.plast
  4459a4:	cbnz	w8, 445978 <feof@plt+0x42898>
  4459a8:	ldr	w8, [x19, #8]
  4459ac:	ldr	x4, [x19]
  4459b0:	add	x0, sp, #0x10
  4459b4:	mov	w1, #0xc8                  	// #200
  4459b8:	sub	w5, w9, w8
  4459bc:	mov	x2, x20
  4459c0:	mov	x3, x21
  4459c4:	bl	402df0 <snprintf@plt>
  4459c8:	ldp	x8, x0, [x19, #40]
  4459cc:	add	x1, sp, #0x10
  4459d0:	mov	w2, wzr
  4459d4:	blr	x8
  4459d8:	mov	w8, #0x1                   	// #1
  4459dc:	b	445978 <feof@plt+0x42898>
  4459e0:	cbz	w23, 4460f0 <feof@plt+0x43010>
  4459e4:	mov	x0, x19
  4459e8:	bl	44557c <feof@plt+0x4249c>
  4459ec:	cmp	x0, x22
  4459f0:	b.cs	445ff4 <feof@plt+0x42f14>  // b.hs, b.nlast
  4459f4:	mov	w8, #0x4                   	// #4
  4459f8:	add	x9, x21, x0
  4459fc:	str	w8, [x26]
  445a00:	str	x9, [x26, #8]
  445a04:	b	446474 <feof@plt+0x43394>
  445a08:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  445a0c:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  445a10:	mov	x22, xzr
  445a14:	mov	w23, wzr
  445a18:	mov	w8, wzr
  445a1c:	mov	w9, #0x2                   	// #2
  445a20:	add	x20, x20, #0x6df
  445a24:	add	x21, x21, #0x798
  445a28:	str	w9, [x26]
  445a2c:	b	445a48 <feof@plt+0x42968>
  445a30:	and	x9, x24, #0x7f
  445a34:	lsl	x9, x9, x23
  445a38:	orr	x22, x9, x22
  445a3c:	sxtb	w9, w24
  445a40:	add	w23, w23, #0x7
  445a44:	tbz	w9, #31, 445f68 <feof@plt+0x42e88>
  445a48:	ldp	x10, x11, [x19, #16]
  445a4c:	cbz	x11, 445e90 <feof@plt+0x42db0>
  445a50:	add	x9, x10, #0x1
  445a54:	sub	x11, x11, #0x1
  445a58:	stp	x9, x11, [x19, #16]
  445a5c:	ldrb	w24, [x10]
  445a60:	cmp	w23, #0x3f
  445a64:	b.ls	445a30 <feof@plt+0x42950>  // b.plast
  445a68:	cbnz	w8, 445a3c <feof@plt+0x4295c>
  445a6c:	ldr	w8, [x19, #8]
  445a70:	ldr	x4, [x19]
  445a74:	add	x0, sp, #0x10
  445a78:	mov	w1, #0xc8                  	// #200
  445a7c:	sub	w5, w9, w8
  445a80:	mov	x2, x20
  445a84:	mov	x3, x21
  445a88:	bl	402df0 <snprintf@plt>
  445a8c:	ldp	x8, x0, [x19, #40]
  445a90:	add	x1, sp, #0x10
  445a94:	mov	w2, wzr
  445a98:	blr	x8
  445a9c:	mov	w8, #0x1                   	// #1
  445aa0:	b	445a3c <feof@plt+0x4295c>
  445aa4:	mov	w8, #0x6                   	// #6
  445aa8:	cmp	w25, #0x2
  445aac:	str	w8, [x26]
  445ab0:	b.ne	446018 <feof@plt+0x42f38>  // b.any
  445ab4:	sub	w8, w24, #0x1
  445ab8:	cmp	w8, #0x7
  445abc:	b.hi	4461f4 <feof@plt+0x43114>  // b.pmore
  445ac0:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  445ac4:	add	x9, x9, #0x604
  445ac8:	adr	x10, 445ad8 <feof@plt+0x429f8>
  445acc:	ldrh	w11, [x9, x8, lsl #1]
  445ad0:	add	x10, x10, x11, lsl #2
  445ad4:	br	x10
  445ad8:	ldp	x8, x9, [x19, #16]
  445adc:	cbz	x9, 4461a4 <feof@plt+0x430c4>
  445ae0:	add	x10, x8, #0x1
  445ae4:	sub	x9, x9, #0x1
  445ae8:	stp	x10, x9, [x19, #16]
  445aec:	ldrb	w0, [x8]
  445af0:	b	446024 <feof@plt+0x42f44>
  445af4:	mov	w8, #0x5                   	// #5
  445af8:	str	w8, [x26]
  445afc:	ldp	x8, x9, [x19, #16]
  445b00:	cbz	x9, 445b60 <feof@plt+0x42a80>
  445b04:	add	x10, x8, #0x1
  445b08:	sub	x9, x9, #0x1
  445b0c:	stp	x10, x9, [x19, #16]
  445b10:	ldrb	w8, [x8]
  445b14:	b	446118 <feof@plt+0x43038>
  445b18:	mov	w8, #0x5                   	// #5
  445b1c:	str	w8, [x26]
  445b20:	ldp	x8, x9, [x19, #16]
  445b24:	cmp	x9, #0x1
  445b28:	b.ls	445b60 <feof@plt+0x42a80>  // b.plast
  445b2c:	ldr	w10, [x19, #32]
  445b30:	add	x11, x8, #0x2
  445b34:	sub	x9, x9, #0x2
  445b38:	stp	x11, x9, [x19, #16]
  445b3c:	cbz	w10, 44610c <feof@plt+0x4302c>
  445b40:	ldrh	w8, [x8]
  445b44:	lsl	x8, x8, #48
  445b48:	b	445dec <feof@plt+0x42d0c>
  445b4c:	mov	w8, #0x5                   	// #5
  445b50:	str	w8, [x26]
  445b54:	ldp	x8, x9, [x19, #16]
  445b58:	cmp	x9, #0x3
  445b5c:	b.hi	445dd0 <feof@plt+0x42cf0>  // b.pmore
  445b60:	ldr	w9, [x19, #56]
  445b64:	cbz	w9, 445b70 <feof@plt+0x42a90>
  445b68:	mov	x8, xzr
  445b6c:	b	446118 <feof@plt+0x43038>
  445b70:	ldr	w9, [x19, #8]
  445b74:	ldr	x4, [x19]
  445b78:	sub	w5, w8, w9
  445b7c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  445b80:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  445b84:	add	x2, x2, #0x6df
  445b88:	add	x3, x3, #0x6cf
  445b8c:	add	x0, sp, #0x10
  445b90:	mov	w1, #0xc8                  	// #200
  445b94:	bl	402df0 <snprintf@plt>
  445b98:	ldp	x8, x0, [x19, #40]
  445b9c:	add	x1, sp, #0x10
  445ba0:	mov	w2, wzr
  445ba4:	blr	x8
  445ba8:	mov	w9, #0x1                   	// #1
  445bac:	mov	x8, xzr
  445bb0:	str	w9, [x19, #56]
  445bb4:	b	446118 <feof@plt+0x43038>
  445bb8:	mov	w8, #0x5                   	// #5
  445bbc:	str	w8, [x26]
  445bc0:	b	44601c <feof@plt+0x42f3c>
  445bc4:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  445bc8:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  445bcc:	mov	x22, xzr
  445bd0:	mov	w23, wzr
  445bd4:	mov	w8, wzr
  445bd8:	mov	w9, #0x5                   	// #5
  445bdc:	add	x20, x20, #0x6df
  445be0:	add	x21, x21, #0x798
  445be4:	str	w9, [x26]
  445be8:	b	445c04 <feof@plt+0x42b24>
  445bec:	and	x9, x24, #0x7f
  445bf0:	lsl	x9, x9, x23
  445bf4:	orr	x22, x9, x22
  445bf8:	sxtb	w9, w24
  445bfc:	add	w23, w23, #0x7
  445c00:	tbz	w9, #31, 445f68 <feof@plt+0x42e88>
  445c04:	ldp	x10, x11, [x19, #16]
  445c08:	cbz	x11, 445e90 <feof@plt+0x42db0>
  445c0c:	add	x9, x10, #0x1
  445c10:	sub	x11, x11, #0x1
  445c14:	stp	x9, x11, [x19, #16]
  445c18:	ldrb	w24, [x10]
  445c1c:	cmp	w23, #0x3f
  445c20:	b.ls	445bec <feof@plt+0x42b0c>  // b.plast
  445c24:	cbnz	w8, 445bf8 <feof@plt+0x42b18>
  445c28:	ldr	w8, [x19, #8]
  445c2c:	ldr	x4, [x19]
  445c30:	add	x0, sp, #0x10
  445c34:	mov	w1, #0xc8                  	// #200
  445c38:	sub	w5, w9, w8
  445c3c:	mov	x2, x20
  445c40:	mov	x3, x21
  445c44:	bl	402df0 <snprintf@plt>
  445c48:	ldp	x8, x0, [x19, #40]
  445c4c:	add	x1, sp, #0x10
  445c50:	mov	w2, wzr
  445c54:	blr	x8
  445c58:	mov	w8, #0x1                   	// #1
  445c5c:	b	445bf8 <feof@plt+0x42b18>
  445c60:	str	x26, [sp, #8]
  445c64:	mov	x26, xzr
  445c68:	mov	w28, wzr
  445c6c:	mov	w8, wzr
  445c70:	b	445c8c <feof@plt+0x42bac>
  445c74:	and	x9, x27, #0x7f
  445c78:	lsl	x9, x9, x28
  445c7c:	orr	x26, x9, x26
  445c80:	sxtb	w9, w27
  445c84:	add	w28, w28, #0x7
  445c88:	tbz	w9, #31, 44627c <feof@plt+0x4319c>
  445c8c:	ldp	x10, x11, [x19, #16]
  445c90:	cbz	x11, 445f90 <feof@plt+0x42eb0>
  445c94:	add	x9, x10, #0x1
  445c98:	sub	x11, x11, #0x1
  445c9c:	stp	x9, x11, [x19, #16]
  445ca0:	ldrb	w27, [x10]
  445ca4:	cmp	w28, #0x3f
  445ca8:	b.ls	445c74 <feof@plt+0x42b94>  // b.plast
  445cac:	cbnz	w8, 445c80 <feof@plt+0x42ba0>
  445cb0:	ldr	w8, [x19, #8]
  445cb4:	ldr	x4, [x19]
  445cb8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  445cbc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  445cc0:	sub	w5, w9, w8
  445cc4:	add	x0, sp, #0x10
  445cc8:	mov	w1, #0xc8                  	// #200
  445ccc:	add	x2, x2, #0x6df
  445cd0:	add	x3, x3, #0x798
  445cd4:	bl	402df0 <snprintf@plt>
  445cd8:	ldp	x8, x0, [x19, #40]
  445cdc:	add	x1, sp, #0x10
  445ce0:	mov	w2, wzr
  445ce4:	blr	x8
  445ce8:	mov	w8, #0x1                   	// #1
  445cec:	b	445c80 <feof@plt+0x42ba0>
  445cf0:	mov	w8, #0x8                   	// #8
  445cf4:	str	w8, [x26]
  445cf8:	cbnz	w23, 44601c <feof@plt+0x42f3c>
  445cfc:	b	44602c <feof@plt+0x42f4c>
  445d00:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  445d04:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  445d08:	mov	x22, xzr
  445d0c:	mov	w23, wzr
  445d10:	mov	w8, wzr
  445d14:	mov	w9, #0xb                   	// #11
  445d18:	add	x20, x20, #0x6df
  445d1c:	add	x21, x21, #0x798
  445d20:	str	w9, [x26]
  445d24:	b	445d40 <feof@plt+0x42c60>
  445d28:	and	x9, x24, #0x7f
  445d2c:	lsl	x9, x9, x23
  445d30:	orr	x22, x9, x22
  445d34:	sxtb	w9, w24
  445d38:	add	w23, w23, #0x7
  445d3c:	tbz	w9, #31, 445ef0 <feof@plt+0x42e10>
  445d40:	ldp	x10, x11, [x19, #16]
  445d44:	cbz	x11, 445d9c <feof@plt+0x42cbc>
  445d48:	add	x9, x10, #0x1
  445d4c:	sub	x11, x11, #0x1
  445d50:	stp	x9, x11, [x19, #16]
  445d54:	ldrb	w24, [x10]
  445d58:	cmp	w23, #0x3f
  445d5c:	b.ls	445d28 <feof@plt+0x42c48>  // b.plast
  445d60:	cbnz	w8, 445d34 <feof@plt+0x42c54>
  445d64:	ldr	w8, [x19, #8]
  445d68:	ldr	x4, [x19]
  445d6c:	add	x0, sp, #0x10
  445d70:	mov	w1, #0xc8                  	// #200
  445d74:	sub	w5, w9, w8
  445d78:	mov	x2, x20
  445d7c:	mov	x3, x21
  445d80:	bl	402df0 <snprintf@plt>
  445d84:	ldp	x8, x0, [x19, #40]
  445d88:	add	x1, sp, #0x10
  445d8c:	mov	w2, wzr
  445d90:	blr	x8
  445d94:	mov	w8, #0x1                   	// #1
  445d98:	b	445d34 <feof@plt+0x42c54>
  445d9c:	ldr	w8, [x19, #56]
  445da0:	cbz	w8, 446080 <feof@plt+0x42fa0>
  445da4:	mov	x8, xzr
  445da8:	mov	x22, xzr
  445dac:	b	4460c8 <feof@plt+0x42fe8>
  445db0:	mov	w8, #0x2                   	// #2
  445db4:	mov	w0, #0x1                   	// #1
  445db8:	str	w8, [x26]
  445dbc:	str	x0, [x26, #8]
  445dc0:	b	446478 <feof@plt+0x43398>
  445dc4:	mov	w8, #0x9                   	// #9
  445dc8:	str	w8, [x26]
  445dcc:	b	44601c <feof@plt+0x42f3c>
  445dd0:	ldr	w10, [x19, #32]
  445dd4:	add	x11, x8, #0x4
  445dd8:	sub	x9, x9, #0x4
  445ddc:	stp	x11, x9, [x19, #16]
  445de0:	cbz	w10, 446114 <feof@plt+0x43034>
  445de4:	ldr	w8, [x8]
  445de8:	lsl	x8, x8, #32
  445dec:	rev	x8, x8
  445df0:	b	446118 <feof@plt+0x43038>
  445df4:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  445df8:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10838>
  445dfc:	mov	x22, xzr
  445e00:	mov	w23, wzr
  445e04:	mov	w8, wzr
  445e08:	mov	w9, #0x8                   	// #8
  445e0c:	add	x20, x20, #0x6df
  445e10:	add	x21, x21, #0x798
  445e14:	str	w9, [x26]
  445e18:	b	445e34 <feof@plt+0x42d54>
  445e1c:	and	x9, x24, #0x7f
  445e20:	lsl	x9, x9, x23
  445e24:	orr	x22, x9, x22
  445e28:	sxtb	w9, w24
  445e2c:	add	w23, w23, #0x7
  445e30:	tbz	w9, #31, 445f68 <feof@plt+0x42e88>
  445e34:	ldp	x10, x11, [x19, #16]
  445e38:	cbz	x11, 445e90 <feof@plt+0x42db0>
  445e3c:	add	x9, x10, #0x1
  445e40:	sub	x11, x11, #0x1
  445e44:	stp	x9, x11, [x19, #16]
  445e48:	ldrb	w24, [x10]
  445e4c:	cmp	w23, #0x3f
  445e50:	b.ls	445e1c <feof@plt+0x42d3c>  // b.plast
  445e54:	cbnz	w8, 445e28 <feof@plt+0x42d48>
  445e58:	ldr	w8, [x19, #8]
  445e5c:	ldr	x4, [x19]
  445e60:	add	x0, sp, #0x10
  445e64:	mov	w1, #0xc8                  	// #200
  445e68:	sub	w5, w9, w8
  445e6c:	mov	x2, x20
  445e70:	mov	x3, x21
  445e74:	bl	402df0 <snprintf@plt>
  445e78:	ldp	x8, x0, [x19, #40]
  445e7c:	add	x1, sp, #0x10
  445e80:	mov	w2, wzr
  445e84:	blr	x8
  445e88:	mov	w8, #0x1                   	// #1
  445e8c:	b	445e28 <feof@plt+0x42d48>
  445e90:	ldr	w8, [x19, #56]
  445e94:	cbz	w8, 445f24 <feof@plt+0x42e44>
  445e98:	mov	x22, xzr
  445e9c:	b	445f68 <feof@plt+0x42e88>
  445ea0:	cbz	w23, 446120 <feof@plt+0x43040>
  445ea4:	mov	x0, x19
  445ea8:	bl	44557c <feof@plt+0x4249c>
  445eac:	str	x0, [x26, #8]
  445eb0:	cbz	x20, 445f70 <feof@plt+0x42e90>
  445eb4:	mov	w8, #0x7                   	// #7
  445eb8:	str	w8, [x26]
  445ebc:	b	446474 <feof@plt+0x43394>
  445ec0:	cbz	w23, 44613c <feof@plt+0x4305c>
  445ec4:	mov	x0, x19
  445ec8:	bl	44557c <feof@plt+0x4249c>
  445ecc:	cbz	x20, 445f70 <feof@plt+0x42e90>
  445ed0:	ldr	x8, [x20, #112]
  445ed4:	cmp	x0, x8
  445ed8:	b.cs	446158 <feof@plt+0x43078>  // b.hs, b.nlast
  445edc:	mov	w8, #0x4                   	// #4
  445ee0:	str	w8, [x26]
  445ee4:	ldr	x8, [x20, #104]
  445ee8:	add	x8, x8, x0
  445eec:	b	446118 <feof@plt+0x43038>
  445ef0:	ldr	x8, [x19, #24]
  445ef4:	cmp	x8, x22
  445ef8:	b.cs	4460c8 <feof@plt+0x42fe8>  // b.hs, b.nlast
  445efc:	b	446314 <feof@plt+0x43234>
  445f00:	ldr	w8, [x19, #16]
  445f04:	ldr	w9, [x19, #8]
  445f08:	ldr	x4, [x19]
  445f0c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  445f10:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  445f14:	sub	w5, w8, w9
  445f18:	add	x2, x2, #0x6df
  445f1c:	add	x3, x3, #0x75f
  445f20:	b	446178 <feof@plt+0x43098>
  445f24:	ldr	w8, [x19, #8]
  445f28:	ldr	x4, [x19]
  445f2c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  445f30:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  445f34:	sub	w5, w10, w8
  445f38:	add	x2, x2, #0x6df
  445f3c:	add	x3, x3, #0x6cf
  445f40:	add	x0, sp, #0x10
  445f44:	mov	w1, #0xc8                  	// #200
  445f48:	bl	402df0 <snprintf@plt>
  445f4c:	ldp	x8, x0, [x19, #40]
  445f50:	add	x1, sp, #0x10
  445f54:	mov	w2, wzr
  445f58:	blr	x8
  445f5c:	mov	w8, #0x1                   	// #1
  445f60:	mov	x22, xzr
  445f64:	str	w8, [x19, #56]
  445f68:	str	x22, [x26, #8]
  445f6c:	b	446474 <feof@plt+0x43394>
  445f70:	str	wzr, [x26]
  445f74:	b	446474 <feof@plt+0x43394>
  445f78:	ldr	w8, [x19, #56]
  445f7c:	cbnz	w8, 445b68 <feof@plt+0x42a88>
  445f80:	ldr	w8, [x19, #8]
  445f84:	ldr	x4, [x19]
  445f88:	sub	w5, w10, w8
  445f8c:	b	445b7c <feof@plt+0x42a9c>
  445f90:	ldr	w8, [x19, #56]
  445f94:	cbz	w8, 446238 <feof@plt+0x43158>
  445f98:	mov	x26, xzr
  445f9c:	b	44627c <feof@plt+0x4319c>
  445fa0:	ldr	w10, [x19, #32]
  445fa4:	add	x11, x9, #0x2
  445fa8:	sub	x8, x8, #0x2
  445fac:	stp	x11, x8, [x19, #16]
  445fb0:	cbz	w10, 446300 <feof@plt+0x43220>
  445fb4:	ldrh	w9, [x9]
  445fb8:	lsl	x9, x9, #48
  445fbc:	rev	x9, x9
  445fc0:	b	44630c <feof@plt+0x4322c>
  445fc4:	ldr	w10, [x19, #32]
  445fc8:	add	x11, x9, #0x4
  445fcc:	sub	x8, x8, #0x4
  445fd0:	stp	x11, x8, [x19, #16]
  445fd4:	cbz	w10, 446308 <feof@plt+0x43228>
  445fd8:	ldr	w9, [x9]
  445fdc:	lsl	x9, x9, #32
  445fe0:	rev	x9, x9
  445fe4:	b	44630c <feof@plt+0x4322c>
  445fe8:	add	x9, x20, x9
  445fec:	stp	x9, x8, [x19, #16]
  445ff0:	b	4462f0 <feof@plt+0x43210>
  445ff4:	ldr	w8, [x19, #16]
  445ff8:	ldr	w9, [x19, #8]
  445ffc:	ldr	x4, [x19]
  446000:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446004:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446008:	sub	w5, w8, w9
  44600c:	add	x2, x2, #0x6df
  446010:	add	x3, x3, #0x723
  446014:	b	446178 <feof@plt+0x43098>
  446018:	cbz	w23, 44602c <feof@plt+0x42f4c>
  44601c:	mov	x0, x19
  446020:	bl	44557c <feof@plt+0x4249c>
  446024:	str	x0, [x26, #8]
  446028:	b	446474 <feof@plt+0x43394>
  44602c:	ldp	x8, x9, [x19, #16]
  446030:	cmp	x9, #0x3
  446034:	b.ls	4461a4 <feof@plt+0x430c4>  // b.plast
  446038:	ldr	w10, [x19, #32]
  44603c:	add	x11, x8, #0x4
  446040:	sub	x9, x9, #0x4
  446044:	stp	x11, x9, [x19, #16]
  446048:	cbz	w10, 4463ec <feof@plt+0x4330c>
  44604c:	ldr	w8, [x8]
  446050:	lsl	x8, x8, #32
  446054:	rev	x0, x8
  446058:	b	446024 <feof@plt+0x42f44>
  44605c:	cmp	w23, #0x40
  446060:	and	w8, w24, #0x40
  446064:	mov	x9, #0xffffffffffffffff    	// #-1
  446068:	cset	w10, cc  // cc = lo, ul, last
  44606c:	lsl	x9, x9, x23
  446070:	tst	w10, w8, lsr #6
  446074:	csel	x8, x9, xzr, ne  // ne = any
  446078:	orr	x8, x22, x8
  44607c:	b	446118 <feof@plt+0x43038>
  446080:	ldr	w8, [x19, #8]
  446084:	ldr	x4, [x19]
  446088:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  44608c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446090:	sub	w5, w10, w8
  446094:	add	x2, x2, #0x6df
  446098:	add	x3, x3, #0x6cf
  44609c:	add	x0, sp, #0x10
  4460a0:	mov	w1, #0xc8                  	// #200
  4460a4:	bl	402df0 <snprintf@plt>
  4460a8:	ldp	x8, x0, [x19, #40]
  4460ac:	add	x1, sp, #0x10
  4460b0:	mov	w2, wzr
  4460b4:	blr	x8
  4460b8:	ldr	x8, [x19, #24]
  4460bc:	mov	x22, xzr
  4460c0:	mov	w9, #0x1                   	// #1
  4460c4:	str	w9, [x19, #56]
  4460c8:	ldr	x9, [x19, #16]
  4460cc:	sub	x8, x8, x22
  4460d0:	str	x8, [x19, #24]
  4460d4:	add	x8, x9, x22
  4460d8:	b	446470 <feof@plt+0x43390>
  4460dc:	ldr	w9, [x19, #56]
  4460e0:	cbz	w9, 446418 <feof@plt+0x43338>
  4460e4:	mov	x8, xzr
  4460e8:	mov	x9, xzr
  4460ec:	b	446460 <feof@plt+0x43380>
  4460f0:	ldp	x8, x9, [x19, #16]
  4460f4:	cmp	x9, #0x3
  4460f8:	b.hi	446380 <feof@plt+0x432a0>  // b.pmore
  4460fc:	ldr	w9, [x19, #56]
  446100:	cbz	w9, 446498 <feof@plt+0x433b8>
  446104:	mov	x0, xzr
  446108:	b	4459ec <feof@plt+0x4290c>
  44610c:	ldrh	w8, [x8]
  446110:	b	446118 <feof@plt+0x43038>
  446114:	ldr	w8, [x8]
  446118:	str	x8, [x26, #8]
  44611c:	b	446474 <feof@plt+0x43394>
  446120:	ldp	x8, x9, [x19, #16]
  446124:	cmp	x9, #0x3
  446128:	b.hi	4463a4 <feof@plt+0x432c4>  // b.pmore
  44612c:	ldr	w9, [x19, #56]
  446130:	cbz	w9, 4464e0 <feof@plt+0x43400>
  446134:	mov	x0, xzr
  446138:	b	445eac <feof@plt+0x42dcc>
  44613c:	ldp	x8, x9, [x19, #16]
  446140:	cmp	x9, #0x3
  446144:	b.hi	4463c8 <feof@plt+0x432e8>  // b.pmore
  446148:	ldr	w9, [x19, #56]
  44614c:	cbz	w9, 446528 <feof@plt+0x43448>
  446150:	mov	x0, xzr
  446154:	b	445ecc <feof@plt+0x42dec>
  446158:	ldr	w8, [x19, #16]
  44615c:	ldr	w9, [x19, #8]
  446160:	ldr	x4, [x19]
  446164:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446168:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44616c:	sub	w5, w8, w9
  446170:	add	x2, x2, #0x6df
  446174:	add	x3, x3, #0x73d
  446178:	add	x0, sp, #0x10
  44617c:	mov	w1, #0xc8                  	// #200
  446180:	bl	402df0 <snprintf@plt>
  446184:	ldp	x8, x0, [x19, #40]
  446188:	add	x1, sp, #0x10
  44618c:	mov	w2, wzr
  446190:	blr	x8
  446194:	b	44631c <feof@plt+0x4323c>
  446198:	ldp	x8, x9, [x19, #16]
  44619c:	cmp	x9, #0x1
  4461a0:	b.hi	4463f4 <feof@plt+0x43314>  // b.pmore
  4461a4:	ldr	w9, [x19, #56]
  4461a8:	cbnz	w9, 446230 <feof@plt+0x43150>
  4461ac:	ldr	w9, [x19, #8]
  4461b0:	ldr	x4, [x19]
  4461b4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4461b8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4461bc:	sub	w5, w8, w9
  4461c0:	add	x2, x2, #0x6df
  4461c4:	add	x3, x3, #0x6cf
  4461c8:	add	x0, sp, #0x10
  4461cc:	mov	w1, #0xc8                  	// #200
  4461d0:	bl	402df0 <snprintf@plt>
  4461d4:	ldp	x8, x0, [x19, #40]
  4461d8:	add	x1, sp, #0x10
  4461dc:	mov	w2, wzr
  4461e0:	blr	x8
  4461e4:	mov	w8, #0x1                   	// #1
  4461e8:	mov	x0, xzr
  4461ec:	str	w8, [x19, #56]
  4461f0:	b	446024 <feof@plt+0x42f44>
  4461f4:	ldr	w8, [x19, #16]
  4461f8:	ldr	w9, [x19, #8]
  4461fc:	ldr	x4, [x19]
  446200:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446204:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446208:	sub	w5, w8, w9
  44620c:	add	x2, x2, #0x6df
  446210:	add	x3, x3, #0x777
  446214:	add	x0, sp, #0x10
  446218:	mov	w1, #0xc8                  	// #200
  44621c:	bl	402df0 <snprintf@plt>
  446220:	ldp	x8, x0, [x19, #40]
  446224:	add	x1, sp, #0x10
  446228:	mov	w2, wzr
  44622c:	blr	x8
  446230:	mov	x0, xzr
  446234:	b	446024 <feof@plt+0x42f44>
  446238:	ldr	w8, [x19, #8]
  44623c:	ldr	x4, [x19]
  446240:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446244:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446248:	sub	w5, w10, w8
  44624c:	add	x2, x2, #0x6df
  446250:	add	x3, x3, #0x6cf
  446254:	add	x0, sp, #0x10
  446258:	mov	w1, #0xc8                  	// #200
  44625c:	bl	402df0 <snprintf@plt>
  446260:	ldp	x8, x0, [x19, #40]
  446264:	add	x1, sp, #0x10
  446268:	mov	w2, wzr
  44626c:	blr	x8
  446270:	mov	w8, #0x1                   	// #1
  446274:	mov	x26, xzr
  446278:	str	w8, [x19, #56]
  44627c:	ldr	x8, [sp, #8]
  446280:	mov	w0, w26
  446284:	mov	x1, x19
  446288:	mov	w2, w23
  44628c:	mov	w3, w25
  446290:	mov	w4, w24
  446294:	mov	x5, x21
  446298:	mov	x6, x22
  44629c:	mov	x7, x20
  4462a0:	str	x8, [sp]
  4462a4:	bl	445640 <feof@plt+0x42560>
  4462a8:	b	446478 <feof@plt+0x43398>
  4462ac:	ldr	w8, [x19, #8]
  4462b0:	ldr	x4, [x19]
  4462b4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4462b8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4462bc:	sub	w5, w20, w8
  4462c0:	add	x2, x2, #0x6df
  4462c4:	add	x3, x3, #0x6cf
  4462c8:	add	x0, sp, #0x10
  4462cc:	mov	w1, #0xc8                  	// #200
  4462d0:	bl	402df0 <snprintf@plt>
  4462d4:	ldp	x8, x0, [x19, #40]
  4462d8:	add	x1, sp, #0x10
  4462dc:	mov	w2, wzr
  4462e0:	blr	x8
  4462e4:	mov	w8, #0x1                   	// #1
  4462e8:	mov	x20, xzr
  4462ec:	str	w8, [x19, #56]
  4462f0:	cmp	x20, #0x0
  4462f4:	str	x20, [x26, #8]
  4462f8:	cset	w0, ne  // ne = any
  4462fc:	b	446478 <feof@plt+0x43398>
  446300:	ldrh	w9, [x9]
  446304:	b	44630c <feof@plt+0x4322c>
  446308:	ldr	w9, [x9]
  44630c:	subs	x8, x8, x9
  446310:	b.cs	446324 <feof@plt+0x43244>  // b.hs, b.nlast
  446314:	ldr	w8, [x19, #56]
  446318:	cbz	w8, 446334 <feof@plt+0x43254>
  44631c:	mov	w0, wzr
  446320:	b	446478 <feof@plt+0x43398>
  446324:	ldr	x10, [x19, #16]
  446328:	str	x8, [x19, #24]
  44632c:	add	x8, x10, x9
  446330:	b	446470 <feof@plt+0x43390>
  446334:	ldr	w8, [x19, #16]
  446338:	ldr	w9, [x19, #8]
  44633c:	ldr	x4, [x19]
  446340:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446344:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446348:	sub	w5, w8, w9
  44634c:	add	x2, x2, #0x6df
  446350:	add	x3, x3, #0x6cf
  446354:	add	x0, sp, #0x10
  446358:	mov	w1, #0xc8                  	// #200
  44635c:	bl	402df0 <snprintf@plt>
  446360:	ldp	x8, x0, [x19, #40]
  446364:	add	x1, sp, #0x10
  446368:	mov	w2, wzr
  44636c:	blr	x8
  446370:	mov	w8, #0x1                   	// #1
  446374:	mov	w0, wzr
  446378:	str	w8, [x19, #56]
  44637c:	b	446478 <feof@plt+0x43398>
  446380:	ldr	w10, [x19, #32]
  446384:	add	x11, x8, #0x4
  446388:	sub	x9, x9, #0x4
  44638c:	stp	x11, x9, [x19, #16]
  446390:	cbz	w10, 446570 <feof@plt+0x43490>
  446394:	ldr	w8, [x8]
  446398:	lsl	x8, x8, #32
  44639c:	rev	x0, x8
  4463a0:	b	4459ec <feof@plt+0x4290c>
  4463a4:	ldr	w10, [x19, #32]
  4463a8:	add	x11, x8, #0x4
  4463ac:	sub	x9, x9, #0x4
  4463b0:	stp	x11, x9, [x19, #16]
  4463b4:	cbz	w10, 446578 <feof@plt+0x43498>
  4463b8:	ldr	w8, [x8]
  4463bc:	lsl	x8, x8, #32
  4463c0:	rev	x0, x8
  4463c4:	b	445eac <feof@plt+0x42dcc>
  4463c8:	ldr	w10, [x19, #32]
  4463cc:	add	x11, x8, #0x4
  4463d0:	sub	x9, x9, #0x4
  4463d4:	stp	x11, x9, [x19, #16]
  4463d8:	cbz	w10, 446580 <feof@plt+0x434a0>
  4463dc:	ldr	w8, [x8]
  4463e0:	lsl	x8, x8, #32
  4463e4:	rev	x0, x8
  4463e8:	b	445ecc <feof@plt+0x42dec>
  4463ec:	ldr	w0, [x8]
  4463f0:	b	446024 <feof@plt+0x42f44>
  4463f4:	ldr	w10, [x19, #32]
  4463f8:	add	x11, x8, #0x2
  4463fc:	sub	x9, x9, #0x2
  446400:	stp	x11, x9, [x19, #16]
  446404:	cbz	w10, 446588 <feof@plt+0x434a8>
  446408:	ldrh	w8, [x8]
  44640c:	lsl	x8, x8, #48
  446410:	rev	x0, x8
  446414:	b	446024 <feof@plt+0x42f44>
  446418:	ldr	w9, [x19, #8]
  44641c:	ldr	x4, [x19]
  446420:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446424:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446428:	sub	w5, w8, w9
  44642c:	add	x2, x2, #0x6df
  446430:	add	x3, x3, #0x6cf
  446434:	add	x0, sp, #0x10
  446438:	mov	w1, #0xc8                  	// #200
  44643c:	bl	402df0 <snprintf@plt>
  446440:	ldp	x8, x0, [x19, #40]
  446444:	add	x1, sp, #0x10
  446448:	mov	w2, wzr
  44644c:	blr	x8
  446450:	ldr	x9, [x19, #24]
  446454:	mov	x8, xzr
  446458:	mov	w10, #0x1                   	// #1
  44645c:	str	w10, [x19, #56]
  446460:	ldr	x10, [x19, #16]
  446464:	sub	x9, x9, x8
  446468:	str	x9, [x19, #24]
  44646c:	add	x8, x10, x8
  446470:	str	x8, [x19, #16]
  446474:	mov	w0, #0x1                   	// #1
  446478:	ldp	x20, x19, [sp, #304]
  44647c:	ldp	x22, x21, [sp, #288]
  446480:	ldp	x24, x23, [sp, #272]
  446484:	ldp	x26, x25, [sp, #256]
  446488:	ldp	x28, x27, [sp, #240]
  44648c:	ldp	x29, x30, [sp, #224]
  446490:	add	sp, sp, #0x140
  446494:	ret
  446498:	ldr	w9, [x19, #8]
  44649c:	ldr	x4, [x19]
  4464a0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4464a4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4464a8:	sub	w5, w8, w9
  4464ac:	add	x2, x2, #0x6df
  4464b0:	add	x3, x3, #0x6cf
  4464b4:	add	x0, sp, #0x10
  4464b8:	mov	w1, #0xc8                  	// #200
  4464bc:	bl	402df0 <snprintf@plt>
  4464c0:	ldp	x8, x0, [x19, #40]
  4464c4:	add	x1, sp, #0x10
  4464c8:	mov	w2, wzr
  4464cc:	blr	x8
  4464d0:	mov	w8, #0x1                   	// #1
  4464d4:	mov	x0, xzr
  4464d8:	str	w8, [x19, #56]
  4464dc:	b	4459ec <feof@plt+0x4290c>
  4464e0:	ldr	w9, [x19, #8]
  4464e4:	ldr	x4, [x19]
  4464e8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4464ec:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4464f0:	sub	w5, w8, w9
  4464f4:	add	x2, x2, #0x6df
  4464f8:	add	x3, x3, #0x6cf
  4464fc:	add	x0, sp, #0x10
  446500:	mov	w1, #0xc8                  	// #200
  446504:	bl	402df0 <snprintf@plt>
  446508:	ldp	x8, x0, [x19, #40]
  44650c:	add	x1, sp, #0x10
  446510:	mov	w2, wzr
  446514:	blr	x8
  446518:	mov	w8, #0x1                   	// #1
  44651c:	mov	x0, xzr
  446520:	str	w8, [x19, #56]
  446524:	b	445eac <feof@plt+0x42dcc>
  446528:	ldr	w9, [x19, #8]
  44652c:	ldr	x4, [x19]
  446530:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446534:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446538:	sub	w5, w8, w9
  44653c:	add	x2, x2, #0x6df
  446540:	add	x3, x3, #0x6cf
  446544:	add	x0, sp, #0x10
  446548:	mov	w1, #0xc8                  	// #200
  44654c:	bl	402df0 <snprintf@plt>
  446550:	ldp	x8, x0, [x19, #40]
  446554:	add	x1, sp, #0x10
  446558:	mov	w2, wzr
  44655c:	blr	x8
  446560:	mov	w8, #0x1                   	// #1
  446564:	mov	x0, xzr
  446568:	str	w8, [x19, #56]
  44656c:	b	445ecc <feof@plt+0x42dec>
  446570:	ldr	w0, [x8]
  446574:	b	4459ec <feof@plt+0x4290c>
  446578:	ldr	w0, [x8]
  44657c:	b	445eac <feof@plt+0x42dcc>
  446580:	ldr	w0, [x8]
  446584:	b	445ecc <feof@plt+0x42dec>
  446588:	ldrh	w0, [x8]
  44658c:	b	446024 <feof@plt+0x42f44>
  446590:	sub	sp, sp, #0x170
  446594:	stp	x29, x30, [sp, #272]
  446598:	stp	x28, x27, [sp, #288]
  44659c:	stp	x26, x25, [sp, #304]
  4465a0:	stp	x24, x23, [sp, #320]
  4465a4:	stp	x22, x21, [sp, #336]
  4465a8:	stp	x20, x19, [sp, #352]
  4465ac:	add	x29, sp, #0x110
  4465b0:	ldp	x19, x20, [x29, #96]
  4465b4:	subs	x8, x7, x3
  4465b8:	b.ls	4469e8 <feof@plt+0x43908>  // b.plast
  4465bc:	ldr	x25, [x29, #112]
  4465c0:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  4465c4:	adrp	x27, 472000 <_obstack_memory_used@@Base+0x10838>
  4465c8:	mov	x23, x4
  4465cc:	mov	x21, x2
  4465d0:	mov	x22, x1
  4465d4:	mov	x24, x0
  4465d8:	add	x9, x9, #0x482
  4465dc:	add	x10, x6, x3
  4465e0:	add	x27, x27, #0x624
  4465e4:	str	w5, [sp, #32]
  4465e8:	stp	x19, x20, [sp, #40]
  4465ec:	str	wzr, [sp, #56]
  4465f0:	stp	x9, x6, [sp]
  4465f4:	stp	x10, x8, [sp, #16]
  4465f8:	b	446608 <feof@plt+0x43528>
  4465fc:	mov	x23, x0
  446600:	ldr	w8, [sp, #56]
  446604:	cbnz	w8, 4469fc <feof@plt+0x4391c>
  446608:	ldr	w8, [x21, #48]
  44660c:	sub	w8, w8, #0x1
  446610:	cmp	w8, #0x7
  446614:	b.hi	446674 <feof@plt+0x43594>  // b.pmore
  446618:	adr	x9, 446628 <feof@plt+0x43548>
  44661c:	ldrb	w10, [x27, x8]
  446620:	add	x9, x9, x10, lsl #2
  446624:	br	x9
  446628:	ldp	x8, x9, [sp, #16]
  44662c:	cbz	x9, 4466c4 <feof@plt+0x435e4>
  446630:	add	x10, x8, #0x1
  446634:	sub	x9, x9, #0x1
  446638:	stp	x10, x9, [sp, #16]
  44663c:	ldrb	w28, [x8]
  446640:	b	44674c <feof@plt+0x4366c>
  446644:	ldp	x8, x9, [sp, #16]
  446648:	cmp	x9, #0x1
  44664c:	b.ls	4466c4 <feof@plt+0x435e4>  // b.plast
  446650:	ldr	w10, [sp, #32]
  446654:	add	x11, x8, #0x2
  446658:	sub	x9, x9, #0x2
  44665c:	stp	x11, x9, [sp, #16]
  446660:	cbz	w10, 446740 <feof@plt+0x43660>
  446664:	ldrh	w8, [x8]
  446668:	lsl	x8, x8, #48
  44666c:	rev	x28, x8
  446670:	b	44674c <feof@plt+0x4366c>
  446674:	ldr	w8, [sp, #16]
  446678:	ldr	w9, [sp, #8]
  44667c:	ldr	x4, [sp]
  446680:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446684:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  446688:	sub	w5, w8, w9
  44668c:	add	x0, sp, #0x40
  446690:	mov	w1, #0xc8                  	// #200
  446694:	add	x2, x2, #0x6df
  446698:	add	x3, x3, #0x777
  44669c:	bl	402df0 <snprintf@plt>
  4466a0:	ldp	x8, x0, [sp, #40]
  4466a4:	add	x1, sp, #0x40
  4466a8:	mov	w2, wzr
  4466ac:	blr	x8
  4466b0:	mov	x28, xzr
  4466b4:	b	44674c <feof@plt+0x4366c>
  4466b8:	ldp	x8, x9, [sp, #16]
  4466bc:	cmp	x9, #0x3
  4466c0:	b.hi	44671c <feof@plt+0x4363c>  // b.pmore
  4466c4:	ldr	w9, [sp, #8]
  4466c8:	ldr	x4, [sp]
  4466cc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4466d0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4466d4:	sub	w5, w8, w9
  4466d8:	add	x0, sp, #0x40
  4466dc:	mov	w1, #0xc8                  	// #200
  4466e0:	add	x2, x2, #0x6df
  4466e4:	add	x3, x3, #0x6cf
  4466e8:	bl	402df0 <snprintf@plt>
  4466ec:	ldp	x8, x0, [sp, #40]
  4466f0:	add	x1, sp, #0x40
  4466f4:	mov	w2, wzr
  4466f8:	blr	x8
  4466fc:	mov	w8, #0x1                   	// #1
  446700:	mov	x28, xzr
  446704:	str	w8, [sp, #56]
  446708:	b	44674c <feof@plt+0x4366c>
  44670c:	mov	x0, sp
  446710:	bl	44557c <feof@plt+0x4249c>
  446714:	mov	x28, x0
  446718:	b	44674c <feof@plt+0x4366c>
  44671c:	ldr	w10, [sp, #32]
  446720:	add	x11, x8, #0x4
  446724:	sub	x9, x9, #0x4
  446728:	stp	x11, x9, [sp, #16]
  44672c:	cbz	w10, 446748 <feof@plt+0x43668>
  446730:	ldr	w8, [x8]
  446734:	lsl	x8, x8, #32
  446738:	rev	x28, x8
  44673c:	b	44674c <feof@plt+0x4366c>
  446740:	ldrh	w28, [x8]
  446744:	b	44674c <feof@plt+0x4366c>
  446748:	ldr	w28, [x8]
  44674c:	ldr	w8, [x21, #48]
  446750:	sub	w8, w8, #0x1
  446754:	cmp	w8, #0x7
  446758:	b.hi	4467c0 <feof@plt+0x436e0>  // b.pmore
  44675c:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  446760:	add	x11, x11, #0x62c
  446764:	adr	x9, 446774 <feof@plt+0x43694>
  446768:	ldrb	w10, [x11, x8]
  44676c:	add	x9, x9, x10, lsl #2
  446770:	br	x9
  446774:	ldp	x8, x9, [sp, #16]
  446778:	cbz	x9, 44684c <feof@plt+0x4376c>
  44677c:	add	x10, x8, #0x1
  446780:	sub	x9, x9, #0x1
  446784:	stp	x10, x9, [sp, #16]
  446788:	ldrb	w0, [x8]
  44678c:	b	4468f0 <feof@plt+0x43810>
  446790:	ldp	x8, x9, [sp, #16]
  446794:	cmp	x9, #0x1
  446798:	b.ls	44680c <feof@plt+0x4372c>  // b.plast
  44679c:	ldr	w10, [sp, #32]
  4467a0:	add	x11, x8, #0x2
  4467a4:	sub	x9, x9, #0x2
  4467a8:	stp	x11, x9, [sp, #16]
  4467ac:	cbz	w10, 44689c <feof@plt+0x437bc>
  4467b0:	ldrh	w8, [x8]
  4467b4:	lsl	x8, x8, #48
  4467b8:	rev	x0, x8
  4467bc:	b	4468f0 <feof@plt+0x43810>
  4467c0:	ldr	w8, [sp, #16]
  4467c4:	ldr	w9, [sp, #8]
  4467c8:	ldr	x4, [sp]
  4467cc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4467d0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4467d4:	sub	w5, w8, w9
  4467d8:	add	x0, sp, #0x40
  4467dc:	mov	w1, #0xc8                  	// #200
  4467e0:	add	x2, x2, #0x6df
  4467e4:	add	x3, x3, #0x777
  4467e8:	bl	402df0 <snprintf@plt>
  4467ec:	ldp	x8, x0, [sp, #40]
  4467f0:	add	x1, sp, #0x40
  4467f4:	mov	w2, wzr
  4467f8:	blr	x8
  4467fc:	b	446814 <feof@plt+0x43734>
  446800:	ldp	x8, x9, [sp, #16]
  446804:	cmp	x9, #0x3
  446808:	b.hi	446828 <feof@plt+0x43748>  // b.pmore
  44680c:	ldr	w9, [sp, #56]
  446810:	cbz	w9, 44685c <feof@plt+0x4377c>
  446814:	mov	x0, xzr
  446818:	b	4468f0 <feof@plt+0x43810>
  44681c:	mov	x0, sp
  446820:	bl	44557c <feof@plt+0x4249c>
  446824:	b	4468f0 <feof@plt+0x43810>
  446828:	ldr	w10, [sp, #32]
  44682c:	add	x11, x8, #0x4
  446830:	sub	x9, x9, #0x4
  446834:	stp	x11, x9, [sp, #16]
  446838:	cbz	w10, 4468a4 <feof@plt+0x437c4>
  44683c:	ldr	w8, [x8]
  446840:	lsl	x8, x8, #32
  446844:	rev	x0, x8
  446848:	b	4468f0 <feof@plt+0x43810>
  44684c:	ldr	w9, [sp, #56]
  446850:	cbz	w9, 4468ac <feof@plt+0x437cc>
  446854:	mov	w0, wzr
  446858:	b	4468f0 <feof@plt+0x43810>
  44685c:	ldr	w9, [sp, #8]
  446860:	ldr	x4, [sp]
  446864:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  446868:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44686c:	sub	w5, w8, w9
  446870:	add	x0, sp, #0x40
  446874:	mov	w1, #0xc8                  	// #200
  446878:	add	x2, x2, #0x6df
  44687c:	add	x3, x3, #0x6cf
  446880:	bl	402df0 <snprintf@plt>
  446884:	ldp	x8, x0, [sp, #40]
  446888:	add	x1, sp, #0x40
  44688c:	mov	w2, wzr
  446890:	blr	x8
  446894:	mov	x0, xzr
  446898:	b	4468e8 <feof@plt+0x43808>
  44689c:	ldrh	w0, [x8]
  4468a0:	b	4468f0 <feof@plt+0x43810>
  4468a4:	ldr	w0, [x8]
  4468a8:	b	4468f0 <feof@plt+0x43810>
  4468ac:	ldr	w9, [sp, #8]
  4468b0:	ldr	x4, [sp]
  4468b4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4468b8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4468bc:	sub	w5, w8, w9
  4468c0:	add	x0, sp, #0x40
  4468c4:	mov	w1, #0xc8                  	// #200
  4468c8:	add	x2, x2, #0x6df
  4468cc:	add	x3, x3, #0x6cf
  4468d0:	bl	402df0 <snprintf@plt>
  4468d4:	ldp	x8, x0, [sp, #40]
  4468d8:	add	x1, sp, #0x40
  4468dc:	mov	w2, wzr
  4468e0:	blr	x8
  4468e4:	mov	w0, wzr
  4468e8:	mov	w8, #0x1                   	// #1
  4468ec:	str	w8, [sp, #56]
  4468f0:	orr	x8, x0, x28
  4468f4:	cbz	x8, 446a04 <feof@plt+0x43924>
  4468f8:	ldr	w8, [x21, #48]
  4468fc:	sub	w8, w8, #0x1
  446900:	cmp	w8, #0x7
  446904:	b.hi	446954 <feof@plt+0x43874>  // b.pmore
  446908:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44690c:	add	x11, x11, #0x634
  446910:	adr	x9, 446920 <feof@plt+0x43840>
  446914:	ldrb	w10, [x11, x8]
  446918:	add	x9, x9, x10, lsl #2
  44691c:	br	x9
  446920:	cmp	x28, #0xff
  446924:	b.eq	4465fc <feof@plt+0x4351c>  // b.none
  446928:	b	446954 <feof@plt+0x43874>
  44692c:	mov	w8, #0xffff                	// #65535
  446930:	cmp	x28, x8
  446934:	b.eq	4465fc <feof@plt+0x4351c>  // b.none
  446938:	b	446954 <feof@plt+0x43874>
  44693c:	mov	w8, #0xffffffff            	// #-1
  446940:	cmp	x28, x8
  446944:	b.ne	446954 <feof@plt+0x43874>  // b.any
  446948:	b	4465fc <feof@plt+0x4351c>
  44694c:	cmn	x28, #0x1
  446950:	b.eq	4465fc <feof@plt+0x4351c>  // b.none
  446954:	ldr	x8, [x25, #24]
  446958:	add	x9, x23, x22
  44695c:	add	x26, x9, x28
  446960:	add	x28, x9, x0
  446964:	cbz	x8, 4469a4 <feof@plt+0x438c4>
  446968:	ldr	x10, [x25]
  44696c:	sub	x11, x8, #0x1
  446970:	mov	w8, #0x18                  	// #24
  446974:	madd	x8, x11, x8, x10
  446978:	ldr	x9, [x8, #8]!
  44697c:	cmp	x26, x9
  446980:	b.eq	446990 <feof@plt+0x438b0>  // b.none
  446984:	add	x12, x9, #0x1
  446988:	cmp	x26, x12
  44698c:	b.ne	4469a4 <feof@plt+0x438c4>  // b.any
  446990:	mov	w12, #0x18                  	// #24
  446994:	madd	x10, x11, x12, x10
  446998:	ldr	x10, [x10, #16]
  44699c:	cmp	x10, x21
  4469a0:	b.eq	4469d8 <feof@plt+0x438f8>  // b.none
  4469a4:	mov	w1, #0x18                  	// #24
  4469a8:	mov	x0, x24
  4469ac:	mov	x2, x19
  4469b0:	mov	x3, x20
  4469b4:	mov	x4, x25
  4469b8:	bl	4401c0 <feof@plt+0x3d0e0>
  4469bc:	cbz	x0, 446a10 <feof@plt+0x43930>
  4469c0:	stp	x26, x28, [x0]
  4469c4:	str	x21, [x0, #16]
  4469c8:	ldr	x8, [x25, #24]
  4469cc:	add	x8, x8, #0x1
  4469d0:	str	x8, [x25, #24]
  4469d4:	b	446600 <feof@plt+0x43520>
  4469d8:	cmp	x28, x9
  4469dc:	b.ls	446600 <feof@plt+0x43520>  // b.plast
  4469e0:	str	x28, [x8]
  4469e4:	b	446600 <feof@plt+0x43520>
  4469e8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4469ec:	add	x1, x1, #0x911
  4469f0:	mov	x0, x20
  4469f4:	mov	w2, wzr
  4469f8:	blr	x19
  4469fc:	mov	w0, wzr
  446a00:	b	446a10 <feof@plt+0x43930>
  446a04:	ldr	w8, [sp, #56]
  446a08:	cmp	w8, #0x0
  446a0c:	cset	w0, eq  // eq = none
  446a10:	ldp	x20, x19, [sp, #352]
  446a14:	ldp	x22, x21, [sp, #336]
  446a18:	ldp	x24, x23, [sp, #320]
  446a1c:	ldp	x26, x25, [sp, #304]
  446a20:	ldp	x28, x27, [sp, #288]
  446a24:	ldp	x29, x30, [sp, #272]
  446a28:	add	sp, sp, #0x170
  446a2c:	ret
  446a30:	sub	sp, sp, #0x140
  446a34:	stp	x29, x30, [sp, #224]
  446a38:	stp	x28, x27, [sp, #240]
  446a3c:	stp	x26, x25, [sp, #256]
  446a40:	stp	x24, x23, [sp, #272]
  446a44:	stp	x22, x21, [sp, #288]
  446a48:	stp	x20, x19, [sp, #304]
  446a4c:	add	x29, sp, #0xe0
  446a50:	mov	w8, #0x1                   	// #1
  446a54:	str	w8, [x6]
  446a58:	ldr	x8, [x1, #32]
  446a5c:	mov	x22, x6
  446a60:	cbz	x8, 446ad0 <feof@plt+0x439f0>
  446a64:	ldr	x10, [x1, #24]
  446a68:	mov	x20, x5
  446a6c:	mov	x23, x4
  446a70:	mov	x27, x3
  446a74:	mov	x21, x2
  446a78:	mov	x25, x1
  446a7c:	mov	x24, x0
  446a80:	mov	x11, xzr
  446a84:	mov	x12, x8
  446a88:	b	446a98 <feof@plt+0x439b8>
  446a8c:	mov	x12, x13
  446a90:	cmp	x11, x12
  446a94:	b.cs	446ad0 <feof@plt+0x439f0>  // b.hs, b.nlast
  446a98:	add	x9, x12, x11
  446a9c:	lsr	x13, x9, #1
  446aa0:	add	x9, x13, x13, lsl #1
  446aa4:	lsl	x14, x9, #3
  446aa8:	add	x9, x10, x14
  446aac:	ldr	x15, [x9]
  446ab0:	cmp	x15, x21
  446ab4:	b.hi	446a8c <feof@plt+0x439ac>  // b.pmore
  446ab8:	ldr	x15, [x9, #8]
  446abc:	cmp	x15, x21
  446ac0:	b.hi	446af8 <feof@plt+0x43a18>  // b.pmore
  446ac4:	add	x11, x13, #0x1
  446ac8:	cmp	x11, x12
  446acc:	b.cc	446a98 <feof@plt+0x439b8>  // b.lo, b.ul, b.last
  446ad0:	mov	w0, wzr
  446ad4:	str	wzr, [x22]
  446ad8:	ldp	x20, x19, [sp, #304]
  446adc:	ldp	x22, x21, [sp, #288]
  446ae0:	ldp	x24, x23, [sp, #272]
  446ae4:	ldp	x26, x25, [sp, #256]
  446ae8:	ldp	x28, x27, [sp, #240]
  446aec:	ldp	x29, x30, [sp, #224]
  446af0:	add	sp, sp, #0x140
  446af4:	ret
  446af8:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  446afc:	asr	x15, x14, #3
  446b00:	movk	x13, #0xaaab
  446b04:	orr	x14, xzr, #0x1
  446b08:	madd	x15, x15, x13, x14
  446b0c:	cmp	x15, x8
  446b10:	b.cs	446b60 <feof@plt+0x43a80>  // b.hs, b.nlast
  446b14:	add	x11, x12, x11
  446b18:	lsr	x11, x11, #1
  446b1c:	mov	w12, #0x18                  	// #24
  446b20:	madd	x11, x11, x12, x10
  446b24:	add	x11, x11, #0x18
  446b28:	ldr	x12, [x11]
  446b2c:	cmp	x12, x21
  446b30:	b.hi	446b60 <feof@plt+0x43a80>  // b.pmore
  446b34:	ldr	x12, [x11, #8]
  446b38:	cmp	x12, x21
  446b3c:	b.ls	446b5c <feof@plt+0x43a7c>  // b.plast
  446b40:	sub	x12, x11, x10
  446b44:	asr	x12, x12, #3
  446b48:	madd	x12, x12, x13, x14
  446b4c:	add	x9, x9, #0x18
  446b50:	cmp	x12, x8
  446b54:	add	x11, x11, #0x18
  446b58:	b.cc	446b28 <feof@plt+0x43a48>  // b.lo, b.ul, b.last
  446b5c:	sub	x9, x11, #0x18
  446b60:	ldr	x19, [x9, #16]
  446b64:	cmp	x9, x10
  446b68:	ldr	x8, [x19, #104]
  446b6c:	str	x8, [sp, #104]
  446b70:	b.ls	446bcc <feof@plt+0x43aec>  // b.plast
  446b74:	ldur	x10, [x9, #-24]
  446b78:	cmp	x10, x21
  446b7c:	b.hi	446bcc <feof@plt+0x43aec>  // b.pmore
  446b80:	ldur	x10, [x9, #-16]
  446b84:	cmp	x10, x21
  446b88:	b.ls	446bcc <feof@plt+0x43aec>  // b.plast
  446b8c:	ldr	w10, [x24, #8]
  446b90:	cbz	w10, 446ba0 <feof@plt+0x43ac0>
  446b94:	add	x8, x19, #0x68
  446b98:	ldar	x8, [x8]
  446b9c:	str	x8, [sp, #104]
  446ba0:	cmn	x8, #0x1
  446ba4:	b.ne	446bcc <feof@plt+0x43aec>  // b.any
  446ba8:	ldur	x19, [x9, #-8]
  446bac:	sub	x28, x9, #0x18
  446bb0:	mov	x9, x28
  446bb4:	ldr	x8, [x19, #104]
  446bb8:	str	x8, [sp, #104]
  446bbc:	ldr	x10, [x25, #24]
  446bc0:	cmp	x28, x10
  446bc4:	b.hi	446b74 <feof@plt+0x43a94>  // b.pmore
  446bc8:	b	446bd0 <feof@plt+0x43af0>
  446bcc:	mov	x28, x9
  446bd0:	ldr	w9, [x24, #8]
  446bd4:	cbz	w9, 446be4 <feof@plt+0x43b04>
  446bd8:	add	x8, x19, #0x68
  446bdc:	ldar	x8, [x8]
  446be0:	str	x8, [sp, #104]
  446be4:	cbz	x8, 446cf4 <feof@plt+0x43c14>
  446be8:	mov	w9, wzr
  446bec:	cmn	x8, #0x1
  446bf0:	b.eq	446f54 <feof@plt+0x43e74>  // b.none
  446bf4:	ldr	x11, [x28, #16]
  446bf8:	ldr	x12, [x11, #112]
  446bfc:	cbz	x12, 446c48 <feof@plt+0x43b68>
  446c00:	mov	x13, xzr
  446c04:	mov	w10, #0x18                  	// #24
  446c08:	b	446c18 <feof@plt+0x43b38>
  446c0c:	cmp	x13, x9
  446c10:	mov	x12, x9
  446c14:	b.cs	446c48 <feof@plt+0x43b68>  // b.hs, b.nlast
  446c18:	add	x9, x12, x13
  446c1c:	lsr	x9, x9, #1
  446c20:	madd	x14, x9, x10, x8
  446c24:	ldr	x15, [x14]
  446c28:	cmp	x15, x21
  446c2c:	b.hi	446c0c <feof@plt+0x43b2c>  // b.pmore
  446c30:	ldr	x13, [x14, #24]
  446c34:	cmp	x13, x21
  446c38:	b.hi	446e18 <feof@plt+0x43d38>  // b.pmore
  446c3c:	add	x13, x9, #0x1
  446c40:	mov	x9, x12
  446c44:	b	446c0c <feof@plt+0x43b2c>
  446c48:	ldr	x25, [x11, #80]
  446c4c:	cbnz	x25, 446ce4 <feof@plt+0x43c04>
  446c50:	ldr	x25, [x11, #64]
  446c54:	cbz	x25, 446ce0 <feof@plt+0x43c00>
  446c58:	ldrb	w8, [x25]
  446c5c:	cmp	w8, #0x2f
  446c60:	b.eq	446ce0 <feof@plt+0x43c00>  // b.none
  446c64:	ldr	x26, [x11, #72]
  446c68:	cbz	x26, 446ce0 <feof@plt+0x43c00>
  446c6c:	mov	x0, x25
  446c70:	str	x27, [sp, #24]
  446c74:	bl	402a50 <strlen@plt>
  446c78:	mov	x19, x0
  446c7c:	mov	x0, x26
  446c80:	bl	402a50 <strlen@plt>
  446c84:	add	x8, x19, x0
  446c88:	mov	x27, x0
  446c8c:	add	x1, x8, #0x2
  446c90:	mov	x0, x24
  446c94:	mov	x2, x23
  446c98:	mov	x3, x20
  446c9c:	str	x19, [sp, #16]
  446ca0:	bl	43feec <feof@plt+0x3ce0c>
  446ca4:	cbz	x0, 446ad4 <feof@plt+0x439f4>
  446ca8:	mov	x1, x26
  446cac:	mov	x2, x27
  446cb0:	mov	x23, x0
  446cb4:	bl	4029c0 <memcpy@plt>
  446cb8:	add	x0, x23, x27
  446cbc:	mov	w8, #0x2f                  	// #47
  446cc0:	strb	w8, [x0], #1
  446cc4:	ldr	x8, [sp, #16]
  446cc8:	mov	x1, x25
  446ccc:	add	x2, x8, #0x1
  446cd0:	bl	4029c0 <memcpy@plt>
  446cd4:	ldr	x11, [x28, #16]
  446cd8:	ldr	x27, [sp, #24]
  446cdc:	mov	x25, x23
  446ce0:	str	x25, [x11, #80]
  446ce4:	mov	x0, x20
  446ce8:	mov	x1, x21
  446cec:	mov	x2, x25
  446cf0:	b	446f88 <feof@plt+0x43ea8>
  446cf4:	ldr	x4, [x28, #16]
  446cf8:	add	x5, sp, #0x28
  446cfc:	add	x6, sp, #0x68
  446d00:	add	x7, sp, #0x20
  446d04:	mov	x0, x24
  446d08:	mov	x1, x25
  446d0c:	mov	x2, x23
  446d10:	mov	x3, x20
  446d14:	str	x27, [sp, #24]
  446d18:	bl	447054 <feof@plt+0x43f74>
  446d1c:	cbz	w0, 446dec <feof@plt+0x43d0c>
  446d20:	ldr	w8, [x24, #8]
  446d24:	ldr	x26, [x28, #16]
  446d28:	add	x27, x25, #0x80
  446d2c:	cmp	w8, #0x0
  446d30:	csel	x8, x27, xzr, eq  // eq = none
  446d34:	str	x8, [sp, #16]
  446d38:	cbnz	x8, 446d48 <feof@plt+0x43c68>
  446d3c:	movi	v0.2d, #0x0
  446d40:	sub	x27, x29, #0x30
  446d44:	stp	q0, q0, [x29, #-48]
  446d48:	adrp	x8, 472000 <_obstack_memory_used@@Base+0x10838>
  446d4c:	add	x8, x8, #0x45c
  446d50:	str	x8, [sp, #112]
  446d54:	ldr	x8, [x25, #56]
  446d58:	str	x8, [sp, #120]
  446d5c:	ldr	x8, [x26]
  446d60:	str	x8, [sp, #128]
  446d64:	ldr	x8, [x26, #8]
  446d68:	str	x8, [sp, #136]
  446d6c:	ldr	w9, [x25, #120]
  446d70:	stp	x23, x20, [sp, #152]
  446d74:	str	wzr, [sp, #168]
  446d78:	str	w9, [sp, #144]
  446d7c:	cbz	x8, 446db4 <feof@plt+0x43cd4>
  446d80:	add	x4, sp, #0x70
  446d84:	add	x5, sp, #0x28
  446d88:	mov	x0, x24
  446d8c:	mov	x1, x25
  446d90:	mov	x2, x26
  446d94:	mov	x3, xzr
  446d98:	mov	x6, x23
  446d9c:	mov	x7, x20
  446da0:	stp	x27, x27, [sp]
  446da4:	bl	448ecc <feof@plt+0x45dec>
  446da8:	cbz	w0, 446ed0 <feof@plt+0x43df0>
  446dac:	ldr	x8, [sp, #136]
  446db0:	cbnz	x8, 446d80 <feof@plt+0x43ca0>
  446db4:	ldr	x26, [x27, #24]
  446db8:	cbz	x26, 446e90 <feof@plt+0x43db0>
  446dbc:	ldr	x8, [sp, #16]
  446dc0:	cbz	x8, 446e98 <feof@plt+0x43db8>
  446dc4:	mov	x0, x24
  446dc8:	mov	x1, x8
  446dcc:	mov	x2, x23
  446dd0:	mov	x3, x20
  446dd4:	bl	4402c8 <feof@plt+0x3d1e8>
  446dd8:	mov	x27, x0
  446ddc:	cbz	x0, 446ed4 <feof@plt+0x43df4>
  446de0:	ldr	x8, [sp, #16]
  446de4:	str	xzr, [x8, #24]
  446de8:	b	446eb4 <feof@plt+0x43dd4>
  446dec:	mov	x27, xzr
  446df0:	mov	x26, xzr
  446df4:	mov	w9, wzr
  446df8:	ldr	w8, [x24, #8]
  446dfc:	cbnz	w8, 446f1c <feof@plt+0x43e3c>
  446e00:	ldr	x8, [sp, #32]
  446e04:	str	x26, [x19, #128]
  446e08:	stp	x8, x27, [x19, #112]
  446e0c:	ldr	x8, [sp, #104]
  446e10:	str	x8, [x19, #104]
  446e14:	b	446f48 <feof@plt+0x43e68>
  446e18:	ldr	x10, [x11, #128]
  446e1c:	cbz	x10, 446e74 <feof@plt+0x43d94>
  446e20:	ldr	x11, [x11, #120]
  446e24:	mov	x13, xzr
  446e28:	mov	x14, x10
  446e2c:	b	446e3c <feof@plt+0x43d5c>
  446e30:	mov	x14, x15
  446e34:	cmp	x13, x14
  446e38:	b.cs	446e74 <feof@plt+0x43d94>  // b.hs, b.nlast
  446e3c:	add	x12, x14, x13
  446e40:	lsr	x15, x12, #1
  446e44:	add	x12, x15, x15, lsl #1
  446e48:	lsl	x16, x12, #3
  446e4c:	add	x12, x11, x16
  446e50:	ldr	x17, [x12]
  446e54:	cmp	x17, x21
  446e58:	b.hi	446e30 <feof@plt+0x43d50>  // b.pmore
  446e5c:	ldr	x17, [x12, #8]
  446e60:	cmp	x17, x21
  446e64:	b.hi	446f98 <feof@plt+0x43eb8>  // b.pmore
  446e68:	add	x13, x15, #0x1
  446e6c:	cmp	x13, x14
  446e70:	b.cc	446e3c <feof@plt+0x43d5c>  // b.lo, b.ul, b.last
  446e74:	mov	w10, #0x18                  	// #24
  446e78:	madd	x8, x9, x10, x8
  446e7c:	ldr	x2, [x8, #8]
  446e80:	ldr	w3, [x8, #16]
  446e84:	mov	x0, x20
  446e88:	mov	x1, x21
  446e8c:	b	446f8c <feof@plt+0x43eac>
  446e90:	mov	x27, xzr
  446e94:	b	446ed8 <feof@plt+0x43df8>
  446e98:	sub	x1, x29, #0x30
  446e9c:	mov	x0, x24
  446ea0:	mov	x2, x23
  446ea4:	mov	x3, x20
  446ea8:	bl	4402d8 <feof@plt+0x3d1f8>
  446eac:	cbz	w0, 446ed0 <feof@plt+0x43df0>
  446eb0:	ldr	x27, [x27]
  446eb4:	adrp	x3, 449000 <feof@plt+0x45f20>
  446eb8:	add	x3, x3, #0x660
  446ebc:	mov	w2, #0x18                  	// #24
  446ec0:	mov	x0, x27
  446ec4:	mov	x1, x26
  446ec8:	bl	449fb4 <feof@plt+0x46ed4>
  446ecc:	b	446ed8 <feof@plt+0x43df8>
  446ed0:	mov	x27, xzr
  446ed4:	mov	x26, xzr
  446ed8:	ldr	x8, [sp, #72]
  446edc:	cbz	x8, 446ef8 <feof@plt+0x43e18>
  446ee0:	ldr	x1, [sp, #80]
  446ee4:	lsl	x2, x8, #3
  446ee8:	mov	x0, x24
  446eec:	mov	x3, x23
  446ef0:	mov	x4, x20
  446ef4:	bl	4400b0 <feof@plt+0x3cfd0>
  446ef8:	ldp	x8, x1, [sp, #88]
  446efc:	mov	x0, x24
  446f00:	mov	x3, x23
  446f04:	mov	x4, x20
  446f08:	lsl	x2, x8, #3
  446f0c:	bl	4400b0 <feof@plt+0x3cfd0>
  446f10:	mov	w9, #0x1                   	// #1
  446f14:	ldr	w8, [x24, #8]
  446f18:	cbz	w8, 446e00 <feof@plt+0x43d20>
  446f1c:	ldr	x8, [sp, #32]
  446f20:	add	x10, x19, #0x70
  446f24:	add	x11, x19, #0x78
  446f28:	add	x12, x19, #0x80
  446f2c:	stlr	x8, [x10]
  446f30:	stlr	x27, [x11]
  446f34:	stlr	x26, [x12]
  446f38:	ldr	x8, [sp, #104]
  446f3c:	add	x10, x19, #0x68
  446f40:	stlr	x8, [x10]
  446f44:	ldr	x8, [sp, #104]
  446f48:	ldr	x27, [sp, #24]
  446f4c:	cmn	x8, #0x1
  446f50:	b.ne	446bf4 <feof@plt+0x43b14>  // b.any
  446f54:	cbz	w9, 446f7c <feof@plt+0x43e9c>
  446f58:	mov	x0, x24
  446f5c:	mov	x1, x25
  446f60:	mov	x2, x21
  446f64:	mov	x3, x27
  446f68:	mov	x4, x23
  446f6c:	mov	x5, x20
  446f70:	mov	x6, x22
  446f74:	bl	446a30 <feof@plt+0x43950>
  446f78:	b	446ad8 <feof@plt+0x439f8>
  446f7c:	mov	x0, x20
  446f80:	mov	x1, x21
  446f84:	mov	x2, xzr
  446f88:	mov	w3, wzr
  446f8c:	mov	x4, xzr
  446f90:	blr	x27
  446f94:	b	446ad8 <feof@plt+0x439f8>
  446f98:	mov	x15, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  446f9c:	asr	x17, x16, #3
  446fa0:	movk	x15, #0xaaab
  446fa4:	orr	x16, xzr, #0x1
  446fa8:	madd	x17, x17, x15, x16
  446fac:	cmp	x17, x10
  446fb0:	b.cs	447000 <feof@plt+0x43f20>  // b.hs, b.nlast
  446fb4:	add	x13, x14, x13
  446fb8:	lsr	x13, x13, #1
  446fbc:	mov	w14, #0x18                  	// #24
  446fc0:	madd	x13, x13, x14, x11
  446fc4:	add	x13, x13, #0x18
  446fc8:	ldr	x14, [x13]
  446fcc:	cmp	x14, x21
  446fd0:	b.hi	446ffc <feof@plt+0x43f1c>  // b.pmore
  446fd4:	ldr	x14, [x13, #8]
  446fd8:	cmp	x14, x21
  446fdc:	b.ls	447000 <feof@plt+0x43f20>  // b.plast
  446fe0:	sub	x14, x13, x11
  446fe4:	asr	x14, x14, #3
  446fe8:	madd	x14, x14, x15, x16
  446fec:	add	x12, x12, #0x18
  446ff0:	cmp	x14, x10
  446ff4:	add	x13, x13, #0x18
  446ff8:	b.cc	446fc8 <feof@plt+0x43ee8>  // b.lo, b.ul, b.last
  446ffc:	sub	x12, x13, #0x18
  447000:	mov	w10, #0x18                  	// #24
  447004:	madd	x8, x9, x10, x8
  447008:	ldr	x9, [x8, #8]
  44700c:	ldr	x22, [x12, #16]
  447010:	add	x4, sp, #0x70
  447014:	add	x5, sp, #0x28
  447018:	str	x9, [sp, #112]
  44701c:	ldr	w8, [x8, #16]
  447020:	mov	x0, x21
  447024:	mov	x1, x22
  447028:	mov	x2, x27
  44702c:	mov	x3, x20
  447030:	str	w8, [sp, #40]
  447034:	bl	448d30 <feof@plt+0x45c50>
  447038:	cbnz	w0, 446ad8 <feof@plt+0x439f8>
  44703c:	ldr	x2, [sp, #112]
  447040:	ldr	w3, [sp, #40]
  447044:	ldr	x4, [x22]
  447048:	mov	x0, x20
  44704c:	mov	x1, x21
  447050:	b	446f90 <feof@plt+0x43eb0>
  447054:	sub	sp, sp, #0x1f0
  447058:	stp	x29, x30, [sp, #400]
  44705c:	stp	x28, x27, [sp, #416]
  447060:	stp	x26, x25, [sp, #432]
  447064:	stp	x24, x23, [sp, #448]
  447068:	stp	x22, x21, [sp, #464]
  44706c:	stp	x20, x19, [sp, #480]
  447070:	add	x29, sp, #0x190
  447074:	movi	v0.2d, #0x0
  447078:	stp	q0, q0, [sp, #160]
  44707c:	stp	q0, q0, [x5, #32]
  447080:	stp	q0, q0, [x5]
  447084:	ldr	x8, [x4, #56]
  447088:	ldr	x9, [x1, #80]
  44708c:	mov	x23, x5
  447090:	mov	x21, x3
  447094:	mov	x22, x2
  447098:	subs	x9, x9, x8
  44709c:	mov	x19, x7
  4470a0:	stp	x7, x0, [sp, #80]
  4470a4:	str	x6, [sp, #72]
  4470a8:	b.ls	447134 <feof@plt+0x44054>  // b.plast
  4470ac:	adrp	x10, 472000 <_obstack_memory_used@@Base+0x10838>
  4470b0:	add	x10, x10, #0x468
  4470b4:	str	x10, [sp, #96]
  4470b8:	ldr	x10, [x1, #72]
  4470bc:	mov	x20, x4
  4470c0:	mov	x25, x1
  4470c4:	mov	x24, x0
  4470c8:	add	x8, x10, x8
  4470cc:	str	x10, [sp, #104]
  4470d0:	stp	x8, x9, [sp, #112]
  4470d4:	ldr	w11, [x1, #120]
  4470d8:	cmp	x9, #0x3
  4470dc:	stp	x22, x21, [sp, #136]
  4470e0:	str	wzr, [sp, #152]
  4470e4:	str	w11, [sp, #128]
  4470e8:	b.hi	44714c <feof@plt+0x4406c>  // b.pmore
  4470ec:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4470f0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4470f4:	adrp	x4, 472000 <_obstack_memory_used@@Base+0x10838>
  4470f8:	sub	w5, w8, w10
  4470fc:	add	x2, x2, #0x6df
  447100:	add	x3, x3, #0x6cf
  447104:	add	x4, x4, #0x468
  447108:	add	x0, sp, #0xc0
  44710c:	mov	w1, #0xc8                  	// #200
  447110:	bl	402df0 <snprintf@plt>
  447114:	ldp	x8, x0, [sp, #136]
  447118:	add	x1, sp, #0xc0
  44711c:	mov	w2, wzr
  447120:	blr	x8
  447124:	mov	w8, wzr
  447128:	mov	w9, #0x1                   	// #1
  44712c:	str	w9, [sp, #152]
  447130:	b	447198 <feof@plt+0x440b8>
  447134:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  447138:	add	x1, x1, #0x7b2
  44713c:	mov	x0, x21
  447140:	mov	w2, wzr
  447144:	blr	x22
  447148:	b	44727c <feof@plt+0x4419c>
  44714c:	add	x10, x8, #0x4
  447150:	sub	x9, x9, #0x4
  447154:	stp	x10, x9, [sp, #112]
  447158:	cbz	w11, 447170 <feof@plt+0x44090>
  44715c:	ldrb	w9, [x8]
  447160:	ldrb	w10, [x8, #1]
  447164:	ldrb	w11, [x8, #2]
  447168:	add	x8, x8, #0x3
  44716c:	b	44717c <feof@plt+0x4409c>
  447170:	ldrb	w9, [x8, #3]
  447174:	ldrb	w10, [x8, #2]
  447178:	ldrb	w11, [x8, #1]
  44717c:	lsl	w9, w9, #24
  447180:	bfi	w9, w10, #16, #8
  447184:	bfi	w9, w11, #8, #8
  447188:	ldrb	w8, [x8]
  44718c:	orr	w8, w9, w8
  447190:	cmn	w8, #0x1
  447194:	b.eq	447384 <feof@plt+0x442a4>  // b.none
  447198:	mov	w9, wzr
  44719c:	mov	w0, w8
  4471a0:	ldr	x8, [sp, #112]
  4471a4:	cmp	x0, #0x1
  4471a8:	str	x0, [sp, #120]
  4471ac:	b.hi	447208 <feof@plt+0x44128>  // b.pmore
  4471b0:	ldr	w9, [sp, #152]
  4471b4:	cbnz	w9, 4471fc <feof@plt+0x4411c>
  4471b8:	ldr	w9, [sp, #104]
  4471bc:	ldr	x4, [sp, #96]
  4471c0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4471c4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4471c8:	sub	w5, w8, w9
  4471cc:	add	x2, x2, #0x6df
  4471d0:	add	x3, x3, #0x6cf
  4471d4:	add	x0, sp, #0xc0
  4471d8:	mov	w1, #0xc8                  	// #200
  4471dc:	bl	402df0 <snprintf@plt>
  4471e0:	ldp	x8, x0, [sp, #136]
  4471e4:	add	x1, sp, #0xc0
  4471e8:	mov	w2, wzr
  4471ec:	blr	x8
  4471f0:	ldr	x8, [sp, #112]
  4471f4:	mov	w9, #0x1                   	// #1
  4471f8:	str	w9, [sp, #152]
  4471fc:	mov	x10, x8
  447200:	str	wzr, [x23]
  447204:	b	447244 <feof@plt+0x44164>
  447208:	ldr	w11, [sp, #128]
  44720c:	add	x10, x8, #0x2
  447210:	sub	x12, x0, #0x2
  447214:	stp	x10, x12, [sp, #112]
  447218:	cmp	w11, #0x0
  44721c:	cinc	x13, x8, eq  // eq = none
  447220:	cinc	x14, x8, ne  // ne = any
  447224:	ldrb	w13, [x13]
  447228:	ldrb	w14, [x14]
  44722c:	bfi	w14, w13, #8, #8
  447230:	sub	w13, w14, #0x2
  447234:	and	w13, w13, #0xffff
  447238:	cmp	w13, #0x2
  44723c:	str	w14, [x23]
  447240:	b.ls	447314 <feof@plt+0x44234>  // b.plast
  447244:	ldr	w8, [sp, #104]
  447248:	ldr	x4, [sp, #96]
  44724c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447250:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447254:	sub	w5, w10, w8
  447258:	add	x2, x2, #0x6df
  44725c:	add	x3, x3, #0x7d0
  447260:	add	x0, sp, #0xc0
  447264:	mov	w1, #0xc8                  	// #200
  447268:	bl	402df0 <snprintf@plt>
  44726c:	ldp	x8, x0, [sp, #136]
  447270:	add	x1, sp, #0xc0
  447274:	mov	w2, wzr
  447278:	blr	x8
  44727c:	ldp	x8, x9, [sp, #168]
  447280:	ldr	x19, [sp, #88]
  447284:	add	x1, sp, #0xa0
  447288:	mov	x2, x22
  44728c:	add	x8, x9, x8
  447290:	mov	x0, x19
  447294:	mov	x3, x21
  447298:	stp	xzr, x8, [sp, #168]
  44729c:	bl	4402d8 <feof@plt+0x3d1f8>
  4472a0:	ldr	x8, [x23, #32]
  4472a4:	cbz	x8, 4472c0 <feof@plt+0x441e0>
  4472a8:	ldr	x1, [x23, #40]
  4472ac:	lsl	x2, x8, #3
  4472b0:	mov	x0, x19
  4472b4:	mov	x3, x22
  4472b8:	mov	x4, x21
  4472bc:	bl	4400b0 <feof@plt+0x3cfd0>
  4472c0:	ldp	x8, x1, [x23, #48]
  4472c4:	mov	x0, x19
  4472c8:	mov	x3, x22
  4472cc:	mov	x4, x21
  4472d0:	lsl	x2, x8, #3
  4472d4:	bl	4400b0 <feof@plt+0x3cfd0>
  4472d8:	ldr	x10, [sp, #72]
  4472dc:	mov	x9, #0xffffffffffffffff    	// #-1
  4472e0:	mov	x8, xzr
  4472e4:	mov	w0, wzr
  4472e8:	str	x9, [x10]
  4472ec:	ldr	x9, [sp, #80]
  4472f0:	str	x8, [x9]
  4472f4:	ldp	x20, x19, [sp, #480]
  4472f8:	ldp	x22, x21, [sp, #464]
  4472fc:	ldp	x24, x23, [sp, #448]
  447300:	ldp	x26, x25, [sp, #432]
  447304:	ldp	x28, x27, [sp, #416]
  447308:	ldp	x29, x30, [sp, #400]
  44730c:	add	sp, sp, #0x1f0
  447310:	ret
  447314:	cbz	w9, 4473bc <feof@plt+0x442dc>
  447318:	add	x0, sp, #0x60
  44731c:	bl	44557c <feof@plt+0x4249c>
  447320:	ldr	x9, [sp, #96]
  447324:	ldp	x19, x8, [sp, #112]
  447328:	ldr	w27, [sp, #152]
  44732c:	str	x9, [sp, #64]
  447330:	ldr	x9, [sp, #104]
  447334:	subs	x8, x8, x0
  447338:	str	x9, [sp, #56]
  44733c:	b.cs	447394 <feof@plt+0x442b4>  // b.hs, b.nlast
  447340:	cbnz	w27, 44727c <feof@plt+0x4419c>
  447344:	ldp	x8, x4, [sp, #56]
  447348:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  44734c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447350:	add	x2, x2, #0x6df
  447354:	sub	w5, w19, w8
  447358:	add	x3, x3, #0x6cf
  44735c:	add	x0, sp, #0xc0
  447360:	mov	w1, #0xc8                  	// #200
  447364:	bl	402df0 <snprintf@plt>
  447368:	ldp	x8, x0, [sp, #136]
  44736c:	add	x1, sp, #0xc0
  447370:	mov	w2, wzr
  447374:	blr	x8
  447378:	mov	w8, #0x1                   	// #1
  44737c:	str	w8, [sp, #152]
  447380:	b	44727c <feof@plt+0x4419c>
  447384:	add	x0, sp, #0x60
  447388:	bl	44557c <feof@plt+0x4249c>
  44738c:	mov	w9, #0x1                   	// #1
  447390:	b	4471a0 <feof@plt+0x440c0>
  447394:	ldr	x9, [sp, #136]
  447398:	str	x9, [sp, #40]
  44739c:	ldr	x9, [sp, #144]
  4473a0:	str	x9, [sp, #48]
  4473a4:	add	x9, x19, x0
  4473a8:	stp	x9, x8, [sp, #112]
  4473ac:	cbz	x0, 4473d4 <feof@plt+0x442f4>
  4473b0:	ldrb	w9, [x19], #1
  4473b4:	sub	x8, x0, #0x1
  4473b8:	b	44748c <feof@plt+0x443ac>
  4473bc:	cmp	x12, #0x3
  4473c0:	b.hi	4473e4 <feof@plt+0x44304>  // b.pmore
  4473c4:	ldr	w8, [sp, #152]
  4473c8:	cbz	w8, 447404 <feof@plt+0x44324>
  4473cc:	mov	x0, xzr
  4473d0:	b	447320 <feof@plt+0x44240>
  4473d4:	cbz	w27, 44744c <feof@plt+0x4436c>
  4473d8:	mov	x8, xzr
  4473dc:	mov	w9, wzr
  4473e0:	b	44748c <feof@plt+0x443ac>
  4473e4:	add	x9, x8, #0x6
  4473e8:	sub	x10, x0, #0x6
  4473ec:	stp	x9, x10, [sp, #112]
  4473f0:	cbz	w11, 4474c4 <feof@plt+0x443e4>
  4473f4:	ldur	w8, [x8, #2]
  4473f8:	lsl	x8, x8, #32
  4473fc:	rev	x0, x8
  447400:	b	447320 <feof@plt+0x44240>
  447404:	ldr	w8, [sp, #104]
  447408:	ldr	x4, [sp, #96]
  44740c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447410:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447414:	sub	w5, w10, w8
  447418:	add	x2, x2, #0x6df
  44741c:	add	x3, x3, #0x6cf
  447420:	add	x0, sp, #0xc0
  447424:	mov	w1, #0xc8                  	// #200
  447428:	bl	402df0 <snprintf@plt>
  44742c:	ldp	x8, x0, [sp, #136]
  447430:	add	x1, sp, #0xc0
  447434:	mov	w2, wzr
  447438:	blr	x8
  44743c:	mov	w8, #0x1                   	// #1
  447440:	mov	x0, xzr
  447444:	str	w8, [sp, #152]
  447448:	b	447320 <feof@plt+0x44240>
  44744c:	ldp	x8, x4, [sp, #56]
  447450:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447454:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447458:	add	x2, x2, #0x6df
  44745c:	sub	w5, w19, w8
  447460:	add	x3, x3, #0x6cf
  447464:	add	x0, sp, #0xc0
  447468:	mov	w1, #0xc8                  	// #200
  44746c:	bl	402df0 <snprintf@plt>
  447470:	ldp	x8, x0, [sp, #40]
  447474:	add	x1, sp, #0xc0
  447478:	mov	w2, wzr
  44747c:	blr	x8
  447480:	mov	x8, xzr
  447484:	mov	w9, wzr
  447488:	mov	w27, #0x1                   	// #1
  44748c:	ldr	w10, [x23]
  447490:	str	w9, [x23, #4]
  447494:	cmp	w10, #0x4
  447498:	b.ge	4474a4 <feof@plt+0x443c4>  // b.tcont
  44749c:	mov	w9, #0x1                   	// #1
  4474a0:	b	44750c <feof@plt+0x4442c>
  4474a4:	cbz	x8, 4474b4 <feof@plt+0x443d4>
  4474a8:	ldrb	w9, [x19], #1
  4474ac:	sub	x8, x8, #0x1
  4474b0:	b	44750c <feof@plt+0x4442c>
  4474b4:	cbz	w27, 4474cc <feof@plt+0x443ec>
  4474b8:	mov	x8, xzr
  4474bc:	mov	w9, wzr
  4474c0:	b	44750c <feof@plt+0x4442c>
  4474c4:	ldur	w0, [x8, #2]
  4474c8:	b	447320 <feof@plt+0x44240>
  4474cc:	ldp	x8, x4, [sp, #56]
  4474d0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4474d4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4474d8:	add	x2, x2, #0x6df
  4474dc:	sub	w5, w19, w8
  4474e0:	add	x3, x3, #0x6cf
  4474e4:	add	x0, sp, #0xc0
  4474e8:	mov	w1, #0xc8                  	// #200
  4474ec:	bl	402df0 <snprintf@plt>
  4474f0:	ldp	x8, x0, [sp, #40]
  4474f4:	add	x1, sp, #0xc0
  4474f8:	mov	w2, wzr
  4474fc:	blr	x8
  447500:	mov	x8, xzr
  447504:	mov	w9, wzr
  447508:	mov	w27, #0x1                   	// #1
  44750c:	str	w9, [x23, #8]
  447510:	cbz	x8, 447520 <feof@plt+0x44440>
  447514:	cmp	x8, #0x1
  447518:	b.ne	447608 <feof@plt+0x44528>  // b.any
  44751c:	add	x19, x19, #0x1
  447520:	cbnz	w27, 44755c <feof@plt+0x4447c>
  447524:	ldp	x8, x4, [sp, #56]
  447528:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  44752c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447530:	add	x2, x2, #0x6df
  447534:	sub	w5, w19, w8
  447538:	add	x3, x3, #0x6cf
  44753c:	add	x0, sp, #0xc0
  447540:	mov	w1, #0xc8                  	// #200
  447544:	bl	402df0 <snprintf@plt>
  447548:	ldp	x8, x0, [sp, #40]
  44754c:	add	x1, sp, #0xc0
  447550:	mov	w2, wzr
  447554:	blr	x8
  447558:	mov	w27, #0x1                   	// #1
  44755c:	str	wzr, [x23, #12]
  447560:	mov	x8, xzr
  447564:	mov	w9, wzr
  447568:	str	wzr, [x23, #16]
  44756c:	str	w9, [x23, #20]
  447570:	sub	w9, w9, #0x1
  447574:	subs	x28, x8, x9
  447578:	str	x19, [x23, #24]
  44757c:	b.cs	447590 <feof@plt+0x444b0>  // b.hs, b.nlast
  447580:	cbnz	w27, 44727c <feof@plt+0x4419c>
  447584:	ldr	x8, [sp, #56]
  447588:	sub	w5, w19, w8
  44758c:	b	447b94 <feof@plt+0x44ab4>
  447590:	stp	x25, x20, [sp]
  447594:	add	x25, x19, x9
  447598:	str	xzr, [x23, #32]
  44759c:	b.le	44765c <feof@plt+0x4457c>
  4475a0:	mov	x20, xzr
  4475a4:	add	x26, x19, x8
  4475a8:	mov	x19, x25
  4475ac:	ldrb	w8, [x19]
  4475b0:	cbz	w8, 4475d8 <feof@plt+0x444f8>
  4475b4:	sub	x1, x26, x19
  4475b8:	mov	x0, x19
  4475bc:	bl	403020 <strnlen@plt>
  4475c0:	add	x8, x0, x19
  4475c4:	add	x19, x8, #0x1
  4475c8:	add	x20, x20, #0x1
  4475cc:	cmp	x19, x26
  4475d0:	str	x20, [x23, #32]
  4475d4:	b.cc	4475ac <feof@plt+0x444cc>  // b.lo, b.ul, b.last
  4475d8:	mov	x26, x23
  4475dc:	str	xzr, [x26, #40]!
  4475e0:	str	x26, [sp, #32]
  4475e4:	cbz	x20, 447694 <feof@plt+0x445b4>
  4475e8:	ldp	x2, x3, [sp, #136]
  4475ec:	lsl	x1, x20, #3
  4475f0:	mov	x0, x24
  4475f4:	bl	43feec <feof@plt+0x3ce0c>
  4475f8:	mov	x19, x0
  4475fc:	str	x0, [x26]
  447600:	cbnz	x0, 447698 <feof@plt+0x445b8>
  447604:	b	44727c <feof@plt+0x4419c>
  447608:	ldrsb	w9, [x19, #1]
  44760c:	cmp	x8, #0x2
  447610:	str	w9, [x23, #12]
  447614:	b.ne	447670 <feof@plt+0x44590>  // b.any
  447618:	add	x19, x19, #0x2
  44761c:	cbnz	w27, 447560 <feof@plt+0x44480>
  447620:	ldp	x8, x4, [sp, #56]
  447624:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447628:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44762c:	add	x2, x2, #0x6df
  447630:	sub	w5, w19, w8
  447634:	add	x3, x3, #0x6cf
  447638:	add	x0, sp, #0xc0
  44763c:	mov	w1, #0xc8                  	// #200
  447640:	bl	402df0 <snprintf@plt>
  447644:	ldp	x8, x0, [sp, #40]
  447648:	add	x1, sp, #0xc0
  44764c:	mov	w2, wzr
  447650:	blr	x8
  447654:	mov	w27, #0x1                   	// #1
  447658:	b	447560 <feof@plt+0x44480>
  44765c:	mov	x8, x23
  447660:	str	xzr, [x8, #40]!
  447664:	mov	x19, xzr
  447668:	str	x8, [sp, #32]
  44766c:	b	447698 <feof@plt+0x445b8>
  447670:	ldrb	w9, [x19, #2]
  447674:	cmp	x8, #0x3
  447678:	str	w9, [x23, #16]
  44767c:	b.ne	447bbc <feof@plt+0x44adc>  // b.any
  447680:	add	x19, x19, #0x3
  447684:	cbz	w27, 447be4 <feof@plt+0x44b04>
  447688:	mov	x8, xzr
  44768c:	mov	w9, wzr
  447690:	b	44756c <feof@plt+0x4448c>
  447694:	mov	x19, xzr
  447698:	ldrb	w8, [x25]
  44769c:	cbz	w8, 447744 <feof@plt+0x44664>
  4476a0:	mov	x26, xzr
  4476a4:	mov	x20, x25
  4476a8:	cbnz	w27, 44727c <feof@plt+0x4419c>
  4476ac:	mov	x0, x25
  4476b0:	mov	x1, x28
  4476b4:	bl	403020 <strnlen@plt>
  4476b8:	add	x9, x0, #0x1
  4476bc:	subs	x8, x28, x9
  4476c0:	b.cs	44770c <feof@plt+0x4462c>  // b.hs, b.nlast
  4476c4:	ldp	x8, x4, [sp, #56]
  4476c8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4476cc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4476d0:	add	x0, sp, #0xc0
  4476d4:	sub	w5, w20, w8
  4476d8:	mov	w1, #0xc8                  	// #200
  4476dc:	add	x2, x2, #0x6df
  4476e0:	add	x3, x3, #0x6cf
  4476e4:	bl	402df0 <snprintf@plt>
  4476e8:	ldp	x8, x0, [sp, #40]
  4476ec:	add	x1, sp, #0xc0
  4476f0:	mov	w2, wzr
  4476f4:	blr	x8
  4476f8:	ldr	x8, [sp, #32]
  4476fc:	mov	x25, xzr
  447700:	mov	w27, #0x1                   	// #1
  447704:	ldr	x19, [x8]
  447708:	b	44771c <feof@plt+0x4463c>
  44770c:	mov	x28, x8
  447710:	ldr	x8, [sp, #32]
  447714:	mov	w27, wzr
  447718:	add	x20, x25, x9
  44771c:	str	x25, [x19, x26]
  447720:	ldr	x19, [x8]
  447724:	ldr	x8, [x19, x26]
  447728:	cbz	x8, 44727c <feof@plt+0x4419c>
  44772c:	ldrb	w8, [x20]
  447730:	add	x26, x26, #0x8
  447734:	mov	x25, x20
  447738:	cbnz	w8, 4476a8 <feof@plt+0x445c8>
  44773c:	mov	x25, x20
  447740:	b	447748 <feof@plt+0x44668>
  447744:	mov	x20, x25
  447748:	ldr	x24, [sp, #88]
  44774c:	cbz	x28, 447b88 <feof@plt+0x44aa8>
  447750:	mov	x19, xzr
  447754:	add	x20, x25, #0x1
  447758:	cmp	x28, #0x2
  44775c:	str	xzr, [x23, #48]
  447760:	b.lt	447830 <feof@plt+0x44750>  // b.tstop
  447764:	mov	x19, xzr
  447768:	add	x26, x25, x28
  44776c:	mov	x25, x20
  447770:	b	44778c <feof@plt+0x446ac>
  447774:	mov	w8, #0x1                   	// #1
  447778:	add	x25, x9, x8
  44777c:	add	x19, x19, #0x1
  447780:	cmp	x25, x26
  447784:	str	x19, [x23, #48]
  447788:	b.cs	447830 <feof@plt+0x44750>  // b.hs, b.nlast
  44778c:	ldrb	w8, [x25]
  447790:	cbz	w8, 447830 <feof@plt+0x44750>
  447794:	sub	x1, x26, x25
  447798:	mov	x0, x25
  44779c:	bl	403020 <strnlen@plt>
  4477a0:	add	x9, x0, x25
  4477a4:	ldrsb	w8, [x9, #1]!
  4477a8:	tbnz	w8, #31, 4477b4 <feof@plt+0x446d4>
  4477ac:	mov	w8, #0x1                   	// #1
  4477b0:	b	4477cc <feof@plt+0x446ec>
  4477b4:	add	x8, x25, x0
  4477b8:	mov	w10, #0x2                   	// #2
  4477bc:	ldrsb	w11, [x8, x10]
  4477c0:	add	x10, x10, #0x1
  4477c4:	tbnz	w11, #31, 4477bc <feof@plt+0x446dc>
  4477c8:	sub	x8, x10, #0x1
  4477cc:	add	x9, x9, x8
  4477d0:	ldrsb	w10, [x9]
  4477d4:	tbnz	w10, #31, 4477e0 <feof@plt+0x44700>
  4477d8:	mov	w11, #0x1                   	// #1
  4477dc:	b	4477fc <feof@plt+0x4471c>
  4477e0:	add	x10, x0, x8
  4477e4:	add	x10, x25, x10
  4477e8:	mov	w11, #0x2                   	// #2
  4477ec:	ldrsb	w12, [x10, x11]
  4477f0:	add	x11, x11, #0x1
  4477f4:	tbnz	w12, #31, 4477ec <feof@plt+0x4470c>
  4477f8:	sub	x11, x11, #0x1
  4477fc:	add	x9, x9, x11
  447800:	ldrsb	w10, [x9]
  447804:	tbz	w10, #31, 447774 <feof@plt+0x44694>
  447808:	add	x8, x0, x8
  44780c:	add	x8, x8, x11
  447810:	add	x8, x25, x8
  447814:	mov	x10, xzr
  447818:	add	x8, x8, #0x2
  44781c:	ldrsb	w11, [x8, x10]
  447820:	add	x10, x10, #0x1
  447824:	tbnz	w11, #31, 44781c <feof@plt+0x4473c>
  447828:	add	x8, x10, #0x1
  44782c:	b	447778 <feof@plt+0x44698>
  447830:	ldp	x2, x3, [sp, #136]
  447834:	lsl	x1, x19, #3
  447838:	mov	x0, x24
  44783c:	bl	43feec <feof@plt+0x3ce0c>
  447840:	str	x0, [x23, #56]
  447844:	cbz	x0, 44727c <feof@plt+0x4419c>
  447848:	ldrb	w9, [x20]
  44784c:	cmp	w27, #0x0
  447850:	cset	w8, eq  // eq = none
  447854:	cbz	w9, 447bcc <feof@plt+0x44aec>
  447858:	sub	x25, x28, #0x1
  44785c:	str	xzr, [sp, #16]
  447860:	b	447880 <feof@plt+0x447a0>
  447864:	ldr	w8, [sp, #24]
  447868:	ldrb	w9, [x20]
  44786c:	cmp	w8, #0x0
  447870:	add	x28, x28, #0x1
  447874:	cset	w8, eq  // eq = none
  447878:	str	x28, [sp, #16]
  44787c:	cbz	w9, 447bcc <feof@plt+0x44aec>
  447880:	tbz	w8, #0, 44727c <feof@plt+0x4419c>
  447884:	mov	x0, x20
  447888:	mov	x1, x25
  44788c:	bl	403020 <strnlen@plt>
  447890:	add	x9, x0, #0x1
  447894:	subs	x25, x25, x9
  447898:	b.cc	447b8c <feof@plt+0x44aac>  // b.lo, b.ul, b.last
  44789c:	mov	x26, xzr
  4478a0:	mov	w27, wzr
  4478a4:	mov	w8, wzr
  4478a8:	add	x19, x20, x9
  4478ac:	b	4478c8 <feof@plt+0x447e8>
  4478b0:	and	x9, x28, #0x7f
  4478b4:	lsl	x9, x9, x27
  4478b8:	orr	x26, x9, x26
  4478bc:	sxtb	w9, w28
  4478c0:	add	w27, w27, #0x7
  4478c4:	tbz	w9, #31, 447960 <feof@plt+0x44880>
  4478c8:	cbz	x25, 44791c <feof@plt+0x4483c>
  4478cc:	ldrb	w28, [x19], #1
  4478d0:	cmp	w27, #0x3f
  4478d4:	sub	x25, x25, #0x1
  4478d8:	b.ls	4478b0 <feof@plt+0x447d0>  // b.plast
  4478dc:	cbnz	w8, 4478bc <feof@plt+0x447dc>
  4478e0:	ldp	x8, x4, [sp, #56]
  4478e4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4478e8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4478ec:	add	x0, sp, #0xc0
  4478f0:	sub	w5, w19, w8
  4478f4:	mov	w1, #0xc8                  	// #200
  4478f8:	add	x2, x2, #0x6df
  4478fc:	add	x3, x3, #0x798
  447900:	bl	402df0 <snprintf@plt>
  447904:	ldp	x8, x0, [sp, #40]
  447908:	add	x1, sp, #0xc0
  44790c:	mov	w2, wzr
  447910:	blr	x8
  447914:	mov	w8, #0x1                   	// #1
  447918:	b	4478bc <feof@plt+0x447dc>
  44791c:	ldp	x8, x4, [sp, #56]
  447920:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447924:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447928:	add	x0, sp, #0xc0
  44792c:	sub	w5, w19, w8
  447930:	mov	w1, #0xc8                  	// #200
  447934:	add	x2, x2, #0x6df
  447938:	add	x3, x3, #0x6cf
  44793c:	bl	402df0 <snprintf@plt>
  447940:	ldp	x27, x0, [sp, #40]
  447944:	add	x1, sp, #0xc0
  447948:	mov	w2, wzr
  44794c:	blr	x27
  447950:	mov	w8, #0x1                   	// #1
  447954:	mov	x26, xzr
  447958:	str	w8, [sp, #24]
  44795c:	b	447968 <feof@plt+0x44888>
  447960:	ldr	x27, [sp, #40]
  447964:	str	wzr, [sp, #24]
  447968:	ldrb	w8, [x20]
  44796c:	ldr	x28, [sp, #16]
  447970:	cmp	w8, #0x2f
  447974:	b.eq	447a0c <feof@plt+0x4492c>  // b.none
  447978:	cbz	x26, 44799c <feof@plt+0x448bc>
  44797c:	ldr	x9, [x23, #32]
  447980:	sub	x8, x26, #0x1
  447984:	cmp	x8, x9
  447988:	b.cs	448c2c <feof@plt+0x45b4c>  // b.hs, b.nlast
  44798c:	ldr	x9, [sp, #32]
  447990:	ldr	x9, [x9]
  447994:	ldr	x0, [x9, x8, lsl #3]
  447998:	b	4479a8 <feof@plt+0x448c8>
  44799c:	ldr	x8, [sp, #8]
  4479a0:	ldr	x0, [x8, #72]
  4479a4:	cbz	x0, 447a0c <feof@plt+0x4492c>
  4479a8:	mov	x24, x0
  4479ac:	bl	402a50 <strlen@plt>
  4479b0:	mov	x28, x0
  4479b4:	mov	x0, x20
  4479b8:	bl	402a50 <strlen@plt>
  4479bc:	ldp	x2, x3, [sp, #136]
  4479c0:	mov	x27, x0
  4479c4:	add	x8, x28, x0
  4479c8:	ldr	x0, [sp, #88]
  4479cc:	add	x1, x8, #0x2
  4479d0:	bl	43feec <feof@plt+0x3ce0c>
  4479d4:	cbz	x0, 44727c <feof@plt+0x4419c>
  4479d8:	mov	x1, x24
  4479dc:	mov	x2, x28
  4479e0:	mov	x26, x0
  4479e4:	bl	4029c0 <memcpy@plt>
  4479e8:	add	x0, x26, x28
  4479ec:	mov	w8, #0x2f                  	// #47
  4479f0:	strb	w8, [x0], #1
  4479f4:	add	x2, x27, #0x1
  4479f8:	mov	x1, x20
  4479fc:	bl	4029c0 <memcpy@plt>
  447a00:	ldr	x27, [sp, #40]
  447a04:	ldr	x28, [sp, #16]
  447a08:	mov	x20, x26
  447a0c:	ldr	x9, [x23, #56]
  447a10:	mov	w26, wzr
  447a14:	mov	w8, wzr
  447a18:	str	x20, [x9, x28, lsl #3]
  447a1c:	b	447a28 <feof@plt+0x44948>
  447a20:	add	w26, w26, #0x7
  447a24:	tbz	w20, #31, 447acc <feof@plt+0x449ec>
  447a28:	cbz	x25, 447a7c <feof@plt+0x4499c>
  447a2c:	ldrsb	w20, [x19], #1
  447a30:	cmp	w26, #0x40
  447a34:	sub	x25, x25, #0x1
  447a38:	b.cc	447a20 <feof@plt+0x44940>  // b.lo, b.ul, b.last
  447a3c:	cbnz	w8, 447a20 <feof@plt+0x44940>
  447a40:	ldp	x8, x4, [sp, #56]
  447a44:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447a48:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447a4c:	add	x0, sp, #0xc0
  447a50:	sub	w5, w19, w8
  447a54:	mov	w1, #0xc8                  	// #200
  447a58:	add	x2, x2, #0x6df
  447a5c:	add	x3, x3, #0x798
  447a60:	bl	402df0 <snprintf@plt>
  447a64:	ldr	x0, [sp, #48]
  447a68:	add	x1, sp, #0xc0
  447a6c:	mov	w2, wzr
  447a70:	blr	x27
  447a74:	mov	w8, #0x1                   	// #1
  447a78:	b	447a20 <feof@plt+0x44940>
  447a7c:	ldr	w8, [sp, #24]
  447a80:	cbz	w8, 447a8c <feof@plt+0x449ac>
  447a84:	mov	x25, xzr
  447a88:	b	447acc <feof@plt+0x449ec>
  447a8c:	ldp	x8, x4, [sp, #56]
  447a90:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447a94:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447a98:	add	x0, sp, #0xc0
  447a9c:	sub	w5, w19, w8
  447aa0:	mov	w1, #0xc8                  	// #200
  447aa4:	add	x2, x2, #0x6df
  447aa8:	add	x3, x3, #0x6cf
  447aac:	bl	402df0 <snprintf@plt>
  447ab0:	ldr	x0, [sp, #48]
  447ab4:	add	x1, sp, #0xc0
  447ab8:	mov	w2, wzr
  447abc:	blr	x27
  447ac0:	mov	w8, #0x1                   	// #1
  447ac4:	mov	x25, xzr
  447ac8:	str	w8, [sp, #24]
  447acc:	mov	w26, wzr
  447ad0:	mov	w8, wzr
  447ad4:	mov	x20, x19
  447ad8:	b	447ae4 <feof@plt+0x44a04>
  447adc:	add	w26, w26, #0x7
  447ae0:	tbz	w19, #31, 447864 <feof@plt+0x44784>
  447ae4:	cbz	x25, 447b38 <feof@plt+0x44a58>
  447ae8:	ldrsb	w19, [x20], #1
  447aec:	cmp	w26, #0x40
  447af0:	sub	x25, x25, #0x1
  447af4:	b.cc	447adc <feof@plt+0x449fc>  // b.lo, b.ul, b.last
  447af8:	cbnz	w8, 447adc <feof@plt+0x449fc>
  447afc:	ldp	x8, x4, [sp, #56]
  447b00:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447b04:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447b08:	add	x0, sp, #0xc0
  447b0c:	sub	w5, w20, w8
  447b10:	mov	w1, #0xc8                  	// #200
  447b14:	add	x2, x2, #0x6df
  447b18:	add	x3, x3, #0x798
  447b1c:	bl	402df0 <snprintf@plt>
  447b20:	ldr	x0, [sp, #48]
  447b24:	add	x1, sp, #0xc0
  447b28:	mov	w2, wzr
  447b2c:	blr	x27
  447b30:	mov	w8, #0x1                   	// #1
  447b34:	b	447adc <feof@plt+0x449fc>
  447b38:	ldr	w8, [sp, #24]
  447b3c:	cbz	w8, 447b48 <feof@plt+0x44a68>
  447b40:	mov	x25, xzr
  447b44:	b	447868 <feof@plt+0x44788>
  447b48:	ldp	x8, x4, [sp, #56]
  447b4c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447b50:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447b54:	add	x0, sp, #0xc0
  447b58:	sub	w5, w20, w8
  447b5c:	mov	w1, #0xc8                  	// #200
  447b60:	add	x2, x2, #0x6df
  447b64:	add	x3, x3, #0x6cf
  447b68:	bl	402df0 <snprintf@plt>
  447b6c:	ldr	x0, [sp, #48]
  447b70:	add	x1, sp, #0xc0
  447b74:	mov	w2, wzr
  447b78:	blr	x27
  447b7c:	mov	x25, xzr
  447b80:	mov	w8, #0x1                   	// #1
  447b84:	b	447868 <feof@plt+0x44788>
  447b88:	cbnz	w27, 44727c <feof@plt+0x4419c>
  447b8c:	ldr	x8, [sp, #56]
  447b90:	sub	w5, w20, w8
  447b94:	ldr	x4, [sp, #64]
  447b98:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447b9c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447ba0:	add	x2, x2, #0x6df
  447ba4:	add	x3, x3, #0x6cf
  447ba8:	add	x0, sp, #0xc0
  447bac:	mov	w1, #0xc8                  	// #200
  447bb0:	bl	402df0 <snprintf@plt>
  447bb4:	ldp	x8, x0, [sp, #40]
  447bb8:	b	447270 <feof@plt+0x44190>
  447bbc:	ldrb	w9, [x19, #3]
  447bc0:	add	x19, x19, #0x4
  447bc4:	sub	x8, x8, #0x4
  447bc8:	b	44756c <feof@plt+0x4448c>
  447bcc:	cbz	w8, 44727c <feof@plt+0x4419c>
  447bd0:	ldr	x8, [x23, #48]
  447bd4:	cbz	x8, 447c28 <feof@plt+0x44b48>
  447bd8:	ldr	x8, [x23, #56]
  447bdc:	ldr	x27, [x8]
  447be0:	b	447c30 <feof@plt+0x44b50>
  447be4:	ldp	x8, x4, [sp, #56]
  447be8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447bec:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447bf0:	add	x2, x2, #0x6df
  447bf4:	sub	w5, w19, w8
  447bf8:	add	x3, x3, #0x6cf
  447bfc:	add	x0, sp, #0xc0
  447c00:	mov	w1, #0xc8                  	// #200
  447c04:	bl	402df0 <snprintf@plt>
  447c08:	ldp	x8, x0, [sp, #40]
  447c0c:	add	x1, sp, #0xc0
  447c10:	mov	w2, wzr
  447c14:	blr	x8
  447c18:	mov	x8, xzr
  447c1c:	mov	w9, wzr
  447c20:	mov	w27, #0x1                   	// #1
  447c24:	b	44756c <feof@plt+0x4448c>
  447c28:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x838>
  447c2c:	add	x27, x27, #0xbb5
  447c30:	ldr	x26, [sp]
  447c34:	ldr	x24, [sp, #88]
  447c38:	ldr	x20, [sp, #120]
  447c3c:	mov	w8, #0x1                   	// #1
  447c40:	str	w8, [sp, #56]
  447c44:	cbz	x20, 448ba4 <feof@plt+0x45ac4>
  447c48:	ldr	x8, [sp, #8]
  447c4c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  447c50:	mov	x28, xzr
  447c54:	mov	w0, wzr
  447c58:	add	x8, x8, #0x48
  447c5c:	add	x19, x19, #0x63c
  447c60:	mov	w25, #0x1                   	// #1
  447c64:	str	x8, [sp, #32]
  447c68:	str	x27, [sp, #48]
  447c6c:	ldr	x10, [sp, #112]
  447c70:	sub	x9, x20, #0x1
  447c74:	str	w0, [sp, #64]
  447c78:	add	x8, x10, #0x1
  447c7c:	stp	x8, x9, [sp, #112]
  447c80:	ldrb	w12, [x10]
  447c84:	ldr	w11, [x23, #20]
  447c88:	cmp	w11, w12
  447c8c:	b.ls	447d4c <feof@plt+0x44c6c>  // b.plast
  447c90:	cmp	w12, #0xc
  447c94:	b.hi	447ddc <feof@plt+0x44cfc>  // b.pmore
  447c98:	adr	x13, 447ca8 <feof@plt+0x44bc8>
  447c9c:	ldrh	w14, [x19, x12, lsl #1]
  447ca0:	add	x13, x13, x14, lsl #2
  447ca4:	br	x13
  447ca8:	cbz	x9, 447d3c <feof@plt+0x44c5c>
  447cac:	mov	w10, wzr
  447cb0:	mov	w20, wzr
  447cb4:	mov	x26, xzr
  447cb8:	add	x11, x8, #0x1
  447cbc:	sub	x9, x9, #0x1
  447cc0:	stp	x11, x9, [sp, #112]
  447cc4:	ldrb	w19, [x8]
  447cc8:	cmp	w20, #0x3f
  447ccc:	b.hi	447ce0 <feof@plt+0x44c00>  // b.pmore
  447cd0:	and	x8, x19, #0x7f
  447cd4:	lsl	x8, x8, x20
  447cd8:	orr	x26, x8, x26
  447cdc:	b	447d20 <feof@plt+0x44c40>
  447ce0:	cbnz	w10, 447d20 <feof@plt+0x44c40>
  447ce4:	ldr	w8, [sp, #104]
  447ce8:	ldr	x4, [sp, #96]
  447cec:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447cf0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447cf4:	sub	w5, w11, w8
  447cf8:	add	x0, sp, #0xc0
  447cfc:	mov	w1, #0xc8                  	// #200
  447d00:	add	x2, x2, #0x6df
  447d04:	add	x3, x3, #0x798
  447d08:	bl	402df0 <snprintf@plt>
  447d0c:	ldp	x8, x0, [sp, #136]
  447d10:	add	x1, sp, #0xc0
  447d14:	mov	w2, wzr
  447d18:	blr	x8
  447d1c:	mov	w10, #0x1                   	// #1
  447d20:	sxtb	w8, w19
  447d24:	tbz	w8, #31, 44831c <feof@plt+0x4523c>
  447d28:	ldp	x8, x9, [sp, #112]
  447d2c:	add	w20, w20, #0x7
  447d30:	cbnz	x9, 447cb8 <feof@plt+0x44bd8>
  447d34:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  447d38:	add	x19, x19, #0x63c
  447d3c:	ldr	w9, [sp, #152]
  447d40:	cbz	w9, 448398 <feof@plt+0x452b8>
  447d44:	mov	x26, xzr
  447d48:	b	4483dc <feof@plt+0x452fc>
  447d4c:	sub	w8, w12, w11
  447d50:	ldp	w11, w10, [x23, #12]
  447d54:	ldr	w15, [sp, #64]
  447d58:	ldp	w12, w13, [x23, #4]
  447d5c:	ldr	x9, [sp, #184]
  447d60:	udiv	w14, w8, w10
  447d64:	add	w15, w14, w15
  447d68:	ldp	x2, x3, [sp, #136]
  447d6c:	msub	w8, w14, w10, w8
  447d70:	mul	w10, w12, w15
  447d74:	add	w11, w11, w25
  447d78:	udiv	w12, w15, w13
  447d7c:	udiv	w10, w10, w13
  447d80:	msub	w12, w12, w13, w15
  447d84:	add	x28, x28, x10
  447d88:	add	w25, w11, w8
  447d8c:	str	w12, [sp, #64]
  447d90:	cbz	x9, 447ec8 <feof@plt+0x44de8>
  447d94:	ldr	x8, [sp, #160]
  447d98:	sub	x9, x9, #0x1
  447d9c:	mov	w10, #0x18                  	// #24
  447da0:	mul	x10, x9, x10
  447da4:	ldr	x10, [x8, x10]
  447da8:	cmp	x10, x28
  447dac:	b.ne	447ec8 <feof@plt+0x44de8>  // b.any
  447db0:	mov	w10, #0x18                  	// #24
  447db4:	madd	x10, x9, x10, x8
  447db8:	ldr	x10, [x10, #8]
  447dbc:	cmp	x10, x27
  447dc0:	b.ne	447ec8 <feof@plt+0x44de8>  // b.any
  447dc4:	mov	w10, #0x18                  	// #24
  447dc8:	madd	x8, x9, x10, x8
  447dcc:	ldr	w8, [x8, #16]
  447dd0:	cmp	w8, w25
  447dd4:	b.ne	447ec8 <feof@plt+0x44de8>  // b.any
  447dd8:	b	447efc <feof@plt+0x44e1c>
  447ddc:	ldr	x8, [x23, #24]
  447de0:	sub	w9, w12, #0x1
  447de4:	ldrb	w20, [x8, w9, uxtw]
  447de8:	cbnz	w20, 447e00 <feof@plt+0x44d20>
  447dec:	b	447efc <feof@plt+0x44e1c>
  447df0:	ldr	w8, [sp, #152]
  447df4:	cbz	w8, 447e78 <feof@plt+0x44d98>
  447df8:	subs	w20, w20, #0x1
  447dfc:	b.eq	448a10 <feof@plt+0x45930>  // b.none
  447e00:	mov	w26, wzr
  447e04:	mov	w8, wzr
  447e08:	b	447e14 <feof@plt+0x44d34>
  447e0c:	add	w26, w26, #0x7
  447e10:	tbz	w19, #31, 447df8 <feof@plt+0x44d18>
  447e14:	ldp	x10, x11, [sp, #112]
  447e18:	cbz	x11, 447df0 <feof@plt+0x44d10>
  447e1c:	add	x9, x10, #0x1
  447e20:	sub	x11, x11, #0x1
  447e24:	stp	x9, x11, [sp, #112]
  447e28:	ldrsb	w19, [x10]
  447e2c:	cmp	w26, #0x40
  447e30:	b.cc	447e0c <feof@plt+0x44d2c>  // b.lo, b.ul, b.last
  447e34:	cbnz	w8, 447e0c <feof@plt+0x44d2c>
  447e38:	ldr	w8, [sp, #104]
  447e3c:	ldr	x4, [sp, #96]
  447e40:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447e44:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447e48:	sub	w5, w9, w8
  447e4c:	add	x0, sp, #0xc0
  447e50:	mov	w1, #0xc8                  	// #200
  447e54:	add	x2, x2, #0x6df
  447e58:	add	x3, x3, #0x798
  447e5c:	bl	402df0 <snprintf@plt>
  447e60:	ldp	x8, x0, [sp, #136]
  447e64:	add	x1, sp, #0xc0
  447e68:	mov	w2, wzr
  447e6c:	blr	x8
  447e70:	mov	w8, #0x1                   	// #1
  447e74:	b	447e0c <feof@plt+0x44d2c>
  447e78:	ldr	w8, [sp, #104]
  447e7c:	ldr	x4, [sp, #96]
  447e80:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447e84:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447e88:	sub	w5, w10, w8
  447e8c:	add	x0, sp, #0xc0
  447e90:	mov	w1, #0xc8                  	// #200
  447e94:	add	x2, x2, #0x6df
  447e98:	add	x3, x3, #0x6cf
  447e9c:	bl	402df0 <snprintf@plt>
  447ea0:	ldp	x8, x0, [sp, #136]
  447ea4:	add	x1, sp, #0xc0
  447ea8:	mov	w2, wzr
  447eac:	blr	x8
  447eb0:	mov	w8, #0x1                   	// #1
  447eb4:	str	w8, [sp, #152]
  447eb8:	b	447df8 <feof@plt+0x44d18>
  447ebc:	ldr	x9, [sp, #184]
  447ec0:	ldp	x2, x3, [sp, #136]
  447ec4:	cbnz	x9, 447d94 <feof@plt+0x44cb4>
  447ec8:	add	x4, sp, #0xa0
  447ecc:	mov	w1, #0x18                  	// #24
  447ed0:	mov	x0, x24
  447ed4:	bl	4401c0 <feof@plt+0x3d0e0>
  447ed8:	cbz	x0, 447efc <feof@plt+0x44e1c>
  447edc:	ldr	x8, [x26, #16]
  447ee0:	str	w25, [x0, #16]
  447ee4:	add	x8, x8, x28
  447ee8:	stp	x8, x27, [x0]
  447eec:	ldr	x8, [sp, #184]
  447ef0:	str	w8, [x0, #20]
  447ef4:	add	x8, x8, #0x1
  447ef8:	str	x8, [sp, #184]
  447efc:	ldr	x20, [sp, #120]
  447f00:	ldr	w0, [sp, #64]
  447f04:	mov	w10, w25
  447f08:	mov	x2, x27
  447f0c:	mov	x1, x28
  447f10:	mov	x28, x1
  447f14:	mov	x27, x2
  447f18:	mov	w25, w10
  447f1c:	cbnz	x20, 447c6c <feof@plt+0x44b8c>
  447f20:	b	448b9c <feof@plt+0x45abc>
  447f24:	cbz	x9, 447fbc <feof@plt+0x44edc>
  447f28:	mov	w10, wzr
  447f2c:	mov	w26, wzr
  447f30:	mov	x20, xzr
  447f34:	add	x11, x8, #0x1
  447f38:	sub	x9, x9, #0x1
  447f3c:	stp	x11, x9, [sp, #112]
  447f40:	ldrb	w19, [x8]
  447f44:	cmp	w26, #0x3f
  447f48:	b.hi	447f5c <feof@plt+0x44e7c>  // b.pmore
  447f4c:	and	x8, x19, #0x7f
  447f50:	lsl	x8, x8, x26
  447f54:	orr	x20, x8, x20
  447f58:	b	447f9c <feof@plt+0x44ebc>
  447f5c:	cbnz	w10, 447f9c <feof@plt+0x44ebc>
  447f60:	ldr	w8, [sp, #104]
  447f64:	ldr	x4, [sp, #96]
  447f68:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  447f6c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  447f70:	sub	w5, w11, w8
  447f74:	add	x0, sp, #0xc0
  447f78:	mov	w1, #0xc8                  	// #200
  447f7c:	add	x2, x2, #0x6df
  447f80:	add	x3, x3, #0x798
  447f84:	bl	402df0 <snprintf@plt>
  447f88:	ldp	x8, x0, [sp, #136]
  447f8c:	add	x1, sp, #0xc0
  447f90:	mov	w2, wzr
  447f94:	blr	x8
  447f98:	mov	w10, #0x1                   	// #1
  447f9c:	sxtb	w8, w19
  447fa0:	tbz	w8, #31, 448328 <feof@plt+0x45248>
  447fa4:	ldp	x8, x9, [sp, #112]
  447fa8:	add	w26, w26, #0x7
  447fac:	cbnz	x9, 447f34 <feof@plt+0x44e54>
  447fb0:	ldr	x26, [sp]
  447fb4:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  447fb8:	add	x19, x19, #0x63c
  447fbc:	ldr	w9, [sp, #152]
  447fc0:	cbz	w9, 448484 <feof@plt+0x453a4>
  447fc4:	mov	x20, xzr
  447fc8:	b	4484c8 <feof@plt+0x453e8>
  447fcc:	cbz	x9, 448068 <feof@plt+0x44f88>
  447fd0:	mov	w10, wzr
  447fd4:	mov	x20, xzr
  447fd8:	mov	w26, #0x7                   	// #7
  447fdc:	add	x11, x8, #0x1
  447fe0:	sub	x9, x9, #0x1
  447fe4:	stp	x11, x9, [sp, #112]
  447fe8:	ldrb	w19, [x8]
  447fec:	sub	w8, w26, #0x7
  447ff0:	cmp	w8, #0x3f
  447ff4:	b.hi	448008 <feof@plt+0x44f28>  // b.pmore
  447ff8:	and	x9, x19, #0x7f
  447ffc:	lsl	x8, x9, x8
  448000:	orr	x20, x8, x20
  448004:	b	448048 <feof@plt+0x44f68>
  448008:	cbnz	w10, 448048 <feof@plt+0x44f68>
  44800c:	ldr	w8, [sp, #104]
  448010:	ldr	x4, [sp, #96]
  448014:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448018:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44801c:	sub	w5, w11, w8
  448020:	add	x0, sp, #0xc0
  448024:	mov	w1, #0xc8                  	// #200
  448028:	add	x2, x2, #0x6df
  44802c:	add	x3, x3, #0x791
  448030:	bl	402df0 <snprintf@plt>
  448034:	ldp	x8, x0, [sp, #136]
  448038:	add	x1, sp, #0xc0
  44803c:	mov	w2, wzr
  448040:	blr	x8
  448044:	mov	w10, #0x1                   	// #1
  448048:	sxtb	w8, w19
  44804c:	tbz	w8, #31, 448338 <feof@plt+0x45258>
  448050:	ldp	x8, x9, [sp, #112]
  448054:	add	w26, w26, #0x7
  448058:	cbnz	x9, 447fdc <feof@plt+0x44efc>
  44805c:	ldr	x26, [sp]
  448060:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448064:	add	x19, x19, #0x63c
  448068:	ldr	w9, [sp, #152]
  44806c:	cbz	w9, 4484f0 <feof@plt+0x45410>
  448070:	mov	x8, xzr
  448074:	add	w25, w25, w8
  448078:	b	447efc <feof@plt+0x44e1c>
  44807c:	cbz	x9, 448114 <feof@plt+0x45034>
  448080:	mov	w10, wzr
  448084:	mov	w26, wzr
  448088:	mov	x20, xzr
  44808c:	add	x11, x8, #0x1
  448090:	sub	x9, x9, #0x1
  448094:	stp	x11, x9, [sp, #112]
  448098:	ldrb	w19, [x8]
  44809c:	cmp	w26, #0x3f
  4480a0:	b.hi	4480b4 <feof@plt+0x44fd4>  // b.pmore
  4480a4:	and	x8, x19, #0x7f
  4480a8:	lsl	x8, x8, x26
  4480ac:	orr	x20, x8, x20
  4480b0:	b	4480f4 <feof@plt+0x45014>
  4480b4:	cbnz	w10, 4480f4 <feof@plt+0x45014>
  4480b8:	ldr	w8, [sp, #104]
  4480bc:	ldr	x4, [sp, #96]
  4480c0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4480c4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4480c8:	sub	w5, w11, w8
  4480cc:	add	x0, sp, #0xc0
  4480d0:	mov	w1, #0xc8                  	// #200
  4480d4:	add	x2, x2, #0x6df
  4480d8:	add	x3, x3, #0x798
  4480dc:	bl	402df0 <snprintf@plt>
  4480e0:	ldp	x8, x0, [sp, #136]
  4480e4:	add	x1, sp, #0xc0
  4480e8:	mov	w2, wzr
  4480ec:	blr	x8
  4480f0:	mov	w10, #0x1                   	// #1
  4480f4:	sxtb	w8, w19
  4480f8:	tbz	w8, #31, 44836c <feof@plt+0x4528c>
  4480fc:	ldp	x8, x9, [sp, #112]
  448100:	add	w26, w26, #0x7
  448104:	cbnz	x9, 44808c <feof@plt+0x44fac>
  448108:	ldr	x26, [sp]
  44810c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448110:	add	x19, x19, #0x63c
  448114:	ldr	w9, [sp, #152]
  448118:	cbnz	w9, 448744 <feof@plt+0x45664>
  44811c:	ldr	w9, [sp, #104]
  448120:	ldr	x4, [sp, #96]
  448124:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448128:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44812c:	sub	w5, w8, w9
  448130:	add	x0, sp, #0xc0
  448134:	mov	w1, #0xc8                  	// #200
  448138:	add	x2, x2, #0x6df
  44813c:	add	x3, x3, #0x6cf
  448140:	bl	402df0 <snprintf@plt>
  448144:	ldp	x8, x0, [sp, #136]
  448148:	add	x1, sp, #0xc0
  44814c:	mov	w2, wzr
  448150:	blr	x8
  448154:	mov	w8, #0x1                   	// #1
  448158:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x838>
  44815c:	str	w8, [sp, #152]
  448160:	add	x27, x27, #0xbb5
  448164:	b	447efc <feof@plt+0x44e1c>
  448168:	cbz	x9, 4482ac <feof@plt+0x451cc>
  44816c:	mov	w10, wzr
  448170:	mov	w20, wzr
  448174:	add	x11, x8, #0x1
  448178:	sub	x9, x9, #0x1
  44817c:	stp	x11, x9, [sp, #112]
  448180:	ldrsb	w19, [x8]
  448184:	cmp	w20, #0x40
  448188:	b.cc	4481cc <feof@plt+0x450ec>  // b.lo, b.ul, b.last
  44818c:	cbnz	w10, 4481cc <feof@plt+0x450ec>
  448190:	ldr	w8, [sp, #104]
  448194:	ldr	x4, [sp, #96]
  448198:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  44819c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4481a0:	sub	w5, w11, w8
  4481a4:	add	x0, sp, #0xc0
  4481a8:	mov	w1, #0xc8                  	// #200
  4481ac:	add	x2, x2, #0x6df
  4481b0:	add	x3, x3, #0x798
  4481b4:	bl	402df0 <snprintf@plt>
  4481b8:	ldp	x8, x0, [sp, #136]
  4481bc:	add	x1, sp, #0xc0
  4481c0:	mov	w2, wzr
  4481c4:	blr	x8
  4481c8:	mov	w10, #0x1                   	// #1
  4481cc:	tbz	w19, #31, 448a14 <feof@plt+0x45934>
  4481d0:	ldp	x8, x9, [sp, #112]
  4481d4:	add	w20, w20, #0x7
  4481d8:	cbnz	x9, 448174 <feof@plt+0x45094>
  4481dc:	b	4482a4 <feof@plt+0x451c4>
  4481e0:	ldr	w8, [x23, #16]
  4481e4:	mov	w9, #0xff                  	// #255
  4481e8:	sub	w9, w9, w11
  4481ec:	ldp	w10, w11, [x23, #4]
  4481f0:	udiv	w8, w9, w8
  4481f4:	ldr	w9, [sp, #64]
  4481f8:	add	w8, w8, w9
  4481fc:	mul	w9, w10, w8
  448200:	udiv	w10, w8, w11
  448204:	udiv	w9, w9, w11
  448208:	msub	w8, w10, w11, w8
  44820c:	add	x28, x28, x9
  448210:	str	w8, [sp, #64]
  448214:	b	447efc <feof@plt+0x44e1c>
  448218:	cmp	x9, #0x1
  44821c:	b.hi	4482f8 <feof@plt+0x45218>  // b.pmore
  448220:	ldr	w9, [sp, #152]
  448224:	cbz	w9, 44853c <feof@plt+0x4545c>
  448228:	mov	x8, xzr
  44822c:	b	448588 <feof@plt+0x454a8>
  448230:	cbz	x9, 4482ac <feof@plt+0x451cc>
  448234:	mov	w10, wzr
  448238:	mov	w20, wzr
  44823c:	add	x11, x8, #0x1
  448240:	sub	x9, x9, #0x1
  448244:	stp	x11, x9, [sp, #112]
  448248:	ldrsb	w19, [x8]
  44824c:	cmp	w20, #0x40
  448250:	b.cc	448294 <feof@plt+0x451b4>  // b.lo, b.ul, b.last
  448254:	cbnz	w10, 448294 <feof@plt+0x451b4>
  448258:	ldr	w8, [sp, #104]
  44825c:	ldr	x4, [sp, #96]
  448260:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448264:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448268:	sub	w5, w11, w8
  44826c:	add	x0, sp, #0xc0
  448270:	mov	w1, #0xc8                  	// #200
  448274:	add	x2, x2, #0x6df
  448278:	add	x3, x3, #0x798
  44827c:	bl	402df0 <snprintf@plt>
  448280:	ldp	x8, x0, [sp, #136]
  448284:	add	x1, sp, #0xc0
  448288:	mov	w2, wzr
  44828c:	blr	x8
  448290:	mov	w10, #0x1                   	// #1
  448294:	tbz	w19, #31, 448a14 <feof@plt+0x45934>
  448298:	ldp	x8, x9, [sp, #112]
  44829c:	add	w20, w20, #0x7
  4482a0:	cbnz	x9, 44823c <feof@plt+0x4515c>
  4482a4:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  4482a8:	add	x19, x19, #0x63c
  4482ac:	ldr	w9, [sp, #152]
  4482b0:	cbnz	w9, 447efc <feof@plt+0x44e1c>
  4482b4:	ldr	w9, [sp, #104]
  4482b8:	ldr	x4, [sp, #96]
  4482bc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4482c0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4482c4:	sub	w5, w8, w9
  4482c8:	add	x0, sp, #0xc0
  4482cc:	mov	w1, #0xc8                  	// #200
  4482d0:	add	x2, x2, #0x6df
  4482d4:	add	x3, x3, #0x6cf
  4482d8:	bl	402df0 <snprintf@plt>
  4482dc:	ldp	x8, x0, [sp, #136]
  4482e0:	add	x1, sp, #0xc0
  4482e4:	mov	w2, wzr
  4482e8:	blr	x8
  4482ec:	mov	w8, #0x1                   	// #1
  4482f0:	str	w8, [sp, #152]
  4482f4:	b	447efc <feof@plt+0x44e1c>
  4482f8:	ldr	w8, [sp, #128]
  4482fc:	add	x9, x10, #0x3
  448300:	sub	x11, x20, #0x3
  448304:	stp	x9, x11, [sp, #112]
  448308:	cbz	w8, 448584 <feof@plt+0x454a4>
  44830c:	ldurh	w8, [x10, #1]
  448310:	lsl	x8, x8, #48
  448314:	rev	x8, x8
  448318:	b	448588 <feof@plt+0x454a8>
  44831c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448320:	add	x19, x19, #0x63c
  448324:	b	4483dc <feof@plt+0x452fc>
  448328:	ldr	x26, [sp]
  44832c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448330:	add	x19, x19, #0x63c
  448334:	b	4484c8 <feof@plt+0x453e8>
  448338:	cmp	w26, #0x40
  44833c:	and	w8, w19, #0x40
  448340:	cset	w9, cc  // cc = lo, ul, last
  448344:	mov	x10, #0xffffffffffffffff    	// #-1
  448348:	lsl	x10, x10, x26
  44834c:	tst	w9, w8, lsr #6
  448350:	ldr	x26, [sp]
  448354:	csel	x8, x10, xzr, ne  // ne = any
  448358:	orr	x8, x20, x8
  44835c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448360:	add	x19, x19, #0x63c
  448364:	add	w25, w25, w8
  448368:	b	447efc <feof@plt+0x44e1c>
  44836c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448370:	add	x19, x19, #0x63c
  448374:	cbz	x20, 448740 <feof@plt+0x45660>
  448378:	ldr	x9, [x23, #48]
  44837c:	ldr	x26, [sp]
  448380:	sub	x8, x20, #0x1
  448384:	cmp	x8, x9
  448388:	b.cs	448c60 <feof@plt+0x45b80>  // b.hs, b.nlast
  44838c:	ldr	x9, [x23, #56]
  448390:	ldr	x27, [x9, x8, lsl #3]
  448394:	b	447efc <feof@plt+0x44e1c>
  448398:	ldr	w9, [sp, #104]
  44839c:	ldr	x4, [sp, #96]
  4483a0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4483a4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4483a8:	sub	w5, w8, w9
  4483ac:	add	x0, sp, #0xc0
  4483b0:	mov	w1, #0xc8                  	// #200
  4483b4:	add	x2, x2, #0x6df
  4483b8:	add	x3, x3, #0x6cf
  4483bc:	bl	402df0 <snprintf@plt>
  4483c0:	ldp	x8, x0, [sp, #136]
  4483c4:	add	x1, sp, #0xc0
  4483c8:	mov	w2, wzr
  4483cc:	blr	x8
  4483d0:	mov	x26, xzr
  4483d4:	mov	w8, #0x1                   	// #1
  4483d8:	str	w8, [sp, #152]
  4483dc:	ldp	x8, x9, [sp, #112]
  4483e0:	cbz	x9, 448474 <feof@plt+0x45394>
  4483e4:	add	x10, x8, #0x1
  4483e8:	sub	x20, x9, #0x1
  4483ec:	stp	x10, x20, [sp, #112]
  4483f0:	str	x10, [sp, #40]
  4483f4:	ldrb	w10, [x8]
  4483f8:	sub	w10, w10, #0x1
  4483fc:	cmp	w10, #0x3
  448400:	b.hi	4485d8 <feof@plt+0x454f8>  // b.pmore
  448404:	adrp	x13, 472000 <_obstack_memory_used@@Base+0x10838>
  448408:	add	x13, x13, #0x656
  44840c:	adr	x11, 447f10 <feof@plt+0x44e30>
  448410:	ldrh	w12, [x13, x10, lsl #1]
  448414:	add	x11, x11, x12, lsl #2
  448418:	ldr	x2, [sp, #48]
  44841c:	ldr	x26, [sp]
  448420:	mov	w0, wzr
  448424:	mov	x1, xzr
  448428:	mov	w10, #0x1                   	// #1
  44842c:	br	x11
  448430:	ldr	x10, [sp, #8]
  448434:	ldr	w10, [x10, #48]
  448438:	sub	w10, w10, #0x1
  44843c:	cmp	w10, #0x7
  448440:	b.hi	448a74 <feof@plt+0x45994>  // b.pmore
  448444:	adrp	x13, 472000 <_obstack_memory_used@@Base+0x10838>
  448448:	add	x13, x13, #0x65e
  44844c:	adr	x11, 44845c <feof@plt+0x4537c>
  448450:	ldrh	w12, [x13, x10, lsl #1]
  448454:	add	x11, x11, x12, lsl #2
  448458:	br	x11
  44845c:	cbz	x20, 448b28 <feof@plt+0x45a48>
  448460:	add	x10, x8, #0x2
  448464:	sub	x9, x9, #0x2
  448468:	stp	x10, x9, [sp, #112]
  44846c:	ldrb	w28, [x8, #1]
  448470:	b	448b90 <feof@plt+0x45ab0>
  448474:	ldr	w9, [sp, #152]
  448478:	cbz	w9, 448594 <feof@plt+0x454b4>
  44847c:	mov	x20, xzr
  448480:	b	4485d8 <feof@plt+0x454f8>
  448484:	ldr	w9, [sp, #104]
  448488:	ldr	x4, [sp, #96]
  44848c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448490:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448494:	sub	w5, w8, w9
  448498:	add	x0, sp, #0xc0
  44849c:	mov	w1, #0xc8                  	// #200
  4484a0:	add	x2, x2, #0x6df
  4484a4:	add	x3, x3, #0x6cf
  4484a8:	bl	402df0 <snprintf@plt>
  4484ac:	ldp	x8, x0, [sp, #136]
  4484b0:	add	x1, sp, #0xc0
  4484b4:	mov	w2, wzr
  4484b8:	blr	x8
  4484bc:	mov	x20, xzr
  4484c0:	mov	w8, #0x1                   	// #1
  4484c4:	str	w8, [sp, #152]
  4484c8:	ldr	w10, [sp, #64]
  4484cc:	ldp	w8, w9, [x23, #4]
  4484d0:	add	x10, x20, w10, uxtw
  4484d4:	mul	x8, x10, x8
  4484d8:	udiv	x11, x10, x9
  4484dc:	udiv	x8, x8, x9
  4484e0:	add	x28, x8, x28
  4484e4:	msub	w8, w11, w9, w10
  4484e8:	str	w8, [sp, #64]
  4484ec:	b	447efc <feof@plt+0x44e1c>
  4484f0:	ldr	w9, [sp, #104]
  4484f4:	ldr	x4, [sp, #96]
  4484f8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4484fc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448500:	sub	w5, w8, w9
  448504:	add	x0, sp, #0xc0
  448508:	mov	w1, #0xc8                  	// #200
  44850c:	add	x2, x2, #0x6df
  448510:	add	x3, x3, #0x6cf
  448514:	bl	402df0 <snprintf@plt>
  448518:	ldp	x8, x0, [sp, #136]
  44851c:	add	x1, sp, #0xc0
  448520:	mov	w2, wzr
  448524:	blr	x8
  448528:	mov	x8, xzr
  44852c:	mov	w9, #0x1                   	// #1
  448530:	str	w9, [sp, #152]
  448534:	add	w25, w25, w8
  448538:	b	447efc <feof@plt+0x44e1c>
  44853c:	ldr	w9, [sp, #104]
  448540:	ldr	x4, [sp, #96]
  448544:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448548:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44854c:	sub	w5, w8, w9
  448550:	add	x0, sp, #0xc0
  448554:	mov	w1, #0xc8                  	// #200
  448558:	add	x2, x2, #0x6df
  44855c:	add	x3, x3, #0x6cf
  448560:	bl	402df0 <snprintf@plt>
  448564:	ldp	x8, x0, [sp, #136]
  448568:	add	x1, sp, #0xc0
  44856c:	mov	w2, wzr
  448570:	blr	x8
  448574:	mov	w9, #0x1                   	// #1
  448578:	mov	x8, xzr
  44857c:	str	w9, [sp, #152]
  448580:	b	448588 <feof@plt+0x454a8>
  448584:	ldurh	w8, [x10, #1]
  448588:	str	wzr, [sp, #64]
  44858c:	add	x28, x8, x28
  448590:	b	447efc <feof@plt+0x44e1c>
  448594:	ldr	w9, [sp, #104]
  448598:	ldr	x4, [sp, #96]
  44859c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4485a0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4485a4:	sub	w5, w8, w9
  4485a8:	add	x0, sp, #0xc0
  4485ac:	mov	w1, #0xc8                  	// #200
  4485b0:	add	x2, x2, #0x6df
  4485b4:	add	x3, x3, #0x6cf
  4485b8:	bl	402df0 <snprintf@plt>
  4485bc:	ldp	x8, x0, [sp, #136]
  4485c0:	add	x1, sp, #0xc0
  4485c4:	mov	w2, wzr
  4485c8:	blr	x8
  4485cc:	ldr	x20, [sp, #120]
  4485d0:	mov	w8, #0x1                   	// #1
  4485d4:	str	w8, [sp, #152]
  4485d8:	sub	x8, x26, #0x1
  4485dc:	subs	x20, x20, x8
  4485e0:	b.cc	448c50 <feof@plt+0x45b70>  // b.lo, b.ul, b.last
  4485e4:	ldr	x9, [sp, #112]
  4485e8:	ldr	w0, [sp, #64]
  4485ec:	ldr	x26, [sp]
  4485f0:	mov	w10, w25
  4485f4:	add	x8, x9, x8
  4485f8:	stp	x8, x20, [sp, #112]
  4485fc:	b	447f08 <feof@plt+0x44e28>
  448600:	ldr	x19, [sp, #40]
  448604:	mov	x1, x20
  448608:	mov	x0, x19
  44860c:	bl	403020 <strnlen@plt>
  448610:	add	x8, x0, #0x1
  448614:	cmp	x20, x8
  448618:	b.cc	448cb8 <feof@plt+0x45bd8>  // b.lo, b.ul, b.last
  44861c:	add	x10, x19, x8
  448620:	subs	x9, x20, x8
  448624:	stp	x10, x9, [sp, #112]
  448628:	b.eq	4487a0 <feof@plt+0x456c0>  // b.none
  44862c:	mov	w8, wzr
  448630:	mov	w26, wzr
  448634:	mov	x20, xzr
  448638:	add	x11, x10, #0x1
  44863c:	sub	x9, x9, #0x1
  448640:	stp	x11, x9, [sp, #112]
  448644:	ldrb	w19, [x10]
  448648:	cmp	w26, #0x3f
  44864c:	b.hi	448660 <feof@plt+0x45580>  // b.pmore
  448650:	and	x9, x19, #0x7f
  448654:	lsl	x9, x9, x26
  448658:	orr	x20, x9, x20
  44865c:	b	4486a0 <feof@plt+0x455c0>
  448660:	cbnz	w8, 4486a0 <feof@plt+0x455c0>
  448664:	ldr	w8, [sp, #104]
  448668:	ldr	x4, [sp, #96]
  44866c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448670:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448674:	sub	w5, w11, w8
  448678:	add	x0, sp, #0xc0
  44867c:	mov	w1, #0xc8                  	// #200
  448680:	add	x2, x2, #0x6df
  448684:	add	x3, x3, #0x798
  448688:	bl	402df0 <snprintf@plt>
  44868c:	ldp	x8, x0, [sp, #136]
  448690:	add	x1, sp, #0xc0
  448694:	mov	w2, wzr
  448698:	blr	x8
  44869c:	mov	w8, #0x1                   	// #1
  4486a0:	sxtb	w9, w19
  4486a4:	tbz	w9, #31, 4487f8 <feof@plt+0x45718>
  4486a8:	ldr	x9, [sp, #120]
  4486ac:	cbz	x9, 4487a0 <feof@plt+0x456c0>
  4486b0:	ldr	x10, [sp, #112]
  4486b4:	add	w26, w26, #0x7
  4486b8:	b	448638 <feof@plt+0x45558>
  4486bc:	cbz	x20, 448750 <feof@plt+0x45670>
  4486c0:	ldr	x10, [sp, #40]
  4486c4:	mov	w8, wzr
  4486c8:	mov	w26, wzr
  4486cc:	add	x9, x10, #0x1
  4486d0:	mov	x11, x10
  4486d4:	sub	x10, x20, #0x1
  4486d8:	stp	x9, x10, [sp, #112]
  4486dc:	ldrsb	w19, [x11]
  4486e0:	cbnz	w8, 448728 <feof@plt+0x45648>
  4486e4:	cmp	w26, #0x40
  4486e8:	b.cc	448728 <feof@plt+0x45648>  // b.lo, b.ul, b.last
  4486ec:	ldr	w8, [sp, #104]
  4486f0:	ldr	x4, [sp, #96]
  4486f4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4486f8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4486fc:	sub	w5, w9, w8
  448700:	add	x0, sp, #0xc0
  448704:	mov	w1, #0xc8                  	// #200
  448708:	add	x2, x2, #0x6df
  44870c:	add	x3, x3, #0x798
  448710:	bl	402df0 <snprintf@plt>
  448714:	ldp	x8, x0, [sp, #136]
  448718:	add	x1, sp, #0xc0
  44871c:	mov	w2, wzr
  448720:	blr	x8
  448724:	mov	w8, #0x1                   	// #1
  448728:	tbz	w19, #31, 448a10 <feof@plt+0x45930>
  44872c:	ldr	x20, [sp, #120]
  448730:	cbz	x20, 448750 <feof@plt+0x45670>
  448734:	ldr	x10, [sp, #112]
  448738:	add	w26, w26, #0x7
  44873c:	b	4486cc <feof@plt+0x455ec>
  448740:	ldr	x26, [sp]
  448744:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x838>
  448748:	add	x27, x27, #0xbb5
  44874c:	b	447efc <feof@plt+0x44e1c>
  448750:	ldr	w8, [sp, #152]
  448754:	cbnz	w8, 448a10 <feof@plt+0x45930>
  448758:	ldr	w8, [sp, #112]
  44875c:	ldr	w9, [sp, #104]
  448760:	ldr	x4, [sp, #96]
  448764:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448768:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44876c:	sub	w5, w8, w9
  448770:	add	x0, sp, #0xc0
  448774:	mov	w1, #0xc8                  	// #200
  448778:	add	x2, x2, #0x6df
  44877c:	add	x3, x3, #0x6cf
  448780:	bl	402df0 <snprintf@plt>
  448784:	ldp	x8, x0, [sp, #136]
  448788:	add	x1, sp, #0xc0
  44878c:	mov	w2, wzr
  448790:	blr	x8
  448794:	mov	w8, #0x1                   	// #1
  448798:	str	w8, [sp, #152]
  44879c:	b	448a10 <feof@plt+0x45930>
  4487a0:	ldr	w8, [sp, #152]
  4487a4:	cbz	w8, 4487b0 <feof@plt+0x456d0>
  4487a8:	mov	x20, xzr
  4487ac:	b	4487f8 <feof@plt+0x45718>
  4487b0:	ldr	w8, [sp, #112]
  4487b4:	ldr	w9, [sp, #104]
  4487b8:	ldr	x4, [sp, #96]
  4487bc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4487c0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4487c4:	sub	w5, w8, w9
  4487c8:	add	x0, sp, #0xc0
  4487cc:	mov	w1, #0xc8                  	// #200
  4487d0:	add	x2, x2, #0x6df
  4487d4:	add	x3, x3, #0x6cf
  4487d8:	bl	402df0 <snprintf@plt>
  4487dc:	ldp	x8, x0, [sp, #136]
  4487e0:	add	x1, sp, #0xc0
  4487e4:	mov	w2, wzr
  4487e8:	blr	x8
  4487ec:	mov	w8, #0x1                   	// #1
  4487f0:	mov	x20, xzr
  4487f4:	str	w8, [sp, #152]
  4487f8:	mov	w26, wzr
  4487fc:	mov	w8, wzr
  448800:	b	44880c <feof@plt+0x4572c>
  448804:	add	w26, w26, #0x7
  448808:	tbz	w19, #31, 4488b8 <feof@plt+0x457d8>
  44880c:	ldp	x10, x11, [sp, #112]
  448810:	cbz	x11, 448870 <feof@plt+0x45790>
  448814:	add	x9, x10, #0x1
  448818:	sub	x11, x11, #0x1
  44881c:	stp	x9, x11, [sp, #112]
  448820:	ldrsb	w19, [x10]
  448824:	cmp	w26, #0x40
  448828:	b.cc	448804 <feof@plt+0x45724>  // b.lo, b.ul, b.last
  44882c:	cbnz	w8, 448804 <feof@plt+0x45724>
  448830:	ldr	w8, [sp, #104]
  448834:	ldr	x4, [sp, #96]
  448838:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  44883c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448840:	sub	w5, w9, w8
  448844:	add	x0, sp, #0xc0
  448848:	mov	w1, #0xc8                  	// #200
  44884c:	add	x2, x2, #0x6df
  448850:	add	x3, x3, #0x798
  448854:	bl	402df0 <snprintf@plt>
  448858:	ldp	x8, x0, [sp, #136]
  44885c:	add	x1, sp, #0xc0
  448860:	mov	w2, wzr
  448864:	blr	x8
  448868:	mov	w8, #0x1                   	// #1
  44886c:	b	448804 <feof@plt+0x45724>
  448870:	ldr	w8, [sp, #152]
  448874:	cbnz	w8, 4488b8 <feof@plt+0x457d8>
  448878:	ldr	w8, [sp, #104]
  44887c:	ldr	x4, [sp, #96]
  448880:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448884:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448888:	sub	w5, w10, w8
  44888c:	add	x0, sp, #0xc0
  448890:	mov	w1, #0xc8                  	// #200
  448894:	add	x2, x2, #0x6df
  448898:	add	x3, x3, #0x6cf
  44889c:	bl	402df0 <snprintf@plt>
  4488a0:	ldp	x8, x0, [sp, #136]
  4488a4:	add	x1, sp, #0xc0
  4488a8:	mov	w2, wzr
  4488ac:	blr	x8
  4488b0:	mov	w8, #0x1                   	// #1
  4488b4:	str	w8, [sp, #152]
  4488b8:	mov	w26, wzr
  4488bc:	mov	w8, wzr
  4488c0:	b	4488cc <feof@plt+0x457ec>
  4488c4:	add	w26, w26, #0x7
  4488c8:	tbz	w19, #31, 448978 <feof@plt+0x45898>
  4488cc:	ldp	x10, x11, [sp, #112]
  4488d0:	cbz	x11, 448930 <feof@plt+0x45850>
  4488d4:	add	x9, x10, #0x1
  4488d8:	sub	x11, x11, #0x1
  4488dc:	stp	x9, x11, [sp, #112]
  4488e0:	ldrsb	w19, [x10]
  4488e4:	cmp	w26, #0x40
  4488e8:	b.cc	4488c4 <feof@plt+0x457e4>  // b.lo, b.ul, b.last
  4488ec:	cbnz	w8, 4488c4 <feof@plt+0x457e4>
  4488f0:	ldr	w8, [sp, #104]
  4488f4:	ldr	x4, [sp, #96]
  4488f8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4488fc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448900:	sub	w5, w9, w8
  448904:	add	x0, sp, #0xc0
  448908:	mov	w1, #0xc8                  	// #200
  44890c:	add	x2, x2, #0x6df
  448910:	add	x3, x3, #0x798
  448914:	bl	402df0 <snprintf@plt>
  448918:	ldp	x8, x0, [sp, #136]
  44891c:	add	x1, sp, #0xc0
  448920:	mov	w2, wzr
  448924:	blr	x8
  448928:	mov	w8, #0x1                   	// #1
  44892c:	b	4488c4 <feof@plt+0x457e4>
  448930:	ldr	w8, [sp, #152]
  448934:	cbnz	w8, 448978 <feof@plt+0x45898>
  448938:	ldr	w8, [sp, #104]
  44893c:	ldr	x4, [sp, #96]
  448940:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448944:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448948:	sub	w5, w10, w8
  44894c:	add	x0, sp, #0xc0
  448950:	mov	w1, #0xc8                  	// #200
  448954:	add	x2, x2, #0x6df
  448958:	add	x3, x3, #0x6cf
  44895c:	bl	402df0 <snprintf@plt>
  448960:	ldp	x8, x0, [sp, #136]
  448964:	add	x1, sp, #0xc0
  448968:	mov	w2, wzr
  44896c:	blr	x8
  448970:	mov	w8, #0x1                   	// #1
  448974:	str	w8, [sp, #152]
  448978:	ldr	x27, [sp, #40]
  44897c:	ldrb	w8, [x27]
  448980:	cmp	w8, #0x2f
  448984:	b.eq	448b90 <feof@plt+0x45ab0>  // b.none
  448988:	ldr	x8, [sp, #32]
  44898c:	cbz	w20, 4489a8 <feof@plt+0x458c8>
  448990:	ldr	x9, [x23, #32]
  448994:	sub	w8, w20, #0x1
  448998:	cmp	x8, x9
  44899c:	b.cs	448d0c <feof@plt+0x45c2c>  // b.hs, b.nlast
  4489a0:	ldr	x9, [x23, #40]
  4489a4:	add	x8, x9, x8, lsl #3
  4489a8:	ldr	x26, [x8]
  4489ac:	mov	x0, x26
  4489b0:	bl	402a50 <strlen@plt>
  4489b4:	ldr	x19, [sp, #40]
  4489b8:	mov	x20, x0
  4489bc:	mov	x0, x19
  4489c0:	bl	402a50 <strlen@plt>
  4489c4:	ldr	x24, [sp, #88]
  4489c8:	ldp	x2, x3, [sp, #136]
  4489cc:	add	x8, x20, x0
  4489d0:	str	x0, [sp, #24]
  4489d4:	add	x1, x8, #0x2
  4489d8:	mov	x0, x24
  4489dc:	bl	43feec <feof@plt+0x3ce0c>
  4489e0:	cbz	x0, 448c58 <feof@plt+0x45b78>
  4489e4:	mov	x1, x26
  4489e8:	mov	x2, x20
  4489ec:	mov	x27, x0
  4489f0:	bl	4029c0 <memcpy@plt>
  4489f4:	add	x0, x27, x20
  4489f8:	mov	w8, #0x2f                  	// #47
  4489fc:	strb	w8, [x0], #1
  448a00:	ldr	x8, [sp, #24]
  448a04:	mov	x1, x19
  448a08:	add	x2, x8, #0x1
  448a0c:	bl	4029c0 <memcpy@plt>
  448a10:	ldr	x26, [sp]
  448a14:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10838>
  448a18:	add	x19, x19, #0x63c
  448a1c:	b	447efc <feof@plt+0x44e1c>
  448a20:	cmp	x20, #0x1
  448a24:	b.hi	448ae0 <feof@plt+0x45a00>  // b.pmore
  448a28:	ldr	w8, [sp, #152]
  448a2c:	cbnz	w8, 448ac8 <feof@plt+0x459e8>
  448a30:	ldr	w8, [sp, #104]
  448a34:	ldr	x9, [sp, #40]
  448a38:	ldr	x4, [sp, #96]
  448a3c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448a40:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448a44:	sub	w5, w9, w8
  448a48:	add	x0, sp, #0xc0
  448a4c:	mov	w1, #0xc8                  	// #200
  448a50:	add	x2, x2, #0x6df
  448a54:	add	x3, x3, #0x6cf
  448a58:	bl	402df0 <snprintf@plt>
  448a5c:	ldp	x8, x0, [sp, #136]
  448a60:	add	x1, sp, #0xc0
  448a64:	mov	w2, wzr
  448a68:	blr	x8
  448a6c:	mov	x28, xzr
  448a70:	b	448b88 <feof@plt+0x45aa8>
  448a74:	ldr	w8, [sp, #104]
  448a78:	ldr	x9, [sp, #40]
  448a7c:	ldr	x4, [sp, #96]
  448a80:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448a84:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448a88:	sub	w5, w9, w8
  448a8c:	add	x0, sp, #0xc0
  448a90:	mov	w1, #0xc8                  	// #200
  448a94:	add	x2, x2, #0x6df
  448a98:	add	x3, x3, #0x777
  448a9c:	bl	402df0 <snprintf@plt>
  448aa0:	ldp	x8, x0, [sp, #136]
  448aa4:	add	x1, sp, #0xc0
  448aa8:	mov	w2, wzr
  448aac:	blr	x8
  448ab0:	mov	x28, xzr
  448ab4:	b	447efc <feof@plt+0x44e1c>
  448ab8:	cmp	x20, #0x3
  448abc:	b.hi	448b04 <feof@plt+0x45a24>  // b.pmore
  448ac0:	ldr	w8, [sp, #152]
  448ac4:	cbz	w8, 448a30 <feof@plt+0x45950>
  448ac8:	mov	x28, xzr
  448acc:	b	448b90 <feof@plt+0x45ab0>
  448ad0:	add	x0, sp, #0x60
  448ad4:	bl	44557c <feof@plt+0x4249c>
  448ad8:	mov	x28, x0
  448adc:	b	447efc <feof@plt+0x44e1c>
  448ae0:	ldr	w10, [sp, #128]
  448ae4:	add	x11, x8, #0x3
  448ae8:	sub	x9, x9, #0x3
  448aec:	stp	x11, x9, [sp, #112]
  448af0:	cbz	w10, 448b38 <feof@plt+0x45a58>
  448af4:	ldurh	w8, [x8, #1]
  448af8:	lsl	x8, x8, #48
  448afc:	rev	x28, x8
  448b00:	b	448b90 <feof@plt+0x45ab0>
  448b04:	ldr	w10, [sp, #128]
  448b08:	add	x11, x8, #0x5
  448b0c:	sub	x9, x9, #0x5
  448b10:	stp	x11, x9, [sp, #112]
  448b14:	cbz	w10, 448b40 <feof@plt+0x45a60>
  448b18:	ldur	w8, [x8, #1]
  448b1c:	lsl	x8, x8, #32
  448b20:	rev	x28, x8
  448b24:	b	448b90 <feof@plt+0x45ab0>
  448b28:	ldr	w8, [sp, #152]
  448b2c:	cbz	w8, 448b48 <feof@plt+0x45a68>
  448b30:	mov	w28, wzr
  448b34:	b	448b90 <feof@plt+0x45ab0>
  448b38:	ldurh	w28, [x8, #1]
  448b3c:	b	448b90 <feof@plt+0x45ab0>
  448b40:	ldur	w28, [x8, #1]
  448b44:	b	448b90 <feof@plt+0x45ab0>
  448b48:	ldr	w8, [sp, #104]
  448b4c:	ldr	x9, [sp, #40]
  448b50:	ldr	x4, [sp, #96]
  448b54:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448b58:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448b5c:	sub	w5, w9, w8
  448b60:	add	x0, sp, #0xc0
  448b64:	mov	w1, #0xc8                  	// #200
  448b68:	add	x2, x2, #0x6df
  448b6c:	add	x3, x3, #0x6cf
  448b70:	bl	402df0 <snprintf@plt>
  448b74:	ldp	x8, x0, [sp, #136]
  448b78:	add	x1, sp, #0xc0
  448b7c:	mov	w2, wzr
  448b80:	blr	x8
  448b84:	mov	w28, wzr
  448b88:	mov	w8, #0x1                   	// #1
  448b8c:	str	w8, [sp, #152]
  448b90:	ldr	x26, [sp]
  448b94:	ldr	x24, [sp, #88]
  448b98:	b	448a14 <feof@plt+0x45934>
  448b9c:	mov	w8, #0x1                   	// #1
  448ba0:	str	w8, [sp, #56]
  448ba4:	ldr	x8, [sp, #184]
  448ba8:	cbz	x8, 44727c <feof@plt+0x4419c>
  448bac:	ldr	w8, [sp, #56]
  448bb0:	cbz	w8, 44727c <feof@plt+0x4419c>
  448bb4:	ldr	w8, [sp, #152]
  448bb8:	cbnz	w8, 44727c <feof@plt+0x4419c>
  448bbc:	ldr	x0, [sp, #88]
  448bc0:	add	x4, sp, #0xa0
  448bc4:	mov	w1, #0x18                  	// #24
  448bc8:	mov	x2, x22
  448bcc:	mov	x3, x21
  448bd0:	bl	4401c0 <feof@plt+0x3d0e0>
  448bd4:	cbz	x0, 44727c <feof@plt+0x4419c>
  448bd8:	mov	x8, #0xffffffffffffffff    	// #-1
  448bdc:	stp	xzr, xzr, [x0, #8]
  448be0:	str	x8, [x0]
  448be4:	ldr	x0, [sp, #88]
  448be8:	add	x1, sp, #0xa0
  448bec:	mov	x2, x22
  448bf0:	mov	x3, x21
  448bf4:	bl	4402d8 <feof@plt+0x3d1f8>
  448bf8:	cbz	w0, 44727c <feof@plt+0x4419c>
  448bfc:	ldr	x19, [sp, #160]
  448c00:	ldr	x1, [sp, #184]
  448c04:	adrp	x3, 448000 <feof@plt+0x44f20>
  448c08:	add	x3, x3, #0xe88
  448c0c:	mov	w2, #0x18                  	// #24
  448c10:	mov	x0, x19
  448c14:	bl	449fb4 <feof@plt+0x46ed4>
  448c18:	ldr	x8, [sp, #72]
  448c1c:	mov	w0, #0x1                   	// #1
  448c20:	str	x19, [x8]
  448c24:	ldr	x8, [sp, #184]
  448c28:	b	4472ec <feof@plt+0x4420c>
  448c2c:	ldr	w8, [sp, #112]
  448c30:	ldr	w9, [sp, #104]
  448c34:	ldr	x4, [sp, #96]
  448c38:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448c3c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448c40:	sub	w5, w8, w9
  448c44:	add	x2, x2, #0x6df
  448c48:	add	x3, x3, #0x7f0
  448c4c:	b	447260 <feof@plt+0x44180>
  448c50:	ldr	w8, [sp, #152]
  448c54:	cbz	w8, 448ca4 <feof@plt+0x45bc4>
  448c58:	str	wzr, [sp, #56]
  448c5c:	b	448ba4 <feof@plt+0x45ac4>
  448c60:	ldr	w8, [sp, #112]
  448c64:	ldr	w9, [sp, #104]
  448c68:	ldr	x4, [sp, #96]
  448c6c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448c70:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448c74:	sub	w5, w8, w9
  448c78:	add	x2, x2, #0x6df
  448c7c:	add	x3, x3, #0x855
  448c80:	add	x0, sp, #0xc0
  448c84:	mov	w1, #0xc8                  	// #200
  448c88:	bl	402df0 <snprintf@plt>
  448c8c:	ldp	x8, x0, [sp, #136]
  448c90:	add	x1, sp, #0xc0
  448c94:	mov	w2, wzr
  448c98:	blr	x8
  448c9c:	str	wzr, [sp, #56]
  448ca0:	b	448ba4 <feof@plt+0x45ac4>
  448ca4:	ldr	w8, [sp, #112]
  448ca8:	ldr	w9, [sp, #104]
  448cac:	ldr	x4, [sp, #96]
  448cb0:	sub	w5, w8, w9
  448cb4:	b	448cd0 <feof@plt+0x45bf0>
  448cb8:	ldr	w8, [sp, #152]
  448cbc:	cbnz	w8, 448c58 <feof@plt+0x45b78>
  448cc0:	ldr	w8, [sp, #104]
  448cc4:	ldr	x9, [sp, #40]
  448cc8:	ldr	x4, [sp, #96]
  448ccc:	sub	w5, w9, w8
  448cd0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448cd4:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448cd8:	add	x2, x2, #0x6df
  448cdc:	add	x3, x3, #0x6cf
  448ce0:	add	x0, sp, #0xc0
  448ce4:	mov	w1, #0xc8                  	// #200
  448ce8:	bl	402df0 <snprintf@plt>
  448cec:	ldp	x8, x0, [sp, #136]
  448cf0:	add	x1, sp, #0xc0
  448cf4:	mov	w2, wzr
  448cf8:	blr	x8
  448cfc:	mov	w8, #0x1                   	// #1
  448d00:	str	wzr, [sp, #56]
  448d04:	str	w8, [sp, #152]
  448d08:	b	448ba4 <feof@plt+0x45ac4>
  448d0c:	ldr	w8, [sp, #112]
  448d10:	ldr	w9, [sp, #104]
  448d14:	ldr	x4, [sp, #96]
  448d18:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448d1c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448d20:	sub	w5, w8, w9
  448d24:	add	x2, x2, #0x6df
  448d28:	add	x3, x3, #0x826
  448d2c:	b	448c80 <feof@plt+0x45ba0>
  448d30:	stp	x29, x30, [sp, #-64]!
  448d34:	stp	x24, x23, [sp, #16]
  448d38:	stp	x22, x21, [sp, #32]
  448d3c:	stp	x20, x19, [sp, #48]
  448d40:	mov	x29, sp
  448d44:	ldr	x8, [x1, #32]
  448d48:	cbz	x8, 448db4 <feof@plt+0x45cd4>
  448d4c:	ldr	x9, [x1, #24]
  448d50:	mov	x19, x5
  448d54:	mov	x20, x4
  448d58:	mov	x22, x3
  448d5c:	mov	x21, x2
  448d60:	mov	x23, x0
  448d64:	mov	x11, xzr
  448d68:	mov	x12, x8
  448d6c:	b	448d7c <feof@plt+0x45c9c>
  448d70:	mov	x12, x13
  448d74:	cmp	x11, x12
  448d78:	b.cs	448db4 <feof@plt+0x45cd4>  // b.hs, b.nlast
  448d7c:	add	x10, x12, x11
  448d80:	lsr	x13, x10, #1
  448d84:	add	x10, x13, x13, lsl #1
  448d88:	lsl	x14, x10, #3
  448d8c:	add	x10, x9, x14
  448d90:	ldr	x15, [x10]
  448d94:	cmp	x15, x23
  448d98:	b.hi	448d70 <feof@plt+0x45c90>  // b.pmore
  448d9c:	ldr	x15, [x10, #8]
  448da0:	cmp	x15, x23
  448da4:	b.hi	448dcc <feof@plt+0x45cec>  // b.pmore
  448da8:	add	x11, x13, #0x1
  448dac:	cmp	x11, x12
  448db0:	b.cc	448d7c <feof@plt+0x45c9c>  // b.lo, b.ul, b.last
  448db4:	mov	w0, wzr
  448db8:	ldp	x20, x19, [sp, #48]
  448dbc:	ldp	x22, x21, [sp, #32]
  448dc0:	ldp	x24, x23, [sp, #16]
  448dc4:	ldp	x29, x30, [sp], #64
  448dc8:	ret
  448dcc:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  448dd0:	asr	x15, x14, #3
  448dd4:	movk	x13, #0xaaab
  448dd8:	orr	x14, xzr, #0x1
  448ddc:	madd	x15, x15, x13, x14
  448de0:	cmp	x15, x8
  448de4:	b.cs	448e34 <feof@plt+0x45d54>  // b.hs, b.nlast
  448de8:	add	x11, x12, x11
  448dec:	lsr	x11, x11, #1
  448df0:	mov	w12, #0x18                  	// #24
  448df4:	madd	x11, x11, x12, x9
  448df8:	add	x11, x11, #0x18
  448dfc:	ldr	x12, [x11]
  448e00:	cmp	x12, x23
  448e04:	b.hi	448e34 <feof@plt+0x45d54>  // b.pmore
  448e08:	ldr	x12, [x11, #8]
  448e0c:	cmp	x12, x23
  448e10:	b.ls	448e30 <feof@plt+0x45d50>  // b.plast
  448e14:	sub	x12, x11, x9
  448e18:	asr	x12, x12, #3
  448e1c:	madd	x12, x12, x13, x14
  448e20:	add	x10, x10, #0x18
  448e24:	cmp	x12, x8
  448e28:	add	x11, x11, #0x18
  448e2c:	b.cc	448dfc <feof@plt+0x45d1c>  // b.lo, b.ul, b.last
  448e30:	sub	x10, x11, #0x18
  448e34:	ldr	x24, [x10, #16]
  448e38:	mov	x0, x23
  448e3c:	mov	x2, x21
  448e40:	mov	x3, x22
  448e44:	mov	x1, x24
  448e48:	mov	x4, x20
  448e4c:	mov	x5, x19
  448e50:	bl	448d30 <feof@plt+0x45c50>
  448e54:	cbnz	w0, 448db8 <feof@plt+0x45cd8>
  448e58:	ldr	x2, [x20]
  448e5c:	ldr	w3, [x19]
  448e60:	ldr	x4, [x24]
  448e64:	mov	x0, x22
  448e68:	mov	x1, x23
  448e6c:	blr	x21
  448e70:	cbnz	w0, 448db8 <feof@plt+0x45cd8>
  448e74:	ldr	x8, [x24, #8]
  448e78:	str	x8, [x20]
  448e7c:	ldr	w8, [x24, #16]
  448e80:	str	w8, [x19]
  448e84:	b	448db8 <feof@plt+0x45cd8>
  448e88:	ldr	x8, [x0]
  448e8c:	ldr	x9, [x1]
  448e90:	cmp	x8, x9
  448e94:	b.cs	448ea0 <feof@plt+0x45dc0>  // b.hs, b.nlast
  448e98:	mov	w0, #0xffffffff            	// #-1
  448e9c:	ret
  448ea0:	b.ls	448eac <feof@plt+0x45dcc>  // b.plast
  448ea4:	mov	w0, #0x1                   	// #1
  448ea8:	ret
  448eac:	ldr	w8, [x0, #20]
  448eb0:	ldr	w9, [x1, #20]
  448eb4:	cmp	w8, w9
  448eb8:	b.ge	448ec4 <feof@plt+0x45de4>  // b.tcont
  448ebc:	mov	w0, #0xffffffff            	// #-1
  448ec0:	ret
  448ec4:	cset	w0, gt
  448ec8:	ret
  448ecc:	sub	sp, sp, #0x1c0
  448ed0:	stp	x29, x30, [sp, #352]
  448ed4:	stp	x28, x27, [sp, #368]
  448ed8:	stp	x26, x25, [sp, #384]
  448edc:	stp	x24, x23, [sp, #400]
  448ee0:	stp	x22, x21, [sp, #416]
  448ee4:	stp	x20, x19, [sp, #432]
  448ee8:	add	x29, sp, #0x160
  448eec:	ldr	x8, [x4, #24]
  448ef0:	cbz	x8, 449590 <feof@plt+0x464b0>
  448ef4:	ldr	x9, [x29, #104]
  448ef8:	mov	x21, x7
  448efc:	mov	x27, x6
  448f00:	mov	x28, x5
  448f04:	str	x9, [sp, #104]
  448f08:	ldr	x9, [x29, #96]
  448f0c:	mov	x19, x4
  448f10:	mov	x23, x3
  448f14:	mov	x24, x2
  448f18:	mov	x25, x1
  448f1c:	mov	x20, x0
  448f20:	stp	x0, x9, [sp, #112]
  448f24:	ldr	x10, [x19, #16]
  448f28:	cbz	x8, 449598 <feof@plt+0x464b8>
  448f2c:	mov	w9, wzr
  448f30:	mov	w22, wzr
  448f34:	mov	x20, xzr
  448f38:	add	x11, x10, #0x1
  448f3c:	sub	x8, x8, #0x1
  448f40:	stp	x11, x8, [x19, #16]
  448f44:	ldrb	w26, [x10]
  448f48:	cmp	w22, #0x3f
  448f4c:	b.hi	448f68 <feof@plt+0x45e88>  // b.pmore
  448f50:	and	x8, x26, #0x7f
  448f54:	lsl	x8, x8, x22
  448f58:	orr	x20, x8, x20
  448f5c:	sxtb	w8, w26
  448f60:	tbnz	w8, #31, 448f74 <feof@plt+0x45e94>
  448f64:	b	448fc8 <feof@plt+0x45ee8>
  448f68:	cbz	w9, 448f84 <feof@plt+0x45ea4>
  448f6c:	sxtb	w8, w26
  448f70:	tbz	w8, #31, 448fc8 <feof@plt+0x45ee8>
  448f74:	ldp	x10, x8, [x19, #16]
  448f78:	add	w22, w22, #0x7
  448f7c:	cbnz	x8, 448f38 <feof@plt+0x45e58>
  448f80:	b	449598 <feof@plt+0x464b8>
  448f84:	ldr	w8, [x19, #8]
  448f88:	ldr	x4, [x19]
  448f8c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  448f90:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  448f94:	sub	w5, w11, w8
  448f98:	add	x0, sp, #0x90
  448f9c:	mov	w1, #0xc8                  	// #200
  448fa0:	add	x2, x2, #0x6df
  448fa4:	add	x3, x3, #0x798
  448fa8:	bl	402df0 <snprintf@plt>
  448fac:	ldp	x8, x0, [x19, #40]
  448fb0:	add	x1, sp, #0x90
  448fb4:	mov	w2, wzr
  448fb8:	blr	x8
  448fbc:	mov	w9, #0x1                   	// #1
  448fc0:	sxtb	w8, w26
  448fc4:	tbnz	w8, #31, 448f74 <feof@plt+0x45e94>
  448fc8:	cbz	x20, 449590 <feof@plt+0x464b0>
  448fcc:	ldr	x8, [x24, #88]
  448fd0:	sub	x10, x20, #0x1
  448fd4:	cmp	x10, x8
  448fd8:	b.cs	4490a4 <feof@plt+0x45fc4>  // b.hs, b.nlast
  448fdc:	ldr	x9, [x24, #96]
  448fe0:	add	x26, x9, x10, lsl #5
  448fe4:	ldr	x10, [x26]
  448fe8:	cmp	x10, x20
  448fec:	b.ne	4490ac <feof@plt+0x45fcc>  // b.any
  448ff0:	cbz	x26, 4495f8 <feof@plt+0x46518>
  448ff4:	ldr	w20, [x26, #8]
  448ff8:	str	x28, [sp, #64]
  448ffc:	mov	x22, xzr
  449000:	mov	w28, wzr
  449004:	cmp	w20, #0x2e
  449008:	b.hi	449458 <feof@plt+0x46378>  // b.pmore
  44900c:	mov	x9, #0x8                   	// #8
  449010:	mov	w8, #0x1                   	// #1
  449014:	movk	x9, #0x2000, lsl #16
  449018:	lsl	x8, x8, x20
  44901c:	movk	x9, #0x4000, lsl #32
  449020:	tst	x8, x9
  449024:	ldr	x8, [sp, #120]
  449028:	b.eq	449068 <feof@plt+0x45f88>  // b.none
  44902c:	ldr	x0, [sp, #112]
  449030:	mov	w1, #0x28                  	// #40
  449034:	mov	x2, x27
  449038:	mov	x3, x21
  44903c:	bl	43feec <feof@plt+0x3ce0c>
  449040:	mov	x22, x0
  449044:	cbz	x0, 4495fc <feof@plt+0x4651c>
  449048:	ldr	x8, [sp, #104]
  44904c:	ldr	x9, [sp, #120]
  449050:	cmp	w20, #0x1d
  449054:	movi	v0.2d, #0x0
  449058:	mov	w28, #0x1                   	// #1
  44905c:	csel	x8, x8, x9, eq  // eq = none
  449060:	str	xzr, [x22, #32]
  449064:	stp	q0, q0, [x22]
  449068:	str	x8, [sp, #24]
  44906c:	ldr	x8, [x26, #16]
  449070:	str	x27, [sp, #80]
  449074:	cbz	x8, 449320 <feof@plt+0x46240>
  449078:	mov	x27, xzr
  44907c:	mov	x20, xzr
  449080:	str	wzr, [sp, #76]
  449084:	str	wzr, [sp, #60]
  449088:	str	xzr, [sp, #48]
  44908c:	str	wzr, [sp, #20]
  449090:	str	wzr, [sp, #44]
  449094:	str	xzr, [sp, #32]
  449098:	str	wzr, [sp, #96]
  44909c:	str	xzr, [sp, #88]
  4490a0:	b	449120 <feof@plt+0x46040>
  4490a4:	cbz	x8, 4495e4 <feof@plt+0x46504>
  4490a8:	ldr	x9, [x24, #96]
  4490ac:	mov	x10, xzr
  4490b0:	b	4490c0 <feof@plt+0x45fe0>
  4490b4:	cmp	x10, x11
  4490b8:	mov	x8, x11
  4490bc:	b.cs	4495e4 <feof@plt+0x46504>  // b.hs, b.nlast
  4490c0:	add	x11, x8, x10
  4490c4:	lsr	x11, x11, #1
  4490c8:	add	x26, x9, x11, lsl #5
  4490cc:	ldr	x12, [x26]
  4490d0:	cmp	x12, x20
  4490d4:	b.hi	4490b4 <feof@plt+0x45fd4>  // b.pmore
  4490d8:	b.cs	448ff0 <feof@plt+0x45f10>  // b.hs, b.nlast
  4490dc:	add	x10, x11, #0x1
  4490e0:	mov	x11, x8
  4490e4:	b	4490b4 <feof@plt+0x45fd4>
  4490e8:	ldr	w8, [sp, #128]
  4490ec:	ldr	x9, [sp, #136]
  4490f0:	cmp	w8, #0x1
  4490f4:	ldr	x8, [sp, #88]
  4490f8:	csel	x8, x9, x8, eq  // eq = none
  4490fc:	str	x8, [sp, #88]
  449100:	ldr	w8, [sp, #96]
  449104:	csinc	w8, w8, wzr, ne  // ne = any
  449108:	str	w8, [sp, #96]
  44910c:	ldr	x8, [x26, #16]
  449110:	add	x20, x20, #0x1
  449114:	add	x27, x27, #0x8
  449118:	cmp	x20, x8
  44911c:	b.cs	44933c <feof@plt+0x4625c>  // b.hs, b.nlast
  449120:	ldr	x8, [x26, #24]
  449124:	ldp	w3, w2, [x24, #40]
  449128:	ldr	w4, [x24, #48]
  44912c:	ldp	x5, x6, [x25, #104]
  449130:	add	x8, x8, x27
  449134:	ldr	w0, [x8, #4]
  449138:	ldr	x7, [x25, #8]
  44913c:	add	x8, sp, #0x80
  449140:	mov	x1, x19
  449144:	str	x8, [sp]
  449148:	bl	445640 <feof@plt+0x42560>
  44914c:	cbz	w0, 4495f8 <feof@plt+0x46518>
  449150:	ldr	w8, [x26, #8]
  449154:	cmp	w8, #0x11
  449158:	b.ne	449178 <feof@plt+0x46098>  // b.any
  44915c:	ldr	x8, [x26, #24]
  449160:	ldr	w9, [sp, #128]
  449164:	ldr	x10, [sp, #136]
  449168:	ldr	w8, [x8, x27]
  44916c:	cmp	w9, #0x1
  449170:	ccmp	w8, #0x11, #0x0, eq  // eq = none
  449174:	csel	x23, x10, x23, eq  // eq = none
  449178:	cbz	w28, 44910c <feof@plt+0x4602c>
  44917c:	ldr	x8, [x26, #24]
  449180:	ldr	w9, [x8, x27]
  449184:	cmp	w9, #0x30
  449188:	b.le	4491d8 <feof@plt+0x460f8>
  44918c:	sub	w10, w9, #0x47
  449190:	cmp	w10, #0x27
  449194:	b.hi	449218 <feof@plt+0x46138>  // b.pmore
  449198:	adrp	x12, 472000 <_obstack_memory_used@@Base+0x10838>
  44919c:	add	x12, x12, #0x66e
  4491a0:	adr	x9, 44910c <feof@plt+0x4602c>
  4491a4:	ldrb	w11, [x12, x10]
  4491a8:	add	x9, x9, x11, lsl #2
  4491ac:	br	x9
  4491b0:	ldr	w8, [sp, #128]
  4491b4:	cmp	w8, #0x8
  4491b8:	b.eq	4491c4 <feof@plt+0x460e4>  // b.none
  4491bc:	cmp	w8, #0x2
  4491c0:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  4491c4:	ldr	x8, [sp, #136]
  4491c8:	str	x8, [sp, #48]
  4491cc:	mov	w8, #0x1                   	// #1
  4491d0:	str	w8, [sp, #60]
  4491d4:	b	44910c <feof@plt+0x4602c>
  4491d8:	cmp	w9, #0x3
  4491dc:	b.eq	449280 <feof@plt+0x461a0>  // b.none
  4491e0:	cmp	w9, #0x11
  4491e4:	b.eq	4490e8 <feof@plt+0x46008>  // b.none
  4491e8:	cmp	w9, #0x12
  4491ec:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  4491f0:	ldr	w8, [sp, #128]
  4491f4:	cmp	w8, #0x2
  4491f8:	b.eq	4492ec <feof@plt+0x4620c>  // b.none
  4491fc:	cmp	w8, #0x1
  449200:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  449204:	ldr	x8, [sp, #136]
  449208:	str	x8, [sp, #32]
  44920c:	mov	w8, #0x1                   	// #1
  449210:	str	w8, [sp, #44]
  449214:	b	44910c <feof@plt+0x4602c>
  449218:	cmp	w9, #0x31
  44921c:	b.eq	44924c <feof@plt+0x4616c>  // b.none
  449220:	mov	w8, #0x2007                	// #8199
  449224:	cmp	w9, w8
  449228:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  44922c:	ldr	w8, [sp, #128]
  449230:	cmp	w8, #0x4
  449234:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  449238:	ldr	x8, [sp, #136]
  44923c:	str	x8, [x22]
  449240:	mov	w8, #0x1                   	// #1
  449244:	str	w8, [sp, #76]
  449248:	b	44910c <feof@plt+0x4602c>
  44924c:	ldr	w9, [sp, #76]
  449250:	cbnz	w9, 44910c <feof@plt+0x4602c>
  449254:	ldr	x4, [sp, #80]
  449258:	add	x2, x8, x27
  44925c:	add	x3, sp, #0x80
  449260:	mov	x0, x25
  449264:	mov	x1, x24
  449268:	mov	x5, x21
  44926c:	bl	4496b4 <feof@plt+0x465d4>
  449270:	cbz	x0, 449308 <feof@plt+0x46228>
  449274:	str	wzr, [sp, #76]
  449278:	str	x0, [x22]
  44927c:	b	44910c <feof@plt+0x4602c>
  449280:	ldr	x8, [x22]
  449284:	cbnz	x8, 44910c <feof@plt+0x4602c>
  449288:	ldr	w8, [sp, #128]
  44928c:	cmp	w8, #0x4
  449290:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  449294:	ldr	x8, [sp, #136]
  449298:	str	x8, [x22]
  44929c:	b	44910c <feof@plt+0x4602c>
  4492a0:	ldr	w8, [sp, #128]
  4492a4:	cmp	w8, #0x2
  4492a8:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  4492ac:	ldr	x8, [sp, #136]
  4492b0:	cbz	x8, 449310 <feof@plt+0x46230>
  4492b4:	ldr	x10, [sp, #64]
  4492b8:	sub	x8, x8, #0x1
  4492bc:	ldr	x9, [x10, #48]
  4492c0:	cmp	x8, x9
  4492c4:	b.cs	449620 <feof@plt+0x46540>  // b.hs, b.nlast
  4492c8:	ldr	x9, [x10, #56]
  4492cc:	ldr	x8, [x9, x8, lsl #3]
  4492d0:	b	449318 <feof@plt+0x46238>
  4492d4:	ldr	w8, [sp, #128]
  4492d8:	cmp	w8, #0x2
  4492dc:	b.ne	44910c <feof@plt+0x4602c>  // b.any
  4492e0:	ldr	x8, [sp, #136]
  4492e4:	str	w8, [x22, #16]
  4492e8:	b	44910c <feof@plt+0x4602c>
  4492ec:	ldr	x8, [sp, #136]
  4492f0:	str	x8, [sp, #32]
  4492f4:	mov	w8, #0x1                   	// #1
  4492f8:	str	w8, [sp, #44]
  4492fc:	mov	w8, #0x1                   	// #1
  449300:	str	w8, [sp, #20]
  449304:	b	44910c <feof@plt+0x4602c>
  449308:	str	wzr, [sp, #76]
  44930c:	b	44910c <feof@plt+0x4602c>
  449310:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x838>
  449314:	add	x8, x8, #0xbb5
  449318:	str	x8, [x22, #8]
  44931c:	b	44910c <feof@plt+0x4602c>
  449320:	str	xzr, [sp, #88]
  449324:	str	wzr, [sp, #96]
  449328:	str	xzr, [sp, #32]
  44932c:	str	wzr, [sp, #44]
  449330:	str	wzr, [sp, #20]
  449334:	str	xzr, [sp, #48]
  449338:	str	wzr, [sp, #60]
  44933c:	cbz	w28, 449348 <feof@plt+0x46268>
  449340:	ldr	x8, [x22]
  449344:	cbz	x8, 449460 <feof@plt+0x46380>
  449348:	ldr	x27, [sp, #80]
  44934c:	ldr	x20, [sp, #112]
  449350:	cbz	w28, 449480 <feof@plt+0x463a0>
  449354:	ldr	w8, [sp, #60]
  449358:	cbz	w8, 449394 <feof@plt+0x462b4>
  44935c:	ldr	x8, [sp, #24]
  449360:	ldr	x4, [sp, #48]
  449364:	mov	x0, x20
  449368:	mov	x1, x25
  44936c:	mov	x2, x24
  449370:	mov	x3, x22
  449374:	mov	x5, x23
  449378:	mov	x6, x27
  44937c:	mov	x7, x21
  449380:	str	x8, [sp]
  449384:	bl	4497c0 <feof@plt+0x466e0>
  449388:	ldr	x28, [sp, #64]
  44938c:	cbnz	w0, 449448 <feof@plt+0x46368>
  449390:	b	4495f8 <feof@plt+0x46518>
  449394:	ldr	x28, [sp, #64]
  449398:	ldr	w8, [sp, #96]
  44939c:	cbz	w8, 449564 <feof@plt+0x46484>
  4493a0:	ldr	w8, [sp, #44]
  4493a4:	cbz	w8, 449564 <feof@plt+0x46484>
  4493a8:	ldr	w8, [sp, #20]
  4493ac:	ldp	x27, x12, [sp, #24]
  4493b0:	ldr	x11, [sp, #88]
  4493b4:	ldr	x9, [x25, #16]
  4493b8:	cmp	w8, #0x0
  4493bc:	ldr	x8, [x27, #24]
  4493c0:	csel	x10, xzr, x11, eq  // eq = none
  4493c4:	add	x10, x10, x12
  4493c8:	add	x20, x9, x11
  4493cc:	add	x11, x10, x9
  4493d0:	cbz	x8, 449408 <feof@plt+0x46328>
  4493d4:	ldr	x9, [x27]
  4493d8:	mov	w10, #0x18                  	// #24
  4493dc:	madd	x9, x8, x10, x9
  4493e0:	ldur	x8, [x9, #-16]
  4493e4:	cmp	x20, x8
  4493e8:	b.eq	4493f8 <feof@plt+0x46318>  // b.none
  4493ec:	add	x10, x8, #0x1
  4493f0:	cmp	x20, x10
  4493f4:	b.ne	449408 <feof@plt+0x46328>  // b.any
  4493f8:	sub	x9, x9, #0x18
  4493fc:	ldr	x10, [x9, #16]
  449400:	cmp	x10, x22
  449404:	b.eq	449580 <feof@plt+0x464a0>  // b.none
  449408:	ldr	x0, [sp, #112]
  44940c:	ldr	x2, [sp, #80]
  449410:	mov	w1, #0x18                  	// #24
  449414:	mov	x3, x21
  449418:	mov	x4, x27
  44941c:	str	x11, [sp, #96]
  449420:	bl	4401c0 <feof@plt+0x3d0e0>
  449424:	cbz	x0, 4495f8 <feof@plt+0x46518>
  449428:	ldr	x8, [sp, #96]
  44942c:	str	x22, [x0, #16]
  449430:	stp	x20, x8, [x0]
  449434:	ldr	x8, [x27, #24]
  449438:	add	x8, x8, #0x1
  44943c:	str	x8, [x27, #24]
  449440:	ldr	x27, [sp, #80]
  449444:	ldr	x20, [sp, #112]
  449448:	mov	w8, #0x1                   	// #1
  44944c:	ldr	w9, [x26, #12]
  449450:	cbnz	w9, 449490 <feof@plt+0x463b0>
  449454:	b	449554 <feof@plt+0x46474>
  449458:	ldr	x8, [sp, #120]
  44945c:	b	449068 <feof@plt+0x45f88>
  449460:	ldr	x20, [sp, #112]
  449464:	ldr	x27, [sp, #80]
  449468:	mov	w2, #0x28                  	// #40
  44946c:	mov	x1, x22
  449470:	mov	x0, x20
  449474:	mov	x3, x27
  449478:	mov	x4, x21
  44947c:	bl	4400b0 <feof@plt+0x3cfd0>
  449480:	ldr	x28, [sp, #64]
  449484:	mov	w8, wzr
  449488:	ldr	w9, [x26, #12]
  44948c:	cbz	w9, 449554 <feof@plt+0x46474>
  449490:	cbz	w8, 44951c <feof@plt+0x4643c>
  449494:	add	x8, sp, #0x90
  449498:	str	x8, [sp, #8]
  44949c:	ldr	x8, [sp, #120]
  4494a0:	movi	v0.2d, #0x0
  4494a4:	mov	x0, x20
  4494a8:	mov	x1, x25
  4494ac:	mov	x2, x24
  4494b0:	mov	x3, x23
  4494b4:	mov	x4, x19
  4494b8:	mov	x5, x28
  4494bc:	mov	x6, x27
  4494c0:	mov	x7, x21
  4494c4:	stp	q0, q0, [sp, #144]
  4494c8:	str	x8, [sp]
  4494cc:	bl	448ecc <feof@plt+0x45dec>
  4494d0:	cbz	w0, 4495f8 <feof@plt+0x46518>
  4494d4:	ldr	x8, [sp, #168]
  4494d8:	cbz	x8, 449554 <feof@plt+0x46474>
  4494dc:	add	x1, sp, #0x90
  4494e0:	mov	x0, x20
  4494e4:	mov	x2, x27
  4494e8:	mov	x3, x21
  4494ec:	bl	4402d8 <feof@plt+0x3d1f8>
  4494f0:	cbz	w0, 4495f8 <feof@plt+0x46518>
  4494f4:	ldr	x26, [sp, #144]
  4494f8:	ldr	x1, [sp, #168]
  4494fc:	adrp	x3, 449000 <feof@plt+0x45f20>
  449500:	mov	w2, #0x18                  	// #24
  449504:	mov	x0, x26
  449508:	add	x3, x3, #0x660
  44950c:	bl	449fb4 <feof@plt+0x46ed4>
  449510:	ldr	x8, [sp, #168]
  449514:	stp	x26, x8, [x22, #24]
  449518:	b	449554 <feof@plt+0x46474>
  44951c:	ldr	x8, [sp, #104]
  449520:	mov	x0, x20
  449524:	mov	x1, x25
  449528:	mov	x2, x24
  44952c:	str	x8, [sp, #8]
  449530:	ldr	x8, [sp, #120]
  449534:	mov	x3, x23
  449538:	mov	x4, x19
  44953c:	mov	x5, x28
  449540:	mov	x6, x27
  449544:	mov	x7, x21
  449548:	str	x8, [sp]
  44954c:	bl	448ecc <feof@plt+0x45dec>
  449550:	cbz	w0, 4495f8 <feof@plt+0x46518>
  449554:	ldr	x8, [x19, #24]
  449558:	mov	w22, #0x1                   	// #1
  44955c:	cbnz	x8, 448f24 <feof@plt+0x45e44>
  449560:	b	4495fc <feof@plt+0x4651c>
  449564:	mov	w2, #0x28                  	// #40
  449568:	mov	x0, x20
  44956c:	mov	x1, x22
  449570:	mov	x3, x27
  449574:	mov	x4, x21
  449578:	bl	4400b0 <feof@plt+0x3cfd0>
  44957c:	b	449484 <feof@plt+0x463a4>
  449580:	cmp	x11, x8
  449584:	b.ls	449440 <feof@plt+0x46360>  // b.plast
  449588:	str	x11, [x9, #8]
  44958c:	b	449440 <feof@plt+0x46360>
  449590:	mov	w22, #0x1                   	// #1
  449594:	b	4495fc <feof@plt+0x4651c>
  449598:	ldr	w8, [x19, #56]
  44959c:	mov	w22, #0x1                   	// #1
  4495a0:	cbnz	w8, 4495fc <feof@plt+0x4651c>
  4495a4:	ldr	w8, [x19, #8]
  4495a8:	ldr	x4, [x19]
  4495ac:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4495b0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4495b4:	sub	w5, w10, w8
  4495b8:	add	x2, x2, #0x6df
  4495bc:	add	x3, x3, #0x6cf
  4495c0:	add	x0, sp, #0x90
  4495c4:	mov	w1, #0xc8                  	// #200
  4495c8:	bl	402df0 <snprintf@plt>
  4495cc:	ldp	x8, x0, [x19, #40]
  4495d0:	add	x1, sp, #0x90
  4495d4:	mov	w2, wzr
  4495d8:	blr	x8
  4495dc:	str	w22, [x19, #56]
  4495e0:	b	4495fc <feof@plt+0x4651c>
  4495e4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  4495e8:	add	x1, x1, #0x709
  4495ec:	mov	x0, x21
  4495f0:	mov	w2, wzr
  4495f4:	blr	x27
  4495f8:	mov	w22, wzr
  4495fc:	mov	w0, w22
  449600:	ldp	x20, x19, [sp, #432]
  449604:	ldp	x22, x21, [sp, #416]
  449608:	ldp	x24, x23, [sp, #400]
  44960c:	ldp	x26, x25, [sp, #384]
  449610:	ldp	x28, x27, [sp, #368]
  449614:	ldp	x29, x30, [sp, #352]
  449618:	add	sp, sp, #0x1c0
  44961c:	ret
  449620:	ldr	w8, [x19, #16]
  449624:	ldr	w9, [x19, #8]
  449628:	ldr	x4, [x19]
  44962c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449630:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  449634:	sub	w5, w8, w9
  449638:	add	x2, x2, #0x6df
  44963c:	add	x3, x3, #0x880
  449640:	add	x0, sp, #0x90
  449644:	mov	w1, #0xc8                  	// #200
  449648:	bl	402df0 <snprintf@plt>
  44964c:	ldp	x8, x0, [x19, #40]
  449650:	add	x1, sp, #0x90
  449654:	mov	w2, wzr
  449658:	blr	x8
  44965c:	b	4495f8 <feof@plt+0x46518>
  449660:	ldr	x8, [x0]
  449664:	ldr	x9, [x1]
  449668:	cmp	x8, x9
  44966c:	b.cs	449678 <feof@plt+0x46598>  // b.hs, b.nlast
  449670:	mov	w0, #0xffffffff            	// #-1
  449674:	ret
  449678:	b.ls	449684 <feof@plt+0x465a4>  // b.plast
  44967c:	mov	w0, #0x1                   	// #1
  449680:	ret
  449684:	ldr	x8, [x0, #8]
  449688:	ldr	x9, [x1, #8]
  44968c:	cmp	x8, x9
  449690:	b.cs	44969c <feof@plt+0x465bc>  // b.hs, b.nlast
  449694:	mov	w0, #0x1                   	// #1
  449698:	ret
  44969c:	b.hi	449670 <feof@plt+0x46590>  // b.pmore
  4496a0:	ldr	x8, [x0, #16]
  4496a4:	ldr	x9, [x1, #16]
  4496a8:	ldr	x0, [x8]
  4496ac:	ldr	x1, [x9]
  4496b0:	b	402ed0 <strcmp@plt>
  4496b4:	ldr	w8, [x2]
  4496b8:	cmp	w8, #0x47
  4496bc:	b.eq	4496c8 <feof@plt+0x465e8>  // b.none
  4496c0:	cmp	w8, #0x31
  4496c4:	b.ne	4496d4 <feof@plt+0x465f4>  // b.any
  4496c8:	ldr	w8, [x2, #4]
  4496cc:	cmp	w8, #0x20
  4496d0:	b.ne	4496dc <feof@plt+0x465fc>  // b.any
  4496d4:	mov	x0, xzr
  4496d8:	ret
  4496dc:	ldr	w8, [x3]
  4496e0:	sub	w8, w8, #0x2
  4496e4:	cmp	w8, #0x5
  4496e8:	b.hi	4496d4 <feof@plt+0x465f4>  // b.pmore
  4496ec:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  4496f0:	add	x9, x9, #0x696
  4496f4:	adr	x10, 4496d4 <feof@plt+0x465f4>
  4496f8:	ldrb	w11, [x9, x8]
  4496fc:	add	x10, x10, x11, lsl #2
  449700:	br	x10
  449704:	ldr	x2, [x3, #8]
  449708:	mov	x3, x4
  44970c:	mov	x4, x5
  449710:	b	449c74 <feof@plt+0x46b94>
  449714:	ldr	x10, [x0, #48]
  449718:	cbz	x10, 4496d4 <feof@plt+0x465f4>
  44971c:	ldr	x8, [x0, #40]
  449720:	ldr	x9, [x3, #8]
  449724:	mov	x11, xzr
  449728:	b	449738 <feof@plt+0x46658>
  44972c:	cmp	x11, x12
  449730:	mov	x10, x12
  449734:	b.cs	4496d4 <feof@plt+0x465f4>  // b.hs, b.nlast
  449738:	add	x12, x10, x11
  44973c:	lsr	x12, x12, #1
  449740:	ldr	x1, [x8, x12, lsl #3]
  449744:	ldr	x13, [x1, #24]
  449748:	subs	x2, x9, x13
  44974c:	b.cc	44972c <feof@plt+0x4664c>  // b.lo, b.ul, b.last
  449750:	ldr	x11, [x1, #32]
  449754:	cmp	x11, x9
  449758:	b.hi	449708 <feof@plt+0x46628>  // b.pmore
  44975c:	add	x11, x12, #0x1
  449760:	mov	x12, x10
  449764:	b	44972c <feof@plt+0x4664c>
  449768:	ldr	x0, [x0, #8]
  44976c:	ldr	x9, [x0, #48]
  449770:	cbz	x9, 4496d4 <feof@plt+0x465f4>
  449774:	ldr	x8, [x0, #40]
  449778:	ldr	x10, [x3, #8]
  44977c:	mov	x11, xzr
  449780:	b	449790 <feof@plt+0x466b0>
  449784:	cmp	x11, x12
  449788:	mov	x9, x12
  44978c:	b.cs	4496d4 <feof@plt+0x465f4>  // b.hs, b.nlast
  449790:	add	x12, x9, x11
  449794:	lsr	x12, x12, #1
  449798:	ldr	x1, [x8, x12, lsl #3]
  44979c:	ldr	x13, [x1, #24]
  4497a0:	subs	x2, x10, x13
  4497a4:	b.cc	449784 <feof@plt+0x466a4>  // b.lo, b.ul, b.last
  4497a8:	ldr	x11, [x1, #32]
  4497ac:	cmp	x11, x10
  4497b0:	b.hi	449708 <feof@plt+0x46628>  // b.pmore
  4497b4:	add	x11, x12, #0x1
  4497b8:	mov	x12, x9
  4497bc:	b	449784 <feof@plt+0x466a4>
  4497c0:	sub	sp, sp, #0x170
  4497c4:	stp	x29, x30, [sp, #272]
  4497c8:	stp	x28, x27, [sp, #288]
  4497cc:	stp	x26, x25, [sp, #304]
  4497d0:	stp	x24, x23, [sp, #320]
  4497d4:	stp	x22, x21, [sp, #336]
  4497d8:	stp	x20, x19, [sp, #352]
  4497dc:	add	x29, sp, #0x110
  4497e0:	ldr	x8, [x1, #96]
  4497e4:	mov	x20, x7
  4497e8:	mov	x19, x6
  4497ec:	subs	x8, x8, x4
  4497f0:	b.ls	449c2c <feof@plt+0x46b4c>  // b.plast
  4497f4:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  4497f8:	add	x9, x9, #0x482
  4497fc:	str	x9, [sp]
  449800:	ldr	x9, [x1, #88]
  449804:	str	x8, [sp, #24]
  449808:	ldr	x26, [x29, #96]
  44980c:	mov	x24, x5
  449810:	add	x8, x9, x4
  449814:	stp	x9, x8, [sp, #8]
  449818:	ldr	w8, [x1, #120]
  44981c:	mov	x21, x3
  449820:	mov	x22, x2
  449824:	mov	x23, x1
  449828:	mov	x25, x0
  44982c:	stp	x19, x20, [sp, #40]
  449830:	str	wzr, [sp, #56]
  449834:	str	w8, [sp, #32]
  449838:	b	449848 <feof@plt+0x46768>
  44983c:	mov	x24, x0
  449840:	ldr	w8, [sp, #56]
  449844:	cbnz	w8, 449c40 <feof@plt+0x46b60>
  449848:	ldr	w8, [x22, #48]
  44984c:	sub	w8, w8, #0x1
  449850:	cmp	w8, #0x7
  449854:	b.hi	4498bc <feof@plt+0x467dc>  // b.pmore
  449858:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44985c:	add	x11, x11, #0x69c
  449860:	adr	x9, 449870 <feof@plt+0x46790>
  449864:	ldrb	w10, [x11, x8]
  449868:	add	x9, x9, x10, lsl #2
  44986c:	br	x9
  449870:	ldp	x8, x9, [sp, #16]
  449874:	cbz	x9, 44990c <feof@plt+0x4682c>
  449878:	add	x10, x8, #0x1
  44987c:	sub	x9, x9, #0x1
  449880:	stp	x10, x9, [sp, #16]
  449884:	ldrb	w28, [x8]
  449888:	b	449994 <feof@plt+0x468b4>
  44988c:	ldp	x8, x9, [sp, #16]
  449890:	cmp	x9, #0x1
  449894:	b.ls	44990c <feof@plt+0x4682c>  // b.plast
  449898:	ldr	w10, [sp, #32]
  44989c:	add	x11, x8, #0x2
  4498a0:	sub	x9, x9, #0x2
  4498a4:	stp	x11, x9, [sp, #16]
  4498a8:	cbz	w10, 449988 <feof@plt+0x468a8>
  4498ac:	ldrh	w8, [x8]
  4498b0:	lsl	x8, x8, #48
  4498b4:	rev	x28, x8
  4498b8:	b	449994 <feof@plt+0x468b4>
  4498bc:	ldr	w8, [sp, #16]
  4498c0:	ldr	w9, [sp, #8]
  4498c4:	ldr	x4, [sp]
  4498c8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  4498cc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  4498d0:	sub	w5, w8, w9
  4498d4:	add	x0, sp, #0x40
  4498d8:	mov	w1, #0xc8                  	// #200
  4498dc:	add	x2, x2, #0x6df
  4498e0:	add	x3, x3, #0x777
  4498e4:	bl	402df0 <snprintf@plt>
  4498e8:	ldp	x8, x0, [sp, #40]
  4498ec:	add	x1, sp, #0x40
  4498f0:	mov	w2, wzr
  4498f4:	blr	x8
  4498f8:	mov	x28, xzr
  4498fc:	b	449994 <feof@plt+0x468b4>
  449900:	ldp	x8, x9, [sp, #16]
  449904:	cmp	x9, #0x3
  449908:	b.hi	449964 <feof@plt+0x46884>  // b.pmore
  44990c:	ldr	w9, [sp, #8]
  449910:	ldr	x4, [sp]
  449914:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449918:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  44991c:	sub	w5, w8, w9
  449920:	add	x0, sp, #0x40
  449924:	mov	w1, #0xc8                  	// #200
  449928:	add	x2, x2, #0x6df
  44992c:	add	x3, x3, #0x6cf
  449930:	bl	402df0 <snprintf@plt>
  449934:	ldp	x8, x0, [sp, #40]
  449938:	add	x1, sp, #0x40
  44993c:	mov	w2, wzr
  449940:	blr	x8
  449944:	mov	w8, #0x1                   	// #1
  449948:	mov	x28, xzr
  44994c:	str	w8, [sp, #56]
  449950:	b	449994 <feof@plt+0x468b4>
  449954:	mov	x0, sp
  449958:	bl	44557c <feof@plt+0x4249c>
  44995c:	mov	x28, x0
  449960:	b	449994 <feof@plt+0x468b4>
  449964:	ldr	w10, [sp, #32]
  449968:	add	x11, x8, #0x4
  44996c:	sub	x9, x9, #0x4
  449970:	stp	x11, x9, [sp, #16]
  449974:	cbz	w10, 449990 <feof@plt+0x468b0>
  449978:	ldr	w8, [x8]
  44997c:	lsl	x8, x8, #32
  449980:	rev	x28, x8
  449984:	b	449994 <feof@plt+0x468b4>
  449988:	ldrh	w28, [x8]
  44998c:	b	449994 <feof@plt+0x468b4>
  449990:	ldr	w28, [x8]
  449994:	ldr	w8, [x22, #48]
  449998:	sub	w8, w8, #0x1
  44999c:	cmp	w8, #0x7
  4499a0:	b.hi	449a08 <feof@plt+0x46928>  // b.pmore
  4499a4:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  4499a8:	add	x11, x11, #0x6a4
  4499ac:	adr	x9, 4499bc <feof@plt+0x468dc>
  4499b0:	ldrb	w10, [x11, x8]
  4499b4:	add	x9, x9, x10, lsl #2
  4499b8:	br	x9
  4499bc:	ldp	x8, x9, [sp, #16]
  4499c0:	cbz	x9, 449a94 <feof@plt+0x469b4>
  4499c4:	add	x10, x8, #0x1
  4499c8:	sub	x9, x9, #0x1
  4499cc:	stp	x10, x9, [sp, #16]
  4499d0:	ldrb	w0, [x8]
  4499d4:	b	449b38 <feof@plt+0x46a58>
  4499d8:	ldp	x8, x9, [sp, #16]
  4499dc:	cmp	x9, #0x1
  4499e0:	b.ls	449a54 <feof@plt+0x46974>  // b.plast
  4499e4:	ldr	w10, [sp, #32]
  4499e8:	add	x11, x8, #0x2
  4499ec:	sub	x9, x9, #0x2
  4499f0:	stp	x11, x9, [sp, #16]
  4499f4:	cbz	w10, 449ae4 <feof@plt+0x46a04>
  4499f8:	ldrh	w8, [x8]
  4499fc:	lsl	x8, x8, #48
  449a00:	rev	x0, x8
  449a04:	b	449b38 <feof@plt+0x46a58>
  449a08:	ldr	w8, [sp, #16]
  449a0c:	ldr	w9, [sp, #8]
  449a10:	ldr	x4, [sp]
  449a14:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449a18:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  449a1c:	sub	w5, w8, w9
  449a20:	add	x0, sp, #0x40
  449a24:	mov	w1, #0xc8                  	// #200
  449a28:	add	x2, x2, #0x6df
  449a2c:	add	x3, x3, #0x777
  449a30:	bl	402df0 <snprintf@plt>
  449a34:	ldp	x8, x0, [sp, #40]
  449a38:	add	x1, sp, #0x40
  449a3c:	mov	w2, wzr
  449a40:	blr	x8
  449a44:	b	449a5c <feof@plt+0x4697c>
  449a48:	ldp	x8, x9, [sp, #16]
  449a4c:	cmp	x9, #0x3
  449a50:	b.hi	449a70 <feof@plt+0x46990>  // b.pmore
  449a54:	ldr	w9, [sp, #56]
  449a58:	cbz	w9, 449aa4 <feof@plt+0x469c4>
  449a5c:	mov	x0, xzr
  449a60:	b	449b38 <feof@plt+0x46a58>
  449a64:	mov	x0, sp
  449a68:	bl	44557c <feof@plt+0x4249c>
  449a6c:	b	449b38 <feof@plt+0x46a58>
  449a70:	ldr	w10, [sp, #32]
  449a74:	add	x11, x8, #0x4
  449a78:	sub	x9, x9, #0x4
  449a7c:	stp	x11, x9, [sp, #16]
  449a80:	cbz	w10, 449aec <feof@plt+0x46a0c>
  449a84:	ldr	w8, [x8]
  449a88:	lsl	x8, x8, #32
  449a8c:	rev	x0, x8
  449a90:	b	449b38 <feof@plt+0x46a58>
  449a94:	ldr	w9, [sp, #56]
  449a98:	cbz	w9, 449af4 <feof@plt+0x46a14>
  449a9c:	mov	w0, wzr
  449aa0:	b	449b38 <feof@plt+0x46a58>
  449aa4:	ldr	w9, [sp, #8]
  449aa8:	ldr	x4, [sp]
  449aac:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449ab0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  449ab4:	sub	w5, w8, w9
  449ab8:	add	x0, sp, #0x40
  449abc:	mov	w1, #0xc8                  	// #200
  449ac0:	add	x2, x2, #0x6df
  449ac4:	add	x3, x3, #0x6cf
  449ac8:	bl	402df0 <snprintf@plt>
  449acc:	ldp	x8, x0, [sp, #40]
  449ad0:	add	x1, sp, #0x40
  449ad4:	mov	w2, wzr
  449ad8:	blr	x8
  449adc:	mov	x0, xzr
  449ae0:	b	449b30 <feof@plt+0x46a50>
  449ae4:	ldrh	w0, [x8]
  449ae8:	b	449b38 <feof@plt+0x46a58>
  449aec:	ldr	w0, [x8]
  449af0:	b	449b38 <feof@plt+0x46a58>
  449af4:	ldr	w9, [sp, #8]
  449af8:	ldr	x4, [sp]
  449afc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449b00:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  449b04:	sub	w5, w8, w9
  449b08:	add	x0, sp, #0x40
  449b0c:	mov	w1, #0xc8                  	// #200
  449b10:	add	x2, x2, #0x6df
  449b14:	add	x3, x3, #0x6cf
  449b18:	bl	402df0 <snprintf@plt>
  449b1c:	ldp	x8, x0, [sp, #40]
  449b20:	add	x1, sp, #0x40
  449b24:	mov	w2, wzr
  449b28:	blr	x8
  449b2c:	mov	w0, wzr
  449b30:	mov	w8, #0x1                   	// #1
  449b34:	str	w8, [sp, #56]
  449b38:	orr	x8, x0, x28
  449b3c:	cbz	x8, 449c48 <feof@plt+0x46b68>
  449b40:	ldr	w8, [x22, #48]
  449b44:	sub	w8, w8, #0x1
  449b48:	cmp	w8, #0x7
  449b4c:	b.hi	449b9c <feof@plt+0x46abc>  // b.pmore
  449b50:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  449b54:	add	x11, x11, #0x6ac
  449b58:	adr	x9, 449b68 <feof@plt+0x46a88>
  449b5c:	ldrb	w10, [x11, x8]
  449b60:	add	x9, x9, x10, lsl #2
  449b64:	br	x9
  449b68:	cmp	x28, #0xff
  449b6c:	b.eq	44983c <feof@plt+0x4675c>  // b.none
  449b70:	b	449b9c <feof@plt+0x46abc>
  449b74:	mov	w8, #0xffff                	// #65535
  449b78:	cmp	x28, x8
  449b7c:	b.eq	44983c <feof@plt+0x4675c>  // b.none
  449b80:	b	449b9c <feof@plt+0x46abc>
  449b84:	mov	w8, #0xffffffff            	// #-1
  449b88:	cmp	x28, x8
  449b8c:	b.ne	449b9c <feof@plt+0x46abc>  // b.any
  449b90:	b	44983c <feof@plt+0x4675c>
  449b94:	cmn	x28, #0x1
  449b98:	b.eq	44983c <feof@plt+0x4675c>  // b.none
  449b9c:	ldr	x9, [x23, #16]
  449ba0:	ldr	x8, [x26, #24]
  449ba4:	add	x9, x9, x24
  449ba8:	add	x27, x9, x28
  449bac:	add	x28, x9, x0
  449bb0:	cbz	x8, 449be8 <feof@plt+0x46b08>
  449bb4:	ldr	x9, [x26]
  449bb8:	mov	w10, #0x18                  	// #24
  449bbc:	madd	x9, x8, x10, x9
  449bc0:	ldur	x8, [x9, #-16]
  449bc4:	cmp	x27, x8
  449bc8:	b.eq	449bd8 <feof@plt+0x46af8>  // b.none
  449bcc:	add	x10, x8, #0x1
  449bd0:	cmp	x27, x10
  449bd4:	b.ne	449be8 <feof@plt+0x46b08>  // b.any
  449bd8:	sub	x9, x9, #0x18
  449bdc:	ldr	x10, [x9, #16]
  449be0:	cmp	x10, x21
  449be4:	b.eq	449c1c <feof@plt+0x46b3c>  // b.none
  449be8:	mov	w1, #0x18                  	// #24
  449bec:	mov	x0, x25
  449bf0:	mov	x2, x19
  449bf4:	mov	x3, x20
  449bf8:	mov	x4, x26
  449bfc:	bl	4401c0 <feof@plt+0x3d0e0>
  449c00:	cbz	x0, 449c54 <feof@plt+0x46b74>
  449c04:	stp	x27, x28, [x0]
  449c08:	str	x21, [x0, #16]
  449c0c:	ldr	x8, [x26, #24]
  449c10:	add	x8, x8, #0x1
  449c14:	str	x8, [x26, #24]
  449c18:	b	449840 <feof@plt+0x46760>
  449c1c:	cmp	x28, x8
  449c20:	b.ls	449840 <feof@plt+0x46760>  // b.plast
  449c24:	str	x28, [x9, #8]
  449c28:	b	449840 <feof@plt+0x46760>
  449c2c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  449c30:	add	x1, x1, #0x908
  449c34:	mov	x0, x20
  449c38:	mov	w2, wzr
  449c3c:	blr	x19
  449c40:	mov	w0, wzr
  449c44:	b	449c54 <feof@plt+0x46b74>
  449c48:	ldr	w8, [sp, #56]
  449c4c:	cmp	w8, #0x0
  449c50:	cset	w0, eq  // eq = none
  449c54:	ldp	x20, x19, [sp, #352]
  449c58:	ldp	x22, x21, [sp, #336]
  449c5c:	ldp	x24, x23, [sp, #320]
  449c60:	ldp	x26, x25, [sp, #304]
  449c64:	ldp	x28, x27, [sp, #288]
  449c68:	ldp	x29, x30, [sp, #272]
  449c6c:	add	sp, sp, #0x170
  449c70:	ret
  449c74:	sub	sp, sp, #0x180
  449c78:	stp	x29, x30, [sp, #288]
  449c7c:	stp	x28, x27, [sp, #304]
  449c80:	stp	x26, x25, [sp, #320]
  449c84:	stp	x24, x23, [sp, #336]
  449c88:	stp	x22, x21, [sp, #352]
  449c8c:	stp	x20, x19, [sp, #368]
  449c90:	add	x29, sp, #0x120
  449c94:	ldr	x9, [x1, #16]
  449c98:	mov	x20, x4
  449c9c:	mov	x19, x3
  449ca0:	cmp	x9, x2
  449ca4:	b.hi	449dd4 <feof@plt+0x46cf4>  // b.pmore
  449ca8:	ldr	x8, [x1, #8]
  449cac:	sub	x9, x2, x9
  449cb0:	mov	x21, x1
  449cb4:	cmp	x8, x9
  449cb8:	b.ls	449dd4 <feof@plt+0x46cf4>  // b.plast
  449cbc:	adrp	x10, 472000 <_obstack_memory_used@@Base+0x10838>
  449cc0:	add	x10, x10, #0x45c
  449cc4:	str	x10, [sp, #16]
  449cc8:	ldr	x10, [x0, #56]
  449ccc:	mov	x22, x0
  449cd0:	str	x10, [sp, #24]
  449cd4:	ldr	x11, [x21]
  449cd8:	subs	x10, x8, x9
  449cdc:	add	x9, x11, x9
  449ce0:	stp	x9, x10, [sp, #32]
  449ce4:	ldr	w8, [x0, #120]
  449ce8:	stp	x19, x20, [sp, #56]
  449cec:	str	wzr, [sp, #72]
  449cf0:	str	w8, [sp, #48]
  449cf4:	b.eq	449d88 <feof@plt+0x46ca8>  // b.none
  449cf8:	adrp	x23, 472000 <_obstack_memory_used@@Base+0x10838>
  449cfc:	adrp	x24, 472000 <_obstack_memory_used@@Base+0x10838>
  449d00:	mov	w8, wzr
  449d04:	mov	w26, wzr
  449d08:	mov	x25, xzr
  449d0c:	add	x23, x23, #0x6df
  449d10:	add	x24, x24, #0x798
  449d14:	add	x11, x9, #0x1
  449d18:	sub	x10, x10, #0x1
  449d1c:	stp	x11, x10, [sp, #32]
  449d20:	ldrb	w27, [x9]
  449d24:	cmp	w26, #0x3f
  449d28:	b.hi	449d3c <feof@plt+0x46c5c>  // b.pmore
  449d2c:	and	x9, x27, #0x7f
  449d30:	lsl	x9, x9, x26
  449d34:	orr	x25, x9, x25
  449d38:	b	449d74 <feof@plt+0x46c94>
  449d3c:	cbnz	w8, 449d74 <feof@plt+0x46c94>
  449d40:	ldr	w8, [sp, #24]
  449d44:	ldr	x4, [sp, #16]
  449d48:	add	x0, sp, #0x50
  449d4c:	mov	w1, #0xc8                  	// #200
  449d50:	sub	w5, w11, w8
  449d54:	mov	x2, x23
  449d58:	mov	x3, x24
  449d5c:	bl	402df0 <snprintf@plt>
  449d60:	ldp	x8, x0, [sp, #56]
  449d64:	add	x1, sp, #0x50
  449d68:	mov	w2, wzr
  449d6c:	blr	x8
  449d70:	mov	w8, #0x1                   	// #1
  449d74:	sxtb	w9, w27
  449d78:	tbz	w9, #31, 449dec <feof@plt+0x46d0c>
  449d7c:	ldp	x9, x10, [sp, #32]
  449d80:	add	w26, w26, #0x7
  449d84:	cbnz	x10, 449d14 <feof@plt+0x46c34>
  449d88:	ldr	w8, [sp, #72]
  449d8c:	cbnz	w8, 449e38 <feof@plt+0x46d58>
  449d90:	ldr	w8, [sp, #24]
  449d94:	ldr	x4, [sp, #16]
  449d98:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449d9c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  449da0:	sub	w5, w9, w8
  449da4:	add	x2, x2, #0x6df
  449da8:	add	x3, x3, #0x6cf
  449dac:	add	x0, sp, #0x50
  449db0:	mov	w1, #0xc8                  	// #200
  449db4:	bl	402df0 <snprintf@plt>
  449db8:	ldp	x8, x0, [sp, #56]
  449dbc:	add	x1, sp, #0x50
  449dc0:	mov	w2, wzr
  449dc4:	blr	x8
  449dc8:	mov	w8, #0x1                   	// #1
  449dcc:	str	w8, [sp, #72]
  449dd0:	b	449e38 <feof@plt+0x46d58>
  449dd4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  449dd8:	add	x1, x1, #0x8b1
  449ddc:	mov	x0, x20
  449de0:	mov	w2, wzr
  449de4:	blr	x19
  449de8:	b	449e74 <feof@plt+0x46d94>
  449dec:	cbz	x25, 449e38 <feof@plt+0x46d58>
  449df0:	ldr	x8, [x21, #88]
  449df4:	sub	x10, x25, #0x1
  449df8:	cmp	x10, x8
  449dfc:	b.cs	449f5c <feof@plt+0x46e7c>  // b.hs, b.nlast
  449e00:	ldr	x9, [x21, #96]
  449e04:	add	x24, x9, x10, lsl #5
  449e08:	ldr	x10, [x24]
  449e0c:	cmp	x10, x25
  449e10:	b.ne	449f64 <feof@plt+0x46e84>  // b.any
  449e14:	cbz	x24, 449e74 <feof@plt+0x46d94>
  449e18:	ldr	x8, [x24, #16]
  449e1c:	cbz	x8, 449e74 <feof@plt+0x46d94>
  449e20:	mov	x25, xzr
  449e24:	mov	x26, xzr
  449e28:	mov	x23, xzr
  449e2c:	add	x27, sp, #0x50
  449e30:	mov	w28, #0x2007                	// #8199
  449e34:	b	449ebc <feof@plt+0x46ddc>
  449e38:	ldr	w8, [sp, #32]
  449e3c:	ldr	w9, [sp, #24]
  449e40:	ldr	x4, [sp, #16]
  449e44:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10838>
  449e48:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10838>
  449e4c:	sub	w5, w8, w9
  449e50:	add	x2, x2, #0x6df
  449e54:	add	x3, x3, #0x8df
  449e58:	add	x0, sp, #0x50
  449e5c:	mov	w1, #0xc8                  	// #200
  449e60:	bl	402df0 <snprintf@plt>
  449e64:	ldp	x8, x0, [sp, #56]
  449e68:	add	x1, sp, #0x50
  449e6c:	mov	w2, wzr
  449e70:	blr	x8
  449e74:	mov	x23, xzr
  449e78:	mov	x0, x23
  449e7c:	ldp	x20, x19, [sp, #368]
  449e80:	ldp	x22, x21, [sp, #352]
  449e84:	ldp	x24, x23, [sp, #336]
  449e88:	ldp	x26, x25, [sp, #320]
  449e8c:	ldp	x28, x27, [sp, #304]
  449e90:	ldp	x29, x30, [sp, #288]
  449e94:	add	sp, sp, #0x180
  449e98:	ret
  449e9c:	ldr	w8, [sp, #80]
  449ea0:	cmp	w8, #0x4
  449ea4:	b.eq	449fac <feof@plt+0x46ecc>  // b.none
  449ea8:	ldr	x8, [x24, #16]
  449eac:	add	x26, x26, #0x1
  449eb0:	add	x25, x25, #0x8
  449eb4:	cmp	x26, x8
  449eb8:	b.cs	449e78 <feof@plt+0x46d98>  // b.hs, b.nlast
  449ebc:	ldr	x8, [x24, #24]
  449ec0:	ldp	w3, w2, [x21, #40]
  449ec4:	ldr	w4, [x21, #48]
  449ec8:	ldp	x5, x6, [x22, #104]
  449ecc:	add	x8, x8, x25
  449ed0:	ldr	w0, [x8, #4]
  449ed4:	ldr	x7, [x22, #8]
  449ed8:	add	x1, sp, #0x10
  449edc:	str	x27, [sp]
  449ee0:	bl	445640 <feof@plt+0x42560>
  449ee4:	cbz	w0, 449e74 <feof@plt+0x46d94>
  449ee8:	ldr	x8, [x24, #24]
  449eec:	add	x2, x8, x25
  449ef0:	ldr	w8, [x2]
  449ef4:	cmp	w8, #0x6d
  449ef8:	b.gt	449f30 <feof@plt+0x46e50>
  449efc:	cmp	w8, #0x3
  449f00:	b.eq	449f44 <feof@plt+0x46e64>  // b.none
  449f04:	cmp	w8, #0x47
  449f08:	b.ne	449ea8 <feof@plt+0x46dc8>  // b.any
  449f0c:	add	x3, sp, #0x50
  449f10:	mov	x0, x22
  449f14:	mov	x1, x21
  449f18:	mov	x4, x19
  449f1c:	mov	x5, x20
  449f20:	bl	4496b4 <feof@plt+0x465d4>
  449f24:	cmp	x0, #0x0
  449f28:	csel	x23, x23, x0, eq  // eq = none
  449f2c:	b	449ea8 <feof@plt+0x46dc8>
  449f30:	cmp	w8, #0x6e
  449f34:	b.eq	449e9c <feof@plt+0x46dbc>  // b.none
  449f38:	cmp	w8, w28
  449f3c:	b.eq	449e9c <feof@plt+0x46dbc>  // b.none
  449f40:	b	449ea8 <feof@plt+0x46dc8>
  449f44:	cbnz	x23, 449ea8 <feof@plt+0x46dc8>
  449f48:	ldr	w8, [sp, #80]
  449f4c:	ldr	x9, [sp, #88]
  449f50:	cmp	w8, #0x4
  449f54:	csel	x23, x9, xzr, eq  // eq = none
  449f58:	b	449ea8 <feof@plt+0x46dc8>
  449f5c:	cbz	x8, 449fa0 <feof@plt+0x46ec0>
  449f60:	ldr	x9, [x21, #96]
  449f64:	mov	x10, xzr
  449f68:	b	449f78 <feof@plt+0x46e98>
  449f6c:	cmp	x10, x11
  449f70:	mov	x8, x11
  449f74:	b.cs	449fa0 <feof@plt+0x46ec0>  // b.hs, b.nlast
  449f78:	add	x11, x8, x10
  449f7c:	lsr	x11, x11, #1
  449f80:	add	x24, x9, x11, lsl #5
  449f84:	ldr	x12, [x24]
  449f88:	cmp	x12, x25
  449f8c:	b.hi	449f6c <feof@plt+0x46e8c>  // b.pmore
  449f90:	b.cs	449e14 <feof@plt+0x46d34>  // b.hs, b.nlast
  449f94:	add	x10, x11, #0x1
  449f98:	mov	x11, x8
  449f9c:	b	449f6c <feof@plt+0x46e8c>
  449fa0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  449fa4:	add	x1, x1, #0x709
  449fa8:	b	449ddc <feof@plt+0x46cfc>
  449fac:	ldr	x23, [sp, #88]
  449fb0:	b	449e78 <feof@plt+0x46d98>
  449fb4:	sub	sp, sp, #0x90
  449fb8:	stp	x29, x30, [sp, #48]
  449fbc:	stp	x28, x27, [sp, #64]
  449fc0:	stp	x26, x25, [sp, #80]
  449fc4:	stp	x24, x23, [sp, #96]
  449fc8:	stp	x22, x21, [sp, #112]
  449fcc:	stp	x20, x19, [sp, #128]
  449fd0:	add	x29, sp, #0x30
  449fd4:	cmp	x1, #0x2
  449fd8:	b.cs	449ffc <feof@plt+0x46f1c>  // b.hs, b.nlast
  449fdc:	ldp	x20, x19, [sp, #128]
  449fe0:	ldp	x22, x21, [sp, #112]
  449fe4:	ldp	x24, x23, [sp, #96]
  449fe8:	ldp	x26, x25, [sp, #80]
  449fec:	ldp	x28, x27, [sp, #64]
  449ff0:	ldp	x29, x30, [sp, #48]
  449ff4:	add	sp, sp, #0x90
  449ff8:	ret
  449ffc:	lsl	x8, x2, #1
  44a000:	mov	x19, x3
  44a004:	mov	x20, x2
  44a008:	mov	x22, x1
  44a00c:	mov	x21, x0
  44a010:	stur	x8, [x29, #-8]
  44a014:	and	x26, x2, #0xffffffffffffffe0
  44a018:	add	x8, x2, #0x10
  44a01c:	str	x8, [sp]
  44a020:	add	x8, x21, x20
  44a024:	str	x8, [sp, #16]
  44a028:	add	x8, x21, x26
  44a02c:	str	x8, [sp, #8]
  44a030:	ldr	x8, [sp]
  44a034:	add	x8, x21, x8
  44a038:	str	x8, [sp, #24]
  44a03c:	add	x8, x21, #0x10
  44a040:	stur	x8, [x29, #-16]
  44a044:	cbz	x20, 44a0ac <feof@plt+0x46fcc>
  44a048:	lsr	x10, x22, #1
  44a04c:	mul	x9, x10, x20
  44a050:	cmp	x20, #0x20
  44a054:	add	x8, x21, x9
  44a058:	b.cc	44a078 <feof@plt+0x46f98>  // b.lo, b.ul, b.last
  44a05c:	add	x10, x10, #0x1
  44a060:	madd	x10, x10, x20, x21
  44a064:	cmp	x21, x10
  44a068:	b.cs	44a234 <feof@plt+0x47154>  // b.hs, b.nlast
  44a06c:	ldr	x10, [sp, #16]
  44a070:	cmp	x8, x10
  44a074:	b.cs	44a234 <feof@plt+0x47154>  // b.hs, b.nlast
  44a078:	mov	x10, xzr
  44a07c:	mov	x9, x21
  44a080:	sub	x10, x20, x10
  44a084:	ldrb	w11, [x8]
  44a088:	ldrb	w12, [x9]
  44a08c:	subs	x10, x10, #0x1
  44a090:	strb	w11, [x9], #1
  44a094:	strb	w12, [x8], #1
  44a098:	b.ne	44a084 <feof@plt+0x46fa4>  // b.any
  44a09c:	cmp	x22, #0x2
  44a0a0:	b.cs	44a0ac <feof@plt+0x46fcc>  // b.hs, b.nlast
  44a0a4:	mov	x23, xzr
  44a0a8:	b	44a204 <feof@plt+0x47124>
  44a0ac:	ldr	x28, [sp, #24]
  44a0b0:	mov	x27, xzr
  44a0b4:	mov	x23, xzr
  44a0b8:	mov	w25, #0x1                   	// #1
  44a0bc:	b	44a0d8 <feof@plt+0x46ff8>
  44a0c0:	mov	x23, x8
  44a0c4:	add	x25, x25, #0x1
  44a0c8:	add	x27, x27, #0x1
  44a0cc:	cmp	x25, x22
  44a0d0:	add	x28, x28, x20
  44a0d4:	b.eq	44a1ac <feof@plt+0x470cc>  // b.none
  44a0d8:	madd	x24, x25, x20, x21
  44a0dc:	mov	x0, x21
  44a0e0:	mov	x1, x24
  44a0e4:	blr	x19
  44a0e8:	cmp	w0, #0x1
  44a0ec:	b.lt	44a0c4 <feof@plt+0x46fe4>  // b.tstop
  44a0f0:	add	x8, x23, #0x1
  44a0f4:	cmp	x25, x8
  44a0f8:	b.eq	44a0c0 <feof@plt+0x46fe0>  // b.none
  44a0fc:	cbz	x20, 44a0c0 <feof@plt+0x46fe0>
  44a100:	mul	x10, x8, x20
  44a104:	cmp	x20, #0x20
  44a108:	add	x9, x21, x10
  44a10c:	b.cc	44a140 <feof@plt+0x47060>  // b.lo, b.ul, b.last
  44a110:	ldur	x12, [x29, #-8]
  44a114:	mul	x11, x27, x20
  44a118:	add	x12, x12, x11
  44a11c:	add	x12, x21, x12
  44a120:	cmp	x9, x12
  44a124:	b.cs	44a164 <feof@plt+0x47084>  // b.hs, b.nlast
  44a128:	add	x11, x11, x20
  44a12c:	add	x12, x23, #0x2
  44a130:	add	x11, x21, x11
  44a134:	madd	x12, x12, x20, x21
  44a138:	cmp	x11, x12
  44a13c:	b.cs	44a164 <feof@plt+0x47084>  // b.hs, b.nlast
  44a140:	mov	x10, xzr
  44a144:	sub	x10, x20, x10
  44a148:	ldrb	w11, [x24]
  44a14c:	ldrb	w12, [x9]
  44a150:	subs	x10, x10, #0x1
  44a154:	strb	w11, [x9], #1
  44a158:	strb	w12, [x24], #1
  44a15c:	b.ne	44a148 <feof@plt+0x47068>  // b.any
  44a160:	b	44a0c0 <feof@plt+0x46fe0>
  44a164:	ldur	x11, [x29, #-16]
  44a168:	add	x9, x9, x26
  44a16c:	add	x24, x24, x26
  44a170:	mov	x12, x26
  44a174:	add	x10, x11, x10
  44a178:	mov	x11, x28
  44a17c:	ldp	q0, q3, [x10, #-16]
  44a180:	ldp	q1, q2, [x11, #-16]
  44a184:	subs	x12, x12, #0x20
  44a188:	stp	q1, q2, [x10, #-16]
  44a18c:	stp	q0, q3, [x11, #-16]
  44a190:	add	x11, x11, #0x20
  44a194:	add	x10, x10, #0x20
  44a198:	b.ne	44a17c <feof@plt+0x4709c>  // b.any
  44a19c:	cmp	x26, x20
  44a1a0:	mov	x10, x26
  44a1a4:	b.eq	44a0c0 <feof@plt+0x46fe0>  // b.none
  44a1a8:	b	44a144 <feof@plt+0x47064>
  44a1ac:	cbz	x23, 44a204 <feof@plt+0x47124>
  44a1b0:	cbz	x20, 44a204 <feof@plt+0x47124>
  44a1b4:	mul	x9, x23, x20
  44a1b8:	cmp	x20, #0x20
  44a1bc:	add	x8, x21, x9
  44a1c0:	b.cc	44a1e0 <feof@plt+0x47100>  // b.lo, b.ul, b.last
  44a1c4:	add	x10, x23, #0x1
  44a1c8:	madd	x10, x10, x20, x21
  44a1cc:	cmp	x21, x10
  44a1d0:	b.cs	44a270 <feof@plt+0x47190>  // b.hs, b.nlast
  44a1d4:	ldr	x10, [sp, #16]
  44a1d8:	cmp	x8, x10
  44a1dc:	b.cs	44a270 <feof@plt+0x47190>  // b.hs, b.nlast
  44a1e0:	mov	x10, xzr
  44a1e4:	mov	x9, x21
  44a1e8:	sub	x10, x20, x10
  44a1ec:	ldrb	w11, [x8]
  44a1f0:	ldrb	w12, [x9]
  44a1f4:	subs	x10, x10, #0x1
  44a1f8:	strb	w11, [x9], #1
  44a1fc:	strb	w12, [x8], #1
  44a200:	b.ne	44a1ec <feof@plt+0x4710c>  // b.any
  44a204:	cmp	x22, x23, lsl #1
  44a208:	b.hi	44a2ac <feof@plt+0x471cc>  // b.pmore
  44a20c:	add	x8, x23, #0x1
  44a210:	madd	x0, x8, x20, x21
  44a214:	sub	x1, x22, x8
  44a218:	mov	x2, x20
  44a21c:	mov	x3, x19
  44a220:	bl	449fb4 <feof@plt+0x46ed4>
  44a224:	cmp	x23, #0x2
  44a228:	mov	x22, x23
  44a22c:	b.cs	44a044 <feof@plt+0x46f64>  // b.hs, b.nlast
  44a230:	b	449fdc <feof@plt+0x46efc>
  44a234:	add	x8, x8, x26
  44a238:	mov	x10, x26
  44a23c:	mov	x11, x21
  44a240:	add	x12, x11, x9
  44a244:	ldp	q0, q1, [x12]
  44a248:	ldp	q2, q3, [x11]
  44a24c:	subs	x10, x10, #0x20
  44a250:	stp	q0, q1, [x11], #32
  44a254:	stp	q2, q3, [x12]
  44a258:	b.ne	44a240 <feof@plt+0x47160>  // b.any
  44a25c:	ldr	x9, [sp, #8]
  44a260:	cmp	x26, x20
  44a264:	mov	x10, x26
  44a268:	b.ne	44a080 <feof@plt+0x46fa0>  // b.any
  44a26c:	b	44a09c <feof@plt+0x46fbc>
  44a270:	add	x8, x8, x26
  44a274:	mov	x10, x26
  44a278:	mov	x11, x21
  44a27c:	add	x12, x11, x9
  44a280:	ldp	q0, q1, [x12]
  44a284:	ldp	q2, q3, [x11]
  44a288:	subs	x10, x10, #0x20
  44a28c:	stp	q0, q1, [x11], #32
  44a290:	stp	q2, q3, [x12]
  44a294:	b.ne	44a27c <feof@plt+0x4719c>  // b.any
  44a298:	ldr	x9, [sp, #8]
  44a29c:	cmp	x26, x20
  44a2a0:	mov	x10, x26
  44a2a4:	b.ne	44a1e8 <feof@plt+0x47108>  // b.any
  44a2a8:	b	44a204 <feof@plt+0x47124>
  44a2ac:	mov	x0, x21
  44a2b0:	mov	x1, x23
  44a2b4:	mov	x2, x20
  44a2b8:	mov	x3, x19
  44a2bc:	bl	449fb4 <feof@plt+0x46ed4>
  44a2c0:	add	x8, x23, #0x1
  44a2c4:	sub	x22, x22, x8
  44a2c8:	cmp	x22, #0x2
  44a2cc:	madd	x21, x8, x20, x21
  44a2d0:	b.cs	44a020 <feof@plt+0x46f40>  // b.hs, b.nlast
  44a2d4:	b	449fdc <feof@plt+0x46efc>
  44a2d8:	cmp	w0, #0x4, lsl #12
  44a2dc:	mov	w1, wzr
  44a2e0:	b.lt	44a300 <feof@plt+0x47220>  // b.tstop
  44a2e4:	cmp	w0, #0x10, lsl #12
  44a2e8:	b.ge	44a320 <feof@plt+0x47240>  // b.tcont
  44a2ec:	cmp	w0, #0x4, lsl #12
  44a2f0:	b.eq	44a330 <feof@plt+0x47250>  // b.none
  44a2f4:	cmp	w0, #0x8, lsl #12
  44a2f8:	b.eq	44a330 <feof@plt+0x47250>  // b.none
  44a2fc:	b	44a318 <feof@plt+0x47238>
  44a300:	cmn	w0, #0x1
  44a304:	b.eq	44a330 <feof@plt+0x47250>  // b.none
  44a308:	cmp	w0, #0x4
  44a30c:	b.eq	44a330 <feof@plt+0x47250>  // b.none
  44a310:	cmp	w0, #0x100
  44a314:	b.eq	44a330 <feof@plt+0x47250>  // b.none
  44a318:	mov	w0, w1
  44a31c:	ret
  44a320:	cmp	w0, #0x20, lsl #12
  44a324:	b.eq	44a330 <feof@plt+0x47250>  // b.none
  44a328:	cmp	w0, #0x10, lsl #12
  44a32c:	b.ne	44a318 <feof@plt+0x47238>  // b.any
  44a330:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  44a334:	mov	w1, w0
  44a338:	str	w0, [x8, #1384]
  44a33c:	mov	w0, w1
  44a340:	ret
  44a344:	stp	x29, x30, [sp, #-32]!
  44a348:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a34c:	add	x1, x1, #0xbb8
  44a350:	str	x19, [sp, #16]
  44a354:	mov	x29, sp
  44a358:	mov	x19, x0
  44a35c:	bl	402ed0 <strcmp@plt>
  44a360:	cbz	w0, 44a3e8 <feof@plt+0x47308>
  44a364:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a368:	add	x1, x1, #0xbd1
  44a36c:	mov	x0, x19
  44a370:	bl	402ed0 <strcmp@plt>
  44a374:	cbz	w0, 44a3f0 <feof@plt+0x47310>
  44a378:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a37c:	add	x1, x1, #0xbfe
  44a380:	mov	x0, x19
  44a384:	bl	402ed0 <strcmp@plt>
  44a388:	cbz	w0, 44a3f8 <feof@plt+0x47318>
  44a38c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a390:	add	x1, x1, #0xc35
  44a394:	mov	x0, x19
  44a398:	bl	402ed0 <strcmp@plt>
  44a39c:	cbz	w0, 44a400 <feof@plt+0x47320>
  44a3a0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a3a4:	add	x1, x1, #0xc50
  44a3a8:	mov	x0, x19
  44a3ac:	bl	402ed0 <strcmp@plt>
  44a3b0:	cbz	w0, 44a408 <feof@plt+0x47328>
  44a3b4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a3b8:	add	x1, x1, #0xc6b
  44a3bc:	mov	x0, x19
  44a3c0:	bl	402ed0 <strcmp@plt>
  44a3c4:	cbz	w0, 44a410 <feof@plt+0x47330>
  44a3c8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a3cc:	add	x1, x1, #0xc88
  44a3d0:	mov	x0, x19
  44a3d4:	bl	402ed0 <strcmp@plt>
  44a3d8:	cmp	w0, #0x0
  44a3dc:	cset	w8, eq  // eq = none
  44a3e0:	lsl	w0, w8, #17
  44a3e4:	b	44a414 <feof@plt+0x47334>
  44a3e8:	mov	w0, #0xffffffff            	// #-1
  44a3ec:	b	44a414 <feof@plt+0x47334>
  44a3f0:	mov	w0, #0x100                 	// #256
  44a3f4:	b	44a414 <feof@plt+0x47334>
  44a3f8:	mov	w0, #0x4000                	// #16384
  44a3fc:	b	44a414 <feof@plt+0x47334>
  44a400:	mov	w0, #0x4                   	// #4
  44a404:	b	44a414 <feof@plt+0x47334>
  44a408:	mov	w0, #0x8000                	// #32768
  44a40c:	b	44a414 <feof@plt+0x47334>
  44a410:	mov	w0, #0x10000               	// #65536
  44a414:	ldr	x19, [sp, #16]
  44a418:	ldp	x29, x30, [sp], #32
  44a41c:	ret
  44a420:	stp	x29, x30, [sp, #-48]!
  44a424:	stp	x20, x19, [sp, #32]
  44a428:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  44a42c:	ldr	w8, [x8, #1384]
  44a430:	mov	x19, x0
  44a434:	str	x21, [sp, #16]
  44a438:	mov	x29, sp
  44a43c:	cmn	w8, #0x1
  44a440:	b.eq	44a4a0 <feof@plt+0x473c0>  // b.none
  44a444:	mov	w9, #0xc104                	// #49412
  44a448:	movk	w9, #0x3, lsl #16
  44a44c:	and	w8, w8, w9
  44a450:	tst	w1, w9
  44a454:	csel	w8, w8, wzr, eq  // eq = none
  44a458:	orr	w20, w8, w1
  44a45c:	mov	w8, #0x4100                	// #16640
  44a460:	movk	w8, #0x2, lsl #16
  44a464:	tst	w20, w8
  44a468:	b.ne	44a4b4 <feof@plt+0x473d4>  // b.any
  44a46c:	tbz	w20, #2, 44a480 <feof@plt+0x473a0>
  44a470:	mov	x0, x19
  44a474:	bl	44df34 <feof@plt+0x4ae54>
  44a478:	mov	x21, x0
  44a47c:	cbnz	x0, 44a510 <feof@plt+0x47430>
  44a480:	tbnz	w20, #15, 44a4e4 <feof@plt+0x47404>
  44a484:	tbz	w20, #16, 44a50c <feof@plt+0x4742c>
  44a488:	mov	x0, x19
  44a48c:	mov	w1, w20
  44a490:	bl	45a6c8 <feof@plt+0x575e8>
  44a494:	mov	x21, x0
  44a498:	cbnz	x0, 44a510 <feof@plt+0x47430>
  44a49c:	b	44a50c <feof@plt+0x4742c>
  44a4a0:	mov	x0, x19
  44a4a4:	ldp	x20, x19, [sp, #32]
  44a4a8:	ldr	x21, [sp, #16]
  44a4ac:	ldp	x29, x30, [sp], #48
  44a4b0:	b	4622e8 <_obstack_memory_used@@Base+0xb20>
  44a4b4:	mov	x0, x19
  44a4b8:	mov	w1, w20
  44a4bc:	bl	44dc50 <feof@plt+0x4ab70>
  44a4c0:	mov	x21, x0
  44a4c4:	tbnz	w20, #14, 44a510 <feof@plt+0x47430>
  44a4c8:	cbz	x21, 44a4f8 <feof@plt+0x47418>
  44a4cc:	mov	x0, x21
  44a4d0:	bl	46181c <_obstack_memory_used@@Base+0x54>
  44a4d4:	cbz	w0, 44a500 <feof@plt+0x47420>
  44a4d8:	mov	x0, x21
  44a4dc:	bl	461c48 <_obstack_memory_used@@Base+0x480>
  44a4e0:	b	44a510 <feof@plt+0x47430>
  44a4e4:	mov	x0, x19
  44a4e8:	ldp	x20, x19, [sp, #32]
  44a4ec:	ldr	x21, [sp, #16]
  44a4f0:	ldp	x29, x30, [sp], #48
  44a4f4:	b	44a524 <feof@plt+0x47444>
  44a4f8:	tbz	w20, #17, 44a46c <feof@plt+0x4738c>
  44a4fc:	b	44a50c <feof@plt+0x4742c>
  44a500:	tbz	w20, #17, 44a510 <feof@plt+0x47430>
  44a504:	mov	x0, x21
  44a508:	bl	402b20 <free@plt>
  44a50c:	mov	x21, xzr
  44a510:	mov	x0, x21
  44a514:	ldp	x20, x19, [sp, #32]
  44a518:	ldr	x21, [sp, #16]
  44a51c:	ldp	x29, x30, [sp], #48
  44a520:	ret
  44a524:	sub	sp, sp, #0x70
  44a528:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a52c:	add	x1, x1, #0xca3
  44a530:	mov	w2, #0x5                   	// #5
  44a534:	stp	x29, x30, [sp, #16]
  44a538:	stp	x28, x27, [sp, #32]
  44a53c:	stp	x26, x25, [sp, #48]
  44a540:	stp	x24, x23, [sp, #64]
  44a544:	stp	x22, x21, [sp, #80]
  44a548:	stp	x20, x19, [sp, #96]
  44a54c:	add	x29, sp, #0x10
  44a550:	mov	x20, x0
  44a554:	mov	w21, #0x5                   	// #5
  44a558:	bl	402d40 <strncmp@plt>
  44a55c:	cmp	w0, #0x0
  44a560:	csel	x24, x21, xzr, eq  // eq = none
  44a564:	ldrb	w8, [x20, x24]
  44a568:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12838>
  44a56c:	add	x27, x27, #0xe98
  44a570:	add	x9, x20, #0x5
  44a574:	ldrh	w8, [x27, x8, lsl #1]
  44a578:	mov	x19, xzr
  44a57c:	csel	x21, x9, x20, eq  // eq = none
  44a580:	tbz	w8, #3, 44a888 <feof@plt+0x477a8>
  44a584:	mov	x0, x21
  44a588:	bl	402a50 <strlen@plt>
  44a58c:	add	w8, w0, #0x8
  44a590:	sxtw	x0, w8
  44a594:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  44a598:	adrp	x28, 472000 <_obstack_memory_used@@Base+0x10838>
  44a59c:	adrp	x26, 472000 <_obstack_memory_used@@Base+0x10838>
  44a5a0:	mov	x19, x0
  44a5a4:	add	x28, x28, #0xa18
  44a5a8:	add	x26, x26, #0x930
  44a5ac:	mov	x23, x21
  44a5b0:	mov	x22, x0
  44a5b4:	str	x20, [sp, #8]
  44a5b8:	b	44a5c4 <feof@plt+0x474e4>
  44a5bc:	mov	w8, #0x2e                  	// #46
  44a5c0:	strb	w8, [x22], #1
  44a5c4:	ldrb	w8, [x23]
  44a5c8:	ldrh	w9, [x27, x8, lsl #1]
  44a5cc:	tbnz	w9, #3, 44a628 <feof@plt+0x47548>
  44a5d0:	cmp	w8, #0x4f
  44a5d4:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44a5d8:	mov	x20, x19
  44a5dc:	mov	x19, x21
  44a5e0:	mov	x21, x24
  44a5e4:	adrp	x24, 472000 <_obstack_memory_used@@Base+0x10838>
  44a5e8:	mov	x26, xzr
  44a5ec:	add	x24, x24, #0xca9
  44a5f0:	mov	x0, x24
  44a5f4:	bl	402a50 <strlen@plt>
  44a5f8:	mov	x25, x0
  44a5fc:	mov	x0, x23
  44a600:	mov	x1, x24
  44a604:	mov	x2, x25
  44a608:	bl	402d40 <strncmp@plt>
  44a60c:	cbz	w0, 44a668 <feof@plt+0x47588>
  44a610:	add	x8, x28, x26
  44a614:	ldr	x24, [x8, #16]
  44a618:	add	x26, x26, #0x10
  44a61c:	cmp	x26, #0x130
  44a620:	b.ne	44a5f0 <feof@plt+0x47510>  // b.any
  44a624:	b	44a878 <feof@plt+0x47798>
  44a628:	add	x25, x23, #0x1
  44a62c:	b	44a634 <feof@plt+0x47554>
  44a630:	add	x25, x25, #0x1
  44a634:	add	x22, x22, #0x1
  44a638:	sturb	w8, [x22, #-1]
  44a63c:	ldrb	w8, [x25]
  44a640:	ldrh	w9, [x27, x8, lsl #1]
  44a644:	tst	w9, #0xc
  44a648:	b.ne	44a630 <feof@plt+0x47550>  // b.any
  44a64c:	cmp	w8, #0x5f
  44a650:	b.ne	44a6bc <feof@plt+0x475dc>  // b.any
  44a654:	ldrb	w9, [x25, #1]
  44a658:	ldrh	w9, [x27, x9, lsl #1]
  44a65c:	tst	w9, #0xc
  44a660:	b.ne	44a630 <feof@plt+0x47550>  // b.any
  44a664:	b	44a7c8 <feof@plt+0x476e8>
  44a668:	add	x8, x28, x26
  44a66c:	ldr	x24, [x8, #8]
  44a670:	add	x25, x23, x25
  44a674:	mov	x0, x24
  44a678:	bl	402a50 <strlen@plt>
  44a67c:	mov	w26, #0x22                  	// #34
  44a680:	mov	x23, x0
  44a684:	strb	w26, [x22], #1
  44a688:	mov	x0, x22
  44a68c:	mov	x1, x24
  44a690:	mov	x2, x23
  44a694:	bl	4029c0 <memcpy@plt>
  44a698:	add	x22, x22, x23
  44a69c:	strb	w26, [x22], #1
  44a6a0:	ldrb	w8, [x25]
  44a6a4:	mov	x24, x21
  44a6a8:	mov	x21, x19
  44a6ac:	mov	x19, x20
  44a6b0:	ldr	x20, [sp, #8]
  44a6b4:	adrp	x26, 472000 <_obstack_memory_used@@Base+0x10838>
  44a6b8:	add	x26, x26, #0x930
  44a6bc:	sub	w9, w8, #0x45
  44a6c0:	cmp	w9, #0x13
  44a6c4:	b.hi	44a6f8 <feof@plt+0x47618>  // b.pmore
  44a6c8:	adr	x10, 44a6d8 <feof@plt+0x475f8>
  44a6cc:	ldrb	w11, [x26, x9]
  44a6d0:	add	x10, x10, x11, lsl #2
  44a6d4:	br	x10
  44a6d8:	ldrb	w9, [x25, #1]
  44a6dc:	cbnz	w9, 44a6f8 <feof@plt+0x47618>
  44a6e0:	b	44a9d0 <feof@plt+0x478f0>
  44a6e4:	ldrb	w8, [x25, #1]!
  44a6e8:	cmp	w8, #0x6e
  44a6ec:	b.eq	44a6e4 <feof@plt+0x47604>  // b.none
  44a6f0:	cmp	w8, #0x62
  44a6f4:	b.eq	44a6e4 <feof@plt+0x47604>  // b.none
  44a6f8:	cmp	w8, #0x53
  44a6fc:	b.eq	44a714 <feof@plt+0x47634>  // b.none
  44a700:	cmp	w8, #0x44
  44a704:	b.ne	44a7c0 <feof@plt+0x476e0>  // b.any
  44a708:	b	44a960 <feof@plt+0x47880>
  44a70c:	ldrb	w8, [x25, #1]
  44a710:	cbz	w8, 44a888 <feof@plt+0x477a8>
  44a714:	ldrb	w8, [x25, #1]
  44a718:	cbz	w8, 44a888 <feof@plt+0x477a8>
  44a71c:	ldrb	w9, [x25, #2]!
  44a720:	cmp	w9, #0x5f
  44a724:	b.eq	44a72c <feof@plt+0x4764c>  // b.none
  44a728:	cbnz	w9, 44a888 <feof@plt+0x477a8>
  44a72c:	sub	w8, w8, #0x49
  44a730:	cmp	w8, #0xe
  44a734:	b.hi	44a888 <feof@plt+0x477a8>  // b.pmore
  44a738:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44a73c:	add	x11, x11, #0x944
  44a740:	adr	x9, 44a758 <feof@plt+0x47678>
  44a744:	ldrb	w10, [x11, x8]
  44a748:	add	x9, x9, x10, lsl #2
  44a74c:	adrp	x23, 472000 <_obstack_memory_used@@Base+0x10838>
  44a750:	add	x23, x23, #0xd16
  44a754:	br	x9
  44a758:	adrp	x23, 472000 <_obstack_memory_used@@Base+0x10838>
  44a75c:	add	x23, x23, #0xd23
  44a760:	b	44a7a4 <feof@plt+0x476c4>
  44a764:	ldrb	w8, [x25, #1]
  44a768:	cmp	w8, #0x4b
  44a76c:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44a770:	ldrb	w8, [x25, #2]
  44a774:	cmp	w8, #0x5f
  44a778:	b.ne	44aa08 <feof@plt+0x47928>  // b.any
  44a77c:	ldrb	w8, [x25, #3]
  44a780:	cmp	w8, #0x5f
  44a784:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44a788:	add	x23, x25, #0x4
  44a78c:	b	44a5bc <feof@plt+0x474dc>
  44a790:	adrp	x23, 472000 <_obstack_memory_used@@Base+0x10838>
  44a794:	add	x23, x23, #0xd2a
  44a798:	b	44a7a4 <feof@plt+0x476c4>
  44a79c:	adrp	x23, 472000 <_obstack_memory_used@@Base+0x10838>
  44a7a0:	add	x23, x23, #0xd1c
  44a7a4:	mov	x0, x22
  44a7a8:	mov	x1, x23
  44a7ac:	bl	402c00 <strcpy@plt>
  44a7b0:	mov	x0, x23
  44a7b4:	bl	402a50 <strlen@plt>
  44a7b8:	ldrb	w8, [x25]
  44a7bc:	add	x22, x22, x0
  44a7c0:	cmp	w8, #0x5f
  44a7c4:	b.ne	44a9a8 <feof@plt+0x478c8>  // b.any
  44a7c8:	ldrb	w8, [x25, #1]
  44a7cc:	cmp	w8, #0x5f
  44a7d0:	b.ne	44a8fc <feof@plt+0x4781c>  // b.any
  44a7d4:	mov	x23, x25
  44a7d8:	ldrb	w8, [x23, #2]!
  44a7dc:	ldrh	w9, [x27, x8, lsl #1]
  44a7e0:	tbnz	w9, #2, 44a930 <feof@plt+0x47850>
  44a7e4:	cmp	w8, #0x5f
  44a7e8:	b.ne	44a5bc <feof@plt+0x474dc>  // b.any
  44a7ec:	ldrb	w8, [x25, #3]
  44a7f0:	cmp	w8, #0x5f
  44a7f4:	b.eq	44a5bc <feof@plt+0x474dc>  // b.none
  44a7f8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a7fc:	add	x1, x1, #0xd44
  44a800:	mov	w2, #0x6                   	// #6
  44a804:	mov	x0, x23
  44a808:	bl	402d40 <strncmp@plt>
  44a80c:	cbz	w0, 44a9d8 <feof@plt+0x478f8>
  44a810:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a814:	add	x1, x1, #0xd56
  44a818:	mov	w2, #0x6                   	// #6
  44a81c:	mov	x0, x23
  44a820:	bl	402d40 <strncmp@plt>
  44a824:	cbz	w0, 44aa1c <feof@plt+0x4793c>
  44a828:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a82c:	add	x1, x1, #0xd68
  44a830:	mov	w2, #0x5                   	// #5
  44a834:	mov	x0, x23
  44a838:	bl	402d40 <strncmp@plt>
  44a83c:	cbz	w0, 44aa24 <feof@plt+0x47944>
  44a840:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a844:	add	x1, x1, #0xd74
  44a848:	mov	w2, #0xa                   	// #10
  44a84c:	mov	x0, x23
  44a850:	bl	402d40 <strncmp@plt>
  44a854:	cbz	w0, 44aa2c <feof@plt+0x4794c>
  44a858:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a85c:	add	x1, x1, #0xd8a
  44a860:	mov	w2, #0x7                   	// #7
  44a864:	mov	x0, x23
  44a868:	bl	402d40 <strncmp@plt>
  44a86c:	cbnz	w0, 44a888 <feof@plt+0x477a8>
  44a870:	mov	w8, #0x4                   	// #4
  44a874:	b	44aa30 <feof@plt+0x47950>
  44a878:	mov	x24, x21
  44a87c:	mov	x21, x19
  44a880:	mov	x19, x20
  44a884:	ldr	x20, [sp, #8]
  44a888:	mov	x0, x19
  44a88c:	bl	402b20 <free@plt>
  44a890:	mov	x0, x21
  44a894:	bl	402a50 <strlen@plt>
  44a898:	add	w8, w0, #0x3
  44a89c:	sxtw	x0, w8
  44a8a0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  44a8a4:	ldrb	w8, [x20, x24]
  44a8a8:	mov	x19, x0
  44a8ac:	cmp	w8, #0x3c
  44a8b0:	b.ne	44a8c4 <feof@plt+0x477e4>  // b.any
  44a8b4:	mov	x0, x19
  44a8b8:	mov	x1, x21
  44a8bc:	bl	402c00 <strcpy@plt>
  44a8c0:	b	44a8d8 <feof@plt+0x477f8>
  44a8c4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  44a8c8:	add	x1, x1, #0xd98
  44a8cc:	mov	x0, x19
  44a8d0:	mov	x2, x21
  44a8d4:	bl	402c30 <sprintf@plt>
  44a8d8:	mov	x0, x19
  44a8dc:	ldp	x20, x19, [sp, #96]
  44a8e0:	ldp	x22, x21, [sp, #80]
  44a8e4:	ldp	x24, x23, [sp, #64]
  44a8e8:	ldp	x26, x25, [sp, #48]
  44a8ec:	ldp	x28, x27, [sp, #32]
  44a8f0:	ldp	x29, x30, [sp, #16]
  44a8f4:	add	sp, sp, #0x70
  44a8f8:	ret
  44a8fc:	cmp	w8, #0x42
  44a900:	b.eq	44a90c <feof@plt+0x4782c>  // b.none
  44a904:	cmp	w8, #0x45
  44a908:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44a90c:	add	x8, x25, #0x2
  44a910:	ldrb	w9, [x8], #1
  44a914:	ldrh	w10, [x27, x9, lsl #1]
  44a918:	tbnz	w10, #2, 44a910 <feof@plt+0x47830>
  44a91c:	cmp	w9, #0x73
  44a920:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44a924:	ldrb	w8, [x8]
  44a928:	cbnz	w8, 44a888 <feof@plt+0x477a8>
  44a92c:	b	44a9d0 <feof@plt+0x478f0>
  44a930:	add	x25, x25, #0x4
  44a934:	b	44a93c <feof@plt+0x4785c>
  44a938:	add	x25, x25, #0x1
  44a93c:	ldurb	w8, [x25, #-1]
  44a940:	ldrh	w9, [x27, x8, lsl #1]
  44a944:	tbnz	w9, #2, 44a938 <feof@plt+0x47858>
  44a948:	cmp	w8, #0x5f
  44a94c:	b.ne	44a980 <feof@plt+0x478a0>  // b.any
  44a950:	ldrb	w8, [x25]
  44a954:	ldrh	w8, [x27, x8, lsl #1]
  44a958:	tbnz	w8, #2, 44a938 <feof@plt+0x47858>
  44a95c:	b	44a888 <feof@plt+0x477a8>
  44a960:	ldrb	w8, [x25, #1]
  44a964:	cmp	w8, #0x46
  44a968:	b.eq	44a9e0 <feof@plt+0x47900>  // b.none
  44a96c:	cmp	w8, #0x41
  44a970:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44a974:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  44a978:	add	x20, x20, #0xd3c
  44a97c:	b	44a9e8 <feof@plt+0x47908>
  44a980:	cmp	w8, #0x58
  44a984:	b.eq	44a994 <feof@plt+0x478b4>  // b.none
  44a988:	sub	x25, x25, #0x1
  44a98c:	b	44a9a8 <feof@plt+0x478c8>
  44a990:	add	x25, x25, #0x1
  44a994:	ldrb	w8, [x25]
  44a998:	cmp	w8, #0x6e
  44a99c:	b.eq	44a990 <feof@plt+0x478b0>  // b.none
  44a9a0:	cmp	w8, #0x62
  44a9a4:	b.eq	44a990 <feof@plt+0x478b0>  // b.none
  44a9a8:	cmp	w8, #0x2e
  44a9ac:	b.ne	44a9cc <feof@plt+0x478ec>  // b.any
  44a9b0:	ldrb	w8, [x25, #1]
  44a9b4:	ldrh	w8, [x27, x8, lsl #1]
  44a9b8:	tbz	w8, #2, 44a888 <feof@plt+0x477a8>
  44a9bc:	add	x9, x25, #0x2
  44a9c0:	ldrb	w8, [x9], #1
  44a9c4:	ldrh	w10, [x27, x8, lsl #1]
  44a9c8:	tbnz	w10, #2, 44a9c0 <feof@plt+0x478e0>
  44a9cc:	cbnz	w8, 44a888 <feof@plt+0x477a8>
  44a9d0:	strb	wzr, [x22]
  44a9d4:	b	44a8d8 <feof@plt+0x477f8>
  44a9d8:	mov	x8, xzr
  44a9dc:	b	44aa30 <feof@plt+0x47950>
  44a9e0:	adrp	x20, 472000 <_obstack_memory_used@@Base+0x10838>
  44a9e4:	add	x20, x20, #0xd32
  44a9e8:	mov	x0, x22
  44a9ec:	mov	x1, x20
  44a9f0:	bl	402c00 <strcpy@plt>
  44a9f4:	mov	x0, x20
  44a9f8:	bl	402a50 <strlen@plt>
  44a9fc:	add	x22, x22, x0
  44aa00:	strb	wzr, [x22]
  44aa04:	b	44a8d8 <feof@plt+0x477f8>
  44aa08:	cmp	w8, #0x42
  44aa0c:	b.ne	44a888 <feof@plt+0x477a8>  // b.any
  44aa10:	ldrb	w8, [x25, #3]
  44aa14:	cbnz	w8, 44a888 <feof@plt+0x477a8>
  44aa18:	b	44a9d0 <feof@plt+0x478f0>
  44aa1c:	mov	w8, #0x1                   	// #1
  44aa20:	b	44aa30 <feof@plt+0x47950>
  44aa24:	mov	w8, #0x2                   	// #2
  44aa28:	b	44aa30 <feof@plt+0x47950>
  44aa2c:	mov	w8, #0x3                   	// #3
  44aa30:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  44aa34:	add	x9, x9, #0xb58
  44aa38:	add	x8, x9, x8, lsl #4
  44aa3c:	ldr	x20, [x8, #8]
  44aa40:	mov	x0, x20
  44aa44:	bl	402a50 <strlen@plt>
  44aa48:	mov	x21, x0
  44aa4c:	mov	x0, x22
  44aa50:	mov	x1, x20
  44aa54:	mov	x2, x21
  44aa58:	bl	4029c0 <memcpy@plt>
  44aa5c:	add	x22, x22, x21
  44aa60:	strb	wzr, [x22]
  44aa64:	b	44a8d8 <feof@plt+0x477f8>
  44aa68:	stp	x29, x30, [sp, #-32]!
  44aa6c:	str	x19, [sp, #16]
  44aa70:	mov	x29, sp
  44aa74:	bl	44dc50 <feof@plt+0x4ab70>
  44aa78:	mov	x19, x0
  44aa7c:	cbz	x0, 44aaa4 <feof@plt+0x479c4>
  44aa80:	mov	x0, x19
  44aa84:	bl	46181c <_obstack_memory_used@@Base+0x54>
  44aa88:	cbz	w0, 44aa98 <feof@plt+0x479b8>
  44aa8c:	mov	x0, x19
  44aa90:	bl	461c48 <_obstack_memory_used@@Base+0x480>
  44aa94:	b	44aaa4 <feof@plt+0x479c4>
  44aa98:	mov	x0, x19
  44aa9c:	bl	402b20 <free@plt>
  44aaa0:	mov	x19, xzr
  44aaa4:	mov	x0, x19
  44aaa8:	ldr	x19, [sp, #16]
  44aaac:	ldp	x29, x30, [sp], #32
  44aab0:	ret
  44aab4:	mov	x8, x0
  44aab8:	mov	w0, wzr
  44aabc:	cbz	x8, 44aad8 <feof@plt+0x479f8>
  44aac0:	cbz	x1, 44aad8 <feof@plt+0x479f8>
  44aac4:	cmp	w2, #0x1
  44aac8:	b.lt	44aad8 <feof@plt+0x479f8>  // b.tstop
  44aacc:	mov	w0, #0x1                   	// #1
  44aad0:	stp	xzr, x1, [x8]
  44aad4:	str	w2, [x8, #16]
  44aad8:	ret
  44aadc:	mov	x8, x0
  44aae0:	mov	w0, wzr
  44aae4:	cbz	x8, 44ab08 <feof@plt+0x47a28>
  44aae8:	tbnz	w1, #31, 44ab08 <feof@plt+0x47a28>
  44aaec:	cbz	x2, 44ab08 <feof@plt+0x47a28>
  44aaf0:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  44aaf4:	ldr	d0, [x9, #3488]
  44aaf8:	mov	w0, #0x1                   	// #1
  44aafc:	str	w1, [x8, #8]
  44ab00:	str	x2, [x8, #16]
  44ab04:	str	d0, [x8]
  44ab08:	ret
  44ab0c:	sub	w9, w1, #0x1
  44ab10:	mov	x8, x0
  44ab14:	cmp	w9, #0x4
  44ab18:	mov	w0, wzr
  44ab1c:	b.hi	44ab40 <feof@plt+0x47a60>  // b.pmore
  44ab20:	cbz	x8, 44ab40 <feof@plt+0x47a60>
  44ab24:	cbz	x2, 44ab40 <feof@plt+0x47a60>
  44ab28:	adrp	x9, 472000 <_obstack_memory_used@@Base+0x10838>
  44ab2c:	ldr	d0, [x9, #3496]
  44ab30:	mov	w0, #0x1                   	// #1
  44ab34:	str	w1, [x8, #8]
  44ab38:	str	x2, [x8, #16]
  44ab3c:	str	d0, [x8]
  44ab40:	ret
  44ab44:	sub	w9, w1, #0x1
  44ab48:	mov	x8, x0
  44ab4c:	cmp	w9, #0x4
  44ab50:	mov	w0, wzr
  44ab54:	b.hi	44ab78 <feof@plt+0x47a98>  // b.pmore
  44ab58:	cbz	x8, 44ab78 <feof@plt+0x47a98>
  44ab5c:	cbz	x2, 44ab78 <feof@plt+0x47a98>
  44ab60:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x2838>
  44ab64:	ldr	d0, [x9, #704]
  44ab68:	mov	w0, #0x1                   	// #1
  44ab6c:	str	w1, [x8, #8]
  44ab70:	str	x2, [x8, #16]
  44ab74:	str	d0, [x8]
  44ab78:	ret
  44ab7c:	stp	x29, x30, [sp, #-32]!
  44ab80:	stp	x20, x19, [sp, #16]
  44ab84:	ldr	x8, [x0, #24]
  44ab88:	mov	x19, x0
  44ab8c:	mov	w20, w1
  44ab90:	mov	x29, sp
  44ab94:	ldrb	w9, [x8]
  44ab98:	cmp	w9, #0x5f
  44ab9c:	b.ne	44abb4 <feof@plt+0x47ad4>  // b.any
  44aba0:	add	x10, x8, #0x1
  44aba4:	str	x10, [x19, #24]
  44aba8:	ldrb	w9, [x8, #1]
  44abac:	mov	x8, x10
  44abb0:	b	44abb8 <feof@plt+0x47ad8>
  44abb4:	cbnz	w20, 44abfc <feof@plt+0x47b1c>
  44abb8:	cmp	w9, #0x5a
  44abbc:	b.ne	44abfc <feof@plt+0x47b1c>  // b.any
  44abc0:	add	x8, x8, #0x1
  44abc4:	mov	x0, x19
  44abc8:	mov	w1, w20
  44abcc:	str	x8, [x19, #24]
  44abd0:	bl	44ad38 <feof@plt+0x47c58>
  44abd4:	cbz	w20, 44ad24 <feof@plt+0x47c44>
  44abd8:	ldrb	w8, [x19, #16]
  44abdc:	tbz	w8, #0, 44ad24 <feof@plt+0x47c44>
  44abe0:	ldr	x11, [x19, #24]
  44abe4:	ldrb	w8, [x11]
  44abe8:	cmp	w8, #0x2e
  44abec:	b.ne	44ad24 <feof@plt+0x47c44>  // b.any
  44abf0:	mov	w9, #0x18                  	// #24
  44abf4:	mov	w10, #0x4e                  	// #78
  44abf8:	b	44ac1c <feof@plt+0x47b3c>
  44abfc:	mov	x8, xzr
  44ac00:	b	44ad28 <feof@plt+0x47c48>
  44ac04:	mov	x8, xzr
  44ac08:	ldr	x11, [x19, #24]
  44ac0c:	mov	x0, x8
  44ac10:	ldrb	w12, [x11]
  44ac14:	cmp	w12, #0x2e
  44ac18:	b.ne	44ad28 <feof@plt+0x47c48>  // b.any
  44ac1c:	ldrb	w8, [x11, #1]
  44ac20:	cmp	w8, #0x5f
  44ac24:	b.eq	44ac4c <feof@plt+0x47b6c>  // b.none
  44ac28:	sub	w12, w8, #0x61
  44ac2c:	and	w12, w12, #0xff
  44ac30:	cmp	w12, #0x1a
  44ac34:	b.cc	44ac4c <feof@plt+0x47b6c>  // b.lo, b.ul, b.last
  44ac38:	sub	w8, w8, #0x30
  44ac3c:	cmp	w8, #0xa
  44ac40:	mov	x12, x11
  44ac44:	b.cc	44ac74 <feof@plt+0x47b94>  // b.lo, b.ul, b.last
  44ac48:	b	44ad24 <feof@plt+0x47c44>
  44ac4c:	add	x12, x11, #0x1
  44ac50:	ldrb	w8, [x12, #1]!
  44ac54:	cmp	w8, #0x5f
  44ac58:	sub	w13, w8, #0x61
  44ac5c:	b.eq	44ac50 <feof@plt+0x47b70>  // b.none
  44ac60:	and	w13, w13, #0xff
  44ac64:	cmp	w13, #0x1a
  44ac68:	b.cc	44ac50 <feof@plt+0x47b70>  // b.lo, b.ul, b.last
  44ac6c:	cmp	w8, #0x2e
  44ac70:	b.ne	44ac9c <feof@plt+0x47bbc>  // b.any
  44ac74:	ldrb	w8, [x12, #1]
  44ac78:	sub	w8, w8, #0x30
  44ac7c:	cmp	w8, #0x9
  44ac80:	b.hi	44ac9c <feof@plt+0x47bbc>  // b.pmore
  44ac84:	add	x12, x12, #0x1
  44ac88:	ldrb	w8, [x12, #1]!
  44ac8c:	sub	w13, w8, #0x30
  44ac90:	cmp	w13, #0xa
  44ac94:	b.cc	44ac88 <feof@plt+0x47ba8>  // b.lo, b.ul, b.last
  44ac98:	b	44ac6c <feof@plt+0x47b8c>
  44ac9c:	ldp	w13, w8, [x19, #40]
  44aca0:	str	x12, [x19, #24]
  44aca4:	sxtw	x13, w13
  44aca8:	cmp	w13, w8
  44acac:	mov	x8, xzr
  44acb0:	b.ge	44ac08 <feof@plt+0x47b28>  // b.tcont
  44acb4:	ldr	x15, [x19, #32]
  44acb8:	sub	w14, w12, w11
  44acbc:	add	w16, w13, #0x1
  44acc0:	cmp	w14, #0x1
  44acc4:	madd	x12, x13, x9, x15
  44acc8:	str	wzr, [x12, #4]
  44accc:	str	w16, [x19, #40]
  44acd0:	b.lt	44ac08 <feof@plt+0x47b28>  // b.tstop
  44acd4:	cbz	x15, 44ac08 <feof@plt+0x47b28>
  44acd8:	madd	x8, x13, x9, x15
  44acdc:	str	xzr, [x12]
  44ace0:	str	x11, [x8, #8]
  44ace4:	str	w14, [x8, #16]
  44ace8:	cbz	x0, 44ac04 <feof@plt+0x47b24>
  44acec:	ldp	w11, w8, [x19, #40]
  44acf0:	sxtw	x11, w11
  44acf4:	cmp	w11, w8
  44acf8:	b.ge	44ac04 <feof@plt+0x47b24>  // b.tcont
  44acfc:	ldr	x13, [x19, #32]
  44ad00:	add	w14, w11, #0x1
  44ad04:	madd	x8, x11, x9, x13
  44ad08:	str	wzr, [x8, #4]
  44ad0c:	str	w14, [x19, #40]
  44ad10:	cbz	x13, 44ac04 <feof@plt+0x47b24>
  44ad14:	madd	x11, x11, x9, x13
  44ad18:	str	w10, [x8]
  44ad1c:	stp	x0, x12, [x11, #8]
  44ad20:	b	44ac08 <feof@plt+0x47b28>
  44ad24:	mov	x8, x0
  44ad28:	ldp	x20, x19, [sp, #16]
  44ad2c:	mov	x0, x8
  44ad30:	ldp	x29, x30, [sp], #32
  44ad34:	ret
  44ad38:	stp	x29, x30, [sp, #-48]!
  44ad3c:	stp	x22, x21, [sp, #16]
  44ad40:	stp	x20, x19, [sp, #32]
  44ad44:	mov	x22, x0
  44ad48:	ldr	x9, [x22, #24]!
  44ad4c:	mov	x19, x0
  44ad50:	mov	x29, sp
  44ad54:	ldrb	w8, [x9]
  44ad58:	cmp	w8, #0x54
  44ad5c:	b.eq	44ad68 <feof@plt+0x47c88>  // b.none
  44ad60:	cmp	w8, #0x47
  44ad64:	b.ne	44ae0c <feof@plt+0x47d2c>  // b.any
  44ad68:	ldr	w10, [x19, #72]
  44ad6c:	add	w8, w10, #0x14
  44ad70:	str	w8, [x19, #72]
  44ad74:	ldrb	w8, [x9]
  44ad78:	cmp	w8, #0x47
  44ad7c:	b.eq	44ae5c <feof@plt+0x47d7c>  // b.none
  44ad80:	cmp	w8, #0x54
  44ad84:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44ad88:	add	x8, x9, #0x1
  44ad8c:	str	x8, [x22]
  44ad90:	ldrb	w8, [x9, #1]
  44ad94:	cbz	w8, 44bebc <feof@plt+0x48ddc>
  44ad98:	add	x8, x9, #0x2
  44ad9c:	str	x8, [x22]
  44ada0:	ldrb	w11, [x9, #1]
  44ada4:	mov	x20, xzr
  44ada8:	sub	w11, w11, #0x41
  44adac:	cmp	w11, #0x35
  44adb0:	b.hi	44bec0 <feof@plt+0x48de0>  // b.pmore
  44adb4:	adrp	x12, 472000 <_obstack_memory_used@@Base+0x10838>
  44adb8:	add	x12, x12, #0xe14
  44adbc:	adr	x13, 44adcc <feof@plt+0x47cec>
  44adc0:	ldrh	w14, [x12, x11, lsl #1]
  44adc4:	add	x13, x13, x14, lsl #2
  44adc8:	br	x13
  44adcc:	mov	x0, x19
  44add0:	bl	44e8c8 <feof@plt+0x4b7e8>
  44add4:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44add8:	ldp	w8, w9, [x19, #40]
  44addc:	sxtw	x8, w8
  44ade0:	cmp	w8, w9
  44ade4:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44ade8:	ldr	x9, [x19, #32]
  44adec:	mov	w10, #0x18                  	// #24
  44adf0:	add	w11, w8, #0x1
  44adf4:	madd	x20, x8, x10, x9
  44adf8:	str	wzr, [x20, #4]
  44adfc:	str	w11, [x19, #40]
  44ae00:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44ae04:	mov	w10, #0x30                  	// #48
  44ae08:	b	44b87c <feof@plt+0x4879c>
  44ae0c:	mov	x0, x19
  44ae10:	mov	w21, w1
  44ae14:	bl	44e118 <feof@plt+0x4b038>
  44ae18:	mov	x20, x0
  44ae1c:	cbz	x0, 44bec0 <feof@plt+0x48de0>
  44ae20:	cbz	w21, 44aee4 <feof@plt+0x47e04>
  44ae24:	ldrb	w8, [x19, #16]
  44ae28:	tbnz	w8, #0, 44aee4 <feof@plt+0x47e04>
  44ae2c:	adrp	x8, 472000 <_obstack_memory_used@@Base+0x10838>
  44ae30:	add	x8, x8, #0xf1e
  44ae34:	ldr	w9, [x20]
  44ae38:	sub	w9, w9, #0x2
  44ae3c:	cmp	w9, #0x4e
  44ae40:	b.hi	44bec0 <feof@plt+0x48de0>  // b.pmore
  44ae44:	adr	x10, 44ae54 <feof@plt+0x47d74>
  44ae48:	ldrh	w11, [x8, x9, lsl #1]
  44ae4c:	add	x10, x10, x11, lsl #2
  44ae50:	br	x10
  44ae54:	ldr	x20, [x20, #8]
  44ae58:	b	44ae34 <feof@plt+0x47d54>
  44ae5c:	add	x8, x9, #0x1
  44ae60:	str	x8, [x22]
  44ae64:	ldrb	w8, [x9, #1]
  44ae68:	cbz	w8, 44bebc <feof@plt+0x48ddc>
  44ae6c:	add	x8, x9, #0x2
  44ae70:	str	x8, [x22]
  44ae74:	ldrb	w10, [x9, #1]
  44ae78:	mov	x20, xzr
  44ae7c:	sub	w10, w10, #0x41
  44ae80:	cmp	w10, #0x31
  44ae84:	b.hi	44bec0 <feof@plt+0x48de0>  // b.pmore
  44ae88:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44ae8c:	add	x11, x11, #0xdb0
  44ae90:	adr	x12, 44aea0 <feof@plt+0x47dc0>
  44ae94:	ldrh	w13, [x11, x10, lsl #1]
  44ae98:	add	x12, x12, x13, lsl #2
  44ae9c:	br	x12
  44aea0:	mov	x0, x19
  44aea4:	mov	w1, wzr
  44aea8:	bl	44ad38 <feof@plt+0x47c58>
  44aeac:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44aeb0:	ldp	w8, w9, [x19, #40]
  44aeb4:	sxtw	x8, w8
  44aeb8:	cmp	w8, w9
  44aebc:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44aec0:	ldr	x9, [x19, #32]
  44aec4:	mov	w10, #0x18                  	// #24
  44aec8:	add	w11, w8, #0x1
  44aecc:	madd	x20, x8, x10, x9
  44aed0:	str	wzr, [x20, #4]
  44aed4:	str	w11, [x19, #40]
  44aed8:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44aedc:	mov	w10, #0x17                  	// #23
  44aee0:	b	44b87c <feof@plt+0x4879c>
  44aee4:	ldr	x8, [x22]
  44aee8:	ldrb	w9, [x8]
  44aeec:	cbz	w9, 44bec0 <feof@plt+0x48de0>
  44aef0:	cmp	w9, #0x45
  44aef4:	b.eq	44bec0 <feof@plt+0x48de0>  // b.none
  44aef8:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44aefc:	add	x11, x11, #0xe80
  44af00:	mov	x12, x20
  44af04:	ldr	w10, [x12]
  44af08:	sub	w13, w10, #0x2
  44af0c:	cmp	w13, #0x4e
  44af10:	mov	w10, wzr
  44af14:	b.hi	44b9b4 <feof@plt+0x488d4>  // b.pmore
  44af18:	adr	x14, 44af28 <feof@plt+0x47e48>
  44af1c:	ldrh	w15, [x11, x13, lsl #1]
  44af20:	add	x14, x14, x15, lsl #2
  44af24:	br	x14
  44af28:	add	x10, x12, #0x8
  44af2c:	ldr	x12, [x10]
  44af30:	cbnz	x12, 44af04 <feof@plt+0x47e24>
  44af34:	b	44b9b0 <feof@plt+0x488d0>
  44af38:	add	x10, x12, #0x10
  44af3c:	b	44af2c <feof@plt+0x47e4c>
  44af40:	ldr	x8, [x20, #16]
  44af44:	mov	x10, #0x1f                  	// #31
  44af48:	mov	w9, #0x1                   	// #1
  44af4c:	movk	x10, #0x1a, lsl #48
  44af50:	ldr	w11, [x8]
  44af54:	sub	w11, w11, #0x1c
  44af58:	cmp	w11, #0x34
  44af5c:	b.hi	44bec0 <feof@plt+0x48de0>  // b.pmore
  44af60:	lsl	x11, x9, x11
  44af64:	tst	x11, x10
  44af68:	b.eq	44bec0 <feof@plt+0x48de0>  // b.none
  44af6c:	ldr	x8, [x8, #8]
  44af70:	str	x8, [x20, #16]
  44af74:	b	44af50 <feof@plt+0x47e70>
  44af78:	mov	x0, x19
  44af7c:	bl	44e118 <feof@plt+0x4b038>
  44af80:	ldp	w9, w8, [x19, #40]
  44af84:	sxtw	x9, w9
  44af88:	cmp	w9, w8
  44af8c:	b.ge	44b09c <feof@plt+0x47fbc>  // b.tcont
  44af90:	ldr	x10, [x19, #32]
  44af94:	mov	w8, #0x18                  	// #24
  44af98:	add	w11, w9, #0x1
  44af9c:	madd	x8, x9, x8, x10
  44afa0:	str	wzr, [x8, #4]
  44afa4:	str	w11, [x19, #40]
  44afa8:	cbz	x10, 44b09c <feof@plt+0x47fbc>
  44afac:	mov	w11, #0x42                  	// #66
  44afb0:	str	w11, [x8]
  44afb4:	ldr	x15, [x22]
  44afb8:	ldrb	w12, [x15]
  44afbc:	cmp	w12, #0x6e
  44afc0:	b.ne	44ba90 <feof@plt+0x489b0>  // b.any
  44afc4:	add	x13, x15, #0x1
  44afc8:	str	x13, [x22]
  44afcc:	ldrb	w12, [x15, #1]
  44afd0:	mov	w11, #0x1                   	// #1
  44afd4:	mov	x15, x13
  44afd8:	b	44ba94 <feof@plt+0x489b4>
  44afdc:	ldrb	w8, [x8]
  44afe0:	cbz	w8, 44b83c <feof@plt+0x4875c>
  44afe4:	add	x8, x9, #0x3
  44afe8:	str	x8, [x19, #24]
  44afec:	ldrb	w20, [x9, #2]
  44aff0:	mov	x0, x19
  44aff4:	mov	w1, wzr
  44aff8:	bl	44ad38 <feof@plt+0x47c58>
  44affc:	cmp	w20, #0x6e
  44b000:	b.ne	44b848 <feof@plt+0x48768>  // b.any
  44b004:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b008:	ldp	w8, w9, [x19, #40]
  44b00c:	sxtw	x8, w8
  44b010:	cmp	w8, w9
  44b014:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b018:	ldr	x9, [x19, #32]
  44b01c:	mov	w10, #0x18                  	// #24
  44b020:	add	w11, w8, #0x1
  44b024:	madd	x20, x8, x10, x9
  44b028:	str	wzr, [x20, #4]
  44b02c:	str	w11, [x19, #40]
  44b030:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b034:	mov	w10, #0x4a                  	// #74
  44b038:	b	44b87c <feof@plt+0x4879c>
  44b03c:	mov	x0, x19
  44b040:	bl	44e118 <feof@plt+0x4b038>
  44b044:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b048:	ldp	w8, w9, [x19, #40]
  44b04c:	sxtw	x8, w8
  44b050:	cmp	w8, w9
  44b054:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b058:	ldr	x9, [x19, #32]
  44b05c:	mov	w10, #0x18                  	// #24
  44b060:	add	w11, w8, #0x1
  44b064:	madd	x20, x8, x10, x9
  44b068:	str	wzr, [x20, #4]
  44b06c:	str	w11, [x19, #40]
  44b070:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b074:	mov	w10, #0x13                  	// #19
  44b078:	b	44b87c <feof@plt+0x4879c>
  44b07c:	ldrb	w10, [x8]
  44b080:	cmp	w10, #0x6e
  44b084:	b.ne	44b0cc <feof@plt+0x47fec>  // b.any
  44b088:	add	x8, x9, #0x3
  44b08c:	str	x8, [x22]
  44b090:	ldrb	w10, [x9, #3]
  44b094:	mov	w9, #0x1                   	// #1
  44b098:	b	44b0d0 <feof@plt+0x47ff0>
  44b09c:	mov	x8, xzr
  44b0a0:	b	44bce8 <feof@plt+0x48c08>
  44b0a4:	ldr	x10, [x12, #8]
  44b0a8:	cbz	x10, 44b0c4 <feof@plt+0x47fe4>
  44b0ac:	ldr	w11, [x10]
  44b0b0:	sub	w12, w11, #0x1
  44b0b4:	cmp	w12, #0x2
  44b0b8:	b.cs	44b988 <feof@plt+0x488a8>  // b.hs, b.nlast
  44b0bc:	ldr	x10, [x10, #16]
  44b0c0:	cbnz	x10, 44b0ac <feof@plt+0x47fcc>
  44b0c4:	mov	w10, #0x1                   	// #1
  44b0c8:	b	44b9b4 <feof@plt+0x488d4>
  44b0cc:	mov	w9, wzr
  44b0d0:	sub	w11, w10, #0x30
  44b0d4:	cmp	w11, #0x9
  44b0d8:	b.hi	44b13c <feof@plt+0x4805c>  // b.pmore
  44b0dc:	mov	w12, #0x2f                  	// #47
  44b0e0:	mov	w13, #0x6667                	// #26215
  44b0e4:	mov	w11, wzr
  44b0e8:	movk	w12, #0x8000, lsl #16
  44b0ec:	add	x8, x8, #0x1
  44b0f0:	movk	w13, #0x6666, lsl #16
  44b0f4:	mov	w14, #0xa                   	// #10
  44b0f8:	and	w15, w10, #0xff
  44b0fc:	sub	w10, w12, w15
  44b100:	smull	x10, w10, w13
  44b104:	lsr	x16, x10, #63
  44b108:	asr	x10, x10, #34
  44b10c:	add	w10, w10, w16
  44b110:	cmp	w11, w10
  44b114:	b.gt	44bebc <feof@plt+0x48ddc>
  44b118:	str	x8, [x22]
  44b11c:	ldrb	w10, [x8], #1
  44b120:	madd	w11, w11, w14, w15
  44b124:	sub	w11, w11, #0x30
  44b128:	sub	w15, w10, #0x30
  44b12c:	cmp	w15, #0xa
  44b130:	b.cc	44b0f8 <feof@plt+0x48018>  // b.lo, b.ul, b.last
  44b134:	sub	x8, x8, #0x1
  44b138:	b	44b140 <feof@plt+0x48060>
  44b13c:	mov	w11, wzr
  44b140:	cmp	w9, #0x0
  44b144:	mov	x20, xzr
  44b148:	cneg	w9, w11, ne  // ne = any
  44b14c:	cbz	w10, 44bec0 <feof@plt+0x48de0>
  44b150:	cmp	w9, #0x2
  44b154:	b.lt	44bec0 <feof@plt+0x48de0>  // b.tstop
  44b158:	add	x12, x8, #0x1
  44b15c:	str	x12, [x22]
  44b160:	ldrb	w8, [x8]
  44b164:	cmp	w8, #0x5f
  44b168:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44b16c:	mov	x8, xzr
  44b170:	sub	w13, w9, #0x1
  44b174:	mov	w9, #0x18                  	// #24
  44b178:	mov	w10, #0x41                  	// #65
  44b17c:	mov	w11, #0x40                  	// #64
  44b180:	b	44b6b0 <feof@plt+0x485d0>
  44b184:	mov	x0, x19
  44b188:	bl	44bed4 <feof@plt+0x48df4>
  44b18c:	ldr	x10, [x19, #24]
  44b190:	mov	x21, x0
  44b194:	ldrb	w9, [x10]
  44b198:	cmp	w9, #0x6e
  44b19c:	b.ne	44b890 <feof@plt+0x487b0>  // b.any
  44b1a0:	add	x11, x10, #0x1
  44b1a4:	str	x11, [x22]
  44b1a8:	ldrb	w9, [x10, #1]
  44b1ac:	mov	w8, #0x1                   	// #1
  44b1b0:	mov	x10, x11
  44b1b4:	b	44b894 <feof@plt+0x487b4>
  44b1b8:	mov	x0, x19
  44b1bc:	bl	44bed4 <feof@plt+0x48df4>
  44b1c0:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b1c4:	ldp	w8, w9, [x19, #40]
  44b1c8:	sxtw	x8, w8
  44b1cc:	cmp	w8, w9
  44b1d0:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b1d4:	ldr	x9, [x19, #32]
  44b1d8:	mov	w10, #0x18                  	// #24
  44b1dc:	add	w11, w8, #0x1
  44b1e0:	madd	x20, x8, x10, x9
  44b1e4:	str	wzr, [x20, #4]
  44b1e8:	str	w11, [x19, #40]
  44b1ec:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b1f0:	mov	w10, #0xe                   	// #14
  44b1f4:	b	44b87c <feof@plt+0x4879c>
  44b1f8:	mov	x0, x19
  44b1fc:	bl	44e118 <feof@plt+0x4b038>
  44b200:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b204:	ldp	w8, w9, [x19, #40]
  44b208:	sxtw	x8, w8
  44b20c:	cmp	w8, w9
  44b210:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b214:	ldr	x9, [x19, #32]
  44b218:	mov	w10, #0x18                  	// #24
  44b21c:	add	w11, w8, #0x1
  44b220:	madd	x20, x8, x10, x9
  44b224:	str	wzr, [x20, #4]
  44b228:	str	w11, [x19, #40]
  44b22c:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b230:	mov	w10, #0x14                  	// #20
  44b234:	b	44b87c <feof@plt+0x4879c>
  44b238:	mov	x0, x19
  44b23c:	bl	44bed4 <feof@plt+0x48df4>
  44b240:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b244:	ldp	w8, w9, [x19, #40]
  44b248:	sxtw	x8, w8
  44b24c:	cmp	w8, w9
  44b250:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b254:	ldr	x9, [x19, #32]
  44b258:	mov	w10, #0x18                  	// #24
  44b25c:	add	w11, w8, #0x1
  44b260:	madd	x20, x8, x10, x9
  44b264:	str	wzr, [x20, #4]
  44b268:	str	w11, [x19, #40]
  44b26c:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b270:	mov	w10, #0xc                   	// #12
  44b274:	b	44b87c <feof@plt+0x4879c>
  44b278:	mov	x0, x19
  44b27c:	bl	44bed4 <feof@plt+0x48df4>
  44b280:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b284:	ldp	w8, w9, [x19, #40]
  44b288:	sxtw	x8, w8
  44b28c:	cmp	w8, w9
  44b290:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b294:	ldr	x9, [x19, #32]
  44b298:	mov	w10, #0x18                  	// #24
  44b29c:	add	w11, w8, #0x1
  44b2a0:	madd	x20, x8, x10, x9
  44b2a4:	str	wzr, [x20, #4]
  44b2a8:	str	w11, [x19, #40]
  44b2ac:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b2b0:	mov	w10, #0x12                  	// #18
  44b2b4:	b	44b87c <feof@plt+0x4879c>
  44b2b8:	mov	x0, x19
  44b2bc:	bl	44bed4 <feof@plt+0x48df4>
  44b2c0:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b2c4:	ldp	w8, w9, [x19, #40]
  44b2c8:	sxtw	x8, w8
  44b2cc:	cmp	w8, w9
  44b2d0:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b2d4:	ldr	x9, [x19, #32]
  44b2d8:	mov	w10, #0x18                  	// #24
  44b2dc:	add	w11, w8, #0x1
  44b2e0:	madd	x20, x8, x10, x9
  44b2e4:	str	wzr, [x20, #4]
  44b2e8:	str	w11, [x19, #40]
  44b2ec:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b2f0:	mov	w10, #0xd                   	// #13
  44b2f4:	b	44b87c <feof@plt+0x4879c>
  44b2f8:	add	w8, w10, #0xa
  44b2fc:	mov	x0, x19
  44b300:	str	w8, [x19, #72]
  44b304:	bl	44bed4 <feof@plt+0x48df4>
  44b308:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b30c:	ldp	w8, w9, [x19, #40]
  44b310:	sxtw	x8, w8
  44b314:	cmp	w8, w9
  44b318:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b31c:	ldr	x9, [x19, #32]
  44b320:	mov	w10, #0x18                  	// #24
  44b324:	add	w11, w8, #0x1
  44b328:	madd	x20, x8, x10, x9
  44b32c:	str	wzr, [x20, #4]
  44b330:	str	w11, [x19, #40]
  44b334:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b338:	mov	w10, #0xa                   	// #10
  44b33c:	b	44b87c <feof@plt+0x4879c>
  44b340:	add	w8, w10, #0xf
  44b344:	mov	x0, x19
  44b348:	str	w8, [x19, #72]
  44b34c:	bl	44bed4 <feof@plt+0x48df4>
  44b350:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b354:	ldp	w8, w9, [x19, #40]
  44b358:	sxtw	x8, w8
  44b35c:	cmp	w8, w9
  44b360:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b364:	ldr	x9, [x19, #32]
  44b368:	mov	w10, #0x18                  	// #24
  44b36c:	add	w11, w8, #0x1
  44b370:	madd	x20, x8, x10, x9
  44b374:	str	wzr, [x20, #4]
  44b378:	str	w11, [x19, #40]
  44b37c:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b380:	mov	w10, #0x9                   	// #9
  44b384:	b	44b87c <feof@plt+0x4879c>
  44b388:	mov	x0, x19
  44b38c:	bl	44e118 <feof@plt+0x4b038>
  44b390:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b394:	ldp	w8, w9, [x19, #40]
  44b398:	sxtw	x8, w8
  44b39c:	cmp	w8, w9
  44b3a0:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b3a4:	ldr	x9, [x19, #32]
  44b3a8:	mov	w10, #0x18                  	// #24
  44b3ac:	add	w11, w8, #0x1
  44b3b0:	madd	x20, x8, x10, x9
  44b3b4:	str	wzr, [x20, #4]
  44b3b8:	str	w11, [x19, #40]
  44b3bc:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b3c0:	mov	w10, #0x15                  	// #21
  44b3c4:	b	44b87c <feof@plt+0x4879c>
  44b3c8:	ldrb	w8, [x8]
  44b3cc:	cbz	w8, 44bebc <feof@plt+0x48ddc>
  44b3d0:	add	x8, x9, #0x3
  44b3d4:	str	x8, [x22]
  44b3d8:	ldrb	w10, [x9, #2]
  44b3dc:	cmp	w10, #0x76
  44b3e0:	b.eq	44bb10 <feof@plt+0x48a30>  // b.none
  44b3e4:	cmp	w10, #0x68
  44b3e8:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44b3ec:	ldrb	w10, [x8]
  44b3f0:	cmp	w10, #0x6e
  44b3f4:	b.ne	44b404 <feof@plt+0x48324>  // b.any
  44b3f8:	add	x8, x9, #0x4
  44b3fc:	str	x8, [x22]
  44b400:	ldrb	w10, [x9, #4]
  44b404:	sub	w9, w10, #0x30
  44b408:	cmp	w9, #0x9
  44b40c:	b.hi	44bc24 <feof@plt+0x48b44>  // b.pmore
  44b410:	mov	w9, #0x2f                  	// #47
  44b414:	mov	w12, #0x6667                	// #26215
  44b418:	mov	w11, wzr
  44b41c:	movk	w9, #0x8000, lsl #16
  44b420:	add	x8, x8, #0x1
  44b424:	movk	w12, #0x6666, lsl #16
  44b428:	mov	w13, #0xa                   	// #10
  44b42c:	and	w14, w10, #0xff
  44b430:	sub	w10, w9, w14
  44b434:	smull	x10, w10, w12
  44b438:	lsr	x15, x10, #63
  44b43c:	asr	x10, x10, #34
  44b440:	add	w10, w10, w15
  44b444:	cmp	w11, w10
  44b448:	b.gt	44bebc <feof@plt+0x48ddc>
  44b44c:	str	x8, [x22]
  44b450:	ldrb	w10, [x8], #1
  44b454:	madd	w11, w11, w13, w14
  44b458:	sub	w11, w11, #0x30
  44b45c:	sub	w14, w10, #0x30
  44b460:	cmp	w14, #0xa
  44b464:	b.cc	44b42c <feof@plt+0x4834c>  // b.lo, b.ul, b.last
  44b468:	b	44bc20 <feof@plt+0x48b40>
  44b46c:	ldrb	w10, [x8]
  44b470:	cmp	w10, #0x6e
  44b474:	b.ne	44b484 <feof@plt+0x483a4>  // b.any
  44b478:	add	x8, x9, #0x3
  44b47c:	str	x8, [x22]
  44b480:	ldrb	w10, [x9, #3]
  44b484:	sub	w9, w10, #0x30
  44b488:	cmp	w9, #0x9
  44b48c:	b.hi	44b4ec <feof@plt+0x4840c>  // b.pmore
  44b490:	mov	w9, #0x2f                  	// #47
  44b494:	mov	w12, #0x6667                	// #26215
  44b498:	mov	w11, wzr
  44b49c:	movk	w9, #0x8000, lsl #16
  44b4a0:	add	x8, x8, #0x1
  44b4a4:	movk	w12, #0x6666, lsl #16
  44b4a8:	mov	w13, #0xa                   	// #10
  44b4ac:	and	w14, w10, #0xff
  44b4b0:	sub	w10, w9, w14
  44b4b4:	smull	x10, w10, w12
  44b4b8:	lsr	x15, x10, #63
  44b4bc:	asr	x10, x10, #34
  44b4c0:	add	w10, w10, w15
  44b4c4:	cmp	w11, w10
  44b4c8:	b.gt	44bebc <feof@plt+0x48ddc>
  44b4cc:	str	x8, [x22]
  44b4d0:	ldrb	w10, [x8], #1
  44b4d4:	madd	w11, w11, w13, w14
  44b4d8:	sub	w11, w11, #0x30
  44b4dc:	sub	w14, w10, #0x30
  44b4e0:	cmp	w14, #0xa
  44b4e4:	b.cc	44b4ac <feof@plt+0x483cc>  // b.lo, b.ul, b.last
  44b4e8:	sub	x8, x8, #0x1
  44b4ec:	cmp	w10, #0x5f
  44b4f0:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44b4f4:	add	x8, x8, #0x1
  44b4f8:	mov	x0, x19
  44b4fc:	mov	w1, wzr
  44b500:	str	x8, [x19, #24]
  44b504:	bl	44ad38 <feof@plt+0x47c58>
  44b508:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b50c:	ldp	w8, w9, [x19, #40]
  44b510:	sxtw	x8, w8
  44b514:	cmp	w8, w9
  44b518:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b51c:	ldr	x9, [x19, #32]
  44b520:	mov	w10, #0x18                  	// #24
  44b524:	add	w11, w8, #0x1
  44b528:	madd	x20, x8, x10, x9
  44b52c:	str	wzr, [x20, #4]
  44b530:	str	w11, [x19, #40]
  44b534:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b538:	mov	w10, #0xf                   	// #15
  44b53c:	b	44b87c <feof@plt+0x4879c>
  44b540:	ldrb	w10, [x8]
  44b544:	cmp	w10, #0x6e
  44b548:	b.ne	44b558 <feof@plt+0x48478>  // b.any
  44b54c:	add	x8, x9, #0x3
  44b550:	str	x8, [x22]
  44b554:	ldrb	w10, [x9, #3]
  44b558:	sub	w9, w10, #0x30
  44b55c:	cmp	w9, #0x9
  44b560:	b.hi	44b5c0 <feof@plt+0x484e0>  // b.pmore
  44b564:	mov	w9, #0x2f                  	// #47
  44b568:	mov	w12, #0x6667                	// #26215
  44b56c:	mov	w11, wzr
  44b570:	movk	w9, #0x8000, lsl #16
  44b574:	add	x8, x8, #0x1
  44b578:	movk	w12, #0x6666, lsl #16
  44b57c:	mov	w13, #0xa                   	// #10
  44b580:	and	w14, w10, #0xff
  44b584:	sub	w10, w9, w14
  44b588:	smull	x10, w10, w12
  44b58c:	lsr	x15, x10, #63
  44b590:	asr	x10, x10, #34
  44b594:	add	w10, w10, w15
  44b598:	cmp	w11, w10
  44b59c:	b.gt	44bebc <feof@plt+0x48ddc>
  44b5a0:	str	x8, [x22]
  44b5a4:	ldrb	w10, [x8], #1
  44b5a8:	madd	w11, w11, w13, w14
  44b5ac:	sub	w11, w11, #0x30
  44b5b0:	sub	w14, w10, #0x30
  44b5b4:	cmp	w14, #0xa
  44b5b8:	b.cc	44b580 <feof@plt+0x484a0>  // b.lo, b.ul, b.last
  44b5bc:	sub	x8, x8, #0x1
  44b5c0:	cmp	w10, #0x5f
  44b5c4:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44b5c8:	add	x11, x8, #0x1
  44b5cc:	str	x11, [x22]
  44b5d0:	ldrb	w9, [x8, #1]
  44b5d4:	cmp	w9, #0x6e
  44b5d8:	b.ne	44b5e8 <feof@plt+0x48508>  // b.any
  44b5dc:	add	x11, x8, #0x2
  44b5e0:	str	x11, [x22]
  44b5e4:	ldrb	w9, [x8, #2]
  44b5e8:	sub	w8, w9, #0x30
  44b5ec:	cmp	w8, #0x9
  44b5f0:	b.hi	44b650 <feof@plt+0x48570>  // b.pmore
  44b5f4:	mov	w10, #0x2f                  	// #47
  44b5f8:	add	x8, x11, #0x1
  44b5fc:	mov	w11, #0x6667                	// #26215
  44b600:	mov	w12, wzr
  44b604:	movk	w10, #0x8000, lsl #16
  44b608:	movk	w11, #0x6666, lsl #16
  44b60c:	mov	w13, #0xa                   	// #10
  44b610:	and	w14, w9, #0xff
  44b614:	sub	w9, w10, w14
  44b618:	smull	x9, w9, w11
  44b61c:	lsr	x15, x9, #63
  44b620:	asr	x9, x9, #34
  44b624:	add	w9, w9, w15
  44b628:	cmp	w12, w9
  44b62c:	b.gt	44bebc <feof@plt+0x48ddc>
  44b630:	str	x8, [x22]
  44b634:	ldrb	w9, [x8], #1
  44b638:	madd	w12, w12, w13, w14
  44b63c:	sub	w12, w12, #0x30
  44b640:	sub	w14, w9, #0x30
  44b644:	cmp	w14, #0xa
  44b648:	b.cc	44b610 <feof@plt+0x48530>  // b.lo, b.ul, b.last
  44b64c:	sub	x11, x8, #0x1
  44b650:	cmp	w9, #0x5f
  44b654:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44b658:	add	x8, x11, #0x1
  44b65c:	mov	x0, x19
  44b660:	mov	w1, wzr
  44b664:	str	x8, [x19, #24]
  44b668:	bl	44ad38 <feof@plt+0x47c58>
  44b66c:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b670:	ldp	w8, w9, [x19, #40]
  44b674:	sxtw	x8, w8
  44b678:	cmp	w8, w9
  44b67c:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b680:	ldr	x9, [x19, #32]
  44b684:	mov	w10, #0x18                  	// #24
  44b688:	add	w11, w8, #0x1
  44b68c:	madd	x20, x8, x10, x9
  44b690:	str	wzr, [x20, #4]
  44b694:	str	w11, [x19, #40]
  44b698:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b69c:	mov	w10, #0x10                  	// #16
  44b6a0:	b	44b87c <feof@plt+0x4879c>
  44b6a4:	mov	x8, x14
  44b6a8:	cmp	w13, #0x0
  44b6ac:	b.le	44b7f8 <feof@plt+0x48718>
  44b6b0:	ldrb	w15, [x12]
  44b6b4:	mov	w13, w13
  44b6b8:	cmp	w15, #0x24
  44b6bc:	b.eq	44b6f8 <feof@plt+0x48618>  // b.none
  44b6c0:	cbz	w15, 44bebc <feof@plt+0x48ddc>
  44b6c4:	mov	w14, #0x1                   	// #1
  44b6c8:	ands	w15, w15, #0xff
  44b6cc:	b.eq	44b6f0 <feof@plt+0x48610>  // b.none
  44b6d0:	cmp	w15, #0x24
  44b6d4:	b.eq	44b6f0 <feof@plt+0x48610>  // b.none
  44b6d8:	cmp	x13, x14
  44b6dc:	b.eq	44b71c <feof@plt+0x4863c>  // b.none
  44b6e0:	ldrb	w15, [x12, x14]
  44b6e4:	add	x14, x14, #0x1
  44b6e8:	ands	w15, w15, #0xff
  44b6ec:	b.ne	44b6d0 <feof@plt+0x485f0>  // b.any
  44b6f0:	sub	w15, w14, #0x1
  44b6f4:	b	44b720 <feof@plt+0x48640>
  44b6f8:	ldrb	w12, [x12, #1]
  44b6fc:	cmp	w12, #0x24
  44b700:	b.eq	44b770 <feof@plt+0x48690>  // b.none
  44b704:	cmp	w12, #0x53
  44b708:	b.eq	44b76c <feof@plt+0x4868c>  // b.none
  44b70c:	cmp	w12, #0x5f
  44b710:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44b714:	mov	w12, #0x2e                  	// #46
  44b718:	b	44b770 <feof@plt+0x48690>
  44b71c:	mov	w15, w13
  44b720:	ldp	w16, w14, [x19, #40]
  44b724:	sxtw	x16, w16
  44b728:	cmp	w16, w14
  44b72c:	b.ge	44bd30 <feof@plt+0x48c50>  // b.tcont
  44b730:	ldr	x17, [x19, #32]
  44b734:	add	w18, w16, #0x1
  44b738:	madd	x14, x16, x9, x17
  44b73c:	str	wzr, [x14, #4]
  44b740:	str	w18, [x19, #40]
  44b744:	cbz	w15, 44bd30 <feof@plt+0x48c50>
  44b748:	cbz	x17, 44bd30 <feof@plt+0x48c50>
  44b74c:	madd	x16, x16, x9, x17
  44b750:	str	xzr, [x14]
  44b754:	str	x12, [x16, #8]
  44b758:	str	w15, [x16, #16]
  44b75c:	ldr	x12, [x22]
  44b760:	sub	w13, w13, w15
  44b764:	add	x12, x12, w15, uxtw
  44b768:	b	44b7b0 <feof@plt+0x486d0>
  44b76c:	mov	w12, #0x2f                  	// #47
  44b770:	ldp	w15, w14, [x19, #40]
  44b774:	sxtw	x15, w15
  44b778:	cmp	w15, w14
  44b77c:	b.ge	44bd40 <feof@plt+0x48c60>  // b.tcont
  44b780:	ldr	x16, [x19, #32]
  44b784:	add	w17, w15, #0x1
  44b788:	madd	x14, x15, x9, x16
  44b78c:	str	wzr, [x14, #4]
  44b790:	str	w17, [x19, #40]
  44b794:	cbz	x16, 44bd40 <feof@plt+0x48c60>
  44b798:	madd	x15, x15, x9, x16
  44b79c:	str	w10, [x14]
  44b7a0:	str	w12, [x15, #8]
  44b7a4:	ldr	x12, [x22]
  44b7a8:	sub	w13, w13, #0x2
  44b7ac:	add	x12, x12, #0x2
  44b7b0:	str	x12, [x22]
  44b7b4:	cbz	x8, 44b6a4 <feof@plt+0x485c4>
  44b7b8:	ldp	w15, w16, [x19, #40]
  44b7bc:	sxtw	x15, w15
  44b7c0:	cmp	w15, w16
  44b7c4:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b7c8:	ldr	x16, [x19, #32]
  44b7cc:	add	w18, w15, #0x1
  44b7d0:	madd	x17, x15, x9, x16
  44b7d4:	str	wzr, [x17, #4]
  44b7d8:	str	w18, [x19, #40]
  44b7dc:	cbz	x16, 44bebc <feof@plt+0x48ddc>
  44b7e0:	madd	x15, x15, x9, x16
  44b7e4:	str	w11, [x17]
  44b7e8:	stp	x8, x14, [x15, #8]
  44b7ec:	mov	x8, x17
  44b7f0:	cmp	w13, #0x0
  44b7f4:	b.gt	44b6b0 <feof@plt+0x485d0>
  44b7f8:	ldp	w9, w10, [x19, #40]
  44b7fc:	sxtw	x9, w9
  44b800:	cmp	w9, w10
  44b804:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b808:	ldr	x10, [x19, #32]
  44b80c:	mov	w11, #0x18                  	// #24
  44b810:	add	w12, w9, #0x1
  44b814:	madd	x20, x9, x11, x10
  44b818:	str	wzr, [x20, #4]
  44b81c:	str	w12, [x19, #40]
  44b820:	cbz	x10, 44bebc <feof@plt+0x48ddc>
  44b824:	mov	w12, #0x18                  	// #24
  44b828:	mov	w11, #0x3f                  	// #63
  44b82c:	madd	x9, x9, x12, x10
  44b830:	str	w11, [x20]
  44b834:	stp	x8, xzr, [x9, #8]
  44b838:	b	44bec0 <feof@plt+0x48de0>
  44b83c:	mov	x0, x19
  44b840:	mov	w1, wzr
  44b844:	bl	44ad38 <feof@plt+0x47c58>
  44b848:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b84c:	ldp	w8, w9, [x19, #40]
  44b850:	sxtw	x8, w8
  44b854:	cmp	w8, w9
  44b858:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b85c:	ldr	x9, [x19, #32]
  44b860:	mov	w10, #0x18                  	// #24
  44b864:	add	w11, w8, #0x1
  44b868:	madd	x20, x8, x10, x9
  44b86c:	str	wzr, [x20, #4]
  44b870:	str	w11, [x19, #40]
  44b874:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b878:	mov	w10, #0x49                  	// #73
  44b87c:	mov	w11, #0x18                  	// #24
  44b880:	madd	x8, x8, x11, x9
  44b884:	str	w10, [x20]
  44b888:	stp	x0, xzr, [x8, #8]
  44b88c:	b	44bec0 <feof@plt+0x48de0>
  44b890:	mov	w8, wzr
  44b894:	sub	w11, w9, #0x30
  44b898:	cmp	w11, #0x9
  44b89c:	b.hi	44b900 <feof@plt+0x48820>  // b.pmore
  44b8a0:	mov	w12, #0x2f                  	// #47
  44b8a4:	mov	w13, #0x6667                	// #26215
  44b8a8:	mov	w11, wzr
  44b8ac:	movk	w12, #0x8000, lsl #16
  44b8b0:	add	x10, x10, #0x1
  44b8b4:	movk	w13, #0x6666, lsl #16
  44b8b8:	mov	w14, #0xa                   	// #10
  44b8bc:	and	w15, w9, #0xff
  44b8c0:	sub	w9, w12, w15
  44b8c4:	smull	x9, w9, w13
  44b8c8:	lsr	x16, x9, #63
  44b8cc:	asr	x9, x9, #34
  44b8d0:	add	w9, w9, w16
  44b8d4:	cmp	w11, w9
  44b8d8:	b.gt	44bebc <feof@plt+0x48ddc>
  44b8dc:	str	x10, [x22]
  44b8e0:	ldrb	w9, [x10], #1
  44b8e4:	madd	w11, w11, w14, w15
  44b8e8:	sub	w11, w11, #0x30
  44b8ec:	sub	w15, w9, #0x30
  44b8f0:	cmp	w15, #0xa
  44b8f4:	b.cc	44b8bc <feof@plt+0x487dc>  // b.lo, b.ul, b.last
  44b8f8:	sub	x10, x10, #0x1
  44b8fc:	b	44b904 <feof@plt+0x48824>
  44b900:	mov	w11, wzr
  44b904:	cmp	w8, #0x0
  44b908:	cneg	w8, w11, ne  // ne = any
  44b90c:	mov	x20, xzr
  44b910:	tbnz	w8, #31, 44bec0 <feof@plt+0x48de0>
  44b914:	cmp	w9, #0x5f
  44b918:	b.ne	44bec0 <feof@plt+0x48de0>  // b.any
  44b91c:	add	x8, x10, #0x1
  44b920:	mov	x0, x19
  44b924:	str	x8, [x19, #24]
  44b928:	bl	44bed4 <feof@plt+0x48df4>
  44b92c:	ldr	w8, [x19, #72]
  44b930:	mov	x20, xzr
  44b934:	add	w8, w8, #0x5
  44b938:	str	w8, [x19, #72]
  44b93c:	cbz	x21, 44bec0 <feof@plt+0x48de0>
  44b940:	cbz	x0, 44bec0 <feof@plt+0x48de0>
  44b944:	ldp	w8, w9, [x19, #40]
  44b948:	sxtw	x8, w8
  44b94c:	cmp	w8, w9
  44b950:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44b954:	ldr	x9, [x19, #32]
  44b958:	mov	w10, #0x18                  	// #24
  44b95c:	add	w11, w8, #0x1
  44b960:	madd	x20, x8, x10, x9
  44b964:	str	wzr, [x20, #4]
  44b968:	str	w11, [x19, #40]
  44b96c:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44b970:	mov	w11, #0x18                  	// #24
  44b974:	mov	w10, #0xb                   	// #11
  44b978:	madd	x8, x8, x11, x9
  44b97c:	str	w10, [x20]
  44b980:	stp	x0, x21, [x8, #8]
  44b984:	b	44bec0 <feof@plt+0x48de0>
  44b988:	cmp	w11, #0x35
  44b98c:	mov	w10, #0x1                   	// #1
  44b990:	b.hi	44b9b4 <feof@plt+0x488d4>  // b.pmore
  44b994:	mov	w11, w11
  44b998:	mov	w12, #0x1                   	// #1
  44b99c:	lsl	x11, x12, x11
  44b9a0:	mov	x12, #0x180                 	// #384
  44b9a4:	movk	x12, #0x20, lsl #48
  44b9a8:	tst	x11, x12
  44b9ac:	b.eq	44b9b4 <feof@plt+0x488d4>  // b.none
  44b9b0:	mov	w10, wzr
  44b9b4:	cmp	w9, #0x4a
  44b9b8:	b.ne	44b9c8 <feof@plt+0x488e8>  // b.any
  44b9bc:	add	x8, x8, #0x1
  44b9c0:	str	x8, [x22]
  44b9c4:	b	44b9cc <feof@plt+0x488ec>
  44b9c8:	cbz	w10, 44b9e0 <feof@plt+0x48900>
  44b9cc:	mov	x0, x19
  44b9d0:	bl	44bed4 <feof@plt+0x48df4>
  44b9d4:	mov	x22, x0
  44b9d8:	cbnz	x0, 44b9e4 <feof@plt+0x48904>
  44b9dc:	b	44bebc <feof@plt+0x48ddc>
  44b9e0:	mov	x22, xzr
  44b9e4:	mov	x0, x19
  44b9e8:	bl	44f6e4 <feof@plt+0x4c604>
  44b9ec:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44b9f0:	ldp	w9, w8, [x19, #40]
  44b9f4:	sxtw	x9, w9
  44b9f8:	cmp	w9, w8
  44b9fc:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44ba00:	ldr	x10, [x19, #32]
  44ba04:	mov	w8, #0x18                  	// #24
  44ba08:	add	w11, w9, #0x1
  44ba0c:	madd	x8, x9, x8, x10
  44ba10:	str	wzr, [x8, #4]
  44ba14:	str	w11, [x19, #40]
  44ba18:	cbz	x10, 44bebc <feof@plt+0x48ddc>
  44ba1c:	mov	w12, #0x18                  	// #24
  44ba20:	mov	w11, #0x29                  	// #41
  44ba24:	madd	x9, x9, x12, x10
  44ba28:	str	w11, [x8]
  44ba2c:	str	x22, [x9, #8]!
  44ba30:	str	x0, [x9, #8]
  44ba34:	cbnz	w21, 44ba48 <feof@plt+0x48968>
  44ba38:	ldr	w10, [x20]
  44ba3c:	cmp	w10, #0x2
  44ba40:	b.ne	44ba48 <feof@plt+0x48968>  // b.any
  44ba44:	str	xzr, [x9]
  44ba48:	ldp	w9, w10, [x19, #40]
  44ba4c:	sxtw	x9, w9
  44ba50:	cmp	w9, w10
  44ba54:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44ba58:	ldr	x10, [x19, #32]
  44ba5c:	mov	w11, #0x18                  	// #24
  44ba60:	add	w12, w9, #0x1
  44ba64:	madd	x11, x9, x11, x10
  44ba68:	str	wzr, [x11, #4]
  44ba6c:	str	w12, [x19, #40]
  44ba70:	cbz	x10, 44bebc <feof@plt+0x48ddc>
  44ba74:	mov	w13, #0x18                  	// #24
  44ba78:	mov	w12, #0x3                   	// #3
  44ba7c:	madd	x9, x9, x13, x10
  44ba80:	str	w12, [x11]
  44ba84:	stp	x20, x8, [x9, #8]
  44ba88:	mov	x20, x11
  44ba8c:	b	44bec0 <feof@plt+0x48de0>
  44ba90:	mov	w11, wzr
  44ba94:	sub	w13, w12, #0x30
  44ba98:	cmp	w13, #0x9
  44ba9c:	b.hi	44bafc <feof@plt+0x48a1c>  // b.pmore
  44baa0:	mov	w14, #0x2f                  	// #47
  44baa4:	mov	w16, #0x6667                	// #26215
  44baa8:	mov	w13, wzr
  44baac:	movk	w14, #0x8000, lsl #16
  44bab0:	add	x15, x15, #0x1
  44bab4:	movk	w16, #0x6666, lsl #16
  44bab8:	mov	w17, #0xa                   	// #10
  44babc:	and	w18, w12, #0xff
  44bac0:	sub	w12, w14, w18
  44bac4:	smull	x12, w12, w16
  44bac8:	lsr	x1, x12, #63
  44bacc:	asr	x12, x12, #34
  44bad0:	add	w12, w12, w1
  44bad4:	cmp	w13, w12
  44bad8:	b.gt	44bcd8 <feof@plt+0x48bf8>
  44badc:	str	x15, [x22]
  44bae0:	ldrb	w12, [x15], #1
  44bae4:	madd	w13, w13, w17, w18
  44bae8:	sub	w13, w13, #0x30
  44baec:	sub	w18, w12, #0x30
  44baf0:	cmp	w18, #0xa
  44baf4:	b.cc	44babc <feof@plt+0x489dc>  // b.lo, b.ul, b.last
  44baf8:	b	44bb00 <feof@plt+0x48a20>
  44bafc:	mov	w13, wzr
  44bb00:	cmp	w11, #0x0
  44bb04:	cneg	w11, w13, ne  // ne = any
  44bb08:	sxtw	x11, w11
  44bb0c:	b	44bcdc <feof@plt+0x48bfc>
  44bb10:	ldrb	w10, [x8]
  44bb14:	cmp	w10, #0x6e
  44bb18:	b.ne	44bb28 <feof@plt+0x48a48>  // b.any
  44bb1c:	add	x8, x9, #0x4
  44bb20:	str	x8, [x22]
  44bb24:	ldrb	w10, [x9, #4]
  44bb28:	sub	w9, w10, #0x30
  44bb2c:	cmp	w9, #0x9
  44bb30:	b.hi	44bb90 <feof@plt+0x48ab0>  // b.pmore
  44bb34:	mov	w9, #0x2f                  	// #47
  44bb38:	mov	w12, #0x6667                	// #26215
  44bb3c:	mov	w11, wzr
  44bb40:	movk	w9, #0x8000, lsl #16
  44bb44:	add	x8, x8, #0x1
  44bb48:	movk	w12, #0x6666, lsl #16
  44bb4c:	mov	w13, #0xa                   	// #10
  44bb50:	and	w14, w10, #0xff
  44bb54:	sub	w10, w9, w14
  44bb58:	smull	x10, w10, w12
  44bb5c:	lsr	x15, x10, #63
  44bb60:	asr	x10, x10, #34
  44bb64:	add	w10, w10, w15
  44bb68:	cmp	w11, w10
  44bb6c:	b.gt	44bebc <feof@plt+0x48ddc>
  44bb70:	str	x8, [x22]
  44bb74:	ldrb	w10, [x8], #1
  44bb78:	madd	w11, w11, w13, w14
  44bb7c:	sub	w11, w11, #0x30
  44bb80:	sub	w14, w10, #0x30
  44bb84:	cmp	w14, #0xa
  44bb88:	b.cc	44bb50 <feof@plt+0x48a70>  // b.lo, b.ul, b.last
  44bb8c:	sub	x8, x8, #0x1
  44bb90:	cmp	w10, #0x5f
  44bb94:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44bb98:	add	x9, x8, #0x1
  44bb9c:	str	x9, [x22]
  44bba0:	ldrb	w10, [x8, #1]
  44bba4:	cmp	w10, #0x6e
  44bba8:	b.ne	44bbb8 <feof@plt+0x48ad8>  // b.any
  44bbac:	add	x9, x8, #0x2
  44bbb0:	str	x9, [x22]
  44bbb4:	ldrb	w10, [x8, #2]
  44bbb8:	mov	x8, x9
  44bbbc:	sub	w9, w10, #0x30
  44bbc0:	cmp	w9, #0x9
  44bbc4:	b.hi	44bc24 <feof@plt+0x48b44>  // b.pmore
  44bbc8:	mov	w9, #0x2f                  	// #47
  44bbcc:	mov	w12, #0x6667                	// #26215
  44bbd0:	mov	w11, wzr
  44bbd4:	movk	w9, #0x8000, lsl #16
  44bbd8:	add	x8, x8, #0x1
  44bbdc:	movk	w12, #0x6666, lsl #16
  44bbe0:	mov	w13, #0xa                   	// #10
  44bbe4:	and	w14, w10, #0xff
  44bbe8:	sub	w10, w9, w14
  44bbec:	smull	x10, w10, w12
  44bbf0:	lsr	x15, x10, #63
  44bbf4:	asr	x10, x10, #34
  44bbf8:	add	w10, w10, w15
  44bbfc:	cmp	w11, w10
  44bc00:	b.gt	44bebc <feof@plt+0x48ddc>
  44bc04:	str	x8, [x22]
  44bc08:	ldrb	w10, [x8], #1
  44bc0c:	madd	w11, w11, w13, w14
  44bc10:	sub	w11, w11, #0x30
  44bc14:	sub	w14, w10, #0x30
  44bc18:	cmp	w14, #0xa
  44bc1c:	b.cc	44bbe4 <feof@plt+0x48b04>  // b.lo, b.ul, b.last
  44bc20:	sub	x8, x8, #0x1
  44bc24:	cmp	w10, #0x5f
  44bc28:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44bc2c:	add	x9, x8, #0x1
  44bc30:	str	x9, [x22]
  44bc34:	ldrb	w9, [x8, #1]
  44bc38:	cbz	w9, 44bebc <feof@plt+0x48ddc>
  44bc3c:	add	x9, x8, #0x2
  44bc40:	str	x9, [x22]
  44bc44:	ldrb	w10, [x8, #1]
  44bc48:	cmp	w10, #0x76
  44bc4c:	b.eq	44bd54 <feof@plt+0x48c74>  // b.none
  44bc50:	cmp	w10, #0x68
  44bc54:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44bc58:	ldrb	w10, [x9]
  44bc5c:	cmp	w10, #0x6e
  44bc60:	b.ne	44bc70 <feof@plt+0x48b90>  // b.any
  44bc64:	add	x9, x8, #0x3
  44bc68:	str	x9, [x22]
  44bc6c:	ldrb	w10, [x8, #3]
  44bc70:	sub	w8, w10, #0x30
  44bc74:	cmp	w8, #0x9
  44bc78:	b.hi	44be68 <feof@plt+0x48d88>  // b.pmore
  44bc7c:	mov	w11, #0x2f                  	// #47
  44bc80:	add	x8, x9, #0x1
  44bc84:	mov	w9, #0x6667                	// #26215
  44bc88:	mov	w12, wzr
  44bc8c:	movk	w11, #0x8000, lsl #16
  44bc90:	movk	w9, #0x6666, lsl #16
  44bc94:	mov	w13, #0xa                   	// #10
  44bc98:	and	w14, w10, #0xff
  44bc9c:	sub	w10, w11, w14
  44bca0:	smull	x10, w10, w9
  44bca4:	lsr	x15, x10, #63
  44bca8:	asr	x10, x10, #34
  44bcac:	add	w10, w10, w15
  44bcb0:	cmp	w12, w10
  44bcb4:	b.gt	44bebc <feof@plt+0x48ddc>
  44bcb8:	str	x8, [x22]
  44bcbc:	ldrb	w10, [x8], #1
  44bcc0:	madd	w12, w12, w13, w14
  44bcc4:	sub	w12, w12, #0x30
  44bcc8:	sub	w14, w10, #0x30
  44bccc:	cmp	w14, #0xa
  44bcd0:	b.cc	44bc98 <feof@plt+0x48bb8>  // b.lo, b.ul, b.last
  44bcd4:	b	44be64 <feof@plt+0x48d84>
  44bcd8:	mov	x11, #0xffffffffffffffff    	// #-1
  44bcdc:	mov	w12, #0x18                  	// #24
  44bce0:	madd	x9, x9, x12, x10
  44bce4:	str	x11, [x9, #8]
  44bce8:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44bcec:	ldp	w9, w10, [x19, #40]
  44bcf0:	sxtw	x9, w9
  44bcf4:	cmp	w9, w10
  44bcf8:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44bcfc:	ldr	x10, [x19, #32]
  44bd00:	mov	w11, #0x18                  	// #24
  44bd04:	add	w12, w9, #0x1
  44bd08:	madd	x20, x9, x11, x10
  44bd0c:	str	wzr, [x20, #4]
  44bd10:	str	w12, [x19, #40]
  44bd14:	cbz	x10, 44bebc <feof@plt+0x48ddc>
  44bd18:	mov	w12, #0x18                  	// #24
  44bd1c:	mov	w11, #0x16                  	// #22
  44bd20:	madd	x9, x9, x12, x10
  44bd24:	str	w11, [x20]
  44bd28:	stp	x0, x8, [x9, #8]
  44bd2c:	b	44bec0 <feof@plt+0x48de0>
  44bd30:	ldr	x8, [x22]
  44bd34:	mov	x20, xzr
  44bd38:	add	x8, x8, w15, uxtw
  44bd3c:	b	44bd4c <feof@plt+0x48c6c>
  44bd40:	ldr	x8, [x22]
  44bd44:	mov	x20, xzr
  44bd48:	add	x8, x8, #0x2
  44bd4c:	str	x8, [x22]
  44bd50:	b	44bec0 <feof@plt+0x48de0>
  44bd54:	ldrb	w10, [x9]
  44bd58:	cmp	w10, #0x6e
  44bd5c:	b.ne	44bd6c <feof@plt+0x48c8c>  // b.any
  44bd60:	add	x9, x8, #0x3
  44bd64:	str	x9, [x22]
  44bd68:	ldrb	w10, [x8, #3]
  44bd6c:	sub	w8, w10, #0x30
  44bd70:	cmp	w8, #0x9
  44bd74:	b.hi	44bdd4 <feof@plt+0x48cf4>  // b.pmore
  44bd78:	mov	w11, #0x2f                  	// #47
  44bd7c:	add	x8, x9, #0x1
  44bd80:	mov	w9, #0x6667                	// #26215
  44bd84:	mov	w12, wzr
  44bd88:	movk	w11, #0x8000, lsl #16
  44bd8c:	movk	w9, #0x6666, lsl #16
  44bd90:	mov	w13, #0xa                   	// #10
  44bd94:	and	w14, w10, #0xff
  44bd98:	sub	w10, w11, w14
  44bd9c:	smull	x10, w10, w9
  44bda0:	lsr	x15, x10, #63
  44bda4:	asr	x10, x10, #34
  44bda8:	add	w10, w10, w15
  44bdac:	cmp	w12, w10
  44bdb0:	b.gt	44bebc <feof@plt+0x48ddc>
  44bdb4:	str	x8, [x22]
  44bdb8:	ldrb	w10, [x8], #1
  44bdbc:	madd	w12, w12, w13, w14
  44bdc0:	sub	w12, w12, #0x30
  44bdc4:	sub	w14, w10, #0x30
  44bdc8:	cmp	w14, #0xa
  44bdcc:	b.cc	44bd94 <feof@plt+0x48cb4>  // b.lo, b.ul, b.last
  44bdd0:	sub	x9, x8, #0x1
  44bdd4:	cmp	w10, #0x5f
  44bdd8:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44bddc:	add	x8, x9, #0x1
  44bde0:	str	x8, [x22]
  44bde4:	ldrb	w10, [x9, #1]
  44bde8:	cmp	w10, #0x6e
  44bdec:	b.ne	44bdfc <feof@plt+0x48d1c>  // b.any
  44bdf0:	add	x8, x9, #0x2
  44bdf4:	str	x8, [x22]
  44bdf8:	ldrb	w10, [x9, #2]
  44bdfc:	mov	x9, x8
  44be00:	sub	w8, w10, #0x30
  44be04:	cmp	w8, #0x9
  44be08:	b.hi	44be68 <feof@plt+0x48d88>  // b.pmore
  44be0c:	mov	w11, #0x2f                  	// #47
  44be10:	add	x8, x9, #0x1
  44be14:	mov	w9, #0x6667                	// #26215
  44be18:	mov	w12, wzr
  44be1c:	movk	w11, #0x8000, lsl #16
  44be20:	movk	w9, #0x6666, lsl #16
  44be24:	mov	w13, #0xa                   	// #10
  44be28:	and	w14, w10, #0xff
  44be2c:	sub	w10, w11, w14
  44be30:	smull	x10, w10, w9
  44be34:	lsr	x15, x10, #63
  44be38:	asr	x10, x10, #34
  44be3c:	add	w10, w10, w15
  44be40:	cmp	w12, w10
  44be44:	b.gt	44bebc <feof@plt+0x48ddc>
  44be48:	str	x8, [x22]
  44be4c:	ldrb	w10, [x8], #1
  44be50:	madd	w12, w12, w13, w14
  44be54:	sub	w12, w12, #0x30
  44be58:	sub	w14, w10, #0x30
  44be5c:	cmp	w14, #0xa
  44be60:	b.cc	44be28 <feof@plt+0x48d48>  // b.lo, b.ul, b.last
  44be64:	sub	x9, x8, #0x1
  44be68:	cmp	w10, #0x5f
  44be6c:	b.ne	44bebc <feof@plt+0x48ddc>  // b.any
  44be70:	add	x8, x9, #0x1
  44be74:	mov	x0, x19
  44be78:	mov	w1, wzr
  44be7c:	str	x8, [x19, #24]
  44be80:	bl	44ad38 <feof@plt+0x47c58>
  44be84:	cbz	x0, 44bebc <feof@plt+0x48ddc>
  44be88:	ldp	w8, w9, [x19, #40]
  44be8c:	sxtw	x8, w8
  44be90:	cmp	w8, w9
  44be94:	b.ge	44bebc <feof@plt+0x48ddc>  // b.tcont
  44be98:	ldr	x9, [x19, #32]
  44be9c:	mov	w10, #0x18                  	// #24
  44bea0:	add	w11, w8, #0x1
  44bea4:	madd	x20, x8, x10, x9
  44bea8:	str	wzr, [x20, #4]
  44beac:	str	w11, [x19, #40]
  44beb0:	cbz	x9, 44bebc <feof@plt+0x48ddc>
  44beb4:	mov	w10, #0x11                  	// #17
  44beb8:	b	44b87c <feof@plt+0x4879c>
  44bebc:	mov	x20, xzr
  44bec0:	mov	x0, x20
  44bec4:	ldp	x20, x19, [sp, #32]
  44bec8:	ldp	x22, x21, [sp, #16]
  44becc:	ldp	x29, x30, [sp], #48
  44bed0:	ret
  44bed4:	sub	sp, sp, #0x50
  44bed8:	stp	x29, x30, [sp, #16]
  44bedc:	stp	x24, x23, [sp, #32]
  44bee0:	stp	x22, x21, [sp, #48]
  44bee4:	stp	x20, x19, [sp, #64]
  44bee8:	mov	x22, x0
  44beec:	ldr	x8, [x22, #24]!
  44bef0:	mov	x21, xzr
  44bef4:	add	x29, sp, #0x10
  44bef8:	ldrb	w9, [x8]
  44befc:	sub	w10, w9, #0x30
  44bf00:	cmp	w10, #0x4a
  44bf04:	b.hi	44cf48 <feof@plt+0x49e68>  // b.pmore
  44bf08:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44bf0c:	add	x11, x11, #0xfbc
  44bf10:	adr	x12, 44bf24 <feof@plt+0x48e44>
  44bf14:	ldrh	w13, [x11, x10, lsl #1]
  44bf18:	add	x12, x12, x13, lsl #2
  44bf1c:	mov	x19, x0
  44bf20:	br	x12
  44bf24:	ldp	w10, w11, [x19, #40]
  44bf28:	sxtw	x10, w10
  44bf2c:	cmp	w10, w11
  44bf30:	b.ge	44bf7c <feof@plt+0x48e9c>  // b.tcont
  44bf34:	ldr	x11, [x19, #32]
  44bf38:	mov	w12, #0x18                  	// #24
  44bf3c:	add	w13, w10, #0x1
  44bf40:	madd	x21, x10, x12, x11
  44bf44:	str	wzr, [x21, #4]
  44bf48:	str	w13, [x19, #40]
  44bf4c:	cbz	x11, 44bf7c <feof@plt+0x48e9c>
  44bf50:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x11838>
  44bf54:	add	x8, x8, #0xac8
  44bf58:	mov	w13, #0x18                  	// #24
  44bf5c:	add	x8, x8, x9, lsl #5
  44bf60:	mov	w12, #0x27                  	// #39
  44bf64:	sub	x8, x8, #0xc20
  44bf68:	madd	x9, x10, x13, x11
  44bf6c:	str	w12, [x21]
  44bf70:	str	x8, [x9, #8]
  44bf74:	ldr	x8, [x22]
  44bf78:	b	44bf80 <feof@plt+0x48ea0>
  44bf7c:	mov	x21, xzr
  44bf80:	str	x21, [sp, #8]
  44bf84:	ldr	x9, [x21, #8]
  44bf88:	ldr	w10, [x19, #72]
  44bf8c:	add	x8, x8, #0x1
  44bf90:	ldr	w9, [x9, #8]
  44bf94:	str	x8, [x19, #24]
  44bf98:	add	w9, w10, w9
  44bf9c:	str	w9, [x19, #72]
  44bfa0:	b	44cf48 <feof@plt+0x49e68>
  44bfa4:	mov	x0, x19
  44bfa8:	bl	44e118 <feof@plt+0x4b038>
  44bfac:	mov	x20, x0
  44bfb0:	str	x0, [sp, #8]
  44bfb4:	b	44cf18 <feof@plt+0x49e38>
  44bfb8:	add	x9, x8, #0x1
  44bfbc:	str	x9, [x22]
  44bfc0:	ldrb	w10, [x8, #1]
  44bfc4:	cmp	w10, #0x5f
  44bfc8:	b.ne	44c434 <feof@plt+0x49354>  // b.any
  44bfcc:	mov	x21, xzr
  44bfd0:	b	44c5c8 <feof@plt+0x494e8>
  44bfd4:	add	x8, x8, #0x1
  44bfd8:	mov	x0, x19
  44bfdc:	str	x8, [x19, #24]
  44bfe0:	bl	44bed4 <feof@plt+0x48df4>
  44bfe4:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44bfe8:	ldp	w8, w9, [x19, #40]
  44bfec:	sxtw	x8, w8
  44bff0:	cmp	w8, w9
  44bff4:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44bff8:	ldr	x9, [x19, #32]
  44bffc:	mov	w10, #0x18                  	// #24
  44c000:	add	w11, w8, #0x1
  44c004:	madd	x20, x8, x10, x9
  44c008:	str	wzr, [x20, #4]
  44c00c:	str	w11, [x19, #40]
  44c010:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c014:	mov	w11, #0x18                  	// #24
  44c018:	mov	w10, #0x25                  	// #37
  44c01c:	b	44c420 <feof@plt+0x49340>
  44c020:	mov	x9, x8
  44c024:	ldrb	w10, [x9, #1]!
  44c028:	sub	w10, w10, #0x4f
  44c02c:	cmp	w10, #0x29
  44c030:	b.hi	44c630 <feof@plt+0x49550>  // b.pmore
  44c034:	mov	w11, #0x1                   	// #1
  44c038:	lsl	x10, x11, x10
  44c03c:	mov	x11, #0x1                   	// #1
  44c040:	movk	x11, #0x301, lsl #32
  44c044:	tst	x10, x11
  44c048:	b.eq	44c630 <feof@plt+0x49550>  // b.none
  44c04c:	add	x1, sp, #0x8
  44c050:	mov	x0, x19
  44c054:	mov	w2, wzr
  44c058:	bl	44cf64 <feof@plt+0x49e84>
  44c05c:	cbz	x0, 44cf44 <feof@plt+0x49e64>
  44c060:	ldr	x8, [x22]
  44c064:	mov	x20, x0
  44c068:	mov	x0, x19
  44c06c:	ldrb	w8, [x8]
  44c070:	cmp	w8, #0x46
  44c074:	b.ne	44c080 <feof@plt+0x48fa0>  // b.any
  44c078:	bl	44d1e4 <feof@plt+0x4a104>
  44c07c:	b	44c084 <feof@plt+0x48fa4>
  44c080:	bl	44bed4 <feof@plt+0x48df4>
  44c084:	str	x0, [x20]
  44c088:	cbz	x0, 44cf44 <feof@plt+0x49e64>
  44c08c:	ldr	w8, [x0]
  44c090:	sub	w8, w8, #0x1f
  44c094:	cmp	w8, #0x1
  44c098:	b.hi	44c0b4 <feof@plt+0x48fd4>  // b.pmore
  44c09c:	ldr	x8, [sp, #8]
  44c0a0:	ldr	x9, [x0, #8]
  44c0a4:	str	x8, [x0, #8]
  44c0a8:	ldr	x8, [x20]
  44c0ac:	str	x8, [sp, #8]
  44c0b0:	str	x9, [x20]
  44c0b4:	ldr	x8, [sp, #8]
  44c0b8:	cbz	x8, 44cf44 <feof@plt+0x49e64>
  44c0bc:	ldp	w9, w10, [x19, #56]
  44c0c0:	sxtw	x9, w9
  44c0c4:	cmp	w9, w10
  44c0c8:	b.ge	44cf44 <feof@plt+0x49e64>  // b.tcont
  44c0cc:	ldr	x10, [x19, #48]
  44c0d0:	add	w11, w9, #0x1
  44c0d4:	str	x8, [x10, x9, lsl #3]
  44c0d8:	str	w11, [x19, #56]
  44c0dc:	b	44cf3c <feof@plt+0x49e5c>
  44c0e0:	mov	x0, x19
  44c0e4:	bl	44d1e4 <feof@plt+0x4a104>
  44c0e8:	b	44bfac <feof@plt+0x48ecc>
  44c0ec:	add	x8, x8, #0x1
  44c0f0:	mov	x0, x19
  44c0f4:	str	x8, [x19, #24]
  44c0f8:	bl	44bed4 <feof@plt+0x48df4>
  44c0fc:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c100:	ldp	w8, w9, [x19, #40]
  44c104:	sxtw	x8, w8
  44c108:	cmp	w8, w9
  44c10c:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c110:	ldr	x9, [x19, #32]
  44c114:	mov	w10, #0x18                  	// #24
  44c118:	add	w11, w8, #0x1
  44c11c:	madd	x20, x8, x10, x9
  44c120:	str	wzr, [x20, #4]
  44c124:	str	w11, [x19, #40]
  44c128:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c12c:	mov	w11, #0x18                  	// #24
  44c130:	mov	w10, #0x26                  	// #38
  44c134:	b	44c420 <feof@plt+0x49340>
  44c138:	add	x8, x8, #0x1
  44c13c:	mov	x0, x19
  44c140:	str	x8, [x19, #24]
  44c144:	bl	44bed4 <feof@plt+0x48df4>
  44c148:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c14c:	mov	x21, x0
  44c150:	mov	x0, x19
  44c154:	bl	44bed4 <feof@plt+0x48df4>
  44c158:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c15c:	ldp	w8, w9, [x19, #40]
  44c160:	sxtw	x8, w8
  44c164:	cmp	w8, w9
  44c168:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c16c:	ldr	x9, [x19, #32]
  44c170:	mov	w10, #0x18                  	// #24
  44c174:	add	w11, w8, #0x1
  44c178:	madd	x20, x8, x10, x9
  44c17c:	str	wzr, [x20, #4]
  44c180:	str	w11, [x19, #40]
  44c184:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c188:	mov	w11, #0x18                  	// #24
  44c18c:	mov	w10, #0x2b                  	// #43
  44c190:	madd	x8, x8, x11, x9
  44c194:	str	w10, [x20]
  44c198:	stp	x21, x0, [x8, #8]
  44c19c:	str	x20, [sp, #8]
  44c1a0:	b	44cf18 <feof@plt+0x49e38>
  44c1a4:	add	x8, x8, #0x1
  44c1a8:	mov	x0, x19
  44c1ac:	str	x8, [x19, #24]
  44c1b0:	bl	44bed4 <feof@plt+0x48df4>
  44c1b4:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c1b8:	ldp	w8, w9, [x19, #40]
  44c1bc:	sxtw	x8, w8
  44c1c0:	cmp	w8, w9
  44c1c4:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c1c8:	ldr	x9, [x19, #32]
  44c1cc:	mov	w10, #0x18                  	// #24
  44c1d0:	add	w11, w8, #0x1
  44c1d4:	madd	x20, x8, x10, x9
  44c1d8:	str	wzr, [x20, #4]
  44c1dc:	str	w11, [x19, #40]
  44c1e0:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c1e4:	mov	w11, #0x18                  	// #24
  44c1e8:	mov	w10, #0x24                  	// #36
  44c1ec:	b	44c420 <feof@plt+0x49340>
  44c1f0:	add	x8, x8, #0x1
  44c1f4:	mov	x0, x19
  44c1f8:	str	x8, [x19, #24]
  44c1fc:	bl	44bed4 <feof@plt+0x48df4>
  44c200:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c204:	ldp	w8, w9, [x19, #40]
  44c208:	sxtw	x8, w8
  44c20c:	cmp	w8, w9
  44c210:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c214:	ldr	x9, [x19, #32]
  44c218:	mov	w10, #0x18                  	// #24
  44c21c:	add	w11, w8, #0x1
  44c220:	madd	x20, x8, x10, x9
  44c224:	str	wzr, [x20, #4]
  44c228:	str	w11, [x19, #40]
  44c22c:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c230:	mov	w11, #0x18                  	// #24
  44c234:	mov	w10, #0x22                  	// #34
  44c238:	b	44c420 <feof@plt+0x49340>
  44c23c:	add	x8, x8, #0x1
  44c240:	mov	x0, x19
  44c244:	str	x8, [x19, #24]
  44c248:	bl	44bed4 <feof@plt+0x48df4>
  44c24c:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c250:	ldp	w8, w9, [x19, #40]
  44c254:	sxtw	x8, w8
  44c258:	cmp	w8, w9
  44c25c:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c260:	ldr	x9, [x19, #32]
  44c264:	mov	w10, #0x18                  	// #24
  44c268:	add	w11, w8, #0x1
  44c26c:	madd	x20, x8, x10, x9
  44c270:	str	wzr, [x20, #4]
  44c274:	str	w11, [x19, #40]
  44c278:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c27c:	mov	w11, #0x18                  	// #24
  44c280:	mov	w10, #0x23                  	// #35
  44c284:	b	44c420 <feof@plt+0x49340>
  44c288:	ldrb	w8, [x8, #1]
  44c28c:	sub	w9, w8, #0x41
  44c290:	cmp	w9, #0x1a
  44c294:	b.cc	44c4b0 <feof@plt+0x493d0>  // b.lo, b.ul, b.last
  44c298:	cmp	w8, #0x5f
  44c29c:	b.eq	44c4b0 <feof@plt+0x493d0>  // b.none
  44c2a0:	sub	w8, w8, #0x30
  44c2a4:	and	w8, w8, #0xff
  44c2a8:	cmp	w8, #0x9
  44c2ac:	b.ls	44c4b0 <feof@plt+0x493d0>  // b.plast
  44c2b0:	mov	x0, x19
  44c2b4:	bl	44e118 <feof@plt+0x4b038>
  44c2b8:	str	x0, [sp, #8]
  44c2bc:	cbz	x0, 44cf44 <feof@plt+0x49e64>
  44c2c0:	ldr	w8, [x0]
  44c2c4:	mov	x20, x0
  44c2c8:	mov	x21, x0
  44c2cc:	cmp	w8, #0x18
  44c2d0:	b.ne	44cf1c <feof@plt+0x49e3c>  // b.any
  44c2d4:	b	44cf48 <feof@plt+0x49e68>
  44c2d8:	add	x9, x8, #0x1
  44c2dc:	str	x9, [x22]
  44c2e0:	ldrb	w10, [x8, #1]
  44c2e4:	cmp	w10, #0x6e
  44c2e8:	b.eq	44c798 <feof@plt+0x496b8>  // b.none
  44c2ec:	cmp	w10, #0x5f
  44c2f0:	b.ne	44c528 <feof@plt+0x49448>  // b.any
  44c2f4:	mov	w11, wzr
  44c2f8:	add	x21, x8, #0x2
  44c2fc:	str	x21, [x22]
  44c300:	ldp	w8, w9, [x19, #40]
  44c304:	sxtw	x8, w8
  44c308:	cmp	w8, w9
  44c30c:	b.ge	44c774 <feof@plt+0x49694>  // b.tcont
  44c310:	ldr	x9, [x19, #32]
  44c314:	mov	w10, #0x18                  	// #24
  44c318:	add	w12, w8, #0x1
  44c31c:	madd	x20, x8, x10, x9
  44c320:	str	wzr, [x20, #4]
  44c324:	str	w12, [x19, #40]
  44c328:	cbz	x9, 44c774 <feof@plt+0x49694>
  44c32c:	mov	w12, #0x18                  	// #24
  44c330:	mov	w10, #0x5                   	// #5
  44c334:	mov	w11, w11
  44c338:	madd	x8, x8, x12, x9
  44c33c:	str	w10, [x20]
  44c340:	str	x11, [x8, #8]
  44c344:	ldr	x21, [x22]
  44c348:	mov	x9, x21
  44c34c:	b	44c7a0 <feof@plt+0x496c0>
  44c350:	add	x8, x8, #0x1
  44c354:	mov	x0, x19
  44c358:	str	x8, [x19, #24]
  44c35c:	bl	44d3fc <feof@plt+0x4a31c>
  44c360:	str	x0, [sp, #8]
  44c364:	ldr	x8, [x19, #24]
  44c368:	mov	x21, x0
  44c36c:	ldrb	w9, [x8]
  44c370:	cmp	w9, #0x49
  44c374:	b.ne	44c700 <feof@plt+0x49620>  // b.any
  44c378:	add	x8, x8, #0x1
  44c37c:	mov	x0, x19
  44c380:	str	x8, [x19, #24]
  44c384:	bl	44f800 <feof@plt+0x4c720>
  44c388:	mov	x8, xzr
  44c38c:	cbz	x21, 44c6f8 <feof@plt+0x49618>
  44c390:	cbz	x0, 44c6f8 <feof@plt+0x49618>
  44c394:	ldp	w9, w8, [x19, #40]
  44c398:	sxtw	x9, w9
  44c39c:	cmp	w9, w8
  44c3a0:	b.ge	44c6f4 <feof@plt+0x49614>  // b.tcont
  44c3a4:	ldr	x10, [x19, #32]
  44c3a8:	mov	w8, #0x18                  	// #24
  44c3ac:	add	w11, w9, #0x1
  44c3b0:	madd	x8, x9, x8, x10
  44c3b4:	str	wzr, [x8, #4]
  44c3b8:	str	w11, [x19, #40]
  44c3bc:	cbz	x10, 44c6f4 <feof@plt+0x49614>
  44c3c0:	mov	w12, #0x18                  	// #24
  44c3c4:	mov	w11, #0x4                   	// #4
  44c3c8:	madd	x9, x9, x12, x10
  44c3cc:	str	w11, [x8]
  44c3d0:	stp	x21, x0, [x9, #8]
  44c3d4:	b	44c6f8 <feof@plt+0x49618>
  44c3d8:	add	x8, x8, #0x1
  44c3dc:	mov	x0, x19
  44c3e0:	str	x8, [x19, #24]
  44c3e4:	bl	44d3fc <feof@plt+0x4a31c>
  44c3e8:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c3ec:	ldp	w8, w9, [x19, #40]
  44c3f0:	sxtw	x8, w8
  44c3f4:	cmp	w8, w9
  44c3f8:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c3fc:	ldr	x9, [x19, #32]
  44c400:	mov	w10, #0x18                  	// #24
  44c404:	add	w11, w8, #0x1
  44c408:	madd	x20, x8, x10, x9
  44c40c:	str	wzr, [x20, #4]
  44c410:	str	w11, [x19, #40]
  44c414:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c418:	mov	w11, #0x18                  	// #24
  44c41c:	mov	w10, #0x28                  	// #40
  44c420:	madd	x8, x8, x11, x9
  44c424:	str	w10, [x20]
  44c428:	stp	x0, xzr, [x8, #8]
  44c42c:	str	x20, [sp, #8]
  44c430:	b	44cf18 <feof@plt+0x49e38>
  44c434:	sub	w10, w10, #0x30
  44c438:	cmp	w10, #0x9
  44c43c:	b.hi	44c5a8 <feof@plt+0x494c8>  // b.pmore
  44c440:	add	x10, x8, #0x2
  44c444:	str	x10, [x22]
  44c448:	ldrb	w8, [x10], #1
  44c44c:	sub	w8, w8, #0x30
  44c450:	cmp	w8, #0xa
  44c454:	b.cc	44c444 <feof@plt+0x49364>  // b.lo, b.ul, b.last
  44c458:	ldp	w8, w11, [x19, #40]
  44c45c:	sxtw	x8, w8
  44c460:	cmp	w8, w11
  44c464:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c468:	ldr	x11, [x19, #32]
  44c46c:	mvn	w12, w9
  44c470:	mov	w13, #0x18                  	// #24
  44c474:	add	w10, w12, w10
  44c478:	mov	x20, xzr
  44c47c:	add	w14, w8, #0x1
  44c480:	cmp	w10, #0x1
  44c484:	madd	x21, x8, x13, x11
  44c488:	str	wzr, [x21, #4]
  44c48c:	str	w14, [x19, #40]
  44c490:	b.lt	44c754 <feof@plt+0x49674>  // b.tstop
  44c494:	cbz	x11, 44c754 <feof@plt+0x49674>
  44c498:	mov	w12, #0x18                  	// #24
  44c49c:	madd	x8, x8, x12, x11
  44c4a0:	str	xzr, [x21]
  44c4a4:	str	x9, [x8, #8]
  44c4a8:	str	w10, [x8, #16]
  44c4ac:	b	44c5c8 <feof@plt+0x494e8>
  44c4b0:	mov	x0, x19
  44c4b4:	mov	w1, wzr
  44c4b8:	bl	44d5f4 <feof@plt+0x4a514>
  44c4bc:	str	x0, [sp, #8]
  44c4c0:	ldr	x8, [x19, #24]
  44c4c4:	mov	x21, x0
  44c4c8:	ldrb	w9, [x8]
  44c4cc:	cmp	w9, #0x49
  44c4d0:	b.ne	44cf48 <feof@plt+0x49e68>  // b.any
  44c4d4:	add	x8, x8, #0x1
  44c4d8:	mov	x0, x19
  44c4dc:	str	x8, [x19, #24]
  44c4e0:	bl	44f800 <feof@plt+0x4c720>
  44c4e4:	mov	x20, xzr
  44c4e8:	cbz	x21, 44c754 <feof@plt+0x49674>
  44c4ec:	cbz	x0, 44c754 <feof@plt+0x49674>
  44c4f0:	ldp	w8, w9, [x19, #40]
  44c4f4:	sxtw	x8, w8
  44c4f8:	cmp	w8, w9
  44c4fc:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c500:	ldr	x9, [x19, #32]
  44c504:	mov	w10, #0x18                  	// #24
  44c508:	add	w11, w8, #0x1
  44c50c:	madd	x20, x8, x10, x9
  44c510:	str	wzr, [x20, #4]
  44c514:	str	w11, [x19, #40]
  44c518:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c51c:	mov	w11, #0x18                  	// #24
  44c520:	mov	w10, #0x4                   	// #4
  44c524:	b	44c620 <feof@plt+0x49540>
  44c528:	sub	w11, w10, #0x30
  44c52c:	cmp	w11, #0x9
  44c530:	b.hi	44c75c <feof@plt+0x4967c>  // b.pmore
  44c534:	mov	w11, #0x2f                  	// #47
  44c538:	movk	w11, #0x8000, lsl #16
  44c53c:	sub	w12, w11, w10
  44c540:	cmn	w12, #0x9
  44c544:	b.lt	44c798 <feof@plt+0x496b8>  // b.tstop
  44c548:	mov	w13, #0x6667                	// #26215
  44c54c:	mov	w12, wzr
  44c550:	add	x14, x8, #0x2
  44c554:	mov	w8, #0xa                   	// #10
  44c558:	movk	w13, #0x6666, lsl #16
  44c55c:	str	x14, [x22]
  44c560:	madd	w12, w12, w8, w10
  44c564:	ldrb	w10, [x14]
  44c568:	mov	x9, x14
  44c56c:	sub	w12, w12, #0x30
  44c570:	sub	w14, w10, #0x30
  44c574:	cmp	w14, #0xa
  44c578:	b.cs	44c780 <feof@plt+0x496a0>  // b.hs, b.nlast
  44c57c:	sub	w14, w11, w10
  44c580:	smull	x14, w14, w13
  44c584:	lsr	x15, x14, #63
  44c588:	asr	x14, x14, #34
  44c58c:	add	w14, w14, w15
  44c590:	cmp	w12, w14
  44c594:	add	x14, x9, #0x1
  44c598:	b.le	44c55c <feof@plt+0x4947c>
  44c59c:	mov	x20, xzr
  44c5a0:	sub	x21, x14, #0x1
  44c5a4:	b	44c7a0 <feof@plt+0x496c0>
  44c5a8:	ldr	w20, [x19, #76]
  44c5ac:	mov	w8, #0x1                   	// #1
  44c5b0:	mov	x0, x19
  44c5b4:	str	w8, [x19, #76]
  44c5b8:	bl	44f91c <feof@plt+0x4c83c>
  44c5bc:	mov	x21, x0
  44c5c0:	str	w20, [x19, #76]
  44c5c4:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c5c8:	ldr	x8, [x22]
  44c5cc:	ldrb	w9, [x8]
  44c5d0:	cmp	w9, #0x5f
  44c5d4:	b.ne	44cf10 <feof@plt+0x49e30>  // b.any
  44c5d8:	add	x8, x8, #0x1
  44c5dc:	mov	x0, x19
  44c5e0:	str	x8, [x19, #24]
  44c5e4:	bl	44bed4 <feof@plt+0x48df4>
  44c5e8:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44c5ec:	ldp	w8, w9, [x19, #40]
  44c5f0:	sxtw	x8, w8
  44c5f4:	cmp	w8, w9
  44c5f8:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c5fc:	ldr	x9, [x19, #32]
  44c600:	mov	w10, #0x18                  	// #24
  44c604:	add	w11, w8, #0x1
  44c608:	madd	x20, x8, x10, x9
  44c60c:	str	wzr, [x20, #4]
  44c610:	str	w11, [x19, #40]
  44c614:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c618:	mov	w11, #0x18                  	// #24
  44c61c:	mov	w10, #0x2a                  	// #42
  44c620:	madd	x8, x8, x11, x9
  44c624:	str	w10, [x20]
  44c628:	stp	x21, x0, [x8, #8]
  44c62c:	b	44c754 <feof@plt+0x49674>
  44c630:	str	x9, [x22]
  44c634:	ldrb	w9, [x9]
  44c638:	cbz	w9, 44cf44 <feof@plt+0x49e64>
  44c63c:	add	x11, x8, #0x2
  44c640:	str	x11, [x22]
  44c644:	ldrb	w9, [x8, #1]
  44c648:	mov	x21, xzr
  44c64c:	sub	w9, w9, #0x46
  44c650:	cmp	w9, #0x30
  44c654:	b.hi	44cf48 <feof@plt+0x49e68>  // b.pmore
  44c658:	adrp	x10, 473000 <_obstack_memory_used@@Base+0x11838>
  44c65c:	add	x10, x10, #0x52
  44c660:	adr	x12, 44c670 <feof@plt+0x49590>
  44c664:	ldrh	w13, [x10, x9, lsl #1]
  44c668:	add	x12, x12, x13, lsl #2
  44c66c:	br	x12
  44c670:	ldr	w20, [x19, #76]
  44c674:	mov	w8, #0x1                   	// #1
  44c678:	mov	x0, x19
  44c67c:	str	w8, [x19, #76]
  44c680:	bl	44f91c <feof@plt+0x4c83c>
  44c684:	str	w20, [x19, #76]
  44c688:	cbz	x0, 44c974 <feof@plt+0x49894>
  44c68c:	ldp	w8, w9, [x19, #40]
  44c690:	sxtw	x8, w8
  44c694:	cmp	w8, w9
  44c698:	b.ge	44c974 <feof@plt+0x49894>  // b.tcont
  44c69c:	ldr	x9, [x19, #32]
  44c6a0:	mov	w10, #0x18                  	// #24
  44c6a4:	add	w11, w8, #0x1
  44c6a8:	madd	x20, x8, x10, x9
  44c6ac:	str	wzr, [x20, #4]
  44c6b0:	str	w11, [x19, #40]
  44c6b4:	cbz	x9, 44c974 <feof@plt+0x49894>
  44c6b8:	mov	w11, #0x18                  	// #24
  44c6bc:	mov	w10, #0x43                  	// #67
  44c6c0:	madd	x8, x8, x11, x9
  44c6c4:	str	w10, [x20]
  44c6c8:	stp	x0, xzr, [x8, #8]
  44c6cc:	str	x20, [sp, #8]
  44c6d0:	ldr	x8, [x22]
  44c6d4:	ldrb	w9, [x8]
  44c6d8:	cbz	w9, 44c974 <feof@plt+0x49894>
  44c6dc:	add	x9, x8, #0x1
  44c6e0:	str	x9, [x22]
  44c6e4:	ldrb	w8, [x8]
  44c6e8:	cmp	w8, #0x45
  44c6ec:	b.eq	44cf1c <feof@plt+0x49e3c>  // b.none
  44c6f0:	b	44c974 <feof@plt+0x49894>
  44c6f4:	mov	x8, xzr
  44c6f8:	mov	x21, x8
  44c6fc:	str	x8, [sp, #8]
  44c700:	mov	x0, x19
  44c704:	bl	44bed4 <feof@plt+0x48df4>
  44c708:	mov	x20, xzr
  44c70c:	cbz	x0, 44c754 <feof@plt+0x49674>
  44c710:	cbz	x21, 44c754 <feof@plt+0x49674>
  44c714:	ldp	w8, w9, [x19, #40]
  44c718:	sxtw	x8, w8
  44c71c:	cmp	w8, w9
  44c720:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c724:	ldr	x9, [x19, #32]
  44c728:	mov	w10, #0x18                  	// #24
  44c72c:	add	w11, w8, #0x1
  44c730:	madd	x20, x8, x10, x9
  44c734:	str	wzr, [x20, #4]
  44c738:	str	w11, [x19, #40]
  44c73c:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44c740:	mov	w11, #0x18                  	// #24
  44c744:	mov	w10, #0x21                  	// #33
  44c748:	madd	x8, x8, x11, x9
  44c74c:	str	w10, [x20]
  44c750:	stp	x0, x21, [x8, #8]
  44c754:	str	x20, [sp, #8]
  44c758:	b	44cf18 <feof@plt+0x49e38>
  44c75c:	mov	w11, #0x1                   	// #1
  44c760:	cmp	w10, #0x5f
  44c764:	b.ne	44c798 <feof@plt+0x496b8>  // b.any
  44c768:	add	x21, x8, #0x2
  44c76c:	str	x21, [x22]
  44c770:	tbz	w11, #31, 44c300 <feof@plt+0x49220>
  44c774:	mov	x20, xzr
  44c778:	mov	x9, x21
  44c77c:	b	44c7a0 <feof@plt+0x496c0>
  44c780:	cmn	w12, #0x1
  44c784:	b.lt	44c798 <feof@plt+0x496b8>  // b.tstop
  44c788:	add	w11, w12, #0x1
  44c78c:	sub	x8, x9, #0x1
  44c790:	cmp	w10, #0x5f
  44c794:	b.eq	44c768 <feof@plt+0x49688>  // b.none
  44c798:	mov	x20, xzr
  44c79c:	mov	x21, x9
  44c7a0:	str	x20, [sp, #8]
  44c7a4:	ldrb	w8, [x9]
  44c7a8:	cmp	w8, #0x49
  44c7ac:	b.ne	44cf18 <feof@plt+0x49e38>  // b.any
  44c7b0:	ldr	w8, [x19, #80]
  44c7b4:	cbz	w8, 44c85c <feof@plt+0x4977c>
  44c7b8:	ldr	w22, [x19, #40]
  44c7bc:	ldr	w23, [x19, #56]
  44c7c0:	ldr	w24, [x19, #72]
  44c7c4:	add	x8, x9, #0x1
  44c7c8:	mov	x0, x19
  44c7cc:	str	x8, [x19, #24]
  44c7d0:	bl	44f800 <feof@plt+0x4c720>
  44c7d4:	ldr	x8, [x19, #24]
  44c7d8:	ldrb	w8, [x8]
  44c7dc:	cmp	w8, #0x49
  44c7e0:	b.ne	44c8a0 <feof@plt+0x497c0>  // b.any
  44c7e4:	cbz	x20, 44cf44 <feof@plt+0x49e64>
  44c7e8:	ldp	w8, w9, [x19, #56]
  44c7ec:	sxtw	x8, w8
  44c7f0:	cmp	w8, w9
  44c7f4:	b.ge	44cf44 <feof@plt+0x49e64>  // b.tcont
  44c7f8:	ldr	x9, [x19, #48]
  44c7fc:	add	w10, w8, #0x1
  44c800:	str	x20, [x9, x8, lsl #3]
  44c804:	mov	x20, xzr
  44c808:	str	w10, [x19, #56]
  44c80c:	cbz	x0, 44c754 <feof@plt+0x49674>
  44c810:	ldr	x8, [sp, #8]
  44c814:	cbz	x8, 44c754 <feof@plt+0x49674>
  44c818:	ldp	w9, w10, [x19, #40]
  44c81c:	sxtw	x9, w9
  44c820:	cmp	w9, w10
  44c824:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44c828:	ldr	x10, [x19, #32]
  44c82c:	mov	w11, #0x18                  	// #24
  44c830:	add	w12, w9, #0x1
  44c834:	madd	x20, x9, x11, x10
  44c838:	str	wzr, [x20, #4]
  44c83c:	str	w12, [x19, #40]
  44c840:	cbz	x10, 44cf10 <feof@plt+0x49e30>
  44c844:	mov	w12, #0x18                  	// #24
  44c848:	mov	w11, #0x4                   	// #4
  44c84c:	madd	x9, x9, x12, x10
  44c850:	str	w11, [x20]
  44c854:	stp	x8, x0, [x9, #8]
  44c858:	b	44c754 <feof@plt+0x49674>
  44c85c:	cbz	x20, 44cf44 <feof@plt+0x49e64>
  44c860:	ldp	w8, w9, [x19, #56]
  44c864:	sxtw	x8, w8
  44c868:	cmp	w8, w9
  44c86c:	b.ge	44cf44 <feof@plt+0x49e64>  // b.tcont
  44c870:	ldr	x9, [x19, #48]
  44c874:	str	x20, [x9, x8, lsl #3]
  44c878:	ldr	x9, [x19, #24]
  44c87c:	add	w8, w8, #0x1
  44c880:	str	w8, [x19, #56]
  44c884:	ldrb	w8, [x9]
  44c888:	sub	w8, w8, #0x49
  44c88c:	cmp	w8, #0x1
  44c890:	b.hi	44cf10 <feof@plt+0x49e30>  // b.pmore
  44c894:	ldr	x21, [sp, #8]
  44c898:	add	x8, x9, #0x1
  44c89c:	b	44c4d8 <feof@plt+0x493f8>
  44c8a0:	str	x21, [x19, #24]
  44c8a4:	str	w22, [x19, #40]
  44c8a8:	str	w23, [x19, #56]
  44c8ac:	str	w24, [x19, #72]
  44c8b0:	b	44cf18 <feof@plt+0x49e38>
  44c8b4:	ldp	w8, w9, [x19, #40]
  44c8b8:	sxtw	x8, w8
  44c8bc:	cmp	w8, w9
  44c8c0:	b.ge	44cc60 <feof@plt+0x49b80>  // b.tcont
  44c8c4:	ldr	x9, [x19, #32]
  44c8c8:	mov	w10, #0x18                  	// #24
  44c8cc:	add	w12, w8, #0x1
  44c8d0:	madd	x21, x8, x10, x9
  44c8d4:	str	wzr, [x21, #4]
  44c8d8:	str	w12, [x19, #40]
  44c8dc:	b	44cc64 <feof@plt+0x49b84>
  44c8e0:	ldp	w8, w9, [x19, #40]
  44c8e4:	sxtw	x8, w8
  44c8e8:	cmp	w8, w9
  44c8ec:	b.ge	44c974 <feof@plt+0x49894>  // b.tcont
  44c8f0:	ldr	x9, [x19, #32]
  44c8f4:	mov	w10, #0x18                  	// #24
  44c8f8:	add	w11, w8, #0x1
  44c8fc:	madd	x21, x8, x10, x9
  44c900:	str	wzr, [x21, #4]
  44c904:	str	w11, [x19, #40]
  44c908:	cbz	x9, 44c974 <feof@plt+0x49894>
  44c90c:	mov	w10, #0x18                  	// #24
  44c910:	adrp	x11, 472000 <_obstack_memory_used@@Base+0x10838>
  44c914:	add	x11, x11, #0xbd1
  44c918:	mov	w12, #0x4                   	// #4
  44c91c:	b	44c95c <feof@plt+0x4987c>
  44c920:	ldp	w8, w9, [x19, #40]
  44c924:	sxtw	x8, w8
  44c928:	cmp	w8, w9
  44c92c:	b.ge	44c974 <feof@plt+0x49894>  // b.tcont
  44c930:	ldr	x9, [x19, #32]
  44c934:	mov	w10, #0x18                  	// #24
  44c938:	add	w11, w8, #0x1
  44c93c:	madd	x21, x8, x10, x9
  44c940:	str	wzr, [x21, #4]
  44c944:	str	w11, [x19, #40]
  44c948:	cbz	x9, 44c974 <feof@plt+0x49894>
  44c94c:	mov	w10, #0x18                  	// #24
  44c950:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  44c954:	add	x11, x11, #0x280
  44c958:	mov	w12, #0xe                   	// #14
  44c95c:	madd	x8, x8, x10, x9
  44c960:	str	xzr, [x21]
  44c964:	str	x11, [x8, #8]
  44c968:	str	w12, [x8, #16]
  44c96c:	str	x21, [sp, #8]
  44c970:	b	44cf48 <feof@plt+0x49e68>
  44c974:	mov	x21, xzr
  44c978:	str	xzr, [sp, #8]
  44c97c:	b	44cf48 <feof@plt+0x49e68>
  44c980:	ldp	w8, w9, [x19, #40]
  44c984:	sxtw	x8, w8
  44c988:	cmp	w8, w9
  44c98c:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44c990:	ldr	x9, [x19, #32]
  44c994:	mov	w10, #0x18                  	// #24
  44c998:	add	w11, w8, #0x1
  44c99c:	madd	x21, x8, x10, x9
  44c9a0:	str	wzr, [x21, #4]
  44c9a4:	str	w11, [x19, #40]
  44c9a8:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44c9ac:	mov	w11, #0x18                  	// #24
  44c9b0:	mov	w10, #0x27                  	// #39
  44c9b4:	madd	x8, x8, x11, x9
  44c9b8:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44c9bc:	str	w10, [x21]
  44c9c0:	add	x9, x9, #0xe28
  44c9c4:	b	44cc00 <feof@plt+0x49b20>
  44c9c8:	ldp	w8, w9, [x19, #40]
  44c9cc:	sxtw	x8, w8
  44c9d0:	cmp	w8, w9
  44c9d4:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44c9d8:	ldr	x9, [x19, #32]
  44c9dc:	mov	w10, #0x18                  	// #24
  44c9e0:	add	w11, w8, #0x1
  44c9e4:	madd	x21, x8, x10, x9
  44c9e8:	str	wzr, [x21, #4]
  44c9ec:	str	w11, [x19, #40]
  44c9f0:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44c9f4:	mov	w11, #0x18                  	// #24
  44c9f8:	mov	w10, #0x27                  	// #39
  44c9fc:	madd	x8, x8, x11, x9
  44ca00:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44ca04:	str	w10, [x21]
  44ca08:	add	x9, x9, #0xe48
  44ca0c:	b	44cc00 <feof@plt+0x49b20>
  44ca10:	ldp	w8, w9, [x19, #40]
  44ca14:	sxtw	x8, w8
  44ca18:	cmp	w8, w9
  44ca1c:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44ca20:	ldr	x9, [x19, #32]
  44ca24:	mov	w10, #0x18                  	// #24
  44ca28:	add	w11, w8, #0x1
  44ca2c:	madd	x21, x8, x10, x9
  44ca30:	str	wzr, [x21, #4]
  44ca34:	str	w11, [x19, #40]
  44ca38:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44ca3c:	mov	w11, #0x18                  	// #24
  44ca40:	madd	x8, x8, x11, x9
  44ca44:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44ca48:	mov	w10, #0x27                  	// #39
  44ca4c:	add	x9, x9, #0xe08
  44ca50:	str	w10, [x21]
  44ca54:	b	44cc00 <feof@plt+0x49b20>
  44ca58:	ldp	w8, w9, [x19, #40]
  44ca5c:	sxtw	x8, w8
  44ca60:	cmp	w8, w9
  44ca64:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44ca68:	ldr	x9, [x19, #32]
  44ca6c:	mov	w10, #0x18                  	// #24
  44ca70:	add	w11, w8, #0x1
  44ca74:	madd	x21, x8, x10, x9
  44ca78:	str	wzr, [x21, #4]
  44ca7c:	str	w11, [x19, #40]
  44ca80:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44ca84:	mov	w11, #0x18                  	// #24
  44ca88:	mov	w10, #0x27                  	// #39
  44ca8c:	madd	x8, x8, x11, x9
  44ca90:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44ca94:	str	w10, [x21]
  44ca98:	add	x9, x9, #0xe68
  44ca9c:	b	44cc00 <feof@plt+0x49b20>
  44caa0:	ldp	w8, w9, [x19, #40]
  44caa4:	sxtw	x8, w8
  44caa8:	cmp	w8, w9
  44caac:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44cab0:	ldr	x9, [x19, #32]
  44cab4:	mov	w10, #0x18                  	// #24
  44cab8:	add	w11, w8, #0x1
  44cabc:	madd	x21, x8, x10, x9
  44cac0:	str	wzr, [x21, #4]
  44cac4:	str	w11, [x19, #40]
  44cac8:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44cacc:	mov	w11, #0x18                  	// #24
  44cad0:	mov	w10, #0x27                  	// #39
  44cad4:	madd	x8, x8, x11, x9
  44cad8:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44cadc:	str	w10, [x21]
  44cae0:	add	x9, x9, #0xec8
  44cae4:	b	44cc00 <feof@plt+0x49b20>
  44cae8:	ldp	w8, w9, [x19, #40]
  44caec:	sxtw	x8, w8
  44caf0:	cmp	w8, w9
  44caf4:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44caf8:	ldr	x9, [x19, #32]
  44cafc:	mov	w10, #0x18                  	// #24
  44cb00:	add	w11, w8, #0x1
  44cb04:	madd	x21, x8, x10, x9
  44cb08:	str	wzr, [x21, #4]
  44cb0c:	str	w11, [x19, #40]
  44cb10:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44cb14:	mov	w11, #0x18                  	// #24
  44cb18:	mov	w10, #0x27                  	// #39
  44cb1c:	madd	x8, x8, x11, x9
  44cb20:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44cb24:	str	w10, [x21]
  44cb28:	add	x9, x9, #0xee8
  44cb2c:	b	44cc00 <feof@plt+0x49b20>
  44cb30:	mov	x0, x19
  44cb34:	bl	44bed4 <feof@plt+0x48df4>
  44cb38:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44cb3c:	ldp	w8, w9, [x19, #40]
  44cb40:	sxtw	x8, w8
  44cb44:	cmp	w8, w9
  44cb48:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44cb4c:	ldr	x9, [x19, #32]
  44cb50:	mov	w10, #0x18                  	// #24
  44cb54:	add	w11, w8, #0x1
  44cb58:	madd	x20, x8, x10, x9
  44cb5c:	str	wzr, [x20, #4]
  44cb60:	str	w11, [x19, #40]
  44cb64:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44cb68:	mov	w11, #0x18                  	// #24
  44cb6c:	mov	w10, #0x4b                  	// #75
  44cb70:	b	44c420 <feof@plt+0x49340>
  44cb74:	ldp	w8, w9, [x19, #40]
  44cb78:	sxtw	x8, w8
  44cb7c:	cmp	w8, w9
  44cb80:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44cb84:	ldr	x9, [x19, #32]
  44cb88:	mov	w10, #0x18                  	// #24
  44cb8c:	add	w11, w8, #0x1
  44cb90:	madd	x21, x8, x10, x9
  44cb94:	str	wzr, [x21, #4]
  44cb98:	str	w11, [x19, #40]
  44cb9c:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44cba0:	mov	w11, #0x18                  	// #24
  44cba4:	mov	w10, #0x27                  	// #39
  44cba8:	madd	x8, x8, x11, x9
  44cbac:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44cbb0:	str	w10, [x21]
  44cbb4:	add	x9, x9, #0xea8
  44cbb8:	b	44cc00 <feof@plt+0x49b20>
  44cbbc:	ldp	w8, w9, [x19, #40]
  44cbc0:	sxtw	x8, w8
  44cbc4:	cmp	w8, w9
  44cbc8:	b.ge	44cc08 <feof@plt+0x49b28>  // b.tcont
  44cbcc:	ldr	x9, [x19, #32]
  44cbd0:	mov	w10, #0x18                  	// #24
  44cbd4:	add	w11, w8, #0x1
  44cbd8:	madd	x21, x8, x10, x9
  44cbdc:	str	wzr, [x21, #4]
  44cbe0:	str	w11, [x19, #40]
  44cbe4:	cbz	x9, 44cc08 <feof@plt+0x49b28>
  44cbe8:	mov	w11, #0x18                  	// #24
  44cbec:	mov	w10, #0x27                  	// #39
  44cbf0:	madd	x8, x8, x11, x9
  44cbf4:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44cbf8:	str	w10, [x21]
  44cbfc:	add	x9, x9, #0xe88
  44cc00:	str	x9, [x8, #8]
  44cc04:	b	44cc0c <feof@plt+0x49b2c>
  44cc08:	mov	x21, xzr
  44cc0c:	str	x21, [sp, #8]
  44cc10:	ldr	x8, [x21, #8]
  44cc14:	ldr	w9, [x19, #72]
  44cc18:	ldr	w8, [x8, #8]
  44cc1c:	add	w8, w9, w8
  44cc20:	str	w8, [x19, #72]
  44cc24:	b	44cf48 <feof@plt+0x49e68>
  44cc28:	ldrb	w9, [x11]
  44cc2c:	cmp	w9, #0x5f
  44cc30:	b.ne	44cdb0 <feof@plt+0x49cd0>  // b.any
  44cc34:	ldr	w20, [x19, #76]
  44cc38:	add	x8, x8, #0x3
  44cc3c:	str	x8, [x19, #24]
  44cc40:	mov	w8, #0x1                   	// #1
  44cc44:	mov	x0, x19
  44cc48:	str	w8, [x19, #76]
  44cc4c:	bl	44f91c <feof@plt+0x4c83c>
  44cc50:	mov	x21, x0
  44cc54:	str	w20, [x19, #76]
  44cc58:	cbnz	x0, 44ceb4 <feof@plt+0x49dd4>
  44cc5c:	b	44cf10 <feof@plt+0x49e30>
  44cc60:	mov	x21, xzr
  44cc64:	mov	w8, #0x2c                  	// #44
  44cc68:	str	x21, [sp, #8]
  44cc6c:	str	w8, [x21]
  44cc70:	ldrb	w8, [x11]
  44cc74:	sub	w8, w8, #0x30
  44cc78:	cmp	w8, #0xa
  44cc7c:	cset	w9, cc  // cc = lo, ul, last
  44cc80:	cmp	w8, #0x9
  44cc84:	strh	w9, [x21, #16]
  44cc88:	b.hi	44cd10 <feof@plt+0x49c30>  // b.pmore
  44cc8c:	ldr	x10, [x22]
  44cc90:	ldrb	w8, [x10]
  44cc94:	cmp	w8, #0x6e
  44cc98:	b.ne	44ccac <feof@plt+0x49bcc>  // b.any
  44cc9c:	add	x9, x10, #0x1
  44cca0:	str	x9, [x22]
  44cca4:	ldrb	w8, [x10, #1]
  44cca8:	mov	x10, x9
  44ccac:	sub	w9, w8, #0x30
  44ccb0:	cmp	w9, #0x9
  44ccb4:	b.hi	44cd10 <feof@plt+0x49c30>  // b.pmore
  44ccb8:	mov	w9, #0x2f                  	// #47
  44ccbc:	mov	w12, #0x6667                	// #26215
  44ccc0:	mov	w11, wzr
  44ccc4:	movk	w9, #0x8000, lsl #16
  44ccc8:	add	x10, x10, #0x1
  44cccc:	movk	w12, #0x6666, lsl #16
  44ccd0:	mov	w13, #0xa                   	// #10
  44ccd4:	and	w14, w8, #0xff
  44ccd8:	sub	w8, w9, w14
  44ccdc:	smull	x8, w8, w12
  44cce0:	lsr	x15, x8, #63
  44cce4:	asr	x8, x8, #34
  44cce8:	add	w8, w8, w15
  44ccec:	cmp	w11, w8
  44ccf0:	b.gt	44cd10 <feof@plt+0x49c30>
  44ccf4:	str	x10, [x22]
  44ccf8:	ldrb	w8, [x10], #1
  44ccfc:	madd	w11, w11, w13, w14
  44cd00:	sub	w11, w11, #0x30
  44cd04:	sub	w14, w8, #0x30
  44cd08:	cmp	w14, #0xa
  44cd0c:	b.cc	44ccd4 <feof@plt+0x49bf4>  // b.lo, b.ul, b.last
  44cd10:	mov	x0, x19
  44cd14:	bl	44bed4 <feof@plt+0x48df4>
  44cd18:	str	x0, [x21, #8]
  44cd1c:	cbz	x0, 44cf44 <feof@plt+0x49e64>
  44cd20:	ldr	x9, [x22]
  44cd24:	ldrb	w8, [x9]
  44cd28:	cmp	w8, #0x6e
  44cd2c:	b.ne	44cd40 <feof@plt+0x49c60>  // b.any
  44cd30:	add	x10, x9, #0x1
  44cd34:	str	x10, [x22]
  44cd38:	ldrb	w8, [x9, #1]
  44cd3c:	mov	x9, x10
  44cd40:	sub	w10, w8, #0x30
  44cd44:	cmp	w10, #0x9
  44cd48:	b.hi	44cda8 <feof@plt+0x49cc8>  // b.pmore
  44cd4c:	mov	w10, #0x2f                  	// #47
  44cd50:	mov	w12, #0x6667                	// #26215
  44cd54:	mov	w11, wzr
  44cd58:	movk	w10, #0x8000, lsl #16
  44cd5c:	add	x9, x9, #0x1
  44cd60:	movk	w12, #0x6666, lsl #16
  44cd64:	mov	w13, #0xa                   	// #10
  44cd68:	and	w14, w8, #0xff
  44cd6c:	sub	w8, w10, w14
  44cd70:	smull	x8, w8, w12
  44cd74:	lsr	x15, x8, #63
  44cd78:	asr	x8, x8, #34
  44cd7c:	add	w8, w8, w15
  44cd80:	cmp	w11, w8
  44cd84:	b.gt	44ce04 <feof@plt+0x49d24>
  44cd88:	str	x9, [x22]
  44cd8c:	ldrb	w8, [x9], #1
  44cd90:	madd	w11, w11, w13, w14
  44cd94:	sub	w11, w11, #0x30
  44cd98:	sub	w14, w8, #0x30
  44cd9c:	cmp	w14, #0xa
  44cda0:	b.cc	44cd68 <feof@plt+0x49c88>  // b.lo, b.ul, b.last
  44cda4:	sub	x9, x9, #0x1
  44cda8:	cbnz	w8, 44ce08 <feof@plt+0x49d28>
  44cdac:	b	44ce1c <feof@plt+0x49d3c>
  44cdb0:	ldp	w9, w10, [x19, #40]
  44cdb4:	sxtw	x9, w9
  44cdb8:	cmp	w9, w10
  44cdbc:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44cdc0:	ldr	x10, [x19, #32]
  44cdc4:	mov	w12, #0x18                  	// #24
  44cdc8:	add	w13, w9, #0x1
  44cdcc:	madd	x21, x9, x12, x10
  44cdd0:	str	wzr, [x21, #4]
  44cdd4:	str	w13, [x19, #40]
  44cdd8:	cbz	x10, 44cf10 <feof@plt+0x49e30>
  44cddc:	mov	w12, #0x42                  	// #66
  44cde0:	str	w12, [x21]
  44cde4:	ldrb	w12, [x11]
  44cde8:	cmp	w12, #0x6e
  44cdec:	b.ne	44ce24 <feof@plt+0x49d44>  // b.any
  44cdf0:	add	x11, x8, #0x3
  44cdf4:	str	x11, [x22]
  44cdf8:	ldrb	w12, [x8, #3]
  44cdfc:	mov	w8, #0x1                   	// #1
  44ce00:	b	44ce28 <feof@plt+0x49d48>
  44ce04:	sub	x9, x9, #0x1
  44ce08:	add	x8, x9, #0x1
  44ce0c:	str	x8, [x22]
  44ce10:	ldrb	w8, [x9]
  44ce14:	cmp	w8, #0x73
  44ce18:	cset	w8, eq  // eq = none
  44ce1c:	strh	w8, [x21, #18]
  44ce20:	b	44cf48 <feof@plt+0x49e68>
  44ce24:	mov	w8, wzr
  44ce28:	sub	w13, w12, #0x30
  44ce2c:	cmp	w13, #0x9
  44ce30:	b.hi	44ce90 <feof@plt+0x49db0>  // b.pmore
  44ce34:	mov	w14, #0x2f                  	// #47
  44ce38:	mov	w15, #0x6667                	// #26215
  44ce3c:	mov	w13, wzr
  44ce40:	movk	w14, #0x8000, lsl #16
  44ce44:	add	x11, x11, #0x1
  44ce48:	movk	w15, #0x6666, lsl #16
  44ce4c:	mov	w16, #0xa                   	// #10
  44ce50:	and	w17, w12, #0xff
  44ce54:	sub	w12, w14, w17
  44ce58:	smull	x12, w12, w15
  44ce5c:	lsr	x18, x12, #63
  44ce60:	asr	x12, x12, #34
  44ce64:	add	w12, w12, w18
  44ce68:	cmp	w13, w12
  44ce6c:	b.gt	44cea4 <feof@plt+0x49dc4>
  44ce70:	str	x11, [x22]
  44ce74:	ldrb	w12, [x11], #1
  44ce78:	madd	w13, w13, w16, w17
  44ce7c:	sub	w13, w13, #0x30
  44ce80:	sub	w17, w12, #0x30
  44ce84:	cmp	w17, #0xa
  44ce88:	b.cc	44ce50 <feof@plt+0x49d70>  // b.lo, b.ul, b.last
  44ce8c:	b	44ce94 <feof@plt+0x49db4>
  44ce90:	mov	w13, wzr
  44ce94:	cmp	w8, #0x0
  44ce98:	cneg	w8, w13, ne  // ne = any
  44ce9c:	sxtw	x8, w8
  44cea0:	b	44cea8 <feof@plt+0x49dc8>
  44cea4:	mov	x8, #0xffffffffffffffff    	// #-1
  44cea8:	mov	w11, #0x18                  	// #24
  44ceac:	madd	x9, x9, x11, x10
  44ceb0:	str	x8, [x9, #8]
  44ceb4:	ldr	x8, [x22]
  44ceb8:	ldrb	w9, [x8]
  44cebc:	cmp	w9, #0x5f
  44cec0:	b.ne	44cf10 <feof@plt+0x49e30>  // b.any
  44cec4:	add	x8, x8, #0x1
  44cec8:	mov	x0, x19
  44cecc:	str	x8, [x19, #24]
  44ced0:	bl	44bed4 <feof@plt+0x48df4>
  44ced4:	cbz	x0, 44cf10 <feof@plt+0x49e30>
  44ced8:	ldp	w8, w9, [x19, #40]
  44cedc:	sxtw	x8, w8
  44cee0:	cmp	w8, w9
  44cee4:	b.ge	44cf10 <feof@plt+0x49e30>  // b.tcont
  44cee8:	ldr	x9, [x19, #32]
  44ceec:	mov	w10, #0x18                  	// #24
  44cef0:	add	w11, w8, #0x1
  44cef4:	madd	x20, x8, x10, x9
  44cef8:	str	wzr, [x20, #4]
  44cefc:	str	w11, [x19, #40]
  44cf00:	cbz	x9, 44cf10 <feof@plt+0x49e30>
  44cf04:	mov	w11, #0x18                  	// #24
  44cf08:	mov	w10, #0x2d                  	// #45
  44cf0c:	b	44c190 <feof@plt+0x490b0>
  44cf10:	mov	x20, xzr
  44cf14:	str	xzr, [sp, #8]
  44cf18:	cbz	x20, 44cf44 <feof@plt+0x49e64>
  44cf1c:	ldp	w8, w9, [x19, #56]
  44cf20:	sxtw	x8, w8
  44cf24:	cmp	w8, w9
  44cf28:	b.ge	44cf44 <feof@plt+0x49e64>  // b.tcont
  44cf2c:	ldr	x9, [x19, #48]
  44cf30:	add	w10, w8, #0x1
  44cf34:	str	x20, [x9, x8, lsl #3]
  44cf38:	str	w10, [x19, #56]
  44cf3c:	ldr	x21, [sp, #8]
  44cf40:	b	44cf48 <feof@plt+0x49e68>
  44cf44:	mov	x21, xzr
  44cf48:	mov	x0, x21
  44cf4c:	ldp	x20, x19, [sp, #64]
  44cf50:	ldp	x22, x21, [sp, #48]
  44cf54:	ldp	x24, x23, [sp, #32]
  44cf58:	ldp	x29, x30, [sp, #16]
  44cf5c:	add	sp, sp, #0x50
  44cf60:	ret
  44cf64:	stp	x29, x30, [sp, #-96]!
  44cf68:	stp	x28, x27, [sp, #16]
  44cf6c:	cmp	w2, #0x0
  44cf70:	mov	w8, #0x1e                  	// #30
  44cf74:	mov	w9, #0x1b                  	// #27
  44cf78:	mov	w10, #0x1d                  	// #29
  44cf7c:	mov	w11, #0x1a                  	// #26
  44cf80:	mov	w12, #0x1c                  	// #28
  44cf84:	mov	w13, #0x19                  	// #25
  44cf88:	mov	x27, #0x1                   	// #1
  44cf8c:	stp	x26, x25, [sp, #32]
  44cf90:	stp	x24, x23, [sp, #48]
  44cf94:	stp	x22, x21, [sp, #64]
  44cf98:	stp	x20, x19, [sp, #80]
  44cf9c:	mov	w20, w2
  44cfa0:	mov	x19, x1
  44cfa4:	mov	x21, x0
  44cfa8:	csel	w23, w9, w8, eq  // eq = none
  44cfac:	mov	w24, #0x1                   	// #1
  44cfb0:	csel	w25, w11, w10, eq  // eq = none
  44cfb4:	csel	w26, w13, w12, eq  // eq = none
  44cfb8:	movk	x27, #0x301, lsl #32
  44cfbc:	mov	x22, x1
  44cfc0:	mov	x29, sp
  44cfc4:	ldr	x8, [x21, #24]
  44cfc8:	ldrb	w9, [x8]
  44cfcc:	cmp	w9, #0x55
  44cfd0:	b.gt	44cfe8 <feof@plt+0x49f08>
  44cfd4:	cmp	w9, #0x44
  44cfd8:	b.eq	44d028 <feof@plt+0x49f48>  // b.none
  44cfdc:	cmp	w9, #0x4b
  44cfe0:	b.eq	44cff8 <feof@plt+0x49f18>  // b.none
  44cfe4:	b	44d184 <feof@plt+0x4a0a4>
  44cfe8:	cmp	w9, #0x56
  44cfec:	b.eq	44cff8 <feof@plt+0x49f18>  // b.none
  44cff0:	cmp	w9, #0x72
  44cff4:	b.ne	44d184 <feof@plt+0x4a0a4>  // b.any
  44cff8:	add	x10, x8, #0x1
  44cffc:	cmp	w9, #0x4b
  44d000:	str	x10, [x21, #24]
  44d004:	b.eq	44d0f4 <feof@plt+0x4a014>  // b.none
  44d008:	cmp	w9, #0x56
  44d00c:	b.eq	44d10c <feof@plt+0x4a02c>  // b.none
  44d010:	cmp	w9, #0x72
  44d014:	b.ne	44d04c <feof@plt+0x49f6c>  // b.any
  44d018:	ldr	w8, [x21, #72]
  44d01c:	mov	x3, xzr
  44d020:	mov	w1, w26
  44d024:	b	44d118 <feof@plt+0x4a038>
  44d028:	ldrb	w9, [x8, #1]
  44d02c:	sub	w9, w9, #0x4f
  44d030:	cmp	w9, #0x29
  44d034:	b.hi	44d190 <feof@plt+0x4a0b0>  // b.pmore
  44d038:	lsl	x9, x24, x9
  44d03c:	tst	x9, x27
  44d040:	b.eq	44d190 <feof@plt+0x4a0b0>  // b.none
  44d044:	add	x10, x8, #0x1
  44d048:	str	x10, [x21, #24]
  44d04c:	ldrb	w9, [x10]
  44d050:	cbz	w9, 44d1c4 <feof@plt+0x4a0e4>
  44d054:	add	x9, x8, #0x2
  44d058:	str	x9, [x21, #24]
  44d05c:	ldrb	w8, [x8, #1]
  44d060:	mov	x0, xzr
  44d064:	cmp	w8, #0x76
  44d068:	b.gt	44d0cc <feof@plt+0x49fec>
  44d06c:	cmp	w8, #0x4f
  44d070:	b.eq	44d07c <feof@plt+0x49f9c>  // b.none
  44d074:	cmp	w8, #0x6f
  44d078:	b.ne	44d1c8 <feof@plt+0x4a0e8>  // b.any
  44d07c:	ldr	w9, [x21, #72]
  44d080:	cmp	w8, #0x4f
  44d084:	add	w9, w9, #0x9
  44d088:	str	w9, [x21, #72]
  44d08c:	b.ne	44d124 <feof@plt+0x4a044>  // b.any
  44d090:	ldr	w28, [x21, #76]
  44d094:	mov	x0, x21
  44d098:	str	w24, [x21, #76]
  44d09c:	bl	44f91c <feof@plt+0x4c83c>
  44d0a0:	str	w28, [x21, #76]
  44d0a4:	cbz	x0, 44d1c8 <feof@plt+0x4a0e8>
  44d0a8:	ldr	x8, [x21, #24]
  44d0ac:	ldrb	w9, [x8]
  44d0b0:	cmp	w9, #0x45
  44d0b4:	b.ne	44d1c4 <feof@plt+0x4a0e4>  // b.any
  44d0b8:	add	x8, x8, #0x1
  44d0bc:	mov	x3, x0
  44d0c0:	str	x8, [x21, #24]
  44d0c4:	mov	w1, #0x4f                  	// #79
  44d0c8:	b	44d168 <feof@plt+0x4a088>
  44d0cc:	cmp	w8, #0x77
  44d0d0:	b.eq	44d130 <feof@plt+0x4a050>  // b.none
  44d0d4:	cmp	w8, #0x78
  44d0d8:	b.ne	44d1c8 <feof@plt+0x4a0e8>  // b.any
  44d0dc:	ldr	w8, [x21, #72]
  44d0e0:	mov	x3, xzr
  44d0e4:	mov	w1, #0x4d                  	// #77
  44d0e8:	add	w8, w8, #0x11
  44d0ec:	str	w8, [x21, #72]
  44d0f0:	b	44d168 <feof@plt+0x4a088>
  44d0f4:	ldr	w8, [x21, #72]
  44d0f8:	mov	x3, xzr
  44d0fc:	mov	w1, w23
  44d100:	add	w8, w8, #0x6
  44d104:	str	w8, [x21, #72]
  44d108:	b	44d168 <feof@plt+0x4a088>
  44d10c:	ldr	w8, [x21, #72]
  44d110:	mov	x3, xzr
  44d114:	mov	w1, w25
  44d118:	add	w8, w8, #0x9
  44d11c:	str	w8, [x21, #72]
  44d120:	b	44d168 <feof@plt+0x4a088>
  44d124:	mov	x3, xzr
  44d128:	mov	w1, #0x4f                  	// #79
  44d12c:	b	44d168 <feof@plt+0x4a088>
  44d130:	ldr	w8, [x21, #72]
  44d134:	mov	x0, x21
  44d138:	add	w8, w8, #0x6
  44d13c:	str	w8, [x21, #72]
  44d140:	bl	44f6e4 <feof@plt+0x4c604>
  44d144:	cbz	x0, 44d1c8 <feof@plt+0x4a0e8>
  44d148:	ldr	x8, [x21, #24]
  44d14c:	ldrb	w9, [x8]
  44d150:	cmp	w9, #0x45
  44d154:	b.ne	44d1c4 <feof@plt+0x4a0e4>  // b.any
  44d158:	mov	x3, x0
  44d15c:	add	x8, x8, #0x1
  44d160:	mov	w1, #0x50                  	// #80
  44d164:	str	x8, [x21, #24]
  44d168:	mov	x0, x21
  44d16c:	mov	x2, xzr
  44d170:	bl	44d370 <feof@plt+0x4a290>
  44d174:	str	x0, [x22]
  44d178:	cbz	x0, 44d1c8 <feof@plt+0x4a0e8>
  44d17c:	add	x22, x0, #0x8
  44d180:	b	44cfc4 <feof@plt+0x49ee4>
  44d184:	cmp	w9, #0x46
  44d188:	b.ne	44d190 <feof@plt+0x4a0b0>  // b.any
  44d18c:	cbz	w20, 44d19c <feof@plt+0x4a0bc>
  44d190:	mov	x0, x22
  44d194:	b	44d1c8 <feof@plt+0x4a0e8>
  44d198:	add	x19, x8, #0x8
  44d19c:	cmp	x22, x19
  44d1a0:	b.eq	44d190 <feof@plt+0x4a0b0>  // b.none
  44d1a4:	ldr	x8, [x19]
  44d1a8:	ldr	w9, [x8]
  44d1ac:	sub	w10, w9, #0x19
  44d1b0:	cmp	w10, #0x2
  44d1b4:	b.hi	44d198 <feof@plt+0x4a0b8>  // b.pmore
  44d1b8:	add	w9, w9, #0x3
  44d1bc:	str	w9, [x8]
  44d1c0:	b	44d198 <feof@plt+0x4a0b8>
  44d1c4:	mov	x0, xzr
  44d1c8:	ldp	x20, x19, [sp, #80]
  44d1cc:	ldp	x22, x21, [sp, #64]
  44d1d0:	ldp	x24, x23, [sp, #48]
  44d1d4:	ldp	x26, x25, [sp, #32]
  44d1d8:	ldp	x28, x27, [sp, #16]
  44d1dc:	ldp	x29, x30, [sp], #96
  44d1e0:	ret
  44d1e4:	stp	x29, x30, [sp, #-32]!
  44d1e8:	stp	x20, x19, [sp, #16]
  44d1ec:	ldrb	w8, [x0, #18]
  44d1f0:	mov	x19, x0
  44d1f4:	mov	x29, sp
  44d1f8:	tbnz	w8, #2, 44d218 <feof@plt+0x4a138>
  44d1fc:	ldr	w8, [x19, #84]
  44d200:	cmp	w8, #0x800
  44d204:	b.ls	44d210 <feof@plt+0x4a130>  // b.plast
  44d208:	mov	x2, xzr
  44d20c:	b	44d360 <feof@plt+0x4a280>
  44d210:	add	w8, w8, #0x1
  44d214:	str	w8, [x19, #84]
  44d218:	ldr	x8, [x19, #24]
  44d21c:	ldrb	w9, [x8]
  44d220:	cmp	w9, #0x46
  44d224:	b.ne	44d348 <feof@plt+0x4a268>  // b.any
  44d228:	add	x9, x8, #0x1
  44d22c:	str	x9, [x19, #24]
  44d230:	ldrb	w9, [x8, #1]
  44d234:	cmp	w9, #0x59
  44d238:	b.ne	44d258 <feof@plt+0x4a178>  // b.any
  44d23c:	add	x9, x8, #0x2
  44d240:	str	x9, [x19, #24]
  44d244:	ldrb	w9, [x8, #2]
  44d248:	mov	w10, #0x2                   	// #2
  44d24c:	cmp	w9, #0x4a
  44d250:	b.eq	44d264 <feof@plt+0x4a184>  // b.none
  44d254:	b	44d270 <feof@plt+0x4a190>
  44d258:	mov	w10, #0x1                   	// #1
  44d25c:	cmp	w9, #0x4a
  44d260:	b.ne	44d270 <feof@plt+0x4a190>  // b.any
  44d264:	add	x8, x8, x10
  44d268:	add	x8, x8, #0x1
  44d26c:	str	x8, [x19, #24]
  44d270:	mov	x0, x19
  44d274:	bl	44bed4 <feof@plt+0x48df4>
  44d278:	cbz	x0, 44d2d0 <feof@plt+0x4a1f0>
  44d27c:	mov	x20, x0
  44d280:	mov	x0, x19
  44d284:	bl	44f6e4 <feof@plt+0x4c604>
  44d288:	cbz	x0, 44d2d0 <feof@plt+0x4a1f0>
  44d28c:	ldp	w8, w9, [x19, #40]
  44d290:	sxtw	x8, w8
  44d294:	cmp	w8, w9
  44d298:	b.ge	44d2d0 <feof@plt+0x4a1f0>  // b.tcont
  44d29c:	ldr	x9, [x19, #32]
  44d2a0:	mov	w10, #0x18                  	// #24
  44d2a4:	add	w11, w8, #0x1
  44d2a8:	madd	x2, x8, x10, x9
  44d2ac:	str	wzr, [x2, #4]
  44d2b0:	str	w11, [x19, #40]
  44d2b4:	cbz	x9, 44d2d0 <feof@plt+0x4a1f0>
  44d2b8:	mov	w11, #0x18                  	// #24
  44d2bc:	mov	w10, #0x29                  	// #41
  44d2c0:	madd	x8, x8, x11, x9
  44d2c4:	str	w10, [x2]
  44d2c8:	stp	x20, x0, [x8, #8]
  44d2cc:	b	44d2d4 <feof@plt+0x4a1f4>
  44d2d0:	mov	x2, xzr
  44d2d4:	ldr	x8, [x19, #24]
  44d2d8:	ldrb	w9, [x8]
  44d2dc:	cmp	w9, #0x52
  44d2e0:	b.eq	44d2ec <feof@plt+0x4a20c>  // b.none
  44d2e4:	cmp	w9, #0x4f
  44d2e8:	b.ne	44d32c <feof@plt+0x4a24c>  // b.any
  44d2ec:	ldr	w10, [x19, #72]
  44d2f0:	cmp	w9, #0x52
  44d2f4:	mov	w9, #0x2                   	// #2
  44d2f8:	mov	w11, #0x1f                  	// #31
  44d2fc:	cinc	w9, w9, ne  // ne = any
  44d300:	add	x8, x8, #0x1
  44d304:	cinc	w1, w11, ne  // ne = any
  44d308:	add	w9, w10, w9
  44d30c:	mov	x0, x19
  44d310:	mov	x3, xzr
  44d314:	str	w9, [x19, #72]
  44d318:	str	x8, [x19, #24]
  44d31c:	bl	44d370 <feof@plt+0x4a290>
  44d320:	ldr	x8, [x19, #24]
  44d324:	mov	x2, x0
  44d328:	ldrb	w9, [x8]
  44d32c:	cmp	w9, #0x45
  44d330:	b.ne	44d348 <feof@plt+0x4a268>  // b.any
  44d334:	add	x8, x8, #0x1
  44d338:	str	x8, [x19, #24]
  44d33c:	ldrb	w8, [x19, #18]
  44d340:	tbz	w8, #2, 44d354 <feof@plt+0x4a274>
  44d344:	b	44d360 <feof@plt+0x4a280>
  44d348:	mov	x2, xzr
  44d34c:	ldrb	w8, [x19, #18]
  44d350:	tbnz	w8, #2, 44d360 <feof@plt+0x4a280>
  44d354:	ldr	w8, [x19, #84]
  44d358:	sub	w8, w8, #0x1
  44d35c:	str	w8, [x19, #84]
  44d360:	ldp	x20, x19, [sp, #16]
  44d364:	mov	x0, x2
  44d368:	ldp	x29, x30, [sp], #32
  44d36c:	ret
  44d370:	sub	w9, w1, #0x1
  44d374:	mov	x8, x0
  44d378:	cmp	w9, #0x4f
  44d37c:	mov	x0, xzr
  44d380:	b.hi	44d3ec <feof@plt+0x4a30c>  // b.pmore
  44d384:	adrp	x10, 473000 <_obstack_memory_used@@Base+0x11838>
  44d388:	add	x10, x10, #0xb4
  44d38c:	adr	x11, 44d39c <feof@plt+0x4a2bc>
  44d390:	ldrb	w12, [x10, x9]
  44d394:	add	x11, x11, x12, lsl #2
  44d398:	br	x11
  44d39c:	cbnz	x2, 44d3b0 <feof@plt+0x4a2d0>
  44d3a0:	b	44d3f4 <feof@plt+0x4a314>
  44d3a4:	mov	x0, xzr
  44d3a8:	cbz	x2, 44d3ec <feof@plt+0x4a30c>
  44d3ac:	cbz	x3, 44d3ec <feof@plt+0x4a30c>
  44d3b0:	ldp	w9, w10, [x8, #40]
  44d3b4:	sxtw	x9, w9
  44d3b8:	cmp	w9, w10
  44d3bc:	b.ge	44d3f4 <feof@plt+0x4a314>  // b.tcont
  44d3c0:	ldr	x10, [x8, #32]
  44d3c4:	mov	w11, #0x18                  	// #24
  44d3c8:	add	w12, w9, #0x1
  44d3cc:	madd	x0, x9, x11, x10
  44d3d0:	str	wzr, [x0, #4]
  44d3d4:	str	w12, [x8, #40]
  44d3d8:	cbz	x10, 44d3f4 <feof@plt+0x4a314>
  44d3dc:	mov	w8, #0x18                  	// #24
  44d3e0:	madd	x8, x9, x8, x10
  44d3e4:	str	w1, [x0]
  44d3e8:	stp	x2, x3, [x8, #8]
  44d3ec:	ret
  44d3f0:	cbnz	x3, 44d3b0 <feof@plt+0x4a2d0>
  44d3f4:	mov	x0, xzr
  44d3f8:	ret
  44d3fc:	ldr	x9, [x0, #24]
  44d400:	ldrb	w10, [x9]
  44d404:	cmp	w10, #0x6e
  44d408:	b.ne	44d424 <feof@plt+0x4a344>  // b.any
  44d40c:	add	x11, x9, #0x1
  44d410:	str	x11, [x0, #24]
  44d414:	ldrb	w10, [x9, #1]
  44d418:	mov	w8, #0x1                   	// #1
  44d41c:	mov	x9, x11
  44d420:	b	44d428 <feof@plt+0x4a348>
  44d424:	mov	w8, wzr
  44d428:	sub	w11, w10, #0x30
  44d42c:	cmp	w11, #0x9
  44d430:	b.hi	44d494 <feof@plt+0x4a3b4>  // b.pmore
  44d434:	mov	w12, #0x2f                  	// #47
  44d438:	mov	w13, #0x6667                	// #26215
  44d43c:	mov	w11, wzr
  44d440:	add	x9, x9, #0x1
  44d444:	movk	w12, #0x8000, lsl #16
  44d448:	movk	w13, #0x6666, lsl #16
  44d44c:	mov	w14, #0xa                   	// #10
  44d450:	and	w15, w10, #0xff
  44d454:	sub	w10, w12, w15
  44d458:	smull	x10, w10, w13
  44d45c:	lsr	x16, x10, #63
  44d460:	asr	x10, x10, #34
  44d464:	add	w10, w10, w16
  44d468:	cmp	w11, w10
  44d46c:	b.gt	44d548 <feof@plt+0x4a468>
  44d470:	str	x9, [x0, #24]
  44d474:	ldrb	w10, [x9], #1
  44d478:	madd	w11, w11, w14, w15
  44d47c:	sub	w11, w11, #0x30
  44d480:	sub	w15, w10, #0x30
  44d484:	cmp	w15, #0xa
  44d488:	b.cc	44d450 <feof@plt+0x4a370>  // b.lo, b.ul, b.last
  44d48c:	sub	x9, x9, #0x1
  44d490:	b	44d498 <feof@plt+0x4a3b8>
  44d494:	mov	w11, wzr
  44d498:	cmp	w8, #0x0
  44d49c:	cneg	w10, w11, ne  // ne = any
  44d4a0:	cmp	w10, #0x1
  44d4a4:	b.lt	44d548 <feof@plt+0x4a468>  // b.tstop
  44d4a8:	ldr	x8, [x0, #8]
  44d4ac:	sub	x11, x8, x9
  44d4b0:	mov	w8, w10
  44d4b4:	cmp	x11, x8
  44d4b8:	b.lt	44d5e4 <feof@plt+0x4a504>  // b.tstop
  44d4bc:	ldrb	w11, [x0, #16]
  44d4c0:	add	x8, x9, x8
  44d4c4:	str	x8, [x0, #24]
  44d4c8:	tbz	w11, #2, 44d4e0 <feof@plt+0x4a400>
  44d4cc:	ldrb	w11, [x8]
  44d4d0:	cmp	w11, #0x24
  44d4d4:	b.ne	44d4e0 <feof@plt+0x4a400>  // b.any
  44d4d8:	add	x8, x8, #0x1
  44d4dc:	str	x8, [x0, #24]
  44d4e0:	cmp	w10, #0xa
  44d4e4:	b.lt	44d504 <feof@plt+0x4a424>  // b.tstop
  44d4e8:	ldr	x8, [x9]
  44d4ec:	mov	x11, #0x475f                	// #18271
  44d4f0:	movk	x11, #0x4f4c, lsl #16
  44d4f4:	movk	x11, #0x4142, lsl #32
  44d4f8:	movk	x11, #0x5f4c, lsl #48
  44d4fc:	cmp	x8, x11
  44d500:	b.eq	44d550 <feof@plt+0x4a470>  // b.none
  44d504:	ldp	w11, w8, [x0, #40]
  44d508:	sxtw	x11, w11
  44d50c:	cmp	w11, w8
  44d510:	b.ge	44d5e4 <feof@plt+0x4a504>  // b.tcont
  44d514:	ldr	x12, [x0, #32]
  44d518:	mov	w8, #0x18                  	// #24
  44d51c:	add	w13, w11, #0x1
  44d520:	madd	x8, x11, x8, x12
  44d524:	str	wzr, [x8, #4]
  44d528:	str	w13, [x0, #40]
  44d52c:	cbz	x12, 44d5e4 <feof@plt+0x4a504>
  44d530:	mov	w13, #0x18                  	// #24
  44d534:	madd	x11, x11, x13, x12
  44d538:	str	xzr, [x8]
  44d53c:	str	x9, [x11, #8]
  44d540:	str	w10, [x11, #16]
  44d544:	b	44d5e8 <feof@plt+0x4a508>
  44d548:	mov	x0, xzr
  44d54c:	ret
  44d550:	ldrb	w8, [x9, #8]
  44d554:	sub	w8, w8, #0x24
  44d558:	cmp	w8, #0x3b
  44d55c:	b.hi	44d504 <feof@plt+0x4a424>  // b.pmore
  44d560:	mov	w11, #0x1                   	// #1
  44d564:	lsl	x8, x11, x8
  44d568:	mov	x11, #0x401                 	// #1025
  44d56c:	movk	x11, #0x800, lsl #48
  44d570:	tst	x8, x11
  44d574:	b.eq	44d504 <feof@plt+0x4a424>  // b.none
  44d578:	ldrb	w8, [x9, #9]
  44d57c:	cmp	w8, #0x4e
  44d580:	b.ne	44d504 <feof@plt+0x4a424>  // b.any
  44d584:	ldr	w8, [x0, #72]
  44d588:	ldp	w9, w11, [x0, #40]
  44d58c:	sxtw	x9, w9
  44d590:	sub	w8, w8, w10
  44d594:	add	w8, w8, #0x16
  44d598:	cmp	w9, w11
  44d59c:	str	w8, [x0, #72]
  44d5a0:	b.ge	44d5e4 <feof@plt+0x4a504>  // b.tcont
  44d5a4:	ldr	x10, [x0, #32]
  44d5a8:	mov	w8, #0x18                  	// #24
  44d5ac:	add	w11, w9, #0x1
  44d5b0:	madd	x8, x9, x8, x10
  44d5b4:	str	wzr, [x8, #4]
  44d5b8:	str	w11, [x0, #40]
  44d5bc:	cbz	x10, 44d5e4 <feof@plt+0x4a504>
  44d5c0:	mov	w11, #0x18                  	// #24
  44d5c4:	adrp	x12, 474000 <_obstack_memory_used@@Base+0x12838>
  44d5c8:	add	x12, x12, #0x29c
  44d5cc:	mov	w13, #0x15                  	// #21
  44d5d0:	madd	x9, x9, x11, x10
  44d5d4:	str	xzr, [x8]
  44d5d8:	str	x12, [x9, #8]
  44d5dc:	str	w13, [x9, #16]
  44d5e0:	b	44d5e8 <feof@plt+0x4a508>
  44d5e4:	mov	x8, xzr
  44d5e8:	str	x8, [x0, #64]
  44d5ec:	mov	x0, x8
  44d5f0:	ret
  44d5f4:	stp	x29, x30, [sp, #-64]!
  44d5f8:	stp	x22, x21, [sp, #32]
  44d5fc:	stp	x20, x19, [sp, #48]
  44d600:	ldr	x8, [x0, #24]
  44d604:	str	x23, [sp, #16]
  44d608:	mov	x29, sp
  44d60c:	ldrb	w9, [x8]
  44d610:	cmp	w9, #0x53
  44d614:	b.ne	44d900 <feof@plt+0x4a820>  // b.any
  44d618:	add	x9, x8, #0x1
  44d61c:	str	x9, [x0, #24]
  44d620:	ldrb	w10, [x8, #1]
  44d624:	mov	x19, x0
  44d628:	cbz	w10, 44d678 <feof@plt+0x4a598>
  44d62c:	add	x9, x8, #0x2
  44d630:	str	x9, [x19, #24]
  44d634:	ldrb	w10, [x8, #1]
  44d638:	cmp	w10, #0x5f
  44d63c:	b.ne	44d65c <feof@plt+0x4a57c>  // b.any
  44d640:	mov	w8, wzr
  44d644:	ldr	w9, [x19, #56]
  44d648:	cmp	w8, w9
  44d64c:	b.cs	44d900 <feof@plt+0x4a820>  // b.hs, b.nlast
  44d650:	ldr	x9, [x19, #48]
  44d654:	ldr	x0, [x9, w8, uxtw #3]
  44d658:	b	44d904 <feof@plt+0x4a824>
  44d65c:	sub	w8, w10, #0x30
  44d660:	cmp	w8, #0xa
  44d664:	b.cc	44d6d4 <feof@plt+0x4a5f4>  // b.lo, b.ul, b.last
  44d668:	sub	w8, w10, #0x41
  44d66c:	and	w8, w8, #0xff
  44d670:	cmp	w8, #0x19
  44d674:	b.ls	44d6d4 <feof@plt+0x4a5f4>  // b.plast
  44d678:	ldr	w8, [x19, #16]
  44d67c:	ubfx	w8, w8, #3, #1
  44d680:	cbz	w1, 44d698 <feof@plt+0x4a5b8>
  44d684:	cbnz	w8, 44d698 <feof@plt+0x4a5b8>
  44d688:	ldrb	w8, [x9]
  44d68c:	sub	w8, w8, #0x43
  44d690:	cmp	w8, #0x2
  44d694:	cset	w8, cc  // cc = lo, ul, last
  44d698:	sub	w9, w10, #0x61
  44d69c:	cmp	w9, #0x13
  44d6a0:	mov	x0, xzr
  44d6a4:	b.hi	44d904 <feof@plt+0x4a824>  // b.pmore
  44d6a8:	adrp	x10, 473000 <_obstack_memory_used@@Base+0x11838>
  44d6ac:	add	x10, x10, #0x104
  44d6b0:	adr	x11, 44d6c8 <feof@plt+0x4a5e8>
  44d6b4:	ldrb	w12, [x10, x9]
  44d6b8:	add	x11, x11, x12, lsl #2
  44d6bc:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44d6c0:	add	x9, x9, #0xf08
  44d6c4:	br	x11
  44d6c8:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44d6cc:	add	x9, x9, #0xf40
  44d6d0:	b	44d77c <feof@plt+0x4a69c>
  44d6d4:	mov	w11, wzr
  44d6d8:	mov	w8, #0x24                  	// #36
  44d6dc:	b	44d6ec <feof@plt+0x4a60c>
  44d6e0:	cmp	w10, #0x5f
  44d6e4:	mov	w11, w12
  44d6e8:	b.eq	44d918 <feof@plt+0x4a838>  // b.none
  44d6ec:	sub	w12, w10, #0x30
  44d6f0:	and	w12, w12, #0xff
  44d6f4:	cmp	w12, #0xa
  44d6f8:	and	w10, w10, #0xff
  44d6fc:	b.cs	44d708 <feof@plt+0x4a628>  // b.hs, b.nlast
  44d700:	mov	w12, #0xffffffd0            	// #-48
  44d704:	b	44d718 <feof@plt+0x4a638>
  44d708:	sub	w12, w10, #0x41
  44d70c:	cmp	w12, #0x19
  44d710:	b.hi	44d900 <feof@plt+0x4a820>  // b.pmore
  44d714:	mov	w12, #0xffffffc9            	// #-55
  44d718:	madd	w12, w11, w8, w12
  44d71c:	add	w12, w12, w10
  44d720:	cmp	w12, w11
  44d724:	b.cc	44d900 <feof@plt+0x4a820>  // b.lo, b.ul, b.last
  44d728:	ldrb	w10, [x9]
  44d72c:	cbz	w10, 44d6e0 <feof@plt+0x4a600>
  44d730:	add	x11, x9, #0x1
  44d734:	str	x11, [x19, #24]
  44d738:	ldrb	w10, [x9]
  44d73c:	mov	x9, x11
  44d740:	b	44d6e0 <feof@plt+0x4a600>
  44d744:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44d748:	add	x9, x9, #0xf78
  44d74c:	b	44d77c <feof@plt+0x4a69c>
  44d750:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  44d754:	add	x9, x9, #0x58
  44d758:	b	44d77c <feof@plt+0x4a69c>
  44d75c:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44d760:	add	x9, x9, #0xfe8
  44d764:	b	44d77c <feof@plt+0x4a69c>
  44d768:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  44d76c:	add	x9, x9, #0x20
  44d770:	b	44d77c <feof@plt+0x4a69c>
  44d774:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44d778:	add	x9, x9, #0xfb0
  44d77c:	ldr	x10, [x9, #40]
  44d780:	cbz	x10, 44d7d0 <feof@plt+0x4a6f0>
  44d784:	ldp	w11, w12, [x19, #40]
  44d788:	sxtw	x11, w11
  44d78c:	cmp	w11, w12
  44d790:	b.ge	44d7c8 <feof@plt+0x4a6e8>  // b.tcont
  44d794:	ldr	x14, [x19, #32]
  44d798:	ldr	w13, [x9, #48]
  44d79c:	mov	w15, #0x18                  	// #24
  44d7a0:	add	w16, w11, #0x1
  44d7a4:	madd	x12, x11, x15, x14
  44d7a8:	str	wzr, [x12, #4]
  44d7ac:	str	w16, [x19, #40]
  44d7b0:	cbz	x14, 44d7c8 <feof@plt+0x4a6e8>
  44d7b4:	madd	x11, x11, x15, x14
  44d7b8:	str	w15, [x12]
  44d7bc:	str	x10, [x11, #8]
  44d7c0:	str	w13, [x11, #16]
  44d7c4:	b	44d7cc <feof@plt+0x4a6ec>
  44d7c8:	mov	x12, xzr
  44d7cc:	str	x12, [x19, #64]
  44d7d0:	cmp	w8, #0x0
  44d7d4:	mov	w8, #0x20                  	// #32
  44d7d8:	mov	w12, #0x10                  	// #16
  44d7dc:	add	x10, x9, #0x18
  44d7e0:	add	x11, x9, #0x8
  44d7e4:	csel	x8, x12, x8, eq  // eq = none
  44d7e8:	ldr	w13, [x19, #72]
  44d7ec:	ldr	w8, [x9, x8]
  44d7f0:	ldp	w9, w12, [x19, #40]
  44d7f4:	csel	x10, x11, x10, eq  // eq = none
  44d7f8:	ldr	x10, [x10]
  44d7fc:	add	w11, w13, w8
  44d800:	sxtw	x9, w9
  44d804:	cmp	w9, w12
  44d808:	str	w11, [x19, #72]
  44d80c:	b.ge	44d840 <feof@plt+0x4a760>  // b.tcont
  44d810:	ldr	x11, [x19, #32]
  44d814:	mov	w12, #0x18                  	// #24
  44d818:	add	w13, w9, #0x1
  44d81c:	madd	x0, x9, x12, x11
  44d820:	str	wzr, [x0, #4]
  44d824:	str	w13, [x19, #40]
  44d828:	cbz	x11, 44d840 <feof@plt+0x4a760>
  44d82c:	madd	x9, x9, x12, x11
  44d830:	str	w12, [x0]
  44d834:	str	x10, [x9, #8]
  44d838:	str	w8, [x9, #16]
  44d83c:	b	44d844 <feof@plt+0x4a764>
  44d840:	mov	x0, xzr
  44d844:	ldr	x8, [x19, #24]
  44d848:	ldrb	w9, [x8]
  44d84c:	cmp	w9, #0x42
  44d850:	b.ne	44d904 <feof@plt+0x4a824>  // b.any
  44d854:	ldr	x20, [x19, #64]
  44d858:	mov	w21, #0x18                  	// #24
  44d85c:	mov	w22, #0x4c                  	// #76
  44d860:	b	44d878 <feof@plt+0x4a798>
  44d864:	mov	x0, xzr
  44d868:	ldr	x8, [x19, #24]
  44d86c:	ldrb	w9, [x8]
  44d870:	cmp	w9, #0x42
  44d874:	b.ne	44d8d4 <feof@plt+0x4a7f4>  // b.any
  44d878:	mov	x23, x0
  44d87c:	add	x8, x8, #0x1
  44d880:	mov	x0, x19
  44d884:	str	x8, [x19, #24]
  44d888:	bl	44d3fc <feof@plt+0x4a31c>
  44d88c:	mov	x8, x0
  44d890:	mov	x0, xzr
  44d894:	cbz	x23, 44d868 <feof@plt+0x4a788>
  44d898:	cbz	x8, 44d868 <feof@plt+0x4a788>
  44d89c:	ldp	w9, w10, [x19, #40]
  44d8a0:	sxtw	x9, w9
  44d8a4:	cmp	w9, w10
  44d8a8:	b.ge	44d864 <feof@plt+0x4a784>  // b.tcont
  44d8ac:	ldr	x10, [x19, #32]
  44d8b0:	add	w11, w9, #0x1
  44d8b4:	madd	x0, x9, x21, x10
  44d8b8:	str	wzr, [x0, #4]
  44d8bc:	str	w11, [x19, #40]
  44d8c0:	cbz	x10, 44d864 <feof@plt+0x4a784>
  44d8c4:	madd	x9, x9, x21, x10
  44d8c8:	str	w22, [x0]
  44d8cc:	stp	x23, x8, [x9, #8]
  44d8d0:	b	44d868 <feof@plt+0x4a788>
  44d8d4:	str	x20, [x19, #64]
  44d8d8:	cbz	x0, 44d904 <feof@plt+0x4a824>
  44d8dc:	ldp	w8, w9, [x19, #56]
  44d8e0:	sxtw	x8, w8
  44d8e4:	cmp	w8, w9
  44d8e8:	b.ge	44d900 <feof@plt+0x4a820>  // b.tcont
  44d8ec:	ldr	x9, [x19, #48]
  44d8f0:	add	w10, w8, #0x1
  44d8f4:	str	x0, [x9, x8, lsl #3]
  44d8f8:	str	w10, [x19, #56]
  44d8fc:	b	44d904 <feof@plt+0x4a824>
  44d900:	mov	x0, xzr
  44d904:	ldp	x20, x19, [sp, #48]
  44d908:	ldp	x22, x21, [sp, #32]
  44d90c:	ldr	x23, [sp, #16]
  44d910:	ldp	x29, x30, [sp], #64
  44d914:	ret
  44d918:	add	w8, w12, #0x1
  44d91c:	b	44d644 <feof@plt+0x4a564>
  44d920:	stp	x29, x30, [sp, #-64]!
  44d924:	str	x28, [sp, #16]
  44d928:	stp	x22, x21, [sp, #32]
  44d92c:	stp	x20, x19, [sp, #48]
  44d930:	mov	x29, sp
  44d934:	sub	sp, sp, #0x190
  44d938:	mov	x19, sp
  44d93c:	add	x8, x19, #0x8
  44d940:	mov	w21, w0
  44d944:	movi	v0.2d, #0x0
  44d948:	add	x8, x8, #0x148
  44d94c:	add	x0, x19, #0x8
  44d950:	mov	x20, x1
  44d954:	str	xzr, [x19, #264]
  44d958:	strb	wzr, [x19, #272]
  44d95c:	stp	xzr, xzr, [x19, #296]
  44d960:	stp	x2, x3, [x19, #280]
  44d964:	stp	xzr, xzr, [x19, #312]
  44d968:	str	xzr, [x19, #328]
  44d96c:	stp	q0, q0, [x8]
  44d970:	str	xzr, [x8, #32]
  44d974:	bl	4508f8 <feof@plt+0x4d818>
  44d978:	ldr	w8, [x19, #316]
  44d97c:	cmp	w8, #0x7ff
  44d980:	b.gt	44d988 <feof@plt+0x4a8a8>
  44d984:	str	wzr, [x19, #316]
  44d988:	ldr	w8, [x19, #356]
  44d98c:	ldr	w9, [x19, #372]
  44d990:	mov	x22, sp
  44d994:	str	xzr, [x19, #376]
  44d998:	cmp	w8, #0x1
  44d99c:	mul	w9, w9, w8
  44d9a0:	csinc	w8, w8, wzr, gt
  44d9a4:	sub	x8, sp, w8, uxtw #4
  44d9a8:	str	w9, [x19, #372]
  44d9ac:	mov	sp, x8
  44d9b0:	mov	w9, w9
  44d9b4:	cmp	w9, #0x1
  44d9b8:	csinc	w9, w9, wzr, gt
  44d9bc:	sub	x9, sp, w9, uxtw #4
  44d9c0:	mov	sp, x9
  44d9c4:	str	x8, [x19, #344]
  44d9c8:	str	x9, [x19, #360]
  44d9cc:	cbz	x20, 44d9e8 <feof@plt+0x4a908>
  44d9d0:	ldr	w8, [x20, #4]
  44d9d4:	cmp	w8, #0x1
  44d9d8:	b.gt	44d9e8 <feof@plt+0x4a908>
  44d9dc:	ldr	w9, [x19, #316]
  44d9e0:	cmp	w9, #0x401
  44d9e4:	b.lt	44da34 <feof@plt+0x4a954>  // b.tstop
  44d9e8:	mov	w8, #0x1                   	// #1
  44d9ec:	str	w8, [x19, #312]
  44d9f0:	mov	sp, x22
  44d9f4:	ldr	x8, [x19, #264]
  44d9f8:	add	x9, x19, #0x8
  44d9fc:	add	x0, x19, #0x8
  44da00:	strb	wzr, [x9, x8]
  44da04:	ldp	x8, x2, [x19, #280]
  44da08:	ldr	x1, [x19, #264]
  44da0c:	blr	x8
  44da10:	ldr	w8, [x19, #312]
  44da14:	cmp	w8, #0x0
  44da18:	cset	w0, eq  // eq = none
  44da1c:	mov	sp, x29
  44da20:	ldp	x20, x19, [sp, #48]
  44da24:	ldp	x22, x21, [sp, #32]
  44da28:	ldr	x28, [sp, #16]
  44da2c:	ldp	x29, x30, [sp], #64
  44da30:	ret
  44da34:	add	w8, w8, #0x1
  44da38:	str	w8, [x20, #4]
  44da3c:	ldr	x8, [x19, #336]
  44da40:	add	w9, w9, #0x1
  44da44:	sub	x10, x29, #0x10
  44da48:	add	x0, x19, #0x8
  44da4c:	mov	w1, w21
  44da50:	mov	x2, x20
  44da54:	str	w9, [x19, #316]
  44da58:	stp	x20, x8, [x29, #-16]
  44da5c:	str	x10, [x19, #336]
  44da60:	bl	4509c8 <feof@plt+0x4d8e8>
  44da64:	ldur	x8, [x29, #-8]
  44da68:	str	x8, [x19, #336]
  44da6c:	ldr	w8, [x20, #4]
  44da70:	sub	w8, w8, #0x1
  44da74:	str	w8, [x20, #4]
  44da78:	ldr	w8, [x19, #316]
  44da7c:	sub	w8, w8, #0x1
  44da80:	str	w8, [x19, #316]
  44da84:	b	44d9f0 <feof@plt+0x4a910>
  44da88:	sub	sp, sp, #0x50
  44da8c:	stp	x22, x21, [sp, #48]
  44da90:	stp	x20, x19, [sp, #64]
  44da94:	mov	x19, x3
  44da98:	mov	x20, x1
  44da9c:	mov	w21, w0
  44daa0:	stp	x29, x30, [sp, #32]
  44daa4:	add	x29, sp, #0x20
  44daa8:	stp	xzr, xzr, [sp]
  44daac:	str	wzr, [sp, #24]
  44dab0:	str	xzr, [sp, #16]
  44dab4:	cbz	w2, 44daf8 <feof@plt+0x4aa18>
  44dab8:	sxtw	x8, w2
  44dabc:	mov	w9, #0x2                   	// #2
  44dac0:	mov	x22, x9
  44dac4:	cmp	x9, x8
  44dac8:	lsl	x9, x9, #1
  44dacc:	b.cc	44dac0 <feof@plt+0x4a9e0>  // b.lo, b.ul, b.last
  44dad0:	mov	x0, x22
  44dad4:	bl	402f10 <malloc@plt>
  44dad8:	cbz	x0, 44dae8 <feof@plt+0x4aa08>
  44dadc:	str	x0, [sp]
  44dae0:	str	x22, [sp, #16]
  44dae4:	b	44daf8 <feof@plt+0x4aa18>
  44dae8:	mov	w8, #0x1                   	// #1
  44daec:	stp	xzr, xzr, [sp]
  44daf0:	str	xzr, [sp, #16]
  44daf4:	str	w8, [sp, #24]
  44daf8:	adrp	x2, 44d000 <feof@plt+0x49f20>
  44dafc:	add	x2, x2, #0xb54
  44db00:	mov	x3, sp
  44db04:	mov	w0, w21
  44db08:	mov	x1, x20
  44db0c:	bl	44d920 <feof@plt+0x4a840>
  44db10:	cbz	w0, 44db30 <feof@plt+0x4aa50>
  44db14:	ldr	w8, [sp, #24]
  44db18:	ldr	x9, [sp, #16]
  44db1c:	cmp	w8, #0x0
  44db20:	csinc	x8, x9, xzr, eq  // eq = none
  44db24:	str	x8, [x19]
  44db28:	ldr	x0, [sp]
  44db2c:	b	44db40 <feof@plt+0x4aa60>
  44db30:	ldr	x0, [sp]
  44db34:	bl	402b20 <free@plt>
  44db38:	mov	x0, xzr
  44db3c:	str	xzr, [x19]
  44db40:	ldp	x20, x19, [sp, #64]
  44db44:	ldp	x22, x21, [sp, #48]
  44db48:	ldp	x29, x30, [sp, #32]
  44db4c:	add	sp, sp, #0x50
  44db50:	ret
  44db54:	stp	x29, x30, [sp, #-48]!
  44db58:	stp	x22, x21, [sp, #16]
  44db5c:	stp	x20, x19, [sp, #32]
  44db60:	ldp	x8, x9, [x2, #8]
  44db64:	mov	x19, x2
  44db68:	mov	x20, x1
  44db6c:	mov	x21, x0
  44db70:	add	x8, x1, x8
  44db74:	add	x8, x8, #0x1
  44db78:	cmp	x8, x9
  44db7c:	mov	x29, sp
  44db80:	b.ls	44dbc0 <feof@plt+0x4aae0>  // b.plast
  44db84:	ldr	w10, [x19, #24]
  44db88:	cbnz	w10, 44dbc0 <feof@plt+0x4aae0>
  44db8c:	cmp	x9, #0x0
  44db90:	mov	w10, #0x2                   	// #2
  44db94:	csel	x9, x10, x9, eq  // eq = none
  44db98:	mov	x22, x9
  44db9c:	cmp	x9, x8
  44dba0:	lsl	x9, x9, #1
  44dba4:	b.cc	44db98 <feof@plt+0x4aab8>  // b.lo, b.ul, b.last
  44dba8:	ldr	x0, [x19]
  44dbac:	mov	x1, x22
  44dbb0:	bl	402ba0 <realloc@plt>
  44dbb4:	cbz	x0, 44dc04 <feof@plt+0x4ab24>
  44dbb8:	str	x0, [x19]
  44dbbc:	str	x22, [x19, #16]
  44dbc0:	ldr	w8, [x19, #24]
  44dbc4:	cbnz	w8, 44dbf4 <feof@plt+0x4ab14>
  44dbc8:	ldp	x8, x9, [x19]
  44dbcc:	mov	x1, x21
  44dbd0:	mov	x2, x20
  44dbd4:	add	x0, x8, x9
  44dbd8:	bl	4029c0 <memcpy@plt>
  44dbdc:	ldp	x9, x8, [x19]
  44dbe0:	add	x8, x8, x20
  44dbe4:	strb	wzr, [x9, x8]
  44dbe8:	ldr	x8, [x19, #8]
  44dbec:	add	x8, x8, x20
  44dbf0:	str	x8, [x19, #8]
  44dbf4:	ldp	x20, x19, [sp, #32]
  44dbf8:	ldp	x22, x21, [sp, #16]
  44dbfc:	ldp	x29, x30, [sp], #48
  44dc00:	ret
  44dc04:	ldr	x0, [x19]
  44dc08:	bl	402b20 <free@plt>
  44dc0c:	mov	w8, #0x1                   	// #1
  44dc10:	stp	xzr, xzr, [x19]
  44dc14:	str	xzr, [x19, #16]
  44dc18:	str	w8, [x19, #24]
  44dc1c:	ldr	w8, [x19, #24]
  44dc20:	cbnz	w8, 44dbf4 <feof@plt+0x4ab14>
  44dc24:	b	44dbc8 <feof@plt+0x4aae8>
  44dc28:	add	x8, x0, x2
  44dc2c:	lsl	w9, w2, #1
  44dc30:	str	w1, [x3, #16]
  44dc34:	str	x0, [x3, #24]
  44dc38:	stp	wzr, w2, [x3, #56]
  44dc3c:	stp	xzr, xzr, [x3, #72]
  44dc40:	stp	x0, x8, [x3]
  44dc44:	stp	wzr, w9, [x3, #40]
  44dc48:	str	xzr, [x3, #64]
  44dc4c:	ret
  44dc50:	sub	sp, sp, #0x30
  44dc54:	adrp	x2, 44d000 <feof@plt+0x49f20>
  44dc58:	add	x2, x2, #0xb54
  44dc5c:	mov	x3, sp
  44dc60:	stp	x29, x30, [sp, #32]
  44dc64:	add	x29, sp, #0x20
  44dc68:	stp	xzr, xzr, [sp]
  44dc6c:	str	wzr, [sp, #24]
  44dc70:	str	xzr, [sp, #16]
  44dc74:	bl	44dca0 <feof@plt+0x4abc0>
  44dc78:	ldr	x8, [sp]
  44dc7c:	cbnz	w0, 44dc8c <feof@plt+0x4abac>
  44dc80:	mov	x0, x8
  44dc84:	bl	402b20 <free@plt>
  44dc88:	mov	x8, xzr
  44dc8c:	ldp	x29, x30, [sp, #32]
  44dc90:	mov	x0, x8
  44dc94:	add	sp, sp, #0x30
  44dc98:	ret
  44dc9c:	b	44dca0 <feof@plt+0x4abc0>
  44dca0:	stp	x29, x30, [sp, #-96]!
  44dca4:	str	x27, [sp, #16]
  44dca8:	stp	x26, x25, [sp, #32]
  44dcac:	stp	x24, x23, [sp, #48]
  44dcb0:	stp	x22, x21, [sp, #64]
  44dcb4:	stp	x20, x19, [sp, #80]
  44dcb8:	mov	x29, sp
  44dcbc:	sub	sp, sp, #0x60
  44dcc0:	ldrb	w8, [x0]
  44dcc4:	mov	x19, x3
  44dcc8:	mov	x20, x2
  44dccc:	mov	x22, x0
  44dcd0:	cmp	w8, #0x5f
  44dcd4:	mov	w21, w1
  44dcd8:	b.ne	44dcf0 <feof@plt+0x4ac10>  // b.any
  44dcdc:	ldrb	w8, [x22, #1]
  44dce0:	cmp	w8, #0x5a
  44dce4:	b.ne	44dcf0 <feof@plt+0x4ac10>  // b.any
  44dce8:	mov	w24, #0x1                   	// #1
  44dcec:	b	44dd14 <feof@plt+0x4ac34>
  44dcf0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  44dcf4:	add	x1, x1, #0x293
  44dcf8:	mov	w2, #0x8                   	// #8
  44dcfc:	mov	x0, x22
  44dd00:	bl	402d40 <strncmp@plt>
  44dd04:	cbz	w0, 44ddd0 <feof@plt+0x4acf0>
  44dd08:	mov	w24, wzr
  44dd0c:	mov	w1, wzr
  44dd10:	tbz	w21, #4, 44df10 <feof@plt+0x4ae30>
  44dd14:	mov	x0, x22
  44dd18:	bl	402a50 <strlen@plt>
  44dd1c:	add	x8, x22, x0
  44dd20:	lsl	w27, w0, #1
  44dd24:	stur	w21, [x29, #-72]
  44dd28:	stur	x22, [x29, #-64]
  44dd2c:	stp	wzr, w0, [x29, #-32]
  44dd30:	stp	xzr, xzr, [x29, #-16]
  44dd34:	stp	x22, x8, [x29, #-88]
  44dd38:	stp	wzr, w27, [x29, #-48]
  44dd3c:	stur	xzr, [x29, #-24]
  44dd40:	tbnz	w21, #18, 44dd50 <feof@plt+0x4ac70>
  44dd44:	cmp	w27, #0x800
  44dd48:	mov	w1, wzr
  44dd4c:	b.hi	44df10 <feof@plt+0x4ae30>  // b.pmore
  44dd50:	mov	w8, #0x18                  	// #24
  44dd54:	umull	x8, w27, w8
  44dd58:	add	x8, x8, #0xf
  44dd5c:	and	x8, x8, #0x3ffffffff0
  44dd60:	mov	x9, sp
  44dd64:	mov	x26, sp
  44dd68:	sub	x23, x9, x8
  44dd6c:	mov	sp, x23
  44dd70:	and	x8, x0, #0xffffffff
  44dd74:	lsl	x8, x8, #3
  44dd78:	add	x8, x8, #0xf
  44dd7c:	mov	x9, sp
  44dd80:	and	x8, x8, #0xffffffff0
  44dd84:	sub	x8, x9, x8
  44dd88:	mov	sp, x8
  44dd8c:	sub	w9, w24, #0x2
  44dd90:	cmp	w9, #0x2
  44dd94:	stur	x23, [x29, #-56]
  44dd98:	stur	x8, [x29, #-40]
  44dd9c:	b.cc	44de28 <feof@plt+0x4ad48>  // b.lo, b.ul, b.last
  44dda0:	sub	x0, x29, #0x58
  44dda4:	cmp	w24, #0x1
  44dda8:	b.eq	44dea0 <feof@plt+0x4adc0>  // b.none
  44ddac:	bl	44bed4 <feof@plt+0x48df4>
  44ddb0:	mov	x22, x0
  44ddb4:	tbz	w21, #0, 44dee8 <feof@plt+0x4ae08>
  44ddb8:	mov	w1, wzr
  44ddbc:	cbz	x22, 44df0c <feof@plt+0x4ae2c>
  44ddc0:	ldur	x8, [x29, #-64]
  44ddc4:	ldrb	w8, [x8]
  44ddc8:	cbz	w8, 44deec <feof@plt+0x4ae0c>
  44ddcc:	b	44df0c <feof@plt+0x4ae2c>
  44ddd0:	ldrb	w8, [x22, #8]
  44ddd4:	sub	w8, w8, #0x24
  44ddd8:	cmp	w8, #0x3b
  44dddc:	b.hi	44dd08 <feof@plt+0x4ac28>  // b.pmore
  44dde0:	mov	w9, #0x1                   	// #1
  44dde4:	lsl	x8, x9, x8
  44dde8:	mov	x9, #0x401                 	// #1025
  44ddec:	movk	x9, #0x800, lsl #48
  44ddf0:	tst	x8, x9
  44ddf4:	b.eq	44dd08 <feof@plt+0x4ac28>  // b.none
  44ddf8:	ldrb	w8, [x22, #9]
  44ddfc:	cmp	w8, #0x49
  44de00:	b.eq	44de0c <feof@plt+0x4ad2c>  // b.none
  44de04:	cmp	w8, #0x44
  44de08:	b.ne	44dd08 <feof@plt+0x4ac28>  // b.any
  44de0c:	ldrb	w9, [x22, #10]
  44de10:	cmp	w9, #0x5f
  44de14:	b.ne	44dd08 <feof@plt+0x4ac28>  // b.any
  44de18:	cmp	w8, #0x49
  44de1c:	mov	w8, #0x2                   	// #2
  44de20:	cinc	w24, w8, ne  // ne = any
  44de24:	b	44dd14 <feof@plt+0x4ac34>
  44de28:	add	x25, x22, #0xb
  44de2c:	stur	x25, [x29, #-64]
  44de30:	ldrb	w8, [x22, #11]
  44de34:	cmp	w24, #0x2
  44de38:	mov	w9, #0x44                  	// #68
  44de3c:	cinc	w24, w9, ne  // ne = any
  44de40:	cmp	w8, #0x5f
  44de44:	b.ne	44de70 <feof@plt+0x4ad90>  // b.any
  44de48:	ldrb	w8, [x22, #12]
  44de4c:	cmp	w8, #0x5a
  44de50:	b.ne	44de70 <feof@plt+0x4ad90>  // b.any
  44de54:	add	x8, x22, #0xd
  44de58:	sub	x0, x29, #0x58
  44de5c:	mov	w1, wzr
  44de60:	stur	x8, [x29, #-64]
  44de64:	bl	44ad38 <feof@plt+0x47c58>
  44de68:	mov	x23, x0
  44de6c:	b	44deb8 <feof@plt+0x4add8>
  44de70:	mov	x0, x25
  44de74:	bl	402a50 <strlen@plt>
  44de78:	cmp	w27, #0x1
  44de7c:	b.lt	44deb4 <feof@plt+0x4add4>  // b.tstop
  44de80:	mov	w8, #0x1                   	// #1
  44de84:	cmp	w0, #0x1
  44de88:	str	wzr, [x23, #4]
  44de8c:	stur	w8, [x29, #-48]
  44de90:	b.lt	44deb4 <feof@plt+0x4add4>  // b.tstop
  44de94:	stp	xzr, x25, [x23]
  44de98:	str	w0, [x23, #16]
  44de9c:	b	44deb8 <feof@plt+0x4add8>
  44dea0:	mov	w1, #0x1                   	// #1
  44dea4:	bl	44ab7c <feof@plt+0x47a9c>
  44dea8:	mov	x22, x0
  44deac:	tbz	w21, #0, 44dee8 <feof@plt+0x4ae08>
  44deb0:	b	44ddb8 <feof@plt+0x4acd8>
  44deb4:	mov	x23, xzr
  44deb8:	sub	x0, x29, #0x58
  44debc:	mov	w1, w24
  44dec0:	mov	x2, x23
  44dec4:	mov	x3, xzr
  44dec8:	bl	44d370 <feof@plt+0x4a290>
  44decc:	ldur	x23, [x29, #-64]
  44ded0:	mov	x22, x0
  44ded4:	mov	x0, x23
  44ded8:	bl	402a50 <strlen@plt>
  44dedc:	add	x8, x23, x0
  44dee0:	stur	x8, [x29, #-64]
  44dee4:	tbnz	w21, #0, 44ddb8 <feof@plt+0x4acd8>
  44dee8:	cbz	x22, 44df08 <feof@plt+0x4ae28>
  44deec:	mov	w0, w21
  44def0:	mov	x1, x22
  44def4:	mov	x2, x20
  44def8:	mov	x3, x19
  44defc:	bl	44d920 <feof@plt+0x4a840>
  44df00:	mov	w1, w0
  44df04:	b	44df0c <feof@plt+0x4ae2c>
  44df08:	mov	w1, wzr
  44df0c:	mov	sp, x26
  44df10:	mov	w0, w1
  44df14:	mov	sp, x29
  44df18:	ldp	x20, x19, [sp, #80]
  44df1c:	ldp	x22, x21, [sp, #64]
  44df20:	ldp	x24, x23, [sp, #48]
  44df24:	ldp	x26, x25, [sp, #32]
  44df28:	ldr	x27, [sp, #16]
  44df2c:	ldp	x29, x30, [sp], #96
  44df30:	ret
  44df34:	sub	sp, sp, #0x30
  44df38:	adrp	x2, 44d000 <feof@plt+0x49f20>
  44df3c:	add	x2, x2, #0xb54
  44df40:	mov	x3, sp
  44df44:	mov	w1, #0x25                  	// #37
  44df48:	stp	x29, x30, [sp, #32]
  44df4c:	add	x29, sp, #0x20
  44df50:	stp	xzr, xzr, [sp]
  44df54:	str	wzr, [sp, #24]
  44df58:	str	xzr, [sp, #16]
  44df5c:	bl	44dca0 <feof@plt+0x4abc0>
  44df60:	ldr	x8, [sp]
  44df64:	cbnz	w0, 44df74 <feof@plt+0x4ae94>
  44df68:	mov	x0, x8
  44df6c:	bl	402b20 <free@plt>
  44df70:	mov	x8, xzr
  44df74:	ldp	x29, x30, [sp, #32]
  44df78:	mov	x0, x8
  44df7c:	add	sp, sp, #0x30
  44df80:	ret
  44df84:	mov	x3, x2
  44df88:	mov	x2, x1
  44df8c:	mov	w1, #0x25                  	// #37
  44df90:	b	44dca0 <feof@plt+0x4abc0>
  44df94:	sub	sp, sp, #0x20
  44df98:	stp	x29, x30, [sp, #16]
  44df9c:	add	x29, sp, #0x10
  44dfa0:	sub	x1, x29, #0x4
  44dfa4:	add	x2, sp, #0x8
  44dfa8:	bl	44dfc4 <feof@plt+0x4aee4>
  44dfac:	ldur	w8, [x29, #-4]
  44dfb0:	ldp	x29, x30, [sp, #16]
  44dfb4:	cmp	w0, #0x0
  44dfb8:	csel	w0, wzr, w8, eq  // eq = none
  44dfbc:	add	sp, sp, #0x20
  44dfc0:	ret
  44dfc4:	stp	x29, x30, [sp, #-48]!
  44dfc8:	stp	x22, x21, [sp, #16]
  44dfcc:	stp	x20, x19, [sp, #32]
  44dfd0:	mov	x29, sp
  44dfd4:	sub	sp, sp, #0x60
  44dfd8:	mov	x19, x2
  44dfdc:	mov	x20, x1
  44dfe0:	mov	x21, x0
  44dfe4:	str	wzr, [x1]
  44dfe8:	str	wzr, [x2]
  44dfec:	bl	402a50 <strlen@plt>
  44dff0:	add	x8, x21, x0
  44dff4:	stp	x21, x8, [x29, #-88]
  44dff8:	mov	w8, #0x4000                	// #16384
  44dffc:	stur	w8, [x29, #-72]
  44e000:	lsl	w8, w0, #1
  44e004:	mov	x9, sp
  44e008:	mov	w10, #0x18                  	// #24
  44e00c:	mov	x22, sp
  44e010:	stp	wzr, w8, [x29, #-48]
  44e014:	umsubl	x8, w8, w10, x9
  44e018:	stur	x21, [x29, #-64]
  44e01c:	stp	wzr, w0, [x29, #-32]
  44e020:	stp	xzr, xzr, [x29, #-16]
  44e024:	stur	xzr, [x29, #-24]
  44e028:	mov	sp, x8
  44e02c:	and	x9, x0, #0xffffffff
  44e030:	lsl	x9, x9, #3
  44e034:	add	x9, x9, #0xf
  44e038:	mov	x10, sp
  44e03c:	and	x9, x9, #0xffffffff0
  44e040:	sub	x9, x10, x9
  44e044:	mov	sp, x9
  44e048:	sub	x0, x29, #0x58
  44e04c:	mov	w1, #0x1                   	// #1
  44e050:	stur	x8, [x29, #-56]
  44e054:	stur	x9, [x29, #-40]
  44e058:	bl	44ab7c <feof@plt+0x47a9c>
  44e05c:	cbz	x0, 44e0a8 <feof@plt+0x4afc8>
  44e060:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44e064:	add	x9, x9, #0x118
  44e068:	b	44e078 <feof@plt+0x4af98>
  44e06c:	add	x8, x0, #0x8
  44e070:	ldr	x0, [x8]
  44e074:	cbz	x0, 44e0a8 <feof@plt+0x4afc8>
  44e078:	ldr	w8, [x0]
  44e07c:	sub	w10, w8, #0x1
  44e080:	cmp	w10, #0x7
  44e084:	mov	w8, wzr
  44e088:	b.hi	44e0ac <feof@plt+0x4afcc>  // b.pmore
  44e08c:	adr	x11, 44e06c <feof@plt+0x4af8c>
  44e090:	ldrb	w12, [x9, x10]
  44e094:	add	x11, x11, x12, lsl #2
  44e098:	br	x11
  44e09c:	add	x8, x0, #0x10
  44e0a0:	ldr	x0, [x8]
  44e0a4:	cbnz	x0, 44e078 <feof@plt+0x4af98>
  44e0a8:	mov	w8, wzr
  44e0ac:	mov	sp, x22
  44e0b0:	mov	w0, w8
  44e0b4:	mov	sp, x29
  44e0b8:	ldp	x20, x19, [sp, #32]
  44e0bc:	ldp	x22, x21, [sp, #16]
  44e0c0:	ldp	x29, x30, [sp], #48
  44e0c4:	ret
  44e0c8:	ldr	w8, [x0, #8]
  44e0cc:	str	w8, [x20]
  44e0d0:	mov	w8, #0x1                   	// #1
  44e0d4:	b	44e0ac <feof@plt+0x4afcc>
  44e0d8:	ldr	w8, [x0, #8]
  44e0dc:	str	w8, [x19]
  44e0e0:	mov	w8, #0x1                   	// #1
  44e0e4:	b	44e0ac <feof@plt+0x4afcc>
  44e0e8:	sub	sp, sp, #0x20
  44e0ec:	stp	x29, x30, [sp, #16]
  44e0f0:	add	x29, sp, #0x10
  44e0f4:	sub	x1, x29, #0x4
  44e0f8:	add	x2, sp, #0x8
  44e0fc:	bl	44dfc4 <feof@plt+0x4aee4>
  44e100:	ldr	w8, [sp, #8]
  44e104:	ldp	x29, x30, [sp, #16]
  44e108:	cmp	w0, #0x0
  44e10c:	csel	w0, wzr, w8, eq  // eq = none
  44e110:	add	sp, sp, #0x20
  44e114:	ret
  44e118:	sub	sp, sp, #0x40
  44e11c:	stp	x29, x30, [sp, #16]
  44e120:	stp	x22, x21, [sp, #32]
  44e124:	stp	x20, x19, [sp, #48]
  44e128:	mov	x22, x0
  44e12c:	ldr	x9, [x22, #24]!
  44e130:	mov	x19, x0
  44e134:	add	x29, sp, #0x10
  44e138:	ldrb	w8, [x9]
  44e13c:	sub	w8, w8, #0x4e
  44e140:	cmp	w8, #0xc
  44e144:	b.hi	44e1d8 <feof@plt+0x4b0f8>  // b.pmore
  44e148:	adrp	x10, 473000 <_obstack_memory_used@@Base+0x11838>
  44e14c:	add	x10, x10, #0x120
  44e150:	adr	x11, 44e160 <feof@plt+0x4b080>
  44e154:	ldrb	w12, [x10, x8]
  44e158:	add	x11, x11, x12, lsl #2
  44e15c:	br	x11
  44e160:	add	x8, x9, #0x1
  44e164:	add	x1, sp, #0x8
  44e168:	mov	w2, #0x1                   	// #1
  44e16c:	mov	x0, x19
  44e170:	str	x8, [x19, #24]
  44e174:	bl	44cf64 <feof@plt+0x49e84>
  44e178:	cbz	x0, 44e8ac <feof@plt+0x4b7cc>
  44e17c:	ldr	x8, [x22]
  44e180:	mov	x20, x0
  44e184:	ldrb	w9, [x8]
  44e188:	cmp	w9, #0x52
  44e18c:	b.eq	44e198 <feof@plt+0x4b0b8>  // b.none
  44e190:	cmp	w9, #0x4f
  44e194:	b.ne	44e3fc <feof@plt+0x4b31c>  // b.any
  44e198:	ldr	w10, [x19, #72]
  44e19c:	cmp	w9, #0x52
  44e1a0:	mov	w9, #0x2                   	// #2
  44e1a4:	mov	w11, #0x1f                  	// #31
  44e1a8:	cinc	w9, w9, ne  // ne = any
  44e1ac:	add	x8, x8, #0x1
  44e1b0:	cinc	w1, w11, ne  // ne = any
  44e1b4:	add	w9, w10, w9
  44e1b8:	mov	x0, x19
  44e1bc:	mov	x2, xzr
  44e1c0:	mov	x3, xzr
  44e1c4:	str	w9, [x19, #72]
  44e1c8:	str	x8, [x19, #24]
  44e1cc:	bl	44d370 <feof@plt+0x4a290>
  44e1d0:	mov	x21, x0
  44e1d4:	b	44e400 <feof@plt+0x4b320>
  44e1d8:	mov	x0, x19
  44e1dc:	bl	44eb14 <feof@plt+0x4ba34>
  44e1e0:	ldr	x8, [x19, #24]
  44e1e4:	mov	x21, x0
  44e1e8:	ldrb	w8, [x8]
  44e1ec:	cmp	w8, #0x49
  44e1f0:	b.ne	44e8b0 <feof@plt+0x4b7d0>  // b.any
  44e1f4:	cbz	x21, 44e8b0 <feof@plt+0x4b7d0>
  44e1f8:	ldp	w8, w9, [x19, #56]
  44e1fc:	sxtw	x8, w8
  44e200:	cmp	w8, w9
  44e204:	b.ge	44e8ac <feof@plt+0x4b7cc>  // b.tcont
  44e208:	ldr	x9, [x19, #48]
  44e20c:	str	x21, [x9, x8, lsl #3]
  44e210:	ldr	x9, [x19, #24]
  44e214:	add	w8, w8, #0x1
  44e218:	str	w8, [x19, #56]
  44e21c:	ldrb	w8, [x9]
  44e220:	sub	w8, w8, #0x49
  44e224:	cmp	w8, #0x1
  44e228:	b.hi	44e8ac <feof@plt+0x4b7cc>  // b.pmore
  44e22c:	add	x8, x9, #0x1
  44e230:	mov	x0, x19
  44e234:	str	x8, [x19, #24]
  44e238:	bl	44f800 <feof@plt+0x4c720>
  44e23c:	cbz	x0, 44e8ac <feof@plt+0x4b7cc>
  44e240:	ldp	w8, w9, [x19, #40]
  44e244:	sxtw	x8, w8
  44e248:	cmp	w8, w9
  44e24c:	b.ge	44e8ac <feof@plt+0x4b7cc>  // b.tcont
  44e250:	ldr	x9, [x19, #32]
  44e254:	mov	w10, #0x18                  	// #24
  44e258:	add	w11, w8, #0x1
  44e25c:	madd	x10, x8, x10, x9
  44e260:	str	wzr, [x10, #4]
  44e264:	str	w11, [x19, #40]
  44e268:	cbz	x9, 44e8ac <feof@plt+0x4b7cc>
  44e26c:	mov	w12, #0x18                  	// #24
  44e270:	mov	w11, #0x4                   	// #4
  44e274:	madd	x8, x8, x12, x9
  44e278:	str	w11, [x10]
  44e27c:	stp	x21, x0, [x8, #8]
  44e280:	mov	x21, x10
  44e284:	b	44e8b0 <feof@plt+0x4b7d0>
  44e288:	ldrb	w8, [x9, #1]
  44e28c:	cmp	w8, #0x74
  44e290:	b.ne	44e388 <feof@plt+0x4b2a8>  // b.any
  44e294:	ldp	w8, w10, [x19, #40]
  44e298:	add	x9, x9, #0x2
  44e29c:	sxtw	x8, w8
  44e2a0:	str	x9, [x19, #24]
  44e2a4:	cmp	w8, w10
  44e2a8:	b.ge	44e3a0 <feof@plt+0x4b2c0>  // b.tcont
  44e2ac:	ldr	x9, [x19, #32]
  44e2b0:	mov	w10, #0x18                  	// #24
  44e2b4:	add	w11, w8, #0x1
  44e2b8:	madd	x21, x8, x10, x9
  44e2bc:	str	wzr, [x21, #4]
  44e2c0:	str	w11, [x19, #40]
  44e2c4:	cbz	x9, 44e3a0 <feof@plt+0x4b2c0>
  44e2c8:	mov	w10, #0x18                  	// #24
  44e2cc:	adrp	x11, 474000 <_obstack_memory_used@@Base+0x12838>
  44e2d0:	add	x11, x11, #0x28f
  44e2d4:	mov	w12, #0x3                   	// #3
  44e2d8:	madd	x8, x8, x10, x9
  44e2dc:	str	xzr, [x21]
  44e2e0:	str	x11, [x8, #8]
  44e2e4:	str	w12, [x8, #16]
  44e2e8:	b	44e3a4 <feof@plt+0x4b2c4>
  44e2ec:	mov	x0, x19
  44e2f0:	ldp	x20, x19, [sp, #48]
  44e2f4:	ldp	x22, x21, [sp, #32]
  44e2f8:	ldp	x29, x30, [sp, #16]
  44e2fc:	add	sp, sp, #0x40
  44e300:	b	44eb14 <feof@plt+0x4ba34>
  44e304:	add	x8, x9, #0x1
  44e308:	mov	x0, x19
  44e30c:	mov	w1, wzr
  44e310:	str	x8, [x19, #24]
  44e314:	bl	44ad38 <feof@plt+0x47c58>
  44e318:	cbz	x0, 44e8ac <feof@plt+0x4b7cc>
  44e31c:	ldr	x11, [x22]
  44e320:	ldrb	w8, [x11]
  44e324:	cmp	w8, #0x45
  44e328:	b.ne	44e8ac <feof@plt+0x4b7cc>  // b.any
  44e32c:	add	x8, x11, #0x1
  44e330:	str	x8, [x22]
  44e334:	ldrb	w8, [x11, #1]
  44e338:	mov	x20, x0
  44e33c:	cmp	w8, #0x64
  44e340:	b.eq	44e4fc <feof@plt+0x4b41c>  // b.none
  44e344:	cmp	w8, #0x73
  44e348:	b.ne	44e528 <feof@plt+0x4b448>  // b.any
  44e34c:	add	x8, x11, #0x2
  44e350:	str	x8, [x22]
  44e354:	ldrb	w8, [x11, #2]
  44e358:	cmp	w8, #0x5f
  44e35c:	b.ne	44e6c0 <feof@plt+0x4b5e0>  // b.any
  44e360:	add	x10, x11, #0x3
  44e364:	str	x10, [x22]
  44e368:	ldrb	w9, [x11, #3]
  44e36c:	cmp	w9, #0x5f
  44e370:	b.ne	44e5fc <feof@plt+0x4b51c>  // b.any
  44e374:	add	x10, x11, #0x4
  44e378:	str	x10, [x22]
  44e37c:	ldrb	w9, [x11, #4]
  44e380:	mov	w8, #0x2                   	// #2
  44e384:	b	44e600 <feof@plt+0x4b520>
  44e388:	mov	x0, x19
  44e38c:	mov	w1, wzr
  44e390:	bl	44d5f4 <feof@plt+0x4a514>
  44e394:	mov	x20, x0
  44e398:	mov	w8, #0x1                   	// #1
  44e39c:	b	44e454 <feof@plt+0x4b374>
  44e3a0:	mov	x21, xzr
  44e3a4:	mov	x0, x19
  44e3a8:	bl	44eb14 <feof@plt+0x4ba34>
  44e3ac:	mov	x20, xzr
  44e3b0:	cbz	x21, 44e444 <feof@plt+0x4b364>
  44e3b4:	cbz	x0, 44e444 <feof@plt+0x4b364>
  44e3b8:	ldp	w8, w9, [x19, #40]
  44e3bc:	sxtw	x8, w8
  44e3c0:	cmp	w8, w9
  44e3c4:	b.ge	44e440 <feof@plt+0x4b360>  // b.tcont
  44e3c8:	ldr	x9, [x19, #32]
  44e3cc:	mov	w10, #0x18                  	// #24
  44e3d0:	add	w11, w8, #0x1
  44e3d4:	madd	x20, x8, x10, x9
  44e3d8:	str	wzr, [x20, #4]
  44e3dc:	str	w11, [x19, #40]
  44e3e0:	cbz	x9, 44e440 <feof@plt+0x4b360>
  44e3e4:	mov	w11, #0x18                  	// #24
  44e3e8:	mov	w10, #0x1                   	// #1
  44e3ec:	madd	x8, x8, x11, x9
  44e3f0:	str	w10, [x20]
  44e3f4:	stp	x21, x0, [x8, #8]
  44e3f8:	b	44e444 <feof@plt+0x4b364>
  44e3fc:	mov	x21, xzr
  44e400:	mov	x0, x19
  44e404:	bl	44f220 <feof@plt+0x4c140>
  44e408:	str	x0, [x20]
  44e40c:	cbz	x0, 44e8ac <feof@plt+0x4b7cc>
  44e410:	cbz	x21, 44e420 <feof@plt+0x4b340>
  44e414:	ldr	x8, [sp, #8]
  44e418:	str	x8, [x21, #8]
  44e41c:	str	x21, [sp, #8]
  44e420:	ldr	x8, [x22]
  44e424:	ldrb	w9, [x8]
  44e428:	cmp	w9, #0x45
  44e42c:	b.ne	44e8ac <feof@plt+0x4b7cc>  // b.any
  44e430:	add	x8, x8, #0x1
  44e434:	str	x8, [x22]
  44e438:	ldr	x21, [sp, #8]
  44e43c:	b	44e8b0 <feof@plt+0x4b7d0>
  44e440:	mov	x20, xzr
  44e444:	ldr	w9, [x19, #72]
  44e448:	mov	w8, wzr
  44e44c:	add	w9, w9, #0x3
  44e450:	str	w9, [x19, #72]
  44e454:	ldr	x9, [x22]
  44e458:	ldrb	w10, [x9]
  44e45c:	cmp	w10, #0x49
  44e460:	b.ne	44e4b8 <feof@plt+0x4b3d8>  // b.any
  44e464:	cbz	w8, 44e4c0 <feof@plt+0x4b3e0>
  44e468:	add	x8, x9, #0x1
  44e46c:	mov	x0, x19
  44e470:	str	x8, [x19, #24]
  44e474:	bl	44f800 <feof@plt+0x4c720>
  44e478:	mov	x21, xzr
  44e47c:	cbz	x20, 44e8b0 <feof@plt+0x4b7d0>
  44e480:	cbz	x0, 44e8b0 <feof@plt+0x4b7d0>
  44e484:	ldp	w8, w9, [x19, #40]
  44e488:	sxtw	x8, w8
  44e48c:	cmp	w8, w9
  44e490:	b.ge	44e8ac <feof@plt+0x4b7cc>  // b.tcont
  44e494:	ldr	x9, [x19, #32]
  44e498:	mov	w10, #0x18                  	// #24
  44e49c:	add	w11, w8, #0x1
  44e4a0:	madd	x21, x8, x10, x9
  44e4a4:	str	wzr, [x21, #4]
  44e4a8:	str	w11, [x19, #40]
  44e4ac:	cbz	x9, 44e8ac <feof@plt+0x4b7cc>
  44e4b0:	mov	w10, #0x4                   	// #4
  44e4b4:	b	44e898 <feof@plt+0x4b7b8>
  44e4b8:	mov	x21, x20
  44e4bc:	b	44e8b0 <feof@plt+0x4b7d0>
  44e4c0:	cbz	x20, 44e8ac <feof@plt+0x4b7cc>
  44e4c4:	ldp	w8, w9, [x19, #56]
  44e4c8:	sxtw	x8, w8
  44e4cc:	cmp	w8, w9
  44e4d0:	b.ge	44e8ac <feof@plt+0x4b7cc>  // b.tcont
  44e4d4:	ldr	x9, [x19, #48]
  44e4d8:	str	x20, [x9, x8, lsl #3]
  44e4dc:	ldr	x9, [x19, #24]
  44e4e0:	add	w8, w8, #0x1
  44e4e4:	str	w8, [x19, #56]
  44e4e8:	ldrb	w8, [x9]
  44e4ec:	sub	w8, w8, #0x49
  44e4f0:	cmp	w8, #0x1
  44e4f4:	b.ls	44e468 <feof@plt+0x4b388>  // b.plast
  44e4f8:	b	44e8ac <feof@plt+0x4b7cc>
  44e4fc:	add	x9, x11, #0x2
  44e500:	str	x9, [x22]
  44e504:	ldrb	w8, [x11, #2]
  44e508:	cmp	w8, #0x6e
  44e50c:	b.eq	44e8ac <feof@plt+0x4b7cc>  // b.none
  44e510:	cmp	w8, #0x5f
  44e514:	b.ne	44e584 <feof@plt+0x4b4a4>  // b.any
  44e518:	mov	w21, wzr
  44e51c:	add	x8, x11, #0x3
  44e520:	str	x8, [x22]
  44e524:	b	44e52c <feof@plt+0x4b44c>
  44e528:	mov	w21, #0xffffffff            	// #-1
  44e52c:	mov	x0, x19
  44e530:	bl	44e118 <feof@plt+0x4b038>
  44e534:	cbz	x0, 44e7f0 <feof@plt+0x4b710>
  44e538:	ldr	w8, [x0]
  44e53c:	cmp	w8, #0x46
  44e540:	b.eq	44e7f0 <feof@plt+0x4b710>  // b.none
  44e544:	cmp	w8, #0x48
  44e548:	b.eq	44e7f0 <feof@plt+0x4b710>  // b.none
  44e54c:	ldr	x8, [x22]
  44e550:	ldrb	w9, [x8]
  44e554:	cmp	w9, #0x5f
  44e558:	b.ne	44e7f0 <feof@plt+0x4b710>  // b.any
  44e55c:	add	x10, x8, #0x1
  44e560:	str	x10, [x22]
  44e564:	ldrb	w9, [x8, #1]
  44e568:	cmp	w9, #0x5f
  44e56c:	b.ne	44e72c <feof@plt+0x4b64c>  // b.any
  44e570:	add	x10, x8, #0x2
  44e574:	str	x10, [x22]
  44e578:	ldrb	w9, [x8, #2]
  44e57c:	mov	w8, #0x2                   	// #2
  44e580:	b	44e730 <feof@plt+0x4b650>
  44e584:	sub	w10, w8, #0x30
  44e588:	cmp	w10, #0x9
  44e58c:	b.hi	44e710 <feof@plt+0x4b630>  // b.pmore
  44e590:	mov	w12, #0x2f                  	// #47
  44e594:	add	x9, x11, #0x3
  44e598:	mov	w11, #0x6667                	// #26215
  44e59c:	mov	w10, wzr
  44e5a0:	movk	w12, #0x8000, lsl #16
  44e5a4:	movk	w11, #0x6666, lsl #16
  44e5a8:	mov	w13, #0xa                   	// #10
  44e5ac:	and	w14, w8, #0xff
  44e5b0:	sub	w8, w12, w14
  44e5b4:	smull	x8, w8, w11
  44e5b8:	lsr	x15, x8, #63
  44e5bc:	asr	x8, x8, #34
  44e5c0:	add	w8, w8, w15
  44e5c4:	cmp	w10, w8
  44e5c8:	b.gt	44e8ac <feof@plt+0x4b7cc>
  44e5cc:	str	x9, [x22]
  44e5d0:	ldrb	w8, [x9], #1
  44e5d4:	madd	w10, w10, w13, w14
  44e5d8:	sub	w10, w10, #0x30
  44e5dc:	sub	w14, w8, #0x30
  44e5e0:	cmp	w14, #0xa
  44e5e4:	b.cc	44e5ac <feof@plt+0x4b4cc>  // b.lo, b.ul, b.last
  44e5e8:	cmn	w10, #0x1
  44e5ec:	b.lt	44e8ac <feof@plt+0x4b7cc>  // b.tstop
  44e5f0:	add	w21, w10, #0x1
  44e5f4:	sub	x9, x9, #0x1
  44e5f8:	b	44e714 <feof@plt+0x4b634>
  44e5fc:	mov	w8, #0x1                   	// #1
  44e600:	cmp	w9, #0x6e
  44e604:	b.ne	44e620 <feof@plt+0x4b540>  // b.any
  44e608:	add	x12, x10, #0x1
  44e60c:	str	x12, [x22]
  44e610:	ldrb	w9, [x10, #1]
  44e614:	mov	w11, #0x1                   	// #1
  44e618:	mov	x10, x12
  44e61c:	b	44e624 <feof@plt+0x4b544>
  44e620:	mov	w11, wzr
  44e624:	sub	w12, w9, #0x30
  44e628:	cmp	w12, #0x9
  44e62c:	b.hi	44e690 <feof@plt+0x4b5b0>  // b.pmore
  44e630:	mov	w13, #0x2f                  	// #47
  44e634:	mov	w14, #0x6667                	// #26215
  44e638:	mov	w12, wzr
  44e63c:	movk	w13, #0x8000, lsl #16
  44e640:	add	x10, x10, #0x1
  44e644:	movk	w14, #0x6666, lsl #16
  44e648:	mov	w15, #0xa                   	// #10
  44e64c:	and	w16, w9, #0xff
  44e650:	sub	w9, w13, w16
  44e654:	smull	x9, w9, w14
  44e658:	lsr	x17, x9, #63
  44e65c:	asr	x9, x9, #34
  44e660:	add	w9, w9, w17
  44e664:	cmp	w12, w9
  44e668:	b.gt	44e8ac <feof@plt+0x4b7cc>
  44e66c:	str	x10, [x22]
  44e670:	ldrb	w9, [x10], #1
  44e674:	madd	w12, w12, w15, w16
  44e678:	sub	w12, w12, #0x30
  44e67c:	sub	w16, w9, #0x30
  44e680:	cmp	w16, #0xa
  44e684:	b.cc	44e64c <feof@plt+0x4b56c>  // b.lo, b.ul, b.last
  44e688:	sub	x10, x10, #0x1
  44e68c:	b	44e694 <feof@plt+0x4b5b4>
  44e690:	mov	w12, wzr
  44e694:	cmp	w11, #0x0
  44e698:	cneg	w11, w12, ne  // ne = any
  44e69c:	tbnz	w11, #31, 44e8ac <feof@plt+0x4b7cc>
  44e6a0:	cmp	w8, #0x2
  44e6a4:	b.cc	44e6c0 <feof@plt+0x4b5e0>  // b.lo, b.ul, b.last
  44e6a8:	cmp	w11, #0xa
  44e6ac:	b.lt	44e6c0 <feof@plt+0x4b5e0>  // b.tstop
  44e6b0:	cmp	w9, #0x5f
  44e6b4:	b.ne	44e8ac <feof@plt+0x4b7cc>  // b.any
  44e6b8:	add	x8, x10, #0x1
  44e6bc:	str	x8, [x22]
  44e6c0:	ldp	w8, w9, [x19, #40]
  44e6c4:	sxtw	x8, w8
  44e6c8:	cmp	w8, w9
  44e6cc:	b.ge	44e840 <feof@plt+0x4b760>  // b.tcont
  44e6d0:	ldr	x9, [x19, #32]
  44e6d4:	mov	w10, #0x18                  	// #24
  44e6d8:	add	w11, w8, #0x1
  44e6dc:	madd	x0, x8, x10, x9
  44e6e0:	str	wzr, [x0, #4]
  44e6e4:	str	w11, [x19, #40]
  44e6e8:	cbz	x9, 44e840 <feof@plt+0x4b760>
  44e6ec:	mov	w10, #0x18                  	// #24
  44e6f0:	adrp	x11, 46e000 <_obstack_memory_used@@Base+0xc838>
  44e6f4:	add	x11, x11, #0x8b
  44e6f8:	mov	w12, #0xe                   	// #14
  44e6fc:	madd	x8, x8, x10, x9
  44e700:	str	xzr, [x0]
  44e704:	str	x11, [x8, #8]
  44e708:	str	w12, [x8, #16]
  44e70c:	b	44e844 <feof@plt+0x4b764>
  44e710:	mov	w21, #0x1                   	// #1
  44e714:	cmp	w8, #0x5f
  44e718:	b.ne	44e8ac <feof@plt+0x4b7cc>  // b.any
  44e71c:	add	x8, x9, #0x1
  44e720:	str	x8, [x22]
  44e724:	tbz	w21, #31, 44e52c <feof@plt+0x4b44c>
  44e728:	b	44e8ac <feof@plt+0x4b7cc>
  44e72c:	mov	w8, #0x1                   	// #1
  44e730:	cmp	w9, #0x6e
  44e734:	b.ne	44e750 <feof@plt+0x4b670>  // b.any
  44e738:	add	x12, x10, #0x1
  44e73c:	str	x12, [x22]
  44e740:	ldrb	w9, [x10, #1]
  44e744:	mov	w11, #0x1                   	// #1
  44e748:	mov	x10, x12
  44e74c:	b	44e754 <feof@plt+0x4b674>
  44e750:	mov	w11, wzr
  44e754:	sub	w12, w9, #0x30
  44e758:	cmp	w12, #0x9
  44e75c:	b.hi	44e7c0 <feof@plt+0x4b6e0>  // b.pmore
  44e760:	mov	w13, #0x2f                  	// #47
  44e764:	mov	w14, #0x6667                	// #26215
  44e768:	mov	w12, wzr
  44e76c:	movk	w13, #0x8000, lsl #16
  44e770:	add	x10, x10, #0x1
  44e774:	movk	w14, #0x6666, lsl #16
  44e778:	mov	w15, #0xa                   	// #10
  44e77c:	and	w16, w9, #0xff
  44e780:	sub	w9, w13, w16
  44e784:	smull	x9, w9, w14
  44e788:	lsr	x17, x9, #63
  44e78c:	asr	x9, x9, #34
  44e790:	add	w9, w9, w17
  44e794:	cmp	w12, w9
  44e798:	b.gt	44e8ac <feof@plt+0x4b7cc>
  44e79c:	str	x10, [x22]
  44e7a0:	ldrb	w9, [x10], #1
  44e7a4:	madd	w12, w12, w15, w16
  44e7a8:	sub	w12, w12, #0x30
  44e7ac:	sub	w16, w9, #0x30
  44e7b0:	cmp	w16, #0xa
  44e7b4:	b.cc	44e77c <feof@plt+0x4b69c>  // b.lo, b.ul, b.last
  44e7b8:	sub	x10, x10, #0x1
  44e7bc:	b	44e7c4 <feof@plt+0x4b6e4>
  44e7c0:	mov	w12, wzr
  44e7c4:	cmp	w11, #0x0
  44e7c8:	cneg	w11, w12, ne  // ne = any
  44e7cc:	tbnz	w11, #31, 44e8ac <feof@plt+0x4b7cc>
  44e7d0:	cmp	w8, #0x2
  44e7d4:	b.cc	44e7f0 <feof@plt+0x4b710>  // b.lo, b.ul, b.last
  44e7d8:	cmp	w11, #0xa
  44e7dc:	b.lt	44e7f0 <feof@plt+0x4b710>  // b.tstop
  44e7e0:	cmp	w9, #0x5f
  44e7e4:	b.ne	44e8ac <feof@plt+0x4b7cc>  // b.any
  44e7e8:	add	x8, x10, #0x1
  44e7ec:	str	x8, [x22]
  44e7f0:	tbnz	w21, #31, 44e844 <feof@plt+0x4b764>
  44e7f4:	ldp	w8, w9, [x19, #40]
  44e7f8:	sxtw	x8, w8
  44e7fc:	cmp	w8, w9
  44e800:	b.ge	44e840 <feof@plt+0x4b760>  // b.tcont
  44e804:	ldr	x9, [x19, #32]
  44e808:	mov	w10, #0x18                  	// #24
  44e80c:	add	w11, w8, #0x1
  44e810:	madd	x10, x8, x10, x9
  44e814:	str	wzr, [x10, #4]
  44e818:	str	w11, [x19, #40]
  44e81c:	cbz	x9, 44e840 <feof@plt+0x4b760>
  44e820:	mov	w12, #0x18                  	// #24
  44e824:	mov	w11, #0x47                  	// #71
  44e828:	madd	x8, x8, x12, x9
  44e82c:	str	w11, [x10]
  44e830:	str	x0, [x8, #8]
  44e834:	mov	x0, x10
  44e838:	str	w21, [x8, #16]
  44e83c:	b	44e844 <feof@plt+0x4b764>
  44e840:	mov	x0, xzr
  44e844:	ldr	w8, [x20]
  44e848:	cmp	w8, #0x3
  44e84c:	b.ne	44e864 <feof@plt+0x4b784>  // b.any
  44e850:	ldr	x8, [x20, #16]
  44e854:	ldr	w9, [x8]
  44e858:	cmp	w9, #0x29
  44e85c:	b.ne	44e864 <feof@plt+0x4b784>  // b.any
  44e860:	str	xzr, [x8, #8]
  44e864:	cbz	x0, 44e8ac <feof@plt+0x4b7cc>
  44e868:	ldp	w8, w9, [x19, #40]
  44e86c:	sxtw	x8, w8
  44e870:	cmp	w8, w9
  44e874:	b.ge	44e8ac <feof@plt+0x4b7cc>  // b.tcont
  44e878:	ldr	x9, [x19, #32]
  44e87c:	mov	w10, #0x18                  	// #24
  44e880:	add	w11, w8, #0x1
  44e884:	madd	x21, x8, x10, x9
  44e888:	str	wzr, [x21, #4]
  44e88c:	str	w11, [x19, #40]
  44e890:	cbz	x9, 44e8ac <feof@plt+0x4b7cc>
  44e894:	mov	w10, #0x2                   	// #2
  44e898:	mov	w11, #0x18                  	// #24
  44e89c:	madd	x8, x8, x11, x9
  44e8a0:	str	w10, [x21]
  44e8a4:	stp	x20, x0, [x8, #8]
  44e8a8:	b	44e8b0 <feof@plt+0x4b7d0>
  44e8ac:	mov	x21, xzr
  44e8b0:	mov	x0, x21
  44e8b4:	ldp	x20, x19, [sp, #48]
  44e8b8:	ldp	x22, x21, [sp, #32]
  44e8bc:	ldp	x29, x30, [sp, #16]
  44e8c0:	add	sp, sp, #0x40
  44e8c4:	ret
  44e8c8:	stp	x29, x30, [sp, #-32]!
  44e8cc:	stp	x20, x19, [sp, #16]
  44e8d0:	ldr	x8, [x0, #24]
  44e8d4:	mov	x19, x0
  44e8d8:	mov	x29, sp
  44e8dc:	ldrb	w9, [x8]
  44e8e0:	sub	w10, w9, #0x49
  44e8e4:	cmp	w10, #0x2
  44e8e8:	b.cc	44e938 <feof@plt+0x4b858>  // b.lo, b.ul, b.last
  44e8ec:	cmp	w9, #0x4c
  44e8f0:	b.eq	44e950 <feof@plt+0x4b870>  // b.none
  44e8f4:	cmp	w9, #0x58
  44e8f8:	b.ne	44e960 <feof@plt+0x4b880>  // b.any
  44e8fc:	ldr	w20, [x19, #76]
  44e900:	add	x8, x8, #0x1
  44e904:	str	x8, [x19, #24]
  44e908:	mov	w8, #0x1                   	// #1
  44e90c:	mov	x0, x19
  44e910:	str	w8, [x19, #76]
  44e914:	bl	44f91c <feof@plt+0x4c83c>
  44e918:	ldr	x8, [x19, #24]
  44e91c:	str	w20, [x19, #76]
  44e920:	ldrb	w9, [x8]
  44e924:	cmp	w9, #0x45
  44e928:	b.ne	44e970 <feof@plt+0x4b890>  // b.any
  44e92c:	add	x8, x8, #0x1
  44e930:	str	x8, [x19, #24]
  44e934:	b	44e974 <feof@plt+0x4b894>
  44e938:	add	x8, x8, #0x1
  44e93c:	str	x8, [x19, #24]
  44e940:	mov	x0, x19
  44e944:	ldp	x20, x19, [sp, #16]
  44e948:	ldp	x29, x30, [sp], #32
  44e94c:	b	44f800 <feof@plt+0x4c720>
  44e950:	mov	x0, x19
  44e954:	ldp	x20, x19, [sp, #16]
  44e958:	ldp	x29, x30, [sp], #32
  44e95c:	b	44e980 <feof@plt+0x4b8a0>
  44e960:	mov	x0, x19
  44e964:	ldp	x20, x19, [sp, #16]
  44e968:	ldp	x29, x30, [sp], #32
  44e96c:	b	44bed4 <feof@plt+0x48df4>
  44e970:	mov	x0, xzr
  44e974:	ldp	x20, x19, [sp, #16]
  44e978:	ldp	x29, x30, [sp], #32
  44e97c:	ret
  44e980:	stp	x29, x30, [sp, #-32]!
  44e984:	ldr	x8, [x0, #24]
  44e988:	str	x19, [sp, #16]
  44e98c:	mov	x29, sp
  44e990:	ldrb	w9, [x8]
  44e994:	cmp	w9, #0x4c
  44e998:	b.ne	44eb04 <feof@plt+0x4ba24>  // b.any
  44e99c:	add	x9, x8, #0x1
  44e9a0:	str	x9, [x0, #24]
  44e9a4:	ldrb	w9, [x8, #1]
  44e9a8:	mov	x19, x0
  44e9ac:	cmp	w9, #0x5a
  44e9b0:	b.eq	44e9d8 <feof@plt+0x4b8f8>  // b.none
  44e9b4:	cmp	w9, #0x5f
  44e9b8:	b.ne	44e9f8 <feof@plt+0x4b918>  // b.any
  44e9bc:	add	x9, x8, #0x2
  44e9c0:	str	x9, [x19, #24]
  44e9c4:	ldrb	w9, [x8, #2]
  44e9c8:	cmp	w9, #0x5a
  44e9cc:	b.ne	44ea50 <feof@plt+0x4b970>  // b.any
  44e9d0:	mov	w9, #0x2                   	// #2
  44e9d4:	b	44e9dc <feof@plt+0x4b8fc>
  44e9d8:	mov	w9, #0x1                   	// #1
  44e9dc:	add	x8, x8, x9
  44e9e0:	add	x8, x8, #0x1
  44e9e4:	mov	x0, x19
  44e9e8:	mov	w1, wzr
  44e9ec:	str	x8, [x19, #24]
  44e9f0:	bl	44ad38 <feof@plt+0x47c58>
  44e9f4:	b	44eae8 <feof@plt+0x4ba08>
  44e9f8:	mov	x0, x19
  44e9fc:	bl	44bed4 <feof@plt+0x48df4>
  44ea00:	cbz	x0, 44eb08 <feof@plt+0x4ba28>
  44ea04:	ldr	w8, [x0]
  44ea08:	mov	x2, x0
  44ea0c:	cmp	w8, #0x27
  44ea10:	b.ne	44ea30 <feof@plt+0x4b950>  // b.any
  44ea14:	ldr	x8, [x2, #8]
  44ea18:	ldr	w9, [x8, #28]
  44ea1c:	cbz	w9, 44ea30 <feof@plt+0x4b950>
  44ea20:	ldr	w8, [x8, #8]
  44ea24:	ldr	w9, [x19, #72]
  44ea28:	sub	w8, w9, w8
  44ea2c:	str	w8, [x19, #72]
  44ea30:	ldr	x8, [x19, #24]
  44ea34:	ldrb	w9, [x8]
  44ea38:	cmp	w9, #0x6e
  44ea3c:	b.ne	44ea58 <feof@plt+0x4b978>  // b.any
  44ea40:	add	x8, x8, #0x1
  44ea44:	mov	w1, #0x3e                  	// #62
  44ea48:	str	x8, [x19, #24]
  44ea4c:	b	44ea5c <feof@plt+0x4b97c>
  44ea50:	mov	x0, xzr
  44ea54:	b	44eae8 <feof@plt+0x4ba08>
  44ea58:	mov	w1, #0x3d                  	// #61
  44ea5c:	mov	x10, x8
  44ea60:	ldrb	w9, [x10]
  44ea64:	cbz	w9, 44eb04 <feof@plt+0x4ba24>
  44ea68:	cmp	w9, #0x45
  44ea6c:	b.eq	44ea84 <feof@plt+0x4b9a4>  // b.none
  44ea70:	add	x10, x10, #0x1
  44ea74:	str	x10, [x19, #24]
  44ea78:	ldrb	w9, [x10]
  44ea7c:	cbnz	w9, 44ea68 <feof@plt+0x4b988>
  44ea80:	b	44eb04 <feof@plt+0x4ba24>
  44ea84:	ldp	w9, w11, [x19, #40]
  44ea88:	sxtw	x9, w9
  44ea8c:	cmp	w9, w11
  44ea90:	b.ge	44eadc <feof@plt+0x4b9fc>  // b.tcont
  44ea94:	ldr	x11, [x19, #32]
  44ea98:	sub	w10, w10, w8
  44ea9c:	mov	w12, #0x18                  	// #24
  44eaa0:	mov	x3, xzr
  44eaa4:	add	w13, w9, #0x1
  44eaa8:	cmp	w10, #0x1
  44eaac:	madd	x12, x9, x12, x11
  44eab0:	str	wzr, [x12, #4]
  44eab4:	str	w13, [x19, #40]
  44eab8:	b.lt	44eae0 <feof@plt+0x4ba00>  // b.tstop
  44eabc:	cbz	x11, 44eae0 <feof@plt+0x4ba00>
  44eac0:	mov	w13, #0x18                  	// #24
  44eac4:	madd	x9, x9, x13, x11
  44eac8:	mov	x3, x12
  44eacc:	str	xzr, [x12]
  44ead0:	str	x8, [x9, #8]
  44ead4:	str	w10, [x9, #16]
  44ead8:	b	44eae0 <feof@plt+0x4ba00>
  44eadc:	mov	x3, xzr
  44eae0:	mov	x0, x19
  44eae4:	bl	44d370 <feof@plt+0x4a290>
  44eae8:	ldr	x8, [x19, #24]
  44eaec:	ldrb	w9, [x8]
  44eaf0:	cmp	w9, #0x45
  44eaf4:	b.ne	44eb04 <feof@plt+0x4ba24>  // b.any
  44eaf8:	add	x8, x8, #0x1
  44eafc:	str	x8, [x19, #24]
  44eb00:	b	44eb08 <feof@plt+0x4ba28>
  44eb04:	mov	x0, xzr
  44eb08:	ldr	x19, [sp, #16]
  44eb0c:	ldp	x29, x30, [sp], #32
  44eb10:	ret
  44eb14:	stp	x29, x30, [sp, #-80]!
  44eb18:	str	x25, [sp, #16]
  44eb1c:	stp	x24, x23, [sp, #32]
  44eb20:	stp	x22, x21, [sp, #48]
  44eb24:	stp	x20, x19, [sp, #64]
  44eb28:	mov	x21, x0
  44eb2c:	ldr	x9, [x21, #24]!
  44eb30:	mov	x19, x0
  44eb34:	mov	x29, sp
  44eb38:	ldrb	w8, [x9]
  44eb3c:	sub	w10, w8, #0x30
  44eb40:	cmp	w10, #0x9
  44eb44:	b.hi	44eb58 <feof@plt+0x4ba78>  // b.pmore
  44eb48:	mov	x0, x19
  44eb4c:	bl	44d3fc <feof@plt+0x4a31c>
  44eb50:	mov	x20, x0
  44eb54:	b	44f174 <feof@plt+0x4c094>
  44eb58:	sub	w10, w8, #0x61
  44eb5c:	cmp	w10, #0x19
  44eb60:	b.hi	44ec20 <feof@plt+0x4bb40>  // b.pmore
  44eb64:	cmp	w8, #0x6f
  44eb68:	b.ne	44eb80 <feof@plt+0x4baa0>  // b.any
  44eb6c:	ldrb	w8, [x9, #1]
  44eb70:	cmp	w8, #0x6e
  44eb74:	b.ne	44eb80 <feof@plt+0x4baa0>  // b.any
  44eb78:	add	x8, x9, #0x2
  44eb7c:	str	x8, [x21]
  44eb80:	mov	x0, x19
  44eb84:	bl	44f498 <feof@plt+0x4c3b8>
  44eb88:	mov	x20, x0
  44eb8c:	cbz	x0, 44f174 <feof@plt+0x4c094>
  44eb90:	ldr	w8, [x20]
  44eb94:	cmp	w8, #0x32
  44eb98:	b.ne	44f174 <feof@plt+0x4c094>  // b.any
  44eb9c:	ldr	x8, [x20, #8]
  44eba0:	ldr	w9, [x19, #72]
  44eba4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  44eba8:	add	x1, x1, #0x117
  44ebac:	ldr	w8, [x8, #16]
  44ebb0:	add	w8, w8, w9
  44ebb4:	add	w8, w8, #0x7
  44ebb8:	str	w8, [x19, #72]
  44ebbc:	ldr	x8, [x20, #8]
  44ebc0:	ldr	x0, [x8]
  44ebc4:	bl	402ed0 <strcmp@plt>
  44ebc8:	cbnz	w0, 44f174 <feof@plt+0x4c094>
  44ebcc:	mov	x0, x19
  44ebd0:	bl	44d3fc <feof@plt+0x4a31c>
  44ebd4:	cbz	x0, 44f170 <feof@plt+0x4c090>
  44ebd8:	ldp	w8, w9, [x19, #40]
  44ebdc:	sxtw	x8, w8
  44ebe0:	cmp	w8, w9
  44ebe4:	b.ge	44f170 <feof@plt+0x4c090>  // b.tcont
  44ebe8:	ldr	x9, [x19, #32]
  44ebec:	mov	w10, #0x18                  	// #24
  44ebf0:	add	w11, w8, #0x1
  44ebf4:	madd	x10, x8, x10, x9
  44ebf8:	str	wzr, [x10, #4]
  44ebfc:	str	w11, [x19, #40]
  44ec00:	cbz	x9, 44f170 <feof@plt+0x4c090>
  44ec04:	mov	w12, #0x18                  	// #24
  44ec08:	mov	w11, #0x37                  	// #55
  44ec0c:	madd	x8, x8, x12, x9
  44ec10:	str	w11, [x10]
  44ec14:	stp	x20, x0, [x8, #8]
  44ec18:	mov	x20, x10
  44ec1c:	b	44f174 <feof@plt+0x4c094>
  44ec20:	sub	w10, w8, #0x43
  44ec24:	cmp	w10, #0x2
  44ec28:	b.cc	44ecf8 <feof@plt+0x4bc18>  // b.lo, b.ul, b.last
  44ec2c:	cmp	w8, #0x4c
  44ec30:	b.eq	44ed58 <feof@plt+0x4bc78>  // b.none
  44ec34:	cmp	w8, #0x55
  44ec38:	b.ne	44f03c <feof@plt+0x4bf5c>  // b.any
  44ec3c:	mov	x8, x9
  44ec40:	ldrb	w10, [x8, #1]!
  44ec44:	cmp	w10, #0x74
  44ec48:	b.eq	44ee40 <feof@plt+0x4bd60>  // b.none
  44ec4c:	cmp	w10, #0x6c
  44ec50:	b.ne	44f03c <feof@plt+0x4bf5c>  // b.any
  44ec54:	str	x8, [x21]
  44ec58:	ldrb	w8, [x8]
  44ec5c:	cmp	w8, #0x6c
  44ec60:	b.ne	44f170 <feof@plt+0x4c090>  // b.any
  44ec64:	add	x8, x9, #0x2
  44ec68:	mov	x0, x19
  44ec6c:	str	x8, [x19, #24]
  44ec70:	bl	44f6e4 <feof@plt+0x4c604>
  44ec74:	cbz	x0, 44f170 <feof@plt+0x4c090>
  44ec78:	ldr	x10, [x21]
  44ec7c:	ldrb	w8, [x10]
  44ec80:	cmp	w8, #0x45
  44ec84:	b.ne	44f170 <feof@plt+0x4c090>  // b.any
  44ec88:	add	x8, x10, #0x1
  44ec8c:	str	x8, [x21]
  44ec90:	ldrb	w8, [x10, #1]
  44ec94:	cmp	w8, #0x6e
  44ec98:	b.eq	44f170 <feof@plt+0x4c090>  // b.none
  44ec9c:	cmp	w8, #0x5f
  44eca0:	b.ne	44f0e0 <feof@plt+0x4c000>  // b.any
  44eca4:	mov	w9, wzr
  44eca8:	add	x8, x10, #0x2
  44ecac:	str	x8, [x21]
  44ecb0:	ldp	w8, w10, [x19, #40]
  44ecb4:	sxtw	x8, w8
  44ecb8:	cmp	w8, w10
  44ecbc:	b.ge	44f170 <feof@plt+0x4c090>  // b.tcont
  44ecc0:	ldr	x10, [x19, #32]
  44ecc4:	mov	w11, #0x18                  	// #24
  44ecc8:	add	w12, w8, #0x1
  44eccc:	madd	x20, x8, x11, x10
  44ecd0:	str	wzr, [x20, #4]
  44ecd4:	str	w12, [x19, #40]
  44ecd8:	cbz	x10, 44f170 <feof@plt+0x4c090>
  44ecdc:	mov	w12, #0x18                  	// #24
  44ece0:	mov	w11, #0x46                  	// #70
  44ece4:	madd	x8, x8, x12, x10
  44ece8:	str	w11, [x20]
  44ecec:	str	x0, [x8, #8]
  44ecf0:	str	w9, [x8, #16]
  44ecf4:	b	44eebc <feof@plt+0x4bddc>
  44ecf8:	ldr	x8, [x19, #64]
  44ecfc:	cbz	x8, 44ed20 <feof@plt+0x4bc40>
  44ed00:	ldr	w10, [x8]
  44ed04:	cmp	w10, #0x18
  44ed08:	b.eq	44ed10 <feof@plt+0x4bc30>  // b.none
  44ed0c:	cbnz	w10, 44ed20 <feof@plt+0x4bc40>
  44ed10:	ldr	w10, [x8, #16]
  44ed14:	ldr	w11, [x19, #72]
  44ed18:	add	w10, w11, w10
  44ed1c:	str	w10, [x19, #72]
  44ed20:	ldrb	w10, [x9]
  44ed24:	cmp	w10, #0x44
  44ed28:	b.eq	44eda8 <feof@plt+0x4bcc8>  // b.none
  44ed2c:	cmp	w10, #0x43
  44ed30:	b.ne	44f170 <feof@plt+0x4c090>  // b.any
  44ed34:	mov	x12, x9
  44ed38:	ldrb	w10, [x12, #1]!
  44ed3c:	cmp	w10, #0x49
  44ed40:	b.ne	44eee0 <feof@plt+0x4be00>  // b.any
  44ed44:	str	x12, [x21]
  44ed48:	ldrb	w10, [x9, #2]
  44ed4c:	mov	w11, #0x1                   	// #1
  44ed50:	mov	x9, x12
  44ed54:	b	44eee4 <feof@plt+0x4be04>
  44ed58:	add	x8, x9, #0x1
  44ed5c:	mov	x0, x19
  44ed60:	str	x8, [x19, #24]
  44ed64:	bl	44d3fc <feof@plt+0x4a31c>
  44ed68:	mov	x20, x0
  44ed6c:	cbz	x0, 44f204 <feof@plt+0x4c124>
  44ed70:	ldr	x8, [x21]
  44ed74:	ldrb	w9, [x8]
  44ed78:	cmp	w9, #0x5f
  44ed7c:	b.ne	44f174 <feof@plt+0x4c094>  // b.any
  44ed80:	add	x10, x8, #0x1
  44ed84:	str	x10, [x21]
  44ed88:	ldrb	w9, [x8, #1]
  44ed8c:	cmp	w9, #0x5f
  44ed90:	b.ne	44ef74 <feof@plt+0x4be94>  // b.any
  44ed94:	add	x10, x8, #0x2
  44ed98:	str	x10, [x21]
  44ed9c:	ldrb	w9, [x8, #2]
  44eda0:	mov	w8, #0x2                   	// #2
  44eda4:	b	44ef78 <feof@plt+0x4be98>
  44eda8:	ldrb	w10, [x9, #1]
  44edac:	sub	w11, w10, #0x30
  44edb0:	cmp	w11, #0x5
  44edb4:	b.hi	44f170 <feof@plt+0x4c090>  // b.pmore
  44edb8:	mov	w10, #0x37                  	// #55
  44edbc:	lsr	w10, w10, w11
  44edc0:	tbz	w10, #0, 44f170 <feof@plt+0x4c090>
  44edc4:	ldp	w10, w12, [x19, #40]
  44edc8:	add	x9, x9, #0x2
  44edcc:	sxtw	x10, w10
  44edd0:	mov	x20, xzr
  44edd4:	cmp	w10, w12
  44edd8:	str	x9, [x19, #24]
  44eddc:	b.ge	44f174 <feof@plt+0x4c094>  // b.tcont
  44ede0:	adrp	x12, 474000 <_obstack_memory_used@@Base+0x12838>
  44ede4:	sxtb	x11, w11
  44ede8:	add	x12, x12, #0x90
  44edec:	ldr	x9, [x19, #32]
  44edf0:	ldr	w11, [x12, x11, lsl #2]
  44edf4:	mov	w13, #0x18                  	// #24
  44edf8:	add	w14, w10, #0x1
  44edfc:	madd	x12, x10, x13, x9
  44ee00:	sub	w13, w11, #0x1
  44ee04:	cmp	w13, #0x4
  44ee08:	str	wzr, [x12, #4]
  44ee0c:	str	w14, [x19, #40]
  44ee10:	b.hi	44f174 <feof@plt+0x4c094>  // b.pmore
  44ee14:	cbz	x8, 44f174 <feof@plt+0x4c094>
  44ee18:	cbz	x9, 44f174 <feof@plt+0x4c094>
  44ee1c:	adrp	x13, 464000 <_obstack_memory_used@@Base+0x2838>
  44ee20:	ldr	d0, [x13, #704]
  44ee24:	mov	w13, #0x18                  	// #24
  44ee28:	madd	x9, x10, x13, x9
  44ee2c:	mov	x20, x12
  44ee30:	str	d0, [x12]
  44ee34:	str	w11, [x9, #8]
  44ee38:	str	x8, [x9, #16]
  44ee3c:	b	44f174 <feof@plt+0x4c094>
  44ee40:	str	x8, [x21]
  44ee44:	ldrb	w8, [x8]
  44ee48:	cmp	w8, #0x74
  44ee4c:	b.ne	44f170 <feof@plt+0x4c090>  // b.any
  44ee50:	add	x11, x9, #0x2
  44ee54:	str	x11, [x21]
  44ee58:	ldrb	w8, [x9, #2]
  44ee5c:	cmp	w8, #0x6e
  44ee60:	b.eq	44f170 <feof@plt+0x4c090>  // b.none
  44ee64:	cmp	w8, #0x5f
  44ee68:	b.ne	44f044 <feof@plt+0x4bf64>  // b.any
  44ee6c:	mov	w10, wzr
  44ee70:	add	x8, x9, #0x3
  44ee74:	str	x8, [x21]
  44ee78:	ldp	w8, w9, [x19, #40]
  44ee7c:	sxtw	x8, w8
  44ee80:	cmp	w8, w9
  44ee84:	b.ge	44f170 <feof@plt+0x4c090>  // b.tcont
  44ee88:	ldr	x9, [x19, #32]
  44ee8c:	mov	w11, #0x18                  	// #24
  44ee90:	add	w12, w8, #0x1
  44ee94:	madd	x20, x8, x11, x9
  44ee98:	str	wzr, [x20, #4]
  44ee9c:	str	w12, [x19, #40]
  44eea0:	cbz	x9, 44f170 <feof@plt+0x4c090>
  44eea4:	mov	w12, #0x18                  	// #24
  44eea8:	mov	w11, #0x48                  	// #72
  44eeac:	mov	w10, w10
  44eeb0:	madd	x8, x8, x12, x9
  44eeb4:	str	w11, [x20]
  44eeb8:	str	x10, [x8, #8]
  44eebc:	ldp	w8, w9, [x19, #56]
  44eec0:	sxtw	x8, w8
  44eec4:	cmp	w8, w9
  44eec8:	b.ge	44f170 <feof@plt+0x4c090>  // b.tcont
  44eecc:	ldr	x9, [x19, #48]
  44eed0:	add	w10, w8, #0x1
  44eed4:	str	x20, [x9, x8, lsl #3]
  44eed8:	str	w10, [x19, #56]
  44eedc:	b	44f174 <feof@plt+0x4c094>
  44eee0:	mov	w11, wzr
  44eee4:	sub	w22, w10, #0x31
  44eee8:	cmp	w22, #0x4
  44eeec:	b.hi	44f170 <feof@plt+0x4c090>  // b.pmore
  44eef0:	add	x9, x9, #0x2
  44eef4:	str	x9, [x21]
  44eef8:	cbz	w11, 44ef08 <feof@plt+0x4be28>
  44eefc:	mov	x0, x19
  44ef00:	bl	44bed4 <feof@plt+0x48df4>
  44ef04:	ldr	x8, [x19, #64]
  44ef08:	ldp	w9, w10, [x19, #40]
  44ef0c:	sxtw	x9, w9
  44ef10:	cmp	w9, w10
  44ef14:	b.ge	44f170 <feof@plt+0x4c090>  // b.tcont
  44ef18:	ldr	x10, [x19, #32]
  44ef1c:	mov	w11, #0x18                  	// #24
  44ef20:	and	w13, w22, #0xff
  44ef24:	mov	x20, xzr
  44ef28:	add	w12, w9, #0x1
  44ef2c:	cmp	w13, #0x4
  44ef30:	madd	x11, x9, x11, x10
  44ef34:	str	wzr, [x11, #4]
  44ef38:	str	w12, [x19, #40]
  44ef3c:	b.hi	44f174 <feof@plt+0x4c094>  // b.pmore
  44ef40:	cbz	x8, 44f174 <feof@plt+0x4c094>
  44ef44:	cbz	x10, 44f174 <feof@plt+0x4c094>
  44ef48:	adrp	x13, 472000 <_obstack_memory_used@@Base+0x10838>
  44ef4c:	ldr	d0, [x13, #3496]
  44ef50:	and	w12, w22, #0xff
  44ef54:	mov	w13, #0x18                  	// #24
  44ef58:	add	w12, w12, #0x1
  44ef5c:	madd	x9, x9, x13, x10
  44ef60:	str	d0, [x11]
  44ef64:	str	w12, [x9, #8]
  44ef68:	str	x8, [x9, #16]
  44ef6c:	mov	x20, x11
  44ef70:	b	44f174 <feof@plt+0x4c094>
  44ef74:	mov	w8, #0x1                   	// #1
  44ef78:	cmp	w9, #0x6e
  44ef7c:	b.ne	44ef98 <feof@plt+0x4beb8>  // b.any
  44ef80:	add	x12, x10, #0x1
  44ef84:	str	x12, [x21]
  44ef88:	ldrb	w9, [x10, #1]
  44ef8c:	mov	w11, #0x1                   	// #1
  44ef90:	mov	x10, x12
  44ef94:	b	44ef9c <feof@plt+0x4bebc>
  44ef98:	mov	w11, wzr
  44ef9c:	sub	w12, w9, #0x30
  44efa0:	cmp	w12, #0x9
  44efa4:	b.hi	44f008 <feof@plt+0x4bf28>  // b.pmore
  44efa8:	mov	w13, #0x2f                  	// #47
  44efac:	mov	w14, #0x6667                	// #26215
  44efb0:	mov	w12, wzr
  44efb4:	movk	w13, #0x8000, lsl #16
  44efb8:	add	x10, x10, #0x1
  44efbc:	movk	w14, #0x6666, lsl #16
  44efc0:	mov	w15, #0xa                   	// #10
  44efc4:	and	w16, w9, #0xff
  44efc8:	sub	w9, w13, w16
  44efcc:	smull	x9, w9, w14
  44efd0:	lsr	x17, x9, #63
  44efd4:	asr	x9, x9, #34
  44efd8:	add	w9, w9, w17
  44efdc:	cmp	w12, w9
  44efe0:	b.gt	44f03c <feof@plt+0x4bf5c>
  44efe4:	str	x10, [x21]
  44efe8:	ldrb	w9, [x10], #1
  44efec:	madd	w12, w12, w15, w16
  44eff0:	sub	w12, w12, #0x30
  44eff4:	sub	w16, w9, #0x30
  44eff8:	cmp	w16, #0xa
  44effc:	b.cc	44efc4 <feof@plt+0x4bee4>  // b.lo, b.ul, b.last
  44f000:	sub	x10, x10, #0x1
  44f004:	b	44f00c <feof@plt+0x4bf2c>
  44f008:	mov	w12, wzr
  44f00c:	cmp	w11, #0x0
  44f010:	cneg	w11, w12, ne  // ne = any
  44f014:	tbnz	w11, #31, 44f03c <feof@plt+0x4bf5c>
  44f018:	cmp	w8, #0x2
  44f01c:	b.cc	44f174 <feof@plt+0x4c094>  // b.lo, b.ul, b.last
  44f020:	cmp	w11, #0xa
  44f024:	b.lt	44f174 <feof@plt+0x4c094>  // b.tstop
  44f028:	cmp	w9, #0x5f
  44f02c:	b.ne	44f03c <feof@plt+0x4bf5c>  // b.any
  44f030:	add	x8, x10, #0x1
  44f034:	str	x8, [x21]
  44f038:	b	44f174 <feof@plt+0x4c094>
  44f03c:	mov	x20, xzr
  44f040:	b	44f204 <feof@plt+0x4c124>
  44f044:	sub	w10, w8, #0x30
  44f048:	cmp	w10, #0x9
  44f04c:	b.hi	44f0c4 <feof@plt+0x4bfe4>  // b.pmore
  44f050:	mov	w11, #0x2f                  	// #47
  44f054:	mov	w12, #0x6667                	// #26215
  44f058:	mov	w10, wzr
  44f05c:	movk	w11, #0x8000, lsl #16
  44f060:	add	x9, x9, #0x3
  44f064:	movk	w12, #0x6666, lsl #16
  44f068:	mov	w13, #0xa                   	// #10
  44f06c:	and	w14, w8, #0xff
  44f070:	sub	w8, w11, w14
  44f074:	smull	x8, w8, w12
  44f078:	lsr	x15, x8, #63
  44f07c:	asr	x8, x8, #34
  44f080:	add	w8, w8, w15
  44f084:	cmp	w10, w8
  44f088:	b.gt	44f170 <feof@plt+0x4c090>
  44f08c:	str	x9, [x21]
  44f090:	ldrb	w8, [x9], #1
  44f094:	madd	w10, w10, w13, w14
  44f098:	sub	w10, w10, #0x30
  44f09c:	sub	w14, w8, #0x30
  44f0a0:	cmp	w14, #0xa
  44f0a4:	b.cc	44f06c <feof@plt+0x4bf8c>  // b.lo, b.ul, b.last
  44f0a8:	cmn	w10, #0x1
  44f0ac:	b.lt	44f170 <feof@plt+0x4c090>  // b.tstop
  44f0b0:	add	w10, w10, #0x1
  44f0b4:	sub	x11, x9, #0x1
  44f0b8:	cmp	w8, #0x5f
  44f0bc:	b.eq	44f0d0 <feof@plt+0x4bff0>  // b.none
  44f0c0:	b	44f170 <feof@plt+0x4c090>
  44f0c4:	mov	w10, #0x1                   	// #1
  44f0c8:	cmp	w8, #0x5f
  44f0cc:	b.ne	44f170 <feof@plt+0x4c090>  // b.any
  44f0d0:	add	x8, x11, #0x1
  44f0d4:	str	x8, [x21]
  44f0d8:	tbz	w10, #31, 44ee78 <feof@plt+0x4bd98>
  44f0dc:	b	44f170 <feof@plt+0x4c090>
  44f0e0:	sub	w9, w8, #0x30
  44f0e4:	cmp	w9, #0x9
  44f0e8:	b.hi	44f158 <feof@plt+0x4c078>  // b.pmore
  44f0ec:	mov	w11, #0x2f                  	// #47
  44f0f0:	mov	w12, #0x6667                	// #26215
  44f0f4:	mov	w9, wzr
  44f0f8:	movk	w11, #0x8000, lsl #16
  44f0fc:	add	x10, x10, #0x2
  44f100:	movk	w12, #0x6666, lsl #16
  44f104:	mov	w13, #0xa                   	// #10
  44f108:	and	w14, w8, #0xff
  44f10c:	sub	w8, w11, w14
  44f110:	smull	x8, w8, w12
  44f114:	lsr	x15, x8, #63
  44f118:	asr	x8, x8, #34
  44f11c:	add	w8, w8, w15
  44f120:	cmp	w9, w8
  44f124:	b.gt	44f170 <feof@plt+0x4c090>
  44f128:	str	x10, [x21]
  44f12c:	ldrb	w8, [x10], #1
  44f130:	madd	w9, w9, w13, w14
  44f134:	sub	w9, w9, #0x30
  44f138:	sub	w14, w8, #0x30
  44f13c:	cmp	w14, #0xa
  44f140:	b.cc	44f108 <feof@plt+0x4c028>  // b.lo, b.ul, b.last
  44f144:	cmn	w9, #0x1
  44f148:	b.lt	44f170 <feof@plt+0x4c090>  // b.tstop
  44f14c:	add	w9, w9, #0x1
  44f150:	sub	x10, x10, #0x2
  44f154:	b	44f15c <feof@plt+0x4c07c>
  44f158:	mov	w9, #0x1                   	// #1
  44f15c:	cmp	w8, #0x5f
  44f160:	b.ne	44f170 <feof@plt+0x4c090>  // b.any
  44f164:	add	x8, x10, #0x2
  44f168:	str	x8, [x21]
  44f16c:	tbz	w9, #31, 44ecb0 <feof@plt+0x4bbd0>
  44f170:	mov	x20, xzr
  44f174:	ldr	x8, [x21]
  44f178:	ldrb	w9, [x8]
  44f17c:	cmp	w9, #0x42
  44f180:	b.ne	44f204 <feof@plt+0x4c124>  // b.any
  44f184:	ldr	x22, [x19, #64]
  44f188:	mov	w23, #0x18                  	// #24
  44f18c:	mov	w24, #0x4c                  	// #76
  44f190:	b	44f1a8 <feof@plt+0x4c0c8>
  44f194:	mov	x20, xzr
  44f198:	ldr	x8, [x21]
  44f19c:	ldrb	w9, [x8]
  44f1a0:	cmp	w9, #0x42
  44f1a4:	b.ne	44f200 <feof@plt+0x4c120>  // b.any
  44f1a8:	add	x8, x8, #0x1
  44f1ac:	mov	x0, x19
  44f1b0:	mov	x25, x20
  44f1b4:	str	x8, [x19, #24]
  44f1b8:	bl	44d3fc <feof@plt+0x4a31c>
  44f1bc:	mov	x20, xzr
  44f1c0:	cbz	x25, 44f198 <feof@plt+0x4c0b8>
  44f1c4:	cbz	x0, 44f198 <feof@plt+0x4c0b8>
  44f1c8:	ldp	w8, w9, [x19, #40]
  44f1cc:	sxtw	x8, w8
  44f1d0:	cmp	w8, w9
  44f1d4:	b.ge	44f194 <feof@plt+0x4c0b4>  // b.tcont
  44f1d8:	ldr	x9, [x19, #32]
  44f1dc:	add	w10, w8, #0x1
  44f1e0:	madd	x20, x8, x23, x9
  44f1e4:	str	wzr, [x20, #4]
  44f1e8:	str	w10, [x19, #40]
  44f1ec:	cbz	x9, 44f194 <feof@plt+0x4c0b4>
  44f1f0:	madd	x8, x8, x23, x9
  44f1f4:	str	w24, [x20]
  44f1f8:	stp	x25, x0, [x8, #8]
  44f1fc:	b	44f198 <feof@plt+0x4c0b8>
  44f200:	str	x22, [x19, #64]
  44f204:	mov	x0, x20
  44f208:	ldp	x20, x19, [sp, #64]
  44f20c:	ldp	x22, x21, [sp, #48]
  44f210:	ldp	x24, x23, [sp, #32]
  44f214:	ldr	x25, [sp, #16]
  44f218:	ldp	x29, x30, [sp], #80
  44f21c:	ret
  44f220:	stp	x29, x30, [sp, #-96]!
  44f224:	stp	x26, x25, [sp, #32]
  44f228:	stp	x24, x23, [sp, #48]
  44f22c:	stp	x22, x21, [sp, #64]
  44f230:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x11838>
  44f234:	mov	w24, #0x2f                  	// #47
  44f238:	mov	w25, #0x6667                	// #26215
  44f23c:	stp	x20, x19, [sp, #80]
  44f240:	mov	x20, x0
  44f244:	mov	x19, xzr
  44f248:	add	x21, x21, #0x12d
  44f24c:	mov	w22, #0x18                  	// #24
  44f250:	mov	w23, #0x5                   	// #5
  44f254:	movk	w24, #0x8000, lsl #16
  44f258:	movk	w25, #0x6666, lsl #16
  44f25c:	mov	w26, #0xa                   	// #10
  44f260:	str	x27, [sp, #16]
  44f264:	mov	x29, sp
  44f268:	ldr	x8, [x20, #24]
  44f26c:	ldrb	w27, [x8]
  44f270:	cbz	w27, 44f474 <feof@plt+0x4c394>
  44f274:	cmp	w27, #0x44
  44f278:	b.eq	44f2ec <feof@plt+0x4c20c>  // b.none
  44f27c:	sub	w9, w27, #0x30
  44f280:	cmp	w9, #0xa
  44f284:	b.cc	44f308 <feof@plt+0x4c228>  // b.lo, b.ul, b.last
  44f288:	sub	w9, w27, #0x61
  44f28c:	and	w9, w9, #0xff
  44f290:	cmp	w9, #0x1a
  44f294:	b.cc	44f308 <feof@plt+0x4c228>  // b.lo, b.ul, b.last
  44f298:	cmp	w27, #0x4d
  44f29c:	b.ne	44f2b0 <feof@plt+0x4c1d0>  // b.any
  44f2a0:	cbz	x19, 44f478 <feof@plt+0x4c398>
  44f2a4:	add	x8, x8, #0x1
  44f2a8:	str	x8, [x20, #24]
  44f2ac:	b	44f268 <feof@plt+0x4c188>
  44f2b0:	sub	w9, w27, #0x43
  44f2b4:	cmp	w9, #0x12
  44f2b8:	b.hi	44f474 <feof@plt+0x4c394>  // b.pmore
  44f2bc:	adr	x10, 44f2cc <feof@plt+0x4c1ec>
  44f2c0:	ldrb	w11, [x21, x9]
  44f2c4:	add	x10, x10, x11, lsl #2
  44f2c8:	br	x10
  44f2cc:	cbz	x19, 44f478 <feof@plt+0x4c398>
  44f2d0:	add	x8, x8, #0x1
  44f2d4:	mov	x0, x20
  44f2d8:	str	x8, [x20, #24]
  44f2dc:	bl	44f800 <feof@plt+0x4c720>
  44f2e0:	mov	x3, x0
  44f2e4:	mov	w1, #0x4                   	// #4
  44f2e8:	b	44f31c <feof@plt+0x4c23c>
  44f2ec:	ldrb	w8, [x8, #1]
  44f2f0:	orr	w8, w8, #0x20
  44f2f4:	cmp	w8, #0x74
  44f2f8:	b.ne	44f308 <feof@plt+0x4c228>  // b.any
  44f2fc:	mov	x0, x20
  44f300:	bl	44bed4 <feof@plt+0x48df4>
  44f304:	b	44f310 <feof@plt+0x4c230>
  44f308:	mov	x0, x20
  44f30c:	bl	44eb14 <feof@plt+0x4ba34>
  44f310:	mov	x3, x0
  44f314:	cbz	x19, 44f338 <feof@plt+0x4c258>
  44f318:	mov	w1, #0x1                   	// #1
  44f31c:	mov	x0, x20
  44f320:	mov	x2, x19
  44f324:	bl	44d370 <feof@plt+0x4a290>
  44f328:	mov	x19, x0
  44f32c:	cmp	w27, #0x53
  44f330:	b.eq	44f268 <feof@plt+0x4c188>  // b.none
  44f334:	b	44f344 <feof@plt+0x4c264>
  44f338:	mov	x19, x3
  44f33c:	cmp	w27, #0x53
  44f340:	b.eq	44f268 <feof@plt+0x4c188>  // b.none
  44f344:	ldr	x8, [x20, #24]
  44f348:	ldrb	w8, [x8]
  44f34c:	cmp	w8, #0x45
  44f350:	b.eq	44f268 <feof@plt+0x4c188>  // b.none
  44f354:	cbz	x19, 44f478 <feof@plt+0x4c398>
  44f358:	ldp	w8, w9, [x20, #56]
  44f35c:	sxtw	x8, w8
  44f360:	cmp	w8, w9
  44f364:	b.ge	44f474 <feof@plt+0x4c394>  // b.tcont
  44f368:	ldr	x9, [x20, #48]
  44f36c:	add	w10, w8, #0x1
  44f370:	str	x19, [x9, x8, lsl #3]
  44f374:	str	w10, [x20, #56]
  44f378:	b	44f268 <feof@plt+0x4c188>
  44f37c:	mov	w1, #0x1                   	// #1
  44f380:	mov	x0, x20
  44f384:	bl	44d5f4 <feof@plt+0x4a514>
  44f388:	b	44f310 <feof@plt+0x4c230>
  44f38c:	add	x9, x8, #0x1
  44f390:	str	x9, [x20, #24]
  44f394:	ldrb	w9, [x8, #1]
  44f398:	cmp	w9, #0x6e
  44f39c:	b.eq	44f46c <feof@plt+0x4c38c>  // b.none
  44f3a0:	cmp	w9, #0x5f
  44f3a4:	b.ne	44f3f0 <feof@plt+0x4c310>  // b.any
  44f3a8:	mov	w10, wzr
  44f3ac:	add	x8, x8, #0x2
  44f3b0:	str	x8, [x20, #24]
  44f3b4:	ldp	w8, w9, [x20, #40]
  44f3b8:	sxtw	x8, w8
  44f3bc:	cmp	w8, w9
  44f3c0:	b.ge	44f46c <feof@plt+0x4c38c>  // b.tcont
  44f3c4:	ldr	x9, [x20, #32]
  44f3c8:	add	w11, w8, #0x1
  44f3cc:	madd	x3, x8, x22, x9
  44f3d0:	str	wzr, [x3, #4]
  44f3d4:	str	w11, [x20, #40]
  44f3d8:	cbz	x9, 44f46c <feof@plt+0x4c38c>
  44f3dc:	mov	w10, w10
  44f3e0:	madd	x8, x8, x22, x9
  44f3e4:	str	w23, [x3]
  44f3e8:	str	x10, [x8, #8]
  44f3ec:	b	44f314 <feof@plt+0x4c234>
  44f3f0:	sub	w10, w9, #0x30
  44f3f4:	cmp	w10, #0x9
  44f3f8:	b.hi	44f454 <feof@plt+0x4c374>  // b.pmore
  44f3fc:	mov	w10, wzr
  44f400:	add	x8, x8, #0x2
  44f404:	and	w11, w9, #0xff
  44f408:	sub	w9, w24, w11
  44f40c:	smull	x9, w9, w25
  44f410:	lsr	x12, x9, #63
  44f414:	asr	x9, x9, #34
  44f418:	add	w9, w9, w12
  44f41c:	cmp	w10, w9
  44f420:	b.gt	44f46c <feof@plt+0x4c38c>
  44f424:	str	x8, [x20, #24]
  44f428:	ldrb	w9, [x8], #1
  44f42c:	madd	w10, w10, w26, w11
  44f430:	sub	w10, w10, #0x30
  44f434:	sub	w11, w9, #0x30
  44f438:	cmp	w11, #0xa
  44f43c:	b.cc	44f404 <feof@plt+0x4c324>  // b.lo, b.ul, b.last
  44f440:	cmn	w10, #0x1
  44f444:	b.lt	44f46c <feof@plt+0x4c38c>  // b.tstop
  44f448:	add	w10, w10, #0x1
  44f44c:	sub	x8, x8, #0x2
  44f450:	b	44f458 <feof@plt+0x4c378>
  44f454:	mov	w10, #0x1                   	// #1
  44f458:	cmp	w9, #0x5f
  44f45c:	b.ne	44f46c <feof@plt+0x4c38c>  // b.any
  44f460:	add	x8, x8, #0x2
  44f464:	str	x8, [x20, #24]
  44f468:	tbz	w10, #31, 44f3b4 <feof@plt+0x4c2d4>
  44f46c:	mov	x3, xzr
  44f470:	b	44f314 <feof@plt+0x4c234>
  44f474:	mov	x19, xzr
  44f478:	mov	x0, x19
  44f47c:	ldp	x20, x19, [sp, #80]
  44f480:	ldp	x22, x21, [sp, #64]
  44f484:	ldp	x24, x23, [sp, #48]
  44f488:	ldp	x26, x25, [sp, #32]
  44f48c:	ldr	x27, [sp, #16]
  44f490:	ldp	x29, x30, [sp], #96
  44f494:	ret
  44f498:	stp	x29, x30, [sp, #-32]!
  44f49c:	stp	x20, x19, [sp, #16]
  44f4a0:	ldr	x9, [x0, #24]
  44f4a4:	mov	x19, x0
  44f4a8:	mov	x29, sp
  44f4ac:	ldrb	w8, [x9]
  44f4b0:	cbz	w8, 44f550 <feof@plt+0x4c470>
  44f4b4:	add	x8, x9, #0x1
  44f4b8:	str	x8, [x19, #24]
  44f4bc:	ldrb	w10, [x9, #1]
  44f4c0:	ldrb	w8, [x9]
  44f4c4:	cbz	w10, 44f550 <feof@plt+0x4c470>
  44f4c8:	add	x10, x9, #0x2
  44f4cc:	str	x10, [x19, #24]
  44f4d0:	ldrb	w9, [x9, #1]
  44f4d4:	cmp	w8, #0x76
  44f4d8:	b.ne	44f620 <feof@plt+0x4c540>  // b.any
  44f4dc:	sub	w20, w9, #0x30
  44f4e0:	and	w10, w20, #0xff
  44f4e4:	cmp	w10, #0x9
  44f4e8:	b.hi	44f620 <feof@plt+0x4c540>  // b.pmore
  44f4ec:	mov	x0, x19
  44f4f0:	bl	44d3fc <feof@plt+0x4a31c>
  44f4f4:	ldp	w9, w8, [x19, #40]
  44f4f8:	sxtw	x9, w9
  44f4fc:	cmp	w9, w8
  44f500:	b.ge	44f610 <feof@plt+0x4c530>  // b.tcont
  44f504:	ldr	x10, [x19, #32]
  44f508:	mov	w11, #0x18                  	// #24
  44f50c:	mov	x8, x0
  44f510:	mov	x0, xzr
  44f514:	add	w12, w9, #0x1
  44f518:	madd	x11, x9, x11, x10
  44f51c:	str	wzr, [x11, #4]
  44f520:	str	w12, [x19, #40]
  44f524:	cbz	x8, 44f614 <feof@plt+0x4c534>
  44f528:	cbz	x10, 44f614 <feof@plt+0x4c534>
  44f52c:	adrp	x12, 472000 <_obstack_memory_used@@Base+0x10838>
  44f530:	ldr	d0, [x12, #3488]
  44f534:	mov	w12, #0x18                  	// #24
  44f538:	madd	x9, x9, x12, x10
  44f53c:	mov	x0, x11
  44f540:	str	d0, [x11]
  44f544:	str	w20, [x9, #8]
  44f548:	str	x8, [x9, #16]
  44f54c:	b	44f614 <feof@plt+0x4c534>
  44f550:	mov	w9, wzr
  44f554:	adrp	x11, 473000 <_obstack_memory_used@@Base+0x11838>
  44f558:	mov	w10, wzr
  44f55c:	mov	w13, #0x43                  	// #67
  44f560:	add	x11, x11, #0x468
  44f564:	mov	w12, #0x18                  	// #24
  44f568:	b	44f580 <feof@plt+0x4c4a0>
  44f56c:	add	w10, w15, #0x1
  44f570:	mov	w15, w13
  44f574:	cmp	w10, w15
  44f578:	mov	w13, w15
  44f57c:	b.eq	44f610 <feof@plt+0x4c530>  // b.none
  44f580:	sub	w14, w13, w10
  44f584:	cmp	w14, #0x0
  44f588:	cinc	w14, w14, lt  // lt = tstop
  44f58c:	add	w15, w10, w14, asr #1
  44f590:	smaddl	x14, w15, w12, x11
  44f594:	ldr	x16, [x14]
  44f598:	ldrb	w17, [x16]
  44f59c:	cmp	w8, w17
  44f5a0:	b.ne	44f5b0 <feof@plt+0x4c4d0>  // b.any
  44f5a4:	ldrb	w18, [x16, #1]
  44f5a8:	cmp	w9, w18
  44f5ac:	b.eq	44f5cc <feof@plt+0x4c4ec>  // b.none
  44f5b0:	cmp	w8, w17
  44f5b4:	b.cc	44f574 <feof@plt+0x4c494>  // b.lo, b.ul, b.last
  44f5b8:	b.ne	44f56c <feof@plt+0x4c48c>  // b.any
  44f5bc:	ldrb	w14, [x16, #1]
  44f5c0:	cmp	w9, w14
  44f5c4:	b.cs	44f56c <feof@plt+0x4c48c>  // b.hs, b.nlast
  44f5c8:	b	44f574 <feof@plt+0x4c494>
  44f5cc:	ldp	w8, w9, [x19, #40]
  44f5d0:	sxtw	x8, w8
  44f5d4:	cmp	w8, w9
  44f5d8:	b.ge	44f610 <feof@plt+0x4c530>  // b.tcont
  44f5dc:	ldr	x9, [x19, #32]
  44f5e0:	mov	w10, #0x18                  	// #24
  44f5e4:	add	w11, w8, #0x1
  44f5e8:	madd	x0, x8, x10, x9
  44f5ec:	str	wzr, [x0, #4]
  44f5f0:	str	w11, [x19, #40]
  44f5f4:	cbz	x9, 44f610 <feof@plt+0x4c530>
  44f5f8:	mov	w11, #0x18                  	// #24
  44f5fc:	mov	w10, #0x32                  	// #50
  44f600:	madd	x8, x8, x11, x9
  44f604:	str	w10, [x0]
  44f608:	str	x14, [x8, #8]
  44f60c:	b	44f614 <feof@plt+0x4c534>
  44f610:	mov	x0, xzr
  44f614:	ldp	x20, x19, [sp, #16]
  44f618:	ldp	x29, x30, [sp], #32
  44f61c:	ret
  44f620:	cmp	w8, #0x63
  44f624:	b.ne	44f554 <feof@plt+0x4c474>  // b.any
  44f628:	cmp	w9, #0x76
  44f62c:	b.ne	44f554 <feof@plt+0x4c474>  // b.any
  44f630:	ldp	w8, w20, [x19, #76]
  44f634:	mov	x0, x19
  44f638:	cmp	w8, #0x0
  44f63c:	cset	w8, eq  // eq = none
  44f640:	str	w8, [x19, #80]
  44f644:	bl	44bed4 <feof@plt+0x48df4>
  44f648:	ldr	w9, [x19, #80]
  44f64c:	mov	x8, x0
  44f650:	cbz	w9, 44f68c <feof@plt+0x4c5ac>
  44f654:	cbz	x8, 44f6d8 <feof@plt+0x4c5f8>
  44f658:	ldp	w9, w10, [x19, #40]
  44f65c:	sxtw	x9, w9
  44f660:	cmp	w9, w10
  44f664:	b.ge	44f6d8 <feof@plt+0x4c5f8>  // b.tcont
  44f668:	ldr	x10, [x19, #32]
  44f66c:	mov	w11, #0x18                  	// #24
  44f670:	add	w12, w9, #0x1
  44f674:	madd	x0, x9, x11, x10
  44f678:	str	wzr, [x0, #4]
  44f67c:	str	w12, [x19, #40]
  44f680:	cbz	x10, 44f6d8 <feof@plt+0x4c5f8>
  44f684:	mov	w11, #0x35                  	// #53
  44f688:	b	44f6c0 <feof@plt+0x4c5e0>
  44f68c:	cbz	x8, 44f6d8 <feof@plt+0x4c5f8>
  44f690:	ldp	w9, w10, [x19, #40]
  44f694:	sxtw	x9, w9
  44f698:	cmp	w9, w10
  44f69c:	b.ge	44f6d8 <feof@plt+0x4c5f8>  // b.tcont
  44f6a0:	ldr	x10, [x19, #32]
  44f6a4:	mov	w11, #0x18                  	// #24
  44f6a8:	add	w12, w9, #0x1
  44f6ac:	madd	x0, x9, x11, x10
  44f6b0:	str	wzr, [x0, #4]
  44f6b4:	str	w12, [x19, #40]
  44f6b8:	cbz	x10, 44f6d8 <feof@plt+0x4c5f8>
  44f6bc:	mov	w11, #0x34                  	// #52
  44f6c0:	mov	w12, #0x18                  	// #24
  44f6c4:	madd	x9, x9, x12, x10
  44f6c8:	str	w11, [x0]
  44f6cc:	stp	x8, xzr, [x9, #8]
  44f6d0:	str	w20, [x19, #80]
  44f6d4:	b	44f614 <feof@plt+0x4c534>
  44f6d8:	mov	x0, xzr
  44f6dc:	str	w20, [x19, #80]
  44f6e0:	b	44f614 <feof@plt+0x4c534>
  44f6e4:	stp	x29, x30, [sp, #-64]!
  44f6e8:	str	x23, [sp, #16]
  44f6ec:	mov	x29, sp
  44f6f0:	adrp	x23, 473000 <_obstack_memory_used@@Base+0x11838>
  44f6f4:	stp	x22, x21, [sp, #32]
  44f6f8:	stp	x20, x19, [sp, #48]
  44f6fc:	mov	x19, x0
  44f700:	add	x20, x29, #0x18
  44f704:	mov	w21, #0x18                  	// #24
  44f708:	mov	w22, #0x2e                  	// #46
  44f70c:	add	x23, x23, #0x140
  44f710:	str	xzr, [x29, #24]
  44f714:	ldr	x8, [x19, #24]
  44f718:	ldrb	w9, [x8]
  44f71c:	sub	w10, w9, #0x2e
  44f720:	cmp	w10, #0x24
  44f724:	b.hi	44f748 <feof@plt+0x4c668>  // b.pmore
  44f728:	adr	x9, 44f738 <feof@plt+0x4c658>
  44f72c:	ldrb	w11, [x23, x10]
  44f730:	add	x9, x9, x11, lsl #2
  44f734:	br	x9
  44f738:	ldrb	w8, [x8, #1]
  44f73c:	cmp	w8, #0x45
  44f740:	b.ne	44f74c <feof@plt+0x4c66c>  // b.any
  44f744:	b	44f7a8 <feof@plt+0x4c6c8>
  44f748:	cbz	w9, 44f7a8 <feof@plt+0x4c6c8>
  44f74c:	mov	x0, x19
  44f750:	bl	44bed4 <feof@plt+0x48df4>
  44f754:	cbz	x0, 44f7ec <feof@plt+0x4c70c>
  44f758:	ldp	w8, w9, [x19, #40]
  44f75c:	sxtw	x8, w8
  44f760:	cmp	w8, w9
  44f764:	b.ge	44f79c <feof@plt+0x4c6bc>  // b.tcont
  44f768:	ldr	x10, [x19, #32]
  44f76c:	add	w11, w8, #0x1
  44f770:	madd	x9, x8, x21, x10
  44f774:	str	wzr, [x9, #4]
  44f778:	str	w11, [x19, #40]
  44f77c:	cbz	x10, 44f79c <feof@plt+0x4c6bc>
  44f780:	madd	x8, x8, x21, x10
  44f784:	str	w22, [x9]
  44f788:	str	xzr, [x8, #16]!
  44f78c:	stur	x0, [x8, #-8]
  44f790:	str	x9, [x20]
  44f794:	mov	x20, x8
  44f798:	b	44f714 <feof@plt+0x4c634>
  44f79c:	mov	x0, xzr
  44f7a0:	str	xzr, [x20]
  44f7a4:	b	44f7ec <feof@plt+0x4c70c>
  44f7a8:	ldr	x0, [x29, #24]
  44f7ac:	cbz	x0, 44f7ec <feof@plt+0x4c70c>
  44f7b0:	ldr	x8, [x0, #16]
  44f7b4:	cbnz	x8, 44f7ec <feof@plt+0x4c70c>
  44f7b8:	ldr	x8, [x0, #8]
  44f7bc:	ldr	w9, [x8]
  44f7c0:	cmp	w9, #0x27
  44f7c4:	b.ne	44f7ec <feof@plt+0x4c70c>  // b.any
  44f7c8:	ldr	x8, [x8, #8]
  44f7cc:	ldr	w9, [x8, #28]
  44f7d0:	cmp	w9, #0x9
  44f7d4:	b.ne	44f7ec <feof@plt+0x4c70c>  // b.any
  44f7d8:	ldr	w8, [x8, #8]
  44f7dc:	ldr	w9, [x19, #72]
  44f7e0:	sub	w8, w9, w8
  44f7e4:	str	w8, [x19, #72]
  44f7e8:	str	xzr, [x0, #8]
  44f7ec:	ldp	x20, x19, [sp, #48]
  44f7f0:	ldp	x22, x21, [sp, #32]
  44f7f4:	ldr	x23, [sp, #16]
  44f7f8:	ldp	x29, x30, [sp], #64
  44f7fc:	ret
  44f800:	stp	x29, x30, [sp, #-64]!
  44f804:	stp	x22, x21, [sp, #32]
  44f808:	stp	x20, x19, [sp, #48]
  44f80c:	ldr	x9, [x0, #24]
  44f810:	mov	x19, x0
  44f814:	str	x23, [sp, #16]
  44f818:	mov	x29, sp
  44f81c:	ldrb	w8, [x9]
  44f820:	cmp	w8, #0x45
  44f824:	b.ne	44f874 <feof@plt+0x4c794>  // b.any
  44f828:	ldp	w8, w10, [x19, #40]
  44f82c:	add	x9, x9, #0x1
  44f830:	sxtw	x8, w8
  44f834:	str	x9, [x19, #24]
  44f838:	cmp	w8, w10
  44f83c:	b.ge	44f8f8 <feof@plt+0x4c818>  // b.tcont
  44f840:	ldr	x9, [x19, #32]
  44f844:	mov	w10, #0x18                  	// #24
  44f848:	add	w11, w8, #0x1
  44f84c:	madd	x0, x8, x10, x9
  44f850:	str	wzr, [x0, #4]
  44f854:	str	w11, [x19, #40]
  44f858:	cbz	x9, 44f8f8 <feof@plt+0x4c818>
  44f85c:	mov	w11, #0x18                  	// #24
  44f860:	mov	w10, #0x2f                  	// #47
  44f864:	madd	x8, x8, x11, x9
  44f868:	str	w10, [x0]
  44f86c:	stp	xzr, xzr, [x8, #8]
  44f870:	b	44f908 <feof@plt+0x4c828>
  44f874:	ldr	x20, [x19, #64]
  44f878:	add	x21, x29, #0x18
  44f87c:	mov	w22, #0x18                  	// #24
  44f880:	mov	w23, #0x2f                  	// #47
  44f884:	str	xzr, [x29, #24]
  44f888:	mov	x0, x19
  44f88c:	bl	44e8c8 <feof@plt+0x4b7e8>
  44f890:	cbz	x0, 44f908 <feof@plt+0x4c828>
  44f894:	ldp	w8, w9, [x19, #40]
  44f898:	sxtw	x8, w8
  44f89c:	cmp	w8, w9
  44f8a0:	b.ge	44f900 <feof@plt+0x4c820>  // b.tcont
  44f8a4:	ldr	x10, [x19, #32]
  44f8a8:	add	w11, w8, #0x1
  44f8ac:	madd	x9, x8, x22, x10
  44f8b0:	str	wzr, [x9, #4]
  44f8b4:	str	w11, [x19, #40]
  44f8b8:	cbz	x10, 44f900 <feof@plt+0x4c820>
  44f8bc:	madd	x10, x8, x22, x10
  44f8c0:	str	w23, [x9]
  44f8c4:	str	xzr, [x10, #16]!
  44f8c8:	stur	x0, [x10, #-8]
  44f8cc:	str	x9, [x21]
  44f8d0:	ldr	x8, [x19, #24]
  44f8d4:	mov	x21, x10
  44f8d8:	ldrb	w9, [x8]
  44f8dc:	cmp	w9, #0x45
  44f8e0:	b.ne	44f888 <feof@plt+0x4c7a8>  // b.any
  44f8e4:	add	x8, x8, #0x1
  44f8e8:	str	x8, [x19, #24]
  44f8ec:	str	x20, [x19, #64]
  44f8f0:	ldr	x0, [x29, #24]
  44f8f4:	b	44f908 <feof@plt+0x4c828>
  44f8f8:	mov	x0, xzr
  44f8fc:	b	44f908 <feof@plt+0x4c828>
  44f900:	mov	x0, xzr
  44f904:	str	xzr, [x21]
  44f908:	ldp	x20, x19, [sp, #48]
  44f90c:	ldp	x22, x21, [sp, #32]
  44f910:	ldr	x23, [sp, #16]
  44f914:	ldp	x29, x30, [sp], #64
  44f918:	ret
  44f91c:	sub	sp, sp, #0x70
  44f920:	stp	x29, x30, [sp, #16]
  44f924:	stp	x28, x27, [sp, #32]
  44f928:	stp	x26, x25, [sp, #48]
  44f92c:	stp	x24, x23, [sp, #64]
  44f930:	stp	x22, x21, [sp, #80]
  44f934:	stp	x20, x19, [sp, #96]
  44f938:	mov	x23, x0
  44f93c:	ldr	x8, [x23, #24]!
  44f940:	mov	x19, x0
  44f944:	add	x29, sp, #0x10
  44f948:	ldrb	w9, [x8]
  44f94c:	sub	w10, w9, #0x4c
  44f950:	cmp	w10, #0x27
  44f954:	b.hi	44f994 <feof@plt+0x4c8b4>  // b.pmore
  44f958:	adrp	x11, 473000 <_obstack_memory_used@@Base+0x11838>
  44f95c:	add	x11, x11, #0x165
  44f960:	adr	x12, 44f970 <feof@plt+0x4c890>
  44f964:	ldrb	w13, [x11, x10]
  44f968:	add	x12, x12, x13, lsl #2
  44f96c:	br	x12
  44f970:	mov	x0, x19
  44f974:	ldp	x20, x19, [sp, #96]
  44f978:	ldp	x22, x21, [sp, #80]
  44f97c:	ldp	x24, x23, [sp, #64]
  44f980:	ldp	x26, x25, [sp, #48]
  44f984:	ldp	x28, x27, [sp, #32]
  44f988:	ldp	x29, x30, [sp, #16]
  44f98c:	add	sp, sp, #0x70
  44f990:	b	44e980 <feof@plt+0x4b8a0>
  44f994:	sub	w10, w9, #0x30
  44f998:	cmp	w10, #0xa
  44f99c:	b.cs	44fba4 <feof@plt+0x4cac4>  // b.hs, b.nlast
  44f9a0:	mov	x0, x19
  44f9a4:	bl	44eb14 <feof@plt+0x4ba34>
  44f9a8:	mov	x21, x0
  44f9ac:	cbz	x0, 450838 <feof@plt+0x4d758>
  44f9b0:	ldr	x8, [x23]
  44f9b4:	ldrb	w9, [x8]
  44f9b8:	cmp	w9, #0x49
  44f9bc:	b.ne	450838 <feof@plt+0x4d758>  // b.any
  44f9c0:	add	x8, x8, #0x1
  44f9c4:	mov	x0, x19
  44f9c8:	str	x8, [x19, #24]
  44f9cc:	bl	44f800 <feof@plt+0x4c720>
  44f9d0:	cbz	x0, 450834 <feof@plt+0x4d754>
  44f9d4:	ldp	w8, w9, [x19, #40]
  44f9d8:	sxtw	x8, w8
  44f9dc:	cmp	w8, w9
  44f9e0:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44f9e4:	ldr	x9, [x19, #32]
  44f9e8:	mov	w10, #0x18                  	// #24
  44f9ec:	add	w11, w8, #0x1
  44f9f0:	madd	x10, x8, x10, x9
  44f9f4:	str	wzr, [x10, #4]
  44f9f8:	str	w11, [x19, #40]
  44f9fc:	cbz	x9, 450834 <feof@plt+0x4d754>
  44fa00:	mov	w12, #0x18                  	// #24
  44fa04:	mov	w11, #0x4                   	// #4
  44fa08:	madd	x8, x8, x12, x9
  44fa0c:	str	w11, [x10]
  44fa10:	stp	x21, x0, [x8, #8]
  44fa14:	mov	x21, x10
  44fa18:	b	450838 <feof@plt+0x4d758>
  44fa1c:	add	x9, x8, #0x1
  44fa20:	str	x9, [x23]
  44fa24:	ldrb	w9, [x8, #1]
  44fa28:	cmp	w9, #0x6e
  44fa2c:	b.eq	450834 <feof@plt+0x4d754>  // b.none
  44fa30:	cmp	w9, #0x5f
  44fa34:	b.ne	44fbd4 <feof@plt+0x4caf4>  // b.any
  44fa38:	mov	w10, wzr
  44fa3c:	add	x8, x8, #0x2
  44fa40:	str	x8, [x23]
  44fa44:	ldp	w8, w9, [x19, #40]
  44fa48:	sxtw	x8, w8
  44fa4c:	cmp	w8, w9
  44fa50:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44fa54:	ldr	x9, [x19, #32]
  44fa58:	mov	w11, #0x18                  	// #24
  44fa5c:	add	w12, w8, #0x1
  44fa60:	madd	x21, x8, x11, x9
  44fa64:	str	wzr, [x21, #4]
  44fa68:	str	w12, [x19, #40]
  44fa6c:	cbz	x9, 450834 <feof@plt+0x4d754>
  44fa70:	mov	w12, #0x18                  	// #24
  44fa74:	mov	w11, #0x5                   	// #5
  44fa78:	mov	w10, w10
  44fa7c:	madd	x8, x8, x12, x9
  44fa80:	str	w11, [x21]
  44fa84:	str	x10, [x8, #8]
  44fa88:	b	450838 <feof@plt+0x4d758>
  44fa8c:	ldrb	w9, [x8, #1]
  44fa90:	cmp	w9, #0x70
  44fa94:	b.ne	44fcdc <feof@plt+0x4cbfc>  // b.any
  44fa98:	add	x10, x8, #0x2
  44fa9c:	str	x10, [x23]
  44faa0:	ldrb	w9, [x8, #2]
  44faa4:	cmp	w9, #0x6e
  44faa8:	b.eq	450834 <feof@plt+0x4d754>  // b.none
  44faac:	cmp	w9, #0x5f
  44fab0:	b.eq	44fe94 <feof@plt+0x4cdb4>  // b.none
  44fab4:	cmp	w9, #0x54
  44fab8:	b.ne	44feec <feof@plt+0x4ce0c>  // b.any
  44fabc:	add	x8, x8, #0x3
  44fac0:	mov	x9, xzr
  44fac4:	str	x8, [x23]
  44fac8:	b	44fea8 <feof@plt+0x4cdc8>
  44facc:	ldrb	w9, [x8, #1]
  44fad0:	cmp	w9, #0x70
  44fad4:	b.eq	44fc54 <feof@plt+0x4cb74>  // b.none
  44fad8:	cmp	w9, #0x72
  44fadc:	b.ne	44fcdc <feof@plt+0x4cbfc>  // b.any
  44fae0:	add	x8, x8, #0x2
  44fae4:	mov	x0, x19
  44fae8:	str	x8, [x19, #24]
  44faec:	bl	44bed4 <feof@plt+0x48df4>
  44faf0:	mov	x20, x0
  44faf4:	mov	x0, x19
  44faf8:	bl	44eb14 <feof@plt+0x4ba34>
  44fafc:	ldr	x8, [x19, #24]
  44fb00:	mov	x22, x0
  44fb04:	ldrb	w9, [x8]
  44fb08:	cmp	w9, #0x49
  44fb0c:	b.ne	44fe28 <feof@plt+0x4cd48>  // b.any
  44fb10:	add	x8, x8, #0x1
  44fb14:	mov	x0, x19
  44fb18:	str	x8, [x19, #24]
  44fb1c:	bl	44f800 <feof@plt+0x4c720>
  44fb20:	mov	x21, xzr
  44fb24:	cbz	x22, 450838 <feof@plt+0x4d758>
  44fb28:	cbz	x0, 450838 <feof@plt+0x4d758>
  44fb2c:	ldp	w9, w8, [x19, #40]
  44fb30:	sxtw	x9, w9
  44fb34:	cmp	w9, w8
  44fb38:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44fb3c:	ldr	x10, [x19, #32]
  44fb40:	mov	w8, #0x18                  	// #24
  44fb44:	add	w11, w9, #0x1
  44fb48:	madd	x8, x9, x8, x10
  44fb4c:	str	wzr, [x8, #4]
  44fb50:	str	w11, [x19, #40]
  44fb54:	cbz	x10, 450834 <feof@plt+0x4d754>
  44fb58:	mov	w12, #0x18                  	// #24
  44fb5c:	mov	w11, #0x4                   	// #4
  44fb60:	madd	x9, x9, x12, x10
  44fb64:	str	w11, [x8]
  44fb68:	stp	x22, x0, [x9, #8]
  44fb6c:	cbz	x20, 450834 <feof@plt+0x4d754>
  44fb70:	ldp	w9, w10, [x19, #40]
  44fb74:	sxtw	x9, w9
  44fb78:	cmp	w9, w10
  44fb7c:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44fb80:	ldr	x10, [x19, #32]
  44fb84:	mov	w11, #0x18                  	// #24
  44fb88:	add	w12, w9, #0x1
  44fb8c:	madd	x21, x9, x11, x10
  44fb90:	str	wzr, [x21, #4]
  44fb94:	str	w12, [x19, #40]
  44fb98:	cbz	x10, 450834 <feof@plt+0x4d754>
  44fb9c:	mov	w11, #0x1                   	// #1
  44fba0:	b	4506c4 <feof@plt+0x4d5e4>
  44fba4:	cmp	w9, #0x69
  44fba8:	b.eq	44fcac <feof@plt+0x4cbcc>  // b.none
  44fbac:	cmp	w9, #0x74
  44fbb0:	b.eq	44fcac <feof@plt+0x4cbcc>  // b.none
  44fbb4:	cmp	w9, #0x6f
  44fbb8:	b.ne	44fcdc <feof@plt+0x4cbfc>  // b.any
  44fbbc:	ldrb	w9, [x8, #1]
  44fbc0:	cmp	w9, #0x6e
  44fbc4:	b.ne	44fcdc <feof@plt+0x4cbfc>  // b.any
  44fbc8:	add	x8, x8, #0x2
  44fbcc:	str	x8, [x23]
  44fbd0:	b	44f9a0 <feof@plt+0x4c8c0>
  44fbd4:	sub	w10, w9, #0x30
  44fbd8:	cmp	w10, #0x9
  44fbdc:	b.hi	44fe78 <feof@plt+0x4cd98>  // b.pmore
  44fbe0:	mov	w11, #0x2f                  	// #47
  44fbe4:	mov	w12, #0x6667                	// #26215
  44fbe8:	mov	w10, wzr
  44fbec:	movk	w11, #0x8000, lsl #16
  44fbf0:	add	x8, x8, #0x2
  44fbf4:	movk	w12, #0x6666, lsl #16
  44fbf8:	mov	w13, #0xa                   	// #10
  44fbfc:	and	w14, w9, #0xff
  44fc00:	sub	w9, w11, w14
  44fc04:	smull	x9, w9, w12
  44fc08:	lsr	x15, x9, #63
  44fc0c:	asr	x9, x9, #34
  44fc10:	add	w9, w9, w15
  44fc14:	cmp	w10, w9
  44fc18:	b.gt	450834 <feof@plt+0x4d754>
  44fc1c:	str	x8, [x23]
  44fc20:	ldrb	w9, [x8], #1
  44fc24:	madd	w10, w10, w13, w14
  44fc28:	sub	w10, w10, #0x30
  44fc2c:	sub	w14, w9, #0x30
  44fc30:	cmp	w14, #0xa
  44fc34:	b.cc	44fbfc <feof@plt+0x4cb1c>  // b.lo, b.ul, b.last
  44fc38:	cmn	w10, #0x1
  44fc3c:	b.lt	450834 <feof@plt+0x4d754>  // b.tstop
  44fc40:	add	w10, w10, #0x1
  44fc44:	sub	x8, x8, #0x2
  44fc48:	cmp	w9, #0x5f
  44fc4c:	b.eq	44fe84 <feof@plt+0x4cda4>  // b.none
  44fc50:	b	450834 <feof@plt+0x4d754>
  44fc54:	add	x8, x8, #0x2
  44fc58:	mov	x0, x19
  44fc5c:	str	x8, [x19, #24]
  44fc60:	bl	44f91c <feof@plt+0x4c83c>
  44fc64:	cbz	x0, 450834 <feof@plt+0x4d754>
  44fc68:	ldp	w8, w9, [x19, #40]
  44fc6c:	sxtw	x8, w8
  44fc70:	cmp	w8, w9
  44fc74:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44fc78:	ldr	x9, [x19, #32]
  44fc7c:	mov	w10, #0x18                  	// #24
  44fc80:	add	w11, w8, #0x1
  44fc84:	madd	x21, x8, x10, x9
  44fc88:	str	wzr, [x21, #4]
  44fc8c:	str	w11, [x19, #40]
  44fc90:	cbz	x9, 450834 <feof@plt+0x4d754>
  44fc94:	mov	w11, #0x18                  	// #24
  44fc98:	mov	w10, #0x4b                  	// #75
  44fc9c:	madd	x8, x8, x11, x9
  44fca0:	str	w10, [x21]
  44fca4:	stp	x0, xzr, [x8, #8]
  44fca8:	b	450838 <feof@plt+0x4d758>
  44fcac:	ldrb	w10, [x8, #1]
  44fcb0:	cmp	w10, #0x6c
  44fcb4:	b.ne	44fcdc <feof@plt+0x4cbfc>  // b.any
  44fcb8:	add	x8, x8, #0x2
  44fcbc:	cmp	w9, #0x74
  44fcc0:	str	x8, [x23]
  44fcc4:	b.ne	44ff7c <feof@plt+0x4ce9c>  // b.any
  44fcc8:	mov	x0, x19
  44fccc:	bl	44bed4 <feof@plt+0x48df4>
  44fcd0:	ldr	x8, [x19, #24]
  44fcd4:	mov	x20, x0
  44fcd8:	b	44ff80 <feof@plt+0x4cea0>
  44fcdc:	mov	x0, x19
  44fce0:	bl	44f498 <feof@plt+0x4c3b8>
  44fce4:	cbz	x0, 450834 <feof@plt+0x4d754>
  44fce8:	ldr	w8, [x0]
  44fcec:	mov	x20, x0
  44fcf0:	cmp	w8, #0x34
  44fcf4:	b.eq	44fd44 <feof@plt+0x4cc64>  // b.none
  44fcf8:	cmp	w8, #0x33
  44fcfc:	b.eq	44fdb8 <feof@plt+0x4ccd8>  // b.none
  44fd00:	cmp	w8, #0x32
  44fd04:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  44fd08:	ldr	x8, [x20, #8]
  44fd0c:	ldr	w10, [x19, #72]
  44fd10:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  44fd14:	add	x1, x1, #0xeb
  44fd18:	ldr	w9, [x8, #16]
  44fd1c:	ldr	x21, [x8]
  44fd20:	add	w8, w9, w10
  44fd24:	sub	w8, w8, #0x2
  44fd28:	mov	x0, x21
  44fd2c:	str	w8, [x19, #72]
  44fd30:	bl	402ed0 <strcmp@plt>
  44fd34:	cbz	w0, 44ff6c <feof@plt+0x4ce8c>
  44fd38:	ldr	x8, [x20, #8]
  44fd3c:	add	x8, x8, #0x14
  44fd40:	b	44fdc0 <feof@plt+0x4cce0>
  44fd44:	ldr	x9, [x23]
  44fd48:	ldrb	w8, [x9]
  44fd4c:	cmp	w8, #0x5f
  44fd50:	b.ne	45004c <feof@plt+0x4cf6c>  // b.any
  44fd54:	add	x8, x9, #0x1
  44fd58:	str	x8, [x23]
  44fd5c:	str	xzr, [sp, #8]
  44fd60:	ldrb	w8, [x9, #1]
  44fd64:	cmp	w8, #0x45
  44fd68:	b.ne	45012c <feof@plt+0x4d04c>  // b.any
  44fd6c:	ldp	w8, w10, [x19, #40]
  44fd70:	add	x9, x9, #0x2
  44fd74:	sxtw	x8, w8
  44fd78:	str	x9, [x19, #24]
  44fd7c:	cmp	w8, w10
  44fd80:	b.ge	450270 <feof@plt+0x4d190>  // b.tcont
  44fd84:	ldr	x9, [x19, #32]
  44fd88:	mov	w10, #0x18                  	// #24
  44fd8c:	add	w11, w8, #0x1
  44fd90:	madd	x0, x8, x10, x9
  44fd94:	str	wzr, [x0, #4]
  44fd98:	str	w11, [x19, #40]
  44fd9c:	cbz	x9, 450270 <feof@plt+0x4d190>
  44fda0:	mov	w11, #0x18                  	// #24
  44fda4:	mov	w10, #0x2e                  	// #46
  44fda8:	madd	x8, x8, x11, x9
  44fdac:	str	w10, [x0]
  44fdb0:	stp	xzr, xzr, [x8, #8]
  44fdb4:	b	450288 <feof@plt+0x4d1a8>
  44fdb8:	mov	x21, xzr
  44fdbc:	add	x8, x20, #0x8
  44fdc0:	ldr	w8, [x8]
  44fdc4:	cmp	w8, #0x3
  44fdc8:	b.hi	450834 <feof@plt+0x4d754>  // b.pmore
  44fdcc:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  44fdd0:	add	x9, x9, #0x18d
  44fdd4:	adr	x10, 44fde4 <feof@plt+0x4cd04>
  44fdd8:	ldrb	w11, [x9, x8]
  44fddc:	add	x10, x10, x11, lsl #2
  44fde0:	br	x10
  44fde4:	ldp	w8, w9, [x19, #40]
  44fde8:	sxtw	x8, w8
  44fdec:	cmp	w8, w9
  44fdf0:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44fdf4:	ldr	x9, [x19, #32]
  44fdf8:	mov	w10, #0x18                  	// #24
  44fdfc:	add	w11, w8, #0x1
  44fe00:	madd	x21, x8, x10, x9
  44fe04:	str	wzr, [x21, #4]
  44fe08:	str	w11, [x19, #40]
  44fe0c:	cbz	x9, 450834 <feof@plt+0x4d754>
  44fe10:	mov	w11, #0x18                  	// #24
  44fe14:	mov	w10, #0x36                  	// #54
  44fe18:	madd	x8, x8, x11, x9
  44fe1c:	str	w10, [x21]
  44fe20:	stp	x20, xzr, [x8, #8]
  44fe24:	b	450838 <feof@plt+0x4d758>
  44fe28:	mov	x21, xzr
  44fe2c:	cbz	x20, 450838 <feof@plt+0x4d758>
  44fe30:	cbz	x22, 450838 <feof@plt+0x4d758>
  44fe34:	ldp	w8, w9, [x19, #40]
  44fe38:	sxtw	x8, w8
  44fe3c:	cmp	w8, w9
  44fe40:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44fe44:	ldr	x9, [x19, #32]
  44fe48:	mov	w10, #0x18                  	// #24
  44fe4c:	add	w11, w8, #0x1
  44fe50:	madd	x21, x8, x10, x9
  44fe54:	str	wzr, [x21, #4]
  44fe58:	str	w11, [x19, #40]
  44fe5c:	cbz	x9, 450834 <feof@plt+0x4d754>
  44fe60:	mov	w11, #0x18                  	// #24
  44fe64:	mov	w10, #0x1                   	// #1
  44fe68:	madd	x8, x8, x11, x9
  44fe6c:	str	w10, [x21]
  44fe70:	stp	x20, x22, [x8, #8]
  44fe74:	b	450838 <feof@plt+0x4d758>
  44fe78:	mov	w10, #0x1                   	// #1
  44fe7c:	cmp	w9, #0x5f
  44fe80:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  44fe84:	add	x8, x8, #0x2
  44fe88:	str	x8, [x23]
  44fe8c:	tbz	w10, #31, 44fa44 <feof@plt+0x4c964>
  44fe90:	b	450834 <feof@plt+0x4d754>
  44fe94:	mov	w11, wzr
  44fe98:	add	x8, x8, #0x3
  44fe9c:	str	x8, [x23]
  44fea0:	add	w8, w11, #0x1
  44fea4:	sxtw	x9, w8
  44fea8:	ldp	w8, w10, [x19, #40]
  44feac:	sxtw	x8, w8
  44feb0:	cmp	w8, w10
  44feb4:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44feb8:	ldr	x10, [x19, #32]
  44febc:	mov	w11, #0x18                  	// #24
  44fec0:	add	w12, w8, #0x1
  44fec4:	madd	x21, x8, x11, x10
  44fec8:	str	wzr, [x21, #4]
  44fecc:	str	w12, [x19, #40]
  44fed0:	cbz	x10, 450834 <feof@plt+0x4d754>
  44fed4:	mov	w12, #0x18                  	// #24
  44fed8:	mov	w11, #0x6                   	// #6
  44fedc:	madd	x8, x8, x12, x10
  44fee0:	str	w11, [x21]
  44fee4:	str	x9, [x8, #8]
  44fee8:	b	450838 <feof@plt+0x4d758>
  44feec:	sub	w11, w9, #0x30
  44fef0:	cmp	w11, #0x9
  44fef4:	b.hi	44ffe4 <feof@plt+0x4cf04>  // b.pmore
  44fef8:	mov	w11, #0x2f                  	// #47
  44fefc:	mov	w12, #0x6667                	// #26215
  44ff00:	mov	w10, wzr
  44ff04:	movk	w11, #0x8000, lsl #16
  44ff08:	add	x8, x8, #0x3
  44ff0c:	movk	w12, #0x6666, lsl #16
  44ff10:	mov	w13, #0xa                   	// #10
  44ff14:	and	w14, w9, #0xff
  44ff18:	sub	w9, w11, w14
  44ff1c:	smull	x9, w9, w12
  44ff20:	lsr	x15, x9, #63
  44ff24:	asr	x9, x9, #34
  44ff28:	add	w9, w9, w15
  44ff2c:	cmp	w10, w9
  44ff30:	b.gt	450834 <feof@plt+0x4d754>
  44ff34:	str	x8, [x23]
  44ff38:	ldrb	w9, [x8], #1
  44ff3c:	madd	w10, w10, w13, w14
  44ff40:	sub	w10, w10, #0x30
  44ff44:	sub	w14, w9, #0x30
  44ff48:	cmp	w14, #0xa
  44ff4c:	b.cc	44ff14 <feof@plt+0x4ce34>  // b.lo, b.ul, b.last
  44ff50:	cmn	w10, #0x1
  44ff54:	b.lt	450834 <feof@plt+0x4d754>  // b.tstop
  44ff58:	add	w11, w10, #0x1
  44ff5c:	sub	x10, x8, #0x1
  44ff60:	cmp	w9, #0x5f
  44ff64:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  44ff68:	b	44fff0 <feof@plt+0x4cf10>
  44ff6c:	mov	x0, x19
  44ff70:	bl	44bed4 <feof@plt+0x48df4>
  44ff74:	cbnz	x0, 45028c <feof@plt+0x4d1ac>
  44ff78:	b	450834 <feof@plt+0x4d754>
  44ff7c:	mov	x20, xzr
  44ff80:	mov	x10, x8
  44ff84:	ldrb	w9, [x10, #1]!
  44ff88:	cbz	w9, 450834 <feof@plt+0x4d754>
  44ff8c:	str	xzr, [sp, #8]
  44ff90:	ldrb	w8, [x8]
  44ff94:	cmp	w8, #0x45
  44ff98:	b.ne	4501b4 <feof@plt+0x4d0d4>  // b.any
  44ff9c:	ldp	w9, w8, [x19, #40]
  44ffa0:	str	x10, [x19, #24]
  44ffa4:	sxtw	x9, w9
  44ffa8:	cmp	w9, w8
  44ffac:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  44ffb0:	ldr	x10, [x19, #32]
  44ffb4:	mov	w8, #0x18                  	// #24
  44ffb8:	add	w11, w9, #0x1
  44ffbc:	madd	x8, x9, x8, x10
  44ffc0:	str	wzr, [x8, #4]
  44ffc4:	str	w11, [x19, #40]
  44ffc8:	cbz	x10, 450834 <feof@plt+0x4d754>
  44ffcc:	mov	w12, #0x18                  	// #24
  44ffd0:	mov	w11, #0x2e                  	// #46
  44ffd4:	madd	x9, x9, x12, x10
  44ffd8:	str	w11, [x8]
  44ffdc:	stp	xzr, xzr, [x9, #8]
  44ffe0:	b	45023c <feof@plt+0x4d15c>
  44ffe4:	mov	w11, #0x1                   	// #1
  44ffe8:	cmp	w9, #0x5f
  44ffec:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  44fff0:	mvn	w9, w11
  44fff4:	add	x8, x10, #0x1
  44fff8:	tst	w9, #0x7fffffff
  44fffc:	str	x8, [x23]
  450000:	b.eq	450834 <feof@plt+0x4d754>  // b.none
  450004:	b	44fea0 <feof@plt+0x4cdc0>
  450008:	cbz	x21, 45004c <feof@plt+0x4cf6c>
  45000c:	ldrb	w8, [x21]
  450010:	cmp	w8, #0x70
  450014:	b.eq	450020 <feof@plt+0x4cf40>  // b.none
  450018:	cmp	w8, #0x6d
  45001c:	b.ne	450278 <feof@plt+0x4d198>  // b.any
  450020:	ldrb	w9, [x21, #1]
  450024:	cmp	w9, w8
  450028:	b.ne	450278 <feof@plt+0x4d198>  // b.any
  45002c:	ldr	x8, [x23]
  450030:	ldrb	w9, [x8]
  450034:	cmp	w9, #0x5f
  450038:	b.ne	450618 <feof@plt+0x4d538>  // b.any
  45003c:	mov	w22, wzr
  450040:	add	x8, x8, #0x1
  450044:	str	x8, [x23]
  450048:	b	45061c <feof@plt+0x4d53c>
  45004c:	mov	w22, wzr
  450050:	mov	x0, x19
  450054:	bl	44f91c <feof@plt+0x4c83c>
  450058:	cbz	w22, 450288 <feof@plt+0x4d1a8>
  45005c:	cbz	x0, 450834 <feof@plt+0x4d754>
  450060:	ldp	w8, w9, [x19, #40]
  450064:	sxtw	x8, w8
  450068:	cmp	w8, w9
  45006c:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  450070:	ldr	x9, [x19, #32]
  450074:	mov	w10, #0x18                  	// #24
  450078:	add	w11, w8, #0x1
  45007c:	madd	x10, x8, x10, x9
  450080:	str	wzr, [x10, #4]
  450084:	str	w11, [x19, #40]
  450088:	cbz	x9, 450834 <feof@plt+0x4d754>
  45008c:	mov	w12, #0x18                  	// #24
  450090:	mov	w11, #0x39                  	// #57
  450094:	madd	x8, x8, x12, x9
  450098:	str	w11, [x10]
  45009c:	stp	x0, x0, [x8, #8]
  4500a0:	mov	x0, x10
  4500a4:	b	45028c <feof@plt+0x4d1ac>
  4500a8:	cbz	x21, 450838 <feof@plt+0x4d758>
  4500ac:	ldr	x8, [x20, #8]
  4500b0:	ldr	x8, [x8]
  4500b4:	ldrb	w9, [x8, #1]
  4500b8:	cmp	w9, #0x63
  4500bc:	b.ne	4502d0 <feof@plt+0x4d1f0>  // b.any
  4500c0:	ldrb	w8, [x8]
  4500c4:	sub	w8, w8, #0x63
  4500c8:	cmp	w8, #0x10
  4500cc:	b.hi	4502d0 <feof@plt+0x4d1f0>  // b.pmore
  4500d0:	mov	w9, #0x1                   	// #1
  4500d4:	lsl	w8, w9, w8
  4500d8:	mov	w9, #0x8003                	// #32771
  4500dc:	movk	w9, #0x1, lsl #16
  4500e0:	tst	w8, w9
  4500e4:	b.eq	4502d0 <feof@plt+0x4d1f0>  // b.none
  4500e8:	mov	x0, x19
  4500ec:	bl	44bed4 <feof@plt+0x48df4>
  4500f0:	b	4503e4 <feof@plt+0x4d304>
  4500f4:	cbz	x21, 450838 <feof@plt+0x4d758>
  4500f8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  4500fc:	add	x1, x1, #0x154
  450100:	mov	x0, x21
  450104:	bl	402ed0 <strcmp@plt>
  450108:	cbz	w0, 4502f0 <feof@plt+0x4d210>
  45010c:	ldrb	w8, [x21]
  450110:	cmp	w8, #0x6e
  450114:	b.eq	450514 <feof@plt+0x4d434>  // b.none
  450118:	cmp	w8, #0x66
  45011c:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  450120:	mov	x0, x19
  450124:	bl	44f498 <feof@plt+0x4c3b8>
  450128:	b	4502f8 <feof@plt+0x4d218>
  45012c:	add	x21, sp, #0x8
  450130:	mov	w22, #0x1                   	// #1
  450134:	mov	w24, #0x18                  	// #24
  450138:	mov	w25, #0x2e                  	// #46
  45013c:	ldr	w26, [x19, #76]
  450140:	mov	x0, x19
  450144:	str	w22, [x19, #76]
  450148:	bl	44f91c <feof@plt+0x4c83c>
  45014c:	str	w26, [x19, #76]
  450150:	cbz	x0, 450288 <feof@plt+0x4d1a8>
  450154:	ldp	w8, w9, [x19, #40]
  450158:	sxtw	x8, w8
  45015c:	cmp	w8, w9
  450160:	b.ge	450280 <feof@plt+0x4d1a0>  // b.tcont
  450164:	ldr	x10, [x19, #32]
  450168:	add	w11, w8, #0x1
  45016c:	madd	x9, x8, x24, x10
  450170:	str	wzr, [x9, #4]
  450174:	str	w11, [x19, #40]
  450178:	cbz	x10, 450280 <feof@plt+0x4d1a0>
  45017c:	madd	x10, x8, x24, x10
  450180:	str	w25, [x9]
  450184:	str	xzr, [x10, #16]!
  450188:	stur	x0, [x10, #-8]
  45018c:	str	x9, [x21]
  450190:	ldr	x8, [x23]
  450194:	mov	x21, x10
  450198:	ldrb	w9, [x8]
  45019c:	cmp	w9, #0x45
  4501a0:	b.ne	45013c <feof@plt+0x4d05c>  // b.any
  4501a4:	add	x8, x8, #0x1
  4501a8:	str	x8, [x23]
  4501ac:	ldr	x0, [sp, #8]
  4501b0:	b	450288 <feof@plt+0x4d1a8>
  4501b4:	add	x21, sp, #0x8
  4501b8:	mov	w22, #0x1                   	// #1
  4501bc:	mov	w24, #0x18                  	// #24
  4501c0:	mov	w25, #0x2e                  	// #46
  4501c4:	ldr	w26, [x19, #76]
  4501c8:	mov	x0, x19
  4501cc:	str	w22, [x19, #76]
  4501d0:	bl	44f91c <feof@plt+0x4c83c>
  4501d4:	str	w26, [x19, #76]
  4501d8:	cbz	x0, 450834 <feof@plt+0x4d754>
  4501dc:	ldp	w8, w9, [x19, #40]
  4501e0:	sxtw	x8, w8
  4501e4:	cmp	w8, w9
  4501e8:	b.ge	4502e8 <feof@plt+0x4d208>  // b.tcont
  4501ec:	ldr	x10, [x19, #32]
  4501f0:	add	w11, w8, #0x1
  4501f4:	madd	x9, x8, x24, x10
  4501f8:	str	wzr, [x9, #4]
  4501fc:	str	w11, [x19, #40]
  450200:	cbz	x10, 4502e8 <feof@plt+0x4d208>
  450204:	madd	x10, x8, x24, x10
  450208:	str	w25, [x9]
  45020c:	str	xzr, [x10, #16]!
  450210:	stur	x0, [x10, #-8]
  450214:	str	x9, [x21]
  450218:	ldr	x8, [x23]
  45021c:	mov	x21, x10
  450220:	ldrb	w9, [x8]
  450224:	cmp	w9, #0x45
  450228:	b.ne	4501c4 <feof@plt+0x4d0e4>  // b.any
  45022c:	add	x8, x8, #0x1
  450230:	str	x8, [x23]
  450234:	ldr	x8, [sp, #8]
  450238:	cbz	x8, 450834 <feof@plt+0x4d754>
  45023c:	ldp	w9, w10, [x19, #40]
  450240:	sxtw	x9, w9
  450244:	cmp	w9, w10
  450248:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  45024c:	ldr	x10, [x19, #32]
  450250:	mov	w11, #0x18                  	// #24
  450254:	add	w12, w9, #0x1
  450258:	madd	x21, x9, x11, x10
  45025c:	str	wzr, [x21, #4]
  450260:	str	w12, [x19, #40]
  450264:	cbz	x10, 450834 <feof@plt+0x4d754>
  450268:	mov	w11, #0x31                  	// #49
  45026c:	b	4506c4 <feof@plt+0x4d5e4>
  450270:	mov	x0, xzr
  450274:	b	450288 <feof@plt+0x4d1a8>
  450278:	mov	w22, wzr
  45027c:	b	45061c <feof@plt+0x4d53c>
  450280:	mov	x0, xzr
  450284:	str	xzr, [x21]
  450288:	cbz	x0, 450834 <feof@plt+0x4d754>
  45028c:	ldp	w8, w9, [x19, #40]
  450290:	sxtw	x8, w8
  450294:	cmp	w8, w9
  450298:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  45029c:	ldr	x9, [x19, #32]
  4502a0:	mov	w10, #0x18                  	// #24
  4502a4:	add	w11, w8, #0x1
  4502a8:	madd	x21, x8, x10, x9
  4502ac:	str	wzr, [x21, #4]
  4502b0:	str	w11, [x19, #40]
  4502b4:	cbz	x9, 450834 <feof@plt+0x4d754>
  4502b8:	mov	w11, #0x18                  	// #24
  4502bc:	mov	w10, #0x37                  	// #55
  4502c0:	madd	x8, x8, x11, x9
  4502c4:	str	w10, [x21]
  4502c8:	stp	x20, x0, [x8, #8]
  4502cc:	b	450838 <feof@plt+0x4d758>
  4502d0:	ldrb	w8, [x21]
  4502d4:	mov	x0, x19
  4502d8:	cmp	w8, #0x66
  4502dc:	b.ne	4503e0 <feof@plt+0x4d300>  // b.any
  4502e0:	bl	44f498 <feof@plt+0x4c3b8>
  4502e4:	b	4503e4 <feof@plt+0x4d304>
  4502e8:	str	xzr, [x21]
  4502ec:	b	450834 <feof@plt+0x4d754>
  4502f0:	mov	x0, x19
  4502f4:	bl	44f91c <feof@plt+0x4c83c>
  4502f8:	mov	x21, x0
  4502fc:	mov	x0, x19
  450300:	bl	44f91c <feof@plt+0x4c83c>
  450304:	mov	x22, x0
  450308:	mov	x0, x19
  45030c:	bl	44f91c <feof@plt+0x4c83c>
  450310:	cbz	x0, 450834 <feof@plt+0x4d754>
  450314:	cbz	x22, 450834 <feof@plt+0x4d754>
  450318:	ldp	w9, w8, [x19, #40]
  45031c:	sxtw	x9, w9
  450320:	cmp	w9, w8
  450324:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  450328:	ldr	x10, [x19, #32]
  45032c:	mov	w8, #0x18                  	// #24
  450330:	add	w11, w9, #0x1
  450334:	madd	x8, x9, x8, x10
  450338:	str	wzr, [x8, #4]
  45033c:	str	w11, [x19, #40]
  450340:	cbz	x10, 450834 <feof@plt+0x4d754>
  450344:	mov	w12, #0x18                  	// #24
  450348:	mov	w11, #0x3c                  	// #60
  45034c:	madd	x9, x9, x12, x10
  450350:	str	w11, [x8]
  450354:	stp	x22, x0, [x9, #8]
  450358:	cbz	x21, 450838 <feof@plt+0x4d758>
  45035c:	ldp	w10, w9, [x19, #40]
  450360:	sxtw	x10, w10
  450364:	cmp	w10, w9
  450368:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  45036c:	ldr	x11, [x19, #32]
  450370:	mov	w9, #0x18                  	// #24
  450374:	add	w12, w10, #0x1
  450378:	madd	x9, x10, x9, x11
  45037c:	str	wzr, [x9, #4]
  450380:	str	w12, [x19, #40]
  450384:	cbz	x11, 450834 <feof@plt+0x4d754>
  450388:	mov	w13, #0x18                  	// #24
  45038c:	mov	w12, #0x3b                  	// #59
  450390:	madd	x10, x10, x13, x11
  450394:	str	w12, [x9]
  450398:	stp	x21, x8, [x10, #8]
  45039c:	ldp	w8, w10, [x19, #40]
  4503a0:	sxtw	x8, w8
  4503a4:	cmp	w8, w10
  4503a8:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  4503ac:	ldr	x10, [x19, #32]
  4503b0:	mov	w11, #0x18                  	// #24
  4503b4:	add	w12, w8, #0x1
  4503b8:	madd	x21, x8, x11, x10
  4503bc:	str	wzr, [x21, #4]
  4503c0:	str	w12, [x19, #40]
  4503c4:	cbz	x10, 450834 <feof@plt+0x4d754>
  4503c8:	mov	w12, #0x18                  	// #24
  4503cc:	mov	w11, #0x3a                  	// #58
  4503d0:	madd	x8, x8, x12, x10
  4503d4:	str	w11, [x21]
  4503d8:	stp	x20, x9, [x8, #8]
  4503dc:	b	450838 <feof@plt+0x4d758>
  4503e0:	bl	44f91c <feof@plt+0x4c83c>
  4503e4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  4503e8:	mov	x22, x0
  4503ec:	add	x1, x1, #0xc5
  4503f0:	mov	x0, x21
  4503f4:	bl	402ed0 <strcmp@plt>
  4503f8:	cbz	w0, 4504b4 <feof@plt+0x4d3d4>
  4503fc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  450400:	add	x1, x1, #0xf9
  450404:	mov	x0, x21
  450408:	bl	402ed0 <strcmp@plt>
  45040c:	cbz	w0, 450434 <feof@plt+0x4d354>
  450410:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  450414:	add	x1, x1, #0x60e
  450418:	mov	x0, x21
  45041c:	bl	402ed0 <strcmp@plt>
  450420:	cbz	w0, 450434 <feof@plt+0x4d354>
  450424:	mov	x0, x19
  450428:	bl	44f91c <feof@plt+0x4c83c>
  45042c:	mov	x23, x0
  450430:	b	450648 <feof@plt+0x4d568>
  450434:	mov	x0, x19
  450438:	bl	44eb14 <feof@plt+0x4ba34>
  45043c:	ldr	x8, [x19, #24]
  450440:	mov	x23, x0
  450444:	ldrb	w9, [x8]
  450448:	cmp	w9, #0x49
  45044c:	b.ne	450648 <feof@plt+0x4d568>  // b.any
  450450:	add	x8, x8, #0x1
  450454:	mov	x0, x19
  450458:	str	x8, [x19, #24]
  45045c:	bl	44f800 <feof@plt+0x4c720>
  450460:	mov	x21, xzr
  450464:	cbz	x23, 450838 <feof@plt+0x4d758>
  450468:	cbz	x0, 450838 <feof@plt+0x4d758>
  45046c:	ldp	w8, w9, [x19, #40]
  450470:	sxtw	x8, w8
  450474:	cmp	w8, w9
  450478:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  45047c:	ldr	x9, [x19, #32]
  450480:	mov	w10, #0x18                  	// #24
  450484:	add	w11, w8, #0x1
  450488:	madd	x10, x8, x10, x9
  45048c:	str	wzr, [x10, #4]
  450490:	str	w11, [x19, #40]
  450494:	cbz	x9, 450834 <feof@plt+0x4d754>
  450498:	mov	w12, #0x18                  	// #24
  45049c:	mov	w11, #0x4                   	// #4
  4504a0:	madd	x8, x8, x12, x9
  4504a4:	str	w11, [x10]
  4504a8:	stp	x23, x0, [x8, #8]
  4504ac:	mov	x23, x10
  4504b0:	b	450648 <feof@plt+0x4d568>
  4504b4:	str	xzr, [sp, #8]
  4504b8:	ldr	x9, [x23]
  4504bc:	ldrb	w8, [x9]
  4504c0:	cmp	w8, #0x45
  4504c4:	b.ne	450588 <feof@plt+0x4d4a8>  // b.any
  4504c8:	ldp	w8, w10, [x19, #40]
  4504cc:	add	x9, x9, #0x1
  4504d0:	sxtw	x8, w8
  4504d4:	str	x9, [x19, #24]
  4504d8:	cmp	w8, w10
  4504dc:	b.ge	450610 <feof@plt+0x4d530>  // b.tcont
  4504e0:	ldr	x9, [x19, #32]
  4504e4:	mov	w10, #0x18                  	// #24
  4504e8:	add	w11, w8, #0x1
  4504ec:	madd	x23, x8, x10, x9
  4504f0:	str	wzr, [x23, #4]
  4504f4:	str	w11, [x19, #40]
  4504f8:	cbz	x9, 450610 <feof@plt+0x4d530>
  4504fc:	mov	w11, #0x18                  	// #24
  450500:	mov	w10, #0x2e                  	// #46
  450504:	madd	x8, x8, x11, x9
  450508:	str	w10, [x23]
  45050c:	stp	xzr, xzr, [x8, #8]
  450510:	b	450648 <feof@plt+0x4d568>
  450514:	ldrb	w8, [x21, #1]
  450518:	cmp	w8, #0x77
  45051c:	b.eq	450528 <feof@plt+0x4d448>  // b.none
  450520:	cmp	w8, #0x61
  450524:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  450528:	str	xzr, [sp, #8]
  45052c:	ldr	x9, [x23]
  450530:	ldrb	w8, [x9]
  450534:	cmp	w8, #0x5f
  450538:	b.ne	4506d8 <feof@plt+0x4d5f8>  // b.any
  45053c:	ldp	w8, w10, [x19, #40]
  450540:	add	x9, x9, #0x1
  450544:	sxtw	x8, w8
  450548:	str	x9, [x19, #24]
  45054c:	cmp	w8, w10
  450550:	b.ge	450760 <feof@plt+0x4d680>  // b.tcont
  450554:	ldr	x9, [x19, #32]
  450558:	mov	w10, #0x18                  	// #24
  45055c:	add	w11, w8, #0x1
  450560:	madd	x21, x8, x10, x9
  450564:	str	wzr, [x21, #4]
  450568:	str	w11, [x19, #40]
  45056c:	cbz	x9, 450760 <feof@plt+0x4d680>
  450570:	mov	w11, #0x18                  	// #24
  450574:	mov	w10, #0x2e                  	// #46
  450578:	madd	x8, x8, x11, x9
  45057c:	str	w10, [x21]
  450580:	stp	xzr, xzr, [x8, #8]
  450584:	b	450770 <feof@plt+0x4d690>
  450588:	add	x21, sp, #0x8
  45058c:	mov	w24, #0x1                   	// #1
  450590:	mov	w25, #0x18                  	// #24
  450594:	mov	w26, #0x2e                  	// #46
  450598:	ldr	w27, [x19, #76]
  45059c:	mov	x0, x19
  4505a0:	str	w24, [x19, #76]
  4505a4:	bl	44f91c <feof@plt+0x4c83c>
  4505a8:	str	w27, [x19, #76]
  4505ac:	cbz	x0, 450610 <feof@plt+0x4d530>
  4505b0:	ldp	w8, w9, [x19, #40]
  4505b4:	sxtw	x8, w8
  4505b8:	cmp	w8, w9
  4505bc:	b.ge	450640 <feof@plt+0x4d560>  // b.tcont
  4505c0:	ldr	x10, [x19, #32]
  4505c4:	add	w11, w8, #0x1
  4505c8:	madd	x9, x8, x25, x10
  4505cc:	str	wzr, [x9, #4]
  4505d0:	str	w11, [x19, #40]
  4505d4:	cbz	x10, 450640 <feof@plt+0x4d560>
  4505d8:	madd	x10, x8, x25, x10
  4505dc:	str	w26, [x9]
  4505e0:	str	xzr, [x10, #16]!
  4505e4:	stur	x0, [x10, #-8]
  4505e8:	str	x9, [x21]
  4505ec:	ldr	x8, [x23]
  4505f0:	mov	x21, x10
  4505f4:	ldrb	w9, [x8]
  4505f8:	cmp	w9, #0x45
  4505fc:	b.ne	450598 <feof@plt+0x4d4b8>  // b.any
  450600:	add	x8, x8, #0x1
  450604:	str	x8, [x23]
  450608:	ldr	x23, [sp, #8]
  45060c:	b	450648 <feof@plt+0x4d568>
  450610:	mov	x23, xzr
  450614:	b	450648 <feof@plt+0x4d568>
  450618:	mov	w22, #0x1                   	// #1
  45061c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  450620:	add	x1, x1, #0x171
  450624:	mov	x0, x21
  450628:	bl	402ed0 <strcmp@plt>
  45062c:	cbnz	w0, 450050 <feof@plt+0x4cf70>
  450630:	mov	x0, x19
  450634:	bl	44f800 <feof@plt+0x4c720>
  450638:	cbnz	w22, 45005c <feof@plt+0x4cf7c>
  45063c:	b	450288 <feof@plt+0x4d1a8>
  450640:	mov	x23, xzr
  450644:	str	xzr, [x21]
  450648:	mov	x21, xzr
  45064c:	cbz	x22, 450838 <feof@plt+0x4d758>
  450650:	cbz	x23, 450838 <feof@plt+0x4d758>
  450654:	ldp	w9, w8, [x19, #40]
  450658:	sxtw	x9, w9
  45065c:	cmp	w9, w8
  450660:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  450664:	ldr	x10, [x19, #32]
  450668:	mov	w8, #0x18                  	// #24
  45066c:	add	w11, w9, #0x1
  450670:	madd	x8, x9, x8, x10
  450674:	str	wzr, [x8, #4]
  450678:	str	w11, [x19, #40]
  45067c:	cbz	x10, 450834 <feof@plt+0x4d754>
  450680:	mov	w12, #0x18                  	// #24
  450684:	mov	w11, #0x39                  	// #57
  450688:	madd	x9, x9, x12, x10
  45068c:	str	w11, [x8]
  450690:	stp	x22, x23, [x9, #8]
  450694:	ldp	w9, w10, [x19, #40]
  450698:	sxtw	x9, w9
  45069c:	cmp	w9, w10
  4506a0:	b.ge	450834 <feof@plt+0x4d754>  // b.tcont
  4506a4:	ldr	x10, [x19, #32]
  4506a8:	mov	w11, #0x18                  	// #24
  4506ac:	add	w12, w9, #0x1
  4506b0:	madd	x21, x9, x11, x10
  4506b4:	str	wzr, [x21, #4]
  4506b8:	str	w12, [x19, #40]
  4506bc:	cbz	x10, 450834 <feof@plt+0x4d754>
  4506c0:	mov	w11, #0x38                  	// #56
  4506c4:	mov	w12, #0x18                  	// #24
  4506c8:	madd	x9, x9, x12, x10
  4506cc:	str	w11, [x21]
  4506d0:	stp	x20, x8, [x9, #8]
  4506d4:	b	450838 <feof@plt+0x4d758>
  4506d8:	add	x22, sp, #0x8
  4506dc:	mov	w21, #0x1                   	// #1
  4506e0:	mov	w24, #0x18                  	// #24
  4506e4:	mov	w25, #0x2e                  	// #46
  4506e8:	ldr	w26, [x19, #76]
  4506ec:	mov	x0, x19
  4506f0:	str	w21, [x19, #76]
  4506f4:	bl	44f91c <feof@plt+0x4c83c>
  4506f8:	str	w26, [x19, #76]
  4506fc:	cbz	x0, 450760 <feof@plt+0x4d680>
  450700:	ldp	w8, w9, [x19, #40]
  450704:	sxtw	x8, w8
  450708:	cmp	w8, w9
  45070c:	b.ge	450768 <feof@plt+0x4d688>  // b.tcont
  450710:	ldr	x10, [x19, #32]
  450714:	add	w11, w8, #0x1
  450718:	madd	x9, x8, x24, x10
  45071c:	str	wzr, [x9, #4]
  450720:	str	w11, [x19, #40]
  450724:	cbz	x10, 450768 <feof@plt+0x4d688>
  450728:	madd	x10, x8, x24, x10
  45072c:	str	w25, [x9]
  450730:	str	xzr, [x10, #16]!
  450734:	stur	x0, [x10, #-8]
  450738:	str	x9, [x22]
  45073c:	ldr	x8, [x23]
  450740:	mov	x22, x10
  450744:	ldrb	w9, [x8]
  450748:	cmp	w9, #0x5f
  45074c:	b.ne	4506e8 <feof@plt+0x4d608>  // b.any
  450750:	add	x8, x8, #0x1
  450754:	str	x8, [x23]
  450758:	ldr	x21, [sp, #8]
  45075c:	b	450770 <feof@plt+0x4d690>
  450760:	mov	x21, xzr
  450764:	b	450770 <feof@plt+0x4d690>
  450768:	mov	x21, xzr
  45076c:	str	xzr, [x22]
  450770:	mov	x0, x19
  450774:	bl	44bed4 <feof@plt+0x48df4>
  450778:	ldr	x8, [x19, #24]
  45077c:	mov	x22, x0
  450780:	ldrb	w9, [x8]
  450784:	cmp	w9, #0x70
  450788:	b.eq	4507ac <feof@plt+0x4d6cc>  // b.none
  45078c:	cmp	w9, #0x69
  450790:	b.eq	45081c <feof@plt+0x4d73c>  // b.none
  450794:	cmp	w9, #0x45
  450798:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  45079c:	add	x8, x8, #0x1
  4507a0:	mov	x0, xzr
  4507a4:	str	x8, [x23]
  4507a8:	b	450314 <feof@plt+0x4d234>
  4507ac:	ldrb	w9, [x8, #1]
  4507b0:	cmp	w9, #0x69
  4507b4:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  4507b8:	add	x9, x8, #0x2
  4507bc:	str	x9, [x23]
  4507c0:	str	xzr, [sp, #8]
  4507c4:	ldrb	w9, [x8, #2]
  4507c8:	cmp	w9, #0x45
  4507cc:	b.ne	45085c <feof@plt+0x4d77c>  // b.any
  4507d0:	ldp	w9, w10, [x19, #40]
  4507d4:	add	x8, x8, #0x3
  4507d8:	sxtw	x9, w9
  4507dc:	str	x8, [x19, #24]
  4507e0:	cmp	w9, w10
  4507e4:	b.ge	4508e4 <feof@plt+0x4d804>  // b.tcont
  4507e8:	ldr	x8, [x19, #32]
  4507ec:	mov	w10, #0x18                  	// #24
  4507f0:	add	w11, w9, #0x1
  4507f4:	madd	x0, x9, x10, x8
  4507f8:	str	wzr, [x0, #4]
  4507fc:	str	w11, [x19, #40]
  450800:	cbz	x8, 4508e4 <feof@plt+0x4d804>
  450804:	mov	w11, #0x18                  	// #24
  450808:	mov	w10, #0x2e                  	// #46
  45080c:	madd	x8, x9, x11, x8
  450810:	str	w10, [x0]
  450814:	stp	xzr, xzr, [x8, #8]
  450818:	b	450314 <feof@plt+0x4d234>
  45081c:	ldrb	w8, [x8, #1]
  450820:	cmp	w8, #0x6c
  450824:	b.ne	450834 <feof@plt+0x4d754>  // b.any
  450828:	mov	x0, x19
  45082c:	bl	44f91c <feof@plt+0x4c83c>
  450830:	b	450314 <feof@plt+0x4d234>
  450834:	mov	x21, xzr
  450838:	mov	x0, x21
  45083c:	ldp	x20, x19, [sp, #96]
  450840:	ldp	x22, x21, [sp, #80]
  450844:	ldp	x24, x23, [sp, #64]
  450848:	ldp	x26, x25, [sp, #48]
  45084c:	ldp	x28, x27, [sp, #32]
  450850:	ldp	x29, x30, [sp, #16]
  450854:	add	sp, sp, #0x70
  450858:	ret
  45085c:	add	x24, sp, #0x8
  450860:	mov	w25, #0x1                   	// #1
  450864:	mov	w26, #0x18                  	// #24
  450868:	mov	w27, #0x2e                  	// #46
  45086c:	ldr	w28, [x19, #76]
  450870:	mov	x0, x19
  450874:	str	w25, [x19, #76]
  450878:	bl	44f91c <feof@plt+0x4c83c>
  45087c:	str	w28, [x19, #76]
  450880:	cbz	x0, 450314 <feof@plt+0x4d234>
  450884:	ldp	w8, w9, [x19, #40]
  450888:	sxtw	x8, w8
  45088c:	cmp	w8, w9
  450890:	b.ge	4508ec <feof@plt+0x4d80c>  // b.tcont
  450894:	ldr	x10, [x19, #32]
  450898:	add	w11, w8, #0x1
  45089c:	madd	x9, x8, x26, x10
  4508a0:	str	wzr, [x9, #4]
  4508a4:	str	w11, [x19, #40]
  4508a8:	cbz	x10, 4508ec <feof@plt+0x4d80c>
  4508ac:	madd	x10, x8, x26, x10
  4508b0:	str	w27, [x9]
  4508b4:	str	xzr, [x10, #16]!
  4508b8:	stur	x0, [x10, #-8]
  4508bc:	str	x9, [x24]
  4508c0:	ldr	x8, [x23]
  4508c4:	mov	x24, x10
  4508c8:	ldrb	w9, [x8]
  4508cc:	cmp	w9, #0x45
  4508d0:	b.ne	45086c <feof@plt+0x4d78c>  // b.any
  4508d4:	add	x8, x8, #0x1
  4508d8:	str	x8, [x23]
  4508dc:	ldr	x0, [sp, #8]
  4508e0:	b	450314 <feof@plt+0x4d234>
  4508e4:	mov	x0, xzr
  4508e8:	b	450314 <feof@plt+0x4d234>
  4508ec:	mov	x0, xzr
  4508f0:	str	xzr, [x24]
  4508f4:	b	450314 <feof@plt+0x4d234>
  4508f8:	stp	x29, x30, [sp, #-32]!
  4508fc:	stp	x20, x19, [sp, #16]
  450900:	mov	x29, sp
  450904:	cbz	x1, 4509bc <feof@plt+0x4d8dc>
  450908:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x11838>
  45090c:	mov	x20, x1
  450910:	mov	x19, x0
  450914:	add	x8, x8, #0x191
  450918:	b	450928 <feof@plt+0x4d848>
  45091c:	add	x9, x20, #0x10
  450920:	ldr	x20, [x9]
  450924:	cbz	x20, 4509bc <feof@plt+0x4d8dc>
  450928:	ldr	w9, [x20]
  45092c:	sub	w9, w9, #0x1
  450930:	cmp	w9, #0x4f
  450934:	b.hi	4509bc <feof@plt+0x4d8dc>  // b.pmore
  450938:	adr	x10, 45091c <feof@plt+0x4d83c>
  45093c:	ldrb	w11, [x8, x9]
  450940:	add	x10, x10, x11, lsl #2
  450944:	br	x10
  450948:	add	x9, x20, #0x8
  45094c:	ldr	x20, [x9]
  450950:	cbnz	x20, 450928 <feof@plt+0x4d848>
  450954:	b	4509bc <feof@plt+0x4d8dc>
  450958:	ldr	x8, [x20, #8]
  45095c:	ldr	w8, [x8]
  450960:	cmp	w8, #0x5
  450964:	b.ne	450984 <feof@plt+0x4d8a4>  // b.any
  450968:	ldr	w8, [x19, #348]
  45096c:	add	w8, w8, #0x1
  450970:	str	w8, [x19, #348]
  450974:	b	450984 <feof@plt+0x4d8a4>
  450978:	ldr	w8, [x19, #364]
  45097c:	add	w8, w8, #0x1
  450980:	str	w8, [x19, #364]
  450984:	ldr	w8, [x19, #308]
  450988:	cmp	w8, #0x800
  45098c:	b.gt	4509bc <feof@plt+0x4d8dc>
  450990:	add	w8, w8, #0x1
  450994:	str	w8, [x19, #308]
  450998:	ldr	x1, [x20, #8]
  45099c:	mov	x0, x19
  4509a0:	bl	4508f8 <feof@plt+0x4d818>
  4509a4:	ldr	x1, [x20, #16]
  4509a8:	mov	x0, x19
  4509ac:	bl	4508f8 <feof@plt+0x4d818>
  4509b0:	ldr	w8, [x19, #308]
  4509b4:	sub	w8, w8, #0x1
  4509b8:	str	w8, [x19, #308]
  4509bc:	ldp	x20, x19, [sp, #16]
  4509c0:	ldp	x29, x30, [sp], #32
  4509c4:	ret
  4509c8:	sub	sp, sp, #0x100
  4509cc:	stp	x26, x25, [sp, #192]
  4509d0:	add	x25, x0, #0x130
  4509d4:	stp	x29, x30, [sp, #160]
  4509d8:	stp	x28, x27, [sp, #176]
  4509dc:	stp	x24, x23, [sp, #208]
  4509e0:	stp	x22, x21, [sp, #224]
  4509e4:	stp	x20, x19, [sp, #240]
  4509e8:	add	x29, sp, #0xa0
  4509ec:	cbz	x2, 4530cc <feof@plt+0x4ffec>
  4509f0:	ldr	w8, [x25]
  4509f4:	cbnz	w8, 4530d4 <feof@plt+0x4fff4>
  4509f8:	ldr	w8, [x2]
  4509fc:	mov	x21, x2
  450a00:	cmp	w8, #0x50
  450a04:	b.hi	4530cc <feof@plt+0x4ffec>  // b.pmore
  450a08:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  450a0c:	add	x9, x9, #0x1e2
  450a10:	adr	x10, 450a30 <feof@plt+0x4d950>
  450a14:	ldrh	w11, [x9, x8, lsl #1]
  450a18:	add	x10, x10, x11, lsl #2
  450a1c:	mov	w20, w1
  450a20:	mov	x19, x0
  450a24:	mov	w23, wzr
  450a28:	mov	x22, xzr
  450a2c:	br	x10
  450a30:	ldr	x8, [x19, #296]
  450a34:	add	x9, sp, #0x10
  450a38:	stp	x8, x21, [sp, #16]
  450a3c:	str	x9, [x19, #296]
  450a40:	str	wzr, [sp, #32]
  450a44:	ldr	x8, [x19, #288]
  450a48:	str	x8, [sp, #40]
  450a4c:	cbnz	x22, 450a58 <feof@plt+0x4d978>
  450a50:	ldr	x22, [x21, #8]
  450a54:	cbz	x22, 450a70 <feof@plt+0x4d990>
  450a58:	ldr	w8, [x22, #4]
  450a5c:	cmp	w8, #0x1
  450a60:	b.gt	450a70 <feof@plt+0x4d990>
  450a64:	ldr	w9, [x19, #308]
  450a68:	cmp	w9, #0x401
  450a6c:	b.lt	450a9c <feof@plt+0x4d9bc>  // b.tstop
  450a70:	mov	w8, #0x1                   	// #1
  450a74:	str	w8, [x25]
  450a78:	mov	x0, x19
  450a7c:	mov	w1, w20
  450a80:	mov	x2, x21
  450a84:	bl	456c60 <feof@plt+0x53b80>
  450a88:	ldr	x8, [sp, #16]
  450a8c:	str	x8, [x19, #296]
  450a90:	cbz	w23, 4530d4 <feof@plt+0x4fff4>
  450a94:	str	x24, [x19, #288]
  450a98:	b	4530d4 <feof@plt+0x4fff4>
  450a9c:	add	w8, w8, #0x1
  450aa0:	str	w8, [x22, #4]
  450aa4:	ldr	x8, [x19, #328]
  450aa8:	add	w9, w9, #0x1
  450aac:	str	w9, [x19, #308]
  450ab0:	sub	x9, x29, #0x10
  450ab4:	mov	x0, x19
  450ab8:	mov	w1, w20
  450abc:	mov	x2, x22
  450ac0:	stp	x22, x8, [x29, #-16]
  450ac4:	str	x9, [x19, #328]
  450ac8:	bl	4509c8 <feof@plt+0x4d8e8>
  450acc:	ldur	x8, [x29, #-8]
  450ad0:	str	x8, [x19, #328]
  450ad4:	ldr	w8, [x22, #4]
  450ad8:	sub	w8, w8, #0x1
  450adc:	str	w8, [x22, #4]
  450ae0:	ldr	w8, [x19, #308]
  450ae4:	sub	w8, w8, #0x1
  450ae8:	str	w8, [x19, #308]
  450aec:	ldr	w8, [sp, #32]
  450af0:	cbnz	w8, 450a88 <feof@plt+0x4d9a8>
  450af4:	b	450a78 <feof@plt+0x4d998>
  450af8:	ldr	x9, [x19, #296]
  450afc:	cbnz	x9, 450b14 <feof@plt+0x4da34>
  450b00:	mov	w23, wzr
  450b04:	mov	x22, xzr
  450b08:	b	450a30 <feof@plt+0x4d950>
  450b0c:	ldr	x9, [x9]
  450b10:	cbz	x9, 450b00 <feof@plt+0x4da20>
  450b14:	ldr	w10, [x9, #16]
  450b18:	cbnz	w10, 450b0c <feof@plt+0x4da2c>
  450b1c:	ldr	x10, [x9, #8]
  450b20:	ldr	w10, [x10]
  450b24:	sub	w11, w10, #0x19
  450b28:	cmp	w11, #0x2
  450b2c:	b.hi	450b00 <feof@plt+0x4da20>  // b.pmore
  450b30:	cmp	w10, w8
  450b34:	b.ne	450b0c <feof@plt+0x4da2c>  // b.any
  450b38:	b	4530ac <feof@plt+0x4ffcc>
  450b3c:	ldr	x22, [x21, #8]
  450b40:	cbz	x22, 450b5c <feof@plt+0x4da7c>
  450b44:	ldr	w8, [x22, #4]
  450b48:	cmp	w8, #0x1
  450b4c:	b.gt	450b5c <feof@plt+0x4da7c>
  450b50:	ldr	w9, [x19, #308]
  450b54:	cmp	w9, #0x401
  450b58:	b.lt	453f60 <feof@plt+0x50e80>  // b.tstop
  450b5c:	mov	w8, #0x1                   	// #1
  450b60:	str	w8, [x25]
  450b64:	tbnz	w20, #2, 453fb4 <feof@plt+0x50ed4>
  450b68:	ldr	x8, [x19, #256]
  450b6c:	cmp	x8, #0xff
  450b70:	b.ne	450b9c <feof@plt+0x4dabc>  // b.any
  450b74:	ldp	x8, x2, [x19, #272]
  450b78:	mov	w1, #0xff                  	// #255
  450b7c:	mov	x0, x19
  450b80:	strb	wzr, [x19, #255]
  450b84:	blr	x8
  450b88:	ldr	x9, [x19, #320]
  450b8c:	mov	x8, xzr
  450b90:	str	xzr, [x19, #256]
  450b94:	add	x9, x9, #0x1
  450b98:	str	x9, [x19, #320]
  450b9c:	add	x9, x8, #0x1
  450ba0:	mov	w22, #0x3a                  	// #58
  450ba4:	str	x9, [x19, #256]
  450ba8:	strb	w22, [x19, x8]
  450bac:	ldr	x8, [x19, #256]
  450bb0:	strb	w22, [x19, #264]
  450bb4:	cmp	x8, #0xff
  450bb8:	b.ne	450be4 <feof@plt+0x4db04>  // b.any
  450bbc:	ldp	x8, x2, [x19, #272]
  450bc0:	mov	w1, #0xff                  	// #255
  450bc4:	mov	x0, x19
  450bc8:	strb	wzr, [x19, #255]
  450bcc:	blr	x8
  450bd0:	ldr	x9, [x19, #320]
  450bd4:	mov	x8, xzr
  450bd8:	str	xzr, [x19, #256]
  450bdc:	add	x9, x9, #0x1
  450be0:	str	x9, [x19, #320]
  450be4:	add	x9, x8, #0x1
  450be8:	str	x9, [x19, #256]
  450bec:	strb	w22, [x19, x8]
  450bf0:	strb	w22, [x19, #264]
  450bf4:	b	453ffc <feof@plt+0x50f1c>
  450bf8:	ldr	w10, [x19, #312]
  450bfc:	ldr	x9, [x21, #8]
  450c00:	cbnz	w10, 450e60 <feof@plt+0x4dd80>
  450c04:	ldr	w10, [x9]
  450c08:	cmp	w10, #0x5
  450c0c:	b.ne	450e60 <feof@plt+0x4dd80>  // b.any
  450c10:	ldr	w11, [x19, #344]
  450c14:	cmp	w11, #0x1
  450c18:	b.lt	450c40 <feof@plt+0x4db60>  // b.tstop
  450c1c:	ldr	x10, [x19, #336]
  450c20:	mov	x12, x11
  450c24:	add	x10, x10, #0x8
  450c28:	ldur	x13, [x10, #-8]
  450c2c:	cmp	x13, x9
  450c30:	b.eq	454b78 <feof@plt+0x51a98>  // b.none
  450c34:	subs	x12, x12, #0x1
  450c38:	add	x10, x10, #0x10
  450c3c:	b.ne	450c28 <feof@plt+0x4db48>  // b.any
  450c40:	ldr	w10, [x19, #348]
  450c44:	cmp	w11, w10
  450c48:	b.ge	4530cc <feof@plt+0x4ffec>  // b.tcont
  450c4c:	ldr	x10, [x19, #336]
  450c50:	sxtw	x11, w11
  450c54:	add	w12, w11, #0x1
  450c58:	str	w12, [x19, #344]
  450c5c:	add	x10, x10, x11, lsl #4
  450c60:	str	x9, [x10], #8
  450c64:	ldr	x11, [x19, #288]
  450c68:	cbz	x11, 450cbc <feof@plt+0x4dbdc>
  450c6c:	ldrsw	x12, [x19, #360]
  450c70:	ldrsw	x13, [x19, #364]
  450c74:	lsl	x14, x12, #4
  450c78:	add	w15, w12, #0x1
  450c7c:	cmp	x12, x13
  450c80:	b.ge	4530cc <feof@plt+0x4ffec>  // b.tcont
  450c84:	ldr	x16, [x19, #352]
  450c88:	str	w15, [x19, #360]
  450c8c:	ldr	x17, [x11, #8]
  450c90:	add	x12, x12, #0x1
  450c94:	add	x18, x16, x14
  450c98:	add	x14, x14, #0x10
  450c9c:	str	x17, [x18, #8]
  450ca0:	str	x18, [x10]
  450ca4:	ldr	x11, [x11]
  450ca8:	add	w15, w15, #0x1
  450cac:	mov	x10, x18
  450cb0:	cbnz	x11, 450c7c <feof@plt+0x4db9c>
  450cb4:	add	x10, x16, x14
  450cb8:	sub	x10, x10, #0x10
  450cbc:	mov	w23, wzr
  450cc0:	str	xzr, [x10]
  450cc4:	b	454fd8 <feof@plt+0x51ef8>
  450cc8:	ldr	x8, [x19, #296]
  450ccc:	add	x9, sp, #0x10
  450cd0:	stp	x8, x21, [sp, #16]
  450cd4:	str	x9, [x19, #296]
  450cd8:	str	wzr, [sp, #32]
  450cdc:	ldr	x8, [x19, #288]
  450ce0:	str	x8, [sp, #40]
  450ce4:	ldr	x22, [x21, #16]
  450ce8:	cbz	x22, 450d04 <feof@plt+0x4dc24>
  450cec:	ldr	w8, [x22, #4]
  450cf0:	cmp	w8, #0x1
  450cf4:	b.gt	450d04 <feof@plt+0x4dc24>
  450cf8:	ldr	w9, [x19, #308]
  450cfc:	cmp	w9, #0x401
  450d00:	b.lt	4541dc <feof@plt+0x510fc>  // b.tstop
  450d04:	mov	w8, #0x1                   	// #1
  450d08:	str	w8, [x25]
  450d0c:	mov	x0, x19
  450d10:	mov	w1, w20
  450d14:	mov	x2, x21
  450d18:	bl	456c60 <feof@plt+0x53b80>
  450d1c:	ldr	x8, [sp, #16]
  450d20:	str	x8, [x19, #296]
  450d24:	b	4530d4 <feof@plt+0x4fff4>
  450d28:	ldr	x22, [x21, #8]
  450d2c:	cbz	x22, 454288 <feof@plt+0x511a8>
  450d30:	ldr	w8, [x22, #4]
  450d34:	cmp	w8, #0x1
  450d38:	b.gt	450d48 <feof@plt+0x4dc68>
  450d3c:	ldr	w9, [x19, #308]
  450d40:	cmp	w9, #0x401
  450d44:	b.lt	454238 <feof@plt+0x51158>  // b.tstop
  450d48:	mov	w8, #0x1                   	// #1
  450d4c:	str	w8, [x25]
  450d50:	b	454288 <feof@plt+0x511a8>
  450d54:	ldr	x9, [x21, #8]
  450d58:	ldr	w10, [x9]
  450d5c:	cmp	w10, #0x27
  450d60:	b.ne	452c00 <feof@plt+0x4fb20>  // b.any
  450d64:	ldr	x9, [x9, #8]
  450d68:	ldr	w23, [x9, #28]
  450d6c:	sub	w9, w23, #0x1
  450d70:	cmp	w9, #0x6
  450d74:	b.cs	4544a0 <feof@plt+0x513c0>  // b.hs, b.nlast
  450d78:	ldr	x22, [x21, #16]
  450d7c:	ldr	w9, [x22]
  450d80:	cbnz	w9, 452c04 <feof@plt+0x4fb24>
  450d84:	cmp	w8, #0x3e
  450d88:	b.ne	450dd8 <feof@plt+0x4dcf8>  // b.any
  450d8c:	ldr	x8, [x19, #256]
  450d90:	cmp	x8, #0xff
  450d94:	b.ne	450dc0 <feof@plt+0x4dce0>  // b.any
  450d98:	ldp	x8, x2, [x19, #272]
  450d9c:	mov	w1, #0xff                  	// #255
  450da0:	mov	x0, x19
  450da4:	strb	wzr, [x19, #255]
  450da8:	blr	x8
  450dac:	ldr	x9, [x19, #320]
  450db0:	mov	x8, xzr
  450db4:	str	xzr, [x19, #256]
  450db8:	add	x9, x9, #0x1
  450dbc:	str	x9, [x19, #320]
  450dc0:	add	x9, x8, #0x1
  450dc4:	mov	w10, #0x2d                  	// #45
  450dc8:	str	x9, [x19, #256]
  450dcc:	strb	w10, [x19, x8]
  450dd0:	strb	w10, [x19, #264]
  450dd4:	ldr	x22, [x21, #16]
  450dd8:	cbz	x22, 450df4 <feof@plt+0x4dd14>
  450ddc:	ldr	w8, [x22, #4]
  450de0:	cmp	w8, #0x1
  450de4:	b.gt	450df4 <feof@plt+0x4dd14>
  450de8:	ldr	w9, [x19, #308]
  450dec:	cmp	w9, #0x401
  450df0:	b.lt	4554c4 <feof@plt+0x523e4>  // b.tstop
  450df4:	mov	w8, #0x1                   	// #1
  450df8:	str	w8, [x25]
  450dfc:	sub	w8, w23, #0x2
  450e00:	cmp	w8, #0x4
  450e04:	b.hi	4530d4 <feof@plt+0x4fff4>  // b.pmore
  450e08:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  450e0c:	add	x9, x9, #0x284
  450e10:	adr	x10, 450e20 <feof@plt+0x4dd40>
  450e14:	ldrh	w11, [x9, x8, lsl #1]
  450e18:	add	x10, x10, x11, lsl #2
  450e1c:	br	x10
  450e20:	ldr	x8, [x19, #256]
  450e24:	cmp	x8, #0xff
  450e28:	b.ne	450e54 <feof@plt+0x4dd74>  // b.any
  450e2c:	ldp	x8, x2, [x19, #272]
  450e30:	mov	w1, #0xff                  	// #255
  450e34:	mov	x0, x19
  450e38:	strb	wzr, [x19, #255]
  450e3c:	blr	x8
  450e40:	ldr	x9, [x19, #320]
  450e44:	mov	x8, xzr
  450e48:	str	xzr, [x19, #256]
  450e4c:	add	x9, x9, #0x1
  450e50:	str	x9, [x19, #320]
  450e54:	add	x9, x8, #0x1
  450e58:	mov	w10, #0x75                  	// #117
  450e5c:	b	4559c8 <feof@plt+0x528e8>
  450e60:	mov	w23, wzr
  450e64:	ldr	w10, [x9]
  450e68:	mov	x22, xzr
  450e6c:	cmp	w10, #0x23
  450e70:	b.eq	4535d8 <feof@plt+0x504f8>  // b.none
  450e74:	cmp	w10, w8
  450e78:	b.eq	4535d8 <feof@plt+0x504f8>  // b.none
  450e7c:	cmp	w10, #0x24
  450e80:	b.ne	453a3c <feof@plt+0x5095c>  // b.any
  450e84:	ldr	x22, [x9, #8]
  450e88:	b	450a30 <feof@plt+0x4d950>
  450e8c:	ldr	x22, [x21, #8]
  450e90:	ldrsw	x21, [x21, #16]
  450e94:	tbnz	w20, #2, 4535e0 <feof@plt+0x50500>
  450e98:	cbnz	w21, 450ebc <feof@plt+0x4dddc>
  450e9c:	b	4530d4 <feof@plt+0x4fff4>
  450ea0:	add	x9, x8, #0x1
  450ea4:	subs	x21, x21, #0x1
  450ea8:	add	x22, x22, #0x1
  450eac:	str	x9, [x19, #256]
  450eb0:	strb	w20, [x19, x8]
  450eb4:	strb	w20, [x19, #264]
  450eb8:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  450ebc:	ldr	x8, [x19, #256]
  450ec0:	ldrb	w20, [x22]
  450ec4:	cmp	x8, #0xff
  450ec8:	b.ne	450ea0 <feof@plt+0x4ddc0>  // b.any
  450ecc:	ldp	x8, x2, [x19, #272]
  450ed0:	mov	w1, #0xff                  	// #255
  450ed4:	mov	x0, x19
  450ed8:	strb	wzr, [x19, #255]
  450edc:	blr	x8
  450ee0:	ldr	x9, [x19, #320]
  450ee4:	mov	x8, xzr
  450ee8:	str	xzr, [x19, #256]
  450eec:	add	x9, x9, #0x1
  450ef0:	str	x9, [x19, #320]
  450ef4:	b	450ea0 <feof@plt+0x4ddc0>
  450ef8:	ldr	x22, [x19, #296]
  450efc:	str	xzr, [x19, #296]
  450f00:	ldr	x24, [x21, #8]
  450f04:	cbz	x24, 4530cc <feof@plt+0x4ffec>
  450f08:	ldr	x8, [x19, #288]
  450f0c:	adrp	x10, 473000 <_obstack_memory_used@@Base+0x11838>
  450f10:	mov	x11, xzr
  450f14:	add	x9, sp, #0x10
  450f18:	mov	w23, #0x1                   	// #1
  450f1c:	add	x10, x10, #0x28e
  450f20:	cmp	x23, #0x5
  450f24:	b.eq	4530cc <feof@plt+0x4ffec>  // b.none
  450f28:	str	x11, [x9]
  450f2c:	str	x9, [x19, #296]
  450f30:	str	x24, [x9, #8]
  450f34:	str	wzr, [x9, #16]
  450f38:	str	x8, [x9, #24]
  450f3c:	ldr	w12, [x24]
  450f40:	sub	w11, w12, #0x2
  450f44:	cmp	w11, #0x4e
  450f48:	b.hi	454c2c <feof@plt+0x51b4c>  // b.pmore
  450f4c:	adr	x13, 450f5c <feof@plt+0x4de7c>
  450f50:	ldrh	w14, [x10, x11, lsl #1]
  450f54:	add	x13, x13, x14, lsl #2
  450f58:	br	x13
  450f5c:	ldr	x24, [x24, #8]
  450f60:	mov	x11, x9
  450f64:	add	x23, x23, #0x1
  450f68:	add	x9, x9, #0x20
  450f6c:	cbnz	x24, 450f20 <feof@plt+0x4de40>
  450f70:	b	4530cc <feof@plt+0x4ffec>
  450f74:	ldr	x23, [x19, #368]
  450f78:	str	x21, [x19, #368]
  450f7c:	ldr	x24, [x19, #296]
  450f80:	str	xzr, [x19, #296]
  450f84:	ldr	x22, [x21, #8]
  450f88:	tbnz	w20, #2, 453738 <feof@plt+0x50658>
  450f8c:	cbnz	x22, 453764 <feof@plt+0x50684>
  450f90:	b	45377c <feof@plt+0x5069c>
  450f94:	ldr	w8, [x19, #312]
  450f98:	cbz	w8, 453a44 <feof@plt+0x50964>
  450f9c:	ldr	x8, [x19, #256]
  450fa0:	cmp	x8, #0xff
  450fa4:	b.ne	450fd0 <feof@plt+0x4def0>  // b.any
  450fa8:	ldp	x8, x2, [x19, #272]
  450fac:	mov	w1, #0xff                  	// #255
  450fb0:	mov	x0, x19
  450fb4:	strb	wzr, [x19, #255]
  450fb8:	blr	x8
  450fbc:	ldr	x9, [x19, #320]
  450fc0:	mov	x8, xzr
  450fc4:	str	xzr, [x19, #256]
  450fc8:	add	x9, x9, #0x1
  450fcc:	str	x9, [x19, #320]
  450fd0:	add	x9, x8, #0x1
  450fd4:	mov	w10, #0x61                  	// #97
  450fd8:	str	x9, [x19, #256]
  450fdc:	strb	w10, [x19, x8]
  450fe0:	ldr	x8, [x19, #256]
  450fe4:	strb	w10, [x19, #264]
  450fe8:	cmp	x8, #0xff
  450fec:	b.ne	451018 <feof@plt+0x4df38>  // b.any
  450ff0:	ldp	x8, x2, [x19, #272]
  450ff4:	mov	w1, #0xff                  	// #255
  450ff8:	mov	x0, x19
  450ffc:	strb	wzr, [x19, #255]
  451000:	blr	x8
  451004:	ldr	x9, [x19, #320]
  451008:	mov	x8, xzr
  45100c:	str	xzr, [x19, #256]
  451010:	add	x9, x9, #0x1
  451014:	str	x9, [x19, #320]
  451018:	add	x9, x8, #0x1
  45101c:	mov	w10, #0x75                  	// #117
  451020:	str	x9, [x19, #256]
  451024:	strb	w10, [x19, x8]
  451028:	ldr	x8, [x19, #256]
  45102c:	strb	w10, [x19, #264]
  451030:	cmp	x8, #0xff
  451034:	b.ne	451060 <feof@plt+0x4df80>  // b.any
  451038:	ldp	x8, x2, [x19, #272]
  45103c:	mov	w1, #0xff                  	// #255
  451040:	mov	x0, x19
  451044:	strb	wzr, [x19, #255]
  451048:	blr	x8
  45104c:	ldr	x9, [x19, #320]
  451050:	mov	x8, xzr
  451054:	str	xzr, [x19, #256]
  451058:	add	x9, x9, #0x1
  45105c:	str	x9, [x19, #320]
  451060:	add	x9, x8, #0x1
  451064:	mov	w10, #0x74                  	// #116
  451068:	str	x9, [x19, #256]
  45106c:	strb	w10, [x19, x8]
  451070:	ldr	x8, [x19, #256]
  451074:	strb	w10, [x19, #264]
  451078:	cmp	x8, #0xff
  45107c:	b.ne	4510a8 <feof@plt+0x4dfc8>  // b.any
  451080:	ldp	x8, x2, [x19, #272]
  451084:	mov	w1, #0xff                  	// #255
  451088:	mov	x0, x19
  45108c:	strb	wzr, [x19, #255]
  451090:	blr	x8
  451094:	ldr	x9, [x19, #320]
  451098:	mov	x8, xzr
  45109c:	str	xzr, [x19, #256]
  4510a0:	add	x9, x9, #0x1
  4510a4:	str	x9, [x19, #320]
  4510a8:	add	x9, x8, #0x1
  4510ac:	mov	w10, #0x6f                  	// #111
  4510b0:	str	x9, [x19, #256]
  4510b4:	strb	w10, [x19, x8]
  4510b8:	ldr	x8, [x19, #256]
  4510bc:	strb	w10, [x19, #264]
  4510c0:	cmp	x8, #0xff
  4510c4:	b.ne	4510f0 <feof@plt+0x4e010>  // b.any
  4510c8:	ldp	x8, x2, [x19, #272]
  4510cc:	mov	w1, #0xff                  	// #255
  4510d0:	mov	x0, x19
  4510d4:	strb	wzr, [x19, #255]
  4510d8:	blr	x8
  4510dc:	ldr	x9, [x19, #320]
  4510e0:	mov	x8, xzr
  4510e4:	str	xzr, [x19, #256]
  4510e8:	add	x9, x9, #0x1
  4510ec:	str	x9, [x19, #320]
  4510f0:	add	x9, x8, #0x1
  4510f4:	mov	w10, #0x3a                  	// #58
  4510f8:	str	x9, [x19, #256]
  4510fc:	strb	w10, [x19, x8]
  451100:	strb	w10, [x19, #264]
  451104:	ldr	w8, [x21, #8]
  451108:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  45110c:	add	x1, x1, #0x229
  451110:	add	x0, sp, #0x10
  451114:	add	w2, w8, #0x1
  451118:	bl	402c30 <sprintf@plt>
  45111c:	add	x0, sp, #0x10
  451120:	bl	402a50 <strlen@plt>
  451124:	cbz	x0, 4530d4 <feof@plt+0x4fff4>
  451128:	mov	x20, x0
  45112c:	add	x21, sp, #0x10
  451130:	b	451150 <feof@plt+0x4e070>
  451134:	add	x9, x8, #0x1
  451138:	subs	x20, x20, #0x1
  45113c:	add	x21, x21, #0x1
  451140:	str	x9, [x19, #256]
  451144:	strb	w22, [x19, x8]
  451148:	strb	w22, [x19, #264]
  45114c:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  451150:	ldr	x8, [x19, #256]
  451154:	ldrb	w22, [x21]
  451158:	cmp	x8, #0xff
  45115c:	b.ne	451134 <feof@plt+0x4e054>  // b.any
  451160:	ldp	x8, x2, [x19, #272]
  451164:	mov	w1, #0xff                  	// #255
  451168:	mov	x0, x19
  45116c:	strb	wzr, [x19, #255]
  451170:	blr	x8
  451174:	ldr	x9, [x19, #320]
  451178:	mov	x8, xzr
  45117c:	str	xzr, [x19, #256]
  451180:	add	x9, x9, #0x1
  451184:	str	x9, [x19, #320]
  451188:	b	451134 <feof@plt+0x4e054>
  45118c:	ldr	x8, [x19, #256]
  451190:	ldr	x20, [x21, #8]
  451194:	cmp	x8, #0xff
  451198:	cbz	x20, 453a84 <feof@plt+0x509a4>
  45119c:	b.ne	4511c8 <feof@plt+0x4e0e8>  // b.any
  4511a0:	ldp	x8, x2, [x19, #272]
  4511a4:	mov	w1, #0xff                  	// #255
  4511a8:	mov	x0, x19
  4511ac:	strb	wzr, [x19, #255]
  4511b0:	blr	x8
  4511b4:	ldr	x9, [x19, #320]
  4511b8:	mov	x8, xzr
  4511bc:	str	xzr, [x19, #256]
  4511c0:	add	x9, x9, #0x1
  4511c4:	str	x9, [x19, #320]
  4511c8:	add	x9, x8, #0x1
  4511cc:	mov	w10, #0x7b                  	// #123
  4511d0:	str	x9, [x19, #256]
  4511d4:	strb	w10, [x19, x8]
  4511d8:	ldr	x8, [x19, #256]
  4511dc:	strb	w10, [x19, #264]
  4511e0:	cmp	x8, #0xff
  4511e4:	b.ne	451210 <feof@plt+0x4e130>  // b.any
  4511e8:	ldp	x8, x2, [x19, #272]
  4511ec:	mov	w1, #0xff                  	// #255
  4511f0:	mov	x0, x19
  4511f4:	strb	wzr, [x19, #255]
  4511f8:	blr	x8
  4511fc:	ldr	x9, [x19, #320]
  451200:	mov	x8, xzr
  451204:	str	xzr, [x19, #256]
  451208:	add	x9, x9, #0x1
  45120c:	str	x9, [x19, #320]
  451210:	add	x9, x8, #0x1
  451214:	mov	w10, #0x70                  	// #112
  451218:	str	x9, [x19, #256]
  45121c:	strb	w10, [x19, x8]
  451220:	ldr	x8, [x19, #256]
  451224:	strb	w10, [x19, #264]
  451228:	cmp	x8, #0xff
  45122c:	b.ne	451258 <feof@plt+0x4e178>  // b.any
  451230:	ldp	x8, x2, [x19, #272]
  451234:	mov	w1, #0xff                  	// #255
  451238:	mov	x0, x19
  45123c:	strb	wzr, [x19, #255]
  451240:	blr	x8
  451244:	ldr	x9, [x19, #320]
  451248:	mov	x8, xzr
  45124c:	str	xzr, [x19, #256]
  451250:	add	x9, x9, #0x1
  451254:	str	x9, [x19, #320]
  451258:	add	x9, x8, #0x1
  45125c:	mov	w10, #0x61                  	// #97
  451260:	str	x9, [x19, #256]
  451264:	strb	w10, [x19, x8]
  451268:	ldr	x8, [x19, #256]
  45126c:	strb	w10, [x19, #264]
  451270:	cmp	x8, #0xff
  451274:	b.ne	4512a0 <feof@plt+0x4e1c0>  // b.any
  451278:	ldp	x8, x2, [x19, #272]
  45127c:	mov	w1, #0xff                  	// #255
  451280:	mov	x0, x19
  451284:	strb	wzr, [x19, #255]
  451288:	blr	x8
  45128c:	ldr	x9, [x19, #320]
  451290:	mov	x8, xzr
  451294:	str	xzr, [x19, #256]
  451298:	add	x9, x9, #0x1
  45129c:	str	x9, [x19, #320]
  4512a0:	add	x9, x8, #0x1
  4512a4:	mov	w10, #0x72                  	// #114
  4512a8:	str	x9, [x19, #256]
  4512ac:	strb	w10, [x19, x8]
  4512b0:	ldr	x8, [x19, #256]
  4512b4:	strb	w10, [x19, #264]
  4512b8:	cmp	x8, #0xff
  4512bc:	b.ne	4512e8 <feof@plt+0x4e208>  // b.any
  4512c0:	ldp	x8, x2, [x19, #272]
  4512c4:	mov	w1, #0xff                  	// #255
  4512c8:	mov	x0, x19
  4512cc:	strb	wzr, [x19, #255]
  4512d0:	blr	x8
  4512d4:	ldr	x9, [x19, #320]
  4512d8:	mov	x8, xzr
  4512dc:	str	xzr, [x19, #256]
  4512e0:	add	x9, x9, #0x1
  4512e4:	str	x9, [x19, #320]
  4512e8:	add	x9, x8, #0x1
  4512ec:	mov	w10, #0x6d                  	// #109
  4512f0:	str	x9, [x19, #256]
  4512f4:	strb	w10, [x19, x8]
  4512f8:	ldr	x8, [x19, #256]
  4512fc:	strb	w10, [x19, #264]
  451300:	cmp	x8, #0xff
  451304:	b.ne	451330 <feof@plt+0x4e250>  // b.any
  451308:	ldp	x8, x2, [x19, #272]
  45130c:	mov	w1, #0xff                  	// #255
  451310:	mov	x0, x19
  451314:	strb	wzr, [x19, #255]
  451318:	blr	x8
  45131c:	ldr	x9, [x19, #320]
  451320:	mov	x8, xzr
  451324:	str	xzr, [x19, #256]
  451328:	add	x9, x9, #0x1
  45132c:	str	x9, [x19, #320]
  451330:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  451334:	add	x9, x8, #0x1
  451338:	mov	w10, #0x23                  	// #35
  45133c:	add	x1, x1, #0x229
  451340:	add	x0, sp, #0x10
  451344:	mov	w2, w20
  451348:	str	x9, [x19, #256]
  45134c:	strb	w10, [x19, x8]
  451350:	strb	w10, [x19, #264]
  451354:	bl	402c30 <sprintf@plt>
  451358:	add	x0, sp, #0x10
  45135c:	bl	402a50 <strlen@plt>
  451360:	cbz	x0, 4547d8 <feof@plt+0x516f8>
  451364:	mov	x20, x0
  451368:	add	x21, sp, #0x10
  45136c:	b	45138c <feof@plt+0x4e2ac>
  451370:	add	x9, x8, #0x1
  451374:	subs	x20, x20, #0x1
  451378:	add	x21, x21, #0x1
  45137c:	str	x9, [x19, #256]
  451380:	strb	w22, [x19, x8]
  451384:	strb	w22, [x19, #264]
  451388:	b.eq	4547d8 <feof@plt+0x516f8>  // b.none
  45138c:	ldr	x8, [x19, #256]
  451390:	ldrb	w22, [x21]
  451394:	cmp	x8, #0xff
  451398:	b.ne	451370 <feof@plt+0x4e290>  // b.any
  45139c:	ldp	x8, x2, [x19, #272]
  4513a0:	mov	w1, #0xff                  	// #255
  4513a4:	mov	x0, x19
  4513a8:	strb	wzr, [x19, #255]
  4513ac:	blr	x8
  4513b0:	ldr	x9, [x19, #320]
  4513b4:	mov	x8, xzr
  4513b8:	str	xzr, [x19, #256]
  4513bc:	add	x9, x9, #0x1
  4513c0:	str	x9, [x19, #320]
  4513c4:	b	451370 <feof@plt+0x4e290>
  4513c8:	ldr	x8, [x19, #256]
  4513cc:	cmp	x8, #0xff
  4513d0:	b.ne	4513fc <feof@plt+0x4e31c>  // b.any
  4513d4:	ldp	x8, x2, [x19, #272]
  4513d8:	mov	w1, #0xff                  	// #255
  4513dc:	mov	x0, x19
  4513e0:	strb	wzr, [x19, #255]
  4513e4:	blr	x8
  4513e8:	ldr	x9, [x19, #320]
  4513ec:	mov	x8, xzr
  4513f0:	str	xzr, [x19, #256]
  4513f4:	add	x9, x9, #0x1
  4513f8:	str	x9, [x19, #320]
  4513fc:	add	x9, x8, #0x1
  451400:	mov	w10, #0x7e                  	// #126
  451404:	b	452f04 <feof@plt+0x4fe24>
  451408:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45140c:	mov	x22, xzr
  451410:	add	x23, x23, #0x45a
  451414:	b	451434 <feof@plt+0x4e354>
  451418:	add	x22, x22, #0x1
  45141c:	add	x9, x8, #0x1
  451420:	cmp	x22, #0xb
  451424:	str	x9, [x19, #256]
  451428:	strb	w24, [x19, x8]
  45142c:	strb	w24, [x19, #264]
  451430:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  451434:	ldr	x8, [x19, #256]
  451438:	ldrb	w24, [x23, x22]
  45143c:	cmp	x8, #0xff
  451440:	b.ne	451418 <feof@plt+0x4e338>  // b.any
  451444:	ldp	x8, x2, [x19, #272]
  451448:	mov	w1, #0xff                  	// #255
  45144c:	mov	x0, x19
  451450:	strb	wzr, [x19, #255]
  451454:	blr	x8
  451458:	ldr	x9, [x19, #320]
  45145c:	mov	x8, xzr
  451460:	str	xzr, [x19, #256]
  451464:	add	x9, x9, #0x1
  451468:	str	x9, [x19, #320]
  45146c:	b	451418 <feof@plt+0x4e338>
  451470:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  451474:	mov	x22, xzr
  451478:	add	x23, x23, #0x444
  45147c:	b	45149c <feof@plt+0x4e3bc>
  451480:	add	x22, x22, #0x1
  451484:	add	x9, x8, #0x1
  451488:	cmp	x22, #0x8
  45148c:	str	x9, [x19, #256]
  451490:	strb	w24, [x19, x8]
  451494:	strb	w24, [x19, #264]
  451498:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  45149c:	ldr	x8, [x19, #256]
  4514a0:	ldrb	w24, [x23, x22]
  4514a4:	cmp	x8, #0xff
  4514a8:	b.ne	451480 <feof@plt+0x4e3a0>  // b.any
  4514ac:	ldp	x8, x2, [x19, #272]
  4514b0:	mov	w1, #0xff                  	// #255
  4514b4:	mov	x0, x19
  4514b8:	strb	wzr, [x19, #255]
  4514bc:	blr	x8
  4514c0:	ldr	x9, [x19, #320]
  4514c4:	mov	x8, xzr
  4514c8:	str	xzr, [x19, #256]
  4514cc:	add	x9, x9, #0x1
  4514d0:	str	x9, [x19, #320]
  4514d4:	b	451480 <feof@plt+0x4e3a0>
  4514d8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4514dc:	mov	x22, xzr
  4514e0:	add	x23, x23, #0x44d
  4514e4:	b	451504 <feof@plt+0x4e424>
  4514e8:	add	x22, x22, #0x1
  4514ec:	add	x9, x8, #0x1
  4514f0:	cmp	x22, #0x18
  4514f4:	str	x9, [x19, #256]
  4514f8:	strb	w24, [x19, x8]
  4514fc:	strb	w24, [x19, #264]
  451500:	b.eq	452dc8 <feof@plt+0x4fce8>  // b.none
  451504:	ldr	x8, [x19, #256]
  451508:	ldrb	w24, [x23, x22]
  45150c:	cmp	x8, #0xff
  451510:	b.ne	4514e8 <feof@plt+0x4e408>  // b.any
  451514:	ldp	x8, x2, [x19, #272]
  451518:	mov	w1, #0xff                  	// #255
  45151c:	mov	x0, x19
  451520:	strb	wzr, [x19, #255]
  451524:	blr	x8
  451528:	ldr	x9, [x19, #320]
  45152c:	mov	x8, xzr
  451530:	str	xzr, [x19, #256]
  451534:	add	x9, x9, #0x1
  451538:	str	x9, [x19, #320]
  45153c:	b	4514e8 <feof@plt+0x4e408>
  451540:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  451544:	mov	x22, xzr
  451548:	add	x23, x23, #0x466
  45154c:	b	45156c <feof@plt+0x4e48c>
  451550:	add	x22, x22, #0x1
  451554:	add	x9, x8, #0x1
  451558:	cmp	x22, #0xd
  45155c:	str	x9, [x19, #256]
  451560:	strb	w24, [x19, x8]
  451564:	strb	w24, [x19, #264]
  451568:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  45156c:	ldr	x8, [x19, #256]
  451570:	ldrb	w24, [x23, x22]
  451574:	cmp	x8, #0xff
  451578:	b.ne	451550 <feof@plt+0x4e470>  // b.any
  45157c:	ldp	x8, x2, [x19, #272]
  451580:	mov	w1, #0xff                  	// #255
  451584:	mov	x0, x19
  451588:	strb	wzr, [x19, #255]
  45158c:	blr	x8
  451590:	ldr	x9, [x19, #320]
  451594:	mov	x8, xzr
  451598:	str	xzr, [x19, #256]
  45159c:	add	x9, x9, #0x1
  4515a0:	str	x9, [x19, #320]
  4515a4:	b	451550 <feof@plt+0x4e470>
  4515a8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4515ac:	mov	x22, xzr
  4515b0:	add	x23, x23, #0x474
  4515b4:	b	4515d4 <feof@plt+0x4e4f4>
  4515b8:	add	x22, x22, #0x1
  4515bc:	add	x9, x8, #0x1
  4515c0:	cmp	x22, #0x12
  4515c4:	str	x9, [x19, #256]
  4515c8:	strb	w24, [x19, x8]
  4515cc:	strb	w24, [x19, #264]
  4515d0:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  4515d4:	ldr	x8, [x19, #256]
  4515d8:	ldrb	w24, [x23, x22]
  4515dc:	cmp	x8, #0xff
  4515e0:	b.ne	4515b8 <feof@plt+0x4e4d8>  // b.any
  4515e4:	ldp	x8, x2, [x19, #272]
  4515e8:	mov	w1, #0xff                  	// #255
  4515ec:	mov	x0, x19
  4515f0:	strb	wzr, [x19, #255]
  4515f4:	blr	x8
  4515f8:	ldr	x9, [x19, #320]
  4515fc:	mov	x8, xzr
  451600:	str	xzr, [x19, #256]
  451604:	add	x9, x9, #0x1
  451608:	str	x9, [x19, #320]
  45160c:	b	4515b8 <feof@plt+0x4e4d8>
  451610:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  451614:	mov	x22, xzr
  451618:	add	x23, x23, #0x487
  45161c:	b	45163c <feof@plt+0x4e55c>
  451620:	add	x22, x22, #0x1
  451624:	add	x9, x8, #0x1
  451628:	cmp	x22, #0x10
  45162c:	str	x9, [x19, #256]
  451630:	strb	w24, [x19, x8]
  451634:	strb	w24, [x19, #264]
  451638:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  45163c:	ldr	x8, [x19, #256]
  451640:	ldrb	w24, [x23, x22]
  451644:	cmp	x8, #0xff
  451648:	b.ne	451620 <feof@plt+0x4e540>  // b.any
  45164c:	ldp	x8, x2, [x19, #272]
  451650:	mov	w1, #0xff                  	// #255
  451654:	mov	x0, x19
  451658:	strb	wzr, [x19, #255]
  45165c:	blr	x8
  451660:	ldr	x9, [x19, #320]
  451664:	mov	x8, xzr
  451668:	str	xzr, [x19, #256]
  45166c:	add	x9, x9, #0x1
  451670:	str	x9, [x19, #320]
  451674:	b	451620 <feof@plt+0x4e540>
  451678:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45167c:	mov	x22, xzr
  451680:	add	x23, x23, #0x498
  451684:	b	4516a4 <feof@plt+0x4e5c4>
  451688:	add	x22, x22, #0x1
  45168c:	add	x9, x8, #0x1
  451690:	cmp	x22, #0x15
  451694:	str	x9, [x19, #256]
  451698:	strb	w24, [x19, x8]
  45169c:	strb	w24, [x19, #264]
  4516a0:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  4516a4:	ldr	x8, [x19, #256]
  4516a8:	ldrb	w24, [x23, x22]
  4516ac:	cmp	x8, #0xff
  4516b0:	b.ne	451688 <feof@plt+0x4e5a8>  // b.any
  4516b4:	ldp	x8, x2, [x19, #272]
  4516b8:	mov	w1, #0xff                  	// #255
  4516bc:	mov	x0, x19
  4516c0:	strb	wzr, [x19, #255]
  4516c4:	blr	x8
  4516c8:	ldr	x9, [x19, #320]
  4516cc:	mov	x8, xzr
  4516d0:	str	xzr, [x19, #256]
  4516d4:	add	x9, x9, #0x1
  4516d8:	str	x9, [x19, #320]
  4516dc:	b	451688 <feof@plt+0x4e5a8>
  4516e0:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4516e4:	mov	x22, xzr
  4516e8:	add	x23, x23, #0x49c
  4516ec:	b	45170c <feof@plt+0x4e62c>
  4516f0:	add	x22, x22, #0x1
  4516f4:	add	x9, x8, #0x1
  4516f8:	cmp	x22, #0x11
  4516fc:	str	x9, [x19, #256]
  451700:	strb	w24, [x19, x8]
  451704:	strb	w24, [x19, #264]
  451708:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  45170c:	ldr	x8, [x19, #256]
  451710:	ldrb	w24, [x23, x22]
  451714:	cmp	x8, #0xff
  451718:	b.ne	4516f0 <feof@plt+0x4e610>  // b.any
  45171c:	ldp	x8, x2, [x19, #272]
  451720:	mov	w1, #0xff                  	// #255
  451724:	mov	x0, x19
  451728:	strb	wzr, [x19, #255]
  45172c:	blr	x8
  451730:	ldr	x9, [x19, #320]
  451734:	mov	x8, xzr
  451738:	str	xzr, [x19, #256]
  45173c:	add	x9, x9, #0x1
  451740:	str	x9, [x19, #320]
  451744:	b	4516f0 <feof@plt+0x4e610>
  451748:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45174c:	mov	x22, xzr
  451750:	add	x23, x23, #0x4ae
  451754:	b	451774 <feof@plt+0x4e694>
  451758:	add	x22, x22, #0x1
  45175c:	add	x9, x8, #0x1
  451760:	cmp	x22, #0x1a
  451764:	str	x9, [x19, #256]
  451768:	strb	w24, [x19, x8]
  45176c:	strb	w24, [x19, #264]
  451770:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  451774:	ldr	x8, [x19, #256]
  451778:	ldrb	w24, [x23, x22]
  45177c:	cmp	x8, #0xff
  451780:	b.ne	451758 <feof@plt+0x4e678>  // b.any
  451784:	ldp	x8, x2, [x19, #272]
  451788:	mov	w1, #0xff                  	// #255
  45178c:	mov	x0, x19
  451790:	strb	wzr, [x19, #255]
  451794:	blr	x8
  451798:	ldr	x9, [x19, #320]
  45179c:	mov	x8, xzr
  4517a0:	str	xzr, [x19, #256]
  4517a4:	add	x9, x9, #0x1
  4517a8:	str	x9, [x19, #320]
  4517ac:	b	451758 <feof@plt+0x4e678>
  4517b0:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4517b4:	mov	x22, xzr
  4517b8:	add	x23, x23, #0x4c9
  4517bc:	b	4517dc <feof@plt+0x4e6fc>
  4517c0:	add	x22, x22, #0x1
  4517c4:	add	x9, x8, #0x1
  4517c8:	cmp	x22, #0xf
  4517cc:	str	x9, [x19, #256]
  4517d0:	strb	w24, [x19, x8]
  4517d4:	strb	w24, [x19, #264]
  4517d8:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  4517dc:	ldr	x8, [x19, #256]
  4517e0:	ldrb	w24, [x23, x22]
  4517e4:	cmp	x8, #0xff
  4517e8:	b.ne	4517c0 <feof@plt+0x4e6e0>  // b.any
  4517ec:	ldp	x8, x2, [x19, #272]
  4517f0:	mov	w1, #0xff                  	// #255
  4517f4:	mov	x0, x19
  4517f8:	strb	wzr, [x19, #255]
  4517fc:	blr	x8
  451800:	ldr	x9, [x19, #320]
  451804:	mov	x8, xzr
  451808:	str	xzr, [x19, #256]
  45180c:	add	x9, x9, #0x1
  451810:	str	x9, [x19, #320]
  451814:	b	4517c0 <feof@plt+0x4e6e0>
  451818:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45181c:	mov	x22, xzr
  451820:	add	x23, x23, #0x4d9
  451824:	b	451844 <feof@plt+0x4e764>
  451828:	add	x22, x22, #0x1
  45182c:	add	x9, x8, #0x1
  451830:	cmp	x22, #0x13
  451834:	str	x9, [x19, #256]
  451838:	strb	w24, [x19, x8]
  45183c:	strb	w24, [x19, #264]
  451840:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  451844:	ldr	x8, [x19, #256]
  451848:	ldrb	w24, [x23, x22]
  45184c:	cmp	x8, #0xff
  451850:	b.ne	451828 <feof@plt+0x4e748>  // b.any
  451854:	ldp	x8, x2, [x19, #272]
  451858:	mov	w1, #0xff                  	// #255
  45185c:	mov	x0, x19
  451860:	strb	wzr, [x19, #255]
  451864:	blr	x8
  451868:	ldr	x9, [x19, #320]
  45186c:	mov	x8, xzr
  451870:	str	xzr, [x19, #256]
  451874:	add	x9, x9, #0x1
  451878:	str	x9, [x19, #320]
  45187c:	b	451828 <feof@plt+0x4e748>
  451880:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  451884:	mov	x22, xzr
  451888:	add	x23, x23, #0x4ed
  45188c:	b	4518ac <feof@plt+0x4e7cc>
  451890:	add	x22, x22, #0x1
  451894:	add	x9, x8, #0x1
  451898:	cmp	x22, #0x16
  45189c:	str	x9, [x19, #256]
  4518a0:	strb	w24, [x19, x8]
  4518a4:	strb	w24, [x19, #264]
  4518a8:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  4518ac:	ldr	x8, [x19, #256]
  4518b0:	ldrb	w24, [x23, x22]
  4518b4:	cmp	x8, #0xff
  4518b8:	b.ne	451890 <feof@plt+0x4e7b0>  // b.any
  4518bc:	ldp	x8, x2, [x19, #272]
  4518c0:	mov	w1, #0xff                  	// #255
  4518c4:	mov	x0, x19
  4518c8:	strb	wzr, [x19, #255]
  4518cc:	blr	x8
  4518d0:	ldr	x9, [x19, #320]
  4518d4:	mov	x8, xzr
  4518d8:	str	xzr, [x19, #256]
  4518dc:	add	x9, x9, #0x1
  4518e0:	str	x9, [x19, #320]
  4518e4:	b	451890 <feof@plt+0x4e7b0>
  4518e8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4518ec:	mov	x22, xzr
  4518f0:	add	x23, x23, #0x504
  4518f4:	b	451914 <feof@plt+0x4e834>
  4518f8:	add	x22, x22, #0x1
  4518fc:	add	x9, x8, #0x1
  451900:	cmp	x22, #0x19
  451904:	str	x9, [x19, #256]
  451908:	strb	w24, [x19, x8]
  45190c:	strb	w24, [x19, #264]
  451910:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  451914:	ldr	x8, [x19, #256]
  451918:	ldrb	w24, [x23, x22]
  45191c:	cmp	x8, #0xff
  451920:	b.ne	4518f8 <feof@plt+0x4e818>  // b.any
  451924:	ldp	x8, x2, [x19, #272]
  451928:	mov	w1, #0xff                  	// #255
  45192c:	mov	x0, x19
  451930:	strb	wzr, [x19, #255]
  451934:	blr	x8
  451938:	ldr	x9, [x19, #320]
  45193c:	mov	x8, xzr
  451940:	str	xzr, [x19, #256]
  451944:	add	x9, x9, #0x1
  451948:	str	x9, [x19, #320]
  45194c:	b	4518f8 <feof@plt+0x4e818>
  451950:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  451954:	mov	x22, xzr
  451958:	add	x23, x23, #0x51e
  45195c:	b	45197c <feof@plt+0x4e89c>
  451960:	add	x22, x22, #0x1
  451964:	add	x9, x8, #0x1
  451968:	cmp	x22, #0x15
  45196c:	str	x9, [x19, #256]
  451970:	strb	w24, [x19, x8]
  451974:	strb	w24, [x19, #264]
  451978:	b.eq	452f1c <feof@plt+0x4fe3c>  // b.none
  45197c:	ldr	x8, [x19, #256]
  451980:	ldrb	w24, [x23, x22]
  451984:	cmp	x8, #0xff
  451988:	b.ne	451960 <feof@plt+0x4e880>  // b.any
  45198c:	ldp	x8, x2, [x19, #272]
  451990:	mov	w1, #0xff                  	// #255
  451994:	mov	x0, x19
  451998:	strb	wzr, [x19, #255]
  45199c:	blr	x8
  4519a0:	ldr	x9, [x19, #320]
  4519a4:	mov	x8, xzr
  4519a8:	str	xzr, [x19, #256]
  4519ac:	add	x9, x9, #0x1
  4519b0:	str	x9, [x19, #320]
  4519b4:	b	451960 <feof@plt+0x4e880>
  4519b8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4519bc:	mov	x22, xzr
  4519c0:	add	x23, x23, #0x534
  4519c4:	b	4519e4 <feof@plt+0x4e904>
  4519c8:	add	x22, x22, #0x1
  4519cc:	add	x9, x8, #0x1
  4519d0:	cmp	x22, #0x11
  4519d4:	str	x9, [x19, #256]
  4519d8:	strb	w24, [x19, x8]
  4519dc:	strb	w24, [x19, #264]
  4519e0:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  4519e4:	ldr	x8, [x19, #256]
  4519e8:	ldrb	w24, [x23, x22]
  4519ec:	cmp	x8, #0xff
  4519f0:	b.ne	4519c8 <feof@plt+0x4e8e8>  // b.any
  4519f4:	ldp	x8, x2, [x19, #272]
  4519f8:	mov	w1, #0xff                  	// #255
  4519fc:	mov	x0, x19
  451a00:	strb	wzr, [x19, #255]
  451a04:	blr	x8
  451a08:	ldr	x9, [x19, #320]
  451a0c:	mov	x8, xzr
  451a10:	str	xzr, [x19, #256]
  451a14:	add	x9, x9, #0x1
  451a18:	str	x9, [x19, #320]
  451a1c:	b	4519c8 <feof@plt+0x4e8e8>
  451a20:	ldrsw	x20, [x21, #16]
  451a24:	cbz	w20, 4530d4 <feof@plt+0x4fff4>
  451a28:	ldr	x21, [x21, #8]
  451a2c:	b	451a4c <feof@plt+0x4e96c>
  451a30:	add	x9, x8, #0x1
  451a34:	subs	x20, x20, #0x1
  451a38:	add	x21, x21, #0x1
  451a3c:	str	x9, [x19, #256]
  451a40:	strb	w22, [x19, x8]
  451a44:	strb	w22, [x19, #264]
  451a48:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  451a4c:	ldr	x8, [x19, #256]
  451a50:	ldrb	w22, [x21]
  451a54:	cmp	x8, #0xff
  451a58:	b.ne	451a30 <feof@plt+0x4e950>  // b.any
  451a5c:	ldp	x8, x2, [x19, #272]
  451a60:	mov	w1, #0xff                  	// #255
  451a64:	mov	x0, x19
  451a68:	strb	wzr, [x19, #255]
  451a6c:	blr	x8
  451a70:	ldr	x9, [x19, #320]
  451a74:	mov	x8, xzr
  451a78:	str	xzr, [x19, #256]
  451a7c:	add	x9, x9, #0x1
  451a80:	str	x9, [x19, #320]
  451a84:	b	451a30 <feof@plt+0x4e950>
  451a88:	ldr	x8, [x21, #8]
  451a8c:	tbnz	w20, #2, 453788 <feof@plt+0x506a8>
  451a90:	ldrsw	x20, [x8, #8]
  451a94:	cbz	w20, 4530d4 <feof@plt+0x4fff4>
  451a98:	ldr	x21, [x8]
  451a9c:	b	451abc <feof@plt+0x4e9dc>
  451aa0:	add	x9, x8, #0x1
  451aa4:	subs	x20, x20, #0x1
  451aa8:	add	x21, x21, #0x1
  451aac:	str	x9, [x19, #256]
  451ab0:	strb	w22, [x19, x8]
  451ab4:	strb	w22, [x19, #264]
  451ab8:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  451abc:	ldr	x8, [x19, #256]
  451ac0:	ldrb	w22, [x21]
  451ac4:	cmp	x8, #0xff
  451ac8:	b.ne	451aa0 <feof@plt+0x4e9c0>  // b.any
  451acc:	ldp	x8, x2, [x19, #272]
  451ad0:	mov	w1, #0xff                  	// #255
  451ad4:	mov	x0, x19
  451ad8:	strb	wzr, [x19, #255]
  451adc:	blr	x8
  451ae0:	ldr	x9, [x19, #320]
  451ae4:	mov	x8, xzr
  451ae8:	str	xzr, [x19, #256]
  451aec:	add	x9, x9, #0x1
  451af0:	str	x9, [x19, #320]
  451af4:	b	451aa0 <feof@plt+0x4e9c0>
  451af8:	tbnz	w20, #5, 4537f0 <feof@plt+0x50710>
  451afc:	tbnz	w20, #6, 451b98 <feof@plt+0x4eab8>
  451b00:	ldr	x8, [x21, #8]
  451b04:	cbz	x8, 451b98 <feof@plt+0x4eab8>
  451b08:	ldr	x8, [x19, #296]
  451b0c:	add	x9, sp, #0x10
  451b10:	stp	x8, x21, [sp, #16]
  451b14:	str	x9, [x19, #296]
  451b18:	str	wzr, [sp, #32]
  451b1c:	ldr	x9, [x19, #288]
  451b20:	str	x9, [sp, #40]
  451b24:	ldr	x22, [x21, #8]
  451b28:	cbz	x22, 451b44 <feof@plt+0x4ea64>
  451b2c:	ldr	w9, [x22, #4]
  451b30:	cmp	w9, #0x1
  451b34:	b.gt	451b44 <feof@plt+0x4ea64>
  451b38:	ldr	w10, [x19, #308]
  451b3c:	cmp	w10, #0x401
  451b40:	b.lt	455518 <feof@plt+0x52438>  // b.tstop
  451b44:	mov	w9, #0x1                   	// #1
  451b48:	str	w9, [x19, #304]
  451b4c:	str	x8, [x19, #296]
  451b50:	ldr	x8, [x19, #256]
  451b54:	cmp	x8, #0xff
  451b58:	b.ne	451b84 <feof@plt+0x4eaa4>  // b.any
  451b5c:	ldp	x8, x2, [x19, #272]
  451b60:	mov	w1, #0xff                  	// #255
  451b64:	mov	x0, x19
  451b68:	strb	wzr, [x19, #255]
  451b6c:	blr	x8
  451b70:	ldr	x9, [x19, #320]
  451b74:	mov	x8, xzr
  451b78:	str	xzr, [x19, #256]
  451b7c:	add	x9, x9, #0x1
  451b80:	str	x9, [x19, #320]
  451b84:	add	x9, x8, #0x1
  451b88:	mov	w10, #0x20                  	// #32
  451b8c:	str	x9, [x19, #256]
  451b90:	strb	w10, [x19, x8]
  451b94:	strb	w10, [x19, #264]
  451b98:	ldr	x3, [x19, #296]
  451b9c:	and	w1, w20, #0xffffff9f
  451ba0:	mov	x0, x19
  451ba4:	mov	x2, x21
  451ba8:	bl	457800 <feof@plt+0x54720>
  451bac:	b	4530d4 <feof@plt+0x4fff4>
  451bb0:	ldp	x9, x22, [x19, #288]
  451bb4:	add	x8, sp, #0x10
  451bb8:	stp	x22, x21, [sp, #16]
  451bbc:	str	x8, [x19, #296]
  451bc0:	str	x9, [sp, #40]
  451bc4:	mov	w9, #0x1                   	// #1
  451bc8:	str	wzr, [sp, #32]
  451bcc:	cbz	x22, 453b94 <feof@plt+0x50ab4>
  451bd0:	add	x11, sp, #0x10
  451bd4:	mov	w24, #0x1                   	// #1
  451bd8:	mov	x10, x22
  451bdc:	b	451c0c <feof@plt+0x4eb2c>
  451be0:	ldp	q0, q1, [x10]
  451be4:	mov	w12, w24
  451be8:	add	x12, x8, x12, lsl #5
  451bec:	add	w24, w24, #0x1
  451bf0:	stp	q0, q1, [x12]
  451bf4:	str	x11, [x12]
  451bf8:	mov	x11, x12
  451bfc:	str	x12, [x19, #296]
  451c00:	str	w9, [x10, #16]
  451c04:	ldr	x10, [x10]
  451c08:	cbz	x10, 453b98 <feof@plt+0x50ab8>
  451c0c:	ldr	x12, [x10, #8]
  451c10:	ldr	w12, [x12]
  451c14:	sub	w12, w12, #0x19
  451c18:	cmp	w12, #0x2
  451c1c:	b.hi	453b98 <feof@plt+0x50ab8>  // b.pmore
  451c20:	ldr	w12, [x10, #16]
  451c24:	cbnz	w12, 451c04 <feof@plt+0x4eb24>
  451c28:	cmp	w24, #0x4
  451c2c:	b.cc	451be0 <feof@plt+0x4eb00>  // b.lo, b.ul, b.last
  451c30:	b	4530cc <feof@plt+0x4ffec>
  451c34:	ldrh	w8, [x21, #18]
  451c38:	cbz	w8, 451da4 <feof@plt+0x4ecc4>
  451c3c:	ldr	x8, [x19, #256]
  451c40:	cmp	x8, #0xff
  451c44:	b.ne	451c70 <feof@plt+0x4eb90>  // b.any
  451c48:	ldp	x8, x2, [x19, #272]
  451c4c:	mov	w1, #0xff                  	// #255
  451c50:	mov	x0, x19
  451c54:	strb	wzr, [x19, #255]
  451c58:	blr	x8
  451c5c:	ldr	x9, [x19, #320]
  451c60:	mov	x8, xzr
  451c64:	str	xzr, [x19, #256]
  451c68:	add	x9, x9, #0x1
  451c6c:	str	x9, [x19, #320]
  451c70:	add	x9, x8, #0x1
  451c74:	mov	w10, #0x5f                  	// #95
  451c78:	str	x9, [x19, #256]
  451c7c:	strb	w10, [x19, x8]
  451c80:	ldr	x8, [x19, #256]
  451c84:	strb	w10, [x19, #264]
  451c88:	cmp	x8, #0xff
  451c8c:	b.ne	451cb8 <feof@plt+0x4ebd8>  // b.any
  451c90:	ldp	x8, x2, [x19, #272]
  451c94:	mov	w1, #0xff                  	// #255
  451c98:	mov	x0, x19
  451c9c:	strb	wzr, [x19, #255]
  451ca0:	blr	x8
  451ca4:	ldr	x9, [x19, #320]
  451ca8:	mov	x8, xzr
  451cac:	str	xzr, [x19, #256]
  451cb0:	add	x9, x9, #0x1
  451cb4:	str	x9, [x19, #320]
  451cb8:	add	x9, x8, #0x1
  451cbc:	mov	w10, #0x53                  	// #83
  451cc0:	str	x9, [x19, #256]
  451cc4:	strb	w10, [x19, x8]
  451cc8:	ldr	x8, [x19, #256]
  451ccc:	strb	w10, [x19, #264]
  451cd0:	cmp	x8, #0xff
  451cd4:	b.ne	451d00 <feof@plt+0x4ec20>  // b.any
  451cd8:	ldp	x8, x2, [x19, #272]
  451cdc:	mov	w1, #0xff                  	// #255
  451ce0:	mov	x0, x19
  451ce4:	strb	wzr, [x19, #255]
  451ce8:	blr	x8
  451cec:	ldr	x9, [x19, #320]
  451cf0:	mov	x8, xzr
  451cf4:	str	xzr, [x19, #256]
  451cf8:	add	x9, x9, #0x1
  451cfc:	str	x9, [x19, #320]
  451d00:	add	x9, x8, #0x1
  451d04:	mov	w10, #0x61                  	// #97
  451d08:	str	x9, [x19, #256]
  451d0c:	strb	w10, [x19, x8]
  451d10:	ldr	x8, [x19, #256]
  451d14:	strb	w10, [x19, #264]
  451d18:	cmp	x8, #0xff
  451d1c:	b.ne	451d48 <feof@plt+0x4ec68>  // b.any
  451d20:	ldp	x8, x2, [x19, #272]
  451d24:	mov	w1, #0xff                  	// #255
  451d28:	mov	x0, x19
  451d2c:	strb	wzr, [x19, #255]
  451d30:	blr	x8
  451d34:	ldr	x9, [x19, #320]
  451d38:	mov	x8, xzr
  451d3c:	str	xzr, [x19, #256]
  451d40:	add	x9, x9, #0x1
  451d44:	str	x9, [x19, #320]
  451d48:	add	x9, x8, #0x1
  451d4c:	mov	w10, #0x74                  	// #116
  451d50:	str	x9, [x19, #256]
  451d54:	strb	w10, [x19, x8]
  451d58:	ldr	x8, [x19, #256]
  451d5c:	strb	w10, [x19, #264]
  451d60:	cmp	x8, #0xff
  451d64:	b.ne	451d90 <feof@plt+0x4ecb0>  // b.any
  451d68:	ldp	x8, x2, [x19, #272]
  451d6c:	mov	w1, #0xff                  	// #255
  451d70:	mov	x0, x19
  451d74:	strb	wzr, [x19, #255]
  451d78:	blr	x8
  451d7c:	ldr	x9, [x19, #320]
  451d80:	mov	x8, xzr
  451d84:	str	xzr, [x19, #256]
  451d88:	add	x9, x9, #0x1
  451d8c:	str	x9, [x19, #320]
  451d90:	add	x9, x8, #0x1
  451d94:	mov	w10, #0x20                  	// #32
  451d98:	str	x9, [x19, #256]
  451d9c:	strb	w10, [x19, x8]
  451da0:	strb	w10, [x19, #264]
  451da4:	ldr	x22, [x21, #8]
  451da8:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  451dac:	add	x9, x9, #0xbc8
  451db0:	ldr	x8, [x22, #8]
  451db4:	cmp	x8, x9
  451db8:	b.eq	451e28 <feof@plt+0x4ed48>  // b.none
  451dbc:	cbz	x22, 451dd8 <feof@plt+0x4ecf8>
  451dc0:	ldr	w8, [x22, #4]
  451dc4:	cmp	w8, #0x1
  451dc8:	b.gt	451dd8 <feof@plt+0x4ecf8>
  451dcc:	ldr	w9, [x19, #308]
  451dd0:	cmp	w9, #0x401
  451dd4:	b.lt	454d5c <feof@plt+0x51c7c>  // b.tstop
  451dd8:	mov	w8, #0x1                   	// #1
  451ddc:	str	w8, [x25]
  451de0:	ldr	x8, [x19, #256]
  451de4:	cmp	x8, #0xff
  451de8:	b.ne	451e14 <feof@plt+0x4ed34>  // b.any
  451dec:	ldp	x8, x2, [x19, #272]
  451df0:	mov	w1, #0xff                  	// #255
  451df4:	mov	x0, x19
  451df8:	strb	wzr, [x19, #255]
  451dfc:	blr	x8
  451e00:	ldr	x9, [x19, #320]
  451e04:	mov	x8, xzr
  451e08:	str	xzr, [x19, #256]
  451e0c:	add	x9, x9, #0x1
  451e10:	str	x9, [x19, #320]
  451e14:	add	x9, x8, #0x1
  451e18:	mov	w10, #0x20                  	// #32
  451e1c:	str	x9, [x19, #256]
  451e20:	strb	w10, [x19, x8]
  451e24:	strb	w10, [x19, #264]
  451e28:	ldr	x8, [x19, #256]
  451e2c:	ldrh	w9, [x21, #16]
  451e30:	cmp	x8, #0xff
  451e34:	cbz	w9, 453c1c <feof@plt+0x50b3c>
  451e38:	b.ne	451e64 <feof@plt+0x4ed84>  // b.any
  451e3c:	ldp	x8, x2, [x19, #272]
  451e40:	mov	w1, #0xff                  	// #255
  451e44:	mov	x0, x19
  451e48:	strb	wzr, [x19, #255]
  451e4c:	blr	x8
  451e50:	ldr	x9, [x19, #320]
  451e54:	mov	x8, xzr
  451e58:	str	xzr, [x19, #256]
  451e5c:	add	x9, x9, #0x1
  451e60:	str	x9, [x19, #320]
  451e64:	add	x9, x8, #0x1
  451e68:	mov	w10, #0x5f                  	// #95
  451e6c:	str	x9, [x19, #256]
  451e70:	strb	w10, [x19, x8]
  451e74:	ldr	x8, [x19, #256]
  451e78:	strb	w10, [x19, #264]
  451e7c:	cmp	x8, #0xff
  451e80:	b.ne	451eac <feof@plt+0x4edcc>  // b.any
  451e84:	ldp	x8, x2, [x19, #272]
  451e88:	mov	w1, #0xff                  	// #255
  451e8c:	mov	x0, x19
  451e90:	strb	wzr, [x19, #255]
  451e94:	blr	x8
  451e98:	ldr	x9, [x19, #320]
  451e9c:	mov	x8, xzr
  451ea0:	str	xzr, [x19, #256]
  451ea4:	add	x9, x9, #0x1
  451ea8:	str	x9, [x19, #320]
  451eac:	add	x9, x8, #0x1
  451eb0:	mov	w10, #0x41                  	// #65
  451eb4:	str	x9, [x19, #256]
  451eb8:	strb	w10, [x19, x8]
  451ebc:	ldr	x8, [x19, #256]
  451ec0:	strb	w10, [x19, #264]
  451ec4:	cmp	x8, #0xff
  451ec8:	b.ne	451ef4 <feof@plt+0x4ee14>  // b.any
  451ecc:	ldp	x8, x2, [x19, #272]
  451ed0:	mov	w1, #0xff                  	// #255
  451ed4:	mov	x0, x19
  451ed8:	strb	wzr, [x19, #255]
  451edc:	blr	x8
  451ee0:	ldr	x9, [x19, #320]
  451ee4:	mov	x8, xzr
  451ee8:	str	xzr, [x19, #256]
  451eec:	add	x9, x9, #0x1
  451ef0:	str	x9, [x19, #320]
  451ef4:	add	x9, x8, #0x1
  451ef8:	mov	w20, #0x63                  	// #99
  451efc:	str	x9, [x19, #256]
  451f00:	strb	w20, [x19, x8]
  451f04:	ldr	x8, [x19, #256]
  451f08:	strb	w20, [x19, #264]
  451f0c:	cmp	x8, #0xff
  451f10:	b.ne	451f3c <feof@plt+0x4ee5c>  // b.any
  451f14:	ldp	x8, x2, [x19, #272]
  451f18:	mov	w1, #0xff                  	// #255
  451f1c:	mov	x0, x19
  451f20:	strb	wzr, [x19, #255]
  451f24:	blr	x8
  451f28:	ldr	x9, [x19, #320]
  451f2c:	mov	x8, xzr
  451f30:	str	xzr, [x19, #256]
  451f34:	add	x9, x9, #0x1
  451f38:	str	x9, [x19, #320]
  451f3c:	add	x9, x8, #0x1
  451f40:	str	x9, [x19, #256]
  451f44:	strb	w20, [x19, x8]
  451f48:	ldr	x8, [x19, #256]
  451f4c:	strb	w20, [x19, #264]
  451f50:	cmp	x8, #0xff
  451f54:	b.ne	451f80 <feof@plt+0x4eea0>  // b.any
  451f58:	ldp	x8, x2, [x19, #272]
  451f5c:	mov	w1, #0xff                  	// #255
  451f60:	mov	x0, x19
  451f64:	strb	wzr, [x19, #255]
  451f68:	blr	x8
  451f6c:	ldr	x9, [x19, #320]
  451f70:	mov	x8, xzr
  451f74:	str	xzr, [x19, #256]
  451f78:	add	x9, x9, #0x1
  451f7c:	str	x9, [x19, #320]
  451f80:	add	x9, x8, #0x1
  451f84:	mov	w10, #0x75                  	// #117
  451f88:	str	x9, [x19, #256]
  451f8c:	strb	w10, [x19, x8]
  451f90:	ldr	x8, [x19, #256]
  451f94:	strb	w10, [x19, #264]
  451f98:	cmp	x8, #0xff
  451f9c:	b.ne	451fc8 <feof@plt+0x4eee8>  // b.any
  451fa0:	ldp	x8, x2, [x19, #272]
  451fa4:	mov	w1, #0xff                  	// #255
  451fa8:	mov	x0, x19
  451fac:	strb	wzr, [x19, #255]
  451fb0:	blr	x8
  451fb4:	ldr	x9, [x19, #320]
  451fb8:	mov	x8, xzr
  451fbc:	str	xzr, [x19, #256]
  451fc0:	add	x9, x9, #0x1
  451fc4:	str	x9, [x19, #320]
  451fc8:	add	x9, x8, #0x1
  451fcc:	mov	w10, #0x6d                  	// #109
  451fd0:	b	4559c8 <feof@plt+0x528e8>
  451fd4:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  451fd8:	mov	x22, xzr
  451fdc:	add	x23, x23, #0x425
  451fe0:	b	452000 <feof@plt+0x4ef20>
  451fe4:	add	x22, x22, #0x1
  451fe8:	add	x9, x8, #0x1
  451fec:	cmp	x22, #0x1e
  451ff0:	str	x9, [x19, #256]
  451ff4:	strb	w24, [x19, x8]
  451ff8:	strb	w24, [x19, #264]
  451ffc:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  452000:	ldr	x8, [x19, #256]
  452004:	ldrb	w24, [x23, x22]
  452008:	cmp	x8, #0xff
  45200c:	b.ne	451fe4 <feof@plt+0x4ef04>  // b.any
  452010:	ldp	x8, x2, [x19, #272]
  452014:	mov	w1, #0xff                  	// #255
  452018:	mov	x0, x19
  45201c:	strb	wzr, [x19, #255]
  452020:	blr	x8
  452024:	ldr	x9, [x19, #320]
  452028:	mov	x8, xzr
  45202c:	str	xzr, [x19, #256]
  452030:	add	x9, x9, #0x1
  452034:	str	x9, [x19, #320]
  452038:	b	451fe4 <feof@plt+0x4ef04>
  45203c:	ldp	x22, x21, [x21, #8]
  452040:	cbz	x22, 45476c <feof@plt+0x5168c>
  452044:	ldr	w8, [x22, #4]
  452048:	cmp	w8, #0x1
  45204c:	b.gt	45205c <feof@plt+0x4ef7c>
  452050:	ldr	w9, [x19, #308]
  452054:	cmp	w9, #0x401
  452058:	b.lt	45471c <feof@plt+0x5163c>  // b.tstop
  45205c:	mov	w8, #0x1                   	// #1
  452060:	str	w8, [x25]
  452064:	b	45476c <feof@plt+0x5168c>
  452068:	ldr	x21, [x21, #8]
  45206c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0xd838>
  452070:	mov	x22, xzr
  452074:	add	x23, x23, #0x561
  452078:	ldrsw	x20, [x21, #16]
  45207c:	b	45209c <feof@plt+0x4efbc>
  452080:	add	x22, x22, #0x1
  452084:	add	x9, x8, #0x1
  452088:	cmp	x22, #0x8
  45208c:	str	x9, [x19, #256]
  452090:	strb	w24, [x19, x8]
  452094:	strb	w24, [x19, #264]
  452098:	b.eq	45314c <feof@plt+0x5006c>  // b.none
  45209c:	ldr	x8, [x19, #256]
  4520a0:	ldrb	w24, [x23, x22]
  4520a4:	cmp	x8, #0xff
  4520a8:	b.ne	452080 <feof@plt+0x4efa0>  // b.any
  4520ac:	ldp	x8, x2, [x19, #272]
  4520b0:	mov	w1, #0xff                  	// #255
  4520b4:	mov	x0, x19
  4520b8:	strb	wzr, [x19, #255]
  4520bc:	blr	x8
  4520c0:	ldr	x9, [x19, #320]
  4520c4:	mov	x8, xzr
  4520c8:	str	xzr, [x19, #256]
  4520cc:	add	x9, x9, #0x1
  4520d0:	str	x9, [x19, #320]
  4520d4:	b	452080 <feof@plt+0x4efa0>
  4520d8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4520dc:	mov	x22, xzr
  4520e0:	add	x23, x23, #0x561
  4520e4:	b	452104 <feof@plt+0x4f024>
  4520e8:	add	x22, x22, #0x1
  4520ec:	add	x9, x8, #0x1
  4520f0:	cmp	x22, #0x9
  4520f4:	str	x9, [x19, #256]
  4520f8:	strb	w24, [x19, x8]
  4520fc:	strb	w24, [x19, #264]
  452100:	b.eq	452f10 <feof@plt+0x4fe30>  // b.none
  452104:	ldr	x8, [x19, #256]
  452108:	ldrb	w24, [x23, x22]
  45210c:	cmp	x8, #0xff
  452110:	b.ne	4520e8 <feof@plt+0x4f008>  // b.any
  452114:	ldp	x8, x2, [x19, #272]
  452118:	mov	w1, #0xff                  	// #255
  45211c:	mov	x0, x19
  452120:	strb	wzr, [x19, #255]
  452124:	blr	x8
  452128:	ldr	x9, [x19, #320]
  45212c:	mov	x8, xzr
  452130:	str	xzr, [x19, #256]
  452134:	add	x9, x9, #0x1
  452138:	str	x9, [x19, #320]
  45213c:	b	4520e8 <feof@plt+0x4f008>
  452140:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  452144:	mov	x22, xzr
  452148:	add	x23, x23, #0x561
  45214c:	b	45216c <feof@plt+0x4f08c>
  452150:	add	x22, x22, #0x1
  452154:	add	x9, x8, #0x1
  452158:	cmp	x22, #0x9
  45215c:	str	x9, [x19, #256]
  452160:	strb	w24, [x19, x8]
  452164:	strb	w24, [x19, #264]
  452168:	b.eq	453220 <feof@plt+0x50140>  // b.none
  45216c:	ldr	x8, [x19, #256]
  452170:	ldrb	w24, [x23, x22]
  452174:	cmp	x8, #0xff
  452178:	b.ne	452150 <feof@plt+0x4f070>  // b.any
  45217c:	ldp	x8, x2, [x19, #272]
  452180:	mov	w1, #0xff                  	// #255
  452184:	mov	x0, x19
  452188:	strb	wzr, [x19, #255]
  45218c:	blr	x8
  452190:	ldr	x9, [x19, #320]
  452194:	mov	x8, xzr
  452198:	str	xzr, [x19, #256]
  45219c:	add	x9, x9, #0x1
  4521a0:	str	x9, [x19, #320]
  4521a4:	b	452150 <feof@plt+0x4f070>
  4521a8:	ldr	x21, [x21, #8]
  4521ac:	ldr	w8, [x21]
  4521b0:	cmp	w8, #0x32
  4521b4:	b.ne	4541d4 <feof@plt+0x510f4>  // b.any
  4521b8:	ldr	x8, [x21, #8]
  4521bc:	ldrsw	x20, [x8, #16]
  4521c0:	cbz	w20, 4530d4 <feof@plt+0x4fff4>
  4521c4:	ldr	x21, [x8, #8]
  4521c8:	b	4521e8 <feof@plt+0x4f108>
  4521cc:	add	x9, x8, #0x1
  4521d0:	subs	x20, x20, #0x1
  4521d4:	add	x21, x21, #0x1
  4521d8:	str	x9, [x19, #256]
  4521dc:	strb	w22, [x19, x8]
  4521e0:	strb	w22, [x19, #264]
  4521e4:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  4521e8:	ldr	x8, [x19, #256]
  4521ec:	ldrb	w22, [x21]
  4521f0:	cmp	x8, #0xff
  4521f4:	b.ne	4521cc <feof@plt+0x4f0ec>  // b.any
  4521f8:	ldp	x8, x2, [x19, #272]
  4521fc:	mov	w1, #0xff                  	// #255
  452200:	mov	x0, x19
  452204:	strb	wzr, [x19, #255]
  452208:	blr	x8
  45220c:	ldr	x9, [x19, #320]
  452210:	mov	x8, xzr
  452214:	str	xzr, [x19, #256]
  452218:	add	x9, x9, #0x1
  45221c:	str	x9, [x19, #320]
  452220:	b	4521cc <feof@plt+0x4f0ec>
  452224:	ldp	x22, x21, [x21, #8]
  452228:	ldr	w8, [x22]
  45222c:	cmp	w8, #0x34
  452230:	b.eq	453e0c <feof@plt+0x50d2c>  // b.none
  452234:	cmp	w8, #0x32
  452238:	b.ne	453ec8 <feof@plt+0x50de8>  // b.any
  45223c:	ldr	x24, [x22, #8]
  452240:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10838>
  452244:	add	x1, x1, #0xd19
  452248:	ldr	x23, [x24]
  45224c:	mov	x0, x23
  452250:	bl	402ed0 <strcmp@plt>
  452254:	cbnz	w0, 452284 <feof@plt+0x4f1a4>
  452258:	ldr	w8, [x21]
  45225c:	cmp	w8, #0x3
  452260:	b.ne	452284 <feof@plt+0x4f1a4>  // b.any
  452264:	ldr	x8, [x21, #8]
  452268:	ldr	w9, [x8]
  45226c:	cmp	w9, #0x1
  452270:	b.ne	452284 <feof@plt+0x4f1a4>  // b.any
  452274:	ldr	x9, [x21, #16]
  452278:	ldr	w9, [x9]
  45227c:	cmp	w9, #0x29
  452280:	csel	x21, x8, x21, eq  // eq = none
  452284:	ldr	w26, [x21]
  452288:	cmp	w26, #0x39
  45228c:	b.ne	454688 <feof@plt+0x515a8>  // b.any
  452290:	ldr	x21, [x21, #8]
  452294:	ldr	w8, [x21]
  452298:	cmp	w8, #0x31
  45229c:	b.hi	455728 <feof@plt+0x52648>  // b.pmore
  4522a0:	mov	w9, #0x1                   	// #1
  4522a4:	lsl	x8, x9, x8
  4522a8:	mov	x9, #0x43                  	// #67
  4522ac:	movk	x9, #0x2, lsl #48
  4522b0:	tst	x8, x9
  4522b4:	b.eq	455728 <feof@plt+0x52648>  // b.none
  4522b8:	cbz	x21, 4522d4 <feof@plt+0x4f1f4>
  4522bc:	ldr	w8, [x21, #4]
  4522c0:	cmp	w8, #0x1
  4522c4:	b.gt	4522d4 <feof@plt+0x4f1f4>
  4522c8:	ldr	w9, [x19, #308]
  4522cc:	cmp	w9, #0x401
  4522d0:	b.lt	455c38 <feof@plt+0x52b58>  // b.tstop
  4522d4:	mov	w8, #0x1                   	// #1
  4522d8:	str	w8, [x25]
  4522dc:	b	455c88 <feof@plt+0x52ba8>
  4522e0:	ldr	x8, [x21, #16]
  4522e4:	ldr	w8, [x8]
  4522e8:	cmp	w8, #0x39
  4522ec:	b.ne	4530cc <feof@plt+0x4ffec>  // b.any
  4522f0:	ldr	x22, [x21, #8]
  4522f4:	ldr	x8, [x22, #8]
  4522f8:	ldr	x9, [x8]
  4522fc:	ldrb	w10, [x9, #1]
  452300:	cmp	w10, #0x63
  452304:	b.ne	454364 <feof@plt+0x51284>  // b.any
  452308:	ldrb	w9, [x9]
  45230c:	sub	w9, w9, #0x63
  452310:	cmp	w9, #0x10
  452314:	b.hi	454364 <feof@plt+0x51284>  // b.pmore
  452318:	mov	w10, #0x1                   	// #1
  45231c:	lsl	w9, w10, w9
  452320:	mov	w10, #0x8003                	// #32771
  452324:	movk	w10, #0x1, lsl #16
  452328:	tst	w9, w10
  45232c:	b.eq	454364 <feof@plt+0x51284>  // b.none
  452330:	ldr	w9, [x22]
  452334:	cmp	w9, #0x32
  452338:	b.ne	454d38 <feof@plt+0x51c58>  // b.any
  45233c:	ldrsw	x22, [x8, #16]
  452340:	cbz	w22, 455874 <feof@plt+0x52794>
  452344:	ldr	x23, [x8, #8]
  452348:	b	452368 <feof@plt+0x4f288>
  45234c:	add	x9, x8, #0x1
  452350:	subs	x22, x22, #0x1
  452354:	add	x23, x23, #0x1
  452358:	str	x9, [x19, #256]
  45235c:	strb	w24, [x19, x8]
  452360:	strb	w24, [x19, #264]
  452364:	b.eq	455874 <feof@plt+0x52794>  // b.none
  452368:	ldr	x8, [x19, #256]
  45236c:	ldrb	w24, [x23]
  452370:	cmp	x8, #0xff
  452374:	b.ne	45234c <feof@plt+0x4f26c>  // b.any
  452378:	ldp	x8, x2, [x19, #272]
  45237c:	mov	w1, #0xff                  	// #255
  452380:	mov	x0, x19
  452384:	strb	wzr, [x19, #255]
  452388:	blr	x8
  45238c:	ldr	x9, [x19, #320]
  452390:	mov	x8, xzr
  452394:	str	xzr, [x19, #256]
  452398:	add	x9, x9, #0x1
  45239c:	str	x9, [x19, #320]
  4523a0:	b	45234c <feof@plt+0x4f26c>
  4523a4:	ldr	x8, [x21, #16]
  4523a8:	ldr	w9, [x8]
  4523ac:	cmp	w9, #0x3b
  4523b0:	b.ne	4530cc <feof@plt+0x4ffec>  // b.any
  4523b4:	ldr	x8, [x8, #16]
  4523b8:	ldr	w8, [x8]
  4523bc:	cmp	w8, #0x3c
  4523c0:	b.ne	4530cc <feof@plt+0x4ffec>  // b.any
  4523c4:	mov	x0, x19
  4523c8:	mov	w1, w20
  4523cc:	mov	x2, x21
  4523d0:	bl	457e84 <feof@plt+0x54da4>
  4523d4:	cbnz	w0, 4530d4 <feof@plt+0x4fff4>
  4523d8:	ldp	x24, x8, [x21, #8]
  4523dc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  4523e0:	add	x1, x1, #0x154
  4523e4:	ldr	x10, [x24, #8]
  4523e8:	ldp	x23, x9, [x8, #8]
  4523ec:	ldr	x0, [x10]
  4523f0:	ldp	x22, x21, [x9, #8]
  4523f4:	bl	402ed0 <strcmp@plt>
  4523f8:	cbz	w0, 455630 <feof@plt+0x52550>
  4523fc:	ldr	x8, [x19, #256]
  452400:	cmp	x8, #0xff
  452404:	b.ne	452430 <feof@plt+0x4f350>  // b.any
  452408:	ldp	x8, x2, [x19, #272]
  45240c:	mov	w1, #0xff                  	// #255
  452410:	mov	x0, x19
  452414:	strb	wzr, [x19, #255]
  452418:	blr	x8
  45241c:	ldr	x9, [x19, #320]
  452420:	mov	x8, xzr
  452424:	str	xzr, [x19, #256]
  452428:	add	x9, x9, #0x1
  45242c:	str	x9, [x19, #320]
  452430:	add	x9, x8, #0x1
  452434:	mov	w10, #0x6e                  	// #110
  452438:	str	x9, [x19, #256]
  45243c:	strb	w10, [x19, x8]
  452440:	ldr	x8, [x19, #256]
  452444:	strb	w10, [x19, #264]
  452448:	cmp	x8, #0xff
  45244c:	b.ne	452478 <feof@plt+0x4f398>  // b.any
  452450:	ldp	x8, x2, [x19, #272]
  452454:	mov	w1, #0xff                  	// #255
  452458:	mov	x0, x19
  45245c:	strb	wzr, [x19, #255]
  452460:	blr	x8
  452464:	ldr	x9, [x19, #320]
  452468:	mov	x8, xzr
  45246c:	str	xzr, [x19, #256]
  452470:	add	x9, x9, #0x1
  452474:	str	x9, [x19, #320]
  452478:	add	x9, x8, #0x1
  45247c:	mov	w10, #0x65                  	// #101
  452480:	str	x9, [x19, #256]
  452484:	strb	w10, [x19, x8]
  452488:	ldr	x8, [x19, #256]
  45248c:	strb	w10, [x19, #264]
  452490:	cmp	x8, #0xff
  452494:	b.ne	4524c0 <feof@plt+0x4f3e0>  // b.any
  452498:	ldp	x8, x2, [x19, #272]
  45249c:	mov	w1, #0xff                  	// #255
  4524a0:	mov	x0, x19
  4524a4:	strb	wzr, [x19, #255]
  4524a8:	blr	x8
  4524ac:	ldr	x9, [x19, #320]
  4524b0:	mov	x8, xzr
  4524b4:	str	xzr, [x19, #256]
  4524b8:	add	x9, x9, #0x1
  4524bc:	str	x9, [x19, #320]
  4524c0:	add	x9, x8, #0x1
  4524c4:	mov	w10, #0x77                  	// #119
  4524c8:	str	x9, [x19, #256]
  4524cc:	strb	w10, [x19, x8]
  4524d0:	ldr	x8, [x19, #256]
  4524d4:	strb	w10, [x19, #264]
  4524d8:	cmp	x8, #0xff
  4524dc:	b.ne	452508 <feof@plt+0x4f428>  // b.any
  4524e0:	ldp	x8, x2, [x19, #272]
  4524e4:	mov	w1, #0xff                  	// #255
  4524e8:	mov	x0, x19
  4524ec:	strb	wzr, [x19, #255]
  4524f0:	blr	x8
  4524f4:	ldr	x9, [x19, #320]
  4524f8:	mov	x8, xzr
  4524fc:	str	xzr, [x19, #256]
  452500:	add	x9, x9, #0x1
  452504:	str	x9, [x19, #320]
  452508:	add	x9, x8, #0x1
  45250c:	mov	w10, #0x20                  	// #32
  452510:	str	x9, [x19, #256]
  452514:	strb	w10, [x19, x8]
  452518:	strb	w10, [x19, #264]
  45251c:	ldr	x8, [x23, #8]
  452520:	cbz	x8, 456770 <feof@plt+0x53690>
  452524:	ldr	w8, [x23]
  452528:	cmp	w8, #0x31
  45252c:	b.hi	4560e4 <feof@plt+0x53004>  // b.pmore
  452530:	mov	w9, #0x1                   	// #1
  452534:	lsl	x8, x9, x8
  452538:	mov	x9, #0x43                  	// #67
  45253c:	movk	x9, #0x2, lsl #48
  452540:	tst	x8, x9
  452544:	b.eq	4560e4 <feof@plt+0x53004>  // b.none
  452548:	ldr	w8, [x23, #4]
  45254c:	cmp	w8, #0x1
  452550:	b.gt	452560 <feof@plt+0x4f480>
  452554:	ldr	w9, [x19, #308]
  452558:	cmp	w9, #0x401
  45255c:	b.lt	456150 <feof@plt+0x53070>  // b.tstop
  452560:	mov	w8, #0x1                   	// #1
  452564:	str	w8, [x25]
  452568:	b	456728 <feof@plt+0x53648>
  45256c:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  452570:	mov	x22, xzr
  452574:	add	x23, x23, #0x56b
  452578:	b	452598 <feof@plt+0x4f4b8>
  45257c:	add	x22, x22, #0x1
  452580:	add	x9, x8, #0x1
  452584:	cmp	x22, #0xe
  452588:	str	x9, [x19, #256]
  45258c:	strb	w24, [x19, x8]
  452590:	strb	w24, [x19, #264]
  452594:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  452598:	ldr	x8, [x19, #256]
  45259c:	ldrb	w24, [x23, x22]
  4525a0:	cmp	x8, #0xff
  4525a4:	b.ne	45257c <feof@plt+0x4f49c>  // b.any
  4525a8:	ldp	x8, x2, [x19, #272]
  4525ac:	mov	w1, #0xff                  	// #255
  4525b0:	mov	x0, x19
  4525b4:	strb	wzr, [x19, #255]
  4525b8:	blr	x8
  4525bc:	ldr	x9, [x19, #320]
  4525c0:	mov	x8, xzr
  4525c4:	str	xzr, [x19, #256]
  4525c8:	add	x9, x9, #0x1
  4525cc:	str	x9, [x19, #320]
  4525d0:	b	45257c <feof@plt+0x4f49c>
  4525d4:	ldr	x22, [x21, #8]
  4525d8:	cbz	x22, 4525f4 <feof@plt+0x4f514>
  4525dc:	ldr	w8, [x22, #4]
  4525e0:	cmp	w8, #0x1
  4525e4:	b.gt	4525f4 <feof@plt+0x4f514>
  4525e8:	ldr	w9, [x19, #308]
  4525ec:	cmp	w9, #0x401
  4525f0:	b.lt	454818 <feof@plt+0x51738>  // b.tstop
  4525f4:	mov	w8, #0x1                   	// #1
  4525f8:	str	w8, [x25]
  4525fc:	ldr	x21, [x21, #16]
  452600:	cbnz	x21, 4530b4 <feof@plt+0x4ffd4>
  452604:	b	4530cc <feof@plt+0x4ffec>
  452608:	ldr	x8, [x19, #256]
  45260c:	ldr	w20, [x21, #8]
  452610:	cmp	x8, #0xff
  452614:	b.ne	452640 <feof@plt+0x4f560>  // b.any
  452618:	ldp	x8, x2, [x19, #272]
  45261c:	mov	w1, #0xff                  	// #255
  452620:	mov	x0, x19
  452624:	strb	wzr, [x19, #255]
  452628:	blr	x8
  45262c:	ldr	x9, [x19, #320]
  452630:	mov	x8, xzr
  452634:	str	xzr, [x19, #256]
  452638:	add	x9, x9, #0x1
  45263c:	str	x9, [x19, #320]
  452640:	add	x9, x8, #0x1
  452644:	str	x9, [x19, #256]
  452648:	strb	w20, [x19, x8]
  45264c:	strb	w20, [x19, #264]
  452650:	b	4530d4 <feof@plt+0x4fff4>
  452654:	ldr	w2, [x21, #8]
  452658:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  45265c:	add	x1, x1, #0x229
  452660:	add	x0, sp, #0x10
  452664:	bl	402c30 <sprintf@plt>
  452668:	add	x0, sp, #0x10
  45266c:	bl	402a50 <strlen@plt>
  452670:	cbz	x0, 4530d4 <feof@plt+0x4fff4>
  452674:	mov	x20, x0
  452678:	add	x21, sp, #0x10
  45267c:	b	45269c <feof@plt+0x4f5bc>
  452680:	add	x9, x8, #0x1
  452684:	subs	x20, x20, #0x1
  452688:	add	x21, x21, #0x1
  45268c:	str	x9, [x19, #256]
  452690:	strb	w22, [x19, x8]
  452694:	strb	w22, [x19, #264]
  452698:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  45269c:	ldr	x8, [x19, #256]
  4526a0:	ldrb	w22, [x21]
  4526a4:	cmp	x8, #0xff
  4526a8:	b.ne	452680 <feof@plt+0x4f5a0>  // b.any
  4526ac:	ldp	x8, x2, [x19, #272]
  4526b0:	mov	w1, #0xff                  	// #255
  4526b4:	mov	x0, x19
  4526b8:	strb	wzr, [x19, #255]
  4526bc:	blr	x8
  4526c0:	ldr	x9, [x19, #320]
  4526c4:	mov	x8, xzr
  4526c8:	str	xzr, [x19, #256]
  4526cc:	add	x9, x9, #0x1
  4526d0:	str	x9, [x19, #320]
  4526d4:	b	452680 <feof@plt+0x4f5a0>
  4526d8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4526dc:	mov	x22, xzr
  4526e0:	add	x23, x23, #0x57a
  4526e4:	b	452704 <feof@plt+0x4f624>
  4526e8:	add	x22, x22, #0x1
  4526ec:	add	x9, x8, #0x1
  4526f0:	cmp	x22, #0xa
  4526f4:	str	x9, [x19, #256]
  4526f8:	strb	w24, [x19, x8]
  4526fc:	strb	w24, [x19, #264]
  452700:	b.eq	453384 <feof@plt+0x502a4>  // b.none
  452704:	ldr	x8, [x19, #256]
  452708:	ldrb	w24, [x23, x22]
  45270c:	cmp	x8, #0xff
  452710:	b.ne	4526e8 <feof@plt+0x4f608>  // b.any
  452714:	ldp	x8, x2, [x19, #272]
  452718:	mov	w1, #0xff                  	// #255
  45271c:	mov	x0, x19
  452720:	strb	wzr, [x19, #255]
  452724:	blr	x8
  452728:	ldr	x9, [x19, #320]
  45272c:	mov	x8, xzr
  452730:	str	xzr, [x19, #256]
  452734:	add	x9, x9, #0x1
  452738:	str	x9, [x19, #320]
  45273c:	b	4526e8 <feof@plt+0x4f608>
  452740:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  452744:	mov	x22, xzr
  452748:	add	x23, x23, #0x585
  45274c:	b	45276c <feof@plt+0x4f68c>
  452750:	add	x22, x22, #0x1
  452754:	add	x9, x8, #0x1
  452758:	cmp	x22, #0x1d
  45275c:	str	x9, [x19, #256]
  452760:	strb	w24, [x19, x8]
  452764:	strb	w24, [x19, #264]
  452768:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  45276c:	ldr	x8, [x19, #256]
  452770:	ldrb	w24, [x23, x22]
  452774:	cmp	x8, #0xff
  452778:	b.ne	452750 <feof@plt+0x4f670>  // b.any
  45277c:	ldp	x8, x2, [x19, #272]
  452780:	mov	w1, #0xff                  	// #255
  452784:	mov	x0, x19
  452788:	strb	wzr, [x19, #255]
  45278c:	blr	x8
  452790:	ldr	x9, [x19, #320]
  452794:	mov	x8, xzr
  452798:	str	xzr, [x19, #256]
  45279c:	add	x9, x9, #0x1
  4527a0:	str	x9, [x19, #320]
  4527a4:	b	452750 <feof@plt+0x4f670>
  4527a8:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4527ac:	mov	x22, xzr
  4527b0:	add	x23, x23, #0x5a3
  4527b4:	b	4527d4 <feof@plt+0x4f6f4>
  4527b8:	add	x22, x22, #0x1
  4527bc:	add	x9, x8, #0x1
  4527c0:	cmp	x22, #0x1c
  4527c4:	str	x9, [x19, #256]
  4527c8:	strb	w24, [x19, x8]
  4527cc:	strb	w24, [x19, #264]
  4527d0:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  4527d4:	ldr	x8, [x19, #256]
  4527d8:	ldrb	w24, [x23, x22]
  4527dc:	cmp	x8, #0xff
  4527e0:	b.ne	4527b8 <feof@plt+0x4f6d8>  // b.any
  4527e4:	ldp	x8, x2, [x19, #272]
  4527e8:	mov	w1, #0xff                  	// #255
  4527ec:	mov	x0, x19
  4527f0:	strb	wzr, [x19, #255]
  4527f4:	blr	x8
  4527f8:	ldr	x9, [x19, #320]
  4527fc:	mov	x8, xzr
  452800:	str	xzr, [x19, #256]
  452804:	add	x9, x9, #0x1
  452808:	str	x9, [x19, #320]
  45280c:	b	4527b8 <feof@plt+0x4f6d8>
  452810:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  452814:	mov	x22, xzr
  452818:	add	x23, x23, #0x5c0
  45281c:	b	45283c <feof@plt+0x4f75c>
  452820:	add	x22, x22, #0x1
  452824:	add	x9, x8, #0x1
  452828:	cmp	x22, #0x8
  45282c:	str	x9, [x19, #256]
  452830:	strb	w24, [x19, x8]
  452834:	strb	w24, [x19, #264]
  452838:	b.eq	4533fc <feof@plt+0x5031c>  // b.none
  45283c:	ldr	x8, [x19, #256]
  452840:	ldrb	w24, [x23, x22]
  452844:	cmp	x8, #0xff
  452848:	b.ne	452820 <feof@plt+0x4f740>  // b.any
  45284c:	ldp	x8, x2, [x19, #272]
  452850:	mov	w1, #0xff                  	// #255
  452854:	mov	x0, x19
  452858:	strb	wzr, [x19, #255]
  45285c:	blr	x8
  452860:	ldr	x9, [x19, #320]
  452864:	mov	x8, xzr
  452868:	str	xzr, [x19, #256]
  45286c:	add	x9, x9, #0x1
  452870:	str	x9, [x19, #320]
  452874:	b	452820 <feof@plt+0x4f740>
  452878:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  45287c:	mov	x20, xzr
  452880:	add	x22, x22, #0x5c9
  452884:	b	4528a4 <feof@plt+0x4f7c4>
  452888:	add	x20, x20, #0x1
  45288c:	add	x9, x8, #0x1
  452890:	cmp	x20, #0xe
  452894:	str	x9, [x19, #256]
  452898:	strb	w23, [x19, x8]
  45289c:	strb	w23, [x19, #264]
  4528a0:	b.eq	453550 <feof@plt+0x50470>  // b.none
  4528a4:	ldr	x8, [x19, #256]
  4528a8:	ldrb	w23, [x22, x20]
  4528ac:	cmp	x8, #0xff
  4528b0:	b.ne	452888 <feof@plt+0x4f7a8>  // b.any
  4528b4:	ldp	x8, x2, [x19, #272]
  4528b8:	mov	w1, #0xff                  	// #255
  4528bc:	mov	x0, x19
  4528c0:	strb	wzr, [x19, #255]
  4528c4:	blr	x8
  4528c8:	ldr	x9, [x19, #320]
  4528cc:	mov	x8, xzr
  4528d0:	str	xzr, [x19, #256]
  4528d4:	add	x9, x9, #0x1
  4528d8:	str	x9, [x19, #320]
  4528dc:	b	452888 <feof@plt+0x4f7a8>
  4528e0:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4528e4:	mov	x22, xzr
  4528e8:	add	x23, x23, #0x54a
  4528ec:	b	45290c <feof@plt+0x4f82c>
  4528f0:	add	x22, x22, #0x1
  4528f4:	add	x9, x8, #0x1
  4528f8:	cmp	x22, #0x16
  4528fc:	str	x9, [x19, #256]
  452900:	strb	w24, [x19, x8]
  452904:	strb	w24, [x19, #264]
  452908:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  45290c:	ldr	x8, [x19, #256]
  452910:	ldrb	w24, [x23, x22]
  452914:	cmp	x8, #0xff
  452918:	b.ne	4528f0 <feof@plt+0x4f810>  // b.any
  45291c:	ldp	x8, x2, [x19, #272]
  452920:	mov	w1, #0xff                  	// #255
  452924:	mov	x0, x19
  452928:	strb	wzr, [x19, #255]
  45292c:	blr	x8
  452930:	ldr	x9, [x19, #320]
  452934:	mov	x8, xzr
  452938:	str	xzr, [x19, #256]
  45293c:	add	x9, x9, #0x1
  452940:	str	x9, [x19, #320]
  452944:	b	4528f0 <feof@plt+0x4f810>
  452948:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45294c:	mov	x22, xzr
  452950:	add	x23, x23, #0x546
  452954:	b	452974 <feof@plt+0x4f894>
  452958:	add	x22, x22, #0x1
  45295c:	add	x9, x8, #0x1
  452960:	cmp	x22, #0x1a
  452964:	str	x9, [x19, #256]
  452968:	strb	w24, [x19, x8]
  45296c:	strb	w24, [x19, #264]
  452970:	b.eq	4530ac <feof@plt+0x4ffcc>  // b.none
  452974:	ldr	x8, [x19, #256]
  452978:	ldrb	w24, [x23, x22]
  45297c:	cmp	x8, #0xff
  452980:	b.ne	452958 <feof@plt+0x4f878>  // b.any
  452984:	ldp	x8, x2, [x19, #272]
  452988:	mov	w1, #0xff                  	// #255
  45298c:	mov	x0, x19
  452990:	strb	wzr, [x19, #255]
  452994:	blr	x8
  452998:	ldr	x9, [x19, #320]
  45299c:	mov	x8, xzr
  4529a0:	str	xzr, [x19, #256]
  4529a4:	add	x9, x9, #0x1
  4529a8:	str	x9, [x19, #320]
  4529ac:	b	452958 <feof@plt+0x4f878>
  4529b0:	ldr	x1, [x21, #8]
  4529b4:	mov	x0, x19
  4529b8:	bl	457dac <feof@plt+0x54ccc>
  4529bc:	cbz	x0, 453dbc <feof@plt+0x50cdc>
  4529c0:	mov	w22, wzr
  4529c4:	ldr	w8, [x0]
  4529c8:	cmp	w8, #0x2f
  4529cc:	b.ne	4538fc <feof@plt+0x5081c>  // b.any
  4529d0:	ldr	x8, [x0, #8]
  4529d4:	cbz	x8, 4538fc <feof@plt+0x5081c>
  4529d8:	ldr	x0, [x0, #16]
  4529dc:	add	w22, w22, #0x1
  4529e0:	cbnz	x0, 4529c4 <feof@plt+0x4f8e4>
  4529e4:	b	453900 <feof@plt+0x50820>
  4529e8:	ldr	x22, [x21, #8]
  4529ec:	cbz	x22, 452a08 <feof@plt+0x4f928>
  4529f0:	ldr	w8, [x22, #4]
  4529f4:	cmp	w8, #0x1
  4529f8:	b.gt	452a08 <feof@plt+0x4f928>
  4529fc:	ldr	w9, [x19, #308]
  452a00:	cmp	w9, #0x401
  452a04:	b.lt	454874 <feof@plt+0x51794>  // b.tstop
  452a08:	mov	w8, #0x1                   	// #1
  452a0c:	str	w8, [x25]
  452a10:	ldr	x8, [x19, #256]
  452a14:	cmp	x8, #0xff
  452a18:	b.ne	452a44 <feof@plt+0x4f964>  // b.any
  452a1c:	ldp	x8, x2, [x19, #272]
  452a20:	mov	w1, #0xff                  	// #255
  452a24:	mov	x0, x19
  452a28:	strb	wzr, [x19, #255]
  452a2c:	blr	x8
  452a30:	ldr	x9, [x19, #320]
  452a34:	mov	x8, xzr
  452a38:	str	xzr, [x19, #256]
  452a3c:	add	x9, x9, #0x1
  452a40:	str	x9, [x19, #320]
  452a44:	add	x9, x8, #0x1
  452a48:	mov	w10, #0x5b                  	// #91
  452a4c:	str	x9, [x19, #256]
  452a50:	strb	w10, [x19, x8]
  452a54:	ldr	x8, [x19, #256]
  452a58:	strb	w10, [x19, #264]
  452a5c:	cmp	x8, #0xff
  452a60:	b.ne	452a8c <feof@plt+0x4f9ac>  // b.any
  452a64:	ldp	x8, x2, [x19, #272]
  452a68:	mov	w1, #0xff                  	// #255
  452a6c:	mov	x0, x19
  452a70:	strb	wzr, [x19, #255]
  452a74:	blr	x8
  452a78:	ldr	x9, [x19, #320]
  452a7c:	mov	x8, xzr
  452a80:	str	xzr, [x19, #256]
  452a84:	add	x9, x9, #0x1
  452a88:	str	x9, [x19, #320]
  452a8c:	add	x9, x8, #0x1
  452a90:	mov	w10, #0x61                  	// #97
  452a94:	str	x9, [x19, #256]
  452a98:	strb	w10, [x19, x8]
  452a9c:	ldr	x8, [x19, #256]
  452aa0:	strb	w10, [x19, #264]
  452aa4:	cmp	x8, #0xff
  452aa8:	b.ne	452ad4 <feof@plt+0x4f9f4>  // b.any
  452aac:	ldp	x8, x2, [x19, #272]
  452ab0:	mov	w1, #0xff                  	// #255
  452ab4:	mov	x0, x19
  452ab8:	strb	wzr, [x19, #255]
  452abc:	blr	x8
  452ac0:	ldr	x9, [x19, #320]
  452ac4:	mov	x8, xzr
  452ac8:	str	xzr, [x19, #256]
  452acc:	add	x9, x9, #0x1
  452ad0:	str	x9, [x19, #320]
  452ad4:	add	x9, x8, #0x1
  452ad8:	mov	w10, #0x62                  	// #98
  452adc:	str	x9, [x19, #256]
  452ae0:	strb	w10, [x19, x8]
  452ae4:	ldr	x8, [x19, #256]
  452ae8:	strb	w10, [x19, #264]
  452aec:	cmp	x8, #0xff
  452af0:	b.ne	452b1c <feof@plt+0x4fa3c>  // b.any
  452af4:	ldp	x8, x2, [x19, #272]
  452af8:	mov	w1, #0xff                  	// #255
  452afc:	mov	x0, x19
  452b00:	strb	wzr, [x19, #255]
  452b04:	blr	x8
  452b08:	ldr	x9, [x19, #320]
  452b0c:	mov	x8, xzr
  452b10:	str	xzr, [x19, #256]
  452b14:	add	x9, x9, #0x1
  452b18:	str	x9, [x19, #320]
  452b1c:	add	x9, x8, #0x1
  452b20:	mov	w10, #0x69                  	// #105
  452b24:	str	x9, [x19, #256]
  452b28:	strb	w10, [x19, x8]
  452b2c:	ldr	x8, [x19, #256]
  452b30:	strb	w10, [x19, #264]
  452b34:	cmp	x8, #0xff
  452b38:	b.ne	452b64 <feof@plt+0x4fa84>  // b.any
  452b3c:	ldp	x8, x2, [x19, #272]
  452b40:	mov	w1, #0xff                  	// #255
  452b44:	mov	x0, x19
  452b48:	strb	wzr, [x19, #255]
  452b4c:	blr	x8
  452b50:	ldr	x9, [x19, #320]
  452b54:	mov	x8, xzr
  452b58:	str	xzr, [x19, #256]
  452b5c:	add	x9, x9, #0x1
  452b60:	str	x9, [x19, #320]
  452b64:	add	x9, x8, #0x1
  452b68:	mov	w10, #0x3a                  	// #58
  452b6c:	b	452d54 <feof@plt+0x4fc74>
  452b70:	ldr	x22, [x21, #8]
  452b74:	cbz	x22, 452b90 <feof@plt+0x4fab0>
  452b78:	ldr	w8, [x22, #4]
  452b7c:	cmp	w8, #0x1
  452b80:	b.gt	452b90 <feof@plt+0x4fab0>
  452b84:	ldr	w9, [x19, #308]
  452b88:	cmp	w9, #0x401
  452b8c:	b.lt	4548c8 <feof@plt+0x517e8>  // b.tstop
  452b90:	mov	w8, #0x1                   	// #1
  452b94:	str	w8, [x25]
  452b98:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  452b9c:	mov	x22, xzr
  452ba0:	add	x23, x23, #0x5d8
  452ba4:	b	452bc4 <feof@plt+0x4fae4>
  452ba8:	add	x22, x22, #0x1
  452bac:	add	x9, x8, #0x1
  452bb0:	cmp	x22, #0x8
  452bb4:	str	x9, [x19, #256]
  452bb8:	strb	w24, [x19, x8]
  452bbc:	strb	w24, [x19, #264]
  452bc0:	b.eq	452d60 <feof@plt+0x4fc80>  // b.none
  452bc4:	ldr	x8, [x19, #256]
  452bc8:	ldrb	w24, [x23, x22]
  452bcc:	cmp	x8, #0xff
  452bd0:	b.ne	452ba8 <feof@plt+0x4fac8>  // b.any
  452bd4:	ldp	x8, x2, [x19, #272]
  452bd8:	mov	w1, #0xff                  	// #255
  452bdc:	mov	x0, x19
  452be0:	strb	wzr, [x19, #255]
  452be4:	blr	x8
  452be8:	ldr	x9, [x19, #320]
  452bec:	mov	x8, xzr
  452bf0:	str	xzr, [x19, #256]
  452bf4:	add	x9, x9, #0x1
  452bf8:	str	x9, [x19, #320]
  452bfc:	b	452ba8 <feof@plt+0x4fac8>
  452c00:	mov	w23, wzr
  452c04:	ldr	x8, [x19, #256]
  452c08:	cmp	x8, #0xff
  452c0c:	b.ne	452c38 <feof@plt+0x4fb58>  // b.any
  452c10:	ldp	x8, x2, [x19, #272]
  452c14:	mov	w1, #0xff                  	// #255
  452c18:	mov	x0, x19
  452c1c:	strb	wzr, [x19, #255]
  452c20:	blr	x8
  452c24:	ldr	x9, [x19, #320]
  452c28:	mov	x8, xzr
  452c2c:	str	xzr, [x19, #256]
  452c30:	add	x9, x9, #0x1
  452c34:	str	x9, [x19, #320]
  452c38:	add	x9, x8, #0x1
  452c3c:	mov	w10, #0x28                  	// #40
  452c40:	str	x9, [x19, #256]
  452c44:	strb	w10, [x19, x8]
  452c48:	strb	w10, [x19, #264]
  452c4c:	ldr	x22, [x21, #8]
  452c50:	cbz	x22, 452c6c <feof@plt+0x4fb8c>
  452c54:	ldr	w8, [x22, #4]
  452c58:	cmp	w8, #0x1
  452c5c:	b.gt	452c6c <feof@plt+0x4fb8c>
  452c60:	ldr	w9, [x19, #308]
  452c64:	cmp	w9, #0x401
  452c68:	b.lt	45444c <feof@plt+0x5136c>  // b.tstop
  452c6c:	mov	w8, #0x1                   	// #1
  452c70:	str	w8, [x25]
  452c74:	ldr	x8, [x19, #256]
  452c78:	cmp	x8, #0xff
  452c7c:	b.ne	452ca8 <feof@plt+0x4fbc8>  // b.any
  452c80:	ldp	x8, x2, [x19, #272]
  452c84:	mov	w1, #0xff                  	// #255
  452c88:	mov	x0, x19
  452c8c:	strb	wzr, [x19, #255]
  452c90:	blr	x8
  452c94:	ldr	x9, [x19, #320]
  452c98:	mov	x8, xzr
  452c9c:	str	xzr, [x19, #256]
  452ca0:	add	x9, x9, #0x1
  452ca4:	str	x9, [x19, #320]
  452ca8:	add	x9, x8, #0x1
  452cac:	mov	w10, #0x29                  	// #41
  452cb0:	str	x9, [x19, #256]
  452cb4:	strb	w10, [x19, x8]
  452cb8:	strb	w10, [x19, #264]
  452cbc:	ldr	w8, [x21]
  452cc0:	cmp	w8, #0x3e
  452cc4:	b.ne	452d10 <feof@plt+0x4fc30>  // b.any
  452cc8:	ldr	x8, [x19, #256]
  452ccc:	cmp	x8, #0xff
  452cd0:	b.ne	452cfc <feof@plt+0x4fc1c>  // b.any
  452cd4:	ldp	x8, x2, [x19, #272]
  452cd8:	mov	w1, #0xff                  	// #255
  452cdc:	mov	x0, x19
  452ce0:	strb	wzr, [x19, #255]
  452ce4:	blr	x8
  452ce8:	ldr	x9, [x19, #320]
  452cec:	mov	x8, xzr
  452cf0:	str	xzr, [x19, #256]
  452cf4:	add	x9, x9, #0x1
  452cf8:	str	x9, [x19, #320]
  452cfc:	add	x9, x8, #0x1
  452d00:	mov	w10, #0x2d                  	// #45
  452d04:	str	x9, [x19, #256]
  452d08:	strb	w10, [x19, x8]
  452d0c:	strb	w10, [x19, #264]
  452d10:	cmp	w23, #0x8
  452d14:	b.ne	452f10 <feof@plt+0x4fe30>  // b.any
  452d18:	ldr	x8, [x19, #256]
  452d1c:	cmp	x8, #0xff
  452d20:	b.ne	452d4c <feof@plt+0x4fc6c>  // b.any
  452d24:	ldp	x8, x2, [x19, #272]
  452d28:	mov	w1, #0xff                  	// #255
  452d2c:	mov	x0, x19
  452d30:	strb	wzr, [x19, #255]
  452d34:	blr	x8
  452d38:	ldr	x9, [x19, #320]
  452d3c:	mov	x8, xzr
  452d40:	str	xzr, [x19, #256]
  452d44:	add	x9, x9, #0x1
  452d48:	str	x9, [x19, #320]
  452d4c:	add	x9, x8, #0x1
  452d50:	mov	w10, #0x5b                  	// #91
  452d54:	str	x9, [x19, #256]
  452d58:	strb	w10, [x19, x8]
  452d5c:	strb	w10, [x19, #264]
  452d60:	ldr	x21, [x21, #16]
  452d64:	cbz	x21, 452d80 <feof@plt+0x4fca0>
  452d68:	ldr	w8, [x21, #4]
  452d6c:	cmp	w8, #0x1
  452d70:	b.gt	452d80 <feof@plt+0x4fca0>
  452d74:	ldr	w9, [x19, #308]
  452d78:	cmp	w9, #0x401
  452d7c:	b.lt	4538a4 <feof@plt+0x507c4>  // b.tstop
  452d80:	mov	w8, #0x1                   	// #1
  452d84:	str	w8, [x25]
  452d88:	ldr	x8, [x19, #256]
  452d8c:	cmp	x8, #0xff
  452d90:	b.ne	452dbc <feof@plt+0x4fcdc>  // b.any
  452d94:	ldp	x8, x2, [x19, #272]
  452d98:	mov	w1, #0xff                  	// #255
  452d9c:	mov	x0, x19
  452da0:	strb	wzr, [x19, #255]
  452da4:	blr	x8
  452da8:	ldr	x9, [x19, #320]
  452dac:	mov	x8, xzr
  452db0:	str	xzr, [x19, #256]
  452db4:	add	x9, x9, #0x1
  452db8:	str	x9, [x19, #320]
  452dbc:	add	x9, x8, #0x1
  452dc0:	mov	w10, #0x5d                  	// #93
  452dc4:	b	4559c8 <feof@plt+0x528e8>
  452dc8:	ldr	x22, [x21, #8]
  452dcc:	cbz	x22, 452de8 <feof@plt+0x4fd08>
  452dd0:	ldr	w8, [x22, #4]
  452dd4:	cmp	w8, #0x1
  452dd8:	b.gt	452de8 <feof@plt+0x4fd08>
  452ddc:	ldr	w9, [x19, #308]
  452de0:	cmp	w9, #0x401
  452de4:	b.lt	45491c <feof@plt+0x5183c>  // b.tstop
  452de8:	mov	w8, #0x1                   	// #1
  452dec:	str	w8, [x25]
  452df0:	ldr	x8, [x19, #256]
  452df4:	cmp	x8, #0xff
  452df8:	b.ne	452e24 <feof@plt+0x4fd44>  // b.any
  452dfc:	ldp	x8, x2, [x19, #272]
  452e00:	mov	w1, #0xff                  	// #255
  452e04:	mov	x0, x19
  452e08:	strb	wzr, [x19, #255]
  452e0c:	blr	x8
  452e10:	ldr	x9, [x19, #320]
  452e14:	mov	x8, xzr
  452e18:	str	xzr, [x19, #256]
  452e1c:	add	x9, x9, #0x1
  452e20:	str	x9, [x19, #320]
  452e24:	add	x9, x8, #0x1
  452e28:	mov	w10, #0x2d                  	// #45
  452e2c:	str	x9, [x19, #256]
  452e30:	strb	w10, [x19, x8]
  452e34:	ldr	x8, [x19, #256]
  452e38:	strb	w10, [x19, #264]
  452e3c:	cmp	x8, #0xff
  452e40:	b.ne	452e6c <feof@plt+0x4fd8c>  // b.any
  452e44:	ldp	x8, x2, [x19, #272]
  452e48:	mov	w1, #0xff                  	// #255
  452e4c:	mov	x0, x19
  452e50:	strb	wzr, [x19, #255]
  452e54:	blr	x8
  452e58:	ldr	x9, [x19, #320]
  452e5c:	mov	x8, xzr
  452e60:	str	xzr, [x19, #256]
  452e64:	add	x9, x9, #0x1
  452e68:	str	x9, [x19, #320]
  452e6c:	add	x9, x8, #0x1
  452e70:	mov	w10, #0x69                  	// #105
  452e74:	str	x9, [x19, #256]
  452e78:	strb	w10, [x19, x8]
  452e7c:	ldr	x8, [x19, #256]
  452e80:	strb	w10, [x19, #264]
  452e84:	cmp	x8, #0xff
  452e88:	b.ne	452eb4 <feof@plt+0x4fdd4>  // b.any
  452e8c:	ldp	x8, x2, [x19, #272]
  452e90:	mov	w1, #0xff                  	// #255
  452e94:	mov	x0, x19
  452e98:	strb	wzr, [x19, #255]
  452e9c:	blr	x8
  452ea0:	ldr	x9, [x19, #320]
  452ea4:	mov	x8, xzr
  452ea8:	str	xzr, [x19, #256]
  452eac:	add	x9, x9, #0x1
  452eb0:	str	x9, [x19, #320]
  452eb4:	add	x9, x8, #0x1
  452eb8:	mov	w10, #0x6e                  	// #110
  452ebc:	str	x9, [x19, #256]
  452ec0:	strb	w10, [x19, x8]
  452ec4:	ldr	x8, [x19, #256]
  452ec8:	strb	w10, [x19, #264]
  452ecc:	cmp	x8, #0xff
  452ed0:	b.ne	452efc <feof@plt+0x4fe1c>  // b.any
  452ed4:	ldp	x8, x2, [x19, #272]
  452ed8:	mov	w1, #0xff                  	// #255
  452edc:	mov	x0, x19
  452ee0:	strb	wzr, [x19, #255]
  452ee4:	blr	x8
  452ee8:	ldr	x9, [x19, #320]
  452eec:	mov	x8, xzr
  452ef0:	str	xzr, [x19, #256]
  452ef4:	add	x9, x9, #0x1
  452ef8:	str	x9, [x19, #320]
  452efc:	add	x9, x8, #0x1
  452f00:	mov	w10, #0x2d                  	// #45
  452f04:	str	x9, [x19, #256]
  452f08:	strb	w10, [x19, x8]
  452f0c:	strb	w10, [x19, #264]
  452f10:	ldr	x21, [x21, #16]
  452f14:	cbnz	x21, 4530b4 <feof@plt+0x4ffd4>
  452f18:	b	4530cc <feof@plt+0x4ffec>
  452f1c:	ldr	x22, [x21, #16]
  452f20:	cbz	x22, 452f3c <feof@plt+0x4fe5c>
  452f24:	ldr	w8, [x22, #4]
  452f28:	cmp	w8, #0x1
  452f2c:	b.gt	452f3c <feof@plt+0x4fe5c>
  452f30:	ldr	w9, [x19, #308]
  452f34:	cmp	w9, #0x401
  452f38:	b.lt	454970 <feof@plt+0x51890>  // b.tstop
  452f3c:	mov	w8, #0x1                   	// #1
  452f40:	str	w8, [x25]
  452f44:	ldr	x8, [x19, #256]
  452f48:	cmp	x8, #0xff
  452f4c:	b.ne	452f78 <feof@plt+0x4fe98>  // b.any
  452f50:	ldp	x8, x2, [x19, #272]
  452f54:	mov	w1, #0xff                  	// #255
  452f58:	mov	x0, x19
  452f5c:	strb	wzr, [x19, #255]
  452f60:	blr	x8
  452f64:	ldr	x9, [x19, #320]
  452f68:	mov	x8, xzr
  452f6c:	str	xzr, [x19, #256]
  452f70:	add	x9, x9, #0x1
  452f74:	str	x9, [x19, #320]
  452f78:	add	x9, x8, #0x1
  452f7c:	mov	w10, #0x20                  	// #32
  452f80:	str	x9, [x19, #256]
  452f84:	strb	w10, [x19, x8]
  452f88:	ldr	x8, [x19, #256]
  452f8c:	strb	w10, [x19, #264]
  452f90:	cmp	x8, #0xff
  452f94:	b.ne	452fc0 <feof@plt+0x4fee0>  // b.any
  452f98:	ldp	x8, x2, [x19, #272]
  452f9c:	mov	w1, #0xff                  	// #255
  452fa0:	mov	x0, x19
  452fa4:	strb	wzr, [x19, #255]
  452fa8:	blr	x8
  452fac:	ldr	x9, [x19, #320]
  452fb0:	mov	x8, xzr
  452fb4:	str	xzr, [x19, #256]
  452fb8:	add	x9, x9, #0x1
  452fbc:	str	x9, [x19, #320]
  452fc0:	add	x9, x8, #0x1
  452fc4:	mov	w10, #0x66                  	// #102
  452fc8:	str	x9, [x19, #256]
  452fcc:	strb	w10, [x19, x8]
  452fd0:	ldr	x8, [x19, #256]
  452fd4:	strb	w10, [x19, #264]
  452fd8:	cmp	x8, #0xff
  452fdc:	b.ne	453008 <feof@plt+0x4ff28>  // b.any
  452fe0:	ldp	x8, x2, [x19, #272]
  452fe4:	mov	w1, #0xff                  	// #255
  452fe8:	mov	x0, x19
  452fec:	strb	wzr, [x19, #255]
  452ff0:	blr	x8
  452ff4:	ldr	x9, [x19, #320]
  452ff8:	mov	x8, xzr
  452ffc:	str	xzr, [x19, #256]
  453000:	add	x9, x9, #0x1
  453004:	str	x9, [x19, #320]
  453008:	add	x9, x8, #0x1
  45300c:	mov	w10, #0x6f                  	// #111
  453010:	str	x9, [x19, #256]
  453014:	strb	w10, [x19, x8]
  453018:	ldr	x8, [x19, #256]
  45301c:	strb	w10, [x19, #264]
  453020:	cmp	x8, #0xff
  453024:	b.ne	453050 <feof@plt+0x4ff70>  // b.any
  453028:	ldp	x8, x2, [x19, #272]
  45302c:	mov	w1, #0xff                  	// #255
  453030:	mov	x0, x19
  453034:	strb	wzr, [x19, #255]
  453038:	blr	x8
  45303c:	ldr	x9, [x19, #320]
  453040:	mov	x8, xzr
  453044:	str	xzr, [x19, #256]
  453048:	add	x9, x9, #0x1
  45304c:	str	x9, [x19, #320]
  453050:	add	x9, x8, #0x1
  453054:	mov	w10, #0x72                  	// #114
  453058:	str	x9, [x19, #256]
  45305c:	strb	w10, [x19, x8]
  453060:	ldr	x8, [x19, #256]
  453064:	strb	w10, [x19, #264]
  453068:	cmp	x8, #0xff
  45306c:	b.ne	453098 <feof@plt+0x4ffb8>  // b.any
  453070:	ldp	x8, x2, [x19, #272]
  453074:	mov	w1, #0xff                  	// #255
  453078:	mov	x0, x19
  45307c:	strb	wzr, [x19, #255]
  453080:	blr	x8
  453084:	ldr	x9, [x19, #320]
  453088:	mov	x8, xzr
  45308c:	str	xzr, [x19, #256]
  453090:	add	x9, x9, #0x1
  453094:	str	x9, [x19, #320]
  453098:	add	x9, x8, #0x1
  45309c:	mov	w10, #0x20                  	// #32
  4530a0:	str	x9, [x19, #256]
  4530a4:	strb	w10, [x19, x8]
  4530a8:	strb	w10, [x19, #264]
  4530ac:	ldr	x21, [x21, #8]
  4530b0:	cbz	x21, 4530cc <feof@plt+0x4ffec>
  4530b4:	ldr	w8, [x21, #4]
  4530b8:	cmp	w8, #0x1
  4530bc:	b.gt	4530cc <feof@plt+0x4ffec>
  4530c0:	ldr	w9, [x19, #308]
  4530c4:	cmp	w9, #0x401
  4530c8:	b.lt	4530f4 <feof@plt+0x50014>  // b.tstop
  4530cc:	mov	w8, #0x1                   	// #1
  4530d0:	str	w8, [x25]
  4530d4:	ldp	x20, x19, [sp, #240]
  4530d8:	ldp	x22, x21, [sp, #224]
  4530dc:	ldp	x24, x23, [sp, #208]
  4530e0:	ldp	x26, x25, [sp, #192]
  4530e4:	ldp	x28, x27, [sp, #176]
  4530e8:	ldp	x29, x30, [sp, #160]
  4530ec:	add	sp, sp, #0x100
  4530f0:	ret
  4530f4:	add	w8, w8, #0x1
  4530f8:	add	w9, w9, #0x1
  4530fc:	str	w8, [x21, #4]
  453100:	str	w9, [x19, #308]
  453104:	str	x21, [sp, #16]
  453108:	ldr	x8, [x19, #328]
  45310c:	add	x9, sp, #0x10
  453110:	mov	x0, x19
  453114:	mov	w1, w20
  453118:	mov	x2, x21
  45311c:	str	x8, [sp, #24]
  453120:	str	x9, [x19, #328]
  453124:	bl	4509c8 <feof@plt+0x4d8e8>
  453128:	ldr	x8, [sp, #24]
  45312c:	str	x8, [x19, #328]
  453130:	ldr	w8, [x21, #4]
  453134:	sub	w8, w8, #0x1
  453138:	str	w8, [x21, #4]
  45313c:	ldr	w8, [x19, #308]
  453140:	sub	w8, w8, #0x1
  453144:	str	w8, [x19, #308]
  453148:	b	4530d4 <feof@plt+0x4fff4>
  45314c:	ldr	x22, [x21, #8]
  453150:	ldrb	w8, [x22]
  453154:	sub	w8, w8, #0x61
  453158:	cmp	w8, #0x19
  45315c:	b.hi	4531ac <feof@plt+0x500cc>  // b.pmore
  453160:	ldr	x8, [x19, #256]
  453164:	cmp	x8, #0xff
  453168:	b.ne	453194 <feof@plt+0x500b4>  // b.any
  45316c:	ldp	x8, x2, [x19, #272]
  453170:	mov	w1, #0xff                  	// #255
  453174:	mov	x0, x19
  453178:	strb	wzr, [x19, #255]
  45317c:	blr	x8
  453180:	ldr	x9, [x19, #320]
  453184:	mov	x8, xzr
  453188:	str	xzr, [x19, #256]
  45318c:	add	x9, x9, #0x1
  453190:	str	x9, [x19, #320]
  453194:	add	x9, x8, #0x1
  453198:	mov	w10, #0x20                  	// #32
  45319c:	str	x9, [x19, #256]
  4531a0:	strb	w10, [x19, x8]
  4531a4:	strb	w10, [x19, #264]
  4531a8:	ldr	x22, [x21, #8]
  4531ac:	sub	x8, x20, #0x1
  4531b0:	ldrb	w9, [x22, x8]
  4531b4:	cmp	w9, #0x20
  4531b8:	csel	w8, w8, w20, eq  // eq = none
  4531bc:	cbz	w8, 4530d4 <feof@plt+0x4fff4>
  4531c0:	sxtw	x20, w8
  4531c4:	b	4531e4 <feof@plt+0x50104>
  4531c8:	add	x9, x8, #0x1
  4531cc:	subs	x20, x20, #0x1
  4531d0:	add	x22, x22, #0x1
  4531d4:	str	x9, [x19, #256]
  4531d8:	strb	w21, [x19, x8]
  4531dc:	strb	w21, [x19, #264]
  4531e0:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  4531e4:	ldr	x8, [x19, #256]
  4531e8:	ldrb	w21, [x22]
  4531ec:	cmp	x8, #0xff
  4531f0:	b.ne	4531c8 <feof@plt+0x500e8>  // b.any
  4531f4:	ldp	x8, x2, [x19, #272]
  4531f8:	mov	w1, #0xff                  	// #255
  4531fc:	mov	x0, x19
  453200:	strb	wzr, [x19, #255]
  453204:	blr	x8
  453208:	ldr	x9, [x19, #320]
  45320c:	mov	x8, xzr
  453210:	str	xzr, [x19, #256]
  453214:	add	x9, x9, #0x1
  453218:	str	x9, [x19, #320]
  45321c:	b	4531c8 <feof@plt+0x500e8>
  453220:	ldr	x8, [x19, #368]
  453224:	cbz	x8, 453238 <feof@plt+0x50158>
  453228:	ldr	x9, [x19, #288]
  45322c:	sub	x10, x29, #0x10
  453230:	stp	x9, x8, [x29, #-16]
  453234:	str	x10, [x19, #288]
  453238:	ldr	x22, [x21, #8]
  45323c:	ldr	w9, [x22]
  453240:	cmp	w9, #0x4
  453244:	b.ne	453870 <feof@plt+0x50790>  // b.any
  453248:	ldr	x22, [x22, #8]
  45324c:	cbz	x22, 453268 <feof@plt+0x50188>
  453250:	ldr	w9, [x22, #4]
  453254:	cmp	w9, #0x1
  453258:	b.gt	453268 <feof@plt+0x50188>
  45325c:	ldr	w10, [x19, #308]
  453260:	cmp	w10, #0x401
  453264:	b.lt	454db0 <feof@plt+0x51cd0>  // b.tstop
  453268:	mov	w9, #0x1                   	// #1
  45326c:	str	w9, [x25]
  453270:	cbz	x8, 45327c <feof@plt+0x5019c>
  453274:	ldur	x8, [x29, #-16]
  453278:	str	x8, [x19, #288]
  45327c:	ldrb	w8, [x19, #264]
  453280:	cmp	w8, #0x3c
  453284:	b.ne	4532d0 <feof@plt+0x501f0>  // b.any
  453288:	ldr	x8, [x19, #256]
  45328c:	cmp	x8, #0xff
  453290:	b.ne	4532bc <feof@plt+0x501dc>  // b.any
  453294:	ldp	x8, x2, [x19, #272]
  453298:	mov	w1, #0xff                  	// #255
  45329c:	mov	x0, x19
  4532a0:	strb	wzr, [x19, #255]
  4532a4:	blr	x8
  4532a8:	ldr	x9, [x19, #320]
  4532ac:	mov	x8, xzr
  4532b0:	str	xzr, [x19, #256]
  4532b4:	add	x9, x9, #0x1
  4532b8:	str	x9, [x19, #320]
  4532bc:	add	x9, x8, #0x1
  4532c0:	mov	w10, #0x20                  	// #32
  4532c4:	str	x9, [x19, #256]
  4532c8:	strb	w10, [x19, x8]
  4532cc:	strb	w10, [x19, #264]
  4532d0:	ldr	x8, [x19, #256]
  4532d4:	cmp	x8, #0xff
  4532d8:	b.ne	453304 <feof@plt+0x50224>  // b.any
  4532dc:	ldp	x8, x2, [x19, #272]
  4532e0:	mov	w1, #0xff                  	// #255
  4532e4:	mov	x0, x19
  4532e8:	strb	wzr, [x19, #255]
  4532ec:	blr	x8
  4532f0:	ldr	x9, [x19, #320]
  4532f4:	mov	x8, xzr
  4532f8:	str	xzr, [x19, #256]
  4532fc:	add	x9, x9, #0x1
  453300:	str	x9, [x19, #320]
  453304:	add	x9, x8, #0x1
  453308:	mov	w10, #0x3c                  	// #60
  45330c:	str	x9, [x19, #256]
  453310:	strb	w10, [x19, x8]
  453314:	strb	w10, [x19, #264]
  453318:	ldr	x8, [x21, #8]
  45331c:	ldr	x21, [x8, #16]
  453320:	cbz	x21, 45333c <feof@plt+0x5025c>
  453324:	ldr	w8, [x21, #4]
  453328:	cmp	w8, #0x1
  45332c:	b.gt	45333c <feof@plt+0x5025c>
  453330:	ldr	w9, [x19, #308]
  453334:	cmp	w9, #0x401
  453338:	b.lt	454e0c <feof@plt+0x51d2c>  // b.tstop
  45333c:	mov	w8, #0x1                   	// #1
  453340:	str	w8, [x25]
  453344:	ldr	x8, [x19, #256]
  453348:	cmp	x8, #0xff
  45334c:	b.ne	453378 <feof@plt+0x50298>  // b.any
  453350:	ldp	x8, x2, [x19, #272]
  453354:	mov	w1, #0xff                  	// #255
  453358:	mov	x0, x19
  45335c:	strb	wzr, [x19, #255]
  453360:	blr	x8
  453364:	ldr	x9, [x19, #320]
  453368:	mov	x8, xzr
  45336c:	str	xzr, [x19, #256]
  453370:	add	x9, x9, #0x1
  453374:	str	x9, [x19, #320]
  453378:	add	x9, x8, #0x1
  45337c:	mov	w10, #0x3e                  	// #62
  453380:	b	4559c8 <feof@plt+0x528e8>
  453384:	ldr	x21, [x21, #8]
  453388:	cbz	x21, 455984 <feof@plt+0x528a4>
  45338c:	ldr	w8, [x21, #4]
  453390:	cmp	w8, #0x1
  453394:	b.gt	455984 <feof@plt+0x528a4>
  453398:	ldr	w9, [x19, #308]
  45339c:	cmp	w9, #0x401
  4533a0:	b.ge	455984 <feof@plt+0x528a4>  // b.tcont
  4533a4:	add	w8, w8, #0x1
  4533a8:	add	w9, w9, #0x1
  4533ac:	str	w8, [x21, #4]
  4533b0:	str	w9, [x19, #308]
  4533b4:	str	x21, [sp, #16]
  4533b8:	ldr	x8, [x19, #328]
  4533bc:	add	x9, sp, #0x10
  4533c0:	mov	x0, x19
  4533c4:	mov	w1, w20
  4533c8:	mov	x2, x21
  4533cc:	str	x8, [sp, #24]
  4533d0:	str	x9, [x19, #328]
  4533d4:	bl	4509c8 <feof@plt+0x4d8e8>
  4533d8:	ldr	x8, [sp, #24]
  4533dc:	str	x8, [x19, #328]
  4533e0:	ldr	w8, [x21, #4]
  4533e4:	sub	w8, w8, #0x1
  4533e8:	str	w8, [x21, #4]
  4533ec:	ldr	w8, [x19, #308]
  4533f0:	sub	w8, w8, #0x1
  4533f4:	str	w8, [x19, #308]
  4533f8:	b	45598c <feof@plt+0x528ac>
  4533fc:	ldr	w8, [x19, #312]
  453400:	add	w8, w8, #0x1
  453404:	str	w8, [x19, #312]
  453408:	ldr	x22, [x21, #8]
  45340c:	cbz	x22, 453428 <feof@plt+0x50348>
  453410:	ldr	w9, [x22, #4]
  453414:	cmp	w9, #0x1
  453418:	b.gt	453428 <feof@plt+0x50348>
  45341c:	ldr	w10, [x19, #308]
  453420:	cmp	w10, #0x401
  453424:	b.lt	4549c4 <feof@plt+0x518e4>  // b.tstop
  453428:	mov	w9, #0x1                   	// #1
  45342c:	str	w9, [x25]
  453430:	ldr	x9, [x19, #256]
  453434:	sub	w8, w8, #0x1
  453438:	str	w8, [x19, #312]
  45343c:	cmp	x9, #0xff
  453440:	b.ne	45346c <feof@plt+0x5038c>  // b.any
  453444:	ldp	x8, x2, [x19, #272]
  453448:	mov	w1, #0xff                  	// #255
  45344c:	mov	x0, x19
  453450:	strb	wzr, [x19, #255]
  453454:	blr	x8
  453458:	ldr	x8, [x19, #320]
  45345c:	mov	x9, xzr
  453460:	str	xzr, [x19, #256]
  453464:	add	x8, x8, #0x1
  453468:	str	x8, [x19, #320]
  45346c:	add	x8, x9, #0x1
  453470:	mov	w10, #0x29                  	// #41
  453474:	str	x8, [x19, #256]
  453478:	strb	w10, [x19, x9]
  45347c:	ldr	x8, [x19, #256]
  453480:	strb	w10, [x19, #264]
  453484:	cmp	x8, #0xff
  453488:	b.ne	4534b4 <feof@plt+0x503d4>  // b.any
  45348c:	ldp	x8, x2, [x19, #272]
  453490:	mov	w1, #0xff                  	// #255
  453494:	mov	x0, x19
  453498:	strb	wzr, [x19, #255]
  45349c:	blr	x8
  4534a0:	ldr	x9, [x19, #320]
  4534a4:	mov	x8, xzr
  4534a8:	str	xzr, [x19, #256]
  4534ac:	add	x9, x9, #0x1
  4534b0:	str	x9, [x19, #320]
  4534b4:	add	x9, x8, #0x1
  4534b8:	mov	w10, #0x23                  	// #35
  4534bc:	str	x9, [x19, #256]
  4534c0:	strb	w10, [x19, x8]
  4534c4:	strb	w10, [x19, #264]
  4534c8:	ldr	w8, [x21, #16]
  4534cc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  4534d0:	add	x1, x1, #0x229
  4534d4:	add	x0, sp, #0x10
  4534d8:	add	w2, w8, #0x1
  4534dc:	bl	402c30 <sprintf@plt>
  4534e0:	add	x0, sp, #0x10
  4534e4:	bl	402a50 <strlen@plt>
  4534e8:	cbz	x0, 4547d8 <feof@plt+0x516f8>
  4534ec:	mov	x20, x0
  4534f0:	add	x21, sp, #0x10
  4534f4:	b	453514 <feof@plt+0x50434>
  4534f8:	add	x9, x8, #0x1
  4534fc:	subs	x20, x20, #0x1
  453500:	add	x21, x21, #0x1
  453504:	str	x9, [x19, #256]
  453508:	strb	w22, [x19, x8]
  45350c:	strb	w22, [x19, #264]
  453510:	b.eq	4547d8 <feof@plt+0x516f8>  // b.none
  453514:	ldr	x8, [x19, #256]
  453518:	ldrb	w22, [x21]
  45351c:	cmp	x8, #0xff
  453520:	b.ne	4534f8 <feof@plt+0x50418>  // b.any
  453524:	ldp	x8, x2, [x19, #272]
  453528:	mov	w1, #0xff                  	// #255
  45352c:	mov	x0, x19
  453530:	strb	wzr, [x19, #255]
  453534:	blr	x8
  453538:	ldr	x9, [x19, #320]
  45353c:	mov	x8, xzr
  453540:	str	xzr, [x19, #256]
  453544:	add	x9, x9, #0x1
  453548:	str	x9, [x19, #320]
  45354c:	b	4534f8 <feof@plt+0x50418>
  453550:	ldr	w8, [x21, #8]
  453554:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  453558:	add	x1, x1, #0x229
  45355c:	add	x0, sp, #0x10
  453560:	add	w2, w8, #0x1
  453564:	bl	402c30 <sprintf@plt>
  453568:	add	x0, sp, #0x10
  45356c:	bl	402a50 <strlen@plt>
  453570:	cbz	x0, 4547d8 <feof@plt+0x516f8>
  453574:	mov	x20, x0
  453578:	add	x21, sp, #0x10
  45357c:	b	45359c <feof@plt+0x504bc>
  453580:	add	x9, x8, #0x1
  453584:	subs	x20, x20, #0x1
  453588:	add	x21, x21, #0x1
  45358c:	str	x9, [x19, #256]
  453590:	strb	w22, [x19, x8]
  453594:	strb	w22, [x19, #264]
  453598:	b.eq	4547d8 <feof@plt+0x516f8>  // b.none
  45359c:	ldr	x8, [x19, #256]
  4535a0:	ldrb	w22, [x21]
  4535a4:	cmp	x8, #0xff
  4535a8:	b.ne	453580 <feof@plt+0x504a0>  // b.any
  4535ac:	ldp	x8, x2, [x19, #272]
  4535b0:	mov	w1, #0xff                  	// #255
  4535b4:	mov	x0, x19
  4535b8:	strb	wzr, [x19, #255]
  4535bc:	blr	x8
  4535c0:	ldr	x9, [x19, #320]
  4535c4:	mov	x8, xzr
  4535c8:	str	xzr, [x19, #256]
  4535cc:	add	x9, x9, #0x1
  4535d0:	str	x9, [x19, #320]
  4535d4:	b	453580 <feof@plt+0x504a0>
  4535d8:	mov	x21, x9
  4535dc:	b	450a30 <feof@plt+0x4d950>
  4535e0:	cmp	w21, #0x1
  4535e4:	b.lt	4530d4 <feof@plt+0x4fff4>  // b.tstop
  4535e8:	add	x20, x22, x21
  4535ec:	ldrb	w24, [x22]
  4535f0:	cmp	w24, #0x5f
  4535f4:	b.ne	453690 <feof@plt+0x505b0>  // b.any
  4535f8:	sub	x8, x20, x22
  4535fc:	cmp	x8, #0x4
  453600:	b.lt	453690 <feof@plt+0x505b0>  // b.tstop
  453604:	ldrb	w8, [x22, #1]
  453608:	cmp	w8, #0x5f
  45360c:	b.ne	45368c <feof@plt+0x505ac>  // b.any
  453610:	ldrb	w8, [x22, #2]
  453614:	cmp	w8, #0x55
  453618:	b.ne	45368c <feof@plt+0x505ac>  // b.any
  45361c:	add	x21, x22, #0x3
  453620:	cmp	x21, x20
  453624:	b.cs	45368c <feof@plt+0x505ac>  // b.hs, b.nlast
  453628:	mov	x23, xzr
  45362c:	b	453648 <feof@plt+0x50568>
  453630:	mov	x9, #0xffffffffffffffd0    	// #-48
  453634:	add	x8, x9, x8
  453638:	add	x21, x21, #0x1
  45363c:	cmp	x20, x21
  453640:	add	x23, x8, x23, lsl #4
  453644:	b.eq	45368c <feof@plt+0x505ac>  // b.none
  453648:	ldrb	w8, [x21]
  45364c:	sub	w9, w8, #0x30
  453650:	and	w9, w9, #0xff
  453654:	cmp	w9, #0xa
  453658:	b.cc	453630 <feof@plt+0x50550>  // b.lo, b.ul, b.last
  45365c:	sub	w9, w8, #0x41
  453660:	and	w9, w9, #0xff
  453664:	cmp	w9, #0x6
  453668:	b.cs	453674 <feof@plt+0x50594>  // b.hs, b.nlast
  45366c:	mov	x9, #0xffffffffffffffc9    	// #-55
  453670:	b	453634 <feof@plt+0x50554>
  453674:	sub	w9, w8, #0x61
  453678:	and	w9, w9, #0xff
  45367c:	cmp	w9, #0x5
  453680:	b.hi	4536ec <feof@plt+0x5060c>  // b.pmore
  453684:	mov	x9, #0xffffffffffffffa9    	// #-87
  453688:	b	453634 <feof@plt+0x50554>
  45368c:	mov	w24, #0x5f                  	// #95
  453690:	ldr	x8, [x19, #256]
  453694:	cmp	x8, #0xff
  453698:	b.ne	4536c4 <feof@plt+0x505e4>  // b.any
  45369c:	ldp	x8, x2, [x19, #272]
  4536a0:	mov	w1, #0xff                  	// #255
  4536a4:	mov	x0, x19
  4536a8:	strb	wzr, [x19, #255]
  4536ac:	blr	x8
  4536b0:	ldr	x9, [x19, #320]
  4536b4:	mov	x8, xzr
  4536b8:	str	xzr, [x19, #256]
  4536bc:	add	x9, x9, #0x1
  4536c0:	str	x9, [x19, #320]
  4536c4:	mov	w23, w24
  4536c8:	mov	x21, x22
  4536cc:	add	x22, x21, #0x1
  4536d0:	add	x9, x8, #0x1
  4536d4:	cmp	x22, x20
  4536d8:	str	x9, [x19, #256]
  4536dc:	strb	w23, [x19, x8]
  4536e0:	strb	w23, [x19, #264]
  4536e4:	b.cc	4535ec <feof@plt+0x5050c>  // b.lo, b.ul, b.last
  4536e8:	b	4530d4 <feof@plt+0x4fff4>
  4536ec:	cmp	x23, #0xff
  4536f0:	mov	w24, #0x5f                  	// #95
  4536f4:	b.hi	453690 <feof@plt+0x505b0>  // b.pmore
  4536f8:	cmp	w8, #0x5f
  4536fc:	b.ne	453690 <feof@plt+0x505b0>  // b.any
  453700:	ldr	x8, [x19, #256]
  453704:	cmp	x8, #0xff
  453708:	b.ne	4536cc <feof@plt+0x505ec>  // b.any
  45370c:	ldp	x8, x2, [x19, #272]
  453710:	mov	w1, #0xff                  	// #255
  453714:	mov	x0, x19
  453718:	strb	wzr, [x19, #255]
  45371c:	blr	x8
  453720:	ldr	x9, [x19, #320]
  453724:	mov	x8, xzr
  453728:	str	xzr, [x19, #256]
  45372c:	add	x9, x9, #0x1
  453730:	str	x9, [x19, #320]
  453734:	b	4536cc <feof@plt+0x505ec>
  453738:	ldr	w8, [x22]
  45373c:	cbnz	w8, 453764 <feof@plt+0x50684>
  453740:	ldr	w8, [x22, #16]
  453744:	cmp	w8, #0x6
  453748:	b.ne	453764 <feof@plt+0x50684>  // b.any
  45374c:	ldr	x0, [x22, #8]
  453750:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  453754:	add	x1, x1, #0x41e
  453758:	mov	w2, #0x6                   	// #6
  45375c:	bl	402d40 <strncmp@plt>
  453760:	cbz	w0, 455678 <feof@plt+0x52598>
  453764:	ldr	w8, [x22, #4]
  453768:	cmp	w8, #0x1
  45376c:	b.gt	45377c <feof@plt+0x5069c>
  453770:	ldr	w9, [x19, #308]
  453774:	cmp	w9, #0x401
  453778:	b.lt	454520 <feof@plt+0x51440>  // b.tstop
  45377c:	mov	w8, #0x1                   	// #1
  453780:	str	w8, [x25]
  453784:	b	454570 <feof@plt+0x51490>
  453788:	ldrsw	x20, [x8, #24]
  45378c:	cbz	w20, 4530d4 <feof@plt+0x4fff4>
  453790:	ldr	x21, [x8, #16]
  453794:	b	4537b4 <feof@plt+0x506d4>
  453798:	add	x9, x8, #0x1
  45379c:	subs	x20, x20, #0x1
  4537a0:	add	x21, x21, #0x1
  4537a4:	str	x9, [x19, #256]
  4537a8:	strb	w22, [x19, x8]
  4537ac:	strb	w22, [x19, #264]
  4537b0:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  4537b4:	ldr	x8, [x19, #256]
  4537b8:	ldrb	w22, [x21]
  4537bc:	cmp	x8, #0xff
  4537c0:	b.ne	453798 <feof@plt+0x506b8>  // b.any
  4537c4:	ldp	x8, x2, [x19, #272]
  4537c8:	mov	w1, #0xff                  	// #255
  4537cc:	mov	x0, x19
  4537d0:	strb	wzr, [x19, #255]
  4537d4:	blr	x8
  4537d8:	ldr	x9, [x19, #320]
  4537dc:	mov	x8, xzr
  4537e0:	str	xzr, [x19, #256]
  4537e4:	add	x9, x9, #0x1
  4537e8:	str	x9, [x19, #320]
  4537ec:	b	453798 <feof@plt+0x506b8>
  4537f0:	ldr	x3, [x19, #296]
  4537f4:	and	w22, w20, #0xffffff9f
  4537f8:	mov	x0, x19
  4537fc:	mov	w1, w22
  453800:	mov	x2, x21
  453804:	bl	457800 <feof@plt+0x54720>
  453808:	ldr	x20, [x21, #8]
  45380c:	cbz	x20, 4530d4 <feof@plt+0x4fff4>
  453810:	ldr	w8, [x20, #4]
  453814:	cmp	w8, #0x1
  453818:	b.gt	4530cc <feof@plt+0x4ffec>
  45381c:	ldr	w9, [x19, #308]
  453820:	cmp	w9, #0x401
  453824:	b.ge	4530cc <feof@plt+0x4ffec>  // b.tcont
  453828:	add	w8, w8, #0x1
  45382c:	str	w8, [x20, #4]
  453830:	ldr	x8, [x19, #328]
  453834:	add	w9, w9, #0x1
  453838:	str	w9, [x19, #308]
  45383c:	add	x9, sp, #0x10
  453840:	mov	x0, x19
  453844:	mov	w1, w22
  453848:	mov	x2, x20
  45384c:	stp	x20, x8, [sp, #16]
  453850:	str	x9, [x19, #328]
  453854:	bl	4509c8 <feof@plt+0x4d8e8>
  453858:	ldr	x8, [sp, #24]
  45385c:	str	x8, [x19, #328]
  453860:	ldr	w8, [x20, #4]
  453864:	sub	w8, w8, #0x1
  453868:	str	w8, [x20, #4]
  45386c:	b	45313c <feof@plt+0x5005c>
  453870:	cbz	x22, 45388c <feof@plt+0x507ac>
  453874:	ldr	w9, [x22, #4]
  453878:	cmp	w9, #0x1
  45387c:	b.gt	45388c <feof@plt+0x507ac>
  453880:	ldr	w10, [x19, #308]
  453884:	cmp	w10, #0x401
  453888:	b.lt	454eb4 <feof@plt+0x51dd4>  // b.tstop
  45388c:	mov	w9, #0x1                   	// #1
  453890:	str	w9, [x25]
  453894:	cbz	x8, 4530d4 <feof@plt+0x4fff4>
  453898:	ldur	x8, [x29, #-16]
  45389c:	str	x8, [x19, #288]
  4538a0:	b	4530d4 <feof@plt+0x4fff4>
  4538a4:	add	w8, w8, #0x1
  4538a8:	add	w9, w9, #0x1
  4538ac:	str	w8, [x21, #4]
  4538b0:	str	w9, [x19, #308]
  4538b4:	str	x21, [sp, #16]
  4538b8:	ldr	x8, [x19, #328]
  4538bc:	add	x9, sp, #0x10
  4538c0:	mov	x0, x19
  4538c4:	mov	w1, w20
  4538c8:	mov	x2, x21
  4538cc:	str	x8, [sp, #24]
  4538d0:	str	x9, [x19, #328]
  4538d4:	bl	4509c8 <feof@plt+0x4d8e8>
  4538d8:	ldr	x8, [sp, #24]
  4538dc:	str	x8, [x19, #328]
  4538e0:	ldr	w8, [x21, #4]
  4538e4:	sub	w8, w8, #0x1
  4538e8:	str	w8, [x21, #4]
  4538ec:	ldr	w8, [x19, #308]
  4538f0:	sub	w8, w8, #0x1
  4538f4:	str	w8, [x19, #308]
  4538f8:	b	452d88 <feof@plt+0x4fca8>
  4538fc:	cbz	w22, 4530d4 <feof@plt+0x4fff4>
  453900:	ldr	x21, [x21, #8]
  453904:	mov	w23, wzr
  453908:	sub	w24, w22, #0x1
  45390c:	mov	w26, #0x1                   	// #1
  453910:	mov	w27, #0x2c                  	// #44
  453914:	mov	w28, #0x20                  	// #32
  453918:	b	453938 <feof@plt+0x50858>
  45391c:	add	x9, x8, #0x1
  453920:	str	x9, [x19, #256]
  453924:	strb	w28, [x19, x8]
  453928:	strb	w28, [x19, #264]
  45392c:	add	w23, w23, #0x1
  453930:	cmp	w22, w23
  453934:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  453938:	str	w23, [x19, #316]
  45393c:	cbz	x21, 453958 <feof@plt+0x50878>
  453940:	ldr	w8, [x21, #4]
  453944:	cmp	w8, #0x1
  453948:	b.gt	453958 <feof@plt+0x50878>
  45394c:	ldr	w9, [x19, #308]
  453950:	cmp	w9, #0x401
  453954:	b.lt	4539e0 <feof@plt+0x50900>  // b.tstop
  453958:	str	w26, [x25]
  45395c:	cmp	w23, w24
  453960:	b.ge	45392c <feof@plt+0x5084c>  // b.tcont
  453964:	ldr	x8, [x19, #256]
  453968:	cmp	x8, #0xff
  45396c:	b.ne	453998 <feof@plt+0x508b8>  // b.any
  453970:	ldp	x8, x2, [x19, #272]
  453974:	mov	w1, #0xff                  	// #255
  453978:	mov	x0, x19
  45397c:	strb	wzr, [x19, #255]
  453980:	blr	x8
  453984:	ldr	x9, [x19, #320]
  453988:	mov	x8, xzr
  45398c:	str	xzr, [x19, #256]
  453990:	add	x9, x9, #0x1
  453994:	str	x9, [x19, #320]
  453998:	add	x9, x8, #0x1
  45399c:	str	x9, [x19, #256]
  4539a0:	strb	w27, [x19, x8]
  4539a4:	ldr	x8, [x19, #256]
  4539a8:	strb	w27, [x19, #264]
  4539ac:	cmp	x8, #0xff
  4539b0:	b.ne	45391c <feof@plt+0x5083c>  // b.any
  4539b4:	ldp	x8, x2, [x19, #272]
  4539b8:	mov	w1, #0xff                  	// #255
  4539bc:	mov	x0, x19
  4539c0:	strb	wzr, [x19, #255]
  4539c4:	blr	x8
  4539c8:	ldr	x9, [x19, #320]
  4539cc:	mov	x8, xzr
  4539d0:	str	xzr, [x19, #256]
  4539d4:	add	x9, x9, #0x1
  4539d8:	str	x9, [x19, #320]
  4539dc:	b	45391c <feof@plt+0x5083c>
  4539e0:	add	w8, w8, #0x1
  4539e4:	str	w8, [x21, #4]
  4539e8:	ldr	x8, [x19, #328]
  4539ec:	add	w9, w9, #0x1
  4539f0:	str	w9, [x19, #308]
  4539f4:	mov	x0, x19
  4539f8:	stp	x21, x8, [sp, #16]
  4539fc:	add	x8, sp, #0x10
  453a00:	mov	w1, w20
  453a04:	mov	x2, x21
  453a08:	str	x8, [x19, #328]
  453a0c:	bl	4509c8 <feof@plt+0x4d8e8>
  453a10:	ldr	x8, [sp, #24]
  453a14:	str	x8, [x19, #328]
  453a18:	ldr	w8, [x21, #4]
  453a1c:	sub	w8, w8, #0x1
  453a20:	str	w8, [x21, #4]
  453a24:	ldr	w8, [x19, #308]
  453a28:	sub	w8, w8, #0x1
  453a2c:	str	w8, [x19, #308]
  453a30:	cmp	w23, w24
  453a34:	b.ge	45392c <feof@plt+0x5084c>  // b.tcont
  453a38:	b	453964 <feof@plt+0x50884>
  453a3c:	mov	x22, xzr
  453a40:	b	450a30 <feof@plt+0x4d950>
  453a44:	ldr	x22, [x19, #288]
  453a48:	cbz	x22, 454b6c <feof@plt+0x51a8c>
  453a4c:	ldr	x9, [x22, #8]
  453a50:	ldr	w8, [x21, #8]
  453a54:	ldr	x21, [x9, #16]
  453a58:	tbnz	w8, #31, 4557e8 <feof@plt+0x52708>
  453a5c:	cbz	x21, 4530cc <feof@plt+0x4ffec>
  453a60:	ldr	w9, [x21]
  453a64:	cmp	w9, #0x2f
  453a68:	b.ne	4530cc <feof@plt+0x4ffec>  // b.any
  453a6c:	subs	w9, w8, #0x1
  453a70:	b.lt	4557e0 <feof@plt+0x52700>  // b.tstop
  453a74:	ldr	x21, [x21, #16]
  453a78:	mov	w8, w9
  453a7c:	cbnz	x21, 453a60 <feof@plt+0x50980>
  453a80:	b	4530cc <feof@plt+0x4ffec>
  453a84:	b.ne	453ab0 <feof@plt+0x509d0>  // b.any
  453a88:	ldp	x8, x2, [x19, #272]
  453a8c:	mov	w1, #0xff                  	// #255
  453a90:	mov	x0, x19
  453a94:	strb	wzr, [x19, #255]
  453a98:	blr	x8
  453a9c:	ldr	x9, [x19, #320]
  453aa0:	mov	x8, xzr
  453aa4:	str	xzr, [x19, #256]
  453aa8:	add	x9, x9, #0x1
  453aac:	str	x9, [x19, #320]
  453ab0:	add	x9, x8, #0x1
  453ab4:	mov	w10, #0x74                  	// #116
  453ab8:	str	x9, [x19, #256]
  453abc:	strb	w10, [x19, x8]
  453ac0:	ldr	x8, [x19, #256]
  453ac4:	strb	w10, [x19, #264]
  453ac8:	cmp	x8, #0xff
  453acc:	b.ne	453af8 <feof@plt+0x50a18>  // b.any
  453ad0:	ldp	x8, x2, [x19, #272]
  453ad4:	mov	w1, #0xff                  	// #255
  453ad8:	mov	x0, x19
  453adc:	strb	wzr, [x19, #255]
  453ae0:	blr	x8
  453ae4:	ldr	x9, [x19, #320]
  453ae8:	mov	x8, xzr
  453aec:	str	xzr, [x19, #256]
  453af0:	add	x9, x9, #0x1
  453af4:	str	x9, [x19, #320]
  453af8:	add	x9, x8, #0x1
  453afc:	mov	w10, #0x68                  	// #104
  453b00:	str	x9, [x19, #256]
  453b04:	strb	w10, [x19, x8]
  453b08:	ldr	x8, [x19, #256]
  453b0c:	strb	w10, [x19, #264]
  453b10:	cmp	x8, #0xff
  453b14:	b.ne	453b40 <feof@plt+0x50a60>  // b.any
  453b18:	ldp	x8, x2, [x19, #272]
  453b1c:	mov	w1, #0xff                  	// #255
  453b20:	mov	x0, x19
  453b24:	strb	wzr, [x19, #255]
  453b28:	blr	x8
  453b2c:	ldr	x9, [x19, #320]
  453b30:	mov	x8, xzr
  453b34:	str	xzr, [x19, #256]
  453b38:	add	x9, x9, #0x1
  453b3c:	str	x9, [x19, #320]
  453b40:	add	x9, x8, #0x1
  453b44:	mov	w10, #0x69                  	// #105
  453b48:	str	x9, [x19, #256]
  453b4c:	strb	w10, [x19, x8]
  453b50:	ldr	x8, [x19, #256]
  453b54:	strb	w10, [x19, #264]
  453b58:	cmp	x8, #0xff
  453b5c:	b.ne	453b88 <feof@plt+0x50aa8>  // b.any
  453b60:	ldp	x8, x2, [x19, #272]
  453b64:	mov	w1, #0xff                  	// #255
  453b68:	mov	x0, x19
  453b6c:	strb	wzr, [x19, #255]
  453b70:	blr	x8
  453b74:	ldr	x9, [x19, #320]
  453b78:	mov	x8, xzr
  453b7c:	str	xzr, [x19, #256]
  453b80:	add	x9, x9, #0x1
  453b84:	str	x9, [x19, #320]
  453b88:	add	x9, x8, #0x1
  453b8c:	mov	w10, #0x73                  	// #115
  453b90:	b	4559c8 <feof@plt+0x528e8>
  453b94:	mov	w24, #0x1                   	// #1
  453b98:	ldr	x23, [x21, #16]
  453b9c:	cbz	x23, 453bb8 <feof@plt+0x50ad8>
  453ba0:	ldr	w8, [x23, #4]
  453ba4:	cmp	w8, #0x1
  453ba8:	b.gt	453bb8 <feof@plt+0x50ad8>
  453bac:	ldr	w9, [x19, #308]
  453bb0:	cmp	w9, #0x401
  453bb4:	b.lt	454b18 <feof@plt+0x51a38>  // b.tstop
  453bb8:	mov	w8, #0x1                   	// #1
  453bbc:	str	w8, [x25]
  453bc0:	str	x22, [x19, #296]
  453bc4:	ldr	w8, [sp, #32]
  453bc8:	cbnz	w8, 4530d4 <feof@plt+0x4fff4>
  453bcc:	cmp	w24, #0x2
  453bd0:	b.cc	453c04 <feof@plt+0x50b24>  // b.lo, b.ul, b.last
  453bd4:	sub	w8, w24, #0x1
  453bd8:	add	x9, sp, #0x10
  453bdc:	add	x8, x9, x8, lsl #5
  453be0:	add	x22, x8, #0x8
  453be4:	ldr	x2, [x22], #-32
  453be8:	mov	x0, x19
  453bec:	mov	w1, w20
  453bf0:	bl	456c60 <feof@plt+0x53b80>
  453bf4:	sub	w24, w24, #0x1
  453bf8:	cmp	w24, #0x1
  453bfc:	b.hi	453be4 <feof@plt+0x50b04>  // b.pmore
  453c00:	ldr	x22, [x19, #296]
  453c04:	mov	x0, x19
  453c08:	mov	w1, w20
  453c0c:	mov	x2, x21
  453c10:	mov	x3, x22
  453c14:	bl	457ad8 <feof@plt+0x549f8>
  453c18:	b	4530d4 <feof@plt+0x4fff4>
  453c1c:	b.ne	453c48 <feof@plt+0x50b68>  // b.any
  453c20:	ldp	x8, x2, [x19, #272]
  453c24:	mov	w1, #0xff                  	// #255
  453c28:	mov	x0, x19
  453c2c:	strb	wzr, [x19, #255]
  453c30:	blr	x8
  453c34:	ldr	x9, [x19, #320]
  453c38:	mov	x8, xzr
  453c3c:	str	xzr, [x19, #256]
  453c40:	add	x9, x9, #0x1
  453c44:	str	x9, [x19, #320]
  453c48:	add	x9, x8, #0x1
  453c4c:	mov	w10, #0x5f                  	// #95
  453c50:	str	x9, [x19, #256]
  453c54:	strb	w10, [x19, x8]
  453c58:	ldr	x8, [x19, #256]
  453c5c:	strb	w10, [x19, #264]
  453c60:	cmp	x8, #0xff
  453c64:	b.ne	453c90 <feof@plt+0x50bb0>  // b.any
  453c68:	ldp	x8, x2, [x19, #272]
  453c6c:	mov	w1, #0xff                  	// #255
  453c70:	mov	x0, x19
  453c74:	strb	wzr, [x19, #255]
  453c78:	blr	x8
  453c7c:	ldr	x9, [x19, #320]
  453c80:	mov	x8, xzr
  453c84:	str	xzr, [x19, #256]
  453c88:	add	x9, x9, #0x1
  453c8c:	str	x9, [x19, #320]
  453c90:	add	x9, x8, #0x1
  453c94:	mov	w10, #0x46                  	// #70
  453c98:	str	x9, [x19, #256]
  453c9c:	strb	w10, [x19, x8]
  453ca0:	ldr	x8, [x19, #256]
  453ca4:	strb	w10, [x19, #264]
  453ca8:	cmp	x8, #0xff
  453cac:	b.ne	453cd8 <feof@plt+0x50bf8>  // b.any
  453cb0:	ldp	x8, x2, [x19, #272]
  453cb4:	mov	w1, #0xff                  	// #255
  453cb8:	mov	x0, x19
  453cbc:	strb	wzr, [x19, #255]
  453cc0:	blr	x8
  453cc4:	ldr	x9, [x19, #320]
  453cc8:	mov	x8, xzr
  453ccc:	str	xzr, [x19, #256]
  453cd0:	add	x9, x9, #0x1
  453cd4:	str	x9, [x19, #320]
  453cd8:	add	x9, x8, #0x1
  453cdc:	mov	w10, #0x72                  	// #114
  453ce0:	str	x9, [x19, #256]
  453ce4:	strb	w10, [x19, x8]
  453ce8:	ldr	x8, [x19, #256]
  453cec:	strb	w10, [x19, #264]
  453cf0:	cmp	x8, #0xff
  453cf4:	b.ne	453d20 <feof@plt+0x50c40>  // b.any
  453cf8:	ldp	x8, x2, [x19, #272]
  453cfc:	mov	w1, #0xff                  	// #255
  453d00:	mov	x0, x19
  453d04:	strb	wzr, [x19, #255]
  453d08:	blr	x8
  453d0c:	ldr	x9, [x19, #320]
  453d10:	mov	x8, xzr
  453d14:	str	xzr, [x19, #256]
  453d18:	add	x9, x9, #0x1
  453d1c:	str	x9, [x19, #320]
  453d20:	add	x9, x8, #0x1
  453d24:	mov	w10, #0x61                  	// #97
  453d28:	str	x9, [x19, #256]
  453d2c:	strb	w10, [x19, x8]
  453d30:	ldr	x8, [x19, #256]
  453d34:	strb	w10, [x19, #264]
  453d38:	cmp	x8, #0xff
  453d3c:	b.ne	453d68 <feof@plt+0x50c88>  // b.any
  453d40:	ldp	x8, x2, [x19, #272]
  453d44:	mov	w1, #0xff                  	// #255
  453d48:	mov	x0, x19
  453d4c:	strb	wzr, [x19, #255]
  453d50:	blr	x8
  453d54:	ldr	x9, [x19, #320]
  453d58:	mov	x8, xzr
  453d5c:	str	xzr, [x19, #256]
  453d60:	add	x9, x9, #0x1
  453d64:	str	x9, [x19, #320]
  453d68:	add	x9, x8, #0x1
  453d6c:	mov	w10, #0x63                  	// #99
  453d70:	str	x9, [x19, #256]
  453d74:	strb	w10, [x19, x8]
  453d78:	ldr	x8, [x19, #256]
  453d7c:	strb	w10, [x19, #264]
  453d80:	cmp	x8, #0xff
  453d84:	b.ne	453db0 <feof@plt+0x50cd0>  // b.any
  453d88:	ldp	x8, x2, [x19, #272]
  453d8c:	mov	w1, #0xff                  	// #255
  453d90:	mov	x0, x19
  453d94:	strb	wzr, [x19, #255]
  453d98:	blr	x8
  453d9c:	ldr	x9, [x19, #320]
  453da0:	mov	x8, xzr
  453da4:	str	xzr, [x19, #256]
  453da8:	add	x9, x9, #0x1
  453dac:	str	x9, [x19, #320]
  453db0:	add	x9, x8, #0x1
  453db4:	mov	w10, #0x74                  	// #116
  453db8:	b	4559c8 <feof@plt+0x528e8>
  453dbc:	ldr	x21, [x21, #8]
  453dc0:	ldr	w8, [x21]
  453dc4:	cmp	w8, #0x31
  453dc8:	b.hi	454f10 <feof@plt+0x51e30>  // b.pmore
  453dcc:	mov	w9, #0x1                   	// #1
  453dd0:	lsl	x8, x9, x8
  453dd4:	mov	x9, #0x43                  	// #67
  453dd8:	movk	x9, #0x2, lsl #48
  453ddc:	tst	x8, x9
  453de0:	b.eq	454f10 <feof@plt+0x51e30>  // b.none
  453de4:	cbz	x21, 453e00 <feof@plt+0x50d20>
  453de8:	ldr	w8, [x21, #4]
  453dec:	cmp	w8, #0x1
  453df0:	b.gt	453e00 <feof@plt+0x50d20>
  453df4:	ldr	w9, [x19, #308]
  453df8:	cmp	w9, #0x401
  453dfc:	b.lt	455260 <feof@plt+0x52180>  // b.tstop
  453e00:	mov	w8, #0x1                   	// #1
  453e04:	str	w8, [x25]
  453e08:	b	4552b0 <feof@plt+0x521d0>
  453e0c:	ldr	x8, [x19, #256]
  453e10:	cmp	x8, #0xff
  453e14:	b.ne	453e40 <feof@plt+0x50d60>  // b.any
  453e18:	ldp	x8, x2, [x19, #272]
  453e1c:	mov	w1, #0xff                  	// #255
  453e20:	mov	x0, x19
  453e24:	strb	wzr, [x19, #255]
  453e28:	blr	x8
  453e2c:	ldr	x9, [x19, #320]
  453e30:	mov	x8, xzr
  453e34:	str	xzr, [x19, #256]
  453e38:	add	x9, x9, #0x1
  453e3c:	str	x9, [x19, #320]
  453e40:	add	x9, x8, #0x1
  453e44:	mov	w10, #0x28                  	// #40
  453e48:	str	x9, [x19, #256]
  453e4c:	strb	w10, [x19, x8]
  453e50:	strb	w10, [x19, #264]
  453e54:	ldr	x22, [x22, #8]
  453e58:	cbz	x22, 453e74 <feof@plt+0x50d94>
  453e5c:	ldr	w8, [x22, #4]
  453e60:	cmp	w8, #0x1
  453e64:	b.gt	453e74 <feof@plt+0x50d94>
  453e68:	ldr	w9, [x19, #308]
  453e6c:	cmp	w9, #0x401
  453e70:	b.lt	455070 <feof@plt+0x51f90>  // b.tstop
  453e74:	mov	w8, #0x1                   	// #1
  453e78:	str	w8, [x25]
  453e7c:	ldr	x8, [x19, #256]
  453e80:	cmp	x8, #0xff
  453e84:	b.ne	453eb0 <feof@plt+0x50dd0>  // b.any
  453e88:	ldp	x8, x2, [x19, #272]
  453e8c:	mov	w1, #0xff                  	// #255
  453e90:	mov	x0, x19
  453e94:	strb	wzr, [x19, #255]
  453e98:	blr	x8
  453e9c:	ldr	x9, [x19, #320]
  453ea0:	mov	x8, xzr
  453ea4:	str	xzr, [x19, #256]
  453ea8:	add	x9, x9, #0x1
  453eac:	str	x9, [x19, #320]
  453eb0:	add	x9, x8, #0x1
  453eb4:	mov	w10, #0x29                  	// #41
  453eb8:	str	x9, [x19, #256]
  453ebc:	strb	w10, [x19, x8]
  453ec0:	strb	w10, [x19, #264]
  453ec4:	b	453eec <feof@plt+0x50e0c>
  453ec8:	cbz	x22, 453ee4 <feof@plt+0x50e04>
  453ecc:	ldr	w8, [x22, #4]
  453ed0:	cmp	w8, #0x1
  453ed4:	b.gt	453ee4 <feof@plt+0x50e04>
  453ed8:	ldr	w9, [x19, #308]
  453edc:	cmp	w9, #0x401
  453ee0:	b.lt	4550c4 <feof@plt+0x51fe4>  // b.tstop
  453ee4:	mov	w8, #0x1                   	// #1
  453ee8:	str	w8, [x25]
  453eec:	ldr	w8, [x21]
  453ef0:	cmp	w8, #0x31
  453ef4:	b.hi	453f10 <feof@plt+0x50e30>  // b.pmore
  453ef8:	mov	w9, #0x1                   	// #1
  453efc:	lsl	x8, x9, x8
  453f00:	mov	x9, #0x43                  	// #67
  453f04:	movk	x9, #0x2, lsl #48
  453f08:	tst	x8, x9
  453f0c:	b.ne	4541d4 <feof@plt+0x510f4>  // b.any
  453f10:	ldr	x8, [x19, #256]
  453f14:	cmp	x8, #0xff
  453f18:	b.ne	453f44 <feof@plt+0x50e64>  // b.any
  453f1c:	ldp	x8, x2, [x19, #272]
  453f20:	mov	w1, #0xff                  	// #255
  453f24:	mov	x0, x19
  453f28:	strb	wzr, [x19, #255]
  453f2c:	blr	x8
  453f30:	ldr	x9, [x19, #320]
  453f34:	mov	x8, xzr
  453f38:	str	xzr, [x19, #256]
  453f3c:	add	x9, x9, #0x1
  453f40:	str	x9, [x19, #320]
  453f44:	add	x9, x8, #0x1
  453f48:	mov	w10, #0x28                  	// #40
  453f4c:	str	x9, [x19, #256]
  453f50:	strb	w10, [x19, x8]
  453f54:	strb	w10, [x19, #264]
  453f58:	cbnz	x21, 45338c <feof@plt+0x502ac>
  453f5c:	b	455984 <feof@plt+0x528a4>
  453f60:	add	w8, w8, #0x1
  453f64:	str	w8, [x22, #4]
  453f68:	ldr	x8, [x19, #328]
  453f6c:	add	w9, w9, #0x1
  453f70:	str	w9, [x19, #308]
  453f74:	add	x9, sp, #0x10
  453f78:	mov	x0, x19
  453f7c:	mov	w1, w20
  453f80:	mov	x2, x22
  453f84:	stp	x22, x8, [sp, #16]
  453f88:	str	x9, [x19, #328]
  453f8c:	bl	4509c8 <feof@plt+0x4d8e8>
  453f90:	ldr	x8, [sp, #24]
  453f94:	str	x8, [x19, #328]
  453f98:	ldr	w8, [x22, #4]
  453f9c:	sub	w8, w8, #0x1
  453fa0:	str	w8, [x22, #4]
  453fa4:	ldr	w8, [x19, #308]
  453fa8:	sub	w8, w8, #0x1
  453fac:	str	w8, [x19, #308]
  453fb0:	tbz	w20, #2, 450b68 <feof@plt+0x4da88>
  453fb4:	ldr	x8, [x19, #256]
  453fb8:	cmp	x8, #0xff
  453fbc:	b.ne	453fe8 <feof@plt+0x50f08>  // b.any
  453fc0:	ldp	x8, x2, [x19, #272]
  453fc4:	mov	w1, #0xff                  	// #255
  453fc8:	mov	x0, x19
  453fcc:	strb	wzr, [x19, #255]
  453fd0:	blr	x8
  453fd4:	ldr	x9, [x19, #320]
  453fd8:	mov	x8, xzr
  453fdc:	str	xzr, [x19, #256]
  453fe0:	add	x9, x9, #0x1
  453fe4:	str	x9, [x19, #320]
  453fe8:	add	x9, x8, #0x1
  453fec:	mov	w10, #0x2e                  	// #46
  453ff0:	str	x9, [x19, #256]
  453ff4:	strb	w10, [x19, x8]
  453ff8:	strb	w10, [x19, #264]
  453ffc:	ldr	x21, [x21, #16]
  454000:	ldr	w8, [x21]
  454004:	cmp	w8, #0x47
  454008:	b.ne	4541d4 <feof@plt+0x510f4>  // b.any
  45400c:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  454010:	mov	x22, xzr
  454014:	add	x23, x23, #0x410
  454018:	b	454038 <feof@plt+0x50f58>
  45401c:	add	x22, x22, #0x1
  454020:	add	x9, x8, #0x1
  454024:	cmp	x22, #0xd
  454028:	str	x9, [x19, #256]
  45402c:	strb	w24, [x19, x8]
  454030:	strb	w24, [x19, #264]
  454034:	b.eq	454074 <feof@plt+0x50f94>  // b.none
  454038:	ldr	x8, [x19, #256]
  45403c:	ldrb	w24, [x23, x22]
  454040:	cmp	x8, #0xff
  454044:	b.ne	45401c <feof@plt+0x50f3c>  // b.any
  454048:	ldp	x8, x2, [x19, #272]
  45404c:	mov	w1, #0xff                  	// #255
  454050:	mov	x0, x19
  454054:	strb	wzr, [x19, #255]
  454058:	blr	x8
  45405c:	ldr	x9, [x19, #320]
  454060:	mov	x8, xzr
  454064:	str	xzr, [x19, #256]
  454068:	add	x9, x9, #0x1
  45406c:	str	x9, [x19, #320]
  454070:	b	45401c <feof@plt+0x50f3c>
  454074:	ldr	w8, [x21, #16]
  454078:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  45407c:	add	x1, x1, #0x229
  454080:	add	x0, sp, #0x10
  454084:	add	w2, w8, #0x1
  454088:	bl	402c30 <sprintf@plt>
  45408c:	add	x0, sp, #0x10
  454090:	bl	402a50 <strlen@plt>
  454094:	cbz	x0, 4540fc <feof@plt+0x5101c>
  454098:	mov	x22, x0
  45409c:	add	x23, sp, #0x10
  4540a0:	b	4540c0 <feof@plt+0x50fe0>
  4540a4:	add	x9, x8, #0x1
  4540a8:	subs	x22, x22, #0x1
  4540ac:	add	x23, x23, #0x1
  4540b0:	str	x9, [x19, #256]
  4540b4:	strb	w24, [x19, x8]
  4540b8:	strb	w24, [x19, #264]
  4540bc:	b.eq	4540fc <feof@plt+0x5101c>  // b.none
  4540c0:	ldr	x8, [x19, #256]
  4540c4:	ldrb	w24, [x23]
  4540c8:	cmp	x8, #0xff
  4540cc:	b.ne	4540a4 <feof@plt+0x50fc4>  // b.any
  4540d0:	ldp	x8, x2, [x19, #272]
  4540d4:	mov	w1, #0xff                  	// #255
  4540d8:	mov	x0, x19
  4540dc:	strb	wzr, [x19, #255]
  4540e0:	blr	x8
  4540e4:	ldr	x9, [x19, #320]
  4540e8:	mov	x8, xzr
  4540ec:	str	xzr, [x19, #256]
  4540f0:	add	x9, x9, #0x1
  4540f4:	str	x9, [x19, #320]
  4540f8:	b	4540a4 <feof@plt+0x50fc4>
  4540fc:	ldr	x8, [x19, #256]
  454100:	cmp	x8, #0xff
  454104:	b.ne	454130 <feof@plt+0x51050>  // b.any
  454108:	ldp	x8, x2, [x19, #272]
  45410c:	mov	w1, #0xff                  	// #255
  454110:	mov	x0, x19
  454114:	strb	wzr, [x19, #255]
  454118:	blr	x8
  45411c:	ldr	x9, [x19, #320]
  454120:	mov	x8, xzr
  454124:	str	xzr, [x19, #256]
  454128:	add	x9, x9, #0x1
  45412c:	str	x9, [x19, #320]
  454130:	add	x9, x8, #0x1
  454134:	mov	w10, #0x7d                  	// #125
  454138:	str	x9, [x19, #256]
  45413c:	strb	w10, [x19, x8]
  454140:	ldr	x8, [x19, #256]
  454144:	strb	w10, [x19, #264]
  454148:	cmp	x8, #0xff
  45414c:	b.ne	454178 <feof@plt+0x51098>  // b.any
  454150:	ldp	x8, x2, [x19, #272]
  454154:	mov	w1, #0xff                  	// #255
  454158:	mov	x0, x19
  45415c:	strb	wzr, [x19, #255]
  454160:	blr	x8
  454164:	ldr	x9, [x19, #320]
  454168:	mov	x8, xzr
  45416c:	str	xzr, [x19, #256]
  454170:	add	x9, x9, #0x1
  454174:	str	x9, [x19, #320]
  454178:	add	x9, x8, #0x1
  45417c:	mov	w22, #0x3a                  	// #58
  454180:	str	x9, [x19, #256]
  454184:	strb	w22, [x19, x8]
  454188:	ldr	x8, [x19, #256]
  45418c:	strb	w22, [x19, #264]
  454190:	cmp	x8, #0xff
  454194:	b.ne	4541c0 <feof@plt+0x510e0>  // b.any
  454198:	ldp	x8, x2, [x19, #272]
  45419c:	mov	w1, #0xff                  	// #255
  4541a0:	mov	x0, x19
  4541a4:	strb	wzr, [x19, #255]
  4541a8:	blr	x8
  4541ac:	ldr	x9, [x19, #320]
  4541b0:	mov	x8, xzr
  4541b4:	str	xzr, [x19, #256]
  4541b8:	add	x9, x9, #0x1
  4541bc:	str	x9, [x19, #320]
  4541c0:	add	x9, x8, #0x1
  4541c4:	str	x9, [x19, #256]
  4541c8:	strb	w22, [x19, x8]
  4541cc:	strb	w22, [x19, #264]
  4541d0:	ldr	x21, [x21, #8]
  4541d4:	cbnz	x21, 4530b4 <feof@plt+0x4ffd4>
  4541d8:	b	4530cc <feof@plt+0x4ffec>
  4541dc:	add	w8, w8, #0x1
  4541e0:	str	w8, [x22, #4]
  4541e4:	ldr	x8, [x19, #328]
  4541e8:	add	w9, w9, #0x1
  4541ec:	str	w9, [x19, #308]
  4541f0:	sub	x9, x29, #0x10
  4541f4:	mov	x0, x19
  4541f8:	mov	w1, w20
  4541fc:	mov	x2, x22
  454200:	stp	x22, x8, [x29, #-16]
  454204:	str	x9, [x19, #328]
  454208:	bl	4509c8 <feof@plt+0x4d8e8>
  45420c:	ldur	x8, [x29, #-8]
  454210:	str	x8, [x19, #328]
  454214:	ldr	w8, [x22, #4]
  454218:	sub	w8, w8, #0x1
  45421c:	str	w8, [x22, #4]
  454220:	ldr	w8, [x19, #308]
  454224:	sub	w8, w8, #0x1
  454228:	str	w8, [x19, #308]
  45422c:	ldr	w8, [sp, #32]
  454230:	cbnz	w8, 450d1c <feof@plt+0x4dc3c>
  454234:	b	450d0c <feof@plt+0x4dc2c>
  454238:	add	w8, w8, #0x1
  45423c:	str	w8, [x22, #4]
  454240:	ldr	x8, [x19, #328]
  454244:	add	w9, w9, #0x1
  454248:	str	w9, [x19, #308]
  45424c:	add	x9, sp, #0x10
  454250:	mov	x0, x19
  454254:	mov	w1, w20
  454258:	mov	x2, x22
  45425c:	stp	x22, x8, [sp, #16]
  454260:	str	x9, [x19, #328]
  454264:	bl	4509c8 <feof@plt+0x4d8e8>
  454268:	ldr	x8, [sp, #24]
  45426c:	str	x8, [x19, #328]
  454270:	ldr	w8, [x22, #4]
  454274:	sub	w8, w8, #0x1
  454278:	str	w8, [x22, #4]
  45427c:	ldr	w8, [x19, #308]
  454280:	sub	w8, w8, #0x1
  454284:	str	w8, [x19, #308]
  454288:	ldr	x8, [x21, #16]
  45428c:	cbz	x8, 4530d4 <feof@plt+0x4fff4>
  454290:	ldr	x8, [x19, #256]
  454294:	cmp	x8, #0xfe
  454298:	b.cc	4542c4 <feof@plt+0x511e4>  // b.lo, b.ul, b.last
  45429c:	strb	wzr, [x19, x8]
  4542a0:	ldr	x1, [x19, #256]
  4542a4:	ldp	x8, x2, [x19, #272]
  4542a8:	mov	x0, x19
  4542ac:	blr	x8
  4542b0:	ldr	x9, [x19, #320]
  4542b4:	mov	x8, xzr
  4542b8:	str	xzr, [x19, #256]
  4542bc:	add	x9, x9, #0x1
  4542c0:	str	x9, [x19, #320]
  4542c4:	add	x9, x8, #0x1
  4542c8:	mov	w10, #0x2c                  	// #44
  4542cc:	str	x9, [x19, #256]
  4542d0:	strb	w10, [x19, x8]
  4542d4:	ldr	x8, [x19, #256]
  4542d8:	strb	w10, [x19, #264]
  4542dc:	cmp	x8, #0xff
  4542e0:	b.ne	45430c <feof@plt+0x5122c>  // b.any
  4542e4:	ldp	x8, x2, [x19, #272]
  4542e8:	mov	w1, #0xff                  	// #255
  4542ec:	mov	x0, x19
  4542f0:	strb	wzr, [x19, #255]
  4542f4:	blr	x8
  4542f8:	ldr	x9, [x19, #320]
  4542fc:	mov	x8, xzr
  454300:	str	xzr, [x19, #256]
  454304:	add	x9, x9, #0x1
  454308:	str	x9, [x19, #320]
  45430c:	add	x9, x8, #0x1
  454310:	mov	w10, #0x20                  	// #32
  454314:	str	x9, [x19, #256]
  454318:	strb	w10, [x19, x8]
  45431c:	strb	w10, [x19, #264]
  454320:	ldr	x21, [x21, #16]
  454324:	ldr	x22, [x19, #256]
  454328:	cbz	x21, 454344 <feof@plt+0x51264>
  45432c:	ldr	w8, [x21, #4]
  454330:	cmp	w8, #0x1
  454334:	b.gt	454344 <feof@plt+0x51264>
  454338:	ldr	w9, [x19, #308]
  45433c:	cmp	w9, #0x401
  454340:	b.lt	4544bc <feof@plt+0x513dc>  // b.tstop
  454344:	mov	w8, #0x1                   	// #1
  454348:	str	w8, [x25]
  45434c:	ldr	x8, [x19, #256]
  454350:	cmp	x8, x22
  454354:	b.ne	4530d4 <feof@plt+0x4fff4>  // b.any
  454358:	sub	x8, x22, #0x2
  45435c:	str	x8, [x19, #256]
  454360:	b	4530d4 <feof@plt+0x4fff4>
  454364:	mov	x0, x19
  454368:	mov	w1, w20
  45436c:	mov	x2, x21
  454370:	bl	457e84 <feof@plt+0x54da4>
  454374:	cbnz	w0, 4530d4 <feof@plt+0x4fff4>
  454378:	ldr	x8, [x21, #8]
  45437c:	ldr	w9, [x8]
  454380:	cmp	w9, #0x32
  454384:	b.ne	4543f4 <feof@plt+0x51314>  // b.any
  454388:	ldr	x9, [x8, #8]
  45438c:	ldr	w10, [x9, #16]
  454390:	cmp	w10, #0x1
  454394:	b.ne	4543f4 <feof@plt+0x51314>  // b.any
  454398:	ldr	x9, [x9, #8]
  45439c:	ldrb	w9, [x9]
  4543a0:	cmp	w9, #0x3e
  4543a4:	b.ne	4543f4 <feof@plt+0x51314>  // b.any
  4543a8:	ldr	x8, [x19, #256]
  4543ac:	cmp	x8, #0xff
  4543b0:	b.ne	4543dc <feof@plt+0x512fc>  // b.any
  4543b4:	ldp	x8, x2, [x19, #272]
  4543b8:	mov	w1, #0xff                  	// #255
  4543bc:	mov	x0, x19
  4543c0:	strb	wzr, [x19, #255]
  4543c4:	blr	x8
  4543c8:	ldr	x9, [x19, #320]
  4543cc:	mov	x8, xzr
  4543d0:	str	xzr, [x19, #256]
  4543d4:	add	x9, x9, #0x1
  4543d8:	str	x9, [x19, #320]
  4543dc:	add	x9, x8, #0x1
  4543e0:	mov	w10, #0x28                  	// #40
  4543e4:	str	x9, [x19, #256]
  4543e8:	strb	w10, [x19, x8]
  4543ec:	strb	w10, [x19, #264]
  4543f0:	ldr	x8, [x21, #8]
  4543f4:	ldr	x8, [x8, #8]
  4543f8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  4543fc:	add	x1, x1, #0xc5
  454400:	ldr	x0, [x8]
  454404:	bl	402ed0 <strcmp@plt>
  454408:	ldr	x8, [x21, #16]
  45440c:	ldr	x22, [x8, #8]
  454410:	ldr	w8, [x22]
  454414:	cbnz	w0, 455024 <feof@plt+0x51f44>
  454418:	cmp	w8, #0x3
  45441c:	b.ne	455024 <feof@plt+0x51f44>  // b.any
  454420:	ldr	x8, [x22, #16]
  454424:	ldr	w8, [x8]
  454428:	cmp	w8, #0x29
  45442c:	b.eq	454438 <feof@plt+0x51358>  // b.none
  454430:	mov	w8, #0x1                   	// #1
  454434:	str	w8, [x25]
  454438:	ldr	x22, [x22, #8]
  45443c:	ldr	w8, [x22]
  454440:	cmp	w8, #0x31
  454444:	b.ls	455030 <feof@plt+0x51f50>  // b.plast
  454448:	b	455b2c <feof@plt+0x52a4c>
  45444c:	add	w8, w8, #0x1
  454450:	str	w8, [x22, #4]
  454454:	ldr	x8, [x19, #328]
  454458:	add	w9, w9, #0x1
  45445c:	str	w9, [x19, #308]
  454460:	add	x9, sp, #0x10
  454464:	mov	x0, x19
  454468:	mov	w1, w20
  45446c:	mov	x2, x22
  454470:	stp	x22, x8, [sp, #16]
  454474:	str	x9, [x19, #328]
  454478:	bl	4509c8 <feof@plt+0x4d8e8>
  45447c:	ldr	x8, [sp, #24]
  454480:	str	x8, [x19, #328]
  454484:	ldr	w8, [x22, #4]
  454488:	sub	w8, w8, #0x1
  45448c:	str	w8, [x22, #4]
  454490:	ldr	w8, [x19, #308]
  454494:	sub	w8, w8, #0x1
  454498:	str	w8, [x19, #308]
  45449c:	b	452c74 <feof@plt+0x4fb94>
  4544a0:	cmp	w23, #0x7
  4544a4:	b.ne	452c04 <feof@plt+0x4fb24>  // b.any
  4544a8:	ldr	x9, [x21, #16]
  4544ac:	ldr	w10, [x9]
  4544b0:	cbz	w10, 45537c <feof@plt+0x5229c>
  4544b4:	mov	w23, #0x7                   	// #7
  4544b8:	b	452c04 <feof@plt+0x4fb24>
  4544bc:	add	w8, w8, #0x1
  4544c0:	ldr	x23, [x19, #320]
  4544c4:	str	w8, [x21, #4]
  4544c8:	ldr	x8, [x19, #328]
  4544cc:	add	w9, w9, #0x1
  4544d0:	str	w9, [x19, #308]
  4544d4:	add	x9, sp, #0x10
  4544d8:	mov	x0, x19
  4544dc:	mov	w1, w20
  4544e0:	mov	x2, x21
  4544e4:	stp	x21, x8, [sp, #16]
  4544e8:	str	x9, [x19, #328]
  4544ec:	bl	4509c8 <feof@plt+0x4d8e8>
  4544f0:	ldr	x8, [sp, #24]
  4544f4:	str	x8, [x19, #328]
  4544f8:	ldr	w8, [x21, #4]
  4544fc:	sub	w8, w8, #0x1
  454500:	str	w8, [x21, #4]
  454504:	ldr	w8, [x19, #308]
  454508:	ldr	x9, [x19, #320]
  45450c:	sub	w8, w8, #0x1
  454510:	cmp	x9, x23
  454514:	str	w8, [x19, #308]
  454518:	b.ne	4530d4 <feof@plt+0x4fff4>  // b.any
  45451c:	b	45434c <feof@plt+0x5126c>
  454520:	add	w8, w8, #0x1
  454524:	str	w8, [x22, #4]
  454528:	ldr	x8, [x19, #328]
  45452c:	add	w9, w9, #0x1
  454530:	str	w9, [x19, #308]
  454534:	add	x9, sp, #0x10
  454538:	mov	x0, x19
  45453c:	mov	w1, w20
  454540:	mov	x2, x22
  454544:	stp	x22, x8, [sp, #16]
  454548:	str	x9, [x19, #328]
  45454c:	bl	4509c8 <feof@plt+0x4d8e8>
  454550:	ldr	x8, [sp, #24]
  454554:	str	x8, [x19, #328]
  454558:	ldr	w8, [x22, #4]
  45455c:	sub	w8, w8, #0x1
  454560:	str	w8, [x22, #4]
  454564:	ldr	w8, [x19, #308]
  454568:	sub	w8, w8, #0x1
  45456c:	str	w8, [x19, #308]
  454570:	ldrb	w8, [x19, #264]
  454574:	cmp	w8, #0x3c
  454578:	b.ne	4545c4 <feof@plt+0x514e4>  // b.any
  45457c:	ldr	x8, [x19, #256]
  454580:	cmp	x8, #0xff
  454584:	b.ne	4545b0 <feof@plt+0x514d0>  // b.any
  454588:	ldp	x8, x2, [x19, #272]
  45458c:	mov	w1, #0xff                  	// #255
  454590:	mov	x0, x19
  454594:	strb	wzr, [x19, #255]
  454598:	blr	x8
  45459c:	ldr	x9, [x19, #320]
  4545a0:	mov	x8, xzr
  4545a4:	str	xzr, [x19, #256]
  4545a8:	add	x9, x9, #0x1
  4545ac:	str	x9, [x19, #320]
  4545b0:	add	x9, x8, #0x1
  4545b4:	mov	w10, #0x20                  	// #32
  4545b8:	str	x9, [x19, #256]
  4545bc:	strb	w10, [x19, x8]
  4545c0:	strb	w10, [x19, #264]
  4545c4:	ldr	x8, [x19, #256]
  4545c8:	cmp	x8, #0xff
  4545cc:	b.ne	4545f8 <feof@plt+0x51518>  // b.any
  4545d0:	ldp	x8, x2, [x19, #272]
  4545d4:	mov	w1, #0xff                  	// #255
  4545d8:	mov	x0, x19
  4545dc:	strb	wzr, [x19, #255]
  4545e0:	blr	x8
  4545e4:	ldr	x9, [x19, #320]
  4545e8:	mov	x8, xzr
  4545ec:	str	xzr, [x19, #256]
  4545f0:	add	x9, x9, #0x1
  4545f4:	str	x9, [x19, #320]
  4545f8:	add	x9, x8, #0x1
  4545fc:	mov	w10, #0x3c                  	// #60
  454600:	str	x9, [x19, #256]
  454604:	strb	w10, [x19, x8]
  454608:	strb	w10, [x19, #264]
  45460c:	ldr	x21, [x21, #16]
  454610:	cbz	x21, 45462c <feof@plt+0x5154c>
  454614:	ldr	w8, [x21, #4]
  454618:	cmp	w8, #0x1
  45461c:	b.gt	45462c <feof@plt+0x5154c>
  454620:	ldr	w9, [x19, #308]
  454624:	cmp	w9, #0x401
  454628:	b.lt	454a70 <feof@plt+0x51990>  // b.tstop
  45462c:	mov	w8, #0x1                   	// #1
  454630:	str	w8, [x25]
  454634:	ldr	x8, [x19, #256]
  454638:	cmp	x8, #0xff
  45463c:	b.ne	454668 <feof@plt+0x51588>  // b.any
  454640:	ldp	x8, x2, [x19, #272]
  454644:	mov	w1, #0xff                  	// #255
  454648:	mov	x0, x19
  45464c:	strb	wzr, [x19, #255]
  454650:	blr	x8
  454654:	ldr	x9, [x19, #320]
  454658:	mov	x8, xzr
  45465c:	str	xzr, [x19, #256]
  454660:	add	x9, x9, #0x1
  454664:	str	x9, [x19, #320]
  454668:	add	x9, x8, #0x1
  45466c:	mov	w10, #0x3e                  	// #62
  454670:	str	x9, [x19, #256]
  454674:	strb	w10, [x19, x8]
  454678:	strb	w10, [x19, #264]
  45467c:	str	x24, [x19, #296]
  454680:	str	x23, [x19, #368]
  454684:	b	4530d4 <feof@plt+0x4fff4>
  454688:	cbz	x23, 4546b4 <feof@plt+0x515d4>
  45468c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  454690:	add	x1, x1, #0x886
  454694:	mov	x0, x23
  454698:	bl	402ed0 <strcmp@plt>
  45469c:	cbz	w0, 45557c <feof@plt+0x5249c>
  4546a0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  4546a4:	add	x1, x1, #0x171
  4546a8:	mov	x0, x23
  4546ac:	bl	402ed0 <strcmp@plt>
  4546b0:	cbz	w0, 455a2c <feof@plt+0x5294c>
  4546b4:	ldrsw	x22, [x24, #16]
  4546b8:	cbz	w22, 454d08 <feof@plt+0x51c28>
  4546bc:	ldr	x24, [x24, #8]
  4546c0:	b	4546e0 <feof@plt+0x51600>
  4546c4:	add	x9, x8, #0x1
  4546c8:	subs	x22, x22, #0x1
  4546cc:	add	x24, x24, #0x1
  4546d0:	str	x9, [x19, #256]
  4546d4:	strb	w26, [x19, x8]
  4546d8:	strb	w26, [x19, #264]
  4546dc:	b.eq	454d08 <feof@plt+0x51c28>  // b.none
  4546e0:	ldr	x8, [x19, #256]
  4546e4:	ldrb	w26, [x24]
  4546e8:	cmp	x8, #0xff
  4546ec:	b.ne	4546c4 <feof@plt+0x515e4>  // b.any
  4546f0:	ldp	x8, x2, [x19, #272]
  4546f4:	mov	w1, #0xff                  	// #255
  4546f8:	mov	x0, x19
  4546fc:	strb	wzr, [x19, #255]
  454700:	blr	x8
  454704:	ldr	x9, [x19, #320]
  454708:	mov	x8, xzr
  45470c:	str	xzr, [x19, #256]
  454710:	add	x9, x9, #0x1
  454714:	str	x9, [x19, #320]
  454718:	b	4546c4 <feof@plt+0x515e4>
  45471c:	add	w8, w8, #0x1
  454720:	str	w8, [x22, #4]
  454724:	ldr	x8, [x19, #328]
  454728:	add	w9, w9, #0x1
  45472c:	str	w9, [x19, #308]
  454730:	add	x9, sp, #0x10
  454734:	mov	x0, x19
  454738:	mov	w1, w20
  45473c:	mov	x2, x22
  454740:	stp	x22, x8, [sp, #16]
  454744:	str	x9, [x19, #328]
  454748:	bl	4509c8 <feof@plt+0x4d8e8>
  45474c:	ldr	x8, [sp, #24]
  454750:	str	x8, [x19, #328]
  454754:	ldr	w8, [x22, #4]
  454758:	sub	w8, w8, #0x1
  45475c:	str	w8, [x22, #4]
  454760:	ldr	w8, [x19, #308]
  454764:	sub	w8, w8, #0x1
  454768:	str	w8, [x19, #308]
  45476c:	ldr	x8, [x19, #256]
  454770:	cmp	x8, #0xff
  454774:	b.ne	4547a0 <feof@plt+0x516c0>  // b.any
  454778:	ldp	x8, x2, [x19, #272]
  45477c:	mov	w1, #0xff                  	// #255
  454780:	mov	x0, x19
  454784:	strb	wzr, [x19, #255]
  454788:	blr	x8
  45478c:	ldr	x9, [x19, #320]
  454790:	mov	x8, xzr
  454794:	str	xzr, [x19, #256]
  454798:	add	x9, x9, #0x1
  45479c:	str	x9, [x19, #320]
  4547a0:	add	x9, x8, #0x1
  4547a4:	mov	w10, #0x7b                  	// #123
  4547a8:	str	x9, [x19, #256]
  4547ac:	strb	w10, [x19, x8]
  4547b0:	strb	w10, [x19, #264]
  4547b4:	cbz	x21, 4547d0 <feof@plt+0x516f0>
  4547b8:	ldr	w8, [x21, #4]
  4547bc:	cmp	w8, #0x1
  4547c0:	b.gt	4547d0 <feof@plt+0x516f0>
  4547c4:	ldr	w9, [x19, #308]
  4547c8:	cmp	w9, #0x401
  4547cc:	b.lt	454a1c <feof@plt+0x5193c>  // b.tstop
  4547d0:	mov	w8, #0x1                   	// #1
  4547d4:	str	w8, [x25]
  4547d8:	ldr	x8, [x19, #256]
  4547dc:	cmp	x8, #0xff
  4547e0:	b.ne	45480c <feof@plt+0x5172c>  // b.any
  4547e4:	ldp	x8, x2, [x19, #272]
  4547e8:	mov	w1, #0xff                  	// #255
  4547ec:	mov	x0, x19
  4547f0:	strb	wzr, [x19, #255]
  4547f4:	blr	x8
  4547f8:	ldr	x9, [x19, #320]
  4547fc:	mov	x8, xzr
  454800:	str	xzr, [x19, #256]
  454804:	add	x9, x9, #0x1
  454808:	str	x9, [x19, #320]
  45480c:	add	x9, x8, #0x1
  454810:	mov	w10, #0x7d                  	// #125
  454814:	b	4559c8 <feof@plt+0x528e8>
  454818:	add	w8, w8, #0x1
  45481c:	str	w8, [x22, #4]
  454820:	ldr	x8, [x19, #328]
  454824:	add	w9, w9, #0x1
  454828:	str	w9, [x19, #308]
  45482c:	add	x9, sp, #0x10
  454830:	mov	x0, x19
  454834:	mov	w1, w20
  454838:	mov	x2, x22
  45483c:	stp	x22, x8, [sp, #16]
  454840:	str	x9, [x19, #328]
  454844:	bl	4509c8 <feof@plt+0x4d8e8>
  454848:	ldr	x8, [sp, #24]
  45484c:	str	x8, [x19, #328]
  454850:	ldr	w8, [x22, #4]
  454854:	sub	w8, w8, #0x1
  454858:	str	w8, [x22, #4]
  45485c:	ldr	w8, [x19, #308]
  454860:	sub	w8, w8, #0x1
  454864:	str	w8, [x19, #308]
  454868:	ldr	x21, [x21, #16]
  45486c:	cbnz	x21, 4530b4 <feof@plt+0x4ffd4>
  454870:	b	4530cc <feof@plt+0x4ffec>
  454874:	add	w8, w8, #0x1
  454878:	str	w8, [x22, #4]
  45487c:	ldr	x8, [x19, #328]
  454880:	add	w9, w9, #0x1
  454884:	str	w9, [x19, #308]
  454888:	add	x9, sp, #0x10
  45488c:	mov	x0, x19
  454890:	mov	w1, w20
  454894:	mov	x2, x22
  454898:	stp	x22, x8, [sp, #16]
  45489c:	str	x9, [x19, #328]
  4548a0:	bl	4509c8 <feof@plt+0x4d8e8>
  4548a4:	ldr	x8, [sp, #24]
  4548a8:	str	x8, [x19, #328]
  4548ac:	ldr	w8, [x22, #4]
  4548b0:	sub	w8, w8, #0x1
  4548b4:	str	w8, [x22, #4]
  4548b8:	ldr	w8, [x19, #308]
  4548bc:	sub	w8, w8, #0x1
  4548c0:	str	w8, [x19, #308]
  4548c4:	b	452a10 <feof@plt+0x4f930>
  4548c8:	add	w8, w8, #0x1
  4548cc:	str	w8, [x22, #4]
  4548d0:	ldr	x8, [x19, #328]
  4548d4:	add	w9, w9, #0x1
  4548d8:	str	w9, [x19, #308]
  4548dc:	add	x9, sp, #0x10
  4548e0:	mov	x0, x19
  4548e4:	mov	w1, w20
  4548e8:	mov	x2, x22
  4548ec:	stp	x22, x8, [sp, #16]
  4548f0:	str	x9, [x19, #328]
  4548f4:	bl	4509c8 <feof@plt+0x4d8e8>
  4548f8:	ldr	x8, [sp, #24]
  4548fc:	str	x8, [x19, #328]
  454900:	ldr	w8, [x22, #4]
  454904:	sub	w8, w8, #0x1
  454908:	str	w8, [x22, #4]
  45490c:	ldr	w8, [x19, #308]
  454910:	sub	w8, w8, #0x1
  454914:	str	w8, [x19, #308]
  454918:	b	452b98 <feof@plt+0x4fab8>
  45491c:	add	w8, w8, #0x1
  454920:	str	w8, [x22, #4]
  454924:	ldr	x8, [x19, #328]
  454928:	add	w9, w9, #0x1
  45492c:	str	w9, [x19, #308]
  454930:	add	x9, sp, #0x10
  454934:	mov	x0, x19
  454938:	mov	w1, w20
  45493c:	mov	x2, x22
  454940:	stp	x22, x8, [sp, #16]
  454944:	str	x9, [x19, #328]
  454948:	bl	4509c8 <feof@plt+0x4d8e8>
  45494c:	ldr	x8, [sp, #24]
  454950:	str	x8, [x19, #328]
  454954:	ldr	w8, [x22, #4]
  454958:	sub	w8, w8, #0x1
  45495c:	str	w8, [x22, #4]
  454960:	ldr	w8, [x19, #308]
  454964:	sub	w8, w8, #0x1
  454968:	str	w8, [x19, #308]
  45496c:	b	452df0 <feof@plt+0x4fd10>
  454970:	add	w8, w8, #0x1
  454974:	str	w8, [x22, #4]
  454978:	ldr	x8, [x19, #328]
  45497c:	add	w9, w9, #0x1
  454980:	str	w9, [x19, #308]
  454984:	add	x9, sp, #0x10
  454988:	mov	x0, x19
  45498c:	mov	w1, w20
  454990:	mov	x2, x22
  454994:	stp	x22, x8, [sp, #16]
  454998:	str	x9, [x19, #328]
  45499c:	bl	4509c8 <feof@plt+0x4d8e8>
  4549a0:	ldr	x8, [sp, #24]
  4549a4:	str	x8, [x19, #328]
  4549a8:	ldr	w8, [x22, #4]
  4549ac:	sub	w8, w8, #0x1
  4549b0:	str	w8, [x22, #4]
  4549b4:	ldr	w8, [x19, #308]
  4549b8:	sub	w8, w8, #0x1
  4549bc:	str	w8, [x19, #308]
  4549c0:	b	452f44 <feof@plt+0x4fe64>
  4549c4:	add	w8, w9, #0x1
  4549c8:	str	w8, [x22, #4]
  4549cc:	ldr	x8, [x19, #328]
  4549d0:	add	w9, w10, #0x1
  4549d4:	str	w9, [x19, #308]
  4549d8:	add	x9, sp, #0x10
  4549dc:	mov	x0, x19
  4549e0:	mov	w1, w20
  4549e4:	mov	x2, x22
  4549e8:	stp	x22, x8, [sp, #16]
  4549ec:	str	x9, [x19, #328]
  4549f0:	bl	4509c8 <feof@plt+0x4d8e8>
  4549f4:	ldr	x8, [sp, #24]
  4549f8:	str	x8, [x19, #328]
  4549fc:	ldr	w8, [x22, #4]
  454a00:	sub	w8, w8, #0x1
  454a04:	str	w8, [x22, #4]
  454a08:	ldr	w9, [x19, #308]
  454a0c:	ldr	w8, [x19, #312]
  454a10:	sub	w9, w9, #0x1
  454a14:	str	w9, [x19, #308]
  454a18:	b	453430 <feof@plt+0x50350>
  454a1c:	add	w8, w8, #0x1
  454a20:	str	w8, [x21, #4]
  454a24:	ldr	x8, [x19, #328]
  454a28:	add	w9, w9, #0x1
  454a2c:	str	w9, [x19, #308]
  454a30:	add	x9, sp, #0x10
  454a34:	mov	x0, x19
  454a38:	mov	w1, w20
  454a3c:	mov	x2, x21
  454a40:	stp	x21, x8, [sp, #16]
  454a44:	str	x9, [x19, #328]
  454a48:	bl	4509c8 <feof@plt+0x4d8e8>
  454a4c:	ldr	x8, [sp, #24]
  454a50:	str	x8, [x19, #328]
  454a54:	ldr	w8, [x21, #4]
  454a58:	sub	w8, w8, #0x1
  454a5c:	str	w8, [x21, #4]
  454a60:	ldr	w8, [x19, #308]
  454a64:	sub	w8, w8, #0x1
  454a68:	str	w8, [x19, #308]
  454a6c:	b	4547d8 <feof@plt+0x516f8>
  454a70:	add	w8, w8, #0x1
  454a74:	str	w8, [x21, #4]
  454a78:	ldr	x8, [x19, #328]
  454a7c:	add	w9, w9, #0x1
  454a80:	str	w9, [x19, #308]
  454a84:	add	x9, sp, #0x10
  454a88:	mov	x0, x19
  454a8c:	mov	w1, w20
  454a90:	mov	x2, x21
  454a94:	stp	x21, x8, [sp, #16]
  454a98:	str	x9, [x19, #328]
  454a9c:	bl	4509c8 <feof@plt+0x4d8e8>
  454aa0:	ldr	x8, [sp, #24]
  454aa4:	str	x8, [x19, #328]
  454aa8:	ldr	w8, [x21, #4]
  454aac:	sub	w8, w8, #0x1
  454ab0:	str	w8, [x21, #4]
  454ab4:	ldr	w8, [x19, #308]
  454ab8:	ldrb	w9, [x19, #264]
  454abc:	sub	w8, w8, #0x1
  454ac0:	cmp	w9, #0x3e
  454ac4:	str	w8, [x19, #308]
  454ac8:	b.ne	454634 <feof@plt+0x51554>  // b.any
  454acc:	ldr	x8, [x19, #256]
  454ad0:	cmp	x8, #0xff
  454ad4:	b.ne	454b00 <feof@plt+0x51a20>  // b.any
  454ad8:	ldp	x8, x2, [x19, #272]
  454adc:	mov	w1, #0xff                  	// #255
  454ae0:	mov	x0, x19
  454ae4:	strb	wzr, [x19, #255]
  454ae8:	blr	x8
  454aec:	ldr	x9, [x19, #320]
  454af0:	mov	x8, xzr
  454af4:	str	xzr, [x19, #256]
  454af8:	add	x9, x9, #0x1
  454afc:	str	x9, [x19, #320]
  454b00:	add	x9, x8, #0x1
  454b04:	mov	w10, #0x20                  	// #32
  454b08:	str	x9, [x19, #256]
  454b0c:	strb	w10, [x19, x8]
  454b10:	strb	w10, [x19, #264]
  454b14:	b	454634 <feof@plt+0x51554>
  454b18:	add	w8, w8, #0x1
  454b1c:	str	w8, [x23, #4]
  454b20:	ldr	x8, [x19, #328]
  454b24:	add	w9, w9, #0x1
  454b28:	str	w9, [x19, #308]
  454b2c:	sub	x9, x29, #0x10
  454b30:	mov	x0, x19
  454b34:	mov	w1, w20
  454b38:	mov	x2, x23
  454b3c:	stp	x23, x8, [x29, #-16]
  454b40:	str	x9, [x19, #328]
  454b44:	bl	4509c8 <feof@plt+0x4d8e8>
  454b48:	ldur	x8, [x29, #-8]
  454b4c:	str	x8, [x19, #328]
  454b50:	ldr	w8, [x23, #4]
  454b54:	sub	w8, w8, #0x1
  454b58:	str	w8, [x23, #4]
  454b5c:	ldr	w8, [x19, #308]
  454b60:	sub	w8, w8, #0x1
  454b64:	str	w8, [x19, #308]
  454b68:	b	453bc0 <feof@plt+0x50ae0>
  454b6c:	mov	w8, #0x1                   	// #1
  454b70:	str	w8, [x25]
  454b74:	b	4530cc <feof@plt+0x4ffec>
  454b78:	ldr	x11, [x19, #328]
  454b7c:	cbz	x11, 454fc8 <feof@plt+0x51ee8>
  454b80:	mov	x12, x11
  454b84:	b	454b90 <feof@plt+0x51ab0>
  454b88:	ldr	x12, [x12, #8]
  454b8c:	cbz	x12, 454fc8 <feof@plt+0x51ee8>
  454b90:	ldr	x13, [x12]
  454b94:	cmp	x13, x9
  454b98:	b.eq	454bac <feof@plt+0x51acc>  // b.none
  454b9c:	cmp	x13, x21
  454ba0:	b.ne	454b88 <feof@plt+0x51aa8>  // b.any
  454ba4:	cmp	x12, x11
  454ba8:	b.eq	454b88 <feof@plt+0x51aa8>  // b.none
  454bac:	mov	w23, wzr
  454bb0:	b	454fd8 <feof@plt+0x51ef8>
  454bb4:	ldr	x24, [x24, #16]
  454bb8:	ldr	w10, [x24]
  454bbc:	cmp	w10, #0x47
  454bc0:	b.ne	454bc8 <feof@plt+0x51ae8>  // b.any
  454bc4:	ldr	x24, [x24, #8]
  454bc8:	cbz	x24, 4530cc <feof@plt+0x4ffec>
  454bcc:	mov	x11, #0x1f                  	// #31
  454bd0:	mov	w10, #0x1                   	// #1
  454bd4:	movk	x11, #0x1a, lsl #48
  454bd8:	ldr	w12, [x24]
  454bdc:	sub	w13, w12, #0x1c
  454be0:	cmp	w13, #0x34
  454be4:	b.hi	454c2c <feof@plt+0x51b4c>  // b.pmore
  454be8:	lsl	x13, x10, x13
  454bec:	tst	x13, x11
  454bf0:	b.eq	454c2c <feof@plt+0x51b4c>  // b.none
  454bf4:	cmp	x23, #0x4
  454bf8:	b.cs	4530cc <feof@plt+0x4ffec>  // b.hs, b.nlast
  454bfc:	ldp	q0, q1, [x9]
  454c00:	add	x12, x9, #0x20
  454c04:	add	x23, x23, #0x1
  454c08:	stp	q0, q1, [x9, #32]
  454c0c:	str	x9, [x9, #32]
  454c10:	str	x12, [x19, #296]
  454c14:	str	x24, [x9, #8]
  454c18:	str	wzr, [x9, #16]
  454c1c:	str	x8, [x9, #24]
  454c20:	ldr	x24, [x24, #8]
  454c24:	mov	x9, x12
  454c28:	b	454bd8 <feof@plt+0x51af8>
  454c2c:	cmp	w12, #0x4
  454c30:	b.ne	454c40 <feof@plt+0x51b60>  // b.any
  454c34:	stp	x8, x24, [sp]
  454c38:	mov	x8, sp
  454c3c:	str	x8, [x19, #288]
  454c40:	ldr	x21, [x21, #16]
  454c44:	cbz	x21, 454c60 <feof@plt+0x51b80>
  454c48:	ldr	w8, [x21, #4]
  454c4c:	cmp	w8, #0x1
  454c50:	b.gt	454c60 <feof@plt+0x51b80>
  454c54:	ldr	w9, [x19, #308]
  454c58:	cmp	w9, #0x401
  454c5c:	b.lt	455be4 <feof@plt+0x52b04>  // b.tstop
  454c60:	mov	w8, #0x1                   	// #1
  454c64:	str	w8, [x25]
  454c68:	ldr	w8, [x24]
  454c6c:	cmp	w8, #0x4
  454c70:	b.ne	454c7c <feof@plt+0x51b9c>  // b.any
  454c74:	ldr	x8, [sp]
  454c78:	str	x8, [x19, #288]
  454c7c:	sub	w8, w23, #0x1
  454c80:	add	x9, sp, #0x10
  454c84:	add	x8, x9, x8, lsl #5
  454c88:	add	x21, x8, #0x10
  454c8c:	mov	w24, #0x20                  	// #32
  454c90:	b	454cc0 <feof@plt+0x51be0>
  454c94:	add	x9, x8, #0x1
  454c98:	str	x9, [x19, #256]
  454c9c:	strb	w24, [x19, x8]
  454ca0:	strb	w24, [x19, #264]
  454ca4:	ldur	x2, [x21, #-8]
  454ca8:	mov	x0, x19
  454cac:	mov	w1, w20
  454cb0:	bl	456c60 <feof@plt+0x53b80>
  454cb4:	sub	w23, w23, #0x1
  454cb8:	sub	x21, x21, #0x20
  454cbc:	cbz	w23, 454d00 <feof@plt+0x51c20>
  454cc0:	ldr	w8, [x21]
  454cc4:	cbnz	w8, 454cb4 <feof@plt+0x51bd4>
  454cc8:	ldr	x8, [x19, #256]
  454ccc:	cmp	x8, #0xff
  454cd0:	b.ne	454c94 <feof@plt+0x51bb4>  // b.any
  454cd4:	ldp	x8, x2, [x19, #272]
  454cd8:	mov	w1, #0xff                  	// #255
  454cdc:	mov	x0, x19
  454ce0:	strb	wzr, [x19, #255]
  454ce4:	blr	x8
  454ce8:	ldr	x9, [x19, #320]
  454cec:	mov	x8, xzr
  454cf0:	str	xzr, [x19, #256]
  454cf4:	add	x9, x9, #0x1
  454cf8:	str	x9, [x19, #320]
  454cfc:	b	454c94 <feof@plt+0x51bb4>
  454d00:	str	x22, [x19, #296]
  454d04:	b	4530d4 <feof@plt+0x4fff4>
  454d08:	cbz	x23, 453eec <feof@plt+0x50e0c>
  454d0c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  454d10:	add	x1, x1, #0x111
  454d14:	mov	x0, x23
  454d18:	bl	402ed0 <strcmp@plt>
  454d1c:	cbz	w0, 4541d4 <feof@plt+0x510f4>
  454d20:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  454d24:	add	x1, x1, #0xeb
  454d28:	mov	x0, x23
  454d2c:	bl	402ed0 <strcmp@plt>
  454d30:	cbnz	w0, 453eec <feof@plt+0x50e0c>
  454d34:	b	453f10 <feof@plt+0x50e30>
  454d38:	ldr	w8, [x22, #4]
  454d3c:	cmp	w8, #0x1
  454d40:	b.gt	454d50 <feof@plt+0x51c70>
  454d44:	ldr	w9, [x19, #308]
  454d48:	cmp	w9, #0x401
  454d4c:	b.lt	455824 <feof@plt+0x52744>  // b.tstop
  454d50:	mov	w8, #0x1                   	// #1
  454d54:	str	w8, [x25]
  454d58:	b	455874 <feof@plt+0x52794>
  454d5c:	add	w8, w8, #0x1
  454d60:	str	w8, [x22, #4]
  454d64:	ldr	x8, [x19, #328]
  454d68:	add	w9, w9, #0x1
  454d6c:	str	w9, [x19, #308]
  454d70:	add	x9, sp, #0x10
  454d74:	mov	x0, x19
  454d78:	mov	w1, w20
  454d7c:	mov	x2, x22
  454d80:	stp	x22, x8, [sp, #16]
  454d84:	str	x9, [x19, #328]
  454d88:	bl	4509c8 <feof@plt+0x4d8e8>
  454d8c:	ldr	x8, [sp, #24]
  454d90:	str	x8, [x19, #328]
  454d94:	ldr	w8, [x22, #4]
  454d98:	sub	w8, w8, #0x1
  454d9c:	str	w8, [x22, #4]
  454da0:	ldr	w8, [x19, #308]
  454da4:	sub	w8, w8, #0x1
  454da8:	str	w8, [x19, #308]
  454dac:	b	451de0 <feof@plt+0x4ed00>
  454db0:	add	w8, w9, #0x1
  454db4:	str	w8, [x22, #4]
  454db8:	ldr	x8, [x19, #328]
  454dbc:	add	w9, w10, #0x1
  454dc0:	str	w9, [x19, #308]
  454dc4:	add	x9, sp, #0x10
  454dc8:	mov	x0, x19
  454dcc:	mov	w1, w20
  454dd0:	mov	x2, x22
  454dd4:	stp	x22, x8, [sp, #16]
  454dd8:	str	x9, [x19, #328]
  454ddc:	bl	4509c8 <feof@plt+0x4d8e8>
  454de0:	ldr	x8, [sp, #24]
  454de4:	str	x8, [x19, #328]
  454de8:	ldr	w8, [x22, #4]
  454dec:	sub	w8, w8, #0x1
  454df0:	str	w8, [x22, #4]
  454df4:	ldr	w9, [x19, #308]
  454df8:	ldr	x8, [x19, #368]
  454dfc:	sub	w9, w9, #0x1
  454e00:	str	w9, [x19, #308]
  454e04:	cbnz	x8, 453274 <feof@plt+0x50194>
  454e08:	b	45327c <feof@plt+0x5019c>
  454e0c:	add	w8, w8, #0x1
  454e10:	str	w8, [x21, #4]
  454e14:	ldr	x8, [x19, #328]
  454e18:	add	w9, w9, #0x1
  454e1c:	str	w9, [x19, #308]
  454e20:	add	x9, sp, #0x10
  454e24:	mov	x0, x19
  454e28:	mov	w1, w20
  454e2c:	mov	x2, x21
  454e30:	stp	x21, x8, [sp, #16]
  454e34:	str	x9, [x19, #328]
  454e38:	bl	4509c8 <feof@plt+0x4d8e8>
  454e3c:	ldr	x8, [sp, #24]
  454e40:	str	x8, [x19, #328]
  454e44:	ldr	w8, [x21, #4]
  454e48:	sub	w8, w8, #0x1
  454e4c:	str	w8, [x21, #4]
  454e50:	ldr	w8, [x19, #308]
  454e54:	ldrb	w9, [x19, #264]
  454e58:	sub	w8, w8, #0x1
  454e5c:	cmp	w9, #0x3e
  454e60:	str	w8, [x19, #308]
  454e64:	b.ne	453344 <feof@plt+0x50264>  // b.any
  454e68:	ldr	x8, [x19, #256]
  454e6c:	cmp	x8, #0xff
  454e70:	b.ne	454e9c <feof@plt+0x51dbc>  // b.any
  454e74:	ldp	x8, x2, [x19, #272]
  454e78:	mov	w1, #0xff                  	// #255
  454e7c:	mov	x0, x19
  454e80:	strb	wzr, [x19, #255]
  454e84:	blr	x8
  454e88:	ldr	x9, [x19, #320]
  454e8c:	mov	x8, xzr
  454e90:	str	xzr, [x19, #256]
  454e94:	add	x9, x9, #0x1
  454e98:	str	x9, [x19, #320]
  454e9c:	add	x9, x8, #0x1
  454ea0:	mov	w10, #0x20                  	// #32
  454ea4:	str	x9, [x19, #256]
  454ea8:	strb	w10, [x19, x8]
  454eac:	strb	w10, [x19, #264]
  454eb0:	b	453344 <feof@plt+0x50264>
  454eb4:	add	w8, w9, #0x1
  454eb8:	str	w8, [x22, #4]
  454ebc:	ldr	x8, [x19, #328]
  454ec0:	add	w9, w10, #0x1
  454ec4:	str	w9, [x19, #308]
  454ec8:	add	x9, sp, #0x10
  454ecc:	mov	x0, x19
  454ed0:	mov	w1, w20
  454ed4:	mov	x2, x22
  454ed8:	stp	x22, x8, [sp, #16]
  454edc:	str	x9, [x19, #328]
  454ee0:	bl	4509c8 <feof@plt+0x4d8e8>
  454ee4:	ldr	x8, [sp, #24]
  454ee8:	str	x8, [x19, #328]
  454eec:	ldr	w8, [x22, #4]
  454ef0:	sub	w8, w8, #0x1
  454ef4:	str	w8, [x22, #4]
  454ef8:	ldr	w9, [x19, #308]
  454efc:	ldr	x8, [x19, #368]
  454f00:	sub	w9, w9, #0x1
  454f04:	str	w9, [x19, #308]
  454f08:	cbnz	x8, 453898 <feof@plt+0x507b8>
  454f0c:	b	4530d4 <feof@plt+0x4fff4>
  454f10:	ldr	x8, [x19, #256]
  454f14:	cmp	x8, #0xff
  454f18:	b.ne	454f44 <feof@plt+0x51e64>  // b.any
  454f1c:	ldp	x8, x2, [x19, #272]
  454f20:	mov	w1, #0xff                  	// #255
  454f24:	mov	x0, x19
  454f28:	strb	wzr, [x19, #255]
  454f2c:	blr	x8
  454f30:	ldr	x9, [x19, #320]
  454f34:	mov	x8, xzr
  454f38:	str	xzr, [x19, #256]
  454f3c:	add	x9, x9, #0x1
  454f40:	str	x9, [x19, #320]
  454f44:	add	x9, x8, #0x1
  454f48:	mov	w10, #0x28                  	// #40
  454f4c:	str	x9, [x19, #256]
  454f50:	strb	w10, [x19, x8]
  454f54:	strb	w10, [x19, #264]
  454f58:	cbz	x21, 454f74 <feof@plt+0x51e94>
  454f5c:	ldr	w8, [x21, #4]
  454f60:	cmp	w8, #0x1
  454f64:	b.gt	454f74 <feof@plt+0x51e94>
  454f68:	ldr	w9, [x19, #308]
  454f6c:	cmp	w9, #0x401
  454f70:	b.lt	455f78 <feof@plt+0x52e98>  // b.tstop
  454f74:	mov	w8, #0x1                   	// #1
  454f78:	str	w8, [x25]
  454f7c:	ldr	x8, [x19, #256]
  454f80:	cmp	x8, #0xff
  454f84:	b.ne	454fb0 <feof@plt+0x51ed0>  // b.any
  454f88:	ldp	x8, x2, [x19, #272]
  454f8c:	mov	w1, #0xff                  	// #255
  454f90:	mov	x0, x19
  454f94:	strb	wzr, [x19, #255]
  454f98:	blr	x8
  454f9c:	ldr	x9, [x19, #320]
  454fa0:	mov	x8, xzr
  454fa4:	str	xzr, [x19, #256]
  454fa8:	add	x9, x9, #0x1
  454fac:	str	x9, [x19, #320]
  454fb0:	add	x9, x8, #0x1
  454fb4:	mov	w10, #0x29                  	// #41
  454fb8:	str	x9, [x19, #256]
  454fbc:	strb	w10, [x19, x8]
  454fc0:	strb	w10, [x19, #264]
  454fc4:	b	4552b0 <feof@plt+0x521d0>
  454fc8:	ldr	x10, [x10]
  454fcc:	ldr	x24, [x19, #288]
  454fd0:	mov	w23, #0x1                   	// #1
  454fd4:	str	x10, [x19, #288]
  454fd8:	ldr	x10, [x19, #288]
  454fdc:	cbz	x10, 455018 <feof@plt+0x51f38>
  454fe0:	ldr	x11, [x10, #8]
  454fe4:	ldr	w10, [x9, #8]
  454fe8:	ldr	x9, [x11, #16]
  454fec:	tbnz	w10, #31, 455d68 <feof@plt+0x52c88>
  454ff0:	cbz	x9, 4565d8 <feof@plt+0x534f8>
  454ff4:	ldr	w11, [x9]
  454ff8:	cmp	w11, #0x2f
  454ffc:	b.ne	4565d8 <feof@plt+0x534f8>  // b.any
  455000:	subs	w11, w10, #0x1
  455004:	b.lt	455d60 <feof@plt+0x52c80>  // b.tstop
  455008:	ldr	x9, [x9, #16]
  45500c:	mov	w10, w11
  455010:	cbnz	x9, 454ff4 <feof@plt+0x51f14>
  455014:	b	4565d8 <feof@plt+0x534f8>
  455018:	mov	w8, #0x1                   	// #1
  45501c:	str	w8, [x25]
  455020:	b	4565d8 <feof@plt+0x534f8>
  455024:	cmp	w8, #0x31
  455028:	b.hi	455b2c <feof@plt+0x52a4c>  // b.pmore
  45502c:	mov	w8, w8
  455030:	mov	w9, #0x1                   	// #1
  455034:	lsl	x8, x9, x8
  455038:	mov	x9, #0x43                  	// #67
  45503c:	movk	x9, #0x2, lsl #48
  455040:	tst	x8, x9
  455044:	b.eq	455b2c <feof@plt+0x52a4c>  // b.none
  455048:	cbz	x22, 455064 <feof@plt+0x51f84>
  45504c:	ldr	w8, [x22, #4]
  455050:	cmp	w8, #0x1
  455054:	b.gt	455064 <feof@plt+0x51f84>
  455058:	ldr	w9, [x19, #308]
  45505c:	cmp	w9, #0x401
  455060:	b.lt	455da4 <feof@plt+0x52cc4>  // b.tstop
  455064:	mov	w8, #0x1                   	// #1
  455068:	str	w8, [x25]
  45506c:	b	455df8 <feof@plt+0x52d18>
  455070:	add	w8, w8, #0x1
  455074:	str	w8, [x22, #4]
  455078:	ldr	x8, [x19, #328]
  45507c:	add	w9, w9, #0x1
  455080:	str	w9, [x19, #308]
  455084:	add	x9, sp, #0x10
  455088:	mov	x0, x19
  45508c:	mov	w1, w20
  455090:	mov	x2, x22
  455094:	stp	x22, x8, [sp, #16]
  455098:	str	x9, [x19, #328]
  45509c:	bl	4509c8 <feof@plt+0x4d8e8>
  4550a0:	ldr	x8, [sp, #24]
  4550a4:	str	x8, [x19, #328]
  4550a8:	ldr	w8, [x22, #4]
  4550ac:	sub	w8, w8, #0x1
  4550b0:	str	w8, [x22, #4]
  4550b4:	ldr	w8, [x19, #308]
  4550b8:	sub	w8, w8, #0x1
  4550bc:	str	w8, [x19, #308]
  4550c0:	b	453e7c <feof@plt+0x50d9c>
  4550c4:	add	w8, w8, #0x1
  4550c8:	str	w8, [x22, #4]
  4550cc:	ldr	x8, [x19, #328]
  4550d0:	add	w9, w9, #0x1
  4550d4:	str	w9, [x19, #308]
  4550d8:	add	x9, sp, #0x10
  4550dc:	mov	x0, x19
  4550e0:	mov	w1, w20
  4550e4:	mov	x2, x22
  4550e8:	stp	x22, x8, [sp, #16]
  4550ec:	str	x9, [x19, #328]
  4550f0:	bl	4509c8 <feof@plt+0x4d8e8>
  4550f4:	ldr	x8, [sp, #24]
  4550f8:	str	x8, [x19, #328]
  4550fc:	ldr	w8, [x22, #4]
  455100:	sub	w8, w8, #0x1
  455104:	str	w8, [x22, #4]
  455108:	ldr	w8, [x19, #308]
  45510c:	sub	w8, w8, #0x1
  455110:	str	w8, [x19, #308]
  455114:	b	453eec <feof@plt+0x50e0c>
  455118:	ldr	x8, [x19, #256]
  45511c:	cmp	x8, #0xff
  455120:	b.ne	45514c <feof@plt+0x5206c>  // b.any
  455124:	ldp	x8, x2, [x19, #272]
  455128:	mov	w1, #0xff                  	// #255
  45512c:	mov	x0, x19
  455130:	strb	wzr, [x19, #255]
  455134:	blr	x8
  455138:	ldr	x9, [x19, #320]
  45513c:	mov	x8, xzr
  455140:	str	xzr, [x19, #256]
  455144:	add	x9, x9, #0x1
  455148:	str	x9, [x19, #320]
  45514c:	add	x9, x8, #0x1
  455150:	mov	w10, #0x6c                  	// #108
  455154:	b	4559c8 <feof@plt+0x528e8>
  455158:	ldr	x8, [x19, #256]
  45515c:	cmp	x8, #0xff
  455160:	b.ne	45518c <feof@plt+0x520ac>  // b.any
  455164:	ldp	x8, x2, [x19, #272]
  455168:	mov	w1, #0xff                  	// #255
  45516c:	mov	x0, x19
  455170:	strb	wzr, [x19, #255]
  455174:	blr	x8
  455178:	ldr	x9, [x19, #320]
  45517c:	mov	x8, xzr
  455180:	str	xzr, [x19, #256]
  455184:	add	x9, x9, #0x1
  455188:	str	x9, [x19, #320]
  45518c:	add	x9, x8, #0x1
  455190:	mov	w10, #0x75                  	// #117
  455194:	str	x9, [x19, #256]
  455198:	strb	w10, [x19, x8]
  45519c:	ldr	x8, [x19, #256]
  4551a0:	strb	w10, [x19, #264]
  4551a4:	cmp	x8, #0xff
  4551a8:	b.eq	455124 <feof@plt+0x52044>  // b.none
  4551ac:	b	45514c <feof@plt+0x5206c>
  4551b0:	ldr	x8, [x19, #256]
  4551b4:	cmp	x8, #0xff
  4551b8:	b.ne	4551e4 <feof@plt+0x52104>  // b.any
  4551bc:	ldp	x8, x2, [x19, #272]
  4551c0:	mov	w1, #0xff                  	// #255
  4551c4:	mov	x0, x19
  4551c8:	strb	wzr, [x19, #255]
  4551cc:	blr	x8
  4551d0:	ldr	x9, [x19, #320]
  4551d4:	mov	x8, xzr
  4551d8:	str	xzr, [x19, #256]
  4551dc:	add	x9, x9, #0x1
  4551e0:	str	x9, [x19, #320]
  4551e4:	add	x9, x8, #0x1
  4551e8:	mov	w20, #0x6c                  	// #108
  4551ec:	str	x9, [x19, #256]
  4551f0:	strb	w20, [x19, x8]
  4551f4:	ldr	x8, [x19, #256]
  4551f8:	strb	w20, [x19, #264]
  4551fc:	cmp	x8, #0xff
  455200:	b.eq	452618 <feof@plt+0x4f538>  // b.none
  455204:	b	452640 <feof@plt+0x4f560>
  455208:	ldr	x8, [x19, #256]
  45520c:	cmp	x8, #0xff
  455210:	b.ne	45523c <feof@plt+0x5215c>  // b.any
  455214:	ldp	x8, x2, [x19, #272]
  455218:	mov	w1, #0xff                  	// #255
  45521c:	mov	x0, x19
  455220:	strb	wzr, [x19, #255]
  455224:	blr	x8
  455228:	ldr	x9, [x19, #320]
  45522c:	mov	x8, xzr
  455230:	str	xzr, [x19, #256]
  455234:	add	x9, x9, #0x1
  455238:	str	x9, [x19, #320]
  45523c:	add	x9, x8, #0x1
  455240:	mov	w10, #0x75                  	// #117
  455244:	str	x9, [x19, #256]
  455248:	strb	w10, [x19, x8]
  45524c:	ldr	x8, [x19, #256]
  455250:	strb	w10, [x19, #264]
  455254:	cmp	x8, #0xff
  455258:	b.eq	4551bc <feof@plt+0x520dc>  // b.none
  45525c:	b	4551e4 <feof@plt+0x52104>
  455260:	add	w8, w8, #0x1
  455264:	str	w8, [x21, #4]
  455268:	ldr	x8, [x19, #328]
  45526c:	add	w9, w9, #0x1
  455270:	str	w9, [x19, #308]
  455274:	add	x9, sp, #0x10
  455278:	mov	x0, x19
  45527c:	mov	w1, w20
  455280:	mov	x2, x21
  455284:	stp	x21, x8, [sp, #16]
  455288:	str	x9, [x19, #328]
  45528c:	bl	4509c8 <feof@plt+0x4d8e8>
  455290:	ldr	x8, [sp, #24]
  455294:	str	x8, [x19, #328]
  455298:	ldr	w8, [x21, #4]
  45529c:	sub	w8, w8, #0x1
  4552a0:	str	w8, [x21, #4]
  4552a4:	ldr	w8, [x19, #308]
  4552a8:	sub	w8, w8, #0x1
  4552ac:	str	w8, [x19, #308]
  4552b0:	ldr	x8, [x19, #256]
  4552b4:	cmp	x8, #0xff
  4552b8:	b.ne	4552e4 <feof@plt+0x52204>  // b.any
  4552bc:	ldp	x8, x2, [x19, #272]
  4552c0:	mov	w1, #0xff                  	// #255
  4552c4:	mov	x0, x19
  4552c8:	strb	wzr, [x19, #255]
  4552cc:	blr	x8
  4552d0:	ldr	x9, [x19, #320]
  4552d4:	mov	x8, xzr
  4552d8:	str	xzr, [x19, #256]
  4552dc:	add	x9, x9, #0x1
  4552e0:	str	x9, [x19, #320]
  4552e4:	add	x9, x8, #0x1
  4552e8:	mov	w20, #0x2e                  	// #46
  4552ec:	str	x9, [x19, #256]
  4552f0:	strb	w20, [x19, x8]
  4552f4:	ldr	x8, [x19, #256]
  4552f8:	strb	w20, [x19, #264]
  4552fc:	cmp	x8, #0xff
  455300:	b.ne	45532c <feof@plt+0x5224c>  // b.any
  455304:	ldp	x8, x2, [x19, #272]
  455308:	mov	w1, #0xff                  	// #255
  45530c:	mov	x0, x19
  455310:	strb	wzr, [x19, #255]
  455314:	blr	x8
  455318:	ldr	x9, [x19, #320]
  45531c:	mov	x8, xzr
  455320:	str	xzr, [x19, #256]
  455324:	add	x9, x9, #0x1
  455328:	str	x9, [x19, #320]
  45532c:	add	x9, x8, #0x1
  455330:	str	x9, [x19, #256]
  455334:	strb	w20, [x19, x8]
  455338:	ldr	x8, [x19, #256]
  45533c:	strb	w20, [x19, #264]
  455340:	cmp	x8, #0xff
  455344:	b.ne	455370 <feof@plt+0x52290>  // b.any
  455348:	ldp	x8, x2, [x19, #272]
  45534c:	mov	w1, #0xff                  	// #255
  455350:	mov	x0, x19
  455354:	strb	wzr, [x19, #255]
  455358:	blr	x8
  45535c:	ldr	x9, [x19, #320]
  455360:	mov	x8, xzr
  455364:	str	xzr, [x19, #256]
  455368:	add	x9, x9, #0x1
  45536c:	str	x9, [x19, #320]
  455370:	add	x9, x8, #0x1
  455374:	mov	w10, #0x2e                  	// #46
  455378:	b	4559c8 <feof@plt+0x528e8>
  45537c:	cmp	w8, #0x3d
  455380:	mov	w23, #0x7                   	// #7
  455384:	b.ne	452c04 <feof@plt+0x4fb24>  // b.any
  455388:	ldr	w8, [x9, #16]
  45538c:	cmp	w8, #0x1
  455390:	b.ne	452c04 <feof@plt+0x4fb24>  // b.any
  455394:	ldr	x8, [x9, #8]
  455398:	ldrb	w8, [x8]
  45539c:	cmp	w8, #0x31
  4553a0:	b.eq	455fcc <feof@plt+0x52eec>  // b.none
  4553a4:	cmp	w8, #0x30
  4553a8:	b.ne	4544b4 <feof@plt+0x513d4>  // b.any
  4553ac:	ldr	x8, [x19, #256]
  4553b0:	cmp	x8, #0xff
  4553b4:	b.ne	4553e0 <feof@plt+0x52300>  // b.any
  4553b8:	ldp	x8, x2, [x19, #272]
  4553bc:	mov	w1, #0xff                  	// #255
  4553c0:	mov	x0, x19
  4553c4:	strb	wzr, [x19, #255]
  4553c8:	blr	x8
  4553cc:	ldr	x9, [x19, #320]
  4553d0:	mov	x8, xzr
  4553d4:	str	xzr, [x19, #256]
  4553d8:	add	x9, x9, #0x1
  4553dc:	str	x9, [x19, #320]
  4553e0:	add	x9, x8, #0x1
  4553e4:	mov	w10, #0x66                  	// #102
  4553e8:	str	x9, [x19, #256]
  4553ec:	strb	w10, [x19, x8]
  4553f0:	ldr	x8, [x19, #256]
  4553f4:	strb	w10, [x19, #264]
  4553f8:	cmp	x8, #0xff
  4553fc:	b.ne	455428 <feof@plt+0x52348>  // b.any
  455400:	ldp	x8, x2, [x19, #272]
  455404:	mov	w1, #0xff                  	// #255
  455408:	mov	x0, x19
  45540c:	strb	wzr, [x19, #255]
  455410:	blr	x8
  455414:	ldr	x9, [x19, #320]
  455418:	mov	x8, xzr
  45541c:	str	xzr, [x19, #256]
  455420:	add	x9, x9, #0x1
  455424:	str	x9, [x19, #320]
  455428:	add	x9, x8, #0x1
  45542c:	mov	w10, #0x61                  	// #97
  455430:	str	x9, [x19, #256]
  455434:	strb	w10, [x19, x8]
  455438:	ldr	x8, [x19, #256]
  45543c:	strb	w10, [x19, #264]
  455440:	cmp	x8, #0xff
  455444:	b.ne	455470 <feof@plt+0x52390>  // b.any
  455448:	ldp	x8, x2, [x19, #272]
  45544c:	mov	w1, #0xff                  	// #255
  455450:	mov	x0, x19
  455454:	strb	wzr, [x19, #255]
  455458:	blr	x8
  45545c:	ldr	x9, [x19, #320]
  455460:	mov	x8, xzr
  455464:	str	xzr, [x19, #256]
  455468:	add	x9, x9, #0x1
  45546c:	str	x9, [x19, #320]
  455470:	add	x9, x8, #0x1
  455474:	mov	w10, #0x6c                  	// #108
  455478:	str	x9, [x19, #256]
  45547c:	strb	w10, [x19, x8]
  455480:	ldr	x8, [x19, #256]
  455484:	strb	w10, [x19, #264]
  455488:	cmp	x8, #0xff
  45548c:	b.ne	4554b8 <feof@plt+0x523d8>  // b.any
  455490:	ldp	x8, x2, [x19, #272]
  455494:	mov	w1, #0xff                  	// #255
  455498:	mov	x0, x19
  45549c:	strb	wzr, [x19, #255]
  4554a0:	blr	x8
  4554a4:	ldr	x9, [x19, #320]
  4554a8:	mov	x8, xzr
  4554ac:	str	xzr, [x19, #256]
  4554b0:	add	x9, x9, #0x1
  4554b4:	str	x9, [x19, #320]
  4554b8:	add	x9, x8, #0x1
  4554bc:	mov	w10, #0x73                  	// #115
  4554c0:	b	456098 <feof@plt+0x52fb8>
  4554c4:	add	w8, w8, #0x1
  4554c8:	str	w8, [x22, #4]
  4554cc:	ldr	x8, [x19, #328]
  4554d0:	add	w9, w9, #0x1
  4554d4:	str	w9, [x19, #308]
  4554d8:	add	x9, sp, #0x10
  4554dc:	mov	x0, x19
  4554e0:	mov	w1, w20
  4554e4:	mov	x2, x22
  4554e8:	stp	x22, x8, [sp, #16]
  4554ec:	str	x9, [x19, #328]
  4554f0:	bl	4509c8 <feof@plt+0x4d8e8>
  4554f4:	ldr	x8, [sp, #24]
  4554f8:	str	x8, [x19, #328]
  4554fc:	ldr	w8, [x22, #4]
  455500:	sub	w8, w8, #0x1
  455504:	str	w8, [x22, #4]
  455508:	ldr	w8, [x19, #308]
  45550c:	sub	w8, w8, #0x1
  455510:	str	w8, [x19, #308]
  455514:	b	450dfc <feof@plt+0x4dd1c>
  455518:	add	w8, w9, #0x1
  45551c:	str	w8, [x22, #4]
  455520:	ldr	x8, [x19, #328]
  455524:	add	w9, w10, #0x1
  455528:	str	w9, [x19, #308]
  45552c:	and	w1, w20, #0xffffff9f
  455530:	sub	x9, x29, #0x10
  455534:	mov	x0, x19
  455538:	mov	x2, x22
  45553c:	stp	x22, x8, [x29, #-16]
  455540:	str	x9, [x19, #328]
  455544:	bl	4509c8 <feof@plt+0x4d8e8>
  455548:	ldur	x8, [x29, #-8]
  45554c:	str	x8, [x19, #328]
  455550:	ldr	w8, [x22, #4]
  455554:	sub	w8, w8, #0x1
  455558:	str	w8, [x22, #4]
  45555c:	ldr	w8, [x19, #308]
  455560:	sub	w8, w8, #0x1
  455564:	str	w8, [x19, #308]
  455568:	ldr	x8, [sp, #16]
  45556c:	ldr	w9, [sp, #32]
  455570:	str	x8, [x19, #296]
  455574:	cbnz	w9, 4530d4 <feof@plt+0x4fff4>
  455578:	b	451b50 <feof@plt+0x4ea70>
  45557c:	mov	x0, x19
  455580:	mov	x1, x21
  455584:	bl	457dac <feof@plt+0x54ccc>
  455588:	mov	w2, wzr
  45558c:	cbz	x0, 4555b0 <feof@plt+0x524d0>
  455590:	ldr	w8, [x0]
  455594:	cmp	w8, #0x2f
  455598:	b.ne	4555b0 <feof@plt+0x524d0>  // b.any
  45559c:	ldr	x8, [x0, #8]
  4555a0:	cbz	x8, 4555b0 <feof@plt+0x524d0>
  4555a4:	ldr	x0, [x0, #16]
  4555a8:	add	w2, w2, #0x1
  4555ac:	cbnz	x0, 455590 <feof@plt+0x524b0>
  4555b0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  4555b4:	add	x1, x1, #0x229
  4555b8:	add	x0, sp, #0x10
  4555bc:	bl	402c30 <sprintf@plt>
  4555c0:	add	x0, sp, #0x10
  4555c4:	bl	402a50 <strlen@plt>
  4555c8:	cbz	x0, 4530d4 <feof@plt+0x4fff4>
  4555cc:	mov	x20, x0
  4555d0:	add	x21, sp, #0x10
  4555d4:	b	4555f4 <feof@plt+0x52514>
  4555d8:	add	x9, x8, #0x1
  4555dc:	subs	x20, x20, #0x1
  4555e0:	add	x21, x21, #0x1
  4555e4:	str	x9, [x19, #256]
  4555e8:	strb	w22, [x19, x8]
  4555ec:	strb	w22, [x19, #264]
  4555f0:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  4555f4:	ldr	x8, [x19, #256]
  4555f8:	ldrb	w22, [x21]
  4555fc:	cmp	x8, #0xff
  455600:	b.ne	4555d8 <feof@plt+0x524f8>  // b.any
  455604:	ldp	x8, x2, [x19, #272]
  455608:	mov	w1, #0xff                  	// #255
  45560c:	mov	x0, x19
  455610:	strb	wzr, [x19, #255]
  455614:	blr	x8
  455618:	ldr	x9, [x19, #320]
  45561c:	mov	x8, xzr
  455620:	str	xzr, [x19, #256]
  455624:	add	x9, x9, #0x1
  455628:	str	x9, [x19, #320]
  45562c:	b	4555d8 <feof@plt+0x524f8>
  455630:	ldr	w8, [x23]
  455634:	cmp	w8, #0x31
  455638:	b.hi	4561a4 <feof@plt+0x530c4>  // b.pmore
  45563c:	mov	w9, #0x1                   	// #1
  455640:	lsl	x8, x9, x8
  455644:	mov	x9, #0x43                  	// #67
  455648:	movk	x9, #0x2, lsl #48
  45564c:	tst	x8, x9
  455650:	b.eq	4561a4 <feof@plt+0x530c4>  // b.none
  455654:	ldr	w8, [x23, #4]
  455658:	cmp	w8, #0x1
  45565c:	b.gt	45566c <feof@plt+0x5258c>
  455660:	ldr	w9, [x19, #308]
  455664:	cmp	w9, #0x401
  455668:	b.lt	456210 <feof@plt+0x53130>  // b.tstop
  45566c:	mov	w8, #0x1                   	// #1
  455670:	str	w8, [x25]
  455674:	b	45688c <feof@plt+0x537ac>
  455678:	ldr	x21, [x21, #16]
  45567c:	cbz	x21, 455698 <feof@plt+0x525b8>
  455680:	ldr	w8, [x21, #4]
  455684:	cmp	w8, #0x1
  455688:	b.gt	455698 <feof@plt+0x525b8>
  45568c:	ldr	w9, [x19, #308]
  455690:	cmp	w9, #0x401
  455694:	b.lt	456344 <feof@plt+0x53264>  // b.tstop
  455698:	mov	w8, #0x1                   	// #1
  45569c:	str	w8, [x25]
  4556a0:	ldr	x8, [x19, #256]
  4556a4:	cmp	x8, #0xff
  4556a8:	b.ne	4556d4 <feof@plt+0x525f4>  // b.any
  4556ac:	ldp	x8, x2, [x19, #272]
  4556b0:	mov	w1, #0xff                  	// #255
  4556b4:	mov	x0, x19
  4556b8:	strb	wzr, [x19, #255]
  4556bc:	blr	x8
  4556c0:	ldr	x9, [x19, #320]
  4556c4:	mov	x8, xzr
  4556c8:	str	xzr, [x19, #256]
  4556cc:	add	x9, x9, #0x1
  4556d0:	str	x9, [x19, #320]
  4556d4:	add	x9, x8, #0x1
  4556d8:	mov	w10, #0x5b                  	// #91
  4556dc:	str	x9, [x19, #256]
  4556e0:	strb	w10, [x19, x8]
  4556e4:	ldr	x8, [x19, #256]
  4556e8:	strb	w10, [x19, #264]
  4556ec:	cmp	x8, #0xff
  4556f0:	b.ne	45571c <feof@plt+0x5263c>  // b.any
  4556f4:	ldp	x8, x2, [x19, #272]
  4556f8:	mov	w1, #0xff                  	// #255
  4556fc:	mov	x0, x19
  455700:	strb	wzr, [x19, #255]
  455704:	blr	x8
  455708:	ldr	x9, [x19, #320]
  45570c:	mov	x8, xzr
  455710:	str	xzr, [x19, #256]
  455714:	add	x9, x9, #0x1
  455718:	str	x9, [x19, #320]
  45571c:	add	x9, x8, #0x1
  455720:	mov	w10, #0x5d                  	// #93
  455724:	b	454670 <feof@plt+0x51590>
  455728:	ldr	x8, [x19, #256]
  45572c:	cmp	x8, #0xff
  455730:	b.ne	45575c <feof@plt+0x5267c>  // b.any
  455734:	ldp	x8, x2, [x19, #272]
  455738:	mov	w1, #0xff                  	// #255
  45573c:	mov	x0, x19
  455740:	strb	wzr, [x19, #255]
  455744:	blr	x8
  455748:	ldr	x9, [x19, #320]
  45574c:	mov	x8, xzr
  455750:	str	xzr, [x19, #256]
  455754:	add	x9, x9, #0x1
  455758:	str	x9, [x19, #320]
  45575c:	add	x9, x8, #0x1
  455760:	mov	w10, #0x28                  	// #40
  455764:	str	x9, [x19, #256]
  455768:	strb	w10, [x19, x8]
  45576c:	strb	w10, [x19, #264]
  455770:	cbz	x21, 45578c <feof@plt+0x526ac>
  455774:	ldr	w8, [x21, #4]
  455778:	cmp	w8, #0x1
  45577c:	b.gt	45578c <feof@plt+0x526ac>
  455780:	ldr	w9, [x19, #308]
  455784:	cmp	w9, #0x401
  455788:	b.lt	456578 <feof@plt+0x53498>  // b.tstop
  45578c:	mov	w8, #0x1                   	// #1
  455790:	str	w8, [x25]
  455794:	ldr	x8, [x19, #256]
  455798:	cmp	x8, #0xff
  45579c:	b.ne	4557c8 <feof@plt+0x526e8>  // b.any
  4557a0:	ldp	x8, x2, [x19, #272]
  4557a4:	mov	w1, #0xff                  	// #255
  4557a8:	mov	x0, x19
  4557ac:	strb	wzr, [x19, #255]
  4557b0:	blr	x8
  4557b4:	ldr	x9, [x19, #320]
  4557b8:	mov	x8, xzr
  4557bc:	str	xzr, [x19, #256]
  4557c0:	add	x9, x9, #0x1
  4557c4:	str	x9, [x19, #320]
  4557c8:	add	x9, x8, #0x1
  4557cc:	mov	w10, #0x29                  	// #41
  4557d0:	str	x9, [x19, #256]
  4557d4:	strb	w10, [x19, x8]
  4557d8:	strb	w10, [x19, #264]
  4557dc:	b	455c88 <feof@plt+0x52ba8>
  4557e0:	cbnz	w8, 4530cc <feof@plt+0x4ffec>
  4557e4:	ldr	x21, [x21, #8]
  4557e8:	cbz	x21, 4530cc <feof@plt+0x4ffec>
  4557ec:	ldr	w8, [x21]
  4557f0:	cmp	w8, #0x2f
  4557f4:	b.ne	456270 <feof@plt+0x53190>  // b.any
  4557f8:	ldr	w8, [x19, #316]
  4557fc:	tbnz	w8, #31, 456270 <feof@plt+0x53190>
  455800:	subs	w9, w8, #0x1
  455804:	b.lt	456264 <feof@plt+0x53184>  // b.tstop
  455808:	ldr	x21, [x21, #16]
  45580c:	cbz	x21, 4530cc <feof@plt+0x4ffec>
  455810:	ldr	w8, [x21]
  455814:	cmp	w8, #0x2f
  455818:	mov	w8, w9
  45581c:	b.eq	455800 <feof@plt+0x52720>  // b.none
  455820:	b	4530cc <feof@plt+0x4ffec>
  455824:	add	w8, w8, #0x1
  455828:	str	w8, [x22, #4]
  45582c:	ldr	x8, [x19, #328]
  455830:	add	w9, w9, #0x1
  455834:	str	w9, [x19, #308]
  455838:	add	x9, sp, #0x10
  45583c:	mov	x0, x19
  455840:	mov	w1, w20
  455844:	mov	x2, x22
  455848:	stp	x22, x8, [sp, #16]
  45584c:	str	x9, [x19, #328]
  455850:	bl	4509c8 <feof@plt+0x4d8e8>
  455854:	ldr	x8, [sp, #24]
  455858:	str	x8, [x19, #328]
  45585c:	ldr	w8, [x22, #4]
  455860:	sub	w8, w8, #0x1
  455864:	str	w8, [x22, #4]
  455868:	ldr	w8, [x19, #308]
  45586c:	sub	w8, w8, #0x1
  455870:	str	w8, [x19, #308]
  455874:	ldr	x8, [x19, #256]
  455878:	cmp	x8, #0xff
  45587c:	b.ne	4558a8 <feof@plt+0x527c8>  // b.any
  455880:	ldp	x8, x2, [x19, #272]
  455884:	mov	w1, #0xff                  	// #255
  455888:	mov	x0, x19
  45588c:	strb	wzr, [x19, #255]
  455890:	blr	x8
  455894:	ldr	x9, [x19, #320]
  455898:	mov	x8, xzr
  45589c:	str	xzr, [x19, #256]
  4558a0:	add	x9, x9, #0x1
  4558a4:	str	x9, [x19, #320]
  4558a8:	add	x9, x8, #0x1
  4558ac:	mov	w10, #0x3c                  	// #60
  4558b0:	str	x9, [x19, #256]
  4558b4:	strb	w10, [x19, x8]
  4558b8:	strb	w10, [x19, #264]
  4558bc:	ldr	x8, [x21, #16]
  4558c0:	ldr	x22, [x8, #8]
  4558c4:	cbz	x22, 4558e0 <feof@plt+0x52800>
  4558c8:	ldr	w8, [x22, #4]
  4558cc:	cmp	w8, #0x1
  4558d0:	b.gt	4558e0 <feof@plt+0x52800>
  4558d4:	ldr	w9, [x19, #308]
  4558d8:	cmp	w9, #0x401
  4558dc:	b.lt	4559d8 <feof@plt+0x528f8>  // b.tstop
  4558e0:	mov	w8, #0x1                   	// #1
  4558e4:	str	w8, [x25]
  4558e8:	ldr	x8, [x19, #256]
  4558ec:	cmp	x8, #0xff
  4558f0:	b.ne	45591c <feof@plt+0x5283c>  // b.any
  4558f4:	ldp	x8, x2, [x19, #272]
  4558f8:	mov	w1, #0xff                  	// #255
  4558fc:	mov	x0, x19
  455900:	strb	wzr, [x19, #255]
  455904:	blr	x8
  455908:	ldr	x9, [x19, #320]
  45590c:	mov	x8, xzr
  455910:	str	xzr, [x19, #256]
  455914:	add	x9, x9, #0x1
  455918:	str	x9, [x19, #320]
  45591c:	add	x9, x8, #0x1
  455920:	mov	w10, #0x3e                  	// #62
  455924:	str	x9, [x19, #256]
  455928:	strb	w10, [x19, x8]
  45592c:	ldr	x8, [x19, #256]
  455930:	strb	w10, [x19, #264]
  455934:	cmp	x8, #0xff
  455938:	b.ne	455964 <feof@plt+0x52884>  // b.any
  45593c:	ldp	x8, x2, [x19, #272]
  455940:	mov	w1, #0xff                  	// #255
  455944:	mov	x0, x19
  455948:	strb	wzr, [x19, #255]
  45594c:	blr	x8
  455950:	ldr	x9, [x19, #320]
  455954:	mov	x8, xzr
  455958:	str	xzr, [x19, #256]
  45595c:	add	x9, x9, #0x1
  455960:	str	x9, [x19, #320]
  455964:	add	x9, x8, #0x1
  455968:	mov	w10, #0x28                  	// #40
  45596c:	str	x9, [x19, #256]
  455970:	strb	w10, [x19, x8]
  455974:	strb	w10, [x19, #264]
  455978:	ldr	x8, [x21, #16]
  45597c:	ldr	x21, [x8, #16]
  455980:	cbnz	x21, 45338c <feof@plt+0x502ac>
  455984:	mov	w8, #0x1                   	// #1
  455988:	str	w8, [x25]
  45598c:	ldr	x8, [x19, #256]
  455990:	cmp	x8, #0xff
  455994:	b.ne	4559c0 <feof@plt+0x528e0>  // b.any
  455998:	ldp	x8, x2, [x19, #272]
  45599c:	mov	w1, #0xff                  	// #255
  4559a0:	mov	x0, x19
  4559a4:	strb	wzr, [x19, #255]
  4559a8:	blr	x8
  4559ac:	ldr	x9, [x19, #320]
  4559b0:	mov	x8, xzr
  4559b4:	str	xzr, [x19, #256]
  4559b8:	add	x9, x9, #0x1
  4559bc:	str	x9, [x19, #320]
  4559c0:	add	x9, x8, #0x1
  4559c4:	mov	w10, #0x29                  	// #41
  4559c8:	str	x9, [x19, #256]
  4559cc:	strb	w10, [x19, x8]
  4559d0:	strb	w10, [x19, #264]
  4559d4:	b	4530d4 <feof@plt+0x4fff4>
  4559d8:	add	w8, w8, #0x1
  4559dc:	str	w8, [x22, #4]
  4559e0:	ldr	x8, [x19, #328]
  4559e4:	add	w9, w9, #0x1
  4559e8:	str	w9, [x19, #308]
  4559ec:	add	x9, sp, #0x10
  4559f0:	mov	x0, x19
  4559f4:	mov	w1, w20
  4559f8:	mov	x2, x22
  4559fc:	stp	x22, x8, [sp, #16]
  455a00:	str	x9, [x19, #328]
  455a04:	bl	4509c8 <feof@plt+0x4d8e8>
  455a08:	ldr	x8, [sp, #24]
  455a0c:	str	x8, [x19, #328]
  455a10:	ldr	w8, [x22, #4]
  455a14:	sub	w8, w8, #0x1
  455a18:	str	w8, [x22, #4]
  455a1c:	ldr	w8, [x19, #308]
  455a20:	sub	w8, w8, #0x1
  455a24:	str	w8, [x19, #308]
  455a28:	b	4558e8 <feof@plt+0x52808>
  455a2c:	mov	w20, wzr
  455a30:	cbz	x21, 455aa8 <feof@plt+0x529c8>
  455a34:	cmp	w26, #0x2f
  455a38:	b.ne	455aa8 <feof@plt+0x529c8>  // b.any
  455a3c:	mov	w20, wzr
  455a40:	ldr	x8, [x21, #8]
  455a44:	cbz	x8, 455aa8 <feof@plt+0x529c8>
  455a48:	ldr	w9, [x8]
  455a4c:	cmp	w9, #0x4b
  455a50:	b.ne	455a8c <feof@plt+0x529ac>  // b.any
  455a54:	ldr	x1, [x8, #8]
  455a58:	mov	x0, x19
  455a5c:	bl	457dac <feof@plt+0x54ccc>
  455a60:	mov	w8, wzr
  455a64:	cbz	x0, 455a90 <feof@plt+0x529b0>
  455a68:	ldr	w9, [x0]
  455a6c:	cmp	w9, #0x2f
  455a70:	b.ne	455a90 <feof@plt+0x529b0>  // b.any
  455a74:	ldr	x9, [x0, #8]
  455a78:	cbz	x9, 455a90 <feof@plt+0x529b0>
  455a7c:	ldr	x0, [x0, #16]
  455a80:	add	w8, w8, #0x1
  455a84:	cbnz	x0, 455a68 <feof@plt+0x52988>
  455a88:	b	455a90 <feof@plt+0x529b0>
  455a8c:	mov	w8, #0x1                   	// #1
  455a90:	ldr	x21, [x21, #16]
  455a94:	add	w20, w8, w20
  455a98:	cbz	x21, 455aa8 <feof@plt+0x529c8>
  455a9c:	ldr	w8, [x21]
  455aa0:	cmp	w8, #0x2f
  455aa4:	b.eq	455a40 <feof@plt+0x52960>  // b.none
  455aa8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  455aac:	add	x1, x1, #0x229
  455ab0:	add	x0, sp, #0x10
  455ab4:	mov	w2, w20
  455ab8:	bl	402c30 <sprintf@plt>
  455abc:	add	x0, sp, #0x10
  455ac0:	bl	402a50 <strlen@plt>
  455ac4:	cbz	x0, 4530d4 <feof@plt+0x4fff4>
  455ac8:	mov	x20, x0
  455acc:	add	x21, sp, #0x10
  455ad0:	b	455af0 <feof@plt+0x52a10>
  455ad4:	add	x9, x8, #0x1
  455ad8:	subs	x20, x20, #0x1
  455adc:	add	x21, x21, #0x1
  455ae0:	str	x9, [x19, #256]
  455ae4:	strb	w22, [x19, x8]
  455ae8:	strb	w22, [x19, #264]
  455aec:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  455af0:	ldr	x8, [x19, #256]
  455af4:	ldrb	w22, [x21]
  455af8:	cmp	x8, #0xff
  455afc:	b.ne	455ad4 <feof@plt+0x529f4>  // b.any
  455b00:	ldp	x8, x2, [x19, #272]
  455b04:	mov	w1, #0xff                  	// #255
  455b08:	mov	x0, x19
  455b0c:	strb	wzr, [x19, #255]
  455b10:	blr	x8
  455b14:	ldr	x9, [x19, #320]
  455b18:	mov	x8, xzr
  455b1c:	str	xzr, [x19, #256]
  455b20:	add	x9, x9, #0x1
  455b24:	str	x9, [x19, #320]
  455b28:	b	455ad4 <feof@plt+0x529f4>
  455b2c:	ldr	x8, [x19, #256]
  455b30:	cmp	x8, #0xff
  455b34:	b.ne	455b60 <feof@plt+0x52a80>  // b.any
  455b38:	ldp	x8, x2, [x19, #272]
  455b3c:	mov	w1, #0xff                  	// #255
  455b40:	mov	x0, x19
  455b44:	strb	wzr, [x19, #255]
  455b48:	blr	x8
  455b4c:	ldr	x9, [x19, #320]
  455b50:	mov	x8, xzr
  455b54:	str	xzr, [x19, #256]
  455b58:	add	x9, x9, #0x1
  455b5c:	str	x9, [x19, #320]
  455b60:	add	x9, x8, #0x1
  455b64:	mov	w10, #0x28                  	// #40
  455b68:	str	x9, [x19, #256]
  455b6c:	strb	w10, [x19, x8]
  455b70:	strb	w10, [x19, #264]
  455b74:	cbz	x22, 455b90 <feof@plt+0x52ab0>
  455b78:	ldr	w8, [x22, #4]
  455b7c:	cmp	w8, #0x1
  455b80:	b.gt	455b90 <feof@plt+0x52ab0>
  455b84:	ldr	w9, [x19, #308]
  455b88:	cmp	w9, #0x401
  455b8c:	b.lt	4565e4 <feof@plt+0x53504>  // b.tstop
  455b90:	mov	w8, #0x1                   	// #1
  455b94:	str	w8, [x25]
  455b98:	ldr	x8, [x19, #256]
  455b9c:	cmp	x8, #0xff
  455ba0:	b.ne	455bcc <feof@plt+0x52aec>  // b.any
  455ba4:	ldp	x8, x2, [x19, #272]
  455ba8:	mov	w1, #0xff                  	// #255
  455bac:	mov	x0, x19
  455bb0:	strb	wzr, [x19, #255]
  455bb4:	blr	x8
  455bb8:	ldr	x9, [x19, #320]
  455bbc:	mov	x8, xzr
  455bc0:	str	xzr, [x19, #256]
  455bc4:	add	x9, x9, #0x1
  455bc8:	str	x9, [x19, #320]
  455bcc:	add	x9, x8, #0x1
  455bd0:	mov	w10, #0x29                  	// #41
  455bd4:	str	x9, [x19, #256]
  455bd8:	strb	w10, [x19, x8]
  455bdc:	strb	w10, [x19, #264]
  455be0:	b	455df8 <feof@plt+0x52d18>
  455be4:	add	w8, w8, #0x1
  455be8:	str	w8, [x21, #4]
  455bec:	ldr	x8, [x19, #328]
  455bf0:	add	w9, w9, #0x1
  455bf4:	str	w9, [x19, #308]
  455bf8:	sub	x9, x29, #0x10
  455bfc:	mov	x0, x19
  455c00:	mov	w1, w20
  455c04:	mov	x2, x21
  455c08:	stp	x21, x8, [x29, #-16]
  455c0c:	str	x9, [x19, #328]
  455c10:	bl	4509c8 <feof@plt+0x4d8e8>
  455c14:	ldur	x8, [x29, #-8]
  455c18:	str	x8, [x19, #328]
  455c1c:	ldr	w8, [x21, #4]
  455c20:	sub	w8, w8, #0x1
  455c24:	str	w8, [x21, #4]
  455c28:	ldr	w8, [x19, #308]
  455c2c:	sub	w8, w8, #0x1
  455c30:	str	w8, [x19, #308]
  455c34:	b	454c68 <feof@plt+0x51b88>
  455c38:	add	w8, w8, #0x1
  455c3c:	str	w8, [x21, #4]
  455c40:	ldr	x8, [x19, #328]
  455c44:	add	w9, w9, #0x1
  455c48:	str	w9, [x19, #308]
  455c4c:	add	x9, sp, #0x10
  455c50:	mov	x0, x19
  455c54:	mov	w1, w20
  455c58:	mov	x2, x21
  455c5c:	stp	x21, x8, [sp, #16]
  455c60:	str	x9, [x19, #328]
  455c64:	bl	4509c8 <feof@plt+0x4d8e8>
  455c68:	ldr	x8, [sp, #24]
  455c6c:	str	x8, [x19, #328]
  455c70:	ldr	w8, [x21, #4]
  455c74:	sub	w8, w8, #0x1
  455c78:	str	w8, [x21, #4]
  455c7c:	ldr	w8, [x19, #308]
  455c80:	sub	w8, w8, #0x1
  455c84:	str	w8, [x19, #308]
  455c88:	ldr	w8, [x22]
  455c8c:	cmp	w8, #0x32
  455c90:	b.ne	455d00 <feof@plt+0x52c20>  // b.any
  455c94:	ldr	x8, [x22, #8]
  455c98:	ldrsw	x20, [x8, #16]
  455c9c:	cbz	w20, 4530d4 <feof@plt+0x4fff4>
  455ca0:	ldr	x21, [x8, #8]
  455ca4:	b	455cc4 <feof@plt+0x52be4>
  455ca8:	add	x9, x8, #0x1
  455cac:	subs	x20, x20, #0x1
  455cb0:	add	x21, x21, #0x1
  455cb4:	str	x9, [x19, #256]
  455cb8:	strb	w22, [x19, x8]
  455cbc:	strb	w22, [x19, #264]
  455cc0:	b.eq	4530d4 <feof@plt+0x4fff4>  // b.none
  455cc4:	ldr	x8, [x19, #256]
  455cc8:	ldrb	w22, [x21]
  455ccc:	cmp	x8, #0xff
  455cd0:	b.ne	455ca8 <feof@plt+0x52bc8>  // b.any
  455cd4:	ldp	x8, x2, [x19, #272]
  455cd8:	mov	w1, #0xff                  	// #255
  455cdc:	mov	x0, x19
  455ce0:	strb	wzr, [x19, #255]
  455ce4:	blr	x8
  455ce8:	ldr	x9, [x19, #320]
  455cec:	mov	x8, xzr
  455cf0:	str	xzr, [x19, #256]
  455cf4:	add	x9, x9, #0x1
  455cf8:	str	x9, [x19, #320]
  455cfc:	b	455ca8 <feof@plt+0x52bc8>
  455d00:	ldr	w8, [x22, #4]
  455d04:	cmp	w8, #0x1
  455d08:	b.gt	4530cc <feof@plt+0x4ffec>
  455d0c:	ldr	w9, [x19, #308]
  455d10:	cmp	w9, #0x401
  455d14:	b.ge	4530cc <feof@plt+0x4ffec>  // b.tcont
  455d18:	add	w8, w8, #0x1
  455d1c:	str	w8, [x22, #4]
  455d20:	ldr	x8, [x19, #328]
  455d24:	add	w9, w9, #0x1
  455d28:	str	w9, [x19, #308]
  455d2c:	add	x9, sp, #0x10
  455d30:	mov	x0, x19
  455d34:	mov	w1, w20
  455d38:	mov	x2, x22
  455d3c:	stp	x22, x8, [sp, #16]
  455d40:	str	x9, [x19, #328]
  455d44:	bl	4509c8 <feof@plt+0x4d8e8>
  455d48:	ldr	x8, [sp, #24]
  455d4c:	str	x8, [x19, #328]
  455d50:	ldr	w8, [x22, #4]
  455d54:	sub	w8, w8, #0x1
  455d58:	str	w8, [x22, #4]
  455d5c:	b	45313c <feof@plt+0x5005c>
  455d60:	cbnz	w10, 4565d8 <feof@plt+0x534f8>
  455d64:	ldr	x9, [x9, #8]
  455d68:	cbz	x9, 4565d8 <feof@plt+0x534f8>
  455d6c:	ldr	w10, [x9]
  455d70:	cmp	w10, #0x2f
  455d74:	b.ne	450e64 <feof@plt+0x4dd84>  // b.any
  455d78:	ldr	w10, [x19, #316]
  455d7c:	tbnz	w10, #31, 450e64 <feof@plt+0x4dd84>
  455d80:	subs	w11, w10, #0x1
  455d84:	b.lt	4565cc <feof@plt+0x534ec>  // b.tstop
  455d88:	ldr	x9, [x9, #16]
  455d8c:	cbz	x9, 4565d8 <feof@plt+0x534f8>
  455d90:	ldr	w10, [x9]
  455d94:	cmp	w10, #0x2f
  455d98:	mov	w10, w11
  455d9c:	b.eq	455d80 <feof@plt+0x52ca0>  // b.none
  455da0:	b	4565d8 <feof@plt+0x534f8>
  455da4:	add	w8, w8, #0x1
  455da8:	add	w9, w9, #0x1
  455dac:	str	w8, [x22, #4]
  455db0:	str	w9, [x19, #308]
  455db4:	str	x22, [sp, #16]
  455db8:	ldr	x8, [x19, #328]
  455dbc:	add	x9, sp, #0x10
  455dc0:	mov	x0, x19
  455dc4:	mov	w1, w20
  455dc8:	mov	x2, x22
  455dcc:	str	x8, [sp, #24]
  455dd0:	str	x9, [x19, #328]
  455dd4:	bl	4509c8 <feof@plt+0x4d8e8>
  455dd8:	ldr	x8, [sp, #24]
  455ddc:	str	x8, [x19, #328]
  455de0:	ldr	w8, [x22, #4]
  455de4:	sub	w8, w8, #0x1
  455de8:	str	w8, [x22, #4]
  455dec:	ldr	w8, [x19, #308]
  455df0:	sub	w8, w8, #0x1
  455df4:	str	w8, [x19, #308]
  455df8:	ldr	x22, [x21, #8]
  455dfc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1838>
  455e00:	add	x1, x1, #0x350
  455e04:	ldr	x24, [x22, #8]
  455e08:	ldr	x23, [x24]
  455e0c:	mov	x0, x23
  455e10:	bl	402ed0 <strcmp@plt>
  455e14:	cbz	w0, 455ea0 <feof@plt+0x52dc0>
  455e18:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  455e1c:	add	x1, x1, #0xc5
  455e20:	mov	x0, x23
  455e24:	bl	402ed0 <strcmp@plt>
  455e28:	cbz	w0, 4563e8 <feof@plt+0x53308>
  455e2c:	ldr	w8, [x22]
  455e30:	cmp	w8, #0x32
  455e34:	b.ne	455f54 <feof@plt+0x52e74>  // b.any
  455e38:	ldrsw	x22, [x24, #16]
  455e3c:	cbz	w22, 4563e8 <feof@plt+0x53308>
  455e40:	ldr	x23, [x24, #8]
  455e44:	b	455e64 <feof@plt+0x52d84>
  455e48:	add	x9, x8, #0x1
  455e4c:	subs	x22, x22, #0x1
  455e50:	add	x23, x23, #0x1
  455e54:	str	x9, [x19, #256]
  455e58:	strb	w24, [x19, x8]
  455e5c:	strb	w24, [x19, #264]
  455e60:	b.eq	4563e8 <feof@plt+0x53308>  // b.none
  455e64:	ldr	x8, [x19, #256]
  455e68:	ldrb	w24, [x23]
  455e6c:	cmp	x8, #0xff
  455e70:	b.ne	455e48 <feof@plt+0x52d68>  // b.any
  455e74:	ldp	x8, x2, [x19, #272]
  455e78:	mov	w1, #0xff                  	// #255
  455e7c:	mov	x0, x19
  455e80:	strb	wzr, [x19, #255]
  455e84:	blr	x8
  455e88:	ldr	x9, [x19, #320]
  455e8c:	mov	x8, xzr
  455e90:	str	xzr, [x19, #256]
  455e94:	add	x9, x9, #0x1
  455e98:	str	x9, [x19, #320]
  455e9c:	b	455e48 <feof@plt+0x52d68>
  455ea0:	ldr	x8, [x19, #256]
  455ea4:	cmp	x8, #0xff
  455ea8:	b.ne	455ed4 <feof@plt+0x52df4>  // b.any
  455eac:	ldp	x8, x2, [x19, #272]
  455eb0:	mov	w1, #0xff                  	// #255
  455eb4:	mov	x0, x19
  455eb8:	strb	wzr, [x19, #255]
  455ebc:	blr	x8
  455ec0:	ldr	x9, [x19, #320]
  455ec4:	mov	x8, xzr
  455ec8:	str	xzr, [x19, #256]
  455ecc:	add	x9, x9, #0x1
  455ed0:	str	x9, [x19, #320]
  455ed4:	add	x9, x8, #0x1
  455ed8:	mov	w10, #0x5b                  	// #91
  455edc:	str	x9, [x19, #256]
  455ee0:	strb	w10, [x19, x8]
  455ee4:	strb	w10, [x19, #264]
  455ee8:	ldr	x8, [x21, #16]
  455eec:	ldr	x22, [x8, #16]
  455ef0:	cbz	x22, 455f0c <feof@plt+0x52e2c>
  455ef4:	ldr	w8, [x22, #4]
  455ef8:	cmp	w8, #0x1
  455efc:	b.gt	455f0c <feof@plt+0x52e2c>
  455f00:	ldr	w9, [x19, #308]
  455f04:	cmp	w9, #0x401
  455f08:	b.lt	4562f0 <feof@plt+0x53210>  // b.tstop
  455f0c:	mov	w8, #0x1                   	// #1
  455f10:	str	w8, [x25]
  455f14:	ldr	x8, [x19, #256]
  455f18:	cmp	x8, #0xff
  455f1c:	b.ne	455f48 <feof@plt+0x52e68>  // b.any
  455f20:	ldp	x8, x2, [x19, #272]
  455f24:	mov	w1, #0xff                  	// #255
  455f28:	mov	x0, x19
  455f2c:	strb	wzr, [x19, #255]
  455f30:	blr	x8
  455f34:	ldr	x9, [x19, #320]
  455f38:	mov	x8, xzr
  455f3c:	str	xzr, [x19, #256]
  455f40:	add	x9, x9, #0x1
  455f44:	str	x9, [x19, #320]
  455f48:	add	x9, x8, #0x1
  455f4c:	mov	w10, #0x5d                  	// #93
  455f50:	b	4564e4 <feof@plt+0x53404>
  455f54:	ldr	w8, [x22, #4]
  455f58:	cmp	w8, #0x1
  455f5c:	b.gt	455f6c <feof@plt+0x52e8c>
  455f60:	ldr	w9, [x19, #308]
  455f64:	cmp	w9, #0x401
  455f68:	b.lt	456398 <feof@plt+0x532b8>  // b.tstop
  455f6c:	mov	w8, #0x1                   	// #1
  455f70:	str	w8, [x25]
  455f74:	b	4563e8 <feof@plt+0x53308>
  455f78:	add	w8, w8, #0x1
  455f7c:	str	w8, [x21, #4]
  455f80:	ldr	x8, [x19, #328]
  455f84:	add	w9, w9, #0x1
  455f88:	str	w9, [x19, #308]
  455f8c:	add	x9, sp, #0x10
  455f90:	mov	x0, x19
  455f94:	mov	w1, w20
  455f98:	mov	x2, x21
  455f9c:	stp	x21, x8, [sp, #16]
  455fa0:	str	x9, [x19, #328]
  455fa4:	bl	4509c8 <feof@plt+0x4d8e8>
  455fa8:	ldr	x8, [sp, #24]
  455fac:	str	x8, [x19, #328]
  455fb0:	ldr	w8, [x21, #4]
  455fb4:	sub	w8, w8, #0x1
  455fb8:	str	w8, [x21, #4]
  455fbc:	ldr	w8, [x19, #308]
  455fc0:	sub	w8, w8, #0x1
  455fc4:	str	w8, [x19, #308]
  455fc8:	b	454f7c <feof@plt+0x51e9c>
  455fcc:	ldr	x8, [x19, #256]
  455fd0:	cmp	x8, #0xff
  455fd4:	b.ne	456000 <feof@plt+0x52f20>  // b.any
  455fd8:	ldp	x8, x2, [x19, #272]
  455fdc:	mov	w1, #0xff                  	// #255
  455fe0:	mov	x0, x19
  455fe4:	strb	wzr, [x19, #255]
  455fe8:	blr	x8
  455fec:	ldr	x9, [x19, #320]
  455ff0:	mov	x8, xzr
  455ff4:	str	xzr, [x19, #256]
  455ff8:	add	x9, x9, #0x1
  455ffc:	str	x9, [x19, #320]
  456000:	add	x9, x8, #0x1
  456004:	mov	w10, #0x74                  	// #116
  456008:	str	x9, [x19, #256]
  45600c:	strb	w10, [x19, x8]
  456010:	ldr	x8, [x19, #256]
  456014:	strb	w10, [x19, #264]
  456018:	cmp	x8, #0xff
  45601c:	b.ne	456048 <feof@plt+0x52f68>  // b.any
  456020:	ldp	x8, x2, [x19, #272]
  456024:	mov	w1, #0xff                  	// #255
  456028:	mov	x0, x19
  45602c:	strb	wzr, [x19, #255]
  456030:	blr	x8
  456034:	ldr	x9, [x19, #320]
  456038:	mov	x8, xzr
  45603c:	str	xzr, [x19, #256]
  456040:	add	x9, x9, #0x1
  456044:	str	x9, [x19, #320]
  456048:	add	x9, x8, #0x1
  45604c:	mov	w10, #0x72                  	// #114
  456050:	str	x9, [x19, #256]
  456054:	strb	w10, [x19, x8]
  456058:	ldr	x8, [x19, #256]
  45605c:	strb	w10, [x19, #264]
  456060:	cmp	x8, #0xff
  456064:	b.ne	456090 <feof@plt+0x52fb0>  // b.any
  456068:	ldp	x8, x2, [x19, #272]
  45606c:	mov	w1, #0xff                  	// #255
  456070:	mov	x0, x19
  456074:	strb	wzr, [x19, #255]
  456078:	blr	x8
  45607c:	ldr	x9, [x19, #320]
  456080:	mov	x8, xzr
  456084:	str	xzr, [x19, #256]
  456088:	add	x9, x9, #0x1
  45608c:	str	x9, [x19, #320]
  456090:	add	x9, x8, #0x1
  456094:	mov	w10, #0x75                  	// #117
  456098:	str	x9, [x19, #256]
  45609c:	strb	w10, [x19, x8]
  4560a0:	ldr	x8, [x19, #256]
  4560a4:	strb	w10, [x19, #264]
  4560a8:	cmp	x8, #0xff
  4560ac:	b.ne	4560d8 <feof@plt+0x52ff8>  // b.any
  4560b0:	ldp	x8, x2, [x19, #272]
  4560b4:	mov	w1, #0xff                  	// #255
  4560b8:	mov	x0, x19
  4560bc:	strb	wzr, [x19, #255]
  4560c0:	blr	x8
  4560c4:	ldr	x9, [x19, #320]
  4560c8:	mov	x8, xzr
  4560cc:	str	xzr, [x19, #256]
  4560d0:	add	x9, x9, #0x1
  4560d4:	str	x9, [x19, #320]
  4560d8:	add	x9, x8, #0x1
  4560dc:	mov	w10, #0x65                  	// #101
  4560e0:	b	4559c8 <feof@plt+0x528e8>
  4560e4:	ldr	x8, [x19, #256]
  4560e8:	cmp	x8, #0xff
  4560ec:	b.ne	456118 <feof@plt+0x53038>  // b.any
  4560f0:	ldp	x8, x2, [x19, #272]
  4560f4:	mov	w1, #0xff                  	// #255
  4560f8:	mov	x0, x19
  4560fc:	strb	wzr, [x19, #255]
  456100:	blr	x8
  456104:	ldr	x9, [x19, #320]
  456108:	mov	x8, xzr
  45610c:	str	xzr, [x19, #256]
  456110:	add	x9, x9, #0x1
  456114:	str	x9, [x19, #320]
  456118:	add	x9, x8, #0x1
  45611c:	mov	w10, #0x28                  	// #40
  456120:	str	x9, [x19, #256]
  456124:	strb	w10, [x19, x8]
  456128:	strb	w10, [x19, #264]
  45612c:	ldr	w8, [x23, #4]
  456130:	cmp	w8, #0x1
  456134:	b.gt	456144 <feof@plt+0x53064>
  456138:	ldr	w9, [x19, #308]
  45613c:	cmp	w9, #0x401
  456140:	b.lt	456690 <feof@plt+0x535b0>  // b.tstop
  456144:	mov	w8, #0x1                   	// #1
  456148:	str	w8, [x25]
  45614c:	b	4566e0 <feof@plt+0x53600>
  456150:	add	w8, w8, #0x1
  456154:	str	w8, [x23, #4]
  456158:	ldr	x8, [x19, #328]
  45615c:	add	w9, w9, #0x1
  456160:	str	w9, [x19, #308]
  456164:	add	x9, sp, #0x10
  456168:	mov	x0, x19
  45616c:	mov	w1, w20
  456170:	mov	x2, x23
  456174:	stp	x23, x8, [sp, #16]
  456178:	str	x9, [x19, #328]
  45617c:	bl	4509c8 <feof@plt+0x4d8e8>
  456180:	ldr	x8, [sp, #24]
  456184:	str	x8, [x19, #328]
  456188:	ldr	w8, [x23, #4]
  45618c:	sub	w8, w8, #0x1
  456190:	str	w8, [x23, #4]
  456194:	ldr	w8, [x19, #308]
  456198:	sub	w8, w8, #0x1
  45619c:	str	w8, [x19, #308]
  4561a0:	b	456728 <feof@plt+0x53648>
  4561a4:	ldr	x8, [x19, #256]
  4561a8:	cmp	x8, #0xff
  4561ac:	b.ne	4561d8 <feof@plt+0x530f8>  // b.any
  4561b0:	ldp	x8, x2, [x19, #272]
  4561b4:	mov	w1, #0xff                  	// #255
  4561b8:	mov	x0, x19
  4561bc:	strb	wzr, [x19, #255]
  4561c0:	blr	x8
  4561c4:	ldr	x9, [x19, #320]
  4561c8:	mov	x8, xzr
  4561cc:	str	xzr, [x19, #256]
  4561d0:	add	x9, x9, #0x1
  4561d4:	str	x9, [x19, #320]
  4561d8:	add	x9, x8, #0x1
  4561dc:	mov	w10, #0x28                  	// #40
  4561e0:	str	x9, [x19, #256]
  4561e4:	strb	w10, [x19, x8]
  4561e8:	strb	w10, [x19, #264]
  4561ec:	ldr	w8, [x23, #4]
  4561f0:	cmp	w8, #0x1
  4561f4:	b.gt	456204 <feof@plt+0x53124>
  4561f8:	ldr	w9, [x19, #308]
  4561fc:	cmp	w9, #0x401
  456200:	b.lt	4567f4 <feof@plt+0x53714>  // b.tstop
  456204:	mov	w8, #0x1                   	// #1
  456208:	str	w8, [x25]
  45620c:	b	456844 <feof@plt+0x53764>
  456210:	add	w8, w8, #0x1
  456214:	str	w8, [x23, #4]
  456218:	ldr	x8, [x19, #328]
  45621c:	add	w9, w9, #0x1
  456220:	str	w9, [x19, #308]
  456224:	add	x9, sp, #0x10
  456228:	mov	x0, x19
  45622c:	mov	w1, w20
  456230:	mov	x2, x23
  456234:	stp	x23, x8, [sp, #16]
  456238:	str	x9, [x19, #328]
  45623c:	bl	4509c8 <feof@plt+0x4d8e8>
  456240:	ldr	x8, [sp, #24]
  456244:	str	x8, [x19, #328]
  456248:	ldr	w8, [x23, #4]
  45624c:	sub	w8, w8, #0x1
  456250:	str	w8, [x23, #4]
  456254:	ldr	w8, [x19, #308]
  456258:	sub	w8, w8, #0x1
  45625c:	str	w8, [x19, #308]
  456260:	b	45688c <feof@plt+0x537ac>
  456264:	cbnz	w8, 4530cc <feof@plt+0x4ffec>
  456268:	ldr	x21, [x21, #8]
  45626c:	cbz	x21, 4530cc <feof@plt+0x4ffec>
  456270:	ldr	x8, [x22]
  456274:	str	x8, [x19, #288]
  456278:	ldr	w8, [x21, #4]
  45627c:	cmp	w8, #0x1
  456280:	b.gt	456290 <feof@plt+0x531b0>
  456284:	ldr	w9, [x19, #308]
  456288:	cmp	w9, #0x401
  45628c:	b.lt	4562a0 <feof@plt+0x531c0>  // b.tstop
  456290:	mov	w8, #0x1                   	// #1
  456294:	str	w8, [x25]
  456298:	str	x22, [x19, #288]
  45629c:	b	4530d4 <feof@plt+0x4fff4>
  4562a0:	add	w8, w8, #0x1
  4562a4:	str	w8, [x21, #4]
  4562a8:	ldr	x8, [x19, #328]
  4562ac:	add	w9, w9, #0x1
  4562b0:	str	w9, [x19, #308]
  4562b4:	add	x9, sp, #0x10
  4562b8:	mov	x0, x19
  4562bc:	mov	w1, w20
  4562c0:	mov	x2, x21
  4562c4:	stp	x21, x8, [sp, #16]
  4562c8:	str	x9, [x19, #328]
  4562cc:	bl	4509c8 <feof@plt+0x4d8e8>
  4562d0:	ldr	x8, [sp, #24]
  4562d4:	str	x8, [x19, #328]
  4562d8:	ldr	w8, [x21, #4]
  4562dc:	sub	w8, w8, #0x1
  4562e0:	str	w8, [x21, #4]
  4562e4:	ldr	w8, [x19, #308]
  4562e8:	str	x22, [x19, #288]
  4562ec:	b	453140 <feof@plt+0x50060>
  4562f0:	add	w8, w8, #0x1
  4562f4:	str	w8, [x22, #4]
  4562f8:	ldr	x8, [x19, #328]
  4562fc:	add	w9, w9, #0x1
  456300:	str	w9, [x19, #308]
  456304:	add	x9, sp, #0x10
  456308:	mov	x0, x19
  45630c:	mov	w1, w20
  456310:	mov	x2, x22
  456314:	stp	x22, x8, [sp, #16]
  456318:	str	x9, [x19, #328]
  45631c:	bl	4509c8 <feof@plt+0x4d8e8>
  456320:	ldr	x8, [sp, #24]
  456324:	str	x8, [x19, #328]
  456328:	ldr	w8, [x22, #4]
  45632c:	sub	w8, w8, #0x1
  456330:	str	w8, [x22, #4]
  456334:	ldr	w8, [x19, #308]
  456338:	sub	w8, w8, #0x1
  45633c:	str	w8, [x19, #308]
  456340:	b	455f14 <feof@plt+0x52e34>
  456344:	add	w8, w8, #0x1
  456348:	str	w8, [x21, #4]
  45634c:	ldr	x8, [x19, #328]
  456350:	add	w9, w9, #0x1
  456354:	str	w9, [x19, #308]
  456358:	add	x9, sp, #0x10
  45635c:	mov	x0, x19
  456360:	mov	w1, w20
  456364:	mov	x2, x21
  456368:	stp	x21, x8, [sp, #16]
  45636c:	str	x9, [x19, #328]
  456370:	bl	4509c8 <feof@plt+0x4d8e8>
  456374:	ldr	x8, [sp, #24]
  456378:	str	x8, [x19, #328]
  45637c:	ldr	w8, [x21, #4]
  456380:	sub	w8, w8, #0x1
  456384:	str	w8, [x21, #4]
  456388:	ldr	w8, [x19, #308]
  45638c:	sub	w8, w8, #0x1
  456390:	str	w8, [x19, #308]
  456394:	b	4556a0 <feof@plt+0x525c0>
  456398:	add	w8, w8, #0x1
  45639c:	str	w8, [x22, #4]
  4563a0:	ldr	x8, [x19, #328]
  4563a4:	add	w9, w9, #0x1
  4563a8:	str	w9, [x19, #308]
  4563ac:	add	x9, sp, #0x10
  4563b0:	mov	x0, x19
  4563b4:	mov	w1, w20
  4563b8:	mov	x2, x22
  4563bc:	stp	x22, x8, [sp, #16]
  4563c0:	str	x9, [x19, #328]
  4563c4:	bl	4509c8 <feof@plt+0x4d8e8>
  4563c8:	ldr	x8, [sp, #24]
  4563cc:	str	x8, [x19, #328]
  4563d0:	ldr	w8, [x22, #4]
  4563d4:	sub	w8, w8, #0x1
  4563d8:	str	w8, [x22, #4]
  4563dc:	ldr	w8, [x19, #308]
  4563e0:	sub	w8, w8, #0x1
  4563e4:	str	w8, [x19, #308]
  4563e8:	ldr	x8, [x21, #16]
  4563ec:	ldr	x22, [x8, #16]
  4563f0:	ldr	w8, [x22]
  4563f4:	cmp	w8, #0x31
  4563f8:	b.hi	45643c <feof@plt+0x5335c>  // b.pmore
  4563fc:	mov	w9, #0x1                   	// #1
  456400:	lsl	x8, x9, x8
  456404:	mov	x9, #0x43                  	// #67
  456408:	movk	x9, #0x2, lsl #48
  45640c:	tst	x8, x9
  456410:	b.eq	45643c <feof@plt+0x5335c>  // b.none
  456414:	cbz	x22, 456430 <feof@plt+0x53350>
  456418:	ldr	w8, [x22, #4]
  45641c:	cmp	w8, #0x1
  456420:	b.gt	456430 <feof@plt+0x53350>
  456424:	ldr	w9, [x19, #308]
  456428:	cmp	w9, #0x401
  45642c:	b.lt	456524 <feof@plt+0x53444>  // b.tstop
  456430:	mov	w8, #0x1                   	// #1
  456434:	str	w8, [x25]
  456438:	b	4564f0 <feof@plt+0x53410>
  45643c:	ldr	x8, [x19, #256]
  456440:	cmp	x8, #0xff
  456444:	b.ne	456470 <feof@plt+0x53390>  // b.any
  456448:	ldp	x8, x2, [x19, #272]
  45644c:	mov	w1, #0xff                  	// #255
  456450:	mov	x0, x19
  456454:	strb	wzr, [x19, #255]
  456458:	blr	x8
  45645c:	ldr	x9, [x19, #320]
  456460:	mov	x8, xzr
  456464:	str	xzr, [x19, #256]
  456468:	add	x9, x9, #0x1
  45646c:	str	x9, [x19, #320]
  456470:	add	x9, x8, #0x1
  456474:	mov	w10, #0x28                  	// #40
  456478:	str	x9, [x19, #256]
  45647c:	strb	w10, [x19, x8]
  456480:	strb	w10, [x19, #264]
  456484:	cbz	x22, 4564a0 <feof@plt+0x533c0>
  456488:	ldr	w8, [x22, #4]
  45648c:	cmp	w8, #0x1
  456490:	b.gt	4564a0 <feof@plt+0x533c0>
  456494:	ldr	w9, [x19, #308]
  456498:	cmp	w9, #0x401
  45649c:	b.lt	45663c <feof@plt+0x5355c>  // b.tstop
  4564a0:	mov	w8, #0x1                   	// #1
  4564a4:	str	w8, [x25]
  4564a8:	ldr	x8, [x19, #256]
  4564ac:	cmp	x8, #0xff
  4564b0:	b.ne	4564dc <feof@plt+0x533fc>  // b.any
  4564b4:	ldp	x8, x2, [x19, #272]
  4564b8:	mov	w1, #0xff                  	// #255
  4564bc:	mov	x0, x19
  4564c0:	strb	wzr, [x19, #255]
  4564c4:	blr	x8
  4564c8:	ldr	x9, [x19, #320]
  4564cc:	mov	x8, xzr
  4564d0:	str	xzr, [x19, #256]
  4564d4:	add	x9, x9, #0x1
  4564d8:	str	x9, [x19, #320]
  4564dc:	add	x9, x8, #0x1
  4564e0:	mov	w10, #0x29                  	// #41
  4564e4:	str	x9, [x19, #256]
  4564e8:	strb	w10, [x19, x8]
  4564ec:	strb	w10, [x19, #264]
  4564f0:	ldr	x8, [x21, #8]
  4564f4:	ldr	w9, [x8]
  4564f8:	cmp	w9, #0x32
  4564fc:	b.ne	4530d4 <feof@plt+0x4fff4>  // b.any
  456500:	ldr	x8, [x8, #8]
  456504:	ldr	w9, [x8, #16]
  456508:	cmp	w9, #0x1
  45650c:	b.ne	4530d4 <feof@plt+0x4fff4>  // b.any
  456510:	ldr	x8, [x8, #8]
  456514:	ldrb	w8, [x8]
  456518:	cmp	w8, #0x3e
  45651c:	b.ne	4530d4 <feof@plt+0x4fff4>  // b.any
  456520:	b	45598c <feof@plt+0x528ac>
  456524:	add	w8, w8, #0x1
  456528:	str	w8, [x22, #4]
  45652c:	ldr	x8, [x19, #328]
  456530:	add	w9, w9, #0x1
  456534:	str	w9, [x19, #308]
  456538:	add	x9, sp, #0x10
  45653c:	mov	x0, x19
  456540:	mov	w1, w20
  456544:	mov	x2, x22
  456548:	stp	x22, x8, [sp, #16]
  45654c:	str	x9, [x19, #328]
  456550:	bl	4509c8 <feof@plt+0x4d8e8>
  456554:	ldr	x8, [sp, #24]
  456558:	str	x8, [x19, #328]
  45655c:	ldr	w8, [x22, #4]
  456560:	sub	w8, w8, #0x1
  456564:	str	w8, [x22, #4]
  456568:	ldr	w8, [x19, #308]
  45656c:	sub	w8, w8, #0x1
  456570:	str	w8, [x19, #308]
  456574:	b	4564f0 <feof@plt+0x53410>
  456578:	add	w8, w8, #0x1
  45657c:	str	w8, [x21, #4]
  456580:	ldr	x8, [x19, #328]
  456584:	add	w9, w9, #0x1
  456588:	str	w9, [x19, #308]
  45658c:	add	x9, sp, #0x10
  456590:	mov	x0, x19
  456594:	mov	w1, w20
  456598:	mov	x2, x21
  45659c:	stp	x21, x8, [sp, #16]
  4565a0:	str	x9, [x19, #328]
  4565a4:	bl	4509c8 <feof@plt+0x4d8e8>
  4565a8:	ldr	x8, [sp, #24]
  4565ac:	str	x8, [x19, #328]
  4565b0:	ldr	w8, [x21, #4]
  4565b4:	sub	w8, w8, #0x1
  4565b8:	str	w8, [x21, #4]
  4565bc:	ldr	w8, [x19, #308]
  4565c0:	sub	w8, w8, #0x1
  4565c4:	str	w8, [x19, #308]
  4565c8:	b	455794 <feof@plt+0x526b4>
  4565cc:	cbnz	w10, 4565d8 <feof@plt+0x534f8>
  4565d0:	ldr	x9, [x9, #8]
  4565d4:	cbnz	x9, 450e64 <feof@plt+0x4dd84>
  4565d8:	cbz	w23, 4530cc <feof@plt+0x4ffec>
  4565dc:	str	x24, [x19, #288]
  4565e0:	b	4530cc <feof@plt+0x4ffec>
  4565e4:	add	w8, w8, #0x1
  4565e8:	add	w9, w9, #0x1
  4565ec:	str	w8, [x22, #4]
  4565f0:	str	w9, [x19, #308]
  4565f4:	str	x22, [sp, #16]
  4565f8:	ldr	x8, [x19, #328]
  4565fc:	add	x9, sp, #0x10
  456600:	mov	x0, x19
  456604:	mov	w1, w20
  456608:	mov	x2, x22
  45660c:	str	x8, [sp, #24]
  456610:	str	x9, [x19, #328]
  456614:	bl	4509c8 <feof@plt+0x4d8e8>
  456618:	ldr	x8, [sp, #24]
  45661c:	str	x8, [x19, #328]
  456620:	ldr	w8, [x22, #4]
  456624:	sub	w8, w8, #0x1
  456628:	str	w8, [x22, #4]
  45662c:	ldr	w8, [x19, #308]
  456630:	sub	w8, w8, #0x1
  456634:	str	w8, [x19, #308]
  456638:	b	455b98 <feof@plt+0x52ab8>
  45663c:	add	w8, w8, #0x1
  456640:	str	w8, [x22, #4]
  456644:	ldr	x8, [x19, #328]
  456648:	add	w9, w9, #0x1
  45664c:	str	w9, [x19, #308]
  456650:	add	x9, sp, #0x10
  456654:	mov	x0, x19
  456658:	mov	w1, w20
  45665c:	mov	x2, x22
  456660:	stp	x22, x8, [sp, #16]
  456664:	str	x9, [x19, #328]
  456668:	bl	4509c8 <feof@plt+0x4d8e8>
  45666c:	ldr	x8, [sp, #24]
  456670:	str	x8, [x19, #328]
  456674:	ldr	w8, [x22, #4]
  456678:	sub	w8, w8, #0x1
  45667c:	str	w8, [x22, #4]
  456680:	ldr	w8, [x19, #308]
  456684:	sub	w8, w8, #0x1
  456688:	str	w8, [x19, #308]
  45668c:	b	4564a8 <feof@plt+0x533c8>
  456690:	add	w8, w8, #0x1
  456694:	str	w8, [x23, #4]
  456698:	ldr	x8, [x19, #328]
  45669c:	add	w9, w9, #0x1
  4566a0:	str	w9, [x19, #308]
  4566a4:	add	x9, sp, #0x10
  4566a8:	mov	x0, x19
  4566ac:	mov	w1, w20
  4566b0:	mov	x2, x23
  4566b4:	stp	x23, x8, [sp, #16]
  4566b8:	str	x9, [x19, #328]
  4566bc:	bl	4509c8 <feof@plt+0x4d8e8>
  4566c0:	ldr	x8, [sp, #24]
  4566c4:	str	x8, [x19, #328]
  4566c8:	ldr	w8, [x23, #4]
  4566cc:	sub	w8, w8, #0x1
  4566d0:	str	w8, [x23, #4]
  4566d4:	ldr	w8, [x19, #308]
  4566d8:	sub	w8, w8, #0x1
  4566dc:	str	w8, [x19, #308]
  4566e0:	ldr	x8, [x19, #256]
  4566e4:	cmp	x8, #0xff
  4566e8:	b.ne	456714 <feof@plt+0x53634>  // b.any
  4566ec:	ldp	x8, x2, [x19, #272]
  4566f0:	mov	w1, #0xff                  	// #255
  4566f4:	mov	x0, x19
  4566f8:	strb	wzr, [x19, #255]
  4566fc:	blr	x8
  456700:	ldr	x9, [x19, #320]
  456704:	mov	x8, xzr
  456708:	str	xzr, [x19, #256]
  45670c:	add	x9, x9, #0x1
  456710:	str	x9, [x19, #320]
  456714:	add	x9, x8, #0x1
  456718:	mov	w10, #0x29                  	// #41
  45671c:	str	x9, [x19, #256]
  456720:	strb	w10, [x19, x8]
  456724:	strb	w10, [x19, #264]
  456728:	ldr	x8, [x19, #256]
  45672c:	cmp	x8, #0xff
  456730:	b.ne	45675c <feof@plt+0x5367c>  // b.any
  456734:	ldp	x8, x2, [x19, #272]
  456738:	mov	w1, #0xff                  	// #255
  45673c:	mov	x0, x19
  456740:	strb	wzr, [x19, #255]
  456744:	blr	x8
  456748:	ldr	x9, [x19, #320]
  45674c:	mov	x8, xzr
  456750:	str	xzr, [x19, #256]
  456754:	add	x9, x9, #0x1
  456758:	str	x9, [x19, #320]
  45675c:	add	x9, x8, #0x1
  456760:	mov	w10, #0x20                  	// #32
  456764:	str	x9, [x19, #256]
  456768:	strb	w10, [x19, x8]
  45676c:	strb	w10, [x19, #264]
  456770:	cbz	x22, 45678c <feof@plt+0x536ac>
  456774:	ldr	w8, [x22, #4]
  456778:	cmp	w8, #0x1
  45677c:	b.gt	45678c <feof@plt+0x536ac>
  456780:	ldr	w9, [x19, #308]
  456784:	cmp	w9, #0x401
  456788:	b.lt	45679c <feof@plt+0x536bc>  // b.tstop
  45678c:	mov	w8, #0x1                   	// #1
  456790:	str	w8, [x25]
  456794:	cbnz	x21, 456bf0 <feof@plt+0x53b10>
  456798:	b	4530d4 <feof@plt+0x4fff4>
  45679c:	add	w8, w8, #0x1
  4567a0:	str	w8, [x22, #4]
  4567a4:	ldr	x8, [x19, #328]
  4567a8:	add	w9, w9, #0x1
  4567ac:	str	w9, [x19, #308]
  4567b0:	add	x9, sp, #0x10
  4567b4:	mov	x0, x19
  4567b8:	mov	w1, w20
  4567bc:	mov	x2, x22
  4567c0:	stp	x22, x8, [sp, #16]
  4567c4:	str	x9, [x19, #328]
  4567c8:	bl	4509c8 <feof@plt+0x4d8e8>
  4567cc:	ldr	x8, [sp, #24]
  4567d0:	str	x8, [x19, #328]
  4567d4:	ldr	w8, [x22, #4]
  4567d8:	sub	w8, w8, #0x1
  4567dc:	str	w8, [x22, #4]
  4567e0:	ldr	w8, [x19, #308]
  4567e4:	sub	w8, w8, #0x1
  4567e8:	str	w8, [x19, #308]
  4567ec:	cbnz	x21, 456bf0 <feof@plt+0x53b10>
  4567f0:	b	4530d4 <feof@plt+0x4fff4>
  4567f4:	add	w8, w8, #0x1
  4567f8:	str	w8, [x23, #4]
  4567fc:	ldr	x8, [x19, #328]
  456800:	add	w9, w9, #0x1
  456804:	str	w9, [x19, #308]
  456808:	add	x9, sp, #0x10
  45680c:	mov	x0, x19
  456810:	mov	w1, w20
  456814:	mov	x2, x23
  456818:	stp	x23, x8, [sp, #16]
  45681c:	str	x9, [x19, #328]
  456820:	bl	4509c8 <feof@plt+0x4d8e8>
  456824:	ldr	x8, [sp, #24]
  456828:	str	x8, [x19, #328]
  45682c:	ldr	w8, [x23, #4]
  456830:	sub	w8, w8, #0x1
  456834:	str	w8, [x23, #4]
  456838:	ldr	w8, [x19, #308]
  45683c:	sub	w8, w8, #0x1
  456840:	str	w8, [x19, #308]
  456844:	ldr	x8, [x19, #256]
  456848:	cmp	x8, #0xff
  45684c:	b.ne	456878 <feof@plt+0x53798>  // b.any
  456850:	ldp	x8, x2, [x19, #272]
  456854:	mov	w1, #0xff                  	// #255
  456858:	mov	x0, x19
  45685c:	strb	wzr, [x19, #255]
  456860:	blr	x8
  456864:	ldr	x9, [x19, #320]
  456868:	mov	x8, xzr
  45686c:	str	xzr, [x19, #256]
  456870:	add	x9, x9, #0x1
  456874:	str	x9, [x19, #320]
  456878:	add	x9, x8, #0x1
  45687c:	mov	w10, #0x29                  	// #41
  456880:	str	x9, [x19, #256]
  456884:	strb	w10, [x19, x8]
  456888:	strb	w10, [x19, #264]
  45688c:	ldr	w8, [x24]
  456890:	cmp	w8, #0x32
  456894:	b.ne	456904 <feof@plt+0x53824>  // b.any
  456898:	ldr	x8, [x24, #8]
  45689c:	ldrsw	x23, [x8, #16]
  4568a0:	cbz	w23, 456978 <feof@plt+0x53898>
  4568a4:	ldr	x24, [x8, #8]
  4568a8:	b	4568c8 <feof@plt+0x537e8>
  4568ac:	add	x9, x8, #0x1
  4568b0:	subs	x23, x23, #0x1
  4568b4:	add	x24, x24, #0x1
  4568b8:	str	x9, [x19, #256]
  4568bc:	strb	w26, [x19, x8]
  4568c0:	strb	w26, [x19, #264]
  4568c4:	b.eq	456978 <feof@plt+0x53898>  // b.none
  4568c8:	ldr	x8, [x19, #256]
  4568cc:	ldrb	w26, [x24]
  4568d0:	cmp	x8, #0xff
  4568d4:	b.ne	4568ac <feof@plt+0x537cc>  // b.any
  4568d8:	ldp	x8, x2, [x19, #272]
  4568dc:	mov	w1, #0xff                  	// #255
  4568e0:	mov	x0, x19
  4568e4:	strb	wzr, [x19, #255]
  4568e8:	blr	x8
  4568ec:	ldr	x9, [x19, #320]
  4568f0:	mov	x8, xzr
  4568f4:	str	xzr, [x19, #256]
  4568f8:	add	x9, x9, #0x1
  4568fc:	str	x9, [x19, #320]
  456900:	b	4568ac <feof@plt+0x537cc>
  456904:	ldr	w8, [x24, #4]
  456908:	cmp	w8, #0x1
  45690c:	b.gt	45691c <feof@plt+0x5383c>
  456910:	ldr	w9, [x19, #308]
  456914:	cmp	w9, #0x401
  456918:	b.lt	456928 <feof@plt+0x53848>  // b.tstop
  45691c:	mov	w8, #0x1                   	// #1
  456920:	str	w8, [x25]
  456924:	b	456978 <feof@plt+0x53898>
  456928:	add	w8, w8, #0x1
  45692c:	str	w8, [x24, #4]
  456930:	ldr	x8, [x19, #328]
  456934:	add	w9, w9, #0x1
  456938:	str	w9, [x19, #308]
  45693c:	add	x9, sp, #0x10
  456940:	mov	x0, x19
  456944:	mov	w1, w20
  456948:	mov	x2, x24
  45694c:	stp	x24, x8, [sp, #16]
  456950:	str	x9, [x19, #328]
  456954:	bl	4509c8 <feof@plt+0x4d8e8>
  456958:	ldr	x8, [sp, #24]
  45695c:	str	x8, [x19, #328]
  456960:	ldr	w8, [x24, #4]
  456964:	sub	w8, w8, #0x1
  456968:	str	w8, [x24, #4]
  45696c:	ldr	w8, [x19, #308]
  456970:	sub	w8, w8, #0x1
  456974:	str	w8, [x19, #308]
  456978:	ldr	w8, [x22]
  45697c:	cmp	w8, #0x31
  456980:	b.hi	4569c0 <feof@plt+0x538e0>  // b.pmore
  456984:	mov	w9, #0x1                   	// #1
  456988:	lsl	x8, x9, x8
  45698c:	mov	x9, #0x43                  	// #67
  456990:	movk	x9, #0x2, lsl #48
  456994:	tst	x8, x9
  456998:	b.eq	4569c0 <feof@plt+0x538e0>  // b.none
  45699c:	ldr	w8, [x22, #4]
  4569a0:	cmp	w8, #0x1
  4569a4:	b.gt	4569b4 <feof@plt+0x538d4>
  4569a8:	ldr	w9, [x19, #308]
  4569ac:	cmp	w9, #0x401
  4569b0:	b.lt	456a2c <feof@plt+0x5394c>  // b.tstop
  4569b4:	mov	w8, #0x1                   	// #1
  4569b8:	str	w8, [x25]
  4569bc:	b	456b18 <feof@plt+0x53a38>
  4569c0:	ldr	x8, [x19, #256]
  4569c4:	cmp	x8, #0xff
  4569c8:	b.ne	4569f4 <feof@plt+0x53914>  // b.any
  4569cc:	ldp	x8, x2, [x19, #272]
  4569d0:	mov	w1, #0xff                  	// #255
  4569d4:	mov	x0, x19
  4569d8:	strb	wzr, [x19, #255]
  4569dc:	blr	x8
  4569e0:	ldr	x9, [x19, #320]
  4569e4:	mov	x8, xzr
  4569e8:	str	xzr, [x19, #256]
  4569ec:	add	x9, x9, #0x1
  4569f0:	str	x9, [x19, #320]
  4569f4:	add	x9, x8, #0x1
  4569f8:	mov	w10, #0x28                  	// #40
  4569fc:	str	x9, [x19, #256]
  456a00:	strb	w10, [x19, x8]
  456a04:	strb	w10, [x19, #264]
  456a08:	ldr	w8, [x22, #4]
  456a0c:	cmp	w8, #0x1
  456a10:	b.gt	456a20 <feof@plt+0x53940>
  456a14:	ldr	w9, [x19, #308]
  456a18:	cmp	w9, #0x401
  456a1c:	b.lt	456a80 <feof@plt+0x539a0>  // b.tstop
  456a20:	mov	w8, #0x1                   	// #1
  456a24:	str	w8, [x25]
  456a28:	b	456ad0 <feof@plt+0x539f0>
  456a2c:	add	w8, w8, #0x1
  456a30:	str	w8, [x22, #4]
  456a34:	ldr	x8, [x19, #328]
  456a38:	add	w9, w9, #0x1
  456a3c:	str	w9, [x19, #308]
  456a40:	add	x9, sp, #0x10
  456a44:	mov	x0, x19
  456a48:	mov	w1, w20
  456a4c:	mov	x2, x22
  456a50:	stp	x22, x8, [sp, #16]
  456a54:	str	x9, [x19, #328]
  456a58:	bl	4509c8 <feof@plt+0x4d8e8>
  456a5c:	ldr	x8, [sp, #24]
  456a60:	str	x8, [x19, #328]
  456a64:	ldr	w8, [x22, #4]
  456a68:	sub	w8, w8, #0x1
  456a6c:	str	w8, [x22, #4]
  456a70:	ldr	w8, [x19, #308]
  456a74:	sub	w8, w8, #0x1
  456a78:	str	w8, [x19, #308]
  456a7c:	b	456b18 <feof@plt+0x53a38>
  456a80:	add	w8, w8, #0x1
  456a84:	str	w8, [x22, #4]
  456a88:	ldr	x8, [x19, #328]
  456a8c:	add	w9, w9, #0x1
  456a90:	str	w9, [x19, #308]
  456a94:	add	x9, sp, #0x10
  456a98:	mov	x0, x19
  456a9c:	mov	w1, w20
  456aa0:	mov	x2, x22
  456aa4:	stp	x22, x8, [sp, #16]
  456aa8:	str	x9, [x19, #328]
  456aac:	bl	4509c8 <feof@plt+0x4d8e8>
  456ab0:	ldr	x8, [sp, #24]
  456ab4:	str	x8, [x19, #328]
  456ab8:	ldr	w8, [x22, #4]
  456abc:	sub	w8, w8, #0x1
  456ac0:	str	w8, [x22, #4]
  456ac4:	ldr	w8, [x19, #308]
  456ac8:	sub	w8, w8, #0x1
  456acc:	str	w8, [x19, #308]
  456ad0:	ldr	x8, [x19, #256]
  456ad4:	cmp	x8, #0xff
  456ad8:	b.ne	456b04 <feof@plt+0x53a24>  // b.any
  456adc:	ldp	x8, x2, [x19, #272]
  456ae0:	mov	w1, #0xff                  	// #255
  456ae4:	mov	x0, x19
  456ae8:	strb	wzr, [x19, #255]
  456aec:	blr	x8
  456af0:	ldr	x9, [x19, #320]
  456af4:	mov	x8, xzr
  456af8:	str	xzr, [x19, #256]
  456afc:	add	x9, x9, #0x1
  456b00:	str	x9, [x19, #320]
  456b04:	add	x9, x8, #0x1
  456b08:	mov	w10, #0x29                  	// #41
  456b0c:	str	x9, [x19, #256]
  456b10:	strb	w10, [x19, x8]
  456b14:	strb	w10, [x19, #264]
  456b18:	ldr	x8, [x19, #256]
  456b1c:	cmp	x8, #0xff
  456b20:	b.ne	456b4c <feof@plt+0x53a6c>  // b.any
  456b24:	ldp	x8, x2, [x19, #272]
  456b28:	mov	w1, #0xff                  	// #255
  456b2c:	mov	x0, x19
  456b30:	strb	wzr, [x19, #255]
  456b34:	blr	x8
  456b38:	ldr	x9, [x19, #320]
  456b3c:	mov	x8, xzr
  456b40:	str	xzr, [x19, #256]
  456b44:	add	x9, x9, #0x1
  456b48:	str	x9, [x19, #320]
  456b4c:	add	x9, x8, #0x1
  456b50:	mov	w10, #0x20                  	// #32
  456b54:	str	x9, [x19, #256]
  456b58:	strb	w10, [x19, x8]
  456b5c:	ldr	x8, [x19, #256]
  456b60:	strb	w10, [x19, #264]
  456b64:	cmp	x8, #0xff
  456b68:	b.ne	456b94 <feof@plt+0x53ab4>  // b.any
  456b6c:	ldp	x8, x2, [x19, #272]
  456b70:	mov	w1, #0xff                  	// #255
  456b74:	mov	x0, x19
  456b78:	strb	wzr, [x19, #255]
  456b7c:	blr	x8
  456b80:	ldr	x9, [x19, #320]
  456b84:	mov	x8, xzr
  456b88:	str	xzr, [x19, #256]
  456b8c:	add	x9, x9, #0x1
  456b90:	str	x9, [x19, #320]
  456b94:	add	x9, x8, #0x1
  456b98:	mov	w10, #0x3a                  	// #58
  456b9c:	str	x9, [x19, #256]
  456ba0:	strb	w10, [x19, x8]
  456ba4:	ldr	x8, [x19, #256]
  456ba8:	strb	w10, [x19, #264]
  456bac:	cmp	x8, #0xff
  456bb0:	b.ne	456bdc <feof@plt+0x53afc>  // b.any
  456bb4:	ldp	x8, x2, [x19, #272]
  456bb8:	mov	w1, #0xff                  	// #255
  456bbc:	mov	x0, x19
  456bc0:	strb	wzr, [x19, #255]
  456bc4:	blr	x8
  456bc8:	ldr	x9, [x19, #320]
  456bcc:	mov	x8, xzr
  456bd0:	str	xzr, [x19, #256]
  456bd4:	add	x9, x9, #0x1
  456bd8:	str	x9, [x19, #320]
  456bdc:	add	x9, x8, #0x1
  456be0:	mov	w10, #0x20                  	// #32
  456be4:	str	x9, [x19, #256]
  456be8:	strb	w10, [x19, x8]
  456bec:	strb	w10, [x19, #264]
  456bf0:	ldr	w8, [x21]
  456bf4:	cmp	w8, #0x31
  456bf8:	b.hi	456c14 <feof@plt+0x53b34>  // b.pmore
  456bfc:	mov	w9, #0x1                   	// #1
  456c00:	lsl	x8, x9, x8
  456c04:	mov	x9, #0x43                  	// #67
  456c08:	movk	x9, #0x2, lsl #48
  456c0c:	tst	x8, x9
  456c10:	b.ne	4530b4 <feof@plt+0x4ffd4>  // b.any
  456c14:	ldr	x8, [x19, #256]
  456c18:	cmp	x8, #0xff
  456c1c:	b.ne	456c48 <feof@plt+0x53b68>  // b.any
  456c20:	ldp	x8, x2, [x19, #272]
  456c24:	mov	w1, #0xff                  	// #255
  456c28:	mov	x0, x19
  456c2c:	strb	wzr, [x19, #255]
  456c30:	blr	x8
  456c34:	ldr	x9, [x19, #320]
  456c38:	mov	x8, xzr
  456c3c:	str	xzr, [x19, #256]
  456c40:	add	x9, x9, #0x1
  456c44:	str	x9, [x19, #320]
  456c48:	add	x9, x8, #0x1
  456c4c:	mov	w10, #0x28                  	// #40
  456c50:	str	x9, [x19, #256]
  456c54:	strb	w10, [x19, x8]
  456c58:	strb	w10, [x19, #264]
  456c5c:	b	45338c <feof@plt+0x502ac>
  456c60:	sub	sp, sp, #0x50
  456c64:	stp	x29, x30, [sp, #16]
  456c68:	stp	x24, x23, [sp, #32]
  456c6c:	stp	x22, x21, [sp, #48]
  456c70:	stp	x20, x19, [sp, #64]
  456c74:	ldr	w8, [x2]
  456c78:	mov	x21, x2
  456c7c:	mov	w20, w1
  456c80:	mov	x19, x0
  456c84:	sub	w8, w8, #0x3
  456c88:	cmp	w8, #0x4d
  456c8c:	add	x29, sp, #0x10
  456c90:	b.hi	4570e0 <feof@plt+0x54000>  // b.pmore
  456c94:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  456c98:	add	x9, x9, #0x32c
  456c9c:	adr	x10, 456cac <feof@plt+0x53bcc>
  456ca0:	ldrh	w11, [x9, x8, lsl #1]
  456ca4:	add	x10, x10, x11, lsl #2
  456ca8:	br	x10
  456cac:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  456cb0:	mov	x20, xzr
  456cb4:	add	x21, x21, #0x5e1
  456cb8:	b	456cd8 <feof@plt+0x53bf8>
  456cbc:	add	x20, x20, #0x1
  456cc0:	add	x9, x8, #0x1
  456cc4:	cmp	x20, #0x9
  456cc8:	str	x9, [x19, #256]
  456ccc:	strb	w22, [x19, x8]
  456cd0:	strb	w22, [x19, #264]
  456cd4:	b.eq	4576e4 <feof@plt+0x54604>  // b.none
  456cd8:	ldr	x8, [x19, #256]
  456cdc:	ldrb	w22, [x21, x20]
  456ce0:	cmp	x8, #0xff
  456ce4:	b.ne	456cbc <feof@plt+0x53bdc>  // b.any
  456ce8:	ldp	x8, x2, [x19, #272]
  456cec:	mov	w1, #0xff                  	// #255
  456cf0:	mov	x0, x19
  456cf4:	strb	wzr, [x19, #255]
  456cf8:	blr	x8
  456cfc:	ldr	x9, [x19, #320]
  456d00:	mov	x8, xzr
  456d04:	str	xzr, [x19, #256]
  456d08:	add	x9, x9, #0x1
  456d0c:	str	x9, [x19, #320]
  456d10:	b	456cbc <feof@plt+0x53bdc>
  456d14:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  456d18:	mov	x20, xzr
  456d1c:	add	x21, x21, #0x5eb
  456d20:	b	456d40 <feof@plt+0x53c60>
  456d24:	add	x20, x20, #0x1
  456d28:	add	x9, x8, #0x1
  456d2c:	cmp	x20, #0x9
  456d30:	str	x9, [x19, #256]
  456d34:	strb	w22, [x19, x8]
  456d38:	strb	w22, [x19, #264]
  456d3c:	b.eq	4576e4 <feof@plt+0x54604>  // b.none
  456d40:	ldr	x8, [x19, #256]
  456d44:	ldrb	w22, [x21, x20]
  456d48:	cmp	x8, #0xff
  456d4c:	b.ne	456d24 <feof@plt+0x53c44>  // b.any
  456d50:	ldp	x8, x2, [x19, #272]
  456d54:	mov	w1, #0xff                  	// #255
  456d58:	mov	x0, x19
  456d5c:	strb	wzr, [x19, #255]
  456d60:	blr	x8
  456d64:	ldr	x9, [x19, #320]
  456d68:	mov	x8, xzr
  456d6c:	str	xzr, [x19, #256]
  456d70:	add	x9, x9, #0x1
  456d74:	str	x9, [x19, #320]
  456d78:	b	456d24 <feof@plt+0x53c44>
  456d7c:	ldr	x8, [x19, #256]
  456d80:	cmp	x8, #0xff
  456d84:	b.ne	456db0 <feof@plt+0x53cd0>  // b.any
  456d88:	ldp	x8, x2, [x19, #272]
  456d8c:	mov	w1, #0xff                  	// #255
  456d90:	mov	x0, x19
  456d94:	strb	wzr, [x19, #255]
  456d98:	blr	x8
  456d9c:	ldr	x9, [x19, #320]
  456da0:	mov	x8, xzr
  456da4:	str	xzr, [x19, #256]
  456da8:	add	x9, x9, #0x1
  456dac:	str	x9, [x19, #320]
  456db0:	add	x9, x8, #0x1
  456db4:	mov	w10, #0x20                  	// #32
  456db8:	str	x9, [x19, #256]
  456dbc:	strb	w10, [x19, x8]
  456dc0:	ldr	x8, [x19, #256]
  456dc4:	strb	w10, [x19, #264]
  456dc8:	cmp	x8, #0xff
  456dcc:	b.ne	456df8 <feof@plt+0x53d18>  // b.any
  456dd0:	ldp	x8, x2, [x19, #272]
  456dd4:	mov	w1, #0xff                  	// #255
  456dd8:	mov	x0, x19
  456ddc:	strb	wzr, [x19, #255]
  456de0:	blr	x8
  456de4:	ldr	x9, [x19, #320]
  456de8:	mov	x8, xzr
  456dec:	str	xzr, [x19, #256]
  456df0:	add	x9, x9, #0x1
  456df4:	str	x9, [x19, #320]
  456df8:	add	x9, x8, #0x1
  456dfc:	mov	w10, #0x63                  	// #99
  456e00:	str	x9, [x19, #256]
  456e04:	strb	w10, [x19, x8]
  456e08:	ldr	x8, [x19, #256]
  456e0c:	strb	w10, [x19, #264]
  456e10:	cmp	x8, #0xff
  456e14:	b.ne	456e40 <feof@plt+0x53d60>  // b.any
  456e18:	ldp	x8, x2, [x19, #272]
  456e1c:	mov	w1, #0xff                  	// #255
  456e20:	mov	x0, x19
  456e24:	strb	wzr, [x19, #255]
  456e28:	blr	x8
  456e2c:	ldr	x9, [x19, #320]
  456e30:	mov	x8, xzr
  456e34:	str	xzr, [x19, #256]
  456e38:	add	x9, x9, #0x1
  456e3c:	str	x9, [x19, #320]
  456e40:	add	x9, x8, #0x1
  456e44:	mov	w10, #0x6f                  	// #111
  456e48:	str	x9, [x19, #256]
  456e4c:	strb	w10, [x19, x8]
  456e50:	ldr	x8, [x19, #256]
  456e54:	strb	w10, [x19, #264]
  456e58:	cmp	x8, #0xff
  456e5c:	b.ne	456e88 <feof@plt+0x53da8>  // b.any
  456e60:	ldp	x8, x2, [x19, #272]
  456e64:	mov	w1, #0xff                  	// #255
  456e68:	mov	x0, x19
  456e6c:	strb	wzr, [x19, #255]
  456e70:	blr	x8
  456e74:	ldr	x9, [x19, #320]
  456e78:	mov	x8, xzr
  456e7c:	str	xzr, [x19, #256]
  456e80:	add	x9, x9, #0x1
  456e84:	str	x9, [x19, #320]
  456e88:	add	x9, x8, #0x1
  456e8c:	mov	w10, #0x6e                  	// #110
  456e90:	str	x9, [x19, #256]
  456e94:	strb	w10, [x19, x8]
  456e98:	ldr	x8, [x19, #256]
  456e9c:	strb	w10, [x19, #264]
  456ea0:	cmp	x8, #0xff
  456ea4:	b.ne	456ed0 <feof@plt+0x53df0>  // b.any
  456ea8:	ldp	x8, x2, [x19, #272]
  456eac:	mov	w1, #0xff                  	// #255
  456eb0:	mov	x0, x19
  456eb4:	strb	wzr, [x19, #255]
  456eb8:	blr	x8
  456ebc:	ldr	x9, [x19, #320]
  456ec0:	mov	x8, xzr
  456ec4:	str	xzr, [x19, #256]
  456ec8:	add	x9, x9, #0x1
  456ecc:	str	x9, [x19, #320]
  456ed0:	add	x9, x8, #0x1
  456ed4:	mov	w10, #0x73                  	// #115
  456ed8:	str	x9, [x19, #256]
  456edc:	strb	w10, [x19, x8]
  456ee0:	ldr	x8, [x19, #256]
  456ee4:	strb	w10, [x19, #264]
  456ee8:	cmp	x8, #0xff
  456eec:	b.ne	456f18 <feof@plt+0x53e38>  // b.any
  456ef0:	ldp	x8, x2, [x19, #272]
  456ef4:	mov	w1, #0xff                  	// #255
  456ef8:	mov	x0, x19
  456efc:	strb	wzr, [x19, #255]
  456f00:	blr	x8
  456f04:	ldr	x9, [x19, #320]
  456f08:	mov	x8, xzr
  456f0c:	str	xzr, [x19, #256]
  456f10:	add	x9, x9, #0x1
  456f14:	str	x9, [x19, #320]
  456f18:	add	x9, x8, #0x1
  456f1c:	mov	w10, #0x74                  	// #116
  456f20:	b	4576d8 <feof@plt+0x545f8>
  456f24:	ldr	x21, [x21, #8]
  456f28:	cbnz	x21, 4570e0 <feof@plt+0x54000>
  456f2c:	b	4570f8 <feof@plt+0x54018>
  456f30:	ldr	x8, [x19, #256]
  456f34:	cmp	x8, #0xff
  456f38:	b.ne	456f64 <feof@plt+0x53e84>  // b.any
  456f3c:	ldp	x8, x2, [x19, #272]
  456f40:	mov	w1, #0xff                  	// #255
  456f44:	mov	x0, x19
  456f48:	strb	wzr, [x19, #255]
  456f4c:	blr	x8
  456f50:	ldr	x9, [x19, #320]
  456f54:	mov	x8, xzr
  456f58:	str	xzr, [x19, #256]
  456f5c:	add	x9, x9, #0x1
  456f60:	str	x9, [x19, #320]
  456f64:	add	x9, x8, #0x1
  456f68:	mov	w10, #0x20                  	// #32
  456f6c:	str	x9, [x19, #256]
  456f70:	strb	w10, [x19, x8]
  456f74:	strb	w10, [x19, #264]
  456f78:	ldr	x8, [x19, #256]
  456f7c:	cmp	x8, #0xff
  456f80:	b.ne	456fac <feof@plt+0x53ecc>  // b.any
  456f84:	ldp	x8, x2, [x19, #272]
  456f88:	mov	w1, #0xff                  	// #255
  456f8c:	mov	x0, x19
  456f90:	strb	wzr, [x19, #255]
  456f94:	blr	x8
  456f98:	ldr	x9, [x19, #320]
  456f9c:	mov	x8, xzr
  456fa0:	str	xzr, [x19, #256]
  456fa4:	add	x9, x9, #0x1
  456fa8:	str	x9, [x19, #320]
  456fac:	add	x9, x8, #0x1
  456fb0:	mov	w10, #0x26                  	// #38
  456fb4:	b	4576d8 <feof@plt+0x545f8>
  456fb8:	ldr	x8, [x19, #256]
  456fbc:	cmp	x8, #0xff
  456fc0:	b.ne	456fec <feof@plt+0x53f0c>  // b.any
  456fc4:	ldp	x8, x2, [x19, #272]
  456fc8:	mov	w1, #0xff                  	// #255
  456fcc:	mov	x0, x19
  456fd0:	strb	wzr, [x19, #255]
  456fd4:	blr	x8
  456fd8:	ldr	x9, [x19, #320]
  456fdc:	mov	x8, xzr
  456fe0:	str	xzr, [x19, #256]
  456fe4:	add	x9, x9, #0x1
  456fe8:	str	x9, [x19, #320]
  456fec:	add	x9, x8, #0x1
  456ff0:	mov	w10, #0x20                  	// #32
  456ff4:	str	x9, [x19, #256]
  456ff8:	strb	w10, [x19, x8]
  456ffc:	strb	w10, [x19, #264]
  457000:	ldr	x8, [x19, #256]
  457004:	cmp	x8, #0xff
  457008:	b.ne	457034 <feof@plt+0x53f54>  // b.any
  45700c:	ldp	x8, x2, [x19, #272]
  457010:	mov	w1, #0xff                  	// #255
  457014:	mov	x0, x19
  457018:	strb	wzr, [x19, #255]
  45701c:	blr	x8
  457020:	ldr	x9, [x19, #320]
  457024:	mov	x8, xzr
  457028:	str	xzr, [x19, #256]
  45702c:	add	x9, x9, #0x1
  457030:	str	x9, [x19, #320]
  457034:	add	x9, x8, #0x1
  457038:	mov	w20, #0x26                  	// #38
  45703c:	str	x9, [x19, #256]
  457040:	strb	w20, [x19, x8]
  457044:	ldr	x8, [x19, #256]
  457048:	strb	w20, [x19, #264]
  45704c:	cmp	x8, #0xff
  457050:	b.ne	45707c <feof@plt+0x53f9c>  // b.any
  457054:	ldp	x8, x2, [x19, #272]
  457058:	mov	w1, #0xff                  	// #255
  45705c:	mov	x0, x19
  457060:	strb	wzr, [x19, #255]
  457064:	blr	x8
  457068:	ldr	x9, [x19, #320]
  45706c:	mov	x8, xzr
  457070:	str	xzr, [x19, #256]
  457074:	add	x9, x9, #0x1
  457078:	str	x9, [x19, #320]
  45707c:	add	x9, x8, #0x1
  457080:	str	x9, [x19, #256]
  457084:	strb	w20, [x19, x8]
  457088:	strb	w20, [x19, #264]
  45708c:	b	4576e4 <feof@plt+0x54604>
  457090:	ldr	x8, [x19, #256]
  457094:	cmp	x8, #0xff
  457098:	b.ne	4570c4 <feof@plt+0x53fe4>  // b.any
  45709c:	ldp	x8, x2, [x19, #272]
  4570a0:	mov	w1, #0xff                  	// #255
  4570a4:	mov	x0, x19
  4570a8:	strb	wzr, [x19, #255]
  4570ac:	blr	x8
  4570b0:	ldr	x9, [x19, #320]
  4570b4:	mov	x8, xzr
  4570b8:	str	xzr, [x19, #256]
  4570bc:	add	x9, x9, #0x1
  4570c0:	str	x9, [x19, #320]
  4570c4:	add	x9, x8, #0x1
  4570c8:	mov	w10, #0x20                  	// #32
  4570cc:	str	x9, [x19, #256]
  4570d0:	strb	w10, [x19, x8]
  4570d4:	strb	w10, [x19, #264]
  4570d8:	ldr	x21, [x21, #16]
  4570dc:	cbz	x21, 4570f8 <feof@plt+0x54018>
  4570e0:	ldr	w8, [x21, #4]
  4570e4:	cmp	w8, #0x1
  4570e8:	b.gt	4570f8 <feof@plt+0x54018>
  4570ec:	ldr	w9, [x19, #308]
  4570f0:	cmp	w9, #0x401
  4570f4:	b.lt	4576fc <feof@plt+0x5461c>  // b.tstop
  4570f8:	mov	w8, #0x1                   	// #1
  4570fc:	str	w8, [x19, #304]
  457100:	b	4576e4 <feof@plt+0x54604>
  457104:	tbnz	w20, #2, 4576e4 <feof@plt+0x54604>
  457108:	ldr	x8, [x19, #256]
  45710c:	cmp	x8, #0xff
  457110:	b.eq	4572fc <feof@plt+0x5421c>  // b.none
  457114:	b	457324 <feof@plt+0x54244>
  457118:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  45711c:	mov	x20, xzr
  457120:	add	x21, x21, #0x611
  457124:	b	457144 <feof@plt+0x54064>
  457128:	add	x20, x20, #0x1
  45712c:	add	x9, x8, #0x1
  457130:	cmp	x20, #0x8
  457134:	str	x9, [x19, #256]
  457138:	strb	w22, [x19, x8]
  45713c:	strb	w22, [x19, #264]
  457140:	b.eq	4576e4 <feof@plt+0x54604>  // b.none
  457144:	ldr	x8, [x19, #256]
  457148:	ldrb	w22, [x21, x20]
  45714c:	cmp	x8, #0xff
  457150:	b.ne	457128 <feof@plt+0x54048>  // b.any
  457154:	ldp	x8, x2, [x19, #272]
  457158:	mov	w1, #0xff                  	// #255
  45715c:	mov	x0, x19
  457160:	strb	wzr, [x19, #255]
  457164:	blr	x8
  457168:	ldr	x9, [x19, #320]
  45716c:	mov	x8, xzr
  457170:	str	xzr, [x19, #256]
  457174:	add	x9, x9, #0x1
  457178:	str	x9, [x19, #320]
  45717c:	b	457128 <feof@plt+0x54048>
  457180:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  457184:	mov	x20, xzr
  457188:	add	x21, x21, #0x61a
  45718c:	b	4571ac <feof@plt+0x540cc>
  457190:	add	x20, x20, #0x1
  457194:	add	x9, x8, #0x1
  457198:	cmp	x20, #0xa
  45719c:	str	x9, [x19, #256]
  4571a0:	strb	w22, [x19, x8]
  4571a4:	strb	w22, [x19, #264]
  4571a8:	b.eq	4576e4 <feof@plt+0x54604>  // b.none
  4571ac:	ldr	x8, [x19, #256]
  4571b0:	ldrb	w22, [x21, x20]
  4571b4:	cmp	x8, #0xff
  4571b8:	b.ne	457190 <feof@plt+0x540b0>  // b.any
  4571bc:	ldp	x8, x2, [x19, #272]
  4571c0:	mov	w1, #0xff                  	// #255
  4571c4:	mov	x0, x19
  4571c8:	strb	wzr, [x19, #255]
  4571cc:	blr	x8
  4571d0:	ldr	x9, [x19, #320]
  4571d4:	mov	x8, xzr
  4571d8:	str	xzr, [x19, #256]
  4571dc:	add	x9, x9, #0x1
  4571e0:	str	x9, [x19, #320]
  4571e4:	b	457190 <feof@plt+0x540b0>
  4571e8:	ldrb	w8, [x19, #264]
  4571ec:	cmp	w8, #0x28
  4571f0:	b.eq	45723c <feof@plt+0x5415c>  // b.none
  4571f4:	ldr	x8, [x19, #256]
  4571f8:	cmp	x8, #0xff
  4571fc:	b.ne	457228 <feof@plt+0x54148>  // b.any
  457200:	ldp	x8, x2, [x19, #272]
  457204:	mov	w1, #0xff                  	// #255
  457208:	mov	x0, x19
  45720c:	strb	wzr, [x19, #255]
  457210:	blr	x8
  457214:	ldr	x9, [x19, #320]
  457218:	mov	x8, xzr
  45721c:	str	xzr, [x19, #256]
  457220:	add	x9, x9, #0x1
  457224:	str	x9, [x19, #320]
  457228:	add	x9, x8, #0x1
  45722c:	mov	w10, #0x20                  	// #32
  457230:	str	x9, [x19, #256]
  457234:	strb	w10, [x19, x8]
  457238:	strb	w10, [x19, #264]
  45723c:	ldr	x21, [x21, #8]
  457240:	cbz	x21, 45725c <feof@plt+0x5417c>
  457244:	ldr	w8, [x21, #4]
  457248:	cmp	w8, #0x1
  45724c:	b.gt	45725c <feof@plt+0x5417c>
  457250:	ldr	w9, [x19, #308]
  457254:	cmp	w9, #0x401
  457258:	b.lt	4577ac <feof@plt+0x546cc>  // b.tstop
  45725c:	mov	w8, #0x1                   	// #1
  457260:	str	w8, [x19, #304]
  457264:	ldr	x8, [x19, #256]
  457268:	cmp	x8, #0xff
  45726c:	b.ne	457298 <feof@plt+0x541b8>  // b.any
  457270:	ldp	x8, x2, [x19, #272]
  457274:	mov	w1, #0xff                  	// #255
  457278:	mov	x0, x19
  45727c:	strb	wzr, [x19, #255]
  457280:	blr	x8
  457284:	ldr	x9, [x19, #320]
  457288:	mov	x8, xzr
  45728c:	str	xzr, [x19, #256]
  457290:	add	x9, x9, #0x1
  457294:	str	x9, [x19, #320]
  457298:	add	x9, x8, #0x1
  45729c:	mov	w20, #0x3a                  	// #58
  4572a0:	str	x9, [x19, #256]
  4572a4:	strb	w20, [x19, x8]
  4572a8:	ldr	x8, [x19, #256]
  4572ac:	strb	w20, [x19, #264]
  4572b0:	cmp	x8, #0xff
  4572b4:	b.ne	4572e0 <feof@plt+0x54200>  // b.any
  4572b8:	ldp	x8, x2, [x19, #272]
  4572bc:	mov	w1, #0xff                  	// #255
  4572c0:	mov	x0, x19
  4572c4:	strb	wzr, [x19, #255]
  4572c8:	blr	x8
  4572cc:	ldr	x9, [x19, #320]
  4572d0:	mov	x8, xzr
  4572d4:	str	xzr, [x19, #256]
  4572d8:	add	x9, x9, #0x1
  4572dc:	str	x9, [x19, #320]
  4572e0:	add	x9, x8, #0x1
  4572e4:	str	x9, [x19, #256]
  4572e8:	strb	w20, [x19, x8]
  4572ec:	ldr	x8, [x19, #256]
  4572f0:	strb	w20, [x19, #264]
  4572f4:	cmp	x8, #0xff
  4572f8:	b.ne	457324 <feof@plt+0x54244>  // b.any
  4572fc:	ldp	x8, x2, [x19, #272]
  457300:	mov	w1, #0xff                  	// #255
  457304:	mov	x0, x19
  457308:	strb	wzr, [x19, #255]
  45730c:	blr	x8
  457310:	ldr	x9, [x19, #320]
  457314:	mov	x8, xzr
  457318:	str	xzr, [x19, #256]
  45731c:	add	x9, x9, #0x1
  457320:	str	x9, [x19, #320]
  457324:	add	x9, x8, #0x1
  457328:	mov	w10, #0x2a                  	// #42
  45732c:	b	4576d8 <feof@plt+0x545f8>
  457330:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  457334:	mov	x22, xzr
  457338:	add	x23, x23, #0x625
  45733c:	b	45735c <feof@plt+0x5427c>
  457340:	add	x22, x22, #0x1
  457344:	add	x9, x8, #0x1
  457348:	cmp	x22, #0xa
  45734c:	str	x9, [x19, #256]
  457350:	strb	w24, [x19, x8]
  457354:	strb	w24, [x19, #264]
  457358:	b.eq	457674 <feof@plt+0x54594>  // b.none
  45735c:	ldr	x8, [x19, #256]
  457360:	ldrb	w24, [x23, x22]
  457364:	cmp	x8, #0xff
  457368:	b.ne	457340 <feof@plt+0x54260>  // b.any
  45736c:	ldp	x8, x2, [x19, #272]
  457370:	mov	w1, #0xff                  	// #255
  457374:	mov	x0, x19
  457378:	strb	wzr, [x19, #255]
  45737c:	blr	x8
  457380:	ldr	x9, [x19, #320]
  457384:	mov	x8, xzr
  457388:	str	xzr, [x19, #256]
  45738c:	add	x9, x9, #0x1
  457390:	str	x9, [x19, #320]
  457394:	b	457340 <feof@plt+0x54260>
  457398:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  45739c:	mov	x20, xzr
  4573a0:	add	x21, x21, #0x5f5
  4573a4:	b	4573c4 <feof@plt+0x542e4>
  4573a8:	add	x20, x20, #0x1
  4573ac:	add	x9, x8, #0x1
  4573b0:	cmp	x20, #0x11
  4573b4:	str	x9, [x19, #256]
  4573b8:	strb	w22, [x19, x8]
  4573bc:	strb	w22, [x19, #264]
  4573c0:	b.eq	4576e4 <feof@plt+0x54604>  // b.none
  4573c4:	ldr	x8, [x19, #256]
  4573c8:	ldrb	w22, [x21, x20]
  4573cc:	cmp	x8, #0xff
  4573d0:	b.ne	4573a8 <feof@plt+0x542c8>  // b.any
  4573d4:	ldp	x8, x2, [x19, #272]
  4573d8:	mov	w1, #0xff                  	// #255
  4573dc:	mov	x0, x19
  4573e0:	strb	wzr, [x19, #255]
  4573e4:	blr	x8
  4573e8:	ldr	x9, [x19, #320]
  4573ec:	mov	x8, xzr
  4573f0:	str	xzr, [x19, #256]
  4573f4:	add	x9, x9, #0x1
  4573f8:	str	x9, [x19, #320]
  4573fc:	b	4573a8 <feof@plt+0x542c8>
  457400:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  457404:	mov	x22, xzr
  457408:	add	x23, x23, #0x607
  45740c:	b	45742c <feof@plt+0x5434c>
  457410:	add	x22, x22, #0x1
  457414:	add	x9, x8, #0x1
  457418:	cmp	x22, #0x9
  45741c:	str	x9, [x19, #256]
  457420:	strb	w24, [x19, x8]
  457424:	strb	w24, [x19, #264]
  457428:	b.eq	457618 <feof@plt+0x54538>  // b.none
  45742c:	ldr	x8, [x19, #256]
  457430:	ldrb	w24, [x23, x22]
  457434:	cmp	x8, #0xff
  457438:	b.ne	457410 <feof@plt+0x54330>  // b.any
  45743c:	ldp	x8, x2, [x19, #272]
  457440:	mov	w1, #0xff                  	// #255
  457444:	mov	x0, x19
  457448:	strb	wzr, [x19, #255]
  45744c:	blr	x8
  457450:	ldr	x9, [x19, #320]
  457454:	mov	x8, xzr
  457458:	str	xzr, [x19, #256]
  45745c:	add	x9, x9, #0x1
  457460:	str	x9, [x19, #320]
  457464:	b	457410 <feof@plt+0x54330>
  457468:	ldr	x8, [x19, #256]
  45746c:	cmp	x8, #0xff
  457470:	b.ne	45749c <feof@plt+0x543bc>  // b.any
  457474:	ldp	x8, x2, [x19, #272]
  457478:	mov	w1, #0xff                  	// #255
  45747c:	mov	x0, x19
  457480:	strb	wzr, [x19, #255]
  457484:	blr	x8
  457488:	ldr	x9, [x19, #320]
  45748c:	mov	x8, xzr
  457490:	str	xzr, [x19, #256]
  457494:	add	x9, x9, #0x1
  457498:	str	x9, [x19, #320]
  45749c:	add	x9, x8, #0x1
  4574a0:	mov	w10, #0x20                  	// #32
  4574a4:	str	x9, [x19, #256]
  4574a8:	strb	w10, [x19, x8]
  4574ac:	ldr	x8, [x19, #256]
  4574b0:	strb	w10, [x19, #264]
  4574b4:	cmp	x8, #0xff
  4574b8:	b.ne	4574e4 <feof@plt+0x54404>  // b.any
  4574bc:	ldp	x8, x2, [x19, #272]
  4574c0:	mov	w1, #0xff                  	// #255
  4574c4:	mov	x0, x19
  4574c8:	strb	wzr, [x19, #255]
  4574cc:	blr	x8
  4574d0:	ldr	x9, [x19, #320]
  4574d4:	mov	x8, xzr
  4574d8:	str	xzr, [x19, #256]
  4574dc:	add	x9, x9, #0x1
  4574e0:	str	x9, [x19, #320]
  4574e4:	add	x9, x8, #0x1
  4574e8:	mov	w10, #0x74                  	// #116
  4574ec:	str	x9, [x19, #256]
  4574f0:	strb	w10, [x19, x8]
  4574f4:	ldr	x8, [x19, #256]
  4574f8:	strb	w10, [x19, #264]
  4574fc:	cmp	x8, #0xff
  457500:	b.ne	45752c <feof@plt+0x5444c>  // b.any
  457504:	ldp	x8, x2, [x19, #272]
  457508:	mov	w1, #0xff                  	// #255
  45750c:	mov	x0, x19
  457510:	strb	wzr, [x19, #255]
  457514:	blr	x8
  457518:	ldr	x9, [x19, #320]
  45751c:	mov	x8, xzr
  457520:	str	xzr, [x19, #256]
  457524:	add	x9, x9, #0x1
  457528:	str	x9, [x19, #320]
  45752c:	add	x9, x8, #0x1
  457530:	mov	w10, #0x68                  	// #104
  457534:	str	x9, [x19, #256]
  457538:	strb	w10, [x19, x8]
  45753c:	ldr	x8, [x19, #256]
  457540:	strb	w10, [x19, #264]
  457544:	cmp	x8, #0xff
  457548:	b.ne	457574 <feof@plt+0x54494>  // b.any
  45754c:	ldp	x8, x2, [x19, #272]
  457550:	mov	w1, #0xff                  	// #255
  457554:	mov	x0, x19
  457558:	strb	wzr, [x19, #255]
  45755c:	blr	x8
  457560:	ldr	x9, [x19, #320]
  457564:	mov	x8, xzr
  457568:	str	xzr, [x19, #256]
  45756c:	add	x9, x9, #0x1
  457570:	str	x9, [x19, #320]
  457574:	add	x9, x8, #0x1
  457578:	mov	w10, #0x72                  	// #114
  45757c:	str	x9, [x19, #256]
  457580:	strb	w10, [x19, x8]
  457584:	ldr	x8, [x19, #256]
  457588:	strb	w10, [x19, #264]
  45758c:	cmp	x8, #0xff
  457590:	b.ne	4575bc <feof@plt+0x544dc>  // b.any
  457594:	ldp	x8, x2, [x19, #272]
  457598:	mov	w1, #0xff                  	// #255
  45759c:	mov	x0, x19
  4575a0:	strb	wzr, [x19, #255]
  4575a4:	blr	x8
  4575a8:	ldr	x9, [x19, #320]
  4575ac:	mov	x8, xzr
  4575b0:	str	xzr, [x19, #256]
  4575b4:	add	x9, x9, #0x1
  4575b8:	str	x9, [x19, #320]
  4575bc:	add	x9, x8, #0x1
  4575c0:	mov	w10, #0x6f                  	// #111
  4575c4:	str	x9, [x19, #256]
  4575c8:	strb	w10, [x19, x8]
  4575cc:	ldr	x8, [x19, #256]
  4575d0:	strb	w10, [x19, #264]
  4575d4:	cmp	x8, #0xff
  4575d8:	b.ne	457604 <feof@plt+0x54524>  // b.any
  4575dc:	ldp	x8, x2, [x19, #272]
  4575e0:	mov	w1, #0xff                  	// #255
  4575e4:	mov	x0, x19
  4575e8:	strb	wzr, [x19, #255]
  4575ec:	blr	x8
  4575f0:	ldr	x9, [x19, #320]
  4575f4:	mov	x8, xzr
  4575f8:	str	xzr, [x19, #256]
  4575fc:	add	x9, x9, #0x1
  457600:	str	x9, [x19, #320]
  457604:	add	x9, x8, #0x1
  457608:	mov	w10, #0x77                  	// #119
  45760c:	str	x9, [x19, #256]
  457610:	strb	w10, [x19, x8]
  457614:	strb	w10, [x19, #264]
  457618:	ldr	x8, [x21, #16]
  45761c:	cbz	x8, 4576e4 <feof@plt+0x54604>
  457620:	ldr	x8, [x19, #256]
  457624:	cmp	x8, #0xff
  457628:	b.ne	457654 <feof@plt+0x54574>  // b.any
  45762c:	ldp	x8, x2, [x19, #272]
  457630:	mov	w1, #0xff                  	// #255
  457634:	mov	x0, x19
  457638:	strb	wzr, [x19, #255]
  45763c:	blr	x8
  457640:	ldr	x9, [x19, #320]
  457644:	mov	x8, xzr
  457648:	str	xzr, [x19, #256]
  45764c:	add	x9, x9, #0x1
  457650:	str	x9, [x19, #320]
  457654:	add	x9, x8, #0x1
  457658:	mov	w10, #0x28                  	// #40
  45765c:	str	x9, [x19, #256]
  457660:	strb	w10, [x19, x8]
  457664:	strb	w10, [x19, #264]
  457668:	ldr	x21, [x21, #16]
  45766c:	cbnz	x21, 45767c <feof@plt+0x5459c>
  457670:	b	457694 <feof@plt+0x545b4>
  457674:	ldr	x21, [x21, #8]
  457678:	cbz	x21, 457694 <feof@plt+0x545b4>
  45767c:	ldr	w8, [x21, #4]
  457680:	cmp	w8, #0x1
  457684:	b.gt	457694 <feof@plt+0x545b4>
  457688:	ldr	w9, [x19, #308]
  45768c:	cmp	w9, #0x401
  457690:	b.lt	457754 <feof@plt+0x54674>  // b.tstop
  457694:	mov	w8, #0x1                   	// #1
  457698:	str	w8, [x19, #304]
  45769c:	ldr	x8, [x19, #256]
  4576a0:	cmp	x8, #0xff
  4576a4:	b.ne	4576d0 <feof@plt+0x545f0>  // b.any
  4576a8:	ldp	x8, x2, [x19, #272]
  4576ac:	mov	w1, #0xff                  	// #255
  4576b0:	mov	x0, x19
  4576b4:	strb	wzr, [x19, #255]
  4576b8:	blr	x8
  4576bc:	ldr	x9, [x19, #320]
  4576c0:	mov	x8, xzr
  4576c4:	str	xzr, [x19, #256]
  4576c8:	add	x9, x9, #0x1
  4576cc:	str	x9, [x19, #320]
  4576d0:	add	x9, x8, #0x1
  4576d4:	mov	w10, #0x29                  	// #41
  4576d8:	str	x9, [x19, #256]
  4576dc:	strb	w10, [x19, x8]
  4576e0:	strb	w10, [x19, #264]
  4576e4:	ldp	x20, x19, [sp, #64]
  4576e8:	ldp	x22, x21, [sp, #48]
  4576ec:	ldp	x24, x23, [sp, #32]
  4576f0:	ldp	x29, x30, [sp, #16]
  4576f4:	add	sp, sp, #0x50
  4576f8:	ret
  4576fc:	add	w8, w8, #0x1
  457700:	add	w9, w9, #0x1
  457704:	str	w8, [x21, #4]
  457708:	str	w9, [x19, #308]
  45770c:	str	x21, [sp]
  457710:	ldr	x8, [x19, #328]
  457714:	mov	x9, sp
  457718:	mov	x0, x19
  45771c:	mov	w1, w20
  457720:	mov	x2, x21
  457724:	str	x8, [sp, #8]
  457728:	str	x9, [x19, #328]
  45772c:	bl	4509c8 <feof@plt+0x4d8e8>
  457730:	ldr	x8, [sp, #8]
  457734:	str	x8, [x19, #328]
  457738:	ldr	w8, [x21, #4]
  45773c:	sub	w8, w8, #0x1
  457740:	str	w8, [x21, #4]
  457744:	ldr	w8, [x19, #308]
  457748:	sub	w8, w8, #0x1
  45774c:	str	w8, [x19, #308]
  457750:	b	4576e4 <feof@plt+0x54604>
  457754:	add	w8, w8, #0x1
  457758:	add	w9, w9, #0x1
  45775c:	str	w8, [x21, #4]
  457760:	str	w9, [x19, #308]
  457764:	str	x21, [sp]
  457768:	ldr	x8, [x19, #328]
  45776c:	mov	x9, sp
  457770:	mov	x0, x19
  457774:	mov	w1, w20
  457778:	mov	x2, x21
  45777c:	str	x8, [sp, #8]
  457780:	str	x9, [x19, #328]
  457784:	bl	4509c8 <feof@plt+0x4d8e8>
  457788:	ldr	x8, [sp, #8]
  45778c:	str	x8, [x19, #328]
  457790:	ldr	w8, [x21, #4]
  457794:	sub	w8, w8, #0x1
  457798:	str	w8, [x21, #4]
  45779c:	ldr	w8, [x19, #308]
  4577a0:	sub	w8, w8, #0x1
  4577a4:	str	w8, [x19, #308]
  4577a8:	b	45769c <feof@plt+0x545bc>
  4577ac:	add	w8, w8, #0x1
  4577b0:	str	w8, [x21, #4]
  4577b4:	ldr	x8, [x19, #328]
  4577b8:	add	w9, w9, #0x1
  4577bc:	str	w9, [x19, #308]
  4577c0:	mov	x9, sp
  4577c4:	mov	x0, x19
  4577c8:	mov	w1, w20
  4577cc:	mov	x2, x21
  4577d0:	stp	x21, x8, [sp]
  4577d4:	str	x9, [x19, #328]
  4577d8:	bl	4509c8 <feof@plt+0x4d8e8>
  4577dc:	ldr	x8, [sp, #8]
  4577e0:	str	x8, [x19, #328]
  4577e4:	ldr	w8, [x21, #4]
  4577e8:	sub	w8, w8, #0x1
  4577ec:	str	w8, [x21, #4]
  4577f0:	ldr	w8, [x19, #308]
  4577f4:	sub	w8, w8, #0x1
  4577f8:	str	w8, [x19, #308]
  4577fc:	b	457264 <feof@plt+0x54184>
  457800:	sub	sp, sp, #0x50
  457804:	stp	x22, x21, [sp, #48]
  457808:	stp	x20, x19, [sp, #64]
  45780c:	mov	x19, x3
  457810:	mov	x22, x2
  457814:	mov	w21, w1
  457818:	mov	x20, x0
  45781c:	stp	x29, x30, [sp, #16]
  457820:	stp	x24, x23, [sp, #32]
  457824:	add	x29, sp, #0x10
  457828:	cbz	x3, 45788c <feof@plt+0x547ac>
  45782c:	mov	x9, #0xe000000             	// #234881024
  457830:	mov	w8, #0x1                   	// #1
  457834:	movk	x9, #0x862, lsl #32
  457838:	mov	x10, x19
  45783c:	b	457848 <feof@plt+0x54768>
  457840:	ldr	x10, [x10]
  457844:	cbz	x10, 45788c <feof@plt+0x547ac>
  457848:	ldr	w11, [x10, #16]
  45784c:	cbnz	w11, 45788c <feof@plt+0x547ac>
  457850:	ldr	x11, [x10, #8]
  457854:	ldr	w11, [x11]
  457858:	cmp	w11, #0x2b
  45785c:	b.hi	457840 <feof@plt+0x54760>  // b.pmore
  457860:	lsl	x12, x8, x11
  457864:	tst	x12, x9
  457868:	b.ne	457894 <feof@plt+0x547b4>  // b.any
  45786c:	lsl	x11, x8, x11
  457870:	tst	x11, #0x1c00000000
  457874:	b.eq	457840 <feof@plt+0x54760>  // b.none
  457878:	ldrb	w8, [x20, #264]
  45787c:	orr	w9, w8, #0x2
  457880:	cmp	w9, #0x2a
  457884:	b.eq	4578e8 <feof@plt+0x54808>  // b.none
  457888:	b	457898 <feof@plt+0x547b8>
  45788c:	mov	w24, wzr
  457890:	b	457934 <feof@plt+0x54854>
  457894:	ldrb	w8, [x20, #264]
  457898:	cmp	w8, #0x20
  45789c:	b.eq	4578e8 <feof@plt+0x54808>  // b.none
  4578a0:	ldr	x8, [x20, #256]
  4578a4:	cmp	x8, #0xff
  4578a8:	b.ne	4578d4 <feof@plt+0x547f4>  // b.any
  4578ac:	ldp	x8, x2, [x20, #272]
  4578b0:	mov	w1, #0xff                  	// #255
  4578b4:	mov	x0, x20
  4578b8:	strb	wzr, [x20, #255]
  4578bc:	blr	x8
  4578c0:	ldr	x9, [x20, #320]
  4578c4:	mov	x8, xzr
  4578c8:	str	xzr, [x20, #256]
  4578cc:	add	x9, x9, #0x1
  4578d0:	str	x9, [x20, #320]
  4578d4:	add	x9, x8, #0x1
  4578d8:	mov	w10, #0x20                  	// #32
  4578dc:	str	x9, [x20, #256]
  4578e0:	strb	w10, [x20, x8]
  4578e4:	strb	w10, [x20, #264]
  4578e8:	ldr	x8, [x20, #256]
  4578ec:	cmp	x8, #0xff
  4578f0:	b.ne	45791c <feof@plt+0x5483c>  // b.any
  4578f4:	ldp	x8, x2, [x20, #272]
  4578f8:	mov	w1, #0xff                  	// #255
  4578fc:	mov	x0, x20
  457900:	strb	wzr, [x20, #255]
  457904:	blr	x8
  457908:	ldr	x9, [x20, #320]
  45790c:	mov	x8, xzr
  457910:	str	xzr, [x20, #256]
  457914:	add	x9, x9, #0x1
  457918:	str	x9, [x20, #320]
  45791c:	add	x9, x8, #0x1
  457920:	mov	w10, #0x28                  	// #40
  457924:	mov	w24, #0x1                   	// #1
  457928:	str	x9, [x20, #256]
  45792c:	strb	w10, [x20, x8]
  457930:	strb	w10, [x20, #264]
  457934:	ldr	x23, [x20, #296]
  457938:	mov	x0, x20
  45793c:	mov	w1, w21
  457940:	mov	x2, x19
  457944:	mov	w3, wzr
  457948:	str	xzr, [x20, #296]
  45794c:	bl	458ca8 <feof@plt+0x55bc8>
  457950:	cbz	w24, 45799c <feof@plt+0x548bc>
  457954:	ldr	x8, [x20, #256]
  457958:	cmp	x8, #0xff
  45795c:	b.ne	457988 <feof@plt+0x548a8>  // b.any
  457960:	ldp	x8, x2, [x20, #272]
  457964:	mov	w1, #0xff                  	// #255
  457968:	mov	x0, x20
  45796c:	strb	wzr, [x20, #255]
  457970:	blr	x8
  457974:	ldr	x9, [x20, #320]
  457978:	mov	x8, xzr
  45797c:	str	xzr, [x20, #256]
  457980:	add	x9, x9, #0x1
  457984:	str	x9, [x20, #320]
  457988:	add	x9, x8, #0x1
  45798c:	mov	w10, #0x29                  	// #41
  457990:	str	x9, [x20, #256]
  457994:	strb	w10, [x20, x8]
  457998:	strb	w10, [x20, #264]
  45799c:	ldr	x8, [x20, #256]
  4579a0:	cmp	x8, #0xff
  4579a4:	b.ne	4579d0 <feof@plt+0x548f0>  // b.any
  4579a8:	ldp	x8, x2, [x20, #272]
  4579ac:	mov	w1, #0xff                  	// #255
  4579b0:	mov	x0, x20
  4579b4:	strb	wzr, [x20, #255]
  4579b8:	blr	x8
  4579bc:	ldr	x9, [x20, #320]
  4579c0:	mov	x8, xzr
  4579c4:	str	xzr, [x20, #256]
  4579c8:	add	x9, x9, #0x1
  4579cc:	str	x9, [x20, #320]
  4579d0:	add	x9, x8, #0x1
  4579d4:	mov	w10, #0x28                  	// #40
  4579d8:	str	x9, [x20, #256]
  4579dc:	strb	w10, [x20, x8]
  4579e0:	strb	w10, [x20, #264]
  4579e4:	ldr	x22, [x22, #16]
  4579e8:	cbz	x22, 457a60 <feof@plt+0x54980>
  4579ec:	ldr	w8, [x22, #4]
  4579f0:	cmp	w8, #0x1
  4579f4:	b.gt	457a04 <feof@plt+0x54924>
  4579f8:	ldr	w9, [x20, #308]
  4579fc:	cmp	w9, #0x401
  457a00:	b.lt	457a10 <feof@plt+0x54930>  // b.tstop
  457a04:	mov	w8, #0x1                   	// #1
  457a08:	str	w8, [x20, #304]
  457a0c:	b	457a60 <feof@plt+0x54980>
  457a10:	add	w8, w8, #0x1
  457a14:	str	w8, [x22, #4]
  457a18:	ldr	x8, [x20, #328]
  457a1c:	add	w9, w9, #0x1
  457a20:	str	w9, [x20, #308]
  457a24:	mov	x9, sp
  457a28:	mov	x0, x20
  457a2c:	mov	w1, w21
  457a30:	mov	x2, x22
  457a34:	stp	x22, x8, [sp]
  457a38:	str	x9, [x20, #328]
  457a3c:	bl	4509c8 <feof@plt+0x4d8e8>
  457a40:	ldr	x8, [sp, #8]
  457a44:	str	x8, [x20, #328]
  457a48:	ldr	w8, [x22, #4]
  457a4c:	sub	w8, w8, #0x1
  457a50:	str	w8, [x22, #4]
  457a54:	ldr	w8, [x20, #308]
  457a58:	sub	w8, w8, #0x1
  457a5c:	str	w8, [x20, #308]
  457a60:	ldr	x8, [x20, #256]
  457a64:	cmp	x8, #0xff
  457a68:	b.ne	457a94 <feof@plt+0x549b4>  // b.any
  457a6c:	ldp	x8, x2, [x20, #272]
  457a70:	mov	w1, #0xff                  	// #255
  457a74:	mov	x0, x20
  457a78:	strb	wzr, [x20, #255]
  457a7c:	blr	x8
  457a80:	ldr	x9, [x20, #320]
  457a84:	mov	x8, xzr
  457a88:	str	xzr, [x20, #256]
  457a8c:	add	x9, x9, #0x1
  457a90:	str	x9, [x20, #320]
  457a94:	add	x9, x8, #0x1
  457a98:	mov	w10, #0x29                  	// #41
  457a9c:	mov	w3, #0x1                   	// #1
  457aa0:	mov	x0, x20
  457aa4:	mov	w1, w21
  457aa8:	mov	x2, x19
  457aac:	str	x9, [x20, #256]
  457ab0:	strb	w10, [x20, x8]
  457ab4:	strb	w10, [x20, #264]
  457ab8:	bl	458ca8 <feof@plt+0x55bc8>
  457abc:	str	x23, [x20, #296]
  457ac0:	ldp	x20, x19, [sp, #64]
  457ac4:	ldp	x22, x21, [sp, #48]
  457ac8:	ldp	x24, x23, [sp, #32]
  457acc:	ldp	x29, x30, [sp, #16]
  457ad0:	add	sp, sp, #0x50
  457ad4:	ret
  457ad8:	sub	sp, sp, #0x50
  457adc:	stp	x22, x21, [sp, #48]
  457ae0:	stp	x20, x19, [sp, #64]
  457ae4:	mov	x21, x2
  457ae8:	mov	w20, w1
  457aec:	mov	x19, x0
  457af0:	stp	x29, x30, [sp, #16]
  457af4:	str	x23, [sp, #32]
  457af8:	add	x29, sp, #0x10
  457afc:	cbz	x3, 457c40 <feof@plt+0x54b60>
  457b00:	mov	x22, x3
  457b04:	mov	x8, x3
  457b08:	ldr	w9, [x8, #16]
  457b0c:	cbz	w9, 457b20 <feof@plt+0x54a40>
  457b10:	ldr	x8, [x8]
  457b14:	cbnz	x8, 457b08 <feof@plt+0x54a28>
  457b18:	mov	w23, #0x1                   	// #1
  457b1c:	b	457b34 <feof@plt+0x54a54>
  457b20:	ldr	x8, [x8, #8]
  457b24:	ldr	w8, [x8]
  457b28:	cmp	w8, #0x2a
  457b2c:	cset	w23, ne  // ne = any
  457b30:	b.ne	457b50 <feof@plt+0x54a70>  // b.any
  457b34:	mov	x0, x19
  457b38:	mov	w1, w20
  457b3c:	mov	x2, x22
  457b40:	mov	w3, wzr
  457b44:	bl	458ca8 <feof@plt+0x55bc8>
  457b48:	cbnz	w23, 457c40 <feof@plt+0x54b60>
  457b4c:	b	457c88 <feof@plt+0x54ba8>
  457b50:	ldr	x8, [x19, #256]
  457b54:	cmp	x8, #0xff
  457b58:	b.ne	457b84 <feof@plt+0x54aa4>  // b.any
  457b5c:	ldp	x8, x2, [x19, #272]
  457b60:	mov	w1, #0xff                  	// #255
  457b64:	mov	x0, x19
  457b68:	strb	wzr, [x19, #255]
  457b6c:	blr	x8
  457b70:	ldr	x9, [x19, #320]
  457b74:	mov	x8, xzr
  457b78:	str	xzr, [x19, #256]
  457b7c:	add	x9, x9, #0x1
  457b80:	str	x9, [x19, #320]
  457b84:	add	x9, x8, #0x1
  457b88:	mov	w10, #0x20                  	// #32
  457b8c:	str	x9, [x19, #256]
  457b90:	strb	w10, [x19, x8]
  457b94:	ldr	x8, [x19, #256]
  457b98:	strb	w10, [x19, #264]
  457b9c:	cmp	x8, #0xff
  457ba0:	b.ne	457bcc <feof@plt+0x54aec>  // b.any
  457ba4:	ldp	x8, x2, [x19, #272]
  457ba8:	mov	w1, #0xff                  	// #255
  457bac:	mov	x0, x19
  457bb0:	strb	wzr, [x19, #255]
  457bb4:	blr	x8
  457bb8:	ldr	x9, [x19, #320]
  457bbc:	mov	x8, xzr
  457bc0:	str	xzr, [x19, #256]
  457bc4:	add	x9, x9, #0x1
  457bc8:	str	x9, [x19, #320]
  457bcc:	add	x9, x8, #0x1
  457bd0:	mov	w10, #0x28                  	// #40
  457bd4:	mov	x0, x19
  457bd8:	mov	w1, w20
  457bdc:	mov	x2, x22
  457be0:	mov	w3, wzr
  457be4:	str	x9, [x19, #256]
  457be8:	strb	w10, [x19, x8]
  457bec:	strb	w10, [x19, #264]
  457bf0:	bl	458ca8 <feof@plt+0x55bc8>
  457bf4:	ldr	x8, [x19, #256]
  457bf8:	cmp	x8, #0xff
  457bfc:	b.ne	457c28 <feof@plt+0x54b48>  // b.any
  457c00:	ldp	x8, x2, [x19, #272]
  457c04:	mov	w1, #0xff                  	// #255
  457c08:	mov	x0, x19
  457c0c:	strb	wzr, [x19, #255]
  457c10:	blr	x8
  457c14:	ldr	x9, [x19, #320]
  457c18:	mov	x8, xzr
  457c1c:	str	xzr, [x19, #256]
  457c20:	add	x9, x9, #0x1
  457c24:	str	x9, [x19, #320]
  457c28:	add	x9, x8, #0x1
  457c2c:	mov	w10, #0x29                  	// #41
  457c30:	str	x9, [x19, #256]
  457c34:	strb	w10, [x19, x8]
  457c38:	strb	w10, [x19, #264]
  457c3c:	cbz	w23, 457c88 <feof@plt+0x54ba8>
  457c40:	ldr	x8, [x19, #256]
  457c44:	cmp	x8, #0xff
  457c48:	b.ne	457c74 <feof@plt+0x54b94>  // b.any
  457c4c:	ldp	x8, x2, [x19, #272]
  457c50:	mov	w1, #0xff                  	// #255
  457c54:	mov	x0, x19
  457c58:	strb	wzr, [x19, #255]
  457c5c:	blr	x8
  457c60:	ldr	x9, [x19, #320]
  457c64:	mov	x8, xzr
  457c68:	str	xzr, [x19, #256]
  457c6c:	add	x9, x9, #0x1
  457c70:	str	x9, [x19, #320]
  457c74:	add	x9, x8, #0x1
  457c78:	mov	w10, #0x20                  	// #32
  457c7c:	str	x9, [x19, #256]
  457c80:	strb	w10, [x19, x8]
  457c84:	strb	w10, [x19, #264]
  457c88:	ldr	x8, [x19, #256]
  457c8c:	cmp	x8, #0xff
  457c90:	b.ne	457cbc <feof@plt+0x54bdc>  // b.any
  457c94:	ldp	x8, x2, [x19, #272]
  457c98:	mov	w1, #0xff                  	// #255
  457c9c:	mov	x0, x19
  457ca0:	strb	wzr, [x19, #255]
  457ca4:	blr	x8
  457ca8:	ldr	x9, [x19, #320]
  457cac:	mov	x8, xzr
  457cb0:	str	xzr, [x19, #256]
  457cb4:	add	x9, x9, #0x1
  457cb8:	str	x9, [x19, #320]
  457cbc:	add	x9, x8, #0x1
  457cc0:	mov	w10, #0x5b                  	// #91
  457cc4:	str	x9, [x19, #256]
  457cc8:	strb	w10, [x19, x8]
  457ccc:	strb	w10, [x19, #264]
  457cd0:	ldr	x21, [x21, #8]
  457cd4:	cbz	x21, 457d4c <feof@plt+0x54c6c>
  457cd8:	ldr	w8, [x21, #4]
  457cdc:	cmp	w8, #0x1
  457ce0:	b.gt	457cf0 <feof@plt+0x54c10>
  457ce4:	ldr	w9, [x19, #308]
  457ce8:	cmp	w9, #0x401
  457cec:	b.lt	457cfc <feof@plt+0x54c1c>  // b.tstop
  457cf0:	mov	w8, #0x1                   	// #1
  457cf4:	str	w8, [x19, #304]
  457cf8:	b	457d4c <feof@plt+0x54c6c>
  457cfc:	add	w8, w8, #0x1
  457d00:	str	w8, [x21, #4]
  457d04:	ldr	x8, [x19, #328]
  457d08:	add	w9, w9, #0x1
  457d0c:	str	w9, [x19, #308]
  457d10:	mov	x9, sp
  457d14:	mov	x0, x19
  457d18:	mov	w1, w20
  457d1c:	mov	x2, x21
  457d20:	stp	x21, x8, [sp]
  457d24:	str	x9, [x19, #328]
  457d28:	bl	4509c8 <feof@plt+0x4d8e8>
  457d2c:	ldr	x8, [sp, #8]
  457d30:	str	x8, [x19, #328]
  457d34:	ldr	w8, [x21, #4]
  457d38:	sub	w8, w8, #0x1
  457d3c:	str	w8, [x21, #4]
  457d40:	ldr	w8, [x19, #308]
  457d44:	sub	w8, w8, #0x1
  457d48:	str	w8, [x19, #308]
  457d4c:	ldr	x8, [x19, #256]
  457d50:	cmp	x8, #0xff
  457d54:	b.ne	457d80 <feof@plt+0x54ca0>  // b.any
  457d58:	ldp	x8, x2, [x19, #272]
  457d5c:	mov	w1, #0xff                  	// #255
  457d60:	mov	x0, x19
  457d64:	strb	wzr, [x19, #255]
  457d68:	blr	x8
  457d6c:	ldr	x9, [x19, #320]
  457d70:	mov	x8, xzr
  457d74:	str	xzr, [x19, #256]
  457d78:	add	x9, x9, #0x1
  457d7c:	str	x9, [x19, #320]
  457d80:	add	x9, x8, #0x1
  457d84:	mov	w10, #0x5d                  	// #93
  457d88:	str	x9, [x19, #256]
  457d8c:	strb	w10, [x19, x8]
  457d90:	strb	w10, [x19, #264]
  457d94:	ldp	x20, x19, [sp, #64]
  457d98:	ldp	x22, x21, [sp, #48]
  457d9c:	ldr	x23, [sp, #32]
  457da0:	ldp	x29, x30, [sp, #16]
  457da4:	add	sp, sp, #0x50
  457da8:	ret
  457dac:	stp	x29, x30, [sp, #-48]!
  457db0:	str	x21, [sp, #16]
  457db4:	stp	x20, x19, [sp, #32]
  457db8:	mov	x29, sp
  457dbc:	cbz	x1, 457e70 <feof@plt+0x54d90>
  457dc0:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x11838>
  457dc4:	mov	x19, x1
  457dc8:	mov	x20, x0
  457dcc:	add	x21, x21, #0x3c8
  457dd0:	b	457dec <feof@plt+0x54d0c>
  457dd4:	ldr	x1, [x19, #8]
  457dd8:	mov	x0, x20
  457ddc:	bl	457dac <feof@plt+0x54ccc>
  457de0:	cbnz	x0, 457e74 <feof@plt+0x54d94>
  457de4:	ldr	x19, [x19, #16]
  457de8:	cbz	x19, 457e70 <feof@plt+0x54d90>
  457dec:	ldr	w8, [x19]
  457df0:	cmp	w8, #0x4c
  457df4:	b.hi	457dd4 <feof@plt+0x54cf4>  // b.pmore
  457df8:	adr	x9, 457dd4 <feof@plt+0x54cf4>
  457dfc:	ldrb	w10, [x21, x8]
  457e00:	add	x9, x9, x10, lsl #2
  457e04:	mov	x0, xzr
  457e08:	br	x9
  457e0c:	ldr	x8, [x20, #288]
  457e10:	cbz	x8, 457e4c <feof@plt+0x54d6c>
  457e14:	ldr	x9, [x8, #8]
  457e18:	ldr	w8, [x19, #8]
  457e1c:	ldr	x0, [x9, #16]
  457e20:	tbnz	w8, #31, 457e60 <feof@plt+0x54d80>
  457e24:	cbz	x0, 457e70 <feof@plt+0x54d90>
  457e28:	ldr	w9, [x0]
  457e2c:	cmp	w9, #0x2f
  457e30:	b.ne	457e70 <feof@plt+0x54d90>  // b.any
  457e34:	subs	w9, w8, #0x1
  457e38:	b.lt	457e58 <feof@plt+0x54d78>  // b.tstop
  457e3c:	ldr	x0, [x0, #16]
  457e40:	mov	w8, w9
  457e44:	cbnz	x0, 457e28 <feof@plt+0x54d48>
  457e48:	b	457e70 <feof@plt+0x54d90>
  457e4c:	mov	w8, #0x1                   	// #1
  457e50:	str	w8, [x20, #304]
  457e54:	b	457e70 <feof@plt+0x54d90>
  457e58:	cbnz	w8, 457e70 <feof@plt+0x54d90>
  457e5c:	ldr	x0, [x0, #8]
  457e60:	cbz	x0, 457e70 <feof@plt+0x54d90>
  457e64:	ldr	w8, [x0]
  457e68:	cmp	w8, #0x2f
  457e6c:	b.eq	457e74 <feof@plt+0x54d94>  // b.none
  457e70:	mov	x0, xzr
  457e74:	ldp	x20, x19, [sp, #32]
  457e78:	ldr	x21, [sp, #16]
  457e7c:	ldp	x29, x30, [sp], #48
  457e80:	ret
  457e84:	sub	sp, sp, #0x60
  457e88:	stp	x29, x30, [sp, #16]
  457e8c:	stp	x26, x25, [sp, #32]
  457e90:	stp	x24, x23, [sp, #48]
  457e94:	stp	x22, x21, [sp, #64]
  457e98:	stp	x20, x19, [sp, #80]
  457e9c:	ldr	x8, [x2, #8]
  457ea0:	add	x29, sp, #0x10
  457ea4:	ldr	x8, [x8, #8]
  457ea8:	ldr	x8, [x8]
  457eac:	ldrb	w9, [x8]
  457eb0:	cmp	w9, #0x66
  457eb4:	b.ne	457edc <feof@plt+0x54dfc>  // b.any
  457eb8:	ldr	x9, [x2, #16]
  457ebc:	mov	w20, w1
  457ec0:	mov	x19, x0
  457ec4:	ldp	x21, x22, [x9, #8]
  457ec8:	ldr	w10, [x22]
  457ecc:	cmp	w10, #0x3c
  457ed0:	b.ne	457ee4 <feof@plt+0x54e04>  // b.any
  457ed4:	ldp	x22, x23, [x22, #8]
  457ed8:	b	457ee8 <feof@plt+0x54e08>
  457edc:	mov	w0, wzr
  457ee0:	b	458a24 <feof@plt+0x55944>
  457ee4:	mov	x23, xzr
  457ee8:	mov	w9, #0xffffffff            	// #-1
  457eec:	ldr	w24, [x19, #316]
  457ef0:	str	w9, [x19, #316]
  457ef4:	ldrb	w8, [x8, #1]
  457ef8:	sub	w8, w8, #0x4c
  457efc:	cmp	w8, #0x26
  457f00:	b.hi	458a1c <feof@plt+0x5593c>  // b.pmore
  457f04:	adrp	x9, 473000 <_obstack_memory_used@@Base+0x11838>
  457f08:	add	x9, x9, #0x416
  457f0c:	adr	x10, 457f1c <feof@plt+0x54e3c>
  457f10:	ldrh	w11, [x9, x8, lsl #1]
  457f14:	add	x10, x10, x11, lsl #2
  457f18:	br	x10
  457f1c:	ldr	x8, [x19, #256]
  457f20:	cmp	x8, #0xff
  457f24:	b.ne	457f50 <feof@plt+0x54e70>  // b.any
  457f28:	ldp	x8, x2, [x19, #272]
  457f2c:	mov	w1, #0xff                  	// #255
  457f30:	mov	x0, x19
  457f34:	strb	wzr, [x19, #255]
  457f38:	blr	x8
  457f3c:	ldr	x9, [x19, #320]
  457f40:	mov	x8, xzr
  457f44:	str	xzr, [x19, #256]
  457f48:	add	x9, x9, #0x1
  457f4c:	str	x9, [x19, #320]
  457f50:	add	x9, x8, #0x1
  457f54:	mov	w10, #0x28                  	// #40
  457f58:	str	x9, [x19, #256]
  457f5c:	strb	w10, [x19, x8]
  457f60:	strb	w10, [x19, #264]
  457f64:	ldr	w8, [x22]
  457f68:	cmp	w8, #0x31
  457f6c:	b.hi	458248 <feof@plt+0x55168>  // b.pmore
  457f70:	mov	w9, #0x1                   	// #1
  457f74:	lsl	x8, x9, x8
  457f78:	mov	x9, #0x43                  	// #67
  457f7c:	movk	x9, #0x2, lsl #48
  457f80:	tst	x8, x9
  457f84:	b.eq	458248 <feof@plt+0x55168>  // b.none
  457f88:	ldr	w8, [x22, #4]
  457f8c:	cmp	w8, #0x1
  457f90:	b.gt	457fa0 <feof@plt+0x54ec0>
  457f94:	ldr	w9, [x19, #308]
  457f98:	cmp	w9, #0x401
  457f9c:	b.lt	4581f4 <feof@plt+0x55114>  // b.tstop
  457fa0:	mov	w8, #0x1                   	// #1
  457fa4:	str	w8, [x19, #304]
  457fa8:	b	458588 <feof@plt+0x554a8>
  457fac:	ldr	x8, [x19, #256]
  457fb0:	cmp	x8, #0xff
  457fb4:	b.ne	457fe0 <feof@plt+0x54f00>  // b.any
  457fb8:	ldp	x8, x2, [x19, #272]
  457fbc:	mov	w1, #0xff                  	// #255
  457fc0:	mov	x0, x19
  457fc4:	strb	wzr, [x19, #255]
  457fc8:	blr	x8
  457fcc:	ldr	x9, [x19, #320]
  457fd0:	mov	x8, xzr
  457fd4:	str	xzr, [x19, #256]
  457fd8:	add	x9, x9, #0x1
  457fdc:	str	x9, [x19, #320]
  457fe0:	add	x9, x8, #0x1
  457fe4:	mov	w10, #0x28                  	// #40
  457fe8:	str	x9, [x19, #256]
  457fec:	strb	w10, [x19, x8]
  457ff0:	ldr	x8, [x19, #256]
  457ff4:	strb	w10, [x19, #264]
  457ff8:	cmp	x8, #0xff
  457ffc:	b.ne	458028 <feof@plt+0x54f48>  // b.any
  458000:	ldp	x8, x2, [x19, #272]
  458004:	mov	w1, #0xff                  	// #255
  458008:	mov	x0, x19
  45800c:	strb	wzr, [x19, #255]
  458010:	blr	x8
  458014:	ldr	x9, [x19, #320]
  458018:	mov	x8, xzr
  45801c:	str	xzr, [x19, #256]
  458020:	add	x9, x9, #0x1
  458024:	str	x9, [x19, #320]
  458028:	add	x9, x8, #0x1
  45802c:	mov	w23, #0x2e                  	// #46
  458030:	str	x9, [x19, #256]
  458034:	strb	w23, [x19, x8]
  458038:	ldr	x8, [x19, #256]
  45803c:	strb	w23, [x19, #264]
  458040:	cmp	x8, #0xff
  458044:	b.ne	458070 <feof@plt+0x54f90>  // b.any
  458048:	ldp	x8, x2, [x19, #272]
  45804c:	mov	w1, #0xff                  	// #255
  458050:	mov	x0, x19
  458054:	strb	wzr, [x19, #255]
  458058:	blr	x8
  45805c:	ldr	x9, [x19, #320]
  458060:	mov	x8, xzr
  458064:	str	xzr, [x19, #256]
  458068:	add	x9, x9, #0x1
  45806c:	str	x9, [x19, #320]
  458070:	add	x9, x8, #0x1
  458074:	str	x9, [x19, #256]
  458078:	strb	w23, [x19, x8]
  45807c:	ldr	x8, [x19, #256]
  458080:	strb	w23, [x19, #264]
  458084:	cmp	x8, #0xff
  458088:	b.ne	4580b4 <feof@plt+0x54fd4>  // b.any
  45808c:	ldp	x8, x2, [x19, #272]
  458090:	mov	w1, #0xff                  	// #255
  458094:	mov	x0, x19
  458098:	strb	wzr, [x19, #255]
  45809c:	blr	x8
  4580a0:	ldr	x9, [x19, #320]
  4580a4:	mov	x8, xzr
  4580a8:	str	xzr, [x19, #256]
  4580ac:	add	x9, x9, #0x1
  4580b0:	str	x9, [x19, #320]
  4580b4:	add	x9, x8, #0x1
  4580b8:	mov	w10, #0x2e                  	// #46
  4580bc:	str	x9, [x19, #256]
  4580c0:	strb	w10, [x19, x8]
  4580c4:	strb	w10, [x19, #264]
  4580c8:	ldr	w8, [x21]
  4580cc:	cmp	w8, #0x32
  4580d0:	b.ne	4581d0 <feof@plt+0x550f0>  // b.any
  4580d4:	ldr	x8, [x21, #8]
  4580d8:	ldrsw	x21, [x8, #16]
  4580dc:	cbz	w21, 4583c4 <feof@plt+0x552e4>
  4580e0:	ldr	x23, [x8, #8]
  4580e4:	b	458104 <feof@plt+0x55024>
  4580e8:	add	x9, x8, #0x1
  4580ec:	subs	x21, x21, #0x1
  4580f0:	add	x23, x23, #0x1
  4580f4:	str	x9, [x19, #256]
  4580f8:	strb	w25, [x19, x8]
  4580fc:	strb	w25, [x19, #264]
  458100:	b.eq	4583c4 <feof@plt+0x552e4>  // b.none
  458104:	ldr	x8, [x19, #256]
  458108:	ldrb	w25, [x23]
  45810c:	cmp	x8, #0xff
  458110:	b.ne	4580e8 <feof@plt+0x55008>  // b.any
  458114:	ldp	x8, x2, [x19, #272]
  458118:	mov	w1, #0xff                  	// #255
  45811c:	mov	x0, x19
  458120:	strb	wzr, [x19, #255]
  458124:	blr	x8
  458128:	ldr	x9, [x19, #320]
  45812c:	mov	x8, xzr
  458130:	str	xzr, [x19, #256]
  458134:	add	x9, x9, #0x1
  458138:	str	x9, [x19, #320]
  45813c:	b	4580e8 <feof@plt+0x55008>
  458140:	ldr	x8, [x19, #256]
  458144:	cmp	x8, #0xff
  458148:	b.ne	458174 <feof@plt+0x55094>  // b.any
  45814c:	ldp	x8, x2, [x19, #272]
  458150:	mov	w1, #0xff                  	// #255
  458154:	mov	x0, x19
  458158:	strb	wzr, [x19, #255]
  45815c:	blr	x8
  458160:	ldr	x9, [x19, #320]
  458164:	mov	x8, xzr
  458168:	str	xzr, [x19, #256]
  45816c:	add	x9, x9, #0x1
  458170:	str	x9, [x19, #320]
  458174:	add	x9, x8, #0x1
  458178:	mov	w10, #0x28                  	// #40
  45817c:	str	x9, [x19, #256]
  458180:	strb	w10, [x19, x8]
  458184:	strb	w10, [x19, #264]
  458188:	ldr	w8, [x22]
  45818c:	cmp	w8, #0x31
  458190:	b.hi	4582b4 <feof@plt+0x551d4>  // b.pmore
  458194:	mov	w9, #0x1                   	// #1
  458198:	lsl	x8, x9, x8
  45819c:	mov	x9, #0x43                  	// #67
  4581a0:	movk	x9, #0x2, lsl #48
  4581a4:	tst	x8, x9
  4581a8:	b.eq	4582b4 <feof@plt+0x551d4>  // b.none
  4581ac:	ldr	w8, [x22, #4]
  4581b0:	cmp	w8, #0x1
  4581b4:	b.gt	4581c4 <feof@plt+0x550e4>
  4581b8:	ldr	w9, [x19, #308]
  4581bc:	cmp	w9, #0x401
  4581c0:	b.lt	458320 <feof@plt+0x55240>  // b.tstop
  4581c4:	mov	w8, #0x1                   	// #1
  4581c8:	str	w8, [x19, #304]
  4581cc:	b	458ad8 <feof@plt+0x559f8>
  4581d0:	ldr	w8, [x21, #4]
  4581d4:	cmp	w8, #0x1
  4581d8:	b.gt	4581e8 <feof@plt+0x55108>
  4581dc:	ldr	w9, [x19, #308]
  4581e0:	cmp	w9, #0x401
  4581e4:	b.lt	458374 <feof@plt+0x55294>  // b.tstop
  4581e8:	mov	w8, #0x1                   	// #1
  4581ec:	str	w8, [x19, #304]
  4581f0:	b	4583c4 <feof@plt+0x552e4>
  4581f4:	add	w8, w8, #0x1
  4581f8:	str	w8, [x22, #4]
  4581fc:	ldr	x8, [x19, #328]
  458200:	add	w9, w9, #0x1
  458204:	str	w9, [x19, #308]
  458208:	mov	x9, sp
  45820c:	mov	x0, x19
  458210:	mov	w1, w20
  458214:	mov	x2, x22
  458218:	stp	x22, x8, [sp]
  45821c:	str	x9, [x19, #328]
  458220:	bl	4509c8 <feof@plt+0x4d8e8>
  458224:	ldr	x8, [sp, #8]
  458228:	str	x8, [x19, #328]
  45822c:	ldr	w8, [x22, #4]
  458230:	sub	w8, w8, #0x1
  458234:	str	w8, [x22, #4]
  458238:	ldr	w8, [x19, #308]
  45823c:	sub	w8, w8, #0x1
  458240:	str	w8, [x19, #308]
  458244:	b	458588 <feof@plt+0x554a8>
  458248:	ldr	x8, [x19, #256]
  45824c:	cmp	x8, #0xff
  458250:	b.ne	45827c <feof@plt+0x5519c>  // b.any
  458254:	ldp	x8, x2, [x19, #272]
  458258:	mov	w1, #0xff                  	// #255
  45825c:	mov	x0, x19
  458260:	strb	wzr, [x19, #255]
  458264:	blr	x8
  458268:	ldr	x9, [x19, #320]
  45826c:	mov	x8, xzr
  458270:	str	xzr, [x19, #256]
  458274:	add	x9, x9, #0x1
  458278:	str	x9, [x19, #320]
  45827c:	add	x9, x8, #0x1
  458280:	mov	w10, #0x28                  	// #40
  458284:	str	x9, [x19, #256]
  458288:	strb	w10, [x19, x8]
  45828c:	strb	w10, [x19, #264]
  458290:	ldr	w8, [x22, #4]
  458294:	cmp	w8, #0x1
  458298:	b.gt	4582a8 <feof@plt+0x551c8>
  45829c:	ldr	w9, [x19, #308]
  4582a0:	cmp	w9, #0x401
  4582a4:	b.lt	4584f0 <feof@plt+0x55410>  // b.tstop
  4582a8:	mov	w8, #0x1                   	// #1
  4582ac:	str	w8, [x19, #304]
  4582b0:	b	458540 <feof@plt+0x55460>
  4582b4:	ldr	x8, [x19, #256]
  4582b8:	cmp	x8, #0xff
  4582bc:	b.ne	4582e8 <feof@plt+0x55208>  // b.any
  4582c0:	ldp	x8, x2, [x19, #272]
  4582c4:	mov	w1, #0xff                  	// #255
  4582c8:	mov	x0, x19
  4582cc:	strb	wzr, [x19, #255]
  4582d0:	blr	x8
  4582d4:	ldr	x9, [x19, #320]
  4582d8:	mov	x8, xzr
  4582dc:	str	xzr, [x19, #256]
  4582e0:	add	x9, x9, #0x1
  4582e4:	str	x9, [x19, #320]
  4582e8:	add	x9, x8, #0x1
  4582ec:	mov	w10, #0x28                  	// #40
  4582f0:	str	x9, [x19, #256]
  4582f4:	strb	w10, [x19, x8]
  4582f8:	strb	w10, [x19, #264]
  4582fc:	ldr	w8, [x22, #4]
  458300:	cmp	w8, #0x1
  458304:	b.gt	458314 <feof@plt+0x55234>
  458308:	ldr	w9, [x19, #308]
  45830c:	cmp	w9, #0x401
  458310:	b.lt	458a40 <feof@plt+0x55960>  // b.tstop
  458314:	mov	w8, #0x1                   	// #1
  458318:	str	w8, [x19, #304]
  45831c:	b	458a90 <feof@plt+0x559b0>
  458320:	add	w8, w8, #0x1
  458324:	str	w8, [x22, #4]
  458328:	ldr	x8, [x19, #328]
  45832c:	add	w9, w9, #0x1
  458330:	str	w9, [x19, #308]
  458334:	mov	x9, sp
  458338:	mov	x0, x19
  45833c:	mov	w1, w20
  458340:	mov	x2, x22
  458344:	stp	x22, x8, [sp]
  458348:	str	x9, [x19, #328]
  45834c:	bl	4509c8 <feof@plt+0x4d8e8>
  458350:	ldr	x8, [sp, #8]
  458354:	str	x8, [x19, #328]
  458358:	ldr	w8, [x22, #4]
  45835c:	sub	w8, w8, #0x1
  458360:	str	w8, [x22, #4]
  458364:	ldr	w8, [x19, #308]
  458368:	sub	w8, w8, #0x1
  45836c:	str	w8, [x19, #308]
  458370:	b	458ad8 <feof@plt+0x559f8>
  458374:	add	w8, w8, #0x1
  458378:	str	w8, [x21, #4]
  45837c:	ldr	x8, [x19, #328]
  458380:	add	w9, w9, #0x1
  458384:	str	w9, [x19, #308]
  458388:	mov	x9, sp
  45838c:	mov	x0, x19
  458390:	mov	w1, w20
  458394:	mov	x2, x21
  458398:	stp	x21, x8, [sp]
  45839c:	str	x9, [x19, #328]
  4583a0:	bl	4509c8 <feof@plt+0x4d8e8>
  4583a4:	ldr	x8, [sp, #8]
  4583a8:	str	x8, [x19, #328]
  4583ac:	ldr	w8, [x21, #4]
  4583b0:	sub	w8, w8, #0x1
  4583b4:	str	w8, [x21, #4]
  4583b8:	ldr	w8, [x19, #308]
  4583bc:	sub	w8, w8, #0x1
  4583c0:	str	w8, [x19, #308]
  4583c4:	ldr	w8, [x22]
  4583c8:	cmp	w8, #0x31
  4583cc:	b.hi	458448 <feof@plt+0x55368>  // b.pmore
  4583d0:	mov	w9, #0x1                   	// #1
  4583d4:	lsl	x8, x9, x8
  4583d8:	mov	x9, #0x43                  	// #67
  4583dc:	movk	x9, #0x2, lsl #48
  4583e0:	tst	x8, x9
  4583e4:	b.eq	458448 <feof@plt+0x55368>  // b.none
  4583e8:	ldr	w8, [x22, #4]
  4583ec:	cmp	w8, #0x1
  4583f0:	b.gt	458870 <feof@plt+0x55790>
  4583f4:	ldr	w9, [x19, #308]
  4583f8:	cmp	w9, #0x401
  4583fc:	b.ge	458870 <feof@plt+0x55790>  // b.tcont
  458400:	add	w8, w8, #0x1
  458404:	str	w8, [x22, #4]
  458408:	ldr	x8, [x19, #328]
  45840c:	add	w9, w9, #0x1
  458410:	str	w9, [x19, #308]
  458414:	mov	x9, sp
  458418:	mov	x0, x19
  45841c:	mov	w1, w20
  458420:	mov	x2, x22
  458424:	stp	x22, x8, [sp]
  458428:	str	x9, [x19, #328]
  45842c:	bl	4509c8 <feof@plt+0x4d8e8>
  458430:	ldr	x8, [sp, #8]
  458434:	str	x8, [x19, #328]
  458438:	ldr	w8, [x22, #4]
  45843c:	sub	w8, w8, #0x1
  458440:	str	w8, [x22, #4]
  458444:	b	4588c0 <feof@plt+0x557e0>
  458448:	ldr	x8, [x19, #256]
  45844c:	cmp	x8, #0xff
  458450:	b.ne	45847c <feof@plt+0x5539c>  // b.any
  458454:	ldp	x8, x2, [x19, #272]
  458458:	mov	w1, #0xff                  	// #255
  45845c:	mov	x0, x19
  458460:	strb	wzr, [x19, #255]
  458464:	blr	x8
  458468:	ldr	x9, [x19, #320]
  45846c:	mov	x8, xzr
  458470:	str	xzr, [x19, #256]
  458474:	add	x9, x9, #0x1
  458478:	str	x9, [x19, #320]
  45847c:	add	x9, x8, #0x1
  458480:	mov	w10, #0x28                  	// #40
  458484:	str	x9, [x19, #256]
  458488:	strb	w10, [x19, x8]
  45848c:	strb	w10, [x19, #264]
  458490:	ldr	w8, [x22, #4]
  458494:	cmp	w8, #0x1
  458498:	b.gt	458930 <feof@plt+0x55850>
  45849c:	ldr	w9, [x19, #308]
  4584a0:	cmp	w9, #0x401
  4584a4:	b.ge	458930 <feof@plt+0x55850>  // b.tcont
  4584a8:	add	w8, w8, #0x1
  4584ac:	str	w8, [x22, #4]
  4584b0:	ldr	x8, [x19, #328]
  4584b4:	add	w9, w9, #0x1
  4584b8:	str	w9, [x19, #308]
  4584bc:	mov	x9, sp
  4584c0:	mov	x0, x19
  4584c4:	mov	w1, w20
  4584c8:	mov	x2, x22
  4584cc:	stp	x22, x8, [sp]
  4584d0:	str	x9, [x19, #328]
  4584d4:	bl	4509c8 <feof@plt+0x4d8e8>
  4584d8:	ldr	x8, [sp, #8]
  4584dc:	str	x8, [x19, #328]
  4584e0:	ldr	w8, [x22, #4]
  4584e4:	sub	w8, w8, #0x1
  4584e8:	str	w8, [x22, #4]
  4584ec:	b	458980 <feof@plt+0x558a0>
  4584f0:	add	w8, w8, #0x1
  4584f4:	str	w8, [x22, #4]
  4584f8:	ldr	x8, [x19, #328]
  4584fc:	add	w9, w9, #0x1
  458500:	str	w9, [x19, #308]
  458504:	mov	x9, sp
  458508:	mov	x0, x19
  45850c:	mov	w1, w20
  458510:	mov	x2, x22
  458514:	stp	x22, x8, [sp]
  458518:	str	x9, [x19, #328]
  45851c:	bl	4509c8 <feof@plt+0x4d8e8>
  458520:	ldr	x8, [sp, #8]
  458524:	str	x8, [x19, #328]
  458528:	ldr	w8, [x22, #4]
  45852c:	sub	w8, w8, #0x1
  458530:	str	w8, [x22, #4]
  458534:	ldr	w8, [x19, #308]
  458538:	sub	w8, w8, #0x1
  45853c:	str	w8, [x19, #308]
  458540:	ldr	x8, [x19, #256]
  458544:	cmp	x8, #0xff
  458548:	b.ne	458574 <feof@plt+0x55494>  // b.any
  45854c:	ldp	x8, x2, [x19, #272]
  458550:	mov	w1, #0xff                  	// #255
  458554:	mov	x0, x19
  458558:	strb	wzr, [x19, #255]
  45855c:	blr	x8
  458560:	ldr	x9, [x19, #320]
  458564:	mov	x8, xzr
  458568:	str	xzr, [x19, #256]
  45856c:	add	x9, x9, #0x1
  458570:	str	x9, [x19, #320]
  458574:	add	x9, x8, #0x1
  458578:	mov	w10, #0x29                  	// #41
  45857c:	str	x9, [x19, #256]
  458580:	strb	w10, [x19, x8]
  458584:	strb	w10, [x19, #264]
  458588:	ldr	w8, [x21]
  45858c:	cmp	w8, #0x32
  458590:	b.ne	458600 <feof@plt+0x55520>  // b.any
  458594:	ldr	x8, [x21, #8]
  458598:	ldrsw	x22, [x8, #16]
  45859c:	cbz	w22, 458674 <feof@plt+0x55594>
  4585a0:	ldr	x25, [x8, #8]
  4585a4:	b	4585c4 <feof@plt+0x554e4>
  4585a8:	add	x9, x8, #0x1
  4585ac:	subs	x22, x22, #0x1
  4585b0:	add	x25, x25, #0x1
  4585b4:	str	x9, [x19, #256]
  4585b8:	strb	w26, [x19, x8]
  4585bc:	strb	w26, [x19, #264]
  4585c0:	b.eq	458674 <feof@plt+0x55594>  // b.none
  4585c4:	ldr	x8, [x19, #256]
  4585c8:	ldrb	w26, [x25]
  4585cc:	cmp	x8, #0xff
  4585d0:	b.ne	4585a8 <feof@plt+0x554c8>  // b.any
  4585d4:	ldp	x8, x2, [x19, #272]
  4585d8:	mov	w1, #0xff                  	// #255
  4585dc:	mov	x0, x19
  4585e0:	strb	wzr, [x19, #255]
  4585e4:	blr	x8
  4585e8:	ldr	x9, [x19, #320]
  4585ec:	mov	x8, xzr
  4585f0:	str	xzr, [x19, #256]
  4585f4:	add	x9, x9, #0x1
  4585f8:	str	x9, [x19, #320]
  4585fc:	b	4585a8 <feof@plt+0x554c8>
  458600:	ldr	w8, [x21, #4]
  458604:	cmp	w8, #0x1
  458608:	b.gt	458618 <feof@plt+0x55538>
  45860c:	ldr	w9, [x19, #308]
  458610:	cmp	w9, #0x401
  458614:	b.lt	458624 <feof@plt+0x55544>  // b.tstop
  458618:	mov	w8, #0x1                   	// #1
  45861c:	str	w8, [x19, #304]
  458620:	b	458674 <feof@plt+0x55594>
  458624:	add	w8, w8, #0x1
  458628:	str	w8, [x21, #4]
  45862c:	ldr	x8, [x19, #328]
  458630:	add	w9, w9, #0x1
  458634:	str	w9, [x19, #308]
  458638:	mov	x9, sp
  45863c:	mov	x0, x19
  458640:	mov	w1, w20
  458644:	mov	x2, x21
  458648:	stp	x21, x8, [sp]
  45864c:	str	x9, [x19, #328]
  458650:	bl	4509c8 <feof@plt+0x4d8e8>
  458654:	ldr	x8, [sp, #8]
  458658:	str	x8, [x19, #328]
  45865c:	ldr	w8, [x21, #4]
  458660:	sub	w8, w8, #0x1
  458664:	str	w8, [x21, #4]
  458668:	ldr	w8, [x19, #308]
  45866c:	sub	w8, w8, #0x1
  458670:	str	w8, [x19, #308]
  458674:	ldr	x8, [x19, #256]
  458678:	cmp	x8, #0xff
  45867c:	b.ne	4586a8 <feof@plt+0x555c8>  // b.any
  458680:	ldp	x8, x2, [x19, #272]
  458684:	mov	w1, #0xff                  	// #255
  458688:	mov	x0, x19
  45868c:	strb	wzr, [x19, #255]
  458690:	blr	x8
  458694:	ldr	x9, [x19, #320]
  458698:	mov	x8, xzr
  45869c:	str	xzr, [x19, #256]
  4586a0:	add	x9, x9, #0x1
  4586a4:	str	x9, [x19, #320]
  4586a8:	add	x9, x8, #0x1
  4586ac:	mov	w22, #0x2e                  	// #46
  4586b0:	str	x9, [x19, #256]
  4586b4:	strb	w22, [x19, x8]
  4586b8:	ldr	x8, [x19, #256]
  4586bc:	strb	w22, [x19, #264]
  4586c0:	cmp	x8, #0xff
  4586c4:	b.ne	4586f0 <feof@plt+0x55610>  // b.any
  4586c8:	ldp	x8, x2, [x19, #272]
  4586cc:	mov	w1, #0xff                  	// #255
  4586d0:	mov	x0, x19
  4586d4:	strb	wzr, [x19, #255]
  4586d8:	blr	x8
  4586dc:	ldr	x9, [x19, #320]
  4586e0:	mov	x8, xzr
  4586e4:	str	xzr, [x19, #256]
  4586e8:	add	x9, x9, #0x1
  4586ec:	str	x9, [x19, #320]
  4586f0:	add	x9, x8, #0x1
  4586f4:	str	x9, [x19, #256]
  4586f8:	strb	w22, [x19, x8]
  4586fc:	ldr	x8, [x19, #256]
  458700:	strb	w22, [x19, #264]
  458704:	cmp	x8, #0xff
  458708:	b.ne	458734 <feof@plt+0x55654>  // b.any
  45870c:	ldp	x8, x2, [x19, #272]
  458710:	mov	w1, #0xff                  	// #255
  458714:	mov	x0, x19
  458718:	strb	wzr, [x19, #255]
  45871c:	blr	x8
  458720:	ldr	x9, [x19, #320]
  458724:	mov	x8, xzr
  458728:	str	xzr, [x19, #256]
  45872c:	add	x9, x9, #0x1
  458730:	str	x9, [x19, #320]
  458734:	add	x9, x8, #0x1
  458738:	mov	w10, #0x2e                  	// #46
  45873c:	str	x9, [x19, #256]
  458740:	strb	w10, [x19, x8]
  458744:	strb	w10, [x19, #264]
  458748:	ldr	w8, [x21]
  45874c:	cmp	w8, #0x32
  458750:	b.ne	4587c0 <feof@plt+0x556e0>  // b.any
  458754:	ldr	x8, [x21, #8]
  458758:	ldrsw	x21, [x8, #16]
  45875c:	cbz	w21, 458834 <feof@plt+0x55754>
  458760:	ldr	x22, [x8, #8]
  458764:	b	458784 <feof@plt+0x556a4>
  458768:	add	x9, x8, #0x1
  45876c:	subs	x21, x21, #0x1
  458770:	add	x22, x22, #0x1
  458774:	str	x9, [x19, #256]
  458778:	strb	w25, [x19, x8]
  45877c:	strb	w25, [x19, #264]
  458780:	b.eq	458834 <feof@plt+0x55754>  // b.none
  458784:	ldr	x8, [x19, #256]
  458788:	ldrb	w25, [x22]
  45878c:	cmp	x8, #0xff
  458790:	b.ne	458768 <feof@plt+0x55688>  // b.any
  458794:	ldp	x8, x2, [x19, #272]
  458798:	mov	w1, #0xff                  	// #255
  45879c:	mov	x0, x19
  4587a0:	strb	wzr, [x19, #255]
  4587a4:	blr	x8
  4587a8:	ldr	x9, [x19, #320]
  4587ac:	mov	x8, xzr
  4587b0:	str	xzr, [x19, #256]
  4587b4:	add	x9, x9, #0x1
  4587b8:	str	x9, [x19, #320]
  4587bc:	b	458768 <feof@plt+0x55688>
  4587c0:	ldr	w8, [x21, #4]
  4587c4:	cmp	w8, #0x1
  4587c8:	b.gt	4587d8 <feof@plt+0x556f8>
  4587cc:	ldr	w9, [x19, #308]
  4587d0:	cmp	w9, #0x401
  4587d4:	b.lt	4587e4 <feof@plt+0x55704>  // b.tstop
  4587d8:	mov	w8, #0x1                   	// #1
  4587dc:	str	w8, [x19, #304]
  4587e0:	b	458834 <feof@plt+0x55754>
  4587e4:	add	w8, w8, #0x1
  4587e8:	str	w8, [x21, #4]
  4587ec:	ldr	x8, [x19, #328]
  4587f0:	add	w9, w9, #0x1
  4587f4:	str	w9, [x19, #308]
  4587f8:	mov	x9, sp
  4587fc:	mov	x0, x19
  458800:	mov	w1, w20
  458804:	mov	x2, x21
  458808:	stp	x21, x8, [sp]
  45880c:	str	x9, [x19, #328]
  458810:	bl	4509c8 <feof@plt+0x4d8e8>
  458814:	ldr	x8, [sp, #8]
  458818:	str	x8, [x19, #328]
  45881c:	ldr	w8, [x21, #4]
  458820:	sub	w8, w8, #0x1
  458824:	str	w8, [x21, #4]
  458828:	ldr	w8, [x19, #308]
  45882c:	sub	w8, w8, #0x1
  458830:	str	w8, [x19, #308]
  458834:	ldr	w8, [x23]
  458838:	cmp	w8, #0x31
  45883c:	b.hi	4588d0 <feof@plt+0x557f0>  // b.pmore
  458840:	mov	w9, #0x1                   	// #1
  458844:	lsl	x8, x9, x8
  458848:	mov	x9, #0x43                  	// #67
  45884c:	movk	x9, #0x2, lsl #48
  458850:	tst	x8, x9
  458854:	b.eq	4588d0 <feof@plt+0x557f0>  // b.none
  458858:	ldr	w8, [x23, #4]
  45885c:	cmp	w8, #0x1
  458860:	b.gt	458870 <feof@plt+0x55790>
  458864:	ldr	w9, [x19, #308]
  458868:	cmp	w9, #0x401
  45886c:	b.lt	45887c <feof@plt+0x5579c>  // b.tstop
  458870:	mov	w8, #0x1                   	// #1
  458874:	str	w8, [x19, #304]
  458878:	b	4589d4 <feof@plt+0x558f4>
  45887c:	add	w8, w8, #0x1
  458880:	str	w8, [x23, #4]
  458884:	ldr	x8, [x19, #328]
  458888:	add	w9, w9, #0x1
  45888c:	str	w9, [x19, #308]
  458890:	mov	x9, sp
  458894:	mov	x0, x19
  458898:	mov	w1, w20
  45889c:	mov	x2, x23
  4588a0:	stp	x23, x8, [sp]
  4588a4:	str	x9, [x19, #328]
  4588a8:	bl	4509c8 <feof@plt+0x4d8e8>
  4588ac:	ldr	x8, [sp, #8]
  4588b0:	str	x8, [x19, #328]
  4588b4:	ldr	w8, [x23, #4]
  4588b8:	sub	w8, w8, #0x1
  4588bc:	str	w8, [x23, #4]
  4588c0:	ldr	w8, [x19, #308]
  4588c4:	sub	w8, w8, #0x1
  4588c8:	str	w8, [x19, #308]
  4588cc:	b	4589d4 <feof@plt+0x558f4>
  4588d0:	ldr	x8, [x19, #256]
  4588d4:	cmp	x8, #0xff
  4588d8:	b.ne	458904 <feof@plt+0x55824>  // b.any
  4588dc:	ldp	x8, x2, [x19, #272]
  4588e0:	mov	w1, #0xff                  	// #255
  4588e4:	mov	x0, x19
  4588e8:	strb	wzr, [x19, #255]
  4588ec:	blr	x8
  4588f0:	ldr	x9, [x19, #320]
  4588f4:	mov	x8, xzr
  4588f8:	str	xzr, [x19, #256]
  4588fc:	add	x9, x9, #0x1
  458900:	str	x9, [x19, #320]
  458904:	add	x9, x8, #0x1
  458908:	mov	w10, #0x28                  	// #40
  45890c:	str	x9, [x19, #256]
  458910:	strb	w10, [x19, x8]
  458914:	strb	w10, [x19, #264]
  458918:	ldr	w8, [x23, #4]
  45891c:	cmp	w8, #0x1
  458920:	b.gt	458930 <feof@plt+0x55850>
  458924:	ldr	w9, [x19, #308]
  458928:	cmp	w9, #0x401
  45892c:	b.lt	45893c <feof@plt+0x5585c>  // b.tstop
  458930:	mov	w8, #0x1                   	// #1
  458934:	str	w8, [x19, #304]
  458938:	b	45898c <feof@plt+0x558ac>
  45893c:	add	w8, w8, #0x1
  458940:	str	w8, [x23, #4]
  458944:	ldr	x8, [x19, #328]
  458948:	add	w9, w9, #0x1
  45894c:	str	w9, [x19, #308]
  458950:	mov	x9, sp
  458954:	mov	x0, x19
  458958:	mov	w1, w20
  45895c:	mov	x2, x23
  458960:	stp	x23, x8, [sp]
  458964:	str	x9, [x19, #328]
  458968:	bl	4509c8 <feof@plt+0x4d8e8>
  45896c:	ldr	x8, [sp, #8]
  458970:	str	x8, [x19, #328]
  458974:	ldr	w8, [x23, #4]
  458978:	sub	w8, w8, #0x1
  45897c:	str	w8, [x23, #4]
  458980:	ldr	w8, [x19, #308]
  458984:	sub	w8, w8, #0x1
  458988:	str	w8, [x19, #308]
  45898c:	ldr	x8, [x19, #256]
  458990:	cmp	x8, #0xff
  458994:	b.ne	4589c0 <feof@plt+0x558e0>  // b.any
  458998:	ldp	x8, x2, [x19, #272]
  45899c:	mov	w1, #0xff                  	// #255
  4589a0:	mov	x0, x19
  4589a4:	strb	wzr, [x19, #255]
  4589a8:	blr	x8
  4589ac:	ldr	x9, [x19, #320]
  4589b0:	mov	x8, xzr
  4589b4:	str	xzr, [x19, #256]
  4589b8:	add	x9, x9, #0x1
  4589bc:	str	x9, [x19, #320]
  4589c0:	add	x9, x8, #0x1
  4589c4:	mov	w10, #0x29                  	// #41
  4589c8:	str	x9, [x19, #256]
  4589cc:	strb	w10, [x19, x8]
  4589d0:	strb	w10, [x19, #264]
  4589d4:	ldr	x8, [x19, #256]
  4589d8:	cmp	x8, #0xff
  4589dc:	b.ne	458a08 <feof@plt+0x55928>  // b.any
  4589e0:	ldp	x8, x2, [x19, #272]
  4589e4:	mov	w1, #0xff                  	// #255
  4589e8:	mov	x0, x19
  4589ec:	strb	wzr, [x19, #255]
  4589f0:	blr	x8
  4589f4:	ldr	x9, [x19, #320]
  4589f8:	mov	x8, xzr
  4589fc:	str	xzr, [x19, #256]
  458a00:	add	x9, x9, #0x1
  458a04:	str	x9, [x19, #320]
  458a08:	add	x9, x8, #0x1
  458a0c:	mov	w10, #0x29                  	// #41
  458a10:	str	x9, [x19, #256]
  458a14:	strb	w10, [x19, x8]
  458a18:	strb	w10, [x19, #264]
  458a1c:	mov	w0, #0x1                   	// #1
  458a20:	str	w24, [x19, #316]
  458a24:	ldp	x20, x19, [sp, #80]
  458a28:	ldp	x22, x21, [sp, #64]
  458a2c:	ldp	x24, x23, [sp, #48]
  458a30:	ldp	x26, x25, [sp, #32]
  458a34:	ldp	x29, x30, [sp, #16]
  458a38:	add	sp, sp, #0x60
  458a3c:	ret
  458a40:	add	w8, w8, #0x1
  458a44:	str	w8, [x22, #4]
  458a48:	ldr	x8, [x19, #328]
  458a4c:	add	w9, w9, #0x1
  458a50:	str	w9, [x19, #308]
  458a54:	mov	x9, sp
  458a58:	mov	x0, x19
  458a5c:	mov	w1, w20
  458a60:	mov	x2, x22
  458a64:	stp	x22, x8, [sp]
  458a68:	str	x9, [x19, #328]
  458a6c:	bl	4509c8 <feof@plt+0x4d8e8>
  458a70:	ldr	x8, [sp, #8]
  458a74:	str	x8, [x19, #328]
  458a78:	ldr	w8, [x22, #4]
  458a7c:	sub	w8, w8, #0x1
  458a80:	str	w8, [x22, #4]
  458a84:	ldr	w8, [x19, #308]
  458a88:	sub	w8, w8, #0x1
  458a8c:	str	w8, [x19, #308]
  458a90:	ldr	x8, [x19, #256]
  458a94:	cmp	x8, #0xff
  458a98:	b.ne	458ac4 <feof@plt+0x559e4>  // b.any
  458a9c:	ldp	x8, x2, [x19, #272]
  458aa0:	mov	w1, #0xff                  	// #255
  458aa4:	mov	x0, x19
  458aa8:	strb	wzr, [x19, #255]
  458aac:	blr	x8
  458ab0:	ldr	x9, [x19, #320]
  458ab4:	mov	x8, xzr
  458ab8:	str	xzr, [x19, #256]
  458abc:	add	x9, x9, #0x1
  458ac0:	str	x9, [x19, #320]
  458ac4:	add	x9, x8, #0x1
  458ac8:	mov	w10, #0x29                  	// #41
  458acc:	str	x9, [x19, #256]
  458ad0:	strb	w10, [x19, x8]
  458ad4:	strb	w10, [x19, #264]
  458ad8:	ldr	w8, [x21]
  458adc:	cmp	w8, #0x32
  458ae0:	b.ne	458b50 <feof@plt+0x55a70>  // b.any
  458ae4:	ldr	x8, [x21, #8]
  458ae8:	ldrsw	x20, [x8, #16]
  458aec:	cbz	w20, 458bc4 <feof@plt+0x55ae4>
  458af0:	ldr	x21, [x8, #8]
  458af4:	b	458b14 <feof@plt+0x55a34>
  458af8:	add	x9, x8, #0x1
  458afc:	subs	x20, x20, #0x1
  458b00:	add	x21, x21, #0x1
  458b04:	str	x9, [x19, #256]
  458b08:	strb	w22, [x19, x8]
  458b0c:	strb	w22, [x19, #264]
  458b10:	b.eq	458bc4 <feof@plt+0x55ae4>  // b.none
  458b14:	ldr	x8, [x19, #256]
  458b18:	ldrb	w22, [x21]
  458b1c:	cmp	x8, #0xff
  458b20:	b.ne	458af8 <feof@plt+0x55a18>  // b.any
  458b24:	ldp	x8, x2, [x19, #272]
  458b28:	mov	w1, #0xff                  	// #255
  458b2c:	mov	x0, x19
  458b30:	strb	wzr, [x19, #255]
  458b34:	blr	x8
  458b38:	ldr	x9, [x19, #320]
  458b3c:	mov	x8, xzr
  458b40:	str	xzr, [x19, #256]
  458b44:	add	x9, x9, #0x1
  458b48:	str	x9, [x19, #320]
  458b4c:	b	458af8 <feof@plt+0x55a18>
  458b50:	ldr	w8, [x21, #4]
  458b54:	cmp	w8, #0x1
  458b58:	b.gt	458b68 <feof@plt+0x55a88>
  458b5c:	ldr	w9, [x19, #308]
  458b60:	cmp	w9, #0x401
  458b64:	b.lt	458b74 <feof@plt+0x55a94>  // b.tstop
  458b68:	mov	w8, #0x1                   	// #1
  458b6c:	str	w8, [x19, #304]
  458b70:	b	458bc4 <feof@plt+0x55ae4>
  458b74:	add	w8, w8, #0x1
  458b78:	str	w8, [x21, #4]
  458b7c:	ldr	x8, [x19, #328]
  458b80:	add	w9, w9, #0x1
  458b84:	str	w9, [x19, #308]
  458b88:	mov	x9, sp
  458b8c:	mov	x0, x19
  458b90:	mov	w1, w20
  458b94:	mov	x2, x21
  458b98:	stp	x21, x8, [sp]
  458b9c:	str	x9, [x19, #328]
  458ba0:	bl	4509c8 <feof@plt+0x4d8e8>
  458ba4:	ldr	x8, [sp, #8]
  458ba8:	str	x8, [x19, #328]
  458bac:	ldr	w8, [x21, #4]
  458bb0:	sub	w8, w8, #0x1
  458bb4:	str	w8, [x21, #4]
  458bb8:	ldr	w8, [x19, #308]
  458bbc:	sub	w8, w8, #0x1
  458bc0:	str	w8, [x19, #308]
  458bc4:	ldr	x8, [x19, #256]
  458bc8:	cmp	x8, #0xff
  458bcc:	b.ne	458bf8 <feof@plt+0x55b18>  // b.any
  458bd0:	ldp	x8, x2, [x19, #272]
  458bd4:	mov	w1, #0xff                  	// #255
  458bd8:	mov	x0, x19
  458bdc:	strb	wzr, [x19, #255]
  458be0:	blr	x8
  458be4:	ldr	x9, [x19, #320]
  458be8:	mov	x8, xzr
  458bec:	str	xzr, [x19, #256]
  458bf0:	add	x9, x9, #0x1
  458bf4:	str	x9, [x19, #320]
  458bf8:	add	x9, x8, #0x1
  458bfc:	mov	w20, #0x2e                  	// #46
  458c00:	str	x9, [x19, #256]
  458c04:	strb	w20, [x19, x8]
  458c08:	ldr	x8, [x19, #256]
  458c0c:	strb	w20, [x19, #264]
  458c10:	cmp	x8, #0xff
  458c14:	b.ne	458c40 <feof@plt+0x55b60>  // b.any
  458c18:	ldp	x8, x2, [x19, #272]
  458c1c:	mov	w1, #0xff                  	// #255
  458c20:	mov	x0, x19
  458c24:	strb	wzr, [x19, #255]
  458c28:	blr	x8
  458c2c:	ldr	x9, [x19, #320]
  458c30:	mov	x8, xzr
  458c34:	str	xzr, [x19, #256]
  458c38:	add	x9, x9, #0x1
  458c3c:	str	x9, [x19, #320]
  458c40:	add	x9, x8, #0x1
  458c44:	str	x9, [x19, #256]
  458c48:	strb	w20, [x19, x8]
  458c4c:	ldr	x8, [x19, #256]
  458c50:	strb	w20, [x19, #264]
  458c54:	cmp	x8, #0xff
  458c58:	b.ne	458c84 <feof@plt+0x55ba4>  // b.any
  458c5c:	ldp	x8, x2, [x19, #272]
  458c60:	mov	w1, #0xff                  	// #255
  458c64:	mov	x0, x19
  458c68:	strb	wzr, [x19, #255]
  458c6c:	blr	x8
  458c70:	ldr	x9, [x19, #320]
  458c74:	mov	x8, xzr
  458c78:	str	xzr, [x19, #256]
  458c7c:	add	x9, x9, #0x1
  458c80:	str	x9, [x19, #320]
  458c84:	add	x9, x8, #0x1
  458c88:	mov	w10, #0x2e                  	// #46
  458c8c:	str	x9, [x19, #256]
  458c90:	strb	w10, [x19, x8]
  458c94:	ldr	x8, [x19, #256]
  458c98:	strb	w10, [x19, #264]
  458c9c:	cmp	x8, #0xff
  458ca0:	b.eq	4589e0 <feof@plt+0x55900>  // b.none
  458ca4:	b	458a08 <feof@plt+0x55928>
  458ca8:	sub	sp, sp, #0x70
  458cac:	stp	x29, x30, [sp, #32]
  458cb0:	str	x25, [sp, #48]
  458cb4:	stp	x24, x23, [sp, #64]
  458cb8:	stp	x22, x21, [sp, #80]
  458cbc:	stp	x20, x19, [sp, #96]
  458cc0:	add	x29, sp, #0x20
  458cc4:	cbz	x2, 458cd4 <feof@plt+0x55bf4>
  458cc8:	ldr	w8, [x0, #304]
  458ccc:	mov	x19, x0
  458cd0:	cbz	w8, 458cf0 <feof@plt+0x55c10>
  458cd4:	ldp	x20, x19, [sp, #96]
  458cd8:	ldp	x22, x21, [sp, #80]
  458cdc:	ldp	x24, x23, [sp, #64]
  458ce0:	ldr	x25, [sp, #48]
  458ce4:	ldp	x29, x30, [sp, #32]
  458ce8:	add	sp, sp, #0x70
  458cec:	ret
  458cf0:	ldr	w8, [x2, #16]
  458cf4:	mov	w22, w3
  458cf8:	mov	x21, x2
  458cfc:	mov	w20, w1
  458d00:	cbz	w8, 458d30 <feof@plt+0x55c50>
  458d04:	ldr	x2, [x21]
  458d08:	mov	x0, x19
  458d0c:	mov	w1, w20
  458d10:	mov	w3, w22
  458d14:	ldp	x20, x19, [sp, #96]
  458d18:	ldp	x22, x21, [sp, #80]
  458d1c:	ldp	x24, x23, [sp, #64]
  458d20:	ldr	x25, [sp, #48]
  458d24:	ldp	x29, x30, [sp, #32]
  458d28:	add	sp, sp, #0x70
  458d2c:	b	458ca8 <feof@plt+0x55bc8>
  458d30:	ldr	x2, [x21, #8]
  458d34:	ldr	w8, [x2]
  458d38:	cbz	w22, 458d7c <feof@plt+0x55c9c>
  458d3c:	mov	w9, #0x1                   	// #1
  458d40:	str	w9, [x21, #16]
  458d44:	ldr	x9, [x21, #24]
  458d48:	ldr	x23, [x19, #288]
  458d4c:	cmp	w8, #0x2
  458d50:	str	x9, [x19, #288]
  458d54:	b.eq	458da4 <feof@plt+0x55cc4>  // b.none
  458d58:	cmp	w8, #0x2a
  458d5c:	b.eq	458e6c <feof@plt+0x55d8c>  // b.none
  458d60:	cmp	w8, #0x29
  458d64:	b.ne	458e80 <feof@plt+0x55da0>  // b.any
  458d68:	ldr	x3, [x21]
  458d6c:	mov	x0, x19
  458d70:	mov	w1, w20
  458d74:	bl	457800 <feof@plt+0x54720>
  458d78:	b	45915c <feof@plt+0x5607c>
  458d7c:	sub	w9, w8, #0x1c
  458d80:	cmp	w9, #0x34
  458d84:	b.hi	458d3c <feof@plt+0x55c5c>  // b.pmore
  458d88:	mov	w10, #0x1                   	// #1
  458d8c:	lsl	x9, x10, x9
  458d90:	mov	x10, #0x1f                  	// #31
  458d94:	movk	x10, #0x1a, lsl #48
  458d98:	tst	x9, x10
  458d9c:	b.ne	458d04 <feof@plt+0x55c24>  // b.any
  458da0:	b	458d3c <feof@plt+0x55c5c>
  458da4:	ldr	x24, [x19, #296]
  458da8:	str	xzr, [x19, #296]
  458dac:	ldr	x22, [x2, #8]
  458db0:	cbz	x22, 458dcc <feof@plt+0x55cec>
  458db4:	ldr	w8, [x22, #4]
  458db8:	cmp	w8, #0x1
  458dbc:	b.gt	458dcc <feof@plt+0x55cec>
  458dc0:	ldr	w9, [x19, #308]
  458dc4:	cmp	w9, #0x401
  458dc8:	b.lt	458e94 <feof@plt+0x55db4>  // b.tstop
  458dcc:	mov	w8, #0x1                   	// #1
  458dd0:	str	w8, [x19, #304]
  458dd4:	str	x24, [x19, #296]
  458dd8:	tbnz	w20, #2, 458eec <feof@plt+0x55e0c>
  458ddc:	ldr	x8, [x19, #256]
  458de0:	cmp	x8, #0xff
  458de4:	b.ne	458e10 <feof@plt+0x55d30>  // b.any
  458de8:	ldp	x8, x2, [x19, #272]
  458dec:	mov	w1, #0xff                  	// #255
  458df0:	mov	x0, x19
  458df4:	strb	wzr, [x19, #255]
  458df8:	blr	x8
  458dfc:	ldr	x9, [x19, #320]
  458e00:	mov	x8, xzr
  458e04:	str	xzr, [x19, #256]
  458e08:	add	x9, x9, #0x1
  458e0c:	str	x9, [x19, #320]
  458e10:	add	x9, x8, #0x1
  458e14:	mov	w22, #0x3a                  	// #58
  458e18:	str	x9, [x19, #256]
  458e1c:	strb	w22, [x19, x8]
  458e20:	ldr	x8, [x19, #256]
  458e24:	strb	w22, [x19, #264]
  458e28:	cmp	x8, #0xff
  458e2c:	b.ne	458e58 <feof@plt+0x55d78>  // b.any
  458e30:	ldp	x8, x2, [x19, #272]
  458e34:	mov	w1, #0xff                  	// #255
  458e38:	mov	x0, x19
  458e3c:	strb	wzr, [x19, #255]
  458e40:	blr	x8
  458e44:	ldr	x9, [x19, #320]
  458e48:	mov	x8, xzr
  458e4c:	str	xzr, [x19, #256]
  458e50:	add	x9, x9, #0x1
  458e54:	str	x9, [x19, #320]
  458e58:	add	x9, x8, #0x1
  458e5c:	str	x9, [x19, #256]
  458e60:	strb	w22, [x19, x8]
  458e64:	strb	w22, [x19, #264]
  458e68:	b	458f34 <feof@plt+0x55e54>
  458e6c:	ldr	x3, [x21]
  458e70:	mov	x0, x19
  458e74:	mov	w1, w20
  458e78:	bl	457ad8 <feof@plt+0x549f8>
  458e7c:	b	45915c <feof@plt+0x5607c>
  458e80:	mov	x0, x19
  458e84:	mov	w1, w20
  458e88:	bl	456c60 <feof@plt+0x53b80>
  458e8c:	str	x23, [x19, #288]
  458e90:	b	458d04 <feof@plt+0x55c24>
  458e94:	add	w8, w8, #0x1
  458e98:	str	w8, [x22, #4]
  458e9c:	ldr	x8, [x19, #328]
  458ea0:	add	w9, w9, #0x1
  458ea4:	str	w9, [x19, #308]
  458ea8:	mov	x9, sp
  458eac:	mov	x0, x19
  458eb0:	mov	w1, w20
  458eb4:	mov	x2, x22
  458eb8:	stp	x22, x8, [sp]
  458ebc:	str	x9, [x19, #328]
  458ec0:	bl	4509c8 <feof@plt+0x4d8e8>
  458ec4:	ldr	x8, [sp, #8]
  458ec8:	str	x8, [x19, #328]
  458ecc:	ldr	w8, [x22, #4]
  458ed0:	sub	w8, w8, #0x1
  458ed4:	str	w8, [x22, #4]
  458ed8:	ldr	w8, [x19, #308]
  458edc:	sub	w8, w8, #0x1
  458ee0:	str	w8, [x19, #308]
  458ee4:	str	x24, [x19, #296]
  458ee8:	tbz	w20, #2, 458ddc <feof@plt+0x55cfc>
  458eec:	ldr	x8, [x19, #256]
  458ef0:	cmp	x8, #0xff
  458ef4:	b.ne	458f20 <feof@plt+0x55e40>  // b.any
  458ef8:	ldp	x8, x2, [x19, #272]
  458efc:	mov	w1, #0xff                  	// #255
  458f00:	mov	x0, x19
  458f04:	strb	wzr, [x19, #255]
  458f08:	blr	x8
  458f0c:	ldr	x9, [x19, #320]
  458f10:	mov	x8, xzr
  458f14:	str	xzr, [x19, #256]
  458f18:	add	x9, x9, #0x1
  458f1c:	str	x9, [x19, #320]
  458f20:	add	x9, x8, #0x1
  458f24:	mov	w10, #0x2e                  	// #46
  458f28:	str	x9, [x19, #256]
  458f2c:	strb	w10, [x19, x8]
  458f30:	strb	w10, [x19, #264]
  458f34:	ldr	x8, [x21, #8]
  458f38:	ldr	x21, [x8, #16]
  458f3c:	ldr	w8, [x21]
  458f40:	cmp	w8, #0x47
  458f44:	b.ne	459110 <feof@plt+0x56030>  // b.any
  458f48:	adrp	x24, 474000 <_obstack_memory_used@@Base+0x12838>
  458f4c:	mov	x22, xzr
  458f50:	add	x24, x24, #0x410
  458f54:	b	458f74 <feof@plt+0x55e94>
  458f58:	add	x22, x22, #0x1
  458f5c:	add	x9, x8, #0x1
  458f60:	cmp	x22, #0xd
  458f64:	str	x9, [x19, #256]
  458f68:	strb	w25, [x19, x8]
  458f6c:	strb	w25, [x19, #264]
  458f70:	b.eq	458fb0 <feof@plt+0x55ed0>  // b.none
  458f74:	ldr	x8, [x19, #256]
  458f78:	ldrb	w25, [x24, x22]
  458f7c:	cmp	x8, #0xff
  458f80:	b.ne	458f58 <feof@plt+0x55e78>  // b.any
  458f84:	ldp	x8, x2, [x19, #272]
  458f88:	mov	w1, #0xff                  	// #255
  458f8c:	mov	x0, x19
  458f90:	strb	wzr, [x19, #255]
  458f94:	blr	x8
  458f98:	ldr	x9, [x19, #320]
  458f9c:	mov	x8, xzr
  458fa0:	str	xzr, [x19, #256]
  458fa4:	add	x9, x9, #0x1
  458fa8:	str	x9, [x19, #320]
  458fac:	b	458f58 <feof@plt+0x55e78>
  458fb0:	ldr	w8, [x21, #16]
  458fb4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x3838>
  458fb8:	add	x1, x1, #0x229
  458fbc:	mov	x0, sp
  458fc0:	add	w2, w8, #0x1
  458fc4:	bl	402c30 <sprintf@plt>
  458fc8:	mov	x0, sp
  458fcc:	bl	402a50 <strlen@plt>
  458fd0:	cbz	x0, 459038 <feof@plt+0x55f58>
  458fd4:	mov	x22, x0
  458fd8:	mov	x24, sp
  458fdc:	b	458ffc <feof@plt+0x55f1c>
  458fe0:	add	x9, x8, #0x1
  458fe4:	subs	x22, x22, #0x1
  458fe8:	add	x24, x24, #0x1
  458fec:	str	x9, [x19, #256]
  458ff0:	strb	w25, [x19, x8]
  458ff4:	strb	w25, [x19, #264]
  458ff8:	b.eq	459038 <feof@plt+0x55f58>  // b.none
  458ffc:	ldr	x8, [x19, #256]
  459000:	ldrb	w25, [x24]
  459004:	cmp	x8, #0xff
  459008:	b.ne	458fe0 <feof@plt+0x55f00>  // b.any
  45900c:	ldp	x8, x2, [x19, #272]
  459010:	mov	w1, #0xff                  	// #255
  459014:	mov	x0, x19
  459018:	strb	wzr, [x19, #255]
  45901c:	blr	x8
  459020:	ldr	x9, [x19, #320]
  459024:	mov	x8, xzr
  459028:	str	xzr, [x19, #256]
  45902c:	add	x9, x9, #0x1
  459030:	str	x9, [x19, #320]
  459034:	b	458fe0 <feof@plt+0x55f00>
  459038:	ldr	x8, [x19, #256]
  45903c:	cmp	x8, #0xff
  459040:	b.ne	45906c <feof@plt+0x55f8c>  // b.any
  459044:	ldp	x8, x2, [x19, #272]
  459048:	mov	w1, #0xff                  	// #255
  45904c:	mov	x0, x19
  459050:	strb	wzr, [x19, #255]
  459054:	blr	x8
  459058:	ldr	x9, [x19, #320]
  45905c:	mov	x8, xzr
  459060:	str	xzr, [x19, #256]
  459064:	add	x9, x9, #0x1
  459068:	str	x9, [x19, #320]
  45906c:	add	x9, x8, #0x1
  459070:	mov	w10, #0x7d                  	// #125
  459074:	str	x9, [x19, #256]
  459078:	strb	w10, [x19, x8]
  45907c:	ldr	x8, [x19, #256]
  459080:	strb	w10, [x19, #264]
  459084:	cmp	x8, #0xff
  459088:	b.ne	4590b4 <feof@plt+0x55fd4>  // b.any
  45908c:	ldp	x8, x2, [x19, #272]
  459090:	mov	w1, #0xff                  	// #255
  459094:	mov	x0, x19
  459098:	strb	wzr, [x19, #255]
  45909c:	blr	x8
  4590a0:	ldr	x9, [x19, #320]
  4590a4:	mov	x8, xzr
  4590a8:	str	xzr, [x19, #256]
  4590ac:	add	x9, x9, #0x1
  4590b0:	str	x9, [x19, #320]
  4590b4:	add	x9, x8, #0x1
  4590b8:	mov	w22, #0x3a                  	// #58
  4590bc:	str	x9, [x19, #256]
  4590c0:	strb	w22, [x19, x8]
  4590c4:	ldr	x8, [x19, #256]
  4590c8:	strb	w22, [x19, #264]
  4590cc:	cmp	x8, #0xff
  4590d0:	b.ne	4590fc <feof@plt+0x5601c>  // b.any
  4590d4:	ldp	x8, x2, [x19, #272]
  4590d8:	mov	w1, #0xff                  	// #255
  4590dc:	mov	x0, x19
  4590e0:	strb	wzr, [x19, #255]
  4590e4:	blr	x8
  4590e8:	ldr	x9, [x19, #320]
  4590ec:	mov	x8, xzr
  4590f0:	str	xzr, [x19, #256]
  4590f4:	add	x9, x9, #0x1
  4590f8:	str	x9, [x19, #320]
  4590fc:	add	x9, x8, #0x1
  459100:	str	x9, [x19, #256]
  459104:	strb	w22, [x19, x8]
  459108:	strb	w22, [x19, #264]
  45910c:	ldr	x21, [x21, #8]
  459110:	ldr	w8, [x21]
  459114:	sub	w8, w8, #0x1c
  459118:	cmp	w8, #0x34
  45911c:	b.hi	459138 <feof@plt+0x56058>  // b.pmore
  459120:	mov	w9, #0x1                   	// #1
  459124:	lsl	x8, x9, x8
  459128:	mov	x9, #0x1f                  	// #31
  45912c:	movk	x9, #0x1a, lsl #48
  459130:	tst	x8, x9
  459134:	b.ne	45910c <feof@plt+0x5602c>  // b.any
  459138:	cbz	x21, 459154 <feof@plt+0x56074>
  45913c:	ldr	w8, [x21, #4]
  459140:	cmp	w8, #0x1
  459144:	b.gt	459154 <feof@plt+0x56074>
  459148:	ldr	w9, [x19, #308]
  45914c:	cmp	w9, #0x401
  459150:	b.lt	459164 <feof@plt+0x56084>  // b.tstop
  459154:	mov	w8, #0x1                   	// #1
  459158:	str	w8, [x19, #304]
  45915c:	str	x23, [x19, #288]
  459160:	b	458cd4 <feof@plt+0x55bf4>
  459164:	add	w8, w8, #0x1
  459168:	str	w8, [x21, #4]
  45916c:	ldr	x8, [x19, #328]
  459170:	add	w9, w9, #0x1
  459174:	str	w9, [x19, #308]
  459178:	mov	x9, sp
  45917c:	mov	x0, x19
  459180:	mov	w1, w20
  459184:	mov	x2, x21
  459188:	stp	x21, x8, [sp]
  45918c:	str	x9, [x19, #328]
  459190:	bl	4509c8 <feof@plt+0x4d8e8>
  459194:	ldr	x8, [sp, #8]
  459198:	str	x8, [x19, #328]
  45919c:	ldr	w8, [x21, #4]
  4591a0:	sub	w8, w8, #0x1
  4591a4:	str	w8, [x21, #4]
  4591a8:	ldr	w8, [x19, #308]
  4591ac:	sub	w8, w8, #0x1
  4591b0:	str	w8, [x19, #308]
  4591b4:	b	45915c <feof@plt+0x5607c>
  4591b8:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  4591bc:	ldr	q0, [x8, #1584]
  4591c0:	str	xzr, [x0, #16]
  4591c4:	str	wzr, [x0, #24]
  4591c8:	str	q0, [x0]
  4591cc:	ret
  4591d0:	ldr	q0, [x0]
  4591d4:	mov	x0, x1
  4591d8:	str	q0, [x1]
  4591dc:	ret
  4591e0:	stp	x29, x30, [sp, #-80]!
  4591e4:	str	x25, [sp, #16]
  4591e8:	stp	x24, x23, [sp, #32]
  4591ec:	stp	x22, x21, [sp, #48]
  4591f0:	stp	x20, x19, [sp, #64]
  4591f4:	ldp	w24, w23, [x0, #20]
  4591f8:	ldr	w8, [x0, #16]
  4591fc:	mov	x19, x1
  459200:	mov	x20, x0
  459204:	mov	x29, sp
  459208:	adds	w25, w8, w23
  45920c:	str	w25, [x0, #16]
  459210:	b.cc	45921c <feof@plt+0x5613c>  // b.lo, b.ul, b.last
  459214:	add	w24, w24, #0x1
  459218:	str	w24, [x20, #20]
  45921c:	cmp	w23, #0x38
  459220:	mov	w8, #0x78                  	// #120
  459224:	mov	w9, #0x38                  	// #56
  459228:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  45922c:	add	x21, x20, #0x1c
  459230:	sub	w22, w8, w23
  459234:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  459238:	add	x0, x21, x23
  45923c:	add	x1, x1, #0x640
  459240:	mov	x2, x22
  459244:	bl	4029c0 <memcpy@plt>
  459248:	add	x9, x22, x23
  45924c:	lsl	w8, w25, #3
  459250:	extr	w10, w24, w25, #29
  459254:	add	x11, x21, x9
  459258:	add	x1, x9, #0x8
  45925c:	mov	x0, x21
  459260:	mov	x2, x20
  459264:	stp	w8, w10, [x11]
  459268:	bl	459290 <feof@plt+0x561b0>
  45926c:	ldr	q0, [x20]
  459270:	mov	x0, x19
  459274:	ldr	x25, [sp, #16]
  459278:	str	q0, [x19]
  45927c:	ldp	x20, x19, [sp, #64]
  459280:	ldp	x22, x21, [sp, #48]
  459284:	ldp	x24, x23, [sp, #32]
  459288:	ldp	x29, x30, [sp], #80
  45928c:	ret
  459290:	stp	x29, x30, [sp, #-96]!
  459294:	stp	x28, x27, [sp, #16]
  459298:	stp	x26, x25, [sp, #32]
  45929c:	stp	x24, x23, [sp, #48]
  4592a0:	stp	x22, x21, [sp, #64]
  4592a4:	stp	x20, x19, [sp, #80]
  4592a8:	ldp	w10, w13, [x2, #12]
  4592ac:	ldr	w14, [x2, #20]
  4592b0:	ldp	w8, w9, [x2]
  4592b4:	ldr	w11, [x2, #8]
  4592b8:	add	w13, w13, w1
  4592bc:	and	x12, x1, #0xfffffffffffffffc
  4592c0:	cmp	x13, x1
  4592c4:	lsr	x15, x1, #32
  4592c8:	add	x12, x0, x12
  4592cc:	str	w13, [x2, #16]
  4592d0:	cinc	w13, w15, cc  // cc = lo, ul, last
  4592d4:	add	w13, w14, w13
  4592d8:	cmp	x12, x0
  4592dc:	str	w13, [x2, #20]
  4592e0:	b.ls	459c98 <feof@plt+0x56bb8>  // b.plast
  4592e4:	mov	w22, #0xd391                	// #54161
  4592e8:	movk	w22, #0xeb86, lsl #16
  4592ec:	ldp	w29, w25, [x0]
  4592f0:	bic	w4, w10, w9
  4592f4:	and	w5, w11, w9
  4592f8:	orr	w4, w5, w4
  4592fc:	add	w4, w8, w4
  459300:	mov	w19, #0xa478                	// #42104
  459304:	add	w4, w4, w29
  459308:	movk	w19, #0xd76a, lsl #16
  45930c:	add	w4, w4, w19
  459310:	ror	w4, w4, #25
  459314:	add	w4, w4, w9
  459318:	bic	w19, w11, w4
  45931c:	and	w20, w9, w4
  459320:	add	w5, w10, w25
  459324:	orr	w19, w20, w19
  459328:	add	w5, w5, w19
  45932c:	mov	w19, #0xb756                	// #46934
  459330:	movk	w19, #0xe8c7, lsl #16
  459334:	ldp	w23, w28, [x0, #8]
  459338:	add	w5, w5, w19
  45933c:	ror	w5, w5, #20
  459340:	add	w5, w5, w4
  459344:	bic	w19, w9, w5
  459348:	and	w20, w4, w5
  45934c:	add	w6, w11, w23
  459350:	orr	w19, w20, w19
  459354:	add	w6, w6, w19
  459358:	mov	w19, #0x70db                	// #28891
  45935c:	ldp	w24, w14, [x0, #16]
  459360:	movk	w19, #0x2420, lsl #16
  459364:	add	w6, w6, w19
  459368:	ror	w6, w6, #15
  45936c:	add	w6, w6, w5
  459370:	add	w20, w24, w4
  459374:	bic	w4, w4, w6
  459378:	and	w19, w5, w6
  45937c:	add	w7, w9, w28
  459380:	orr	w4, w19, w4
  459384:	add	w4, w7, w4
  459388:	mov	w7, #0xceee                	// #52974
  45938c:	movk	w7, #0xc1bd, lsl #16
  459390:	add	w4, w4, w7
  459394:	ror	w4, w4, #10
  459398:	add	w4, w4, w6
  45939c:	add	w19, w14, w5
  4593a0:	bic	w5, w5, w4
  4593a4:	and	w7, w6, w4
  4593a8:	orr	w5, w7, w5
  4593ac:	add	w5, w20, w5
  4593b0:	mov	w20, #0xfaf                 	// #4015
  4593b4:	ldp	w27, w17, [x0, #24]
  4593b8:	movk	w20, #0xf57c, lsl #16
  4593bc:	add	w5, w5, w20
  4593c0:	ror	w5, w5, #25
  4593c4:	add	w5, w5, w4
  4593c8:	add	w7, w27, w6
  4593cc:	bic	w6, w6, w5
  4593d0:	and	w20, w4, w5
  4593d4:	orr	w6, w20, w6
  4593d8:	add	w6, w19, w6
  4593dc:	mov	w19, #0xc62a                	// #50730
  4593e0:	movk	w19, #0x4787, lsl #16
  4593e4:	add	w6, w6, w19
  4593e8:	ror	w6, w6, #20
  4593ec:	add	w6, w6, w5
  4593f0:	add	w20, w17, w4
  4593f4:	bic	w4, w4, w6
  4593f8:	and	w19, w5, w6
  4593fc:	orr	w4, w19, w4
  459400:	add	w4, w7, w4
  459404:	mov	w7, #0x4613                	// #17939
  459408:	ldp	w13, w26, [x0, #32]
  45940c:	movk	w7, #0xa830, lsl #16
  459410:	add	w4, w4, w7
  459414:	ror	w4, w4, #15
  459418:	add	w4, w4, w6
  45941c:	add	w19, w13, w5
  459420:	bic	w5, w5, w4
  459424:	and	w7, w6, w4
  459428:	orr	w5, w7, w5
  45942c:	add	w5, w20, w5
  459430:	mov	w20, #0x9501                	// #38145
  459434:	movk	w20, #0xfd46, lsl #16
  459438:	add	w5, w5, w20
  45943c:	ror	w5, w5, #10
  459440:	add	w5, w5, w4
  459444:	add	w7, w26, w6
  459448:	bic	w6, w6, w5
  45944c:	and	w20, w4, w5
  459450:	orr	w6, w20, w6
  459454:	add	w6, w19, w6
  459458:	mov	w19, #0x98d8                	// #39128
  45945c:	ldp	w16, w30, [x0, #40]
  459460:	movk	w19, #0x6980, lsl #16
  459464:	add	w6, w6, w19
  459468:	ror	w6, w6, #25
  45946c:	add	w6, w6, w5
  459470:	add	w20, w16, w4
  459474:	bic	w4, w4, w6
  459478:	and	w19, w5, w6
  45947c:	orr	w4, w19, w4
  459480:	add	w4, w7, w4
  459484:	mov	w7, #0xf7af                	// #63407
  459488:	movk	w7, #0x8b44, lsl #16
  45948c:	add	w4, w4, w7
  459490:	ror	w4, w4, #20
  459494:	add	w4, w4, w6
  459498:	add	w19, w30, w5
  45949c:	bic	w5, w5, w4
  4594a0:	and	w7, w6, w4
  4594a4:	orr	w5, w7, w5
  4594a8:	ldp	w1, w15, [x0, #48]
  4594ac:	add	w5, w20, w5
  4594b0:	mov	w20, #0xffff5bb1            	// #-42063
  4594b4:	add	w5, w5, w20
  4594b8:	ror	w5, w5, #15
  4594bc:	add	w5, w5, w4
  4594c0:	add	w7, w1, w6
  4594c4:	bic	w6, w6, w5
  4594c8:	and	w20, w4, w5
  4594cc:	orr	w6, w20, w6
  4594d0:	add	w6, w19, w6
  4594d4:	mov	w19, #0xd7be                	// #55230
  4594d8:	movk	w19, #0x895c, lsl #16
  4594dc:	add	w6, w6, w19
  4594e0:	ror	w6, w6, #10
  4594e4:	add	w6, w6, w5
  4594e8:	add	w20, w15, w4
  4594ec:	bic	w4, w4, w6
  4594f0:	and	w19, w5, w6
  4594f4:	orr	w4, w19, w4
  4594f8:	add	w4, w7, w4
  4594fc:	mov	w7, #0x1122                	// #4386
  459500:	ldp	w3, w18, [x0, #56]
  459504:	movk	w7, #0x6b90, lsl #16
  459508:	add	w4, w4, w7
  45950c:	ror	w4, w4, #25
  459510:	add	w4, w4, w6
  459514:	add	w19, w3, w5
  459518:	bic	w5, w5, w4
  45951c:	and	w7, w6, w4
  459520:	orr	w5, w7, w5
  459524:	add	w5, w20, w5
  459528:	mov	w20, #0x7193                	// #29075
  45952c:	movk	w20, #0xfd98, lsl #16
  459530:	add	w5, w5, w20
  459534:	ror	w5, w5, #20
  459538:	add	w5, w5, w4
  45953c:	add	w7, w18, w6
  459540:	bic	w6, w6, w5
  459544:	and	w20, w4, w5
  459548:	orr	w6, w20, w6
  45954c:	add	w6, w19, w6
  459550:	mov	w19, #0x438e                	// #17294
  459554:	movk	w19, #0xa679, lsl #16
  459558:	add	w6, w6, w19
  45955c:	ror	w6, w6, #15
  459560:	add	w6, w6, w5
  459564:	add	w20, w25, w4
  459568:	bic	w4, w4, w6
  45956c:	and	w19, w5, w6
  459570:	orr	w4, w19, w4
  459574:	mov	w21, #0x821                 	// #2081
  459578:	add	w4, w7, w4
  45957c:	movk	w21, #0x49b4, lsl #16
  459580:	add	w4, w4, w21
  459584:	ror	w4, w4, #10
  459588:	add	w4, w4, w6
  45958c:	add	w19, w27, w5
  459590:	bic	w7, w6, w5
  459594:	and	w5, w4, w5
  459598:	orr	w5, w5, w7
  45959c:	mov	w21, #0x2562                	// #9570
  4595a0:	add	w5, w20, w5
  4595a4:	movk	w21, #0xf61e, lsl #16
  4595a8:	add	w5, w5, w21
  4595ac:	ror	w5, w5, #27
  4595b0:	add	w5, w5, w4
  4595b4:	add	w7, w30, w6
  4595b8:	bic	w20, w4, w6
  4595bc:	and	w6, w5, w6
  4595c0:	orr	w6, w6, w20
  4595c4:	mov	w21, #0xb340                	// #45888
  4595c8:	add	w6, w19, w6
  4595cc:	movk	w21, #0xc040, lsl #16
  4595d0:	add	w6, w6, w21
  4595d4:	ror	w6, w6, #23
  4595d8:	add	w6, w6, w5
  4595dc:	add	w20, w29, w4
  4595e0:	bic	w19, w5, w4
  4595e4:	and	w4, w6, w4
  4595e8:	orr	w4, w4, w19
  4595ec:	mov	w21, #0x5a51                	// #23121
  4595f0:	add	w4, w7, w4
  4595f4:	movk	w21, #0x265e, lsl #16
  4595f8:	add	w4, w4, w21
  4595fc:	ror	w4, w4, #18
  459600:	add	w4, w4, w6
  459604:	add	w19, w14, w5
  459608:	bic	w7, w6, w5
  45960c:	and	w5, w4, w5
  459610:	orr	w5, w5, w7
  459614:	mov	w21, #0xc7aa                	// #51114
  459618:	add	w5, w20, w5
  45961c:	movk	w21, #0xe9b6, lsl #16
  459620:	add	w5, w5, w21
  459624:	ror	w5, w5, #12
  459628:	add	w5, w5, w4
  45962c:	add	w7, w16, w6
  459630:	bic	w20, w4, w6
  459634:	and	w6, w5, w6
  459638:	orr	w6, w6, w20
  45963c:	mov	w21, #0x105d                	// #4189
  459640:	add	w6, w19, w6
  459644:	movk	w21, #0xd62f, lsl #16
  459648:	add	w6, w6, w21
  45964c:	ror	w6, w6, #27
  459650:	add	w6, w6, w5
  459654:	add	w20, w18, w4
  459658:	bic	w19, w5, w4
  45965c:	and	w4, w6, w4
  459660:	orr	w4, w4, w19
  459664:	mov	w21, #0x1453                	// #5203
  459668:	add	w4, w7, w4
  45966c:	movk	w21, #0x244, lsl #16
  459670:	add	w4, w4, w21
  459674:	ror	w4, w4, #23
  459678:	add	w4, w4, w6
  45967c:	add	w19, w24, w5
  459680:	bic	w7, w6, w5
  459684:	and	w5, w4, w5
  459688:	orr	w5, w5, w7
  45968c:	mov	w21, #0xe681                	// #59009
  459690:	add	w5, w20, w5
  459694:	movk	w21, #0xd8a1, lsl #16
  459698:	add	w5, w5, w21
  45969c:	ror	w5, w5, #18
  4596a0:	add	w5, w5, w4
  4596a4:	add	w7, w26, w6
  4596a8:	bic	w20, w4, w6
  4596ac:	and	w6, w5, w6
  4596b0:	orr	w6, w6, w20
  4596b4:	mov	w21, #0xfbc8                	// #64456
  4596b8:	add	w6, w19, w6
  4596bc:	movk	w21, #0xe7d3, lsl #16
  4596c0:	add	w6, w6, w21
  4596c4:	ror	w6, w6, #12
  4596c8:	add	w6, w6, w5
  4596cc:	add	w20, w3, w4
  4596d0:	bic	w19, w5, w4
  4596d4:	and	w4, w6, w4
  4596d8:	orr	w4, w4, w19
  4596dc:	mov	w21, #0xcde6                	// #52710
  4596e0:	add	w4, w7, w4
  4596e4:	movk	w21, #0x21e1, lsl #16
  4596e8:	add	w4, w4, w21
  4596ec:	ror	w4, w4, #27
  4596f0:	add	w4, w4, w6
  4596f4:	add	w19, w28, w5
  4596f8:	bic	w7, w6, w5
  4596fc:	and	w5, w4, w5
  459700:	orr	w5, w5, w7
  459704:	mov	w21, #0x7d6                 	// #2006
  459708:	add	w5, w20, w5
  45970c:	movk	w21, #0xc337, lsl #16
  459710:	add	w5, w5, w21
  459714:	ror	w5, w5, #23
  459718:	add	w5, w5, w4
  45971c:	add	w7, w13, w6
  459720:	bic	w20, w4, w6
  459724:	and	w6, w5, w6
  459728:	orr	w6, w6, w20
  45972c:	mov	w21, #0xd87                 	// #3463
  459730:	add	w6, w19, w6
  459734:	movk	w21, #0xf4d5, lsl #16
  459738:	add	w6, w6, w21
  45973c:	ror	w6, w6, #18
  459740:	add	w6, w6, w5
  459744:	add	w20, w15, w4
  459748:	bic	w19, w5, w4
  45974c:	and	w4, w6, w4
  459750:	orr	w4, w4, w19
  459754:	mov	w21, #0x14ed                	// #5357
  459758:	add	w4, w7, w4
  45975c:	movk	w21, #0x455a, lsl #16
  459760:	add	w4, w4, w21
  459764:	ror	w4, w4, #12
  459768:	add	w4, w4, w6
  45976c:	add	w19, w23, w5
  459770:	bic	w7, w6, w5
  459774:	and	w5, w4, w5
  459778:	orr	w5, w5, w7
  45977c:	mov	w21, #0xe905                	// #59653
  459780:	add	w5, w20, w5
  459784:	movk	w21, #0xa9e3, lsl #16
  459788:	add	w5, w5, w21
  45978c:	ror	w5, w5, #27
  459790:	add	w5, w5, w4
  459794:	add	w7, w17, w6
  459798:	bic	w20, w4, w6
  45979c:	and	w6, w5, w6
  4597a0:	orr	w6, w6, w20
  4597a4:	mov	w21, #0xa3f8                	// #41976
  4597a8:	add	w6, w19, w6
  4597ac:	movk	w21, #0xfcef, lsl #16
  4597b0:	add	w6, w6, w21
  4597b4:	ror	w6, w6, #23
  4597b8:	add	w6, w6, w5
  4597bc:	add	w20, w1, w4
  4597c0:	bic	w19, w5, w4
  4597c4:	and	w4, w6, w4
  4597c8:	orr	w4, w4, w19
  4597cc:	add	w4, w7, w4
  4597d0:	mov	w7, #0x2d9                 	// #729
  4597d4:	movk	w7, #0x676f, lsl #16
  4597d8:	add	w4, w4, w7
  4597dc:	ror	w4, w4, #18
  4597e0:	add	w4, w4, w6
  4597e4:	eor	w7, w4, w6
  4597e8:	and	w19, w7, w5
  4597ec:	eor	w19, w19, w6
  4597f0:	add	w19, w20, w19
  4597f4:	mov	w20, #0x4c8a                	// #19594
  4597f8:	movk	w20, #0x8d2a, lsl #16
  4597fc:	add	w19, w19, w20
  459800:	ror	w19, w19, #12
  459804:	add	w19, w19, w4
  459808:	add	w5, w14, w5
  45980c:	eor	w7, w7, w19
  459810:	mov	w20, #0x3942                	// #14658
  459814:	add	w5, w5, w7
  459818:	movk	w20, #0xfffa, lsl #16
  45981c:	add	w5, w5, w20
  459820:	ror	w5, w5, #28
  459824:	add	w7, w30, w4
  459828:	eor	w4, w19, w4
  45982c:	add	w5, w5, w19
  459830:	add	w6, w13, w6
  459834:	eor	w4, w4, w5
  459838:	mov	w20, #0xf681                	// #63105
  45983c:	add	w4, w6, w4
  459840:	movk	w20, #0x8771, lsl #16
  459844:	add	w4, w4, w20
  459848:	ror	w4, w4, #21
  45984c:	add	w6, w3, w19
  459850:	eor	w19, w5, w19
  459854:	add	w4, w4, w5
  459858:	eor	w19, w19, w4
  45985c:	mov	w20, #0x6122                	// #24866
  459860:	add	w7, w7, w19
  459864:	movk	w20, #0x6d9d, lsl #16
  459868:	add	w7, w7, w20
  45986c:	ror	w7, w7, #16
  459870:	add	w19, w25, w5
  459874:	eor	w5, w4, w5
  459878:	add	w7, w7, w4
  45987c:	eor	w5, w5, w7
  459880:	mov	w20, #0x380c                	// #14348
  459884:	add	w5, w6, w5
  459888:	movk	w20, #0xfde5, lsl #16
  45988c:	add	w5, w5, w20
  459890:	ror	w5, w5, #9
  459894:	add	w6, w24, w4
  459898:	eor	w4, w7, w4
  45989c:	add	w5, w5, w7
  4598a0:	eor	w4, w4, w5
  4598a4:	mov	w20, #0xea44                	// #59972
  4598a8:	add	w4, w19, w4
  4598ac:	movk	w20, #0xa4be, lsl #16
  4598b0:	add	w4, w4, w20
  4598b4:	ror	w4, w4, #28
  4598b8:	add	w19, w17, w7
  4598bc:	eor	w7, w5, w7
  4598c0:	add	w4, w4, w5
  4598c4:	eor	w7, w7, w4
  4598c8:	mov	w20, #0xcfa9                	// #53161
  4598cc:	add	w6, w6, w7
  4598d0:	movk	w20, #0x4bde, lsl #16
  4598d4:	add	w6, w6, w20
  4598d8:	ror	w6, w6, #21
  4598dc:	add	w7, w16, w5
  4598e0:	eor	w5, w4, w5
  4598e4:	add	w6, w6, w4
  4598e8:	eor	w5, w5, w6
  4598ec:	mov	w20, #0x4b60                	// #19296
  4598f0:	add	w5, w19, w5
  4598f4:	movk	w20, #0xf6bb, lsl #16
  4598f8:	add	w5, w5, w20
  4598fc:	ror	w5, w5, #16
  459900:	add	w19, w15, w4
  459904:	eor	w4, w6, w4
  459908:	add	w5, w5, w6
  45990c:	eor	w4, w4, w5
  459910:	mov	w20, #0xbc70                	// #48240
  459914:	add	w4, w7, w4
  459918:	movk	w20, #0xbebf, lsl #16
  45991c:	add	w4, w4, w20
  459920:	ror	w4, w4, #9
  459924:	add	w7, w29, w6
  459928:	eor	w6, w5, w6
  45992c:	add	w4, w4, w5
  459930:	eor	w6, w6, w4
  459934:	mov	w20, #0x7ec6                	// #32454
  459938:	add	w6, w19, w6
  45993c:	movk	w20, #0x289b, lsl #16
  459940:	add	w6, w6, w20
  459944:	ror	w6, w6, #28
  459948:	add	w19, w28, w5
  45994c:	eor	w5, w4, w5
  459950:	add	w6, w6, w4
  459954:	eor	w5, w5, w6
  459958:	mov	w20, #0x27fa                	// #10234
  45995c:	add	w5, w7, w5
  459960:	movk	w20, #0xeaa1, lsl #16
  459964:	add	w5, w5, w20
  459968:	ror	w5, w5, #21
  45996c:	add	w7, w27, w4
  459970:	eor	w4, w6, w4
  459974:	add	w5, w5, w6
  459978:	eor	w4, w4, w5
  45997c:	mov	w20, #0x3085                	// #12421
  459980:	add	w4, w19, w4
  459984:	movk	w20, #0xd4ef, lsl #16
  459988:	add	w4, w4, w20
  45998c:	ror	w4, w4, #16
  459990:	add	w19, w26, w6
  459994:	eor	w6, w5, w6
  459998:	add	w4, w4, w5
  45999c:	eor	w6, w6, w4
  4599a0:	mov	w20, #0x1d05                	// #7429
  4599a4:	add	w6, w7, w6
  4599a8:	movk	w20, #0x488, lsl #16
  4599ac:	add	w6, w6, w20
  4599b0:	ror	w6, w6, #9
  4599b4:	add	w7, w1, w5
  4599b8:	eor	w5, w4, w5
  4599bc:	add	w6, w6, w4
  4599c0:	eor	w5, w5, w6
  4599c4:	mov	w20, #0xd039                	// #53305
  4599c8:	add	w5, w19, w5
  4599cc:	movk	w20, #0xd9d4, lsl #16
  4599d0:	add	w5, w5, w20
  4599d4:	ror	w5, w5, #28
  4599d8:	add	w19, w18, w4
  4599dc:	eor	w4, w6, w4
  4599e0:	add	w5, w5, w6
  4599e4:	eor	w4, w4, w5
  4599e8:	mov	w20, #0x99e5                	// #39397
  4599ec:	add	w4, w7, w4
  4599f0:	movk	w20, #0xe6db, lsl #16
  4599f4:	add	w4, w4, w20
  4599f8:	ror	w4, w4, #21
  4599fc:	eor	w7, w5, w6
  459a00:	add	w4, w4, w5
  459a04:	eor	w7, w7, w4
  459a08:	mov	w20, #0x7cf8                	// #31992
  459a0c:	add	w7, w19, w7
  459a10:	movk	w20, #0x1fa2, lsl #16
  459a14:	add	w7, w7, w20
  459a18:	ror	w7, w7, #16
  459a1c:	add	w19, w29, w5
  459a20:	eor	w5, w4, w5
  459a24:	add	w7, w7, w4
  459a28:	add	w6, w23, w6
  459a2c:	eor	w5, w5, w7
  459a30:	add	w5, w6, w5
  459a34:	mov	w6, #0x5665                	// #22117
  459a38:	movk	w6, #0xc4ac, lsl #16
  459a3c:	add	w5, w5, w6
  459a40:	ror	w5, w5, #9
  459a44:	add	w5, w5, w7
  459a48:	add	w17, w17, w4
  459a4c:	orn	w4, w5, w4
  459a50:	eor	w4, w4, w7
  459a54:	mov	w6, #0x2244                	// #8772
  459a58:	add	w4, w19, w4
  459a5c:	movk	w6, #0xf429, lsl #16
  459a60:	add	w4, w4, w6
  459a64:	ror	w4, w4, #26
  459a68:	add	w4, w4, w5
  459a6c:	orn	w6, w4, w7
  459a70:	eor	w6, w6, w5
  459a74:	add	w17, w17, w6
  459a78:	mov	w6, #0xff97                	// #65431
  459a7c:	movk	w6, #0x432a, lsl #16
  459a80:	add	w17, w17, w6
  459a84:	ror	w17, w17, #22
  459a88:	add	w17, w17, w4
  459a8c:	add	w14, w14, w5
  459a90:	orn	w5, w17, w5
  459a94:	add	w3, w3, w7
  459a98:	eor	w5, w5, w4
  459a9c:	add	w3, w3, w5
  459aa0:	mov	w5, #0x23a7                	// #9127
  459aa4:	movk	w5, #0xab94, lsl #16
  459aa8:	add	w3, w3, w5
  459aac:	ror	w3, w3, #17
  459ab0:	add	w3, w3, w17
  459ab4:	add	w1, w1, w4
  459ab8:	orn	w4, w3, w4
  459abc:	eor	w4, w4, w17
  459ac0:	mov	w5, #0xa039                	// #41017
  459ac4:	add	w14, w14, w4
  459ac8:	movk	w5, #0xfc93, lsl #16
  459acc:	add	w14, w14, w5
  459ad0:	ror	w14, w14, #11
  459ad4:	add	w14, w14, w3
  459ad8:	add	w4, w28, w17
  459adc:	orn	w17, w14, w17
  459ae0:	eor	w17, w17, w3
  459ae4:	add	w17, w1, w17
  459ae8:	mov	w1, #0x59c3                	// #22979
  459aec:	movk	w1, #0x655b, lsl #16
  459af0:	add	w17, w17, w1
  459af4:	ror	w17, w17, #26
  459af8:	add	w17, w17, w14
  459afc:	orn	w1, w17, w3
  459b00:	eor	w1, w1, w14
  459b04:	add	w1, w4, w1
  459b08:	mov	w4, #0xcc92                	// #52370
  459b0c:	movk	w4, #0x8f0c, lsl #16
  459b10:	add	w1, w1, w4
  459b14:	ror	w1, w1, #22
  459b18:	add	w1, w1, w17
  459b1c:	add	w16, w16, w3
  459b20:	add	w3, w25, w14
  459b24:	orn	w14, w1, w14
  459b28:	eor	w14, w14, w17
  459b2c:	add	w14, w16, w14
  459b30:	mov	w16, #0xf47d                	// #62589
  459b34:	movk	w16, #0xffef, lsl #16
  459b38:	add	w14, w14, w16
  459b3c:	ror	w14, w14, #17
  459b40:	add	w14, w14, w1
  459b44:	orn	w16, w14, w17
  459b48:	add	w13, w13, w17
  459b4c:	eor	w16, w16, w1
  459b50:	add	w17, w18, w1
  459b54:	mov	w18, #0x5dd1                	// #24017
  459b58:	add	w16, w3, w16
  459b5c:	movk	w18, #0x8584, lsl #16
  459b60:	add	w16, w16, w18
  459b64:	ror	w16, w16, #11
  459b68:	add	w16, w16, w14
  459b6c:	orn	w18, w16, w1
  459b70:	eor	w18, w18, w14
  459b74:	mov	w1, #0x7e4f                	// #32335
  459b78:	add	w13, w13, w18
  459b7c:	movk	w1, #0x6fa8, lsl #16
  459b80:	add	w13, w13, w1
  459b84:	ror	w13, w13, #26
  459b88:	add	w13, w13, w16
  459b8c:	add	w18, w27, w14
  459b90:	orn	w14, w13, w14
  459b94:	eor	w14, w14, w16
  459b98:	add	w14, w17, w14
  459b9c:	mov	w17, #0xe6e0                	// #59104
  459ba0:	movk	w17, #0xfe2c, lsl #16
  459ba4:	add	w14, w14, w17
  459ba8:	ror	w14, w14, #22
  459bac:	add	w14, w14, w13
  459bb0:	add	w15, w15, w16
  459bb4:	orn	w16, w14, w16
  459bb8:	eor	w16, w16, w13
  459bbc:	add	w16, w18, w16
  459bc0:	mov	w18, #0x4314                	// #17172
  459bc4:	movk	w18, #0xa301, lsl #16
  459bc8:	add	w16, w16, w18
  459bcc:	ror	w16, w16, #17
  459bd0:	add	w16, w16, w14
  459bd4:	add	w17, w24, w13
  459bd8:	orn	w13, w16, w13
  459bdc:	eor	w13, w13, w14
  459be0:	mov	w18, #0x11a1                	// #4513
  459be4:	add	w13, w15, w13
  459be8:	movk	w18, #0x4e08, lsl #16
  459bec:	add	w13, w13, w18
  459bf0:	ror	w13, w13, #11
  459bf4:	add	w13, w13, w16
  459bf8:	add	w15, w30, w14
  459bfc:	orn	w14, w13, w14
  459c00:	eor	w14, w14, w16
  459c04:	mov	w18, #0x7e82                	// #32386
  459c08:	add	w14, w17, w14
  459c0c:	movk	w18, #0xf753, lsl #16
  459c10:	add	w14, w14, w18
  459c14:	ror	w14, w14, #26
  459c18:	add	w14, w14, w13
  459c1c:	add	w17, w23, w16
  459c20:	orn	w16, w14, w16
  459c24:	eor	w16, w16, w13
  459c28:	mov	w18, #0xf235                	// #62005
  459c2c:	add	w15, w15, w16
  459c30:	movk	w18, #0xbd3a, lsl #16
  459c34:	add	w15, w15, w18
  459c38:	ror	w15, w15, #22
  459c3c:	add	w15, w15, w14
  459c40:	add	w16, w26, w13
  459c44:	orn	w13, w15, w13
  459c48:	eor	w13, w13, w14
  459c4c:	add	w13, w17, w13
  459c50:	mov	w17, #0xd2bb                	// #53947
  459c54:	movk	w17, #0x2ad7, lsl #16
  459c58:	add	w13, w13, w17
  459c5c:	ror	w13, w13, #17
  459c60:	add	w13, w13, w15
  459c64:	add	w8, w14, w8
  459c68:	orn	w14, w13, w14
  459c6c:	add	w9, w13, w9
  459c70:	add	w11, w13, w11
  459c74:	eor	w13, w14, w15
  459c78:	add	w13, w16, w13
  459c7c:	add	w13, w13, w22
  459c80:	ror	w13, w13, #11
  459c84:	add	x0, x0, #0x40
  459c88:	add	w9, w9, w13
  459c8c:	cmp	x0, x12
  459c90:	add	w10, w15, w10
  459c94:	b.cc	4592ec <feof@plt+0x5620c>  // b.lo, b.ul, b.last
  459c98:	stp	w8, w9, [x2]
  459c9c:	stp	w11, w10, [x2, #8]
  459ca0:	ldp	x20, x19, [sp, #80]
  459ca4:	ldp	x22, x21, [sp, #64]
  459ca8:	ldp	x24, x23, [sp, #48]
  459cac:	ldp	x26, x25, [sp, #32]
  459cb0:	ldp	x28, x27, [sp, #16]
  459cb4:	ldp	x29, x30, [sp], #96
  459cb8:	ret
  459cbc:	stp	x29, x30, [sp, #-80]!
  459cc0:	stp	x28, x25, [sp, #16]
  459cc4:	stp	x24, x23, [sp, #32]
  459cc8:	stp	x22, x21, [sp, #48]
  459ccc:	stp	x20, x19, [sp, #64]
  459cd0:	mov	x29, sp
  459cd4:	sub	sp, sp, #0x1, lsl #12
  459cd8:	sub	sp, sp, #0xf0
  459cdc:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  459ce0:	ldr	q0, [x8, #1584]
  459ce4:	mov	x19, x1
  459ce8:	mov	x21, x0
  459cec:	mov	x20, xzr
  459cf0:	sub	x22, x29, #0xa0
  459cf4:	add	x23, sp, #0x8
  459cf8:	mov	w24, #0x1000                	// #4096
  459cfc:	str	q0, [x22]
  459d00:	stur	xzr, [x29, #-144]
  459d04:	stur	wzr, [x29, #-136]
  459d08:	add	x0, x23, x20
  459d0c:	sub	x2, x24, x20
  459d10:	mov	w1, #0x1                   	// #1
  459d14:	mov	x3, x21
  459d18:	bl	4029d0 <fread@plt>
  459d1c:	add	x20, x0, x20
  459d20:	cbz	x0, 459d2c <feof@plt+0x56c4c>
  459d24:	cmp	x20, #0x1, lsl #12
  459d28:	b.cc	459d08 <feof@plt+0x56c28>  // b.lo, b.ul, b.last
  459d2c:	cbz	x0, 459d48 <feof@plt+0x56c68>
  459d30:	add	x0, sp, #0x8
  459d34:	sub	x2, x29, #0xa0
  459d38:	mov	w1, #0x1000                	// #4096
  459d3c:	bl	459290 <feof@plt+0x561b0>
  459d40:	mov	x20, xzr
  459d44:	b	459d08 <feof@plt+0x56c28>
  459d48:	mov	x0, x21
  459d4c:	bl	403000 <ferror@plt>
  459d50:	cbz	w0, 459d5c <feof@plt+0x56c7c>
  459d54:	mov	w0, #0x1                   	// #1
  459d58:	b	459dec <feof@plt+0x56d0c>
  459d5c:	cbz	x20, 459d70 <feof@plt+0x56c90>
  459d60:	add	x0, sp, #0x8
  459d64:	sub	x2, x29, #0xa0
  459d68:	mov	x1, x20
  459d6c:	bl	459e0c <feof@plt+0x56d2c>
  459d70:	ldp	w24, w23, [x29, #-140]
  459d74:	ldur	w8, [x29, #-144]
  459d78:	adds	w25, w8, w23
  459d7c:	stur	w25, [x29, #-144]
  459d80:	b.cc	459d8c <feof@plt+0x56cac>  // b.lo, b.ul, b.last
  459d84:	add	w24, w24, #0x1
  459d88:	stur	w24, [x29, #-140]
  459d8c:	cmp	w23, #0x38
  459d90:	mov	w8, #0x78                  	// #120
  459d94:	mov	w9, #0x38                  	// #56
  459d98:	sub	x10, x29, #0xa0
  459d9c:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  459da0:	add	x20, x10, #0x1c
  459da4:	sub	w21, w8, w23
  459da8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  459dac:	add	x0, x20, x23
  459db0:	add	x1, x1, #0x640
  459db4:	mov	x2, x21
  459db8:	bl	4029c0 <memcpy@plt>
  459dbc:	add	x9, x21, x23
  459dc0:	lsl	w8, w25, #3
  459dc4:	extr	w10, w24, w25, #29
  459dc8:	add	x11, x20, x9
  459dcc:	add	x1, x9, #0x8
  459dd0:	sub	x2, x29, #0xa0
  459dd4:	mov	x0, x20
  459dd8:	stp	w8, w10, [x11]
  459ddc:	bl	459290 <feof@plt+0x561b0>
  459de0:	ldr	q0, [x22]
  459de4:	mov	w0, wzr
  459de8:	str	q0, [x19]
  459dec:	add	sp, sp, #0x1, lsl #12
  459df0:	add	sp, sp, #0xf0
  459df4:	ldp	x20, x19, [sp, #64]
  459df8:	ldp	x22, x21, [sp, #48]
  459dfc:	ldp	x24, x23, [sp, #32]
  459e00:	ldp	x28, x25, [sp, #16]
  459e04:	ldp	x29, x30, [sp], #80
  459e08:	ret
  459e0c:	stp	x29, x30, [sp, #-80]!
  459e10:	stp	x24, x23, [sp, #32]
  459e14:	stp	x22, x21, [sp, #48]
  459e18:	stp	x20, x19, [sp, #64]
  459e1c:	ldr	w23, [x2, #24]
  459e20:	mov	x19, x2
  459e24:	mov	x20, x1
  459e28:	mov	x21, x0
  459e2c:	str	x25, [sp, #16]
  459e30:	mov	x29, sp
  459e34:	cbz	w23, 459ea8 <feof@plt+0x56dc8>
  459e38:	mov	w8, #0x80                  	// #128
  459e3c:	sub	x8, x8, x23
  459e40:	cmp	x8, x20
  459e44:	add	x9, x19, x23
  459e48:	csel	x22, x20, x8, hi  // hi = pmore
  459e4c:	add	x0, x9, #0x1c
  459e50:	mov	x1, x21
  459e54:	mov	x2, x22
  459e58:	bl	4029c0 <memcpy@plt>
  459e5c:	add	x25, x22, x23
  459e60:	add	w8, w23, w22
  459e64:	cmp	x25, #0x41
  459e68:	str	w8, [x19, #24]
  459e6c:	b.cc	459ea0 <feof@plt+0x56dc0>  // b.lo, b.ul, b.last
  459e70:	add	x23, x19, #0x1c
  459e74:	and	x24, x25, #0xffffffffffffffc0
  459e78:	mov	x0, x23
  459e7c:	mov	x1, x24
  459e80:	mov	x2, x19
  459e84:	bl	459290 <feof@plt+0x561b0>
  459e88:	add	x1, x23, x24
  459e8c:	and	x24, x25, #0x3f
  459e90:	mov	x0, x23
  459e94:	mov	x2, x24
  459e98:	bl	4029c0 <memcpy@plt>
  459e9c:	str	w24, [x19, #24]
  459ea0:	add	x21, x21, x22
  459ea4:	sub	x20, x20, x22
  459ea8:	subs	x8, x20, #0x41
  459eac:	b.cc	459ef8 <feof@plt+0x56e18>  // b.lo, b.ul, b.last
  459eb0:	tst	x21, #0x3
  459eb4:	b.eq	459f28 <feof@plt+0x56e48>  // b.none
  459eb8:	add	x22, x19, #0x1c
  459ebc:	and	x23, x8, #0xffffffffffffffc0
  459ec0:	mov	x24, x20
  459ec4:	ldp	q1, q0, [x21, #32]
  459ec8:	ldp	q3, q2, [x21], #64
  459ecc:	mov	w1, #0x40                  	// #64
  459ed0:	mov	x0, x22
  459ed4:	mov	x2, x19
  459ed8:	stp	q1, q0, [x22, #32]
  459edc:	stp	q3, q2, [x22]
  459ee0:	bl	459290 <feof@plt+0x561b0>
  459ee4:	sub	x24, x24, #0x40
  459ee8:	cmp	x24, #0x40
  459eec:	b.hi	459ec4 <feof@plt+0x56de4>  // b.pmore
  459ef0:	sub	x8, x20, x23
  459ef4:	sub	x20, x8, #0x40
  459ef8:	cbz	x20, 459f10 <feof@plt+0x56e30>
  459efc:	add	x0, x19, #0x1c
  459f00:	mov	x1, x21
  459f04:	mov	x2, x20
  459f08:	bl	4029c0 <memcpy@plt>
  459f0c:	str	w20, [x19, #24]
  459f10:	ldp	x20, x19, [sp, #64]
  459f14:	ldp	x22, x21, [sp, #48]
  459f18:	ldp	x24, x23, [sp, #32]
  459f1c:	ldr	x25, [sp, #16]
  459f20:	ldp	x29, x30, [sp], #80
  459f24:	ret
  459f28:	and	x22, x20, #0xffffffffffffffc0
  459f2c:	mov	x0, x21
  459f30:	mov	x1, x22
  459f34:	mov	x2, x19
  459f38:	bl	459290 <feof@plt+0x561b0>
  459f3c:	add	x21, x21, x22
  459f40:	and	x20, x20, #0x3f
  459f44:	cbnz	x20, 459efc <feof@plt+0x56e1c>
  459f48:	b	459f10 <feof@plt+0x56e30>
  459f4c:	sub	sp, sp, #0xe0
  459f50:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  459f54:	ldr	q0, [x8, #1584]
  459f58:	stp	x20, x19, [sp, #208]
  459f5c:	mov	x19, x2
  459f60:	mov	x2, sp
  459f64:	stp	x29, x30, [sp, #160]
  459f68:	stp	x24, x23, [sp, #176]
  459f6c:	stp	x22, x21, [sp, #192]
  459f70:	add	x29, sp, #0xa0
  459f74:	str	xzr, [sp, #16]
  459f78:	str	q0, [sp]
  459f7c:	str	wzr, [sp, #24]
  459f80:	mov	x20, sp
  459f84:	bl	459e0c <feof@plt+0x56d2c>
  459f88:	ldp	w23, w22, [sp, #20]
  459f8c:	ldr	w8, [sp, #16]
  459f90:	adds	w24, w8, w22
  459f94:	str	w24, [sp, #16]
  459f98:	b.cc	459fa4 <feof@plt+0x56ec4>  // b.lo, b.ul, b.last
  459f9c:	add	w23, w23, #0x1
  459fa0:	str	w23, [sp, #20]
  459fa4:	cmp	w22, #0x38
  459fa8:	mov	w8, #0x78                  	// #120
  459fac:	mov	w9, #0x38                  	// #56
  459fb0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  459fb4:	add	x20, x20, #0x1c
  459fb8:	sub	w21, w8, w22
  459fbc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  459fc0:	add	x0, x20, x22
  459fc4:	add	x1, x1, #0x640
  459fc8:	mov	x2, x21
  459fcc:	bl	4029c0 <memcpy@plt>
  459fd0:	add	x9, x21, x22
  459fd4:	lsl	w8, w24, #3
  459fd8:	extr	w10, w23, w24, #29
  459fdc:	add	x11, x20, x9
  459fe0:	add	x1, x9, #0x8
  459fe4:	mov	x2, sp
  459fe8:	mov	x0, x20
  459fec:	stp	w8, w10, [x11]
  459ff0:	bl	459290 <feof@plt+0x561b0>
  459ff4:	ldr	q0, [sp]
  459ff8:	mov	x0, x19
  459ffc:	str	q0, [x19]
  45a000:	ldp	x20, x19, [sp, #208]
  45a004:	ldp	x22, x21, [sp, #192]
  45a008:	ldp	x24, x23, [sp, #176]
  45a00c:	ldp	x29, x30, [sp, #160]
  45a010:	add	sp, sp, #0xe0
  45a014:	ret
  45a018:	stp	x29, x30, [sp, #-48]!
  45a01c:	str	x21, [sp, #16]
  45a020:	stp	x20, x19, [sp, #32]
  45a024:	mov	x29, sp
  45a028:	cbz	x0, 45a084 <feof@plt+0x56fa4>
  45a02c:	mov	x20, x0
  45a030:	mov	x8, xzr
  45a034:	ldr	x9, [x20, x8]
  45a038:	add	x8, x8, #0x8
  45a03c:	cbnz	x9, 45a034 <feof@plt+0x56f54>
  45a040:	and	x0, x8, #0x7fffffff8
  45a044:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a048:	ldr	x8, [x20]
  45a04c:	mov	x19, x0
  45a050:	cbz	x8, 45a07c <feof@plt+0x56f9c>
  45a054:	mov	x21, xzr
  45a058:	add	x20, x20, #0x8
  45a05c:	mov	x0, x8
  45a060:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  45a064:	lsl	x8, x21, #3
  45a068:	str	x0, [x19, x8]
  45a06c:	ldr	x8, [x20, x8]
  45a070:	add	x21, x21, #0x1
  45a074:	cbnz	x8, 45a05c <feof@plt+0x56f7c>
  45a078:	and	x8, x21, #0xffffffff
  45a07c:	str	xzr, [x19, x8, lsl #3]
  45a080:	b	45a088 <feof@plt+0x56fa8>
  45a084:	mov	x19, xzr
  45a088:	mov	x0, x19
  45a08c:	ldp	x20, x19, [sp, #32]
  45a090:	ldr	x21, [sp, #16]
  45a094:	ldp	x29, x30, [sp], #48
  45a098:	ret
  45a09c:	cbz	x0, 45a0d8 <feof@plt+0x56ff8>
  45a0a0:	stp	x29, x30, [sp, #-32]!
  45a0a4:	stp	x20, x19, [sp, #16]
  45a0a8:	mov	x19, x0
  45a0ac:	ldr	x0, [x0]
  45a0b0:	mov	x29, sp
  45a0b4:	cbz	x0, 45a0c8 <feof@plt+0x56fe8>
  45a0b8:	add	x20, x19, #0x8
  45a0bc:	bl	402b20 <free@plt>
  45a0c0:	ldr	x0, [x20], #8
  45a0c4:	cbnz	x0, 45a0bc <feof@plt+0x56fdc>
  45a0c8:	mov	x0, x19
  45a0cc:	ldp	x20, x19, [sp, #16]
  45a0d0:	ldp	x29, x30, [sp], #32
  45a0d4:	b	402b20 <free@plt>
  45a0d8:	ret
  45a0dc:	stp	x29, x30, [sp, #-96]!
  45a0e0:	str	x27, [sp, #16]
  45a0e4:	stp	x26, x25, [sp, #32]
  45a0e8:	stp	x24, x23, [sp, #48]
  45a0ec:	stp	x22, x21, [sp, #64]
  45a0f0:	stp	x20, x19, [sp, #80]
  45a0f4:	mov	x29, sp
  45a0f8:	cbz	x0, 45a2a0 <feof@plt+0x571c0>
  45a0fc:	mov	x19, x0
  45a100:	bl	402a50 <strlen@plt>
  45a104:	add	x0, x0, #0x1
  45a108:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a10c:	ldrb	w8, [x19]
  45a110:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45a114:	mov	x20, x0
  45a118:	mov	x22, xzr
  45a11c:	mov	w26, wzr
  45a120:	mov	w25, wzr
  45a124:	mov	w27, wzr
  45a128:	mov	w24, wzr
  45a12c:	mov	x21, xzr
  45a130:	add	x23, x23, #0xe98
  45a134:	b	45a13c <feof@plt+0x5705c>
  45a138:	cbz	w8, 45a294 <feof@plt+0x571b4>
  45a13c:	and	x9, x8, #0xff
  45a140:	ldrh	w9, [x23, x9, lsl #1]
  45a144:	tbz	w9, #6, 45a154 <feof@plt+0x57074>
  45a148:	ldrb	w8, [x19, #1]!
  45a14c:	ldrh	w9, [x23, x8, lsl #1]
  45a150:	tbnz	w9, #6, 45a148 <feof@plt+0x57068>
  45a154:	subs	w9, w24, #0x1
  45a158:	b.cc	45a168 <feof@plt+0x57088>  // b.lo, b.ul, b.last
  45a15c:	sxtw	x9, w9
  45a160:	cmp	x22, x9
  45a164:	b.lt	45a19c <feof@plt+0x570bc>  // b.tstop
  45a168:	cbz	x21, 45a184 <feof@plt+0x570a4>
  45a16c:	lsl	w24, w24, #1
  45a170:	sbfiz	x1, x24, #3, #32
  45a174:	mov	x0, x21
  45a178:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45a17c:	mov	x21, x0
  45a180:	b	45a194 <feof@plt+0x570b4>
  45a184:	mov	w0, #0x40                  	// #64
  45a188:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a18c:	mov	x21, x0
  45a190:	mov	w24, #0x8                   	// #8
  45a194:	str	xzr, [x21, x22, lsl #3]
  45a198:	ldrb	w8, [x19]
  45a19c:	mov	x9, x20
  45a1a0:	tst	w8, #0xff
  45a1a4:	b.ne	45a1f4 <feof@plt+0x57114>  // b.any
  45a1a8:	mov	x0, x20
  45a1ac:	strb	wzr, [x9]
  45a1b0:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  45a1b4:	str	x0, [x21, x22, lsl #3]
  45a1b8:	add	x22, x22, #0x1
  45a1bc:	str	xzr, [x21, x22, lsl #3]
  45a1c0:	ldrb	w8, [x19]
  45a1c4:	ldrh	w9, [x23, x8, lsl #1]
  45a1c8:	tbz	w9, #6, 45a138 <feof@plt+0x57058>
  45a1cc:	ldrb	w8, [x19, #1]!
  45a1d0:	ldrh	w9, [x23, x8, lsl #1]
  45a1d4:	tbnz	w9, #6, 45a1cc <feof@plt+0x570ec>
  45a1d8:	b	45a138 <feof@plt+0x57058>
  45a1dc:	mov	w26, wzr
  45a1e0:	mov	w25, wzr
  45a1e4:	mov	w27, wzr
  45a1e8:	strb	w8, [x9], #1
  45a1ec:	ldrb	w8, [x19, #1]!
  45a1f0:	cbz	w8, 45a1a8 <feof@plt+0x570c8>
  45a1f4:	orr	w10, w25, w26
  45a1f8:	orr	w10, w10, w27
  45a1fc:	cbnz	w10, 45a20c <feof@plt+0x5712c>
  45a200:	and	x10, x8, #0xff
  45a204:	ldrh	w10, [x23, x10, lsl #1]
  45a208:	tbnz	w10, #6, 45a1a8 <feof@plt+0x570c8>
  45a20c:	cbnz	w27, 45a1e4 <feof@plt+0x57104>
  45a210:	and	w10, w8, #0xff
  45a214:	cmp	w10, #0x5c
  45a218:	b.ne	45a224 <feof@plt+0x57144>  // b.any
  45a21c:	mov	w27, #0x1                   	// #1
  45a220:	b	45a1ec <feof@plt+0x5710c>
  45a224:	and	w10, w8, #0xff
  45a228:	cbnz	w26, 45a250 <feof@plt+0x57170>
  45a22c:	cbnz	w25, 45a264 <feof@plt+0x57184>
  45a230:	cmp	w10, #0x27
  45a234:	b.eq	45a27c <feof@plt+0x5719c>  // b.none
  45a238:	cmp	w10, #0x22
  45a23c:	b.ne	45a1dc <feof@plt+0x570fc>  // b.any
  45a240:	mov	w26, wzr
  45a244:	mov	w27, wzr
  45a248:	mov	w25, #0x1                   	// #1
  45a24c:	b	45a1ec <feof@plt+0x5710c>
  45a250:	cmp	w10, #0x27
  45a254:	b.ne	45a1e4 <feof@plt+0x57104>  // b.any
  45a258:	mov	w26, wzr
  45a25c:	mov	w27, wzr
  45a260:	b	45a1ec <feof@plt+0x5710c>
  45a264:	cmp	w10, #0x22
  45a268:	b.ne	45a28c <feof@plt+0x571ac>  // b.any
  45a26c:	mov	w26, wzr
  45a270:	mov	w25, wzr
  45a274:	mov	w27, wzr
  45a278:	b	45a1ec <feof@plt+0x5710c>
  45a27c:	mov	w25, wzr
  45a280:	mov	w27, wzr
  45a284:	mov	w26, #0x1                   	// #1
  45a288:	b	45a1ec <feof@plt+0x5710c>
  45a28c:	mov	w26, wzr
  45a290:	b	45a1e4 <feof@plt+0x57104>
  45a294:	mov	x0, x20
  45a298:	bl	402b20 <free@plt>
  45a29c:	b	45a2a4 <feof@plt+0x571c4>
  45a2a0:	mov	x21, xzr
  45a2a4:	mov	x0, x21
  45a2a8:	ldp	x20, x19, [sp, #80]
  45a2ac:	ldp	x22, x21, [sp, #64]
  45a2b0:	ldp	x24, x23, [sp, #48]
  45a2b4:	ldp	x26, x25, [sp, #32]
  45a2b8:	ldr	x27, [sp, #16]
  45a2bc:	ldp	x29, x30, [sp], #96
  45a2c0:	ret
  45a2c4:	stp	x29, x30, [sp, #-80]!
  45a2c8:	str	x25, [sp, #16]
  45a2cc:	stp	x24, x23, [sp, #32]
  45a2d0:	stp	x22, x21, [sp, #48]
  45a2d4:	stp	x20, x19, [sp, #64]
  45a2d8:	mov	x29, sp
  45a2dc:	cbz	x1, 45a37c <feof@plt+0x5729c>
  45a2e0:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  45a2e4:	mov	x24, #0x21                  	// #33
  45a2e8:	mov	x19, x1
  45a2ec:	mov	x20, x0
  45a2f0:	add	x22, x22, #0xe98
  45a2f4:	mov	w23, #0x1                   	// #1
  45a2f8:	movk	x24, #0x400, lsl #48
  45a2fc:	ldr	x25, [x20]
  45a300:	cbz	x25, 45a398 <feof@plt+0x572b8>
  45a304:	ldrb	w21, [x25]
  45a308:	cbz	w21, 45a35c <feof@plt+0x5727c>
  45a30c:	ldrh	w8, [x22, x21, lsl #1]
  45a310:	tbnz	w8, #6, 45a32c <feof@plt+0x5724c>
  45a314:	sub	w8, w21, #0x22
  45a318:	cmp	w8, #0x3a
  45a31c:	b.hi	45a340 <feof@plt+0x57260>  // b.pmore
  45a320:	lsl	x8, x23, x8
  45a324:	tst	x8, x24
  45a328:	b.eq	45a340 <feof@plt+0x57260>  // b.none
  45a32c:	mov	w0, #0x5c                  	// #92
  45a330:	mov	x1, x19
  45a334:	bl	402d60 <fputc@plt>
  45a338:	cmn	w0, #0x1
  45a33c:	b.eq	45a37c <feof@plt+0x5729c>  // b.none
  45a340:	mov	w0, w21
  45a344:	mov	x1, x19
  45a348:	bl	402d60 <fputc@plt>
  45a34c:	cmn	w0, #0x1
  45a350:	add	x25, x25, #0x1
  45a354:	b.ne	45a304 <feof@plt+0x57224>  // b.any
  45a358:	b	45a37c <feof@plt+0x5729c>
  45a35c:	mov	w0, #0xa                   	// #10
  45a360:	mov	x1, x19
  45a364:	bl	402d60 <fputc@plt>
  45a368:	add	x20, x20, #0x8
  45a36c:	cmn	w0, #0x1
  45a370:	mov	w0, #0x1                   	// #1
  45a374:	b.ne	45a2fc <feof@plt+0x5721c>  // b.any
  45a378:	b	45a380 <feof@plt+0x572a0>
  45a37c:	mov	w0, #0x1                   	// #1
  45a380:	ldp	x20, x19, [sp, #64]
  45a384:	ldp	x22, x21, [sp, #48]
  45a388:	ldp	x24, x23, [sp, #32]
  45a38c:	ldr	x25, [sp, #16]
  45a390:	ldp	x29, x30, [sp], #80
  45a394:	ret
  45a398:	mov	w0, wzr
  45a39c:	b	45a380 <feof@plt+0x572a0>
  45a3a0:	sub	sp, sp, #0x100
  45a3a4:	stp	x29, x30, [sp, #160]
  45a3a8:	stp	x28, x27, [sp, #176]
  45a3ac:	stp	x26, x25, [sp, #192]
  45a3b0:	stp	x24, x23, [sp, #208]
  45a3b4:	stp	x22, x21, [sp, #224]
  45a3b8:	stp	x20, x19, [sp, #240]
  45a3bc:	ldr	w8, [x0]
  45a3c0:	add	x29, sp, #0xa0
  45a3c4:	cmp	w8, #0x2
  45a3c8:	b.lt	45a650 <feof@plt+0x57570>  // b.tstop
  45a3cc:	ldr	x8, [x1]
  45a3d0:	adrp	x26, 463000 <_obstack_memory_used@@Base+0x1838>
  45a3d4:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45a3d8:	mov	x20, x0
  45a3dc:	mov	x19, x1
  45a3e0:	mov	w28, wzr
  45a3e4:	mov	w27, #0x7d0                 	// #2000
  45a3e8:	mov	w21, #0x1                   	// #1
  45a3ec:	add	x26, x26, #0xf4c
  45a3f0:	add	x25, x8, #0x8
  45a3f4:	add	x23, x23, #0xe98
  45a3f8:	stp	x25, x8, [sp, #8]
  45a3fc:	ldr	x9, [x8, w21, sxtw #3]
  45a400:	ldrb	w10, [x9]
  45a404:	cmp	w10, #0x40
  45a408:	b.ne	45a4d4 <feof@plt+0x573f4>  // b.any
  45a40c:	subs	w27, w27, #0x1
  45a410:	b.eq	45a670 <feof@plt+0x57590>  // b.none
  45a414:	add	x22, x9, #0x1
  45a418:	add	x2, sp, #0x20
  45a41c:	mov	w0, wzr
  45a420:	mov	x1, x22
  45a424:	bl	402ef0 <__xstat@plt>
  45a428:	tbnz	w0, #31, 45a4d4 <feof@plt+0x573f4>
  45a42c:	ldr	w8, [sp, #48]
  45a430:	and	w8, w8, #0xf000
  45a434:	cmp	w8, #0x4, lsl #12
  45a438:	b.eq	45a688 <feof@plt+0x575a8>  // b.none
  45a43c:	mov	x0, x22
  45a440:	mov	x1, x26
  45a444:	bl	402eb0 <fopen@plt>
  45a448:	cbz	x0, 45a4d4 <feof@plt+0x573f4>
  45a44c:	mov	w2, #0x2                   	// #2
  45a450:	mov	x1, xzr
  45a454:	mov	x22, x0
  45a458:	bl	4030b0 <fseek@plt>
  45a45c:	cmn	w0, #0x1
  45a460:	b.eq	45a4c4 <feof@plt+0x573e4>  // b.none
  45a464:	mov	x0, x22
  45a468:	bl	402a90 <ftell@plt>
  45a46c:	cmn	x0, #0x1
  45a470:	b.eq	45a4c4 <feof@plt+0x573e4>  // b.none
  45a474:	mov	x24, x0
  45a478:	mov	x0, x22
  45a47c:	mov	x1, xzr
  45a480:	mov	w2, wzr
  45a484:	bl	4030b0 <fseek@plt>
  45a488:	cmn	w0, #0x1
  45a48c:	b.eq	45a4c4 <feof@plt+0x573e4>  // b.none
  45a490:	add	x0, x24, #0x1
  45a494:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a498:	mov	w1, #0x1                   	// #1
  45a49c:	mov	x2, x24
  45a4a0:	mov	x3, x22
  45a4a4:	str	x0, [sp, #24]
  45a4a8:	bl	402b30 <fread_unlocked@plt>
  45a4ac:	mov	x25, x0
  45a4b0:	cmp	x0, x24
  45a4b4:	b.eq	45a4f0 <feof@plt+0x57410>  // b.none
  45a4b8:	mov	x0, x22
  45a4bc:	bl	403000 <ferror@plt>
  45a4c0:	cbz	w0, 45a4f0 <feof@plt+0x57410>
  45a4c4:	mov	w28, w21
  45a4c8:	mov	x0, x22
  45a4cc:	bl	402ae0 <fclose@plt>
  45a4d0:	b	45a4d8 <feof@plt+0x573f8>
  45a4d4:	mov	w28, w21
  45a4d8:	ldr	w8, [x20]
  45a4dc:	add	w21, w28, #0x1
  45a4e0:	cmp	w21, w8
  45a4e4:	b.ge	45a650 <feof@plt+0x57570>  // b.tcont
  45a4e8:	ldr	x8, [x19]
  45a4ec:	b	45a3fc <feof@plt+0x5731c>
  45a4f0:	ldr	x0, [sp, #24]
  45a4f4:	strb	wzr, [x0, x25]
  45a4f8:	ldrb	w8, [x0]
  45a4fc:	cbz	w8, 45a51c <feof@plt+0x5743c>
  45a500:	mov	w9, #0x1                   	// #1
  45a504:	and	x8, x8, #0xff
  45a508:	ldrh	w8, [x23, x8, lsl #1]
  45a50c:	tbz	w8, #6, 45a530 <feof@plt+0x57450>
  45a510:	ldrb	w8, [x0, x9]
  45a514:	add	x9, x9, #0x1
  45a518:	cbnz	w8, 45a504 <feof@plt+0x57424>
  45a51c:	mov	w0, #0x8                   	// #8
  45a520:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a524:	mov	x24, x0
  45a528:	str	xzr, [x0]
  45a52c:	b	45a538 <feof@plt+0x57458>
  45a530:	bl	45a0dc <feof@plt+0x56ffc>
  45a534:	mov	x24, x0
  45a538:	ldr	x25, [x19]
  45a53c:	ldr	x23, [sp, #16]
  45a540:	cmp	x25, x23
  45a544:	b.ne	45a5a8 <feof@plt+0x574c8>  // b.any
  45a548:	cbz	x23, 45a5a0 <feof@plt+0x574c0>
  45a54c:	mov	x8, xzr
  45a550:	ldr	x9, [x23, x8]
  45a554:	add	x8, x8, #0x8
  45a558:	cbnz	x9, 45a550 <feof@plt+0x57470>
  45a55c:	and	x0, x8, #0x7fffffff8
  45a560:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a564:	ldr	x8, [x23]
  45a568:	mov	x25, x0
  45a56c:	cbz	x8, 45a598 <feof@plt+0x574b8>
  45a570:	ldr	x23, [sp, #8]
  45a574:	mov	x26, xzr
  45a578:	mov	x0, x8
  45a57c:	bl	4622e8 <_obstack_memory_used@@Base+0xb20>
  45a580:	lsl	x8, x26, #3
  45a584:	str	x0, [x25, x8]
  45a588:	ldr	x8, [x23, x8]
  45a58c:	add	x26, x26, #0x1
  45a590:	cbnz	x8, 45a578 <feof@plt+0x57498>
  45a594:	and	x8, x26, #0xffffffff
  45a598:	str	xzr, [x25, x8, lsl #3]
  45a59c:	b	45a5a4 <feof@plt+0x574c4>
  45a5a0:	mov	x25, xzr
  45a5a4:	str	x25, [x19]
  45a5a8:	mov	x9, xzr
  45a5ac:	sxtw	x8, w21
  45a5b0:	ldr	x10, [x24, x9, lsl #3]
  45a5b4:	mov	x26, x9
  45a5b8:	add	x9, x9, #0x1
  45a5bc:	cbnz	x10, 45a5b0 <feof@plt+0x574d0>
  45a5c0:	lsl	x23, x8, #3
  45a5c4:	ldr	x0, [x25, x23]
  45a5c8:	bl	402b20 <free@plt>
  45a5cc:	ldrsw	x8, [x20]
  45a5d0:	ldr	x0, [x19]
  45a5d4:	add	x8, x26, x8
  45a5d8:	lsl	x8, x8, #3
  45a5dc:	add	x1, x8, #0x8
  45a5e0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45a5e4:	str	x0, [x19]
  45a5e8:	ldr	w9, [x20]
  45a5ec:	add	x8, x0, x23
  45a5f0:	lsl	x25, x26, #3
  45a5f4:	add	x0, x8, x25
  45a5f8:	add	x1, x8, #0x8
  45a5fc:	sub	w8, w9, w21
  45a600:	sbfiz	x2, x8, #3, #32
  45a604:	bl	402e30 <memmove@plt>
  45a608:	ldr	x8, [x19]
  45a60c:	mov	x1, x24
  45a610:	mov	x2, x25
  45a614:	add	x0, x8, x23
  45a618:	bl	4029c0 <memcpy@plt>
  45a61c:	ldr	w8, [x20]
  45a620:	mov	x0, x24
  45a624:	add	w8, w26, w8
  45a628:	sub	w8, w8, #0x1
  45a62c:	str	w8, [x20]
  45a630:	bl	402b20 <free@plt>
  45a634:	ldr	x0, [sp, #24]
  45a638:	bl	402b20 <free@plt>
  45a63c:	adrp	x26, 463000 <_obstack_memory_used@@Base+0x1838>
  45a640:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  45a644:	add	x26, x26, #0xf4c
  45a648:	add	x23, x23, #0xe98
  45a64c:	b	45a4c8 <feof@plt+0x573e8>
  45a650:	ldp	x20, x19, [sp, #240]
  45a654:	ldp	x22, x21, [sp, #224]
  45a658:	ldp	x24, x23, [sp, #208]
  45a65c:	ldp	x26, x25, [sp, #192]
  45a660:	ldp	x28, x27, [sp, #176]
  45a664:	ldp	x29, x30, [sp, #160]
  45a668:	add	sp, sp, #0x100
  45a66c:	ret
  45a670:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  45a674:	ldr	x0, [x9, #1464]
  45a678:	ldr	x2, [x8]
  45a67c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45a680:	add	x1, x1, #0x680
  45a684:	b	45a6a0 <feof@plt+0x575c0>
  45a688:	ldr	x8, [x19]
  45a68c:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  45a690:	ldr	x0, [x9, #1464]
  45a694:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45a698:	ldr	x2, [x8]
  45a69c:	add	x1, x1, #0x6a9
  45a6a0:	bl	402a70 <fprintf@plt>
  45a6a4:	mov	w0, #0x1                   	// #1
  45a6a8:	bl	4620e8 <_obstack_memory_used@@Base+0x920>
  45a6ac:	cbz	x0, 45a6c4 <feof@plt+0x575e4>
  45a6b0:	mov	x8, x0
  45a6b4:	mov	w0, #0xffffffff            	// #-1
  45a6b8:	ldr	x9, [x8], #8
  45a6bc:	add	w0, w0, #0x1
  45a6c0:	cbnz	x9, 45a6b8 <feof@plt+0x575d8>
  45a6c4:	ret
  45a6c8:	sub	sp, sp, #0x40
  45a6cc:	stp	x29, x30, [sp, #32]
  45a6d0:	stp	x20, x19, [sp, #48]
  45a6d4:	add	x29, sp, #0x20
  45a6d8:	cbz	x0, 45a700 <feof@plt+0x57620>
  45a6dc:	ldrb	w8, [x0]
  45a6e0:	mov	x19, x0
  45a6e4:	cbz	w8, 45a700 <feof@plt+0x57620>
  45a6e8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45a6ec:	add	x1, x1, #0x83a
  45a6f0:	mov	w2, #0x2                   	// #2
  45a6f4:	mov	x0, x19
  45a6f8:	bl	402d40 <strncmp@plt>
  45a6fc:	cbz	w0, 45a718 <feof@plt+0x57638>
  45a700:	mov	x9, xzr
  45a704:	ldp	x20, x19, [sp, #48]
  45a708:	ldp	x29, x30, [sp, #32]
  45a70c:	mov	x0, x9
  45a710:	add	sp, sp, #0x40
  45a714:	ret
  45a718:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45a71c:	add	x1, x1, #0x83d
  45a720:	mov	x0, x19
  45a724:	stp	xzr, xzr, [sp, #8]
  45a728:	str	xzr, [sp, #24]
  45a72c:	bl	402ed0 <strcmp@plt>
  45a730:	cbz	w0, 45a768 <feof@plt+0x57688>
  45a734:	add	x0, sp, #0x8
  45a738:	mov	x1, x19
  45a73c:	mov	w2, wzr
  45a740:	bl	45a814 <feof@plt+0x57734>
  45a744:	ldr	x8, [sp, #8]
  45a748:	cbnz	x0, 45a798 <feof@plt+0x576b8>
  45a74c:	cbz	x8, 45a798 <feof@plt+0x576b8>
  45a750:	mov	x0, x8
  45a754:	bl	402b20 <free@plt>
  45a758:	mov	x8, xzr
  45a75c:	stp	xzr, xzr, [sp, #8]
  45a760:	str	xzr, [sp, #24]
  45a764:	b	45a798 <feof@plt+0x576b8>
  45a768:	mov	w0, #0x20                  	// #32
  45a76c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a770:	mov	w10, #0x2044                	// #8260
  45a774:	add	x9, x0, #0x20
  45a778:	movk	w10, #0x616d, lsl #16
  45a77c:	mov	w11, #0x6e69                	// #28265
  45a780:	add	x12, x0, #0x6
  45a784:	mov	x8, x0
  45a788:	stp	x12, x9, [sp, #16]
  45a78c:	str	w10, [x0]
  45a790:	strh	w11, [x0, #4]
  45a794:	str	x0, [sp, #8]
  45a798:	ldr	x0, [sp, #16]
  45a79c:	mov	x9, xzr
  45a7a0:	subs	x20, x0, x8
  45a7a4:	b.eq	45a704 <feof@plt+0x57624>  // b.none
  45a7a8:	cmp	w20, #0x1
  45a7ac:	b.lt	45a704 <feof@plt+0x57624>  // b.tstop
  45a7b0:	cbz	x8, 45a7f4 <feof@plt+0x57714>
  45a7b4:	ldr	x9, [sp, #24]
  45a7b8:	sub	x9, x9, x0
  45a7bc:	cmp	x9, #0x0
  45a7c0:	b.gt	45a808 <feof@plt+0x57728>
  45a7c4:	lsl	w9, w20, #1
  45a7c8:	add	w9, w9, #0x2
  45a7cc:	sxtw	x19, w9
  45a7d0:	mov	x0, x8
  45a7d4:	mov	x1, x19
  45a7d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45a7dc:	mov	x8, x0
  45a7e0:	add	x0, x0, w20, sxtw
  45a7e4:	add	x9, x8, x19
  45a7e8:	stp	x8, x0, [sp, #8]
  45a7ec:	str	x9, [sp, #24]
  45a7f0:	b	45a808 <feof@plt+0x57728>
  45a7f4:	mov	w0, #0x20                  	// #32
  45a7f8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a7fc:	add	x8, x0, #0x20
  45a800:	stp	x0, x0, [sp, #8]
  45a804:	str	x8, [sp, #24]
  45a808:	strb	wzr, [x0]
  45a80c:	ldr	x9, [sp, #8]
  45a810:	b	45a704 <feof@plt+0x57624>
  45a814:	sub	sp, sp, #0x70
  45a818:	stp	x20, x19, [sp, #96]
  45a81c:	mov	w19, w2
  45a820:	add	x1, x1, #0x2
  45a824:	mov	w2, wzr
  45a828:	stp	x29, x30, [sp, #32]
  45a82c:	str	x25, [sp, #48]
  45a830:	stp	x24, x23, [sp, #64]
  45a834:	stp	x22, x21, [sp, #80]
  45a838:	add	x29, sp, #0x20
  45a83c:	mov	x20, x0
  45a840:	bl	45ab14 <feof@plt+0x57a34>
  45a844:	cbz	x0, 45a85c <feof@plt+0x5777c>
  45a848:	ldrb	w8, [x0]
  45a84c:	cmp	w8, #0x5a
  45a850:	b.ne	45a864 <feof@plt+0x57784>  // b.any
  45a854:	add	x21, x0, #0x1
  45a858:	b	45aadc <feof@plt+0x579fc>
  45a85c:	mov	x21, xzr
  45a860:	b	45aadc <feof@plt+0x579fc>
  45a864:	cmp	w8, #0x4d
  45a868:	cinc	x1, x0, eq  // eq = none
  45a86c:	add	x0, sp, #0x8
  45a870:	stp	xzr, xzr, [sp, #8]
  45a874:	str	xzr, [sp, #24]
  45a878:	bl	45adfc <feof@plt+0x57d1c>
  45a87c:	mov	x21, x0
  45a880:	cbz	x0, 45aa88 <feof@plt+0x579a8>
  45a884:	ldrb	w8, [x21]
  45a888:	sub	w8, w8, #0x46
  45a88c:	cmp	w8, #0x13
  45a890:	b.hi	45aa88 <feof@plt+0x579a8>  // b.pmore
  45a894:	mov	w9, #0x1                   	// #1
  45a898:	lsl	w8, w9, w8
  45a89c:	mov	w9, #0x9001                	// #36865
  45a8a0:	movk	w9, #0xb, lsl #16
  45a8a4:	tst	w8, w9
  45a8a8:	b.eq	45aa88 <feof@plt+0x579a8>  // b.none
  45a8ac:	ldp	x9, x8, [x20]
  45a8b0:	mov	x0, x20
  45a8b4:	mov	x1, x21
  45a8b8:	sub	w10, w8, w9
  45a8bc:	cmp	x8, x9
  45a8c0:	csel	w22, wzr, w10, eq  // eq = none
  45a8c4:	bl	45b088 <feof@plt+0x57fa8>
  45a8c8:	mov	x1, x0
  45a8cc:	mov	x0, x20
  45a8d0:	bl	45b370 <feof@plt+0x58290>
  45a8d4:	ldp	x9, x8, [x20]
  45a8d8:	mov	x21, x0
  45a8dc:	sub	w10, w8, w9
  45a8e0:	cmp	x8, x9
  45a8e4:	csel	w10, wzr, w10, eq  // eq = none
  45a8e8:	cmp	w10, w22
  45a8ec:	b.le	45a8f8 <feof@plt+0x57818>
  45a8f0:	add	x8, x9, w22, sxtw
  45a8f4:	str	x8, [x20, #8]
  45a8f8:	cbz	x9, 45a938 <feof@plt+0x57858>
  45a8fc:	ldr	x10, [x20, #16]
  45a900:	sub	x10, x10, x8
  45a904:	cmp	x10, #0x0
  45a908:	b.gt	45a950 <feof@plt+0x57870>
  45a90c:	sub	x23, x8, x9
  45a910:	lsl	w8, w23, #1
  45a914:	add	w8, w8, #0x2
  45a918:	sxtw	x22, w8
  45a91c:	mov	x0, x9
  45a920:	mov	x1, x22
  45a924:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45a928:	add	x8, x0, w23, sxtw
  45a92c:	add	x9, x0, x22
  45a930:	stp	x0, x8, [x20]
  45a934:	b	45a94c <feof@plt+0x5786c>
  45a938:	mov	w0, #0x20                  	// #32
  45a93c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a940:	mov	x8, x0
  45a944:	stp	x0, x0, [x20]
  45a948:	add	x9, x0, #0x20
  45a94c:	str	x9, [x20, #16]
  45a950:	mov	w9, #0x28                  	// #40
  45a954:	strb	w9, [x8]
  45a958:	ldr	x8, [x20, #8]
  45a95c:	mov	x0, x20
  45a960:	mov	x1, x21
  45a964:	add	x8, x8, #0x1
  45a968:	str	x8, [x20, #8]
  45a96c:	bl	45b834 <feof@plt+0x58754>
  45a970:	ldr	x8, [x20]
  45a974:	mov	x21, x0
  45a978:	cbz	x8, 45a9c0 <feof@plt+0x578e0>
  45a97c:	ldp	x0, x9, [x20, #8]
  45a980:	sub	x9, x9, x0
  45a984:	cmp	x9, #0x0
  45a988:	b.gt	45a9d4 <feof@plt+0x578f4>
  45a98c:	sub	x23, x0, x8
  45a990:	lsl	w9, w23, #1
  45a994:	add	w9, w9, #0x2
  45a998:	sxtw	x22, w9
  45a99c:	mov	x0, x8
  45a9a0:	mov	x1, x22
  45a9a4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45a9a8:	mov	x8, x0
  45a9ac:	add	x0, x0, w23, sxtw
  45a9b0:	add	x9, x8, x22
  45a9b4:	stp	x8, x0, [x20]
  45a9b8:	str	x9, [x20, #16]
  45a9bc:	b	45a9d4 <feof@plt+0x578f4>
  45a9c0:	mov	w0, #0x20                  	// #32
  45a9c4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45a9c8:	add	x8, x0, #0x20
  45a9cc:	stp	x0, x0, [x20]
  45a9d0:	str	x8, [x20, #16]
  45a9d4:	mov	w8, #0x29                  	// #41
  45a9d8:	strb	w8, [x0]
  45a9dc:	ldr	x8, [x20, #8]
  45a9e0:	add	x0, x8, #0x1
  45a9e4:	str	x0, [x20, #8]
  45a9e8:	ldp	x22, x8, [sp, #8]
  45a9ec:	subs	x24, x8, x22
  45a9f0:	b.eq	45aa88 <feof@plt+0x579a8>  // b.none
  45a9f4:	cbz	w24, 45aa88 <feof@plt+0x579a8>
  45a9f8:	ldr	x8, [x20]
  45a9fc:	cbz	x8, 45aa48 <feof@plt+0x57968>
  45aa00:	ldr	x9, [x20, #16]
  45aa04:	sxtw	x23, w24
  45aa08:	sub	x9, x9, x0
  45aa0c:	cmp	x9, x23
  45aa10:	b.ge	45aa70 <feof@plt+0x57990>  // b.tcont
  45aa14:	sub	x25, x0, x8
  45aa18:	add	w9, w25, w24
  45aa1c:	lsl	w9, w9, #1
  45aa20:	sxtw	x24, w9
  45aa24:	mov	x0, x8
  45aa28:	mov	x1, x24
  45aa2c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45aa30:	mov	x8, x0
  45aa34:	add	x0, x0, w25, sxtw
  45aa38:	add	x9, x8, x24
  45aa3c:	stp	x8, x0, [x20]
  45aa40:	str	x9, [x20, #16]
  45aa44:	b	45aa70 <feof@plt+0x57990>
  45aa48:	and	x8, x24, #0xffffffff
  45aa4c:	cmp	w24, #0x20
  45aa50:	mov	w9, #0x20                  	// #32
  45aa54:	csel	x23, x8, x9, gt
  45aa58:	mov	x0, x23
  45aa5c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45aa60:	add	x8, x0, x23
  45aa64:	stp	x0, x0, [x20]
  45aa68:	str	x8, [x20, #16]
  45aa6c:	sxtw	x23, w24
  45aa70:	mov	x1, x22
  45aa74:	mov	x2, x23
  45aa78:	bl	4029c0 <memcpy@plt>
  45aa7c:	ldr	x8, [x20, #8]
  45aa80:	add	x8, x8, x23
  45aa84:	str	x8, [x20, #8]
  45aa88:	ldp	x9, x8, [x20]
  45aa8c:	mov	x0, x20
  45aa90:	mov	x1, x21
  45aa94:	sub	w10, w8, w9
  45aa98:	cmp	x8, x9
  45aa9c:	csel	w22, wzr, w10, eq  // eq = none
  45aaa0:	bl	45bcdc <feof@plt+0x58bfc>
  45aaa4:	ldp	x8, x9, [x20]
  45aaa8:	mov	x21, x0
  45aaac:	sub	w10, w9, w8
  45aab0:	cmp	x9, x8
  45aab4:	csel	w9, wzr, w10, eq  // eq = none
  45aab8:	cmp	w9, w22
  45aabc:	b.le	45aac8 <feof@plt+0x579e8>
  45aac0:	add	x8, x8, w22, sxtw
  45aac4:	str	x8, [x20, #8]
  45aac8:	ldr	x0, [sp, #8]
  45aacc:	cbz	x0, 45aadc <feof@plt+0x579fc>
  45aad0:	bl	402b20 <free@plt>
  45aad4:	stp	xzr, xzr, [sp, #8]
  45aad8:	str	xzr, [sp, #24]
  45aadc:	cbz	w19, 45ab00 <feof@plt+0x57a20>
  45aae0:	mov	x0, x21
  45aae4:	ldp	x20, x19, [sp, #96]
  45aae8:	ldp	x22, x21, [sp, #80]
  45aaec:	ldp	x24, x23, [sp, #64]
  45aaf0:	ldr	x25, [sp, #48]
  45aaf4:	ldp	x29, x30, [sp, #32]
  45aaf8:	add	sp, sp, #0x70
  45aafc:	ret
  45ab00:	cbz	x21, 45aae0 <feof@plt+0x57a00>
  45ab04:	ldrb	w8, [x21]
  45ab08:	cbz	w8, 45aae0 <feof@plt+0x57a00>
  45ab0c:	mov	x21, xzr
  45ab10:	b	45aae0 <feof@plt+0x57a00>
  45ab14:	stp	x29, x30, [sp, #-96]!
  45ab18:	stp	x28, x27, [sp, #16]
  45ab1c:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12838>
  45ab20:	stp	x26, x25, [sp, #32]
  45ab24:	stp	x24, x23, [sp, #48]
  45ab28:	stp	x22, x21, [sp, #64]
  45ab2c:	stp	x20, x19, [sp, #80]
  45ab30:	mov	w19, w2
  45ab34:	mov	x22, x1
  45ab38:	mov	x20, x0
  45ab3c:	mov	x24, xzr
  45ab40:	mov	w25, #0x28                  	// #40
  45ab44:	mov	w26, #0x29                  	// #41
  45ab48:	add	x27, x27, #0xe98
  45ab4c:	mov	x29, sp
  45ab50:	b	45ab64 <feof@plt+0x57a84>
  45ab54:	mov	x22, x21
  45ab58:	ldrb	w8, [x22]
  45ab5c:	ldrh	w8, [x27, x8, lsl #1]
  45ab60:	tbz	w8, #2, 45addc <feof@plt+0x57cfc>
  45ab64:	mov	x8, x24
  45ab68:	add	x24, x24, #0x1
  45ab6c:	cbz	x8, 45abe0 <feof@plt+0x57b00>
  45ab70:	ldr	x8, [x20]
  45ab74:	cbz	x8, 45abb8 <feof@plt+0x57ad8>
  45ab78:	ldp	x0, x9, [x20, #8]
  45ab7c:	sub	x9, x9, x0
  45ab80:	cmp	x9, #0x0
  45ab84:	b.gt	45abcc <feof@plt+0x57aec>
  45ab88:	sub	x23, x0, x8
  45ab8c:	lsl	w9, w23, #1
  45ab90:	add	w9, w9, #0x2
  45ab94:	sxtw	x21, w9
  45ab98:	mov	x0, x8
  45ab9c:	mov	x1, x21
  45aba0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45aba4:	mov	x8, x0
  45aba8:	add	x0, x0, w23, sxtw
  45abac:	stp	x8, x0, [x20]
  45abb0:	add	x8, x8, x21
  45abb4:	b	45abc8 <feof@plt+0x57ae8>
  45abb8:	mov	w0, #0x20                  	// #32
  45abbc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45abc0:	stp	x0, x0, [x20]
  45abc4:	add	x8, x0, #0x20
  45abc8:	str	x8, [x20, #16]
  45abcc:	mov	w8, #0x2e                  	// #46
  45abd0:	strb	w8, [x0]
  45abd4:	ldr	x8, [x20, #8]
  45abd8:	add	x8, x8, #0x1
  45abdc:	str	x8, [x20, #8]
  45abe0:	sub	x1, x22, #0x1
  45abe4:	ldrb	w8, [x1, #1]!
  45abe8:	cmp	w8, #0x30
  45abec:	b.eq	45abe4 <feof@plt+0x57b04>  // b.none
  45abf0:	mov	x0, x20
  45abf4:	mov	w2, w19
  45abf8:	bl	45d478 <feof@plt+0x5a398>
  45abfc:	cbz	x0, 45add8 <feof@plt+0x57cf8>
  45ac00:	ldrb	w8, [x0]
  45ac04:	mov	x21, x0
  45ac08:	cmp	w8, #0x4d
  45ac0c:	b.eq	45ac34 <feof@plt+0x57b54>  // b.none
  45ac10:	sub	w9, w8, #0x46
  45ac14:	cmp	w9, #0x13
  45ac18:	b.hi	45ab54 <feof@plt+0x57a74>  // b.pmore
  45ac1c:	mov	w10, #0x1                   	// #1
  45ac20:	lsl	w9, w10, w9
  45ac24:	mov	w10, #0x9001                	// #36865
  45ac28:	movk	w10, #0xb, lsl #16
  45ac2c:	tst	w9, w10
  45ac30:	b.eq	45ab54 <feof@plt+0x57a74>  // b.none
  45ac34:	ldp	x10, x9, [x20]
  45ac38:	mov	x1, x21
  45ac3c:	sub	w11, w9, w10
  45ac40:	cmp	x9, x10
  45ac44:	csel	w28, wzr, w11, eq  // eq = none
  45ac48:	cmp	w8, #0x4d
  45ac4c:	b.ne	45ac80 <feof@plt+0x57ba0>  // b.any
  45ac50:	add	x1, x21, #0x1
  45ac54:	mov	x0, x20
  45ac58:	bl	45adfc <feof@plt+0x57d1c>
  45ac5c:	ldp	x8, x9, [x20]
  45ac60:	mov	x1, x0
  45ac64:	sub	w10, w9, w8
  45ac68:	cmp	x9, x8
  45ac6c:	csel	w9, wzr, w10, eq  // eq = none
  45ac70:	cmp	w9, w28
  45ac74:	b.le	45ac80 <feof@plt+0x57ba0>
  45ac78:	add	x8, x8, w28, sxtw
  45ac7c:	str	x8, [x20, #8]
  45ac80:	mov	x0, x20
  45ac84:	bl	45b088 <feof@plt+0x57fa8>
  45ac88:	mov	x1, x0
  45ac8c:	mov	x0, x20
  45ac90:	bl	45b370 <feof@plt+0x58290>
  45ac94:	ldp	x9, x8, [x20]
  45ac98:	mov	x22, x0
  45ac9c:	sub	w10, w8, w9
  45aca0:	cmp	x8, x9
  45aca4:	csel	w10, wzr, w10, eq  // eq = none
  45aca8:	cmp	w10, w28
  45acac:	b.le	45acb8 <feof@plt+0x57bd8>
  45acb0:	add	x8, x9, w28, sxtw
  45acb4:	str	x8, [x20, #8]
  45acb8:	cbz	x9, 45acfc <feof@plt+0x57c1c>
  45acbc:	ldr	x10, [x20, #16]
  45acc0:	sub	x10, x10, x8
  45acc4:	cmp	x10, #0x0
  45acc8:	b.gt	45ad14 <feof@plt+0x57c34>
  45accc:	sub	x25, x8, x9
  45acd0:	lsl	w8, w25, #1
  45acd4:	add	w8, w8, #0x2
  45acd8:	sxtw	x23, w8
  45acdc:	mov	x0, x9
  45ace0:	mov	x1, x23
  45ace4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ace8:	add	x8, x0, w25, sxtw
  45acec:	mov	w25, #0x28                  	// #40
  45acf0:	add	x9, x0, x23
  45acf4:	stp	x0, x8, [x20]
  45acf8:	b	45ad10 <feof@plt+0x57c30>
  45acfc:	mov	w0, #0x20                  	// #32
  45ad00:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ad04:	mov	x8, x0
  45ad08:	stp	x0, x0, [x20]
  45ad0c:	add	x9, x0, #0x20
  45ad10:	str	x9, [x20, #16]
  45ad14:	strb	w25, [x8]
  45ad18:	ldr	x8, [x20, #8]
  45ad1c:	mov	x0, x20
  45ad20:	mov	x1, x22
  45ad24:	add	x8, x8, #0x1
  45ad28:	str	x8, [x20, #8]
  45ad2c:	bl	45b834 <feof@plt+0x58754>
  45ad30:	ldr	x8, [x20]
  45ad34:	mov	x22, x0
  45ad38:	cbz	x8, 45ad80 <feof@plt+0x57ca0>
  45ad3c:	ldp	x0, x9, [x20, #8]
  45ad40:	sub	x9, x9, x0
  45ad44:	cmp	x9, #0x0
  45ad48:	b.gt	45ad94 <feof@plt+0x57cb4>
  45ad4c:	sub	x25, x0, x8
  45ad50:	lsl	w9, w25, #1
  45ad54:	add	w9, w9, #0x2
  45ad58:	sxtw	x23, w9
  45ad5c:	mov	x0, x8
  45ad60:	mov	x1, x23
  45ad64:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ad68:	mov	x8, x0
  45ad6c:	add	x0, x0, w25, sxtw
  45ad70:	mov	w25, #0x28                  	// #40
  45ad74:	stp	x8, x0, [x20]
  45ad78:	add	x8, x8, x23
  45ad7c:	b	45ad90 <feof@plt+0x57cb0>
  45ad80:	mov	w0, #0x20                  	// #32
  45ad84:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ad88:	stp	x0, x0, [x20]
  45ad8c:	add	x8, x0, #0x20
  45ad90:	str	x8, [x20, #16]
  45ad94:	strb	w26, [x0]
  45ad98:	ldr	x8, [x20, #8]
  45ad9c:	add	x8, x8, #0x1
  45ada0:	str	x8, [x20, #8]
  45ada4:	cbz	x22, 45adb4 <feof@plt+0x57cd4>
  45ada8:	ldrb	w9, [x22]
  45adac:	ldrh	w9, [x27, x9, lsl #1]
  45adb0:	tbnz	w9, #2, 45ab58 <feof@plt+0x57a78>
  45adb4:	ldr	x9, [x20]
  45adb8:	sub	w10, w8, w9
  45adbc:	cmp	x8, x9
  45adc0:	csel	w8, wzr, w10, eq  // eq = none
  45adc4:	cmp	w8, w28
  45adc8:	b.le	45ab54 <feof@plt+0x57a74>
  45adcc:	add	x8, x9, w28, sxtw
  45add0:	str	x8, [x20, #8]
  45add4:	b	45ab54 <feof@plt+0x57a74>
  45add8:	mov	x22, xzr
  45addc:	mov	x0, x22
  45ade0:	ldp	x20, x19, [sp, #80]
  45ade4:	ldp	x22, x21, [sp, #64]
  45ade8:	ldp	x24, x23, [sp, #48]
  45adec:	ldp	x26, x25, [sp, #32]
  45adf0:	ldp	x28, x27, [sp, #16]
  45adf4:	ldp	x29, x30, [sp], #96
  45adf8:	ret
  45adfc:	stp	x29, x30, [sp, #-80]!
  45ae00:	stp	x20, x19, [sp, #64]
  45ae04:	mov	x19, x1
  45ae08:	stp	x26, x25, [sp, #16]
  45ae0c:	stp	x24, x23, [sp, #32]
  45ae10:	stp	x22, x21, [sp, #48]
  45ae14:	mov	x29, sp
  45ae18:	cbz	x1, 45b06c <feof@plt+0x57f8c>
  45ae1c:	mov	w23, #0x6920                	// #26912
  45ae20:	mov	w24, #0x7261                	// #29281
  45ae24:	mov	w25, #0x7320                	// #29472
  45ae28:	mov	x20, x0
  45ae2c:	mov	w22, #0x7475                	// #29813
  45ae30:	movk	w23, #0x6f6e, lsl #16
  45ae34:	movk	w24, #0x6465, lsl #16
  45ae38:	movk	w25, #0x6168, lsl #16
  45ae3c:	b	45ae6c <feof@plt+0x57d8c>
  45ae40:	mov	w0, #0x20                  	// #32
  45ae44:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ae48:	stp	x0, x0, [x20]
  45ae4c:	add	x8, x0, #0x20
  45ae50:	str	x8, [x20, #16]
  45ae54:	mov	w8, #0x7                   	// #7
  45ae58:	stur	w24, [x0, #3]
  45ae5c:	str	w25, [x0]
  45ae60:	ldr	x9, [x20, #8]
  45ae64:	add	x8, x9, x8
  45ae68:	str	x8, [x20, #8]
  45ae6c:	ldrb	w8, [x19]
  45ae70:	cmp	w8, #0x4e
  45ae74:	b.le	45aecc <feof@plt+0x57dec>
  45ae78:	cmp	w8, #0x4f
  45ae7c:	b.ne	45af4c <feof@plt+0x57e6c>  // b.any
  45ae80:	ldr	x8, [x20]
  45ae84:	add	x19, x19, #0x1
  45ae88:	cbz	x8, 45ae40 <feof@plt+0x57d60>
  45ae8c:	ldp	x0, x9, [x20, #8]
  45ae90:	sub	x9, x9, x0
  45ae94:	cmp	x9, #0x6
  45ae98:	b.gt	45ae54 <feof@plt+0x57d74>
  45ae9c:	sub	x26, x0, x8
  45aea0:	lsl	w9, w26, #1
  45aea4:	add	w9, w9, #0xe
  45aea8:	sxtw	x21, w9
  45aeac:	mov	x0, x8
  45aeb0:	mov	x1, x21
  45aeb4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45aeb8:	mov	x8, x0
  45aebc:	add	x0, x0, w26, sxtw
  45aec0:	stp	x8, x0, [x20]
  45aec4:	add	x8, x8, x21
  45aec8:	b	45ae50 <feof@plt+0x57d70>
  45aecc:	b.ne	45afa8 <feof@plt+0x57ec8>  // b.any
  45aed0:	ldrb	w8, [x19, #1]
  45aed4:	cmp	w8, #0x67
  45aed8:	b.ne	45afac <feof@plt+0x57ecc>  // b.any
  45aedc:	ldr	x8, [x20]
  45aee0:	add	x19, x19, #0x2
  45aee4:	cbz	x8, 45af28 <feof@plt+0x57e48>
  45aee8:	ldp	x0, x9, [x20, #8]
  45aeec:	sub	x9, x9, x0
  45aef0:	cmp	x9, #0x5
  45aef4:	b.gt	45af3c <feof@plt+0x57e5c>
  45aef8:	sub	x26, x0, x8
  45aefc:	lsl	w9, w26, #1
  45af00:	add	w9, w9, #0xc
  45af04:	sxtw	x21, w9
  45af08:	mov	x0, x8
  45af0c:	mov	x1, x21
  45af10:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45af14:	mov	x8, x0
  45af18:	add	x0, x0, w26, sxtw
  45af1c:	stp	x8, x0, [x20]
  45af20:	add	x8, x8, x21
  45af24:	b	45af38 <feof@plt+0x57e58>
  45af28:	mov	w0, #0x20                  	// #32
  45af2c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45af30:	stp	x0, x0, [x20]
  45af34:	add	x8, x0, #0x20
  45af38:	str	x8, [x20, #16]
  45af3c:	strh	w22, [x0, #4]
  45af40:	str	w23, [x0]
  45af44:	mov	w8, #0x6                   	// #6
  45af48:	b	45ae60 <feof@plt+0x57d80>
  45af4c:	cmp	w8, #0x79
  45af50:	b.eq	45afb4 <feof@plt+0x57ed4>  // b.none
  45af54:	cmp	w8, #0x78
  45af58:	b.ne	45b06c <feof@plt+0x57f8c>  // b.any
  45af5c:	ldr	x8, [x20]
  45af60:	add	x19, x19, #0x1
  45af64:	cbz	x8, 45b000 <feof@plt+0x57f20>
  45af68:	ldp	x0, x9, [x20, #8]
  45af6c:	sub	x9, x9, x0
  45af70:	cmp	x9, #0x5
  45af74:	b.gt	45b014 <feof@plt+0x57f34>
  45af78:	sub	x22, x0, x8
  45af7c:	lsl	w9, w22, #1
  45af80:	add	w9, w9, #0xc
  45af84:	sxtw	x21, w9
  45af88:	mov	x0, x8
  45af8c:	mov	x1, x21
  45af90:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45af94:	mov	x8, x0
  45af98:	add	x0, x0, w22, sxtw
  45af9c:	stp	x8, x0, [x20]
  45afa0:	add	x8, x8, x21
  45afa4:	b	45b010 <feof@plt+0x57f30>
  45afa8:	cbnz	w8, 45b06c <feof@plt+0x57f8c>
  45afac:	mov	x19, xzr
  45afb0:	b	45b06c <feof@plt+0x57f8c>
  45afb4:	ldr	x8, [x20]
  45afb8:	add	x19, x19, #0x1
  45afbc:	cbz	x8, 45b034 <feof@plt+0x57f54>
  45afc0:	ldp	x0, x9, [x20, #8]
  45afc4:	sub	x9, x9, x0
  45afc8:	cmp	x9, #0x9
  45afcc:	b.gt	45b048 <feof@plt+0x57f68>
  45afd0:	sub	x22, x0, x8
  45afd4:	lsl	w9, w22, #1
  45afd8:	add	w9, w9, #0x14
  45afdc:	sxtw	x21, w9
  45afe0:	mov	x0, x8
  45afe4:	mov	x1, x21
  45afe8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45afec:	mov	x8, x0
  45aff0:	add	x0, x0, w22, sxtw
  45aff4:	stp	x8, x0, [x20]
  45aff8:	add	x8, x8, x21
  45affc:	b	45b044 <feof@plt+0x57f64>
  45b000:	mov	w0, #0x20                  	// #32
  45b004:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b008:	stp	x0, x0, [x20]
  45b00c:	add	x8, x0, #0x20
  45b010:	str	x8, [x20, #16]
  45b014:	mov	w9, #0x6320                	// #25376
  45b018:	mov	w8, #0x7473                	// #29811
  45b01c:	movk	w9, #0x6e6f, lsl #16
  45b020:	strh	w8, [x0, #4]
  45b024:	str	w9, [x0]
  45b028:	ldr	x8, [x20, #8]
  45b02c:	add	x8, x8, #0x6
  45b030:	b	45b068 <feof@plt+0x57f88>
  45b034:	mov	w0, #0x20                  	// #32
  45b038:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b03c:	stp	x0, x0, [x20]
  45b040:	add	x8, x0, #0x20
  45b044:	str	x8, [x20, #16]
  45b048:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b04c:	add	x8, x8, #0x903
  45b050:	ldr	x8, [x8]
  45b054:	mov	w9, #0x656c                	// #25964
  45b058:	strh	w9, [x0, #8]
  45b05c:	str	x8, [x0]
  45b060:	ldr	x8, [x20, #8]
  45b064:	add	x8, x8, #0xa
  45b068:	str	x8, [x20, #8]
  45b06c:	mov	x0, x19
  45b070:	ldp	x20, x19, [sp, #64]
  45b074:	ldp	x22, x21, [sp, #48]
  45b078:	ldp	x24, x23, [sp, #32]
  45b07c:	ldp	x26, x25, [sp, #16]
  45b080:	ldp	x29, x30, [sp], #80
  45b084:	ret
  45b088:	stp	x29, x30, [sp, #-48]!
  45b08c:	stp	x22, x21, [sp, #16]
  45b090:	stp	x20, x19, [sp, #32]
  45b094:	mov	x29, sp
  45b098:	cbz	x1, 45b11c <feof@plt+0x5803c>
  45b09c:	ldrb	w8, [x1]
  45b0a0:	mov	x19, x1
  45b0a4:	mov	x20, x0
  45b0a8:	mov	x0, xzr
  45b0ac:	sub	w8, w8, #0x46
  45b0b0:	cmp	w8, #0x13
  45b0b4:	b.hi	45b360 <feof@plt+0x58280>  // b.pmore
  45b0b8:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45b0bc:	add	x9, x9, #0x6d2
  45b0c0:	adr	x10, 45b0d0 <feof@plt+0x57ff0>
  45b0c4:	ldrb	w11, [x9, x8]
  45b0c8:	add	x10, x10, x11, lsl #2
  45b0cc:	br	x10
  45b0d0:	ldr	x8, [x20]
  45b0d4:	cbz	x8, 45b254 <feof@plt+0x58174>
  45b0d8:	ldp	x0, x9, [x20, #8]
  45b0dc:	sub	x9, x9, x0
  45b0e0:	cmp	x9, #0xb
  45b0e4:	b.gt	45b268 <feof@plt+0x58188>
  45b0e8:	sub	x22, x0, x8
  45b0ec:	lsl	w9, w22, #1
  45b0f0:	add	w9, w9, #0x18
  45b0f4:	sxtw	x21, w9
  45b0f8:	mov	x0, x8
  45b0fc:	mov	x1, x21
  45b100:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b104:	mov	x8, x0
  45b108:	add	x0, x0, w22, sxtw
  45b10c:	add	x9, x8, x21
  45b110:	stp	x8, x0, [x20]
  45b114:	str	x9, [x20, #16]
  45b118:	b	45b268 <feof@plt+0x58188>
  45b11c:	mov	x0, xzr
  45b120:	b	45b360 <feof@plt+0x58280>
  45b124:	ldr	x8, [x20]
  45b128:	cbz	x8, 45b28c <feof@plt+0x581ac>
  45b12c:	ldp	x0, x9, [x20, #8]
  45b130:	sub	x9, x9, x0
  45b134:	cmp	x9, #0x9
  45b138:	b.gt	45b2a0 <feof@plt+0x581c0>
  45b13c:	sub	x22, x0, x8
  45b140:	lsl	w9, w22, #1
  45b144:	add	w9, w9, #0x14
  45b148:	sxtw	x21, w9
  45b14c:	mov	x0, x8
  45b150:	mov	x1, x21
  45b154:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b158:	mov	x8, x0
  45b15c:	add	x0, x0, w22, sxtw
  45b160:	add	x9, x8, x21
  45b164:	stp	x8, x0, [x20]
  45b168:	str	x9, [x20, #16]
  45b16c:	b	45b2a0 <feof@plt+0x581c0>
  45b170:	ldr	x8, [x20]
  45b174:	cbz	x8, 45b2c0 <feof@plt+0x581e0>
  45b178:	ldp	x0, x9, [x20, #8]
  45b17c:	sub	x9, x9, x0
  45b180:	cmp	x9, #0xe
  45b184:	b.gt	45b2d4 <feof@plt+0x581f4>
  45b188:	sub	x22, x0, x8
  45b18c:	lsl	w9, w22, #1
  45b190:	add	w9, w9, #0x1e
  45b194:	sxtw	x21, w9
  45b198:	mov	x0, x8
  45b19c:	mov	x1, x21
  45b1a0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b1a4:	mov	x8, x0
  45b1a8:	add	x0, x0, w22, sxtw
  45b1ac:	add	x9, x8, x21
  45b1b0:	stp	x8, x0, [x20]
  45b1b4:	str	x9, [x20, #16]
  45b1b8:	b	45b2d4 <feof@plt+0x581f4>
  45b1bc:	ldr	x8, [x20]
  45b1c0:	cbz	x8, 45b2f4 <feof@plt+0x58214>
  45b1c4:	ldp	x0, x9, [x20, #8]
  45b1c8:	sub	x9, x9, x0
  45b1cc:	cmp	x9, #0xf
  45b1d0:	b.gt	45b308 <feof@plt+0x58228>
  45b1d4:	sub	x22, x0, x8
  45b1d8:	lsl	w9, w22, #1
  45b1dc:	add	w9, w9, #0x20
  45b1e0:	sxtw	x21, w9
  45b1e4:	mov	x0, x8
  45b1e8:	mov	x1, x21
  45b1ec:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b1f0:	mov	x8, x0
  45b1f4:	add	x0, x0, w22, sxtw
  45b1f8:	add	x9, x8, x21
  45b1fc:	stp	x8, x0, [x20]
  45b200:	str	x9, [x20, #16]
  45b204:	b	45b308 <feof@plt+0x58228>
  45b208:	ldr	x8, [x20]
  45b20c:	cbz	x8, 45b31c <feof@plt+0x5823c>
  45b210:	ldp	x0, x9, [x20, #8]
  45b214:	sub	x9, x9, x0
  45b218:	cmp	x9, #0x13
  45b21c:	b.gt	45b330 <feof@plt+0x58250>
  45b220:	sub	x22, x0, x8
  45b224:	lsl	w9, w22, #1
  45b228:	add	w9, w9, #0x28
  45b22c:	sxtw	x21, w9
  45b230:	mov	x0, x8
  45b234:	mov	x1, x21
  45b238:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b23c:	mov	x8, x0
  45b240:	add	x0, x0, w22, sxtw
  45b244:	add	x9, x8, x21
  45b248:	stp	x8, x0, [x20]
  45b24c:	str	x9, [x20, #16]
  45b250:	b	45b330 <feof@plt+0x58250>
  45b254:	mov	w0, #0x20                  	// #32
  45b258:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b25c:	add	x8, x0, #0x20
  45b260:	stp	x0, x0, [x20]
  45b264:	str	x8, [x20, #16]
  45b268:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b26c:	add	x8, x8, #0x949
  45b270:	ldr	x8, [x8]
  45b274:	mov	w9, #0x2b2b                	// #11051
  45b278:	movk	w9, #0x2029, lsl #16
  45b27c:	str	w9, [x0, #8]
  45b280:	str	x8, [x0]
  45b284:	mov	w8, #0xc                   	// #12
  45b288:	b	45b350 <feof@plt+0x58270>
  45b28c:	mov	w0, #0x20                  	// #32
  45b290:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b294:	add	x8, x0, #0x20
  45b298:	stp	x0, x0, [x20]
  45b29c:	str	x8, [x20, #16]
  45b2a0:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b2a4:	add	x8, x8, #0x91d
  45b2a8:	ldr	x8, [x8]
  45b2ac:	mov	w9, #0x2029                	// #8233
  45b2b0:	strh	w9, [x0, #8]
  45b2b4:	str	x8, [x0]
  45b2b8:	mov	w8, #0xa                   	// #10
  45b2bc:	b	45b350 <feof@plt+0x58270>
  45b2c0:	mov	w0, #0x20                  	// #32
  45b2c4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b2c8:	add	x8, x0, #0x20
  45b2cc:	stp	x0, x0, [x20]
  45b2d0:	str	x8, [x20, #16]
  45b2d4:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b2d8:	add	x8, x8, #0x939
  45b2dc:	ldur	x9, [x8, #7]
  45b2e0:	ldr	x8, [x8]
  45b2e4:	stur	x9, [x0, #7]
  45b2e8:	str	x8, [x0]
  45b2ec:	mov	w8, #0xf                   	// #15
  45b2f0:	b	45b350 <feof@plt+0x58270>
  45b2f4:	mov	w0, #0x20                  	// #32
  45b2f8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b2fc:	add	x8, x0, #0x20
  45b300:	stp	x0, x0, [x20]
  45b304:	str	x8, [x20, #16]
  45b308:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b30c:	add	x8, x8, #0x928
  45b310:	ldr	q0, [x8]
  45b314:	mov	w8, #0x10                  	// #16
  45b318:	b	45b34c <feof@plt+0x5826c>
  45b31c:	mov	w0, #0x20                  	// #32
  45b320:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b324:	add	x8, x0, #0x20
  45b328:	stp	x0, x0, [x20]
  45b32c:	str	x8, [x20, #16]
  45b330:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b334:	add	x8, x8, #0x956
  45b338:	ldr	q0, [x8]
  45b33c:	mov	w8, #0x432d                	// #17197
  45b340:	movk	w8, #0x2029, lsl #16
  45b344:	str	w8, [x0, #16]
  45b348:	mov	w8, #0x14                  	// #20
  45b34c:	str	q0, [x0]
  45b350:	ldr	x9, [x20, #8]
  45b354:	add	x8, x9, x8
  45b358:	str	x8, [x20, #8]
  45b35c:	add	x0, x19, #0x1
  45b360:	ldp	x20, x19, [sp, #32]
  45b364:	ldp	x22, x21, [sp, #16]
  45b368:	ldp	x29, x30, [sp], #48
  45b36c:	ret
  45b370:	stp	x29, x30, [sp, #-96]!
  45b374:	stp	x20, x19, [sp, #80]
  45b378:	mov	x19, x1
  45b37c:	stp	x28, x27, [sp, #16]
  45b380:	stp	x26, x25, [sp, #32]
  45b384:	stp	x24, x23, [sp, #48]
  45b388:	stp	x22, x21, [sp, #64]
  45b38c:	mov	x29, sp
  45b390:	cbz	x1, 45b814 <feof@plt+0x58734>
  45b394:	ldrb	w8, [x19]
  45b398:	cbz	w8, 45b810 <feof@plt+0x58730>
  45b39c:	cmp	w8, #0x4e
  45b3a0:	b.ne	45b814 <feof@plt+0x58734>  // b.any
  45b3a4:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  45b3a8:	mov	w24, #0x7275                	// #29301
  45b3ac:	mov	w26, #0x6572                	// #25970
  45b3b0:	mov	w27, #0x6373                	// #25459
  45b3b4:	mov	x20, x0
  45b3b8:	add	x22, x22, #0x6e6
  45b3bc:	mov	w23, #0x20                  	// #32
  45b3c0:	mov	w25, #0x2065                	// #8293
  45b3c4:	movk	w24, #0x206e, lsl #16
  45b3c8:	movk	w26, #0x7574, lsl #16
  45b3cc:	movk	w27, #0x706f, lsl #16
  45b3d0:	b	45b414 <feof@plt+0x58334>
  45b3d4:	mov	w0, #0x20                  	// #32
  45b3d8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b3dc:	stp	x0, x0, [x20]
  45b3e0:	add	x8, x0, #0x20
  45b3e4:	str	x8, [x20, #16]
  45b3e8:	mov	w8, #0x7340                	// #29504
  45b3ec:	movk	w8, #0x6661, lsl #16
  45b3f0:	strh	w25, [x0, #4]
  45b3f4:	str	w8, [x0]
  45b3f8:	mov	w8, #0x6                   	// #6
  45b3fc:	ldr	x9, [x20, #8]
  45b400:	add	x8, x9, x8
  45b404:	str	x8, [x20, #8]
  45b408:	ldrb	w8, [x19, #2]!
  45b40c:	cmp	w8, #0x4e
  45b410:	b.ne	45b814 <feof@plt+0x58734>  // b.any
  45b414:	ldrb	w8, [x19, #1]
  45b418:	sub	w8, w8, #0x61
  45b41c:	cmp	w8, #0xb
  45b420:	b.hi	45b810 <feof@plt+0x58730>  // b.pmore
  45b424:	adr	x9, 45b434 <feof@plt+0x58354>
  45b428:	ldrb	w10, [x22, x8]
  45b42c:	add	x9, x9, x10, lsl #2
  45b430:	br	x9
  45b434:	ldr	x8, [x20]
  45b438:	cbz	x8, 45b6bc <feof@plt+0x585dc>
  45b43c:	ldp	x0, x9, [x20, #8]
  45b440:	sub	x9, x9, x0
  45b444:	cmp	x9, #0x4
  45b448:	b.gt	45b6d0 <feof@plt+0x585f0>
  45b44c:	sub	x28, x0, x8
  45b450:	lsl	w9, w28, #1
  45b454:	add	w9, w9, #0xa
  45b458:	sxtw	x21, w9
  45b45c:	mov	x0, x8
  45b460:	mov	x1, x21
  45b464:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b468:	mov	x8, x0
  45b46c:	add	x0, x0, w28, sxtw
  45b470:	stp	x8, x0, [x20]
  45b474:	add	x8, x8, x21
  45b478:	b	45b6cc <feof@plt+0x585ec>
  45b47c:	ldr	x8, [x20]
  45b480:	cbz	x8, 45b6e8 <feof@plt+0x58608>
  45b484:	ldp	x0, x9, [x20, #8]
  45b488:	sub	x9, x9, x0
  45b48c:	cmp	x9, #0x7
  45b490:	b.gt	45b6fc <feof@plt+0x5861c>
  45b494:	sub	x28, x0, x8
  45b498:	lsl	w9, w28, #1
  45b49c:	add	w9, w9, #0x10
  45b4a0:	sxtw	x21, w9
  45b4a4:	mov	x0, x8
  45b4a8:	mov	x1, x21
  45b4ac:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b4b0:	mov	x8, x0
  45b4b4:	add	x0, x0, w28, sxtw
  45b4b8:	stp	x8, x0, [x20]
  45b4bc:	add	x8, x8, x21
  45b4c0:	b	45b6f8 <feof@plt+0x58618>
  45b4c4:	ldr	x8, [x20]
  45b4c8:	cbz	x8, 45b718 <feof@plt+0x58638>
  45b4cc:	ldp	x0, x9, [x20, #8]
  45b4d0:	sub	x9, x9, x0
  45b4d4:	cmp	x9, #0x3
  45b4d8:	b.gt	45b72c <feof@plt+0x5864c>
  45b4dc:	sub	x28, x0, x8
  45b4e0:	lsl	w9, w28, #1
  45b4e4:	add	w9, w9, #0x8
  45b4e8:	sxtw	x21, w9
  45b4ec:	mov	x0, x8
  45b4f0:	mov	x1, x21
  45b4f4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b4f8:	mov	x8, x0
  45b4fc:	add	x0, x0, w28, sxtw
  45b500:	stp	x8, x0, [x20]
  45b504:	add	x8, x8, x21
  45b508:	b	45b728 <feof@plt+0x58648>
  45b50c:	ldr	x8, [x20]
  45b510:	cbz	x8, 45b740 <feof@plt+0x58660>
  45b514:	ldp	x0, x9, [x20, #8]
  45b518:	sub	x9, x9, x0
  45b51c:	cmp	x9, #0x9
  45b520:	b.gt	45b754 <feof@plt+0x58674>
  45b524:	sub	x28, x0, x8
  45b528:	lsl	w9, w28, #1
  45b52c:	add	w9, w9, #0x14
  45b530:	sxtw	x21, w9
  45b534:	mov	x0, x8
  45b538:	mov	x1, x21
  45b53c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b540:	mov	x8, x0
  45b544:	add	x0, x0, w28, sxtw
  45b548:	stp	x8, x0, [x20]
  45b54c:	add	x8, x8, x21
  45b550:	b	45b750 <feof@plt+0x58670>
  45b554:	ldr	x8, [x20]
  45b558:	cbz	x8, 45b774 <feof@plt+0x58694>
  45b55c:	ldp	x0, x9, [x20, #8]
  45b560:	sub	x9, x9, x0
  45b564:	cmp	x9, #0x8
  45b568:	b.gt	45b788 <feof@plt+0x586a8>
  45b56c:	sub	x28, x0, x8
  45b570:	lsl	w9, w28, #1
  45b574:	add	w9, w9, #0x12
  45b578:	sxtw	x21, w9
  45b57c:	mov	x0, x8
  45b580:	mov	x1, x21
  45b584:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b588:	mov	x8, x0
  45b58c:	add	x0, x0, w28, sxtw
  45b590:	stp	x8, x0, [x20]
  45b594:	add	x8, x8, x21
  45b598:	b	45b784 <feof@plt+0x586a4>
  45b59c:	ldr	x8, [x20]
  45b5a0:	cbz	x8, 45b3d4 <feof@plt+0x582f4>
  45b5a4:	ldp	x0, x9, [x20, #8]
  45b5a8:	sub	x9, x9, x0
  45b5ac:	cmp	x9, #0x5
  45b5b0:	b.gt	45b3e8 <feof@plt+0x58308>
  45b5b4:	sub	x28, x0, x8
  45b5b8:	lsl	w9, w28, #1
  45b5bc:	add	w9, w9, #0xc
  45b5c0:	sxtw	x21, w9
  45b5c4:	mov	x0, x8
  45b5c8:	mov	x1, x21
  45b5cc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b5d0:	mov	x8, x0
  45b5d4:	add	x0, x0, w28, sxtw
  45b5d8:	stp	x8, x0, [x20]
  45b5dc:	add	x8, x8, x21
  45b5e0:	b	45b3e4 <feof@plt+0x58304>
  45b5e4:	ldr	x8, [x20]
  45b5e8:	cbz	x8, 45b7a4 <feof@plt+0x586c4>
  45b5ec:	ldp	x0, x9, [x20, #8]
  45b5f0:	sub	x9, x9, x0
  45b5f4:	cmp	x9, #0x5
  45b5f8:	b.gt	45b7b8 <feof@plt+0x586d8>
  45b5fc:	sub	x28, x0, x8
  45b600:	lsl	w9, w28, #1
  45b604:	add	w9, w9, #0xc
  45b608:	sxtw	x21, w9
  45b60c:	mov	x0, x8
  45b610:	mov	x1, x21
  45b614:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b618:	mov	x8, x0
  45b61c:	add	x0, x0, w28, sxtw
  45b620:	stp	x8, x0, [x20]
  45b624:	add	x8, x8, x21
  45b628:	b	45b7b4 <feof@plt+0x586d4>
  45b62c:	ldr	x8, [x20]
  45b630:	cbz	x8, 45b7cc <feof@plt+0x586ec>
  45b634:	ldp	x0, x9, [x20, #8]
  45b638:	sub	x9, x9, x0
  45b63c:	cmp	x9, #0x6
  45b640:	b.gt	45b7e0 <feof@plt+0x58700>
  45b644:	sub	x28, x0, x8
  45b648:	lsl	w9, w28, #1
  45b64c:	add	w9, w9, #0xe
  45b650:	sxtw	x21, w9
  45b654:	mov	x0, x8
  45b658:	mov	x1, x21
  45b65c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b660:	mov	x8, x0
  45b664:	add	x0, x0, w28, sxtw
  45b668:	stp	x8, x0, [x20]
  45b66c:	add	x8, x8, x21
  45b670:	b	45b7dc <feof@plt+0x586fc>
  45b674:	ldr	x8, [x20]
  45b678:	cbz	x8, 45b7f0 <feof@plt+0x58710>
  45b67c:	ldp	x0, x9, [x20, #8]
  45b680:	sub	x9, x9, x0
  45b684:	cmp	x9, #0x5
  45b688:	b.gt	45b804 <feof@plt+0x58724>
  45b68c:	sub	x28, x0, x8
  45b690:	lsl	w9, w28, #1
  45b694:	add	w9, w9, #0xc
  45b698:	sxtw	x21, w9
  45b69c:	mov	x0, x8
  45b6a0:	mov	x1, x21
  45b6a4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b6a8:	mov	x8, x0
  45b6ac:	add	x0, x0, w28, sxtw
  45b6b0:	stp	x8, x0, [x20]
  45b6b4:	add	x8, x8, x21
  45b6b8:	b	45b800 <feof@plt+0x58720>
  45b6bc:	mov	w0, #0x20                  	// #32
  45b6c0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b6c4:	stp	x0, x0, [x20]
  45b6c8:	add	x8, x0, #0x20
  45b6cc:	str	x8, [x20, #16]
  45b6d0:	mov	w8, #0x7570                	// #30064
  45b6d4:	movk	w8, #0x6572, lsl #16
  45b6d8:	strb	w23, [x0, #4]
  45b6dc:	str	w8, [x0]
  45b6e0:	mov	w8, #0x5                   	// #5
  45b6e4:	b	45b3fc <feof@plt+0x5831c>
  45b6e8:	mov	w0, #0x20                  	// #32
  45b6ec:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b6f0:	stp	x0, x0, [x20]
  45b6f4:	add	x8, x0, #0x20
  45b6f8:	str	x8, [x20, #16]
  45b6fc:	mov	x8, #0x6f6e                	// #28526
  45b700:	movk	x8, #0x6874, lsl #16
  45b704:	movk	x8, #0x6f72, lsl #32
  45b708:	movk	x8, #0x2077, lsl #48
  45b70c:	str	x8, [x0]
  45b710:	mov	w8, #0x8                   	// #8
  45b714:	b	45b3fc <feof@plt+0x5831c>
  45b718:	mov	w0, #0x20                  	// #32
  45b71c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b720:	stp	x0, x0, [x20]
  45b724:	add	x8, x0, #0x20
  45b728:	str	x8, [x20, #16]
  45b72c:	mov	w8, #0x6572                	// #25970
  45b730:	movk	w8, #0x2066, lsl #16
  45b734:	str	w8, [x0]
  45b738:	mov	w8, #0x4                   	// #4
  45b73c:	b	45b3fc <feof@plt+0x5831c>
  45b740:	mov	w0, #0x20                  	// #32
  45b744:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b748:	stp	x0, x0, [x20]
  45b74c:	add	x8, x0, #0x20
  45b750:	str	x8, [x20, #16]
  45b754:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b758:	add	x8, x8, #0x971
  45b75c:	ldr	x8, [x8]
  45b760:	mov	w9, #0x2079                	// #8313
  45b764:	strh	w9, [x0, #8]
  45b768:	str	x8, [x0]
  45b76c:	mov	w8, #0xa                   	// #10
  45b770:	b	45b3fc <feof@plt+0x5831c>
  45b774:	mov	w0, #0x20                  	// #32
  45b778:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b77c:	stp	x0, x0, [x20]
  45b780:	add	x8, x0, #0x20
  45b784:	str	x8, [x20, #16]
  45b788:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45b78c:	add	x8, x8, #0x97c
  45b790:	ldr	x8, [x8]
  45b794:	strb	w23, [x0, #8]
  45b798:	str	x8, [x0]
  45b79c:	mov	w8, #0x9                   	// #9
  45b7a0:	b	45b3fc <feof@plt+0x5831c>
  45b7a4:	mov	w0, #0x20                  	// #32
  45b7a8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b7ac:	stp	x0, x0, [x20]
  45b7b0:	add	x8, x0, #0x20
  45b7b4:	str	x8, [x20, #16]
  45b7b8:	mov	w8, #0x2063                	// #8291
  45b7bc:	strh	w8, [x0, #4]
  45b7c0:	mov	w8, #0x6e40                	// #28224
  45b7c4:	movk	w8, #0x676f, lsl #16
  45b7c8:	b	45b3f4 <feof@plt+0x58314>
  45b7cc:	mov	w0, #0x20                  	// #32
  45b7d0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b7d4:	stp	x0, x0, [x20]
  45b7d8:	add	x8, x0, #0x20
  45b7dc:	str	x8, [x20, #16]
  45b7e0:	stur	w24, [x0, #3]
  45b7e4:	str	w26, [x0]
  45b7e8:	mov	w8, #0x7                   	// #7
  45b7ec:	b	45b3fc <feof@plt+0x5831c>
  45b7f0:	mov	w0, #0x20                  	// #32
  45b7f4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b7f8:	stp	x0, x0, [x20]
  45b7fc:	add	x8, x0, #0x20
  45b800:	str	x8, [x20, #16]
  45b804:	strh	w25, [x0, #4]
  45b808:	str	w27, [x0]
  45b80c:	b	45b3f8 <feof@plt+0x58318>
  45b810:	mov	x19, xzr
  45b814:	mov	x0, x19
  45b818:	ldp	x20, x19, [sp, #80]
  45b81c:	ldp	x22, x21, [sp, #64]
  45b820:	ldp	x24, x23, [sp, #48]
  45b824:	ldp	x26, x25, [sp, #32]
  45b828:	ldp	x28, x27, [sp, #16]
  45b82c:	ldp	x29, x30, [sp], #96
  45b830:	ret
  45b834:	stp	x29, x30, [sp, #-96]!
  45b838:	stp	x20, x19, [sp, #80]
  45b83c:	mov	x19, x1
  45b840:	stp	x28, x27, [sp, #16]
  45b844:	stp	x26, x25, [sp, #32]
  45b848:	stp	x24, x23, [sp, #48]
  45b84c:	stp	x22, x21, [sp, #64]
  45b850:	mov	x29, sp
  45b854:	cbz	x1, 45bcbc <feof@plt+0x58bdc>
  45b858:	mov	w25, #0x6373                	// #25459
  45b85c:	mov	w26, #0x7275                	// #29301
  45b860:	mov	w27, #0x6572                	// #25970
  45b864:	mov	x20, x0
  45b868:	mov	x22, xzr
  45b86c:	mov	w24, #0x2065                	// #8293
  45b870:	movk	w25, #0x706f, lsl #16
  45b874:	movk	w26, #0x206e, lsl #16
  45b878:	movk	w27, #0x7574, lsl #16
  45b87c:	mov	w23, #0x202c                	// #8236
  45b880:	b	45b8c8 <feof@plt+0x587e8>
  45b884:	mov	w0, #0x20                  	// #32
  45b888:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b88c:	stp	x0, x0, [x20]
  45b890:	add	x8, x0, #0x20
  45b894:	str	x8, [x20, #16]
  45b898:	mov	w8, #0x756f                	// #30063
  45b89c:	movk	w8, #0x2074, lsl #16
  45b8a0:	str	w8, [x0]
  45b8a4:	ldr	x8, [x20, #8]
  45b8a8:	add	x8, x8, #0x4
  45b8ac:	str	x8, [x20, #8]
  45b8b0:	mov	x0, x20
  45b8b4:	mov	x1, x19
  45b8b8:	bl	45bcdc <feof@plt+0x58bfc>
  45b8bc:	mov	x19, x0
  45b8c0:	sub	x22, x22, #0x1
  45b8c4:	cbz	x0, 45bcbc <feof@plt+0x58bdc>
  45b8c8:	ldrb	w8, [x19]
  45b8cc:	cmp	w8, #0x58
  45b8d0:	b.gt	45b8e4 <feof@plt+0x58804>
  45b8d4:	cbz	w8, 45bcbc <feof@plt+0x58bdc>
  45b8d8:	cmp	w8, #0x58
  45b8dc:	b.ne	45b8f4 <feof@plt+0x58814>  // b.any
  45b8e0:	b	45bc40 <feof@plt+0x58b60>
  45b8e4:	cmp	w8, #0x59
  45b8e8:	b.eq	45bbc4 <feof@plt+0x58ae4>  // b.none
  45b8ec:	cmp	w8, #0x5a
  45b8f0:	b.eq	45bc10 <feof@plt+0x58b30>  // b.none
  45b8f4:	cbz	x22, 45b968 <feof@plt+0x58888>
  45b8f8:	ldr	x8, [x20]
  45b8fc:	cbz	x8, 45b940 <feof@plt+0x58860>
  45b900:	ldp	x0, x9, [x20, #8]
  45b904:	sub	x9, x9, x0
  45b908:	cmp	x9, #0x1
  45b90c:	b.gt	45b954 <feof@plt+0x58874>
  45b910:	sub	x28, x0, x8
  45b914:	lsl	w9, w28, #1
  45b918:	add	w9, w9, #0x4
  45b91c:	sxtw	x21, w9
  45b920:	mov	x0, x8
  45b924:	mov	x1, x21
  45b928:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b92c:	mov	x8, x0
  45b930:	add	x0, x0, w28, sxtw
  45b934:	stp	x8, x0, [x20]
  45b938:	add	x8, x8, x21
  45b93c:	b	45b950 <feof@plt+0x58870>
  45b940:	mov	w0, #0x20                  	// #32
  45b944:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b948:	stp	x0, x0, [x20]
  45b94c:	add	x8, x0, #0x20
  45b950:	str	x8, [x20, #16]
  45b954:	strh	w23, [x0]
  45b958:	ldr	x8, [x20, #8]
  45b95c:	add	x8, x8, #0x2
  45b960:	str	x8, [x20, #8]
  45b964:	ldrb	w8, [x19]
  45b968:	cmp	w8, #0x4d
  45b96c:	b.ne	45b9e8 <feof@plt+0x58908>  // b.any
  45b970:	ldr	x8, [x20]
  45b974:	add	x19, x19, #0x1
  45b978:	cbz	x8, 45b9bc <feof@plt+0x588dc>
  45b97c:	ldp	x0, x9, [x20, #8]
  45b980:	sub	x9, x9, x0
  45b984:	cmp	x9, #0x5
  45b988:	b.gt	45b9d0 <feof@plt+0x588f0>
  45b98c:	sub	x28, x0, x8
  45b990:	lsl	w9, w28, #1
  45b994:	add	w9, w9, #0xc
  45b998:	sxtw	x21, w9
  45b99c:	mov	x0, x8
  45b9a0:	mov	x1, x21
  45b9a4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45b9a8:	mov	x8, x0
  45b9ac:	add	x0, x0, w28, sxtw
  45b9b0:	stp	x8, x0, [x20]
  45b9b4:	add	x8, x8, x21
  45b9b8:	b	45b9cc <feof@plt+0x588ec>
  45b9bc:	mov	w0, #0x20                  	// #32
  45b9c0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45b9c4:	stp	x0, x0, [x20]
  45b9c8:	add	x8, x0, #0x20
  45b9cc:	str	x8, [x20, #16]
  45b9d0:	strh	w24, [x0, #4]
  45b9d4:	str	w25, [x0]
  45b9d8:	ldr	x8, [x20, #8]
  45b9dc:	add	x8, x8, #0x6
  45b9e0:	str	x8, [x20, #8]
  45b9e4:	ldrb	w8, [x19]
  45b9e8:	cmp	w8, #0x4e
  45b9ec:	b.ne	45ba74 <feof@plt+0x58994>  // b.any
  45b9f0:	ldrb	w8, [x19, #1]
  45b9f4:	cmp	w8, #0x6b
  45b9f8:	b.ne	45b8b0 <feof@plt+0x587d0>  // b.any
  45b9fc:	ldr	x8, [x20]
  45ba00:	add	x19, x19, #0x2
  45ba04:	cbz	x8, 45ba48 <feof@plt+0x58968>
  45ba08:	ldp	x0, x9, [x20, #8]
  45ba0c:	sub	x9, x9, x0
  45ba10:	cmp	x9, #0x6
  45ba14:	b.gt	45ba5c <feof@plt+0x5897c>
  45ba18:	sub	x28, x0, x8
  45ba1c:	lsl	w9, w28, #1
  45ba20:	add	w9, w9, #0xe
  45ba24:	sxtw	x21, w9
  45ba28:	mov	x0, x8
  45ba2c:	mov	x1, x21
  45ba30:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ba34:	mov	x8, x0
  45ba38:	add	x0, x0, w28, sxtw
  45ba3c:	stp	x8, x0, [x20]
  45ba40:	add	x8, x8, x21
  45ba44:	b	45ba58 <feof@plt+0x58978>
  45ba48:	mov	w0, #0x20                  	// #32
  45ba4c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ba50:	stp	x0, x0, [x20]
  45ba54:	add	x8, x0, #0x20
  45ba58:	str	x8, [x20, #16]
  45ba5c:	stur	w26, [x0, #3]
  45ba60:	str	w27, [x0]
  45ba64:	ldr	x8, [x20, #8]
  45ba68:	add	x8, x8, #0x7
  45ba6c:	str	x8, [x20, #8]
  45ba70:	ldrb	w8, [x19]
  45ba74:	cmp	w8, #0x4c
  45ba78:	b.eq	45bad8 <feof@plt+0x589f8>  // b.none
  45ba7c:	cmp	w8, #0x4b
  45ba80:	b.eq	45bb24 <feof@plt+0x58a44>  // b.none
  45ba84:	cmp	w8, #0x4a
  45ba88:	b.ne	45b8b0 <feof@plt+0x587d0>  // b.any
  45ba8c:	ldr	x8, [x20]
  45ba90:	add	x19, x19, #0x1
  45ba94:	cbz	x8, 45b884 <feof@plt+0x587a4>
  45ba98:	ldp	x0, x9, [x20, #8]
  45ba9c:	sub	x9, x9, x0
  45baa0:	cmp	x9, #0x3
  45baa4:	b.gt	45b898 <feof@plt+0x587b8>
  45baa8:	sub	x28, x0, x8
  45baac:	lsl	w9, w28, #1
  45bab0:	add	w9, w9, #0x8
  45bab4:	sxtw	x21, w9
  45bab8:	mov	x0, x8
  45babc:	mov	x1, x21
  45bac0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bac4:	mov	x8, x0
  45bac8:	add	x0, x0, w28, sxtw
  45bacc:	stp	x8, x0, [x20]
  45bad0:	add	x8, x8, x21
  45bad4:	b	45b894 <feof@plt+0x587b4>
  45bad8:	ldr	x8, [x20]
  45badc:	add	x19, x19, #0x1
  45bae0:	cbz	x8, 45bb70 <feof@plt+0x58a90>
  45bae4:	ldp	x0, x9, [x20, #8]
  45bae8:	sub	x9, x9, x0
  45baec:	cmp	x9, #0x4
  45baf0:	b.gt	45bb84 <feof@plt+0x58aa4>
  45baf4:	sub	x28, x0, x8
  45baf8:	lsl	w9, w28, #1
  45bafc:	add	w9, w9, #0xa
  45bb00:	sxtw	x21, w9
  45bb04:	mov	x0, x8
  45bb08:	mov	x1, x21
  45bb0c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bb10:	mov	x8, x0
  45bb14:	add	x0, x0, w28, sxtw
  45bb18:	stp	x8, x0, [x20]
  45bb1c:	add	x8, x8, x21
  45bb20:	b	45bb80 <feof@plt+0x58aa0>
  45bb24:	ldr	x8, [x20]
  45bb28:	add	x19, x19, #0x1
  45bb2c:	cbz	x8, 45bba4 <feof@plt+0x58ac4>
  45bb30:	ldp	x0, x9, [x20, #8]
  45bb34:	sub	x9, x9, x0
  45bb38:	cmp	x9, #0x3
  45bb3c:	b.gt	45bbb8 <feof@plt+0x58ad8>
  45bb40:	sub	x28, x0, x8
  45bb44:	lsl	w9, w28, #1
  45bb48:	add	w9, w9, #0x8
  45bb4c:	sxtw	x21, w9
  45bb50:	mov	x0, x8
  45bb54:	mov	x1, x21
  45bb58:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bb5c:	mov	x8, x0
  45bb60:	add	x0, x0, w28, sxtw
  45bb64:	stp	x8, x0, [x20]
  45bb68:	add	x8, x8, x21
  45bb6c:	b	45bbb4 <feof@plt+0x58ad4>
  45bb70:	mov	w0, #0x20                  	// #32
  45bb74:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45bb78:	stp	x0, x0, [x20]
  45bb7c:	add	x8, x0, #0x20
  45bb80:	str	x8, [x20, #16]
  45bb84:	mov	w8, #0x20                  	// #32
  45bb88:	strb	w8, [x0, #4]
  45bb8c:	mov	w8, #0x616c                	// #24940
  45bb90:	movk	w8, #0x797a, lsl #16
  45bb94:	str	w8, [x0]
  45bb98:	ldr	x8, [x20, #8]
  45bb9c:	add	x8, x8, #0x5
  45bba0:	b	45b8ac <feof@plt+0x587cc>
  45bba4:	mov	w0, #0x20                  	// #32
  45bba8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45bbac:	stp	x0, x0, [x20]
  45bbb0:	add	x8, x0, #0x20
  45bbb4:	str	x8, [x20, #16]
  45bbb8:	mov	w8, #0x6572                	// #25970
  45bbbc:	movk	w8, #0x2066, lsl #16
  45bbc0:	b	45b8a0 <feof@plt+0x587c0>
  45bbc4:	cbz	x22, 45bc40 <feof@plt+0x58b60>
  45bbc8:	ldr	x8, [x20]
  45bbcc:	cbz	x8, 45bc18 <feof@plt+0x58b38>
  45bbd0:	ldp	x0, x9, [x20, #8]
  45bbd4:	sub	x9, x9, x0
  45bbd8:	cmp	x9, #0x1
  45bbdc:	b.gt	45bc2c <feof@plt+0x58b4c>
  45bbe0:	sub	x22, x0, x8
  45bbe4:	lsl	w9, w22, #1
  45bbe8:	add	w9, w9, #0x4
  45bbec:	sxtw	x21, w9
  45bbf0:	mov	x0, x8
  45bbf4:	mov	x1, x21
  45bbf8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bbfc:	mov	x8, x0
  45bc00:	add	x0, x0, w22, sxtw
  45bc04:	stp	x8, x0, [x20]
  45bc08:	add	x8, x8, x21
  45bc0c:	b	45bc28 <feof@plt+0x58b48>
  45bc10:	add	x19, x19, #0x1
  45bc14:	b	45bcbc <feof@plt+0x58bdc>
  45bc18:	mov	w0, #0x20                  	// #32
  45bc1c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45bc20:	stp	x0, x0, [x20]
  45bc24:	add	x8, x0, #0x20
  45bc28:	str	x8, [x20, #16]
  45bc2c:	mov	w8, #0x202c                	// #8236
  45bc30:	strh	w8, [x0]
  45bc34:	ldr	x8, [x20, #8]
  45bc38:	add	x8, x8, #0x2
  45bc3c:	str	x8, [x20, #8]
  45bc40:	ldr	x8, [x20]
  45bc44:	add	x19, x19, #0x1
  45bc48:	cbz	x8, 45bc8c <feof@plt+0x58bac>
  45bc4c:	ldp	x0, x9, [x20, #8]
  45bc50:	sub	x9, x9, x0
  45bc54:	cmp	x9, #0x2
  45bc58:	b.gt	45bca0 <feof@plt+0x58bc0>
  45bc5c:	sub	x22, x0, x8
  45bc60:	lsl	w9, w22, #1
  45bc64:	add	w9, w9, #0x6
  45bc68:	sxtw	x21, w9
  45bc6c:	mov	x0, x8
  45bc70:	mov	x1, x21
  45bc74:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bc78:	mov	x8, x0
  45bc7c:	add	x0, x0, w22, sxtw
  45bc80:	stp	x8, x0, [x20]
  45bc84:	add	x8, x8, x21
  45bc88:	b	45bc9c <feof@plt+0x58bbc>
  45bc8c:	mov	w0, #0x20                  	// #32
  45bc90:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45bc94:	stp	x0, x0, [x20]
  45bc98:	add	x8, x0, #0x20
  45bc9c:	str	x8, [x20, #16]
  45bca0:	mov	w8, #0x2e                  	// #46
  45bca4:	mov	w9, #0x2e2e                	// #11822
  45bca8:	strb	w8, [x0, #2]
  45bcac:	strh	w9, [x0]
  45bcb0:	ldr	x8, [x20, #8]
  45bcb4:	add	x8, x8, #0x3
  45bcb8:	str	x8, [x20, #8]
  45bcbc:	mov	x0, x19
  45bcc0:	ldp	x20, x19, [sp, #80]
  45bcc4:	ldp	x22, x21, [sp, #64]
  45bcc8:	ldp	x24, x23, [sp, #48]
  45bccc:	ldp	x26, x25, [sp, #32]
  45bcd0:	ldp	x28, x27, [sp, #16]
  45bcd4:	ldp	x29, x30, [sp], #96
  45bcd8:	ret
  45bcdc:	sub	sp, sp, #0x60
  45bce0:	stp	x29, x30, [sp, #32]
  45bce4:	stp	x24, x23, [sp, #48]
  45bce8:	stp	x22, x21, [sp, #64]
  45bcec:	stp	x20, x19, [sp, #80]
  45bcf0:	add	x29, sp, #0x20
  45bcf4:	cbz	x1, 45c9ac <feof@plt+0x598cc>
  45bcf8:	ldrb	w8, [x1]
  45bcfc:	mov	x21, x1
  45bd00:	mov	x20, xzr
  45bd04:	sub	w8, w8, #0x41
  45bd08:	cmp	w8, #0x39
  45bd0c:	b.hi	45d45c <feof@plt+0x5a37c>  // b.pmore
  45bd10:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45bd14:	add	x9, x9, #0x6f2
  45bd18:	adr	x10, 45bd2c <feof@plt+0x58c4c>
  45bd1c:	ldrh	w11, [x9, x8, lsl #1]
  45bd20:	add	x10, x10, x11, lsl #2
  45bd24:	mov	x19, x0
  45bd28:	br	x10
  45bd2c:	mov	x0, x19
  45bd30:	mov	x1, x21
  45bd34:	bl	45fc2c <feof@plt+0x5cb4c>
  45bd38:	ldr	x8, [x19]
  45bd3c:	mov	x20, x0
  45bd40:	cbz	x8, 45bdac <feof@plt+0x58ccc>
  45bd44:	ldp	x0, x9, [x19, #8]
  45bd48:	sub	x9, x9, x0
  45bd4c:	cmp	x9, #0x7
  45bd50:	b.gt	45bdc0 <feof@plt+0x58ce0>
  45bd54:	sub	x22, x0, x8
  45bd58:	lsl	w9, w22, #1
  45bd5c:	add	w9, w9, #0x10
  45bd60:	sxtw	x21, w9
  45bd64:	mov	x0, x8
  45bd68:	mov	x1, x21
  45bd6c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bd70:	mov	x8, x0
  45bd74:	add	x0, x0, w22, sxtw
  45bd78:	add	x9, x8, x21
  45bd7c:	stp	x8, x0, [x19]
  45bd80:	str	x9, [x19, #16]
  45bd84:	b	45bdc0 <feof@plt+0x58ce0>
  45bd88:	add	x1, x21, #0x1
  45bd8c:	mov	x0, x19
  45bd90:	ldp	x20, x19, [sp, #80]
  45bd94:	ldp	x22, x21, [sp, #64]
  45bd98:	ldp	x24, x23, [sp, #48]
  45bd9c:	ldp	x29, x30, [sp, #32]
  45bda0:	mov	w2, #0x2                   	// #2
  45bda4:	add	sp, sp, #0x60
  45bda8:	b	45ab14 <feof@plt+0x57a34>
  45bdac:	mov	w0, #0x20                  	// #32
  45bdb0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45bdb4:	add	x8, x0, #0x20
  45bdb8:	stp	x0, x0, [x19]
  45bdbc:	str	x8, [x19, #16]
  45bdc0:	mov	x8, #0x7566                	// #30054
  45bdc4:	movk	x8, #0x636e, lsl #16
  45bdc8:	movk	x8, #0x6974, lsl #32
  45bdcc:	movk	x8, #0x6e6f, lsl #48
  45bdd0:	str	x8, [x0]
  45bdd4:	ldr	x8, [x19, #8]
  45bdd8:	add	x8, x8, #0x8
  45bddc:	b	45d458 <feof@plt+0x5a378>
  45bde0:	add	x1, x21, #0x1
  45bde4:	mov	x0, x19
  45bde8:	bl	45bcdc <feof@plt+0x58bfc>
  45bdec:	ldr	x8, [x19]
  45bdf0:	mov	x20, x0
  45bdf4:	cbz	x8, 45ca2c <feof@plt+0x5994c>
  45bdf8:	ldp	x0, x9, [x19, #8]
  45bdfc:	sub	x9, x9, x0
  45be00:	cmp	x9, #0x1
  45be04:	b.gt	45ca40 <feof@plt+0x59960>
  45be08:	sub	x22, x0, x8
  45be0c:	lsl	w9, w22, #1
  45be10:	add	w9, w9, #0x4
  45be14:	sxtw	x21, w9
  45be18:	mov	x0, x8
  45be1c:	mov	x1, x21
  45be20:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45be24:	mov	x8, x0
  45be28:	add	x0, x0, w22, sxtw
  45be2c:	add	x9, x8, x21
  45be30:	stp	x8, x0, [x19]
  45be34:	str	x9, [x19, #16]
  45be38:	b	45ca40 <feof@plt+0x59960>
  45be3c:	ldrb	w8, [x21, #1]!
  45be40:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45be44:	add	x9, x9, #0xe98
  45be48:	ldrh	w10, [x9, x8, lsl #1]
  45be4c:	tbz	w10, #2, 45c9ac <feof@plt+0x598cc>
  45be50:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  45be54:	movk	x10, #0x9998
  45be58:	mov	x22, xzr
  45be5c:	movk	x10, #0x1999, lsl #48
  45be60:	add	x11, x10, x22, lsl #1
  45be64:	ror	x11, x11, #1
  45be68:	cmp	x11, x10
  45be6c:	b.hi	45c9ac <feof@plt+0x598cc>  // b.pmore
  45be70:	add	x11, x22, x22, lsl #2
  45be74:	lsl	x11, x11, #1
  45be78:	add	x11, x11, w8, uxtb
  45be7c:	ldrb	w8, [x21, #1]!
  45be80:	sub	x22, x11, #0x30
  45be84:	ldrh	w12, [x9, x8, lsl #1]
  45be88:	tbnz	w12, #2, 45be60 <feof@plt+0x58d80>
  45be8c:	mov	x20, xzr
  45be90:	cbz	w8, 45d45c <feof@plt+0x5a37c>
  45be94:	tbnz	x22, #63, 45d45c <feof@plt+0x5a37c>
  45be98:	ldr	x8, [x19]
  45be9c:	cbz	x8, 45d348 <feof@plt+0x5a268>
  45bea0:	ldp	x0, x9, [x19, #8]
  45bea4:	sub	x9, x9, x0
  45bea8:	cmp	x9, #0x6
  45beac:	b.gt	45d35c <feof@plt+0x5a27c>
  45beb0:	sub	x23, x0, x8
  45beb4:	lsl	w9, w23, #1
  45beb8:	add	w9, w9, #0xe
  45bebc:	sxtw	x20, w9
  45bec0:	mov	x0, x8
  45bec4:	mov	x1, x20
  45bec8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45becc:	mov	x8, x0
  45bed0:	add	x0, x0, w23, sxtw
  45bed4:	add	x9, x8, x20
  45bed8:	stp	x8, x0, [x19]
  45bedc:	str	x9, [x19, #16]
  45bee0:	b	45d35c <feof@plt+0x5a27c>
  45bee4:	add	x1, x21, #0x1
  45bee8:	add	x0, sp, #0x8
  45beec:	stp	xzr, xzr, [sp, #8]
  45bef0:	str	xzr, [sp, #24]
  45bef4:	bl	45adfc <feof@plt+0x57d1c>
  45bef8:	ldp	x9, x8, [sp, #8]
  45befc:	mov	x1, x0
  45bf00:	mov	x0, x19
  45bf04:	sub	w10, w8, w9
  45bf08:	cmp	x8, x9
  45bf0c:	csel	w23, wzr, w10, eq  // eq = none
  45bf10:	bl	45fc2c <feof@plt+0x5cb4c>
  45bf14:	ldr	x8, [x19]
  45bf18:	mov	x20, x0
  45bf1c:	cbz	x8, 45ca54 <feof@plt+0x59974>
  45bf20:	ldp	x0, x9, [x19, #8]
  45bf24:	sub	x9, x9, x0
  45bf28:	cmp	x9, #0x7
  45bf2c:	b.gt	45ca68 <feof@plt+0x59988>
  45bf30:	sub	x22, x0, x8
  45bf34:	lsl	w9, w22, #1
  45bf38:	add	w9, w9, #0x10
  45bf3c:	sxtw	x21, w9
  45bf40:	mov	x0, x8
  45bf44:	mov	x1, x21
  45bf48:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bf4c:	mov	x8, x0
  45bf50:	add	x0, x0, w22, sxtw
  45bf54:	add	x9, x8, x21
  45bf58:	stp	x8, x0, [x19]
  45bf5c:	str	x9, [x19, #16]
  45bf60:	b	45ca68 <feof@plt+0x59988>
  45bf64:	mov	x22, x21
  45bf68:	ldrb	w9, [x22, #1]!
  45bf6c:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45bf70:	add	x8, x8, #0xe98
  45bf74:	ldrh	w9, [x8, x9, lsl #1]
  45bf78:	tbnz	w9, #2, 45c9b4 <feof@plt+0x598d4>
  45bf7c:	mov	x23, xzr
  45bf80:	mov	x1, x22
  45bf84:	b	45c9d4 <feof@plt+0x598f4>
  45bf88:	add	x1, x21, #0x1
  45bf8c:	add	x0, sp, #0x8
  45bf90:	stp	xzr, xzr, [sp, #8]
  45bf94:	str	xzr, [sp, #24]
  45bf98:	bl	45bcdc <feof@plt+0x58bfc>
  45bf9c:	ldp	x9, x8, [sp, #8]
  45bfa0:	mov	x1, x0
  45bfa4:	mov	x0, x19
  45bfa8:	sub	w10, w8, w9
  45bfac:	cmp	x8, x9
  45bfb0:	csel	w23, wzr, w10, eq  // eq = none
  45bfb4:	bl	45bcdc <feof@plt+0x58bfc>
  45bfb8:	ldr	x8, [x19]
  45bfbc:	mov	x20, x0
  45bfc0:	cbz	x8, 45cae0 <feof@plt+0x59a00>
  45bfc4:	ldp	x0, x9, [x19, #8]
  45bfc8:	sub	x9, x9, x0
  45bfcc:	cmp	x9, #0x0
  45bfd0:	b.gt	45caf4 <feof@plt+0x59a14>
  45bfd4:	sub	x22, x0, x8
  45bfd8:	lsl	w9, w22, #1
  45bfdc:	add	w9, w9, #0x2
  45bfe0:	sxtw	x21, w9
  45bfe4:	mov	x0, x8
  45bfe8:	mov	x1, x21
  45bfec:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45bff0:	mov	x8, x0
  45bff4:	add	x0, x0, w22, sxtw
  45bff8:	add	x9, x8, x21
  45bffc:	stp	x8, x0, [x19]
  45c000:	str	x9, [x19, #16]
  45c004:	b	45caf4 <feof@plt+0x59a14>
  45c008:	ldrb	w8, [x21, #1]
  45c00c:	cmp	w8, #0x68
  45c010:	b.eq	45cfb4 <feof@plt+0x59ed4>  // b.none
  45c014:	cmp	w8, #0x67
  45c018:	b.ne	45c9ac <feof@plt+0x598cc>  // b.any
  45c01c:	ldr	x8, [x19]
  45c020:	add	x20, x21, #0x2
  45c024:	cbz	x8, 45d214 <feof@plt+0x5a134>
  45c028:	ldp	x0, x9, [x19, #8]
  45c02c:	sub	x9, x9, x0
  45c030:	cmp	x9, #0x5
  45c034:	b.gt	45d228 <feof@plt+0x5a148>
  45c038:	sub	x22, x0, x8
  45c03c:	lsl	w9, w22, #1
  45c040:	add	w9, w9, #0xc
  45c044:	sxtw	x21, w9
  45c048:	mov	x0, x8
  45c04c:	mov	x1, x21
  45c050:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c054:	mov	x8, x0
  45c058:	add	x0, x0, w22, sxtw
  45c05c:	add	x9, x8, x21
  45c060:	stp	x8, x0, [x19]
  45c064:	str	x9, [x19, #16]
  45c068:	b	45d228 <feof@plt+0x5a148>
  45c06c:	ldr	x8, [x19]
  45c070:	add	x20, x21, #0x1
  45c074:	cbz	x8, 45cb60 <feof@plt+0x59a80>
  45c078:	ldp	x0, x9, [x19, #8]
  45c07c:	sub	x9, x9, x0
  45c080:	cmp	x9, #0x6
  45c084:	b.gt	45cb74 <feof@plt+0x59a94>
  45c088:	sub	x22, x0, x8
  45c08c:	lsl	w9, w22, #1
  45c090:	add	w9, w9, #0xe
  45c094:	sxtw	x21, w9
  45c098:	mov	x0, x8
  45c09c:	mov	x1, x21
  45c0a0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c0a4:	mov	x8, x0
  45c0a8:	add	x0, x0, w22, sxtw
  45c0ac:	add	x9, x8, x21
  45c0b0:	stp	x8, x0, [x19]
  45c0b4:	str	x9, [x19, #16]
  45c0b8:	b	45cb74 <feof@plt+0x59a94>
  45c0bc:	ldrb	w8, [x21, #1]!
  45c0c0:	sub	w8, w8, #0x46
  45c0c4:	cmp	w8, #0x13
  45c0c8:	b.hi	45c0e4 <feof@plt+0x59004>  // b.pmore
  45c0cc:	mov	w9, #0x1                   	// #1
  45c0d0:	lsl	w8, w9, w8
  45c0d4:	mov	w9, #0x9001                	// #36865
  45c0d8:	movk	w9, #0xb, lsl #16
  45c0dc:	tst	w8, w9
  45c0e0:	b.ne	45bd2c <feof@plt+0x58c4c>  // b.any
  45c0e4:	mov	x0, x19
  45c0e8:	mov	x1, x21
  45c0ec:	bl	45bcdc <feof@plt+0x58bfc>
  45c0f0:	ldr	x8, [x19]
  45c0f4:	mov	x20, x0
  45c0f8:	cbz	x8, 45d32c <feof@plt+0x5a24c>
  45c0fc:	ldp	x0, x9, [x19, #8]
  45c100:	sub	x9, x9, x0
  45c104:	cmp	x9, #0x0
  45c108:	b.gt	45c13c <feof@plt+0x5905c>
  45c10c:	sub	x22, x0, x8
  45c110:	lsl	w9, w22, #1
  45c114:	add	w9, w9, #0x2
  45c118:	sxtw	x21, w9
  45c11c:	mov	x0, x8
  45c120:	mov	x1, x21
  45c124:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c128:	mov	x8, x0
  45c12c:	add	x0, x0, w22, sxtw
  45c130:	add	x9, x8, x21
  45c134:	stp	x8, x0, [x19]
  45c138:	str	x9, [x19, #16]
  45c13c:	mov	w8, #0x2a                  	// #42
  45c140:	b	45d44c <feof@plt+0x5a36c>
  45c144:	ldr	x8, [x19]
  45c148:	add	x20, x21, #0x1
  45c14c:	cbz	x8, 45cb98 <feof@plt+0x59ab8>
  45c150:	ldp	x0, x9, [x19, #8]
  45c154:	sub	x9, x9, x0
  45c158:	cmp	x9, #0x3
  45c15c:	b.gt	45c190 <feof@plt+0x590b0>
  45c160:	sub	x22, x0, x8
  45c164:	lsl	w9, w22, #1
  45c168:	add	w9, w9, #0x8
  45c16c:	sxtw	x21, w9
  45c170:	mov	x0, x8
  45c174:	mov	x1, x21
  45c178:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c17c:	mov	x8, x0
  45c180:	add	x0, x0, w22, sxtw
  45c184:	add	x9, x8, x21
  45c188:	stp	x8, x0, [x19]
  45c18c:	str	x9, [x19, #16]
  45c190:	mov	w8, #0x6863                	// #26723
  45c194:	movk	w8, #0x7261, lsl #16
  45c198:	b	45d264 <feof@plt+0x5a184>
  45c19c:	ldr	x8, [x19]
  45c1a0:	add	x20, x21, #0x1
  45c1a4:	cbz	x8, 45cbb8 <feof@plt+0x59ad8>
  45c1a8:	ldp	x0, x9, [x19, #8]
  45c1ac:	sub	x9, x9, x0
  45c1b0:	cmp	x9, #0x3
  45c1b4:	b.gt	45c1e8 <feof@plt+0x59108>
  45c1b8:	sub	x22, x0, x8
  45c1bc:	lsl	w9, w22, #1
  45c1c0:	add	w9, w9, #0x8
  45c1c4:	sxtw	x21, w9
  45c1c8:	mov	x0, x8
  45c1cc:	mov	x1, x21
  45c1d0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c1d4:	mov	x8, x0
  45c1d8:	add	x0, x0, w22, sxtw
  45c1dc:	add	x9, x8, x21
  45c1e0:	stp	x8, x0, [x19]
  45c1e4:	str	x9, [x19, #16]
  45c1e8:	mov	w8, #0x6f62                	// #28514
  45c1ec:	movk	w8, #0x6c6f, lsl #16
  45c1f0:	b	45d264 <feof@plt+0x5a184>
  45c1f4:	ldr	x8, [x19]
  45c1f8:	add	x20, x21, #0x1
  45c1fc:	cbz	x8, 45cbd8 <feof@plt+0x59af8>
  45c200:	ldp	x0, x9, [x19, #8]
  45c204:	sub	x9, x9, x0
  45c208:	cmp	x9, #0x4
  45c20c:	b.gt	45cbec <feof@plt+0x59b0c>
  45c210:	sub	x22, x0, x8
  45c214:	lsl	w9, w22, #1
  45c218:	add	w9, w9, #0xa
  45c21c:	sxtw	x21, w9
  45c220:	mov	x0, x8
  45c224:	mov	x1, x21
  45c228:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c22c:	mov	x8, x0
  45c230:	add	x0, x0, w22, sxtw
  45c234:	add	x9, x8, x21
  45c238:	stp	x8, x0, [x19]
  45c23c:	str	x9, [x19, #16]
  45c240:	b	45cbec <feof@plt+0x59b0c>
  45c244:	ldr	x8, [x19]
  45c248:	add	x20, x21, #0x1
  45c24c:	cbz	x8, 45cbf4 <feof@plt+0x59b14>
  45c250:	ldp	x0, x9, [x19, #8]
  45c254:	sub	x9, x9, x0
  45c258:	cmp	x9, #0x5
  45c25c:	b.gt	45cc08 <feof@plt+0x59b28>
  45c260:	sub	x22, x0, x8
  45c264:	lsl	w9, w22, #1
  45c268:	add	w9, w9, #0xc
  45c26c:	sxtw	x21, w9
  45c270:	mov	x0, x8
  45c274:	mov	x1, x21
  45c278:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c27c:	mov	x8, x0
  45c280:	add	x0, x0, w22, sxtw
  45c284:	add	x9, x8, x21
  45c288:	stp	x8, x0, [x19]
  45c28c:	str	x9, [x19, #16]
  45c290:	b	45cc08 <feof@plt+0x59b28>
  45c294:	ldr	x8, [x19]
  45c298:	add	x20, x21, #0x1
  45c29c:	cbz	x8, 45cc18 <feof@plt+0x59b38>
  45c2a0:	ldp	x0, x9, [x19, #8]
  45c2a4:	sub	x9, x9, x0
  45c2a8:	cmp	x9, #0x3
  45c2ac:	b.gt	45c2e0 <feof@plt+0x59200>
  45c2b0:	sub	x22, x0, x8
  45c2b4:	lsl	w9, w22, #1
  45c2b8:	add	w9, w9, #0x8
  45c2bc:	sxtw	x21, w9
  45c2c0:	mov	x0, x8
  45c2c4:	mov	x1, x21
  45c2c8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c2cc:	mov	x8, x0
  45c2d0:	add	x0, x0, w22, sxtw
  45c2d4:	add	x9, x8, x21
  45c2d8:	stp	x8, x0, [x19]
  45c2dc:	str	x9, [x19, #16]
  45c2e0:	mov	w8, #0x6572                	// #25970
  45c2e4:	movk	w8, #0x6c61, lsl #16
  45c2e8:	b	45d264 <feof@plt+0x5a184>
  45c2ec:	ldr	x8, [x19]
  45c2f0:	add	x20, x21, #0x1
  45c2f4:	cbz	x8, 45cc38 <feof@plt+0x59b58>
  45c2f8:	ldp	x0, x9, [x19, #8]
  45c2fc:	sub	x9, x9, x0
  45c300:	cmp	x9, #0x4
  45c304:	b.gt	45cc4c <feof@plt+0x59b6c>
  45c308:	sub	x22, x0, x8
  45c30c:	lsl	w9, w22, #1
  45c310:	add	w9, w9, #0xa
  45c314:	sxtw	x21, w9
  45c318:	mov	x0, x8
  45c31c:	mov	x1, x21
  45c320:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c324:	mov	x8, x0
  45c328:	add	x0, x0, w22, sxtw
  45c32c:	add	x9, x8, x21
  45c330:	stp	x8, x0, [x19]
  45c334:	str	x9, [x19, #16]
  45c338:	b	45cc4c <feof@plt+0x59b6c>
  45c33c:	ldr	x8, [x19]
  45c340:	add	x20, x21, #0x1
  45c344:	cbz	x8, 45cc5c <feof@plt+0x59b7c>
  45c348:	ldp	x0, x9, [x19, #8]
  45c34c:	sub	x9, x9, x0
  45c350:	cmp	x9, #0x3
  45c354:	b.gt	45c388 <feof@plt+0x592a8>
  45c358:	sub	x22, x0, x8
  45c35c:	lsl	w9, w22, #1
  45c360:	add	w9, w9, #0x8
  45c364:	sxtw	x21, w9
  45c368:	mov	x0, x8
  45c36c:	mov	x1, x21
  45c370:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c374:	mov	x8, x0
  45c378:	add	x0, x0, w22, sxtw
  45c37c:	add	x9, x8, x21
  45c380:	stp	x8, x0, [x19]
  45c384:	str	x9, [x19, #16]
  45c388:	mov	w8, #0x7962                	// #31074
  45c38c:	movk	w8, #0x6574, lsl #16
  45c390:	b	45d264 <feof@plt+0x5a184>
  45c394:	ldr	x8, [x19]
  45c398:	add	x20, x21, #0x1
  45c39c:	cbz	x8, 45cc7c <feof@plt+0x59b9c>
  45c3a0:	ldp	x0, x9, [x19, #8]
  45c3a4:	sub	x9, x9, x0
  45c3a8:	cmp	x9, #0x4
  45c3ac:	b.gt	45cc90 <feof@plt+0x59bb0>
  45c3b0:	sub	x22, x0, x8
  45c3b4:	lsl	w9, w22, #1
  45c3b8:	add	w9, w9, #0xa
  45c3bc:	sxtw	x21, w9
  45c3c0:	mov	x0, x8
  45c3c4:	mov	x1, x21
  45c3c8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c3cc:	mov	x8, x0
  45c3d0:	add	x0, x0, w22, sxtw
  45c3d4:	add	x9, x8, x21
  45c3d8:	stp	x8, x0, [x19]
  45c3dc:	str	x9, [x19, #16]
  45c3e0:	b	45cc90 <feof@plt+0x59bb0>
  45c3e4:	ldr	x8, [x19]
  45c3e8:	add	x20, x21, #0x1
  45c3ec:	cbz	x8, 45cca0 <feof@plt+0x59bc0>
  45c3f0:	ldp	x0, x9, [x19, #8]
  45c3f4:	sub	x9, x9, x0
  45c3f8:	cmp	x9, #0x2
  45c3fc:	b.gt	45ccb4 <feof@plt+0x59bd4>
  45c400:	sub	x22, x0, x8
  45c404:	lsl	w9, w22, #1
  45c408:	add	w9, w9, #0x6
  45c40c:	sxtw	x21, w9
  45c410:	mov	x0, x8
  45c414:	mov	x1, x21
  45c418:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c41c:	mov	x8, x0
  45c420:	add	x0, x0, w22, sxtw
  45c424:	add	x9, x8, x21
  45c428:	stp	x8, x0, [x19]
  45c42c:	str	x9, [x19, #16]
  45c430:	b	45ccb4 <feof@plt+0x59bd4>
  45c434:	ldr	x8, [x19]
  45c438:	add	x20, x21, #0x1
  45c43c:	cbz	x8, 45ccd0 <feof@plt+0x59bf0>
  45c440:	ldp	x0, x9, [x19, #8]
  45c444:	sub	x9, x9, x0
  45c448:	cmp	x9, #0x4
  45c44c:	b.gt	45cce4 <feof@plt+0x59c04>
  45c450:	sub	x22, x0, x8
  45c454:	lsl	w9, w22, #1
  45c458:	add	w9, w9, #0xa
  45c45c:	sxtw	x21, w9
  45c460:	mov	x0, x8
  45c464:	mov	x1, x21
  45c468:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c46c:	mov	x8, x0
  45c470:	add	x0, x0, w22, sxtw
  45c474:	add	x9, x8, x21
  45c478:	stp	x8, x0, [x19]
  45c47c:	str	x9, [x19, #16]
  45c480:	b	45cce4 <feof@plt+0x59c04>
  45c484:	ldr	x8, [x19]
  45c488:	add	x20, x21, #0x1
  45c48c:	cbz	x8, 45ccf4 <feof@plt+0x59c14>
  45c490:	ldp	x0, x9, [x19, #8]
  45c494:	sub	x9, x9, x0
  45c498:	cmp	x9, #0x3
  45c49c:	b.gt	45cd08 <feof@plt+0x59c28>
  45c4a0:	sub	x22, x0, x8
  45c4a4:	lsl	w9, w22, #1
  45c4a8:	add	w9, w9, #0x8
  45c4ac:	sxtw	x21, w9
  45c4b0:	mov	x0, x8
  45c4b4:	mov	x1, x21
  45c4b8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c4bc:	mov	x8, x0
  45c4c0:	add	x0, x0, w22, sxtw
  45c4c4:	add	x9, x8, x21
  45c4c8:	stp	x8, x0, [x19]
  45c4cc:	str	x9, [x19, #16]
  45c4d0:	b	45cd08 <feof@plt+0x59c28>
  45c4d4:	ldr	x8, [x19]
  45c4d8:	add	x20, x21, #0x1
  45c4dc:	cbz	x8, 45cd18 <feof@plt+0x59c38>
  45c4e0:	ldp	x0, x9, [x19, #8]
  45c4e4:	sub	x9, x9, x0
  45c4e8:	cmp	x9, #0x3
  45c4ec:	b.gt	45c520 <feof@plt+0x59440>
  45c4f0:	sub	x22, x0, x8
  45c4f4:	lsl	w9, w22, #1
  45c4f8:	add	w9, w9, #0x8
  45c4fc:	sxtw	x21, w9
  45c500:	mov	x0, x8
  45c504:	mov	x1, x21
  45c508:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c50c:	mov	x8, x0
  45c510:	add	x0, x0, w22, sxtw
  45c514:	add	x9, x8, x21
  45c518:	stp	x8, x0, [x19]
  45c51c:	str	x9, [x19, #16]
  45c520:	mov	w8, #0x6f6c                	// #28524
  45c524:	movk	w8, #0x676e, lsl #16
  45c528:	b	45d264 <feof@plt+0x5a184>
  45c52c:	ldr	x8, [x19]
  45c530:	add	x20, x21, #0x1
  45c534:	cbz	x8, 45cd38 <feof@plt+0x59c58>
  45c538:	ldp	x0, x9, [x19, #8]
  45c53c:	sub	x9, x9, x0
  45c540:	cmp	x9, #0x4
  45c544:	b.gt	45cd4c <feof@plt+0x59c6c>
  45c548:	sub	x22, x0, x8
  45c54c:	lsl	w9, w22, #1
  45c550:	add	w9, w9, #0xa
  45c554:	sxtw	x21, w9
  45c558:	mov	x0, x8
  45c55c:	mov	x1, x21
  45c560:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c564:	mov	x8, x0
  45c568:	add	x0, x0, w22, sxtw
  45c56c:	add	x9, x8, x21
  45c570:	stp	x8, x0, [x19]
  45c574:	str	x9, [x19, #16]
  45c578:	b	45cd4c <feof@plt+0x59c6c>
  45c57c:	ldr	x8, [x19]
  45c580:	add	x20, x21, #0x1
  45c584:	cbz	x8, 45cd5c <feof@plt+0x59c7c>
  45c588:	ldp	x0, x9, [x19, #8]
  45c58c:	sub	x9, x9, x0
  45c590:	cmp	x9, #0x3
  45c594:	b.gt	45cd70 <feof@plt+0x59c90>
  45c598:	sub	x22, x0, x8
  45c59c:	lsl	w9, w22, #1
  45c5a0:	add	w9, w9, #0x8
  45c5a4:	sxtw	x21, w9
  45c5a8:	mov	x0, x8
  45c5ac:	mov	x1, x21
  45c5b0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c5b4:	mov	x8, x0
  45c5b8:	add	x0, x0, w22, sxtw
  45c5bc:	add	x9, x8, x21
  45c5c0:	stp	x8, x0, [x19]
  45c5c4:	str	x9, [x19, #16]
  45c5c8:	b	45cd70 <feof@plt+0x59c90>
  45c5cc:	ldr	x8, [x19]
  45c5d0:	add	x20, x21, #0x1
  45c5d4:	cbz	x8, 45cd7c <feof@plt+0x59c9c>
  45c5d8:	ldp	x0, x9, [x19, #8]
  45c5dc:	sub	x9, x9, x0
  45c5e0:	cmp	x9, #0x5
  45c5e4:	b.gt	45cd90 <feof@plt+0x59cb0>
  45c5e8:	sub	x22, x0, x8
  45c5ec:	lsl	w9, w22, #1
  45c5f0:	add	w9, w9, #0xc
  45c5f4:	sxtw	x21, w9
  45c5f8:	mov	x0, x8
  45c5fc:	mov	x1, x21
  45c600:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c604:	mov	x8, x0
  45c608:	add	x0, x0, w22, sxtw
  45c60c:	add	x9, x8, x21
  45c610:	stp	x8, x0, [x19]
  45c614:	str	x9, [x19, #16]
  45c618:	b	45cd90 <feof@plt+0x59cb0>
  45c61c:	ldr	x8, [x19]
  45c620:	add	x20, x21, #0x1
  45c624:	cbz	x8, 45cd98 <feof@plt+0x59cb8>
  45c628:	ldp	x0, x9, [x19, #8]
  45c62c:	sub	x9, x9, x0
  45c630:	cmp	x9, #0x6
  45c634:	b.gt	45cdac <feof@plt+0x59ccc>
  45c638:	sub	x22, x0, x8
  45c63c:	lsl	w9, w22, #1
  45c640:	add	w9, w9, #0xe
  45c644:	sxtw	x21, w9
  45c648:	mov	x0, x8
  45c64c:	mov	x1, x21
  45c650:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c654:	mov	x8, x0
  45c658:	add	x0, x0, w22, sxtw
  45c65c:	add	x9, x8, x21
  45c660:	stp	x8, x0, [x19]
  45c664:	str	x9, [x19, #16]
  45c668:	b	45cdac <feof@plt+0x59ccc>
  45c66c:	ldr	x8, [x19]
  45c670:	add	x20, x21, #0x1
  45c674:	cbz	x8, 45cdb8 <feof@plt+0x59cd8>
  45c678:	ldp	x0, x9, [x19, #8]
  45c67c:	sub	x9, x9, x0
  45c680:	cmp	x9, #0x5
  45c684:	b.gt	45cdcc <feof@plt+0x59cec>
  45c688:	sub	x22, x0, x8
  45c68c:	lsl	w9, w22, #1
  45c690:	add	w9, w9, #0xc
  45c694:	sxtw	x21, w9
  45c698:	mov	x0, x8
  45c69c:	mov	x1, x21
  45c6a0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c6a4:	mov	x8, x0
  45c6a8:	add	x0, x0, w22, sxtw
  45c6ac:	add	x9, x8, x21
  45c6b0:	stp	x8, x0, [x19]
  45c6b4:	str	x9, [x19, #16]
  45c6b8:	b	45cdcc <feof@plt+0x59cec>
  45c6bc:	ldr	x8, [x19]
  45c6c0:	add	x20, x21, #0x1
  45c6c4:	cbz	x8, 45cddc <feof@plt+0x59cfc>
  45c6c8:	ldp	x0, x9, [x19, #8]
  45c6cc:	sub	x9, x9, x0
  45c6d0:	cmp	x9, #0x6
  45c6d4:	b.gt	45cdf0 <feof@plt+0x59d10>
  45c6d8:	sub	x22, x0, x8
  45c6dc:	lsl	w9, w22, #1
  45c6e0:	add	w9, w9, #0xe
  45c6e4:	sxtw	x21, w9
  45c6e8:	mov	x0, x8
  45c6ec:	mov	x1, x21
  45c6f0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c6f4:	mov	x8, x0
  45c6f8:	add	x0, x0, w22, sxtw
  45c6fc:	add	x9, x8, x21
  45c700:	stp	x8, x0, [x19]
  45c704:	str	x9, [x19, #16]
  45c708:	b	45cdf0 <feof@plt+0x59d10>
  45c70c:	ldr	x8, [x19]
  45c710:	add	x20, x21, #0x1
  45c714:	cbz	x8, 45ce14 <feof@plt+0x59d34>
  45c718:	ldp	x0, x9, [x19, #8]
  45c71c:	sub	x9, x9, x0
  45c720:	cmp	x9, #0x4
  45c724:	b.gt	45ce28 <feof@plt+0x59d48>
  45c728:	sub	x22, x0, x8
  45c72c:	lsl	w9, w22, #1
  45c730:	add	w9, w9, #0xa
  45c734:	sxtw	x21, w9
  45c738:	mov	x0, x8
  45c73c:	mov	x1, x21
  45c740:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c744:	mov	x8, x0
  45c748:	add	x0, x0, w22, sxtw
  45c74c:	add	x9, x8, x21
  45c750:	stp	x8, x0, [x19]
  45c754:	str	x9, [x19, #16]
  45c758:	b	45ce28 <feof@plt+0x59d48>
  45c75c:	ldr	x8, [x19]
  45c760:	add	x20, x21, #0x1
  45c764:	cbz	x8, 45ce38 <feof@plt+0x59d58>
  45c768:	ldp	x0, x9, [x19, #8]
  45c76c:	sub	x9, x9, x0
  45c770:	cmp	x9, #0x5
  45c774:	b.gt	45ce4c <feof@plt+0x59d6c>
  45c778:	sub	x22, x0, x8
  45c77c:	lsl	w9, w22, #1
  45c780:	add	w9, w9, #0xc
  45c784:	sxtw	x21, w9
  45c788:	mov	x0, x8
  45c78c:	mov	x1, x21
  45c790:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c794:	mov	x8, x0
  45c798:	add	x0, x0, w22, sxtw
  45c79c:	add	x9, x8, x21
  45c7a0:	stp	x8, x0, [x19]
  45c7a4:	str	x9, [x19, #16]
  45c7a8:	b	45ce4c <feof@plt+0x59d6c>
  45c7ac:	ldr	x8, [x19]
  45c7b0:	add	x20, x21, #0x1
  45c7b4:	cbz	x8, 45ce6c <feof@plt+0x59d8c>
  45c7b8:	ldp	x0, x9, [x19, #8]
  45c7bc:	sub	x9, x9, x0
  45c7c0:	cmp	x9, #0x4
  45c7c4:	b.gt	45ce80 <feof@plt+0x59da0>
  45c7c8:	sub	x22, x0, x8
  45c7cc:	lsl	w9, w22, #1
  45c7d0:	add	w9, w9, #0xa
  45c7d4:	sxtw	x21, w9
  45c7d8:	mov	x0, x8
  45c7dc:	mov	x1, x21
  45c7e0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c7e4:	mov	x8, x0
  45c7e8:	add	x0, x0, w22, sxtw
  45c7ec:	add	x9, x8, x21
  45c7f0:	stp	x8, x0, [x19]
  45c7f4:	str	x9, [x19, #16]
  45c7f8:	b	45ce80 <feof@plt+0x59da0>
  45c7fc:	ldr	x8, [x19]
  45c800:	add	x20, x21, #0x1
  45c804:	cbz	x8, 45ce88 <feof@plt+0x59da8>
  45c808:	ldp	x0, x9, [x19, #8]
  45c80c:	sub	x9, x9, x0
  45c810:	cmp	x9, #0x3
  45c814:	b.gt	45c848 <feof@plt+0x59768>
  45c818:	sub	x22, x0, x8
  45c81c:	lsl	w9, w22, #1
  45c820:	add	w9, w9, #0x8
  45c824:	sxtw	x21, w9
  45c828:	mov	x0, x8
  45c82c:	mov	x1, x21
  45c830:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c834:	mov	x8, x0
  45c838:	add	x0, x0, w22, sxtw
  45c83c:	add	x9, x8, x21
  45c840:	stp	x8, x0, [x19]
  45c844:	str	x9, [x19, #16]
  45c848:	mov	w8, #0x6f76                	// #28534
  45c84c:	movk	w8, #0x6469, lsl #16
  45c850:	b	45d264 <feof@plt+0x5a184>
  45c854:	ldr	x8, [x19]
  45c858:	add	x20, x21, #0x1
  45c85c:	cbz	x8, 45cea8 <feof@plt+0x59dc8>
  45c860:	ldp	x0, x9, [x19, #8]
  45c864:	sub	x9, x9, x0
  45c868:	cmp	x9, #0x4
  45c86c:	b.gt	45cebc <feof@plt+0x59ddc>
  45c870:	sub	x22, x0, x8
  45c874:	lsl	w9, w22, #1
  45c878:	add	w9, w9, #0xa
  45c87c:	sxtw	x21, w9
  45c880:	mov	x0, x8
  45c884:	mov	x1, x21
  45c888:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c88c:	mov	x8, x0
  45c890:	add	x0, x0, w22, sxtw
  45c894:	add	x9, x8, x21
  45c898:	stp	x8, x0, [x19]
  45c89c:	str	x9, [x19, #16]
  45c8a0:	b	45cebc <feof@plt+0x59ddc>
  45c8a4:	ldr	x8, [x19]
  45c8a8:	add	x20, x21, #0x1
  45c8ac:	cbz	x8, 45cedc <feof@plt+0x59dfc>
  45c8b0:	ldp	x0, x9, [x19, #8]
  45c8b4:	sub	x9, x9, x0
  45c8b8:	cmp	x9, #0x5
  45c8bc:	b.gt	45cef0 <feof@plt+0x59e10>
  45c8c0:	sub	x22, x0, x8
  45c8c4:	lsl	w9, w22, #1
  45c8c8:	add	w9, w9, #0xc
  45c8cc:	sxtw	x21, w9
  45c8d0:	mov	x0, x8
  45c8d4:	mov	x1, x21
  45c8d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c8dc:	mov	x8, x0
  45c8e0:	add	x0, x0, w22, sxtw
  45c8e4:	add	x9, x8, x21
  45c8e8:	stp	x8, x0, [x19]
  45c8ec:	str	x9, [x19, #16]
  45c8f0:	b	45cef0 <feof@plt+0x59e10>
  45c8f4:	ldr	x8, [x19]
  45c8f8:	add	x20, x21, #0x1
  45c8fc:	cbz	x8, 45cf00 <feof@plt+0x59e20>
  45c900:	ldp	x0, x9, [x19, #8]
  45c904:	sub	x9, x9, x0
  45c908:	cmp	x9, #0x9
  45c90c:	b.gt	45cf14 <feof@plt+0x59e34>
  45c910:	sub	x22, x0, x8
  45c914:	lsl	w9, w22, #1
  45c918:	add	w9, w9, #0x14
  45c91c:	sxtw	x21, w9
  45c920:	mov	x0, x8
  45c924:	mov	x1, x21
  45c928:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c92c:	mov	x8, x0
  45c930:	add	x0, x0, w22, sxtw
  45c934:	add	x9, x8, x21
  45c938:	stp	x8, x0, [x19]
  45c93c:	str	x9, [x19, #16]
  45c940:	b	45cf14 <feof@plt+0x59e34>
  45c944:	ldrb	w8, [x21, #1]
  45c948:	cmp	w8, #0x6b
  45c94c:	b.eq	45d004 <feof@plt+0x59f24>  // b.none
  45c950:	cmp	w8, #0x69
  45c954:	b.ne	45c9ac <feof@plt+0x598cc>  // b.any
  45c958:	ldr	x8, [x19]
  45c95c:	add	x20, x21, #0x2
  45c960:	cbz	x8, 45d248 <feof@plt+0x5a168>
  45c964:	ldp	x0, x9, [x19, #8]
  45c968:	sub	x9, x9, x0
  45c96c:	cmp	x9, #0x3
  45c970:	b.gt	45c9a4 <feof@plt+0x598c4>
  45c974:	sub	x22, x0, x8
  45c978:	lsl	w9, w22, #1
  45c97c:	add	w9, w9, #0x8
  45c980:	sxtw	x21, w9
  45c984:	mov	x0, x8
  45c988:	mov	x1, x21
  45c98c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45c990:	mov	x8, x0
  45c994:	add	x0, x0, w22, sxtw
  45c998:	add	x9, x8, x21
  45c99c:	stp	x8, x0, [x19]
  45c9a0:	str	x9, [x19, #16]
  45c9a4:	mov	w8, #0x6563                	// #25955
  45c9a8:	b	45d260 <feof@plt+0x5a180>
  45c9ac:	mov	x20, xzr
  45c9b0:	b	45d45c <feof@plt+0x5a37c>
  45c9b4:	mov	x23, xzr
  45c9b8:	add	x9, x21, x23
  45c9bc:	ldrb	w9, [x9, #2]
  45c9c0:	add	x23, x23, #0x1
  45c9c4:	ldrh	w9, [x8, x9, lsl #1]
  45c9c8:	tbnz	w9, #2, 45c9b8 <feof@plt+0x598d8>
  45c9cc:	add	x8, x21, x23
  45c9d0:	add	x1, x8, #0x1
  45c9d4:	mov	x0, x19
  45c9d8:	bl	45bcdc <feof@plt+0x58bfc>
  45c9dc:	ldr	x8, [x19]
  45c9e0:	mov	x20, x0
  45c9e4:	cbz	x8, 45cf38 <feof@plt+0x59e58>
  45c9e8:	ldp	x0, x9, [x19, #8]
  45c9ec:	sub	x9, x9, x0
  45c9f0:	cmp	x9, #0x0
  45c9f4:	b.gt	45cf4c <feof@plt+0x59e6c>
  45c9f8:	sub	x24, x0, x8
  45c9fc:	lsl	w9, w24, #1
  45ca00:	add	w9, w9, #0x2
  45ca04:	sxtw	x21, w9
  45ca08:	mov	x0, x8
  45ca0c:	mov	x1, x21
  45ca10:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ca14:	mov	x8, x0
  45ca18:	add	x0, x0, w24, sxtw
  45ca1c:	add	x9, x8, x21
  45ca20:	stp	x8, x0, [x19]
  45ca24:	str	x9, [x19, #16]
  45ca28:	b	45cf4c <feof@plt+0x59e6c>
  45ca2c:	mov	w0, #0x20                  	// #32
  45ca30:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ca34:	add	x8, x0, #0x20
  45ca38:	stp	x0, x0, [x19]
  45ca3c:	str	x8, [x19, #16]
  45ca40:	mov	w8, #0x5d5b                	// #23899
  45ca44:	strh	w8, [x0]
  45ca48:	ldr	x8, [x19, #8]
  45ca4c:	add	x8, x8, #0x2
  45ca50:	b	45d458 <feof@plt+0x5a378>
  45ca54:	mov	w0, #0x20                  	// #32
  45ca58:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ca5c:	add	x8, x0, #0x20
  45ca60:	stp	x0, x0, [x19]
  45ca64:	str	x8, [x19, #16]
  45ca68:	mov	x8, #0x6564                	// #25956
  45ca6c:	movk	x8, #0x656c, lsl #16
  45ca70:	movk	x8, #0x6167, lsl #32
  45ca74:	movk	x8, #0x6574, lsl #48
  45ca78:	str	x8, [x0]
  45ca7c:	ldr	x8, [x19, #8]
  45ca80:	add	x0, x8, #0x8
  45ca84:	str	x0, [x19, #8]
  45ca88:	ldr	x21, [sp, #8]
  45ca8c:	cbz	w23, 45d094 <feof@plt+0x59fb4>
  45ca90:	ldr	x8, [x19]
  45ca94:	cbz	x8, 45d054 <feof@plt+0x59f74>
  45ca98:	ldr	x9, [x19, #16]
  45ca9c:	sxtw	x22, w23
  45caa0:	sub	x9, x9, x0
  45caa4:	cmp	x9, x22
  45caa8:	b.ge	45d078 <feof@plt+0x59f98>  // b.tcont
  45caac:	sub	x24, x0, x8
  45cab0:	add	w9, w23, w24
  45cab4:	lsl	w9, w9, #1
  45cab8:	sxtw	x23, w9
  45cabc:	mov	x0, x8
  45cac0:	mov	x1, x23
  45cac4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45cac8:	mov	x8, x0
  45cacc:	add	x0, x0, w24, sxtw
  45cad0:	add	x9, x8, x23
  45cad4:	stp	x8, x0, [x19]
  45cad8:	str	x9, [x19, #16]
  45cadc:	b	45d078 <feof@plt+0x59f98>
  45cae0:	mov	w0, #0x20                  	// #32
  45cae4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cae8:	add	x8, x0, #0x20
  45caec:	stp	x0, x0, [x19]
  45caf0:	str	x8, [x19, #16]
  45caf4:	mov	w8, #0x5b                  	// #91
  45caf8:	strb	w8, [x0]
  45cafc:	ldr	x8, [x19, #8]
  45cb00:	add	x0, x8, #0x1
  45cb04:	str	x0, [x19, #8]
  45cb08:	cbz	w23, 45d0dc <feof@plt+0x59ffc>
  45cb0c:	ldr	x8, [x19]
  45cb10:	ldr	x21, [sp, #8]
  45cb14:	cbz	x8, 45d0a0 <feof@plt+0x59fc0>
  45cb18:	ldr	x9, [x19, #16]
  45cb1c:	sxtw	x22, w23
  45cb20:	sub	x9, x9, x0
  45cb24:	cmp	x9, x22
  45cb28:	b.ge	45d0c4 <feof@plt+0x59fe4>  // b.tcont
  45cb2c:	sub	x24, x0, x8
  45cb30:	add	w9, w23, w24
  45cb34:	lsl	w9, w9, #1
  45cb38:	sxtw	x23, w9
  45cb3c:	mov	x0, x8
  45cb40:	mov	x1, x23
  45cb44:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45cb48:	mov	x8, x0
  45cb4c:	add	x0, x0, w24, sxtw
  45cb50:	add	x9, x8, x23
  45cb54:	stp	x8, x0, [x19]
  45cb58:	str	x9, [x19, #16]
  45cb5c:	b	45d0c4 <feof@plt+0x59fe4>
  45cb60:	mov	w0, #0x20                  	// #32
  45cb64:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cb68:	add	x8, x0, #0x20
  45cb6c:	stp	x0, x0, [x19]
  45cb70:	str	x8, [x19, #16]
  45cb74:	mov	w8, #0x6572                	// #25970
  45cb78:	mov	w9, #0x6873                	// #26739
  45cb7c:	movk	w8, #0x2864, lsl #16
  45cb80:	movk	w9, #0x7261, lsl #16
  45cb84:	stur	w8, [x0, #3]
  45cb88:	str	w9, [x0]
  45cb8c:	ldr	x8, [x19, #8]
  45cb90:	add	x8, x8, #0x7
  45cb94:	b	45d2a8 <feof@plt+0x5a1c8>
  45cb98:	mov	w0, #0x20                  	// #32
  45cb9c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cba0:	add	x8, x0, #0x20
  45cba4:	str	x8, [x19, #16]
  45cba8:	mov	w8, #0x6863                	// #26723
  45cbac:	stp	x0, x0, [x19]
  45cbb0:	movk	w8, #0x7261, lsl #16
  45cbb4:	b	45d264 <feof@plt+0x5a184>
  45cbb8:	mov	w0, #0x20                  	// #32
  45cbbc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cbc0:	add	x8, x0, #0x20
  45cbc4:	str	x8, [x19, #16]
  45cbc8:	mov	w8, #0x6f62                	// #28514
  45cbcc:	stp	x0, x0, [x19]
  45cbd0:	movk	w8, #0x6c6f, lsl #16
  45cbd4:	b	45d264 <feof@plt+0x5a184>
  45cbd8:	mov	w0, #0x20                  	// #32
  45cbdc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cbe0:	add	x8, x0, #0x20
  45cbe4:	stp	x0, x0, [x19]
  45cbe8:	str	x8, [x19, #16]
  45cbec:	mov	w9, #0x7263                	// #29283
  45cbf0:	b	45cce8 <feof@plt+0x59c08>
  45cbf4:	mov	w0, #0x20                  	// #32
  45cbf8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cbfc:	add	x8, x0, #0x20
  45cc00:	stp	x0, x0, [x19]
  45cc04:	str	x8, [x19, #16]
  45cc08:	mov	w9, #0x6f64                	// #28516
  45cc0c:	mov	w8, #0x656c                	// #25964
  45cc10:	movk	w9, #0x6275, lsl #16
  45cc14:	b	45ce58 <feof@plt+0x59d78>
  45cc18:	mov	w0, #0x20                  	// #32
  45cc1c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cc20:	add	x8, x0, #0x20
  45cc24:	str	x8, [x19, #16]
  45cc28:	mov	w8, #0x6572                	// #25970
  45cc2c:	stp	x0, x0, [x19]
  45cc30:	movk	w8, #0x6c61, lsl #16
  45cc34:	b	45d264 <feof@plt+0x5a184>
  45cc38:	mov	w0, #0x20                  	// #32
  45cc3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cc40:	add	x8, x0, #0x20
  45cc44:	stp	x0, x0, [x19]
  45cc48:	str	x8, [x19, #16]
  45cc4c:	mov	w9, #0x6c66                	// #27750
  45cc50:	mov	w8, #0x74                  	// #116
  45cc54:	movk	w9, #0x616f, lsl #16
  45cc58:	b	45cec8 <feof@plt+0x59de8>
  45cc5c:	mov	w0, #0x20                  	// #32
  45cc60:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cc64:	add	x8, x0, #0x20
  45cc68:	str	x8, [x19, #16]
  45cc6c:	mov	w8, #0x7962                	// #31074
  45cc70:	stp	x0, x0, [x19]
  45cc74:	movk	w8, #0x6574, lsl #16
  45cc78:	b	45d264 <feof@plt+0x5a184>
  45cc7c:	mov	w0, #0x20                  	// #32
  45cc80:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cc84:	add	x8, x0, #0x20
  45cc88:	stp	x0, x0, [x19]
  45cc8c:	str	x8, [x19, #16]
  45cc90:	mov	w9, #0x6275                	// #25205
  45cc94:	mov	w8, #0x65                  	// #101
  45cc98:	movk	w9, #0x7479, lsl #16
  45cc9c:	b	45cec8 <feof@plt+0x59de8>
  45cca0:	mov	w0, #0x20                  	// #32
  45cca4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cca8:	add	x8, x0, #0x20
  45ccac:	stp	x0, x0, [x19]
  45ccb0:	str	x8, [x19, #16]
  45ccb4:	mov	w8, #0x74                  	// #116
  45ccb8:	mov	w9, #0x6e69                	// #28265
  45ccbc:	strb	w8, [x0, #2]
  45ccc0:	strh	w9, [x0]
  45ccc4:	ldr	x8, [x19, #8]
  45ccc8:	add	x8, x8, #0x3
  45cccc:	b	45d458 <feof@plt+0x5a378>
  45ccd0:	mov	w0, #0x20                  	// #32
  45ccd4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ccd8:	add	x8, x0, #0x20
  45ccdc:	stp	x0, x0, [x19]
  45cce0:	str	x8, [x19, #16]
  45cce4:	mov	w9, #0x7269                	// #29289
  45cce8:	mov	w8, #0x6c                  	// #108
  45ccec:	movk	w9, #0x6165, lsl #16
  45ccf0:	b	45cec8 <feof@plt+0x59de8>
  45ccf4:	mov	w0, #0x20                  	// #32
  45ccf8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ccfc:	add	x8, x0, #0x20
  45cd00:	stp	x0, x0, [x19]
  45cd04:	str	x8, [x19, #16]
  45cd08:	mov	w8, #0x6563                	// #25955
  45cd0c:	movk	w8, #0x746e, lsl #16
  45cd10:	add	w8, w8, #0x412
  45cd14:	b	45d264 <feof@plt+0x5a184>
  45cd18:	mov	w0, #0x20                  	// #32
  45cd1c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cd20:	add	x8, x0, #0x20
  45cd24:	str	x8, [x19, #16]
  45cd28:	mov	w8, #0x6f6c                	// #28524
  45cd2c:	stp	x0, x0, [x19]
  45cd30:	movk	w8, #0x676e, lsl #16
  45cd34:	b	45d264 <feof@plt+0x5a184>
  45cd38:	mov	w0, #0x20                  	// #32
  45cd3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cd40:	add	x8, x0, #0x20
  45cd44:	stp	x0, x0, [x19]
  45cd48:	str	x8, [x19, #16]
  45cd4c:	mov	w9, #0x6c75                	// #27765
  45cd50:	mov	w8, #0x67                  	// #103
  45cd54:	movk	w9, #0x6e6f, lsl #16
  45cd58:	b	45cec8 <feof@plt+0x59de8>
  45cd5c:	mov	w0, #0x20                  	// #32
  45cd60:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cd64:	add	x8, x0, #0x20
  45cd68:	stp	x0, x0, [x19]
  45cd6c:	str	x8, [x19, #16]
  45cd70:	mov	w8, #0x6f6e                	// #28526
  45cd74:	movk	w8, #0x656e, lsl #16
  45cd78:	b	45d264 <feof@plt+0x5a184>
  45cd7c:	mov	w0, #0x20                  	// #32
  45cd80:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cd84:	add	x8, x0, #0x20
  45cd88:	stp	x0, x0, [x19]
  45cd8c:	str	x8, [x19, #16]
  45cd90:	mov	w9, #0x6669                	// #26217
  45cd94:	b	45cdd0 <feof@plt+0x59cf0>
  45cd98:	mov	w0, #0x20                  	// #32
  45cd9c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cda0:	add	x8, x0, #0x20
  45cda4:	stp	x0, x0, [x19]
  45cda8:	str	x8, [x19, #16]
  45cdac:	mov	w8, #0x6275                	// #25205
  45cdb0:	mov	w9, #0x6469                	// #25705
  45cdb4:	b	45cdf8 <feof@plt+0x59d18>
  45cdb8:	mov	w0, #0x20                  	// #32
  45cdbc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cdc0:	add	x8, x0, #0x20
  45cdc4:	stp	x0, x0, [x19]
  45cdc8:	str	x8, [x19, #16]
  45cdcc:	mov	w9, #0x6663                	// #26211
  45cdd0:	mov	w8, #0x7461                	// #29793
  45cdd4:	movk	w9, #0x6f6c, lsl #16
  45cdd8:	b	45ce58 <feof@plt+0x59d78>
  45cddc:	mov	w0, #0x20                  	// #32
  45cde0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cde4:	add	x8, x0, #0x20
  45cde8:	stp	x0, x0, [x19]
  45cdec:	str	x8, [x19, #16]
  45cdf0:	mov	w8, #0x6275                	// #25205
  45cdf4:	mov	w9, #0x6463                	// #25699
  45cdf8:	movk	w8, #0x656c, lsl #16
  45cdfc:	movk	w9, #0x756f, lsl #16
  45ce00:	stur	w8, [x0, #3]
  45ce04:	str	w9, [x0]
  45ce08:	ldr	x8, [x19, #8]
  45ce0c:	add	x8, x8, #0x7
  45ce10:	b	45d458 <feof@plt+0x5a378>
  45ce14:	mov	w0, #0x20                  	// #32
  45ce18:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ce1c:	add	x8, x0, #0x20
  45ce20:	stp	x0, x0, [x19]
  45ce24:	str	x8, [x19, #16]
  45ce28:	mov	w9, #0x6873                	// #26739
  45ce2c:	mov	w8, #0x74                  	// #116
  45ce30:	movk	w9, #0x726f, lsl #16
  45ce34:	b	45cec8 <feof@plt+0x59de8>
  45ce38:	mov	w0, #0x20                  	// #32
  45ce3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ce40:	add	x8, x0, #0x20
  45ce44:	stp	x0, x0, [x19]
  45ce48:	str	x8, [x19, #16]
  45ce4c:	mov	w9, #0x7375                	// #29557
  45ce50:	mov	w8, #0x7472                	// #29810
  45ce54:	movk	w9, #0x6f68, lsl #16
  45ce58:	strh	w8, [x0, #4]
  45ce5c:	str	w9, [x0]
  45ce60:	ldr	x8, [x19, #8]
  45ce64:	add	x8, x8, #0x6
  45ce68:	b	45d458 <feof@plt+0x5a378>
  45ce6c:	mov	w0, #0x20                  	// #32
  45ce70:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ce74:	add	x8, x0, #0x20
  45ce78:	stp	x0, x0, [x19]
  45ce7c:	str	x8, [x19, #16]
  45ce80:	mov	w9, #0x6377                	// #25463
  45ce84:	b	45cec0 <feof@plt+0x59de0>
  45ce88:	mov	w0, #0x20                  	// #32
  45ce8c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ce90:	add	x8, x0, #0x20
  45ce94:	str	x8, [x19, #16]
  45ce98:	mov	w8, #0x6f76                	// #28534
  45ce9c:	stp	x0, x0, [x19]
  45cea0:	movk	w8, #0x6469, lsl #16
  45cea4:	b	45d264 <feof@plt+0x5a184>
  45cea8:	mov	w0, #0x20                  	// #32
  45ceac:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ceb0:	add	x8, x0, #0x20
  45ceb4:	stp	x0, x0, [x19]
  45ceb8:	str	x8, [x19, #16]
  45cebc:	mov	w9, #0x6364                	// #25444
  45cec0:	mov	w8, #0x72                  	// #114
  45cec4:	movk	w9, #0x6168, lsl #16
  45cec8:	strb	w8, [x0, #4]
  45cecc:	str	w9, [x0]
  45ced0:	ldr	x8, [x19, #8]
  45ced4:	add	x8, x8, #0x5
  45ced8:	b	45d458 <feof@plt+0x5a378>
  45cedc:	mov	w0, #0x20                  	// #32
  45cee0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cee4:	add	x8, x0, #0x20
  45cee8:	stp	x0, x0, [x19]
  45ceec:	str	x8, [x19, #16]
  45cef0:	mov	w9, #0x6f63                	// #28515
  45cef4:	mov	w8, #0x2874                	// #10356
  45cef8:	movk	w9, #0x736e, lsl #16
  45cefc:	b	45d234 <feof@plt+0x5a154>
  45cf00:	mov	w0, #0x20                  	// #32
  45cf04:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cf08:	add	x8, x0, #0x20
  45cf0c:	stp	x0, x0, [x19]
  45cf10:	str	x8, [x19, #16]
  45cf14:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45cf18:	add	x8, x8, #0x9b8
  45cf1c:	ldr	x8, [x8]
  45cf20:	mov	w9, #0x2865                	// #10341
  45cf24:	strh	w9, [x0, #8]
  45cf28:	str	x8, [x0]
  45cf2c:	ldr	x8, [x19, #8]
  45cf30:	add	x8, x8, #0xa
  45cf34:	b	45d2a8 <feof@plt+0x5a1c8>
  45cf38:	mov	w0, #0x20                  	// #32
  45cf3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45cf40:	add	x8, x0, #0x20
  45cf44:	stp	x0, x0, [x19]
  45cf48:	str	x8, [x19, #16]
  45cf4c:	mov	w8, #0x5b                  	// #91
  45cf50:	strb	w8, [x0]
  45cf54:	ldr	x8, [x19, #8]
  45cf58:	add	x0, x8, #0x1
  45cf5c:	str	x0, [x19, #8]
  45cf60:	cbz	w23, 45d1a8 <feof@plt+0x5a0c8>
  45cf64:	ldr	x8, [x19]
  45cf68:	cbz	x8, 45d168 <feof@plt+0x5a088>
  45cf6c:	ldr	x9, [x19, #16]
  45cf70:	sxtw	x21, w23
  45cf74:	sub	x9, x9, x0
  45cf78:	cmp	x9, x21
  45cf7c:	b.ge	45d190 <feof@plt+0x5a0b0>  // b.tcont
  45cf80:	sub	x24, x0, x8
  45cf84:	add	w9, w24, w23
  45cf88:	lsl	w9, w9, #1
  45cf8c:	sxtw	x23, w9
  45cf90:	mov	x0, x8
  45cf94:	mov	x1, x23
  45cf98:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45cf9c:	mov	x8, x0
  45cfa0:	add	x0, x0, w24, sxtw
  45cfa4:	add	x9, x8, x23
  45cfa8:	stp	x8, x0, [x19]
  45cfac:	str	x9, [x19, #16]
  45cfb0:	b	45d190 <feof@plt+0x5a0b0>
  45cfb4:	ldr	x8, [x19]
  45cfb8:	add	x20, x21, #0x2
  45cfbc:	cbz	x8, 45d274 <feof@plt+0x5a194>
  45cfc0:	ldp	x0, x9, [x19, #8]
  45cfc4:	sub	x9, x9, x0
  45cfc8:	cmp	x9, #0x8
  45cfcc:	b.gt	45d288 <feof@plt+0x5a1a8>
  45cfd0:	sub	x22, x0, x8
  45cfd4:	lsl	w9, w22, #1
  45cfd8:	add	w9, w9, #0x12
  45cfdc:	sxtw	x21, w9
  45cfe0:	mov	x0, x8
  45cfe4:	mov	x1, x21
  45cfe8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45cfec:	mov	x8, x0
  45cff0:	add	x0, x0, w22, sxtw
  45cff4:	add	x9, x8, x21
  45cff8:	stp	x8, x0, [x19]
  45cffc:	str	x9, [x19, #16]
  45d000:	b	45d288 <feof@plt+0x5a1a8>
  45d004:	ldr	x8, [x19]
  45d008:	add	x20, x21, #0x2
  45d00c:	cbz	x8, 45d308 <feof@plt+0x5a228>
  45d010:	ldp	x0, x9, [x19, #8]
  45d014:	sub	x9, x9, x0
  45d018:	cmp	x9, #0x4
  45d01c:	b.gt	45d31c <feof@plt+0x5a23c>
  45d020:	sub	x22, x0, x8
  45d024:	lsl	w9, w22, #1
  45d028:	add	w9, w9, #0xa
  45d02c:	sxtw	x21, w9
  45d030:	mov	x0, x8
  45d034:	mov	x1, x21
  45d038:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d03c:	mov	x8, x0
  45d040:	add	x0, x0, w22, sxtw
  45d044:	add	x9, x8, x21
  45d048:	stp	x8, x0, [x19]
  45d04c:	str	x9, [x19, #16]
  45d050:	b	45d31c <feof@plt+0x5a23c>
  45d054:	cmp	w23, #0x20
  45d058:	mov	w8, #0x20                  	// #32
  45d05c:	csel	w22, w23, w8, gt
  45d060:	mov	x0, x22
  45d064:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d068:	add	x8, x0, x22
  45d06c:	stp	x0, x0, [x19]
  45d070:	str	x8, [x19, #16]
  45d074:	sxtw	x22, w23
  45d078:	mov	x1, x21
  45d07c:	mov	x2, x22
  45d080:	bl	4029c0 <memcpy@plt>
  45d084:	ldr	x8, [x19, #8]
  45d088:	add	x8, x8, x22
  45d08c:	str	x8, [x19, #8]
  45d090:	ldr	x21, [sp, #8]
  45d094:	cbz	x21, 45d45c <feof@plt+0x5a37c>
  45d098:	mov	x0, x21
  45d09c:	b	45d158 <feof@plt+0x5a078>
  45d0a0:	cmp	w23, #0x20
  45d0a4:	mov	w8, #0x20                  	// #32
  45d0a8:	csel	w22, w23, w8, gt
  45d0ac:	mov	x0, x22
  45d0b0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d0b4:	add	x8, x0, x22
  45d0b8:	stp	x0, x0, [x19]
  45d0bc:	str	x8, [x19, #16]
  45d0c0:	sxtw	x22, w23
  45d0c4:	mov	x1, x21
  45d0c8:	mov	x2, x22
  45d0cc:	bl	4029c0 <memcpy@plt>
  45d0d0:	ldr	x8, [x19, #8]
  45d0d4:	add	x0, x8, x22
  45d0d8:	str	x0, [x19, #8]
  45d0dc:	ldr	x8, [x19]
  45d0e0:	cbz	x8, 45d128 <feof@plt+0x5a048>
  45d0e4:	ldr	x9, [x19, #16]
  45d0e8:	sub	x9, x9, x0
  45d0ec:	cmp	x9, #0x0
  45d0f0:	b.gt	45d13c <feof@plt+0x5a05c>
  45d0f4:	sub	x22, x0, x8
  45d0f8:	lsl	w9, w22, #1
  45d0fc:	add	w9, w9, #0x2
  45d100:	sxtw	x21, w9
  45d104:	mov	x0, x8
  45d108:	mov	x1, x21
  45d10c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d110:	mov	x8, x0
  45d114:	add	x0, x0, w22, sxtw
  45d118:	add	x9, x8, x21
  45d11c:	stp	x8, x0, [x19]
  45d120:	str	x9, [x19, #16]
  45d124:	b	45d13c <feof@plt+0x5a05c>
  45d128:	mov	w0, #0x20                  	// #32
  45d12c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d130:	add	x8, x0, #0x20
  45d134:	stp	x0, x0, [x19]
  45d138:	str	x8, [x19, #16]
  45d13c:	mov	w8, #0x5d                  	// #93
  45d140:	strb	w8, [x0]
  45d144:	ldr	x8, [x19, #8]
  45d148:	add	x8, x8, #0x1
  45d14c:	str	x8, [x19, #8]
  45d150:	ldr	x0, [sp, #8]
  45d154:	cbz	x0, 45d45c <feof@plt+0x5a37c>
  45d158:	bl	402b20 <free@plt>
  45d15c:	stp	xzr, xzr, [sp, #8]
  45d160:	str	xzr, [sp, #24]
  45d164:	b	45d45c <feof@plt+0x5a37c>
  45d168:	and	x8, x23, #0xffffffff
  45d16c:	cmp	w23, #0x20
  45d170:	mov	w9, #0x20                  	// #32
  45d174:	csel	x21, x8, x9, gt
  45d178:	mov	x0, x21
  45d17c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d180:	add	x8, x0, x21
  45d184:	stp	x0, x0, [x19]
  45d188:	str	x8, [x19, #16]
  45d18c:	sxtw	x21, w23
  45d190:	mov	x1, x22
  45d194:	mov	x2, x21
  45d198:	bl	4029c0 <memcpy@plt>
  45d19c:	ldr	x8, [x19, #8]
  45d1a0:	add	x0, x8, x21
  45d1a4:	str	x0, [x19, #8]
  45d1a8:	ldr	x8, [x19]
  45d1ac:	cbz	x8, 45d1f8 <feof@plt+0x5a118>
  45d1b0:	ldr	x9, [x19, #16]
  45d1b4:	sub	x9, x9, x0
  45d1b8:	cmp	x9, #0x0
  45d1bc:	b.gt	45d1f0 <feof@plt+0x5a110>
  45d1c0:	sub	x22, x0, x8
  45d1c4:	lsl	w9, w22, #1
  45d1c8:	add	w9, w9, #0x2
  45d1cc:	sxtw	x21, w9
  45d1d0:	mov	x0, x8
  45d1d4:	mov	x1, x21
  45d1d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d1dc:	mov	x8, x0
  45d1e0:	add	x0, x0, w22, sxtw
  45d1e4:	add	x9, x8, x21
  45d1e8:	stp	x8, x0, [x19]
  45d1ec:	str	x9, [x19, #16]
  45d1f0:	mov	w8, #0x5d                  	// #93
  45d1f4:	b	45d44c <feof@plt+0x5a36c>
  45d1f8:	mov	w0, #0x20                  	// #32
  45d1fc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d200:	add	x8, x0, #0x20
  45d204:	stp	x0, x0, [x19]
  45d208:	str	x8, [x19, #16]
  45d20c:	mov	w8, #0x5d                  	// #93
  45d210:	b	45d44c <feof@plt+0x5a36c>
  45d214:	mov	w0, #0x20                  	// #32
  45d218:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d21c:	add	x8, x0, #0x20
  45d220:	stp	x0, x0, [x19]
  45d224:	str	x8, [x19, #16]
  45d228:	mov	w9, #0x6e69                	// #28265
  45d22c:	mov	w8, #0x2874                	// #10356
  45d230:	movk	w9, #0x756f, lsl #16
  45d234:	strh	w8, [x0, #4]
  45d238:	str	w9, [x0]
  45d23c:	ldr	x8, [x19, #8]
  45d240:	add	x8, x8, #0x6
  45d244:	b	45d2a8 <feof@plt+0x5a1c8>
  45d248:	mov	w0, #0x20                  	// #32
  45d24c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d250:	add	x8, x0, #0x20
  45d254:	str	x8, [x19, #16]
  45d258:	mov	w8, #0x6563                	// #25955
  45d25c:	stp	x0, x0, [x19]
  45d260:	movk	w8, #0x746e, lsl #16
  45d264:	str	w8, [x0]
  45d268:	ldr	x8, [x19, #8]
  45d26c:	add	x8, x8, #0x4
  45d270:	b	45d458 <feof@plt+0x5a378>
  45d274:	mov	w0, #0x20                  	// #32
  45d278:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d27c:	add	x8, x0, #0x20
  45d280:	stp	x0, x0, [x19]
  45d284:	str	x8, [x19, #16]
  45d288:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45d28c:	add	x8, x8, #0x626
  45d290:	ldr	x8, [x8]
  45d294:	mov	w9, #0x28                  	// #40
  45d298:	strb	w9, [x0, #8]
  45d29c:	str	x8, [x0]
  45d2a0:	ldr	x8, [x19, #8]
  45d2a4:	add	x8, x8, #0x9
  45d2a8:	mov	x0, x19
  45d2ac:	mov	x1, x20
  45d2b0:	str	x8, [x19, #8]
  45d2b4:	bl	45bcdc <feof@plt+0x58bfc>
  45d2b8:	ldr	x8, [x19]
  45d2bc:	mov	x20, x0
  45d2c0:	cbz	x8, 45d434 <feof@plt+0x5a354>
  45d2c4:	ldp	x0, x9, [x19, #8]
  45d2c8:	sub	x9, x9, x0
  45d2cc:	cmp	x9, #0x0
  45d2d0:	b.gt	45d448 <feof@plt+0x5a368>
  45d2d4:	sub	x22, x0, x8
  45d2d8:	lsl	w9, w22, #1
  45d2dc:	add	w9, w9, #0x2
  45d2e0:	sxtw	x21, w9
  45d2e4:	mov	x0, x8
  45d2e8:	mov	x1, x21
  45d2ec:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d2f0:	mov	x8, x0
  45d2f4:	add	x0, x0, w22, sxtw
  45d2f8:	add	x9, x8, x21
  45d2fc:	stp	x8, x0, [x19]
  45d300:	str	x9, [x19, #16]
  45d304:	b	45d448 <feof@plt+0x5a368>
  45d308:	mov	w0, #0x20                  	// #32
  45d30c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d310:	add	x8, x0, #0x20
  45d314:	stp	x0, x0, [x19]
  45d318:	str	x8, [x19, #16]
  45d31c:	mov	w9, #0x6375                	// #25461
  45d320:	mov	w8, #0x74                  	// #116
  45d324:	movk	w9, #0x6e65, lsl #16
  45d328:	b	45cec8 <feof@plt+0x59de8>
  45d32c:	mov	w0, #0x20                  	// #32
  45d330:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d334:	add	x8, x0, #0x20
  45d338:	stp	x0, x0, [x19]
  45d33c:	str	x8, [x19, #16]
  45d340:	mov	w8, #0x2a                  	// #42
  45d344:	b	45d44c <feof@plt+0x5a36c>
  45d348:	mov	w0, #0x20                  	// #32
  45d34c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d350:	add	x8, x0, #0x20
  45d354:	stp	x0, x0, [x19]
  45d358:	str	x8, [x19, #16]
  45d35c:	mov	w8, #0x656c                	// #25964
  45d360:	mov	w9, #0x7554                	// #30036
  45d364:	movk	w8, #0x2821, lsl #16
  45d368:	movk	w9, #0x6c70, lsl #16
  45d36c:	stur	w8, [x0, #3]
  45d370:	str	w9, [x0]
  45d374:	ldr	x8, [x19, #8]
  45d378:	add	x8, x8, #0x7
  45d37c:	str	x8, [x19, #8]
  45d380:	cbz	x22, 45d428 <feof@plt+0x5a348>
  45d384:	mov	x0, x19
  45d388:	mov	x1, x21
  45d38c:	sub	x22, x22, #0x1
  45d390:	bl	45bcdc <feof@plt+0x58bfc>
  45d394:	mov	x20, x0
  45d398:	cbz	x22, 45d42c <feof@plt+0x5a34c>
  45d39c:	mov	w23, #0x202c                	// #8236
  45d3a0:	b	45d3e0 <feof@plt+0x5a300>
  45d3a4:	mov	w0, #0x20                  	// #32
  45d3a8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d3ac:	stp	x0, x0, [x19]
  45d3b0:	add	x8, x0, #0x20
  45d3b4:	str	x8, [x19, #16]
  45d3b8:	strh	w23, [x0]
  45d3bc:	ldr	x8, [x19, #8]
  45d3c0:	mov	x0, x19
  45d3c4:	mov	x1, x20
  45d3c8:	sub	x22, x22, #0x1
  45d3cc:	add	x8, x8, #0x2
  45d3d0:	str	x8, [x19, #8]
  45d3d4:	bl	45bcdc <feof@plt+0x58bfc>
  45d3d8:	mov	x20, x0
  45d3dc:	cbz	x22, 45d42c <feof@plt+0x5a34c>
  45d3e0:	ldr	x8, [x19]
  45d3e4:	cbz	x8, 45d3a4 <feof@plt+0x5a2c4>
  45d3e8:	ldp	x0, x9, [x19, #8]
  45d3ec:	sub	x9, x9, x0
  45d3f0:	cmp	x9, #0x1
  45d3f4:	b.gt	45d3b8 <feof@plt+0x5a2d8>
  45d3f8:	sub	x24, x0, x8
  45d3fc:	lsl	w9, w24, #1
  45d400:	add	w9, w9, #0x4
  45d404:	sxtw	x21, w9
  45d408:	mov	x0, x8
  45d40c:	mov	x1, x21
  45d410:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d414:	mov	x8, x0
  45d418:	add	x0, x0, w24, sxtw
  45d41c:	stp	x8, x0, [x19]
  45d420:	add	x8, x8, x21
  45d424:	b	45d3b4 <feof@plt+0x5a2d4>
  45d428:	mov	x20, x21
  45d42c:	ldr	x8, [x19]
  45d430:	cbnz	x8, 45d2c4 <feof@plt+0x5a1e4>
  45d434:	mov	w0, #0x20                  	// #32
  45d438:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d43c:	add	x8, x0, #0x20
  45d440:	stp	x0, x0, [x19]
  45d444:	str	x8, [x19, #16]
  45d448:	mov	w8, #0x29                  	// #41
  45d44c:	strb	w8, [x0]
  45d450:	ldr	x8, [x19, #8]
  45d454:	add	x8, x8, #0x1
  45d458:	str	x8, [x19, #8]
  45d45c:	mov	x0, x20
  45d460:	ldp	x20, x19, [sp, #80]
  45d464:	ldp	x22, x21, [sp, #64]
  45d468:	ldp	x24, x23, [sp, #48]
  45d46c:	ldp	x29, x30, [sp, #32]
  45d470:	add	sp, sp, #0x60
  45d474:	ret
  45d478:	stp	x29, x30, [sp, #-96]!
  45d47c:	stp	x28, x27, [sp, #16]
  45d480:	stp	x26, x25, [sp, #32]
  45d484:	stp	x24, x23, [sp, #48]
  45d488:	stp	x22, x21, [sp, #64]
  45d48c:	stp	x20, x19, [sp, #80]
  45d490:	mov	x29, sp
  45d494:	cbz	x1, 45d4ac <feof@plt+0x5a3cc>
  45d498:	ldrb	w8, [x1]
  45d49c:	adrp	x24, 474000 <_obstack_memory_used@@Base+0x12838>
  45d4a0:	add	x24, x24, #0xe98
  45d4a4:	ldrh	w9, [x24, x8, lsl #1]
  45d4a8:	tbnz	w9, #2, 45d4d0 <feof@plt+0x5a3f0>
  45d4ac:	mov	x21, xzr
  45d4b0:	mov	x0, x21
  45d4b4:	ldp	x20, x19, [sp, #80]
  45d4b8:	ldp	x22, x21, [sp, #64]
  45d4bc:	ldp	x24, x23, [sp, #48]
  45d4c0:	ldp	x26, x25, [sp, #32]
  45d4c4:	ldp	x28, x27, [sp, #16]
  45d4c8:	ldp	x29, x30, [sp], #96
  45d4cc:	ret
  45d4d0:	mov	x9, #0x9999999999999999    	// #-7378697629483820647
  45d4d4:	movk	x9, #0x9998
  45d4d8:	mov	x19, x0
  45d4dc:	mov	x23, xzr
  45d4e0:	movk	x9, #0x1999, lsl #48
  45d4e4:	add	x10, x9, x23, lsl #1
  45d4e8:	ror	x10, x10, #1
  45d4ec:	cmp	x10, x9
  45d4f0:	b.hi	45d4ac <feof@plt+0x5a3cc>  // b.pmore
  45d4f4:	add	x10, x23, x23, lsl #2
  45d4f8:	lsl	x10, x10, #1
  45d4fc:	add	x10, x10, w8, uxtb
  45d500:	ldrb	w8, [x1, #1]!
  45d504:	sub	x23, x10, #0x30
  45d508:	ldrh	w11, [x24, x8, lsl #1]
  45d50c:	tbnz	w11, #2, 45d4e4 <feof@plt+0x5a404>
  45d510:	cbz	w8, 45d4ac <feof@plt+0x5a3cc>
  45d514:	cmp	x23, #0x0
  45d518:	csel	x20, xzr, x1, lt  // lt = tstop
  45d51c:	cmp	x23, #0x1
  45d520:	b.lt	45d4ac <feof@plt+0x5a3cc>  // b.tstop
  45d524:	cmp	w2, #0x4
  45d528:	b.ne	45d608 <feof@plt+0x5a528>  // b.any
  45d52c:	ldp	x9, x8, [x19]
  45d530:	mov	x26, #0x6666666666666666    	// #7378697629483820646
  45d534:	movk	x26, #0x6667
  45d538:	mov	x27, x20
  45d53c:	sub	w10, w8, w9
  45d540:	cmp	x8, x9
  45d544:	csel	w8, wzr, w10, eq  // eq = none
  45d548:	sxtw	x25, w8
  45d54c:	mov	x8, x23
  45d550:	b	45d560 <feof@plt+0x5a480>
  45d554:	mov	x21, xzr
  45d558:	sub	x20, x28, #0x1
  45d55c:	cbz	x27, 45d4b0 <feof@plt+0x5a3d0>
  45d560:	ldrb	w9, [x20]
  45d564:	cmp	x8, #0x0
  45d568:	csel	x28, x27, x20, eq  // eq = none
  45d56c:	csel	x27, xzr, x27, eq  // eq = none
  45d570:	ldrh	w9, [x24, x9, lsl #1]
  45d574:	csel	x22, x23, x8, eq  // eq = none
  45d578:	tbnz	w9, #2, 45d5b0 <feof@plt+0x5a4d0>
  45d57c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d580:	mov	w2, #0x2                   	// #2
  45d584:	mov	x0, x20
  45d588:	add	x1, x1, #0x83a
  45d58c:	bl	402d40 <strncmp@plt>
  45d590:	cbnz	w0, 45d5c8 <feof@plt+0x5a4e8>
  45d594:	mov	w2, #0x1                   	// #1
  45d598:	mov	x0, x19
  45d59c:	mov	x1, x20
  45d5a0:	bl	45a814 <feof@plt+0x57734>
  45d5a4:	mov	x20, x0
  45d5a8:	cbnz	x0, 45d5c8 <feof@plt+0x5a4e8>
  45d5ac:	b	45d5d8 <feof@plt+0x5a4f8>
  45d5b0:	mov	w2, #0x3                   	// #3
  45d5b4:	mov	x0, x19
  45d5b8:	mov	x1, x20
  45d5bc:	bl	45ab14 <feof@plt+0x57a34>
  45d5c0:	mov	x20, x0
  45d5c4:	cbz	x0, 45d5d8 <feof@plt+0x5a4f8>
  45d5c8:	sub	x8, x20, x28
  45d5cc:	cmp	x8, x22
  45d5d0:	mov	x21, x20
  45d5d4:	b.eq	45d4b0 <feof@plt+0x5a3d0>  // b.none
  45d5d8:	ldp	x9, x8, [x19]
  45d5dc:	smulh	x10, x22, x26
  45d5e0:	asr	x11, x10, #2
  45d5e4:	sub	w12, w8, w9
  45d5e8:	cmp	x8, x9
  45d5ec:	csel	w8, wzr, w12, eq  // eq = none
  45d5f0:	cmp	w8, w25
  45d5f4:	add	x8, x11, x10, lsr #63
  45d5f8:	b.le	45d554 <feof@plt+0x5a474>
  45d5fc:	add	x9, x9, x25
  45d600:	str	x9, [x19, #8]
  45d604:	b	45d554 <feof@plt+0x5a474>
  45d608:	mov	x0, x20
  45d60c:	bl	402a50 <strlen@plt>
  45d610:	cmp	x0, x23
  45d614:	b.cc	45d4ac <feof@plt+0x5a3cc>  // b.lo, b.ul, b.last
  45d618:	cmp	x23, #0x5
  45d61c:	b.lt	45d6c0 <feof@plt+0x5a5e0>  // b.tstop
  45d620:	ldrb	w8, [x20]
  45d624:	cmp	w8, #0x5f
  45d628:	b.ne	45d6c0 <feof@plt+0x5a5e0>  // b.any
  45d62c:	ldrb	w8, [x20, #1]
  45d630:	cmp	w8, #0x5f
  45d634:	b.ne	45d6c0 <feof@plt+0x5a5e0>  // b.any
  45d638:	ldrb	w8, [x20, #2]
  45d63c:	and	w8, w8, #0xfe
  45d640:	cmp	w8, #0x54
  45d644:	b.ne	45d6c0 <feof@plt+0x5a5e0>  // b.any
  45d648:	mov	x1, x20
  45d64c:	ldrb	w8, [x1, #3]!
  45d650:	mov	x21, xzr
  45d654:	cmp	x8, #0x30
  45d658:	b.eq	45d4b0 <feof@plt+0x5a3d0>  // b.none
  45d65c:	ldrh	w8, [x24, x8, lsl #1]
  45d660:	tbz	w8, #2, 45d4b0 <feof@plt+0x5a3d0>
  45d664:	mov	w2, #0x3                   	// #3
  45d668:	mov	x0, x19
  45d66c:	bl	45d478 <feof@plt+0x5a398>
  45d670:	ldr	x8, [x19]
  45d674:	mov	x21, x0
  45d678:	cbz	x8, 45da78 <feof@plt+0x5a998>
  45d67c:	ldp	x0, x9, [x19, #8]
  45d680:	sub	x9, x9, x0
  45d684:	cmp	x9, #0x1
  45d688:	b.gt	45da8c <feof@plt+0x5a9ac>
  45d68c:	sub	x24, x0, x8
  45d690:	lsl	w9, w24, #1
  45d694:	add	w9, w9, #0x4
  45d698:	sxtw	x22, w9
  45d69c:	mov	x0, x8
  45d6a0:	mov	x1, x22
  45d6a4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d6a8:	mov	x8, x0
  45d6ac:	add	x0, x0, w24, sxtw
  45d6b0:	add	x9, x8, x22
  45d6b4:	stp	x8, x0, [x19]
  45d6b8:	str	x9, [x19, #16]
  45d6bc:	b	45da8c <feof@plt+0x5a9ac>
  45d6c0:	sub	x8, x23, #0x6
  45d6c4:	cmp	x8, #0x6
  45d6c8:	b.hi	45d784 <feof@plt+0x5a6a4>  // b.pmore
  45d6cc:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45d6d0:	add	x9, x9, #0x766
  45d6d4:	adr	x10, 45d6e4 <feof@plt+0x5a604>
  45d6d8:	ldrb	w11, [x9, x8]
  45d6dc:	add	x10, x10, x11, lsl #2
  45d6e0:	br	x10
  45d6e4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d6e8:	add	x1, x1, #0x84b
  45d6ec:	mov	w2, #0x6                   	// #6
  45d6f0:	mov	x0, x20
  45d6f4:	bl	402d40 <strncmp@plt>
  45d6f8:	cbz	w0, 45d8d0 <feof@plt+0x5a7f0>
  45d6fc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d700:	add	x1, x1, #0x852
  45d704:	mov	w2, #0x6                   	// #6
  45d708:	mov	x0, x20
  45d70c:	bl	402d40 <strncmp@plt>
  45d710:	cbz	w0, 45d954 <feof@plt+0x5a874>
  45d714:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d718:	add	x1, x1, #0x85f
  45d71c:	mov	w2, #0x7                   	// #7
  45d720:	mov	x0, x20
  45d724:	bl	402d40 <strncmp@plt>
  45d728:	cbz	w0, 45d9a0 <feof@plt+0x5a8c0>
  45d72c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d730:	add	x1, x1, #0x878
  45d734:	mov	w2, #0x7                   	// #7
  45d738:	mov	x0, x20
  45d73c:	bl	402d40 <strncmp@plt>
  45d740:	cbnz	w0, 45d83c <feof@plt+0x5a75c>
  45d744:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d748:	add	x1, x1, #0x45a
  45d74c:	b	45d9a8 <feof@plt+0x5a8c8>
  45d750:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d754:	add	x1, x1, #0x880
  45d758:	mov	w2, #0x8                   	// #8
  45d75c:	mov	x0, x20
  45d760:	bl	402d40 <strncmp@plt>
  45d764:	cbnz	w0, 45d83c <feof@plt+0x5a75c>
  45d768:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d76c:	add	x1, x1, #0x889
  45d770:	mov	x0, x19
  45d774:	bl	45db38 <feof@plt+0x5aa58>
  45d778:	ldp	x8, x9, [x19]
  45d77c:	add	x21, x20, #0x7
  45d780:	b	45d934 <feof@plt+0x5a854>
  45d784:	cbnz	w23, 45d83c <feof@plt+0x5a75c>
  45d788:	b	45d8c8 <feof@plt+0x5a7e8>
  45d78c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d790:	add	x1, x1, #0x898
  45d794:	mov	w2, #0xd                   	// #13
  45d798:	mov	x0, x20
  45d79c:	bl	402d40 <strncmp@plt>
  45d7a0:	cbnz	w0, 45d83c <feof@plt+0x5a75c>
  45d7a4:	ldr	x8, [x19]
  45d7a8:	cbz	x8, 45d9d0 <feof@plt+0x5a8f0>
  45d7ac:	ldp	x0, x9, [x19, #8]
  45d7b0:	sub	x9, x9, x0
  45d7b4:	cmp	x9, #0x9
  45d7b8:	b.gt	45d9e4 <feof@plt+0x5a904>
  45d7bc:	sub	x22, x0, x8
  45d7c0:	lsl	w9, w22, #1
  45d7c4:	add	w9, w9, #0x14
  45d7c8:	sxtw	x21, w9
  45d7cc:	mov	x0, x8
  45d7d0:	mov	x1, x21
  45d7d4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d7d8:	mov	x8, x0
  45d7dc:	add	x0, x0, w22, sxtw
  45d7e0:	add	x9, x8, x21
  45d7e4:	stp	x8, x0, [x19]
  45d7e8:	str	x9, [x19, #16]
  45d7ec:	b	45d9e4 <feof@plt+0x5a904>
  45d7f0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d7f4:	add	x1, x1, #0x8b1
  45d7f8:	mov	w2, #0xc                   	// #12
  45d7fc:	mov	x0, x20
  45d800:	bl	402d40 <strncmp@plt>
  45d804:	cbnz	w0, 45d83c <feof@plt+0x5a75c>
  45d808:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d80c:	add	x1, x1, #0x8be
  45d810:	mov	x0, x19
  45d814:	bl	45db38 <feof@plt+0x5aa58>
  45d818:	ldp	x8, x9, [x19]
  45d81c:	add	x21, x20, #0xb
  45d820:	b	45d934 <feof@plt+0x5a854>
  45d824:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d828:	add	x1, x1, #0x8cd
  45d82c:	mov	w2, #0xd                   	// #13
  45d830:	mov	x0, x20
  45d834:	bl	402d40 <strncmp@plt>
  45d838:	cbz	w0, 45d91c <feof@plt+0x5a83c>
  45d83c:	ldr	x8, [x19]
  45d840:	cbz	x8, 45d88c <feof@plt+0x5a7ac>
  45d844:	ldp	x0, x9, [x19, #8]
  45d848:	sxtw	x21, w23
  45d84c:	sub	x9, x9, x0
  45d850:	cmp	x9, x21
  45d854:	b.ge	45d8b0 <feof@plt+0x5a7d0>  // b.tcont
  45d858:	sub	x24, x0, x8
  45d85c:	add	w9, w23, w24
  45d860:	lsl	w9, w9, #1
  45d864:	sxtw	x22, w9
  45d868:	mov	x0, x8
  45d86c:	mov	x1, x22
  45d870:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d874:	mov	x8, x0
  45d878:	add	x0, x0, w24, sxtw
  45d87c:	add	x9, x8, x22
  45d880:	stp	x8, x0, [x19]
  45d884:	str	x9, [x19, #16]
  45d888:	b	45d8b0 <feof@plt+0x5a7d0>
  45d88c:	cmp	w23, #0x20
  45d890:	mov	w8, #0x20                  	// #32
  45d894:	csel	w21, w23, w8, gt
  45d898:	mov	x0, x21
  45d89c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d8a0:	add	x8, x0, x21
  45d8a4:	stp	x0, x0, [x19]
  45d8a8:	str	x8, [x19, #16]
  45d8ac:	sxtw	x21, w23
  45d8b0:	mov	x1, x20
  45d8b4:	mov	x2, x21
  45d8b8:	bl	4029c0 <memcpy@plt>
  45d8bc:	ldr	x8, [x19, #8]
  45d8c0:	add	x8, x8, x21
  45d8c4:	str	x8, [x19, #8]
  45d8c8:	add	x21, x20, x23
  45d8cc:	b	45d4b0 <feof@plt+0x5a3d0>
  45d8d0:	ldr	x8, [x19]
  45d8d4:	cbz	x8, 45da10 <feof@plt+0x5a930>
  45d8d8:	ldp	x0, x9, [x19, #8]
  45d8dc:	sub	x9, x9, x0
  45d8e0:	cmp	x9, #0x3
  45d8e4:	b.gt	45da24 <feof@plt+0x5a944>
  45d8e8:	sub	x22, x0, x8
  45d8ec:	lsl	w9, w22, #1
  45d8f0:	add	w9, w9, #0x8
  45d8f4:	sxtw	x21, w9
  45d8f8:	mov	x0, x8
  45d8fc:	mov	x1, x21
  45d900:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d904:	mov	x8, x0
  45d908:	add	x0, x0, w22, sxtw
  45d90c:	add	x9, x8, x21
  45d910:	stp	x8, x0, [x19]
  45d914:	str	x9, [x19, #16]
  45d918:	b	45da24 <feof@plt+0x5a944>
  45d91c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d920:	add	x1, x1, #0x8db
  45d924:	mov	x0, x19
  45d928:	bl	45db38 <feof@plt+0x5aa58>
  45d92c:	ldp	x8, x9, [x19]
  45d930:	add	x21, x20, #0xc
  45d934:	mvn	w10, w8
  45d938:	cmp	x9, x8
  45d93c:	add	w9, w10, w9
  45d940:	sxtw	x9, w9
  45d944:	csinv	x9, x9, xzr, ne  // ne = any
  45d948:	add	x8, x8, x9
  45d94c:	str	x8, [x19, #8]
  45d950:	b	45d4b0 <feof@plt+0x5a3d0>
  45d954:	ldr	x8, [x19]
  45d958:	cbz	x8, 45da3c <feof@plt+0x5a95c>
  45d95c:	ldp	x0, x9, [x19, #8]
  45d960:	sub	x9, x9, x0
  45d964:	cmp	x9, #0x4
  45d968:	b.gt	45da50 <feof@plt+0x5a970>
  45d96c:	sub	x22, x0, x8
  45d970:	lsl	w9, w22, #1
  45d974:	add	w9, w9, #0xa
  45d978:	sxtw	x21, w9
  45d97c:	mov	x0, x8
  45d980:	mov	x1, x21
  45d984:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45d988:	mov	x8, x0
  45d98c:	add	x0, x0, w22, sxtw
  45d990:	add	x9, x8, x21
  45d994:	stp	x8, x0, [x19]
  45d998:	str	x9, [x19, #16]
  45d99c:	b	45da50 <feof@plt+0x5a970>
  45d9a0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45d9a4:	add	x1, x1, #0x867
  45d9a8:	mov	x0, x19
  45d9ac:	bl	45db38 <feof@plt+0x5aa58>
  45d9b0:	ldp	x8, x9, [x19]
  45d9b4:	mvn	w10, w8
  45d9b8:	cmp	x9, x8
  45d9bc:	add	w9, w10, w9
  45d9c0:	sxtw	x9, w9
  45d9c4:	csinv	x9, x9, xzr, ne  // ne = any
  45d9c8:	add	x8, x8, x9
  45d9cc:	b	45da6c <feof@plt+0x5a98c>
  45d9d0:	mov	w0, #0x20                  	// #32
  45d9d4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45d9d8:	add	x8, x0, #0x20
  45d9dc:	stp	x0, x0, [x19]
  45d9e0:	str	x8, [x19, #16]
  45d9e4:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45d9e8:	add	x8, x8, #0x8a6
  45d9ec:	ldr	x8, [x8]
  45d9f0:	mov	w9, #0x2973                	// #10611
  45d9f4:	strh	w9, [x0, #8]
  45d9f8:	add	x21, x20, #0xd
  45d9fc:	str	x8, [x0]
  45da00:	ldr	x8, [x19, #8]
  45da04:	add	x8, x8, #0xa
  45da08:	str	x8, [x19, #8]
  45da0c:	b	45d4b0 <feof@plt+0x5a3d0>
  45da10:	mov	w0, #0x20                  	// #32
  45da14:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45da18:	add	x8, x0, #0x20
  45da1c:	stp	x0, x0, [x19]
  45da20:	str	x8, [x19, #16]
  45da24:	mov	w8, #0x6874                	// #26740
  45da28:	movk	w8, #0x7369, lsl #16
  45da2c:	str	w8, [x0]
  45da30:	ldr	x8, [x19, #8]
  45da34:	add	x8, x8, #0x4
  45da38:	b	45da6c <feof@plt+0x5a98c>
  45da3c:	mov	w0, #0x20                  	// #32
  45da40:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45da44:	add	x8, x0, #0x20
  45da48:	stp	x0, x0, [x19]
  45da4c:	str	x8, [x19, #16]
  45da50:	mov	w9, #0x747e                	// #29822
  45da54:	mov	w8, #0x73                  	// #115
  45da58:	movk	w9, #0x6968, lsl #16
  45da5c:	strb	w8, [x0, #4]
  45da60:	str	w9, [x0]
  45da64:	ldr	x8, [x19, #8]
  45da68:	add	x8, x8, #0x5
  45da6c:	str	x8, [x19, #8]
  45da70:	add	x21, x20, #0x6
  45da74:	b	45d4b0 <feof@plt+0x5a3d0>
  45da78:	mov	w0, #0x20                  	// #32
  45da7c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45da80:	add	x8, x0, #0x20
  45da84:	stp	x0, x0, [x19]
  45da88:	str	x8, [x19, #16]
  45da8c:	mov	w8, #0x2821                	// #10273
  45da90:	strh	w8, [x0]
  45da94:	ldr	x8, [x19, #8]
  45da98:	mov	x0, x19
  45da9c:	mov	x1, x21
  45daa0:	add	x8, x8, #0x2
  45daa4:	str	x8, [x19, #8]
  45daa8:	bl	45dc2c <feof@plt+0x5ab4c>
  45daac:	ldr	x8, [x19]
  45dab0:	mov	x21, x0
  45dab4:	cbz	x8, 45dafc <feof@plt+0x5aa1c>
  45dab8:	ldp	x0, x9, [x19, #8]
  45dabc:	sub	x9, x9, x0
  45dac0:	cmp	x9, #0x0
  45dac4:	b.gt	45db10 <feof@plt+0x5aa30>
  45dac8:	sub	x24, x0, x8
  45dacc:	lsl	w9, w24, #1
  45dad0:	add	w9, w9, #0x2
  45dad4:	sxtw	x22, w9
  45dad8:	mov	x0, x8
  45dadc:	mov	x1, x22
  45dae0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45dae4:	mov	x8, x0
  45dae8:	add	x0, x0, w24, sxtw
  45daec:	add	x9, x8, x22
  45daf0:	stp	x8, x0, [x19]
  45daf4:	str	x9, [x19, #16]
  45daf8:	b	45db10 <feof@plt+0x5aa30>
  45dafc:	mov	w0, #0x20                  	// #32
  45db00:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45db04:	add	x8, x0, #0x20
  45db08:	stp	x0, x0, [x19]
  45db0c:	str	x8, [x19, #16]
  45db10:	mov	w8, #0x29                  	// #41
  45db14:	strb	w8, [x0]
  45db18:	ldr	x8, [x19, #8]
  45db1c:	add	x8, x8, #0x1
  45db20:	str	x8, [x19, #8]
  45db24:	cbz	x21, 45d4b0 <feof@plt+0x5a3d0>
  45db28:	sub	x8, x21, x20
  45db2c:	cmp	x8, x23
  45db30:	b.ne	45d4ac <feof@plt+0x5a3cc>  // b.any
  45db34:	b	45d4b0 <feof@plt+0x5a3d0>
  45db38:	stp	x29, x30, [sp, #-64]!
  45db3c:	str	x23, [sp, #16]
  45db40:	stp	x22, x21, [sp, #32]
  45db44:	stp	x20, x19, [sp, #48]
  45db48:	mov	x29, sp
  45db4c:	cbz	x1, 45dc18 <feof@plt+0x5ab38>
  45db50:	ldrb	w8, [x1]
  45db54:	mov	x20, x1
  45db58:	cbz	w8, 45dc18 <feof@plt+0x5ab38>
  45db5c:	mov	x19, x0
  45db60:	mov	x0, x20
  45db64:	bl	402a50 <strlen@plt>
  45db68:	mov	x22, x0
  45db6c:	cbz	w22, 45dc18 <feof@plt+0x5ab38>
  45db70:	ldr	x0, [x19]
  45db74:	cbz	x0, 45dbb8 <feof@plt+0x5aad8>
  45db78:	ldp	x8, x9, [x19, #8]
  45db7c:	sxtw	x21, w22
  45db80:	sub	x9, x9, x8
  45db84:	cmp	x9, x21
  45db88:	b.ge	45dbf4 <feof@plt+0x5ab14>  // b.tcont
  45db8c:	sub	x23, x8, x0
  45db90:	add	w8, w23, w22
  45db94:	lsl	w8, w8, #1
  45db98:	sxtw	x22, w8
  45db9c:	mov	x1, x22
  45dba0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45dba4:	add	x8, x0, w23, sxtw
  45dba8:	add	x9, x0, x22
  45dbac:	stp	x0, x8, [x19]
  45dbb0:	str	x9, [x19, #16]
  45dbb4:	b	45dbf4 <feof@plt+0x5ab14>
  45dbb8:	and	x8, x22, #0xffffffff
  45dbbc:	cmp	w22, #0x20
  45dbc0:	mov	w9, #0x20                  	// #32
  45dbc4:	csel	x21, x8, x9, gt
  45dbc8:	mov	x0, x21
  45dbcc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45dbd0:	add	x8, x0, x21
  45dbd4:	stp	x0, x0, [x19]
  45dbd8:	str	x8, [x19, #16]
  45dbdc:	sxtw	x21, w22
  45dbe0:	mov	x8, x0
  45dbe4:	b	45dbf4 <feof@plt+0x5ab14>
  45dbe8:	ldrb	w9, [x8]
  45dbec:	strb	w9, [x8, x21]
  45dbf0:	ldr	x0, [x19]
  45dbf4:	sub	x8, x8, #0x1
  45dbf8:	cmp	x8, x0
  45dbfc:	b.cs	45dbe8 <feof@plt+0x5ab08>  // b.hs, b.nlast
  45dc00:	mov	x1, x20
  45dc04:	mov	x2, x21
  45dc08:	bl	4029c0 <memcpy@plt>
  45dc0c:	ldr	x8, [x19, #8]
  45dc10:	add	x8, x8, x21
  45dc14:	str	x8, [x19, #8]
  45dc18:	ldp	x20, x19, [sp, #48]
  45dc1c:	ldp	x22, x21, [sp, #32]
  45dc20:	ldr	x23, [sp, #16]
  45dc24:	ldp	x29, x30, [sp], #64
  45dc28:	ret
  45dc2c:	sub	sp, sp, #0x70
  45dc30:	stp	x20, x19, [sp, #96]
  45dc34:	mov	x20, x1
  45dc38:	stp	x29, x30, [sp, #32]
  45dc3c:	str	x25, [sp, #48]
  45dc40:	stp	x24, x23, [sp, #64]
  45dc44:	stp	x22, x21, [sp, #80]
  45dc48:	add	x29, sp, #0x20
  45dc4c:	cbz	x1, 45ddec <feof@plt+0x5ad0c>
  45dc50:	mov	x19, x0
  45dc54:	mov	x23, xzr
  45dc58:	mov	w24, #0x202c                	// #8236
  45dc5c:	b	45dc78 <feof@plt+0x5ab98>
  45dc60:	add	x1, x1, #0x1
  45dc64:	mov	x0, x19
  45dc68:	bl	45bcdc <feof@plt+0x58bfc>
  45dc6c:	mov	x20, x0
  45dc70:	sub	x23, x23, #0x1
  45dc74:	cbz	x20, 45ddec <feof@plt+0x5ad0c>
  45dc78:	ldrb	w8, [x20]
  45dc7c:	cbz	w8, 45ddec <feof@plt+0x5ad0c>
  45dc80:	cmp	w8, #0x5a
  45dc84:	b.eq	45dde8 <feof@plt+0x5ad08>  // b.none
  45dc88:	cbz	x23, 45dcfc <feof@plt+0x5ac1c>
  45dc8c:	ldr	x8, [x19]
  45dc90:	cbz	x8, 45dcd4 <feof@plt+0x5abf4>
  45dc94:	ldp	x0, x9, [x19, #8]
  45dc98:	sub	x9, x9, x0
  45dc9c:	cmp	x9, #0x1
  45dca0:	b.gt	45dce8 <feof@plt+0x5ac08>
  45dca4:	sub	x22, x0, x8
  45dca8:	lsl	w9, w22, #1
  45dcac:	add	w9, w9, #0x4
  45dcb0:	sxtw	x21, w9
  45dcb4:	mov	x0, x8
  45dcb8:	mov	x1, x21
  45dcbc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45dcc0:	mov	x8, x0
  45dcc4:	add	x0, x0, w22, sxtw
  45dcc8:	stp	x8, x0, [x19]
  45dccc:	add	x8, x8, x21
  45dcd0:	b	45dce4 <feof@plt+0x5ac04>
  45dcd4:	mov	w0, #0x20                  	// #32
  45dcd8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45dcdc:	stp	x0, x0, [x19]
  45dce0:	add	x8, x0, #0x20
  45dce4:	str	x8, [x19, #16]
  45dce8:	strh	w24, [x0]
  45dcec:	ldr	x8, [x19, #8]
  45dcf0:	add	x8, x8, #0x2
  45dcf4:	str	x8, [x19, #8]
  45dcf8:	ldrb	w8, [x20]
  45dcfc:	cmp	w8, #0x48
  45dd00:	cinc	x1, x20, eq  // eq = none
  45dd04:	ldrb	w8, [x1]
  45dd08:	cmp	w8, #0x56
  45dd0c:	b.eq	45dd34 <feof@plt+0x5ac54>  // b.none
  45dd10:	cmp	w8, #0x54
  45dd14:	b.eq	45dc60 <feof@plt+0x5ab80>  // b.none
  45dd18:	cmp	w8, #0x53
  45dd1c:	b.ne	45dde0 <feof@plt+0x5ad00>  // b.any
  45dd20:	add	x1, x1, #0x1
  45dd24:	mov	w2, #0x4                   	// #4
  45dd28:	mov	x0, x19
  45dd2c:	bl	45d478 <feof@plt+0x5a398>
  45dd30:	b	45dc6c <feof@plt+0x5ab8c>
  45dd34:	ldrb	w20, [x1, #1]!
  45dd38:	add	x0, sp, #0x8
  45dd3c:	stp	xzr, xzr, [sp, #8]
  45dd40:	str	xzr, [sp, #24]
  45dd44:	bl	45bcdc <feof@plt+0x58bfc>
  45dd48:	ldr	x8, [sp, #8]
  45dd4c:	mov	x21, x0
  45dd50:	cbz	x8, 45dd94 <feof@plt+0x5acb4>
  45dd54:	ldp	x0, x9, [sp, #16]
  45dd58:	sub	x9, x9, x0
  45dd5c:	cmp	x9, #0x0
  45dd60:	b.gt	45dda8 <feof@plt+0x5acc8>
  45dd64:	sub	x25, x0, x8
  45dd68:	lsl	w9, w25, #1
  45dd6c:	add	w9, w9, #0x2
  45dd70:	sxtw	x22, w9
  45dd74:	mov	x0, x8
  45dd78:	mov	x1, x22
  45dd7c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45dd80:	mov	x8, x0
  45dd84:	add	x0, x0, w25, sxtw
  45dd88:	stp	x8, x0, [sp, #8]
  45dd8c:	add	x8, x8, x22
  45dd90:	b	45dda4 <feof@plt+0x5acc4>
  45dd94:	mov	w0, #0x20                  	// #32
  45dd98:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45dd9c:	stp	x0, x0, [sp, #8]
  45dda0:	add	x8, x0, #0x20
  45dda4:	str	x8, [sp, #24]
  45dda8:	strb	wzr, [x0]
  45ddac:	ldr	x2, [sp, #8]
  45ddb0:	mov	x0, x19
  45ddb4:	mov	x1, x21
  45ddb8:	mov	w3, w20
  45ddbc:	bl	45de0c <feof@plt+0x5ad2c>
  45ddc0:	ldr	x8, [sp, #8]
  45ddc4:	mov	x20, x0
  45ddc8:	cbz	x8, 45dc70 <feof@plt+0x5ab90>
  45ddcc:	mov	x0, x8
  45ddd0:	bl	402b20 <free@plt>
  45ddd4:	stp	xzr, xzr, [sp, #8]
  45ddd8:	str	xzr, [sp, #24]
  45dddc:	b	45dc70 <feof@plt+0x5ab90>
  45dde0:	mov	x20, xzr
  45dde4:	b	45ddec <feof@plt+0x5ad0c>
  45dde8:	add	x20, x20, #0x1
  45ddec:	mov	x0, x20
  45ddf0:	ldp	x20, x19, [sp, #96]
  45ddf4:	ldp	x22, x21, [sp, #80]
  45ddf8:	ldp	x24, x23, [sp, #64]
  45ddfc:	ldr	x25, [sp, #48]
  45de00:	ldp	x29, x30, [sp, #32]
  45de04:	add	sp, sp, #0x70
  45de08:	ret
  45de0c:	stp	x29, x30, [sp, #-96]!
  45de10:	stp	x28, x27, [sp, #16]
  45de14:	stp	x26, x25, [sp, #32]
  45de18:	stp	x24, x23, [sp, #48]
  45de1c:	stp	x22, x21, [sp, #64]
  45de20:	stp	x20, x19, [sp, #80]
  45de24:	mov	x29, sp
  45de28:	cbz	x1, 45e834 <feof@plt+0x5b754>
  45de2c:	ldrb	w24, [x1]
  45de30:	mov	x21, x1
  45de34:	mov	x20, xzr
  45de38:	sub	w8, w24, #0x30
  45de3c:	cmp	w8, #0x47
  45de40:	b.hi	45e838 <feof@plt+0x5b758>  // b.pmore
  45de44:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45de48:	add	x9, x9, #0x76e
  45de4c:	adr	x10, 45de64 <feof@plt+0x5ad84>
  45de50:	ldrh	w11, [x9, x8, lsl #1]
  45de54:	add	x10, x10, x11, lsl #2
  45de58:	mov	w23, w3
  45de5c:	mov	x19, x0
  45de60:	br	x10
  45de64:	mov	x0, x19
  45de68:	mov	x1, x21
  45de6c:	mov	w2, w23
  45de70:	ldp	x20, x19, [sp, #80]
  45de74:	ldp	x22, x21, [sp, #64]
  45de78:	ldp	x24, x23, [sp, #48]
  45de7c:	ldp	x26, x25, [sp, #32]
  45de80:	ldp	x28, x27, [sp, #16]
  45de84:	ldp	x29, x30, [sp], #96
  45de88:	b	45edec <feof@plt+0x5bd0c>
  45de8c:	ldrb	w8, [x21, #1]
  45de90:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  45de94:	add	x22, x22, #0xe98
  45de98:	ldrh	w9, [x22, x8, lsl #1]
  45de9c:	tbz	w9, #2, 45e834 <feof@plt+0x5b754>
  45dea0:	mov	x9, #0x9999999999999999    	// #-7378697629483820647
  45dea4:	movk	x9, #0x9998
  45dea8:	mov	x23, xzr
  45deac:	add	x21, x21, #0x2
  45deb0:	movk	x9, #0x1999, lsl #48
  45deb4:	add	x10, x9, x23, lsl #1
  45deb8:	ror	x10, x10, #1
  45debc:	cmp	x10, x9
  45dec0:	b.hi	45e834 <feof@plt+0x5b754>  // b.pmore
  45dec4:	add	x10, x23, x23, lsl #2
  45dec8:	lsl	x10, x10, #1
  45decc:	add	x10, x10, w8, uxtb
  45ded0:	ldrb	w8, [x21], #1
  45ded4:	sub	x23, x10, #0x30
  45ded8:	ldrh	w11, [x22, x8, lsl #1]
  45dedc:	tbnz	w11, #2, 45deb4 <feof@plt+0x5add4>
  45dee0:	mov	x20, xzr
  45dee4:	tbnz	x23, #63, 45e838 <feof@plt+0x5b758>
  45dee8:	cmp	w8, #0x5f
  45deec:	b.ne	45e838 <feof@plt+0x5b758>  // b.any
  45def0:	ldr	x8, [x19]
  45def4:	cbz	x8, 45e370 <feof@plt+0x5b290>
  45def8:	ldp	x0, x9, [x19, #8]
  45defc:	sub	x9, x9, x0
  45df00:	cmp	x9, #0x0
  45df04:	b.gt	45e384 <feof@plt+0x5b2a4>
  45df08:	sub	x25, x0, x8
  45df0c:	lsl	w9, w25, #1
  45df10:	add	w9, w9, #0x2
  45df14:	sxtw	x20, w9
  45df18:	mov	x0, x8
  45df1c:	mov	x1, x20
  45df20:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45df24:	mov	x8, x0
  45df28:	add	x0, x0, w25, sxtw
  45df2c:	add	x9, x8, x20
  45df30:	stp	x8, x0, [x19]
  45df34:	str	x9, [x19, #16]
  45df38:	b	45e384 <feof@plt+0x5b2a4>
  45df3c:	ldrb	w9, [x21, #1]!
  45df40:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45df44:	add	x8, x8, #0xe98
  45df48:	and	w11, w23, #0xff
  45df4c:	ldrh	w10, [x8, x9, lsl #1]
  45df50:	cmp	w11, #0x48
  45df54:	b.ne	45e1e0 <feof@plt+0x5b100>  // b.any
  45df58:	tbz	w10, #2, 45e834 <feof@plt+0x5b754>
  45df5c:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  45df60:	movk	x10, #0x9998
  45df64:	mov	x22, xzr
  45df68:	movk	x10, #0x1999, lsl #48
  45df6c:	add	x11, x10, x22, lsl #1
  45df70:	ror	x11, x11, #1
  45df74:	cmp	x11, x10
  45df78:	b.hi	45e834 <feof@plt+0x5b754>  // b.pmore
  45df7c:	mov	w24, w9
  45df80:	ldrb	w9, [x21, #1]!
  45df84:	add	x12, x22, x22, lsl #2
  45df88:	lsl	x12, x12, #1
  45df8c:	add	x12, x12, w24, uxtb
  45df90:	ldrh	w11, [x8, x9, lsl #1]
  45df94:	mov	x23, x22
  45df98:	sub	x22, x12, #0x30
  45df9c:	tbnz	w11, #2, 45df6c <feof@plt+0x5ae8c>
  45dfa0:	mov	x20, xzr
  45dfa4:	cbz	w9, 45e838 <feof@plt+0x5b758>
  45dfa8:	tbnz	x22, #63, 45e838 <feof@plt+0x5b758>
  45dfac:	ldr	x8, [x19]
  45dfb0:	cbz	x8, 45eb38 <feof@plt+0x5ba58>
  45dfb4:	ldp	x0, x9, [x19, #8]
  45dfb8:	sub	x9, x9, x0
  45dfbc:	cmp	x9, #0x0
  45dfc0:	b.gt	45eb4c <feof@plt+0x5ba6c>
  45dfc4:	sub	x25, x0, x8
  45dfc8:	lsl	w9, w25, #1
  45dfcc:	add	w9, w9, #0x2
  45dfd0:	sxtw	x20, w9
  45dfd4:	mov	x0, x8
  45dfd8:	mov	x1, x20
  45dfdc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45dfe0:	mov	x8, x0
  45dfe4:	add	x0, x0, w25, sxtw
  45dfe8:	add	x9, x8, x20
  45dfec:	stp	x8, x0, [x19]
  45dff0:	str	x9, [x19, #16]
  45dff4:	b	45eb4c <feof@plt+0x5ba6c>
  45dff8:	ldr	x8, [x19]
  45dffc:	add	x20, x21, #0x1
  45e000:	cbz	x8, 45e278 <feof@plt+0x5b198>
  45e004:	ldp	x0, x9, [x19, #8]
  45e008:	sub	x9, x9, x0
  45e00c:	cmp	x9, #0x0
  45e010:	b.gt	45e28c <feof@plt+0x5b1ac>
  45e014:	sub	x22, x0, x8
  45e018:	lsl	w9, w22, #1
  45e01c:	add	w9, w9, #0x2
  45e020:	sxtw	x21, w9
  45e024:	mov	x0, x8
  45e028:	mov	x1, x21
  45e02c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e030:	mov	x8, x0
  45e034:	add	x0, x0, w22, sxtw
  45e038:	add	x9, x8, x21
  45e03c:	stp	x8, x0, [x19]
  45e040:	str	x9, [x19, #16]
  45e044:	b	45e28c <feof@plt+0x5b1ac>
  45e048:	ldrb	w8, [x21, #1]!
  45e04c:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45e050:	add	x9, x9, #0xe98
  45e054:	ldrh	w10, [x9, x8, lsl #1]
  45e058:	tbz	w10, #2, 45e834 <feof@plt+0x5b754>
  45e05c:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  45e060:	movk	x10, #0x9998
  45e064:	mov	x22, x2
  45e068:	mov	x24, xzr
  45e06c:	movk	x10, #0x1999, lsl #48
  45e070:	add	x11, x10, x24, lsl #1
  45e074:	ror	x11, x11, #1
  45e078:	cmp	x11, x10
  45e07c:	b.hi	45e834 <feof@plt+0x5b754>  // b.pmore
  45e080:	add	x11, x24, x24, lsl #2
  45e084:	lsl	x11, x11, #1
  45e088:	add	x11, x11, w8, uxtb
  45e08c:	ldrb	w8, [x21, #1]!
  45e090:	sub	x24, x11, #0x30
  45e094:	ldrh	w12, [x9, x8, lsl #1]
  45e098:	tbnz	w12, #2, 45e070 <feof@plt+0x5af90>
  45e09c:	mov	x20, xzr
  45e0a0:	cbz	w8, 45e838 <feof@plt+0x5b758>
  45e0a4:	tbnz	x24, #63, 45e838 <feof@plt+0x5b758>
  45e0a8:	cbz	x22, 45e9a0 <feof@plt+0x5b8c0>
  45e0ac:	mov	x0, x22
  45e0b0:	bl	402a50 <strlen@plt>
  45e0b4:	ldr	x8, [x19]
  45e0b8:	mov	x23, x0
  45e0bc:	cbz	x8, 45e960 <feof@plt+0x5b880>
  45e0c0:	ldp	x0, x9, [x19, #8]
  45e0c4:	sxtw	x20, w23
  45e0c8:	sub	x9, x9, x0
  45e0cc:	cmp	x9, x20
  45e0d0:	b.ge	45e988 <feof@plt+0x5b8a8>  // b.tcont
  45e0d4:	sub	x25, x0, x8
  45e0d8:	add	w9, w25, w23
  45e0dc:	lsl	w9, w9, #1
  45e0e0:	sxtw	x23, w9
  45e0e4:	mov	x0, x8
  45e0e8:	mov	x1, x23
  45e0ec:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e0f0:	mov	x8, x0
  45e0f4:	add	x0, x0, w25, sxtw
  45e0f8:	add	x9, x8, x23
  45e0fc:	stp	x8, x0, [x19]
  45e100:	str	x9, [x19, #16]
  45e104:	b	45e988 <feof@plt+0x5b8a8>
  45e108:	add	x1, x21, #0x1
  45e10c:	mov	x0, x19
  45e110:	bl	45f64c <feof@plt+0x5c56c>
  45e114:	ldr	x8, [x19]
  45e118:	mov	x20, x0
  45e11c:	cbz	x8, 45e2ac <feof@plt+0x5b1cc>
  45e120:	ldp	x0, x9, [x19, #8]
  45e124:	sub	x9, x9, x0
  45e128:	cmp	x9, #0x0
  45e12c:	b.gt	45e2c0 <feof@plt+0x5b1e0>
  45e130:	sub	x22, x0, x8
  45e134:	lsl	w9, w22, #1
  45e138:	add	w9, w9, #0x2
  45e13c:	sxtw	x21, w9
  45e140:	mov	x0, x8
  45e144:	mov	x1, x21
  45e148:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e14c:	mov	x8, x0
  45e150:	add	x0, x0, w22, sxtw
  45e154:	add	x9, x8, x21
  45e158:	stp	x8, x0, [x19]
  45e15c:	str	x9, [x19, #16]
  45e160:	b	45e2c0 <feof@plt+0x5b1e0>
  45e164:	add	x1, x21, #0x1
  45e168:	mov	x0, x19
  45e16c:	ldp	x20, x19, [sp, #80]
  45e170:	ldp	x22, x21, [sp, #64]
  45e174:	ldp	x24, x23, [sp, #48]
  45e178:	ldp	x26, x25, [sp, #32]
  45e17c:	ldp	x28, x27, [sp, #16]
  45e180:	ldp	x29, x30, [sp], #96
  45e184:	b	45f64c <feof@plt+0x5c56c>
  45e188:	add	x21, x21, #0x1
  45e18c:	b	45de64 <feof@plt+0x5ad84>
  45e190:	ldr	x8, [x19]
  45e194:	add	x20, x21, #0x1
  45e198:	cbz	x8, 45e344 <feof@plt+0x5b264>
  45e19c:	ldp	x0, x9, [x19, #8]
  45e1a0:	sub	x9, x9, x0
  45e1a4:	cmp	x9, #0x3
  45e1a8:	b.gt	45e358 <feof@plt+0x5b278>
  45e1ac:	sub	x22, x0, x8
  45e1b0:	lsl	w9, w22, #1
  45e1b4:	add	w9, w9, #0x8
  45e1b8:	sxtw	x21, w9
  45e1bc:	mov	x0, x8
  45e1c0:	mov	x1, x21
  45e1c4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e1c8:	mov	x8, x0
  45e1cc:	add	x0, x0, w22, sxtw
  45e1d0:	add	x9, x8, x21
  45e1d4:	stp	x8, x0, [x19]
  45e1d8:	str	x9, [x19, #16]
  45e1dc:	b	45e358 <feof@plt+0x5b278>
  45e1e0:	tbz	w10, #2, 45e834 <feof@plt+0x5b754>
  45e1e4:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  45e1e8:	movk	x10, #0x9998
  45e1ec:	mov	x22, xzr
  45e1f0:	movk	x10, #0x1999, lsl #48
  45e1f4:	add	x11, x10, x22, lsl #1
  45e1f8:	ror	x11, x11, #1
  45e1fc:	cmp	x11, x10
  45e200:	b.hi	45e834 <feof@plt+0x5b754>  // b.pmore
  45e204:	add	x11, x22, x22, lsl #2
  45e208:	lsl	x11, x11, #1
  45e20c:	add	x11, x11, w9, uxtb
  45e210:	ldrb	w9, [x21, #1]!
  45e214:	sub	x22, x11, #0x30
  45e218:	ldrh	w12, [x8, x9, lsl #1]
  45e21c:	tbnz	w12, #2, 45e1f4 <feof@plt+0x5b114>
  45e220:	mov	x20, xzr
  45e224:	cbz	w9, 45e838 <feof@plt+0x5b758>
  45e228:	tbnz	x22, #63, 45e838 <feof@plt+0x5b758>
  45e22c:	ldr	x8, [x19]
  45e230:	cbz	x8, 45ec90 <feof@plt+0x5bbb0>
  45e234:	ldp	x0, x9, [x19, #8]
  45e238:	sub	x9, x9, x0
  45e23c:	cmp	x9, #0x0
  45e240:	b.gt	45eca4 <feof@plt+0x5bbc4>
  45e244:	sub	x23, x0, x8
  45e248:	lsl	w9, w23, #1
  45e24c:	add	w9, w9, #0x2
  45e250:	sxtw	x20, w9
  45e254:	mov	x0, x8
  45e258:	mov	x1, x20
  45e25c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e260:	mov	x8, x0
  45e264:	add	x0, x0, w23, sxtw
  45e268:	add	x9, x8, x20
  45e26c:	stp	x8, x0, [x19]
  45e270:	str	x9, [x19, #16]
  45e274:	b	45eca4 <feof@plt+0x5bbc4>
  45e278:	mov	w0, #0x20                  	// #32
  45e27c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e280:	add	x8, x0, #0x20
  45e284:	stp	x0, x0, [x19]
  45e288:	str	x8, [x19, #16]
  45e28c:	mov	w8, #0x2d                  	// #45
  45e290:	strb	w8, [x0]
  45e294:	ldr	x8, [x19, #8]
  45e298:	mov	x0, x19
  45e29c:	mov	x1, x20
  45e2a0:	add	x8, x8, #0x1
  45e2a4:	str	x8, [x19, #8]
  45e2a8:	b	45de6c <feof@plt+0x5ad8c>
  45e2ac:	mov	w0, #0x20                  	// #32
  45e2b0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e2b4:	add	x8, x0, #0x20
  45e2b8:	stp	x0, x0, [x19]
  45e2bc:	str	x8, [x19, #16]
  45e2c0:	mov	w8, #0x2b                  	// #43
  45e2c4:	strb	w8, [x0]
  45e2c8:	ldr	x8, [x19, #8]
  45e2cc:	add	x8, x8, #0x1
  45e2d0:	str	x8, [x19, #8]
  45e2d4:	cbz	x20, 45e838 <feof@plt+0x5b758>
  45e2d8:	ldrb	w8, [x20]
  45e2dc:	cmp	w8, #0x63
  45e2e0:	b.ne	45e834 <feof@plt+0x5b754>  // b.any
  45e2e4:	add	x1, x20, #0x1
  45e2e8:	mov	x0, x19
  45e2ec:	bl	45f64c <feof@plt+0x5c56c>
  45e2f0:	ldr	x8, [x19]
  45e2f4:	mov	x20, x0
  45e2f8:	cbz	x8, 45e8a8 <feof@plt+0x5b7c8>
  45e2fc:	ldp	x0, x9, [x19, #8]
  45e300:	sub	x9, x9, x0
  45e304:	cmp	x9, #0x0
  45e308:	b.gt	45e33c <feof@plt+0x5b25c>
  45e30c:	sub	x22, x0, x8
  45e310:	lsl	w9, w22, #1
  45e314:	add	w9, w9, #0x2
  45e318:	sxtw	x21, w9
  45e31c:	mov	x0, x8
  45e320:	mov	x1, x21
  45e324:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e328:	mov	x8, x0
  45e32c:	add	x0, x0, w22, sxtw
  45e330:	add	x9, x8, x21
  45e334:	stp	x8, x0, [x19]
  45e338:	str	x9, [x19, #16]
  45e33c:	mov	w8, #0x69                  	// #105
  45e340:	b	45edd8 <feof@plt+0x5bcf8>
  45e344:	mov	w0, #0x20                  	// #32
  45e348:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e34c:	add	x8, x0, #0x20
  45e350:	stp	x0, x0, [x19]
  45e354:	str	x8, [x19, #16]
  45e358:	mov	w8, #0x756e                	// #30062
  45e35c:	movk	w8, #0x6c6c, lsl #16
  45e360:	str	w8, [x0]
  45e364:	ldr	x8, [x19, #8]
  45e368:	add	x8, x8, #0x4
  45e36c:	b	45ede4 <feof@plt+0x5bd04>
  45e370:	mov	w0, #0x20                  	// #32
  45e374:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e378:	add	x8, x0, #0x20
  45e37c:	stp	x0, x0, [x19]
  45e380:	str	x8, [x19, #16]
  45e384:	mov	w8, #0x22                  	// #34
  45e388:	strb	w8, [x0]
  45e38c:	ldr	x8, [x19, #8]
  45e390:	add	x0, x8, #0x1
  45e394:	str	x0, [x19, #8]
  45e398:	cbz	x23, 45e858 <feof@plt+0x5b778>
  45e39c:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e3a0:	mov	w25, #0xffffffbf            	// #-65
  45e3a4:	mov	w26, #0xffffff9f            	// #-97
  45e3a8:	mov	w28, #0x20                  	// #32
  45e3ac:	add	x20, x20, #0x7fe
  45e3b0:	b	45e3e8 <feof@plt+0x5b308>
  45e3b4:	mov	w0, #0x20                  	// #32
  45e3b8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e3bc:	stp	x0, x0, [x19]
  45e3c0:	add	x8, x0, #0x20
  45e3c4:	str	x8, [x19, #16]
  45e3c8:	mov	w8, #0x765c                	// #30300
  45e3cc:	strh	w8, [x0]
  45e3d0:	mov	w8, #0x2                   	// #2
  45e3d4:	ldr	x9, [x19, #8]
  45e3d8:	add	x21, x21, #0x2
  45e3dc:	add	x0, x9, x8
  45e3e0:	str	x0, [x19, #8]
  45e3e4:	cbz	x23, 45e858 <feof@plt+0x5b778>
  45e3e8:	ldrb	w10, [x21]
  45e3ec:	ldrh	w11, [x22, x10, lsl #1]
  45e3f0:	tbz	w11, #8, 45e834 <feof@plt+0x5b754>
  45e3f4:	ldrb	w8, [x21, #1]
  45e3f8:	ldrh	w9, [x22, x8, lsl #1]
  45e3fc:	tbz	w9, #8, 45e834 <feof@plt+0x5b754>
  45e400:	tbnz	w11, #2, 45e424 <feof@plt+0x5b344>
  45e404:	tst	w11, #0x80
  45e408:	csel	w11, w26, w25, eq  // eq = none
  45e40c:	add	w10, w10, w11
  45e410:	add	w10, w10, #0xa
  45e414:	lsl	w10, w10, #4
  45e418:	tbz	w9, #2, 45e430 <feof@plt+0x5b350>
  45e41c:	sub	w8, w8, #0x30
  45e420:	b	45e440 <feof@plt+0x5b360>
  45e424:	sub	w10, w10, #0x30
  45e428:	lsl	w10, w10, #4
  45e42c:	tbnz	w9, #2, 45e41c <feof@plt+0x5b33c>
  45e430:	tst	w9, #0x80
  45e434:	csel	w9, w26, w25, eq  // eq = none
  45e438:	add	w8, w8, w9
  45e43c:	add	w8, w8, #0xa
  45e440:	orr	w27, w8, w10
  45e444:	and	w8, w27, #0xff
  45e448:	sub	w8, w8, #0x9
  45e44c:	cmp	w8, #0x17
  45e450:	sub	x23, x23, #0x1
  45e454:	b.hi	45e5f8 <feof@plt+0x5b518>  // b.pmore
  45e458:	adr	x9, 45e468 <feof@plt+0x5b388>
  45e45c:	ldrb	w10, [x20, x8]
  45e460:	add	x9, x9, x10, lsl #2
  45e464:	br	x9
  45e468:	ldr	x8, [x19]
  45e46c:	cbz	x8, 45e6f4 <feof@plt+0x5b614>
  45e470:	ldr	x9, [x19, #16]
  45e474:	sub	x9, x9, x0
  45e478:	cmp	x9, #0x1
  45e47c:	b.gt	45e708 <feof@plt+0x5b628>
  45e480:	sub	x27, x0, x8
  45e484:	lsl	w9, w27, #1
  45e488:	add	w9, w9, #0x4
  45e48c:	sxtw	x20, w9
  45e490:	mov	x0, x8
  45e494:	mov	x1, x20
  45e498:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e49c:	mov	x8, x0
  45e4a0:	add	x0, x0, w27, sxtw
  45e4a4:	stp	x8, x0, [x19]
  45e4a8:	add	x8, x8, x20
  45e4ac:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e4b0:	add	x20, x20, #0x7fe
  45e4b4:	b	45e704 <feof@plt+0x5b624>
  45e4b8:	ldr	x8, [x19]
  45e4bc:	cbz	x8, 45e710 <feof@plt+0x5b630>
  45e4c0:	ldr	x9, [x19, #16]
  45e4c4:	sub	x9, x9, x0
  45e4c8:	cmp	x9, #0x1
  45e4cc:	b.gt	45e724 <feof@plt+0x5b644>
  45e4d0:	sub	x27, x0, x8
  45e4d4:	lsl	w9, w27, #1
  45e4d8:	add	w9, w9, #0x4
  45e4dc:	sxtw	x20, w9
  45e4e0:	mov	x0, x8
  45e4e4:	mov	x1, x20
  45e4e8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e4ec:	mov	x8, x0
  45e4f0:	add	x0, x0, w27, sxtw
  45e4f4:	stp	x8, x0, [x19]
  45e4f8:	add	x8, x8, x20
  45e4fc:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e500:	add	x20, x20, #0x7fe
  45e504:	b	45e720 <feof@plt+0x5b640>
  45e508:	ldr	x8, [x19]
  45e50c:	cbz	x8, 45e3b4 <feof@plt+0x5b2d4>
  45e510:	ldr	x9, [x19, #16]
  45e514:	sub	x9, x9, x0
  45e518:	cmp	x9, #0x1
  45e51c:	b.gt	45e3c8 <feof@plt+0x5b2e8>
  45e520:	sub	x27, x0, x8
  45e524:	lsl	w9, w27, #1
  45e528:	add	w9, w9, #0x4
  45e52c:	sxtw	x20, w9
  45e530:	mov	x0, x8
  45e534:	mov	x1, x20
  45e538:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e53c:	mov	x8, x0
  45e540:	add	x0, x0, w27, sxtw
  45e544:	stp	x8, x0, [x19]
  45e548:	add	x8, x8, x20
  45e54c:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e550:	add	x20, x20, #0x7fe
  45e554:	b	45e3c4 <feof@plt+0x5b2e4>
  45e558:	ldr	x8, [x19]
  45e55c:	cbz	x8, 45e72c <feof@plt+0x5b64c>
  45e560:	ldr	x9, [x19, #16]
  45e564:	sub	x9, x9, x0
  45e568:	cmp	x9, #0x1
  45e56c:	b.gt	45e740 <feof@plt+0x5b660>
  45e570:	sub	x27, x0, x8
  45e574:	lsl	w9, w27, #1
  45e578:	add	w9, w9, #0x4
  45e57c:	sxtw	x20, w9
  45e580:	mov	x0, x8
  45e584:	mov	x1, x20
  45e588:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e58c:	mov	x8, x0
  45e590:	add	x0, x0, w27, sxtw
  45e594:	stp	x8, x0, [x19]
  45e598:	add	x8, x8, x20
  45e59c:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e5a0:	add	x20, x20, #0x7fe
  45e5a4:	b	45e73c <feof@plt+0x5b65c>
  45e5a8:	ldr	x8, [x19]
  45e5ac:	cbz	x8, 45e748 <feof@plt+0x5b668>
  45e5b0:	ldr	x9, [x19, #16]
  45e5b4:	sub	x9, x9, x0
  45e5b8:	cmp	x9, #0x1
  45e5bc:	b.gt	45e75c <feof@plt+0x5b67c>
  45e5c0:	sub	x27, x0, x8
  45e5c4:	lsl	w9, w27, #1
  45e5c8:	add	w9, w9, #0x4
  45e5cc:	sxtw	x20, w9
  45e5d0:	mov	x0, x8
  45e5d4:	mov	x1, x20
  45e5d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e5dc:	mov	x8, x0
  45e5e0:	add	x0, x0, w27, sxtw
  45e5e4:	stp	x8, x0, [x19]
  45e5e8:	add	x8, x8, x20
  45e5ec:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e5f0:	add	x20, x20, #0x7fe
  45e5f4:	b	45e758 <feof@plt+0x5b678>
  45e5f8:	and	x8, x27, #0xff
  45e5fc:	ldrh	w9, [x22, x8, lsl #1]
  45e600:	ldr	x8, [x19]
  45e604:	tbnz	w9, #4, 45e6a4 <feof@plt+0x5b5c4>
  45e608:	cbz	x8, 45e784 <feof@plt+0x5b6a4>
  45e60c:	ldr	x9, [x19, #16]
  45e610:	sub	x9, x9, x0
  45e614:	cmp	x9, #0x1
  45e618:	b.gt	45e798 <feof@plt+0x5b6b8>
  45e61c:	sub	x27, x0, x8
  45e620:	lsl	w9, w27, #1
  45e624:	add	w9, w9, #0x4
  45e628:	sxtw	x20, w9
  45e62c:	mov	x0, x8
  45e630:	mov	x1, x20
  45e634:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e638:	mov	x8, x0
  45e63c:	add	x0, x0, w27, sxtw
  45e640:	stp	x8, x0, [x19]
  45e644:	add	x8, x8, x20
  45e648:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e64c:	add	x20, x20, #0x7fe
  45e650:	b	45e794 <feof@plt+0x5b6b4>
  45e654:	ldr	x8, [x19]
  45e658:	cbz	x8, 45e764 <feof@plt+0x5b684>
  45e65c:	ldr	x9, [x19, #16]
  45e660:	sub	x9, x9, x0
  45e664:	cmp	x9, #0x0
  45e668:	b.gt	45e778 <feof@plt+0x5b698>
  45e66c:	sub	x27, x0, x8
  45e670:	lsl	w9, w27, #1
  45e674:	add	w9, w9, #0x2
  45e678:	sxtw	x20, w9
  45e67c:	mov	x0, x8
  45e680:	mov	x1, x20
  45e684:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e688:	mov	x8, x0
  45e68c:	add	x0, x0, w27, sxtw
  45e690:	stp	x8, x0, [x19]
  45e694:	add	x8, x8, x20
  45e698:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e69c:	add	x20, x20, #0x7fe
  45e6a0:	b	45e774 <feof@plt+0x5b694>
  45e6a4:	cbz	x8, 45e7f8 <feof@plt+0x5b718>
  45e6a8:	ldr	x9, [x19, #16]
  45e6ac:	sub	x9, x9, x0
  45e6b0:	cmp	x9, #0x0
  45e6b4:	b.gt	45e80c <feof@plt+0x5b72c>
  45e6b8:	sub	x28, x0, x8
  45e6bc:	lsl	w9, w28, #1
  45e6c0:	add	w9, w9, #0x2
  45e6c4:	sxtw	x20, w9
  45e6c8:	mov	x0, x8
  45e6cc:	mov	x1, x20
  45e6d0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e6d4:	mov	x8, x0
  45e6d8:	add	x0, x0, w28, sxtw
  45e6dc:	stp	x8, x0, [x19]
  45e6e0:	add	x8, x8, x20
  45e6e4:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e6e8:	mov	w28, #0x20                  	// #32
  45e6ec:	add	x20, x20, #0x7fe
  45e6f0:	b	45e808 <feof@plt+0x5b728>
  45e6f4:	mov	w0, #0x20                  	// #32
  45e6f8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e6fc:	stp	x0, x0, [x19]
  45e700:	add	x8, x0, #0x20
  45e704:	str	x8, [x19, #16]
  45e708:	mov	w8, #0x745c                	// #29788
  45e70c:	b	45e3cc <feof@plt+0x5b2ec>
  45e710:	mov	w0, #0x20                  	// #32
  45e714:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e718:	stp	x0, x0, [x19]
  45e71c:	add	x8, x0, #0x20
  45e720:	str	x8, [x19, #16]
  45e724:	mov	w8, #0x6e5c                	// #28252
  45e728:	b	45e3cc <feof@plt+0x5b2ec>
  45e72c:	mov	w0, #0x20                  	// #32
  45e730:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e734:	stp	x0, x0, [x19]
  45e738:	add	x8, x0, #0x20
  45e73c:	str	x8, [x19, #16]
  45e740:	mov	w8, #0x665c                	// #26204
  45e744:	b	45e3cc <feof@plt+0x5b2ec>
  45e748:	mov	w0, #0x20                  	// #32
  45e74c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e750:	stp	x0, x0, [x19]
  45e754:	add	x8, x0, #0x20
  45e758:	str	x8, [x19, #16]
  45e75c:	mov	w8, #0x725c                	// #29276
  45e760:	b	45e3cc <feof@plt+0x5b2ec>
  45e764:	mov	w0, #0x20                  	// #32
  45e768:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e76c:	stp	x0, x0, [x19]
  45e770:	add	x8, x0, #0x20
  45e774:	str	x8, [x19, #16]
  45e778:	strb	w28, [x0]
  45e77c:	mov	w8, #0x1                   	// #1
  45e780:	b	45e3d4 <feof@plt+0x5b2f4>
  45e784:	mov	w0, #0x20                  	// #32
  45e788:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e78c:	stp	x0, x0, [x19]
  45e790:	add	x8, x0, #0x20
  45e794:	str	x8, [x19, #16]
  45e798:	mov	w8, #0x785c                	// #30812
  45e79c:	strh	w8, [x0]
  45e7a0:	ldp	x8, x9, [x19]
  45e7a4:	add	x0, x9, #0x2
  45e7a8:	str	x0, [x19, #8]
  45e7ac:	cbz	x8, 45e818 <feof@plt+0x5b738>
  45e7b0:	ldr	x9, [x19, #16]
  45e7b4:	sub	x9, x9, x0
  45e7b8:	cmp	x9, #0x1
  45e7bc:	b.gt	45e82c <feof@plt+0x5b74c>
  45e7c0:	sub	x27, x0, x8
  45e7c4:	lsl	w9, w27, #1
  45e7c8:	add	w9, w9, #0x4
  45e7cc:	sxtw	x20, w9
  45e7d0:	mov	x0, x8
  45e7d4:	mov	x1, x20
  45e7d8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e7dc:	mov	x8, x0
  45e7e0:	add	x0, x0, w27, sxtw
  45e7e4:	stp	x8, x0, [x19]
  45e7e8:	add	x8, x8, x20
  45e7ec:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  45e7f0:	add	x20, x20, #0x7fe
  45e7f4:	b	45e828 <feof@plt+0x5b748>
  45e7f8:	mov	w0, #0x20                  	// #32
  45e7fc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e800:	stp	x0, x0, [x19]
  45e804:	add	x8, x0, #0x20
  45e808:	str	x8, [x19, #16]
  45e80c:	strb	w27, [x0]
  45e810:	mov	w8, #0x1                   	// #1
  45e814:	b	45e3d4 <feof@plt+0x5b2f4>
  45e818:	mov	w0, #0x20                  	// #32
  45e81c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e820:	stp	x0, x0, [x19]
  45e824:	add	x8, x0, #0x20
  45e828:	str	x8, [x19, #16]
  45e82c:	ldrh	w8, [x21]
  45e830:	b	45e3cc <feof@plt+0x5b2ec>
  45e834:	mov	x20, xzr
  45e838:	mov	x0, x20
  45e83c:	ldp	x20, x19, [sp, #80]
  45e840:	ldp	x22, x21, [sp, #64]
  45e844:	ldp	x24, x23, [sp, #48]
  45e848:	ldp	x26, x25, [sp, #32]
  45e84c:	ldp	x28, x27, [sp, #16]
  45e850:	ldp	x29, x30, [sp], #96
  45e854:	ret
  45e858:	ldr	x8, [x19]
  45e85c:	mov	x20, x21
  45e860:	cbz	x8, 45e8c4 <feof@plt+0x5b7e4>
  45e864:	ldr	x9, [x19, #16]
  45e868:	sub	x9, x9, x0
  45e86c:	cmp	x9, #0x0
  45e870:	b.gt	45e8d8 <feof@plt+0x5b7f8>
  45e874:	sub	x22, x0, x8
  45e878:	lsl	w9, w22, #1
  45e87c:	add	w9, w9, #0x2
  45e880:	sxtw	x21, w9
  45e884:	mov	x0, x8
  45e888:	mov	x1, x21
  45e88c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e890:	mov	x8, x0
  45e894:	add	x0, x0, w22, sxtw
  45e898:	add	x9, x8, x21
  45e89c:	stp	x8, x0, [x19]
  45e8a0:	str	x9, [x19, #16]
  45e8a4:	b	45e8d8 <feof@plt+0x5b7f8>
  45e8a8:	mov	w0, #0x20                  	// #32
  45e8ac:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e8b0:	add	x8, x0, #0x20
  45e8b4:	stp	x0, x0, [x19]
  45e8b8:	str	x8, [x19, #16]
  45e8bc:	mov	w8, #0x69                  	// #105
  45e8c0:	b	45edd8 <feof@plt+0x5bcf8>
  45e8c4:	mov	w0, #0x20                  	// #32
  45e8c8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e8cc:	add	x8, x0, #0x20
  45e8d0:	stp	x0, x0, [x19]
  45e8d4:	str	x8, [x19, #16]
  45e8d8:	mov	w8, #0x22                  	// #34
  45e8dc:	strb	w8, [x0]
  45e8e0:	ldr	x8, [x19, #8]
  45e8e4:	cmp	w24, #0x61
  45e8e8:	add	x0, x8, #0x1
  45e8ec:	str	x0, [x19, #8]
  45e8f0:	b.eq	45e838 <feof@plt+0x5b758>  // b.none
  45e8f4:	ldr	x8, [x19]
  45e8f8:	cbz	x8, 45e944 <feof@plt+0x5b864>
  45e8fc:	ldr	x9, [x19, #16]
  45e900:	sub	x9, x9, x0
  45e904:	cmp	x9, #0x0
  45e908:	b.gt	45e93c <feof@plt+0x5b85c>
  45e90c:	sub	x22, x0, x8
  45e910:	lsl	w9, w22, #1
  45e914:	add	w9, w9, #0x2
  45e918:	sxtw	x21, w9
  45e91c:	mov	x0, x8
  45e920:	mov	x1, x21
  45e924:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e928:	mov	x8, x0
  45e92c:	add	x0, x0, w22, sxtw
  45e930:	add	x9, x8, x21
  45e934:	stp	x8, x0, [x19]
  45e938:	str	x9, [x19, #16]
  45e93c:	strb	w24, [x0]
  45e940:	b	45eddc <feof@plt+0x5bcfc>
  45e944:	mov	w0, #0x20                  	// #32
  45e948:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e94c:	add	x8, x0, #0x20
  45e950:	stp	x0, x0, [x19]
  45e954:	str	x8, [x19, #16]
  45e958:	strb	w24, [x0]
  45e95c:	b	45eddc <feof@plt+0x5bcfc>
  45e960:	and	x8, x23, #0xffffffff
  45e964:	cmp	w23, #0x20
  45e968:	mov	w9, #0x20                  	// #32
  45e96c:	csel	x20, x8, x9, gt
  45e970:	mov	x0, x20
  45e974:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e978:	add	x8, x0, x20
  45e97c:	stp	x0, x0, [x19]
  45e980:	str	x8, [x19, #16]
  45e984:	sxtw	x20, w23
  45e988:	mov	x1, x22
  45e98c:	mov	x2, x20
  45e990:	bl	4029c0 <memcpy@plt>
  45e994:	ldr	x8, [x19, #8]
  45e998:	add	x8, x8, x20
  45e99c:	str	x8, [x19, #8]
  45e9a0:	ldr	x8, [x19]
  45e9a4:	cbz	x8, 45e9ec <feof@plt+0x5b90c>
  45e9a8:	ldp	x0, x9, [x19, #8]
  45e9ac:	sub	x9, x9, x0
  45e9b0:	cmp	x9, #0x0
  45e9b4:	b.gt	45ea00 <feof@plt+0x5b920>
  45e9b8:	sub	x22, x0, x8
  45e9bc:	lsl	w9, w22, #1
  45e9c0:	add	w9, w9, #0x2
  45e9c4:	sxtw	x20, w9
  45e9c8:	mov	x0, x8
  45e9cc:	mov	x1, x20
  45e9d0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45e9d4:	mov	x8, x0
  45e9d8:	add	x0, x0, w22, sxtw
  45e9dc:	add	x9, x8, x20
  45e9e0:	stp	x8, x0, [x19]
  45e9e4:	str	x9, [x19, #16]
  45e9e8:	b	45ea00 <feof@plt+0x5b920>
  45e9ec:	mov	w0, #0x20                  	// #32
  45e9f0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45e9f4:	add	x8, x0, #0x20
  45e9f8:	stp	x0, x0, [x19]
  45e9fc:	str	x8, [x19, #16]
  45ea00:	mov	w8, #0x28                  	// #40
  45ea04:	strb	w8, [x0]
  45ea08:	ldr	x8, [x19, #8]
  45ea0c:	add	x8, x8, #0x1
  45ea10:	str	x8, [x19, #8]
  45ea14:	cbz	x24, 45eacc <feof@plt+0x5b9ec>
  45ea18:	mov	x0, x19
  45ea1c:	mov	x1, x21
  45ea20:	mov	x2, xzr
  45ea24:	mov	w3, wzr
  45ea28:	sub	x22, x24, #0x1
  45ea2c:	bl	45de0c <feof@plt+0x5ad2c>
  45ea30:	mov	x20, x0
  45ea34:	cbz	x22, 45ead0 <feof@plt+0x5b9f0>
  45ea38:	mov	w23, #0x202c                	// #8236
  45ea3c:	b	45ea84 <feof@plt+0x5b9a4>
  45ea40:	mov	w0, #0x20                  	// #32
  45ea44:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ea48:	stp	x0, x0, [x19]
  45ea4c:	add	x8, x0, #0x20
  45ea50:	str	x8, [x19, #16]
  45ea54:	strh	w23, [x0]
  45ea58:	ldr	x8, [x19, #8]
  45ea5c:	mov	x0, x19
  45ea60:	mov	x1, x20
  45ea64:	mov	x2, xzr
  45ea68:	add	x8, x8, #0x2
  45ea6c:	mov	w3, wzr
  45ea70:	str	x8, [x19, #8]
  45ea74:	sub	x22, x22, #0x1
  45ea78:	bl	45de0c <feof@plt+0x5ad2c>
  45ea7c:	mov	x20, x0
  45ea80:	cbz	x22, 45ead0 <feof@plt+0x5b9f0>
  45ea84:	ldr	x8, [x19]
  45ea88:	cbz	x8, 45ea40 <feof@plt+0x5b960>
  45ea8c:	ldp	x0, x9, [x19, #8]
  45ea90:	sub	x9, x9, x0
  45ea94:	cmp	x9, #0x1
  45ea98:	b.gt	45ea54 <feof@plt+0x5b974>
  45ea9c:	sub	x24, x0, x8
  45eaa0:	lsl	w9, w24, #1
  45eaa4:	add	w9, w9, #0x4
  45eaa8:	sxtw	x21, w9
  45eaac:	mov	x0, x8
  45eab0:	mov	x1, x21
  45eab4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45eab8:	mov	x8, x0
  45eabc:	add	x0, x0, w24, sxtw
  45eac0:	stp	x8, x0, [x19]
  45eac4:	add	x8, x8, x21
  45eac8:	b	45ea50 <feof@plt+0x5b970>
  45eacc:	mov	x20, x21
  45ead0:	ldr	x8, [x19]
  45ead4:	cbz	x8, 45eb1c <feof@plt+0x5ba3c>
  45ead8:	ldp	x0, x9, [x19, #8]
  45eadc:	sub	x9, x9, x0
  45eae0:	cmp	x9, #0x0
  45eae4:	b.gt	45eb30 <feof@plt+0x5ba50>
  45eae8:	sub	x22, x0, x8
  45eaec:	lsl	w9, w22, #1
  45eaf0:	add	w9, w9, #0x2
  45eaf4:	sxtw	x21, w9
  45eaf8:	mov	x0, x8
  45eafc:	mov	x1, x21
  45eb00:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45eb04:	mov	x8, x0
  45eb08:	add	x0, x0, w22, sxtw
  45eb0c:	add	x9, x8, x21
  45eb10:	stp	x8, x0, [x19]
  45eb14:	str	x9, [x19, #16]
  45eb18:	b	45eb30 <feof@plt+0x5ba50>
  45eb1c:	mov	w0, #0x20                  	// #32
  45eb20:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45eb24:	add	x8, x0, #0x20
  45eb28:	stp	x0, x0, [x19]
  45eb2c:	str	x8, [x19, #16]
  45eb30:	mov	w8, #0x29                  	// #41
  45eb34:	b	45edd8 <feof@plt+0x5bcf8>
  45eb38:	mov	w0, #0x20                  	// #32
  45eb3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45eb40:	add	x8, x0, #0x20
  45eb44:	stp	x0, x0, [x19]
  45eb48:	str	x8, [x19, #16]
  45eb4c:	mov	w8, #0x5b                  	// #91
  45eb50:	strb	w8, [x0]
  45eb54:	ldr	x8, [x19, #8]
  45eb58:	add	x8, x8, #0x1
  45eb5c:	str	x8, [x19, #8]
  45eb60:	cbz	x22, 45ed70 <feof@plt+0x5bc90>
  45eb64:	mov	w8, #0xa                   	// #10
  45eb68:	mul	x8, x23, x8
  45eb6c:	add	x8, x8, w24, uxtb
  45eb70:	mov	w22, #0x3a                  	// #58
  45eb74:	sub	x23, x8, #0x31
  45eb78:	mov	w24, #0x202c                	// #8236
  45eb7c:	b	45eba8 <feof@plt+0x5bac8>
  45eb80:	mov	w0, #0x20                  	// #32
  45eb84:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45eb88:	stp	x0, x0, [x19]
  45eb8c:	add	x8, x0, #0x20
  45eb90:	str	x8, [x19, #16]
  45eb94:	strh	w24, [x0]
  45eb98:	ldr	x8, [x19, #8]
  45eb9c:	sub	x23, x23, #0x1
  45eba0:	add	x8, x8, #0x2
  45eba4:	str	x8, [x19, #8]
  45eba8:	mov	x0, x19
  45ebac:	mov	x1, x21
  45ebb0:	mov	x2, xzr
  45ebb4:	mov	w3, wzr
  45ebb8:	bl	45de0c <feof@plt+0x5ad2c>
  45ebbc:	ldr	x8, [x19]
  45ebc0:	mov	x20, x0
  45ebc4:	cbz	x8, 45ec08 <feof@plt+0x5bb28>
  45ebc8:	ldp	x0, x9, [x19, #8]
  45ebcc:	sub	x9, x9, x0
  45ebd0:	cmp	x9, #0x0
  45ebd4:	b.gt	45ec1c <feof@plt+0x5bb3c>
  45ebd8:	sub	x25, x0, x8
  45ebdc:	lsl	w9, w25, #1
  45ebe0:	add	w9, w9, #0x2
  45ebe4:	sxtw	x21, w9
  45ebe8:	mov	x0, x8
  45ebec:	mov	x1, x21
  45ebf0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ebf4:	mov	x8, x0
  45ebf8:	add	x0, x0, w25, sxtw
  45ebfc:	stp	x8, x0, [x19]
  45ec00:	add	x8, x8, x21
  45ec04:	b	45ec18 <feof@plt+0x5bb38>
  45ec08:	mov	w0, #0x20                  	// #32
  45ec0c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ec10:	stp	x0, x0, [x19]
  45ec14:	add	x8, x0, #0x20
  45ec18:	str	x8, [x19, #16]
  45ec1c:	strb	w22, [x0]
  45ec20:	ldr	x8, [x19, #8]
  45ec24:	mov	x0, x19
  45ec28:	mov	x1, x20
  45ec2c:	mov	x2, xzr
  45ec30:	add	x8, x8, #0x1
  45ec34:	mov	w3, wzr
  45ec38:	str	x8, [x19, #8]
  45ec3c:	bl	45de0c <feof@plt+0x5ad2c>
  45ec40:	mov	x21, x0
  45ec44:	cbz	x23, 45ed70 <feof@plt+0x5bc90>
  45ec48:	ldr	x8, [x19]
  45ec4c:	cbz	x8, 45eb80 <feof@plt+0x5baa0>
  45ec50:	ldp	x0, x9, [x19, #8]
  45ec54:	sub	x9, x9, x0
  45ec58:	cmp	x9, #0x1
  45ec5c:	b.gt	45eb94 <feof@plt+0x5bab4>
  45ec60:	sub	x25, x0, x8
  45ec64:	lsl	w9, w25, #1
  45ec68:	add	w9, w9, #0x4
  45ec6c:	sxtw	x20, w9
  45ec70:	mov	x0, x8
  45ec74:	mov	x1, x20
  45ec78:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ec7c:	mov	x8, x0
  45ec80:	add	x0, x0, w25, sxtw
  45ec84:	stp	x8, x0, [x19]
  45ec88:	add	x8, x8, x20
  45ec8c:	b	45eb90 <feof@plt+0x5bab0>
  45ec90:	mov	w0, #0x20                  	// #32
  45ec94:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ec98:	add	x8, x0, #0x20
  45ec9c:	stp	x0, x0, [x19]
  45eca0:	str	x8, [x19, #16]
  45eca4:	mov	w8, #0x5b                  	// #91
  45eca8:	strb	w8, [x0]
  45ecac:	ldr	x8, [x19, #8]
  45ecb0:	add	x8, x8, #0x1
  45ecb4:	str	x8, [x19, #8]
  45ecb8:	cbz	x22, 45ed70 <feof@plt+0x5bc90>
  45ecbc:	mov	x0, x19
  45ecc0:	mov	x1, x21
  45ecc4:	mov	x2, xzr
  45ecc8:	mov	w3, wzr
  45eccc:	sub	x22, x22, #0x1
  45ecd0:	bl	45de0c <feof@plt+0x5ad2c>
  45ecd4:	mov	x20, x0
  45ecd8:	cbz	x22, 45ed74 <feof@plt+0x5bc94>
  45ecdc:	mov	w23, #0x202c                	// #8236
  45ece0:	b	45ed28 <feof@plt+0x5bc48>
  45ece4:	mov	w0, #0x20                  	// #32
  45ece8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ecec:	stp	x0, x0, [x19]
  45ecf0:	add	x8, x0, #0x20
  45ecf4:	str	x8, [x19, #16]
  45ecf8:	strh	w23, [x0]
  45ecfc:	ldr	x8, [x19, #8]
  45ed00:	mov	x0, x19
  45ed04:	mov	x1, x20
  45ed08:	mov	x2, xzr
  45ed0c:	add	x8, x8, #0x2
  45ed10:	mov	w3, wzr
  45ed14:	str	x8, [x19, #8]
  45ed18:	sub	x22, x22, #0x1
  45ed1c:	bl	45de0c <feof@plt+0x5ad2c>
  45ed20:	mov	x20, x0
  45ed24:	cbz	x22, 45ed74 <feof@plt+0x5bc94>
  45ed28:	ldr	x8, [x19]
  45ed2c:	cbz	x8, 45ece4 <feof@plt+0x5bc04>
  45ed30:	ldp	x0, x9, [x19, #8]
  45ed34:	sub	x9, x9, x0
  45ed38:	cmp	x9, #0x1
  45ed3c:	b.gt	45ecf8 <feof@plt+0x5bc18>
  45ed40:	sub	x24, x0, x8
  45ed44:	lsl	w9, w24, #1
  45ed48:	add	w9, w9, #0x4
  45ed4c:	sxtw	x21, w9
  45ed50:	mov	x0, x8
  45ed54:	mov	x1, x21
  45ed58:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ed5c:	mov	x8, x0
  45ed60:	add	x0, x0, w24, sxtw
  45ed64:	stp	x8, x0, [x19]
  45ed68:	add	x8, x8, x21
  45ed6c:	b	45ecf4 <feof@plt+0x5bc14>
  45ed70:	mov	x20, x21
  45ed74:	ldr	x8, [x19]
  45ed78:	cbz	x8, 45edc0 <feof@plt+0x5bce0>
  45ed7c:	ldp	x0, x9, [x19, #8]
  45ed80:	sub	x9, x9, x0
  45ed84:	cmp	x9, #0x0
  45ed88:	b.gt	45edd4 <feof@plt+0x5bcf4>
  45ed8c:	sub	x22, x0, x8
  45ed90:	lsl	w9, w22, #1
  45ed94:	add	w9, w9, #0x2
  45ed98:	sxtw	x21, w9
  45ed9c:	mov	x0, x8
  45eda0:	mov	x1, x21
  45eda4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45eda8:	mov	x8, x0
  45edac:	add	x0, x0, w22, sxtw
  45edb0:	add	x9, x8, x21
  45edb4:	stp	x8, x0, [x19]
  45edb8:	str	x9, [x19, #16]
  45edbc:	b	45edd4 <feof@plt+0x5bcf4>
  45edc0:	mov	w0, #0x20                  	// #32
  45edc4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45edc8:	add	x8, x0, #0x20
  45edcc:	stp	x0, x0, [x19]
  45edd0:	str	x8, [x19, #16]
  45edd4:	mov	w8, #0x5d                  	// #93
  45edd8:	strb	w8, [x0]
  45eddc:	ldr	x8, [x19, #8]
  45ede0:	add	x8, x8, #0x1
  45ede4:	str	x8, [x19, #8]
  45ede8:	b	45e838 <feof@plt+0x5b758>
  45edec:	sub	sp, sp, #0x60
  45edf0:	and	w8, w2, #0xff
  45edf4:	sub	w8, w8, #0x61
  45edf8:	stp	x22, x21, [sp, #64]
  45edfc:	stp	x20, x19, [sp, #80]
  45ee00:	mov	w22, w2
  45ee04:	mov	x21, x1
  45ee08:	cmp	w8, #0x16
  45ee0c:	mov	x19, x0
  45ee10:	stp	x29, x30, [sp, #16]
  45ee14:	str	x25, [sp, #32]
  45ee18:	stp	x24, x23, [sp, #48]
  45ee1c:	add	x29, sp, #0x10
  45ee20:	b.hi	45efb4 <feof@plt+0x5bed4>  // b.pmore
  45ee24:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45ee28:	add	x9, x9, #0x816
  45ee2c:	adr	x10, 45ee3c <feof@plt+0x5bd5c>
  45ee30:	ldrb	w11, [x9, x8]
  45ee34:	add	x10, x10, x11, lsl #2
  45ee38:	br	x10
  45ee3c:	cbz	x21, 45efc8 <feof@plt+0x5bee8>
  45ee40:	ldrb	w9, [x21]
  45ee44:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45ee48:	add	x8, x8, #0xe98
  45ee4c:	ldrh	w10, [x8, x9, lsl #1]
  45ee50:	tbz	w10, #2, 45efc8 <feof@plt+0x5bee8>
  45ee54:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  45ee58:	movk	x10, #0x9998
  45ee5c:	mov	x23, xzr
  45ee60:	movk	x10, #0x1999, lsl #48
  45ee64:	mov	x20, x21
  45ee68:	add	x11, x10, x23, lsl #1
  45ee6c:	ror	x11, x11, #1
  45ee70:	cmp	x11, x10
  45ee74:	b.hi	45efc8 <feof@plt+0x5bee8>  // b.pmore
  45ee78:	add	x11, x23, x23, lsl #2
  45ee7c:	lsl	x11, x11, #1
  45ee80:	add	x11, x11, w9, uxtb
  45ee84:	ldrb	w9, [x20, #1]!
  45ee88:	sub	x23, x11, #0x30
  45ee8c:	ldrh	w12, [x8, x9, lsl #1]
  45ee90:	tbnz	w12, #2, 45ee68 <feof@plt+0x5bd88>
  45ee94:	cbz	w9, 45efc8 <feof@plt+0x5bee8>
  45ee98:	tbnz	x23, #63, 45efc8 <feof@plt+0x5bee8>
  45ee9c:	ldr	x8, [x19]
  45eea0:	cbz	x8, 45f13c <feof@plt+0x5c05c>
  45eea4:	ldp	x0, x9, [x19, #8]
  45eea8:	sub	x9, x9, x0
  45eeac:	cmp	x9, #0x0
  45eeb0:	b.gt	45f150 <feof@plt+0x5c070>
  45eeb4:	sub	x24, x0, x8
  45eeb8:	lsl	w9, w24, #1
  45eebc:	add	w9, w9, #0x2
  45eec0:	sxtw	x21, w9
  45eec4:	mov	x0, x8
  45eec8:	mov	x1, x21
  45eecc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45eed0:	mov	x8, x0
  45eed4:	add	x0, x0, w24, sxtw
  45eed8:	add	x9, x8, x21
  45eedc:	stp	x8, x0, [x19]
  45eee0:	str	x9, [x19, #16]
  45eee4:	b	45f150 <feof@plt+0x5c070>
  45eee8:	cbz	x21, 45efc8 <feof@plt+0x5bee8>
  45eeec:	ldrb	w8, [x21]
  45eef0:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  45eef4:	add	x10, x10, #0xe98
  45eef8:	ldrh	w9, [x10, x8, lsl #1]
  45eefc:	tbz	w9, #2, 45efc8 <feof@plt+0x5bee8>
  45ef00:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
  45ef04:	movk	x11, #0x9998
  45ef08:	mov	x9, xzr
  45ef0c:	movk	x11, #0x1999, lsl #48
  45ef10:	add	x12, x11, x9, lsl #1
  45ef14:	ror	x12, x12, #1
  45ef18:	cmp	x12, x11
  45ef1c:	b.hi	45efc8 <feof@plt+0x5bee8>  // b.pmore
  45ef20:	add	x9, x9, x9, lsl #2
  45ef24:	lsl	x9, x9, #1
  45ef28:	add	x9, x9, w8, uxtb
  45ef2c:	ldrb	w8, [x21, #1]!
  45ef30:	sub	x9, x9, #0x30
  45ef34:	ldrh	w12, [x10, x8, lsl #1]
  45ef38:	tbnz	w12, #2, 45ef10 <feof@plt+0x5be30>
  45ef3c:	mov	x20, xzr
  45ef40:	cbz	w8, 45efcc <feof@plt+0x5beec>
  45ef44:	tbnz	x9, #63, 45efcc <feof@plt+0x5beec>
  45ef48:	ldr	x8, [x19]
  45ef4c:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1838>
  45ef50:	adrp	x11, 463000 <_obstack_memory_used@@Base+0x1838>
  45ef54:	add	x10, x10, #0xf51
  45ef58:	add	x11, x11, #0xf56
  45ef5c:	cmp	x9, #0x0
  45ef60:	mov	w9, #0x4                   	// #4
  45ef64:	csel	x22, x11, x10, eq  // eq = none
  45ef68:	cinc	x20, x9, eq  // eq = none
  45ef6c:	cbz	x8, 45f31c <feof@plt+0x5c23c>
  45ef70:	ldp	x0, x9, [x19, #8]
  45ef74:	sub	x9, x9, x0
  45ef78:	cmp	x9, x20
  45ef7c:	b.ge	45f330 <feof@plt+0x5c250>  // b.tcont
  45ef80:	sub	x24, x0, x8
  45ef84:	add	w9, w24, w20
  45ef88:	lsl	w9, w9, #1
  45ef8c:	sxtw	x23, w9
  45ef90:	mov	x0, x8
  45ef94:	mov	x1, x23
  45ef98:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ef9c:	mov	x8, x0
  45efa0:	add	x0, x0, w24, sxtw
  45efa4:	add	x9, x8, x23
  45efa8:	stp	x8, x0, [x19]
  45efac:	str	x9, [x19, #16]
  45efb0:	b	45f330 <feof@plt+0x5c250>
  45efb4:	ldrb	w9, [x21]
  45efb8:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  45efbc:	add	x8, x8, #0xe98
  45efc0:	ldrh	w9, [x8, x9, lsl #1]
  45efc4:	tbnz	w9, #2, 45efec <feof@plt+0x5bf0c>
  45efc8:	mov	x20, xzr
  45efcc:	mov	x0, x20
  45efd0:	ldp	x20, x19, [sp, #80]
  45efd4:	ldp	x22, x21, [sp, #64]
  45efd8:	ldp	x24, x23, [sp, #48]
  45efdc:	ldr	x25, [sp, #32]
  45efe0:	ldp	x29, x30, [sp, #16]
  45efe4:	add	sp, sp, #0x60
  45efe8:	ret
  45efec:	mov	x24, xzr
  45eff0:	mov	x9, xzr
  45eff4:	mov	x10, #0x100000000           	// #4294967296
  45eff8:	add	x11, x21, x9
  45effc:	ldrb	w11, [x11, #1]
  45f000:	add	x9, x9, #0x1
  45f004:	add	x24, x24, x10
  45f008:	ldrh	w11, [x8, x11, lsl #1]
  45f00c:	tbnz	w11, #2, 45eff8 <feof@plt+0x5bf18>
  45f010:	add	x20, x21, x9
  45f014:	cbz	w9, 45f0a8 <feof@plt+0x5bfc8>
  45f018:	ldr	x8, [x19]
  45f01c:	cbz	x8, 45f068 <feof@plt+0x5bf88>
  45f020:	ldp	x0, x10, [x19, #8]
  45f024:	asr	x23, x24, #32
  45f028:	sub	x10, x10, x0
  45f02c:	cmp	x10, x23
  45f030:	b.ge	45f090 <feof@plt+0x5bfb0>  // b.tcont
  45f034:	sub	x25, x0, x8
  45f038:	add	w9, w25, w9
  45f03c:	lsl	w9, w9, #1
  45f040:	sxtw	x24, w9
  45f044:	mov	x0, x8
  45f048:	mov	x1, x24
  45f04c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f050:	mov	x8, x0
  45f054:	add	x0, x0, w25, sxtw
  45f058:	add	x9, x8, x24
  45f05c:	stp	x8, x0, [x19]
  45f060:	str	x9, [x19, #16]
  45f064:	b	45f090 <feof@plt+0x5bfb0>
  45f068:	and	x8, x9, #0xffffffff
  45f06c:	cmp	w9, #0x20
  45f070:	mov	w9, #0x20                  	// #32
  45f074:	csel	x23, x8, x9, gt
  45f078:	mov	x0, x23
  45f07c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f080:	add	x8, x0, x23
  45f084:	stp	x0, x0, [x19]
  45f088:	str	x8, [x19, #16]
  45f08c:	asr	x23, x24, #32
  45f090:	mov	x1, x21
  45f094:	mov	x2, x23
  45f098:	bl	4029c0 <memcpy@plt>
  45f09c:	ldr	x8, [x19, #8]
  45f0a0:	add	x8, x8, x23
  45f0a4:	str	x8, [x19, #8]
  45f0a8:	and	w8, w22, #0xff
  45f0ac:	sub	w8, w8, #0x68
  45f0b0:	cmp	w8, #0xc
  45f0b4:	b.hi	45efcc <feof@plt+0x5beec>  // b.pmore
  45f0b8:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  45f0bc:	add	x9, x9, #0x82d
  45f0c0:	adr	x10, 45efcc <feof@plt+0x5beec>
  45f0c4:	ldrb	w11, [x9, x8]
  45f0c8:	add	x10, x10, x11, lsl #2
  45f0cc:	br	x10
  45f0d0:	ldr	x8, [x19]
  45f0d4:	cbz	x8, 45f11c <feof@plt+0x5c03c>
  45f0d8:	ldp	x0, x9, [x19, #8]
  45f0dc:	sub	x9, x9, x0
  45f0e0:	cmp	x9, #0x0
  45f0e4:	b.gt	45f130 <feof@plt+0x5c050>
  45f0e8:	sub	x22, x0, x8
  45f0ec:	lsl	w9, w22, #1
  45f0f0:	add	w9, w9, #0x2
  45f0f4:	sxtw	x21, w9
  45f0f8:	mov	x0, x8
  45f0fc:	mov	x1, x21
  45f100:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f104:	mov	x8, x0
  45f108:	add	x0, x0, w22, sxtw
  45f10c:	add	x9, x8, x21
  45f110:	stp	x8, x0, [x19]
  45f114:	str	x9, [x19, #16]
  45f118:	b	45f130 <feof@plt+0x5c050>
  45f11c:	mov	w0, #0x20                  	// #32
  45f120:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f124:	add	x8, x0, #0x20
  45f128:	stp	x0, x0, [x19]
  45f12c:	str	x8, [x19, #16]
  45f130:	mov	w8, #0x75                  	// #117
  45f134:	strb	w8, [x0]
  45f138:	b	45f63c <feof@plt+0x5c55c>
  45f13c:	mov	w0, #0x20                  	// #32
  45f140:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f144:	add	x8, x0, #0x20
  45f148:	stp	x0, x0, [x19]
  45f14c:	str	x8, [x19, #16]
  45f150:	mov	w8, #0x27                  	// #39
  45f154:	strb	w8, [x0]
  45f158:	ldr	x9, [x19, #8]
  45f15c:	and	w8, w22, #0xff
  45f160:	cmp	w8, #0x61
  45f164:	add	x21, x9, #0x1
  45f168:	str	x21, [x19, #8]
  45f16c:	b.ne	45f1bc <feof@plt+0x5c0dc>  // b.any
  45f170:	sub	x9, x23, #0x20
  45f174:	cmp	x9, #0x5e
  45f178:	b.hi	45f1bc <feof@plt+0x5c0dc>  // b.pmore
  45f17c:	ldr	x0, [x19]
  45f180:	cbz	x0, 45f2b4 <feof@plt+0x5c1d4>
  45f184:	ldr	x8, [x19, #16]
  45f188:	sub	x8, x8, x21
  45f18c:	cmp	x8, #0x0
  45f190:	b.gt	45f2cc <feof@plt+0x5c1ec>
  45f194:	sub	x21, x21, x0
  45f198:	lsl	w8, w21, #1
  45f19c:	add	w8, w8, #0x2
  45f1a0:	sxtw	x22, w8
  45f1a4:	mov	x1, x22
  45f1a8:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f1ac:	add	x21, x0, w21, sxtw
  45f1b0:	add	x8, x0, x22
  45f1b4:	stp	x0, x21, [x19]
  45f1b8:	b	45f2c8 <feof@plt+0x5c1e8>
  45f1bc:	cmp	w8, #0x77
  45f1c0:	b.eq	45f350 <feof@plt+0x5c270>  // b.none
  45f1c4:	cmp	w8, #0x75
  45f1c8:	b.eq	45f394 <feof@plt+0x5c2b4>  // b.none
  45f1cc:	cmp	w8, #0x61
  45f1d0:	b.ne	45f3d8 <feof@plt+0x5c2f8>  // b.any
  45f1d4:	ldr	x0, [x19]
  45f1d8:	cbz	x0, 45f3e0 <feof@plt+0x5c300>
  45f1dc:	ldr	x8, [x19, #16]
  45f1e0:	sub	x8, x8, x21
  45f1e4:	cmp	x8, #0x1
  45f1e8:	b.gt	45f444 <feof@plt+0x5c364>
  45f1ec:	sub	x21, x21, x0
  45f1f0:	lsl	w8, w21, #1
  45f1f4:	add	w8, w8, #0x4
  45f1f8:	sxtw	x22, w8
  45f1fc:	mov	x1, x22
  45f200:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f204:	add	x21, x0, w21, sxtw
  45f208:	add	x8, x0, x22
  45f20c:	mov	w22, #0x2                   	// #2
  45f210:	stp	x0, x21, [x19]
  45f214:	b	45f3f8 <feof@plt+0x5c318>
  45f218:	ldr	x8, [x19]
  45f21c:	cbz	x8, 45f2d8 <feof@plt+0x5c1f8>
  45f220:	ldp	x0, x9, [x19, #8]
  45f224:	sub	x9, x9, x0
  45f228:	cmp	x9, #0x0
  45f22c:	b.gt	45f260 <feof@plt+0x5c180>
  45f230:	sub	x22, x0, x8
  45f234:	lsl	w9, w22, #1
  45f238:	add	w9, w9, #0x2
  45f23c:	sxtw	x21, w9
  45f240:	mov	x0, x8
  45f244:	mov	x1, x21
  45f248:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f24c:	mov	x8, x0
  45f250:	add	x0, x0, w22, sxtw
  45f254:	add	x9, x8, x21
  45f258:	stp	x8, x0, [x19]
  45f25c:	str	x9, [x19, #16]
  45f260:	mov	w8, #0x4c                  	// #76
  45f264:	b	45f134 <feof@plt+0x5c054>
  45f268:	ldr	x8, [x19]
  45f26c:	cbz	x8, 45f2f4 <feof@plt+0x5c214>
  45f270:	ldp	x0, x9, [x19, #8]
  45f274:	sub	x9, x9, x0
  45f278:	cmp	x9, #0x1
  45f27c:	b.gt	45f308 <feof@plt+0x5c228>
  45f280:	sub	x22, x0, x8
  45f284:	lsl	w9, w22, #1
  45f288:	add	w9, w9, #0x4
  45f28c:	sxtw	x21, w9
  45f290:	mov	x0, x8
  45f294:	mov	x1, x21
  45f298:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f29c:	mov	x8, x0
  45f2a0:	add	x0, x0, w22, sxtw
  45f2a4:	add	x9, x8, x21
  45f2a8:	stp	x8, x0, [x19]
  45f2ac:	str	x9, [x19, #16]
  45f2b0:	b	45f308 <feof@plt+0x5c228>
  45f2b4:	mov	w0, #0x20                  	// #32
  45f2b8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f2bc:	mov	x21, x0
  45f2c0:	stp	x0, x0, [x19]
  45f2c4:	add	x8, x0, #0x20
  45f2c8:	str	x8, [x19, #16]
  45f2cc:	strb	w23, [x21]
  45f2d0:	mov	w23, #0x1                   	// #1
  45f2d4:	b	45f5d0 <feof@plt+0x5c4f0>
  45f2d8:	mov	w0, #0x20                  	// #32
  45f2dc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f2e0:	add	x8, x0, #0x20
  45f2e4:	stp	x0, x0, [x19]
  45f2e8:	str	x8, [x19, #16]
  45f2ec:	mov	w8, #0x4c                  	// #76
  45f2f0:	b	45f134 <feof@plt+0x5c054>
  45f2f4:	mov	w0, #0x20                  	// #32
  45f2f8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f2fc:	add	x8, x0, #0x20
  45f300:	stp	x0, x0, [x19]
  45f304:	str	x8, [x19, #16]
  45f308:	mov	w8, #0x4c75                	// #19573
  45f30c:	strh	w8, [x0]
  45f310:	ldr	x8, [x19, #8]
  45f314:	add	x8, x8, #0x2
  45f318:	b	45f644 <feof@plt+0x5c564>
  45f31c:	mov	w0, #0x20                  	// #32
  45f320:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f324:	add	x8, x0, #0x20
  45f328:	stp	x0, x0, [x19]
  45f32c:	str	x8, [x19, #16]
  45f330:	mov	x1, x22
  45f334:	mov	x2, x20
  45f338:	bl	4029c0 <memcpy@plt>
  45f33c:	ldr	x8, [x19, #8]
  45f340:	add	x8, x8, x20
  45f344:	str	x8, [x19, #8]
  45f348:	mov	x20, x21
  45f34c:	b	45efcc <feof@plt+0x5beec>
  45f350:	ldr	x0, [x19]
  45f354:	cbz	x0, 45f404 <feof@plt+0x5c324>
  45f358:	ldr	x8, [x19, #16]
  45f35c:	sub	x8, x8, x21
  45f360:	cmp	x8, #0x1
  45f364:	b.gt	45f450 <feof@plt+0x5c370>
  45f368:	sub	x21, x21, x0
  45f36c:	lsl	w8, w21, #1
  45f370:	add	w8, w8, #0x4
  45f374:	sxtw	x22, w8
  45f378:	mov	x1, x22
  45f37c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f380:	add	x21, x0, w21, sxtw
  45f384:	add	x8, x0, x22
  45f388:	mov	w22, #0x8                   	// #8
  45f38c:	stp	x0, x21, [x19]
  45f390:	b	45f41c <feof@plt+0x5c33c>
  45f394:	ldr	x0, [x19]
  45f398:	cbz	x0, 45f424 <feof@plt+0x5c344>
  45f39c:	ldr	x8, [x19, #16]
  45f3a0:	sub	x8, x8, x21
  45f3a4:	cmp	x8, #0x1
  45f3a8:	b.gt	45f45c <feof@plt+0x5c37c>
  45f3ac:	sub	x21, x21, x0
  45f3b0:	lsl	w8, w21, #1
  45f3b4:	add	w8, w8, #0x4
  45f3b8:	sxtw	x22, w8
  45f3bc:	mov	x1, x22
  45f3c0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f3c4:	add	x21, x0, w21, sxtw
  45f3c8:	add	x8, x0, x22
  45f3cc:	mov	w22, #0x4                   	// #4
  45f3d0:	stp	x0, x21, [x19]
  45f3d4:	b	45f43c <feof@plt+0x5c35c>
  45f3d8:	mov	w22, wzr
  45f3dc:	b	45f474 <feof@plt+0x5c394>
  45f3e0:	mov	w0, #0x20                  	// #32
  45f3e4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f3e8:	mov	x21, x0
  45f3ec:	add	x8, x0, #0x20
  45f3f0:	mov	w22, #0x2                   	// #2
  45f3f4:	stp	x0, x0, [x19]
  45f3f8:	str	x8, [x19, #16]
  45f3fc:	mov	w8, #0x785c                	// #30812
  45f400:	b	45f464 <feof@plt+0x5c384>
  45f404:	mov	w0, #0x20                  	// #32
  45f408:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f40c:	mov	x21, x0
  45f410:	stp	x0, x0, [x19]
  45f414:	add	x8, x0, #0x20
  45f418:	mov	w22, #0x8                   	// #8
  45f41c:	str	x8, [x19, #16]
  45f420:	b	45f454 <feof@plt+0x5c374>
  45f424:	mov	w0, #0x20                  	// #32
  45f428:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f42c:	mov	x21, x0
  45f430:	add	x8, x0, #0x20
  45f434:	mov	w22, #0x4                   	// #4
  45f438:	stp	x0, x0, [x19]
  45f43c:	str	x8, [x19, #16]
  45f440:	b	45f460 <feof@plt+0x5c380>
  45f444:	mov	w22, #0x2                   	// #2
  45f448:	mov	w8, #0x785c                	// #30812
  45f44c:	b	45f464 <feof@plt+0x5c384>
  45f450:	mov	w22, #0x8                   	// #8
  45f454:	mov	w8, #0x555c                	// #21852
  45f458:	b	45f464 <feof@plt+0x5c384>
  45f45c:	mov	w22, #0x4                   	// #4
  45f460:	mov	w8, #0x755c                	// #30044
  45f464:	strh	w8, [x21]
  45f468:	ldr	x8, [x19, #8]
  45f46c:	add	x21, x8, #0x2
  45f470:	str	x21, [x19, #8]
  45f474:	mov	w24, #0xa                   	// #10
  45f478:	cmp	x23, #0x1
  45f47c:	b.lt	45f4b0 <feof@plt+0x5c3d0>  // b.tstop
  45f480:	add	x8, sp, #0x4
  45f484:	and	w9, w23, #0xf
  45f488:	mov	w10, #0x30                  	// #48
  45f48c:	add	w11, w9, #0x57
  45f490:	bfxil	w10, w23, #0, #4
  45f494:	cmp	w9, #0xa
  45f498:	sub	w24, w24, #0x1
  45f49c:	lsr	x23, x23, #4
  45f4a0:	csel	w9, w10, w11, cc  // cc = lo, ul, last
  45f4a4:	sub	w22, w22, #0x1
  45f4a8:	strb	w9, [x8, w24, sxtw]
  45f4ac:	cbnz	x23, 45f484 <feof@plt+0x5c3a4>
  45f4b0:	subs	w8, w22, #0x1
  45f4b4:	b.lt	45f53c <feof@plt+0x5c45c>  // b.tstop
  45f4b8:	sxtw	x24, w24
  45f4bc:	mvn	x9, x8
  45f4c0:	add	x10, sp, #0x4
  45f4c4:	add	x9, x9, x24
  45f4c8:	add	x0, x10, x9
  45f4cc:	add	x2, x8, #0x1
  45f4d0:	mov	w1, #0x30                  	// #48
  45f4d4:	bl	402b40 <memset@plt>
  45f4d8:	cmp	w22, #0x3
  45f4dc:	b.hi	45f4e8 <feof@plt+0x5c408>  // b.pmore
  45f4e0:	mov	w8, w22
  45f4e4:	b	45f528 <feof@plt+0x5c448>
  45f4e8:	and	w9, w22, #0xfffffffc
  45f4ec:	movi	v1.2d, #0x0
  45f4f0:	and	w8, w22, #0x3
  45f4f4:	movi	v0.2d, #0x0
  45f4f8:	mov	v1.d[0], x24
  45f4fc:	movi	v2.2d, #0xffffffffffffffff
  45f500:	mov	w10, w9
  45f504:	add	v1.2d, v1.2d, v2.2d
  45f508:	subs	w10, w10, #0x4
  45f50c:	add	v0.2d, v0.2d, v2.2d
  45f510:	b.ne	45f504 <feof@plt+0x5c424>  // b.any
  45f514:	add	v0.2d, v0.2d, v1.2d
  45f518:	addp	d0, v0.2d
  45f51c:	cmp	w22, w9
  45f520:	fmov	x24, d0
  45f524:	b.eq	45f53c <feof@plt+0x5c45c>  // b.none
  45f528:	add	w8, w8, #0x1
  45f52c:	sub	w8, w8, #0x1
  45f530:	cmp	w8, #0x1
  45f534:	sub	x24, x24, #0x1
  45f538:	b.gt	45f52c <feof@plt+0x5c44c>
  45f53c:	mov	w8, #0xa                   	// #10
  45f540:	subs	w25, w8, w24
  45f544:	b.eq	45f5dc <feof@plt+0x5c4fc>  // b.none
  45f548:	ldr	x0, [x19]
  45f54c:	add	x8, sp, #0x4
  45f550:	add	x22, x8, w24, sxtw
  45f554:	cbz	x0, 45f598 <feof@plt+0x5c4b8>
  45f558:	ldr	x8, [x19, #16]
  45f55c:	sxtw	x23, w25
  45f560:	sub	x8, x8, x21
  45f564:	cmp	x8, x23
  45f568:	b.ge	45f5c0 <feof@plt+0x5c4e0>  // b.tcont
  45f56c:	sub	x21, x21, x0
  45f570:	add	w8, w25, w21
  45f574:	lsl	w8, w8, #1
  45f578:	sxtw	x24, w8
  45f57c:	mov	x1, x24
  45f580:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f584:	add	x21, x0, w21, sxtw
  45f588:	add	x8, x0, x24
  45f58c:	stp	x0, x21, [x19]
  45f590:	str	x8, [x19, #16]
  45f594:	b	45f5c0 <feof@plt+0x5c4e0>
  45f598:	cmp	w25, #0x20
  45f59c:	mov	w8, #0x20                  	// #32
  45f5a0:	csel	w23, w25, w8, gt
  45f5a4:	mov	x0, x23
  45f5a8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f5ac:	add	x8, x0, x23
  45f5b0:	mov	x21, x0
  45f5b4:	stp	x0, x0, [x19]
  45f5b8:	str	x8, [x19, #16]
  45f5bc:	sxtw	x23, w25
  45f5c0:	mov	x0, x21
  45f5c4:	mov	x1, x22
  45f5c8:	mov	x2, x23
  45f5cc:	bl	4029c0 <memcpy@plt>
  45f5d0:	ldr	x8, [x19, #8]
  45f5d4:	add	x21, x8, x23
  45f5d8:	str	x21, [x19, #8]
  45f5dc:	ldr	x0, [x19]
  45f5e0:	cbz	x0, 45f61c <feof@plt+0x5c53c>
  45f5e4:	ldr	x8, [x19, #16]
  45f5e8:	sub	x8, x8, x21
  45f5ec:	cmp	x8, #0x0
  45f5f0:	b.gt	45f634 <feof@plt+0x5c554>
  45f5f4:	sub	x21, x21, x0
  45f5f8:	lsl	w8, w21, #1
  45f5fc:	add	w8, w8, #0x2
  45f600:	sxtw	x22, w8
  45f604:	mov	x1, x22
  45f608:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f60c:	add	x21, x0, w21, sxtw
  45f610:	add	x8, x0, x22
  45f614:	stp	x0, x21, [x19]
  45f618:	b	45f630 <feof@plt+0x5c550>
  45f61c:	mov	w0, #0x20                  	// #32
  45f620:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f624:	mov	x21, x0
  45f628:	stp	x0, x0, [x19]
  45f62c:	add	x8, x0, #0x20
  45f630:	str	x8, [x19, #16]
  45f634:	mov	w8, #0x27                  	// #39
  45f638:	strb	w8, [x21]
  45f63c:	ldr	x8, [x19, #8]
  45f640:	add	x8, x8, #0x1
  45f644:	str	x8, [x19, #8]
  45f648:	b	45efcc <feof@plt+0x5beec>
  45f64c:	stp	x29, x30, [sp, #-64]!
  45f650:	stp	x20, x19, [sp, #48]
  45f654:	mov	x19, x1
  45f658:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45f65c:	mov	x20, x0
  45f660:	add	x1, x1, #0x8eb
  45f664:	mov	w2, #0x3                   	// #3
  45f668:	mov	x0, x19
  45f66c:	str	x23, [sp, #16]
  45f670:	stp	x22, x21, [sp, #32]
  45f674:	mov	x29, sp
  45f678:	bl	402d40 <strncmp@plt>
  45f67c:	cbz	w0, 45f708 <feof@plt+0x5c628>
  45f680:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45f684:	add	x1, x1, #0x8f8
  45f688:	mov	w2, #0x3                   	// #3
  45f68c:	mov	x0, x19
  45f690:	bl	402d40 <strncmp@plt>
  45f694:	cbz	w0, 45f754 <feof@plt+0x5c674>
  45f698:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  45f69c:	add	x1, x1, #0x8f7
  45f6a0:	mov	w2, #0x4                   	// #4
  45f6a4:	mov	x0, x19
  45f6a8:	bl	402d40 <strncmp@plt>
  45f6ac:	cbz	w0, 45f7a0 <feof@plt+0x5c6c0>
  45f6b0:	ldrb	w8, [x19]
  45f6b4:	cmp	w8, #0x4e
  45f6b8:	b.ne	45f8b4 <feof@plt+0x5c7d4>  // b.any
  45f6bc:	ldr	x8, [x20]
  45f6c0:	cbz	x8, 45f888 <feof@plt+0x5c7a8>
  45f6c4:	ldp	x0, x9, [x20, #8]
  45f6c8:	sub	x9, x9, x0
  45f6cc:	cmp	x9, #0x0
  45f6d0:	b.gt	45f89c <feof@plt+0x5c7bc>
  45f6d4:	sub	x22, x0, x8
  45f6d8:	lsl	w9, w22, #1
  45f6dc:	add	w9, w9, #0x2
  45f6e0:	sxtw	x21, w9
  45f6e4:	mov	x0, x8
  45f6e8:	mov	x1, x21
  45f6ec:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f6f0:	mov	x8, x0
  45f6f4:	add	x0, x0, w22, sxtw
  45f6f8:	add	x9, x8, x21
  45f6fc:	stp	x8, x0, [x20]
  45f700:	str	x9, [x20, #16]
  45f704:	b	45f89c <feof@plt+0x5c7bc>
  45f708:	ldr	x8, [x20]
  45f70c:	cbz	x8, 45f7ec <feof@plt+0x5c70c>
  45f710:	ldp	x0, x9, [x20, #8]
  45f714:	sub	x9, x9, x0
  45f718:	cmp	x9, #0x2
  45f71c:	b.gt	45f800 <feof@plt+0x5c720>
  45f720:	sub	x22, x0, x8
  45f724:	lsl	w9, w22, #1
  45f728:	add	w9, w9, #0x6
  45f72c:	sxtw	x21, w9
  45f730:	mov	x0, x8
  45f734:	mov	x1, x21
  45f738:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f73c:	mov	x8, x0
  45f740:	add	x0, x0, w22, sxtw
  45f744:	add	x9, x8, x21
  45f748:	stp	x8, x0, [x20]
  45f74c:	str	x9, [x20, #16]
  45f750:	b	45f800 <feof@plt+0x5c720>
  45f754:	ldr	x8, [x20]
  45f758:	cbz	x8, 45f80c <feof@plt+0x5c72c>
  45f75c:	ldp	x0, x9, [x20, #8]
  45f760:	sub	x9, x9, x0
  45f764:	cmp	x9, #0x2
  45f768:	b.gt	45f820 <feof@plt+0x5c740>
  45f76c:	sub	x22, x0, x8
  45f770:	lsl	w9, w22, #1
  45f774:	add	w9, w9, #0x6
  45f778:	sxtw	x21, w9
  45f77c:	mov	x0, x8
  45f780:	mov	x1, x21
  45f784:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f788:	mov	x8, x0
  45f78c:	add	x0, x0, w22, sxtw
  45f790:	add	x9, x8, x21
  45f794:	stp	x8, x0, [x20]
  45f798:	str	x9, [x20, #16]
  45f79c:	b	45f820 <feof@plt+0x5c740>
  45f7a0:	ldr	x8, [x20]
  45f7a4:	cbz	x8, 45f858 <feof@plt+0x5c778>
  45f7a8:	ldp	x0, x9, [x20, #8]
  45f7ac:	sub	x9, x9, x0
  45f7b0:	cmp	x9, #0x3
  45f7b4:	b.gt	45f86c <feof@plt+0x5c78c>
  45f7b8:	sub	x22, x0, x8
  45f7bc:	lsl	w9, w22, #1
  45f7c0:	add	w9, w9, #0x8
  45f7c4:	sxtw	x21, w9
  45f7c8:	mov	x0, x8
  45f7cc:	mov	x1, x21
  45f7d0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f7d4:	mov	x8, x0
  45f7d8:	add	x0, x0, w22, sxtw
  45f7dc:	add	x9, x8, x21
  45f7e0:	stp	x8, x0, [x20]
  45f7e4:	str	x9, [x20, #16]
  45f7e8:	b	45f86c <feof@plt+0x5c78c>
  45f7ec:	mov	w0, #0x20                  	// #32
  45f7f0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f7f4:	add	x8, x0, #0x20
  45f7f8:	stp	x0, x0, [x20]
  45f7fc:	str	x8, [x20, #16]
  45f800:	mov	w8, #0x4e                  	// #78
  45f804:	mov	w9, #0x614e                	// #24910
  45f808:	b	45f828 <feof@plt+0x5c748>
  45f80c:	mov	w0, #0x20                  	// #32
  45f810:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f814:	add	x8, x0, #0x20
  45f818:	stp	x0, x0, [x20]
  45f81c:	str	x8, [x20, #16]
  45f820:	mov	w8, #0x66                  	// #102
  45f824:	mov	w9, #0x6e49                	// #28233
  45f828:	strb	w8, [x0, #2]
  45f82c:	strh	w9, [x0]
  45f830:	ldr	x8, [x20, #8]
  45f834:	add	x19, x19, #0x3
  45f838:	add	x8, x8, #0x3
  45f83c:	str	x8, [x20, #8]
  45f840:	mov	x0, x19
  45f844:	ldp	x20, x19, [sp, #48]
  45f848:	ldp	x22, x21, [sp, #32]
  45f84c:	ldr	x23, [sp, #16]
  45f850:	ldp	x29, x30, [sp], #64
  45f854:	ret
  45f858:	mov	w0, #0x20                  	// #32
  45f85c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f860:	add	x8, x0, #0x20
  45f864:	stp	x0, x0, [x20]
  45f868:	str	x8, [x20, #16]
  45f86c:	mov	w8, #0x492d                	// #18733
  45f870:	movk	w8, #0x666e, lsl #16
  45f874:	str	w8, [x0]
  45f878:	ldr	x8, [x20, #8]
  45f87c:	add	x19, x19, #0x4
  45f880:	add	x8, x8, #0x4
  45f884:	b	45f83c <feof@plt+0x5c75c>
  45f888:	mov	w0, #0x20                  	// #32
  45f88c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f890:	add	x8, x0, #0x20
  45f894:	stp	x0, x0, [x20]
  45f898:	str	x8, [x20, #16]
  45f89c:	mov	w8, #0x2d                  	// #45
  45f8a0:	strb	w8, [x0]
  45f8a4:	ldr	x8, [x20, #8]
  45f8a8:	add	x8, x8, #0x1
  45f8ac:	str	x8, [x20, #8]
  45f8b0:	ldrb	w8, [x19, #1]!
  45f8b4:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  45f8b8:	add	x22, x22, #0xe98
  45f8bc:	ldrh	w8, [x22, w8, uxtw #1]
  45f8c0:	tbz	w8, #8, 45fadc <feof@plt+0x5c9fc>
  45f8c4:	ldr	x8, [x20]
  45f8c8:	cbz	x8, 45f910 <feof@plt+0x5c830>
  45f8cc:	ldp	x0, x9, [x20, #8]
  45f8d0:	sub	x9, x9, x0
  45f8d4:	cmp	x9, #0x1
  45f8d8:	b.gt	45f924 <feof@plt+0x5c844>
  45f8dc:	sub	x23, x0, x8
  45f8e0:	lsl	w9, w23, #1
  45f8e4:	add	w9, w9, #0x4
  45f8e8:	sxtw	x21, w9
  45f8ec:	mov	x0, x8
  45f8f0:	mov	x1, x21
  45f8f4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f8f8:	mov	x8, x0
  45f8fc:	add	x0, x0, w23, sxtw
  45f900:	add	x9, x8, x21
  45f904:	stp	x8, x0, [x20]
  45f908:	str	x9, [x20, #16]
  45f90c:	b	45f924 <feof@plt+0x5c844>
  45f910:	mov	w0, #0x20                  	// #32
  45f914:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f918:	add	x8, x0, #0x20
  45f91c:	stp	x0, x0, [x20]
  45f920:	str	x8, [x20, #16]
  45f924:	mov	w8, #0x7830                	// #30768
  45f928:	strh	w8, [x0]
  45f92c:	ldp	x8, x9, [x20]
  45f930:	add	x0, x9, #0x2
  45f934:	str	x0, [x20, #8]
  45f938:	cbz	x8, 45f980 <feof@plt+0x5c8a0>
  45f93c:	ldr	x9, [x20, #16]
  45f940:	sub	x9, x9, x0
  45f944:	cmp	x9, #0x0
  45f948:	b.gt	45f994 <feof@plt+0x5c8b4>
  45f94c:	sub	x23, x0, x8
  45f950:	lsl	w9, w23, #1
  45f954:	add	w9, w9, #0x2
  45f958:	sxtw	x21, w9
  45f95c:	mov	x0, x8
  45f960:	mov	x1, x21
  45f964:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f968:	mov	x8, x0
  45f96c:	add	x0, x0, w23, sxtw
  45f970:	add	x9, x8, x21
  45f974:	stp	x8, x0, [x20]
  45f978:	str	x9, [x20, #16]
  45f97c:	b	45f994 <feof@plt+0x5c8b4>
  45f980:	mov	w0, #0x20                  	// #32
  45f984:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f988:	add	x8, x0, #0x20
  45f98c:	stp	x0, x0, [x20]
  45f990:	str	x8, [x20, #16]
  45f994:	ldrb	w8, [x19]
  45f998:	strb	w8, [x0]
  45f99c:	ldp	x8, x9, [x20]
  45f9a0:	add	x0, x9, #0x1
  45f9a4:	str	x0, [x20, #8]
  45f9a8:	cbz	x8, 45f9f0 <feof@plt+0x5c910>
  45f9ac:	ldr	x9, [x20, #16]
  45f9b0:	sub	x9, x9, x0
  45f9b4:	cmp	x9, #0x0
  45f9b8:	b.gt	45fa04 <feof@plt+0x5c924>
  45f9bc:	sub	x23, x0, x8
  45f9c0:	lsl	w9, w23, #1
  45f9c4:	add	w9, w9, #0x2
  45f9c8:	sxtw	x21, w9
  45f9cc:	mov	x0, x8
  45f9d0:	mov	x1, x21
  45f9d4:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45f9d8:	mov	x8, x0
  45f9dc:	add	x0, x0, w23, sxtw
  45f9e0:	add	x9, x8, x21
  45f9e4:	stp	x8, x0, [x20]
  45f9e8:	str	x9, [x20, #16]
  45f9ec:	b	45fa04 <feof@plt+0x5c924>
  45f9f0:	mov	w0, #0x20                  	// #32
  45f9f4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45f9f8:	add	x8, x0, #0x20
  45f9fc:	stp	x0, x0, [x20]
  45fa00:	str	x8, [x20, #16]
  45fa04:	mov	w8, #0x2e                  	// #46
  45fa08:	b	45fa24 <feof@plt+0x5c944>
  45fa0c:	mov	w0, #0x20                  	// #32
  45fa10:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45fa14:	stp	x0, x0, [x20]
  45fa18:	add	x8, x0, #0x20
  45fa1c:	str	x8, [x20, #16]
  45fa20:	ldrb	w8, [x19, #1]!
  45fa24:	strb	w8, [x0]
  45fa28:	ldr	x8, [x20, #8]
  45fa2c:	add	x0, x8, #0x1
  45fa30:	str	x0, [x20, #8]
  45fa34:	ldrb	w8, [x19, #1]
  45fa38:	ldrh	w9, [x22, x8, lsl #1]
  45fa3c:	tbz	w9, #8, 45fa88 <feof@plt+0x5c9a8>
  45fa40:	ldr	x8, [x20]
  45fa44:	cbz	x8, 45fa0c <feof@plt+0x5c92c>
  45fa48:	ldr	x9, [x20, #16]
  45fa4c:	sub	x9, x9, x0
  45fa50:	cmp	x9, #0x0
  45fa54:	b.gt	45fa20 <feof@plt+0x5c940>
  45fa58:	sub	x23, x0, x8
  45fa5c:	lsl	w9, w23, #1
  45fa60:	add	w9, w9, #0x2
  45fa64:	sxtw	x21, w9
  45fa68:	mov	x0, x8
  45fa6c:	mov	x1, x21
  45fa70:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fa74:	mov	x8, x0
  45fa78:	add	x0, x0, w23, sxtw
  45fa7c:	stp	x8, x0, [x20]
  45fa80:	add	x8, x8, x21
  45fa84:	b	45fa1c <feof@plt+0x5c93c>
  45fa88:	cmp	w8, #0x50
  45fa8c:	b.ne	45fadc <feof@plt+0x5c9fc>  // b.any
  45fa90:	ldr	x8, [x20]
  45fa94:	cbz	x8, 45fae4 <feof@plt+0x5ca04>
  45fa98:	ldr	x9, [x20, #16]
  45fa9c:	sub	x9, x9, x0
  45faa0:	cmp	x9, #0x0
  45faa4:	b.gt	45faf8 <feof@plt+0x5ca18>
  45faa8:	sub	x23, x0, x8
  45faac:	lsl	w9, w23, #1
  45fab0:	add	w9, w9, #0x2
  45fab4:	sxtw	x21, w9
  45fab8:	mov	x0, x8
  45fabc:	mov	x1, x21
  45fac0:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fac4:	mov	x8, x0
  45fac8:	add	x0, x0, w23, sxtw
  45facc:	add	x9, x8, x21
  45fad0:	stp	x8, x0, [x20]
  45fad4:	str	x9, [x20, #16]
  45fad8:	b	45faf8 <feof@plt+0x5ca18>
  45fadc:	mov	x19, xzr
  45fae0:	b	45f840 <feof@plt+0x5c760>
  45fae4:	mov	w0, #0x20                  	// #32
  45fae8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45faec:	add	x8, x0, #0x20
  45faf0:	stp	x0, x0, [x20]
  45faf4:	str	x8, [x20, #16]
  45faf8:	mov	w8, #0x70                  	// #112
  45fafc:	strb	w8, [x0]
  45fb00:	ldr	x8, [x20, #8]
  45fb04:	mov	x9, x19
  45fb08:	add	x0, x8, #0x1
  45fb0c:	str	x0, [x20, #8]
  45fb10:	ldrb	w8, [x9, #2]!
  45fb14:	cmp	w8, #0x4e
  45fb18:	b.ne	45fb68 <feof@plt+0x5ca88>  // b.any
  45fb1c:	ldr	x8, [x20]
  45fb20:	cbz	x8, 45fb78 <feof@plt+0x5ca98>
  45fb24:	ldr	x9, [x20, #16]
  45fb28:	sub	x9, x9, x0
  45fb2c:	cmp	x9, #0x0
  45fb30:	b.gt	45fb8c <feof@plt+0x5caac>
  45fb34:	sub	x23, x0, x8
  45fb38:	lsl	w9, w23, #1
  45fb3c:	add	w9, w9, #0x2
  45fb40:	sxtw	x21, w9
  45fb44:	mov	x0, x8
  45fb48:	mov	x1, x21
  45fb4c:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fb50:	mov	x8, x0
  45fb54:	add	x0, x0, w23, sxtw
  45fb58:	add	x9, x8, x21
  45fb5c:	stp	x8, x0, [x20]
  45fb60:	str	x9, [x20, #16]
  45fb64:	b	45fb8c <feof@plt+0x5caac>
  45fb68:	mov	x19, x9
  45fb6c:	ldrh	w8, [x22, w8, uxtw #1]
  45fb70:	tbnz	w8, #2, 45fbe4 <feof@plt+0x5cb04>
  45fb74:	b	45f840 <feof@plt+0x5c760>
  45fb78:	mov	w0, #0x20                  	// #32
  45fb7c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45fb80:	add	x8, x0, #0x20
  45fb84:	stp	x0, x0, [x20]
  45fb88:	str	x8, [x20, #16]
  45fb8c:	mov	w8, #0x2d                  	// #45
  45fb90:	strb	w8, [x0]
  45fb94:	ldr	x8, [x20, #8]
  45fb98:	add	x0, x8, #0x1
  45fb9c:	str	x0, [x20, #8]
  45fba0:	ldrb	w8, [x19, #3]!
  45fba4:	ldrh	w8, [x22, w8, uxtw #1]
  45fba8:	tbnz	w8, #2, 45fbe4 <feof@plt+0x5cb04>
  45fbac:	b	45f840 <feof@plt+0x5c760>
  45fbb0:	mov	w0, #0x20                  	// #32
  45fbb4:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45fbb8:	stp	x0, x0, [x20]
  45fbbc:	add	x8, x0, #0x20
  45fbc0:	str	x8, [x20, #16]
  45fbc4:	ldrb	w8, [x19]
  45fbc8:	strb	w8, [x0]
  45fbcc:	ldr	x8, [x20, #8]
  45fbd0:	add	x0, x8, #0x1
  45fbd4:	str	x0, [x20, #8]
  45fbd8:	ldrb	w8, [x19, #1]!
  45fbdc:	ldrh	w8, [x22, x8, lsl #1]
  45fbe0:	tbz	w8, #2, 45f840 <feof@plt+0x5c760>
  45fbe4:	ldr	x8, [x20]
  45fbe8:	cbz	x8, 45fbb0 <feof@plt+0x5cad0>
  45fbec:	ldr	x9, [x20, #16]
  45fbf0:	sub	x9, x9, x0
  45fbf4:	cmp	x9, #0x0
  45fbf8:	b.gt	45fbc4 <feof@plt+0x5cae4>
  45fbfc:	sub	x23, x0, x8
  45fc00:	lsl	w9, w23, #1
  45fc04:	add	w9, w9, #0x2
  45fc08:	sxtw	x21, w9
  45fc0c:	mov	x0, x8
  45fc10:	mov	x1, x21
  45fc14:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fc18:	mov	x8, x0
  45fc1c:	add	x0, x0, w23, sxtw
  45fc20:	stp	x8, x0, [x20]
  45fc24:	add	x8, x8, x21
  45fc28:	b	45fbc0 <feof@plt+0x5cae0>
  45fc2c:	sub	sp, sp, #0xa0
  45fc30:	stp	x29, x30, [sp, #80]
  45fc34:	stp	x26, x25, [sp, #96]
  45fc38:	stp	x24, x23, [sp, #112]
  45fc3c:	stp	x22, x21, [sp, #128]
  45fc40:	stp	x20, x19, [sp, #144]
  45fc44:	add	x29, sp, #0x50
  45fc48:	cbz	x1, 45fd18 <feof@plt+0x5cc38>
  45fc4c:	ldrb	w8, [x1]
  45fc50:	cbz	w8, 45fd18 <feof@plt+0x5cc38>
  45fc54:	mov	x19, x0
  45fc58:	stp	xzr, xzr, [x29, #-24]
  45fc5c:	stur	xzr, [x29, #-8]
  45fc60:	stp	xzr, xzr, [sp, #40]
  45fc64:	stp	xzr, xzr, [sp, #24]
  45fc68:	stp	xzr, xzr, [sp, #8]
  45fc6c:	bl	45b088 <feof@plt+0x57fa8>
  45fc70:	mov	x1, x0
  45fc74:	sub	x0, x29, #0x18
  45fc78:	bl	45b370 <feof@plt+0x58290>
  45fc7c:	ldp	x9, x8, [x29, #-24]
  45fc80:	mov	x1, x0
  45fc84:	add	x0, sp, #0x20
  45fc88:	sub	w10, w8, w9
  45fc8c:	cmp	x8, x9
  45fc90:	csel	w24, wzr, w10, eq  // eq = none
  45fc94:	bl	45b834 <feof@plt+0x58754>
  45fc98:	ldp	x9, x8, [sp, #32]
  45fc9c:	mov	x1, x0
  45fca0:	add	x0, sp, #0x8
  45fca4:	sub	w10, w8, w9
  45fca8:	cmp	x8, x9
  45fcac:	csel	w25, wzr, w10, eq  // eq = none
  45fcb0:	bl	45bcdc <feof@plt+0x58bfc>
  45fcb4:	ldp	x21, x8, [sp, #8]
  45fcb8:	mov	x20, x0
  45fcbc:	subs	x23, x8, x21
  45fcc0:	b.eq	45fd60 <feof@plt+0x5cc80>  // b.none
  45fcc4:	cbz	w23, 45fd60 <feof@plt+0x5cc80>
  45fcc8:	ldr	x8, [x19]
  45fccc:	cbz	x8, 45fd20 <feof@plt+0x5cc40>
  45fcd0:	ldp	x0, x9, [x19, #8]
  45fcd4:	sxtw	x22, w23
  45fcd8:	sub	x9, x9, x0
  45fcdc:	cmp	x9, x22
  45fce0:	b.ge	45fd48 <feof@plt+0x5cc68>  // b.tcont
  45fce4:	sub	x26, x0, x8
  45fce8:	add	w9, w26, w23
  45fcec:	lsl	w9, w9, #1
  45fcf0:	sxtw	x23, w9
  45fcf4:	mov	x0, x8
  45fcf8:	mov	x1, x23
  45fcfc:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fd00:	mov	x8, x0
  45fd04:	add	x0, x0, w26, sxtw
  45fd08:	add	x9, x8, x23
  45fd0c:	stp	x8, x0, [x19]
  45fd10:	str	x9, [x19, #16]
  45fd14:	b	45fd48 <feof@plt+0x5cc68>
  45fd18:	mov	x20, xzr
  45fd1c:	b	45ffb0 <feof@plt+0x5ced0>
  45fd20:	and	x8, x23, #0xffffffff
  45fd24:	cmp	w23, #0x20
  45fd28:	mov	w9, #0x20                  	// #32
  45fd2c:	csel	x22, x8, x9, gt
  45fd30:	mov	x0, x22
  45fd34:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45fd38:	add	x8, x0, x22
  45fd3c:	stp	x0, x0, [x19]
  45fd40:	str	x8, [x19, #16]
  45fd44:	sxtw	x22, w23
  45fd48:	mov	x1, x21
  45fd4c:	mov	x2, x22
  45fd50:	bl	4029c0 <memcpy@plt>
  45fd54:	ldr	x8, [x19, #8]
  45fd58:	add	x8, x8, x22
  45fd5c:	str	x8, [x19, #8]
  45fd60:	ldr	x8, [x19]
  45fd64:	cbz	x8, 45fdac <feof@plt+0x5cccc>
  45fd68:	ldp	x0, x9, [x19, #8]
  45fd6c:	sub	x9, x9, x0
  45fd70:	cmp	x9, #0x0
  45fd74:	b.gt	45fdc0 <feof@plt+0x5cce0>
  45fd78:	sub	x22, x0, x8
  45fd7c:	lsl	w9, w22, #1
  45fd80:	add	w9, w9, #0x2
  45fd84:	sxtw	x21, w9
  45fd88:	mov	x0, x8
  45fd8c:	mov	x1, x21
  45fd90:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fd94:	mov	x8, x0
  45fd98:	add	x0, x0, w22, sxtw
  45fd9c:	add	x9, x8, x21
  45fda0:	stp	x8, x0, [x19]
  45fda4:	str	x9, [x19, #16]
  45fda8:	b	45fdc0 <feof@plt+0x5cce0>
  45fdac:	mov	w0, #0x20                  	// #32
  45fdb0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45fdb4:	add	x8, x0, #0x20
  45fdb8:	stp	x0, x0, [x19]
  45fdbc:	str	x8, [x19, #16]
  45fdc0:	mov	w8, #0x28                  	// #40
  45fdc4:	strb	w8, [x0]
  45fdc8:	ldr	x8, [x19, #8]
  45fdcc:	add	x0, x8, #0x1
  45fdd0:	str	x0, [x19, #8]
  45fdd4:	cbz	w25, 45fe68 <feof@plt+0x5cd88>
  45fdd8:	ldr	x8, [x19]
  45fddc:	ldr	x21, [sp, #32]
  45fde0:	cbz	x8, 45fe2c <feof@plt+0x5cd4c>
  45fde4:	ldr	x9, [x19, #16]
  45fde8:	sxtw	x22, w25
  45fdec:	sub	x9, x9, x0
  45fdf0:	cmp	x9, x22
  45fdf4:	b.ge	45fe50 <feof@plt+0x5cd70>  // b.tcont
  45fdf8:	sub	x26, x0, x8
  45fdfc:	add	w9, w25, w26
  45fe00:	lsl	w9, w9, #1
  45fe04:	sxtw	x23, w9
  45fe08:	mov	x0, x8
  45fe0c:	mov	x1, x23
  45fe10:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fe14:	mov	x8, x0
  45fe18:	add	x0, x0, w26, sxtw
  45fe1c:	add	x9, x8, x23
  45fe20:	stp	x8, x0, [x19]
  45fe24:	str	x9, [x19, #16]
  45fe28:	b	45fe50 <feof@plt+0x5cd70>
  45fe2c:	cmp	w25, #0x20
  45fe30:	mov	w8, #0x20                  	// #32
  45fe34:	csel	w22, w25, w8, gt
  45fe38:	mov	x0, x22
  45fe3c:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45fe40:	add	x8, x0, x22
  45fe44:	stp	x0, x0, [x19]
  45fe48:	str	x8, [x19, #16]
  45fe4c:	sxtw	x22, w25
  45fe50:	mov	x1, x21
  45fe54:	mov	x2, x22
  45fe58:	bl	4029c0 <memcpy@plt>
  45fe5c:	ldr	x8, [x19, #8]
  45fe60:	add	x0, x8, x22
  45fe64:	str	x0, [x19, #8]
  45fe68:	ldr	x8, [x19]
  45fe6c:	cbz	x8, 45feb4 <feof@plt+0x5cdd4>
  45fe70:	ldr	x9, [x19, #16]
  45fe74:	sub	x9, x9, x0
  45fe78:	cmp	x9, #0x1
  45fe7c:	b.gt	45fec8 <feof@plt+0x5cde8>
  45fe80:	sub	x22, x0, x8
  45fe84:	lsl	w9, w22, #1
  45fe88:	add	w9, w9, #0x4
  45fe8c:	sxtw	x21, w9
  45fe90:	mov	x0, x8
  45fe94:	mov	x1, x21
  45fe98:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45fe9c:	mov	x8, x0
  45fea0:	add	x0, x0, w22, sxtw
  45fea4:	add	x9, x8, x21
  45fea8:	stp	x8, x0, [x19]
  45feac:	str	x9, [x19, #16]
  45feb0:	b	45fec8 <feof@plt+0x5cde8>
  45feb4:	mov	w0, #0x20                  	// #32
  45feb8:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45febc:	add	x8, x0, #0x20
  45fec0:	stp	x0, x0, [x19]
  45fec4:	str	x8, [x19, #16]
  45fec8:	mov	w8, #0x2029                	// #8233
  45fecc:	strh	w8, [x0]
  45fed0:	ldr	x8, [x19, #8]
  45fed4:	add	x0, x8, #0x2
  45fed8:	str	x0, [x19, #8]
  45fedc:	ldur	x21, [x29, #-24]
  45fee0:	cbz	w24, 45ff74 <feof@plt+0x5ce94>
  45fee4:	ldr	x8, [x19]
  45fee8:	cbz	x8, 45ff34 <feof@plt+0x5ce54>
  45feec:	ldr	x9, [x19, #16]
  45fef0:	sxtw	x22, w24
  45fef4:	sub	x9, x9, x0
  45fef8:	cmp	x9, x22
  45fefc:	b.ge	45ff58 <feof@plt+0x5ce78>  // b.tcont
  45ff00:	sub	x25, x0, x8
  45ff04:	add	w9, w24, w25
  45ff08:	lsl	w9, w9, #1
  45ff0c:	sxtw	x23, w9
  45ff10:	mov	x0, x8
  45ff14:	mov	x1, x23
  45ff18:	bl	46224c <_obstack_memory_used@@Base+0xa84>
  45ff1c:	mov	x8, x0
  45ff20:	add	x0, x0, w25, sxtw
  45ff24:	add	x9, x8, x23
  45ff28:	stp	x8, x0, [x19]
  45ff2c:	str	x9, [x19, #16]
  45ff30:	b	45ff58 <feof@plt+0x5ce78>
  45ff34:	cmp	w24, #0x20
  45ff38:	mov	w8, #0x20                  	// #32
  45ff3c:	csel	w22, w24, w8, gt
  45ff40:	mov	x0, x22
  45ff44:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  45ff48:	add	x8, x0, x22
  45ff4c:	stp	x0, x0, [x19]
  45ff50:	str	x8, [x19, #16]
  45ff54:	sxtw	x22, w24
  45ff58:	mov	x1, x21
  45ff5c:	mov	x2, x22
  45ff60:	bl	4029c0 <memcpy@plt>
  45ff64:	ldr	x8, [x19, #8]
  45ff68:	add	x8, x8, x22
  45ff6c:	str	x8, [x19, #8]
  45ff70:	ldur	x21, [x29, #-24]
  45ff74:	cbz	x21, 45ff88 <feof@plt+0x5cea8>
  45ff78:	mov	x0, x21
  45ff7c:	bl	402b20 <free@plt>
  45ff80:	stp	xzr, xzr, [x29, #-24]
  45ff84:	stur	xzr, [x29, #-8]
  45ff88:	ldr	x0, [sp, #32]
  45ff8c:	cbz	x0, 45ff9c <feof@plt+0x5cebc>
  45ff90:	bl	402b20 <free@plt>
  45ff94:	stp	xzr, xzr, [sp, #32]
  45ff98:	str	xzr, [sp, #48]
  45ff9c:	ldr	x0, [sp, #8]
  45ffa0:	cbz	x0, 45ffb0 <feof@plt+0x5ced0>
  45ffa4:	bl	402b20 <free@plt>
  45ffa8:	stp	xzr, xzr, [sp, #8]
  45ffac:	str	xzr, [sp, #24]
  45ffb0:	mov	x0, x20
  45ffb4:	ldp	x20, x19, [sp, #144]
  45ffb8:	ldp	x22, x21, [sp, #128]
  45ffbc:	ldp	x24, x23, [sp, #112]
  45ffc0:	ldp	x26, x25, [sp, #96]
  45ffc4:	ldp	x29, x30, [sp, #80]
  45ffc8:	add	sp, sp, #0xa0
  45ffcc:	ret
  45ffd0:	b	402ed0 <strcmp@plt>
  45ffd4:	b	402d40 <strncmp@plt>
  45ffd8:	adrp	x9, 475000 <_obstack_memory_used@@Base+0x13838>
  45ffdc:	mov	w8, wzr
  45ffe0:	add	x9, x9, #0x98
  45ffe4:	mov	w10, #0x43                  	// #67
  45ffe8:	b	45fffc <feof@plt+0x5cf1c>
  45ffec:	mov	w11, #0x2f                  	// #47
  45fff0:	ldrb	w11, [x9, w11, uxtw]
  45fff4:	madd	w8, w8, w10, w11
  45fff8:	sub	w8, w8, #0x71
  45fffc:	ldrb	w11, [x0], #1
  460000:	cmp	w11, #0x5c
  460004:	b.eq	45ffec <feof@plt+0x5cf0c>  // b.none
  460008:	cbnz	w11, 45fff0 <feof@plt+0x5cf10>
  46000c:	mov	w0, w8
  460010:	ret
  460014:	stp	x29, x30, [sp, #-16]!
  460018:	mov	x29, sp
  46001c:	bl	402ed0 <strcmp@plt>
  460020:	cmp	w0, #0x0
  460024:	cset	w0, eq  // eq = none
  460028:	ldp	x29, x30, [sp], #16
  46002c:	ret
  460030:	stp	x29, x30, [sp, #-48]!
  460034:	str	x21, [sp, #16]
  460038:	stp	x20, x19, [sp, #32]
  46003c:	mov	x29, sp
  460040:	mov	x19, x1
  460044:	bl	461418 <feof@plt+0x5e338>
  460048:	mov	x20, x0
  46004c:	mov	x0, x19
  460050:	bl	461418 <feof@plt+0x5e338>
  460054:	mov	x19, x0
  460058:	mov	x0, x20
  46005c:	mov	x1, x19
  460060:	bl	402ed0 <strcmp@plt>
  460064:	cmp	w0, #0x0
  460068:	mov	x0, x20
  46006c:	cset	w21, eq  // eq = none
  460070:	bl	402b20 <free@plt>
  460074:	mov	x0, x19
  460078:	bl	402b20 <free@plt>
  46007c:	mov	w0, w21
  460080:	ldp	x20, x19, [sp, #32]
  460084:	ldr	x21, [sp, #16]
  460088:	ldp	x29, x30, [sp], #48
  46008c:	ret
  460090:	cbz	x0, 46009c <feof@plt+0x5cfbc>
  460094:	mov	w1, #0x2                   	// #2
  460098:	b	402ea0 <__fsetlocking@plt>
  46009c:	ret
  4600a0:	stp	x29, x30, [sp, #-16]!
  4600a4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4600a8:	ldr	x0, [x8, #1432]
  4600ac:	mov	x29, sp
  4600b0:	cbz	x0, 4600bc <feof@plt+0x5cfdc>
  4600b4:	mov	w1, #0x2                   	// #2
  4600b8:	bl	402ea0 <__fsetlocking@plt>
  4600bc:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4600c0:	ldr	x0, [x8, #1456]
  4600c4:	cbz	x0, 4600d0 <feof@plt+0x5cff0>
  4600c8:	mov	w1, #0x2                   	// #2
  4600cc:	bl	402ea0 <__fsetlocking@plt>
  4600d0:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4600d4:	ldr	x0, [x8, #1464]
  4600d8:	cbz	x0, 4600e8 <feof@plt+0x5d008>
  4600dc:	mov	w1, #0x2                   	// #2
  4600e0:	ldp	x29, x30, [sp], #16
  4600e4:	b	402ea0 <__fsetlocking@plt>
  4600e8:	ldp	x29, x30, [sp], #16
  4600ec:	ret
  4600f0:	stp	x29, x30, [sp, #-32]!
  4600f4:	str	x19, [sp, #16]
  4600f8:	mov	x29, sp
  4600fc:	bl	402eb0 <fopen@plt>
  460100:	mov	x19, x0
  460104:	cbz	x0, 460114 <feof@plt+0x5d034>
  460108:	mov	w1, #0x2                   	// #2
  46010c:	mov	x0, x19
  460110:	bl	402ea0 <__fsetlocking@plt>
  460114:	mov	x0, x19
  460118:	ldr	x19, [sp, #16]
  46011c:	ldp	x29, x30, [sp], #32
  460120:	ret
  460124:	stp	x29, x30, [sp, #-32]!
  460128:	str	x19, [sp, #16]
  46012c:	mov	x29, sp
  460130:	bl	403010 <fdopen@plt>
  460134:	mov	x19, x0
  460138:	cbz	x0, 460148 <feof@plt+0x5d068>
  46013c:	mov	w1, #0x2                   	// #2
  460140:	mov	x0, x19
  460144:	bl	402ea0 <__fsetlocking@plt>
  460148:	mov	x0, x19
  46014c:	ldr	x19, [sp, #16]
  460150:	ldp	x29, x30, [sp], #32
  460154:	ret
  460158:	stp	x29, x30, [sp, #-32]!
  46015c:	str	x19, [sp, #16]
  460160:	mov	x29, sp
  460164:	bl	402bc0 <freopen@plt>
  460168:	mov	x19, x0
  46016c:	cbz	x0, 46017c <feof@plt+0x5d09c>
  460170:	mov	w1, #0x2                   	// #2
  460174:	mov	x0, x19
  460178:	bl	402ea0 <__fsetlocking@plt>
  46017c:	mov	x0, x19
  460180:	ldr	x19, [sp, #16]
  460184:	ldp	x29, x30, [sp], #32
  460188:	ret
  46018c:	lsr	x8, x0, #32
  460190:	mov	w9, #0xadcc                	// #44492
  460194:	movk	w9, #0xbdec, lsl #16
  460198:	mov	w10, #0x109a                	// #4250
  46019c:	sub	w8, w8, w0
  4601a0:	movk	w10, #0x2, lsl #16
  4601a4:	add	w8, w8, w9
  4601a8:	mov	w9, #0x2785                	// #10117
  4601ac:	eor	w8, w8, w10
  4601b0:	movk	w9, #0x5c24, lsl #16
  4601b4:	sub	w11, w0, w8
  4601b8:	add	w9, w11, w9
  4601bc:	mov	w10, #0x5234                	// #21044
  4601c0:	eor	w9, w9, w8, lsl #8
  4601c4:	movk	w10, #0x4213, lsl #16
  4601c8:	add	w11, w8, w9
  4601cc:	sub	w10, w10, w11
  4601d0:	sub	w8, w8, w9
  4601d4:	eor	w10, w10, w9, lsr #13
  4601d8:	sub	w8, w8, w10
  4601dc:	sub	w9, w9, w10
  4601e0:	eor	w8, w8, w10, lsr #12
  4601e4:	sub	w9, w9, w8
  4601e8:	sub	w10, w10, w8
  4601ec:	eor	w9, w9, w8, lsl #16
  4601f0:	sub	w10, w10, w9
  4601f4:	sub	w8, w8, w9
  4601f8:	eor	w10, w10, w9, lsr #5
  4601fc:	sub	w8, w8, w10
  460200:	sub	w9, w9, w10
  460204:	eor	w8, w8, w10, lsr #3
  460208:	sub	w9, w9, w8
  46020c:	eor	w9, w9, w8, lsl #10
  460210:	sub	w8, w10, w8
  460214:	sub	w8, w8, w9
  460218:	eor	w0, w8, w9, lsr #15
  46021c:	ret
  460220:	cmp	x0, x1
  460224:	cset	w0, eq  // eq = none
  460228:	ret
  46022c:	ldr	x0, [x0, #32]
  460230:	ret
  460234:	ldp	x8, x9, [x0, #40]
  460238:	sub	x0, x8, x9
  46023c:	ret
  460240:	stp	x29, x30, [sp, #-80]!
  460244:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  460248:	stp	x26, x25, [sp, #16]
  46024c:	stp	x24, x23, [sp, #32]
  460250:	stp	x22, x21, [sp, #48]
  460254:	stp	x20, x19, [sp, #64]
  460258:	mov	x19, x5
  46025c:	mov	x20, x4
  460260:	mov	x21, x3
  460264:	mov	x22, x2
  460268:	mov	x23, x1
  46026c:	mov	x2, x0
  460270:	mov	w8, wzr
  460274:	mov	w26, #0x1e                  	// #30
  460278:	add	x9, x9, #0xa30
  46027c:	mov	x29, sp
  460280:	sub	w10, w26, w8
  460284:	add	w10, w8, w10, lsr #1
  460288:	lsl	x11, x10, #4
  46028c:	ldr	w11, [x9, x11]
  460290:	cmp	x11, x2
  460294:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  460298:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  46029c:	cmp	w26, w8
  4602a0:	b.ne	460280 <feof@plt+0x5d1a0>  // b.any
  4602a4:	mov	w8, w26
  4602a8:	lsl	x8, x8, #4
  4602ac:	ldr	w25, [x9, x8]
  4602b0:	cmp	x25, x2
  4602b4:	b.cc	460324 <feof@plt+0x5d244>  // b.lo, b.ul, b.last
  4602b8:	mov	w0, #0x1                   	// #1
  4602bc:	mov	w1, #0x70                  	// #112
  4602c0:	blr	x20
  4602c4:	mov	x24, x0
  4602c8:	cbz	x0, 460308 <feof@plt+0x5d228>
  4602cc:	mov	w1, #0x8                   	// #8
  4602d0:	mov	x0, x25
  4602d4:	blr	x20
  4602d8:	str	x0, [x24, #24]
  4602dc:	cbz	x0, 4602f8 <feof@plt+0x5d218>
  4602e0:	str	x25, [x24, #32]
  4602e4:	str	w26, [x24, #104]
  4602e8:	stp	x23, x22, [x24]
  4602ec:	str	x21, [x24, #16]
  4602f0:	stp	x20, x19, [x24, #64]
  4602f4:	b	460308 <feof@plt+0x5d228>
  4602f8:	cbz	x19, 460304 <feof@plt+0x5d224>
  4602fc:	mov	x0, x24
  460300:	blr	x19
  460304:	mov	x24, xzr
  460308:	mov	x0, x24
  46030c:	ldp	x20, x19, [sp, #64]
  460310:	ldp	x22, x21, [sp, #48]
  460314:	ldp	x24, x23, [sp, #32]
  460318:	ldp	x26, x25, [sp, #16]
  46031c:	ldp	x29, x30, [sp], #80
  460320:	ret
  460324:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  460328:	ldr	x0, [x8, #1464]
  46032c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  460330:	add	x1, x1, #0xc10
  460334:	bl	402a70 <fprintf@plt>
  460338:	bl	402f30 <abort@plt>
  46033c:	stp	x29, x30, [sp, #-80]!
  460340:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  460344:	stp	x26, x25, [sp, #16]
  460348:	stp	x24, x23, [sp, #32]
  46034c:	stp	x22, x21, [sp, #48]
  460350:	stp	x20, x19, [sp, #64]
  460354:	mov	x19, x6
  460358:	mov	x20, x5
  46035c:	mov	x21, x3
  460360:	mov	x22, x2
  460364:	mov	x23, x1
  460368:	mov	x2, x0
  46036c:	mov	w8, wzr
  460370:	mov	w26, #0x1e                  	// #30
  460374:	add	x9, x9, #0xa30
  460378:	mov	x29, sp
  46037c:	sub	w10, w26, w8
  460380:	add	w10, w8, w10, lsr #1
  460384:	lsl	x11, x10, #4
  460388:	ldr	w11, [x9, x11]
  46038c:	cmp	x11, x2
  460390:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  460394:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  460398:	cmp	w26, w8
  46039c:	b.ne	46037c <feof@plt+0x5d29c>  // b.any
  4603a0:	mov	w8, w26
  4603a4:	lsl	x8, x8, #4
  4603a8:	ldr	w25, [x9, x8]
  4603ac:	cmp	x25, x2
  4603b0:	b.cc	460420 <feof@plt+0x5d340>  // b.lo, b.ul, b.last
  4603b4:	mov	w0, #0x1                   	// #1
  4603b8:	mov	w1, #0x70                  	// #112
  4603bc:	blr	x4
  4603c0:	mov	x24, x0
  4603c4:	cbz	x0, 460404 <feof@plt+0x5d324>
  4603c8:	mov	w1, #0x8                   	// #8
  4603cc:	mov	x0, x25
  4603d0:	blr	x20
  4603d4:	str	x0, [x24, #24]
  4603d8:	cbz	x0, 4603f4 <feof@plt+0x5d314>
  4603dc:	str	x25, [x24, #32]
  4603e0:	str	w26, [x24, #104]
  4603e4:	stp	x23, x22, [x24]
  4603e8:	str	x21, [x24, #16]
  4603ec:	stp	x20, x19, [x24, #64]
  4603f0:	b	460404 <feof@plt+0x5d324>
  4603f4:	cbz	x19, 460400 <feof@plt+0x5d320>
  4603f8:	mov	x0, x24
  4603fc:	blr	x19
  460400:	mov	x24, xzr
  460404:	mov	x0, x24
  460408:	ldp	x20, x19, [sp, #64]
  46040c:	ldp	x22, x21, [sp, #48]
  460410:	ldp	x24, x23, [sp, #32]
  460414:	ldp	x26, x25, [sp, #16]
  460418:	ldp	x29, x30, [sp], #80
  46041c:	ret
  460420:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  460424:	ldr	x0, [x8, #1464]
  460428:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  46042c:	add	x1, x1, #0xc10
  460430:	bl	402a70 <fprintf@plt>
  460434:	bl	402f30 <abort@plt>
  460438:	stp	x29, x30, [sp, #-96]!
  46043c:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  460440:	str	x27, [sp, #16]
  460444:	stp	x24, x23, [sp, #48]
  460448:	stp	x22, x21, [sp, #64]
  46044c:	stp	x20, x19, [sp, #80]
  460450:	mov	x19, x6
  460454:	mov	x21, x5
  460458:	mov	x20, x4
  46045c:	mov	x22, x3
  460460:	mov	x23, x2
  460464:	mov	x24, x1
  460468:	mov	x2, x0
  46046c:	mov	w8, wzr
  460470:	mov	w27, #0x1e                  	// #30
  460474:	add	x9, x9, #0xa30
  460478:	stp	x26, x25, [sp, #32]
  46047c:	mov	x29, sp
  460480:	sub	w10, w27, w8
  460484:	add	w10, w8, w10, lsr #1
  460488:	lsl	x11, x10, #4
  46048c:	ldr	w11, [x9, x11]
  460490:	cmp	x11, x2
  460494:	csel	w27, w27, w10, cc  // cc = lo, ul, last
  460498:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  46049c:	cmp	w27, w8
  4604a0:	b.ne	460480 <feof@plt+0x5d3a0>  // b.any
  4604a4:	mov	w8, w27
  4604a8:	lsl	x8, x8, #4
  4604ac:	ldr	w26, [x9, x8]
  4604b0:	cmp	x26, x2
  4604b4:	b.cc	460538 <feof@plt+0x5d458>  // b.lo, b.ul, b.last
  4604b8:	mov	w1, #0x1                   	// #1
  4604bc:	mov	w2, #0x70                  	// #112
  4604c0:	mov	x0, x20
  4604c4:	blr	x21
  4604c8:	mov	x25, x0
  4604cc:	cbz	x0, 460518 <feof@plt+0x5d438>
  4604d0:	mov	w2, #0x8                   	// #8
  4604d4:	mov	x0, x20
  4604d8:	mov	x1, x26
  4604dc:	blr	x21
  4604e0:	str	x0, [x25, #24]
  4604e4:	cbz	x0, 460504 <feof@plt+0x5d424>
  4604e8:	str	x26, [x25, #32]
  4604ec:	str	w27, [x25, #104]
  4604f0:	stp	x24, x23, [x25]
  4604f4:	str	x22, [x25, #16]
  4604f8:	stp	x20, x21, [x25, #80]
  4604fc:	str	x19, [x25, #96]
  460500:	b	460518 <feof@plt+0x5d438>
  460504:	cbz	x19, 460514 <feof@plt+0x5d434>
  460508:	mov	x0, x20
  46050c:	mov	x1, x25
  460510:	blr	x19
  460514:	mov	x25, xzr
  460518:	mov	x0, x25
  46051c:	ldp	x20, x19, [sp, #80]
  460520:	ldp	x22, x21, [sp, #64]
  460524:	ldp	x24, x23, [sp, #48]
  460528:	ldp	x26, x25, [sp, #32]
  46052c:	ldr	x27, [sp, #16]
  460530:	ldp	x29, x30, [sp], #96
  460534:	ret
  460538:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  46053c:	ldr	x0, [x8, #1464]
  460540:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  460544:	add	x1, x1, #0xc10
  460548:	bl	402a70 <fprintf@plt>
  46054c:	bl	402f30 <abort@plt>
  460550:	stp	x1, x2, [x0]
  460554:	str	x3, [x0, #16]
  460558:	stp	x4, x5, [x0, #80]
  46055c:	str	x6, [x0, #96]
  460560:	ret
  460564:	stp	x29, x30, [sp, #-64]!
  460568:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  46056c:	stp	x24, x23, [sp, #16]
  460570:	stp	x22, x21, [sp, #32]
  460574:	stp	x20, x19, [sp, #48]
  460578:	mov	x19, x3
  46057c:	mov	x20, x2
  460580:	mov	x21, x1
  460584:	mov	x2, x0
  460588:	mov	w8, wzr
  46058c:	mov	w24, #0x1e                  	// #30
  460590:	add	x9, x9, #0xa30
  460594:	mov	x29, sp
  460598:	sub	w10, w24, w8
  46059c:	add	w10, w8, w10, lsr #1
  4605a0:	lsl	x11, x10, #4
  4605a4:	ldr	w11, [x9, x11]
  4605a8:	cmp	x11, x2
  4605ac:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  4605b0:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  4605b4:	cmp	w24, w8
  4605b8:	b.ne	460598 <feof@plt+0x5d4b8>  // b.any
  4605bc:	mov	w8, w24
  4605c0:	lsl	x8, x8, #4
  4605c4:	ldr	w23, [x9, x8]
  4605c8:	cmp	x23, x2
  4605cc:	b.cc	460644 <feof@plt+0x5d564>  // b.lo, b.ul, b.last
  4605d0:	mov	w0, #0x1                   	// #1
  4605d4:	mov	w1, #0x70                  	// #112
  4605d8:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  4605dc:	mov	x22, x0
  4605e0:	cbz	x0, 46062c <feof@plt+0x5d54c>
  4605e4:	mov	w1, #0x8                   	// #8
  4605e8:	mov	x0, x23
  4605ec:	bl	4621fc <_obstack_memory_used@@Base+0xa34>
  4605f0:	str	x0, [x22, #24]
  4605f4:	cbz	x0, 460620 <feof@plt+0x5d540>
  4605f8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x838>
  4605fc:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x960>
  460600:	add	x8, x8, #0x1fc
  460604:	add	x9, x9, #0xb20
  460608:	str	x23, [x22, #32]
  46060c:	str	w24, [x22, #104]
  460610:	stp	x21, x20, [x22]
  460614:	str	x19, [x22, #16]
  460618:	stp	x8, x9, [x22, #64]
  46061c:	b	46062c <feof@plt+0x5d54c>
  460620:	mov	x0, x22
  460624:	bl	402b20 <free@plt>
  460628:	mov	x22, xzr
  46062c:	mov	x0, x22
  460630:	ldp	x20, x19, [sp, #48]
  460634:	ldp	x22, x21, [sp, #32]
  460638:	ldp	x24, x23, [sp, #16]
  46063c:	ldp	x29, x30, [sp], #64
  460640:	ret
  460644:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  460648:	ldr	x0, [x8, #1464]
  46064c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  460650:	add	x1, x1, #0xc10
  460654:	bl	402a70 <fprintf@plt>
  460658:	bl	402f30 <abort@plt>
  46065c:	stp	x29, x30, [sp, #-64]!
  460660:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  460664:	stp	x24, x23, [sp, #16]
  460668:	stp	x22, x21, [sp, #32]
  46066c:	stp	x20, x19, [sp, #48]
  460670:	mov	x19, x3
  460674:	mov	x20, x2
  460678:	mov	x21, x1
  46067c:	mov	x2, x0
  460680:	mov	w8, wzr
  460684:	mov	w24, #0x1e                  	// #30
  460688:	add	x9, x9, #0xa30
  46068c:	mov	x29, sp
  460690:	sub	w10, w24, w8
  460694:	add	w10, w8, w10, lsr #1
  460698:	lsl	x11, x10, #4
  46069c:	ldr	w11, [x9, x11]
  4606a0:	cmp	x11, x2
  4606a4:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  4606a8:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  4606ac:	cmp	w24, w8
  4606b0:	b.ne	460690 <feof@plt+0x5d5b0>  // b.any
  4606b4:	mov	w8, w24
  4606b8:	lsl	x8, x8, #4
  4606bc:	ldr	w23, [x9, x8]
  4606c0:	cmp	x23, x2
  4606c4:	b.cc	46073c <feof@plt+0x5d65c>  // b.lo, b.ul, b.last
  4606c8:	mov	w0, #0x1                   	// #1
  4606cc:	mov	w1, #0x70                  	// #112
  4606d0:	bl	402a30 <calloc@plt>
  4606d4:	mov	x22, x0
  4606d8:	cbz	x0, 460724 <feof@plt+0x5d644>
  4606dc:	mov	w1, #0x8                   	// #8
  4606e0:	mov	x0, x23
  4606e4:	bl	402a30 <calloc@plt>
  4606e8:	str	x0, [x22, #24]
  4606ec:	cbz	x0, 460718 <feof@plt+0x5d638>
  4606f0:	adrp	x8, 402000 <_Unwind_Backtrace@plt-0x960>
  4606f4:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x960>
  4606f8:	add	x8, x8, #0xa30
  4606fc:	add	x9, x9, #0xb20
  460700:	str	x23, [x22, #32]
  460704:	str	w24, [x22, #104]
  460708:	stp	x21, x20, [x22]
  46070c:	str	x19, [x22, #16]
  460710:	stp	x8, x9, [x22, #64]
  460714:	b	460724 <feof@plt+0x5d644>
  460718:	mov	x0, x22
  46071c:	bl	402b20 <free@plt>
  460720:	mov	x22, xzr
  460724:	mov	x0, x22
  460728:	ldp	x20, x19, [sp, #48]
  46072c:	ldp	x22, x21, [sp, #32]
  460730:	ldp	x24, x23, [sp, #16]
  460734:	ldp	x29, x30, [sp], #64
  460738:	ret
  46073c:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  460740:	ldr	x0, [x8, #1464]
  460744:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  460748:	add	x1, x1, #0xc10
  46074c:	bl	402a70 <fprintf@plt>
  460750:	bl	402f30 <abort@plt>
  460754:	stp	x29, x30, [sp, #-48]!
  460758:	str	x21, [sp, #16]
  46075c:	stp	x20, x19, [sp, #32]
  460760:	ldp	x8, x20, [x0, #16]
  460764:	mov	x19, x0
  460768:	mov	x29, sp
  46076c:	cbz	x8, 46077c <feof@plt+0x5d69c>
  460770:	ldr	w8, [x19, #32]
  460774:	subs	w21, w8, #0x1
  460778:	b.pl	4607ac <feof@plt+0x5d6cc>  // b.nfrst
  46077c:	ldr	x8, [x19, #72]
  460780:	cbz	x8, 4607c4 <feof@plt+0x5d6e4>
  460784:	mov	x0, x20
  460788:	blr	x8
  46078c:	ldr	x1, [x19, #72]
  460790:	mov	x0, x19
  460794:	ldp	x20, x19, [sp, #32]
  460798:	ldr	x21, [sp, #16]
  46079c:	ldp	x29, x30, [sp], #48
  4607a0:	br	x1
  4607a4:	subs	w21, w21, #0x1
  4607a8:	b.mi	46077c <feof@plt+0x5d69c>  // b.first
  4607ac:	ldr	x0, [x20, w21, uxtw #3]
  4607b0:	cmp	x0, #0x2
  4607b4:	b.cc	4607a4 <feof@plt+0x5d6c4>  // b.lo, b.ul, b.last
  4607b8:	ldr	x8, [x19, #16]
  4607bc:	blr	x8
  4607c0:	b	4607a4 <feof@plt+0x5d6c4>
  4607c4:	ldr	x8, [x19, #96]
  4607c8:	cbz	x8, 4607f4 <feof@plt+0x5d714>
  4607cc:	ldr	x0, [x19, #80]
  4607d0:	mov	x1, x20
  4607d4:	blr	x8
  4607d8:	ldr	x2, [x19, #96]
  4607dc:	ldr	x0, [x19, #80]
  4607e0:	mov	x1, x19
  4607e4:	ldp	x20, x19, [sp, #32]
  4607e8:	ldr	x21, [sp, #16]
  4607ec:	ldp	x29, x30, [sp], #48
  4607f0:	br	x2
  4607f4:	ldp	x20, x19, [sp, #32]
  4607f8:	ldr	x21, [sp, #16]
  4607fc:	ldp	x29, x30, [sp], #48
  460800:	ret
  460804:	stp	x29, x30, [sp, #-48]!
  460808:	stp	x22, x21, [sp, #16]
  46080c:	stp	x20, x19, [sp, #32]
  460810:	ldp	x8, x20, [x0, #16]
  460814:	ldr	x21, [x0, #32]
  460818:	mov	x19, x0
  46081c:	mov	x29, sp
  460820:	cbz	x8, 46082c <feof@plt+0x5d74c>
  460824:	subs	w22, w21, #0x1
  460828:	b.pl	46088c <feof@plt+0x5d7ac>  // b.nfrst
  46082c:	cmp	x21, #0x20, lsl #12
  460830:	b.ls	4608a4 <feof@plt+0x5d7c4>  // b.plast
  460834:	mov	w8, wzr
  460838:	mov	w21, #0x1e                  	// #30
  46083c:	sub	w9, w21, w8
  460840:	add	w9, w8, w9, lsr #1
  460844:	cmp	w9, #0x5
  460848:	csel	w21, w21, w9, cc  // cc = lo, ul, last
  46084c:	csinc	w8, w8, w9, cs  // cs = hs, nlast
  460850:	cmp	w21, w8
  460854:	b.ne	46083c <feof@plt+0x5d75c>  // b.any
  460858:	cmp	w21, #0x4
  46085c:	b.ls	460914 <feof@plt+0x5d834>  // b.plast
  460860:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  460864:	sbfiz	x9, x21, #4, #32
  460868:	add	x10, x10, #0xa30
  46086c:	ldr	x8, [x19, #72]
  460870:	ldrsw	x20, [x10, x9]
  460874:	cbz	x8, 4608b8 <feof@plt+0x5d7d8>
  460878:	ldr	x0, [x19, #24]
  46087c:	blr	x8
  460880:	b	4608cc <feof@plt+0x5d7ec>
  460884:	subs	w22, w22, #0x1
  460888:	b.mi	46082c <feof@plt+0x5d74c>  // b.first
  46088c:	ldr	x0, [x20, w22, uxtw #3]
  460890:	cmp	x0, #0x2
  460894:	b.cc	460884 <feof@plt+0x5d7a4>  // b.lo, b.ul, b.last
  460898:	ldr	x8, [x19, #16]
  46089c:	blr	x8
  4608a0:	b	460884 <feof@plt+0x5d7a4>
  4608a4:	lsl	x2, x21, #3
  4608a8:	mov	x0, x20
  4608ac:	mov	w1, wzr
  4608b0:	bl	402b40 <memset@plt>
  4608b4:	b	460900 <feof@plt+0x5d820>
  4608b8:	ldr	x8, [x19, #96]
  4608bc:	cbz	x8, 4608cc <feof@plt+0x5d7ec>
  4608c0:	ldr	x0, [x19, #80]
  4608c4:	ldr	x1, [x19, #24]
  4608c8:	blr	x8
  4608cc:	ldr	x8, [x19, #88]
  4608d0:	cbz	x8, 4608e8 <feof@plt+0x5d808>
  4608d4:	ldr	x0, [x19, #80]
  4608d8:	mov	w2, #0x8                   	// #8
  4608dc:	mov	x1, x20
  4608e0:	blr	x8
  4608e4:	b	4608f8 <feof@plt+0x5d818>
  4608e8:	ldr	x8, [x19, #64]
  4608ec:	mov	w1, #0x8                   	// #8
  4608f0:	mov	x0, x20
  4608f4:	blr	x8
  4608f8:	stp	x0, x20, [x19, #24]
  4608fc:	str	w21, [x19, #104]
  460900:	stp	xzr, xzr, [x19, #40]
  460904:	ldp	x20, x19, [sp, #32]
  460908:	ldp	x22, x21, [sp, #16]
  46090c:	ldp	x29, x30, [sp], #48
  460910:	ret
  460914:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  460918:	ldr	x0, [x8, #1464]
  46091c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  460920:	add	x1, x1, #0xc10
  460924:	mov	w2, #0x80                  	// #128
  460928:	bl	402a70 <fprintf@plt>
  46092c:	bl	402f30 <abort@plt>
  460930:	stp	x29, x30, [sp, #-80]!
  460934:	stp	x26, x25, [sp, #16]
  460938:	stp	x24, x23, [sp, #32]
  46093c:	stp	x22, x21, [sp, #48]
  460940:	stp	x20, x19, [sp, #64]
  460944:	ldr	w8, [x0, #104]
  460948:	adrp	x25, 474000 <_obstack_memory_used@@Base+0x12838>
  46094c:	add	x25, x25, #0xa30
  460950:	ldr	w9, [x0, #56]
  460954:	add	x11, x25, x8, lsl #4
  460958:	ldp	w10, w12, [x11]
  46095c:	mov	w26, w2
  460960:	add	w9, w9, #0x1
  460964:	str	w9, [x0, #56]
  460968:	ldr	w9, [x11, #12]
  46096c:	mul	x11, x12, x26
  460970:	lsr	x11, x11, #32
  460974:	sub	w12, w2, w11
  460978:	ldr	x13, [x0, #24]
  46097c:	add	w11, w11, w12, lsr #1
  460980:	lsr	w11, w11, w9
  460984:	msub	w24, w11, w10, w2
  460988:	ldr	x22, [x13, w24, uxtw #3]
  46098c:	mov	x29, sp
  460990:	cbz	x22, 460a3c <feof@plt+0x5d95c>
  460994:	ldr	x23, [x0, #32]
  460998:	mov	w21, w2
  46099c:	mov	x19, x0
  4609a0:	mov	x20, x1
  4609a4:	cmp	x22, #0x1
  4609a8:	b.eq	4609d0 <feof@plt+0x5d8f0>  // b.none
  4609ac:	ldr	x8, [x19, #8]
  4609b0:	mov	x0, x22
  4609b4:	mov	x1, x20
  4609b8:	blr	x8
  4609bc:	cbnz	w0, 460a3c <feof@plt+0x5d95c>
  4609c0:	ldr	w8, [x19, #104]
  4609c4:	add	x9, x25, x8, lsl #4
  4609c8:	ldr	w10, [x9]
  4609cc:	ldr	w9, [x9, #12]
  4609d0:	add	x8, x25, x8, lsl #4
  4609d4:	ldr	w8, [x8, #8]
  4609d8:	sub	w10, w10, #0x2
  4609dc:	mul	x8, x8, x26
  4609e0:	lsr	x8, x8, #32
  4609e4:	sub	w11, w21, w8
  4609e8:	add	w8, w8, w11, lsr #1
  4609ec:	lsr	w8, w8, w9
  4609f0:	msub	w8, w8, w10, w21
  4609f4:	add	w21, w8, #0x1
  4609f8:	ldr	w8, [x19, #60]
  4609fc:	add	w9, w21, w24
  460a00:	ldr	x10, [x19, #24]
  460a04:	cmp	x23, x9
  460a08:	csel	w11, wzr, w23, hi  // hi = pmore
  460a0c:	add	w8, w8, #0x1
  460a10:	str	w8, [x19, #60]
  460a14:	sub	w24, w9, w11
  460a18:	ldr	x22, [x10, w24, uxtw #3]
  460a1c:	cmp	x22, #0x1
  460a20:	b.eq	4609f8 <feof@plt+0x5d918>  // b.none
  460a24:	cbz	x22, 460a3c <feof@plt+0x5d95c>
  460a28:	ldr	x8, [x19, #8]
  460a2c:	mov	x0, x22
  460a30:	mov	x1, x20
  460a34:	blr	x8
  460a38:	cbz	w0, 4609f8 <feof@plt+0x5d918>
  460a3c:	mov	x0, x22
  460a40:	ldp	x20, x19, [sp, #64]
  460a44:	ldp	x22, x21, [sp, #48]
  460a48:	ldp	x24, x23, [sp, #32]
  460a4c:	ldp	x26, x25, [sp, #16]
  460a50:	ldp	x29, x30, [sp], #80
  460a54:	ret
  460a58:	stp	x29, x30, [sp, #-32]!
  460a5c:	stp	x20, x19, [sp, #16]
  460a60:	ldr	x8, [x0]
  460a64:	mov	x19, x0
  460a68:	mov	x0, x1
  460a6c:	mov	x29, sp
  460a70:	mov	x20, x1
  460a74:	blr	x8
  460a78:	mov	w2, w0
  460a7c:	mov	x0, x19
  460a80:	mov	x1, x20
  460a84:	ldp	x20, x19, [sp, #16]
  460a88:	ldp	x29, x30, [sp], #32
  460a8c:	b	460930 <feof@plt+0x5d850>
  460a90:	stp	x29, x30, [sp, #-96]!
  460a94:	stp	x26, x25, [sp, #32]
  460a98:	stp	x24, x23, [sp, #48]
  460a9c:	stp	x22, x21, [sp, #64]
  460aa0:	stp	x20, x19, [sp, #80]
  460aa4:	ldr	x24, [x0, #32]
  460aa8:	mov	w20, w3
  460aac:	mov	w23, w2
  460ab0:	mov	x19, x0
  460ab4:	cmp	w3, #0x1
  460ab8:	mov	x21, x1
  460abc:	str	x27, [sp, #16]
  460ac0:	mov	x29, sp
  460ac4:	b.ne	460ae8 <feof@plt+0x5da08>  // b.any
  460ac8:	ldr	x8, [x19, #40]
  460acc:	add	x9, x24, x24, lsl #1
  460ad0:	cmp	x9, x8, lsl #2
  460ad4:	b.hi	460ae8 <feof@plt+0x5da08>  // b.pmore
  460ad8:	mov	x0, x19
  460adc:	bl	460c50 <feof@plt+0x5db70>
  460ae0:	cbz	w0, 460b7c <feof@plt+0x5da9c>
  460ae4:	ldr	x24, [x19, #32]
  460ae8:	ldr	w8, [x19, #104]
  460aec:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  460af0:	add	x26, x26, #0xa30
  460af4:	ldr	w9, [x19, #56]
  460af8:	add	x12, x26, x8, lsl #4
  460afc:	ldp	w11, w13, [x12]
  460b00:	mov	w27, w23
  460b04:	add	w14, w9, #0x1
  460b08:	ldr	w9, [x12, #12]
  460b0c:	mul	x12, x13, x27
  460b10:	lsr	x12, x12, #32
  460b14:	ldr	x10, [x19, #24]
  460b18:	sub	w13, w23, w12
  460b1c:	add	w12, w12, w13, lsr #1
  460b20:	lsr	w12, w12, w9
  460b24:	msub	w25, w12, w11, w23
  460b28:	str	w14, [x19, #56]
  460b2c:	add	x22, x10, w25, uxtw #3
  460b30:	ldr	x0, [x22]
  460b34:	cbz	x0, 460b5c <feof@plt+0x5da7c>
  460b38:	cmp	x0, #0x1
  460b3c:	b.eq	460b98 <feof@plt+0x5dab8>  // b.none
  460b40:	ldr	x8, [x19, #8]
  460b44:	mov	x1, x21
  460b48:	blr	x8
  460b4c:	cbz	w0, 460b84 <feof@plt+0x5daa4>
  460b50:	ldr	x8, [x19, #24]
  460b54:	add	x22, x8, x25, lsl #3
  460b58:	b	460c30 <feof@plt+0x5db50>
  460b5c:	mov	x22, xzr
  460b60:	cbz	w20, 460b7c <feof@plt+0x5da9c>
  460b64:	cbz	x22, 460c20 <feof@plt+0x5db40>
  460b68:	ldr	x8, [x19, #48]
  460b6c:	sub	x8, x8, #0x1
  460b70:	str	x8, [x19, #48]
  460b74:	str	xzr, [x22]
  460b78:	b	460c30 <feof@plt+0x5db50>
  460b7c:	mov	x22, xzr
  460b80:	b	460c30 <feof@plt+0x5db50>
  460b84:	ldr	w8, [x19, #104]
  460b88:	mov	x22, xzr
  460b8c:	add	x9, x26, x8, lsl #4
  460b90:	ldr	w11, [x9]
  460b94:	ldr	w9, [x9, #12]
  460b98:	add	x8, x26, x8, lsl #4
  460b9c:	ldr	w8, [x8, #8]
  460ba0:	sub	w10, w11, #0x2
  460ba4:	mul	x8, x8, x27
  460ba8:	lsr	x8, x8, #32
  460bac:	sub	w11, w23, w8
  460bb0:	add	w8, w8, w11, lsr #1
  460bb4:	lsr	w8, w8, w9
  460bb8:	msub	w8, w8, w10, w23
  460bbc:	add	w23, w8, #0x1
  460bc0:	ldr	w8, [x19, #60]
  460bc4:	add	w9, w23, w25
  460bc8:	ldr	x10, [x19, #24]
  460bcc:	cmp	x24, x9
  460bd0:	csel	w11, wzr, w24, hi  // hi = pmore
  460bd4:	add	w8, w8, #0x1
  460bd8:	str	w8, [x19, #60]
  460bdc:	sub	w25, w9, w11
  460be0:	ldr	x0, [x10, w25, uxtw #3]
  460be4:	cbz	x0, 460b60 <feof@plt+0x5da80>
  460be8:	cmp	x0, #0x1
  460bec:	b.eq	460c04 <feof@plt+0x5db24>  // b.none
  460bf0:	ldr	x8, [x19, #8]
  460bf4:	mov	x1, x21
  460bf8:	blr	x8
  460bfc:	cbz	w0, 460bc0 <feof@plt+0x5dae0>
  460c00:	b	460c14 <feof@plt+0x5db34>
  460c04:	add	x8, x10, w25, uxtw #3
  460c08:	cmp	x22, #0x0
  460c0c:	csel	x22, x8, x22, eq  // eq = none
  460c10:	b	460bc0 <feof@plt+0x5dae0>
  460c14:	ldr	x8, [x19, #24]
  460c18:	add	x22, x8, w25, uxtw #3
  460c1c:	b	460c30 <feof@plt+0x5db50>
  460c20:	ldr	x8, [x19, #40]
  460c24:	add	x22, x10, w25, uxtw #3
  460c28:	add	x8, x8, #0x1
  460c2c:	str	x8, [x19, #40]
  460c30:	mov	x0, x22
  460c34:	ldp	x20, x19, [sp, #80]
  460c38:	ldp	x22, x21, [sp, #64]
  460c3c:	ldp	x24, x23, [sp, #48]
  460c40:	ldp	x26, x25, [sp, #32]
  460c44:	ldr	x27, [sp, #16]
  460c48:	ldp	x29, x30, [sp], #96
  460c4c:	ret
  460c50:	stp	x29, x30, [sp, #-64]!
  460c54:	stp	x24, x23, [sp, #16]
  460c58:	stp	x22, x21, [sp, #32]
  460c5c:	stp	x20, x19, [sp, #48]
  460c60:	ldp	x8, x9, [x0, #40]
  460c64:	ldp	x19, x23, [x0, #24]
  460c68:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  460c6c:	mov	x20, x0
  460c70:	sub	x8, x8, x9
  460c74:	lsl	x2, x8, #1
  460c78:	cmp	x2, x23
  460c7c:	add	x22, x22, #0xa30
  460c80:	mov	x29, sp
  460c84:	b.hi	460ca4 <feof@plt+0x5dbc4>  // b.pmore
  460c88:	ldr	w24, [x20, #104]
  460c8c:	cmp	x23, #0x21
  460c90:	b.cc	460d04 <feof@plt+0x5dc24>  // b.lo, b.ul, b.last
  460c94:	lsl	x8, x8, #3
  460c98:	cmp	x8, x23
  460c9c:	mov	x21, x23
  460ca0:	b.cs	460ce4 <feof@plt+0x5dc04>  // b.hs, b.nlast
  460ca4:	mov	w8, wzr
  460ca8:	mov	w24, #0x1e                  	// #30
  460cac:	sub	w9, w24, w8
  460cb0:	add	w9, w8, w9, lsr #1
  460cb4:	lsl	x10, x9, #4
  460cb8:	ldr	w10, [x22, x10]
  460cbc:	cmp	x2, x10
  460cc0:	csel	w24, w24, w9, hi  // hi = pmore
  460cc4:	csinc	w8, w8, w9, ls  // ls = plast
  460cc8:	cmp	w24, w8
  460ccc:	b.ne	460cac <feof@plt+0x5dbcc>  // b.any
  460cd0:	mov	w8, w24
  460cd4:	lsl	x8, x8, #4
  460cd8:	ldr	w21, [x22, x8]
  460cdc:	cmp	x2, x21
  460ce0:	b.hi	460e44 <feof@plt+0x5dd64>  // b.pmore
  460ce4:	ldr	x8, [x20, #88]
  460ce8:	cbz	x8, 460d10 <feof@plt+0x5dc30>
  460cec:	ldr	x0, [x20, #80]
  460cf0:	mov	w2, #0x8                   	// #8
  460cf4:	mov	x1, x21
  460cf8:	blr	x8
  460cfc:	cbnz	x0, 460d24 <feof@plt+0x5dc44>
  460d00:	b	460e30 <feof@plt+0x5dd50>
  460d04:	mov	x21, x23
  460d08:	ldr	x8, [x20, #88]
  460d0c:	cbnz	x8, 460cec <feof@plt+0x5dc0c>
  460d10:	ldr	x8, [x20, #64]
  460d14:	mov	w1, #0x8                   	// #8
  460d18:	mov	x0, x21
  460d1c:	blr	x8
  460d20:	cbz	x0, 460e30 <feof@plt+0x5dd50>
  460d24:	ldp	x9, x8, [x20, #40]
  460d28:	add	x23, x19, x23, lsl #3
  460d2c:	str	w24, [x20, #104]
  460d30:	mov	x24, x19
  460d34:	sub	x8, x9, x8
  460d38:	stp	x0, x21, [x20, #24]
  460d3c:	stp	x8, xzr, [x20, #40]
  460d40:	b	460d54 <feof@plt+0x5dc74>
  460d44:	str	x21, [x14]
  460d48:	add	x24, x24, #0x8
  460d4c:	cmp	x24, x23
  460d50:	b.cs	460e04 <feof@plt+0x5dd24>  // b.hs, b.nlast
  460d54:	ldr	x21, [x24]
  460d58:	cmp	x21, #0x2
  460d5c:	b.cc	460d48 <feof@plt+0x5dc68>  // b.lo, b.ul, b.last
  460d60:	ldr	x8, [x20]
  460d64:	mov	x0, x21
  460d68:	blr	x8
  460d6c:	ldr	w10, [x20, #104]
  460d70:	mov	w11, w0
  460d74:	add	x8, x22, x10, lsl #4
  460d78:	ldp	w13, w9, [x8]
  460d7c:	ldr	w12, [x8, #12]
  460d80:	mul	x8, x9, x11
  460d84:	lsr	x9, x8, #32
  460d88:	sub	w14, w0, w9
  460d8c:	ldr	x8, [x20, #24]
  460d90:	add	w9, w9, w14, lsr #1
  460d94:	lsr	w9, w9, w12
  460d98:	msub	w9, w9, w13, w0
  460d9c:	add	x14, x8, w9, uxtw #3
  460da0:	ldr	x15, [x14]
  460da4:	cbz	x15, 460d44 <feof@plt+0x5dc64>
  460da8:	cmp	x15, #0x1
  460dac:	b.eq	460e00 <feof@plt+0x5dd20>  // b.none
  460db0:	add	x10, x22, x10, lsl #4
  460db4:	ldr	w14, [x10, #8]
  460db8:	ldr	x10, [x20, #32]
  460dbc:	sub	w13, w13, #0x2
  460dc0:	mul	x14, x14, x11
  460dc4:	lsr	x14, x14, #32
  460dc8:	sub	w15, w11, w14
  460dcc:	add	w14, w14, w15, lsr #1
  460dd0:	lsr	w12, w14, w12
  460dd4:	msub	w11, w12, w13, w11
  460dd8:	add	w11, w11, #0x1
  460ddc:	add	w9, w11, w9
  460de0:	cmp	x10, x9
  460de4:	csel	w12, wzr, w10, hi  // hi = pmore
  460de8:	sub	w9, w9, w12
  460dec:	add	x14, x8, w9, uxtw #3
  460df0:	ldr	x12, [x14]
  460df4:	cbz	x12, 460d44 <feof@plt+0x5dc64>
  460df8:	cmp	x12, #0x1
  460dfc:	b.ne	460ddc <feof@plt+0x5dcfc>  // b.any
  460e00:	bl	402f30 <abort@plt>
  460e04:	ldr	x8, [x20, #72]
  460e08:	cbz	x8, 460e18 <feof@plt+0x5dd38>
  460e0c:	mov	x0, x19
  460e10:	blr	x8
  460e14:	b	460e2c <feof@plt+0x5dd4c>
  460e18:	ldr	x8, [x20, #96]
  460e1c:	cbz	x8, 460e2c <feof@plt+0x5dd4c>
  460e20:	ldr	x0, [x20, #80]
  460e24:	mov	x1, x19
  460e28:	blr	x8
  460e2c:	mov	w0, #0x1                   	// #1
  460e30:	ldp	x20, x19, [sp, #48]
  460e34:	ldp	x22, x21, [sp, #32]
  460e38:	ldp	x24, x23, [sp, #16]
  460e3c:	ldp	x29, x30, [sp], #64
  460e40:	ret
  460e44:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  460e48:	ldr	x0, [x8, #1464]
  460e4c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  460e50:	add	x1, x1, #0xc10
  460e54:	bl	402a70 <fprintf@plt>
  460e58:	bl	402f30 <abort@plt>
  460e5c:	stp	x29, x30, [sp, #-48]!
  460e60:	stp	x20, x19, [sp, #32]
  460e64:	ldr	x8, [x0]
  460e68:	mov	x20, x0
  460e6c:	mov	x0, x1
  460e70:	str	x21, [sp, #16]
  460e74:	mov	x29, sp
  460e78:	mov	w19, w2
  460e7c:	mov	x21, x1
  460e80:	blr	x8
  460e84:	mov	w2, w0
  460e88:	mov	x0, x20
  460e8c:	mov	x1, x21
  460e90:	mov	w3, w19
  460e94:	ldp	x20, x19, [sp, #32]
  460e98:	ldr	x21, [sp, #16]
  460e9c:	ldp	x29, x30, [sp], #48
  460ea0:	b	460a90 <feof@plt+0x5d9b0>
  460ea4:	stp	x29, x30, [sp, #-32]!
  460ea8:	stp	x20, x19, [sp, #16]
  460eac:	ldr	x8, [x0]
  460eb0:	mov	x19, x0
  460eb4:	mov	x0, x1
  460eb8:	mov	x29, sp
  460ebc:	mov	x20, x1
  460ec0:	blr	x8
  460ec4:	mov	w2, w0
  460ec8:	mov	x0, x19
  460ecc:	mov	x1, x20
  460ed0:	mov	w3, wzr
  460ed4:	bl	460a90 <feof@plt+0x5d9b0>
  460ed8:	cbz	x0, 460f04 <feof@plt+0x5de24>
  460edc:	ldr	x8, [x19, #16]
  460ee0:	mov	x20, x0
  460ee4:	cbz	x8, 460ef0 <feof@plt+0x5de10>
  460ee8:	ldr	x0, [x20]
  460eec:	blr	x8
  460ef0:	mov	w8, #0x1                   	// #1
  460ef4:	str	x8, [x20]
  460ef8:	ldr	x8, [x19, #48]
  460efc:	add	x8, x8, #0x1
  460f00:	str	x8, [x19, #48]
  460f04:	ldp	x20, x19, [sp, #16]
  460f08:	ldp	x29, x30, [sp], #32
  460f0c:	ret
  460f10:	stp	x29, x30, [sp, #-32]!
  460f14:	mov	w3, wzr
  460f18:	stp	x20, x19, [sp, #16]
  460f1c:	mov	x29, sp
  460f20:	mov	x19, x0
  460f24:	bl	460a90 <feof@plt+0x5d9b0>
  460f28:	cbz	x0, 460f54 <feof@plt+0x5de74>
  460f2c:	ldr	x8, [x19, #16]
  460f30:	mov	x20, x0
  460f34:	cbz	x8, 460f40 <feof@plt+0x5de60>
  460f38:	ldr	x0, [x20]
  460f3c:	blr	x8
  460f40:	mov	w8, #0x1                   	// #1
  460f44:	str	x8, [x20]
  460f48:	ldr	x8, [x19, #48]
  460f4c:	add	x8, x8, #0x1
  460f50:	str	x8, [x19, #48]
  460f54:	ldp	x20, x19, [sp, #16]
  460f58:	ldp	x29, x30, [sp], #32
  460f5c:	ret
  460f60:	stp	x29, x30, [sp, #-32]!
  460f64:	stp	x20, x19, [sp, #16]
  460f68:	ldr	x8, [x0, #24]
  460f6c:	mov	x29, sp
  460f70:	cmp	x8, x1
  460f74:	b.hi	460fc8 <feof@plt+0x5dee8>  // b.pmore
  460f78:	ldr	x9, [x0, #32]
  460f7c:	mov	x19, x0
  460f80:	mov	x20, x1
  460f84:	add	x8, x8, x9, lsl #3
  460f88:	cmp	x8, x1
  460f8c:	b.ls	460fc8 <feof@plt+0x5dee8>  // b.plast
  460f90:	ldr	x0, [x20]
  460f94:	cmp	x0, #0x1
  460f98:	b.ls	460fc8 <feof@plt+0x5dee8>  // b.plast
  460f9c:	ldr	x8, [x19, #16]
  460fa0:	cbz	x8, 460fa8 <feof@plt+0x5dec8>
  460fa4:	blr	x8
  460fa8:	mov	w8, #0x1                   	// #1
  460fac:	str	x8, [x20]
  460fb0:	ldr	x8, [x19, #48]
  460fb4:	add	x8, x8, #0x1
  460fb8:	str	x8, [x19, #48]
  460fbc:	ldp	x20, x19, [sp, #16]
  460fc0:	ldp	x29, x30, [sp], #32
  460fc4:	ret
  460fc8:	bl	402f30 <abort@plt>
  460fcc:	stp	x29, x30, [sp, #-48]!
  460fd0:	stp	x22, x21, [sp, #16]
  460fd4:	stp	x20, x19, [sp, #32]
  460fd8:	ldp	x21, x8, [x0, #24]
  460fdc:	mov	x19, x2
  460fe0:	mov	x20, x1
  460fe4:	mov	x29, sp
  460fe8:	add	x22, x21, x8, lsl #3
  460fec:	b	460ffc <feof@plt+0x5df1c>
  460ff0:	add	x21, x21, #0x8
  460ff4:	cmp	x21, x22
  460ff8:	b.cs	461018 <feof@plt+0x5df38>  // b.hs, b.nlast
  460ffc:	ldr	x8, [x21]
  461000:	cmp	x8, #0x2
  461004:	b.cc	460ff0 <feof@plt+0x5df10>  // b.lo, b.ul, b.last
  461008:	mov	x0, x21
  46100c:	mov	x1, x19
  461010:	blr	x20
  461014:	cbnz	w0, 460ff0 <feof@plt+0x5df10>
  461018:	ldp	x20, x19, [sp, #32]
  46101c:	ldp	x22, x21, [sp, #16]
  461020:	ldp	x29, x30, [sp], #48
  461024:	ret
  461028:	stp	x29, x30, [sp, #-48]!
  46102c:	stp	x22, x21, [sp, #16]
  461030:	stp	x20, x19, [sp, #32]
  461034:	ldr	x8, [x0, #32]
  461038:	mov	x19, x2
  46103c:	mov	x21, x0
  461040:	mov	x20, x1
  461044:	cmp	x8, #0x21
  461048:	mov	x29, sp
  46104c:	b.cc	461070 <feof@plt+0x5df90>  // b.lo, b.ul, b.last
  461050:	ldp	x9, x10, [x21, #40]
  461054:	sub	x9, x9, x10
  461058:	lsl	x9, x9, #3
  46105c:	cmp	x9, x8
  461060:	b.cs	461070 <feof@plt+0x5df90>  // b.hs, b.nlast
  461064:	mov	x0, x21
  461068:	bl	460c50 <feof@plt+0x5db70>
  46106c:	ldr	x8, [x21, #32]
  461070:	ldr	x21, [x21, #24]
  461074:	add	x22, x21, x8, lsl #3
  461078:	b	461088 <feof@plt+0x5dfa8>
  46107c:	add	x21, x21, #0x8
  461080:	cmp	x21, x22
  461084:	b.cs	4610a4 <feof@plt+0x5dfc4>  // b.hs, b.nlast
  461088:	ldr	x8, [x21]
  46108c:	cmp	x8, #0x2
  461090:	b.cc	46107c <feof@plt+0x5df9c>  // b.lo, b.ul, b.last
  461094:	mov	x0, x21
  461098:	mov	x1, x19
  46109c:	blr	x20
  4610a0:	cbnz	w0, 46107c <feof@plt+0x5df9c>
  4610a4:	ldp	x20, x19, [sp, #32]
  4610a8:	ldp	x22, x21, [sp, #16]
  4610ac:	ldp	x29, x30, [sp], #48
  4610b0:	ret
  4610b4:	ldr	w8, [x0, #56]
  4610b8:	cbz	w8, 4610d0 <feof@plt+0x5dff0>
  4610bc:	ldr	s0, [x0, #60]
  4610c0:	ucvtf	d1, w8
  4610c4:	ucvtf	d0, d0
  4610c8:	fdiv	d0, d0, d1
  4610cc:	ret
  4610d0:	fmov	d0, xzr
  4610d4:	ret
  4610d8:	ldrb	w9, [x0]
  4610dc:	cbz	w9, 461108 <feof@plt+0x5e028>
  4610e0:	mov	x8, x0
  4610e4:	mov	w0, wzr
  4610e8:	add	x8, x8, #0x1
  4610ec:	mov	w10, #0x43                  	// #67
  4610f0:	mul	w11, w0, w10
  4610f4:	add	w11, w11, w9, uxtb
  4610f8:	ldrb	w9, [x8], #1
  4610fc:	sub	w0, w11, #0x71
  461100:	cbnz	w9, 4610f0 <feof@plt+0x5e010>
  461104:	ret
  461108:	mov	w0, wzr
  46110c:	ret
  461110:	tst	x0, #0x3
  461114:	b.eq	4611c8 <feof@plt+0x5e0e8>  // b.none
  461118:	mov	w8, #0x79b9                	// #31161
  46111c:	cmp	w1, #0xc
  461120:	movk	w8, #0x9e37, lsl #16
  461124:	b.cc	461278 <feof@plt+0x5e198>  // b.lo, b.ul, b.last
  461128:	mov	w9, #0x79b9                	// #31161
  46112c:	mov	w10, w1
  461130:	movk	w9, #0x9e37, lsl #16
  461134:	ldp	w11, w12, [x0]
  461138:	sub	w10, w10, #0xc
  46113c:	cmp	w10, #0xb
  461140:	add	w9, w11, w9
  461144:	ldr	w11, [x0, #8]
  461148:	add	w8, w12, w8
  46114c:	sub	w9, w9, w8
  461150:	add	x0, x0, #0xc
  461154:	add	w11, w11, w2
  461158:	sub	w9, w9, w11
  46115c:	sub	w8, w8, w11
  461160:	eor	w9, w9, w11, lsr #13
  461164:	sub	w8, w8, w9
  461168:	sub	w11, w11, w9
  46116c:	eor	w8, w8, w9, lsl #8
  461170:	sub	w11, w11, w8
  461174:	sub	w9, w9, w8
  461178:	eor	w11, w11, w8, lsr #13
  46117c:	sub	w9, w9, w11
  461180:	sub	w8, w8, w11
  461184:	eor	w9, w9, w11, lsr #12
  461188:	sub	w8, w8, w9
  46118c:	sub	w11, w11, w9
  461190:	eor	w8, w8, w9, lsl #16
  461194:	sub	w11, w11, w8
  461198:	sub	w9, w9, w8
  46119c:	eor	w11, w11, w8, lsr #5
  4611a0:	sub	w9, w9, w11
  4611a4:	sub	w8, w8, w11
  4611a8:	eor	w9, w9, w11, lsr #3
  4611ac:	sub	w8, w8, w9
  4611b0:	sub	w11, w11, w9
  4611b4:	eor	w8, w8, w9, lsl #10
  4611b8:	sub	w11, w11, w8
  4611bc:	eor	w2, w11, w8, lsr #15
  4611c0:	b.hi	461134 <feof@plt+0x5e054>  // b.pmore
  4611c4:	b	461284 <feof@plt+0x5e1a4>
  4611c8:	mov	w8, #0x79b9                	// #31161
  4611cc:	cmp	w1, #0xc
  4611d0:	movk	w8, #0x9e37, lsl #16
  4611d4:	b.cc	461278 <feof@plt+0x5e198>  // b.lo, b.ul, b.last
  4611d8:	mov	w9, #0x79b9                	// #31161
  4611dc:	mov	w10, w1
  4611e0:	movk	w9, #0x9e37, lsl #16
  4611e4:	ldp	w11, w12, [x0]
  4611e8:	sub	w10, w10, #0xc
  4611ec:	cmp	w10, #0xb
  4611f0:	add	w9, w11, w9
  4611f4:	ldr	w11, [x0, #8]
  4611f8:	add	w8, w12, w8
  4611fc:	sub	w9, w9, w8
  461200:	add	x0, x0, #0xc
  461204:	add	w11, w11, w2
  461208:	sub	w9, w9, w11
  46120c:	sub	w8, w8, w11
  461210:	eor	w9, w9, w11, lsr #13
  461214:	sub	w8, w8, w9
  461218:	sub	w11, w11, w9
  46121c:	eor	w8, w8, w9, lsl #8
  461220:	sub	w11, w11, w8
  461224:	sub	w9, w9, w8
  461228:	eor	w11, w11, w8, lsr #13
  46122c:	sub	w9, w9, w11
  461230:	sub	w8, w8, w11
  461234:	eor	w9, w9, w11, lsr #12
  461238:	sub	w8, w8, w9
  46123c:	sub	w11, w11, w9
  461240:	eor	w8, w8, w9, lsl #16
  461244:	sub	w11, w11, w8
  461248:	sub	w9, w9, w8
  46124c:	eor	w11, w11, w8, lsr #5
  461250:	sub	w9, w9, w11
  461254:	sub	w8, w8, w11
  461258:	eor	w9, w9, w11, lsr #3
  46125c:	sub	w8, w8, w9
  461260:	sub	w11, w11, w9
  461264:	eor	w8, w8, w9, lsl #10
  461268:	sub	w11, w11, w8
  46126c:	eor	w2, w11, w8, lsr #15
  461270:	b.hi	4611e4 <feof@plt+0x5e104>  // b.pmore
  461274:	b	461284 <feof@plt+0x5e1a4>
  461278:	mov	w9, #0x79b9                	// #31161
  46127c:	movk	w9, #0x9e37, lsl #16
  461280:	mov	w10, w1
  461284:	sub	w11, w10, #0x1
  461288:	cmp	w11, #0xa
  46128c:	add	w10, w2, w1
  461290:	b.hi	461304 <feof@plt+0x5e224>  // b.pmore
  461294:	adrp	x12, 474000 <_obstack_memory_used@@Base+0x12838>
  461298:	add	x12, x12, #0xa24
  46129c:	adr	x13, 4612ac <feof@plt+0x5e1cc>
  4612a0:	ldrb	w14, [x12, x11]
  4612a4:	add	x13, x13, x14, lsl #2
  4612a8:	br	x13
  4612ac:	ldrb	w11, [x0, #10]
  4612b0:	add	w10, w10, w11, lsl #24
  4612b4:	ldrb	w11, [x0, #9]
  4612b8:	add	w10, w10, w11, lsl #16
  4612bc:	ldrb	w11, [x0, #8]
  4612c0:	add	w10, w10, w11, lsl #8
  4612c4:	ldrb	w11, [x0, #7]
  4612c8:	add	w8, w8, w11, lsl #24
  4612cc:	ldrb	w11, [x0, #6]
  4612d0:	add	w8, w8, w11, lsl #16
  4612d4:	ldrb	w11, [x0, #5]
  4612d8:	add	w8, w8, w11, lsl #8
  4612dc:	ldrb	w11, [x0, #4]
  4612e0:	add	w8, w8, w11
  4612e4:	ldrb	w11, [x0, #3]
  4612e8:	add	w9, w9, w11, lsl #24
  4612ec:	ldrb	w11, [x0, #2]
  4612f0:	add	w9, w9, w11, lsl #16
  4612f4:	ldrb	w11, [x0, #1]
  4612f8:	add	w9, w9, w11, lsl #8
  4612fc:	ldrb	w11, [x0]
  461300:	add	w9, w9, w11
  461304:	sub	w9, w9, w8
  461308:	sub	w9, w9, w10
  46130c:	sub	w8, w8, w10
  461310:	eor	w9, w9, w10, lsr #13
  461314:	sub	w8, w8, w9
  461318:	sub	w10, w10, w9
  46131c:	eor	w8, w8, w9, lsl #8
  461320:	sub	w10, w10, w8
  461324:	sub	w9, w9, w8
  461328:	eor	w10, w10, w8, lsr #13
  46132c:	sub	w9, w9, w10
  461330:	sub	w8, w8, w10
  461334:	eor	w9, w9, w10, lsr #12
  461338:	sub	w8, w8, w9
  46133c:	sub	w10, w10, w9
  461340:	eor	w8, w8, w9, lsl #16
  461344:	sub	w10, w10, w8
  461348:	sub	w9, w9, w8
  46134c:	eor	w10, w10, w8, lsr #5
  461350:	sub	w9, w9, w10
  461354:	sub	w8, w8, w10
  461358:	eor	w9, w9, w10, lsr #3
  46135c:	sub	w8, w8, w9
  461360:	eor	w8, w8, w9, lsl #10
  461364:	sub	w9, w10, w9
  461368:	sub	w9, w9, w8
  46136c:	eor	w0, w9, w8, lsr #15
  461370:	ret
  461374:	ret
  461378:	add	x8, x0, #0x1
  46137c:	b	461388 <feof@plt+0x5e2a8>
  461380:	mov	x0, x8
  461384:	add	x8, x8, #0x1
  461388:	ldurb	w9, [x8, #-1]
  46138c:	cmp	w9, #0x2f
  461390:	b.eq	461380 <feof@plt+0x5e2a0>  // b.none
  461394:	cbnz	w9, 461384 <feof@plt+0x5e2a4>
  461398:	ret
  46139c:	ldrb	w8, [x0]
  4613a0:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  4613a4:	add	x9, x9, #0xe98
  4613a8:	ldrh	w8, [x9, x8, lsl #1]
  4613ac:	mov	w9, #0x88                  	// #136
  4613b0:	tst	w8, w9
  4613b4:	b.eq	4613c8 <feof@plt+0x5e2e8>  // b.none
  4613b8:	ldrb	w8, [x0, #1]
  4613bc:	add	x9, x0, #0x2
  4613c0:	cmp	w8, #0x3a
  4613c4:	csel	x0, x9, x0, eq  // eq = none
  4613c8:	add	x8, x0, #0x1
  4613cc:	b	4613d8 <feof@plt+0x5e2f8>
  4613d0:	mov	x0, x8
  4613d4:	add	x8, x8, #0x1
  4613d8:	ldurb	w9, [x8, #-1]
  4613dc:	cmp	w9, #0x2f
  4613e0:	b.eq	4613d0 <feof@plt+0x5e2f0>  // b.none
  4613e4:	cmp	w9, #0x5c
  4613e8:	b.eq	4613d0 <feof@plt+0x5e2f0>  // b.none
  4613ec:	cbnz	w9, 4613d4 <feof@plt+0x5e2f4>
  4613f0:	ret
  4613f4:	add	x8, x0, #0x1
  4613f8:	b	461404 <feof@plt+0x5e324>
  4613fc:	mov	x0, x8
  461400:	add	x8, x8, #0x1
  461404:	ldurb	w9, [x8, #-1]
  461408:	cmp	w9, #0x2f
  46140c:	b.eq	4613fc <feof@plt+0x5e31c>  // b.none
  461410:	cbnz	w9, 461400 <feof@plt+0x5e320>
  461414:	ret
  461418:	stp	x29, x30, [sp, #-32]!
  46141c:	stp	x28, x19, [sp, #16]
  461420:	mov	x29, sp
  461424:	sub	sp, sp, #0x1, lsl #12
  461428:	mov	x1, sp
  46142c:	mov	x19, x0
  461430:	bl	403040 <realpath@plt>
  461434:	cmp	x0, #0x0
  461438:	csel	x0, x19, x0, eq  // eq = none
  46143c:	bl	402b70 <strdup@plt>
  461440:	add	sp, sp, #0x1, lsl #12
  461444:	ldp	x28, x19, [sp, #16]
  461448:	ldp	x29, x30, [sp], #32
  46144c:	ret

0000000000461450 <_obstack_begin@@Base>:
  461450:	stp	x29, x30, [sp, #-48]!
  461454:	stp	x22, x21, [sp, #16]
  461458:	stp	x20, x19, [sp, #32]
  46145c:	ldrb	w8, [x0, #80]
  461460:	cmp	x2, #0x0
  461464:	mov	w9, #0x10                  	// #16
  461468:	csel	x21, x9, x2, eq  // eq = none
  46146c:	mov	w9, #0xfe0                 	// #4064
  461470:	cmp	x1, #0x0
  461474:	mov	x19, x0
  461478:	str	x4, [x0, #64]
  46147c:	csel	x0, x9, x1, eq  // eq = none
  461480:	and	w8, w8, #0xfe
  461484:	sub	x22, x21, #0x1
  461488:	mov	x29, sp
  46148c:	strb	w8, [x19, #80]
  461490:	str	x0, [x19]
  461494:	stp	x22, x3, [x19, #48]
  461498:	blr	x3
  46149c:	mov	x20, x0
  4614a0:	cbnz	x0, 4614b0 <_obstack_begin@@Base+0x60>
  4614a4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4614a8:	ldr	x8, [x8, #1408]
  4614ac:	blr	x8
  4614b0:	add	x8, x20, x22
  4614b4:	neg	x9, x21
  4614b8:	add	x8, x8, #0x10
  4614bc:	and	x8, x8, x9
  4614c0:	ldr	x9, [x19]
  4614c4:	stp	x20, x8, [x19, #8]
  4614c8:	str	x8, [x19, #24]
  4614cc:	mov	w0, #0x1                   	// #1
  4614d0:	add	x8, x20, x9
  4614d4:	str	x8, [x20]
  4614d8:	str	x8, [x19, #32]
  4614dc:	str	xzr, [x20, #8]
  4614e0:	ldrb	w8, [x19, #80]
  4614e4:	and	w8, w8, #0xfffffff9
  4614e8:	strb	w8, [x19, #80]
  4614ec:	ldp	x20, x19, [sp, #32]
  4614f0:	ldp	x22, x21, [sp, #16]
  4614f4:	ldp	x29, x30, [sp], #48
  4614f8:	ret

00000000004614fc <_obstack_begin_1@@Base>:
  4614fc:	stp	x29, x30, [sp, #-48]!
  461500:	stp	x22, x21, [sp, #16]
  461504:	stp	x20, x19, [sp, #32]
  461508:	ldrb	w8, [x0, #80]
  46150c:	cmp	x2, #0x0
  461510:	mov	w9, #0x10                  	// #16
  461514:	csel	x21, x9, x2, eq  // eq = none
  461518:	mov	w9, #0xfe0                 	// #4064
  46151c:	cmp	x1, #0x0
  461520:	csel	x1, x9, x1, eq  // eq = none
  461524:	orr	w8, w8, #0x1
  461528:	sub	x22, x21, #0x1
  46152c:	mov	x19, x0
  461530:	stp	x4, x5, [x0, #64]
  461534:	strb	w8, [x0, #80]
  461538:	str	x1, [x0]
  46153c:	stp	x22, x3, [x0, #48]
  461540:	mov	x0, x5
  461544:	mov	x29, sp
  461548:	blr	x3
  46154c:	mov	x20, x0
  461550:	cbnz	x0, 461560 <_obstack_begin_1@@Base+0x64>
  461554:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  461558:	ldr	x8, [x8, #1408]
  46155c:	blr	x8
  461560:	add	x8, x20, x22
  461564:	neg	x9, x21
  461568:	add	x8, x8, #0x10
  46156c:	and	x8, x8, x9
  461570:	ldr	x9, [x19]
  461574:	stp	x20, x8, [x19, #8]
  461578:	str	x8, [x19, #24]
  46157c:	mov	w0, #0x1                   	// #1
  461580:	add	x8, x20, x9
  461584:	str	x8, [x20]
  461588:	str	x8, [x19, #32]
  46158c:	str	xzr, [x20, #8]
  461590:	ldrb	w8, [x19, #80]
  461594:	and	w8, w8, #0xfffffff9
  461598:	strb	w8, [x19, #80]
  46159c:	ldp	x20, x19, [sp, #32]
  4615a0:	ldp	x22, x21, [sp, #16]
  4615a4:	ldp	x29, x30, [sp], #48
  4615a8:	ret

00000000004615ac <_obstack_newchunk@@Base>:
  4615ac:	stp	x29, x30, [sp, #-80]!
  4615b0:	str	x25, [sp, #16]
  4615b4:	stp	x24, x23, [sp, #32]
  4615b8:	stp	x22, x21, [sp, #48]
  4615bc:	stp	x20, x19, [sp, #64]
  4615c0:	ldp	x9, x8, [x0, #16]
  4615c4:	ldr	x10, [x0, #48]
  4615c8:	ldp	x11, x21, [x0]
  4615cc:	mov	x19, x0
  4615d0:	sub	x20, x8, x9
  4615d4:	adds	x8, x20, x1
  4615d8:	lsr	x9, x20, #3
  4615dc:	cset	w12, cs  // cs = hs, nlast
  4615e0:	adds	x10, x8, x10
  4615e4:	add	x9, x9, #0x64
  4615e8:	cset	w8, cs  // cs = hs, nlast
  4615ec:	adds	x9, x9, x10
  4615f0:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4615f4:	cmp	x9, x11
  4615f8:	csel	x22, x11, x9, cc  // cc = lo, ul, last
  4615fc:	mov	x29, sp
  461600:	tbnz	w12, #0, 461640 <_obstack_newchunk@@Base+0x94>
  461604:	tbnz	w8, #0, 461640 <_obstack_newchunk@@Base+0x94>
  461608:	ldrb	w8, [x19, #80]
  46160c:	tbnz	w8, #0, 461628 <_obstack_newchunk@@Base+0x7c>
  461610:	ldr	x8, [x19, #56]
  461614:	mov	x0, x22
  461618:	blr	x8
  46161c:	mov	x23, x0
  461620:	cbnz	x0, 461650 <_obstack_newchunk@@Base+0xa4>
  461624:	b	461640 <_obstack_newchunk@@Base+0x94>
  461628:	ldr	x8, [x19, #56]
  46162c:	ldr	x0, [x19, #72]
  461630:	mov	x1, x22
  461634:	blr	x8
  461638:	mov	x23, x0
  46163c:	cbnz	x0, 461650 <_obstack_newchunk@@Base+0xa4>
  461640:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  461644:	ldr	x8, [x8, #1408]
  461648:	blr	x8
  46164c:	mov	x23, xzr
  461650:	add	x8, x23, x22
  461654:	str	x23, [x19, #8]
  461658:	str	x21, [x23, #8]
  46165c:	str	x8, [x19, #32]
  461660:	str	x8, [x23]
  461664:	ldr	x25, [x19, #48]
  461668:	ldr	x24, [x19, #16]
  46166c:	mov	x2, x20
  461670:	add	x8, x23, x25
  461674:	add	x8, x8, #0x10
  461678:	bic	x22, x8, x25
  46167c:	mov	x0, x22
  461680:	mov	x1, x24
  461684:	bl	4029c0 <memcpy@plt>
  461688:	ldrb	w8, [x19, #80]
  46168c:	tbnz	w8, #1, 4616d4 <_obstack_newchunk@@Base+0x128>
  461690:	add	x9, x21, x25
  461694:	mvn	x8, x25
  461698:	add	x9, x9, #0x10
  46169c:	and	x8, x9, x8
  4616a0:	cmp	x24, x8
  4616a4:	b.ne	4616d4 <_obstack_newchunk@@Base+0x128>  // b.any
  4616a8:	ldr	x8, [x21, #8]
  4616ac:	str	x8, [x23, #8]
  4616b0:	ldrb	w8, [x19, #80]
  4616b4:	tbnz	w8, #0, 4616c8 <_obstack_newchunk@@Base+0x11c>
  4616b8:	ldr	x8, [x19, #64]
  4616bc:	mov	x0, x21
  4616c0:	blr	x8
  4616c4:	b	4616d4 <_obstack_newchunk@@Base+0x128>
  4616c8:	ldp	x8, x0, [x19, #64]
  4616cc:	mov	x1, x21
  4616d0:	blr	x8
  4616d4:	ldrb	w8, [x19, #80]
  4616d8:	add	x9, x22, x20
  4616dc:	stp	x22, x9, [x19, #16]
  4616e0:	ldr	x25, [sp, #16]
  4616e4:	and	w8, w8, #0xfffffffd
  4616e8:	strb	w8, [x19, #80]
  4616ec:	ldp	x20, x19, [sp, #64]
  4616f0:	ldp	x22, x21, [sp, #48]
  4616f4:	ldp	x24, x23, [sp, #32]
  4616f8:	ldp	x29, x30, [sp], #80
  4616fc:	ret

0000000000461700 <_obstack_allocated_p@@Base>:
  461700:	ldr	x8, [x0, #8]
  461704:	cbnz	x8, 461718 <_obstack_allocated_p@@Base+0x18>
  461708:	mov	w0, wzr
  46170c:	ret
  461710:	ldr	x8, [x8, #8]
  461714:	cbz	x8, 461708 <_obstack_allocated_p@@Base+0x8>
  461718:	cmp	x8, x1
  46171c:	b.cs	461710 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  461720:	ldr	x9, [x8]
  461724:	cmp	x9, x1
  461728:	b.cc	461710 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  46172c:	mov	w0, #0x1                   	// #1
  461730:	ret

0000000000461734 <_obstack_free@@Base>:
  461734:	stp	x29, x30, [sp, #-48]!
  461738:	stp	x20, x19, [sp, #32]
  46173c:	ldr	x8, [x0, #8]
  461740:	mov	x20, x1
  461744:	str	x21, [sp, #16]
  461748:	mov	x29, sp
  46174c:	cbz	x8, 4617a8 <_obstack_free@@Base+0x74>
  461750:	mov	x19, x0
  461754:	b	461778 <_obstack_free@@Base+0x44>
  461758:	ldr	x9, [x19, #64]
  46175c:	mov	x0, x8
  461760:	blr	x9
  461764:	ldrb	w8, [x19, #80]
  461768:	orr	w8, w8, #0x2
  46176c:	strb	w8, [x19, #80]
  461770:	mov	x8, x21
  461774:	cbz	x21, 4617a8 <_obstack_free@@Base+0x74>
  461778:	cmp	x8, x20
  46177c:	b.cs	46178c <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  461780:	ldr	x9, [x8]
  461784:	cmp	x9, x20
  461788:	b.cs	4617b0 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  46178c:	ldrb	w9, [x19, #80]
  461790:	ldr	x21, [x8, #8]
  461794:	tbz	w9, #0, 461758 <_obstack_free@@Base+0x24>
  461798:	ldp	x9, x0, [x19, #64]
  46179c:	mov	x1, x8
  4617a0:	blr	x9
  4617a4:	b	461764 <_obstack_free@@Base+0x30>
  4617a8:	cbz	x20, 4617b8 <_obstack_free@@Base+0x84>
  4617ac:	bl	402f30 <abort@plt>
  4617b0:	stp	x20, x9, [x19, #24]
  4617b4:	stp	x8, x20, [x19, #8]
  4617b8:	ldp	x20, x19, [sp, #32]
  4617bc:	ldr	x21, [sp, #16]
  4617c0:	ldp	x29, x30, [sp], #48
  4617c4:	ret

00000000004617c8 <_obstack_memory_used@@Base>:
  4617c8:	ldr	x8, [x0, #8]
  4617cc:	cbz	x8, 4617e8 <_obstack_memory_used@@Base+0x20>
  4617d0:	mov	x0, xzr
  4617d4:	sub	x10, x0, x8
  4617d8:	ldp	x9, x8, [x8]
  4617dc:	add	x0, x10, x9
  4617e0:	cbnz	x8, 4617d4 <_obstack_memory_used@@Base+0xc>
  4617e4:	ret
  4617e8:	mov	x0, xzr
  4617ec:	ret
  4617f0:	stp	x29, x30, [sp, #-16]!
  4617f4:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4617f8:	ldr	x0, [x8, #1464]
  4617fc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2838>
  461800:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12838>
  461804:	add	x1, x1, #0xa0d
  461808:	add	x2, x2, #0xd33
  46180c:	mov	x29, sp
  461810:	bl	402a70 <fprintf@plt>
  461814:	mov	w0, #0x1                   	// #1
  461818:	bl	402f70 <exit@plt>
  46181c:	sub	sp, sp, #0x70
  461820:	stp	x29, x30, [sp, #16]
  461824:	stp	x28, x27, [sp, #32]
  461828:	stp	x26, x25, [sp, #48]
  46182c:	stp	x24, x23, [sp, #64]
  461830:	stp	x22, x21, [sp, #80]
  461834:	stp	x20, x19, [sp, #96]
  461838:	add	x29, sp, #0x10
  46183c:	cbz	x0, 461878 <_obstack_memory_used@@Base+0xb0>
  461840:	mov	x19, x0
  461844:	bl	402a50 <strlen@plt>
  461848:	cmp	x0, #0x14
  46184c:	b.cc	461874 <_obstack_memory_used@@Base+0xac>  // b.lo, b.ul, b.last
  461850:	sub	x22, x0, #0x13
  461854:	add	x20, x19, x22
  461858:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  46185c:	mov	x21, x0
  461860:	add	x1, x1, #0xe93
  461864:	mov	w2, #0x3                   	// #3
  461868:	mov	x0, x20
  46186c:	bl	402d40 <strncmp@plt>
  461870:	cbz	w0, 461898 <_obstack_memory_used@@Base+0xd0>
  461874:	mov	w0, wzr
  461878:	ldp	x20, x19, [sp, #96]
  46187c:	ldp	x22, x21, [sp, #80]
  461880:	ldp	x24, x23, [sp, #64]
  461884:	ldp	x26, x25, [sp, #48]
  461888:	ldp	x28, x27, [sp, #32]
  46188c:	ldp	x29, x30, [sp, #16]
  461890:	add	sp, sp, #0x70
  461894:	ret
  461898:	add	x8, x19, x21
  46189c:	mov	x9, #0xfffffffffffffff0    	// #-16
  4618a0:	mov	x10, sp
  4618a4:	mov	w11, #0x1                   	// #1
  4618a8:	stp	xzr, xzr, [sp]
  4618ac:	b	4618c4 <_obstack_memory_used@@Base+0xfc>
  4618b0:	mov	x13, #0xffffffffffffffd0    	// #-48
  4618b4:	add	x12, x13, x12
  4618b8:	adds	x9, x9, #0x1
  4618bc:	strb	w11, [x10, x12]
  4618c0:	b.cs	4618f0 <_obstack_memory_used@@Base+0x128>  // b.hs, b.nlast
  4618c4:	ldrb	w12, [x8, x9]
  4618c8:	sub	w13, w12, #0x30
  4618cc:	and	w13, w13, #0xff
  4618d0:	cmp	w13, #0xa
  4618d4:	b.cc	4618b0 <_obstack_memory_used@@Base+0xe8>  // b.lo, b.ul, b.last
  4618d8:	sub	w13, w12, #0x61
  4618dc:	and	w13, w13, #0xff
  4618e0:	cmp	w13, #0x5
  4618e4:	b.hi	461874 <_obstack_memory_used@@Base+0xac>  // b.pmore
  4618e8:	mov	x13, #0xffffffffffffffa9    	// #-87
  4618ec:	b	4618b4 <_obstack_memory_used@@Base+0xec>
  4618f0:	ldrb	w8, [sp]
  4618f4:	ldrb	w9, [sp, #1]
  4618f8:	mov	w10, #0xfffffffb            	// #-5
  4618fc:	cmp	w8, #0x0
  461900:	ldrb	w8, [sp, #2]
  461904:	cinc	w10, w10, ne  // ne = any
  461908:	cmp	w9, #0x0
  46190c:	ldrb	w9, [sp, #3]
  461910:	cinc	w10, w10, ne  // ne = any
  461914:	cmp	w8, #0x0
  461918:	ldrb	w8, [sp, #4]
  46191c:	cinc	w10, w10, ne  // ne = any
  461920:	cmp	w9, #0x0
  461924:	ldrb	w9, [sp, #5]
  461928:	cinc	w10, w10, ne  // ne = any
  46192c:	cmp	w8, #0x0
  461930:	ldrb	w8, [sp, #6]
  461934:	cinc	w10, w10, ne  // ne = any
  461938:	cmp	w9, #0x0
  46193c:	ldrb	w9, [sp, #7]
  461940:	cinc	w10, w10, ne  // ne = any
  461944:	cmp	w8, #0x0
  461948:	ldrb	w8, [sp, #8]
  46194c:	cinc	w10, w10, ne  // ne = any
  461950:	cmp	w9, #0x0
  461954:	ldrb	w9, [sp, #9]
  461958:	cinc	w10, w10, ne  // ne = any
  46195c:	cmp	w8, #0x0
  461960:	ldrb	w8, [sp, #10]
  461964:	cinc	w10, w10, ne  // ne = any
  461968:	cmp	w9, #0x0
  46196c:	ldrb	w9, [sp, #11]
  461970:	cinc	w10, w10, ne  // ne = any
  461974:	cmp	w8, #0x0
  461978:	ldrb	w8, [sp, #12]
  46197c:	cinc	w10, w10, ne  // ne = any
  461980:	cmp	w9, #0x0
  461984:	ldrb	w9, [sp, #13]
  461988:	cinc	w10, w10, ne  // ne = any
  46198c:	cmp	w8, #0x0
  461990:	ldrb	w8, [sp, #14]
  461994:	cinc	w10, w10, ne  // ne = any
  461998:	cmp	w9, #0x0
  46199c:	ldrb	w9, [sp, #15]
  4619a0:	cinc	w10, w10, ne  // ne = any
  4619a4:	cmp	w8, #0x0
  4619a8:	cinc	w8, w10, ne  // ne = any
  4619ac:	cmp	w9, #0x0
  4619b0:	cinc	w8, w8, ne  // ne = any
  4619b4:	cmp	w8, #0xa
  4619b8:	b.hi	461874 <_obstack_memory_used@@Base+0xac>  // b.pmore
  4619bc:	cmp	x22, #0x1
  4619c0:	b.lt	461c40 <_obstack_memory_used@@Base+0x478>  // b.tstop
  4619c4:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  4619c8:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  4619cc:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  4619d0:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12838>
  4619d4:	adrp	x24, 474000 <_obstack_memory_used@@Base+0x12838>
  4619d8:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12838>
  4619dc:	adrp	x25, 474000 <_obstack_memory_used@@Base+0x12838>
  4619e0:	adrp	x28, 474000 <_obstack_memory_used@@Base+0x12838>
  4619e4:	add	x26, x26, #0xd44
  4619e8:	add	x21, x21, #0xe30
  4619ec:	add	x22, x22, #0xe34
  4619f0:	add	x23, x23, #0xe39
  4619f4:	add	x24, x24, #0xe3e
  4619f8:	add	x27, x27, #0xe87
  4619fc:	add	x25, x25, #0xe8d
  461a00:	add	x28, x28, #0x17a
  461a04:	ldrb	w8, [x19]
  461a08:	mov	w0, wzr
  461a0c:	sub	w8, w8, #0x24
  461a10:	cmp	w8, #0x56
  461a14:	b.hi	461878 <_obstack_memory_used@@Base+0xb0>  // b.pmore
  461a18:	adr	x9, 461878 <_obstack_memory_used@@Base+0xb0>
  461a1c:	ldrb	w10, [x26, x8]
  461a20:	add	x9, x9, x10, lsl #2
  461a24:	mov	w8, #0x1                   	// #1
  461a28:	br	x9
  461a2c:	add	x19, x19, x8
  461a30:	cmp	x19, x20
  461a34:	mov	w0, #0x1                   	// #1
  461a38:	b.cc	461a04 <_obstack_memory_used@@Base+0x23c>  // b.lo, b.ul, b.last
  461a3c:	b	461878 <_obstack_memory_used@@Base+0xb0>
  461a40:	mov	w2, #0x3                   	// #3
  461a44:	mov	x0, x19
  461a48:	mov	x1, x21
  461a4c:	bl	402d40 <strncmp@plt>
  461a50:	mov	w8, #0x3                   	// #3
  461a54:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461a58:	mov	w2, #0x4                   	// #4
  461a5c:	mov	x0, x19
  461a60:	mov	x1, x22
  461a64:	bl	402d40 <strncmp@plt>
  461a68:	mov	w8, #0x4                   	// #4
  461a6c:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461a70:	mov	w2, #0x4                   	// #4
  461a74:	mov	x0, x19
  461a78:	mov	x1, x23
  461a7c:	bl	402d40 <strncmp@plt>
  461a80:	mov	w8, #0x4                   	// #4
  461a84:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461a88:	mov	w2, #0x4                   	// #4
  461a8c:	mov	x0, x19
  461a90:	mov	x1, x24
  461a94:	bl	402d40 <strncmp@plt>
  461a98:	mov	w8, #0x4                   	// #4
  461a9c:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461aa0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461aa4:	mov	w2, #0x4                   	// #4
  461aa8:	mov	x0, x19
  461aac:	add	x1, x1, #0xe43
  461ab0:	bl	402d40 <strncmp@plt>
  461ab4:	mov	w8, #0x4                   	// #4
  461ab8:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461abc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461ac0:	mov	w2, #0x4                   	// #4
  461ac4:	mov	x0, x19
  461ac8:	add	x1, x1, #0xe48
  461acc:	bl	402d40 <strncmp@plt>
  461ad0:	mov	w8, #0x4                   	// #4
  461ad4:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461ad8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461adc:	mov	w2, #0x4                   	// #4
  461ae0:	mov	x0, x19
  461ae4:	add	x1, x1, #0xe4d
  461ae8:	bl	402d40 <strncmp@plt>
  461aec:	mov	w8, #0x4                   	// #4
  461af0:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461af4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461af8:	mov	w2, #0x4                   	// #4
  461afc:	mov	x0, x19
  461b00:	add	x1, x1, #0xe52
  461b04:	bl	402d40 <strncmp@plt>
  461b08:	mov	w8, #0x4                   	// #4
  461b0c:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461b10:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461b14:	mov	w2, #0x5                   	// #5
  461b18:	mov	x0, x19
  461b1c:	add	x1, x1, #0xe57
  461b20:	bl	402d40 <strncmp@plt>
  461b24:	mov	w8, #0x5                   	// #5
  461b28:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461b2c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461b30:	mov	w2, #0x5                   	// #5
  461b34:	mov	x0, x19
  461b38:	add	x1, x1, #0xe5d
  461b3c:	bl	402d40 <strncmp@plt>
  461b40:	mov	w8, #0x5                   	// #5
  461b44:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461b48:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461b4c:	mov	w2, #0x5                   	// #5
  461b50:	mov	x0, x19
  461b54:	add	x1, x1, #0xe63
  461b58:	bl	402d40 <strncmp@plt>
  461b5c:	mov	w8, #0x5                   	// #5
  461b60:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461b64:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461b68:	mov	w2, #0x5                   	// #5
  461b6c:	mov	x0, x19
  461b70:	add	x1, x1, #0xe69
  461b74:	bl	402d40 <strncmp@plt>
  461b78:	mov	w8, #0x5                   	// #5
  461b7c:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461b80:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461b84:	mov	w2, #0x5                   	// #5
  461b88:	mov	x0, x19
  461b8c:	add	x1, x1, #0xe6f
  461b90:	bl	402d40 <strncmp@plt>
  461b94:	mov	w8, #0x5                   	// #5
  461b98:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461b9c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461ba0:	mov	w2, #0x5                   	// #5
  461ba4:	mov	x0, x19
  461ba8:	add	x1, x1, #0xe75
  461bac:	bl	402d40 <strncmp@plt>
  461bb0:	mov	w8, #0x5                   	// #5
  461bb4:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461bb8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461bbc:	mov	w2, #0x5                   	// #5
  461bc0:	mov	x0, x19
  461bc4:	add	x1, x1, #0xe7b
  461bc8:	bl	402d40 <strncmp@plt>
  461bcc:	mov	w8, #0x5                   	// #5
  461bd0:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461bd4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461bd8:	mov	w2, #0x5                   	// #5
  461bdc:	mov	x0, x19
  461be0:	add	x1, x1, #0xe81
  461be4:	bl	402d40 <strncmp@plt>
  461be8:	mov	w8, #0x5                   	// #5
  461bec:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461bf0:	mov	w2, #0x5                   	// #5
  461bf4:	mov	x0, x19
  461bf8:	mov	x1, x27
  461bfc:	bl	402d40 <strncmp@plt>
  461c00:	mov	w8, #0x5                   	// #5
  461c04:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461c08:	mov	w2, #0x5                   	// #5
  461c0c:	mov	x0, x19
  461c10:	mov	x1, x25
  461c14:	bl	402d40 <strncmp@plt>
  461c18:	mov	w8, #0x5                   	// #5
  461c1c:	cbz	w0, 461a2c <_obstack_memory_used@@Base+0x264>
  461c20:	b	461874 <_obstack_memory_used@@Base+0xac>
  461c24:	mov	w2, #0x3                   	// #3
  461c28:	mov	x0, x19
  461c2c:	mov	x1, x28
  461c30:	bl	402d40 <strncmp@plt>
  461c34:	cbz	w0, 461878 <_obstack_memory_used@@Base+0xb0>
  461c38:	mov	w8, #0x1                   	// #1
  461c3c:	b	461a2c <_obstack_memory_used@@Base+0x264>
  461c40:	mov	w0, #0x1                   	// #1
  461c44:	b	461878 <_obstack_memory_used@@Base+0xb0>
  461c48:	cbz	x0, 4620e4 <_obstack_memory_used@@Base+0x91c>
  461c4c:	sub	sp, sp, #0xc0
  461c50:	stp	x29, x30, [sp, #96]
  461c54:	stp	x28, x27, [sp, #112]
  461c58:	stp	x26, x25, [sp, #128]
  461c5c:	stp	x24, x23, [sp, #144]
  461c60:	stp	x22, x21, [sp, #160]
  461c64:	stp	x20, x19, [sp, #176]
  461c68:	add	x29, sp, #0x60
  461c6c:	mov	x19, x0
  461c70:	bl	402a50 <strlen@plt>
  461c74:	add	x8, x19, x0
  461c78:	sub	x23, x8, #0x13
  461c7c:	cmp	x23, x19
  461c80:	b.ls	4620c4 <_obstack_memory_used@@Base+0x8fc>  // b.plast
  461c84:	adrp	x8, 474000 <_obstack_memory_used@@Base+0x12838>
  461c88:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12838>
  461c8c:	adrp	x10, 474000 <_obstack_memory_used@@Base+0x12838>
  461c90:	ldr	q2, [x8, #3616]
  461c94:	ldr	q3, [x9, #3600]
  461c98:	ldr	q4, [x10, #3584]
  461c9c:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12838>
  461ca0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461ca4:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12838>
  461ca8:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12838>
  461cac:	adrp	x25, 474000 <_obstack_memory_used@@Base+0x12838>
  461cb0:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12838>
  461cb4:	adrp	x28, 474000 <_obstack_memory_used@@Base+0x12838>
  461cb8:	mov	w8, #0x2                   	// #2
  461cbc:	mov	w24, #0x1                   	// #1
  461cc0:	dup	v1.2d, x19
  461cc4:	add	x22, x22, #0xd9b
  461cc8:	add	x1, x1, #0xe30
  461ccc:	add	x20, x20, #0xe34
  461cd0:	add	x21, x21, #0xe39
  461cd4:	add	x25, x25, #0xe3e
  461cd8:	add	x26, x26, #0xe43
  461cdc:	add	x28, x28, #0xe48
  461ce0:	dup	v5.2d, x8
  461ce4:	dup	v6.2d, x24
  461ce8:	mov	w12, #0x3a                  	// #58
  461cec:	mov	w13, #0x2d                  	// #45
  461cf0:	mov	w14, #0x5f                  	// #95
  461cf4:	fmov	x27, d1
  461cf8:	ldrb	w8, [x27]
  461cfc:	sub	w9, w8, #0x24
  461d00:	cmp	w9, #0x56
  461d04:	b.hi	4620b0 <_obstack_memory_used@@Base+0x8e8>  // b.pmore
  461d08:	adr	x10, 461d18 <_obstack_memory_used@@Base+0x550>
  461d0c:	ldrb	w11, [x22, x9]
  461d10:	add	x10, x10, x11, lsl #2
  461d14:	br	x10
  461d18:	dup	v0.2d, x24
  461d1c:	mov	x9, v1.d[1]
  461d20:	add	v1.2d, v1.2d, v0.2d
  461d24:	strb	w8, [x9]
  461d28:	fmov	x8, d1
  461d2c:	cmp	x8, x23
  461d30:	b.cc	461cf4 <_obstack_memory_used@@Base+0x52c>  // b.lo, b.ul, b.last
  461d34:	b	4620c0 <_obstack_memory_used@@Base+0x8f8>
  461d38:	mov	w2, #0x3                   	// #3
  461d3c:	mov	x0, x27
  461d40:	stp	q6, q5, [sp]
  461d44:	stp	q4, q3, [sp, #32]
  461d48:	stp	q2, q1, [x29, #-32]
  461d4c:	bl	402d40 <strncmp@plt>
  461d50:	cbz	w0, 461f80 <_obstack_memory_used@@Base+0x7b8>
  461d54:	mov	w2, #0x4                   	// #4
  461d58:	mov	x0, x27
  461d5c:	mov	x1, x20
  461d60:	bl	402d40 <strncmp@plt>
  461d64:	cbz	w0, 461fa4 <_obstack_memory_used@@Base+0x7dc>
  461d68:	mov	w2, #0x4                   	// #4
  461d6c:	mov	x0, x27
  461d70:	mov	x1, x21
  461d74:	bl	402d40 <strncmp@plt>
  461d78:	cbz	w0, 461fb0 <_obstack_memory_used@@Base+0x7e8>
  461d7c:	mov	w2, #0x4                   	// #4
  461d80:	mov	x0, x27
  461d84:	mov	x1, x25
  461d88:	bl	402d40 <strncmp@plt>
  461d8c:	cbz	w0, 461fbc <_obstack_memory_used@@Base+0x7f4>
  461d90:	mov	w2, #0x4                   	// #4
  461d94:	mov	x0, x27
  461d98:	mov	x1, x26
  461d9c:	bl	402d40 <strncmp@plt>
  461da0:	cbz	w0, 461fc8 <_obstack_memory_used@@Base+0x800>
  461da4:	mov	w2, #0x4                   	// #4
  461da8:	mov	x0, x27
  461dac:	mov	x1, x28
  461db0:	bl	402d40 <strncmp@plt>
  461db4:	cbz	w0, 461fd4 <_obstack_memory_used@@Base+0x80c>
  461db8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461dbc:	mov	w2, #0x4                   	// #4
  461dc0:	mov	x0, x27
  461dc4:	add	x1, x1, #0xe4d
  461dc8:	bl	402d40 <strncmp@plt>
  461dcc:	cbz	w0, 461fe0 <_obstack_memory_used@@Base+0x818>
  461dd0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461dd4:	mov	w2, #0x4                   	// #4
  461dd8:	mov	x0, x27
  461ddc:	add	x1, x1, #0xe52
  461de0:	bl	402d40 <strncmp@plt>
  461de4:	cbz	w0, 461fec <_obstack_memory_used@@Base+0x824>
  461de8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461dec:	mov	w2, #0x5                   	// #5
  461df0:	mov	x0, x27
  461df4:	add	x1, x1, #0xe57
  461df8:	bl	402d40 <strncmp@plt>
  461dfc:	cbz	w0, 462028 <_obstack_memory_used@@Base+0x860>
  461e00:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e04:	mov	w2, #0x5                   	// #5
  461e08:	mov	x0, x27
  461e0c:	add	x1, x1, #0xe5d
  461e10:	bl	402d40 <strncmp@plt>
  461e14:	cbz	w0, 462034 <_obstack_memory_used@@Base+0x86c>
  461e18:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e1c:	mov	w2, #0x5                   	// #5
  461e20:	mov	x0, x27
  461e24:	add	x1, x1, #0xe63
  461e28:	bl	402d40 <strncmp@plt>
  461e2c:	cbz	w0, 462040 <_obstack_memory_used@@Base+0x878>
  461e30:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e34:	mov	w2, #0x5                   	// #5
  461e38:	mov	x0, x27
  461e3c:	add	x1, x1, #0xe69
  461e40:	bl	402d40 <strncmp@plt>
  461e44:	cbz	w0, 46204c <_obstack_memory_used@@Base+0x884>
  461e48:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e4c:	mov	w2, #0x5                   	// #5
  461e50:	mov	x0, x27
  461e54:	add	x1, x1, #0xe6f
  461e58:	bl	402d40 <strncmp@plt>
  461e5c:	cbz	w0, 462058 <_obstack_memory_used@@Base+0x890>
  461e60:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e64:	mov	w2, #0x5                   	// #5
  461e68:	mov	x0, x27
  461e6c:	add	x1, x1, #0xe75
  461e70:	bl	402d40 <strncmp@plt>
  461e74:	cbz	w0, 462064 <_obstack_memory_used@@Base+0x89c>
  461e78:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e7c:	mov	w2, #0x5                   	// #5
  461e80:	mov	x0, x27
  461e84:	add	x1, x1, #0xe7b
  461e88:	bl	402d40 <strncmp@plt>
  461e8c:	cbz	w0, 462070 <_obstack_memory_used@@Base+0x8a8>
  461e90:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461e94:	mov	w2, #0x5                   	// #5
  461e98:	mov	x0, x27
  461e9c:	add	x1, x1, #0xe81
  461ea0:	bl	402d40 <strncmp@plt>
  461ea4:	cbz	w0, 46207c <_obstack_memory_used@@Base+0x8b4>
  461ea8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461eac:	mov	w2, #0x5                   	// #5
  461eb0:	mov	x0, x27
  461eb4:	add	x1, x1, #0xe87
  461eb8:	bl	402d40 <strncmp@plt>
  461ebc:	cbz	w0, 462088 <_obstack_memory_used@@Base+0x8c0>
  461ec0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461ec4:	mov	w2, #0x5                   	// #5
  461ec8:	mov	x0, x27
  461ecc:	add	x1, x1, #0xe8d
  461ed0:	bl	402d40 <strncmp@plt>
  461ed4:	ldp	q2, q1, [x29, #-32]
  461ed8:	ldp	q4, q3, [sp, #32]
  461edc:	ldp	q6, q5, [sp]
  461ee0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461ee4:	add	x1, x1, #0xe30
  461ee8:	mov	w9, #0x7e                  	// #126
  461eec:	mov	w12, #0x3a                  	// #58
  461ef0:	mov	w13, #0x2d                  	// #45
  461ef4:	mov	w14, #0x5f                  	// #95
  461ef8:	cbnz	w0, 4620b0 <_obstack_memory_used@@Base+0x8e8>
  461efc:	mov	x8, v1.d[1]
  461f00:	strb	w9, [x8]
  461f04:	add	v1.2d, v1.2d, v4.2d
  461f08:	b	461d28 <_obstack_memory_used@@Base+0x560>
  461f0c:	add	v0.2d, v1.2d, v6.2d
  461f10:	fmov	x8, d0
  461f14:	ldrb	w8, [x8]
  461f18:	cmp	w8, #0x2e
  461f1c:	mov	x8, v1.d[1]
  461f20:	b.ne	461f74 <_obstack_memory_used@@Base+0x7ac>  // b.any
  461f24:	strb	w12, [x8]
  461f28:	mov	x8, v0.d[1]
  461f2c:	strb	w12, [x8]
  461f30:	add	v1.2d, v1.2d, v5.2d
  461f34:	b	461d28 <_obstack_memory_used@@Base+0x560>
  461f38:	cmp	x27, x19
  461f3c:	b.eq	461f4c <_obstack_memory_used@@Base+0x784>  // b.none
  461f40:	ldurb	w8, [x27, #-1]
  461f44:	cmp	w8, #0x3a
  461f48:	b.ne	461f60 <_obstack_memory_used@@Base+0x798>  // b.any
  461f4c:	ldrb	w8, [x27, #1]!
  461f50:	cmp	w8, #0x24
  461f54:	b.ne	461f60 <_obstack_memory_used@@Base+0x798>  // b.any
  461f58:	mov	v1.d[0], x27
  461f5c:	b	461d28 <_obstack_memory_used@@Base+0x560>
  461f60:	dup	v0.2d, x24
  461f64:	mov	x8, v1.d[1]
  461f68:	add	v1.2d, v1.2d, v0.2d
  461f6c:	strb	w14, [x8]
  461f70:	b	461d28 <_obstack_memory_used@@Base+0x560>
  461f74:	strb	w13, [x8]
  461f78:	mov	v1.16b, v0.16b
  461f7c:	b	461d28 <_obstack_memory_used@@Base+0x560>
  461f80:	ldp	q2, q1, [x29, #-32]
  461f84:	ldr	q3, [sp, #48]
  461f88:	mov	w9, #0x2c                  	// #44
  461f8c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  461f90:	mov	x8, v1.d[1]
  461f94:	strb	w9, [x8]
  461f98:	add	v1.2d, v1.2d, v2.2d
  461f9c:	add	x1, x1, #0xe30
  461fa0:	b	462010 <_obstack_memory_used@@Base+0x848>
  461fa4:	ldur	q1, [x29, #-16]
  461fa8:	mov	w9, #0x40                  	// #64
  461fac:	b	461ff4 <_obstack_memory_used@@Base+0x82c>
  461fb0:	ldur	q1, [x29, #-16]
  461fb4:	mov	w9, #0x2a                  	// #42
  461fb8:	b	461ff4 <_obstack_memory_used@@Base+0x82c>
  461fbc:	ldur	q1, [x29, #-16]
  461fc0:	mov	w9, #0x26                  	// #38
  461fc4:	b	461ff4 <_obstack_memory_used@@Base+0x82c>
  461fc8:	ldur	q1, [x29, #-16]
  461fcc:	mov	w9, #0x3c                  	// #60
  461fd0:	b	461ff4 <_obstack_memory_used@@Base+0x82c>
  461fd4:	ldur	q1, [x29, #-16]
  461fd8:	mov	w9, #0x3e                  	// #62
  461fdc:	b	461ff4 <_obstack_memory_used@@Base+0x82c>
  461fe0:	ldur	q1, [x29, #-16]
  461fe4:	mov	w9, #0x28                  	// #40
  461fe8:	b	461ff4 <_obstack_memory_used@@Base+0x82c>
  461fec:	ldur	q1, [x29, #-16]
  461ff0:	mov	w9, #0x29                  	// #41
  461ff4:	mov	x8, v1.d[1]
  461ff8:	strb	w9, [x8]
  461ffc:	ldr	q3, [sp, #48]
  462000:	ldur	q2, [x29, #-32]
  462004:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  462008:	add	x1, x1, #0xe30
  46200c:	add	v1.2d, v1.2d, v3.2d
  462010:	ldr	q4, [sp, #32]
  462014:	ldp	q6, q5, [sp]
  462018:	mov	w12, #0x3a                  	// #58
  46201c:	mov	w13, #0x2d                  	// #45
  462020:	mov	w14, #0x5f                  	// #95
  462024:	b	461d28 <_obstack_memory_used@@Base+0x560>
  462028:	ldur	q1, [x29, #-16]
  46202c:	mov	w9, #0x20                  	// #32
  462030:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  462034:	ldur	q1, [x29, #-16]
  462038:	mov	w9, #0x22                  	// #34
  46203c:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  462040:	ldur	q1, [x29, #-16]
  462044:	mov	w9, #0x27                  	// #39
  462048:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  46204c:	ldur	q1, [x29, #-16]
  462050:	mov	w9, #0x2b                  	// #43
  462054:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  462058:	ldur	q1, [x29, #-16]
  46205c:	mov	w9, #0x3b                  	// #59
  462060:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  462064:	ldur	q1, [x29, #-16]
  462068:	mov	w9, #0x5b                  	// #91
  46206c:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  462070:	ldur	q1, [x29, #-16]
  462074:	mov	w9, #0x5d                  	// #93
  462078:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  46207c:	ldur	q1, [x29, #-16]
  462080:	mov	w9, #0x7b                  	// #123
  462084:	b	462090 <_obstack_memory_used@@Base+0x8c8>
  462088:	ldur	q1, [x29, #-16]
  46208c:	mov	w9, #0x7d                  	// #125
  462090:	mov	x8, v1.d[1]
  462094:	strb	w9, [x8]
  462098:	ldp	q4, q3, [sp, #32]
  46209c:	ldur	q2, [x29, #-32]
  4620a0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12838>
  4620a4:	add	x1, x1, #0xe30
  4620a8:	add	v1.2d, v1.2d, v4.2d
  4620ac:	b	462014 <_obstack_memory_used@@Base+0x84c>
  4620b0:	mov	x19, v1.d[1]
  4620b4:	mov	w8, #0x3f                  	// #63
  4620b8:	strb	w8, [x19], #1
  4620bc:	b	4620c4 <_obstack_memory_used@@Base+0x8fc>
  4620c0:	mov	x19, v1.d[1]
  4620c4:	strb	wzr, [x19]
  4620c8:	ldp	x20, x19, [sp, #176]
  4620cc:	ldp	x22, x21, [sp, #160]
  4620d0:	ldp	x24, x23, [sp, #144]
  4620d4:	ldp	x26, x25, [sp, #128]
  4620d8:	ldp	x28, x27, [sp, #112]
  4620dc:	ldp	x29, x30, [sp, #96]
  4620e0:	add	sp, sp, #0xc0
  4620e4:	ret
  4620e8:	stp	x29, x30, [sp, #-32]!
  4620ec:	adrp	x8, 48a000 <_obstack_memory_used@@Base+0x28838>
  4620f0:	ldr	x8, [x8, #2776]
  4620f4:	str	x19, [sp, #16]
  4620f8:	mov	w19, w0
  4620fc:	mov	x29, sp
  462100:	cbz	x8, 462108 <_obstack_memory_used@@Base+0x940>
  462104:	blr	x8
  462108:	mov	w0, w19
  46210c:	bl	402f70 <exit@plt>
  462110:	stp	x29, x30, [sp, #-32]!
  462114:	str	x19, [sp, #16]
  462118:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x28838>
  46211c:	ldr	x8, [x19, #2720]
  462120:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  462124:	mov	x29, sp
  462128:	str	x0, [x9, #1416]
  46212c:	cbnz	x8, 46213c <_obstack_memory_used@@Base+0x974>
  462130:	mov	x0, xzr
  462134:	bl	402e20 <sbrk@plt>
  462138:	str	x0, [x19, #2720]
  46213c:	ldr	x19, [sp, #16]
  462140:	ldp	x29, x30, [sp], #32
  462144:	ret
  462148:	stp	x29, x30, [sp, #-48]!
  46214c:	stp	x20, x19, [sp, #32]
  462150:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  462154:	str	x21, [sp, #16]
  462158:	ldr	x21, [x20, #2720]
  46215c:	mov	x19, x0
  462160:	mov	x0, xzr
  462164:	mov	x29, sp
  462168:	bl	402e20 <sbrk@plt>
  46216c:	ldr	x8, [x20, #2720]
  462170:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  462174:	ldr	x2, [x10, #1416]
  462178:	adrp	x9, 48a000 <_obstack_memory_used@@Base+0x28838>
  46217c:	add	x9, x9, #0x590
  462180:	cmp	x21, #0x0
  462184:	csel	x8, x9, x8, eq  // eq = none
  462188:	sub	x5, x0, x8
  46218c:	ldrb	w8, [x2]
  462190:	adrp	x10, 48a000 <_obstack_memory_used@@Base+0x28838>
  462194:	ldr	x0, [x10, #1464]
  462198:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1838>
  46219c:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x838>
  4621a0:	add	x9, x9, #0xf27
  4621a4:	add	x10, x10, #0xbb5
  4621a8:	cmp	w8, #0x0
  4621ac:	adrp	x1, 475000 <_obstack_memory_used@@Base+0x13838>
  4621b0:	csel	x3, x10, x9, eq  // eq = none
  4621b4:	add	x1, x1, #0x298
  4621b8:	mov	x4, x19
  4621bc:	bl	402a70 <fprintf@plt>
  4621c0:	mov	w0, #0x1                   	// #1
  4621c4:	bl	4620e8 <_obstack_memory_used@@Base+0x920>
  4621c8:	stp	x29, x30, [sp, #-32]!
  4621cc:	cmp	x0, #0x0
  4621d0:	str	x19, [sp, #16]
  4621d4:	csinc	x19, x0, xzr, ne  // ne = any
  4621d8:	mov	x0, x19
  4621dc:	mov	x29, sp
  4621e0:	bl	402f10 <malloc@plt>
  4621e4:	cbz	x0, 4621f4 <_obstack_memory_used@@Base+0xa2c>
  4621e8:	ldr	x19, [sp, #16]
  4621ec:	ldp	x29, x30, [sp], #32
  4621f0:	ret
  4621f4:	mov	x0, x19
  4621f8:	bl	462148 <_obstack_memory_used@@Base+0x980>
  4621fc:	stp	x29, x30, [sp, #-32]!
  462200:	cmp	x0, #0x0
  462204:	cset	w8, eq  // eq = none
  462208:	cmp	x1, #0x0
  46220c:	cset	w9, eq  // eq = none
  462210:	orr	w8, w8, w9
  462214:	cmp	w8, #0x0
  462218:	stp	x20, x19, [sp, #16]
  46221c:	csinc	x19, x1, xzr, eq  // eq = none
  462220:	csinc	x20, x0, xzr, eq  // eq = none
  462224:	mov	x0, x20
  462228:	mov	x1, x19
  46222c:	mov	x29, sp
  462230:	bl	402a30 <calloc@plt>
  462234:	cbz	x0, 462244 <_obstack_memory_used@@Base+0xa7c>
  462238:	ldp	x20, x19, [sp, #16]
  46223c:	ldp	x29, x30, [sp], #32
  462240:	ret
  462244:	mul	x0, x20, x19
  462248:	bl	462148 <_obstack_memory_used@@Base+0x980>
  46224c:	stp	x29, x30, [sp, #-32]!
  462250:	cmp	x1, #0x0
  462254:	str	x19, [sp, #16]
  462258:	csinc	x19, x1, xzr, ne  // ne = any
  46225c:	mov	x29, sp
  462260:	cbz	x0, 46227c <_obstack_memory_used@@Base+0xab4>
  462264:	mov	x1, x19
  462268:	bl	402ba0 <realloc@plt>
  46226c:	cbz	x0, 462288 <_obstack_memory_used@@Base+0xac0>
  462270:	ldr	x19, [sp, #16]
  462274:	ldp	x29, x30, [sp], #32
  462278:	ret
  46227c:	mov	x0, x19
  462280:	bl	402f10 <malloc@plt>
  462284:	cbnz	x0, 462270 <_obstack_memory_used@@Base+0xaa8>
  462288:	mov	x0, x19
  46228c:	bl	462148 <_obstack_memory_used@@Base+0x980>
  462290:	stp	x29, x30, [sp, #-48]!
  462294:	stp	x20, x19, [sp, #32]
  462298:	mov	x20, x0
  46229c:	mov	x0, x2
  4622a0:	str	x21, [sp, #16]
  4622a4:	mov	x29, sp
  4622a8:	mov	x21, x2
  4622ac:	mov	x19, x1
  4622b0:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4622b4:	subs	x2, x21, x19
  4622b8:	mov	x21, x0
  4622bc:	b.ls	4622cc <_obstack_memory_used@@Base+0xb04>  // b.plast
  4622c0:	add	x0, x21, x19
  4622c4:	mov	w1, wzr
  4622c8:	bl	402b40 <memset@plt>
  4622cc:	mov	x0, x21
  4622d0:	mov	x1, x20
  4622d4:	mov	x2, x19
  4622d8:	ldp	x20, x19, [sp, #32]
  4622dc:	ldr	x21, [sp, #16]
  4622e0:	ldp	x29, x30, [sp], #48
  4622e4:	b	4029c0 <memcpy@plt>
  4622e8:	stp	x29, x30, [sp, #-32]!
  4622ec:	stp	x20, x19, [sp, #16]
  4622f0:	mov	x29, sp
  4622f4:	mov	x19, x0
  4622f8:	bl	402a50 <strlen@plt>
  4622fc:	add	x20, x0, #0x1
  462300:	mov	x0, x20
  462304:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  462308:	mov	x1, x19
  46230c:	mov	x2, x20
  462310:	ldp	x20, x19, [sp, #16]
  462314:	ldp	x29, x30, [sp], #32
  462318:	b	4029c0 <memcpy@plt>
  46231c:	stp	x29, x30, [sp, #-32]!
  462320:	stp	x20, x19, [sp, #16]
  462324:	mov	x29, sp
  462328:	mov	w19, w0
  46232c:	bl	402bf0 <strerror@plt>
  462330:	mov	x20, x0
  462334:	cbnz	x0, 462354 <_obstack_memory_used@@Base+0xb8c>
  462338:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x28838>
  46233c:	add	x20, x20, #0xaa8
  462340:	adrp	x1, 475000 <_obstack_memory_used@@Base+0x13838>
  462344:	add	x1, x1, #0x2dc
  462348:	mov	x0, x20
  46234c:	mov	w2, w19
  462350:	bl	402c30 <sprintf@plt>
  462354:	mov	x0, x20
  462358:	ldp	x20, x19, [sp, #16]
  46235c:	ldp	x29, x30, [sp], #32
  462360:	ret
  462364:	stp	x29, x30, [sp, #-32]!
  462368:	stp	x20, x19, [sp, #16]
  46236c:	mov	x29, sp
  462370:	mov	x19, x0
  462374:	bl	403020 <strnlen@plt>
  462378:	mov	x20, x0
  46237c:	add	x0, x0, #0x1
  462380:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  462384:	strb	wzr, [x0, x20]
  462388:	mov	x1, x19
  46238c:	mov	x2, x20
  462390:	ldp	x20, x19, [sp, #16]
  462394:	ldp	x29, x30, [sp], #32
  462398:	b	4029c0 <memcpy@plt>
  46239c:	sub	sp, sp, #0x50
  4623a0:	stp	x29, x30, [sp, #32]
  4623a4:	str	x21, [sp, #48]
  4623a8:	stp	x20, x19, [sp, #64]
  4623ac:	ldp	q1, q0, [x1]
  4623b0:	mov	x19, x1
  4623b4:	mov	x1, sp
  4623b8:	add	x29, sp, #0x20
  4623bc:	mov	x20, x0
  4623c0:	stp	q1, q0, [sp]
  4623c4:	bl	462400 <_obstack_memory_used@@Base+0xc38>
  4623c8:	sxtw	x0, w0
  4623cc:	bl	4621c8 <_obstack_memory_used@@Base+0xa00>
  4623d0:	ldp	q1, q0, [x19]
  4623d4:	mov	x2, sp
  4623d8:	mov	x1, x20
  4623dc:	mov	x21, x0
  4623e0:	stp	q1, q0, [sp]
  4623e4:	bl	402ff0 <vsprintf@plt>
  4623e8:	mov	x0, x21
  4623ec:	ldp	x20, x19, [sp, #64]
  4623f0:	ldr	x21, [sp, #48]
  4623f4:	ldp	x29, x30, [sp, #32]
  4623f8:	add	sp, sp, #0x50
  4623fc:	ret
  462400:	sub	sp, sp, #0x70
  462404:	stp	x29, x30, [sp, #32]
  462408:	add	x29, sp, #0x20
  46240c:	str	x25, [sp, #48]
  462410:	stp	x24, x23, [sp, #64]
  462414:	stp	x22, x21, [sp, #80]
  462418:	stp	x20, x19, [sp, #96]
  46241c:	mov	x19, x1
  462420:	mov	x21, x0
  462424:	str	x0, [x29, #24]
  462428:	bl	402a50 <strlen@plt>
  46242c:	ldp	q1, q0, [x19]
  462430:	add	w20, w0, #0x1
  462434:	stp	q1, q0, [sp]
  462438:	ldrb	w8, [x21]
  46243c:	cbz	w8, 46268c <_obstack_memory_used@@Base+0xec4>
  462440:	mov	x22, #0x1                   	// #1
  462444:	movk	x22, #0x2809, lsl #32
  462448:	adrp	x19, 475000 <_obstack_memory_used@@Base+0x13838>
  46244c:	adrp	x24, 475000 <_obstack_memory_used@@Base+0x13838>
  462450:	movk	x22, #0x1, lsl #48
  462454:	mov	w23, #0x1                   	// #1
  462458:	add	x19, x19, #0x327
  46245c:	add	x24, x24, #0x2f3
  462460:	b	462480 <_obstack_memory_used@@Base+0xcb8>
  462464:	ldr	x8, [sp]
  462468:	add	x8, x8, #0x8
  46246c:	str	x8, [sp]
  462470:	add	x21, x21, #0x1
  462474:	str	x21, [x29, #24]
  462478:	ldrb	w8, [x21]
  46247c:	cbz	w8, 46268c <_obstack_memory_used@@Base+0xec4>
  462480:	and	w8, w8, #0xff
  462484:	add	x21, x21, #0x1
  462488:	cmp	w8, #0x25
  46248c:	str	x21, [x29, #24]
  462490:	b.ne	462478 <_obstack_memory_used@@Base+0xcb0>  // b.any
  462494:	ldrb	w8, [x21]
  462498:	cmp	x8, #0x3f
  46249c:	b.hi	4624c8 <_obstack_memory_used@@Base+0xd00>  // b.pmore
  4624a0:	lsl	x9, x23, x8
  4624a4:	and	x9, x9, x22
  4624a8:	cbz	x9, 4624c8 <_obstack_memory_used@@Base+0xd00>
  4624ac:	ldrb	w8, [x21, #1]!
  4624b0:	cmp	x8, #0x3f
  4624b4:	b.hi	4624c4 <_obstack_memory_used@@Base+0xcfc>  // b.pmore
  4624b8:	lsl	x9, x23, x8
  4624bc:	and	x9, x9, x22
  4624c0:	cbnz	x9, 4624ac <_obstack_memory_used@@Base+0xce4>
  4624c4:	str	x21, [x29, #24]
  4624c8:	cmp	w8, #0x2a
  4624cc:	b.ne	4624fc <_obstack_memory_used@@Base+0xd34>  // b.any
  4624d0:	ldrsw	x8, [sp, #24]
  4624d4:	add	x21, x21, #0x1
  4624d8:	str	x21, [x29, #24]
  4624dc:	tbz	w8, #31, 462514 <_obstack_memory_used@@Base+0xd4c>
  4624e0:	add	w9, w8, #0x8
  4624e4:	cmn	w8, #0x8
  4624e8:	str	w9, [sp, #24]
  4624ec:	b.gt	462514 <_obstack_memory_used@@Base+0xd4c>
  4624f0:	ldr	x9, [sp, #8]
  4624f4:	add	x8, x9, x8
  4624f8:	b	462520 <_obstack_memory_used@@Base+0xd58>
  4624fc:	add	x1, x29, #0x18
  462500:	mov	w2, #0xa                   	// #10
  462504:	mov	x0, x21
  462508:	bl	402e90 <strtoul@plt>
  46250c:	ldr	x21, [x29, #24]
  462510:	b	46252c <_obstack_memory_used@@Base+0xd64>
  462514:	ldr	x8, [sp]
  462518:	add	x9, x8, #0x8
  46251c:	str	x9, [sp]
  462520:	ldr	w8, [x8]
  462524:	cmp	w8, #0x0
  462528:	cneg	w0, w8, mi  // mi = first
  46252c:	ldrb	w8, [x21]
  462530:	add	w25, w0, w20
  462534:	cmp	w8, #0x2e
  462538:	b.ne	4625b0 <_obstack_memory_used@@Base+0xde8>  // b.any
  46253c:	add	x0, x21, #0x1
  462540:	str	x0, [x29, #24]
  462544:	ldrb	w8, [x21, #1]
  462548:	cmp	w8, #0x2a
  46254c:	b.ne	46257c <_obstack_memory_used@@Base+0xdb4>  // b.any
  462550:	ldrsw	x8, [sp, #24]
  462554:	add	x21, x21, #0x2
  462558:	str	x21, [x29, #24]
  46255c:	tbz	w8, #31, 462594 <_obstack_memory_used@@Base+0xdcc>
  462560:	add	w9, w8, #0x8
  462564:	cmn	w8, #0x8
  462568:	str	w9, [sp, #24]
  46256c:	b.gt	462594 <_obstack_memory_used@@Base+0xdcc>
  462570:	ldr	x9, [sp, #8]
  462574:	add	x8, x9, x8
  462578:	b	4625a0 <_obstack_memory_used@@Base+0xdd8>
  46257c:	add	x1, x29, #0x18
  462580:	mov	w2, #0xa                   	// #10
  462584:	bl	402e90 <strtoul@plt>
  462588:	ldr	x21, [x29, #24]
  46258c:	add	w25, w25, w0
  462590:	b	4625b0 <_obstack_memory_used@@Base+0xde8>
  462594:	ldr	x8, [sp]
  462598:	add	x9, x8, #0x8
  46259c:	str	x9, [sp]
  4625a0:	ldr	w8, [x8]
  4625a4:	cmp	w8, #0x0
  4625a8:	cneg	w8, w8, mi  // mi = first
  4625ac:	add	w25, w8, w25
  4625b0:	ldrb	w20, [x21]
  4625b4:	mov	w2, #0x4                   	// #4
  4625b8:	mov	x0, x19
  4625bc:	mov	w1, w20
  4625c0:	bl	402ce0 <memchr@plt>
  4625c4:	cbz	x0, 4625e4 <_obstack_memory_used@@Base+0xe1c>
  4625c8:	ldrb	w20, [x21, #1]!
  4625cc:	mov	w2, #0x4                   	// #4
  4625d0:	mov	x0, x19
  4625d4:	mov	w1, w20
  4625d8:	bl	402ce0 <memchr@plt>
  4625dc:	cbnz	x0, 4625c8 <_obstack_memory_used@@Base+0xe00>
  4625e0:	str	x21, [x29, #24]
  4625e4:	sub	w8, w20, #0x45
  4625e8:	cmp	w8, #0x33
  4625ec:	add	w20, w25, #0x1e
  4625f0:	b.hi	462470 <_obstack_memory_used@@Base+0xca8>  // b.pmore
  4625f4:	adr	x9, 462470 <_obstack_memory_used@@Base+0xca8>
  4625f8:	ldrb	w10, [x24, x8]
  4625fc:	add	x9, x9, x10, lsl #2
  462600:	br	x9
  462604:	ldr	w8, [sp, #24]
  462608:	tbz	w8, #31, 462464 <_obstack_memory_used@@Base+0xc9c>
  46260c:	add	w9, w8, #0x8
  462610:	cmn	w8, #0x7
  462614:	str	w9, [sp, #24]
  462618:	b.ge	462464 <_obstack_memory_used@@Base+0xc9c>  // b.tcont
  46261c:	b	462470 <_obstack_memory_used@@Base+0xca8>
  462620:	ldr	w8, [sp, #28]
  462624:	tbz	w8, #31, 462638 <_obstack_memory_used@@Base+0xe70>
  462628:	add	w9, w8, #0x10
  46262c:	cmn	w8, #0xf
  462630:	str	w9, [sp, #28]
  462634:	b.lt	462644 <_obstack_memory_used@@Base+0xe7c>  // b.tstop
  462638:	ldr	x8, [sp]
  46263c:	add	x8, x8, #0x8
  462640:	str	x8, [sp]
  462644:	add	w20, w25, #0x151
  462648:	b	462470 <_obstack_memory_used@@Base+0xca8>
  46264c:	ldrsw	x8, [sp, #24]
  462650:	tbz	w8, #31, 462670 <_obstack_memory_used@@Base+0xea8>
  462654:	add	w9, w8, #0x8
  462658:	cmn	w8, #0x8
  46265c:	str	w9, [sp, #24]
  462660:	b.gt	462670 <_obstack_memory_used@@Base+0xea8>
  462664:	ldr	x9, [sp, #8]
  462668:	add	x8, x9, x8
  46266c:	b	46267c <_obstack_memory_used@@Base+0xeb4>
  462670:	ldr	x8, [sp]
  462674:	add	x9, x8, #0x8
  462678:	str	x9, [sp]
  46267c:	ldr	x0, [x8]
  462680:	bl	402a50 <strlen@plt>
  462684:	add	w20, w20, w0
  462688:	b	462470 <_obstack_memory_used@@Base+0xca8>
  46268c:	mov	w0, w20
  462690:	ldp	x20, x19, [sp, #96]
  462694:	ldp	x22, x21, [sp, #80]
  462698:	ldp	x24, x23, [sp, #64]
  46269c:	ldr	x25, [sp, #48]
  4626a0:	ldp	x29, x30, [sp, #32]
  4626a4:	add	sp, sp, #0x70
  4626a8:	ret
  4626ac:	nop
  4626b0:	stp	x29, x30, [sp, #-64]!
  4626b4:	mov	x29, sp
  4626b8:	stp	x19, x20, [sp, #16]
  4626bc:	adrp	x20, 489000 <_obstack_memory_used@@Base+0x27838>
  4626c0:	add	x20, x20, #0xdb0
  4626c4:	stp	x21, x22, [sp, #32]
  4626c8:	adrp	x21, 489000 <_obstack_memory_used@@Base+0x27838>
  4626cc:	add	x21, x21, #0xd98
  4626d0:	sub	x20, x20, x21
  4626d4:	mov	w22, w0
  4626d8:	stp	x23, x24, [sp, #48]
  4626dc:	mov	x23, x1
  4626e0:	mov	x24, x2
  4626e4:	bl	402920 <_Unwind_Backtrace@plt-0x40>
  4626e8:	cmp	xzr, x20, asr #3
  4626ec:	b.eq	462718 <_obstack_memory_used@@Base+0xf50>  // b.none
  4626f0:	asr	x20, x20, #3
  4626f4:	mov	x19, #0x0                   	// #0
  4626f8:	ldr	x3, [x21, x19, lsl #3]
  4626fc:	mov	x2, x24
  462700:	add	x19, x19, #0x1
  462704:	mov	x1, x23
  462708:	mov	w0, w22
  46270c:	blr	x3
  462710:	cmp	x20, x19
  462714:	b.ne	4626f8 <_obstack_memory_used@@Base+0xf30>  // b.any
  462718:	ldp	x19, x20, [sp, #16]
  46271c:	ldp	x21, x22, [sp, #32]
  462720:	ldp	x23, x24, [sp, #48]
  462724:	ldp	x29, x30, [sp], #64
  462728:	ret
  46272c:	nop
  462730:	ret

Disassembly of section .fini:

0000000000462734 <.fini>:
  462734:	stp	x29, x30, [sp, #-16]!
  462738:	mov	x29, sp
  46273c:	ldp	x29, x30, [sp], #16
  462740:	ret
