In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitWriter.a_clang_-Os:

BitWriter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMWriteBitcodeToFile>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x20, x19, [sp, #112]
   c:	add	x29, sp, #0x60
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	stur	wzr, [x29, #-16]
  1c:	bl	0 <_ZNSt3_V215system_categoryEv>
  20:	stur	x0, [x29, #-8]
  24:	cbz	x20, 38 <LLVMWriteBitcodeToFile+0x38>
  28:	mov	x0, x20
  2c:	bl	0 <strlen>
  30:	mov	x2, x0
  34:	b	3c <LLVMWriteBitcodeToFile+0x3c>
  38:	mov	x2, xzr
  3c:	add	x0, sp, #0x8
  40:	sub	x3, x29, #0x10
  44:	mov	x1, x20
  48:	mov	w4, wzr
  4c:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
  50:	ldur	w8, [x29, #-16]
  54:	cbz	w8, 60 <LLVMWriteBitcodeToFile+0x60>
  58:	mov	w19, #0xffffffff            	// #-1
  5c:	b	80 <LLVMWriteBitcodeToFile+0x80>
  60:	add	x1, sp, #0x8
  64:	mov	x0, x19
  68:	mov	w2, wzr
  6c:	mov	x3, xzr
  70:	mov	w4, wzr
  74:	mov	x5, xzr
  78:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  7c:	mov	w19, wzr
  80:	add	x0, sp, #0x8
  84:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
  88:	mov	w0, w19
  8c:	ldp	x20, x19, [sp, #112]
  90:	ldp	x29, x30, [sp, #96]
  94:	add	sp, sp, #0x80
  98:	ret

000000000000009c <LLVMWriteBitcodeToFD>:
  9c:	sub	sp, sp, #0x70
  a0:	stp	x29, x30, [sp, #80]
  a4:	str	x19, [sp, #96]
  a8:	add	x29, sp, #0x50
  ac:	cmp	w2, #0x0
  b0:	cset	w2, ne  // ne = any
  b4:	cmp	w3, #0x0
  b8:	mov	x19, x0
  bc:	cset	w3, ne  // ne = any
  c0:	add	x0, sp, #0x8
  c4:	bl	0 <_ZN4llvm14raw_fd_ostreamC1Eibb>
  c8:	add	x1, sp, #0x8
  cc:	mov	x0, x19
  d0:	mov	w2, wzr
  d4:	mov	x3, xzr
  d8:	mov	w4, wzr
  dc:	mov	x5, xzr
  e0:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  e4:	add	x0, sp, #0x8
  e8:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
  ec:	ldr	x19, [sp, #96]
  f0:	ldp	x29, x30, [sp, #80]
  f4:	mov	w0, wzr
  f8:	add	sp, sp, #0x70
  fc:	ret

0000000000000100 <LLVMWriteBitcodeToFileHandle>:
 100:	stp	x29, x30, [sp, #-16]!
 104:	mov	x29, sp
 108:	mov	w2, #0x1                   	// #1
 10c:	mov	w3, wzr
 110:	bl	9c <LLVMWriteBitcodeToFD>
 114:	mov	w0, wzr
 118:	ldp	x29, x30, [sp], #16
 11c:	ret

0000000000000120 <LLVMWriteBitcodeToMemoryBuffer>:
 120:	sub	sp, sp, #0xa0
 124:	stp	x29, x30, [sp, #112]
 128:	str	x21, [sp, #128]
 12c:	stp	x20, x19, [sp, #144]
 130:	add	x29, sp, #0x70
 134:	sturb	wzr, [x29, #-16]
 138:	stp	xzr, xzr, [sp, #48]
 13c:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 140:	ldr	x10, [x10]
 144:	sub	x8, x29, #0x20
 148:	mov	w9, #0x1                   	// #1
 14c:	add	x21, x8, #0x10
 150:	str	w9, [sp, #64]
 154:	add	x9, x10, #0x10
 158:	add	x1, sp, #0x20
 15c:	mov	w2, wzr
 160:	mov	x3, xzr
 164:	mov	w4, wzr
 168:	mov	x5, xzr
 16c:	stp	x21, xzr, [x29, #-32]
 170:	stp	x9, xzr, [sp, #32]
 174:	str	x8, [sp, #72]
 178:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 17c:	ldr	x8, [sp, #56]
 180:	ldr	x9, [sp, #40]
 184:	cmp	x8, x9
 188:	b.eq	194 <LLVMWriteBitcodeToMemoryBuffer+0x74>  // b.none
 18c:	add	x0, sp, #0x20
 190:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 194:	ldr	x8, [sp, #72]
 198:	adrp	x1, 0 <LLVMWriteBitcodeToFile>
 19c:	add	x1, x1, #0x0
 1a0:	add	x0, sp, #0x8
 1a4:	ldp	x19, x20, [x8]
 1a8:	bl	0 <LLVMWriteBitcodeToFile>
 1ac:	add	x8, x29, #0x18
 1b0:	add	x2, sp, #0x8
 1b4:	mov	x0, x19
 1b8:	mov	x1, x20
 1bc:	bl	0 <_ZN4llvm12MemoryBuffer16getMemBufferCopyENS_9StringRefERKNS_5TwineE>
 1c0:	ldr	x19, [x29, #24]
 1c4:	add	x0, sp, #0x20
 1c8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 1cc:	ldur	x0, [x29, #-32]
 1d0:	cmp	x0, x21
 1d4:	b.eq	1dc <LLVMWriteBitcodeToMemoryBuffer+0xbc>  // b.none
 1d8:	bl	0 <_ZdlPv>
 1dc:	mov	x0, x19
 1e0:	ldp	x20, x19, [sp, #144]
 1e4:	ldr	x21, [sp, #128]
 1e8:	ldp	x29, x30, [sp, #112]
 1ec:	add	sp, sp, #0xa0
 1f0:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

BitcodeWriter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	x20, x0
      10:	str	x1, [x0]
      14:	mov	w0, #0x60                  	// #96
      18:	mov	x19, x1
      1c:	bl	0 <_Znwm>
      20:	mov	w8, #0x2                   	// #2
      24:	movi	v0.2d, #0x0
      28:	stp	x19, xzr, [x0]
      2c:	str	xzr, [x0, #88]
      30:	str	w8, [x0, #16]
      34:	stur	q0, [x0, #24]
      38:	stur	q0, [x0, #40]
      3c:	stur	q0, [x0, #56]
      40:	stur	q0, [x0, #72]
      44:	str	x0, [x20, #8]
      48:	add	x0, x20, #0x10
      4c:	mov	w1, #0x3                   	// #3
      50:	mov	w2, #0x1                   	// #1
      54:	mov	w19, #0x1                   	// #1
      58:	bl	0 <_ZN4llvm18StringTableBuilderC1ENS0_4KindEj>
      5c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      60:	ldr	d0, [x9]
      64:	mov	x8, x20
      68:	str	xzr, [x8, #152]!
      6c:	sub	x9, x8, #0x30
      70:	stp	xzr, xzr, [x8, #-80]
      74:	stp	x8, xzr, [x8, #-16]
      78:	str	x19, [x8, #8]
      7c:	strh	wzr, [x8, #24]
      80:	stp	xzr, xzr, [x8, #40]
      84:	stur	x9, [x8, #-64]
      88:	stur	d0, [x8, #-56]
      8c:	str	xzr, [x8, #32]
      90:	ldr	x19, [x20, #8]
      94:	mov	w1, #0x42                  	// #66
      98:	mov	w2, #0x8                   	// #8
      9c:	mov	x0, x19
      a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      a4:	mov	w1, #0x43                  	// #67
      a8:	mov	w2, #0x8                   	// #8
      ac:	mov	x0, x19
      b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      b4:	mov	w2, #0x4                   	// #4
      b8:	mov	x0, x19
      bc:	mov	w1, wzr
      c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      c4:	mov	w1, #0xc                   	// #12
      c8:	mov	w2, #0x4                   	// #4
      cc:	mov	x0, x19
      d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      d4:	mov	w1, #0xe                   	// #14
      d8:	mov	w2, #0x4                   	// #4
      dc:	mov	x0, x19
      e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      e4:	mov	x0, x19
      e8:	ldp	x20, x19, [sp, #16]
      ec:	mov	w1, #0xd                   	// #13
      f0:	mov	w2, #0x4                   	// #4
      f4:	ldp	x29, x30, [sp], #32
      f8:	b	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>

00000000000000fc <_ZN4llvm13BitcodeWriterD1Ev>:
      fc:	stp	x29, x30, [sp, #-32]!
     100:	str	x19, [sp, #16]
     104:	mov	x29, sp
     108:	ldrb	w8, [x0, #176]
     10c:	cbz	w8, 140 <_ZN4llvm13BitcodeWriterD1Ev+0x44>
     110:	mov	x19, x0
     114:	ldr	x0, [x0, #184]
     118:	cbz	x0, 120 <_ZN4llvm13BitcodeWriterD1Ev+0x24>
     11c:	bl	0 <_ZdlPv>
     120:	add	x0, x19, #0x48
     124:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     128:	add	x0, x19, #0x10
     12c:	bl	0 <_ZN4llvm18StringTableBuilderD1Ev>
     130:	add	x0, x19, #0x8
     134:	ldr	x19, [sp, #16]
     138:	ldp	x29, x30, [sp], #32
     13c:	b	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     140:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     144:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     148:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     14c:	add	x0, x0, #0x0
     150:	add	x1, x1, #0x0
     154:	add	x3, x3, #0x0
     158:	mov	w2, #0x1112                	// #4370
     15c:	bl	0 <__assert_fail>

0000000000000160 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>:
     160:	sub	sp, sp, #0x70
     164:	stp	x29, x30, [sp, #32]
     168:	stp	x26, x25, [sp, #48]
     16c:	stp	x24, x23, [sp, #64]
     170:	stp	x22, x21, [sp, #80]
     174:	stp	x20, x19, [sp, #96]
     178:	add	x29, sp, #0x20
     17c:	mov	x19, x0
     180:	ldr	x0, [x0, #8]
     184:	mov	w22, w2
     188:	mov	w2, #0x3                   	// #3
     18c:	mov	x20, x4
     190:	mov	x21, x3
     194:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     198:	mov	w0, #0x220                 	// #544
     19c:	bl	0 <_Znwm>
     1a0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     1a4:	ldr	x8, [x8]
     1a8:	movi	v0.2s, #0x1
     1ac:	add	x24, x0, #0x20
     1b0:	mov	x23, x0
     1b4:	add	x8, x8, #0x10
     1b8:	str	d0, [x0, #8]
     1bc:	str	x8, [x0]
     1c0:	mov	w2, #0x200                 	// #512
     1c4:	mov	x0, x24
     1c8:	mov	w1, wzr
     1cc:	bl	0 <memset>
     1d0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     1d4:	ldr	d0, [x8]
     1d8:	mov	x25, x23
     1dc:	str	x24, [x25, #16]!
     1e0:	mov	w26, w22
     1e4:	mov	w8, #0xff                  	// #255
     1e8:	add	x1, sp, #0x10
     1ec:	mov	x0, x25
     1f0:	str	x26, [sp, #16]
     1f4:	str	d0, [x23, #24]
     1f8:	strb	w8, [sp, #24]
     1fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     200:	mov	w8, #0xa                   	// #10
     204:	add	x1, sp, #0x10
     208:	mov	x0, x25
     20c:	str	xzr, [sp, #16]
     210:	strb	w8, [sp, #24]
     214:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     218:	ldr	x22, [x19, #8]
     21c:	mov	x1, x25
     220:	stp	x25, x23, [sp]
     224:	mov	x0, x22
     228:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     22c:	add	x0, x22, #0x18
     230:	mov	x1, sp
     234:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     238:	ldp	x9, x8, [x22, #24]
     23c:	ldr	x0, [sp, #8]
     240:	sub	x8, x8, x9
     244:	lsr	x8, x8, #4
     248:	add	w22, w8, #0x3
     24c:	cbz	x0, 254 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0xf4>
     250:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     254:	ldr	x0, [x19, #8]
     258:	add	x2, sp, #0x10
     25c:	mov	w3, #0x1                   	// #1
     260:	mov	w1, w22
     264:	mov	x4, x21
     268:	mov	x5, x20
     26c:	mov	x6, xzr
     270:	str	x26, [sp, #16]
     274:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     278:	ldr	x0, [x19, #8]
     27c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     280:	ldp	x20, x19, [sp, #96]
     284:	ldp	x22, x21, [sp, #80]
     288:	ldp	x24, x23, [sp, #64]
     28c:	ldp	x26, x25, [sp, #48]
     290:	ldp	x29, x30, [sp, #32]
     294:	add	sp, sp, #0x70
     298:	ret

000000000000029c <_ZN4llvm13BitcodeWriter11writeSymtabEv>:
     29c:	sub	sp, sp, #0xc0
     2a0:	stp	x29, x30, [sp, #128]
     2a4:	stp	x24, x23, [sp, #144]
     2a8:	stp	x22, x21, [sp, #160]
     2ac:	stp	x20, x19, [sp, #176]
     2b0:	add	x29, sp, #0x80
     2b4:	ldrb	w8, [x0, #176]
     2b8:	cbnz	w8, 430 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x194>
     2bc:	ldrb	w8, [x0, #177]
     2c0:	mov	x19, x0
     2c4:	cbnz	w8, 430 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x194>
     2c8:	ldp	x20, x21, [x19, #184]
     2cc:	cmp	x20, x21
     2d0:	b.eq	368 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xcc>  // b.none
     2d4:	sub	x8, x29, #0x28
     2d8:	add	x9, sp, #0x20
     2dc:	add	x22, x8, #0x10
     2e0:	add	x23, x9, #0x10
     2e4:	ldr	x8, [x20]
     2e8:	ldr	x9, [x8, #96]
     2ec:	cbz	x9, 358 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xbc>
     2f0:	add	x1, x8, #0xf0
     2f4:	add	x0, sp, #0x8
     2f8:	stp	x22, xzr, [x29, #-40]
     2fc:	sturb	wzr, [x29, #-24]
     300:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     304:	add	x0, sp, #0x20
     308:	add	x1, sp, #0x8
     30c:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     310:	add	x0, sp, #0x20
     314:	sub	x1, x29, #0x28
     318:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     31c:	cbz	x0, 330 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x94>
     320:	ldr	x8, [x0, #104]
     324:	cmp	x8, #0x0
     328:	cset	w24, eq  // eq = none
     32c:	b	334 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x98>
     330:	mov	w24, #0x1                   	// #1
     334:	ldr	x0, [sp, #32]
     338:	cmp	x0, x23
     33c:	b.eq	344 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xa8>  // b.none
     340:	bl	0 <_ZdlPv>
     344:	ldur	x0, [x29, #-40]
     348:	cmp	x0, x22
     34c:	b.eq	354 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xb8>  // b.none
     350:	bl	0 <_ZdlPv>
     354:	cbnz	w24, 418 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x17c>
     358:	add	x20, x20, #0x8
     35c:	cmp	x21, x20
     360:	b.ne	2e4 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x48>  // b.any
     364:	ldp	x20, x21, [x19, #184]
     368:	mov	w8, #0x1                   	// #1
     36c:	add	x9, sp, #0x20
     370:	sub	x10, x21, x20
     374:	strb	w8, [x19, #177]
     378:	add	x8, x9, #0x10
     37c:	add	x3, x19, #0x10
     380:	stp	x8, xzr, [sp, #32]
     384:	asr	x1, x10, #3
     388:	add	x4, x19, #0x48
     38c:	add	x8, sp, #0x8
     390:	add	x2, sp, #0x20
     394:	mov	x0, x20
     398:	bl	0 <_ZN4llvm8irsymtab5buildENS_8ArrayRefIPNS_6ModuleEEERNS_11SmallVectorIcLj0EEERNS_18StringTableBuilderERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     39c:	ldr	x8, [sp, #8]
     3a0:	tst	x8, #0xfffffffffffffffe
     3a4:	and	x10, x8, #0xfffffffffffffffe
     3a8:	cset	w9, ne  // ne = any
     3ac:	orr	x9, x10, x9
     3b0:	str	x9, [sp, #8]
     3b4:	cbz	x10, 3e4 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x148>
     3b8:	orr	x8, x8, #0x1
     3bc:	sub	x0, x29, #0x28
     3c0:	sub	x1, x29, #0x8
     3c4:	str	xzr, [sp, #8]
     3c8:	stur	x8, [x29, #-40]
     3cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3d0:	ldur	x8, [x29, #-40]
     3d4:	cbnz	x8, 458 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1bc>
     3d8:	ldr	x8, [sp, #8]
     3dc:	cbz	x8, 400 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x164>
     3e0:	b	450 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1b4>
     3e4:	cbnz	x9, 450 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1b4>
     3e8:	ldr	x3, [sp, #32]
     3ec:	ldr	w4, [sp, #40]
     3f0:	mov	w1, #0x19                  	// #25
     3f4:	mov	w2, #0x1                   	// #1
     3f8:	mov	x0, x19
     3fc:	bl	160 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     400:	ldr	x0, [sp, #32]
     404:	add	x8, sp, #0x20
     408:	add	x8, x8, #0x10
     40c:	cmp	x0, x8
     410:	b.eq	418 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x17c>  // b.none
     414:	bl	0 <free>
     418:	ldp	x20, x19, [sp, #176]
     41c:	ldp	x22, x21, [sp, #160]
     420:	ldp	x24, x23, [sp, #144]
     424:	ldp	x29, x30, [sp, #128]
     428:	add	sp, sp, #0xc0
     42c:	ret
     430:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     434:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     438:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     43c:	add	x0, x0, #0x0
     440:	add	x1, x1, #0x0
     444:	add	x3, x3, #0x0
     448:	mov	w2, #0x1122                	// #4386
     44c:	bl	0 <__assert_fail>
     450:	add	x0, sp, #0x8
     454:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     458:	sub	x0, x29, #0x28
     45c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000460 <_ZN4llvm13BitcodeWriter11writeStrtabEv>:
     460:	sub	sp, sp, #0x40
     464:	stp	x29, x30, [sp, #32]
     468:	stp	x20, x19, [sp, #48]
     46c:	add	x29, sp, #0x20
     470:	ldrb	w8, [x0, #176]
     474:	cbnz	w8, 4e4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x84>
     478:	add	x20, x0, #0x10
     47c:	mov	x19, x0
     480:	mov	x0, x20
     484:	stp	xzr, xzr, [sp, #8]
     488:	str	xzr, [sp, #24]
     48c:	bl	0 <_ZN4llvm18StringTableBuilder15finalizeInOrderEv>
     490:	ldr	x1, [x19, #48]
     494:	add	x0, sp, #0x8
     498:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     49c:	ldr	x1, [sp, #8]
     4a0:	mov	x0, x20
     4a4:	bl	0 <_ZNK4llvm18StringTableBuilder5writeEPh>
     4a8:	ldp	x3, x8, [sp, #8]
     4ac:	mov	w1, #0x17                  	// #23
     4b0:	mov	w2, #0x1                   	// #1
     4b4:	mov	x0, x19
     4b8:	sub	x4, x8, x3
     4bc:	mov	w20, #0x1                   	// #1
     4c0:	bl	160 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     4c4:	strb	w20, [x19, #176]
     4c8:	ldr	x0, [sp, #8]
     4cc:	cbz	x0, 4d4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x74>
     4d0:	bl	0 <_ZdlPv>
     4d4:	ldp	x20, x19, [sp, #48]
     4d8:	ldp	x29, x30, [sp, #32]
     4dc:	add	sp, sp, #0x40
     4e0:	ret
     4e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4f0:	add	x0, x0, #0x0
     4f4:	add	x1, x1, #0x0
     4f8:	add	x3, x3, #0x0
     4fc:	mov	w2, #0x1142                	// #4418
     500:	bl	0 <__assert_fail>

0000000000000504 <_ZN4llvm13BitcodeWriter10copyStrtabENS_9StringRefE>:
     504:	stp	x29, x30, [sp, #-32]!
     508:	stp	x20, x19, [sp, #16]
     50c:	mov	x29, sp
     510:	mov	x4, x2
     514:	mov	x3, x1
     518:	mov	w1, #0x17                  	// #23
     51c:	mov	w2, #0x1                   	// #1
     520:	mov	x19, x0
     524:	mov	w20, #0x1                   	// #1
     528:	bl	160 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     52c:	strb	w20, [x19, #176]
     530:	ldp	x20, x19, [sp, #16]
     534:	ldp	x29, x30, [sp], #32
     538:	ret

000000000000053c <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>:
     53c:	stp	x29, x30, [sp, #-96]!
     540:	str	x28, [sp, #16]
     544:	stp	x26, x25, [sp, #32]
     548:	stp	x24, x23, [sp, #48]
     54c:	stp	x22, x21, [sp, #64]
     550:	stp	x20, x19, [sp, #80]
     554:	mov	x29, sp
     558:	sub	sp, sp, #0x320
     55c:	ldrb	w8, [x0, #176]
     560:	cbnz	w8, 640 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x104>
     564:	ldr	x8, [x1, #168]
     568:	mov	x23, x1
     56c:	cbnz	x8, 660 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x124>
     570:	str	x23, [sp]
     574:	ldp	x1, x8, [x0, #192]
     578:	mov	x19, x5
     57c:	mov	w22, w4
     580:	mov	x20, x3
     584:	mov	w21, w2
     588:	mov	x24, x0
     58c:	cmp	x1, x8
     590:	b.eq	5a8 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x6c>  // b.none
     594:	str	x23, [x1]
     598:	ldr	x8, [x24, #192]
     59c:	add	x8, x8, #0x8
     5a0:	str	x8, [x24, #192]
     5a4:	b	5b4 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x78>
     5a8:	add	x0, x24, #0xb8
     5ac:	mov	x2, sp
     5b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     5b4:	ldp	x26, x25, [x24]
     5b8:	add	x2, x24, #0x10
     5bc:	and	w4, w21, #0x1
     5c0:	mov	x0, sp
     5c4:	mov	x1, x23
     5c8:	mov	x3, x25
     5cc:	mov	x5, x20
     5d0:	and	w22, w22, #0x1
     5d4:	mov	x21, sp
     5d8:	bl	7f60 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>
     5dc:	add	x0, x21, #0x2a8
     5e0:	str	x26, [sp, #656]
     5e4:	strb	w22, [sp, #664]
     5e8:	str	x19, [sp, #672]
     5ec:	bl	0 <_ZN4llvm4SHA14initEv>
     5f0:	ldr	x8, [x25]
     5f4:	ldr	w9, [x25, #8]
     5f8:	mov	x0, sp
     5fc:	ldr	w8, [x8, #8]
     600:	add	x8, x9, x8, lsl #3
     604:	str	x8, [sp, #792]
     608:	bl	680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv>
     60c:	ldr	x1, [sp, #608]
     610:	add	x0, x21, #0x250
     614:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     618:	add	x0, x21, #0x18
     61c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     620:	add	sp, sp, #0x320
     624:	ldp	x20, x19, [sp, #80]
     628:	ldp	x22, x21, [sp, #64]
     62c:	ldp	x24, x23, [sp, #48]
     630:	ldp	x26, x25, [sp, #32]
     634:	ldr	x28, [sp, #16]
     638:	ldp	x29, x30, [sp], #96
     63c:	ret
     640:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     644:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     648:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     64c:	add	x0, x0, #0x0
     650:	add	x1, x1, #0x0
     654:	add	x3, x3, #0x0
     658:	mov	w2, #0x1158                	// #4440
     65c:	bl	0 <__assert_fail>
     660:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     664:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     668:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     66c:	add	x0, x0, #0x0
     670:	add	x1, x1, #0x0
     674:	add	x3, x3, #0x0
     678:	mov	w2, #0x115e                	// #4446
     67c:	bl	0 <__assert_fail>

0000000000000680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv>:
     680:	stp	d11, d10, [sp, #-128]!
     684:	stp	d9, d8, [sp, #16]
     688:	stp	x29, x30, [sp, #32]
     68c:	stp	x28, x27, [sp, #48]
     690:	stp	x26, x25, [sp, #64]
     694:	stp	x24, x23, [sp, #80]
     698:	stp	x22, x21, [sp, #96]
     69c:	stp	x20, x19, [sp, #112]
     6a0:	mov	x29, sp
     6a4:	sub	sp, sp, #0x4c0
     6a8:	ldr	x20, [x0]
     6ac:	mov	x19, x0
     6b0:	mov	w1, #0xd                   	// #13
     6b4:	mov	w2, #0x5                   	// #5
     6b8:	mov	x0, x20
     6bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     6c0:	mov	w0, #0x220                 	// #544
     6c4:	bl	0 <_Znwm>
     6c8:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     6cc:	ldr	x28, [x28]
     6d0:	movi	v9.2s, #0x1
     6d4:	add	x22, x0, #0x20
     6d8:	mov	x21, x0
     6dc:	add	x24, x28, #0x10
     6e0:	str	d9, [x0, #8]
     6e4:	str	x24, [x0]
     6e8:	mov	w2, #0x200                 	// #512
     6ec:	mov	x0, x22
     6f0:	mov	w1, wzr
     6f4:	bl	0 <memset>
     6f8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     6fc:	ldr	d8, [x8]
     700:	mov	x23, x21
     704:	str	x22, [x23, #16]!
     708:	mov	w9, #0x1                   	// #1
     70c:	mov	w25, #0xff                  	// #255
     710:	add	x1, sp, #0x2a8
     714:	mov	x0, x23
     718:	str	x9, [sp, #680]
     71c:	str	d8, [x21, #24]
     720:	strb	w25, [sp, #688]
     724:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     728:	mov	w8, #0x6                   	// #6
     72c:	add	x1, sp, #0x2a8
     730:	mov	x0, x23
     734:	str	xzr, [sp, #680]
     738:	strb	w8, [sp, #688]
     73c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     740:	mov	w8, #0x8                   	// #8
     744:	add	x1, sp, #0x2a8
     748:	mov	x0, x23
     74c:	str	xzr, [sp, #680]
     750:	strb	w8, [sp, #688]
     754:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     758:	mov	x0, x20
     75c:	mov	x1, x23
     760:	stp	x23, x21, [sp, #328]
     764:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     768:	add	x21, x20, #0x18
     76c:	add	x1, sp, #0x148
     770:	mov	x0, x21
     774:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     778:	ldp	x9, x8, [x20, #24]
     77c:	ldr	x0, [sp, #336]
     780:	sub	x8, x8, x9
     784:	lsr	x8, x8, #4
     788:	add	w22, w8, #0x3
     78c:	cbz	x0, 7ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x12c>
     790:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     794:	ldrb	w8, [sp, #688]
     798:	ldrb	w9, [sp, #688]
     79c:	orr	w25, w8, #0x1
     7a0:	and	w8, w9, #0xfffffff0
     7a4:	orr	w26, w8, #0x4
     7a8:	b	7b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x130>
     7ac:	mov	w26, #0x4                   	// #4
     7b0:	adrp	x2, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     7b4:	add	x2, x2, #0x0
     7b8:	mov	w1, #0x1                   	// #1
     7bc:	mov	w3, #0xa                   	// #10
     7c0:	mov	x0, x20
     7c4:	mov	w4, w22
     7c8:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
     7cc:	mov	w0, #0x220                 	// #544
     7d0:	bl	0 <_Znwm>
     7d4:	add	x23, x0, #0x20
     7d8:	mov	x22, x0
     7dc:	str	d9, [x0, #8]
     7e0:	str	x24, [x0]
     7e4:	mov	w2, #0x200                 	// #512
     7e8:	mov	x0, x23
     7ec:	mov	w1, wzr
     7f0:	bl	0 <memset>
     7f4:	mov	x24, x22
     7f8:	str	x23, [x24, #16]!
     7fc:	mov	w8, #0x2                   	// #2
     800:	add	x1, sp, #0x2a8
     804:	mov	x0, x24
     808:	str	d8, [x22, #24]
     80c:	str	x8, [sp, #680]
     810:	strb	w25, [sp, #688]
     814:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     818:	mov	w8, #0x6                   	// #6
     81c:	add	x1, sp, #0x2a8
     820:	mov	x0, x24
     824:	str	x8, [sp, #680]
     828:	strb	w26, [sp, #688]
     82c:	add	x23, sp, #0x2a8
     830:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     834:	mov	x0, x20
     838:	mov	x1, x24
     83c:	str	x24, [sp, #600]
     840:	str	x22, [sp, #608]
     844:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     848:	add	x1, sp, #0x258
     84c:	mov	x0, x21
     850:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     854:	ldp	x9, x8, [x20, #24]
     858:	ldr	x0, [sp, #608]
     85c:	sub	x8, x8, x9
     860:	lsr	x8, x8, #4
     864:	add	w21, w8, #0x3
     868:	cbz	x0, 870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f0>
     86c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     870:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     874:	ldr	d0, [x8]
     878:	add	x8, sp, #0xf0
     87c:	add	x22, x23, #0x10
     880:	add	x2, x8, #0x4
     884:	add	x0, sp, #0x2a8
     888:	add	x1, sp, #0xf0
     88c:	str	wzr, [sp, #240]
     890:	str	x22, [sp, #680]
     894:	str	d0, [sp, #688]
     898:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     89c:	add	x2, sp, #0x2a8
     8a0:	mov	w1, #0x2                   	// #2
     8a4:	mov	x0, x20
     8a8:	mov	w3, w21
     8ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     8b0:	mov	x0, x20
     8b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     8b8:	ldr	x0, [sp, #680]
     8bc:	cmp	x0, x22
     8c0:	b.eq	8c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x248>  // b.none
     8c4:	bl	0 <free>
     8c8:	ldr	x0, [x19]
     8cc:	mov	w1, #0x8                   	// #8
     8d0:	mov	w2, #0x3                   	// #3
     8d4:	mov	w23, #0x8                   	// #8
     8d8:	mov	w24, #0x3                   	// #3
     8dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     8e0:	ldr	x8, [x19, #656]
     8e4:	ldr	x0, [x19]
     8e8:	mov	w9, #0x2                   	// #2
     8ec:	add	x2, sp, #0x2a8
     8f0:	ldr	w8, [x8, #8]
     8f4:	str	x9, [sp, #328]
     8f8:	mov	w9, #0x1                   	// #1
     8fc:	mov	w1, #0x1                   	// #1
     900:	str	x8, [sp]
     904:	add	x8, sp, #0x148
     908:	mov	w3, wzr
     90c:	str	x8, [sp, #680]
     910:	str	x9, [sp, #688]
     914:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     918:	ldr	x0, [x19]
     91c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     920:	mov	w0, #0x220                 	// #544
     924:	bl	0 <_Znwm>
     928:	movi	v0.2s, #0x1
     92c:	mov	x25, x0
     930:	add	x8, x28, #0x10
     934:	add	x21, x0, #0x20
     938:	mov	x20, x0
     93c:	str	d0, [x25, #8]!
     940:	str	x8, [x0]
     944:	mov	w2, #0x200                 	// #512
     948:	mov	x0, x21
     94c:	mov	w1, wzr
     950:	bl	0 <memset>
     954:	ldrb	w8, [sp, #688]
     958:	mov	x22, x20
     95c:	str	x21, [x22, #16]!
     960:	add	x1, sp, #0x2a8
     964:	and	w8, w8, #0xf0
     968:	orr	w8, w8, #0x2
     96c:	mov	x0, x22
     970:	str	d8, [x20, #24]
     974:	str	x24, [sp, #680]
     978:	strb	w8, [sp, #688]
     97c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     980:	ldrb	w8, [sp, #688]
     984:	add	x1, sp, #0x2a8
     988:	mov	x0, x22
     98c:	str	x23, [sp, #680]
     990:	and	w8, w8, #0xf0
     994:	orr	w8, w8, #0x4
     998:	strb	w8, [sp, #688]
     99c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9a0:	ldrb	w8, [sp, #688]
     9a4:	add	x1, sp, #0x2a8
     9a8:	mov	x0, x22
     9ac:	str	xzr, [sp, #680]
     9b0:	and	w8, w8, #0xf0
     9b4:	orr	w8, w8, #0x6
     9b8:	strb	w8, [sp, #688]
     9bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9c0:	ldrb	w8, [sp, #688]
     9c4:	add	x1, sp, #0x2a8
     9c8:	mov	x0, x22
     9cc:	str	x23, [sp, #680]
     9d0:	and	w8, w8, #0xf0
     9d4:	orr	w8, w8, #0x2
     9d8:	strb	w8, [sp, #688]
     9dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9e0:	adrp	x24, 0 <__pthread_key_create>
     9e4:	ldr	x0, [x19]
     9e8:	ldr	x24, [x24]
     9ec:	str	x22, [sp, #680]
     9f0:	str	x20, [sp, #688]
     9f4:	cbz	x24, a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38c>
     9f8:	ldaxr	w8, [x25]
     9fc:	add	w8, w8, #0x1
     a00:	stlxr	w9, w8, [x25]
     a04:	cbnz	w9, 9f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x378>
     a08:	b	a18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x398>
     a0c:	ldr	w8, [x25]
     a10:	add	w8, w8, #0x1
     a14:	str	w8, [x25]
     a18:	add	x2, sp, #0x2a8
     a1c:	mov	w1, #0xe                   	// #14
     a20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     a24:	ldr	x8, [sp, #688]
     a28:	mov	w21, w0
     a2c:	cbz	x8, a38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b8>
     a30:	mov	x0, x8
     a34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     a38:	cmp	w21, #0x4
     a3c:	b.ne	51ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b6c>  // b.any
     a40:	mov	x0, x20
     a44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     a48:	mov	w0, #0x220                 	// #544
     a4c:	bl	0 <_Znwm>
     a50:	movi	v0.2s, #0x1
     a54:	mov	x23, x0
     a58:	add	x8, x28, #0x10
     a5c:	add	x21, x0, #0x20
     a60:	mov	x20, x0
     a64:	str	d0, [x23, #8]!
     a68:	str	x8, [x0]
     a6c:	mov	w2, #0x200                 	// #512
     a70:	mov	x0, x21
     a74:	mov	w1, wzr
     a78:	bl	0 <memset>
     a7c:	ldrb	w8, [sp, #336]
     a80:	mov	x22, x20
     a84:	str	x21, [x22, #16]!
     a88:	mov	w9, #0x1                   	// #1
     a8c:	orr	w8, w8, #0x1
     a90:	add	x1, sp, #0x148
     a94:	mov	x0, x22
     a98:	str	d8, [x20, #24]
     a9c:	str	x9, [sp, #328]
     aa0:	strb	w8, [sp, #336]
     aa4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     aa8:	ldrb	w8, [sp, #336]
     aac:	mov	w9, #0x8                   	// #8
     ab0:	add	x1, sp, #0x148
     ab4:	mov	x0, x22
     ab8:	and	w8, w8, #0xf0
     abc:	orr	w8, w8, #0x4
     ac0:	str	x9, [sp, #328]
     ac4:	strb	w8, [sp, #336]
     ac8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     acc:	ldrb	w8, [sp, #336]
     ad0:	add	x1, sp, #0x148
     ad4:	mov	x0, x22
     ad8:	str	xzr, [sp, #328]
     adc:	and	w8, w8, #0xf0
     ae0:	orr	w8, w8, #0x6
     ae4:	strb	w8, [sp, #336]
     ae8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     aec:	ldrb	w8, [sp, #336]
     af0:	mov	w9, #0x7                   	// #7
     af4:	add	x1, sp, #0x148
     af8:	mov	x0, x22
     afc:	and	w8, w8, #0xf0
     b00:	orr	w8, w8, #0x2
     b04:	str	x9, [sp, #328]
     b08:	strb	w8, [sp, #336]
     b0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     b10:	ldr	x0, [x19]
     b14:	stp	x22, x20, [sp, #328]
     b18:	cbz	x24, b30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b0>
     b1c:	ldaxr	w8, [x23]
     b20:	add	w8, w8, #0x1
     b24:	stlxr	w9, w8, [x23]
     b28:	cbnz	w9, b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49c>
     b2c:	b	b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4bc>
     b30:	ldr	w8, [x23]
     b34:	add	w8, w8, #0x1
     b38:	str	w8, [x23]
     b3c:	add	x2, sp, #0x148
     b40:	mov	w1, #0xe                   	// #14
     b44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     b48:	ldr	x8, [sp, #336]
     b4c:	mov	w21, w0
     b50:	cbz	x8, b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4dc>
     b54:	mov	x0, x8
     b58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     b5c:	cmp	w21, #0x5
     b60:	b.ne	5204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b84>  // b.any
     b64:	mov	x0, x20
     b68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     b6c:	mov	w0, #0x220                 	// #544
     b70:	bl	0 <_Znwm>
     b74:	movi	v0.2s, #0x1
     b78:	mov	x23, x0
     b7c:	add	x8, x28, #0x10
     b80:	add	x21, x0, #0x20
     b84:	mov	x20, x0
     b88:	str	d0, [x23, #8]!
     b8c:	str	x8, [x0]
     b90:	mov	w2, #0x200                 	// #512
     b94:	mov	x0, x21
     b98:	mov	w1, wzr
     b9c:	bl	0 <memset>
     ba0:	ldrb	w8, [sp, #608]
     ba4:	mov	x22, x20
     ba8:	str	x21, [x22, #16]!
     bac:	mov	w9, #0x1                   	// #1
     bb0:	orr	w8, w8, #0x1
     bb4:	add	x1, sp, #0x258
     bb8:	mov	x0, x22
     bbc:	str	d8, [x20, #24]
     bc0:	str	x9, [sp, #600]
     bc4:	strb	w8, [sp, #608]
     bc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bcc:	ldrb	w8, [sp, #608]
     bd0:	mov	w9, #0x8                   	// #8
     bd4:	add	x1, sp, #0x258
     bd8:	mov	x0, x22
     bdc:	and	w8, w8, #0xf0
     be0:	orr	w8, w8, #0x4
     be4:	str	x9, [sp, #600]
     be8:	strb	w8, [sp, #608]
     bec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bf0:	ldrb	w8, [sp, #608]
     bf4:	add	x1, sp, #0x258
     bf8:	mov	x0, x22
     bfc:	str	xzr, [sp, #600]
     c00:	and	w8, w8, #0xf0
     c04:	orr	w8, w8, #0x6
     c08:	strb	w8, [sp, #608]
     c0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c10:	ldrb	w8, [sp, #608]
     c14:	add	x1, sp, #0x258
     c18:	mov	x0, x22
     c1c:	str	xzr, [sp, #600]
     c20:	and	w8, w8, #0xf0
     c24:	orr	w8, w8, #0x8
     c28:	strb	w8, [sp, #608]
     c2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c30:	ldr	x0, [x19]
     c34:	str	x22, [sp, #600]
     c38:	str	x20, [sp, #608]
     c3c:	cbz	x24, c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>
     c40:	ldaxr	w8, [x23]
     c44:	add	w8, w8, #0x1
     c48:	stlxr	w9, w8, [x23]
     c4c:	cbnz	w9, c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c0>
     c50:	b	c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5e0>
     c54:	ldr	w8, [x23]
     c58:	add	w8, w8, #0x1
     c5c:	str	w8, [x23]
     c60:	add	x2, sp, #0x258
     c64:	mov	w1, #0xe                   	// #14
     c68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c6c:	ldr	x8, [sp, #608]
     c70:	mov	w21, w0
     c74:	cbz	x8, c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x600>
     c78:	mov	x0, x8
     c7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c80:	cmp	w21, #0x6
     c84:	b.ne	521c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b9c>  // b.any
     c88:	mov	x0, x20
     c8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c90:	mov	w0, #0x220                 	// #544
     c94:	bl	0 <_Znwm>
     c98:	movi	v0.2s, #0x1
     c9c:	mov	x23, x0
     ca0:	add	x8, x28, #0x10
     ca4:	add	x21, x0, #0x20
     ca8:	mov	x20, x0
     cac:	str	d0, [x23, #8]!
     cb0:	str	x8, [x0]
     cb4:	mov	w2, #0x200                 	// #512
     cb8:	mov	x0, x21
     cbc:	mov	w1, wzr
     cc0:	bl	0 <memset>
     cc4:	ldrb	w8, [sp, #248]
     cc8:	mov	x22, x20
     ccc:	str	x21, [x22, #16]!
     cd0:	mov	w9, #0x2                   	// #2
     cd4:	orr	w8, w8, #0x1
     cd8:	add	x1, sp, #0xf0
     cdc:	mov	x0, x22
     ce0:	str	d8, [x20, #24]
     ce4:	str	x9, [sp, #240]
     ce8:	strb	w8, [sp, #248]
     cec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     cf0:	ldrb	w8, [sp, #248]
     cf4:	mov	w9, #0x8                   	// #8
     cf8:	add	x1, sp, #0xf0
     cfc:	mov	x0, x22
     d00:	and	w8, w8, #0xf0
     d04:	orr	w8, w8, #0x4
     d08:	str	x9, [sp, #240]
     d0c:	strb	w8, [sp, #248]
     d10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d14:	ldrb	w8, [sp, #248]
     d18:	add	x1, sp, #0xf0
     d1c:	mov	x0, x22
     d20:	str	xzr, [sp, #240]
     d24:	and	w8, w8, #0xf0
     d28:	orr	w8, w8, #0x6
     d2c:	strb	w8, [sp, #248]
     d30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d34:	ldrb	w8, [sp, #248]
     d38:	add	x1, sp, #0xf0
     d3c:	mov	x0, x22
     d40:	str	xzr, [sp, #240]
     d44:	and	w8, w8, #0xf0
     d48:	orr	w8, w8, #0x8
     d4c:	strb	w8, [sp, #248]
     d50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d54:	ldr	x0, [x19]
     d58:	stp	x22, x20, [sp, #240]
     d5c:	cbz	x24, d74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x6f4>
     d60:	ldaxr	w8, [x23]
     d64:	add	w8, w8, #0x1
     d68:	stlxr	w9, w8, [x23]
     d6c:	cbnz	w9, d60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x6e0>
     d70:	b	d80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x700>
     d74:	ldr	w8, [x23]
     d78:	add	w8, w8, #0x1
     d7c:	str	w8, [x23]
     d80:	add	x2, sp, #0xf0
     d84:	mov	w1, #0xe                   	// #14
     d88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d8c:	ldr	x8, [sp, #248]
     d90:	mov	w21, w0
     d94:	cbz	x8, da0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x720>
     d98:	mov	x0, x8
     d9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     da0:	cmp	w21, #0x7
     da4:	b.ne	5234 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4bb4>  // b.any
     da8:	mov	x0, x20
     dac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     db0:	mov	w0, #0x220                 	// #544
     db4:	bl	0 <_Znwm>
     db8:	movi	v0.2s, #0x1
     dbc:	mov	x23, x0
     dc0:	add	x8, x28, #0x10
     dc4:	add	x20, x0, #0x20
     dc8:	mov	x21, x0
     dcc:	str	d0, [x23, #8]!
     dd0:	str	x8, [x0]
     dd4:	mov	w2, #0x200                 	// #512
     dd8:	mov	x0, x20
     ddc:	mov	w1, wzr
     de0:	bl	0 <memset>
     de4:	ldrb	w8, [sp, #320]
     de8:	mov	x22, x21
     dec:	str	x20, [x22, #16]!
     df0:	mov	w9, #0x1                   	// #1
     df4:	orr	w8, w8, #0x1
     df8:	add	x1, sp, #0x138
     dfc:	mov	x0, x22
     e00:	str	d8, [x21, #24]
     e04:	str	x9, [sp, #312]
     e08:	strb	w8, [sp, #320]
     e0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e10:	add	x20, x19, #0x18
     e14:	mov	x0, x20
     e18:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
     e1c:	ldrb	w8, [sp, #320]
     e20:	str	x0, [sp, #312]
     e24:	add	x1, sp, #0x138
     e28:	mov	x0, x22
     e2c:	and	w8, w8, #0xf0
     e30:	orr	w8, w8, #0x2
     e34:	strb	w8, [sp, #320]
     e38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e3c:	ldr	x0, [x19]
     e40:	stp	x22, x21, [sp, #312]
     e44:	cbz	x24, e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7dc>
     e48:	ldaxr	w8, [x23]
     e4c:	add	w8, w8, #0x1
     e50:	stlxr	w9, w8, [x23]
     e54:	cbnz	w9, e48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7c8>
     e58:	b	e68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e8>
     e5c:	ldr	w8, [x23]
     e60:	add	w8, w8, #0x1
     e64:	str	w8, [x23]
     e68:	add	x2, sp, #0x138
     e6c:	mov	w1, #0xb                   	// #11
     e70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e74:	ldr	x8, [sp, #320]
     e78:	mov	w22, w0
     e7c:	cbz	x8, e88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x808>
     e80:	mov	x0, x8
     e84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e88:	cmp	w22, #0x4
     e8c:	b.ne	524c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4bcc>  // b.any
     e90:	mov	x0, x21
     e94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e98:	mov	w0, #0x220                 	// #544
     e9c:	bl	0 <_Znwm>
     ea0:	movi	v0.2s, #0x1
     ea4:	mov	x25, x0
     ea8:	add	x8, x28, #0x10
     eac:	add	x22, x0, #0x20
     eb0:	mov	x21, x0
     eb4:	str	d0, [x25, #8]!
     eb8:	str	x8, [x0]
     ebc:	mov	w2, #0x200                 	// #512
     ec0:	mov	x0, x22
     ec4:	mov	w1, wzr
     ec8:	bl	0 <memset>
     ecc:	ldrb	w8, [sp, #304]
     ed0:	mov	x23, x21
     ed4:	str	x22, [x23, #16]!
     ed8:	mov	w9, #0x4                   	// #4
     edc:	orr	w8, w8, #0x1
     ee0:	add	x1, sp, #0x128
     ee4:	mov	x0, x23
     ee8:	str	d8, [x21, #24]
     eec:	str	x9, [sp, #296]
     ef0:	strb	w8, [sp, #304]
     ef4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     ef8:	ldrb	w8, [sp, #304]
     efc:	mov	w9, #0x8                   	// #8
     f00:	add	x1, sp, #0x128
     f04:	mov	x0, x23
     f08:	and	w8, w8, #0xf0
     f0c:	orr	w8, w8, #0x4
     f10:	str	x9, [sp, #296]
     f14:	strb	w8, [sp, #304]
     f18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     f1c:	ldr	x0, [x19]
     f20:	stp	x23, x21, [sp, #296]
     f24:	cbz	x24, f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x8bc>
     f28:	ldaxr	w8, [x25]
     f2c:	add	w8, w8, #0x1
     f30:	stlxr	w9, w8, [x25]
     f34:	cbnz	w9, f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x8a8>
     f38:	b	f48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x8c8>
     f3c:	ldr	w8, [x25]
     f40:	add	w8, w8, #0x1
     f44:	str	w8, [x25]
     f48:	add	x2, sp, #0x128
     f4c:	mov	w1, #0xb                   	// #11
     f50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     f54:	ldr	x8, [sp, #304]
     f58:	mov	w22, w0
     f5c:	cbz	x8, f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x8e8>
     f60:	mov	x0, x8
     f64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     f68:	cmp	w22, #0x5
     f6c:	b.ne	5264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4be4>  // b.any
     f70:	mov	x0, x21
     f74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     f78:	mov	w0, #0x220                 	// #544
     f7c:	bl	0 <_Znwm>
     f80:	movi	v0.2s, #0x1
     f84:	mov	x25, x0
     f88:	add	x8, x28, #0x10
     f8c:	add	x22, x0, #0x20
     f90:	mov	x21, x0
     f94:	str	d0, [x25, #8]!
     f98:	str	x8, [x0]
     f9c:	mov	w2, #0x200                 	// #512
     fa0:	mov	x0, x22
     fa4:	mov	w1, wzr
     fa8:	bl	0 <memset>
     fac:	ldrb	w8, [sp, #280]
     fb0:	mov	x23, x21
     fb4:	str	x22, [x23, #16]!
     fb8:	mov	w9, #0xb                   	// #11
     fbc:	orr	w8, w8, #0x1
     fc0:	add	x1, sp, #0x110
     fc4:	mov	x0, x23
     fc8:	str	d8, [x21, #24]
     fcc:	str	x9, [sp, #272]
     fd0:	strb	w8, [sp, #280]
     fd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     fd8:	ldrb	w8, [sp, #280]
     fdc:	mov	w9, #0x4                   	// #4
     fe0:	add	x1, sp, #0x110
     fe4:	mov	x0, x23
     fe8:	and	w8, w8, #0xf0
     fec:	orr	w8, w8, #0x2
     ff0:	str	x9, [sp, #272]
     ff4:	strb	w8, [sp, #280]
     ff8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     ffc:	mov	x0, x20
    1000:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    1004:	ldrb	w8, [sp, #280]
    1008:	str	x0, [sp, #272]
    100c:	add	x1, sp, #0x110
    1010:	mov	x0, x23
    1014:	and	w8, w8, #0xf0
    1018:	orr	w8, w8, #0x2
    101c:	strb	w8, [sp, #280]
    1020:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1024:	ldrb	w8, [sp, #280]
    1028:	mov	w9, #0x8                   	// #8
    102c:	add	x1, sp, #0x110
    1030:	mov	x0, x23
    1034:	and	w8, w8, #0xf0
    1038:	orr	w8, w8, #0x4
    103c:	str	x9, [sp, #272]
    1040:	strb	w8, [sp, #280]
    1044:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1048:	ldr	x0, [x19]
    104c:	stp	x23, x21, [sp, #272]
    1050:	cbz	x24, 1068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>
    1054:	ldaxr	w8, [x25]
    1058:	add	w8, w8, #0x1
    105c:	stlxr	w9, w8, [x25]
    1060:	cbnz	w9, 1054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9d4>
    1064:	b	1074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9f4>
    1068:	ldr	w8, [x25]
    106c:	add	w8, w8, #0x1
    1070:	str	w8, [x25]
    1074:	add	x2, sp, #0x110
    1078:	mov	w1, #0xb                   	// #11
    107c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1080:	ldr	x8, [sp, #280]
    1084:	mov	w22, w0
    1088:	cbz	x8, 1094 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xa14>
    108c:	mov	x0, x8
    1090:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1094:	cmp	w22, #0x6
    1098:	b.ne	527c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4bfc>  // b.any
    109c:	mov	x0, x21
    10a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    10a4:	mov	w0, #0x220                 	// #544
    10a8:	bl	0 <_Znwm>
    10ac:	movi	v0.2s, #0x1
    10b0:	mov	x25, x0
    10b4:	add	x8, x28, #0x10
    10b8:	add	x22, x0, #0x20
    10bc:	mov	x21, x0
    10c0:	str	d0, [x25, #8]!
    10c4:	str	x8, [x0]
    10c8:	mov	w2, #0x200                 	// #512
    10cc:	mov	x0, x22
    10d0:	mov	w1, wzr
    10d4:	bl	0 <memset>
    10d8:	ldrb	w8, [sp, #232]
    10dc:	mov	x23, x21
    10e0:	str	x22, [x23, #16]!
    10e4:	mov	w9, #0x2                   	// #2
    10e8:	orr	w8, w8, #0x1
    10ec:	add	x1, sp, #0xe0
    10f0:	mov	x0, x23
    10f4:	str	d8, [x21, #24]
    10f8:	str	x9, [sp, #224]
    10fc:	strb	w8, [sp, #232]
    1100:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1104:	ldr	x0, [x19]
    1108:	stp	x23, x21, [sp, #224]
    110c:	cbz	x24, 1124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xaa4>
    1110:	ldaxr	w8, [x25]
    1114:	add	w8, w8, #0x1
    1118:	stlxr	w9, w8, [x25]
    111c:	cbnz	w9, 1110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xa90>
    1120:	b	1130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xab0>
    1124:	ldr	w8, [x25]
    1128:	add	w8, w8, #0x1
    112c:	str	w8, [x25]
    1130:	add	x2, sp, #0xe0
    1134:	mov	w1, #0xb                   	// #11
    1138:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    113c:	ldr	x8, [sp, #232]
    1140:	mov	w22, w0
    1144:	cbz	x8, 1150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xad0>
    1148:	mov	x0, x8
    114c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1150:	cmp	w22, #0x7
    1154:	b.ne	5294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4c14>  // b.any
    1158:	mov	x0, x21
    115c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1160:	mov	w0, #0x220                 	// #544
    1164:	bl	0 <_Znwm>
    1168:	movi	v0.2s, #0x1
    116c:	mov	x25, x0
    1170:	add	x8, x28, #0x10
    1174:	add	x23, x0, #0x20
    1178:	mov	x21, x0
    117c:	str	d0, [x25, #8]!
    1180:	str	x8, [x0]
    1184:	mov	w2, #0x200                 	// #512
    1188:	mov	x0, x23
    118c:	mov	w1, wzr
    1190:	bl	0 <memset>
    1194:	ldrb	w8, [sp, #216]
    1198:	mov	x22, x21
    119c:	str	x23, [x22, #16]!
    11a0:	mov	w9, #0x14                  	// #20
    11a4:	orr	w8, w8, #0x1
    11a8:	add	x1, sp, #0xd0
    11ac:	mov	x0, x22
    11b0:	str	d8, [x21, #24]
    11b4:	str	x9, [sp, #208]
    11b8:	strb	w8, [sp, #216]
    11bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    11c0:	ldrb	w8, [sp, #216]
    11c4:	mov	w9, #0x6                   	// #6
    11c8:	add	x1, sp, #0xd0
    11cc:	mov	x0, x22
    11d0:	and	w8, w8, #0xf0
    11d4:	orr	w8, w8, #0x4
    11d8:	str	x9, [sp, #208]
    11dc:	strb	w8, [sp, #216]
    11e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    11e4:	mov	x0, x20
    11e8:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    11ec:	ldrb	w8, [sp, #216]
    11f0:	str	x0, [sp, #208]
    11f4:	add	x1, sp, #0xd0
    11f8:	mov	x0, x22
    11fc:	and	w8, w8, #0xf0
    1200:	orr	w8, w8, #0x2
    1204:	strb	w8, [sp, #216]
    1208:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    120c:	ldrb	w8, [sp, #216]
    1210:	mov	w9, #0x4                   	// #4
    1214:	add	x1, sp, #0xd0
    1218:	mov	x0, x22
    121c:	and	w8, w8, #0xf0
    1220:	orr	w8, w8, #0x4
    1224:	str	x9, [sp, #208]
    1228:	strb	w8, [sp, #216]
    122c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1230:	ldrb	w8, [sp, #216]
    1234:	mov	w9, #0x1                   	// #1
    1238:	add	x1, sp, #0xd0
    123c:	mov	x0, x22
    1240:	and	w8, w8, #0xf0
    1244:	orr	w8, w8, #0x2
    1248:	str	x9, [sp, #208]
    124c:	strb	w8, [sp, #216]
    1250:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1254:	ldr	x0, [x19]
    1258:	stp	x22, x21, [sp, #208]
    125c:	cbz	x24, 1274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xbf4>
    1260:	ldaxr	w8, [x25]
    1264:	add	w8, w8, #0x1
    1268:	stlxr	w9, w8, [x25]
    126c:	cbnz	w9, 1260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xbe0>
    1270:	b	1280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xc00>
    1274:	ldr	w8, [x25]
    1278:	add	w8, w8, #0x1
    127c:	str	w8, [x25]
    1280:	add	x2, sp, #0xd0
    1284:	mov	w1, #0xc                   	// #12
    1288:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    128c:	ldr	x8, [sp, #216]
    1290:	mov	w22, w0
    1294:	cbz	x8, 12a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xc20>
    1298:	mov	x0, x8
    129c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    12a0:	cmp	w22, #0x4
    12a4:	b.ne	52ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4c2c>  // b.any
    12a8:	mov	x0, x21
    12ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    12b0:	mov	w0, #0x220                 	// #544
    12b4:	bl	0 <_Znwm>
    12b8:	movi	v0.2s, #0x1
    12bc:	mov	x25, x0
    12c0:	add	x8, x28, #0x10
    12c4:	add	x22, x0, #0x20
    12c8:	mov	x21, x0
    12cc:	str	d0, [x25, #8]!
    12d0:	str	x8, [x0]
    12d4:	mov	w2, #0x200                 	// #512
    12d8:	mov	x0, x22
    12dc:	mov	w1, wzr
    12e0:	bl	0 <memset>
    12e4:	ldrb	w8, [sp, #200]
    12e8:	mov	x23, x21
    12ec:	str	x22, [x23, #16]!
    12f0:	mov	w9, #0x38                  	// #56
    12f4:	orr	w8, w8, #0x1
    12f8:	add	x1, sp, #0xc0
    12fc:	mov	x0, x23
    1300:	str	d8, [x21, #24]
    1304:	str	x9, [sp, #192]
    1308:	strb	w8, [sp, #200]
    130c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1310:	ldrb	w8, [sp, #200]
    1314:	mov	w9, #0x6                   	// #6
    1318:	add	x1, sp, #0xc0
    131c:	mov	x0, x23
    1320:	and	w8, w8, #0xf0
    1324:	orr	w8, w8, #0x4
    1328:	str	x9, [sp, #192]
    132c:	strb	w8, [sp, #200]
    1330:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1334:	ldrb	w8, [sp, #200]
    1338:	mov	w9, #0x4                   	// #4
    133c:	add	x1, sp, #0xc0
    1340:	mov	x0, x23
    1344:	and	w8, w8, #0xf0
    1348:	orr	w8, w8, #0x2
    134c:	str	x9, [sp, #192]
    1350:	strb	w8, [sp, #200]
    1354:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1358:	ldr	x0, [x19]
    135c:	stp	x23, x21, [sp, #192]
    1360:	cbz	x24, 1378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xcf8>
    1364:	ldaxr	w8, [x25]
    1368:	add	w8, w8, #0x1
    136c:	stlxr	w9, w8, [x25]
    1370:	cbnz	w9, 1364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xce4>
    1374:	b	1384 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd04>
    1378:	ldr	w8, [x25]
    137c:	add	w8, w8, #0x1
    1380:	str	w8, [x25]
    1384:	add	x2, sp, #0xc0
    1388:	mov	w1, #0xc                   	// #12
    138c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1390:	ldr	x8, [sp, #200]
    1394:	mov	w22, w0
    1398:	cbz	x8, 13a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd24>
    139c:	mov	x0, x8
    13a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    13a4:	cmp	w22, #0x5
    13a8:	b.ne	52c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4c44>  // b.any
    13ac:	mov	x0, x21
    13b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    13b4:	mov	w0, #0x220                 	// #544
    13b8:	bl	0 <_Znwm>
    13bc:	movi	v0.2s, #0x1
    13c0:	mov	x25, x0
    13c4:	add	x8, x28, #0x10
    13c8:	add	x22, x0, #0x20
    13cc:	mov	x21, x0
    13d0:	str	d0, [x25, #8]!
    13d4:	str	x8, [x0]
    13d8:	mov	w2, #0x200                 	// #512
    13dc:	mov	x0, x22
    13e0:	mov	w1, wzr
    13e4:	bl	0 <memset>
    13e8:	ldrb	w8, [sp, #184]
    13ec:	mov	x23, x21
    13f0:	str	x22, [x23, #16]!
    13f4:	mov	w9, #0x38                  	// #56
    13f8:	orr	w8, w8, #0x1
    13fc:	add	x1, sp, #0xb0
    1400:	mov	x0, x23
    1404:	str	d8, [x21, #24]
    1408:	str	x9, [sp, #176]
    140c:	strb	w8, [sp, #184]
    1410:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1414:	ldrb	w8, [sp, #184]
    1418:	mov	w9, #0x6                   	// #6
    141c:	add	x1, sp, #0xb0
    1420:	mov	x0, x23
    1424:	and	w8, w8, #0xf0
    1428:	orr	w8, w8, #0x4
    142c:	str	x9, [sp, #176]
    1430:	strb	w8, [sp, #184]
    1434:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1438:	ldrb	w8, [sp, #184]
    143c:	mov	w9, #0x4                   	// #4
    1440:	add	x1, sp, #0xb0
    1444:	mov	x0, x23
    1448:	and	w8, w8, #0xf0
    144c:	orr	w8, w8, #0x2
    1450:	str	x9, [sp, #176]
    1454:	strb	w8, [sp, #184]
    1458:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    145c:	ldrb	w8, [sp, #184]
    1460:	mov	w9, #0x8                   	// #8
    1464:	add	x1, sp, #0xb0
    1468:	mov	x0, x23
    146c:	and	w8, w8, #0xf0
    1470:	orr	w8, w8, #0x2
    1474:	str	x9, [sp, #176]
    1478:	strb	w8, [sp, #184]
    147c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1480:	ldr	x0, [x19]
    1484:	stp	x23, x21, [sp, #176]
    1488:	cbz	x24, 14a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xe20>
    148c:	ldaxr	w8, [x25]
    1490:	add	w8, w8, #0x1
    1494:	stlxr	w9, w8, [x25]
    1498:	cbnz	w9, 148c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xe0c>
    149c:	b	14ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xe2c>
    14a0:	ldr	w8, [x25]
    14a4:	add	w8, w8, #0x1
    14a8:	str	w8, [x25]
    14ac:	add	x2, sp, #0xb0
    14b0:	mov	w1, #0xc                   	// #12
    14b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    14b8:	ldr	x8, [sp, #184]
    14bc:	mov	w22, w0
    14c0:	cbz	x8, 14cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xe4c>
    14c4:	mov	x0, x8
    14c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    14cc:	cmp	w22, #0x6
    14d0:	b.ne	52dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4c5c>  // b.any
    14d4:	mov	x0, x21
    14d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    14dc:	mov	w0, #0x220                 	// #544
    14e0:	bl	0 <_Znwm>
    14e4:	movi	v0.2s, #0x1
    14e8:	mov	x25, x0
    14ec:	add	x8, x28, #0x10
    14f0:	add	x22, x0, #0x20
    14f4:	mov	x21, x0
    14f8:	str	d0, [x25, #8]!
    14fc:	str	x8, [x0]
    1500:	mov	w2, #0x200                 	// #512
    1504:	mov	x0, x22
    1508:	mov	w1, wzr
    150c:	bl	0 <memset>
    1510:	ldrb	w8, [sp, #168]
    1514:	mov	x23, x21
    1518:	str	x22, [x23, #16]!
    151c:	mov	w9, #0x2                   	// #2
    1520:	orr	w8, w8, #0x1
    1524:	add	x1, sp, #0xa0
    1528:	mov	x0, x23
    152c:	str	d8, [x21, #24]
    1530:	str	x9, [sp, #160]
    1534:	strb	w8, [sp, #168]
    1538:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    153c:	ldrb	w8, [sp, #168]
    1540:	mov	w22, #0x6                   	// #6
    1544:	add	x1, sp, #0xa0
    1548:	mov	x0, x23
    154c:	and	w8, w8, #0xf0
    1550:	orr	w8, w8, #0x4
    1554:	str	x22, [sp, #160]
    1558:	strb	w8, [sp, #168]
    155c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1560:	ldrb	w8, [sp, #168]
    1564:	add	x1, sp, #0xa0
    1568:	mov	x0, x23
    156c:	str	x22, [sp, #160]
    1570:	and	w8, w8, #0xf0
    1574:	orr	w8, w8, #0x4
    1578:	strb	w8, [sp, #168]
    157c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1580:	ldrb	w8, [sp, #168]
    1584:	mov	w9, #0x4                   	// #4
    1588:	add	x1, sp, #0xa0
    158c:	mov	x0, x23
    1590:	and	w8, w8, #0xf0
    1594:	orr	w8, w8, #0x2
    1598:	str	x9, [sp, #160]
    159c:	strb	w8, [sp, #168]
    15a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    15a4:	ldr	x0, [x19]
    15a8:	stp	x23, x21, [sp, #160]
    15ac:	cbz	x24, 15c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf44>
    15b0:	ldaxr	w8, [x25]
    15b4:	add	w8, w8, #0x1
    15b8:	stlxr	w9, w8, [x25]
    15bc:	cbnz	w9, 15b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf30>
    15c0:	b	15d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf50>
    15c4:	ldr	w8, [x25]
    15c8:	add	w8, w8, #0x1
    15cc:	str	w8, [x25]
    15d0:	add	x2, sp, #0xa0
    15d4:	mov	w1, #0xc                   	// #12
    15d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    15dc:	ldr	x8, [sp, #168]
    15e0:	mov	w22, w0
    15e4:	cbz	x8, 15f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf70>
    15e8:	mov	x0, x8
    15ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    15f0:	cmp	w22, #0x7
    15f4:	b.ne	52f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4c74>  // b.any
    15f8:	mov	x0, x21
    15fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1600:	mov	w0, #0x220                 	// #544
    1604:	bl	0 <_Znwm>
    1608:	movi	v0.2s, #0x1
    160c:	mov	x25, x0
    1610:	add	x8, x28, #0x10
    1614:	add	x23, x0, #0x20
    1618:	mov	x21, x0
    161c:	str	d0, [x25, #8]!
    1620:	str	x8, [x0]
    1624:	mov	w2, #0x200                 	// #512
    1628:	mov	x0, x23
    162c:	mov	w1, wzr
    1630:	bl	0 <memset>
    1634:	ldrb	w8, [sp, #152]
    1638:	mov	x22, x21
    163c:	str	x23, [x22, #16]!
    1640:	mov	w9, #0x2                   	// #2
    1644:	orr	w8, w8, #0x1
    1648:	add	x1, sp, #0x90
    164c:	mov	x0, x22
    1650:	str	d8, [x21, #24]
    1654:	str	x9, [sp, #144]
    1658:	strb	w8, [sp, #152]
    165c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1660:	ldrb	w8, [sp, #152]
    1664:	mov	w23, #0x6                   	// #6
    1668:	add	x1, sp, #0x90
    166c:	mov	x0, x22
    1670:	and	w8, w8, #0xf0
    1674:	orr	w8, w8, #0x4
    1678:	str	x23, [sp, #144]
    167c:	strb	w8, [sp, #152]
    1680:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1684:	ldrb	w8, [sp, #152]
    1688:	add	x1, sp, #0x90
    168c:	mov	x0, x22
    1690:	str	x23, [sp, #144]
    1694:	and	w8, w8, #0xf0
    1698:	orr	w8, w8, #0x4
    169c:	strb	w8, [sp, #152]
    16a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    16a4:	ldrb	w8, [sp, #152]
    16a8:	mov	w9, #0x4                   	// #4
    16ac:	add	x1, sp, #0x90
    16b0:	mov	x0, x22
    16b4:	and	w8, w8, #0xf0
    16b8:	orr	w8, w8, #0x2
    16bc:	str	x9, [sp, #144]
    16c0:	strb	w8, [sp, #152]
    16c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    16c8:	ldrb	w8, [sp, #152]
    16cc:	mov	w9, #0x8                   	// #8
    16d0:	add	x1, sp, #0x90
    16d4:	mov	x0, x22
    16d8:	and	w8, w8, #0xf0
    16dc:	orr	w8, w8, #0x2
    16e0:	str	x9, [sp, #144]
    16e4:	strb	w8, [sp, #152]
    16e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    16ec:	ldr	x0, [x19]
    16f0:	stp	x22, x21, [sp, #144]
    16f4:	cbz	x24, 170c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x108c>
    16f8:	ldaxr	w8, [x25]
    16fc:	add	w8, w8, #0x1
    1700:	stlxr	w9, w8, [x25]
    1704:	cbnz	w9, 16f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1078>
    1708:	b	1718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1098>
    170c:	ldr	w8, [x25]
    1710:	add	w8, w8, #0x1
    1714:	str	w8, [x25]
    1718:	add	x2, sp, #0x90
    171c:	mov	w1, #0xc                   	// #12
    1720:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1724:	ldr	x8, [sp, #152]
    1728:	mov	w22, w0
    172c:	cbz	x8, 1738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x10b8>
    1730:	mov	x0, x8
    1734:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1738:	cmp	w22, #0x8
    173c:	b.ne	530c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4c8c>  // b.any
    1740:	mov	x0, x21
    1744:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1748:	mov	w0, #0x220                 	// #544
    174c:	bl	0 <_Znwm>
    1750:	movi	v0.2s, #0x1
    1754:	mov	x25, x0
    1758:	add	x8, x28, #0x10
    175c:	add	x22, x0, #0x20
    1760:	mov	x21, x0
    1764:	str	d0, [x25, #8]!
    1768:	str	x8, [x0]
    176c:	mov	w2, #0x200                 	// #512
    1770:	mov	x0, x22
    1774:	mov	w1, wzr
    1778:	bl	0 <memset>
    177c:	ldrb	w8, [sp, #136]
    1780:	mov	x23, x21
    1784:	str	x22, [x23, #16]!
    1788:	mov	w9, #0x3                   	// #3
    178c:	orr	w8, w8, #0x1
    1790:	add	x1, sp, #0x80
    1794:	mov	x0, x23
    1798:	str	d8, [x21, #24]
    179c:	str	x9, [sp, #128]
    17a0:	strb	w8, [sp, #136]
    17a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    17a8:	ldrb	w8, [sp, #136]
    17ac:	mov	w9, #0x6                   	// #6
    17b0:	add	x1, sp, #0x80
    17b4:	mov	x0, x23
    17b8:	and	w8, w8, #0xf0
    17bc:	orr	w8, w8, #0x4
    17c0:	str	x9, [sp, #128]
    17c4:	strb	w8, [sp, #136]
    17c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    17cc:	mov	x0, x20
    17d0:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    17d4:	ldrb	w8, [sp, #136]
    17d8:	str	x0, [sp, #128]
    17dc:	add	x1, sp, #0x80
    17e0:	mov	x0, x23
    17e4:	and	w8, w8, #0xf0
    17e8:	orr	w8, w8, #0x2
    17ec:	strb	w8, [sp, #136]
    17f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    17f4:	ldrb	w8, [sp, #136]
    17f8:	mov	w9, #0x4                   	// #4
    17fc:	add	x1, sp, #0x80
    1800:	mov	x0, x23
    1804:	and	w8, w8, #0xf0
    1808:	orr	w8, w8, #0x2
    180c:	str	x9, [sp, #128]
    1810:	strb	w8, [sp, #136]
    1814:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1818:	ldr	x0, [x19]
    181c:	stp	x23, x21, [sp, #128]
    1820:	cbz	x24, 1838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x11b8>
    1824:	ldaxr	w8, [x25]
    1828:	add	w8, w8, #0x1
    182c:	stlxr	w9, w8, [x25]
    1830:	cbnz	w9, 1824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x11a4>
    1834:	b	1844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x11c4>
    1838:	ldr	w8, [x25]
    183c:	add	w8, w8, #0x1
    1840:	str	w8, [x25]
    1844:	add	x2, sp, #0x80
    1848:	mov	w1, #0xc                   	// #12
    184c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1850:	ldr	x8, [sp, #136]
    1854:	mov	w22, w0
    1858:	cbz	x8, 1864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x11e4>
    185c:	mov	x0, x8
    1860:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1864:	cmp	w22, #0x9
    1868:	b.ne	5324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4ca4>  // b.any
    186c:	mov	x0, x21
    1870:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1874:	mov	w0, #0x220                 	// #544
    1878:	bl	0 <_Znwm>
    187c:	movi	v0.2s, #0x1
    1880:	mov	x25, x0
    1884:	add	x8, x28, #0x10
    1888:	add	x22, x0, #0x20
    188c:	mov	x21, x0
    1890:	str	d0, [x25, #8]!
    1894:	str	x8, [x0]
    1898:	mov	w2, #0x200                 	// #512
    189c:	mov	x0, x22
    18a0:	mov	w1, wzr
    18a4:	bl	0 <memset>
    18a8:	ldrb	w8, [sp, #120]
    18ac:	mov	x23, x21
    18b0:	str	x22, [x23, #16]!
    18b4:	mov	w9, #0xa                   	// #10
    18b8:	orr	w8, w8, #0x1
    18bc:	add	x1, sp, #0x70
    18c0:	mov	x0, x23
    18c4:	str	d8, [x21, #24]
    18c8:	str	x9, [sp, #112]
    18cc:	strb	w8, [sp, #120]
    18d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    18d4:	ldr	x0, [x19]
    18d8:	stp	x23, x21, [sp, #112]
    18dc:	cbz	x24, 18f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1274>
    18e0:	ldaxr	w8, [x25]
    18e4:	add	w8, w8, #0x1
    18e8:	stlxr	w9, w8, [x25]
    18ec:	cbnz	w9, 18e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1260>
    18f0:	b	1900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1280>
    18f4:	ldr	w8, [x25]
    18f8:	add	w8, w8, #0x1
    18fc:	str	w8, [x25]
    1900:	add	x2, sp, #0x70
    1904:	mov	w1, #0xc                   	// #12
    1908:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    190c:	ldr	x8, [sp, #120]
    1910:	mov	w22, w0
    1914:	cbz	x8, 1920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x12a0>
    1918:	mov	x0, x8
    191c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1920:	cmp	w22, #0xa
    1924:	b.ne	533c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4cbc>  // b.any
    1928:	mov	x0, x21
    192c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1930:	mov	w0, #0x220                 	// #544
    1934:	bl	0 <_Znwm>
    1938:	movi	v0.2s, #0x1
    193c:	mov	x25, x0
    1940:	add	x8, x28, #0x10
    1944:	add	x22, x0, #0x20
    1948:	mov	x21, x0
    194c:	str	d0, [x25, #8]!
    1950:	str	x8, [x0]
    1954:	mov	w2, #0x200                 	// #512
    1958:	mov	x0, x22
    195c:	mov	w1, wzr
    1960:	bl	0 <memset>
    1964:	ldrb	w8, [sp, #104]
    1968:	mov	x23, x21
    196c:	str	x22, [x23, #16]!
    1970:	mov	w9, #0xa                   	// #10
    1974:	orr	w8, w8, #0x1
    1978:	add	x1, sp, #0x60
    197c:	mov	x0, x23
    1980:	str	d8, [x21, #24]
    1984:	str	x9, [sp, #96]
    1988:	strb	w8, [sp, #104]
    198c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1990:	ldrb	w8, [sp, #104]
    1994:	mov	w9, #0x6                   	// #6
    1998:	add	x1, sp, #0x60
    199c:	mov	x0, x23
    19a0:	and	w8, w8, #0xf0
    19a4:	orr	w8, w8, #0x4
    19a8:	str	x9, [sp, #96]
    19ac:	strb	w8, [sp, #104]
    19b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    19b4:	ldr	x0, [x19]
    19b8:	stp	x23, x21, [sp, #96]
    19bc:	cbz	x24, 19d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1354>
    19c0:	ldaxr	w8, [x25]
    19c4:	add	w8, w8, #0x1
    19c8:	stlxr	w9, w8, [x25]
    19cc:	cbnz	w9, 19c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1340>
    19d0:	b	19e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1360>
    19d4:	ldr	w8, [x25]
    19d8:	add	w8, w8, #0x1
    19dc:	str	w8, [x25]
    19e0:	add	x2, sp, #0x60
    19e4:	mov	w1, #0xc                   	// #12
    19e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    19ec:	ldr	x8, [sp, #104]
    19f0:	mov	w22, w0
    19f4:	cbz	x8, 1a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1380>
    19f8:	mov	x0, x8
    19fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1a00:	cmp	w22, #0xb
    1a04:	b.ne	5354 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4cd4>  // b.any
    1a08:	mov	x0, x21
    1a0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1a10:	mov	w0, #0x220                 	// #544
    1a14:	bl	0 <_Znwm>
    1a18:	movi	v0.2s, #0x1
    1a1c:	mov	x25, x0
    1a20:	add	x8, x28, #0x10
    1a24:	add	x22, x0, #0x20
    1a28:	mov	x21, x0
    1a2c:	str	d0, [x25, #8]!
    1a30:	str	x8, [x0]
    1a34:	mov	w2, #0x200                 	// #512
    1a38:	mov	x0, x22
    1a3c:	mov	w1, wzr
    1a40:	bl	0 <memset>
    1a44:	ldrb	w8, [sp, #88]
    1a48:	mov	x23, x21
    1a4c:	str	x22, [x23, #16]!
    1a50:	mov	w9, #0xf                   	// #15
    1a54:	orr	w8, w8, #0x1
    1a58:	add	x1, sp, #0x50
    1a5c:	mov	x0, x23
    1a60:	str	d8, [x21, #24]
    1a64:	str	x9, [sp, #80]
    1a68:	strb	w8, [sp, #88]
    1a6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1a70:	ldr	x0, [x19]
    1a74:	stp	x23, x21, [sp, #80]
    1a78:	cbz	x24, 1a90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1410>
    1a7c:	ldaxr	w8, [x25]
    1a80:	add	w8, w8, #0x1
    1a84:	stlxr	w9, w8, [x25]
    1a88:	cbnz	w9, 1a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13fc>
    1a8c:	b	1a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x141c>
    1a90:	ldr	w8, [x25]
    1a94:	add	w8, w8, #0x1
    1a98:	str	w8, [x25]
    1a9c:	add	x2, sp, #0x50
    1aa0:	mov	w1, #0xc                   	// #12
    1aa4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1aa8:	ldr	x8, [sp, #88]
    1aac:	mov	w22, w0
    1ab0:	cbz	x8, 1abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x143c>
    1ab4:	mov	x0, x8
    1ab8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1abc:	cmp	w22, #0xc
    1ac0:	b.ne	536c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4cec>  // b.any
    1ac4:	mov	x0, x21
    1ac8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1acc:	mov	w0, #0x220                 	// #544
    1ad0:	bl	0 <_Znwm>
    1ad4:	movi	v0.2s, #0x1
    1ad8:	mov	x25, x0
    1adc:	add	x8, x28, #0x10
    1ae0:	add	x23, x0, #0x20
    1ae4:	mov	x21, x0
    1ae8:	str	d0, [x25, #8]!
    1aec:	str	x8, [x0]
    1af0:	mov	w2, #0x200                 	// #512
    1af4:	mov	x0, x23
    1af8:	mov	w1, wzr
    1afc:	bl	0 <memset>
    1b00:	ldrb	w8, [sp, #72]
    1b04:	mov	x22, x21
    1b08:	str	x23, [x22, #16]!
    1b0c:	mov	w9, #0x2b                  	// #43
    1b10:	orr	w8, w8, #0x1
    1b14:	add	x1, sp, #0x40
    1b18:	mov	x0, x22
    1b1c:	str	d8, [x21, #24]
    1b20:	str	x9, [sp, #64]
    1b24:	strb	w8, [sp, #72]
    1b28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1b2c:	ldrb	w8, [sp, #72]
    1b30:	mov	w9, #0x1                   	// #1
    1b34:	add	x1, sp, #0x40
    1b38:	mov	x0, x22
    1b3c:	and	w8, w8, #0xf0
    1b40:	orr	w8, w8, #0x2
    1b44:	str	x9, [sp, #64]
    1b48:	strb	w8, [sp, #72]
    1b4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1b50:	ldp	x9, x8, [x19, #80]
    1b54:	ldrb	w10, [sp, #72]
    1b58:	mov	w11, #0x20                  	// #32
    1b5c:	add	x1, sp, #0x40
    1b60:	sub	x8, x8, x9
    1b64:	lsr	x8, x8, #3
    1b68:	and	w9, w10, #0xf0
    1b6c:	clz	w8, w8
    1b70:	orr	w9, w9, #0x2
    1b74:	sub	w8, w11, w8
    1b78:	mov	x0, x22
    1b7c:	str	x8, [sp, #64]
    1b80:	strb	w9, [sp, #72]
    1b84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1b88:	ldrb	w8, [sp, #72]
    1b8c:	add	x1, sp, #0x40
    1b90:	mov	x0, x22
    1b94:	str	xzr, [sp, #64]
    1b98:	and	w8, w8, #0xf0
    1b9c:	orr	w8, w8, #0x6
    1ba0:	strb	w8, [sp, #72]
    1ba4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1ba8:	ldrb	w8, [sp, #72]
    1bac:	mov	w9, #0x6                   	// #6
    1bb0:	add	x1, sp, #0x40
    1bb4:	mov	x0, x22
    1bb8:	and	w8, w8, #0xf0
    1bbc:	orr	w8, w8, #0x4
    1bc0:	str	x9, [sp, #64]
    1bc4:	strb	w8, [sp, #72]
    1bc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1bcc:	ldr	x0, [x19]
    1bd0:	stp	x22, x21, [sp, #64]
    1bd4:	cbz	x24, 1bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x156c>
    1bd8:	ldaxr	w8, [x25]
    1bdc:	add	w8, w8, #0x1
    1be0:	stlxr	w9, w8, [x25]
    1be4:	cbnz	w9, 1bd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1558>
    1be8:	b	1bf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1578>
    1bec:	ldr	w8, [x25]
    1bf0:	add	w8, w8, #0x1
    1bf4:	str	w8, [x25]
    1bf8:	add	x2, sp, #0x40
    1bfc:	mov	w1, #0xc                   	// #12
    1c00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c04:	ldr	x8, [sp, #72]
    1c08:	mov	w22, w0
    1c0c:	cbz	x8, 1c18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1598>
    1c10:	mov	x0, x8
    1c14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c18:	cmp	w22, #0xd
    1c1c:	b.ne	5384 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4d04>  // b.any
    1c20:	mov	x0, x21
    1c24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c28:	ldr	x0, [x19]
    1c2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c30:	ldr	x0, [x19]
    1c34:	mov	w1, #0x11                  	// #17
    1c38:	mov	w2, #0x4                   	// #4
    1c3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c40:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c44:	ldr	d9, [x8]
    1c48:	add	x8, sp, #0x2a8
    1c4c:	add	x8, x8, #0x10
    1c50:	mov	x0, x20
    1c54:	str	x8, [sp, #680]
    1c58:	str	d9, [sp, #688]
    1c5c:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    1c60:	mov	x21, x0
    1c64:	mov	w0, #0x220                 	// #544
    1c68:	bl	0 <_Znwm>
    1c6c:	movi	v10.2s, #0x1
    1c70:	add	x25, x28, #0x10
    1c74:	add	x23, x0, #0x20
    1c78:	mov	x22, x0
    1c7c:	str	d10, [x0, #8]
    1c80:	str	x25, [x0]
    1c84:	mov	w2, #0x200                 	// #512
    1c88:	mov	x0, x23
    1c8c:	mov	w1, wzr
    1c90:	bl	0 <memset>
    1c94:	mov	x24, x22
    1c98:	str	x23, [x24, #16]!
    1c9c:	mov	w8, #0x8                   	// #8
    1ca0:	mov	w26, #0xff                  	// #255
    1ca4:	add	x1, sp, #0x148
    1ca8:	mov	x0, x24
    1cac:	str	d8, [x22, #24]
    1cb0:	str	x8, [sp, #328]
    1cb4:	strb	w26, [sp, #336]
    1cb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1cbc:	mov	w8, #0x2                   	// #2
    1cc0:	add	x1, sp, #0x148
    1cc4:	mov	x0, x24
    1cc8:	str	x21, [sp, #328]
    1ccc:	strb	w8, [sp, #336]
    1cd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1cd4:	add	x1, sp, #0x148
    1cd8:	mov	x0, x24
    1cdc:	str	xzr, [sp, #328]
    1ce0:	strb	w26, [sp, #336]
    1ce4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1ce8:	ldr	x23, [x19]
    1cec:	mov	x1, x24
    1cf0:	stp	x24, x22, [sp, #328]
    1cf4:	mov	x0, x23
    1cf8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1cfc:	add	x0, x23, #0x18
    1d00:	add	x1, sp, #0x148
    1d04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1d08:	ldr	x8, [x23, #32]
    1d0c:	ldr	x0, [sp, #336]
    1d10:	str	x8, [sp, #56]
    1d14:	ldr	x8, [x23, #24]
    1d18:	str	x8, [sp, #48]
    1d1c:	cbz	x0, 1d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16a4>
    1d20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1d24:	mov	w0, #0x220                 	// #544
    1d28:	bl	0 <_Znwm>
    1d2c:	add	x23, x0, #0x20
    1d30:	mov	x22, x0
    1d34:	str	d10, [x0, #8]
    1d38:	str	x25, [x0]
    1d3c:	mov	w2, #0x200                 	// #512
    1d40:	mov	x0, x23
    1d44:	mov	w1, wzr
    1d48:	bl	0 <memset>
    1d4c:	ldrb	w8, [sp, #608]
    1d50:	mov	x24, x22
    1d54:	str	x23, [x24, #16]!
    1d58:	mov	w9, #0x15                  	// #21
    1d5c:	orr	w8, w8, #0x1
    1d60:	add	x1, sp, #0x258
    1d64:	mov	x0, x24
    1d68:	str	d8, [x22, #24]
    1d6c:	str	x9, [sp, #600]
    1d70:	strb	w8, [sp, #608]
    1d74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1d78:	ldrb	w8, [sp, #608]
    1d7c:	mov	w9, #0x1                   	// #1
    1d80:	add	x1, sp, #0x258
    1d84:	mov	x0, x24
    1d88:	and	w8, w8, #0xf0
    1d8c:	orr	w8, w8, #0x2
    1d90:	str	x9, [sp, #600]
    1d94:	strb	w8, [sp, #608]
    1d98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1d9c:	ldrb	w8, [sp, #608]
    1da0:	add	x1, sp, #0x258
    1da4:	mov	x0, x24
    1da8:	str	xzr, [sp, #600]
    1dac:	and	w8, w8, #0xf0
    1db0:	orr	w8, w8, #0x6
    1db4:	strb	w8, [sp, #608]
    1db8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1dbc:	ldrb	w8, [sp, #608]
    1dc0:	add	x1, sp, #0x258
    1dc4:	mov	x0, x24
    1dc8:	str	x21, [sp, #600]
    1dcc:	and	w8, w8, #0xf0
    1dd0:	orr	w8, w8, #0x2
    1dd4:	strb	w8, [sp, #608]
    1dd8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1ddc:	ldr	x23, [x19]
    1de0:	mov	x1, x24
    1de4:	str	x24, [sp, #600]
    1de8:	str	x22, [sp, #608]
    1dec:	mov	x0, x23
    1df0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1df4:	add	x0, x23, #0x18
    1df8:	add	x1, sp, #0x258
    1dfc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1e00:	ldr	x8, [x23, #32]
    1e04:	ldr	x0, [sp, #608]
    1e08:	str	x8, [sp, #40]
    1e0c:	ldr	x8, [x23, #24]
    1e10:	str	x8, [sp, #32]
    1e14:	cbz	x0, 1e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x179c>
    1e18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1e1c:	mov	w0, #0x220                 	// #544
    1e20:	bl	0 <_Znwm>
    1e24:	movi	v10.2s, #0x1
    1e28:	add	x25, x28, #0x10
    1e2c:	add	x23, x0, #0x20
    1e30:	mov	x22, x0
    1e34:	str	d10, [x0, #8]
    1e38:	str	x25, [x0]
    1e3c:	mov	w2, #0x200                 	// #512
    1e40:	mov	x0, x23
    1e44:	mov	w1, wzr
    1e48:	bl	0 <memset>
    1e4c:	ldrb	w8, [sp, #248]
    1e50:	mov	x24, x22
    1e54:	str	x23, [x24, #16]!
    1e58:	mov	w9, #0x12                  	// #18
    1e5c:	orr	w8, w8, #0x1
    1e60:	add	x1, sp, #0xf0
    1e64:	mov	x0, x24
    1e68:	str	d8, [x22, #24]
    1e6c:	str	x9, [sp, #240]
    1e70:	strb	w8, [sp, #248]
    1e74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1e78:	ldrb	w8, [sp, #248]
    1e7c:	mov	w9, #0x1                   	// #1
    1e80:	add	x1, sp, #0xf0
    1e84:	mov	x0, x24
    1e88:	and	w8, w8, #0xf0
    1e8c:	orr	w8, w8, #0x2
    1e90:	str	x9, [sp, #240]
    1e94:	strb	w8, [sp, #248]
    1e98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1e9c:	ldrb	w8, [sp, #248]
    1ea0:	add	x1, sp, #0xf0
    1ea4:	mov	x0, x24
    1ea8:	str	xzr, [sp, #240]
    1eac:	and	w8, w8, #0xf0
    1eb0:	orr	w8, w8, #0x6
    1eb4:	strb	w8, [sp, #248]
    1eb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1ebc:	ldrb	w8, [sp, #248]
    1ec0:	add	x1, sp, #0xf0
    1ec4:	mov	x0, x24
    1ec8:	str	x21, [sp, #240]
    1ecc:	and	w8, w8, #0xf0
    1ed0:	orr	w8, w8, #0x2
    1ed4:	strb	w8, [sp, #248]
    1ed8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1edc:	ldr	x23, [x19]
    1ee0:	mov	x1, x24
    1ee4:	stp	x24, x22, [sp, #240]
    1ee8:	mov	x0, x23
    1eec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1ef0:	add	x0, x23, #0x18
    1ef4:	add	x1, sp, #0xf0
    1ef8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1efc:	ldr	x8, [x23, #32]
    1f00:	ldr	x0, [sp, #248]
    1f04:	str	x8, [sp, #24]
    1f08:	ldr	x8, [x23, #24]
    1f0c:	str	x8, [sp, #16]
    1f10:	cbz	x0, 1f18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1898>
    1f14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1f18:	mov	w0, #0x220                 	// #544
    1f1c:	bl	0 <_Znwm>
    1f20:	add	x23, x0, #0x20
    1f24:	mov	x22, x0
    1f28:	str	d10, [x0, #8]
    1f2c:	str	x25, [x0]
    1f30:	mov	w2, #0x200                 	// #512
    1f34:	mov	x0, x23
    1f38:	mov	w1, wzr
    1f3c:	bl	0 <memset>
    1f40:	ldrb	w8, [sp, #320]
    1f44:	mov	x24, x22
    1f48:	str	x23, [x24, #16]!
    1f4c:	mov	w9, #0x13                  	// #19
    1f50:	orr	w8, w8, #0x1
    1f54:	add	x1, sp, #0x138
    1f58:	mov	x0, x24
    1f5c:	str	d8, [x22, #24]
    1f60:	str	x9, [sp, #312]
    1f64:	strb	w8, [sp, #320]
    1f68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1f6c:	ldrb	w8, [sp, #320]
    1f70:	add	x1, sp, #0x138
    1f74:	mov	x0, x24
    1f78:	str	xzr, [sp, #312]
    1f7c:	and	w8, w8, #0xf0
    1f80:	orr	w8, w8, #0x6
    1f84:	strb	w8, [sp, #320]
    1f88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1f8c:	ldrb	w8, [sp, #320]
    1f90:	add	x1, sp, #0x138
    1f94:	mov	x0, x24
    1f98:	str	xzr, [sp, #312]
    1f9c:	and	w8, w8, #0xf0
    1fa0:	orr	w8, w8, #0x8
    1fa4:	strb	w8, [sp, #320]
    1fa8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1fac:	ldr	x23, [x19]
    1fb0:	mov	x1, x24
    1fb4:	stp	x24, x22, [sp, #312]
    1fb8:	mov	x0, x23
    1fbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1fc0:	add	x0, x23, #0x18
    1fc4:	add	x1, sp, #0x138
    1fc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1fcc:	ldr	x0, [sp, #320]
    1fd0:	ldp	x27, x8, [x23, #24]
    1fd4:	str	x8, [sp, #8]
    1fd8:	cbz	x0, 1fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1960>
    1fdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1fe0:	mov	w0, #0x220                 	// #544
    1fe4:	bl	0 <_Znwm>
    1fe8:	movi	v10.2s, #0x1
    1fec:	add	x28, x28, #0x10
    1ff0:	add	x23, x0, #0x20
    1ff4:	mov	x22, x0
    1ff8:	str	d10, [x0, #8]
    1ffc:	str	x28, [x0]
    2000:	mov	w2, #0x200                 	// #512
    2004:	mov	x0, x23
    2008:	mov	w1, wzr
    200c:	bl	0 <memset>
    2010:	ldrb	w8, [sp, #304]
    2014:	mov	x24, x22
    2018:	str	x23, [x24, #16]!
    201c:	mov	w9, #0x14                  	// #20
    2020:	orr	w8, w8, #0x1
    2024:	add	x1, sp, #0x128
    2028:	mov	x0, x24
    202c:	str	d8, [x22, #24]
    2030:	str	x9, [sp, #296]
    2034:	strb	w8, [sp, #304]
    2038:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    203c:	ldrb	w8, [sp, #304]
    2040:	mov	w9, #0x1                   	// #1
    2044:	add	x1, sp, #0x128
    2048:	mov	x0, x24
    204c:	and	w8, w8, #0xf0
    2050:	orr	w8, w8, #0x2
    2054:	str	x9, [sp, #296]
    2058:	strb	w8, [sp, #304]
    205c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2060:	ldrb	w8, [sp, #304]
    2064:	add	x1, sp, #0x128
    2068:	mov	x0, x24
    206c:	str	xzr, [sp, #296]
    2070:	and	w8, w8, #0xf0
    2074:	orr	w8, w8, #0x6
    2078:	strb	w8, [sp, #304]
    207c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2080:	ldrb	w8, [sp, #304]
    2084:	add	x1, sp, #0x128
    2088:	mov	x0, x24
    208c:	str	x21, [sp, #296]
    2090:	and	w8, w8, #0xf0
    2094:	orr	w8, w8, #0x2
    2098:	strb	w8, [sp, #304]
    209c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    20a0:	ldr	x23, [x19]
    20a4:	mov	x1, x24
    20a8:	stp	x24, x22, [sp, #296]
    20ac:	mov	x0, x23
    20b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    20b4:	add	x0, x23, #0x18
    20b8:	add	x1, sp, #0x128
    20bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    20c0:	ldr	x0, [sp, #304]
    20c4:	ldp	x25, x26, [x23, #24]
    20c8:	cbz	x0, 20d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a50>
    20cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    20d0:	mov	w0, #0x220                 	// #544
    20d4:	bl	0 <_Znwm>
    20d8:	add	x23, x0, #0x20
    20dc:	mov	x22, x0
    20e0:	str	d10, [x0, #8]
    20e4:	str	x28, [x0]
    20e8:	mov	w2, #0x200                 	// #512
    20ec:	mov	x0, x23
    20f0:	mov	w1, wzr
    20f4:	bl	0 <memset>
    20f8:	ldrb	w8, [sp, #280]
    20fc:	mov	x24, x22
    2100:	str	x23, [x24, #16]!
    2104:	mov	w9, #0xb                   	// #11
    2108:	orr	w8, w8, #0x1
    210c:	add	x1, sp, #0x110
    2110:	mov	x0, x24
    2114:	str	d8, [x22, #24]
    2118:	str	x9, [sp, #272]
    211c:	strb	w8, [sp, #280]
    2120:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2124:	ldrb	w8, [sp, #280]
    2128:	mov	w9, #0x8                   	// #8
    212c:	add	x1, sp, #0x110
    2130:	mov	x0, x24
    2134:	and	w8, w8, #0xf0
    2138:	orr	w8, w8, #0x4
    213c:	str	x9, [sp, #272]
    2140:	strb	w8, [sp, #280]
    2144:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2148:	ldrb	w8, [sp, #280]
    214c:	add	x1, sp, #0x110
    2150:	mov	x0, x24
    2154:	str	x21, [sp, #272]
    2158:	and	w8, w8, #0xf0
    215c:	orr	w8, w8, #0x2
    2160:	strb	w8, [sp, #280]
    2164:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2168:	ldr	x21, [x19]
    216c:	mov	x1, x24
    2170:	stp	x24, x22, [sp, #272]
    2174:	mov	x0, x21
    2178:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    217c:	add	x0, x21, #0x18
    2180:	add	x1, sp, #0x110
    2184:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2188:	ldr	x0, [sp, #280]
    218c:	ldp	x21, x22, [x21, #24]
    2190:	cbz	x0, 2198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b18>
    2194:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2198:	ldp	x9, x8, [x19, #80]
    219c:	add	x0, sp, #0x2a8
    21a0:	add	x1, sp, #0xe0
    21a4:	sub	x8, x8, x9
    21a8:	asr	x8, x8, #3
    21ac:	str	x8, [sp, #224]
    21b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    21b4:	ldr	x0, [x19]
    21b8:	add	x2, sp, #0x2a8
    21bc:	mov	w1, #0x1                   	// #1
    21c0:	mov	w3, wzr
    21c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    21c8:	str	wzr, [sp, #688]
    21cc:	ldp	x8, x9, [x19, #80]
    21d0:	sub	x9, x9, x8
    21d4:	lsr	x10, x9, #3
    21d8:	cbz	w10, 25a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f28>
    21dc:	ldp	x11, x10, [sp, #32]
    21e0:	ldp	x15, x14, [sp, #48]
    21e4:	sub	x13, x22, x21
    21e8:	mov	x28, xzr
    21ec:	sub	x10, x10, x11
    21f0:	ldp	x12, x11, [sp, #16]
    21f4:	sub	x14, x14, x15
    21f8:	sub	x15, x26, x25
    21fc:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2200:	sub	x11, x11, x12
    2204:	ldr	x12, [sp, #8]
    2208:	add	x26, x26, #0x0
    220c:	mov	w25, #0x14                  	// #20
    2210:	sub	x12, x12, x27
    2214:	ubfx	x27, x9, #3, #32
    2218:	lsr	x9, x10, #4
    221c:	lsr	x10, x11, #4
    2220:	add	w9, w9, #0x3
    2224:	lsr	x11, x12, #4
    2228:	str	w9, [sp, #56]
    222c:	add	w9, w10, #0x3
    2230:	lsr	x12, x13, #4
    2234:	lsr	x13, x14, #4
    2238:	str	w9, [sp, #40]
    223c:	add	w9, w11, #0x3
    2240:	lsr	x14, x15, #4
    2244:	str	w9, [sp, #24]
    2248:	add	w9, w13, #0x3
    224c:	add	w21, w12, #0x3
    2250:	str	w9, [sp, #48]
    2254:	add	w9, w14, #0x3
    2258:	str	w9, [sp, #32]
    225c:	ldr	x22, [x8, x28, lsl #3]
    2260:	ldr	w8, [x22, #8]
    2264:	and	w9, w8, #0xff
    2268:	cmp	w9, #0x10
    226c:	b.hi	2490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e10>  // b.pmore
    2270:	and	x9, x8, #0xff
    2274:	adr	x10, 2284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c04>
    2278:	ldrb	w11, [x26, x9]
    227c:	add	x10, x10, x11, lsl #2
    2280:	br	x10
    2284:	mov	w23, wzr
    2288:	mov	w24, #0x2                   	// #2
    228c:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2290:	cbz	x22, 5160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4ae0>
    2294:	ldr	x8, [x22, #32]
    2298:	add	x0, sp, #0x2a8
    229c:	add	x1, sp, #0xe0
    22a0:	str	x8, [sp, #224]
    22a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    22a8:	ldr	x1, [x22, #24]
    22ac:	mov	x0, x20
    22b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    22b4:	mov	w8, w0
    22b8:	add	x0, sp, #0x2a8
    22bc:	add	x1, sp, #0xe0
    22c0:	str	x8, [sp, #224]
    22c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    22c8:	ldrb	w8, [x22, #40]
    22cc:	cbz	x8, 22e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c60>
    22d0:	add	x0, sp, #0x2a8
    22d4:	add	x1, sp, #0xe0
    22d8:	str	x8, [sp, #224]
    22dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    22e0:	mov	w23, wzr
    22e4:	mov	w24, #0xc                   	// #12
    22e8:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    22ec:	cbz	x22, 517c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4afc>
    22f0:	ldr	x8, [x22, #32]
    22f4:	add	x0, sp, #0x2a8
    22f8:	add	x1, sp, #0xe0
    22fc:	str	x8, [sp, #224]
    2300:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2304:	ldr	x1, [x22, #24]
    2308:	mov	x0, x20
    230c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2310:	mov	w8, w0
    2314:	add	x0, sp, #0x2a8
    2318:	add	x1, sp, #0xe0
    231c:	str	x8, [sp, #224]
    2320:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2324:	mov	w24, #0xb                   	// #11
    2328:	mov	w23, w21
    232c:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2330:	cbz	x22, 5198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b18>
    2334:	and	w9, w8, #0xff
    2338:	cmp	w9, #0xb
    233c:	b.ne	51b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b34>  // b.any
    2340:	lsr	x8, x8, #8
    2344:	add	x0, sp, #0x2a8
    2348:	add	x1, sp, #0xe0
    234c:	str	x8, [sp, #224]
    2350:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2354:	mov	w23, wzr
    2358:	mov	w24, #0x7                   	// #7
    235c:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2360:	mov	w23, wzr
    2364:	mov	w24, #0xd                   	// #13
    2368:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    236c:	cbz	x22, 5058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49d8>
    2370:	cmp	w8, #0xff
    2374:	cset	w8, hi  // hi = pmore
    2378:	add	x0, sp, #0x2a8
    237c:	add	x1, sp, #0xe0
    2380:	str	x8, [sp, #224]
    2384:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2388:	ldr	x8, [x22, #16]
    238c:	mov	x0, x20
    2390:	ldr	x1, [x8]
    2394:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2398:	mov	w8, w0
    239c:	add	x0, sp, #0x2a8
    23a0:	add	x1, sp, #0xe0
    23a4:	str	x8, [sp, #224]
    23a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    23ac:	ldr	w8, [x22, #12]
    23b0:	subs	w8, w8, #0x1
    23b4:	b.eq	23f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d78>  // b.none
    23b8:	mov	w8, w8
    23bc:	mov	x23, xzr
    23c0:	lsl	x24, x8, #3
    23c4:	ldr	x8, [x22, #16]
    23c8:	mov	x0, x20
    23cc:	add	x8, x8, x23
    23d0:	ldr	x1, [x8, #8]
    23d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    23d8:	mov	w8, w0
    23dc:	add	x0, sp, #0x2a8
    23e0:	add	x1, sp, #0xe0
    23e4:	str	x8, [sp, #224]
    23e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    23ec:	add	x23, x23, #0x8
    23f0:	cmp	x24, x23
    23f4:	b.ne	23c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d44>  // b.any
    23f8:	ldr	w23, [sp, #56]
    23fc:	mov	w24, #0x15                  	// #21
    2400:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2404:	mov	w23, wzr
    2408:	mov	w24, #0x11                  	// #17
    240c:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2410:	mov	w23, wzr
    2414:	mov	w24, #0x3                   	// #3
    2418:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    241c:	cbz	x22, 4fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4944>
    2420:	ldr	x1, [x22, #24]
    2424:	mov	x0, x20
    2428:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    242c:	mov	w8, w0
    2430:	add	x0, sp, #0x2a8
    2434:	add	x1, sp, #0xe0
    2438:	str	x8, [sp, #224]
    243c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2440:	ldr	w8, [x22, #8]
    2444:	add	x0, sp, #0x2a8
    2448:	add	x1, sp, #0xe0
    244c:	lsr	x22, x8, #8
    2450:	str	x22, [sp, #224]
    2454:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2458:	ldr	w8, [sp, #48]
    245c:	cmp	w22, #0x0
    2460:	mov	w24, #0x8                   	// #8
    2464:	csel	w23, w8, wzr, eq  // eq = none
    2468:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    246c:	mov	w23, wzr
    2470:	mov	w24, #0x4                   	// #4
    2474:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2478:	mov	w23, wzr
    247c:	mov	w24, #0x5                   	// #5
    2480:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2484:	mov	w23, wzr
    2488:	mov	w24, #0xa                   	// #10
    248c:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2490:	mov	w24, wzr
    2494:	mov	w23, wzr
    2498:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    249c:	mov	w23, wzr
    24a0:	mov	w24, #0xe                   	// #14
    24a4:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    24a8:	cbz	x22, 51d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4b50>
    24ac:	ubfx	x8, x8, #9, #1
    24b0:	add	x0, sp, #0x2a8
    24b4:	add	x1, sp, #0xe0
    24b8:	str	x8, [sp, #224]
    24bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    24c0:	ldr	w8, [x22, #12]
    24c4:	cbz	w8, 24f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e78>
    24c8:	ldr	x23, [x22, #16]
    24cc:	lsl	x24, x8, #3
    24d0:	ldr	x1, [x23], #8
    24d4:	mov	x0, x20
    24d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    24dc:	mov	w8, w0
    24e0:	add	x0, sp, #0x2a8
    24e4:	add	x1, sp, #0xe0
    24e8:	str	x8, [sp, #224]
    24ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    24f0:	subs	x24, x24, #0x8
    24f4:	b.ne	24d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e50>  // b.any
    24f8:	ldr	w8, [x22, #8]
    24fc:	tbnz	w8, #10, 2574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ef4>
    2500:	lsl	w9, w8, #23
    2504:	tst	w8, #0x100
    2508:	mov	w8, #0x6                   	// #6
    250c:	csel	w24, w8, w25, eq  // eq = none
    2510:	ldr	w8, [sp, #32]
    2514:	mov	x0, x22
    2518:	and	w23, w8, w9, asr #31
    251c:	bl	0 <_ZNK4llvm10StructType7getNameEv>
    2520:	cbz	x1, 257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2524:	ldr	x25, [x19]
    2528:	mov	x0, x22
    252c:	bl	0 <_ZNK4llvm10StructType7getNameEv>
    2530:	ldr	w4, [sp, #24]
    2534:	mov	x2, x0
    2538:	mov	x3, x1
    253c:	mov	w1, #0x13                  	// #19
    2540:	mov	x0, x25
    2544:	mov	w25, #0x14                  	// #20
    2548:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    254c:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2550:	mov	w23, wzr
    2554:	mov	w24, #0xf                   	// #15
    2558:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    255c:	mov	w23, wzr
    2560:	mov	w24, #0x10                  	// #16
    2564:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2568:	mov	w23, wzr
    256c:	mov	w24, #0x16                  	// #22
    2570:	b	257c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1efc>
    2574:	ldr	w23, [sp, #40]
    2578:	mov	w24, #0x12                  	// #18
    257c:	ldr	x0, [x19]
    2580:	add	x2, sp, #0x2a8
    2584:	mov	w1, w24
    2588:	mov	w3, w23
    258c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2590:	add	x28, x28, #0x1
    2594:	cmp	x28, x27
    2598:	str	wzr, [sp, #688]
    259c:	b.eq	25a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f28>  // b.none
    25a0:	ldr	x8, [x19, #80]
    25a4:	b	225c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1bdc>
    25a8:	ldr	x0, [x19]
    25ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    25b0:	ldr	x0, [sp, #680]
    25b4:	add	x8, sp, #0x2a8
    25b8:	add	x8, x8, #0x10
    25bc:	cmp	x0, x8
    25c0:	b.eq	25c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f48>  // b.none
    25c4:	bl	0 <free>
    25c8:	ldp	x8, x9, [x19, #384]
    25cc:	cmp	x8, x9
    25d0:	b.eq	2834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21b4>  // b.none
    25d4:	ldr	x0, [x19]
    25d8:	mov	w1, #0xa                   	// #10
    25dc:	mov	w2, #0x3                   	// #3
    25e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    25e4:	add	x8, sp, #0x2a8
    25e8:	add	x8, x8, #0x10
    25ec:	str	d9, [sp, #688]
    25f0:	str	x8, [sp, #48]
    25f4:	str	x8, [sp, #680]
    25f8:	ldp	x28, x8, [x19, #384]
    25fc:	cmp	x28, x8
    2600:	str	x8, [sp, #56]
    2604:	b.eq	2818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2198>  // b.none
    2608:	mov	w27, #0x1                   	// #1
    260c:	ldp	x1, x2, [x28]
    2610:	mov	x0, x20
    2614:	str	x2, [sp, #328]
    2618:	and	x21, x1, #0xffffffff
    261c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2620:	mov	w8, w0
    2624:	add	x0, sp, #0x2a8
    2628:	add	x1, sp, #0x258
    262c:	str	x8, [sp, #600]
    2630:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2634:	add	x0, sp, #0x2a8
    2638:	add	x1, sp, #0x258
    263c:	str	x21, [sp, #600]
    2640:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2644:	add	x0, sp, #0x148
    2648:	bl	0 <_ZNK4llvm12AttributeSet5beginEv>
    264c:	mov	x21, x0
    2650:	add	x0, sp, #0x148
    2654:	bl	0 <_ZNK4llvm12AttributeSet3endEv>
    2658:	mov	x22, x0
    265c:	cmp	x21, x0
    2660:	b.eq	27f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2170>  // b.none
    2664:	ldr	x8, [x21]
    2668:	add	x0, sp, #0x258
    266c:	str	x8, [sp, #600]
    2670:	bl	0 <_ZNK4llvm9Attribute15isEnumAttributeEv>
    2674:	tbz	w0, #0, 2698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2018>
    2678:	add	x0, sp, #0x2a8
    267c:	add	x1, sp, #0xf0
    2680:	str	xzr, [sp, #240]
    2684:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2688:	add	x0, sp, #0x258
    268c:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    2690:	bl	965c <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    2694:	b	26d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2058>
    2698:	add	x0, sp, #0x258
    269c:	bl	0 <_ZNK4llvm9Attribute14isIntAttributeEv>
    26a0:	tbz	w0, #0, 26f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2078>
    26a4:	add	x0, sp, #0x2a8
    26a8:	add	x1, sp, #0xf0
    26ac:	str	x27, [sp, #240]
    26b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    26b4:	add	x0, sp, #0x258
    26b8:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    26bc:	bl	965c <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    26c0:	str	x0, [sp, #240]
    26c4:	add	x0, sp, #0x2a8
    26c8:	add	x1, sp, #0xf0
    26cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    26d0:	add	x0, sp, #0x258
    26d4:	bl	0 <_ZNK4llvm9Attribute13getValueAsIntEv>
    26d8:	str	x0, [sp, #240]
    26dc:	add	x0, sp, #0x2a8
    26e0:	add	x1, sp, #0xf0
    26e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    26e8:	add	x21, x21, #0x8
    26ec:	cmp	x22, x21
    26f0:	b.ne	2664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fe4>  // b.any
    26f4:	b	27f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2170>
    26f8:	add	x0, sp, #0x258
    26fc:	bl	0 <_ZNK4llvm9Attribute17isStringAttributeEv>
    2700:	tbz	w0, #0, 277c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20fc>
    2704:	add	x0, sp, #0x258
    2708:	bl	0 <_ZNK4llvm9Attribute15getKindAsStringEv>
    270c:	mov	x25, x0
    2710:	add	x0, sp, #0x258
    2714:	mov	x26, x1
    2718:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
    271c:	cmp	x1, #0x0
    2720:	mov	w8, #0x3                   	// #3
    2724:	mov	x23, x0
    2728:	mov	x24, x1
    272c:	cinc	x8, x8, ne  // ne = any
    2730:	add	x0, sp, #0x2a8
    2734:	add	x1, sp, #0xf0
    2738:	str	x8, [sp, #240]
    273c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2740:	add	x2, x25, x26
    2744:	add	x0, sp, #0x2a8
    2748:	mov	x1, x25
    274c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2750:	add	x0, sp, #0x2a8
    2754:	add	x1, sp, #0xf0
    2758:	str	xzr, [sp, #240]
    275c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2760:	cbz	x24, 26e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2068>
    2764:	add	x2, x23, x24
    2768:	add	x0, sp, #0x2a8
    276c:	mov	x1, x23
    2770:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2774:	str	xzr, [sp, #240]
    2778:	b	26dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x205c>
    277c:	add	x0, sp, #0x258
    2780:	bl	0 <_ZNK4llvm9Attribute15isTypeAttributeEv>
    2784:	tbz	w0, #0, 5018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4998>
    2788:	add	x0, sp, #0x258
    278c:	bl	0 <_ZNK4llvm9Attribute14getValueAsTypeEv>
    2790:	cmp	x0, #0x0
    2794:	mov	w8, #0x5                   	// #5
    2798:	mov	x23, x0
    279c:	cinc	x8, x8, ne  // ne = any
    27a0:	add	x0, sp, #0x2a8
    27a4:	add	x1, sp, #0xf0
    27a8:	str	x8, [sp, #240]
    27ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    27b0:	add	x0, sp, #0x258
    27b4:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    27b8:	bl	965c <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    27bc:	str	x0, [sp, #240]
    27c0:	add	x0, sp, #0x2a8
    27c4:	add	x1, sp, #0xf0
    27c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    27cc:	cbz	x23, 26e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2068>
    27d0:	add	x0, sp, #0x258
    27d4:	bl	0 <_ZNK4llvm9Attribute14getValueAsTypeEv>
    27d8:	mov	x1, x0
    27dc:	mov	x0, x20
    27e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    27e4:	mov	w8, w0
    27e8:	str	x8, [sp, #240]
    27ec:	b	26dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x205c>
    27f0:	ldr	x0, [x19]
    27f4:	add	x2, sp, #0x2a8
    27f8:	mov	w1, #0x3                   	// #3
    27fc:	mov	w3, wzr
    2800:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2804:	ldr	x8, [sp, #56]
    2808:	add	x28, x28, #0x10
    280c:	str	wzr, [sp, #688]
    2810:	cmp	x28, x8
    2814:	b.ne	260c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f8c>  // b.any
    2818:	ldr	x0, [x19]
    281c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2820:	ldr	x0, [sp, #680]
    2824:	ldr	x8, [sp, #48]
    2828:	cmp	x0, x8
    282c:	b.eq	2834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21b4>  // b.none
    2830:	bl	0 <free>
    2834:	ldp	x8, x9, [x19, #440]
    2838:	cmp	x8, x9
    283c:	b.eq	291c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x229c>  // b.none
    2840:	ldr	x0, [x19]
    2844:	mov	w1, #0x9                   	// #9
    2848:	mov	w2, #0x3                   	// #3
    284c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2850:	add	x8, sp, #0x2a8
    2854:	add	x23, x8, #0x10
    2858:	str	d9, [sp, #688]
    285c:	str	x23, [sp, #680]
    2860:	ldp	x8, x9, [x19, #440]
    2864:	sub	x9, x9, x8
    2868:	lsr	x10, x9, #3
    286c:	cbz	w10, 2904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2284>
    2870:	mov	x24, xzr
    2874:	ubfx	x25, x9, #3, #32
    2878:	ldr	x8, [x8, x24, lsl #3]
    287c:	add	x0, sp, #0x148
    2880:	str	x8, [sp, #328]
    2884:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    2888:	cbz	w0, 28d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2258>
    288c:	mov	w21, w0
    2890:	mov	w26, wzr
    2894:	sub	w22, w26, #0x1
    2898:	add	x0, sp, #0x148
    289c:	mov	w1, w22
    28a0:	bl	0 <_ZNK4llvm13AttributeList13getAttributesEj>
    28a4:	cbz	x0, 28cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x224c>
    28a8:	mov	x2, x0
    28ac:	mov	w1, w22
    28b0:	mov	x0, x20
    28b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    28b8:	mov	w8, w0
    28bc:	add	x0, sp, #0x2a8
    28c0:	add	x1, sp, #0x258
    28c4:	str	x8, [sp, #600]
    28c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    28cc:	add	w26, w26, #0x1
    28d0:	cmp	w21, w26
    28d4:	b.ne	2894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2214>  // b.any
    28d8:	ldr	x0, [x19]
    28dc:	add	x2, sp, #0x2a8
    28e0:	mov	w1, #0x2                   	// #2
    28e4:	mov	w3, wzr
    28e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    28ec:	add	x24, x24, #0x1
    28f0:	cmp	x24, x25
    28f4:	str	wzr, [sp, #688]
    28f8:	b.eq	2904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2284>  // b.none
    28fc:	ldr	x8, [x19, #440]
    2900:	b	2878 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21f8>
    2904:	ldr	x0, [x19]
    2908:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    290c:	ldr	x0, [sp, #680]
    2910:	cmp	x0, x23
    2914:	b.eq	291c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x229c>  // b.none
    2918:	bl	0 <free>
    291c:	add	x8, sp, #0x2a8
    2920:	add	x8, x8, #0x10
    2924:	str	d9, [sp, #688]
    2928:	str	x8, [sp, #680]
    292c:	ldp	x22, x23, [x19, #208]
    2930:	cmp	x22, x23
    2934:	b.eq	29e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2360>  // b.none
    2938:	ldr	x21, [x22]
    293c:	mov	x0, x21
    2940:	bl	0 <_ZNK4llvm6Comdat7getNameEv>
    2944:	mov	x2, x0
    2948:	mov	x3, x1
    294c:	mov	x0, x19
    2950:	mov	x1, x2
    2954:	mov	x2, x3
    2958:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    295c:	str	w0, [sp, #328]
    2960:	add	x0, sp, #0x2a8
    2964:	add	x1, sp, #0x148
    2968:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    296c:	mov	x0, x21
    2970:	bl	0 <_ZNK4llvm6Comdat7getNameEv>
    2974:	str	w1, [sp, #328]
    2978:	add	x0, sp, #0x2a8
    297c:	add	x1, sp, #0x148
    2980:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2984:	ldr	w8, [x21, #8]
    2988:	cmp	w8, #0x5
    298c:	b.cs	5078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f8>  // b.hs, b.nlast
    2990:	add	w8, w8, #0x1
    2994:	add	x0, sp, #0x2a8
    2998:	add	x1, sp, #0x148
    299c:	str	w8, [sp, #328]
    29a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    29a4:	ldr	x0, [x19]
    29a8:	add	x2, sp, #0x2a8
    29ac:	mov	w1, #0xc                   	// #12
    29b0:	mov	w3, wzr
    29b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    29b8:	add	x22, x22, #0x8
    29bc:	cmp	x23, x22
    29c0:	str	wzr, [sp, #688]
    29c4:	b.ne	2938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22b8>  // b.any
    29c8:	ldr	x0, [sp, #680]
    29cc:	add	x8, sp, #0x2a8
    29d0:	add	x8, x8, #0x10
    29d4:	cmp	x0, x8
    29d8:	b.eq	29e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2360>  // b.none
    29dc:	bl	0 <free>
    29e0:	ldr	x8, [x19, #16]
    29e4:	ldr	x3, [x8, #248]
    29e8:	cbz	x3, 2a04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2384>
    29ec:	ldr	x0, [x19]
    29f0:	ldr	x2, [x8, #240]
    29f4:	mov	w1, #0x2                   	// #2
    29f8:	mov	w4, wzr
    29fc:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2a00:	ldr	x8, [x19, #16]
    2a04:	ldr	x3, [x8, #488]
    2a08:	cbz	x3, 2a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23a4>
    2a0c:	ldr	x0, [x19]
    2a10:	ldr	x2, [x8, #480]
    2a14:	mov	w1, #0x3                   	// #3
    2a18:	mov	w4, wzr
    2a1c:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2a20:	ldr	x8, [x19, #16]
    2a24:	ldr	x3, [x8, #96]
    2a28:	cbz	x3, 2a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23c4>
    2a2c:	ldr	x0, [x19]
    2a30:	ldr	x2, [x8, #88]
    2a34:	mov	w1, #0x4                   	// #4
    2a38:	mov	w4, wzr
    2a3c:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2a40:	ldr	x8, [x19, #16]
    2a44:	add	x9, sp, #0x148
    2a48:	add	x10, sp, #0x258
    2a4c:	add	x9, x9, #0x8
    2a50:	add	x10, x10, #0x8
    2a54:	str	wzr, [sp, #336]
    2a58:	str	wzr, [sp, #608]
    2a5c:	stp	xzr, x9, [sp, #344]
    2a60:	stp	x9, xzr, [sp, #360]
    2a64:	str	xzr, [sp, #616]
    2a68:	str	x10, [sp, #624]
    2a6c:	str	x10, [sp, #632]
    2a70:	str	xzr, [sp, #640]
    2a74:	ldr	x26, [x8, #16]
    2a78:	add	x27, x8, #0x8
    2a7c:	cmp	x27, x26
    2a80:	b.eq	2b74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24f4>  // b.none
    2a84:	add	x8, sp, #0x2a8
    2a88:	mov	w24, wzr
    2a8c:	mov	w25, wzr
    2a90:	add	x28, x8, #0x10
    2a94:	ldrb	w8, [x26]
    2a98:	tbnz	w8, #2, 4ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x497c>
    2a9c:	sub	x8, x26, #0x38
    2aa0:	cmp	x26, #0x0
    2aa4:	csel	x21, xzr, x8, eq  // eq = none
    2aa8:	mov	x0, x21
    2aac:	bl	0 <_ZNK4llvm11GlobalValue12getAlignmentEv>
    2ab0:	ldr	x1, [x21, #24]
    2ab4:	cmp	w24, w0
    2ab8:	csel	w24, w0, w24, cc  // cc = lo, ul, last
    2abc:	mov	x0, x20
    2ac0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ac4:	cmp	w25, w0
    2ac8:	csel	w25, w0, w25, cc  // cc = lo, ul, last
    2acc:	mov	x0, x21
    2ad0:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    2ad4:	cbz	x1, 2b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24e0>
    2ad8:	mov	x0, x21
    2adc:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    2ae0:	str	x28, [sp, #680]
    2ae4:	cbz	x0, 2b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2480>
    2ae8:	mov	x8, x0
    2aec:	add	x2, x0, x1
    2af0:	add	x0, sp, #0x2a8
    2af4:	mov	x1, x8
    2af8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2afc:	b	2b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2488>
    2b00:	str	xzr, [sp, #688]
    2b04:	strb	wzr, [sp, #696]
    2b08:	add	x0, sp, #0x148
    2b0c:	add	x1, sp, #0x2a8
    2b10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2b14:	ldr	x8, [sp, #680]
    2b18:	mov	x22, x0
    2b1c:	cmp	x8, x28
    2b20:	b.eq	2b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24ac>  // b.none
    2b24:	mov	x0, x8
    2b28:	bl	0 <_ZdlPv>
    2b2c:	ldr	w8, [x22]
    2b30:	cbnz	w8, 2b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24e0>
    2b34:	ldr	x23, [x19]
    2b38:	mov	x0, x21
    2b3c:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    2b40:	mov	x2, x0
    2b44:	mov	x3, x1
    2b48:	mov	w1, #0x5                   	// #5
    2b4c:	mov	x0, x23
    2b50:	mov	w4, wzr
    2b54:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2b58:	ldr	x8, [sp, #368]
    2b5c:	str	w8, [x22]
    2b60:	ldr	x26, [x26, #8]
    2b64:	cmp	x27, x26
    2b68:	b.ne	2a94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2414>  // b.any
    2b6c:	ldr	x8, [x19, #16]
    2b70:	b	2b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24fc>
    2b74:	mov	w25, wzr
    2b78:	mov	w24, wzr
    2b7c:	ldr	x26, [x8, #32]
    2b80:	add	x27, x8, #0x18
    2b84:	cmp	x27, x26
    2b88:	b.eq	2ce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2668>  // b.none
    2b8c:	add	x8, sp, #0x2a8
    2b90:	mov	w23, #0x1f                  	// #31
    2b94:	add	x28, x8, #0x10
    2b98:	ldrb	w8, [x26]
    2b9c:	tbnz	w8, #2, 4f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    2ba0:	sub	x8, x26, #0x38
    2ba4:	cmp	x26, #0x0
    2ba8:	csel	x21, xzr, x8, eq  // eq = none
    2bac:	ldr	w8, [x21, #32]
    2bb0:	mov	w11, #0x1                   	// #1
    2bb4:	ubfx	w9, w8, #16, #5
    2bb8:	add	w9, w9, #0xff
    2bbc:	tst	w23, w8, lsr #16
    2bc0:	orr	w9, w9, #0x100
    2bc4:	csel	w9, wzr, w9, eq  // eq = none
    2bc8:	lsl	w10, w9, #23
    2bcc:	lsl	x9, x11, x9
    2bd0:	and	w9, w9, w10, asr #31
    2bd4:	cmp	w24, w9
    2bd8:	csel	w24, w9, w24, cc  // cc = lo, ul, last
    2bdc:	tbz	w8, #22, 2c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2604>
    2be0:	mov	x0, x21
    2be4:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    2be8:	cbz	x0, 2c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2588>
    2bec:	mov	x8, x0
    2bf0:	add	x2, x0, x1
    2bf4:	add	x0, sp, #0x2a8
    2bf8:	mov	x1, x8
    2bfc:	str	x28, [sp, #680]
    2c00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2c04:	b	2c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2594>
    2c08:	str	x28, [sp, #680]
    2c0c:	str	xzr, [sp, #688]
    2c10:	strb	wzr, [sp, #696]
    2c14:	add	x0, sp, #0x148
    2c18:	add	x1, sp, #0x2a8
    2c1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2c20:	ldr	x8, [sp, #680]
    2c24:	mov	x22, x0
    2c28:	cmp	x8, x28
    2c2c:	b.eq	2c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x25b8>  // b.none
    2c30:	mov	x0, x8
    2c34:	bl	0 <_ZdlPv>
    2c38:	ldr	w8, [x22]
    2c3c:	cbnz	w8, 2c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2604>
    2c40:	ldrb	w8, [x21, #34]
    2c44:	ldr	x23, [x19]
    2c48:	tbnz	w8, #6, 2c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x25d8>
    2c4c:	mov	x2, xzr
    2c50:	mov	x3, xzr
    2c54:	b	2c68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x25e8>
    2c58:	mov	x0, x21
    2c5c:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    2c60:	mov	x2, x0
    2c64:	mov	x3, x1
    2c68:	mov	w1, #0x5                   	// #5
    2c6c:	mov	x0, x23
    2c70:	mov	w4, wzr
    2c74:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2c78:	ldr	x8, [sp, #368]
    2c7c:	mov	w23, #0x1f                  	// #31
    2c80:	str	w8, [x22]
    2c84:	ldrb	w8, [x21, #19]
    2c88:	tbz	w8, #6, 2cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2658>
    2c8c:	mov	x0, x21
    2c90:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    2c94:	mov	x1, x0
    2c98:	add	x0, sp, #0x258
    2c9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ca0:	ldr	w8, [x0]
    2ca4:	cbnz	w8, 2cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2658>
    2ca8:	ldr	x23, [x19]
    2cac:	mov	x22, x0
    2cb0:	mov	x0, x21
    2cb4:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    2cb8:	ldp	x2, x3, [x0]
    2cbc:	mov	w1, #0xb                   	// #11
    2cc0:	mov	x0, x23
    2cc4:	mov	w4, wzr
    2cc8:	mov	w23, #0x1f                  	// #31
    2ccc:	bl	9540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2cd0:	ldr	x8, [sp, #640]
    2cd4:	str	w8, [x22]
    2cd8:	ldr	x26, [x26, #8]
    2cdc:	cmp	x27, x26
    2ce0:	b.ne	2b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2518>  // b.any
    2ce4:	ldr	x8, [x19, #16]
    2ce8:	ldr	x9, [x8, #8]!
    2cec:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2cf0:	ldr	x28, [x28]
    2cf4:	and	x9, x9, #0xfffffffffffffff8
    2cf8:	cmp	x8, x9
    2cfc:	b.eq	2e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x27dc>  // b.none
    2d00:	mov	w0, #0x220                 	// #544
    2d04:	bl	0 <_Znwm>
    2d08:	movi	v0.2s, #0x1
    2d0c:	add	x8, x28, #0x10
    2d10:	add	x23, x0, #0x20
    2d14:	mov	x21, x0
    2d18:	str	d0, [x0, #8]
    2d1c:	str	x8, [x0]
    2d20:	mov	w2, #0x200                 	// #512
    2d24:	mov	x0, x23
    2d28:	mov	w1, wzr
    2d2c:	bl	0 <memset>
    2d30:	ldrb	w8, [sp, #688]
    2d34:	mov	x22, x21
    2d38:	str	x23, [x22, #16]!
    2d3c:	mov	w9, #0x7                   	// #7
    2d40:	orr	w8, w8, #0x1
    2d44:	add	x1, sp, #0x2a8
    2d48:	mov	x0, x22
    2d4c:	str	d8, [x21, #24]
    2d50:	str	x9, [sp, #680]
    2d54:	strb	w8, [sp, #688]
    2d58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2d5c:	ldrb	w8, [sp, #688]
    2d60:	mov	w23, #0x8                   	// #8
    2d64:	add	x1, sp, #0x2a8
    2d68:	mov	x0, x22
    2d6c:	and	w8, w8, #0xf0
    2d70:	orr	w8, w8, #0x4
    2d74:	str	x23, [sp, #680]
    2d78:	strb	w8, [sp, #688]
    2d7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2d80:	ldrb	w8, [sp, #688]
    2d84:	add	x1, sp, #0x2a8
    2d88:	mov	x0, x22
    2d8c:	str	x23, [sp, #680]
    2d90:	and	w8, w8, #0xf0
    2d94:	orr	w8, w8, #0x4
    2d98:	strb	w8, [sp, #688]
    2d9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2da0:	ldrb	w9, [sp, #688]
    2da4:	clz	w8, w25
    2da8:	mov	w23, #0x20                  	// #32
    2dac:	sub	w8, w23, w8
    2db0:	str	x8, [sp, #680]
    2db4:	and	w8, w9, #0xf0
    2db8:	orr	w8, w8, #0x2
    2dbc:	add	x1, sp, #0x2a8
    2dc0:	mov	x0, x22
    2dc4:	strb	w8, [sp, #688]
    2dc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2dcc:	ldrb	w8, [sp, #688]
    2dd0:	mov	w25, #0x6                   	// #6
    2dd4:	add	x1, sp, #0x2a8
    2dd8:	mov	x0, x22
    2ddc:	and	w8, w8, #0xf0
    2de0:	orr	w8, w8, #0x4
    2de4:	str	x25, [sp, #680]
    2de8:	strb	w8, [sp, #688]
    2dec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2df0:	ldrb	w8, [sp, #688]
    2df4:	add	x1, sp, #0x2a8
    2df8:	mov	x0, x22
    2dfc:	str	x25, [sp, #680]
    2e00:	and	w8, w8, #0xf0
    2e04:	orr	w8, w8, #0x4
    2e08:	strb	w8, [sp, #688]
    2e0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2e10:	ldrb	w8, [sp, #688]
    2e14:	mov	w9, #0x5                   	// #5
    2e18:	add	x1, sp, #0x2a8
    2e1c:	mov	x0, x22
    2e20:	and	w8, w8, #0xf0
    2e24:	orr	w8, w8, #0x2
    2e28:	str	x9, [sp, #680]
    2e2c:	strb	w8, [sp, #688]
    2e30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2e34:	cbz	w24, 2e64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x27e4>
    2e38:	clz	w8, w24
    2e3c:	ldrb	w9, [sp, #688]
    2e40:	sub	w8, w23, w8
    2e44:	clz	w8, w8
    2e48:	sub	w8, w23, w8
    2e4c:	str	x8, [sp, #680]
    2e50:	and	w8, w9, #0xf0
    2e54:	orr	w8, w8, #0x2
    2e58:	b	2e70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x27f0>
    2e5c:	mov	w24, wzr
    2e60:	b	2f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2880>
    2e64:	ldrb	w8, [sp, #688]
    2e68:	str	xzr, [sp, #680]
    2e6c:	orr	w8, w8, #0x1
    2e70:	add	x1, sp, #0x2a8
    2e74:	mov	x0, x22
    2e78:	strb	w8, [sp, #688]
    2e7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2e80:	ldr	x8, [sp, #368]
    2e84:	cbz	x8, 2ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2828>
    2e88:	ldrb	w9, [sp, #688]
    2e8c:	clz	w8, w8
    2e90:	mov	w10, #0x20                  	// #32
    2e94:	sub	w8, w10, w8
    2e98:	str	x8, [sp, #680]
    2e9c:	and	w8, w9, #0xf0
    2ea0:	orr	w8, w8, #0x2
    2ea4:	b	2eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2834>
    2ea8:	ldrb	w8, [sp, #688]
    2eac:	str	xzr, [sp, #680]
    2eb0:	orr	w8, w8, #0x1
    2eb4:	add	x1, sp, #0x2a8
    2eb8:	mov	x0, x22
    2ebc:	strb	w8, [sp, #688]
    2ec0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ec4:	ldr	x23, [x19]
    2ec8:	mov	x1, x22
    2ecc:	stp	x22, x21, [sp, #312]
    2ed0:	mov	x0, x23
    2ed4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ed8:	add	x0, x23, #0x18
    2edc:	add	x1, sp, #0x138
    2ee0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ee4:	ldp	x9, x8, [x23, #24]
    2ee8:	ldr	x0, [sp, #320]
    2eec:	sub	x8, x8, x9
    2ef0:	lsr	x8, x8, #4
    2ef4:	add	w24, w8, #0x3
    2ef8:	cbz	x0, 2f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2880>
    2efc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2f00:	add	x8, sp, #0x2a8
    2f04:	add	x8, x8, #0x10
    2f08:	str	d9, [sp, #688]
    2f0c:	str	x8, [sp, #680]
    2f10:	ldr	x8, [x19, #16]
    2f14:	ldp	x0, x1, [x8, #208]
    2f18:	bl	993c <_ZL17getStringEncodingN4llvm9StringRefE>
    2f1c:	ldrb	w9, [sp, #248]
    2f20:	mov	w8, #0x8                   	// #8
    2f24:	str	x8, [sp, #240]
    2f28:	and	w9, w9, #0xf0
    2f2c:	orr	w9, w9, #0x2
    2f30:	strb	w9, [sp, #248]
    2f34:	cbz	w0, 2f4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28cc>
    2f38:	cmp	w0, #0x1
    2f3c:	b.ne	2f58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28d8>  // b.any
    2f40:	mov	w8, #0x2                   	// #2
    2f44:	mov	w9, #0x7                   	// #7
    2f48:	b	2f50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28d0>
    2f4c:	mov	x9, xzr
    2f50:	str	x9, [sp, #240]
    2f54:	strb	w8, [sp, #248]
    2f58:	mov	w0, #0x220                 	// #544
    2f5c:	bl	0 <_Znwm>
    2f60:	movi	v0.2s, #0x1
    2f64:	add	x8, x28, #0x10
    2f68:	add	x22, x0, #0x20
    2f6c:	mov	x21, x0
    2f70:	str	d0, [x0, #8]
    2f74:	str	x8, [x0]
    2f78:	mov	w2, #0x200                 	// #512
    2f7c:	mov	x0, x22
    2f80:	mov	w1, wzr
    2f84:	bl	0 <memset>
    2f88:	ldrb	w8, [sp, #304]
    2f8c:	mov	x23, x21
    2f90:	str	x22, [x23, #16]!
    2f94:	mov	w9, #0x10                  	// #16
    2f98:	orr	w8, w8, #0x1
    2f9c:	add	x1, sp, #0x128
    2fa0:	mov	x0, x23
    2fa4:	str	d8, [x21, #24]
    2fa8:	str	x9, [sp, #296]
    2fac:	strb	w8, [sp, #304]
    2fb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2fb4:	ldrb	w8, [sp, #304]
    2fb8:	add	x1, sp, #0x128
    2fbc:	mov	x0, x23
    2fc0:	str	xzr, [sp, #296]
    2fc4:	and	w8, w8, #0xf0
    2fc8:	orr	w8, w8, #0x6
    2fcc:	strb	w8, [sp, #304]
    2fd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2fd4:	add	x1, sp, #0xf0
    2fd8:	mov	x0, x23
    2fdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2fe0:	ldr	x22, [x19]
    2fe4:	mov	x1, x23
    2fe8:	stp	x23, x21, [sp, #296]
    2fec:	mov	x0, x22
    2ff0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ff4:	add	x0, x22, #0x18
    2ff8:	add	x1, sp, #0x128
    2ffc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3000:	ldp	x9, x8, [x22, #24]
    3004:	ldr	x0, [sp, #304]
    3008:	sub	x8, x8, x9
    300c:	lsr	x8, x8, #4
    3010:	add	w21, w8, #0x3
    3014:	cbz	x0, 301c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x299c>
    3018:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    301c:	ldr	x8, [x19, #16]
    3020:	ldr	x22, [x8, #216]
    3024:	cbz	x22, 3048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x29c8>
    3028:	ldr	x23, [x8, #208]
    302c:	ldrb	w8, [x23], #1
    3030:	add	x0, sp, #0x2a8
    3034:	add	x1, sp, #0x110
    3038:	str	w8, [sp, #272]
    303c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3040:	subs	x22, x22, #0x1
    3044:	b.ne	302c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x29ac>  // b.any
    3048:	ldr	x0, [x19]
    304c:	add	x2, sp, #0x2a8
    3050:	mov	w1, #0x10                  	// #16
    3054:	mov	w3, w21
    3058:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    305c:	str	wzr, [sp, #688]
    3060:	ldr	x8, [x19, #16]
    3064:	ldr	x22, [x8, #16]
    3068:	add	x23, x8, #0x8
    306c:	cmp	x23, x22
    3070:	b.eq	33e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d60>  // b.none
    3074:	add	x8, sp, #0xf0
    3078:	mov	w25, #0x1                   	// #1
    307c:	mov	w26, #0x20                  	// #32
    3080:	add	x27, x8, #0x10
    3084:	mov	w28, #0x1cf0                	// #7408
    3088:	ldrb	w8, [x22]
    308c:	tbnz	w8, #2, 4ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x497c>
    3090:	sub	x8, x22, #0x38
    3094:	cmp	x22, #0x0
    3098:	csel	x21, xzr, x8, eq  // eq = none
    309c:	mov	x0, x21
    30a0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    30a4:	mov	x2, x0
    30a8:	mov	x3, x1
    30ac:	mov	x0, x19
    30b0:	mov	x1, x2
    30b4:	mov	x2, x3
    30b8:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    30bc:	str	w0, [sp, #240]
    30c0:	add	x0, sp, #0x2a8
    30c4:	add	x1, sp, #0xf0
    30c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    30cc:	mov	x0, x21
    30d0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    30d4:	str	w1, [sp, #240]
    30d8:	add	x0, sp, #0x2a8
    30dc:	add	x1, sp, #0xf0
    30e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    30e4:	ldr	x1, [x21, #24]
    30e8:	mov	x0, x20
    30ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    30f0:	str	w0, [sp, #240]
    30f4:	add	x0, sp, #0x2a8
    30f8:	add	x1, sp, #0xf0
    30fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3100:	ldr	x8, [x21]
    3104:	cbz	x8, 4fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4944>
    3108:	ldr	w8, [x8, #8]
    310c:	and	w9, w8, #0xff
    3110:	cmp	w9, #0xf
    3114:	b.ne	4fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4960>  // b.any
    3118:	ldrb	w9, [x21, #80]
    311c:	lsr	w8, w8, #6
    3120:	and	w8, w8, #0x3fffffc
    3124:	add	x0, sp, #0x2a8
    3128:	bfxil	w8, w9, #0, #1
    312c:	orr	w8, w8, #0x2
    3130:	add	x1, sp, #0xf0
    3134:	str	w8, [sp, #240]
    3138:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    313c:	mov	x0, x21
    3140:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    3144:	tbz	w0, #0, 3150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ad0>
    3148:	mov	w8, wzr
    314c:	b	316c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2aec>
    3150:	mov	x0, x21
    3154:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    3158:	tbnz	w0, #0, 5120 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4aa0>
    315c:	ldur	x1, [x21, #-24]
    3160:	mov	x0, x20
    3164:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3168:	add	w8, w0, #0x1
    316c:	add	x0, sp, #0x2a8
    3170:	add	x1, sp, #0xf0
    3174:	str	w8, [sp, #240]
    3178:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    317c:	mov	x0, x21
    3180:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    3184:	str	w0, [sp, #240]
    3188:	add	x0, sp, #0x2a8
    318c:	add	x1, sp, #0xf0
    3190:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3194:	ldrh	w8, [x21, #34]
    3198:	add	x0, sp, #0x2a8
    319c:	add	x1, sp, #0xf0
    31a0:	and	w9, w8, #0x1f
    31a4:	tst	w8, #0x1f
    31a8:	add	w8, w9, #0xff
    31ac:	orr	w8, w8, #0x100
    31b0:	csel	w8, wzr, w8, eq  // eq = none
    31b4:	lsl	w9, w8, #23
    31b8:	lsl	x8, x25, x8
    31bc:	and	w8, w8, w9, asr #31
    31c0:	clz	w8, w8
    31c4:	sub	w8, w26, w8
    31c8:	str	w8, [sp, #240]
    31cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    31d0:	ldrb	w8, [x21, #34]
    31d4:	tbnz	w8, #6, 31ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b6c>
    31d8:	add	x0, sp, #0x2a8
    31dc:	add	x1, sp, #0x110
    31e0:	str	wzr, [sp, #272]
    31e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    31e8:	b	324c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bcc>
    31ec:	mov	x0, x21
    31f0:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    31f4:	cbz	x0, 3214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b94>
    31f8:	mov	x8, x0
    31fc:	add	x2, x0, x1
    3200:	add	x0, sp, #0xf0
    3204:	mov	x1, x8
    3208:	str	x27, [sp, #240]
    320c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3210:	b	321c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b9c>
    3214:	stp	x27, xzr, [sp, #240]
    3218:	strb	wzr, [sp, #256]
    321c:	add	x0, sp, #0x148
    3220:	add	x1, sp, #0xf0
    3224:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3228:	ldr	w8, [x0]
    322c:	add	x0, sp, #0x2a8
    3230:	add	x1, sp, #0x110
    3234:	str	w8, [sp, #272]
    3238:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    323c:	ldr	x0, [sp, #240]
    3240:	cmp	x0, x27
    3244:	b.eq	324c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bcc>  // b.none
    3248:	bl	0 <_ZdlPv>
    324c:	ldr	w8, [x21, #32]
    3250:	tst	w8, w28
    3254:	b.eq	32e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c64>  // b.none
    3258:	mov	x0, x21
    325c:	bl	99f0 <_ZL20getEncodedVisibilityRKN4llvm11GlobalValueE>
    3260:	str	w0, [sp, #240]
    3264:	add	x0, sp, #0x2a8
    3268:	add	x1, sp, #0xf0
    326c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3270:	mov	x0, x21
    3274:	bl	9a28 <_ZL25getEncodedThreadLocalModeRKN4llvm11GlobalValueE>
    3278:	str	w0, [sp, #240]
    327c:	add	x0, sp, #0x2a8
    3280:	add	x1, sp, #0xf0
    3284:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3288:	mov	x0, x21
    328c:	bl	9a60 <_ZL21getEncodedUnnamedAddrRKN4llvm11GlobalValueE>
    3290:	str	w0, [sp, #240]
    3294:	add	x0, sp, #0x2a8
    3298:	add	x1, sp, #0xf0
    329c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    32a0:	ldrb	w8, [x21, #80]
    32a4:	add	x0, sp, #0x2a8
    32a8:	add	x1, sp, #0xf0
    32ac:	ubfx	w8, w8, #1, #1
    32b0:	str	w8, [sp, #240]
    32b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    32b8:	mov	x0, x21
    32bc:	bl	9aa4 <_ZL25getEncodedDLLStorageClassRKN4llvm11GlobalValueE>
    32c0:	str	w0, [sp, #240]
    32c4:	add	x0, sp, #0x2a8
    32c8:	add	x1, sp, #0xf0
    32cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    32d0:	ldr	x1, [x21, #48]
    32d4:	cbz	x1, 3314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c94>
    32d8:	mov	x0, x20
    32dc:	bl	0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>
    32e0:	b	3318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c98>
    32e4:	tst	w8, #0x300
    32e8:	b.ne	3258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bd8>  // b.any
    32ec:	ldrb	w9, [x21, #80]
    32f0:	tbnz	w9, #1, 3258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bd8>
    32f4:	ldr	x9, [x21, #48]
    32f8:	cbnz	x9, 3258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bd8>
    32fc:	tst	w8, #0xc000
    3300:	b.ne	3258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bd8>  // b.any
    3304:	ldr	x8, [x21, #72]
    3308:	mov	w3, w24
    330c:	cbz	x8, 33b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d34>
    3310:	b	3258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bd8>
    3314:	mov	w0, wzr
    3318:	str	w0, [sp, #240]
    331c:	add	x0, sp, #0x2a8
    3320:	add	x1, sp, #0xf0
    3324:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3328:	mov	w1, #0xffffffff            	// #-1
    332c:	mov	x0, x21
    3330:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3334:	mov	x1, x0
    3338:	mov	x0, x20
    333c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3340:	str	w0, [sp, #240]
    3344:	add	x0, sp, #0x2a8
    3348:	add	x1, sp, #0xf0
    334c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3350:	ldr	w8, [x21, #32]
    3354:	add	x0, sp, #0x2a8
    3358:	add	x1, sp, #0xf0
    335c:	ubfx	w8, w8, #14, #1
    3360:	str	w8, [sp, #240]
    3364:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3368:	mov	x0, x21
    336c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3370:	mov	x2, x0
    3374:	mov	x3, x1
    3378:	mov	x0, x19
    337c:	mov	x1, x2
    3380:	mov	x2, x3
    3384:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    3388:	str	w0, [sp, #240]
    338c:	add	x0, sp, #0x2a8
    3390:	add	x1, sp, #0xf0
    3394:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3398:	mov	x0, x21
    339c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    33a0:	str	w1, [sp, #240]
    33a4:	add	x0, sp, #0x2a8
    33a8:	add	x1, sp, #0xf0
    33ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    33b0:	mov	w3, wzr
    33b4:	ldr	x0, [x19]
    33b8:	add	x2, sp, #0x2a8
    33bc:	mov	w1, #0x7                   	// #7
    33c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    33c4:	str	wzr, [sp, #688]
    33c8:	ldr	x22, [x22, #8]
    33cc:	cmp	x23, x22
    33d0:	b.ne	3088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a08>  // b.any
    33d4:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    33d8:	ldr	x8, [x19, #16]
    33dc:	ldr	x28, [x28]
    33e0:	ldr	x22, [x8, #32]
    33e4:	add	x23, x8, #0x18
    33e8:	cmp	x23, x22
    33ec:	b.eq	3798 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3118>  // b.none
    33f0:	add	x8, sp, #0xf0
    33f4:	mov	w24, #0x1                   	// #1
    33f8:	add	x25, x8, #0x10
    33fc:	mov	w26, #0x20                  	// #32
    3400:	ldrb	w8, [x22]
    3404:	tbnz	w8, #2, 4f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    3408:	sub	x8, x22, #0x38
    340c:	cmp	x22, #0x0
    3410:	csel	x21, xzr, x8, eq  // eq = none
    3414:	mov	x0, x21
    3418:	bl	0 <_ZNK4llvm5Value7getNameEv>
    341c:	mov	x2, x0
    3420:	mov	x3, x1
    3424:	mov	x0, x19
    3428:	mov	x1, x2
    342c:	mov	x2, x3
    3430:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    3434:	str	w0, [sp, #240]
    3438:	add	x0, sp, #0x2a8
    343c:	add	x1, sp, #0xf0
    3440:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3444:	mov	x0, x21
    3448:	bl	0 <_ZNK4llvm5Value7getNameEv>
    344c:	str	w1, [sp, #240]
    3450:	add	x0, sp, #0x2a8
    3454:	add	x1, sp, #0xf0
    3458:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    345c:	ldr	x1, [x21, #24]
    3460:	cbz	x1, 5058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49d8>
    3464:	ldrb	w8, [x1, #8]
    3468:	cmp	w8, #0xc
    346c:	b.ne	5090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a10>  // b.any
    3470:	mov	x0, x20
    3474:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3478:	str	w0, [sp, #240]
    347c:	add	x0, sp, #0x2a8
    3480:	add	x1, sp, #0xf0
    3484:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3488:	ldrh	w8, [x21, #18]
    348c:	add	x0, sp, #0x2a8
    3490:	add	x1, sp, #0xf0
    3494:	ubfx	w8, w8, #4, #10
    3498:	str	w8, [sp, #240]
    349c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    34a0:	mov	x0, x21
    34a4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    34a8:	and	w8, w0, #0x1
    34ac:	add	x0, sp, #0x2a8
    34b0:	add	x1, sp, #0xf0
    34b4:	str	w8, [sp, #240]
    34b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    34bc:	mov	x0, x21
    34c0:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    34c4:	str	w0, [sp, #240]
    34c8:	add	x0, sp, #0x2a8
    34cc:	add	x1, sp, #0xf0
    34d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    34d4:	ldr	x1, [x21, #112]
    34d8:	mov	x0, x20
    34dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    34e0:	str	w0, [sp, #240]
    34e4:	add	x0, sp, #0x2a8
    34e8:	add	x1, sp, #0xf0
    34ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    34f0:	ldrh	w8, [x21, #34]
    34f4:	add	x0, sp, #0x2a8
    34f8:	add	x1, sp, #0xf0
    34fc:	and	w9, w8, #0x1f
    3500:	tst	w8, #0x1f
    3504:	add	w8, w9, #0xff
    3508:	orr	w8, w8, #0x100
    350c:	csel	w8, wzr, w8, eq  // eq = none
    3510:	lsl	w9, w8, #23
    3514:	lsl	x8, x24, x8
    3518:	and	w8, w8, w9, asr #31
    351c:	clz	w8, w8
    3520:	sub	w8, w26, w8
    3524:	str	w8, [sp, #240]
    3528:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    352c:	ldrb	w8, [x21, #34]
    3530:	tbnz	w8, #6, 3548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ec8>
    3534:	add	x0, sp, #0x2a8
    3538:	add	x1, sp, #0x110
    353c:	str	wzr, [sp, #272]
    3540:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3544:	b	35a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f28>
    3548:	mov	x0, x21
    354c:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    3550:	cbz	x0, 3570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ef0>
    3554:	mov	x8, x0
    3558:	add	x2, x0, x1
    355c:	add	x0, sp, #0xf0
    3560:	mov	x1, x8
    3564:	str	x25, [sp, #240]
    3568:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    356c:	b	3578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ef8>
    3570:	stp	x25, xzr, [sp, #240]
    3574:	strb	wzr, [sp, #256]
    3578:	add	x0, sp, #0x148
    357c:	add	x1, sp, #0xf0
    3580:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3584:	ldr	w8, [x0]
    3588:	add	x0, sp, #0x2a8
    358c:	add	x1, sp, #0x110
    3590:	str	w8, [sp, #272]
    3594:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3598:	ldr	x0, [sp, #240]
    359c:	cmp	x0, x25
    35a0:	b.eq	35a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f28>  // b.none
    35a4:	bl	0 <_ZdlPv>
    35a8:	mov	x0, x21
    35ac:	bl	99f0 <_ZL20getEncodedVisibilityRKN4llvm11GlobalValueE>
    35b0:	str	w0, [sp, #240]
    35b4:	add	x0, sp, #0x2a8
    35b8:	add	x1, sp, #0xf0
    35bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    35c0:	ldrb	w8, [x21, #19]
    35c4:	tbnz	w8, #6, 35d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f50>
    35c8:	mov	w8, wzr
    35cc:	b	35e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f68>
    35d0:	mov	x0, x21
    35d4:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    35d8:	mov	x1, x0
    35dc:	add	x0, sp, #0x258
    35e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    35e4:	ldr	w8, [x0]
    35e8:	add	x0, sp, #0x2a8
    35ec:	add	x1, sp, #0xf0
    35f0:	str	w8, [sp, #240]
    35f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    35f8:	mov	x0, x21
    35fc:	bl	9a60 <_ZL21getEncodedUnnamedAddrRKN4llvm11GlobalValueE>
    3600:	str	w0, [sp, #240]
    3604:	add	x0, sp, #0x2a8
    3608:	add	x1, sp, #0xf0
    360c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3610:	ldrb	w8, [x21, #18]
    3614:	tbnz	w8, #2, 3620 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fa0>
    3618:	mov	w8, wzr
    361c:	b	3638 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fb8>
    3620:	mov	x0, x21
    3624:	bl	0 <_ZNK4llvm8Function15getPrologueDataEv>
    3628:	mov	x1, x0
    362c:	mov	x0, x20
    3630:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3634:	add	w8, w0, #0x1
    3638:	add	x0, sp, #0x2a8
    363c:	add	x1, sp, #0xf0
    3640:	str	w8, [sp, #240]
    3644:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3648:	mov	x0, x21
    364c:	bl	9aa4 <_ZL25getEncodedDLLStorageClassRKN4llvm11GlobalValueE>
    3650:	str	w0, [sp, #240]
    3654:	add	x0, sp, #0x2a8
    3658:	add	x1, sp, #0xf0
    365c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3660:	ldr	x1, [x21, #48]
    3664:	cbz	x1, 3674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ff4>
    3668:	mov	x0, x20
    366c:	bl	0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>
    3670:	b	3678 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ff8>
    3674:	mov	w0, wzr
    3678:	str	w0, [sp, #240]
    367c:	add	x0, sp, #0x2a8
    3680:	add	x1, sp, #0xf0
    3684:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3688:	ldrb	w8, [x21, #18]
    368c:	tbnz	w8, #1, 3698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3018>
    3690:	mov	w8, wzr
    3694:	b	36b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3030>
    3698:	mov	x0, x21
    369c:	bl	0 <_ZNK4llvm8Function13getPrefixDataEv>
    36a0:	mov	x1, x0
    36a4:	mov	x0, x20
    36a8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    36ac:	add	w8, w0, #0x1
    36b0:	add	x0, sp, #0x2a8
    36b4:	add	x1, sp, #0xf0
    36b8:	str	w8, [sp, #240]
    36bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    36c0:	ldrb	w8, [x21, #18]
    36c4:	tbnz	w8, #3, 36d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3050>
    36c8:	mov	w8, wzr
    36cc:	b	36e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3068>
    36d0:	mov	x0, x21
    36d4:	bl	0 <_ZNK4llvm8Function16getPersonalityFnEv>
    36d8:	mov	x1, x0
    36dc:	mov	x0, x20
    36e0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    36e4:	add	w8, w0, #0x1
    36e8:	add	x0, sp, #0x2a8
    36ec:	add	x1, sp, #0xf0
    36f0:	str	w8, [sp, #240]
    36f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    36f8:	ldr	w8, [x21, #32]
    36fc:	add	x0, sp, #0x2a8
    3700:	add	x1, sp, #0xf0
    3704:	ubfx	w8, w8, #14, #1
    3708:	str	w8, [sp, #240]
    370c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3710:	mov	x0, x21
    3714:	bl	0 <_ZNK4llvm11GlobalValue15getAddressSpaceEv>
    3718:	str	w0, [sp, #240]
    371c:	add	x0, sp, #0x2a8
    3720:	add	x1, sp, #0xf0
    3724:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3728:	mov	x0, x21
    372c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3730:	mov	x2, x0
    3734:	mov	x3, x1
    3738:	mov	x0, x19
    373c:	mov	x1, x2
    3740:	mov	x2, x3
    3744:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    3748:	str	w0, [sp, #240]
    374c:	add	x0, sp, #0x2a8
    3750:	add	x1, sp, #0xf0
    3754:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3758:	mov	x0, x21
    375c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3760:	str	w1, [sp, #240]
    3764:	add	x0, sp, #0x2a8
    3768:	add	x1, sp, #0xf0
    376c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3770:	ldr	x0, [x19]
    3774:	add	x2, sp, #0x2a8
    3778:	mov	w1, #0x8                   	// #8
    377c:	mov	w3, wzr
    3780:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3784:	str	wzr, [sp, #688]
    3788:	ldr	x22, [x22, #8]
    378c:	cmp	x23, x22
    3790:	b.ne	3400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d80>  // b.any
    3794:	ldr	x8, [x19, #16]
    3798:	ldr	x22, [x8, #48]
    379c:	add	x23, x8, #0x28
    37a0:	cmp	x23, x22
    37a4:	b.eq	3978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32f8>  // b.none
    37a8:	ldrb	w8, [x22]
    37ac:	tbnz	w8, #2, 50b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a30>
    37b0:	sub	x8, x22, #0x30
    37b4:	cmp	x22, #0x0
    37b8:	csel	x21, xzr, x8, eq  // eq = none
    37bc:	mov	x0, x21
    37c0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    37c4:	mov	x2, x0
    37c8:	mov	x3, x1
    37cc:	mov	x0, x19
    37d0:	mov	x1, x2
    37d4:	mov	x2, x3
    37d8:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    37dc:	str	w0, [sp, #240]
    37e0:	add	x0, sp, #0x2a8
    37e4:	add	x1, sp, #0xf0
    37e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    37ec:	mov	x0, x21
    37f0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    37f4:	str	w1, [sp, #240]
    37f8:	add	x0, sp, #0x2a8
    37fc:	add	x1, sp, #0xf0
    3800:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3804:	ldr	x1, [x21, #24]
    3808:	mov	x0, x20
    380c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3810:	str	w0, [sp, #240]
    3814:	add	x0, sp, #0x2a8
    3818:	add	x1, sp, #0xf0
    381c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3820:	ldr	x8, [x21]
    3824:	cbz	x8, 4fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4944>
    3828:	ldr	w8, [x8, #8]
    382c:	and	w9, w8, #0xff
    3830:	cmp	w9, #0xf
    3834:	b.ne	4fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4960>  // b.any
    3838:	lsr	w8, w8, #8
    383c:	add	x0, sp, #0x2a8
    3840:	add	x1, sp, #0xf0
    3844:	str	w8, [sp, #240]
    3848:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    384c:	ldur	x1, [x21, #-24]
    3850:	cbz	x1, 3860 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31e0>
    3854:	ldrb	w8, [x1, #16]
    3858:	cmp	w8, #0x11
    385c:	b.cs	5038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49b8>  // b.hs, b.nlast
    3860:	mov	x0, x20
    3864:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3868:	str	w0, [sp, #240]
    386c:	add	x0, sp, #0x2a8
    3870:	add	x1, sp, #0xf0
    3874:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3878:	mov	x0, x21
    387c:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    3880:	str	w0, [sp, #240]
    3884:	add	x0, sp, #0x2a8
    3888:	add	x1, sp, #0xf0
    388c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3890:	mov	x0, x21
    3894:	bl	99f0 <_ZL20getEncodedVisibilityRKN4llvm11GlobalValueE>
    3898:	str	w0, [sp, #240]
    389c:	add	x0, sp, #0x2a8
    38a0:	add	x1, sp, #0xf0
    38a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    38a8:	mov	x0, x21
    38ac:	bl	9aa4 <_ZL25getEncodedDLLStorageClassRKN4llvm11GlobalValueE>
    38b0:	str	w0, [sp, #240]
    38b4:	add	x0, sp, #0x2a8
    38b8:	add	x1, sp, #0xf0
    38bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    38c0:	mov	x0, x21
    38c4:	bl	9a28 <_ZL25getEncodedThreadLocalModeRKN4llvm11GlobalValueE>
    38c8:	str	w0, [sp, #240]
    38cc:	add	x0, sp, #0x2a8
    38d0:	add	x1, sp, #0xf0
    38d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    38d8:	mov	x0, x21
    38dc:	bl	9a60 <_ZL21getEncodedUnnamedAddrRKN4llvm11GlobalValueE>
    38e0:	str	w0, [sp, #240]
    38e4:	add	x0, sp, #0x2a8
    38e8:	add	x1, sp, #0xf0
    38ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    38f0:	ldr	w8, [x21, #32]
    38f4:	add	x0, sp, #0x2a8
    38f8:	add	x1, sp, #0xf0
    38fc:	ubfx	w8, w8, #14, #1
    3900:	str	w8, [sp, #240]
    3904:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3908:	mov	x0, x21
    390c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3910:	mov	x2, x0
    3914:	mov	x3, x1
    3918:	mov	x0, x19
    391c:	mov	x1, x2
    3920:	mov	x2, x3
    3924:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    3928:	str	w0, [sp, #240]
    392c:	add	x0, sp, #0x2a8
    3930:	add	x1, sp, #0xf0
    3934:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3938:	mov	x0, x21
    393c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3940:	str	w1, [sp, #240]
    3944:	add	x0, sp, #0x2a8
    3948:	add	x1, sp, #0xf0
    394c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3950:	ldr	x0, [x19]
    3954:	add	x2, sp, #0x2a8
    3958:	mov	w1, #0xe                   	// #14
    395c:	mov	w3, wzr
    3960:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3964:	str	wzr, [sp, #688]
    3968:	ldr	x22, [x22, #8]
    396c:	cmp	x23, x22
    3970:	b.ne	37a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3128>  // b.any
    3974:	ldr	x8, [x19, #16]
    3978:	ldr	x22, [x8, #64]
    397c:	add	x23, x8, #0x38
    3980:	cmp	x23, x22
    3984:	b.eq	3b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3488>  // b.none
    3988:	ldrb	w8, [x22]
    398c:	tbnz	w8, #2, 50cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a4c>
    3990:	sub	x8, x22, #0x30
    3994:	cmp	x22, #0x0
    3998:	csel	x21, xzr, x8, eq  // eq = none
    399c:	mov	x0, x21
    39a0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    39a4:	mov	x2, x0
    39a8:	mov	x3, x1
    39ac:	mov	x0, x19
    39b0:	mov	x1, x2
    39b4:	mov	x2, x3
    39b8:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    39bc:	str	w0, [sp, #240]
    39c0:	add	x0, sp, #0x2a8
    39c4:	add	x1, sp, #0xf0
    39c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    39cc:	mov	x0, x21
    39d0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    39d4:	str	w1, [sp, #240]
    39d8:	add	x0, sp, #0x2a8
    39dc:	add	x1, sp, #0xf0
    39e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    39e4:	ldr	x1, [x21, #24]
    39e8:	mov	x0, x20
    39ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    39f0:	str	w0, [sp, #240]
    39f4:	add	x0, sp, #0x2a8
    39f8:	add	x1, sp, #0xf0
    39fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a00:	ldr	x8, [x21]
    3a04:	cbz	x8, 4fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4944>
    3a08:	ldr	w8, [x8, #8]
    3a0c:	and	w9, w8, #0xff
    3a10:	cmp	w9, #0xf
    3a14:	b.ne	4fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4960>  // b.any
    3a18:	lsr	w8, w8, #8
    3a1c:	add	x0, sp, #0x2a8
    3a20:	add	x1, sp, #0xf0
    3a24:	str	w8, [sp, #240]
    3a28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a2c:	ldur	x1, [x21, #-24]
    3a30:	cbz	x1, 3a40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x33c0>
    3a34:	ldrb	w8, [x1, #16]
    3a38:	cmp	w8, #0x11
    3a3c:	b.cs	5038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49b8>  // b.hs, b.nlast
    3a40:	mov	x0, x20
    3a44:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3a48:	str	w0, [sp, #240]
    3a4c:	add	x0, sp, #0x2a8
    3a50:	add	x1, sp, #0xf0
    3a54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a58:	mov	x0, x21
    3a5c:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    3a60:	str	w0, [sp, #240]
    3a64:	add	x0, sp, #0x2a8
    3a68:	add	x1, sp, #0xf0
    3a6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a70:	mov	x0, x21
    3a74:	bl	99f0 <_ZL20getEncodedVisibilityRKN4llvm11GlobalValueE>
    3a78:	str	w0, [sp, #240]
    3a7c:	add	x0, sp, #0x2a8
    3a80:	add	x1, sp, #0xf0
    3a84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a88:	ldr	w8, [x21, #32]
    3a8c:	add	x0, sp, #0x2a8
    3a90:	add	x1, sp, #0xf0
    3a94:	ubfx	w8, w8, #14, #1
    3a98:	str	w8, [sp, #240]
    3a9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3aa0:	mov	x0, x21
    3aa4:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3aa8:	mov	x2, x0
    3aac:	mov	x3, x1
    3ab0:	mov	x0, x19
    3ab4:	mov	x1, x2
    3ab8:	mov	x2, x3
    3abc:	bl	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>
    3ac0:	str	w0, [sp, #240]
    3ac4:	add	x0, sp, #0x2a8
    3ac8:	add	x1, sp, #0xf0
    3acc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ad0:	mov	x0, x21
    3ad4:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    3ad8:	str	w1, [sp, #240]
    3adc:	add	x0, sp, #0x2a8
    3ae0:	add	x1, sp, #0xf0
    3ae4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ae8:	ldr	x0, [x19]
    3aec:	add	x2, sp, #0x2a8
    3af0:	mov	w1, #0x12                  	// #18
    3af4:	mov	w3, wzr
    3af8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3afc:	str	wzr, [sp, #688]
    3b00:	ldr	x22, [x22, #8]
    3b04:	b	3980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3300>
    3b08:	mov	w0, #0x220                 	// #544
    3b0c:	bl	0 <_Znwm>
    3b10:	movi	v0.2s, #0x1
    3b14:	add	x8, x28, #0x10
    3b18:	add	x22, x0, #0x20
    3b1c:	mov	x21, x0
    3b20:	str	d0, [x0, #8]
    3b24:	str	x8, [x0]
    3b28:	mov	w2, #0x200                 	// #512
    3b2c:	mov	x0, x22
    3b30:	mov	w1, wzr
    3b34:	bl	0 <memset>
    3b38:	mov	x23, x21
    3b3c:	str	x22, [x23, #16]!
    3b40:	mov	w8, #0xd                   	// #13
    3b44:	mov	w9, #0xff                  	// #255
    3b48:	add	x1, sp, #0xf0
    3b4c:	mov	x0, x23
    3b50:	str	d8, [x21, #24]
    3b54:	str	x8, [sp, #240]
    3b58:	strb	w9, [sp, #248]
    3b5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3b60:	mov	w8, #0x20                  	// #32
    3b64:	mov	w9, #0x2                   	// #2
    3b68:	add	x1, sp, #0xf0
    3b6c:	mov	x0, x23
    3b70:	str	x8, [sp, #240]
    3b74:	strb	w9, [sp, #248]
    3b78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3b7c:	ldr	x22, [x19]
    3b80:	mov	x1, x23
    3b84:	stp	x23, x21, [sp, #240]
    3b88:	mov	x0, x22
    3b8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3b90:	add	x0, x22, #0x18
    3b94:	add	x1, sp, #0xf0
    3b98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3b9c:	ldp	x9, x8, [x22, #24]
    3ba0:	ldr	x0, [sp, #248]
    3ba4:	sub	x8, x8, x9
    3ba8:	lsr	x8, x8, #4
    3bac:	add	w21, w8, #0x3
    3bb0:	cbz	x0, 3bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3538>
    3bb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3bb8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3bbc:	add	x8, x8, #0x0
    3bc0:	ldr	q0, [x8]
    3bc4:	add	x2, sp, #0x110
    3bc8:	mov	w3, #0x2                   	// #2
    3bcc:	mov	w1, w21
    3bd0:	str	q0, [sp, #272]
    3bd4:	ldr	x0, [x19]
    3bd8:	mov	x4, xzr
    3bdc:	mov	x5, xzr
    3be0:	mov	x6, xzr
    3be4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3be8:	ldr	x8, [x19]
    3bec:	ldr	x9, [x8]
    3bf0:	ldr	w8, [x8, #8]
    3bf4:	ldr	w9, [x9, #8]
    3bf8:	add	x8, x8, x9, lsl #3
    3bfc:	sub	x8, x8, #0x20
    3c00:	str	x8, [x19, #648]
    3c04:	ldr	x0, [sp, #680]
    3c08:	add	x8, sp, #0x2a8
    3c0c:	add	x8, x8, #0x10
    3c10:	cmp	x0, x8
    3c14:	b.eq	3c1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x359c>  // b.none
    3c18:	bl	0 <free>
    3c1c:	ldr	x1, [sp, #616]
    3c20:	add	x0, sp, #0x258
    3c24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3c28:	ldr	x1, [sp, #344]
    3c2c:	add	x0, sp, #0x148
    3c30:	add	x22, sp, #0x148
    3c34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3c38:	ldp	x8, x9, [x19, #136]
    3c3c:	sub	x23, x9, x8
    3c40:	lsr	x9, x23, #4
    3c44:	cbz	w9, 3ca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3628>
    3c48:	ldr	x8, [x8]
    3c4c:	add	x0, sp, #0x2a8
    3c50:	str	x8, [sp, #680]
    3c54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3c58:	mov	x21, xzr
    3c5c:	tbz	w0, #0, 3c8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x360c>
    3c60:	ubfx	x23, x23, #4, #32
    3c64:	add	x21, x21, #0x1
    3c68:	cmp	x21, x23
    3c6c:	b.eq	3ca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3628>  // b.none
    3c70:	ldr	x8, [x19, #136]
    3c74:	lsl	x9, x21, #4
    3c78:	add	x0, sp, #0x2a8
    3c7c:	ldr	x8, [x8, x9]
    3c80:	str	x8, [sp, #680]
    3c84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3c88:	tbnz	w0, #0, 3c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x35e4>
    3c8c:	ldp	x9, x8, [x19, #136]
    3c90:	mov	w3, #0x1                   	// #1
    3c94:	mov	x0, x19
    3c98:	mov	w1, w21
    3c9c:	sub	x8, x8, x9
    3ca0:	lsr	x2, x8, #4
    3ca4:	bl	9adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>
    3ca8:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3cac:	ldr	d10, [x9]
    3cb0:	add	x8, sp, #0x2a8
    3cb4:	add	x8, x8, #0x10
    3cb8:	str	x8, [sp, #680]
    3cbc:	add	x8, x22, #0x10
    3cc0:	str	d9, [sp, #688]
    3cc4:	str	x8, [sp, #328]
    3cc8:	str	d10, [sp, #336]
    3ccc:	ldr	x0, [x19, #16]
    3cd0:	add	x1, sp, #0x148
    3cd4:	bl	0 <_ZNK4llvm6Module14getMDKindNamesERNS_15SmallVectorImplINS_9StringRefEEE>
    3cd8:	ldr	w8, [sp, #336]
    3cdc:	cbz	w8, 3d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36e4>
    3ce0:	ldr	x0, [x19]
    3ce4:	mov	w1, #0x16                  	// #22
    3ce8:	mov	w2, #0x3                   	// #3
    3cec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3cf0:	ldr	w21, [sp, #336]
    3cf4:	cbz	w21, 3d5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36dc>
    3cf8:	mov	x22, xzr
    3cfc:	mov	x23, xzr
    3d00:	add	x0, sp, #0x2a8
    3d04:	add	x1, sp, #0x258
    3d08:	str	x23, [sp, #600]
    3d0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3d10:	ldr	w8, [sp, #336]
    3d14:	cmp	x23, x8
    3d18:	b.cs	50e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a68>  // b.hs, b.nlast
    3d1c:	ldr	x8, [sp, #328]
    3d20:	add	x0, sp, #0x2a8
    3d24:	add	x8, x8, x22
    3d28:	ldp	x1, x8, [x8]
    3d2c:	add	x2, x1, x8
    3d30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3d34:	ldr	x0, [x19]
    3d38:	add	x2, sp, #0x2a8
    3d3c:	mov	w1, #0x6                   	// #6
    3d40:	mov	w3, wzr
    3d44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3d48:	add	x23, x23, #0x1
    3d4c:	cmp	x21, x23
    3d50:	add	x22, x22, #0x10
    3d54:	str	wzr, [sp, #688]
    3d58:	b.ne	3d00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3680>  // b.any
    3d5c:	ldr	x0, [x19]
    3d60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3d64:	ldr	x0, [sp, #328]
    3d68:	add	x8, sp, #0x148
    3d6c:	add	x8, x8, #0x10
    3d70:	cmp	x0, x8
    3d74:	b.eq	3d7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36fc>  // b.none
    3d78:	bl	0 <free>
    3d7c:	ldr	x0, [sp, #680]
    3d80:	add	x8, sp, #0x2a8
    3d84:	add	x8, x8, #0x10
    3d88:	cmp	x0, x8
    3d8c:	b.eq	3d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3714>  // b.none
    3d90:	bl	0 <free>
    3d94:	ldp	x9, x8, [x19, #232]
    3d98:	ldr	w10, [x19, #564]
    3d9c:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3da0:	sub	x8, x8, x9
    3da4:	cmp	x10, x8, asr #3
    3da8:	b.cc	3dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3740>  // b.lo, b.ul, b.last
    3dac:	ldr	x8, [x19, #16]
    3db0:	ldr	x9, [x8, #72]!
    3db4:	and	x9, x9, #0xfffffffffffffff8
    3db8:	cmp	x8, x9
    3dbc:	b.eq	447c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3dfc>  // b.none
    3dc0:	ldr	x0, [x19]
    3dc4:	mov	w1, #0xf                   	// #15
    3dc8:	mov	w2, #0x4                   	// #4
    3dcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3dd0:	add	x8, sp, #0x2a8
    3dd4:	add	x8, x8, #0x10
    3dd8:	add	x0, sp, #0x258
    3ddc:	mov	w1, #0x1c                  	// #28
    3de0:	str	d9, [sp, #688]
    3de4:	str	xzr, [sp, #608]
    3de8:	str	xzr, [sp, #600]
    3dec:	str	x8, [sp, #680]
    3df0:	str	xzr, [sp, #616]
    3df4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3df8:	mov	x0, x19
    3dfc:	bl	af30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>
    3e00:	ldr	x8, [sp, #600]
    3e04:	str	w0, [x8, #4]
    3e08:	mov	x0, x19
    3e0c:	bl	b0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>
    3e10:	ldr	x8, [sp, #600]
    3e14:	str	w0, [x8, #16]
    3e18:	mov	w0, #0x220                 	// #544
    3e1c:	bl	0 <_Znwm>
    3e20:	movi	v11.2s, #0x1
    3e24:	add	x27, x28, #0x10
    3e28:	add	x22, x0, #0x20
    3e2c:	mov	x21, x0
    3e30:	str	d11, [x0, #8]
    3e34:	str	x27, [x0]
    3e38:	mov	w2, #0x200                 	// #512
    3e3c:	mov	x0, x22
    3e40:	mov	w1, wzr
    3e44:	bl	0 <memset>
    3e48:	ldrb	w8, [sp, #336]
    3e4c:	mov	x23, x21
    3e50:	str	x22, [x23, #16]!
    3e54:	mov	w9, #0x26                  	// #38
    3e58:	orr	w8, w8, #0x1
    3e5c:	add	x1, sp, #0x148
    3e60:	mov	x0, x23
    3e64:	str	d8, [x21, #24]
    3e68:	str	x9, [sp, #328]
    3e6c:	strb	w8, [sp, #336]
    3e70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3e74:	ldrb	w8, [sp, #336]
    3e78:	mov	w22, #0x20                  	// #32
    3e7c:	add	x1, sp, #0x148
    3e80:	mov	x0, x23
    3e84:	and	w8, w8, #0xf0
    3e88:	orr	w8, w8, #0x2
    3e8c:	str	x22, [sp, #328]
    3e90:	strb	w8, [sp, #336]
    3e94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3e98:	ldrb	w8, [sp, #336]
    3e9c:	add	x1, sp, #0x148
    3ea0:	mov	x0, x23
    3ea4:	str	x22, [sp, #328]
    3ea8:	and	w8, w8, #0xf0
    3eac:	orr	w8, w8, #0x2
    3eb0:	strb	w8, [sp, #336]
    3eb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3eb8:	ldr	x22, [x19]
    3ebc:	mov	x1, x23
    3ec0:	stp	x23, x21, [sp, #312]
    3ec4:	mov	x0, x22
    3ec8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ecc:	add	x0, x22, #0x18
    3ed0:	add	x1, sp, #0x138
    3ed4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ed8:	ldr	x0, [sp, #320]
    3edc:	ldp	x26, x25, [x22, #24]
    3ee0:	cbz	x0, 3ee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3868>
    3ee4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ee8:	mov	w0, #0x220                 	// #544
    3eec:	bl	0 <_Znwm>
    3ef0:	add	x22, x0, #0x20
    3ef4:	mov	x21, x0
    3ef8:	str	d11, [x0, #8]
    3efc:	str	x27, [x0]
    3f00:	mov	w2, #0x200                 	// #512
    3f04:	mov	x0, x22
    3f08:	mov	w1, wzr
    3f0c:	bl	0 <memset>
    3f10:	ldrb	w8, [sp, #336]
    3f14:	mov	x23, x21
    3f18:	str	x22, [x23, #16]!
    3f1c:	mov	w9, #0x27                  	// #39
    3f20:	orr	w8, w8, #0x1
    3f24:	add	x1, sp, #0x148
    3f28:	mov	x0, x23
    3f2c:	str	d8, [x21, #24]
    3f30:	str	x9, [sp, #328]
    3f34:	strb	w8, [sp, #336]
    3f38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f3c:	ldrb	w8, [sp, #336]
    3f40:	add	x1, sp, #0x148
    3f44:	mov	x0, x23
    3f48:	str	xzr, [sp, #328]
    3f4c:	and	w8, w8, #0xf0
    3f50:	orr	w8, w8, #0x6
    3f54:	strb	w8, [sp, #336]
    3f58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f5c:	ldrb	w8, [sp, #336]
    3f60:	mov	w9, #0x6                   	// #6
    3f64:	add	x1, sp, #0x148
    3f68:	mov	x0, x23
    3f6c:	and	w8, w8, #0xf0
    3f70:	orr	w8, w8, #0x4
    3f74:	str	x9, [sp, #328]
    3f78:	strb	w8, [sp, #336]
    3f7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f80:	ldr	x22, [x19]
    3f84:	mov	x1, x23
    3f88:	stp	x23, x21, [sp, #296]
    3f8c:	mov	x0, x22
    3f90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f94:	add	x0, x22, #0x18
    3f98:	add	x1, sp, #0x128
    3f9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3fa0:	ldr	x0, [sp, #304]
    3fa4:	ldp	x23, x21, [x22, #24]
    3fa8:	cbz	x0, 3fb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3930>
    3fac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3fb0:	mov	x0, x20
    3fb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3fb8:	mov	x2, x0
    3fbc:	mov	x4, x1
    3fc0:	add	x3, sp, #0x2a8
    3fc4:	mov	x0, x19
    3fc8:	mov	x1, x2
    3fcc:	mov	x2, x4
    3fd0:	bl	b20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>
    3fd4:	ldp	x8, x9, [x19, #232]
    3fd8:	ldr	w10, [x19, #564]
    3fdc:	ldr	w11, [x19, #568]
    3fe0:	adrp	x22, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3fe4:	sub	x8, x9, x8
    3fe8:	ldr	w9, [x22]
    3fec:	asr	x8, x8, #3
    3ff0:	sub	x8, x8, x10
    3ff4:	sub	x1, x8, x11
    3ff8:	cmp	x1, x9
    3ffc:	b.ls	403c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39bc>  // b.plast
    4000:	stp	xzr, xzr, [sp, #272]
    4004:	ldr	x0, [x19]
    4008:	sub	x8, x25, x26
    400c:	lsr	x8, x8, #4
    4010:	add	w3, w8, #0x3
    4014:	add	x2, sp, #0x110
    4018:	mov	w1, #0x26                  	// #38
    401c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4020:	ldp	x8, x9, [x19, #232]
    4024:	ldr	w10, [x19, #564]
    4028:	ldr	w11, [x19, #568]
    402c:	sub	x8, x9, x8
    4030:	asr	x8, x8, #3
    4034:	sub	x8, x8, x10
    4038:	sub	x1, x8, x11
    403c:	ldr	x8, [x19]
    4040:	add	x0, sp, #0xf0
    4044:	ldr	x9, [x8]
    4048:	ldr	w26, [x8, #8]
    404c:	ldr	w25, [x9, #8]
    4050:	stp	xzr, xzr, [sp, #240]
    4054:	str	xzr, [sp, #256]
    4058:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    405c:	ldp	x8, x9, [x19, #232]
    4060:	ldr	w10, [x19, #564]
    4064:	ldr	w11, [x19, #568]
    4068:	add	x3, sp, #0x2a8
    406c:	sub	x9, x9, x8
    4070:	asr	x9, x9, #3
    4074:	add	x8, x8, x10, lsl #3
    4078:	sub	x9, x9, x10
    407c:	sub	x2, x9, x11
    4080:	add	x1, x8, x11, lsl #3
    4084:	add	x4, sp, #0x258
    4088:	add	x5, sp, #0xf0
    408c:	mov	x0, x19
    4090:	bl	b4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>
    4094:	ldp	x8, x9, [x19, #232]
    4098:	ldr	w10, [x19, #564]
    409c:	ldr	w11, [x19, #568]
    40a0:	sub	x8, x9, x8
    40a4:	ldr	w9, [x22]
    40a8:	asr	x8, x8, #3
    40ac:	sub	x8, x8, x10
    40b0:	sub	x8, x8, x11
    40b4:	cmp	x8, x9
    40b8:	b.ls	414c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3acc>  // b.plast
    40bc:	ldr	x22, [x19]
    40c0:	sub	x8, x21, x23
    40c4:	lsr	x8, x8, #4
    40c8:	add	w21, w8, #0x3
    40cc:	ldr	x9, [x22]
    40d0:	ldr	w8, [x22, #8]
    40d4:	add	x25, x26, x25, lsl #3
    40d8:	sub	x1, x25, #0x40
    40dc:	ldr	w9, [x9, #8]
    40e0:	sub	x8, x8, x25
    40e4:	mov	x0, x22
    40e8:	add	x23, x8, x9, lsl #3
    40ec:	mov	w2, w23
    40f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    40f4:	sub	x1, x25, #0x20
    40f8:	lsr	x2, x23, #32
    40fc:	mov	x0, x22
    4100:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4104:	ldp	x8, x9, [sp, #240]
    4108:	cmp	x8, x9
    410c:	b.eq	4128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3aa8>  // b.none
    4110:	ldr	x10, [x8]
    4114:	sub	x11, x10, x25
    4118:	str	x11, [x8], #8
    411c:	cmp	x9, x8
    4120:	mov	x25, x10
    4124:	b.ne	4110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a90>  // b.any
    4128:	ldr	x0, [x19]
    412c:	add	x2, sp, #0xf0
    4130:	mov	w1, #0x27                  	// #39
    4134:	mov	w3, w21
    4138:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    413c:	ldp	x8, x9, [sp, #240]
    4140:	cmp	x9, x8
    4144:	b.eq	414c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3acc>  // b.none
    4148:	str	x8, [sp, #248]
    414c:	ldr	x8, [x19, #16]
    4150:	mov	x9, x8
    4154:	ldr	x10, [x9, #72]!
    4158:	and	x10, x10, #0xfffffffffffffff8
    415c:	cmp	x9, x10
    4160:	b.eq	42f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c74>  // b.none
    4164:	mov	w0, #0x220                 	// #544
    4168:	bl	0 <_Znwm>
    416c:	movi	v0.2s, #0x1
    4170:	add	x8, x28, #0x10
    4174:	add	x22, x0, #0x20
    4178:	mov	x21, x0
    417c:	str	d0, [x0, #8]
    4180:	str	x8, [x0]
    4184:	mov	w2, #0x200                 	// #512
    4188:	mov	x0, x22
    418c:	mov	w1, wzr
    4190:	bl	0 <memset>
    4194:	mov	x23, x21
    4198:	str	x22, [x23, #16]!
    419c:	mov	w8, #0x4                   	// #4
    41a0:	mov	w9, #0xff                  	// #255
    41a4:	add	x1, sp, #0x148
    41a8:	mov	x0, x23
    41ac:	str	d8, [x21, #24]
    41b0:	str	x8, [sp, #328]
    41b4:	strb	w9, [sp, #336]
    41b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    41bc:	mov	w8, #0x6                   	// #6
    41c0:	add	x1, sp, #0x148
    41c4:	mov	x0, x23
    41c8:	str	xzr, [sp, #328]
    41cc:	strb	w8, [sp, #336]
    41d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    41d4:	mov	w8, #0x8                   	// #8
    41d8:	mov	w9, #0x2                   	// #2
    41dc:	add	x1, sp, #0x148
    41e0:	mov	x0, x23
    41e4:	str	x8, [sp, #328]
    41e8:	strb	w9, [sp, #336]
    41ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    41f0:	ldr	x22, [x19]
    41f4:	mov	x1, x23
    41f8:	stp	x23, x21, [sp, #328]
    41fc:	mov	x0, x22
    4200:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4204:	add	x0, x22, #0x18
    4208:	add	x1, sp, #0x148
    420c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4210:	ldr	x0, [sp, #336]
    4214:	ldp	x22, x23, [x22, #24]
    4218:	cbz	x0, 4220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ba0>
    421c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4220:	ldr	x8, [x19, #16]
    4224:	ldr	x21, [x8, #80]
    4228:	add	x25, x8, #0x48
    422c:	cmp	x25, x21
    4230:	b.eq	42f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c74>  // b.none
    4234:	sub	x8, x23, x22
    4238:	lsr	x8, x8, #4
    423c:	add	w22, w8, #0x3
    4240:	ldrb	w8, [x21]
    4244:	tbnz	w8, #2, 5104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a84>
    4248:	mov	x0, x21
    424c:	bl	0 <_ZNK4llvm11NamedMDNode7getNameEv>
    4250:	mov	x8, x0
    4254:	add	x2, x0, x1
    4258:	add	x0, sp, #0x2a8
    425c:	mov	x1, x8
    4260:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4264:	ldr	x0, [x19]
    4268:	add	x2, sp, #0x2a8
    426c:	mov	w1, #0x4                   	// #4
    4270:	mov	w3, w22
    4274:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4278:	mov	x0, x21
    427c:	str	wzr, [sp, #688]
    4280:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    4284:	cbz	w0, 42cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c4c>
    4288:	mov	w23, w0
    428c:	mov	w1, wzr
    4290:	mov	x26, xzr
    4294:	mov	x0, x21
    4298:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    429c:	mov	x1, x0
    42a0:	mov	x0, x20
    42a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    42a8:	mov	w8, w0
    42ac:	add	x0, sp, #0x2a8
    42b0:	add	x1, sp, #0x148
    42b4:	str	x8, [sp, #328]
    42b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    42bc:	add	x1, x26, #0x1
    42c0:	cmp	w23, w1
    42c4:	and	x26, x1, #0xffffffff
    42c8:	b.ne	4294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c14>  // b.any
    42cc:	ldr	x0, [x19]
    42d0:	add	x2, sp, #0x2a8
    42d4:	mov	w1, #0xa                   	// #10
    42d8:	mov	w3, wzr
    42dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    42e0:	str	wzr, [sp, #688]
    42e4:	ldr	x21, [x21, #8]
    42e8:	cmp	x25, x21
    42ec:	b.ne	4240 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3bc0>  // b.any
    42f0:	ldr	x8, [x19, #16]
    42f4:	ldr	x22, [x8, #32]
    42f8:	add	x23, x8, #0x18
    42fc:	cmp	x23, x22
    4300:	b.eq	43a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d24>  // b.none
    4304:	ldr	d11, [x24]
    4308:	add	x8, sp, #0x148
    430c:	add	x25, x8, #0x10
    4310:	ldrb	w8, [x22]
    4314:	tbnz	w8, #2, 4f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    4318:	sub	x8, x22, #0x38
    431c:	cmp	x22, #0x0
    4320:	csel	x21, xzr, x8, eq  // eq = none
    4324:	mov	x0, x21
    4328:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    432c:	tbz	w0, #0, 4394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d14>
    4330:	ldrb	w8, [x21, #34]
    4334:	tbz	w8, #5, 4394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d14>
    4338:	mov	x0, x20
    433c:	mov	x1, x21
    4340:	str	x25, [sp, #328]
    4344:	str	d11, [sp, #336]
    4348:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    434c:	mov	w8, w0
    4350:	add	x0, sp, #0x148
    4354:	add	x1, sp, #0x110
    4358:	str	x8, [sp, #272]
    435c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4360:	add	x1, sp, #0x148
    4364:	mov	x0, x19
    4368:	mov	x2, x21
    436c:	bl	dfd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    4370:	ldr	x0, [x19]
    4374:	add	x2, sp, #0x148
    4378:	mov	w1, #0x24                  	// #36
    437c:	mov	w3, wzr
    4380:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4384:	ldr	x0, [sp, #328]
    4388:	cmp	x0, x25
    438c:	b.eq	4394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d14>  // b.none
    4390:	bl	0 <free>
    4394:	ldr	x22, [x22, #8]
    4398:	cmp	x23, x22
    439c:	b.ne	4310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c90>  // b.any
    43a0:	ldr	x8, [x19, #16]
    43a4:	ldr	x22, [x8, #16]
    43a8:	add	x23, x8, #0x8
    43ac:	cmp	x23, x22
    43b0:	b.eq	4444 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3dc4>  // b.none
    43b4:	ldr	d11, [x24]
    43b8:	add	x8, sp, #0x148
    43bc:	add	x25, x8, #0x10
    43c0:	ldrb	w8, [x22]
    43c4:	tbnz	w8, #2, 4ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x497c>
    43c8:	sub	x8, x22, #0x38
    43cc:	cmp	x22, #0x0
    43d0:	csel	x21, xzr, x8, eq  // eq = none
    43d4:	ldrb	w8, [x21, #34]
    43d8:	tbz	w8, #5, 4438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3db8>
    43dc:	mov	x0, x20
    43e0:	mov	x1, x21
    43e4:	str	x25, [sp, #328]
    43e8:	str	d11, [sp, #336]
    43ec:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    43f0:	mov	w8, w0
    43f4:	add	x0, sp, #0x148
    43f8:	add	x1, sp, #0x110
    43fc:	str	x8, [sp, #272]
    4400:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4404:	add	x1, sp, #0x148
    4408:	mov	x0, x19
    440c:	mov	x2, x21
    4410:	bl	dfd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    4414:	ldr	x0, [x19]
    4418:	add	x2, sp, #0x148
    441c:	mov	w1, #0x24                  	// #36
    4420:	mov	w3, wzr
    4424:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4428:	ldr	x0, [sp, #328]
    442c:	cmp	x0, x25
    4430:	b.eq	4438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3db8>  // b.none
    4434:	bl	0 <free>
    4438:	ldr	x22, [x22, #8]
    443c:	cmp	x23, x22
    4440:	b.ne	43c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d40>  // b.any
    4444:	ldr	x0, [x19]
    4448:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    444c:	ldr	x0, [sp, #240]
    4450:	cbz	x0, 4458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3dd8>
    4454:	bl	0 <_ZdlPv>
    4458:	ldr	x0, [sp, #600]
    445c:	cbz	x0, 4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3de4>
    4460:	bl	0 <_ZdlPv>
    4464:	ldr	x0, [sp, #680]
    4468:	add	x8, sp, #0x2a8
    446c:	add	x8, x8, #0x10
    4470:	cmp	x0, x8
    4474:	b.eq	447c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3dfc>  // b.none
    4478:	bl	0 <free>
    447c:	ldrb	w8, [x19, #344]
    4480:	cbz	w8, 4490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3e10>
    4484:	mov	x0, x19
    4488:	mov	x1, xzr
    448c:	bl	80b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>
    4490:	add	x8, sp, #0x148
    4494:	add	x21, x8, #0x10
    4498:	str	x21, [sp, #328]
    449c:	str	d10, [sp, #336]
    44a0:	ldr	x0, [x19, #16]
    44a4:	add	x1, sp, #0x148
    44a8:	bl	0 <_ZNK4llvm6Module20getOperandBundleTagsERNS_15SmallVectorImplINS_9StringRefEEE>
    44ac:	ldr	w8, [sp, #336]
    44b0:	cbz	w8, 452c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3eac>
    44b4:	ldr	x0, [x19]
    44b8:	mov	w1, #0x15                  	// #21
    44bc:	mov	w2, #0x3                   	// #3
    44c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    44c4:	ldr	w8, [sp, #336]
    44c8:	add	x9, sp, #0x2a8
    44cc:	add	x22, x9, #0x10
    44d0:	str	x22, [sp, #680]
    44d4:	str	d9, [sp, #688]
    44d8:	cbz	w8, 4514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3e94>
    44dc:	ldr	x23, [sp, #328]
    44e0:	add	x25, x23, x8, lsl #4
    44e4:	ldp	x1, x8, [x23], #16
    44e8:	add	x0, sp, #0x2a8
    44ec:	add	x2, x1, x8
    44f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    44f4:	ldr	x0, [x19]
    44f8:	add	x2, sp, #0x2a8
    44fc:	mov	w1, #0x1                   	// #1
    4500:	mov	w3, wzr
    4504:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4508:	cmp	x23, x25
    450c:	str	wzr, [sp, #688]
    4510:	b.ne	44e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3e64>  // b.any
    4514:	ldr	x0, [x19]
    4518:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    451c:	ldr	x0, [sp, #680]
    4520:	cmp	x0, x22
    4524:	b.eq	452c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3eac>  // b.none
    4528:	bl	0 <free>
    452c:	ldr	x0, [sp, #328]
    4530:	cmp	x0, x21
    4534:	b.eq	453c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ebc>  // b.none
    4538:	bl	0 <free>
    453c:	add	x8, sp, #0x148
    4540:	add	x21, x8, #0x10
    4544:	str	x21, [sp, #328]
    4548:	str	d10, [sp, #336]
    454c:	ldr	x8, [x19, #16]
    4550:	add	x1, sp, #0x148
    4554:	ldr	x0, [x8]
    4558:	bl	0 <_ZNK4llvm11LLVMContext17getSyncScopeNamesERNS_15SmallVectorImplINS_9StringRefEEE>
    455c:	ldr	w8, [sp, #336]
    4560:	cbz	w8, 45dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f5c>
    4564:	ldr	x0, [x19]
    4568:	mov	w1, #0x1a                  	// #26
    456c:	mov	w2, #0x2                   	// #2
    4570:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4574:	ldr	w8, [sp, #336]
    4578:	add	x9, sp, #0x2a8
    457c:	add	x22, x9, #0x10
    4580:	str	x22, [sp, #680]
    4584:	str	d9, [sp, #688]
    4588:	cbz	w8, 45c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f44>
    458c:	ldr	x23, [sp, #328]
    4590:	add	x25, x23, x8, lsl #4
    4594:	ldp	x1, x8, [x23], #16
    4598:	add	x0, sp, #0x2a8
    459c:	add	x2, x1, x8
    45a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    45a4:	ldr	x0, [x19]
    45a8:	add	x2, sp, #0x2a8
    45ac:	mov	w1, #0x1                   	// #1
    45b0:	mov	w3, wzr
    45b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    45b8:	cmp	x23, x25
    45bc:	str	wzr, [sp, #688]
    45c0:	b.ne	4594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f14>  // b.any
    45c4:	ldr	x0, [x19]
    45c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    45cc:	ldr	x0, [sp, #680]
    45d0:	cmp	x0, x22
    45d4:	b.eq	45dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f5c>  // b.none
    45d8:	bl	0 <free>
    45dc:	ldr	x0, [sp, #328]
    45e0:	cmp	x0, x21
    45e4:	b.eq	45ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f6c>  // b.none
    45e8:	bl	0 <free>
    45ec:	add	x0, sp, #0xf0
    45f0:	mov	w1, wzr
    45f4:	str	xzr, [sp, #240]
    45f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    45fc:	ldr	x8, [x19, #16]
    4600:	ldr	x22, [x8, #32]
    4604:	add	x8, x8, #0x18
    4608:	str	x8, [sp, #24]
    460c:	cmp	x8, x22
    4610:	b.eq	4cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x462c>  // b.none
    4614:	add	x8, sp, #0x148
    4618:	ldr	d10, [x24]
    461c:	add	x9, sp, #0x2a8
    4620:	add	x8, x8, #0x10
    4624:	add	x10, sp, #0x258
    4628:	str	x8, [sp, #16]
    462c:	add	x8, x9, #0x10
    4630:	add	x21, x19, #0x118
    4634:	str	x8, [sp, #32]
    4638:	add	x8, x10, #0x10
    463c:	str	x8, [sp, #8]
    4640:	ldrb	w8, [x22]
    4644:	tbnz	w8, #2, 4f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    4648:	sub	x8, x22, #0x38
    464c:	cmp	x22, #0x0
    4650:	csel	x0, xzr, x8, eq  // eq = none
    4654:	str	x0, [sp, #48]
    4658:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    465c:	tbnz	w0, #0, 4c9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x461c>
    4660:	ldrb	w8, [x22]
    4664:	str	x22, [sp, #40]
    4668:	tbnz	w8, #2, 4f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    466c:	ldr	x8, [x19]
    4670:	ldr	x24, [sp, #48]
    4674:	add	x0, sp, #0xf0
    4678:	add	x1, sp, #0x2a8
    467c:	ldr	x9, [x8]
    4680:	ldr	w8, [x8, #8]
    4684:	ldr	w9, [x9, #8]
    4688:	str	x24, [sp, #680]
    468c:	add	x22, x8, x9, lsl #3
    4690:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4694:	str	x22, [x0, #8]
    4698:	ldr	x0, [x19]
    469c:	mov	w1, #0xc                   	// #12
    46a0:	mov	w2, #0x4                   	// #4
    46a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    46a8:	mov	x0, x20
    46ac:	mov	x1, x24
    46b0:	bl	0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE>
    46b4:	ldr	x8, [sp, #16]
    46b8:	str	d9, [sp, #336]
    46bc:	add	x0, sp, #0x148
    46c0:	add	x1, sp, #0x2a8
    46c4:	str	x8, [sp, #328]
    46c8:	ldr	x8, [x19, #544]
    46cc:	ldr	x9, [x19, #536]
    46d0:	sub	x8, x8, x9
    46d4:	lsr	x8, x8, #3
    46d8:	str	w8, [sp, #680]
    46dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    46e0:	ldr	x0, [x19]
    46e4:	add	x2, sp, #0x148
    46e8:	mov	w1, #0x1                   	// #1
    46ec:	mov	w3, wzr
    46f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    46f4:	str	wzr, [sp, #336]
    46f8:	ldr	w23, [x19, #576]
    46fc:	ldr	w1, [x19, #572]
    4700:	mov	x0, x19
    4704:	mov	w3, wzr
    4708:	mov	w2, w23
    470c:	bl	9adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>
    4710:	ldp	x9, x8, [x19, #232]
    4714:	ldr	w10, [x19, #564]
    4718:	sub	x8, x8, x9
    471c:	cmp	x10, x8, asr #3
    4720:	b.cs	47b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4134>  // b.hs, b.nlast
    4724:	ldr	x0, [x19]
    4728:	mov	w1, #0xf                   	// #15
    472c:	mov	w2, #0x3                   	// #3
    4730:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4734:	ldr	x22, [sp, #32]
    4738:	mov	x0, x20
    473c:	str	d9, [sp, #688]
    4740:	str	x22, [sp, #680]
    4744:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4748:	mov	x2, x0
    474c:	mov	x4, x1
    4750:	add	x3, sp, #0x2a8
    4754:	mov	x0, x19
    4758:	mov	x1, x2
    475c:	mov	x2, x4
    4760:	bl	b20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>
    4764:	ldp	x8, x9, [x19, #232]
    4768:	ldr	w10, [x19, #564]
    476c:	ldr	w11, [x19, #568]
    4770:	add	x3, sp, #0x2a8
    4774:	sub	x9, x9, x8
    4778:	asr	x9, x9, #3
    477c:	add	x8, x8, x10, lsl #3
    4780:	sub	x9, x9, x10
    4784:	sub	x2, x9, x11
    4788:	add	x1, x8, x11, lsl #3
    478c:	mov	x0, x19
    4790:	mov	x4, xzr
    4794:	mov	x5, xzr
    4798:	bl	b4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>
    479c:	ldr	x0, [x19]
    47a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    47a4:	ldr	x0, [sp, #680]
    47a8:	cmp	x0, x22
    47ac:	b.eq	47b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4134>  // b.none
    47b0:	bl	0 <free>
    47b4:	ldr	x25, [x24, #80]
    47b8:	ldrb	w8, [x24, #34]
    47bc:	add	x9, x24, #0x48
    47c0:	str	x9, [sp, #56]
    47c4:	cmp	x9, x25
    47c8:	ubfx	w28, w8, #5, #1
    47cc:	b.eq	493c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42bc>  // b.none
    47d0:	mov	x27, xzr
    47d4:	ldrb	w8, [x25]
    47d8:	tbnz	w8, #2, 4f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48f0>
    47dc:	sub	x8, x25, #0x18
    47e0:	cmp	x25, #0x0
    47e4:	csel	x8, xzr, x8, eq  // eq = none
    47e8:	ldr	x22, [x8, #48]
    47ec:	add	x26, x8, #0x28
    47f0:	cmp	x26, x22
    47f4:	b.eq	492c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42ac>  // b.none
    47f8:	ldrb	w8, [x22]
    47fc:	tbnz	w8, #2, 4f50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48d0>
    4800:	sub	x8, x22, #0x18
    4804:	cmp	x22, #0x0
    4808:	csel	x24, xzr, x8, eq  // eq = none
    480c:	add	x3, sp, #0x148
    4810:	mov	x0, x19
    4814:	mov	x1, x24
    4818:	mov	w2, w23
    481c:	bl	e098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE>
    4820:	ldrb	w8, [x22]
    4824:	tbnz	w8, #2, 4f50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48d0>
    4828:	ldr	x8, [x24]
    482c:	ldrsh	w9, [x24, #18]
    4830:	add	x0, x24, #0x30
    4834:	ldrb	w8, [x8, #8]
    4838:	cmp	w8, #0x0
    483c:	cinc	w23, w23, ne  // ne = any
    4840:	cmp	w9, #0x0
    4844:	cset	w8, lt  // lt = tstop
    4848:	orr	w28, w28, w8
    484c:	bl	0 <_ZNK4llvm8DebugLoc3getEv>
    4850:	cbz	x0, 4924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42a4>
    4854:	mov	x24, x0
    4858:	cmp	x0, x27
    485c:	b.eq	4910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4290>  // b.none
    4860:	ldr	w8, [x24, #4]
    4864:	add	x0, sp, #0x148
    4868:	add	x1, sp, #0x2a8
    486c:	str	w8, [sp, #680]
    4870:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4874:	ldrh	w8, [x24, #2]
    4878:	add	x0, sp, #0x148
    487c:	add	x1, sp, #0x2a8
    4880:	str	w8, [sp, #680]
    4884:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4888:	mov	x0, x24
    488c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4890:	mov	x1, x0
    4894:	mov	x0, x21
    4898:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    489c:	lsr	x8, x0, #32
    48a0:	add	x0, sp, #0x148
    48a4:	add	x1, sp, #0x2a8
    48a8:	str	w8, [sp, #680]
    48ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    48b0:	mov	x0, x24
    48b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    48b8:	mov	x1, x0
    48bc:	mov	x0, x21
    48c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    48c4:	lsr	x8, x0, #32
    48c8:	add	x0, sp, #0x148
    48cc:	add	x1, sp, #0x2a8
    48d0:	str	w8, [sp, #680]
    48d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    48d8:	ldrb	w8, [x24, #1]
    48dc:	add	x0, sp, #0x148
    48e0:	add	x1, sp, #0x2a8
    48e4:	lsr	w8, w8, #7
    48e8:	str	w8, [sp, #680]
    48ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    48f0:	ldr	x0, [x19]
    48f4:	add	x2, sp, #0x148
    48f8:	mov	w1, #0x23                  	// #35
    48fc:	mov	w3, wzr
    4900:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4904:	mov	x27, x24
    4908:	str	wzr, [sp, #336]
    490c:	b	4924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42a4>
    4910:	ldr	x0, [x19]
    4914:	add	x2, sp, #0x148
    4918:	mov	w1, #0x21                  	// #33
    491c:	mov	w3, wzr
    4920:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4924:	ldr	x22, [x22, #8]
    4928:	b	47f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4170>
    492c:	ldr	x25, [x25, #8]
    4930:	ldr	x8, [sp, #56]
    4934:	cmp	x8, x25
    4938:	b.ne	47d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4154>  // b.any
    493c:	ldr	x8, [sp, #48]
    4940:	ldr	x22, [x8, #104]
    4944:	cbz	x22, 4a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4418>
    4948:	ldr	w8, [x22, #12]
    494c:	cbz	w8, 4a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4418>
    4950:	ldr	x0, [x19]
    4954:	mov	w1, #0xe                   	// #14
    4958:	mov	w2, #0x4                   	// #4
    495c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4960:	ldr	x8, [sp, #32]
    4964:	str	d9, [sp, #688]
    4968:	str	x8, [sp, #680]
    496c:	ldr	w8, [x22, #8]
    4970:	ldr	x9, [x22]
    4974:	cbz	w8, 499c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x431c>
    4978:	add	x10, x9, #0x8
    497c:	mov	x22, x9
    4980:	ldur	x11, [x10, #-8]
    4984:	cbz	x11, 4990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4310>
    4988:	cmn	x11, #0x8
    498c:	b.ne	49a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.any
    4990:	mov	x22, x10
    4994:	add	x10, x10, #0x8
    4998:	b	4980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4300>
    499c:	mov	x22, x9
    49a0:	add	x26, x9, x8, lsl #3
    49a4:	cmp	x26, x22
    49a8:	b.eq	4a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43fc>  // b.none
    49ac:	ldr	x27, [x22]
    49b0:	ldr	x1, [x27]
    49b4:	add	x23, x27, #0x10
    49b8:	mov	x0, x23
    49bc:	bl	993c <_ZL17getStringEncodingN4llvm9StringRefE>
    49c0:	ldr	x1, [x27, #8]
    49c4:	mov	w24, w0
    49c8:	mov	x0, x20
    49cc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    49d0:	mov	w8, w0
    49d4:	add	x0, sp, #0x2a8
    49d8:	add	x1, sp, #0x258
    49dc:	str	x8, [sp, #600]
    49e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    49e4:	ldr	x8, [x27, #8]
    49e8:	cbz	x8, 4fa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4928>
    49ec:	ldrb	w8, [x8, #16]
    49f0:	cmp	w8, #0x12
    49f4:	b.ne	4a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4390>  // b.any
    49f8:	cmp	w24, #0x0
    49fc:	mov	w8, #0x4                   	// #4
    4a00:	mov	w9, #0x7                   	// #7
    4a04:	csel	w24, w9, w8, eq  // eq = none
    4a08:	mov	w25, #0x2                   	// #2
    4a0c:	b	4a2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43ac>
    4a10:	cbz	w24, 4a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43a4>
    4a14:	cmp	w24, #0x1
    4a18:	mov	w8, #0x4                   	// #4
    4a1c:	cinc	w24, w8, eq  // eq = none
    4a20:	b	4a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43a8>
    4a24:	mov	w24, #0x6                   	// #6
    4a28:	mov	w25, #0x1                   	// #1
    4a2c:	ldr	x27, [x27]
    4a30:	cbz	x27, 4a50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43d0>
    4a34:	ldrb	w8, [x23], #1
    4a38:	add	x0, sp, #0x2a8
    4a3c:	add	x1, sp, #0x258
    4a40:	str	x8, [sp, #600]
    4a44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4a48:	subs	x27, x27, #0x1
    4a4c:	b.ne	4a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43b4>  // b.any
    4a50:	ldr	x0, [x19]
    4a54:	add	x2, sp, #0x2a8
    4a58:	mov	w1, w25
    4a5c:	mov	w3, w24
    4a60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4a64:	str	wzr, [sp, #688]
    4a68:	ldr	x8, [x22, #8]!
    4a6c:	cbz	x8, 4a68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43e8>
    4a70:	cmn	x8, #0x8
    4a74:	b.eq	4a68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43e8>  // b.none
    4a78:	b	49a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4324>
    4a7c:	ldr	x0, [x19]
    4a80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4a84:	ldr	x0, [sp, #680]
    4a88:	ldr	x8, [sp, #32]
    4a8c:	cmp	x0, x8
    4a90:	b.eq	4a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4418>  // b.none
    4a94:	bl	0 <free>
    4a98:	ldr	x22, [sp, #40]
    4a9c:	tbz	w28, #0, 4c5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45dc>
    4aa0:	ldr	x0, [x19]
    4aa4:	mov	w1, #0x10                  	// #16
    4aa8:	mov	w2, #0x3                   	// #3
    4aac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ab0:	ldr	x8, [sp, #32]
    4ab4:	ldr	x22, [sp, #48]
    4ab8:	str	d9, [sp, #688]
    4abc:	str	x8, [sp, #680]
    4ac0:	ldrb	w8, [x22, #34]
    4ac4:	tbz	w8, #5, 4af0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4470>
    4ac8:	add	x1, sp, #0x2a8
    4acc:	mov	x0, x19
    4ad0:	mov	x2, x22
    4ad4:	bl	dfd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    4ad8:	ldr	x0, [x19]
    4adc:	add	x2, sp, #0x2a8
    4ae0:	mov	w1, #0xb                   	// #11
    4ae4:	mov	w3, wzr
    4ae8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4aec:	str	wzr, [sp, #688]
    4af0:	ldr	x8, [sp, #8]
    4af4:	str	d10, [sp, #608]
    4af8:	str	x8, [sp, #600]
    4afc:	ldr	x24, [x22, #80]
    4b00:	ldr	x8, [sp, #56]
    4b04:	cmp	x8, x24
    4b08:	b.eq	4c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45ac>  // b.none
    4b0c:	ldrb	w8, [x24]
    4b10:	tbnz	w8, #2, 4f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48f0>
    4b14:	sub	x8, x24, #0x18
    4b18:	cmp	x24, #0x0
    4b1c:	csel	x8, xzr, x8, eq  // eq = none
    4b20:	ldr	x22, [x8, #48]
    4b24:	add	x25, x8, #0x28
    4b28:	cmp	x25, x22
    4b2c:	b.eq	4c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45a4>  // b.none
    4b30:	ldrb	w8, [x22]
    4b34:	tbnz	w8, #2, 4f50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48d0>
    4b38:	sub	x8, x22, #0x18
    4b3c:	cmp	x22, #0x0
    4b40:	csel	x23, xzr, x8, eq  // eq = none
    4b44:	str	wzr, [sp, #608]
    4b48:	ldrsh	w8, [x23, #18]
    4b4c:	tbz	w8, #31, 4c1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x459c>
    4b50:	add	x1, sp, #0x258
    4b54:	mov	x0, x23
    4b58:	bl	0 <_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    4b5c:	ldr	w8, [sp, #608]
    4b60:	cbz	w8, 4c1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x459c>
    4b64:	mov	x0, x20
    4b68:	mov	x1, x23
    4b6c:	bl	0 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE>
    4b70:	mov	w8, w0
    4b74:	add	x0, sp, #0x2a8
    4b78:	add	x1, sp, #0x138
    4b7c:	str	x8, [sp, #312]
    4b80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4b84:	ldr	w8, [sp, #608]
    4b88:	cbz	w8, 4c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4584>
    4b8c:	mov	x23, xzr
    4b90:	mov	x26, xzr
    4b94:	sub	x27, x8, #0x1
    4b98:	ldr	x8, [sp, #600]
    4b9c:	add	x0, sp, #0x2a8
    4ba0:	add	x1, sp, #0x138
    4ba4:	ldr	w8, [x8, x23]
    4ba8:	str	x8, [sp, #312]
    4bac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4bb0:	ldr	w8, [sp, #608]
    4bb4:	cmp	x26, x8
    4bb8:	b.cs	4f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48b0>  // b.hs, b.nlast
    4bbc:	ldr	x8, [sp, #600]
    4bc0:	mov	x0, x20
    4bc4:	add	x8, x8, x23
    4bc8:	ldr	x1, [x8, #8]
    4bcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4bd0:	mov	w8, w0
    4bd4:	add	x0, sp, #0x2a8
    4bd8:	add	x1, sp, #0x138
    4bdc:	str	x8, [sp, #312]
    4be0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4be4:	cmp	x27, x26
    4be8:	b.eq	4c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4584>  // b.none
    4bec:	ldr	w8, [sp, #608]
    4bf0:	add	x26, x26, #0x1
    4bf4:	add	x23, x23, #0x10
    4bf8:	cmp	x26, x8
    4bfc:	b.cc	4b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4518>  // b.lo, b.ul, b.last
    4c00:	b	4f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48b0>
    4c04:	ldr	x0, [x19]
    4c08:	add	x2, sp, #0x2a8
    4c0c:	mov	w1, #0xb                   	// #11
    4c10:	mov	w3, wzr
    4c14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4c18:	str	wzr, [sp, #688]
    4c1c:	ldr	x22, [x22, #8]
    4c20:	b	4b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44a8>
    4c24:	ldr	x24, [x24, #8]
    4c28:	b	4b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4480>
    4c2c:	ldr	x0, [x19]
    4c30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4c34:	ldr	x0, [sp, #600]
    4c38:	ldr	x8, [sp, #8]
    4c3c:	cmp	x0, x8
    4c40:	b.eq	4c48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45c8>  // b.none
    4c44:	bl	0 <free>
    4c48:	ldr	x0, [sp, #680]
    4c4c:	ldp	x8, x22, [sp, #32]
    4c50:	cmp	x0, x8
    4c54:	b.eq	4c5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45dc>  // b.none
    4c58:	bl	0 <free>
    4c5c:	ldrb	w8, [x19, #344]
    4c60:	cbz	w8, 4c70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45f0>
    4c64:	ldr	x1, [sp, #48]
    4c68:	mov	x0, x19
    4c6c:	bl	80b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>
    4c70:	mov	x0, x20
    4c74:	bl	0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv>
    4c78:	ldr	x0, [x19]
    4c7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4c80:	ldr	x0, [sp, #328]
    4c84:	ldr	x8, [sp, #16]
    4c88:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4c8c:	ldr	x28, [x28]
    4c90:	cmp	x0, x8
    4c94:	b.eq	4c9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x461c>  // b.none
    4c98:	bl	0 <free>
    4c9c:	ldr	x22, [x22, #8]
    4ca0:	ldr	x8, [sp, #24]
    4ca4:	cmp	x8, x22
    4ca8:	b.ne	4640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3fc0>  // b.any
    4cac:	ldr	x8, [x19, #584]
    4cb0:	cbz	x8, 4cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x463c>
    4cb4:	mov	x0, x19
    4cb8:	bl	8264 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>
    4cbc:	ldr	x0, [x19]
    4cc0:	ldr	x10, [x19, #792]
    4cc4:	ldr	x8, [x0]
    4cc8:	ldr	w9, [x0, #8]
    4ccc:	ldr	w8, [x8, #8]
    4cd0:	add	x8, x9, x8, lsl #3
    4cd4:	sub	x8, x8, x10
    4cd8:	tst	x8, #0x1f
    4cdc:	b.ne	539c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4d1c>  // b.any
    4ce0:	ldr	x1, [x19, #648]
    4ce4:	lsr	x8, x8, #5
    4ce8:	add	w2, w8, #0x1
    4cec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4cf0:	ldr	x0, [x19]
    4cf4:	mov	w1, #0xe                   	// #14
    4cf8:	mov	w2, #0x4                   	// #4
    4cfc:	mov	w24, #0x4                   	// #4
    4d00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4d04:	mov	w0, #0x220                 	// #544
    4d08:	bl	0 <_Znwm>
    4d0c:	movi	v0.2s, #0x1
    4d10:	add	x8, x28, #0x10
    4d14:	add	x22, x0, #0x20
    4d18:	mov	x21, x0
    4d1c:	str	d0, [x0, #8]
    4d20:	str	x8, [x0]
    4d24:	mov	w2, #0x200                 	// #512
    4d28:	mov	x0, x22
    4d2c:	mov	w1, wzr
    4d30:	bl	0 <memset>
    4d34:	mov	x23, x21
    4d38:	str	x22, [x23, #16]!
    4d3c:	mov	w8, #0x3                   	// #3
    4d40:	mov	w9, #0xff                  	// #255
    4d44:	add	x1, sp, #0x2a8
    4d48:	mov	x0, x23
    4d4c:	str	d8, [x21, #24]
    4d50:	str	x8, [sp, #680]
    4d54:	strb	w9, [sp, #688]
    4d58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4d5c:	mov	w22, #0x8                   	// #8
    4d60:	add	x1, sp, #0x2a8
    4d64:	mov	x0, x23
    4d68:	str	x22, [sp, #680]
    4d6c:	strb	w24, [sp, #688]
    4d70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4d74:	add	x1, sp, #0x2a8
    4d78:	mov	x0, x23
    4d7c:	str	x22, [sp, #680]
    4d80:	strb	w24, [sp, #688]
    4d84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4d88:	ldr	x22, [x19]
    4d8c:	mov	x1, x23
    4d90:	str	x23, [sp, #680]
    4d94:	str	x21, [sp, #688]
    4d98:	mov	x0, x22
    4d9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4da0:	add	x0, x22, #0x18
    4da4:	add	x1, sp, #0x2a8
    4da8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dac:	ldr	x0, [sp, #688]
    4db0:	ldp	x22, x21, [x22, #24]
    4db4:	cbz	x0, 4dbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x473c>
    4db8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dbc:	ldr	x8, [x19, #16]
    4dc0:	ldr	x23, [x8, #32]
    4dc4:	add	x24, x8, #0x18
    4dc8:	cmp	x24, x23
    4dcc:	b.eq	4e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x47e0>  // b.none
    4dd0:	sub	x8, x21, x22
    4dd4:	lsr	x8, x8, #4
    4dd8:	add	w21, w8, #0x3
    4ddc:	ldrb	w8, [x23]
    4de0:	tbnz	w8, #2, 4f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    4de4:	sub	x8, x23, #0x38
    4de8:	cmp	x23, #0x0
    4dec:	csel	x22, xzr, x8, eq  // eq = none
    4df0:	mov	x0, x22
    4df4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    4df8:	tbnz	w0, #0, 4e54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x47d4>
    4dfc:	mov	x0, x20
    4e00:	mov	x1, x22
    4e04:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4e08:	mov	w8, w0
    4e0c:	add	x0, sp, #0xf0
    4e10:	add	x1, sp, #0x148
    4e14:	str	x8, [sp, #272]
    4e18:	str	x22, [sp, #328]
    4e1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e20:	ldr	x8, [x0, #8]
    4e24:	ldr	x9, [x19, #792]
    4e28:	sub	x8, x8, x9
    4e2c:	tst	x8, #0x1f
    4e30:	b.ne	5140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4ac0>  // b.any
    4e34:	lsr	x8, x8, #5
    4e38:	add	x8, x8, #0x1
    4e3c:	str	x8, [sp, #280]
    4e40:	ldr	x0, [x19]
    4e44:	add	x2, sp, #0x110
    4e48:	mov	w1, #0x3                   	// #3
    4e4c:	mov	w3, w21
    4e50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e54:	ldr	x23, [x23, #8]
    4e58:	cmp	x24, x23
    4e5c:	b.ne	4ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x475c>  // b.any
    4e60:	ldr	x0, [x19]
    4e64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e68:	ldrb	w8, [x19, #664]
    4e6c:	cbz	w8, 4ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4878>
    4e70:	ldr	x9, [x19, #656]
    4e74:	ldr	x10, [sp]
    4e78:	ldr	w8, [x9, #8]
    4e7c:	cmp	w8, w10
    4e80:	b.ls	53bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4d3c>  // b.plast
    4e84:	ldr	x9, [x9]
    4e88:	add	x20, x19, #0x2a8
    4e8c:	sub	x2, x8, x10
    4e90:	mov	x0, x20
    4e94:	add	x1, x9, x10
    4e98:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    4e9c:	mov	x0, x20
    4ea0:	bl	0 <_ZN4llvm4SHA16resultEv>
    4ea4:	mov	x8, xzr
    4ea8:	add	x9, sp, #0x2a8
    4eac:	ldr	w10, [x0, x8]
    4eb0:	add	x11, x8, #0x4
    4eb4:	cmp	x8, #0x10
    4eb8:	rev	w10, w10
    4ebc:	str	w10, [x9, x8]
    4ec0:	mov	x8, x11
    4ec4:	b.cc	4eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x482c>  // b.lo, b.ul, b.last
    4ec8:	ldr	x0, [x19]
    4ecc:	add	x2, sp, #0x2a8
    4ed0:	mov	w1, #0x11                  	// #17
    4ed4:	mov	w3, wzr
    4ed8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4edc:	ldr	x8, [x19, #672]
    4ee0:	cbz	x8, 4ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4878>
    4ee4:	add	x10, sp, #0x1a9
    4ee8:	ldr	w9, [sp, #696]
    4eec:	ldur	q0, [x10, #255]
    4ef0:	str	w9, [x8, #16]
    4ef4:	str	q0, [x8]
    4ef8:	ldr	x0, [x19]
    4efc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f00:	ldr	x0, [sp, #248]
    4f04:	bl	0 <_ZdlPv>
    4f08:	add	sp, sp, #0x4c0
    4f0c:	ldp	x20, x19, [sp, #112]
    4f10:	ldp	x22, x21, [sp, #96]
    4f14:	ldp	x24, x23, [sp, #80]
    4f18:	ldp	x26, x25, [sp, #64]
    4f1c:	ldp	x28, x27, [sp, #48]
    4f20:	ldp	x29, x30, [sp, #32]
    4f24:	ldp	d9, d8, [sp, #16]
    4f28:	ldp	d11, d10, [sp], #128
    4f2c:	ret
    4f30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f3c:	add	x0, x0, #0x0
    4f40:	add	x1, x1, #0x0
    4f44:	add	x3, x3, #0x0
    4f48:	mov	w2, #0x95                  	// #149
    4f4c:	bl	0 <__assert_fail>
    4f50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f5c:	add	x0, x0, #0x0
    4f60:	add	x1, x1, #0x0
    4f64:	add	x3, x3, #0x0
    4f68:	mov	w2, #0x8b                  	// #139
    4f6c:	bl	0 <__assert_fail>
    4f70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f7c:	add	x0, x0, #0x0
    4f80:	add	x1, x1, #0x0
    4f84:	add	x3, x3, #0x0
    4f88:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48e8>
    4f8c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f90:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f94:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f98:	add	x0, x0, #0x0
    4f9c:	add	x1, x1, #0x0
    4fa0:	add	x3, x3, #0x0
    4fa4:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48e8>
    4fa8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fb0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fb4:	add	x0, x0, #0x0
    4fb8:	add	x1, x1, #0x0
    4fbc:	add	x3, x3, #0x0
    4fc0:	b	5070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f0>
    4fc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fcc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fd0:	add	x0, x0, #0x0
    4fd4:	add	x1, x1, #0x0
    4fd8:	add	x3, x3, #0x0
    4fdc:	b	5070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f0>
    4fe0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fe4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fe8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fec:	add	x0, x0, #0x0
    4ff0:	add	x1, x1, #0x0
    4ff4:	add	x3, x3, #0x0
    4ff8:	b	50a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a28>
    4ffc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5000:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5004:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5008:	add	x0, x0, #0x0
    500c:	add	x1, x1, #0x0
    5010:	add	x3, x3, #0x0
    5014:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48e8>
    5018:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    501c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5020:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5024:	add	x0, x0, #0x0
    5028:	add	x1, x1, #0x0
    502c:	add	x3, x3, #0x0
    5030:	mov	w2, #0x304                 	// #772
    5034:	bl	0 <__assert_fail>
    5038:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    503c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5040:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5044:	add	x0, x0, #0x0
    5048:	add	x1, x1, #0x0
    504c:	add	x3, x3, #0x0
    5050:	mov	w2, #0x134                 	// #308
    5054:	bl	0 <__assert_fail>
    5058:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    505c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5060:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5064:	add	x0, x0, #0x0
    5068:	add	x1, x1, #0x0
    506c:	add	x3, x3, #0x0
    5070:	mov	w2, #0x69                  	// #105
    5074:	bl	0 <__assert_fail>
    5078:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    507c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5080:	add	x0, x0, #0x0
    5084:	add	x1, x1, #0x0
    5088:	mov	w2, #0x435                 	// #1077
    508c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5090:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5094:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5098:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    509c:	add	x0, x0, #0x0
    50a0:	add	x1, x1, #0x0
    50a4:	add	x3, x3, #0x0
    50a8:	mov	w2, #0x108                 	// #264
    50ac:	bl	0 <__assert_fail>
    50b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50bc:	add	x0, x0, #0x0
    50c0:	add	x1, x1, #0x0
    50c4:	add	x3, x3, #0x0
    50c8:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48e8>
    50cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50d8:	add	x0, x0, #0x0
    50dc:	add	x1, x1, #0x0
    50e0:	add	x3, x3, #0x0
    50e4:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48e8>
    50e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50f4:	add	x0, x0, #0x0
    50f8:	add	x1, x1, #0x0
    50fc:	add	x3, x3, #0x0
    5100:	b	4f48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48c8>
    5104:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5108:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    510c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5110:	add	x0, x0, #0x0
    5114:	add	x1, x1, #0x0
    5118:	add	x3, x3, #0x0
    511c:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48e8>
    5120:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5124:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5128:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    512c:	add	x0, x0, #0x0
    5130:	add	x1, x1, #0x0
    5134:	add	x3, x3, #0x0
    5138:	mov	w2, #0x89                  	// #137
    513c:	bl	0 <__assert_fail>
    5140:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5144:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5148:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    514c:	add	x0, x0, #0x0
    5150:	add	x1, x1, #0x0
    5154:	add	x3, x3, #0x0
    5158:	mov	w2, #0xc0a                 	// #3082
    515c:	bl	0 <__assert_fail>
    5160:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5164:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5168:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    516c:	add	x0, x0, #0x0
    5170:	add	x1, x1, #0x0
    5174:	add	x3, x3, #0x0
    5178:	b	5070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f0>
    517c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5180:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5184:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5188:	add	x0, x0, #0x0
    518c:	add	x1, x1, #0x0
    5190:	add	x3, x3, #0x0
    5194:	b	5070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f0>
    5198:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    519c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51a4:	add	x0, x0, #0x0
    51a8:	add	x1, x1, #0x0
    51ac:	add	x3, x3, #0x0
    51b0:	b	5070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f0>
    51b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51c0:	add	x0, x0, #0x0
    51c4:	add	x1, x1, #0x0
    51c8:	add	x3, x3, #0x0
    51cc:	b	50a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4a28>
    51d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51dc:	add	x0, x0, #0x0
    51e0:	add	x1, x1, #0x0
    51e4:	add	x3, x3, #0x0
    51e8:	b	5070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x49f0>
    51ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51f4:	add	x0, x0, #0x0
    51f8:	add	x1, x1, #0x0
    51fc:	mov	w2, #0xcc1                 	// #3265
    5200:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5204:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5208:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    520c:	add	x0, x0, #0x0
    5210:	add	x1, x1, #0x0
    5214:	mov	w2, #0xccc                 	// #3276
    5218:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    521c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5220:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5224:	add	x0, x0, #0x0
    5228:	add	x1, x1, #0x0
    522c:	mov	w2, #0xcd6                 	// #3286
    5230:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5234:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5238:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    523c:	add	x0, x0, #0x0
    5240:	add	x1, x1, #0x0
    5244:	mov	w2, #0xce0                 	// #3296
    5248:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    524c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5250:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5254:	add	x0, x0, #0x0
    5258:	add	x1, x1, #0x0
    525c:	mov	w2, #0xcea                 	// #3306
    5260:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5264:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5268:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    526c:	add	x0, x0, #0x0
    5270:	add	x1, x1, #0x0
    5274:	mov	w2, #0xcf3                 	// #3315
    5278:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    527c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5280:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5284:	add	x0, x0, #0x0
    5288:	add	x1, x1, #0x0
    528c:	mov	w2, #0xd00                 	// #3328
    5290:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5294:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5298:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    529c:	add	x0, x0, #0x0
    52a0:	add	x1, x1, #0x0
    52a4:	mov	w2, #0xd07                 	// #3335
    52a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52b4:	add	x0, x0, #0x0
    52b8:	add	x1, x1, #0x0
    52bc:	mov	w2, #0xd16                 	// #3350
    52c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52cc:	add	x0, x0, #0x0
    52d0:	add	x1, x1, #0x0
    52d4:	mov	w2, #0xd1f                 	// #3359
    52d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52e4:	add	x0, x0, #0x0
    52e8:	add	x1, x1, #0x0
    52ec:	mov	w2, #0xd29                 	// #3369
    52f0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52fc:	add	x0, x0, #0x0
    5300:	add	x1, x1, #0x0
    5304:	mov	w2, #0xd33                 	// #3379
    5308:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    530c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5310:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5314:	add	x0, x0, #0x0
    5318:	add	x1, x1, #0x0
    531c:	mov	w2, #0xd3e                 	// #3390
    5320:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5324:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5328:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    532c:	add	x0, x0, #0x0
    5330:	add	x1, x1, #0x0
    5334:	mov	w2, #0xd49                 	// #3401
    5338:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    533c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5340:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5344:	add	x0, x0, #0x0
    5348:	add	x1, x1, #0x0
    534c:	mov	w2, #0xd51                 	// #3409
    5350:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5354:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5358:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    535c:	add	x0, x0, #0x0
    5360:	add	x1, x1, #0x0
    5364:	mov	w2, #0xd59                 	// #3417
    5368:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    536c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5370:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5374:	add	x0, x0, #0x0
    5378:	add	x1, x1, #0x0
    537c:	mov	w2, #0xd60                 	// #3424
    5380:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5384:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5388:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    538c:	add	x0, x0, #0x0
    5390:	add	x1, x1, #0x0
    5394:	mov	w2, #0xd6c                 	// #3436
    5398:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    539c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53a8:	add	x0, x0, #0x0
    53ac:	add	x1, x1, #0x0
    53b0:	add	x3, x3, #0x0
    53b4:	mov	w2, #0xbf1                 	// #3057
    53b8:	bl	0 <__assert_fail>
    53bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53c8:	add	x0, x0, #0x0
    53cc:	add	x1, x1, #0x0
    53d0:	add	x3, x3, #0x0
    53d4:	mov	w2, #0x99                  	// #153
    53d8:	bl	0 <__assert_fail>

00000000000053dc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE>:
    53dc:	str	d10, [sp, #-128]!
    53e0:	stp	d9, d8, [sp, #16]
    53e4:	stp	x29, x30, [sp, #32]
    53e8:	stp	x28, x27, [sp, #48]
    53ec:	stp	x26, x25, [sp, #64]
    53f0:	stp	x24, x23, [sp, #80]
    53f4:	stp	x22, x21, [sp, #96]
    53f8:	stp	x20, x19, [sp, #112]
    53fc:	mov	x29, sp
    5400:	sub	sp, sp, #0x660
    5404:	ldr	x8, [x0, #8]
    5408:	mov	x10, sp
    540c:	add	x9, x0, #0x10
    5410:	add	x19, x10, #0x20
    5414:	add	x10, x10, #0x28
    5418:	stp	x1, x2, [sp, #16]
    541c:	str	wzr, [sp, #40]
    5420:	stp	xzr, x10, [sp, #48]
    5424:	stp	x10, xzr, [sp, #64]
    5428:	stp	x8, x9, [sp]
    542c:	str	wzr, [sp, #80]
    5430:	cbz	x2, 5574 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x198>
    5434:	ldr	x20, [x2, #24]
    5438:	add	x22, x2, #0x8
    543c:	cmp	x20, x22
    5440:	b.eq	55d8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1fc>  // b.none
    5444:	ldr	x1, [x20, #72]
    5448:	ldr	w8, [x20, #88]
    544c:	ldr	w9, [x20, #80]
    5450:	add	x21, x20, #0x40
    5454:	add	x2, x1, x8, lsl #4
    5458:	cbz	w9, 5478 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9c>
    545c:	add	x0, sp, #0x348
    5460:	mov	x3, x21
    5464:	mov	w4, wzr
    5468:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    546c:	ldr	w8, [x20, #88]
    5470:	ldp	x9, x1, [x20, #64]
    5474:	b	548c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb0>
    5478:	str	x21, [sp, #840]
    547c:	ldr	x9, [x21]
    5480:	str	x2, [sp, #856]
    5484:	str	x2, [sp, #864]
    5488:	str	x9, [sp, #848]
    548c:	add	x8, x1, x8, lsl #4
    5490:	stp	x21, x9, [sp, #280]
    5494:	stp	x8, x8, [sp, #296]
    5498:	add	x0, sp, #0x348
    549c:	add	x1, sp, #0x118
    54a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54a4:	tbz	w0, #0, 555c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x180>
    54a8:	ldr	x8, [sp, #840]
    54ac:	ldr	x9, [sp, #848]
    54b0:	ldr	x8, [x8]
    54b4:	cmp	x8, x9
    54b8:	b.ne	6b50 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1774>  // b.any
    54bc:	ldr	x21, [sp, #856]
    54c0:	ldr	w8, [sp, #80]
    54c4:	sub	x1, x29, #0xc0
    54c8:	mov	x0, x19
    54cc:	ldp	x9, x10, [x21]
    54d0:	add	w23, w8, #0x1
    54d4:	str	w23, [sp, #80]
    54d8:	stp	x9, x10, [x29, #-192]
    54dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54e0:	str	w23, [x0]
    54e4:	ldr	x8, [x21, #8]
    54e8:	cbz	x8, 6b70 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1794>
    54ec:	ldr	w9, [x8, #8]
    54f0:	cbnz	w9, 5530 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x154>
    54f4:	ldr	x9, [x8, #64]
    54f8:	cmp	x9, #0x7
    54fc:	b.ls	6bd0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17f4>  // b.plast
    5500:	ldr	x8, [x8, #72]
    5504:	cbz	x8, 6bb0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17d4>
    5508:	and	x9, x9, #0xfffffffffffffff8
    550c:	ldr	w10, [sp, #80]
    5510:	ldr	x9, [x9]
    5514:	sub	x1, x29, #0xc0
    5518:	mov	x0, x19
    551c:	add	w21, w10, #0x1
    5520:	stp	x9, x8, [x29, #-192]
    5524:	str	w21, [sp, #80]
    5528:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    552c:	str	w21, [x0]
    5530:	ldr	x8, [sp, #840]
    5534:	ldr	x9, [sp, #848]
    5538:	ldr	x8, [x8]
    553c:	cmp	x8, x9
    5540:	b.ne	6b90 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17b4>  // b.any
    5544:	ldr	x8, [sp, #856]
    5548:	add	x0, sp, #0x348
    554c:	add	x8, x8, #0x10
    5550:	str	x8, [sp, #856]
    5554:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5558:	b	5498 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbc>
    555c:	mov	x0, x20
    5560:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    5564:	mov	x20, x0
    5568:	cmp	x0, x22
    556c:	b.ne	5444 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x68>  // b.any
    5570:	b	55d8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1fc>
    5574:	ldr	x20, [x1, #24]
    5578:	add	x21, x1, #0x8
    557c:	cmp	x20, x21
    5580:	b.eq	55d8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1fc>  // b.none
    5584:	ldp	x22, x23, [x20, #56]
    5588:	cmp	x22, x23
    558c:	b.eq	55c4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1e8>  // b.none
    5590:	ldr	x8, [x22], #8
    5594:	ldr	w10, [sp, #80]
    5598:	ldr	x9, [x20, #32]
    559c:	add	x1, sp, #0x348
    55a0:	mov	x0, x19
    55a4:	add	w24, w10, #0x1
    55a8:	str	x9, [sp, #840]
    55ac:	str	x8, [sp, #848]
    55b0:	str	w24, [sp, #80]
    55b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55b8:	cmp	x23, x22
    55bc:	str	w24, [x0]
    55c0:	b.ne	5590 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1b4>  // b.any
    55c4:	mov	x0, x20
    55c8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    55cc:	mov	x20, x0
    55d0:	cmp	x0, x21
    55d4:	b.ne	5584 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1a8>  // b.any
    55d8:	ldr	x0, [sp]
    55dc:	mov	w1, #0x8                   	// #8
    55e0:	mov	w2, #0x3                   	// #3
    55e4:	mov	w25, #0x8                   	// #8
    55e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55ec:	ldr	x0, [sp]
    55f0:	mov	w26, #0x2                   	// #2
    55f4:	add	x8, sp, #0x118
    55f8:	mov	w27, #0x1                   	// #1
    55fc:	add	x2, sp, #0x348
    5600:	mov	w1, #0x1                   	// #1
    5604:	mov	w3, wzr
    5608:	str	x26, [sp, #280]
    560c:	str	x8, [sp, #840]
    5610:	str	x27, [sp, #848]
    5614:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5618:	ldr	x0, [sp]
    561c:	mov	w1, #0x13                  	// #19
    5620:	mov	w2, #0x3                   	// #3
    5624:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5628:	mov	w0, #0x220                 	// #544
    562c:	bl	0 <_Znwm>
    5630:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5634:	ldr	x23, [x23]
    5638:	movi	v9.2s, #0x1
    563c:	add	x21, x0, #0x20
    5640:	mov	x20, x0
    5644:	add	x24, x23, #0x10
    5648:	str	d9, [x0, #8]
    564c:	str	x24, [x0]
    5650:	mov	w2, #0x200                 	// #512
    5654:	mov	x0, x21
    5658:	mov	w1, wzr
    565c:	bl	0 <memset>
    5660:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5664:	ldr	d8, [x8]
    5668:	mov	x22, x20
    566c:	str	x21, [x22, #16]!
    5670:	mov	w8, #0xff                  	// #255
    5674:	add	x1, sp, #0x348
    5678:	mov	x0, x22
    567c:	str	x27, [sp, #840]
    5680:	str	d8, [x20, #24]
    5684:	strb	w8, [sp, #848]
    5688:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    568c:	mov	w8, #0x4                   	// #4
    5690:	add	x1, sp, #0x348
    5694:	mov	x0, x22
    5698:	str	x25, [sp, #840]
    569c:	strb	w8, [sp, #848]
    56a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    56a4:	mov	w8, #0x6                   	// #6
    56a8:	add	x1, sp, #0x348
    56ac:	mov	x0, x22
    56b0:	str	xzr, [sp, #840]
    56b4:	strb	w8, [sp, #848]
    56b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    56bc:	add	x1, sp, #0x348
    56c0:	mov	x0, x22
    56c4:	str	x25, [sp, #840]
    56c8:	strb	w26, [sp, #848]
    56cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    56d0:	ldr	x21, [sp]
    56d4:	mov	x1, x22
    56d8:	stp	x22, x20, [x29, #-192]
    56dc:	mov	x0, x21
    56e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    56e4:	add	x0, x21, #0x18
    56e8:	sub	x1, x29, #0xc0
    56ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    56f0:	ldp	x9, x8, [x21, #24]
    56f4:	ldur	x0, [x29, #-184]
    56f8:	sub	x8, x8, x9
    56fc:	lsr	x8, x8, #4
    5700:	add	w20, w8, #0x3
    5704:	cbz	x0, 570c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x330>
    5708:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    570c:	mov	w0, #0x220                 	// #544
    5710:	stur	w20, [x29, #-40]
    5714:	bl	0 <_Znwm>
    5718:	add	x21, x0, #0x20
    571c:	mov	x20, x0
    5720:	str	d9, [x0, #8]
    5724:	str	x24, [x0]
    5728:	mov	w2, #0x200                 	// #512
    572c:	mov	x0, x21
    5730:	mov	w1, wzr
    5734:	bl	0 <memset>
    5738:	ldrb	w8, [sp, #848]
    573c:	mov	x22, x20
    5740:	str	x21, [x22, #16]!
    5744:	mov	w9, #0x1                   	// #1
    5748:	orr	w8, w8, #0x1
    574c:	add	x1, sp, #0x348
    5750:	mov	x0, x22
    5754:	str	d8, [x20, #24]
    5758:	str	x9, [sp, #840]
    575c:	strb	w8, [sp, #848]
    5760:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5764:	ldrb	w8, [sp, #848]
    5768:	mov	w9, #0x8                   	// #8
    576c:	add	x1, sp, #0x348
    5770:	mov	x0, x22
    5774:	and	w8, w8, #0xf0
    5778:	orr	w8, w8, #0x4
    577c:	str	x9, [sp, #840]
    5780:	strb	w8, [sp, #848]
    5784:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5788:	ldrb	w8, [sp, #848]
    578c:	add	x1, sp, #0x348
    5790:	mov	x0, x22
    5794:	str	xzr, [sp, #840]
    5798:	and	w8, w8, #0xf0
    579c:	orr	w8, w8, #0x6
    57a0:	strb	w8, [sp, #848]
    57a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57a8:	ldrb	w8, [sp, #848]
    57ac:	mov	w9, #0x7                   	// #7
    57b0:	add	x1, sp, #0x348
    57b4:	mov	x0, x22
    57b8:	and	w8, w8, #0xf0
    57bc:	orr	w8, w8, #0x2
    57c0:	str	x9, [sp, #840]
    57c4:	strb	w8, [sp, #848]
    57c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57cc:	ldr	x21, [sp]
    57d0:	mov	x1, x22
    57d4:	stp	x22, x20, [sp, #88]
    57d8:	mov	x0, x21
    57dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57e0:	add	x0, x21, #0x18
    57e4:	add	x1, sp, #0x58
    57e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57ec:	ldp	x9, x8, [x21, #24]
    57f0:	ldr	x0, [sp, #96]
    57f4:	sub	x8, x8, x9
    57f8:	lsr	x8, x8, #4
    57fc:	add	w20, w8, #0x3
    5800:	cbz	x0, 5808 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x42c>
    5804:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5808:	mov	w0, #0x220                 	// #544
    580c:	str	w20, [sp, #808]
    5810:	bl	0 <_Znwm>
    5814:	movi	v9.2s, #0x1
    5818:	add	x24, x23, #0x10
    581c:	add	x21, x0, #0x20
    5820:	mov	x20, x0
    5824:	str	d9, [x0, #8]
    5828:	str	x24, [x0]
    582c:	mov	w2, #0x200                 	// #512
    5830:	mov	x0, x21
    5834:	mov	w1, wzr
    5838:	bl	0 <memset>
    583c:	ldrb	w8, [sp, #848]
    5840:	mov	x22, x20
    5844:	str	x21, [x22, #16]!
    5848:	mov	w9, #0x1                   	// #1
    584c:	orr	w8, w8, #0x1
    5850:	add	x1, sp, #0x348
    5854:	mov	x0, x22
    5858:	str	d8, [x20, #24]
    585c:	str	x9, [sp, #840]
    5860:	strb	w8, [sp, #848]
    5864:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5868:	ldrb	w8, [sp, #848]
    586c:	mov	w9, #0x8                   	// #8
    5870:	add	x1, sp, #0x348
    5874:	mov	x0, x22
    5878:	and	w8, w8, #0xf0
    587c:	orr	w8, w8, #0x4
    5880:	str	x9, [sp, #840]
    5884:	strb	w8, [sp, #848]
    5888:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    588c:	ldrb	w8, [sp, #848]
    5890:	add	x1, sp, #0x348
    5894:	mov	x0, x22
    5898:	str	xzr, [sp, #840]
    589c:	and	w8, w8, #0xf0
    58a0:	orr	w8, w8, #0x6
    58a4:	strb	w8, [sp, #848]
    58a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    58ac:	ldrb	w8, [sp, #848]
    58b0:	add	x1, sp, #0x348
    58b4:	mov	x0, x22
    58b8:	str	xzr, [sp, #840]
    58bc:	and	w8, w8, #0xf0
    58c0:	orr	w8, w8, #0x8
    58c4:	strb	w8, [sp, #848]
    58c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    58cc:	ldr	x21, [sp]
    58d0:	mov	x1, x22
    58d4:	stp	x22, x20, [sp, #232]
    58d8:	mov	x0, x21
    58dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    58e0:	add	x0, x21, #0x18
    58e4:	add	x1, sp, #0xe8
    58e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    58ec:	ldp	x9, x8, [x21, #24]
    58f0:	ldr	x0, [sp, #240]
    58f4:	sub	x8, x8, x9
    58f8:	lsr	x8, x8, #4
    58fc:	add	w20, w8, #0x3
    5900:	cbz	x0, 5908 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x52c>
    5904:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5908:	mov	w0, #0x220                 	// #544
    590c:	stur	w20, [x29, #-208]
    5910:	bl	0 <_Znwm>
    5914:	add	x22, x0, #0x20
    5918:	mov	x20, x0
    591c:	str	d9, [x0, #8]
    5920:	str	x24, [x0]
    5924:	mov	w2, #0x200                 	// #512
    5928:	mov	x0, x22
    592c:	mov	w1, wzr
    5930:	bl	0 <memset>
    5934:	ldrb	w8, [sp, #848]
    5938:	mov	x21, x20
    593c:	str	x22, [x21, #16]!
    5940:	mov	w9, #0x2                   	// #2
    5944:	orr	w8, w8, #0x1
    5948:	add	x1, sp, #0x348
    594c:	mov	x0, x21
    5950:	str	d8, [x20, #24]
    5954:	str	x9, [sp, #840]
    5958:	strb	w8, [sp, #848]
    595c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5960:	ldrb	w8, [sp, #848]
    5964:	mov	w22, #0x20                  	// #32
    5968:	add	x1, sp, #0x348
    596c:	mov	x0, x21
    5970:	and	w8, w8, #0xf0
    5974:	orr	w8, w8, #0x2
    5978:	str	x22, [sp, #840]
    597c:	strb	w8, [sp, #848]
    5980:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5984:	ldrb	w8, [sp, #848]
    5988:	add	x1, sp, #0x348
    598c:	mov	x0, x21
    5990:	str	x22, [sp, #840]
    5994:	and	w8, w8, #0xf0
    5998:	orr	w8, w8, #0x2
    599c:	strb	w8, [sp, #848]
    59a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    59a4:	ldrb	w8, [sp, #848]
    59a8:	add	x1, sp, #0x348
    59ac:	mov	x0, x21
    59b0:	str	x22, [sp, #840]
    59b4:	and	w8, w8, #0xf0
    59b8:	orr	w8, w8, #0x2
    59bc:	strb	w8, [sp, #848]
    59c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    59c4:	ldrb	w8, [sp, #848]
    59c8:	add	x1, sp, #0x348
    59cc:	mov	x0, x21
    59d0:	str	x22, [sp, #840]
    59d4:	and	w8, w8, #0xf0
    59d8:	orr	w8, w8, #0x2
    59dc:	strb	w8, [sp, #848]
    59e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    59e4:	ldrb	w8, [sp, #848]
    59e8:	add	x1, sp, #0x348
    59ec:	mov	x0, x21
    59f0:	str	x22, [sp, #840]
    59f4:	and	w8, w8, #0xf0
    59f8:	orr	w8, w8, #0x2
    59fc:	strb	w8, [sp, #848]
    5a00:	add	x24, sp, #0x348
    5a04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a08:	ldr	x22, [sp]
    5a0c:	mov	x1, x21
    5a10:	stp	x21, x20, [sp, #168]
    5a14:	mov	x0, x22
    5a18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a1c:	add	x0, x22, #0x18
    5a20:	add	x1, sp, #0xa8
    5a24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a28:	ldp	x9, x8, [x22, #24]
    5a2c:	ldr	x0, [sp, #176]
    5a30:	sub	x8, x8, x9
    5a34:	lsr	x8, x8, #4
    5a38:	add	w20, w8, #0x3
    5a3c:	cbz	x0, 5a44 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x668>
    5a40:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a44:	add	x8, x24, #0x10
    5a48:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a4c:	str	x8, [sp, #840]
    5a50:	ldr	d9, [x9]
    5a54:	ldr	x8, [sp, #24]
    5a58:	sub	x10, x29, #0x28
    5a5c:	sub	x11, x29, #0xd0
    5a60:	add	x12, sp, #0x328
    5a64:	mov	x9, sp
    5a68:	stp	x10, x11, [sp, #280]
    5a6c:	sub	x10, x29, #0xe0
    5a70:	stur	w20, [x29, #-224]
    5a74:	stp	x12, x24, [sp, #296]
    5a78:	str	d9, [sp, #848]
    5a7c:	stp	x9, x10, [sp, #312]
    5a80:	cbz	x8, 6420 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1044>
    5a84:	ldr	x20, [x8, #24]
    5a88:	add	x21, x8, #0x8
    5a8c:	cmp	x20, x21
    5a90:	b.eq	5b0c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x730>  // b.none
    5a94:	ldr	x22, [sp, #16]
    5a98:	ldp	x1, x2, [x20, #32]
    5a9c:	add	x0, x22, #0x30
    5aa0:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    5aa4:	ldr	x8, [x22, #48]
    5aa8:	cmn	w0, #0x1
    5aac:	b.eq	5ab8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6dc>  // b.none
    5ab0:	sxtw	x9, w0
    5ab4:	b	5abc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6e0>
    5ab8:	ldr	w9, [x22, #56]
    5abc:	ldr	x10, [sp, #16]
    5ac0:	add	x8, x8, x9, lsl #3
    5ac4:	ldr	x11, [x10, #48]
    5ac8:	ldr	w10, [x10, #56]
    5acc:	add	x9, x11, x10, lsl #3
    5ad0:	cmp	x8, x9
    5ad4:	b.eq	5ae8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x70c>  // b.none
    5ad8:	ldr	x1, [x8]
    5adc:	add	x0, sp, #0x118
    5ae0:	bl	100b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>
    5ae4:	b	5af8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x71c>
    5ae8:	ldr	x8, [sp, #24]
    5aec:	ldr	x8, [x8, #40]
    5af0:	cmp	x8, #0x1
    5af4:	b.ne	6c30 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1854>  // b.any
    5af8:	mov	x0, x20
    5afc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    5b00:	mov	x20, x0
    5b04:	cmp	x0, x21
    5b08:	b.ne	5a94 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6b8>  // b.any
    5b0c:	ldr	x0, [sp]
    5b10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b14:	ldr	x0, [sp, #840]
    5b18:	add	x8, sp, #0x348
    5b1c:	add	x8, x8, #0x10
    5b20:	cmp	x0, x8
    5b24:	b.eq	5b2c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x750>  // b.none
    5b28:	bl	0 <free>
    5b2c:	ldr	x0, [sp]
    5b30:	mov	w1, #0x14                  	// #20
    5b34:	mov	w2, #0x3                   	// #3
    5b38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b3c:	ldr	x0, [sp]
    5b40:	mov	w8, #0x8                   	// #8
    5b44:	add	x21, sp, #0x118
    5b48:	mov	w20, #0x1                   	// #1
    5b4c:	add	x2, sp, #0x348
    5b50:	mov	w1, #0xa                   	// #10
    5b54:	mov	w3, wzr
    5b58:	str	x8, [sp, #280]
    5b5c:	str	x21, [sp, #840]
    5b60:	str	x20, [sp, #848]
    5b64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b68:	ldr	x8, [sp, #16]
    5b6c:	ldr	x0, [sp]
    5b70:	add	x2, sp, #0x348
    5b74:	mov	w1, #0x14                  	// #20
    5b78:	ldrb	w9, [x8, #227]
    5b7c:	ldrb	w10, [x8, #224]
    5b80:	ldrb	w11, [x8, #226]
    5b84:	mov	w3, wzr
    5b88:	cmp	w9, #0x0
    5b8c:	orr	x9, x10, #0x2
    5b90:	csel	x9, x10, x9, eq  // eq = none
    5b94:	ldrb	w10, [x8, #229]
    5b98:	cmp	w11, #0x0
    5b9c:	orr	x11, x9, #0x4
    5ba0:	csel	x9, x9, x11, eq  // eq = none
    5ba4:	ldrb	w11, [x8, #230]
    5ba8:	cmp	w10, #0x0
    5bac:	orr	x10, x9, #0x8
    5bb0:	ldrb	w8, [x8, #225]
    5bb4:	csel	x9, x9, x10, eq  // eq = none
    5bb8:	cmp	w11, #0x0
    5bbc:	orr	x10, x9, #0x10
    5bc0:	csel	x9, x9, x10, eq  // eq = none
    5bc4:	cmp	w8, #0x0
    5bc8:	orr	x8, x9, #0x20
    5bcc:	csel	x8, x9, x8, eq  // eq = none
    5bd0:	str	x8, [sp, #280]
    5bd4:	str	x21, [sp, #840]
    5bd8:	str	x20, [sp, #848]
    5bdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5be0:	ldr	x20, [sp, #56]
    5be4:	mov	x8, sp
    5be8:	add	x22, x8, #0x28
    5bec:	cmp	x20, x22
    5bf0:	b.eq	5c38 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x85c>  // b.none
    5bf4:	mov	w24, #0x2                   	// #2
    5bf8:	ldr	w8, [x20, #40]
    5bfc:	ldr	x0, [sp]
    5c00:	add	x2, sp, #0x348
    5c04:	mov	w1, #0x10                  	// #16
    5c08:	str	x8, [sp, #280]
    5c0c:	ldr	x8, [x20, #32]
    5c10:	mov	w3, wzr
    5c14:	str	x21, [sp, #840]
    5c18:	str	x24, [sp, #848]
    5c1c:	str	x8, [sp, #288]
    5c20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c24:	mov	x0, x20
    5c28:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    5c2c:	mov	x20, x0
    5c30:	cmp	x0, x22
    5c34:	b.ne	5bf8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x81c>  // b.any
    5c38:	mov	w0, #0x220                 	// #544
    5c3c:	bl	0 <_Znwm>
    5c40:	movi	v10.2s, #0x1
    5c44:	add	x24, x23, #0x10
    5c48:	add	x22, x0, #0x20
    5c4c:	mov	x20, x0
    5c50:	str	d10, [x0, #8]
    5c54:	str	x24, [x0]
    5c58:	mov	w2, #0x200                 	// #512
    5c5c:	mov	x0, x22
    5c60:	mov	w1, wzr
    5c64:	bl	0 <memset>
    5c68:	ldrb	w8, [sp, #848]
    5c6c:	mov	x21, x20
    5c70:	str	x22, [x21, #16]!
    5c74:	mov	w25, #0x4                   	// #4
    5c78:	orr	w8, w8, #0x1
    5c7c:	add	x1, sp, #0x348
    5c80:	mov	x0, x21
    5c84:	str	d8, [x20, #24]
    5c88:	str	x25, [sp, #840]
    5c8c:	strb	w8, [sp, #848]
    5c90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c94:	ldrb	w8, [sp, #848]
    5c98:	mov	w22, #0x8                   	// #8
    5c9c:	add	x1, sp, #0x348
    5ca0:	mov	x0, x21
    5ca4:	and	w8, w8, #0xf0
    5ca8:	orr	w8, w8, #0x4
    5cac:	str	x22, [sp, #840]
    5cb0:	strb	w8, [sp, #848]
    5cb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cb8:	ldrb	w8, [sp, #848]
    5cbc:	add	x1, sp, #0x348
    5cc0:	mov	x0, x21
    5cc4:	str	x22, [sp, #840]
    5cc8:	and	w8, w8, #0xf0
    5ccc:	orr	w8, w8, #0x4
    5cd0:	strb	w8, [sp, #848]
    5cd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cd8:	ldrb	w8, [sp, #848]
    5cdc:	mov	w9, #0x6                   	// #6
    5ce0:	add	x1, sp, #0x348
    5ce4:	mov	x0, x21
    5ce8:	and	w8, w8, #0xf0
    5cec:	orr	w8, w8, #0x4
    5cf0:	str	x9, [sp, #840]
    5cf4:	strb	w8, [sp, #848]
    5cf8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cfc:	ldrb	w8, [sp, #848]
    5d00:	add	x1, sp, #0x348
    5d04:	mov	x0, x21
    5d08:	str	x22, [sp, #840]
    5d0c:	and	w8, w8, #0xf0
    5d10:	orr	w8, w8, #0x4
    5d14:	strb	w8, [sp, #848]
    5d18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d1c:	ldrb	w8, [sp, #848]
    5d20:	add	x1, sp, #0x348
    5d24:	mov	x0, x21
    5d28:	str	x25, [sp, #840]
    5d2c:	and	w8, w8, #0xf0
    5d30:	orr	w8, w8, #0x4
    5d34:	strb	w8, [sp, #848]
    5d38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d3c:	ldrb	w8, [sp, #848]
    5d40:	add	x1, sp, #0x348
    5d44:	mov	x0, x21
    5d48:	str	x22, [sp, #840]
    5d4c:	and	w8, w8, #0xf0
    5d50:	orr	w8, w8, #0x4
    5d54:	strb	w8, [sp, #848]
    5d58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d5c:	ldrb	w8, [sp, #848]
    5d60:	add	x1, sp, #0x348
    5d64:	mov	x0, x21
    5d68:	str	x25, [sp, #840]
    5d6c:	and	w8, w8, #0xf0
    5d70:	orr	w8, w8, #0x4
    5d74:	strb	w8, [sp, #848]
    5d78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d7c:	ldrb	w8, [sp, #848]
    5d80:	add	x1, sp, #0x348
    5d84:	mov	x0, x21
    5d88:	str	x25, [sp, #840]
    5d8c:	and	w8, w8, #0xf0
    5d90:	orr	w8, w8, #0x4
    5d94:	strb	w8, [sp, #848]
    5d98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d9c:	ldrb	w8, [sp, #848]
    5da0:	add	x1, sp, #0x348
    5da4:	mov	x0, x21
    5da8:	str	x25, [sp, #840]
    5dac:	and	w8, w8, #0xf0
    5db0:	orr	w8, w8, #0x4
    5db4:	strb	w8, [sp, #848]
    5db8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5dbc:	ldrb	w8, [sp, #848]
    5dc0:	add	x1, sp, #0x348
    5dc4:	mov	x0, x21
    5dc8:	str	xzr, [sp, #840]
    5dcc:	and	w8, w8, #0xf0
    5dd0:	orr	w8, w8, #0x6
    5dd4:	strb	w8, [sp, #848]
    5dd8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ddc:	ldrb	w8, [sp, #848]
    5de0:	add	x1, sp, #0x348
    5de4:	mov	x0, x21
    5de8:	str	x22, [sp, #840]
    5dec:	and	w8, w8, #0xf0
    5df0:	orr	w8, w8, #0x4
    5df4:	strb	w8, [sp, #848]
    5df8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5dfc:	ldr	x22, [sp]
    5e00:	mov	x1, x21
    5e04:	stp	x21, x20, [x29, #-208]
    5e08:	mov	x0, x22
    5e0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5e10:	add	x0, x22, #0x18
    5e14:	sub	x1, x29, #0xd0
    5e18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5e1c:	ldp	x9, x8, [x22, #24]
    5e20:	ldur	x0, [x29, #-200]
    5e24:	sub	x8, x8, x9
    5e28:	lsr	x8, x8, #4
    5e2c:	add	w20, w8, #0x3
    5e30:	cbz	x0, 5e38 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa5c>
    5e34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5e38:	mov	w0, #0x220                 	// #544
    5e3c:	str	w20, [x29, #12]
    5e40:	bl	0 <_Znwm>
    5e44:	add	x22, x0, #0x20
    5e48:	mov	x20, x0
    5e4c:	str	d10, [x0, #8]
    5e50:	str	x24, [x0]
    5e54:	mov	w2, #0x200                 	// #512
    5e58:	mov	x0, x22
    5e5c:	mov	w1, wzr
    5e60:	bl	0 <memset>
    5e64:	ldrb	w8, [sp, #848]
    5e68:	mov	x21, x20
    5e6c:	str	x22, [x21, #16]!
    5e70:	mov	w9, #0x5                   	// #5
    5e74:	orr	w8, w8, #0x1
    5e78:	add	x1, sp, #0x348
    5e7c:	mov	x0, x21
    5e80:	str	d8, [x20, #24]
    5e84:	str	x9, [sp, #840]
    5e88:	strb	w8, [sp, #848]
    5e8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5e90:	ldrb	w8, [sp, #848]
    5e94:	mov	w22, #0x8                   	// #8
    5e98:	add	x1, sp, #0x348
    5e9c:	mov	x0, x21
    5ea0:	and	w8, w8, #0xf0
    5ea4:	orr	w8, w8, #0x4
    5ea8:	str	x22, [sp, #840]
    5eac:	strb	w8, [sp, #848]
    5eb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5eb4:	ldrb	w8, [sp, #848]
    5eb8:	add	x1, sp, #0x348
    5ebc:	mov	x0, x21
    5ec0:	str	x22, [sp, #840]
    5ec4:	and	w8, w8, #0xf0
    5ec8:	orr	w8, w8, #0x4
    5ecc:	strb	w8, [sp, #848]
    5ed0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ed4:	ldrb	w8, [sp, #848]
    5ed8:	mov	w9, #0x6                   	// #6
    5edc:	add	x1, sp, #0x348
    5ee0:	mov	x0, x21
    5ee4:	and	w8, w8, #0xf0
    5ee8:	orr	w8, w8, #0x4
    5eec:	str	x9, [sp, #840]
    5ef0:	strb	w8, [sp, #848]
    5ef4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ef8:	ldrb	w8, [sp, #848]
    5efc:	add	x1, sp, #0x348
    5f00:	mov	x0, x21
    5f04:	str	x22, [sp, #840]
    5f08:	and	w8, w8, #0xf0
    5f0c:	orr	w8, w8, #0x4
    5f10:	strb	w8, [sp, #848]
    5f14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5f18:	ldrb	w8, [sp, #848]
    5f1c:	mov	w24, #0x4                   	// #4
    5f20:	add	x1, sp, #0x348
    5f24:	mov	x0, x21
    5f28:	and	w8, w8, #0xf0
    5f2c:	orr	w8, w8, #0x4
    5f30:	str	x24, [sp, #840]
    5f34:	strb	w8, [sp, #848]
    5f38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5f3c:	ldrb	w8, [sp, #848]
    5f40:	add	x1, sp, #0x348
    5f44:	mov	x0, x21
    5f48:	str	x22, [sp, #840]
    5f4c:	and	w8, w8, #0xf0
    5f50:	orr	w8, w8, #0x4
    5f54:	strb	w8, [sp, #848]
    5f58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5f5c:	ldrb	w8, [sp, #848]
    5f60:	add	x1, sp, #0x348
    5f64:	mov	x0, x21
    5f68:	str	x24, [sp, #840]
    5f6c:	and	w8, w8, #0xf0
    5f70:	orr	w8, w8, #0x4
    5f74:	strb	w8, [sp, #848]
    5f78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5f7c:	ldrb	w8, [sp, #848]
    5f80:	add	x1, sp, #0x348
    5f84:	mov	x0, x21
    5f88:	str	x24, [sp, #840]
    5f8c:	and	w8, w8, #0xf0
    5f90:	orr	w8, w8, #0x4
    5f94:	strb	w8, [sp, #848]
    5f98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5f9c:	ldrb	w8, [sp, #848]
    5fa0:	add	x1, sp, #0x348
    5fa4:	mov	x0, x21
    5fa8:	str	x24, [sp, #840]
    5fac:	and	w8, w8, #0xf0
    5fb0:	orr	w8, w8, #0x4
    5fb4:	strb	w8, [sp, #848]
    5fb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5fbc:	ldrb	w8, [sp, #848]
    5fc0:	add	x1, sp, #0x348
    5fc4:	mov	x0, x21
    5fc8:	str	xzr, [sp, #840]
    5fcc:	and	w8, w8, #0xf0
    5fd0:	orr	w8, w8, #0x6
    5fd4:	strb	w8, [sp, #848]
    5fd8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5fdc:	ldrb	w8, [sp, #848]
    5fe0:	add	x1, sp, #0x348
    5fe4:	mov	x0, x21
    5fe8:	str	x22, [sp, #840]
    5fec:	and	w8, w8, #0xf0
    5ff0:	orr	w8, w8, #0x4
    5ff4:	strb	w8, [sp, #848]
    5ff8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ffc:	ldr	x22, [sp]
    6000:	mov	x1, x21
    6004:	stp	x21, x20, [x29, #-224]
    6008:	mov	x0, x22
    600c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6010:	add	x0, x22, #0x18
    6014:	sub	x1, x29, #0xe0
    6018:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    601c:	ldp	x9, x8, [x22, #24]
    6020:	ldur	x0, [x29, #-216]
    6024:	sub	x8, x8, x9
    6028:	lsr	x8, x8, #4
    602c:	add	w20, w8, #0x3
    6030:	cbz	x0, 6038 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc5c>
    6034:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6038:	mov	w0, #0x220                 	// #544
    603c:	str	w20, [x29, #8]
    6040:	bl	0 <_Znwm>
    6044:	movi	v10.2s, #0x1
    6048:	add	x23, x23, #0x10
    604c:	add	x22, x0, #0x20
    6050:	mov	x20, x0
    6054:	str	d10, [x0, #8]
    6058:	str	x23, [x0]
    605c:	mov	w2, #0x200                 	// #512
    6060:	mov	x0, x22
    6064:	mov	w1, wzr
    6068:	bl	0 <memset>
    606c:	ldrb	w8, [sp, #848]
    6070:	mov	x21, x20
    6074:	str	x22, [x21, #16]!
    6078:	mov	w22, #0x6                   	// #6
    607c:	orr	w8, w8, #0x1
    6080:	add	x1, sp, #0x348
    6084:	mov	x0, x21
    6088:	str	d8, [x20, #24]
    608c:	str	x22, [sp, #840]
    6090:	strb	w8, [sp, #848]
    6094:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6098:	ldrb	w8, [sp, #848]
    609c:	mov	w24, #0x8                   	// #8
    60a0:	add	x1, sp, #0x348
    60a4:	mov	x0, x21
    60a8:	and	w8, w8, #0xf0
    60ac:	orr	w8, w8, #0x4
    60b0:	str	x24, [sp, #840]
    60b4:	strb	w8, [sp, #848]
    60b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60bc:	ldrb	w8, [sp, #848]
    60c0:	add	x1, sp, #0x348
    60c4:	mov	x0, x21
    60c8:	str	x24, [sp, #840]
    60cc:	and	w8, w8, #0xf0
    60d0:	orr	w8, w8, #0x4
    60d4:	strb	w8, [sp, #848]
    60d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60dc:	ldrb	w8, [sp, #848]
    60e0:	add	x1, sp, #0x348
    60e4:	mov	x0, x21
    60e8:	str	x22, [sp, #840]
    60ec:	and	w8, w8, #0xf0
    60f0:	orr	w8, w8, #0x4
    60f4:	strb	w8, [sp, #848]
    60f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60fc:	ldrb	w8, [sp, #848]
    6100:	add	x1, sp, #0x348
    6104:	mov	x0, x21
    6108:	str	xzr, [sp, #840]
    610c:	and	w8, w8, #0xf0
    6110:	orr	w8, w8, #0x6
    6114:	strb	w8, [sp, #848]
    6118:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    611c:	ldrb	w8, [sp, #848]
    6120:	add	x1, sp, #0x348
    6124:	mov	x0, x21
    6128:	str	x24, [sp, #840]
    612c:	and	w8, w8, #0xf0
    6130:	orr	w8, w8, #0x4
    6134:	strb	w8, [sp, #848]
    6138:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    613c:	ldr	x22, [sp]
    6140:	mov	x1, x21
    6144:	stp	x21, x20, [x29, #-248]
    6148:	mov	x0, x22
    614c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6150:	add	x0, x22, #0x18
    6154:	sub	x1, x29, #0xf8
    6158:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    615c:	ldp	x9, x8, [x22, #24]
    6160:	ldur	x0, [x29, #-240]
    6164:	sub	x8, x8, x9
    6168:	lsr	x8, x8, #4
    616c:	add	w20, w8, #0x3
    6170:	cbz	x0, 6178 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xd9c>
    6174:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6178:	mov	w0, #0x220                 	// #544
    617c:	stur	w20, [x29, #-228]
    6180:	bl	0 <_Znwm>
    6184:	add	x22, x0, #0x20
    6188:	mov	x20, x0
    618c:	str	d10, [x0, #8]
    6190:	str	x23, [x0]
    6194:	mov	w2, #0x200                 	// #512
    6198:	mov	x0, x22
    619c:	mov	w1, wzr
    61a0:	bl	0 <memset>
    61a4:	ldrb	w8, [sp, #848]
    61a8:	mov	x21, x20
    61ac:	str	x22, [x21, #16]!
    61b0:	mov	w22, #0x8                   	// #8
    61b4:	orr	w8, w8, #0x1
    61b8:	add	x1, sp, #0x348
    61bc:	mov	x0, x21
    61c0:	str	d8, [x20, #24]
    61c4:	str	x22, [sp, #840]
    61c8:	strb	w8, [sp, #848]
    61cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61d0:	ldrb	w8, [sp, #848]
    61d4:	add	x1, sp, #0x348
    61d8:	mov	x0, x21
    61dc:	str	x22, [sp, #840]
    61e0:	and	w8, w8, #0xf0
    61e4:	orr	w8, w8, #0x4
    61e8:	strb	w8, [sp, #848]
    61ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61f0:	ldrb	w8, [sp, #848]
    61f4:	add	x1, sp, #0x348
    61f8:	mov	x0, x21
    61fc:	str	x22, [sp, #840]
    6200:	and	w8, w8, #0xf0
    6204:	orr	w8, w8, #0x4
    6208:	strb	w8, [sp, #848]
    620c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6210:	ldrb	w8, [sp, #848]
    6214:	mov	w9, #0x6                   	// #6
    6218:	add	x1, sp, #0x348
    621c:	mov	x0, x21
    6220:	and	w8, w8, #0xf0
    6224:	orr	w8, w8, #0x4
    6228:	str	x9, [sp, #840]
    622c:	strb	w8, [sp, #848]
    6230:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6234:	ldrb	w8, [sp, #848]
    6238:	add	x1, sp, #0x348
    623c:	mov	x0, x21
    6240:	str	x22, [sp, #840]
    6244:	and	w8, w8, #0xf0
    6248:	orr	w8, w8, #0x4
    624c:	strb	w8, [sp, #848]
    6250:	add	x23, sp, #0x348
    6254:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6258:	ldr	x22, [sp]
    625c:	mov	x1, x21
    6260:	str	x21, [sp, #1368]
    6264:	str	x20, [sp, #1376]
    6268:	mov	x0, x22
    626c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6270:	add	x0, x22, #0x18
    6274:	add	x1, sp, #0x558
    6278:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    627c:	ldr	x0, [sp, #1376]
    6280:	ldp	x22, x24, [x22, #24]
    6284:	cbz	x0, 628c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xeb0>
    6288:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    628c:	add	x8, x23, #0x10
    6290:	add	x0, sp, #0x328
    6294:	mov	w1, wzr
    6298:	str	d9, [sp, #848]
    629c:	str	x8, [sp, #840]
    62a0:	str	xzr, [sp, #808]
    62a4:	add	x20, sp, #0x328
    62a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    62ac:	ldr	x8, [sp, #24]
    62b0:	add	x9, sp, #0x118
    62b4:	add	x10, sp, #0xe8
    62b8:	mov	x11, sp
    62bc:	add	x12, sp, #0xa8
    62c0:	sub	x13, x29, #0xe4
    62c4:	stp	x20, x23, [sp, #104]
    62c8:	add	x14, sp, #0xd8
    62cc:	add	x15, x29, #0x8
    62d0:	add	x16, x9, #0x10
    62d4:	stp	x9, x11, [sp, #216]
    62d8:	add	x26, x10, #0x8
    62dc:	add	x23, x12, #0x8
    62e0:	stp	x9, x13, [sp, #120]
    62e4:	add	x9, x29, #0xc
    62e8:	str	d9, [sp, #288]
    62ec:	str	wzr, [sp, #240]
    62f0:	str	wzr, [sp, #176]
    62f4:	stp	x12, x11, [sp, #88]
    62f8:	stp	x14, x10, [sp, #136]
    62fc:	stp	xzr, x16, [sp, #272]
    6300:	stp	xzr, x26, [sp, #248]
    6304:	str	x26, [sp, #264]
    6308:	stp	xzr, x23, [sp, #184]
    630c:	stp	x23, xzr, [sp, #200]
    6310:	stp	x15, x9, [sp, #152]
    6314:	cbz	x8, 6454 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1078>
    6318:	ldr	x20, [x8, #24]
    631c:	add	x25, x8, #0x8
    6320:	cmp	x20, x25
    6324:	b.eq	64a4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x10c8>  // b.none
    6328:	ldr	x1, [x20, #72]
    632c:	ldr	w8, [x20, #88]
    6330:	ldr	w9, [x20, #80]
    6334:	add	x21, x20, #0x40
    6338:	add	x2, x1, x8, lsl #4
    633c:	cbz	w9, 635c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xf80>
    6340:	sub	x0, x29, #0xc0
    6344:	mov	x3, x21
    6348:	mov	w4, wzr
    634c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6350:	ldr	w8, [x20, #88]
    6354:	ldp	x9, x1, [x20, #64]
    6358:	b	6368 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xf8c>
    635c:	ldr	x9, [x21]
    6360:	stp	x2, x2, [x29, #-176]
    6364:	stp	x21, x9, [x29, #-192]
    6368:	add	x8, x1, x8, lsl #4
    636c:	stp	x21, x9, [x29, #-40]
    6370:	stp	x8, x8, [x29, #-24]
    6374:	sub	x0, x29, #0xc0
    6378:	sub	x1, x29, #0x28
    637c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6380:	tbz	w0, #0, 6408 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x102c>
    6384:	ldp	x8, x9, [x29, #-192]
    6388:	ldr	x8, [x8]
    638c:	cmp	x8, x9
    6390:	b.ne	6b50 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1774>  // b.any
    6394:	ldur	x21, [x29, #-176]
    6398:	add	x0, sp, #0x58
    639c:	mov	w3, wzr
    63a0:	ldp	x1, x2, [x21]
    63a4:	bl	10300 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
    63a8:	ldr	x8, [x21, #8]
    63ac:	cbz	x8, 6b70 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1794>
    63b0:	ldr	w9, [x8, #8]
    63b4:	cbnz	w9, 63e0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1004>
    63b8:	ldr	x9, [x8, #64]
    63bc:	cmp	x9, #0x7
    63c0:	b.ls	6bd0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17f4>  // b.plast
    63c4:	ldr	x2, [x8, #72]
    63c8:	cbz	x2, 6bb0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17d4>
    63cc:	and	x8, x9, #0xfffffffffffffff8
    63d0:	ldr	x1, [x8]
    63d4:	add	x0, sp, #0x58
    63d8:	mov	w3, #0x1                   	// #1
    63dc:	bl	10300 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
    63e0:	ldp	x8, x9, [x29, #-192]
    63e4:	ldr	x8, [x8]
    63e8:	cmp	x8, x9
    63ec:	b.ne	6b90 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17b4>  // b.any
    63f0:	ldur	x8, [x29, #-176]
    63f4:	sub	x0, x29, #0xc0
    63f8:	add	x8, x8, #0x10
    63fc:	stur	x8, [x29, #-176]
    6400:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6404:	b	6374 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xf98>
    6408:	mov	x0, x20
    640c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6410:	mov	x20, x0
    6414:	cmp	x0, x25
    6418:	b.ne	6328 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xf4c>  // b.any
    641c:	b	64a4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x10c8>
    6420:	ldr	x9, [sp, #16]
    6424:	ldr	w8, [x9, #56]
    6428:	ldr	x9, [x9, #48]
    642c:	cbz	w8, 6b1c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1740>
    6430:	add	x10, x9, #0x8
    6434:	mov	x20, x9
    6438:	ldur	x11, [x10, #-8]
    643c:	cbz	x11, 6448 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x106c>
    6440:	cmn	x11, #0x8
    6444:	b.ne	6b20 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1744>  // b.any
    6448:	mov	x20, x10
    644c:	add	x10, x10, #0x8
    6450:	b	6438 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x105c>
    6454:	ldr	x8, [sp, #16]
    6458:	ldr	x20, [x8, #24]
    645c:	add	x21, x8, #0x8
    6460:	cmp	x20, x21
    6464:	b.eq	64a4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x10c8>  // b.none
    6468:	ldp	x25, x27, [x20, #56]
    646c:	cmp	x25, x27
    6470:	b.eq	6490 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x10b4>  // b.none
    6474:	ldr	x2, [x25], #8
    6478:	ldr	x1, [x20, #32]
    647c:	add	x0, sp, #0x58
    6480:	mov	w3, wzr
    6484:	bl	10300 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
    6488:	cmp	x27, x25
    648c:	b.ne	6474 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1098>  // b.any
    6490:	mov	x0, x20
    6494:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6498:	mov	x20, x0
    649c:	cmp	x0, x21
    64a0:	b.ne	6468 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x108c>  // b.any
    64a4:	ldr	w8, [sp, #848]
    64a8:	cbz	w8, 6600 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1224>
    64ac:	ldr	x21, [sp, #840]
    64b0:	sub	x9, x24, x22
    64b4:	lsr	x9, x9, #4
    64b8:	add	w20, w9, #0x3
    64bc:	lsl	x22, x8, #3
    64c0:	ldr	x24, [x21]
    64c4:	add	x0, sp, #0x328
    64c8:	sub	x1, x29, #0xc0
    64cc:	stur	x24, [x29, #-192]
    64d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    64d4:	ldr	w8, [x0, #8]
    64d8:	cbz	w8, 6bf0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1814>
    64dc:	add	x0, sp, #0x118
    64e0:	sub	x1, x29, #0xc0
    64e4:	stur	x8, [x29, #-192]
    64e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    64ec:	ldr	x25, [sp, #16]
    64f0:	ldp	x1, x2, [x24, #24]
    64f4:	add	x0, x25, #0x30
    64f8:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    64fc:	cmn	w0, #0x1
    6500:	b.eq	6514 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1138>  // b.none
    6504:	ldr	w9, [x25, #56]
    6508:	sxtw	x8, w0
    650c:	cmp	x8, x9
    6510:	b.ne	651c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1140>  // b.any
    6514:	mov	x8, xzr
    6518:	b	6528 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x114c>
    651c:	ldr	x9, [x25, #48]
    6520:	ldr	x8, [x9, x8, lsl #3]
    6524:	ldr	x8, [x8, #8]
    6528:	add	x0, sp, #0x118
    652c:	sub	x1, x29, #0xc0
    6530:	stur	x8, [x29, #-192]
    6534:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6538:	ldrb	w8, [x24, #12]
    653c:	add	x0, sp, #0x118
    6540:	sub	x1, x29, #0xc0
    6544:	stur	x8, [x29, #-192]
    6548:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    654c:	ldr	x8, [x24, #72]
    6550:	cbz	x8, 6bb0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17d4>
    6554:	add	x0, sp, #0x328
    6558:	sub	x1, x29, #0xc0
    655c:	stur	x8, [x29, #-192]
    6560:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6564:	ldr	w8, [x0, #8]
    6568:	cbz	w8, 6c10 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1834>
    656c:	add	x0, sp, #0x118
    6570:	sub	x1, x29, #0xc0
    6574:	stur	x8, [x29, #-192]
    6578:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    657c:	ldr	x0, [sp]
    6580:	add	x2, sp, #0x118
    6584:	mov	w1, #0x8                   	// #8
    6588:	mov	w3, w20
    658c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6590:	str	wzr, [sp, #288]
    6594:	ldrb	w8, [x24, #12]
    6598:	and	w8, w8, #0xf
    659c:	sub	w8, w8, #0x7
    65a0:	cmp	w8, #0x1
    65a4:	b.hi	65d8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x11fc>  // b.pmore
    65a8:	ldr	x8, [x24, #16]
    65ac:	ldp	x0, x25, [sp, #216]
    65b0:	sub	x1, x29, #0xc0
    65b4:	stur	x8, [x29, #-192]
    65b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    65bc:	ldr	x0, [x25]
    65c0:	ldr	x2, [sp, #216]
    65c4:	mov	w1, #0x9                   	// #9
    65c8:	mov	w3, wzr
    65cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    65d0:	ldr	x8, [sp, #216]
    65d4:	str	wzr, [x8, #8]
    65d8:	ldr	x0, [x24, #72]
    65dc:	cbz	x0, 6bb0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x17d4>
    65e0:	ldr	w8, [x0, #8]
    65e4:	cmp	w8, #0x1
    65e8:	b.ne	65f4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1218>  // b.any
    65ec:	add	x1, sp, #0xe8
    65f0:	bl	101b0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>
    65f4:	subs	x22, x22, #0x8
    65f8:	add	x21, x21, #0x8
    65fc:	b.ne	64c0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x10e4>  // b.any
    6600:	ldr	x8, [sp, #16]
    6604:	ldr	x9, [x8, #272]
    6608:	cbz	x9, 6720 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1344>
    660c:	add	x8, x8, #0xe8
    6610:	ldr	x20, [x8, #24]
    6614:	add	x24, x8, #0x8
    6618:	cmp	x20, x24
    661c:	b.eq	6700 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1324>  // b.none
    6620:	ldp	x21, x22, [x20, #32]
    6624:	cbz	x22, 663c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1260>
    6628:	ldrb	w8, [x21]
    662c:	cmp	w8, #0x1
    6630:	b.ne	663c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1260>  // b.any
    6634:	add	x21, x21, #0x1
    6638:	sub	x22, x22, #0x1
    663c:	sub	x0, x29, #0xc0
    6640:	bl	0 <_ZN4llvm3MD5C1Ev>
    6644:	sub	x0, x29, #0xc0
    6648:	mov	x1, x21
    664c:	mov	x2, x22
    6650:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
    6654:	sub	x0, x29, #0xc0
    6658:	sub	x1, x29, #0x28
    665c:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
    6660:	ldr	x10, [sp, #184]
    6664:	cbz	x10, 66ec <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1310>
    6668:	ldur	x8, [x29, #-40]
    666c:	mov	x9, x23
    6670:	ldr	x11, [x10, #32]
    6674:	add	x12, x10, #0x18
    6678:	add	x13, x10, #0x10
    667c:	cmp	x11, x8
    6680:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    6684:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    6688:	ldr	x10, [x10]
    668c:	cbnz	x10, 6670 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1294>
    6690:	cmp	x9, x23
    6694:	b.eq	66ec <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1310>  // b.none
    6698:	ldr	x10, [x9, #32]
    669c:	cmp	x8, x10
    66a0:	csel	x8, x23, x9, cc  // cc = lo, ul, last
    66a4:	cmp	x8, x23
    66a8:	b.eq	66ec <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1310>  // b.none
    66ac:	ldp	x1, x2, [x20, #32]
    66b0:	ldr	x21, [sp, #8]
    66b4:	sub	x0, x29, #0xc0
    66b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    66bc:	ldp	x1, x2, [x29, #-192]
    66c0:	mov	x0, x21
    66c4:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    66c8:	stur	x0, [x29, #-192]
    66cc:	add	x0, sp, #0x118
    66d0:	sub	x1, x29, #0xc0
    66d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    66d8:	ldr	x8, [x20, #40]
    66dc:	add	x0, sp, #0x118
    66e0:	sub	x1, x29, #0xc0
    66e4:	stur	x8, [x29, #-192]
    66e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    66ec:	mov	x0, x20
    66f0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    66f4:	mov	x20, x0
    66f8:	cmp	x0, x24
    66fc:	b.ne	6620 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1244>  // b.any
    6700:	ldr	w8, [sp, #288]
    6704:	cbz	w8, 6720 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1344>
    6708:	ldr	x0, [sp]
    670c:	add	x2, sp, #0x118
    6710:	mov	w1, #0x11                  	// #17
    6714:	mov	w3, wzr
    6718:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    671c:	str	wzr, [sp, #288]
    6720:	ldr	x8, [sp, #16]
    6724:	ldr	x9, [x8, #320]
    6728:	cbz	x9, 6840 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1464>
    672c:	add	x8, x8, #0x118
    6730:	ldr	x20, [x8, #24]
    6734:	add	x24, x8, #0x8
    6738:	cmp	x20, x24
    673c:	b.eq	6820 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1444>  // b.none
    6740:	ldp	x21, x22, [x20, #32]
    6744:	cbz	x22, 675c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1380>
    6748:	ldrb	w8, [x21]
    674c:	cmp	w8, #0x1
    6750:	b.ne	675c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1380>  // b.any
    6754:	add	x21, x21, #0x1
    6758:	sub	x22, x22, #0x1
    675c:	sub	x0, x29, #0xc0
    6760:	bl	0 <_ZN4llvm3MD5C1Ev>
    6764:	sub	x0, x29, #0xc0
    6768:	mov	x1, x21
    676c:	mov	x2, x22
    6770:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
    6774:	sub	x0, x29, #0xc0
    6778:	sub	x1, x29, #0x28
    677c:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
    6780:	ldr	x10, [sp, #184]
    6784:	cbz	x10, 680c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1430>
    6788:	ldur	x8, [x29, #-40]
    678c:	mov	x9, x23
    6790:	ldr	x11, [x10, #32]
    6794:	add	x12, x10, #0x18
    6798:	add	x13, x10, #0x10
    679c:	cmp	x11, x8
    67a0:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    67a4:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    67a8:	ldr	x10, [x10]
    67ac:	cbnz	x10, 6790 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x13b4>
    67b0:	cmp	x9, x23
    67b4:	b.eq	680c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1430>  // b.none
    67b8:	ldr	x10, [x9, #32]
    67bc:	cmp	x8, x10
    67c0:	csel	x8, x23, x9, cc  // cc = lo, ul, last
    67c4:	cmp	x8, x23
    67c8:	b.eq	680c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1430>  // b.none
    67cc:	ldp	x1, x2, [x20, #32]
    67d0:	ldr	x21, [sp, #8]
    67d4:	sub	x0, x29, #0xc0
    67d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    67dc:	ldp	x1, x2, [x29, #-192]
    67e0:	mov	x0, x21
    67e4:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    67e8:	stur	x0, [x29, #-192]
    67ec:	add	x0, sp, #0x118
    67f0:	sub	x1, x29, #0xc0
    67f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    67f8:	ldr	x8, [x20, #40]
    67fc:	add	x0, sp, #0x118
    6800:	sub	x1, x29, #0xc0
    6804:	stur	x8, [x29, #-192]
    6808:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    680c:	mov	x0, x20
    6810:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6814:	mov	x20, x0
    6818:	cmp	x0, x24
    681c:	b.ne	6740 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1364>  // b.any
    6820:	ldr	w8, [sp, #288]
    6824:	cbz	w8, 6840 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1464>
    6828:	ldr	x0, [sp]
    682c:	add	x2, sp, #0x118
    6830:	mov	w1, #0x12                  	// #18
    6834:	mov	w3, wzr
    6838:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    683c:	str	wzr, [sp, #288]
    6840:	ldr	x20, [sp, #256]
    6844:	cmp	x20, x26
    6848:	b.eq	6a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x16ac>  // b.none
    684c:	ldr	x8, [sp, #16]
    6850:	add	x1, x20, #0x20
    6854:	add	x0, x8, #0x50
    6858:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    685c:	cmp	x0, x1
    6860:	b.eq	6a74 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1698>  // b.none
    6864:	mov	x22, x0
    6868:	mov	x21, x1
    686c:	ldp	x1, x2, [x22, #40]
    6870:	ldr	x23, [sp, #8]
    6874:	sub	x0, x29, #0xc0
    6878:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    687c:	ldp	x1, x2, [x29, #-192]
    6880:	mov	x0, x23
    6884:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    6888:	stur	x0, [x29, #-192]
    688c:	add	x0, sp, #0x118
    6890:	sub	x1, x29, #0xc0
    6894:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6898:	ldr	x8, [x22, #48]
    689c:	add	x0, sp, #0x118
    68a0:	sub	x1, x29, #0xc0
    68a4:	stur	x8, [x29, #-192]
    68a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    68ac:	ldr	w8, [x22, #72]
    68b0:	add	x0, sp, #0x118
    68b4:	sub	x1, x29, #0xc0
    68b8:	stur	x8, [x29, #-192]
    68bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    68c0:	ldr	w8, [x22, #76]
    68c4:	add	x0, sp, #0x118
    68c8:	sub	x1, x29, #0xc0
    68cc:	stur	x8, [x29, #-192]
    68d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    68d4:	add	x1, x22, #0x50
    68d8:	add	x0, sp, #0x118
    68dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    68e0:	add	x1, x22, #0x58
    68e4:	add	x0, sp, #0x118
    68e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    68ec:	ldrb	w8, [x22, #96]
    68f0:	add	x0, sp, #0x118
    68f4:	sub	x1, x29, #0xc0
    68f8:	stur	x8, [x29, #-192]
    68fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6900:	add	x1, x22, #0x68
    6904:	add	x0, sp, #0x118
    6908:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    690c:	ldr	x24, [x22, #136]
    6910:	add	x27, x22, #0x78
    6914:	cmp	x24, x27
    6918:	b.eq	6a48 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x166c>  // b.none
    691c:	ldr	x8, [x24, #32]
    6920:	add	x0, sp, #0x118
    6924:	sub	x1, x29, #0x28
    6928:	stur	x8, [x29, #-40]
    692c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6930:	ldr	w8, [x24, #40]
    6934:	add	x0, sp, #0x118
    6938:	sub	x1, x29, #0xc0
    693c:	stur	x8, [x29, #-192]
    6940:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6944:	ldp	x1, x2, [x24, #48]
    6948:	sub	x0, x29, #0xc0
    694c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6950:	ldp	x1, x2, [x29, #-192]
    6954:	mov	x0, x23
    6958:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    695c:	stur	x0, [x29, #-192]
    6960:	add	x0, sp, #0x118
    6964:	sub	x1, x29, #0xc0
    6968:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    696c:	ldr	x8, [x24, #56]
    6970:	add	x0, sp, #0x118
    6974:	sub	x1, x29, #0xc0
    6978:	stur	x8, [x29, #-192]
    697c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6980:	ldr	x8, [x24, #120]
    6984:	add	x0, sp, #0x118
    6988:	sub	x1, x29, #0xc0
    698c:	stur	x8, [x29, #-192]
    6990:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6994:	ldr	x25, [x24, #104]
    6998:	add	x28, x24, #0x58
    699c:	cmp	x25, x28
    69a0:	b.eq	6a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1658>  // b.none
    69a4:	ldp	x9, x8, [x25, #32]
    69a8:	add	x0, sp, #0x118
    69ac:	sub	x1, x29, #0xc0
    69b0:	sub	x8, x8, x9
    69b4:	asr	x8, x8, #3
    69b8:	stur	x8, [x29, #-192]
    69bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    69c0:	ldr	x8, [sp, #280]
    69c4:	ldr	w9, [sp, #288]
    69c8:	ldp	x2, x3, [x25, #32]
    69cc:	add	x0, sp, #0x118
    69d0:	add	x1, x8, x9, lsl #3
    69d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    69d8:	ldr	w8, [x25, #56]
    69dc:	add	x0, sp, #0x118
    69e0:	sub	x1, x29, #0xc0
    69e4:	stur	x8, [x29, #-192]
    69e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    69ec:	add	x1, x25, #0x40
    69f0:	add	x0, sp, #0x118
    69f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    69f8:	ldr	w8, [x25, #72]
    69fc:	add	x0, sp, #0x118
    6a00:	sub	x1, x29, #0xc0
    6a04:	stur	x8, [x29, #-192]
    6a08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6a0c:	ldr	w8, [x25, #76]
    6a10:	add	x0, sp, #0x118
    6a14:	sub	x1, x29, #0xc0
    6a18:	stur	x8, [x29, #-192]
    6a1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6a20:	mov	x0, x25
    6a24:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6a28:	mov	x25, x0
    6a2c:	cmp	x0, x28
    6a30:	b.ne	69a4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x15c8>  // b.any
    6a34:	mov	x0, x24
    6a38:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6a3c:	mov	x24, x0
    6a40:	cmp	x0, x27
    6a44:	b.ne	691c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1540>  // b.any
    6a48:	ldr	x0, [sp]
    6a4c:	add	x2, sp, #0x118
    6a50:	mov	w1, #0x15                  	// #21
    6a54:	mov	w3, wzr
    6a58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6a5c:	mov	x0, x22
    6a60:	str	wzr, [sp, #288]
    6a64:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6a68:	mov	x22, x0
    6a6c:	cmp	x0, x21
    6a70:	b.ne	686c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1490>  // b.any
    6a74:	mov	x0, x20
    6a78:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6a7c:	mov	x20, x0
    6a80:	cmp	x0, x26
    6a84:	b.ne	684c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1470>  // b.any
    6a88:	ldr	x0, [sp]
    6a8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6a90:	ldr	x1, [sp, #184]
    6a94:	add	x0, sp, #0xa8
    6a98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6a9c:	ldr	x1, [sp, #248]
    6aa0:	add	x0, sp, #0xe8
    6aa4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6aa8:	ldr	x0, [sp, #280]
    6aac:	add	x8, sp, #0x118
    6ab0:	add	x8, x8, #0x10
    6ab4:	cmp	x0, x8
    6ab8:	b.eq	6ac0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x16e4>  // b.none
    6abc:	bl	0 <free>
    6ac0:	ldr	x0, [sp, #816]
    6ac4:	bl	0 <_ZdlPv>
    6ac8:	ldr	x0, [sp, #840]
    6acc:	add	x8, sp, #0x348
    6ad0:	add	x8, x8, #0x10
    6ad4:	cmp	x0, x8
    6ad8:	b.eq	6ae0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1704>  // b.none
    6adc:	bl	0 <free>
    6ae0:	ldr	x0, [sp]
    6ae4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ae8:	ldr	x1, [sp, #48]
    6aec:	mov	x0, x19
    6af0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6af4:	add	sp, sp, #0x660
    6af8:	ldp	x20, x19, [sp, #112]
    6afc:	ldp	x22, x21, [sp, #96]
    6b00:	ldp	x24, x23, [sp, #80]
    6b04:	ldp	x26, x25, [sp, #64]
    6b08:	ldp	x28, x27, [sp, #48]
    6b0c:	ldp	x29, x30, [sp, #32]
    6b10:	ldp	d9, d8, [sp, #16]
    6b14:	ldr	d10, [sp], #128
    6b18:	ret
    6b1c:	mov	x20, x9
    6b20:	add	x21, x9, x8, lsl #3
    6b24:	cmp	x21, x20
    6b28:	b.eq	5b0c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x730>  // b.none
    6b2c:	ldr	x1, [x20], #8
    6b30:	add	x0, sp, #0x118
    6b34:	bl	100b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>
    6b38:	ldr	x8, [x20]
    6b3c:	cbz	x8, 6b48 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x176c>
    6b40:	cmn	x8, #0x8
    6b44:	b.ne	6b24 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x1748>  // b.any
    6b48:	add	x20, x20, #0x8
    6b4c:	b	6b38 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x175c>
    6b50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b5c:	add	x0, x0, #0x0
    6b60:	add	x1, x1, #0x0
    6b64:	add	x3, x3, #0x0
    6b68:	mov	w2, #0x4b3                 	// #1203
    6b6c:	bl	0 <__assert_fail>
    6b70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b7c:	add	x0, x0, #0x0
    6b80:	add	x1, x1, #0x0
    6b84:	add	x3, x3, #0x0
    6b88:	mov	w2, #0x69                  	// #105
    6b8c:	bl	0 <__assert_fail>
    6b90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b98:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b9c:	add	x0, x0, #0x0
    6ba0:	add	x1, x1, #0x0
    6ba4:	add	x3, x3, #0x0
    6ba8:	mov	w2, #0x4cf                 	// #1231
    6bac:	bl	0 <__assert_fail>
    6bb0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bb4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bb8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bbc:	add	x0, x0, #0x0
    6bc0:	add	x1, x1, #0x0
    6bc4:	add	x3, x3, #0x0
    6bc8:	mov	w2, #0x1cb                 	// #459
    6bcc:	bl	0 <__assert_fail>
    6bd0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bd4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bd8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bdc:	add	x0, x0, #0x0
    6be0:	add	x1, x1, #0x0
    6be4:	add	x3, x3, #0x0
    6be8:	mov	w2, #0x1d8                 	// #472
    6bec:	bl	0 <__assert_fail>
    6bf0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bf4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bf8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6bfc:	add	x0, x0, #0x0
    6c00:	add	x1, x1, #0x0
    6c04:	add	x3, x3, #0x0
    6c08:	mov	w2, #0x101c                	// #4124
    6c0c:	bl	0 <__assert_fail>
    6c10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c18:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c1c:	add	x0, x0, #0x0
    6c20:	add	x1, x1, #0x0
    6c24:	add	x3, x3, #0x0
    6c28:	mov	w2, #0x1021                	// #4129
    6c2c:	bl	0 <__assert_fail>
    6c30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c3c:	add	x0, x0, #0x0
    6c40:	add	x1, x1, #0x0
    6c44:	add	x3, x3, #0x0
    6c48:	b	6be8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x180c>

0000000000006c4c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>:
    6c4c:	sub	sp, sp, #0x170
    6c50:	stp	x29, x30, [sp, #288]
    6c54:	str	x28, [sp, #304]
    6c58:	stp	x24, x23, [sp, #320]
    6c5c:	stp	x22, x21, [sp, #336]
    6c60:	stp	x20, x19, [sp, #352]
    6c64:	add	x29, sp, #0x120
    6c68:	sub	x8, x29, #0x10
    6c6c:	mov	x21, x3
    6c70:	mov	w24, w2
    6c74:	mov	x19, x1
    6c78:	mov	x23, x0
    6c7c:	add	x1, x8, #0x10
    6c80:	sub	x0, x29, #0x10
    6c84:	mov	w2, #0x40000               	// #262144
    6c88:	mov	w3, #0x1                   	// #1
    6c8c:	mov	x20, x5
    6c90:	mov	w22, w4
    6c94:	stp	x1, xzr, [x29, #-16]
    6c98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6c9c:	add	x1, x23, #0xf0
    6ca0:	add	x0, sp, #0x8
    6ca4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ca8:	sub	x0, x29, #0x48
    6cac:	add	x1, sp, #0x8
    6cb0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    6cb4:	ldur	w8, [x29, #-28]
    6cb8:	orr	w9, w8, #0x8
    6cbc:	cmp	w9, #0xb
    6cc0:	b.eq	6ce4 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x98>  // b.none
    6cc4:	cmp	w8, #0x1c
    6cc8:	b.hi	6ec0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x274>  // b.pmore
    6ccc:	mov	w9, #0x1                   	// #1
    6cd0:	lsl	w8, w9, w8
    6cd4:	mov	w9, #0x80                  	// #128
    6cd8:	movk	w9, #0x1800, lsl #16
    6cdc:	tst	w8, w9
    6ce0:	b.eq	6ec0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x274>  // b.none
    6ce4:	ldur	x1, [x29, #-16]
    6ce8:	sub	x0, x29, #0x10
    6cec:	add	x3, sp, #0x8
    6cf0:	mov	w2, #0x14                  	// #20
    6cf4:	strb	wzr, [sp, #8]
    6cf8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6cfc:	add	x0, sp, #0x8
    6d00:	sub	x1, x29, #0x10
    6d04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6d08:	and	w2, w24, #0x1
    6d0c:	and	w4, w22, #0x1
    6d10:	add	x0, sp, #0x8
    6d14:	mov	x1, x23
    6d18:	mov	x3, x21
    6d1c:	mov	x5, x20
    6d20:	bl	53c <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    6d24:	add	x0, sp, #0x8
    6d28:	bl	29c <_ZN4llvm13BitcodeWriter11writeSymtabEv>
    6d2c:	add	x0, sp, #0x8
    6d30:	bl	460 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    6d34:	ldur	w8, [x29, #-28]
    6d38:	orr	w9, w8, #0x8
    6d3c:	cmp	w9, #0xb
    6d40:	b.eq	6d64 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x118>  // b.none
    6d44:	cmp	w8, #0x1c
    6d48:	b.hi	6ed0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x284>  // b.pmore
    6d4c:	mov	w9, #0x1                   	// #1
    6d50:	lsl	w8, w9, w8
    6d54:	mov	w9, #0x80                  	// #128
    6d58:	movk	w9, #0x1800, lsl #16
    6d5c:	tst	w8, w9
    6d60:	b.eq	6ed0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x284>  // b.none
    6d64:	ldur	w9, [x29, #-40]
    6d68:	mov	w8, #0x7                   	// #7
    6d6c:	movk	w8, #0x100, lsl #16
    6d70:	cmp	w9, #0x1c
    6d74:	b.gt	6d98 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x14c>
    6d78:	cmp	w9, #0x1
    6d7c:	b.eq	6db8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x16c>  // b.none
    6d80:	cmp	w9, #0x10
    6d84:	b.eq	6dc8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x17c>  // b.none
    6d88:	cmp	w9, #0x11
    6d8c:	b.ne	6dc0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>  // b.any
    6d90:	add	w8, w8, #0xb
    6d94:	b	6dcc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x180>
    6d98:	cmp	w9, #0x1d
    6d9c:	b.eq	6db8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x16c>  // b.none
    6da0:	cmp	w9, #0x20
    6da4:	b.eq	6dcc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x180>  // b.none
    6da8:	cmp	w9, #0x1f
    6dac:	b.ne	6dc0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>  // b.any
    6db0:	mov	w8, #0x7                   	// #7
    6db4:	b	6dcc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x180>
    6db8:	mov	w8, #0xc                   	// #12
    6dbc:	b	6dcc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x180>
    6dc0:	mov	w8, #0xffffffff            	// #-1
    6dc4:	b	6dcc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x180>
    6dc8:	mov	w8, #0x12                  	// #18
    6dcc:	ldur	w10, [x29, #-8]
    6dd0:	cmp	w10, #0x13
    6dd4:	b.ls	6f24 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2d8>  // b.plast
    6dd8:	ldur	x9, [x29, #-16]
    6ddc:	mov	w11, #0xc0de                	// #49374
    6de0:	movk	w11, #0xb17, lsl #16
    6de4:	str	w11, [x9]
    6de8:	ldur	w9, [x29, #-8]
    6dec:	cmp	w9, #0x4
    6df0:	b.ls	6f04 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2b8>  // b.plast
    6df4:	ldur	x9, [x29, #-16]
    6df8:	str	wzr, [x9, #4]
    6dfc:	ldur	w9, [x29, #-8]
    6e00:	cmp	w9, #0x8
    6e04:	b.ls	6f04 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2b8>  // b.plast
    6e08:	ldur	x11, [x29, #-16]
    6e0c:	mov	w9, #0x14                  	// #20
    6e10:	str	w9, [x11, #8]
    6e14:	ldur	w9, [x29, #-8]
    6e18:	cmp	w9, #0xc
    6e1c:	b.ls	6f04 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2b8>  // b.plast
    6e20:	sub	w10, w10, #0x14
    6e24:	cmp	w9, #0x10
    6e28:	str	w10, [x11, #12]
    6e2c:	b.ls	6f04 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2b8>  // b.plast
    6e30:	tst	w9, #0xf
    6e34:	str	w8, [x11, #16]
    6e38:	b.eq	6e5c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x210>  // b.none
    6e3c:	sub	x0, x29, #0x10
    6e40:	add	x1, x29, #0x1c
    6e44:	strb	wzr, [x29, #28]
    6e48:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6e4c:	ldur	w9, [x29, #-8]
    6e50:	tst	w9, #0xf
    6e54:	b.ne	6e3c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1f0>  // b.any
    6e58:	cbz	w9, 6ee4 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x298>
    6e5c:	ldur	x1, [x29, #-16]
    6e60:	mov	w2, w9
    6e64:	mov	x0, x19
    6e68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6e6c:	add	x0, sp, #0x8
    6e70:	bl	fc <_ZN4llvm13BitcodeWriterD1Ev>
    6e74:	ldur	x0, [x29, #-72]
    6e78:	sub	x8, x29, #0x48
    6e7c:	add	x8, x8, #0x10
    6e80:	cmp	x0, x8
    6e84:	b.eq	6e8c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x240>  // b.none
    6e88:	bl	0 <_ZdlPv>
    6e8c:	ldur	x0, [x29, #-16]
    6e90:	sub	x8, x29, #0x10
    6e94:	add	x8, x8, #0x10
    6e98:	cmp	x0, x8
    6e9c:	b.eq	6ea4 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x258>  // b.none
    6ea0:	bl	0 <free>
    6ea4:	ldp	x20, x19, [sp, #352]
    6ea8:	ldp	x22, x21, [sp, #336]
    6eac:	ldp	x24, x23, [sp, #320]
    6eb0:	ldr	x28, [sp, #304]
    6eb4:	ldp	x29, x30, [sp, #288]
    6eb8:	add	sp, sp, #0x170
    6ebc:	ret
    6ec0:	ldur	w8, [x29, #-20]
    6ec4:	cmp	w8, #0x3
    6ec8:	b.eq	6ce4 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x98>  // b.none
    6ecc:	b	6cfc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xb0>
    6ed0:	ldur	w8, [x29, #-20]
    6ed4:	cmp	w8, #0x3
    6ed8:	b.eq	6d64 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x118>  // b.none
    6edc:	ldur	w9, [x29, #-8]
    6ee0:	cbnz	w9, 6e5c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x210>
    6ee4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ee8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6eec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ef0:	add	x0, x0, #0x0
    6ef4:	add	x1, x1, #0x0
    6ef8:	add	x3, x3, #0x0
    6efc:	mov	w2, #0x9e                  	// #158
    6f00:	bl	0 <__assert_fail>
    6f04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f10:	add	x0, x0, #0x0
    6f14:	add	x1, x1, #0x0
    6f18:	add	x3, x3, #0x0
    6f1c:	mov	w2, #0x95                  	// #149
    6f20:	bl	0 <__assert_fail>
    6f24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f30:	add	x0, x0, #0x0
    6f34:	add	x1, x1, #0x0
    6f38:	add	x3, x3, #0x0
    6f3c:	mov	w2, #0x10f1                	// #4337
    6f40:	bl	0 <__assert_fail>

0000000000006f44 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE>:
    6f44:	sub	sp, sp, #0x120
    6f48:	stp	x29, x30, [sp, #224]
    6f4c:	str	x28, [sp, #240]
    6f50:	stp	x22, x21, [sp, #256]
    6f54:	stp	x20, x19, [sp, #272]
    6f58:	add	x29, sp, #0xe0
    6f5c:	sub	x8, x29, #0x10
    6f60:	add	x19, x8, #0x10
    6f64:	mov	x21, x2
    6f68:	mov	x20, x1
    6f6c:	mov	x22, x0
    6f70:	sub	x0, x29, #0x10
    6f74:	mov	w2, #0x40000               	// #262144
    6f78:	mov	w3, #0x1                   	// #1
    6f7c:	mov	x1, x19
    6f80:	stp	x19, xzr, [x29, #-16]
    6f84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f88:	mov	x0, sp
    6f8c:	sub	x1, x29, #0x10
    6f90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f94:	mov	x0, sp
    6f98:	mov	x1, x22
    6f9c:	mov	x2, x21
    6fa0:	bl	53dc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE>
    6fa4:	mov	x0, sp
    6fa8:	bl	460 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    6fac:	ldur	w2, [x29, #-8]
    6fb0:	cbz	w2, 6ff0 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE+0xac>
    6fb4:	ldur	x1, [x29, #-16]
    6fb8:	mov	x0, x20
    6fbc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6fc0:	mov	x0, sp
    6fc4:	bl	fc <_ZN4llvm13BitcodeWriterD1Ev>
    6fc8:	ldur	x0, [x29, #-16]
    6fcc:	cmp	x0, x19
    6fd0:	b.eq	6fd8 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE+0x94>  // b.none
    6fd4:	bl	0 <free>
    6fd8:	ldp	x20, x19, [sp, #272]
    6fdc:	ldp	x22, x21, [sp, #256]
    6fe0:	ldr	x28, [sp, #240]
    6fe4:	ldp	x29, x30, [sp, #224]
    6fe8:	add	sp, sp, #0x120
    6fec:	ret
    6ff0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ff4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ff8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ffc:	add	x0, x0, #0x0
    7000:	add	x1, x1, #0x0
    7004:	add	x3, x3, #0x0
    7008:	mov	w2, #0x9e                  	// #158
    700c:	bl	0 <__assert_fail>

0000000000007010 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>:
    7010:	stp	x29, x30, [sp, #-64]!
    7014:	str	x28, [sp, #16]
    7018:	stp	x22, x21, [sp, #32]
    701c:	stp	x20, x19, [sp, #48]
    7020:	mov	x29, sp
    7024:	sub	sp, sp, #0x3d0
    7028:	ldrb	w8, [x0, #176]
    702c:	cbnz	w8, 76e0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6d0>
    7030:	ldr	x8, [x1, #168]
    7034:	mov	x21, x1
    7038:	cbnz	x8, 7700 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6f0>
    703c:	str	x21, [sp, #8]
    7040:	ldp	x1, x8, [x0, #192]
    7044:	mov	x19, x3
    7048:	mov	x20, x2
    704c:	mov	x22, x0
    7050:	cmp	x1, x8
    7054:	b.eq	706c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x5c>  // b.none
    7058:	str	x21, [x1]
    705c:	ldr	x8, [x22, #192]
    7060:	add	x8, x8, #0x8
    7064:	str	x8, [x22, #192]
    7068:	b	7078 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x68>
    706c:	add	x0, x22, #0xb8
    7070:	add	x2, sp, #0x8
    7074:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7078:	ldr	x3, [x22, #8]
    707c:	add	x2, x22, #0x10
    7080:	add	x0, sp, #0x8
    7084:	mov	x1, x21
    7088:	mov	w4, wzr
    708c:	mov	x5, x20
    7090:	bl	7f60 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>
    7094:	ldr	x0, [sp, #8]
    7098:	mov	w1, #0x8                   	// #8
    709c:	mov	w2, #0x3                   	// #3
    70a0:	str	x19, [sp, #664]
    70a4:	mov	w19, #0x8                   	// #8
    70a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    70ac:	ldr	x0, [sp, #8]
    70b0:	mov	w20, #0x2                   	// #2
    70b4:	sub	x8, x29, #0x10
    70b8:	mov	w9, #0x1                   	// #1
    70bc:	add	x2, sp, #0x2b0
    70c0:	mov	w1, #0x1                   	// #1
    70c4:	mov	w3, wzr
    70c8:	stur	x20, [x29, #-16]
    70cc:	str	x8, [sp, #688]
    70d0:	str	x9, [sp, #696]
    70d4:	add	x21, sp, #0x2b0
    70d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    70dc:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    70e0:	ldr	d0, [x8]
    70e4:	ldr	x8, [sp, #24]
    70e8:	add	x9, x21, #0x10
    70ec:	str	x9, [sp, #688]
    70f0:	str	d0, [sp, #696]
    70f4:	ldp	x0, x1, [x8, #208]
    70f8:	bl	993c <_ZL17getStringEncodingN4llvm9StringRefE>
    70fc:	stur	x19, [x29, #-16]
    7100:	sturb	w20, [x29, #-8]
    7104:	cbz	w0, 711c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x10c>
    7108:	cmp	w0, #0x1
    710c:	b.ne	7128 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x118>  // b.any
    7110:	mov	w19, #0x2                   	// #2
    7114:	mov	w8, #0x7                   	// #7
    7118:	b	7120 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x110>
    711c:	mov	x8, xzr
    7120:	stur	x8, [x29, #-16]
    7124:	sturb	w19, [x29, #-8]
    7128:	mov	w0, #0x220                 	// #544
    712c:	bl	0 <_Znwm>
    7130:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7134:	ldr	x8, [x8]
    7138:	movi	v0.2s, #0x1
    713c:	add	x20, x0, #0x20
    7140:	mov	x19, x0
    7144:	add	x8, x8, #0x10
    7148:	str	d0, [x0, #8]
    714c:	str	x8, [x0]
    7150:	mov	w2, #0x200                 	// #512
    7154:	mov	x0, x20
    7158:	mov	w1, wzr
    715c:	bl	0 <memset>
    7160:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7164:	ldrb	w10, [sp, #680]
    7168:	ldr	d0, [x8]
    716c:	mov	x21, x19
    7170:	str	x20, [x21, #16]!
    7174:	mov	w9, #0x10                  	// #16
    7178:	orr	w8, w10, #0x1
    717c:	add	x1, sp, #0x2a0
    7180:	mov	x0, x21
    7184:	str	x9, [sp, #672]
    7188:	str	d0, [x19, #24]
    718c:	strb	w8, [sp, #680]
    7190:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7194:	ldrb	w8, [sp, #680]
    7198:	add	x1, sp, #0x2a0
    719c:	mov	x0, x21
    71a0:	str	xzr, [sp, #672]
    71a4:	and	w8, w8, #0xf0
    71a8:	orr	w8, w8, #0x6
    71ac:	strb	w8, [sp, #680]
    71b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    71b4:	sub	x1, x29, #0x10
    71b8:	mov	x0, x21
    71bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    71c0:	ldr	x20, [sp, #8]
    71c4:	mov	x1, x21
    71c8:	str	x21, [sp, #672]
    71cc:	str	x19, [sp, #680]
    71d0:	mov	x0, x20
    71d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    71d8:	add	x0, x20, #0x18
    71dc:	add	x1, sp, #0x2a0
    71e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    71e4:	ldp	x9, x8, [x20, #24]
    71e8:	ldr	x0, [sp, #680]
    71ec:	sub	x8, x8, x9
    71f0:	lsr	x8, x8, #4
    71f4:	add	w19, w8, #0x3
    71f8:	cbz	x0, 7200 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1f0>
    71fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7200:	ldr	x8, [sp, #24]
    7204:	ldr	x20, [x8, #216]
    7208:	cbz	x20, 722c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x21c>
    720c:	ldr	x21, [x8, #208]
    7210:	ldrb	w8, [x21], #1
    7214:	add	x0, sp, #0x2b0
    7218:	add	x1, x29, #0x1c
    721c:	str	w8, [x29, #28]
    7220:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7224:	subs	x20, x20, #0x1
    7228:	b.ne	7210 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x200>  // b.any
    722c:	ldr	x0, [sp, #8]
    7230:	add	x2, sp, #0x2b0
    7234:	mov	w1, #0x10                  	// #16
    7238:	mov	w3, w19
    723c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7240:	ldr	x8, [sp, #24]
    7244:	str	wzr, [sp, #696]
    7248:	ldr	x21, [x8, #16]
    724c:	add	x22, x8, #0x8
    7250:	cmp	x22, x21
    7254:	b.eq	7334 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x324>  // b.none
    7258:	ldrb	w8, [x21]
    725c:	tbnz	w8, #2, 766c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x65c>
    7260:	ldr	x19, [sp, #16]
    7264:	sub	x8, x21, #0x38
    7268:	cmp	x21, #0x0
    726c:	csel	x20, xzr, x8, eq  // eq = none
    7270:	mov	x0, x20
    7274:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7278:	mov	x2, x0
    727c:	mov	x3, x1
    7280:	sub	x0, x29, #0x10
    7284:	mov	x1, x2
    7288:	mov	x2, x3
    728c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7290:	ldp	x1, x2, [x29, #-16]
    7294:	mov	x0, x19
    7298:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    729c:	stur	w0, [x29, #-16]
    72a0:	add	x0, sp, #0x2b0
    72a4:	sub	x1, x29, #0x10
    72a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    72ac:	mov	x0, x20
    72b0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    72b4:	stur	w1, [x29, #-16]
    72b8:	add	x0, sp, #0x2b0
    72bc:	sub	x1, x29, #0x10
    72c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    72c4:	add	x0, sp, #0x2b0
    72c8:	sub	x1, x29, #0x10
    72cc:	stur	wzr, [x29, #-16]
    72d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    72d4:	add	x0, sp, #0x2b0
    72d8:	sub	x1, x29, #0x10
    72dc:	stur	wzr, [x29, #-16]
    72e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    72e4:	add	x0, sp, #0x2b0
    72e8:	sub	x1, x29, #0x10
    72ec:	stur	wzr, [x29, #-16]
    72f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    72f4:	mov	x0, x20
    72f8:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    72fc:	stur	w0, [x29, #-16]
    7300:	add	x0, sp, #0x2b0
    7304:	sub	x1, x29, #0x10
    7308:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    730c:	ldr	x0, [sp, #8]
    7310:	add	x2, sp, #0x2b0
    7314:	mov	w1, #0x7                   	// #7
    7318:	mov	w3, wzr
    731c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7320:	str	wzr, [sp, #696]
    7324:	ldr	x21, [x21, #8]
    7328:	cmp	x22, x21
    732c:	b.ne	7258 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x248>  // b.any
    7330:	ldr	x8, [sp, #24]
    7334:	ldr	x21, [x8, #32]
    7338:	add	x22, x8, #0x18
    733c:	cmp	x22, x21
    7340:	b.eq	7420 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x410>  // b.none
    7344:	ldrb	w8, [x21]
    7348:	tbnz	w8, #2, 7688 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x678>
    734c:	ldr	x19, [sp, #16]
    7350:	sub	x8, x21, #0x38
    7354:	cmp	x21, #0x0
    7358:	csel	x20, xzr, x8, eq  // eq = none
    735c:	mov	x0, x20
    7360:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7364:	mov	x2, x0
    7368:	mov	x3, x1
    736c:	sub	x0, x29, #0x10
    7370:	mov	x1, x2
    7374:	mov	x2, x3
    7378:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    737c:	ldp	x1, x2, [x29, #-16]
    7380:	mov	x0, x19
    7384:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    7388:	stur	w0, [x29, #-16]
    738c:	add	x0, sp, #0x2b0
    7390:	sub	x1, x29, #0x10
    7394:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7398:	mov	x0, x20
    739c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    73a0:	stur	w1, [x29, #-16]
    73a4:	add	x0, sp, #0x2b0
    73a8:	sub	x1, x29, #0x10
    73ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    73b0:	add	x0, sp, #0x2b0
    73b4:	sub	x1, x29, #0x10
    73b8:	stur	wzr, [x29, #-16]
    73bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    73c0:	add	x0, sp, #0x2b0
    73c4:	sub	x1, x29, #0x10
    73c8:	stur	wzr, [x29, #-16]
    73cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    73d0:	add	x0, sp, #0x2b0
    73d4:	sub	x1, x29, #0x10
    73d8:	stur	wzr, [x29, #-16]
    73dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    73e0:	mov	x0, x20
    73e4:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    73e8:	stur	w0, [x29, #-16]
    73ec:	add	x0, sp, #0x2b0
    73f0:	sub	x1, x29, #0x10
    73f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    73f8:	ldr	x0, [sp, #8]
    73fc:	add	x2, sp, #0x2b0
    7400:	mov	w1, #0x8                   	// #8
    7404:	mov	w3, wzr
    7408:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    740c:	str	wzr, [sp, #696]
    7410:	ldr	x21, [x21, #8]
    7414:	cmp	x22, x21
    7418:	b.ne	7344 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x334>  // b.any
    741c:	ldr	x8, [sp, #24]
    7420:	ldr	x21, [x8, #48]
    7424:	add	x22, x8, #0x28
    7428:	cmp	x22, x21
    742c:	b.eq	750c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x4fc>  // b.none
    7430:	ldrb	w8, [x21]
    7434:	tbnz	w8, #2, 76a4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x694>
    7438:	ldr	x19, [sp, #16]
    743c:	sub	x8, x21, #0x30
    7440:	cmp	x21, #0x0
    7444:	csel	x20, xzr, x8, eq  // eq = none
    7448:	mov	x0, x20
    744c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7450:	mov	x2, x0
    7454:	mov	x3, x1
    7458:	sub	x0, x29, #0x10
    745c:	mov	x1, x2
    7460:	mov	x2, x3
    7464:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7468:	ldp	x1, x2, [x29, #-16]
    746c:	mov	x0, x19
    7470:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    7474:	stur	w0, [x29, #-16]
    7478:	add	x0, sp, #0x2b0
    747c:	sub	x1, x29, #0x10
    7480:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7484:	mov	x0, x20
    7488:	bl	0 <_ZNK4llvm5Value7getNameEv>
    748c:	stur	w1, [x29, #-16]
    7490:	add	x0, sp, #0x2b0
    7494:	sub	x1, x29, #0x10
    7498:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    749c:	add	x0, sp, #0x2b0
    74a0:	sub	x1, x29, #0x10
    74a4:	stur	wzr, [x29, #-16]
    74a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74ac:	add	x0, sp, #0x2b0
    74b0:	sub	x1, x29, #0x10
    74b4:	stur	wzr, [x29, #-16]
    74b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74bc:	add	x0, sp, #0x2b0
    74c0:	sub	x1, x29, #0x10
    74c4:	stur	wzr, [x29, #-16]
    74c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74cc:	mov	x0, x20
    74d0:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    74d4:	stur	w0, [x29, #-16]
    74d8:	add	x0, sp, #0x2b0
    74dc:	sub	x1, x29, #0x10
    74e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74e4:	ldr	x0, [sp, #8]
    74e8:	add	x2, sp, #0x2b0
    74ec:	mov	w1, #0xe                   	// #14
    74f0:	mov	w3, wzr
    74f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74f8:	str	wzr, [sp, #696]
    74fc:	ldr	x21, [x21, #8]
    7500:	cmp	x22, x21
    7504:	b.ne	7430 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x420>  // b.any
    7508:	ldr	x8, [sp, #24]
    750c:	ldr	x21, [x8, #64]
    7510:	add	x22, x8, #0x38
    7514:	cmp	x22, x21
    7518:	b.eq	75f0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x5e0>  // b.none
    751c:	ldrb	w8, [x21]
    7520:	tbnz	w8, #2, 76c0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6b0>
    7524:	ldr	x19, [sp, #16]
    7528:	sub	x8, x21, #0x30
    752c:	cmp	x21, #0x0
    7530:	csel	x20, xzr, x8, eq  // eq = none
    7534:	mov	x0, x20
    7538:	bl	0 <_ZNK4llvm5Value7getNameEv>
    753c:	mov	x2, x0
    7540:	mov	x3, x1
    7544:	sub	x0, x29, #0x10
    7548:	mov	x1, x2
    754c:	mov	x2, x3
    7550:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7554:	ldp	x1, x2, [x29, #-16]
    7558:	mov	x0, x19
    755c:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    7560:	stur	w0, [x29, #-16]
    7564:	add	x0, sp, #0x2b0
    7568:	sub	x1, x29, #0x10
    756c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7570:	mov	x0, x20
    7574:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7578:	stur	w1, [x29, #-16]
    757c:	add	x0, sp, #0x2b0
    7580:	sub	x1, x29, #0x10
    7584:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7588:	add	x0, sp, #0x2b0
    758c:	sub	x1, x29, #0x10
    7590:	stur	wzr, [x29, #-16]
    7594:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7598:	add	x0, sp, #0x2b0
    759c:	sub	x1, x29, #0x10
    75a0:	stur	wzr, [x29, #-16]
    75a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75a8:	add	x0, sp, #0x2b0
    75ac:	sub	x1, x29, #0x10
    75b0:	stur	wzr, [x29, #-16]
    75b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75b8:	mov	x0, x20
    75bc:	bl	99ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>
    75c0:	stur	w0, [x29, #-16]
    75c4:	add	x0, sp, #0x2b0
    75c8:	sub	x1, x29, #0x10
    75cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75d0:	ldr	x0, [sp, #8]
    75d4:	add	x2, sp, #0x2b0
    75d8:	mov	w1, #0x12                  	// #18
    75dc:	mov	w3, wzr
    75e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75e4:	str	wzr, [sp, #696]
    75e8:	ldr	x21, [x21, #8]
    75ec:	b	7514 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x504>
    75f0:	ldr	x0, [sp, #688]
    75f4:	add	x8, sp, #0x2b0
    75f8:	add	x8, x8, #0x10
    75fc:	cmp	x0, x8
    7600:	b.eq	7608 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x5f8>  // b.none
    7604:	bl	0 <free>
    7608:	add	x0, sp, #0x8
    760c:	add	x19, sp, #0x8
    7610:	bl	8264 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>
    7614:	ldr	x8, [sp, #664]
    7618:	ldr	x0, [sp, #8]
    761c:	mov	w9, #0x5                   	// #5
    7620:	add	x2, sp, #0x2b0
    7624:	mov	w1, #0x11                  	// #17
    7628:	mov	w3, wzr
    762c:	str	x8, [sp, #688]
    7630:	str	x9, [sp, #696]
    7634:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7638:	ldr	x0, [sp, #8]
    763c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7640:	ldr	x1, [sp, #616]
    7644:	add	x0, x19, #0x250
    7648:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    764c:	add	x0, x19, #0x18
    7650:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7654:	add	sp, sp, #0x3d0
    7658:	ldp	x20, x19, [sp, #48]
    765c:	ldp	x22, x21, [sp, #32]
    7660:	ldr	x28, [sp, #16]
    7664:	ldp	x29, x30, [sp], #64
    7668:	ret
    766c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7670:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7674:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7678:	add	x0, x0, #0x0
    767c:	add	x1, x1, #0x0
    7680:	add	x3, x3, #0x0
    7684:	b	76d8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6c8>
    7688:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    768c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7690:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7694:	add	x0, x0, #0x0
    7698:	add	x1, x1, #0x0
    769c:	add	x3, x3, #0x0
    76a0:	b	76d8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6c8>
    76a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76b0:	add	x0, x0, #0x0
    76b4:	add	x1, x1, #0x0
    76b8:	add	x3, x3, #0x0
    76bc:	b	76d8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6c8>
    76c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76cc:	add	x0, x0, #0x0
    76d0:	add	x1, x1, #0x0
    76d4:	add	x3, x3, #0x0
    76d8:	mov	w2, #0x8b                  	// #139
    76dc:	bl	0 <__assert_fail>
    76e0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76e4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76e8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76ec:	add	x0, x0, #0x0
    76f0:	add	x1, x1, #0x0
    76f4:	add	x3, x3, #0x0
    76f8:	mov	w2, #0x122b                	// #4651
    76fc:	bl	0 <__assert_fail>
    7700:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7704:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7708:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    770c:	add	x0, x0, #0x0
    7710:	add	x1, x1, #0x0
    7714:	add	x3, x3, #0x0
    7718:	mov	w2, #0x1231                	// #4657
    771c:	bl	0 <__assert_fail>

0000000000007720 <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>:
    7720:	sub	sp, sp, #0x120
    7724:	stp	x29, x30, [sp, #224]
    7728:	stp	x28, x23, [sp, #240]
    772c:	stp	x22, x21, [sp, #256]
    7730:	stp	x20, x19, [sp, #272]
    7734:	add	x29, sp, #0xe0
    7738:	sub	x8, x29, #0x10
    773c:	add	x19, x8, #0x10
    7740:	mov	x21, x3
    7744:	mov	x22, x2
    7748:	mov	x20, x1
    774c:	mov	x23, x0
    7750:	sub	x0, x29, #0x10
    7754:	mov	w2, #0x40000               	// #262144
    7758:	mov	w3, #0x1                   	// #1
    775c:	mov	x1, x19
    7760:	stp	x19, xzr, [x29, #-16]
    7764:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7768:	mov	x0, sp
    776c:	sub	x1, x29, #0x10
    7770:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7774:	mov	x0, sp
    7778:	mov	x1, x23
    777c:	mov	x2, x22
    7780:	mov	x3, x21
    7784:	bl	7010 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>
    7788:	mov	x0, sp
    778c:	bl	29c <_ZN4llvm13BitcodeWriter11writeSymtabEv>
    7790:	mov	x0, sp
    7794:	bl	460 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    7798:	ldur	w2, [x29, #-8]
    779c:	cbz	w2, 77dc <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xbc>
    77a0:	ldur	x1, [x29, #-16]
    77a4:	mov	x0, x20
    77a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    77ac:	mov	x0, sp
    77b0:	bl	fc <_ZN4llvm13BitcodeWriterD1Ev>
    77b4:	ldur	x0, [x29, #-16]
    77b8:	cmp	x0, x19
    77bc:	b.eq	77c4 <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa4>  // b.none
    77c0:	bl	0 <free>
    77c4:	ldp	x20, x19, [sp, #272]
    77c8:	ldp	x22, x21, [sp, #256]
    77cc:	ldp	x28, x23, [sp, #240]
    77d0:	ldp	x29, x30, [sp, #224]
    77d4:	add	sp, sp, #0x120
    77d8:	ret
    77dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    77e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    77e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    77e8:	add	x0, x0, #0x0
    77ec:	add	x1, x1, #0x0
    77f0:	add	x3, x3, #0x0
    77f4:	mov	w2, #0x9e                  	// #158
    77f8:	bl	0 <__assert_fail>

00000000000077fc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE>:
    77fc:	sub	sp, sp, #0x190
    7800:	stp	x29, x30, [sp, #304]
    7804:	stp	x28, x27, [sp, #320]
    7808:	stp	x26, x25, [sp, #336]
    780c:	stp	x24, x23, [sp, #352]
    7810:	stp	x22, x21, [sp, #368]
    7814:	stp	x20, x19, [sp, #384]
    7818:	add	x29, sp, #0x130
    781c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7820:	ldr	d0, [x9]
    7824:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7828:	sub	x8, x29, #0x28
    782c:	sub	x21, x29, #0x70
    7830:	stur	d0, [x29, #-32]
    7834:	ldr	d0, [x9]
    7838:	add	x8, x8, #0x10
    783c:	add	x10, x21, #0x28
    7840:	stp	x1, x4, [sp, #32]
    7844:	stur	x8, [x29, #-40]
    7848:	stp	xzr, x10, [x29, #-112]
    784c:	stur	x10, [x29, #-96]
    7850:	stur	d0, [x29, #-88]
    7854:	stur	wzr, [x29, #-80]
    7858:	mov	x19, x0
    785c:	ldr	x0, [x0]
    7860:	str	w3, [sp, #52]
    7864:	mov	w24, w2
    7868:	add	x22, x21, #0x18
    786c:	add	x23, x21, #0x1c
    7870:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    7874:	mov	w1, wzr
    7878:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    787c:	mov	x20, x0
    7880:	sub	x1, x29, #0x70
    7884:	mov	w2, #0x1                   	// #1
    7888:	mov	x0, x19
    788c:	bl	0 <_ZN4llvm26collectUsedGlobalVariablesERKNS_6ModuleERNS_15SmallPtrSetImplIPNS_11GlobalValueEEEb>
    7890:	ldp	x9, x8, [x29, #-104]
    7894:	mov	x25, x0
    7898:	add	x0, sp, #0x68
    789c:	cmp	x8, x9
    78a0:	csel	x9, x23, x22, eq  // eq = none
    78a4:	ldr	w9, [x9]
    78a8:	add	x9, x8, x9, lsl #3
    78ac:	stp	x8, x9, [sp, #104]
    78b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78b4:	ldp	x10, x8, [x29, #-104]
    78b8:	ldur	x9, [x29, #-112]
    78bc:	add	x0, sp, #0x38
    78c0:	cmp	x8, x10
    78c4:	stp	x21, x9, [sp, #120]
    78c8:	csel	x9, x23, x22, eq  // eq = none
    78cc:	ldr	w9, [x9]
    78d0:	add	x8, x8, x9, lsl #3
    78d4:	stp	x8, x8, [sp, #56]
    78d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78dc:	ldr	x8, [sp, #104]
    78e0:	ldr	x9, [sp, #56]
    78e4:	ldur	x10, [x29, #-112]
    78e8:	cmp	x8, x9
    78ec:	stp	x21, x10, [sp, #72]
    78f0:	b.eq	79e4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1e8>  // b.none
    78f4:	mov	x27, #0x6c6c                	// #27756
    78f8:	mov	x28, #0x6465                	// #25701
    78fc:	mov	x22, #0x6c6c                	// #27756
    7900:	movk	x27, #0x6d76, lsl #16
    7904:	movk	x28, #0x6564, lsl #16
    7908:	movk	x22, #0x6d76, lsl #16
    790c:	movk	x27, #0x652e, lsl #32
    7910:	movk	x28, #0x2e64, lsl #32
    7914:	mov	w21, #0x7564                	// #30052
    7918:	movk	x22, #0x632e, lsl #32
    791c:	mov	w23, #0x696c                	// #26988
    7920:	movk	x27, #0x626d, lsl #48
    7924:	movk	x28, #0x6f6d, lsl #48
    7928:	movk	w21, #0x656c, lsl #16
    792c:	movk	x22, #0x646d, lsl #48
    7930:	movk	w23, #0x656e, lsl #16
    7934:	add	x0, sp, #0x68
    7938:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    793c:	mov	x26, x0
    7940:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7944:	cmp	x1, #0x14
    7948:	b.ne	796c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x170>  // b.any
    794c:	ldp	x8, x9, [x0]
    7950:	ldr	w10, [x0, #16]
    7954:	eor	x8, x8, x27
    7958:	eor	x9, x9, x28
    795c:	eor	x10, x10, x21
    7960:	orr	x8, x8, x9
    7964:	orr	x8, x8, x10
    7968:	cbz	x8, 79b0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1b4>
    796c:	mov	x0, x26
    7970:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7974:	cmp	x1, #0xc
    7978:	b.ne	7994 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x198>  // b.any
    797c:	ldr	x8, [x0]
    7980:	ldr	w9, [x0, #8]
    7984:	eor	x8, x8, x22
    7988:	eor	x9, x9, x23
    798c:	orr	x8, x8, x9
    7990:	cbz	x8, 79b0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1b4>
    7994:	mov	x0, x26
    7998:	mov	x1, x20
    799c:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    79a0:	stur	x0, [x29, #-144]
    79a4:	sub	x0, x29, #0x28
    79a8:	sub	x1, x29, #0x90
    79ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    79b0:	ldp	x8, x9, [sp, #120]
    79b4:	ldr	x8, [x8]
    79b8:	cmp	x8, x9
    79bc:	b.ne	7ea0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6a4>  // b.any
    79c0:	ldr	x8, [sp, #104]
    79c4:	add	x0, sp, #0x68
    79c8:	add	x8, x8, #0x8
    79cc:	str	x8, [sp, #104]
    79d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    79d4:	ldr	x8, [sp, #104]
    79d8:	ldr	x9, [sp, #56]
    79dc:	cmp	x8, x9
    79e0:	b.ne	7934 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x138>  // b.any
    79e4:	cbz	x25, 79f0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1f4>
    79e8:	mov	x0, x25
    79ec:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    79f0:	sub	x8, x29, #0x90
    79f4:	add	x27, x8, #0x10
    79f8:	add	x1, x19, #0xf0
    79fc:	add	x0, sp, #0x38
    7a00:	sturb	wzr, [x29, #-128]
    7a04:	stp	x27, xzr, [x29, #-144]
    7a08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7a0c:	add	x0, sp, #0x68
    7a10:	add	x1, sp, #0x38
    7a14:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    7a18:	mov	x26, xzr
    7a1c:	mov	x25, xzr
    7a20:	tbz	w24, #0, 7b28 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x32c>
    7a24:	ldr	x8, [sp, #32]
    7a28:	ldr	x26, [x8, #8]
    7a2c:	cbz	x26, 7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>
    7a30:	ldr	x25, [x8]
    7a34:	ldrb	w8, [x25]
    7a38:	cmp	w8, #0x42
    7a3c:	b.eq	7a70 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x274>  // b.none
    7a40:	cmp	w8, #0xde
    7a44:	b.ne	7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>  // b.any
    7a48:	ldrb	w8, [x25, #1]
    7a4c:	cmp	w8, #0xc0
    7a50:	b.ne	7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>  // b.any
    7a54:	ldrb	w8, [x25, #2]
    7a58:	cmp	w8, #0x17
    7a5c:	b.ne	7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>  // b.any
    7a60:	ldrb	w8, [x25, #3]
    7a64:	cmp	w8, #0xb
    7a68:	b.ne	7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>  // b.any
    7a6c:	b	7b28 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x32c>
    7a70:	ldrb	w8, [x25, #1]
    7a74:	cmp	w8, #0x43
    7a78:	b.ne	7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>  // b.any
    7a7c:	ldrb	w8, [x25, #2]
    7a80:	cmp	w8, #0xc0
    7a84:	b.ne	7a94 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x298>  // b.any
    7a88:	ldrb	w8, [x25, #3]
    7a8c:	cmp	w8, #0xde
    7a90:	b.eq	7b28 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x32c>  // b.none
    7a94:	stp	xzr, xzr, [sp, #72]
    7a98:	adrp	x9, 0 <_ZTVN4llvm18raw_string_ostreamE>
    7a9c:	ldr	x9, [x9]
    7aa0:	mov	w8, #0x1                   	// #1
    7aa4:	sub	x10, x29, #0x90
    7aa8:	str	w8, [sp, #88]
    7aac:	add	x8, x9, #0x10
    7ab0:	add	x1, sp, #0x38
    7ab4:	mov	w2, #0x1                   	// #1
    7ab8:	mov	x0, x19
    7abc:	mov	x3, xzr
    7ac0:	mov	w4, wzr
    7ac4:	mov	x5, xzr
    7ac8:	stp	x8, xzr, [sp, #56]
    7acc:	str	x10, [sp, #96]
    7ad0:	bl	6c4c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    7ad4:	ldr	x8, [sp, #80]
    7ad8:	ldr	x9, [sp, #64]
    7adc:	cmp	x8, x9
    7ae0:	b.eq	7b14 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x318>  // b.none
    7ae4:	add	x0, sp, #0x38
    7ae8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    7aec:	ldr	x8, [sp, #96]
    7af0:	ldr	x9, [sp, #80]
    7af4:	ldr	x10, [sp, #64]
    7af8:	ldr	x25, [x8]
    7afc:	cmp	x9, x10
    7b00:	b.eq	7b1c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x320>  // b.none
    7b04:	add	x0, sp, #0x38
    7b08:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    7b0c:	ldr	x8, [sp, #96]
    7b10:	b	7b1c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x320>
    7b14:	ldr	x8, [sp, #96]
    7b18:	ldr	x25, [x8]
    7b1c:	ldr	x26, [x8, #8]
    7b20:	add	x0, sp, #0x38
    7b24:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    7b28:	ldr	x0, [x19]
    7b2c:	mov	x1, x25
    7b30:	mov	x2, x26
    7b34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b38:	mov	x24, x0
    7b3c:	mov	w0, #0x58                  	// #88
    7b40:	mov	w1, #0x1                   	// #1
    7b44:	bl	0 <_ZN4llvm4UsernwEmj>
    7b48:	ldr	x25, [x24]
    7b4c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b50:	mov	x23, x0
    7b54:	add	x1, x1, #0x0
    7b58:	add	x0, sp, #0x38
    7b5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b60:	add	x6, sp, #0x38
    7b64:	mov	w3, #0x1                   	// #1
    7b68:	mov	w4, #0x8                   	// #8
    7b6c:	mov	x0, x23
    7b70:	mov	x1, x19
    7b74:	mov	x2, x25
    7b78:	mov	x5, x24
    7b7c:	mov	x7, xzr
    7b80:	strb	wzr, [sp, #16]
    7b84:	str	wzr, [sp, #8]
    7b88:	str	wzr, [sp]
    7b8c:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7b90:	ldr	w8, [sp, #156]
    7b94:	cmp	w8, #0x5
    7b98:	b.hi	7ee0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6e4>  // b.pmore
    7b9c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ba0:	add	x9, x9, #0x0
    7ba4:	adr	x10, 7bbc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x3c0>
    7ba8:	ldrb	w11, [x9, x8]
    7bac:	add	x10, x10, x11, lsl #2
    7bb0:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7bb4:	add	x24, x24, #0x0
    7bb8:	br	x10
    7bbc:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7bc0:	add	x24, x24, #0x0
    7bc4:	mov	x0, x24
    7bc8:	bl	0 <strlen>
    7bcc:	mov	x2, x0
    7bd0:	mov	x0, x23
    7bd4:	mov	x1, x24
    7bd8:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7bdc:	mov	x0, x23
    7be0:	mov	x1, x20
    7be4:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    7be8:	str	x0, [sp, #56]
    7bec:	sub	x0, x29, #0x28
    7bf0:	add	x1, sp, #0x38
    7bf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7bf8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7bfc:	add	x1, x1, #0x0
    7c00:	mov	w2, #0x14                  	// #20
    7c04:	mov	w3, #0x1                   	// #1
    7c08:	mov	x0, x19
    7c0c:	bl	0 <_ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb>
    7c10:	cbz	x0, 7c44 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x448>
    7c14:	mov	x24, x0
    7c18:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    7c1c:	ldr	x8, [x24, #8]
    7c20:	cbz	x8, 7ec0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6c4>
    7c24:	ldr	x8, [x8, #8]
    7c28:	cbnz	x8, 7ec0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6c4>
    7c2c:	mov	x0, x23
    7c30:	mov	x1, x24
    7c34:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    7c38:	mov	x0, x24
    7c3c:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7c40:	b	7c60 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x464>
    7c44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7c48:	add	x1, x1, #0x0
    7c4c:	add	x0, sp, #0x38
    7c50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7c54:	add	x1, sp, #0x38
    7c58:	mov	x0, x23
    7c5c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    7c60:	ldr	w8, [sp, #52]
    7c64:	tbz	w8, #0, 7da4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x5a8>
    7c68:	ldr	x8, [sp, #40]
    7c6c:	ldr	x0, [x19]
    7c70:	ldp	x1, x8, [x8]
    7c74:	sub	x2, x8, x1
    7c78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7c7c:	mov	x22, x0
    7c80:	mov	w0, #0x58                  	// #88
    7c84:	mov	w1, #0x1                   	// #1
    7c88:	bl	0 <_ZN4llvm4UsernwEmj>
    7c8c:	ldr	x23, [x22]
    7c90:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7c94:	mov	x21, x0
    7c98:	add	x1, x1, #0x0
    7c9c:	add	x0, sp, #0x38
    7ca0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ca4:	add	x6, sp, #0x38
    7ca8:	mov	w3, #0x1                   	// #1
    7cac:	mov	w4, #0x8                   	// #8
    7cb0:	mov	x0, x21
    7cb4:	mov	x1, x19
    7cb8:	mov	x2, x23
    7cbc:	mov	x5, x22
    7cc0:	mov	x7, xzr
    7cc4:	strb	wzr, [sp, #16]
    7cc8:	str	wzr, [sp, #8]
    7ccc:	str	wzr, [sp]
    7cd0:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7cd4:	ldr	w8, [sp, #156]
    7cd8:	cmp	w8, #0x5
    7cdc:	b.hi	7f30 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x734>  // b.pmore
    7ce0:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ce4:	add	x9, x9, #0x0
    7ce8:	adr	x10, 7d00 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x504>
    7cec:	ldrb	w11, [x9, x8]
    7cf0:	add	x10, x10, x11, lsl #2
    7cf4:	adrp	x22, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7cf8:	add	x22, x22, #0x0
    7cfc:	br	x10
    7d00:	adrp	x22, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7d04:	add	x22, x22, #0x0
    7d08:	mov	x0, x22
    7d0c:	bl	0 <strlen>
    7d10:	mov	x2, x0
    7d14:	mov	x0, x21
    7d18:	mov	x1, x22
    7d1c:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7d20:	mov	x0, x21
    7d24:	mov	x1, x20
    7d28:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    7d2c:	str	x0, [sp, #56]
    7d30:	sub	x0, x29, #0x28
    7d34:	add	x1, sp, #0x38
    7d38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7d3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7d40:	add	x1, x1, #0x0
    7d44:	mov	w2, #0xc                   	// #12
    7d48:	mov	w3, #0x1                   	// #1
    7d4c:	mov	x0, x19
    7d50:	bl	0 <_ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb>
    7d54:	cbz	x0, 7d88 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x58c>
    7d58:	mov	x22, x0
    7d5c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    7d60:	ldr	x8, [x22, #8]
    7d64:	cbz	x8, 7f10 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x714>
    7d68:	ldr	x8, [x8, #8]
    7d6c:	cbnz	x8, 7f10 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x714>
    7d70:	mov	x0, x21
    7d74:	mov	x1, x22
    7d78:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    7d7c:	mov	x0, x22
    7d80:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7d84:	b	7da4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x5a8>
    7d88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7d8c:	add	x1, x1, #0x0
    7d90:	add	x0, sp, #0x38
    7d94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7d98:	add	x1, sp, #0x38
    7d9c:	mov	x0, x21
    7da0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    7da4:	ldur	w1, [x29, #-32]
    7da8:	cbz	w1, 7e30 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x634>
    7dac:	mov	x0, x20
    7db0:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    7db4:	mov	x20, x0
    7db8:	mov	w0, #0x58                  	// #88
    7dbc:	mov	w1, #0x1                   	// #1
    7dc0:	bl	0 <_ZN4llvm4UsernwEmj>
    7dc4:	ldur	x1, [x29, #-40]
    7dc8:	ldur	w2, [x29, #-32]
    7dcc:	mov	x21, x0
    7dd0:	mov	x0, x20
    7dd4:	bl	0 <_ZN4llvm13ConstantArray3getEPNS_9ArrayTypeENS_8ArrayRefIPNS_8ConstantEEE>
    7dd8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ddc:	mov	x22, x0
    7de0:	add	x1, x1, #0x0
    7de4:	add	x0, sp, #0x38
    7de8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7dec:	add	x6, sp, #0x38
    7df0:	mov	w4, #0x6                   	// #6
    7df4:	mov	x0, x21
    7df8:	mov	x1, x19
    7dfc:	mov	x2, x20
    7e00:	mov	w3, wzr
    7e04:	mov	x5, x22
    7e08:	mov	x7, xzr
    7e0c:	strb	wzr, [sp, #16]
    7e10:	str	wzr, [sp, #8]
    7e14:	str	wzr, [sp]
    7e18:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7e1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7e20:	add	x1, x1, #0x0
    7e24:	mov	w2, #0xd                   	// #13
    7e28:	mov	x0, x21
    7e2c:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7e30:	ldr	x0, [sp, #104]
    7e34:	add	x8, sp, #0x68
    7e38:	add	x8, x8, #0x10
    7e3c:	cmp	x0, x8
    7e40:	b.eq	7e48 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x64c>  // b.none
    7e44:	bl	0 <_ZdlPv>
    7e48:	ldur	x0, [x29, #-144]
    7e4c:	cmp	x0, x27
    7e50:	b.eq	7e58 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x65c>  // b.none
    7e54:	bl	0 <_ZdlPv>
    7e58:	ldp	x8, x0, [x29, #-104]
    7e5c:	cmp	x0, x8
    7e60:	b.eq	7e68 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x66c>  // b.none
    7e64:	bl	0 <free>
    7e68:	ldur	x0, [x29, #-40]
    7e6c:	sub	x8, x29, #0x28
    7e70:	add	x8, x8, #0x10
    7e74:	cmp	x0, x8
    7e78:	b.eq	7e80 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x684>  // b.none
    7e7c:	bl	0 <free>
    7e80:	ldp	x20, x19, [sp, #384]
    7e84:	ldp	x22, x21, [sp, #368]
    7e88:	ldp	x24, x23, [sp, #352]
    7e8c:	ldp	x26, x25, [sp, #336]
    7e90:	ldp	x28, x27, [sp, #320]
    7e94:	ldp	x29, x30, [sp, #304]
    7e98:	add	sp, sp, #0x190
    7e9c:	ret
    7ea0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ea4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ea8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7eac:	add	x0, x0, #0x0
    7eb0:	add	x1, x1, #0x0
    7eb4:	add	x3, x3, #0x0
    7eb8:	mov	w2, #0x126                 	// #294
    7ebc:	bl	0 <__assert_fail>
    7ec0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ec4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ec8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ecc:	add	x0, x0, #0x0
    7ed0:	add	x1, x1, #0x0
    7ed4:	add	x3, x3, #0x0
    7ed8:	mov	w2, #0x129b                	// #4763
    7edc:	bl	0 <__assert_fail>
    7ee0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ee4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ee8:	add	x0, x0, #0x0
    7eec:	add	x1, x1, #0x0
    7ef0:	mov	w2, #0x1257                	// #4695
    7ef4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7ef8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7efc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f00:	add	x0, x0, #0x0
    7f04:	add	x1, x1, #0x0
    7f08:	mov	w2, #0x1254                	// #4692
    7f0c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7f10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f18:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f1c:	add	x0, x0, #0x0
    7f20:	add	x1, x1, #0x0
    7f24:	add	x3, x3, #0x0
    7f28:	mov	w2, #0x12b1                	// #4785
    7f2c:	bl	0 <__assert_fail>
    7f30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f38:	add	x0, x0, #0x0
    7f3c:	add	x1, x1, #0x0
    7f40:	mov	w2, #0x1267                	// #4711
    7f44:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7f48:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f4c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f50:	add	x0, x0, #0x0
    7f54:	add	x1, x1, #0x0
    7f58:	mov	w2, #0x1264                	// #4708
    7f5c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000007f60 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>:
    7f60:	stp	x29, x30, [sp, #-96]!
    7f64:	str	x27, [sp, #16]
    7f68:	stp	x26, x25, [sp, #32]
    7f6c:	stp	x24, x23, [sp, #48]
    7f70:	stp	x22, x21, [sp, #64]
    7f74:	stp	x20, x19, [sp, #80]
    7f78:	mov	x29, sp
    7f7c:	mov	x19, x0
    7f80:	stp	x3, x2, [x0]
    7f84:	str	x1, [x0, #16]
    7f88:	add	x0, x0, #0x18
    7f8c:	and	w2, w4, #0x1
    7f90:	mov	x21, x5
    7f94:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7f98:	ldp	x10, x9, [x19, #136]
    7f9c:	add	x8, x19, #0x258
    7fa0:	str	x8, [x19, #616]
    7fa4:	str	x8, [x19, #624]
    7fa8:	sub	x8, x9, x10
    7fac:	lsr	x8, x8, #4
    7fb0:	str	x21, [x19, #584]
    7fb4:	str	wzr, [x19, #600]
    7fb8:	str	xzr, [x19, #608]
    7fbc:	str	xzr, [x19, #632]
    7fc0:	str	xzr, [x19, #648]
    7fc4:	str	w8, [x19, #640]
    7fc8:	cbz	x21, 8074 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x114>
    7fcc:	ldr	x20, [x21, #24]
    7fd0:	add	x22, x21, #0x8
    7fd4:	cmp	x20, x22
    7fd8:	b.eq	8074 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x114>  // b.none
    7fdc:	add	x21, x19, #0x250
    7fe0:	ldp	x23, x24, [x20, #56]
    7fe4:	cmp	x23, x24
    7fe8:	b.eq	8060 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x100>  // b.none
    7fec:	ldr	x8, [x23]
    7ff0:	cbz	x8, 8090 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x130>
    7ff4:	ldr	w9, [x8, #8]
    7ff8:	cmp	w9, #0x1
    7ffc:	b.ne	8058 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xf8>  // b.any
    8000:	ldp	x25, x8, [x8, #80]
    8004:	subs	x8, x8, x25
    8008:	b.eq	8058 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xf8>  // b.none
    800c:	asr	x8, x8, #4
    8010:	lsl	x26, x8, #4
    8014:	ldr	x9, [x25]
    8018:	and	x8, x9, #0xfffffffffffffff8
    801c:	tbz	w9, #0, 8028 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xc8>
    8020:	ldr	x9, [x8, #8]
    8024:	cbnz	x9, 804c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xec>
    8028:	ldr	x8, [x8]
    802c:	add	x1, x29, #0x18
    8030:	mov	x0, x21
    8034:	str	x8, [x29, #24]
    8038:	ldr	w8, [x19, #640]
    803c:	add	w27, w8, #0x1
    8040:	str	w27, [x19, #640]
    8044:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8048:	str	w27, [x0]
    804c:	subs	x26, x26, #0x10
    8050:	add	x25, x25, #0x10
    8054:	b.ne	8014 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xb4>  // b.any
    8058:	add	x23, x23, #0x8
    805c:	b	7fe4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x84>
    8060:	mov	x0, x20
    8064:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    8068:	mov	x20, x0
    806c:	cmp	x0, x22
    8070:	b.ne	7fe0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x80>  // b.any
    8074:	ldp	x20, x19, [sp, #80]
    8078:	ldp	x22, x21, [sp, #64]
    807c:	ldp	x24, x23, [sp, #48]
    8080:	ldp	x26, x25, [sp, #32]
    8084:	ldr	x27, [sp, #16]
    8088:	ldp	x29, x30, [sp], #96
    808c:	ret
    8090:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8094:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8098:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    809c:	add	x0, x0, #0x0
    80a0:	add	x1, x1, #0x0
    80a4:	add	x3, x3, #0x0
    80a8:	mov	w2, #0x69                  	// #105
    80ac:	bl	0 <__assert_fail>

00000000000080b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>:
    80b0:	str	d8, [sp, #-96]!
    80b4:	stp	x29, x30, [sp, #16]
    80b8:	stp	x28, x25, [sp, #32]
    80bc:	stp	x24, x23, [sp, #48]
    80c0:	stp	x22, x21, [sp, #64]
    80c4:	stp	x20, x19, [sp, #80]
    80c8:	mov	x29, sp
    80cc:	sub	sp, sp, #0x210
    80d0:	ldrb	w8, [x0, #344]
    80d4:	cbz	w8, 8244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x194>
    80d8:	ldp	x9, x8, [x0, #24]
    80dc:	mov	x19, x0
    80e0:	cmp	x9, x8
    80e4:	b.eq	81e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x134>  // b.none
    80e8:	ldur	x8, [x8, #-32]
    80ec:	mov	x20, x1
    80f0:	cmp	x8, x1
    80f4:	b.ne	81e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x134>  // b.any
    80f8:	ldr	x0, [x19]
    80fc:	mov	w1, #0x12                  	// #18
    8100:	mov	w2, #0x3                   	// #3
    8104:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8108:	ldp	x8, x25, [x19, #24]
    810c:	cmp	x8, x25
    8110:	b.eq	81dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x12c>  // b.none
    8114:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8118:	ldr	d8, [x8]
    811c:	mov	x8, sp
    8120:	add	x21, x19, #0x18
    8124:	add	x23, x8, #0x10
    8128:	mov	w24, #0x1                   	// #1
    812c:	ldur	x8, [x25, #-32]
    8130:	cmp	x8, x20
    8134:	b.ne	81dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x12c>  // b.any
    8138:	ldp	x1, x2, [x25, #-24]
    813c:	sub	x8, x2, x1
    8140:	asr	x8, x8, #2
    8144:	cmp	x8, #0x1
    8148:	b.ls	8204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x154>  // b.plast
    814c:	ldur	x8, [x25, #-40]
    8150:	cbz	x8, 8224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x174>
    8154:	ldrb	w8, [x8, #16]
    8158:	mov	x0, sp
    815c:	str	x23, [sp]
    8160:	str	d8, [sp, #8]
    8164:	cmp	w8, #0x12
    8168:	cinc	w22, w24, eq  // eq = none
    816c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8170:	ldur	x1, [x25, #-40]
    8174:	mov	x0, x21
    8178:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    817c:	mov	w8, w0
    8180:	mov	x0, sp
    8184:	add	x1, x29, #0x8
    8188:	str	x8, [x29, #8]
    818c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8190:	ldr	x0, [x19]
    8194:	mov	x2, sp
    8198:	mov	w1, w22
    819c:	mov	w3, wzr
    81a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    81a4:	ldr	x0, [sp]
    81a8:	cmp	x0, x23
    81ac:	b.eq	81b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x104>  // b.none
    81b0:	bl	0 <free>
    81b4:	ldr	x8, [x19, #32]
    81b8:	sub	x25, x8, #0x28
    81bc:	str	x25, [x19, #32]
    81c0:	ldur	x0, [x8, #-24]
    81c4:	cbz	x0, 81d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x120>
    81c8:	bl	0 <_ZdlPv>
    81cc:	ldr	x25, [x19, #32]
    81d0:	ldr	x8, [x19, #24]
    81d4:	cmp	x8, x25
    81d8:	b.ne	812c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x7c>  // b.any
    81dc:	ldr	x0, [x19]
    81e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    81e4:	add	sp, sp, #0x210
    81e8:	ldp	x20, x19, [sp, #80]
    81ec:	ldp	x22, x21, [sp, #64]
    81f0:	ldp	x24, x23, [sp, #48]
    81f4:	ldp	x28, x25, [sp, #32]
    81f8:	ldp	x29, x30, [sp, #16]
    81fc:	ldr	d8, [sp], #96
    8200:	ret
    8204:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8208:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    820c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8210:	add	x0, x0, #0x0
    8214:	add	x1, x1, #0x0
    8218:	add	x3, x3, #0x0
    821c:	mov	w2, #0xc44                 	// #3140
    8220:	bl	0 <__assert_fail>
    8224:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8228:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    822c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8230:	add	x0, x0, #0x0
    8234:	add	x1, x1, #0x0
    8238:	add	x3, x3, #0x0
    823c:	mov	w2, #0x69                  	// #105
    8240:	bl	0 <__assert_fail>
    8244:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8248:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    824c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8250:	add	x0, x0, #0x0
    8254:	add	x1, x1, #0x0
    8258:	add	x3, x3, #0x0
    825c:	mov	w2, #0xc52                 	// #3154
    8260:	bl	0 <__assert_fail>

0000000000008264 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>:
    8264:	stp	d9, d8, [sp, #-112]!
    8268:	stp	x29, x30, [sp, #16]
    826c:	stp	x28, x27, [sp, #32]
    8270:	stp	x26, x25, [sp, #48]
    8274:	stp	x24, x23, [sp, #64]
    8278:	stp	x22, x21, [sp, #80]
    827c:	stp	x20, x19, [sp, #96]
    8280:	mov	x29, sp
    8284:	sub	sp, sp, #0x2e0
    8288:	mov	x19, x0
    828c:	ldr	x0, [x0, #16]
    8290:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8294:	add	x1, x1, #0x0
    8298:	mov	w2, #0x7                   	// #7
    829c:	bl	0 <_ZNK4llvm6Module13getModuleFlagENS_9StringRefE>
    82a0:	cbz	x0, 82e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x84>
    82a4:	ldrb	w8, [x0]
    82a8:	cmp	w8, #0x1
    82ac:	b.ne	94cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1268>  // b.any
    82b0:	ldr	x8, [x0, #136]
    82b4:	cbz	x8, 94ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1288>
    82b8:	ldrb	w9, [x8, #16]
    82bc:	cmp	w9, #0x11
    82c0:	b.cs	9508 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x12a4>  // b.hs, b.nlast
    82c4:	cmp	w9, #0xd
    82c8:	b.ne	9524 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x12c0>  // b.any
    82cc:	add	x0, x8, #0x18
    82d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    82d4:	cmp	x0, #0x0
    82d8:	mov	w8, #0x14                  	// #20
    82dc:	mov	w9, #0x18                  	// #24
    82e0:	csel	w1, w9, w8, eq  // eq = none
    82e4:	b	82ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x88>
    82e8:	mov	w1, #0x14                  	// #20
    82ec:	ldr	x0, [x19]
    82f0:	mov	w2, #0x4                   	// #4
    82f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    82f8:	ldr	x0, [x19]
    82fc:	mov	w8, #0x8                   	// #8
    8300:	sub	x20, x29, #0x18
    8304:	mov	w21, #0x1                   	// #1
    8308:	add	x2, sp, #0x58
    830c:	mov	w1, #0xa                   	// #10
    8310:	mov	w3, wzr
    8314:	stur	x8, [x29, #-24]
    8318:	stp	x20, x21, [sp, #88]
    831c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8320:	ldr	x8, [x19, #584]
    8324:	ldr	x0, [x19]
    8328:	add	x2, sp, #0x58
    832c:	mov	w1, #0x14                  	// #20
    8330:	ldrb	w8, [x8, #229]
    8334:	mov	w3, wzr
    8338:	stp	x20, x21, [sp, #88]
    833c:	lsl	x8, x8, #3
    8340:	stur	x8, [x29, #-24]
    8344:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8348:	ldr	x8, [x19, #584]
    834c:	ldr	x9, [x8, #24]
    8350:	add	x8, x8, #0x8
    8354:	cmp	x9, x8
    8358:	b.eq	85d0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x36c>  // b.none
    835c:	ldr	x20, [x19, #616]
    8360:	add	x24, x19, #0x258
    8364:	cmp	x20, x24
    8368:	b.eq	83b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x14c>  // b.none
    836c:	sub	x21, x29, #0x18
    8370:	mov	w22, #0x2                   	// #2
    8374:	ldr	w8, [x20, #40]
    8378:	ldr	x0, [x19]
    837c:	add	x2, sp, #0x58
    8380:	mov	w1, #0x10                  	// #16
    8384:	stur	x8, [x29, #-24]
    8388:	ldr	x8, [x20, #32]
    838c:	mov	w3, wzr
    8390:	stp	x21, x22, [sp, #88]
    8394:	stur	x8, [x29, #-16]
    8398:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    839c:	mov	x0, x20
    83a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    83a4:	mov	x20, x0
    83a8:	cmp	x0, x24
    83ac:	b.ne	8374 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x110>  // b.any
    83b0:	mov	w0, #0x220                 	// #544
    83b4:	bl	0 <_Znwm>
    83b8:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    83bc:	ldr	x26, [x26]
    83c0:	movi	v9.2s, #0x1
    83c4:	add	x22, x0, #0x20
    83c8:	mov	x20, x0
    83cc:	add	x23, x26, #0x10
    83d0:	str	d9, [x0, #8]
    83d4:	str	x23, [x0]
    83d8:	mov	w2, #0x200                 	// #512
    83dc:	mov	x0, x22
    83e0:	mov	w1, wzr
    83e4:	bl	0 <memset>
    83e8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    83ec:	ldrb	w10, [sp, #96]
    83f0:	ldr	d8, [x8]
    83f4:	mov	x21, x20
    83f8:	str	x22, [x21, #16]!
    83fc:	mov	w9, #0x2                   	// #2
    8400:	orr	w8, w10, #0x1
    8404:	add	x1, sp, #0x58
    8408:	mov	x0, x21
    840c:	str	x9, [sp, #88]
    8410:	str	d8, [x20, #24]
    8414:	strb	w8, [sp, #96]
    8418:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    841c:	ldrb	w8, [sp, #96]
    8420:	mov	w22, #0x8                   	// #8
    8424:	add	x1, sp, #0x58
    8428:	mov	x0, x21
    842c:	and	w8, w8, #0xf0
    8430:	orr	w8, w8, #0x4
    8434:	str	x22, [sp, #88]
    8438:	strb	w8, [sp, #96]
    843c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8440:	ldrb	w8, [sp, #96]
    8444:	mov	w9, #0x6                   	// #6
    8448:	add	x1, sp, #0x58
    844c:	mov	x0, x21
    8450:	and	w8, w8, #0xf0
    8454:	orr	w8, w8, #0x4
    8458:	str	x9, [sp, #88]
    845c:	strb	w8, [sp, #96]
    8460:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8464:	ldrb	w8, [sp, #96]
    8468:	add	x1, sp, #0x58
    846c:	mov	x0, x21
    8470:	str	x22, [sp, #88]
    8474:	and	w8, w8, #0xf0
    8478:	orr	w8, w8, #0x4
    847c:	strb	w8, [sp, #96]
    8480:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8484:	ldrb	w8, [sp, #96]
    8488:	mov	w25, #0x4                   	// #4
    848c:	add	x1, sp, #0x58
    8490:	mov	x0, x21
    8494:	and	w8, w8, #0xf0
    8498:	orr	w8, w8, #0x4
    849c:	str	x25, [sp, #88]
    84a0:	strb	w8, [sp, #96]
    84a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    84a8:	ldrb	w8, [sp, #96]
    84ac:	add	x1, sp, #0x58
    84b0:	mov	x0, x21
    84b4:	str	x25, [sp, #88]
    84b8:	and	w8, w8, #0xf0
    84bc:	orr	w8, w8, #0x4
    84c0:	strb	w8, [sp, #96]
    84c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    84c8:	ldrb	w8, [sp, #96]
    84cc:	add	x1, sp, #0x58
    84d0:	mov	x0, x21
    84d4:	str	x25, [sp, #88]
    84d8:	and	w8, w8, #0xf0
    84dc:	orr	w8, w8, #0x4
    84e0:	strb	w8, [sp, #96]
    84e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    84e8:	ldrb	w8, [sp, #96]
    84ec:	add	x1, sp, #0x58
    84f0:	mov	x0, x21
    84f4:	str	x25, [sp, #88]
    84f8:	and	w8, w8, #0xf0
    84fc:	orr	w8, w8, #0x4
    8500:	strb	w8, [sp, #96]
    8504:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8508:	ldrb	w8, [sp, #96]
    850c:	add	x1, sp, #0x58
    8510:	mov	x0, x21
    8514:	str	xzr, [sp, #88]
    8518:	and	w8, w8, #0xf0
    851c:	orr	w8, w8, #0x6
    8520:	strb	w8, [sp, #96]
    8524:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8528:	ldrb	w8, [sp, #96]
    852c:	add	x1, sp, #0x58
    8530:	mov	x0, x21
    8534:	str	x22, [sp, #88]
    8538:	and	w8, w8, #0xf0
    853c:	orr	w8, w8, #0x4
    8540:	strb	w8, [sp, #96]
    8544:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8548:	ldr	x22, [x19]
    854c:	mov	x1, x21
    8550:	stp	x21, x20, [x29, #-40]
    8554:	mov	x0, x22
    8558:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    855c:	add	x0, x22, #0x18
    8560:	sub	x1, x29, #0x28
    8564:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8568:	ldr	x8, [x22, #32]
    856c:	ldur	x0, [x29, #-32]
    8570:	str	x8, [sp, #80]
    8574:	ldr	x8, [x22, #24]
    8578:	str	x8, [sp, #72]
    857c:	cbz	x0, 8584 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x320>
    8580:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8584:	mov	w0, #0x220                 	// #544
    8588:	bl	0 <_Znwm>
    858c:	add	x22, x0, #0x20
    8590:	mov	x20, x0
    8594:	str	d9, [x0, #8]
    8598:	str	x23, [x0]
    859c:	mov	w2, #0x200                 	// #512
    85a0:	mov	x0, x22
    85a4:	mov	w1, wzr
    85a8:	bl	0 <memset>
    85ac:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    85b0:	ldrb	w8, [x8]
    85b4:	mov	x21, x20
    85b8:	str	x22, [x21, #16]!
    85bc:	str	d8, [x20, #24]
    85c0:	cbz	w8, 85dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x378>
    85c4:	ldrb	w8, [sp, #96]
    85c8:	mov	w9, #0x13                  	// #19
    85cc:	b	85e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x380>
    85d0:	ldr	x0, [x19]
    85d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    85d8:	b	9310 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10ac>
    85dc:	ldrb	w8, [sp, #96]
    85e0:	mov	w9, #0x1                   	// #1
    85e4:	orr	w8, w8, #0x1
    85e8:	add	x1, sp, #0x58
    85ec:	mov	x0, x21
    85f0:	str	x9, [sp, #88]
    85f4:	strb	w8, [sp, #96]
    85f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    85fc:	ldrb	w8, [sp, #96]
    8600:	mov	w22, #0x8                   	// #8
    8604:	add	x1, sp, #0x58
    8608:	mov	x0, x21
    860c:	and	w8, w8, #0xf0
    8610:	orr	w8, w8, #0x4
    8614:	str	x22, [sp, #88]
    8618:	strb	w8, [sp, #96]
    861c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8620:	ldrb	w8, [sp, #96]
    8624:	mov	w9, #0x6                   	// #6
    8628:	add	x1, sp, #0x58
    862c:	mov	x0, x21
    8630:	and	w8, w8, #0xf0
    8634:	orr	w8, w8, #0x4
    8638:	str	x9, [sp, #88]
    863c:	strb	w8, [sp, #96]
    8640:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8644:	ldrb	w8, [sp, #96]
    8648:	add	x1, sp, #0x58
    864c:	mov	x0, x21
    8650:	str	x22, [sp, #88]
    8654:	and	w8, w8, #0xf0
    8658:	orr	w8, w8, #0x4
    865c:	strb	w8, [sp, #96]
    8660:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8664:	ldrb	w8, [sp, #96]
    8668:	mov	w23, #0x4                   	// #4
    866c:	add	x1, sp, #0x58
    8670:	mov	x0, x21
    8674:	and	w8, w8, #0xf0
    8678:	orr	w8, w8, #0x4
    867c:	str	x23, [sp, #88]
    8680:	strb	w8, [sp, #96]
    8684:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8688:	ldrb	w8, [sp, #96]
    868c:	add	x1, sp, #0x58
    8690:	mov	x0, x21
    8694:	str	x23, [sp, #88]
    8698:	and	w8, w8, #0xf0
    869c:	orr	w8, w8, #0x4
    86a0:	strb	w8, [sp, #96]
    86a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    86a8:	ldrb	w8, [sp, #96]
    86ac:	add	x1, sp, #0x58
    86b0:	mov	x0, x21
    86b4:	str	x23, [sp, #88]
    86b8:	and	w8, w8, #0xf0
    86bc:	orr	w8, w8, #0x4
    86c0:	strb	w8, [sp, #96]
    86c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    86c8:	ldrb	w8, [sp, #96]
    86cc:	add	x1, sp, #0x58
    86d0:	mov	x0, x21
    86d4:	str	x23, [sp, #88]
    86d8:	and	w8, w8, #0xf0
    86dc:	orr	w8, w8, #0x4
    86e0:	strb	w8, [sp, #96]
    86e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    86e8:	ldrb	w8, [sp, #96]
    86ec:	add	x1, sp, #0x58
    86f0:	mov	x0, x21
    86f4:	str	xzr, [sp, #88]
    86f8:	and	w8, w8, #0xf0
    86fc:	orr	w8, w8, #0x6
    8700:	strb	w8, [sp, #96]
    8704:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8708:	ldrb	w8, [sp, #96]
    870c:	add	x1, sp, #0x58
    8710:	mov	x0, x21
    8714:	str	x22, [sp, #88]
    8718:	and	w8, w8, #0xf0
    871c:	orr	w8, w8, #0x4
    8720:	strb	w8, [sp, #96]
    8724:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8728:	ldr	x22, [x19]
    872c:	mov	x1, x21
    8730:	stp	x21, x20, [x29, #-56]
    8734:	mov	x0, x22
    8738:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    873c:	add	x0, x22, #0x18
    8740:	sub	x1, x29, #0x38
    8744:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8748:	ldur	x0, [x29, #-48]
    874c:	ldp	x23, x8, [x22, #24]
    8750:	str	x8, [sp, #40]
    8754:	cbz	x0, 875c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4f8>
    8758:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    875c:	mov	w0, #0x220                 	// #544
    8760:	bl	0 <_Znwm>
    8764:	movi	v9.2s, #0x1
    8768:	add	x27, x26, #0x10
    876c:	add	x22, x0, #0x20
    8770:	mov	x20, x0
    8774:	str	d9, [x0, #8]
    8778:	str	x27, [x0]
    877c:	mov	w2, #0x200                 	// #512
    8780:	mov	x0, x22
    8784:	mov	w1, wzr
    8788:	bl	0 <memset>
    878c:	ldrb	w8, [sp, #96]
    8790:	mov	x21, x20
    8794:	str	x22, [x21, #16]!
    8798:	mov	w9, #0x3                   	// #3
    879c:	orr	w8, w8, #0x1
    87a0:	add	x1, sp, #0x58
    87a4:	mov	x0, x21
    87a8:	str	d8, [x20, #24]
    87ac:	str	x9, [sp, #88]
    87b0:	strb	w8, [sp, #96]
    87b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    87b8:	ldrb	w8, [sp, #96]
    87bc:	mov	w22, #0x8                   	// #8
    87c0:	add	x1, sp, #0x58
    87c4:	mov	x0, x21
    87c8:	and	w8, w8, #0xf0
    87cc:	orr	w8, w8, #0x4
    87d0:	str	x22, [sp, #88]
    87d4:	strb	w8, [sp, #96]
    87d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    87dc:	ldrb	w8, [sp, #96]
    87e0:	mov	w9, #0x6                   	// #6
    87e4:	add	x1, sp, #0x58
    87e8:	mov	x0, x21
    87ec:	and	w8, w8, #0xf0
    87f0:	orr	w8, w8, #0x4
    87f4:	str	x9, [sp, #88]
    87f8:	strb	w8, [sp, #96]
    87fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8800:	ldrb	w8, [sp, #96]
    8804:	add	x1, sp, #0x58
    8808:	mov	x0, x21
    880c:	str	xzr, [sp, #88]
    8810:	and	w8, w8, #0xf0
    8814:	orr	w8, w8, #0x6
    8818:	strb	w8, [sp, #96]
    881c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8820:	ldrb	w8, [sp, #96]
    8824:	add	x1, sp, #0x58
    8828:	mov	x0, x21
    882c:	str	x22, [sp, #88]
    8830:	and	w8, w8, #0xf0
    8834:	orr	w8, w8, #0x4
    8838:	strb	w8, [sp, #96]
    883c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8840:	ldr	x22, [x19]
    8844:	mov	x1, x21
    8848:	stp	x21, x20, [x29, #-72]
    884c:	mov	x0, x22
    8850:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8854:	add	x0, x22, #0x18
    8858:	sub	x1, x29, #0x48
    885c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8860:	ldr	x8, [x22, #32]
    8864:	ldur	x0, [x29, #-64]
    8868:	str	x8, [sp, #64]
    886c:	ldr	x8, [x22, #24]
    8870:	str	x8, [sp, #56]
    8874:	cbz	x0, 887c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x618>
    8878:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    887c:	mov	w0, #0x220                 	// #544
    8880:	bl	0 <_Znwm>
    8884:	add	x22, x0, #0x20
    8888:	mov	x20, x0
    888c:	str	d9, [x0, #8]
    8890:	str	x27, [x0]
    8894:	mov	w2, #0x200                 	// #512
    8898:	mov	x0, x22
    889c:	mov	w1, wzr
    88a0:	bl	0 <memset>
    88a4:	ldrb	w8, [sp, #96]
    88a8:	mov	x21, x20
    88ac:	str	x22, [x21, #16]!
    88b0:	mov	w9, #0x17                  	// #23
    88b4:	orr	w8, w8, #0x1
    88b8:	add	x1, sp, #0x58
    88bc:	mov	x0, x21
    88c0:	str	d8, [x20, #24]
    88c4:	str	x9, [sp, #88]
    88c8:	strb	w8, [sp, #96]
    88cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    88d0:	ldrb	w8, [sp, #96]
    88d4:	mov	w22, #0x8                   	// #8
    88d8:	add	x1, sp, #0x58
    88dc:	mov	x0, x21
    88e0:	and	w8, w8, #0xf0
    88e4:	orr	w8, w8, #0x4
    88e8:	str	x22, [sp, #88]
    88ec:	strb	w8, [sp, #96]
    88f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    88f4:	ldrb	w8, [sp, #96]
    88f8:	mov	w9, #0x6                   	// #6
    88fc:	add	x1, sp, #0x58
    8900:	mov	x0, x21
    8904:	and	w8, w8, #0xf0
    8908:	orr	w8, w8, #0x4
    890c:	str	x9, [sp, #88]
    8910:	strb	w8, [sp, #96]
    8914:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8918:	ldrb	w8, [sp, #96]
    891c:	mov	w9, #0x4                   	// #4
    8920:	add	x1, sp, #0x58
    8924:	mov	x0, x21
    8928:	and	w8, w8, #0xf0
    892c:	orr	w8, w8, #0x4
    8930:	str	x9, [sp, #88]
    8934:	strb	w8, [sp, #96]
    8938:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    893c:	ldrb	w8, [sp, #96]
    8940:	add	x1, sp, #0x58
    8944:	mov	x0, x21
    8948:	str	xzr, [sp, #88]
    894c:	and	w8, w8, #0xf0
    8950:	orr	w8, w8, #0x6
    8954:	strb	w8, [sp, #96]
    8958:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    895c:	ldrb	w8, [sp, #96]
    8960:	add	x1, sp, #0x58
    8964:	mov	x0, x21
    8968:	str	x22, [sp, #88]
    896c:	and	w8, w8, #0xf0
    8970:	orr	w8, w8, #0x4
    8974:	strb	w8, [sp, #96]
    8978:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    897c:	ldr	x22, [x19]
    8980:	mov	x1, x21
    8984:	stp	x21, x20, [x29, #-88]
    8988:	mov	x0, x22
    898c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8990:	add	x0, x22, #0x18
    8994:	sub	x1, x29, #0x58
    8998:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    899c:	ldur	x0, [x29, #-80]
    89a0:	ldp	x8, x27, [x22, #24]
    89a4:	str	x8, [sp, #48]
    89a8:	cbz	x0, 89b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x74c>
    89ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    89b0:	mov	w0, #0x220                 	// #544
    89b4:	bl	0 <_Znwm>
    89b8:	movi	v9.2s, #0x1
    89bc:	add	x26, x26, #0x10
    89c0:	add	x21, x0, #0x20
    89c4:	mov	x20, x0
    89c8:	str	d9, [x0, #8]
    89cc:	str	x26, [x0]
    89d0:	mov	w2, #0x200                 	// #512
    89d4:	mov	x0, x21
    89d8:	mov	w1, wzr
    89dc:	bl	0 <memset>
    89e0:	ldrb	w8, [sp, #96]
    89e4:	mov	x22, x20
    89e8:	str	x21, [x22, #16]!
    89ec:	mov	w9, #0x7                   	// #7
    89f0:	orr	w8, w8, #0x1
    89f4:	add	x1, sp, #0x58
    89f8:	mov	x0, x22
    89fc:	str	d8, [x20, #24]
    8a00:	str	x9, [sp, #88]
    8a04:	strb	w8, [sp, #96]
    8a08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8a0c:	ldrb	w8, [sp, #96]
    8a10:	mov	w21, #0x8                   	// #8
    8a14:	add	x1, sp, #0x58
    8a18:	mov	x0, x22
    8a1c:	and	w8, w8, #0xf0
    8a20:	orr	w8, w8, #0x4
    8a24:	str	x21, [sp, #88]
    8a28:	strb	w8, [sp, #96]
    8a2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8a30:	ldrb	w8, [sp, #96]
    8a34:	mov	w9, #0x6                   	// #6
    8a38:	add	x1, sp, #0x58
    8a3c:	mov	x0, x22
    8a40:	and	w8, w8, #0xf0
    8a44:	orr	w8, w8, #0x4
    8a48:	str	x9, [sp, #88]
    8a4c:	strb	w8, [sp, #96]
    8a50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8a54:	ldrb	w8, [sp, #96]
    8a58:	add	x1, sp, #0x58
    8a5c:	mov	x0, x22
    8a60:	str	x21, [sp, #88]
    8a64:	and	w8, w8, #0xf0
    8a68:	orr	w8, w8, #0x4
    8a6c:	strb	w8, [sp, #96]
    8a70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8a74:	ldr	x21, [x19]
    8a78:	mov	x1, x22
    8a7c:	stp	x22, x20, [x29, #-104]
    8a80:	mov	x0, x21
    8a84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8a88:	add	x0, x21, #0x18
    8a8c:	sub	x1, x29, #0x68
    8a90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8a94:	ldr	x8, [x21, #32]
    8a98:	ldur	x0, [x29, #-96]
    8a9c:	str	x8, [sp, #16]
    8aa0:	ldr	x8, [x21, #24]
    8aa4:	str	x8, [sp, #8]
    8aa8:	cbz	x0, 8ab0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x84c>
    8aac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8ab0:	mov	w0, #0x220                 	// #544
    8ab4:	bl	0 <_Znwm>
    8ab8:	add	x22, x0, #0x20
    8abc:	mov	x20, x0
    8ac0:	str	d9, [x0, #8]
    8ac4:	str	x26, [x0]
    8ac8:	mov	w2, #0x200                 	// #512
    8acc:	mov	x0, x22
    8ad0:	mov	w1, wzr
    8ad4:	bl	0 <memset>
    8ad8:	ldrb	w8, [sp, #96]
    8adc:	mov	x21, x20
    8ae0:	str	x22, [x21, #16]!
    8ae4:	mov	w9, #0x16                  	// #22
    8ae8:	orr	w8, w8, #0x1
    8aec:	add	x1, sp, #0x58
    8af0:	mov	x0, x21
    8af4:	str	d8, [x20, #24]
    8af8:	str	x9, [sp, #88]
    8afc:	strb	w8, [sp, #96]
    8b00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8b04:	ldrb	w8, [sp, #96]
    8b08:	mov	w22, #0x8                   	// #8
    8b0c:	add	x1, sp, #0x58
    8b10:	mov	x0, x21
    8b14:	and	w8, w8, #0xf0
    8b18:	orr	w8, w8, #0x4
    8b1c:	str	x22, [sp, #88]
    8b20:	strb	w8, [sp, #96]
    8b24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8b28:	ldrb	w8, [sp, #96]
    8b2c:	add	x1, sp, #0x58
    8b30:	mov	x0, x21
    8b34:	str	x22, [sp, #88]
    8b38:	and	w8, w8, #0xf0
    8b3c:	orr	w8, w8, #0x4
    8b40:	strb	w8, [sp, #96]
    8b44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8b48:	ldrb	w8, [sp, #96]
    8b4c:	add	x1, sp, #0x58
    8b50:	mov	x0, x21
    8b54:	str	xzr, [sp, #88]
    8b58:	and	w8, w8, #0xf0
    8b5c:	orr	w8, w8, #0x6
    8b60:	strb	w8, [sp, #96]
    8b64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8b68:	ldrb	w8, [sp, #96]
    8b6c:	add	x1, sp, #0x58
    8b70:	mov	x0, x21
    8b74:	str	x22, [sp, #88]
    8b78:	and	w8, w8, #0xf0
    8b7c:	orr	w8, w8, #0x4
    8b80:	strb	w8, [sp, #96]
    8b84:	add	x25, sp, #0x58
    8b88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8b8c:	ldr	x22, [x19]
    8b90:	mov	x1, x21
    8b94:	stp	x21, x20, [x29, #-120]
    8b98:	mov	x0, x22
    8b9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8ba0:	add	x0, x22, #0x18
    8ba4:	sub	x1, x29, #0x78
    8ba8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8bac:	ldr	x8, [x22, #32]
    8bb0:	ldur	x0, [x29, #-112]
    8bb4:	str	x8, [sp, #32]
    8bb8:	ldr	x8, [x22, #24]
    8bbc:	str	x8, [sp, #24]
    8bc0:	cbz	x0, 8bc8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x964>
    8bc4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8bc8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8bcc:	ldr	d0, [x8]
    8bd0:	add	x8, x25, #0x10
    8bd4:	str	x8, [sp, #88]
    8bd8:	str	d0, [sp, #96]
    8bdc:	ldr	x8, [x19, #16]
    8be0:	ldr	x28, [x8, #32]
    8be4:	add	x26, x8, #0x18
    8be8:	cmp	x26, x28
    8bec:	b.eq	8ec8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc64>  // b.none
    8bf0:	ldp	x9, x8, [sp, #72]
    8bf4:	str	x27, [sp]
    8bf8:	add	x27, x19, #0x250
    8bfc:	add	x20, x19, #0x18
    8c00:	sub	x8, x8, x9
    8c04:	str	x8, [sp, #80]
    8c08:	ldr	x8, [sp, #40]
    8c0c:	sub	x8, x8, x23
    8c10:	str	x8, [sp, #72]
    8c14:	ldrb	w8, [x28]
    8c18:	tbnz	w8, #2, 9374 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1110>
    8c1c:	sub	x8, x28, #0x38
    8c20:	cmp	x28, #0x0
    8c24:	csel	x21, xzr, x8, eq  // eq = none
    8c28:	ldrb	w8, [x21, #23]
    8c2c:	tbz	w8, #5, 9390 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x112c>
    8c30:	ldr	x22, [x19, #584]
    8c34:	mov	x0, x21
    8c38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8c3c:	mov	x1, x0
    8c40:	mov	x0, x22
    8c44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8c48:	cmp	x0, #0x8
    8c4c:	b.cc	8c60 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x9fc>  // b.lo, b.ul, b.last
    8c50:	and	x9, x0, #0xfffffffffffffff8
    8c54:	ldp	x8, x9, [x9, #24]
    8c58:	cmp	x9, x8
    8c5c:	b.ne	8c70 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa0c>  // b.any
    8c60:	mov	x0, x21
    8c64:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    8c68:	tbnz	w0, #0, 8eb4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc50>
    8c6c:	b	93dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1178>
    8c70:	ldr	x22, [x8]
    8c74:	mov	x0, x20
    8c78:	mov	x1, x21
    8c7c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    8c80:	mov	w8, w0
    8c84:	add	x0, sp, #0x58
    8c88:	sub	x1, x29, #0x18
    8c8c:	stur	x8, [x29, #-24]
    8c90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8c94:	cbz	x22, 9454 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x11f0>
    8c98:	ldr	w8, [x22, #8]
    8c9c:	cmp	w8, #0x1
    8ca0:	b.ne	9470 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x120c>  // b.any
    8ca4:	ldr	x0, [x19]
    8ca8:	mov	x1, x22
    8cac:	bl	fea8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>
    8cb0:	mov	x0, x22
    8cb4:	bl	0 <_ZNK4llvm15FunctionSummary16specialRefCountsEv>
    8cb8:	ldrb	w8, [x22, #12]
    8cbc:	mov	x23, x0
    8cc0:	lsr	x25, x0, #32
    8cc4:	add	x0, sp, #0x58
    8cc8:	sub	x1, x29, #0x18
    8ccc:	stur	x8, [x29, #-24]
    8cd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8cd4:	ldr	w8, [x22, #64]
    8cd8:	add	x0, sp, #0x58
    8cdc:	sub	x1, x29, #0x18
    8ce0:	stur	x8, [x29, #-24]
    8ce4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8ce8:	ldr	w8, [x22, #68]
    8cec:	add	x0, sp, #0x58
    8cf0:	sub	x1, x29, #0x18
    8cf4:	and	x8, x8, #0x3f
    8cf8:	stur	x8, [x29, #-24]
    8cfc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8d00:	ldp	x8, x9, [x22, #40]
    8d04:	add	x0, sp, #0x58
    8d08:	sub	x1, x29, #0x18
    8d0c:	sub	x8, x9, x8
    8d10:	asr	x8, x8, #3
    8d14:	stur	x8, [x29, #-24]
    8d18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8d1c:	and	x8, x23, #0xffffffff
    8d20:	add	x0, sp, #0x58
    8d24:	sub	x1, x29, #0x18
    8d28:	stur	x8, [x29, #-24]
    8d2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8d30:	add	x0, sp, #0x58
    8d34:	sub	x1, x29, #0x18
    8d38:	stur	x25, [x29, #-24]
    8d3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8d40:	ldp	x23, x8, [x22, #40]
    8d44:	subs	x8, x8, x23
    8d48:	b.eq	8d8c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb28>  // b.none
    8d4c:	asr	x8, x8, #3
    8d50:	lsl	x25, x8, #3
    8d54:	ldr	x8, [x23]
    8d58:	tbz	w8, #0, 9334 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10d0>
    8d5c:	and	x8, x8, #0xfffffffffffffff8
    8d60:	ldr	x1, [x8, #8]
    8d64:	mov	x0, x20
    8d68:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    8d6c:	mov	w8, w0
    8d70:	add	x0, sp, #0x58
    8d74:	sub	x1, x29, #0x18
    8d78:	stur	x8, [x29, #-24]
    8d7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8d80:	subs	x25, x25, #0x8
    8d84:	add	x23, x23, #0x8
    8d88:	b.ne	8d54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xaf0>  // b.any
    8d8c:	mov	x0, x21
    8d90:	mov	w1, wzr
    8d94:	bl	0 <_ZNK4llvm8Function13getEntryCountEb>
    8d98:	adrp	x8, 0 <ForceSummaryEdgesCold>
    8d9c:	ldp	x23, x22, [x22, #80]
    8da0:	ldr	x8, [x8]
    8da4:	adrp	x25, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8da8:	cmp	x22, x23
    8dac:	ldr	w8, [x8]
    8db0:	orr	w21, w8, w1
    8db4:	b.eq	8e78 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc14>  // b.none
    8db8:	ldr	x9, [x23]
    8dbc:	and	x8, x9, #0xfffffffffffffff8
    8dc0:	tbz	w9, #0, 8dd8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb74>
    8dc4:	ldr	x1, [x8, #8]
    8dc8:	cbz	x1, 8dd8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb74>
    8dcc:	mov	x0, x20
    8dd0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    8dd4:	b	8e28 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbc4>
    8dd8:	ldr	x10, [x27, #16]
    8ddc:	cbz	x10, 9354 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10f0>
    8de0:	ldr	x8, [x8]
    8de4:	mov	x9, x24
    8de8:	ldr	x11, [x10, #32]
    8dec:	add	x12, x10, #0x18
    8df0:	add	x13, x10, #0x10
    8df4:	cmp	x11, x8
    8df8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    8dfc:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    8e00:	ldr	x10, [x10]
    8e04:	cbnz	x10, 8de8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb84>
    8e08:	cmp	x9, x24
    8e0c:	b.eq	9354 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10f0>  // b.none
    8e10:	ldr	x10, [x9, #32]
    8e14:	cmp	x10, x8
    8e18:	csel	x8, x24, x9, hi  // hi = pmore
    8e1c:	cmp	x8, x24
    8e20:	b.eq	9354 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10f0>  // b.none
    8e24:	ldr	w0, [x8, #40]
    8e28:	mov	w8, w0
    8e2c:	add	x0, sp, #0x58
    8e30:	sub	x1, x29, #0x18
    8e34:	stur	x8, [x29, #-24]
    8e38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8e3c:	cbz	w21, 8e4c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbe8>
    8e40:	ldr	w8, [x23, #8]
    8e44:	and	x8, x8, #0x7
    8e48:	b	8e5c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbf8>
    8e4c:	ldrb	w8, [x25]
    8e50:	cbz	w8, 8e6c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc08>
    8e54:	ldr	w8, [x23, #8]
    8e58:	lsr	x8, x8, #3
    8e5c:	add	x0, sp, #0x58
    8e60:	sub	x1, x29, #0x18
    8e64:	stur	x8, [x29, #-24]
    8e68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8e6c:	add	x23, x23, #0x10
    8e70:	cmp	x23, x22
    8e74:	b.ne	8db8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb54>  // b.any
    8e78:	ldrb	w8, [x25]
    8e7c:	ldp	x10, x9, [sp, #72]
    8e80:	ldr	x0, [x19]
    8e84:	add	x2, sp, #0x58
    8e88:	cmp	w8, #0x0
    8e8c:	mov	w8, #0x13                  	// #19
    8e90:	csinc	w8, w8, wzr, ne  // ne = any
    8e94:	cmp	w21, #0x0
    8e98:	csel	x9, x9, x10, ne  // ne = any
    8e9c:	lsr	x9, x9, #4
    8ea0:	add	w3, w9, #0x3
    8ea4:	mov	w9, #0x2                   	// #2
    8ea8:	csel	w1, w9, w8, ne  // ne = any
    8eac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8eb0:	str	wzr, [sp, #96]
    8eb4:	ldr	x28, [x28, #8]
    8eb8:	cmp	x26, x28
    8ebc:	b.ne	8c14 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x9b0>  // b.any
    8ec0:	ldr	x8, [x19, #16]
    8ec4:	ldr	x27, [sp]
    8ec8:	ldr	x25, [x8, #16]
    8ecc:	add	x26, x8, #0x8
    8ed0:	cmp	x26, x25
    8ed4:	b.eq	9128 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xec4>  // b.none
    8ed8:	ldp	x9, x8, [sp, #56]
    8edc:	add	x20, x19, #0x18
    8ee0:	sub	x8, x8, x9
    8ee4:	ldr	x9, [sp, #48]
    8ee8:	lsr	x8, x8, #4
    8eec:	add	w8, w8, #0x3
    8ef0:	str	w8, [sp, #80]
    8ef4:	sub	x9, x27, x9
    8ef8:	lsr	x9, x9, #4
    8efc:	add	w8, w9, #0x3
    8f00:	str	w8, [sp, #72]
    8f04:	ldrb	w8, [x25]
    8f08:	tbnz	w8, #2, 93a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x113c>
    8f0c:	ldr	x24, [x19, #584]
    8f10:	sub	x8, x25, #0x38
    8f14:	cmp	x25, #0x0
    8f18:	csel	x23, xzr, x8, eq  // eq = none
    8f1c:	mov	x0, x23
    8f20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8f24:	mov	x1, x0
    8f28:	mov	x0, x24
    8f2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8f30:	cmp	x0, #0x8
    8f34:	b.cc	8f48 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xce4>  // b.lo, b.ul, b.last
    8f38:	and	x9, x0, #0xfffffffffffffff8
    8f3c:	ldp	x8, x9, [x9, #24]
    8f40:	cmp	x9, x8
    8f44:	b.ne	8f58 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xcf4>  // b.any
    8f48:	mov	x0, x23
    8f4c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    8f50:	tbnz	w0, #0, 9118 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xeb4>
    8f54:	b	93fc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1198>
    8f58:	ldr	x24, [x8]
    8f5c:	mov	x0, x20
    8f60:	mov	x1, x23
    8f64:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    8f68:	mov	w8, w0
    8f6c:	add	x0, sp, #0x58
    8f70:	sub	x1, x29, #0x18
    8f74:	stur	x8, [x29, #-24]
    8f78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8f7c:	cbz	x24, 948c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1228>
    8f80:	ldr	w8, [x24, #8]
    8f84:	cmp	w8, #0x2
    8f88:	b.ne	94ac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1248>  // b.any
    8f8c:	ldrb	w8, [x24, #12]
    8f90:	add	x0, sp, #0x58
    8f94:	sub	x1, x29, #0x18
    8f98:	stur	x8, [x29, #-24]
    8f9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8fa0:	ldr	w8, [x24, #72]
    8fa4:	add	x0, sp, #0x58
    8fa8:	sub	x1, x29, #0x18
    8fac:	and	x8, x8, #0x3
    8fb0:	stur	x8, [x29, #-24]
    8fb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8fb8:	ldr	x8, [x24, #64]
    8fbc:	cbz	x8, 8ff4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd90>
    8fc0:	ldp	x28, x8, [x8]
    8fc4:	subs	x8, x8, x28
    8fc8:	b.eq	9000 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd9c>  // b.none
    8fcc:	ldp	x9, x10, [x24, #40]
    8fd0:	asr	x27, x8, #4
    8fd4:	add	x0, sp, #0x58
    8fd8:	sub	x1, x29, #0x18
    8fdc:	sub	x8, x10, x9
    8fe0:	asr	x8, x8, #3
    8fe4:	stur	x8, [x29, #-24]
    8fe8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8fec:	mov	w21, wzr
    8ff0:	b	9008 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xda4>
    8ff4:	mov	x27, xzr
    8ff8:	mov	x28, xzr
    8ffc:	b	9004 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xda0>
    9000:	mov	x27, xzr
    9004:	mov	w21, #0x1                   	// #1
    9008:	ldp	x22, x8, [x24, #40]
    900c:	subs	x8, x8, x22
    9010:	b.eq	909c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe38>  // b.none
    9014:	ldr	w23, [sp, #96]
    9018:	asr	x8, x8, #3
    901c:	lsl	x24, x8, #3
    9020:	ldr	x8, [x22]
    9024:	tbz	w8, #0, 9334 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10d0>
    9028:	and	x8, x8, #0xfffffffffffffff8
    902c:	ldr	x1, [x8, #8]
    9030:	mov	x0, x20
    9034:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    9038:	mov	w8, w0
    903c:	add	x0, sp, #0x58
    9040:	sub	x1, x29, #0x18
    9044:	stur	x8, [x29, #-24]
    9048:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    904c:	subs	x24, x24, #0x8
    9050:	add	x22, x22, #0x8
    9054:	b.ne	9020 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xdbc>  // b.any
    9058:	ldr	w8, [sp, #96]
    905c:	cmp	w23, w8
    9060:	b.eq	909c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe38>  // b.none
    9064:	ldr	x9, [sp, #88]
    9068:	add	x23, x9, x23, lsl #3
    906c:	add	x24, x9, x8, lsl #3
    9070:	sub	x8, x24, x23
    9074:	asr	x8, x8, #3
    9078:	clz	x8, x8
    907c:	mov	w9, #0x7e                  	// #126
    9080:	sub	x2, x9, x8, lsl #1
    9084:	mov	x0, x23
    9088:	mov	x1, x24
    908c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9090:	mov	x0, x23
    9094:	mov	x1, x24
    9098:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    909c:	tbz	w21, #0, 90b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe50>
    90a0:	ldr	x0, [x19]
    90a4:	ldr	w3, [sp, #80]
    90a8:	add	x2, sp, #0x58
    90ac:	mov	w1, #0x3                   	// #3
    90b0:	b	9110 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xeac>
    90b4:	cbz	x27, 9100 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe9c>
    90b8:	add	x21, x28, x27, lsl #4
    90bc:	ldr	x8, [x28]
    90c0:	tbz	w8, #0, 9334 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10d0>
    90c4:	and	x8, x8, #0xfffffffffffffff8
    90c8:	ldr	x1, [x8, #8]
    90cc:	mov	x0, x20
    90d0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    90d4:	mov	w8, w0
    90d8:	add	x0, sp, #0x58
    90dc:	sub	x1, x29, #0x18
    90e0:	stur	x8, [x29, #-24]
    90e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    90e8:	add	x1, x28, #0x8
    90ec:	add	x0, sp, #0x58
    90f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    90f4:	add	x28, x28, #0x10
    90f8:	cmp	x28, x21
    90fc:	b.ne	90bc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe58>  // b.any
    9100:	ldr	x0, [x19]
    9104:	ldr	w3, [sp, #72]
    9108:	add	x2, sp, #0x58
    910c:	mov	w1, #0x17                  	// #23
    9110:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9114:	str	wzr, [sp, #96]
    9118:	ldr	x25, [x25, #8]
    911c:	cmp	x26, x25
    9120:	b.ne	8f04 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xca0>  // b.any
    9124:	ldr	x8, [x19, #16]
    9128:	ldr	x25, [x8, #48]
    912c:	add	x26, x8, #0x28
    9130:	cmp	x26, x25
    9134:	b.eq	9210 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xfac>  // b.none
    9138:	ldp	x9, x8, [sp, #8]
    913c:	add	x21, x19, #0x18
    9140:	sub	x8, x8, x9
    9144:	lsr	x8, x8, #4
    9148:	add	w20, w8, #0x3
    914c:	ldrb	w8, [x25]
    9150:	tbnz	w8, #2, 93bc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1158>
    9154:	sub	x8, x25, #0x30
    9158:	cmp	x25, #0x0
    915c:	csel	x22, xzr, x8, eq  // eq = none
    9160:	mov	x0, x22
    9164:	bl	0 <_ZNK4llvm20GlobalIndirectSymbol13getBaseObjectEv>
    9168:	ldrb	w8, [x0, #23]
    916c:	tbz	w8, #5, 9204 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xfa0>
    9170:	mov	x23, x0
    9174:	mov	x0, x21
    9178:	mov	x1, x22
    917c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    9180:	mov	w24, w0
    9184:	mov	x0, x21
    9188:	mov	x1, x23
    918c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    9190:	mov	w23, w0
    9194:	mov	w8, w24
    9198:	add	x0, sp, #0x58
    919c:	sub	x1, x29, #0x18
    91a0:	stur	x8, [x29, #-24]
    91a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    91a8:	ldr	x0, [x19, #584]
    91ac:	mov	w2, #0x1                   	// #1
    91b0:	mov	x1, x22
    91b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    91b8:	cbz	x0, 941c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x11b8>
    91bc:	ldr	w8, [x0, #8]
    91c0:	cbnz	w8, 9438 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x11d4>
    91c4:	ldrb	w8, [x0, #12]
    91c8:	add	x0, sp, #0x58
    91cc:	sub	x1, x29, #0x18
    91d0:	stur	x8, [x29, #-24]
    91d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    91d8:	mov	w8, w23
    91dc:	add	x0, sp, #0x58
    91e0:	sub	x1, x29, #0x18
    91e4:	stur	x8, [x29, #-24]
    91e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    91ec:	ldr	x0, [x19]
    91f0:	add	x2, sp, #0x58
    91f4:	mov	w1, #0x7                   	// #7
    91f8:	mov	w3, w20
    91fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9200:	str	wzr, [sp, #96]
    9204:	ldr	x25, [x25, #8]
    9208:	cmp	x26, x25
    920c:	b.ne	914c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xee8>  // b.any
    9210:	ldr	x8, [x19, #584]
    9214:	ldr	x20, [x8, #152]
    9218:	add	x24, x8, #0x88
    921c:	cmp	x20, x24
    9220:	b.eq	92f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x108c>  // b.none
    9224:	ldp	x9, x8, [sp, #24]
    9228:	add	x22, x19, #0x18
    922c:	sub	x8, x8, x9
    9230:	lsr	x8, x8, #4
    9234:	add	w21, w8, #0x3
    9238:	ldp	x1, x2, [x20, #32]
    923c:	ldr	x23, [x19, #8]
    9240:	sub	x0, x29, #0x18
    9244:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9248:	ldp	x1, x2, [x29, #-24]
    924c:	mov	x0, x23
    9250:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    9254:	stur	x0, [x29, #-24]
    9258:	add	x0, sp, #0x58
    925c:	sub	x1, x29, #0x18
    9260:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9264:	ldr	x8, [x20, #40]
    9268:	add	x0, sp, #0x58
    926c:	sub	x1, x29, #0x18
    9270:	stur	x8, [x29, #-24]
    9274:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9278:	ldp	x23, x25, [x20, #64]
    927c:	cmp	x23, x25
    9280:	b.eq	92c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1060>  // b.none
    9284:	add	x0, sp, #0x58
    9288:	mov	x1, x23
    928c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9290:	ldr	x8, [x23, #8]
    9294:	tbz	w8, #0, 9334 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10d0>
    9298:	and	x8, x8, #0xfffffffffffffff8
    929c:	ldr	x1, [x8, #8]
    92a0:	mov	x0, x22
    92a4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    92a8:	mov	w8, w0
    92ac:	add	x0, sp, #0x58
    92b0:	sub	x1, x29, #0x18
    92b4:	stur	x8, [x29, #-24]
    92b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    92bc:	add	x23, x23, #0x10
    92c0:	b	927c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1018>
    92c4:	ldr	x0, [x19]
    92c8:	add	x2, sp, #0x58
    92cc:	mov	w1, #0x16                  	// #22
    92d0:	mov	w3, w21
    92d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    92d8:	mov	x0, x20
    92dc:	str	wzr, [sp, #96]
    92e0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    92e4:	mov	x20, x0
    92e8:	cmp	x0, x24
    92ec:	b.ne	9238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xfd4>  // b.any
    92f0:	ldr	x0, [x19]
    92f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    92f8:	ldr	x0, [sp, #88]
    92fc:	add	x8, sp, #0x58
    9300:	add	x8, x8, #0x10
    9304:	cmp	x0, x8
    9308:	b.eq	9310 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10ac>  // b.none
    930c:	bl	0 <free>
    9310:	add	sp, sp, #0x2e0
    9314:	ldp	x20, x19, [sp, #96]
    9318:	ldp	x22, x21, [sp, #80]
    931c:	ldp	x24, x23, [sp, #64]
    9320:	ldp	x26, x25, [sp, #48]
    9324:	ldp	x28, x27, [sp, #32]
    9328:	ldp	x29, x30, [sp, #16]
    932c:	ldp	d9, d8, [sp], #112
    9330:	ret
    9334:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9338:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    933c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9340:	add	x0, x0, #0x0
    9344:	add	x1, x1, #0x0
    9348:	add	x3, x3, #0x0
    934c:	mov	w2, #0xb4                  	// #180
    9350:	bl	0 <__assert_fail>
    9354:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9358:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    935c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9360:	add	x0, x0, #0x0
    9364:	add	x1, x1, #0x0
    9368:	add	x3, x3, #0x0
    936c:	mov	w2, #0xe6                  	// #230
    9370:	bl	0 <__assert_fail>
    9374:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9378:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    937c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9380:	add	x0, x0, #0x0
    9384:	add	x1, x1, #0x0
    9388:	add	x3, x3, #0x0
    938c:	b	93d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1170>
    9390:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9394:	add	x0, x0, #0x0
    9398:	mov	w1, #0x1                   	// #1
    939c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    93a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93ac:	add	x0, x0, #0x0
    93b0:	add	x1, x1, #0x0
    93b4:	add	x3, x3, #0x0
    93b8:	b	93d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1170>
    93bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93c8:	add	x0, x0, #0x0
    93cc:	add	x1, x1, #0x0
    93d0:	add	x3, x3, #0x0
    93d4:	mov	w2, #0x8b                  	// #139
    93d8:	bl	0 <__assert_fail>
    93dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    93e8:	add	x0, x0, #0x0
    93ec:	add	x1, x1, #0x0
    93f0:	add	x3, x3, #0x0
    93f4:	mov	w2, #0xf07                 	// #3847
    93f8:	bl	0 <__assert_fail>
    93fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9400:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9404:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9408:	add	x0, x0, #0x0
    940c:	add	x1, x1, #0x0
    9410:	add	x3, x3, #0x0
    9414:	mov	w2, #0xe6d                 	// #3693
    9418:	bl	0 <__assert_fail>
    941c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9420:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9424:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9428:	add	x0, x0, #0x0
    942c:	add	x1, x1, #0x0
    9430:	add	x3, x3, #0x0
    9434:	b	94a4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1240>
    9438:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    943c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9440:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9444:	add	x0, x0, #0x0
    9448:	add	x1, x1, #0x0
    944c:	add	x3, x3, #0x0
    9450:	b	94c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1260>
    9454:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9458:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    945c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9460:	add	x0, x0, #0x0
    9464:	add	x1, x1, #0x0
    9468:	add	x3, x3, #0x0
    946c:	b	94a4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1240>
    9470:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9474:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9478:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    947c:	add	x0, x0, #0x0
    9480:	add	x1, x1, #0x0
    9484:	add	x3, x3, #0x0
    9488:	b	94c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1260>
    948c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9490:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9494:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9498:	add	x0, x0, #0x0
    949c:	add	x1, x1, #0x0
    94a0:	add	x3, x3, #0x0
    94a4:	mov	w2, #0x69                  	// #105
    94a8:	bl	0 <__assert_fail>
    94ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94b4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94b8:	add	x0, x0, #0x0
    94bc:	add	x1, x1, #0x0
    94c0:	add	x3, x3, #0x0
    94c4:	mov	w2, #0x108                 	// #264
    94c8:	bl	0 <__assert_fail>
    94cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94d8:	add	x0, x0, #0x0
    94dc:	add	x1, x1, #0x0
    94e0:	add	x3, x3, #0x0
    94e4:	mov	w2, #0x134                 	// #308
    94e8:	bl	0 <__assert_fail>
    94ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    94f8:	add	x0, x0, #0x0
    94fc:	add	x1, x1, #0x0
    9500:	add	x3, x3, #0x0
    9504:	b	94a4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1240>
    9508:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    950c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9510:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9514:	add	x0, x0, #0x0
    9518:	add	x1, x1, #0x0
    951c:	add	x3, x3, #0x0
    9520:	b	94c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1260>
    9524:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9528:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    952c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9530:	add	x0, x0, #0x0
    9534:	add	x1, x1, #0x0
    9538:	add	x3, x3, #0x0
    953c:	b	94c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1260>

0000000000009540 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>:
    9540:	sub	sp, sp, #0x170
    9544:	stp	x29, x30, [sp, #288]
    9548:	stp	x28, x25, [sp, #304]
    954c:	stp	x24, x23, [sp, #320]
    9550:	stp	x22, x21, [sp, #336]
    9554:	stp	x20, x19, [sp, #352]
    9558:	add	x29, sp, #0x120
    955c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9560:	ldr	d0, [x8]
    9564:	add	x8, sp, #0x10
    9568:	mov	w21, w4
    956c:	mov	x22, x3
    9570:	mov	w19, w1
    9574:	mov	x20, x0
    9578:	add	x24, x8, #0x10
    957c:	str	x24, [sp, #16]
    9580:	str	d0, [sp, #24]
    9584:	cbz	w22, 95fc <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xbc>
    9588:	mov	x23, x2
    958c:	mov	x25, xzr
    9590:	cbz	w21, 95d4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x94>
    9594:	cmp	x22, x25
    9598:	b.ls	963c <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xfc>  // b.plast
    959c:	ldrb	w8, [x23, x25]
    95a0:	sub	w9, w8, #0x30
    95a4:	cmp	w9, #0xa
    95a8:	b.cc	95d4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x94>  // b.lo, b.ul, b.last
    95ac:	and	w9, w8, #0xffffffdf
    95b0:	sub	w9, w9, #0x41
    95b4:	and	w9, w9, #0xff
    95b8:	cmp	w9, #0x1a
    95bc:	b.cc	95d4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x94>  // b.lo, b.ul, b.last
    95c0:	cmp	w8, #0x5f
    95c4:	b.eq	95d4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x94>  // b.none
    95c8:	cmp	w8, #0x2e
    95cc:	b.eq	95d4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x94>  // b.none
    95d0:	mov	w21, wzr
    95d4:	cmp	x22, x25
    95d8:	b.ls	963c <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xfc>  // b.plast
    95dc:	ldrb	w8, [x23, x25]
    95e0:	add	x0, sp, #0x10
    95e4:	add	x1, sp, #0xc
    95e8:	str	w8, [sp, #12]
    95ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    95f0:	add	x25, x25, #0x1
    95f4:	cmp	w22, w25
    95f8:	b.ne	9590 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x50>  // b.any
    95fc:	add	x2, sp, #0x10
    9600:	mov	x0, x20
    9604:	mov	w1, w19
    9608:	mov	w3, w21
    960c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9610:	ldr	x0, [sp, #16]
    9614:	cmp	x0, x24
    9618:	b.eq	9620 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xe0>  // b.none
    961c:	bl	0 <free>
    9620:	ldp	x20, x19, [sp, #352]
    9624:	ldp	x22, x21, [sp, #336]
    9628:	ldp	x24, x23, [sp, #320]
    962c:	ldp	x28, x25, [sp, #304]
    9630:	ldp	x29, x30, [sp, #288]
    9634:	add	sp, sp, #0x170
    9638:	ret
    963c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9640:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9644:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9648:	add	x0, x0, #0x0
    964c:	add	x1, x1, #0x0
    9650:	add	x3, x3, #0x0
    9654:	mov	w2, #0xfa                  	// #250
    9658:	bl	0 <__assert_fail>

000000000000965c <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>:
    965c:	stp	x29, x30, [sp, #-16]!
    9660:	mov	x29, sp
    9664:	cmp	w0, #0x41
    9668:	b.hi	9888 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x22c>  // b.pmore
    966c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9670:	mov	w8, w0
    9674:	add	x9, x9, #0x0
    9678:	adr	x10, 968c <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x30>
    967c:	ldrb	w11, [x9, x8]
    9680:	add	x10, x10, x11, lsl #2
    9684:	mov	w0, #0x1                   	// #1
    9688:	br	x10
    968c:	mov	w0, #0x33                  	// #51
    9690:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9694:	mov	w0, #0x25                  	// #37
    9698:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    969c:	mov	w0, #0x2c                  	// #44
    96a0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96a4:	mov	w0, #0x20                  	// #32
    96a8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96ac:	mov	w0, #0x27                  	// #39
    96b0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96b4:	mov	w0, #0x39                  	// #57
    96b8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96bc:	mov	w0, #0x13                  	// #19
    96c0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96c4:	mov	w0, #0x1a                  	// #26
    96c8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96cc:	mov	w0, #0x36                  	// #54
    96d0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96d4:	mov	w0, #0x2                   	// #2
    96d8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96dc:	mov	w0, #0x3                   	// #3
    96e0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96e4:	mov	w0, #0x3c                  	// #60
    96e8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96ec:	mov	w0, #0x31                  	// #49
    96f0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96f4:	mov	w0, #0x4                   	// #4
    96f8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    96fc:	mov	w0, #0xc                   	// #12
    9700:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9704:	mov	w0, #0x3e                  	// #62
    9708:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    970c:	mov	w0, #0xf                   	// #15
    9710:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9714:	mov	w0, #0x16                  	// #22
    9718:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    971c:	mov	w0, #0x1e                  	// #30
    9720:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9724:	mov	w0, #0x1f                  	// #31
    9728:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    972c:	mov	w0, #0x3a                  	// #58
    9730:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9734:	mov	w0, #0x2f                  	// #47
    9738:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    973c:	mov	w0, #0x21                  	// #33
    9740:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9744:	mov	w0, #0x2d                  	// #45
    9748:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    974c:	mov	w0, #0x23                  	// #35
    9750:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9754:	mov	w0, #0x24                  	// #36
    9758:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    975c:	mov	w0, #0x2b                  	// #43
    9760:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9764:	mov	w0, #0x29                  	// #41
    9768:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    976c:	mov	w0, #0x2a                  	// #42
    9770:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9774:	mov	w0, #0x26                  	// #38
    9778:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    977c:	mov	w0, #0x5                   	// #5
    9780:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9784:	mov	w0, #0x32                  	// #50
    9788:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    978c:	mov	w0, #0x28                  	// #40
    9790:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9794:	mov	w0, #0x6                   	// #6
    9798:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    979c:	mov	w0, #0x7                   	// #7
    97a0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97a4:	mov	w0, #0x8                   	// #8
    97a8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97ac:	mov	w0, #0x9                   	// #9
    97b0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97b4:	mov	w0, #0xa                   	// #10
    97b8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97bc:	mov	w0, #0xb                   	// #11
    97c0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97c4:	mov	w0, #0x38                  	// #56
    97c8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97cc:	mov	w0, #0x11                  	// #17
    97d0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97d4:	mov	w0, #0x3f                  	// #63
    97d8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97dc:	mov	w0, #0x12                  	// #18
    97e0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97e4:	mov	w0, #0x15                  	// #21
    97e8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97ec:	mov	w0, #0x17                  	// #23
    97f0:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97f4:	mov	w0, #0x18                  	// #24
    97f8:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    97fc:	mov	w0, #0x37                  	// #55
    9800:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9804:	mov	w0, #0x3d                  	// #61
    9808:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    980c:	mov	w0, #0x34                  	// #52
    9810:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9814:	mov	w0, #0x22                  	// #34
    9818:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    981c:	mov	w0, #0xd                   	// #13
    9820:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9824:	mov	w0, #0x30                  	// #48
    9828:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    982c:	mov	w0, #0x10                  	// #16
    9830:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9834:	mov	w0, #0x14                  	// #20
    9838:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    983c:	mov	w0, #0x1b                  	// #27
    9840:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9844:	mov	w0, #0x1d                  	// #29
    9848:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    984c:	mov	w0, #0x2e                  	// #46
    9850:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9854:	mov	w0, #0xe                   	// #14
    9858:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    985c:	mov	w0, #0x40                  	// #64
    9860:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9864:	mov	w0, #0x19                  	// #25
    9868:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    986c:	mov	w0, #0x1c                  	// #28
    9870:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    9874:	mov	w0, #0x35                  	// #53
    9878:	b	9880 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x224>
    987c:	mov	w0, #0x3b                  	// #59
    9880:	ldp	x29, x30, [sp], #16
    9884:	ret
    9888:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    988c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9890:	add	x0, x0, #0x0
    9894:	add	x1, x1, #0x0
    9898:	mov	w2, #0x2df                 	// #735
    989c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    98a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    98a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    98a8:	add	x0, x0, #0x0
    98ac:	add	x1, x1, #0x0
    98b0:	mov	w2, #0x2dc                 	// #732
    98b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    98b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    98bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    98c0:	add	x0, x0, #0x0
    98c4:	add	x1, x1, #0x0
    98c8:	mov	w2, #0x2da                 	// #730
    98cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000098d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE>:
    98d0:	sub	sp, sp, #0x40
    98d4:	stp	x29, x30, [sp, #16]
    98d8:	str	x21, [sp, #32]
    98dc:	stp	x20, x19, [sp, #48]
    98e0:	add	x29, sp, #0x10
    98e4:	ldrb	w8, [x0, #664]
    98e8:	mov	x19, x2
    98ec:	mov	x21, x0
    98f0:	mov	x20, x1
    98f4:	cbz	w8, 9908 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11addToStrtabEN4llvm9StringRefE+0x38>
    98f8:	add	x0, x21, #0x2a8
    98fc:	mov	x1, x20
    9900:	mov	x2, x19
    9904:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    9908:	ldr	x21, [x21, #8]
    990c:	mov	x0, sp
    9910:	mov	x1, x20
    9914:	mov	x2, x19
    9918:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    991c:	ldp	x1, x2, [sp]
    9920:	mov	x0, x21
    9924:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    9928:	ldp	x20, x19, [sp, #48]
    992c:	ldr	x21, [sp, #32]
    9930:	ldp	x29, x30, [sp, #16]
    9934:	add	sp, sp, #0x40
    9938:	ret

000000000000993c <_ZL17getStringEncodingN4llvm9StringRefE>:
    993c:	mov	w8, #0x1                   	// #1
    9940:	cbz	x1, 999c <_ZL17getStringEncodingN4llvm9StringRefE+0x60>
    9944:	ldrb	w9, [x0]
    9948:	tbz	w8, #0, 9984 <_ZL17getStringEncodingN4llvm9StringRefE+0x48>
    994c:	sub	w8, w9, #0x30
    9950:	cmp	w8, #0xa
    9954:	mov	w8, #0x1                   	// #1
    9958:	b.cc	9988 <_ZL17getStringEncodingN4llvm9StringRefE+0x4c>  // b.lo, b.ul, b.last
    995c:	and	w10, w9, #0xffffffdf
    9960:	sub	w10, w10, #0x41
    9964:	and	w10, w10, #0xff
    9968:	cmp	w10, #0x1a
    996c:	b.cc	9988 <_ZL17getStringEncodingN4llvm9StringRefE+0x4c>  // b.lo, b.ul, b.last
    9970:	cmp	w9, #0x2e
    9974:	mov	w8, #0x1                   	// #1
    9978:	b.eq	9990 <_ZL17getStringEncodingN4llvm9StringRefE+0x54>  // b.none
    997c:	cmp	w9, #0x5f
    9980:	b.eq	9990 <_ZL17getStringEncodingN4llvm9StringRefE+0x54>  // b.none
    9984:	mov	w8, wzr
    9988:	sxtb	w9, w9
    998c:	tbnz	w9, #31, 99a4 <_ZL17getStringEncodingN4llvm9StringRefE+0x68>
    9990:	subs	x1, x1, #0x1
    9994:	add	x0, x0, #0x1
    9998:	b.ne	9944 <_ZL17getStringEncodingN4llvm9StringRefE+0x8>  // b.any
    999c:	eor	w0, w8, #0x1
    99a0:	ret
    99a4:	mov	w0, #0x2                   	// #2
    99a8:	ret

00000000000099ac <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE>:
    99ac:	stp	x29, x30, [sp, #-16]!
    99b0:	mov	x29, sp
    99b4:	ldr	w8, [x0, #32]
    99b8:	and	x8, x8, #0xf
    99bc:	cmp	w8, #0xb
    99c0:	b.cs	99d8 <_ZL17getEncodedLinkageRKN4llvm11GlobalValueE+0x2c>  // b.hs, b.nlast
    99c4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    99c8:	add	x9, x9, #0x0
    99cc:	ldr	w0, [x9, x8, lsl #2]
    99d0:	ldp	x29, x30, [sp], #16
    99d4:	ret
    99d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    99dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    99e0:	add	x0, x0, #0x0
    99e4:	add	x1, x1, #0x0
    99e8:	mov	w2, #0x3e3                 	// #995
    99ec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000099f0 <_ZL20getEncodedVisibilityRKN4llvm11GlobalValueE>:
    99f0:	stp	x29, x30, [sp, #-16]!
    99f4:	mov	x29, sp
    99f8:	ldr	w8, [x0, #32]
    99fc:	ubfx	w0, w8, #4, #2
    9a00:	cmp	w0, #0x3
    9a04:	b.eq	9a10 <_ZL20getEncodedVisibilityRKN4llvm11GlobalValueE+0x20>  // b.none
    9a08:	ldp	x29, x30, [sp], #16
    9a0c:	ret
    9a10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a18:	add	x0, x0, #0x0
    9a1c:	add	x1, x1, #0x0
    9a20:	mov	w2, #0x411                 	// #1041
    9a24:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000009a28 <_ZL25getEncodedThreadLocalModeRKN4llvm11GlobalValueE>:
    9a28:	stp	x29, x30, [sp, #-16]!
    9a2c:	mov	x29, sp
    9a30:	ldr	w8, [x0, #32]
    9a34:	ubfx	w0, w8, #10, #3
    9a38:	cmp	w0, #0x5
    9a3c:	b.cs	9a48 <_ZL25getEncodedThreadLocalModeRKN4llvm11GlobalValueE+0x20>  // b.hs, b.nlast
    9a40:	ldp	x29, x30, [sp], #16
    9a44:	ret
    9a48:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a4c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a50:	add	x0, x0, #0x0
    9a54:	add	x1, x1, #0x0
    9a58:	mov	w2, #0x425                 	// #1061
    9a5c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000009a60 <_ZL21getEncodedUnnamedAddrRKN4llvm11GlobalValueE>:
    9a60:	stp	x29, x30, [sp, #-16]!
    9a64:	mov	x29, sp
    9a68:	ldr	w8, [x0, #32]
    9a6c:	ubfx	x8, x8, #6, #2
    9a70:	cmp	w8, #0x3
    9a74:	b.eq	9a8c <_ZL21getEncodedUnnamedAddrRKN4llvm11GlobalValueE+0x2c>  // b.none
    9a78:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a7c:	add	x9, x9, #0x0
    9a80:	ldr	w0, [x9, x8, lsl #2]
    9a84:	ldp	x29, x30, [sp], #16
    9a88:	ret
    9a8c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a90:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9a94:	add	x0, x0, #0x0
    9a98:	add	x1, x1, #0x0
    9a9c:	mov	w2, #0x43e                 	// #1086
    9aa0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000009aa4 <_ZL25getEncodedDLLStorageClassRKN4llvm11GlobalValueE>:
    9aa4:	stp	x29, x30, [sp, #-16]!
    9aa8:	mov	x29, sp
    9aac:	ldr	w8, [x0, #32]
    9ab0:	ubfx	w0, w8, #8, #2
    9ab4:	cmp	w0, #0x3
    9ab8:	b.eq	9ac4 <_ZL25getEncodedDLLStorageClassRKN4llvm11GlobalValueE+0x20>  // b.none
    9abc:	ldp	x29, x30, [sp], #16
    9ac0:	ret
    9ac4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9ac8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9acc:	add	x0, x0, #0x0
    9ad0:	add	x1, x1, #0x0
    9ad4:	mov	w2, #0x41a                 	// #1050
    9ad8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000009adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>:
    9adc:	stp	d9, d8, [sp, #-112]!
    9ae0:	stp	x29, x30, [sp, #16]
    9ae4:	stp	x28, x27, [sp, #32]
    9ae8:	stp	x26, x25, [sp, #48]
    9aec:	stp	x24, x23, [sp, #64]
    9af0:	stp	x22, x21, [sp, #80]
    9af4:	stp	x20, x19, [sp, #96]
    9af8:	mov	x29, sp
    9afc:	sub	sp, sp, #0x2c0
    9b00:	cmp	w1, w2
    9b04:	b.eq	ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10a4>  // b.none
    9b08:	mov	x21, x0
    9b0c:	ldr	x0, [x0]
    9b10:	mov	w28, w2
    9b14:	mov	w20, w1
    9b18:	mov	w1, #0xb                   	// #11
    9b1c:	mov	w2, #0x4                   	// #4
    9b20:	mov	w22, w3
    9b24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9b28:	tbz	w22, #0, 9eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x3d0>
    9b2c:	mov	w0, #0x220                 	// #544
    9b30:	bl	0 <_Znwm>
    9b34:	adrp	x25, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9b38:	ldr	x25, [x25]
    9b3c:	movi	v9.2s, #0x1
    9b40:	add	x23, x0, #0x20
    9b44:	mov	x22, x0
    9b48:	add	x27, x25, #0x10
    9b4c:	str	d9, [x0, #8]
    9b50:	str	x27, [x0]
    9b54:	mov	w2, #0x200                 	// #512
    9b58:	mov	x0, x23
    9b5c:	mov	w1, wzr
    9b60:	bl	0 <memset>
    9b64:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9b68:	ldr	d8, [x8]
    9b6c:	mov	x24, x22
    9b70:	str	x23, [x24, #16]!
    9b74:	mov	w9, #0x7                   	// #7
    9b78:	mov	w8, #0xff                  	// #255
    9b7c:	add	x1, sp, #0x68
    9b80:	mov	x0, x24
    9b84:	str	x9, [sp, #104]
    9b88:	str	d8, [x22, #24]
    9b8c:	strb	w8, [sp, #112]
    9b90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9b94:	ldrb	w8, [sp, #112]
    9b98:	add	x1, sp, #0x68
    9b9c:	mov	x0, x24
    9ba0:	str	xzr, [sp, #104]
    9ba4:	and	w8, w8, #0xf0
    9ba8:	orr	w8, w8, #0x6
    9bac:	strb	w8, [sp, #112]
    9bb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9bb4:	ldrb	w9, [sp, #112]
    9bb8:	clz	w8, w28
    9bbc:	mov	w10, #0x20                  	// #32
    9bc0:	sub	w8, w10, w8
    9bc4:	str	x8, [sp, #104]
    9bc8:	and	w8, w9, #0xf0
    9bcc:	orr	w8, w8, #0x2
    9bd0:	add	x1, sp, #0x68
    9bd4:	mov	x0, x24
    9bd8:	strb	w8, [sp, #112]
    9bdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9be0:	ldr	x23, [x21]
    9be4:	mov	x1, x24
    9be8:	stp	x24, x22, [x29, #-24]
    9bec:	mov	x0, x23
    9bf0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9bf4:	add	x0, x23, #0x18
    9bf8:	sub	x1, x29, #0x18
    9bfc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9c00:	ldp	x9, x8, [x23, #24]
    9c04:	ldur	x0, [x29, #-16]
    9c08:	sub	x8, x8, x9
    9c0c:	lsr	x26, x8, #4
    9c10:	cbz	x0, 9c18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13c>
    9c14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9c18:	mov	w0, #0x220                 	// #544
    9c1c:	bl	0 <_Znwm>
    9c20:	add	x23, x0, #0x20
    9c24:	mov	x22, x0
    9c28:	str	d9, [x0, #8]
    9c2c:	str	x27, [x0]
    9c30:	mov	w2, #0x200                 	// #512
    9c34:	mov	x0, x23
    9c38:	mov	w1, wzr
    9c3c:	bl	0 <memset>
    9c40:	ldrb	w8, [sp, #112]
    9c44:	mov	x24, x22
    9c48:	str	x23, [x24, #16]!
    9c4c:	mov	w19, #0x8                   	// #8
    9c50:	orr	w8, w8, #0x1
    9c54:	add	x1, sp, #0x68
    9c58:	mov	x0, x24
    9c5c:	str	d8, [x22, #24]
    9c60:	str	x19, [sp, #104]
    9c64:	strb	w8, [sp, #112]
    9c68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9c6c:	ldrb	w8, [sp, #112]
    9c70:	add	x1, sp, #0x68
    9c74:	mov	x0, x24
    9c78:	str	xzr, [sp, #104]
    9c7c:	and	w8, w8, #0xf0
    9c80:	orr	w8, w8, #0x6
    9c84:	strb	w8, [sp, #112]
    9c88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9c8c:	ldrb	w8, [sp, #112]
    9c90:	add	x1, sp, #0x68
    9c94:	mov	x0, x24
    9c98:	str	x19, [sp, #104]
    9c9c:	and	w8, w8, #0xf0
    9ca0:	orr	w8, w8, #0x2
    9ca4:	strb	w8, [sp, #112]
    9ca8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9cac:	ldr	x23, [x21]
    9cb0:	mov	x1, x24
    9cb4:	stp	x24, x22, [x29, #-40]
    9cb8:	mov	x0, x23
    9cbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9cc0:	add	x0, x23, #0x18
    9cc4:	sub	x1, x29, #0x28
    9cc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9ccc:	ldp	x9, x8, [x23, #24]
    9cd0:	ldur	x0, [x29, #-32]
    9cd4:	sub	x8, x8, x9
    9cd8:	lsr	x19, x8, #4
    9cdc:	cbz	x0, 9ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x208>
    9ce0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9ce4:	add	w8, w26, #0x3
    9ce8:	str	w8, [sp, #36]
    9cec:	add	w8, w19, #0x3
    9cf0:	mov	w0, #0x220                 	// #544
    9cf4:	str	w8, [sp, #32]
    9cf8:	bl	0 <_Znwm>
    9cfc:	movi	v9.2s, #0x1
    9d00:	add	x25, x25, #0x10
    9d04:	add	x23, x0, #0x20
    9d08:	mov	x22, x0
    9d0c:	str	d9, [x0, #8]
    9d10:	str	x25, [x0]
    9d14:	mov	w2, #0x200                 	// #512
    9d18:	mov	x0, x23
    9d1c:	mov	w1, wzr
    9d20:	bl	0 <memset>
    9d24:	ldrb	w8, [sp, #112]
    9d28:	mov	x24, x22
    9d2c:	str	x23, [x24, #16]!
    9d30:	mov	w9, #0x9                   	// #9
    9d34:	orr	w8, w8, #0x1
    9d38:	add	x1, sp, #0x68
    9d3c:	mov	x0, x24
    9d40:	str	d8, [x22, #24]
    9d44:	str	x9, [sp, #104]
    9d48:	strb	w8, [sp, #112]
    9d4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9d50:	ldrb	w8, [sp, #112]
    9d54:	add	x1, sp, #0x68
    9d58:	mov	x0, x24
    9d5c:	str	xzr, [sp, #104]
    9d60:	and	w8, w8, #0xf0
    9d64:	orr	w8, w8, #0x6
    9d68:	strb	w8, [sp, #112]
    9d6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9d70:	ldrb	w8, [sp, #112]
    9d74:	mov	w9, #0x7                   	// #7
    9d78:	add	x1, sp, #0x68
    9d7c:	mov	x0, x24
    9d80:	and	w8, w8, #0xf0
    9d84:	orr	w8, w8, #0x2
    9d88:	str	x9, [sp, #104]
    9d8c:	strb	w8, [sp, #112]
    9d90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9d94:	ldr	x23, [x21]
    9d98:	mov	x1, x24
    9d9c:	stp	x24, x22, [x29, #-56]
    9da0:	mov	x0, x23
    9da4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9da8:	add	x0, x23, #0x18
    9dac:	sub	x1, x29, #0x38
    9db0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9db4:	ldp	x9, x8, [x23, #24]
    9db8:	ldur	x0, [x29, #-48]
    9dbc:	sub	x8, x8, x9
    9dc0:	lsr	x8, x8, #4
    9dc4:	add	w8, w8, #0x3
    9dc8:	str	w8, [sp, #28]
    9dcc:	cbz	x0, 9dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2f8>
    9dd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9dd4:	mov	w0, #0x220                 	// #544
    9dd8:	bl	0 <_Znwm>
    9ddc:	add	x23, x0, #0x20
    9de0:	mov	x22, x0
    9de4:	str	d9, [x0, #8]
    9de8:	str	x25, [x0]
    9dec:	mov	w2, #0x200                 	// #512
    9df0:	mov	x0, x23
    9df4:	mov	w1, wzr
    9df8:	bl	0 <memset>
    9dfc:	ldrb	w8, [sp, #112]
    9e00:	mov	x24, x22
    9e04:	str	x23, [x24, #16]!
    9e08:	mov	w9, #0x9                   	// #9
    9e0c:	orr	w8, w8, #0x1
    9e10:	add	x1, sp, #0x68
    9e14:	mov	x0, x24
    9e18:	str	d8, [x22, #24]
    9e1c:	str	x9, [sp, #104]
    9e20:	strb	w8, [sp, #112]
    9e24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9e28:	ldrb	w8, [sp, #112]
    9e2c:	add	x1, sp, #0x68
    9e30:	mov	x0, x24
    9e34:	str	xzr, [sp, #104]
    9e38:	and	w8, w8, #0xf0
    9e3c:	orr	w8, w8, #0x6
    9e40:	strb	w8, [sp, #112]
    9e44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9e48:	ldrb	w8, [sp, #112]
    9e4c:	add	x1, sp, #0x68
    9e50:	mov	x0, x24
    9e54:	str	xzr, [sp, #104]
    9e58:	and	w8, w8, #0xf0
    9e5c:	orr	w8, w8, #0x8
    9e60:	strb	w8, [sp, #112]
    9e64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9e68:	ldr	x23, [x21]
    9e6c:	mov	x1, x24
    9e70:	stp	x24, x22, [x29, #-72]
    9e74:	mov	x0, x23
    9e78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9e7c:	add	x0, x23, #0x18
    9e80:	sub	x1, x29, #0x48
    9e84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9e88:	ldp	x9, x8, [x23, #24]
    9e8c:	ldur	x0, [x29, #-64]
    9e90:	sub	x8, x8, x9
    9e94:	lsr	x8, x8, #4
    9e98:	add	w8, w8, #0x3
    9e9c:	str	w8, [sp, #24]
    9ea0:	cbz	x0, 9eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x3d4>
    9ea4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9ea8:	b	9eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x3d4>
    9eac:	stp	xzr, xzr, [sp, #24]
    9eb0:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9eb4:	ldr	d0, [x9]
    9eb8:	add	x8, sp, #0x68
    9ebc:	add	x10, sp, #0x30
    9ec0:	mov	x23, xzr
    9ec4:	add	x22, x21, #0x18
    9ec8:	add	x8, x8, #0x10
    9ecc:	add	x9, x10, #0x8
    9ed0:	str	x9, [sp, #40]
    9ed4:	str	x8, [sp, #104]
    9ed8:	str	d0, [sp, #112]
    9edc:	ldr	x8, [x21, #136]
    9ee0:	mov	w9, w20
    9ee4:	lsl	x9, x9, #4
    9ee8:	ldr	x24, [x8, x9]
    9eec:	ldr	x25, [x24]
    9ef0:	cmp	x25, x23
    9ef4:	b.eq	9f40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x464>  // b.none
    9ef8:	mov	x0, x22
    9efc:	mov	x1, x25
    9f00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9f04:	mov	w8, w0
    9f08:	add	x0, sp, #0x68
    9f0c:	add	x1, sp, #0x30
    9f10:	str	x8, [sp, #48]
    9f14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9f18:	ldr	x0, [x21]
    9f1c:	ldr	w3, [sp, #112]
    9f20:	ldr	x2, [sp, #104]
    9f24:	mov	w1, #0x4                   	// #4
    9f28:	mov	x6, #0x100000001           	// #4294967297
    9f2c:	mov	x4, xzr
    9f30:	mov	x5, xzr
    9f34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9f38:	mov	x23, x25
    9f3c:	str	wzr, [sp, #112]
    9f40:	cbz	x24, aba4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10c8>
    9f44:	ldrb	w8, [x24, #16]
    9f48:	cmp	w8, #0x14
    9f4c:	b.ne	9fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4fc>  // b.any
    9f50:	ldrb	w8, [x24, #96]
    9f54:	ldrb	w9, [x24, #97]
    9f58:	ldr	w10, [x24, #100]
    9f5c:	add	x0, sp, #0x68
    9f60:	add	x1, sp, #0x30
    9f64:	orr	x8, x8, x9, lsl #1
    9f68:	lsl	w9, w10, #2
    9f6c:	and	x9, x9, #0x4
    9f70:	orr	x8, x8, x9
    9f74:	str	x8, [sp, #48]
    9f78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9f7c:	ldr	x8, [x24, #32]
    9f80:	add	x0, sp, #0x68
    9f84:	add	x1, sp, #0x30
    9f88:	str	x8, [sp, #48]
    9f8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9f90:	ldp	x1, x8, [x24, #24]
    9f94:	add	x0, sp, #0x68
    9f98:	add	x2, x1, x8
    9f9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9fa0:	ldr	x8, [x24, #64]
    9fa4:	add	x0, sp, #0x68
    9fa8:	add	x1, sp, #0x30
    9fac:	str	x8, [sp, #48]
    9fb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9fb4:	ldp	x1, x8, [x24, #56]
    9fb8:	add	x0, sp, #0x68
    9fbc:	add	x2, x1, x8
    9fc0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9fc4:	ldr	x0, [x21]
    9fc8:	add	x2, sp, #0x68
    9fcc:	mov	w1, #0x17                  	// #23
    9fd0:	mov	w3, wzr
    9fd4:	b	a000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x524>
    9fd8:	cmp	w8, #0x11
    9fdc:	b.cs	abc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10e8>  // b.hs, b.nlast
    9fe0:	mov	x0, x24
    9fe4:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
    9fe8:	tbz	w0, #0, a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x53c>
    9fec:	mov	w3, wzr
    9ff0:	mov	w25, #0x2                   	// #2
    9ff4:	ldr	x0, [x21]
    9ff8:	add	x2, sp, #0x68
    9ffc:	mov	w1, w25
    a000:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a004:	add	w20, w20, #0x1
    a008:	cmp	w20, w28
    a00c:	str	wzr, [sp, #112]
    a010:	b.ne	9edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x400>  // b.any
    a014:	b	ab60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1084>
    a018:	ldrb	w8, [x24, #16]
    a01c:	cmp	w8, #0x9
    a020:	b.eq	a0bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x5e0>  // b.none
    a024:	cmp	w8, #0xe
    a028:	b.eq	a064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x588>  // b.none
    a02c:	cmp	w8, #0xd
    a030:	b.ne	a0c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x5ec>  // b.any
    a034:	ldr	w8, [x24, #32]
    a038:	add	x25, x24, #0x18
    a03c:	cmp	w8, #0x40
    a040:	b.hi	a1c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6ec>  // b.pmore
    a044:	mov	x0, x25
    a048:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a04c:	mov	x1, x0
    a050:	add	x0, sp, #0x68
    a054:	bl	ad0c <_ZL15emitSignedInt64RN4llvm15SmallVectorImplImEEm>
    a058:	mov	w25, #0x4                   	// #4
    a05c:	mov	w3, #0x5                   	// #5
    a060:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a064:	ldr	x8, [x24]
    a068:	ldrb	w8, [x8, #8]
    a06c:	sub	w9, w8, #0x1
    a070:	cmp	w9, #0x3
    a074:	b.cc	a208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x72c>  // b.lo, b.ul, b.last
    a078:	sub	w9, w8, #0x5
    a07c:	cmp	w9, #0x2
    a080:	b.cs	a384 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8a8>  // b.hs, b.nlast
    a084:	add	x0, x24, #0x18
    a088:	add	x8, sp, #0x30
    a08c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a090:	ldr	w8, [sp, #56]
    a094:	ldr	x9, [sp, #48]
    a098:	add	x0, sp, #0x68
    a09c:	cmp	w8, #0x41
    a0a0:	add	x8, sp, #0x30
    a0a4:	csel	x24, x8, x9, cc  // cc = lo, ul, last
    a0a8:	mov	x1, x24
    a0ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a0b0:	add	x1, x24, #0x8
    a0b4:	add	x0, sp, #0x68
    a0b8:	b	a3d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8f8>
    a0bc:	mov	w3, wzr
    a0c0:	mov	w25, #0x3                   	// #3
    a0c4:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a0c8:	sub	w9, w8, #0xb
    a0cc:	cmp	w9, #0x1
    a0d0:	b.hi	a230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x754>  // b.pmore
    a0d4:	mov	w1, #0x8                   	// #8
    a0d8:	mov	x0, x24
    a0dc:	bl	0 <_ZNK4llvm22ConstantDataSequential8isStringEj>
    a0e0:	ldrb	w8, [x24, #16]
    a0e4:	sub	w9, w8, #0xb
    a0e8:	tbz	w0, #0, a224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x748>
    a0ec:	and	w8, w9, #0xff
    a0f0:	cmp	w8, #0x2
    a0f4:	b.cs	abe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1108>  // b.hs, b.nlast
    a0f8:	mov	x0, x24
    a0fc:	str	x22, [sp, #8]
    a100:	str	w28, [sp, #20]
    a104:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
    a108:	mov	w25, w0
    a10c:	mov	x0, x24
    a110:	bl	0 <_ZNK4llvm22ConstantDataSequential9isCStringEv>
    a114:	and	w8, w0, #0x1
    a118:	sub	w19, w25, w8
    a11c:	ldr	w8, [sp, #32]
    a120:	tst	w0, #0x1
    a124:	mov	w26, w0
    a128:	csel	w8, wzr, w8, ne  // ne = any
    a12c:	str	w8, [sp, #4]
    a130:	mov	w8, #0x8                   	// #8
    a134:	cinc	w25, w8, ne  // ne = any
    a138:	cbz	w19, a50c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa30>
    a13c:	mov	w27, wzr
    a140:	mov	w22, w26
    a144:	mov	x0, x24
    a148:	mov	w1, w27
    a14c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
    a150:	mov	x28, x0
    a154:	and	x8, x0, #0xff
    a158:	add	x0, sp, #0x68
    a15c:	add	x1, sp, #0x30
    a160:	str	x8, [sp, #48]
    a164:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a168:	bic	w8, w22, w28, lsr #7
    a16c:	and	w22, w8, #0x1
    a170:	tbz	w26, #0, a1b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6d8>
    a174:	sub	w8, w28, #0x30
    a178:	and	w8, w8, #0xff
    a17c:	cmp	w8, #0xa
    a180:	mov	w26, #0x1                   	// #1
    a184:	b.cc	a1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6dc>  // b.lo, b.ul, b.last
    a188:	and	w8, w28, #0xffffffdf
    a18c:	sub	w8, w8, #0x41
    a190:	and	w8, w8, #0xff
    a194:	cmp	w8, #0x1a
    a198:	b.cc	a1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6dc>  // b.lo, b.ul, b.last
    a19c:	and	w8, w28, #0xff
    a1a0:	cmp	w8, #0x2e
    a1a4:	mov	w26, #0x1                   	// #1
    a1a8:	b.eq	a1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6dc>  // b.none
    a1ac:	cmp	w8, #0x5f
    a1b0:	b.eq	a1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6dc>  // b.none
    a1b4:	mov	w26, wzr
    a1b8:	add	w27, w27, #0x1
    a1bc:	cmp	w19, w27
    a1c0:	b.ne	a144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x668>  // b.any
    a1c4:	b	a510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa34>
    a1c8:	mov	x0, x25
    a1cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a1d0:	ldr	w8, [x24, #32]
    a1d4:	cmp	w8, #0x40
    a1d8:	b.ls	a1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x704>  // b.plast
    a1dc:	ldr	x25, [x25]
    a1e0:	cbz	w0, a1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x720>
    a1e4:	mov	w19, w0
    a1e8:	ldr	x1, [x25], #8
    a1ec:	add	x0, sp, #0x68
    a1f0:	bl	ad0c <_ZL15emitSignedInt64RN4llvm15SmallVectorImplImEEm>
    a1f4:	subs	x19, x19, #0x1
    a1f8:	b.ne	a1e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x70c>  // b.any
    a1fc:	mov	w3, wzr
    a200:	mov	w25, #0x5                   	// #5
    a204:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a208:	add	x0, x24, #0x18
    a20c:	add	x8, sp, #0x30
    a210:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a214:	add	x0, sp, #0x30
    a218:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a21c:	str	x0, [sp, #80]
    a220:	b	a3cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8f0>
    a224:	and	w9, w9, #0xff
    a228:	cmp	w9, #0x1
    a22c:	b.ls	a49c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9c0>  // b.plast
    a230:	sub	w9, w8, #0x6
    a234:	cmp	w9, #0x2
    a238:	b.hi	a2a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x7c4>  // b.pmore
    a23c:	ldr	w8, [x24, #20]
    a240:	tbnz	w8, #30, a3fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x920>
    a244:	and	w8, w8, #0xfffffff
    a248:	mov	w9, #0x18                  	// #24
    a24c:	mneg	x9, x8, x9
    a250:	mov	x10, x22
    a254:	add	x19, x24, x9
    a258:	cbz	x8, a40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x930>
    a25c:	add	x8, x8, x8, lsl #1
    a260:	lsl	x22, x8, #3
    a264:	mov	x24, x10
    a268:	ldr	x1, [x19], #24
    a26c:	mov	x0, x24
    a270:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a274:	mov	w8, w0
    a278:	add	x0, sp, #0x68
    a27c:	add	x1, sp, #0x30
    a280:	str	x8, [sp, #48]
    a284:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a288:	subs	x22, x22, #0x18
    a28c:	mov	w25, #0x7                   	// #7
    a290:	b.ne	a268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x78c>  // b.any
    a294:	ldr	w3, [sp, #36]
    a298:	mov	x22, x24
    a29c:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a2a0:	cmp	w8, #0x4
    a2a4:	b.eq	a41c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x940>  // b.none
    a2a8:	cmp	w8, #0x5
    a2ac:	b.ne	ac00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1124>  // b.any
    a2b0:	ldrh	w0, [x24, #18]
    a2b4:	sub	w8, w0, #0x35
    a2b8:	cmp	w8, #0xa
    a2bc:	b.hi	a5cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xaf0>  // b.pmore
    a2c0:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a2c4:	add	x11, x11, #0x0
    a2c8:	adr	x9, a2d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x7fc>
    a2cc:	ldrh	w10, [x11, x8, lsl #1]
    a2d0:	add	x9, x9, x10, lsl #2
    a2d4:	br	x9
    a2d8:	mov	x0, x24
    a2dc:	mov	w1, wzr
    a2e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a2e4:	ldr	x1, [x0]
    a2e8:	mov	x0, x22
    a2ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a2f0:	mov	w8, w0
    a2f4:	add	x0, sp, #0x68
    a2f8:	add	x1, sp, #0x30
    a2fc:	str	x8, [sp, #48]
    a300:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a304:	mov	x0, x24
    a308:	mov	w1, wzr
    a30c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a310:	mov	x1, x0
    a314:	mov	x0, x22
    a318:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a31c:	mov	w8, w0
    a320:	add	x0, sp, #0x68
    a324:	add	x1, sp, #0x30
    a328:	str	x8, [sp, #48]
    a32c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a330:	mov	w1, #0x1                   	// #1
    a334:	mov	x0, x24
    a338:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a33c:	mov	x1, x0
    a340:	mov	x0, x22
    a344:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a348:	mov	w8, w0
    a34c:	add	x0, sp, #0x68
    a350:	add	x1, sp, #0x30
    a354:	str	x8, [sp, #48]
    a358:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a35c:	mov	x0, x24
    a360:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
    a364:	mov	w8, w0
    a368:	add	x0, sp, #0x68
    a36c:	add	x1, sp, #0x30
    a370:	str	x8, [sp, #48]
    a374:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a378:	mov	w3, wzr
    a37c:	mov	w25, #0x11                  	// #17
    a380:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a384:	cmp	w8, #0x4
    a388:	b.ne	ac20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1144>  // b.any
    a38c:	add	x0, x24, #0x18
    a390:	add	x8, sp, #0x30
    a394:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a398:	ldr	w8, [sp, #56]
    a39c:	ldr	x9, [sp, #48]
    a3a0:	add	x0, sp, #0x68
    a3a4:	add	x1, sp, #0x50
    a3a8:	cmp	w8, #0x41
    a3ac:	add	x8, sp, #0x30
    a3b0:	csel	x19, x8, x9, cc  // cc = lo, ul, last
    a3b4:	ldp	x9, x8, [x19]
    a3b8:	extr	x8, x8, x9, #16
    a3bc:	str	x8, [sp, #80]
    a3c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a3c4:	ldrh	w8, [x19]
    a3c8:	str	x8, [sp, #80]
    a3cc:	add	x0, sp, #0x68
    a3d0:	add	x1, sp, #0x50
    a3d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a3d8:	ldr	w8, [sp, #56]
    a3dc:	cmp	w8, #0x41
    a3e0:	b.cc	a3f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x914>  // b.lo, b.ul, b.last
    a3e4:	ldr	x0, [sp, #48]
    a3e8:	cbz	x0, a3f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x914>
    a3ec:	bl	0 <_ZdaPv>
    a3f0:	mov	w3, wzr
    a3f4:	mov	w25, #0x6                   	// #6
    a3f8:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a3fc:	ldur	x19, [x24, #-8]
    a400:	mov	x10, x22
    a404:	and	x8, x8, #0xfffffff
    a408:	cbnz	x8, a25c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x780>
    a40c:	ldr	w3, [sp, #36]
    a410:	mov	w25, #0x7                   	// #7
    a414:	mov	x22, x10
    a418:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a41c:	ldur	x8, [x24, #-48]
    a420:	ldr	x1, [x8]
    a424:	cbz	x1, ac40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1164>
    a428:	ldrb	w8, [x1, #8]
    a42c:	cmp	w8, #0xf
    a430:	b.ne	ac5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1180>  // b.any
    a434:	mov	x0, x22
    a438:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a43c:	mov	w8, w0
    a440:	add	x0, sp, #0x68
    a444:	add	x1, sp, #0x30
    a448:	str	x8, [sp, #48]
    a44c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a450:	ldur	x1, [x24, #-48]
    a454:	mov	x0, x22
    a458:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a45c:	mov	w8, w0
    a460:	add	x0, sp, #0x68
    a464:	add	x1, sp, #0x30
    a468:	str	x8, [sp, #48]
    a46c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a470:	ldur	x1, [x24, #-24]
    a474:	mov	x0, x22
    a478:	bl	0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>
    a47c:	mov	w8, w0
    a480:	add	x0, sp, #0x68
    a484:	add	x1, sp, #0x30
    a488:	str	x8, [sp, #48]
    a48c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a490:	mov	w3, wzr
    a494:	mov	w25, #0x15                  	// #21
    a498:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a49c:	ldr	x19, [x24]
    a4a0:	add	x0, sp, #0x30
    a4a4:	str	x19, [sp, #48]
    a4a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a4ac:	tbz	w0, #0, ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x119c>
    a4b0:	ldr	x8, [x19, #24]
    a4b4:	cbz	x8, ac94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11b8>
    a4b8:	ldrb	w19, [x8, #8]
    a4bc:	mov	x0, x24
    a4c0:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
    a4c4:	cmp	w19, #0xb
    a4c8:	mov	w26, w0
    a4cc:	b.ne	a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa58>  // b.any
    a4d0:	cbz	w26, a5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xae4>
    a4d4:	mov	w27, wzr
    a4d8:	mov	x0, x24
    a4dc:	mov	w1, w27
    a4e0:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
    a4e4:	str	x0, [sp, #48]
    a4e8:	add	x0, sp, #0x68
    a4ec:	add	x1, sp, #0x30
    a4f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a4f4:	add	w27, w27, #0x1
    a4f8:	mov	w3, wzr
    a4fc:	cmp	w26, w27
    a500:	mov	w25, #0x16                  	// #22
    a504:	b.ne	a4d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9fc>  // b.any
    a508:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a50c:	mov	w22, w26
    a510:	ldr	w8, [sp, #28]
    a514:	ldr	w9, [sp, #4]
    a518:	tst	w22, #0x1
    a51c:	ldr	x22, [sp, #8]
    a520:	csel	w8, w8, w9, ne  // ne = any
    a524:	ldp	w28, w9, [sp, #20]
    a528:	tst	w26, #0x1
    a52c:	csel	w3, w9, w8, ne  // ne = any
    a530:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a534:	cbz	w26, a5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xae4>
    a538:	mov	w27, wzr
    a53c:	add	x8, sp, #0x30
    a540:	mov	x0, x24
    a544:	mov	w1, w27
    a548:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsAPFloatEj>
    a54c:	add	x8, sp, #0x50
    a550:	add	x0, sp, #0x30
    a554:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a558:	add	x0, sp, #0x50
    a55c:	mov	x1, #0xffffffffffffffff    	// #-1
    a560:	mov	x25, #0xffffffffffffffff    	// #-1
    a564:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a568:	tbnz	w0, #0, a578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa9c>
    a56c:	add	x0, sp, #0x50
    a570:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a574:	mov	x25, x0
    a578:	add	x0, sp, #0x68
    a57c:	add	x1, sp, #0x60
    a580:	str	x25, [sp, #96]
    a584:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a588:	ldr	w8, [sp, #88]
    a58c:	cmp	w8, #0x41
    a590:	b.cc	a5a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xac4>  // b.lo, b.ul, b.last
    a594:	ldr	x0, [sp, #80]
    a598:	cbz	x0, a5a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xac4>
    a59c:	bl	0 <_ZdaPv>
    a5a0:	ldr	x0, [sp, #40]
    a5a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a5a8:	add	w27, w27, #0x1
    a5ac:	mov	w3, wzr
    a5b0:	cmp	w26, w27
    a5b4:	mov	w25, #0x16                  	// #22
    a5b8:	b.ne	a53c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa60>  // b.any
    a5bc:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a5c0:	mov	w3, wzr
    a5c4:	mov	w25, #0x16                  	// #22
    a5c8:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a5cc:	cmp	w0, #0xc
    a5d0:	b.eq	a914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe38>  // b.none
    a5d4:	cmp	w0, #0x22
    a5d8:	b.ne	a634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb58>  // b.any
    a5dc:	add	x0, sp, #0x30
    a5e0:	str	x24, [sp, #48]
    a5e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a5e8:	tbz	w0, #0, acb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11d4>
    a5ec:	mov	x0, x24
    a5f0:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    a5f4:	mov	x1, x0
    a5f8:	mov	x0, x22
    a5fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a600:	mov	w8, w0
    a604:	add	x0, sp, #0x68
    a608:	add	x1, sp, #0x30
    a60c:	str	x8, [sp, #48]
    a610:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a614:	ldrb	w8, [x24, #17]
    a618:	cmp	x8, #0x4
    a61c:	b.cs	aa30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf54>  // b.hs, b.nlast
    a620:	tst	w8, #0x2
    a624:	mov	w8, #0x14                  	// #20
    a628:	mov	w9, #0xc                   	// #12
    a62c:	csel	w25, w9, w8, eq  // eq = none
    a630:	b	aa58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf7c>
    a634:	sub	w8, w0, #0x26
    a638:	cmp	w8, #0xc
    a63c:	b.hi	a988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xeac>  // b.pmore
    a640:	bl	ad44 <_ZL20getEncodedCastOpcodej>
    a644:	mov	w8, w0
    a648:	add	x0, sp, #0x68
    a64c:	add	x1, sp, #0x30
    a650:	str	x8, [sp, #48]
    a654:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a658:	mov	x0, x24
    a65c:	mov	w1, wzr
    a660:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a664:	ldr	x1, [x0]
    a668:	mov	x0, x22
    a66c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a670:	mov	w8, w0
    a674:	add	x0, sp, #0x68
    a678:	add	x1, sp, #0x30
    a67c:	str	x8, [sp, #48]
    a680:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a684:	mov	x0, x24
    a688:	mov	w1, wzr
    a68c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a690:	mov	x1, x0
    a694:	mov	x0, x22
    a698:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a69c:	mov	w8, w0
    a6a0:	add	x0, sp, #0x68
    a6a4:	add	x1, sp, #0x30
    a6a8:	str	x8, [sp, #48]
    a6ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a6b0:	mov	w25, #0xb                   	// #11
    a6b4:	mov	w3, #0x6                   	// #6
    a6b8:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a6bc:	mov	x0, x24
    a6c0:	mov	w1, wzr
    a6c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a6c8:	mov	x1, x0
    a6cc:	mov	x0, x22
    a6d0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a6d4:	mov	w8, w0
    a6d8:	add	x0, sp, #0x68
    a6dc:	add	x1, sp, #0x30
    a6e0:	str	x8, [sp, #48]
    a6e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a6e8:	mov	w1, #0x1                   	// #1
    a6ec:	mov	x0, x24
    a6f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a6f4:	mov	x1, x0
    a6f8:	mov	x0, x22
    a6fc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a700:	mov	w8, w0
    a704:	add	x0, sp, #0x68
    a708:	add	x1, sp, #0x30
    a70c:	str	x8, [sp, #48]
    a710:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a714:	mov	w1, #0x2                   	// #2
    a718:	mov	x0, x24
    a71c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a720:	mov	x1, x0
    a724:	mov	x0, x22
    a728:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a72c:	mov	w8, w0
    a730:	add	x0, sp, #0x68
    a734:	add	x1, sp, #0x30
    a738:	str	x8, [sp, #48]
    a73c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a740:	mov	w3, wzr
    a744:	mov	w25, #0xd                   	// #13
    a748:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a74c:	mov	x0, x24
    a750:	mov	w1, wzr
    a754:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a758:	ldr	x1, [x0]
    a75c:	mov	x0, x22
    a760:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a764:	mov	w8, w0
    a768:	add	x0, sp, #0x68
    a76c:	add	x1, sp, #0x30
    a770:	str	x8, [sp, #48]
    a774:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a778:	mov	x0, x24
    a77c:	mov	w1, wzr
    a780:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a784:	mov	x1, x0
    a788:	mov	x0, x22
    a78c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a790:	mov	w8, w0
    a794:	add	x0, sp, #0x68
    a798:	add	x1, sp, #0x30
    a79c:	str	x8, [sp, #48]
    a7a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a7a4:	mov	w1, #0x1                   	// #1
    a7a8:	mov	x0, x24
    a7ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a7b0:	ldr	x1, [x0]
    a7b4:	mov	x0, x22
    a7b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a7bc:	mov	w8, w0
    a7c0:	add	x0, sp, #0x68
    a7c4:	add	x1, sp, #0x30
    a7c8:	str	x8, [sp, #48]
    a7cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a7d0:	mov	w1, #0x1                   	// #1
    a7d4:	mov	x0, x24
    a7d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a7dc:	mov	x1, x0
    a7e0:	mov	x0, x22
    a7e4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a7e8:	mov	w8, w0
    a7ec:	add	x0, sp, #0x68
    a7f0:	add	x1, sp, #0x30
    a7f4:	str	x8, [sp, #48]
    a7f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a7fc:	mov	w3, wzr
    a800:	mov	w25, #0xe                   	// #14
    a804:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a808:	mov	x0, x24
    a80c:	mov	w1, wzr
    a810:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a814:	mov	x1, x0
    a818:	mov	x0, x22
    a81c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a820:	mov	w8, w0
    a824:	add	x0, sp, #0x68
    a828:	add	x1, sp, #0x30
    a82c:	str	x8, [sp, #48]
    a830:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a834:	mov	w1, #0x1                   	// #1
    a838:	mov	x0, x24
    a83c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a840:	mov	x1, x0
    a844:	mov	x0, x22
    a848:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a84c:	mov	w8, w0
    a850:	add	x0, sp, #0x68
    a854:	add	x1, sp, #0x30
    a858:	str	x8, [sp, #48]
    a85c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a860:	mov	w1, #0x2                   	// #2
    a864:	mov	x0, x24
    a868:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a86c:	ldr	x1, [x0]
    a870:	mov	x0, x22
    a874:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a878:	mov	w8, w0
    a87c:	add	x0, sp, #0x68
    a880:	add	x1, sp, #0x30
    a884:	str	x8, [sp, #48]
    a888:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a88c:	mov	w1, #0x2                   	// #2
    a890:	mov	x0, x24
    a894:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a898:	mov	x1, x0
    a89c:	mov	x0, x22
    a8a0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a8a4:	mov	w8, w0
    a8a8:	add	x0, sp, #0x68
    a8ac:	add	x1, sp, #0x30
    a8b0:	str	x8, [sp, #48]
    a8b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a8b8:	mov	w3, wzr
    a8bc:	mov	w25, #0xf                   	// #15
    a8c0:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a8c4:	ldr	x19, [x24]
    a8c8:	mov	x0, x24
    a8cc:	mov	w1, wzr
    a8d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a8d4:	ldr	x8, [x0]
    a8d8:	cmp	x19, x8
    a8dc:	b.eq	aad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xff4>  // b.none
    a8e0:	mov	x0, x24
    a8e4:	mov	w1, wzr
    a8e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a8ec:	ldr	x1, [x0]
    a8f0:	mov	x0, x22
    a8f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a8f8:	mov	w8, w0
    a8fc:	add	x0, sp, #0x68
    a900:	add	x1, sp, #0x30
    a904:	str	x8, [sp, #48]
    a908:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a90c:	mov	w25, #0x13                  	// #19
    a910:	b	aad4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xff8>
    a914:	ldr	w8, [x24, #20]
    a918:	and	w8, w8, #0xfffffff
    a91c:	cmp	w8, #0x1
    a920:	b.ne	accc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11f0>  // b.any
    a924:	add	x0, sp, #0x68
    a928:	add	x1, sp, #0x30
    a92c:	str	xzr, [sp, #48]
    a930:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a934:	mov	x0, x24
    a938:	mov	w1, wzr
    a93c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a940:	mov	x1, x0
    a944:	mov	x0, x22
    a948:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a94c:	mov	w8, w0
    a950:	add	x0, sp, #0x68
    a954:	add	x1, sp, #0x30
    a958:	str	x8, [sp, #48]
    a95c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a960:	mov	x0, x24
    a964:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    a968:	str	x0, [sp, #48]
    a96c:	cbz	x0, a97c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xea0>
    a970:	add	x0, sp, #0x68
    a974:	add	x1, sp, #0x30
    a978:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a97c:	mov	w3, wzr
    a980:	mov	w25, #0x19                  	// #25
    a984:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    a988:	ldr	w8, [x24, #20]
    a98c:	and	w8, w8, #0xfffffff
    a990:	cmp	w8, #0x2
    a994:	b.ne	acec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1210>  // b.any
    a998:	bl	ad74 <_ZL22getEncodedBinaryOpcodej>
    a99c:	mov	w8, w0
    a9a0:	add	x0, sp, #0x68
    a9a4:	add	x1, sp, #0x30
    a9a8:	str	x8, [sp, #48]
    a9ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a9b0:	mov	x0, x24
    a9b4:	mov	w1, wzr
    a9b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a9bc:	mov	x1, x0
    a9c0:	mov	x0, x22
    a9c4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a9c8:	mov	w8, w0
    a9cc:	add	x0, sp, #0x68
    a9d0:	add	x1, sp, #0x30
    a9d4:	str	x8, [sp, #48]
    a9d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a9dc:	mov	w1, #0x1                   	// #1
    a9e0:	mov	x0, x24
    a9e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a9e8:	mov	x1, x0
    a9ec:	mov	x0, x22
    a9f0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    a9f4:	mov	w8, w0
    a9f8:	add	x0, sp, #0x68
    a9fc:	add	x1, sp, #0x30
    aa00:	str	x8, [sp, #48]
    aa04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa08:	mov	x0, x24
    aa0c:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    aa10:	str	x0, [sp, #48]
    aa14:	cbz	x0, aa24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf48>
    aa18:	add	x0, sp, #0x68
    aa1c:	add	x1, sp, #0x30
    aa20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa24:	mov	w3, wzr
    aa28:	mov	w25, #0xa                   	// #10
    aa2c:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    aa30:	ubfx	x9, x8, #2, #30
    aa34:	sub	w9, w9, #0x1
    aa38:	and	x9, x9, #0xff
    aa3c:	ubfx	x8, x8, #1, #1
    aa40:	bfi	x8, x9, #1, #8
    aa44:	add	x0, sp, #0x68
    aa48:	add	x1, sp, #0x30
    aa4c:	str	x8, [sp, #48]
    aa50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa54:	mov	w25, #0x18                  	// #24
    aa58:	ldr	w8, [x24, #20]
    aa5c:	ands	w19, w8, #0xfffffff
    aa60:	b.eq	ab58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x107c>  // b.none
    aa64:	mov	w26, wzr
    aa68:	mov	x0, x24
    aa6c:	mov	w1, w26
    aa70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa74:	ldr	x1, [x0]
    aa78:	mov	x0, x22
    aa7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa80:	mov	w8, w0
    aa84:	add	x0, sp, #0x68
    aa88:	add	x1, sp, #0x30
    aa8c:	str	x8, [sp, #48]
    aa90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa94:	mov	x0, x24
    aa98:	mov	w1, w26
    aa9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aaa0:	mov	x1, x0
    aaa4:	mov	x0, x22
    aaa8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    aaac:	mov	w8, w0
    aab0:	add	x0, sp, #0x68
    aab4:	add	x1, sp, #0x30
    aab8:	str	x8, [sp, #48]
    aabc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aac0:	add	w26, w26, #0x1
    aac4:	cmp	w19, w26
    aac8:	b.ne	aa68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf8c>  // b.any
    aacc:	b	ab58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x107c>
    aad0:	mov	w25, #0x10                  	// #16
    aad4:	mov	x0, x24
    aad8:	mov	w1, wzr
    aadc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aae0:	mov	x1, x0
    aae4:	mov	x0, x22
    aae8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    aaec:	mov	w8, w0
    aaf0:	add	x0, sp, #0x68
    aaf4:	add	x1, sp, #0x30
    aaf8:	str	x8, [sp, #48]
    aafc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ab00:	mov	w1, #0x1                   	// #1
    ab04:	mov	x0, x24
    ab08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ab0c:	mov	x1, x0
    ab10:	mov	x0, x22
    ab14:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ab18:	mov	w8, w0
    ab1c:	add	x0, sp, #0x68
    ab20:	add	x1, sp, #0x30
    ab24:	str	x8, [sp, #48]
    ab28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ab2c:	mov	w1, #0x2                   	// #2
    ab30:	mov	x0, x24
    ab34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ab38:	mov	x1, x0
    ab3c:	mov	x0, x22
    ab40:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ab44:	mov	w8, w0
    ab48:	add	x0, sp, #0x68
    ab4c:	add	x1, sp, #0x30
    ab50:	str	x8, [sp, #48]
    ab54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ab58:	mov	w3, wzr
    ab5c:	b	9ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x518>
    ab60:	ldr	x0, [x21]
    ab64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ab68:	ldr	x0, [sp, #104]
    ab6c:	add	x8, sp, #0x68
    ab70:	add	x8, x8, #0x10
    ab74:	cmp	x0, x8
    ab78:	b.eq	ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10a4>  // b.none
    ab7c:	bl	0 <free>
    ab80:	add	sp, sp, #0x2c0
    ab84:	ldp	x20, x19, [sp, #96]
    ab88:	ldp	x22, x21, [sp, #80]
    ab8c:	ldp	x24, x23, [sp, #64]
    ab90:	ldp	x26, x25, [sp, #48]
    ab94:	ldp	x28, x27, [sp, #32]
    ab98:	ldp	x29, x30, [sp, #16]
    ab9c:	ldp	d9, d8, [sp], #112
    aba0:	ret
    aba4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aba8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abb0:	add	x0, x0, #0x0
    abb4:	add	x1, x1, #0x0
    abb8:	add	x3, x3, #0x0
    abbc:	mov	w2, #0x69                  	// #105
    abc0:	bl	0 <__assert_fail>
    abc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abcc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abd0:	add	x0, x0, #0x0
    abd4:	add	x1, x1, #0x0
    abd8:	add	x3, x3, #0x0
    abdc:	mov	w2, #0x108                 	// #264
    abe0:	bl	0 <__assert_fail>
    abe4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abe8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    abf0:	add	x0, x0, #0x0
    abf4:	add	x1, x1, #0x0
    abf8:	add	x3, x3, #0x0
    abfc:	b	abdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1100>
    ac00:	mov	x0, x24
    ac04:	bl	0 <_ZNK4llvm5Value4dumpEv>
    ac08:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac0c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac10:	add	x0, x0, #0x0
    ac14:	add	x1, x1, #0x0
    ac18:	mov	w2, #0x9df                 	// #2527
    ac1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ac20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac2c:	add	x0, x0, #0x0
    ac30:	add	x1, x1, #0x0
    ac34:	add	x3, x3, #0x0
    ac38:	mov	w2, #0x94f                 	// #2383
    ac3c:	bl	0 <__assert_fail>
    ac40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac4c:	add	x0, x0, #0x0
    ac50:	add	x1, x1, #0x0
    ac54:	add	x3, x3, #0x0
    ac58:	b	abbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10e0>
    ac5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac64:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac68:	add	x0, x0, #0x0
    ac6c:	add	x1, x1, #0x0
    ac70:	add	x3, x3, #0x0
    ac74:	b	abdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1100>
    ac78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac80:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac84:	add	x0, x0, #0x0
    ac88:	add	x1, x1, #0x0
    ac8c:	add	x3, x3, #0x0
    ac90:	b	abdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1100>
    ac94:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac98:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ac9c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aca0:	add	x0, x0, #0x0
    aca4:	add	x1, x1, #0x0
    aca8:	add	x3, x3, #0x0
    acac:	b	abbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10e0>
    acb0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acb4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acb8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acbc:	add	x0, x0, #0x0
    acc0:	add	x1, x1, #0x0
    acc4:	add	x3, x3, #0x0
    acc8:	b	abdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1100>
    accc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acd0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acd4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acd8:	add	x0, x0, #0x0
    acdc:	add	x1, x1, #0x0
    ace0:	add	x3, x3, #0x0
    ace4:	mov	w2, #0x992                 	// #2450
    ace8:	bl	0 <__assert_fail>
    acec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acf0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acf4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    acf8:	add	x0, x0, #0x0
    acfc:	add	x1, x1, #0x0
    ad00:	add	x3, x3, #0x0
    ad04:	mov	w2, #0x987                 	// #2439
    ad08:	bl	0 <__assert_fail>

000000000000ad0c <_ZL15emitSignedInt64RN4llvm15SmallVectorImplImEEm>:
    ad0c:	sub	sp, sp, #0x20
    ad10:	stp	x29, x30, [sp, #16]
    ad14:	add	x29, sp, #0x10
    ad18:	tbnz	x1, #63, ad24 <_ZL15emitSignedInt64RN4llvm15SmallVectorImplImEEm+0x18>
    ad1c:	lsl	x8, x1, #1
    ad20:	b	ad2c <_ZL15emitSignedInt64RN4llvm15SmallVectorImplImEEm+0x20>
    ad24:	mov	w8, #0x1                   	// #1
    ad28:	sub	x8, x8, x1, lsl #1
    ad2c:	add	x1, sp, #0x8
    ad30:	str	x8, [sp, #8]
    ad34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ad38:	ldp	x29, x30, [sp, #16]
    ad3c:	add	sp, sp, #0x20
    ad40:	ret

000000000000ad44 <_ZL20getEncodedCastOpcodej>:
    ad44:	sub	w0, w0, #0x26
    ad48:	cmp	w0, #0xd
    ad4c:	b.cs	ad54 <_ZL20getEncodedCastOpcodej+0x10>  // b.hs, b.nlast
    ad50:	ret
    ad54:	stp	x29, x30, [sp, #-16]!
    ad58:	mov	x29, sp
    ad5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ad60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ad64:	add	x0, x0, #0x0
    ad68:	add	x1, x1, #0x0
    ad6c:	mov	w2, #0x1f8                 	// #504
    ad70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000ad74 <_ZL22getEncodedBinaryOpcodej>:
    ad74:	stp	x29, x30, [sp, #-16]!
    ad78:	mov	x29, sp
    ad7c:	sub	w8, w0, #0xd
    ad80:	cmp	w8, #0x12
    ad84:	b.cs	ad9c <_ZL22getEncodedBinaryOpcodej+0x28>  // b.hs, b.nlast
    ad88:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ad8c:	add	x9, x9, #0x0
    ad90:	ldr	w0, [x9, w8, sxtw #2]
    ad94:	ldp	x29, x30, [sp], #16
    ad98:	ret
    ad9c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ada0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ada4:	add	x0, x0, #0x0
    ada8:	add	x1, x1, #0x0
    adac:	mov	w2, #0x212                 	// #530
    adb0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>:
    adb4:	stp	x29, x30, [sp, #-32]!
    adb8:	str	x19, [sp, #16]
    adbc:	mov	x29, sp
    adc0:	mov	x19, x0
    adc4:	str	x0, [x29, #24]
    adc8:	add	x0, x29, #0x18
    adcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    add0:	tbz	w0, #0, adf4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x40>
    add4:	add	x0, x29, #0x18
    add8:	str	x19, [x29, #24]
    addc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ade0:	tbz	w0, #0, aef4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x140>
    ade4:	cbz	x19, aed4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x120>
    ade8:	ldrb	w8, [x19, #17]
    adec:	ubfx	x0, x8, #1, #2
    adf0:	b	aec8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x114>
    adf4:	cbz	x19, aed4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x120>
    adf8:	ldrb	w8, [x19, #16]
    adfc:	cmp	w8, #0x18
    ae00:	b.cc	ae28 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x74>  // b.lo, b.ul, b.last
    ae04:	cmp	w8, #0x33
    ae08:	b.hi	ae5c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa8>  // b.pmore
    ae0c:	mov	w9, #0x1                   	// #1
    ae10:	lsl	x8, x9, x8
    ae14:	mov	x9, #0x180000000000        	// #26388279066624
    ae18:	movk	x9, #0xc, lsl #48
    ae1c:	tst	x8, x9
    ae20:	b.ne	ae50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x9c>  // b.any
    ae24:	b	ae5c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa8>
    ae28:	cmp	w8, #0x5
    ae2c:	b.ne	ae5c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa8>  // b.any
    ae30:	ldrh	w8, [x19, #18]
    ae34:	cmp	w8, #0x1b
    ae38:	b.hi	ae5c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa8>  // b.pmore
    ae3c:	mov	w9, #0x1                   	// #1
    ae40:	lsl	w8, w9, w8
    ae44:	mov	w9, #0xc180000             	// #202899456
    ae48:	tst	w8, w9
    ae4c:	b.eq	ae5c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa8>  // b.none
    ae50:	ldrb	w8, [x19, #17]
    ae54:	ubfx	x0, x8, #1, #1
    ae58:	b	aec8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x114>
    ae5c:	add	x0, x29, #0x18
    ae60:	str	x19, [x29, #24]
    ae64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ae68:	tbz	w0, #0, aec4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x110>
    ae6c:	add	x0, x29, #0x18
    ae70:	str	x19, [x29, #24]
    ae74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ae78:	tbz	w0, #0, af14 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x160>
    ae7c:	ldrsb	w8, [x19, #17]
    ae80:	mov	w9, #0xffffff82            	// #-126
    ae84:	ubfx	w10, w8, #1, #7
    ae88:	orr	w11, w10, w8, lsl #6
    ae8c:	and	w9, w11, w9
    ae90:	and	w11, w10, #0x4
    ae94:	orr	w9, w9, w11
    ae98:	and	w11, w10, #0x8
    ae9c:	orr	w9, w9, w11
    aea0:	and	w11, w10, #0x10
    aea4:	and	w10, w10, #0x20
    aea8:	orr	w9, w9, w11
    aeac:	orr	w9, w9, w10
    aeb0:	and	x9, x9, #0xfe
    aeb4:	orr	x10, x9, #0x40
    aeb8:	cmp	w8, #0x0
    aebc:	csel	x0, x10, x9, lt  // lt = tstop
    aec0:	b	aec8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x114>
    aec4:	mov	x0, xzr
    aec8:	ldr	x19, [sp, #16]
    aecc:	ldp	x29, x30, [sp], #32
    aed0:	ret
    aed4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aed8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aedc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aee0:	add	x0, x0, #0x0
    aee4:	add	x1, x1, #0x0
    aee8:	add	x3, x3, #0x0
    aeec:	mov	w2, #0x69                  	// #105
    aef0:	bl	0 <__assert_fail>
    aef4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aef8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aefc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    af00:	add	x0, x0, #0x0
    af04:	add	x1, x1, #0x0
    af08:	add	x3, x3, #0x0
    af0c:	mov	w2, #0x108                 	// #264
    af10:	bl	0 <__assert_fail>
    af14:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    af18:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    af1c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    af20:	add	x0, x0, #0x0
    af24:	add	x1, x1, #0x0
    af28:	add	x3, x3, #0x0
    af2c:	b	af0c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x158>

000000000000af30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>:
    af30:	sub	sp, sp, #0x70
    af34:	stp	x29, x30, [sp, #32]
    af38:	str	x25, [sp, #48]
    af3c:	stp	x24, x23, [sp, #64]
    af40:	stp	x22, x21, [sp, #80]
    af44:	stp	x20, x19, [sp, #96]
    af48:	add	x29, sp, #0x20
    af4c:	mov	x19, x0
    af50:	mov	w0, #0x220                 	// #544
    af54:	bl	0 <_Znwm>
    af58:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    af5c:	ldr	x8, [x8]
    af60:	movi	v0.2s, #0x1
    af64:	add	x22, x0, #0x20
    af68:	mov	x20, x0
    af6c:	add	x8, x8, #0x10
    af70:	str	d0, [x0, #8]
    af74:	str	x8, [x0]
    af78:	mov	w2, #0x200                 	// #512
    af7c:	mov	x0, x22
    af80:	mov	w1, wzr
    af84:	bl	0 <memset>
    af88:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    af8c:	ldr	d0, [x8]
    af90:	mov	x21, x20
    af94:	str	x22, [x21, #16]!
    af98:	mov	w9, #0x7                   	// #7
    af9c:	mov	w8, #0xff                  	// #255
    afa0:	add	x1, sp, #0x10
    afa4:	mov	x0, x21
    afa8:	str	x9, [sp, #16]
    afac:	str	d0, [x20, #24]
    afb0:	strb	w8, [sp, #24]
    afb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    afb8:	mov	w22, #0x1                   	// #1
    afbc:	mov	w23, #0x2                   	// #2
    afc0:	add	x1, sp, #0x10
    afc4:	mov	x0, x21
    afc8:	str	x22, [sp, #16]
    afcc:	strb	w23, [sp, #24]
    afd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    afd4:	mov	w24, #0x6                   	// #6
    afd8:	mov	w25, #0x4                   	// #4
    afdc:	add	x1, sp, #0x10
    afe0:	mov	x0, x21
    afe4:	str	x24, [sp, #16]
    afe8:	strb	w25, [sp, #24]
    afec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aff0:	mov	w8, #0x8                   	// #8
    aff4:	add	x1, sp, #0x10
    aff8:	mov	x0, x21
    affc:	str	x8, [sp, #16]
    b000:	strb	w25, [sp, #24]
    b004:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b008:	add	x1, sp, #0x10
    b00c:	mov	x0, x21
    b010:	str	x24, [sp, #16]
    b014:	strb	w25, [sp, #24]
    b018:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b01c:	add	x1, sp, #0x10
    b020:	mov	x0, x21
    b024:	str	x24, [sp, #16]
    b028:	strb	w25, [sp, #24]
    b02c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b030:	add	x1, sp, #0x10
    b034:	mov	x0, x21
    b038:	str	x22, [sp, #16]
    b03c:	strb	w23, [sp, #24]
    b040:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b044:	ldr	x19, [x19]
    b048:	mov	x1, x21
    b04c:	stp	x21, x20, [sp]
    b050:	mov	x0, x19
    b054:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b058:	add	x0, x19, #0x18
    b05c:	mov	x1, sp
    b060:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b064:	ldp	x9, x8, [x19, #24]
    b068:	ldr	x0, [sp, #8]
    b06c:	sub	x8, x8, x9
    b070:	lsr	x8, x8, #4
    b074:	add	w19, w8, #0x3
    b078:	cbz	x0, b080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x150>
    b07c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b080:	mov	w0, w19
    b084:	ldp	x20, x19, [sp, #96]
    b088:	ldp	x22, x21, [sp, #80]
    b08c:	ldp	x24, x23, [sp, #64]
    b090:	ldr	x25, [sp, #48]
    b094:	ldp	x29, x30, [sp, #32]
    b098:	add	sp, sp, #0x70
    b09c:	ret

000000000000b0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>:
    b0a0:	sub	sp, sp, #0x70
    b0a4:	stp	x29, x30, [sp, #32]
    b0a8:	str	x25, [sp, #48]
    b0ac:	stp	x24, x23, [sp, #64]
    b0b0:	stp	x22, x21, [sp, #80]
    b0b4:	stp	x20, x19, [sp, #96]
    b0b8:	add	x29, sp, #0x20
    b0bc:	mov	x19, x0
    b0c0:	mov	w0, #0x220                 	// #544
    b0c4:	bl	0 <_Znwm>
    b0c8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0cc:	ldr	x8, [x8]
    b0d0:	movi	v0.2s, #0x1
    b0d4:	add	x22, x0, #0x20
    b0d8:	mov	x20, x0
    b0dc:	add	x8, x8, #0x10
    b0e0:	str	d0, [x0, #8]
    b0e4:	str	x8, [x0]
    b0e8:	mov	w2, #0x200                 	// #512
    b0ec:	mov	x0, x22
    b0f0:	mov	w1, wzr
    b0f4:	bl	0 <memset>
    b0f8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0fc:	ldr	d0, [x8]
    b100:	mov	x21, x20
    b104:	str	x22, [x21, #16]!
    b108:	mov	w9, #0xc                   	// #12
    b10c:	mov	w8, #0xff                  	// #255
    b110:	add	x1, sp, #0x10
    b114:	mov	x0, x21
    b118:	str	x9, [sp, #16]
    b11c:	str	d0, [x20, #24]
    b120:	strb	w8, [sp, #24]
    b124:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b128:	mov	w22, #0x1                   	// #1
    b12c:	mov	w23, #0x2                   	// #2
    b130:	add	x1, sp, #0x10
    b134:	mov	x0, x21
    b138:	str	x22, [sp, #16]
    b13c:	strb	w23, [sp, #24]
    b140:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b144:	mov	w24, #0x6                   	// #6
    b148:	mov	w25, #0x4                   	// #4
    b14c:	add	x1, sp, #0x10
    b150:	mov	x0, x21
    b154:	str	x24, [sp, #16]
    b158:	strb	w25, [sp, #24]
    b15c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b160:	add	x1, sp, #0x10
    b164:	mov	x0, x21
    b168:	str	x22, [sp, #16]
    b16c:	strb	w23, [sp, #24]
    b170:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b174:	add	x1, sp, #0x10
    b178:	mov	x0, x21
    b17c:	str	x24, [sp, #16]
    b180:	strb	w25, [sp, #24]
    b184:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b188:	add	x1, sp, #0x10
    b18c:	mov	x0, x21
    b190:	str	xzr, [sp, #16]
    b194:	strb	w24, [sp, #24]
    b198:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b19c:	add	x1, sp, #0x10
    b1a0:	mov	x0, x21
    b1a4:	str	x24, [sp, #16]
    b1a8:	strb	w25, [sp, #24]
    b1ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1b0:	ldr	x19, [x19]
    b1b4:	mov	x1, x21
    b1b8:	stp	x21, x20, [sp]
    b1bc:	mov	x0, x19
    b1c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1c4:	add	x0, x19, #0x18
    b1c8:	mov	x1, sp
    b1cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1d0:	ldp	x9, x8, [x19, #24]
    b1d4:	ldr	x0, [sp, #8]
    b1d8:	sub	x8, x8, x9
    b1dc:	lsr	x8, x8, #4
    b1e0:	add	w19, w8, #0x3
    b1e4:	cbz	x0, b1ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x14c>
    b1e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1ec:	mov	w0, w19
    b1f0:	ldp	x20, x19, [sp, #96]
    b1f4:	ldp	x22, x21, [sp, #80]
    b1f8:	ldp	x24, x23, [sp, #64]
    b1fc:	ldr	x25, [sp, #48]
    b200:	ldp	x29, x30, [sp, #32]
    b204:	add	sp, sp, #0x70
    b208:	ret

000000000000b20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>:
    b20c:	sub	sp, sp, #0x1d0
    b210:	stp	x29, x30, [sp, #384]
    b214:	stp	x28, x25, [sp, #400]
    b218:	stp	x24, x23, [sp, #416]
    b21c:	stp	x22, x21, [sp, #432]
    b220:	stp	x20, x19, [sp, #448]
    b224:	add	x29, sp, #0x180
    b228:	cbz	x2, b46c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x260>
    b22c:	mov	x21, x1
    b230:	mov	x20, x0
    b234:	mov	w8, #0x23                  	// #35
    b238:	add	x1, sp, #0x68
    b23c:	mov	x0, x3
    b240:	mov	x19, x3
    b244:	mov	x22, x2
    b248:	str	x8, [sp, #104]
    b24c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b250:	add	x1, sp, #0x68
    b254:	mov	x0, x19
    b258:	str	x22, [sp, #104]
    b25c:	add	x23, sp, #0x68
    b260:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b264:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b268:	movi	v0.2d, #0x0
    b26c:	stp	q0, q0, [sp, #32]
    b270:	stp	q0, q0, [sp, #64]
    b274:	ldr	d0, [x9]
    b278:	lsl	x22, x22, #3
    b27c:	add	x8, x23, #0x10
    b280:	stp	x23, xzr, [sp, #8]
    b284:	mov	w9, #0x2                   	// #2
    b288:	mov	x23, x22
    b28c:	mov	x24, x21
    b290:	stp	xzr, x8, [sp, #96]
    b294:	str	w9, [sp, #24]
    b298:	str	d0, [sp, #112]
    b29c:	ldr	x0, [x24]
    b2a0:	cbz	x0, b488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x27c>
    b2a4:	ldrb	w8, [x0]
    b2a8:	cbnz	w8, b4a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x29c>
    b2ac:	bl	0 <_ZNK4llvm8MDString9getStringEv>
    b2b0:	add	x0, sp, #0x8
    b2b4:	mov	w2, #0x6                   	// #6
    b2b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b2bc:	subs	x23, x23, #0x8
    b2c0:	add	x24, x24, #0x8
    b2c4:	b.ne	b29c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x90>  // b.any
    b2c8:	ldr	w8, [sp, #16]
    b2cc:	cbz	w8, b2f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xe4>
    b2d0:	ldr	w8, [sp, #20]
    b2d4:	ldr	x0, [sp, #8]
    b2d8:	sub	x9, x29, #0x4
    b2dc:	add	x2, x9, #0x4
    b2e0:	sub	x1, x29, #0x4
    b2e4:	stur	w8, [x29, #-4]
    b2e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b2ec:	str	xzr, [sp, #16]
    b2f0:	add	x0, sp, #0x8
    b2f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b2f8:	ldr	w8, [sp, #112]
    b2fc:	add	x1, sp, #0x8
    b300:	mov	x0, x19
    b304:	str	x8, [sp, #8]
    b308:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b30c:	ldr	x0, [x21]
    b310:	cbz	x0, b488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x27c>
    b314:	ldrb	w8, [x0]
    b318:	cbnz	w8, b4a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x29c>
    b31c:	bl	0 <_ZNK4llvm8MDString9getStringEv>
    b320:	mov	x8, x0
    b324:	add	x2, x0, x1
    b328:	add	x0, sp, #0x68
    b32c:	mov	x1, x8
    b330:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b334:	subs	x22, x22, #0x8
    b338:	add	x21, x21, #0x8
    b33c:	b.ne	b30c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x100>  // b.any
    b340:	ldr	x21, [x20]
    b344:	mov	w0, #0x220                 	// #544
    b348:	bl	0 <_Znwm>
    b34c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b350:	ldr	x8, [x8]
    b354:	movi	v0.2s, #0x1
    b358:	add	x23, x0, #0x20
    b35c:	mov	x22, x0
    b360:	add	x8, x8, #0x10
    b364:	str	d0, [x0, #8]
    b368:	str	x8, [x0]
    b36c:	mov	w2, #0x200                 	// #512
    b370:	mov	x0, x23
    b374:	mov	w1, wzr
    b378:	bl	0 <memset>
    b37c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b380:	ldr	d0, [x8]
    b384:	mov	x24, x22
    b388:	str	x23, [x24, #16]!
    b38c:	mov	w9, #0x23                  	// #35
    b390:	mov	w8, #0xff                  	// #255
    b394:	add	x1, sp, #0x8
    b398:	mov	x0, x24
    b39c:	str	x9, [sp, #8]
    b3a0:	str	d0, [x22, #24]
    b3a4:	strb	w8, [sp, #16]
    b3a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b3ac:	mov	w23, #0x6                   	// #6
    b3b0:	mov	w25, #0x4                   	// #4
    b3b4:	add	x1, sp, #0x8
    b3b8:	mov	x0, x24
    b3bc:	str	x23, [sp, #8]
    b3c0:	strb	w25, [sp, #16]
    b3c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b3c8:	add	x1, sp, #0x8
    b3cc:	mov	x0, x24
    b3d0:	str	x23, [sp, #8]
    b3d4:	strb	w25, [sp, #16]
    b3d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b3dc:	mov	w8, #0xa                   	// #10
    b3e0:	add	x1, sp, #0x8
    b3e4:	mov	x0, x24
    b3e8:	str	xzr, [sp, #8]
    b3ec:	strb	w8, [sp, #16]
    b3f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b3f4:	ldr	x20, [x20]
    b3f8:	mov	x1, x24
    b3fc:	stp	x24, x22, [sp, #8]
    b400:	mov	x0, x20
    b404:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b408:	add	x0, x20, #0x18
    b40c:	add	x1, sp, #0x8
    b410:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b414:	ldp	x9, x8, [x20, #24]
    b418:	ldr	x0, [sp, #16]
    b41c:	sub	x8, x8, x9
    b420:	lsr	x8, x8, #4
    b424:	add	w20, w8, #0x3
    b428:	cbz	x0, b430 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x224>
    b42c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b430:	ldr	x4, [sp, #104]
    b434:	ldr	w5, [sp, #112]
    b438:	ldr	x2, [x19]
    b43c:	ldr	w3, [x19, #8]
    b440:	mov	x0, x21
    b444:	mov	w1, w20
    b448:	mov	x6, xzr
    b44c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b450:	str	wzr, [x19, #8]
    b454:	ldr	x0, [sp, #104]
    b458:	add	x8, sp, #0x68
    b45c:	add	x8, x8, #0x10
    b460:	cmp	x0, x8
    b464:	b.eq	b46c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x260>  // b.none
    b468:	bl	0 <free>
    b46c:	ldp	x20, x19, [sp, #448]
    b470:	ldp	x22, x21, [sp, #432]
    b474:	ldp	x24, x23, [sp, #416]
    b478:	ldp	x28, x25, [sp, #400]
    b47c:	ldp	x29, x30, [sp, #384]
    b480:	add	sp, sp, #0x1d0
    b484:	ret
    b488:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b48c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b490:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b494:	add	x0, x0, #0x0
    b498:	add	x1, x1, #0x0
    b49c:	add	x3, x3, #0x0
    b4a0:	mov	w2, #0x69                  	// #105
    b4a4:	bl	0 <__assert_fail>
    b4a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b4ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b4b0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b4b4:	add	x0, x0, #0x0
    b4b8:	add	x1, x1, #0x0
    b4bc:	add	x3, x3, #0x0
    b4c0:	mov	w2, #0x108                 	// #264
    b4c4:	bl	0 <__assert_fail>

000000000000b4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>:
    b4c8:	sub	sp, sp, #0x70
    b4cc:	stp	x29, x30, [sp, #16]
    b4d0:	str	x27, [sp, #32]
    b4d4:	stp	x26, x25, [sp, #48]
    b4d8:	stp	x24, x23, [sp, #64]
    b4dc:	stp	x22, x21, [sp, #80]
    b4e0:	stp	x20, x19, [sp, #96]
    b4e4:	add	x29, sp, #0x10
    b4e8:	cbz	x2, bbd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x708>
    b4ec:	adrp	x27, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b4f0:	mov	x19, x5
    b4f4:	mov	x20, x4
    b4f8:	mov	x21, x3
    b4fc:	mov	x22, x1
    b500:	mov	x23, x0
    b504:	add	x24, x0, #0x18
    b508:	lsl	x26, x2, #3
    b50c:	add	x27, x27, #0x0
    b510:	stur	wzr, [x29, #-4]
    b514:	str	wzr, [sp, #8]
    b518:	ldr	x25, [x22]
    b51c:	cbz	x19, b55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x94>
    b520:	ldr	x8, [x23]
    b524:	ldr	x9, [x8]
    b528:	ldr	w8, [x8, #8]
    b52c:	ldr	w9, [x9, #8]
    b530:	add	x8, x8, x9, lsl #3
    b534:	str	x8, [x29, #24]
    b538:	ldp	x1, x9, [x19, #8]
    b53c:	cmp	x1, x9
    b540:	b.eq	b550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x88>  // b.none
    b544:	str	x8, [x1], #8
    b548:	str	x1, [x19, #8]
    b54c:	b	b55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x94>
    b550:	add	x2, x29, #0x18
    b554:	mov	x0, x19
    b558:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b55c:	add	x0, x29, #0x18
    b560:	str	x25, [x29, #24]
    b564:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b568:	tbz	w0, #0, b5d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10c>
    b56c:	add	x0, x29, #0x18
    b570:	str	x25, [x29, #24]
    b574:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b578:	tbz	w0, #0, bc30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x768>
    b57c:	cbz	x25, bc10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x748>
    b580:	ldrb	w8, [x25, #1]
    b584:	and	w8, w8, #0x7f
    b588:	cmp	w8, #0x2
    b58c:	b.eq	bbf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x728>  // b.none
    b590:	ldr	w8, [x25, #12]
    b594:	cbnz	w8, bbf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x728>
    b598:	ldrb	w8, [x25]
    b59c:	sub	w8, w8, #0x4
    b5a0:	cmp	w8, #0x1b
    b5a4:	b.hi	bc4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x784>  // b.pmore
    b5a8:	adr	x9, b5b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf0>
    b5ac:	ldrb	w10, [x27, x8]
    b5b0:	add	x9, x9, x10, lsl #2
    b5b4:	br	x9
    b5b8:	cbz	x20, ba50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x588>
    b5bc:	ldr	x8, [x20]
    b5c0:	mov	x0, x23
    b5c4:	mov	x1, x25
    b5c8:	mov	x2, x21
    b5cc:	ldr	w3, [x8]
    b5d0:	b	ba60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x598>
    b5d4:	cbz	x25, bc10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x748>
    b5d8:	ldrb	w8, [x25]
    b5dc:	sub	w8, w8, #0x1
    b5e0:	cmp	w8, #0x2
    b5e4:	b.cs	bc64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x79c>  // b.hs, b.nlast
    b5e8:	ldr	x25, [x25, #136]
    b5ec:	mov	x0, x24
    b5f0:	ldr	x1, [x25]
    b5f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b5f8:	mov	w8, w0
    b5fc:	add	x1, x29, #0x18
    b600:	mov	x0, x21
    b604:	str	x8, [x29, #24]
    b608:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b60c:	mov	x0, x24
    b610:	mov	x1, x25
    b614:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    b618:	mov	w8, w0
    b61c:	add	x1, x29, #0x18
    b620:	mov	x0, x21
    b624:	str	x8, [x29, #24]
    b628:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b62c:	ldr	x0, [x23]
    b630:	mov	w1, #0x2                   	// #2
    b634:	mov	x2, x21
    b638:	mov	w3, wzr
    b63c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b640:	str	wzr, [x21, #8]
    b644:	subs	x26, x26, #0x8
    b648:	add	x22, x22, #0x8
    b64c:	b.ne	b518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x50>  // b.any
    b650:	b	bbd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x708>
    b654:	cbz	x20, b930 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x468>
    b658:	ldr	x8, [x20]
    b65c:	mov	x0, x23
    b660:	mov	x1, x25
    b664:	mov	x2, x21
    b668:	ldr	w3, [x8, #108]
    b66c:	b	b940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x478>
    b670:	cbz	x20, b948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x480>
    b674:	ldr	x8, [x20]
    b678:	mov	x0, x23
    b67c:	mov	x1, x25
    b680:	mov	x2, x21
    b684:	ldr	w3, [x8, #56]
    b688:	b	b958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x490>
    b68c:	cbz	x20, b960 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x498>
    b690:	ldr	x8, [x20]
    b694:	mov	x0, x23
    b698:	mov	x1, x25
    b69c:	mov	x2, x21
    b6a0:	ldr	w3, [x8, #64]
    b6a4:	b	b970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4a8>
    b6a8:	cbz	x20, b978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4b0>
    b6ac:	ldr	x8, [x20]
    b6b0:	add	x3, x8, #0x10
    b6b4:	b	b97c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4b4>
    b6b8:	cbz	x20, b990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4c8>
    b6bc:	ldr	x8, [x20]
    b6c0:	mov	x0, x23
    b6c4:	mov	x1, x25
    b6c8:	mov	x2, x21
    b6cc:	ldr	w3, [x8, #44]
    b6d0:	b	b9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4d8>
    b6d4:	cbz	x20, ba68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5a0>
    b6d8:	ldr	x8, [x20]
    b6dc:	add	x3, x8, #0x4
    b6e0:	b	ba6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5a4>
    b6e4:	cbz	x20, b9a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4e0>
    b6e8:	ldr	x8, [x20]
    b6ec:	mov	x0, x23
    b6f0:	mov	x1, x25
    b6f4:	mov	x2, x21
    b6f8:	ldr	w3, [x8, #8]
    b6fc:	b	b9b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4f0>
    b700:	cbz	x20, b9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4f8>
    b704:	ldr	x8, [x20]
    b708:	mov	x0, x23
    b70c:	mov	x1, x25
    b710:	mov	x2, x21
    b714:	ldr	w3, [x8, #12]
    b718:	b	b9d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x508>
    b71c:	cbz	x20, ba80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5b8>
    b720:	ldr	x8, [x20]
    b724:	mov	x0, x23
    b728:	mov	x1, x25
    b72c:	mov	x2, x21
    b730:	ldr	w3, [x8, #28]
    b734:	b	ba90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5c8>
    b738:	cbz	x20, b9d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x510>
    b73c:	ldr	x8, [x20]
    b740:	mov	x0, x23
    b744:	mov	x1, x25
    b748:	mov	x2, x21
    b74c:	ldr	w3, [x8, #36]
    b750:	b	b9e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x520>
    b754:	cbz	x20, b9f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x528>
    b758:	ldr	x8, [x20]
    b75c:	mov	x0, x23
    b760:	mov	x1, x25
    b764:	mov	x2, x21
    b768:	ldr	w3, [x8, #48]
    b76c:	b	ba00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x538>
    b770:	cbz	x20, ba08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x540>
    b774:	ldr	x8, [x20]
    b778:	mov	x0, x23
    b77c:	mov	x1, x25
    b780:	mov	x2, x21
    b784:	ldr	w3, [x8, #60]
    b788:	b	ba18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x550>
    b78c:	cbz	x20, ba98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5d0>
    b790:	ldr	x8, [x20]
    b794:	mov	x0, x23
    b798:	mov	x1, x25
    b79c:	mov	x2, x21
    b7a0:	ldr	w3, [x8, #68]
    b7a4:	b	baa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5e0>
    b7a8:	cbz	x20, ba20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x558>
    b7ac:	ldr	x8, [x20]
    b7b0:	mov	x0, x23
    b7b4:	mov	x1, x25
    b7b8:	mov	x2, x21
    b7bc:	ldr	w3, [x8, #96]
    b7c0:	b	ba30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x568>
    b7c4:	cbz	x20, ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x570>
    b7c8:	ldr	x8, [x20]
    b7cc:	mov	x0, x23
    b7d0:	mov	x1, x25
    b7d4:	mov	x2, x21
    b7d8:	ldr	w3, [x8, #100]
    b7dc:	b	ba48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x580>
    b7e0:	cbz	x20, bab0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5e8>
    b7e4:	ldr	x8, [x20]
    b7e8:	mov	x0, x23
    b7ec:	mov	x1, x25
    b7f0:	mov	x2, x21
    b7f4:	ldr	w3, [x8, #20]
    b7f8:	b	bac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x5f8>
    b7fc:	cbz	x20, bac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x600>
    b800:	ldr	x8, [x20]
    b804:	mov	x0, x23
    b808:	mov	x1, x25
    b80c:	mov	x2, x21
    b810:	ldr	w3, [x8, #24]
    b814:	b	bad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x610>
    b818:	cbz	x20, bae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x618>
    b81c:	ldr	x8, [x20]
    b820:	mov	x0, x23
    b824:	mov	x1, x25
    b828:	mov	x2, x21
    b82c:	ldr	w3, [x8, #32]
    b830:	b	baf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x628>
    b834:	cbz	x20, baf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x630>
    b838:	ldr	x8, [x20]
    b83c:	mov	x0, x23
    b840:	mov	x1, x25
    b844:	mov	x2, x21
    b848:	ldr	w3, [x8, #40]
    b84c:	b	bb08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x640>
    b850:	cbz	x20, bb10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x648>
    b854:	ldr	x8, [x20]
    b858:	mov	x0, x23
    b85c:	mov	x1, x25
    b860:	mov	x2, x21
    b864:	ldr	w3, [x8, #52]
    b868:	b	bb20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x658>
    b86c:	cbz	x20, bb28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x660>
    b870:	ldr	x8, [x20]
    b874:	mov	x0, x23
    b878:	mov	x1, x25
    b87c:	mov	x2, x21
    b880:	ldr	w3, [x8, #72]
    b884:	b	bb38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x670>
    b888:	cbz	x20, bb40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x678>
    b88c:	ldr	x8, [x20]
    b890:	mov	x0, x23
    b894:	mov	x1, x25
    b898:	mov	x2, x21
    b89c:	ldr	w3, [x8, #80]
    b8a0:	b	bb50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x688>
    b8a4:	cbz	x20, bb58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x690>
    b8a8:	ldr	x8, [x20]
    b8ac:	mov	x0, x23
    b8b0:	mov	x1, x25
    b8b4:	mov	x2, x21
    b8b8:	ldr	w3, [x8, #84]
    b8bc:	b	bb68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6a0>
    b8c0:	cbz	x20, bb70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6a8>
    b8c4:	ldr	x8, [x20]
    b8c8:	mov	x0, x23
    b8cc:	mov	x1, x25
    b8d0:	mov	x2, x21
    b8d4:	ldr	w3, [x8, #76]
    b8d8:	b	bb80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6b8>
    b8dc:	cbz	x20, bb88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6c0>
    b8e0:	ldr	x8, [x20]
    b8e4:	mov	x0, x23
    b8e8:	mov	x1, x25
    b8ec:	mov	x2, x21
    b8f0:	ldr	w3, [x8, #88]
    b8f4:	b	bb98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6d0>
    b8f8:	cbz	x20, bba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6d8>
    b8fc:	ldr	x8, [x20]
    b900:	mov	x0, x23
    b904:	mov	x1, x25
    b908:	mov	x2, x21
    b90c:	ldr	w3, [x8, #92]
    b910:	b	bbb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6e8>
    b914:	cbz	x20, bbb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6f0>
    b918:	ldr	x8, [x20]
    b91c:	mov	x0, x23
    b920:	mov	x1, x25
    b924:	mov	x2, x21
    b928:	ldr	w3, [x8, #104]
    b92c:	b	bbc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x700>
    b930:	mov	x0, x23
    b934:	mov	x1, x25
    b938:	mov	x2, x21
    b93c:	mov	w3, wzr
    b940:	bl	dea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>
    b944:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b948:	mov	x0, x23
    b94c:	mov	x1, x25
    b950:	mov	x2, x21
    b954:	mov	w3, wzr
    b958:	bl	cff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>
    b95c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b960:	mov	x0, x23
    b964:	mov	x1, x25
    b968:	mov	x2, x21
    b96c:	mov	w3, wzr
    b970:	bl	d1bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj>
    b974:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b978:	add	x3, sp, #0x8
    b97c:	mov	x0, x23
    b980:	mov	x1, x25
    b984:	mov	x2, x21
    b988:	bl	c018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj>
    b98c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b990:	mov	x0, x23
    b994:	mov	x1, x25
    b998:	mov	x2, x21
    b99c:	mov	w3, wzr
    b9a0:	bl	c8f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>
    b9a4:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b9a8:	mov	x0, x23
    b9ac:	mov	x1, x25
    b9b0:	mov	x2, x21
    b9b4:	mov	w3, wzr
    b9b8:	bl	bea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>
    b9bc:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b9c0:	mov	x0, x23
    b9c4:	mov	x1, x25
    b9c8:	mov	x2, x21
    b9cc:	mov	w3, wzr
    b9d0:	bl	bf54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter31writeDIGlobalVariableExpressionEPKN4llvm26DIGlobalVariableExpressionERNS1_15SmallVectorImplImEEj>
    b9d4:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b9d8:	mov	x0, x23
    b9dc:	mov	x1, x25
    b9e0:	mov	x2, x21
    b9e4:	mov	w3, wzr
    b9e8:	bl	c5b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>
    b9ec:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    b9f0:	mov	x0, x23
    b9f4:	mov	x1, x25
    b9f8:	mov	x2, x21
    b9fc:	mov	w3, wzr
    ba00:	bl	ca64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>
    ba04:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba08:	mov	x0, x23
    ba0c:	mov	x1, x25
    ba10:	mov	x2, x21
    ba14:	mov	w3, wzr
    ba18:	bl	d0e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>
    ba1c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba20:	mov	x0, x23
    ba24:	mov	x1, x25
    ba28:	mov	x2, x21
    ba2c:	mov	w3, wzr
    ba30:	bl	db60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>
    ba34:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba38:	mov	x0, x23
    ba3c:	mov	x1, x25
    ba40:	mov	x2, x21
    ba44:	mov	w3, wzr
    ba48:	bl	dcc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>
    ba4c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba50:	mov	x0, x23
    ba54:	mov	x1, x25
    ba58:	mov	x2, x21
    ba5c:	mov	w3, wzr
    ba60:	bl	bc84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>
    ba64:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba68:	sub	x3, x29, #0x4
    ba6c:	mov	x0, x23
    ba70:	mov	x1, x25
    ba74:	mov	x2, x21
    ba78:	bl	bd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj>
    ba7c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba80:	mov	x0, x23
    ba84:	mov	x1, x25
    ba88:	mov	x2, x21
    ba8c:	mov	w3, wzr
    ba90:	bl	c2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>
    ba94:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    ba98:	mov	x0, x23
    ba9c:	mov	x1, x25
    baa0:	mov	x2, x21
    baa4:	mov	w3, wzr
    baa8:	bl	d294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>
    baac:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bab0:	mov	x0, x23
    bab4:	mov	x1, x25
    bab8:	mov	x2, x21
    babc:	mov	w3, wzr
    bac0:	bl	c108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>
    bac4:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bac8:	mov	x0, x23
    bacc:	mov	x1, x25
    bad0:	mov	x2, x21
    bad4:	mov	w3, wzr
    bad8:	bl	c1e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj>
    badc:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bae0:	mov	x0, x23
    bae4:	mov	x1, x25
    bae8:	mov	x2, x21
    baec:	mov	w3, wzr
    baf0:	bl	c3ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>
    baf4:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    baf8:	mov	x0, x23
    bafc:	mov	x1, x25
    bb00:	mov	x2, x21
    bb04:	mov	w3, wzr
    bb08:	bl	c82c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>
    bb0c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bb10:	mov	x0, x23
    bb14:	mov	x1, x25
    bb18:	mov	x2, x21
    bb1c:	mov	w3, wzr
    bb20:	bl	cd20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>
    bb24:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bb28:	mov	x0, x23
    bb2c:	mov	x1, x25
    bb30:	mov	x2, x21
    bb34:	mov	w3, wzr
    bb38:	bl	d34c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28writeDITemplateTypeParameterEPKN4llvm23DITemplateTypeParameterERNS1_15SmallVectorImplImEEj>
    bb3c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bb40:	mov	x0, x23
    bb44:	mov	x1, x25
    bb48:	mov	x2, x21
    bb4c:	mov	w3, wzr
    bb50:	bl	d540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>
    bb54:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bb58:	mov	x0, x23
    bb5c:	mov	x1, x25
    bb60:	mov	x2, x21
    bb64:	mov	w3, wzr
    bb68:	bl	d72c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>
    bb6c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bb70:	mov	x0, x23
    bb74:	mov	x1, x25
    bb78:	mov	x2, x21
    bb7c:	mov	w3, wzr
    bb80:	bl	d414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>
    bb84:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bb88:	mov	x0, x23
    bb8c:	mov	x1, x25
    bb90:	mov	x2, x21
    bb94:	mov	w3, wzr
    bb98:	bl	d8ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>
    bb9c:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bba0:	mov	x0, x23
    bba4:	mov	x1, x25
    bba8:	mov	x2, x21
    bbac:	mov	w3, wzr
    bbb0:	bl	d9f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>
    bbb4:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bbb8:	mov	x0, x23
    bbbc:	mov	x1, x25
    bbc0:	mov	x2, x21
    bbc4:	mov	w3, wzr
    bbc8:	bl	ddbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>
    bbcc:	b	b644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17c>
    bbd0:	ldp	x20, x19, [sp, #96]
    bbd4:	ldp	x22, x21, [sp, #80]
    bbd8:	ldp	x24, x23, [sp, #64]
    bbdc:	ldp	x26, x25, [sp, #48]
    bbe0:	ldr	x27, [sp, #32]
    bbe4:	ldp	x29, x30, [sp, #16]
    bbe8:	add	sp, sp, #0x70
    bbec:	ret
    bbf0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bbf4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bbf8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bbfc:	add	x0, x0, #0x0
    bc00:	add	x1, x1, #0x0
    bc04:	add	x3, x3, #0x0
    bc08:	mov	w2, #0x7e4                 	// #2020
    bc0c:	bl	0 <__assert_fail>
    bc10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc18:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc1c:	add	x0, x0, #0x0
    bc20:	add	x1, x1, #0x0
    bc24:	add	x3, x3, #0x0
    bc28:	mov	w2, #0x69                  	// #105
    bc2c:	bl	0 <__assert_fail>
    bc30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc3c:	add	x0, x0, #0x0
    bc40:	add	x1, x1, #0x0
    bc44:	add	x3, x3, #0x0
    bc48:	b	bc7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x7b4>
    bc4c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc50:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc54:	add	x0, x0, #0x0
    bc58:	add	x1, x1, #0x0
    bc5c:	mov	w2, #0x7e8                 	// #2024
    bc60:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    bc64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc70:	add	x0, x0, #0x0
    bc74:	add	x1, x1, #0x0
    bc78:	add	x3, x3, #0x0
    bc7c:	mov	w2, #0x108                 	// #264
    bc80:	bl	0 <__assert_fail>

000000000000bc84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>:
    bc84:	stp	x29, x30, [sp, #-80]!
    bc88:	str	x25, [sp, #16]
    bc8c:	stp	x24, x23, [sp, #32]
    bc90:	stp	x22, x21, [sp, #48]
    bc94:	stp	x20, x19, [sp, #64]
    bc98:	mov	x29, sp
    bc9c:	ldr	w8, [x1, #8]
    bca0:	mov	w20, w3
    bca4:	mov	x19, x2
    bca8:	mov	x21, x1
    bcac:	mov	x22, x0
    bcb0:	cbz	w8, bd2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xa8>
    bcb4:	mov	x24, xzr
    bcb8:	add	x23, x22, #0x118
    bcbc:	sub	x25, x8, #0x1
    bcc0:	sub	x8, x21, x8, lsl #3
    bcc4:	ldr	x1, [x8, x24, lsl #3]
    bcc8:	cbz	x1, bcd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x54>
    bccc:	ldrb	w8, [x1]
    bcd0:	cmp	w8, #0x2
    bcd4:	b.eq	bd70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xec>  // b.none
    bcd8:	mov	x0, x23
    bcdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bce0:	lsr	x8, x0, #32
    bce4:	add	x1, x29, #0x18
    bce8:	mov	x0, x19
    bcec:	str	x8, [x29, #24]
    bcf0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bcf4:	cmp	x25, x24
    bcf8:	b.eq	bd2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xa8>  // b.none
    bcfc:	ldr	w8, [x21, #8]
    bd00:	add	x24, x24, #0x1
    bd04:	cmp	x24, x8
    bd08:	b.cc	bcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x3c>  // b.lo, b.ul, b.last
    bd0c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd10:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd14:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd18:	add	x0, x0, #0x0
    bd1c:	add	x1, x1, #0x0
    bd20:	add	x3, x3, #0x0
    bd24:	mov	w2, #0x436                 	// #1078
    bd28:	bl	0 <__assert_fail>
    bd2c:	ldrb	w8, [x21, #1]
    bd30:	ldr	x0, [x22]
    bd34:	mov	w9, #0x3                   	// #3
    bd38:	mov	x2, x19
    bd3c:	and	w8, w8, #0x7f
    bd40:	cmp	w8, #0x1
    bd44:	mov	w8, #0x5                   	// #5
    bd48:	csel	w1, w8, w9, eq  // eq = none
    bd4c:	mov	w3, w20
    bd50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd54:	str	wzr, [x19, #8]
    bd58:	ldp	x20, x19, [sp, #64]
    bd5c:	ldp	x22, x21, [sp, #48]
    bd60:	ldp	x24, x23, [sp, #32]
    bd64:	ldr	x25, [sp, #16]
    bd68:	ldp	x29, x30, [sp], #80
    bd6c:	ret
    bd70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bd7c:	add	x0, x0, #0x0
    bd80:	add	x1, x1, #0x0
    bd84:	add	x3, x3, #0x0
    bd88:	mov	w2, #0x59e                 	// #1438
    bd8c:	bl	0 <__assert_fail>

000000000000bd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj>:
    bd90:	stp	x29, x30, [sp, #-64]!
    bd94:	str	x23, [sp, #16]
    bd98:	stp	x22, x21, [sp, #32]
    bd9c:	stp	x20, x19, [sp, #48]
    bda0:	mov	x29, sp
    bda4:	ldr	w8, [x3]
    bda8:	mov	x20, x3
    bdac:	mov	x19, x2
    bdb0:	mov	x22, x1
    bdb4:	mov	x21, x0
    bdb8:	cbnz	w8, bdc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x38>
    bdbc:	mov	x0, x21
    bdc0:	bl	af30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>
    bdc4:	str	w0, [x20]
    bdc8:	ldrb	w8, [x22, #1]
    bdcc:	add	x1, x29, #0x18
    bdd0:	mov	x0, x19
    bdd4:	and	w8, w8, #0x7f
    bdd8:	cmp	w8, #0x1
    bddc:	cset	w8, eq  // eq = none
    bde0:	str	x8, [x29, #24]
    bde4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bde8:	ldr	w8, [x22, #4]
    bdec:	add	x1, x29, #0x18
    bdf0:	mov	x0, x19
    bdf4:	str	x8, [x29, #24]
    bdf8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bdfc:	ldrh	w8, [x22, #2]
    be00:	add	x1, x29, #0x18
    be04:	mov	x0, x19
    be08:	str	x8, [x29, #24]
    be0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be10:	mov	x0, x22
    be14:	add	x23, x21, #0x18
    be18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be1c:	mov	x1, x0
    be20:	mov	x0, x23
    be24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be28:	mov	w8, w0
    be2c:	add	x1, x29, #0x18
    be30:	mov	x0, x19
    be34:	str	x8, [x29, #24]
    be38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be3c:	mov	x0, x22
    be40:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be44:	mov	x1, x0
    be48:	add	x0, x21, #0x118
    be4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be50:	lsr	x8, x0, #32
    be54:	add	x1, x29, #0x18
    be58:	mov	x0, x19
    be5c:	str	x8, [x29, #24]
    be60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be64:	ldrb	w8, [x22, #1]
    be68:	add	x1, x29, #0x18
    be6c:	mov	x0, x19
    be70:	lsr	x8, x8, #7
    be74:	str	x8, [x29, #24]
    be78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be7c:	ldr	x0, [x21]
    be80:	ldr	w3, [x20]
    be84:	mov	w1, #0x7                   	// #7
    be88:	mov	x2, x19
    be8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be90:	str	wzr, [x19, #8]
    be94:	ldp	x20, x19, [sp, #48]
    be98:	ldp	x22, x21, [sp, #32]
    be9c:	ldr	x23, [sp, #16]
    bea0:	ldp	x29, x30, [sp], #64
    bea4:	ret

000000000000bea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>:
    bea8:	sub	sp, sp, #0x40
    beac:	stp	x29, x30, [sp, #16]
    beb0:	stp	x22, x21, [sp, #32]
    beb4:	stp	x20, x19, [sp, #48]
    beb8:	add	x29, sp, #0x10
    bebc:	ldp	x8, x9, [x1, #24]
    bec0:	ldr	w10, [x2, #12]
    bec4:	mov	x20, x2
    bec8:	mov	w19, w3
    becc:	sub	x8, x9, x8
    bed0:	asr	x8, x8, #3
    bed4:	add	x2, x8, #0x1
    bed8:	mov	x21, x1
    bedc:	cmp	x2, x10
    bee0:	mov	x22, x0
    bee4:	b.ls	bef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x50>  // b.plast
    bee8:	add	x1, x20, #0x10
    beec:	mov	w3, #0x8                   	// #8
    bef0:	mov	x0, x20
    bef4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    bef8:	ldrb	w8, [x21, #1]
    befc:	add	x1, sp, #0x8
    bf00:	mov	x0, x20
    bf04:	and	w8, w8, #0x7f
    bf08:	cmp	w8, #0x1
    bf0c:	cset	w8, eq  // eq = none
    bf10:	orr	x8, x8, #0x6
    bf14:	str	x8, [sp, #8]
    bf18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bf1c:	ldp	x1, x2, [x21, #24]
    bf20:	mov	x0, x20
    bf24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bf28:	ldr	x0, [x22]
    bf2c:	mov	w1, #0x1d                  	// #29
    bf30:	mov	x2, x20
    bf34:	mov	w3, w19
    bf38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bf3c:	str	wzr, [x20, #8]
    bf40:	ldp	x20, x19, [sp, #48]
    bf44:	ldp	x22, x21, [sp, #32]
    bf48:	ldp	x29, x30, [sp, #16]
    bf4c:	add	sp, sp, #0x40
    bf50:	ret

000000000000bf54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter31writeDIGlobalVariableExpressionEPKN4llvm26DIGlobalVariableExpressionERNS1_15SmallVectorImplImEEj>:
    bf54:	stp	x29, x30, [sp, #-64]!
    bf58:	str	x23, [sp, #16]
    bf5c:	stp	x22, x21, [sp, #32]
    bf60:	stp	x20, x19, [sp, #48]
    bf64:	mov	x29, sp
    bf68:	ldrb	w8, [x1, #1]
    bf6c:	mov	x21, x1
    bf70:	mov	x22, x0
    bf74:	add	x1, x29, #0x18
    bf78:	and	w8, w8, #0x7f
    bf7c:	cmp	w8, #0x1
    bf80:	cset	w8, eq  // eq = none
    bf84:	mov	x0, x2
    bf88:	mov	w20, w3
    bf8c:	mov	x19, x2
    bf90:	str	x8, [x29, #24]
    bf94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bf98:	mov	x0, x21
    bf9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bfa0:	add	x23, x22, #0x118
    bfa4:	mov	x1, x0
    bfa8:	mov	x0, x23
    bfac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bfb0:	lsr	x8, x0, #32
    bfb4:	add	x1, x29, #0x18
    bfb8:	mov	x0, x19
    bfbc:	str	x8, [x29, #24]
    bfc0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bfc4:	mov	x0, x21
    bfc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bfcc:	mov	x1, x0
    bfd0:	mov	x0, x23
    bfd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bfd8:	lsr	x8, x0, #32
    bfdc:	add	x1, x29, #0x18
    bfe0:	mov	x0, x19
    bfe4:	str	x8, [x29, #24]
    bfe8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bfec:	ldr	x0, [x22]
    bff0:	mov	w1, #0x25                  	// #37
    bff4:	mov	x2, x19
    bff8:	mov	w3, w20
    bffc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c000:	str	wzr, [x19, #8]
    c004:	ldp	x20, x19, [sp, #48]
    c008:	ldp	x22, x21, [sp, #32]
    c00c:	ldr	x23, [sp, #16]
    c010:	ldp	x29, x30, [sp], #64
    c014:	ret

000000000000c018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj>:
    c018:	sub	sp, sp, #0x50
    c01c:	stp	x29, x30, [sp, #16]
    c020:	stp	x24, x23, [sp, #32]
    c024:	stp	x22, x21, [sp, #48]
    c028:	stp	x20, x19, [sp, #64]
    c02c:	add	x29, sp, #0x10
    c030:	ldr	w8, [x3]
    c034:	mov	x20, x3
    c038:	mov	x19, x2
    c03c:	mov	x21, x1
    c040:	mov	x22, x0
    c044:	cbnz	w8, c054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x3c>
    c048:	mov	x0, x22
    c04c:	bl	b0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>
    c050:	str	w0, [x20]
    c054:	ldrb	w8, [x21, #1]
    c058:	add	x1, sp, #0x8
    c05c:	mov	x0, x19
    c060:	and	w8, w8, #0x7f
    c064:	cmp	w8, #0x1
    c068:	cset	w8, eq  // eq = none
    c06c:	str	x8, [sp, #8]
    c070:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c074:	ldrh	w8, [x21, #2]
    c078:	add	x1, sp, #0x8
    c07c:	mov	x0, x19
    c080:	str	x8, [sp, #8]
    c084:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c088:	add	x1, sp, #0x8
    c08c:	mov	x0, x19
    c090:	str	xzr, [sp, #8]
    c094:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c098:	ldr	w8, [x21, #8]
    c09c:	neg	x9, x8
    c0a0:	lsl	x9, x9, #3
    c0a4:	cbz	x9, c0d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0xc0>
    c0a8:	add	x23, x22, #0x118
    c0ac:	neg	x24, x8, lsl #3
    c0b0:	ldr	x1, [x21, x24]
    c0b4:	mov	x0, x23
    c0b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c0bc:	lsr	x8, x0, #32
    c0c0:	add	x1, sp, #0x8
    c0c4:	mov	x0, x19
    c0c8:	str	x8, [sp, #8]
    c0cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c0d0:	adds	x24, x24, #0x8
    c0d4:	b.ne	c0b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x98>  // b.any
    c0d8:	ldr	x0, [x22]
    c0dc:	ldr	w3, [x20]
    c0e0:	mov	w1, #0xc                   	// #12
    c0e4:	mov	x2, x19
    c0e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c0ec:	str	wzr, [x19, #8]
    c0f0:	ldp	x20, x19, [sp, #64]
    c0f4:	ldp	x22, x21, [sp, #48]
    c0f8:	ldp	x24, x23, [sp, #32]
    c0fc:	ldp	x29, x30, [sp, #16]
    c100:	add	sp, sp, #0x50
    c104:	ret

000000000000c108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>:
    c108:	sub	sp, sp, #0x40
    c10c:	stp	x29, x30, [sp, #16]
    c110:	stp	x22, x21, [sp, #32]
    c114:	stp	x20, x19, [sp, #48]
    c118:	add	x29, sp, #0x10
    c11c:	ldrb	w8, [x1, #1]
    c120:	mov	x22, x1
    c124:	mov	x21, x0
    c128:	add	x1, sp, #0x8
    c12c:	and	w8, w8, #0x7f
    c130:	cmp	w8, #0x1
    c134:	cset	w8, eq  // eq = none
    c138:	orr	x8, x8, #0x2
    c13c:	mov	x0, x2
    c140:	mov	w20, w3
    c144:	mov	x19, x2
    c148:	str	x8, [sp, #8]
    c14c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c150:	ldr	w8, [x22, #8]
    c154:	cbz	w8, c1c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xbc>
    c158:	sub	x8, x22, x8, lsl #3
    c15c:	ldr	x1, [x8]
    c160:	add	x0, x21, #0x118
    c164:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c168:	lsr	x8, x0, #32
    c16c:	add	x1, sp, #0x8
    c170:	mov	x0, x19
    c174:	str	x8, [sp, #8]
    c178:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c17c:	ldr	x8, [x22, #24]
    c180:	add	x1, sp, #0x8
    c184:	mov	x0, x19
    c188:	lsl	x9, x8, #1
    c18c:	eor	x8, x9, x8, asr #63
    c190:	str	x8, [sp, #8]
    c194:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c198:	ldr	x0, [x21]
    c19c:	mov	w1, #0xd                   	// #13
    c1a0:	mov	x2, x19
    c1a4:	mov	w3, w20
    c1a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c1ac:	str	wzr, [x19, #8]
    c1b0:	ldp	x20, x19, [sp, #48]
    c1b4:	ldp	x22, x21, [sp, #32]
    c1b8:	ldp	x29, x30, [sp, #16]
    c1bc:	add	sp, sp, #0x40
    c1c0:	ret
    c1c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c1c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c1cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c1d0:	add	x0, x0, #0x0
    c1d4:	add	x1, x1, #0x0
    c1d8:	add	x3, x3, #0x0
    c1dc:	mov	w2, #0x436                 	// #1078
    c1e0:	bl	0 <__assert_fail>

000000000000c1e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj>:
    c1e4:	sub	sp, sp, #0x40
    c1e8:	stp	x29, x30, [sp, #16]
    c1ec:	stp	x22, x21, [sp, #32]
    c1f0:	stp	x20, x19, [sp, #48]
    c1f4:	add	x29, sp, #0x10
    c1f8:	ldr	w8, [x1, #4]
    c1fc:	ldrb	w9, [x1, #1]
    c200:	mov	x21, x1
    c204:	mov	x22, x0
    c208:	cmp	w8, #0x0
    c20c:	and	w8, w9, #0x7f
    c210:	cset	w9, ne  // ne = any
    c214:	cmp	w8, #0x1
    c218:	cset	w8, eq  // eq = none
    c21c:	bfi	x8, x9, #1, #1
    c220:	add	x1, sp, #0x8
    c224:	mov	x0, x2
    c228:	mov	w19, w3
    c22c:	mov	x20, x2
    c230:	str	x8, [sp, #8]
    c234:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c238:	ldr	x8, [x21, #24]
    c23c:	add	x1, sp, #0x8
    c240:	mov	x0, x20
    c244:	lsl	x9, x8, #1
    c248:	eor	x8, x9, x8, asr #63
    c24c:	str	x8, [sp, #8]
    c250:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c254:	mov	x0, x21
    c258:	mov	w1, wzr
    c25c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c260:	mov	x1, x0
    c264:	add	x0, x22, #0x118
    c268:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c26c:	lsr	x8, x0, #32
    c270:	add	x1, sp, #0x8
    c274:	mov	x0, x20
    c278:	str	x8, [sp, #8]
    c27c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c280:	ldr	x0, [x22]
    c284:	mov	w1, #0xe                   	// #14
    c288:	mov	x2, x20
    c28c:	mov	w3, w19
    c290:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c294:	str	wzr, [x20, #8]
    c298:	ldp	x20, x19, [sp, #48]
    c29c:	ldp	x22, x21, [sp, #32]
    c2a0:	ldp	x29, x30, [sp, #16]
    c2a4:	add	sp, sp, #0x40
    c2a8:	ret

000000000000c2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>:
    c2ac:	sub	sp, sp, #0x40
    c2b0:	stp	x29, x30, [sp, #16]
    c2b4:	stp	x22, x21, [sp, #32]
    c2b8:	stp	x20, x19, [sp, #48]
    c2bc:	add	x29, sp, #0x10
    c2c0:	ldrb	w8, [x1, #1]
    c2c4:	mov	x22, x1
    c2c8:	mov	x21, x0
    c2cc:	add	x1, sp, #0x8
    c2d0:	and	w8, w8, #0x7f
    c2d4:	cmp	w8, #0x1
    c2d8:	cset	w8, eq  // eq = none
    c2dc:	mov	x0, x2
    c2e0:	mov	w20, w3
    c2e4:	mov	x19, x2
    c2e8:	str	x8, [sp, #8]
    c2ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c2f0:	ldrh	w8, [x22, #2]
    c2f4:	add	x1, sp, #0x8
    c2f8:	mov	x0, x19
    c2fc:	str	x8, [sp, #8]
    c300:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c304:	mov	w1, #0x2                   	// #2
    c308:	mov	x0, x22
    c30c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c310:	mov	x1, x0
    c314:	add	x0, x21, #0x118
    c318:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c31c:	lsr	x8, x0, #32
    c320:	add	x1, sp, #0x8
    c324:	mov	x0, x19
    c328:	str	x8, [sp, #8]
    c32c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c330:	ldr	x8, [x22, #32]
    c334:	add	x1, sp, #0x8
    c338:	mov	x0, x19
    c33c:	str	x8, [sp, #8]
    c340:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c344:	ldr	w8, [x22, #48]
    c348:	add	x1, sp, #0x8
    c34c:	mov	x0, x19
    c350:	str	x8, [sp, #8]
    c354:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c358:	ldr	w8, [x22, #52]
    c35c:	add	x1, sp, #0x8
    c360:	mov	x0, x19
    c364:	str	x8, [sp, #8]
    c368:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c36c:	ldr	w8, [x22, #28]
    c370:	add	x1, sp, #0x8
    c374:	mov	x0, x19
    c378:	str	x8, [sp, #8]
    c37c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c380:	ldr	x0, [x21]
    c384:	mov	w1, #0xf                   	// #15
    c388:	mov	x2, x19
    c38c:	mov	w3, w20
    c390:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c394:	str	wzr, [x19, #8]
    c398:	ldp	x20, x19, [sp, #48]
    c39c:	ldp	x22, x21, [sp, #32]
    c3a0:	ldp	x29, x30, [sp, #16]
    c3a4:	add	sp, sp, #0x40
    c3a8:	ret

000000000000c3ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>:
    c3ac:	stp	x29, x30, [sp, #-64]!
    c3b0:	str	x23, [sp, #16]
    c3b4:	stp	x22, x21, [sp, #32]
    c3b8:	stp	x20, x19, [sp, #48]
    c3bc:	mov	x29, sp
    c3c0:	ldrb	w8, [x1, #1]
    c3c4:	mov	x22, x1
    c3c8:	mov	x21, x0
    c3cc:	add	x1, x29, #0x18
    c3d0:	and	w8, w8, #0x7f
    c3d4:	cmp	w8, #0x1
    c3d8:	cset	w8, eq  // eq = none
    c3dc:	mov	x0, x2
    c3e0:	mov	w20, w3
    c3e4:	mov	x19, x2
    c3e8:	str	x8, [x29, #24]
    c3ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c3f0:	ldrh	w8, [x22, #2]
    c3f4:	add	x1, x29, #0x18
    c3f8:	mov	x0, x19
    c3fc:	str	x8, [x29, #24]
    c400:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c404:	mov	w1, #0x2                   	// #2
    c408:	mov	x0, x22
    c40c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c410:	add	x23, x21, #0x118
    c414:	mov	x1, x0
    c418:	mov	x0, x23
    c41c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c420:	lsr	x8, x0, #32
    c424:	add	x1, x29, #0x18
    c428:	mov	x0, x19
    c42c:	str	x8, [x29, #24]
    c430:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c434:	mov	x0, x22
    c438:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c43c:	mov	x1, x0
    c440:	mov	x0, x23
    c444:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c448:	lsr	x8, x0, #32
    c44c:	add	x1, x29, #0x18
    c450:	mov	x0, x19
    c454:	str	x8, [x29, #24]
    c458:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c45c:	ldr	w8, [x22, #24]
    c460:	add	x1, x29, #0x18
    c464:	mov	x0, x19
    c468:	str	x8, [x29, #24]
    c46c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c470:	mov	x0, x22
    c474:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c478:	mov	x1, x0
    c47c:	mov	x0, x23
    c480:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c484:	lsr	x8, x0, #32
    c488:	add	x1, x29, #0x18
    c48c:	mov	x0, x19
    c490:	str	x8, [x29, #24]
    c494:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c498:	mov	x0, x22
    c49c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4a0:	mov	x1, x0
    c4a4:	mov	x0, x23
    c4a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4ac:	lsr	x8, x0, #32
    c4b0:	add	x1, x29, #0x18
    c4b4:	mov	x0, x19
    c4b8:	str	x8, [x29, #24]
    c4bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4c0:	ldr	x8, [x22, #32]
    c4c4:	add	x1, x29, #0x18
    c4c8:	mov	x0, x19
    c4cc:	str	x8, [x29, #24]
    c4d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4d4:	ldr	w8, [x22, #48]
    c4d8:	add	x1, x29, #0x18
    c4dc:	mov	x0, x19
    c4e0:	str	x8, [x29, #24]
    c4e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4e8:	ldr	x8, [x22, #40]
    c4ec:	add	x1, x29, #0x18
    c4f0:	mov	x0, x19
    c4f4:	str	x8, [x29, #24]
    c4f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4fc:	ldr	w8, [x22, #28]
    c500:	add	x1, x29, #0x18
    c504:	mov	x0, x19
    c508:	str	x8, [x29, #24]
    c50c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c510:	ldr	w8, [x22, #8]
    c514:	cmp	w8, #0x4
    c518:	b.ls	c594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1e8>  // b.plast
    c51c:	sub	x8, x22, x8, lsl #3
    c520:	ldr	x1, [x8, #32]
    c524:	mov	x0, x23
    c528:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c52c:	lsr	x8, x0, #32
    c530:	add	x1, x29, #0x18
    c534:	mov	x0, x19
    c538:	str	x8, [x29, #24]
    c53c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c540:	ldur	x8, [x22, #52]
    c544:	tst	x8, #0xff00000000
    c548:	b.eq	c558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1ac>  // b.none
    c54c:	add	w8, w8, #0x1
    c550:	str	x8, [x29, #24]
    c554:	b	c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1b0>
    c558:	str	xzr, [x29, #24]
    c55c:	add	x1, x29, #0x18
    c560:	mov	x0, x19
    c564:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c568:	ldr	x0, [x21]
    c56c:	mov	w1, #0x11                  	// #17
    c570:	mov	x2, x19
    c574:	mov	w3, w20
    c578:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c57c:	str	wzr, [x19, #8]
    c580:	ldp	x20, x19, [sp, #48]
    c584:	ldp	x22, x21, [sp, #32]
    c588:	ldr	x23, [sp, #16]
    c58c:	ldp	x29, x30, [sp], #64
    c590:	ret
    c594:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c598:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c59c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c5a0:	add	x0, x0, #0x0
    c5a4:	add	x1, x1, #0x0
    c5a8:	add	x3, x3, #0x0
    c5ac:	mov	w2, #0x436                 	// #1078
    c5b0:	bl	0 <__assert_fail>

000000000000c5b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>:
    c5b4:	stp	x29, x30, [sp, #-64]!
    c5b8:	str	x23, [sp, #16]
    c5bc:	stp	x22, x21, [sp, #32]
    c5c0:	stp	x20, x19, [sp, #48]
    c5c4:	mov	x29, sp
    c5c8:	ldrb	w8, [x1, #1]
    c5cc:	mov	x22, x1
    c5d0:	mov	x21, x0
    c5d4:	add	x1, x29, #0x18
    c5d8:	and	w8, w8, #0x7f
    c5dc:	cmp	w8, #0x1
    c5e0:	cset	w8, eq  // eq = none
    c5e4:	orr	x8, x8, #0x2
    c5e8:	mov	x0, x2
    c5ec:	mov	w20, w3
    c5f0:	mov	x19, x2
    c5f4:	str	x8, [x29, #24]
    c5f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c5fc:	ldrh	w8, [x22, #2]
    c600:	add	x1, x29, #0x18
    c604:	mov	x0, x19
    c608:	str	x8, [x29, #24]
    c60c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c610:	mov	w1, #0x2                   	// #2
    c614:	mov	x0, x22
    c618:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c61c:	add	x23, x21, #0x118
    c620:	mov	x1, x0
    c624:	mov	x0, x23
    c628:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c62c:	lsr	x8, x0, #32
    c630:	add	x1, x29, #0x18
    c634:	mov	x0, x19
    c638:	str	x8, [x29, #24]
    c63c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c640:	mov	x0, x22
    c644:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c648:	mov	x1, x0
    c64c:	mov	x0, x23
    c650:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c654:	lsr	x8, x0, #32
    c658:	add	x1, x29, #0x18
    c65c:	mov	x0, x19
    c660:	str	x8, [x29, #24]
    c664:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c668:	ldr	w8, [x22, #24]
    c66c:	add	x1, x29, #0x18
    c670:	mov	x0, x19
    c674:	str	x8, [x29, #24]
    c678:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c67c:	mov	x0, x22
    c680:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c684:	mov	x1, x0
    c688:	mov	x0, x23
    c68c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c690:	lsr	x8, x0, #32
    c694:	add	x1, x29, #0x18
    c698:	mov	x0, x19
    c69c:	str	x8, [x29, #24]
    c6a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6a4:	mov	x0, x22
    c6a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6ac:	mov	x1, x0
    c6b0:	mov	x0, x23
    c6b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6b8:	lsr	x8, x0, #32
    c6bc:	add	x1, x29, #0x18
    c6c0:	mov	x0, x19
    c6c4:	str	x8, [x29, #24]
    c6c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6cc:	ldr	x8, [x22, #32]
    c6d0:	add	x1, x29, #0x18
    c6d4:	mov	x0, x19
    c6d8:	str	x8, [x29, #24]
    c6dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6e0:	ldr	w8, [x22, #48]
    c6e4:	add	x1, x29, #0x18
    c6e8:	mov	x0, x19
    c6ec:	str	x8, [x29, #24]
    c6f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6f4:	ldr	x8, [x22, #40]
    c6f8:	add	x1, x29, #0x18
    c6fc:	mov	x0, x19
    c700:	str	x8, [x29, #24]
    c704:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c708:	ldr	w8, [x22, #28]
    c70c:	add	x1, x29, #0x18
    c710:	mov	x0, x19
    c714:	str	x8, [x29, #24]
    c718:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c71c:	mov	x0, x22
    c720:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c724:	mov	x1, x0
    c728:	mov	x0, x23
    c72c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c730:	lsr	x8, x0, #32
    c734:	add	x1, x29, #0x18
    c738:	mov	x0, x19
    c73c:	str	x8, [x29, #24]
    c740:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c744:	ldr	w8, [x22, #52]
    c748:	add	x1, x29, #0x18
    c74c:	mov	x0, x19
    c750:	str	x8, [x29, #24]
    c754:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c758:	mov	x0, x22
    c75c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c760:	mov	x1, x0
    c764:	mov	x0, x23
    c768:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c76c:	lsr	x8, x0, #32
    c770:	add	x1, x29, #0x18
    c774:	mov	x0, x19
    c778:	str	x8, [x29, #24]
    c77c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c780:	mov	x0, x22
    c784:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c788:	mov	x1, x0
    c78c:	mov	x0, x23
    c790:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c794:	lsr	x8, x0, #32
    c798:	add	x1, x29, #0x18
    c79c:	mov	x0, x19
    c7a0:	str	x8, [x29, #24]
    c7a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7a8:	mov	w1, #0x7                   	// #7
    c7ac:	mov	x0, x22
    c7b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7b4:	mov	x1, x0
    c7b8:	mov	x0, x23
    c7bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7c0:	lsr	x8, x0, #32
    c7c4:	add	x1, x29, #0x18
    c7c8:	mov	x0, x19
    c7cc:	str	x8, [x29, #24]
    c7d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7d4:	mov	w1, #0x8                   	// #8
    c7d8:	mov	x0, x22
    c7dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7e0:	mov	x1, x0
    c7e4:	mov	x0, x23
    c7e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7ec:	lsr	x8, x0, #32
    c7f0:	add	x1, x29, #0x18
    c7f4:	mov	x0, x19
    c7f8:	str	x8, [x29, #24]
    c7fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c800:	ldr	x0, [x21]
    c804:	mov	w1, #0x12                  	// #18
    c808:	mov	x2, x19
    c80c:	mov	w3, w20
    c810:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c814:	str	wzr, [x19, #8]
    c818:	ldp	x20, x19, [sp, #48]
    c81c:	ldp	x22, x21, [sp, #32]
    c820:	ldr	x23, [sp, #16]
    c824:	ldp	x29, x30, [sp], #64
    c828:	ret

000000000000c82c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>:
    c82c:	sub	sp, sp, #0x40
    c830:	stp	x29, x30, [sp, #16]
    c834:	stp	x22, x21, [sp, #32]
    c838:	stp	x20, x19, [sp, #48]
    c83c:	add	x29, sp, #0x10
    c840:	ldrb	w8, [x1, #1]
    c844:	mov	x21, x1
    c848:	mov	x22, x0
    c84c:	add	x1, sp, #0x8
    c850:	and	w8, w8, #0x7f
    c854:	cmp	w8, #0x1
    c858:	cset	w8, eq  // eq = none
    c85c:	orr	x8, x8, #0x2
    c860:	mov	x0, x2
    c864:	mov	w20, w3
    c868:	mov	x19, x2
    c86c:	str	x8, [sp, #8]
    c870:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c874:	ldr	w8, [x21, #28]
    c878:	add	x1, sp, #0x8
    c87c:	mov	x0, x19
    c880:	str	x8, [sp, #8]
    c884:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c888:	mov	x0, x21
    c88c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c890:	mov	x1, x0
    c894:	add	x0, x22, #0x118
    c898:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c89c:	lsr	x8, x0, #32
    c8a0:	add	x1, sp, #0x8
    c8a4:	mov	x0, x19
    c8a8:	str	x8, [sp, #8]
    c8ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c8b0:	ldrb	w8, [x21, #52]
    c8b4:	add	x1, sp, #0x8
    c8b8:	mov	x0, x19
    c8bc:	str	x8, [sp, #8]
    c8c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c8c4:	ldr	x0, [x22]
    c8c8:	mov	w1, #0x13                  	// #19
    c8cc:	mov	x2, x19
    c8d0:	mov	w3, w20
    c8d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c8d8:	str	wzr, [x19, #8]
    c8dc:	ldp	x20, x19, [sp, #48]
    c8e0:	ldp	x22, x21, [sp, #32]
    c8e4:	ldp	x29, x30, [sp, #16]
    c8e8:	add	sp, sp, #0x40
    c8ec:	ret

000000000000c8f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>:
    c8f0:	stp	x29, x30, [sp, #-64]!
    c8f4:	str	x23, [sp, #16]
    c8f8:	stp	x22, x21, [sp, #32]
    c8fc:	stp	x20, x19, [sp, #48]
    c900:	mov	x29, sp
    c904:	ldrb	w8, [x1, #1]
    c908:	mov	x22, x1
    c90c:	mov	x21, x0
    c910:	add	x1, x29, #0x18
    c914:	and	w8, w8, #0x7f
    c918:	cmp	w8, #0x1
    c91c:	cset	w8, eq  // eq = none
    c920:	mov	x0, x2
    c924:	mov	w20, w3
    c928:	mov	x19, x2
    c92c:	str	x8, [x29, #24]
    c930:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c934:	mov	x0, x22
    c938:	mov	w1, wzr
    c93c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c940:	add	x23, x21, #0x118
    c944:	mov	x1, x0
    c948:	mov	x0, x23
    c94c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c950:	lsr	x8, x0, #32
    c954:	add	x1, x29, #0x18
    c958:	mov	x0, x19
    c95c:	str	x8, [x29, #24]
    c960:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c964:	mov	w1, #0x1                   	// #1
    c968:	mov	x0, x22
    c96c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c970:	mov	x1, x0
    c974:	mov	x0, x23
    c978:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c97c:	lsr	x8, x0, #32
    c980:	add	x1, x29, #0x18
    c984:	mov	x0, x19
    c988:	str	x8, [x29, #24]
    c98c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c990:	ldrb	w8, [x22, #40]
    c994:	cbz	w8, c9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xd0>
    c998:	ldr	w8, [x22, #24]
    c99c:	add	x1, x29, #0x18
    c9a0:	mov	x0, x19
    c9a4:	str	x8, [x29, #24]
    c9a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c9ac:	ldrb	w8, [x22, #40]
    c9b0:	cbz	w8, ca44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x154>
    c9b4:	ldr	x1, [x22, #32]
    c9b8:	mov	x0, x23
    c9bc:	b	c9d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xe8>
    c9c0:	add	x1, x29, #0x18
    c9c4:	mov	x0, x19
    c9c8:	str	xzr, [x29, #24]
    c9cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c9d0:	mov	x0, x23
    c9d4:	mov	x1, xzr
    c9d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c9dc:	lsr	x8, x0, #32
    c9e0:	add	x1, x29, #0x18
    c9e4:	mov	x0, x19
    c9e8:	str	x8, [x29, #24]
    c9ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c9f0:	ldrb	w8, [x22, #56]
    c9f4:	cbz	w8, ca18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x128>
    c9f8:	ldr	x1, [x22, #48]
    c9fc:	mov	x0, x23
    ca00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ca04:	lsr	x8, x0, #32
    ca08:	add	x1, x29, #0x18
    ca0c:	mov	x0, x19
    ca10:	str	x8, [x29, #24]
    ca14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ca18:	ldr	x0, [x21]
    ca1c:	mov	w1, #0x10                  	// #16
    ca20:	mov	x2, x19
    ca24:	mov	w3, w20
    ca28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ca2c:	str	wzr, [x19, #8]
    ca30:	ldp	x20, x19, [sp, #48]
    ca34:	ldp	x22, x21, [sp, #32]
    ca38:	ldr	x23, [sp, #16]
    ca3c:	ldp	x29, x30, [sp], #64
    ca40:	ret
    ca44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ca48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ca4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ca50:	add	x0, x0, #0x0
    ca54:	add	x1, x1, #0x0
    ca58:	add	x3, x3, #0x0
    ca5c:	mov	w2, #0xad                  	// #173
    ca60:	bl	0 <__assert_fail>

000000000000ca64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>:
    ca64:	stp	x29, x30, [sp, #-64]!
    ca68:	str	x23, [sp, #16]
    ca6c:	stp	x22, x21, [sp, #32]
    ca70:	stp	x20, x19, [sp, #48]
    ca74:	mov	x29, sp
    ca78:	ldrb	w8, [x1, #1]
    ca7c:	and	w8, w8, #0x7f
    ca80:	cmp	w8, #0x1
    ca84:	b.ne	cd00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x29c>  // b.any
    ca88:	mov	x22, x1
    ca8c:	mov	x21, x0
    ca90:	mov	w8, #0x1                   	// #1
    ca94:	add	x1, x29, #0x18
    ca98:	mov	x0, x2
    ca9c:	mov	w20, w3
    caa0:	mov	x19, x2
    caa4:	str	x8, [x29, #24]
    caa8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    caac:	ldr	w8, [x22, #24]
    cab0:	add	x1, x29, #0x18
    cab4:	mov	x0, x19
    cab8:	str	x8, [x29, #24]
    cabc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cac0:	mov	x0, x22
    cac4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cac8:	add	x23, x21, #0x118
    cacc:	mov	x1, x0
    cad0:	mov	x0, x23
    cad4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cad8:	lsr	x8, x0, #32
    cadc:	add	x1, x29, #0x18
    cae0:	mov	x0, x19
    cae4:	str	x8, [x29, #24]
    cae8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    caec:	mov	w1, #0x1                   	// #1
    caf0:	mov	x0, x22
    caf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    caf8:	mov	x1, x0
    cafc:	mov	x0, x23
    cb00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb04:	lsr	x8, x0, #32
    cb08:	add	x1, x29, #0x18
    cb0c:	mov	x0, x19
    cb10:	str	x8, [x29, #24]
    cb14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb18:	ldrb	w8, [x22, #28]
    cb1c:	add	x1, x29, #0x18
    cb20:	mov	x0, x19
    cb24:	str	x8, [x29, #24]
    cb28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb2c:	mov	w1, #0x2                   	// #2
    cb30:	mov	x0, x22
    cb34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb38:	mov	x1, x0
    cb3c:	mov	x0, x23
    cb40:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb44:	lsr	x8, x0, #32
    cb48:	add	x1, x29, #0x18
    cb4c:	mov	x0, x19
    cb50:	str	x8, [x29, #24]
    cb54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb58:	ldr	w8, [x22, #32]
    cb5c:	add	x1, x29, #0x18
    cb60:	mov	x0, x19
    cb64:	str	x8, [x29, #24]
    cb68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb6c:	mov	w1, #0x3                   	// #3
    cb70:	mov	x0, x22
    cb74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb78:	mov	x1, x0
    cb7c:	mov	x0, x23
    cb80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb84:	lsr	x8, x0, #32
    cb88:	add	x1, x29, #0x18
    cb8c:	mov	x0, x19
    cb90:	str	x8, [x29, #24]
    cb94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb98:	ldr	w8, [x22, #36]
    cb9c:	add	x1, x29, #0x18
    cba0:	mov	x0, x19
    cba4:	str	x8, [x29, #24]
    cba8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbac:	mov	x0, x22
    cbb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbb4:	mov	x1, x0
    cbb8:	mov	x0, x23
    cbbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbc0:	lsr	x8, x0, #32
    cbc4:	add	x1, x29, #0x18
    cbc8:	mov	x0, x19
    cbcc:	str	x8, [x29, #24]
    cbd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbd4:	mov	x0, x22
    cbd8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbdc:	mov	x1, x0
    cbe0:	mov	x0, x23
    cbe4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbe8:	lsr	x8, x0, #32
    cbec:	add	x1, x29, #0x18
    cbf0:	mov	x0, x19
    cbf4:	str	x8, [x29, #24]
    cbf8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cbfc:	add	x1, x29, #0x18
    cc00:	mov	x0, x19
    cc04:	str	xzr, [x29, #24]
    cc08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc0c:	mov	x0, x22
    cc10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc14:	mov	x1, x0
    cc18:	mov	x0, x23
    cc1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc20:	lsr	x8, x0, #32
    cc24:	add	x1, x29, #0x18
    cc28:	mov	x0, x19
    cc2c:	str	x8, [x29, #24]
    cc30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc34:	mov	x0, x22
    cc38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc3c:	mov	x1, x0
    cc40:	mov	x0, x23
    cc44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc48:	lsr	x8, x0, #32
    cc4c:	add	x1, x29, #0x18
    cc50:	mov	x0, x19
    cc54:	str	x8, [x29, #24]
    cc58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc5c:	ldr	x8, [x22, #40]
    cc60:	add	x1, x29, #0x18
    cc64:	mov	x0, x19
    cc68:	str	x8, [x29, #24]
    cc6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc70:	mov	x0, x22
    cc74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc78:	mov	x1, x0
    cc7c:	mov	x0, x23
    cc80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc84:	lsr	x8, x0, #32
    cc88:	add	x1, x29, #0x18
    cc8c:	mov	x0, x19
    cc90:	str	x8, [x29, #24]
    cc94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cc98:	ldrb	w8, [x22, #48]
    cc9c:	add	x1, x29, #0x18
    cca0:	mov	x0, x19
    cca4:	str	x8, [x29, #24]
    cca8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ccac:	ldrb	w8, [x22, #49]
    ccb0:	add	x1, x29, #0x18
    ccb4:	mov	x0, x19
    ccb8:	str	x8, [x29, #24]
    ccbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ccc0:	ldr	w8, [x22, #52]
    ccc4:	add	x1, x29, #0x18
    ccc8:	mov	x0, x19
    cccc:	str	x8, [x29, #24]
    ccd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ccd4:	ldr	x0, [x21]
    ccd8:	mov	w1, #0x14                  	// #20
    ccdc:	mov	x2, x19
    cce0:	mov	w3, w20
    cce4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cce8:	str	wzr, [x19, #8]
    ccec:	ldp	x20, x19, [sp, #48]
    ccf0:	ldp	x22, x21, [sp, #32]
    ccf4:	ldr	x23, [sp, #16]
    ccf8:	ldp	x29, x30, [sp], #64
    ccfc:	ret
    cd00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd0c:	add	x0, x0, #0x0
    cd10:	add	x1, x1, #0x0
    cd14:	add	x3, x3, #0x0
    cd18:	mov	w2, #0x66c                 	// #1644
    cd1c:	bl	0 <__assert_fail>

000000000000cd20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>:
    cd20:	stp	x29, x30, [sp, #-64]!
    cd24:	str	x23, [sp, #16]
    cd28:	stp	x22, x21, [sp, #32]
    cd2c:	stp	x20, x19, [sp, #48]
    cd30:	mov	x29, sp
    cd34:	ldrb	w8, [x1, #1]
    cd38:	mov	x22, x1
    cd3c:	mov	x21, x0
    cd40:	add	x1, x29, #0x18
    cd44:	and	w8, w8, #0x7f
    cd48:	cmp	w8, #0x1
    cd4c:	cset	w8, eq  // eq = none
    cd50:	orr	x8, x8, #0x6
    cd54:	mov	x0, x2
    cd58:	mov	w20, w3
    cd5c:	mov	x19, x2
    cd60:	str	x8, [x29, #24]
    cd64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd68:	mov	x0, x22
    cd6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd70:	add	x23, x21, #0x118
    cd74:	mov	x1, x0
    cd78:	mov	x0, x23
    cd7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd80:	lsr	x8, x0, #32
    cd84:	add	x1, x29, #0x18
    cd88:	mov	x0, x19
    cd8c:	str	x8, [x29, #24]
    cd90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cd94:	mov	w1, #0x2                   	// #2
    cd98:	mov	x0, x22
    cd9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cda0:	mov	x1, x0
    cda4:	mov	x0, x23
    cda8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdac:	lsr	x8, x0, #32
    cdb0:	add	x1, x29, #0x18
    cdb4:	mov	x0, x19
    cdb8:	str	x8, [x29, #24]
    cdbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdc0:	mov	w1, #0x3                   	// #3
    cdc4:	mov	x0, x22
    cdc8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdcc:	mov	x1, x0
    cdd0:	mov	x0, x23
    cdd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdd8:	lsr	x8, x0, #32
    cddc:	add	x1, x29, #0x18
    cde0:	mov	x0, x19
    cde4:	str	x8, [x29, #24]
    cde8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdec:	mov	x0, x22
    cdf0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdf4:	mov	x1, x0
    cdf8:	mov	x0, x23
    cdfc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce00:	lsr	x8, x0, #32
    ce04:	add	x1, x29, #0x18
    ce08:	mov	x0, x19
    ce0c:	str	x8, [x29, #24]
    ce10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce14:	ldr	w8, [x22, #24]
    ce18:	add	x1, x29, #0x18
    ce1c:	mov	x0, x19
    ce20:	str	x8, [x29, #24]
    ce24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce28:	mov	x0, x22
    ce2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce30:	mov	x1, x0
    ce34:	mov	x0, x23
    ce38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce3c:	lsr	x8, x0, #32
    ce40:	add	x1, x29, #0x18
    ce44:	mov	x0, x19
    ce48:	str	x8, [x29, #24]
    ce4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce50:	ldr	w8, [x22, #28]
    ce54:	add	x1, x29, #0x18
    ce58:	mov	x0, x19
    ce5c:	str	x8, [x29, #24]
    ce60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce64:	mov	x0, x22
    ce68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce6c:	mov	x1, x0
    ce70:	mov	x0, x23
    ce74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce78:	lsr	x8, x0, #32
    ce7c:	add	x1, x29, #0x18
    ce80:	mov	x0, x19
    ce84:	str	x8, [x29, #24]
    ce88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce8c:	ldr	w8, [x22, #44]
    ce90:	add	x1, x29, #0x18
    ce94:	mov	x0, x19
    ce98:	str	x8, [x29, #24]
    ce9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cea0:	ldr	w8, [x22, #32]
    cea4:	add	x1, x29, #0x18
    cea8:	mov	x0, x19
    ceac:	str	x8, [x29, #24]
    ceb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ceb4:	ldr	w8, [x22, #40]
    ceb8:	add	x1, x29, #0x18
    cebc:	mov	x0, x19
    cec0:	str	x8, [x29, #24]
    cec4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cec8:	ldr	w8, [x22, #8]
    cecc:	cmp	w8, #0x5
    ced0:	b.ls	cfd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x2b8>  // b.plast
    ced4:	sub	x8, x22, x8, lsl #3
    ced8:	ldr	x1, [x8, #40]
    cedc:	mov	x0, x23
    cee0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cee4:	lsr	x8, x0, #32
    cee8:	add	x1, x29, #0x18
    ceec:	mov	x0, x19
    cef0:	str	x8, [x29, #24]
    cef4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cef8:	mov	x0, x22
    cefc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf00:	mov	x1, x0
    cf04:	mov	x0, x23
    cf08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf0c:	lsr	x8, x0, #32
    cf10:	add	x1, x29, #0x18
    cf14:	mov	x0, x19
    cf18:	str	x8, [x29, #24]
    cf1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf20:	mov	x0, x22
    cf24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf28:	mov	x1, x0
    cf2c:	mov	x0, x23
    cf30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf34:	lsr	x8, x0, #32
    cf38:	add	x1, x29, #0x18
    cf3c:	mov	x0, x19
    cf40:	str	x8, [x29, #24]
    cf44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf48:	mov	x0, x22
    cf4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf50:	mov	x1, x0
    cf54:	mov	x0, x23
    cf58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf5c:	lsr	x8, x0, #32
    cf60:	add	x1, x29, #0x18
    cf64:	mov	x0, x19
    cf68:	str	x8, [x29, #24]
    cf6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf70:	ldrsw	x8, [x22, #36]
    cf74:	add	x1, x29, #0x18
    cf78:	mov	x0, x19
    cf7c:	str	x8, [x29, #24]
    cf80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf84:	mov	x0, x22
    cf88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf8c:	mov	x1, x0
    cf90:	mov	x0, x23
    cf94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cf98:	lsr	x8, x0, #32
    cf9c:	add	x1, x29, #0x18
    cfa0:	mov	x0, x19
    cfa4:	str	x8, [x29, #24]
    cfa8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cfac:	ldr	x0, [x21]
    cfb0:	mov	w1, #0x15                  	// #21
    cfb4:	mov	x2, x19
    cfb8:	mov	w3, w20
    cfbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cfc0:	str	wzr, [x19, #8]
    cfc4:	ldp	x20, x19, [sp, #48]
    cfc8:	ldp	x22, x21, [sp, #32]
    cfcc:	ldr	x23, [sp, #16]
    cfd0:	ldp	x29, x30, [sp], #64
    cfd4:	ret
    cfd8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cfdc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cfe0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cfe4:	add	x0, x0, #0x0
    cfe8:	add	x1, x1, #0x0
    cfec:	add	x3, x3, #0x0
    cff0:	mov	w2, #0x436                 	// #1078
    cff4:	bl	0 <__assert_fail>

000000000000cff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>:
    cff8:	stp	x29, x30, [sp, #-64]!
    cffc:	str	x23, [sp, #16]
    d000:	stp	x22, x21, [sp, #32]
    d004:	stp	x20, x19, [sp, #48]
    d008:	mov	x29, sp
    d00c:	ldrb	w8, [x1, #1]
    d010:	mov	x22, x1
    d014:	mov	x21, x0
    d018:	add	x1, x29, #0x18
    d01c:	and	w8, w8, #0x7f
    d020:	cmp	w8, #0x1
    d024:	cset	w8, eq  // eq = none
    d028:	mov	x0, x2
    d02c:	mov	w20, w3
    d030:	mov	x19, x2
    d034:	str	x8, [x29, #24]
    d038:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d03c:	mov	x0, x22
    d040:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d044:	add	x23, x21, #0x118
    d048:	mov	x1, x0
    d04c:	mov	x0, x23
    d050:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d054:	lsr	x8, x0, #32
    d058:	add	x1, x29, #0x18
    d05c:	mov	x0, x19
    d060:	str	x8, [x29, #24]
    d064:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d068:	mov	x0, x22
    d06c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d070:	mov	x1, x0
    d074:	mov	x0, x23
    d078:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d07c:	lsr	x8, x0, #32
    d080:	add	x1, x29, #0x18
    d084:	mov	x0, x19
    d088:	str	x8, [x29, #24]
    d08c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d090:	ldr	w8, [x22, #24]
    d094:	add	x1, x29, #0x18
    d098:	mov	x0, x19
    d09c:	str	x8, [x29, #24]
    d0a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d0a4:	ldrh	w8, [x22, #28]
    d0a8:	add	x1, x29, #0x18
    d0ac:	mov	x0, x19
    d0b0:	str	x8, [x29, #24]
    d0b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d0b8:	ldr	x0, [x21]
    d0bc:	mov	w1, #0x16                  	// #22
    d0c0:	mov	x2, x19
    d0c4:	mov	w3, w20
    d0c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d0cc:	str	wzr, [x19, #8]
    d0d0:	ldp	x20, x19, [sp, #48]
    d0d4:	ldp	x22, x21, [sp, #32]
    d0d8:	ldr	x23, [sp, #16]
    d0dc:	ldp	x29, x30, [sp], #64
    d0e0:	ret

000000000000d0e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>:
    d0e4:	stp	x29, x30, [sp, #-64]!
    d0e8:	str	x23, [sp, #16]
    d0ec:	stp	x22, x21, [sp, #32]
    d0f0:	stp	x20, x19, [sp, #48]
    d0f4:	mov	x29, sp
    d0f8:	ldrb	w8, [x1, #1]
    d0fc:	mov	x21, x1
    d100:	mov	x22, x0
    d104:	add	x1, x29, #0x18
    d108:	and	w8, w8, #0x7f
    d10c:	cmp	w8, #0x1
    d110:	cset	w8, eq  // eq = none
    d114:	mov	x0, x2
    d118:	mov	w20, w3
    d11c:	mov	x19, x2
    d120:	str	x8, [x29, #24]
    d124:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d128:	mov	x0, x21
    d12c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d130:	add	x23, x22, #0x118
    d134:	mov	x1, x0
    d138:	mov	x0, x23
    d13c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d140:	lsr	x8, x0, #32
    d144:	add	x1, x29, #0x18
    d148:	mov	x0, x19
    d14c:	str	x8, [x29, #24]
    d150:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d154:	mov	x0, x21
    d158:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d15c:	mov	x1, x0
    d160:	mov	x0, x23
    d164:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d168:	lsr	x8, x0, #32
    d16c:	add	x1, x29, #0x18
    d170:	mov	x0, x19
    d174:	str	x8, [x29, #24]
    d178:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d17c:	ldr	w8, [x21, #24]
    d180:	add	x1, x29, #0x18
    d184:	mov	x0, x19
    d188:	str	x8, [x29, #24]
    d18c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d190:	ldr	x0, [x22]
    d194:	mov	w1, #0x17                  	// #23
    d198:	mov	x2, x19
    d19c:	mov	w3, w20
    d1a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d1a4:	str	wzr, [x19, #8]
    d1a8:	ldp	x20, x19, [sp, #48]
    d1ac:	ldp	x22, x21, [sp, #32]
    d1b0:	ldr	x23, [sp, #16]
    d1b4:	ldp	x29, x30, [sp], #64
    d1b8:	ret

000000000000d1bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj>:
    d1bc:	stp	x29, x30, [sp, #-64]!
    d1c0:	str	x23, [sp, #16]
    d1c4:	stp	x22, x21, [sp, #32]
    d1c8:	stp	x20, x19, [sp, #48]
    d1cc:	mov	x29, sp
    d1d0:	ldrb	w8, [x1, #1]
    d1d4:	ldrb	w9, [x1, #24]
    d1d8:	mov	x21, x1
    d1dc:	mov	x22, x0
    d1e0:	and	w8, w8, #0x7f
    d1e4:	lsl	w9, w9, #1
    d1e8:	cmp	w8, #0x1
    d1ec:	cset	w8, eq  // eq = none
    d1f0:	and	x9, x9, #0x2
    d1f4:	orr	x8, x9, x8
    d1f8:	add	x1, x29, #0x18
    d1fc:	mov	x0, x2
    d200:	mov	w20, w3
    d204:	mov	x19, x2
    d208:	str	x8, [x29, #24]
    d20c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d210:	mov	x0, x21
    d214:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d218:	add	x23, x22, #0x118
    d21c:	mov	x1, x0
    d220:	mov	x0, x23
    d224:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d228:	lsr	x8, x0, #32
    d22c:	add	x1, x29, #0x18
    d230:	mov	x0, x19
    d234:	str	x8, [x29, #24]
    d238:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d23c:	mov	w1, #0x2                   	// #2
    d240:	mov	x0, x21
    d244:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d248:	mov	x1, x0
    d24c:	mov	x0, x23
    d250:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d254:	lsr	x8, x0, #32
    d258:	add	x1, x29, #0x18
    d25c:	mov	x0, x19
    d260:	str	x8, [x29, #24]
    d264:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d268:	ldr	x0, [x22]
    d26c:	mov	w1, #0x18                  	// #24
    d270:	mov	x2, x19
    d274:	mov	w3, w20
    d278:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d27c:	str	wzr, [x19, #8]
    d280:	ldp	x20, x19, [sp, #48]
    d284:	ldp	x22, x21, [sp, #32]
    d288:	ldr	x23, [sp, #16]
    d28c:	ldp	x29, x30, [sp], #64
    d290:	ret

000000000000d294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>:
    d294:	sub	sp, sp, #0x50
    d298:	stp	x29, x30, [sp, #16]
    d29c:	stp	x24, x23, [sp, #32]
    d2a0:	stp	x22, x21, [sp, #48]
    d2a4:	stp	x20, x19, [sp, #64]
    d2a8:	add	x29, sp, #0x10
    d2ac:	ldrb	w8, [x1, #1]
    d2b0:	mov	x22, x1
    d2b4:	mov	x21, x0
    d2b8:	add	x1, sp, #0x8
    d2bc:	and	w8, w8, #0x7f
    d2c0:	cmp	w8, #0x1
    d2c4:	cset	w8, eq  // eq = none
    d2c8:	mov	x0, x2
    d2cc:	mov	w20, w3
    d2d0:	mov	x19, x2
    d2d4:	str	x8, [sp, #8]
    d2d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d2dc:	ldr	w8, [x22, #8]
    d2e0:	neg	x9, x8
    d2e4:	lsl	x9, x9, #3
    d2e8:	cbz	x9, d31c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x88>
    d2ec:	add	x23, x21, #0x118
    d2f0:	neg	x24, x8, lsl #3
    d2f4:	ldr	x1, [x22, x24]
    d2f8:	mov	x0, x23
    d2fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d300:	lsr	x8, x0, #32
    d304:	add	x1, sp, #0x8
    d308:	mov	x0, x19
    d30c:	str	x8, [sp, #8]
    d310:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d314:	adds	x24, x24, #0x8
    d318:	b.ne	d2f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x60>  // b.any
    d31c:	ldr	x0, [x21]
    d320:	mov	w1, #0x20                  	// #32
    d324:	mov	x2, x19
    d328:	mov	w3, w20
    d32c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d330:	str	wzr, [x19, #8]
    d334:	ldp	x20, x19, [sp, #64]
    d338:	ldp	x22, x21, [sp, #48]
    d33c:	ldp	x24, x23, [sp, #32]
    d340:	ldp	x29, x30, [sp, #16]
    d344:	add	sp, sp, #0x50
    d348:	ret

000000000000d34c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28writeDITemplateTypeParameterEPKN4llvm23DITemplateTypeParameterERNS1_15SmallVectorImplImEEj>:
    d34c:	stp	x29, x30, [sp, #-64]!
    d350:	str	x23, [sp, #16]
    d354:	stp	x22, x21, [sp, #32]
    d358:	stp	x20, x19, [sp, #48]
    d35c:	mov	x29, sp
    d360:	ldrb	w8, [x1, #1]
    d364:	mov	x21, x1
    d368:	mov	x22, x0
    d36c:	add	x1, x29, #0x18
    d370:	and	w8, w8, #0x7f
    d374:	cmp	w8, #0x1
    d378:	cset	w8, eq  // eq = none
    d37c:	mov	x0, x2
    d380:	mov	w20, w3
    d384:	mov	x19, x2
    d388:	str	x8, [x29, #24]
    d38c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d390:	mov	x0, x21
    d394:	mov	w1, wzr
    d398:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d39c:	add	x23, x22, #0x118
    d3a0:	mov	x1, x0
    d3a4:	mov	x0, x23
    d3a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d3ac:	lsr	x8, x0, #32
    d3b0:	add	x1, x29, #0x18
    d3b4:	mov	x0, x19
    d3b8:	str	x8, [x29, #24]
    d3bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d3c0:	mov	x0, x21
    d3c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d3c8:	mov	x1, x0
    d3cc:	mov	x0, x23
    d3d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d3d4:	lsr	x8, x0, #32
    d3d8:	add	x1, x29, #0x18
    d3dc:	mov	x0, x19
    d3e0:	str	x8, [x29, #24]
    d3e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d3e8:	ldr	x0, [x22]
    d3ec:	mov	w1, #0x19                  	// #25
    d3f0:	mov	x2, x19
    d3f4:	mov	w3, w20
    d3f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d3fc:	str	wzr, [x19, #8]
    d400:	ldp	x20, x19, [sp, #48]
    d404:	ldp	x22, x21, [sp, #32]
    d408:	ldr	x23, [sp, #16]
    d40c:	ldp	x29, x30, [sp], #64
    d410:	ret

000000000000d414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>:
    d414:	stp	x29, x30, [sp, #-64]!
    d418:	str	x23, [sp, #16]
    d41c:	stp	x22, x21, [sp, #32]
    d420:	stp	x20, x19, [sp, #48]
    d424:	mov	x29, sp
    d428:	ldrb	w8, [x1, #1]
    d42c:	mov	x22, x1
    d430:	mov	x21, x0
    d434:	add	x1, x29, #0x18
    d438:	and	w8, w8, #0x7f
    d43c:	cmp	w8, #0x1
    d440:	cset	w8, eq  // eq = none
    d444:	mov	x0, x2
    d448:	mov	w20, w3
    d44c:	mov	x19, x2
    d450:	str	x8, [x29, #24]
    d454:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d458:	ldrh	w8, [x22, #2]
    d45c:	add	x1, x29, #0x18
    d460:	mov	x0, x19
    d464:	str	x8, [x29, #24]
    d468:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d46c:	mov	x0, x22
    d470:	mov	w1, wzr
    d474:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d478:	add	x23, x21, #0x118
    d47c:	mov	x1, x0
    d480:	mov	x0, x23
    d484:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d488:	lsr	x8, x0, #32
    d48c:	add	x1, x29, #0x18
    d490:	mov	x0, x19
    d494:	str	x8, [x29, #24]
    d498:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d49c:	mov	x0, x22
    d4a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d4a4:	mov	x1, x0
    d4a8:	mov	x0, x23
    d4ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d4b0:	lsr	x8, x0, #32
    d4b4:	add	x1, x29, #0x18
    d4b8:	mov	x0, x19
    d4bc:	str	x8, [x29, #24]
    d4c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d4c4:	ldr	w8, [x22, #8]
    d4c8:	cmp	w8, #0x2
    d4cc:	b.ls	d520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x10c>  // b.plast
    d4d0:	sub	x8, x22, x8, lsl #3
    d4d4:	ldr	x1, [x8, #16]
    d4d8:	mov	x0, x23
    d4dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d4e0:	lsr	x8, x0, #32
    d4e4:	add	x1, x29, #0x18
    d4e8:	mov	x0, x19
    d4ec:	str	x8, [x29, #24]
    d4f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d4f4:	ldr	x0, [x21]
    d4f8:	mov	w1, #0x1a                  	// #26
    d4fc:	mov	x2, x19
    d500:	mov	w3, w20
    d504:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d508:	str	wzr, [x19, #8]
    d50c:	ldp	x20, x19, [sp, #48]
    d510:	ldp	x22, x21, [sp, #32]
    d514:	ldr	x23, [sp, #16]
    d518:	ldp	x29, x30, [sp], #64
    d51c:	ret
    d520:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d524:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d528:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d52c:	add	x0, x0, #0x0
    d530:	add	x1, x1, #0x0
    d534:	add	x3, x3, #0x0
    d538:	mov	w2, #0x436                 	// #1078
    d53c:	bl	0 <__assert_fail>

000000000000d540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>:
    d540:	stp	x29, x30, [sp, #-64]!
    d544:	str	x23, [sp, #16]
    d548:	stp	x22, x21, [sp, #32]
    d54c:	stp	x20, x19, [sp, #48]
    d550:	mov	x29, sp
    d554:	ldrb	w8, [x1, #1]
    d558:	mov	x22, x1
    d55c:	mov	x21, x0
    d560:	add	x1, x29, #0x18
    d564:	and	w8, w8, #0x7f
    d568:	cmp	w8, #0x1
    d56c:	cset	w8, eq  // eq = none
    d570:	orr	x8, x8, #0x4
    d574:	mov	x0, x2
    d578:	mov	w20, w3
    d57c:	mov	x19, x2
    d580:	str	x8, [x29, #24]
    d584:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d588:	mov	x0, x22
    d58c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d590:	add	x23, x21, #0x118
    d594:	mov	x1, x0
    d598:	mov	x0, x23
    d59c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5a0:	lsr	x8, x0, #32
    d5a4:	add	x1, x29, #0x18
    d5a8:	mov	x0, x19
    d5ac:	str	x8, [x29, #24]
    d5b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5b4:	mov	w1, #0x1                   	// #1
    d5b8:	mov	x0, x22
    d5bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5c0:	mov	x1, x0
    d5c4:	mov	x0, x23
    d5c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5cc:	lsr	x8, x0, #32
    d5d0:	add	x1, x29, #0x18
    d5d4:	mov	x0, x19
    d5d8:	str	x8, [x29, #24]
    d5dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5e0:	mov	w1, #0x5                   	// #5
    d5e4:	mov	x0, x22
    d5e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5ec:	mov	x1, x0
    d5f0:	mov	x0, x23
    d5f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d5f8:	lsr	x8, x0, #32
    d5fc:	add	x1, x29, #0x18
    d600:	mov	x0, x19
    d604:	str	x8, [x29, #24]
    d608:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d60c:	mov	x0, x22
    d610:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d614:	mov	x1, x0
    d618:	mov	x0, x23
    d61c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d620:	lsr	x8, x0, #32
    d624:	add	x1, x29, #0x18
    d628:	mov	x0, x19
    d62c:	str	x8, [x29, #24]
    d630:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d634:	ldr	w8, [x22, #24]
    d638:	add	x1, x29, #0x18
    d63c:	mov	x0, x19
    d640:	str	x8, [x29, #24]
    d644:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d648:	mov	x0, x22
    d64c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d650:	mov	x1, x0
    d654:	mov	x0, x23
    d658:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d65c:	lsr	x8, x0, #32
    d660:	add	x1, x29, #0x18
    d664:	mov	x0, x19
    d668:	str	x8, [x29, #24]
    d66c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d670:	ldrb	w8, [x22, #32]
    d674:	add	x1, x29, #0x18
    d678:	mov	x0, x19
    d67c:	str	x8, [x29, #24]
    d680:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d684:	ldrb	w8, [x22, #33]
    d688:	add	x1, x29, #0x18
    d68c:	mov	x0, x19
    d690:	str	x8, [x29, #24]
    d694:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d698:	mov	x0, x22
    d69c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d6a0:	mov	x1, x0
    d6a4:	mov	x0, x23
    d6a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d6ac:	lsr	x8, x0, #32
    d6b0:	add	x1, x29, #0x18
    d6b4:	mov	x0, x19
    d6b8:	str	x8, [x29, #24]
    d6bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d6c0:	mov	w1, #0x7                   	// #7
    d6c4:	mov	x0, x22
    d6c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d6cc:	mov	x1, x0
    d6d0:	mov	x0, x23
    d6d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d6d8:	lsr	x8, x0, #32
    d6dc:	add	x1, x29, #0x18
    d6e0:	mov	x0, x19
    d6e4:	str	x8, [x29, #24]
    d6e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d6ec:	ldr	w8, [x22, #28]
    d6f0:	add	x1, x29, #0x18
    d6f4:	mov	x0, x19
    d6f8:	str	x8, [x29, #24]
    d6fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d700:	ldr	x0, [x21]
    d704:	mov	w1, #0x1b                  	// #27
    d708:	mov	x2, x19
    d70c:	mov	w3, w20
    d710:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d714:	str	wzr, [x19, #8]
    d718:	ldp	x20, x19, [sp, #48]
    d71c:	ldp	x22, x21, [sp, #32]
    d720:	ldr	x23, [sp, #16]
    d724:	ldp	x29, x30, [sp], #64
    d728:	ret

000000000000d72c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>:
    d72c:	stp	x29, x30, [sp, #-64]!
    d730:	str	x23, [sp, #16]
    d734:	stp	x22, x21, [sp, #32]
    d738:	stp	x20, x19, [sp, #48]
    d73c:	mov	x29, sp
    d740:	ldrb	w8, [x1, #1]
    d744:	mov	x22, x1
    d748:	mov	x21, x0
    d74c:	add	x1, x29, #0x18
    d750:	and	w8, w8, #0x7f
    d754:	cmp	w8, #0x1
    d758:	cset	w8, eq  // eq = none
    d75c:	orr	x8, x8, #0x2
    d760:	mov	x0, x2
    d764:	mov	w20, w3
    d768:	mov	x19, x2
    d76c:	str	x8, [x29, #24]
    d770:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d774:	mov	x0, x22
    d778:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d77c:	cbz	x0, d8ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x180>
    d780:	ldrb	w8, [x0]
    d784:	mov	x1, x0
    d788:	sub	w8, w8, #0x11
    d78c:	cmp	w8, #0x3
    d790:	b.cs	d8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x1a0>  // b.hs, b.nlast
    d794:	add	x23, x21, #0x118
    d798:	mov	x0, x23
    d79c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7a0:	lsr	x8, x0, #32
    d7a4:	add	x1, x29, #0x18
    d7a8:	mov	x0, x19
    d7ac:	str	x8, [x29, #24]
    d7b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7b4:	mov	w1, #0x1                   	// #1
    d7b8:	mov	x0, x22
    d7bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7c0:	mov	x1, x0
    d7c4:	mov	x0, x23
    d7c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7cc:	lsr	x8, x0, #32
    d7d0:	add	x1, x29, #0x18
    d7d4:	mov	x0, x19
    d7d8:	str	x8, [x29, #24]
    d7dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7e0:	mov	x0, x22
    d7e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7e8:	mov	x1, x0
    d7ec:	mov	x0, x23
    d7f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d7f4:	lsr	x8, x0, #32
    d7f8:	add	x1, x29, #0x18
    d7fc:	mov	x0, x19
    d800:	str	x8, [x29, #24]
    d804:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d808:	ldr	w8, [x22, #24]
    d80c:	add	x1, x29, #0x18
    d810:	mov	x0, x19
    d814:	str	x8, [x29, #24]
    d818:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d81c:	mov	x0, x22
    d820:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d824:	mov	x1, x0
    d828:	mov	x0, x23
    d82c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d830:	lsr	x8, x0, #32
    d834:	add	x1, x29, #0x18
    d838:	mov	x0, x19
    d83c:	str	x8, [x29, #24]
    d840:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d844:	ldrh	w8, [x22, #32]
    d848:	add	x1, x29, #0x18
    d84c:	mov	x0, x19
    d850:	str	x8, [x29, #24]
    d854:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d858:	ldr	w8, [x22, #36]
    d85c:	add	x1, x29, #0x18
    d860:	mov	x0, x19
    d864:	str	x8, [x29, #24]
    d868:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d86c:	ldr	w8, [x22, #28]
    d870:	add	x1, x29, #0x18
    d874:	mov	x0, x19
    d878:	str	x8, [x29, #24]
    d87c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d880:	ldr	x0, [x21]
    d884:	mov	w1, #0x1c                  	// #28
    d888:	mov	x2, x19
    d88c:	mov	w3, w20
    d890:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d894:	str	wzr, [x19, #8]
    d898:	ldp	x20, x19, [sp, #48]
    d89c:	ldp	x22, x21, [sp, #32]
    d8a0:	ldr	x23, [sp, #16]
    d8a4:	ldp	x29, x30, [sp], #64
    d8a8:	ret
    d8ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8b4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8b8:	add	x0, x0, #0x0
    d8bc:	add	x1, x1, #0x0
    d8c0:	add	x3, x3, #0x0
    d8c4:	mov	w2, #0x69                  	// #105
    d8c8:	bl	0 <__assert_fail>
    d8cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8d8:	add	x0, x0, #0x0
    d8dc:	add	x1, x1, #0x0
    d8e0:	add	x3, x3, #0x0
    d8e4:	mov	w2, #0x108                 	// #264
    d8e8:	bl	0 <__assert_fail>

000000000000d8ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>:
    d8ec:	stp	x29, x30, [sp, #-64]!
    d8f0:	str	x23, [sp, #16]
    d8f4:	stp	x22, x21, [sp, #32]
    d8f8:	stp	x20, x19, [sp, #48]
    d8fc:	mov	x29, sp
    d900:	ldrb	w8, [x1, #1]
    d904:	mov	x22, x1
    d908:	mov	x21, x0
    d90c:	add	x1, x29, #0x18
    d910:	and	w8, w8, #0x7f
    d914:	cmp	w8, #0x1
    d918:	cset	w8, eq  // eq = none
    d91c:	mov	x0, x2
    d920:	mov	w20, w3
    d924:	mov	x19, x2
    d928:	str	x8, [x29, #24]
    d92c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d930:	mov	x0, x22
    d934:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d938:	add	x23, x21, #0x118
    d93c:	mov	x1, x0
    d940:	mov	x0, x23
    d944:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d948:	lsr	x8, x0, #32
    d94c:	add	x1, x29, #0x18
    d950:	mov	x0, x19
    d954:	str	x8, [x29, #24]
    d958:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d95c:	mov	w1, #0x1                   	// #1
    d960:	mov	x0, x22
    d964:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d968:	mov	x1, x0
    d96c:	mov	x0, x23
    d970:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d974:	lsr	x8, x0, #32
    d978:	add	x1, x29, #0x18
    d97c:	mov	x0, x19
    d980:	str	x8, [x29, #24]
    d984:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d988:	mov	x0, x22
    d98c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d990:	mov	x1, x0
    d994:	mov	x0, x23
    d998:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d99c:	lsr	x8, x0, #32
    d9a0:	add	x1, x29, #0x18
    d9a4:	mov	x0, x19
    d9a8:	str	x8, [x29, #24]
    d9ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d9b0:	ldr	w8, [x22, #24]
    d9b4:	add	x1, x29, #0x18
    d9b8:	mov	x0, x19
    d9bc:	str	x8, [x29, #24]
    d9c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d9c4:	ldr	x0, [x21]
    d9c8:	mov	w1, #0x28                  	// #40
    d9cc:	mov	x2, x19
    d9d0:	mov	w3, w20
    d9d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d9d8:	str	wzr, [x19, #8]
    d9dc:	ldp	x20, x19, [sp, #48]
    d9e0:	ldp	x22, x21, [sp, #32]
    d9e4:	ldr	x23, [sp, #16]
    d9e8:	ldp	x29, x30, [sp], #64
    d9ec:	ret

000000000000d9f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>:
    d9f0:	stp	x29, x30, [sp, #-64]!
    d9f4:	str	x23, [sp, #16]
    d9f8:	stp	x22, x21, [sp, #32]
    d9fc:	stp	x20, x19, [sp, #48]
    da00:	mov	x29, sp
    da04:	ldrb	w8, [x1, #1]
    da08:	mov	x22, x1
    da0c:	mov	x21, x0
    da10:	add	x1, x29, #0x18
    da14:	and	w8, w8, #0x7f
    da18:	cmp	w8, #0x1
    da1c:	cset	w8, eq  // eq = none
    da20:	mov	x0, x2
    da24:	mov	w20, w3
    da28:	mov	x19, x2
    da2c:	str	x8, [x29, #24]
    da30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da34:	mov	x0, x22
    da38:	mov	w1, wzr
    da3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da40:	add	x23, x21, #0x118
    da44:	mov	x1, x0
    da48:	mov	x0, x23
    da4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da50:	lsr	x8, x0, #32
    da54:	add	x1, x29, #0x18
    da58:	mov	x0, x19
    da5c:	str	x8, [x29, #24]
    da60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da64:	mov	x0, x22
    da68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da6c:	mov	x1, x0
    da70:	mov	x0, x23
    da74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da78:	lsr	x8, x0, #32
    da7c:	add	x1, x29, #0x18
    da80:	mov	x0, x19
    da84:	str	x8, [x29, #24]
    da88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da8c:	ldr	w8, [x22, #24]
    da90:	add	x1, x29, #0x18
    da94:	mov	x0, x19
    da98:	str	x8, [x29, #24]
    da9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    daa0:	mov	w1, #0x3                   	// #3
    daa4:	mov	x0, x22
    daa8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    daac:	mov	x1, x0
    dab0:	mov	x0, x23
    dab4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dab8:	lsr	x8, x0, #32
    dabc:	add	x1, x29, #0x18
    dac0:	mov	x0, x19
    dac4:	str	x8, [x29, #24]
    dac8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dacc:	mov	w1, #0x2                   	// #2
    dad0:	mov	x0, x22
    dad4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dad8:	mov	x1, x0
    dadc:	mov	x0, x23
    dae0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dae4:	lsr	x8, x0, #32
    dae8:	add	x1, x29, #0x18
    daec:	mov	x0, x19
    daf0:	str	x8, [x29, #24]
    daf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    daf8:	ldr	w8, [x22, #28]
    dafc:	add	x1, x29, #0x18
    db00:	mov	x0, x19
    db04:	str	x8, [x29, #24]
    db08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db0c:	mov	x0, x22
    db10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db14:	mov	x1, x0
    db18:	mov	x0, x23
    db1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db20:	lsr	x8, x0, #32
    db24:	add	x1, x29, #0x18
    db28:	mov	x0, x19
    db2c:	str	x8, [x29, #24]
    db30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db34:	ldr	x0, [x21]
    db38:	mov	w1, #0x1e                  	// #30
    db3c:	mov	x2, x19
    db40:	mov	w3, w20
    db44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db48:	str	wzr, [x19, #8]
    db4c:	ldp	x20, x19, [sp, #48]
    db50:	ldp	x22, x21, [sp, #32]
    db54:	ldr	x23, [sp, #16]
    db58:	ldp	x29, x30, [sp], #64
    db5c:	ret

000000000000db60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>:
    db60:	stp	x29, x30, [sp, #-64]!
    db64:	str	x23, [sp, #16]
    db68:	stp	x22, x21, [sp, #32]
    db6c:	stp	x20, x19, [sp, #48]
    db70:	mov	x29, sp
    db74:	ldrb	w8, [x1, #1]
    db78:	mov	x22, x1
    db7c:	mov	x21, x0
    db80:	add	x1, x29, #0x18
    db84:	and	w8, w8, #0x7f
    db88:	cmp	w8, #0x1
    db8c:	cset	w8, eq  // eq = none
    db90:	mov	x0, x2
    db94:	mov	w20, w3
    db98:	mov	x19, x2
    db9c:	str	x8, [x29, #24]
    dba0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dba4:	ldrh	w8, [x22, #2]
    dba8:	add	x1, x29, #0x18
    dbac:	mov	x0, x19
    dbb0:	str	x8, [x29, #24]
    dbb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dbb8:	mov	x0, x22
    dbbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dbc0:	add	x23, x21, #0x118
    dbc4:	mov	x1, x0
    dbc8:	mov	x0, x23
    dbcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dbd0:	lsr	x8, x0, #32
    dbd4:	add	x1, x29, #0x18
    dbd8:	mov	x0, x19
    dbdc:	str	x8, [x29, #24]
    dbe0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dbe4:	mov	x0, x22
    dbe8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dbec:	mov	x1, x0
    dbf0:	mov	x0, x23
    dbf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dbf8:	lsr	x8, x0, #32
    dbfc:	add	x1, x29, #0x18
    dc00:	mov	x0, x19
    dc04:	str	x8, [x29, #24]
    dc08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc0c:	ldr	w8, [x22, #24]
    dc10:	add	x1, x29, #0x18
    dc14:	mov	x0, x19
    dc18:	str	x8, [x29, #24]
    dc1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc20:	mov	w1, #0x2                   	// #2
    dc24:	mov	x0, x22
    dc28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc2c:	mov	x1, x0
    dc30:	mov	x0, x23
    dc34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc38:	lsr	x8, x0, #32
    dc3c:	add	x1, x29, #0x18
    dc40:	mov	x0, x19
    dc44:	str	x8, [x29, #24]
    dc48:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc4c:	ldr	w8, [x22, #8]
    dc50:	cmp	w8, #0x3
    dc54:	b.ls	dca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x148>  // b.plast
    dc58:	sub	x8, x22, x8, lsl #3
    dc5c:	ldr	x1, [x8, #24]
    dc60:	mov	x0, x23
    dc64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc68:	lsr	x8, x0, #32
    dc6c:	add	x1, x29, #0x18
    dc70:	mov	x0, x19
    dc74:	str	x8, [x29, #24]
    dc78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc7c:	ldr	x0, [x21]
    dc80:	mov	w1, #0x1f                  	// #31
    dc84:	mov	x2, x19
    dc88:	mov	w3, w20
    dc8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc90:	str	wzr, [x19, #8]
    dc94:	ldp	x20, x19, [sp, #48]
    dc98:	ldp	x22, x21, [sp, #32]
    dc9c:	ldr	x23, [sp, #16]
    dca0:	ldp	x29, x30, [sp], #64
    dca4:	ret
    dca8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dcac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dcb0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dcb4:	add	x0, x0, #0x0
    dcb8:	add	x1, x1, #0x0
    dcbc:	add	x3, x3, #0x0
    dcc0:	mov	w2, #0x436                 	// #1078
    dcc4:	bl	0 <__assert_fail>

000000000000dcc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>:
    dcc8:	stp	x29, x30, [sp, #-64]!
    dccc:	str	x23, [sp, #16]
    dcd0:	stp	x22, x21, [sp, #32]
    dcd4:	stp	x20, x19, [sp, #48]
    dcd8:	mov	x29, sp
    dcdc:	ldrb	w8, [x1, #1]
    dce0:	mov	x22, x1
    dce4:	mov	x21, x0
    dce8:	add	x1, x29, #0x18
    dcec:	and	w8, w8, #0x7f
    dcf0:	cmp	w8, #0x1
    dcf4:	cset	w8, eq  // eq = none
    dcf8:	mov	x0, x2
    dcfc:	mov	w20, w3
    dd00:	mov	x19, x2
    dd04:	str	x8, [x29, #24]
    dd08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd0c:	ldrh	w8, [x22, #2]
    dd10:	add	x1, x29, #0x18
    dd14:	mov	x0, x19
    dd18:	str	x8, [x29, #24]
    dd1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd20:	ldr	w8, [x22, #24]
    dd24:	add	x1, x29, #0x18
    dd28:	mov	x0, x19
    dd2c:	str	x8, [x29, #24]
    dd30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd34:	mov	x0, x22
    dd38:	mov	w1, wzr
    dd3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd40:	add	x23, x21, #0x118
    dd44:	mov	x1, x0
    dd48:	mov	x0, x23
    dd4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd50:	lsr	x8, x0, #32
    dd54:	add	x1, x29, #0x18
    dd58:	mov	x0, x19
    dd5c:	str	x8, [x29, #24]
    dd60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd64:	mov	w1, #0x1                   	// #1
    dd68:	mov	x0, x22
    dd6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd70:	mov	x1, x0
    dd74:	mov	x0, x23
    dd78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd7c:	lsr	x8, x0, #32
    dd80:	add	x1, x29, #0x18
    dd84:	mov	x0, x19
    dd88:	str	x8, [x29, #24]
    dd8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dd90:	ldr	x0, [x21]
    dd94:	mov	w1, #0x21                  	// #33
    dd98:	mov	x2, x19
    dd9c:	mov	w3, w20
    dda0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dda4:	str	wzr, [x19, #8]
    dda8:	ldp	x20, x19, [sp, #48]
    ddac:	ldp	x22, x21, [sp, #32]
    ddb0:	ldr	x23, [sp, #16]
    ddb4:	ldp	x29, x30, [sp], #64
    ddb8:	ret

000000000000ddbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>:
    ddbc:	stp	x29, x30, [sp, #-64]!
    ddc0:	str	x23, [sp, #16]
    ddc4:	stp	x22, x21, [sp, #32]
    ddc8:	stp	x20, x19, [sp, #48]
    ddcc:	mov	x29, sp
    ddd0:	ldrb	w8, [x1, #1]
    ddd4:	mov	x22, x1
    ddd8:	mov	x21, x0
    dddc:	add	x1, x29, #0x18
    dde0:	and	w8, w8, #0x7f
    dde4:	cmp	w8, #0x1
    dde8:	cset	w8, eq  // eq = none
    ddec:	mov	x0, x2
    ddf0:	mov	w20, w3
    ddf4:	mov	x19, x2
    ddf8:	str	x8, [x29, #24]
    ddfc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de00:	ldrh	w8, [x22, #2]
    de04:	add	x1, x29, #0x18
    de08:	mov	x0, x19
    de0c:	str	x8, [x29, #24]
    de10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de14:	ldr	w8, [x22, #24]
    de18:	add	x1, x29, #0x18
    de1c:	mov	x0, x19
    de20:	str	x8, [x29, #24]
    de24:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de28:	mov	x0, x22
    de2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de30:	add	x23, x21, #0x118
    de34:	mov	x1, x0
    de38:	mov	x0, x23
    de3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de40:	lsr	x8, x0, #32
    de44:	add	x1, x29, #0x18
    de48:	mov	x0, x19
    de4c:	str	x8, [x29, #24]
    de50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de54:	mov	x0, x22
    de58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de5c:	mov	x1, x0
    de60:	mov	x0, x23
    de64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de68:	lsr	x8, x0, #32
    de6c:	add	x1, x29, #0x18
    de70:	mov	x0, x19
    de74:	str	x8, [x29, #24]
    de78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de7c:	ldr	x0, [x21]
    de80:	mov	w1, #0x22                  	// #34
    de84:	mov	x2, x19
    de88:	mov	w3, w20
    de8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de90:	str	wzr, [x19, #8]
    de94:	ldp	x20, x19, [sp, #48]
    de98:	ldp	x22, x21, [sp, #32]
    de9c:	ldr	x23, [sp, #16]
    dea0:	ldp	x29, x30, [sp], #64
    dea4:	ret

000000000000dea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>:
    dea8:	stp	x29, x30, [sp, #-64]!
    deac:	str	x23, [sp, #16]
    deb0:	stp	x22, x21, [sp, #32]
    deb4:	stp	x20, x19, [sp, #48]
    deb8:	mov	x29, sp
    debc:	ldrb	w8, [x1, #1]
    dec0:	mov	x22, x1
    dec4:	mov	x21, x0
    dec8:	add	x1, x29, #0x18
    decc:	and	w8, w8, #0x7f
    ded0:	cmp	w8, #0x1
    ded4:	cset	w8, eq  // eq = none
    ded8:	mov	x0, x2
    dedc:	mov	w20, w3
    dee0:	mov	x19, x2
    dee4:	str	x8, [x29, #24]
    dee8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    deec:	mov	x0, x22
    def0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    def4:	add	x23, x21, #0x118
    def8:	mov	x1, x0
    defc:	mov	x0, x23
    df00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df04:	lsr	x8, x0, #32
    df08:	add	x1, x29, #0x18
    df0c:	mov	x0, x19
    df10:	str	x8, [x29, #24]
    df14:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df18:	mov	x0, x22
    df1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df20:	mov	x1, x0
    df24:	mov	x0, x23
    df28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df2c:	lsr	x8, x0, #32
    df30:	add	x1, x29, #0x18
    df34:	mov	x0, x19
    df38:	str	x8, [x29, #24]
    df3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df40:	mov	w1, #0x2                   	// #2
    df44:	mov	x0, x22
    df48:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df4c:	mov	x1, x0
    df50:	mov	x0, x23
    df54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df58:	lsr	x8, x0, #32
    df5c:	add	x1, x29, #0x18
    df60:	mov	x0, x19
    df64:	str	x8, [x29, #24]
    df68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df6c:	mov	x0, x22
    df70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df74:	mov	x1, x0
    df78:	mov	x0, x23
    df7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df80:	lsr	x8, x0, #32
    df84:	add	x1, x29, #0x18
    df88:	mov	x0, x19
    df8c:	str	x8, [x29, #24]
    df90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df94:	ldr	w8, [x22, #24]
    df98:	add	x1, x29, #0x18
    df9c:	mov	x0, x19
    dfa0:	str	x8, [x29, #24]
    dfa4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfa8:	ldr	x0, [x21]
    dfac:	mov	w1, #0x2c                  	// #44
    dfb0:	mov	x2, x19
    dfb4:	mov	w3, w20
    dfb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfbc:	str	wzr, [x19, #8]
    dfc0:	ldp	x20, x19, [sp, #48]
    dfc4:	ldp	x22, x21, [sp, #32]
    dfc8:	ldr	x23, [sp, #16]
    dfcc:	ldp	x29, x30, [sp], #64
    dfd0:	ret

000000000000dfd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>:
    dfd4:	sub	sp, sp, #0x90
    dfd8:	stp	x29, x30, [sp, #80]
    dfdc:	str	x23, [sp, #96]
    dfe0:	stp	x22, x21, [sp, #112]
    dfe4:	stp	x20, x19, [sp, #128]
    dfe8:	add	x29, sp, #0x50
    dfec:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dff0:	ldr	d0, [x8]
    dff4:	mov	x8, sp
    dff8:	mov	x19, x1
    dffc:	mov	x21, x0
    e000:	add	x22, x8, #0x10
    e004:	mov	x1, sp
    e008:	mov	x0, x2
    e00c:	str	x22, [sp]
    e010:	str	d0, [sp, #8]
    e014:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    e018:	ldr	w8, [sp, #8]
    e01c:	ldr	x20, [sp]
    e020:	cbz	w8, e070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x9c>
    e024:	add	x23, x20, x8, lsl #4
    e028:	add	x21, x21, #0x18
    e02c:	ldr	w8, [x20]
    e030:	add	x1, x29, #0x18
    e034:	mov	x0, x19
    e038:	str	x8, [x29, #24]
    e03c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e040:	ldr	x1, [x20, #8]
    e044:	mov	x0, x21
    e048:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e04c:	mov	w8, w0
    e050:	add	x1, x29, #0x18
    e054:	mov	x0, x19
    e058:	str	x8, [x29, #24]
    e05c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e060:	add	x20, x20, #0x10
    e064:	cmp	x20, x23
    e068:	b.ne	e02c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x58>  // b.any
    e06c:	ldr	x20, [sp]
    e070:	cmp	x20, x22
    e074:	b.eq	e080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0xac>  // b.none
    e078:	mov	x0, x20
    e07c:	bl	0 <free>
    e080:	ldp	x20, x19, [sp, #128]
    e084:	ldp	x22, x21, [sp, #112]
    e088:	ldr	x23, [sp, #96]
    e08c:	ldp	x29, x30, [sp, #80]
    e090:	add	sp, sp, #0x90
    e094:	ret

000000000000e098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE>:
    e098:	stp	x29, x30, [sp, #-96]!
    e09c:	stp	x28, x27, [sp, #16]
    e0a0:	stp	x26, x25, [sp, #32]
    e0a4:	stp	x24, x23, [sp, #48]
    e0a8:	stp	x22, x21, [sp, #64]
    e0ac:	stp	x20, x19, [sp, #80]
    e0b0:	mov	x29, sp
    e0b4:	sub	sp, sp, #0x450
    e0b8:	add	x23, x0, #0x18
    e0bc:	mov	x19, x0
    e0c0:	mov	x0, x23
    e0c4:	mov	x20, x3
    e0c8:	mov	w22, w2
    e0cc:	mov	x21, x1
    e0d0:	bl	0 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE>
    e0d4:	ldrb	w8, [x21, #16]
    e0d8:	sub	w9, w8, #0x19
    e0dc:	cmp	w9, #0x42
    e0e0:	b.hi	f6a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x160c>  // b.pmore
    e0e4:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e0e8:	add	x10, x10, #0x0
    e0ec:	adr	x11, e104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6c>
    e0f0:	ldrh	w12, [x10, x9, lsl #1]
    e0f4:	add	x11, x11, x12, lsl #2
    e0f8:	mov	w24, #0xf                   	// #15
    e0fc:	mov	w25, #0xc                   	// #12
    e100:	br	x11
    e104:	ldur	x1, [x21, #-24]
    e108:	cmp	w8, #0x4c
    e10c:	mov	w8, #0x32                  	// #50
    e110:	mov	x0, x23
    e114:	cinc	w24, w8, ne  // ne = any
    e118:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e11c:	sub	w8, w22, w0
    e120:	add	x1, sp, #0x8
    e124:	mov	x0, x20
    e128:	str	w8, [sp, #8]
    e12c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e130:	ldr	w8, [x21, #20]
    e134:	add	x1, sp, #0x8
    e138:	mov	x0, x20
    e13c:	and	w8, w8, #0xfffffff
    e140:	sub	w8, w8, #0x1
    e144:	str	w8, [sp, #8]
    e148:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e14c:	ldr	w8, [sp, #8]
    e150:	cbz	w8, f108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1070>
    e154:	mov	w23, wzr
    e158:	mov	x0, x21
    e15c:	mov	w1, w23
    e160:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e164:	mov	x1, x0
    e168:	mov	x0, x19
    e16c:	mov	w2, w22
    e170:	mov	x3, x20
    e174:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e178:	ldr	w8, [sp, #8]
    e17c:	add	w23, w23, #0x1
    e180:	cmp	w23, w8
    e184:	b.ne	e158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc0>  // b.any
    e188:	b	f108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1070>
    e18c:	mov	x0, x21
    e190:	mov	w1, wzr
    e194:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e198:	mov	x1, x0
    e19c:	mov	x0, x19
    e1a0:	mov	w2, w22
    e1a4:	mov	x3, x20
    e1a8:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e1ac:	mov	w1, #0x1                   	// #1
    e1b0:	mov	x0, x21
    e1b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e1b8:	mov	x1, x0
    e1bc:	mov	x0, x23
    e1c0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e1c4:	sub	w8, w22, w0
    e1c8:	add	x1, sp, #0x8
    e1cc:	mov	x0, x20
    e1d0:	str	w8, [sp, #8]
    e1d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e1d8:	ldrb	w8, [x21, #16]
    e1dc:	sub	w8, w8, #0x4d
    e1e0:	cmp	w8, #0x2
    e1e4:	b.cs	faec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a54>  // b.hs, b.nlast
    e1e8:	ldrh	w8, [x21, #18]
    e1ec:	add	x1, sp, #0x8
    e1f0:	mov	x0, x20
    e1f4:	and	w8, w8, #0x7fff
    e1f8:	str	w8, [sp, #8]
    e1fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e200:	mov	x0, x21
    e204:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    e208:	cbz	x0, e21c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x184>
    e20c:	str	w0, [sp, #8]
    e210:	add	x1, sp, #0x8
    e214:	mov	x0, x20
    e218:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e21c:	mov	w25, wzr
    e220:	mov	w24, #0x1c                  	// #28
    e224:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e228:	ldr	x1, [x21]
    e22c:	mov	x0, x23
    e230:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e234:	str	w0, [sp, #8]
    e238:	add	x1, sp, #0x8
    e23c:	mov	x0, x20
    e240:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e244:	ldrh	w8, [x21, #18]
    e248:	add	x1, sp, #0x8
    e24c:	mov	x0, x20
    e250:	and	w8, w8, #0x1
    e254:	str	w8, [sp, #8]
    e258:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e25c:	ldr	w8, [x21, #20]
    e260:	add	x1, sp, #0x8
    e264:	mov	x0, x20
    e268:	and	w8, w8, #0xfffffff
    e26c:	str	w8, [sp, #8]
    e270:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e274:	ldr	w8, [x21, #20]
    e278:	ands	w26, w8, #0xfffffff
    e27c:	b.eq	f8d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1840>  // b.none
    e280:	mov	x27, xzr
    e284:	mov	w23, wzr
    e288:	mov	w28, #0x1                   	// #1
    e28c:	mov	w24, #0x2f                  	// #47
    e290:	mov	x0, x21
    e294:	mov	w1, w23
    e298:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e29c:	tbz	w0, #0, e2a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x210>
    e2a0:	str	wzr, [sp, #8]
    e2a4:	b	e2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x214>
    e2a8:	str	w28, [sp, #8]
    e2ac:	add	x1, sp, #0x8
    e2b0:	mov	x0, x20
    e2b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e2b8:	ldr	w8, [x21, #20]
    e2bc:	tbnz	w8, #30, e2d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x23c>
    e2c0:	and	x8, x8, #0xfffffff
    e2c4:	mov	w9, #0x18                  	// #24
    e2c8:	mneg	x8, x8, x9
    e2cc:	add	x8, x21, x8
    e2d0:	b	e2d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x240>
    e2d4:	ldur	x8, [x21, #-8]
    e2d8:	ldr	x1, [x8, x27]
    e2dc:	cbz	x1, f9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x194c>
    e2e0:	ldrb	w8, [x1, #16]
    e2e4:	cmp	w8, #0x11
    e2e8:	b.cs	fa04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x196c>  // b.hs, b.nlast
    e2ec:	mov	x0, x19
    e2f0:	mov	w2, w22
    e2f4:	mov	x3, x20
    e2f8:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e2fc:	add	w23, w23, #0x1
    e300:	mov	w25, wzr
    e304:	add	x27, x27, #0x18
    e308:	cmp	w26, w23
    e30c:	b.ne	e290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f8>  // b.any
    e310:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e314:	mov	x0, x21
    e318:	mov	w1, wzr
    e31c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e320:	mov	x1, x0
    e324:	mov	x0, x19
    e328:	mov	w2, w22
    e32c:	mov	x3, x20
    e330:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e334:	mov	w1, #0x1                   	// #1
    e338:	mov	x0, x21
    e33c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e340:	mov	x1, x0
    e344:	mov	x0, x19
    e348:	mov	w2, w22
    e34c:	mov	x3, x20
    e350:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e354:	mov	w25, wzr
    e358:	mov	w24, #0x6                   	// #6
    e35c:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e360:	mov	x0, x21
    e364:	mov	w1, wzr
    e368:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e36c:	ldr	x1, [x0]
    e370:	mov	x0, x23
    e374:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e378:	str	w0, [sp, #8]
    e37c:	add	x1, sp, #0x8
    e380:	mov	x0, x20
    e384:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e388:	mov	x0, x21
    e38c:	mov	w1, wzr
    e390:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e394:	mov	x1, x0
    e398:	mov	x0, x23
    e39c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e3a0:	sub	w8, w22, w0
    e3a4:	add	x1, sp, #0x8
    e3a8:	mov	x0, x20
    e3ac:	str	w8, [sp, #8]
    e3b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e3b4:	ldr	x1, [x21]
    e3b8:	mov	x0, x23
    e3bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e3c0:	str	w0, [sp, #8]
    e3c4:	add	x1, sp, #0x8
    e3c8:	mov	x0, x20
    e3cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e3d0:	mov	w25, wzr
    e3d4:	mov	w24, #0x17                  	// #23
    e3d8:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e3dc:	mov	x0, x21
    e3e0:	mov	w1, wzr
    e3e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e3e8:	mov	x1, x0
    e3ec:	mov	x0, x19
    e3f0:	mov	w2, w22
    e3f4:	mov	x3, x20
    e3f8:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e3fc:	mov	w1, #0x1                   	// #1
    e400:	mov	x0, x21
    e404:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e408:	mov	x1, x0
    e40c:	mov	x0, x23
    e410:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e414:	sub	w8, w22, w0
    e418:	add	x1, sp, #0x8
    e41c:	mov	x0, x20
    e420:	str	w8, [sp, #8]
    e424:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e428:	ldrb	w8, [x21, #16]
    e42c:	cmp	w8, #0x3d
    e430:	b.ne	fa60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19c8>  // b.any
    e434:	ldrh	w8, [x21, #18]
    e438:	ubfx	w8, w8, #5, #10
    e43c:	cmp	w8, #0xd
    e440:	b.cs	fb08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a70>  // b.hs, b.nlast
    e444:	add	x1, sp, #0x8
    e448:	mov	x0, x20
    e44c:	str	w8, [sp, #8]
    e450:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e454:	ldrb	w8, [x21, #16]
    e458:	cmp	w8, #0x3d
    e45c:	b.ne	fa60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19c8>  // b.any
    e460:	ldrh	w8, [x21, #18]
    e464:	add	x1, sp, #0x8
    e468:	mov	x0, x20
    e46c:	and	w8, w8, #0x1
    e470:	str	w8, [sp, #8]
    e474:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e478:	ldrb	w8, [x21, #16]
    e47c:	cmp	w8, #0x3d
    e480:	b.ne	fa60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19c8>  // b.any
    e484:	ldrh	w8, [x21, #18]
    e488:	ubfx	w0, w8, #2, #3
    e48c:	bl	fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>
    e490:	str	w0, [sp, #8]
    e494:	add	x1, sp, #0x8
    e498:	mov	x0, x20
    e49c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e4a0:	ldrb	w8, [x21, #16]
    e4a4:	cmp	w8, #0x3d
    e4a8:	b.ne	fa60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19c8>  // b.any
    e4ac:	ldrb	w8, [x21, #56]
    e4b0:	add	x1, sp, #0x8
    e4b4:	mov	x0, x20
    e4b8:	str	w8, [sp, #8]
    e4bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e4c0:	mov	w25, wzr
    e4c4:	mov	w24, #0x26                  	// #38
    e4c8:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e4cc:	mov	x0, x21
    e4d0:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
    e4d4:	mov	w24, w0
    e4d8:	mov	x0, x21
    e4dc:	mov	w1, wzr
    e4e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e4e4:	mov	x1, x0
    e4e8:	mov	x0, x19
    e4ec:	mov	w2, w22
    e4f0:	mov	x3, x20
    e4f4:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e4f8:	ldr	x1, [x21]
    e4fc:	orr	w8, w24, w0
    e500:	mov	w9, #0x4                   	// #4
    e504:	tst	w8, #0x1
    e508:	mov	w10, #0x14                  	// #20
    e50c:	csel	w25, wzr, w9, ne  // ne = any
    e510:	tst	w24, #0x1
    e514:	mov	w8, #0x29                  	// #41
    e518:	mov	x0, x23
    e51c:	csel	w24, w8, w10, ne  // ne = any
    e520:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e524:	str	w0, [sp, #8]
    e528:	add	x1, sp, #0x8
    e52c:	mov	x0, x20
    e530:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e534:	ldrb	w8, [x21, #16]
    e538:	cmp	w8, #0x38
    e53c:	b.ne	fa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19e4>  // b.any
    e540:	ldrh	w8, [x21, #18]
    e544:	mov	w9, #0x1f                  	// #31
    e548:	mov	w10, #0x1                   	// #1
    e54c:	add	x1, sp, #0x8
    e550:	ubfx	w11, w8, #1, #5
    e554:	tst	w9, w8, lsr #1
    e558:	add	w8, w11, #0xff
    e55c:	orr	w8, w8, #0x100
    e560:	csel	w8, wzr, w8, eq  // eq = none
    e564:	lsl	w9, w8, #23
    e568:	lsl	x8, x10, x8
    e56c:	and	w8, w8, w9, asr #31
    e570:	clz	w8, w8
    e574:	mov	w9, #0x20                  	// #32
    e578:	sub	w8, w9, w8
    e57c:	mov	x0, x20
    e580:	str	w8, [sp, #8]
    e584:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e588:	ldrb	w8, [x21, #16]
    e58c:	cmp	w8, #0x38
    e590:	b.ne	fa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19e4>  // b.any
    e594:	ldrh	w8, [x21, #18]
    e598:	add	x1, sp, #0x8
    e59c:	mov	x0, x20
    e5a0:	and	w8, w8, #0x1
    e5a4:	str	w8, [sp, #8]
    e5a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e5ac:	ldrb	w8, [x21, #16]
    e5b0:	cmp	w8, #0x38
    e5b4:	b.ne	fa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19e4>  // b.any
    e5b8:	mov	x0, x21
    e5bc:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
    e5c0:	tbz	w0, #0, f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e5c4:	ldrb	w8, [x21, #16]
    e5c8:	cmp	w8, #0x38
    e5cc:	b.ne	fa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19e4>  // b.any
    e5d0:	ldrh	w8, [x21, #18]
    e5d4:	ubfx	w0, w8, #7, #3
    e5d8:	bl	fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>
    e5dc:	str	w0, [sp, #8]
    e5e0:	add	x1, sp, #0x8
    e5e4:	mov	x0, x20
    e5e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e5ec:	ldrb	w8, [x21, #16]
    e5f0:	cmp	w8, #0x38
    e5f4:	b.ne	fa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19e4>  // b.any
    e5f8:	ldrb	w8, [x21, #56]
    e5fc:	add	x1, sp, #0x8
    e600:	mov	x0, x20
    e604:	str	w8, [sp, #8]
    e608:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e60c:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e610:	ldur	x1, [x21, #-48]
    e614:	cbz	x1, fb20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a88>
    e618:	ldrb	w8, [x1, #16]
    e61c:	cmp	w8, #0x4c
    e620:	b.ne	fb3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1aa4>  // b.any
    e624:	mov	x0, x23
    e628:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e62c:	sub	w8, w22, w0
    e630:	add	x1, sp, #0x8
    e634:	mov	x0, x20
    e638:	str	w8, [sp, #8]
    e63c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e640:	ldur	x1, [x21, #-24]
    e644:	cbz	x1, fa98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a00>
    e648:	ldrb	w8, [x1, #16]
    e64c:	cmp	w8, #0x12
    e650:	b.ne	fab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a1c>  // b.any
    e654:	mov	x0, x23
    e658:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e65c:	str	w0, [sp, #8]
    e660:	add	x1, sp, #0x8
    e664:	mov	x0, x20
    e668:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e66c:	mov	w25, wzr
    e670:	mov	w24, #0x31                  	// #49
    e674:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e678:	mov	x0, x21
    e67c:	mov	w1, wzr
    e680:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e684:	mov	x1, x0
    e688:	mov	x0, x19
    e68c:	mov	w2, w22
    e690:	mov	x3, x20
    e694:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e698:	mov	w25, wzr
    e69c:	mov	w24, #0x3a                  	// #58
    e6a0:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e6a4:	mov	x26, x21
    e6a8:	ldr	x25, [x26, #-24]!
    e6ac:	ldr	x24, [x21, #64]
    e6b0:	mov	x0, x21
    e6b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6b8:	cbz	w0, e6d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x640>
    e6bc:	sub	x0, x29, #0x38
    e6c0:	mov	x1, x21
    e6c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6c8:	ldur	x1, [x29, #-56]
    e6cc:	mov	x0, x19
    e6d0:	mov	w2, w22
    e6d4:	bl	fd48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
    e6d8:	ldr	x1, [x21, #56]
    e6dc:	mov	x0, x23
    e6e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6e4:	str	w0, [sp, #8]
    e6e8:	add	x1, sp, #0x8
    e6ec:	mov	x0, x20
    e6f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6f4:	ldrh	w8, [x21, #18]
    e6f8:	add	x1, sp, #0x8
    e6fc:	mov	x0, x20
    e700:	lsr	w8, w8, #1
    e704:	and	w8, w8, #0x3ffe
    e708:	orr	w8, w8, #0x8000
    e70c:	str	w8, [sp, #8]
    e710:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e714:	ldr	w8, [x21, #72]
    e718:	mov	w9, #0x18                  	// #24
    e71c:	mneg	x8, x8, x9
    e720:	add	x8, x26, x8
    e724:	ldur	x1, [x8, #-24]
    e728:	cbz	x1, fa98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a00>
    e72c:	ldrb	w8, [x1, #16]
    e730:	cmp	w8, #0x12
    e734:	b.ne	fab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a1c>  // b.any
    e738:	mov	x0, x23
    e73c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e740:	str	w0, [sp, #8]
    e744:	add	x1, sp, #0x8
    e748:	mov	x0, x20
    e74c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e750:	ldr	w8, [x21, #72]
    e754:	add	x1, sp, #0x8
    e758:	mov	x0, x20
    e75c:	str	w8, [sp, #8]
    e760:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e764:	ldr	w27, [x21, #72]
    e768:	cbz	w27, e7a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x70c>
    e76c:	mov	w26, wzr
    e770:	mov	x0, x21
    e774:	mov	w1, w26
    e778:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e77c:	mov	x1, x0
    e780:	mov	x0, x23
    e784:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e788:	str	w0, [sp, #8]
    e78c:	add	x1, sp, #0x8
    e790:	mov	x0, x20
    e794:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e798:	add	w26, w26, #0x1
    e79c:	cmp	w27, w26
    e7a0:	b.ne	e770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6d8>  // b.any
    e7a4:	mov	x0, x23
    e7a8:	mov	x1, x24
    e7ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7b0:	str	w0, [sp, #8]
    e7b4:	add	x1, sp, #0x8
    e7b8:	mov	x0, x20
    e7bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7c0:	mov	x0, x19
    e7c4:	mov	x1, x25
    e7c8:	mov	w2, w22
    e7cc:	mov	x3, x20
    e7d0:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e7d4:	ldr	w8, [x24, #12]
    e7d8:	subs	w26, w8, #0x1
    e7dc:	b.eq	e81c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x784>  // b.none
    e7e0:	mov	w25, wzr
    e7e4:	mov	x0, x21
    e7e8:	mov	w1, w25
    e7ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7f0:	mov	x1, x0
    e7f4:	mov	x0, x23
    e7f8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e7fc:	sub	w8, w22, w0
    e800:	add	x1, sp, #0x8
    e804:	mov	x0, x20
    e808:	str	w8, [sp, #8]
    e80c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e810:	add	w25, w25, #0x1
    e814:	cmp	w26, w25
    e818:	b.ne	e7e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x74c>  // b.any
    e81c:	ldr	w8, [x24, #8]
    e820:	cmp	w8, #0xff
    e824:	b.ls	e840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x7a8>  // b.plast
    e828:	ldr	w8, [x24, #12]
    e82c:	mov	x0, x21
    e830:	sub	w23, w8, #0x1
    e834:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e838:	cmp	w23, w0
    e83c:	b.ne	f938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x18a0>  // b.any
    e840:	mov	w25, wzr
    e844:	mov	w24, #0x39                  	// #57
    e848:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e84c:	mov	w1, #0x1                   	// #1
    e850:	mov	x0, x21
    e854:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e858:	mov	x1, x0
    e85c:	mov	x0, x19
    e860:	mov	w2, w22
    e864:	mov	x3, x20
    e868:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e86c:	mov	w1, #0x2                   	// #2
    e870:	mov	x0, x21
    e874:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e878:	mov	x1, x0
    e87c:	mov	x0, x23
    e880:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e884:	sub	w8, w22, w0
    e888:	add	x1, sp, #0x8
    e88c:	mov	x0, x20
    e890:	str	w8, [sp, #8]
    e894:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e898:	mov	x0, x21
    e89c:	mov	w1, wzr
    e8a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8a4:	mov	x1, x0
    e8a8:	mov	x0, x19
    e8ac:	mov	w2, w22
    e8b0:	mov	x3, x20
    e8b4:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e8b8:	mov	x0, x21
    e8bc:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    e8c0:	cbz	x0, e8d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x83c>
    e8c4:	str	w0, [sp, #8]
    e8c8:	add	x1, sp, #0x8
    e8cc:	mov	x0, x20
    e8d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8d4:	mov	w25, wzr
    e8d8:	mov	w24, #0x1d                  	// #29
    e8dc:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e8e0:	mov	x0, x21
    e8e4:	mov	w1, wzr
    e8e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8ec:	mov	x1, x0
    e8f0:	mov	x0, x19
    e8f4:	mov	w2, w22
    e8f8:	mov	x3, x20
    e8fc:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e900:	mov	w1, #0x1                   	// #1
    e904:	mov	x0, x21
    e908:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e90c:	mov	x1, x0
    e910:	mov	x0, x23
    e914:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e918:	sub	w8, w22, w0
    e91c:	add	x1, sp, #0x8
    e920:	mov	x0, x20
    e924:	str	w8, [sp, #8]
    e928:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e92c:	mov	w1, #0x2                   	// #2
    e930:	mov	x0, x21
    e934:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e938:	mov	x1, x0
    e93c:	mov	x0, x19
    e940:	mov	w2, w22
    e944:	mov	x3, x20
    e948:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    e94c:	mov	w25, wzr
    e950:	mov	w24, #0x7                   	// #7
    e954:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    e958:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e95c:	ldr	d0, [x8]
    e960:	add	x8, sp, #0x8
    e964:	add	x8, x8, #0x10
    e968:	str	x8, [sp, #8]
    e96c:	str	d0, [sp, #16]
    e970:	ldr	x1, [x21]
    e974:	mov	x0, x23
    e978:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e97c:	mov	w8, w0
    e980:	add	x0, sp, #0x8
    e984:	sub	x1, x29, #0x20
    e988:	stur	x8, [x29, #-32]
    e98c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e990:	ldr	w8, [x21, #20]
    e994:	and	x24, x8, #0xfffffff
    e998:	cbz	w24, ea20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x988>
    e99c:	mov	x20, xzr
    e9a0:	mov	w25, #0x18                  	// #24
    e9a4:	mov	x0, x21
    e9a8:	mov	w1, w20
    e9ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e9b0:	mov	x1, x0
    e9b4:	mov	x0, x23
    e9b8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e9bc:	sub	w8, w22, w0
    e9c0:	sxtw	x1, w8
    e9c4:	add	x0, sp, #0x8
    e9c8:	bl	ad0c <_ZL15emitSignedInt64RN4llvm15SmallVectorImplImEEm>
    e9cc:	ldr	w8, [x21, #20]
    e9d0:	tbnz	w8, #30, e9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x94c>
    e9d4:	and	x8, x8, #0xfffffff
    e9d8:	mneg	x8, x8, x25
    e9dc:	add	x8, x21, x8
    e9e0:	b	e9e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x950>
    e9e4:	ldur	x8, [x21, #-8]
    e9e8:	ldr	w9, [x21, #56]
    e9ec:	mov	x0, x23
    e9f0:	madd	x8, x9, x25, x8
    e9f4:	add	x8, x8, x20, lsl #3
    e9f8:	ldr	x1, [x8, #8]
    e9fc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ea00:	mov	w8, w0
    ea04:	add	x0, sp, #0x8
    ea08:	sub	x1, x29, #0x20
    ea0c:	stur	x8, [x29, #-32]
    ea10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ea14:	add	x20, x20, #0x1
    ea18:	cmp	x24, x20
    ea1c:	b.ne	e9a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x90c>  // b.any
    ea20:	mov	x0, x21
    ea24:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    ea28:	stur	x0, [x29, #-32]
    ea2c:	cbz	x0, ea3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x9a4>
    ea30:	add	x0, sp, #0x8
    ea34:	sub	x1, x29, #0x20
    ea38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ea3c:	ldr	x0, [x19]
    ea40:	add	x2, sp, #0x8
    ea44:	mov	w1, #0x10                  	// #16
    ea48:	mov	w3, wzr
    ea4c:	add	x19, sp, #0x8
    ea50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ea54:	ldr	x0, [sp, #8]
    ea58:	add	x8, x19, #0x10
    ea5c:	str	wzr, [sp, #16]
    ea60:	cmp	x0, x8
    ea64:	b.eq	f9c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x192c>  // b.none
    ea68:	bl	0 <free>
    ea6c:	b	f9c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x192c>
    ea70:	ldr	x1, [x21, #56]
    ea74:	mov	x0, x23
    ea78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ea7c:	str	w0, [sp, #8]
    ea80:	add	x1, sp, #0x8
    ea84:	mov	x0, x20
    ea88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ea8c:	mov	x0, x21
    ea90:	mov	w1, wzr
    ea94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ea98:	ldr	x1, [x0]
    ea9c:	mov	x0, x23
    eaa0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eaa4:	str	w0, [sp, #8]
    eaa8:	add	x1, sp, #0x8
    eaac:	mov	x0, x20
    eab0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eab4:	mov	x0, x21
    eab8:	mov	w1, wzr
    eabc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eac0:	mov	x1, x0
    eac4:	mov	x0, x23
    eac8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    eacc:	str	w0, [sp, #8]
    ead0:	add	x1, sp, #0x8
    ead4:	mov	x0, x20
    ead8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eadc:	ldrh	w8, [x21, #18]
    eae0:	mov	w9, #0x1                   	// #1
    eae4:	and	w10, w8, #0x1f
    eae8:	add	w10, w10, #0xff
    eaec:	tst	w8, #0x1f
    eaf0:	orr	w10, w10, #0x100
    eaf4:	csel	w10, wzr, w10, eq  // eq = none
    eaf8:	lsl	w11, w10, #23
    eafc:	lsl	x9, x9, x10
    eb00:	and	w9, w9, w11, asr #31
    eb04:	clz	w10, w9
    eb08:	mov	w9, #0x20                  	// #32
    eb0c:	sub	w9, w9, w10
    eb10:	str	w9, [sp, #8]
    eb14:	cbz	w10, fb58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ac0>
    eb18:	lsr	w10, w8, #6
    eb1c:	and	w8, w8, #0x20
    eb20:	bfi	w8, w10, #7, #1
    eb24:	orr	w8, w8, w9
    eb28:	orr	w8, w8, #0x40
    eb2c:	add	x1, sp, #0x8
    eb30:	mov	x0, x20
    eb34:	str	w8, [sp, #8]
    eb38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb3c:	mov	w25, wzr
    eb40:	mov	w24, #0x13                  	// #19
    eb44:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    eb48:	ldr	w8, [x21, #20]
    eb4c:	ands	w26, w8, #0xfffffff
    eb50:	b.eq	f8f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1858>  // b.none
    eb54:	cmp	w26, #0x1
    eb58:	b.ne	f8fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1864>  // b.any
    eb5c:	mov	x0, x21
    eb60:	mov	w1, wzr
    eb64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb68:	mov	x1, x0
    eb6c:	mov	x0, x19
    eb70:	mov	w2, w22
    eb74:	mov	x3, x20
    eb78:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    eb7c:	tst	w0, #0x1
    eb80:	mov	w8, #0xb                   	// #11
    eb84:	csel	w25, wzr, w8, ne  // ne = any
    eb88:	b	f8f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x185c>
    eb8c:	mov	x0, x21
    eb90:	mov	w1, wzr
    eb94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb98:	mov	x1, x0
    eb9c:	mov	x0, x23
    eba0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    eba4:	str	w0, [sp, #8]
    eba8:	add	x1, sp, #0x8
    ebac:	mov	x0, x20
    ebb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ebb4:	ldr	w8, [x21, #20]
    ebb8:	and	w8, w8, #0xfffffff
    ebbc:	cmp	w8, #0x3
    ebc0:	b.ne	ec1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb84>  // b.any
    ebc4:	mov	w1, #0x1                   	// #1
    ebc8:	mov	x0, x21
    ebcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ebd0:	mov	x1, x0
    ebd4:	mov	x0, x23
    ebd8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ebdc:	str	w0, [sp, #8]
    ebe0:	add	x1, sp, #0x8
    ebe4:	mov	x0, x20
    ebe8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ebec:	ldr	w8, [x21, #20]
    ebf0:	and	w8, w8, #0xfffffff
    ebf4:	cmp	w8, #0x3
    ebf8:	b.ne	fc80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1be8>  // b.any
    ebfc:	ldur	x1, [x21, #-72]
    ec00:	mov	x0, x23
    ec04:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ec08:	sub	w8, w22, w0
    ec0c:	add	x1, sp, #0x8
    ec10:	mov	x0, x20
    ec14:	str	w8, [sp, #8]
    ec18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec1c:	mov	w25, wzr
    ec20:	mov	w24, #0xb                   	// #11
    ec24:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    ec28:	mov	x0, x21
    ec2c:	mov	w1, wzr
    ec30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec34:	ldr	x1, [x0]
    ec38:	mov	x0, x23
    ec3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec40:	str	w0, [sp, #8]
    ec44:	add	x1, sp, #0x8
    ec48:	mov	x0, x20
    ec4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec50:	mov	x0, x21
    ec54:	mov	w1, wzr
    ec58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec5c:	mov	x1, x0
    ec60:	mov	x0, x23
    ec64:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ec68:	sub	w8, w22, w0
    ec6c:	add	x1, sp, #0x8
    ec70:	mov	x0, x20
    ec74:	str	w8, [sp, #8]
    ec78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec7c:	ldr	w8, [x21, #20]
    ec80:	and	w26, w8, #0xfffffff
    ec84:	cmp	w26, #0x1
    ec88:	b.ne	f71c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1684>  // b.any
    ec8c:	mov	w25, wzr
    ec90:	mov	w24, #0x1f                  	// #31
    ec94:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    ec98:	mov	x0, x21
    ec9c:	mov	w1, wzr
    eca0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eca4:	mov	x1, x0
    eca8:	mov	x0, x19
    ecac:	mov	w2, w22
    ecb0:	mov	x3, x20
    ecb4:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    ecb8:	ldrb	w8, [x21, #16]
    ecbc:	cmp	w8, #0x24
    ecc0:	b.ne	fb78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ae0>  // b.any
    ecc4:	mov	w22, w0
    ecc8:	tst	w0, #0x1
    eccc:	mov	w8, #0x5                   	// #5
    ecd0:	add	x1, sp, #0x8
    ecd4:	mov	x0, x20
    ecd8:	csel	w25, wzr, w8, ne  // ne = any
    ecdc:	str	wzr, [sp, #8]
    ece0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ece4:	mov	x0, x21
    ece8:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    ecec:	cbz	x0, ed0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc74>
    ecf0:	tst	w22, #0x1
    ecf4:	mov	w8, #0x6                   	// #6
    ecf8:	str	w0, [sp, #8]
    ecfc:	add	x1, sp, #0x8
    ed00:	mov	x0, x20
    ed04:	csel	w25, wzr, w8, ne  // ne = any
    ed08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed0c:	mov	w24, #0x38                  	// #56
    ed10:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    ed14:	mov	x0, x21
    ed18:	mov	w1, wzr
    ed1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed20:	mov	x1, x0
    ed24:	mov	x0, x19
    ed28:	mov	w2, w22
    ed2c:	mov	x3, x20
    ed30:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    ed34:	mov	w1, #0x1                   	// #1
    ed38:	mov	x0, x21
    ed3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed40:	mov	x1, x0
    ed44:	mov	x0, x23
    ed48:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ed4c:	sub	w8, w22, w0
    ed50:	add	x1, sp, #0x8
    ed54:	mov	x0, x20
    ed58:	str	w8, [sp, #8]
    ed5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed60:	mov	w1, #0x2                   	// #2
    ed64:	mov	x0, x21
    ed68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed6c:	mov	x1, x0
    ed70:	mov	x0, x23
    ed74:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ed78:	sub	w8, w22, w0
    ed7c:	add	x1, sp, #0x8
    ed80:	mov	x0, x20
    ed84:	str	w8, [sp, #8]
    ed88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed8c:	mov	w25, wzr
    ed90:	mov	w24, #0x8                   	// #8
    ed94:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    ed98:	mov	x0, x21
    ed9c:	mov	w1, wzr
    eda0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eda4:	mov	x1, x0
    eda8:	mov	x0, x19
    edac:	mov	w2, w22
    edb0:	mov	x3, x20
    edb4:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    edb8:	mov	w1, #0x1                   	// #1
    edbc:	mov	x0, x21
    edc0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    edc4:	mov	x1, x0
    edc8:	mov	x0, x19
    edcc:	mov	w2, w22
    edd0:	mov	x3, x20
    edd4:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    edd8:	ldrb	w8, [x21, #16]
    eddc:	cmp	w8, #0x59
    ede0:	b.ne	fb90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1af8>  // b.any
    ede4:	ldr	x1, [x21, #56]
    ede8:	ldr	w8, [x21, #64]
    edec:	mov	x0, x20
    edf0:	add	x2, x1, x8, lsl #2
    edf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    edf8:	mov	w25, wzr
    edfc:	mov	w24, #0x1b                  	// #27
    ee00:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    ee04:	ldur	x25, [x21, #-24]
    ee08:	ldr	x24, [x21, #64]
    ee0c:	mov	x0, x21
    ee10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee14:	cbz	w0, ee34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd9c>
    ee18:	sub	x0, x29, #0x30
    ee1c:	mov	x1, x21
    ee20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee24:	ldur	x1, [x29, #-48]
    ee28:	mov	x0, x19
    ee2c:	mov	w2, w22
    ee30:	bl	fd48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
    ee34:	ldr	x1, [x21, #56]
    ee38:	mov	x0, x23
    ee3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee40:	str	w0, [sp, #8]
    ee44:	add	x1, sp, #0x8
    ee48:	mov	x0, x20
    ee4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee50:	ldrh	w8, [x21, #18]
    ee54:	add	x1, sp, #0x8
    ee58:	mov	x0, x20
    ee5c:	lsr	w8, w8, #2
    ee60:	orr	w8, w8, #0x2000
    ee64:	str	w8, [sp, #8]
    ee68:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee6c:	ldur	x1, [x21, #-72]
    ee70:	cbz	x1, fa98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a00>
    ee74:	ldrb	w8, [x1, #16]
    ee78:	cmp	w8, #0x12
    ee7c:	b.ne	fab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a1c>  // b.any
    ee80:	mov	x0, x23
    ee84:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ee88:	str	w0, [sp, #8]
    ee8c:	add	x1, sp, #0x8
    ee90:	mov	x0, x20
    ee94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee98:	ldur	x1, [x21, #-48]
    ee9c:	cbz	x1, fa98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a00>
    eea0:	ldrb	w8, [x1, #16]
    eea4:	cmp	w8, #0x12
    eea8:	b.ne	fab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a1c>  // b.any
    eeac:	mov	x0, x23
    eeb0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    eeb4:	str	w0, [sp, #8]
    eeb8:	add	x1, sp, #0x8
    eebc:	mov	x0, x20
    eec0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eec4:	mov	x0, x23
    eec8:	mov	x1, x24
    eecc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eed0:	str	w0, [sp, #8]
    eed4:	add	x1, sp, #0x8
    eed8:	mov	x0, x20
    eedc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eee0:	mov	x0, x19
    eee4:	mov	x1, x25
    eee8:	mov	w2, w22
    eeec:	mov	x3, x20
    eef0:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    eef4:	ldr	w8, [x24, #12]
    eef8:	subs	w26, w8, #0x1
    eefc:	b.eq	ef3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xea4>  // b.none
    ef00:	mov	w25, wzr
    ef04:	mov	x0, x21
    ef08:	mov	w1, w25
    ef0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef10:	mov	x1, x0
    ef14:	mov	x0, x23
    ef18:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ef1c:	sub	w8, w22, w0
    ef20:	add	x1, sp, #0x8
    ef24:	mov	x0, x20
    ef28:	str	w8, [sp, #8]
    ef2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef30:	add	w25, w25, #0x1
    ef34:	cmp	w26, w25
    ef38:	b.ne	ef04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe6c>  // b.any
    ef3c:	ldr	w8, [x24, #8]
    ef40:	cmp	w8, #0xff
    ef44:	b.ls	ef60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xec8>  // b.plast
    ef48:	ldr	w8, [x24, #12]
    ef4c:	mov	x0, x21
    ef50:	sub	w23, w8, #0x1
    ef54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef58:	cmp	w23, w0
    ef5c:	b.ne	f974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x18dc>  // b.any
    ef60:	mov	w25, wzr
    ef64:	mov	w24, #0xd                   	// #13
    ef68:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    ef6c:	mov	x0, x21
    ef70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef74:	ldr	x1, [x0]
    ef78:	mov	x0, x23
    ef7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef80:	str	w0, [sp, #8]
    ef84:	add	x1, sp, #0x8
    ef88:	mov	x0, x20
    ef8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef90:	mov	x0, x21
    ef94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ef98:	mov	x1, x0
    ef9c:	mov	x0, x23
    efa0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    efa4:	sub	w8, w22, w0
    efa8:	add	x1, sp, #0x8
    efac:	mov	x0, x20
    efb0:	str	w8, [sp, #8]
    efb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    efb8:	ldr	w9, [x21, #20]
    efbc:	and	x8, x9, #0xfffffff
    efc0:	cmp	w8, #0x1
    efc4:	b.ls	fbac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b14>  // b.plast
    efc8:	tbnz	w9, #30, f760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c8>
    efcc:	mov	w9, #0x18                  	// #24
    efd0:	mneg	x8, x8, x9
    efd4:	add	x8, x21, x8
    efd8:	b	f764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16cc>
    efdc:	mov	x0, x21
    efe0:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
    efe4:	tst	w0, #0x1
    efe8:	mov	w8, #0x2c                  	// #44
    efec:	mov	w1, #0x1                   	// #1
    eff0:	mov	x0, x21
    eff4:	cinc	w24, w8, ne  // ne = any
    eff8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    effc:	mov	x1, x0
    f000:	mov	x0, x19
    f004:	mov	w2, w22
    f008:	mov	x3, x20
    f00c:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f010:	mov	x0, x21
    f014:	mov	w1, wzr
    f018:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f01c:	mov	x1, x0
    f020:	mov	x0, x19
    f024:	mov	w2, w22
    f028:	mov	x3, x20
    f02c:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f030:	ldrb	w8, [x21, #16]
    f034:	cmp	w8, #0x39
    f038:	b.ne	fad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a38>  // b.any
    f03c:	ldrh	w8, [x21, #18]
    f040:	mov	w9, #0x1f                  	// #31
    f044:	mov	w10, #0x1                   	// #1
    f048:	add	x1, sp, #0x8
    f04c:	ubfx	w11, w8, #1, #5
    f050:	tst	w9, w8, lsr #1
    f054:	add	w8, w11, #0xff
    f058:	orr	w8, w8, #0x100
    f05c:	csel	w8, wzr, w8, eq  // eq = none
    f060:	lsl	w9, w8, #23
    f064:	lsl	x8, x10, x8
    f068:	and	w8, w8, w9, asr #31
    f06c:	clz	w8, w8
    f070:	mov	w9, #0x20                  	// #32
    f074:	sub	w8, w9, w8
    f078:	mov	x0, x20
    f07c:	str	w8, [sp, #8]
    f080:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f084:	ldrb	w8, [x21, #16]
    f088:	cmp	w8, #0x39
    f08c:	b.ne	fad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a38>  // b.any
    f090:	ldrh	w8, [x21, #18]
    f094:	add	x1, sp, #0x8
    f098:	mov	x0, x20
    f09c:	and	w8, w8, #0x1
    f0a0:	str	w8, [sp, #8]
    f0a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f0a8:	ldrb	w8, [x21, #16]
    f0ac:	cmp	w8, #0x39
    f0b0:	b.ne	fad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a38>  // b.any
    f0b4:	mov	x0, x21
    f0b8:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
    f0bc:	tbz	w0, #0, f108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1070>
    f0c0:	ldrb	w8, [x21, #16]
    f0c4:	cmp	w8, #0x39
    f0c8:	b.ne	fad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a38>  // b.any
    f0cc:	ldrh	w8, [x21, #18]
    f0d0:	ubfx	w0, w8, #7, #3
    f0d4:	bl	fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>
    f0d8:	str	w0, [sp, #8]
    f0dc:	add	x1, sp, #0x8
    f0e0:	mov	x0, x20
    f0e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f0e8:	ldrb	w8, [x21, #16]
    f0ec:	cmp	w8, #0x39
    f0f0:	b.ne	fad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a38>  // b.any
    f0f4:	ldrb	w8, [x21, #56]
    f0f8:	add	x1, sp, #0x8
    f0fc:	mov	x0, x20
    f100:	str	w8, [sp, #8]
    f104:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f108:	mov	w25, wzr
    f10c:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f110:	mov	x0, x21
    f114:	bl	0 <_ZNK4llvm17GetElementPtrInst10isInBoundsEv>
    f118:	and	w8, w0, #0x1
    f11c:	add	x1, sp, #0x8
    f120:	mov	x0, x20
    f124:	str	w8, [sp, #8]
    f128:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f12c:	ldr	x1, [x21, #56]
    f130:	mov	x0, x23
    f134:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f138:	str	w0, [sp, #8]
    f13c:	add	x1, sp, #0x8
    f140:	mov	x0, x20
    f144:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f148:	ldr	w8, [x21, #20]
    f14c:	ands	w26, w8, #0xfffffff
    f150:	b.eq	f8e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x184c>  // b.none
    f154:	mov	w23, wzr
    f158:	mov	w24, #0x2b                  	// #43
    f15c:	mov	w25, #0xd                   	// #13
    f160:	mov	x0, x21
    f164:	mov	w1, w23
    f168:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f16c:	mov	x1, x0
    f170:	mov	x0, x19
    f174:	mov	w2, w22
    f178:	mov	x3, x20
    f17c:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f180:	add	w23, w23, #0x1
    f184:	cmp	w26, w23
    f188:	b.ne	f160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x10c8>  // b.any
    f18c:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f190:	mov	x0, x21
    f194:	mov	w1, wzr
    f198:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f19c:	mov	x1, x0
    f1a0:	mov	x0, x19
    f1a4:	mov	w2, w22
    f1a8:	mov	x3, x20
    f1ac:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f1b0:	mov	w25, wzr
    f1b4:	mov	w24, #0x27                  	// #39
    f1b8:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f1bc:	ldr	w8, [x21, #20]
    f1c0:	mov	w9, #0x18                  	// #24
    f1c4:	and	x8, x8, #0xfffffff
    f1c8:	mneg	x8, x8, x9
    f1cc:	ldr	x1, [x21, x8]
    f1d0:	cbz	x1, fbcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b34>
    f1d4:	ldrb	w8, [x1, #16]
    f1d8:	cmp	w8, #0x4b
    f1dc:	b.ne	fbe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b50>  // b.any
    f1e0:	mov	x0, x23
    f1e4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f1e8:	sub	w8, w22, w0
    f1ec:	add	x1, sp, #0x8
    f1f0:	mov	x0, x20
    f1f4:	str	w8, [sp, #8]
    f1f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f1fc:	ldrb	w8, [x21, #18]
    f200:	tbz	w8, #0, f228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1190>
    f204:	mov	x0, x21
    f208:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f20c:	mov	x1, x0
    f210:	mov	x0, x23
    f214:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f218:	str	w0, [sp, #8]
    f21c:	add	x1, sp, #0x8
    f220:	mov	x0, x20
    f224:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f228:	mov	w25, wzr
    f22c:	mov	w24, #0x30                  	// #48
    f230:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f234:	mov	x0, x21
    f238:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f23c:	mov	x1, x0
    f240:	mov	x0, x23
    f244:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f248:	sub	w8, w22, w0
    f24c:	add	x1, sp, #0x8
    f250:	mov	x0, x20
    f254:	str	w8, [sp, #8]
    f258:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f25c:	ldrh	w9, [x21, #18]
    f260:	ldr	w8, [x21, #20]
    f264:	sub	x1, x29, #0x20
    f268:	mov	x0, x20
    f26c:	tst	w9, #0x1
    f270:	mov	w9, #0xfffffffe            	// #-2
    f274:	and	w8, w8, #0xfffffff
    f278:	cinc	w9, w9, eq  // eq = none
    f27c:	add	w8, w9, w8
    f280:	stur	w8, [x29, #-32]
    f284:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f288:	add	x8, sp, #0x8
    f28c:	mov	x0, x21
    f290:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f294:	ldr	x22, [sp, #8]
    f298:	ldr	x24, [sp, #24]
    f29c:	cmp	x22, x24
    f2a0:	b.eq	f2d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x123c>  // b.none
    f2a4:	ldr	x25, [sp, #16]
    f2a8:	ldr	x0, [x22], #24
    f2ac:	blr	x25
    f2b0:	mov	x1, x0
    f2b4:	mov	x0, x23
    f2b8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f2bc:	stur	w0, [x29, #-36]
    f2c0:	sub	x1, x29, #0x24
    f2c4:	mov	x0, x20
    f2c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f2cc:	cmp	x24, x22
    f2d0:	b.ne	f2a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1210>  // b.any
    f2d4:	ldrb	w8, [x21, #18]
    f2d8:	tbz	w8, #0, f300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1268>
    f2dc:	mov	x0, x21
    f2e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f2e4:	mov	x1, x0
    f2e8:	mov	x0, x23
    f2ec:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f2f0:	str	w0, [sp, #8]
    f2f4:	add	x1, sp, #0x8
    f2f8:	mov	x0, x20
    f2fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f300:	mov	w25, wzr
    f304:	mov	w24, #0x34                  	// #52
    f308:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f30c:	ldr	x24, [x21, #64]
    f310:	mov	x0, x21
    f314:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f318:	cbz	w0, f338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12a0>
    f31c:	mov	x0, sp
    f320:	mov	x1, x21
    f324:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f328:	ldr	x1, [sp]
    f32c:	mov	x0, x19
    f330:	mov	w2, w22
    f334:	bl	fd48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
    f338:	ldr	x1, [x21, #56]
    f33c:	mov	x0, x23
    f340:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f344:	str	w0, [sp, #8]
    f348:	add	x1, sp, #0x8
    f34c:	mov	x0, x20
    f350:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f354:	mov	x0, x21
    f358:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    f35c:	mov	x25, x0
    f360:	stur	w25, [x29, #-32]
    f364:	ldrh	w8, [x21, #18]
    f368:	mov	w9, #0x8000                	// #32768
    f36c:	movk	w9, #0x2, lsl #16
    f370:	mov	w13, #0x8000                	// #32768
    f374:	lsr	w10, w8, #1
    f378:	and	w8, w8, #0x3
    f37c:	cmp	w8, #0x3
    f380:	sub	w11, w8, #0x1
    f384:	cset	w12, eq  // eq = none
    f388:	cmp	w8, #0x2
    f38c:	cset	w8, eq  // eq = none
    f390:	cmp	w11, #0x2
    f394:	cset	w11, cc  // cc = lo, ul, last
    f398:	cmp	w25, #0x0
    f39c:	and	w10, w10, #0x3ffe
    f3a0:	csel	w9, w13, w9, eq  // eq = none
    f3a4:	orr	w9, w9, w10
    f3a8:	bfi	w9, w8, #14, #1
    f3ac:	bfi	w9, w12, #16, #1
    f3b0:	orr	w8, w9, w11
    f3b4:	add	x1, sp, #0x8
    f3b8:	mov	x0, x20
    f3bc:	str	w8, [sp, #8]
    f3c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f3c4:	cbz	w25, f3d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x133c>
    f3c8:	sub	x1, x29, #0x20
    f3cc:	mov	x0, x20
    f3d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f3d4:	mov	x0, x23
    f3d8:	mov	x1, x24
    f3dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f3e0:	str	w0, [sp, #8]
    f3e4:	add	x1, sp, #0x8
    f3e8:	mov	x0, x20
    f3ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f3f0:	ldur	x1, [x21, #-24]
    f3f4:	mov	x0, x19
    f3f8:	mov	w2, w22
    f3fc:	mov	x3, x20
    f400:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f404:	ldr	w8, [x24, #12]
    f408:	subs	w8, w8, #0x1
    f40c:	b.eq	f480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x13e8>  // b.none
    f410:	mov	x1, xzr
    f414:	mov	w25, w8
    f418:	ldr	x8, [x24, #16]
    f41c:	add	x26, x1, #0x1
    f420:	mov	x0, x21
    f424:	add	x8, x8, x1, lsl #3
    f428:	ldr	x8, [x8, #8]
    f42c:	ldrb	w8, [x8, #8]
    f430:	cmp	w8, #0x7
    f434:	b.ne	f450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x13b8>  // b.any
    f438:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f43c:	mov	x1, x0
    f440:	mov	x0, x23
    f444:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f448:	str	w0, [sp, #8]
    f44c:	b	f468 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x13d0>
    f450:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f454:	mov	x1, x0
    f458:	mov	x0, x23
    f45c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f460:	sub	w8, w22, w0
    f464:	str	w8, [sp, #8]
    f468:	add	x1, sp, #0x8
    f46c:	mov	x0, x20
    f470:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f474:	cmp	x25, x26
    f478:	mov	x1, x26
    f47c:	b.ne	f418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1380>  // b.any
    f480:	ldr	w8, [x24, #8]
    f484:	cmp	w8, #0xff
    f488:	b.ls	f4d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x143c>  // b.plast
    f48c:	ldr	w8, [x24, #12]
    f490:	mov	x0, x21
    f494:	sub	w23, w8, #0x1
    f498:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f49c:	cmp	w23, w0
    f4a0:	b.eq	f4d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x143c>  // b.none
    f4a4:	mov	w24, w0
    f4a8:	mov	x0, x21
    f4ac:	mov	w1, w23
    f4b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f4b4:	mov	x1, x0
    f4b8:	mov	x0, x19
    f4bc:	mov	w2, w22
    f4c0:	mov	x3, x20
    f4c4:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f4c8:	add	w23, w23, #0x1
    f4cc:	cmp	w24, w23
    f4d0:	b.ne	f4a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1410>  // b.any
    f4d4:	mov	w25, wzr
    f4d8:	mov	w24, #0x22                  	// #34
    f4dc:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f4e0:	mov	x0, x21
    f4e4:	mov	w1, wzr
    f4e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f4ec:	mov	x1, x0
    f4f0:	mov	x0, x19
    f4f4:	mov	w2, w22
    f4f8:	mov	x3, x20
    f4fc:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f500:	ldrb	w8, [x21, #16]
    f504:	cmp	w8, #0x58
    f508:	b.ne	fc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b6c>  // b.any
    f50c:	ldr	x1, [x21, #56]
    f510:	ldr	w8, [x21, #64]
    f514:	mov	x0, x20
    f518:	add	x2, x1, x8, lsl #2
    f51c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f520:	mov	w25, wzr
    f524:	mov	w24, #0x1a                  	// #26
    f528:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f52c:	mov	x0, x21
    f530:	mov	w1, wzr
    f534:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f538:	mov	x1, x0
    f53c:	mov	x0, x19
    f540:	mov	w2, w22
    f544:	mov	x3, x20
    f548:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f54c:	mov	w1, #0x1                   	// #1
    f550:	mov	x0, x21
    f554:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f558:	mov	x1, x0
    f55c:	mov	x0, x19
    f560:	mov	w2, w22
    f564:	mov	x3, x20
    f568:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f56c:	mov	w1, #0x2                   	// #2
    f570:	mov	x0, x21
    f574:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f578:	mov	x1, x0
    f57c:	mov	x0, x23
    f580:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f584:	sub	w8, w22, w0
    f588:	add	x1, sp, #0x8
    f58c:	mov	x0, x20
    f590:	str	w8, [sp, #8]
    f594:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f598:	ldrb	w8, [x21, #16]
    f59c:	cmp	w8, #0x3c
    f5a0:	b.ne	fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19ac>  // b.any
    f5a4:	ldrh	w8, [x21, #18]
    f5a8:	add	x1, sp, #0x8
    f5ac:	mov	x0, x20
    f5b0:	and	w8, w8, #0x1
    f5b4:	str	w8, [sp, #8]
    f5b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f5bc:	ldrb	w8, [x21, #16]
    f5c0:	cmp	w8, #0x3c
    f5c4:	b.ne	fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19ac>  // b.any
    f5c8:	ldrh	w8, [x21, #18]
    f5cc:	ubfx	w0, w8, #2, #3
    f5d0:	bl	fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>
    f5d4:	str	w0, [sp, #8]
    f5d8:	add	x1, sp, #0x8
    f5dc:	mov	x0, x20
    f5e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f5e4:	ldrb	w8, [x21, #16]
    f5e8:	cmp	w8, #0x3c
    f5ec:	b.ne	fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19ac>  // b.any
    f5f0:	ldrb	w8, [x21, #56]
    f5f4:	add	x1, sp, #0x8
    f5f8:	mov	x0, x20
    f5fc:	str	w8, [sp, #8]
    f600:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f604:	ldrb	w8, [x21, #16]
    f608:	cmp	w8, #0x3c
    f60c:	b.ne	fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19ac>  // b.any
    f610:	ldrh	w8, [x21, #18]
    f614:	ubfx	w0, w8, #5, #3
    f618:	bl	fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>
    f61c:	str	w0, [sp, #8]
    f620:	add	x1, sp, #0x8
    f624:	mov	x0, x20
    f628:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f62c:	ldrb	w8, [x21, #16]
    f630:	cmp	w8, #0x3c
    f634:	b.ne	fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19ac>  // b.any
    f638:	ldrh	w8, [x21, #18]
    f63c:	add	x1, sp, #0x8
    f640:	mov	x0, x20
    f644:	ubfx	w8, w8, #8, #1
    f648:	str	w8, [sp, #8]
    f64c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f650:	mov	w25, wzr
    f654:	mov	w24, #0x2e                  	// #46
    f658:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f65c:	ldrh	w8, [x21, #18]
    f660:	ubfx	w0, w8, #1, #14
    f664:	bl	fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>
    f668:	str	w0, [sp, #8]
    f66c:	add	x1, sp, #0x8
    f670:	mov	x0, x20
    f674:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f678:	ldrb	w8, [x21, #16]
    f67c:	cmp	w8, #0x3b
    f680:	b.ne	fc20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b88>  // b.any
    f684:	ldrb	w8, [x21, #56]
    f688:	add	x1, sp, #0x8
    f68c:	mov	x0, x20
    f690:	str	w8, [sp, #8]
    f694:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f698:	mov	w25, wzr
    f69c:	mov	w24, #0x24                  	// #36
    f6a0:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f6a4:	sub	w9, w8, #0x3e
    f6a8:	cmp	w9, #0xc
    f6ac:	b.hi	f824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x178c>  // b.pmore
    f6b0:	mov	x0, x21
    f6b4:	mov	w1, wzr
    f6b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f6bc:	mov	x1, x0
    f6c0:	mov	x0, x19
    f6c4:	mov	w2, w22
    f6c8:	mov	x3, x20
    f6cc:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f6d0:	ldr	x1, [x21]
    f6d4:	tst	w0, #0x1
    f6d8:	mov	w8, #0x9                   	// #9
    f6dc:	mov	x0, x23
    f6e0:	csel	w25, wzr, w8, ne  // ne = any
    f6e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f6e8:	str	w0, [sp, #8]
    f6ec:	add	x1, sp, #0x8
    f6f0:	mov	x0, x20
    f6f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f6f8:	ldrb	w8, [x21, #16]
    f6fc:	sub	w0, w8, #0x18
    f700:	bl	ad44 <_ZL20getEncodedCastOpcodej>
    f704:	str	w0, [sp, #8]
    f708:	add	x1, sp, #0x8
    f70c:	mov	x0, x20
    f710:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f714:	mov	w24, #0x3                   	// #3
    f718:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f71c:	mov	w22, #0x1                   	// #1
    f720:	mov	w24, #0x1f                  	// #31
    f724:	mov	x0, x21
    f728:	mov	w1, w22
    f72c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f730:	mov	x1, x0
    f734:	mov	x0, x23
    f738:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f73c:	str	w0, [sp, #8]
    f740:	add	x1, sp, #0x8
    f744:	mov	x0, x20
    f748:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f74c:	add	w22, w22, #0x1
    f750:	mov	w25, wzr
    f754:	cmp	w26, w22
    f758:	b.ne	f724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x168c>  // b.any
    f75c:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f760:	ldur	x8, [x21, #-8]
    f764:	ldr	x1, [x8, #24]
    f768:	cbz	x1, fc40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba8>
    f76c:	ldrb	w8, [x1, #16]
    f770:	cmp	w8, #0x12
    f774:	b.ne	fc60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bc8>  // b.any
    f778:	mov	x0, x23
    f77c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f780:	str	w0, [sp, #8]
    f784:	add	x1, sp, #0x8
    f788:	mov	x0, x20
    f78c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f790:	ldr	w8, [x21, #20]
    f794:	stp	x21, xzr, [sp, #8]
    f798:	ubfx	w8, w8, #1, #27
    f79c:	subs	w22, w8, #0x1
    f7a0:	b.eq	f818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1780>  // b.none
    f7a4:	ldur	q0, [sp, #8]
    f7a8:	sub	x0, x29, #0x20
    f7ac:	stur	q0, [x29, #-32]
    f7b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f7b4:	mov	x1, x0
    f7b8:	mov	x0, x23
    f7bc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f7c0:	stur	w0, [x29, #-36]
    f7c4:	sub	x1, x29, #0x24
    f7c8:	mov	x0, x20
    f7cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f7d0:	sub	x0, x29, #0x20
    f7d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f7d8:	mov	x1, x0
    f7dc:	mov	x0, x23
    f7e0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f7e4:	stur	w0, [x29, #-36]
    f7e8:	sub	x1, x29, #0x24
    f7ec:	mov	x0, x20
    f7f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f7f4:	add	x0, sp, #0x8
    f7f8:	mov	w1, #0x1                   	// #1
    f7fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f800:	ldr	x8, [sp, #8]
    f804:	cmp	x8, x21
    f808:	b.ne	fa24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x198c>  // b.any
    f80c:	ldr	x8, [sp, #16]
    f810:	cmp	x8, x22
    f814:	b.ne	f7a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x170c>  // b.any
    f818:	mov	w25, wzr
    f81c:	mov	w24, #0xc                   	// #12
    f820:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f824:	sub	w8, w8, #0x25
    f828:	cmp	w8, #0x12
    f82c:	b.cs	fca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c08>  // b.hs, b.nlast
    f830:	mov	x0, x21
    f834:	mov	w1, wzr
    f838:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f83c:	mov	x1, x0
    f840:	mov	x0, x19
    f844:	mov	w2, w22
    f848:	mov	x3, x20
    f84c:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f850:	mov	w24, w0
    f854:	tst	w0, #0x1
    f858:	mov	w8, #0x7                   	// #7
    f85c:	mov	w1, #0x1                   	// #1
    f860:	mov	x0, x21
    f864:	csel	w25, wzr, w8, ne  // ne = any
    f868:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f86c:	mov	x1, x0
    f870:	mov	x0, x23
    f874:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f878:	sub	w8, w22, w0
    f87c:	add	x1, sp, #0x8
    f880:	mov	x0, x20
    f884:	str	w8, [sp, #8]
    f888:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f88c:	ldrb	w8, [x21, #16]
    f890:	sub	w0, w8, #0x18
    f894:	bl	ad74 <_ZL22getEncodedBinaryOpcodej>
    f898:	str	w0, [sp, #8]
    f89c:	add	x1, sp, #0x8
    f8a0:	mov	x0, x20
    f8a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f8a8:	mov	x0, x21
    f8ac:	bl	adb4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
    f8b0:	cbz	x0, f8d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1838>
    f8b4:	tst	w24, #0x1
    f8b8:	mov	w8, #0x8                   	// #8
    f8bc:	str	w0, [sp, #8]
    f8c0:	add	x1, sp, #0x8
    f8c4:	mov	x0, x20
    f8c8:	csel	w25, wzr, w8, ne  // ne = any
    f8cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f8d0:	mov	w24, #0x2                   	// #2
    f8d4:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f8d8:	mov	w25, wzr
    f8dc:	mov	w24, #0x2f                  	// #47
    f8e0:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f8e4:	mov	w24, #0x2b                  	// #43
    f8e8:	mov	w25, #0xd                   	// #13
    f8ec:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f8f0:	mov	w25, #0xa                   	// #10
    f8f4:	mov	w24, #0xa                   	// #10
    f8f8:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f8fc:	mov	w23, wzr
    f900:	mov	w24, #0xa                   	// #10
    f904:	mov	x0, x21
    f908:	mov	w1, w23
    f90c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f910:	mov	x1, x0
    f914:	mov	x0, x19
    f918:	mov	w2, w22
    f91c:	mov	x3, x20
    f920:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f924:	add	w23, w23, #0x1
    f928:	mov	w25, wzr
    f92c:	cmp	w26, w23
    f930:	b.ne	f904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x186c>  // b.any
    f934:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f938:	mov	w26, w0
    f93c:	mov	w24, #0x39                  	// #57
    f940:	mov	x0, x21
    f944:	mov	w1, w23
    f948:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f94c:	mov	x1, x0
    f950:	mov	x0, x19
    f954:	mov	w2, w22
    f958:	mov	x3, x20
    f95c:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f960:	add	w23, w23, #0x1
    f964:	mov	w25, wzr
    f968:	cmp	w26, w23
    f96c:	b.ne	f940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x18a8>  // b.any
    f970:	b	f9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1914>
    f974:	mov	w26, w0
    f978:	mov	w24, #0xd                   	// #13
    f97c:	mov	x0, x21
    f980:	mov	w1, w23
    f984:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f988:	mov	x1, x0
    f98c:	mov	x0, x19
    f990:	mov	w2, w22
    f994:	mov	x3, x20
    f998:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    f99c:	add	w23, w23, #0x1
    f9a0:	mov	w25, wzr
    f9a4:	cmp	w26, w23
    f9a8:	b.ne	f97c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x18e4>  // b.any
    f9ac:	ldr	x0, [x19]
    f9b0:	mov	w1, w24
    f9b4:	mov	x2, x20
    f9b8:	mov	w3, w25
    f9bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f9c0:	str	wzr, [x20, #8]
    f9c4:	add	sp, sp, #0x450
    f9c8:	ldp	x20, x19, [sp, #80]
    f9cc:	ldp	x22, x21, [sp, #64]
    f9d0:	ldp	x24, x23, [sp, #48]
    f9d4:	ldp	x26, x25, [sp, #32]
    f9d8:	ldp	x28, x27, [sp, #16]
    f9dc:	ldp	x29, x30, [sp], #96
    f9e0:	ret
    f9e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f9e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f9ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f9f0:	add	x0, x0, #0x0
    f9f4:	add	x1, x1, #0x0
    f9f8:	add	x3, x3, #0x0
    f9fc:	mov	w2, #0x5b                  	// #91
    fa00:	bl	0 <__assert_fail>
    fa04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa10:	add	x0, x0, #0x0
    fa14:	add	x1, x1, #0x0
    fa18:	add	x3, x3, #0x0
    fa1c:	mov	w2, #0xfa                  	// #250
    fa20:	bl	0 <__assert_fail>
    fa24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa30:	add	x0, x0, #0x0
    fa34:	add	x1, x1, #0x0
    fa38:	add	x3, x3, #0x0
    fa3c:	mov	w2, #0xc91                 	// #3217
    fa40:	bl	0 <__assert_fail>
    fa44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa50:	add	x0, x0, #0x0
    fa54:	add	x1, x1, #0x0
    fa58:	add	x3, x3, #0x0
    fa5c:	b	fc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba0>
    fa60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa6c:	add	x0, x0, #0x0
    fa70:	add	x1, x1, #0x0
    fa74:	add	x3, x3, #0x0
    fa78:	b	fc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba0>
    fa7c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa80:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa84:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa88:	add	x0, x0, #0x0
    fa8c:	add	x1, x1, #0x0
    fa90:	add	x3, x3, #0x0
    fa94:	b	fc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba0>
    fa98:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa9c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    faa0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    faa4:	add	x0, x0, #0x0
    faa8:	add	x1, x1, #0x0
    faac:	add	x3, x3, #0x0
    fab0:	b	f9fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1964>
    fab4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fab8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fabc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fac0:	add	x0, x0, #0x0
    fac4:	add	x1, x1, #0x0
    fac8:	add	x3, x3, #0x0
    facc:	b	fa1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1984>
    fad0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fad4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fad8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fadc:	add	x0, x0, #0x0
    fae0:	add	x1, x1, #0x0
    fae4:	add	x3, x3, #0x0
    fae8:	b	fc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba0>
    faec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    faf0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    faf4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    faf8:	add	x0, x0, #0x0
    fafc:	add	x1, x1, #0x0
    fb00:	add	x3, x3, #0x0
    fb04:	b	fc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba0>
    fb08:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb0c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb10:	add	x0, x0, #0x0
    fb14:	add	x1, x1, #0x0
    fb18:	mov	w2, #0x22a                 	// #554
    fb1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    fb20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb2c:	add	x0, x0, #0x0
    fb30:	add	x1, x1, #0x0
    fb34:	add	x3, x3, #0x0
    fb38:	b	f9fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1964>
    fb3c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb40:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb44:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb48:	add	x0, x0, #0x0
    fb4c:	add	x1, x1, #0x0
    fb50:	add	x3, x3, #0x0
    fb54:	b	fa1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1984>
    fb58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb64:	add	x0, x0, #0x0
    fb68:	add	x1, x1, #0x0
    fb6c:	add	x3, x3, #0x0
    fb70:	mov	w2, #0xb69                 	// #2921
    fb74:	bl	0 <__assert_fail>
    fb78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb80:	add	x0, x0, #0x0
    fb84:	add	x1, x1, #0x0
    fb88:	mov	w2, #0x20b                 	// #523
    fb8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    fb90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb98:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fb9c:	add	x0, x0, #0x0
    fba0:	add	x1, x1, #0x0
    fba4:	add	x3, x3, #0x0
    fba8:	b	fc78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1be0>
    fbac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbb0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbb4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbb8:	add	x0, x0, #0x0
    fbbc:	add	x1, x1, #0x0
    fbc0:	add	x3, x3, #0x0
    fbc4:	mov	w2, #0xdbe                 	// #3518
    fbc8:	bl	0 <__assert_fail>
    fbcc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbd0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbd4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbd8:	add	x0, x0, #0x0
    fbdc:	add	x1, x1, #0x0
    fbe0:	add	x3, x3, #0x0
    fbe4:	b	f9fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1964>
    fbe8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbf0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbf4:	add	x0, x0, #0x0
    fbf8:	add	x1, x1, #0x0
    fbfc:	add	x3, x3, #0x0
    fc00:	b	fa1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1984>
    fc04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc10:	add	x0, x0, #0x0
    fc14:	add	x1, x1, #0x0
    fc18:	add	x3, x3, #0x0
    fc1c:	b	fc78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1be0>
    fc20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc2c:	add	x0, x0, #0x0
    fc30:	add	x1, x1, #0x0
    fc34:	add	x3, x3, #0x0
    fc38:	mov	w2, #0x101                 	// #257
    fc3c:	bl	0 <__assert_fail>
    fc40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc4c:	add	x0, x0, #0x0
    fc50:	add	x1, x1, #0x0
    fc54:	add	x3, x3, #0x0
    fc58:	mov	w2, #0x69                  	// #105
    fc5c:	bl	0 <__assert_fail>
    fc60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc6c:	add	x0, x0, #0x0
    fc70:	add	x1, x1, #0x0
    fc74:	add	x3, x3, #0x0
    fc78:	mov	w2, #0x108                 	// #264
    fc7c:	bl	0 <__assert_fail>
    fc80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc8c:	add	x0, x0, #0x0
    fc90:	add	x1, x1, #0x0
    fc94:	add	x3, x3, #0x0
    fc98:	mov	w2, #0xbf7                 	// #3063
    fc9c:	bl	0 <__assert_fail>
    fca0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fca4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fca8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fcac:	add	x0, x0, #0x0
    fcb0:	add	x1, x1, #0x0
    fcb4:	add	x3, x3, #0x0
    fcb8:	mov	w2, #0xa39                 	// #2617
    fcbc:	bl	0 <__assert_fail>

000000000000fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>:
    fcc0:	stp	x29, x30, [sp, #-64]!
    fcc4:	str	x23, [sp, #16]
    fcc8:	stp	x22, x21, [sp, #32]
    fccc:	stp	x20, x19, [sp, #48]
    fcd0:	mov	x29, sp
    fcd4:	add	x21, x0, #0x18
    fcd8:	mov	x0, x21
    fcdc:	mov	x19, x3
    fce0:	mov	w22, w2
    fce4:	mov	x20, x1
    fce8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    fcec:	mov	w23, w0
    fcf0:	subs	w8, w22, w0
    fcf4:	add	x1, x29, #0x1c
    fcf8:	mov	x0, x19
    fcfc:	str	w8, [x29, #28]
    fd00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fd04:	cmp	w22, w23
    fd08:	b.ls	fd14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE+0x54>  // b.plast
    fd0c:	mov	w0, wzr
    fd10:	b	fd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE+0x74>
    fd14:	ldr	x1, [x20]
    fd18:	mov	x0, x21
    fd1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fd20:	str	w0, [x29, #24]
    fd24:	add	x1, x29, #0x18
    fd28:	mov	x0, x19
    fd2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fd30:	mov	w0, #0x1                   	// #1
    fd34:	ldp	x20, x19, [sp, #48]
    fd38:	ldp	x22, x21, [sp, #32]
    fd3c:	ldr	x23, [sp, #16]
    fd40:	ldp	x29, x30, [sp], #64
    fd44:	ret

000000000000fd48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>:
    fd48:	sub	sp, sp, #0x190
    fd4c:	stp	x29, x30, [sp, #304]
    fd50:	str	x28, [sp, #320]
    fd54:	stp	x26, x25, [sp, #336]
    fd58:	stp	x24, x23, [sp, #352]
    fd5c:	stp	x22, x21, [sp, #368]
    fd60:	stp	x20, x19, [sp, #384]
    fd64:	add	x29, sp, #0x130
    fd68:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fd6c:	ldr	d0, [x8]
    fd70:	add	x8, sp, #0x20
    fd74:	mov	x20, x0
    fd78:	add	x24, x8, #0x10
    fd7c:	and	x0, x1, #0xfffffffffffffff8
    fd80:	mov	w19, w2
    fd84:	str	x1, [x29, #24]
    fd88:	str	x24, [sp, #32]
    fd8c:	str	d0, [sp, #40]
    fd90:	bl	0 <_ZNK4llvm5Value10getContextEv>
    fd94:	mov	x21, x0
    fd98:	add	x0, x29, #0x18
    fd9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fda0:	cbz	w0, fe30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xe8>
    fda4:	mov	w22, w0
    fda8:	mov	w23, wzr
    fdac:	add	x8, sp, #0x8
    fdb0:	add	x0, x29, #0x18
    fdb4:	mov	w1, w23
    fdb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fdbc:	ldr	x1, [sp, #24]
    fdc0:	mov	x0, x21
    fdc4:	ldr	x2, [x1], #16
    fdc8:	bl	0 <_ZNK4llvm11LLVMContext21getOperandBundleTagIDENS_9StringRefE>
    fdcc:	str	w0, [sp, #4]
    fdd0:	add	x0, sp, #0x20
    fdd4:	add	x1, sp, #0x4
    fdd8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fddc:	ldr	x8, [sp, #16]
    fde0:	cbz	x8, fe0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xc4>
    fde4:	ldr	x25, [sp, #8]
    fde8:	add	x8, x8, x8, lsl #1
    fdec:	lsl	x26, x8, #3
    fdf0:	ldr	x1, [x25], #24
    fdf4:	add	x3, sp, #0x20
    fdf8:	mov	x0, x20
    fdfc:	mov	w2, w19
    fe00:	bl	fcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16pushValueAndTypeEPKN4llvm5ValueEjRNS1_15SmallVectorImplIjEE>
    fe04:	subs	x26, x26, #0x18
    fe08:	b.ne	fdf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xa8>  // b.any
    fe0c:	ldr	x0, [x20]
    fe10:	add	x2, sp, #0x20
    fe14:	mov	w1, #0x37                  	// #55
    fe18:	mov	w3, wzr
    fe1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fe20:	add	w23, w23, #0x1
    fe24:	cmp	w23, w22
    fe28:	str	wzr, [sp, #40]
    fe2c:	b.ne	fdac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x64>  // b.any
    fe30:	ldr	x0, [sp, #32]
    fe34:	cmp	x0, x24
    fe38:	b.eq	fe40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xf8>  // b.none
    fe3c:	bl	0 <free>
    fe40:	ldp	x20, x19, [sp, #384]
    fe44:	ldp	x22, x21, [sp, #368]
    fe48:	ldp	x24, x23, [sp, #352]
    fe4c:	ldp	x26, x25, [sp, #336]
    fe50:	ldr	x28, [sp, #320]
    fe54:	ldp	x29, x30, [sp, #304]
    fe58:	add	sp, sp, #0x190
    fe5c:	ret

000000000000fe60 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE>:
    fe60:	stp	x29, x30, [sp, #-16]!
    fe64:	mov	x29, sp
    fe68:	cmp	w0, #0x8
    fe6c:	b.cs	fe90 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE+0x30>  // b.hs, b.nlast
    fe70:	mov	w8, #0xf7                  	// #247
    fe74:	lsr	w8, w8, w0
    fe78:	tbz	w8, #0, fe90 <_ZL18getEncodedOrderingN4llvm14AtomicOrderingE+0x30>
    fe7c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fe80:	add	x8, x8, #0x0
    fe84:	ldr	w0, [x8, w0, sxtw #2]
    fe88:	ldp	x29, x30, [sp], #16
    fe8c:	ret
    fe90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fe94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fe98:	add	x0, x0, #0x0
    fe9c:	add	x1, x1, #0x0
    fea0:	mov	w2, #0x245                 	// #581
    fea4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000fea8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>:
    fea8:	stp	x29, x30, [sp, #-64]!
    feac:	stp	x28, x23, [sp, #16]
    feb0:	stp	x22, x21, [sp, #32]
    feb4:	stp	x20, x19, [sp, #48]
    feb8:	mov	x29, sp
    febc:	sub	sp, sp, #0x210
    fec0:	ldr	x8, [x1, #104]
    fec4:	mov	x20, x1
    fec8:	mov	x19, x0
    fecc:	cbz	x8, fefc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x54>
    fed0:	ldp	x9, x10, [x8]
    fed4:	subs	x10, x10, x9
    fed8:	b.eq	fefc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x54>  // b.none
    fedc:	asr	x8, x10, #3
    fee0:	mov	x2, sp
    fee4:	mov	w1, #0xb                   	// #11
    fee8:	mov	x0, x19
    feec:	mov	w3, wzr
    fef0:	stp	x9, x8, [sp]
    fef4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fef8:	ldr	x8, [x20, #104]
    fefc:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff00:	ldr	d0, [x9]
    ff04:	mov	x9, sp
    ff08:	add	x22, x9, #0x10
    ff0c:	str	x22, [sp]
    ff10:	str	d0, [sp, #8]
    ff14:	cbz	x8, 10088 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1e0>
    ff18:	ldp	x21, x9, [x8, #24]
    ff1c:	subs	x9, x9, x21
    ff20:	b.eq	ff6c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0xc4>  // b.none
    ff24:	add	x23, x21, x9
    ff28:	str	wzr, [sp, #8]
    ff2c:	mov	x0, sp
    ff30:	mov	x1, x21
    ff34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff38:	add	x1, x21, #0x8
    ff3c:	mov	x0, sp
    ff40:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff44:	add	x21, x21, #0x10
    ff48:	cmp	x21, x23
    ff4c:	b.ne	ff2c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x84>  // b.any
    ff50:	mov	x2, sp
    ff54:	mov	w1, #0xc                   	// #12
    ff58:	mov	x0, x19
    ff5c:	mov	w3, wzr
    ff60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff64:	ldr	x8, [x20, #104]
    ff68:	cbz	x8, 10088 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1e0>
    ff6c:	ldp	x21, x9, [x8, #48]
    ff70:	subs	x9, x9, x21
    ff74:	b.eq	ffc0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x118>  // b.none
    ff78:	add	x23, x21, x9
    ff7c:	str	wzr, [sp, #8]
    ff80:	mov	x0, sp
    ff84:	mov	x1, x21
    ff88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff8c:	add	x1, x21, #0x8
    ff90:	mov	x0, sp
    ff94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff98:	add	x21, x21, #0x10
    ff9c:	cmp	x21, x23
    ffa0:	b.ne	ff80 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0xd8>  // b.any
    ffa4:	mov	x2, sp
    ffa8:	mov	w1, #0xd                   	// #13
    ffac:	mov	x0, x19
    ffb0:	mov	w3, wzr
    ffb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ffb8:	ldr	x8, [x20, #104]
    ffbc:	cbz	x8, 10088 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1e0>
    ffc0:	ldp	x21, x23, [x8, #72]
    ffc4:	cmp	x23, x21
    ffc8:	b.eq	10028 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x180>  // b.none
    ffcc:	mov	x0, sp
    ffd0:	mov	x1, x21
    ffd4:	str	wzr, [sp, #8]
    ffd8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ffdc:	add	x1, x21, #0x8
    ffe0:	mov	x0, sp
    ffe4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ffe8:	ldr	x8, [sp]
    ffec:	ldr	w9, [sp, #8]
    fff0:	ldp	x2, x3, [x21, #16]
    fff4:	mov	x0, sp
    fff8:	add	x1, x8, x9, lsl #3
    fffc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10000:	mov	x2, sp
   10004:	mov	w1, #0xe                   	// #14
   10008:	mov	x0, x19
   1000c:	mov	w3, wzr
   10010:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10014:	add	x21, x21, #0x28
   10018:	cmp	x21, x23
   1001c:	b.ne	ffcc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x124>  // b.any
   10020:	ldr	x8, [x20, #104]
   10024:	cbz	x8, 10088 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1e0>
   10028:	ldp	x20, x21, [x8, #96]
   1002c:	cmp	x21, x20
   10030:	b.eq	10088 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1e0>  // b.none
   10034:	mov	x0, sp
   10038:	mov	x1, x20
   1003c:	str	wzr, [sp, #8]
   10040:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10044:	add	x1, x20, #0x8
   10048:	mov	x0, sp
   1004c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10050:	ldr	x8, [sp]
   10054:	ldr	w9, [sp, #8]
   10058:	ldp	x2, x3, [x20, #16]
   1005c:	mov	x0, sp
   10060:	add	x1, x8, x9, lsl #3
   10064:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10068:	mov	x2, sp
   1006c:	mov	w1, #0xf                   	// #15
   10070:	mov	x0, x19
   10074:	mov	w3, wzr
   10078:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1007c:	add	x20, x20, #0x28
   10080:	cmp	x20, x21
   10084:	b.ne	10034 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x18c>  // b.any
   10088:	ldr	x0, [sp]
   1008c:	cmp	x0, x22
   10090:	b.eq	10098 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1f0>  // b.none
   10094:	bl	0 <free>
   10098:	add	sp, sp, #0x210
   1009c:	ldp	x20, x19, [sp, #48]
   100a0:	ldp	x22, x21, [sp, #32]
   100a4:	ldp	x28, x23, [sp, #16]
   100a8:	ldp	x29, x30, [sp], #64
   100ac:	ret

00000000000100b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>:
   100b0:	sub	sp, sp, #0x50
   100b4:	stp	x29, x30, [sp, #16]
   100b8:	stp	x24, x23, [sp, #32]
   100bc:	stp	x22, x21, [sp, #48]
   100c0:	stp	x20, x19, [sp, #64]
   100c4:	add	x29, sp, #0x10
   100c8:	ldr	x21, [x1]
   100cc:	ldr	x24, [x0, #32]
   100d0:	add	x22, x1, #0x28
   100d4:	mov	x20, x1
   100d8:	mov	x19, x0
   100dc:	mov	x0, x22
   100e0:	mov	x1, x21
   100e4:	bl	993c <_ZL17getStringEncodingN4llvm9StringRefE>
   100e8:	cmp	w0, #0x1
   100ec:	cset	w9, eq  // eq = none
   100f0:	mov	w8, #0x8                   	// #8
   100f4:	cmp	w0, #0x0
   100f8:	lsl	x9, x9, #4
   100fc:	csel	x8, x8, x9, eq  // eq = none
   10100:	ldr	x8, [x19, x8]
   10104:	ldr	x9, [x20, #8]
   10108:	ldr	x0, [x19, #24]
   1010c:	sub	x1, x29, #0x4
   10110:	ldr	w23, [x8]
   10114:	stur	w9, [x29, #-4]
   10118:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1011c:	ldr	x0, [x19, #24]
   10120:	add	x2, x22, x21
   10124:	mov	x1, x22
   10128:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1012c:	ldr	x0, [x24]
   10130:	ldr	x2, [x19, #24]
   10134:	mov	w1, #0x1                   	// #1
   10138:	mov	w3, w23
   1013c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10140:	mov	x1, x20
   10144:	ldr	w8, [x1, #16]!
   10148:	cbnz	w8, 10168 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb8>
   1014c:	ldr	w8, [x20, #20]
   10150:	cbnz	w8, 10168 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb8>
   10154:	ldr	w8, [x20, #24]
   10158:	cbnz	w8, 10168 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb8>
   1015c:	ldp	w8, w9, [x20, #28]
   10160:	orr	w8, w8, w9
   10164:	cbz	w8, 10190 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xe0>
   10168:	ldr	x0, [x19, #24]
   1016c:	add	x2, x1, #0x14
   10170:	str	wzr, [x0, #8]
   10174:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10178:	ldr	x8, [x19, #40]
   1017c:	ldr	x0, [x24]
   10180:	ldr	x2, [x19, #24]
   10184:	mov	w1, #0x2                   	// #2
   10188:	ldr	w3, [x8]
   1018c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10190:	ldr	x8, [x19, #24]
   10194:	str	wzr, [x8, #8]
   10198:	ldp	x20, x19, [sp, #64]
   1019c:	ldp	x22, x21, [sp, #48]
   101a0:	ldp	x24, x23, [sp, #32]
   101a4:	ldp	x29, x30, [sp, #16]
   101a8:	add	sp, sp, #0x50
   101ac:	ret

00000000000101b0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>:
   101b0:	stp	x29, x30, [sp, #-64]!
   101b4:	str	x23, [sp, #16]
   101b8:	stp	x22, x21, [sp, #32]
   101bc:	stp	x20, x19, [sp, #48]
   101c0:	mov	x29, sp
   101c4:	ldr	x8, [x0, #104]
   101c8:	cbz	x8, 102ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   101cc:	ldp	x21, x9, [x8]
   101d0:	mov	x20, x0
   101d4:	mov	x19, x1
   101d8:	subs	x9, x9, x21
   101dc:	b.eq	1020c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x5c>  // b.none
   101e0:	b.eq	1020c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x5c>  // b.none
   101e4:	asr	x8, x9, #3
   101e8:	lsl	x22, x8, #3
   101ec:	mov	x0, x19
   101f0:	mov	x1, x21
   101f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   101f8:	subs	x22, x22, #0x8
   101fc:	add	x21, x21, #0x8
   10200:	b.ne	101ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3c>  // b.any
   10204:	ldr	x8, [x20, #104]
   10208:	cbz	x8, 102ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   1020c:	ldp	x21, x9, [x8, #24]
   10210:	subs	x9, x9, x21
   10214:	b.eq	10240 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x90>  // b.none
   10218:	asr	x8, x9, #4
   1021c:	lsl	x22, x8, #4
   10220:	mov	x0, x19
   10224:	mov	x1, x21
   10228:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1022c:	subs	x22, x22, #0x10
   10230:	add	x21, x21, #0x10
   10234:	b.ne	10220 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x70>  // b.any
   10238:	ldr	x8, [x20, #104]
   1023c:	cbz	x8, 102ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   10240:	ldp	x21, x9, [x8, #48]
   10244:	subs	x9, x9, x21
   10248:	b.eq	10274 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xc4>  // b.none
   1024c:	asr	x8, x9, #4
   10250:	lsl	x22, x8, #4
   10254:	mov	x0, x19
   10258:	mov	x1, x21
   1025c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10260:	subs	x22, x22, #0x10
   10264:	add	x21, x21, #0x10
   10268:	b.ne	10254 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xa4>  // b.any
   1026c:	ldr	x8, [x20, #104]
   10270:	cbz	x8, 102ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   10274:	ldp	x21, x9, [x8, #72]
   10278:	mov	x22, #0xcccccccccccccccc    	// #-3689348814741910324
   1027c:	movk	x22, #0xcccd
   10280:	subs	x9, x9, x21
   10284:	b.eq	102b8 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x108>  // b.none
   10288:	asr	x8, x9, #3
   1028c:	mul	x8, x8, x22
   10290:	add	x8, x8, x8, lsl #2
   10294:	lsl	x23, x8, #3
   10298:	mov	x0, x19
   1029c:	mov	x1, x21
   102a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   102a4:	subs	x23, x23, #0x28
   102a8:	add	x21, x21, #0x28
   102ac:	b.ne	10298 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xe8>  // b.any
   102b0:	ldr	x8, [x20, #104]
   102b4:	cbz	x8, 102ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   102b8:	ldp	x20, x8, [x8, #96]
   102bc:	subs	x8, x8, x20
   102c0:	b.eq	102ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>  // b.none
   102c4:	asr	x8, x8, #3
   102c8:	mul	x8, x8, x22
   102cc:	add	x8, x8, x8, lsl #2
   102d0:	lsl	x21, x8, #3
   102d4:	mov	x0, x19
   102d8:	mov	x1, x20
   102dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   102e0:	subs	x21, x21, #0x28
   102e4:	add	x20, x20, #0x28
   102e8:	b.ne	102d4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x124>  // b.any
   102ec:	ldp	x20, x19, [sp, #48]
   102f0:	ldp	x22, x21, [sp, #32]
   102f4:	ldr	x23, [sp, #16]
   102f8:	ldp	x29, x30, [sp], #64
   102fc:	ret

0000000000010300 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>:
   10300:	sub	sp, sp, #0x70
   10304:	stp	x29, x30, [sp, #32]
   10308:	stp	x26, x25, [sp, #48]
   1030c:	stp	x24, x23, [sp, #64]
   10310:	stp	x22, x21, [sp, #80]
   10314:	stp	x20, x19, [sp, #96]
   10318:	add	x29, sp, #0x20
   1031c:	stp	x1, x2, [sp, #8]
   10320:	ldr	x20, [x0, #8]
   10324:	str	x2, [sp]
   10328:	cbz	x2, 1085c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x55c>
   1032c:	mov	x19, x0
   10330:	ldr	x0, [x0]
   10334:	add	x1, sp, #0x8
   10338:	mov	w21, w3
   1033c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10340:	ldr	x8, [sp]
   10344:	ldp	x22, x8, [x8, #40]
   10348:	subs	x8, x8, x22
   1034c:	b.eq	1037c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x7c>  // b.none
   10350:	asr	x8, x8, #3
   10354:	lsl	x23, x8, #3
   10358:	ldr	x0, [x19]
   1035c:	ldr	x8, [x22], #8
   10360:	sub	x1, x29, #0x8
   10364:	and	x8, x8, #0xfffffffffffffff8
   10368:	ldr	x8, [x8]
   1036c:	stur	x8, [x29, #-8]
   10370:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10374:	subs	x23, x23, #0x8
   10378:	b.ne	10358 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x58>  // b.any
   1037c:	ldr	x1, [sp, #8]
   10380:	mov	x0, x20
   10384:	bl	108fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm>
   10388:	tst	x0, #0xff00000000
   1038c:	b.eq	1087c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x57c>  // b.none
   10390:	mov	x22, x0
   10394:	ldr	x0, [x19, #16]
   10398:	mov	x1, sp
   1039c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   103a0:	str	w22, [x0, #8]
   103a4:	tbnz	w21, #0, 10820 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x520>
   103a8:	ldr	x21, [sp]
   103ac:	cbz	x21, 1089c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x59c>
   103b0:	ldr	w8, [x21, #8]
   103b4:	cmp	w8, #0x0
   103b8:	csel	x9, x21, xzr, eq  // eq = none
   103bc:	stur	x9, [x29, #-8]
   103c0:	cbz	x9, 103d4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd4>
   103c4:	ldr	x0, [x19, #24]
   103c8:	sub	x1, x29, #0x8
   103cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   103d0:	b	10820 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x520>
   103d4:	cmp	w8, #0x1
   103d8:	b.eq	1042c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x12c>  // b.none
   103dc:	cmp	w8, #0x2
   103e0:	b.ne	108dc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5dc>  // b.any
   103e4:	ldr	x0, [x19, #32]
   103e8:	and	x8, x22, #0xffffffff
   103ec:	sub	x1, x29, #0x8
   103f0:	stur	x8, [x29, #-8]
   103f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   103f8:	ldr	x23, [x20, #16]
   103fc:	ldp	x1, x2, [x21, #24]
   10400:	ldr	x22, [x19, #32]
   10404:	add	x0, x23, #0x30
   10408:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   1040c:	cmn	w0, #0x1
   10410:	b.eq	10424 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x124>  // b.none
   10414:	ldr	w9, [x23, #56]
   10418:	sxtw	x8, w0
   1041c:	cmp	x8, x9
   10420:	b.ne	1048c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x18c>  // b.any
   10424:	mov	x8, xzr
   10428:	b	10498 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x198>
   1042c:	ldr	x0, [x20]
   10430:	mov	x1, x21
   10434:	bl	fea8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>
   10438:	ldr	x1, [x19, #56]
   1043c:	mov	x0, x21
   10440:	bl	101b0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>
   10444:	ldr	x0, [x19, #32]
   10448:	and	x8, x22, #0xffffffff
   1044c:	sub	x1, x29, #0x8
   10450:	stur	x8, [x29, #-8]
   10454:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10458:	ldr	x23, [x20, #16]
   1045c:	ldp	x1, x2, [x21, #24]
   10460:	ldr	x22, [x19, #32]
   10464:	add	x0, x23, #0x30
   10468:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   1046c:	cmn	w0, #0x1
   10470:	b.eq	10484 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x184>  // b.none
   10474:	ldr	w9, [x23, #56]
   10478:	sxtw	x8, w0
   1047c:	cmp	x8, x9
   10480:	b.ne	10538 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x238>  // b.any
   10484:	mov	x8, xzr
   10488:	b	10544 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x244>
   1048c:	ldr	x9, [x23, #48]
   10490:	ldr	x8, [x9, x8, lsl #3]
   10494:	ldr	x8, [x8, #8]
   10498:	sub	x1, x29, #0x8
   1049c:	mov	x0, x22
   104a0:	stur	x8, [x29, #-8]
   104a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   104a8:	ldrb	w8, [x21, #12]
   104ac:	ldr	x0, [x19, #32]
   104b0:	sub	x1, x29, #0x8
   104b4:	stur	x8, [x29, #-8]
   104b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   104bc:	ldr	w8, [x21, #72]
   104c0:	ldr	x0, [x19, #32]
   104c4:	sub	x1, x29, #0x8
   104c8:	and	x8, x8, #0x3
   104cc:	stur	x8, [x29, #-8]
   104d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   104d4:	ldp	x22, x8, [x21, #40]
   104d8:	subs	x8, x8, x22
   104dc:	b.eq	10528 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x228>  // b.none
   104e0:	asr	x8, x8, #3
   104e4:	lsl	x21, x8, #3
   104e8:	ldr	x8, [x22]
   104ec:	mov	x0, x20
   104f0:	and	x8, x8, #0xfffffffffffffff8
   104f4:	ldr	x1, [x8]
   104f8:	bl	108fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm>
   104fc:	tst	x0, #0xff00000000
   10500:	b.eq	1051c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x21c>  // b.none
   10504:	ldr	x8, [x19, #32]
   10508:	and	x9, x0, #0xffffffff
   1050c:	sub	x1, x29, #0x8
   10510:	stur	x9, [x29, #-8]
   10514:	mov	x0, x8
   10518:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1051c:	subs	x21, x21, #0x8
   10520:	add	x22, x22, #0x8
   10524:	b.ne	104e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x1e8>  // b.any
   10528:	ldp	x2, x8, [x19, #32]
   1052c:	ldr	x0, [x20]
   10530:	mov	w1, #0x6                   	// #6
   10534:	b	107c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4c4>
   10538:	ldr	x9, [x23, #48]
   1053c:	ldr	x8, [x9, x8, lsl #3]
   10540:	ldr	x8, [x8, #8]
   10544:	sub	x1, x29, #0x8
   10548:	mov	x0, x22
   1054c:	stur	x8, [x29, #-8]
   10550:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10554:	ldrb	w8, [x21, #12]
   10558:	ldr	x0, [x19, #32]
   1055c:	sub	x1, x29, #0x8
   10560:	stur	x8, [x29, #-8]
   10564:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10568:	ldr	w8, [x21, #64]
   1056c:	ldr	x0, [x19, #32]
   10570:	sub	x1, x29, #0x8
   10574:	stur	x8, [x29, #-8]
   10578:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1057c:	ldr	w8, [x21, #68]
   10580:	ldr	x0, [x19, #32]
   10584:	sub	x1, x29, #0x8
   10588:	and	x8, x8, #0x3f
   1058c:	stur	x8, [x29, #-8]
   10590:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10594:	ldr	x8, [x21, #72]
   10598:	ldr	x0, [x19, #32]
   1059c:	sub	x1, x29, #0x8
   105a0:	stur	x8, [x29, #-8]
   105a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   105a8:	ldr	x0, [x19, #32]
   105ac:	sub	x1, x29, #0x8
   105b0:	stur	xzr, [x29, #-8]
   105b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   105b8:	ldr	x0, [x19, #32]
   105bc:	sub	x1, x29, #0x8
   105c0:	stur	xzr, [x29, #-8]
   105c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   105c8:	ldr	x0, [x19, #32]
   105cc:	sub	x1, x29, #0x8
   105d0:	stur	xzr, [x29, #-8]
   105d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   105d8:	ldp	x25, x8, [x21, #40]
   105dc:	subs	x8, x8, x25
   105e0:	b.eq	10668 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x368>  // b.none
   105e4:	asr	x8, x8, #3
   105e8:	mov	w24, wzr
   105ec:	mov	w23, wzr
   105f0:	mov	w22, wzr
   105f4:	lsl	x26, x8, #3
   105f8:	ldr	x8, [x25]
   105fc:	mov	x0, x20
   10600:	and	x8, x8, #0xfffffffffffffff8
   10604:	ldr	x1, [x8]
   10608:	bl	108fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm>
   1060c:	tst	x0, #0xff00000000
   10610:	b.eq	10658 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x358>  // b.none
   10614:	ldr	x8, [x19, #32]
   10618:	and	x9, x0, #0xffffffff
   1061c:	sub	x1, x29, #0x8
   10620:	stur	x9, [x29, #-8]
   10624:	mov	x0, x8
   10628:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1062c:	ldr	x8, [x25]
   10630:	mvn	w9, w8
   10634:	tst	x9, #0x6
   10638:	b.eq	1083c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x53c>  // b.none
   1063c:	ubfx	w10, w8, #2, #1
   10640:	tst	x8, #0x2
   10644:	ubfx	x9, x8, #1, #1
   10648:	csel	w8, w10, wzr, eq  // eq = none
   1064c:	add	w23, w23, w9
   10650:	add	w22, w22, w8
   10654:	add	w24, w24, #0x1
   10658:	subs	x26, x26, #0x8
   1065c:	add	x25, x25, #0x8
   10660:	b.ne	105f8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2f8>  // b.any
   10664:	b	10674 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x374>
   10668:	mov	w22, wzr
   1066c:	mov	w23, wzr
   10670:	mov	w24, wzr
   10674:	ldr	x2, [x19, #32]
   10678:	ldr	w8, [x2, #8]
   1067c:	cmp	w8, #0x6
   10680:	b.ls	108bc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5bc>  // b.plast
   10684:	ldr	x9, [x2]
   10688:	mov	w10, w24
   1068c:	cmp	w8, #0x7
   10690:	str	x10, [x9, #48]
   10694:	b.eq	108bc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5bc>  // b.none
   10698:	mov	w10, w23
   1069c:	cmp	w8, #0x8
   106a0:	str	x10, [x9, #56]
   106a4:	b.ls	108bc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5bc>  // b.plast
   106a8:	mov	w8, w22
   106ac:	str	x8, [x9, #64]
   106b0:	ldp	x8, x9, [x21, #80]
   106b4:	subs	x9, x9, x8
   106b8:	b.eq	107b4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4b4>  // b.none
   106bc:	asr	x10, x9, #4
   106c0:	lsl	x23, x10, #4
   106c4:	sub	x11, x23, #0x10
   106c8:	add	x10, x8, #0x8
   106cc:	ldr	w12, [x10], #16
   106d0:	and	w24, w12, #0x7
   106d4:	cbnz	w24, 106e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x3e8>
   106d8:	sub	x12, x11, #0x10
   106dc:	mov	x13, x11
   106e0:	mov	x11, x12
   106e4:	cbnz	x13, 106cc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x3cc>
   106e8:	cbz	x9, 107a4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4a4>
   106ec:	add	x25, x8, #0x8
   106f0:	ldur	x8, [x25, #-8]
   106f4:	mov	x0, x20
   106f8:	and	x8, x8, #0xfffffffffffffff8
   106fc:	ldr	x22, [x8]
   10700:	mov	x1, x22
   10704:	bl	108fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm>
   10708:	mov	x21, x0
   1070c:	tst	x0, #0xff00000000
   10710:	b.eq	10748 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x448>  // b.none
   10714:	ldr	x0, [x19, #32]
   10718:	and	x8, x21, #0xffffffff
   1071c:	sub	x1, x29, #0x8
   10720:	stur	x8, [x29, #-8]
   10724:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10728:	cbz	w24, 10794 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x494>
   1072c:	ldr	w8, [x25]
   10730:	ldr	x0, [x19, #32]
   10734:	sub	x1, x29, #0x8
   10738:	and	x8, x8, #0x7
   1073c:	stur	x8, [x29, #-8]
   10740:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10744:	b	10794 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x494>
   10748:	ldr	x0, [x20, #16]
   1074c:	mov	x1, x22
   10750:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10754:	cbz	x0, 10794 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x494>
   10758:	mov	x22, x0
   1075c:	mov	x0, x20
   10760:	mov	x1, x22
   10764:	bl	108fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm>
   10768:	tst	x0, #0xff00000000
   1076c:	b.eq	10794 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x494>  // b.none
   10770:	mov	x21, x0
   10774:	ldr	x0, [x20, #16]
   10778:	mov	x1, x22
   1077c:	mov	w2, wzr
   10780:	bl	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryEmb>
   10784:	cbz	x0, 10714 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x414>
   10788:	ldr	w8, [x0, #8]
   1078c:	cmp	w8, #0x2
   10790:	b.ne	10714 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x414>  // b.any
   10794:	subs	x23, x23, #0x10
   10798:	add	x25, x25, #0x10
   1079c:	b.ne	106f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x3f0>  // b.any
   107a0:	ldr	x2, [x19, #32]
   107a4:	cbz	w24, 107b4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4b4>
   107a8:	add	x8, x19, #0x40
   107ac:	mov	w1, #0x5                   	// #5
   107b0:	b	107bc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4bc>
   107b4:	add	x8, x19, #0x48
   107b8:	mov	w1, #0x4                   	// #4
   107bc:	ldr	x8, [x8]
   107c0:	ldr	x0, [x20]
   107c4:	ldr	w3, [x8]
   107c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   107cc:	ldr	x8, [x19, #32]
   107d0:	str	wzr, [x8, #8]
   107d4:	ldr	x8, [sp]
   107d8:	ldrb	w9, [x8, #12]
   107dc:	and	w9, w9, #0xf
   107e0:	sub	w9, w9, #0x7
   107e4:	cmp	w9, #0x1
   107e8:	b.hi	10820 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x520>  // b.pmore
   107ec:	ldr	x19, [x19, #48]
   107f0:	ldr	x8, [x8, #16]
   107f4:	sub	x1, x29, #0x8
   107f8:	ldp	x0, x20, [x19]
   107fc:	stur	x8, [x29, #-8]
   10800:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10804:	ldr	x0, [x20]
   10808:	ldr	x2, [x19]
   1080c:	mov	w1, #0x9                   	// #9
   10810:	mov	w3, wzr
   10814:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10818:	ldr	x8, [x19]
   1081c:	str	wzr, [x8, #8]
   10820:	ldp	x20, x19, [sp, #96]
   10824:	ldp	x22, x21, [sp, #80]
   10828:	ldp	x24, x23, [sp, #64]
   1082c:	ldp	x26, x25, [sp, #48]
   10830:	ldp	x29, x30, [sp, #32]
   10834:	add	sp, sp, #0x70
   10838:	ret
   1083c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10840:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10844:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10848:	add	x0, x0, #0x0
   1084c:	add	x1, x1, #0x0
   10850:	add	x3, x3, #0x0
   10854:	mov	w2, #0xc3                  	// #195
   10858:	bl	0 <__assert_fail>
   1085c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10860:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10864:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10868:	add	x0, x0, #0x0
   1086c:	add	x1, x1, #0x0
   10870:	add	x3, x3, #0x0
   10874:	mov	w2, #0xf9b                 	// #3995
   10878:	bl	0 <__assert_fail>
   1087c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10880:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10884:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10888:	add	x0, x0, #0x0
   1088c:	add	x1, x1, #0x0
   10890:	add	x3, x3, #0x0
   10894:	mov	w2, #0xfa1                 	// #4001
   10898:	bl	0 <__assert_fail>
   1089c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108a8:	add	x0, x0, #0x0
   108ac:	add	x1, x1, #0x0
   108b0:	add	x3, x3, #0x0
   108b4:	mov	w2, #0x69                  	// #105
   108b8:	bl	0 <__assert_fail>
   108bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108c8:	add	x0, x0, #0x0
   108cc:	add	x1, x1, #0x0
   108d0:	add	x3, x3, #0x0
   108d4:	mov	w2, #0x95                  	// #149
   108d8:	bl	0 <__assert_fail>
   108dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   108e8:	add	x0, x0, #0x0
   108ec:	add	x1, x1, #0x0
   108f0:	add	x3, x3, #0x0
   108f4:	mov	w2, #0x108                 	// #264
   108f8:	bl	0 <__assert_fail>

00000000000108fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm>:
   108fc:	ldr	x10, [x0, #48]
   10900:	cbz	x10, 1095c <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm+0x60>
   10904:	add	x8, x0, #0x28
   10908:	mov	x9, x8
   1090c:	ldr	x11, [x10, #32]
   10910:	add	x12, x10, #0x18
   10914:	add	x13, x10, #0x10
   10918:	cmp	x11, x1
   1091c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   10920:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   10924:	ldr	x10, [x10]
   10928:	cbnz	x10, 1090c <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm+0x10>
   1092c:	cmp	x9, x8
   10930:	b.eq	10968 <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm+0x6c>  // b.none
   10934:	ldr	x10, [x9, #32]
   10938:	cmp	x10, x1
   1093c:	csel	x9, x8, x9, hi  // hi = pmore
   10940:	cmp	x9, x8
   10944:	b.eq	10968 <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm+0x6c>  // b.none
   10948:	ldr	w8, [x9, #40]
   1094c:	and	w10, w8, #0xffffff00
   10950:	and	w9, w8, #0xff
   10954:	mov	x8, #0x100000000           	// #4294967296
   10958:	b	10974 <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm+0x78>
   1095c:	mov	x8, xzr
   10960:	mov	w9, wzr
   10964:	b	10974 <_ZN12_GLOBAL__N_118IndexBitcodeWriter10getValueIdEm+0x78>
   10968:	mov	x8, xzr
   1096c:	mov	w9, wzr
   10970:	mov	w10, wzr
   10974:	orr	w9, w10, w9
   10978:	orr	x0, x8, x9
   1097c:	ret

Disassembly of section .text._ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x2
  18:	mov	x22, x1
  1c:	mov	w1, wzr
  20:	mov	w2, wzr
  24:	mov	x19, x4
  28:	mov	x20, x3
  2c:	mov	x23, x0
  30:	bl	0 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_>
  34:	str	wzr, [x23, #136]
  38:	adrp	x8, 0 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_>
  3c:	ldr	x8, [x8]
  40:	mov	w9, #0x1                   	// #1
  44:	str	wzr, [x23, #152]
  48:	strb	w9, [x23, #156]
  4c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE>
  50:	add	x8, x8, #0x10
  54:	ldr	x9, [x9]
  58:	str	x8, [x23, #144]
  5c:	adrp	x8, 0 <_ZTVN4llvm2cl6parserIjEE>
  60:	ldr	x8, [x8]
  64:	add	x9, x9, #0x10
  68:	str	x9, [x23]
  6c:	adrp	x9, 0 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_>
  70:	add	x8, x8, #0x10
  74:	str	x8, [x23, #160]
  78:	adrp	x8, 0 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_>
  7c:	add	x9, x9, #0x0
  80:	add	x8, x8, #0x0
  84:	mov	x0, x23
  88:	mov	x1, x22
  8c:	mov	x2, x21
  90:	mov	x3, x20
  94:	mov	x4, x19
  98:	stp	x8, x9, [x23, #184]
  9c:	bl	0 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEEC2IJA26_cNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEDpRKT_>
  a0:	mov	x0, x23
  a4:	ldp	x20, x19, [sp, #48]
  a8:	ldp	x22, x21, [sp, #32]
  ac:	ldr	x23, [sp, #16]
  b0:	ldp	x29, x30, [sp], #64
  b4:	b	0 <_ZN4llvm2cl6Option11addArgumentEv>

Disassembly of section .text._ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x2
  18:	mov	x22, x1
  1c:	mov	w1, wzr
  20:	mov	w2, wzr
  24:	mov	x19, x4
  28:	mov	x20, x3
  2c:	mov	x23, x0
  30:	bl	0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_>
  34:	strb	wzr, [x23, #136]
  38:	adrp	x8, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_>
  3c:	ldr	x8, [x8]
  40:	mov	w9, #0x100                 	// #256
  44:	strh	w9, [x23, #152]
  48:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  4c:	add	x8, x8, #0x10
  50:	ldr	x9, [x9]
  54:	str	x8, [x23, #144]
  58:	adrp	x8, 0 <_ZTVN4llvm2cl6parserIbEE>
  5c:	ldr	x8, [x8]
  60:	add	x9, x9, #0x10
  64:	str	x9, [x23]
  68:	adrp	x9, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_>
  6c:	add	x8, x8, #0x10
  70:	str	x8, [x23, #160]
  74:	adrp	x8, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_>
  78:	add	x9, x9, #0x0
  7c:	add	x8, x8, #0x0
  80:	mov	x0, x23
  84:	mov	x1, x22
  88:	mov	x2, x21
  8c:	mov	x3, x20
  90:	mov	x4, x19
  94:	stp	x8, x9, [x23, #184]
  98:	bl	0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA23_cNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEDpRKT_>
  9c:	mov	x0, x23
  a0:	ldp	x20, x19, [sp, #48]
  a4:	ldp	x22, x21, [sp, #32]
  a8:	ldr	x23, [sp, #16]
  ac:	ldp	x29, x30, [sp], #64
  b0:	b	0 <_ZN4llvm2cl6Option11addArgumentEv>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x20, [x21, #16]!
  18:	mov	x19, x0
  1c:	ldr	w8, [x21, #8]
  20:	cbz	w8, 38 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x38>
  24:	lsl	x22, x8, #3
  28:	ldr	x0, [x20], #8
  2c:	bl	0 <free>
  30:	subs	x22, x22, #0x8
  34:	b.ne	28 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x28>  // b.any
  38:	ldr	w8, [x19, #72]
  3c:	ldr	x20, [x19, #64]
  40:	cbz	w8, 5c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x5c>
  44:	lsl	x22, x8, #4
  48:	ldr	x0, [x20], #16
  4c:	bl	0 <free>
  50:	subs	x22, x22, #0x10
  54:	b.ne	48 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x48>  // b.any
  58:	ldr	x20, [x19, #64]
  5c:	add	x8, x19, #0x50
  60:	cmp	x20, x8
  64:	b.eq	70 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x70>  // b.none
  68:	mov	x0, x20
  6c:	bl	0 <free>
  70:	ldr	x0, [x21], #16
  74:	cmp	x0, x21
  78:	b.eq	8c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x8c>  // b.none
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldp	x22, x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <free>
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x22, x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm15BitstreamWriterESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm15BitstreamWriterESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 28 <_ZNSt10unique_ptrIN4llvm15BitstreamWriterESt14default_deleteIS1_EED2Ev+0x28>
  18:	mov	x0, x20
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm15BitstreamWriterESt14default_deleteIS1_EED2Ev>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	str	xzr, [x19]
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter13EnterSubblockEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	str	x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	w21, w2
  18:	ldr	w2, [x0, #16]
  1c:	mov	w20, w1
  20:	mov	w1, #0x1                   	// #1
  24:	mov	x19, x0
  28:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  2c:	mov	w2, #0x8                   	// #8
  30:	mov	x0, x19
  34:	mov	w1, w20
  38:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  3c:	mov	w2, #0x4                   	// #4
  40:	mov	x0, x19
  44:	mov	w1, w21
  48:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  54:	ldr	x8, [x19]
  58:	ldr	w8, [x8, #8]
  5c:	tst	x8, #0x3
  60:	b.ne	130 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x130>  // b.any
  64:	lsr	x8, x8, #2
  68:	str	x8, [x29, #24]
  6c:	ldr	w8, [x19, #16]
  70:	mov	w2, #0x20                  	// #32
  74:	mov	x0, x19
  78:	mov	w1, wzr
  7c:	stur	w8, [x29, #-4]
  80:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  84:	add	x0, x19, #0x30
  88:	sub	x1, x29, #0x4
  8c:	add	x2, x29, #0x18
  90:	str	w21, [x19, #16]
  94:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  98:	ldr	q1, [x19, #24]!
  9c:	ldr	x8, [x19, #32]
  a0:	ldur	x10, [x8, #-24]
  a4:	ldur	q0, [x8, #-16]
  a8:	stur	q1, [x8, #-24]
  ac:	ldr	x9, [x19, #16]
  b0:	stur	x9, [x8, #-8]
  b4:	ldp	x8, x9, [x19, #48]
  b8:	str	x10, [x19]
  bc:	stur	q0, [x19, #8]
  c0:	cmp	x8, x9
  c4:	b.eq	ec <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xec>  // b.none
  c8:	mov	x10, x9
  cc:	ldr	w11, [x10, #-32]!
  d0:	cmp	w11, w20
  d4:	b.ne	ec <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xec>  // b.any
  d8:	ldp	x2, x3, [x10, #8]
  dc:	fmov	x1, d0
  e0:	mov	x0, x19
  e4:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  e8:	b	11c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x11c>
  ec:	sub	x9, x9, x8
  f0:	lsr	x9, x9, #5
  f4:	cbz	w9, 11c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x11c>
  f8:	mov	w11, wzr
  fc:	mov	w10, w11
 100:	add	x10, x8, x10, lsl #5
 104:	ldr	w12, [x10]
 108:	cmp	w12, w20
 10c:	b.eq	d8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xd8>  // b.none
 110:	add	w11, w11, #0x1
 114:	cmp	w9, w11
 118:	b.ne	fc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xfc>  // b.any
 11c:	ldp	x20, x19, [sp, #48]
 120:	ldr	x21, [sp, #32]
 124:	ldp	x29, x30, [sp, #16]
 128:	add	sp, sp, #0x40
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 134:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 138:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x4f                  	// #79
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter9ExitBlockEv:

0000000000000000 <_ZN4llvm15BitstreamWriter9ExitBlockEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x8, x20, [x0, #48]
  10:	cmp	x8, x20
  14:	b.eq	8c <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x8c>  // b.none
  18:	ldr	w2, [x0, #16]
  1c:	mov	w1, wzr
  20:	mov	x19, x0
  24:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  30:	ldr	x8, [x19]
  34:	ldr	w8, [x8, #8]
  38:	tst	x8, #0x3
  3c:	b.ne	ac <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xac>  // b.any
  40:	ldur	x9, [x20, #-32]
  44:	lsr	x8, x8, #2
  48:	mov	x0, x19
  4c:	mvn	w10, w9
  50:	add	w2, w10, w8
  54:	lsl	x1, x9, #5
  58:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  5c:	ldur	w8, [x20, #-40]
  60:	sub	x1, x20, #0x18
  64:	add	x0, x19, #0x18
  68:	str	w8, [x19, #16]
  6c:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  70:	ldr	x8, [x19, #56]
  74:	sub	x9, x8, #0x28
  78:	str	x9, [x19, #56]
  7c:	ldp	x20, x19, [sp, #16]
  80:	sub	x0, x8, #0x18
  84:	ldp	x29, x30, [sp], #32
  88:	b	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  8c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  90:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  94:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0xe5                  	// #229
  a8:	bl	0 <__assert_fail>
  ac:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  b0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  b4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x4f                  	// #79
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x104                 	// #260
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x11b                 	// #283
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIcSaIcEE6resizeEm:

0000000000000000 <_ZNSt6vectorIcSaIcEE6resizeEm>:
   0:	ldp	x9, x8, [x0]
   4:	sub	x10, x8, x9
   8:	cmp	x10, x1
   c:	b.cs	18 <_ZNSt6vectorIcSaIcEE6resizeEm+0x18>  // b.hs, b.nlast
  10:	sub	x1, x1, x10
  14:	b	0 <_ZNSt6vectorIcSaIcEE6resizeEm>
  18:	b.ls	2c <_ZNSt6vectorIcSaIcEE6resizeEm+0x2c>  // b.plast
  1c:	add	x9, x9, x1
  20:	cmp	x9, x8
  24:	b.eq	2c <_ZNSt6vectorIcSaIcEE6resizeEm+0x2c>  // b.none
  28:	str	x9, [x0, #8]
  2c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6insertEPcmRKc:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0]
  1c:	ldr	w9, [x0, #8]
  20:	mov	x19, x3
  24:	mov	x20, x2
  28:	mov	x22, x0
  2c:	add	x10, x8, x9
  30:	cmp	x10, x1
  34:	sub	x25, x1, x8
  38:	b.eq	e0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xe0>  // b.none
  3c:	cmp	x8, x1
  40:	b.hi	154 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x154>  // b.pmore
  44:	cmp	x10, x1
  48:	b.cc	174 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x174>  // b.lo, b.ul, b.last
  4c:	ldr	w10, [x22, #12]
  50:	add	x2, x9, x20
  54:	cmp	x2, x10
  58:	b.ls	74 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x74>  // b.plast
  5c:	add	x1, x22, #0x10
  60:	mov	w3, #0x1                   	// #1
  64:	mov	x0, x22
  68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  6c:	ldr	x8, [x22]
  70:	ldr	w9, [x22, #8]
  74:	add	x21, x8, x25
  78:	add	x23, x8, x9
  7c:	sub	x24, x23, x21
  80:	cmp	x24, x20
  84:	b.cs	fc <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xfc>  // b.hs, b.nlast
  88:	ldr	w11, [x22, #12]
  8c:	add	x10, x9, x20
  90:	cmp	x10, x11
  94:	b.hi	194 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x194>  // b.pmore
  98:	cmp	x25, x9
  9c:	str	w10, [x22, #8]
  a0:	b.eq	b8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xb8>  // b.none
  a4:	add	x8, x8, w10, uxtw
  a8:	sub	x0, x8, x24
  ac:	mov	x1, x21
  b0:	mov	x2, x24
  b4:	bl	0 <memcpy>
  b8:	cbz	x24, cc <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xcc>
  bc:	ldrb	w1, [x19]
  c0:	mov	x0, x21
  c4:	mov	x2, x24
  c8:	bl	0 <memset>
  cc:	subs	x2, x20, x24
  d0:	b.eq	138 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x138>  // b.none
  d4:	ldrb	w1, [x19]
  d8:	mov	x0, x23
  dc:	b	134 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x134>
  e0:	mov	x0, x22
  e4:	mov	x1, x20
  e8:	mov	x2, x19
  ec:	bl	0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
  f0:	ldr	x8, [x22]
  f4:	add	x21, x8, x25
  f8:	b	138 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x138>
  fc:	sub	x24, x23, x20
 100:	mov	x0, x22
 104:	mov	x1, x24
 108:	mov	x2, x23
 10c:	bl	0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 110:	subs	x2, x24, x21
 114:	b.eq	124 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x124>  // b.none
 118:	sub	x0, x23, x2
 11c:	mov	x1, x21
 120:	bl	0 <memmove>
 124:	cbz	x20, 138 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x138>
 128:	ldrb	w1, [x19]
 12c:	mov	x0, x21
 130:	mov	x2, x20
 134:	bl	0 <memset>
 138:	mov	x0, x21
 13c:	ldp	x20, x19, [sp, #64]
 140:	ldp	x22, x21, [sp, #48]
 144:	ldp	x24, x23, [sp, #32]
 148:	ldr	x25, [sp, #16]
 14c:	ldp	x29, x30, [sp], #80
 150:	ret
 154:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 158:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 15c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 160:	add	x0, x0, #0x0
 164:	add	x1, x1, #0x0
 168:	add	x3, x3, #0x0
 16c:	mov	w2, #0x217                 	// #535
 170:	bl	0 <__assert_fail>
 174:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 178:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 17c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x218                 	// #536
 190:	bl	0 <__assert_fail>
 194:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 198:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 19c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x43                  	// #67
 1b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv:

0000000000000000 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	ldr	x8, [x8]
  10:	cmp	x8, x9
  14:	b.ne	30 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv+0x30>  // b.any
  18:	ldp	x8, x9, [x0]
  1c:	cmp	x8, x9
  20:	b.cs	50 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv+0x50>  // b.hs, b.nlast
  24:	ldr	x0, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>
  34:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>
  38:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x11c                 	// #284
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>
  54:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>
  58:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11GlobalValueEEdeEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x121                 	// #289
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8ConstantELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm17ConstantDataArray3getIhEEPNS_8ConstantERNS_11LLVMContextENS_8ArrayRefIT_EE:

0000000000000000 <_ZN4llvm17ConstantDataArray3getIhEEPNS_8ConstantERNS_11LLVMContextENS_8ArrayRefIT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	mov	w1, #0x8                   	// #8
  14:	mov	x19, x2
  18:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
  1c:	mov	x1, x19
  20:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
  24:	mov	x2, x0
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm22ConstantDataSequential7getImplENS_9StringRefEPNS_4TypeE>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl6OptionD2Ev:

0000000000000000 <_ZN4llvm2cl6OptionD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x19, #96]
  1c:	ldr	x9, [x9]
  20:	cmp	x0, x8
  24:	add	x9, x9, #0x10
  28:	str	x9, [x19]
  2c:	b.eq	34 <_ZN4llvm2cl6OptionD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x8, [x19, #88]
  38:	ldr	x0, [x19, #64]
  3c:	add	x9, x19, #0x50
  40:	add	x8, x8, #0x1
  44:	cmp	x0, x9
  48:	str	x8, [x19, #88]
  4c:	b.eq	5c <_ZN4llvm2cl6OptionD2Ev+0x5c>  // b.none
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <free>
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter4EmitEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter4EmitEjj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w2, #0x1
  14:	cmp	w8, #0x1f
  18:	b.hi	a4 <_ZN4llvm15BitstreamWriter4EmitEjj+0xa4>  // b.pmore
  1c:	neg	w8, w2
  20:	mov	w9, #0xffffffff            	// #-1
  24:	lsr	w8, w9, w8
  28:	mov	w20, w2
  2c:	mov	w21, w1
  30:	bics	wzr, w1, w8
  34:	b.ne	c4 <_ZN4llvm15BitstreamWriter4EmitEjj+0xc4>  // b.any
  38:	ldp	w8, w9, [x0, #8]
  3c:	mov	x19, x0
  40:	lsl	w10, w21, w8
  44:	add	w8, w8, w20
  48:	orr	w9, w9, w10
  4c:	cmp	w8, #0x20
  50:	str	w9, [x0, #12]
  54:	b.cc	90 <_ZN4llvm15BitstreamWriter4EmitEjj+0x90>  // b.lo, b.ul, b.last
  58:	str	w9, [x29, #28]
  5c:	ldr	x0, [x19]
  60:	add	x8, x29, #0x1c
  64:	add	x2, x8, #0x4
  68:	add	x1, x29, #0x1c
  6c:	bl	0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  70:	ldr	w8, [x19, #8]
  74:	neg	w9, w8
  78:	cmp	w8, #0x0
  7c:	add	w8, w8, w20
  80:	lsr	w9, w21, w9
  84:	csel	w9, wzr, w9, eq  // eq = none
  88:	and	w8, w8, #0x1f
  8c:	str	w9, [x19, #12]
  90:	str	w8, [x19, #8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
  a4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  a8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  ac:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x78                  	// #120
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  c8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  cc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x79                  	// #121
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x20, x2, x1
  18:	mov	x22, x2
  1c:	mov	x21, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x20, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x44>  // b.plast
  30:	add	x2, x20, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x1                   	// #1
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cmp	x21, x22
  48:	b.eq	64 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x64>  // b.none
  4c:	ldr	x8, [x19]
  50:	ldr	w9, [x19, #8]
  54:	mov	x1, x21
  58:	mov	x2, x20
  5c:	add	x0, x8, x9
  60:	bl	0 <memcpy>
  64:	ldp	w8, w9, [x19, #8]
  68:	add	x8, x20, x8
  6c:	cmp	x8, x9
  70:	b.hi	88 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x88>  // b.pmore
  74:	str	w8, [x19, #8]
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldp	x22, x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  8c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  90:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x43                  	// #67
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter7EmitVBREjj:

0000000000000000 <_ZN4llvm15BitstreamWriter7EmitVBREjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cmp	w2, #0x21
  18:	b.cs	80 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x80>  // b.hs, b.nlast
  1c:	sub	w22, w2, #0x1
  20:	mov	w8, #0x1                   	// #1
  24:	lsl	w23, w8, w22
  28:	mov	w19, w2
  2c:	mov	w20, w1
  30:	mov	x21, x0
  34:	cmp	w23, w1
  38:	b.hi	60 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x60>  // b.pmore
  3c:	sub	w24, w23, #0x1
  40:	and	w8, w20, w24
  44:	orr	w1, w8, w23
  48:	mov	x0, x21
  4c:	mov	w2, w19
  50:	bl	0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  54:	lsr	w20, w20, w22
  58:	cmp	w20, w23
  5c:	b.cs	40 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x40>  // b.hs, b.nlast
  60:	mov	x0, x21
  64:	mov	w1, w20
  68:	mov	w2, w19
  6c:	ldp	x20, x19, [sp, #48]
  70:	ldp	x22, x21, [sp, #32]
  74:	ldp	x24, x23, [sp, #16]
  78:	ldp	x29, x30, [sp], #64
  7c:	b	0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  80:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  84:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  88:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x93                  	// #147
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter11FlushToWordEv:

0000000000000000 <_ZN4llvm15BitstreamWriter11FlushToWordEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	cbz	w8, 38 <_ZN4llvm15BitstreamWriter11FlushToWordEv+0x38>
  14:	ldr	w8, [x0, #12]
  18:	mov	x19, x0
  1c:	add	x1, x29, #0x1c
  20:	str	w8, [x29, #28]
  24:	ldr	x0, [x0]
  28:	add	x8, x29, #0x1c
  2c:	add	x2, x8, #0x4
  30:	bl	0 <_ZN4llvm15BitstreamWriter11FlushToWordEv>
  34:	str	xzr, [x19, #8]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12emplace_backIJRjRmEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12emplace_backIJRjRmEEEvDpOT_>:
   0:	ldp	x8, x9, [x0, #8]
   4:	mov	x3, x2
   8:	mov	x2, x1
   c:	cmp	x8, x9
  10:	b.eq	38 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12emplace_backIJRjRmEEEvDpOT_+0x38>  // b.none
  14:	ldr	w9, [x2]
  18:	ldr	x10, [x3]
  1c:	stp	xzr, xzr, [x8, #24]
  20:	str	w9, [x8]
  24:	stp	x10, xzr, [x8, #8]
  28:	ldr	x8, [x0, #8]
  2c:	add	x8, x8, #0x28
  30:	str	x8, [x0, #8]
  34:	ret
  38:	mov	x1, x8
  3c:	b	0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12emplace_backIJRjRmEEEvDpOT_>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x23, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x24, x3
  30:	mov	x19, x0
  34:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  38:	ldp	x21, x26, [x19]
  3c:	mov	x20, x0
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  4c:	ldr	w8, [x25]
  50:	ldr	x9, [x24]
  54:	subs	x10, x23, x21
  58:	mov	x22, x0
  5c:	add	x10, x0, x10
  60:	mov	x25, x0
  64:	str	w8, [x10]
  68:	stp	x9, xzr, [x10, #8]
  6c:	stp	xzr, xzr, [x10, #24]
  70:	b.eq	b4 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb4>  // b.none
  74:	mov	x25, x22
  78:	mov	x24, x21
  7c:	ldr	q0, [x24]
  80:	str	q0, [x25]
  84:	ldr	q0, [x24, #16]!
  88:	str	q0, [x25, #16]
  8c:	ldr	x8, [x24, #16]
  90:	mov	x0, x24
  94:	str	x8, [x25, #32]
  98:	stp	xzr, xzr, [x24]
  9c:	str	xzr, [x24, #16]
  a0:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  a4:	add	x24, x24, #0x18
  a8:	cmp	x24, x23
  ac:	add	x25, x25, #0x28
  b0:	b.ne	7c <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>  // b.any
  b4:	cmp	x26, x23
  b8:	add	x24, x25, #0x28
  bc:	b.eq	f8 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf8>  // b.none
  c0:	ldr	q0, [x23]
  c4:	str	q0, [x24]
  c8:	ldr	q0, [x23, #16]!
  cc:	str	q0, [x24, #16]
  d0:	ldr	x8, [x23, #16]
  d4:	mov	x0, x23
  d8:	str	x8, [x24, #32]
  dc:	stp	xzr, xzr, [x23]
  e0:	str	xzr, [x23, #16]
  e4:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  e8:	add	x23, x23, #0x18
  ec:	cmp	x23, x26
  f0:	add	x24, x24, #0x28
  f4:	b.ne	c0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc0>  // b.any
  f8:	cbz	x21, 104 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  fc:	mov	x0, x21
 100:	bl	0 <_ZdlPv>
 104:	mov	w8, #0x28                  	// #40
 108:	madd	x8, x20, x8, x22
 10c:	stp	x22, x24, [x19]
 110:	str	x8, [x19, #16]
 114:	ldp	x20, x19, [sp, #64]
 118:	ldp	x22, x21, [sp, #48]
 11c:	ldp	x24, x23, [sp, #32]
 120:	ldp	x26, x25, [sp, #16]
 124:	ldp	x29, x30, [sp], #80
 128:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  10:	movk	x8, #0x333, lsl #48
  14:	sub	x9, x9, x10
  18:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  1c:	asr	x9, x9, #3
  20:	movk	x10, #0xcccd
  24:	mul	x9, x9, x10
  28:	sub	x10, x8, x9
  2c:	cmp	x10, x1
  30:	b.cc	60 <_ZNKSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE12_M_check_lenEmPKc+0x60>  // b.lo, b.ul, b.last
  34:	cmp	x9, x1
  38:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  3c:	adds	x9, x10, x9
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x9, x8
  48:	cset	w11, hi  // hi = pmore
  4c:	orr	w10, w10, w11
  50:	cmp	w10, #0x0
  54:	csel	x0, x8, x9, ne  // ne = any
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x0, x2
  64:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm15BitstreamWriter5BlockESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm15BitstreamWriter5BlockESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 24 <_ZNSt12_Vector_baseIN4llvm15BitstreamWriter5BlockESaIS2_EE11_M_allocateEm+0x24>
   4:	mov	x8, #0x3333333333333333    	// #3689348814741910323
   8:	movk	x8, #0x3334
   c:	movk	x8, #0x333, lsl #48
  10:	cmp	x1, x8
  14:	b.cs	2c <_ZNSt12_Vector_baseIN4llvm15BitstreamWriter5BlockESaIS2_EE11_M_allocateEm+0x2c>  // b.hs, b.nlast
  18:	add	x8, x1, x1, lsl #2
  1c:	lsl	x0, x8, #3
  20:	b	0 <_Znwm>
  24:	mov	x0, xzr
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	3c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x3c>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19, #8]
  24:	cbz	x0, 2c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x2c>
  28:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev>
  2c:	add	x19, x19, #0x10
  30:	cmp	x21, x19
  34:	b.ne	20 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x20>  // b.any
  38:	ldr	x19, [x20]
  3c:	cbz	x19, 54 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x54>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cmp	x2, x3
  1c:	b.eq	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x328>  // b.none
  20:	ldp	x23, x8, [x0, #8]
  24:	sub	x24, x3, x2
  28:	mov	x19, x1
  2c:	asr	x1, x24, #4
  30:	sub	x8, x8, x23
  34:	mov	x22, x3
  38:	mov	x20, x2
  3c:	mov	x21, x0
  40:	cmp	x1, x8, asr #4
  44:	b.ls	174 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x174>  // b.plast
  48:	adrp	x2, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
  4c:	add	x2, x2, #0x0
  50:	mov	x0, x21
  54:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
  58:	mov	x23, x0
  5c:	mov	x0, x21
  60:	mov	x1, x23
  64:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
  68:	ldr	x8, [x21]
  6c:	mov	x24, x0
  70:	mov	x25, x0
  74:	cmp	x8, x19
  78:	b.eq	9c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x9c>  // b.none
  7c:	mov	x25, x24
  80:	str	xzr, [x25, #8]
  84:	ldr	q0, [x8]
  88:	str	xzr, [x8, #8]
  8c:	str	q0, [x25], #16
  90:	str	xzr, [x8], #16
  94:	cmp	x8, x19
  98:	b.ne	80 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x80>  // b.any
  9c:	adrp	x8, 0 <__pthread_key_create>
  a0:	ldr	x8, [x8]
  a4:	ldr	x9, [x20]
  a8:	str	x9, [x25]
  ac:	ldr	x9, [x20, #8]
  b0:	str	x9, [x25, #8]
  b4:	cbz	x9, e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xe0>
  b8:	add	x9, x9, #0x8
  bc:	cbz	x8, d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xd4>
  c0:	ldaxr	w10, [x9]
  c4:	add	w10, w10, #0x1
  c8:	stlxr	w11, w10, [x9]
  cc:	cbnz	w11, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xc0>
  d0:	b	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xe0>
  d4:	ldr	w10, [x9]
  d8:	add	w10, w10, #0x1
  dc:	str	w10, [x9]
  e0:	add	x20, x20, #0x10
  e4:	cmp	x20, x22
  e8:	add	x25, x25, #0x10
  ec:	b.ne	a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xa4>  // b.any
  f0:	ldr	x20, [x21, #8]
  f4:	cmp	x20, x19
  f8:	b.eq	130 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x130>  // b.none
  fc:	mov	x8, xzr
 100:	add	x9, x25, x8
 104:	add	x10, x19, x8
 108:	str	xzr, [x9, #8]
 10c:	ldr	q0, [x10]
 110:	add	x11, x10, #0x10
 114:	cmp	x11, x20
 118:	add	x8, x8, #0x10
 11c:	str	xzr, [x10, #8]
 120:	str	q0, [x9]
 124:	str	xzr, [x10]
 128:	b.ne	100 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x100>  // b.any
 12c:	add	x25, x25, x8
 130:	ldr	x19, [x21]
 134:	cmp	x19, x20
 138:	b.eq	158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x158>  // b.none
 13c:	ldr	x0, [x19, #8]
 140:	cbz	x0, 148 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x148>
 144:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 148:	add	x19, x19, #0x10
 14c:	cmp	x20, x19
 150:	b.ne	13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x13c>  // b.any
 154:	ldr	x20, [x21]
 158:	cbz	x20, 164 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x164>
 15c:	mov	x0, x20
 160:	bl	0 <_ZdlPv>
 164:	add	x8, x24, x23, lsl #4
 168:	stp	x24, x25, [x21]
 16c:	str	x8, [x21, #16]
 170:	b	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x328>
 174:	sub	x8, x23, x19
 178:	cmp	x1, x8, asr #4
 17c:	b.cs	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x238>  // b.hs, b.nlast
 180:	sub	x8, x23, x1, lsl #4
 184:	cbz	x24, 1b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1b8>
 188:	mov	x9, xzr
 18c:	neg	x10, x1, lsl #4
 190:	add	x12, x23, x9
 194:	add	x11, x8, x9
 198:	str	xzr, [x12, #8]
 19c:	ldr	q0, [x11]
 1a0:	add	x9, x9, #0x10
 1a4:	cmn	x10, x9
 1a8:	str	xzr, [x11, #8]
 1ac:	str	q0, [x12]
 1b0:	str	xzr, [x11]
 1b4:	b.ne	190 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x190>  // b.any
 1b8:	sub	x8, x8, x19
 1bc:	add	x9, x23, x1, lsl #4
 1c0:	cmp	x8, #0x1
 1c4:	str	x9, [x21, #8]
 1c8:	b.lt	204 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x204>  // b.tstop
 1cc:	lsr	x8, x8, #4
 1d0:	add	x21, x8, #0x1
 1d4:	neg	x22, x1, lsl #4
 1d8:	add	x8, x23, x22
 1dc:	ldp	x9, x10, [x8, #-16]
 1e0:	stp	xzr, xzr, [x8, #-16]
 1e4:	str	x9, [x23, #-16]!
 1e8:	ldr	x0, [x23, #8]
 1ec:	str	x10, [x23, #8]
 1f0:	cbz	x0, 1f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1f8>
 1f4:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 1f8:	sub	x21, x21, #0x1
 1fc:	cmp	x21, #0x1
 200:	b.gt	1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d8>
 204:	cmp	x24, #0x1
 208:	b.lt	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x328>  // b.tstop
 20c:	lsr	x8, x24, #4
 210:	add	x21, x8, #0x1
 214:	add	x1, x20, #0x8
 218:	ldr	x8, [x20], #16
 21c:	add	x0, x19, #0x8
 220:	str	x8, [x19], #16
 224:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 228:	sub	x21, x21, #0x1
 22c:	cmp	x21, #0x1
 230:	b.gt	214 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x214>
 234:	b	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x328>
 238:	asr	x9, x8, #4
 23c:	add	x8, x20, x9, lsl #4
 240:	cmp	x8, x22
 244:	b.eq	2ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2ac>  // b.none
 248:	adrp	x10, 0 <__pthread_key_create>
 24c:	ldr	x10, [x10]
 250:	mov	x11, x23
 254:	mov	x12, x8
 258:	ldr	x13, [x12]
 25c:	str	x13, [x11]
 260:	ldr	x13, [x12, #8]
 264:	str	x13, [x11, #8]
 268:	cbz	x13, 294 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x294>
 26c:	add	x13, x13, #0x8
 270:	cbz	x10, 288 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x288>
 274:	ldaxr	w14, [x13]
 278:	add	w14, w14, #0x1
 27c:	stlxr	w15, w14, [x13]
 280:	cbnz	w15, 274 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x274>
 284:	b	294 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x294>
 288:	ldr	w14, [x13]
 28c:	add	w14, w14, #0x1
 290:	str	w14, [x13]
 294:	add	x12, x12, #0x10
 298:	cmp	x12, x22
 29c:	add	x11, x11, #0x10
 2a0:	b.ne	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x258>  // b.any
 2a4:	ldr	x10, [x21, #8]
 2a8:	b	2b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2b0>
 2ac:	mov	x10, x23
 2b0:	sub	x9, x1, x9
 2b4:	add	x9, x10, x9, lsl #4
 2b8:	cmp	x23, x19
 2bc:	str	x9, [x21, #8]
 2c0:	b.eq	2ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2ec>  // b.none
 2c4:	add	x9, x9, #0x8
 2c8:	mov	x11, x19
 2cc:	str	xzr, [x9]
 2d0:	ldr	q0, [x11]
 2d4:	str	xzr, [x11, #8]
 2d8:	stur	q0, [x9, #-8]
 2dc:	str	xzr, [x11], #16
 2e0:	cmp	x11, x23
 2e4:	add	x9, x9, #0x10
 2e8:	b.ne	2cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2cc>  // b.any
 2ec:	sub	x8, x8, x20
 2f0:	add	x9, x10, x1, lsl #4
 2f4:	cmp	x8, #0x1
 2f8:	str	x9, [x21, #8]
 2fc:	b.lt	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x328>  // b.tstop
 300:	lsr	x8, x8, #4
 304:	add	x21, x8, #0x1
 308:	add	x1, x20, #0x8
 30c:	ldr	x8, [x20], #16
 310:	add	x0, x19, #0x8
 314:	str	x8, [x19], #16
 318:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 31c:	sub	x21, x21, #0x1
 320:	cmp	x21, #0x1
 324:	b.gt	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x308>
 328:	ldp	x20, x19, [sp, #64]
 32c:	ldp	x22, x21, [sp, #48]
 330:	ldp	x24, x23, [sp, #32]
 334:	ldr	x25, [sp, #16]
 338:	ldp	x29, x30, [sp], #80
 33c:	ret

Disassembly of section .text._ZNKSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  14:	sub	x10, x8, x9, asr #4
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #4
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #59
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #59
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #4
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv:

0000000000000000 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x20, 0 <__pthread_key_create>
  14:	ldr	x20, [x20]
  18:	mov	x19, x0
  1c:	add	x8, x0, #0x8
  20:	cbz	x20, 38 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x38>
  24:	ldaxr	w9, [x8]
  28:	sub	w10, w9, #0x1
  2c:	stlxr	w11, w10, [x8]
  30:	cbnz	w11, 24 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x24>
  34:	b	44 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x44>
  38:	ldr	w9, [x8]
  3c:	sub	w10, w9, #0x1
  40:	str	w10, [x8]
  44:	cmp	w9, #0x1
  48:	b.ne	a8 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0xa8>  // b.any
  4c:	mov	x21, x19
  50:	ldr	x8, [x21], #12
  54:	mov	x0, x19
  58:	ldr	x8, [x8, #16]
  5c:	blr	x8
  60:	cbz	x20, 78 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x78>
  64:	ldaxr	w8, [x21]
  68:	sub	w9, w8, #0x1
  6c:	stlxr	w10, w9, [x21]
  70:	cbnz	w10, 64 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x64>
  74:	b	84 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x84>
  78:	ldr	w8, [x21]
  7c:	sub	w9, w8, #0x1
  80:	str	w9, [x21]
  84:	cmp	w8, #0x1
  88:	b.ne	a8 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0xa8>  // b.any
  8c:	ldr	x8, [x19]
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldr	x1, [x8, #24]
  a0:	ldp	x29, x30, [sp], #48
  a4:	br	x1
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_:

0000000000000000 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x20, [x1]
  14:	ldr	x0, [x0]
  18:	cmp	x20, x0
  1c:	b.eq	54 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x54>  // b.none
  20:	cbz	x20, 48 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x48>
  24:	adrp	x9, 0 <__pthread_key_create>
  28:	ldr	x9, [x9]
  2c:	add	x8, x20, #0x8
  30:	cbz	x9, 64 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x64>
  34:	ldaxr	w9, [x8]
  38:	add	w9, w9, #0x1
  3c:	stlxr	w10, w9, [x8]
  40:	cbnz	w10, 34 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x34>
  44:	ldr	x0, [x19]
  48:	cbz	x0, 50 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x50>
  4c:	bl	0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_>
  50:	str	x20, [x19]
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	ldr	w9, [x8]
  68:	add	w9, w9, #0x1
  6c:	str	w9, [x8]
  70:	cbnz	x0, 4c <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x4c>
  74:	b	50 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x50>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x10                  	// #16
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE:

0000000000000000 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w2, [x0, #16]
  1c:	mov	x20, x1
  20:	mov	w1, #0x2                   	// #2
  24:	mov	x19, x0
  28:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  2c:	ldr	w1, [x20, #8]
  30:	mov	w2, #0x5                   	// #5
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  3c:	ldr	w8, [x20, #8]
  40:	cbz	w8, f8 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xf8>
  44:	mov	x22, xzr
  48:	mov	x23, xzr
  4c:	sub	x24, x8, #0x1
  50:	ldr	x25, [x20]
  54:	mov	w2, #0x1                   	// #1
  58:	mov	x0, x19
  5c:	add	x21, x25, x22
  60:	ldrb	w8, [x21, #8]
  64:	and	w1, w8, #0x1
  68:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  6c:	ldrb	w8, [x21, #8]
  70:	tbnz	w8, #0, ac <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xac>
  74:	mov	x0, x21
  78:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  7c:	mov	w1, w0
  80:	mov	w2, #0x3                   	// #3
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  94:	tbz	w0, #0, bc <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xbc>
  98:	mov	x0, x21
  9c:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  a0:	mov	x1, x0
  a4:	mov	w2, #0x5                   	// #5
  a8:	b	b4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xb4>
  ac:	ldr	x1, [x25, x22]
  b0:	mov	w2, #0x8                   	// #8
  b4:	mov	x0, x19
  b8:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  bc:	cmp	x24, x23
  c0:	b.eq	f8 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xf8>  // b.none
  c4:	ldr	w8, [x20, #8]
  c8:	add	x23, x23, #0x1
  cc:	add	x22, x22, #0x10
  d0:	cmp	x23, x8
  d4:	b.cc	50 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x50>  // b.lo, b.ul, b.last
  d8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  dc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  e0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x99                  	// #153
  f4:	bl	0 <__assert_fail>
  f8:	ldp	x20, x19, [sp, #64]
  fc:	ldp	x22, x21, [sp, #48]
 100:	ldp	x24, x23, [sp, #32]
 104:	ldr	x25, [sp, #16]
 108:	ldp	x29, x30, [sp], #80
 10c:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter9EmitVBR64Emj:

0000000000000000 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cmp	w2, #0x21
  18:	b.cs	ac <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xac>  // b.hs, b.nlast
  1c:	mov	w19, w2
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	lsr	x8, x1, #32
  2c:	cbnz	x8, 50 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x50>
  30:	mov	x0, x21
  34:	mov	w1, w20
  38:	mov	w2, w19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	ldp	x29, x30, [sp], #64
  4c:	b	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  50:	sub	w8, w19, #0x1
  54:	mov	w9, #0x1                   	// #1
  58:	lsl	w22, w9, w8
  5c:	cmp	x22, x20
  60:	b.hi	8c <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x8c>  // b.pmore
  64:	sub	w23, w22, #0x1
  68:	mov	w24, w8
  6c:	and	w8, w20, w23
  70:	orr	w1, w8, w22
  74:	mov	x0, x21
  78:	mov	w2, w19
  7c:	bl	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  80:	lsr	x20, x20, x24
  84:	cmp	x20, x22
  88:	b.cs	6c <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x6c>  // b.hs, b.nlast
  8c:	mov	x0, x21
  90:	mov	w1, w20
  94:	mov	w2, w19
  98:	ldp	x20, x19, [sp, #48]
  9c:	ldp	x22, x21, [sp, #32]
  a0:	ldp	x24, x23, [sp, #16]
  a4:	ldp	x29, x30, [sp], #64
  a8:	b	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  ac:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  b0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  b4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0xa0                  	// #160
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15BitCodeAbbrevOp11getEncodingEv:

0000000000000000 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #0, 1c <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv+0x1c>
  10:	ubfx	w0, w8, #1, #3
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	adrp	x0, 0 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>
  20:	adrp	x1, 0 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>
  24:	adrp	x3, 0 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>
  28:	add	x0, x0, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x3, x3, #0x0
  34:	mov	w2, #0x77                  	// #119
  38:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv:

0000000000000000 <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv>
   c:	sub	w8, w0, #0x1
  10:	cmp	w8, #0x5
  14:	b.cs	2c <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv+0x2c>  // b.hs, b.nlast
  18:	mov	w9, #0x3                   	// #3
  1c:	lsr	w8, w9, w8
  20:	and	w0, w8, #0x1
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv:

0000000000000000 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	tbnz	w8, #0, 30 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv+0x30>
  14:	mov	x19, x0
  18:	bl	0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  1c:	tbz	w0, #0, 30 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv+0x30>
  20:	ldr	x0, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  34:	adrp	x1, 0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  38:	adrp	x3, 0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x79                  	// #121
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	ldp	x8, x9, [x0, #8]
   4:	mov	x2, x1
   8:	cmp	x8, x9
   c:	b.eq	30 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x30>  // b.none
  10:	str	xzr, [x8, #8]
  14:	ldr	q0, [x2]
  18:	add	x9, x8, #0x10
  1c:	str	xzr, [x2, #8]
  20:	str	q0, [x8]
  24:	str	xzr, [x2]
  28:	str	x9, [x0, #8]
  2c:	ret
  30:	mov	x1, x8
  34:	b	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x23, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x24, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x21, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x26, x24, x21
  48:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  4c:	add	x8, x0, x26
  50:	str	xzr, [x8, #8]
  54:	ldr	q0, [x23]
  58:	mov	x22, x0
  5c:	mov	x0, x21
  60:	mov	x1, x24
  64:	mov	x2, x22
  68:	mov	x3, x19
  6c:	str	xzr, [x23, #8]
  70:	str	q0, [x8]
  74:	str	xzr, [x23]
  78:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  7c:	add	x2, x0, #0x10
  80:	mov	x0, x24
  84:	mov	x1, x25
  88:	mov	x3, x19
  8c:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  90:	mov	x23, x0
  94:	cbz	x21, a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa0>
  98:	mov	x0, x21
  9c:	bl	0 <_ZdlPv>
  a0:	add	x8, x22, x20, lsl #4
  a4:	stp	x22, x23, [x19]
  a8:	str	x8, [x19, #16]
  ac:	ldp	x20, x19, [sp, #64]
  b0:	ldp	x22, x21, [sp, #48]
  b4:	ldp	x24, x23, [sp, #32]
  b8:	ldp	x26, x25, [sp, #16]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	mov	x19, x2
  18:	b.eq	54 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE+0x54>  // b.none
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	str	xzr, [x19, #8]
  28:	ldr	q0, [x21]
  2c:	str	xzr, [x21, #8]
  30:	str	q0, [x19]
  34:	ldr	x0, [x21, #8]
  38:	str	xzr, [x21]
  3c:	cbz	x0, 44 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE+0x44>
  40:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE>
  44:	add	x21, x21, #0x10
  48:	cmp	x21, x20
  4c:	add	x19, x19, #0x10
  50:	b.ne	24 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE+0x24>  // b.any
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter13BackpatchWordEmj:

0000000000000000 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ubfx	x9, x1, #3, #32
  10:	ldr	w10, [x8, #8]
  14:	cmp	x9, x10
  18:	b.cs	c0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0xc0>  // b.hs, b.nlast
  1c:	ldr	x8, [x8]
  20:	ands	x10, x1, #0x7
  24:	add	x8, x8, x9
  28:	ldr	w9, [x8]
  2c:	b.eq	8c <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0x8c>  // b.none
  30:	ldr	w11, [x8, #4]
  34:	neg	w13, w10
  38:	mov	w14, #0xffffffff            	// #-1
  3c:	lsr	w12, w9, w10
  40:	lsl	w14, w14, w13
  44:	bic	w12, w12, w14
  48:	lsl	w11, w11, w13
  4c:	orr	w11, w11, w12
  50:	cbnz	w11, 94 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0x94>
  54:	cbz	x10, b4 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0xb4>
  58:	ldr	w11, [x8, #4]
  5c:	mov	w12, #0xffffffff            	// #-1
  60:	neg	w14, w10
  64:	lsl	w13, w2, w10
  68:	lsl	w10, w12, w10
  6c:	lsr	w12, w2, w14
  70:	bic	w9, w9, w10
  74:	bic	w12, w12, w10
  78:	and	w10, w11, w10
  7c:	orr	w9, w9, w13
  80:	orr	w10, w10, w12
  84:	stp	w9, w10, [x8]
  88:	b	b8 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0xb8>
  8c:	mov	w11, w9
  90:	cbz	w11, 54 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0x54>
  94:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  98:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  9c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x6d                  	// #109
  b0:	bl	0 <__assert_fail>
  b4:	str	w2, [x8]
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x95                  	// #149
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x1, x0
  1c:	b.eq	1b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1b4>  // b.none
  20:	ldp	x21, x3, [x1]
  24:	ldr	x8, [x19, #16]
  28:	ldr	x23, [x19]
  2c:	mov	x22, x1
  30:	sub	x9, x3, x21
  34:	asr	x20, x9, #4
  38:	sub	x8, x8, x23
  3c:	cmp	x20, x8, asr #4
  40:	b.ls	9c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x9c>  // b.plast
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	mov	x2, x21
  50:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>
  54:	ldp	x22, x23, [x19]
  58:	mov	x21, x0
  5c:	cmp	x22, x23
  60:	b.eq	80 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x80>  // b.none
  64:	ldr	x0, [x22, #8]
  68:	cbz	x0, 70 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x70>
  6c:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>
  70:	add	x22, x22, #0x10
  74:	cmp	x23, x22
  78:	b.ne	64 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x64>  // b.any
  7c:	ldr	x22, [x19]
  80:	cbz	x22, 8c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x8c>
  84:	mov	x0, x22
  88:	bl	0 <_ZdlPv>
  8c:	add	x8, x21, x20, lsl #4
  90:	str	x21, [x19]
  94:	str	x8, [x19, #16]
  98:	b	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
  9c:	ldr	x24, [x19, #8]
  a0:	sub	x10, x24, x23
  a4:	asr	x8, x10, #4
  a8:	cmp	x8, x20
  ac:	b.cs	154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>  // b.hs, b.nlast
  b0:	cmp	x10, #0x1
  b4:	b.lt	f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xf0>  // b.tstop
  b8:	lsr	x8, x10, #4
  bc:	add	x24, x8, #0x1
  c0:	add	x1, x21, #0x8
  c4:	ldr	x8, [x21], #16
  c8:	add	x0, x23, #0x8
  cc:	str	x8, [x23], #16
  d0:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>
  d4:	sub	x24, x24, #0x1
  d8:	cmp	x24, #0x1
  dc:	b.gt	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc0>
  e0:	ldp	x8, x24, [x19]
  e4:	ldp	x21, x3, [x22]
  e8:	sub	x8, x24, x8
  ec:	asr	x8, x8, #4
  f0:	add	x8, x21, x8, lsl #4
  f4:	cmp	x8, x3
  f8:	b.eq	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.none
  fc:	adrp	x9, 0 <__pthread_key_create>
 100:	ldr	x9, [x9]
 104:	ldr	x10, [x8]
 108:	str	x10, [x24]
 10c:	ldr	x10, [x8, #8]
 110:	str	x10, [x24, #8]
 114:	cbz	x10, 140 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x140>
 118:	add	x10, x10, #0x8
 11c:	cbz	x9, 134 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x134>
 120:	ldaxr	w11, [x10]
 124:	add	w11, w11, #0x1
 128:	stlxr	w12, w11, [x10]
 12c:	cbnz	w12, 120 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x120>
 130:	b	140 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x140>
 134:	ldr	w11, [x10]
 138:	add	w11, w11, #0x1
 13c:	str	w11, [x10]
 140:	add	x8, x8, #0x10
 144:	cmp	x8, x3
 148:	add	x24, x24, #0x10
 14c:	b.ne	104 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x104>  // b.any
 150:	b	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 154:	cmp	x9, #0x1
 158:	b.lt	188 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x188>  // b.tstop
 15c:	lsr	x8, x9, #4
 160:	add	x22, x8, #0x1
 164:	add	x1, x21, #0x8
 168:	ldr	x8, [x21], #16
 16c:	add	x0, x23, #0x8
 170:	str	x8, [x23], #16
 174:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>
 178:	sub	x22, x22, #0x1
 17c:	cmp	x22, #0x1
 180:	b.gt	164 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x164>
 184:	ldr	x24, [x19, #8]
 188:	cmp	x23, x24
 18c:	b.eq	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.none
 190:	ldr	x0, [x23, #8]
 194:	cbz	x0, 19c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x19c>
 198:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>
 19c:	add	x23, x23, #0x10
 1a0:	cmp	x24, x23
 1a4:	b.ne	190 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x190>  // b.any
 1a8:	ldr	x8, [x19]
 1ac:	add	x8, x8, x20, lsl #4
 1b0:	str	x8, [x19, #8]
 1b4:	mov	x0, x19
 1b8:	ldp	x20, x19, [sp, #48]
 1bc:	ldp	x22, x21, [sp, #32]
 1c0:	ldp	x24, x23, [sp, #16]
 1c4:	ldp	x29, x30, [sp], #64
 1c8:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x3
  10:	mov	x20, x2
  14:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_>
  18:	cmp	x20, x19
  1c:	b.eq	78 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_+0x78>  // b.none
  20:	adrp	x8, 0 <__pthread_key_create>
  24:	ldr	x8, [x8]
  28:	mov	x9, x0
  2c:	ldr	x10, [x20]
  30:	str	x10, [x9]
  34:	ldr	x10, [x20, #8]
  38:	str	x10, [x9, #8]
  3c:	cbz	x10, 68 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_+0x68>
  40:	add	x10, x10, #0x8
  44:	cbz	x8, 5c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_+0x5c>
  48:	ldaxr	w11, [x10]
  4c:	add	w11, w11, #0x1
  50:	stlxr	w12, w11, [x10]
  54:	cbnz	w12, 48 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_+0x48>
  58:	b	68 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_+0x68>
  5c:	ldr	w11, [x10]
  60:	add	w11, w11, #0x1
  64:	str	w11, [x10]
  68:	add	x20, x20, #0x10
  6c:	cmp	x20, x19
  70:	add	x9, x9, #0x10
  74:	b.ne	2c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_+0x2c>  // b.any
  78:	ldp	x20, x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #96]
   8:	add	x29, sp, #0x60
   c:	ldr	x8, [x0]
  10:	orr	x8, x8, #0x1
  14:	str	x8, [sp]
  18:	str	xzr, [x0]
  1c:	add	x8, sp, #0x8
  20:	mov	x0, sp
  24:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  28:	ldr	x8, [sp, #8]
  2c:	tst	x8, #0xfffffffffffffffe
  30:	and	x9, x8, #0xfffffffffffffffe
  34:	cset	w8, ne  // ne = any
  38:	orr	x8, x9, x8
  3c:	str	x8, [sp, #8]
  40:	cbnz	x9, 5c <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x5c>
  44:	cbnz	x8, cc <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xcc>
  48:	ldr	x8, [sp]
  4c:	cbnz	x8, d4 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xd4>
  50:	ldp	x29, x30, [sp, #96]
  54:	add	sp, sp, #0x70
  58:	ret
  5c:	sturb	wzr, [x29, #-16]
  60:	stp	xzr, xzr, [sp, #32]
  64:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  68:	ldr	x10, [x10]
  6c:	sub	x8, x29, #0x20
  70:	mov	w9, #0x1                   	// #1
  74:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  78:	add	x11, x8, #0x10
  7c:	str	w9, [sp, #48]
  80:	add	x9, x10, #0x10
  84:	add	x1, x1, #0x0
  88:	add	x0, sp, #0x10
  8c:	stp	x11, xzr, [x29, #-32]
  90:	stp	x9, xzr, [sp, #16]
  94:	str	x8, [sp, #56]
  98:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  9c:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a0:	add	x1, x1, #0x0
  a4:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a8:	add	x1, sp, #0x8
  ac:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b0:	add	x0, sp, #0x10
  b4:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b8:	ldr	x0, [x0]
  bc:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  c0:	add	x1, x1, #0x0
  c4:	mov	w2, #0x2c9                 	// #713
  c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  cc:	add	x0, sp, #0x8
  d0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d4:	mov	x0, sp
  d8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x8
  1c:	ldr	x8, [x0]
  20:	tst	x8, #0xfffffffffffffffe
  24:	and	x21, x8, #0xfffffffffffffffe
  28:	cset	w8, ne  // ne = any
  2c:	orr	x8, x21, x8
  30:	str	x8, [x0]
  34:	cbz	x21, 104 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x104>
  38:	str	xzr, [x0]
  3c:	ldr	x8, [x21]
  40:	mov	x20, x1
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x21
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 110 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x110>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x22, x8, [x21, #8]
  68:	cmp	x22, x8
  6c:	b.eq	140 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x140>  // b.none
  70:	sub	x23, x8, #0x8
  74:	mov	w8, #0x1                   	// #1
  78:	orr	x8, x8, #0x1
  7c:	stur	x8, [x29, #-8]
  80:	str	xzr, [x19]
  84:	ldr	x8, [x22]
  88:	str	xzr, [x22]
  8c:	add	x0, sp, #0x8
  90:	mov	x1, x20
  94:	str	x8, [sp, #8]
  98:	add	x8, sp, #0x10
  9c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  a0:	add	x8, x29, #0x18
  a4:	sub	x0, x29, #0x8
  a8:	add	x1, sp, #0x10
  ac:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  b0:	ldr	x8, [x19]
  b4:	cbnz	x8, 168 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x168>
  b8:	ldr	x8, [x29, #24]
  bc:	ldr	x9, [sp, #16]
  c0:	str	xzr, [x29, #24]
  c4:	orr	x8, x8, #0x1
  c8:	str	x8, [x19]
  cc:	cbnz	x9, 170 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>
  d0:	ldr	x0, [sp, #8]
  d4:	cbz	x0, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  d8:	ldr	x8, [x0]
  dc:	ldr	x8, [x8, #8]
  e0:	blr	x8
  e4:	ldur	x8, [x29, #-8]
  e8:	str	xzr, [sp, #8]
  ec:	cbnz	x8, 178 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x178>
  f0:	cmp	x23, x22
  f4:	b.eq	140 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x140>  // b.none
  f8:	ldr	x8, [x19]
  fc:	add	x22, x22, #0x8
 100:	b	78 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x78>
 104:	mov	w8, #0x1                   	// #1
 108:	str	x8, [x19]
 10c:	b	150 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>
 110:	mov	x0, sp
 114:	mov	x8, x19
 118:	mov	x1, x20
 11c:	str	x21, [sp]
 120:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 124:	ldr	x0, [sp]
 128:	cbz	x0, 138 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x138>
 12c:	ldr	x8, [x0]
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	str	xzr, [sp]
 13c:	b	150 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>
 140:	ldr	x8, [x21]
 144:	mov	x0, x21
 148:	ldr	x8, [x8, #8]
 14c:	blr	x8
 150:	ldp	x20, x19, [sp, #80]
 154:	ldp	x22, x21, [sp, #64]
 158:	ldr	x23, [sp, #48]
 15c:	ldp	x29, x30, [sp, #32]
 160:	add	sp, sp, #0x60
 164:	ret
 168:	mov	x0, x19
 16c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 170:	add	x0, sp, #0x10
 174:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 178:	sub	x0, x29, #0x8
 17c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	48 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x48>
  34:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  38:	add	x1, x1, #0x0
  3c:	mov	w2, #0x7                   	// #7
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x8
  1c:	ldr	x8, [x0]
  20:	mov	x21, x1
  24:	tst	x8, #0xfffffffffffffffe
  28:	and	x9, x8, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x9, x8
  34:	str	x8, [x0]
  38:	cbz	x9, 14c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x14c>
  3c:	ldr	x8, [x21]
  40:	mov	x20, x0
  44:	tst	x8, #0xfffffffffffffffe
  48:	and	x9, x8, #0xfffffffffffffffe
  4c:	cset	w8, ne  // ne = any
  50:	orr	x8, x9, x8
  54:	str	x8, [x21]
  58:	cbz	x9, 20c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x20c>
  5c:	ldr	x9, [x20]
  60:	ands	x0, x9, #0xfffffffffffffffe
  64:	b.eq	f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xf4>  // b.none
  68:	ldr	x8, [x0]
  6c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  70:	ldr	x8, [x8, #48]
  74:	ldr	x1, [x1]
  78:	blr	x8
  7c:	tbz	w0, #0, f0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xf0>
  80:	ldr	x8, [x21]
  84:	ldr	x9, [x20]
  88:	ands	x0, x8, #0xfffffffffffffffe
  8c:	and	x23, x9, #0xfffffffffffffffe
  90:	b.eq	1e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1e0>  // b.none
  94:	ldr	x8, [x0]
  98:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  9c:	ldr	x8, [x8, #48]
  a0:	ldr	x1, [x1]
  a4:	blr	x8
  a8:	ldr	x8, [x21]
  ac:	and	x22, x8, #0xfffffffffffffffe
  b0:	tbz	w0, #0, 1e4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1e4>
  b4:	str	xzr, [x21]
  b8:	ldp	x21, x24, [x22, #8]
  bc:	cmp	x21, x24
  c0:	b.eq	e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe0>  // b.none
  c4:	add	x23, x23, #0x8
  c8:	mov	x0, x23
  cc:	mov	x1, x21
  d0:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  d4:	add	x21, x21, #0x8
  d8:	cmp	x24, x21
  dc:	b.ne	c8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xc8>  // b.any
  e0:	cbz	x22, 20c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x20c>
  e4:	ldr	x8, [x22]
  e8:	mov	x0, x22
  ec:	b	204 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x204>
  f0:	ldr	x8, [x21]
  f4:	ands	x0, x8, #0xfffffffffffffffe
  f8:	b.eq	160 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x160>  // b.none
  fc:	ldr	x8, [x0]
 100:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 104:	ldr	x8, [x8, #48]
 108:	ldr	x1, [x1]
 10c:	blr	x8
 110:	tbz	w0, #0, 160 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x160>
 114:	ldr	x8, [x21]
 118:	sub	x2, x29, #0x8
 11c:	and	x0, x8, #0xfffffffffffffffe
 120:	ldr	x1, [x0, #8]!
 124:	ldr	x8, [x20]
 128:	and	x8, x8, #0xfffffffffffffffe
 12c:	stur	x8, [x29, #-8]
 130:	str	xzr, [x20]
 134:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 138:	ldur	x0, [x29, #-8]
 13c:	cbz	x0, 14c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x14c>
 140:	ldr	x8, [x0]
 144:	ldr	x8, [x8, #8]
 148:	blr	x8
 14c:	ldr	x8, [x21]
 150:	orr	x8, x8, #0x1
 154:	str	x8, [x19]
 158:	str	xzr, [x21]
 15c:	b	21c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x21c>
 160:	mov	w0, #0x20                  	// #32
 164:	bl	0 <_Znwm>
 168:	ldr	x8, [x20]
 16c:	add	x1, sp, #0x10
 170:	add	x2, sp, #0x8
 174:	mov	x22, x0
 178:	and	x8, x8, #0xfffffffffffffffe
 17c:	str	x8, [sp, #16]
 180:	str	xzr, [x20]
 184:	ldr	x8, [x21]
 188:	and	x8, x8, #0xfffffffffffffffe
 18c:	str	x8, [sp, #8]
 190:	str	xzr, [x21]
 194:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 198:	orr	x8, x22, #0x1
 19c:	sub	x0, x29, #0x8
 1a0:	stur	xzr, [x29, #-8]
 1a4:	str	x8, [x19]
 1a8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1ac:	ldr	x0, [sp, #8]
 1b0:	cbz	x0, 1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1b4:	ldr	x8, [x0]
 1b8:	ldr	x8, [x8, #8]
 1bc:	blr	x8
 1c0:	ldr	x0, [sp, #16]
 1c4:	str	xzr, [sp, #8]
 1c8:	cbz	x0, 1d8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d8>
 1cc:	ldr	x8, [x0]
 1d0:	ldr	x8, [x8, #8]
 1d4:	blr	x8
 1d8:	str	xzr, [sp, #16]
 1dc:	b	21c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x21c>
 1e0:	mov	x22, xzr
 1e4:	add	x0, x23, #0x8
 1e8:	sub	x1, x29, #0x8
 1ec:	stur	x22, [x29, #-8]
 1f0:	str	xzr, [x21]
 1f4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1f8:	ldur	x0, [x29, #-8]
 1fc:	cbz	x0, 20c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x20c>
 200:	ldr	x8, [x0]
 204:	ldr	x8, [x8, #8]
 208:	blr	x8
 20c:	ldr	x8, [x20]
 210:	orr	x8, x8, #0x1
 214:	str	x8, [x19]
 218:	str	xzr, [x20]
 21c:	ldp	x20, x19, [sp, #80]
 220:	ldp	x22, x21, [sp, #64]
 224:	ldp	x24, x23, [sp, #48]
 228:	ldp	x29, x30, [sp, #32]
 22c:	add	sp, sp, #0x60
 230:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x0, [x0]
  18:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  1c:	mov	x19, x8
  20:	ldr	x9, [x0]
  24:	ldr	x9, [x9, #48]
  28:	ldr	x1, [x1]
  2c:	blr	x9
  30:	ldr	x20, [x21]
  34:	str	xzr, [x21]
  38:	tbz	w0, #0, 80 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x80>
  3c:	ldr	x8, [x20]
  40:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  44:	mov	x0, x20
  48:	ldr	x8, [x8, #48]
  4c:	ldr	x1, [x1]
  50:	blr	x8
  54:	tbz	w0, #0, 98 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x98>
  58:	mov	w8, #0x1                   	// #1
  5c:	str	x8, [x19]
  60:	cbz	x20, 88 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x88>
  64:	ldr	x8, [x20]
  68:	mov	x0, x20
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldr	x1, [x8, #8]
  78:	ldp	x29, x30, [sp], #48
  7c:	br	x1
  80:	orr	x8, x20, #0x1
  84:	str	x8, [x19]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  9c:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x329                 	// #809
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	stp	xzr, xzr, [x0, #16]
  20:	mov	x19, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	ldr	x0, [x1]
  34:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  38:	mov	x21, x2
  3c:	ldr	x8, [x0]
  40:	ldr	x8, [x8, #48]
  44:	ldr	x1, [x1]
  48:	blr	x8
  4c:	tbnz	w0, #0, 90 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x90>
  50:	ldr	x0, [x21]
  54:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #48]
  60:	ldr	x1, [x1]
  64:	blr	x8
  68:	tbnz	w0, #0, 90 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x90>
  6c:	mov	x0, x20
  70:	mov	x1, x19
  74:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  78:	mov	x0, x20
  7c:	mov	x1, x21
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  90:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  94:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  98:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x182                 	// #386
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 38 <_ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev+0x38>
  18:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  1c:	ldr	x8, [x8]
  20:	mov	x0, x20
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0], #8
  2c:	bl	0 <_ZNSt10unique_ptrIN4llvm9ErrorListESt14default_deleteIS1_EED2Ev>
  30:	mov	x0, x20
  34:	bl	0 <_ZdlPv>
  38:	str	xzr, [x19]
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	ldp	x8, x9, [x0, #8]
   4:	mov	x2, x1
   8:	cmp	x8, x9
   c:	b.eq	2c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x2c>  // b.none
  10:	ldr	x9, [x2]
  14:	str	xzr, [x2]
  18:	str	x9, [x8]
  1c:	ldr	x8, [x0, #8]
  20:	add	x8, x8, #0x8
  24:	str	x8, [x0, #8]
  28:	ret
  2c:	mov	x1, x8
  30:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  48:	ldr	x8, [x24]
  4c:	mov	x23, x0
  50:	subs	x9, x21, x22
  54:	str	xzr, [x24]
  58:	mov	x24, x0
  5c:	str	x8, [x0, x9]
  60:	b.eq	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>  // b.none
  64:	mov	x24, x23
  68:	mov	x26, x22
  6c:	ldr	x8, [x26]
  70:	str	xzr, [x26]
  74:	str	x8, [x24]
  78:	ldr	x0, [x26]
  7c:	cbz	x0, 8c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x8c>
  80:	ldr	x8, [x0]
  84:	ldr	x8, [x8, #8]
  88:	blr	x8
  8c:	str	xzr, [x26], #8
  90:	cmp	x21, x26
  94:	add	x24, x24, #0x8
  98:	b.ne	6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x6c>  // b.any
  9c:	b	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>
  a0:	ldr	x8, [x21]
  a4:	str	xzr, [x21]
  a8:	str	x8, [x24]
  ac:	ldr	x0, [x21]
  b0:	cbz	x0, c0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc0>
  b4:	ldr	x8, [x0]
  b8:	ldr	x8, [x8, #8]
  bc:	blr	x8
  c0:	str	xzr, [x21], #8
  c4:	cmp	x25, x21
  c8:	add	x24, x24, #0x8
  cc:	b.ne	a0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa0>  // b.any
  d0:	cbz	x22, dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>
  d4:	mov	x0, x22
  d8:	bl	0 <_ZdlPv>
  dc:	add	x8, x23, x20, lsl #3
  e0:	stp	x23, x24, [x19]
  e4:	str	x8, [x19, #16]
  e8:	ldp	x20, x19, [sp, #64]
  ec:	ldp	x22, x21, [sp, #48]
  f0:	ldp	x24, x23, [sp, #32]
  f4:	ldp	x26, x25, [sp, #16]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret

Disassembly of section .text._ZNKSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x8, x9, [x0]
  10:	ldr	x10, [x0, #16]
  14:	mov	x19, x0
  18:	sub	x11, x1, x8
  1c:	cmp	x9, x10
  20:	asr	x20, x11, #3
  24:	b.eq	40 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x40>  // b.none
  28:	cmp	x9, x1
  2c:	b.eq	50 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x50>  // b.none
  30:	add	x1, x8, x20, lsl #3
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  3c:	b	68 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x68>
  40:	add	x1, x8, x20, lsl #3
  44:	mov	x0, x19
  48:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  4c:	b	68 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x68>
  50:	ldr	x8, [x2]
  54:	str	xzr, [x2]
  58:	str	x8, [x9]
  5c:	ldr	x8, [x19, #8]
  60:	add	x8, x8, #0x8
  64:	str	x8, [x19, #8]
  68:	ldr	x8, [x19]
  6c:	add	x0, x8, x20, lsl #3
  70:	ldp	x20, x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x1
  1c:	ldur	x9, [x8, #-8]
  20:	stp	xzr, x9, [x8, #-8]
  24:	ldr	x8, [x0, #8]
  28:	add	x10, x8, #0x8
  2c:	sub	x8, x8, #0x8
  30:	sub	x9, x8, x1
  34:	cmp	x9, #0x1
  38:	str	x10, [x0, #8]
  3c:	b.lt	7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0x7c>  // b.tstop
  40:	lsr	x9, x9, #3
  44:	add	x21, x9, #0x1
  48:	mov	x22, x8
  4c:	ldr	x9, [x22, #-8]!
  50:	str	xzr, [x22]
  54:	ldr	x0, [x8]
  58:	str	x9, [x8]
  5c:	cbz	x0, 6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0x6c>
  60:	ldr	x8, [x0]
  64:	ldr	x8, [x8, #8]
  68:	blr	x8
  6c:	sub	x21, x21, #0x1
  70:	cmp	x21, #0x1
  74:	mov	x8, x22
  78:	b.gt	4c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0x4c>
  7c:	ldr	x8, [x20]
  80:	str	xzr, [x20]
  84:	ldr	x0, [x19]
  88:	str	x8, [x19]
  8c:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_+0xa8>
  90:	ldr	x8, [x0]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	ldr	x1, [x8, #8]
  a0:	ldp	x29, x30, [sp], #48
  a4:	br	x1
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldp	x22, x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	44 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x44>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19]
  24:	cbz	x0, 34 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19], #8
  38:	cmp	x21, x19
  3c:	b.ne	20 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x20>  // b.any
  40:	ldr	x19, [x20]
  44:	cbz	x19, 5c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EED2Ev+0x5c>
  48:	mov	x0, x19
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZdlPv>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_:

0000000000000000 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	ldr	x10, [x0, #16]
  10:	add	x9, x0, #0x8
  14:	cbz	x10, 5c <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x5c>
  18:	ldr	x11, [x1]
  1c:	mov	x8, x9
  20:	ldr	x12, [x10, #32]
  24:	add	x13, x10, #0x18
  28:	add	x14, x10, #0x10
  2c:	cmp	x12, x11
  30:	csel	x8, x8, x10, cc  // cc = lo, ul, last
  34:	csel	x10, x13, x14, cc  // cc = lo, ul, last
  38:	ldr	x10, [x10]
  3c:	cbnz	x10, 20 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x20>
  40:	cmp	x8, x9
  44:	b.eq	60 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x60>  // b.none
  48:	ldr	x9, [x1]
  4c:	ldr	x10, [x8, #32]
  50:	cmp	x9, x10
  54:	b.cc	60 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x60>  // b.lo, b.ul, b.last
  58:	b	80 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x80>
  5c:	mov	x8, x9
  60:	adrp	x2, 0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>
  64:	str	x1, [sp, #8]
  68:	add	x2, x2, #0x0
  6c:	add	x3, sp, #0x8
  70:	mov	x4, sp
  74:	mov	x1, x8
  78:	bl	0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>
  7c:	mov	x8, x0
  80:	ldp	x29, x30, [sp, #16]
  84:	add	x0, x8, #0x28
  88:	add	sp, sp, #0x20
  8c:	ret

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	mov	w0, #0x30                  	// #48
  18:	mov	x20, x3
  1c:	mov	x21, x1
  20:	bl	0 <_Znwm>
  24:	ldr	x8, [x20]
  28:	mov	x2, x0
  2c:	mov	x20, x0
  30:	mov	x1, x21
  34:	ldr	x8, [x8]
  38:	str	x8, [x2, #32]!
  3c:	str	wzr, [x0, #40]
  40:	mov	x0, x19
  44:	bl	0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_>
  48:	mov	x21, x0
  4c:	cbz	x1, 70 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_+0x70>
  50:	mov	x2, x1
  54:	mov	x0, x19
  58:	mov	x1, x21
  5c:	mov	x3, x20
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	b	0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_>
  70:	mov	x0, x20
  74:	bl	0 <_ZdlPv>
  78:	mov	x0, x21
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	add	x8, x0, #0x8
  14:	mov	x21, x0
  18:	cmp	x8, x1
  1c:	mov	x20, x2
  20:	b.eq	6c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x6c>  // b.none
  24:	ldr	x22, [x20]
  28:	ldr	x8, [x1, #32]
  2c:	mov	x19, x1
  30:	cmp	x22, x8
  34:	b.cs	8c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x8c>  // b.hs, b.nlast
  38:	ldr	x1, [x21, #24]
  3c:	cmp	x1, x19
  40:	b.eq	f0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xf0>  // b.none
  44:	mov	x0, x19
  48:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  4c:	ldr	x8, [x0, #32]
  50:	cmp	x8, x22
  54:	b.cs	cc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xcc>  // b.hs, b.nlast
  58:	ldr	x8, [x0, #24]
  5c:	cmp	x8, #0x0
  60:	csel	x8, xzr, x19, eq  // eq = none
  64:	csel	x1, x0, x19, eq  // eq = none
  68:	b	c4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xc4>
  6c:	ldr	x8, [x21, #40]
  70:	cbz	x8, cc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xcc>
  74:	ldr	x1, [x21, #32]
  78:	ldr	x9, [x20]
  7c:	ldr	x8, [x1, #32]
  80:	cmp	x8, x9
  84:	b.cc	e0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xe0>  // b.lo, b.ul, b.last
  88:	b	cc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xcc>
  8c:	cmp	x8, x22
  90:	b.cs	e8 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xe8>  // b.hs, b.nlast
  94:	ldr	x1, [x21, #32]
  98:	cmp	x1, x19
  9c:	b.eq	e0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xe0>  // b.none
  a0:	mov	x0, x19
  a4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  a8:	ldr	x8, [x0, #32]
  ac:	cmp	x22, x8
  b0:	b.cs	cc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xcc>  // b.hs, b.nlast
  b4:	ldr	x8, [x19, #24]
  b8:	cmp	x8, #0x0
  bc:	csel	x8, xzr, x0, eq  // eq = none
  c0:	csel	x1, x19, x0, eq  // eq = none
  c4:	mov	x19, x8
  c8:	b	f4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xf4>
  cc:	mov	x0, x21
  d0:	mov	x1, x20
  d4:	bl	0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_>
  d8:	mov	x19, x0
  dc:	b	f4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xf4>
  e0:	mov	x19, xzr
  e4:	b	f4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xf4>
  e8:	mov	x1, xzr
  ec:	b	f4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xf4>
  f0:	mov	x19, x1
  f4:	mov	x0, x19
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldp	x22, x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x3
  10:	mov	x20, x0
  14:	cbz	x1, 20 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E+0x20>
  18:	mov	w0, #0x1                   	// #1
  1c:	b	3c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E+0x3c>
  20:	add	x8, x20, #0x8
  24:	cmp	x8, x2
  28:	b.eq	18 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E+0x18>  // b.none
  2c:	ldr	x8, [x19, #32]
  30:	ldr	x9, [x2, #32]
  34:	cmp	x8, x9
  38:	cset	w0, cc  // cc = lo, ul, last
  3c:	add	x3, x20, #0x8
  40:	mov	x1, x19
  44:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  48:	ldr	x8, [x20, #40]
  4c:	mov	x0, x19
  50:	add	x8, x8, #0x1
  54:	str	x8, [x20, #40]
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0, #16]
  10:	mov	x20, x1
  14:	cbz	x9, 4c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_+0x4c>
  18:	ldr	x8, [x20]
  1c:	ldr	x10, [x9, #32]
  20:	mov	x19, x9
  24:	add	x9, x9, #0x10
  28:	add	x11, x19, #0x18
  2c:	cmp	x8, x10
  30:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  34:	ldr	x9, [x9]
  38:	cbnz	x9, 1c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_+0x1c>
  3c:	cmp	x8, x10
  40:	mov	x8, x19
  44:	b.cc	50 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_+0x50>  // b.lo, b.ul, b.last
  48:	b	68 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_+0x68>
  4c:	add	x19, x0, #0x8
  50:	ldr	x8, [x0, #24]
  54:	cmp	x8, x19
  58:	b.eq	80 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_+0x80>  // b.none
  5c:	mov	x0, x19
  60:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  64:	mov	x8, x0
  68:	ldr	x9, [x8, #32]
  6c:	ldr	x10, [x20]
  70:	cmp	x9, x10
  74:	csel	x0, xzr, x8, cc  // cc = lo, ul, last
  78:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  7c:	b	84 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE24_M_get_insert_unique_posERS1_+0x84>
  80:	mov	x0, xzr
  84:	mov	x1, x19
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	w1, [x8, x22, lsl #2]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	w10, [x20]
  28:	str	w10, [x9, w8, uxtw #2]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x4                   	// #4
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	w1, [x8, x22, lsl #2]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldp	x8, x10, [x0, #24]
  24:	sub	w9, w1, #0x4
  28:	sub	x10, x10, x8
  2c:	cmp	x9, x10, asr #4
  30:	b.cs	360 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x360>  // b.hs, b.nlast
  34:	mov	x23, x2
  38:	lsl	x9, x9, #4
  3c:	ldr	w2, [x0, #16]
  40:	ldr	x26, [x8, x9]
  44:	mov	x24, x6
  48:	mov	x21, x5
  4c:	mov	x20, x4
  50:	mov	x19, x3
  54:	mov	x22, x0
  58:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  5c:	ldr	w27, [x26, #8]
  60:	tst	x24, #0xff00000000
  64:	b.eq	ac <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xac>  // b.none
  68:	cbz	w27, 420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
  6c:	ldr	x25, [x26]
  70:	ldrb	w8, [x25, #8]
  74:	tbnz	w8, #0, b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xb4>
  78:	mov	x0, x25
  7c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  80:	cmp	w0, #0x3
  84:	b.eq	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.none
  88:	mov	x0, x25
  8c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  90:	cmp	w0, #0x5
  94:	b.eq	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.none
  98:	mov	x0, x22
  9c:	mov	x1, x25
  a0:	mov	w2, w24
  a4:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  a8:	b	c4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc4>
  ac:	mov	w25, wzr
  b0:	b	c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc8>
  b4:	mov	x0, x22
  b8:	mov	x1, x25
  bc:	mov	w2, w24
  c0:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  c4:	mov	w25, #0x1                   	// #1
  c8:	cmp	w25, w27
  cc:	b.ne	d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xd8>  // b.any
  d0:	mov	w28, wzr
  d4:	b	274 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x274>
  d8:	mov	w28, wzr
  dc:	and	x8, x21, #0xffffffff
  e0:	stp	x20, x8, [sp, #8]
  e4:	stur	x21, [x29, #-8]
  e8:	ldr	w8, [x26, #8]
  ec:	cmp	w8, w25
  f0:	b.ls	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>  // b.plast
  f4:	ldr	x8, [x26]
  f8:	add	x24, x8, w25, uxtw #4
  fc:	ldrb	w8, [x24, #8]
 100:	tbnz	w8, #0, 17c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x17c>
 104:	mov	x0, x24
 108:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 10c:	cmp	w0, #0x3
 110:	b.ne	1a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a0>  // b.any
 114:	add	w8, w25, #0x2
 118:	cmp	w8, w27
 11c:	b.ne	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.any
 120:	ldr	w8, [x26, #8]
 124:	add	w25, w25, #0x1
 128:	cmp	w8, w25
 12c:	b.ls	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>  // b.plast
 130:	ldr	x8, [x26]
 134:	add	x24, x8, w25, uxtw #4
 138:	cbz	x20, 20c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x20c>
 13c:	cmp	x19, w28, uxtw
 140:	b.ne	320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x320>  // b.any
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x22
 14c:	mov	w1, w21
 150:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 154:	cbz	w21, 1e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e4>
 158:	ldr	x21, [sp, #16]
 15c:	ldrb	w2, [x20], #1
 160:	mov	x0, x22
 164:	mov	x1, x24
 168:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 16c:	subs	x21, x21, #0x1
 170:	b.ne	15c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x15c>  // b.any
 174:	ldur	x21, [x29, #-8]
 178:	b	1e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e4>
 17c:	cmp	x19, w28, uxtw
 180:	b.ls	2e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2e0>  // b.plast
 184:	mov	w8, w28
 188:	ldr	w2, [x23, x8, lsl #2]
 18c:	mov	x0, x22
 190:	mov	x1, x24
 194:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 198:	add	w28, w28, #0x1
 19c:	b	268 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x268>
 1a0:	mov	x0, x24
 1a4:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1a8:	cmp	w0, #0x5
 1ac:	b.ne	1ec <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1ec>  // b.any
 1b0:	mov	w8, w28
 1b4:	cbz	x20, 254 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x254>
 1b8:	cmp	x19, x8
 1bc:	b.ne	380 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x380>  // b.any
 1c0:	ldr	x1, [sp, #8]
 1c4:	cmp	x20, x1
 1c8:	b.ne	3a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3a0>  // b.any
 1cc:	lsr	x8, x21, #32
 1d0:	cbnz	x8, 3c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3c0>
 1d4:	mov	w3, #0x1                   	// #1
 1d8:	mov	x0, x22
 1dc:	mov	x2, x21
 1e0:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1e4:	mov	x20, xzr
 1e8:	b	268 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x268>
 1ec:	cmp	x19, w28, uxtw
 1f0:	b.ls	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>  // b.plast
 1f4:	mov	w8, w28
 1f8:	ldr	w2, [x23, x8, lsl #2]
 1fc:	mov	x0, x22
 200:	mov	x1, x24
 204:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 208:	b	198 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x198>
 20c:	subs	w1, w19, w28
 210:	mov	w2, #0x6                   	// #6
 214:	mov	x0, x22
 218:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 21c:	cmp	w19, w28
 220:	b.eq	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.none
 224:	cmp	x19, w28, uxtw
 228:	b.ls	2a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2a0>  // b.plast
 22c:	mov	w20, w28
 230:	ldr	w2, [x23, x20, lsl #2]
 234:	mov	x0, x22
 238:	mov	x1, x24
 23c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 240:	add	w28, w20, #0x1
 244:	b	21c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x21c>
 248:	mov	x20, xzr
 24c:	mov	w28, w19
 250:	b	268 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x268>
 254:	sub	x2, x19, x8
 258:	add	x1, x23, x8, lsl #2
 25c:	mov	w3, #0x1                   	// #1
 260:	mov	x0, x22
 264:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 268:	add	w25, w25, #0x1
 26c:	cmp	w25, w27
 270:	b.ne	e8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe8>  // b.any
 274:	cmp	x19, w28, uxtw
 278:	b.ne	3e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3e0>  // b.any
 27c:	cbnz	x20, 400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x400>
 280:	ldp	x20, x19, [sp, #112]
 284:	ldp	x22, x21, [sp, #96]
 288:	ldp	x24, x23, [sp, #80]
 28c:	ldp	x26, x25, [sp, #64]
 290:	ldp	x28, x27, [sp, #48]
 294:	ldp	x29, x30, [sp, #32]
 298:	add	sp, sp, #0x80
 29c:	ret
 2a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2ac:	add	x0, x0, #0x0
 2b0:	add	x1, x1, #0x0
 2b4:	add	x3, x3, #0x0
 2b8:	mov	w2, #0xfa                  	// #250
 2bc:	bl	0 <__assert_fail>
 2c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2cc:	add	x0, x0, #0x0
 2d0:	add	x1, x1, #0x0
 2d4:	add	x3, x3, #0x0
 2d8:	mov	w2, #0x99                  	// #153
 2dc:	bl	0 <__assert_fail>
 2e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2ec:	add	x0, x0, #0x0
 2f0:	add	x1, x1, #0x0
 2f4:	add	x3, x3, #0x0
 2f8:	mov	w2, #0x145                 	// #325
 2fc:	bl	0 <__assert_fail>
 300:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 304:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 308:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 30c:	add	x0, x0, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x3, x3, #0x0
 318:	mov	w2, #0x14a                 	// #330
 31c:	bl	0 <__assert_fail>
 320:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 324:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 328:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0x151                 	// #337
 33c:	bl	0 <__assert_fail>
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 348:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 34c:	add	x0, x0, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x173                 	// #371
 35c:	bl	0 <__assert_fail>
 360:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 364:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 368:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 36c:	add	x0, x0, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0x12d                 	// #301
 37c:	bl	0 <__assert_fail>
 380:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 384:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 388:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 38c:	add	x0, x0, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x169                 	// #361
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x16b                 	// #363
 3bc:	bl	0 <__assert_fail>
 3c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x16c                 	// #364
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x178                 	// #376
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 404:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 408:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 40c:	add	x0, x0, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x3, x3, #0x0
 418:	mov	w2, #0x17a                 	// #378
 41c:	bl	0 <__assert_fail>
 420:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 424:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 428:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x134                 	// #308
 43c:	bl	0 <__assert_fail>
 440:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 444:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 448:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 44c:	add	x0, x0, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x13c                 	// #316
 45c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbz	w8, #0, 24 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_+0x24>
  10:	ldr	x8, [x1]
  14:	cmp	x8, w2, uxtw
  18:	b.ne	44 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_+0x44>  // b.any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>
  28:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>
  2c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x103                 	// #259
  40:	bl	0 <__assert_fail>
  44:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>
  48:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>
  4c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralIjEEvRKNS_15BitCodeAbbrevOpET_>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x107                 	// #263
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x1, #8]
  14:	tbnz	w8, #0, d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  18:	mov	x19, x0
  1c:	mov	x0, x1
  20:	mov	w20, w2
  24:	mov	x21, x1
  28:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  2c:	cmp	w0, #0x1
  30:	b.eq	90 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x90>  // b.none
  34:	cmp	w0, #0x2
  38:	b.eq	5c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x5c>  // b.none
  3c:	cmp	w0, #0x4
  40:	b.ne	f0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xf0>  // b.any
  44:	mov	w0, w20
  48:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  4c:	mov	w2, #0x6                   	// #6
  50:	mov	w1, w0
  54:	mov	x0, x19
  58:	b	b0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xb0>
  5c:	mov	x0, x21
  60:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  64:	cbz	x0, c0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xc0>
  68:	mov	x0, x21
  6c:	mov	w20, w20
  70:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  74:	mov	x2, x0
  78:	mov	x0, x19
  7c:	mov	x1, x20
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  90:	mov	x0, x21
  94:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  98:	cbz	x0, c0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xc0>
  9c:	mov	x0, x21
  a0:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  a4:	mov	x2, x0
  a8:	mov	x0, x19
  ac:	mov	w1, w20
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldr	x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  d4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  d8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x10e                 	// #270
  ec:	bl	0 <__assert_fail>
  f0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  f4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	mov	w2, #0x112                 	// #274
 104:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x1, #8]
  14:	tbnz	w8, #0, d4 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xd4>
  18:	mov	x19, x0
  1c:	mov	x0, x1
  20:	mov	w20, w2
  24:	mov	x21, x1
  28:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  2c:	cmp	w0, #0x1
  30:	b.eq	90 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x90>  // b.none
  34:	cmp	w0, #0x2
  38:	b.eq	5c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x5c>  // b.none
  3c:	cmp	w0, #0x4
  40:	b.ne	f4 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xf4>  // b.any
  44:	mov	w0, w20
  48:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  4c:	mov	w2, #0x6                   	// #6
  50:	mov	w1, w0
  54:	mov	x0, x19
  58:	b	b4 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xb4>
  5c:	mov	x0, x21
  60:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  64:	cbz	x0, c4 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xc4>
  68:	mov	x0, x21
  6c:	and	x20, x20, #0xff
  70:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  74:	mov	x2, x0
  78:	mov	x0, x19
  7c:	mov	x1, x20
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  90:	mov	x0, x21
  94:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  98:	cbz	x0, c4 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xc4>
  9c:	mov	x0, x21
  a0:	and	w20, w20, #0xff
  a4:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  a8:	mov	x2, x0
  ac:	mov	x0, x19
  b0:	mov	w1, w20
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldr	x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  c4:	ldp	x20, x19, [sp, #32]
  c8:	ldr	x21, [sp, #16]
  cc:	ldp	x29, x30, [sp], #48
  d0:	ret
  d4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  d8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  dc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x10e                 	// #270
  f0:	bl	0 <__assert_fail>
  f4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  f8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	mov	w2, #0x112                 	// #274
 108:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x2
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	tbz	w3, #0, 30 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x30>
  20:	mov	w2, #0x6                   	// #6
  24:	mov	x0, x19
  28:	mov	w1, w21
  2c:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  38:	cbz	x21, 78 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x78>
  3c:	lsl	x21, x21, #2
  40:	ldr	w8, [x20]
  44:	cmp	w8, #0x100
  48:	b.cs	98 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x98>  // b.hs, b.nlast
  4c:	ldr	x0, [x19]
  50:	add	x1, x29, #0x1c
  54:	strb	w8, [x29, #28]
  58:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  5c:	subs	x21, x21, #0x4
  60:	add	x20, x20, #0x4
  64:	b.ne	40 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x40>  // b.any
  68:	b	78 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x78>
  6c:	add	x1, x29, #0x18
  70:	strb	wzr, [x29, #24]
  74:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  78:	ldr	x0, [x19]
  7c:	ldrb	w8, [x0, #8]
  80:	tst	w8, #0x3
  84:	b.ne	6c <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x6c>  // b.any
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  9c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x18a                 	// #394
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec:

0000000000000000 <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec>:
   0:	sub	w8, w0, #0x61
   4:	and	w8, w8, #0xff
   8:	cmp	w8, #0x19
   c:	and	w8, w0, #0xff
  10:	b.hi	1c <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec+0x1c>  // b.pmore
  14:	sub	w0, w8, #0x61
  18:	ret
  1c:	sub	w9, w0, #0x41
  20:	and	w9, w9, #0xff
  24:	cmp	w9, #0x19
  28:	b.hi	34 <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec+0x34>  // b.pmore
  2c:	sub	w0, w8, #0x27
  30:	ret
  34:	sub	w9, w0, #0x30
  38:	and	w9, w9, #0xff
  3c:	cmp	w9, #0x9
  40:	b.hi	4c <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec+0x4c>  // b.pmore
  44:	add	w0, w8, #0x4
  48:	ret
  4c:	and	w8, w0, #0xff
  50:	cmp	w8, #0x2e
  54:	b.eq	68 <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec+0x68>  // b.none
  58:	cmp	w8, #0x5f
  5c:	b.ne	70 <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec+0x70>  // b.any
  60:	mov	w0, #0x3f                  	// #63
  64:	ret
  68:	mov	w0, #0x3e                  	// #62
  6c:	ret
  70:	stp	x29, x30, [sp, #-16]!
  74:	mov	x29, sp
  78:	adrp	x0, 0 <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec>
  7c:	adrp	x1, 0 <_ZN4llvm15BitCodeAbbrevOp11EncodeChar6Ec>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x99                  	// #153
  8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x2
  14:	mov	x21, x1
  18:	mov	x19, x0
  1c:	tbz	w3, #0, 30 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x30>
  20:	mov	w2, #0x6                   	// #6
  24:	mov	x0, x19
  28:	mov	w1, w20
  2c:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  38:	cbz	x20, 68 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x68>
  3c:	ldrb	w8, [x21], #1
  40:	ldr	x0, [x19]
  44:	add	x1, x29, #0x1c
  48:	strb	w8, [x29, #28]
  4c:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  50:	subs	x20, x20, #0x1
  54:	b.ne	3c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x3c>  // b.any
  58:	b	68 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x68>
  5c:	add	x1, x29, #0x18
  60:	strb	wzr, [x29, #24]
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  68:	ldr	x0, [x19]
  6c:	ldrb	w8, [x0, #8]
  70:	tst	w8, #0x3
  74:	b.ne	5c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x5c>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldrb	w10, [x20]
  28:	strb	w10, [x9, w8, uxtw]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x1                   	// #1
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x0, #8]
  18:	sub	x21, x2, x1
  1c:	asr	x23, x21, #2
  20:	mov	x22, x2
  24:	sub	x9, x9, x8
  28:	mov	x20, x1
  2c:	mov	x19, x0
  30:	cmp	x23, x9
  34:	b.ls	4c <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_+0x4c>  // b.plast
  38:	add	x2, x23, x8
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x4                   	// #4
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  4c:	cmp	x20, x22
  50:	b.eq	6c <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_+0x6c>  // b.none
  54:	ldr	x8, [x19]
  58:	ldr	w9, [x19, #8]
  5c:	mov	x1, x20
  60:	mov	x2, x21
  64:	add	x0, x8, x9, lsl #2
  68:	bl	0 <memcpy>
  6c:	ldp	w8, w9, [x19, #8]
  70:	add	x8, x23, x8
  74:	cmp	x8, x9
  78:	b.hi	94 <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_+0x94>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #48]
  84:	ldp	x22, x21, [sp, #32]
  88:	ldr	x23, [sp, #16]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6appendIPKjvEEvT_S5_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x43                  	// #67
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  84:	cbz	w19, bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xbc>
  88:	mov	w8, wzr
  8c:	ldr	x9, [x21, #8]
  90:	cmp	x9, w8, uxtw
  94:	b.ls	cc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xcc>  // b.plast
  98:	ldr	x9, [x21]
  9c:	mov	w22, w8
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	ldr	x1, [x9, x22, lsl #3]
  ac:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  b0:	add	w8, w22, #0x1
  b4:	cmp	w19, w8
  b8:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x8c>  // b.any
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldp	x22, x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  d4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0xfa                  	// #250
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldp	x8, x10, [x0, #24]
  24:	sub	w9, w1, #0x4
  28:	sub	x10, x10, x8
  2c:	cmp	x9, x10, asr #4
  30:	b.cs	360 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x360>  // b.hs, b.nlast
  34:	mov	x23, x2
  38:	lsl	x9, x9, #4
  3c:	ldr	w2, [x0, #16]
  40:	ldr	x26, [x8, x9]
  44:	mov	x24, x6
  48:	mov	x21, x5
  4c:	mov	x20, x4
  50:	mov	x19, x3
  54:	mov	x22, x0
  58:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  5c:	ldr	w27, [x26, #8]
  60:	tst	x24, #0xff00000000
  64:	b.eq	ac <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xac>  // b.none
  68:	cbz	w27, 420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
  6c:	ldr	x25, [x26]
  70:	ldrb	w8, [x25, #8]
  74:	tbnz	w8, #0, b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xb4>
  78:	mov	x0, x25
  7c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  80:	cmp	w0, #0x3
  84:	b.eq	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.none
  88:	mov	x0, x25
  8c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  90:	cmp	w0, #0x5
  94:	b.eq	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.none
  98:	mov	x0, x22
  9c:	mov	x1, x25
  a0:	mov	w2, w24
  a4:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  a8:	b	c4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc4>
  ac:	mov	w25, wzr
  b0:	b	c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc8>
  b4:	mov	x0, x22
  b8:	mov	x1, x25
  bc:	mov	w2, w24
  c0:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  c4:	mov	w25, #0x1                   	// #1
  c8:	cmp	w25, w27
  cc:	b.ne	d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xd8>  // b.any
  d0:	mov	w28, wzr
  d4:	b	274 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x274>
  d8:	mov	w28, wzr
  dc:	and	x8, x21, #0xffffffff
  e0:	stp	x20, x8, [sp, #8]
  e4:	stur	x21, [x29, #-8]
  e8:	ldr	w8, [x26, #8]
  ec:	cmp	w8, w25
  f0:	b.ls	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>  // b.plast
  f4:	ldr	x8, [x26]
  f8:	add	x24, x8, w25, uxtw #4
  fc:	ldrb	w8, [x24, #8]
 100:	tbnz	w8, #0, 17c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x17c>
 104:	mov	x0, x24
 108:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 10c:	cmp	w0, #0x3
 110:	b.ne	1a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a0>  // b.any
 114:	add	w8, w25, #0x2
 118:	cmp	w8, w27
 11c:	b.ne	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.any
 120:	ldr	w8, [x26, #8]
 124:	add	w25, w25, #0x1
 128:	cmp	w8, w25
 12c:	b.ls	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>  // b.plast
 130:	ldr	x8, [x26]
 134:	add	x24, x8, w25, uxtw #4
 138:	cbz	x20, 20c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x20c>
 13c:	cmp	x19, w28, uxtw
 140:	b.ne	320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x320>  // b.any
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x22
 14c:	mov	w1, w21
 150:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 154:	cbz	w21, 1e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e4>
 158:	ldr	x21, [sp, #16]
 15c:	ldrb	w2, [x20], #1
 160:	mov	x0, x22
 164:	mov	x1, x24
 168:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 16c:	subs	x21, x21, #0x1
 170:	b.ne	15c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x15c>  // b.any
 174:	ldur	x21, [x29, #-8]
 178:	b	1e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e4>
 17c:	cmp	x19, w28, uxtw
 180:	b.ls	2e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2e0>  // b.plast
 184:	mov	w8, w28
 188:	ldr	x2, [x23, x8, lsl #3]
 18c:	mov	x0, x22
 190:	mov	x1, x24
 194:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 198:	add	w28, w28, #0x1
 19c:	b	268 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x268>
 1a0:	mov	x0, x24
 1a4:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1a8:	cmp	w0, #0x5
 1ac:	b.ne	1ec <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1ec>  // b.any
 1b0:	mov	w8, w28
 1b4:	cbz	x20, 254 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x254>
 1b8:	cmp	x19, x8
 1bc:	b.ne	380 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x380>  // b.any
 1c0:	ldr	x1, [sp, #8]
 1c4:	cmp	x20, x1
 1c8:	b.ne	3a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3a0>  // b.any
 1cc:	lsr	x8, x21, #32
 1d0:	cbnz	x8, 3c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3c0>
 1d4:	mov	w3, #0x1                   	// #1
 1d8:	mov	x0, x22
 1dc:	mov	x2, x21
 1e0:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1e4:	mov	x20, xzr
 1e8:	b	268 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x268>
 1ec:	cmp	x19, w28, uxtw
 1f0:	b.ls	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>  // b.plast
 1f4:	mov	w8, w28
 1f8:	ldr	x2, [x23, x8, lsl #3]
 1fc:	mov	x0, x22
 200:	mov	x1, x24
 204:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 208:	b	198 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x198>
 20c:	subs	w1, w19, w28
 210:	mov	w2, #0x6                   	// #6
 214:	mov	x0, x22
 218:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 21c:	cmp	w19, w28
 220:	b.eq	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.none
 224:	cmp	x19, w28, uxtw
 228:	b.ls	2a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2a0>  // b.plast
 22c:	mov	w20, w28
 230:	ldr	x2, [x23, x20, lsl #3]
 234:	mov	x0, x22
 238:	mov	x1, x24
 23c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 240:	add	w28, w20, #0x1
 244:	b	21c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x21c>
 248:	mov	x20, xzr
 24c:	mov	w28, w19
 250:	b	268 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x268>
 254:	sub	x2, x19, x8
 258:	add	x1, x23, x8, lsl #3
 25c:	mov	w3, #0x1                   	// #1
 260:	mov	x0, x22
 264:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 268:	add	w25, w25, #0x1
 26c:	cmp	w25, w27
 270:	b.ne	e8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe8>  // b.any
 274:	cmp	x19, w28, uxtw
 278:	b.ne	3e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3e0>  // b.any
 27c:	cbnz	x20, 400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x400>
 280:	ldp	x20, x19, [sp, #112]
 284:	ldp	x22, x21, [sp, #96]
 288:	ldp	x24, x23, [sp, #80]
 28c:	ldp	x26, x25, [sp, #64]
 290:	ldp	x28, x27, [sp, #48]
 294:	ldp	x29, x30, [sp, #32]
 298:	add	sp, sp, #0x80
 29c:	ret
 2a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2ac:	add	x0, x0, #0x0
 2b0:	add	x1, x1, #0x0
 2b4:	add	x3, x3, #0x0
 2b8:	mov	w2, #0xfa                  	// #250
 2bc:	bl	0 <__assert_fail>
 2c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2cc:	add	x0, x0, #0x0
 2d0:	add	x1, x1, #0x0
 2d4:	add	x3, x3, #0x0
 2d8:	mov	w2, #0x99                  	// #153
 2dc:	bl	0 <__assert_fail>
 2e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 2ec:	add	x0, x0, #0x0
 2f0:	add	x1, x1, #0x0
 2f4:	add	x3, x3, #0x0
 2f8:	mov	w2, #0x145                 	// #325
 2fc:	bl	0 <__assert_fail>
 300:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 304:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 308:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 30c:	add	x0, x0, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x3, x3, #0x0
 318:	mov	w2, #0x14a                 	// #330
 31c:	bl	0 <__assert_fail>
 320:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 324:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 328:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0x151                 	// #337
 33c:	bl	0 <__assert_fail>
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 348:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 34c:	add	x0, x0, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x173                 	// #371
 35c:	bl	0 <__assert_fail>
 360:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 364:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 368:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 36c:	add	x0, x0, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0x12d                 	// #301
 37c:	bl	0 <__assert_fail>
 380:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 384:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 388:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 38c:	add	x0, x0, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x169                 	// #361
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x16b                 	// #363
 3bc:	bl	0 <__assert_fail>
 3c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x16c                 	// #364
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x178                 	// #376
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 404:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 408:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 40c:	add	x0, x0, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x3, x3, #0x0
 418:	mov	w2, #0x17a                 	// #378
 41c:	bl	0 <__assert_fail>
 420:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 424:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 428:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x134                 	// #308
 43c:	bl	0 <__assert_fail>
 440:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 444:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 448:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 44c:	add	x0, x0, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x13c                 	// #316
 45c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbz	w8, #0, 24 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_+0x24>
  10:	ldr	x8, [x1]
  14:	cmp	x8, x2
  18:	b.ne	44 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_+0x44>  // b.any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>
  28:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>
  2c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x103                 	// #259
  40:	bl	0 <__assert_fail>
  44:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>
  48:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>
  4c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter22EmitAbbreviatedLiteralImEEvRKNS_15BitCodeAbbrevOpET_>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x107                 	// #263
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x1, #8]
  14:	tbnz	w8, #0, cc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xcc>
  18:	mov	x19, x0
  1c:	mov	x0, x1
  20:	mov	x20, x2
  24:	mov	x21, x1
  28:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  2c:	cmp	w0, #0x1
  30:	b.eq	8c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x8c>  // b.none
  34:	cmp	w0, #0x2
  38:	b.eq	5c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x5c>  // b.none
  3c:	cmp	w0, #0x4
  40:	b.ne	ec <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xec>  // b.any
  44:	mov	w0, w20
  48:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  4c:	mov	w2, #0x6                   	// #6
  50:	mov	w1, w0
  54:	mov	x0, x19
  58:	b	ac <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xac>
  5c:	mov	x0, x21
  60:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  64:	cbz	x0, bc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xbc>
  68:	mov	x0, x21
  6c:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  70:	mov	x2, x0
  74:	mov	x0, x19
  78:	mov	x1, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  94:	cbz	x0, bc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xbc>
  98:	mov	x0, x21
  9c:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  a0:	mov	x2, x0
  a4:	mov	x0, x19
  a8:	mov	w1, w20
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldr	x21, [sp, #16]
  b4:	ldp	x29, x30, [sp], #48
  b8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  d4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x10e                 	// #270
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  f0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	mov	w2, #0x112                 	// #274
 100:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x2
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	tbz	w3, #0, 30 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x30>
  20:	mov	w2, #0x6                   	// #6
  24:	mov	x0, x19
  28:	mov	w1, w21
  2c:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  38:	cbz	x21, 78 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x78>
  3c:	lsl	x21, x21, #3
  40:	ldr	x8, [x20]
  44:	cmp	x8, #0x100
  48:	b.cs	98 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x98>  // b.hs, b.nlast
  4c:	ldr	x0, [x19]
  50:	add	x1, x29, #0x1c
  54:	strb	w8, [x29, #28]
  58:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  5c:	subs	x21, x21, #0x8
  60:	add	x20, x20, #0x8
  64:	b.ne	40 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x40>  // b.any
  68:	b	78 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x78>
  6c:	add	x1, x29, #0x18
  70:	strb	wzr, [x29, #24]
  74:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  78:	ldr	x0, [x19]
  7c:	ldrb	w8, [x0, #8]
  80:	tst	w8, #0x3
  84:	b.ne	6c <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x6c>  // b.any
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  9c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x18a                 	// #394
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv:

0000000000000000 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w2, #0x2                   	// #2
  14:	mov	w1, wzr
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>
  20:	ldp	x20, x21, [x19, #72]
  24:	mov	w8, #0xffffffff            	// #-1
  28:	str	w8, [x19, #20]
  2c:	cmp	x21, x20
  30:	b.eq	50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>  // b.none
  34:	mov	x22, x20
  38:	add	x0, x22, #0x8
  3c:	bl	0 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>
  40:	add	x22, x22, #0x20
  44:	cmp	x21, x22
  48:	b.ne	38 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x38>  // b.any
  4c:	str	x20, [x19, #80]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldp	x22, x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE:

0000000000000000 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w20, w1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  20:	ldr	x1, [x19]
  24:	mov	x0, x21
  28:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  2c:	mov	x0, x21
  30:	mov	w1, w20
  34:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  38:	mov	x20, x0
  3c:	add	x0, x0, #0x8
  40:	mov	x1, x19
  44:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  48:	ldp	x9, x8, [x20, #8]
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	sub	x8, x8, x9
  58:	lsr	x8, x8, #4
  5c:	add	w0, w8, #0x3
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter15SwitchToBlockIDEj:

0000000000000000 <_ZN4llvm15BitstreamWriter15SwitchToBlockIDEj>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	stur	w1, [x29, #-4]
  14:	ldr	w8, [x0, #20]
  18:	cmp	w8, w1
  1c:	b.eq	74 <_ZN4llvm15BitstreamWriter15SwitchToBlockIDEj+0x74>  // b.none
  20:	adrp	x8, 0 <_ZN4llvm15BitstreamWriter15SwitchToBlockIDEj>
  24:	ldr	d0, [x8]
  28:	mov	x8, sp
  2c:	mov	x19, x0
  30:	add	x20, x8, #0x10
  34:	mov	x0, sp
  38:	sub	x1, x29, #0x4
  3c:	str	x20, [sp]
  40:	str	d0, [sp, #8]
  44:	bl	0 <_ZN4llvm15BitstreamWriter15SwitchToBlockIDEj>
  48:	mov	x2, sp
  4c:	mov	w1, #0x1                   	// #1
  50:	mov	x0, x19
  54:	mov	w3, wzr
  58:	bl	0 <_ZN4llvm15BitstreamWriter15SwitchToBlockIDEj>
  5c:	ldur	w8, [x29, #-4]
  60:	str	w8, [x19, #20]
  64:	ldr	x0, [sp]
  68:	cmp	x0, x20
  6c:	b.eq	74 <_ZN4llvm15BitstreamWriter15SwitchToBlockIDEj+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldp	x20, x19, [sp, #48]
  78:	ldp	x29, x30, [sp, #32]
  7c:	add	sp, sp, #0x40
  80:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj:

0000000000000000 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x9, x8, [x0, #72]
  10:	mov	x20, x0
  14:	mov	w19, w1
  18:	cmp	x9, x8
  1c:	b.eq	30 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x30>  // b.none
  20:	mov	x0, x8
  24:	ldr	w10, [x0, #-32]!
  28:	cmp	w10, w19
  2c:	b.eq	98 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x98>  // b.none
  30:	sub	x10, x8, x9
  34:	lsr	x10, x10, #5
  38:	cbz	w10, 60 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x60>
  3c:	mov	w11, wzr
  40:	mov	w12, w11
  44:	add	x0, x9, x12, lsl #5
  48:	ldr	w12, [x0]
  4c:	cmp	w12, w19
  50:	b.eq	98 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x98>  // b.none
  54:	add	w11, w11, #0x1
  58:	cmp	w10, w11
  5c:	b.ne	40 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x40>  // b.any
  60:	ldr	x9, [x20, #88]
  64:	cmp	x8, x9
  68:	b.eq	84 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x84>  // b.none
  6c:	movi	v0.2d, #0x0
  70:	stp	q0, q0, [x8]
  74:	ldr	x8, [x20, #80]
  78:	add	x0, x8, #0x20
  7c:	str	x0, [x20, #80]
  80:	b	94 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj+0x94>
  84:	add	x0, x20, #0x48
  88:	mov	x1, x8
  8c:	bl	0 <_ZN4llvm15BitstreamWriter20getOrCreateBlockInfoEj>
  90:	ldr	x0, [x20, #80]
  94:	str	w19, [x0, #-32]!
  98:	ldp	x20, x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	w1, [x8, x22, lsl #2]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x2, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  1c:	mov	x23, x1
  20:	add	x2, x2, #0x0
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x0
  2c:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  30:	ldp	x21, x24, [x19]
  34:	mov	x20, x0
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	sub	x25, x23, x21
  44:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  48:	mov	x22, x0
  4c:	add	x8, x0, x25
  50:	movi	v0.2d, #0x0
  54:	mov	x0, x21
  58:	mov	x1, x23
  5c:	mov	x2, x22
  60:	mov	x3, x19
  64:	stp	q0, q0, [x8]
  68:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  6c:	add	x2, x0, #0x20
  70:	mov	x0, x23
  74:	mov	x1, x24
  78:	mov	x3, x19
  7c:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  80:	mov	x23, x0
  84:	cbz	x21, 90 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x90>
  88:	mov	x0, x21
  8c:	bl	0 <_ZdlPv>
  90:	add	x8, x22, x20, lsl #5
  94:	stp	x22, x23, [x19]
  98:	str	x8, [x19, #16]
  9c:	ldp	x20, x19, [sp, #64]
  a0:	ldp	x22, x21, [sp, #48]
  a4:	ldp	x24, x23, [sp, #32]
  a8:	ldr	x25, [sp, #16]
  ac:	ldp	x29, x30, [sp], #80
  b0:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  14:	sub	x10, x8, x9, asr #5
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #5
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #58
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #58
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #5
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	mov	x19, x2
  18:	b.eq	5c <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_+0x5c>  // b.none
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	ldr	w8, [x21]
  28:	str	w8, [x19]
  2c:	ldr	q0, [x21, #8]!
  30:	stur	q0, [x19, #8]
  34:	ldr	x8, [x21, #16]
  38:	mov	x0, x21
  3c:	str	x8, [x19, #24]
  40:	stp	xzr, xzr, [x21]
  44:	str	xzr, [x21, #16]
  48:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
  4c:	add	x21, x21, #0x18
  50:	cmp	x21, x20
  54:	add	x19, x19, #0x20
  58:	b.ne	24 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_+0x24>  // b.any
  5c:	mov	x0, x19
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	x1, [x8, x22, lsl #3]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE:

0000000000000000 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x20, x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	add	x20, x0, #0x18
  14:	mov	x19, x0
  18:	add	x8, sp, #0x20
  1c:	mov	x0, x20
  20:	bl	0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  24:	ldp	x10, x8, [x19, #24]
  28:	ldr	w9, [x19, #48]
  2c:	add	x0, sp, #0x20
  30:	mov	x1, sp
  34:	stp	x20, x10, [sp]
  38:	add	x8, x8, x9, lsl #4
  3c:	stp	x8, x8, [sp, #16]
  40:	bl	0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  44:	tbz	w0, #0, 74 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE+0x74>
  48:	ldp	x8, x9, [sp, #32]
  4c:	ldr	x8, [x8]
  50:	cmp	x8, x9
  54:	b.ne	94 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE+0x94>  // b.any
  58:	ldr	x8, [sp, #48]
  5c:	ldp	x20, x19, [sp, #80]
  60:	ldp	x29, x30, [sp, #64]
  64:	ldr	w8, [x8, #8]
  68:	sub	w0, w8, #0x1
  6c:	add	sp, sp, #0x60
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  78:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  7c:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xa9                  	// #169
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  98:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  9c:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x4b9                 	// #1209
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	str	x1, [sp, #8]
  14:	add	x1, sp, #0x8
  18:	mov	x2, sp
  1c:	mov	x20, x0
  20:	mov	x19, x8
  24:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>
  28:	tbz	w0, #0, 44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x44>
  2c:	ldr	w9, [x20, #24]
  30:	ldp	x8, x10, [x20]
  34:	ldr	x11, [sp]
  38:	add	x9, x10, x9, lsl #4
  3c:	str	x11, [x19, #16]
  40:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x54>
  44:	ldr	w9, [x20, #24]
  48:	ldp	x8, x10, [x20]
  4c:	add	x9, x10, x9, lsl #4
  50:	str	x9, [x19, #16]
  54:	stp	x20, x8, [x19]
  58:	str	x9, [x19, #24]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x29, x30, [sp, #16]
  64:	add	sp, sp, #0x30
  68:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE:

0000000000000000 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x20, x19, [sp, #96]
   c:	add	x29, sp, #0x50
  10:	stp	x1, x2, [x29, #-16]
  14:	cbz	x2, 74 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE+0x74>
  18:	add	x20, x0, #0x148
  1c:	mov	x19, x0
  20:	add	x8, sp, #0x20
  24:	sub	x1, x29, #0x10
  28:	mov	x0, x20
  2c:	bl	0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  30:	ldp	x10, x8, [x19, #328]
  34:	ldr	w9, [x19, #352]
  38:	mov	w11, #0x18                  	// #24
  3c:	add	x0, sp, #0x20
  40:	mov	x1, sp
  44:	madd	x8, x9, x11, x8
  48:	stp	x20, x10, [sp]
  4c:	stp	x8, x8, [sp, #16]
  50:	bl	0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  54:	tbz	w0, #0, 88 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE+0x88>
  58:	ldp	x8, x9, [sp, #32]
  5c:	ldr	x8, [x8]
  60:	cmp	x8, x9
  64:	b.ne	a8 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE+0xa8>  // b.any
  68:	ldr	x8, [sp, #48]
  6c:	ldr	w0, [x8, #16]
  70:	b	78 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE+0x78>
  74:	mov	w0, wzr
  78:	ldp	x20, x19, [sp, #96]
  7c:	ldp	x29, x30, [sp, #80]
  80:	add	sp, sp, #0x70
  84:	ret
  88:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  8c:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  90:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xbb                  	// #187
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  ac:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  b0:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator19getAttributeGroupIDESt4pairIjNS_12AttributeSetEE>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x4b9                 	// #1209
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	sub	x9, x9, x8
  24:	cmp	x21, x9
  28:	b.ls	44 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_+0x44>  // b.plast
  2c:	add	x2, x21, x8
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x8                   	// #8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x19, #8]
  44:	cmp	x21, #0x1
  48:	b.lt	6c <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_+0x6c>  // b.tstop
  4c:	ldr	x9, [x19]
  50:	add	x10, x21, #0x1
  54:	add	x9, x9, x8, lsl #3
  58:	ldrb	w11, [x20], #1
  5c:	sub	x10, x10, #0x1
  60:	cmp	x10, #0x1
  64:	str	x11, [x9], #8
  68:	b.gt	58 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_+0x58>
  6c:	ldr	w9, [x19, #12]
  70:	add	x8, x21, x8
  74:	cmp	x8, x9
  78:	b.hi	90 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_+0x90>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKcvEEvT_S5_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findERKS4_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x20, x0
  18:	mov	x19, x8
  1c:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findERKS4_>
  20:	tbz	w0, #0, 40 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findERKS4_+0x40>
  24:	ldr	w9, [x20, #24]
  28:	ldp	x8, x10, [x20]
  2c:	ldr	x11, [sp, #8]
  30:	mov	w12, #0x18                  	// #24
  34:	madd	x9, x9, x12, x10
  38:	str	x11, [x19, #16]
  3c:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findERKS4_+0x54>
  40:	ldr	w9, [x20, #24]
  44:	ldp	x8, x10, [x20]
  48:	mov	w11, #0x18                  	// #24
  4c:	madd	x9, x9, x11, x10
  50:	str	x9, [x19, #16]
  54:	stp	x20, x8, [x19]
  58:	str	x9, [x19, #24]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x29, x30, [sp, #16]
  64:	add	sp, sp, #0x30
  68:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	x19, x2
  18:	cbz	w22, 8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x8c>
  1c:	ldr	w9, [x1]
  20:	ldr	x21, [x0, #8]
  24:	ldr	x8, [x1, #8]
  28:	mov	x20, x1
  2c:	cmn	w9, #0x1
  30:	b.ne	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x3c>  // b.any
  34:	cmn	x8, #0x4
  38:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x11c>  // b.none
  3c:	cmn	w9, #0x2
  40:	b.ne	4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>  // b.any
  44:	cmn	x8, #0x8
  48:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x11c>  // b.none
  4c:	mov	x0, x20
  50:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  54:	sub	w9, w22, #0x1
  58:	mov	w10, #0x18                  	// #24
  5c:	and	w11, w0, w9
  60:	umaddl	x8, w11, w10, x21
  64:	ldr	w12, [x20]
  68:	ldr	w14, [x8]
  6c:	ldr	x13, [x20, #8]
  70:	ldr	x16, [x8, #8]
  74:	cmp	w12, w14
  78:	b.ne	a8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa8>  // b.any
  7c:	cmp	x13, x16
  80:	b.ne	a8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa8>  // b.any
  84:	mov	w0, #0x1                   	// #1
  88:	b	94 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x94>
  8c:	mov	x8, xzr
  90:	mov	w0, wzr
  94:	str	x8, [x19]
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldp	x22, x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	mov	x15, xzr
  ac:	mov	w18, #0x1                   	// #1
  b0:	mov	w17, #0xfffffffe            	// #-2
  b4:	mov	w0, #0x1                   	// #1
  b8:	cmn	w14, #0x1
  bc:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xc8>  // b.any
  c0:	cmn	x16, #0x4
  c4:	b.eq	10c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x10c>  // b.none
  c8:	cmn	x16, #0x8
  cc:	add	w11, w11, w18
  d0:	ccmp	w14, w17, #0x0, eq  // eq = none
  d4:	and	w11, w11, w9
  d8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  dc:	csel	x15, x15, x8, ne  // ne = any
  e0:	umaddl	x8, w11, w10, x21
  e4:	ldr	w14, [x8]
  e8:	ldr	x16, [x8, #8]
  ec:	add	w1, w18, #0x1
  f0:	mov	w18, w1
  f4:	cmp	w12, w14
  f8:	b.ne	b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb8>  // b.any
  fc:	cmp	x13, x16
 100:	mov	w18, w1
 104:	b.eq	94 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x94>  // b.none
 108:	b	b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb8>
 10c:	cmp	x15, #0x0
 110:	mov	w0, wzr
 114:	csel	x8, x8, x15, eq  // eq = none
 118:	b	94 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x94>
 11c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 120:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 124:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x252                 	// #594
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapInfoISt4pairIjNS_12AttributeSetEEE12getHashValueERKS3_:

0000000000000000 <_ZN4llvm12DenseMapInfoISt4pairIjNS_12AttributeSetEEE12getHashValueERKS3_>:
   0:	ldr	w8, [x0]
   4:	ldr	w9, [x0, #8]
   8:	mov	w10, #0x25                  	// #37
   c:	mov	x11, #0xffffffffffffffff    	// #-1
  10:	mul	w8, w8, w10
  14:	lsr	w10, w9, #4
  18:	eor	w9, w10, w9, lsr #9
  1c:	eor	x10, x11, x9, lsl #32
  20:	bfi	x9, x8, #32, #32
  24:	add	x8, x9, x10
  28:	eor	x8, x8, x8, lsr #22
  2c:	eor	x9, x11, x8, lsl #13
  30:	add	x8, x8, x9
  34:	eor	x8, x8, x8, lsr #8
  38:	add	x8, x8, x8, lsl #3
  3c:	eor	x8, x8, x8, lsr #15
  40:	eor	x9, x11, x8, lsl #27
  44:	add	x8, x8, x9
  48:	lsr	x9, x8, #31
  4c:	eor	w0, w9, w8
  50:	ret

Disassembly of section .text._ZN4llvm19CachedHashStringRefC2ENS_9StringRefE:

0000000000000000 <_ZN4llvm19CachedHashStringRefC2ENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x21, x0
  18:	mov	x0, x1
  1c:	mov	x1, x2
  20:	mov	x19, x2
  24:	bl	0 <_ZN4llvm19CachedHashStringRefC2ENS_9StringRefE>
  28:	lsr	x8, x19, #32
  2c:	str	x20, [x21]
  30:	stp	w19, w0, [x21, #8]
  34:	cbnz	x8, 48 <_ZN4llvm19CachedHashStringRefC2ENS_9StringRefE+0x48>
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldr	x21, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm19CachedHashStringRefC2ENS_9StringRefE>
  4c:	adrp	x1, 0 <_ZN4llvm19CachedHashStringRefC2ENS_9StringRefE>
  50:	adrp	x3, 0 <_ZN4llvm19CachedHashStringRefC2ENS_9StringRefE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x29                  	// #41
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_:

0000000000000000 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmn	x0, #0x2
   c:	b.eq	24 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_+0x24>  // b.none
  10:	cmn	x0, #0x1
  14:	b.eq	44 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_+0x44>  // b.none
  18:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>
  28:	adrp	x1, 0 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>
  2c:	adrp	x3, 0 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xeb                  	// #235
  40:	bl	0 <__assert_fail>
  44:	adrp	x0, 0 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>
  48:	adrp	x1, 0 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>
  4c:	adrp	x3, 0 <_ZN4llvm12DenseMapInfoINS_9StringRefEE12getHashValueES1_>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0xe9                  	// #233
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldr	x23, [x0, #16]
  1c:	mov	x21, x1
  20:	mov	x19, x0
  24:	add	x22, x0, #0x8
  28:	cbz	x23, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x74>
  2c:	mov	x20, x22
  30:	add	x0, x23, #0x20
  34:	mov	x1, x21
  38:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  3c:	add	x8, x23, #0x18
  40:	add	x9, x23, #0x10
  44:	cmp	w0, #0x0
  48:	csel	x8, x8, x9, lt  // lt = tstop
  4c:	csel	x20, x20, x23, lt  // lt = tstop
  50:	ldr	x23, [x8]
  54:	cbnz	x23, 30 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x30>
  58:	cmp	x20, x22
  5c:	b.eq	78 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x78>  // b.none
  60:	add	x1, x20, #0x20
  64:	mov	x0, x21
  68:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  6c:	tbz	w0, #31, 9c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x9c>
  70:	b	78 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x78>
  74:	mov	x20, x22
  78:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
  7c:	add	x2, x2, #0x0
  80:	add	x3, x29, #0x18
  84:	add	x4, sp, #0x8
  88:	mov	x0, x19
  8c:	mov	x1, x20
  90:	str	x21, [x29, #24]
  94:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
  98:	mov	x20, x0
  9c:	add	x0, x20, #0x40
  a0:	ldp	x20, x19, [sp, #64]
  a4:	ldp	x22, x21, [sp, #48]
  a8:	ldr	x23, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x50
  b4:	ret

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldr	x23, [x0, #16]
  1c:	mov	x21, x1
  20:	mov	x19, x0
  24:	add	x22, x0, #0x8
  28:	cbz	x23, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x74>
  2c:	mov	x20, x22
  30:	add	x0, x23, #0x20
  34:	mov	x1, x21
  38:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  3c:	add	x8, x23, #0x18
  40:	add	x9, x23, #0x10
  44:	cmp	w0, #0x0
  48:	csel	x8, x8, x9, lt  // lt = tstop
  4c:	csel	x20, x20, x23, lt  // lt = tstop
  50:	ldr	x23, [x8]
  54:	cbnz	x23, 30 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x30>
  58:	cmp	x20, x22
  5c:	b.eq	78 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x78>  // b.none
  60:	add	x1, x20, #0x20
  64:	mov	x0, x21
  68:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  6c:	tbz	w0, #31, 9c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x9c>
  70:	b	78 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x78>
  74:	mov	x20, x22
  78:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>
  7c:	add	x2, x2, #0x0
  80:	add	x3, x29, #0x18
  84:	add	x4, sp, #0x8
  88:	mov	x0, x19
  8c:	mov	x1, x20
  90:	str	x21, [x29, #24]
  94:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>
  98:	mov	x20, x0
  9c:	add	x0, x20, #0x40
  a0:	ldp	x20, x19, [sp, #64]
  a4:	ldp	x22, x21, [sp, #48]
  a8:	ldr	x23, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x50
  b4:	ret

Disassembly of section .text._ZNK4llvm14GlobalVariable19getAttributesAsListEj:

0000000000000000 <_ZNK4llvm14GlobalVariable19getAttributesAsListEj>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	ldr	x8, [x0, #72]
  10:	cbz	x8, 30 <_ZNK4llvm14GlobalVariable19getAttributesAsListEj+0x30>
  14:	str	w1, [sp]
  18:	str	x8, [sp, #8]
  1c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  20:	mov	x1, sp
  24:	mov	w2, #0x1                   	// #1
  28:	bl	0 <_ZN4llvm13AttributeList3getERNS_11LLVMContextENS_8ArrayRefISt4pairIjNS_12AttributeSetEEEE>
  2c:	b	34 <_ZNK4llvm14GlobalVariable19getAttributesAsListEj+0x34>
  30:	mov	x0, xzr
  34:	ldp	x29, x30, [sp, #16]
  38:	add	sp, sp, #0x20
  3c:	ret

Disassembly of section .text._ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE:

0000000000000000 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	str	x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	str	x1, [x29, #24]
  14:	cbz	x1, 48 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE+0x48>
  18:	add	x19, x0, #0x180
  1c:	add	x1, x29, #0x18
  20:	mov	x2, sp
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  2c:	tbz	w0, #0, 50 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE+0x50>
  30:	ldr	w8, [x19, #24]
  34:	ldp	x10, x9, [x19]
  38:	ldr	x12, [sp]
  3c:	add	x11, x9, x8, lsl #4
  40:	str	x12, [sp, #48]
  44:	b	60 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE+0x60>
  48:	mov	w0, wzr
  4c:	b	9c <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE+0x9c>
  50:	ldr	w8, [x19, #24]
  54:	ldp	x10, x9, [x19]
  58:	add	x11, x9, x8, lsl #4
  5c:	str	x11, [sp, #48]
  60:	add	x8, x9, x8, lsl #4
  64:	add	x0, sp, #0x20
  68:	mov	x1, sp
  6c:	stp	x19, x10, [sp, #32]
  70:	str	x11, [sp, #56]
  74:	stp	x19, x10, [sp]
  78:	stp	x8, x8, [sp, #16]
  7c:	bl	0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  80:	tbz	w0, #0, ac <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE+0xac>
  84:	ldp	x8, x9, [sp, #32]
  88:	ldr	x8, [x8]
  8c:	cmp	x8, x9
  90:	b.ne	cc <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE+0xcc>  // b.any
  94:	ldr	x8, [sp, #48]
  98:	ldr	w0, [x8, #8]
  9c:	ldr	x19, [sp, #80]
  a0:	ldp	x29, x30, [sp, #64]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  b0:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  b4:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0xb3                  	// #179
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  d0:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  d4:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator18getAttributeListIDENS_13AttributeListE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x4b9                 	// #1209
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x1, x2
  18:	mov	x2, x3
  1c:	mov	x3, x4
  20:	mov	x21, x0
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  28:	mov	x19, x0
  2c:	add	x2, x0, #0x20
  30:	mov	x0, x21
  34:	mov	x1, x20
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  3c:	mov	x20, x0
  40:	cbz	x1, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x64>
  44:	mov	x2, x1
  48:	mov	x0, x21
  4c:	mov	x1, x20
  50:	mov	x3, x19
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  64:	ldr	x0, [x19, #32]
  68:	add	x8, x19, #0x30
  6c:	cmp	x0, x8
  70:	b.eq	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x78>  // b.none
  74:	bl	0 <_ZdlPv>
  78:	mov	x0, x19
  7c:	bl	0 <_ZdlPv>
  80:	mov	x0, x20
  84:	ldp	x20, x19, [sp, #32]
  88:	ldr	x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w0, #0x48                  	// #72
  10:	mov	x19, x2
  14:	bl	0 <_Znwm>
  18:	ldr	x8, [x19]
  1c:	add	x10, x0, #0x30
  20:	str	x10, [x0, #32]
  24:	mov	x9, x8
  28:	ldr	x11, [x9], #16
  2c:	cmp	x11, x9
  30:	b.eq	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_+0x44>  // b.none
  34:	str	x11, [x0, #32]
  38:	ldr	x10, [x8, #16]
  3c:	str	x10, [x0, #48]
  40:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_+0x4c>
  44:	ldr	q0, [x11]
  48:	str	q0, [x10]
  4c:	ldr	x10, [x8, #8]
  50:	str	x10, [x0, #40]
  54:	stp	x9, xzr, [x8]
  58:	ldr	x19, [sp, #16]
  5c:	strb	wzr, [x8, #16]
  60:	str	wzr, [x0, #64]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	add	x8, x0, #0x8
  14:	mov	x20, x0
  18:	cmp	x8, x1
  1c:	mov	x21, x2
  20:	b.eq	54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x54>  // b.none
  24:	add	x22, x1, #0x20
  28:	mov	x19, x1
  2c:	mov	x0, x21
  30:	mov	x1, x22
  34:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  38:	tbnz	w0, #31, 78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x78>
  3c:	mov	x0, x22
  40:	mov	x1, x21
  44:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  48:	tbnz	w0, #31, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb4>
  4c:	mov	x1, xzr
  50:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x114>
  54:	ldr	x8, [x20, #40]
  58:	cbz	x8, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xdc>
  5c:	ldr	x8, [x20, #32]
  60:	mov	x1, x21
  64:	add	x0, x8, #0x20
  68:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  6c:	tbz	w0, #31, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xdc>
  70:	ldr	x1, [x20, #32]
  74:	b	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf0>
  78:	ldr	x1, [x20, #24]
  7c:	cmp	x1, x19
  80:	b.eq	f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf8>  // b.none
  84:	mov	x0, x19
  88:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  8c:	mov	x22, x0
  90:	add	x0, x0, #0x20
  94:	mov	x1, x21
  98:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  9c:	tbz	w0, #31, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xdc>
  a0:	ldr	x8, [x22, #24]
  a4:	cmp	x8, #0x0
  a8:	csel	x8, xzr, x19, eq  // eq = none
  ac:	csel	x1, x22, x19, eq  // eq = none
  b0:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x110>
  b4:	ldr	x1, [x20, #32]
  b8:	cmp	x1, x19
  bc:	b.eq	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf0>  // b.none
  c0:	mov	x0, x19
  c4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  c8:	mov	x22, x0
  cc:	add	x1, x0, #0x20
  d0:	mov	x0, x21
  d4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  d8:	tbnz	w0, #31, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x100>
  dc:	mov	x0, x20
  e0:	mov	x1, x21
  e4:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
  e8:	mov	x19, x0
  ec:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x114>
  f0:	mov	x19, xzr
  f4:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x114>
  f8:	mov	x19, x1
  fc:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x114>
 100:	ldr	x8, [x19, #24]
 104:	cmp	x8, #0x0
 108:	csel	x8, xzr, x22, eq  // eq = none
 10c:	csel	x1, x19, x22, eq  // eq = none
 110:	mov	x19, x8
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldp	x22, x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x3
  14:	mov	x21, x2
  18:	mov	x20, x0
  1c:	cbz	x1, 28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x28>
  20:	mov	w0, #0x1                   	// #1
  24:	b	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x44>
  28:	add	x8, x20, #0x8
  2c:	cmp	x8, x21
  30:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x20>  // b.none
  34:	add	x0, x19, #0x20
  38:	add	x1, x21, #0x20
  3c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  40:	lsr	w0, w0, #31
  44:	add	x3, x20, #0x8
  48:	mov	x1, x19
  4c:	mov	x2, x21
  50:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  54:	ldr	x8, [x20, #40]
  58:	mov	x0, x19
  5c:	ldr	x21, [sp, #16]
  60:	add	x8, x8, #0x1
  64:	str	x8, [x20, #40]
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #16]
  14:	mov	x21, x0
  18:	mov	x20, x1
  1c:	cbz	x8, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x54>
  20:	add	x1, x8, #0x20
  24:	mov	x0, x20
  28:	mov	x19, x8
  2c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  30:	add	x8, x19, #0x10
  34:	add	x9, x19, #0x18
  38:	cmp	w0, #0x0
  3c:	csel	x8, x8, x9, lt  // lt = tstop
  40:	ldr	x8, [x8]
  44:	cbnz	x8, 20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x20>
  48:	mov	x22, x19
  4c:	tbz	w0, #31, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x70>
  50:	b	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x58>
  54:	add	x19, x21, #0x8
  58:	ldr	x8, [x21, #24]
  5c:	cmp	x8, x19
  60:	b.eq	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x8c>  // b.none
  64:	mov	x0, x19
  68:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  6c:	mov	x22, x0
  70:	add	x0, x22, #0x20
  74:	mov	x1, x20
  78:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  7c:	cmp	w0, #0x0
  80:	csel	x0, xzr, x22, lt  // lt = tstop
  84:	csel	x19, x19, xzr, lt  // lt = tstop
  88:	b	90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x90>
  8c:	mov	x0, xzr
  90:	mov	x1, x19
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x0
  18:	mov	w0, #0x48                  	// #72
  1c:	mov	x21, x3
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x8, [x21]
  2c:	add	x23, x0, #0x30
  30:	mov	x21, x0
  34:	str	x23, [x21, #32]!
  38:	ldp	x1, x8, [x8]
  3c:	mov	x19, x0
  40:	mov	x0, x21
  44:	add	x2, x1, x8
  48:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  4c:	mov	x0, x20
  50:	mov	x1, x22
  54:	mov	x2, x21
  58:	str	wzr, [x19, #64]
  5c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  60:	mov	x22, x0
  64:	cbz	x1, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x8c>
  68:	mov	x2, x1
  6c:	mov	x0, x20
  70:	mov	x1, x22
  74:	mov	x3, x19
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldr	x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  8c:	ldr	x0, [x21]
  90:	cmp	x0, x23
  94:	b.eq	9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x9c>  // b.none
  98:	bl	0 <_ZdlPv>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZdlPv>
  a4:	mov	x0, x22
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEELb1EEneERKS7_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x4
  18:	cmn	x10, #0x4
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x4
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0xa0>  // b.none
  74:	cmn	x14, #0x8
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x50>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  28:	ldr	x0, [x20, #32]
  2c:	ldr	x21, [x20, #16]
  30:	add	x8, x20, #0x30
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x40>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	mov	x0, x20
  44:	bl	0 <_ZdlPv>
  48:	mov	x20, x21
  4c:	cbnz	x21, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x1c>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 38 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_+0x38>
  10:	ldrb	w8, [x8, #16]
  14:	mov	w0, #0x1                   	// #1
  18:	cbz	w8, 30 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_+0x30>
  1c:	cmp	w8, #0x3
  20:	b.eq	30 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_+0x30>  // b.none
  24:	sub	w8, w8, #0x1
  28:	cmp	w8, #0x2
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>
  3c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>
  40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x69                  	// #105
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	sub	x9, x9, x8
  24:	cmp	x21, x9
  28:	b.ls	40 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_+0x40>  // b.plast
  2c:	add	x2, x21, x8
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x8                   	// #8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	cmp	x21, #0x0
  44:	b.le	70 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_+0x70>
  48:	ldr	x9, [x19]
  4c:	ldr	w8, [x19, #8]
  50:	add	x10, x21, #0x1
  54:	add	x9, x9, x8, lsl #3
  58:	ldrb	w11, [x20], #1
  5c:	sub	x10, x10, #0x1
  60:	cmp	x10, #0x1
  64:	str	x11, [x9], #8
  68:	b.gt	58 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_+0x58>
  6c:	b	74 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_+0x74>
  70:	ldr	w8, [x19, #8]
  74:	ldr	w9, [x19, #12]
  78:	add	x8, x21, x8
  7c:	cmp	x8, x9
  80:	b.hi	98 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_+0x98>  // b.pmore
  84:	str	w8, [x19, #8]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_>
  9c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_>
  a0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvEEvT_SE_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x43                  	// #67
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt14getActiveWordsEv:

0000000000000000 <_ZNK4llvm5APInt14getActiveWordsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	2c <_ZNK4llvm5APInt14getActiveWordsEv+0x2c>  // b.pmore
  18:	ldr	x8, [x0]
  1c:	clz	x8, x8
  20:	add	w8, w19, w8
  24:	sub	w0, w8, #0x40
  28:	b	30 <_ZNK4llvm5APInt14getActiveWordsEv+0x30>
  2c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  30:	subs	w8, w19, w0
  34:	ldr	x19, [sp, #16]
  38:	sub	w8, w8, #0x1
  3c:	lsr	w8, w8, #6
  40:	mov	w9, #0x1                   	// #1
  44:	csinc	w0, w9, w8, eq  // eq = none
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNK4llvm7APFloat14bitcastToAPIntEv:

0000000000000000 <_ZNK4llvm7APFloat14bitcastToAPIntEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x0, #8]
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	40 <_ZNK4llvm7APFloat14bitcastToAPIntEv+0x40>  // b.none
  28:	add	x0, x19, #0x8
  2c:	mov	x8, x20
  30:	ldp	x20, x19, [sp, #32]
  34:	ldr	x21, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	b	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
  40:	add	x0, x19, #0x8
  44:	mov	x8, x20
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w20, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w20, #0x40
  18:	b.ls	34 <_ZNK4llvm5APInt12getZExtValueEv+0x34>  // b.plast
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  24:	sub	w8, w20, w0
  28:	cmp	w8, #0x41
  2c:	b.cs	44 <_ZNK4llvm5APInt12getZExtValueEv+0x44>  // b.hs, b.nlast
  30:	ldr	x19, [x19]
  34:	ldr	x0, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  4c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x657                 	// #1623
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4User10getOperandEj:

0000000000000000 <_ZNK4llvm4User10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cmp	w8, w1
  14:	b.ls	44 <_ZNK4llvm4User10getOperandEj+0x44>  // b.plast
  18:	tbnz	w9, #30, 2c <_ZNK4llvm4User10getOperandEj+0x2c>
  1c:	mov	w9, #0x18                  	// #24
  20:	mneg	x8, x8, x9
  24:	add	x8, x0, x8
  28:	b	30 <_ZNK4llvm4User10getOperandEj+0x30>
  2c:	ldur	x8, [x0, #-8]
  30:	mov	w9, #0x18                  	// #24
  34:	umull	x9, w1, w9
  38:	ldr	x0, [x8, x9]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm4User10getOperandEj>
  48:	adrp	x1, 0 <_ZNK4llvm4User10getOperandEj>
  4c:	adrp	x3, 0 <_ZNK4llvm4User10getOperandEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0xaa                  	// #170
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w8, #0x40
  18:	b.hi	34 <_ZNK4llvm5APInt12getSExtValueEv+0x34>  // b.pmore
  1c:	cbz	w8, 58 <_ZNK4llvm5APInt12getSExtValueEv+0x58>
  20:	ldr	x9, [x19]
  24:	neg	x8, x8
  28:	lsl	x9, x9, x8
  2c:	asr	x0, x9, x8
  30:	b	4c <_ZNK4llvm5APInt12getSExtValueEv+0x4c>
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt12getSExtValueEv>
  3c:	cmp	w0, #0x41
  40:	b.cs	78 <_ZNK4llvm5APInt12getSExtValueEv+0x78>  // b.hs, b.nlast
  44:	ldr	x8, [x19]
  48:	ldr	x0, [x8]
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  5c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  60:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x307                 	// #775
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  7c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  80:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x663                 	// #1635
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	sub	w1, w8, #0x1
  18:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  1c:	ldr	w20, [x19, #8]
  20:	tbz	w0, #0, 30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  2c:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  30:	cmp	w20, #0x40
  34:	b.hi	4c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x4c>  // b.pmore
  38:	ldr	x8, [x19]
  3c:	clz	x8, x8
  40:	add	w8, w20, w8
  44:	sub	w0, w8, #0x40
  48:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  4c:	mov	x0, x19
  50:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  54:	sub	w8, w20, w0
  58:	ldp	x20, x19, [sp, #16]
  5c:	add	w0, w8, #0x1
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZNK4llvm5APInt16countLeadingOnesEv:

0000000000000000 <_ZNK4llvm5APInt16countLeadingOnesEv>:
   0:	ldr	w8, [x0, #8]
   4:	cmp	w8, #0x40
   8:	b.hi	30 <_ZNK4llvm5APInt16countLeadingOnesEv+0x30>  // b.pmore
   c:	ldr	x9, [x0]
  10:	neg	x8, x8
  14:	lsl	x8, x9, x8
  18:	mvn	x9, x8
  1c:	cmn	x8, #0x1
  20:	clz	x8, x9
  24:	mov	w9, #0x40                  	// #64
  28:	csel	w0, w9, w8, eq  // eq = none
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZNK4llvm5APIntixEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZNK4llvm5APIntixEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	tst	x9, x8
  38:	cset	w0, ne  // ne = any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  48:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  4c:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x472                 	// #1138
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_14SequentialTypeEPKNS_4TypeES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_14SequentialTypeEPKNS_4TypeES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 30 <_ZN4llvm13isa_impl_wrapINS_14SequentialTypeEPKNS_4TypeES4_E4doitERKS4_+0x30>
  10:	ldrb	w8, [x8, #8]
  14:	cmp	w8, #0xe
  18:	cset	w9, eq  // eq = none
  1c:	cmp	w8, #0x10
  20:	cset	w8, eq  // eq = none
  24:	orr	w0, w9, w8
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_14SequentialTypeEPKNS_4TypeES4_E4doitERKS4_>
  34:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_14SequentialTypeEPKNS_4TypeES4_E4doitERKS4_>
  38:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_14SequentialTypeEPKNS_4TypeES4_E4doitERKS4_>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt3ugtEm:

0000000000000000 <_ZNK4llvm5APInt3ugtEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w21, [x0, #8]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	cmp	w21, #0x41
  20:	b.cc	40 <_ZNK4llvm5APInt3ugtEm+0x40>  // b.lo, b.ul, b.last
  24:	mov	x0, x20
  28:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  2c:	sub	w8, w21, w0
  30:	cmp	w8, #0x40
  34:	b.ls	40 <_ZNK4llvm5APInt3ugtEm+0x40>  // b.plast
  38:	mov	w0, #0x1                   	// #1
  3c:	b	50 <_ZNK4llvm5APInt3ugtEm+0x50>
  40:	mov	x0, x20
  44:	bl	0 <_ZNK4llvm5APInt3ugtEm>
  48:	cmp	x0, x19
  4c:	cset	w0, hi  // hi = pmore
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZN4llvm7APFloat7StorageD2Ev:

0000000000000000 <_ZN4llvm7APFloat7StorageD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  18:	cmp	x0, x20
  1c:	b.eq	30 <_ZN4llvm7APFloat7StorageD2Ev+0x30>  // b.none
  20:	mov	x0, x19
  24:	ldp	x20, x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  30:	ldr	x1, [x19, #8]!
  34:	cbz	x1, 40 <_ZN4llvm7APFloat7StorageD2Ev+0x40>
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm7APFloat7StorageD2Ev>
  40:	str	xzr, [x19]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_:

0000000000000000 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_>:
   0:	cbz	x1, 4c <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_+0x4c>
   4:	stp	x29, x30, [sp, #-48]!
   8:	str	x21, [sp, #16]
   c:	stp	x20, x19, [sp, #32]
  10:	mov	x29, sp
  14:	mov	x19, x1
  18:	ldr	x8, [x19, #-8]!
  1c:	cbz	x8, 38 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_+0x38>
  20:	sub	x20, x1, #0x18
  24:	lsl	x21, x8, #5
  28:	add	x0, x20, x21
  2c:	bl	0 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_>
  30:	subs	x21, x21, #0x20
  34:	b.ne	28 <_ZNKSt14default_deleteIA_N4llvm7APFloatEEclIS1_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS2_EE5valueEvE4typeEPS6_+0x28>  // b.any
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	b	0 <_ZdaPv>
  4c:	ret

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_25OverflowingBinaryOperatorEPKNS_5ValueES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 5c <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE+0x5c>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cc	20 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE+0x20>  // b.lo, b.ul, b.last
  18:	sub	w8, w8, #0x25
  1c:	b	30 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE+0x30>
  20:	cmp	w8, #0x5
  24:	b.ne	50 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE+0x50>  // b.any
  28:	ldrh	w8, [x0, #18]
  2c:	sub	w8, w8, #0xd
  30:	ror	w9, w8, #1
  34:	cmp	w9, #0x7
  38:	b.cs	50 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE+0x50>  // b.hs, b.nlast
  3c:	lsr	w8, w8, #1
  40:	mov	w9, #0x47                  	// #71
  44:	lsr	w8, w9, w8
  48:	and	w0, w8, #0x1
  4c:	b	54 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE+0x54>
  50:	mov	w0, wzr
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE>
  60:	adrp	x1, 0 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE>
  64:	adrp	x3, 0 <_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_5ValueES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14FPMathOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>
   c:	ldrb	w9, [x0, #16]
  10:	subs	w8, w9, #0x18
  14:	b.cs	24 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x24>  // b.hs, b.nlast
  18:	cmp	w9, #0x5
  1c:	b.ne	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.any
  20:	ldrh	w8, [x0, #18]
  24:	cmp	w8, #0x39
  28:	b.hi	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.pmore
  2c:	mov	x10, #0x5000                	// #20480
  30:	mov	w9, #0x1                   	// #1
  34:	movk	x10, #0x125, lsl #16
  38:	lsl	x9, x9, x8
  3c:	movk	x10, #0x40, lsl #48
  40:	tst	x9, x10
  44:	b.eq	50 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x50>  // b.none
  48:	mov	w0, #0x1                   	// #1
  4c:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  50:	mov	w9, #0x1                   	// #1
  54:	lsl	x8, x9, x8
  58:	tst	x8, #0x380000000000000
  5c:	b.eq	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.none
  60:	ldr	x8, [x0]
  64:	cbz	x8, 7c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x7c>
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xe
  70:	b.ne	a4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xa4>  // b.any
  74:	ldr	x8, [x8, #24]
  78:	cbnz	x8, 68 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x68>
  7c:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  80:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  84:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	mov	w0, wzr
  a0:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  a4:	cmp	w9, #0x10
  a8:	b.ne	b8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xb8>  // b.any
  ac:	ldr	x8, [x8, #16]
  b0:	ldr	x8, [x8]
  b4:	ldrb	w9, [x8, #8]
  b8:	sub	w8, w9, #0x1
  bc:	cmp	w8, #0x6
  c0:	cset	w0, cc  // cc = lo, ul, last
  c4:	ldp	x29, x30, [sp], #16
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d0:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d4:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 48 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_+0x48>
  10:	ldrb	w9, [x8, #16]
  14:	cmp	w9, #0x18
  18:	b.cc	24 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_+0x24>  // b.lo, b.ul, b.last
  1c:	cmp	w9, #0x3a
  20:	b	34 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_+0x34>
  24:	cmp	w9, #0x5
  28:	b.ne	3c <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_+0x3c>  // b.any
  2c:	ldrh	w8, [x8, #18]
  30:	cmp	w8, #0x22
  34:	cset	w0, eq  // eq = none
  38:	b	40 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_+0x40>
  3c:	mov	w0, wzr
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_>
  4c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_>
  50:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11GEPOperatorEPKNS_8ConstantES4_E4doitERKS4_>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIjSaIjEE6resizeEm:

0000000000000000 <_ZNSt6vectorIjSaIjEE6resizeEm>:
   0:	ldp	x9, x8, [x0]
   4:	sub	x10, x8, x9
   8:	asr	x10, x10, #2
   c:	cmp	x10, x1
  10:	b.cs	1c <_ZNSt6vectorIjSaIjEE6resizeEm+0x1c>  // b.hs, b.nlast
  14:	sub	x1, x1, x10
  18:	b	0 <_ZNSt6vectorIjSaIjEE6resizeEm>
  1c:	b.ls	30 <_ZNSt6vectorIjSaIjEE6resizeEm+0x30>  // b.plast
  20:	add	x9, x9, x1, lsl #2
  24:	cmp	x9, x8
  28:	b.eq	30 <_ZNSt6vectorIjSaIjEE6resizeEm+0x30>  // b.none
  2c:	str	x9, [x0, #8]
  30:	ret

Disassembly of section .text._ZNK4llvm15ValueEnumerator12getMDStringsEv:

0000000000000000 <_ZNK4llvm15ValueEnumerator12getMDStringsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x10, [x0, #208]
   c:	ldr	w9, [x0, #540]
  10:	ldr	w1, [x0, #544]
  14:	sub	x10, x10, x8
  18:	add	x11, x1, x9
  1c:	cmp	x11, x10, asr #3
  20:	b.hi	30 <_ZNK4llvm15ValueEnumerator12getMDStringsEv+0x30>  // b.pmore
  24:	add	x0, x8, x9, lsl #3
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator12getMDStringsEv>
  34:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator12getMDStringsEv>
  38:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator12getMDStringsEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0xbd                  	// #189
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w21, w1
  18:	mov	x20, x0
  1c:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x54>
  20:	mov	w9, w21
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldr	x21, [sp, #16]
  34:	mov	w8, w3
  38:	orr	x6, x9, #0x100000000
  3c:	mov	w3, #0x2                   	// #2
  40:	mov	w1, w8
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w21
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  74:	mov	w1, #0x2                   	// #2
  78:	mov	w2, #0x6                   	// #6
  7c:	mov	x0, x20
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  84:	mov	x21, xzr
  88:	ldr	x1, [x19, x21]
  8c:	mov	w2, #0x6                   	// #6
  90:	mov	x0, x20
  94:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  98:	add	x21, x21, #0x8
  9c:	cmp	x21, #0x10
  a0:	b.ne	88 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret

Disassembly of section .text._ZNSt6vectorImSaImEE7reserveEm:

0000000000000000 <_ZNSt6vectorImSaImEE7reserveEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #60
  14:	cbnz	x8, 98 <_ZNSt6vectorImSaImEE7reserveEm+0x98>
  18:	ldr	x9, [x0, #16]
  1c:	ldr	x8, [x0]
  20:	mov	x19, x1
  24:	mov	x20, x0
  28:	sub	x9, x9, x8
  2c:	cmp	x1, x9, asr #3
  30:	b.ls	88 <_ZNSt6vectorImSaImEE7reserveEm+0x88>  // b.plast
  34:	ldr	x9, [x20, #8]
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	sub	x22, x9, x8
  44:	bl	0 <_ZNSt6vectorImSaImEE7reserveEm>
  48:	ldp	x1, x8, [x20]
  4c:	mov	x21, x0
  50:	sub	x2, x8, x1
  54:	cmp	x2, #0x1
  58:	b.lt	68 <_ZNSt6vectorImSaImEE7reserveEm+0x68>  // b.tstop
  5c:	mov	x0, x21
  60:	bl	0 <memmove>
  64:	ldr	x1, [x20]
  68:	asr	x22, x22, #3
  6c:	cbz	x1, 78 <_ZNSt6vectorImSaImEE7reserveEm+0x78>
  70:	mov	x0, x1
  74:	bl	0 <_ZdlPv>
  78:	add	x8, x21, x22, lsl #3
  7c:	add	x9, x21, x19, lsl #3
  80:	stp	x21, x8, [x20]
  84:	str	x9, [x20, #16]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldp	x22, x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZNSt6vectorImSaImEE7reserveEm>
  9c:	add	x0, x0, #0x0
  a0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	ldr	x2, [x2]
  1c:	ldr	x8, [x20, #8]
  20:	mov	w21, w1
  24:	mov	x19, x0
  28:	sub	x23, x8, x2
  2c:	cbz	w3, 64 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x64>
  30:	asr	x8, x23, #3
  34:	mov	w9, w21
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x9, #0x100000000
  4c:	mov	w1, w3
  50:	mov	x3, x8
  54:	mov	x4, xzr
  58:	mov	x5, xzr
  5c:	ldp	x29, x30, [sp], #64
  60:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  64:	ldr	w2, [x19, #16]
  68:	mov	w1, #0x3                   	// #3
  6c:	mov	x0, x19
  70:	lsr	x22, x23, #3
  74:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  78:	mov	w2, #0x6                   	// #6
  7c:	mov	x0, x19
  80:	mov	w1, w21
  84:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  88:	mov	w2, #0x6                   	// #6
  8c:	mov	x0, x19
  90:	mov	w1, w22
  94:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  98:	cbz	w22, c8 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xc8>
  9c:	ubfx	x8, x23, #3, #32
  a0:	mov	x21, xzr
  a4:	lsl	x22, x8, #3
  a8:	ldr	x8, [x20]
  ac:	mov	w2, #0x6                   	// #6
  b0:	mov	x0, x19
  b4:	ldr	x1, [x8, x21]
  b8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  bc:	add	x21, x21, #0x8
  c0:	cmp	x22, x21
  c4:	b.ne	a8 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xa8>  // b.any
  c8:	ldp	x20, x19, [sp, #48]
  cc:	ldp	x22, x21, [sp, #32]
  d0:	ldr	x23, [sp, #16]
  d4:	ldp	x29, x30, [sp], #64
  d8:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>:
   0:	cbz	x1, e8 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xe8>
   4:	stp	x29, x30, [sp, #-64]!
   8:	stp	x24, x23, [sp, #16]
   c:	stp	x22, x21, [sp, #32]
  10:	stp	x20, x19, [sp, #48]
  14:	mov	x29, sp
  18:	mov	x22, x0
  1c:	mov	x24, x0
  20:	ldr	x21, [x22, #8]!
  24:	ldr	x8, [x0]
  28:	ldr	x9, [x24, #16]!
  2c:	mov	x19, x1
  30:	mov	x20, x0
  34:	sub	x9, x9, x21
  38:	cmp	x1, x9, asr #2
  3c:	b.ls	bc <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xbc>  // b.plast
  40:	adrp	x2, 0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  44:	sub	x8, x21, x8
  48:	add	x2, x2, #0x0
  4c:	mov	x0, x20
  50:	mov	x1, x19
  54:	asr	x23, x8, #2
  58:	bl	0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  5c:	mov	x21, x0
  60:	mov	x0, x20
  64:	mov	x1, x21
  68:	bl	0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  6c:	add	x23, x0, x23, lsl #2
  70:	mov	x22, x0
  74:	lsl	x2, x19, #2
  78:	mov	x0, x23
  7c:	mov	w1, wzr
  80:	bl	0 <memset>
  84:	ldp	x1, x8, [x20]
  88:	sub	x2, x8, x1
  8c:	cmp	x2, #0x1
  90:	b.lt	a0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xa0>  // b.tstop
  94:	mov	x0, x22
  98:	bl	0 <memmove>
  9c:	ldr	x1, [x20]
  a0:	cbz	x1, ac <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xac>
  a4:	mov	x0, x1
  a8:	bl	0 <_ZdlPv>
  ac:	add	x8, x23, x19, lsl #2
  b0:	stp	x22, x8, [x20]
  b4:	add	x8, x22, x21, lsl #2
  b8:	b	d4 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xd4>
  bc:	lsl	x2, x19, #2
  c0:	mov	x0, x21
  c4:	mov	w1, wzr
  c8:	bl	0 <memset>
  cc:	add	x8, x21, x19, lsl #2
  d0:	mov	x24, x22
  d4:	str	x8, [x24]
  d8:	ldp	x20, x19, [sp, #48]
  dc:	ldp	x22, x21, [sp, #32]
  e0:	ldp	x24, x23, [sp, #16]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret

Disassembly of section .text._ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  14:	sub	x10, x8, x9, asr #2
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #2
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #61
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #61
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #2
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm15BitstreamWriterD2Ev:

0000000000000000 <_ZN4llvm15BitstreamWriterD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	cbnz	w8, 7c <_ZN4llvm15BitstreamWriterD2Ev+0x7c>
  14:	mov	x19, x0
  18:	ldr	x8, [x19, #48]!
  1c:	ldr	x9, [x19, #8]
  20:	cmp	x8, x9
  24:	b.ne	5c <_ZN4llvm15BitstreamWriterD2Ev+0x5c>  // b.any
  28:	mov	x20, x0
  2c:	ldr	x8, [x20, #24]!
  30:	ldr	x9, [x20, #8]
  34:	cmp	x8, x9
  38:	b.ne	5c <_ZN4llvm15BitstreamWriterD2Ev+0x5c>  // b.any
  3c:	add	x0, x0, #0x48
  40:	bl	0 <_ZN4llvm15BitstreamWriterD2Ev>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriterD2Ev>
  4c:	mov	x0, x20
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZN4llvm15BitstreamWriterD2Ev>
  5c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriterD2Ev>
  60:	adrp	x1, 0 <_ZN4llvm15BitstreamWriterD2Ev>
  64:	adrp	x3, 0 <_ZN4llvm15BitstreamWriterD2Ev>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x59                  	// #89
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriterD2Ev>
  80:	adrp	x1, 0 <_ZN4llvm15BitstreamWriterD2Ev>
  84:	adrp	x3, 0 <_ZN4llvm15BitstreamWriterD2Ev>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x58                  	// #88
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	38 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x38>  // b.none
  1c:	mov	x20, x0
  20:	add	x0, x19, #0x8
  24:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev>
  28:	add	x19, x19, #0x20
  2c:	cmp	x21, x19
  30:	b.ne	20 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x20>  // b.any
  34:	ldr	x19, [x20]
  38:	cbz	x19, 50 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x50>
  3c:	mov	x0, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZdlPv>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	38 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x38>  // b.none
  1c:	mov	x20, x0
  20:	add	x0, x19, #0x10
  24:	bl	0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev>
  28:	add	x19, x19, #0x28
  2c:	cmp	x21, x19
  30:	b.ne	20 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x20>  // b.any
  34:	ldr	x19, [x20]
  38:	cbz	x19, 50 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x50>
  3c:	mov	x0, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZdlPv>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNSt12_Vector_baseImSaImEE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseImSaImEE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseImSaImEE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseImSaImEE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:

0000000000000000 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZNKSt6vectorImSaImEE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorImSaImEE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorImSaImEE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6MDNode7classofEPKNS_8MetadataE:

0000000000000000 <_ZN4llvm6MDNode7classofEPKNS_8MetadataE>:
   0:	ldrb	w8, [x0]
   4:	sub	w8, w8, #0x4
   8:	cmp	w8, #0x1c
   c:	cset	w0, cc  // cc = lo, ul, last
  10:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	x1, [x8, x22, lsl #3]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x1, [sp, #8]
  10:	add	x1, sp, #0x8
  14:	mov	x2, sp
  18:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_>
  1c:	tbz	w0, #0, 34 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_+0x34>
  20:	ldr	x8, [sp]
  24:	ldr	x9, [x8, #8]
  28:	and	x8, x9, #0xffffffff00000000
  2c:	and	x9, x9, #0xffffffff
  30:	b	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_+0x3c>
  34:	mov	x8, xzr
  38:	mov	x9, xzr
  3c:	ldp	x29, x30, [sp, #16]
  40:	orr	x0, x9, x8
  44:	add	sp, sp, #0x20
  48:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x4
  18:	cmn	x10, #0x4
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x4
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0xa0>  // b.none
  74:	cmn	x14, #0x8
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE:

0000000000000000 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x0, x0, #0x100
   c:	bl	0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  10:	lsr	x8, x0, #32
  14:	cbz	w8, 24 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x24>
  18:	sub	w0, w8, #0x1
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  28:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  2c:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x9b                  	// #155
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DILocation8getScopeEv:

0000000000000000 <_ZNK4llvm10DILocation8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 34 <_ZNK4llvm10DILocation8getScopeEv+0x34>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 54 <_ZNK4llvm10DILocation8getScopeEv+0x54>
  1c:	ldrb	w8, [x0]
  20:	sub	w8, w8, #0x11
  24:	cmp	w8, #0x3
  28:	b.cs	74 <_ZNK4llvm10DILocation8getScopeEv+0x74>  // b.hs, b.nlast
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm10DILocation8getScopeEv>
  38:	adrp	x1, 0 <_ZNK4llvm10DILocation8getScopeEv>
  3c:	adrp	x3, 0 <_ZNK4llvm10DILocation8getScopeEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm10DILocation8getScopeEv>
  58:	adrp	x1, 0 <_ZNK4llvm10DILocation8getScopeEv>
  5c:	adrp	x3, 0 <_ZNK4llvm10DILocation8getScopeEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x69                  	// #105
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZNK4llvm10DILocation8getScopeEv>
  78:	adrp	x1, 0 <_ZNK4llvm10DILocation8getScopeEv>
  7c:	adrp	x3, 0 <_ZNK4llvm10DILocation8getScopeEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x108                 	// #264
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DILocation12getInlinedAtEv:

0000000000000000 <_ZNK4llvm10DILocation12getInlinedAtEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x2
  10:	b.ne	48 <_ZNK4llvm10DILocation12getInlinedAtEv+0x48>  // b.any
  14:	ldur	x0, [x0, #-8]
  18:	cbz	x0, 4c <_ZNK4llvm10DILocation12getInlinedAtEv+0x4c>
  1c:	ldrb	w8, [x0]
  20:	cmp	w8, #0x5
  24:	b.eq	4c <_ZNK4llvm10DILocation12getInlinedAtEv+0x4c>  // b.none
  28:	adrp	x0, 0 <_ZNK4llvm10DILocation12getInlinedAtEv>
  2c:	adrp	x1, 0 <_ZNK4llvm10DILocation12getInlinedAtEv>
  30:	adrp	x3, 0 <_ZNK4llvm10DILocation12getInlinedAtEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x134                 	// #308
  44:	bl	0 <__assert_fail>
  48:	mov	x0, xzr
  4c:	ldp	x29, x30, [sp], #16
  50:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x0, #8]
  18:	sub	x21, x2, x1
  1c:	asr	x23, x21, #3
  20:	mov	x22, x2
  24:	sub	x9, x9, x8
  28:	mov	x20, x1
  2c:	mov	x19, x0
  30:	cmp	x23, x9
  34:	b.ls	4c <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_+0x4c>  // b.plast
  38:	add	x2, x23, x8
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  4c:	cmp	x20, x22
  50:	b.eq	6c <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_+0x6c>  // b.none
  54:	ldr	x8, [x19]
  58:	ldr	w9, [x19, #8]
  5c:	mov	x1, x20
  60:	mov	x2, x21
  64:	add	x0, x8, x9, lsl #3
  68:	bl	0 <memcpy>
  6c:	ldp	w8, w9, [x19, #8]
  70:	add	x8, x23, x8
  74:	cmp	x8, x9
  78:	b.hi	94 <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_+0x94>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #48]
  84:	ldp	x22, x21, [sp, #32]
  88:	ldr	x23, [sp, #16]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKmvEEvT_S5_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x43                  	// #67
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm26DIGlobalVariableExpression11getVariableEv:

0000000000000000 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 30 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv+0x30>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 28 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv+0x28>
  1c:	ldrb	w8, [x0]
  20:	cmp	w8, #0x18
  24:	b.ne	50 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv+0x50>  // b.any
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>
  34:	adrp	x1, 0 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>
  38:	adrp	x3, 0 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x436                 	// #1078
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>
  54:	adrp	x1, 0 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>
  58:	adrp	x3, 0 <_ZNK4llvm26DIGlobalVariableExpression11getVariableEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x134                 	// #308
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm26DIGlobalVariableExpression13getExpressionEv:

0000000000000000 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	34 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 54 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv+0x54>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x6
  28:	b.ne	74 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv+0x74>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  38:	adrp	x1, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  3c:	adrp	x3, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  58:	adrp	x1, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  5c:	adrp	x3, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x69                  	// #105
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  78:	adrp	x1, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  7c:	adrp	x3, 0 <_ZNK4llvm26DIGlobalVariableExpression13getExpressionEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x108                 	// #264
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j:

0000000000000000 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	30 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j+0x30>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, w1, uxtw #3]
  1c:	cbz	x0, 28 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j+0x28>
  20:	ldrb	w8, [x0]
  24:	cbnz	w8, 50 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j+0x50>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>
  34:	adrp	x1, 0 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>
  38:	adrp	x3, 0 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x436                 	// #1078
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>
  54:	adrp	x1, 0 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>
  58:	adrp	x3, 0 <_ZNK4llvm6DINode12getOperandAsINS_8MDStringEEEPT_j>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x121                 	// #289
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7DIScope7getFileEv:

0000000000000000 <_ZNK4llvm7DIScope7getFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm7DIScope7getFileEv>
   c:	cbz	x0, 1c <_ZNK4llvm7DIScope7getFileEv+0x1c>
  10:	ldrb	w8, [x0]
  14:	cmp	w8, #0xf
  18:	b.ne	24 <_ZNK4llvm7DIScope7getFileEv+0x24>  // b.any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm7DIScope7getFileEv>
  28:	adrp	x1, 0 <_ZNK4llvm7DIScope7getFileEv>
  2c:	adrp	x3, 0 <_ZNK4llvm7DIScope7getFileEv>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x134                 	// #308
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm6DIType8getScopeEv:

0000000000000000 <_ZNK4llvm6DIType8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	90 <_ZNK4llvm6DIType8getScopeEv+0x90>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 38 <_ZNK4llvm6DIType8getScopeEv+0x38>
  20:	ldrb	w8, [x0]
  24:	sub	w9, w8, #0xb
  28:	cmp	w9, #0xb
  2c:	b.cs	40 <_ZNK4llvm6DIType8getScopeEv+0x40>  // b.hs, b.nlast
  30:	cmp	w9, #0xb
  34:	b.cs	68 <_ZNK4llvm6DIType8getScopeEv+0x68>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	30 <_ZNK4llvm6DIType8getScopeEv+0x30>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm6DIType8getScopeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm6DIType8getScopeEv>
  50:	adrp	x3, 0 <_ZNK4llvm6DIType8getScopeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x134                 	// #308
  64:	bl	0 <__assert_fail>
  68:	cmp	w8, #0x1f
  6c:	b.eq	38 <_ZNK4llvm6DIType8getScopeEv+0x38>  // b.none
  70:	adrp	x0, 0 <_ZNK4llvm6DIType8getScopeEv>
  74:	adrp	x1, 0 <_ZNK4llvm6DIType8getScopeEv>
  78:	adrp	x3, 0 <_ZNK4llvm6DIType8getScopeEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x108                 	// #264
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm6DIType8getScopeEv>
  94:	adrp	x1, 0 <_ZNK4llvm6DIType8getScopeEv>
  98:	adrp	x3, 0 <_ZNK4llvm6DIType8getScopeEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x436                 	// #1078
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DIDerivedType11getBaseTypeEv:

0000000000000000 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x3
  10:	b.ls	38 <_ZNK4llvm13DIDerivedType11getBaseTypeEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #24]
  1c:	cbz	x0, 30 <_ZNK4llvm13DIDerivedType11getBaseTypeEv+0x30>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cs	58 <_ZNK4llvm13DIDerivedType11getBaseTypeEv+0x58>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>
  3c:	adrp	x1, 0 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>
  40:	adrp	x3, 0 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm13DIDerivedType11getBaseTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x134                 	// #308
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7DIScope10getRawFileEv:

0000000000000000 <_ZNK4llvm7DIScope10getRawFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 30 <_ZNK4llvm7DIScope10getRawFileEv+0x30>
   c:	ldrb	w8, [x0]
  10:	cmp	w8, #0xf
  14:	b.eq	28 <_ZNK4llvm7DIScope10getRawFileEv+0x28>  // b.none
  18:	ldr	w8, [x0, #8]
  1c:	cbz	w8, 50 <_ZNK4llvm7DIScope10getRawFileEv+0x50>
  20:	sub	x8, x0, x8, lsl #3
  24:	ldr	x0, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm7DIScope10getRawFileEv>
  34:	adrp	x1, 0 <_ZNK4llvm7DIScope10getRawFileEv>
  38:	adrp	x3, 0 <_ZNK4llvm7DIScope10getRawFileEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm7DIScope10getRawFileEv>
  54:	adrp	x1, 0 <_ZNK4llvm7DIScope10getRawFileEv>
  58:	adrp	x3, 0 <_ZNK4llvm7DIScope10getRawFileEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x436                 	// #1078
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15DICompositeType11getBaseTypeEv:

0000000000000000 <_ZNK4llvm15DICompositeType11getBaseTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x3
  10:	b.ls	38 <_ZNK4llvm15DICompositeType11getBaseTypeEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #24]
  1c:	cbz	x0, 30 <_ZNK4llvm15DICompositeType11getBaseTypeEv+0x30>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cs	58 <_ZNK4llvm15DICompositeType11getBaseTypeEv+0x58>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm15DICompositeType11getBaseTypeEv>
  3c:	adrp	x1, 0 <_ZNK4llvm15DICompositeType11getBaseTypeEv>
  40:	adrp	x3, 0 <_ZNK4llvm15DICompositeType11getBaseTypeEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm15DICompositeType11getBaseTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm15DICompositeType11getBaseTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm15DICompositeType11getBaseTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x134                 	// #308
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15DICompositeType11getElementsEv:

0000000000000000 <_ZNK4llvm15DICompositeType11getElementsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x4
  10:	b.ls	34 <_ZNK4llvm15DICompositeType11getElementsEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #32]
  1c:	cbz	x0, 2c <_ZNK4llvm15DICompositeType11getElementsEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm15DICompositeType11getElementsEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm15DICompositeType11getElementsEv>
  38:	adrp	x1, 0 <_ZNK4llvm15DICompositeType11getElementsEv>
  3c:	adrp	x3, 0 <_ZNK4llvm15DICompositeType11getElementsEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm15DICompositeType11getElementsEv>
  58:	adrp	x1, 0 <_ZNK4llvm15DICompositeType11getElementsEv>
  5c:	adrp	x3, 0 <_ZNK4llvm15DICompositeType11getElementsEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15DICompositeType15getVTableHolderEv:

0000000000000000 <_ZNK4llvm15DICompositeType15getVTableHolderEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x5
  10:	b.ls	38 <_ZNK4llvm15DICompositeType15getVTableHolderEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #40]
  1c:	cbz	x0, 30 <_ZNK4llvm15DICompositeType15getVTableHolderEv+0x30>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cs	58 <_ZNK4llvm15DICompositeType15getVTableHolderEv+0x58>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm15DICompositeType15getVTableHolderEv>
  3c:	adrp	x1, 0 <_ZNK4llvm15DICompositeType15getVTableHolderEv>
  40:	adrp	x3, 0 <_ZNK4llvm15DICompositeType15getVTableHolderEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm15DICompositeType15getVTableHolderEv>
  5c:	adrp	x1, 0 <_ZNK4llvm15DICompositeType15getVTableHolderEv>
  60:	adrp	x3, 0 <_ZNK4llvm15DICompositeType15getVTableHolderEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x134                 	// #308
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15DICompositeType17getTemplateParamsEv:

0000000000000000 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x6
  10:	b.ls	34 <_ZNK4llvm15DICompositeType17getTemplateParamsEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #48]
  1c:	cbz	x0, 2c <_ZNK4llvm15DICompositeType17getTemplateParamsEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm15DICompositeType17getTemplateParamsEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>
  38:	adrp	x1, 0 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>
  3c:	adrp	x3, 0 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>
  58:	adrp	x1, 0 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>
  5c:	adrp	x3, 0 <_ZNK4llvm15DICompositeType17getTemplateParamsEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j:

0000000000000000 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	34 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, w1, uxtw #3]
  1c:	cbz	x0, 2c <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xc
  28:	b.ne	54 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>
  38:	adrp	x1, 0 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>
  3c:	adrp	x3, 0 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>
  58:	adrp	x1, 0 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>
  5c:	adrp	x3, 0 <_ZNK4llvm6DINode12getOperandAsINS_13DIDerivedTypeEEEPT_j>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x121                 	// #289
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DISubroutineType12getTypeArrayEv:

0000000000000000 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x3
  10:	b.ls	34 <_ZNK4llvm16DISubroutineType12getTypeArrayEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #24]
  1c:	cbz	x0, 2c <_ZNK4llvm16DISubroutineType12getTypeArrayEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm16DISubroutineType12getTypeArrayEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>
  38:	adrp	x1, 0 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>
  3c:	adrp	x3, 0 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>
  58:	adrp	x1, 0 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>
  5c:	adrp	x3, 0 <_ZNK4llvm16DISubroutineType12getTypeArrayEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICompileUnit12getEnumTypesEv:

0000000000000000 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x4
  10:	b.ls	34 <_ZNK4llvm13DICompileUnit12getEnumTypesEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #32]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICompileUnit12getEnumTypesEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm13DICompileUnit12getEnumTypesEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit12getEnumTypesEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICompileUnit16getRetainedTypesEv:

0000000000000000 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x5
  10:	b.ls	34 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #40]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICompileUnit16getRetainedTypesEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit16getRetainedTypesEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICompileUnit18getGlobalVariablesEv:

0000000000000000 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x6
  10:	b.ls	34 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #48]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit18getGlobalVariablesEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICompileUnit19getImportedEntitiesEv:

0000000000000000 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x7
  10:	b.ls	34 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #56]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit19getImportedEntitiesEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICompileUnit9getMacrosEv:

0000000000000000 <_ZNK4llvm13DICompileUnit9getMacrosEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x8
  10:	b.ls	34 <_ZNK4llvm13DICompileUnit9getMacrosEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #64]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICompileUnit9getMacrosEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm13DICompileUnit9getMacrosEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit9getMacrosEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit9getMacrosEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit9getMacrosEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICompileUnit9getMacrosEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICompileUnit9getMacrosEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICompileUnit9getMacrosEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DISubprogram8getScopeEv:

0000000000000000 <_ZNK4llvm12DISubprogram8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	90 <_ZNK4llvm12DISubprogram8getScopeEv+0x90>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 38 <_ZNK4llvm12DISubprogram8getScopeEv+0x38>
  20:	ldrb	w8, [x0]
  24:	sub	w9, w8, #0xb
  28:	cmp	w9, #0xb
  2c:	b.cs	40 <_ZNK4llvm12DISubprogram8getScopeEv+0x40>  // b.hs, b.nlast
  30:	cmp	w9, #0xb
  34:	b.cs	68 <_ZNK4llvm12DISubprogram8getScopeEv+0x68>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	30 <_ZNK4llvm12DISubprogram8getScopeEv+0x30>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  50:	adrp	x3, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x134                 	// #308
  64:	bl	0 <__assert_fail>
  68:	cmp	w8, #0x1f
  6c:	b.eq	38 <_ZNK4llvm12DISubprogram8getScopeEv+0x38>  // b.none
  70:	adrp	x0, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  74:	adrp	x1, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  78:	adrp	x3, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x108                 	// #264
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  94:	adrp	x1, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  98:	adrp	x3, 0 <_ZNK4llvm12DISubprogram8getScopeEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x436                 	// #1078
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DISubprogram7getTypeEv:

0000000000000000 <_ZNK4llvm12DISubprogram7getTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x4
  10:	b.ls	34 <_ZNK4llvm12DISubprogram7getTypeEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #32]
  1c:	cbz	x0, 2c <_ZNK4llvm12DISubprogram7getTypeEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xe
  28:	b.ne	54 <_ZNK4llvm12DISubprogram7getTypeEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm12DISubprogram7getTypeEv>
  38:	adrp	x1, 0 <_ZNK4llvm12DISubprogram7getTypeEv>
  3c:	adrp	x3, 0 <_ZNK4llvm12DISubprogram7getTypeEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm12DISubprogram7getTypeEv>
  58:	adrp	x1, 0 <_ZNK4llvm12DISubprogram7getTypeEv>
  5c:	adrp	x3, 0 <_ZNK4llvm12DISubprogram7getTypeEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DISubprogram17getContainingTypeEv:

0000000000000000 <_ZNK4llvm12DISubprogram17getContainingTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x9
  10:	b.cc	50 <_ZNK4llvm12DISubprogram17getContainingTypeEv+0x50>  // b.lo, b.ul, b.last
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #64]
  1c:	cbz	x0, 54 <_ZNK4llvm12DISubprogram17getContainingTypeEv+0x54>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cc	54 <_ZNK4llvm12DISubprogram17getContainingTypeEv+0x54>  // b.lo, b.ul, b.last
  30:	adrp	x0, 0 <_ZNK4llvm12DISubprogram17getContainingTypeEv>
  34:	adrp	x1, 0 <_ZNK4llvm12DISubprogram17getContainingTypeEv>
  38:	adrp	x3, 0 <_ZNK4llvm12DISubprogram17getContainingTypeEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x134                 	// #308
  4c:	bl	0 <__assert_fail>
  50:	mov	x0, xzr
  54:	ldp	x29, x30, [sp], #16
  58:	ret

Disassembly of section .text._ZNK4llvm12DISubprogram17getTemplateParamsEv:

0000000000000000 <_ZNK4llvm12DISubprogram17getTemplateParamsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0xa
  10:	b.cc	4c <_ZNK4llvm12DISubprogram17getTemplateParamsEv+0x4c>  // b.lo, b.ul, b.last
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #72]
  1c:	cbz	x0, 50 <_ZNK4llvm12DISubprogram17getTemplateParamsEv+0x50>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.eq	50 <_ZNK4llvm12DISubprogram17getTemplateParamsEv+0x50>  // b.none
  2c:	adrp	x0, 0 <_ZNK4llvm12DISubprogram17getTemplateParamsEv>
  30:	adrp	x1, 0 <_ZNK4llvm12DISubprogram17getTemplateParamsEv>
  34:	adrp	x3, 0 <_ZNK4llvm12DISubprogram17getTemplateParamsEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x134                 	// #308
  48:	bl	0 <__assert_fail>
  4c:	mov	x0, xzr
  50:	ldp	x29, x30, [sp], #16
  54:	ret

Disassembly of section .text._ZNK4llvm12DISubprogram14getDeclarationEv:

0000000000000000 <_ZNK4llvm12DISubprogram14getDeclarationEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x6
  10:	b.ls	34 <_ZNK4llvm12DISubprogram14getDeclarationEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #48]
  1c:	cbz	x0, 2c <_ZNK4llvm12DISubprogram14getDeclarationEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x11
  28:	b.ne	54 <_ZNK4llvm12DISubprogram14getDeclarationEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm12DISubprogram14getDeclarationEv>
  38:	adrp	x1, 0 <_ZNK4llvm12DISubprogram14getDeclarationEv>
  3c:	adrp	x3, 0 <_ZNK4llvm12DISubprogram14getDeclarationEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm12DISubprogram14getDeclarationEv>
  58:	adrp	x1, 0 <_ZNK4llvm12DISubprogram14getDeclarationEv>
  5c:	adrp	x3, 0 <_ZNK4llvm12DISubprogram14getDeclarationEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DISubprogram16getRetainedNodesEv:

0000000000000000 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x7
  10:	b.ls	34 <_ZNK4llvm12DISubprogram16getRetainedNodesEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #56]
  1c:	cbz	x0, 2c <_ZNK4llvm12DISubprogram16getRetainedNodesEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm12DISubprogram16getRetainedNodesEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>
  38:	adrp	x1, 0 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>
  3c:	adrp	x3, 0 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>
  58:	adrp	x1, 0 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>
  5c:	adrp	x3, 0 <_ZNK4llvm12DISubprogram16getRetainedNodesEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DISubprogram14getThrownTypesEv:

0000000000000000 <_ZNK4llvm12DISubprogram14getThrownTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0xb
  10:	b.cc	4c <_ZNK4llvm12DISubprogram14getThrownTypesEv+0x4c>  // b.lo, b.ul, b.last
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #80]
  1c:	cbz	x0, 50 <_ZNK4llvm12DISubprogram14getThrownTypesEv+0x50>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.eq	50 <_ZNK4llvm12DISubprogram14getThrownTypesEv+0x50>  // b.none
  2c:	adrp	x0, 0 <_ZNK4llvm12DISubprogram14getThrownTypesEv>
  30:	adrp	x1, 0 <_ZNK4llvm12DISubprogram14getThrownTypesEv>
  34:	adrp	x3, 0 <_ZNK4llvm12DISubprogram14getThrownTypesEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x134                 	// #308
  48:	bl	0 <__assert_fail>
  4c:	mov	x0, xzr
  50:	ldp	x29, x30, [sp], #16
  54:	ret

Disassembly of section .text._ZNK4llvm18DILexicalBlockBase8getScopeEv:

0000000000000000 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	38 <_ZNK4llvm18DILexicalBlockBase8getScopeEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 58 <_ZNK4llvm18DILexicalBlockBase8getScopeEv+0x58>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0x11
  28:	cmp	w8, #0x3
  2c:	b.cs	78 <_ZNK4llvm18DILexicalBlockBase8getScopeEv+0x78>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  3c:	adrp	x1, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  40:	adrp	x3, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  60:	adrp	x3, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  7c:	adrp	x1, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  80:	adrp	x3, 0 <_ZNK4llvm18DILexicalBlockBase8getScopeEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x108                 	// #264
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11DINamespace8getScopeEv:

0000000000000000 <_ZNK4llvm11DINamespace8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	90 <_ZNK4llvm11DINamespace8getScopeEv+0x90>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 38 <_ZNK4llvm11DINamespace8getScopeEv+0x38>
  20:	ldrb	w8, [x0]
  24:	sub	w9, w8, #0xb
  28:	cmp	w9, #0xb
  2c:	b.cs	40 <_ZNK4llvm11DINamespace8getScopeEv+0x40>  // b.hs, b.nlast
  30:	cmp	w9, #0xb
  34:	b.cs	68 <_ZNK4llvm11DINamespace8getScopeEv+0x68>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	30 <_ZNK4llvm11DINamespace8getScopeEv+0x30>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  50:	adrp	x3, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x134                 	// #308
  64:	bl	0 <__assert_fail>
  68:	cmp	w8, #0x1f
  6c:	b.eq	38 <_ZNK4llvm11DINamespace8getScopeEv+0x38>  // b.none
  70:	adrp	x0, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  74:	adrp	x1, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  78:	adrp	x3, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x108                 	// #264
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  94:	adrp	x1, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  98:	adrp	x3, 0 <_ZNK4llvm11DINamespace8getScopeEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x436                 	// #1078
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19DITemplateParameter7getTypeEv:

0000000000000000 <_ZNK4llvm19DITemplateParameter7getTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	38 <_ZNK4llvm19DITemplateParameter7getTypeEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 30 <_ZNK4llvm19DITemplateParameter7getTypeEv+0x30>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cs	58 <_ZNK4llvm19DITemplateParameter7getTypeEv+0x58>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm19DITemplateParameter7getTypeEv>
  3c:	adrp	x1, 0 <_ZNK4llvm19DITemplateParameter7getTypeEv>
  40:	adrp	x3, 0 <_ZNK4llvm19DITemplateParameter7getTypeEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm19DITemplateParameter7getTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm19DITemplateParameter7getTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm19DITemplateParameter7getTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x134                 	// #308
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DIVariable8getScopeEv:

0000000000000000 <_ZNK4llvm10DIVariable8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 68 <_ZNK4llvm10DIVariable8getScopeEv+0x68>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 38 <_ZNK4llvm10DIVariable8getScopeEv+0x38>
  1c:	ldrb	w8, [x0]
  20:	sub	w9, w8, #0xb
  24:	cmp	w9, #0xb
  28:	ccmp	w8, #0x1f, #0x4, cs  // cs = hs, nlast
  2c:	b.ne	88 <_ZNK4llvm10DIVariable8getScopeEv+0x88>  // b.any
  30:	cmp	w9, #0xb
  34:	b.cs	40 <_ZNK4llvm10DIVariable8getScopeEv+0x40>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	38 <_ZNK4llvm10DIVariable8getScopeEv+0x38>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  50:	adrp	x3, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  6c:	adrp	x1, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  70:	adrp	x3, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x436                 	// #1078
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  8c:	adrp	x1, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  90:	adrp	x3, 0 <_ZNK4llvm10DIVariable8getScopeEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x134                 	// #308
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DIVariable7getFileEv:

0000000000000000 <_ZNK4llvm10DIVariable7getFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x2
  10:	b.ls	34 <_ZNK4llvm10DIVariable7getFileEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #16]
  1c:	cbz	x0, 2c <_ZNK4llvm10DIVariable7getFileEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xf
  28:	b.ne	54 <_ZNK4llvm10DIVariable7getFileEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm10DIVariable7getFileEv>
  38:	adrp	x1, 0 <_ZNK4llvm10DIVariable7getFileEv>
  3c:	adrp	x3, 0 <_ZNK4llvm10DIVariable7getFileEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm10DIVariable7getFileEv>
  58:	adrp	x1, 0 <_ZNK4llvm10DIVariable7getFileEv>
  5c:	adrp	x3, 0 <_ZNK4llvm10DIVariable7getFileEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DIVariable7getTypeEv:

0000000000000000 <_ZNK4llvm10DIVariable7getTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x3
  10:	b.ls	38 <_ZNK4llvm10DIVariable7getTypeEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #24]
  1c:	cbz	x0, 30 <_ZNK4llvm10DIVariable7getTypeEv+0x30>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cs	58 <_ZNK4llvm10DIVariable7getTypeEv+0x58>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm10DIVariable7getTypeEv>
  3c:	adrp	x1, 0 <_ZNK4llvm10DIVariable7getTypeEv>
  40:	adrp	x3, 0 <_ZNK4llvm10DIVariable7getTypeEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm10DIVariable7getTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm10DIVariable7getTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm10DIVariable7getTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x134                 	// #308
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv:

0000000000000000 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x6
  10:	b.ls	34 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #48]
  1c:	cbz	x0, 2c <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xc
  28:	b.ne	54 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>
  38:	adrp	x1, 0 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>
  3c:	adrp	x3, 0 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>
  58:	adrp	x1, 0 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>
  5c:	adrp	x3, 0 <_ZNK4llvm16DIGlobalVariable30getStaticDataMemberDeclarationEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j:

0000000000000000 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	34 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, w1, uxtw #3]
  1c:	cbz	x0, 2c <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>
  38:	adrp	x1, 0 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>
  3c:	adrp	x3, 0 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>
  58:	adrp	x1, 0 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>
  5c:	adrp	x3, 0 <_ZNK4llvm6DINode12getOperandAsINS_7MDTupleEEEPT_j>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x121                 	// #289
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7DILabel8getScopeEv:

0000000000000000 <_ZNK4llvm7DILabel8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 34 <_ZNK4llvm7DILabel8getScopeEv+0x34>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 2c <_ZNK4llvm7DILabel8getScopeEv+0x2c>
  1c:	ldrb	w8, [x0]
  20:	sub	w8, w8, #0x11
  24:	cmp	w8, #0x3
  28:	b.cs	54 <_ZNK4llvm7DILabel8getScopeEv+0x54>  // b.hs, b.nlast
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm7DILabel8getScopeEv>
  38:	adrp	x1, 0 <_ZNK4llvm7DILabel8getScopeEv>
  3c:	adrp	x3, 0 <_ZNK4llvm7DILabel8getScopeEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm7DILabel8getScopeEv>
  58:	adrp	x1, 0 <_ZNK4llvm7DILabel8getScopeEv>
  5c:	adrp	x3, 0 <_ZNK4llvm7DILabel8getScopeEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7DILabel7getFileEv:

0000000000000000 <_ZNK4llvm7DILabel7getFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x2
  10:	b.ls	34 <_ZNK4llvm7DILabel7getFileEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #16]
  1c:	cbz	x0, 2c <_ZNK4llvm7DILabel7getFileEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xf
  28:	b.ne	54 <_ZNK4llvm7DILabel7getFileEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm7DILabel7getFileEv>
  38:	adrp	x1, 0 <_ZNK4llvm7DILabel7getFileEv>
  3c:	adrp	x3, 0 <_ZNK4llvm7DILabel7getFileEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm7DILabel7getFileEv>
  58:	adrp	x1, 0 <_ZNK4llvm7DILabel7getFileEv>
  5c:	adrp	x3, 0 <_ZNK4llvm7DILabel7getFileEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14DIObjCProperty7getFileEv:

0000000000000000 <_ZNK4llvm14DIObjCProperty7getFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	34 <_ZNK4llvm14DIObjCProperty7getFileEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 2c <_ZNK4llvm14DIObjCProperty7getFileEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xf
  28:	b.ne	54 <_ZNK4llvm14DIObjCProperty7getFileEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm14DIObjCProperty7getFileEv>
  38:	adrp	x1, 0 <_ZNK4llvm14DIObjCProperty7getFileEv>
  3c:	adrp	x3, 0 <_ZNK4llvm14DIObjCProperty7getFileEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm14DIObjCProperty7getFileEv>
  58:	adrp	x1, 0 <_ZNK4llvm14DIObjCProperty7getFileEv>
  5c:	adrp	x3, 0 <_ZNK4llvm14DIObjCProperty7getFileEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14DIObjCProperty7getTypeEv:

0000000000000000 <_ZNK4llvm14DIObjCProperty7getTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x4
  10:	b.ls	38 <_ZNK4llvm14DIObjCProperty7getTypeEv+0x38>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #32]
  1c:	cbz	x0, 30 <_ZNK4llvm14DIObjCProperty7getTypeEv+0x30>
  20:	ldrb	w8, [x0]
  24:	sub	w8, w8, #0xb
  28:	cmp	w8, #0x4
  2c:	b.cs	58 <_ZNK4llvm14DIObjCProperty7getTypeEv+0x58>  // b.hs, b.nlast
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm14DIObjCProperty7getTypeEv>
  3c:	adrp	x1, 0 <_ZNK4llvm14DIObjCProperty7getTypeEv>
  40:	adrp	x3, 0 <_ZNK4llvm14DIObjCProperty7getTypeEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x436                 	// #1078
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZNK4llvm14DIObjCProperty7getTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm14DIObjCProperty7getTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm14DIObjCProperty7getTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x134                 	// #308
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DIImportedEntity8getScopeEv:

0000000000000000 <_ZNK4llvm16DIImportedEntity8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 68 <_ZNK4llvm16DIImportedEntity8getScopeEv+0x68>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 38 <_ZNK4llvm16DIImportedEntity8getScopeEv+0x38>
  1c:	ldrb	w8, [x0]
  20:	sub	w9, w8, #0xb
  24:	cmp	w9, #0xb
  28:	ccmp	w8, #0x1f, #0x4, cs  // cs = hs, nlast
  2c:	b.ne	88 <_ZNK4llvm16DIImportedEntity8getScopeEv+0x88>  // b.any
  30:	cmp	w9, #0xb
  34:	b.cs	40 <_ZNK4llvm16DIImportedEntity8getScopeEv+0x40>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	38 <_ZNK4llvm16DIImportedEntity8getScopeEv+0x38>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  50:	adrp	x3, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  6c:	adrp	x1, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  70:	adrp	x3, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x436                 	// #1078
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  8c:	adrp	x1, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  90:	adrp	x3, 0 <_ZNK4llvm16DIImportedEntity8getScopeEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x134                 	// #308
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DIImportedEntity9getEntityEv:

0000000000000000 <_ZNK4llvm16DIImportedEntity9getEntityEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	90 <_ZNK4llvm16DIImportedEntity9getEntityEv+0x90>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 38 <_ZNK4llvm16DIImportedEntity9getEntityEv+0x38>
  20:	ldrb	w8, [x0]
  24:	sub	w9, w8, #0x8
  28:	cmp	w9, #0x15
  2c:	b.cs	40 <_ZNK4llvm16DIImportedEntity9getEntityEv+0x40>  // b.hs, b.nlast
  30:	cmp	w9, #0x15
  34:	b.cs	68 <_ZNK4llvm16DIImportedEntity9getEntityEv+0x68>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	30 <_ZNK4llvm16DIImportedEntity9getEntityEv+0x30>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  4c:	adrp	x1, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  50:	adrp	x3, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x134                 	// #308
  64:	bl	0 <__assert_fail>
  68:	cmp	w8, #0x1f
  6c:	b.eq	38 <_ZNK4llvm16DIImportedEntity9getEntityEv+0x38>  // b.none
  70:	adrp	x0, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  74:	adrp	x1, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  78:	adrp	x3, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x108                 	// #264
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  94:	adrp	x1, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  98:	adrp	x3, 0 <_ZNK4llvm16DIImportedEntity9getEntityEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x436                 	// #1078
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j:

0000000000000000 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	30 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j+0x30>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, w1, uxtw #3]
  1c:	cbz	x0, 28 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j+0x28>
  20:	ldrb	w8, [x0]
  24:	cbnz	w8, 50 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j+0x50>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>
  34:	adrp	x1, 0 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>
  38:	adrp	x3, 0 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x436                 	// #1078
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>
  54:	adrp	x1, 0 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>
  58:	adrp	x3, 0 <_ZNK4llvm11DIMacroNode12getOperandAsINS_8MDStringEEEPT_j>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x121                 	// #289
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11DIMacroFile7getFileEv:

0000000000000000 <_ZNK4llvm11DIMacroFile7getFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 30 <_ZNK4llvm11DIMacroFile7getFileEv+0x30>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 28 <_ZNK4llvm11DIMacroFile7getFileEv+0x28>
  1c:	ldrb	w8, [x0]
  20:	cmp	w8, #0xf
  24:	b.ne	50 <_ZNK4llvm11DIMacroFile7getFileEv+0x50>  // b.any
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm11DIMacroFile7getFileEv>
  34:	adrp	x1, 0 <_ZNK4llvm11DIMacroFile7getFileEv>
  38:	adrp	x3, 0 <_ZNK4llvm11DIMacroFile7getFileEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x436                 	// #1078
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm11DIMacroFile7getFileEv>
  54:	adrp	x1, 0 <_ZNK4llvm11DIMacroFile7getFileEv>
  58:	adrp	x3, 0 <_ZNK4llvm11DIMacroFile7getFileEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x134                 	// #308
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11DIMacroFile11getElementsEv:

0000000000000000 <_ZNK4llvm11DIMacroFile11getElementsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	34 <_ZNK4llvm11DIMacroFile11getElementsEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 2c <_ZNK4llvm11DIMacroFile11getElementsEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x4
  28:	b.ne	54 <_ZNK4llvm11DIMacroFile11getElementsEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm11DIMacroFile11getElementsEv>
  38:	adrp	x1, 0 <_ZNK4llvm11DIMacroFile11getElementsEv>
  3c:	adrp	x3, 0 <_ZNK4llvm11DIMacroFile11getElementsEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm11DIMacroFile11getElementsEv>
  58:	adrp	x1, 0 <_ZNK4llvm11DIMacroFile11getElementsEv>
  5c:	adrp	x3, 0 <_ZNK4llvm11DIMacroFile11getElementsEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICommonBlock8getScopeEv:

0000000000000000 <_ZNK4llvm13DICommonBlock8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 68 <_ZNK4llvm13DICommonBlock8getScopeEv+0x68>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 38 <_ZNK4llvm13DICommonBlock8getScopeEv+0x38>
  1c:	ldrb	w8, [x0]
  20:	sub	w9, w8, #0xb
  24:	cmp	w9, #0xb
  28:	ccmp	w8, #0x1f, #0x4, cs  // cs = hs, nlast
  2c:	b.ne	88 <_ZNK4llvm13DICommonBlock8getScopeEv+0x88>  // b.any
  30:	cmp	w9, #0xb
  34:	b.cs	40 <_ZNK4llvm13DICommonBlock8getScopeEv+0x40>  // b.hs, b.nlast
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w8, #0x1f
  44:	b.eq	38 <_ZNK4llvm13DICommonBlock8getScopeEv+0x38>  // b.none
  48:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  50:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  6c:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  70:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x436                 	// #1078
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  8c:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  90:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock8getScopeEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x134                 	// #308
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICommonBlock7getDeclEv:

0000000000000000 <_ZNK4llvm13DICommonBlock7getDeclEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x1
  10:	b.ls	34 <_ZNK4llvm13DICommonBlock7getDeclEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #8]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICommonBlock7getDeclEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0x18
  28:	b.ne	54 <_ZNK4llvm13DICommonBlock7getDeclEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock7getDeclEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock7getDeclEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock7getDeclEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock7getDeclEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock7getDeclEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock7getDeclEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13DICommonBlock7getFileEv:

0000000000000000 <_ZNK4llvm13DICommonBlock7getFileEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, #0x3
  10:	b.ls	34 <_ZNK4llvm13DICommonBlock7getFileEv+0x34>  // b.plast
  14:	sub	x8, x0, x8, lsl #3
  18:	ldr	x0, [x8, #24]
  1c:	cbz	x0, 2c <_ZNK4llvm13DICommonBlock7getFileEv+0x2c>
  20:	ldrb	w8, [x0]
  24:	cmp	w8, #0xf
  28:	b.ne	54 <_ZNK4llvm13DICommonBlock7getFileEv+0x54>  // b.any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock7getFileEv>
  38:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock7getFileEv>
  3c:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock7getFileEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x436                 	// #1078
  50:	bl	0 <__assert_fail>
  54:	adrp	x0, 0 <_ZNK4llvm13DICommonBlock7getFileEv>
  58:	adrp	x1, 0 <_ZNK4llvm13DICommonBlock7getFileEv>
  5c:	adrp	x3, 0 <_ZNK4llvm13DICommonBlock7getFileEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	sub	x9, x9, x8
  24:	cmp	x21, x9
  28:	b.ls	44 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_+0x44>  // b.plast
  2c:	add	x2, x21, x8
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x8                   	// #8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x19, #8]
  44:	cmp	x21, #0x1
  48:	b.lt	6c <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_+0x6c>  // b.tstop
  4c:	ldr	x9, [x19]
  50:	add	x10, x21, #0x1
  54:	add	x9, x9, x8, lsl #3
  58:	ldrb	w11, [x20], #1
  5c:	sub	x10, x10, #0x1
  60:	cmp	x10, #0x1
  64:	str	x11, [x9], #8
  68:	b.gt	58 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_+0x58>
  6c:	ldr	w9, [x19, #12]
  70:	add	x8, x21, x8
  74:	cmp	x8, x9
  78:	b.hi	90 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_+0x90>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendIPKhvEEvT_S5_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	x1, [x8, x22, lsl #3]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x22, x2, x1
  18:	asr	x21, x22, #2
  1c:	mov	x20, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x21, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_+0x44>  // b.plast
  30:	add	x2, x21, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x8                   	// #8
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cmp	x22, #0x0
  48:	b.le	78 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_+0x78>
  4c:	ldr	x9, [x19]
  50:	ldr	w8, [x19, #8]
  54:	lsr	x10, x22, #2
  58:	add	x10, x10, #0x1
  5c:	add	x9, x9, x8, lsl #3
  60:	ldr	w11, [x20], #4
  64:	sub	x10, x10, #0x1
  68:	cmp	x10, #0x1
  6c:	str	x11, [x9], #8
  70:	b.gt	60 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_+0x60>
  74:	b	7c <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_+0x7c>
  78:	ldr	w8, [x19, #8]
  7c:	ldr	w9, [x19, #12]
  80:	add	x8, x21, x8
  84:	cmp	x8, x9
  88:	b.hi	a0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_+0xa0>  // b.pmore
  8c:	str	w8, [x19, #8]
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_>
  a4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_>
  a8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEvEEvT_SA_>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x43                  	// #67
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E16FindAndConstructEOS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E16FindAndConstructEOS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E16FindAndConstructEOS4_+0x44>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E16FindAndConstructEOS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	stp	x8, xzr, [x0]
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x29, x30, [sp, #16]
  4c:	mov	x0, x3
  50:	add	sp, sp, #0x30
  54:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
  20:	cmp	x20, x19
  24:	b.eq	70 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x70>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x64>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
  48:	tbnz	w0, #0, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	q0, [x20]
  54:	str	q0, [x8]
  58:	ldr	w8, [x21, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x21, #16]
  64:	add	x20, x20, #0x10
  68:	cmp	x19, x20
  6c:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x28>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
  84:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
  88:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x17a                 	// #378
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10BranchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10BranchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	and	w8, w8, #0xfffffff
  10:	cmp	w8, #0x3
  14:	mov	w8, #0x1                   	// #1
  18:	cinc	w8, w8, eq  // eq = none
  1c:	cmp	w8, w1
  20:	b.ls	50 <_ZNK4llvm10BranchInst12getSuccessorEj+0x50>  // b.plast
  24:	mov	w8, w1
  28:	mov	w9, #0x18                  	// #24
  2c:	mneg	x8, x8, x9
  30:	add	x8, x0, x8
  34:	ldur	x0, [x8, #-24]
  38:	cbz	x0, 48 <_ZNK4llvm10BranchInst12getSuccessorEj+0x48>
  3c:	ldrb	w8, [x0, #16]
  40:	cmp	w8, #0x12
  44:	b.ne	70 <_ZNK4llvm10BranchInst12getSuccessorEj+0x70>  // b.any
  48:	ldp	x29, x30, [sp], #16
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  54:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  58:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0xc03                 	// #3075
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  74:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  78:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x134                 	// #308
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getConditionEv:

0000000000000000 <_ZNK4llvm10SwitchInst12getConditionEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cbz	w8, 38 <_ZNK4llvm10SwitchInst12getConditionEv+0x38>
  14:	tbnz	w9, #30, 28 <_ZNK4llvm10SwitchInst12getConditionEv+0x28>
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	b	2c <_ZNK4llvm10SwitchInst12getConditionEv+0x2c>
  28:	ldur	x8, [x0, #-8]
  2c:	ldr	x0, [x8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getConditionEv>
  3c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getConditionEv>
  40:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getConditionEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0xdbe                 	// #3518
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	w9, [x0, #8]
  10:	ldr	w10, [x8, #20]
  14:	ubfx	w11, w10, #1, #27
  18:	sub	w11, w11, #0x1
  1c:	cmp	w11, w9
  20:	b.ls	64 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv+0x64>  // b.plast
  24:	lsl	w9, w9, #1
  28:	add	w9, w9, #0x2
  2c:	and	x11, x10, #0xfffffff
  30:	cmp	w11, w9
  34:	b.ls	84 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv+0x84>  // b.plast
  38:	tbnz	w10, #30, 4c <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv+0x4c>
  3c:	mov	w10, #0x18                  	// #24
  40:	mneg	x10, x11, x10
  44:	add	x8, x8, x10
  48:	b	50 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv+0x50>
  4c:	ldur	x8, [x8, #-8]
  50:	mov	w10, #0x18                  	// #24
  54:	umull	x9, w9, w10
  58:	ldr	x0, [x8, x9]
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>
  68:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>
  6c:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xc79                 	// #3193
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>
  88:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>
  8c:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE12getCaseValueEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0xdbe                 	// #3518
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	ldr	x19, [x0]
  14:	cmn	w8, #0x2
  18:	b.eq	30 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv+0x30>  // b.none
  1c:	ldr	w9, [x19, #20]
  20:	ubfx	w9, w9, #1, #27
  24:	sub	w9, w9, #0x1
  28:	cmp	w9, w8
  2c:	b.ls	48 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv+0x48>  // b.plast
  30:	bl	0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv>
  34:	mov	w1, w0
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv>
  48:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv>
  4c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv>
  50:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE16getCaseSuccessorEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0xc81                 	// #3201
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase17getNumArgOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase17getNumArgOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  18:	mov	w8, w0
  1c:	mov	w20, #0x18                  	// #24
  20:	mneg	x8, x8, x20
  24:	mov	x0, x19
  28:	add	x21, x19, x8
  2c:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	w9, w0
  38:	mneg	x9, x9, x20
  3c:	add	x9, x21, x9
  40:	and	x8, x8, #0xfffffff
  44:	mneg	x8, x8, x20
  48:	add	x8, x19, x8
  4c:	sub	x8, x9, x8
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	sub	x8, x8, #0x18
  5c:	mov	w9, #0xaaab                	// #43691
  60:	lsr	x8, x8, #3
  64:	movk	w9, #0xaaaa, lsl #16
  68:	mul	w0, w8, w9
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK4llvm17CleanupReturnInst13getUnwindDestEv:

0000000000000000 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #18]
   c:	tbnz	w8, #0, 18 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv+0x18>
  10:	mov	x0, xzr
  14:	b	40 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv+0x40>
  18:	ldr	w8, [x0, #20]
  1c:	mov	w9, #0x18                  	// #24
  20:	and	x8, x8, #0xfffffff
  24:	mneg	x8, x8, x9
  28:	add	x8, x0, x8
  2c:	ldr	x0, [x8, #24]
  30:	cbz	x0, 48 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv+0x48>
  34:	ldrb	w8, [x0, #16]
  38:	cmp	w8, #0x12
  3c:	b.ne	68 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv+0x68>  // b.any
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>
  4c:	adrp	x1, 0 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>
  50:	adrp	x3, 0 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x5b                  	// #91
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>
  6c:	adrp	x1, 0 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>
  70:	adrp	x3, 0 <_ZNK4llvm17CleanupReturnInst13getUnwindDestEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xfa                  	// #250
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14FuncletPadInst13getArgOperandEj:

0000000000000000 <_ZNK4llvm14FuncletPadInst13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	and	x8, x8, #0xfffffff
  10:	cmp	w8, w1
  14:	b.ls	34 <_ZNK4llvm14FuncletPadInst13getArgOperandEj+0x34>  // b.plast
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	umull	x9, w1, w9
  28:	ldr	x0, [x8, x9]
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm14FuncletPadInst13getArgOperandEj>
  38:	adrp	x1, 0 <_ZNK4llvm14FuncletPadInst13getArgOperandEj>
  3c:	adrp	x3, 0 <_ZNK4llvm14FuncletPadInst13getArgOperandEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x8b0                 	// #2224
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CatchSwitchInst12getParentPadEv:

0000000000000000 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cbz	w8, 38 <_ZNK4llvm15CatchSwitchInst12getParentPadEv+0x38>
  14:	tbnz	w9, #30, 28 <_ZNK4llvm15CatchSwitchInst12getParentPadEv+0x28>
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	b	2c <_ZNK4llvm15CatchSwitchInst12getParentPadEv+0x2c>
  28:	ldur	x8, [x0, #-8]
  2c:	ldr	x0, [x8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>
  3c:	adrp	x1, 0 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>
  40:	adrp	x3, 0 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x1126                	// #4390
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CatchSwitchInst8handlersEv:

0000000000000000 <_ZNK4llvm15CatchSwitchInst8handlersEv>:
   0:	ldr	w9, [x0, #20]
   4:	tbnz	w9, #30, 1c <_ZNK4llvm15CatchSwitchInst8handlersEv+0x1c>
   8:	and	x10, x9, #0xfffffff
   c:	mov	w11, #0x18                  	// #24
  10:	mneg	x10, x10, x11
  14:	add	x10, x0, x10
  18:	b	20 <_ZNK4llvm15CatchSwitchInst8handlersEv+0x20>
  1c:	ldur	x10, [x0, #-8]
  20:	ldrb	w11, [x0, #18]
  24:	mov	w12, #0x30                  	// #48
  28:	tst	w11, #0x1
  2c:	mov	w11, #0x18                  	// #24
  30:	csel	x11, x11, x12, eq  // eq = none
  34:	add	x10, x10, x11
  38:	tbnz	w9, #30, 50 <_ZNK4llvm15CatchSwitchInst8handlersEv+0x50>
  3c:	and	x9, x9, #0xfffffff
  40:	mov	w11, #0x18                  	// #24
  44:	mneg	x11, x9, x11
  48:	add	x11, x0, x11
  4c:	b	58 <_ZNK4llvm15CatchSwitchInst8handlersEv+0x58>
  50:	ldur	x11, [x0, #-8]
  54:	and	w9, w9, #0xfffffff
  58:	mov	w12, #0x18                  	// #24
  5c:	adrp	x13, 0 <_ZNK4llvm15CatchSwitchInst8handlersEv>
  60:	add	x13, x13, #0x0
  64:	madd	x9, x9, x12, x11
  68:	stp	x10, x13, [x8]
  6c:	stp	x9, x13, [x8, #16]
  70:	ret

Disassembly of section .text._ZNK4llvm15CatchSwitchInst13getUnwindDestEv:

0000000000000000 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #18]
   c:	tbnz	w8, #0, 18 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x18>
  10:	mov	x0, xzr
  14:	b	54 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x54>
  18:	ldr	w9, [x0, #20]
  1c:	and	x8, x9, #0xfffffff
  20:	cmp	w8, #0x1
  24:	b.ls	5c <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x5c>  // b.plast
  28:	tbnz	w9, #30, 3c <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x3c>
  2c:	mov	w9, #0x18                  	// #24
  30:	mneg	x8, x8, x9
  34:	add	x8, x0, x8
  38:	b	40 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x40>
  3c:	ldur	x8, [x0, #-8]
  40:	ldr	x0, [x8, #24]
  44:	cbz	x0, 7c <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x7c>
  48:	ldrb	w8, [x0, #16]
  4c:	cmp	w8, #0x12
  50:	b.ne	9c <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv+0x9c>  // b.any
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  60:	adrp	x1, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  64:	adrp	x3, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x1126                	// #4390
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  80:	adrp	x1, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  84:	adrp	x3, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  a0:	adrp	x1, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  a4:	adrp	x3, 0 <_ZNK4llvm15CatchSwitchInst13getUnwindDestEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x108                 	// #264
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CallBrInst15getIndirectDestEj:

0000000000000000 <_ZNK4llvm10CallBrInst15getIndirectDestEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #72]
   c:	mov	w9, #0x18                  	// #24
  10:	mneg	x8, x8, x9
  14:	add	x8, x0, x8
  18:	umaddl	x8, w1, w9, x8
  1c:	ldur	x0, [x8, #-24]
  20:	cbz	x0, 30 <_ZNK4llvm10CallBrInst15getIndirectDestEj+0x30>
  24:	ldrb	w8, [x0, #16]
  28:	cmp	w8, #0x12
  2c:	b.ne	38 <_ZNK4llvm10CallBrInst15getIndirectDestEj+0x38>  // b.any
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm10CallBrInst15getIndirectDestEj>
  3c:	adrp	x1, 0 <_ZNK4llvm10CallBrInst15getIndirectDestEj>
  40:	adrp	x3, 0 <_ZNK4llvm10CallBrInst15getIndirectDestEj>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x121                 	// #289
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7PHINode16getIncomingValueEj:

0000000000000000 <_ZNK4llvm7PHINode16getIncomingValueEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cmp	w8, w1
  14:	b.ls	44 <_ZNK4llvm7PHINode16getIncomingValueEj+0x44>  // b.plast
  18:	tbnz	w9, #30, 2c <_ZNK4llvm7PHINode16getIncomingValueEj+0x2c>
  1c:	mov	w9, #0x18                  	// #24
  20:	mneg	x8, x8, x9
  24:	add	x8, x0, x8
  28:	b	30 <_ZNK4llvm7PHINode16getIncomingValueEj+0x30>
  2c:	ldur	x8, [x0, #-8]
  30:	mov	w9, #0x18                  	// #24
  34:	umull	x9, w1, w9
  38:	ldr	x0, [x8, x9]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  48:	adrp	x1, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  4c:	adrp	x3, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0xadf                 	// #2783
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	x1, [x8, x22, lsl #3]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14LandingPadInst7isCatchEj:

0000000000000000 <_ZNK4llvm14LandingPadInst7isCatchEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	tbnz	w8, #30, 24 <_ZNK4llvm14LandingPadInst7isCatchEj+0x24>
  10:	and	x8, x8, #0xfffffff
  14:	mov	w9, #0x18                  	// #24
  18:	mneg	x8, x8, x9
  1c:	add	x8, x0, x8
  20:	b	28 <_ZNK4llvm14LandingPadInst7isCatchEj+0x28>
  24:	ldur	x8, [x0, #-8]
  28:	mov	w9, #0x18                  	// #24
  2c:	umull	x9, w1, w9
  30:	ldr	x8, [x8, x9]
  34:	ldr	x8, [x8]
  38:	cbz	x8, 50 <_ZNK4llvm14LandingPadInst7isCatchEj+0x50>
  3c:	ldrb	w8, [x8, #8]
  40:	cmp	w8, #0xe
  44:	cset	w0, ne  // ne = any
  48:	ldp	x29, x30, [sp], #16
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm14LandingPadInst7isCatchEj>
  54:	adrp	x1, 0 <_ZNK4llvm14LandingPadInst7isCatchEj>
  58:	adrp	x3, 0 <_ZNK4llvm14LandingPadInst7isCatchEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  18:	cmp	w0, w19
  1c:	b.ls	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.plast
  20:	ldr	w8, [x20, #20]
  24:	and	x8, x8, #0xfffffff
  28:	cmp	w8, w19
  2c:	b.ls	70 <_ZNK4llvm8CallBase13getArgOperandEj+0x70>  // b.plast
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x20, x8
  3c:	umull	x9, w19, w9
  40:	ldr	x0, [x8, x9]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  54:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  58:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x4df                 	// #1247
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x86a                 	// #2154
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  84:	cbz	w19, b8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xb8>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xc8>  // b.hs, b.nlast
  98:	ldr	x8, [x21]
  9c:	mov	w2, #0x6                   	// #6
  a0:	mov	x0, x20
  a4:	ldr	w1, [x8, x22, lsl #2]
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  ac:	add	x22, x22, #0x1
  b0:	cmp	x19, x22
  b4:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x8c>  // b.any
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x99                  	// #153
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10SwitchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	ubfx	w8, w9, #1, #27
  10:	cmp	w8, w1
  14:	b.ls	68 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x68>  // b.plast
  18:	mov	w8, #0x1                   	// #1
  1c:	bfi	w8, w1, #1, #31
  20:	and	x10, x9, #0xfffffff
  24:	cmp	w10, w8
  28:	b.ls	88 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x88>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x9, x10, x9
  38:	add	x9, x0, x9
  3c:	b	44 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x44>
  40:	ldur	x9, [x0, #-8]
  44:	mov	w10, #0x18                  	// #24
  48:	umull	x8, w8, w10
  4c:	ldr	x0, [x9, x8]
  50:	cbz	x0, a8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xa8>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x12
  5c:	b.ne	c8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xc8>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  70:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xd7c                 	// #3452
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  8c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  90:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xdbe                 	// #3518
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  ac:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x69                  	// #105
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  cc:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x108                 	// #264
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmn	w8, #0x2
  10:	b.eq	2c <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv+0x2c>  // b.none
  14:	ldr	x9, [x0]
  18:	ldr	w9, [x9, #20]
  1c:	ubfx	w9, w9, #1, #27
  20:	sub	w9, w9, #0x1
  24:	cmp	w9, w8
  28:	b.ls	3c <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv+0x3c>  // b.plast
  2c:	cmn	w8, #0x2
  30:	csinc	w0, wzr, w8, eq  // eq = none
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv>
  40:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv>
  44:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEE17getSuccessorIndexEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xc8c                 	// #3212
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl:

0000000000000000 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	adds	x8, x8, x1
  10:	b.mi	38 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl+0x38>  // b.first
  14:	ldr	x9, [x0]
  18:	ldr	w9, [x9, #20]
  1c:	ubfx	w9, w9, #1, #27
  20:	sub	w9, w9, #0x1
  24:	cmp	w9, w8
  28:	b.cc	38 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl+0x38>  // b.lo, b.ul, b.last
  2c:	str	x8, [x0, #8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl>
  3c:	adrp	x1, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl>
  40:	adrp	x3, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_14CaseHandleImplIKS0_KNS_11ConstantIntEKNS_10BasicBlockEEEEpLEl>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0xcd4                 	// #3284
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0]
   c:	and	x8, x9, #0x6
  10:	cmp	x8, #0x4
  14:	and	x0, x9, #0xfffffffffffffff8
  18:	b.eq	50 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x50>  // b.none
  1c:	cmp	x8, #0x2
  20:	b.ne	7c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x7c>  // b.any
  24:	cbz	x0, 94 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x94>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.eq	8c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x8c>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	b	104 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x104>
  50:	cbz	x0, b0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xb0>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x23
  5c:	b.eq	8c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x8c>  // b.none
  60:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  64:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  68:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	b	104 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x104>
  7c:	cbz	x0, cc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xcc>
  80:	ldrb	w8, [x0, #16]
  84:	cmp	w8, #0x1d
  88:	b.ne	ec <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xec>  // b.any
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  94:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  98:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  9c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	b	e4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xe4>
  b0:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  b4:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  b8:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	b	e4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xe4>
  cc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  d0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  d4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  f0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  f4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x10, [x0]
   c:	and	x9, x10, #0x6
  10:	cmp	x9, #0x4
  14:	and	x0, x10, #0xfffffffffffffff8
  18:	b.eq	50 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x50>  // b.none
  1c:	cmp	x9, #0x2
  20:	b.ne	7c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x7c>  // b.any
  24:	cbz	x0, 94 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x94>
  28:	ldrb	w9, [x0, #16]
  2c:	cmp	w9, #0x50
  30:	b.eq	8c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x8c>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	b	104 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x104>
  50:	cbz	x0, b0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xb0>
  54:	ldrb	w9, [x0, #16]
  58:	cmp	w9, #0x23
  5c:	b.eq	8c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x8c>  // b.none
  60:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  64:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  68:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	b	104 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x104>
  7c:	cbz	x0, cc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xcc>
  80:	ldrb	w9, [x0, #16]
  84:	cmp	w9, #0x1d
  88:	b.ne	ec <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xec>  // b.any
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  94:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  98:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  9c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	b	e4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xe4>
  b0:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  b4:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  b8:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	b	e4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xe4>
  cc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  d0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  d4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  f0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  f4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm8CallBase18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w21, w1
  14:	mov	x20, x0
  18:	mov	x19, x8
  1c:	bl	0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  20:	cmp	w0, w21
  24:	b.ls	70 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x70>  // b.plast
  28:	mov	x0, x20
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w9, [x20, #20]
  34:	add	x8, x0, w21, uxtw #4
  38:	ldp	w11, w12, [x8, #8]
  3c:	mov	w10, #0x18                  	// #24
  40:	ldr	x8, [x8]
  44:	and	x9, x9, #0xfffffff
  48:	mneg	x9, x9, x10
  4c:	add	x9, x20, x9
  50:	sub	x12, x12, x11
  54:	madd	x9, x11, x10, x9
  58:	stp	x9, x12, [x19]
  5c:	str	x8, [x19, #16]
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x716                 	// #1814
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_:

0000000000000000 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	tst	x1, #0x7
   c:	str	xzr, [x0]
  10:	b.ne	28 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_+0x28>  // b.any
  14:	and	x8, x1, #0xfffffffffffffff9
  18:	str	x8, [x0]
  1c:	cbz	x1, 48 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_+0x48>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>
  2c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>
  30:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0xb3                  	// #179
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>
  4c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>
  50:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSG_>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x40                  	// #64
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE:

0000000000000000 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE+0x20>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x12
  14:	b.ne	40 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE+0x40>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>
  24:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>
  28:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x69                  	// #105
  3c:	bl	0 <__assert_fail>
  40:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>
  44:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>
  48:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst14handler_helperEPKNS_5ValueE>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x108                 	// #264
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_:

0000000000000000 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	tst	x1, #0x7
   c:	str	xzr, [x0]
  10:	b.ne	2c <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_+0x2c>  // b.any
  14:	and	x8, x1, #0xfffffffffffffff9
  18:	orr	x8, x8, #0x4
  1c:	str	x8, [x0]
  20:	cbz	x1, 4c <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_+0x4c>
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>
  30:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>
  34:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0xb3                  	// #179
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>
  50:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>
  54:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSI_>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x41                  	// #65
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_:

0000000000000000 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	tst	x1, #0x7
   c:	str	xzr, [x0]
  10:	b.ne	2c <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_+0x2c>  // b.any
  14:	and	x8, x1, #0xfffffffffffffff9
  18:	orr	x8, x8, #0x2
  1c:	str	x8, [x0]
  20:	cbz	x1, 4c <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_+0x4c>
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>
  30:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>
  34:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0xb3                  	// #179
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>
  50:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>
  54:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_EC2EPSE_>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x3f                  	// #63
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm18ModuleSummaryIndex12getValueInfoEm:

0000000000000000 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x10, [x0, #16]
   c:	cbz	x10, 80 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm+0x80>
  10:	add	x8, x0, #0x8
  14:	mov	x9, x8
  18:	ldr	x11, [x10, #32]
  1c:	add	x12, x10, #0x18
  20:	add	x13, x10, #0x10
  24:	cmp	x11, x1
  28:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  2c:	csel	x10, x12, x13, cc  // cc = lo, ul, last
  30:	ldr	x10, [x10]
  34:	cbnz	x10, 18 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm+0x18>
  38:	cmp	x9, x8
  3c:	b.eq	80 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm+0x80>  // b.none
  40:	ldr	x10, [x9, #32]
  44:	cmp	x10, x1
  48:	csel	x9, x8, x9, hi  // hi = pmore
  4c:	add	x10, x9, #0x20
  50:	cmp	x9, x8
  54:	csel	x8, xzr, x10, eq  // eq = none
  58:	tst	x8, #0x7
  5c:	b.eq	84 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm+0x84>  // b.none
  60:	adrp	x0, 0 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm>
  64:	adrp	x1, 0 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm>
  68:	adrp	x3, 0 <_ZNK4llvm18ModuleSummaryIndex12getValueInfoEm>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0xb3                  	// #179
  7c:	bl	0 <__assert_fail>
  80:	mov	x8, xzr
  84:	ldrb	w9, [x0, #228]
  88:	and	x8, x8, #0xfffffffffffffff8
  8c:	orr	x0, x8, x9
  90:	ldp	x29, x30, [sp], #16
  94:	ret

Disassembly of section .text._ZNK4llvm11GlobalValue7getGUIDEv:

0000000000000000 <_ZNK4llvm11GlobalValue7getGUIDEv>:
   0:	sub	sp, sp, #0x100
   4:	stp	x29, x30, [sp, #208]
   8:	str	x21, [sp, #224]
   c:	stp	x20, x19, [sp, #240]
  10:	add	x29, sp, #0xd0
  14:	add	x8, sp, #0x8
  18:	add	x21, sp, #0x8
  1c:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
  20:	ldp	x19, x20, [sp, #8]
  24:	add	x0, sp, #0x38
  28:	bl	0 <_ZN4llvm3MD5C1Ev>
  2c:	add	x0, sp, #0x38
  30:	mov	x1, x19
  34:	mov	x2, x20
  38:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
  3c:	add	x0, sp, #0x38
  40:	add	x1, sp, #0x28
  44:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
  48:	ldr	x0, [sp, #8]
  4c:	ldr	x19, [sp, #40]
  50:	add	x8, x21, #0x10
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZNK4llvm11GlobalValue7getGUIDEv+0x60>  // b.none
  5c:	bl	0 <_ZdlPv>
  60:	mov	x0, x19
  64:	ldp	x20, x19, [sp, #240]
  68:	ldr	x21, [sp, #224]
  6c:	ldp	x29, x30, [sp, #208]
  70:	add	sp, sp, #0x100
  74:	ret

Disassembly of section .text._ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb:

0000000000000000 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x1, #23]
  10:	tbz	w8, #5, 3c <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb+0x3c>
  14:	mov	x20, x0
  18:	mov	x0, x1
  1c:	mov	w19, w2
  20:	bl	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb>
  24:	and	w2, w19, #0x1
  28:	mov	x1, x0
  2c:	mov	x0, x20
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryEmb>
  3c:	adrp	x0, 0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb>
  40:	adrp	x1, 0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb>
  44:	adrp	x3, 0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryERKNS_11GlobalValueEb>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x4cc                 	// #1228
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x8, [x0]
  20:	ldr	w9, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x19, x2
  2c:	sub	x11, x1, x8
  30:	add	x10, x8, x9, lsl #3
  34:	mov	x24, x0
  38:	cmp	x10, x1
  3c:	asr	x26, x11, #3
  40:	b.eq	f4 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xf4>  // b.none
  44:	cmp	x8, x1
  48:	b.hi	16c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x16c>  // b.pmore
  4c:	cmp	x10, x1
  50:	b.cc	18c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x18c>  // b.lo, b.ul, b.last
  54:	ldr	w10, [x24, #12]
  58:	sub	x22, x21, x19
  5c:	add	x2, x9, x22, asr #3
  60:	asr	x28, x22, #3
  64:	cmp	x2, x10
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x84>  // b.plast
  6c:	add	x1, x24, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x24
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x8, [x24]
  80:	ldr	w9, [x24, #8]
  84:	add	x20, x8, x26, lsl #3
  88:	add	x23, x8, x9, lsl #3
  8c:	sub	x25, x23, x20
  90:	asr	x27, x25, #3
  94:	cmp	x27, x28
  98:	b.cs	110 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x110>  // b.hs, b.nlast
  9c:	ldr	w11, [x24, #12]
  a0:	add	x10, x28, x9
  a4:	cmp	x10, x11
  a8:	b.hi	1ac <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1ac>  // b.pmore
  ac:	cmp	x26, x9
  b0:	str	w10, [x24, #8]
  b4:	b.eq	cc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xcc>  // b.none
  b8:	add	x8, x8, w10, uxtw #3
  bc:	sub	x0, x8, x27, lsl #3
  c0:	mov	x1, x20
  c4:	mov	x2, x25
  c8:	bl	0 <memcpy>
  cc:	cbz	x25, e8 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xe8>
  d0:	mov	x8, x20
  d4:	ldr	x9, [x19], #8
  d8:	subs	x27, x27, #0x1
  dc:	str	x9, [x8], #8
  e0:	b.ne	d4 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xd4>  // b.any
  e4:	sub	x22, x21, x19
  e8:	cbz	x22, 14c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x14c>
  ec:	mov	x0, x23
  f0:	b	140 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x140>
  f4:	mov	x0, x24
  f8:	mov	x1, x19
  fc:	mov	x2, x21
 100:	bl	0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 104:	ldr	x8, [x24]
 108:	add	x20, x8, x26, lsl #3
 10c:	b	14c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x14c>
 110:	sub	x21, x23, x28, lsl #3
 114:	mov	x0, x24
 118:	mov	x1, x21
 11c:	mov	x2, x23
 120:	bl	0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 124:	subs	x2, x21, x20
 128:	b.eq	138 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x138>  // b.none
 12c:	sub	x0, x23, x2
 130:	mov	x1, x20
 134:	bl	0 <memmove>
 138:	cbz	x22, 14c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x14c>
 13c:	mov	x0, x20
 140:	mov	x1, x19
 144:	mov	x2, x22
 148:	bl	0 <memmove>
 14c:	mov	x0, x20
 150:	ldp	x20, x19, [sp, #80]
 154:	ldp	x22, x21, [sp, #64]
 158:	ldp	x24, x23, [sp, #48]
 15c:	ldp	x26, x25, [sp, #32]
 160:	ldp	x28, x27, [sp, #16]
 164:	ldp	x29, x30, [sp], #96
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 170:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 174:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x24e                 	// #590
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 190:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 194:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x24f                 	// #591
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 1b0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 1b4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x43                  	// #67
 1c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	asr	x22, x21, #3
  1c:	mov	x20, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x22, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_+0x44>  // b.plast
  30:	add	x2, x22, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x8                   	// #8
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cbz	x21, 60 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_+0x60>
  48:	ldr	x8, [x19]
  4c:	ldr	w9, [x19, #8]
  50:	mov	x1, x20
  54:	mov	x2, x21
  58:	add	x0, x8, x9, lsl #3
  5c:	bl	0 <memmove>
  60:	ldp	w8, w9, [x19, #8]
  64:	add	x8, x22, x8
  68:	cmp	x8, x9
  6c:	b.hi	84 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_+0x84>  // b.pmore
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_>
  8c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEvT_SB_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x43                  	// #67
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	asr	x22, x21, #3
  1c:	mov	x20, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x22, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_+0x44>  // b.plast
  30:	add	x2, x22, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x8                   	// #8
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cbz	x21, 60 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_+0x60>
  48:	ldr	x8, [x19]
  4c:	ldr	w9, [x19, #8]
  50:	mov	x1, x20
  54:	mov	x2, x21
  58:	add	x0, x8, x9, lsl #3
  5c:	bl	0 <memmove>
  60:	ldp	w8, w9, [x19, #8]
  64:	add	x8, x22, x8
  68:	cmp	x8, x9
  6c:	b.hi	84 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_+0x84>  // b.pmore
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_>
  8c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendISt13move_iteratorIPmEvEEvT_S6_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x43                  	// #67
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_:

0000000000000000 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	sub	x8, x1, x0
  1c:	cmp	x8, #0x81
  20:	b.lt	d8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd8>  // b.tstop
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	mov	x21, x2
  30:	add	x22, x0, #0x8
  34:	cbz	x21, b8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xb8>
  38:	lsr	x8, x8, #1
  3c:	and	x8, x8, #0x7ffffffffffffff8
  40:	add	x2, x19, x8
  44:	sub	x3, x20, #0x8
  48:	mov	x0, x19
  4c:	mov	x1, x22
  50:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
  54:	mov	x8, x20
  58:	mov	x9, x22
  5c:	ldr	x11, [x19]
  60:	ldr	x10, [x9], #8
  64:	cmp	x10, x11
  68:	b.cc	60 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x60>  // b.lo, b.ul, b.last
  6c:	sub	x23, x9, #0x8
  70:	ldr	x12, [x8, #-8]!
  74:	cmp	x11, x12
  78:	b.cc	70 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x70>  // b.lo, b.ul, b.last
  7c:	cmp	x23, x8
  80:	b.cs	90 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x90>  // b.hs, b.nlast
  84:	str	x12, [x23]
  88:	str	x10, [x8]
  8c:	b	5c <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x5c>
  90:	sub	x21, x21, #0x1
  94:	mov	x0, x23
  98:	mov	x1, x20
  9c:	mov	x2, x21
  a0:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
  a4:	sub	x8, x23, x19
  a8:	cmp	x8, #0x80
  ac:	mov	x20, x23
  b0:	b.gt	34 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x34>
  b4:	b	d8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd8>
  b8:	add	x2, x29, #0x18
  bc:	mov	x0, x19
  c0:	mov	x1, x20
  c4:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
  c8:	add	x2, sp, #0x8
  cc:	mov	x0, x19
  d0:	mov	x1, x20
  d4:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
  d8:	ldp	x20, x19, [sp, #64]
  dc:	ldp	x22, x21, [sp, #48]
  e0:	ldr	x23, [sp, #32]
  e4:	ldp	x29, x30, [sp, #16]
  e8:	add	sp, sp, #0x50
  ec:	ret

Disassembly of section .text._ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_:

0000000000000000 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, x0
  10:	mov	x19, x1
  14:	cmp	x8, #0x81
  18:	b.lt	74 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x74>  // b.tstop
  1c:	add	x20, x0, #0x80
  20:	mov	x1, x20
  24:	bl	0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_>
  28:	cmp	x20, x19
  2c:	b.eq	68 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x68>  // b.none
  30:	ldp	x10, x8, [x20, #-8]
  34:	mov	x9, x20
  38:	cmp	x8, x10
  3c:	b.cs	58 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x58>  // b.hs, b.nlast
  40:	mov	x9, x20
  44:	str	x10, [x9]
  48:	ldur	x10, [x9, #-16]
  4c:	sub	x9, x9, #0x8
  50:	cmp	x8, x10
  54:	b.cc	44 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x44>  // b.lo, b.ul, b.last
  58:	add	x20, x20, #0x8
  5c:	cmp	x20, x19
  60:	str	x8, [x9]
  64:	b.ne	30 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x30>  // b.any
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	x1, x19
  78:	ldp	x20, x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	b	0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_>

Disassembly of section .text._ZSt11__sort_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_:

0000000000000000 <_ZSt11__sort_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x9
  18:	b.lt	4c <_ZSt11__sort_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x4c>  // b.tstop
  1c:	mov	x19, x0
  20:	sub	x20, x1, #0x8
  24:	ldr	x8, [x19]
  28:	ldr	x3, [x20]
  2c:	sub	x21, x20, x19
  30:	asr	x2, x21, #3
  34:	mov	x0, x19
  38:	mov	x1, xzr
  3c:	str	x8, [x20], #-8
  40:	bl	0 <_ZSt11__sort_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_>
  44:	cmp	x21, #0x8
  48:	b.gt	24 <_ZSt11__sort_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x24>
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_:

0000000000000000 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x10
  18:	b.lt	58 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x58>  // b.tstop
  1c:	asr	x20, x8, #3
  20:	sub	x8, x20, #0x2
  24:	sub	x9, x20, #0x1
  28:	cmp	x8, #0x0
  2c:	csel	x8, x9, x8, lt  // lt = tstop
  30:	mov	x19, x0
  34:	asr	x21, x8, #1
  38:	ldr	x3, [x19, x21, lsl #3]
  3c:	mov	x0, x19
  40:	mov	x1, x21
  44:	mov	x2, x20
  48:	bl	0 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_>
  4c:	sub	x21, x21, #0x1
  50:	cmn	x21, #0x1
  54:	b.ne	38 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x38>  // b.any
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_:

0000000000000000 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_>:
   0:	sub	x9, x2, #0x1
   4:	cmp	x9, #0x0
   8:	csel	x8, x2, x9, lt  // lt = tstop
   c:	asr	x10, x8, #1
  10:	cmp	x10, x1
  14:	mov	x8, x1
  18:	b.le	54 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0x54>
  1c:	mov	x11, x1
  20:	lsl	x8, x11, #1
  24:	mov	w12, #0x1                   	// #1
  28:	add	x8, x8, #0x2
  2c:	bfi	x12, x11, #1, #63
  30:	ldr	x13, [x0, x8, lsl #3]
  34:	ldr	x14, [x0, x12, lsl #3]
  38:	cmp	x13, x14
  3c:	csel	x8, x12, x8, cc  // cc = lo, ul, last
  40:	ldr	x12, [x0, x8, lsl #3]
  44:	cmp	x8, x10
  48:	str	x12, [x0, x11, lsl #3]
  4c:	mov	x11, x8
  50:	b.lt	20 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0x20>  // b.tstop
  54:	tbnz	w2, #0, 80 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0x80>
  58:	sub	x10, x2, #0x2
  5c:	cmp	x10, #0x0
  60:	csel	x9, x9, x10, lt  // lt = tstop
  64:	cmp	x8, x9, asr #1
  68:	b.ne	80 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0x80>  // b.any
  6c:	mov	w9, #0x1                   	// #1
  70:	bfi	x9, x8, #1, #63
  74:	ldr	x10, [x0, x9, lsl #3]
  78:	str	x10, [x0, x8, lsl #3]
  7c:	mov	x8, x9
  80:	cmp	x8, x1
  84:	b.le	b8 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0xb8>
  88:	sub	x9, x8, #0x1
  8c:	cmp	x9, #0x0
  90:	csel	x9, x8, x9, lt  // lt = tstop
  94:	asr	x9, x9, #1
  98:	ldr	x10, [x0, x9, lsl #3]
  9c:	cmp	x10, x3
  a0:	b.cs	b8 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0xb8>  // b.hs, b.nlast
  a4:	cmp	x9, x1
  a8:	str	x10, [x0, x8, lsl #3]
  ac:	mov	x8, x9
  b0:	b.gt	88 <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0x88>
  b4:	b	bc <_ZSt13__adjust_heapIPmlmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_+0xbc>
  b8:	mov	x9, x8
  bc:	str	x3, [x0, x9, lsl #3]
  c0:	ret

Disassembly of section .text._ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_:

0000000000000000 <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_>:
   0:	ldr	x8, [x1]
   4:	ldr	x10, [x2]
   8:	ldr	x9, [x3]
   c:	cmp	x8, x10
  10:	b.cs	24 <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_+0x24>  // b.hs, b.nlast
  14:	cmp	x10, x9
  18:	b.cs	3c <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_+0x3c>  // b.hs, b.nlast
  1c:	ldr	x8, [x0]
  20:	b	6c <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_+0x6c>
  24:	cmp	x8, x9
  28:	b.cs	54 <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_+0x54>  // b.hs, b.nlast
  2c:	ldr	x9, [x0]
  30:	str	x8, [x0]
  34:	str	x9, [x1]
  38:	ret
  3c:	ldr	x10, [x0]
  40:	cmp	x8, x9
  44:	b.cs	78 <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_+0x78>  // b.hs, b.nlast
  48:	str	x9, [x0]
  4c:	str	x10, [x3]
  50:	ret
  54:	ldr	x8, [x0]
  58:	cmp	x10, x9
  5c:	b.cs	6c <_ZSt22__move_median_to_firstIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_S4_T0_+0x6c>  // b.hs, b.nlast
  60:	str	x9, [x0]
  64:	str	x8, [x3]
  68:	ret
  6c:	str	x10, [x0]
  70:	str	x8, [x2]
  74:	ret
  78:	str	x8, [x0]
  7c:	str	x10, [x1]
  80:	ret

Disassembly of section .text._ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_:

0000000000000000 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	b.eq	a4 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xa4>  // b.none
  18:	add	x9, x0, #0x8
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	cmp	x9, x1
  28:	b.eq	a4 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xa4>  // b.none
  2c:	mov	x21, x20
  30:	ldr	x22, [x21, #8]
  34:	ldr	x8, [x20]
  38:	mov	x10, x21
  3c:	mov	x21, x9
  40:	cmp	x22, x8
  44:	b.cs	6c <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x6c>  // b.hs, b.nlast
  48:	subs	x2, x21, x20
  4c:	mov	x8, x20
  50:	b.eq	94 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x94>  // b.none
  54:	sub	x8, x10, x2
  58:	add	x0, x8, #0x10
  5c:	mov	x1, x20
  60:	bl	0 <memmove>
  64:	mov	x8, x20
  68:	b	94 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x94>
  6c:	ldr	x9, [x10]
  70:	mov	x8, x21
  74:	cmp	x22, x9
  78:	b.cs	94 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x94>  // b.hs, b.nlast
  7c:	mov	x8, x21
  80:	str	x9, [x8]
  84:	ldur	x9, [x8, #-16]
  88:	sub	x8, x8, #0x8
  8c:	cmp	x22, x9
  90:	b.cc	80 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x80>  // b.lo, b.ul, b.last
  94:	add	x9, x21, #0x8
  98:	cmp	x9, x19
  9c:	str	x22, [x8]
  a0:	b.ne	30 <_ZSt16__insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x30>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldp	x22, x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w21, w1
  18:	mov	x20, x0
  1c:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x54>
  20:	mov	w9, w21
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldr	x21, [sp, #16]
  34:	mov	w8, w3
  38:	orr	x6, x9, #0x100000000
  3c:	mov	w3, #0x5                   	// #5
  40:	mov	w1, w8
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w21
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  74:	mov	w1, #0x5                   	// #5
  78:	mov	w2, #0x6                   	// #6
  7c:	mov	x0, x20
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  84:	mov	x21, xzr
  88:	ldr	w1, [x19, x21]
  8c:	mov	w2, #0x6                   	// #6
  90:	mov	x0, x20
  94:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  98:	add	x21, x21, #0x4
  9c:	cmp	x21, #0x14
  a0:	b.ne	88 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret

Disassembly of section .text._ZN4llvm15ValueEnumeratorD2Ev:

0000000000000000 <_ZN4llvm15ValueEnumeratorD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #512]
  14:	cbz	x0, 1c <_ZN4llvm15ValueEnumeratorD2Ev+0x1c>
  18:	bl	0 <_ZdlPv>
  1c:	ldr	x0, [x19, #480]
  20:	bl	0 <_ZdlPv>
  24:	ldr	x8, [x19, #472]
  28:	ldr	x0, [x19, #448]
  2c:	add	x8, x8, #0x1
  30:	str	x8, [x19, #472]
  34:	bl	0 <_ZdlPv>
  38:	ldr	x8, [x19, #440]
  3c:	ldr	x0, [x19, #416]
  40:	add	x8, x8, #0x1
  44:	str	x8, [x19, #440]
  48:	cbz	x0, 50 <_ZN4llvm15ValueEnumeratorD2Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #392]
  54:	bl	0 <_ZdlPv>
  58:	ldr	x8, [x19, #384]
  5c:	ldr	x0, [x19, #360]
  60:	add	x8, x8, #0x1
  64:	str	x8, [x19, #384]
  68:	cbz	x0, 70 <_ZN4llvm15ValueEnumeratorD2Ev+0x70>
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19, #336]
  74:	bl	0 <_ZdlPv>
  78:	ldr	x8, [x19, #328]
  7c:	add	x0, x19, #0x120
  80:	add	x8, x8, #0x1
  84:	str	x8, [x19, #328]
  88:	bl	0 <_ZN4llvm15ValueEnumeratorD2Ev>
  8c:	ldr	x8, [x19, #288]
  90:	ldr	x0, [x19, #264]
  94:	add	x8, x8, #0x1
  98:	str	x8, [x19, #288]
  9c:	bl	0 <_ZdlPv>
  a0:	ldr	x8, [x19, #256]
  a4:	ldr	x0, [x19, #232]
  a8:	add	x8, x8, #0x1
  ac:	str	x8, [x19, #256]
  b0:	cbz	x0, b8 <_ZN4llvm15ValueEnumeratorD2Ev+0xb8>
  b4:	bl	0 <_ZdlPv>
  b8:	ldr	x0, [x19, #208]
  bc:	cbz	x0, c4 <_ZN4llvm15ValueEnumeratorD2Ev+0xc4>
  c0:	bl	0 <_ZdlPv>
  c4:	ldr	x0, [x19, #184]
  c8:	add	x20, x19, #0x88
  cc:	cbz	x0, d4 <_ZN4llvm15ValueEnumeratorD2Ev+0xd4>
  d0:	bl	0 <_ZdlPv>
  d4:	ldr	x1, [x19, #152]
  d8:	mov	x0, x20
  dc:	bl	0 <_ZN4llvm15ValueEnumeratorD2Ev>
  e0:	ldr	x0, [x19, #112]
  e4:	cbz	x0, ec <_ZN4llvm15ValueEnumeratorD2Ev+0xec>
  e8:	bl	0 <_ZdlPv>
  ec:	ldr	x0, [x19, #88]
  f0:	bl	0 <_ZdlPv>
  f4:	ldr	x8, [x19, #80]
  f8:	ldr	x0, [x19, #56]
  fc:	add	x8, x8, #0x1
 100:	str	x8, [x19, #80]
 104:	cbz	x0, 10c <_ZN4llvm15ValueEnumeratorD2Ev+0x10c>
 108:	bl	0 <_ZdlPv>
 10c:	ldr	x0, [x19, #32]
 110:	bl	0 <_ZdlPv>
 114:	ldr	x8, [x19, #24]
 118:	mov	x0, x19
 11c:	add	x8, x8, #0x1
 120:	str	x8, [x19, #24]
 124:	ldp	x20, x19, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	b	0 <_ZN4llvm15ValueEnumeratorD2Ev>

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	3c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x3c>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19, #16]
  24:	cbz	x0, 2c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	add	x19, x19, #0x28
  30:	cmp	x21, x19
  34:	b.ne	20 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x20>  // b.any
  38:	ldr	x19, [x20]
  3c:	cbz	x19, 54 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x54>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv:

0000000000000000 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	tbnz	w8, #0, 28 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv+0x28>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #16]
  1c:	bl	0 <_ZdlPv>
  20:	ldrb	w8, [x19, #8]
  24:	tbnz	w8, #0, 34 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv+0x34>
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv>
  38:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv>
  3c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE17deallocateBucketsEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x45b                 	// #1115
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEneERKS8_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EEC2EPKS7_SA_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x10
  28:	cmp	x9, x8
  2c:	str	x8, [x0, #16]
  30:	b.ne	18 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv>
  40:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv>
  44:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImS2_EELb1EE23AdvancePastEmptyBucketsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x4e0                 	// #1248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	sub	x9, x9, x8
  24:	cmp	x21, x9
  28:	b.ls	44 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_+0x44>  // b.plast
  2c:	add	x2, x21, x8
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x4                   	// #4
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x19, #8]
  44:	cmp	x21, #0x1
  48:	b.lt	70 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_+0x70>  // b.tstop
  4c:	ldr	x9, [x19]
  50:	add	x8, x9, x8, lsl #2
  54:	add	x9, x21, #0x1
  58:	ldrb	w10, [x20], #1
  5c:	sub	x9, x9, #0x1
  60:	cmp	x9, #0x1
  64:	str	w10, [x8], #4
  68:	b.gt	58 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_+0x58>
  6c:	ldr	w8, [x19, #8]
  70:	ldr	w9, [x19, #12]
  74:	add	x8, x21, x8
  78:	cmp	x8, x9
  7c:	b.hi	94 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_+0x94>  // b.pmore
  80:	str	w8, [x19, #8]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldr	x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6appendIPKcvEEvT_S5_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x43                  	// #67
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12AliasSummaryELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm18ModuleSummaryIndex21getGUIDFromOriginalIDEm:

0000000000000000 <_ZNK4llvm18ModuleSummaryIndex21getGUIDFromOriginalIDEm>:
   0:	ldr	x10, [x0, #192]
   4:	cbz	x10, 54 <_ZNK4llvm18ModuleSummaryIndex21getGUIDFromOriginalIDEm+0x54>
   8:	add	x8, x0, #0xb8
   c:	mov	x9, x8
  10:	ldr	x11, [x10, #32]
  14:	add	x12, x10, #0x18
  18:	add	x13, x10, #0x10
  1c:	cmp	x11, x1
  20:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  24:	csel	x10, x12, x13, cc  // cc = lo, ul, last
  28:	ldr	x10, [x10]
  2c:	cbnz	x10, 10 <_ZNK4llvm18ModuleSummaryIndex21getGUIDFromOriginalIDEm+0x10>
  30:	cmp	x9, x8
  34:	b.eq	54 <_ZNK4llvm18ModuleSummaryIndex21getGUIDFromOriginalIDEm+0x54>  // b.none
  38:	ldr	x10, [x9, #32]
  3c:	cmp	x10, x1
  40:	csel	x9, x8, x9, hi  // hi = pmore
  44:	cmp	x9, x8
  48:	b.eq	54 <_ZNK4llvm18ModuleSummaryIndex21getGUIDFromOriginalIDEm+0x54>  // b.none
  4c:	ldr	x0, [x9, #40]
  50:	ret
  54:	mov	x0, xzr
  58:	ret

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_>
  1c:	mov	x2, x0
  20:	cbz	x1, 4c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x4c>
  24:	mov	x8, x1
  28:	add	x4, sp, #0x8
  2c:	mov	x0, x20
  30:	mov	x1, x2
  34:	mov	x2, x8
  38:	mov	x3, x19
  3c:	str	x20, [sp, #8]
  40:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_>
  44:	mov	x2, x0
  48:	mov	w1, #0x1                   	// #1
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x2
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0, #16]
  10:	mov	x20, x1
  14:	cbz	x9, 4c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm+0x4c>
  18:	ldr	x8, [x20]
  1c:	ldr	x10, [x9, #32]
  20:	mov	x19, x9
  24:	add	x9, x9, #0x10
  28:	add	x11, x19, #0x18
  2c:	cmp	x8, x10
  30:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  34:	ldr	x9, [x9]
  38:	cbnz	x9, 1c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm+0x1c>
  3c:	cmp	x8, x10
  40:	mov	x8, x19
  44:	b.cc	50 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm+0x50>  // b.lo, b.ul, b.last
  48:	b	68 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm+0x68>
  4c:	add	x19, x0, #0x8
  50:	ldr	x8, [x0, #24]
  54:	cmp	x8, x19
  58:	b.eq	80 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm+0x80>  // b.none
  5c:	mov	x0, x19
  60:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  64:	mov	x8, x0
  68:	ldr	x9, [x8, #32]
  6c:	ldr	x10, [x20]
  70:	cmp	x9, x10
  74:	csel	x0, xzr, x8, cc  // cc = lo, ul, last
  78:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  7c:	b	84 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE24_M_get_insert_unique_posERKm+0x84>
  80:	mov	x0, xzr
  84:	mov	x1, x19
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_IRKmNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSD_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_IRKmNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSD_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x3
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	cbz	x1, 2c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_IRKmNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x2c>
  24:	mov	w22, #0x1                   	// #1
  28:	b	48 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_IRKmNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x48>
  2c:	add	x8, x19, #0x8
  30:	cmp	x8, x20
  34:	b.eq	24 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_IRKmNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x24>  // b.none
  38:	ldr	x8, [x21]
  3c:	ldr	x9, [x20, #32]
  40:	cmp	x8, x9
  44:	cset	w22, cc  // cc = lo, ul, last
  48:	mov	w0, #0x28                  	// #40
  4c:	bl	0 <_Znwm>
  50:	ldr	x8, [x21]
  54:	mov	x23, x0
  58:	add	x3, x19, #0x8
  5c:	mov	x1, x23
  60:	str	x8, [x0, #32]
  64:	mov	w0, w22
  68:	mov	x2, x20
  6c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  70:	ldr	x8, [x19, #40]
  74:	mov	x0, x23
  78:	ldr	x23, [sp, #16]
  7c:	add	x8, x8, #0x1
  80:	str	x8, [x19, #40]
  84:	ldp	x20, x19, [sp, #48]
  88:	ldp	x22, x21, [sp, #32]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueImEESt4pairISt17_Rb_tree_iteratorImEbEOT_:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueImEESt4pairISt17_Rb_tree_iteratorImEbEOT_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueImEESt4pairISt17_Rb_tree_iteratorImEbEOT_>
  1c:	mov	x2, x0
  20:	cbz	x1, 4c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueImEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x4c>
  24:	mov	x8, x1
  28:	add	x4, sp, #0x8
  2c:	mov	x0, x20
  30:	mov	x1, x2
  34:	mov	x2, x8
  38:	mov	x3, x19
  3c:	str	x20, [sp, #8]
  40:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueImEESt4pairISt17_Rb_tree_iteratorImEbEOT_>
  44:	mov	x2, x0
  48:	mov	w1, #0x1                   	// #1
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x2
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_ImNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSB_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_ImNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSB_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x3
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	cbz	x1, 2c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_ImNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSB_OT_RT0_+0x2c>
  24:	mov	w22, #0x1                   	// #1
  28:	b	48 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_ImNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSB_OT_RT0_+0x48>
  2c:	add	x8, x19, #0x8
  30:	cmp	x8, x20
  34:	b.eq	24 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_ImNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorImEPSt18_Rb_tree_node_baseSB_OT_RT0_+0x24>  // b.none
  38:	ldr	x8, [x21]
  3c:	ldr	x9, [x20, #32]
  40:	cmp	x8, x9
  44:	cset	w22, cc  // cc = lo, ul, last
  48:	mov	w0, #0x28                  	// #40
  4c:	bl	0 <_Znwm>
  50:	ldr	x8, [x21]
  54:	mov	x23, x0
  58:	add	x3, x19, #0x8
  5c:	mov	x1, x23
  60:	str	x8, [x0, #32]
  64:	mov	w0, w22
  68:	mov	x2, x20
  6c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  70:	ldr	x8, [x19, #40]
  74:	mov	x0, x23
  78:	ldr	x23, [sp, #16]
  7c:	add	x8, x8, #0x1
  80:	str	x8, [x19, #40]
  84:	ldp	x20, x19, [sp, #48]
  88:	ldp	x22, x21, [sp, #32]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	w9, [x20, #8]
  5c:	str	w9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_:

0000000000000000 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_>:
   0:	mov	x9, x0
   4:	ldr	x0, [x0, #16]
   8:	mov	x8, x1
   c:	add	x1, x9, #0x8
  10:	cbz	x0, 44 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x44>
  14:	ldr	x8, [x8]
  18:	ldr	x9, [x0, #32]
  1c:	cmp	x9, x8
  20:	b.cs	2c <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x2c>  // b.hs, b.nlast
  24:	ldr	x10, [x0, #24]
  28:	b	3c <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x3c>
  2c:	ldr	x10, [x0, #16]
  30:	cmp	x8, x9
  34:	b.cs	4c <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x4c>  // b.hs, b.nlast
  38:	mov	x1, x0
  3c:	mov	x0, x10
  40:	cbnz	x10, 18 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x18>
  44:	mov	x0, x1
  48:	ret
  4c:	ldr	x9, [x0, #24]
  50:	cbz	x10, 74 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x74>
  54:	ldr	x11, [x10, #32]
  58:	add	x12, x10, #0x18
  5c:	add	x13, x10, #0x10
  60:	cmp	x11, x8
  64:	csel	x0, x0, x10, cc  // cc = lo, ul, last
  68:	csel	x10, x12, x13, cc  // cc = lo, ul, last
  6c:	ldr	x10, [x10]
  70:	cbnz	x10, 54 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x54>
  74:	cbz	x9, 98 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x98>
  78:	ldr	x10, [x9, #32]
  7c:	add	x11, x9, #0x10
  80:	add	x12, x9, #0x18
  84:	cmp	x8, x10
  88:	csel	x1, x9, x1, cc  // cc = lo, ul, last
  8c:	csel	x9, x11, x12, cc  // cc = lo, ul, last
  90:	ldr	x9, [x9]
  94:	cbnz	x9, 78 <_ZNKSt8_Rb_treeImSt4pairIKmS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm13TypeIdSummaryEEESt10_Select1stISB_ESt4lessImESaISB_EE11equal_rangeERS1_+0x78>
  98:	ret

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x19, [x2, #8]
  14:	mov	x21, x2
  18:	mov	w22, w1
  1c:	mov	x20, x0
  20:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x54>
  24:	ldr	x2, [x21]
  28:	mov	w8, w22
  2c:	mov	x0, x20
  30:	mov	w1, w3
  34:	mov	x3, x19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldp	x22, x21, [sp, #16]
  40:	orr	x6, x8, #0x100000000
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  54:	ldr	w2, [x20, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  64:	mov	w2, #0x6                   	// #6
  68:	mov	x0, x20
  6c:	mov	w1, w22
  70:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  74:	mov	w2, #0x6                   	// #6
  78:	mov	x0, x20
  7c:	mov	w1, w19
  80:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  84:	cbz	w19, bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xbc>
  88:	mov	w8, wzr
  8c:	ldr	x9, [x21, #8]
  90:	cmp	x9, w8, uxtw
  94:	b.ls	cc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xcc>  // b.plast
  98:	ldr	x9, [x21]
  9c:	mov	w22, w8
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	ldr	w1, [x9, x22, lsl #2]
  ac:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  b0:	add	w8, w22, #0x1
  b4:	cmp	w19, w8
  b8:	b.ne	8c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x8c>  // b.any
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldp	x22, x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  d4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0xfa                  	// #250
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl6OptionC2ENS0_18NumOccurrencesFlagENS0_12OptionHiddenE:

0000000000000000 <_ZN4llvm2cl6OptionC2ENS0_18NumOccurrencesFlagENS0_12OptionHiddenE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZTVN4llvm2cl6OptionE>
  10:	ldr	x8, [x8]
  14:	movi	v0.2d, #0x0
  18:	adrp	x10, 0 <_ZN4llvm2cl6OptionC2ENS0_18NumOccurrencesFlagENS0_12OptionHiddenE>
  1c:	stur	q0, [x0, #12]
  20:	stur	q0, [x0, #28]
  24:	stur	q0, [x0, #44]
  28:	ldr	d0, [x10]
  2c:	ldrh	w10, [x0, #10]
  30:	and	w9, w1, #0x7
  34:	add	x8, x8, #0x10
  38:	bfi	w9, w2, #5, #2
  3c:	str	x8, [x0]
  40:	and	w8, w10, #0x8000
  44:	add	x11, x0, #0x50
  48:	orr	w9, w9, w8
  4c:	mov	x8, x0
  50:	adrp	x10, 0 <_ZN4llvm2cl6OptionC2ENS0_18NumOccurrencesFlagENS0_12OptionHiddenE>
  54:	strh	wzr, [x0, #8]
  58:	str	wzr, [x0, #60]
  5c:	strh	w9, [x0, #10]
  60:	str	x11, [x8, #64]!
  64:	str	d0, [x0, #72]
  68:	ldr	d0, [x10]
  6c:	adrp	x10, 0 <_ZN4llvm2cl15GeneralCategoryE>
  70:	ldr	x10, [x10]
  74:	add	x9, x0, #0x80
  78:	stp	xzr, x9, [x0, #88]
  7c:	str	x9, [x0, #104]
  80:	str	d0, [x0, #112]
  84:	str	wzr, [x0, #120]
  88:	add	x1, sp, #0x8
  8c:	mov	x0, x8
  90:	str	x10, [sp, #8]
  94:	bl	0 <_ZN4llvm2cl6OptionC2ENS0_18NumOccurrencesFlagENS0_12OptionHiddenE>
  98:	ldp	x29, x30, [sp, #16]
  9c:	add	sp, sp, #0x20
  a0:	ret

Disassembly of section .text._ZN4llvm2cl5applyINS0_3optIjLb0ENS0_6parserIjEEEEA26_cJNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEvPT_RKT0_DpRKT1_:

0000000000000000 <_ZN4llvm2cl5applyINS0_3optIjLb0ENS0_6parserIjEEEEA26_cJNS0_12OptionHiddenENS0_11initializerIiEENS0_4descEEEEvPT_RKT0_DpRKT1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x1
  1c:	mov	x19, x4
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <strlen>
  30:	mov	x2, x0
  34:	mov	x0, x23
  38:	mov	x1, x22
  3c:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  40:	ldrh	w8, [x21]
  44:	ldrh	w9, [x23, #10]
  48:	ubfiz	w8, w8, #5, #2
  4c:	and	w9, w9, #0xffffff9f
  50:	orr	w8, w8, w9
  54:	strh	w8, [x23, #10]
  58:	ldr	x8, [x20]
  5c:	mov	w9, #0x1                   	// #1
  60:	ldr	w8, [x8]
  64:	strb	w9, [x23, #156]
  68:	str	w8, [x23, #136]
  6c:	str	w8, [x23, #152]
  70:	ldr	q0, [x19]
  74:	str	q0, [x23, #32]
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldr	x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl14OptionCategoryELb1EE9push_backERKS3_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #12]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #12]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldr	w8, [x0, #8]
  14:	ldr	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKjEN4llvm2cl3optIjLb0ENS4_6parserIjEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKjEN4llvm2cl3optIjLb0ENS4_6parserIjEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA23_cJNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEvPT_RKT0_DpRKT1_:

0000000000000000 <_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA23_cJNS0_12OptionHiddenENS0_11initializerIbEENS0_4descEEEEvPT_RKT0_DpRKT1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x1
  1c:	mov	x19, x4
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <strlen>
  30:	mov	x2, x0
  34:	mov	x0, x23
  38:	mov	x1, x22
  3c:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  40:	ldrh	w8, [x21]
  44:	ldrh	w9, [x23, #10]
  48:	mov	w10, #0x1                   	// #1
  4c:	ubfiz	w8, w8, #5, #2
  50:	and	w9, w9, #0xffffff9f
  54:	orr	w8, w8, w9
  58:	strh	w8, [x23, #10]
  5c:	ldr	x8, [x20]
  60:	ldrb	w9, [x8]
  64:	strb	w10, [x23, #153]
  68:	strb	w9, [x23, #136]
  6c:	ldrb	w8, [x8]
  70:	strb	w8, [x23, #152]
  74:	ldr	q0, [x19]
  78:	str	q0, [x23, #32]
  7c:	ldp	x20, x19, [sp, #48]
  80:	ldp	x22, x21, [sp, #32]
  84:	ldr	x23, [sp, #16]
  88:	ldp	x29, x30, [sp], #64
  8c:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #9]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #9]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	ldrb	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x8, x8, #0x20
   c:	cmp	x0, x8
  10:	b.eq	18 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x18>  // b.none
  14:	b	0 <free>
  18:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	cbz	x0, 8 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv+0x8>
   4:	b	0 <_ZdlPv>
   8:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	cmp	x1, x8
  1c:	b.eq	2c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x2c>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tbz	w0, #0, 34 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x34>
  2c:	add	x0, x19, #0x10
  30:	b	38 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x38>
  34:	mov	x0, xzr
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt6vectorIcSaIcEE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, d4 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0xd4>
  18:	ldp	x23, x8, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x8, x8, x23
  28:	cmp	x8, x1
  2c:	b.cs	64 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0x64>  // b.hs, b.nlast
  30:	ldr	x24, [x19]
  34:	adrp	x2, 0 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm>
  38:	add	x2, x2, #0x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm>
  48:	mov	x21, x0
  4c:	cbz	x0, 80 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0x80>
  50:	tbnz	x21, #63, e8 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0xe8>
  54:	mov	x0, x21
  58:	bl	0 <_Znwm>
  5c:	mov	x22, x0
  60:	b	84 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0x84>
  64:	mov	x0, x23
  68:	mov	w1, wzr
  6c:	mov	x2, x20
  70:	add	x21, x23, x20
  74:	bl	0 <memset>
  78:	str	x21, [x19, #8]
  7c:	b	d4 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0xd4>
  80:	mov	x22, xzr
  84:	sub	x8, x23, x24
  88:	add	x23, x22, x8
  8c:	mov	x0, x23
  90:	mov	w1, wzr
  94:	mov	x2, x20
  98:	bl	0 <memset>
  9c:	ldp	x24, x8, [x19]
  a0:	sub	x2, x8, x24
  a4:	cmp	x2, #0x1
  a8:	b.lt	b8 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0xb8>  // b.tstop
  ac:	mov	x0, x22
  b0:	mov	x1, x24
  b4:	bl	0 <memmove>
  b8:	cbz	x24, c4 <_ZNSt6vectorIcSaIcEE17_M_default_appendEm+0xc4>
  bc:	mov	x0, x24
  c0:	bl	0 <_ZdlPv>
  c4:	add	x8, x23, x20
  c8:	add	x9, x22, x21
  cc:	stp	x22, x8, [x19]
  d0:	str	x9, [x19, #16]
  d4:	ldp	x20, x19, [sp, #48]
  d8:	ldp	x22, x21, [sp, #32]
  dc:	ldp	x24, x23, [sp, #16]
  e0:	ldp	x29, x30, [sp], #64
  e4:	ret
  e8:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  14:	sub	x10, x8, x9
  18:	cmp	x10, x1
  1c:	b.cc	4c <_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc+0x4c>  // b.lo, b.ul, b.last
  20:	cmp	x9, x1
  24:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  28:	adds	x9, x10, x9
  2c:	cset	w10, cs  // cs = hs, nlast
  30:	cmp	x9, #0x0
  34:	cset	w11, lt  // lt = tstop
  38:	orr	w10, w10, w11
  3c:	cmp	w10, #0x0
  40:	csel	x0, x8, x9, ne  // ne = any
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	mov	x0, x2
  50:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorIPN4llvm6ModuleESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZNKSt6vectorIPN4llvm6ModuleESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIPN4llvm6ModuleESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIPN4llvm6ModuleESaIS2_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPN4llvm6ModuleESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPN4llvm6ModuleESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPN4llvm6ModuleESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPN4llvm6ModuleESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6appendEmRKc:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	mov	x21, x2
  20:	sub	x9, x9, x8
  24:	cmp	x9, x1
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc+0x44>  // b.hs, b.nlast
  2c:	add	x2, x8, x20
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x1                   	// #1
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	b	48 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc+0x48>
  44:	cbz	x20, 60 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc+0x60>
  48:	ldr	x8, [x19]
  4c:	ldr	w9, [x19, #8]
  50:	ldrb	w1, [x21]
  54:	mov	x2, x20
  58:	add	x0, x8, x9
  5c:	bl	0 <memset>
  60:	ldp	w8, w9, [x19, #8]
  64:	add	x8, x8, x20
  68:	cmp	x8, x9
  6c:	b.hi	84 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc+0x84>  // b.pmore
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc>
  8c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6appendEmRKc>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x43                  	// #67
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x20, x2, x1
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	sub	x9, x9, x8
  24:	cmp	x20, x9
  28:	b.ls	44 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_+0x44>  // b.plast
  2c:	add	x2, x20, x8
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x1                   	// #1
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	b	48 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_+0x48>
  44:	cbz	x20, 60 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_+0x60>
  48:	ldr	x8, [x19]
  4c:	ldr	w9, [x19, #8]
  50:	mov	x1, x21
  54:	mov	x2, x20
  58:	add	x0, x8, x9
  5c:	bl	0 <memmove>
  60:	ldp	w8, w9, [x19, #8]
  64:	add	x8, x20, x8
  68:	cmp	x8, x9
  6c:	b.hi	84 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_+0x84>  // b.pmore
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_>
  8c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6appendISt13move_iteratorIPcEvEEvT_S6_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x43                  	// #67
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x8
  28:	cmp	x9, x8
  2c:	str	x8, [x0]
  30:	b.ne	18 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  40:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  44:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xf8                  	// #248
  58:	bl	0 <__assert_fail>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_BitcodeWriter.cpp>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	adrp	x19, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  18:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  1c:	add	x19, x19, #0x0
  20:	adrp	x1, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  24:	mov	w21, #0x1                   	// #1
  28:	mov	w8, #0x19                  	// #25
  2c:	add	x22, sp, #0xc
  30:	add	x9, x9, #0x0
  34:	mov	w10, #0x47                  	// #71
  38:	add	x1, x1, #0x0
  3c:	sub	x2, x29, #0x4
  40:	sub	x3, x29, #0x10
  44:	add	x4, sp, #0x10
  48:	mov	x0, x19
  4c:	stur	w21, [x29, #-4]
  50:	str	w8, [sp, #12]
  54:	stur	x22, [x29, #-16]
  58:	stp	x9, x10, [sp, #16]
  5c:	bl	0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  60:	adrp	x20, 0 <__dso_handle>
  64:	adrp	x0, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  68:	add	x20, x20, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	x1, x19
  74:	mov	x2, x20
  78:	bl	0 <__cxa_atexit>
  7c:	adrp	x19, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  80:	adrp	x8, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  84:	add	x19, x19, #0x0
  88:	adrp	x1, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  8c:	add	x8, x8, #0x0
  90:	mov	w9, #0x33                  	// #51
  94:	add	x1, x1, #0x0
  98:	sub	x2, x29, #0x4
  9c:	sub	x3, x29, #0x10
  a0:	add	x4, sp, #0x10
  a4:	mov	x0, x19
  a8:	stur	w21, [x29, #-4]
  ac:	strb	wzr, [sp, #12]
  b0:	stur	x22, [x29, #-16]
  b4:	stp	x8, x9, [sp, #16]
  b8:	bl	0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  bc:	adrp	x0, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  c0:	add	x0, x0, #0x0
  c4:	mov	x1, x19
  c8:	mov	x2, x20
  cc:	bl	0 <__cxa_atexit>
  d0:	ldp	x20, x19, [sp, #80]
  d4:	ldp	x22, x21, [sp, #64]
  d8:	ldp	x29, x30, [sp, #48]
  dc:	add	sp, sp, #0x60
  e0:	ret

BitcodeWriterPass.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w9, [x0, #9]
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	mov	x19, x8
  20:	cbz	w9, 38 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x38>
  24:	mov	x0, x2
  28:	mov	x1, x20
  2c:	bl	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  30:	mov	x3, x0
  34:	b	3c <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x3c>
  38:	mov	x3, xzr
  3c:	ldr	x1, [x21]
  40:	ldrb	w2, [x21, #8]
  44:	ldrb	w4, [x21, #10]
  48:	mov	x0, x20
  4c:	mov	x5, xzr
  50:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  54:	mov	x8, x19
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>

0000000000000068 <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE>:
  68:	sub	sp, sp, #0x20
  6c:	stp	x29, x30, [sp, #16]
  70:	add	x29, sp, #0x10
  74:	str	x0, [sp, #8]
  78:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  7c:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x2, sp, #0x8
  8c:	bl	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  90:	ldp	x29, x30, [sp, #16]
  94:	add	sp, sp, #0x20
  98:	ret

000000000000009c <_ZL34initializeWriteBitcodePassPassOnceRN4llvm12PassRegistryE>:
  9c:	stp	x29, x30, [sp, #-32]!
  a0:	stp	x20, x19, [sp, #16]
  a4:	mov	x29, sp
  a8:	mov	x19, x0
  ac:	bl	0 <_ZN4llvm43initializeModuleSummaryIndexWrapperPassPassERNS_12PassRegistryE>
  b0:	mov	w0, #0x50                  	// #80
  b4:	bl	0 <_Znwm>
  b8:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  bc:	adrp	x10, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  c0:	add	x8, x8, #0x0
  c4:	mov	w9, #0xd                   	// #13
  c8:	add	x10, x10, #0x0
  cc:	adrp	x11, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  d0:	stp	x8, x9, [x0]
  d4:	stp	x10, x9, [x0, #16]
  d8:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  dc:	mov	x20, x0
  e0:	add	x11, x11, #0x0
  e4:	mov	w8, #0x100                 	// #256
  e8:	add	x9, x9, #0x0
  ec:	strb	wzr, [x0, #42]
  f0:	stp	xzr, xzr, [x0, #48]
  f4:	str	x11, [x0, #32]
  f8:	strh	w8, [x0, #40]
  fc:	stp	xzr, x9, [x0, #64]
 100:	mov	w2, #0x1                   	// #1
 104:	mov	x0, x19
 108:	mov	x1, x20
 10c:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
 110:	mov	x0, x20
 114:	ldp	x20, x19, [sp, #16]
 118:	ldp	x29, x30, [sp], #32
 11c:	ret

0000000000000120 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb>:
 120:	stp	x29, x30, [sp, #-64]!
 124:	str	x23, [sp, #16]
 128:	stp	x22, x21, [sp, #32]
 12c:	stp	x20, x19, [sp, #48]
 130:	mov	x29, sp
 134:	mov	x22, x0
 138:	mov	w0, #0x30                  	// #48
 13c:	mov	w19, w3
 140:	mov	w20, w2
 144:	mov	w21, w1
 148:	bl	0 <_Znwm>
 14c:	adrp	x11, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 150:	adrp	x13, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 154:	and	w8, w21, #0x1
 158:	and	w9, w20, #0x1
 15c:	and	w10, w19, #0x1
 160:	add	x11, x11, #0x0
 164:	mov	w12, #0x4                   	// #4
 168:	add	x13, x13, #0x0
 16c:	mov	x23, x0
 170:	str	x22, [x0, #32]
 174:	stp	xzr, x11, [x0, #8]
 178:	str	w12, [x0, #24]
 17c:	str	x13, [x0]
 180:	strb	w8, [x0, #40]
 184:	strb	w9, [x0, #41]
 188:	strb	w10, [x0, #42]
 18c:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 190:	str	x0, [x29, #24]
 194:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 198:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x2, x29, #0x18
 1a8:	bl	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1ac:	mov	x0, x23
 1b0:	ldp	x20, x19, [sp, #48]
 1b4:	ldp	x22, x21, [sp, #32]
 1b8:	ldr	x23, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #64
 1c0:	ret

00000000000001c4 <_ZN4llvm19isBitcodeWriterPassEPNS_4PassE>:
 1c4:	ldr	x8, [x0, #16]
 1c8:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1cc:	add	x9, x9, #0x0
 1d0:	cmp	x8, x9
 1d4:	cset	w0, eq  // eq = none
 1d8:	ret

00000000000001dc <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv>:
 1dc:	stp	x29, x30, [sp, #-32]!
 1e0:	str	x19, [sp, #16]
 1e4:	mov	x29, sp
 1e8:	mov	w0, #0x30                  	// #48
 1ec:	bl	0 <_Znwm>
 1f0:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1f4:	adrp	x10, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1f8:	add	x8, x8, #0x0
 1fc:	mov	w9, #0x4                   	// #4
 200:	add	x10, x10, #0x0
 204:	mov	x19, x0
 208:	stp	xzr, x8, [x0, #8]
 20c:	str	w9, [x0, #24]
 210:	str	x10, [x0]
 214:	bl	0 <_ZN4llvm4dbgsEv>
 218:	str	x0, [x19, #32]
 21c:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 220:	str	x0, [x29, #24]
 224:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 228:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 22c:	add	x0, x0, #0x0
 230:	add	x1, x1, #0x0
 234:	add	x2, x29, #0x18
 238:	bl	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 23c:	mov	x0, x19
 240:	ldr	x19, [sp, #16]
 244:	ldp	x29, x30, [sp], #32
 248:	ret

000000000000024c <_ZN12_GLOBAL__N_116WriteBitcodePassD0Ev>:
 24c:	stp	x29, x30, [sp, #-32]!
 250:	str	x19, [sp, #16]
 254:	mov	x29, sp
 258:	mov	x19, x0
 25c:	bl	0 <_ZN4llvm10ModulePassD2Ev>
 260:	mov	x0, x19
 264:	ldr	x19, [sp, #16]
 268:	ldp	x29, x30, [sp], #32
 26c:	b	0 <_ZdlPv>

0000000000000270 <_ZNK12_GLOBAL__N_116WriteBitcodePass11getPassNameEv>:
 270:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 274:	add	x0, x0, #0x0
 278:	mov	w1, #0xe                   	// #14
 27c:	ret

0000000000000280 <_ZNK12_GLOBAL__N_116WriteBitcodePass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 280:	mov	w8, #0x1                   	// #1
 284:	strb	w8, [x1, #160]
 288:	ldrb	w8, [x0, #41]
 28c:	cbz	w8, 2a4 <_ZNK12_GLOBAL__N_116WriteBitcodePass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x24>
 290:	adrp	x8, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 294:	ldr	x8, [x8]
 298:	mov	x0, x1
 29c:	mov	x1, x8
 2a0:	b	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
 2a4:	ret

00000000000002a8 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE>:
 2a8:	stp	x29, x30, [sp, #-32]!
 2ac:	stp	x20, x19, [sp, #16]
 2b0:	mov	x29, sp
 2b4:	ldrb	w8, [x0, #41]
 2b8:	mov	x20, x0
 2bc:	mov	x19, x1
 2c0:	cbz	w8, 2dc <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x34>
 2c4:	mov	x0, x20
 2c8:	bl	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 2cc:	ldrb	w8, [x0, #472]
 2d0:	cbz	w8, 308 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x60>
 2d4:	add	x3, x0, #0x20
 2d8:	b	2e0 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x38>
 2dc:	mov	x3, xzr
 2e0:	ldr	x1, [x20, #32]
 2e4:	ldrb	w2, [x20, #40]
 2e8:	ldrb	w4, [x20, #42]
 2ec:	mov	x0, x19
 2f0:	mov	x5, xzr
 2f4:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 2f8:	ldp	x20, x19, [sp, #16]
 2fc:	mov	w0, wzr
 300:	ldp	x29, x30, [sp], #32
 304:	ret
 308:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 30c:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 310:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 314:	add	x0, x0, #0x0
 318:	add	x1, x1, #0x0
 31c:	add	x3, x3, #0x0
 320:	mov	w2, #0x49                  	// #73
 324:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_:

0000000000000000 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	adrp	x8, 0 <_ZN4llvm26ModuleSummaryIndexAnalysis3KeyE>
  14:	ldr	x8, [x8]
  18:	mov	x19, x1
  1c:	add	x1, sp, #0x8
  20:	mov	x2, sp
  24:	mov	x20, x0
  28:	str	x8, [sp, #8]
  2c:	bl	0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  30:	tbz	w0, #0, 5c <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0x5c>
  34:	adrp	x1, 0 <_ZN4llvm26ModuleSummaryIndexAnalysis3KeyE>
  38:	ldr	x1, [x1]
  3c:	mov	x0, x20
  40:	mov	x2, x19
  44:	bl	0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	add	x0, x0, #0x8
  54:	add	sp, sp, #0x30
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  60:	adrp	x1, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  64:	adrp	x3, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x30b                 	// #779
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17PreservedAnalyses3allEv:

0000000000000000 <_ZN4llvm17PreservedAnalyses3allEv>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	adrp	x9, 0 <_ZN4llvm17PreservedAnalyses3allEv>
  10:	ldr	d0, [x9]
  14:	mov	x0, x8
  18:	add	x8, x8, #0x28
  1c:	add	x10, x0, #0x60
  20:	str	wzr, [x0, #32]
  24:	stp	xzr, x8, [x0]
  28:	str	x8, [x0, #16]
  2c:	stp	xzr, x10, [x0, #56]
  30:	str	x10, [x0, #72]
  34:	str	d0, [x0, #24]
  38:	str	d0, [x0, #80]
  3c:	str	wzr, [x0, #88]
  40:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
  44:	ldr	x1, [x1]
  48:	add	x8, sp, #0x8
  4c:	bl	0 <_ZN4llvm17PreservedAnalyses3allEv>
  50:	ldp	x29, x30, [sp, #48]
  54:	add	sp, sp, #0x40
  58:	ret

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPvE6insertES1_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZN4llvm19SmallPtrSetImplBase10insert_impEPKv:

0000000000000000 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x12, x9, [x0, #8]
   c:	mov	x8, x0
  10:	cmp	x9, x12
  14:	b.eq	34 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x34>  // b.none
  18:	mov	x0, x8
  1c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  20:	and	x11, x1, #0xffffffffffffff00
  24:	and	x8, x1, #0xff
  28:	orr	x1, x11, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldr	w10, [x8, #28]
  38:	cbz	w10, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  3c:	mov	x0, xzr
  40:	add	x13, x9, #0x8
  44:	lsl	x11, x10, #3
  48:	mov	x14, x13
  4c:	ldur	x13, [x13, #-8]
  50:	cmp	x13, x1
  54:	b.eq	cc <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xcc>  // b.none
  58:	cmn	x13, #0x2
  5c:	csel	x0, x12, x0, eq  // eq = none
  60:	subs	x11, x11, #0x8
  64:	add	x13, x14, #0x8
  68:	mov	x12, x14
  6c:	b.ne	48 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x48>  // b.any
  70:	cbz	x0, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  74:	str	x1, [x0]
  78:	ldr	w9, [x8, #32]
  7c:	ldr	x10, [x8]
  80:	mov	x11, xzr
  84:	sub	w9, w9, #0x1
  88:	add	x10, x10, #0x1
  8c:	str	w9, [x8, #32]
  90:	str	x10, [x8]
  94:	b	c4 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xc4>
  98:	ldr	w11, [x8, #24]
  9c:	cmp	w10, w11
  a0:	b.cs	18 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x18>  // b.hs, b.nlast
  a4:	add	w12, w10, #0x1
  a8:	str	w12, [x8, #28]
  ac:	str	x1, [x9, x10, lsl #3]
  b0:	ldp	x9, x12, [x8]
  b4:	mov	x11, xzr
  b8:	add	x9, x9, #0x1
  bc:	add	x0, x12, x10, lsl #3
  c0:	str	x9, [x8]
  c4:	mov	w8, #0x1                   	// #1
  c8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>
  cc:	mov	x8, xzr
  d0:	mov	x11, xzr
  d4:	mov	x0, x12
  d8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x8
  28:	cmp	x9, x8
  2c:	str	x8, [x0]
  30:	b.ne	18 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  40:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  44:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xf8                  	// #248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v:

0000000000000000 <_ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 20 <_ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v+0x20>
  10:	adrp	x1, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
  14:	ldr	x1, [x1]
  18:	ldp	x29, x30, [sp], #16
  1c:	b	0 <_ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v>
  20:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v>
  24:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v>
  28:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_29ModuleSummaryIndexWrapperPassEEERT_v>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0xdd                  	// #221
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv:

0000000000000000 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, 78 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv+0x78>
   c:	ldr	x9, [x0, #8]
  10:	cbz	x9, 98 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv+0x98>
  14:	ldr	x8, [x9]
  18:	ldr	x9, [x9, #8]
  1c:	cmp	x8, x9
  20:	b.eq	58 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv+0x58>  // b.none
  24:	mov	x0, xzr
  28:	ldp	x10, x11, [x8]
  2c:	cmp	x10, x1
  30:	csel	x0, x11, x0, eq  // eq = none
  34:	b.eq	44 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv+0x44>  // b.none
  38:	add	x8, x8, #0x10
  3c:	cmp	x8, x9
  40:	b.ne	28 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv+0x28>  // b.any
  44:	cbz	x0, 58 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv+0x58>
  48:	ldr	x8, [x0]
  4c:	ldr	x2, [x8, #96]
  50:	ldp	x29, x30, [sp], #16
  54:	br	x2
  58:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  5c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  60:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0xeb                  	// #235
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  7c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  80:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0xe3                  	// #227
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  9c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  a0:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_29ModuleSummaryIndexWrapperPassEEERT_PKv>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0xe4                  	// #228
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_6ModuleENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E15LookupBucketForIPKS2_EEbRKT_RPKSJ_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_:

0000000000000000 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	mov	x8, x0
  10:	stp	x1, x2, [sp]
  14:	adrp	x0, 0 <_ZSt15__once_callable>
  18:	ldr	x1, [x0]
  1c:	add	x0, x0, #0x0
  20:	blr	x1
  24:	mrs	x9, tpidr_el0
  28:	mov	x10, sp
  2c:	str	x10, [x9, x0]
  30:	adrp	x0, 0 <_ZSt11__once_call>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	adrp	x11, 0 <__pthread_key_create>
  44:	ldr	x11, [x11]
  48:	adrp	x10, 0 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>
  4c:	add	x10, x10, #0x0
  50:	str	x10, [x9, x0]
  54:	cbz	x11, 78 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x78>
  58:	adrp	x1, 0 <__once_proxy>
  5c:	ldr	x1, [x1]
  60:	mov	x0, x8
  64:	bl	0 <pthread_once>
  68:	cbnz	w0, 7c <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x7c>
  6c:	ldp	x29, x30, [sp, #16]
  70:	add	sp, sp, #0x20
  74:	ret
  78:	mov	w0, #0xffffffff            	// #-1
  7c:	bl	0 <_ZSt20__throw_system_errori>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

ValueEnumerator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>:
       0:	sub	sp, sp, #0x140
       4:	stp	x29, x30, [sp, #224]
       8:	stp	x28, x27, [sp, #240]
       c:	stp	x26, x25, [sp, #256]
      10:	stp	x24, x23, [sp, #272]
      14:	stp	x22, x21, [sp, #288]
      18:	stp	x20, x19, [sp, #304]
      1c:	add	x29, sp, #0xe0
      20:	mov	x25, x1
      24:	mov	x19, x0
      28:	add	x0, x0, #0x18
      2c:	movi	v0.2d, #0x0
      30:	mov	w1, wzr
      34:	mov	w21, w2
      38:	and	w20, w2, #0x1
      3c:	stp	q0, q0, [x19]
      40:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      44:	add	x0, x19, #0x50
      48:	movi	v0.2d, #0x0
      4c:	mov	w1, wzr
      50:	stur	q0, [x19, #72]
      54:	stur	q0, [x19, #56]
      58:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      5c:	mov	x22, x19
      60:	str	wzr, [x22, #144]!
      64:	movi	v0.2d, #0x0
      68:	add	x0, x22, #0x70
      6c:	mov	w1, wzr
      70:	stur	xzr, [x22, #-16]
      74:	stur	q0, [x22, #-32]
      78:	stp	xzr, x22, [x22, #8]
      7c:	stp	x22, xzr, [x22, #24]
      80:	stur	q0, [x22, #40]
      84:	stur	q0, [x22, #56]
      88:	stur	q0, [x22, #72]
      8c:	stur	q0, [x22, #88]
      90:	stur	q0, [x22, #104]
      94:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      98:	ldr	w8, [x22, #152]
      9c:	add	x0, x22, #0x90
      a0:	str	xzr, [x22, #144]
      a4:	orr	w8, w8, #0x1
      a8:	str	w8, [x22, #152]
      ac:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      b0:	add	x0, x22, #0xb8
      b4:	mov	w1, wzr
      b8:	strb	w20, [x22, #176]
      bc:	str	xzr, [x22, #184]
      c0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      c4:	add	x0, x22, #0xf0
      c8:	movi	v0.2d, #0x0
      cc:	mov	w1, wzr
      d0:	stur	q0, [x22, #232]
      d4:	stur	q0, [x22, #216]
      d8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      dc:	add	x0, x22, #0x128
      e0:	movi	v0.2d, #0x0
      e4:	mov	w1, wzr
      e8:	stp	q0, q0, [x22, #272]
      ec:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      f0:	add	x0, x22, #0x148
      f4:	mov	w1, wzr
      f8:	str	xzr, [x22, #328]
      fc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     100:	movi	v0.2d, #0x0
     104:	str	q0, [x22, #368]
     108:	add	x8, x22, #0x18c
     10c:	movi	v0.2d, #0x0
     110:	str	xzr, [x22, #384]
     114:	str	d0, [x8]
     118:	tbz	w21, #0, a0c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa0c>
     11c:	add	x0, sp, #0x30
     120:	mov	w1, wzr
     124:	str	xzr, [sp, #48]
     128:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     12c:	str	xzr, [sp, #80]
     130:	ldr	x20, [x25, #16]
     134:	add	x24, x25, #0x8
     138:	cmp	x24, x20
     13c:	b.eq	1a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1a0>  // b.none
     140:	ldrb	w8, [x20]
     144:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     148:	sub	x8, x20, #0x38
     14c:	cmp	x20, #0x0
     150:	csel	x21, xzr, x8, eq  // eq = none
     154:	mov	x0, x21
     158:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     15c:	tbnz	w0, #0, 198 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x198>
     160:	mov	x0, x21
     164:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     168:	tbnz	w0, #0, 1164 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1164>
     16c:	ldur	x8, [x21, #-24]
     170:	cbz	x8, 1148 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1148>
     174:	ldrb	w8, [x8, #16]
     178:	cmp	w8, #0x4
     17c:	b.cc	198 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x198>  // b.lo, b.ul, b.last
     180:	mov	x0, x21
     184:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     188:	tbnz	w0, #0, 1164 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1164>
     18c:	ldur	x0, [x21, #-24]
     190:	add	x1, sp, #0x30
     194:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     198:	ldr	x20, [x20, #8]
     19c:	b	138 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x138>
     1a0:	ldr	x20, [x25, #48]
     1a4:	add	x28, x25, #0x28
     1a8:	cmp	x28, x20
     1ac:	b.eq	1f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1f0>  // b.none
     1b0:	ldrb	w8, [x20]
     1b4:	tbnz	w8, #2, 10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>
     1b8:	sub	x8, x20, #0x30
     1bc:	cmp	x20, #0x0
     1c0:	csel	x8, xzr, x8, eq  // eq = none
     1c4:	ldur	x0, [x8, #-24]
     1c8:	cbz	x0, 1148 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1148>
     1cc:	ldrb	w8, [x0, #16]
     1d0:	cmp	w8, #0x11
     1d4:	b.cs	1128 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1128>  // b.hs, b.nlast
     1d8:	cmp	w8, #0x4
     1dc:	b.cc	1e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1e8>  // b.lo, b.ul, b.last
     1e0:	add	x1, sp, #0x30
     1e4:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     1e8:	ldr	x20, [x20, #8]
     1ec:	b	1a8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1a8>
     1f0:	ldr	x20, [x25, #64]
     1f4:	add	x27, x25, #0x38
     1f8:	cmp	x27, x20
     1fc:	b.eq	240 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x240>  // b.none
     200:	ldrb	w8, [x20]
     204:	tbnz	w8, #2, 110c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x110c>
     208:	sub	x8, x20, #0x30
     20c:	cmp	x20, #0x0
     210:	csel	x8, xzr, x8, eq  // eq = none
     214:	ldur	x0, [x8, #-24]
     218:	cbz	x0, 1148 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1148>
     21c:	ldrb	w8, [x0, #16]
     220:	cmp	w8, #0x11
     224:	b.cs	1128 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1128>  // b.hs, b.nlast
     228:	cmp	w8, #0x4
     22c:	b.cc	238 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x238>  // b.lo, b.ul, b.last
     230:	add	x1, sp, #0x30
     234:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     238:	ldr	x20, [x20, #8]
     23c:	b	1f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1f8>
     240:	ldr	x20, [x25, #32]
     244:	add	x26, x25, #0x18
     248:	cmp	x26, x20
     24c:	b.eq	310 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x310>  // b.none
     250:	mov	w21, #0x18                  	// #24
     254:	ldrb	w8, [x20]
     258:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     25c:	sub	x8, x20, #0x38
     260:	cmp	x20, #0x0
     264:	csel	x9, xzr, x8, eq  // eq = none
     268:	ldr	w8, [x9, #20]
     26c:	tbnz	w8, #30, 284 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x284>
     270:	and	w8, w8, #0xfffffff
     274:	mneg	x10, x8, x21
     278:	add	x22, x9, x10
     27c:	cbnz	x8, 290 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x290>
     280:	b	2c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2c4>
     284:	ldur	x22, [x9, #-8]
     288:	and	x8, x8, #0xfffffff
     28c:	cbz	x8, 2c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2c4>
     290:	add	x8, x8, x8, lsl #1
     294:	lsl	x23, x8, #3
     298:	ldr	x8, [x22]
     29c:	sub	x0, x29, #0x20
     2a0:	stur	x8, [x29, #-32]
     2a4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     2a8:	tbnz	w0, #0, 2b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2b8>
     2ac:	ldr	x0, [x22]
     2b0:	add	x1, sp, #0x30
     2b4:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     2b8:	subs	x23, x23, #0x18
     2bc:	add	x22, x22, #0x18
     2c0:	b.ne	298 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x298>  // b.any
     2c4:	ldr	x20, [x20, #8]
     2c8:	cmp	x26, x20
     2cc:	b.ne	254 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x254>  // b.any
     2d0:	ldr	x20, [x25, #32]
     2d4:	ldr	w8, [sp, #64]
     2d8:	cmp	x26, x20
     2dc:	str	w8, [sp, #80]
     2e0:	b.eq	318 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x318>  // b.none
     2e4:	ldrb	w8, [x20]
     2e8:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     2ec:	sub	x8, x20, #0x38
     2f0:	cmp	x20, #0x0
     2f4:	csel	x0, xzr, x8, eq  // eq = none
     2f8:	add	x1, sp, #0x30
     2fc:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     300:	ldr	x20, [x20, #8]
     304:	cmp	x26, x20
     308:	b.ne	2e4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2e4>  // b.any
     30c:	b	318 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x318>
     310:	ldr	w8, [sp, #64]
     314:	str	w8, [sp, #80]
     318:	ldr	x20, [x25, #48]
     31c:	cmp	x28, x20
     320:	b.eq	348 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x348>  // b.none
     324:	ldrb	w8, [x20]
     328:	tbnz	w8, #2, 10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>
     32c:	sub	x8, x20, #0x30
     330:	cmp	x20, #0x0
     334:	csel	x0, xzr, x8, eq  // eq = none
     338:	add	x1, sp, #0x30
     33c:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     340:	ldr	x20, [x20, #8]
     344:	b	31c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x31c>
     348:	ldr	x20, [x25, #64]
     34c:	cmp	x27, x20
     350:	b.eq	378 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x378>  // b.none
     354:	ldrb	w8, [x20]
     358:	tbnz	w8, #2, 110c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x110c>
     35c:	sub	x8, x20, #0x30
     360:	cmp	x20, #0x0
     364:	csel	x0, xzr, x8, eq  // eq = none
     368:	add	x1, sp, #0x30
     36c:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     370:	ldr	x20, [x20, #8]
     374:	b	34c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x34c>
     378:	ldr	x20, [x25, #16]
     37c:	cmp	x24, x20
     380:	b.eq	3a8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3a8>  // b.none
     384:	ldrb	w8, [x20]
     388:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     38c:	sub	x8, x20, #0x38
     390:	cmp	x20, #0x0
     394:	csel	x0, xzr, x8, eq  // eq = none
     398:	add	x1, sp, #0x30
     39c:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     3a0:	ldr	x20, [x20, #8]
     3a4:	b	37c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x37c>
     3a8:	ldr	w8, [sp, #64]
     3ac:	stp	x28, x27, [sp, #8]
     3b0:	stp	x24, x25, [sp, #24]
     3b4:	str	x26, [sp, #40]
     3b8:	str	w8, [sp, #84]
     3bc:	ldr	x28, [x25, #32]
     3c0:	cmp	x26, x28
     3c4:	b.eq	590 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x590>  // b.none
     3c8:	mov	w20, #0x18                  	// #24
     3cc:	ldrb	w8, [x28]
     3d0:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     3d4:	sub	x8, x28, #0x38
     3d8:	cmp	x28, #0x0
     3dc:	csel	x21, xzr, x8, eq  // eq = none
     3e0:	mov	x0, x21
     3e4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     3e8:	tbnz	w0, #0, 584 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x584>
     3ec:	ldr	x22, [x21, #80]
     3f0:	add	x25, x21, #0x48
     3f4:	cmp	x25, x22
     3f8:	b.eq	420 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x420>  // b.none
     3fc:	ldrb	w8, [x22]
     400:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     404:	sub	x8, x22, #0x18
     408:	cmp	x22, #0x0
     40c:	csel	x0, xzr, x8, eq  // eq = none
     410:	add	x1, sp, #0x30
     414:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     418:	ldr	x22, [x22, #8]
     41c:	b	3f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3f4>
     420:	mov	x0, x21
     424:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     428:	cmp	x0, x1
     42c:	b.eq	450 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x450>  // b.none
     430:	mov	x22, x0
     434:	mov	x23, x1
     438:	add	x1, sp, #0x30
     43c:	mov	x0, x22
     440:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     444:	add	x22, x22, #0x28
     448:	cmp	x23, x22
     44c:	b.ne	438 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x438>  // b.any
     450:	ldr	x22, [x21, #80]
     454:	cmp	x25, x22
     458:	b.eq	584 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x584>  // b.none
     45c:	ldrb	w8, [x22]
     460:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     464:	sub	x8, x22, #0x18
     468:	cmp	x22, #0x0
     46c:	csel	x8, xzr, x8, eq  // eq = none
     470:	ldr	x23, [x8, #48]
     474:	add	x26, x8, #0x28
     478:	cmp	x26, x23
     47c:	b.eq	514 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x514>  // b.none
     480:	ldrb	w8, [x23]
     484:	tbnz	w8, #2, 1060 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1060>
     488:	sub	x8, x23, #0x18
     48c:	cmp	x23, #0x0
     490:	csel	x9, xzr, x8, eq  // eq = none
     494:	ldr	w8, [x9, #20]
     498:	tbnz	w8, #30, 4b0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4b0>
     49c:	and	w8, w8, #0xfffffff
     4a0:	mneg	x10, x8, x20
     4a4:	add	x27, x9, x10
     4a8:	cbnz	x8, 4bc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4bc>
     4ac:	b	50c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x50c>
     4b0:	ldur	x27, [x9, #-8]
     4b4:	and	x8, x8, #0xfffffff
     4b8:	cbz	x8, 50c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x50c>
     4bc:	add	x8, x8, x8, lsl #1
     4c0:	lsl	x24, x8, #3
     4c4:	ldr	x0, [x27]
     4c8:	ldrb	w8, [x0, #16]
     4cc:	cmp	w8, #0x10
     4d0:	b.hi	4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>  // b.pmore
     4d4:	cbz	w8, 500 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x500>
     4d8:	cmp	w8, #0x3
     4dc:	b.eq	500 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x500>  // b.none
     4e0:	sub	w8, w8, #0x1
     4e4:	cmp	w8, #0x2
     4e8:	b.cs	4f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f8>  // b.hs, b.nlast
     4ec:	b	500 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x500>
     4f0:	cmp	w8, #0x14
     4f4:	b.ne	500 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x500>  // b.any
     4f8:	add	x1, sp, #0x30
     4fc:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     500:	subs	x24, x24, #0x18
     504:	add	x27, x27, #0x18
     508:	b.ne	4c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4c4>  // b.any
     50c:	ldr	x23, [x23, #8]
     510:	b	478 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x478>
     514:	ldr	x22, [x22, #8]
     518:	cmp	x25, x22
     51c:	b.ne	45c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x45c>  // b.any
     520:	ldr	x21, [x21, #80]
     524:	ldr	x26, [sp, #40]
     528:	cmp	x25, x21
     52c:	b.eq	584 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x584>  // b.none
     530:	ldrb	w8, [x21]
     534:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     538:	sub	x8, x21, #0x18
     53c:	cmp	x21, #0x0
     540:	csel	x8, xzr, x8, eq  // eq = none
     544:	ldr	x22, [x8, #48]
     548:	add	x23, x8, #0x28
     54c:	cmp	x23, x22
     550:	b.eq	578 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x578>  // b.none
     554:	ldrb	w8, [x22]
     558:	tbnz	w8, #2, 1060 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1060>
     55c:	sub	x8, x22, #0x18
     560:	cmp	x22, #0x0
     564:	csel	x0, xzr, x8, eq  // eq = none
     568:	add	x1, sp, #0x30
     56c:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     570:	ldr	x22, [x22, #8]
     574:	b	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     578:	ldr	x21, [x21, #8]
     57c:	cmp	x25, x21
     580:	b.ne	530 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x530>  // b.any
     584:	ldr	x28, [x28, #8]
     588:	cmp	x26, x28
     58c:	b.ne	3cc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3cc>  // b.any
     590:	ldr	x8, [sp, #32]
     594:	stp	xzr, xzr, [x29, #-32]
     598:	stur	xzr, [x29, #-16]
     59c:	ldr	x8, [x8, #24]
     5a0:	and	x28, x8, #0xfffffffffffffff8
     5a4:	cmp	x26, x28
     5a8:	b.eq	778 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x778>  // b.none
     5ac:	mov	w20, #0x18                  	// #24
     5b0:	ldrb	w8, [x28]
     5b4:	tbnz	w8, #2, 1184 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1184>
     5b8:	sub	x8, x28, #0x38
     5bc:	cmp	x28, #0x0
     5c0:	csel	x21, xzr, x8, eq  // eq = none
     5c4:	mov	x0, x21
     5c8:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     5cc:	tbnz	w0, #0, 768 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x768>
     5d0:	ldr	x22, [x21, #80]
     5d4:	add	x25, x21, #0x48
     5d8:	cmp	x25, x22
     5dc:	b.eq	60c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x60c>  // b.none
     5e0:	ldrb	w8, [x22]
     5e4:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     5e8:	sub	x8, x22, #0x18
     5ec:	cmp	x22, #0x0
     5f0:	csel	x0, xzr, x8, eq  // eq = none
     5f4:	add	x2, sp, #0x30
     5f8:	sub	x3, x29, #0x20
     5fc:	mov	x1, x21
     600:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     604:	ldr	x22, [x22, #8]
     608:	b	5d8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5d8>
     60c:	mov	x0, x21
     610:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     614:	cmp	x0, x1
     618:	b.eq	644 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x644>  // b.none
     61c:	mov	x22, x0
     620:	mov	x23, x1
     624:	add	x2, sp, #0x30
     628:	sub	x3, x29, #0x20
     62c:	mov	x0, x22
     630:	mov	x1, x21
     634:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     638:	add	x22, x22, #0x28
     63c:	cmp	x23, x22
     640:	b.ne	624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>  // b.any
     644:	ldr	x22, [x21, #80]
     648:	cmp	x25, x22
     64c:	b.eq	768 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x768>  // b.none
     650:	ldrb	w8, [x22]
     654:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     658:	sub	x8, x22, #0x18
     65c:	cmp	x22, #0x0
     660:	csel	x8, xzr, x8, eq  // eq = none
     664:	ldr	x23, [x8, #48]
     668:	add	x26, x8, #0x28
     66c:	cmp	x26, x23
     670:	b.eq	6f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6f0>  // b.none
     674:	ldrb	w8, [x23]
     678:	tbnz	w8, #2, 1060 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1060>
     67c:	sub	x8, x23, #0x18
     680:	cmp	x23, #0x0
     684:	csel	x9, xzr, x8, eq  // eq = none
     688:	ldr	w8, [x9, #20]
     68c:	tbnz	w8, #30, 6a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6a4>
     690:	and	w8, w8, #0xfffffff
     694:	mneg	x10, x8, x20
     698:	add	x27, x9, x10
     69c:	cbnz	x8, 6b0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6b0>
     6a0:	b	6e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6e8>
     6a4:	ldur	x27, [x9, #-8]
     6a8:	and	x8, x8, #0xfffffff
     6ac:	cbz	x8, 6e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6e8>
     6b0:	add	x8, x8, x8, lsl #1
     6b4:	lsl	x24, x8, #3
     6b8:	ldr	x0, [x27]
     6bc:	ldrb	w8, [x0, #16]
     6c0:	cmp	w8, #0x11
     6c4:	ccmp	w8, #0x14, #0x4, cs  // cs = hs, nlast
     6c8:	b.ne	6dc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6dc>  // b.any
     6cc:	add	x2, sp, #0x30
     6d0:	sub	x3, x29, #0x20
     6d4:	mov	x1, x21
     6d8:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     6dc:	subs	x24, x24, #0x18
     6e0:	add	x27, x27, #0x18
     6e4:	b.ne	6b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6b8>  // b.any
     6e8:	ldr	x23, [x23, #8]
     6ec:	b	66c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x66c>
     6f0:	ldr	x22, [x22, #8]
     6f4:	cmp	x25, x22
     6f8:	b.ne	650 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x650>  // b.any
     6fc:	ldr	x22, [x21, #80]
     700:	ldr	x26, [sp, #40]
     704:	cmp	x25, x22
     708:	b.eq	768 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x768>  // b.none
     70c:	ldrb	w8, [x22]
     710:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     714:	sub	x8, x22, #0x18
     718:	cmp	x22, #0x0
     71c:	csel	x8, xzr, x8, eq  // eq = none
     720:	ldr	x23, [x8, #48]
     724:	add	x24, x8, #0x28
     728:	cmp	x24, x23
     72c:	b.eq	75c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x75c>  // b.none
     730:	ldrb	w8, [x23]
     734:	tbnz	w8, #2, 1060 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1060>
     738:	sub	x8, x23, #0x18
     73c:	cmp	x23, #0x0
     740:	csel	x0, xzr, x8, eq  // eq = none
     744:	add	x2, sp, #0x30
     748:	sub	x3, x29, #0x20
     74c:	mov	x1, x21
     750:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     754:	ldr	x23, [x23, #8]
     758:	b	728 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x728>
     75c:	ldr	x22, [x22, #8]
     760:	cmp	x25, x22
     764:	b.ne	70c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x70c>  // b.any
     768:	ldr	x8, [x28]
     76c:	and	x28, x8, #0xfffffffffffffff8
     770:	cmp	x26, x28
     774:	b.ne	5b0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5b0>  // b.any
     778:	ldp	x22, x25, [sp, #24]
     77c:	ldp	x24, x23, [sp, #8]
     780:	ldr	x20, [x25, #16]
     784:	cmp	x22, x20
     788:	b.eq	7bc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7bc>  // b.none
     78c:	ldrb	w8, [x20]
     790:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     794:	sub	x8, x20, #0x38
     798:	cmp	x20, #0x0
     79c:	csel	x0, xzr, x8, eq  // eq = none
     7a0:	add	x2, sp, #0x30
     7a4:	sub	x3, x29, #0x20
     7a8:	mov	x1, xzr
     7ac:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     7b0:	ldr	x20, [x20, #8]
     7b4:	cmp	x22, x20
     7b8:	b.ne	78c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x78c>  // b.any
     7bc:	ldr	x20, [x25, #32]
     7c0:	cmp	x26, x20
     7c4:	b.eq	7f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7f4>  // b.none
     7c8:	ldrb	w8, [x20]
     7cc:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     7d0:	sub	x8, x20, #0x38
     7d4:	cmp	x20, #0x0
     7d8:	csel	x0, xzr, x8, eq  // eq = none
     7dc:	add	x2, sp, #0x30
     7e0:	sub	x3, x29, #0x20
     7e4:	mov	x1, xzr
     7e8:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     7ec:	ldr	x20, [x20, #8]
     7f0:	b	7c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7c0>
     7f4:	ldr	x20, [x25, #48]
     7f8:	cmp	x24, x20
     7fc:	b.eq	82c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x82c>  // b.none
     800:	ldrb	w8, [x20]
     804:	tbnz	w8, #2, 10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>
     808:	sub	x8, x20, #0x30
     80c:	cmp	x20, #0x0
     810:	csel	x0, xzr, x8, eq  // eq = none
     814:	add	x2, sp, #0x30
     818:	sub	x3, x29, #0x20
     81c:	mov	x1, xzr
     820:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     824:	ldr	x20, [x20, #8]
     828:	b	7f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7f8>
     82c:	ldr	x20, [x25, #64]
     830:	cmp	x23, x20
     834:	b.eq	864 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x864>  // b.none
     838:	ldrb	w8, [x20]
     83c:	tbnz	w8, #2, 110c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x110c>
     840:	sub	x8, x20, #0x30
     844:	cmp	x20, #0x0
     848:	csel	x0, xzr, x8, eq  // eq = none
     84c:	add	x2, sp, #0x30
     850:	sub	x3, x29, #0x20
     854:	mov	x1, xzr
     858:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     85c:	ldr	x20, [x20, #8]
     860:	b	830 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x830>
     864:	ldr	x20, [x25, #16]
     868:	cmp	x22, x20
     86c:	b.eq	8b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8b8>  // b.none
     870:	ldrb	w8, [x20]
     874:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     878:	sub	x8, x20, #0x38
     87c:	cmp	x20, #0x0
     880:	csel	x21, xzr, x8, eq  // eq = none
     884:	mov	x0, x21
     888:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     88c:	tbnz	w0, #0, 8b0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8b0>
     890:	mov	x0, x21
     894:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     898:	tbnz	w0, #0, 1164 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1164>
     89c:	ldur	x0, [x21, #-24]
     8a0:	add	x2, sp, #0x30
     8a4:	sub	x3, x29, #0x20
     8a8:	mov	x1, xzr
     8ac:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     8b0:	ldr	x20, [x20, #8]
     8b4:	b	868 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x868>
     8b8:	ldr	x20, [x25, #48]
     8bc:	cmp	x24, x20
     8c0:	b.eq	904 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x904>  // b.none
     8c4:	ldrb	w8, [x20]
     8c8:	tbnz	w8, #2, 10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>
     8cc:	sub	x8, x20, #0x30
     8d0:	cmp	x20, #0x0
     8d4:	csel	x8, xzr, x8, eq  // eq = none
     8d8:	ldur	x0, [x8, #-24]
     8dc:	cbz	x0, 8ec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8ec>
     8e0:	ldrb	w8, [x0, #16]
     8e4:	cmp	w8, #0x11
     8e8:	b.cs	1128 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1128>  // b.hs, b.nlast
     8ec:	add	x2, sp, #0x30
     8f0:	sub	x3, x29, #0x20
     8f4:	mov	x1, xzr
     8f8:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     8fc:	ldr	x20, [x20, #8]
     900:	b	8bc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8bc>
     904:	ldr	x20, [x25, #64]
     908:	cmp	x23, x20
     90c:	b.eq	950 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x950>  // b.none
     910:	ldrb	w8, [x20]
     914:	tbnz	w8, #2, 110c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x110c>
     918:	sub	x8, x20, #0x30
     91c:	cmp	x20, #0x0
     920:	csel	x8, xzr, x8, eq  // eq = none
     924:	ldur	x0, [x8, #-24]
     928:	cbz	x0, 938 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x938>
     92c:	ldrb	w8, [x0, #16]
     930:	cmp	w8, #0x11
     934:	b.cs	1128 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1128>  // b.hs, b.nlast
     938:	add	x2, sp, #0x30
     93c:	sub	x3, x29, #0x20
     940:	mov	x1, xzr
     944:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     948:	ldr	x20, [x20, #8]
     94c:	b	908 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x908>
     950:	ldr	x20, [x25, #32]
     954:	cmp	x26, x20
     958:	b.eq	9cc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9cc>  // b.none
     95c:	mov	w21, #0x18                  	// #24
     960:	ldrb	w8, [x20]
     964:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     968:	sub	x8, x20, #0x38
     96c:	cmp	x20, #0x0
     970:	csel	x9, xzr, x8, eq  // eq = none
     974:	ldr	w8, [x9, #20]
     978:	tbnz	w8, #30, 990 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x990>
     97c:	and	w8, w8, #0xfffffff
     980:	mneg	x10, x8, x21
     984:	add	x22, x9, x10
     988:	cbnz	x8, 99c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x99c>
     98c:	b	9c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9c0>
     990:	ldur	x22, [x9, #-8]
     994:	and	x8, x8, #0xfffffff
     998:	cbz	x8, 9c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9c0>
     99c:	add	x8, x8, x8, lsl #1
     9a0:	lsl	x23, x8, #3
     9a4:	ldr	x0, [x22], #24
     9a8:	add	x2, sp, #0x30
     9ac:	sub	x3, x29, #0x20
     9b0:	mov	x1, xzr
     9b4:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     9b8:	subs	x23, x23, #0x18
     9bc:	b.ne	9a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9a4>  // b.any
     9c0:	ldr	x20, [x20, #8]
     9c4:	cmp	x26, x20
     9c8:	b.ne	960 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x960>  // b.any
     9cc:	ldr	x0, [sp, #56]
     9d0:	bl	0 <_ZdlPv>
     9d4:	ldur	q0, [x29, #-32]
     9d8:	ldr	q1, [x19]
     9dc:	ldr	x9, [x19, #16]
     9e0:	add	x0, sp, #0x30
     9e4:	str	q0, [x19]
     9e8:	ldur	x8, [x29, #-16]
     9ec:	str	x8, [x19, #16]
     9f0:	str	q1, [sp, #48]
     9f4:	str	x9, [sp, #64]
     9f8:	stp	xzr, xzr, [x29, #-24]
     9fc:	stur	xzr, [x29, #-32]
     a00:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     a04:	sub	x0, x29, #0x20
     a08:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     a0c:	ldr	x20, [x25, #16]
     a10:	add	x22, x25, #0x8
     a14:	cmp	x22, x20
     a18:	b.eq	a40 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa40>  // b.none
     a1c:	ldrb	w8, [x20]
     a20:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     a24:	sub	x8, x20, #0x38
     a28:	cmp	x20, #0x0
     a2c:	csel	x1, xzr, x8, eq  // eq = none
     a30:	mov	x0, x19
     a34:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     a38:	ldr	x20, [x20, #8]
     a3c:	b	a14 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa14>
     a40:	ldr	x20, [x25, #32]
     a44:	add	x26, x25, #0x18
     a48:	cmp	x26, x20
     a4c:	b.eq	a84 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa84>  // b.none
     a50:	ldrb	w8, [x20]
     a54:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     a58:	sub	x8, x20, #0x38
     a5c:	cmp	x20, #0x0
     a60:	csel	x21, xzr, x8, eq  // eq = none
     a64:	mov	x0, x19
     a68:	mov	x1, x21
     a6c:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     a70:	ldr	x1, [x21, #112]
     a74:	mov	x0, x19
     a78:	bl	141c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     a7c:	ldr	x20, [x20, #8]
     a80:	b	a48 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa48>
     a84:	ldr	x20, [x25, #48]
     a88:	add	x23, x25, #0x28
     a8c:	cmp	x23, x20
     a90:	b.eq	ab8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xab8>  // b.none
     a94:	ldrb	w8, [x20]
     a98:	tbnz	w8, #2, 10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>
     a9c:	sub	x8, x20, #0x30
     aa0:	cmp	x20, #0x0
     aa4:	csel	x1, xzr, x8, eq  // eq = none
     aa8:	mov	x0, x19
     aac:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     ab0:	ldr	x20, [x20, #8]
     ab4:	b	a8c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa8c>
     ab8:	ldr	x21, [x25, #64]
     abc:	add	x20, x25, #0x38
     ac0:	cmp	x20, x21
     ac4:	b.eq	aec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaec>  // b.none
     ac8:	ldrb	w8, [x21]
     acc:	tbnz	w8, #2, 110c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x110c>
     ad0:	sub	x8, x21, #0x30
     ad4:	cmp	x21, #0x0
     ad8:	csel	x1, xzr, x8, eq  // eq = none
     adc:	mov	x0, x19
     ae0:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     ae4:	ldr	x21, [x21, #8]
     ae8:	b	ac0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xac0>
     aec:	ldr	x8, [x19, #120]
     af0:	ldr	x24, [x25, #16]
     af4:	str	x8, [sp, #16]
     af8:	ldr	x8, [x19, #112]
     afc:	str	x8, [sp, #8]
     b00:	cmp	x22, x24
     b04:	b.eq	b68 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb68>  // b.none
     b08:	ldrb	w8, [x24]
     b0c:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     b10:	sub	x8, x24, #0x38
     b14:	cmp	x24, #0x0
     b18:	csel	x21, xzr, x8, eq  // eq = none
     b1c:	mov	x0, x21
     b20:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     b24:	tbnz	w0, #0, b40 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb40>
     b28:	mov	x0, x21
     b2c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     b30:	tbnz	w0, #0, 1164 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1164>
     b34:	ldur	x1, [x21, #-24]
     b38:	mov	x0, x19
     b3c:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     b40:	ldr	x8, [x21, #72]
     b44:	cbz	x8, b60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb60>
     b48:	mov	w1, #0xffffffff            	// #-1
     b4c:	mov	x0, x21
     b50:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     b54:	mov	x1, x0
     b58:	mov	x0, x19
     b5c:	bl	141c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     b60:	ldr	x24, [x24, #8]
     b64:	b	b00 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb00>
     b68:	ldr	x21, [x25, #48]
     b6c:	cmp	x23, x21
     b70:	b.eq	bac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbac>  // b.none
     b74:	ldrb	w8, [x21]
     b78:	tbnz	w8, #2, 10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>
     b7c:	sub	x8, x21, #0x30
     b80:	cmp	x21, #0x0
     b84:	csel	x8, xzr, x8, eq  // eq = none
     b88:	ldur	x1, [x8, #-24]
     b8c:	cbz	x1, b9c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb9c>
     b90:	ldrb	w8, [x1, #16]
     b94:	cmp	w8, #0x11
     b98:	b.cs	1128 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1128>  // b.hs, b.nlast
     b9c:	mov	x0, x19
     ba0:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     ba4:	ldr	x21, [x21, #8]
     ba8:	b	b6c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb6c>
     bac:	ldr	x21, [x25, #64]
     bb0:	cmp	x20, x21
     bb4:	b.eq	bf0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbf0>  // b.none
     bb8:	ldrb	w8, [x21]
     bbc:	tbnz	w8, #2, 110c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x110c>
     bc0:	sub	x8, x21, #0x30
     bc4:	cmp	x21, #0x0
     bc8:	csel	x8, xzr, x8, eq  // eq = none
     bcc:	ldur	x1, [x8, #-24]
     bd0:	cbz	x1, be0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbe0>
     bd4:	ldrb	w8, [x1, #16]
     bd8:	cmp	w8, #0x11
     bdc:	b.cs	1128 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1128>  // b.hs, b.nlast
     be0:	mov	x0, x19
     be4:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     be8:	ldr	x21, [x21, #8]
     bec:	b	bb0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbb0>
     bf0:	ldr	x20, [x25, #32]
     bf4:	cmp	x26, x20
     bf8:	b.eq	c64 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc64>  // b.none
     bfc:	mov	w21, #0x18                  	// #24
     c00:	ldrb	w8, [x20]
     c04:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     c08:	sub	x8, x20, #0x38
     c0c:	cmp	x20, #0x0
     c10:	csel	x9, xzr, x8, eq  // eq = none
     c14:	ldr	w8, [x9, #20]
     c18:	tbnz	w8, #30, c30 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc30>
     c1c:	and	w8, w8, #0xfffffff
     c20:	mneg	x10, x8, x21
     c24:	add	x23, x9, x10
     c28:	cbnz	x8, c3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc3c>
     c2c:	b	c58 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc58>
     c30:	ldur	x23, [x9, #-8]
     c34:	and	x8, x8, #0xfffffff
     c38:	cbz	x8, c58 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc58>
     c3c:	add	x8, x8, x8, lsl #1
     c40:	lsl	x24, x8, #3
     c44:	ldr	x1, [x23], #24
     c48:	mov	x0, x19
     c4c:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     c50:	subs	x24, x24, #0x18
     c54:	b.ne	c44 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc44>  // b.any
     c58:	ldr	x20, [x20, #8]
     c5c:	cmp	x26, x20
     c60:	b.ne	c00 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc00>  // b.any
     c64:	ldr	x0, [x25]
     c68:	bl	0 <_ZN4llvm4Type13getMetadataTyERNS_11LLVMContextE>
     c6c:	mov	x1, x0
     c70:	mov	x0, x19
     c74:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
     c78:	ldr	x1, [x25, #120]
     c7c:	mov	x0, x19
     c80:	bl	1670 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE>
     c84:	mov	x0, x19
     c88:	mov	x1, x25
     c8c:	bl	16fc <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE>
     c90:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     c94:	ldr	d0, [x8]
     c98:	add	x8, sp, #0x30
     c9c:	add	x8, x8, #0x10
     ca0:	str	x8, [sp, #48]
     ca4:	str	d0, [sp, #56]
     ca8:	ldr	x20, [x25, #16]
     cac:	cmp	x22, x20
     cb0:	b.eq	d08 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd08>  // b.none
     cb4:	ldrb	w8, [x20]
     cb8:	tbnz	w8, #2, 10d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d4>
     cbc:	sub	x8, x20, #0x38
     cc0:	cmp	x20, #0x0
     cc4:	csel	x0, xzr, x8, eq  // eq = none
     cc8:	add	x1, sp, #0x30
     ccc:	str	wzr, [sp, #56]
     cd0:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
     cd4:	ldr	w8, [sp, #56]
     cd8:	cbz	w8, d00 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd00>
     cdc:	ldr	x9, [sp, #48]
     ce0:	lsl	x21, x8, #4
     ce4:	add	x23, x9, #0x8
     ce8:	ldr	x2, [x23], #16
     cec:	mov	x0, x19
     cf0:	mov	w1, wzr
     cf4:	bl	26e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     cf8:	subs	x21, x21, #0x10
     cfc:	b.ne	ce8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xce8>  // b.any
     d00:	ldr	x20, [x20, #8]
     d04:	b	cac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcac>
     d08:	ldr	x9, [x25, #32]
     d0c:	cmp	x26, x9
     d10:	b.eq	fa4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfa4>  // b.none
     d14:	str	x26, [sp, #24]
     d18:	ldrb	w8, [x9]
     d1c:	tbnz	w8, #2, 10b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10b8>
     d20:	sub	x8, x9, #0x38
     d24:	cmp	x9, #0x0
     d28:	csel	x20, xzr, x8, eq  // eq = none
     d2c:	mov	x0, x20
     d30:	str	x9, [sp, #32]
     d34:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d38:	cmp	x0, x1
     d3c:	b.eq	d5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd5c>  // b.none
     d40:	mov	x21, x0
     d44:	mov	x22, x1
     d48:	ldr	x1, [x21], #40
     d4c:	mov	x0, x19
     d50:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
     d54:	cmp	x22, x21
     d58:	b.ne	d48 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd48>  // b.any
     d5c:	add	x1, sp, #0x30
     d60:	mov	x0, x20
     d64:	str	wzr, [sp, #56]
     d68:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
     d6c:	ldr	w8, [sp, #56]
     d70:	cbz	w8, da4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xda4>
     d74:	ldr	x9, [sp, #48]
     d78:	lsl	x21, x8, #4
     d7c:	add	x22, x9, #0x8
     d80:	mov	x0, x20
     d84:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     d88:	ldr	x2, [x22], #16
     d8c:	tst	w0, #0x1
     d90:	csel	x1, xzr, x20, ne  // ne = any
     d94:	mov	x0, x19
     d98:	bl	1770 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE>
     d9c:	subs	x21, x21, #0x10
     da0:	b.ne	d80 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd80>  // b.any
     da4:	ldr	x25, [x20, #80]
     da8:	add	x8, x20, #0x48
     dac:	str	x8, [sp, #40]
     db0:	cmp	x8, x25
     db4:	b.eq	f94 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf94>  // b.none
     db8:	ldrb	w8, [x25]
     dbc:	tbnz	w8, #2, 109c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x109c>
     dc0:	sub	x8, x25, #0x18
     dc4:	cmp	x25, #0x0
     dc8:	csel	x8, xzr, x8, eq  // eq = none
     dcc:	ldr	x26, [x8, #48]
     dd0:	add	x23, x8, #0x28
     dd4:	cmp	x23, x26
     dd8:	b.eq	f88 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf88>  // b.none
     ddc:	ldrb	w8, [x26]
     de0:	tbnz	w8, #2, 1060 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1060>
     de4:	sub	x8, x26, #0x18
     de8:	cmp	x26, #0x0
     dec:	csel	x21, xzr, x8, eq  // eq = none
     df0:	ldr	w8, [x21, #20]
     df4:	tbnz	w8, #30, e10 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe10>
     df8:	and	w8, w8, #0xfffffff
     dfc:	mov	w9, #0x18                  	// #24
     e00:	mneg	x9, x8, x9
     e04:	add	x27, x21, x9
     e08:	cbnz	x8, e1c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe1c>
     e0c:	b	e80 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe80>
     e10:	ldur	x27, [x21, #-8]
     e14:	and	x8, x8, #0xfffffff
     e18:	cbz	x8, e80 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe80>
     e1c:	add	x8, x8, x8, lsl #1
     e20:	lsl	x28, x8, #3
     e24:	ldr	x1, [x27]
     e28:	cbz	x1, 1004 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1004>
     e2c:	ldrb	w8, [x1, #16]
     e30:	cmp	w8, #0x13
     e34:	b.ne	e6c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe6c>  // b.any
     e38:	ldr	x22, [x1, #24]
     e3c:	cbz	x22, 1020 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1020>
     e40:	ldrb	w8, [x22]
     e44:	cmp	w8, #0x2
     e48:	b.eq	e74 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe74>  // b.none
     e4c:	mov	x0, x19
     e50:	mov	x1, x20
     e54:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
     e58:	add	w1, w0, #0x1
     e5c:	mov	x0, x19
     e60:	mov	x2, x22
     e64:	bl	26e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     e68:	b	e74 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe74>
     e6c:	mov	x0, x19
     e70:	bl	17a8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>
     e74:	subs	x28, x28, #0x18
     e78:	add	x27, x27, #0x18
     e7c:	b.ne	e24 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe24>  // b.any
     e80:	ldr	x1, [x21]
     e84:	mov	x0, x19
     e88:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
     e8c:	cbz	x26, 1080 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1080>
     e90:	ldrb	w8, [x21, #16]
     e94:	sub	w8, w8, #0x1d
     e98:	cmp	w8, #0x33
     e9c:	b.hi	ec4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xec4>  // b.pmore
     ea0:	mov	w9, #0x1                   	// #1
     ea4:	lsl	x8, x9, x8
     ea8:	mov	x9, #0x41                  	// #65
     eac:	movk	x9, #0x8, lsl #48
     eb0:	tst	x8, x9
     eb4:	b.eq	ec4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xec4>  // b.none
     eb8:	ldr	x1, [x21, #56]
     ebc:	mov	x0, x19
     ec0:	bl	141c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     ec4:	str	wzr, [sp, #56]
     ec8:	ldrsh	w8, [x21, #18]
     ecc:	tbnz	w8, #31, f24 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf24>
     ed0:	add	x0, x21, #0x30
     ed4:	bl	0 <_ZNK4llvm8DebugLoc3getEv>
     ed8:	cbz	x0, f1c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf1c>
     edc:	ldr	w8, [x0, #8]
     ee0:	mov	x21, x0
     ee4:	neg	x9, x8
     ee8:	lsl	x9, x9, #3
     eec:	cbz	x9, f1c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf1c>
     ef0:	neg	x24, x8, lsl #3
     ef4:	ldr	x22, [x21, x24]
     ef8:	mov	x0, x19
     efc:	mov	x1, x20
     f00:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
     f04:	add	w1, w0, #0x1
     f08:	mov	x0, x19
     f0c:	mov	x2, x22
     f10:	bl	26e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     f14:	adds	x24, x24, #0x8
     f18:	b.ne	ef4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xef4>  // b.any
     f1c:	ldr	x26, [x26, #8]
     f20:	b	dd4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdd4>
     f24:	add	x1, sp, #0x30
     f28:	mov	x0, x21
     f2c:	bl	0 <_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
     f30:	ldr	w8, [sp, #56]
     f34:	cbz	w8, ed0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xed0>
     f38:	mov	x27, xzr
     f3c:	sub	x28, x8, #0x1
     f40:	mov	w24, #0x8                   	// #8
     f44:	ldr	x8, [sp, #48]
     f48:	mov	x0, x19
     f4c:	mov	x1, x20
     f50:	ldr	x22, [x8, x24]
     f54:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
     f58:	add	w1, w0, #0x1
     f5c:	mov	x0, x19
     f60:	mov	x2, x22
     f64:	bl	26e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     f68:	cmp	x28, x27
     f6c:	b.eq	ed0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xed0>  // b.none
     f70:	ldr	w8, [sp, #56]
     f74:	add	x27, x27, #0x1
     f78:	add	x24, x24, #0x10
     f7c:	cmp	x27, x8
     f80:	b.cc	f44 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf44>  // b.lo, b.ul, b.last
     f84:	b	1040 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1040>
     f88:	ldr	x25, [x25, #8]
     f8c:	ldr	x8, [sp, #40]
     f90:	b	db0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdb0>
     f94:	ldp	x26, x9, [sp, #24]
     f98:	ldr	x9, [x9, #8]
     f9c:	cmp	x26, x9
     fa0:	b.ne	d18 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd18>  // b.any
     fa4:	ldp	x9, x8, [x19, #112]
     fa8:	ldp	x11, x10, [sp, #8]
     fac:	mov	x0, x19
     fb0:	sub	x8, x8, x9
     fb4:	sub	x10, x10, x11
     fb8:	lsr	x1, x10, #4
     fbc:	lsr	x2, x8, #4
     fc0:	bl	18c8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>
     fc4:	mov	x0, x19
     fc8:	bl	19c4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv>
     fcc:	ldr	x0, [sp, #48]
     fd0:	add	x8, sp, #0x30
     fd4:	add	x8, x8, #0x10
     fd8:	cmp	x0, x8
     fdc:	b.eq	fe4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfe4>  // b.none
     fe0:	bl	0 <free>
     fe4:	ldp	x20, x19, [sp, #304]
     fe8:	ldp	x22, x21, [sp, #288]
     fec:	ldp	x24, x23, [sp, #272]
     ff0:	ldp	x26, x25, [sp, #256]
     ff4:	ldp	x28, x27, [sp, #240]
     ff8:	ldp	x29, x30, [sp, #224]
     ffc:	add	sp, sp, #0x140
    1000:	ret
    1004:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1008:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    100c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1010:	add	x0, x0, #0x0
    1014:	add	x1, x1, #0x0
    1018:	add	x3, x3, #0x0
    101c:	b	1038 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1038>
    1020:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1024:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1028:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    102c:	add	x0, x0, #0x0
    1030:	add	x1, x1, #0x0
    1034:	add	x3, x3, #0x0
    1038:	mov	w2, #0x69                  	// #105
    103c:	bl	0 <__assert_fail>
    1040:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1044:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1048:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    104c:	add	x0, x0, #0x0
    1050:	add	x1, x1, #0x0
    1054:	add	x3, x3, #0x0
    1058:	mov	w2, #0x95                  	// #149
    105c:	bl	0 <__assert_fail>
    1060:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1064:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1068:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    106c:	add	x0, x0, #0x0
    1070:	add	x1, x1, #0x0
    1074:	add	x3, x3, #0x0
    1078:	mov	w2, #0x8b                  	// #139
    107c:	bl	0 <__assert_fail>
    1080:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1084:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1088:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    108c:	add	x0, x0, #0x0
    1090:	add	x1, x1, #0x0
    1094:	add	x3, x3, #0x0
    1098:	b	1038 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1038>
    109c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10a0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10a4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10a8:	add	x0, x0, #0x0
    10ac:	add	x1, x1, #0x0
    10b0:	add	x3, x3, #0x0
    10b4:	b	1078 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1078>
    10b8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10bc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10c0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10c4:	add	x0, x0, #0x0
    10c8:	add	x1, x1, #0x0
    10cc:	add	x3, x3, #0x0
    10d0:	b	1078 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1078>
    10d4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10d8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10dc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10e0:	add	x0, x0, #0x0
    10e4:	add	x1, x1, #0x0
    10e8:	add	x3, x3, #0x0
    10ec:	b	1078 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1078>
    10f0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10f4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10f8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    10fc:	add	x0, x0, #0x0
    1100:	add	x1, x1, #0x0
    1104:	add	x3, x3, #0x0
    1108:	b	1078 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1078>
    110c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1110:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1114:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1118:	add	x0, x0, #0x0
    111c:	add	x1, x1, #0x0
    1120:	add	x3, x3, #0x0
    1124:	b	1078 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1078>
    1128:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    112c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1130:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1134:	add	x0, x0, #0x0
    1138:	add	x1, x1, #0x0
    113c:	add	x3, x3, #0x0
    1140:	mov	w2, #0x134                 	// #308
    1144:	bl	0 <__assert_fail>
    1148:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    114c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1150:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1154:	add	x0, x0, #0x0
    1158:	add	x1, x1, #0x0
    115c:	add	x3, x3, #0x0
    1160:	b	1038 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1038>
    1164:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1168:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    116c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1170:	add	x0, x0, #0x0
    1174:	add	x1, x1, #0x0
    1178:	add	x3, x3, #0x0
    117c:	mov	w2, #0x89                  	// #137
    1180:	bl	0 <__assert_fail>
    1184:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1188:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    118c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1190:	add	x0, x0, #0x0
    1194:	add	x1, x1, #0x0
    1198:	add	x3, x3, #0x0
    119c:	b	1078 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1078>

00000000000011a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>:
    11a0:	sub	sp, sp, #0x50
    11a4:	stp	x29, x30, [sp, #32]
    11a8:	stp	x22, x21, [sp, #48]
    11ac:	stp	x20, x19, [sp, #64]
    11b0:	add	x29, sp, #0x20
    11b4:	stur	x1, [x29, #-8]
    11b8:	ldr	x8, [x1]
    11bc:	ldrb	w8, [x8, #8]
    11c0:	cbz	w8, 13a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x200>
    11c4:	ldrb	w8, [x1, #16]
    11c8:	cmp	w8, #0x13
    11cc:	b.eq	13c0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x220>  // b.none
    11d0:	add	x20, x0, #0x50
    11d4:	mov	x19, x0
    11d8:	sub	x1, x29, #0x8
    11dc:	mov	x0, x20
    11e0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    11e4:	ldr	w8, [x0, #8]
    11e8:	cbz	w8, 1208 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x68>
    11ec:	ldr	x9, [x19, #112]
    11f0:	sub	w8, w8, #0x1
    11f4:	add	x8, x9, w8, uxtw #4
    11f8:	ldr	w9, [x8, #8]
    11fc:	add	w9, w9, #0x1
    1200:	str	w9, [x8, #8]
    1204:	b	136c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1cc>
    1208:	ldur	x8, [x29, #-8]
    120c:	cbz	x8, 13e0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x240>
    1210:	ldrb	w9, [x8, #16]
    1214:	mov	x21, x0
    1218:	cmp	w9, #0x3
    121c:	b.eq	1224 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x84>  // b.none
    1220:	cbnz	w9, 1240 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xa0>
    1224:	ldr	x9, [x8, #48]
    1228:	str	x9, [sp, #8]
    122c:	cbz	x9, 1240 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xa0>
    1230:	add	x0, x19, #0x88
    1234:	add	x1, sp, #0x8
    1238:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    123c:	ldur	x8, [x29, #-8]
    1240:	ldr	x1, [x8]
    1244:	mov	x0, x19
    1248:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    124c:	ldur	x8, [x29, #-8]
    1250:	cbz	x8, 13fc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x25c>
    1254:	ldrb	w9, [x8, #16]
    1258:	sub	w9, w9, #0x4
    125c:	cmp	w9, #0xc
    1260:	b.hi	1284 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xe4>  // b.pmore
    1264:	ldr	w10, [x8, #20]
    1268:	and	x9, x10, #0xfffffff
    126c:	cbz	w9, 1284 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xe4>
    1270:	tbnz	w10, #30, 12d8 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x138>
    1274:	mov	w10, #0x18                  	// #24
    1278:	mneg	x10, x9, x10
    127c:	add	x21, x8, x10
    1280:	b	12dc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x13c>
    1284:	mov	w9, #0x1                   	// #1
    1288:	stp	x8, x9, [sp, #8]
    128c:	ldp	x1, x8, [x19, #120]
    1290:	add	x20, x19, #0x70
    1294:	cmp	x1, x8
    1298:	b.eq	12b4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x114>  // b.none
    129c:	ldur	q0, [sp, #8]
    12a0:	str	q0, [x1]
    12a4:	ldr	x8, [x19, #120]
    12a8:	add	x8, x8, #0x10
    12ac:	str	x8, [x19, #120]
    12b0:	b	12c4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x124>
    12b4:	add	x2, sp, #0x8
    12b8:	mov	x0, x20
    12bc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12c0:	ldr	x8, [x19, #120]
    12c4:	ldr	x9, [x20]
    12c8:	sub	x8, x8, x9
    12cc:	lsr	x8, x8, #4
    12d0:	str	w8, [x21, #8]
    12d4:	b	136c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1cc>
    12d8:	ldur	x21, [x8, #-8]
    12dc:	add	x8, x9, x9, lsl #1
    12e0:	lsl	x22, x8, #3
    12e4:	ldr	x1, [x21]
    12e8:	cbz	x1, 1380 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1e0>
    12ec:	ldrb	w8, [x1, #16]
    12f0:	cmp	w8, #0x12
    12f4:	b.eq	1300 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x160>  // b.none
    12f8:	mov	x0, x19
    12fc:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    1300:	subs	x22, x22, #0x18
    1304:	add	x21, x21, #0x18
    1308:	b.ne	12e4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x144>  // b.any
    130c:	ldur	x8, [x29, #-8]
    1310:	mov	w9, #0x1                   	// #1
    1314:	add	x21, x19, #0x70
    1318:	stp	x8, x9, [sp, #8]
    131c:	ldp	x1, x8, [x19, #120]
    1320:	cmp	x1, x8
    1324:	b.eq	1340 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1a0>  // b.none
    1328:	ldur	q0, [sp, #8]
    132c:	str	q0, [x1]
    1330:	ldr	x8, [x19, #120]
    1334:	add	x8, x8, #0x10
    1338:	str	x8, [x19, #120]
    133c:	b	1350 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1b0>
    1340:	add	x2, sp, #0x8
    1344:	mov	x0, x21
    1348:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    134c:	ldr	x8, [x19, #120]
    1350:	ldr	x9, [x21]
    1354:	sub	x1, x29, #0x8
    1358:	mov	x0, x20
    135c:	sub	x8, x8, x9
    1360:	lsr	x19, x8, #4
    1364:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1368:	str	w19, [x0, #8]
    136c:	ldp	x20, x19, [sp, #64]
    1370:	ldp	x22, x21, [sp, #48]
    1374:	ldp	x29, x30, [sp, #32]
    1378:	add	sp, sp, #0x50
    137c:	ret
    1380:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1384:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1388:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    138c:	add	x0, x0, #0x0
    1390:	add	x1, x1, #0x0
    1394:	add	x3, x3, #0x0
    1398:	mov	w2, #0x5b                  	// #91
    139c:	bl	0 <__assert_fail>
    13a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13ac:	add	x0, x0, #0x0
    13b0:	add	x1, x1, #0x0
    13b4:	add	x3, x3, #0x0
    13b8:	mov	w2, #0x325                 	// #805
    13bc:	bl	0 <__assert_fail>
    13c0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13c8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13cc:	add	x0, x0, #0x0
    13d0:	add	x1, x1, #0x0
    13d4:	add	x3, x3, #0x0
    13d8:	mov	w2, #0x326                 	// #806
    13dc:	bl	0 <__assert_fail>
    13e0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13e4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13e8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13ec:	add	x0, x0, #0x0
    13f0:	add	x1, x1, #0x0
    13f4:	add	x3, x3, #0x0
    13f8:	b	1414 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x274>
    13fc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1400:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1404:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1408:	add	x0, x0, #0x0
    140c:	add	x1, x1, #0x0
    1410:	add	x3, x3, #0x0
    1414:	mov	w2, #0x69                  	// #105
    1418:	bl	0 <__assert_fail>

000000000000141c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>:
    141c:	sub	sp, sp, #0x60
    1420:	stp	x29, x30, [sp, #32]
    1424:	stp	x24, x23, [sp, #48]
    1428:	stp	x22, x21, [sp, #64]
    142c:	stp	x20, x19, [sp, #80]
    1430:	add	x29, sp, #0x20
    1434:	stur	x1, [x29, #-8]
    1438:	cbz	x1, 1540 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x124>
    143c:	mov	x19, x0
    1440:	add	x0, x0, #0x180
    1444:	sub	x1, x29, #0x8
    1448:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    144c:	ldr	w8, [x0, #8]
    1450:	cbnz	w8, 14a0 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x84>
    1454:	ldp	x1, x8, [x19, #424]
    1458:	mov	x20, x0
    145c:	add	x21, x19, #0x1a0
    1460:	cmp	x1, x8
    1464:	b.eq	1480 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x64>  // b.none
    1468:	ldur	x8, [x29, #-8]
    146c:	str	x8, [x1]
    1470:	ldr	x8, [x19, #424]
    1474:	add	x8, x8, #0x8
    1478:	str	x8, [x19, #424]
    147c:	b	1490 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x74>
    1480:	sub	x2, x29, #0x8
    1484:	mov	x0, x21
    1488:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    148c:	ldr	x8, [x19, #424]
    1490:	ldr	x9, [x21]
    1494:	sub	x8, x8, x9
    1498:	lsr	x8, x8, #3
    149c:	str	w8, [x20, #8]
    14a0:	sub	x0, x29, #0x8
    14a4:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    14a8:	cbz	w0, 1540 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x124>
    14ac:	mov	w20, w0
    14b0:	mov	w24, wzr
    14b4:	add	x21, x19, #0x148
    14b8:	add	x22, x19, #0x168
    14bc:	sub	w23, w24, #0x1
    14c0:	sub	x0, x29, #0x8
    14c4:	mov	w1, w23
    14c8:	bl	0 <_ZNK4llvm13AttributeList13getAttributesEj>
    14cc:	cbz	x0, 1534 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x118>
    14d0:	str	x0, [sp, #16]
    14d4:	add	x1, sp, #0x8
    14d8:	mov	x0, x21
    14dc:	str	w23, [sp, #8]
    14e0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    14e4:	ldr	w8, [x0, #16]
    14e8:	cbnz	w8, 1534 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x118>
    14ec:	ldp	x1, x8, [x19, #368]
    14f0:	mov	x23, x0
    14f4:	cmp	x1, x8
    14f8:	b.eq	1514 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xf8>  // b.none
    14fc:	ldur	q0, [sp, #8]
    1500:	str	q0, [x1]
    1504:	ldr	x8, [x19, #368]
    1508:	add	x8, x8, #0x10
    150c:	str	x8, [x19, #368]
    1510:	b	1524 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x108>
    1514:	add	x2, sp, #0x8
    1518:	mov	x0, x22
    151c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1520:	ldr	x8, [x19, #368]
    1524:	ldr	x9, [x22]
    1528:	sub	x8, x8, x9
    152c:	lsr	x8, x8, #4
    1530:	str	w8, [x23, #16]
    1534:	add	w24, w24, #0x1
    1538:	cmp	w20, w24
    153c:	b.ne	14bc <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xa0>  // b.any
    1540:	ldp	x20, x19, [sp, #80]
    1544:	ldp	x22, x21, [sp, #64]
    1548:	ldp	x24, x23, [sp, #48]
    154c:	ldp	x29, x30, [sp, #32]
    1550:	add	sp, sp, #0x60
    1554:	ret

0000000000001558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>:
    1558:	sub	sp, sp, #0x40
    155c:	stp	x29, x30, [sp, #16]
    1560:	stp	x22, x21, [sp, #32]
    1564:	stp	x20, x19, [sp, #48]
    1568:	add	x29, sp, #0x10
    156c:	add	x20, x0, #0x18
    1570:	mov	x19, x0
    1574:	str	x1, [sp, #8]
    1578:	add	x1, sp, #0x8
    157c:	mov	x0, x20
    1580:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1584:	ldr	w8, [x0, #8]
    1588:	cbnz	w8, 163c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xe4>
    158c:	ldr	x8, [sp, #8]
    1590:	cbz	x8, 1650 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xf8>
    1594:	ldr	w9, [x8, #8]
    1598:	mov	w10, #0x4ff                 	// #1279
    159c:	and	w9, w9, w10
    15a0:	cmp	w9, #0xd
    15a4:	b.ne	15b0 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x58>  // b.any
    15a8:	mov	w9, #0xffffffff            	// #-1
    15ac:	str	w9, [x0, #8]
    15b0:	ldr	w9, [x8, #12]
    15b4:	cbz	w9, 15d4 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x7c>
    15b8:	ldr	x21, [x8, #16]
    15bc:	lsl	x22, x9, #3
    15c0:	ldr	x1, [x21], #8
    15c4:	mov	x0, x19
    15c8:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    15cc:	subs	x22, x22, #0x8
    15d0:	b.ne	15c0 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x68>  // b.any
    15d4:	add	x1, sp, #0x8
    15d8:	mov	x0, x20
    15dc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    15e0:	ldr	w8, [x0, #8]
    15e4:	add	w8, w8, #0x1
    15e8:	cmp	w8, #0x2
    15ec:	b.cs	163c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xe4>  // b.hs, b.nlast
    15f0:	ldp	x1, x8, [x19, #64]
    15f4:	mov	x20, x0
    15f8:	add	x21, x19, #0x38
    15fc:	cmp	x1, x8
    1600:	b.eq	161c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xc4>  // b.none
    1604:	ldr	x8, [sp, #8]
    1608:	str	x8, [x1]
    160c:	ldr	x8, [x19, #64]
    1610:	add	x8, x8, #0x8
    1614:	str	x8, [x19, #64]
    1618:	b	162c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xd4>
    161c:	add	x2, sp, #0x8
    1620:	mov	x0, x21
    1624:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1628:	ldr	x8, [x19, #64]
    162c:	ldr	x9, [x21]
    1630:	sub	x8, x8, x9
    1634:	lsr	x8, x8, #3
    1638:	str	w8, [x20, #8]
    163c:	ldp	x20, x19, [sp, #48]
    1640:	ldp	x22, x21, [sp, #32]
    1644:	ldp	x29, x30, [sp, #16]
    1648:	add	sp, sp, #0x40
    164c:	ret
    1650:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1654:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1658:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    165c:	add	x0, x0, #0x0
    1660:	add	x1, x1, #0x0
    1664:	add	x3, x3, #0x0
    1668:	mov	w2, #0x69                  	// #105
    166c:	bl	0 <__assert_fail>

0000000000001670 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE>:
    1670:	stp	x29, x30, [sp, #-48]!
    1674:	str	x21, [sp, #16]
    1678:	stp	x20, x19, [sp, #32]
    167c:	mov	x29, sp
    1680:	ldr	w8, [x1, #8]
    1684:	ldr	x9, [x1]
    1688:	mov	x19, x0
    168c:	cbz	w8, 16b4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x44>
    1690:	add	x10, x9, #0x8
    1694:	mov	x20, x9
    1698:	ldur	x11, [x10, #-8]
    169c:	cbz	x11, 16a8 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x38>
    16a0:	cmn	x11, #0x8
    16a4:	b.ne	16b8 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x48>  // b.any
    16a8:	mov	x20, x10
    16ac:	add	x10, x10, #0x8
    16b0:	b	1698 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x28>
    16b4:	mov	x20, x9
    16b8:	add	x21, x9, x8, lsl #3
    16bc:	cmp	x21, x20
    16c0:	b.eq	16ec <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x7c>  // b.none
    16c4:	ldr	x8, [x20], #8
    16c8:	mov	x0, x19
    16cc:	ldr	x1, [x8, #8]
    16d0:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    16d4:	ldr	x8, [x20]
    16d8:	cbz	x8, 16e4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x74>
    16dc:	cmn	x8, #0x8
    16e0:	b.ne	16bc <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x4c>  // b.any
    16e4:	add	x20, x20, #0x8
    16e8:	b	16d4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x64>
    16ec:	ldp	x20, x19, [sp, #32]
    16f0:	ldr	x21, [sp, #16]
    16f4:	ldp	x29, x30, [sp], #48
    16f8:	ret

00000000000016fc <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE>:
    16fc:	stp	x29, x30, [sp, #-48]!
    1700:	str	x21, [sp, #16]
    1704:	stp	x20, x19, [sp, #32]
    1708:	mov	x29, sp
    170c:	ldr	x19, [x1, #80]
    1710:	add	x21, x1, #0x48
    1714:	cmp	x21, x19
    1718:	b.eq	1740 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x44>  // b.none
    171c:	mov	x20, x0
    1720:	ldrb	w8, [x19]
    1724:	tbnz	w8, #2, 1750 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x54>
    1728:	mov	x0, x20
    172c:	mov	x1, x19
    1730:	bl	2660 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE>
    1734:	ldr	x19, [x19, #8]
    1738:	cmp	x21, x19
    173c:	b.ne	1720 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x24>  // b.any
    1740:	ldp	x20, x19, [sp, #32]
    1744:	ldr	x21, [sp, #16]
    1748:	ldp	x29, x30, [sp], #48
    174c:	ret
    1750:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1754:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1758:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    175c:	add	x0, x0, #0x0
    1760:	add	x1, x1, #0x0
    1764:	add	x3, x3, #0x0
    1768:	mov	w2, #0x8b                  	// #139
    176c:	bl	0 <__assert_fail>

0000000000001770 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE>:
    1770:	stp	x29, x30, [sp, #-32]!
    1774:	stp	x20, x19, [sp, #16]
    1778:	mov	x29, sp
    177c:	mov	x19, x2
    1780:	mov	x20, x0
    1784:	cbz	x1, 1794 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE+0x24>
    1788:	mov	x0, x20
    178c:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    1790:	add	w1, w0, #0x1
    1794:	mov	x0, x20
    1798:	mov	x2, x19
    179c:	ldp	x20, x19, [sp, #16]
    17a0:	ldp	x29, x30, [sp], #32
    17a4:	b	26e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>

00000000000017a8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>:
    17a8:	sub	sp, sp, #0x40
    17ac:	stp	x29, x30, [sp, #16]
    17b0:	str	x21, [sp, #32]
    17b4:	stp	x20, x19, [sp, #48]
    17b8:	add	x29, sp, #0x10
    17bc:	mov	x20, x1
    17c0:	ldr	x1, [x1]
    17c4:	mov	x19, x0
    17c8:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    17cc:	cbz	x20, 188c <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xe4>
    17d0:	ldrb	w8, [x20, #16]
    17d4:	cmp	w8, #0x13
    17d8:	b.eq	18a8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x100>  // b.none
    17dc:	cmp	w8, #0x10
    17e0:	b.hi	1858 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xb0>  // b.pmore
    17e4:	add	x0, x19, #0x50
    17e8:	add	x1, x29, #0x18
    17ec:	add	x2, sp, #0x8
    17f0:	str	x20, [x29, #24]
    17f4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    17f8:	tbnz	w0, #0, 1858 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xb0>
    17fc:	ldr	w8, [x20, #20]
    1800:	tbnz	w8, #30, 181c <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x74>
    1804:	and	w8, w8, #0xfffffff
    1808:	mov	w9, #0x18                  	// #24
    180c:	mneg	x9, x8, x9
    1810:	add	x20, x20, x9
    1814:	cbnz	x8, 1828 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x80>
    1818:	b	1858 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xb0>
    181c:	ldur	x20, [x20, #-8]
    1820:	and	x8, x8, #0xfffffff
    1824:	cbz	x8, 1858 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xb0>
    1828:	add	x8, x8, x8, lsl #1
    182c:	lsl	x21, x8, #3
    1830:	ldr	x1, [x20]
    1834:	cbz	x1, 186c <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xc4>
    1838:	ldrb	w8, [x1, #16]
    183c:	cmp	w8, #0x12
    1840:	b.eq	184c <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xa4>  // b.none
    1844:	mov	x0, x19
    1848:	bl	17a8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>
    184c:	subs	x21, x21, #0x18
    1850:	add	x20, x20, #0x18
    1854:	b.ne	1830 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x88>  // b.any
    1858:	ldp	x20, x19, [sp, #48]
    185c:	ldr	x21, [sp, #32]
    1860:	ldp	x29, x30, [sp, #16]
    1864:	add	sp, sp, #0x40
    1868:	ret
    186c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1870:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1874:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1878:	add	x0, x0, #0x0
    187c:	add	x1, x1, #0x0
    1880:	add	x3, x3, #0x0
    1884:	mov	w2, #0x69                  	// #105
    1888:	bl	0 <__assert_fail>
    188c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1890:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1894:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1898:	add	x0, x0, #0x0
    189c:	add	x1, x1, #0x0
    18a0:	add	x3, x3, #0x0
    18a4:	b	1884 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xdc>
    18a8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    18ac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    18b0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    18b4:	add	x0, x0, #0x0
    18b8:	add	x1, x1, #0x0
    18bc:	add	x3, x3, #0x0
    18c0:	mov	w2, #0x37f                 	// #895
    18c4:	bl	0 <__assert_fail>

00000000000018c8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>:
    18c8:	sub	sp, sp, #0x70
    18cc:	stp	x29, x30, [sp, #32]
    18d0:	str	x25, [sp, #48]
    18d4:	stp	x24, x23, [sp, #64]
    18d8:	stp	x22, x21, [sp, #80]
    18dc:	stp	x20, x19, [sp, #96]
    18e0:	add	x29, sp, #0x20
    18e4:	cmp	w1, w2
    18e8:	b.eq	19a8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xe0>  // b.none
    18ec:	add	w8, w1, #0x1
    18f0:	mov	w19, w2
    18f4:	mov	w21, w1
    18f8:	cmp	w8, w2
    18fc:	b.eq	19a8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xe0>  // b.none
    1900:	ldrb	w8, [x0, #320]
    1904:	mov	x20, x0
    1908:	cbnz	w8, 19a8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xe0>
    190c:	ldr	x8, [x20, #112]
    1910:	mov	w25, w19
    1914:	sub	x2, x25, w21, uxtw
    1918:	add	x0, sp, #0x8
    191c:	add	x23, x8, w21, uxtw #4
    1920:	mov	x1, x23
    1924:	mov	w24, w21
    1928:	add	x22, x8, w19, uxtw #4
    192c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1930:	ldr	x2, [sp, #24]
    1934:	cbz	x2, 1950 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x88>
    1938:	ldr	x3, [sp, #16]
    193c:	mov	x0, x23
    1940:	mov	x1, x22
    1944:	mov	x4, x20
    1948:	bl	4444 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    194c:	b	1960 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x98>
    1950:	mov	x0, x23
    1954:	mov	x1, x22
    1958:	mov	x2, x20
    195c:	bl	43a0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    1960:	ldr	x0, [sp, #24]
    1964:	bl	0 <_ZdlPv>
    1968:	ldr	x8, [x20, #112]
    196c:	adrp	x2, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1970:	add	x2, x2, #0x0
    1974:	add	x0, x8, x24, lsl #4
    1978:	add	x1, x8, x25, lsl #4
    197c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1980:	add	x22, x20, #0x50
    1984:	ldr	x8, [x20, #112]
    1988:	mov	x0, x22
    198c:	add	w23, w21, #0x1
    1990:	add	x1, x8, w21, uxtw #4
    1994:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1998:	cmp	w19, w23
    199c:	mov	w21, w23
    19a0:	str	w23, [x0, #8]
    19a4:	b.ne	1984 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xbc>  // b.any
    19a8:	ldp	x20, x19, [sp, #96]
    19ac:	ldp	x22, x21, [sp, #80]
    19b0:	ldp	x24, x23, [sp, #64]
    19b4:	ldr	x25, [sp, #48]
    19b8:	ldp	x29, x30, [sp, #32]
    19bc:	add	sp, sp, #0x70
    19c0:	ret

00000000000019c4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv>:
    19c4:	stp	x29, x30, [sp, #-96]!
    19c8:	stp	x28, x27, [sp, #16]
    19cc:	stp	x26, x25, [sp, #32]
    19d0:	stp	x24, x23, [sp, #48]
    19d4:	stp	x22, x21, [sp, #64]
    19d8:	stp	x20, x19, [sp, #80]
    19dc:	mov	x29, sp
    19e0:	sub	sp, sp, #0x240
    19e4:	mov	x23, x0
    19e8:	ldr	x21, [x23, #208]!
    19ec:	ldr	x22, [x23, #8]
    19f0:	ldr	w2, [x23, #64]
    19f4:	sub	x8, x22, x21
    19f8:	cmp	x2, x8, asr #3
    19fc:	b.ne	1dd4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x410>  // b.any
    1a00:	cmp	x21, x22
    1a04:	b.eq	1d94 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3d0>  // b.none
    1a08:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a0c:	ldr	d0, [x9]
    1a10:	add	x8, sp, #0x28
    1a14:	mov	x19, x0
    1a18:	add	x20, x23, #0x30
    1a1c:	add	x1, x8, #0x10
    1a20:	cmp	w2, #0x41
    1a24:	str	x1, [sp, #40]
    1a28:	str	d0, [sp, #48]
    1a2c:	b.cc	1a40 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x7c>  // b.lo, b.ul, b.last
    1a30:	add	x0, sp, #0x28
    1a34:	mov	w3, #0x8                   	// #8
    1a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1a3c:	ldp	x21, x22, [x19, #208]
    1a40:	cmp	x21, x22
    1a44:	b.eq	1a6c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa8>  // b.none
    1a48:	ldr	x1, [x21], #8
    1a4c:	mov	x0, x20
    1a50:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a54:	str	x0, [sp, #32]
    1a58:	add	x0, sp, #0x28
    1a5c:	add	x1, sp, #0x20
    1a60:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a64:	cmp	x22, x21
    1a68:	b.ne	1a48 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x84>  // b.any
    1a6c:	ldr	w24, [sp, #48]
    1a70:	cbz	w24, 1ae8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x124>
    1a74:	ldr	x22, [sp, #40]
    1a78:	clz	x8, x24
    1a7c:	mov	w9, #0x7e                  	// #126
    1a80:	sub	x2, x9, x8, lsl #1
    1a84:	add	x21, x22, x24, lsl #3
    1a88:	mov	x0, x22
    1a8c:	mov	x1, x21
    1a90:	mov	x3, x19
    1a94:	bl	5260 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>
    1a98:	cmp	w24, #0x11
    1a9c:	b.cc	1ad8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x114>  // b.lo, b.ul, b.last
    1aa0:	add	x21, x22, #0x80
    1aa4:	mov	x0, x22
    1aa8:	mov	x1, x21
    1aac:	mov	x2, x19
    1ab0:	bl	59cc <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_>
    1ab4:	lsl	x8, x24, #3
    1ab8:	sub	x22, x8, #0x80
    1abc:	mov	x0, x21
    1ac0:	mov	x1, x19
    1ac4:	bl	5ae4 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_>
    1ac8:	subs	x22, x22, #0x8
    1acc:	add	x21, x21, #0x8
    1ad0:	b.ne	1abc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xf8>  // b.any
    1ad4:	b	1ae8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x124>
    1ad8:	mov	x0, x22
    1adc:	mov	x1, x21
    1ae0:	mov	x2, x19
    1ae4:	bl	59cc <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_>
    1ae8:	ldp	x21, x8, [x19, #208]
    1aec:	mov	x0, x23
    1af0:	stp	xzr, xzr, [x23]
    1af4:	str	xzr, [x23, #16]
    1af8:	sub	x8, x8, x21
    1afc:	asr	x22, x8, #3
    1b00:	mov	x1, x22
    1b04:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b08:	ldr	w24, [sp, #48]
    1b0c:	cbz	w24, 1bb4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1f0>
    1b10:	mov	x25, xzr
    1b14:	mov	w26, wzr
    1b18:	mov	w8, w24
    1b1c:	cmp	w8, w26
    1b20:	b.ls	1d2c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x368>  // b.plast
    1b24:	ldr	x9, [sp, #40]
    1b28:	add	x0, x9, x25
    1b2c:	ldr	w9, [x0]
    1b30:	cbnz	w9, 1bb8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1f4>
    1b34:	mov	x1, x21
    1b38:	mov	x2, x22
    1b3c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b40:	str	x0, [sp, #32]
    1b44:	ldp	x1, x8, [x19, #216]
    1b48:	cmp	x1, x8
    1b4c:	b.eq	1b64 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1a0>  // b.none
    1b50:	str	x0, [x1]
    1b54:	ldr	x8, [x19, #216]
    1b58:	add	x8, x8, #0x8
    1b5c:	str	x8, [x19, #216]
    1b60:	b	1b70 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1ac>
    1b64:	add	x2, sp, #0x20
    1b68:	mov	x0, x23
    1b6c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b70:	add	x1, sp, #0x20
    1b74:	mov	x0, x20
    1b78:	add	w26, w26, #0x1
    1b7c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b80:	str	w26, [x0, #12]
    1b84:	ldr	x8, [sp, #32]
    1b88:	cbz	x8, 1db4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3f0>
    1b8c:	ldrb	w8, [x8]
    1b90:	cbnz	w8, 1ba0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1dc>
    1b94:	ldr	w8, [x19, #544]
    1b98:	add	w8, w8, #0x1
    1b9c:	str	w8, [x19, #544]
    1ba0:	ldr	w8, [sp, #48]
    1ba4:	cmp	w24, w26
    1ba8:	add	x25, x25, #0x8
    1bac:	b.ne	1b1c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x158>  // b.any
    1bb0:	b	1bb8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1f4>
    1bb4:	mov	w8, wzr
    1bb8:	ldp	x10, x9, [x19, #208]
    1bbc:	mov	w8, w8
    1bc0:	sub	x9, x9, x10
    1bc4:	cmp	x8, x9, asr #3
    1bc8:	b.eq	1d70 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3ac>  // b.none
    1bcc:	add	x0, x19, #0xe8
    1bd0:	mov	x1, x22
    1bd4:	str	x0, [sp, #8]
    1bd8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1bdc:	str	wzr, [sp, #28]
    1be0:	ldp	x10, x9, [x19, #208]
    1be4:	ldr	w8, [sp, #48]
    1be8:	sub	x9, x9, x10
    1bec:	lsr	x23, x9, #3
    1bf0:	cmp	w8, w23
    1bf4:	b.ne	1c04 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x240>  // b.any
    1bf8:	mov	w25, wzr
    1bfc:	mov	w22, wzr
    1c00:	b	1d50 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x38c>
    1c04:	cmp	w8, w23
    1c08:	b.ls	1d2c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x368>  // b.plast
    1c0c:	ubfx	x9, x9, #3, #32
    1c10:	mov	w25, wzr
    1c14:	add	x10, x19, #0x120
    1c18:	lsl	x28, x9, #3
    1c1c:	sub	w24, w8, #0x1
    1c20:	mov	w26, w23
    1c24:	str	xzr, [sp, #16]
    1c28:	str	x10, [sp]
    1c2c:	ldr	x10, [sp, #40]
    1c30:	ldr	w9, [sp, #28]
    1c34:	ldr	w27, [x10, x28]
    1c38:	cbz	w9, 1c98 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2d4>
    1c3c:	cmp	w9, w27
    1c40:	b.eq	1c9c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2d8>  // b.none
    1c44:	ldp	x9, x8, [x19, #232]
    1c48:	ldr	x0, [sp]
    1c4c:	add	x1, sp, #0x1c
    1c50:	sub	x8, x8, x9
    1c54:	lsr	x26, x8, #3
    1c58:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1c5c:	ldr	x8, [sp, #16]
    1c60:	ldr	w9, [x0, #12]
    1c64:	str	w25, [x0, #12]
    1c68:	stp	w8, w26, [x0, #4]
    1c6c:	ldp	x10, x8, [x19, #232]
    1c70:	ldp	x12, x11, [x19, #208]
    1c74:	mov	w25, w9
    1c78:	str	w27, [sp, #28]
    1c7c:	sub	x10, x8, x10
    1c80:	ldr	w8, [sp, #48]
    1c84:	sub	x11, x11, x12
    1c88:	lsr	x10, x10, #3
    1c8c:	lsr	x26, x11, #3
    1c90:	str	x10, [sp, #16]
    1c94:	b	1c9c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2d8>
    1c98:	str	w27, [sp, #28]
    1c9c:	cmp	w8, w23
    1ca0:	b.ls	1d2c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x368>  // b.plast
    1ca4:	ldr	x8, [sp, #40]
    1ca8:	mov	x1, x21
    1cac:	mov	x2, x22
    1cb0:	add	x0, x8, x28
    1cb4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1cb8:	str	x0, [sp, #32]
    1cbc:	ldp	x1, x8, [x19, #240]
    1cc0:	cmp	x1, x8
    1cc4:	b.eq	1cdc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x318>  // b.none
    1cc8:	str	x0, [x1]
    1ccc:	ldr	x8, [x19, #240]
    1cd0:	add	x8, x8, #0x8
    1cd4:	str	x8, [x19, #240]
    1cd8:	b	1ce8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x324>
    1cdc:	ldr	x0, [sp, #8]
    1ce0:	add	x2, sp, #0x20
    1ce4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ce8:	add	x1, sp, #0x20
    1cec:	mov	x0, x20
    1cf0:	add	w26, w26, #0x1
    1cf4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1cf8:	str	w26, [x0, #12]
    1cfc:	ldr	x8, [sp, #32]
    1d00:	cbz	x8, 1db4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3f0>
    1d04:	ldrb	w8, [x8]
    1d08:	cmp	w8, #0x0
    1d0c:	cinc	w25, w25, eq  // eq = none
    1d10:	cmp	w24, w23
    1d14:	b.eq	1d4c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x388>  // b.none
    1d18:	ldr	w8, [sp, #48]
    1d1c:	add	w23, w23, #0x1
    1d20:	add	x28, x28, #0x8
    1d24:	cmp	w8, w23
    1d28:	b.hi	1c2c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x268>  // b.pmore
    1d2c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1d30:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1d34:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1d38:	add	x0, x0, #0x0
    1d3c:	add	x1, x1, #0x0
    1d40:	add	x3, x3, #0x0
    1d44:	mov	w2, #0x95                  	// #149
    1d48:	bl	0 <__assert_fail>
    1d4c:	ldr	x22, [sp, #16]
    1d50:	ldp	x9, x8, [x19, #232]
    1d54:	add	x0, x19, #0x120
    1d58:	add	x1, sp, #0x1c
    1d5c:	sub	x8, x8, x9
    1d60:	lsr	x20, x8, #3
    1d64:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1d68:	stp	w22, w20, [x0, #4]
    1d6c:	str	w25, [x0, #12]
    1d70:	cbz	x21, 1d7c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3b8>
    1d74:	mov	x0, x21
    1d78:	bl	0 <_ZdlPv>
    1d7c:	ldr	x0, [sp, #40]
    1d80:	add	x8, sp, #0x28
    1d84:	add	x8, x8, #0x10
    1d88:	cmp	x0, x8
    1d8c:	b.eq	1d94 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3d0>  // b.none
    1d90:	bl	0 <free>
    1d94:	add	sp, sp, #0x240
    1d98:	ldp	x20, x19, [sp, #80]
    1d9c:	ldp	x22, x21, [sp, #64]
    1da0:	ldp	x24, x23, [sp, #48]
    1da4:	ldp	x26, x25, [sp, #32]
    1da8:	ldp	x28, x27, [sp, #16]
    1dac:	ldp	x29, x30, [sp], #96
    1db0:	ret
    1db4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1db8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1dbc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1dc0:	add	x0, x0, #0x0
    1dc4:	add	x1, x1, #0x0
    1dc8:	add	x3, x3, #0x0
    1dcc:	mov	w2, #0x69                  	// #105
    1dd0:	bl	0 <__assert_fail>
    1dd4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1dd8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ddc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1de0:	add	x0, x0, #0x0
    1de4:	add	x1, x1, #0x0
    1de8:	add	x3, x3, #0x0
    1dec:	mov	w2, #0x2d7                 	// #727
    1df0:	bl	0 <__assert_fail>

0000000000001df4 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE>:
    1df4:	sub	sp, sp, #0x60
    1df8:	stp	x29, x30, [sp, #64]
    1dfc:	stp	x20, x19, [sp, #80]
    1e00:	add	x29, sp, #0x40
    1e04:	add	x20, x0, #0x1d8
    1e08:	mov	x19, x0
    1e0c:	add	x8, sp, #0x20
    1e10:	mov	x0, x20
    1e14:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e18:	ldp	x10, x8, [x19, #472]
    1e1c:	ldr	w9, [x19, #496]
    1e20:	add	x0, sp, #0x20
    1e24:	mov	x1, sp
    1e28:	stp	x20, x10, [sp]
    1e2c:	add	x8, x8, x9, lsl #4
    1e30:	stp	x8, x8, [sp, #16]
    1e34:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e38:	tbz	w0, #0, 1e64 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x70>
    1e3c:	ldp	x8, x9, [sp, #32]
    1e40:	ldr	x8, [x8]
    1e44:	cmp	x8, x9
    1e48:	b.ne	1e84 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x90>  // b.any
    1e4c:	ldr	x8, [sp, #48]
    1e50:	ldp	x20, x19, [sp, #80]
    1e54:	ldp	x29, x30, [sp, #64]
    1e58:	ldr	w0, [x8, #8]
    1e5c:	add	sp, sp, #0x60
    1e60:	ret
    1e64:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e68:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e6c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e70:	add	x0, x0, #0x0
    1e74:	add	x1, x1, #0x0
    1e78:	add	x3, x3, #0x0
    1e7c:	mov	w2, #0x1bb                 	// #443
    1e80:	bl	0 <__assert_fail>
    1e84:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e88:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e8c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e90:	add	x0, x0, #0x0
    1e94:	add	x1, x1, #0x0
    1e98:	add	x3, x3, #0x0
    1e9c:	mov	w2, #0x4b9                 	// #1209
    1ea0:	bl	0 <__assert_fail>

0000000000001ea4 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>:
    1ea4:	sub	sp, sp, #0x20
    1ea8:	stp	x29, x30, [sp, #16]
    1eac:	add	x29, sp, #0x10
    1eb0:	str	x1, [sp, #8]
    1eb4:	add	x0, x0, #0x88
    1eb8:	add	x1, sp, #0x8
    1ebc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ec0:	cbz	w0, 1ed0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x2c>
    1ec4:	ldp	x29, x30, [sp, #16]
    1ec8:	add	sp, sp, #0x20
    1ecc:	ret
    1ed0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ed4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ed8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1edc:	add	x0, x0, #0x0
    1ee0:	add	x1, x1, #0x0
    1ee4:	add	x3, x3, #0x0
    1ee8:	mov	w2, #0x1c1                 	// #449
    1eec:	bl	0 <__assert_fail>

0000000000001ef0 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE>:
    1ef0:	stp	x29, x30, [sp, #-32]!
    1ef4:	str	x19, [sp, #16]
    1ef8:	mov	x29, sp
    1efc:	str	x1, [x29, #24]
    1f00:	ldr	w19, [x0, #504]
    1f04:	add	x1, x29, #0x18
    1f08:	add	w8, w19, #0x1
    1f0c:	str	w8, [x0, #504]
    1f10:	add	x0, x0, #0x1d8
    1f14:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1f18:	str	w19, [x0, #8]
    1f1c:	ldr	x19, [sp, #16]
    1f20:	ldp	x29, x30, [sp], #32
    1f24:	ret

0000000000001f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>:
    1f28:	sub	sp, sp, #0x60
    1f2c:	stp	x29, x30, [sp, #64]
    1f30:	stp	x20, x19, [sp, #80]
    1f34:	add	x29, sp, #0x40
    1f38:	cbz	x1, 1fc4 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x9c>
    1f3c:	ldrb	w8, [x1, #16]
    1f40:	mov	x19, x0
    1f44:	cmp	w8, #0x13
    1f48:	b.ne	1f64 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x3c>  // b.any
    1f4c:	ldr	x1, [x1, #24]
    1f50:	mov	x0, x19
    1f54:	ldp	x20, x19, [sp, #80]
    1f58:	ldp	x29, x30, [sp, #64]
    1f5c:	add	sp, sp, #0x60
    1f60:	b	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1f64:	add	x20, x19, #0x50
    1f68:	add	x8, sp, #0x20
    1f6c:	mov	x0, x20
    1f70:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1f74:	ldp	x10, x8, [x19, #80]
    1f78:	ldr	w9, [x19, #104]
    1f7c:	add	x0, sp, #0x20
    1f80:	mov	x1, sp
    1f84:	stp	x20, x10, [sp]
    1f88:	add	x8, x8, x9, lsl #4
    1f8c:	stp	x8, x8, [sp, #16]
    1f90:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1f94:	tbz	w0, #0, 1fe4 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xbc>
    1f98:	ldp	x8, x9, [sp, #32]
    1f9c:	ldr	x8, [x8]
    1fa0:	cmp	x8, x9
    1fa4:	b.ne	2004 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xdc>  // b.any
    1fa8:	ldr	x8, [sp, #48]
    1fac:	ldp	x20, x19, [sp, #80]
    1fb0:	ldp	x29, x30, [sp, #64]
    1fb4:	ldr	w8, [x8, #8]
    1fb8:	sub	w0, w8, #0x1
    1fbc:	add	sp, sp, #0x60
    1fc0:	ret
    1fc4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1fc8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1fcc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1fd0:	add	x0, x0, #0x0
    1fd4:	add	x1, x1, #0x0
    1fd8:	add	x3, x3, #0x0
    1fdc:	mov	w2, #0x69                  	// #105
    1fe0:	bl	0 <__assert_fail>
    1fe4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1fe8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1fec:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ff0:	add	x0, x0, #0x0
    1ff4:	add	x1, x1, #0x0
    1ff8:	add	x3, x3, #0x0
    1ffc:	mov	w2, #0x1ce                 	// #462
    2000:	bl	0 <__assert_fail>
    2004:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2008:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    200c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2010:	add	x0, x0, #0x0
    2014:	add	x1, x1, #0x0
    2018:	add	x3, x3, #0x0
    201c:	mov	w2, #0x4b9                 	// #1209
    2020:	bl	0 <__assert_fail>

0000000000002024 <_ZNK4llvm15ValueEnumerator4dumpEv>:
    2024:	stp	x29, x30, [sp, #-32]!
    2028:	str	x19, [sp, #16]
    202c:	mov	x29, sp
    2030:	mov	x19, x0
    2034:	bl	0 <_ZN4llvm4dbgsEv>
    2038:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    203c:	add	x2, x19, #0x50
    2040:	add	x3, x3, #0x0
    2044:	mov	x1, x0
    2048:	bl	20cc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc>
    204c:	bl	0 <_ZN4llvm4dbgsEv>
    2050:	ldp	x9, x8, [x0, #16]
    2054:	cmp	x8, x9
    2058:	b.cs	2070 <_ZNK4llvm15ValueEnumerator4dumpEv+0x4c>  // b.hs, b.nlast
    205c:	add	x9, x8, #0x1
    2060:	mov	w10, #0xa                   	// #10
    2064:	str	x9, [x0, #24]
    2068:	strb	w10, [x8]
    206c:	b	2078 <_ZNK4llvm15ValueEnumerator4dumpEv+0x54>
    2070:	mov	w1, #0xa                   	// #10
    2074:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2078:	bl	0 <_ZN4llvm4dbgsEv>
    207c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2080:	add	x2, x19, #0x100
    2084:	add	x3, x3, #0x0
    2088:	mov	x1, x0
    208c:	bl	2410 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc>
    2090:	bl	0 <_ZN4llvm4dbgsEv>
    2094:	ldp	x9, x8, [x0, #16]
    2098:	cmp	x8, x9
    209c:	b.cs	20bc <_ZNK4llvm15ValueEnumerator4dumpEv+0x98>  // b.hs, b.nlast
    20a0:	ldr	x19, [sp, #16]
    20a4:	add	x9, x8, #0x1
    20a8:	mov	w10, #0xa                   	// #10
    20ac:	str	x9, [x0, #24]
    20b0:	strb	w10, [x8]
    20b4:	ldp	x29, x30, [sp], #32
    20b8:	ret
    20bc:	ldr	x19, [sp, #16]
    20c0:	mov	w1, #0xa                   	// #10
    20c4:	ldp	x29, x30, [sp], #32
    20c8:	b	0 <_ZN4llvm11raw_ostream5writeEh>

00000000000020cc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc>:
    20cc:	sub	sp, sp, #0xa0
    20d0:	stp	x29, x30, [sp, #64]
    20d4:	stp	x28, x27, [sp, #80]
    20d8:	stp	x26, x25, [sp, #96]
    20dc:	stp	x24, x23, [sp, #112]
    20e0:	stp	x22, x21, [sp, #128]
    20e4:	stp	x20, x19, [sp, #144]
    20e8:	add	x29, sp, #0x40
    20ec:	mov	x19, x1
    20f0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    20f4:	mov	x20, x2
    20f8:	add	x1, x1, #0x0
    20fc:	mov	w2, #0xa                   	// #10
    2100:	mov	x0, x19
    2104:	mov	x21, x3
    2108:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    210c:	mov	x1, x21
    2110:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2114:	adrp	x21, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2118:	add	x21, x21, #0x0
    211c:	mov	w2, #0x1                   	// #1
    2120:	mov	x1, x21
    2124:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2128:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    212c:	add	x1, x1, #0x0
    2130:	mov	w2, #0x6                   	// #6
    2134:	mov	x0, x19
    2138:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    213c:	ldr	w1, [x20, #16]
    2140:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2144:	mov	w2, #0x1                   	// #1
    2148:	mov	x1, x21
    214c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2150:	ldr	x1, [x20, #8]
    2154:	ldr	w8, [x20, #24]
    2158:	ldr	w9, [x20, #16]
    215c:	add	x2, x1, x8, lsl #4
    2160:	cbz	w9, 2180 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xb4>
    2164:	add	x0, sp, #0x20
    2168:	mov	x3, x20
    216c:	mov	w4, wzr
    2170:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2174:	ldr	w8, [x20, #24]
    2178:	ldp	x9, x1, [x20]
    217c:	b	218c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xc0>
    2180:	ldr	x9, [x20]
    2184:	stp	x2, x2, [sp, #48]
    2188:	stp	x20, x9, [sp, #32]
    218c:	add	x8, x1, x8, lsl #4
    2190:	add	x0, sp, #0x20
    2194:	mov	x1, sp
    2198:	stp	x20, x9, [sp]
    219c:	stp	x8, x8, [sp, #16]
    21a0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21a4:	tbz	w0, #0, 2390 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x2c4>
    21a8:	adrp	x21, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21ac:	adrp	x22, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21b0:	adrp	x23, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21b4:	adrp	x24, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21b8:	adrp	x25, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21bc:	adrp	x26, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21c0:	add	x21, x21, #0x0
    21c4:	add	x22, x22, #0x0
    21c8:	add	x23, x23, #0x0
    21cc:	add	x24, x24, #0x0
    21d0:	add	x25, x25, #0x0
    21d4:	add	x26, x26, #0x0
    21d8:	ldp	x8, x9, [sp, #32]
    21dc:	ldr	x8, [x8]
    21e0:	cmp	x8, x9
    21e4:	b.ne	23d0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x304>  // b.any
    21e8:	ldr	x8, [sp, #48]
    21ec:	ldr	x28, [x8]
    21f0:	ldrb	w8, [x28, #23]
    21f4:	tbnz	w8, #5, 220c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x140>
    21f8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    21fc:	mov	w2, #0xe                   	// #14
    2200:	mov	x0, x19
    2204:	add	x1, x1, #0x0
    2208:	b	2240 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x174>
    220c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2210:	mov	w2, #0x7                   	// #7
    2214:	mov	x0, x19
    2218:	add	x1, x1, #0x0
    221c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2220:	mov	x20, x0
    2224:	mov	x0, x28
    2228:	bl	0 <_ZNK4llvm5Value7getNameEv>
    222c:	mov	x2, x0
    2230:	mov	x3, x1
    2234:	mov	x0, x20
    2238:	mov	x1, x2
    223c:	mov	x2, x3
    2240:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2244:	bl	0 <_ZN4llvm4errsEv>
    2248:	mov	x1, x0
    224c:	mov	x0, x28
    2250:	mov	w2, wzr
    2254:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    2258:	bl	0 <_ZN4llvm4errsEv>
    225c:	ldp	x9, x8, [x0, #16]
    2260:	cmp	x8, x9
    2264:	b.cs	227c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1b0>  // b.hs, b.nlast
    2268:	add	x9, x8, #0x1
    226c:	str	x9, [x0, #24]
    2270:	mov	w9, #0xa                   	// #10
    2274:	strb	w9, [x8]
    2278:	b	2284 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1b8>
    227c:	mov	w1, #0xa                   	// #10
    2280:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2284:	mov	w2, #0x6                   	// #6
    2288:	mov	x0, x19
    228c:	mov	x1, x21
    2290:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2294:	mov	x20, x0
    2298:	mov	x0, x28
    229c:	bl	0 <_ZNK4llvm5Value10getNumUsesEv>
    22a0:	mov	w1, w0
    22a4:	mov	x0, x20
    22a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    22ac:	mov	w2, #0x2                   	// #2
    22b0:	mov	x1, x22
    22b4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    22b8:	mov	x0, x28
    22bc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    22c0:	ldr	x27, [x28, #8]
    22c4:	cbz	x27, 234c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x280>
    22c8:	mov	x0, x28
    22cc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    22d0:	ldr	x8, [x28, #8]
    22d4:	cbz	x8, 23b0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x2e4>
    22d8:	cmp	x27, x8
    22dc:	b.eq	22f0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x224>  // b.none
    22e0:	mov	w2, #0x1                   	// #1
    22e4:	mov	x0, x19
    22e8:	mov	x1, x26
    22ec:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    22f0:	ldr	x8, [x27]
    22f4:	ldrb	w8, [x8, #23]
    22f8:	tbnz	w8, #5, 230c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x240>
    22fc:	mov	w2, #0x7                   	// #7
    2300:	mov	x0, x19
    2304:	mov	x1, x24
    2308:	b	2340 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x274>
    230c:	mov	w2, #0x1                   	// #1
    2310:	mov	x0, x19
    2314:	mov	x1, x25
    2318:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    231c:	ldr	x8, [x27]
    2320:	mov	x20, x0
    2324:	mov	x0, x8
    2328:	bl	0 <_ZNK4llvm5Value7getNameEv>
    232c:	mov	x2, x0
    2330:	mov	x3, x1
    2334:	mov	x0, x20
    2338:	mov	x1, x2
    233c:	mov	x2, x3
    2340:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2344:	ldr	x27, [x27, #8]
    2348:	cbnz	x27, 22c8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1fc>
    234c:	mov	w2, #0x2                   	// #2
    2350:	mov	x0, x19
    2354:	mov	x1, x23
    2358:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    235c:	ldp	x8, x9, [sp, #32]
    2360:	ldr	x8, [x8]
    2364:	cmp	x8, x9
    2368:	b.ne	23f0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x324>  // b.any
    236c:	ldr	x8, [sp, #48]
    2370:	add	x0, sp, #0x20
    2374:	add	x8, x8, #0x10
    2378:	str	x8, [sp, #48]
    237c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2380:	add	x0, sp, #0x20
    2384:	mov	x1, sp
    2388:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    238c:	tbnz	w0, #0, 21d8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x10c>
    2390:	ldp	x20, x19, [sp, #144]
    2394:	ldp	x22, x21, [sp, #128]
    2398:	ldp	x24, x23, [sp, #112]
    239c:	ldp	x26, x25, [sp, #96]
    23a0:	ldp	x28, x27, [sp, #80]
    23a4:	ldp	x29, x30, [sp, #64]
    23a8:	add	sp, sp, #0xa0
    23ac:	ret
    23b0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23b4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23b8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23bc:	add	x0, x0, #0x0
    23c0:	add	x1, x1, #0x0
    23c4:	add	x3, x3, #0x0
    23c8:	mov	w2, #0x99                  	// #153
    23cc:	bl	0 <__assert_fail>
    23d0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23d4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23d8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23dc:	add	x0, x0, #0x0
    23e0:	add	x1, x1, #0x0
    23e4:	add	x3, x3, #0x0
    23e8:	mov	w2, #0x4b9                 	// #1209
    23ec:	bl	0 <__assert_fail>
    23f0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23f4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23f8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23fc:	add	x0, x0, #0x0
    2400:	add	x1, x1, #0x0
    2404:	add	x3, x3, #0x0
    2408:	mov	w2, #0x4cf                 	// #1231
    240c:	bl	0 <__assert_fail>

0000000000002410 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc>:
    2410:	sub	sp, sp, #0x80
    2414:	stp	x29, x30, [sp, #64]
    2418:	str	x23, [sp, #80]
    241c:	stp	x22, x21, [sp, #96]
    2420:	stp	x20, x19, [sp, #112]
    2424:	add	x29, sp, #0x40
    2428:	mov	x19, x1
    242c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2430:	mov	x20, x2
    2434:	add	x1, x1, #0x0
    2438:	mov	w2, #0xa                   	// #10
    243c:	mov	x0, x19
    2440:	mov	x21, x3
    2444:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2448:	mov	x1, x21
    244c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2450:	adrp	x21, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2454:	add	x21, x21, #0x0
    2458:	mov	w2, #0x1                   	// #1
    245c:	mov	x1, x21
    2460:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2464:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2468:	add	x1, x1, #0x0
    246c:	mov	w2, #0x6                   	// #6
    2470:	mov	x0, x19
    2474:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2478:	ldr	w1, [x20, #16]
    247c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2480:	mov	w2, #0x1                   	// #1
    2484:	mov	x1, x21
    2488:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    248c:	ldr	x1, [x20, #8]
    2490:	ldr	w8, [x20, #24]
    2494:	ldr	w9, [x20, #16]
    2498:	add	x2, x1, x8, lsl #4
    249c:	cbz	w9, 24bc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xac>
    24a0:	add	x0, sp, #0x20
    24a4:	mov	x3, x20
    24a8:	mov	w4, wzr
    24ac:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    24b0:	ldr	w8, [x20, #24]
    24b4:	ldp	x9, x1, [x20]
    24b8:	b	24c8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xb8>
    24bc:	ldr	x9, [x20]
    24c0:	stp	x2, x2, [sp, #48]
    24c4:	stp	x20, x9, [sp, #32]
    24c8:	add	x8, x1, x8, lsl #4
    24cc:	add	x0, sp, #0x20
    24d0:	mov	x1, sp
    24d4:	stp	x20, x9, [sp]
    24d8:	stp	x8, x8, [sp, #16]
    24dc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    24e0:	tbz	w0, #0, 25dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1cc>
    24e4:	adrp	x20, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    24e8:	adrp	x21, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    24ec:	adrp	x22, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    24f0:	add	x20, x20, #0x0
    24f4:	add	x21, x21, #0x0
    24f8:	add	x22, x22, #0x0
    24fc:	ldp	x8, x9, [sp, #32]
    2500:	ldr	x8, [x8]
    2504:	cmp	x8, x9
    2508:	b.ne	25f4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1e4>  // b.any
    250c:	ldr	x8, [sp, #48]
    2510:	mov	w2, #0x11                  	// #17
    2514:	mov	x0, x19
    2518:	mov	x1, x20
    251c:	ldr	x23, [x8]
    2520:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2524:	ldp	x8, x9, [sp, #32]
    2528:	ldr	x8, [x8]
    252c:	cmp	x8, x9
    2530:	b.ne	25f4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1e4>  // b.any
    2534:	ldr	x8, [sp, #48]
    2538:	ldr	w1, [x8, #12]
    253c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2540:	mov	w2, #0x1                   	// #1
    2544:	mov	x1, x21
    2548:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    254c:	mov	w2, #0x15                  	// #21
    2550:	mov	x0, x19
    2554:	mov	x1, x22
    2558:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    255c:	ldp	x8, x9, [sp, #32]
    2560:	ldr	x8, [x8]
    2564:	cmp	x8, x9
    2568:	b.ne	25f4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1e4>  // b.any
    256c:	ldr	x8, [sp, #48]
    2570:	ldr	w1, [x8, #8]
    2574:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2578:	mov	w2, #0x1                   	// #1
    257c:	mov	x1, x21
    2580:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2584:	mov	x0, x23
    2588:	mov	x1, x19
    258c:	mov	x2, xzr
    2590:	mov	w3, wzr
    2594:	bl	0 <_ZNK4llvm8Metadata5printERNS_11raw_ostreamEPKNS_6ModuleEb>
    2598:	mov	w2, #0x1                   	// #1
    259c:	mov	x0, x19
    25a0:	mov	x1, x21
    25a4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    25a8:	ldp	x8, x9, [sp, #32]
    25ac:	ldr	x8, [x8]
    25b0:	cmp	x8, x9
    25b4:	b.ne	2614 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x204>  // b.any
    25b8:	ldr	x8, [sp, #48]
    25bc:	add	x0, sp, #0x20
    25c0:	add	x8, x8, #0x10
    25c4:	str	x8, [sp, #48]
    25c8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    25cc:	add	x0, sp, #0x20
    25d0:	mov	x1, sp
    25d4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    25d8:	tbnz	w0, #0, 24fc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xec>
    25dc:	ldp	x20, x19, [sp, #112]
    25e0:	ldp	x22, x21, [sp, #96]
    25e4:	ldr	x23, [sp, #80]
    25e8:	ldp	x29, x30, [sp, #64]
    25ec:	add	sp, sp, #0x80
    25f0:	ret
    25f4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    25f8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    25fc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2600:	add	x0, x0, #0x0
    2604:	add	x1, x1, #0x0
    2608:	add	x3, x3, #0x0
    260c:	mov	w2, #0x4b9                 	// #1209
    2610:	bl	0 <__assert_fail>
    2614:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2618:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    261c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2620:	add	x0, x0, #0x0
    2624:	add	x1, x1, #0x0
    2628:	add	x3, x3, #0x0
    262c:	mov	w2, #0x4cf                 	// #1231
    2630:	bl	0 <__assert_fail>

0000000000002634 <_ZL21isIntOrIntVectorValueRKSt4pairIPKN4llvm5ValueEjE>:
    2634:	ldr	x8, [x0]
    2638:	ldr	x9, [x8]
    263c:	ldrb	w8, [x9, #8]
    2640:	cmp	w8, #0x10
    2644:	b.ne	2654 <_ZL21isIntOrIntVectorValueRKSt4pairIPKN4llvm5ValueEjE+0x20>  // b.any
    2648:	ldr	x8, [x9, #16]
    264c:	ldr	x8, [x8]
    2650:	ldrb	w8, [x8, #8]
    2654:	cmp	w8, #0xb
    2658:	cset	w0, eq  // eq = none
    265c:	ret

0000000000002660 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE>:
    2660:	stp	x29, x30, [sp, #-48]!
    2664:	stp	x22, x21, [sp, #16]
    2668:	stp	x20, x19, [sp, #32]
    266c:	mov	x29, sp
    2670:	mov	x20, x0
    2674:	mov	x0, x1
    2678:	mov	x19, x1
    267c:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    2680:	cbz	w0, 26b4 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE+0x54>
    2684:	mov	w21, w0
    2688:	mov	w22, wzr
    268c:	mov	x0, x19
    2690:	mov	w1, w22
    2694:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    2698:	mov	x2, x0
    269c:	mov	x0, x20
    26a0:	mov	w1, wzr
    26a4:	bl	26e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    26a8:	add	w22, w22, #0x1
    26ac:	cmp	w21, w22
    26b0:	b.ne	268c <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE+0x2c>  // b.any
    26b4:	ldp	x20, x19, [sp, #32]
    26b8:	ldp	x22, x21, [sp, #16]
    26bc:	ldp	x29, x30, [sp], #48
    26c0:	ret

00000000000026c4 <_ZNK4llvm15ValueEnumerator21getMetadataFunctionIDEPKNS_8FunctionE>:
    26c4:	cbz	x1, 26e0 <_ZNK4llvm15ValueEnumerator21getMetadataFunctionIDEPKNS_8FunctionE+0x1c>
    26c8:	stp	x29, x30, [sp, #-16]!
    26cc:	mov	x29, sp
    26d0:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    26d4:	add	w0, w0, #0x1
    26d8:	ldp	x29, x30, [sp], #16
    26dc:	ret
    26e0:	mov	w0, wzr
    26e4:	ret

00000000000026e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>:
    26e8:	stp	x29, x30, [sp, #-80]!
    26ec:	stp	x28, x25, [sp, #16]
    26f0:	stp	x24, x23, [sp, #32]
    26f4:	stp	x22, x21, [sp, #48]
    26f8:	stp	x20, x19, [sp, #64]
    26fc:	mov	x29, sp
    2700:	sub	sp, sp, #0x340
    2704:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2708:	ldr	d0, [x9]
    270c:	add	x8, sp, #0x230
    2710:	add	x10, sp, #0x20
    2714:	add	x8, x8, #0x10
    2718:	add	x9, x10, #0x10
    271c:	mov	w19, w1
    2720:	mov	x20, x0
    2724:	str	x8, [sp, #560]
    2728:	str	x9, [sp, #32]
    272c:	str	d0, [sp, #568]
    2730:	str	d0, [sp, #40]
    2734:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    2738:	cbz	x0, 2754 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x6c>
    273c:	ldr	w8, [x0, #8]
    2740:	add	x1, sp, #0x10
    2744:	sub	x8, x0, x8, lsl #3
    2748:	stp	x0, x8, [sp, #16]
    274c:	add	x0, sp, #0x20
    2750:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2754:	ldr	w8, [sp, #40]
    2758:	cbz	w8, 29c0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2d8>
    275c:	add	x21, x20, #0xd0
    2760:	add	x22, x20, #0x100
    2764:	ldr	x9, [sp, #32]
    2768:	add	x8, x9, w8, uxtw #4
    276c:	ldp	x23, x24, [x8, #-16]
    2770:	sub	x8, x23, x24
    2774:	cmp	x8, #0x20
    2778:	b.lt	27e8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x100>  // b.tstop
    277c:	lsr	x8, x8, #5
    2780:	add	x25, x8, #0x1
    2784:	ldr	x2, [x24]
    2788:	mov	x0, x20
    278c:	mov	w1, w19
    2790:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    2794:	cbnz	x0, 2860 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x178>
    2798:	ldr	x2, [x24, #8]
    279c:	mov	x0, x20
    27a0:	mov	w1, w19
    27a4:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    27a8:	cbnz	x0, 284c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x164>
    27ac:	ldr	x2, [x24, #16]
    27b0:	mov	x0, x20
    27b4:	mov	w1, w19
    27b8:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    27bc:	cbnz	x0, 2854 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x16c>
    27c0:	ldr	x2, [x24, #24]
    27c4:	mov	x0, x20
    27c8:	mov	w1, w19
    27cc:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    27d0:	cbnz	x0, 285c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x174>
    27d4:	sub	x25, x25, #0x1
    27d8:	cmp	x25, #0x1
    27dc:	add	x24, x24, #0x20
    27e0:	b.gt	2784 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x9c>
    27e4:	sub	x8, x23, x24
    27e8:	asr	x8, x8, #3
    27ec:	cmp	x8, #0x1
    27f0:	b.eq	2834 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x14c>  // b.none
    27f4:	cmp	x8, #0x2
    27f8:	b.eq	281c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x134>  // b.none
    27fc:	cmp	x8, #0x3
    2800:	b.ne	28e0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1f8>  // b.any
    2804:	ldr	x2, [x24]
    2808:	mov	x0, x20
    280c:	mov	w1, w19
    2810:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    2814:	cbnz	x0, 2860 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x178>
    2818:	add	x24, x24, #0x8
    281c:	ldr	x2, [x24]
    2820:	mov	x0, x20
    2824:	mov	w1, w19
    2828:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    282c:	cbnz	x0, 2860 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x178>
    2830:	add	x24, x24, #0x8
    2834:	ldr	x2, [x24]
    2838:	mov	x0, x20
    283c:	mov	w1, w19
    2840:	bl	2d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    2844:	cbnz	x0, 2860 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x178>
    2848:	b	28e0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1f8>
    284c:	add	x24, x24, #0x8
    2850:	b	2860 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x178>
    2854:	add	x24, x24, #0x10
    2858:	b	2860 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x178>
    285c:	add	x24, x24, #0x18
    2860:	cmp	x24, x23
    2864:	b.eq	28e0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1f8>  // b.none
    2868:	ldr	x8, [x24]
    286c:	add	x0, sp, #0x10
    2870:	str	x8, [sp, #16]
    2874:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2878:	tbz	w0, #0, 2a0c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x324>
    287c:	ldr	x9, [x24]
    2880:	ldr	w8, [sp, #40]
    2884:	str	x9, [sp, #8]
    2888:	cbz	w8, 2a2c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x344>
    288c:	ldr	x9, [sp, #32]
    2890:	add	x10, x24, #0x8
    2894:	add	x8, x9, x8, lsl #4
    2898:	stur	x10, [x8, #-8]
    289c:	ldr	x8, [sp, #8]
    28a0:	ldrb	w9, [x8, #1]
    28a4:	and	w9, w9, #0x7f
    28a8:	cmp	w9, #0x1
    28ac:	b.ne	28c0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1d8>  // b.any
    28b0:	ldrb	w9, [x23, #1]
    28b4:	and	w9, w9, #0x7f
    28b8:	cmp	w9, #0x1
    28bc:	b.ne	29ac <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2c4>  // b.any
    28c0:	ldr	w9, [x8, #8]
    28c4:	str	x8, [sp, #16]
    28c8:	add	x0, sp, #0x20
    28cc:	add	x1, sp, #0x10
    28d0:	sub	x8, x8, x9, lsl #3
    28d4:	str	x8, [sp, #24]
    28d8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    28dc:	b	29b8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2d0>
    28e0:	ldp	w8, w9, [sp, #40]
    28e4:	sub	x8, x8, #0x1
    28e8:	cmp	x8, x9
    28ec:	b.hi	2a4c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x364>  // b.pmore
    28f0:	str	w8, [sp, #40]
    28f4:	str	x23, [sp, #16]
    28f8:	ldp	x1, x8, [x20, #216]
    28fc:	cmp	x1, x8
    2900:	b.eq	2918 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x230>  // b.none
    2904:	str	x23, [x1]
    2908:	ldr	x8, [x20, #216]
    290c:	add	x8, x8, #0x8
    2910:	str	x8, [x20, #216]
    2914:	b	2928 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x240>
    2918:	add	x2, sp, #0x10
    291c:	mov	x0, x21
    2920:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2924:	ldr	x8, [x20, #216]
    2928:	ldr	x9, [x21]
    292c:	add	x1, sp, #0x10
    2930:	mov	x0, x22
    2934:	str	x23, [sp, #16]
    2938:	sub	x8, x8, x9
    293c:	lsr	x23, x8, #3
    2940:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2944:	str	w23, [x0, #12]
    2948:	ldr	w8, [sp, #40]
    294c:	cbz	w8, 296c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x284>
    2950:	ldr	x9, [sp, #32]
    2954:	add	x8, x9, x8, lsl #4
    2958:	ldur	x8, [x8, #-16]
    295c:	ldrb	w8, [x8, #1]
    2960:	and	w8, w8, #0x7f
    2964:	cmp	w8, #0x1
    2968:	b.ne	29b8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2d0>  // b.any
    296c:	ldr	w8, [sp, #568]
    2970:	cbz	w8, 29a4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2bc>
    2974:	ldr	x23, [sp, #560]
    2978:	lsl	x24, x8, #3
    297c:	ldr	x8, [x23], #8
    2980:	add	x0, sp, #0x20
    2984:	add	x1, sp, #0x10
    2988:	ldr	w9, [x8, #8]
    298c:	str	x8, [sp, #16]
    2990:	sub	x8, x8, x9, lsl #3
    2994:	str	x8, [sp, #24]
    2998:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    299c:	subs	x24, x24, #0x8
    29a0:	b.ne	297c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x294>  // b.any
    29a4:	str	wzr, [sp, #568]
    29a8:	b	29b8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2d0>
    29ac:	add	x0, sp, #0x230
    29b0:	add	x1, sp, #0x8
    29b4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    29b8:	ldr	w8, [sp, #40]
    29bc:	cbnz	w8, 2764 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x7c>
    29c0:	ldr	x0, [sp, #32]
    29c4:	add	x8, sp, #0x20
    29c8:	add	x8, x8, #0x10
    29cc:	cmp	x0, x8
    29d0:	b.eq	29d8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2f0>  // b.none
    29d4:	bl	0 <free>
    29d8:	ldr	x0, [sp, #560]
    29dc:	add	x8, sp, #0x230
    29e0:	add	x8, x8, #0x10
    29e4:	cmp	x0, x8
    29e8:	b.eq	29f0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x308>  // b.none
    29ec:	bl	0 <free>
    29f0:	add	sp, sp, #0x340
    29f4:	ldp	x20, x19, [sp, #64]
    29f8:	ldp	x22, x21, [sp, #48]
    29fc:	ldp	x24, x23, [sp, #32]
    2a00:	ldp	x28, x25, [sp, #16]
    2a04:	ldp	x29, x30, [sp], #80
    2a08:	ret
    2a0c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a10:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a14:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a18:	add	x0, x0, #0x0
    2a1c:	add	x1, x1, #0x0
    2a20:	add	x3, x3, #0x0
    2a24:	mov	w2, #0xfa                  	// #250
    2a28:	bl	0 <__assert_fail>
    2a2c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a30:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a34:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a38:	add	x0, x0, #0x0
    2a3c:	add	x1, x1, #0x0
    2a40:	add	x3, x3, #0x0
    2a44:	mov	w2, #0xa7                  	// #167
    2a48:	bl	0 <__assert_fail>
    2a4c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a50:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a54:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a58:	add	x0, x0, #0x0
    2a5c:	add	x1, x1, #0x0
    2a60:	add	x3, x3, #0x0
    2a64:	mov	w2, #0x43                  	// #67
    2a68:	bl	0 <__assert_fail>

0000000000002a6c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataERKNS_8FunctionEPKNS_15LocalAsMetadataE>:
    2a6c:	stp	x29, x30, [sp, #-32]!
    2a70:	stp	x20, x19, [sp, #16]
    2a74:	mov	x29, sp
    2a78:	mov	x19, x2
    2a7c:	mov	x20, x0
    2a80:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    2a84:	add	w1, w0, #0x1
    2a88:	mov	x0, x20
    2a8c:	mov	x2, x19
    2a90:	ldp	x20, x19, [sp, #16]
    2a94:	ldp	x29, x30, [sp], #32
    2a98:	b	2a9c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>

0000000000002a9c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>:
    2a9c:	sub	sp, sp, #0x40
    2aa0:	stp	x29, x30, [sp, #16]
    2aa4:	stp	x22, x21, [sp, #32]
    2aa8:	stp	x20, x19, [sp, #48]
    2aac:	add	x29, sp, #0x10
    2ab0:	cbz	w1, 2b70 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xd4>
    2ab4:	mov	w21, w1
    2ab8:	mov	x19, x0
    2abc:	add	x0, x0, #0x100
    2ac0:	add	x1, sp, #0x8
    2ac4:	mov	x20, x2
    2ac8:	str	x2, [sp, #8]
    2acc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ad0:	ldr	w8, [x0, #12]
    2ad4:	mov	x22, x0
    2ad8:	cbz	w8, 2b08 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x6c>
    2adc:	ldr	w8, [x22, #8]
    2ae0:	cmp	w8, w21
    2ae4:	b.eq	2b5c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xc0>  // b.none
    2ae8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2aec:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2af0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2af4:	add	x0, x0, #0x0
    2af8:	add	x1, x1, #0x0
    2afc:	add	x3, x3, #0x0
    2b00:	mov	w2, #0x2ba                 	// #698
    2b04:	bl	0 <__assert_fail>
    2b08:	str	x20, [sp, #8]
    2b0c:	ldp	x1, x8, [x19, #216]
    2b10:	cmp	x1, x8
    2b14:	b.eq	2b2c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x90>  // b.none
    2b18:	str	x20, [x1]
    2b1c:	ldr	x8, [x19, #216]
    2b20:	add	x8, x8, #0x8
    2b24:	str	x8, [x19, #216]
    2b28:	b	2b3c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xa0>
    2b2c:	add	x0, x19, #0xd0
    2b30:	add	x2, sp, #0x8
    2b34:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2b38:	ldr	x8, [x19, #216]
    2b3c:	str	w21, [x22, #8]
    2b40:	ldr	x9, [x19, #208]
    2b44:	mov	x0, x19
    2b48:	sub	x8, x8, x9
    2b4c:	lsr	x8, x8, #3
    2b50:	str	w8, [x22, #12]
    2b54:	ldr	x1, [x20, #136]
    2b58:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    2b5c:	ldp	x20, x19, [sp, #48]
    2b60:	ldp	x22, x21, [sp, #32]
    2b64:	ldp	x29, x30, [sp, #16]
    2b68:	add	sp, sp, #0x40
    2b6c:	ret
    2b70:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2b74:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2b78:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2b7c:	add	x0, x0, #0x0
    2b80:	add	x1, x1, #0x0
    2b84:	add	x3, x3, #0x0
    2b88:	mov	w2, #0x2b5                 	// #693
    2b8c:	bl	0 <__assert_fail>

0000000000002b90 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE>:
    2b90:	stp	x29, x30, [sp, #-64]!
    2b94:	stp	x28, x23, [sp, #16]
    2b98:	stp	x22, x21, [sp, #32]
    2b9c:	stp	x20, x19, [sp, #48]
    2ba0:	mov	x29, sp
    2ba4:	sub	sp, sp, #0x250
    2ba8:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bac:	ldr	d0, [x8]
    2bb0:	add	x8, sp, #0x40
    2bb4:	add	x21, x8, #0x10
    2bb8:	str	x21, [sp, #64]
    2bbc:	str	d0, [sp, #72]
    2bc0:	ldr	w8, [x1, #8]
    2bc4:	cbz	w8, 2d18 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x188>
    2bc8:	ldr	w8, [x1, #12]
    2bcc:	str	wzr, [x1, #8]
    2bd0:	cbz	w8, 2d18 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x188>
    2bd4:	ldr	x20, [x1]
    2bd8:	mov	x19, x0
    2bdc:	add	x0, sp, #0x20
    2be0:	str	x20, [sp, #32]
    2be4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2be8:	tbz	w0, #0, 2c14 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x84>
    2bec:	add	x0, sp, #0x20
    2bf0:	str	x20, [sp, #32]
    2bf4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bf8:	tbz	w0, #0, 2d60 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1d0>
    2bfc:	str	x20, [sp, #32]
    2c00:	cbz	x20, 2c18 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x88>
    2c04:	add	x0, sp, #0x40
    2c08:	add	x1, sp, #0x20
    2c0c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c10:	b	2c18 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x88>
    2c14:	str	xzr, [sp, #32]
    2c18:	ldr	w8, [sp, #72]
    2c1c:	cbz	w8, 2d18 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x188>
    2c20:	add	x19, x19, #0x100
    2c24:	add	x0, sp, #0x40
    2c28:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c2c:	ldr	w8, [x0, #8]
    2c30:	neg	x9, x8
    2c34:	lsl	x9, x9, #3
    2c38:	cbz	x9, 2d10 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x180>
    2c3c:	mov	x20, x0
    2c40:	neg	x22, x8, lsl #3
    2c44:	ldr	x8, [x20, x22]
    2c48:	cbz	x8, 2d08 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x178>
    2c4c:	mov	x1, sp
    2c50:	add	x2, sp, #0x20
    2c54:	mov	x0, x19
    2c58:	str	x8, [sp]
    2c5c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c60:	ldp	x9, x8, [x19]
    2c64:	ldr	w11, [x19, #24]
    2c68:	ldr	x10, [sp, #32]
    2c6c:	stp	x19, x9, [sp, #32]
    2c70:	add	x8, x8, x11, lsl #4
    2c74:	tbz	w0, #0, 2c80 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xf0>
    2c78:	str	x10, [sp, #48]
    2c7c:	b	2c84 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xf4>
    2c80:	str	x8, [sp, #48]
    2c84:	add	x0, sp, #0x20
    2c88:	mov	x1, sp
    2c8c:	str	x8, [sp, #56]
    2c90:	stp	x19, x9, [sp]
    2c94:	stp	x8, x8, [sp, #16]
    2c98:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c9c:	tbz	w0, #0, 2d08 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x178>
    2ca0:	ldp	x8, x9, [sp, #32]
    2ca4:	ldr	x8, [x8]
    2ca8:	cmp	x8, x9
    2cac:	b.ne	2d40 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1b0>  // b.any
    2cb0:	ldr	x8, [sp, #48]
    2cb4:	ldr	w9, [x8, #8]
    2cb8:	cbz	w9, 2d08 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x178>
    2cbc:	ldr	w9, [x8, #12]
    2cc0:	str	wzr, [x8, #8]
    2cc4:	cbz	w9, 2d08 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x178>
    2cc8:	ldr	x23, [x8]
    2ccc:	mov	x0, sp
    2cd0:	str	x23, [sp]
    2cd4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2cd8:	tbz	w0, #0, 2d04 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x174>
    2cdc:	mov	x0, sp
    2ce0:	str	x23, [sp]
    2ce4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ce8:	tbz	w0, #0, 2d60 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1d0>
    2cec:	str	x23, [sp]
    2cf0:	cbz	x23, 2d08 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x178>
    2cf4:	add	x0, sp, #0x40
    2cf8:	mov	x1, sp
    2cfc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d00:	b	2d08 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x178>
    2d04:	str	xzr, [sp]
    2d08:	adds	x22, x22, #0x8
    2d0c:	b.ne	2c44 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb4>  // b.any
    2d10:	ldr	w8, [sp, #72]
    2d14:	cbnz	w8, 2c24 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x94>
    2d18:	ldr	x0, [sp, #64]
    2d1c:	cmp	x0, x21
    2d20:	b.eq	2d28 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x198>  // b.none
    2d24:	bl	0 <free>
    2d28:	add	sp, sp, #0x250
    2d2c:	ldp	x20, x19, [sp, #48]
    2d30:	ldp	x22, x21, [sp, #32]
    2d34:	ldp	x28, x23, [sp, #16]
    2d38:	ldp	x29, x30, [sp], #64
    2d3c:	ret
    2d40:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d44:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d48:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d4c:	add	x0, x0, #0x0
    2d50:	add	x1, x1, #0x0
    2d54:	add	x3, x3, #0x0
    2d58:	mov	w2, #0x4b3                 	// #1203
    2d5c:	bl	0 <__assert_fail>
    2d60:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d64:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d68:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d6c:	add	x0, x0, #0x0
    2d70:	add	x1, x1, #0x0
    2d74:	add	x3, x3, #0x0
    2d78:	mov	w2, #0x108                 	// #264
    2d7c:	bl	0 <__assert_fail>

0000000000002d80 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>:
    2d80:	sub	sp, sp, #0x70
    2d84:	stp	x29, x30, [sp, #64]
    2d88:	stp	x22, x21, [sp, #80]
    2d8c:	stp	x20, x19, [sp, #96]
    2d90:	add	x29, sp, #0x40
    2d94:	mov	x20, x2
    2d98:	stur	x2, [x29, #-8]
    2d9c:	cbz	x2, 2edc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x15c>
    2da0:	mov	x19, x0
    2da4:	add	x0, sp, #0x10
    2da8:	mov	w22, w1
    2dac:	str	x20, [sp, #16]
    2db0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2db4:	tbnz	w0, #0, 2dc4 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x44>
    2db8:	ldrb	w8, [x20]
    2dbc:	cmp	w8, #0x1
    2dc0:	b.hi	2f14 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x194>  // b.pmore
    2dc4:	mov	w8, w22
    2dc8:	mov	x9, sp
    2dcc:	add	x0, x19, #0x100
    2dd0:	add	x2, x9, #0x8
    2dd4:	stp	x20, x8, [sp]
    2dd8:	add	x8, sp, #0x10
    2ddc:	mov	x1, sp
    2de0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2de4:	ldp	x8, x9, [sp, #16]
    2de8:	ldr	x8, [x8]
    2dec:	cmp	x8, x9
    2df0:	b.ne	2ef4 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x174>  // b.any
    2df4:	ldrb	w8, [sp, #48]
    2df8:	ldr	x21, [sp, #32]
    2dfc:	cbz	w8, 2e3c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0xbc>
    2e00:	mov	x0, sp
    2e04:	str	x20, [sp]
    2e08:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e0c:	tbz	w0, #0, 2e60 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0xe0>
    2e10:	mov	x0, sp
    2e14:	str	x20, [sp]
    2e18:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e1c:	tbnz	w0, #0, 2edc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x15c>
    2e20:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e24:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e28:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e2c:	add	x0, x0, #0x0
    2e30:	add	x1, x1, #0x0
    2e34:	add	x3, x3, #0x0
    2e38:	b	2f88 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x208>
    2e3c:	ldr	w8, [x21, #8]
    2e40:	mov	x20, xzr
    2e44:	cmp	w8, w22
    2e48:	b.eq	2edc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x15c>  // b.none
    2e4c:	cbz	w8, 2edc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x15c>
    2e50:	mov	x0, x19
    2e54:	mov	x1, x21
    2e58:	bl	2b90 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE>
    2e5c:	b	2ed8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x158>
    2e60:	ldp	x1, x8, [x19, #216]
    2e64:	add	x20, x19, #0xd0
    2e68:	cmp	x1, x8
    2e6c:	b.eq	2e88 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x108>  // b.none
    2e70:	ldur	x8, [x29, #-8]
    2e74:	str	x8, [x1]
    2e78:	ldr	x8, [x19, #216]
    2e7c:	add	x8, x8, #0x8
    2e80:	str	x8, [x19, #216]
    2e84:	b	2e98 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x118>
    2e88:	sub	x2, x29, #0x8
    2e8c:	mov	x0, x20
    2e90:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e94:	ldr	x8, [x19, #216]
    2e98:	ldr	x9, [x20]
    2e9c:	sub	x8, x8, x9
    2ea0:	lsr	x8, x8, #3
    2ea4:	str	w8, [x21, #12]
    2ea8:	ldur	x8, [x29, #-8]
    2eac:	cbz	x8, 2f34 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1b4>
    2eb0:	ldrb	w9, [x8]
    2eb4:	cmp	w9, #0x1
    2eb8:	b.ne	2ed8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x158>  // b.any
    2ebc:	ldr	x1, [x8, #136]
    2ec0:	cbz	x1, 2f50 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1d0>
    2ec4:	ldrb	w8, [x1, #16]
    2ec8:	cmp	w8, #0x11
    2ecc:	b.cs	2f70 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1f0>  // b.hs, b.nlast
    2ed0:	mov	x0, x19
    2ed4:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    2ed8:	mov	x20, xzr
    2edc:	mov	x0, x20
    2ee0:	ldp	x20, x19, [sp, #96]
    2ee4:	ldp	x22, x21, [sp, #80]
    2ee8:	ldp	x29, x30, [sp, #64]
    2eec:	add	sp, sp, #0x70
    2ef0:	ret
    2ef4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ef8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2efc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f00:	add	x0, x0, #0x0
    2f04:	add	x1, x1, #0x0
    2f08:	add	x3, x3, #0x0
    2f0c:	mov	w2, #0x4b9                 	// #1209
    2f10:	bl	0 <__assert_fail>
    2f14:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f18:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f1c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f20:	add	x0, x0, #0x0
    2f24:	add	x1, x1, #0x0
    2f28:	add	x3, x3, #0x0
    2f2c:	mov	w2, #0x297                 	// #663
    2f30:	bl	0 <__assert_fail>
    2f34:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f38:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f3c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f40:	add	x0, x0, #0x0
    2f44:	add	x1, x1, #0x0
    2f48:	add	x3, x3, #0x0
    2f4c:	b	2f68 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1e8>
    2f50:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f54:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f58:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f5c:	add	x0, x0, #0x0
    2f60:	add	x1, x1, #0x0
    2f64:	add	x3, x3, #0x0
    2f68:	mov	w2, #0x69                  	// #105
    2f6c:	bl	0 <__assert_fail>
    2f70:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f74:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f78:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f7c:	add	x0, x0, #0x0
    2f80:	add	x1, x1, #0x0
    2f84:	add	x3, x3, #0x0
    2f88:	mov	w2, #0x108                 	// #264
    2f8c:	bl	0 <__assert_fail>

0000000000002f90 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE>:
    2f90:	stp	x29, x30, [sp, #-48]!
    2f94:	str	x21, [sp, #16]
    2f98:	stp	x20, x19, [sp, #32]
    2f9c:	mov	x29, sp
    2fa0:	mov	x20, x0
    2fa4:	ldr	x8, [x0, #216]
    2fa8:	ldr	x9, [x20, #208]!
    2fac:	mov	x19, x0
    2fb0:	add	x21, x0, #0x120
    2fb4:	sub	x8, x8, x9
    2fb8:	lsr	x8, x8, #3
    2fbc:	str	w8, [x0, #540]
    2fc0:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    2fc4:	add	w8, w0, #0x1
    2fc8:	add	x1, x29, #0x1c
    2fcc:	mov	x0, x21
    2fd0:	str	w8, [x29, #28]
    2fd4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fd8:	ldr	x9, [x19, #232]
    2fdc:	str	w1, [x19, #544]
    2fe0:	ldr	x1, [x19, #216]
    2fe4:	lsr	x8, x0, #29
    2fe8:	and	x8, x8, #0x7fffffff8
    2fec:	add	x2, x9, w0, uxtw #3
    2ff0:	add	x3, x9, x8
    2ff4:	mov	x0, x20
    2ff8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ffc:	ldp	x20, x19, [sp, #32]
    3000:	ldr	x21, [sp, #16]
    3004:	ldp	x29, x30, [sp], #48
    3008:	ret

000000000000300c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE>:
    300c:	sub	sp, sp, #0xd0
    3010:	stp	x29, x30, [sp, #112]
    3014:	stp	x28, x27, [sp, #128]
    3018:	stp	x26, x25, [sp, #144]
    301c:	stp	x24, x23, [sp, #160]
    3020:	stp	x22, x21, [sp, #176]
    3024:	stp	x20, x19, [sp, #192]
    3028:	add	x29, sp, #0x70
    302c:	ldp	x9, x8, [x0, #112]
    3030:	mov	x19, x1
    3034:	mov	x20, x0
    3038:	str	wzr, [x0, #504]
    303c:	sub	x8, x8, x9
    3040:	lsr	x8, x8, #4
    3044:	str	w8, [x0, #536]
    3048:	bl	2f90 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE>
    304c:	mov	x0, x19
    3050:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3054:	cmp	x0, x1
    3058:	b.eq	30a0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x94>  // b.none
    305c:	mov	x21, x0
    3060:	mov	x22, x1
    3064:	mov	x0, x20
    3068:	mov	x1, x21
    306c:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    3070:	mov	w1, #0x6                   	// #6
    3074:	mov	x0, x21
    3078:	bl	0 <_ZNK4llvm8Argument12hasAttributeENS_9Attribute8AttrKindE>
    307c:	tbz	w0, #0, 3094 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x88>
    3080:	mov	x0, x21
    3084:	bl	0 <_ZNK4llvm8Argument17getParamByValTypeEv>
    3088:	mov	x1, x0
    308c:	mov	x0, x20
    3090:	bl	1558 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    3094:	add	x21, x21, #0x28
    3098:	cmp	x22, x21
    309c:	b.ne	3064 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x58>  // b.any
    30a0:	ldp	x9, x8, [x20, #112]
    30a4:	add	x23, x19, #0x48
    30a8:	str	x19, [sp]
    30ac:	sub	x8, x8, x9
    30b0:	lsr	x2, x8, #4
    30b4:	str	w2, [x20, #548]
    30b8:	ldr	x24, [x19, #80]
    30bc:	mov	w1, w2
    30c0:	cmp	x23, x24
    30c4:	b.eq	320c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x200>  // b.none
    30c8:	add	x21, x20, #0x200
    30cc:	add	x8, x20, #0x50
    30d0:	mov	w25, #0x18                  	// #24
    30d4:	str	x8, [sp, #8]
    30d8:	ldrb	w8, [x24]
    30dc:	tbnz	w8, #2, 34a0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x494>
    30e0:	sub	x8, x24, #0x18
    30e4:	cmp	x24, #0x0
    30e8:	csel	x26, xzr, x8, eq  // eq = none
    30ec:	ldr	x27, [x26, #48]
    30f0:	add	x28, x26, #0x28
    30f4:	cmp	x28, x27
    30f8:	b.eq	3194 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x188>  // b.none
    30fc:	ldrb	w8, [x27]
    3100:	tbnz	w8, #2, 3480 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x474>
    3104:	sub	x8, x27, #0x18
    3108:	cmp	x27, #0x0
    310c:	csel	x9, xzr, x8, eq  // eq = none
    3110:	ldr	w8, [x9, #20]
    3114:	tbnz	w8, #30, 312c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x120>
    3118:	and	w8, w8, #0xfffffff
    311c:	mneg	x10, x8, x25
    3120:	add	x19, x9, x10
    3124:	cbnz	x8, 3138 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x12c>
    3128:	b	318c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x180>
    312c:	ldur	x19, [x9, #-8]
    3130:	and	x8, x8, #0xfffffff
    3134:	cbz	x8, 318c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x180>
    3138:	add	x8, x8, x8, lsl #1
    313c:	lsl	x22, x8, #3
    3140:	ldr	x1, [x19]
    3144:	cbz	x1, 3408 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3fc>
    3148:	ldrb	w8, [x1, #16]
    314c:	cmp	w8, #0x10
    3150:	b.hi	316c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x160>  // b.pmore
    3154:	add	x0, sp, #0x10
    3158:	str	x1, [sp, #16]
    315c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3160:	ldr	x1, [x19]
    3164:	tbz	w0, #0, 3178 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x16c>
    3168:	cbz	x1, 3464 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x458>
    316c:	ldrb	w8, [x1, #16]
    3170:	cmp	w8, #0x14
    3174:	b.ne	3180 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x174>  // b.any
    3178:	mov	x0, x20
    317c:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    3180:	subs	x22, x22, #0x18
    3184:	add	x19, x19, #0x18
    3188:	b.ne	3140 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x134>  // b.any
    318c:	ldr	x27, [x27, #8]
    3190:	b	30f4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0xe8>
    3194:	str	x26, [sp, #16]
    3198:	ldr	x1, [x20, #520]
    319c:	ldr	x8, [x20, #528]
    31a0:	cmp	x1, x8
    31a4:	b.eq	31bc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b0>  // b.none
    31a8:	str	x26, [x1]
    31ac:	ldr	x8, [x20, #520]
    31b0:	add	x8, x8, #0x8
    31b4:	str	x8, [x20, #520]
    31b8:	b	31cc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1c0>
    31bc:	add	x2, sp, #0x10
    31c0:	mov	x0, x21
    31c4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    31c8:	ldr	x8, [x20, #520]
    31cc:	ldr	x9, [x21]
    31d0:	ldr	x0, [sp, #8]
    31d4:	add	x1, sp, #0x10
    31d8:	str	x26, [sp, #16]
    31dc:	sub	x8, x8, x9
    31e0:	lsr	x19, x8, #3
    31e4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    31e8:	str	w19, [x0, #8]
    31ec:	ldr	x24, [x24, #8]
    31f0:	cmp	x23, x24
    31f4:	b.ne	30d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0xcc>  // b.any
    31f8:	ldp	x9, x8, [x20, #112]
    31fc:	ldr	w1, [x20, #548]
    3200:	ldr	x19, [sp]
    3204:	sub	x8, x8, x9
    3208:	lsr	x2, x8, #4
    320c:	mov	x0, x20
    3210:	bl	18c8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>
    3214:	ldr	x1, [x19, #112]
    3218:	mov	x0, x20
    321c:	bl	141c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
    3220:	ldp	x9, x8, [x20, #112]
    3224:	adrp	x11, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3228:	ldr	d0, [x11]
    322c:	add	x10, sp, #0x10
    3230:	sub	x8, x8, x9
    3234:	add	x24, x10, #0x10
    3238:	lsr	x8, x8, #4
    323c:	str	w8, [x20, #552]
    3240:	str	x24, [sp, #16]
    3244:	str	d0, [sp, #24]
    3248:	ldr	x22, [x19, #80]
    324c:	cmp	x23, x22
    3250:	b.eq	33d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3cc>  // b.none
    3254:	mov	w25, #0x18                  	// #24
    3258:	ldrb	w8, [x22]
    325c:	tbnz	w8, #2, 34a0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x494>
    3260:	sub	x8, x22, #0x18
    3264:	cmp	x22, #0x0
    3268:	csel	x8, xzr, x8, eq  // eq = none
    326c:	ldr	x26, [x8, #48]
    3270:	add	x27, x8, #0x28
    3274:	cmp	x27, x26
    3278:	b.eq	3328 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x31c>  // b.none
    327c:	ldrb	w8, [x26]
    3280:	tbnz	w8, #2, 3480 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x474>
    3284:	sub	x8, x26, #0x18
    3288:	cmp	x26, #0x0
    328c:	csel	x21, xzr, x8, eq  // eq = none
    3290:	ldr	w8, [x21, #20]
    3294:	tbnz	w8, #30, 32ac <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2a0>
    3298:	and	w8, w8, #0xfffffff
    329c:	mneg	x9, x8, x25
    32a0:	add	x19, x21, x9
    32a4:	cbnz	x8, 32b8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2ac>
    32a8:	b	3308 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2fc>
    32ac:	ldur	x19, [x21, #-8]
    32b0:	and	x8, x8, #0xfffffff
    32b4:	cbz	x8, 3308 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2fc>
    32b8:	add	x8, x8, x8, lsl #1
    32bc:	lsl	x28, x8, #3
    32c0:	ldr	x8, [x19]
    32c4:	cbz	x8, 3428 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x41c>
    32c8:	ldrb	w9, [x8, #16]
    32cc:	cmp	w9, #0x13
    32d0:	b.ne	32fc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2f0>  // b.any
    32d4:	ldr	x8, [x8, #24]
    32d8:	cbz	x8, 3444 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x438>
    32dc:	ldrb	w9, [x8]
    32e0:	cmp	w9, #0x2
    32e4:	csel	x8, x8, xzr, eq  // eq = none
    32e8:	stur	x8, [x29, #-8]
    32ec:	cbz	x8, 32fc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2f0>
    32f0:	add	x0, sp, #0x10
    32f4:	sub	x1, x29, #0x8
    32f8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    32fc:	subs	x28, x28, #0x18
    3300:	add	x19, x19, #0x18
    3304:	b.ne	32c0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2b4>  // b.any
    3308:	ldr	x8, [x21]
    330c:	ldrb	w8, [x8, #8]
    3310:	cbz	w8, 3320 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x314>
    3314:	mov	x0, x20
    3318:	mov	x1, x21
    331c:	bl	11a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    3320:	ldr	x26, [x26, #8]
    3324:	b	3274 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x268>
    3328:	ldr	x22, [x22, #8]
    332c:	cmp	x23, x22
    3330:	b.ne	3258 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x24c>  // b.any
    3334:	ldr	w8, [sp, #24]
    3338:	ldr	x25, [sp]
    333c:	cbz	w8, 33d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3cc>
    3340:	mov	x19, xzr
    3344:	add	x21, x20, #0x50
    3348:	sub	x23, x8, #0x1
    334c:	ldr	x8, [sp, #16]
    3350:	sub	x1, x29, #0x8
    3354:	sub	x2, x29, #0x10
    3358:	mov	x0, x21
    335c:	ldr	x8, [x8, x19, lsl #3]
    3360:	ldr	x8, [x8, #136]
    3364:	stur	x8, [x29, #-8]
    3368:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    336c:	tbz	w0, #0, 34bc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4b0>
    3370:	ldr	w8, [sp, #24]
    3374:	cmp	x19, x8
    3378:	b.cs	33b8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3ac>  // b.hs, b.nlast
    337c:	ldr	x8, [sp, #16]
    3380:	mov	x0, x20
    3384:	mov	x1, x25
    3388:	ldr	x22, [x8, x19, lsl #3]
    338c:	bl	1f28 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3390:	add	w1, w0, #0x1
    3394:	mov	x0, x20
    3398:	mov	x2, x22
    339c:	bl	2a9c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>
    33a0:	cmp	x23, x19
    33a4:	b.eq	33d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3cc>  // b.none
    33a8:	ldr	w8, [sp, #24]
    33ac:	add	x19, x19, #0x1
    33b0:	cmp	x19, x8
    33b4:	b.cc	334c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x340>  // b.lo, b.ul, b.last
    33b8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    33bc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    33c0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    33c4:	add	x0, x0, #0x0
    33c8:	add	x1, x1, #0x0
    33cc:	add	x3, x3, #0x0
    33d0:	mov	w2, #0x95                  	// #149
    33d4:	bl	0 <__assert_fail>
    33d8:	ldr	x0, [sp, #16]
    33dc:	cmp	x0, x24
    33e0:	b.eq	33e8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3dc>  // b.none
    33e4:	bl	0 <free>
    33e8:	ldp	x20, x19, [sp, #192]
    33ec:	ldp	x22, x21, [sp, #176]
    33f0:	ldp	x24, x23, [sp, #160]
    33f4:	ldp	x26, x25, [sp, #144]
    33f8:	ldp	x28, x27, [sp, #128]
    33fc:	ldp	x29, x30, [sp, #112]
    3400:	add	sp, sp, #0xd0
    3404:	ret
    3408:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    340c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3410:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3414:	add	x0, x0, #0x0
    3418:	add	x1, x1, #0x0
    341c:	add	x3, x3, #0x0
    3420:	mov	w2, #0x5b                  	// #91
    3424:	bl	0 <__assert_fail>
    3428:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    342c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3430:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3434:	add	x0, x0, #0x0
    3438:	add	x1, x1, #0x0
    343c:	add	x3, x3, #0x0
    3440:	b	345c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x450>
    3444:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3448:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    344c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3450:	add	x0, x0, #0x0
    3454:	add	x1, x1, #0x0
    3458:	add	x3, x3, #0x0
    345c:	mov	w2, #0x69                  	// #105
    3460:	bl	0 <__assert_fail>
    3464:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3468:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    346c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3470:	add	x0, x0, #0x0
    3474:	add	x1, x1, #0x0
    3478:	add	x3, x3, #0x0
    347c:	b	3420 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x414>
    3480:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3484:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3488:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    348c:	add	x0, x0, #0x0
    3490:	add	x1, x1, #0x0
    3494:	add	x3, x3, #0x0
    3498:	mov	w2, #0x8b                  	// #139
    349c:	bl	0 <__assert_fail>
    34a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34ac:	add	x0, x0, #0x0
    34b0:	add	x1, x1, #0x0
    34b4:	add	x3, x3, #0x0
    34b8:	b	3498 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x48c>
    34bc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34c0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34c4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34c8:	add	x0, x0, #0x0
    34cc:	add	x1, x1, #0x0
    34d0:	add	x3, x3, #0x0
    34d4:	mov	w2, #0x3e8                 	// #1000
    34d8:	bl	0 <__assert_fail>

00000000000034dc <_ZN4llvm15ValueEnumerator13purgeFunctionEv>:
    34dc:	sub	sp, sp, #0x50
    34e0:	stp	x29, x30, [sp, #16]
    34e4:	stp	x24, x23, [sp, #32]
    34e8:	stp	x22, x21, [sp, #48]
    34ec:	stp	x20, x19, [sp, #64]
    34f0:	add	x29, sp, #0x10
    34f4:	mov	x20, x0
    34f8:	ldr	x8, [x20, #112]!
    34fc:	mov	x19, x0
    3500:	ldr	x9, [x20, #8]
    3504:	ldr	w23, [x20, #424]
    3508:	sub	x9, x9, x8
    350c:	lsr	x22, x9, #4
    3510:	cmp	w23, w22
    3514:	b.eq	3550 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x74>  // b.none
    3518:	add	x21, x19, #0x50
    351c:	add	x1, x8, x23, lsl #4
    3520:	mov	x0, x21
    3524:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3528:	add	w23, w23, #0x1
    352c:	cmp	w23, w22
    3530:	b.eq	3550 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x74>  // b.none
    3534:	ldr	x8, [x20]
    3538:	mov	x0, x21
    353c:	add	x1, x8, w23, uxtw #4
    3540:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3544:	add	w23, w23, #0x1
    3548:	cmp	w22, w23
    354c:	b.ne	3534 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x58>  // b.any
    3550:	mov	x21, x19
    3554:	ldr	x8, [x21, #208]!
    3558:	ldr	x9, [x21, #8]
    355c:	ldr	w24, [x21, #332]
    3560:	sub	x9, x9, x8
    3564:	lsr	x23, x9, #3
    3568:	cmp	w24, w23
    356c:	b.eq	35a8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xcc>  // b.none
    3570:	add	x22, x19, #0x100
    3574:	add	x1, x8, x24, lsl #3
    3578:	mov	x0, x22
    357c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3580:	add	w24, w24, #0x1
    3584:	cmp	w24, w23
    3588:	b.eq	35a8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xcc>  // b.none
    358c:	ldr	x8, [x21]
    3590:	mov	x0, x22
    3594:	add	x1, x8, w24, uxtw #3
    3598:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    359c:	add	w24, w24, #0x1
    35a0:	cmp	w23, w24
    35a4:	b.ne	358c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xb0>  // b.any
    35a8:	ldr	x9, [x19, #520]
    35ac:	ldr	x8, [x19, #512]
    35b0:	sub	x9, x9, x8
    35b4:	lsr	x10, x9, #3
    35b8:	cbz	w10, 3608 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x12c>
    35bc:	ldr	x8, [x8]
    35c0:	add	x22, x19, #0x50
    35c4:	add	x1, sp, #0x8
    35c8:	mov	x0, x22
    35cc:	ubfx	x23, x9, #3, #32
    35d0:	str	x8, [sp, #8]
    35d4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    35d8:	cmp	x23, #0x1
    35dc:	b.eq	3608 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x12c>  // b.none
    35e0:	mov	w24, #0x1                   	// #1
    35e4:	ldr	x8, [x19, #512]
    35e8:	add	x1, sp, #0x8
    35ec:	mov	x0, x22
    35f0:	ldr	x8, [x8, x24, lsl #3]
    35f4:	str	x8, [sp, #8]
    35f8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    35fc:	add	x24, x24, #0x1
    3600:	cmp	x23, x24
    3604:	b.ne	35e4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x108>  // b.any
    3608:	ldr	w1, [x19, #536]
    360c:	mov	x0, x20
    3610:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3614:	ldr	w1, [x19, #540]
    3618:	mov	x0, x21
    361c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3620:	ldr	x8, [x19, #512]
    3624:	ldr	x9, [x19, #520]
    3628:	cmp	x9, x8
    362c:	b.eq	3634 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x158>  // b.none
    3630:	str	x8, [x19, #520]
    3634:	str	wzr, [x19, #544]
    3638:	ldp	x20, x19, [sp, #64]
    363c:	ldp	x22, x21, [sp, #48]
    3640:	ldp	x24, x23, [sp, #32]
    3644:	ldp	x29, x30, [sp, #16]
    3648:	add	sp, sp, #0x50
    364c:	ret

0000000000003650 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>:
    3650:	sub	sp, sp, #0x50
    3654:	stp	x29, x30, [sp, #16]
    3658:	str	x23, [sp, #32]
    365c:	stp	x22, x21, [sp, #48]
    3660:	stp	x20, x19, [sp, #64]
    3664:	add	x29, sp, #0x10
    3668:	add	x20, x0, #0x1b8
    366c:	mov	x19, x0
    3670:	str	x1, [sp, #8]
    3674:	add	x1, sp, #0x8
    3678:	mov	x0, x20
    367c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3680:	ldr	w8, [x0, #8]
    3684:	cbz	w8, 3690 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x40>
    3688:	sub	w0, w8, #0x1
    368c:	b	36f0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xa0>
    3690:	ldr	x1, [sp, #8]
    3694:	ldr	x8, [x1, #56]
    3698:	ldr	x21, [x8, #80]
    369c:	add	x22, x8, #0x48
    36a0:	cmp	x22, x21
    36a4:	b.eq	36e8 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x98>  // b.none
    36a8:	mov	w23, #0x1                   	// #1
    36ac:	ldrb	w8, [x21]
    36b0:	tbnz	w8, #2, 3708 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xb8>
    36b4:	sub	x8, x21, #0x18
    36b8:	cmp	x21, #0x0
    36bc:	csel	x8, xzr, x8, eq  // eq = none
    36c0:	add	x1, x29, #0x18
    36c4:	mov	x0, x20
    36c8:	str	x8, [x29, #24]
    36cc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    36d0:	str	w23, [x0, #8]
    36d4:	ldr	x21, [x21, #8]
    36d8:	add	w23, w23, #0x1
    36dc:	cmp	x22, x21
    36e0:	b.ne	36ac <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x5c>  // b.any
    36e4:	ldr	x1, [sp, #8]
    36e8:	mov	x0, x19
    36ec:	bl	3650 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>
    36f0:	ldp	x20, x19, [sp, #64]
    36f4:	ldp	x22, x21, [sp, #48]
    36f8:	ldr	x23, [sp, #32]
    36fc:	ldp	x29, x30, [sp, #16]
    3700:	add	sp, sp, #0x50
    3704:	ret
    3708:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    370c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3710:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3714:	add	x0, x0, #0x0
    3718:	add	x1, x1, #0x0
    371c:	add	x3, x3, #0x0
    3720:	mov	w2, #0x8b                  	// #139
    3724:	bl	0 <__assert_fail>

0000000000003728 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>:
    3728:	ldp	x9, x8, [x0, #56]
    372c:	sub	x8, x8, x9
    3730:	lsr	x8, x8, #3
    3734:	clz	w8, w8
    3738:	mov	w9, #0x20                  	// #32
    373c:	sub	w0, w9, w8
    3740:	ret

0000000000003744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>:
    3744:	stp	x29, x30, [sp, #-64]!
    3748:	str	x23, [sp, #16]
    374c:	stp	x22, x21, [sp, #32]
    3750:	stp	x20, x19, [sp, #48]
    3754:	mov	x29, sp
    3758:	mov	x21, x1
    375c:	mov	x22, x0
    3760:	str	x0, [x29, #24]
    3764:	add	x1, x29, #0x18
    3768:	mov	x0, x2
    376c:	mov	x19, x3
    3770:	mov	x20, x2
    3774:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3778:	ldr	w8, [x0, #8]
    377c:	cbz	w8, 3870 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x12c>
    3780:	ldrb	w8, [x0, #12]
    3784:	mov	x23, x0
    3788:	cbnz	w8, 383c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xf8>
    378c:	mov	w8, #0x1                   	// #1
    3790:	mov	x0, x22
    3794:	strb	w8, [x23, #12]
    3798:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    379c:	ldr	x8, [x22, #8]
    37a0:	cbz	x8, 37d4 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x90>
    37a4:	mov	x0, x22
    37a8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    37ac:	ldr	x8, [x22, #8]
    37b0:	cbz	x8, 3890 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x14c>
    37b4:	ldr	x8, [x8, #8]
    37b8:	cbz	x8, 37d4 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x90>
    37bc:	ldr	w2, [x23, #8]
    37c0:	mov	x0, x22
    37c4:	mov	x1, x21
    37c8:	mov	x3, x20
    37cc:	mov	x4, x19
    37d0:	bl	39c8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE>
    37d4:	ldrb	w8, [x22, #16]
    37d8:	cmp	w8, #0x10
    37dc:	b.hi	383c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xf8>  // b.pmore
    37e0:	ldr	w9, [x22, #20]
    37e4:	and	x8, x9, #0xfffffff
    37e8:	cbz	w8, 383c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xf8>
    37ec:	tbnz	w9, #30, 3800 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xbc>
    37f0:	mov	w9, #0x18                  	// #24
    37f4:	mneg	x9, x8, x9
    37f8:	add	x22, x22, x9
    37fc:	b	3804 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xc0>
    3800:	ldur	x22, [x22, #-8]
    3804:	add	x8, x8, x8, lsl #1
    3808:	lsl	x23, x8, #3
    380c:	ldr	x0, [x22]
    3810:	cbz	x0, 3850 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x10c>
    3814:	ldrb	w8, [x0, #16]
    3818:	cmp	w8, #0x10
    381c:	b.hi	3830 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xec>  // b.pmore
    3820:	mov	x1, x21
    3824:	mov	x2, x20
    3828:	mov	x3, x19
    382c:	bl	3744 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
    3830:	subs	x23, x23, #0x18
    3834:	add	x22, x22, #0x18
    3838:	b.ne	380c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xc8>  // b.any
    383c:	ldp	x20, x19, [sp, #48]
    3840:	ldp	x22, x21, [sp, #32]
    3844:	ldr	x23, [sp, #16]
    3848:	ldp	x29, x30, [sp], #64
    384c:	ret
    3850:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3854:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3858:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    385c:	add	x0, x0, #0x0
    3860:	add	x1, x1, #0x0
    3864:	add	x3, x3, #0x0
    3868:	mov	w2, #0x69                  	// #105
    386c:	bl	0 <__assert_fail>
    3870:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3874:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3878:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    387c:	add	x0, x0, #0x0
    3880:	add	x1, x1, #0x0
    3884:	add	x3, x3, #0x0
    3888:	mov	w2, #0xf2                  	// #242
    388c:	bl	0 <__assert_fail>
    3890:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3894:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3898:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    389c:	add	x0, x0, #0x0
    38a0:	add	x1, x1, #0x0
    38a4:	add	x3, x3, #0x0
    38a8:	mov	w2, #0x8d                  	// #141
    38ac:	bl	0 <__assert_fail>

00000000000038b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>:
    38b0:	stp	x29, x30, [sp, #-64]!
    38b4:	str	x23, [sp, #16]
    38b8:	stp	x22, x21, [sp, #32]
    38bc:	stp	x20, x19, [sp, #48]
    38c0:	mov	x29, sp
    38c4:	mov	x20, x0
    38c8:	mov	x19, x1
    38cc:	mov	x0, x1
    38d0:	mov	x1, x20
    38d4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    38d8:	cbnz	w0, 3978 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xc8>
    38dc:	cbz	x20, 39ac <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xfc>
    38e0:	ldrb	w9, [x20, #16]
    38e4:	cmp	w9, #0x10
    38e8:	b.hi	395c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xac>  // b.pmore
    38ec:	ldr	w10, [x20, #20]
    38f0:	and	x8, x10, #0xfffffff
    38f4:	cbz	w8, 395c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xac>
    38f8:	cmp	w9, #0x4
    38fc:	b.cc	395c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xac>  // b.lo, b.ul, b.last
    3900:	tbnz	w10, #30, 3914 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x64>
    3904:	mov	w9, #0x18                  	// #24
    3908:	mneg	x9, x8, x9
    390c:	add	x22, x20, x9
    3910:	b	3918 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x68>
    3914:	ldur	x22, [x20, #-8]
    3918:	add	x8, x8, x8, lsl #1
    391c:	lsl	x23, x8, #3
    3920:	ldr	x21, [x22]
    3924:	cbz	x21, 398c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xdc>
    3928:	ldrb	w8, [x21, #16]
    392c:	cmp	w8, #0x12
    3930:	b.eq	3950 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xa0>  // b.none
    3934:	add	x0, x29, #0x18
    3938:	str	x21, [x29, #24]
    393c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3940:	tbnz	w0, #0, 3950 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xa0>
    3944:	mov	x0, x21
    3948:	mov	x1, x19
    394c:	bl	38b0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
    3950:	subs	x23, x23, #0x18
    3954:	add	x22, x22, #0x18
    3958:	b.ne	3920 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x70>  // b.any
    395c:	str	x20, [x29, #24]
    3960:	ldr	w8, [x19, #16]
    3964:	add	x1, x29, #0x18
    3968:	mov	x0, x19
    396c:	add	w20, w8, #0x1
    3970:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3974:	str	w20, [x0, #8]
    3978:	ldp	x20, x19, [sp, #48]
    397c:	ldp	x22, x21, [sp, #32]
    3980:	ldr	x23, [sp, #16]
    3984:	ldp	x29, x30, [sp], #64
    3988:	ret
    398c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3990:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3994:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3998:	add	x0, x0, #0x0
    399c:	add	x1, x1, #0x0
    39a0:	add	x3, x3, #0x0
    39a4:	mov	w2, #0x69                  	// #105
    39a8:	bl	0 <__assert_fail>
    39ac:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39b0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39b4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39b8:	add	x0, x0, #0x0
    39bc:	add	x1, x1, #0x0
    39c0:	add	x3, x3, #0x0
    39c4:	b	39a4 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xf4>

00000000000039c8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE>:
    39c8:	stp	x29, x30, [sp, #-96]!
    39cc:	str	x28, [sp, #16]
    39d0:	stp	x26, x25, [sp, #32]
    39d4:	stp	x24, x23, [sp, #48]
    39d8:	stp	x22, x21, [sp, #64]
    39dc:	stp	x20, x19, [sp, #80]
    39e0:	mov	x29, sp
    39e4:	sub	sp, sp, #0x480
    39e8:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39ec:	ldr	d0, [x8]
    39f0:	add	x8, sp, #0x10
    39f4:	sub	x23, x29, #0x58
    39f8:	add	x8, x8, #0x10
    39fc:	mov	x19, x4
    3a00:	mov	x20, x3
    3a04:	mov	x21, x0
    3a08:	stur	w2, [x29, #-92]
    3a0c:	stp	x1, x0, [x23]
    3a10:	str	x8, [sp, #16]
    3a14:	str	d0, [sp, #24]
    3a18:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3a1c:	ldr	x21, [x21, #8]
    3a20:	cbz	x21, 3a58 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x90>
    3a24:	mov	x0, x21
    3a28:	bl	0 <_ZNK4llvm3Use7getUserEv>
    3a2c:	mov	x1, x0
    3a30:	mov	x0, x20
    3a34:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3a38:	cbz	w0, 3a1c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    3a3c:	ldr	w8, [sp, #24]
    3a40:	add	x0, sp, #0x10
    3a44:	sub	x1, x29, #0x18
    3a48:	str	x21, [x23, #64]
    3a4c:	stur	w8, [x29, #-16]
    3a50:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3a54:	b	3a1c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    3a58:	ldr	w24, [sp, #24]
    3a5c:	cmp	w24, #0x2
    3a60:	b.cc	3bfc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x234>  // b.lo, b.ul, b.last
    3a64:	ldur	w8, [x29, #-92]
    3a68:	ldr	w9, [x20, #36]
    3a6c:	cmp	w9, w8
    3a70:	b.cs	3a7c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xb4>  // b.hs, b.nlast
    3a74:	mov	w8, wzr
    3a78:	b	3a88 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xc0>
    3a7c:	ldr	w9, [x20, #32]
    3a80:	cmp	w9, w8
    3a84:	cset	w8, cc  // cc = lo, ul, last
    3a88:	ldr	x21, [sp, #16]
    3a8c:	strb	w8, [sp, #12]
    3a90:	clz	x8, x24
    3a94:	mov	w9, #0x7e                  	// #126
    3a98:	add	x22, x21, x24, lsl #4
    3a9c:	sub	x25, x29, #0x5c
    3aa0:	add	x26, sp, #0xc
    3aa4:	sub	x2, x9, x8, lsl #1
    3aa8:	sub	x3, x29, #0x48
    3aac:	mov	x0, x21
    3ab0:	mov	x1, x22
    3ab4:	stp	x20, x25, [x23, #16]
    3ab8:	str	x26, [x23, #32]
    3abc:	bl	3c54 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>
    3ac0:	cmp	w24, #0x11
    3ac4:	b.cc	3b10 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x148>  // b.lo, b.ul, b.last
    3ac8:	add	x22, x21, #0x100
    3acc:	sub	x2, x29, #0x30
    3ad0:	mov	x0, x21
    3ad4:	mov	x1, x22
    3ad8:	stp	x20, x25, [x23, #40]
    3adc:	str	x26, [x23, #56]
    3ae0:	bl	4228 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>
    3ae4:	lsl	x8, x24, #4
    3ae8:	sub	x21, x8, #0x100
    3aec:	sub	x1, x29, #0x18
    3af0:	mov	x0, x22
    3af4:	stp	x20, x25, [x23, #64]
    3af8:	str	x26, [x23, #80]
    3afc:	bl	4310 <_ZSt25__unguarded_linear_insertIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops14_Val_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_>
    3b00:	subs	x21, x21, #0x10
    3b04:	add	x22, x22, #0x10
    3b08:	b.ne	3aec <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x124>  // b.any
    3b0c:	b	3b28 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x160>
    3b10:	sub	x2, x29, #0x18
    3b14:	mov	x0, x21
    3b18:	mov	x1, x22
    3b1c:	stp	x20, x25, [x23, #64]
    3b20:	str	x26, [x23, #80]
    3b24:	bl	4228 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>
    3b28:	ldr	w8, [sp, #24]
    3b2c:	ldr	x9, [sp, #16]
    3b30:	cbz	w8, 3b64 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x19c>
    3b34:	lsl	x10, x8, #4
    3b38:	sub	x10, x10, #0x10
    3b3c:	mov	x11, x9
    3b40:	cbz	x10, 3bfc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x234>
    3b44:	ldr	w13, [x11, #24]
    3b48:	ldr	w14, [x11, #8]
    3b4c:	add	x12, x11, #0x10
    3b50:	sub	x10, x10, #0x10
    3b54:	mov	x11, x12
    3b58:	cmp	w13, w14
    3b5c:	b.cs	3b40 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x178>  // b.hs, b.nlast
    3b60:	b	3b68 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1a0>
    3b64:	mov	x12, x9
    3b68:	add	x9, x9, x8, lsl #4
    3b6c:	cmp	x12, x9
    3b70:	b.eq	3bfc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x234>  // b.none
    3b74:	sub	x1, x29, #0x50
    3b78:	sub	x2, x29, #0x58
    3b7c:	sub	x3, x29, #0x18
    3b80:	mov	x0, x19
    3b84:	str	x8, [x23, #64]
    3b88:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3b8c:	ldr	x8, [x19, #8]
    3b90:	ldr	w11, [sp, #24]
    3b94:	ldp	x8, x9, [x8, #-24]
    3b98:	sub	x9, x9, x8
    3b9c:	cmp	x11, x9, asr #2
    3ba0:	b.ne	3c34 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x26c>  // b.any
    3ba4:	cbz	w11, 3bfc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x234>
    3ba8:	ldr	x10, [sp, #16]
    3bac:	mov	x9, xzr
    3bb0:	sub	x11, x11, #0x1
    3bb4:	add	x10, x10, #0x8
    3bb8:	ldr	w12, [x10]
    3bbc:	cmp	x11, x9
    3bc0:	str	w12, [x8, x9, lsl #2]
    3bc4:	b.eq	3bfc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x234>  // b.none
    3bc8:	ldr	w12, [sp, #24]
    3bcc:	add	x9, x9, #0x1
    3bd0:	add	x10, x10, #0x10
    3bd4:	cmp	x9, x12
    3bd8:	b.cc	3bb8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1f0>  // b.lo, b.ul, b.last
    3bdc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3be0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3be4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3be8:	add	x0, x0, #0x0
    3bec:	add	x1, x1, #0x0
    3bf0:	add	x3, x3, #0x0
    3bf4:	mov	w2, #0x95                  	// #149
    3bf8:	bl	0 <__assert_fail>
    3bfc:	ldr	x0, [sp, #16]
    3c00:	add	x8, sp, #0x10
    3c04:	add	x8, x8, #0x10
    3c08:	cmp	x0, x8
    3c0c:	b.eq	3c14 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x24c>  // b.none
    3c10:	bl	0 <free>
    3c14:	add	sp, sp, #0x480
    3c18:	ldp	x20, x19, [sp, #80]
    3c1c:	ldp	x22, x21, [sp, #64]
    3c20:	ldp	x24, x23, [sp, #48]
    3c24:	ldp	x26, x25, [sp, #32]
    3c28:	ldr	x28, [sp, #16]
    3c2c:	ldp	x29, x30, [sp], #96
    3c30:	ret
    3c34:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3c38:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3c3c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3c40:	add	x0, x0, #0x0
    3c44:	add	x1, x1, #0x0
    3c48:	add	x3, x3, #0x0
    3c4c:	mov	w2, #0xea                  	// #234
    3c50:	bl	0 <__assert_fail>

0000000000003c54 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>:
    3c54:	sub	sp, sp, #0x100
    3c58:	stp	x29, x30, [sp, #160]
    3c5c:	str	x27, [sp, #176]
    3c60:	stp	x26, x25, [sp, #192]
    3c64:	stp	x24, x23, [sp, #208]
    3c68:	stp	x22, x21, [sp, #224]
    3c6c:	stp	x20, x19, [sp, #240]
    3c70:	add	x29, sp, #0xa0
    3c74:	sub	x25, x1, x0
    3c78:	cmp	x25, #0x101
    3c7c:	b.lt	3f34 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2e0>  // b.tstop
    3c80:	mov	x21, x3
    3c84:	mov	x20, x1
    3c88:	mov	x19, x0
    3c8c:	mov	x22, x2
    3c90:	add	x23, x0, #0x10
    3c94:	add	x26, x0, #0x18
    3c98:	cbz	x22, 3e68 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x214>
    3c9c:	ldr	x8, [x21, #16]
    3ca0:	ldr	q0, [x21]
    3ca4:	lsr	x27, x25, #5
    3ca8:	add	x24, x19, x27, lsl #4
    3cac:	str	x8, [sp, #48]
    3cb0:	str	q0, [sp, #32]
    3cb4:	ldr	x8, [x21, #16]
    3cb8:	ldr	q0, [x21]
    3cbc:	sub	x0, x29, #0x20
    3cc0:	mov	x1, x23
    3cc4:	mov	x2, x24
    3cc8:	sub	x22, x22, #0x1
    3ccc:	sub	x25, x20, #0x10
    3cd0:	stur	x8, [x29, #-16]
    3cd4:	stur	q0, [x29, #-32]
    3cd8:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3cdc:	tbz	w0, #0, 3d0c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0xb8>
    3ce0:	sub	x0, x29, #0x20
    3ce4:	mov	x1, x24
    3ce8:	mov	x2, x25
    3cec:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3cf0:	tbz	w0, #0, 3d38 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0xe4>
    3cf4:	ldr	x8, [x24]
    3cf8:	ldr	x9, [x19]
    3cfc:	add	x10, x19, x27, lsl #4
    3d00:	str	x8, [x19]
    3d04:	str	x9, [x24]
    3d08:	b	3da0 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x14c>
    3d0c:	sub	x0, x29, #0x20
    3d10:	mov	x1, x23
    3d14:	mov	x2, x25
    3d18:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3d1c:	tbz	w0, #0, 3d64 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x110>
    3d20:	ldr	x8, [x19, #16]
    3d24:	ldr	x9, [x19]
    3d28:	str	x8, [x19]
    3d2c:	str	x9, [x19, #16]
    3d30:	mov	x8, x26
    3d34:	b	3da4 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x150>
    3d38:	sub	x0, x29, #0x20
    3d3c:	mov	x1, x23
    3d40:	mov	x2, x25
    3d44:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3d48:	ldr	x8, [x19]
    3d4c:	tbnz	w0, #0, 3d7c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x128>
    3d50:	ldr	x9, [x19, #16]
    3d54:	str	x8, [x19, #16]
    3d58:	mov	x8, x26
    3d5c:	str	x9, [x19]
    3d60:	b	3da4 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x150>
    3d64:	sub	x0, x29, #0x20
    3d68:	mov	x1, x24
    3d6c:	mov	x2, x25
    3d70:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3d74:	ldr	x8, [x19]
    3d78:	tbz	w0, #0, 3d90 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x13c>
    3d7c:	ldur	x9, [x20, #-16]
    3d80:	str	x9, [x19]
    3d84:	stur	x8, [x20, #-16]
    3d88:	sub	x8, x20, #0x8
    3d8c:	b	3da4 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x150>
    3d90:	ldr	x9, [x24]
    3d94:	add	x10, x19, x27, lsl #4
    3d98:	str	x9, [x19]
    3d9c:	str	x8, [x24]
    3da0:	add	x8, x10, #0x8
    3da4:	ldr	w9, [x8]
    3da8:	ldr	w10, [x19, #8]
    3dac:	mov	x25, x20
    3db0:	mov	x27, x23
    3db4:	str	w9, [x19, #8]
    3db8:	str	w10, [x8]
    3dbc:	ldr	q0, [sp, #32]
    3dc0:	ldr	x8, [sp, #48]
    3dc4:	stur	q0, [x29, #-64]
    3dc8:	stur	x8, [x29, #-48]
    3dcc:	sub	x24, x27, #0x10
    3dd0:	add	x24, x24, #0x10
    3dd4:	sub	x0, x29, #0x40
    3dd8:	mov	x1, x24
    3ddc:	mov	x2, x19
    3de0:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3de4:	tbnz	w0, #0, 3dd0 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x17c>
    3de8:	add	x27, x24, #0x10
    3dec:	sub	x25, x25, #0x10
    3df0:	sub	x0, x29, #0x40
    3df4:	mov	x1, x19
    3df8:	mov	x2, x25
    3dfc:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3e00:	tbnz	w0, #0, 3dec <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x198>
    3e04:	cmp	x24, x25
    3e08:	b.cs	3e30 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1dc>  // b.hs, b.nlast
    3e0c:	ldr	x8, [x25]
    3e10:	ldr	x9, [x24]
    3e14:	str	x8, [x24]
    3e18:	str	x9, [x25]
    3e1c:	ldr	w8, [x25, #8]
    3e20:	ldr	w9, [x24, #8]
    3e24:	str	w8, [x24, #8]
    3e28:	str	w9, [x25, #8]
    3e2c:	b	3dcc <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x178>
    3e30:	ldr	x8, [x21, #16]
    3e34:	ldr	q0, [x21]
    3e38:	mov	x3, sp
    3e3c:	mov	x0, x24
    3e40:	mov	x1, x20
    3e44:	mov	x2, x22
    3e48:	str	x8, [sp, #16]
    3e4c:	str	q0, [sp]
    3e50:	bl	3c54 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>
    3e54:	sub	x25, x24, x19
    3e58:	cmp	x25, #0x100
    3e5c:	mov	x20, x24
    3e60:	b.gt	3c98 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x44>
    3e64:	b	3f34 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2e0>
    3e68:	ldr	q0, [x21]
    3e6c:	ldr	x8, [x21, #16]
    3e70:	lsr	x22, x25, #4
    3e74:	sub	x9, x22, #0x2
    3e78:	str	q0, [sp, #64]
    3e7c:	str	x8, [sp, #80]
    3e80:	ldr	x8, [x21, #16]
    3e84:	sub	x10, x22, #0x1
    3e88:	cmp	x9, #0x0
    3e8c:	csel	x9, x10, x9, lt  // lt = tstop
    3e90:	ldr	q0, [x21]
    3e94:	asr	x21, x9, #1
    3e98:	stur	x8, [x29, #-48]
    3e9c:	add	x8, x19, x21, lsl #4
    3ea0:	add	x23, x8, #0x8
    3ea4:	stur	q0, [x29, #-64]
    3ea8:	ldp	x3, x4, [x23, #-8]
    3eac:	ldur	q0, [x29, #-64]
    3eb0:	ldur	x8, [x29, #-48]
    3eb4:	sub	x5, x29, #0x20
    3eb8:	mov	x0, x19
    3ebc:	mov	x1, x21
    3ec0:	mov	x2, x22
    3ec4:	stur	q0, [x29, #-32]
    3ec8:	stur	x8, [x29, #-16]
    3ecc:	bl	3f54 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>
    3ed0:	sub	x21, x21, #0x1
    3ed4:	cmn	x21, #0x1
    3ed8:	sub	x23, x23, #0x10
    3edc:	b.ne	3ea8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x254>  // b.any
    3ee0:	cmp	x25, #0x11
    3ee4:	b.lt	3f34 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2e0>  // b.tstop
    3ee8:	sub	x20, x20, #0x10
    3eec:	ldr	x8, [x19]
    3ef0:	ldp	x3, x4, [x20]
    3ef4:	sub	x21, x20, x19
    3ef8:	asr	x2, x21, #4
    3efc:	str	x8, [x20]
    3f00:	ldr	w8, [x19, #8]
    3f04:	sub	x5, x29, #0x20
    3f08:	mov	x0, x19
    3f0c:	mov	x1, xzr
    3f10:	str	w8, [x20, #8]
    3f14:	ldr	q0, [sp, #64]
    3f18:	ldr	x8, [sp, #80]
    3f1c:	stur	q0, [x29, #-32]
    3f20:	stur	x8, [x29, #-16]
    3f24:	bl	3f54 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>
    3f28:	cmp	x21, #0x10
    3f2c:	sub	x20, x20, #0x10
    3f30:	b.gt	3eec <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x298>
    3f34:	ldp	x20, x19, [sp, #240]
    3f38:	ldp	x22, x21, [sp, #224]
    3f3c:	ldp	x24, x23, [sp, #208]
    3f40:	ldp	x26, x25, [sp, #192]
    3f44:	ldr	x27, [sp, #176]
    3f48:	ldp	x29, x30, [sp, #160]
    3f4c:	add	sp, sp, #0x100
    3f50:	ret

0000000000003f54 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>:
    3f54:	sub	sp, sp, #0xa0
    3f58:	stp	x29, x30, [sp, #64]
    3f5c:	stp	x28, x27, [sp, #80]
    3f60:	stp	x26, x25, [sp, #96]
    3f64:	stp	x24, x23, [sp, #112]
    3f68:	stp	x22, x21, [sp, #128]
    3f6c:	stp	x20, x19, [sp, #144]
    3f70:	add	x29, sp, #0x40
    3f74:	sub	x26, x2, #0x1
    3f78:	cmp	x26, #0x0
    3f7c:	csel	x8, x2, x26, lt  // lt = tstop
    3f80:	asr	x27, x8, #1
    3f84:	mov	x23, x5
    3f88:	mov	x20, x4
    3f8c:	mov	x24, x2
    3f90:	mov	x22, x1
    3f94:	mov	x21, x0
    3f98:	cmp	x27, x1
    3f9c:	mov	x25, x1
    3fa0:	str	x3, [sp, #8]
    3fa4:	b.le	3ff8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xa4>
    3fa8:	mov	x28, x22
    3fac:	lsl	x8, x28, #1
    3fb0:	mov	w25, #0x1                   	// #1
    3fb4:	add	x19, x8, #0x2
    3fb8:	bfi	x25, x28, #1, #63
    3fbc:	add	x1, x21, x19, lsl #4
    3fc0:	add	x2, x21, x25, lsl #4
    3fc4:	mov	x0, x23
    3fc8:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    3fcc:	tst	w0, #0x1
    3fd0:	csel	x25, x25, x19, ne  // ne = any
    3fd4:	add	x8, x21, x25, lsl #4
    3fd8:	ldr	x9, [x8]
    3fdc:	add	x10, x21, x28, lsl #4
    3fe0:	cmp	x25, x27
    3fe4:	mov	x28, x25
    3fe8:	str	x9, [x10]
    3fec:	ldr	w8, [x8, #8]
    3ff0:	str	w8, [x10, #8]
    3ff4:	b.lt	3fac <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x58>  // b.tstop
    3ff8:	tbnz	w24, #0, 403c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xe8>
    3ffc:	sub	x8, x24, #0x2
    4000:	ldr	x19, [sp, #8]
    4004:	cmp	x8, #0x0
    4008:	csel	x8, x26, x8, lt  // lt = tstop
    400c:	cmp	x25, x8, asr #1
    4010:	b.ne	4040 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xec>  // b.any
    4014:	mov	w8, #0x1                   	// #1
    4018:	bfi	x8, x25, #1, #63
    401c:	add	x9, x21, x8, lsl #4
    4020:	ldr	x10, [x9]
    4024:	add	x11, x21, x25, lsl #4
    4028:	mov	x25, x8
    402c:	str	x10, [x11]
    4030:	ldr	w9, [x9, #8]
    4034:	str	w9, [x11, #8]
    4038:	b	4040 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xec>
    403c:	ldr	x19, [sp, #8]
    4040:	ldr	x8, [x23, #16]
    4044:	ldr	q0, [x23]
    4048:	cmp	x25, x22
    404c:	stp	x19, x20, [x29, #-16]
    4050:	str	x8, [sp, #32]
    4054:	str	q0, [sp, #16]
    4058:	b.le	40a8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x154>
    405c:	sub	x8, x25, #0x1
    4060:	cmp	x8, #0x0
    4064:	csel	x8, x25, x8, lt  // lt = tstop
    4068:	asr	x24, x8, #1
    406c:	add	x23, x21, x24, lsl #4
    4070:	add	x0, sp, #0x10
    4074:	sub	x2, x29, #0x10
    4078:	mov	x1, x23
    407c:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    4080:	tbz	w0, #0, 40a8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x154>
    4084:	ldr	x8, [x23]
    4088:	add	x9, x21, x25, lsl #4
    408c:	cmp	x24, x22
    4090:	mov	x25, x24
    4094:	str	x8, [x9]
    4098:	ldr	w8, [x23, #8]
    409c:	str	w8, [x9, #8]
    40a0:	b.gt	405c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x108>
    40a4:	b	40ac <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x158>
    40a8:	mov	x24, x25
    40ac:	add	x8, x21, x24, lsl #4
    40b0:	str	x19, [x8]
    40b4:	str	w20, [x8, #8]
    40b8:	ldp	x20, x19, [sp, #144]
    40bc:	ldp	x22, x21, [sp, #128]
    40c0:	ldp	x24, x23, [sp, #112]
    40c4:	ldp	x26, x25, [sp, #96]
    40c8:	ldp	x28, x27, [sp, #80]
    40cc:	ldp	x29, x30, [sp, #64]
    40d0:	add	sp, sp, #0xa0
    40d4:	ret

00000000000040d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>:
    40d8:	stp	x29, x30, [sp, #-64]!
    40dc:	str	x23, [sp, #16]
    40e0:	stp	x22, x21, [sp, #32]
    40e4:	stp	x20, x19, [sp, #48]
    40e8:	mov	x29, sp
    40ec:	ldr	x21, [x1]
    40f0:	ldr	x19, [x2]
    40f4:	cmp	x21, x19
    40f8:	b.eq	41c0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe8>  // b.none
    40fc:	ldr	x22, [x0]
    4100:	mov	x20, x0
    4104:	mov	x0, x21
    4108:	bl	0 <_ZNK4llvm3Use7getUserEv>
    410c:	mov	x1, x0
    4110:	mov	x0, x22
    4114:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4118:	ldr	x23, [x20]
    411c:	mov	x22, x0
    4120:	mov	x0, x19
    4124:	bl	0 <_ZNK4llvm3Use7getUserEv>
    4128:	mov	x1, x0
    412c:	mov	x0, x23
    4130:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4134:	ldr	x9, [x20]
    4138:	ldr	w8, [x9, #36]
    413c:	cmp	w8, w22
    4140:	b.cc	416c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x94>  // b.lo, b.ul, b.last
    4144:	ldr	w9, [x9, #32]
    4148:	cmp	w9, w22
    414c:	b.cs	416c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x94>  // b.hs, b.nlast
    4150:	cmp	w8, w0
    4154:	b.cc	416c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x94>  // b.lo, b.ul, b.last
    4158:	cmp	w9, w0
    415c:	b.cs	416c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x94>  // b.hs, b.nlast
    4160:	cmp	w22, w0
    4164:	cset	w0, cc  // cc = lo, ul, last
    4168:	b	41c4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xec>
    416c:	cmp	w22, w0
    4170:	b.cs	4194 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xbc>  // b.hs, b.nlast
    4174:	ldr	x8, [x20, #8]
    4178:	ldr	w8, [x8]
    417c:	cmp	w8, w0
    4180:	b.cc	41c0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe8>  // b.lo, b.ul, b.last
    4184:	ldr	x8, [x20, #16]
    4188:	ldrb	w8, [x8]
    418c:	cbnz	w8, 41c0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe8>
    4190:	b	41b8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe0>
    4194:	ldr	x8, [x20, #8]
    4198:	cmp	w0, w22
    419c:	ldr	w8, [x8]
    41a0:	b.cs	41d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x100>  // b.hs, b.nlast
    41a4:	cmp	w8, w22
    41a8:	b.cc	41b8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe0>  // b.lo, b.ul, b.last
    41ac:	ldr	x8, [x20, #16]
    41b0:	ldrb	w8, [x8]
    41b4:	cbz	w8, 41c0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe8>
    41b8:	mov	w0, #0x1                   	// #1
    41bc:	b	41c4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xec>
    41c0:	mov	w0, wzr
    41c4:	ldp	x20, x19, [sp, #48]
    41c8:	ldp	x22, x21, [sp, #32]
    41cc:	ldr	x23, [sp, #16]
    41d0:	ldp	x29, x30, [sp], #64
    41d4:	ret
    41d8:	cmp	w8, w22
    41dc:	b.cc	41ec <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x114>  // b.lo, b.ul, b.last
    41e0:	ldr	x8, [x20, #16]
    41e4:	ldrb	w8, [x8]
    41e8:	cbz	w8, 420c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x134>
    41ec:	mov	x0, x21
    41f0:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    41f4:	mov	w20, w0
    41f8:	mov	x0, x19
    41fc:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    4200:	cmp	w20, w0
    4204:	cset	w0, hi  // hi = pmore
    4208:	b	41c4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xec>
    420c:	mov	x0, x21
    4210:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    4214:	mov	w20, w0
    4218:	mov	x0, x19
    421c:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    4220:	cmp	w20, w0
    4224:	b	4164 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x8c>

0000000000004228 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>:
    4228:	sub	sp, sp, #0x60
    422c:	stp	x29, x30, [sp, #32]
    4230:	str	x23, [sp, #48]
    4234:	stp	x22, x21, [sp, #64]
    4238:	stp	x20, x19, [sp, #80]
    423c:	add	x29, sp, #0x20
    4240:	cmp	x0, x1
    4244:	b.eq	42f8 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xd0>  // b.none
    4248:	add	x8, x0, #0x10
    424c:	mov	x19, x1
    4250:	mov	x20, x0
    4254:	cmp	x8, x1
    4258:	b.eq	42f8 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xd0>  // b.none
    425c:	mov	x21, x2
    4260:	mov	x23, x20
    4264:	mov	x0, x21
    4268:	mov	x1, x8
    426c:	mov	x2, x20
    4270:	mov	x22, x8
    4274:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    4278:	tbz	w0, #0, 42cc <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xa4>
    427c:	ldr	x8, [x22]
    4280:	ldr	w9, [x23, #24]
    4284:	sub	x10, x22, x20
    4288:	cmp	x10, #0x1
    428c:	b.lt	42c0 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x98>  // b.tstop
    4290:	lsr	x10, x10, #4
    4294:	add	x10, x10, #0x1
    4298:	mov	x12, x22
    429c:	mov	x11, x22
    42a0:	ldr	x13, [x11, #-16]!
    42a4:	ldur	w14, [x12, #-8]
    42a8:	sub	x10, x10, #0x1
    42ac:	cmp	x10, #0x1
    42b0:	str	x13, [x12]
    42b4:	str	w14, [x12, #8]
    42b8:	mov	x12, x11
    42bc:	b.gt	42a0 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x78>
    42c0:	str	x8, [x20]
    42c4:	str	w9, [x20, #8]
    42c8:	b	42e8 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xc0>
    42cc:	ldr	x8, [x21, #16]
    42d0:	ldr	q0, [x21]
    42d4:	mov	x1, sp
    42d8:	mov	x0, x22
    42dc:	str	x8, [sp, #16]
    42e0:	str	q0, [sp]
    42e4:	bl	4310 <_ZSt25__unguarded_linear_insertIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops14_Val_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_>
    42e8:	add	x8, x22, #0x10
    42ec:	cmp	x8, x19
    42f0:	mov	x23, x22
    42f4:	b.ne	4264 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x3c>  // b.any
    42f8:	ldp	x20, x19, [sp, #80]
    42fc:	ldp	x22, x21, [sp, #64]
    4300:	ldr	x23, [sp, #48]
    4304:	ldp	x29, x30, [sp, #32]
    4308:	add	sp, sp, #0x60
    430c:	ret

0000000000004310 <_ZSt25__unguarded_linear_insertIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops14_Val_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_>:
    4310:	sub	sp, sp, #0x40
    4314:	stp	x29, x30, [sp, #16]
    4318:	str	x21, [sp, #32]
    431c:	stp	x20, x19, [sp, #48]
    4320:	add	x29, sp, #0x10
    4324:	ldr	q0, [x0]
    4328:	mov	x19, x1
    432c:	mov	x20, x0
    4330:	sub	x2, x0, #0x10
    4334:	mov	x1, sp
    4338:	mov	x0, x19
    433c:	str	q0, [sp]
    4340:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    4344:	tbz	w0, #0, 4378 <_ZSt25__unguarded_linear_insertIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops14_Val_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_+0x68>
    4348:	mov	x21, x20
    434c:	ldr	x8, [x21, #-16]!
    4350:	ldur	w9, [x20, #-8]
    4354:	sub	x2, x20, #0x20
    4358:	mov	x1, sp
    435c:	mov	x0, x19
    4360:	str	x8, [x20]
    4364:	str	w9, [x20, #8]
    4368:	bl	40d8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    436c:	mov	x20, x21
    4370:	tbnz	w0, #0, 434c <_ZSt25__unguarded_linear_insertIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops14_Val_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_+0x3c>
    4374:	b	437c <_ZSt25__unguarded_linear_insertIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops14_Val_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_+0x6c>
    4378:	mov	x21, x20
    437c:	ldr	x8, [sp]
    4380:	str	x8, [x21]
    4384:	ldr	w8, [sp, #8]
    4388:	str	w8, [x21, #8]
    438c:	ldp	x20, x19, [sp, #48]
    4390:	ldr	x21, [sp, #32]
    4394:	ldp	x29, x30, [sp, #16]
    4398:	add	sp, sp, #0x40
    439c:	ret

00000000000043a0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>:
    43a0:	stp	x29, x30, [sp, #-64]!
    43a4:	str	x23, [sp, #16]
    43a8:	stp	x22, x21, [sp, #32]
    43ac:	stp	x20, x19, [sp, #48]
    43b0:	mov	x29, sp
    43b4:	sub	x8, x1, x0
    43b8:	mov	x20, x1
    43bc:	mov	x21, x0
    43c0:	cmp	x8, #0xef
    43c4:	mov	x19, x2
    43c8:	b.gt	43ec <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x4c>
    43cc:	mov	x0, x21
    43d0:	mov	x1, x20
    43d4:	mov	x2, x19
    43d8:	ldp	x20, x19, [sp, #48]
    43dc:	ldp	x22, x21, [sp, #32]
    43e0:	ldr	x23, [sp, #16]
    43e4:	ldp	x29, x30, [sp], #64
    43e8:	b	4518 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    43ec:	lsr	x22, x8, #5
    43f0:	add	x23, x21, x22, lsl #4
    43f4:	mov	x0, x21
    43f8:	mov	x1, x23
    43fc:	mov	x2, x19
    4400:	bl	43a0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    4404:	mov	x0, x23
    4408:	mov	x1, x20
    440c:	mov	x2, x19
    4410:	bl	43a0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    4414:	sub	x8, x20, x23
    4418:	mov	x0, x21
    441c:	mov	x1, x23
    4420:	mov	x2, x20
    4424:	mov	x3, x22
    4428:	mov	x5, x19
    442c:	ldp	x20, x19, [sp, #48]
    4430:	ldp	x22, x21, [sp, #32]
    4434:	ldr	x23, [sp, #16]
    4438:	asr	x4, x8, #4
    443c:	ldp	x29, x30, [sp], #64
    4440:	b	4694 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>

0000000000004444 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>:
    4444:	stp	x29, x30, [sp, #-64]!
    4448:	stp	x24, x23, [sp, #16]
    444c:	stp	x22, x21, [sp, #32]
    4450:	stp	x20, x19, [sp, #48]
    4454:	mov	x29, sp
    4458:	sub	x8, x1, x0
    445c:	asr	x8, x8, #4
    4460:	add	x9, x8, #0x1
    4464:	add	x10, x8, #0x2
    4468:	cmp	x9, #0x0
    446c:	csinc	x8, x10, x8, lt  // lt = tstop
    4470:	asr	x8, x8, #1
    4474:	add	x24, x0, x8, lsl #4
    4478:	mov	x19, x4
    447c:	mov	x20, x3
    4480:	mov	x21, x2
    4484:	mov	x22, x1
    4488:	mov	x23, x0
    448c:	cmp	x8, x3
    4490:	mov	x1, x24
    4494:	b.le	44c0 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_+0x7c>
    4498:	mov	x3, x20
    449c:	mov	x4, x19
    44a0:	bl	4444 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    44a4:	mov	x0, x24
    44a8:	mov	x1, x22
    44ac:	mov	x2, x21
    44b0:	mov	x3, x20
    44b4:	mov	x4, x19
    44b8:	bl	4444 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    44bc:	b	44dc <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_+0x98>
    44c0:	mov	x3, x19
    44c4:	bl	49b0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>
    44c8:	mov	x0, x24
    44cc:	mov	x1, x22
    44d0:	mov	x2, x21
    44d4:	mov	x3, x19
    44d8:	bl	49b0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>
    44dc:	sub	x8, x24, x23
    44e0:	sub	x9, x22, x24
    44e4:	mov	x0, x23
    44e8:	mov	x1, x24
    44ec:	mov	x2, x22
    44f0:	mov	x5, x21
    44f4:	mov	x6, x20
    44f8:	mov	x7, x19
    44fc:	ldp	x20, x19, [sp, #48]
    4500:	ldp	x22, x21, [sp, #32]
    4504:	ldp	x24, x23, [sp, #16]
    4508:	asr	x3, x8, #4
    450c:	asr	x4, x9, #4
    4510:	ldp	x29, x30, [sp], #64
    4514:	b	4b78 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>

0000000000004518 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>:
    4518:	stp	x29, x30, [sp, #-96]!
    451c:	stp	x28, x27, [sp, #16]
    4520:	stp	x26, x25, [sp, #32]
    4524:	stp	x24, x23, [sp, #48]
    4528:	stp	x22, x21, [sp, #64]
    452c:	stp	x20, x19, [sp, #80]
    4530:	mov	x29, sp
    4534:	cmp	x0, x1
    4538:	b.eq	4678 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x160>  // b.none
    453c:	add	x23, x0, #0x10
    4540:	mov	x19, x1
    4544:	mov	x20, x0
    4548:	cmp	x23, x1
    454c:	b.eq	4678 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x160>  // b.none
    4550:	mov	x21, x2
    4554:	mov	x24, x20
    4558:	ldr	x25, [x23]
    455c:	ldr	x8, [x20]
    4560:	ldr	x1, [x25]
    4564:	ldr	x8, [x8]
    4568:	cmp	x1, x8
    456c:	b.eq	45e4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xcc>  // b.none
    4570:	mov	x0, x21
    4574:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4578:	ldr	x8, [x20]
    457c:	mov	w22, w0
    4580:	mov	x0, x21
    4584:	ldr	x1, [x8]
    4588:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    458c:	ldr	x25, [x23]
    4590:	ldr	w26, [x24, #24]
    4594:	cmp	w22, w0
    4598:	b.cs	45f4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xdc>  // b.hs, b.nlast
    459c:	sub	x8, x23, x20
    45a0:	cmp	x8, #0x1
    45a4:	b.lt	45d8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xc0>  // b.tstop
    45a8:	lsr	x8, x8, #4
    45ac:	add	x8, x8, #0x1
    45b0:	mov	x10, x23
    45b4:	mov	x9, x23
    45b8:	ldr	x11, [x9, #-16]!
    45bc:	ldur	w12, [x10, #-8]
    45c0:	sub	x8, x8, #0x1
    45c4:	cmp	x8, #0x1
    45c8:	str	x11, [x10]
    45cc:	str	w12, [x10, #8]
    45d0:	mov	x10, x9
    45d4:	b.gt	45b8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xa0>
    45d8:	str	x25, [x20]
    45dc:	str	w26, [x20, #8]
    45e0:	b	4668 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x150>
    45e4:	ldr	w26, [x24, #24]
    45e8:	ldr	w8, [x20, #8]
    45ec:	cmp	w26, w8
    45f0:	b.hi	459c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x84>  // b.pmore
    45f4:	mov	x27, x24
    45f8:	mov	x28, x23
    45fc:	ldr	x8, [x27]
    4600:	ldr	x1, [x25]
    4604:	ldr	x9, [x8]
    4608:	cmp	x1, x9
    460c:	b.eq	4640 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x128>  // b.none
    4610:	mov	x0, x21
    4614:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4618:	ldr	x8, [x27]
    461c:	mov	w22, w0
    4620:	mov	x0, x21
    4624:	ldr	x1, [x8]
    4628:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    462c:	cmp	w22, w0
    4630:	b.cs	4660 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x148>  // b.hs, b.nlast
    4634:	ldr	x8, [x27]
    4638:	ldr	w9, [x27, #8]
    463c:	b	464c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x134>
    4640:	ldr	w9, [x27, #8]
    4644:	cmp	w26, w9
    4648:	b.ls	4660 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x148>  // b.plast
    464c:	str	x8, [x28]
    4650:	str	w9, [x28, #8]
    4654:	mov	x28, x27
    4658:	sub	x27, x27, #0x10
    465c:	b	45fc <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xe4>
    4660:	str	x25, [x28]
    4664:	str	w26, [x28, #8]
    4668:	add	x23, x23, #0x10
    466c:	cmp	x23, x19
    4670:	add	x24, x24, #0x10
    4674:	b.ne	4558 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x40>  // b.any
    4678:	ldp	x20, x19, [sp, #80]
    467c:	ldp	x22, x21, [sp, #64]
    4680:	ldp	x24, x23, [sp, #48]
    4684:	ldp	x26, x25, [sp, #32]
    4688:	ldp	x28, x27, [sp, #16]
    468c:	ldp	x29, x30, [sp], #96
    4690:	ret

0000000000004694 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>:
    4694:	sub	sp, sp, #0x70
    4698:	stp	x29, x30, [sp, #16]
    469c:	stp	x28, x27, [sp, #32]
    46a0:	stp	x26, x25, [sp, #48]
    46a4:	stp	x24, x23, [sp, #64]
    46a8:	stp	x22, x21, [sp, #80]
    46ac:	stp	x20, x19, [sp, #96]
    46b0:	add	x29, sp, #0x10
    46b4:	str	x2, [sp, #8]
    46b8:	cbz	x3, 4808 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x174>
    46bc:	mov	x22, x4
    46c0:	cbz	x4, 4808 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x174>
    46c4:	mov	x21, x5
    46c8:	mov	x23, x3
    46cc:	mov	x20, x1
    46d0:	mov	x24, x0
    46d4:	add	x8, x22, x23
    46d8:	cmp	x8, #0x2
    46dc:	b.eq	4798 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x104>  // b.none
    46e0:	cmp	x23, x22
    46e4:	b.le	471c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x88>
    46e8:	cmp	x23, #0x0
    46ec:	cinc	x8, x23, lt  // lt = tstop
    46f0:	ldr	x1, [sp, #8]
    46f4:	asr	x27, x8, #1
    46f8:	add	x28, x24, x27, lsl #4
    46fc:	mov	x0, x20
    4700:	mov	x2, x28
    4704:	mov	x3, x21
    4708:	bl	4828 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    470c:	sub	x8, x0, x20
    4710:	mov	x25, x0
    4714:	asr	x26, x8, #4
    4718:	b	474c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0xb8>
    471c:	cmp	x22, #0x0
    4720:	cinc	x8, x22, lt  // lt = tstop
    4724:	asr	x26, x8, #1
    4728:	add	x25, x20, x26, lsl #4
    472c:	mov	x0, x24
    4730:	mov	x1, x20
    4734:	mov	x2, x25
    4738:	mov	x3, x21
    473c:	bl	48ec <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    4740:	sub	x8, x0, x24
    4744:	mov	x28, x0
    4748:	asr	x27, x8, #4
    474c:	mov	x0, x28
    4750:	mov	x1, x20
    4754:	mov	x2, x25
    4758:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    475c:	mov	x19, x0
    4760:	mov	x0, x24
    4764:	mov	x1, x28
    4768:	mov	x2, x19
    476c:	mov	x3, x27
    4770:	mov	x4, x26
    4774:	mov	x5, x21
    4778:	bl	4694 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>
    477c:	sub	x23, x23, x27
    4780:	cbz	x23, 4808 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x174>
    4784:	sub	x22, x22, x26
    4788:	mov	x20, x25
    478c:	mov	x24, x19
    4790:	cbnz	x22, 46d4 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x40>
    4794:	b	4808 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x174>
    4798:	ldr	x8, [x20]
    479c:	ldr	x9, [x24]
    47a0:	ldr	x1, [x8]
    47a4:	ldr	x8, [x9]
    47a8:	cmp	x1, x8
    47ac:	b.eq	47e0 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x14c>  // b.none
    47b0:	mov	x0, x21
    47b4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    47b8:	ldr	x8, [x24]
    47bc:	mov	w19, w0
    47c0:	mov	x0, x21
    47c4:	ldr	x1, [x8]
    47c8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    47cc:	cmp	w19, w0
    47d0:	b.cs	4808 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x174>  // b.hs, b.nlast
    47d4:	ldr	w8, [x24, #8]
    47d8:	ldr	w9, [x20, #8]
    47dc:	b	47f0 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x15c>
    47e0:	ldr	w9, [x20, #8]
    47e4:	ldr	w8, [x24, #8]
    47e8:	cmp	w9, w8
    47ec:	b.ls	4808 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x174>  // b.plast
    47f0:	ldr	x10, [x20]
    47f4:	ldr	x11, [x24]
    47f8:	str	x10, [x24]
    47fc:	str	x11, [x20]
    4800:	str	w9, [x24, #8]
    4804:	str	w8, [x20, #8]
    4808:	ldp	x20, x19, [sp, #96]
    480c:	ldp	x22, x21, [sp, #80]
    4810:	ldp	x24, x23, [sp, #64]
    4814:	ldp	x26, x25, [sp, #48]
    4818:	ldp	x28, x27, [sp, #32]
    481c:	ldp	x29, x30, [sp, #16]
    4820:	add	sp, sp, #0x70
    4824:	ret

0000000000004828 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>:
    4828:	stp	x29, x30, [sp, #-80]!
    482c:	str	x25, [sp, #16]
    4830:	stp	x24, x23, [sp, #32]
    4834:	stp	x22, x21, [sp, #48]
    4838:	stp	x20, x19, [sp, #64]
    483c:	mov	x29, sp
    4840:	sub	x8, x1, x0
    4844:	mov	x19, x0
    4848:	cmp	x8, #0x1
    484c:	b.lt	48d0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xa8>  // b.tstop
    4850:	mov	x20, x3
    4854:	mov	x21, x2
    4858:	lsr	x23, x8, #4
    485c:	lsr	x24, x23, #1
    4860:	add	x25, x19, x24, lsl #4
    4864:	ldr	x8, [x25]
    4868:	ldr	x9, [x21]
    486c:	ldr	x1, [x8]
    4870:	ldr	x8, [x9]
    4874:	cmp	x1, x8
    4878:	b.eq	48bc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x94>  // b.none
    487c:	mov	x0, x20
    4880:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4884:	ldr	x8, [x21]
    4888:	mov	w22, w0
    488c:	mov	x0, x20
    4890:	ldr	x1, [x8]
    4894:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4898:	cmp	w22, w0
    489c:	b.cs	48ac <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x84>  // b.hs, b.nlast
    48a0:	mvn	x8, x24
    48a4:	add	x19, x25, #0x10
    48a8:	add	x24, x23, x8
    48ac:	cmp	x24, #0x0
    48b0:	mov	x23, x24
    48b4:	b.gt	485c <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x34>
    48b8:	b	48d0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xa8>
    48bc:	ldr	w8, [x25, #8]
    48c0:	ldr	w9, [x21, #8]
    48c4:	cmp	w8, w9
    48c8:	b.hi	48a0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x78>  // b.pmore
    48cc:	b	48ac <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x84>
    48d0:	mov	x0, x19
    48d4:	ldp	x20, x19, [sp, #64]
    48d8:	ldp	x22, x21, [sp, #48]
    48dc:	ldp	x24, x23, [sp, #32]
    48e0:	ldr	x25, [sp, #16]
    48e4:	ldp	x29, x30, [sp], #80
    48e8:	ret

00000000000048ec <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>:
    48ec:	stp	x29, x30, [sp, #-80]!
    48f0:	str	x25, [sp, #16]
    48f4:	stp	x24, x23, [sp, #32]
    48f8:	stp	x22, x21, [sp, #48]
    48fc:	stp	x20, x19, [sp, #64]
    4900:	mov	x29, sp
    4904:	sub	x8, x1, x0
    4908:	mov	x19, x0
    490c:	cmp	x8, #0x1
    4910:	b.lt	4994 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xa8>  // b.tstop
    4914:	mov	x20, x3
    4918:	mov	x21, x2
    491c:	lsr	x23, x8, #4
    4920:	lsr	x24, x23, #1
    4924:	add	x25, x19, x24, lsl #4
    4928:	ldr	x8, [x21]
    492c:	ldr	x9, [x25]
    4930:	ldr	x1, [x8]
    4934:	ldr	x8, [x9]
    4938:	cmp	x1, x8
    493c:	b.eq	4980 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x94>  // b.none
    4940:	mov	x0, x20
    4944:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4948:	ldr	x8, [x25]
    494c:	mov	w22, w0
    4950:	mov	x0, x20
    4954:	ldr	x1, [x8]
    4958:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    495c:	cmp	w22, w0
    4960:	b.cc	4970 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x84>  // b.lo, b.ul, b.last
    4964:	mvn	x8, x24
    4968:	add	x19, x25, #0x10
    496c:	add	x24, x23, x8
    4970:	cmp	x24, #0x0
    4974:	mov	x23, x24
    4978:	b.gt	4920 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x34>
    497c:	b	4994 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xa8>
    4980:	ldr	w8, [x21, #8]
    4984:	ldr	w9, [x25, #8]
    4988:	cmp	w8, w9
    498c:	b.ls	4964 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x78>  // b.plast
    4990:	b	4970 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x84>
    4994:	mov	x0, x19
    4998:	ldp	x20, x19, [sp, #64]
    499c:	ldp	x22, x21, [sp, #48]
    49a0:	ldp	x24, x23, [sp, #32]
    49a4:	ldr	x25, [sp, #16]
    49a8:	ldp	x29, x30, [sp], #80
    49ac:	ret

00000000000049b0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>:
    49b0:	sub	sp, sp, #0x70
    49b4:	stp	x29, x30, [sp, #16]
    49b8:	stp	x28, x27, [sp, #32]
    49bc:	stp	x26, x25, [sp, #48]
    49c0:	stp	x24, x23, [sp, #64]
    49c4:	stp	x22, x21, [sp, #80]
    49c8:	stp	x20, x19, [sp, #96]
    49cc:	add	x29, sp, #0x10
    49d0:	sub	x26, x1, x0
    49d4:	mov	x19, x3
    49d8:	mov	x20, x1
    49dc:	mov	x21, x0
    49e0:	cmp	x26, #0x61
    49e4:	b.lt	4b4c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x19c>  // b.tstop
    49e8:	mov	x22, x2
    49ec:	asr	x25, x26, #4
    49f0:	add	x23, x2, x26
    49f4:	mov	x0, x21
    49f8:	add	x24, x0, #0x70
    49fc:	mov	x1, x24
    4a00:	mov	x2, x19
    4a04:	bl	4518 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    4a08:	sub	x8, x20, x24
    4a0c:	cmp	x8, #0x60
    4a10:	mov	x0, x24
    4a14:	b.gt	49f8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x48>
    4a18:	mov	x0, x24
    4a1c:	mov	x1, x20
    4a20:	mov	x2, x19
    4a24:	bl	4518 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    4a28:	cmp	x26, #0x71
    4a2c:	b.lt	4b2c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x17c>  // b.tstop
    4a30:	mov	w27, #0x7                   	// #7
    4a34:	str	x22, [sp, #8]
    4a38:	cmp	x25, x27, lsl #1
    4a3c:	lsl	x26, x27, #1
    4a40:	mov	x24, x21
    4a44:	mov	x4, x22
    4a48:	mov	x8, x25
    4a4c:	b.lt	4a88 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xd8>  // b.tstop
    4a50:	mov	x4, x22
    4a54:	mov	x0, x21
    4a58:	add	x1, x0, x27, lsl #4
    4a5c:	add	x24, x0, x26, lsl #4
    4a60:	mov	x2, x1
    4a64:	mov	x3, x24
    4a68:	mov	x5, x19
    4a6c:	bl	4fac <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    4a70:	sub	x8, x20, x24
    4a74:	asr	x8, x8, #4
    4a78:	mov	x4, x0
    4a7c:	cmp	x8, x26
    4a80:	mov	x0, x24
    4a84:	b.ge	4a58 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xa8>  // b.tcont
    4a88:	cmp	x8, x27
    4a8c:	csel	x8, x27, x8, gt
    4a90:	add	x1, x24, x8, lsl #4
    4a94:	mov	x0, x24
    4a98:	mov	x2, x1
    4a9c:	mov	x3, x20
    4aa0:	mov	x5, x19
    4aa4:	bl	4fac <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    4aa8:	cmp	x25, x27, lsl #2
    4aac:	lsl	x28, x27, #2
    4ab0:	mov	x0, x22
    4ab4:	mov	x4, x21
    4ab8:	mov	x8, x25
    4abc:	b.lt	4b04 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x154>  // b.tstop
    4ac0:	mov	x0, x22
    4ac4:	lsl	x22, x27, #6
    4ac8:	lsl	x27, x27, #5
    4acc:	mov	x4, x21
    4ad0:	add	x1, x0, x27
    4ad4:	add	x24, x0, x22
    4ad8:	mov	x2, x1
    4adc:	mov	x3, x24
    4ae0:	mov	x5, x19
    4ae4:	bl	5104 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    4ae8:	sub	x8, x23, x24
    4aec:	asr	x8, x8, #4
    4af0:	mov	x4, x0
    4af4:	cmp	x8, x28
    4af8:	mov	x0, x24
    4afc:	b.ge	4ad0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x120>  // b.tcont
    4b00:	ldr	x22, [sp, #8]
    4b04:	cmp	x8, x26
    4b08:	csel	x8, x26, x8, gt
    4b0c:	add	x1, x0, x8, lsl #4
    4b10:	mov	x2, x1
    4b14:	mov	x3, x23
    4b18:	mov	x5, x19
    4b1c:	bl	5104 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    4b20:	cmp	x28, x25
    4b24:	mov	x27, x28
    4b28:	b.lt	4a38 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x88>  // b.tstop
    4b2c:	ldp	x20, x19, [sp, #96]
    4b30:	ldp	x22, x21, [sp, #80]
    4b34:	ldp	x24, x23, [sp, #64]
    4b38:	ldp	x26, x25, [sp, #48]
    4b3c:	ldp	x28, x27, [sp, #32]
    4b40:	ldp	x29, x30, [sp, #16]
    4b44:	add	sp, sp, #0x70
    4b48:	ret
    4b4c:	mov	x0, x21
    4b50:	mov	x1, x20
    4b54:	mov	x2, x19
    4b58:	ldp	x20, x19, [sp, #96]
    4b5c:	ldp	x22, x21, [sp, #80]
    4b60:	ldp	x24, x23, [sp, #64]
    4b64:	ldp	x26, x25, [sp, #48]
    4b68:	ldp	x28, x27, [sp, #32]
    4b6c:	ldp	x29, x30, [sp, #16]
    4b70:	add	sp, sp, #0x70
    4b74:	b	4518 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>

0000000000004b78 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>:
    4b78:	sub	sp, sp, #0x80
    4b7c:	stp	x29, x30, [sp, #32]
    4b80:	stp	x28, x27, [sp, #48]
    4b84:	stp	x26, x25, [sp, #64]
    4b88:	stp	x24, x23, [sp, #80]
    4b8c:	stp	x22, x21, [sp, #96]
    4b90:	stp	x20, x19, [sp, #112]
    4b94:	add	x29, sp, #0x20
    4b98:	cmp	x3, x4
    4b9c:	mov	x26, x4
    4ba0:	mov	x28, x3
    4ba4:	mov	x24, x1
    4ba8:	cset	w8, gt
    4bac:	cmp	x3, x6
    4bb0:	mov	x25, x0
    4bb4:	stur	x7, [x29, #-8]
    4bb8:	stp	x2, x5, [sp]
    4bbc:	str	x6, [sp, #16]
    4bc0:	b.gt	4bd8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x60>
    4bc4:	cmp	x28, x26
    4bc8:	b.gt	4bd8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x60>
    4bcc:	mov	x22, x25
    4bd0:	mov	x12, x24
    4bd4:	b	4cd8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x160>
    4bd8:	ldr	x23, [sp, #16]
    4bdc:	mov	x22, x25
    4be0:	ldr	x9, [sp, #16]
    4be4:	cmp	x26, x9
    4be8:	b.le	4dd8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x260>
    4bec:	tbz	w8, #0, 4c24 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0xac>
    4bf0:	cmp	x28, #0x0
    4bf4:	cinc	x8, x28, lt  // lt = tstop
    4bf8:	ldr	x1, [sp]
    4bfc:	ldur	x3, [x29, #-8]
    4c00:	asr	x21, x8, #1
    4c04:	add	x19, x22, x21, lsl #4
    4c08:	mov	x0, x24
    4c0c:	mov	x2, x19
    4c10:	bl	4828 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    4c14:	sub	x8, x0, x24
    4c18:	mov	x27, x0
    4c1c:	asr	x20, x8, #4
    4c20:	b	4c54 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0xdc>
    4c24:	cmp	x26, #0x0
    4c28:	cinc	x8, x26, lt  // lt = tstop
    4c2c:	ldur	x3, [x29, #-8]
    4c30:	asr	x20, x8, #1
    4c34:	add	x27, x24, x20, lsl #4
    4c38:	mov	x0, x25
    4c3c:	mov	x1, x24
    4c40:	mov	x2, x27
    4c44:	bl	48ec <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    4c48:	sub	x8, x0, x25
    4c4c:	mov	x19, x0
    4c50:	asr	x21, x8, #4
    4c54:	mov	x1, x24
    4c58:	ldr	x24, [sp, #8]
    4c5c:	sub	x28, x28, x21
    4c60:	mov	x0, x19
    4c64:	mov	x2, x27
    4c68:	mov	x3, x28
    4c6c:	mov	x4, x20
    4c70:	mov	x5, x24
    4c74:	mov	x6, x23
    4c78:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4c7c:	ldur	x7, [x29, #-8]
    4c80:	mov	x22, x0
    4c84:	mov	x0, x25
    4c88:	mov	x1, x19
    4c8c:	mov	x2, x22
    4c90:	mov	x3, x21
    4c94:	mov	x4, x20
    4c98:	mov	x5, x24
    4c9c:	mov	x6, x23
    4ca0:	bl	4b78 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>
    4ca4:	sub	x26, x26, x20
    4ca8:	cmp	x28, x26
    4cac:	cset	w8, gt
    4cb0:	cmp	x28, x23
    4cb4:	mov	x24, x27
    4cb8:	mov	x25, x22
    4cbc:	b.gt	4be0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x68>
    4cc0:	mov	x12, x27
    4cc4:	cmp	x28, x26
    4cc8:	mov	x24, x27
    4ccc:	mov	x25, x22
    4cd0:	b.gt	4be0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x68>
    4cd4:	mov	x25, x22
    4cd8:	ldp	x27, x26, [sp]
    4cdc:	ldur	x28, [x29, #-8]
    4ce0:	sub	x8, x12, x22
    4ce4:	cmp	x8, #0x1
    4ce8:	b.lt	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>  // b.tstop
    4cec:	lsr	x8, x8, #4
    4cf0:	mov	x20, xzr
    4cf4:	add	x8, x8, #0x1
    4cf8:	add	x9, x25, x20
    4cfc:	ldr	x10, [x9]
    4d00:	add	x11, x26, x20
    4d04:	sub	x8, x8, #0x1
    4d08:	cmp	x8, #0x1
    4d0c:	str	x10, [x11]
    4d10:	ldr	w9, [x9, #8]
    4d14:	add	x20, x20, #0x10
    4d18:	str	w9, [x11, #8]
    4d1c:	b.gt	4cf8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x180>
    4d20:	cbz	x20, 4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>
    4d24:	add	x21, x26, x20
    4d28:	neg	x24, x26
    4d2c:	cmp	x12, x27
    4d30:	b.eq	4ed4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x35c>  // b.none
    4d34:	ldr	x9, [x12]
    4d38:	ldr	x8, [x26]
    4d3c:	ldr	x1, [x9]
    4d40:	ldr	x9, [x8]
    4d44:	cmp	x1, x9
    4d48:	b.eq	4d88 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x210>  // b.none
    4d4c:	mov	x0, x28
    4d50:	mov	x23, x22
    4d54:	mov	x22, x12
    4d58:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4d5c:	ldr	x8, [x26]
    4d60:	mov	w19, w0
    4d64:	mov	x0, x28
    4d68:	ldr	x1, [x8]
    4d6c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4d70:	cmp	w19, w0
    4d74:	b.cs	4da8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x230>  // b.hs, b.nlast
    4d78:	ldr	w10, [x22, #8]
    4d7c:	mov	x12, x22
    4d80:	mov	x22, x23
    4d84:	b	4d98 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x220>
    4d88:	ldr	w10, [x12, #8]
    4d8c:	ldr	w9, [x26, #8]
    4d90:	cmp	w10, w9
    4d94:	b.ls	4db8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x240>  // b.plast
    4d98:	ldr	x8, [x12], #16
    4d9c:	str	w10, [x22, #8]
    4da0:	str	x8, [x22]
    4da4:	b	4dc4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x24c>
    4da8:	ldr	x8, [x26]
    4dac:	ldr	w9, [x26, #8]
    4db0:	mov	x12, x22
    4db4:	mov	x22, x23
    4db8:	add	x26, x26, #0x10
    4dbc:	str	x8, [x22]
    4dc0:	str	w9, [x22, #8]
    4dc4:	add	x8, x26, x24
    4dc8:	cmp	x8, x20
    4dcc:	add	x22, x22, #0x10
    4dd0:	b.ne	4d2c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1b4>  // b.any
    4dd4:	b	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>
    4dd8:	ldp	x25, x23, [sp]
    4ddc:	ldur	x26, [x29, #-8]
    4de0:	sub	x9, x25, x24
    4de4:	cmp	x9, #0x1
    4de8:	mov	x8, x23
    4dec:	b.lt	4e24 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2ac>  // b.tstop
    4df0:	lsr	x8, x9, #4
    4df4:	add	x9, x8, #0x1
    4df8:	mov	x8, x23
    4dfc:	mov	x10, x24
    4e00:	ldr	x11, [x10]
    4e04:	sub	x9, x9, #0x1
    4e08:	cmp	x9, #0x1
    4e0c:	str	x11, [x8]
    4e10:	ldr	w11, [x10, #8]
    4e14:	add	x10, x10, #0x10
    4e18:	str	w11, [x8, #8]
    4e1c:	add	x8, x8, #0x10
    4e20:	b.gt	4e00 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x288>
    4e24:	cmp	x22, x24
    4e28:	b.eq	4f10 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x398>  // b.none
    4e2c:	cmp	x8, x23
    4e30:	b.eq	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>  // b.none
    4e34:	sub	x21, x24, #0x10
    4e38:	sub	x20, x8, #0x10
    4e3c:	ldr	x8, [x20]
    4e40:	ldr	x9, [x21]
    4e44:	ldr	x1, [x8]
    4e48:	ldr	x9, [x9]
    4e4c:	cmp	x1, x9
    4e50:	b.eq	4e80 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x308>  // b.none
    4e54:	mov	x0, x26
    4e58:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e5c:	ldr	x8, [x21]
    4e60:	mov	w19, w0
    4e64:	mov	x0, x26
    4e68:	ldr	x1, [x8]
    4e6c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e70:	cmp	w19, w0
    4e74:	b.cs	4eb4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x33c>  // b.hs, b.nlast
    4e78:	ldr	w10, [x21, #8]
    4e7c:	b	4e90 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x318>
    4e80:	ldr	w9, [x20, #8]
    4e84:	ldr	w10, [x21, #8]
    4e88:	cmp	w9, w10
    4e8c:	b.ls	4ebc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x344>  // b.plast
    4e90:	ldr	x9, [x21]
    4e94:	mov	x8, x25
    4e98:	cmp	x22, x21
    4e9c:	str	x9, [x8, #-16]!
    4ea0:	str	w10, [x8, #8]
    4ea4:	b.eq	4f4c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x3d4>  // b.none
    4ea8:	sub	x21, x21, #0x10
    4eac:	mov	x25, x8
    4eb0:	b	4e3c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2c4>
    4eb4:	ldr	x8, [x20]
    4eb8:	ldr	w9, [x20, #8]
    4ebc:	str	x8, [x25, #-16]!
    4ec0:	cmp	x20, x23
    4ec4:	str	w9, [x25, #8]
    4ec8:	b.eq	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>  // b.none
    4ecc:	sub	x20, x20, #0x10
    4ed0:	b	4e3c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2c4>
    4ed4:	sub	x8, x21, x26
    4ed8:	cmp	x8, #0x1
    4edc:	b.lt	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>  // b.tstop
    4ee0:	lsr	x8, x8, #4
    4ee4:	add	x8, x8, #0x1
    4ee8:	ldr	x9, [x26]
    4eec:	sub	x8, x8, #0x1
    4ef0:	cmp	x8, #0x1
    4ef4:	str	x9, [x22]
    4ef8:	ldr	w9, [x26, #8]
    4efc:	add	x26, x26, #0x10
    4f00:	str	w9, [x22, #8]
    4f04:	add	x22, x22, #0x10
    4f08:	b.gt	4ee8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x370>
    4f0c:	b	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>
    4f10:	sub	x9, x8, x23
    4f14:	cmp	x9, #0x1
    4f18:	b.lt	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>  // b.tstop
    4f1c:	lsr	x10, x9, #4
    4f20:	sub	x9, x25, #0x8
    4f24:	add	x10, x10, #0x1
    4f28:	sub	x8, x8, #0x8
    4f2c:	ldur	x11, [x8, #-8]
    4f30:	sub	x10, x10, #0x1
    4f34:	cmp	x10, #0x1
    4f38:	stur	x11, [x9, #-8]
    4f3c:	ldr	w11, [x8], #-16
    4f40:	str	w11, [x9], #-16
    4f44:	b.gt	4f2c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x3b4>
    4f48:	b	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>
    4f4c:	sub	x8, x20, x23
    4f50:	add	x8, x8, #0x10
    4f54:	cmp	x8, #0x1
    4f58:	b.lt	4f8c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x414>  // b.tstop
    4f5c:	lsr	x9, x8, #4
    4f60:	sub	x8, x25, #0x20
    4f64:	add	x9, x9, #0x1
    4f68:	add	x10, x20, #0x8
    4f6c:	ldur	x11, [x10, #-8]
    4f70:	sub	x9, x9, #0x1
    4f74:	cmp	x9, #0x1
    4f78:	str	x11, [x8]
    4f7c:	ldr	w11, [x10], #-16
    4f80:	str	w11, [x8, #8]
    4f84:	sub	x8, x8, #0x10
    4f88:	b.gt	4f6c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x3f4>
    4f8c:	ldp	x20, x19, [sp, #112]
    4f90:	ldp	x22, x21, [sp, #96]
    4f94:	ldp	x24, x23, [sp, #80]
    4f98:	ldp	x26, x25, [sp, #64]
    4f9c:	ldp	x28, x27, [sp, #48]
    4fa0:	ldp	x29, x30, [sp, #32]
    4fa4:	add	sp, sp, #0x80
    4fa8:	ret

0000000000004fac <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>:
    4fac:	stp	x29, x30, [sp, #-80]!
    4fb0:	str	x25, [sp, #16]
    4fb4:	stp	x24, x23, [sp, #32]
    4fb8:	stp	x22, x21, [sp, #48]
    4fbc:	stp	x20, x19, [sp, #64]
    4fc0:	mov	x29, sp
    4fc4:	mov	x19, x4
    4fc8:	mov	x21, x3
    4fcc:	mov	x22, x1
    4fd0:	mov	x23, x0
    4fd4:	cmp	x0, x1
    4fd8:	mov	x20, x2
    4fdc:	b.eq	506c <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xc0>  // b.none
    4fe0:	mov	x24, x5
    4fe4:	cmp	x20, x21
    4fe8:	b.eq	5074 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xc8>  // b.none
    4fec:	ldr	x8, [x20]
    4ff0:	ldr	x9, [x23]
    4ff4:	ldr	x1, [x8]
    4ff8:	ldr	x8, [x9]
    4ffc:	cmp	x1, x8
    5000:	b.eq	5030 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x84>  // b.none
    5004:	mov	x0, x24
    5008:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    500c:	ldr	x8, [x23]
    5010:	mov	w25, w0
    5014:	mov	x0, x24
    5018:	ldr	x1, [x8]
    501c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5020:	cmp	w25, w0
    5024:	b.cs	5050 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xa4>  // b.hs, b.nlast
    5028:	ldr	w8, [x20, #8]
    502c:	b	5040 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x94>
    5030:	ldr	w8, [x20, #8]
    5034:	ldr	w9, [x23, #8]
    5038:	cmp	w8, w9
    503c:	b.ls	5054 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xa8>  // b.plast
    5040:	ldr	x9, [x20], #16
    5044:	str	w8, [x19, #8]
    5048:	str	x9, [x19]
    504c:	b	5060 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xb4>
    5050:	ldr	w9, [x23, #8]
    5054:	ldr	x8, [x23], #16
    5058:	str	w9, [x19, #8]
    505c:	str	x8, [x19]
    5060:	cmp	x23, x22
    5064:	add	x19, x19, #0x10
    5068:	b.ne	4fe4 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x38>  // b.any
    506c:	mov	x8, x22
    5070:	b	5078 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xcc>
    5074:	mov	x8, x23
    5078:	sub	x9, x22, x23
    507c:	cmp	x9, #0x1
    5080:	b.lt	50b0 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x104>  // b.tstop
    5084:	lsr	x9, x9, #4
    5088:	add	x9, x9, #0x1
    508c:	ldr	x10, [x8]
    5090:	sub	x9, x9, #0x1
    5094:	cmp	x9, #0x1
    5098:	str	x10, [x19]
    509c:	ldr	w10, [x8, #8]
    50a0:	add	x8, x8, #0x10
    50a4:	str	w10, [x19, #8]
    50a8:	add	x19, x19, #0x10
    50ac:	b.gt	508c <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xe0>
    50b0:	sub	x8, x21, x20
    50b4:	cmp	x8, #0x1
    50b8:	b.lt	50e8 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x13c>  // b.tstop
    50bc:	lsr	x8, x8, #4
    50c0:	add	x8, x8, #0x1
    50c4:	ldr	x9, [x20]
    50c8:	sub	x8, x8, #0x1
    50cc:	cmp	x8, #0x1
    50d0:	str	x9, [x19]
    50d4:	ldr	w9, [x20, #8]
    50d8:	add	x20, x20, #0x10
    50dc:	str	w9, [x19, #8]
    50e0:	add	x19, x19, #0x10
    50e4:	b.gt	50c4 <_ZSt12__move_mergeIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x118>
    50e8:	mov	x0, x19
    50ec:	ldp	x20, x19, [sp, #64]
    50f0:	ldp	x22, x21, [sp, #48]
    50f4:	ldp	x24, x23, [sp, #32]
    50f8:	ldr	x25, [sp, #16]
    50fc:	ldp	x29, x30, [sp], #80
    5100:	ret

0000000000005104 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>:
    5104:	stp	x29, x30, [sp, #-80]!
    5108:	str	x25, [sp, #16]
    510c:	stp	x24, x23, [sp, #32]
    5110:	stp	x22, x21, [sp, #48]
    5114:	stp	x20, x19, [sp, #64]
    5118:	mov	x29, sp
    511c:	mov	x19, x4
    5120:	mov	x21, x3
    5124:	mov	x20, x2
    5128:	mov	x23, x1
    512c:	cmp	x2, x3
    5130:	mov	x22, x0
    5134:	b.eq	51d4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xd0>  // b.none
    5138:	cmp	x22, x23
    513c:	b.eq	51d4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xd0>  // b.none
    5140:	mov	x24, x5
    5144:	ldr	x8, [x20]
    5148:	ldr	x9, [x22]
    514c:	ldr	x1, [x8]
    5150:	ldr	x10, [x9]
    5154:	cmp	x1, x10
    5158:	b.eq	518c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x88>  // b.none
    515c:	mov	x0, x24
    5160:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5164:	ldr	x8, [x22]
    5168:	mov	w25, w0
    516c:	mov	x0, x24
    5170:	ldr	x1, [x8]
    5174:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5178:	cmp	w25, w0
    517c:	b.cs	51ac <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xa8>  // b.hs, b.nlast
    5180:	ldr	x8, [x20]
    5184:	ldr	w10, [x20, #8]
    5188:	b	519c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x98>
    518c:	ldr	w10, [x20, #8]
    5190:	ldr	w11, [x22, #8]
    5194:	cmp	w10, w11
    5198:	b.ls	51b4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xb0>  // b.plast
    519c:	str	x8, [x19]
    51a0:	str	w10, [x19, #8]
    51a4:	add	x20, x20, #0x10
    51a8:	b	51c0 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xbc>
    51ac:	ldr	x9, [x22]
    51b0:	ldr	w11, [x22, #8]
    51b4:	add	x22, x22, #0x10
    51b8:	str	x9, [x19]
    51bc:	str	w11, [x19, #8]
    51c0:	cmp	x20, x21
    51c4:	add	x19, x19, #0x10
    51c8:	b.eq	51d4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xd0>  // b.none
    51cc:	cmp	x22, x23
    51d0:	b.ne	5144 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x40>  // b.any
    51d4:	sub	x8, x23, x22
    51d8:	cmp	x8, #0x1
    51dc:	b.lt	520c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x108>  // b.tstop
    51e0:	lsr	x8, x8, #4
    51e4:	add	x8, x8, #0x1
    51e8:	ldr	x9, [x22]
    51ec:	sub	x8, x8, #0x1
    51f0:	cmp	x8, #0x1
    51f4:	str	x9, [x19]
    51f8:	ldr	w9, [x22, #8]
    51fc:	add	x22, x22, #0x10
    5200:	str	w9, [x19, #8]
    5204:	add	x19, x19, #0x10
    5208:	b.gt	51e8 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xe4>
    520c:	sub	x8, x21, x20
    5210:	cmp	x8, #0x1
    5214:	b.lt	5244 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x140>  // b.tstop
    5218:	lsr	x8, x8, #4
    521c:	add	x8, x8, #0x1
    5220:	ldr	x9, [x20]
    5224:	sub	x8, x8, #0x1
    5228:	cmp	x8, #0x1
    522c:	str	x9, [x19]
    5230:	ldr	w9, [x20, #8]
    5234:	add	x20, x20, #0x10
    5238:	str	w9, [x19, #8]
    523c:	add	x19, x19, #0x10
    5240:	b.gt	5220 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x11c>
    5244:	mov	x0, x19
    5248:	ldp	x20, x19, [sp, #64]
    524c:	ldp	x22, x21, [sp, #48]
    5250:	ldp	x24, x23, [sp, #32]
    5254:	ldr	x25, [sp, #16]
    5258:	ldp	x29, x30, [sp], #80
    525c:	ret

0000000000005260 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>:
    5260:	sub	sp, sp, #0x70
    5264:	stp	x29, x30, [sp, #16]
    5268:	stp	x28, x27, [sp, #32]
    526c:	stp	x26, x25, [sp, #48]
    5270:	stp	x24, x23, [sp, #64]
    5274:	stp	x22, x21, [sp, #80]
    5278:	stp	x20, x19, [sp, #96]
    527c:	add	x29, sp, #0x10
    5280:	sub	x24, x1, x0
    5284:	cmp	x24, #0x81
    5288:	b.lt	56f0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x490>  // b.tstop
    528c:	mov	x19, x3
    5290:	mov	x21, x1
    5294:	mov	x20, x0
    5298:	mov	x22, x2
    529c:	add	x25, x0, #0x8
    52a0:	cbz	x22, 567c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x41c>
    52a4:	lsr	x8, x24, #1
    52a8:	and	x8, x8, #0x7ffffffffffffff8
    52ac:	add	x26, x20, x8
    52b0:	ldr	x9, [x20, #8]
    52b4:	ldr	x8, [x26]
    52b8:	add	x0, sp, #0x8
    52bc:	sub	x22, x22, #0x1
    52c0:	sub	x24, x21, #0x8
    52c4:	stp	x8, x9, [sp]
    52c8:	ldp	x1, x8, [x19, #208]
    52cc:	sub	x8, x8, x1
    52d0:	asr	x2, x8, #3
    52d4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52d8:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    52dc:	ldp	x1, x8, [x19, #208]
    52e0:	ldp	w28, w27, [sp, #8]
    52e4:	mov	w23, w0
    52e8:	mov	x0, sp
    52ec:	sub	x8, x8, x1
    52f0:	asr	x2, x8, #3
    52f4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52f8:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    52fc:	ldr	w8, [sp]
    5300:	cmp	w28, w8
    5304:	b.cc	5400 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1a0>  // b.lo, b.ul, b.last
    5308:	cmp	w8, w28
    530c:	b.cs	53e4 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x184>  // b.hs, b.nlast
    5310:	ldr	x8, [x25]
    5314:	ldr	x9, [x24]
    5318:	add	x0, sp, #0x8
    531c:	stp	x9, x8, [sp]
    5320:	ldp	x1, x8, [x19, #208]
    5324:	sub	x8, x8, x1
    5328:	asr	x2, x8, #3
    532c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5330:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5334:	ldp	x1, x8, [x19, #208]
    5338:	ldp	w28, w27, [sp, #8]
    533c:	mov	w23, w0
    5340:	mov	x0, sp
    5344:	sub	x8, x8, x1
    5348:	asr	x2, x8, #3
    534c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5350:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5354:	ldr	w8, [sp]
    5358:	cmp	w28, w8
    535c:	b.cc	54f4 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x294>  // b.lo, b.ul, b.last
    5360:	cmp	w8, w28
    5364:	b.cs	54ec <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x28c>  // b.hs, b.nlast
    5368:	ldr	x8, [x26]
    536c:	ldr	x9, [x24]
    5370:	add	x0, sp, #0x8
    5374:	stp	x9, x8, [sp]
    5378:	ldp	x1, x8, [x19, #208]
    537c:	sub	x8, x8, x1
    5380:	asr	x2, x8, #3
    5384:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5388:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    538c:	ldp	x1, x8, [x19, #208]
    5390:	ldp	w28, w27, [sp, #8]
    5394:	mov	w23, w0
    5398:	mov	x0, sp
    539c:	sub	x8, x8, x1
    53a0:	asr	x2, x8, #3
    53a4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    53a8:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    53ac:	ldr	w8, [sp]
    53b0:	cmp	w28, w8
    53b4:	b.cc	54c0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x260>  // b.lo, b.ul, b.last
    53b8:	cmp	w8, w28
    53bc:	b.cc	5450 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1f0>  // b.lo, b.ul, b.last
    53c0:	cmp	w23, w0
    53c4:	b.cc	54c0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x260>  // b.lo, b.ul, b.last
    53c8:	cmp	w0, w23
    53cc:	b.cc	5450 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1f0>  // b.lo, b.ul, b.last
    53d0:	ldr	w8, [sp, #4]
    53d4:	cmp	w27, w8
    53d8:	mov	x8, x24
    53dc:	b.cc	54f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x298>  // b.lo, b.ul, b.last
    53e0:	b	5450 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1f0>
    53e4:	cmp	w23, w0
    53e8:	b.cc	5400 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1a0>  // b.lo, b.ul, b.last
    53ec:	cmp	w0, w23
    53f0:	b.cc	5310 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xb0>  // b.lo, b.ul, b.last
    53f4:	ldr	w8, [sp, #4]
    53f8:	cmp	w27, w8
    53fc:	b.cs	5310 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xb0>  // b.hs, b.nlast
    5400:	ldr	x8, [x26]
    5404:	ldr	x9, [x24]
    5408:	add	x0, sp, #0x8
    540c:	stp	x9, x8, [sp]
    5410:	ldp	x1, x8, [x19, #208]
    5414:	sub	x8, x8, x1
    5418:	asr	x2, x8, #3
    541c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5420:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5424:	ldp	x1, x8, [x19, #208]
    5428:	ldp	w28, w27, [sp, #8]
    542c:	mov	w23, w0
    5430:	mov	x0, sp
    5434:	sub	x8, x8, x1
    5438:	asr	x2, x8, #3
    543c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5440:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5444:	ldr	w8, [sp]
    5448:	cmp	w28, w8
    544c:	b.cs	5458 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1f8>  // b.hs, b.nlast
    5450:	mov	x8, x26
    5454:	b	54f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x298>
    5458:	cmp	w8, w28
    545c:	b.cs	54c8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x268>  // b.hs, b.nlast
    5460:	ldr	x8, [x25]
    5464:	ldr	x9, [x24]
    5468:	add	x0, sp, #0x8
    546c:	stp	x9, x8, [sp]
    5470:	ldp	x1, x8, [x19, #208]
    5474:	sub	x8, x8, x1
    5478:	asr	x2, x8, #3
    547c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5480:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5484:	ldp	x1, x8, [x19, #208]
    5488:	ldp	w27, w26, [sp, #8]
    548c:	mov	w23, w0
    5490:	mov	x0, sp
    5494:	sub	x8, x8, x1
    5498:	asr	x2, x8, #3
    549c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    54a0:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    54a4:	ldr	w8, [sp]
    54a8:	cmp	w27, w8
    54ac:	b.cc	54c0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x260>  // b.lo, b.ul, b.last
    54b0:	cmp	w8, w27
    54b4:	b.cc	54f4 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x294>  // b.lo, b.ul, b.last
    54b8:	cmp	w23, w0
    54bc:	b.cs	5660 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x400>  // b.hs, b.nlast
    54c0:	mov	x8, x24
    54c4:	b	54f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x298>
    54c8:	cmp	w23, w0
    54cc:	b.cc	5450 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1f0>  // b.lo, b.ul, b.last
    54d0:	cmp	w0, w23
    54d4:	b.cc	5460 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x200>  // b.lo, b.ul, b.last
    54d8:	ldr	w8, [sp, #4]
    54dc:	cmp	w27, w8
    54e0:	mov	x8, x26
    54e4:	b.cc	54f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x298>  // b.lo, b.ul, b.last
    54e8:	b	5460 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x200>
    54ec:	cmp	w23, w0
    54f0:	b.cs	5644 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x3e4>  // b.hs, b.nlast
    54f4:	mov	x8, x25
    54f8:	ldr	x9, [x8]
    54fc:	ldr	x10, [x20]
    5500:	mov	x26, x21
    5504:	mov	x23, x25
    5508:	str	x9, [x20]
    550c:	str	x10, [x8]
    5510:	ldr	x8, [x23]
    5514:	ldr	x9, [x20]
    5518:	add	x0, sp, #0x8
    551c:	stp	x9, x8, [sp]
    5520:	ldp	x1, x8, [x19, #208]
    5524:	sub	x8, x8, x1
    5528:	asr	x2, x8, #3
    552c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5530:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5534:	ldp	x1, x8, [x19, #208]
    5538:	ldp	w28, w27, [sp, #8]
    553c:	mov	w24, w0
    5540:	mov	x0, sp
    5544:	sub	x8, x8, x1
    5548:	asr	x2, x8, #3
    554c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5550:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5554:	ldr	w8, [sp]
    5558:	cmp	w28, w8
    555c:	b.cc	5584 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x324>  // b.lo, b.ul, b.last
    5560:	cmp	w8, w28
    5564:	b.cc	558c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>  // b.lo, b.ul, b.last
    5568:	cmp	w24, w0
    556c:	b.cc	5584 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x324>  // b.lo, b.ul, b.last
    5570:	cmp	w0, w24
    5574:	b.cc	558c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>  // b.lo, b.ul, b.last
    5578:	ldr	w8, [sp, #4]
    557c:	cmp	w27, w8
    5580:	b.cs	558c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>  // b.hs, b.nlast
    5584:	add	x23, x23, #0x8
    5588:	b	5510 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x2b0>
    558c:	ldr	x8, [x20]
    5590:	ldr	x9, [x26, #-8]!
    5594:	add	x0, sp, #0x8
    5598:	stp	x9, x8, [sp]
    559c:	ldp	x1, x8, [x19, #208]
    55a0:	sub	x8, x8, x1
    55a4:	asr	x2, x8, #3
    55a8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55ac:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    55b0:	ldp	x1, x8, [x19, #208]
    55b4:	ldp	w28, w27, [sp, #8]
    55b8:	mov	w24, w0
    55bc:	mov	x0, sp
    55c0:	sub	x8, x8, x1
    55c4:	asr	x2, x8, #3
    55c8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55cc:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    55d0:	ldr	w8, [sp]
    55d4:	cmp	w28, w8
    55d8:	b.cc	558c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>  // b.lo, b.ul, b.last
    55dc:	cmp	w8, w28
    55e0:	b.cc	5600 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x3a0>  // b.lo, b.ul, b.last
    55e4:	cmp	w24, w0
    55e8:	b.cc	558c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>  // b.lo, b.ul, b.last
    55ec:	cmp	w0, w24
    55f0:	b.cc	5600 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x3a0>  // b.lo, b.ul, b.last
    55f4:	ldr	w8, [sp, #4]
    55f8:	cmp	w27, w8
    55fc:	b.cc	558c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>  // b.lo, b.ul, b.last
    5600:	cmp	x23, x26
    5604:	b.cs	561c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x3bc>  // b.hs, b.nlast
    5608:	ldr	x8, [x26]
    560c:	ldr	x9, [x23]
    5610:	str	x8, [x23], #8
    5614:	str	x9, [x26]
    5618:	b	5510 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x2b0>
    561c:	mov	x0, x23
    5620:	mov	x1, x21
    5624:	mov	x2, x22
    5628:	mov	x3, x19
    562c:	bl	5260 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>
    5630:	sub	x24, x23, x20
    5634:	cmp	x24, #0x80
    5638:	mov	x21, x23
    563c:	b.gt	52a0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x40>
    5640:	b	56f0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x490>
    5644:	cmp	w0, w23
    5648:	b.cc	5368 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x108>  // b.lo, b.ul, b.last
    564c:	ldr	w8, [sp, #4]
    5650:	cmp	w27, w8
    5654:	mov	x8, x25
    5658:	b.cc	54f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x298>  // b.lo, b.ul, b.last
    565c:	b	5368 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x108>
    5660:	cmp	w0, w23
    5664:	b.cc	54f4 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x294>  // b.lo, b.ul, b.last
    5668:	ldr	w8, [sp, #4]
    566c:	cmp	w26, w8
    5670:	mov	x8, x24
    5674:	b.cc	54f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x298>  // b.lo, b.ul, b.last
    5678:	b	54f4 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x294>
    567c:	lsr	x22, x24, #3
    5680:	sub	x8, x22, #0x2
    5684:	sub	x9, x22, #0x1
    5688:	cmp	x8, #0x0
    568c:	csel	x8, x9, x8, lt  // lt = tstop
    5690:	asr	x23, x8, #1
    5694:	ldr	x3, [x20, x23, lsl #3]
    5698:	mov	x0, x20
    569c:	mov	x1, x23
    56a0:	mov	x2, x22
    56a4:	mov	x4, x19
    56a8:	bl	5710 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_>
    56ac:	sub	x23, x23, #0x1
    56b0:	cmn	x23, #0x1
    56b4:	b.ne	5694 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x434>  // b.any
    56b8:	cmp	x24, #0x9
    56bc:	b.lt	56f0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x490>  // b.tstop
    56c0:	sub	x21, x21, #0x8
    56c4:	ldr	x8, [x20]
    56c8:	ldr	x3, [x21]
    56cc:	sub	x22, x21, x20
    56d0:	asr	x2, x22, #3
    56d4:	mov	x0, x20
    56d8:	mov	x1, xzr
    56dc:	mov	x4, x19
    56e0:	str	x8, [x21], #-8
    56e4:	bl	5710 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_>
    56e8:	cmp	x22, #0x8
    56ec:	b.gt	56c4 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x464>
    56f0:	ldp	x20, x19, [sp, #96]
    56f4:	ldp	x22, x21, [sp, #80]
    56f8:	ldp	x24, x23, [sp, #64]
    56fc:	ldp	x26, x25, [sp, #48]
    5700:	ldp	x28, x27, [sp, #32]
    5704:	ldp	x29, x30, [sp, #16]
    5708:	add	sp, sp, #0x70
    570c:	ret

0000000000005710 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_>:
    5710:	sub	sp, sp, #0x90
    5714:	stp	x29, x30, [sp, #48]
    5718:	stp	x28, x27, [sp, #64]
    571c:	stp	x26, x25, [sp, #80]
    5720:	stp	x24, x23, [sp, #96]
    5724:	stp	x22, x21, [sp, #112]
    5728:	stp	x20, x19, [sp, #128]
    572c:	add	x29, sp, #0x30
    5730:	sub	x8, x2, #0x1
    5734:	cmp	x8, #0x0
    5738:	str	x8, [sp]
    573c:	csel	x8, x2, x8, lt  // lt = tstop
    5740:	asr	x26, x8, #1
    5744:	mov	x21, x4
    5748:	mov	x20, x0
    574c:	cmp	x26, x1
    5750:	mov	x24, x1
    5754:	stp	x3, x2, [sp, #8]
    5758:	str	x1, [sp, #24]
    575c:	b.le	581c <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x10c>
    5760:	ldr	x27, [sp, #24]
    5764:	lsl	x8, x27, #1
    5768:	mov	w28, #0x1                   	// #1
    576c:	add	x25, x8, #0x2
    5770:	bfi	x28, x27, #1, #63
    5774:	ldr	x8, [x20, x25, lsl #3]
    5778:	ldr	x9, [x20, x28, lsl #3]
    577c:	sub	x0, x29, #0x8
    5780:	mov	w23, #0x1                   	// #1
    5784:	stp	x9, x8, [x29, #-16]
    5788:	ldp	x1, x8, [x21, #208]
    578c:	sub	x8, x8, x1
    5790:	asr	x2, x8, #3
    5794:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5798:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    579c:	ldp	x1, x8, [x21, #208]
    57a0:	ldp	w22, w19, [x29, #-8]
    57a4:	mov	w24, w0
    57a8:	sub	x0, x29, #0x10
    57ac:	sub	x8, x8, x1
    57b0:	asr	x2, x8, #3
    57b4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    57b8:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    57bc:	ldur	w8, [x29, #-16]
    57c0:	cmp	w22, w8
    57c4:	b.cc	5800 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xf0>  // b.lo, b.ul, b.last
    57c8:	cmp	w8, w22
    57cc:	b.cs	57d8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xc8>  // b.hs, b.nlast
    57d0:	mov	w23, wzr
    57d4:	b	5800 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xf0>
    57d8:	cmp	w24, w0
    57dc:	b.cs	57e8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xd8>  // b.hs, b.nlast
    57e0:	mov	w23, #0x1                   	// #1
    57e4:	b	5800 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xf0>
    57e8:	ldur	w8, [x29, #-12]
    57ec:	cmp	w0, w24
    57f0:	cset	w9, cs  // cs = hs, nlast
    57f4:	cmp	w19, w8
    57f8:	cset	w8, cc  // cc = lo, ul, last
    57fc:	and	w23, w9, w8
    5800:	cmp	w23, #0x0
    5804:	csel	x24, x28, x25, ne  // ne = any
    5808:	ldr	x8, [x20, x24, lsl #3]
    580c:	cmp	x24, x26
    5810:	str	x8, [x20, x27, lsl #3]
    5814:	mov	x27, x24
    5818:	b.lt	5764 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x54>  // b.tstop
    581c:	ldr	x8, [sp, #16]
    5820:	tbnz	w8, #0, 5850 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x140>
    5824:	ldr	x9, [sp]
    5828:	sub	x8, x8, #0x2
    582c:	cmp	x8, #0x0
    5830:	csel	x8, x9, x8, lt  // lt = tstop
    5834:	cmp	x24, x8, asr #1
    5838:	b.ne	5850 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x140>  // b.any
    583c:	mov	w8, #0x1                   	// #1
    5840:	bfi	x8, x24, #1, #63
    5844:	ldr	x9, [x20, x8, lsl #3]
    5848:	str	x9, [x20, x24, lsl #3]
    584c:	mov	x24, x8
    5850:	ldr	x27, [sp, #24]
    5854:	ldr	x22, [sp, #8]
    5858:	cmp	x24, x27
    585c:	b.le	58f8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1e8>
    5860:	sub	x8, x24, #0x1
    5864:	cmp	x8, #0x0
    5868:	csel	x8, x24, x8, lt  // lt = tstop
    586c:	asr	x25, x8, #1
    5870:	ldr	x8, [x20, x25, lsl #3]
    5874:	sub	x0, x29, #0x8
    5878:	stp	x22, x8, [x29, #-16]
    587c:	ldp	x1, x8, [x21, #208]
    5880:	sub	x8, x8, x1
    5884:	asr	x2, x8, #3
    5888:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    588c:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5890:	ldp	x1, x8, [x21, #208]
    5894:	ldp	w19, w26, [x29, #-8]
    5898:	mov	w23, w0
    589c:	sub	x0, x29, #0x10
    58a0:	sub	x8, x8, x1
    58a4:	asr	x2, x8, #3
    58a8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    58ac:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    58b0:	ldur	w8, [x29, #-16]
    58b4:	cmp	w19, w8
    58b8:	b.cc	58e0 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1d0>  // b.lo, b.ul, b.last
    58bc:	cmp	w8, w19
    58c0:	b.cc	58f8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1e8>  // b.lo, b.ul, b.last
    58c4:	cmp	w23, w0
    58c8:	b.cc	58e0 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1d0>  // b.lo, b.ul, b.last
    58cc:	cmp	w0, w23
    58d0:	b.cc	58f8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1e8>  // b.lo, b.ul, b.last
    58d4:	ldur	w8, [x29, #-12]
    58d8:	cmp	w26, w8
    58dc:	b.cs	58f8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1e8>  // b.hs, b.nlast
    58e0:	ldr	x8, [x20, x25, lsl #3]
    58e4:	cmp	x25, x27
    58e8:	str	x8, [x20, x24, lsl #3]
    58ec:	mov	x24, x25
    58f0:	b.gt	5860 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x150>
    58f4:	b	58fc <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x1ec>
    58f8:	mov	x25, x24
    58fc:	str	x22, [x20, x25, lsl #3]
    5900:	ldp	x20, x19, [sp, #128]
    5904:	ldp	x22, x21, [sp, #112]
    5908:	ldp	x24, x23, [sp, #96]
    590c:	ldp	x26, x25, [sp, #80]
    5910:	ldp	x28, x27, [sp, #64]
    5914:	ldp	x29, x30, [sp, #48]
    5918:	add	sp, sp, #0x90
    591c:	ret

0000000000005920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>:
    5920:	stp	x29, x30, [sp, #-32]!
    5924:	str	x19, [sp, #16]
    5928:	mov	x29, sp
    592c:	cbz	x0, 598c <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE+0x6c>
    5930:	ldrb	w8, [x0]
    5934:	mov	x19, x0
    5938:	cbz	w8, 5974 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE+0x54>
    593c:	add	x0, x29, #0x18
    5940:	str	x19, [x29, #24]
    5944:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5948:	tbz	w0, #0, 597c <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE+0x5c>
    594c:	add	x0, x29, #0x18
    5950:	str	x19, [x29, #24]
    5954:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5958:	tbz	w0, #0, 59ac <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE+0x8c>
    595c:	ldrb	w8, [x19, #1]
    5960:	and	w8, w8, #0x7f
    5964:	cmp	w8, #0x1
    5968:	mov	w8, #0x2                   	// #2
    596c:	cinc	w0, w8, ne  // ne = any
    5970:	b	5980 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE+0x60>
    5974:	mov	w0, wzr
    5978:	b	5980 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE+0x60>
    597c:	mov	w0, #0x1                   	// #1
    5980:	ldr	x19, [sp, #16]
    5984:	ldp	x29, x30, [sp], #32
    5988:	ret
    598c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5990:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5994:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5998:	add	x0, x0, #0x0
    599c:	add	x1, x1, #0x0
    59a0:	add	x3, x3, #0x0
    59a4:	mov	w2, #0x69                  	// #105
    59a8:	bl	0 <__assert_fail>
    59ac:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    59b0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    59b4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    59b8:	add	x0, x0, #0x0
    59bc:	add	x1, x1, #0x0
    59c0:	add	x3, x3, #0x0
    59c4:	mov	w2, #0x108                 	// #264
    59c8:	bl	0 <__assert_fail>

00000000000059cc <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_>:
    59cc:	sub	sp, sp, #0x60
    59d0:	stp	x29, x30, [sp, #16]
    59d4:	stp	x26, x25, [sp, #32]
    59d8:	stp	x24, x23, [sp, #48]
    59dc:	stp	x22, x21, [sp, #64]
    59e0:	stp	x20, x19, [sp, #80]
    59e4:	add	x29, sp, #0x10
    59e8:	cmp	x0, x1
    59ec:	b.eq	5ac8 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xfc>  // b.none
    59f0:	add	x8, x0, #0x8
    59f4:	mov	x19, x0
    59f8:	cmp	x8, x1
    59fc:	b.eq	5ac8 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xfc>  // b.none
    5a00:	mov	x20, x2
    5a04:	sub	x23, x1, #0x8
    5a08:	mov	x24, x19
    5a0c:	mov	x21, x24
    5a10:	ldr	x8, [x21, #8]!
    5a14:	ldr	x9, [x19]
    5a18:	add	x0, sp, #0x8
    5a1c:	stp	x9, x8, [sp]
    5a20:	ldp	x1, x8, [x20, #208]
    5a24:	sub	x8, x8, x1
    5a28:	asr	x2, x8, #3
    5a2c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a30:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5a34:	ldp	x1, x8, [x20, #208]
    5a38:	ldp	w26, w25, [sp, #8]
    5a3c:	mov	w22, w0
    5a40:	mov	x0, sp
    5a44:	sub	x8, x8, x1
    5a48:	asr	x2, x8, #3
    5a4c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a50:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5a54:	ldr	w8, [sp]
    5a58:	cmp	w26, w8
    5a5c:	b.cs	5a84 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xb8>  // b.hs, b.nlast
    5a60:	ldr	x22, [x24, #8]
    5a64:	subs	x2, x21, x19
    5a68:	b.eq	5a7c <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xb0>  // b.none
    5a6c:	sub	x8, x24, x2
    5a70:	add	x0, x8, #0x10
    5a74:	mov	x1, x19
    5a78:	bl	0 <memmove>
    5a7c:	str	x22, [x19]
    5a80:	b	5a98 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xcc>
    5a84:	cmp	w8, w26
    5a88:	b.cs	5aa8 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xdc>  // b.hs, b.nlast
    5a8c:	mov	x0, x21
    5a90:	mov	x1, x20
    5a94:	bl	5ae4 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_>
    5a98:	add	x24, x24, #0x8
    5a9c:	cmp	x23, x24
    5aa0:	b.ne	5a0c <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0x40>  // b.any
    5aa4:	b	5ac8 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xfc>
    5aa8:	cmp	w22, w0
    5aac:	b.cc	5a60 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0x94>  // b.lo, b.ul, b.last
    5ab0:	cmp	w0, w22
    5ab4:	b.cc	5a8c <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xc0>  // b.lo, b.ul, b.last
    5ab8:	ldr	w8, [sp, #4]
    5abc:	cmp	w25, w8
    5ac0:	b.cc	5a60 <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0x94>  // b.lo, b.ul, b.last
    5ac4:	b	5a8c <_ZSt16__insertion_sortIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_+0xc0>
    5ac8:	ldp	x20, x19, [sp, #80]
    5acc:	ldp	x22, x21, [sp, #64]
    5ad0:	ldp	x24, x23, [sp, #48]
    5ad4:	ldp	x26, x25, [sp, #32]
    5ad8:	ldp	x29, x30, [sp, #16]
    5adc:	add	sp, sp, #0x60
    5ae0:	ret

0000000000005ae4 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_>:
    5ae4:	sub	sp, sp, #0x60
    5ae8:	stp	x29, x30, [sp, #16]
    5aec:	str	x25, [sp, #32]
    5af0:	stp	x24, x23, [sp, #48]
    5af4:	stp	x22, x21, [sp, #64]
    5af8:	stp	x20, x19, [sp, #80]
    5afc:	add	x29, sp, #0x10
    5b00:	ldr	x22, [x0]
    5b04:	mov	x20, x1
    5b08:	mov	x19, x0
    5b0c:	mov	x23, x0
    5b10:	ldr	x8, [x23, #-8]!
    5b14:	str	x22, [x29, #24]
    5b18:	add	x0, x29, #0x18
    5b1c:	str	x8, [sp, #8]
    5b20:	ldp	x1, x8, [x20, #208]
    5b24:	sub	x8, x8, x1
    5b28:	asr	x2, x8, #3
    5b2c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b30:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5b34:	ldp	x1, x8, [x20, #208]
    5b38:	ldp	w25, w24, [x29, #24]
    5b3c:	mov	w21, w0
    5b40:	add	x0, sp, #0x8
    5b44:	sub	x8, x8, x1
    5b48:	asr	x2, x8, #3
    5b4c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b50:	bl	5920 <_ZL20getMetadataTypeOrderPKN4llvm8MetadataE>
    5b54:	ldr	w8, [sp, #8]
    5b58:	cmp	w25, w8
    5b5c:	b.cc	5b84 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_+0xa0>  // b.lo, b.ul, b.last
    5b60:	cmp	w8, w25
    5b64:	b.cc	5b94 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_+0xb0>  // b.lo, b.ul, b.last
    5b68:	cmp	w21, w0
    5b6c:	b.cc	5b84 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_+0xa0>  // b.lo, b.ul, b.last
    5b70:	cmp	w0, w21
    5b74:	b.cc	5b94 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_+0xb0>  // b.lo, b.ul, b.last
    5b78:	ldr	w8, [sp, #12]
    5b7c:	cmp	w24, w8
    5b80:	b.cs	5b94 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_+0xb0>  // b.hs, b.nlast
    5b84:	ldur	x8, [x19, #-8]
    5b88:	str	x8, [x19]
    5b8c:	mov	x19, x23
    5b90:	b	5b10 <_ZSt25__unguarded_linear_insertIPN4llvm15ValueEnumerator7MDIndexEN9__gnu_cxx5__ops14_Val_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_+0x2c>
    5b94:	str	x22, [x19]
    5b98:	ldp	x20, x19, [sp, #80]
    5b9c:	ldp	x22, x21, [sp, #64]
    5ba0:	ldp	x24, x23, [sp, #48]
    5ba4:	ldr	x25, [sp, #32]
    5ba8:	ldp	x29, x30, [sp, #16]
    5bac:	add	sp, sp, #0x60
    5bb0:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	3c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x3c>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19, #16]
  24:	cbz	x0, 2c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	add	x19, x19, #0x28
  30:	cmp	x21, x19
  34:	b.ne	20 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x20>  // b.any
  38:	ldr	x19, [x20]
  3c:	cbz	x19, 54 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EED2Ev+0x54>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZNK4llvm14GlobalVariable19getAttributesAsListEj:

0000000000000000 <_ZNK4llvm14GlobalVariable19getAttributesAsListEj>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	ldr	x8, [x0, #72]
  10:	cbz	x8, 30 <_ZNK4llvm14GlobalVariable19getAttributesAsListEj+0x30>
  14:	str	w1, [sp]
  18:	str	x8, [sp, #8]
  1c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  20:	mov	x1, sp
  24:	mov	w2, #0x1                   	// #1
  28:	bl	0 <_ZN4llvm13AttributeList3getERNS_11LLVMContextENS_8ArrayRefISt4pairIjNS_12AttributeSetEEEE>
  2c:	b	34 <_ZNK4llvm14GlobalVariable19getAttributesAsListEj+0x34>
  30:	mov	x0, xzr
  34:	ldp	x29, x30, [sp, #16]
  38:	add	sp, sp, #0x20
  3c:	ret

Disassembly of section .text._ZNK4llvm8Function4argsEv:

0000000000000000 <_ZNK4llvm8Function4argsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #18]
  10:	mov	x19, x0
  14:	tbnz	w8, #0, 20 <_ZNK4llvm8Function4argsEv+0x20>
  18:	ldr	x20, [x19, #88]
  1c:	b	34 <_ZNK4llvm8Function4argsEv+0x34>
  20:	mov	x0, x19
  24:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
  28:	ldrb	w8, [x19, #18]
  2c:	ldr	x20, [x19, #88]
  30:	tbnz	w8, #0, 3c <_ZNK4llvm8Function4argsEv+0x3c>
  34:	mov	x8, x20
  38:	b	48 <_ZNK4llvm8Function4argsEv+0x48>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
  44:	ldr	x8, [x19, #88]
  48:	ldr	x9, [x19, #96]
  4c:	mov	x0, x20
  50:	ldp	x20, x19, [sp, #16]
  54:	mov	w10, #0x28                  	// #40
  58:	madd	x1, x9, x10, x8
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	str	x1, [sp, #8]
  14:	add	x1, sp, #0x8
  18:	mov	x2, sp
  1c:	mov	x20, x0
  20:	mov	x19, x8
  24:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_>
  28:	tbz	w0, #0, 44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_+0x44>
  2c:	ldr	w9, [x20, #24]
  30:	ldp	x8, x10, [x20]
  34:	ldr	x11, [sp]
  38:	add	x9, x10, x9, lsl #4
  3c:	str	x11, [x19, #16]
  40:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_+0x54>
  44:	ldr	w9, [x20, #24]
  48:	ldp	x8, x10, [x20]
  4c:	add	x9, x10, x9, lsl #4
  50:	str	x9, [x19, #16]
  54:	stp	x20, x8, [x19]
  58:	str	x9, [x19, #24]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x29, x30, [sp, #16]
  64:	add	sp, sp, #0x30
  68:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12UniqueVectorIPKNS_6ComdatEE5idForERKS3_:

0000000000000000 <_ZNK4llvm12UniqueVectorIPKNS_6ComdatEE5idForERKS3_>:
   0:	ldr	x11, [x0, #16]
   4:	cbz	x11, 58 <_ZNK4llvm12UniqueVectorIPKNS_6ComdatEE5idForERKS3_+0x58>
   8:	ldr	x9, [x1]
   c:	add	x8, x0, #0x8
  10:	mov	x10, x8
  14:	ldr	x12, [x11, #32]
  18:	add	x13, x11, #0x18
  1c:	add	x14, x11, #0x10
  20:	cmp	x12, x9
  24:	csel	x10, x10, x11, cc  // cc = lo, ul, last
  28:	csel	x11, x13, x14, cc  // cc = lo, ul, last
  2c:	ldr	x11, [x11]
  30:	cbnz	x11, 14 <_ZNK4llvm12UniqueVectorIPKNS_6ComdatEE5idForERKS3_+0x14>
  34:	cmp	x10, x8
  38:	b.eq	58 <_ZNK4llvm12UniqueVectorIPKNS_6ComdatEE5idForERKS3_+0x58>  // b.none
  3c:	ldr	x11, [x10, #32]
  40:	cmp	x9, x11
  44:	csel	x9, x8, x10, cc  // cc = lo, ul, last
  48:	cmp	x9, x8
  4c:	b.eq	58 <_ZNK4llvm12UniqueVectorIPKNS_6ComdatEE5idForERKS3_+0x58>  // b.none
  50:	ldr	w0, [x9, #40]
  54:	ret
  58:	mov	w0, wzr
  5c:	ret

Disassembly of section .text._ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE:

0000000000000000 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x0, x0, #0x100
   c:	bl	0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  10:	lsr	x8, x0, #32
  14:	cbz	w8, 24 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x24>
  18:	sub	w0, w8, #0x1
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  28:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  2c:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x9b                  	// #155
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	str	x1, [sp, #8]
  14:	add	x1, sp, #0x8
  18:	mov	x2, sp
  1c:	mov	x20, x0
  20:	mov	x19, x8
  24:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_>
  28:	tbz	w0, #0, 44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_+0x44>
  2c:	ldr	w9, [x20, #24]
  30:	ldp	x8, x10, [x20]
  34:	ldr	x11, [sp]
  38:	add	x9, x10, x9, lsl #4
  3c:	str	x11, [x19, #16]
  40:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E4findES4_+0x54>
  44:	ldr	w9, [x20, #24]
  48:	ldp	x8, x10, [x20]
  4c:	add	x9, x10, x9, lsl #4
  50:	str	x9, [x19, #16]
  54:	stp	x20, x8, [x19]
  58:	str	x9, [x19, #24]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x29, x30, [sp, #16]
  64:	add	sp, sp, #0x30
  68:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEneERKS9_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEneERKSB_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv:

0000000000000000 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 3c <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv+0x3c>
  10:	ldr	w10, [x0, #12]
  14:	sub	x9, x8, #0x1
  18:	cmp	x9, x10
  1c:	b.hi	5c <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv+0x5c>  // b.pmore
  20:	ldr	x10, [x0]
  24:	add	x8, x10, x8, lsl #3
  28:	ldur	x8, [x8, #-8]
  2c:	str	w9, [x0, #8]
  30:	mov	x0, x8
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>
  40:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>
  44:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xa7                  	// #167
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>
  60:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>
  64:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPKNS_6MDNodeEE12pop_back_valEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x43                  	// #67
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb0EEneERKNS0_IS3_S5_S7_SA_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_>
  58:	ldr	w8, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE9push_backEOS8_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKNS_6MDNodeELb1EE9push_backERKS3_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15ValueEnumerator7MDIndexELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x1, [sp, #8]
  10:	add	x1, sp, #0x8
  14:	mov	x2, sp
  18:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_>
  1c:	tbz	w0, #0, 34 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_+0x34>
  20:	ldr	x8, [sp]
  24:	ldr	x9, [x8, #8]
  28:	and	x8, x9, #0xffffffff00000000
  2c:	and	x9, x9, #0xffffffff
  30:	b	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_+0x3c>
  34:	mov	x8, xzr
  38:	mov	x9, xzr
  3c:	ldp	x29, x30, [sp, #16]
  40:	orr	x0, x9, x8
  44:	add	sp, sp, #0x20
  48:	ret

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #60
  14:	cbnz	x8, 98 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm+0x98>
  18:	ldr	x9, [x0, #16]
  1c:	ldr	x8, [x0]
  20:	mov	x19, x1
  24:	mov	x20, x0
  28:	sub	x9, x9, x8
  2c:	cmp	x1, x9, asr #3
  30:	b.ls	88 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm+0x88>  // b.plast
  34:	ldr	x9, [x20, #8]
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	sub	x22, x9, x8
  44:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm>
  48:	ldp	x1, x8, [x20]
  4c:	mov	x21, x0
  50:	sub	x2, x8, x1
  54:	cmp	x2, #0x1
  58:	b.lt	68 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm+0x68>  // b.tstop
  5c:	mov	x0, x21
  60:	bl	0 <memmove>
  64:	ldr	x1, [x20]
  68:	asr	x22, x22, #3
  6c:	cbz	x1, 78 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm+0x78>
  70:	mov	x0, x1
  74:	bl	0 <_ZdlPv>
  78:	add	x8, x21, x22, lsl #3
  7c:	add	x9, x21, x19, lsl #3
  80:	stp	x21, x8, [x20]
  84:	str	x9, [x20, #16]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldp	x22, x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE7reserveEm>
  9c:	add	x0, x0, #0x0
  a0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE:

0000000000000000 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #4]
   c:	cbz	w8, 30 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE+0x30>
  10:	cmp	x2, x8
  14:	b.cc	50 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE+0x50>  // b.lo, b.ul, b.last
  18:	sub	w8, w8, #0x1
  1c:	cmp	x2, x8
  20:	b.ls	70 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE+0x70>  // b.plast
  24:	ldr	x0, [x1, x8, lsl #3]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  34:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  38:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x55                  	// #85
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  54:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  58:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x56                  	// #86
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  74:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  78:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator7MDIndex3getENS_8ArrayRefIPKNS_8MetadataEEE>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0xfa                  	// #250
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E6lookupERKj:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E6lookupERKj>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	add	x2, sp, #0x8
  10:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E6lookupERKj>
  14:	tbz	w0, #0, 30 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E6lookupERKj+0x30>
  18:	ldr	x8, [sp, #8]
  1c:	ldur	x9, [x8, #4]
  20:	ldr	w1, [x8, #12]
  24:	and	x8, x9, #0xffffffff00000000
  28:	and	x9, x9, #0xffffffff
  2c:	b	3c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E6lookupERKj+0x3c>
  30:	mov	x9, xzr
  34:	mov	x8, xzr
  38:	mov	x1, xzr
  3c:	ldp	x29, x30, [sp, #16]
  40:	orr	x0, x8, x9
  44:	add	sp, sp, #0x20
  48:	ret

Disassembly of section .text._ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_:

0000000000000000 <_ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_>
  1c:	mov	x21, x0
  20:	ldr	w0, [x0]
  24:	cbnz	w0, 78 <_ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_+0x78>
  28:	mov	x8, x20
  2c:	ldr	x9, [x8, #48]!
  30:	ldr	x1, [x8, #8]
  34:	sub	x9, x1, x9
  38:	lsr	x9, x9, #3
  3c:	add	w0, w9, #0x1
  40:	str	w0, [x21]
  44:	ldr	x9, [x8, #16]
  48:	cmp	x9, x1
  4c:	b.eq	68 <_ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_+0x68>  // b.none
  50:	ldr	x8, [x19]
  54:	str	x8, [x1]
  58:	ldr	x8, [x20, #56]
  5c:	add	x8, x8, #0x8
  60:	str	x8, [x20, #56]
  64:	b	78 <_ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_+0x78>
  68:	mov	x0, x8
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm12UniqueVectorIPKNS_6ComdatEE6insertERKS3_>
  74:	ldr	w0, [x21]
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_15LocalAsMetadataELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E5eraseERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E5eraseERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x2, x29, #0x18
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E5eraseERKS4_>
  18:	tbz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E5eraseERKS4_+0x44>
  1c:	ldr	x8, [x29, #24]
  20:	mov	x9, #0xfffffffffffffff0    	// #-16
  24:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E5eraseERKS4_>
  28:	ldr	d0, [x10]
  2c:	str	x9, [x8]
  30:	ldr	d1, [x19, #16]
  34:	mov	w0, #0x1                   	// #1
  38:	add	v0.2s, v1.2s, v0.2s
  3c:	str	d0, [x19, #16]
  40:	b	48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E5eraseERKS4_+0x48>
  44:	mov	w0, wzr
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E5eraseERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E5eraseERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x2, x29, #0x18
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E5eraseERKS4_>
  18:	tbz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E5eraseERKS4_+0x44>
  1c:	ldr	x8, [x29, #24]
  20:	mov	x9, #0xfffffffffffffff8    	// #-8
  24:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E5eraseERKS4_>
  28:	ldr	d0, [x10]
  2c:	str	x9, [x8]
  30:	ldr	d1, [x19, #16]
  34:	mov	w0, #0x1                   	// #1
  38:	add	v0.2s, v1.2s, v0.2s
  3c:	str	d0, [x19, #16]
  40:	b	48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E5eraseERKS4_+0x48>
  44:	mov	w0, wzr
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE6resizeEm:

0000000000000000 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE6resizeEm>:
   0:	ldp	x9, x8, [x0]
   4:	sub	x10, x8, x9
   8:	asr	x10, x10, #4
   c:	cmp	x10, x1
  10:	b.cs	1c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE6resizeEm+0x1c>  // b.hs, b.nlast
  14:	sub	x1, x1, x10
  18:	b	0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE6resizeEm>
  1c:	b.ls	30 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE6resizeEm+0x30>  // b.plast
  20:	add	x9, x9, x1, lsl #4
  24:	cmp	x9, x8
  28:	b.eq	30 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE6resizeEm+0x30>  // b.none
  2c:	str	x9, [x0, #8]
  30:	ret

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE6resizeEm>:
   0:	ldp	x9, x8, [x0]
   4:	sub	x10, x8, x9
   8:	asr	x10, x10, #3
   c:	cmp	x10, x1
  10:	b.cs	1c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE6resizeEm+0x1c>  // b.hs, b.nlast
  14:	sub	x1, x1, x10
  18:	b	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE6resizeEm>
  1c:	b.ls	30 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE6resizeEm+0x30>  // b.plast
  20:	add	x9, x9, x1, lsl #3
  24:	cmp	x9, x8
  28:	b.eq	30 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE6resizeEm+0x30>  // b.none
  2c:	str	x9, [x0, #8]
  30:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x1, [sp, #8]
  10:	add	x1, sp, #0x8
  14:	mov	x2, sp
  18:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_>
  1c:	tbz	w0, #0, 38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_+0x38>
  20:	ldr	x8, [sp]
  24:	ldr	x10, [x8, #8]
  28:	and	x8, x10, #0xffffff0000000000
  2c:	and	x9, x10, #0xff00000000
  30:	and	x10, x10, #0xffffffff
  34:	b	44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E6lookupES4_+0x44>
  38:	mov	x8, xzr
  3c:	mov	x9, xzr
  40:	mov	x10, xzr
  44:	ldp	x29, x30, [sp, #16]
  48:	orr	x8, x9, x8
  4c:	orr	x0, x8, x10
  50:	add	sp, sp, #0x20
  54:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 38 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_+0x38>
  10:	ldrb	w8, [x8, #16]
  14:	mov	w0, #0x1                   	// #1
  18:	cbz	w8, 30 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_+0x30>
  1c:	cmp	w8, #0x3
  20:	b.eq	30 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_+0x30>  // b.none
  24:	sub	w8, w8, #0x1
  28:	cmp	w8, #0x2
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>
  3c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>
  40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPKNS_5ValueES4_E4doitERKS4_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x69                  	// #105
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_+0x4c>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	strb	wzr, [x0, #12]
  48:	str	x8, [x0]
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x3
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	x9, [x20, #8]
  5c:	str	x9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_>
  58:	ldr	w8, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE9push_backEOS5_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE12emplace_backIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE12emplace_backIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x8, x9, [x0, #8]
  10:	mov	x4, x3
  14:	mov	x3, x2
  18:	mov	x19, x0
  1c:	cmp	x8, x9
  20:	mov	x2, x1
  24:	b.eq	5c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE12emplace_backIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvDpOT_+0x5c>  // b.none
  28:	ldr	x9, [x2]
  2c:	ldr	x10, [x3]
  30:	ldr	x1, [x4]
  34:	add	x0, x8, #0x10
  38:	add	x2, x29, #0x18
  3c:	stp	x9, x10, [x8]
  40:	bl	0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE12emplace_backIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvDpOT_>
  44:	ldr	x8, [x19, #8]
  48:	add	x8, x8, #0x28
  4c:	str	x8, [x19, #8]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	mov	x0, x19
  60:	ldr	x19, [sp, #16]
  64:	mov	x1, x8
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE12emplace_backIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvDpOT_>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	x26, x2
  24:	adrp	x2, 0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  28:	mov	x23, x1
  2c:	add	x2, x2, #0x0
  30:	mov	w1, #0x1                   	// #1
  34:	mov	x24, x4
  38:	mov	x25, x3
  3c:	mov	x19, x0
  40:	bl	0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  44:	ldp	x21, x27, [x19]
  48:	mov	x20, x0
  4c:	mov	x0, x19
  50:	mov	x1, x20
  54:	subs	x28, x23, x21
  58:	bl	0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  5c:	ldr	x8, [x26]
  60:	ldr	x9, [x25]
  64:	ldr	x1, [x24]
  68:	add	x10, x0, x28
  6c:	mov	x22, x0
  70:	add	x0, x10, #0x10
  74:	add	x2, sp, #0x8
  78:	stp	x8, x9, [x10]
  7c:	bl	0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  80:	cmp	x23, x21
  84:	mov	x8, x22
  88:	b.eq	c4 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc4>  // b.none
  8c:	mov	x8, x22
  90:	mov	x9, x21
  94:	ldr	q0, [x9]
  98:	str	q0, [x8]
  9c:	ldr	q0, [x9, #16]
  a0:	str	q0, [x8, #16]
  a4:	ldr	x10, [x9, #32]
  a8:	str	x10, [x8, #32]
  ac:	stp	xzr, xzr, [x9, #16]
  b0:	str	xzr, [x9, #32]
  b4:	add	x9, x9, #0x28
  b8:	cmp	x9, x23
  bc:	add	x8, x8, #0x28
  c0:	b.ne	94 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x94>  // b.any
  c4:	cmp	x27, x23
  c8:	add	x24, x8, #0x28
  cc:	b.eq	100 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x100>  // b.none
  d0:	ldr	q0, [x23]
  d4:	str	q0, [x24]
  d8:	ldr	q0, [x23, #16]
  dc:	str	q0, [x24, #16]
  e0:	ldr	x8, [x23, #32]
  e4:	str	x8, [x24, #32]
  e8:	stp	xzr, xzr, [x23, #16]
  ec:	str	xzr, [x23, #32]
  f0:	add	x23, x23, #0x28
  f4:	cmp	x23, x27
  f8:	add	x24, x24, #0x28
  fc:	b.ne	d0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd0>  // b.any
 100:	cbz	x21, 10c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x10c>
 104:	mov	x0, x21
 108:	bl	0 <_ZdlPv>
 10c:	mov	w8, #0x28                  	// #40
 110:	madd	x8, x20, x8, x22
 114:	stp	x22, x24, [x19]
 118:	str	x8, [x19, #16]
 11c:	ldp	x20, x19, [sp, #96]
 120:	ldp	x22, x21, [sp, #80]
 124:	ldp	x24, x23, [sp, #64]
 128:	ldp	x26, x25, [sp, #48]
 12c:	ldp	x28, x27, [sp, #32]
 130:	ldp	x29, x30, [sp, #16]
 134:	add	sp, sp, #0x70
 138:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEEC2EmRKS0_:

0000000000000000 <_ZNSt6vectorIjSaIjEEC2EmRKS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #61
  14:	cbnz	x8, 60 <_ZNSt6vectorIjSaIjEEC2EmRKS0_+0x60>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	stp	xzr, xzr, [x0]
  24:	str	xzr, [x0, #16]
  28:	bl	0 <_ZNSt6vectorIjSaIjEEC2EmRKS0_>
  2c:	add	x21, x0, x20, lsl #2
  30:	stp	x0, x0, [x19]
  34:	str	x21, [x19, #16]
  38:	cbz	x20, 4c <_ZNSt6vectorIjSaIjEEC2EmRKS0_+0x4c>
  3c:	lsl	x2, x20, #2
  40:	mov	w1, wzr
  44:	bl	0 <memset>
  48:	mov	x0, x21
  4c:	str	x0, [x19, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEEC2EmRKS0_>
  64:	add	x0, x0, #0x0
  68:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #61
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #2
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNKSt6vectorIN4llvm12UseListOrderESaIS1_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm12UseListOrderESaIS1_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  10:	movk	x8, #0x333, lsl #48
  14:	sub	x9, x9, x10
  18:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  1c:	asr	x9, x9, #3
  20:	movk	x10, #0xcccd
  24:	mul	x9, x9, x10
  28:	sub	x10, x8, x9
  2c:	cmp	x10, x1
  30:	b.cc	60 <_ZNKSt6vectorIN4llvm12UseListOrderESaIS1_EE12_M_check_lenEmPKc+0x60>  // b.lo, b.ul, b.last
  34:	cmp	x9, x1
  38:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  3c:	adds	x9, x10, x9
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x9, x8
  48:	cset	w11, hi  // hi = pmore
  4c:	orr	w10, w10, w11
  50:	cmp	w10, #0x0
  54:	csel	x0, x8, x9, ne  // ne = any
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x0, x2
  64:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm12UseListOrderESaIS1_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm12UseListOrderESaIS1_EE11_M_allocateEm>:
   0:	cbz	x1, 24 <_ZNSt12_Vector_baseIN4llvm12UseListOrderESaIS1_EE11_M_allocateEm+0x24>
   4:	mov	x8, #0x3333333333333333    	// #3689348814741910323
   8:	movk	x8, #0x3334
   c:	movk	x8, #0x333, lsl #48
  10:	cmp	x1, x8
  14:	b.cs	2c <_ZNSt12_Vector_baseIN4llvm12UseListOrderESaIS1_EE11_M_allocateEm+0x2c>  // b.hs, b.nlast
  18:	add	x8, x1, x1, lsl #2
  1c:	lsl	x0, x8, #3
  20:	b	0 <_Znwm>
  24:	mov	x0, xzr
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	w9, [x20, #8]
  5c:	str	w9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x4
  18:	cmn	x10, #0x4
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x4
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0xa0>  // b.none
  74:	cmn	x14, #0x8
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E15LookupBucketForIS4_EEbRKT_RPKSB_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffffc    	// #-4
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE15allocateBucketsEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE15allocateBucketsEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	cmp	w1, #0x1
  10:	b.ls	30 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE15allocateBucketsEj+0x30>  // b.plast
  14:	mov	w19, w1
  18:	lsl	x0, x19, #4
  1c:	bl	0 <_Znwm>
  20:	mov	x1, x19
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE15allocateBucketsEj>
  34:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE15allocateBucketsEj>
  38:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE15allocateBucketsEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x47d                 	// #1149
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #8]
   c:	and	w8, w9, #0x1
  10:	stp	w8, wzr, [x0, #8]
  14:	tbnz	w9, #0, 24 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x24>
  18:	ldr	w9, [x0, #24]
  1c:	sub	w10, w9, #0x1
  20:	b	2c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x2c>
  24:	mov	w10, wzr
  28:	mov	w9, #0x1                   	// #1
  2c:	tst	w10, w9
  30:	b.ne	70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x70>  // b.any
  34:	cbnz	w8, 48 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x48>
  38:	ldr	x8, [x0, #16]
  3c:	ldr	w9, [x0, #24]
  40:	cbnz	x9, 54 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x54>
  44:	b	68 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x68>
  48:	add	x8, x0, #0x10
  4c:	mov	w9, #0x1                   	// #1
  50:	cbz	x9, 68 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x68>
  54:	lsl	x9, x9, #4
  58:	mov	w10, #0xffffffff            	// #-1
  5c:	subs	x9, x9, #0x10
  60:	str	w10, [x8], #16
  64:	b.ne	5c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv+0x5c>  // b.any
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv>
  74:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv>
  78:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E9initEmptyEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x15c                 	// #348
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj+0x3c>
  1c:	mov	w8, #0x18                  	// #24
  20:	umull	x0, w0, w8
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	48 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x48>  // b.any
  1c:	cbz	w9, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x40>
  20:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  24:	ldr	x8, [x0, #8]
  28:	ldr	q0, [x10]
  2c:	add	x9, x9, x9, lsl #1
  30:	lsl	x9, x9, #3
  34:	subs	x9, x9, #0x18
  38:	str	q0, [x8], #24
  3c:	b.ne	34 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x34>  // b.any
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  4c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  50:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x15c                 	// #348
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffffc    	// #-4
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	w9, [x20, #8]
  5c:	str	w9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EEC2EPKS8_SB_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	40 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv+0x40>  // b.pmore
  14:	b.eq	38 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv+0x38>  // b.none
  18:	ldr	x10, [x8]
  1c:	orr	x10, x10, #0x8
  20:	cmn	x10, #0x8
  24:	b.ne	38 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv+0x38>  // b.any
  28:	add	x8, x8, #0x10
  2c:	cmp	x9, x8
  30:	str	x8, [x0, #16]
  34:	b.ne	18 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv>
  44:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv>
  48:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEELb1EE23AdvancePastEmptyBucketsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x4e0                 	// #1248
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EEC2EPKSA_SD_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	40 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv+0x40>  // b.pmore
  14:	b.eq	38 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv+0x38>  // b.none
  18:	ldr	x10, [x8]
  1c:	orr	x10, x10, #0x4
  20:	cmn	x10, #0x4
  24:	b.ne	38 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv+0x38>  // b.any
  28:	add	x8, x8, #0x10
  2c:	cmp	x9, x8
  30:	str	x8, [x0, #16]
  34:	b.ne	18 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv>
  44:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv>
  48:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EELb1EE23AdvancePastEmptyBucketsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x4e0                 	// #1248
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l:

0000000000000000 <_ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	stp	xzr, xzr, [x0, #8]
  14:	str	x2, [x0]
  18:	mov	x0, x2
  1c:	mov	x19, x1
  20:	bl	0 <_ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l>
  24:	stp	x1, x0, [x20, #8]
  28:	cbz	x0, 74 <_ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l+0x74>
  2c:	cbz	x1, 74 <_ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l+0x74>
  30:	ldr	q0, [x19]
  34:	cmp	x1, #0x1
  38:	str	q0, [x0]
  3c:	b.eq	64 <_ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l+0x64>  // b.none
  40:	add	x8, x0, x1, lsl #4
  44:	mov	x9, x0
  48:	ldr	q0, [x9]
  4c:	add	x0, x9, #0x10
  50:	add	x10, x9, #0x20
  54:	cmp	x10, x8
  58:	str	q0, [x9, #16]
  5c:	mov	x9, x0
  60:	b.ne	48 <_ZNSt17_Temporary_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_EC2ESC_l+0x48>  // b.any
  64:	ldr	x8, [x0]
  68:	str	x8, [x19]
  6c:	ldr	w8, [x0, #8]
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	ret

Disassembly of section .text._ZSt20get_temporary_bufferISt4pairIPKN4llvm5ValueEjEES0_IPT_lEl:

0000000000000000 <_ZSt20get_temporary_bufferISt4pairIPKN4llvm5ValueEjEES0_IPT_lEl>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	cmp	x0, #0x1
  10:	b.lt	48 <_ZSt20get_temporary_bufferISt4pairIPKN4llvm5ValueEjEES0_IPT_lEl+0x48>  // b.tstop
  14:	adrp	x20, 0 <_ZSt7nothrow>
  18:	ldr	x20, [x20]
  1c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  20:	cmp	x0, x8
  24:	csel	x19, x0, x8, lt  // lt = tstop
  28:	lsl	x0, x19, #4
  2c:	mov	x1, x20
  30:	bl	0 <_ZnwmRKSt9nothrow_t>
  34:	cbnz	x0, 50 <_ZSt20get_temporary_bufferISt4pairIPKN4llvm5ValueEjEES0_IPT_lEl+0x50>
  38:	lsr	x19, x19, #1
  3c:	cbnz	x19, 28 <_ZSt20get_temporary_bufferISt4pairIPKN4llvm5ValueEjEES0_IPT_lEl+0x28>
  40:	mov	x0, xzr
  44:	b	50 <_ZSt20get_temporary_bufferISt4pairIPKN4llvm5ValueEjEES0_IPT_lEl+0x50>
  48:	mov	x0, xzr
  4c:	mov	x19, xzr
  50:	mov	x1, x19
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE:

0000000000000000 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x20, x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	add	x20, x0, #0x18
  14:	mov	x19, x0
  18:	add	x8, sp, #0x20
  1c:	mov	x0, x20
  20:	bl	0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  24:	ldp	x10, x8, [x19, #24]
  28:	ldr	w9, [x19, #48]
  2c:	add	x0, sp, #0x20
  30:	mov	x1, sp
  34:	stp	x20, x10, [sp]
  38:	add	x8, x8, x9, lsl #4
  3c:	stp	x8, x8, [sp, #16]
  40:	bl	0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  44:	tbz	w0, #0, 74 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE+0x74>
  48:	ldp	x8, x9, [sp, #32]
  4c:	ldr	x8, [x8]
  50:	cmp	x8, x9
  54:	b.ne	94 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE+0x94>  // b.any
  58:	ldr	x8, [sp, #48]
  5c:	ldp	x20, x19, [sp, #80]
  60:	ldp	x29, x30, [sp, #64]
  64:	ldr	w8, [x8, #8]
  68:	sub	w0, w8, #0x1
  6c:	add	sp, sp, #0x60
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  78:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  7c:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xa9                  	// #169
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  98:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  9c:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator9getTypeIDEPNS_4TypeE>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x4b9                 	// #1209
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	str	x1, [sp, #8]
  14:	add	x1, sp, #0x8
  18:	mov	x2, sp
  1c:	mov	x20, x0
  20:	mov	x19, x8
  24:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>
  28:	tbz	w0, #0, 44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x44>
  2c:	ldr	w9, [x20, #24]
  30:	ldp	x8, x10, [x20]
  34:	ldr	x11, [sp]
  38:	add	x9, x10, x9, lsl #4
  3c:	str	x11, [x19, #16]
  40:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x54>
  44:	ldr	w9, [x20, #24]
  48:	ldp	x8, x10, [x20]
  4c:	add	x9, x10, x9, lsl #4
  50:	str	x9, [x19, #16]
  54:	stp	x20, x8, [x19]
  58:	str	x9, [x19, #24]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x29, x30, [sp, #16]
  64:	add	sp, sp, #0x30
  68:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEneERKS8_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag:

0000000000000000 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag>:
   0:	cmp	x0, x1
   4:	b.eq	12c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x12c>  // b.none
   8:	subs	x10, x2, x1
   c:	b.eq	60 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x60>  // b.none
  10:	sub	x8, x2, x0
  14:	asr	x8, x8, #4
  18:	sub	x9, x1, x0
  1c:	cmp	x8, x9, asr #3
  20:	b.ne	68 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x68>  // b.any
  24:	mov	x8, x1
  28:	ldr	x9, [x8]
  2c:	ldr	x10, [x0]
  30:	str	x9, [x0]
  34:	str	x10, [x8]
  38:	ldr	w9, [x8, #8]
  3c:	ldr	w10, [x0, #8]
  40:	str	w9, [x0, #8]
  44:	add	x0, x0, #0x10
  48:	str	w10, [x8, #8]
  4c:	cmp	x1, x0
  50:	add	x8, x8, #0x10
  54:	b.ne	28 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x28>  // b.any
  58:	mov	x2, x1
  5c:	b	12c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x12c>
  60:	mov	x2, x0
  64:	b	12c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x12c>
  68:	asr	x9, x9, #4
  6c:	add	x2, x0, x10
  70:	sub	x10, x8, x9
  74:	cmp	x9, x10
  78:	b.ge	d4 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xd4>  // b.tcont
  7c:	cmp	x10, #0x1
  80:	b.lt	b8 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xb8>  // b.tstop
  84:	add	x11, x0, x9, lsl #4
  88:	ldr	x12, [x11]
  8c:	ldr	x13, [x0]
  90:	subs	x10, x10, #0x1
  94:	str	x12, [x0]
  98:	str	x13, [x11]
  9c:	ldr	w12, [x11, #8]
  a0:	ldr	w13, [x0, #8]
  a4:	str	w12, [x0, #8]
  a8:	str	w13, [x11, #8]
  ac:	add	x0, x0, #0x10
  b0:	add	x11, x11, #0x10
  b4:	b.ne	88 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x88>  // b.any
  b8:	sdiv	x10, x8, x9
  bc:	msub	x8, x10, x9, x8
  c0:	cbz	x8, 12c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x12c>
  c4:	sub	x10, x9, x8
  c8:	mov	x8, x9
  cc:	mov	x9, x10
  d0:	b	70 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x70>
  d4:	cmp	x9, #0x1
  d8:	b.lt	114 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x114>  // b.tstop
  dc:	sub	x12, x0, #0x8
  e0:	add	x11, x12, x8, lsl #4
  e4:	add	x12, x12, x9, lsl #4
  e8:	ldur	x13, [x11, #-8]
  ec:	ldur	x14, [x12, #-8]
  f0:	sub	x9, x9, #0x1
  f4:	stur	x13, [x12, #-8]
  f8:	stur	x14, [x11, #-8]
  fc:	ldr	w13, [x11]
 100:	ldr	w14, [x12]
 104:	str	w13, [x12], #-16
 108:	str	w14, [x11], #-16
 10c:	cbnz	x9, e8 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xe8>
 110:	b	11c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x11c>
 114:	add	x9, x0, x8, lsl #4
 118:	sub	x0, x9, x10, lsl #4
 11c:	sdiv	x9, x8, x10
 120:	msub	x9, x9, x10, x8
 124:	mov	x8, x10
 128:	cbnz	x9, 70 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x70>
 12c:	mov	x0, x2
 130:	ret

Disassembly of section .text._ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_:

0000000000000000 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_>:
   0:	cmp	x3, x4
   4:	b.le	cc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xcc>
   8:	cmp	x4, x6
   c:	b.gt	cc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xcc>
  10:	cbz	x4, 190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>
  14:	sub	x9, x2, x1
  18:	cmp	x9, #0x1
  1c:	mov	x8, x5
  20:	b.lt	58 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x58>  // b.tstop
  24:	lsr	x8, x9, #4
  28:	add	x9, x8, #0x1
  2c:	mov	x8, x5
  30:	mov	x10, x1
  34:	ldr	x11, [x10]
  38:	sub	x9, x9, #0x1
  3c:	cmp	x9, #0x1
  40:	str	x11, [x8]
  44:	ldr	w11, [x10, #8]
  48:	add	x10, x10, #0x10
  4c:	str	w11, [x8, #8]
  50:	add	x8, x8, #0x10
  54:	b.gt	34 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x34>
  58:	sub	x9, x1, x0
  5c:	cmp	x9, #0x1
  60:	b.lt	90 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x90>  // b.tstop
  64:	lsr	x10, x9, #4
  68:	sub	x9, x2, #0x8
  6c:	add	x10, x10, #0x1
  70:	sub	x11, x1, #0x8
  74:	ldur	x12, [x11, #-8]
  78:	sub	x10, x10, #0x1
  7c:	cmp	x10, #0x1
  80:	stur	x12, [x9, #-8]
  84:	ldr	w12, [x11], #-16
  88:	str	w12, [x9], #-16
  8c:	b.gt	74 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x74>
  90:	sub	x8, x8, x5
  94:	cmp	x8, #0x1
  98:	b.lt	190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>  // b.tstop
  9c:	lsr	x8, x8, #4
  a0:	add	x8, x8, #0x1
  a4:	ldr	x9, [x5]
  a8:	sub	x8, x8, #0x1
  ac:	cmp	x8, #0x1
  b0:	str	x9, [x0]
  b4:	ldr	w9, [x5, #8]
  b8:	add	x5, x5, #0x10
  bc:	str	w9, [x0, #8]
  c0:	add	x0, x0, #0x10
  c4:	b.gt	a4 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xa4>
  c8:	b	190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>
  cc:	cmp	x3, x6
  d0:	b.le	d8 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xd8>
  d4:	b	0 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_>
  d8:	cbz	x3, 194 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x194>
  dc:	sub	x9, x1, x0
  e0:	cmp	x9, #0x1
  e4:	mov	x8, x5
  e8:	b.lt	120 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x120>  // b.tstop
  ec:	lsr	x8, x9, #4
  f0:	add	x9, x8, #0x1
  f4:	mov	x8, x5
  f8:	mov	x10, x0
  fc:	ldr	x11, [x10]
 100:	sub	x9, x9, #0x1
 104:	cmp	x9, #0x1
 108:	str	x11, [x8]
 10c:	ldr	w11, [x10, #8]
 110:	add	x10, x10, #0x10
 114:	str	w11, [x8, #8]
 118:	add	x8, x8, #0x10
 11c:	b.gt	fc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xfc>
 120:	sub	x9, x2, x1
 124:	cmp	x9, #0x1
 128:	b.lt	158 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x158>  // b.tstop
 12c:	lsr	x9, x9, #4
 130:	add	x9, x9, #0x1
 134:	ldr	x10, [x1]
 138:	sub	x9, x9, #0x1
 13c:	cmp	x9, #0x1
 140:	str	x10, [x0]
 144:	ldr	w10, [x1, #8]
 148:	add	x1, x1, #0x10
 14c:	str	w10, [x0, #8]
 150:	add	x0, x0, #0x10
 154:	b.gt	134 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x134>
 158:	sub	x9, x8, x5
 15c:	cmp	x9, #0x1
 160:	b.lt	194 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x194>  // b.tstop
 164:	lsr	x9, x9, #4
 168:	add	x9, x9, #0x1
 16c:	sub	x8, x8, #0x8
 170:	mov	x0, x2
 174:	ldur	x10, [x8, #-8]
 178:	sub	x9, x9, #0x1
 17c:	cmp	x9, #0x1
 180:	str	x10, [x0, #-16]!
 184:	ldr	w10, [x8], #-16
 188:	str	w10, [x0, #8]
 18c:	b.gt	174 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x174>
 190:	ret
 194:	mov	x0, x2
 198:	ret

Disassembly of section .text._ZSt18__stable_partitionIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predIPFbRKS7_EEEET_SK_SK_T0_:

0000000000000000 <_ZSt18__stable_partitionIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predIPFbRKS7_EEEET_SK_SK_T0_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x20, x2
  18:	mov	x19, x1
  1c:	bl	0 <_ZSt18__stable_partitionIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predIPFbRKS7_EEEET_SK_SK_T0_>
  20:	cmp	x0, x19
  24:	b.eq	68 <_ZSt18__stable_partitionIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predIPFbRKS7_EEEET_SK_SK_T0_+0x68>  // b.none
  28:	mov	x21, x0
  2c:	sub	x8, x19, x0
  30:	asr	x2, x8, #4
  34:	add	x0, sp, #0x8
  38:	mov	x1, x21
  3c:	bl	0 <_ZSt18__stable_partitionIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predIPFbRKS7_EEEET_SK_SK_T0_>
  40:	ldp	x5, x4, [sp, #16]
  44:	ldr	x3, [sp, #8]
  48:	mov	x0, x21
  4c:	mov	x1, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZSt18__stable_partitionIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predIPFbRKS7_EEEET_SK_SK_T0_>
  58:	ldr	x8, [sp, #24]
  5c:	mov	x19, x0
  60:	mov	x0, x8
  64:	bl	0 <_ZdlPv>
  68:	mov	x0, x19
  6c:	ldp	x20, x19, [sp, #64]
  70:	ldr	x21, [sp, #48]
  74:	ldp	x29, x30, [sp, #32]
  78:	add	sp, sp, #0x50
  7c:	ret

Disassembly of section .text._ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_:

0000000000000000 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x3, #0x1
  20:	mov	x21, x0
  24:	b.eq	140 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x140>  // b.none
  28:	mov	x24, x5
  2c:	mov	x19, x4
  30:	mov	x25, x3
  34:	mov	x20, x2
  38:	mov	x22, x1
  3c:	cmp	x3, x5
  40:	b.le	a0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xa0>
  44:	cmp	x25, #0x0
  48:	cinc	x27, x25, lt  // lt = tstop
  4c:	asr	x26, x27, #1
  50:	add	x23, x21, x26, lsl #4
  54:	mov	x0, x21
  58:	mov	x1, x23
  5c:	mov	x2, x20
  60:	mov	x3, x26
  64:	mov	x4, x19
  68:	mov	x5, x24
  6c:	bl	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>
  70:	cmp	x25, x27, asr #1
  74:	mov	x21, x0
  78:	b.eq	160 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x160>  // b.none
  7c:	sub	x26, x26, x25
  80:	mov	x25, x23
  84:	mov	x0, x25
  88:	blr	x20
  8c:	tbz	w0, #0, 168 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x168>
  90:	adds	x26, x26, #0x1
  94:	add	x25, x25, #0x10
  98:	b.cc	84 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x84>  // b.lo, b.ul, b.last
  9c:	b	18c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x18c>
  a0:	ldr	x8, [x21]
  a4:	add	x23, x21, #0x10
  a8:	cmp	x23, x22
  ac:	add	x24, x19, #0x10
  b0:	str	x8, [x19]
  b4:	ldr	w8, [x21, #8]
  b8:	str	w8, [x19, #8]
  bc:	b.eq	104 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x104>  // b.none
  c0:	mov	x0, x23
  c4:	blr	x20
  c8:	tbz	w0, #0, e4 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xe4>
  cc:	ldr	x8, [x23]
  d0:	str	x8, [x21]
  d4:	ldr	w8, [x23, #8]
  d8:	str	w8, [x21, #8]
  dc:	add	x21, x21, #0x10
  e0:	b	f8 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xf8>
  e4:	ldr	x8, [x23]
  e8:	str	x8, [x24]
  ec:	ldr	w8, [x23, #8]
  f0:	str	w8, [x24, #8]
  f4:	add	x24, x24, #0x10
  f8:	add	x23, x23, #0x10
  fc:	cmp	x22, x23
 100:	b.ne	c0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xc0>  // b.any
 104:	sub	x8, x24, x19
 108:	cmp	x8, #0x1
 10c:	b.lt	140 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x140>  // b.tstop
 110:	lsr	x8, x8, #4
 114:	add	x8, x8, #0x1
 118:	mov	x9, x21
 11c:	ldr	x10, [x19]
 120:	sub	x8, x8, #0x1
 124:	cmp	x8, #0x1
 128:	str	x10, [x9]
 12c:	ldr	w10, [x19, #8]
 130:	add	x19, x19, #0x10
 134:	str	w10, [x9, #8]
 138:	add	x9, x9, #0x10
 13c:	b.gt	11c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x11c>
 140:	mov	x0, x21
 144:	ldp	x20, x19, [sp, #80]
 148:	ldp	x22, x21, [sp, #64]
 14c:	ldp	x24, x23, [sp, #48]
 150:	ldp	x26, x25, [sp, #32]
 154:	ldr	x27, [sp, #16]
 158:	ldp	x29, x30, [sp], #96
 15c:	ret
 160:	mov	x25, x23
 164:	b	18c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x18c>
 168:	cbz	x26, 18c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x18c>
 16c:	neg	x3, x26
 170:	mov	x0, x25
 174:	mov	x1, x22
 178:	mov	x2, x20
 17c:	mov	x4, x19
 180:	mov	x5, x24
 184:	bl	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>
 188:	mov	x25, x0
 18c:	mov	x0, x21
 190:	mov	x1, x23
 194:	mov	x2, x25
 198:	ldp	x20, x19, [sp, #80]
 19c:	ldp	x22, x21, [sp, #64]
 1a0:	ldp	x24, x23, [sp, #48]
 1a4:	ldp	x26, x25, [sp, #32]
 1a8:	ldr	x27, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #96
 1b0:	b	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, x0
  18:	mov	x19, x1
  1c:	mov	x22, x0
  20:	cmp	x8, #0x40
  24:	mov	x20, x2
  28:	b.lt	90 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0x90>  // b.tstop
  2c:	lsr	x8, x8, #6
  30:	add	x23, x8, #0x1
  34:	mov	x21, x22
  38:	mov	x0, x21
  3c:	blr	x20
  40:	tbz	w0, #0, f0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xf0>
  44:	add	x22, x21, #0x10
  48:	mov	x0, x22
  4c:	blr	x20
  50:	tbz	w0, #0, ec <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xec>
  54:	add	x22, x21, #0x20
  58:	mov	x0, x22
  5c:	blr	x20
  60:	tbz	w0, #0, ec <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xec>
  64:	add	x22, x21, #0x30
  68:	mov	x0, x22
  6c:	blr	x20
  70:	tbz	w0, #0, ec <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xec>
  74:	sub	x23, x23, #0x1
  78:	cmp	x23, #0x1
  7c:	add	x21, x21, #0x40
  80:	b.gt	38 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0x38>
  84:	sub	x8, x19, x21
  88:	mov	x22, x21
  8c:	b	94 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0x94>
  90:	mov	x21, x22
  94:	asr	x8, x8, #4
  98:	cmp	x8, #0x1
  9c:	b.eq	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xd8>  // b.none
  a0:	cmp	x8, #0x2
  a4:	b.eq	c8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xc8>  // b.none
  a8:	cmp	x8, #0x3
  ac:	mov	x21, x19
  b0:	b.ne	f0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xf0>  // b.any
  b4:	mov	x0, x22
  b8:	blr	x20
  bc:	mov	x21, x22
  c0:	tbz	w0, #0, f0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xf0>
  c4:	add	x21, x22, #0x10
  c8:	mov	x0, x21
  cc:	blr	x20
  d0:	tbz	w0, #0, f0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xf0>
  d4:	add	x22, x21, #0x10
  d8:	mov	x0, x22
  dc:	blr	x20
  e0:	tst	w0, #0x1
  e4:	csel	x21, x19, x22, ne  // ne = any
  e8:	b	f0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops12_Iter_negateIPFbRKS7_EEEET_SK_SK_T0_St26random_access_iterator_tag+0xf0>
  ec:	mov	x21, x22
  f0:	mov	x0, x21
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	w9, [x20, #8]
  5c:	str	w9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPNS_8MetadataES3_E4doitERKS3_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x5b                  	// #91
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6MDNode7classofEPKNS_8MetadataE:

0000000000000000 <_ZN4llvm6MDNode7classofEPKNS_8MetadataE>:
   0:	ldrb	w8, [x0]
   4:	sub	w8, w8, #0x4
   8:	cmp	w8, #0x1c
   c:	cset	w0, cc  // cc = lo, ul, last
  10:	ret

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZNKSt6vectorIPKN4llvm8MetadataESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIPKN4llvm8MetadataESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIPKN4llvm8MetadataESaIS3_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPKN4llvm8MetadataESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPKN4llvm8MetadataESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPKN4llvm8MetadataESaIS3_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPKN4llvm8MetadataESaIS3_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructEOS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructEOS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructEOS4_+0x44>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructEOS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	stp	x8, xzr, [x0]
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x29, x30, [sp, #16]
  4c:	mov	x0, x3
  50:	add	sp, sp, #0x30
  54:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x4
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x4
  30:	cmn	x8, #0x4
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	x9, [x20, #8]
  5c:	str	x9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_6MDNodeEPKNS_8MetadataES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x21, x2
  18:	add	x2, sp, #0x8
  1c:	mov	x22, x1
  20:	mov	x20, x0
  24:	mov	x19, x8
  28:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
  2c:	ldr	x3, [sp, #8]
  30:	tbz	w0, #0, 3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x3c>
  34:	mov	w8, wzr
  38:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x64>
  3c:	mov	x0, x20
  40:	mov	x1, x22
  44:	mov	x2, x22
  48:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
  4c:	ldr	x8, [x22]
  50:	mov	x3, x0
  54:	str	x8, [x0]
  58:	ldr	x8, [x21]
  5c:	str	x8, [x0, #8]
  60:	mov	w8, #0x1                   	// #1
  64:	ldr	w9, [x20, #24]
  68:	ldp	x11, x10, [x20]
  6c:	strb	w8, [x19, #32]
  70:	ldp	x22, x21, [sp, #32]
  74:	ldp	x29, x30, [sp, #16]
  78:	add	x9, x10, x9, lsl #4
  7c:	stp	x20, x11, [x19]
  80:	stp	x3, x9, [x19, #16]
  84:	ldp	x20, x19, [sp, #48]
  88:	add	sp, sp, #0x40
  8c:	ret

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_+0x44>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E16FindAndConstructERKS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	stp	x8, xzr, [x0]
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x29, x30, [sp, #16]
  4c:	mov	x0, x3
  50:	add	sp, sp, #0x30
  54:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 4c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x4c>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>
  38:	ldr	w8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #12]
  44:	stur	xzr, [x0, #4]
  48:	str	w8, [x0]
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x3
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #0, 20 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x20>
  10:	ldr	w9, [x0, #24]
  14:	cbz	w9, 64 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x64>
  18:	ldr	x8, [x0, #16]
  1c:	b	28 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x28>
  20:	add	x8, x0, #0x10
  24:	mov	w9, #0x1                   	// #1
  28:	ldr	w10, [x1]
  2c:	cmn	w10, #0x2
  30:	b.cs	c0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0xc0>  // b.hs, b.nlast
  34:	mov	w11, #0x25                  	// #37
  38:	mul	w12, w10, w11
  3c:	sub	w11, w9, #0x1
  40:	and	w12, w12, w11
  44:	add	x9, x8, w12, uxtw #4
  48:	ldr	w14, [x9]
  4c:	cmp	w10, w14
  50:	b.ne	70 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x70>  // b.any
  54:	mov	w0, #0x1                   	// #1
  58:	str	x9, [x2]
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	x9, xzr
  68:	mov	w0, wzr
  6c:	b	58 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x58>
  70:	mov	x13, xzr
  74:	mov	w15, #0x1                   	// #1
  78:	mov	w0, #0x1                   	// #1
  7c:	cmn	w14, #0x1
  80:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0xb0>  // b.none
  84:	cmn	w14, #0x2
  88:	add	w12, w12, w15
  8c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  90:	and	w12, w12, w11
  94:	csel	x13, x13, x9, ne  // ne = any
  98:	add	x9, x8, w12, uxtw #4
  9c:	ldr	w14, [x9]
  a0:	add	w15, w15, #0x1
  a4:	cmp	w10, w14
  a8:	b.eq	58 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x58>  // b.none
  ac:	b	7c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x7c>
  b0:	cmp	x13, #0x0
  b4:	mov	w0, wzr
  b8:	csel	x9, x9, x13, eq  // eq = none
  bc:	b	58 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_+0x58>
  c0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_>
  c4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_>
  c8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E15LookupBucketForIjEEbRKT_RPKS8_>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x252                 	// #594
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0]
  14:	ldr	w9, [x0, #8]
  18:	mov	x20, x3
  1c:	mov	x21, x2
  20:	add	x8, x8, #0x1
  24:	mov	x19, x0
  28:	str	x8, [x0]
  2c:	lsr	w8, w9, #1
  30:	tbnz	w9, #0, 3c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x3c>
  34:	ldr	w1, [x19, #24]
  38:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x40>
  3c:	mov	w1, #0x1                   	// #1
  40:	lsl	w9, w8, #2
  44:	add	w9, w9, #0x4
  48:	add	w10, w1, w1, lsl #1
  4c:	cmp	w9, w10
  50:	b.cs	a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xa4>  // b.hs, b.nlast
  54:	ldr	w9, [x19, #12]
  58:	mvn	w8, w8
  5c:	add	w8, w1, w8
  60:	sub	w8, w8, w9
  64:	cmp	w8, w1, lsr #3
  68:	b.ls	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xa8>  // b.plast
  6c:	cbz	x20, c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xc8>
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  78:	ldr	w8, [x20]
  7c:	cmn	w8, #0x1
  80:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x90>  // b.none
  84:	ldr	w8, [x19, #12]
  88:	sub	w8, w8, #0x1
  8c:	str	w8, [x19, #12]
  90:	mov	x0, x20
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
  a4:	lsl	w1, w1, #1
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  b0:	add	x2, x29, #0x18
  b4:	mov	x0, x19
  b8:	mov	x1, x21
  bc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  c0:	ldr	x20, [x29, #24]
  c4:	cbnz	x20, 70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x70>
  c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x22f                 	// #559
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E19incrementNumEntriesEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E19incrementNumEntriesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	lsr	w9, w8, #1
  10:	adds	w9, w9, #0x1
  14:	b.mi	28 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E19incrementNumEntriesEv+0x28>  // b.first
  18:	bfi	w8, w9, #1, #31
  1c:	str	w8, [x0, #8]
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E19incrementNumEntriesEv>
  2c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E19incrementNumEntriesEv>
  30:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E19incrementNumEntriesEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x441                 	// #1089
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	str	x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	cmp	w1, #0x2
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x1
  64:	b.hi	dc <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xdc>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	e8 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xe8>
  74:	ldr	w9, [x19, #16]
  78:	mov	x20, sp
  7c:	cmn	w9, #0x3
  80:	b.hi	9c <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x9c>  // b.pmore
  84:	str	w9, [sp]
  88:	ldr	w9, [x19, #28]
  8c:	ldur	x10, [x19, #20]
  90:	add	x20, x20, #0x10
  94:	str	w9, [sp, #12]
  98:	stur	x10, [sp, #4]
  9c:	cmp	w1, #0x2
  a0:	b.cc	b8 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xb8>  // b.lo, b.ul, b.last
  a4:	and	w8, w8, #0xfffffffe
  a8:	mov	x0, x19
  ac:	str	w8, [x19, #8]
  b0:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
  b4:	stp	x0, x1, [x19, #16]
  b8:	mov	x1, sp
  bc:	mov	x0, x19
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
  c8:	ldp	x20, x19, [sp, #48]
  cc:	ldr	x21, [sp, #32]
  d0:	ldp	x29, x30, [sp, #16]
  d4:	add	sp, sp, #0x40
  d8:	ret
  dc:	mov	x0, x19
  e0:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
  e4:	stp	x0, x1, [x19, #16]
  e8:	add	x2, x20, x21, lsl #4
  ec:	mov	x0, x19
  f0:	mov	x1, x20
  f4:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
  f8:	mov	x0, x20
  fc:	ldp	x20, x19, [sp, #48]
 100:	ldr	x21, [sp, #32]
 104:	ldp	x29, x30, [sp, #16]
 108:	add	sp, sp, #0x40
 10c:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x78>  // b.none
  28:	ldr	w8, [x20]
  2c:	cmn	w8, #0x3
  30:	b.hi	6c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.pmore
  34:	add	x2, x29, #0x18
  38:	mov	x0, x21
  3c:	mov	x1, x20
  40:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  44:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x88>
  48:	ldr	x8, [x29, #24]
  4c:	ldr	w9, [x20]
  50:	mov	x0, x21
  54:	str	w9, [x8]
  58:	ldr	w9, [x20, #12]
  5c:	ldur	x10, [x20, #4]
  60:	str	w9, [x8, #12]
  64:	stur	x10, [x8, #4]
  68:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cmp	x2, x3
  1c:	b.eq	d8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xd8>  // b.none
  20:	ldp	x24, x8, [x0, #8]
  24:	sub	x23, x3, x2
  28:	asr	x22, x23, #3
  2c:	mov	x21, x2
  30:	sub	x8, x8, x24
  34:	mov	x19, x1
  38:	mov	x20, x0
  3c:	cmp	x22, x8, asr #3
  40:	b.ls	f0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf0>  // b.plast
  44:	adrp	x2, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
  48:	add	x2, x2, #0x0
  4c:	mov	x0, x20
  50:	mov	x1, x22
  54:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
  58:	mov	x24, x0
  5c:	mov	x0, x20
  60:	mov	x1, x24
  64:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
  68:	ldr	x1, [x20]
  6c:	mov	x25, x0
  70:	subs	x2, x19, x1
  74:	asr	x26, x2, #3
  78:	b.eq	84 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x84>  // b.none
  7c:	mov	x0, x25
  80:	bl	0 <memmove>
  84:	add	x26, x25, x26, lsl #3
  88:	cbz	x23, 9c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x9c>
  8c:	mov	x0, x26
  90:	mov	x1, x21
  94:	mov	x2, x23
  98:	bl	0 <memmove>
  9c:	ldr	x8, [x20, #8]
  a0:	add	x21, x26, x22, lsl #3
  a4:	subs	x2, x8, x19
  a8:	asr	x22, x2, #3
  ac:	b.eq	bc <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xbc>  // b.none
  b0:	mov	x0, x21
  b4:	mov	x1, x19
  b8:	bl	0 <memmove>
  bc:	ldr	x0, [x20]
  c0:	add	x19, x21, x22, lsl #3
  c4:	cbz	x0, cc <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xcc>
  c8:	bl	0 <_ZdlPv>
  cc:	add	x8, x25, x24, lsl #3
  d0:	stp	x25, x19, [x20]
  d4:	str	x8, [x20, #16]
  d8:	ldp	x20, x19, [sp, #64]
  dc:	ldp	x22, x21, [sp, #48]
  e0:	ldp	x24, x23, [sp, #32]
  e4:	ldp	x26, x25, [sp, #16]
  e8:	ldp	x29, x30, [sp], #80
  ec:	ret
  f0:	sub	x25, x24, x19
  f4:	cmp	x22, x25, asr #3
  f8:	b.cs	11c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x11c>  // b.hs, b.nlast
  fc:	sub	x25, x24, x22, lsl #3
 100:	cbz	x23, 178 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x178>
 104:	mov	x0, x24
 108:	mov	x1, x25
 10c:	mov	x2, x23
 110:	bl	0 <memmove>
 114:	ldr	x8, [x20, #8]
 118:	b	17c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x17c>
 11c:	asr	x26, x25, #3
 120:	add	x23, x21, x26, lsl #3
 124:	subs	x2, x3, x23
 128:	b.eq	13c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x13c>  // b.none
 12c:	mov	x0, x24
 130:	mov	x1, x23
 134:	bl	0 <memmove>
 138:	ldr	x24, [x20, #8]
 13c:	sub	x8, x22, x26
 140:	add	x0, x24, x8, lsl #3
 144:	str	x0, [x20, #8]
 148:	cbz	x25, 15c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x15c>
 14c:	mov	x1, x19
 150:	mov	x2, x25
 154:	bl	0 <memmove>
 158:	ldr	x0, [x20, #8]
 15c:	add	x8, x0, x26, lsl #3
 160:	subs	x2, x23, x21
 164:	str	x8, [x20, #8]
 168:	b.eq	d8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xd8>  // b.none
 16c:	mov	x0, x19
 170:	mov	x1, x21
 174:	b	1a8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1a8>
 178:	mov	x8, x24
 17c:	add	x8, x8, x22, lsl #3
 180:	subs	x2, x25, x19
 184:	str	x8, [x20, #8]
 188:	b.eq	198 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x198>  // b.none
 18c:	sub	x0, x24, x2
 190:	mov	x1, x19
 194:	bl	0 <memmove>
 198:	cbz	x23, d8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xd8>
 19c:	mov	x0, x19
 1a0:	mov	x1, x21
 1a4:	mov	x2, x23
 1a8:	ldp	x20, x19, [sp, #64]
 1ac:	ldp	x22, x21, [sp, #48]
 1b0:	ldp	x24, x23, [sp, #32]
 1b4:	ldp	x26, x25, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #80
 1bc:	b	0 <memmove>

Disassembly of section .text._ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_:

0000000000000000 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	ldr	x10, [x0, #16]
  10:	add	x9, x0, #0x8
  14:	cbz	x10, 5c <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x5c>
  18:	ldr	x11, [x1]
  1c:	mov	x8, x9
  20:	ldr	x12, [x10, #32]
  24:	add	x13, x10, #0x18
  28:	add	x14, x10, #0x10
  2c:	cmp	x12, x11
  30:	csel	x8, x8, x10, cc  // cc = lo, ul, last
  34:	csel	x10, x13, x14, cc  // cc = lo, ul, last
  38:	ldr	x10, [x10]
  3c:	cbnz	x10, 20 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x20>
  40:	cmp	x8, x9
  44:	b.eq	60 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x60>  // b.none
  48:	ldr	x9, [x1]
  4c:	ldr	x10, [x8, #32]
  50:	cmp	x9, x10
  54:	b.cc	60 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x60>  // b.lo, b.ul, b.last
  58:	b	80 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x80>
  5c:	mov	x8, x9
  60:	adrp	x2, 0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>
  64:	str	x1, [sp, #8]
  68:	add	x2, x2, #0x0
  6c:	add	x3, sp, #0x8
  70:	mov	x4, sp
  74:	mov	x1, x8
  78:	bl	0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>
  7c:	mov	x8, x0
  80:	ldp	x29, x30, [sp, #16]
  84:	add	x0, x8, #0x28
  88:	add	sp, sp, #0x20
  8c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	mov	w0, #0x30                  	// #48
  18:	mov	x20, x3
  1c:	mov	x21, x1
  20:	bl	0 <_Znwm>
  24:	ldr	x8, [x20]
  28:	mov	x2, x0
  2c:	mov	x20, x0
  30:	mov	x1, x21
  34:	ldr	x8, [x8]
  38:	str	x8, [x2, #32]!
  3c:	str	wzr, [x0, #40]
  40:	mov	x0, x19
  44:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
  48:	mov	x21, x0
  4c:	cbz	x1, 70 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x70>
  50:	mov	x2, x1
  54:	mov	x0, x19
  58:	mov	x1, x21
  5c:	mov	x3, x20
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	b	0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
  70:	mov	x0, x20
  74:	bl	0 <_ZdlPv>
  78:	mov	x0, x21
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	add	x8, x0, #0x8
  14:	mov	x21, x0
  18:	cmp	x8, x1
  1c:	mov	x20, x2
  20:	b.eq	6c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x6c>  // b.none
  24:	ldr	x22, [x20]
  28:	ldr	x8, [x1, #32]
  2c:	mov	x19, x1
  30:	cmp	x22, x8
  34:	b.cs	8c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x8c>  // b.hs, b.nlast
  38:	ldr	x1, [x21, #24]
  3c:	cmp	x1, x19
  40:	b.eq	f0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xf0>  // b.none
  44:	mov	x0, x19
  48:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  4c:	ldr	x8, [x0, #32]
  50:	cmp	x8, x22
  54:	b.cs	cc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xcc>  // b.hs, b.nlast
  58:	ldr	x8, [x0, #24]
  5c:	cmp	x8, #0x0
  60:	csel	x8, xzr, x19, eq  // eq = none
  64:	csel	x1, x0, x19, eq  // eq = none
  68:	b	c4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xc4>
  6c:	ldr	x8, [x21, #40]
  70:	cbz	x8, cc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xcc>
  74:	ldr	x1, [x21, #32]
  78:	ldr	x9, [x20]
  7c:	ldr	x8, [x1, #32]
  80:	cmp	x8, x9
  84:	b.cc	e0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xe0>  // b.lo, b.ul, b.last
  88:	b	cc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xcc>
  8c:	cmp	x8, x22
  90:	b.cs	e8 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xe8>  // b.hs, b.nlast
  94:	ldr	x1, [x21, #32]
  98:	cmp	x1, x19
  9c:	b.eq	e0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xe0>  // b.none
  a0:	mov	x0, x19
  a4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  a8:	ldr	x8, [x0, #32]
  ac:	cmp	x22, x8
  b0:	b.cs	cc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xcc>  // b.hs, b.nlast
  b4:	ldr	x8, [x19, #24]
  b8:	cmp	x8, #0x0
  bc:	csel	x8, xzr, x0, eq  // eq = none
  c0:	csel	x1, x19, x0, eq  // eq = none
  c4:	mov	x19, x8
  c8:	b	f4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xf4>
  cc:	mov	x0, x21
  d0:	mov	x1, x20
  d4:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_>
  d8:	mov	x19, x0
  dc:	b	f4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xf4>
  e0:	mov	x19, xzr
  e4:	b	f4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xf4>
  e8:	mov	x1, xzr
  ec:	b	f4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xf4>
  f0:	mov	x19, x1
  f4:	mov	x0, x19
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldp	x22, x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x3
  10:	mov	x20, x0
  14:	cbz	x1, 20 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x20>
  18:	mov	w0, #0x1                   	// #1
  1c:	b	3c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x3c>
  20:	add	x8, x20, #0x8
  24:	cmp	x8, x2
  28:	b.eq	18 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x18>  // b.none
  2c:	ldr	x8, [x19, #32]
  30:	ldr	x9, [x2, #32]
  34:	cmp	x8, x9
  38:	cset	w0, cc  // cc = lo, ul, last
  3c:	add	x3, x20, #0x8
  40:	mov	x1, x19
  44:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  48:	ldr	x8, [x20, #40]
  4c:	mov	x0, x19
  50:	add	x8, x8, #0x1
  54:	str	x8, [x20, #40]
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0, #16]
  10:	mov	x20, x1
  14:	cbz	x9, 4c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_+0x4c>
  18:	ldr	x8, [x20]
  1c:	ldr	x10, [x9, #32]
  20:	mov	x19, x9
  24:	add	x9, x9, #0x10
  28:	add	x11, x19, #0x18
  2c:	cmp	x8, x10
  30:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  34:	ldr	x9, [x9]
  38:	cbnz	x9, 1c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_+0x1c>
  3c:	cmp	x8, x10
  40:	mov	x8, x19
  44:	b.cc	50 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_+0x50>  // b.lo, b.ul, b.last
  48:	b	68 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_+0x68>
  4c:	add	x19, x0, #0x8
  50:	ldr	x8, [x0, #24]
  54:	cmp	x8, x19
  58:	b.eq	80 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_+0x80>  // b.none
  5c:	mov	x0, x19
  60:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  64:	mov	x8, x0
  68:	ldr	x9, [x8, #32]
  6c:	ldr	x10, [x20]
  70:	cmp	x9, x10
  74:	csel	x0, xzr, x8, cc  // cc = lo, ul, last
  78:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  7c:	b	84 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_+0x84>
  80:	mov	x0, xzr
  84:	mov	x1, x19
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorIPKN4llvm6ComdatESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZNKSt6vectorIPKN4llvm6ComdatESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIPKN4llvm6ComdatESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIPKN4llvm6ComdatESaIS3_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPKN4llvm6ComdatESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPKN4llvm6ComdatESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPKN4llvm6ComdatESaIS3_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPKN4llvm6ComdatESaIS3_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  48:	ldr	q0, [x24]
  4c:	subs	x8, x21, x22
  50:	mov	x23, x0
  54:	str	q0, [x0, x8]
  58:	mov	x8, x0
  5c:	b.eq	7c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	q0, [x9], #16
  6c:	cmp	x21, x9
  70:	str	q0, [x8]
  74:	add	x8, x8, #0x10
  78:	b.ne	68 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x68>  // b.any
  7c:	cmp	x25, x21
  80:	add	x24, x8, #0x10
  84:	b.eq	9c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  88:	ldr	q0, [x21], #16
  8c:	cmp	x25, x21
  90:	str	q0, [x24]
  94:	add	x24, x24, #0x10
  98:	b.ne	88 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>  // b.any
  9c:	cbz	x22, a8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  a0:	mov	x0, x22
  a4:	bl	0 <_ZdlPv>
  a8:	add	x8, x23, x20, lsl #4
  ac:	stp	x23, x24, [x19]
  b0:	str	x8, [x19, #16]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldr	x25, [sp, #16]
  c4:	ldp	x29, x30, [sp], #80
  c8:	ret

Disassembly of section .text._ZNKSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  14:	sub	x10, x8, x9, asr #4
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #4
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #59
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairIPKN4llvm5ValueEjESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairIPKN4llvm5ValueEjESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt4pairIPKN4llvm5ValueEjESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #59
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt4pairIPKN4llvm5ValueEjESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #4
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	w9, [x20, #8]
  5c:	str	w9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorIPN4llvm4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZNKSt6vectorIPN4llvm4TypeESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIPN4llvm4TypeESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIPN4llvm4TypeESaIS2_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPN4llvm4TypeESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPN4llvm4TypeESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPN4llvm4TypeESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPN4llvm4TypeESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E16FindAndConstructERKS2_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E16FindAndConstructERKS2_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E16FindAndConstructERKS2_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E16FindAndConstructERKS2_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E16FindAndConstructERKS2_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x4
  18:	cmn	x10, #0x4
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x4
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0xa0>  // b.none
  74:	cmn	x14, #0x8
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E15LookupBucketForIS2_EEbRKT_RPKS7_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x4
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x4
  30:	cmn	x8, #0x4
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	w9, [x20, #8]
  5c:	str	w9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  48:	ldr	x8, [x24]
  4c:	subs	x9, x21, x22
  50:	mov	x23, x0
  54:	str	x8, [x0, x9]
  58:	mov	x8, x0
  5c:	b.eq	78 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x78>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	x10, [x9], #8
  6c:	cmp	x21, x9
  70:	str	x10, [x8], #8
  74:	b.ne	68 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x68>  // b.any
  78:	cmp	x25, x21
  7c:	add	x24, x8, #0x8
  80:	b.eq	94 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x94>  // b.none
  84:	ldr	x8, [x21], #8
  88:	cmp	x25, x21
  8c:	str	x8, [x24], #8
  90:	b.ne	84 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x84>  // b.any
  94:	cbz	x22, a0 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa0>
  98:	mov	x0, x22
  9c:	bl	0 <_ZdlPv>
  a0:	add	x8, x23, x20, lsl #3
  a4:	stp	x23, x24, [x19]
  a8:	str	x8, [x19, #16]
  ac:	ldp	x20, x19, [sp, #64]
  b0:	ldp	x22, x21, [sp, #48]
  b4:	ldp	x24, x23, [sp, #32]
  b8:	ldr	x25, [sp, #16]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm13AttributeListESaIS1_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm13AttributeListESaIS1_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIN4llvm13AttributeListESaIS1_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm13AttributeListESaIS1_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm13AttributeListESaIS1_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIN4llvm13AttributeListESaIS1_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIN4llvm13AttributeListESaIS1_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 50 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_+0x50>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  38:	ldr	w8, [x19]
  3c:	mov	x3, x0
  40:	str	w8, [x0]
  44:	ldr	x8, [x19, #8]
  48:	str	wzr, [x0, #16]
  4c:	str	x8, [x0, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldp	x29, x30, [sp, #16]
  58:	mov	x0, x3
  5c:	add	sp, sp, #0x30
  60:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	x19, x2
  18:	cbz	w22, 8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x8c>
  1c:	ldr	w9, [x1]
  20:	ldr	x21, [x0, #8]
  24:	ldr	x8, [x1, #8]
  28:	mov	x20, x1
  2c:	cmn	w9, #0x1
  30:	b.ne	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x3c>  // b.any
  34:	cmn	x8, #0x4
  38:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x11c>  // b.none
  3c:	cmn	w9, #0x2
  40:	b.ne	4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x4c>  // b.any
  44:	cmn	x8, #0x8
  48:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x11c>  // b.none
  4c:	mov	x0, x20
  50:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
  54:	sub	w9, w22, #0x1
  58:	mov	w10, #0x18                  	// #24
  5c:	and	w11, w0, w9
  60:	umaddl	x8, w11, w10, x21
  64:	ldr	w12, [x20]
  68:	ldr	w14, [x8]
  6c:	ldr	x13, [x20, #8]
  70:	ldr	x16, [x8, #8]
  74:	cmp	w12, w14
  78:	b.ne	a8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa8>  // b.any
  7c:	cmp	x13, x16
  80:	b.ne	a8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xa8>  // b.any
  84:	mov	w0, #0x1                   	// #1
  88:	b	94 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x94>
  8c:	mov	x8, xzr
  90:	mov	w0, wzr
  94:	str	x8, [x19]
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldp	x22, x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	mov	x15, xzr
  ac:	mov	w18, #0x1                   	// #1
  b0:	mov	w17, #0xfffffffe            	// #-2
  b4:	mov	w0, #0x1                   	// #1
  b8:	cmn	w14, #0x1
  bc:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xc8>  // b.any
  c0:	cmn	x16, #0x4
  c4:	b.eq	10c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x10c>  // b.none
  c8:	cmn	x16, #0x8
  cc:	add	w11, w11, w18
  d0:	ccmp	w14, w17, #0x0, eq  // eq = none
  d4:	and	w11, w11, w9
  d8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  dc:	csel	x15, x15, x8, ne  // ne = any
  e0:	umaddl	x8, w11, w10, x21
  e4:	ldr	w14, [x8]
  e8:	ldr	x16, [x8, #8]
  ec:	add	w1, w18, #0x1
  f0:	mov	w18, w1
  f4:	cmp	w12, w14
  f8:	b.ne	b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb8>  // b.any
  fc:	cmp	x13, x16
 100:	mov	w18, w1
 104:	b.eq	94 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x94>  // b.none
 108:	b	b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb8>
 10c:	cmp	x15, #0x0
 110:	mov	w0, wzr
 114:	csel	x8, x8, x15, eq  // eq = none
 118:	b	94 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x94>
 11c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 120:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 124:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x252                 	// #594
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapInfoISt4pairIjNS_12AttributeSetEEE12getHashValueERKS3_:

0000000000000000 <_ZN4llvm12DenseMapInfoISt4pairIjNS_12AttributeSetEEE12getHashValueERKS3_>:
   0:	ldr	w8, [x0]
   4:	ldr	w9, [x0, #8]
   8:	mov	w10, #0x25                  	// #37
   c:	mov	x11, #0xffffffffffffffff    	// #-1
  10:	mul	w8, w8, w10
  14:	lsr	w10, w9, #4
  18:	eor	w9, w10, w9, lsr #9
  1c:	eor	x10, x11, x9, lsl #32
  20:	bfi	x9, x8, #32, #32
  24:	add	x8, x9, x10
  28:	eor	x8, x8, x8, lsr #22
  2c:	eor	x9, x11, x8, lsl #13
  30:	add	x8, x8, x9
  34:	eor	x8, x8, x8, lsr #8
  38:	add	x8, x8, x8, lsl #3
  3c:	eor	x8, x8, x8, lsr #15
  40:	eor	x9, x11, x8, lsl #27
  44:	add	x8, x8, x9
  48:	lsr	x9, x8, #31
  4c:	eor	w0, w9, w8
  50:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	w8, [x3]
  6c:	cmn	w8, #0x1
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x4
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x20, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x20, #8]
  60:	cbz	x19, 8c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x19
  6c:	mov	x0, x20
  70:	mov	x1, x19
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	mov	x0, x20
  90:	ldp	x20, x19, [sp, #32]
  94:	ldr	x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	b	0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  20:	cmp	x20, x19
  24:	b.eq	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>  // b.none
  28:	ldr	w9, [x20]
  2c:	ldr	x8, [x20, #8]
  30:	cmn	w9, #0x1
  34:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x40>  // b.any
  38:	cmn	x8, #0x4
  3c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x8c>  // b.none
  40:	cmn	w9, #0x2
  44:	b.ne	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x50>  // b.any
  48:	cmn	x8, #0x8
  4c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x8c>  // b.none
  50:	add	x2, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x1, x20
  5c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  60:	tbnz	w0, #0, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xa8>
  64:	ldr	x8, [x29, #24]
  68:	ldr	w9, [x20]
  6c:	str	w9, [x8]
  70:	ldr	x9, [x20, #8]
  74:	str	x9, [x8, #8]
  78:	ldr	w9, [x20, #16]
  7c:	str	w9, [x8, #16]
  80:	ldr	w8, [x21, #16]
  84:	add	w8, w8, #0x1
  88:	str	w8, [x21, #16]
  8c:	add	x20, x20, #0x18
  90:	cmp	x19, x20
  94:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x28>  // b.any
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  ac:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  b0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x17a                 	// #378
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  48:	ldr	q0, [x24]
  4c:	subs	x8, x21, x22
  50:	mov	x23, x0
  54:	str	q0, [x0, x8]
  58:	mov	x8, x0
  5c:	b.eq	7c <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x7c>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	q0, [x9], #16
  6c:	cmp	x21, x9
  70:	str	q0, [x8]
  74:	add	x8, x8, #0x10
  78:	b.ne	68 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x68>  // b.any
  7c:	cmp	x25, x21
  80:	add	x24, x8, #0x10
  84:	b.eq	9c <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x9c>  // b.none
  88:	ldr	q0, [x21], #16
  8c:	cmp	x25, x21
  90:	str	q0, [x24]
  94:	add	x24, x24, #0x10
  98:	b.ne	88 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x88>  // b.any
  9c:	cbz	x22, a8 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa8>
  a0:	mov	x0, x22
  a4:	bl	0 <_ZdlPv>
  a8:	add	x8, x23, x20, lsl #4
  ac:	stp	x23, x24, [x19]
  b0:	str	x8, [x19, #16]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldr	x25, [sp, #16]
  c4:	ldp	x29, x30, [sp], #80
  c8:	ret

Disassembly of section .text._ZNKSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  14:	sub	x10, x8, x9, asr #4
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #4
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #59
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairIjN4llvm12AttributeSetEESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairIjN4llvm12AttributeSetEESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt4pairIjN4llvm12AttributeSetEESaIS3_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #59
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt4pairIjN4llvm12AttributeSetEESaIS3_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #4
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 38 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_+0x38>
  10:	ldrb	w8, [x8, #16]
  14:	mov	w0, #0x1                   	// #1
  18:	cbz	w8, 30 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_+0x30>
  1c:	cmp	w8, #0x3
  20:	b.eq	30 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_+0x30>  // b.none
  24:	sub	w8, w8, #0x1
  28:	cmp	w8, #0x2
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_>
  3c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_>
  40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11GlobalValueEPNS_5ValueES3_E4doitERKS3_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x5b                  	// #91
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x25, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x22, x26, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x24, x21, x22
  48:	bl	0 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  4c:	ldr	x8, [x25]
  50:	mov	x23, x0
  54:	add	x25, x0, x24
  58:	cmp	x24, #0x1
  5c:	str	x8, [x25]
  60:	b.lt	74 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x74>  // b.tstop
  64:	mov	x0, x23
  68:	mov	x1, x22
  6c:	mov	x2, x24
  70:	bl	0 <memmove>
  74:	sub	x2, x26, x21
  78:	add	x24, x25, #0x8
  7c:	cmp	x2, #0x1
  80:	asr	x25, x2, #3
  84:	b.lt	94 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>  // b.tstop
  88:	mov	x0, x24
  8c:	mov	x1, x21
  90:	bl	0 <memmove>
  94:	add	x21, x24, x25, lsl #3
  98:	cbz	x22, a4 <_ZNSt6vectorIPKN4llvm10BasicBlockESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa4>
  9c:	mov	x0, x22
  a0:	bl	0 <_ZdlPv>
  a4:	add	x8, x23, x20, lsl #3
  a8:	stp	x23, x21, [x19]
  ac:	str	x8, [x19, #16]
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x22, x21, [sp, #48]
  b8:	ldp	x24, x23, [sp, #32]
  bc:	ldp	x26, x25, [sp, #16]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZNKSt6vectorIPKN4llvm10BasicBlockESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIPKN4llvm10BasicBlockESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIPKN4llvm10BasicBlockESaIS3_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPKN4llvm10BasicBlockESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPKN4llvm10BasicBlockESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPKN4llvm10BasicBlockESaIS3_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPKN4llvm10BasicBlockESaIS3_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructEOS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, e4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xe4>
  18:	ldp	x8, x9, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x9, x9, x8
  28:	cmp	x1, x9, asr #4
  2c:	b.ls	cc <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xcc>  // b.plast
  30:	ldr	x9, [x19]
  34:	adrp	x2, 0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>
  38:	add	x2, x2, #0x0
  3c:	mov	x0, x19
  40:	sub	x8, x8, x9
  44:	mov	x1, x20
  48:	asr	x24, x8, #4
  4c:	bl	0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>
  50:	mov	x21, x0
  54:	mov	x0, x19
  58:	mov	x1, x21
  5c:	bl	0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>
  60:	mov	x22, x0
  64:	add	x23, x0, x24, lsl #4
  68:	lsl	x8, x24, #4
  6c:	mov	x9, x20
  70:	add	x10, x22, x8
  74:	subs	x9, x9, #0x1
  78:	add	x8, x8, #0x10
  7c:	str	xzr, [x10]
  80:	str	wzr, [x10, #8]
  84:	b.ne	70 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x70>  // b.any
  88:	ldp	x0, x8, [x19]
  8c:	cmp	x0, x8
  90:	b.eq	b0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xb0>  // b.none
  94:	mov	x9, x22
  98:	ldr	q0, [x0], #16
  9c:	cmp	x8, x0
  a0:	str	q0, [x9]
  a4:	add	x9, x9, #0x10
  a8:	b.ne	98 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x98>  // b.any
  ac:	ldr	x0, [x19]
  b0:	cbz	x0, b8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xb8>
  b4:	bl	0 <_ZdlPv>
  b8:	add	x8, x23, x20, lsl #4
  bc:	add	x9, x22, x21, lsl #4
  c0:	stp	x22, x8, [x19]
  c4:	str	x9, [x19, #16]
  c8:	b	e4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xe4>
  cc:	str	xzr, [x8]
  d0:	str	wzr, [x8, #8]
  d4:	subs	x20, x20, #0x1
  d8:	add	x8, x8, #0x10
  dc:	b.ne	cc <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xcc>  // b.any
  e0:	str	x8, [x19, #8]
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x24, x23, [sp, #16]
  f0:	ldp	x29, x30, [sp], #64
  f4:	ret

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>:
   0:	cbz	x1, e8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xe8>
   4:	stp	x29, x30, [sp, #-64]!
   8:	stp	x24, x23, [sp, #16]
   c:	stp	x22, x21, [sp, #32]
  10:	stp	x20, x19, [sp, #48]
  14:	mov	x29, sp
  18:	mov	x22, x0
  1c:	mov	x24, x0
  20:	ldr	x21, [x22, #8]!
  24:	ldr	x8, [x0]
  28:	ldr	x9, [x24, #16]!
  2c:	mov	x19, x1
  30:	mov	x20, x0
  34:	sub	x9, x9, x21
  38:	cmp	x1, x9, asr #3
  3c:	b.ls	bc <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xbc>  // b.plast
  40:	adrp	x2, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>
  44:	sub	x8, x21, x8
  48:	add	x2, x2, #0x0
  4c:	mov	x0, x20
  50:	mov	x1, x19
  54:	asr	x23, x8, #3
  58:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>
  5c:	mov	x21, x0
  60:	mov	x0, x20
  64:	mov	x1, x21
  68:	bl	0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>
  6c:	add	x23, x0, x23, lsl #3
  70:	mov	x22, x0
  74:	lsl	x2, x19, #3
  78:	mov	x0, x23
  7c:	mov	w1, wzr
  80:	bl	0 <memset>
  84:	ldp	x1, x8, [x20]
  88:	sub	x2, x8, x1
  8c:	cmp	x2, #0x1
  90:	b.lt	a0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xa0>  // b.tstop
  94:	mov	x0, x22
  98:	bl	0 <memmove>
  9c:	ldr	x1, [x20]
  a0:	cbz	x1, ac <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xac>
  a4:	mov	x0, x1
  a8:	bl	0 <_ZdlPv>
  ac:	add	x8, x23, x19, lsl #3
  b0:	stp	x22, x8, [x20]
  b4:	add	x8, x22, x21, lsl #3
  b8:	b	d4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xd4>
  bc:	lsl	x2, x19, #3
  c0:	mov	x0, x21
  c4:	mov	w1, wzr
  c8:	bl	0 <memset>
  cc:	add	x8, x21, x19, lsl #3
  d0:	mov	x24, x22
  d4:	str	x8, [x24]
  d8:	ldp	x20, x19, [sp, #48]
  dc:	ldp	x22, x21, [sp, #32]
  e0:	ldp	x24, x23, [sp, #16]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E16FindAndConstructERKS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret
