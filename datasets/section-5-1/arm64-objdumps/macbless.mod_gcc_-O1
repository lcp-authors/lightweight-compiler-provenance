
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//macbless.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mac_bless_inode-0x114>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w0, [x1]
  14:	tbnz	w0, #3, 28 <grub_mac_bless_inode-0xec>
  18:	mov	w0, #0x0                   	// #0
  1c:	ldp	x19, x20, [sp, #16]
  20:	ldp	x29, x30, [sp], #48
  24:	ret
  28:	str	x21, [sp, #32]
  2c:	mov	x20, x1
  30:	mov	x21, x2
  34:	mov	x1, x19
  38:	ldr	x0, [x2, #8]
  3c:	bl	0 <grub_strcmp>
  40:	cbz	w0, c0 <grub_mac_bless_inode-0x54>
  44:	ldrb	w0, [x20]
  48:	tbnz	w0, #2, 54 <grub_mac_bless_inode-0xc0>
  4c:	ldr	x21, [sp, #32]
  50:	b	18 <grub_mac_bless_inode-0xfc>
  54:	ldr	x3, [x21, #8]
  58:	ldrb	w0, [x3]
  5c:	cbz	w0, a0 <grub_mac_bless_inode-0x74>
  60:	ldrb	w1, [x19]
  64:	cbz	w1, f4 <grub_mac_bless_inode-0x20>
  68:	mov	w6, w0
  6c:	sub	w4, w0, #0x41
  70:	add	w2, w0, #0x20
  74:	cmp	w4, #0x1a
  78:	csel	w0, w2, w0, cc  // cc = lo, ul, last
  7c:	sub	w5, w1, #0x41
  80:	add	w2, w1, #0x20
  84:	cmp	w5, #0x1a
  88:	csel	w1, w2, w1, cc  // cc = lo, ul, last
  8c:	cmp	w1, w0
  90:	b.ne	e0 <grub_mac_bless_inode-0x34>  // b.any
  94:	add	x19, x19, #0x1
  98:	ldrb	w0, [x3, #1]!
  9c:	cbnz	w0, 60 <grub_mac_bless_inode-0xb4>
  a0:	mov	w6, #0x0                   	// #0
  a4:	ldrb	w0, [x19]
  a8:	sub	w2, w0, #0x41
  ac:	add	w1, w0, #0x20
  b0:	cmp	w2, #0x1a
  b4:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  b8:	cmp	w0, w6
  bc:	b.ne	10c <grub_mac_bless_inode-0x8>  // b.any
  c0:	ldr	x0, [x20, #8]
  c4:	str	x0, [x21]
  c8:	ldrb	w0, [x20]
  cc:	and	w0, w0, #0x1
  d0:	add	w0, w0, #0x1
  d4:	str	w0, [x21, #16]
  d8:	ldr	x21, [sp, #32]
  dc:	b	18 <grub_mac_bless_inode-0xfc>
  e0:	cmp	w4, #0x19
  e4:	b.ls	104 <grub_mac_bless_inode-0x10>  // b.plast
  e8:	b	a4 <grub_mac_bless_inode-0x70>
  ec:	ldrb	w0, [x19]
  f0:	b	b8 <grub_mac_bless_inode-0x5c>
  f4:	mov	w6, w0
  f8:	sub	w0, w0, #0x41
  fc:	cmp	w0, #0x19
 100:	b.hi	ec <grub_mac_bless_inode-0x28>  // b.pmore
 104:	add	w6, w6, #0x20
 108:	b	a4 <grub_mac_bless_inode-0x70>
 10c:	ldr	x21, [sp, #32]
 110:	b	18 <grub_mac_bless_inode-0xfc>

0000000000000114 <grub_mac_bless_inode>:
 114:	sub	sp, sp, #0x230
 118:	stp	x29, x30, [sp]
 11c:	mov	x29, sp
 120:	cmp	w3, #0x0
 124:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 128:	b.ne	1d4 <grub_mac_bless_inode+0xc0>  // b.any
 12c:	stp	x19, x20, [sp, #16]
 130:	stp	x21, x22, [sp, #32]
 134:	mov	x20, x0
 138:	mov	w21, w1
 13c:	mov	w19, w3
 140:	orr	w2, w3, w2
 144:	cbz	w2, 1e8 <grub_mac_bless_inode+0xd4>
 148:	add	x4, sp, #0x30
 14c:	mov	x3, #0x200                 	// #512
 150:	mov	x2, #0x0                   	// #0
 154:	mov	x1, #0x2                   	// #2
 158:	ldr	x0, [x0]
 15c:	bl	0 <grub_disk_read>
 160:	cbnz	w0, 2b4 <grub_mac_bless_inode+0x1a0>
 164:	ldrh	w1, [sp, #48]
 168:	lsl	w2, w1, #8
 16c:	orr	w1, w2, w1, lsr #8
 170:	mov	x22, #0x0                   	// #0
 174:	mov	w2, #0x4244                	// #16964
 178:	cmp	w2, w1, sxth
 17c:	b.eq	20c <grub_mac_bless_inode+0xf8>  // b.none
 180:	ldrh	w0, [sp, #48]
 184:	lsr	w1, w0, #8
 188:	orr	w0, w1, w0, lsl #8
 18c:	sxth	w1, w0
 190:	mov	w2, #0x4858                	// #18520
 194:	cmp	w2, w0, sxth
 198:	mov	w0, #0x482b                	// #18475
 19c:	ccmp	w1, w0, #0x4, ne  // ne = any
 1a0:	b.ne	28c <grub_mac_bless_inode+0x178>  // b.any
 1a4:	cbz	w19, 2a8 <grub_mac_bless_inode+0x194>
 1a8:	rev	w1, w21
 1ac:	str	w1, [sp, #132]
 1b0:	add	x4, sp, #0x30
 1b4:	mov	x3, #0x200                 	// #512
 1b8:	mov	x2, #0x0                   	// #0
 1bc:	add	x1, x22, #0x2
 1c0:	ldr	x0, [x20]
 1c4:	bl	0 <grub_disk_write>
 1c8:	ldp	x19, x20, [sp, #16]
 1cc:	ldp	x21, x22, [sp, #32]
 1d0:	b	200 <grub_mac_bless_inode+0xec>
 1d4:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 1d8:	ldr	x1, [x0]
 1dc:	mov	w0, #0x12                  	// #18
 1e0:	bl	0 <grub_error>
 1e4:	b	200 <grub_mac_bless_inode+0xec>
 1e8:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 1ec:	ldr	x1, [x0]
 1f0:	mov	w0, #0x18                  	// #24
 1f4:	bl	0 <grub_error>
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	ldp	x21, x22, [sp, #32]
 200:	ldp	x29, x30, [sp]
 204:	add	sp, sp, #0x230
 208:	ret
 20c:	ldrh	w1, [sp, #172]
 210:	lsr	w2, w1, #8
 214:	orr	w1, w2, w1, lsl #8
 218:	mov	w2, #0x482b                	// #18475
 21c:	cmp	w2, w1, sxth
 220:	b.eq	230 <grub_mac_bless_inode+0x11c>  // b.none
 224:	ldp	x19, x20, [sp, #16]
 228:	ldp	x21, x22, [sp, #32]
 22c:	b	200 <grub_mac_bless_inode+0xec>
 230:	ldrh	w2, [sp, #174]
 234:	ldr	w0, [sp, #68]
 238:	rev	w0, w0
 23c:	ldrh	w1, [sp, #76]
 240:	lsr	w22, w2, #8
 244:	orr	w22, w22, w2, lsl #8
 248:	and	x22, x22, #0xffff
 24c:	asr	w0, w0, #9
 250:	sxtw	x0, w0
 254:	lsr	w2, w1, #8
 258:	orr	w1, w2, w1, lsl #8
 25c:	and	x1, x1, #0xffff
 260:	madd	x22, x22, x0, x1
 264:	add	x4, sp, #0x30
 268:	mov	x3, #0x200                 	// #512
 26c:	mov	x2, #0x0                   	// #0
 270:	add	x1, x22, #0x2
 274:	ldr	x0, [x20]
 278:	bl	0 <grub_disk_read>
 27c:	cbz	w0, 180 <grub_mac_bless_inode+0x6c>
 280:	ldp	x19, x20, [sp, #16]
 284:	ldp	x21, x22, [sp, #32]
 288:	b	200 <grub_mac_bless_inode+0xec>
 28c:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 290:	ldr	x1, [x0]
 294:	mov	w0, #0x9                   	// #9
 298:	bl	0 <grub_error>
 29c:	ldp	x19, x20, [sp, #16]
 2a0:	ldp	x21, x22, [sp, #32]
 2a4:	b	200 <grub_mac_bless_inode+0xec>
 2a8:	rev	w1, w21
 2ac:	str	w1, [sp, #128]
 2b0:	b	1b0 <grub_mac_bless_inode+0x9c>
 2b4:	ldp	x19, x20, [sp, #16]
 2b8:	ldp	x21, x22, [sp, #32]
 2bc:	b	200 <grub_mac_bless_inode+0xec>
	...

00000000000002d8 <grub_mac_bless_file>:
 2d8:	stp	x29, x30, [sp, #-96]!
 2dc:	mov	x29, sp
 2e0:	stp	x21, x22, [sp, #32]
 2e4:	str	x23, [sp, #48]
 2e8:	mov	x22, x0
 2ec:	mov	x21, x1
 2f0:	mov	w23, w2
 2f4:	bl	0 <grub_fs_probe>
 2f8:	cbz	x0, 3e8 <grub_mac_bless_file+0x110>
 2fc:	stp	x19, x20, [sp, #16]
 300:	mov	x20, x0
 304:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 308:	ldr	x1, [x0]
 30c:	ldr	x0, [x20, #16]
 310:	bl	0 <grub_strcmp>
 314:	cbz	w0, 32c <grub_mac_bless_file+0x54>
 318:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 31c:	ldr	x1, [x0]
 320:	ldr	x0, [x20, #16]
 324:	bl	0 <grub_strcmp>
 328:	cbnz	w0, 3e4 <grub_mac_bless_file+0x10c>
 32c:	mov	x0, x21
 330:	bl	0 <grub_strdup>
 334:	mov	x19, x0
 338:	cbz	x0, 408 <grub_mac_bless_file+0x130>
 33c:	bl	0 <grub_strlen>
 340:	sub	x3, x0, #0x1
 344:	add	x3, x19, x3
 348:	cmp	x19, x3
 34c:	b.eq	368 <grub_mac_bless_file+0x90>  // b.none
 350:	ldrb	w4, [x3]
 354:	cmp	w4, #0x2f
 358:	b.ne	368 <grub_mac_bless_file+0x90>  // b.any
 35c:	strb	wzr, [x3], #-1
 360:	cmp	x19, x3
 364:	b.ne	350 <grub_mac_bless_file+0x78>  // b.any
 368:	mov	w1, #0x2f                  	// #47
 36c:	mov	x0, x19
 370:	bl	0 <grub_strrchr>
 374:	str	wzr, [sp, #88]
 378:	cbz	x0, 41c <grub_mac_bless_file+0x144>
 37c:	strb	wzr, [x0], #1
 380:	str	x0, [sp, #80]
 384:	ldr	x4, [x20, #24]
 388:	ldrb	w0, [x19]
 38c:	adrp	x1, 0 <grub_mac_bless_inode-0x114>
 390:	ldr	x1, [x1]
 394:	cmp	w0, #0x0
 398:	add	x3, sp, #0x48
 39c:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 3a0:	ldr	x2, [x0]
 3a4:	csel	x1, x19, x1, ne  // ne = any
 3a8:	mov	x0, x22
 3ac:	blr	x4
 3b0:	ldr	w0, [sp, #88]
 3b4:	cbz	w0, 448 <grub_mac_bless_file+0x170>
 3b8:	mov	x0, x19
 3bc:	bl	0 <grub_free>
 3c0:	ldr	w0, [sp, #88]
 3c4:	cmp	w0, #0x2
 3c8:	mov	w3, w23
 3cc:	cset	w2, eq  // eq = none
 3d0:	ldr	w1, [sp, #72]
 3d4:	mov	x0, x22
 3d8:	bl	114 <grub_mac_bless_inode>
 3dc:	ldp	x19, x20, [sp, #16]
 3e0:	b	3f8 <grub_mac_bless_file+0x120>
 3e4:	ldp	x19, x20, [sp, #16]
 3e8:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 3ec:	ldr	x1, [x0]
 3f0:	mov	w0, #0x9                   	// #9
 3f4:	bl	0 <grub_error>
 3f8:	ldp	x21, x22, [sp, #32]
 3fc:	ldr	x23, [sp, #48]
 400:	ldp	x29, x30, [sp], #96
 404:	ret
 408:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 40c:	ldr	x0, [x0]
 410:	ldr	w0, [x0]
 414:	ldp	x19, x20, [sp, #16]
 418:	b	3f8 <grub_mac_bless_file+0x120>
 41c:	add	x0, x19, #0x1
 420:	str	x0, [sp, #80]
 424:	ldr	x4, [x20, #24]
 428:	add	x3, sp, #0x48
 42c:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 430:	ldr	x2, [x0]
 434:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 438:	ldr	x1, [x0]
 43c:	mov	x0, x22
 440:	blr	x4
 444:	b	3b0 <grub_mac_bless_file+0xd8>
 448:	mov	x0, x19
 44c:	bl	0 <grub_free>
 450:	mov	x2, x21
 454:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 458:	ldr	x1, [x0]
 45c:	mov	w0, #0x5                   	// #5
 460:	bl	0 <grub_error>
 464:	ldp	x19, x20, [sp, #16]
 468:	b	3f8 <grub_mac_bless_file+0x120>
 46c:	nop
	...
 4a8:	stp	x29, x30, [sp, #-48]!
 4ac:	mov	x29, sp
 4b0:	stp	x19, x20, [sp, #16]
 4b4:	cmp	w1, #0x1
 4b8:	b.eq	4e0 <grub_mac_bless_file+0x208>  // b.none
 4bc:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 4c0:	ldr	x1, [x0]
 4c4:	mov	w0, #0x12                  	// #18
 4c8:	bl	0 <grub_error>
 4cc:	mov	w19, w0
 4d0:	mov	w0, w19
 4d4:	ldp	x19, x20, [sp, #16]
 4d8:	ldp	x29, x30, [sp], #48
 4dc:	ret
 4e0:	stp	x21, x22, [sp, #32]
 4e4:	mov	x21, x0
 4e8:	mov	x19, x2
 4ec:	ldr	x0, [x2]
 4f0:	bl	0 <grub_file_get_device_name>
 4f4:	mov	x22, x0
 4f8:	bl	0 <grub_device_open>
 4fc:	mov	x20, x0
 500:	mov	w1, #0x29                  	// #41
 504:	ldr	x0, [x19]
 508:	bl	0 <grub_strchr>
 50c:	add	x1, x0, #0x1
 510:	cbz	x0, 554 <grub_mac_bless_file+0x27c>
 514:	ldrb	w0, [x1]
 518:	cmp	w0, #0x0
 51c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
 520:	b.ne	560 <grub_mac_bless_file+0x288>  // b.any
 524:	cbz	x20, 530 <grub_mac_bless_file+0x258>
 528:	mov	x0, x20
 52c:	bl	0 <grub_device_close>
 530:	mov	x0, x22
 534:	bl	0 <grub_free>
 538:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 53c:	ldr	x1, [x0]
 540:	mov	w0, #0x12                  	// #18
 544:	bl	0 <grub_error>
 548:	mov	w19, w0
 54c:	ldp	x21, x22, [sp, #32]
 550:	b	4d0 <grub_mac_bless_file+0x1f8>
 554:	ldr	x1, [x19]
 558:	cbz	x1, 524 <grub_mac_bless_file+0x24c>
 55c:	b	514 <grub_mac_bless_file+0x23c>
 560:	ldr	x0, [x21, #16]
 564:	ldrb	w0, [x0, #3]
 568:	cmp	w0, #0x74
 56c:	cset	w2, eq  // eq = none
 570:	mov	x0, x20
 574:	bl	2d8 <grub_mac_bless_file>
 578:	mov	w19, w0
 57c:	mov	x0, x20
 580:	bl	0 <grub_device_close>
 584:	mov	x0, x22
 588:	bl	0 <grub_free>
 58c:	ldp	x21, x22, [sp, #32]
 590:	b	4d0 <grub_mac_bless_file+0x1f8>
 594:	nop
	...

00000000000005a8 <grub_mod_init>:
 5a8:	stp	x29, x30, [sp, #-32]!
 5ac:	mov	x29, sp
 5b0:	stp	x19, x20, [sp, #16]
 5b4:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 5b8:	ldr	x20, [x0]
 5bc:	mov	w4, #0x0                   	// #0
 5c0:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 5c4:	ldr	x3, [x0]
 5c8:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 5cc:	ldr	x2, [x0]
 5d0:	mov	x1, x20
 5d4:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 5d8:	ldr	x0, [x0]
 5dc:	bl	0 <grub_register_command_prio>
 5e0:	adrp	x1, 0 <grub_mac_bless_inode-0x114>
 5e4:	ldr	x19, [x1]
 5e8:	str	x0, [x19]
 5ec:	mov	w4, #0x0                   	// #0
 5f0:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 5f4:	ldr	x3, [x0]
 5f8:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 5fc:	ldr	x2, [x0]
 600:	mov	x1, x20
 604:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 608:	ldr	x0, [x0]
 60c:	bl	0 <grub_register_command_prio>
 610:	str	x0, [x19, #8]
 614:	ldp	x19, x20, [sp, #16]
 618:	ldp	x29, x30, [sp], #32
 61c:	ret
	...

0000000000000660 <grub_mod_fini>:
 660:	stp	x29, x30, [sp, #-32]!
 664:	mov	x29, sp
 668:	str	x19, [sp, #16]
 66c:	adrp	x0, 0 <grub_mac_bless_inode-0x114>
 670:	ldr	x19, [x0]
 674:	ldr	x0, [x19]
 678:	bl	0 <grub_unregister_command>
 67c:	ldr	x0, [x19, #8]
 680:	bl	0 <grub_unregister_command>
 684:	ldr	x19, [sp, #16]
 688:	ldp	x29, x30, [sp], #32
 68c:	ret
	...
