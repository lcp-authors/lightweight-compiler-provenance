
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//print_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b28 <_init>:
 b28:	stp	x29, x30, [sp, #-16]!
 b2c:	mov	x29, sp
 b30:	bl	cb0 <call_weak_fn>
 b34:	ldp	x29, x30, [sp], #16
 b38:	ret

Disassembly of section .plt:

0000000000000b40 <.plt>:
 b40:	stp	x16, x30, [sp, #-16]!
 b44:	adrp	x16, 11000 <__FRAME_END__+0xfd64>
 b48:	ldr	x17, [x16, #4088]
 b4c:	add	x16, x16, #0xff8
 b50:	br	x17
 b54:	nop
 b58:	nop
 b5c:	nop

0000000000000b60 <all_digits@plt>:
 b60:	adrp	x16, 12000 <all_digits>
 b64:	ldr	x17, [x16]
 b68:	add	x16, x16, #0x0
 b6c:	br	x17

0000000000000b70 <strlen@plt>:
 b70:	adrp	x16, 12000 <all_digits>
 b74:	ldr	x17, [x16, #8]
 b78:	add	x16, x16, #0x8
 b7c:	br	x17

0000000000000b80 <fputs@plt>:
 b80:	adrp	x16, 12000 <all_digits>
 b84:	ldr	x17, [x16, #16]
 b88:	add	x16, x16, #0x10
 b8c:	br	x17

0000000000000b90 <dup@plt>:
 b90:	adrp	x16, 12000 <all_digits>
 b94:	ldr	x17, [x16, #24]
 b98:	add	x16, x16, #0x18
 b9c:	br	x17

0000000000000ba0 <__cxa_finalize@plt>:
 ba0:	adrp	x16, 12000 <all_digits>
 ba4:	ldr	x17, [x16, #32]
 ba8:	add	x16, x16, #0x20
 bac:	br	x17

0000000000000bb0 <fputc@plt>:
 bb0:	adrp	x16, 12000 <all_digits>
 bb4:	ldr	x17, [x16, #40]
 bb8:	add	x16, x16, #0x28
 bbc:	br	x17

0000000000000bc0 <make_word@plt>:
 bc0:	adrp	x16, 12000 <all_digits>
 bc4:	ldr	x17, [x16, #48]
 bc8:	add	x16, x16, #0x30
 bcc:	br	x17

0000000000000bd0 <fclose@plt>:
 bd0:	adrp	x16, 12000 <all_digits>
 bd4:	ldr	x17, [x16, #56]
 bd8:	add	x16, x16, #0x38
 bdc:	br	x17

0000000000000be0 <builtin_help@plt>:
 be0:	adrp	x16, 12000 <all_digits>
 be4:	ldr	x17, [x16, #64]
 be8:	add	x16, x16, #0x40
 bec:	br	x17

0000000000000bf0 <fdopen@plt>:
 bf0:	adrp	x16, 12000 <all_digits>
 bf4:	ldr	x17, [x16, #72]
 bf8:	add	x16, x16, #0x48
 bfc:	br	x17

0000000000000c00 <builtin_usage@plt>:
 c00:	adrp	x16, 12000 <all_digits>
 c04:	ldr	x17, [x16, #80]
 c08:	add	x16, x16, #0x50
 c0c:	br	x17

0000000000000c10 <__gmon_start__@plt>:
 c10:	adrp	x16, 12000 <all_digits>
 c14:	ldr	x17, [x16, #88]
 c18:	add	x16, x16, #0x58
 c1c:	br	x17

0000000000000c20 <ansicstr@plt>:
 c20:	adrp	x16, 12000 <all_digits>
 c24:	ldr	x17, [x16, #96]
 c28:	add	x16, x16, #0x60
 c2c:	br	x17

0000000000000c30 <dispose_words@plt>:
 c30:	adrp	x16, 12000 <all_digits>
 c34:	ldr	x17, [x16, #104]
 c38:	add	x16, x16, #0x68
 c3c:	br	x17

0000000000000c40 <free@plt>:
 c40:	adrp	x16, 12000 <all_digits>
 c44:	ldr	x17, [x16, #112]
 c48:	add	x16, x16, #0x70
 c4c:	br	x17

0000000000000c50 <internal_getopt@plt>:
 c50:	adrp	x16, 12000 <all_digits>
 c54:	ldr	x17, [x16, #120]
 c58:	add	x16, x16, #0x78
 c5c:	br	x17

0000000000000c60 <reset_internal_getopt@plt>:
 c60:	adrp	x16, 12000 <all_digits>
 c64:	ldr	x17, [x16, #128]
 c68:	add	x16, x16, #0x80
 c6c:	br	x17

0000000000000c70 <fflush@plt>:
 c70:	adrp	x16, 12000 <all_digits>
 c74:	ldr	x17, [x16, #136]
 c78:	add	x16, x16, #0x88
 c7c:	br	x17

0000000000000c80 <legal_number@plt>:
 c80:	adrp	x16, 12000 <all_digits>
 c84:	ldr	x17, [x16, #144]
 c88:	add	x16, x16, #0x90
 c8c:	br	x17

0000000000000c90 <printf_builtin@plt>:
 c90:	adrp	x16, 12000 <all_digits>
 c94:	ldr	x17, [x16, #152]
 c98:	add	x16, x16, #0x98
 c9c:	br	x17

0000000000000ca0 <make_word_list@plt>:
 ca0:	adrp	x16, 12000 <all_digits>
 ca4:	ldr	x17, [x16, #160]
 ca8:	add	x16, x16, #0xa0
 cac:	br	x17

Disassembly of section .text:

0000000000000cb0 <call_weak_fn>:
     cb0:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     cb4:	ldr	x0, [x0, #4040]
     cb8:	cbz	x0, cc0 <call_weak_fn+0x10>
     cbc:	b	c10 <__gmon_start__@plt>
     cc0:	ret

0000000000000cc4 <deregister_tm_clones>:
     cc4:	adrp	x0, 12000 <all_digits>
     cc8:	add	x0, x0, #0x110
     ccc:	adrp	x1, 12000 <all_digits>
     cd0:	add	x1, x1, #0x110
     cd4:	cmp	x1, x0
     cd8:	b.eq	cf0 <deregister_tm_clones+0x2c>  // b.none
     cdc:	adrp	x1, 11000 <__FRAME_END__+0xfd64>
     ce0:	ldr	x1, [x1, #4008]
     ce4:	cbz	x1, cf0 <deregister_tm_clones+0x2c>
     ce8:	mov	x16, x1
     cec:	br	x16
     cf0:	ret

0000000000000cf4 <register_tm_clones>:
     cf4:	adrp	x0, 12000 <all_digits>
     cf8:	add	x0, x0, #0x110
     cfc:	adrp	x1, 12000 <all_digits>
     d00:	add	x1, x1, #0x110
     d04:	sub	x1, x1, x0
     d08:	mov	x2, #0x2                   	// #2
     d0c:	asr	x1, x1, #3
     d10:	sdiv	x1, x1, x2
     d14:	cbz	x1, d2c <register_tm_clones+0x38>
     d18:	adrp	x2, 11000 <__FRAME_END__+0xfd64>
     d1c:	ldr	x2, [x2, #4064]
     d20:	cbz	x2, d2c <register_tm_clones+0x38>
     d24:	mov	x16, x2
     d28:	br	x16
     d2c:	ret

0000000000000d30 <__do_global_dtors_aux>:
     d30:	adrp	x0, 12000 <all_digits>
     d34:	ldrb	w1, [x0, #272]
     d38:	cbnz	w1, d7c <__do_global_dtors_aux+0x4c>
     d3c:	stp	x29, x30, [sp, #-32]!
     d40:	mov	x29, sp
     d44:	str	x19, [sp, #16]
     d48:	mov	x19, x0
     d4c:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     d50:	ldr	x0, [x0, #4016]
     d54:	cbz	x0, d64 <__do_global_dtors_aux+0x34>
     d58:	adrp	x0, 12000 <all_digits>
     d5c:	ldr	x0, [x0, #168]
     d60:	bl	ba0 <__cxa_finalize@plt>
     d64:	bl	cc4 <deregister_tm_clones>
     d68:	mov	w0, #0x1                   	// #1
     d6c:	strb	w0, [x19, #272]
     d70:	ldr	x19, [sp, #16]
     d74:	ldp	x29, x30, [sp], #32
     d78:	ret
     d7c:	ret

0000000000000d80 <frame_dummy>:
     d80:	b	cf4 <register_tm_clones>

0000000000000d84 <print_builtin>:
     d84:	stp	x29, x30, [sp, #-112]!
     d88:	mov	x29, sp
     d8c:	stp	x25, x26, [sp, #64]
     d90:	adrp	x26, 11000 <__FRAME_END__+0xfd64>
     d94:	adrp	x25, 1000 <print_builtin+0x27c>
     d98:	stp	x19, x20, [sp, #16]
     d9c:	mov	x20, x0
     da0:	add	x25, x25, #0x198
     da4:	stp	x21, x22, [sp, #32]
     da8:	mov	w19, #0x0                   	// #0
     dac:	mov	w22, #0x1                   	// #1
     db0:	stp	x23, x24, [sp, #48]
     db4:	adrp	x24, 1000 <print_builtin+0x27c>
     db8:	add	x24, x24, #0xa4
     dbc:	stp	x27, x28, [sp, #80]
     dc0:	bl	c60 <reset_internal_getopt@plt>
     dc4:	mov	x23, #0x0                   	// #0
     dc8:	ldr	x27, [x26, #4048]
     dcc:	mov	w21, #0x0                   	// #0
     dd0:	mov	x1, x24
     dd4:	mov	x0, x20
     dd8:	bl	c50 <internal_getopt@plt>
     ddc:	cmn	w0, #0x1
     de0:	b.eq	e84 <print_builtin+0x100>  // b.none
     de4:	cmp	w0, #0x75
     de8:	b.gt	e04 <print_builtin+0x80>
     dec:	cmp	w0, #0x65
     df0:	b.gt	e0c <print_builtin+0x88>
     df4:	cmn	w0, #0x63
     df8:	b.eq	f5c <print_builtin+0x1d8>  // b.none
     dfc:	cmp	w0, #0x52
     e00:	b.eq	e30 <print_builtin+0xac>  // b.none
     e04:	bl	c00 <builtin_usage@plt>
     e08:	b	f60 <print_builtin+0x1dc>
     e0c:	sub	w0, w0, #0x66
     e10:	cmp	w0, #0xf
     e14:	b.hi	e04 <print_builtin+0x80>  // b.pmore
     e18:	ldrb	w0, [x25, w0, uxtw]
     e1c:	adr	x1, e28 <print_builtin+0xa4>
     e20:	add	x0, x1, w0, sxtb #2
     e24:	br	x0
     e28:	mov	w19, #0x1                   	// #1
     e2c:	b	dd0 <print_builtin+0x4c>
     e30:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     e34:	ldr	x0, [x0, #4024]
     e38:	ldr	x1, [x0]
     e3c:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     e40:	ldr	x0, [x0, #4056]
     e44:	str	x1, [x0]
     e48:	cbz	x1, f8c <print_builtin+0x208>
     e4c:	ldr	x2, [x1, #8]
     e50:	ldr	x2, [x2]
     e54:	ldrb	w3, [x2]
     e58:	cmp	w3, #0x2d
     e5c:	b.ne	f8c <print_builtin+0x208>  // b.any
     e60:	ldrb	w3, [x2, #1]
     e64:	cmp	w3, #0x6e
     e68:	b.ne	f8c <print_builtin+0x208>  // b.any
     e6c:	ldrb	w2, [x2, #2]
     e70:	cbnz	w2, f8c <print_builtin+0x208>
     e74:	ldr	x1, [x1]
     e78:	mov	w19, #0x2                   	// #2
     e7c:	mov	w21, #0x1                   	// #1
     e80:	str	x1, [x0]
     e84:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     e88:	cmp	w22, #0x1
     e8c:	ldr	x0, [x0, #4056]
     e90:	ldr	x20, [x0]
     e94:	b.eq	f94 <print_builtin+0x210>  // b.none
     e98:	mov	w0, w22
     e9c:	bl	b90 <dup@plt>
     ea0:	adrp	x1, 1000 <print_builtin+0x27c>
     ea4:	add	x1, x1, #0xae
     ea8:	bl	bf0 <fdopen@plt>
     eac:	mov	x25, x0
     eb0:	adrp	x24, 12000 <all_digits>
     eb4:	str	x25, [x24, #280]
     eb8:	cbz	x23, fa4 <print_builtin+0x220>
     ebc:	mov	x0, x23
     ec0:	bl	bc0 <make_word@plt>
     ec4:	mov	x1, x20
     ec8:	bl	ca0 <make_word_list@plt>
     ecc:	mov	x20, x0
     ed0:	bl	c90 <printf_builtin@plt>
     ed4:	mov	w19, w0
     ed8:	str	xzr, [x20]
     edc:	mov	x0, x20
     ee0:	bl	c30 <dispose_words@plt>
     ee4:	b	f64 <print_builtin+0x1e0>
     ee8:	ldr	x28, [x26, #4048]
     eec:	ldr	x0, [x28]
     ef0:	bl	b60 <all_digits@plt>
     ef4:	cbnz	w0, f30 <print_builtin+0x1ac>
     ef8:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     efc:	ldr	x1, [x0, #4024]
     f00:	ldr	x1, [x1]
     f04:	mov	x2, x20
     f08:	ldr	x20, [x20]
     f0c:	cbz	x20, f18 <print_builtin+0x194>
     f10:	cmp	x20, x1
     f14:	b.ne	f04 <print_builtin+0x180>  // b.any
     f18:	adrp	x1, 11000 <__FRAME_END__+0xfd64>
     f1c:	ldr	x0, [x0, #4024]
     f20:	ldr	x1, [x1, #4056]
     f24:	str	x2, [x0]
     f28:	str	x2, [x1]
     f2c:	b	e84 <print_builtin+0x100>
     f30:	ldr	x0, [x28]
     f34:	add	x1, sp, #0x68
     f38:	bl	c80 <legal_number@plt>
     f3c:	cbz	w0, ef8 <print_builtin+0x174>
     f40:	ldr	x0, [sp, #104]
     f44:	cmp	x0, w0, sxtw
     f48:	b.ne	ef8 <print_builtin+0x174>  // b.any
     f4c:	mov	w22, w0
     f50:	b	dd0 <print_builtin+0x4c>
     f54:	ldr	x23, [x27]
     f58:	b	dd0 <print_builtin+0x4c>
     f5c:	bl	be0 <builtin_help@plt>
     f60:	mov	w19, #0x102                 	// #258
     f64:	mov	w0, w19
     f68:	ldp	x19, x20, [sp, #16]
     f6c:	ldp	x21, x22, [sp, #32]
     f70:	ldp	x23, x24, [sp, #48]
     f74:	ldp	x25, x26, [sp, #64]
     f78:	ldp	x27, x28, [sp, #80]
     f7c:	ldp	x29, x30, [sp], #112
     f80:	ret
     f84:	mov	w21, #0x1                   	// #1
     f88:	b	dd0 <print_builtin+0x4c>
     f8c:	mov	w19, #0x2                   	// #2
     f90:	b	e84 <print_builtin+0x100>
     f94:	adrp	x0, 11000 <__FRAME_END__+0xfd64>
     f98:	ldr	x0, [x0, #4032]
     f9c:	ldr	x25, [x0]
     fa0:	b	eb0 <print_builtin+0x12c>
     fa4:	cbnz	w19, 1008 <print_builtin+0x284>
     fa8:	add	x26, sp, #0x64
     fac:	str	wzr, [sp, #100]
     fb0:	cbnz	x20, 102c <print_builtin+0x2a8>
     fb4:	mov	w0, #0x1                   	// #1
     fb8:	eor	w21, w21, #0x1
     fbc:	tst	w21, w0
     fc0:	b.eq	fd0 <print_builtin+0x24c>  // b.none
     fc4:	ldr	x1, [x24, #280]
     fc8:	mov	w0, #0xa                   	// #10
     fcc:	bl	bb0 <fputc@plt>
     fd0:	cmp	w22, #0x1
     fd4:	b.eq	f64 <print_builtin+0x1e0>  // b.none
     fd8:	ldr	x0, [x24, #280]
     fdc:	bl	bd0 <fclose@plt>
     fe0:	b	f64 <print_builtin+0x1e0>
     fe4:	ldr	x0, [x20, #8]
     fe8:	ldr	x0, [x0]
     fec:	bl	b80 <fputs@plt>
     ff0:	ldr	x0, [x20]
     ff4:	cbz	x0, 1004 <print_builtin+0x280>
     ff8:	ldr	x1, [x24, #280]
     ffc:	mov	w0, #0x20                  	// #32
    1000:	bl	bb0 <fputc@plt>
    1004:	ldr	x20, [x20]
    1008:	ldr	x1, [x24, #280]
    100c:	cbnz	x20, fe4 <print_builtin+0x260>
    1010:	cbnz	w21, 101c <print_builtin+0x298>
    1014:	mov	w0, #0xa                   	// #10
    1018:	bl	bb0 <fputc@plt>
    101c:	ldr	x0, [x24, #280]
    1020:	mov	w19, #0x0                   	// #0
    1024:	bl	c70 <fflush@plt>
    1028:	b	f64 <print_builtin+0x1e0>
    102c:	ldr	x0, [x20, #8]
    1030:	ldr	x23, [x0]
    1034:	mov	x0, x23
    1038:	bl	b70 <strlen@plt>
    103c:	mov	x3, x26
    1040:	mov	w1, w0
    1044:	mov	x4, #0x0                   	// #0
    1048:	mov	w2, #0x0                   	// #0
    104c:	mov	x0, x23
    1050:	bl	c20 <ansicstr@plt>
    1054:	mov	x1, x25
    1058:	mov	x23, x0
    105c:	bl	b80 <fputs@plt>
    1060:	mov	x0, x23
    1064:	bl	c40 <free@plt>
    1068:	ldr	w0, [sp, #100]
    106c:	cbnz	w0, 108c <print_builtin+0x308>
    1070:	ldr	x0, [x20]
    1074:	cbz	x0, 1084 <print_builtin+0x300>
    1078:	mov	x1, x25
    107c:	mov	w0, #0x20                  	// #32
    1080:	bl	bb0 <fputc@plt>
    1084:	ldr	x20, [x20]
    1088:	b	fb0 <print_builtin+0x22c>
    108c:	mov	w0, #0x0                   	// #0
    1090:	b	fb8 <print_builtin+0x234>

Disassembly of section .fini:

0000000000001094 <_fini>:
    1094:	stp	x29, x30, [sp, #-16]!
    1098:	mov	x29, sp
    109c:	ldp	x29, x30, [sp], #16
    10a0:	ret
