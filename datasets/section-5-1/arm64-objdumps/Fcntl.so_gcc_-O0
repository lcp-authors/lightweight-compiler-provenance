
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Fcntl.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001910 <_init>:
    1910:	stp	x29, x30, [sp, #-16]!
    1914:	mov	x29, sp
    1918:	bl	1b00 <call_weak_fn>
    191c:	ldp	x29, x30, [sp], #16
    1920:	ret

Disassembly of section .plt:

0000000000001930 <.plt>:
    1930:	stp	x16, x30, [sp, #-16]!
    1934:	adrp	x16, 14000 <__FRAME_END__+0x1088c>
    1938:	ldr	x17, [x16, #4088]
    193c:	add	x16, x16, #0xff8
    1940:	br	x17
    1944:	nop
    1948:	nop
    194c:	nop

0000000000001950 <Perl_sv_2uv_flags@plt>:
    1950:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1954:	ldr	x17, [x16]
    1958:	add	x16, x16, #0x0
    195c:	br	x17

0000000000001960 <Perl_stack_grow@plt>:
    1960:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1964:	ldr	x17, [x16, #8]
    1968:	add	x16, x16, #0x8
    196c:	br	x17

0000000000001970 <__cxa_finalize@plt>:
    1970:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1974:	ldr	x17, [x16, #16]
    1978:	add	x16, x16, #0x10
    197c:	br	x17

0000000000001980 <Perl_newCONSTSUB@plt>:
    1980:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1984:	ldr	x17, [x16, #24]
    1988:	add	x16, x16, #0x18
    198c:	br	x17

0000000000001990 <Perl_sv_upgrade@plt>:
    1990:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1994:	ldr	x17, [x16, #32]
    1998:	add	x16, x16, #0x20
    199c:	br	x17

00000000000019a0 <Perl_mro_method_changed_in@plt>:
    19a0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    19a4:	ldr	x17, [x16, #40]
    19a8:	add	x16, x16, #0x28
    19ac:	br	x17

00000000000019b0 <Perl_xs_boot_epilog@plt>:
    19b0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    19b4:	ldr	x17, [x16, #48]
    19b8:	add	x16, x16, #0x30
    19bc:	br	x17

00000000000019c0 <__gmon_start__@plt>:
    19c0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    19c4:	ldr	x17, [x16, #56]
    19c8:	add	x16, x16, #0x38
    19cc:	br	x17

00000000000019d0 <Perl_croak_xs_usage@plt>:
    19d0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    19d4:	ldr	x17, [x16, #64]
    19d8:	add	x16, x16, #0x40
    19dc:	br	x17

00000000000019e0 <Perl_newSVpvn_flags@plt>:
    19e0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    19e4:	ldr	x17, [x16, #72]
    19e8:	add	x16, x16, #0x48
    19ec:	br	x17

00000000000019f0 <Perl_croak_nocontext@plt>:
    19f0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    19f4:	ldr	x17, [x16, #80]
    19f8:	add	x16, x16, #0x50
    19fc:	br	x17

0000000000001a00 <Perl_newXS@plt>:
    1a00:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a04:	ldr	x17, [x16, #88]
    1a08:	add	x16, x16, #0x58
    1a0c:	br	x17

0000000000001a10 <Perl_newXS_deffile@plt>:
    1a10:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a14:	ldr	x17, [x16, #96]
    1a18:	add	x16, x16, #0x60
    1a1c:	br	x17

0000000000001a20 <Perl_sv_2mortal@plt>:
    1a20:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a24:	ldr	x17, [x16, #104]
    1a28:	add	x16, x16, #0x68
    1a2c:	br	x17

0000000000001a30 <Perl_hv_common@plt>:
    1a30:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a34:	ldr	x17, [x16, #112]
    1a38:	add	x16, x16, #0x70
    1a3c:	br	x17

0000000000001a40 <Perl_newSVuv@plt>:
    1a40:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a44:	ldr	x17, [x16, #120]
    1a48:	add	x16, x16, #0x78
    1a4c:	br	x17

0000000000001a50 <Perl_croak_sv@plt>:
    1a50:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a54:	ldr	x17, [x16, #128]
    1a58:	add	x16, x16, #0x80
    1a5c:	br	x17

0000000000001a60 <Perl_xs_handshake@plt>:
    1a60:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a64:	ldr	x17, [x16, #136]
    1a68:	add	x16, x16, #0x88
    1a6c:	br	x17

0000000000001a70 <Perl_hv_common_key_len@plt>:
    1a70:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a74:	ldr	x17, [x16, #144]
    1a78:	add	x16, x16, #0x90
    1a7c:	br	x17

0000000000001a80 <Perl_sv_setpvn@plt>:
    1a80:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a84:	ldr	x17, [x16, #152]
    1a88:	add	x16, x16, #0x98
    1a8c:	br	x17

0000000000001a90 <Perl_newSV_type@plt>:
    1a90:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1a94:	ldr	x17, [x16, #160]
    1a98:	add	x16, x16, #0xa0
    1a9c:	br	x17

0000000000001aa0 <Perl_newSVpvf_nocontext@plt>:
    1aa0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1aa4:	ldr	x17, [x16, #168]
    1aa8:	add	x16, x16, #0xa8
    1aac:	br	x17

0000000000001ab0 <Perl_sv_setuv_mg@plt>:
    1ab0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1ab4:	ldr	x17, [x16, #176]
    1ab8:	add	x16, x16, #0xb0
    1abc:	br	x17

0000000000001ac0 <Perl_sv_free2@plt>:
    1ac0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1ac4:	ldr	x17, [x16, #184]
    1ac8:	add	x16, x16, #0xb8
    1acc:	br	x17

0000000000001ad0 <Perl_newSViv@plt>:
    1ad0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1ad4:	ldr	x17, [x16, #192]
    1ad8:	add	x16, x16, #0xc0
    1adc:	br	x17

0000000000001ae0 <Perl_sv_newmortal@plt>:
    1ae0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1ae4:	ldr	x17, [x16, #200]
    1ae8:	add	x16, x16, #0xc8
    1aec:	br	x17

0000000000001af0 <Perl_get_hv@plt>:
    1af0:	adrp	x16, 15000 <Perl_sv_2uv_flags>
    1af4:	ldr	x17, [x16, #208]
    1af8:	add	x16, x16, #0xd0
    1afc:	br	x17

Disassembly of section .text:

0000000000001b00 <call_weak_fn>:
    1b00:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    1b04:	ldr	x0, [x0, #4048]
    1b08:	cbz	x0, 1b10 <call_weak_fn+0x10>
    1b0c:	b	19c0 <__gmon_start__@plt>
    1b10:	ret

0000000000001b14 <deregister_tm_clones>:
    1b14:	stp	x29, x30, [sp, #-32]!
    1b18:	mov	x29, sp
    1b1c:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1b20:	add	x0, x0, #0xe0
    1b24:	str	x0, [sp, #24]
    1b28:	ldr	x0, [sp, #24]
    1b2c:	str	x0, [sp, #24]
    1b30:	ldr	x1, [sp, #24]
    1b34:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1b38:	add	x0, x0, #0xe0
    1b3c:	cmp	x1, x0
    1b40:	b.eq	1b78 <deregister_tm_clones+0x64>  // b.none
    1b44:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    1b48:	ldr	x0, [x0, #4032]
    1b4c:	str	x0, [sp, #16]
    1b50:	ldr	x0, [sp, #16]
    1b54:	str	x0, [sp, #16]
    1b58:	ldr	x0, [sp, #16]
    1b5c:	cmp	x0, #0x0
    1b60:	b.eq	1b7c <deregister_tm_clones+0x68>  // b.none
    1b64:	ldr	x1, [sp, #16]
    1b68:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1b6c:	add	x0, x0, #0xe0
    1b70:	blr	x1
    1b74:	b	1b7c <deregister_tm_clones+0x68>
    1b78:	nop
    1b7c:	ldp	x29, x30, [sp], #32
    1b80:	ret

0000000000001b84 <register_tm_clones>:
    1b84:	stp	x29, x30, [sp, #-48]!
    1b88:	mov	x29, sp
    1b8c:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1b90:	add	x0, x0, #0xe0
    1b94:	str	x0, [sp, #40]
    1b98:	ldr	x0, [sp, #40]
    1b9c:	str	x0, [sp, #40]
    1ba0:	ldr	x1, [sp, #40]
    1ba4:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1ba8:	add	x0, x0, #0xe0
    1bac:	sub	x0, x1, x0
    1bb0:	asr	x0, x0, #3
    1bb4:	lsr	x1, x0, #63
    1bb8:	add	x0, x1, x0
    1bbc:	asr	x0, x0, #1
    1bc0:	str	x0, [sp, #32]
    1bc4:	ldr	x0, [sp, #32]
    1bc8:	cmp	x0, #0x0
    1bcc:	b.eq	1c08 <register_tm_clones+0x84>  // b.none
    1bd0:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    1bd4:	ldr	x0, [x0, #4064]
    1bd8:	str	x0, [sp, #24]
    1bdc:	ldr	x0, [sp, #24]
    1be0:	str	x0, [sp, #24]
    1be4:	ldr	x0, [sp, #24]
    1be8:	cmp	x0, #0x0
    1bec:	b.eq	1c0c <register_tm_clones+0x88>  // b.none
    1bf0:	ldr	x2, [sp, #24]
    1bf4:	ldr	x1, [sp, #32]
    1bf8:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1bfc:	add	x0, x0, #0xe0
    1c00:	blr	x2
    1c04:	b	1c0c <register_tm_clones+0x88>
    1c08:	nop
    1c0c:	ldp	x29, x30, [sp], #48
    1c10:	ret

0000000000001c14 <__do_global_dtors_aux>:
    1c14:	stp	x29, x30, [sp, #-16]!
    1c18:	mov	x29, sp
    1c1c:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1c20:	add	x0, x0, #0xe0
    1c24:	ldrb	w0, [x0]
    1c28:	and	x0, x0, #0xff
    1c2c:	cmp	x0, #0x0
    1c30:	b.ne	1c6c <__do_global_dtors_aux+0x58>  // b.any
    1c34:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    1c38:	ldr	x0, [x0, #4040]
    1c3c:	cmp	x0, #0x0
    1c40:	b.eq	1c54 <__do_global_dtors_aux+0x40>  // b.none
    1c44:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1c48:	add	x0, x0, #0xd8
    1c4c:	ldr	x0, [x0]
    1c50:	bl	1970 <__cxa_finalize@plt>
    1c54:	bl	1b14 <deregister_tm_clones>
    1c58:	adrp	x0, 15000 <Perl_sv_2uv_flags>
    1c5c:	add	x0, x0, #0xe0
    1c60:	mov	w1, #0x1                   	// #1
    1c64:	strb	w1, [x0]
    1c68:	b	1c70 <__do_global_dtors_aux+0x5c>
    1c6c:	nop
    1c70:	ldp	x29, x30, [sp], #16
    1c74:	ret

0000000000001c78 <frame_dummy>:
    1c78:	stp	x29, x30, [sp, #-16]!
    1c7c:	mov	x29, sp
    1c80:	bl	1b84 <register_tm_clones>
    1c84:	nop
    1c88:	ldp	x29, x30, [sp], #16
    1c8c:	ret

0000000000001c90 <S_POPMARK>:
    1c90:	sub	sp, sp, #0x10
    1c94:	str	x0, [sp, #8]
    1c98:	ldr	x0, [sp, #8]
    1c9c:	ldr	x0, [x0, #120]
    1ca0:	sub	x2, x0, #0x4
    1ca4:	ldr	x1, [sp, #8]
    1ca8:	str	x2, [x1, #120]
    1cac:	ldr	w0, [x0]
    1cb0:	add	sp, sp, #0x10
    1cb4:	ret

0000000000001cb8 <S_SvREFCNT_dec>:
    1cb8:	stp	x29, x30, [sp, #-48]!
    1cbc:	mov	x29, sp
    1cc0:	str	x0, [sp, #24]
    1cc4:	str	x1, [sp, #16]
    1cc8:	ldr	x0, [sp, #16]
    1ccc:	cmp	x0, #0x0
    1cd0:	cset	w0, ne  // ne = any
    1cd4:	and	w0, w0, #0xff
    1cd8:	and	x0, x0, #0xff
    1cdc:	cmp	x0, #0x0
    1ce0:	b.eq	1d30 <S_SvREFCNT_dec+0x78>  // b.none
    1ce4:	ldr	x0, [sp, #16]
    1ce8:	ldr	w0, [x0, #8]
    1cec:	str	w0, [sp, #44]
    1cf0:	ldr	w0, [sp, #44]
    1cf4:	cmp	w0, #0x1
    1cf8:	cset	w0, hi  // hi = pmore
    1cfc:	and	w0, w0, #0xff
    1d00:	and	x0, x0, #0xff
    1d04:	cmp	x0, #0x0
    1d08:	b.eq	1d20 <S_SvREFCNT_dec+0x68>  // b.none
    1d0c:	ldr	w0, [sp, #44]
    1d10:	sub	w1, w0, #0x1
    1d14:	ldr	x0, [sp, #16]
    1d18:	str	w1, [x0, #8]
    1d1c:	b	1d30 <S_SvREFCNT_dec+0x78>
    1d20:	ldr	w2, [sp, #44]
    1d24:	ldr	x1, [sp, #16]
    1d28:	ldr	x0, [sp, #24]
    1d2c:	bl	1ac0 <Perl_sv_free2@plt>
    1d30:	nop
    1d34:	ldp	x29, x30, [sp], #48
    1d38:	ret

0000000000001d3c <S_croak_memory_wrap>:
    1d3c:	stp	x29, x30, [sp, #-16]!
    1d40:	mov	x29, sp
    1d44:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    1d48:	ldr	x1, [x0, #4056]
    1d4c:	adrp	x0, 2000 <constant_add_symbol+0x108>
    1d50:	add	x0, x0, #0xcd8
    1d54:	bl	19f0 <Perl_croak_nocontext@plt>

0000000000001d58 <XS_Fcntl_S_ISREG>:
    1d58:	stp	x29, x30, [sp, #-80]!
    1d5c:	mov	x29, sp
    1d60:	str	x0, [sp, #24]
    1d64:	str	x1, [sp, #16]
    1d68:	ldr	x0, [sp, #24]
    1d6c:	ldr	x0, [x0]
    1d70:	str	x0, [sp, #48]
    1d74:	ldr	x0, [sp, #24]
    1d78:	bl	1c90 <S_POPMARK>
    1d7c:	str	w0, [sp, #36]
    1d80:	ldr	x0, [sp, #24]
    1d84:	ldr	x1, [x0, #24]
    1d88:	ldr	w0, [sp, #36]
    1d8c:	add	w2, w0, #0x1
    1d90:	str	w2, [sp, #36]
    1d94:	sxtw	x0, w0
    1d98:	lsl	x0, x0, #3
    1d9c:	add	x0, x1, x0
    1da0:	str	x0, [sp, #64]
    1da4:	ldr	x1, [sp, #48]
    1da8:	ldr	x0, [sp, #64]
    1dac:	sub	x0, x1, x0
    1db0:	asr	x0, x0, #3
    1db4:	str	w0, [sp, #40]
    1db8:	ldr	x0, [sp, #16]
    1dbc:	ldr	x0, [x0]
    1dc0:	str	x0, [sp, #72]
    1dc4:	ldr	x0, [sp, #72]
    1dc8:	ldr	w0, [x0, #40]
    1dcc:	str	w0, [sp, #44]
    1dd0:	ldrsw	x0, [sp, #40]
    1dd4:	lsl	x0, x0, #3
    1dd8:	neg	x0, x0
    1ddc:	ldr	x1, [sp, #48]
    1de0:	add	x0, x1, x0
    1de4:	str	x0, [sp, #48]
    1de8:	ldr	w0, [sp, #40]
    1dec:	cmp	w0, #0x0
    1df0:	b.le	1e14 <XS_Fcntl_S_ISREG+0xbc>
    1df4:	ldr	x0, [sp, #24]
    1df8:	ldr	x1, [x0, #24]
    1dfc:	ldrsw	x0, [sp, #36]
    1e00:	lsl	x0, x0, #3
    1e04:	add	x0, x1, x0
    1e08:	ldr	x0, [x0]
    1e0c:	str	x0, [sp, #56]
    1e10:	b	1e60 <XS_Fcntl_S_ISREG+0x108>
    1e14:	ldr	x0, [sp, #24]
    1e18:	add	x0, x0, #0x150
    1e1c:	str	x0, [sp, #56]
    1e20:	ldr	x0, [sp, #24]
    1e24:	ldr	x1, [x0, #32]
    1e28:	ldr	x0, [sp, #48]
    1e2c:	sub	x0, x1, x0
    1e30:	cmp	x0, #0x0
    1e34:	cset	w0, le
    1e38:	and	w0, w0, #0xff
    1e3c:	and	x0, x0, #0xff
    1e40:	cmp	x0, #0x0
    1e44:	b.eq	1e60 <XS_Fcntl_S_ISREG+0x108>  // b.none
    1e48:	mov	x3, #0x1                   	// #1
    1e4c:	ldr	x2, [sp, #48]
    1e50:	ldr	x1, [sp, #48]
    1e54:	ldr	x0, [sp, #24]
    1e58:	bl	1960 <Perl_stack_grow@plt>
    1e5c:	str	x0, [sp, #48]
    1e60:	ldr	x0, [sp, #56]
    1e64:	ldr	w1, [x0, #12]
    1e68:	mov	w0, #0x100                 	// #256
    1e6c:	movk	w0, #0x8020, lsl #16
    1e70:	and	w1, w1, w0
    1e74:	mov	w0, #0x100                 	// #256
    1e78:	movk	w0, #0x8000, lsl #16
    1e7c:	cmp	w1, w0
    1e80:	b.ne	1e98 <XS_Fcntl_S_ISREG+0x140>  // b.any
    1e84:	ldr	x0, [sp, #56]
    1e88:	ldr	x0, [x0]
    1e8c:	ldr	x0, [x0, #32]
    1e90:	and	x0, x0, #0xf000
    1e94:	b	1eac <XS_Fcntl_S_ISREG+0x154>
    1e98:	mov	w2, #0x2                   	// #2
    1e9c:	ldr	x1, [sp, #56]
    1ea0:	ldr	x0, [sp, #24]
    1ea4:	bl	1950 <Perl_sv_2uv_flags@plt>
    1ea8:	and	x0, x0, #0xf000
    1eac:	ldrsw	x1, [sp, #44]
    1eb0:	cmp	x0, x1
    1eb4:	b.ne	1ec4 <XS_Fcntl_S_ISREG+0x16c>  // b.any
    1eb8:	ldr	x0, [sp, #24]
    1ebc:	add	x0, x0, #0x138
    1ec0:	b	1ecc <XS_Fcntl_S_ISREG+0x174>
    1ec4:	ldr	x0, [sp, #24]
    1ec8:	add	x0, x0, #0x168
    1ecc:	ldr	x1, [sp, #48]
    1ed0:	add	x1, x1, #0x8
    1ed4:	str	x1, [sp, #48]
    1ed8:	ldr	x1, [sp, #48]
    1edc:	str	x0, [x1]
    1ee0:	ldr	x0, [sp, #24]
    1ee4:	ldr	x1, [sp, #48]
    1ee8:	str	x1, [x0]
    1eec:	nop
    1ef0:	ldp	x29, x30, [sp], #80
    1ef4:	ret

0000000000001ef8 <constant_add_symbol>:
    1ef8:	stp	x29, x30, [sp, #-80]!
    1efc:	mov	x29, sp
    1f00:	str	x0, [sp, #56]
    1f04:	str	x1, [sp, #48]
    1f08:	str	x2, [sp, #40]
    1f0c:	str	w3, [sp, #36]
    1f10:	str	x4, [sp, #24]
    1f14:	mov	w6, #0x0                   	// #0
    1f18:	mov	x5, #0x0                   	// #0
    1f1c:	mov	w4, #0x10                  	// #16
    1f20:	ldr	w3, [sp, #36]
    1f24:	ldr	x2, [sp, #40]
    1f28:	ldr	x1, [sp, #48]
    1f2c:	ldr	x0, [sp, #56]
    1f30:	bl	1a70 <Perl_hv_common_key_len@plt>
    1f34:	str	x0, [sp, #64]
    1f38:	ldr	x0, [sp, #64]
    1f3c:	cmp	x0, #0x0
    1f40:	b.ne	1f54 <constant_add_symbol+0x5c>  // b.any
    1f44:	ldr	x1, [sp, #40]
    1f48:	adrp	x0, 2000 <constant_add_symbol+0x108>
    1f4c:	add	x0, x0, #0xce0
    1f50:	bl	19f0 <Perl_croak_nocontext@plt>
    1f54:	ldr	x0, [sp, #64]
    1f58:	ldr	x0, [x0, #16]
    1f5c:	str	x0, [sp, #72]
    1f60:	ldr	x0, [sp, #72]
    1f64:	ldr	w0, [x0, #12]
    1f68:	and	w0, w0, #0xff00
    1f6c:	cmp	w0, #0x0
    1f70:	b.ne	1f88 <constant_add_symbol+0x90>  // b.any
    1f74:	ldr	x0, [sp, #72]
    1f78:	ldr	w0, [x0, #12]
    1f7c:	and	w0, w0, #0xff
    1f80:	cmp	w0, #0x9
    1f84:	b.ne	1fa0 <constant_add_symbol+0xa8>  // b.any
    1f88:	ldr	x3, [sp, #24]
    1f8c:	ldr	x2, [sp, #40]
    1f90:	ldr	x1, [sp, #48]
    1f94:	ldr	x0, [sp, #56]
    1f98:	bl	1980 <Perl_newCONSTSUB@plt>
    1f9c:	b	1ffc <constant_add_symbol+0x104>
    1fa0:	ldr	x0, [sp, #72]
    1fa4:	ldr	w0, [x0, #12]
    1fa8:	and	w0, w0, #0xff
    1fac:	cmp	w0, #0x0
    1fb0:	b.ne	1fc4 <constant_add_symbol+0xcc>  // b.any
    1fb4:	mov	w2, #0x1                   	// #1
    1fb8:	ldr	x1, [sp, #72]
    1fbc:	ldr	x0, [sp, #56]
    1fc0:	bl	1990 <Perl_sv_upgrade@plt>
    1fc4:	ldr	x0, [sp, #72]
    1fc8:	ldr	x1, [sp, #24]
    1fcc:	str	x1, [x0, #16]
    1fd0:	ldr	x0, [sp, #72]
    1fd4:	ldr	w0, [x0, #12]
    1fd8:	orr	w1, w0, #0x800
    1fdc:	ldr	x0, [sp, #72]
    1fe0:	str	w1, [x0, #12]
    1fe4:	ldr	x0, [sp, #24]
    1fe8:	ldr	w0, [x0, #12]
    1fec:	orr	w1, w0, #0x8000000
    1ff0:	ldr	x0, [sp, #24]
    1ff4:	str	w1, [x0, #12]
    1ff8:	nop
    1ffc:	nop
    2000:	ldp	x29, x30, [sp], #80
    2004:	ret

0000000000002008 <get_missing_hash>:
    2008:	stp	x29, x30, [sp, #-64]!
    200c:	mov	x29, sp
    2010:	str	x0, [sp, #24]
    2014:	mov	w2, #0x2                   	// #2
    2018:	adrp	x0, 2000 <constant_add_symbol+0x108>
    201c:	add	x1, x0, #0xd08
    2020:	ldr	x0, [sp, #24]
    2024:	bl	1af0 <Perl_get_hv@plt>
    2028:	str	x0, [sp, #32]
    202c:	mov	w6, #0x0                   	// #0
    2030:	mov	x5, #0x0                   	// #0
    2034:	mov	w4, #0x30                  	// #48
    2038:	mov	w3, #0x5                   	// #5
    203c:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2040:	add	x2, x0, #0xd30
    2044:	ldr	x1, [sp, #32]
    2048:	ldr	x0, [sp, #24]
    204c:	bl	1a70 <Perl_hv_common_key_len@plt>
    2050:	str	x0, [sp, #40]
    2054:	ldr	x0, [sp, #40]
    2058:	cmp	x0, #0x0
    205c:	b.ne	2068 <get_missing_hash+0x60>  // b.any
    2060:	mov	x0, #0x0                   	// #0
    2064:	b	2108 <get_missing_hash+0x100>
    2068:	ldr	x0, [sp, #40]
    206c:	ldr	x0, [x0]
    2070:	ldr	w0, [x0, #12]
    2074:	and	w0, w0, #0x800
    2078:	cmp	w0, #0x0
    207c:	b.eq	2090 <get_missing_hash+0x88>  // b.none
    2080:	ldr	x0, [sp, #40]
    2084:	ldr	x0, [x0]
    2088:	ldr	x0, [x0, #16]
    208c:	b	2108 <get_missing_hash+0x100>
    2090:	mov	w1, #0xc                   	// #12
    2094:	ldr	x0, [sp, #24]
    2098:	bl	1a90 <Perl_newSV_type@plt>
    209c:	str	x0, [sp, #48]
    20a0:	ldr	x0, [sp, #48]
    20a4:	str	x0, [sp, #56]
    20a8:	ldr	x0, [sp, #40]
    20ac:	ldr	x0, [x0]
    20b0:	ldr	w0, [x0, #12]
    20b4:	and	w0, w0, #0xff
    20b8:	cmp	w0, #0x0
    20bc:	b.ne	20d8 <get_missing_hash+0xd0>  // b.any
    20c0:	ldr	x0, [sp, #40]
    20c4:	ldr	x0, [x0]
    20c8:	mov	w2, #0x1                   	// #1
    20cc:	mov	x1, x0
    20d0:	ldr	x0, [sp, #24]
    20d4:	bl	1990 <Perl_sv_upgrade@plt>
    20d8:	ldr	x0, [sp, #40]
    20dc:	ldr	x0, [x0]
    20e0:	ldr	x1, [sp, #56]
    20e4:	str	x1, [x0, #16]
    20e8:	ldr	x0, [sp, #40]
    20ec:	ldr	x0, [x0]
    20f0:	ldr	w1, [x0, #12]
    20f4:	ldr	x0, [sp, #40]
    20f8:	ldr	x0, [x0]
    20fc:	orr	w1, w1, #0x800
    2100:	str	w1, [x0, #12]
    2104:	ldr	x0, [sp, #56]
    2108:	ldp	x29, x30, [sp], #64
    210c:	ret

0000000000002110 <XS_Fcntl_AUTOLOAD>:
    2110:	sub	sp, sp, #0x60
    2114:	stp	x29, x30, [sp, #16]
    2118:	add	x29, sp, #0x10
    211c:	str	x0, [sp, #40]
    2120:	str	x1, [sp, #32]
    2124:	ldr	x0, [sp, #40]
    2128:	ldr	x0, [x0]
    212c:	str	x0, [sp, #64]
    2130:	ldr	x0, [sp, #40]
    2134:	bl	1c90 <S_POPMARK>
    2138:	str	w0, [sp, #48]
    213c:	ldr	x0, [sp, #40]
    2140:	ldr	x1, [x0, #24]
    2144:	ldr	w0, [sp, #48]
    2148:	add	w2, w0, #0x1
    214c:	str	w2, [sp, #48]
    2150:	sxtw	x0, w0
    2154:	lsl	x0, x0, #3
    2158:	add	x0, x1, x0
    215c:	str	x0, [sp, #72]
    2160:	ldr	x1, [sp, #64]
    2164:	ldr	x0, [sp, #72]
    2168:	sub	x0, x1, x0
    216c:	asr	x0, x0, #3
    2170:	str	w0, [sp, #52]
    2174:	ldr	w0, [sp, #52]
    2178:	cmp	w0, #0x0
    217c:	b.eq	2190 <XS_Fcntl_AUTOLOAD+0x80>  // b.none
    2180:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2184:	add	x1, x0, #0xf68
    2188:	ldr	x0, [sp, #32]
    218c:	bl	19d0 <Perl_croak_xs_usage@plt>
    2190:	ldrsw	x0, [sp, #52]
    2194:	lsl	x0, x0, #3
    2198:	neg	x0, x0
    219c:	ldr	x1, [sp, #64]
    21a0:	add	x0, x1, x0
    21a4:	str	x0, [sp, #64]
    21a8:	ldr	x0, [sp, #32]
    21ac:	ldr	x1, [x0, #16]
    21b0:	ldr	x0, [sp, #32]
    21b4:	ldr	x0, [x0]
    21b8:	ldr	x2, [x0, #16]
    21bc:	ldr	x0, [sp, #32]
    21c0:	ldr	w0, [x0, #12]
    21c4:	and	w0, w0, #0x20000000
    21c8:	orr	w0, w0, #0x80000
    21cc:	mov	w3, w0
    21d0:	ldr	x0, [sp, #40]
    21d4:	bl	19e0 <Perl_newSVpvn_flags@plt>
    21d8:	str	x0, [sp, #56]
    21dc:	ldr	x0, [sp, #40]
    21e0:	ldr	x0, [x0, #224]
    21e4:	str	x0, [sp, #80]
    21e8:	ldr	x0, [sp, #40]
    21ec:	bl	2008 <get_missing_hash>
    21f0:	str	x0, [sp, #88]
    21f4:	str	wzr, [sp]
    21f8:	mov	x7, #0x0                   	// #0
    21fc:	mov	w6, #0x8                   	// #8
    2200:	mov	w5, #0x0                   	// #0
    2204:	mov	x4, #0x0                   	// #0
    2208:	mov	x3, #0x0                   	// #0
    220c:	ldr	x2, [sp, #56]
    2210:	ldr	x1, [sp, #88]
    2214:	ldr	x0, [sp, #40]
    2218:	bl	1a30 <Perl_hv_common@plt>
    221c:	cmp	x0, #0x0
    2220:	b.eq	2258 <XS_Fcntl_AUTOLOAD+0x148>  // b.none
    2224:	ldr	x0, [sp, #80]
    2228:	ldr	x1, [x0, #48]
    222c:	ldr	x0, [sp, #80]
    2230:	ldr	w0, [x0, #36]
    2234:	mov	w0, w0
    2238:	mov	x3, x0
    223c:	mov	x2, x1
    2240:	ldr	x1, [sp, #56]
    2244:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2248:	add	x0, x0, #0xf70
    224c:	bl	1aa0 <Perl_newSVpvf_nocontext@plt>
    2250:	str	x0, [sp, #56]
    2254:	b	2288 <XS_Fcntl_AUTOLOAD+0x178>
    2258:	ldr	x0, [sp, #80]
    225c:	ldr	x1, [x0, #48]
    2260:	ldr	x0, [sp, #80]
    2264:	ldr	w0, [x0, #36]
    2268:	mov	w0, w0
    226c:	mov	x3, x0
    2270:	mov	x2, x1
    2274:	ldr	x1, [sp, #56]
    2278:	adrp	x0, 2000 <constant_add_symbol+0x108>
    227c:	add	x0, x0, #0xfb8
    2280:	bl	1aa0 <Perl_newSVpvf_nocontext@plt>
    2284:	str	x0, [sp, #56]
    2288:	ldr	x1, [sp, #56]
    228c:	ldr	x0, [sp, #40]
    2290:	bl	1a20 <Perl_sv_2mortal@plt>
    2294:	mov	x1, x0
    2298:	ldr	x0, [sp, #40]
    229c:	bl	1a50 <Perl_croak_sv@plt>

00000000000022a0 <XS_Fcntl_S_IMODE>:
    22a0:	stp	x29, x30, [sp, #-80]!
    22a4:	mov	x29, sp
    22a8:	str	x0, [sp, #24]
    22ac:	str	x1, [sp, #16]
    22b0:	ldr	x0, [sp, #24]
    22b4:	ldr	x0, [x0]
    22b8:	str	x0, [sp, #40]
    22bc:	ldr	x0, [sp, #24]
    22c0:	bl	1c90 <S_POPMARK>
    22c4:	str	w0, [sp, #32]
    22c8:	ldr	x0, [sp, #24]
    22cc:	ldr	x1, [x0, #24]
    22d0:	ldr	w0, [sp, #32]
    22d4:	add	w2, w0, #0x1
    22d8:	str	w2, [sp, #32]
    22dc:	sxtw	x0, w0
    22e0:	lsl	x0, x0, #3
    22e4:	add	x0, x1, x0
    22e8:	str	x0, [sp, #56]
    22ec:	ldr	x1, [sp, #40]
    22f0:	ldr	x0, [sp, #56]
    22f4:	sub	x0, x1, x0
    22f8:	asr	x0, x0, #3
    22fc:	str	w0, [sp, #36]
    2300:	ldrsw	x0, [sp, #36]
    2304:	lsl	x0, x0, #3
    2308:	neg	x0, x0
    230c:	ldr	x1, [sp, #40]
    2310:	add	x0, x1, x0
    2314:	str	x0, [sp, #40]
    2318:	ldr	x0, [sp, #24]
    231c:	ldr	x0, [x0, #8]
    2320:	ldrb	w0, [x0, #35]
    2324:	and	w0, w0, #0x4
    2328:	cmp	w0, #0x0
    232c:	b.eq	2354 <XS_Fcntl_S_IMODE+0xb4>  // b.none
    2330:	ldr	x0, [sp, #24]
    2334:	ldr	x1, [x0, #16]
    2338:	ldr	x0, [sp, #24]
    233c:	ldr	x0, [x0, #8]
    2340:	ldr	x0, [x0, #24]
    2344:	lsl	x0, x0, #3
    2348:	add	x0, x1, x0
    234c:	ldr	x0, [x0]
    2350:	b	235c <XS_Fcntl_S_IMODE+0xbc>
    2354:	ldr	x0, [sp, #24]
    2358:	bl	1ae0 <Perl_sv_newmortal@plt>
    235c:	str	x0, [sp, #64]
    2360:	ldr	w0, [sp, #36]
    2364:	cmp	w0, #0x0
    2368:	b.le	238c <XS_Fcntl_S_IMODE+0xec>
    236c:	ldr	x0, [sp, #24]
    2370:	ldr	x1, [x0, #24]
    2374:	ldrsw	x0, [sp, #32]
    2378:	lsl	x0, x0, #3
    237c:	add	x0, x1, x0
    2380:	ldr	x0, [x0]
    2384:	str	x0, [sp, #48]
    2388:	b	23d8 <XS_Fcntl_S_IMODE+0x138>
    238c:	ldr	x0, [sp, #24]
    2390:	add	x0, x0, #0x150
    2394:	str	x0, [sp, #48]
    2398:	ldr	x0, [sp, #24]
    239c:	ldr	x1, [x0, #32]
    23a0:	ldr	x0, [sp, #40]
    23a4:	sub	x0, x1, x0
    23a8:	cmp	x0, #0x0
    23ac:	cset	w0, le
    23b0:	and	w0, w0, #0xff
    23b4:	and	x0, x0, #0xff
    23b8:	cmp	x0, #0x0
    23bc:	b.eq	23d8 <XS_Fcntl_S_IMODE+0x138>  // b.none
    23c0:	mov	x3, #0x1                   	// #1
    23c4:	ldr	x2, [sp, #40]
    23c8:	ldr	x1, [sp, #40]
    23cc:	ldr	x0, [sp, #24]
    23d0:	bl	1960 <Perl_stack_grow@plt>
    23d4:	str	x0, [sp, #40]
    23d8:	ldr	x0, [sp, #48]
    23dc:	ldr	w1, [x0, #12]
    23e0:	mov	w0, #0x100                 	// #256
    23e4:	movk	w0, #0x8020, lsl #16
    23e8:	and	w1, w1, w0
    23ec:	mov	w0, #0x100                 	// #256
    23f0:	movk	w0, #0x8000, lsl #16
    23f4:	cmp	w1, w0
    23f8:	b.ne	2410 <XS_Fcntl_S_IMODE+0x170>  // b.any
    23fc:	ldr	x0, [sp, #48]
    2400:	ldr	x0, [x0]
    2404:	ldr	x0, [x0, #32]
    2408:	and	x0, x0, #0xfff
    240c:	b	2424 <XS_Fcntl_S_IMODE+0x184>
    2410:	mov	w2, #0x2                   	// #2
    2414:	ldr	x1, [sp, #48]
    2418:	ldr	x0, [sp, #24]
    241c:	bl	1950 <Perl_sv_2uv_flags@plt>
    2420:	and	x0, x0, #0xfff
    2424:	str	x0, [sp, #72]
    2428:	ldr	x0, [sp, #64]
    242c:	ldr	w1, [x0, #12]
    2430:	mov	w0, #0x8ff                 	// #2303
    2434:	movk	w0, #0x9981, lsl #16
    2438:	and	w0, w1, w0
    243c:	cmp	w0, #0x1
    2440:	cset	w0, eq  // eq = none
    2444:	and	w0, w0, #0xff
    2448:	mov	w1, w0
    244c:	ldr	x0, [sp, #24]
    2450:	ldrb	w0, [x0, #185]
    2454:	eor	w0, w0, #0x1
    2458:	and	w0, w0, #0xff
    245c:	and	w0, w1, w0
    2460:	ldr	x1, [sp, #72]
    2464:	mvn	x1, x1
    2468:	lsr	x1, x1, #63
    246c:	and	w1, w1, #0xff
    2470:	and	w0, w0, w1
    2474:	cmp	w0, #0x0
    2478:	cset	w0, ne  // ne = any
    247c:	and	w0, w0, #0xff
    2480:	and	x0, x0, #0xff
    2484:	cmp	x0, #0x0
    2488:	b.eq	24b4 <XS_Fcntl_S_IMODE+0x214>  // b.none
    248c:	ldr	x0, [sp, #64]
    2490:	ldr	w1, [x0, #12]
    2494:	mov	w0, #0x1100                	// #4352
    2498:	orr	w1, w1, w0
    249c:	ldr	x0, [sp, #64]
    24a0:	str	w1, [x0, #12]
    24a4:	ldr	x1, [sp, #72]
    24a8:	ldr	x0, [sp, #64]
    24ac:	str	x1, [x0, #16]
    24b0:	b	24c4 <XS_Fcntl_S_IMODE+0x224>
    24b4:	ldr	x2, [sp, #72]
    24b8:	ldr	x1, [sp, #64]
    24bc:	ldr	x0, [sp, #24]
    24c0:	bl	1ab0 <Perl_sv_setuv_mg@plt>
    24c4:	ldr	x0, [sp, #40]
    24c8:	add	x0, x0, #0x8
    24cc:	str	x0, [sp, #40]
    24d0:	ldr	x0, [sp, #40]
    24d4:	ldr	x1, [sp, #64]
    24d8:	str	x1, [x0]
    24dc:	ldr	x0, [sp, #24]
    24e0:	ldr	x1, [sp, #40]
    24e4:	str	x1, [x0]
    24e8:	nop
    24ec:	ldp	x29, x30, [sp], #80
    24f0:	ret

00000000000024f4 <XS_Fcntl_S_IFMT>:
    24f4:	stp	x29, x30, [sp, #-80]!
    24f8:	mov	x29, sp
    24fc:	str	x0, [sp, #24]
    2500:	str	x1, [sp, #16]
    2504:	ldr	x0, [sp, #24]
    2508:	ldr	x0, [x0]
    250c:	str	x0, [sp, #48]
    2510:	ldr	x0, [sp, #24]
    2514:	bl	1c90 <S_POPMARK>
    2518:	str	w0, [sp, #40]
    251c:	ldr	x0, [sp, #24]
    2520:	ldr	x1, [x0, #24]
    2524:	ldr	w0, [sp, #40]
    2528:	add	w2, w0, #0x1
    252c:	str	w2, [sp, #40]
    2530:	sxtw	x0, w0
    2534:	lsl	x0, x0, #3
    2538:	add	x0, x1, x0
    253c:	str	x0, [sp, #56]
    2540:	ldr	x1, [sp, #48]
    2544:	ldr	x0, [sp, #56]
    2548:	sub	x0, x1, x0
    254c:	asr	x0, x0, #3
    2550:	str	w0, [sp, #44]
    2554:	ldrsw	x0, [sp, #44]
    2558:	lsl	x0, x0, #3
    255c:	neg	x0, x0
    2560:	ldr	x1, [sp, #48]
    2564:	add	x0, x1, x0
    2568:	str	x0, [sp, #48]
    256c:	ldr	x0, [sp, #24]
    2570:	ldr	x0, [x0, #8]
    2574:	ldrb	w0, [x0, #35]
    2578:	and	w0, w0, #0x4
    257c:	cmp	w0, #0x0
    2580:	b.eq	25a8 <XS_Fcntl_S_IFMT+0xb4>  // b.none
    2584:	ldr	x0, [sp, #24]
    2588:	ldr	x1, [x0, #16]
    258c:	ldr	x0, [sp, #24]
    2590:	ldr	x0, [x0, #8]
    2594:	ldr	x0, [x0, #24]
    2598:	lsl	x0, x0, #3
    259c:	add	x0, x1, x0
    25a0:	ldr	x0, [x0]
    25a4:	b	25b0 <XS_Fcntl_S_IFMT+0xbc>
    25a8:	ldr	x0, [sp, #24]
    25ac:	bl	1ae0 <Perl_sv_newmortal@plt>
    25b0:	str	x0, [sp, #64]
    25b4:	ldr	w0, [sp, #44]
    25b8:	cmp	w0, #0x0
    25bc:	b.eq	2650 <XS_Fcntl_S_IFMT+0x15c>  // b.none
    25c0:	ldr	x0, [sp, #24]
    25c4:	ldr	x1, [x0, #24]
    25c8:	ldrsw	x0, [sp, #40]
    25cc:	lsl	x0, x0, #3
    25d0:	add	x0, x1, x0
    25d4:	ldr	x0, [x0]
    25d8:	ldr	w1, [x0, #12]
    25dc:	mov	w0, #0x100                 	// #256
    25e0:	movk	w0, #0x8020, lsl #16
    25e4:	and	w1, w1, w0
    25e8:	mov	w0, #0x100                 	// #256
    25ec:	movk	w0, #0x8000, lsl #16
    25f0:	cmp	w1, w0
    25f4:	b.ne	2620 <XS_Fcntl_S_IFMT+0x12c>  // b.any
    25f8:	ldr	x0, [sp, #24]
    25fc:	ldr	x1, [x0, #24]
    2600:	ldrsw	x0, [sp, #40]
    2604:	lsl	x0, x0, #3
    2608:	add	x0, x1, x0
    260c:	ldr	x0, [x0]
    2610:	ldr	x0, [x0]
    2614:	ldr	x0, [x0, #32]
    2618:	and	x0, x0, #0xf000
    261c:	b	2654 <XS_Fcntl_S_IFMT+0x160>
    2620:	ldr	x0, [sp, #24]
    2624:	ldr	x1, [x0, #24]
    2628:	ldrsw	x0, [sp, #40]
    262c:	lsl	x0, x0, #3
    2630:	add	x0, x1, x0
    2634:	ldr	x0, [x0]
    2638:	mov	w2, #0x2                   	// #2
    263c:	mov	x1, x0
    2640:	ldr	x0, [sp, #24]
    2644:	bl	1950 <Perl_sv_2uv_flags@plt>
    2648:	and	x0, x0, #0xf000
    264c:	b	2654 <XS_Fcntl_S_IFMT+0x160>
    2650:	mov	x0, #0xf000                	// #61440
    2654:	str	x0, [sp, #72]
    2658:	ldr	x0, [sp, #64]
    265c:	ldr	w1, [x0, #12]
    2660:	mov	w0, #0x8ff                 	// #2303
    2664:	movk	w0, #0x9981, lsl #16
    2668:	and	w0, w1, w0
    266c:	cmp	w0, #0x1
    2670:	cset	w0, eq  // eq = none
    2674:	and	w0, w0, #0xff
    2678:	mov	w1, w0
    267c:	ldr	x0, [sp, #24]
    2680:	ldrb	w0, [x0, #185]
    2684:	eor	w0, w0, #0x1
    2688:	and	w0, w0, #0xff
    268c:	and	w0, w1, w0
    2690:	ldr	x1, [sp, #72]
    2694:	mvn	x1, x1
    2698:	lsr	x1, x1, #63
    269c:	and	w1, w1, #0xff
    26a0:	and	w0, w0, w1
    26a4:	cmp	w0, #0x0
    26a8:	cset	w0, ne  // ne = any
    26ac:	and	w0, w0, #0xff
    26b0:	and	x0, x0, #0xff
    26b4:	cmp	x0, #0x0
    26b8:	b.eq	26e4 <XS_Fcntl_S_IFMT+0x1f0>  // b.none
    26bc:	ldr	x0, [sp, #64]
    26c0:	ldr	w1, [x0, #12]
    26c4:	mov	w0, #0x1100                	// #4352
    26c8:	orr	w1, w1, w0
    26cc:	ldr	x0, [sp, #64]
    26d0:	str	w1, [x0, #12]
    26d4:	ldr	x1, [sp, #72]
    26d8:	ldr	x0, [sp, #64]
    26dc:	str	x1, [x0, #16]
    26e0:	b	26f4 <XS_Fcntl_S_IFMT+0x200>
    26e4:	ldr	x2, [sp, #72]
    26e8:	ldr	x1, [sp, #64]
    26ec:	ldr	x0, [sp, #24]
    26f0:	bl	1ab0 <Perl_sv_setuv_mg@plt>
    26f4:	ldr	x0, [sp, #48]
    26f8:	add	x0, x0, #0x8
    26fc:	str	x0, [sp, #48]
    2700:	ldr	x0, [sp, #48]
    2704:	ldr	x1, [sp, #64]
    2708:	str	x1, [x0]
    270c:	ldr	x0, [sp, #24]
    2710:	ldr	x1, [sp, #48]
    2714:	str	x1, [x0]
    2718:	nop
    271c:	ldp	x29, x30, [sp], #80
    2720:	ret

0000000000002724 <boot_Fcntl>:
    2724:	sub	sp, sp, #0x110
    2728:	stp	x29, x30, [sp, #16]
    272c:	add	x29, sp, #0x10
    2730:	stp	x19, x20, [sp, #32]
    2734:	str	x0, [sp, #56]
    2738:	str	x1, [sp, #48]
    273c:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2740:	add	x4, x0, #0xfe8
    2744:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2748:	add	x3, x0, #0xff0
    274c:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2750:	add	x2, x0, #0xff8
    2754:	ldr	x1, [sp, #56]
    2758:	mov	w0, #0x4e7                 	// #1255
    275c:	movk	w0, #0xd30, lsl #16
    2760:	bl	1a60 <Perl_xs_handshake@plt>
    2764:	str	w0, [sp, #64]
    2768:	ldr	x0, [sp, #56]
    276c:	ldr	x1, [x0, #24]
    2770:	ldrsw	x0, [sp, #64]
    2774:	lsl	x0, x0, #3
    2778:	add	x0, x1, x0
    277c:	str	x0, [sp, #96]
    2780:	ldr	x0, [sp, #56]
    2784:	ldr	x0, [x0]
    2788:	str	x0, [sp, #104]
    278c:	ldr	x1, [sp, #104]
    2790:	ldr	x0, [sp, #96]
    2794:	sub	x0, x1, x0
    2798:	asr	x0, x0, #3
    279c:	str	w0, [sp, #68]
    27a0:	adrp	x0, 2000 <constant_add_symbol+0x108>
    27a4:	add	x0, x0, #0xff8
    27a8:	str	x0, [sp, #112]
    27ac:	adrp	x0, 2000 <constant_add_symbol+0x108>
    27b0:	add	x2, x0, #0x110
    27b4:	adrp	x0, 3000 <_fini+0x33c>
    27b8:	add	x1, x0, #0x0
    27bc:	ldr	x0, [sp, #56]
    27c0:	bl	1a10 <Perl_newXS_deffile@plt>
    27c4:	adrp	x0, 2000 <constant_add_symbol+0x108>
    27c8:	add	x2, x0, #0x2a0
    27cc:	adrp	x0, 3000 <_fini+0x33c>
    27d0:	add	x1, x0, #0x10
    27d4:	ldr	x0, [sp, #56]
    27d8:	bl	1a10 <Perl_newXS_deffile@plt>
    27dc:	adrp	x0, 2000 <constant_add_symbol+0x108>
    27e0:	add	x2, x0, #0x4f4
    27e4:	adrp	x0, 3000 <_fini+0x33c>
    27e8:	add	x1, x0, #0x20
    27ec:	ldr	x0, [sp, #56]
    27f0:	bl	1a10 <Perl_newXS_deffile@plt>
    27f4:	mov	w2, #0x1                   	// #1
    27f8:	adrp	x0, 3000 <_fini+0x33c>
    27fc:	add	x1, x0, #0x30
    2800:	ldr	x0, [sp, #56]
    2804:	bl	1af0 <Perl_get_hv@plt>
    2808:	str	x0, [sp, #120]
    280c:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    2810:	add	x0, x0, #0x4b8
    2814:	str	x0, [sp, #72]
    2818:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    281c:	add	x0, x0, #0xdb8
    2820:	str	x0, [sp, #80]
    2824:	b	2870 <boot_Fcntl+0x14c>
    2828:	ldr	x0, [sp, #72]
    282c:	ldr	x19, [x0]
    2830:	ldr	x0, [sp, #72]
    2834:	ldr	w20, [x0, #8]
    2838:	ldr	x0, [sp, #72]
    283c:	ldr	x0, [x0, #16]
    2840:	mov	x1, x0
    2844:	ldr	x0, [sp, #56]
    2848:	bl	1ad0 <Perl_newSViv@plt>
    284c:	mov	x4, x0
    2850:	mov	w3, w20
    2854:	mov	x2, x19
    2858:	ldr	x1, [sp, #120]
    285c:	ldr	x0, [sp, #56]
    2860:	bl	1ef8 <constant_add_symbol>
    2864:	ldr	x0, [sp, #72]
    2868:	add	x0, x0, #0x18
    286c:	str	x0, [sp, #72]
    2870:	ldr	x0, [sp, #72]
    2874:	ldr	x0, [x0]
    2878:	cmp	x0, #0x0
    287c:	b.ne	2828 <boot_Fcntl+0x104>  // b.any
    2880:	b	28cc <boot_Fcntl+0x1a8>
    2884:	ldr	x0, [sp, #80]
    2888:	ldr	x19, [x0]
    288c:	ldr	x0, [sp, #80]
    2890:	ldr	w20, [x0, #8]
    2894:	ldr	x0, [sp, #80]
    2898:	ldr	x0, [x0, #16]
    289c:	mov	x1, x0
    28a0:	ldr	x0, [sp, #56]
    28a4:	bl	1a40 <Perl_newSVuv@plt>
    28a8:	mov	x4, x0
    28ac:	mov	w3, w20
    28b0:	mov	x2, x19
    28b4:	ldr	x1, [sp, #120]
    28b8:	ldr	x0, [sp, #56]
    28bc:	bl	1ef8 <constant_add_symbol>
    28c0:	ldr	x0, [sp, #80]
    28c4:	add	x0, x0, #0x18
    28c8:	str	x0, [sp, #80]
    28cc:	ldr	x0, [sp, #80]
    28d0:	ldr	x0, [x0]
    28d4:	cmp	x0, #0x0
    28d8:	b.ne	2884 <boot_Fcntl+0x160>  // b.any
    28dc:	ldr	x0, [sp, #56]
    28e0:	bl	2008 <get_missing_hash>
    28e4:	str	x0, [sp, #128]
    28e8:	adrp	x0, 14000 <__FRAME_END__+0x1088c>
    28ec:	add	x0, x0, #0x1b8
    28f0:	str	x0, [sp, #88]
    28f4:	ldr	x0, [sp, #88]
    28f8:	ldr	x1, [x0]
    28fc:	ldr	x0, [sp, #88]
    2900:	ldr	w0, [x0, #8]
    2904:	mov	w6, #0x0                   	// #0
    2908:	mov	x5, #0x0                   	// #0
    290c:	mov	w4, #0x10                  	// #16
    2910:	mov	w3, w0
    2914:	mov	x2, x1
    2918:	ldr	x1, [sp, #120]
    291c:	ldr	x0, [sp, #56]
    2920:	bl	1a70 <Perl_hv_common_key_len@plt>
    2924:	str	x0, [sp, #136]
    2928:	ldr	x0, [sp, #136]
    292c:	cmp	x0, #0x0
    2930:	b.ne	294c <boot_Fcntl+0x228>  // b.any
    2934:	ldr	x0, [sp, #88]
    2938:	ldr	x0, [x0]
    293c:	mov	x1, x0
    2940:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2944:	add	x0, x0, #0xce0
    2948:	bl	19f0 <Perl_croak_nocontext@plt>
    294c:	ldr	x0, [sp, #136]
    2950:	ldr	x0, [x0, #16]
    2954:	str	x0, [sp, #144]
    2958:	ldr	x0, [sp, #144]
    295c:	ldr	w0, [x0, #12]
    2960:	and	w0, w0, #0xff00
    2964:	cmp	w0, #0x0
    2968:	b.ne	299c <boot_Fcntl+0x278>  // b.any
    296c:	ldr	x0, [sp, #144]
    2970:	ldr	w0, [x0, #12]
    2974:	and	w0, w0, #0xff
    2978:	cmp	w0, #0x9
    297c:	b.eq	299c <boot_Fcntl+0x278>  // b.none
    2980:	mov	x3, #0x0                   	// #0
    2984:	adrp	x0, 2000 <constant_add_symbol+0x108>
    2988:	add	x2, x0, #0xf68
    298c:	ldr	x1, [sp, #144]
    2990:	ldr	x0, [sp, #56]
    2994:	bl	1a80 <Perl_sv_setpvn@plt>
    2998:	b	2a58 <boot_Fcntl+0x334>
    299c:	ldr	x0, [sp, #144]
    29a0:	ldr	w0, [x0, #12]
    29a4:	and	w0, w0, #0x400
    29a8:	cmp	w0, #0x0
    29ac:	b.eq	29c4 <boot_Fcntl+0x2a0>  // b.none
    29b0:	ldr	x0, [sp, #144]
    29b4:	ldr	x0, [x0]
    29b8:	ldr	x0, [x0, #16]
    29bc:	cmp	x0, #0x0
    29c0:	b.eq	2a58 <boot_Fcntl+0x334>  // b.none
    29c4:	ldr	x0, [sp, #88]
    29c8:	ldr	x1, [x0]
    29cc:	ldr	x0, [sp, #56]
    29d0:	add	x0, x0, #0x138
    29d4:	mov	x3, x0
    29d8:	mov	x2, x1
    29dc:	ldr	x1, [sp, #120]
    29e0:	ldr	x0, [sp, #56]
    29e4:	bl	1980 <Perl_newCONSTSUB@plt>
    29e8:	str	x0, [sp, #152]
    29ec:	ldr	x0, [sp, #152]
    29f0:	ldr	x0, [x0]
    29f4:	str	x0, [sp, #160]
    29f8:	ldr	x0, [sp, #160]
    29fc:	ldr	x0, [x0, #40]
    2a00:	str	x0, [sp, #168]
    2a04:	ldr	x0, [sp, #168]
    2a08:	mov	x1, x0
    2a0c:	ldr	x0, [sp, #56]
    2a10:	bl	1cb8 <S_SvREFCNT_dec>
    2a14:	ldr	x0, [sp, #152]
    2a18:	ldr	x0, [x0]
    2a1c:	str	x0, [sp, #176]
    2a20:	ldr	x0, [sp, #176]
    2a24:	ldr	w1, [x0, #92]
    2a28:	and	w1, w1, #0xfffffffb
    2a2c:	str	w1, [x0, #92]
    2a30:	ldr	x0, [sp, #152]
    2a34:	ldr	x0, [x0]
    2a38:	str	x0, [sp, #184]
    2a3c:	ldr	x0, [sp, #184]
    2a40:	str	xzr, [x0, #48]
    2a44:	ldr	x0, [sp, #152]
    2a48:	ldr	x0, [x0]
    2a4c:	str	x0, [sp, #192]
    2a50:	ldr	x0, [sp, #192]
    2a54:	str	xzr, [x0, #40]
    2a58:	ldr	x0, [sp, #136]
    2a5c:	ldr	x0, [x0, #8]
    2a60:	str	x0, [sp, #200]
    2a64:	ldr	x0, [sp, #200]
    2a68:	add	x2, x0, #0x8
    2a6c:	ldr	x0, [sp, #200]
    2a70:	ldr	w0, [x0, #4]
    2a74:	sxtw	x3, w0
    2a78:	ldr	x0, [sp, #200]
    2a7c:	add	x1, x0, #0x8
    2a80:	ldr	x0, [sp, #200]
    2a84:	ldr	w0, [x0, #4]
    2a88:	sxtw	x0, w0
    2a8c:	add	x0, x0, #0x1
    2a90:	add	x0, x1, x0
    2a94:	ldrb	w0, [x0]
    2a98:	mov	w4, w0
    2a9c:	ldr	x0, [sp, #56]
    2aa0:	add	x1, x0, #0x138
    2aa4:	ldr	x0, [sp, #200]
    2aa8:	ldr	w0, [x0]
    2aac:	str	w0, [sp]
    2ab0:	mov	x7, x1
    2ab4:	mov	w6, #0x4                   	// #4
    2ab8:	mov	w5, w4
    2abc:	mov	x4, x3
    2ac0:	mov	x3, x2
    2ac4:	mov	x2, #0x0                   	// #0
    2ac8:	ldr	x1, [sp, #128]
    2acc:	ldr	x0, [sp, #56]
    2ad0:	bl	1a30 <Perl_hv_common@plt>
    2ad4:	cmp	x0, #0x0
    2ad8:	b.ne	2af4 <boot_Fcntl+0x3d0>  // b.any
    2adc:	ldr	x0, [sp, #88]
    2ae0:	ldr	x0, [x0]
    2ae4:	mov	x1, x0
    2ae8:	adrp	x0, 3000 <_fini+0x33c>
    2aec:	add	x0, x0, #0x38
    2af0:	bl	19f0 <Perl_croak_nocontext@plt>
    2af4:	ldr	x0, [sp, #88]
    2af8:	add	x0, x0, #0x10
    2afc:	str	x0, [sp, #88]
    2b00:	ldr	x0, [sp, #88]
    2b04:	ldr	x0, [x0]
    2b08:	cmp	x0, #0x0
    2b0c:	b.ne	28f4 <boot_Fcntl+0x1d0>  // b.any
    2b10:	ldr	x1, [sp, #120]
    2b14:	ldr	x0, [sp, #56]
    2b18:	bl	19a0 <Perl_mro_method_changed_in@plt>
    2b1c:	ldr	x3, [sp, #112]
    2b20:	adrp	x0, 1000 <_init-0x910>
    2b24:	add	x2, x0, #0xd58
    2b28:	adrp	x0, 3000 <_fini+0x33c>
    2b2c:	add	x1, x0, #0x60
    2b30:	ldr	x0, [sp, #56]
    2b34:	bl	1a00 <Perl_newXS@plt>
    2b38:	str	x0, [sp, #208]
    2b3c:	ldr	x0, [sp, #208]
    2b40:	ldr	x0, [x0]
    2b44:	str	x0, [sp, #216]
    2b48:	ldr	x0, [sp, #216]
    2b4c:	mov	w1, #0x8000                	// #32768
    2b50:	str	w1, [x0, #40]
    2b54:	ldr	x3, [sp, #112]
    2b58:	adrp	x0, 1000 <_init-0x910>
    2b5c:	add	x2, x0, #0xd58
    2b60:	adrp	x0, 3000 <_fini+0x33c>
    2b64:	add	x1, x0, #0x70
    2b68:	ldr	x0, [sp, #56]
    2b6c:	bl	1a00 <Perl_newXS@plt>
    2b70:	str	x0, [sp, #208]
    2b74:	ldr	x0, [sp, #208]
    2b78:	ldr	x0, [x0]
    2b7c:	str	x0, [sp, #224]
    2b80:	ldr	x0, [sp, #224]
    2b84:	mov	w1, #0x4000                	// #16384
    2b88:	str	w1, [x0, #40]
    2b8c:	ldr	x3, [sp, #112]
    2b90:	adrp	x0, 1000 <_init-0x910>
    2b94:	add	x2, x0, #0xd58
    2b98:	adrp	x0, 3000 <_fini+0x33c>
    2b9c:	add	x1, x0, #0x80
    2ba0:	ldr	x0, [sp, #56]
    2ba4:	bl	1a00 <Perl_newXS@plt>
    2ba8:	str	x0, [sp, #208]
    2bac:	ldr	x0, [sp, #208]
    2bb0:	ldr	x0, [x0]
    2bb4:	str	x0, [sp, #232]
    2bb8:	ldr	x0, [sp, #232]
    2bbc:	mov	w1, #0xa000                	// #40960
    2bc0:	str	w1, [x0, #40]
    2bc4:	ldr	x3, [sp, #112]
    2bc8:	adrp	x0, 1000 <_init-0x910>
    2bcc:	add	x2, x0, #0xd58
    2bd0:	adrp	x0, 3000 <_fini+0x33c>
    2bd4:	add	x1, x0, #0x90
    2bd8:	ldr	x0, [sp, #56]
    2bdc:	bl	1a00 <Perl_newXS@plt>
    2be0:	str	x0, [sp, #208]
    2be4:	ldr	x0, [sp, #208]
    2be8:	ldr	x0, [x0]
    2bec:	str	x0, [sp, #240]
    2bf0:	ldr	x0, [sp, #240]
    2bf4:	mov	w1, #0xc000                	// #49152
    2bf8:	str	w1, [x0, #40]
    2bfc:	ldr	x3, [sp, #112]
    2c00:	adrp	x0, 1000 <_init-0x910>
    2c04:	add	x2, x0, #0xd58
    2c08:	adrp	x0, 3000 <_fini+0x33c>
    2c0c:	add	x1, x0, #0xa0
    2c10:	ldr	x0, [sp, #56]
    2c14:	bl	1a00 <Perl_newXS@plt>
    2c18:	str	x0, [sp, #208]
    2c1c:	ldr	x0, [sp, #208]
    2c20:	ldr	x0, [x0]
    2c24:	str	x0, [sp, #248]
    2c28:	ldr	x0, [sp, #248]
    2c2c:	mov	w1, #0x6000                	// #24576
    2c30:	str	w1, [x0, #40]
    2c34:	ldr	x3, [sp, #112]
    2c38:	adrp	x0, 1000 <_init-0x910>
    2c3c:	add	x2, x0, #0xd58
    2c40:	adrp	x0, 3000 <_fini+0x33c>
    2c44:	add	x1, x0, #0xb0
    2c48:	ldr	x0, [sp, #56]
    2c4c:	bl	1a00 <Perl_newXS@plt>
    2c50:	str	x0, [sp, #208]
    2c54:	ldr	x0, [sp, #208]
    2c58:	ldr	x0, [x0]
    2c5c:	str	x0, [sp, #256]
    2c60:	ldr	x0, [sp, #256]
    2c64:	mov	w1, #0x2000                	// #8192
    2c68:	str	w1, [x0, #40]
    2c6c:	ldr	x3, [sp, #112]
    2c70:	adrp	x0, 1000 <_init-0x910>
    2c74:	add	x2, x0, #0xd58
    2c78:	adrp	x0, 3000 <_fini+0x33c>
    2c7c:	add	x1, x0, #0xc0
    2c80:	ldr	x0, [sp, #56]
    2c84:	bl	1a00 <Perl_newXS@plt>
    2c88:	str	x0, [sp, #208]
    2c8c:	ldr	x0, [sp, #208]
    2c90:	ldr	x0, [x0]
    2c94:	str	x0, [sp, #264]
    2c98:	ldr	x0, [sp, #264]
    2c9c:	mov	w1, #0x1000                	// #4096
    2ca0:	str	w1, [x0, #40]
    2ca4:	ldr	w1, [sp, #64]
    2ca8:	ldr	x0, [sp, #56]
    2cac:	bl	19b0 <Perl_xs_boot_epilog@plt>
    2cb0:	nop
    2cb4:	ldp	x19, x20, [sp, #32]
    2cb8:	ldp	x29, x30, [sp, #16]
    2cbc:	add	sp, sp, #0x110
    2cc0:	ret

Disassembly of section .fini:

0000000000002cc4 <_fini>:
    2cc4:	stp	x29, x30, [sp, #-16]!
    2cc8:	mov	x29, sp
    2ccc:	ldp	x29, x30, [sp], #16
    2cd0:	ret
