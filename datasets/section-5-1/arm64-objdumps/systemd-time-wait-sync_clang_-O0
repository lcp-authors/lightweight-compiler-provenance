
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-time-wait-sync_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400fb8 <_init>:
  400fb8:	stp	x29, x30, [sp, #-16]!
  400fbc:	mov	x29, sp
  400fc0:	bl	401270 <call_weak_fn>
  400fc4:	ldp	x29, x30, [sp], #16
  400fc8:	ret

Disassembly of section .plt:

0000000000400fd0 <__libc_start_main@plt-0x20>:
  400fd0:	stp	x16, x30, [sp, #-16]!
  400fd4:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  400fd8:	ldr	x17, [x16, #3808]
  400fdc:	add	x16, x16, #0xee0
  400fe0:	br	x17
  400fe4:	nop
  400fe8:	nop
  400fec:	nop

0000000000400ff0 <__libc_start_main@plt>:
  400ff0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  400ff4:	ldr	x17, [x16, #3816]
  400ff8:	add	x16, x16, #0xee8
  400ffc:	br	x17

0000000000401000 <abort@plt>:
  401000:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401004:	ldr	x17, [x16, #3824]
  401008:	add	x16, x16, #0xef0
  40100c:	br	x17

0000000000401010 <__gmon_start__@plt>:
  401010:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401014:	ldr	x17, [x16, #3832]
  401018:	add	x16, x16, #0xef8
  40101c:	br	x17

0000000000401020 <ask_password_agent_close@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401024:	ldr	x17, [x16, #3840]
  401028:	add	x16, x16, #0xf00
  40102c:	br	x17

0000000000401030 <polkit_agent_close@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401034:	ldr	x17, [x16, #3848]
  401038:	add	x16, x16, #0xf08
  40103c:	br	x17

0000000000401040 <pager_close@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401044:	ldr	x17, [x16, #3856]
  401048:	add	x16, x16, #0xf10
  40104c:	br	x17

0000000000401050 <mac_selinux_finish@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401054:	ldr	x17, [x16, #3864]
  401058:	add	x16, x16, #0xf18
  40105c:	br	x17

0000000000401060 <memset@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401064:	ldr	x17, [x16, #3872]
  401068:	add	x16, x16, #0xf20
  40106c:	br	x17

0000000000401070 <sigprocmask_many@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401074:	ldr	x17, [x16, #3880]
  401078:	add	x16, x16, #0xf28
  40107c:	br	x17

0000000000401080 <log_assert_failed_realm@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401084:	ldr	x17, [x16, #3888]
  401088:	add	x16, x16, #0xf30
  40108c:	br	x17

0000000000401090 <sd_event_default@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401094:	ldr	x17, [x16, #3896]
  401098:	add	x16, x16, #0xf38
  40109c:	br	x17

00000000004010a0 <log_get_max_level_realm@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4010a4:	ldr	x17, [x16, #3904]
  4010a8:	add	x16, x16, #0xf40
  4010ac:	br	x17

00000000004010b0 <log_internal_realm@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4010b4:	ldr	x17, [x16, #3912]
  4010b8:	add	x16, x16, #0xf48
  4010bc:	br	x17

00000000004010c0 <abs@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4010c4:	ldr	x17, [x16, #3920]
  4010c8:	add	x16, x16, #0xf50
  4010cc:	br	x17

00000000004010d0 <sd_event_add_signal@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4010d4:	ldr	x17, [x16, #3928]
  4010d8:	add	x16, x16, #0xf58
  4010dc:	br	x17

00000000004010e0 <sd_event_set_watchdog@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4010e4:	ldr	x17, [x16, #3936]
  4010e8:	add	x16, x16, #0xf60
  4010ec:	br	x17

00000000004010f0 <inotify_init1@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4010f4:	ldr	x17, [x16, #3944]
  4010f8:	add	x16, x16, #0xf68
  4010fc:	br	x17

0000000000401100 <__errno_location@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401104:	ldr	x17, [x16, #3952]
  401108:	add	x16, x16, #0xf70
  40110c:	br	x17

0000000000401110 <sd_event_add_io@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401114:	ldr	x17, [x16, #3960]
  401118:	add	x16, x16, #0xf78
  40111c:	br	x17

0000000000401120 <inotify_add_watch_and_warn@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401124:	ldr	x17, [x16, #3968]
  401128:	add	x16, x16, #0xf80
  40112c:	br	x17

0000000000401130 <sd_event_loop@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401134:	ldr	x17, [x16, #3976]
  401138:	add	x16, x16, #0xf88
  40113c:	br	x17

0000000000401140 <sd_event_unref@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401144:	ldr	x17, [x16, #3984]
  401148:	add	x16, x16, #0xf90
  40114c:	br	x17

0000000000401150 <sd_event_source_unref@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401154:	ldr	x17, [x16, #3992]
  401158:	add	x16, x16, #0xf98
  40115c:	br	x17

0000000000401160 <safe_close@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401164:	ldr	x17, [x16, #4000]
  401168:	add	x16, x16, #0xfa0
  40116c:	br	x17

0000000000401170 <sd_event_source_get_event@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401174:	ldr	x17, [x16, #4008]
  401178:	add	x16, x16, #0xfa8
  40117c:	br	x17

0000000000401180 <read@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401184:	ldr	x17, [x16, #4016]
  401188:	add	x16, x16, #0xfb0
  40118c:	br	x17

0000000000401190 <inotify_add_watch@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401194:	ldr	x17, [x16, #4024]
  401198:	add	x16, x16, #0xfb8
  40119c:	br	x17

00000000004011a0 <time_change_fd@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4011a4:	ldr	x17, [x16, #4032]
  4011a8:	add	x16, x16, #0xfc0
  4011ac:	br	x17

00000000004011b0 <adjtimex@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4011b4:	ldr	x17, [x16, #4040]
  4011b8:	add	x16, x16, #0xfc8
  4011bc:	br	x17

00000000004011c0 <timeval_load@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4011c4:	ldr	x17, [x16, #4048]
  4011c8:	add	x16, x16, #0xfd0
  4011cc:	br	x17

00000000004011d0 <format_timestamp_us_utc@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4011d4:	ldr	x17, [x16, #4056]
  4011d8:	add	x16, x16, #0xfd8
  4011dc:	br	x17

00000000004011e0 <strcpy@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4011e4:	ldr	x17, [x16, #4064]
  4011e8:	add	x16, x16, #0xfe0
  4011ec:	br	x17

00000000004011f0 <access@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  4011f4:	ldr	x17, [x16, #4072]
  4011f8:	add	x16, x16, #0xfe8
  4011fc:	br	x17

0000000000401200 <sd_event_exit@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401204:	ldr	x17, [x16, #4080]
  401208:	add	x16, x16, #0xff0
  40120c:	br	x17

0000000000401210 <inotify_rm_watch@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1c6d0>
  401214:	ldr	x17, [x16, #4088]
  401218:	add	x16, x16, #0xff8
  40121c:	br	x17

Disassembly of section .text:

0000000000401220 <_start>:
  401220:	mov	x29, #0x0                   	// #0
  401224:	mov	x30, #0x0                   	// #0
  401228:	mov	x5, x0
  40122c:	ldr	x1, [sp]
  401230:	add	x2, sp, #0x8
  401234:	mov	x6, sp
  401238:	movz	x0, #0x0, lsl #48
  40123c:	movk	x0, #0x0, lsl #32
  401240:	movk	x0, #0x40, lsl #16
  401244:	movk	x0, #0x13e8
  401248:	movz	x3, #0x0, lsl #48
  40124c:	movk	x3, #0x0, lsl #32
  401250:	movk	x3, #0x40, lsl #16
  401254:	movk	x3, #0x2490
  401258:	movz	x4, #0x0, lsl #48
  40125c:	movk	x4, #0x0, lsl #32
  401260:	movk	x4, #0x40, lsl #16
  401264:	movk	x4, #0x2510
  401268:	bl	400ff0 <__libc_start_main@plt>
  40126c:	bl	401000 <abort@plt>

0000000000401270 <call_weak_fn>:
  401270:	adrp	x0, 41f000 <__FRAME_END__+0x1c6d0>
  401274:	ldr	x0, [x0, #3768]
  401278:	cbz	x0, 401280 <call_weak_fn+0x10>
  40127c:	b	401010 <__gmon_start__@plt>
  401280:	ret

0000000000401284 <deregister_tm_clones>:
  401284:	stp	x29, x30, [sp, #-32]!
  401288:	mov	x29, sp
  40128c:	adrp	x0, 420000 <completed.8445>
  401290:	add	x0, x0, #0x0
  401294:	str	x0, [sp, #24]
  401298:	ldr	x0, [sp, #24]
  40129c:	str	x0, [sp, #24]
  4012a0:	ldr	x1, [sp, #24]
  4012a4:	adrp	x0, 420000 <completed.8445>
  4012a8:	add	x0, x0, #0x0
  4012ac:	cmp	x1, x0
  4012b0:	b.eq	4012ec <deregister_tm_clones+0x68>  // b.none
  4012b4:	adrp	x0, 402000 <clock_state_update+0xe8>
  4012b8:	add	x0, x0, #0x528
  4012bc:	ldr	x0, [x0]
  4012c0:	str	x0, [sp, #16]
  4012c4:	ldr	x0, [sp, #16]
  4012c8:	str	x0, [sp, #16]
  4012cc:	ldr	x0, [sp, #16]
  4012d0:	cmp	x0, #0x0
  4012d4:	b.eq	4012f0 <deregister_tm_clones+0x6c>  // b.none
  4012d8:	ldr	x1, [sp, #16]
  4012dc:	adrp	x0, 420000 <completed.8445>
  4012e0:	add	x0, x0, #0x0
  4012e4:	blr	x1
  4012e8:	b	4012f0 <deregister_tm_clones+0x6c>
  4012ec:	nop
  4012f0:	ldp	x29, x30, [sp], #32
  4012f4:	ret

00000000004012f8 <register_tm_clones>:
  4012f8:	stp	x29, x30, [sp, #-48]!
  4012fc:	mov	x29, sp
  401300:	adrp	x0, 420000 <completed.8445>
  401304:	add	x0, x0, #0x0
  401308:	str	x0, [sp, #40]
  40130c:	ldr	x0, [sp, #40]
  401310:	str	x0, [sp, #40]
  401314:	ldr	x1, [sp, #40]
  401318:	adrp	x0, 420000 <completed.8445>
  40131c:	add	x0, x0, #0x0
  401320:	sub	x0, x1, x0
  401324:	asr	x0, x0, #3
  401328:	lsr	x1, x0, #63
  40132c:	add	x0, x1, x0
  401330:	asr	x0, x0, #1
  401334:	str	x0, [sp, #32]
  401338:	ldr	x0, [sp, #32]
  40133c:	cmp	x0, #0x0
  401340:	b.eq	401380 <register_tm_clones+0x88>  // b.none
  401344:	adrp	x0, 402000 <clock_state_update+0xe8>
  401348:	add	x0, x0, #0x530
  40134c:	ldr	x0, [x0]
  401350:	str	x0, [sp, #24]
  401354:	ldr	x0, [sp, #24]
  401358:	str	x0, [sp, #24]
  40135c:	ldr	x0, [sp, #24]
  401360:	cmp	x0, #0x0
  401364:	b.eq	401384 <register_tm_clones+0x8c>  // b.none
  401368:	ldr	x2, [sp, #24]
  40136c:	ldr	x1, [sp, #32]
  401370:	adrp	x0, 420000 <completed.8445>
  401374:	add	x0, x0, #0x0
  401378:	blr	x2
  40137c:	b	401384 <register_tm_clones+0x8c>
  401380:	nop
  401384:	ldp	x29, x30, [sp], #48
  401388:	ret

000000000040138c <__do_global_dtors_aux>:
  40138c:	stp	x29, x30, [sp, #-16]!
  401390:	mov	x29, sp
  401394:	adrp	x0, 420000 <completed.8445>
  401398:	add	x0, x0, #0x0
  40139c:	ldrb	w0, [x0]
  4013a0:	and	x0, x0, #0xff
  4013a4:	cmp	x0, #0x0
  4013a8:	b.ne	4013c4 <__do_global_dtors_aux+0x38>  // b.any
  4013ac:	bl	401284 <deregister_tm_clones>
  4013b0:	adrp	x0, 420000 <completed.8445>
  4013b4:	add	x0, x0, #0x0
  4013b8:	mov	w1, #0x1                   	// #1
  4013bc:	strb	w1, [x0]
  4013c0:	b	4013c8 <__do_global_dtors_aux+0x3c>
  4013c4:	nop
  4013c8:	ldp	x29, x30, [sp], #16
  4013cc:	ret

00000000004013d0 <frame_dummy>:
  4013d0:	stp	x29, x30, [sp, #-16]!
  4013d4:	mov	x29, sp
  4013d8:	bl	4012f8 <register_tm_clones>
  4013dc:	nop
  4013e0:	ldp	x29, x30, [sp], #16
  4013e4:	ret

00000000004013e8 <main>:
  4013e8:	sub	sp, sp, #0x30
  4013ec:	stp	x29, x30, [sp, #32]
  4013f0:	add	x29, sp, #0x20
  4013f4:	mov	w8, wzr
  4013f8:	mov	w9, #0x1                   	// #1
  4013fc:	stur	wzr, [x29, #-4]
  401400:	stur	w0, [x29, #-8]
  401404:	str	x1, [sp, #16]
  401408:	ldur	w0, [x29, #-8]
  40140c:	ldr	x1, [sp, #16]
  401410:	str	w8, [sp, #8]
  401414:	str	w9, [sp, #4]
  401418:	bl	401460 <save_argc_argv>
  40141c:	ldur	w0, [x29, #-8]
  401420:	ldr	x1, [sp, #16]
  401424:	bl	401494 <run>
  401428:	str	w0, [sp, #12]
  40142c:	bl	401020 <ask_password_agent_close@plt>
  401430:	bl	401030 <polkit_agent_close@plt>
  401434:	bl	401040 <pager_close@plt>
  401438:	bl	401050 <mac_selinux_finish@plt>
  40143c:	bl	401bf4 <static_destruct>
  401440:	ldr	w8, [sp, #12]
  401444:	cmp	w8, #0x0
  401448:	ldr	w8, [sp, #4]
  40144c:	ldr	w9, [sp, #8]
  401450:	csel	w0, w8, w9, lt  // lt = tstop
  401454:	ldp	x29, x30, [sp, #32]
  401458:	add	sp, sp, #0x30
  40145c:	ret

0000000000401460 <save_argc_argv>:
  401460:	sub	sp, sp, #0x10
  401464:	adrp	x8, 420000 <completed.8445>
  401468:	add	x8, x8, #0x8
  40146c:	adrp	x9, 420000 <completed.8445>
  401470:	add	x9, x9, #0x10
  401474:	str	w0, [sp, #12]
  401478:	str	x1, [sp]
  40147c:	ldr	w10, [sp, #12]
  401480:	str	w10, [x8]
  401484:	ldr	x8, [sp]
  401488:	str	x8, [x9]
  40148c:	add	sp, sp, #0x10
  401490:	ret

0000000000401494 <run>:
  401494:	sub	sp, sp, #0x150
  401498:	stp	x29, x30, [sp, #304]
  40149c:	str	x28, [sp, #320]
  4014a0:	add	x29, sp, #0x130
  4014a4:	mov	x2, #0x30                  	// #48
  4014a8:	mov	w8, #0xffffffff            	// #-1
  4014ac:	mov	w9, wzr
  4014b0:	adrp	x10, 402000 <clock_state_update+0xe8>
  4014b4:	add	x10, x10, #0x574
  4014b8:	add	x10, x10, #0x3
  4014bc:	adrp	x11, 402000 <clock_state_update+0xe8>
  4014c0:	add	x11, x11, #0x5b1
  4014c4:	sub	x12, x29, #0x48
  4014c8:	stur	w0, [x29, #-8]
  4014cc:	stur	x1, [x29, #-16]
  4014d0:	mov	x0, x12
  4014d4:	mov	w1, w9
  4014d8:	str	w8, [sp, #76]
  4014dc:	str	x10, [sp, #64]
  4014e0:	str	x11, [sp, #56]
  4014e4:	bl	401060 <memset@plt>
  4014e8:	ldr	w8, [sp, #76]
  4014ec:	stur	w8, [x29, #-72]
  4014f0:	stur	w8, [x29, #-56]
  4014f4:	stur	w8, [x29, #-40]
  4014f8:	stur	w8, [x29, #-36]
  4014fc:	mov	w8, wzr
  401500:	mov	w0, w8
  401504:	mov	x9, xzr
  401508:	mov	x1, x9
  40150c:	mov	w2, #0xf                   	// #15
  401510:	mov	w3, #0x2                   	// #2
  401514:	mov	w4, #0xffffffff            	// #-1
  401518:	bl	401070 <sigprocmask_many@plt>
  40151c:	cmp	w0, #0x0
  401520:	cset	w8, ge  // ge = tcont
  401524:	mov	w10, #0x1                   	// #1
  401528:	eor	w8, w8, #0x1
  40152c:	eor	w8, w8, w10
  401530:	eor	w8, w8, w10
  401534:	and	w8, w8, #0x1
  401538:	mov	w1, w8
  40153c:	sxtw	x9, w1
  401540:	cbz	x9, 401568 <run+0xd4>
  401544:	mov	w8, wzr
  401548:	mov	w0, w8
  40154c:	adrp	x1, 402000 <clock_state_update+0xe8>
  401550:	add	x1, x1, #0x538
  401554:	ldr	x2, [sp, #64]
  401558:	mov	w3, #0xc5                  	// #197
  40155c:	adrp	x4, 402000 <clock_state_update+0xe8>
  401560:	add	x4, x4, #0x59b
  401564:	bl	401080 <log_assert_failed_realm@plt>
  401568:	sub	x0, x29, #0x18
  40156c:	bl	401090 <sd_event_default@plt>
  401570:	stur	w0, [x29, #-76]
  401574:	ldur	w8, [x29, #-76]
  401578:	cmp	w8, #0x0
  40157c:	cset	w8, ge  // ge = tcont
  401580:	tbnz	w8, #0, 401610 <run+0x17c>
  401584:	mov	w8, #0x3                   	// #3
  401588:	stur	w8, [x29, #-80]
  40158c:	ldur	w8, [x29, #-76]
  401590:	stur	w8, [x29, #-84]
  401594:	stur	wzr, [x29, #-88]
  401598:	ldur	w0, [x29, #-88]
  40159c:	bl	4010a0 <log_get_max_level_realm@plt>
  4015a0:	ldur	w8, [x29, #-80]
  4015a4:	and	w8, w8, #0x7
  4015a8:	cmp	w0, w8
  4015ac:	b.lt	4015e0 <run+0x14c>  // b.tstop
  4015b0:	ldur	w8, [x29, #-88]
  4015b4:	ldur	w9, [x29, #-80]
  4015b8:	orr	w0, w9, w8, lsl #10
  4015bc:	ldur	w1, [x29, #-84]
  4015c0:	ldr	x2, [sp, #64]
  4015c4:	mov	w3, #0xc9                  	// #201
  4015c8:	ldr	x4, [sp, #56]
  4015cc:	adrp	x5, 402000 <clock_state_update+0xe8>
  4015d0:	add	x5, x5, #0x5b5
  4015d4:	bl	4010b0 <log_internal_realm@plt>
  4015d8:	str	w0, [sp, #52]
  4015dc:	b	4015f4 <run+0x160>
  4015e0:	ldur	w0, [x29, #-84]
  4015e4:	bl	4010c0 <abs@plt>
  4015e8:	mov	w8, wzr
  4015ec:	subs	w8, w8, w0, uxtb
  4015f0:	str	w8, [sp, #52]
  4015f4:	ldr	w8, [sp, #52]
  4015f8:	stur	w8, [x29, #-92]
  4015fc:	ldur	w8, [x29, #-92]
  401600:	stur	w8, [x29, #-4]
  401604:	mov	w8, #0x1                   	// #1
  401608:	stur	w8, [x29, #-96]
  40160c:	b	401bd0 <run+0x73c>
  401610:	ldur	x0, [x29, #-24]
  401614:	mov	x8, xzr
  401618:	mov	x1, x8
  40161c:	mov	w2, #0xf                   	// #15
  401620:	mov	x3, x8
  401624:	mov	x4, x8
  401628:	bl	4010d0 <sd_event_add_signal@plt>
  40162c:	stur	w0, [x29, #-76]
  401630:	ldur	w9, [x29, #-76]
  401634:	cmp	w9, #0x0
  401638:	cset	w9, ge  // ge = tcont
  40163c:	tbnz	w9, #0, 4016cc <run+0x238>
  401640:	mov	w8, #0x3                   	// #3
  401644:	stur	w8, [x29, #-100]
  401648:	ldur	w8, [x29, #-76]
  40164c:	stur	w8, [x29, #-104]
  401650:	stur	wzr, [x29, #-108]
  401654:	ldur	w0, [x29, #-108]
  401658:	bl	4010a0 <log_get_max_level_realm@plt>
  40165c:	ldur	w8, [x29, #-100]
  401660:	and	w8, w8, #0x7
  401664:	cmp	w0, w8
  401668:	b.lt	40169c <run+0x208>  // b.tstop
  40166c:	ldur	w8, [x29, #-108]
  401670:	ldur	w9, [x29, #-100]
  401674:	orr	w0, w9, w8, lsl #10
  401678:	ldur	w1, [x29, #-104]
  40167c:	ldr	x2, [sp, #64]
  401680:	mov	w3, #0xcd                  	// #205
  401684:	ldr	x4, [sp, #56]
  401688:	adrp	x5, 402000 <clock_state_update+0xe8>
  40168c:	add	x5, x5, #0x5d7
  401690:	bl	4010b0 <log_internal_realm@plt>
  401694:	str	w0, [sp, #48]
  401698:	b	4016b0 <run+0x21c>
  40169c:	ldur	w0, [x29, #-104]
  4016a0:	bl	4010c0 <abs@plt>
  4016a4:	mov	w8, wzr
  4016a8:	subs	w8, w8, w0, uxtb
  4016ac:	str	w8, [sp, #48]
  4016b0:	ldr	w8, [sp, #48]
  4016b4:	stur	w8, [x29, #-112]
  4016b8:	ldur	w8, [x29, #-112]
  4016bc:	stur	w8, [x29, #-4]
  4016c0:	mov	w8, #0x1                   	// #1
  4016c4:	stur	w8, [x29, #-96]
  4016c8:	b	401bd0 <run+0x73c>
  4016cc:	ldur	x0, [x29, #-24]
  4016d0:	mov	x8, xzr
  4016d4:	mov	x1, x8
  4016d8:	mov	w2, #0x2                   	// #2
  4016dc:	mov	x3, x8
  4016e0:	mov	x4, x8
  4016e4:	bl	4010d0 <sd_event_add_signal@plt>
  4016e8:	stur	w0, [x29, #-76]
  4016ec:	ldur	w9, [x29, #-76]
  4016f0:	cmp	w9, #0x0
  4016f4:	cset	w9, ge  // ge = tcont
  4016f8:	tbnz	w9, #0, 401788 <run+0x2f4>
  4016fc:	mov	w8, #0x3                   	// #3
  401700:	stur	w8, [x29, #-116]
  401704:	ldur	w8, [x29, #-76]
  401708:	stur	w8, [x29, #-120]
  40170c:	stur	wzr, [x29, #-124]
  401710:	ldur	w0, [x29, #-124]
  401714:	bl	4010a0 <log_get_max_level_realm@plt>
  401718:	ldur	w8, [x29, #-116]
  40171c:	and	w8, w8, #0x7
  401720:	cmp	w0, w8
  401724:	b.lt	401758 <run+0x2c4>  // b.tstop
  401728:	ldur	w8, [x29, #-124]
  40172c:	ldur	w9, [x29, #-116]
  401730:	orr	w0, w9, w8, lsl #10
  401734:	ldur	w1, [x29, #-120]
  401738:	ldr	x2, [sp, #64]
  40173c:	mov	w3, #0xd1                  	// #209
  401740:	ldr	x4, [sp, #56]
  401744:	adrp	x5, 402000 <clock_state_update+0xe8>
  401748:	add	x5, x5, #0x601
  40174c:	bl	4010b0 <log_internal_realm@plt>
  401750:	str	w0, [sp, #44]
  401754:	b	40176c <run+0x2d8>
  401758:	ldur	w0, [x29, #-120]
  40175c:	bl	4010c0 <abs@plt>
  401760:	mov	w8, wzr
  401764:	subs	w8, w8, w0, uxtb
  401768:	str	w8, [sp, #44]
  40176c:	ldr	w8, [sp, #44]
  401770:	stur	w8, [x29, #-128]
  401774:	ldur	w8, [x29, #-128]
  401778:	stur	w8, [x29, #-4]
  40177c:	mov	w8, #0x1                   	// #1
  401780:	stur	w8, [x29, #-96]
  401784:	b	401bd0 <run+0x73c>
  401788:	ldur	x0, [x29, #-24]
  40178c:	mov	w1, #0x1                   	// #1
  401790:	bl	4010e0 <sd_event_set_watchdog@plt>
  401794:	stur	w0, [x29, #-76]
  401798:	ldur	w8, [x29, #-76]
  40179c:	cmp	w8, #0x0
  4017a0:	cset	w8, ge  // ge = tcont
  4017a4:	tbnz	w8, #0, 401834 <run+0x3a0>
  4017a8:	mov	w8, #0x3                   	// #3
  4017ac:	stur	w8, [x29, #-132]
  4017b0:	ldur	w8, [x29, #-76]
  4017b4:	stur	w8, [x29, #-136]
  4017b8:	stur	wzr, [x29, #-140]
  4017bc:	ldur	w0, [x29, #-140]
  4017c0:	bl	4010a0 <log_get_max_level_realm@plt>
  4017c4:	ldur	w8, [x29, #-132]
  4017c8:	and	w8, w8, #0x7
  4017cc:	cmp	w0, w8
  4017d0:	b.lt	401804 <run+0x370>  // b.tstop
  4017d4:	ldur	w8, [x29, #-140]
  4017d8:	ldur	w9, [x29, #-132]
  4017dc:	orr	w0, w9, w8, lsl #10
  4017e0:	ldur	w1, [x29, #-136]
  4017e4:	ldr	x2, [sp, #64]
  4017e8:	mov	w3, #0xd5                  	// #213
  4017ec:	ldr	x4, [sp, #56]
  4017f0:	adrp	x5, 402000 <clock_state_update+0xe8>
  4017f4:	add	x5, x5, #0x62a
  4017f8:	bl	4010b0 <log_internal_realm@plt>
  4017fc:	str	w0, [sp, #40]
  401800:	b	401818 <run+0x384>
  401804:	ldur	w0, [x29, #-136]
  401808:	bl	4010c0 <abs@plt>
  40180c:	mov	w8, wzr
  401810:	subs	w8, w8, w0, uxtb
  401814:	str	w8, [sp, #40]
  401818:	ldr	w8, [sp, #40]
  40181c:	stur	w8, [x29, #-144]
  401820:	ldur	w8, [x29, #-144]
  401824:	stur	w8, [x29, #-4]
  401828:	mov	w8, #0x1                   	// #1
  40182c:	stur	w8, [x29, #-96]
  401830:	b	401bd0 <run+0x73c>
  401834:	mov	w0, #0x800                 	// #2048
  401838:	movk	w0, #0x8, lsl #16
  40183c:	bl	4010f0 <inotify_init1@plt>
  401840:	stur	w0, [x29, #-76]
  401844:	ldur	w8, [x29, #-76]
  401848:	cmp	w8, #0x0
  40184c:	cset	w8, ge  // ge = tcont
  401850:	tbnz	w8, #0, 4018e4 <run+0x450>
  401854:	mov	w8, #0x3                   	// #3
  401858:	stur	w8, [x29, #-148]
  40185c:	bl	401100 <__errno_location@plt>
  401860:	ldr	w8, [x0]
  401864:	str	w8, [sp, #152]
  401868:	str	wzr, [sp, #148]
  40186c:	ldr	w0, [sp, #148]
  401870:	bl	4010a0 <log_get_max_level_realm@plt>
  401874:	ldur	w8, [x29, #-148]
  401878:	and	w8, w8, #0x7
  40187c:	cmp	w0, w8
  401880:	b.lt	4018b4 <run+0x420>  // b.tstop
  401884:	ldr	w8, [sp, #148]
  401888:	ldur	w9, [x29, #-148]
  40188c:	orr	w0, w9, w8, lsl #10
  401890:	ldr	w1, [sp, #152]
  401894:	ldr	x2, [sp, #64]
  401898:	mov	w3, #0xd9                  	// #217
  40189c:	ldr	x4, [sp, #56]
  4018a0:	adrp	x5, 402000 <clock_state_update+0xe8>
  4018a4:	add	x5, x5, #0x655
  4018a8:	bl	4010b0 <log_internal_realm@plt>
  4018ac:	str	w0, [sp, #36]
  4018b0:	b	4018c8 <run+0x434>
  4018b4:	ldr	w0, [sp, #152]
  4018b8:	bl	4010c0 <abs@plt>
  4018bc:	mov	w8, wzr
  4018c0:	subs	w8, w8, w0, uxtb
  4018c4:	str	w8, [sp, #36]
  4018c8:	ldr	w8, [sp, #36]
  4018cc:	str	w8, [sp, #144]
  4018d0:	ldr	w8, [sp, #144]
  4018d4:	stur	w8, [x29, #-4]
  4018d8:	mov	w8, #0x1                   	// #1
  4018dc:	stur	w8, [x29, #-96]
  4018e0:	b	401bd0 <run+0x73c>
  4018e4:	ldur	w8, [x29, #-76]
  4018e8:	sub	x9, x29, #0x48
  4018ec:	stur	w8, [x29, #-56]
  4018f0:	ldur	x0, [x29, #-24]
  4018f4:	add	x1, x9, #0x18
  4018f8:	ldur	w2, [x29, #-56]
  4018fc:	mov	w3, #0x1                   	// #1
  401900:	adrp	x4, 401000 <abort@plt>
  401904:	add	x4, x4, #0xcf4
  401908:	mov	x5, x9
  40190c:	bl	401110 <sd_event_add_io@plt>
  401910:	stur	w0, [x29, #-76]
  401914:	ldur	w8, [x29, #-76]
  401918:	cmp	w8, #0x0
  40191c:	cset	w8, ge  // ge = tcont
  401920:	tbnz	w8, #0, 4019b0 <run+0x51c>
  401924:	mov	w8, #0x3                   	// #3
  401928:	str	w8, [sp, #140]
  40192c:	ldur	w8, [x29, #-76]
  401930:	str	w8, [sp, #136]
  401934:	str	wzr, [sp, #132]
  401938:	ldr	w0, [sp, #132]
  40193c:	bl	4010a0 <log_get_max_level_realm@plt>
  401940:	ldr	w8, [sp, #140]
  401944:	and	w8, w8, #0x7
  401948:	cmp	w0, w8
  40194c:	b.lt	401980 <run+0x4ec>  // b.tstop
  401950:	ldr	w8, [sp, #132]
  401954:	ldr	w9, [sp, #140]
  401958:	orr	w0, w9, w8, lsl #10
  40195c:	ldr	w1, [sp, #136]
  401960:	ldr	x2, [sp, #64]
  401964:	mov	w3, #0xe0                  	// #224
  401968:	ldr	x4, [sp, #56]
  40196c:	adrp	x5, 402000 <clock_state_update+0xe8>
  401970:	add	x5, x5, #0x67d
  401974:	bl	4010b0 <log_internal_realm@plt>
  401978:	str	w0, [sp, #32]
  40197c:	b	401994 <run+0x500>
  401980:	ldr	w0, [sp, #136]
  401984:	bl	4010c0 <abs@plt>
  401988:	mov	w8, wzr
  40198c:	subs	w8, w8, w0, uxtb
  401990:	str	w8, [sp, #32]
  401994:	ldr	w8, [sp, #32]
  401998:	str	w8, [sp, #128]
  40199c:	ldr	w8, [sp, #128]
  4019a0:	stur	w8, [x29, #-4]
  4019a4:	mov	w8, #0x1                   	// #1
  4019a8:	stur	w8, [x29, #-96]
  4019ac:	b	401bd0 <run+0x73c>
  4019b0:	ldur	w0, [x29, #-56]
  4019b4:	adrp	x1, 402000 <clock_state_update+0xe8>
  4019b8:	add	x1, x1, #0x6a6
  4019bc:	mov	w2, #0x100                 	// #256
  4019c0:	bl	401120 <inotify_add_watch_and_warn@plt>
  4019c4:	stur	w0, [x29, #-76]
  4019c8:	ldur	w8, [x29, #-76]
  4019cc:	cmp	w8, #0x0
  4019d0:	cset	w8, ge  // ge = tcont
  4019d4:	tbnz	w8, #0, 4019ec <run+0x558>
  4019d8:	ldur	w8, [x29, #-76]
  4019dc:	stur	w8, [x29, #-4]
  4019e0:	mov	w8, #0x1                   	// #1
  4019e4:	stur	w8, [x29, #-96]
  4019e8:	b	401bd0 <run+0x73c>
  4019ec:	ldur	w8, [x29, #-76]
  4019f0:	sub	x9, x29, #0x48
  4019f4:	stur	w8, [x29, #-40]
  4019f8:	mov	x0, x9
  4019fc:	str	x9, [sp, #24]
  401a00:	bl	401ed4 <update_notify_run_systemd_timesync>
  401a04:	ldur	x1, [x29, #-24]
  401a08:	ldr	x9, [sp, #24]
  401a0c:	mov	x0, x9
  401a10:	bl	401f18 <clock_state_update>
  401a14:	stur	w0, [x29, #-76]
  401a18:	ldur	w8, [x29, #-76]
  401a1c:	cmp	w8, #0x0
  401a20:	cset	w8, le
  401a24:	tbnz	w8, #0, 401abc <run+0x628>
  401a28:	ldur	x0, [x29, #-24]
  401a2c:	bl	401130 <sd_event_loop@plt>
  401a30:	stur	w0, [x29, #-76]
  401a34:	ldur	w8, [x29, #-76]
  401a38:	cmp	w8, #0x0
  401a3c:	cset	w8, ge  // ge = tcont
  401a40:	tbnz	w8, #0, 401abc <run+0x628>
  401a44:	mov	w8, #0x3                   	// #3
  401a48:	str	w8, [sp, #124]
  401a4c:	ldur	w8, [x29, #-76]
  401a50:	str	w8, [sp, #120]
  401a54:	str	wzr, [sp, #116]
  401a58:	ldr	w0, [sp, #116]
  401a5c:	bl	4010a0 <log_get_max_level_realm@plt>
  401a60:	ldr	w8, [sp, #124]
  401a64:	and	w8, w8, #0x7
  401a68:	cmp	w0, w8
  401a6c:	b.lt	401aa0 <run+0x60c>  // b.tstop
  401a70:	ldr	w8, [sp, #116]
  401a74:	ldr	w9, [sp, #124]
  401a78:	orr	w0, w9, w8, lsl #10
  401a7c:	ldr	w1, [sp, #120]
  401a80:	ldr	x2, [sp, #64]
  401a84:	mov	w3, #0xee                  	// #238
  401a88:	ldr	x4, [sp, #56]
  401a8c:	adrp	x5, 402000 <clock_state_update+0xe8>
  401a90:	add	x5, x5, #0x6b4
  401a94:	bl	4010b0 <log_internal_realm@plt>
  401a98:	str	w0, [sp, #20]
  401a9c:	b	401ab4 <run+0x620>
  401aa0:	ldr	w0, [sp, #120]
  401aa4:	bl	4010c0 <abs@plt>
  401aa8:	mov	w8, wzr
  401aac:	subs	w8, w8, w0, uxtb
  401ab0:	str	w8, [sp, #20]
  401ab4:	ldr	w8, [sp, #20]
  401ab8:	str	w8, [sp, #112]
  401abc:	sub	x8, x29, #0x48
  401ac0:	ldrb	w9, [x8, #40]
  401ac4:	tbnz	w9, #0, 401acc <run+0x638>
  401ac8:	b	401b40 <run+0x6ac>
  401acc:	mov	w8, #0x7                   	// #7
  401ad0:	str	w8, [sp, #108]
  401ad4:	str	wzr, [sp, #104]
  401ad8:	str	wzr, [sp, #100]
  401adc:	ldr	w0, [sp, #100]
  401ae0:	bl	4010a0 <log_get_max_level_realm@plt>
  401ae4:	ldr	w8, [sp, #108]
  401ae8:	and	w8, w8, #0x7
  401aec:	cmp	w0, w8
  401af0:	b.lt	401b24 <run+0x690>  // b.tstop
  401af4:	ldr	w8, [sp, #100]
  401af8:	ldr	w9, [sp, #108]
  401afc:	orr	w0, w9, w8, lsl #10
  401b00:	ldr	w1, [sp, #104]
  401b04:	ldr	x2, [sp, #64]
  401b08:	mov	w3, #0xf2                  	// #242
  401b0c:	ldr	x4, [sp, #56]
  401b10:	adrp	x5, 402000 <clock_state_update+0xe8>
  401b14:	add	x5, x5, #0x6cd
  401b18:	bl	4010b0 <log_internal_realm@plt>
  401b1c:	str	w0, [sp, #16]
  401b20:	b	401b38 <run+0x6a4>
  401b24:	ldr	w0, [sp, #104]
  401b28:	bl	4010c0 <abs@plt>
  401b2c:	mov	w8, wzr
  401b30:	subs	w8, w8, w0, uxtb
  401b34:	str	w8, [sp, #16]
  401b38:	ldr	w8, [sp, #16]
  401b3c:	str	w8, [sp, #96]
  401b40:	ldur	w8, [x29, #-68]
  401b44:	cmp	w8, #0x5
  401b48:	b.ne	401bc0 <run+0x72c>  // b.any
  401b4c:	mov	w8, #0x6                   	// #6
  401b50:	str	w8, [sp, #92]
  401b54:	str	wzr, [sp, #88]
  401b58:	str	wzr, [sp, #84]
  401b5c:	ldr	w0, [sp, #84]
  401b60:	bl	4010a0 <log_get_max_level_realm@plt>
  401b64:	ldr	w8, [sp, #92]
  401b68:	and	w8, w8, #0x7
  401b6c:	cmp	w0, w8
  401b70:	b.lt	401ba4 <run+0x710>  // b.tstop
  401b74:	ldr	w8, [sp, #84]
  401b78:	ldr	w9, [sp, #92]
  401b7c:	orr	w0, w9, w8, lsl #10
  401b80:	ldr	w1, [sp, #88]
  401b84:	ldr	x2, [sp, #64]
  401b88:	mov	w3, #0xf5                  	// #245
  401b8c:	ldr	x4, [sp, #56]
  401b90:	adrp	x5, 402000 <clock_state_update+0xe8>
  401b94:	add	x5, x5, #0x701
  401b98:	bl	4010b0 <log_internal_realm@plt>
  401b9c:	str	w0, [sp, #12]
  401ba0:	b	401bb8 <run+0x724>
  401ba4:	ldr	w0, [sp, #88]
  401ba8:	bl	4010c0 <abs@plt>
  401bac:	mov	w8, wzr
  401bb0:	subs	w8, w8, w0, uxtb
  401bb4:	str	w8, [sp, #12]
  401bb8:	ldr	w8, [sp, #12]
  401bbc:	str	w8, [sp, #80]
  401bc0:	ldur	w8, [x29, #-76]
  401bc4:	stur	w8, [x29, #-4]
  401bc8:	mov	w8, #0x1                   	// #1
  401bcc:	stur	w8, [x29, #-96]
  401bd0:	sub	x0, x29, #0x48
  401bd4:	bl	401ca8 <clock_state_release>
  401bd8:	sub	x0, x29, #0x18
  401bdc:	bl	401c74 <sd_event_unrefp>
  401be0:	ldur	w0, [x29, #-4]
  401be4:	ldr	x28, [sp, #320]
  401be8:	ldp	x29, x30, [sp, #304]
  401bec:	add	sp, sp, #0x150
  401bf0:	ret

0000000000401bf4 <static_destruct>:
  401bf4:	sub	sp, sp, #0x20
  401bf8:	stp	x29, x30, [sp, #16]
  401bfc:	add	x29, sp, #0x10
  401c00:	adrp	x8, 41f000 <__FRAME_END__+0x1c6d0>
  401c04:	ldr	x8, [x8, #3776]
  401c08:	str	x8, [sp]
  401c0c:	cbnz	x8, 401c14 <static_destruct+0x20>
  401c10:	b	401c68 <static_destruct+0x74>
  401c14:	ldr	x0, [sp]
  401c18:	mov	x1, #0x8                   	// #8
  401c1c:	bl	40245c <ALIGN_TO>
  401c20:	str	x0, [sp, #8]
  401c24:	ldr	x8, [sp, #8]
  401c28:	adrp	x9, 41f000 <__FRAME_END__+0x1c6d0>
  401c2c:	ldr	x9, [x9, #3784]
  401c30:	cmp	x8, x9
  401c34:	b.cs	401c68 <static_destruct+0x74>  // b.hs, b.nlast
  401c38:	ldr	x8, [sp, #8]
  401c3c:	ldr	x8, [x8, #8]
  401c40:	ldr	x9, [sp, #8]
  401c44:	ldr	x0, [x9]
  401c48:	blr	x8
  401c4c:	ldr	x8, [sp, #8]
  401c50:	add	x8, x8, #0x10
  401c54:	mov	x0, x8
  401c58:	mov	x1, #0x8                   	// #8
  401c5c:	bl	40245c <ALIGN_TO>
  401c60:	str	x0, [sp, #8]
  401c64:	b	401c24 <static_destruct+0x30>
  401c68:	ldp	x29, x30, [sp, #16]
  401c6c:	add	sp, sp, #0x20
  401c70:	ret

0000000000401c74 <sd_event_unrefp>:
  401c74:	sub	sp, sp, #0x20
  401c78:	stp	x29, x30, [sp, #16]
  401c7c:	add	x29, sp, #0x10
  401c80:	str	x0, [sp, #8]
  401c84:	ldr	x8, [sp, #8]
  401c88:	ldr	x8, [x8]
  401c8c:	cbz	x8, 401c9c <sd_event_unrefp+0x28>
  401c90:	ldr	x8, [sp, #8]
  401c94:	ldr	x0, [x8]
  401c98:	bl	401140 <sd_event_unref@plt>
  401c9c:	ldp	x29, x30, [sp, #16]
  401ca0:	add	sp, sp, #0x20
  401ca4:	ret

0000000000401ca8 <clock_state_release>:
  401ca8:	sub	sp, sp, #0x20
  401cac:	stp	x29, x30, [sp, #16]
  401cb0:	add	x29, sp, #0x10
  401cb4:	str	x0, [sp, #8]
  401cb8:	ldr	x0, [sp, #8]
  401cbc:	bl	40230c <clock_state_release_timerfd>
  401cc0:	ldr	x8, [sp, #8]
  401cc4:	ldr	x0, [x8, #24]
  401cc8:	bl	401150 <sd_event_source_unref@plt>
  401ccc:	ldr	x8, [sp, #8]
  401cd0:	str	x0, [x8, #24]
  401cd4:	ldr	x8, [sp, #8]
  401cd8:	ldr	w0, [x8, #16]
  401cdc:	bl	401160 <safe_close@plt>
  401ce0:	ldr	x8, [sp, #8]
  401ce4:	str	w0, [x8, #16]
  401ce8:	ldp	x29, x30, [sp, #16]
  401cec:	add	sp, sp, #0x20
  401cf0:	ret

0000000000401cf4 <inotify_handler>:
  401cf4:	sub	sp, sp, #0x1b0
  401cf8:	stp	x29, x30, [sp, #400]
  401cfc:	str	x28, [sp, #416]
  401d00:	add	x29, sp, #0x190
  401d04:	sub	x8, x29, #0x30
  401d08:	mov	x9, #0x110                 	// #272
  401d0c:	adrp	x10, 402000 <clock_state_update+0xe8>
  401d10:	add	x10, x10, #0x574
  401d14:	add	x10, x10, #0x3
  401d18:	add	x11, sp, #0x50
  401d1c:	str	x0, [x8, #32]
  401d20:	stur	w1, [x29, #-20]
  401d24:	stur	w2, [x29, #-24]
  401d28:	str	x3, [x8, #16]
  401d2c:	ldr	x0, [x8, #32]
  401d30:	str	x8, [sp, #32]
  401d34:	str	x9, [sp, #24]
  401d38:	str	x10, [sp, #16]
  401d3c:	str	x11, [sp, #8]
  401d40:	bl	401170 <sd_event_source_get_event@plt>
  401d44:	ldr	x8, [sp, #32]
  401d48:	str	x0, [x8, #8]
  401d4c:	ldr	x9, [x8, #16]
  401d50:	str	x9, [x8]
  401d54:	ldur	w0, [x29, #-20]
  401d58:	ldr	x1, [sp, #8]
  401d5c:	ldr	x2, [sp, #24]
  401d60:	bl	401180 <read@plt>
  401d64:	str	x0, [sp, #64]
  401d68:	ldr	x8, [sp, #64]
  401d6c:	cmp	x8, #0x0
  401d70:	cset	w12, ge  // ge = tcont
  401d74:	tbnz	w12, #0, 401e68 <inotify_handler+0x174>
  401d78:	mov	w8, #0x0                   	// #0
  401d7c:	strb	w8, [sp, #63]
  401d80:	bl	401100 <__errno_location@plt>
  401d84:	ldr	w8, [x0]
  401d88:	cmp	w8, #0x4
  401d8c:	str	w8, [sp, #4]
  401d90:	b.eq	401db0 <inotify_handler+0xbc>  // b.none
  401d94:	b	401d98 <inotify_handler+0xa4>
  401d98:	ldr	w8, [sp, #4]
  401d9c:	cmp	w8, #0xb
  401da0:	cset	w9, eq  // eq = none
  401da4:	eor	w9, w9, #0x1
  401da8:	tbnz	w9, #0, 401dbc <inotify_handler+0xc8>
  401dac:	b	401db0 <inotify_handler+0xbc>
  401db0:	mov	w8, #0x1                   	// #1
  401db4:	strb	w8, [sp, #63]
  401db8:	b	401dbc <inotify_handler+0xc8>
  401dbc:	ldrb	w8, [sp, #63]
  401dc0:	and	w8, w8, #0x1
  401dc4:	strb	w8, [sp, #62]
  401dc8:	ldrb	w8, [sp, #62]
  401dcc:	tbnz	w8, #0, 401dd4 <inotify_handler+0xe0>
  401dd0:	b	401ddc <inotify_handler+0xe8>
  401dd4:	stur	wzr, [x29, #-4]
  401dd8:	b	401ec0 <inotify_handler+0x1cc>
  401ddc:	mov	w8, #0x4                   	// #4
  401de0:	str	w8, [sp, #56]
  401de4:	bl	401100 <__errno_location@plt>
  401de8:	ldr	w8, [x0]
  401dec:	str	w8, [sp, #52]
  401df0:	str	wzr, [sp, #48]
  401df4:	ldr	w0, [sp, #48]
  401df8:	bl	4010a0 <log_get_max_level_realm@plt>
  401dfc:	ldr	w8, [sp, #56]
  401e00:	and	w8, w8, #0x7
  401e04:	cmp	w0, w8
  401e08:	b.lt	401e40 <inotify_handler+0x14c>  // b.tstop
  401e0c:	ldr	w8, [sp, #48]
  401e10:	ldr	w9, [sp, #56]
  401e14:	orr	w0, w9, w8, lsl #10
  401e18:	ldr	w1, [sp, #52]
  401e1c:	ldr	x2, [sp, #16]
  401e20:	mov	w3, #0x61                  	// #97
  401e24:	adrp	x4, 402000 <clock_state_update+0xe8>
  401e28:	add	x4, x4, #0x725
  401e2c:	adrp	x5, 402000 <clock_state_update+0xe8>
  401e30:	add	x5, x5, #0x735
  401e34:	bl	4010b0 <log_internal_realm@plt>
  401e38:	str	w0, [sp]
  401e3c:	b	401e54 <inotify_handler+0x160>
  401e40:	ldr	w0, [sp, #52]
  401e44:	bl	4010c0 <abs@plt>
  401e48:	mov	w8, wzr
  401e4c:	subs	w8, w8, w0, uxtb
  401e50:	str	w8, [sp]
  401e54:	ldr	w8, [sp]
  401e58:	str	w8, [sp, #44]
  401e5c:	ldr	w8, [sp, #44]
  401e60:	stur	w8, [x29, #-4]
  401e64:	b	401ec0 <inotify_handler+0x1cc>
  401e68:	add	x8, sp, #0x50
  401e6c:	str	x8, [sp, #72]
  401e70:	ldr	x8, [sp, #72]
  401e74:	ldr	x9, [sp, #64]
  401e78:	add	x10, sp, #0x50
  401e7c:	add	x9, x10, x9
  401e80:	cmp	x8, x9
  401e84:	b.cs	401ebc <inotify_handler+0x1c8>  // b.hs, b.nlast
  401e88:	ldr	x8, [sp, #32]
  401e8c:	ldr	x0, [x8, #8]
  401e90:	ldr	x1, [x8]
  401e94:	ldr	x2, [sp, #72]
  401e98:	bl	402350 <process_inotify_event>
  401e9c:	ldr	x8, [sp, #72]
  401ea0:	add	x8, x8, #0x10
  401ea4:	ldr	x9, [sp, #72]
  401ea8:	ldr	w10, [x9, #12]
  401eac:	mov	w9, w10
  401eb0:	add	x8, x8, x9
  401eb4:	str	x8, [sp, #72]
  401eb8:	b	401e70 <inotify_handler+0x17c>
  401ebc:	stur	wzr, [x29, #-4]
  401ec0:	ldur	w0, [x29, #-4]
  401ec4:	ldr	x28, [sp, #416]
  401ec8:	ldp	x29, x30, [sp, #400]
  401ecc:	add	sp, sp, #0x1b0
  401ed0:	ret

0000000000401ed4 <update_notify_run_systemd_timesync>:
  401ed4:	sub	sp, sp, #0x20
  401ed8:	stp	x29, x30, [sp, #16]
  401edc:	add	x29, sp, #0x10
  401ee0:	adrp	x1, 402000 <clock_state_update+0xe8>
  401ee4:	add	x1, x1, #0x750
  401ee8:	mov	w2, #0x500                 	// #1280
  401eec:	str	x0, [sp, #8]
  401ef0:	ldr	x8, [sp, #8]
  401ef4:	ldr	w0, [x8, #16]
  401ef8:	bl	401190 <inotify_add_watch@plt>
  401efc:	ldr	x8, [sp, #8]
  401f00:	str	w0, [x8, #36]
  401f04:	ldr	x8, [sp, #8]
  401f08:	ldr	w0, [x8, #36]
  401f0c:	ldp	x29, x30, [sp, #16]
  401f10:	add	sp, sp, #0x20
  401f14:	ret

0000000000401f18 <clock_state_update>:
  401f18:	sub	sp, sp, #0x1b0
  401f1c:	stp	x29, x30, [sp, #400]
  401f20:	str	x28, [sp, #416]
  401f24:	add	x29, sp, #0x190
  401f28:	add	x8, sp, #0x88
  401f2c:	mov	x2, #0xd0                  	// #208
  401f30:	mov	w9, wzr
  401f34:	adrp	x10, 402000 <clock_state_update+0xe8>
  401f38:	add	x10, x10, #0x574
  401f3c:	add	x10, x10, #0x3
  401f40:	adrp	x11, 402000 <clock_state_update+0xe8>
  401f44:	add	x11, x11, #0x766
  401f48:	add	x12, sp, #0x88
  401f4c:	str	x0, [x8, #256]
  401f50:	str	x1, [x8, #248]
  401f54:	mov	x0, x12
  401f58:	mov	w1, w9
  401f5c:	str	x8, [sp, #40]
  401f60:	str	x10, [sp, #32]
  401f64:	str	x11, [sp, #24]
  401f68:	bl	401060 <memset@plt>
  401f6c:	ldr	x8, [sp, #40]
  401f70:	ldr	x0, [x8, #256]
  401f74:	bl	40230c <clock_state_release_timerfd>
  401f78:	bl	4011a0 <time_change_fd@plt>
  401f7c:	str	w0, [sp, #116]
  401f80:	ldr	w9, [sp, #116]
  401f84:	cmp	w9, #0x0
  401f88:	cset	w9, ge  // ge = tcont
  401f8c:	tbnz	w9, #0, 40200c <clock_state_update+0xf4>
  401f90:	mov	w8, #0x3                   	// #3
  401f94:	str	w8, [sp, #112]
  401f98:	ldr	w8, [sp, #116]
  401f9c:	str	w8, [sp, #108]
  401fa0:	str	wzr, [sp, #104]
  401fa4:	ldr	w0, [sp, #104]
  401fa8:	bl	4010a0 <log_get_max_level_realm@plt>
  401fac:	ldr	w8, [sp, #112]
  401fb0:	and	w8, w8, #0x7
  401fb4:	cmp	w0, w8
  401fb8:	b.lt	401fec <clock_state_update+0xd4>  // b.tstop
  401fbc:	ldr	w8, [sp, #104]
  401fc0:	ldr	w9, [sp, #112]
  401fc4:	orr	w0, w9, w8, lsl #10
  401fc8:	ldr	w1, [sp, #108]
  401fcc:	ldr	x2, [sp, #32]
  401fd0:	mov	w3, #0x8f                  	// #143
  401fd4:	ldr	x4, [sp, #24]
  401fd8:	adrp	x5, 402000 <clock_state_update+0xe8>
  401fdc:	add	x5, x5, #0x779
  401fe0:	bl	4010b0 <log_internal_realm@plt>
  401fe4:	str	w0, [sp, #20]
  401fe8:	b	402000 <clock_state_update+0xe8>
  401fec:	ldr	w0, [sp, #108]
  401ff0:	bl	4010c0 <abs@plt>
  401ff4:	mov	w8, wzr
  401ff8:	subs	w8, w8, w0, uxtb
  401ffc:	str	w8, [sp, #20]
  402000:	ldr	w8, [sp, #20]
  402004:	str	w8, [sp, #100]
  402008:	b	4022d8 <clock_state_update+0x3c0>
  40200c:	ldr	w8, [sp, #116]
  402010:	ldr	x9, [sp, #40]
  402014:	ldr	x10, [x9, #256]
  402018:	str	w8, [x10]
  40201c:	add	x0, sp, #0x88
  402020:	bl	4011b0 <adjtimex@plt>
  402024:	str	w0, [sp, #116]
  402028:	ldr	w8, [sp, #116]
  40202c:	cmp	w8, #0x0
  402030:	cset	w8, ge  // ge = tcont
  402034:	tbnz	w8, #0, 4020b8 <clock_state_update+0x1a0>
  402038:	mov	w8, #0x3                   	// #3
  40203c:	str	w8, [sp, #96]
  402040:	bl	401100 <__errno_location@plt>
  402044:	ldr	w8, [x0]
  402048:	str	w8, [sp, #92]
  40204c:	str	wzr, [sp, #88]
  402050:	ldr	w0, [sp, #88]
  402054:	bl	4010a0 <log_get_max_level_realm@plt>
  402058:	ldr	w8, [sp, #96]
  40205c:	and	w8, w8, #0x7
  402060:	cmp	w0, w8
  402064:	b.lt	402098 <clock_state_update+0x180>  // b.tstop
  402068:	ldr	w8, [sp, #88]
  40206c:	ldr	w9, [sp, #96]
  402070:	orr	w0, w9, w8, lsl #10
  402074:	ldr	w1, [sp, #92]
  402078:	ldr	x2, [sp, #32]
  40207c:	mov	w3, #0x96                  	// #150
  402080:	ldr	x4, [sp, #24]
  402084:	adrp	x5, 402000 <clock_state_update+0xe8>
  402088:	add	x5, x5, #0x796
  40208c:	bl	4010b0 <log_internal_realm@plt>
  402090:	str	w0, [sp, #16]
  402094:	b	4020ac <clock_state_update+0x194>
  402098:	ldr	w0, [sp, #92]
  40209c:	bl	4010c0 <abs@plt>
  4020a0:	mov	w8, wzr
  4020a4:	subs	w8, w8, w0, uxtb
  4020a8:	str	w8, [sp, #16]
  4020ac:	ldr	w8, [sp, #16]
  4020b0:	str	w8, [sp, #84]
  4020b4:	b	4022d8 <clock_state_update+0x3c0>
  4020b8:	ldr	w8, [sp, #116]
  4020bc:	ldr	x9, [sp, #40]
  4020c0:	ldr	x10, [x9, #256]
  4020c4:	str	w8, [x10, #4]
  4020c8:	ldr	w8, [sp, #176]
  4020cc:	and	w8, w8, #0x2000
  4020d0:	cbz	w8, 4020e8 <clock_state_update+0x1d0>
  4020d4:	ldr	x8, [sp, #40]
  4020d8:	ldr	x9, [x8, #80]
  4020dc:	mov	x10, #0x3e8                 	// #1000
  4020e0:	sdiv	x9, x9, x10
  4020e4:	str	x9, [x8, #80]
  4020e8:	add	x8, sp, #0x88
  4020ec:	add	x0, x8, #0x48
  4020f0:	bl	4011c0 <timeval_load@plt>
  4020f4:	str	x0, [sp, #120]
  4020f8:	ldr	x2, [sp, #120]
  4020fc:	sub	x0, x29, #0x36
  402100:	mov	x1, #0x26                  	// #38
  402104:	bl	4011d0 <format_timestamp_us_utc@plt>
  402108:	str	x0, [sp, #128]
  40210c:	ldr	x8, [sp, #128]
  402110:	cbnz	x8, 402124 <clock_state_update+0x20c>
  402114:	sub	x0, x29, #0x36
  402118:	adrp	x1, 402000 <clock_state_update+0xe8>
  40211c:	add	x1, x1, #0x7b8
  402120:	bl	4011e0 <strcpy@plt>
  402124:	mov	w8, #0x6                   	// #6
  402128:	str	w8, [sp, #80]
  40212c:	str	wzr, [sp, #76]
  402130:	str	wzr, [sp, #72]
  402134:	ldr	w0, [sp, #72]
  402138:	bl	4010a0 <log_get_max_level_realm@plt>
  40213c:	ldr	w8, [sp, #80]
  402140:	and	w8, w8, #0x7
  402144:	cmp	w0, w8
  402148:	b.lt	402198 <clock_state_update+0x280>  // b.tstop
  40214c:	ldr	w8, [sp, #72]
  402150:	ldr	w9, [sp, #80]
  402154:	orr	w0, w9, w8, lsl #10
  402158:	ldr	w1, [sp, #76]
  40215c:	ldr	x10, [sp, #40]
  402160:	ldr	x11, [x10, #256]
  402164:	ldr	w6, [x11, #4]
  402168:	ldr	w7, [sp, #176]
  40216c:	ldr	x11, [sp, #128]
  402170:	ldr	x2, [sp, #32]
  402174:	mov	w3, #0xa1                  	// #161
  402178:	ldr	x4, [sp, #24]
  40217c:	adrp	x5, 402000 <clock_state_update+0xe8>
  402180:	add	x5, x5, #0x7c8
  402184:	mov	x12, sp
  402188:	str	x11, [x12]
  40218c:	bl	4010b0 <log_internal_realm@plt>
  402190:	str	w0, [sp, #12]
  402194:	b	4021ac <clock_state_update+0x294>
  402198:	ldr	w0, [sp, #76]
  40219c:	bl	4010c0 <abs@plt>
  4021a0:	mov	w8, wzr
  4021a4:	subs	w8, w8, w0, uxtb
  4021a8:	str	w8, [sp, #12]
  4021ac:	ldr	w8, [sp, #12]
  4021b0:	str	w8, [sp, #68]
  4021b4:	adrp	x0, 402000 <clock_state_update+0xe8>
  4021b8:	add	x0, x0, #0x7eb
  4021bc:	mov	w8, wzr
  4021c0:	mov	w1, w8
  4021c4:	bl	4011f0 <access@plt>
  4021c8:	cmp	w0, #0x0
  4021cc:	cset	w8, ge  // ge = tcont
  4021d0:	ldr	x9, [sp, #40]
  4021d4:	ldr	x10, [x9, #256]
  4021d8:	and	w8, w8, #0x1
  4021dc:	strb	w8, [x10, #40]
  4021e0:	ldr	x10, [x9, #256]
  4021e4:	ldrb	w8, [x10, #40]
  4021e8:	tbnz	w8, #0, 4021f0 <clock_state_update+0x2d8>
  4021ec:	b	4021f8 <clock_state_update+0x2e0>
  4021f0:	str	wzr, [sp, #116]
  4021f4:	b	4022d8 <clock_state_update+0x3c0>
  4021f8:	ldr	x8, [sp, #40]
  4021fc:	ldr	x9, [x8, #256]
  402200:	ldr	w10, [x9, #4]
  402204:	cmp	w10, #0x5
  402208:	b.ne	4022d4 <clock_state_update+0x3bc>  // b.any
  40220c:	ldr	x8, [sp, #40]
  402210:	ldr	x0, [x8, #248]
  402214:	ldr	x9, [x8, #256]
  402218:	add	x1, x9, #0x8
  40221c:	ldr	x9, [x8, #256]
  402220:	ldr	w2, [x9]
  402224:	ldr	x5, [x8, #256]
  402228:	mov	w3, #0x1                   	// #1
  40222c:	adrp	x4, 402000 <clock_state_update+0xe8>
  402230:	add	x4, x4, #0x404
  402234:	bl	401110 <sd_event_add_io@plt>
  402238:	str	w0, [sp, #116]
  40223c:	ldr	w10, [sp, #116]
  402240:	cmp	w10, #0x0
  402244:	cset	w10, ge  // ge = tcont
  402248:	tbnz	w10, #0, 4022c8 <clock_state_update+0x3b0>
  40224c:	mov	w8, #0x3                   	// #3
  402250:	str	w8, [sp, #64]
  402254:	ldr	w8, [sp, #116]
  402258:	str	w8, [sp, #60]
  40225c:	str	wzr, [sp, #56]
  402260:	ldr	w0, [sp, #56]
  402264:	bl	4010a0 <log_get_max_level_realm@plt>
  402268:	ldr	w8, [sp, #64]
  40226c:	and	w8, w8, #0x7
  402270:	cmp	w0, w8
  402274:	b.lt	4022a8 <clock_state_update+0x390>  // b.tstop
  402278:	ldr	w8, [sp, #56]
  40227c:	ldr	w9, [sp, #64]
  402280:	orr	w0, w9, w8, lsl #10
  402284:	ldr	w1, [sp, #60]
  402288:	ldr	x2, [sp, #32]
  40228c:	mov	w3, #0xad                  	// #173
  402290:	ldr	x4, [sp, #24]
  402294:	adrp	x5, 402000 <clock_state_update+0xe8>
  402298:	add	x5, x5, #0x80e
  40229c:	bl	4010b0 <log_internal_realm@plt>
  4022a0:	str	w0, [sp, #8]
  4022a4:	b	4022bc <clock_state_update+0x3a4>
  4022a8:	ldr	w0, [sp, #60]
  4022ac:	bl	4010c0 <abs@plt>
  4022b0:	mov	w8, wzr
  4022b4:	subs	w8, w8, w0, uxtb
  4022b8:	str	w8, [sp, #8]
  4022bc:	ldr	w8, [sp, #8]
  4022c0:	str	w8, [sp, #52]
  4022c4:	b	4022d8 <clock_state_update+0x3c0>
  4022c8:	mov	w8, #0x1                   	// #1
  4022cc:	str	w8, [sp, #116]
  4022d0:	b	4022d8 <clock_state_update+0x3c0>
  4022d4:	str	wzr, [sp, #116]
  4022d8:	ldr	w8, [sp, #116]
  4022dc:	cmp	w8, #0x0
  4022e0:	cset	w8, gt
  4022e4:	tbnz	w8, #0, 4022f8 <clock_state_update+0x3e0>
  4022e8:	ldr	x8, [sp, #40]
  4022ec:	ldr	x0, [x8, #248]
  4022f0:	ldr	w1, [sp, #116]
  4022f4:	bl	401200 <sd_event_exit@plt>
  4022f8:	ldr	w0, [sp, #116]
  4022fc:	ldr	x28, [sp, #416]
  402300:	ldp	x29, x30, [sp, #400]
  402304:	add	sp, sp, #0x1b0
  402308:	ret

000000000040230c <clock_state_release_timerfd>:
  40230c:	sub	sp, sp, #0x20
  402310:	stp	x29, x30, [sp, #16]
  402314:	add	x29, sp, #0x10
  402318:	str	x0, [sp, #8]
  40231c:	ldr	x8, [sp, #8]
  402320:	ldr	x0, [x8, #8]
  402324:	bl	401150 <sd_event_source_unref@plt>
  402328:	ldr	x8, [sp, #8]
  40232c:	str	x0, [x8, #8]
  402330:	ldr	x8, [sp, #8]
  402334:	ldr	w0, [x8]
  402338:	bl	401160 <safe_close@plt>
  40233c:	ldr	x8, [sp, #8]
  402340:	str	w0, [x8]
  402344:	ldp	x29, x30, [sp, #16]
  402348:	add	sp, sp, #0x20
  40234c:	ret

0000000000402350 <process_inotify_event>:
  402350:	sub	sp, sp, #0x30
  402354:	stp	x29, x30, [sp, #32]
  402358:	add	x29, sp, #0x20
  40235c:	stur	x0, [x29, #-8]
  402360:	str	x1, [sp, #16]
  402364:	str	x2, [sp, #8]
  402368:	ldr	x8, [sp, #8]
  40236c:	ldr	w9, [x8]
  402370:	ldr	x8, [sp, #16]
  402374:	ldr	w10, [x8, #32]
  402378:	cmp	w9, w10
  40237c:	b.ne	4023a0 <process_inotify_event+0x50>  // b.any
  402380:	ldr	x8, [sp, #16]
  402384:	ldr	w9, [x8, #36]
  402388:	cmp	w9, #0x0
  40238c:	cset	w9, ge  // ge = tcont
  402390:	tbnz	w9, #0, 40239c <process_inotify_event+0x4c>
  402394:	ldr	x0, [sp, #16]
  402398:	bl	401ed4 <update_notify_run_systemd_timesync>
  40239c:	b	4023f8 <process_inotify_event+0xa8>
  4023a0:	ldr	x8, [sp, #8]
  4023a4:	ldr	w9, [x8]
  4023a8:	ldr	x8, [sp, #16]
  4023ac:	ldr	w10, [x8, #36]
  4023b0:	cmp	w9, w10
  4023b4:	b.ne	4023f8 <process_inotify_event+0xa8>  // b.any
  4023b8:	ldr	x8, [sp, #8]
  4023bc:	ldr	w9, [x8, #4]
  4023c0:	and	w9, w9, #0x400
  4023c4:	cbz	w9, 4023ec <process_inotify_event+0x9c>
  4023c8:	ldr	x8, [sp, #16]
  4023cc:	ldr	w0, [x8, #16]
  4023d0:	ldr	x8, [sp, #16]
  4023d4:	ldr	w1, [x8, #36]
  4023d8:	bl	401210 <inotify_rm_watch@plt>
  4023dc:	ldr	x8, [sp, #16]
  4023e0:	mov	w9, #0xffffffff            	// #-1
  4023e4:	str	w9, [x8, #36]
  4023e8:	b	4023f8 <process_inotify_event+0xa8>
  4023ec:	ldr	x0, [sp, #16]
  4023f0:	ldur	x1, [x29, #-8]
  4023f4:	bl	401f18 <clock_state_update>
  4023f8:	ldp	x29, x30, [sp, #32]
  4023fc:	add	sp, sp, #0x30
  402400:	ret

0000000000402404 <timerfd_handler>:
  402404:	sub	sp, sp, #0x40
  402408:	stp	x29, x30, [sp, #48]
  40240c:	add	x29, sp, #0x30
  402410:	stur	x0, [x29, #-8]
  402414:	stur	w1, [x29, #-12]
  402418:	stur	w2, [x29, #-16]
  40241c:	str	x3, [sp, #24]
  402420:	ldr	x8, [sp, #24]
  402424:	str	x8, [sp, #16]
  402428:	ldr	x0, [sp, #16]
  40242c:	ldur	x8, [x29, #-8]
  402430:	str	x0, [sp, #8]
  402434:	mov	x0, x8
  402438:	bl	401170 <sd_event_source_get_event@plt>
  40243c:	ldr	x8, [sp, #8]
  402440:	str	x0, [sp]
  402444:	mov	x0, x8
  402448:	ldr	x1, [sp]
  40244c:	bl	401f18 <clock_state_update>
  402450:	ldp	x29, x30, [sp, #48]
  402454:	add	sp, sp, #0x40
  402458:	ret

000000000040245c <ALIGN_TO>:
  40245c:	sub	sp, sp, #0x10
  402460:	str	x0, [sp, #8]
  402464:	str	x1, [sp]
  402468:	ldr	x8, [sp, #8]
  40246c:	ldr	x9, [sp]
  402470:	add	x8, x8, x9
  402474:	subs	x8, x8, #0x1
  402478:	ldr	x9, [sp]
  40247c:	subs	x9, x9, #0x1
  402480:	bic	x0, x8, x9
  402484:	add	sp, sp, #0x10
  402488:	ret
  40248c:	udf	#0

0000000000402490 <__libc_csu_init>:
  402490:	stp	x29, x30, [sp, #-64]!
  402494:	mov	x29, sp
  402498:	stp	x19, x20, [sp, #16]
  40249c:	adrp	x20, 41f000 <__FRAME_END__+0x1c6d0>
  4024a0:	add	x20, x20, #0xc90
  4024a4:	stp	x21, x22, [sp, #32]
  4024a8:	adrp	x21, 41f000 <__FRAME_END__+0x1c6d0>
  4024ac:	add	x21, x21, #0xc88
  4024b0:	sub	x20, x20, x21
  4024b4:	mov	w22, w0
  4024b8:	stp	x23, x24, [sp, #48]
  4024bc:	mov	x23, x1
  4024c0:	mov	x24, x2
  4024c4:	bl	400fb8 <_init>
  4024c8:	cmp	xzr, x20, asr #3
  4024cc:	b.eq	4024f8 <__libc_csu_init+0x68>  // b.none
  4024d0:	asr	x20, x20, #3
  4024d4:	mov	x19, #0x0                   	// #0
  4024d8:	ldr	x3, [x21, x19, lsl #3]
  4024dc:	mov	x2, x24
  4024e0:	add	x19, x19, #0x1
  4024e4:	mov	x1, x23
  4024e8:	mov	w0, w22
  4024ec:	blr	x3
  4024f0:	cmp	x20, x19
  4024f4:	b.ne	4024d8 <__libc_csu_init+0x48>  // b.any
  4024f8:	ldp	x19, x20, [sp, #16]
  4024fc:	ldp	x21, x22, [sp, #32]
  402500:	ldp	x23, x24, [sp, #48]
  402504:	ldp	x29, x30, [sp], #64
  402508:	ret
  40250c:	nop

0000000000402510 <__libc_csu_fini>:
  402510:	ret

Disassembly of section .fini:

0000000000402514 <_fini>:
  402514:	stp	x29, x30, [sp, #-16]!
  402518:	mov	x29, sp
  40251c:	ldp	x29, x30, [sp], #16
  402520:	ret
