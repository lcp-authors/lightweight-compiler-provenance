
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//FastCalc.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c50 <_init>:
 c50:	stp	x29, x30, [sp, #-16]!
 c54:	mov	x29, sp
 c58:	bl	e50 <call_weak_fn>
 c5c:	ldp	x29, x30, [sp], #16
 c60:	ret

Disassembly of section .plt:

0000000000000c70 <.plt>:
 c70:	stp	x16, x30, [sp, #-16]!
 c74:	adrp	x16, 13000 <__FRAME_END__+0xfb48>
 c78:	ldr	x17, [x16, #4088]
 c7c:	add	x16, x16, #0xff8
 c80:	br	x17
 c84:	nop
 c88:	nop
 c8c:	nop

0000000000000c90 <Perl_sv_2iv_flags@plt>:
 c90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c94:	ldr	x17, [x16]
 c98:	add	x16, x16, #0x0
 c9c:	br	x17

0000000000000ca0 <Perl_sv_setnv@plt>:
 ca0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 ca4:	ldr	x17, [x16, #8]
 ca8:	add	x16, x16, #0x8
 cac:	br	x17

0000000000000cb0 <Perl_newRV_noinc@plt>:
 cb0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cb4:	ldr	x17, [x16, #16]
 cb8:	add	x16, x16, #0x10
 cbc:	br	x17

0000000000000cc0 <Perl_sv_2uv_flags@plt>:
 cc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cc4:	ldr	x17, [x16, #24]
 cc8:	add	x16, x16, #0x18
 ccc:	br	x17

0000000000000cd0 <__cxa_finalize@plt>:
 cd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cd4:	ldr	x17, [x16, #32]
 cd8:	add	x16, x16, #0x20
 cdc:	br	x17

0000000000000ce0 <Perl_av_len@plt>:
 ce0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 ce4:	ldr	x17, [x16, #40]
 ce8:	add	x16, x16, #0x28
 cec:	br	x17

0000000000000cf0 <Perl_av_store@plt>:
 cf0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cf4:	ldr	x17, [x16, #48]
 cf8:	add	x16, x16, #0x30
 cfc:	br	x17

0000000000000d00 <Perl_newSVnv@plt>:
 d00:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d04:	ldr	x17, [x16, #56]
 d08:	add	x16, x16, #0x38
 d0c:	br	x17

0000000000000d10 <Perl_sv_2pv_flags@plt>:
 d10:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d14:	ldr	x17, [x16, #64]
 d18:	add	x16, x16, #0x40
 d1c:	br	x17

0000000000000d20 <Perl_xs_boot_epilog@plt>:
 d20:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d24:	ldr	x17, [x16, #72]
 d28:	add	x16, x16, #0x48
 d2c:	br	x17

0000000000000d30 <__stack_chk_fail@plt>:
 d30:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d34:	ldr	x17, [x16, #80]
 d38:	add	x16, x16, #0x50
 d3c:	br	x17

0000000000000d40 <__gmon_start__@plt>:
 d40:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d44:	ldr	x17, [x16, #88]
 d48:	add	x16, x16, #0x58
 d4c:	br	x17

0000000000000d50 <Perl_croak_xs_usage@plt>:
 d50:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d54:	ldr	x17, [x16, #96]
 d58:	add	x16, x16, #0x60
 d5c:	br	x17

0000000000000d60 <Perl_sv_2nv_flags@plt>:
 d60:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d64:	ldr	x17, [x16, #104]
 d68:	add	x16, x16, #0x68
 d6c:	br	x17

0000000000000d70 <Perl_av_push@plt>:
 d70:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d74:	ldr	x17, [x16, #112]
 d78:	add	x16, x16, #0x70
 d7c:	br	x17

0000000000000d80 <Perl_av_pop@plt>:
 d80:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d84:	ldr	x17, [x16, #120]
 d88:	add	x16, x16, #0x78
 d8c:	br	x17

0000000000000d90 <Perl_croak_nocontext@plt>:
 d90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d94:	ldr	x17, [x16, #128]
 d98:	add	x16, x16, #0x80
 d9c:	br	x17

0000000000000da0 <Perl_newXS_deffile@plt>:
 da0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 da4:	ldr	x17, [x16, #136]
 da8:	add	x16, x16, #0x88
 dac:	br	x17

0000000000000db0 <Perl_sv_2mortal@plt>:
 db0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 db4:	ldr	x17, [x16, #144]
 db8:	add	x16, x16, #0x90
 dbc:	br	x17

0000000000000dc0 <Perl_newSVuv@plt>:
 dc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 dc4:	ldr	x17, [x16, #152]
 dc8:	add	x16, x16, #0x98
 dcc:	br	x17

0000000000000dd0 <Perl_xs_handshake@plt>:
 dd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 dd4:	ldr	x17, [x16, #160]
 dd8:	add	x16, x16, #0xa0
 ddc:	br	x17

0000000000000de0 <Perl_av_fetch@plt>:
 de0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 de4:	ldr	x17, [x16, #168]
 de8:	add	x16, x16, #0xa8
 dec:	br	x17

0000000000000df0 <Perl_newRV@plt>:
 df0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 df4:	ldr	x17, [x16, #176]
 df8:	add	x16, x16, #0xb0
 dfc:	br	x17

0000000000000e00 <Perl_newSV_type@plt>:
 e00:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 e04:	ldr	x17, [x16, #184]
 e08:	add	x16, x16, #0xb8
 e0c:	br	x17

0000000000000e10 <Perl_newSViv@plt>:
 e10:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 e14:	ldr	x17, [x16, #192]
 e18:	add	x16, x16, #0xc0
 e1c:	br	x17

0000000000000e20 <Perl_sv_setiv@plt>:
 e20:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 e24:	ldr	x17, [x16, #200]
 e28:	add	x16, x16, #0xc8
 e2c:	br	x17

0000000000000e30 <Perl_newSVpvn@plt>:
 e30:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 e34:	ldr	x17, [x16, #208]
 e38:	add	x16, x16, #0xd0
 e3c:	br	x17

0000000000000e40 <Perl_av_extend@plt>:
 e40:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 e44:	ldr	x17, [x16, #216]
 e48:	add	x16, x16, #0xd8
 e4c:	br	x17

Disassembly of section .text:

0000000000000e50 <call_weak_fn>:
     e50:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
     e54:	ldr	x0, [x0, #4040]
     e58:	cbz	x0, e60 <call_weak_fn+0x10>
     e5c:	b	d40 <__gmon_start__@plt>
     e60:	ret

0000000000000e64 <deregister_tm_clones>:
     e64:	stp	x29, x30, [sp, #-32]!
     e68:	mov	x29, sp
     e6c:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     e70:	add	x0, x0, #0xe8
     e74:	str	x0, [sp, #24]
     e78:	ldr	x0, [sp, #24]
     e7c:	str	x0, [sp, #24]
     e80:	ldr	x1, [sp, #24]
     e84:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     e88:	add	x0, x0, #0xe8
     e8c:	cmp	x1, x0
     e90:	b.eq	ec8 <deregister_tm_clones+0x64>  // b.none
     e94:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
     e98:	ldr	x0, [x0, #4024]
     e9c:	str	x0, [sp, #16]
     ea0:	ldr	x0, [sp, #16]
     ea4:	str	x0, [sp, #16]
     ea8:	ldr	x0, [sp, #16]
     eac:	cmp	x0, #0x0
     eb0:	b.eq	ecc <deregister_tm_clones+0x68>  // b.none
     eb4:	ldr	x1, [sp, #16]
     eb8:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     ebc:	add	x0, x0, #0xe8
     ec0:	blr	x1
     ec4:	b	ecc <deregister_tm_clones+0x68>
     ec8:	nop
     ecc:	ldp	x29, x30, [sp], #32
     ed0:	ret

0000000000000ed4 <register_tm_clones>:
     ed4:	stp	x29, x30, [sp, #-48]!
     ed8:	mov	x29, sp
     edc:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     ee0:	add	x0, x0, #0xe8
     ee4:	str	x0, [sp, #40]
     ee8:	ldr	x0, [sp, #40]
     eec:	str	x0, [sp, #40]
     ef0:	ldr	x1, [sp, #40]
     ef4:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     ef8:	add	x0, x0, #0xe8
     efc:	sub	x0, x1, x0
     f00:	asr	x0, x0, #3
     f04:	lsr	x1, x0, #63
     f08:	add	x0, x1, x0
     f0c:	asr	x0, x0, #1
     f10:	str	x0, [sp, #32]
     f14:	ldr	x0, [sp, #32]
     f18:	cmp	x0, #0x0
     f1c:	b.eq	f58 <register_tm_clones+0x84>  // b.none
     f20:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
     f24:	ldr	x0, [x0, #4064]
     f28:	str	x0, [sp, #24]
     f2c:	ldr	x0, [sp, #24]
     f30:	str	x0, [sp, #24]
     f34:	ldr	x0, [sp, #24]
     f38:	cmp	x0, #0x0
     f3c:	b.eq	f5c <register_tm_clones+0x88>  // b.none
     f40:	ldr	x2, [sp, #24]
     f44:	ldr	x1, [sp, #32]
     f48:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     f4c:	add	x0, x0, #0xe8
     f50:	blr	x2
     f54:	b	f5c <register_tm_clones+0x88>
     f58:	nop
     f5c:	ldp	x29, x30, [sp], #48
     f60:	ret

0000000000000f64 <__do_global_dtors_aux>:
     f64:	stp	x29, x30, [sp, #-16]!
     f68:	mov	x29, sp
     f6c:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     f70:	add	x0, x0, #0xe8
     f74:	ldrb	w0, [x0]
     f78:	and	x0, x0, #0xff
     f7c:	cmp	x0, #0x0
     f80:	b.ne	fbc <__do_global_dtors_aux+0x58>  // b.any
     f84:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
     f88:	ldr	x0, [x0, #4032]
     f8c:	cmp	x0, #0x0
     f90:	b.eq	fa4 <__do_global_dtors_aux+0x40>  // b.none
     f94:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     f98:	add	x0, x0, #0xe0
     f9c:	ldr	x0, [x0]
     fa0:	bl	cd0 <__cxa_finalize@plt>
     fa4:	bl	e64 <deregister_tm_clones>
     fa8:	adrp	x0, 14000 <Perl_sv_2iv_flags>
     fac:	add	x0, x0, #0xe8
     fb0:	mov	w1, #0x1                   	// #1
     fb4:	strb	w1, [x0]
     fb8:	b	fc0 <__do_global_dtors_aux+0x5c>
     fbc:	nop
     fc0:	ldp	x29, x30, [sp], #16
     fc4:	ret

0000000000000fc8 <frame_dummy>:
     fc8:	stp	x29, x30, [sp, #-16]!
     fcc:	mov	x29, sp
     fd0:	bl	ed4 <register_tm_clones>
     fd4:	nop
     fd8:	ldp	x29, x30, [sp], #16
     fdc:	ret

0000000000000fe0 <S_POPMARK>:
     fe0:	sub	sp, sp, #0x10
     fe4:	str	x0, [sp, #8]
     fe8:	ldr	x0, [sp, #8]
     fec:	ldr	x0, [x0, #120]
     ff0:	sub	x2, x0, #0x4
     ff4:	ldr	x1, [sp, #8]
     ff8:	str	x2, [x1, #120]
     ffc:	ldr	w0, [x0]
    1000:	add	sp, sp, #0x10
    1004:	ret

0000000000001008 <S_croak_memory_wrap>:
    1008:	stp	x29, x30, [sp, #-16]!
    100c:	mov	x29, sp
    1010:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    1014:	ldr	x1, [x0, #4056]
    1018:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    101c:	add	x0, x0, #0xf08
    1020:	bl	d90 <Perl_croak_nocontext@plt>

0000000000001024 <XS_Math__BigInt__FastCalc__new>:
    1024:	stp	x29, x30, [sp, #-128]!
    1028:	mov	x29, sp
    102c:	str	x0, [sp, #24]
    1030:	str	x1, [sp, #16]
    1034:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    1038:	ldr	x0, [x0, #4048]
    103c:	ldr	x1, [x0]
    1040:	str	x1, [sp, #120]
    1044:	mov	x1, #0x0                   	// #0
    1048:	ldr	x0, [sp, #24]
    104c:	ldr	x0, [x0]
    1050:	str	x0, [sp, #64]
    1054:	ldr	x0, [sp, #24]
    1058:	bl	fe0 <S_POPMARK>
    105c:	str	w0, [sp, #32]
    1060:	ldr	x0, [sp, #24]
    1064:	ldr	x1, [x0, #24]
    1068:	ldr	w0, [sp, #32]
    106c:	add	w2, w0, #0x1
    1070:	str	w2, [sp, #32]
    1074:	sxtw	x0, w0
    1078:	lsl	x0, x0, #3
    107c:	add	x0, x1, x0
    1080:	str	x0, [sp, #72]
    1084:	ldr	x1, [sp, #64]
    1088:	ldr	x0, [sp, #72]
    108c:	sub	x0, x1, x0
    1090:	asr	x0, x0, #3
    1094:	str	w0, [sp, #36]
    1098:	ldr	w0, [sp, #36]
    109c:	cmp	w0, #0x2
    10a0:	b.eq	10b4 <XS_Math__BigInt__FastCalc__new+0x90>  // b.none
    10a4:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    10a8:	add	x1, x0, #0xf10
    10ac:	ldr	x0, [sp, #16]
    10b0:	bl	d50 <Perl_croak_xs_usage@plt>
    10b4:	ldr	x0, [sp, #24]
    10b8:	ldr	x1, [x0, #24]
    10bc:	ldrsw	x0, [sp, #32]
    10c0:	add	x0, x0, #0x1
    10c4:	lsl	x0, x0, #3
    10c8:	add	x0, x1, x0
    10cc:	ldr	x0, [x0]
    10d0:	str	x0, [sp, #80]
    10d4:	mov	w1, #0xb                   	// #11
    10d8:	ldr	x0, [sp, #24]
    10dc:	bl	e00 <Perl_newSV_type@plt>
    10e0:	str	x0, [sp, #88]
    10e4:	ldr	x0, [sp, #88]
    10e8:	str	x0, [sp, #96]
    10ec:	ldr	x0, [sp, #80]
    10f0:	ldr	w1, [x0, #12]
    10f4:	mov	w0, #0x100                 	// #256
    10f8:	movk	w0, #0x8000, lsl #16
    10fc:	and	w1, w1, w0
    1100:	mov	w0, #0x100                 	// #256
    1104:	movk	w0, #0x8000, lsl #16
    1108:	cmp	w1, w0
    110c:	b.ne	11d4 <XS_Math__BigInt__FastCalc__new+0x1b0>  // b.any
    1110:	ldr	x0, [sp, #80]
    1114:	ldr	w1, [x0, #12]
    1118:	mov	w0, #0x100                 	// #256
    111c:	movk	w0, #0x8020, lsl #16
    1120:	and	w1, w1, w0
    1124:	mov	w0, #0x100                 	// #256
    1128:	movk	w0, #0x8000, lsl #16
    112c:	cmp	w1, w0
    1130:	b.ne	1148 <XS_Math__BigInt__FastCalc__new+0x124>  // b.any
    1134:	ldr	x0, [sp, #80]
    1138:	ldr	x0, [x0]
    113c:	ldr	d0, [x0, #32]
    1140:	ucvtf	d0, d0
    1144:	b	115c <XS_Math__BigInt__FastCalc__new+0x138>
    1148:	mov	w2, #0x2                   	// #2
    114c:	ldr	x1, [sp, #80]
    1150:	ldr	x0, [sp, #24]
    1154:	bl	cc0 <Perl_sv_2uv_flags@plt>
    1158:	ucvtf	d0, x0
    115c:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    1160:	add	x0, x0, #0xf0
    1164:	ldr	d1, [x0]
    1168:	fcmpe	d0, d1
    116c:	b.pl	11d4 <XS_Math__BigInt__FastCalc__new+0x1b0>  // b.nfrst
    1170:	ldr	x0, [sp, #80]
    1174:	ldr	w1, [x0, #12]
    1178:	mov	w0, #0x100                 	// #256
    117c:	movk	w0, #0x8020, lsl #16
    1180:	and	w1, w1, w0
    1184:	mov	w0, #0x100                 	// #256
    1188:	movk	w0, #0x8000, lsl #16
    118c:	cmp	w1, w0
    1190:	b.ne	11a4 <XS_Math__BigInt__FastCalc__new+0x180>  // b.any
    1194:	ldr	x0, [sp, #80]
    1198:	ldr	x0, [x0]
    119c:	ldr	x0, [x0, #32]
    11a0:	b	11b4 <XS_Math__BigInt__FastCalc__new+0x190>
    11a4:	mov	w2, #0x2                   	// #2
    11a8:	ldr	x1, [sp, #80]
    11ac:	ldr	x0, [sp, #24]
    11b0:	bl	cc0 <Perl_sv_2uv_flags@plt>
    11b4:	mov	x1, x0
    11b8:	ldr	x0, [sp, #24]
    11bc:	bl	dc0 <Perl_newSVuv@plt>
    11c0:	mov	x2, x0
    11c4:	ldr	x1, [sp, #96]
    11c8:	ldr	x0, [sp, #24]
    11cc:	bl	d70 <Perl_av_push@plt>
    11d0:	b	12c4 <XS_Math__BigInt__FastCalc__new+0x2a0>
    11d4:	ldr	x0, [sp, #80]
    11d8:	ldr	w1, [x0, #12]
    11dc:	mov	w0, #0x400                 	// #1024
    11e0:	movk	w0, #0x20, lsl #16
    11e4:	and	w0, w1, w0
    11e8:	cmp	w0, #0x400
    11ec:	b.ne	120c <XS_Math__BigInt__FastCalc__new+0x1e8>  // b.any
    11f0:	ldr	x0, [sp, #80]
    11f4:	ldr	x0, [x0]
    11f8:	ldr	x0, [x0, #16]
    11fc:	str	x0, [sp, #40]
    1200:	ldr	x0, [sp, #80]
    1204:	ldr	x0, [x0, #16]
    1208:	b	1224 <XS_Math__BigInt__FastCalc__new+0x200>
    120c:	add	x0, sp, #0x28
    1210:	mov	w3, #0x2                   	// #2
    1214:	mov	x2, x0
    1218:	ldr	x1, [sp, #80]
    121c:	ldr	x0, [sp, #24]
    1220:	bl	d10 <Perl_sv_2pv_flags@plt>
    1224:	str	x0, [sp, #48]
    1228:	ldr	x0, [sp, #40]
    122c:	ldr	x1, [sp, #48]
    1230:	add	x0, x1, x0
    1234:	str	x0, [sp, #48]
    1238:	b	12b8 <XS_Math__BigInt__FastCalc__new+0x294>
    123c:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    1240:	add	x0, x0, #0xf8
    1244:	ldr	d0, [x0]
    1248:	fcvtzu	d0, d0
    124c:	str	d0, [sp, #56]
    1250:	ldr	x0, [sp, #40]
    1254:	ldr	x1, [sp, #56]
    1258:	cmp	x1, x0
    125c:	b.ls	1268 <XS_Math__BigInt__FastCalc__new+0x244>  // b.plast
    1260:	ldr	x0, [sp, #40]
    1264:	str	x0, [sp, #56]
    1268:	ldr	x0, [sp, #56]
    126c:	neg	x0, x0
    1270:	ldr	x1, [sp, #48]
    1274:	add	x0, x1, x0
    1278:	str	x0, [sp, #48]
    127c:	ldr	x1, [sp, #40]
    1280:	ldr	x0, [sp, #56]
    1284:	sub	x0, x1, x0
    1288:	str	x0, [sp, #40]
    128c:	ldr	x0, [sp, #56]
    1290:	cmp	x0, #0x0
    1294:	b.eq	12b8 <XS_Math__BigInt__FastCalc__new+0x294>  // b.none
    1298:	ldr	x2, [sp, #56]
    129c:	ldr	x1, [sp, #48]
    12a0:	ldr	x0, [sp, #24]
    12a4:	bl	e30 <Perl_newSVpvn@plt>
    12a8:	mov	x2, x0
    12ac:	ldr	x1, [sp, #96]
    12b0:	ldr	x0, [sp, #24]
    12b4:	bl	d70 <Perl_av_push@plt>
    12b8:	ldr	x0, [sp, #40]
    12bc:	cmp	x0, #0x0
    12c0:	b.ne	123c <XS_Math__BigInt__FastCalc__new+0x218>  // b.any
    12c4:	ldr	x1, [sp, #96]
    12c8:	ldr	x0, [sp, #24]
    12cc:	bl	cb0 <Perl_newRV_noinc@plt>
    12d0:	str	x0, [sp, #104]
    12d4:	ldr	x1, [sp, #104]
    12d8:	ldr	x0, [sp, #24]
    12dc:	bl	db0 <Perl_sv_2mortal@plt>
    12e0:	str	x0, [sp, #104]
    12e4:	ldr	x0, [sp, #24]
    12e8:	ldr	x1, [x0, #24]
    12ec:	ldrsw	x0, [sp, #32]
    12f0:	lsl	x0, x0, #3
    12f4:	add	x0, x1, x0
    12f8:	ldr	x1, [sp, #104]
    12fc:	str	x1, [x0]
    1300:	mov	x0, #0x1                   	// #1
    1304:	str	x0, [sp, #112]
    1308:	ldr	x0, [sp, #24]
    130c:	ldr	x1, [x0, #24]
    1310:	ldrsw	x2, [sp, #32]
    1314:	ldr	x0, [sp, #112]
    1318:	add	x0, x2, x0
    131c:	lsl	x0, x0, #3
    1320:	sub	x0, x0, #0x8
    1324:	add	x1, x1, x0
    1328:	ldr	x0, [sp, #24]
    132c:	str	x1, [x0]
    1330:	nop
    1334:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    1338:	ldr	x0, [x0, #4048]
    133c:	ldr	x1, [sp, #120]
    1340:	ldr	x0, [x0]
    1344:	eor	x0, x1, x0
    1348:	cmp	x0, #0x0
    134c:	b.eq	1354 <XS_Math__BigInt__FastCalc__new+0x330>  // b.none
    1350:	bl	d30 <__stack_chk_fail@plt>
    1354:	ldp	x29, x30, [sp], #128
    1358:	ret

000000000000135c <XS_Math__BigInt__FastCalc__copy>:
    135c:	stp	x29, x30, [sp, #-128]!
    1360:	mov	x29, sp
    1364:	str	x19, [sp, #16]
    1368:	str	x0, [sp, #40]
    136c:	str	x1, [sp, #32]
    1370:	ldr	x0, [sp, #40]
    1374:	ldr	x0, [x0]
    1378:	str	x0, [sp, #72]
    137c:	ldr	x0, [sp, #40]
    1380:	bl	fe0 <S_POPMARK>
    1384:	str	w0, [sp, #56]
    1388:	ldr	x0, [sp, #40]
    138c:	ldr	x1, [x0, #24]
    1390:	ldr	w0, [sp, #56]
    1394:	add	w2, w0, #0x1
    1398:	str	w2, [sp, #56]
    139c:	sxtw	x0, w0
    13a0:	lsl	x0, x0, #3
    13a4:	add	x0, x1, x0
    13a8:	str	x0, [sp, #80]
    13ac:	ldr	x1, [sp, #72]
    13b0:	ldr	x0, [sp, #80]
    13b4:	sub	x0, x1, x0
    13b8:	asr	x0, x0, #3
    13bc:	str	w0, [sp, #60]
    13c0:	ldr	w0, [sp, #60]
    13c4:	cmp	w0, #0x2
    13c8:	b.eq	13dc <XS_Math__BigInt__FastCalc__copy+0x80>  // b.none
    13cc:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    13d0:	add	x1, x0, #0xf10
    13d4:	ldr	x0, [sp, #32]
    13d8:	bl	d50 <Perl_croak_xs_usage@plt>
    13dc:	ldr	x0, [sp, #40]
    13e0:	ldr	x1, [x0, #24]
    13e4:	ldrsw	x0, [sp, #56]
    13e8:	add	x0, x0, #0x1
    13ec:	lsl	x0, x0, #3
    13f0:	add	x0, x1, x0
    13f4:	ldr	x0, [x0]
    13f8:	str	x0, [sp, #88]
    13fc:	ldr	x0, [sp, #88]
    1400:	ldr	x0, [x0, #16]
    1404:	str	x0, [sp, #96]
    1408:	ldr	x1, [sp, #96]
    140c:	ldr	x0, [sp, #40]
    1410:	bl	ce0 <Perl_av_len@plt>
    1414:	str	x0, [sp, #64]
    1418:	mov	w1, #0xb                   	// #11
    141c:	ldr	x0, [sp, #40]
    1420:	bl	e00 <Perl_newSV_type@plt>
    1424:	str	x0, [sp, #104]
    1428:	ldr	x0, [sp, #104]
    142c:	mov	x1, x0
    1430:	ldr	x0, [sp, #40]
    1434:	bl	db0 <Perl_sv_2mortal@plt>
    1438:	str	x0, [sp, #112]
    143c:	ldr	x2, [sp, #64]
    1440:	ldr	x1, [sp, #112]
    1444:	ldr	x0, [sp, #40]
    1448:	bl	e40 <Perl_av_extend@plt>
    144c:	b	14f4 <XS_Math__BigInt__FastCalc__copy+0x198>
    1450:	mov	w3, #0x0                   	// #0
    1454:	ldr	x2, [sp, #64]
    1458:	ldr	x1, [sp, #96]
    145c:	ldr	x0, [sp, #40]
    1460:	bl	de0 <Perl_av_fetch@plt>
    1464:	ldr	x0, [x0]
    1468:	ldr	w1, [x0, #12]
    146c:	mov	w0, #0x200                 	// #512
    1470:	movk	w0, #0x20, lsl #16
    1474:	and	w0, w1, w0
    1478:	cmp	w0, #0x200
    147c:	b.ne	14a4 <XS_Math__BigInt__FastCalc__copy+0x148>  // b.any
    1480:	mov	w3, #0x0                   	// #0
    1484:	ldr	x2, [sp, #64]
    1488:	ldr	x1, [sp, #96]
    148c:	ldr	x0, [sp, #40]
    1490:	bl	de0 <Perl_av_fetch@plt>
    1494:	ldr	x0, [x0]
    1498:	ldr	x0, [x0]
    149c:	ldr	d0, [x0, #40]
    14a0:	b	14cc <XS_Math__BigInt__FastCalc__copy+0x170>
    14a4:	mov	w3, #0x0                   	// #0
    14a8:	ldr	x2, [sp, #64]
    14ac:	ldr	x1, [sp, #96]
    14b0:	ldr	x0, [sp, #40]
    14b4:	bl	de0 <Perl_av_fetch@plt>
    14b8:	ldr	x0, [x0]
    14bc:	mov	w2, #0x2                   	// #2
    14c0:	mov	x1, x0
    14c4:	ldr	x0, [sp, #40]
    14c8:	bl	d60 <Perl_sv_2nv_flags@plt>
    14cc:	ldr	x0, [sp, #40]
    14d0:	bl	d00 <Perl_newSVnv@plt>
    14d4:	mov	x3, x0
    14d8:	ldr	x2, [sp, #64]
    14dc:	ldr	x1, [sp, #112]
    14e0:	ldr	x0, [sp, #40]
    14e4:	bl	cf0 <Perl_av_store@plt>
    14e8:	ldr	x0, [sp, #64]
    14ec:	sub	x0, x0, #0x1
    14f0:	str	x0, [sp, #64]
    14f4:	ldr	x0, [sp, #64]
    14f8:	cmp	x0, #0x0
    14fc:	b.ge	1450 <XS_Math__BigInt__FastCalc__copy+0xf4>  // b.tcont
    1500:	ldr	x1, [sp, #112]
    1504:	ldr	x0, [sp, #40]
    1508:	bl	df0 <Perl_newRV@plt>
    150c:	mov	x2, x0
    1510:	ldr	x0, [sp, #40]
    1514:	ldr	x1, [x0, #24]
    1518:	ldrsw	x0, [sp, #56]
    151c:	lsl	x0, x0, #3
    1520:	add	x19, x1, x0
    1524:	mov	x1, x2
    1528:	ldr	x0, [sp, #40]
    152c:	bl	db0 <Perl_sv_2mortal@plt>
    1530:	str	x0, [x19]
    1534:	mov	x0, #0x1                   	// #1
    1538:	str	x0, [sp, #120]
    153c:	ldr	x0, [sp, #40]
    1540:	ldr	x1, [x0, #24]
    1544:	ldrsw	x2, [sp, #56]
    1548:	ldr	x0, [sp, #120]
    154c:	add	x0, x2, x0
    1550:	lsl	x0, x0, #3
    1554:	sub	x0, x0, #0x8
    1558:	add	x1, x1, x0
    155c:	ldr	x0, [sp, #40]
    1560:	str	x1, [x0]
    1564:	nop
    1568:	ldr	x19, [sp, #16]
    156c:	ldp	x29, x30, [sp], #128
    1570:	ret

0000000000001574 <XS_Math__BigInt__FastCalc___strip_zeros>:
    1574:	stp	x29, x30, [sp, #-128]!
    1578:	mov	x29, sp
    157c:	str	x0, [sp, #24]
    1580:	str	x1, [sp, #16]
    1584:	ldr	x0, [sp, #24]
    1588:	ldr	x0, [x0]
    158c:	str	x0, [sp, #56]
    1590:	ldr	x0, [sp, #24]
    1594:	bl	fe0 <S_POPMARK>
    1598:	str	w0, [sp, #40]
    159c:	ldr	x0, [sp, #24]
    15a0:	ldr	x1, [x0, #24]
    15a4:	ldr	w0, [sp, #40]
    15a8:	add	w2, w0, #0x1
    15ac:	str	w2, [sp, #40]
    15b0:	sxtw	x0, w0
    15b4:	lsl	x0, x0, #3
    15b8:	add	x0, x1, x0
    15bc:	str	x0, [sp, #64]
    15c0:	ldr	x1, [sp, #56]
    15c4:	ldr	x0, [sp, #64]
    15c8:	sub	x0, x1, x0
    15cc:	asr	x0, x0, #3
    15d0:	str	w0, [sp, #44]
    15d4:	ldr	w0, [sp, #44]
    15d8:	cmp	w0, #0x1
    15dc:	b.eq	15f0 <XS_Math__BigInt__FastCalc___strip_zeros+0x7c>  // b.none
    15e0:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    15e4:	add	x1, x0, #0xf20
    15e8:	ldr	x0, [sp, #16]
    15ec:	bl	d50 <Perl_croak_xs_usage@plt>
    15f0:	ldr	x0, [sp, #24]
    15f4:	ldr	x1, [x0, #24]
    15f8:	ldrsw	x0, [sp, #40]
    15fc:	lsl	x0, x0, #3
    1600:	add	x0, x1, x0
    1604:	ldr	x0, [x0]
    1608:	str	x0, [sp, #72]
    160c:	ldr	x0, [sp, #72]
    1610:	ldr	x0, [x0, #16]
    1614:	str	x0, [sp, #80]
    1618:	ldr	x1, [sp, #80]
    161c:	ldr	x0, [sp, #24]
    1620:	bl	ce0 <Perl_av_len@plt>
    1624:	str	x0, [sp, #88]
    1628:	ldr	x0, [sp, #24]
    162c:	ldr	x1, [x0, #24]
    1630:	ldrsw	x0, [sp, #40]
    1634:	lsl	x0, x0, #3
    1638:	add	x0, x1, x0
    163c:	ldr	x1, [sp, #72]
    1640:	str	x1, [x0]
    1644:	ldr	x0, [sp, #88]
    1648:	cmn	x0, #0x1
    164c:	b.ne	16a0 <XS_Math__BigInt__FastCalc___strip_zeros+0x12c>  // b.any
    1650:	mov	x1, #0x0                   	// #0
    1654:	ldr	x0, [sp, #24]
    1658:	bl	e10 <Perl_newSViv@plt>
    165c:	mov	x2, x0
    1660:	ldr	x1, [sp, #80]
    1664:	ldr	x0, [sp, #24]
    1668:	bl	d70 <Perl_av_push@plt>
    166c:	mov	x0, #0x1                   	// #1
    1670:	str	x0, [sp, #120]
    1674:	ldr	x0, [sp, #24]
    1678:	ldr	x1, [x0, #24]
    167c:	ldrsw	x2, [sp, #40]
    1680:	ldr	x0, [sp, #120]
    1684:	add	x0, x2, x0
    1688:	lsl	x0, x0, #3
    168c:	sub	x0, x0, #0x8
    1690:	add	x1, x1, x0
    1694:	ldr	x0, [sp, #24]
    1698:	str	x1, [x0]
    169c:	b	17fc <XS_Math__BigInt__FastCalc___strip_zeros+0x288>
    16a0:	ldr	x0, [sp, #88]
    16a4:	cmp	x0, #0x0
    16a8:	b.ne	16e0 <XS_Math__BigInt__FastCalc___strip_zeros+0x16c>  // b.any
    16ac:	mov	x0, #0x1                   	// #1
    16b0:	str	x0, [sp, #112]
    16b4:	ldr	x0, [sp, #24]
    16b8:	ldr	x1, [x0, #24]
    16bc:	ldrsw	x2, [sp, #40]
    16c0:	ldr	x0, [sp, #112]
    16c4:	add	x0, x2, x0
    16c8:	lsl	x0, x0, #3
    16cc:	sub	x0, x0, #0x8
    16d0:	add	x1, x1, x0
    16d4:	ldr	x0, [sp, #24]
    16d8:	str	x1, [x0]
    16dc:	b	17fc <XS_Math__BigInt__FastCalc___strip_zeros+0x288>
    16e0:	ldr	x0, [sp, #88]
    16e4:	str	x0, [sp, #48]
    16e8:	b	1770 <XS_Math__BigInt__FastCalc___strip_zeros+0x1fc>
    16ec:	mov	w3, #0x0                   	// #0
    16f0:	ldr	x2, [sp, #48]
    16f4:	ldr	x1, [sp, #80]
    16f8:	ldr	x0, [sp, #24]
    16fc:	bl	de0 <Perl_av_fetch@plt>
    1700:	ldr	x0, [x0]
    1704:	str	x0, [sp, #96]
    1708:	ldr	x0, [sp, #96]
    170c:	ldr	w1, [x0, #12]
    1710:	mov	w0, #0x200                 	// #512
    1714:	movk	w0, #0x20, lsl #16
    1718:	and	w0, w1, w0
    171c:	cmp	w0, #0x200
    1720:	b.ne	1740 <XS_Math__BigInt__FastCalc___strip_zeros+0x1cc>  // b.any
    1724:	ldr	x0, [sp, #96]
    1728:	ldr	x0, [x0]
    172c:	ldr	d0, [x0, #40]
    1730:	fcmp	d0, #0.0
    1734:	cset	w0, ne  // ne = any
    1738:	and	w0, w0, #0xff
    173c:	b	175c <XS_Math__BigInt__FastCalc___strip_zeros+0x1e8>
    1740:	mov	w2, #0x2                   	// #2
    1744:	ldr	x1, [sp, #96]
    1748:	ldr	x0, [sp, #24]
    174c:	bl	d60 <Perl_sv_2nv_flags@plt>
    1750:	fcmp	d0, #0.0
    1754:	cset	w0, ne  // ne = any
    1758:	and	w0, w0, #0xff
    175c:	cmp	w0, #0x0
    1760:	b.ne	1780 <XS_Math__BigInt__FastCalc___strip_zeros+0x20c>  // b.any
    1764:	ldr	x0, [sp, #48]
    1768:	sub	x0, x0, #0x1
    176c:	str	x0, [sp, #48]
    1770:	ldr	x0, [sp, #48]
    1774:	cmp	x0, #0x0
    1778:	b.gt	16ec <XS_Math__BigInt__FastCalc___strip_zeros+0x178>
    177c:	b	1784 <XS_Math__BigInt__FastCalc___strip_zeros+0x210>
    1780:	nop
    1784:	ldr	x1, [sp, #48]
    1788:	ldr	x0, [sp, #88]
    178c:	cmp	x1, x0
    1790:	b.ge	17c8 <XS_Math__BigInt__FastCalc___strip_zeros+0x254>  // b.tcont
    1794:	ldr	x1, [sp, #88]
    1798:	ldr	x0, [sp, #48]
    179c:	sub	x0, x1, x0
    17a0:	str	x0, [sp, #48]
    17a4:	b	17b4 <XS_Math__BigInt__FastCalc___strip_zeros+0x240>
    17a8:	ldr	x1, [sp, #80]
    17ac:	ldr	x0, [sp, #24]
    17b0:	bl	d80 <Perl_av_pop@plt>
    17b4:	ldr	x0, [sp, #48]
    17b8:	sub	x1, x0, #0x1
    17bc:	str	x1, [sp, #48]
    17c0:	cmp	x0, #0x0
    17c4:	b.gt	17a8 <XS_Math__BigInt__FastCalc___strip_zeros+0x234>
    17c8:	mov	x0, #0x1                   	// #1
    17cc:	str	x0, [sp, #104]
    17d0:	ldr	x0, [sp, #24]
    17d4:	ldr	x1, [x0, #24]
    17d8:	ldrsw	x2, [sp, #40]
    17dc:	ldr	x0, [sp, #104]
    17e0:	add	x0, x2, x0
    17e4:	lsl	x0, x0, #3
    17e8:	sub	x0, x0, #0x8
    17ec:	add	x1, x1, x0
    17f0:	ldr	x0, [sp, #24]
    17f4:	str	x1, [x0]
    17f8:	nop
    17fc:	ldp	x29, x30, [sp], #128
    1800:	ret

0000000000001804 <XS_Math__BigInt__FastCalc__dec>:
    1804:	stp	x29, x30, [sp, #-112]!
    1808:	mov	x29, sp
    180c:	str	x0, [sp, #24]
    1810:	str	x1, [sp, #16]
    1814:	ldr	x0, [sp, #24]
    1818:	ldr	x0, [x0]
    181c:	str	x0, [sp, #48]
    1820:	ldr	x0, [sp, #24]
    1824:	bl	fe0 <S_POPMARK>
    1828:	str	w0, [sp, #32]
    182c:	ldr	x0, [sp, #24]
    1830:	ldr	x1, [x0, #24]
    1834:	ldr	w0, [sp, #32]
    1838:	add	w2, w0, #0x1
    183c:	str	w2, [sp, #32]
    1840:	sxtw	x0, w0
    1844:	lsl	x0, x0, #3
    1848:	add	x0, x1, x0
    184c:	str	x0, [sp, #56]
    1850:	ldr	x1, [sp, #48]
    1854:	ldr	x0, [sp, #56]
    1858:	sub	x0, x1, x0
    185c:	asr	x0, x0, #3
    1860:	str	w0, [sp, #36]
    1864:	ldr	w0, [sp, #36]
    1868:	cmp	w0, #0x2
    186c:	b.eq	1880 <XS_Math__BigInt__FastCalc__dec+0x7c>  // b.none
    1870:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    1874:	add	x1, x0, #0xf10
    1878:	ldr	x0, [sp, #16]
    187c:	bl	d50 <Perl_croak_xs_usage@plt>
    1880:	ldr	x0, [sp, #24]
    1884:	ldr	x1, [x0, #24]
    1888:	ldrsw	x0, [sp, #32]
    188c:	add	x0, x0, #0x1
    1890:	lsl	x0, x0, #3
    1894:	add	x0, x1, x0
    1898:	ldr	x0, [x0]
    189c:	str	x0, [sp, #64]
    18a0:	ldr	x0, [sp, #64]
    18a4:	ldr	x0, [x0, #16]
    18a8:	str	x0, [sp, #72]
    18ac:	ldr	x1, [sp, #72]
    18b0:	ldr	x0, [sp, #24]
    18b4:	bl	ce0 <Perl_av_len@plt>
    18b8:	str	x0, [sp, #80]
    18bc:	ldr	x0, [sp, #24]
    18c0:	ldr	x1, [x0, #24]
    18c4:	ldrsw	x0, [sp, #32]
    18c8:	lsl	x0, x0, #3
    18cc:	add	x0, x1, x0
    18d0:	ldr	x1, [sp, #64]
    18d4:	str	x1, [x0]
    18d8:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    18dc:	add	x0, x0, #0xf0
    18e0:	ldr	d1, [x0]
    18e4:	fmov	d0, #1.000000000000000000e+00
    18e8:	fsub	d0, d1, d0
    18ec:	str	d0, [sp, #88]
    18f0:	str	xzr, [sp, #40]
    18f4:	b	19dc <XS_Math__BigInt__FastCalc__dec+0x1d8>
    18f8:	mov	w3, #0x0                   	// #0
    18fc:	ldr	x2, [sp, #40]
    1900:	ldr	x1, [sp, #72]
    1904:	ldr	x0, [sp, #24]
    1908:	bl	de0 <Perl_av_fetch@plt>
    190c:	ldr	x0, [x0]
    1910:	str	x0, [sp, #96]
    1914:	ldr	x0, [sp, #96]
    1918:	ldr	w1, [x0, #12]
    191c:	mov	w0, #0x200                 	// #512
    1920:	movk	w0, #0x20, lsl #16
    1924:	and	w0, w1, w0
    1928:	cmp	w0, #0x200
    192c:	b.ne	1940 <XS_Math__BigInt__FastCalc__dec+0x13c>  // b.any
    1930:	ldr	x0, [sp, #96]
    1934:	ldr	x0, [x0]
    1938:	ldr	d0, [x0, #40]
    193c:	b	1950 <XS_Math__BigInt__FastCalc__dec+0x14c>
    1940:	mov	w2, #0x2                   	// #2
    1944:	ldr	x1, [sp, #96]
    1948:	ldr	x0, [sp, #24]
    194c:	bl	d60 <Perl_sv_2nv_flags@plt>
    1950:	fmov	d1, #1.000000000000000000e+00
    1954:	fsub	d0, d0, d1
    1958:	ldr	x1, [sp, #96]
    195c:	ldr	x0, [sp, #24]
    1960:	bl	ca0 <Perl_sv_setnv@plt>
    1964:	ldr	x0, [sp, #96]
    1968:	ldr	w1, [x0, #12]
    196c:	mov	w0, #0x200                 	// #512
    1970:	movk	w0, #0x20, lsl #16
    1974:	and	w0, w1, w0
    1978:	cmp	w0, #0x200
    197c:	b.ne	199c <XS_Math__BigInt__FastCalc__dec+0x198>  // b.any
    1980:	ldr	x0, [sp, #96]
    1984:	ldr	x0, [x0]
    1988:	ldr	d0, [x0, #40]
    198c:	fcmpe	d0, #0.0
    1990:	cset	w0, ge  // ge = tcont
    1994:	and	w0, w0, #0xff
    1998:	b	19b8 <XS_Math__BigInt__FastCalc__dec+0x1b4>
    199c:	mov	w2, #0x2                   	// #2
    19a0:	ldr	x1, [sp, #96]
    19a4:	ldr	x0, [sp, #24]
    19a8:	bl	d60 <Perl_sv_2nv_flags@plt>
    19ac:	fcmpe	d0, #0.0
    19b0:	cset	w0, ge  // ge = tcont
    19b4:	and	w0, w0, #0xff
    19b8:	cmp	w0, #0x0
    19bc:	b.ne	19f0 <XS_Math__BigInt__FastCalc__dec+0x1ec>  // b.any
    19c0:	ldr	d0, [sp, #88]
    19c4:	ldr	x1, [sp, #96]
    19c8:	ldr	x0, [sp, #24]
    19cc:	bl	ca0 <Perl_sv_setnv@plt>
    19d0:	ldr	x0, [sp, #40]
    19d4:	add	x0, x0, #0x1
    19d8:	str	x0, [sp, #40]
    19dc:	ldr	x1, [sp, #40]
    19e0:	ldr	x0, [sp, #80]
    19e4:	cmp	x1, x0
    19e8:	b.le	18f8 <XS_Math__BigInt__FastCalc__dec+0xf4>
    19ec:	b	19f4 <XS_Math__BigInt__FastCalc__dec+0x1f0>
    19f0:	nop
    19f4:	ldr	x0, [sp, #80]
    19f8:	cmp	x0, #0x0
    19fc:	b.le	1a84 <XS_Math__BigInt__FastCalc__dec+0x280>
    1a00:	mov	w3, #0x0                   	// #0
    1a04:	ldr	x2, [sp, #80]
    1a08:	ldr	x1, [sp, #72]
    1a0c:	ldr	x0, [sp, #24]
    1a10:	bl	de0 <Perl_av_fetch@plt>
    1a14:	ldr	x0, [x0]
    1a18:	str	x0, [sp, #96]
    1a1c:	ldr	x0, [sp, #96]
    1a20:	ldr	w1, [x0, #12]
    1a24:	mov	w0, #0x100                 	// #256
    1a28:	movk	w0, #0x20, lsl #16
    1a2c:	and	w0, w1, w0
    1a30:	cmp	w0, #0x100
    1a34:	b.ne	1a54 <XS_Math__BigInt__FastCalc__dec+0x250>  // b.any
    1a38:	ldr	x0, [sp, #96]
    1a3c:	ldr	x0, [x0]
    1a40:	ldr	x0, [x0, #32]
    1a44:	cmp	x0, #0x0
    1a48:	cset	w0, eq  // eq = none
    1a4c:	and	w0, w0, #0xff
    1a50:	b	1a70 <XS_Math__BigInt__FastCalc__dec+0x26c>
    1a54:	mov	w2, #0x2                   	// #2
    1a58:	ldr	x1, [sp, #96]
    1a5c:	ldr	x0, [sp, #24]
    1a60:	bl	c90 <Perl_sv_2iv_flags@plt>
    1a64:	cmp	x0, #0x0
    1a68:	cset	w0, eq  // eq = none
    1a6c:	and	w0, w0, #0xff
    1a70:	cmp	w0, #0x0
    1a74:	b.eq	1a84 <XS_Math__BigInt__FastCalc__dec+0x280>  // b.none
    1a78:	ldr	x1, [sp, #72]
    1a7c:	ldr	x0, [sp, #24]
    1a80:	bl	d80 <Perl_av_pop@plt>
    1a84:	mov	x0, #0x1                   	// #1
    1a88:	str	x0, [sp, #104]
    1a8c:	ldr	x0, [sp, #24]
    1a90:	ldr	x1, [x0, #24]
    1a94:	ldrsw	x2, [sp, #32]
    1a98:	ldr	x0, [sp, #104]
    1a9c:	add	x0, x2, x0
    1aa0:	lsl	x0, x0, #3
    1aa4:	sub	x0, x0, #0x8
    1aa8:	add	x1, x1, x0
    1aac:	ldr	x0, [sp, #24]
    1ab0:	str	x1, [x0]
    1ab4:	nop
    1ab8:	ldp	x29, x30, [sp], #112
    1abc:	ret

0000000000001ac0 <XS_Math__BigInt__FastCalc__inc>:
    1ac0:	stp	x29, x30, [sp, #-128]!
    1ac4:	mov	x29, sp
    1ac8:	str	x0, [sp, #24]
    1acc:	str	x1, [sp, #16]
    1ad0:	ldr	x0, [sp, #24]
    1ad4:	ldr	x0, [x0]
    1ad8:	str	x0, [sp, #56]
    1adc:	ldr	x0, [sp, #24]
    1ae0:	bl	fe0 <S_POPMARK>
    1ae4:	str	w0, [sp, #40]
    1ae8:	ldr	x0, [sp, #24]
    1aec:	ldr	x1, [x0, #24]
    1af0:	ldr	w0, [sp, #40]
    1af4:	add	w2, w0, #0x1
    1af8:	str	w2, [sp, #40]
    1afc:	sxtw	x0, w0
    1b00:	lsl	x0, x0, #3
    1b04:	add	x0, x1, x0
    1b08:	str	x0, [sp, #64]
    1b0c:	ldr	x1, [sp, #56]
    1b10:	ldr	x0, [sp, #64]
    1b14:	sub	x0, x1, x0
    1b18:	asr	x0, x0, #3
    1b1c:	str	w0, [sp, #44]
    1b20:	ldr	w0, [sp, #44]
    1b24:	cmp	w0, #0x2
    1b28:	b.eq	1b3c <XS_Math__BigInt__FastCalc__inc+0x7c>  // b.none
    1b2c:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    1b30:	add	x1, x0, #0xf10
    1b34:	ldr	x0, [sp, #16]
    1b38:	bl	d50 <Perl_croak_xs_usage@plt>
    1b3c:	ldr	x0, [sp, #24]
    1b40:	ldr	x1, [x0, #24]
    1b44:	ldrsw	x0, [sp, #40]
    1b48:	add	x0, x0, #0x1
    1b4c:	lsl	x0, x0, #3
    1b50:	add	x0, x1, x0
    1b54:	ldr	x0, [x0]
    1b58:	str	x0, [sp, #72]
    1b5c:	ldr	x0, [sp, #72]
    1b60:	ldr	x0, [x0, #16]
    1b64:	str	x0, [sp, #80]
    1b68:	ldr	x1, [sp, #80]
    1b6c:	ldr	x0, [sp, #24]
    1b70:	bl	ce0 <Perl_av_len@plt>
    1b74:	str	x0, [sp, #88]
    1b78:	ldr	x0, [sp, #24]
    1b7c:	ldr	x1, [x0, #24]
    1b80:	ldrsw	x0, [sp, #40]
    1b84:	lsl	x0, x0, #3
    1b88:	add	x0, x1, x0
    1b8c:	ldr	x1, [sp, #72]
    1b90:	str	x1, [x0]
    1b94:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    1b98:	add	x0, x0, #0xf0
    1b9c:	ldr	d0, [x0]
    1ba0:	str	d0, [sp, #96]
    1ba4:	str	xzr, [sp, #48]
    1ba8:	b	1cb0 <XS_Math__BigInt__FastCalc__inc+0x1f0>
    1bac:	mov	w3, #0x0                   	// #0
    1bb0:	ldr	x2, [sp, #48]
    1bb4:	ldr	x1, [sp, #80]
    1bb8:	ldr	x0, [sp, #24]
    1bbc:	bl	de0 <Perl_av_fetch@plt>
    1bc0:	ldr	x0, [x0]
    1bc4:	str	x0, [sp, #104]
    1bc8:	ldr	x0, [sp, #104]
    1bcc:	ldr	w1, [x0, #12]
    1bd0:	mov	w0, #0x200                 	// #512
    1bd4:	movk	w0, #0x20, lsl #16
    1bd8:	and	w0, w1, w0
    1bdc:	cmp	w0, #0x200
    1be0:	b.ne	1bf4 <XS_Math__BigInt__FastCalc__inc+0x134>  // b.any
    1be4:	ldr	x0, [sp, #104]
    1be8:	ldr	x0, [x0]
    1bec:	ldr	d0, [x0, #40]
    1bf0:	b	1c04 <XS_Math__BigInt__FastCalc__inc+0x144>
    1bf4:	mov	w2, #0x2                   	// #2
    1bf8:	ldr	x1, [sp, #104]
    1bfc:	ldr	x0, [sp, #24]
    1c00:	bl	d60 <Perl_sv_2nv_flags@plt>
    1c04:	fmov	d1, #1.000000000000000000e+00
    1c08:	fadd	d0, d0, d1
    1c0c:	ldr	x1, [sp, #104]
    1c10:	ldr	x0, [sp, #24]
    1c14:	bl	ca0 <Perl_sv_setnv@plt>
    1c18:	ldr	x0, [sp, #104]
    1c1c:	ldr	w1, [x0, #12]
    1c20:	mov	w0, #0x200                 	// #512
    1c24:	movk	w0, #0x20, lsl #16
    1c28:	and	w0, w1, w0
    1c2c:	cmp	w0, #0x200
    1c30:	b.ne	1c44 <XS_Math__BigInt__FastCalc__inc+0x184>  // b.any
    1c34:	ldr	x0, [sp, #104]
    1c38:	ldr	x0, [x0]
    1c3c:	ldr	d0, [x0, #40]
    1c40:	b	1c54 <XS_Math__BigInt__FastCalc__inc+0x194>
    1c44:	mov	w2, #0x2                   	// #2
    1c48:	ldr	x1, [sp, #104]
    1c4c:	ldr	x0, [sp, #24]
    1c50:	bl	d60 <Perl_sv_2nv_flags@plt>
    1c54:	ldr	d1, [sp, #96]
    1c58:	fcmpe	d0, d1
    1c5c:	b.pl	1c94 <XS_Math__BigInt__FastCalc__inc+0x1d4>  // b.nfrst
    1c60:	mov	x0, #0x1                   	// #1
    1c64:	str	x0, [sp, #120]
    1c68:	ldr	x0, [sp, #24]
    1c6c:	ldr	x1, [x0, #24]
    1c70:	ldrsw	x2, [sp, #40]
    1c74:	ldr	x0, [sp, #120]
    1c78:	add	x0, x2, x0
    1c7c:	lsl	x0, x0, #3
    1c80:	sub	x0, x0, #0x8
    1c84:	add	x1, x1, x0
    1c88:	ldr	x0, [sp, #24]
    1c8c:	str	x1, [x0]
    1c90:	b	1d88 <XS_Math__BigInt__FastCalc__inc+0x2c8>
    1c94:	mov	x2, #0x0                   	// #0
    1c98:	ldr	x1, [sp, #104]
    1c9c:	ldr	x0, [sp, #24]
    1ca0:	bl	e20 <Perl_sv_setiv@plt>
    1ca4:	ldr	x0, [sp, #48]
    1ca8:	add	x0, x0, #0x1
    1cac:	str	x0, [sp, #48]
    1cb0:	ldr	x1, [sp, #48]
    1cb4:	ldr	x0, [sp, #88]
    1cb8:	cmp	x1, x0
    1cbc:	b.le	1bac <XS_Math__BigInt__FastCalc__inc+0xec>
    1cc0:	mov	w3, #0x0                   	// #0
    1cc4:	ldr	x2, [sp, #88]
    1cc8:	ldr	x1, [sp, #80]
    1ccc:	ldr	x0, [sp, #24]
    1cd0:	bl	de0 <Perl_av_fetch@plt>
    1cd4:	ldr	x0, [x0]
    1cd8:	str	x0, [sp, #104]
    1cdc:	ldr	x0, [sp, #104]
    1ce0:	ldr	w1, [x0, #12]
    1ce4:	mov	w0, #0x100                 	// #256
    1ce8:	movk	w0, #0x20, lsl #16
    1cec:	and	w0, w1, w0
    1cf0:	cmp	w0, #0x100
    1cf4:	b.ne	1d14 <XS_Math__BigInt__FastCalc__inc+0x254>  // b.any
    1cf8:	ldr	x0, [sp, #104]
    1cfc:	ldr	x0, [x0]
    1d00:	ldr	x0, [x0, #32]
    1d04:	cmp	x0, #0x0
    1d08:	cset	w0, eq  // eq = none
    1d0c:	and	w0, w0, #0xff
    1d10:	b	1d30 <XS_Math__BigInt__FastCalc__inc+0x270>
    1d14:	mov	w2, #0x2                   	// #2
    1d18:	ldr	x1, [sp, #104]
    1d1c:	ldr	x0, [sp, #24]
    1d20:	bl	c90 <Perl_sv_2iv_flags@plt>
    1d24:	cmp	x0, #0x0
    1d28:	cset	w0, eq  // eq = none
    1d2c:	and	w0, w0, #0xff
    1d30:	cmp	w0, #0x0
    1d34:	b.eq	1d54 <XS_Math__BigInt__FastCalc__inc+0x294>  // b.none
    1d38:	mov	x1, #0x1                   	// #1
    1d3c:	ldr	x0, [sp, #24]
    1d40:	bl	e10 <Perl_newSViv@plt>
    1d44:	mov	x2, x0
    1d48:	ldr	x1, [sp, #80]
    1d4c:	ldr	x0, [sp, #24]
    1d50:	bl	d70 <Perl_av_push@plt>
    1d54:	mov	x0, #0x1                   	// #1
    1d58:	str	x0, [sp, #112]
    1d5c:	ldr	x0, [sp, #24]
    1d60:	ldr	x1, [x0, #24]
    1d64:	ldrsw	x2, [sp, #40]
    1d68:	ldr	x0, [sp, #112]
    1d6c:	add	x0, x2, x0
    1d70:	lsl	x0, x0, #3
    1d74:	sub	x0, x0, #0x8
    1d78:	add	x1, x1, x0
    1d7c:	ldr	x0, [sp, #24]
    1d80:	str	x1, [x0]
    1d84:	nop
    1d88:	ldp	x29, x30, [sp], #128
    1d8c:	ret

0000000000001d90 <XS_Math__BigInt__FastCalc__zero>:
    1d90:	stp	x29, x30, [sp, #-112]!
    1d94:	mov	x29, sp
    1d98:	str	x0, [sp, #24]
    1d9c:	str	x1, [sp, #16]
    1da0:	ldr	x0, [sp, #24]
    1da4:	ldr	x0, [x0]
    1da8:	str	x0, [sp, #56]
    1dac:	ldr	x0, [sp, #24]
    1db0:	bl	fe0 <S_POPMARK>
    1db4:	str	w0, [sp, #44]
    1db8:	ldr	x0, [sp, #24]
    1dbc:	ldr	x1, [x0, #24]
    1dc0:	ldr	w0, [sp, #44]
    1dc4:	add	w2, w0, #0x1
    1dc8:	str	w2, [sp, #44]
    1dcc:	sxtw	x0, w0
    1dd0:	lsl	x0, x0, #3
    1dd4:	add	x0, x1, x0
    1dd8:	str	x0, [sp, #64]
    1ddc:	ldr	x1, [sp, #56]
    1de0:	ldr	x0, [sp, #64]
    1de4:	sub	x0, x1, x0
    1de8:	asr	x0, x0, #3
    1dec:	str	w0, [sp, #48]
    1df0:	ldr	x0, [sp, #16]
    1df4:	ldr	x0, [x0]
    1df8:	str	x0, [sp, #72]
    1dfc:	ldr	x0, [sp, #72]
    1e00:	ldr	w0, [x0, #40]
    1e04:	str	w0, [sp, #52]
    1e08:	ldr	w0, [sp, #48]
    1e0c:	cmp	w0, #0x1
    1e10:	b.eq	1e24 <XS_Math__BigInt__FastCalc__zero+0x94>  // b.none
    1e14:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    1e18:	add	x1, x0, #0xf28
    1e1c:	ldr	x0, [sp, #16]
    1e20:	bl	d50 <Perl_croak_xs_usage@plt>
    1e24:	mov	w1, #0xb                   	// #11
    1e28:	ldr	x0, [sp, #24]
    1e2c:	bl	e00 <Perl_newSV_type@plt>
    1e30:	str	x0, [sp, #80]
    1e34:	ldr	x0, [sp, #80]
    1e38:	str	x0, [sp, #88]
    1e3c:	ldrsw	x0, [sp, #52]
    1e40:	mov	x1, x0
    1e44:	ldr	x0, [sp, #24]
    1e48:	bl	e10 <Perl_newSViv@plt>
    1e4c:	mov	x2, x0
    1e50:	ldr	x1, [sp, #88]
    1e54:	ldr	x0, [sp, #24]
    1e58:	bl	d70 <Perl_av_push@plt>
    1e5c:	ldr	x1, [sp, #88]
    1e60:	ldr	x0, [sp, #24]
    1e64:	bl	cb0 <Perl_newRV_noinc@plt>
    1e68:	str	x0, [sp, #96]
    1e6c:	ldr	x1, [sp, #96]
    1e70:	ldr	x0, [sp, #24]
    1e74:	bl	db0 <Perl_sv_2mortal@plt>
    1e78:	str	x0, [sp, #96]
    1e7c:	ldr	x0, [sp, #24]
    1e80:	ldr	x1, [x0, #24]
    1e84:	ldrsw	x0, [sp, #44]
    1e88:	lsl	x0, x0, #3
    1e8c:	add	x0, x1, x0
    1e90:	ldr	x1, [sp, #96]
    1e94:	str	x1, [x0]
    1e98:	mov	x0, #0x1                   	// #1
    1e9c:	str	x0, [sp, #104]
    1ea0:	ldr	x0, [sp, #24]
    1ea4:	ldr	x1, [x0, #24]
    1ea8:	ldrsw	x2, [sp, #44]
    1eac:	ldr	x0, [sp, #104]
    1eb0:	add	x0, x2, x0
    1eb4:	lsl	x0, x0, #3
    1eb8:	sub	x0, x0, #0x8
    1ebc:	add	x1, x1, x0
    1ec0:	ldr	x0, [sp, #24]
    1ec4:	str	x1, [x0]
    1ec8:	nop
    1ecc:	ldp	x29, x30, [sp], #112
    1ed0:	ret

0000000000001ed4 <XS_Math__BigInt__FastCalc__is_even>:
    1ed4:	stp	x29, x30, [sp, #-128]!
    1ed8:	mov	x29, sp
    1edc:	str	x19, [sp, #16]
    1ee0:	str	x0, [sp, #40]
    1ee4:	str	x1, [sp, #32]
    1ee8:	ldr	x0, [sp, #40]
    1eec:	ldr	x0, [x0]
    1ef0:	str	x0, [sp, #72]
    1ef4:	ldr	x0, [sp, #40]
    1ef8:	bl	fe0 <S_POPMARK>
    1efc:	str	w0, [sp, #60]
    1f00:	ldr	x0, [sp, #40]
    1f04:	ldr	x1, [x0, #24]
    1f08:	ldr	w0, [sp, #60]
    1f0c:	add	w2, w0, #0x1
    1f10:	str	w2, [sp, #60]
    1f14:	sxtw	x0, w0
    1f18:	lsl	x0, x0, #3
    1f1c:	add	x0, x1, x0
    1f20:	str	x0, [sp, #80]
    1f24:	ldr	x1, [sp, #72]
    1f28:	ldr	x0, [sp, #80]
    1f2c:	sub	x0, x1, x0
    1f30:	asr	x0, x0, #3
    1f34:	str	w0, [sp, #64]
    1f38:	ldr	x0, [sp, #32]
    1f3c:	ldr	x0, [x0]
    1f40:	str	x0, [sp, #88]
    1f44:	ldr	x0, [sp, #88]
    1f48:	ldr	w0, [x0, #40]
    1f4c:	str	w0, [sp, #68]
    1f50:	ldr	w0, [sp, #64]
    1f54:	cmp	w0, #0x2
    1f58:	b.eq	1f6c <XS_Math__BigInt__FastCalc__is_even+0x98>  // b.none
    1f5c:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    1f60:	add	x1, x0, #0xf10
    1f64:	ldr	x0, [sp, #32]
    1f68:	bl	d50 <Perl_croak_xs_usage@plt>
    1f6c:	ldr	x0, [sp, #40]
    1f70:	ldr	x1, [x0, #24]
    1f74:	ldrsw	x0, [sp, #60]
    1f78:	add	x0, x0, #0x1
    1f7c:	lsl	x0, x0, #3
    1f80:	add	x0, x1, x0
    1f84:	ldr	x0, [x0]
    1f88:	str	x0, [sp, #96]
    1f8c:	ldr	x0, [sp, #96]
    1f90:	ldr	x0, [x0, #16]
    1f94:	str	x0, [sp, #104]
    1f98:	mov	w3, #0x0                   	// #0
    1f9c:	mov	x2, #0x0                   	// #0
    1fa0:	ldr	x1, [sp, #104]
    1fa4:	ldr	x0, [sp, #40]
    1fa8:	bl	de0 <Perl_av_fetch@plt>
    1fac:	ldr	x0, [x0]
    1fb0:	str	x0, [sp, #112]
    1fb4:	ldr	x0, [sp, #112]
    1fb8:	ldr	w1, [x0, #12]
    1fbc:	mov	w0, #0x100                 	// #256
    1fc0:	movk	w0, #0x20, lsl #16
    1fc4:	and	w0, w1, w0
    1fc8:	cmp	w0, #0x100
    1fcc:	b.ne	1fe4 <XS_Math__BigInt__FastCalc__is_even+0x110>  // b.any
    1fd0:	ldr	x0, [sp, #112]
    1fd4:	ldr	x0, [x0]
    1fd8:	ldr	x0, [x0, #32]
    1fdc:	and	x0, x0, #0x1
    1fe0:	b	1ff8 <XS_Math__BigInt__FastCalc__is_even+0x124>
    1fe4:	mov	w2, #0x2                   	// #2
    1fe8:	ldr	x1, [sp, #112]
    1fec:	ldr	x0, [sp, #40]
    1ff0:	bl	c90 <Perl_sv_2iv_flags@plt>
    1ff4:	and	x0, x0, #0x1
    1ff8:	ldrsw	x1, [sp, #68]
    1ffc:	cmp	x0, x1
    2000:	b.ne	2010 <XS_Math__BigInt__FastCalc__is_even+0x13c>  // b.any
    2004:	ldr	x0, [sp, #40]
    2008:	add	x0, x0, #0x138
    200c:	b	2018 <XS_Math__BigInt__FastCalc__is_even+0x144>
    2010:	ldr	x0, [sp, #40]
    2014:	add	x0, x0, #0x168
    2018:	ldr	x1, [sp, #40]
    201c:	ldr	x2, [x1, #24]
    2020:	ldrsw	x1, [sp, #60]
    2024:	lsl	x1, x1, #3
    2028:	add	x19, x2, x1
    202c:	mov	x1, x0
    2030:	ldr	x0, [sp, #40]
    2034:	bl	db0 <Perl_sv_2mortal@plt>
    2038:	str	x0, [x19]
    203c:	mov	x0, #0x1                   	// #1
    2040:	str	x0, [sp, #120]
    2044:	ldr	x0, [sp, #40]
    2048:	ldr	x1, [x0, #24]
    204c:	ldrsw	x2, [sp, #60]
    2050:	ldr	x0, [sp, #120]
    2054:	add	x0, x2, x0
    2058:	lsl	x0, x0, #3
    205c:	sub	x0, x0, #0x8
    2060:	add	x1, x1, x0
    2064:	ldr	x0, [sp, #40]
    2068:	str	x1, [x0]
    206c:	nop
    2070:	ldr	x19, [sp, #16]
    2074:	ldp	x29, x30, [sp], #128
    2078:	ret

000000000000207c <XS_Math__BigInt__FastCalc__is_zero>:
    207c:	stp	x29, x30, [sp, #-112]!
    2080:	mov	x29, sp
    2084:	str	x0, [sp, #24]
    2088:	str	x1, [sp, #16]
    208c:	ldr	x0, [sp, #24]
    2090:	ldr	x0, [x0]
    2094:	str	x0, [sp, #56]
    2098:	ldr	x0, [sp, #24]
    209c:	bl	fe0 <S_POPMARK>
    20a0:	str	w0, [sp, #44]
    20a4:	ldr	x0, [sp, #24]
    20a8:	ldr	x1, [x0, #24]
    20ac:	ldr	w0, [sp, #44]
    20b0:	add	w2, w0, #0x1
    20b4:	str	w2, [sp, #44]
    20b8:	sxtw	x0, w0
    20bc:	lsl	x0, x0, #3
    20c0:	add	x0, x1, x0
    20c4:	str	x0, [sp, #64]
    20c8:	ldr	x1, [sp, #56]
    20cc:	ldr	x0, [sp, #64]
    20d0:	sub	x0, x1, x0
    20d4:	asr	x0, x0, #3
    20d8:	str	w0, [sp, #48]
    20dc:	ldr	x0, [sp, #16]
    20e0:	ldr	x0, [x0]
    20e4:	str	x0, [sp, #72]
    20e8:	ldr	x0, [sp, #72]
    20ec:	ldr	w0, [x0, #40]
    20f0:	str	w0, [sp, #52]
    20f4:	ldr	w0, [sp, #48]
    20f8:	cmp	w0, #0x2
    20fc:	b.eq	2110 <XS_Math__BigInt__FastCalc__is_zero+0x94>  // b.none
    2100:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2104:	add	x1, x0, #0xf10
    2108:	ldr	x0, [sp, #16]
    210c:	bl	d50 <Perl_croak_xs_usage@plt>
    2110:	ldr	x0, [sp, #24]
    2114:	ldr	x1, [x0, #24]
    2118:	ldrsw	x0, [sp, #44]
    211c:	add	x0, x0, #0x1
    2120:	lsl	x0, x0, #3
    2124:	add	x0, x1, x0
    2128:	ldr	x0, [x0]
    212c:	str	x0, [sp, #80]
    2130:	ldr	x0, [sp, #80]
    2134:	ldr	x0, [x0, #16]
    2138:	str	x0, [sp, #88]
    213c:	ldr	x1, [sp, #88]
    2140:	ldr	x0, [sp, #24]
    2144:	bl	ce0 <Perl_av_len@plt>
    2148:	cmp	x0, #0x0
    214c:	b.eq	2174 <XS_Math__BigInt__FastCalc__is_zero+0xf8>  // b.none
    2150:	ldr	x0, [sp, #24]
    2154:	ldr	x1, [x0, #24]
    2158:	ldrsw	x0, [sp, #44]
    215c:	lsl	x0, x0, #3
    2160:	add	x0, x1, x0
    2164:	ldr	x1, [sp, #24]
    2168:	add	x1, x1, #0x168
    216c:	str	x1, [x0]
    2170:	b	2204 <XS_Math__BigInt__FastCalc__is_zero+0x188>
    2174:	mov	w3, #0x0                   	// #0
    2178:	mov	x2, #0x0                   	// #0
    217c:	ldr	x1, [sp, #88]
    2180:	ldr	x0, [sp, #24]
    2184:	bl	de0 <Perl_av_fetch@plt>
    2188:	ldr	x0, [x0]
    218c:	str	x0, [sp, #96]
    2190:	ldr	x0, [sp, #96]
    2194:	ldr	w1, [x0, #12]
    2198:	mov	w0, #0x100                 	// #256
    219c:	movk	w0, #0x20, lsl #16
    21a0:	and	w0, w1, w0
    21a4:	cmp	w0, #0x100
    21a8:	b.ne	21bc <XS_Math__BigInt__FastCalc__is_zero+0x140>  // b.any
    21ac:	ldr	x0, [sp, #96]
    21b0:	ldr	x0, [x0]
    21b4:	ldr	x0, [x0, #32]
    21b8:	b	21cc <XS_Math__BigInt__FastCalc__is_zero+0x150>
    21bc:	mov	w2, #0x2                   	// #2
    21c0:	ldr	x1, [sp, #96]
    21c4:	ldr	x0, [sp, #24]
    21c8:	bl	c90 <Perl_sv_2iv_flags@plt>
    21cc:	ldrsw	x1, [sp, #52]
    21d0:	cmp	x0, x1
    21d4:	b.ne	21e4 <XS_Math__BigInt__FastCalc__is_zero+0x168>  // b.any
    21d8:	ldr	x0, [sp, #24]
    21dc:	add	x0, x0, #0x138
    21e0:	b	21ec <XS_Math__BigInt__FastCalc__is_zero+0x170>
    21e4:	ldr	x0, [sp, #24]
    21e8:	add	x0, x0, #0x168
    21ec:	ldr	x1, [sp, #24]
    21f0:	ldr	x2, [x1, #24]
    21f4:	ldrsw	x1, [sp, #44]
    21f8:	lsl	x1, x1, #3
    21fc:	add	x1, x2, x1
    2200:	str	x0, [x1]
    2204:	mov	x0, #0x1                   	// #1
    2208:	str	x0, [sp, #104]
    220c:	ldr	x0, [sp, #24]
    2210:	ldr	x1, [x0, #24]
    2214:	ldrsw	x2, [sp, #44]
    2218:	ldr	x0, [sp, #104]
    221c:	add	x0, x2, x0
    2220:	lsl	x0, x0, #3
    2224:	sub	x0, x0, #0x8
    2228:	add	x1, x1, x0
    222c:	ldr	x0, [sp, #24]
    2230:	str	x1, [x0]
    2234:	nop
    2238:	ldp	x29, x30, [sp], #112
    223c:	ret

0000000000002240 <XS_Math__BigInt__FastCalc__len>:
    2240:	stp	x29, x30, [sp, #-128]!
    2244:	mov	x29, sp
    2248:	str	x19, [sp, #16]
    224c:	str	x0, [sp, #40]
    2250:	str	x1, [sp, #32]
    2254:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    2258:	ldr	x0, [x0, #4048]
    225c:	ldr	x1, [x0]
    2260:	str	x1, [sp, #120]
    2264:	mov	x1, #0x0                   	// #0
    2268:	ldr	x0, [sp, #40]
    226c:	ldr	x0, [x0]
    2270:	str	x0, [sp, #64]
    2274:	ldr	x0, [sp, #40]
    2278:	bl	fe0 <S_POPMARK>
    227c:	str	w0, [sp, #48]
    2280:	ldr	x0, [sp, #40]
    2284:	ldr	x1, [x0, #24]
    2288:	ldr	w0, [sp, #48]
    228c:	add	w2, w0, #0x1
    2290:	str	w2, [sp, #48]
    2294:	sxtw	x0, w0
    2298:	lsl	x0, x0, #3
    229c:	add	x0, x1, x0
    22a0:	str	x0, [sp, #72]
    22a4:	ldr	x1, [sp, #64]
    22a8:	ldr	x0, [sp, #72]
    22ac:	sub	x0, x1, x0
    22b0:	asr	x0, x0, #3
    22b4:	str	w0, [sp, #52]
    22b8:	ldr	w0, [sp, #52]
    22bc:	cmp	w0, #0x2
    22c0:	b.eq	22d4 <XS_Math__BigInt__FastCalc__len+0x94>  // b.none
    22c4:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    22c8:	add	x1, x0, #0xf10
    22cc:	ldr	x0, [sp, #32]
    22d0:	bl	d50 <Perl_croak_xs_usage@plt>
    22d4:	ldr	x0, [sp, #40]
    22d8:	ldr	x1, [x0, #24]
    22dc:	ldrsw	x0, [sp, #48]
    22e0:	add	x0, x0, #0x1
    22e4:	lsl	x0, x0, #3
    22e8:	add	x0, x1, x0
    22ec:	ldr	x0, [x0]
    22f0:	str	x0, [sp, #80]
    22f4:	ldr	x0, [sp, #80]
    22f8:	ldr	x0, [x0, #16]
    22fc:	str	x0, [sp, #88]
    2300:	ldr	x1, [sp, #88]
    2304:	ldr	x0, [sp, #40]
    2308:	bl	ce0 <Perl_av_len@plt>
    230c:	str	x0, [sp, #96]
    2310:	mov	w3, #0x0                   	// #0
    2314:	ldr	x2, [sp, #96]
    2318:	ldr	x1, [sp, #88]
    231c:	ldr	x0, [sp, #40]
    2320:	bl	de0 <Perl_av_fetch@plt>
    2324:	ldr	x0, [x0]
    2328:	str	x0, [sp, #104]
    232c:	ldr	x0, [sp, #104]
    2330:	ldr	w1, [x0, #12]
    2334:	mov	w0, #0x400                 	// #1024
    2338:	movk	w0, #0x20, lsl #16
    233c:	and	w0, w1, w0
    2340:	cmp	w0, #0x400
    2344:	b.ne	235c <XS_Math__BigInt__FastCalc__len+0x11c>  // b.any
    2348:	ldr	x0, [sp, #104]
    234c:	ldr	x0, [x0]
    2350:	ldr	x0, [x0, #16]
    2354:	str	x0, [sp, #56]
    2358:	b	2374 <XS_Math__BigInt__FastCalc__len+0x134>
    235c:	add	x0, sp, #0x38
    2360:	mov	w3, #0x2                   	// #2
    2364:	mov	x2, x0
    2368:	ldr	x1, [sp, #104]
    236c:	ldr	x0, [sp, #40]
    2370:	bl	d10 <Perl_sv_2pv_flags@plt>
    2374:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    2378:	add	x0, x0, #0xf8
    237c:	ldr	d0, [x0]
    2380:	fcvtzs	x1, d0
    2384:	ldr	x0, [sp, #96]
    2388:	mul	x0, x1, x0
    238c:	mov	x1, x0
    2390:	ldr	x0, [sp, #56]
    2394:	add	x0, x1, x0
    2398:	str	x0, [sp, #56]
    239c:	ldr	x0, [sp, #56]
    23a0:	mov	x1, x0
    23a4:	ldr	x0, [sp, #40]
    23a8:	bl	e10 <Perl_newSViv@plt>
    23ac:	mov	x2, x0
    23b0:	ldr	x0, [sp, #40]
    23b4:	ldr	x1, [x0, #24]
    23b8:	ldrsw	x0, [sp, #48]
    23bc:	lsl	x0, x0, #3
    23c0:	add	x19, x1, x0
    23c4:	mov	x1, x2
    23c8:	ldr	x0, [sp, #40]
    23cc:	bl	db0 <Perl_sv_2mortal@plt>
    23d0:	str	x0, [x19]
    23d4:	mov	x0, #0x1                   	// #1
    23d8:	str	x0, [sp, #112]
    23dc:	ldr	x0, [sp, #40]
    23e0:	ldr	x1, [x0, #24]
    23e4:	ldrsw	x2, [sp, #48]
    23e8:	ldr	x0, [sp, #112]
    23ec:	add	x0, x2, x0
    23f0:	lsl	x0, x0, #3
    23f4:	sub	x0, x0, #0x8
    23f8:	add	x1, x1, x0
    23fc:	ldr	x0, [sp, #40]
    2400:	str	x1, [x0]
    2404:	nop
    2408:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    240c:	ldr	x0, [x0, #4048]
    2410:	ldr	x1, [sp, #120]
    2414:	ldr	x0, [x0]
    2418:	eor	x0, x1, x0
    241c:	cmp	x0, #0x0
    2420:	b.eq	2428 <XS_Math__BigInt__FastCalc__len+0x1e8>  // b.none
    2424:	bl	d30 <__stack_chk_fail@plt>
    2428:	ldr	x19, [sp, #16]
    242c:	ldp	x29, x30, [sp], #128
    2430:	ret

0000000000002434 <XS_Math__BigInt__FastCalc__acmp>:
    2434:	stp	x29, x30, [sp, #-240]!
    2438:	mov	x29, sp
    243c:	str	x19, [sp, #16]
    2440:	str	d8, [sp, #24]
    2444:	str	x0, [sp, #40]
    2448:	str	x1, [sp, #32]
    244c:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    2450:	ldr	x0, [x0, #4048]
    2454:	ldr	x1, [x0]
    2458:	str	x1, [sp, #232]
    245c:	mov	x1, #0x0                   	// #0
    2460:	ldr	x0, [sp, #40]
    2464:	ldr	x0, [x0]
    2468:	str	x0, [sp, #88]
    246c:	ldr	x0, [sp, #40]
    2470:	bl	fe0 <S_POPMARK>
    2474:	str	w0, [sp, #48]
    2478:	ldr	x0, [sp, #40]
    247c:	ldr	x1, [x0, #24]
    2480:	ldr	w0, [sp, #48]
    2484:	add	w2, w0, #0x1
    2488:	str	w2, [sp, #48]
    248c:	sxtw	x0, w0
    2490:	lsl	x0, x0, #3
    2494:	add	x0, x1, x0
    2498:	str	x0, [sp, #96]
    249c:	ldr	x1, [sp, #88]
    24a0:	ldr	x0, [sp, #96]
    24a4:	sub	x0, x1, x0
    24a8:	asr	x0, x0, #3
    24ac:	str	w0, [sp, #52]
    24b0:	ldr	w0, [sp, #52]
    24b4:	cmp	w0, #0x3
    24b8:	b.eq	24cc <XS_Math__BigInt__FastCalc__acmp+0x98>  // b.none
    24bc:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    24c0:	add	x1, x0, #0xf30
    24c4:	ldr	x0, [sp, #32]
    24c8:	bl	d50 <Perl_croak_xs_usage@plt>
    24cc:	ldr	x0, [sp, #40]
    24d0:	ldr	x1, [x0, #24]
    24d4:	ldrsw	x0, [sp, #48]
    24d8:	add	x0, x0, #0x1
    24dc:	lsl	x0, x0, #3
    24e0:	add	x0, x1, x0
    24e4:	ldr	x0, [x0]
    24e8:	str	x0, [sp, #104]
    24ec:	ldr	x0, [sp, #40]
    24f0:	ldr	x1, [x0, #24]
    24f4:	ldrsw	x0, [sp, #48]
    24f8:	add	x0, x0, #0x2
    24fc:	lsl	x0, x0, #3
    2500:	add	x0, x1, x0
    2504:	ldr	x0, [x0]
    2508:	str	x0, [sp, #112]
    250c:	ldr	x0, [sp, #104]
    2510:	ldr	x0, [x0, #16]
    2514:	str	x0, [sp, #120]
    2518:	ldr	x0, [sp, #112]
    251c:	ldr	x0, [x0, #16]
    2520:	str	x0, [sp, #128]
    2524:	ldr	x1, [sp, #120]
    2528:	ldr	x0, [sp, #40]
    252c:	bl	ce0 <Perl_av_len@plt>
    2530:	str	x0, [sp, #72]
    2534:	ldr	x1, [sp, #128]
    2538:	ldr	x0, [sp, #40]
    253c:	bl	ce0 <Perl_av_len@plt>
    2540:	str	x0, [sp, #136]
    2544:	ldr	x1, [sp, #72]
    2548:	ldr	x0, [sp, #136]
    254c:	sub	x0, x1, x0
    2550:	str	x0, [sp, #144]
    2554:	ldr	x0, [sp, #144]
    2558:	cmp	x0, #0x0
    255c:	b.le	25c8 <XS_Math__BigInt__FastCalc__acmp+0x194>
    2560:	mov	x1, #0x1                   	// #1
    2564:	ldr	x0, [sp, #40]
    2568:	bl	e10 <Perl_newSViv@plt>
    256c:	mov	x2, x0
    2570:	ldr	x0, [sp, #40]
    2574:	ldr	x1, [x0, #24]
    2578:	ldrsw	x0, [sp, #48]
    257c:	lsl	x0, x0, #3
    2580:	add	x19, x1, x0
    2584:	mov	x1, x2
    2588:	ldr	x0, [sp, #40]
    258c:	bl	db0 <Perl_sv_2mortal@plt>
    2590:	str	x0, [x19]
    2594:	mov	x0, #0x1                   	// #1
    2598:	str	x0, [sp, #224]
    259c:	ldr	x0, [sp, #40]
    25a0:	ldr	x1, [x0, #24]
    25a4:	ldrsw	x2, [sp, #48]
    25a8:	ldr	x0, [sp, #224]
    25ac:	add	x0, x2, x0
    25b0:	lsl	x0, x0, #3
    25b4:	sub	x0, x0, #0x8
    25b8:	add	x1, x1, x0
    25bc:	ldr	x0, [sp, #40]
    25c0:	str	x1, [x0]
    25c4:	b	2a40 <XS_Math__BigInt__FastCalc__acmp+0x60c>
    25c8:	ldr	x0, [sp, #144]
    25cc:	cmp	x0, #0x0
    25d0:	b.ge	263c <XS_Math__BigInt__FastCalc__acmp+0x208>  // b.tcont
    25d4:	mov	x1, #0xffffffffffffffff    	// #-1
    25d8:	ldr	x0, [sp, #40]
    25dc:	bl	e10 <Perl_newSViv@plt>
    25e0:	mov	x2, x0
    25e4:	ldr	x0, [sp, #40]
    25e8:	ldr	x1, [x0, #24]
    25ec:	ldrsw	x0, [sp, #48]
    25f0:	lsl	x0, x0, #3
    25f4:	add	x19, x1, x0
    25f8:	mov	x1, x2
    25fc:	ldr	x0, [sp, #40]
    2600:	bl	db0 <Perl_sv_2mortal@plt>
    2604:	str	x0, [x19]
    2608:	mov	x0, #0x1                   	// #1
    260c:	str	x0, [sp, #216]
    2610:	ldr	x0, [sp, #40]
    2614:	ldr	x1, [x0, #24]
    2618:	ldrsw	x2, [sp, #48]
    261c:	ldr	x0, [sp, #216]
    2620:	add	x0, x2, x0
    2624:	lsl	x0, x0, #3
    2628:	sub	x0, x0, #0x8
    262c:	add	x1, x1, x0
    2630:	ldr	x0, [sp, #40]
    2634:	str	x1, [x0]
    2638:	b	2a40 <XS_Math__BigInt__FastCalc__acmp+0x60c>
    263c:	mov	w3, #0x0                   	// #0
    2640:	ldr	x2, [sp, #72]
    2644:	ldr	x1, [sp, #120]
    2648:	ldr	x0, [sp, #40]
    264c:	bl	de0 <Perl_av_fetch@plt>
    2650:	ldr	x0, [x0]
    2654:	str	x0, [sp, #152]
    2658:	mov	w3, #0x0                   	// #0
    265c:	ldr	x2, [sp, #72]
    2660:	ldr	x1, [sp, #128]
    2664:	ldr	x0, [sp, #40]
    2668:	bl	de0 <Perl_av_fetch@plt>
    266c:	ldr	x0, [x0]
    2670:	str	x0, [sp, #160]
    2674:	ldr	x0, [sp, #152]
    2678:	ldr	w1, [x0, #12]
    267c:	mov	w0, #0x400                 	// #1024
    2680:	movk	w0, #0x20, lsl #16
    2684:	and	w0, w1, w0
    2688:	cmp	w0, #0x400
    268c:	b.ne	26a4 <XS_Math__BigInt__FastCalc__acmp+0x270>  // b.any
    2690:	ldr	x0, [sp, #152]
    2694:	ldr	x0, [x0]
    2698:	ldr	x0, [x0, #16]
    269c:	str	x0, [sp, #56]
    26a0:	b	26bc <XS_Math__BigInt__FastCalc__acmp+0x288>
    26a4:	add	x0, sp, #0x38
    26a8:	mov	w3, #0x2                   	// #2
    26ac:	mov	x2, x0
    26b0:	ldr	x1, [sp, #152]
    26b4:	ldr	x0, [sp, #40]
    26b8:	bl	d10 <Perl_sv_2pv_flags@plt>
    26bc:	ldr	x0, [sp, #160]
    26c0:	ldr	w1, [x0, #12]
    26c4:	mov	w0, #0x400                 	// #1024
    26c8:	movk	w0, #0x20, lsl #16
    26cc:	and	w0, w1, w0
    26d0:	cmp	w0, #0x400
    26d4:	b.ne	26ec <XS_Math__BigInt__FastCalc__acmp+0x2b8>  // b.any
    26d8:	ldr	x0, [sp, #160]
    26dc:	ldr	x0, [x0]
    26e0:	ldr	x0, [x0, #16]
    26e4:	str	x0, [sp, #64]
    26e8:	b	2704 <XS_Math__BigInt__FastCalc__acmp+0x2d0>
    26ec:	add	x0, sp, #0x40
    26f0:	mov	w3, #0x2                   	// #2
    26f4:	mov	x2, x0
    26f8:	ldr	x1, [sp, #160]
    26fc:	ldr	x0, [sp, #40]
    2700:	bl	d10 <Perl_sv_2pv_flags@plt>
    2704:	ldr	x0, [sp, #56]
    2708:	mov	x1, x0
    270c:	ldr	x0, [sp, #64]
    2710:	sub	x0, x1, x0
    2714:	str	x0, [sp, #168]
    2718:	ldr	x0, [sp, #168]
    271c:	cmp	x0, #0x0
    2720:	b.le	278c <XS_Math__BigInt__FastCalc__acmp+0x358>
    2724:	mov	x1, #0x1                   	// #1
    2728:	ldr	x0, [sp, #40]
    272c:	bl	e10 <Perl_newSViv@plt>
    2730:	mov	x2, x0
    2734:	ldr	x0, [sp, #40]
    2738:	ldr	x1, [x0, #24]
    273c:	ldrsw	x0, [sp, #48]
    2740:	lsl	x0, x0, #3
    2744:	add	x19, x1, x0
    2748:	mov	x1, x2
    274c:	ldr	x0, [sp, #40]
    2750:	bl	db0 <Perl_sv_2mortal@plt>
    2754:	str	x0, [x19]
    2758:	mov	x0, #0x1                   	// #1
    275c:	str	x0, [sp, #208]
    2760:	ldr	x0, [sp, #40]
    2764:	ldr	x1, [x0, #24]
    2768:	ldrsw	x2, [sp, #48]
    276c:	ldr	x0, [sp, #208]
    2770:	add	x0, x2, x0
    2774:	lsl	x0, x0, #3
    2778:	sub	x0, x0, #0x8
    277c:	add	x1, x1, x0
    2780:	ldr	x0, [sp, #40]
    2784:	str	x1, [x0]
    2788:	b	2a40 <XS_Math__BigInt__FastCalc__acmp+0x60c>
    278c:	ldr	x0, [sp, #168]
    2790:	cmp	x0, #0x0
    2794:	b.ge	2800 <XS_Math__BigInt__FastCalc__acmp+0x3cc>  // b.tcont
    2798:	mov	x1, #0xffffffffffffffff    	// #-1
    279c:	ldr	x0, [sp, #40]
    27a0:	bl	e10 <Perl_newSViv@plt>
    27a4:	mov	x2, x0
    27a8:	ldr	x0, [sp, #40]
    27ac:	ldr	x1, [x0, #24]
    27b0:	ldrsw	x0, [sp, #48]
    27b4:	lsl	x0, x0, #3
    27b8:	add	x19, x1, x0
    27bc:	mov	x1, x2
    27c0:	ldr	x0, [sp, #40]
    27c4:	bl	db0 <Perl_sv_2mortal@plt>
    27c8:	str	x0, [x19]
    27cc:	mov	x0, #0x1                   	// #1
    27d0:	str	x0, [sp, #200]
    27d4:	ldr	x0, [sp, #40]
    27d8:	ldr	x1, [x0, #24]
    27dc:	ldrsw	x2, [sp, #48]
    27e0:	ldr	x0, [sp, #200]
    27e4:	add	x0, x2, x0
    27e8:	lsl	x0, x0, #3
    27ec:	sub	x0, x0, #0x8
    27f0:	add	x1, x1, x0
    27f4:	ldr	x0, [sp, #40]
    27f8:	str	x1, [x0]
    27fc:	b	2a40 <XS_Math__BigInt__FastCalc__acmp+0x60c>
    2800:	str	xzr, [sp, #80]
    2804:	b	28dc <XS_Math__BigInt__FastCalc__acmp+0x4a8>
    2808:	mov	w3, #0x0                   	// #0
    280c:	ldr	x2, [sp, #72]
    2810:	ldr	x1, [sp, #120]
    2814:	ldr	x0, [sp, #40]
    2818:	bl	de0 <Perl_av_fetch@plt>
    281c:	ldr	x0, [x0]
    2820:	str	x0, [sp, #152]
    2824:	mov	w3, #0x0                   	// #0
    2828:	ldr	x2, [sp, #72]
    282c:	ldr	x1, [sp, #128]
    2830:	ldr	x0, [sp, #40]
    2834:	bl	de0 <Perl_av_fetch@plt>
    2838:	ldr	x0, [x0]
    283c:	str	x0, [sp, #160]
    2840:	ldr	x0, [sp, #152]
    2844:	ldr	w1, [x0, #12]
    2848:	mov	w0, #0x200                 	// #512
    284c:	movk	w0, #0x20, lsl #16
    2850:	and	w0, w1, w0
    2854:	cmp	w0, #0x200
    2858:	b.ne	286c <XS_Math__BigInt__FastCalc__acmp+0x438>  // b.any
    285c:	ldr	x0, [sp, #152]
    2860:	ldr	x0, [x0]
    2864:	ldr	d8, [x0, #40]
    2868:	b	2880 <XS_Math__BigInt__FastCalc__acmp+0x44c>
    286c:	mov	w2, #0x2                   	// #2
    2870:	ldr	x1, [sp, #152]
    2874:	ldr	x0, [sp, #40]
    2878:	bl	d60 <Perl_sv_2nv_flags@plt>
    287c:	fmov	d8, d0
    2880:	ldr	x0, [sp, #160]
    2884:	ldr	w1, [x0, #12]
    2888:	mov	w0, #0x200                 	// #512
    288c:	movk	w0, #0x20, lsl #16
    2890:	and	w0, w1, w0
    2894:	cmp	w0, #0x200
    2898:	b.ne	28ac <XS_Math__BigInt__FastCalc__acmp+0x478>  // b.any
    289c:	ldr	x0, [sp, #160]
    28a0:	ldr	x0, [x0]
    28a4:	ldr	d0, [x0, #40]
    28a8:	b	28bc <XS_Math__BigInt__FastCalc__acmp+0x488>
    28ac:	mov	w2, #0x2                   	// #2
    28b0:	ldr	x1, [sp, #160]
    28b4:	ldr	x0, [sp, #40]
    28b8:	bl	d60 <Perl_sv_2nv_flags@plt>
    28bc:	fsub	d0, d8, d0
    28c0:	str	d0, [sp, #80]
    28c4:	ldr	d0, [sp, #80]
    28c8:	fcmp	d0, #0.0
    28cc:	b.ne	28ec <XS_Math__BigInt__FastCalc__acmp+0x4b8>  // b.any
    28d0:	ldr	x0, [sp, #72]
    28d4:	sub	x0, x0, #0x1
    28d8:	str	x0, [sp, #72]
    28dc:	ldr	x0, [sp, #72]
    28e0:	cmp	x0, #0x0
    28e4:	b.ge	2808 <XS_Math__BigInt__FastCalc__acmp+0x3d4>  // b.tcont
    28e8:	b	28f0 <XS_Math__BigInt__FastCalc__acmp+0x4bc>
    28ec:	nop
    28f0:	ldr	d0, [sp, #80]
    28f4:	fcmpe	d0, #0.0
    28f8:	b.le	2964 <XS_Math__BigInt__FastCalc__acmp+0x530>
    28fc:	mov	x1, #0x1                   	// #1
    2900:	ldr	x0, [sp, #40]
    2904:	bl	e10 <Perl_newSViv@plt>
    2908:	mov	x2, x0
    290c:	ldr	x0, [sp, #40]
    2910:	ldr	x1, [x0, #24]
    2914:	ldrsw	x0, [sp, #48]
    2918:	lsl	x0, x0, #3
    291c:	add	x19, x1, x0
    2920:	mov	x1, x2
    2924:	ldr	x0, [sp, #40]
    2928:	bl	db0 <Perl_sv_2mortal@plt>
    292c:	str	x0, [x19]
    2930:	mov	x0, #0x1                   	// #1
    2934:	str	x0, [sp, #192]
    2938:	ldr	x0, [sp, #40]
    293c:	ldr	x1, [x0, #24]
    2940:	ldrsw	x2, [sp, #48]
    2944:	ldr	x0, [sp, #192]
    2948:	add	x0, x2, x0
    294c:	lsl	x0, x0, #3
    2950:	sub	x0, x0, #0x8
    2954:	add	x1, x1, x0
    2958:	ldr	x0, [sp, #40]
    295c:	str	x1, [x0]
    2960:	b	2a40 <XS_Math__BigInt__FastCalc__acmp+0x60c>
    2964:	ldr	d0, [sp, #80]
    2968:	fcmpe	d0, #0.0
    296c:	b.pl	29d8 <XS_Math__BigInt__FastCalc__acmp+0x5a4>  // b.nfrst
    2970:	mov	x1, #0xffffffffffffffff    	// #-1
    2974:	ldr	x0, [sp, #40]
    2978:	bl	e10 <Perl_newSViv@plt>
    297c:	mov	x2, x0
    2980:	ldr	x0, [sp, #40]
    2984:	ldr	x1, [x0, #24]
    2988:	ldrsw	x0, [sp, #48]
    298c:	lsl	x0, x0, #3
    2990:	add	x19, x1, x0
    2994:	mov	x1, x2
    2998:	ldr	x0, [sp, #40]
    299c:	bl	db0 <Perl_sv_2mortal@plt>
    29a0:	str	x0, [x19]
    29a4:	mov	x0, #0x1                   	// #1
    29a8:	str	x0, [sp, #184]
    29ac:	ldr	x0, [sp, #40]
    29b0:	ldr	x1, [x0, #24]
    29b4:	ldrsw	x2, [sp, #48]
    29b8:	ldr	x0, [sp, #184]
    29bc:	add	x0, x2, x0
    29c0:	lsl	x0, x0, #3
    29c4:	sub	x0, x0, #0x8
    29c8:	add	x1, x1, x0
    29cc:	ldr	x0, [sp, #40]
    29d0:	str	x1, [x0]
    29d4:	b	2a40 <XS_Math__BigInt__FastCalc__acmp+0x60c>
    29d8:	mov	x1, #0x0                   	// #0
    29dc:	ldr	x0, [sp, #40]
    29e0:	bl	e10 <Perl_newSViv@plt>
    29e4:	mov	x2, x0
    29e8:	ldr	x0, [sp, #40]
    29ec:	ldr	x1, [x0, #24]
    29f0:	ldrsw	x0, [sp, #48]
    29f4:	lsl	x0, x0, #3
    29f8:	add	x19, x1, x0
    29fc:	mov	x1, x2
    2a00:	ldr	x0, [sp, #40]
    2a04:	bl	db0 <Perl_sv_2mortal@plt>
    2a08:	str	x0, [x19]
    2a0c:	mov	x0, #0x1                   	// #1
    2a10:	str	x0, [sp, #176]
    2a14:	ldr	x0, [sp, #40]
    2a18:	ldr	x1, [x0, #24]
    2a1c:	ldrsw	x2, [sp, #48]
    2a20:	ldr	x0, [sp, #176]
    2a24:	add	x0, x2, x0
    2a28:	lsl	x0, x0, #3
    2a2c:	sub	x0, x0, #0x8
    2a30:	add	x1, x1, x0
    2a34:	ldr	x0, [sp, #40]
    2a38:	str	x1, [x0]
    2a3c:	nop
    2a40:	adrp	x0, 13000 <__FRAME_END__+0xfb48>
    2a44:	ldr	x0, [x0, #4048]
    2a48:	ldr	x1, [sp, #232]
    2a4c:	ldr	x0, [x0]
    2a50:	eor	x0, x1, x0
    2a54:	cmp	x0, #0x0
    2a58:	b.eq	2a60 <XS_Math__BigInt__FastCalc__acmp+0x62c>  // b.none
    2a5c:	bl	d30 <__stack_chk_fail@plt>
    2a60:	ldr	x19, [sp, #16]
    2a64:	ldr	d8, [sp, #24]
    2a68:	ldp	x29, x30, [sp], #240
    2a6c:	ret

0000000000002a70 <boot_Math__BigInt__FastCalc>:
    2a70:	stp	x29, x30, [sp, #-144]!
    2a74:	mov	x29, sp
    2a78:	str	x0, [sp, #24]
    2a7c:	str	x1, [sp, #16]
    2a80:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2a84:	add	x4, x0, #0xf40
    2a88:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2a8c:	add	x3, x0, #0xf48
    2a90:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2a94:	add	x2, x0, #0xf50
    2a98:	ldr	x1, [sp, #24]
    2a9c:	mov	w0, #0x6e7                 	// #1767
    2aa0:	movk	w0, #0xd30, lsl #16
    2aa4:	bl	dd0 <Perl_xs_handshake@plt>
    2aa8:	str	w0, [sp, #32]
    2aac:	ldr	x0, [sp, #24]
    2ab0:	ldr	x1, [x0, #24]
    2ab4:	ldrsw	x0, [sp, #32]
    2ab8:	lsl	x0, x0, #3
    2abc:	add	x0, x1, x0
    2ac0:	str	x0, [sp, #40]
    2ac4:	ldr	x0, [sp, #24]
    2ac8:	ldr	x0, [x0]
    2acc:	str	x0, [sp, #48]
    2ad0:	ldr	x1, [sp, #48]
    2ad4:	ldr	x0, [sp, #40]
    2ad8:	sub	x0, x1, x0
    2adc:	asr	x0, x0, #3
    2ae0:	str	w0, [sp, #36]
    2ae4:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2ae8:	add	x0, x0, #0xf50
    2aec:	str	x0, [sp, #56]
    2af0:	adrp	x0, 1000 <S_POPMARK+0x20>
    2af4:	add	x2, x0, #0x24
    2af8:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2afc:	add	x1, x0, #0xf60
    2b00:	ldr	x0, [sp, #24]
    2b04:	bl	da0 <Perl_newXS_deffile@plt>
    2b08:	adrp	x0, 1000 <S_POPMARK+0x20>
    2b0c:	add	x2, x0, #0x35c
    2b10:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2b14:	add	x1, x0, #0xf80
    2b18:	ldr	x0, [sp, #24]
    2b1c:	bl	da0 <Perl_newXS_deffile@plt>
    2b20:	adrp	x0, 1000 <S_POPMARK+0x20>
    2b24:	add	x2, x0, #0x574
    2b28:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2b2c:	add	x1, x0, #0xfa0
    2b30:	ldr	x0, [sp, #24]
    2b34:	bl	da0 <Perl_newXS_deffile@plt>
    2b38:	adrp	x0, 1000 <S_POPMARK+0x20>
    2b3c:	add	x2, x0, #0x804
    2b40:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2b44:	add	x1, x0, #0xfc8
    2b48:	ldr	x0, [sp, #24]
    2b4c:	bl	da0 <Perl_newXS_deffile@plt>
    2b50:	adrp	x0, 1000 <S_POPMARK+0x20>
    2b54:	add	x2, x0, #0xac0
    2b58:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2b5c:	add	x1, x0, #0xfe8
    2b60:	ldr	x0, [sp, #24]
    2b64:	bl	da0 <Perl_newXS_deffile@plt>
    2b68:	adrp	x0, 1000 <S_POPMARK+0x20>
    2b6c:	add	x2, x0, #0xd90
    2b70:	adrp	x0, 3000 <_fini+0x10c>
    2b74:	add	x1, x0, #0x8
    2b78:	ldr	x0, [sp, #24]
    2b7c:	bl	da0 <Perl_newXS_deffile@plt>
    2b80:	str	x0, [sp, #16]
    2b84:	ldr	x0, [sp, #16]
    2b88:	ldr	x0, [x0]
    2b8c:	str	x0, [sp, #64]
    2b90:	ldr	x0, [sp, #64]
    2b94:	mov	w1, #0x1                   	// #1
    2b98:	str	w1, [x0, #40]
    2b9c:	adrp	x0, 1000 <S_POPMARK+0x20>
    2ba0:	add	x2, x0, #0xd90
    2ba4:	adrp	x0, 3000 <_fini+0x10c>
    2ba8:	add	x1, x0, #0x28
    2bac:	ldr	x0, [sp, #24]
    2bb0:	bl	da0 <Perl_newXS_deffile@plt>
    2bb4:	str	x0, [sp, #16]
    2bb8:	ldr	x0, [sp, #16]
    2bbc:	ldr	x0, [x0]
    2bc0:	str	x0, [sp, #72]
    2bc4:	ldr	x0, [sp, #72]
    2bc8:	mov	w1, #0xa                   	// #10
    2bcc:	str	w1, [x0, #40]
    2bd0:	adrp	x0, 1000 <S_POPMARK+0x20>
    2bd4:	add	x2, x0, #0xd90
    2bd8:	adrp	x0, 3000 <_fini+0x10c>
    2bdc:	add	x1, x0, #0x48
    2be0:	ldr	x0, [sp, #24]
    2be4:	bl	da0 <Perl_newXS_deffile@plt>
    2be8:	str	x0, [sp, #16]
    2bec:	ldr	x0, [sp, #16]
    2bf0:	ldr	x0, [x0]
    2bf4:	str	x0, [sp, #80]
    2bf8:	ldr	x0, [sp, #80]
    2bfc:	mov	w1, #0x2                   	// #2
    2c00:	str	w1, [x0, #40]
    2c04:	adrp	x0, 1000 <S_POPMARK+0x20>
    2c08:	add	x2, x0, #0xd90
    2c0c:	adrp	x0, 3000 <_fini+0x10c>
    2c10:	add	x1, x0, #0x68
    2c14:	ldr	x0, [sp, #24]
    2c18:	bl	da0 <Perl_newXS_deffile@plt>
    2c1c:	str	x0, [sp, #16]
    2c20:	ldr	x0, [sp, #16]
    2c24:	ldr	x0, [x0]
    2c28:	str	x0, [sp, #88]
    2c2c:	ldr	x0, [sp, #88]
    2c30:	str	wzr, [x0, #40]
    2c34:	adrp	x0, 1000 <S_POPMARK+0x20>
    2c38:	add	x2, x0, #0xed4
    2c3c:	adrp	x0, 3000 <_fini+0x10c>
    2c40:	add	x1, x0, #0x88
    2c44:	ldr	x0, [sp, #24]
    2c48:	bl	da0 <Perl_newXS_deffile@plt>
    2c4c:	str	x0, [sp, #16]
    2c50:	ldr	x0, [sp, #16]
    2c54:	ldr	x0, [x0]
    2c58:	str	x0, [sp, #96]
    2c5c:	ldr	x0, [sp, #96]
    2c60:	str	wzr, [x0, #40]
    2c64:	adrp	x0, 1000 <S_POPMARK+0x20>
    2c68:	add	x2, x0, #0xed4
    2c6c:	adrp	x0, 3000 <_fini+0x10c>
    2c70:	add	x1, x0, #0xb0
    2c74:	ldr	x0, [sp, #24]
    2c78:	bl	da0 <Perl_newXS_deffile@plt>
    2c7c:	str	x0, [sp, #16]
    2c80:	ldr	x0, [sp, #16]
    2c84:	ldr	x0, [x0]
    2c88:	str	x0, [sp, #104]
    2c8c:	ldr	x0, [sp, #104]
    2c90:	mov	w1, #0x1                   	// #1
    2c94:	str	w1, [x0, #40]
    2c98:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2c9c:	add	x2, x0, #0x7c
    2ca0:	adrp	x0, 3000 <_fini+0x10c>
    2ca4:	add	x1, x0, #0xd0
    2ca8:	ldr	x0, [sp, #24]
    2cac:	bl	da0 <Perl_newXS_deffile@plt>
    2cb0:	str	x0, [sp, #16]
    2cb4:	ldr	x0, [sp, #16]
    2cb8:	ldr	x0, [x0]
    2cbc:	str	x0, [sp, #112]
    2cc0:	ldr	x0, [sp, #112]
    2cc4:	mov	w1, #0x1                   	// #1
    2cc8:	str	w1, [x0, #40]
    2ccc:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2cd0:	add	x2, x0, #0x7c
    2cd4:	adrp	x0, 3000 <_fini+0x10c>
    2cd8:	add	x1, x0, #0xf0
    2cdc:	ldr	x0, [sp, #24]
    2ce0:	bl	da0 <Perl_newXS_deffile@plt>
    2ce4:	str	x0, [sp, #16]
    2ce8:	ldr	x0, [sp, #16]
    2cec:	ldr	x0, [x0]
    2cf0:	str	x0, [sp, #120]
    2cf4:	ldr	x0, [sp, #120]
    2cf8:	mov	w1, #0xa                   	// #10
    2cfc:	str	w1, [x0, #40]
    2d00:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2d04:	add	x2, x0, #0x7c
    2d08:	adrp	x0, 3000 <_fini+0x10c>
    2d0c:	add	x1, x0, #0x110
    2d10:	ldr	x0, [sp, #24]
    2d14:	bl	da0 <Perl_newXS_deffile@plt>
    2d18:	str	x0, [sp, #16]
    2d1c:	ldr	x0, [sp, #16]
    2d20:	ldr	x0, [x0]
    2d24:	str	x0, [sp, #128]
    2d28:	ldr	x0, [sp, #128]
    2d2c:	mov	w1, #0x2                   	// #2
    2d30:	str	w1, [x0, #40]
    2d34:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2d38:	add	x2, x0, #0x7c
    2d3c:	adrp	x0, 3000 <_fini+0x10c>
    2d40:	add	x1, x0, #0x130
    2d44:	ldr	x0, [sp, #24]
    2d48:	bl	da0 <Perl_newXS_deffile@plt>
    2d4c:	str	x0, [sp, #16]
    2d50:	ldr	x0, [sp, #16]
    2d54:	ldr	x0, [x0]
    2d58:	str	x0, [sp, #136]
    2d5c:	ldr	x0, [sp, #136]
    2d60:	str	wzr, [x0, #40]
    2d64:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2d68:	add	x2, x0, #0x240
    2d6c:	adrp	x0, 3000 <_fini+0x10c>
    2d70:	add	x1, x0, #0x158
    2d74:	ldr	x0, [sp, #24]
    2d78:	bl	da0 <Perl_newXS_deffile@plt>
    2d7c:	adrp	x0, 2000 <XS_Math__BigInt__FastCalc__is_even+0x12c>
    2d80:	add	x2, x0, #0x434
    2d84:	adrp	x0, 3000 <_fini+0x10c>
    2d88:	add	x1, x0, #0x178
    2d8c:	ldr	x0, [sp, #24]
    2d90:	bl	da0 <Perl_newXS_deffile@plt>
    2d94:	ldr	w0, [sp, #36]
    2d98:	cmp	w0, #0x3
    2d9c:	b.gt	2dac <boot_Math__BigInt__FastCalc+0x33c>
    2da0:	adrp	x0, 3000 <_fini+0x10c>
    2da4:	add	x0, x0, #0x198
    2da8:	bl	d90 <Perl_croak_nocontext@plt>
    2dac:	ldr	x0, [sp, #24]
    2db0:	ldr	x1, [x0, #24]
    2db4:	ldrsw	x0, [sp, #32]
    2db8:	add	x0, x0, #0x2
    2dbc:	lsl	x0, x0, #3
    2dc0:	add	x0, x1, x0
    2dc4:	ldr	x0, [x0]
    2dc8:	ldr	w1, [x0, #12]
    2dcc:	mov	w0, #0x100                 	// #256
    2dd0:	movk	w0, #0x20, lsl #16
    2dd4:	and	w0, w1, w0
    2dd8:	cmp	w0, #0x100
    2ddc:	b.ne	2e0c <boot_Math__BigInt__FastCalc+0x39c>  // b.any
    2de0:	ldr	x0, [sp, #24]
    2de4:	ldr	x1, [x0, #24]
    2de8:	ldrsw	x0, [sp, #32]
    2dec:	add	x0, x0, #0x2
    2df0:	lsl	x0, x0, #3
    2df4:	add	x0, x1, x0
    2df8:	ldr	x0, [x0]
    2dfc:	ldr	x0, [x0]
    2e00:	ldr	d0, [x0, #32]
    2e04:	scvtf	d0, d0
    2e08:	b	2e3c <boot_Math__BigInt__FastCalc+0x3cc>
    2e0c:	ldr	x0, [sp, #24]
    2e10:	ldr	x1, [x0, #24]
    2e14:	ldrsw	x0, [sp, #32]
    2e18:	add	x0, x0, #0x2
    2e1c:	lsl	x0, x0, #3
    2e20:	add	x0, x1, x0
    2e24:	ldr	x0, [x0]
    2e28:	mov	w2, #0x2                   	// #2
    2e2c:	mov	x1, x0
    2e30:	ldr	x0, [sp, #24]
    2e34:	bl	c90 <Perl_sv_2iv_flags@plt>
    2e38:	scvtf	d0, x0
    2e3c:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    2e40:	add	x0, x0, #0xf8
    2e44:	str	d0, [x0]
    2e48:	ldr	x0, [sp, #24]
    2e4c:	ldr	x1, [x0, #24]
    2e50:	ldrsw	x0, [sp, #32]
    2e54:	add	x0, x0, #0x3
    2e58:	lsl	x0, x0, #3
    2e5c:	add	x0, x1, x0
    2e60:	ldr	x0, [x0]
    2e64:	ldr	w1, [x0, #12]
    2e68:	mov	w0, #0x200                 	// #512
    2e6c:	movk	w0, #0x20, lsl #16
    2e70:	and	w0, w1, w0
    2e74:	cmp	w0, #0x200
    2e78:	b.ne	2ea4 <boot_Math__BigInt__FastCalc+0x434>  // b.any
    2e7c:	ldr	x0, [sp, #24]
    2e80:	ldr	x1, [x0, #24]
    2e84:	ldrsw	x0, [sp, #32]
    2e88:	add	x0, x0, #0x3
    2e8c:	lsl	x0, x0, #3
    2e90:	add	x0, x1, x0
    2e94:	ldr	x0, [x0]
    2e98:	ldr	x0, [x0]
    2e9c:	ldr	d0, [x0, #40]
    2ea0:	b	2ed0 <boot_Math__BigInt__FastCalc+0x460>
    2ea4:	ldr	x0, [sp, #24]
    2ea8:	ldr	x1, [x0, #24]
    2eac:	ldrsw	x0, [sp, #32]
    2eb0:	add	x0, x0, #0x3
    2eb4:	lsl	x0, x0, #3
    2eb8:	add	x0, x1, x0
    2ebc:	ldr	x0, [x0]
    2ec0:	mov	w2, #0x2                   	// #2
    2ec4:	mov	x1, x0
    2ec8:	ldr	x0, [sp, #24]
    2ecc:	bl	d60 <Perl_sv_2nv_flags@plt>
    2ed0:	adrp	x0, 14000 <Perl_sv_2iv_flags>
    2ed4:	add	x0, x0, #0xf0
    2ed8:	str	d0, [x0]
    2edc:	ldr	w1, [sp, #32]
    2ee0:	ldr	x0, [sp, #24]
    2ee4:	bl	d20 <Perl_xs_boot_epilog@plt>
    2ee8:	nop
    2eec:	ldp	x29, x30, [sp], #144
    2ef0:	ret

Disassembly of section .fini:

0000000000002ef4 <_fini>:
    2ef4:	stp	x29, x30, [sp, #-16]!
    2ef8:	mov	x29, sp
    2efc:	ldp	x29, x30, [sp], #16
    2f00:	ret
