
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scalar.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000011f8 <_init>:
    11f8:	stp	x29, x30, [sp, #-16]!
    11fc:	mov	x29, sp
    1200:	bl	1460 <call_weak_fn>
    1204:	ldp	x29, x30, [sp], #16
    1208:	ret

Disassembly of section .plt:

0000000000001210 <.plt>:
    1210:	stp	x16, x30, [sp, #-16]!
    1214:	adrp	x16, 13000 <__FRAME_END__+0xfe20>
    1218:	ldr	x17, [x16, #4088]
    121c:	add	x16, x16, #0xff8
    1220:	br	x17
    1224:	nop
    1228:	nop
    122c:	nop

0000000000001230 <memcpy@plt>:
    1230:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1234:	ldr	x17, [x16]
    1238:	add	x16, x16, #0x0
    123c:	br	x17

0000000000001240 <Perl_PerlIO_save_errno@plt>:
    1240:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1244:	ldr	x17, [x16, #8]
    1248:	add	x16, x16, #0x8
    124c:	br	x17

0000000000001250 <memmove@plt>:
    1250:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1254:	ldr	x17, [x16, #16]
    1258:	add	x16, x16, #0x10
    125c:	br	x17

0000000000001260 <PerlIO_define_layer@plt>:
    1260:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1264:	ldr	x17, [x16, #24]
    1268:	add	x16, x16, #0x18
    126c:	br	x17

0000000000001270 <Perl_sv_pvn_force_flags@plt>:
    1270:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1274:	ldr	x17, [x16, #32]
    1278:	add	x16, x16, #0x20
    127c:	br	x17

0000000000001280 <Perl_newRV_noinc@plt>:
    1280:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1284:	ldr	x17, [x16, #40]
    1288:	add	x16, x16, #0x28
    128c:	br	x17

0000000000001290 <Perl_sv_utf8_downgrade@plt>:
    1290:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1294:	ldr	x17, [x16, #48]
    1298:	add	x16, x16, #0x30
    129c:	br	x17

00000000000012a0 <__cxa_finalize@plt>:
    12a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    12a4:	ldr	x17, [x16, #56]
    12a8:	add	x16, x16, #0x38
    12ac:	br	x17

00000000000012b0 <PerlIO_arg_fetch@plt>:
    12b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    12b4:	ldr	x17, [x16, #64]
    12b8:	add	x16, x16, #0x40
    12bc:	br	x17

00000000000012c0 <Perl_sv_force_normal_flags@plt>:
    12c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #72]
    12c8:	add	x16, x16, #0x48
    12cc:	br	x17

00000000000012d0 <PerlIO_allocate@plt>:
    12d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #80]
    12d8:	add	x16, x16, #0x50
    12dc:	br	x17

00000000000012e0 <Perl_warner@plt>:
    12e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #88]
    12e8:	add	x16, x16, #0x58
    12ec:	br	x17

00000000000012f0 <Perl_sv_upgrade@plt>:
    12f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #96]
    12f8:	add	x16, x16, #0x60
    12fc:	br	x17

0000000000001300 <PerlIO_push@plt>:
    1300:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1304:	ldr	x17, [x16, #104]
    1308:	add	x16, x16, #0x68
    130c:	br	x17

0000000000001310 <PerlIOBase_dup@plt>:
    1310:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1314:	ldr	x17, [x16, #112]
    1318:	add	x16, x16, #0x70
    131c:	br	x17

0000000000001320 <memset@plt>:
    1320:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1324:	ldr	x17, [x16, #120]
    1328:	add	x16, x16, #0x78
    132c:	br	x17

0000000000001330 <Perl_sv_2pv_flags@plt>:
    1330:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1334:	ldr	x17, [x16, #128]
    1338:	add	x16, x16, #0x80
    133c:	br	x17

0000000000001340 <Perl_xs_boot_epilog@plt>:
    1340:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1344:	ldr	x17, [x16, #136]
    1348:	add	x16, x16, #0x88
    134c:	br	x17

0000000000001350 <__stack_chk_fail@plt>:
    1350:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1354:	ldr	x17, [x16, #144]
    1358:	add	x16, x16, #0x90
    135c:	br	x17

0000000000001360 <PerlIOBase_close@plt>:
    1360:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1364:	ldr	x17, [x16, #152]
    1368:	add	x16, x16, #0x98
    136c:	br	x17

0000000000001370 <__gmon_start__@plt>:
    1370:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1374:	ldr	x17, [x16, #160]
    1378:	add	x16, x16, #0xa0
    137c:	br	x17

0000000000001380 <Perl_sv_grow@plt>:
    1380:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1384:	ldr	x17, [x16, #168]
    1388:	add	x16, x16, #0xa8
    138c:	br	x17

0000000000001390 <Perl_sv_len@plt>:
    1390:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1394:	ldr	x17, [x16, #176]
    1398:	add	x16, x16, #0xb0
    139c:	br	x17

00000000000013a0 <Perl_get_sv@plt>:
    13a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    13a4:	ldr	x17, [x16, #184]
    13a8:	add	x16, x16, #0xb8
    13ac:	br	x17

00000000000013b0 <Perl_croak_nocontext@plt>:
    13b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    13b4:	ldr	x17, [x16, #192]
    13b8:	add	x16, x16, #0xc0
    13bc:	br	x17

00000000000013c0 <PerlIOBase_pushed@plt>:
    13c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    13c4:	ldr	x17, [x16, #200]
    13c8:	add	x16, x16, #0xc8
    13cc:	br	x17

00000000000013d0 <Perl_mg_set@plt>:
    13d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    13d4:	ldr	x17, [x16, #208]
    13d8:	add	x16, x16, #0xd0
    13dc:	br	x17

00000000000013e0 <Perl_mg_get@plt>:
    13e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    13e4:	ldr	x17, [x16, #216]
    13e8:	add	x16, x16, #0xd8
    13ec:	br	x17

00000000000013f0 <Perl_xs_handshake@plt>:
    13f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    13f4:	ldr	x17, [x16, #224]
    13f8:	add	x16, x16, #0xe0
    13fc:	br	x17

0000000000001400 <PerlIO_sv_dup@plt>:
    1400:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1404:	ldr	x17, [x16, #232]
    1408:	add	x16, x16, #0xe8
    140c:	br	x17

0000000000001410 <Perl_sv_free2@plt>:
    1410:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1414:	ldr	x17, [x16, #240]
    1418:	add	x16, x16, #0xf0
    141c:	br	x17

0000000000001420 <Perl_ckwarn@plt>:
    1420:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1424:	ldr	x17, [x16, #248]
    1428:	add	x16, x16, #0xf8
    142c:	br	x17

0000000000001430 <__errno_location@plt>:
    1430:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1434:	ldr	x17, [x16, #256]
    1438:	add	x16, x16, #0x100
    143c:	br	x17

0000000000001440 <Perl_newSVsv_flags@plt>:
    1440:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1444:	ldr	x17, [x16, #264]
    1448:	add	x16, x16, #0x108
    144c:	br	x17

0000000000001450 <Perl_newSVpvn@plt>:
    1450:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1454:	ldr	x17, [x16, #272]
    1458:	add	x16, x16, #0x110
    145c:	br	x17

Disassembly of section .text:

0000000000001460 <call_weak_fn>:
    1460:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1464:	ldr	x0, [x0, #4040]
    1468:	cbz	x0, 1470 <call_weak_fn+0x10>
    146c:	b	1370 <__gmon_start__@plt>
    1470:	ret

0000000000001474 <deregister_tm_clones>:
    1474:	stp	x29, x30, [sp, #-32]!
    1478:	mov	x29, sp
    147c:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    1480:	add	x0, x0, #0x120
    1484:	str	x0, [sp, #24]
    1488:	ldr	x0, [sp, #24]
    148c:	str	x0, [sp, #24]
    1490:	ldr	x1, [sp, #24]
    1494:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    1498:	add	x0, x0, #0x120
    149c:	cmp	x1, x0
    14a0:	b.eq	14d8 <deregister_tm_clones+0x64>  // b.none
    14a4:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    14a8:	ldr	x0, [x0, #4016]
    14ac:	str	x0, [sp, #16]
    14b0:	ldr	x0, [sp, #16]
    14b4:	str	x0, [sp, #16]
    14b8:	ldr	x0, [sp, #16]
    14bc:	cmp	x0, #0x0
    14c0:	b.eq	14dc <deregister_tm_clones+0x68>  // b.none
    14c4:	ldr	x1, [sp, #16]
    14c8:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    14cc:	add	x0, x0, #0x120
    14d0:	blr	x1
    14d4:	b	14dc <deregister_tm_clones+0x68>
    14d8:	nop
    14dc:	ldp	x29, x30, [sp], #32
    14e0:	ret

00000000000014e4 <register_tm_clones>:
    14e4:	stp	x29, x30, [sp, #-48]!
    14e8:	mov	x29, sp
    14ec:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    14f0:	add	x0, x0, #0x120
    14f4:	str	x0, [sp, #40]
    14f8:	ldr	x0, [sp, #40]
    14fc:	str	x0, [sp, #40]
    1500:	ldr	x1, [sp, #40]
    1504:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    1508:	add	x0, x0, #0x120
    150c:	sub	x0, x1, x0
    1510:	asr	x0, x0, #3
    1514:	lsr	x1, x0, #63
    1518:	add	x0, x1, x0
    151c:	asr	x0, x0, #1
    1520:	str	x0, [sp, #32]
    1524:	ldr	x0, [sp, #32]
    1528:	cmp	x0, #0x0
    152c:	b.eq	1568 <register_tm_clones+0x84>  // b.none
    1530:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1534:	ldr	x0, [x0, #4064]
    1538:	str	x0, [sp, #24]
    153c:	ldr	x0, [sp, #24]
    1540:	str	x0, [sp, #24]
    1544:	ldr	x0, [sp, #24]
    1548:	cmp	x0, #0x0
    154c:	b.eq	156c <register_tm_clones+0x88>  // b.none
    1550:	ldr	x2, [sp, #24]
    1554:	ldr	x1, [sp, #32]
    1558:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    155c:	add	x0, x0, #0x120
    1560:	blr	x2
    1564:	b	156c <register_tm_clones+0x88>
    1568:	nop
    156c:	ldp	x29, x30, [sp], #48
    1570:	ret

0000000000001574 <__do_global_dtors_aux>:
    1574:	stp	x29, x30, [sp, #-16]!
    1578:	mov	x29, sp
    157c:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    1580:	add	x0, x0, #0x120
    1584:	ldrb	w0, [x0]
    1588:	and	x0, x0, #0xff
    158c:	cmp	x0, #0x0
    1590:	b.ne	15cc <__do_global_dtors_aux+0x58>  // b.any
    1594:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1598:	ldr	x0, [x0, #4024]
    159c:	cmp	x0, #0x0
    15a0:	b.eq	15b4 <__do_global_dtors_aux+0x40>  // b.none
    15a4:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    15a8:	add	x0, x0, #0x118
    15ac:	ldr	x0, [x0]
    15b0:	bl	12a0 <__cxa_finalize@plt>
    15b4:	bl	1474 <deregister_tm_clones>
    15b8:	adrp	x0, 14000 <memcpy@GLIBC_2.17>
    15bc:	add	x0, x0, #0x120
    15c0:	mov	w1, #0x1                   	// #1
    15c4:	strb	w1, [x0]
    15c8:	b	15d0 <__do_global_dtors_aux+0x5c>
    15cc:	nop
    15d0:	ldp	x29, x30, [sp], #16
    15d4:	ret

00000000000015d8 <frame_dummy>:
    15d8:	stp	x29, x30, [sp, #-16]!
    15dc:	mov	x29, sp
    15e0:	bl	14e4 <register_tm_clones>
    15e4:	nop
    15e8:	ldp	x29, x30, [sp], #16
    15ec:	ret

00000000000015f0 <S_SvREFCNT_inc>:
    15f0:	sub	sp, sp, #0x10
    15f4:	str	x0, [sp, #8]
    15f8:	ldr	x0, [sp, #8]
    15fc:	cmp	x0, #0x0
    1600:	cset	w0, ne  // ne = any
    1604:	and	w0, w0, #0xff
    1608:	and	x0, x0, #0xff
    160c:	cmp	x0, #0x0
    1610:	b.eq	1628 <S_SvREFCNT_inc+0x38>  // b.none
    1614:	ldr	x0, [sp, #8]
    1618:	ldr	w0, [x0, #8]
    161c:	add	w1, w0, #0x1
    1620:	ldr	x0, [sp, #8]
    1624:	str	w1, [x0, #8]
    1628:	ldr	x0, [sp, #8]
    162c:	add	sp, sp, #0x10
    1630:	ret

0000000000001634 <S_SvREFCNT_dec>:
    1634:	stp	x29, x30, [sp, #-48]!
    1638:	mov	x29, sp
    163c:	str	x0, [sp, #24]
    1640:	str	x1, [sp, #16]
    1644:	ldr	x0, [sp, #16]
    1648:	cmp	x0, #0x0
    164c:	cset	w0, ne  // ne = any
    1650:	and	w0, w0, #0xff
    1654:	and	x0, x0, #0xff
    1658:	cmp	x0, #0x0
    165c:	b.eq	16ac <S_SvREFCNT_dec+0x78>  // b.none
    1660:	ldr	x0, [sp, #16]
    1664:	ldr	w0, [x0, #8]
    1668:	str	w0, [sp, #44]
    166c:	ldr	w0, [sp, #44]
    1670:	cmp	w0, #0x1
    1674:	cset	w0, hi  // hi = pmore
    1678:	and	w0, w0, #0xff
    167c:	and	x0, x0, #0xff
    1680:	cmp	x0, #0x0
    1684:	b.eq	169c <S_SvREFCNT_dec+0x68>  // b.none
    1688:	ldr	w0, [sp, #44]
    168c:	sub	w1, w0, #0x1
    1690:	ldr	x0, [sp, #16]
    1694:	str	w1, [x0, #8]
    1698:	b	16ac <S_SvREFCNT_dec+0x78>
    169c:	ldr	w2, [sp, #44]
    16a0:	ldr	x1, [sp, #16]
    16a4:	ldr	x0, [sp, #24]
    16a8:	bl	1410 <Perl_sv_free2@plt>
    16ac:	nop
    16b0:	ldp	x29, x30, [sp], #48
    16b4:	ret

00000000000016b8 <S_croak_memory_wrap>:
    16b8:	stp	x29, x30, [sp, #-16]!
    16bc:	mov	x29, sp
    16c0:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    16c4:	ldr	x1, [x0, #4056]
    16c8:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    16cc:	add	x0, x0, #0xd10
    16d0:	bl	13b0 <Perl_croak_nocontext@plt>

00000000000016d4 <PerlIOScalar_eof>:
    16d4:	stp	x29, x30, [sp, #-64]!
    16d8:	mov	x29, sp
    16dc:	str	x0, [sp, #24]
    16e0:	str	x1, [sp, #16]
    16e4:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    16e8:	ldr	x0, [x0, #4048]
    16ec:	ldr	x1, [x0]
    16f0:	str	x1, [sp, #56]
    16f4:	mov	x1, #0x0                   	// #0
    16f8:	ldr	x0, [sp, #16]
    16fc:	ldr	x0, [x0]
    1700:	ldr	w0, [x0, #16]
    1704:	and	w0, w0, #0x400
    1708:	cmp	w0, #0x0
    170c:	b.eq	1794 <PerlIOScalar_eof+0xc0>  // b.none
    1710:	ldr	x0, [sp, #16]
    1714:	ldr	x0, [x0]
    1718:	str	x0, [sp, #48]
    171c:	ldr	x0, [sp, #48]
    1720:	ldr	x0, [x0, #32]
    1724:	ldr	w1, [x0, #12]
    1728:	mov	w0, #0x400                 	// #1024
    172c:	movk	w0, #0x20, lsl #16
    1730:	and	w0, w1, w0
    1734:	cmp	w0, #0x400
    1738:	b.ne	1754 <PerlIOScalar_eof+0x80>  // b.any
    173c:	ldr	x0, [sp, #48]
    1740:	ldr	x0, [x0, #32]
    1744:	ldr	x0, [x0]
    1748:	ldr	x0, [x0, #16]
    174c:	str	x0, [sp, #40]
    1750:	b	1774 <PerlIOScalar_eof+0xa0>
    1754:	ldr	x0, [sp, #48]
    1758:	ldr	x0, [x0, #32]
    175c:	add	x1, sp, #0x28
    1760:	mov	w3, #0x2                   	// #2
    1764:	mov	x2, x1
    1768:	mov	x1, x0
    176c:	ldr	x0, [sp, #24]
    1770:	bl	1330 <Perl_sv_2pv_flags@plt>
    1774:	ldr	x0, [sp, #48]
    1778:	ldr	x0, [x0, #40]
    177c:	ldr	x1, [sp, #40]
    1780:	cmp	x0, x1
    1784:	cset	w0, eq  // eq = none
    1788:	and	w0, w0, #0xff
    178c:	and	x0, x0, #0xff
    1790:	b	1798 <PerlIOScalar_eof+0xc4>
    1794:	mov	x0, #0x1                   	// #1
    1798:	mov	x1, x0
    179c:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    17a0:	ldr	x0, [x0, #4048]
    17a4:	ldr	x2, [sp, #56]
    17a8:	ldr	x0, [x0]
    17ac:	eor	x0, x2, x0
    17b0:	cmp	x0, #0x0
    17b4:	b.eq	17bc <PerlIOScalar_eof+0xe8>  // b.none
    17b8:	bl	1350 <__stack_chk_fail@plt>
    17bc:	mov	x0, x1
    17c0:	ldp	x29, x30, [sp], #64
    17c4:	ret

00000000000017c8 <PerlIOScalar_pushed>:
    17c8:	stp	x29, x30, [sp, #-112]!
    17cc:	mov	x29, sp
    17d0:	str	x0, [sp, #56]
    17d4:	str	x1, [sp, #48]
    17d8:	str	x2, [sp, #40]
    17dc:	str	x3, [sp, #32]
    17e0:	str	x4, [sp, #24]
    17e4:	ldr	x0, [sp, #48]
    17e8:	ldr	x0, [x0]
    17ec:	str	x0, [sp, #72]
    17f0:	ldr	x0, [sp, #32]
    17f4:	cmp	x0, #0x0
    17f8:	b.eq	19f4 <PerlIOScalar_pushed+0x22c>  // b.none
    17fc:	ldr	x0, [sp, #32]
    1800:	ldr	w0, [x0, #12]
    1804:	and	w0, w0, #0xff00
    1808:	cmp	w0, #0x0
    180c:	b.eq	19f4 <PerlIOScalar_pushed+0x22c>  // b.none
    1810:	ldr	x0, [sp, #32]
    1814:	ldr	w0, [x0, #12]
    1818:	and	w0, w0, #0x800
    181c:	cmp	w0, #0x0
    1820:	b.eq	198c <PerlIOScalar_pushed+0x1c4>  // b.none
    1824:	ldr	x0, [sp, #32]
    1828:	ldr	x0, [x0, #16]
    182c:	ldr	w1, [x0, #12]
    1830:	mov	w0, #0x8010000             	// #134283264
    1834:	and	w0, w1, w0
    1838:	cmp	w0, #0x0
    183c:	b.eq	18c0 <PerlIOScalar_pushed+0xf8>  // b.none
    1840:	ldr	x0, [sp, #32]
    1844:	ldr	x0, [x0, #16]
    1848:	ldr	w0, [x0, #12]
    184c:	and	w0, w0, #0x10000000
    1850:	cmp	w0, #0x0
    1854:	b.ne	18c0 <PerlIOScalar_pushed+0xf8>  // b.any
    1858:	ldr	x0, [sp, #40]
    185c:	cmp	x0, #0x0
    1860:	b.eq	18c0 <PerlIOScalar_pushed+0xf8>  // b.none
    1864:	ldr	x0, [sp, #40]
    1868:	ldrb	w0, [x0]
    186c:	cmp	w0, #0x72
    1870:	b.eq	18c0 <PerlIOScalar_pushed+0xf8>  // b.none
    1874:	mov	w1, #0x8                   	// #8
    1878:	ldr	x0, [sp, #56]
    187c:	bl	1420 <Perl_ckwarn@plt>
    1880:	and	w0, w0, #0xff
    1884:	cmp	w0, #0x0
    1888:	b.eq	18a8 <PerlIOScalar_pushed+0xe0>  // b.none
    188c:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1890:	ldr	x3, [x0, #4032]
    1894:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    1898:	add	x2, x0, #0xd10
    189c:	mov	w1, #0x8                   	// #8
    18a0:	ldr	x0, [sp, #56]
    18a4:	bl	12e0 <Perl_warner@plt>
    18a8:	bl	1430 <__errno_location@plt>
    18ac:	mov	x1, x0
    18b0:	mov	w0, #0xd                   	// #13
    18b4:	str	w0, [x1]
    18b8:	mov	x0, #0xffffffffffffffff    	// #-1
    18bc:	b	1c30 <PerlIOScalar_pushed+0x468>
    18c0:	ldr	x0, [sp, #32]
    18c4:	ldr	x0, [x0, #16]
    18c8:	str	x0, [sp, #88]
    18cc:	ldr	x0, [sp, #88]
    18d0:	bl	15f0 <S_SvREFCNT_inc>
    18d4:	mov	x1, x0
    18d8:	ldr	x0, [sp, #72]
    18dc:	str	x1, [x0, #32]
    18e0:	ldr	x0, [sp, #72]
    18e4:	ldr	x0, [x0, #32]
    18e8:	ldr	w0, [x0, #12]
    18ec:	lsr	w0, w0, #21
    18f0:	mov	w0, w0
    18f4:	and	x0, x0, #0x1
    18f8:	cmp	x0, #0x0
    18fc:	b.eq	191c <PerlIOScalar_pushed+0x154>  // b.none
    1900:	ldr	x0, [sp, #72]
    1904:	ldr	x0, [x0, #32]
    1908:	mov	x1, x0
    190c:	ldr	x0, [sp, #56]
    1910:	bl	13e0 <Perl_mg_get@plt>
    1914:	cmp	w0, #0x0
    1918:	nop
    191c:	ldr	x0, [sp, #72]
    1920:	ldr	x0, [x0, #32]
    1924:	ldr	w0, [x0, #12]
    1928:	and	w0, w0, #0x400
    192c:	cmp	w0, #0x0
    1930:	b.ne	1a18 <PerlIOScalar_pushed+0x250>  // b.any
    1934:	ldr	x0, [sp, #72]
    1938:	ldr	x0, [x0, #32]
    193c:	ldr	w0, [x0, #12]
    1940:	and	w0, w0, #0xff00
    1944:	cmp	w0, #0x0
    1948:	b.eq	1a18 <PerlIOScalar_pushed+0x250>  // b.none
    194c:	ldr	x0, [sp, #72]
    1950:	ldr	x0, [x0, #32]
    1954:	ldr	w1, [x0, #12]
    1958:	mov	w0, #0x400                 	// #1024
    195c:	movk	w0, #0x20, lsl #16
    1960:	and	w0, w1, w0
    1964:	cmp	w0, #0x400
    1968:	b.eq	1a18 <PerlIOScalar_pushed+0x250>  // b.none
    196c:	ldr	x0, [sp, #72]
    1970:	ldr	x0, [x0, #32]
    1974:	mov	w3, #0x20                  	// #32
    1978:	mov	x2, #0x0                   	// #0
    197c:	mov	x1, x0
    1980:	ldr	x0, [sp, #56]
    1984:	bl	1330 <Perl_sv_2pv_flags@plt>
    1988:	b	1a18 <PerlIOScalar_pushed+0x250>
    198c:	ldr	x0, [sp, #32]
    1990:	ldr	w1, [x0, #12]
    1994:	mov	w0, #0x400                 	// #1024
    1998:	movk	w0, #0x20, lsl #16
    199c:	and	w0, w1, w0
    19a0:	cmp	w0, #0x400
    19a4:	b.ne	19b4 <PerlIOScalar_pushed+0x1ec>  // b.any
    19a8:	ldr	x0, [sp, #32]
    19ac:	ldr	x0, [x0, #16]
    19b0:	b	19c8 <PerlIOScalar_pushed+0x200>
    19b4:	mov	w3, #0x2                   	// #2
    19b8:	mov	x2, #0x0                   	// #0
    19bc:	ldr	x1, [sp, #32]
    19c0:	ldr	x0, [sp, #56]
    19c4:	bl	1330 <Perl_sv_2pv_flags@plt>
    19c8:	mov	w2, #0x3                   	// #3
    19cc:	mov	x1, x0
    19d0:	ldr	x0, [sp, #56]
    19d4:	bl	13a0 <Perl_get_sv@plt>
    19d8:	str	x0, [sp, #80]
    19dc:	ldr	x0, [sp, #80]
    19e0:	bl	15f0 <S_SvREFCNT_inc>
    19e4:	mov	x1, x0
    19e8:	ldr	x0, [sp, #72]
    19ec:	str	x1, [x0, #32]
    19f0:	b	1a18 <PerlIOScalar_pushed+0x250>
    19f4:	mov	x2, #0x0                   	// #0
    19f8:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    19fc:	add	x1, x0, #0xd70
    1a00:	ldr	x0, [sp, #56]
    1a04:	bl	1450 <Perl_newSVpvn@plt>
    1a08:	mov	x1, x0
    1a0c:	ldr	x0, [sp, #72]
    1a10:	str	x1, [x0, #32]
    1a14:	b	1a1c <PerlIOScalar_pushed+0x254>
    1a18:	nop
    1a1c:	ldr	x0, [sp, #72]
    1a20:	ldr	x0, [x0, #32]
    1a24:	ldr	w0, [x0, #12]
    1a28:	and	w0, w0, #0xff
    1a2c:	cmp	w0, #0x2
    1a30:	b.hi	1a4c <PerlIOScalar_pushed+0x284>  // b.pmore
    1a34:	ldr	x0, [sp, #72]
    1a38:	ldr	x0, [x0, #32]
    1a3c:	mov	w2, #0x3                   	// #3
    1a40:	mov	x1, x0
    1a44:	ldr	x0, [sp, #56]
    1a48:	bl	12f0 <Perl_sv_upgrade@plt>
    1a4c:	ldr	x4, [sp, #24]
    1a50:	mov	x3, #0x0                   	// #0
    1a54:	ldr	x2, [sp, #40]
    1a58:	ldr	x1, [sp, #48]
    1a5c:	ldr	x0, [sp, #56]
    1a60:	bl	13c0 <PerlIOBase_pushed@plt>
    1a64:	str	x0, [sp, #96]
    1a68:	ldr	x0, [sp, #72]
    1a6c:	ldr	x0, [x0, #32]
    1a70:	ldr	w0, [x0, #12]
    1a74:	and	w0, w0, #0xff00
    1a78:	cmp	w0, #0x0
    1a7c:	b.eq	1a98 <PerlIOScalar_pushed+0x2d0>  // b.none
    1a80:	ldr	x0, [sp, #48]
    1a84:	ldr	x0, [x0]
    1a88:	ldr	w0, [x0, #16]
    1a8c:	and	w0, w0, #0x1000
    1a90:	cmp	w0, #0x0
    1a94:	b.eq	1ae8 <PerlIOScalar_pushed+0x320>  // b.none
    1a98:	ldr	x0, [sp, #72]
    1a9c:	ldr	x0, [x0, #32]
    1aa0:	mov	w2, #0x0                   	// #0
    1aa4:	mov	x1, x0
    1aa8:	ldr	x0, [sp, #56]
    1aac:	bl	12c0 <Perl_sv_force_normal_flags@plt>
    1ab0:	ldr	x0, [sp, #72]
    1ab4:	ldr	x0, [x0, #32]
    1ab8:	ldr	x0, [x0]
    1abc:	str	xzr, [x0, #16]
    1ac0:	ldr	x0, [sp, #72]
    1ac4:	ldr	x0, [x0, #32]
    1ac8:	ldr	w0, [x0, #12]
    1acc:	and	w0, w0, #0x400
    1ad0:	cmp	w0, #0x0
    1ad4:	b.eq	1ae8 <PerlIOScalar_pushed+0x320>  // b.none
    1ad8:	ldr	x0, [sp, #72]
    1adc:	ldr	x0, [x0, #32]
    1ae0:	ldr	x0, [x0, #16]
    1ae4:	strb	wzr, [x0]
    1ae8:	ldr	x0, [sp, #72]
    1aec:	ldr	x0, [x0, #32]
    1af0:	ldr	w0, [x0, #12]
    1af4:	and	w0, w0, #0x20000000
    1af8:	cmp	w0, #0x0
    1afc:	b.eq	1b94 <PerlIOScalar_pushed+0x3cc>  // b.none
    1b00:	ldr	x0, [sp, #72]
    1b04:	ldr	x0, [x0, #32]
    1b08:	mov	w2, #0x1                   	// #1
    1b0c:	mov	x1, x0
    1b10:	ldr	x0, [sp, #56]
    1b14:	bl	1290 <Perl_sv_utf8_downgrade@plt>
    1b18:	and	w0, w0, #0xff
    1b1c:	eor	w0, w0, #0x1
    1b20:	and	w0, w0, #0xff
    1b24:	cmp	w0, #0x0
    1b28:	b.eq	1b94 <PerlIOScalar_pushed+0x3cc>  // b.none
    1b2c:	mov	w1, #0x2c                  	// #44
    1b30:	ldr	x0, [sp, #56]
    1b34:	bl	1420 <Perl_ckwarn@plt>
    1b38:	and	w0, w0, #0xff
    1b3c:	cmp	w0, #0x0
    1b40:	b.eq	1b58 <PerlIOScalar_pushed+0x390>  // b.none
    1b44:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    1b48:	add	x2, x0, #0xd18
    1b4c:	mov	w1, #0x2c                  	// #44
    1b50:	ldr	x0, [sp, #56]
    1b54:	bl	12e0 <Perl_warner@plt>
    1b58:	bl	1430 <__errno_location@plt>
    1b5c:	mov	x1, x0
    1b60:	mov	w0, #0x16                  	// #22
    1b64:	str	w0, [x1]
    1b68:	ldr	x0, [sp, #72]
    1b6c:	ldr	x0, [x0, #32]
    1b70:	str	x0, [sp, #104]
    1b74:	ldr	x0, [sp, #104]
    1b78:	mov	x1, x0
    1b7c:	ldr	x0, [sp, #56]
    1b80:	bl	1634 <S_SvREFCNT_dec>
    1b84:	ldr	x0, [sp, #72]
    1b88:	str	xzr, [x0, #32]
    1b8c:	mov	x0, #0xffffffffffffffff    	// #-1
    1b90:	b	1c30 <PerlIOScalar_pushed+0x468>
    1b94:	ldr	x0, [sp, #48]
    1b98:	ldr	x0, [x0]
    1b9c:	ldr	w0, [x0, #16]
    1ba0:	and	w0, w0, #0x2000
    1ba4:	cmp	w0, #0x0
    1ba8:	b.eq	1bf0 <PerlIOScalar_pushed+0x428>  // b.none
    1bac:	ldr	x0, [sp, #72]
    1bb0:	ldr	x0, [x0, #32]
    1bb4:	ldr	w0, [x0, #12]
    1bb8:	and	w0, w0, #0xff00
    1bbc:	cmp	w0, #0x0
    1bc0:	b.eq	1be0 <PerlIOScalar_pushed+0x418>  // b.none
    1bc4:	ldr	x0, [sp, #72]
    1bc8:	ldr	x0, [x0, #32]
    1bcc:	mov	x1, x0
    1bd0:	ldr	x0, [sp, #56]
    1bd4:	bl	1390 <Perl_sv_len@plt>
    1bd8:	mov	x1, x0
    1bdc:	b	1be4 <PerlIOScalar_pushed+0x41c>
    1be0:	mov	x1, #0x0                   	// #0
    1be4:	ldr	x0, [sp, #72]
    1be8:	str	x1, [x0, #40]
    1bec:	b	1bf8 <PerlIOScalar_pushed+0x430>
    1bf0:	ldr	x0, [sp, #72]
    1bf4:	str	xzr, [x0, #40]
    1bf8:	ldr	x0, [sp, #72]
    1bfc:	ldr	x0, [x0, #32]
    1c00:	ldr	w0, [x0, #12]
    1c04:	lsr	w0, w0, #22
    1c08:	mov	w0, w0
    1c0c:	and	x0, x0, #0x1
    1c10:	cmp	x0, #0x0
    1c14:	b.eq	1c2c <PerlIOScalar_pushed+0x464>  // b.none
    1c18:	ldr	x0, [sp, #72]
    1c1c:	ldr	x0, [x0, #32]
    1c20:	mov	x1, x0
    1c24:	ldr	x0, [sp, #56]
    1c28:	bl	13d0 <Perl_mg_set@plt>
    1c2c:	ldr	x0, [sp, #96]
    1c30:	ldp	x29, x30, [sp], #112
    1c34:	ret

0000000000001c38 <PerlIOScalar_popped>:
    1c38:	stp	x29, x30, [sp, #-48]!
    1c3c:	mov	x29, sp
    1c40:	str	x0, [sp, #24]
    1c44:	str	x1, [sp, #16]
    1c48:	ldr	x0, [sp, #16]
    1c4c:	ldr	x0, [x0]
    1c50:	str	x0, [sp, #32]
    1c54:	ldr	x0, [sp, #32]
    1c58:	ldr	x0, [x0, #32]
    1c5c:	cmp	x0, #0x0
    1c60:	b.eq	1c88 <PerlIOScalar_popped+0x50>  // b.none
    1c64:	ldr	x0, [sp, #32]
    1c68:	ldr	x0, [x0, #32]
    1c6c:	str	x0, [sp, #40]
    1c70:	ldr	x0, [sp, #40]
    1c74:	mov	x1, x0
    1c78:	ldr	x0, [sp, #24]
    1c7c:	bl	1634 <S_SvREFCNT_dec>
    1c80:	ldr	x0, [sp, #32]
    1c84:	str	xzr, [x0, #32]
    1c88:	mov	x0, #0x0                   	// #0
    1c8c:	ldp	x29, x30, [sp], #48
    1c90:	ret

0000000000001c94 <PerlIOScalar_close>:
    1c94:	stp	x29, x30, [sp, #-48]!
    1c98:	mov	x29, sp
    1c9c:	str	x0, [sp, #24]
    1ca0:	str	x1, [sp, #16]
    1ca4:	ldr	x1, [sp, #16]
    1ca8:	ldr	x0, [sp, #24]
    1cac:	bl	1360 <PerlIOBase_close@plt>
    1cb0:	str	x0, [sp, #40]
    1cb4:	ldr	x0, [sp, #16]
    1cb8:	ldr	x0, [x0]
    1cbc:	ldr	w1, [x0, #16]
    1cc0:	ldr	x0, [sp, #16]
    1cc4:	ldr	x0, [x0]
    1cc8:	and	w1, w1, #0xfff9ffff
    1ccc:	str	w1, [x0, #16]
    1cd0:	ldr	x0, [sp, #40]
    1cd4:	ldp	x29, x30, [sp], #48
    1cd8:	ret

0000000000001cdc <PerlIOScalar_fileno>:
    1cdc:	sub	sp, sp, #0x10
    1ce0:	str	x0, [sp, #8]
    1ce4:	str	x1, [sp]
    1ce8:	mov	x0, #0xffffffffffffffff    	// #-1
    1cec:	add	sp, sp, #0x10
    1cf0:	ret

0000000000001cf4 <PerlIOScalar_seek>:
    1cf4:	stp	x29, x30, [sp, #-80]!
    1cf8:	mov	x29, sp
    1cfc:	str	x0, [sp, #40]
    1d00:	str	x1, [sp, #32]
    1d04:	str	x2, [sp, #24]
    1d08:	str	w3, [sp, #20]
    1d0c:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1d10:	ldr	x0, [x0, #4048]
    1d14:	ldr	x1, [x0]
    1d18:	str	x1, [sp, #72]
    1d1c:	mov	x1, #0x0                   	// #0
    1d20:	ldr	x0, [sp, #32]
    1d24:	ldr	x0, [x0]
    1d28:	str	x0, [sp, #64]
    1d2c:	ldr	w0, [sp, #20]
    1d30:	cmp	w0, #0x2
    1d34:	b.eq	1d84 <PerlIOScalar_seek+0x90>  // b.none
    1d38:	ldr	w0, [sp, #20]
    1d3c:	cmp	w0, #0x2
    1d40:	b.gt	1df0 <PerlIOScalar_seek+0xfc>
    1d44:	ldr	w0, [sp, #20]
    1d48:	cmp	w0, #0x0
    1d4c:	b.eq	1d60 <PerlIOScalar_seek+0x6c>  // b.none
    1d50:	ldr	w0, [sp, #20]
    1d54:	cmp	w0, #0x1
    1d58:	b.eq	1d6c <PerlIOScalar_seek+0x78>  // b.none
    1d5c:	b	1df0 <PerlIOScalar_seek+0xfc>
    1d60:	ldr	x0, [sp, #24]
    1d64:	str	x0, [sp, #56]
    1d68:	b	1e08 <PerlIOScalar_seek+0x114>
    1d6c:	ldr	x0, [sp, #64]
    1d70:	ldr	x0, [x0, #40]
    1d74:	ldr	x1, [sp, #24]
    1d78:	add	x0, x1, x0
    1d7c:	str	x0, [sp, #56]
    1d80:	b	1e08 <PerlIOScalar_seek+0x114>
    1d84:	ldr	x0, [sp, #64]
    1d88:	ldr	x0, [x0, #32]
    1d8c:	ldr	w1, [x0, #12]
    1d90:	mov	w0, #0x400                 	// #1024
    1d94:	movk	w0, #0x20, lsl #16
    1d98:	and	w0, w1, w0
    1d9c:	cmp	w0, #0x400
    1da0:	b.ne	1dbc <PerlIOScalar_seek+0xc8>  // b.any
    1da4:	ldr	x0, [sp, #64]
    1da8:	ldr	x0, [x0, #32]
    1dac:	ldr	x0, [x0]
    1db0:	ldr	x0, [x0, #16]
    1db4:	str	x0, [sp, #48]
    1db8:	b	1ddc <PerlIOScalar_seek+0xe8>
    1dbc:	ldr	x0, [sp, #64]
    1dc0:	ldr	x0, [x0, #32]
    1dc4:	add	x1, sp, #0x30
    1dc8:	mov	w3, #0x2                   	// #2
    1dcc:	mov	x2, x1
    1dd0:	mov	x1, x0
    1dd4:	ldr	x0, [sp, #40]
    1dd8:	bl	1330 <Perl_sv_2pv_flags@plt>
    1ddc:	ldr	x1, [sp, #24]
    1de0:	ldr	x0, [sp, #48]
    1de4:	add	x0, x1, x0
    1de8:	str	x0, [sp, #56]
    1dec:	b	1e08 <PerlIOScalar_seek+0x114>
    1df0:	bl	1430 <__errno_location@plt>
    1df4:	mov	x1, x0
    1df8:	mov	w0, #0x16                  	// #22
    1dfc:	str	w0, [x1]
    1e00:	mov	x0, #0xffffffffffffffff    	// #-1
    1e04:	b	1e68 <PerlIOScalar_seek+0x174>
    1e08:	ldr	x0, [sp, #56]
    1e0c:	cmp	x0, #0x0
    1e10:	b.ge	1e58 <PerlIOScalar_seek+0x164>  // b.tcont
    1e14:	mov	w1, #0x8                   	// #8
    1e18:	ldr	x0, [sp, #40]
    1e1c:	bl	1420 <Perl_ckwarn@plt>
    1e20:	and	w0, w0, #0xff
    1e24:	cmp	w0, #0x0
    1e28:	b.eq	1e40 <PerlIOScalar_seek+0x14c>  // b.none
    1e2c:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    1e30:	add	x2, x0, #0xd78
    1e34:	mov	w1, #0x8                   	// #8
    1e38:	ldr	x0, [sp, #40]
    1e3c:	bl	12e0 <Perl_warner@plt>
    1e40:	bl	1430 <__errno_location@plt>
    1e44:	mov	x1, x0
    1e48:	mov	w0, #0x16                  	// #22
    1e4c:	str	w0, [x1]
    1e50:	mov	x0, #0xffffffffffffffff    	// #-1
    1e54:	b	1e68 <PerlIOScalar_seek+0x174>
    1e58:	ldr	x0, [sp, #64]
    1e5c:	ldr	x1, [sp, #56]
    1e60:	str	x1, [x0, #40]
    1e64:	mov	x0, #0x0                   	// #0
    1e68:	mov	x1, x0
    1e6c:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1e70:	ldr	x0, [x0, #4048]
    1e74:	ldr	x2, [sp, #72]
    1e78:	ldr	x0, [x0]
    1e7c:	eor	x0, x2, x0
    1e80:	cmp	x0, #0x0
    1e84:	b.eq	1e8c <PerlIOScalar_seek+0x198>  // b.none
    1e88:	bl	1350 <__stack_chk_fail@plt>
    1e8c:	mov	x0, x1
    1e90:	ldp	x29, x30, [sp], #80
    1e94:	ret

0000000000001e98 <PerlIOScalar_tell>:
    1e98:	sub	sp, sp, #0x20
    1e9c:	str	x0, [sp, #8]
    1ea0:	str	x1, [sp]
    1ea4:	ldr	x0, [sp]
    1ea8:	ldr	x0, [x0]
    1eac:	str	x0, [sp, #24]
    1eb0:	ldr	x0, [sp, #24]
    1eb4:	ldr	x0, [x0, #40]
    1eb8:	add	sp, sp, #0x20
    1ebc:	ret

0000000000001ec0 <PerlIOScalar_read>:
    1ec0:	stp	x29, x30, [sp, #-96]!
    1ec4:	mov	x29, sp
    1ec8:	str	x0, [sp, #40]
    1ecc:	str	x1, [sp, #32]
    1ed0:	str	x2, [sp, #24]
    1ed4:	str	x3, [sp, #16]
    1ed8:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    1edc:	ldr	x0, [x0, #4048]
    1ee0:	ldr	x1, [x0]
    1ee4:	str	x1, [sp, #88]
    1ee8:	mov	x1, #0x0                   	// #0
    1eec:	ldr	x0, [sp, #32]
    1ef0:	cmp	x0, #0x0
    1ef4:	b.ne	1f00 <PerlIOScalar_read+0x40>  // b.any
    1ef8:	mov	x0, #0x0                   	// #0
    1efc:	b	2118 <PerlIOScalar_read+0x258>
    1f00:	ldr	x0, [sp, #32]
    1f04:	ldr	x0, [x0]
    1f08:	ldr	w0, [x0, #16]
    1f0c:	and	w0, w0, #0x400
    1f10:	cmp	w0, #0x0
    1f14:	b.ne	1f58 <PerlIOScalar_read+0x98>  // b.any
    1f18:	ldr	x0, [sp, #32]
    1f1c:	ldr	x0, [x0]
    1f20:	ldr	w1, [x0, #16]
    1f24:	ldr	x0, [sp, #32]
    1f28:	ldr	x0, [x0]
    1f2c:	orr	w1, w1, #0x800
    1f30:	str	w1, [x0, #16]
    1f34:	bl	1430 <__errno_location@plt>
    1f38:	mov	x1, x0
    1f3c:	mov	w0, #0x9                   	// #9
    1f40:	str	w0, [x1]
    1f44:	ldr	x1, [sp, #32]
    1f48:	ldr	x0, [sp, #40]
    1f4c:	bl	1240 <Perl_PerlIO_save_errno@plt>
    1f50:	mov	x0, #0x0                   	// #0
    1f54:	b	2118 <PerlIOScalar_read+0x258>
    1f58:	ldr	x0, [sp, #32]
    1f5c:	ldr	x0, [x0]
    1f60:	str	x0, [sp, #72]
    1f64:	ldr	x0, [sp, #72]
    1f68:	ldr	x0, [x0, #32]
    1f6c:	str	x0, [sp, #80]
    1f70:	ldr	x0, [sp, #80]
    1f74:	ldr	w1, [x0, #12]
    1f78:	mov	w0, #0x400                 	// #1024
    1f7c:	movk	w0, #0x20, lsl #16
    1f80:	and	w0, w1, w0
    1f84:	cmp	w0, #0x400
    1f88:	b.ne	1fa8 <PerlIOScalar_read+0xe8>  // b.any
    1f8c:	ldr	x0, [sp, #80]
    1f90:	ldr	x0, [x0]
    1f94:	ldr	x0, [x0, #16]
    1f98:	str	x0, [sp, #48]
    1f9c:	ldr	x0, [sp, #80]
    1fa0:	ldr	x0, [x0, #16]
    1fa4:	b	1fc0 <PerlIOScalar_read+0x100>
    1fa8:	add	x0, sp, #0x30
    1fac:	mov	w3, #0x2                   	// #2
    1fb0:	mov	x2, x0
    1fb4:	ldr	x1, [sp, #80]
    1fb8:	ldr	x0, [sp, #40]
    1fbc:	bl	1330 <Perl_sv_2pv_flags@plt>
    1fc0:	str	x0, [sp, #56]
    1fc4:	ldr	x0, [sp, #80]
    1fc8:	ldr	w0, [x0, #12]
    1fcc:	and	w0, w0, #0x20000000
    1fd0:	cmp	w0, #0x0
    1fd4:	b.eq	2090 <PerlIOScalar_read+0x1d0>  // b.none
    1fd8:	mov	w2, #0x1                   	// #1
    1fdc:	ldr	x1, [sp, #80]
    1fe0:	ldr	x0, [sp, #40]
    1fe4:	bl	1290 <Perl_sv_utf8_downgrade@plt>
    1fe8:	and	w0, w0, #0xff
    1fec:	cmp	w0, #0x0
    1ff0:	b.eq	204c <PerlIOScalar_read+0x18c>  // b.none
    1ff4:	ldr	x0, [sp, #80]
    1ff8:	ldr	w1, [x0, #12]
    1ffc:	mov	w0, #0x400                 	// #1024
    2000:	movk	w0, #0x20, lsl #16
    2004:	and	w0, w1, w0
    2008:	cmp	w0, #0x400
    200c:	b.ne	202c <PerlIOScalar_read+0x16c>  // b.any
    2010:	ldr	x0, [sp, #80]
    2014:	ldr	x0, [x0]
    2018:	ldr	x0, [x0, #16]
    201c:	str	x0, [sp, #48]
    2020:	ldr	x0, [sp, #80]
    2024:	ldr	x0, [x0, #16]
    2028:	b	2044 <PerlIOScalar_read+0x184>
    202c:	add	x0, sp, #0x30
    2030:	mov	w3, #0x0                   	// #0
    2034:	mov	x2, x0
    2038:	ldr	x1, [sp, #80]
    203c:	ldr	x0, [sp, #40]
    2040:	bl	1330 <Perl_sv_2pv_flags@plt>
    2044:	str	x0, [sp, #56]
    2048:	b	2090 <PerlIOScalar_read+0x1d0>
    204c:	mov	w1, #0x2c                  	// #44
    2050:	ldr	x0, [sp, #40]
    2054:	bl	1420 <Perl_ckwarn@plt>
    2058:	and	w0, w0, #0xff
    205c:	cmp	w0, #0x0
    2060:	b.eq	2078 <PerlIOScalar_read+0x1b8>  // b.none
    2064:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    2068:	add	x2, x0, #0xd18
    206c:	mov	w1, #0x2c                  	// #44
    2070:	ldr	x0, [sp, #40]
    2074:	bl	12e0 <Perl_warner@plt>
    2078:	bl	1430 <__errno_location@plt>
    207c:	mov	x1, x0
    2080:	mov	w0, #0x16                  	// #22
    2084:	str	w0, [x1]
    2088:	mov	x0, #0xffffffffffffffff    	// #-1
    208c:	b	2118 <PerlIOScalar_read+0x258>
    2090:	ldr	x0, [sp, #72]
    2094:	ldr	x0, [x0, #40]
    2098:	ldr	x1, [sp, #48]
    209c:	cmp	x0, x1
    20a0:	b.lt	20ac <PerlIOScalar_read+0x1ec>  // b.tstop
    20a4:	mov	x0, #0x0                   	// #0
    20a8:	b	2118 <PerlIOScalar_read+0x258>
    20ac:	ldr	x0, [sp, #48]
    20b0:	ldr	x1, [sp, #72]
    20b4:	ldr	x1, [x1, #40]
    20b8:	sub	x0, x0, x1
    20bc:	str	x0, [sp, #64]
    20c0:	ldr	x1, [sp, #64]
    20c4:	ldr	x0, [sp, #16]
    20c8:	cmp	x1, x0
    20cc:	b.ls	20d8 <PerlIOScalar_read+0x218>  // b.plast
    20d0:	ldr	x0, [sp, #16]
    20d4:	str	x0, [sp, #64]
    20d8:	ldr	x0, [sp, #72]
    20dc:	ldr	x0, [x0, #40]
    20e0:	mov	x1, x0
    20e4:	ldr	x0, [sp, #56]
    20e8:	add	x0, x0, x1
    20ec:	ldr	x2, [sp, #64]
    20f0:	mov	x1, x0
    20f4:	ldr	x0, [sp, #24]
    20f8:	bl	1230 <memcpy@plt>
    20fc:	ldr	x0, [sp, #72]
    2100:	ldr	x1, [x0, #40]
    2104:	ldr	x0, [sp, #64]
    2108:	add	x1, x1, x0
    210c:	ldr	x0, [sp, #72]
    2110:	str	x1, [x0, #40]
    2114:	ldr	x0, [sp, #64]
    2118:	mov	x1, x0
    211c:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    2120:	ldr	x0, [x0, #4048]
    2124:	ldr	x2, [sp, #88]
    2128:	ldr	x0, [x0]
    212c:	eor	x0, x2, x0
    2130:	cmp	x0, #0x0
    2134:	b.eq	213c <PerlIOScalar_read+0x27c>  // b.none
    2138:	bl	1350 <__stack_chk_fail@plt>
    213c:	mov	x0, x1
    2140:	ldp	x29, x30, [sp], #96
    2144:	ret

0000000000002148 <PerlIOScalar_write>:
    2148:	stp	x29, x30, [sp, #-96]!
    214c:	mov	x29, sp
    2150:	str	x0, [sp, #40]
    2154:	str	x1, [sp, #32]
    2158:	str	x2, [sp, #24]
    215c:	str	x3, [sp, #16]
    2160:	ldr	x0, [sp, #32]
    2164:	ldr	x0, [x0]
    2168:	ldr	w0, [x0, #16]
    216c:	and	w0, w0, #0x200
    2170:	cmp	w0, #0x0
    2174:	b.eq	25b8 <PerlIOScalar_write+0x470>  // b.none
    2178:	ldr	x0, [sp, #32]
    217c:	ldr	x0, [x0]
    2180:	str	x0, [sp, #72]
    2184:	ldr	x0, [sp, #72]
    2188:	ldr	x0, [x0, #32]
    218c:	str	x0, [sp, #80]
    2190:	ldr	x0, [sp, #80]
    2194:	ldr	w0, [x0, #12]
    2198:	lsr	w0, w0, #21
    219c:	mov	w0, w0
    21a0:	and	x0, x0, #0x1
    21a4:	cmp	x0, #0x0
    21a8:	b.eq	21c0 <PerlIOScalar_write+0x78>  // b.none
    21ac:	ldr	x1, [sp, #80]
    21b0:	ldr	x0, [sp, #40]
    21b4:	bl	13e0 <Perl_mg_get@plt>
    21b8:	cmp	w0, #0x0
    21bc:	nop
    21c0:	ldr	x0, [sp, #80]
    21c4:	ldr	w0, [x0, #12]
    21c8:	and	w0, w0, #0x800
    21cc:	cmp	w0, #0x0
    21d0:	b.ne	21e4 <PerlIOScalar_write+0x9c>  // b.any
    21d4:	mov	w2, #0x0                   	// #0
    21d8:	ldr	x1, [sp, #80]
    21dc:	ldr	x0, [sp, #40]
    21e0:	bl	12c0 <Perl_sv_force_normal_flags@plt>
    21e4:	ldr	x0, [sp, #80]
    21e8:	ldr	w0, [x0, #12]
    21ec:	and	w0, w0, #0xff00
    21f0:	cmp	w0, #0x0
    21f4:	b.eq	2228 <PerlIOScalar_write+0xe0>  // b.none
    21f8:	ldr	x0, [sp, #80]
    21fc:	ldr	w1, [x0, #12]
    2200:	mov	w0, #0x8f00                	// #36608
    2204:	movk	w0, #0x19a1, lsl #16
    2208:	and	w0, w1, w0
    220c:	cmp	w0, #0x400
    2210:	b.eq	2228 <PerlIOScalar_write+0xe0>  // b.none
    2214:	mov	w3, #0x0                   	// #0
    2218:	mov	x2, #0x0                   	// #0
    221c:	ldr	x1, [sp, #80]
    2220:	ldr	x0, [sp, #40]
    2224:	bl	1270 <Perl_sv_pvn_force_flags@plt>
    2228:	ldr	x0, [sp, #80]
    222c:	ldr	w0, [x0, #12]
    2230:	and	w0, w0, #0x20000000
    2234:	cmp	w0, #0x0
    2238:	b.eq	22a4 <PerlIOScalar_write+0x15c>  // b.none
    223c:	mov	w2, #0x1                   	// #1
    2240:	ldr	x1, [sp, #80]
    2244:	ldr	x0, [sp, #40]
    2248:	bl	1290 <Perl_sv_utf8_downgrade@plt>
    224c:	and	w0, w0, #0xff
    2250:	eor	w0, w0, #0x1
    2254:	and	w0, w0, #0xff
    2258:	cmp	w0, #0x0
    225c:	b.eq	22a4 <PerlIOScalar_write+0x15c>  // b.none
    2260:	mov	w1, #0x2c                  	// #44
    2264:	ldr	x0, [sp, #40]
    2268:	bl	1420 <Perl_ckwarn@plt>
    226c:	and	w0, w0, #0xff
    2270:	cmp	w0, #0x0
    2274:	b.eq	228c <PerlIOScalar_write+0x144>  // b.none
    2278:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    227c:	add	x2, x0, #0xd18
    2280:	mov	w1, #0x2c                  	// #44
    2284:	ldr	x0, [sp, #40]
    2288:	bl	12e0 <Perl_warner@plt>
    228c:	bl	1430 <__errno_location@plt>
    2290:	mov	x1, x0
    2294:	mov	w0, #0x16                  	// #22
    2298:	str	w0, [x1]
    229c:	mov	x0, #0x0                   	// #0
    22a0:	b	25bc <PerlIOScalar_write+0x474>
    22a4:	ldr	x0, [sp, #32]
    22a8:	ldr	x0, [x0]
    22ac:	ldr	w0, [x0, #16]
    22b0:	and	w0, w0, #0x2000
    22b4:	cmp	w0, #0x0
    22b8:	b.eq	2360 <PerlIOScalar_write+0x218>  // b.none
    22bc:	ldr	x0, [sp, #80]
    22c0:	ldr	w0, [x0, #12]
    22c4:	and	w0, w0, #0x10000000
    22c8:	cmp	w0, #0x0
    22cc:	b.ne	22fc <PerlIOScalar_write+0x1b4>  // b.any
    22d0:	ldr	x0, [sp, #80]
    22d4:	ldr	x0, [x0]
    22d8:	ldr	x1, [x0, #24]
    22dc:	ldr	x0, [sp, #80]
    22e0:	ldr	x0, [x0]
    22e4:	ldr	x2, [x0, #16]
    22e8:	ldr	x0, [sp, #16]
    22ec:	add	x0, x2, x0
    22f0:	add	x0, x0, #0x1
    22f4:	cmp	x1, x0
    22f8:	b.cs	2328 <PerlIOScalar_write+0x1e0>  // b.hs, b.nlast
    22fc:	ldr	x0, [sp, #80]
    2300:	ldr	x0, [x0]
    2304:	ldr	x1, [x0, #16]
    2308:	ldr	x0, [sp, #16]
    230c:	add	x0, x1, x0
    2310:	add	x0, x0, #0x1
    2314:	mov	x2, x0
    2318:	ldr	x1, [sp, #80]
    231c:	ldr	x0, [sp, #40]
    2320:	bl	1380 <Perl_sv_grow@plt>
    2324:	b	2330 <PerlIOScalar_write+0x1e8>
    2328:	ldr	x0, [sp, #80]
    232c:	ldr	x0, [x0, #16]
    2330:	str	x0, [sp, #64]
    2334:	ldr	x0, [sp, #80]
    2338:	ldr	x0, [x0]
    233c:	ldr	x0, [x0, #16]
    2340:	str	x0, [sp, #56]
    2344:	ldr	x1, [sp, #56]
    2348:	ldr	x0, [sp, #16]
    234c:	add	x0, x1, x0
    2350:	mov	x1, x0
    2354:	ldr	x0, [sp, #72]
    2358:	str	x1, [x0, #40]
    235c:	b	250c <PerlIOScalar_write+0x3c4>
    2360:	ldr	x0, [sp, #80]
    2364:	ldr	x0, [x0]
    2368:	ldr	x0, [x0, #16]
    236c:	str	x0, [sp, #88]
    2370:	ldr	x0, [sp, #72]
    2374:	ldr	x0, [x0, #40]
    2378:	mov	x1, x0
    237c:	ldr	x0, [sp, #88]
    2380:	cmp	x0, x1
    2384:	b.cs	2438 <PerlIOScalar_write+0x2f0>  // b.hs, b.nlast
    2388:	ldr	x0, [sp, #80]
    238c:	ldr	w0, [x0, #12]
    2390:	and	w0, w0, #0x10000000
    2394:	cmp	w0, #0x0
    2398:	b.ne	23c8 <PerlIOScalar_write+0x280>  // b.any
    239c:	ldr	x0, [sp, #80]
    23a0:	ldr	x0, [x0]
    23a4:	ldr	x1, [x0, #24]
    23a8:	ldr	x0, [sp, #72]
    23ac:	ldr	x0, [x0, #40]
    23b0:	mov	x2, x0
    23b4:	ldr	x0, [sp, #16]
    23b8:	add	x0, x2, x0
    23bc:	add	x0, x0, #0x1
    23c0:	cmp	x1, x0
    23c4:	b.cs	23f4 <PerlIOScalar_write+0x2ac>  // b.hs, b.nlast
    23c8:	ldr	x0, [sp, #72]
    23cc:	ldr	x0, [x0, #40]
    23d0:	mov	x1, x0
    23d4:	ldr	x0, [sp, #16]
    23d8:	add	x0, x1, x0
    23dc:	add	x0, x0, #0x1
    23e0:	mov	x2, x0
    23e4:	ldr	x1, [sp, #80]
    23e8:	ldr	x0, [sp, #40]
    23ec:	bl	1380 <Perl_sv_grow@plt>
    23f0:	b	23fc <PerlIOScalar_write+0x2b4>
    23f4:	ldr	x0, [sp, #80]
    23f8:	ldr	x0, [x0, #16]
    23fc:	str	x0, [sp, #64]
    2400:	ldr	x0, [sp, #80]
    2404:	ldr	x1, [x0, #16]
    2408:	ldr	x0, [sp, #88]
    240c:	add	x3, x1, x0
    2410:	ldr	x0, [sp, #72]
    2414:	ldr	x0, [x0, #40]
    2418:	mov	x1, x0
    241c:	ldr	x0, [sp, #88]
    2420:	sub	x0, x1, x0
    2424:	mov	x2, x0
    2428:	mov	w1, #0x0                   	// #0
    242c:	mov	x0, x3
    2430:	bl	1320 <memset@plt>
    2434:	b	24e0 <PerlIOScalar_write+0x398>
    2438:	ldr	x0, [sp, #72]
    243c:	ldr	x0, [x0, #40]
    2440:	mov	x1, x0
    2444:	ldr	x0, [sp, #16]
    2448:	add	x0, x1, x0
    244c:	ldr	x1, [sp, #88]
    2450:	cmp	x1, x0
    2454:	b.hi	24d4 <PerlIOScalar_write+0x38c>  // b.pmore
    2458:	ldr	x0, [sp, #80]
    245c:	ldr	w0, [x0, #12]
    2460:	and	w0, w0, #0x10000000
    2464:	cmp	w0, #0x0
    2468:	b.ne	2498 <PerlIOScalar_write+0x350>  // b.any
    246c:	ldr	x0, [sp, #80]
    2470:	ldr	x0, [x0]
    2474:	ldr	x1, [x0, #24]
    2478:	ldr	x0, [sp, #72]
    247c:	ldr	x0, [x0, #40]
    2480:	mov	x2, x0
    2484:	ldr	x0, [sp, #16]
    2488:	add	x0, x2, x0
    248c:	add	x0, x0, #0x1
    2490:	cmp	x1, x0
    2494:	b.cs	24c4 <PerlIOScalar_write+0x37c>  // b.hs, b.nlast
    2498:	ldr	x0, [sp, #72]
    249c:	ldr	x0, [x0, #40]
    24a0:	mov	x1, x0
    24a4:	ldr	x0, [sp, #16]
    24a8:	add	x0, x1, x0
    24ac:	add	x0, x0, #0x1
    24b0:	mov	x2, x0
    24b4:	ldr	x1, [sp, #80]
    24b8:	ldr	x0, [sp, #40]
    24bc:	bl	1380 <Perl_sv_grow@plt>
    24c0:	b	24cc <PerlIOScalar_write+0x384>
    24c4:	ldr	x0, [sp, #80]
    24c8:	ldr	x0, [x0, #16]
    24cc:	str	x0, [sp, #64]
    24d0:	b	24e0 <PerlIOScalar_write+0x398>
    24d4:	ldr	x0, [sp, #80]
    24d8:	ldr	x0, [x0, #16]
    24dc:	str	x0, [sp, #64]
    24e0:	ldr	x0, [sp, #72]
    24e4:	ldr	x0, [x0, #40]
    24e8:	str	x0, [sp, #56]
    24ec:	ldr	x0, [sp, #72]
    24f0:	ldr	x0, [x0, #40]
    24f4:	mov	x1, x0
    24f8:	ldr	x0, [sp, #16]
    24fc:	add	x0, x1, x0
    2500:	mov	x1, x0
    2504:	ldr	x0, [sp, #72]
    2508:	str	x1, [x0, #40]
    250c:	ldr	x0, [sp, #56]
    2510:	ldr	x1, [sp, #64]
    2514:	add	x0, x1, x0
    2518:	ldr	x2, [sp, #16]
    251c:	ldr	x1, [sp, #24]
    2520:	bl	1250 <memmove@plt>
    2524:	ldr	x0, [sp, #72]
    2528:	ldr	x0, [x0, #40]
    252c:	mov	x1, x0
    2530:	ldr	x0, [sp, #80]
    2534:	ldr	x0, [x0]
    2538:	ldr	x0, [x0, #16]
    253c:	cmp	x1, x0
    2540:	b.ls	2570 <PerlIOScalar_write+0x428>  // b.plast
    2544:	ldr	x0, [sp, #72]
    2548:	ldr	x1, [x0, #40]
    254c:	ldr	x0, [sp, #80]
    2550:	ldr	x0, [x0]
    2554:	str	x1, [x0, #16]
    2558:	ldr	x0, [sp, #72]
    255c:	ldr	x0, [x0, #40]
    2560:	mov	x1, x0
    2564:	ldr	x0, [sp, #64]
    2568:	add	x0, x0, x1
    256c:	strb	wzr, [x0]
    2570:	ldr	x0, [sp, #80]
    2574:	ldr	w1, [x0, #12]
    2578:	mov	w0, #0x4400                	// #17408
    257c:	orr	w1, w1, w0
    2580:	ldr	x0, [sp, #80]
    2584:	str	w1, [x0, #12]
    2588:	ldr	x0, [sp, #80]
    258c:	ldr	w0, [x0, #12]
    2590:	lsr	w0, w0, #22
    2594:	mov	w0, w0
    2598:	and	x0, x0, #0x1
    259c:	cmp	x0, #0x0
    25a0:	b.eq	25b0 <PerlIOScalar_write+0x468>  // b.none
    25a4:	ldr	x1, [sp, #80]
    25a8:	ldr	x0, [sp, #40]
    25ac:	bl	13d0 <Perl_mg_set@plt>
    25b0:	ldr	x0, [sp, #16]
    25b4:	b	25bc <PerlIOScalar_write+0x474>
    25b8:	mov	x0, #0x0                   	// #0
    25bc:	ldp	x29, x30, [sp], #96
    25c0:	ret

00000000000025c4 <PerlIOScalar_fill>:
    25c4:	sub	sp, sp, #0x10
    25c8:	str	x0, [sp, #8]
    25cc:	str	x1, [sp]
    25d0:	mov	x0, #0xffffffffffffffff    	// #-1
    25d4:	add	sp, sp, #0x10
    25d8:	ret

00000000000025dc <PerlIOScalar_flush>:
    25dc:	sub	sp, sp, #0x10
    25e0:	str	x0, [sp, #8]
    25e4:	str	x1, [sp]
    25e8:	mov	x0, #0x0                   	// #0
    25ec:	add	sp, sp, #0x10
    25f0:	ret

00000000000025f4 <PerlIOScalar_get_base>:
    25f4:	stp	x29, x30, [sp, #-48]!
    25f8:	mov	x29, sp
    25fc:	str	x0, [sp, #24]
    2600:	str	x1, [sp, #16]
    2604:	ldr	x0, [sp, #16]
    2608:	ldr	x0, [x0]
    260c:	str	x0, [sp, #40]
    2610:	ldr	x0, [sp, #16]
    2614:	ldr	x0, [x0]
    2618:	ldr	w0, [x0, #16]
    261c:	and	w0, w0, #0x400
    2620:	cmp	w0, #0x0
    2624:	b.eq	26b4 <PerlIOScalar_get_base+0xc0>  // b.none
    2628:	ldr	x0, [sp, #40]
    262c:	ldr	x0, [x0, #32]
    2630:	ldr	w0, [x0, #12]
    2634:	lsr	w0, w0, #21
    2638:	mov	w0, w0
    263c:	and	x0, x0, #0x1
    2640:	cmp	x0, #0x0
    2644:	b.eq	2664 <PerlIOScalar_get_base+0x70>  // b.none
    2648:	ldr	x0, [sp, #40]
    264c:	ldr	x0, [x0, #32]
    2650:	mov	x1, x0
    2654:	ldr	x0, [sp, #24]
    2658:	bl	13e0 <Perl_mg_get@plt>
    265c:	cmp	w0, #0x0
    2660:	nop
    2664:	ldr	x0, [sp, #40]
    2668:	ldr	x0, [x0, #32]
    266c:	ldr	w1, [x0, #12]
    2670:	mov	w0, #0x400                 	// #1024
    2674:	movk	w0, #0x20, lsl #16
    2678:	and	w0, w1, w0
    267c:	cmp	w0, #0x400
    2680:	b.ne	2694 <PerlIOScalar_get_base+0xa0>  // b.any
    2684:	ldr	x0, [sp, #40]
    2688:	ldr	x0, [x0, #32]
    268c:	ldr	x0, [x0, #16]
    2690:	b	26b8 <PerlIOScalar_get_base+0xc4>
    2694:	ldr	x0, [sp, #40]
    2698:	ldr	x0, [x0, #32]
    269c:	mov	w3, #0x2                   	// #2
    26a0:	mov	x2, #0x0                   	// #0
    26a4:	mov	x1, x0
    26a8:	ldr	x0, [sp, #24]
    26ac:	bl	1330 <Perl_sv_2pv_flags@plt>
    26b0:	b	26b8 <PerlIOScalar_get_base+0xc4>
    26b4:	mov	x0, #0x0                   	// #0
    26b8:	ldp	x29, x30, [sp], #48
    26bc:	ret

00000000000026c0 <PerlIOScalar_get_ptr>:
    26c0:	stp	x29, x30, [sp, #-48]!
    26c4:	mov	x29, sp
    26c8:	str	x0, [sp, #24]
    26cc:	str	x1, [sp, #16]
    26d0:	ldr	x0, [sp, #16]
    26d4:	ldr	x0, [x0]
    26d8:	ldr	w0, [x0, #16]
    26dc:	and	w0, w0, #0x400
    26e0:	cmp	w0, #0x0
    26e4:	b.eq	2714 <PerlIOScalar_get_ptr+0x54>  // b.none
    26e8:	ldr	x0, [sp, #16]
    26ec:	ldr	x0, [x0]
    26f0:	str	x0, [sp, #40]
    26f4:	ldr	x1, [sp, #16]
    26f8:	ldr	x0, [sp, #24]
    26fc:	bl	25f4 <PerlIOScalar_get_base>
    2700:	mov	x1, x0
    2704:	ldr	x0, [sp, #40]
    2708:	ldr	x0, [x0, #40]
    270c:	add	x0, x1, x0
    2710:	b	2718 <PerlIOScalar_get_ptr+0x58>
    2714:	mov	x0, #0x0                   	// #0
    2718:	ldp	x29, x30, [sp], #48
    271c:	ret

0000000000002720 <PerlIOScalar_get_cnt>:
    2720:	stp	x29, x30, [sp, #-64]!
    2724:	mov	x29, sp
    2728:	str	x0, [sp, #24]
    272c:	str	x1, [sp, #16]
    2730:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    2734:	ldr	x0, [x0, #4048]
    2738:	ldr	x1, [x0]
    273c:	str	x1, [sp, #56]
    2740:	mov	x1, #0x0                   	// #0
    2744:	ldr	x0, [sp, #16]
    2748:	ldr	x0, [x0]
    274c:	ldr	w0, [x0, #16]
    2750:	and	w0, w0, #0x400
    2754:	cmp	w0, #0x0
    2758:	b.eq	27f0 <PerlIOScalar_get_cnt+0xd0>  // b.none
    275c:	ldr	x0, [sp, #16]
    2760:	ldr	x0, [x0]
    2764:	str	x0, [sp, #48]
    2768:	ldr	x0, [sp, #48]
    276c:	ldr	x0, [x0, #32]
    2770:	ldr	w1, [x0, #12]
    2774:	mov	w0, #0x400                 	// #1024
    2778:	movk	w0, #0x20, lsl #16
    277c:	and	w0, w1, w0
    2780:	cmp	w0, #0x400
    2784:	b.ne	27a0 <PerlIOScalar_get_cnt+0x80>  // b.any
    2788:	ldr	x0, [sp, #48]
    278c:	ldr	x0, [x0, #32]
    2790:	ldr	x0, [x0]
    2794:	ldr	x0, [x0, #16]
    2798:	str	x0, [sp, #40]
    279c:	b	27c0 <PerlIOScalar_get_cnt+0xa0>
    27a0:	ldr	x0, [sp, #48]
    27a4:	ldr	x0, [x0, #32]
    27a8:	add	x1, sp, #0x28
    27ac:	mov	w3, #0x2                   	// #2
    27b0:	mov	x2, x1
    27b4:	mov	x1, x0
    27b8:	ldr	x0, [sp, #24]
    27bc:	bl	1330 <Perl_sv_2pv_flags@plt>
    27c0:	ldr	x0, [sp, #48]
    27c4:	ldr	x0, [x0, #40]
    27c8:	ldr	x1, [sp, #40]
    27cc:	cmp	x0, x1
    27d0:	b.ge	27e8 <PerlIOScalar_get_cnt+0xc8>  // b.tcont
    27d4:	ldr	x0, [sp, #40]
    27d8:	ldr	x1, [sp, #48]
    27dc:	ldr	x1, [x1, #40]
    27e0:	sub	x0, x0, x1
    27e4:	b	27f4 <PerlIOScalar_get_cnt+0xd4>
    27e8:	mov	x0, #0x0                   	// #0
    27ec:	b	27f4 <PerlIOScalar_get_cnt+0xd4>
    27f0:	mov	x0, #0x0                   	// #0
    27f4:	mov	x1, x0
    27f8:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    27fc:	ldr	x0, [x0, #4048]
    2800:	ldr	x2, [sp, #56]
    2804:	ldr	x0, [x0]
    2808:	eor	x0, x2, x0
    280c:	cmp	x0, #0x0
    2810:	b.eq	2818 <PerlIOScalar_get_cnt+0xf8>  // b.none
    2814:	bl	1350 <__stack_chk_fail@plt>
    2818:	mov	x0, x1
    281c:	ldp	x29, x30, [sp], #64
    2820:	ret

0000000000002824 <PerlIOScalar_bufsiz>:
    2824:	stp	x29, x30, [sp, #-48]!
    2828:	mov	x29, sp
    282c:	str	x0, [sp, #24]
    2830:	str	x1, [sp, #16]
    2834:	ldr	x0, [sp, #16]
    2838:	ldr	x0, [x0]
    283c:	ldr	w0, [x0, #16]
    2840:	and	w0, w0, #0x400
    2844:	cmp	w0, #0x0
    2848:	b.eq	28a8 <PerlIOScalar_bufsiz+0x84>  // b.none
    284c:	ldr	x0, [sp, #16]
    2850:	ldr	x0, [x0]
    2854:	str	x0, [sp, #40]
    2858:	ldr	x0, [sp, #40]
    285c:	ldr	x0, [x0, #32]
    2860:	ldr	w0, [x0, #12]
    2864:	lsr	w0, w0, #21
    2868:	mov	w0, w0
    286c:	and	x0, x0, #0x1
    2870:	cmp	x0, #0x0
    2874:	b.eq	2894 <PerlIOScalar_bufsiz+0x70>  // b.none
    2878:	ldr	x0, [sp, #40]
    287c:	ldr	x0, [x0, #32]
    2880:	mov	x1, x0
    2884:	ldr	x0, [sp, #24]
    2888:	bl	13e0 <Perl_mg_get@plt>
    288c:	cmp	w0, #0x0
    2890:	nop
    2894:	ldr	x0, [sp, #40]
    2898:	ldr	x0, [x0, #32]
    289c:	ldr	x0, [x0]
    28a0:	ldr	x0, [x0, #16]
    28a4:	b	28ac <PerlIOScalar_bufsiz+0x88>
    28a8:	mov	x0, #0x0                   	// #0
    28ac:	ldp	x29, x30, [sp], #48
    28b0:	ret

00000000000028b4 <PerlIOScalar_set_ptrcnt>:
    28b4:	stp	x29, x30, [sp, #-80]!
    28b8:	mov	x29, sp
    28bc:	str	x0, [sp, #40]
    28c0:	str	x1, [sp, #32]
    28c4:	str	x2, [sp, #24]
    28c8:	str	x3, [sp, #16]
    28cc:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    28d0:	ldr	x0, [x0, #4048]
    28d4:	ldr	x1, [x0]
    28d8:	str	x1, [sp, #72]
    28dc:	mov	x1, #0x0                   	// #0
    28e0:	ldr	x0, [sp, #32]
    28e4:	ldr	x0, [x0]
    28e8:	str	x0, [sp, #64]
    28ec:	ldr	x0, [sp, #64]
    28f0:	ldr	x0, [x0, #32]
    28f4:	ldr	w1, [x0, #12]
    28f8:	mov	w0, #0x400                 	// #1024
    28fc:	movk	w0, #0x20, lsl #16
    2900:	and	w0, w1, w0
    2904:	cmp	w0, #0x400
    2908:	b.ne	2924 <PerlIOScalar_set_ptrcnt+0x70>  // b.any
    290c:	ldr	x0, [sp, #64]
    2910:	ldr	x0, [x0, #32]
    2914:	ldr	x0, [x0]
    2918:	ldr	x0, [x0, #16]
    291c:	str	x0, [sp, #56]
    2920:	b	2944 <PerlIOScalar_set_ptrcnt+0x90>
    2924:	ldr	x0, [sp, #64]
    2928:	ldr	x0, [x0, #32]
    292c:	add	x1, sp, #0x38
    2930:	mov	w3, #0x2                   	// #2
    2934:	mov	x2, x1
    2938:	mov	x1, x0
    293c:	ldr	x0, [sp, #40]
    2940:	bl	1330 <Perl_sv_2pv_flags@plt>
    2944:	ldr	x1, [sp, #56]
    2948:	ldr	x0, [sp, #16]
    294c:	sub	x0, x1, x0
    2950:	mov	x1, x0
    2954:	ldr	x0, [sp, #64]
    2958:	str	x1, [x0, #40]
    295c:	nop
    2960:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    2964:	ldr	x0, [x0, #4048]
    2968:	ldr	x1, [sp, #72]
    296c:	ldr	x0, [x0]
    2970:	eor	x0, x1, x0
    2974:	cmp	x0, #0x0
    2978:	b.eq	2980 <PerlIOScalar_set_ptrcnt+0xcc>  // b.none
    297c:	bl	1350 <__stack_chk_fail@plt>
    2980:	ldp	x29, x30, [sp], #80
    2984:	ret

0000000000002988 <PerlIOScalar_open>:
    2988:	stp	x29, x30, [sp, #-96]!
    298c:	mov	x29, sp
    2990:	str	x0, [sp, #72]
    2994:	str	x1, [sp, #64]
    2998:	str	x2, [sp, #56]
    299c:	str	x3, [sp, #48]
    29a0:	str	x4, [sp, #40]
    29a4:	str	w5, [sp, #36]
    29a8:	str	w6, [sp, #32]
    29ac:	str	w7, [sp, #28]
    29b0:	ldr	w0, [sp, #104]
    29b4:	cmp	w0, #0x0
    29b8:	b.le	29c8 <PerlIOScalar_open+0x40>
    29bc:	ldr	x0, [sp, #112]
    29c0:	ldr	x0, [x0]
    29c4:	b	29d4 <PerlIOScalar_open+0x4c>
    29c8:	ldr	x1, [sp, #48]
    29cc:	ldr	x0, [sp, #56]
    29d0:	bl	12b0 <PerlIO_arg_fetch@plt>
    29d4:	str	x0, [sp, #88]
    29d8:	ldr	x0, [sp, #88]
    29dc:	ldr	w0, [x0, #12]
    29e0:	and	w0, w0, #0x800
    29e4:	cmp	w0, #0x0
    29e8:	b.ne	2a00 <PerlIOScalar_open+0x78>  // b.any
    29ec:	ldr	x0, [sp, #88]
    29f0:	ldr	w0, [x0, #12]
    29f4:	and	w0, w0, #0x400
    29f8:	cmp	w0, #0x0
    29fc:	b.eq	2a64 <PerlIOScalar_open+0xdc>  // b.none
    2a00:	ldr	x0, [sp, #96]
    2a04:	cmp	x0, #0x0
    2a08:	b.ne	2a18 <PerlIOScalar_open+0x90>  // b.any
    2a0c:	ldr	x0, [sp, #72]
    2a10:	bl	12d0 <PerlIO_allocate@plt>
    2a14:	str	x0, [sp, #96]
    2a18:	ldr	x4, [sp, #88]
    2a1c:	ldr	x3, [sp, #40]
    2a20:	ldr	x2, [sp, #64]
    2a24:	ldr	x1, [sp, #96]
    2a28:	ldr	x0, [sp, #72]
    2a2c:	bl	1300 <PerlIO_push@plt>
    2a30:	str	x0, [sp, #96]
    2a34:	ldr	x0, [sp, #96]
    2a38:	cmp	x0, #0x0
    2a3c:	b.eq	2a5c <PerlIOScalar_open+0xd4>  // b.none
    2a40:	ldr	x0, [sp, #96]
    2a44:	ldr	x0, [x0]
    2a48:	ldr	w1, [x0, #16]
    2a4c:	ldr	x0, [sp, #96]
    2a50:	ldr	x0, [x0]
    2a54:	orr	w1, w1, #0x200000
    2a58:	str	w1, [x0, #16]
    2a5c:	ldr	x0, [sp, #96]
    2a60:	b	2a68 <PerlIOScalar_open+0xe0>
    2a64:	mov	x0, #0x0                   	// #0
    2a68:	ldp	x29, x30, [sp], #96
    2a6c:	ret

0000000000002a70 <PerlIOScalar_arg>:
    2a70:	stp	x29, x30, [sp, #-80]!
    2a74:	mov	x29, sp
    2a78:	str	x0, [sp, #40]
    2a7c:	str	x1, [sp, #32]
    2a80:	str	x2, [sp, #24]
    2a84:	str	w3, [sp, #20]
    2a88:	ldr	x0, [sp, #32]
    2a8c:	ldr	x0, [x0]
    2a90:	str	x0, [sp, #64]
    2a94:	ldr	x0, [sp, #64]
    2a98:	ldr	x0, [x0, #32]
    2a9c:	str	x0, [sp, #56]
    2aa0:	ldr	w0, [sp, #20]
    2aa4:	and	w0, w0, #0x1
    2aa8:	cmp	w0, #0x0
    2aac:	b.eq	2ac8 <PerlIOScalar_arg+0x58>  // b.none
    2ab0:	ldr	x2, [sp, #24]
    2ab4:	ldr	x1, [sp, #56]
    2ab8:	ldr	x0, [sp, #40]
    2abc:	bl	1400 <PerlIO_sv_dup@plt>
    2ac0:	str	x0, [sp, #56]
    2ac4:	b	2b04 <PerlIOScalar_arg+0x94>
    2ac8:	ldr	w0, [sp, #20]
    2acc:	and	w0, w0, #0x2
    2ad0:	cmp	w0, #0x0
    2ad4:	b.eq	2af0 <PerlIOScalar_arg+0x80>  // b.none
    2ad8:	mov	w2, #0x12                  	// #18
    2adc:	ldr	x1, [sp, #56]
    2ae0:	ldr	x0, [sp, #40]
    2ae4:	bl	1440 <Perl_newSVsv_flags@plt>
    2ae8:	str	x0, [sp, #56]
    2aec:	b	2b04 <PerlIOScalar_arg+0x94>
    2af0:	ldr	x0, [sp, #56]
    2af4:	str	x0, [sp, #72]
    2af8:	ldr	x0, [sp, #72]
    2afc:	bl	15f0 <S_SvREFCNT_inc>
    2b00:	str	x0, [sp, #56]
    2b04:	ldr	x1, [sp, #56]
    2b08:	ldr	x0, [sp, #40]
    2b0c:	bl	1280 <Perl_newRV_noinc@plt>
    2b10:	ldp	x29, x30, [sp], #80
    2b14:	ret

0000000000002b18 <PerlIOScalar_dup>:
    2b18:	stp	x29, x30, [sp, #-128]!
    2b1c:	mov	x29, sp
    2b20:	str	x0, [sp, #56]
    2b24:	str	x1, [sp, #48]
    2b28:	str	x2, [sp, #40]
    2b2c:	str	x3, [sp, #32]
    2b30:	str	w4, [sp, #28]
    2b34:	ldr	x0, [sp, #40]
    2b38:	ldr	x0, [x0]
    2b3c:	str	x0, [sp, #72]
    2b40:	str	xzr, [sp, #64]
    2b44:	ldr	x0, [sp, #72]
    2b48:	ldr	x0, [x0, #32]
    2b4c:	str	x0, [sp, #80]
    2b50:	mov	x2, #0x0                   	// #0
    2b54:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    2b58:	add	x1, x0, #0xd70
    2b5c:	ldr	x0, [sp, #56]
    2b60:	bl	1450 <Perl_newSVpvn@plt>
    2b64:	mov	x1, x0
    2b68:	ldr	x0, [sp, #72]
    2b6c:	str	x1, [x0, #32]
    2b70:	ldr	w4, [sp, #28]
    2b74:	ldr	x3, [sp, #32]
    2b78:	ldr	x2, [sp, #40]
    2b7c:	ldr	x1, [sp, #48]
    2b80:	ldr	x0, [sp, #56]
    2b84:	bl	1310 <PerlIOBase_dup@plt>
    2b88:	str	x0, [sp, #48]
    2b8c:	ldr	x0, [sp, #48]
    2b90:	cmp	x0, #0x0
    2b94:	b.eq	2bc0 <PerlIOScalar_dup+0xa8>  // b.none
    2b98:	ldr	x0, [sp, #48]
    2b9c:	ldr	x0, [x0]
    2ba0:	str	x0, [sp, #64]
    2ba4:	ldr	x0, [sp, #64]
    2ba8:	ldr	x0, [x0, #32]
    2bac:	str	x0, [sp, #88]
    2bb0:	ldr	x0, [sp, #88]
    2bb4:	mov	x1, x0
    2bb8:	ldr	x0, [sp, #56]
    2bbc:	bl	1634 <S_SvREFCNT_dec>
    2bc0:	ldr	x0, [sp, #72]
    2bc4:	ldr	x0, [x0, #32]
    2bc8:	str	x0, [sp, #96]
    2bcc:	ldr	x0, [sp, #96]
    2bd0:	mov	x1, x0
    2bd4:	ldr	x0, [sp, #56]
    2bd8:	bl	1634 <S_SvREFCNT_dec>
    2bdc:	ldr	x0, [sp, #72]
    2be0:	ldr	x1, [sp, #80]
    2be4:	str	x1, [x0, #32]
    2be8:	ldr	x0, [sp, #48]
    2bec:	cmp	x0, #0x0
    2bf0:	b.eq	2c54 <PerlIOScalar_dup+0x13c>  // b.none
    2bf4:	ldr	w3, [sp, #28]
    2bf8:	ldr	x2, [sp, #32]
    2bfc:	ldr	x1, [sp, #40]
    2c00:	ldr	x0, [sp, #56]
    2c04:	bl	2a70 <PerlIOScalar_arg>
    2c08:	str	x0, [sp, #104]
    2c0c:	ldr	x0, [sp, #104]
    2c10:	ldr	x0, [x0, #16]
    2c14:	str	x0, [sp, #112]
    2c18:	ldr	x0, [sp, #112]
    2c1c:	bl	15f0 <S_SvREFCNT_inc>
    2c20:	mov	x1, x0
    2c24:	ldr	x0, [sp, #64]
    2c28:	str	x1, [x0, #32]
    2c2c:	ldr	x0, [sp, #104]
    2c30:	str	x0, [sp, #120]
    2c34:	ldr	x0, [sp, #120]
    2c38:	mov	x1, x0
    2c3c:	ldr	x0, [sp, #56]
    2c40:	bl	1634 <S_SvREFCNT_dec>
    2c44:	ldr	x0, [sp, #72]
    2c48:	ldr	x1, [x0, #40]
    2c4c:	ldr	x0, [sp, #64]
    2c50:	str	x1, [x0, #40]
    2c54:	ldr	x0, [sp, #48]
    2c58:	ldp	x29, x30, [sp], #128
    2c5c:	ret

0000000000002c60 <boot_PerlIO__scalar>:
    2c60:	stp	x29, x30, [sp, #-64]!
    2c64:	mov	x29, sp
    2c68:	str	x0, [sp, #24]
    2c6c:	str	x1, [sp, #16]
    2c70:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    2c74:	add	x4, x0, #0xd98
    2c78:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    2c7c:	add	x3, x0, #0xda0
    2c80:	adrp	x0, 2000 <PerlIOScalar_read+0x140>
    2c84:	add	x2, x0, #0xda8
    2c88:	ldr	x1, [sp, #24]
    2c8c:	mov	w0, #0x4e7                 	// #1255
    2c90:	movk	w0, #0xd30, lsl #16
    2c94:	bl	13f0 <Perl_xs_handshake@plt>
    2c98:	str	w0, [sp, #40]
    2c9c:	ldr	x0, [sp, #24]
    2ca0:	ldr	x1, [x0, #24]
    2ca4:	ldrsw	x0, [sp, #40]
    2ca8:	lsl	x0, x0, #3
    2cac:	add	x0, x1, x0
    2cb0:	str	x0, [sp, #48]
    2cb4:	ldr	x0, [sp, #24]
    2cb8:	ldr	x0, [x0]
    2cbc:	str	x0, [sp, #56]
    2cc0:	ldr	x1, [sp, #56]
    2cc4:	ldr	x0, [sp, #48]
    2cc8:	sub	x0, x1, x0
    2ccc:	asr	x0, x0, #3
    2cd0:	str	w0, [sp, #44]
    2cd4:	adrp	x0, 13000 <__FRAME_END__+0xfe20>
    2cd8:	add	x1, x0, #0xce8
    2cdc:	ldr	x0, [sp, #24]
    2ce0:	bl	1260 <PerlIO_define_layer@plt>
    2ce4:	ldr	w1, [sp, #40]
    2ce8:	ldr	x0, [sp, #24]
    2cec:	bl	1340 <Perl_xs_boot_epilog@plt>
    2cf0:	nop
    2cf4:	ldp	x29, x30, [sp], #64
    2cf8:	ret

Disassembly of section .fini:

0000000000002cfc <_fini>:
    2cfc:	stp	x29, x30, [sp, #-16]!
    2d00:	mov	x29, sp
    2d04:	ldp	x29, x30, [sp], #16
    2d08:	ret
