
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ordchr.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000698 <.init>:
 698:	stp	x29, x30, [sp, #-16]!
 69c:	mov	x29, sp
 6a0:	bl	750 <fprintf@plt+0x10>
 6a4:	ldp	x29, x30, [sp], #16
 6a8:	ret

Disassembly of section .plt:

00000000000006b0 <memcpy@plt-0x20>:
 6b0:	stp	x16, x30, [sp, #-16]!
 6b4:	adrp	x16, 11000 <dl_load@@Base+0x103b4>
 6b8:	ldr	x17, [x16, #4088]
 6bc:	add	x16, x16, #0xff8
 6c0:	br	x17
 6c4:	nop
 6c8:	nop
 6cc:	nop

00000000000006d0 <memcpy@plt>:
 6d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6d4:	ldr	x17, [x16]
 6d8:	add	x16, x16, #0x0
 6dc:	br	x17

00000000000006e0 <exit@plt>:
 6e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #8]
 6e8:	add	x16, x16, #0x8
 6ec:	br	x17

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6f4:	ldr	x17, [x16, #16]
 6f8:	add	x16, x16, #0x10
 6fc:	br	x17

0000000000000700 <memset@plt>:
 700:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 704:	ldr	x17, [x16, #24]
 708:	add	x16, x16, #0x18
 70c:	br	x17

0000000000000710 <__gmon_start__@plt>:
 710:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 714:	ldr	x17, [x16, #32]
 718:	add	x16, x16, #0x20
 71c:	br	x17

0000000000000720 <fwrite@plt>:
 720:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 724:	ldr	x17, [x16, #40]
 728:	add	x16, x16, #0x28
 72c:	br	x17

0000000000000730 <gettext@plt>:
 730:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 734:	ldr	x17, [x16, #48]
 738:	add	x16, x16, #0x30
 73c:	br	x17

0000000000000740 <fprintf@plt>:
 740:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 744:	ldr	x17, [x16, #56]
 748:	add	x16, x16, #0x38
 74c:	br	x17

Disassembly of section .text:

0000000000000750 <dl_load@@Base-0x4fc>:
 750:	adrp	x0, 11000 <dl_load@@Base+0x103b4>
 754:	ldr	x0, [x0, #4056]
 758:	cbz	x0, 760 <fprintf@plt+0x20>
 75c:	b	710 <__gmon_start__@plt>
 760:	ret
 764:	stp	x29, x30, [sp, #-32]!
 768:	mov	x29, sp
 76c:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 770:	add	x0, x0, #0xb0
 774:	str	x0, [sp, #24]
 778:	ldr	x0, [sp, #24]
 77c:	str	x0, [sp, #24]
 780:	ldr	x1, [sp, #24]
 784:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 788:	add	x0, x0, #0xb0
 78c:	cmp	x1, x0
 790:	b.eq	7c8 <fprintf@plt+0x88>  // b.none
 794:	adrp	x0, 11000 <dl_load@@Base+0x103b4>
 798:	ldr	x0, [x0, #4032]
 79c:	str	x0, [sp, #16]
 7a0:	ldr	x0, [sp, #16]
 7a4:	str	x0, [sp, #16]
 7a8:	ldr	x0, [sp, #16]
 7ac:	cmp	x0, #0x0
 7b0:	b.eq	7cc <fprintf@plt+0x8c>  // b.none
 7b4:	ldr	x1, [sp, #16]
 7b8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 7bc:	add	x0, x0, #0xb0
 7c0:	blr	x1
 7c4:	b	7cc <fprintf@plt+0x8c>
 7c8:	nop
 7cc:	ldp	x29, x30, [sp], #32
 7d0:	ret
 7d4:	stp	x29, x30, [sp, #-48]!
 7d8:	mov	x29, sp
 7dc:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 7e0:	add	x0, x0, #0xb0
 7e4:	str	x0, [sp, #40]
 7e8:	ldr	x0, [sp, #40]
 7ec:	str	x0, [sp, #40]
 7f0:	ldr	x1, [sp, #40]
 7f4:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 7f8:	add	x0, x0, #0xb0
 7fc:	sub	x0, x1, x0
 800:	asr	x0, x0, #3
 804:	lsr	x1, x0, #63
 808:	add	x0, x1, x0
 80c:	asr	x0, x0, #1
 810:	str	x0, [sp, #32]
 814:	ldr	x0, [sp, #32]
 818:	cmp	x0, #0x0
 81c:	b.eq	858 <fprintf@plt+0x118>  // b.none
 820:	adrp	x0, 11000 <dl_load@@Base+0x103b4>
 824:	ldr	x0, [x0, #4064]
 828:	str	x0, [sp, #24]
 82c:	ldr	x0, [sp, #24]
 830:	str	x0, [sp, #24]
 834:	ldr	x0, [sp, #24]
 838:	cmp	x0, #0x0
 83c:	b.eq	85c <fprintf@plt+0x11c>  // b.none
 840:	ldr	x2, [sp, #24]
 844:	ldr	x1, [sp, #32]
 848:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 84c:	add	x0, x0, #0xb0
 850:	blr	x2
 854:	b	85c <fprintf@plt+0x11c>
 858:	nop
 85c:	ldp	x29, x30, [sp], #48
 860:	ret
 864:	stp	x29, x30, [sp, #-16]!
 868:	mov	x29, sp
 86c:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 870:	add	x0, x0, #0xb0
 874:	ldrb	w0, [x0]
 878:	and	x0, x0, #0xff
 87c:	cmp	x0, #0x0
 880:	b.ne	8bc <fprintf@plt+0x17c>  // b.any
 884:	adrp	x0, 11000 <dl_load@@Base+0x103b4>
 888:	ldr	x0, [x0, #4040]
 88c:	cmp	x0, #0x0
 890:	b.eq	8a4 <fprintf@plt+0x164>  // b.none
 894:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 898:	add	x0, x0, #0x40
 89c:	ldr	x0, [x0]
 8a0:	bl	6f0 <__cxa_finalize@plt>
 8a4:	bl	764 <fprintf@plt+0x24>
 8a8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 8ac:	add	x0, x0, #0xb0
 8b0:	mov	w1, #0x1                   	// #1
 8b4:	strb	w1, [x0]
 8b8:	b	8c0 <fprintf@plt+0x180>
 8bc:	nop
 8c0:	ldp	x29, x30, [sp], #16
 8c4:	ret
 8c8:	stp	x29, x30, [sp, #-16]!
 8cc:	mov	x29, sp
 8d0:	bl	7d4 <fprintf@plt+0x94>
 8d4:	nop
 8d8:	ldp	x29, x30, [sp], #16
 8dc:	ret
 8e0:	stp	x29, x30, [sp, #-80]!
 8e4:	mov	x29, sp
 8e8:	str	x0, [sp, #56]
 8ec:	str	x1, [sp, #48]
 8f0:	str	x2, [sp, #40]
 8f4:	str	x3, [sp, #32]
 8f8:	str	w4, [sp, #28]
 8fc:	str	x5, [sp, #16]
 900:	str	w6, [sp, #24]
 904:	str	xzr, [sp, #72]
 908:	mov	x2, #0x20                  	// #32
 90c:	mov	w1, #0x0                   	// #0
 910:	ldr	x0, [sp, #16]
 914:	bl	700 <memset@plt>
 918:	ldr	x0, [sp, #16]
 91c:	ldr	w1, [sp, #24]
 920:	str	w1, [x0]
 924:	ldr	x0, [sp, #16]
 928:	ldr	x1, [sp, #32]
 92c:	str	x1, [x0, #16]
 930:	ldr	w0, [sp, #28]
 934:	cmp	w0, #0x0
 938:	b.eq	9bc <fprintf@plt+0x27c>  // b.none
 93c:	ldr	x0, [sp, #56]
 940:	ldr	x1, [x0, #280]
 944:	ldr	x0, [sp, #32]
 948:	add	x0, x0, #0x1
 94c:	blr	x1
 950:	str	x0, [sp, #72]
 954:	ldr	x0, [sp, #72]
 958:	cmp	x0, #0x0
 95c:	b.ne	98c <fprintf@plt+0x24c>  // b.any
 960:	ldr	x0, [sp, #56]
 964:	ldr	x4, [x0, #96]
 968:	ldr	x0, [sp, #32]
 96c:	add	x0, x0, #0x1
 970:	mov	x3, x0
 974:	adrp	x0, 0 <memcpy@plt-0x6d0>
 978:	add	x2, x0, #0xf18
 97c:	adrp	x0, 0 <memcpy@plt-0x6d0>
 980:	add	x1, x0, #0xf28
 984:	ldr	x0, [sp, #48]
 988:	blr	x4
 98c:	ldr	x2, [sp, #32]
 990:	ldr	x1, [sp, #40]
 994:	ldr	x0, [sp, #72]
 998:	bl	6d0 <memcpy@plt>
 99c:	ldr	x1, [sp, #72]
 9a0:	ldr	x0, [sp, #32]
 9a4:	add	x0, x1, x0
 9a8:	strb	wzr, [x0]
 9ac:	ldr	x0, [sp, #16]
 9b0:	ldr	x1, [sp, #72]
 9b4:	str	x1, [x0, #8]
 9b8:	b	9c8 <fprintf@plt+0x288>
 9bc:	ldr	x0, [sp, #16]
 9c0:	ldr	x1, [sp, #40]
 9c4:	str	x1, [x0, #8]
 9c8:	ldr	x0, [sp, #16]
 9cc:	ldp	x29, x30, [sp], #80
 9d0:	ret
 9d4:	stp	x29, x30, [sp, #-64]!
 9d8:	mov	x29, sp
 9dc:	str	x0, [sp, #56]
 9e0:	str	x1, [sp, #48]
 9e4:	str	x2, [sp, #40]
 9e8:	str	x3, [sp, #32]
 9ec:	str	w4, [sp, #28]
 9f0:	str	x5, [sp, #16]
 9f4:	mov	w6, #0x2                   	// #2
 9f8:	ldr	x5, [sp, #16]
 9fc:	ldr	w4, [sp, #28]
 a00:	ldr	x3, [sp, #32]
 a04:	ldr	x2, [sp, #40]
 a08:	ldr	x1, [sp, #48]
 a0c:	ldr	x0, [sp, #56]
 a10:	bl	8e0 <fprintf@plt+0x1a0>
 a14:	ldp	x29, x30, [sp], #64
 a18:	ret
 a1c:	sub	sp, sp, #0x10
 a20:	str	d0, [sp, #8]
 a24:	str	x0, [sp]
 a28:	ldr	x0, [sp]
 a2c:	mov	w1, #0x1                   	// #1
 a30:	str	w1, [x0]
 a34:	ldr	x0, [sp]
 a38:	ldr	d0, [sp, #8]
 a3c:	str	d0, [x0, #8]
 a40:	ldr	x0, [sp]
 a44:	str	wzr, [x0, #16]
 a48:	ldr	x0, [sp]
 a4c:	add	sp, sp, #0x10
 a50:	ret
 a54:	stp	x29, x30, [sp, #-112]!
 a58:	mov	x29, sp
 a5c:	stp	x19, x20, [sp, #16]
 a60:	str	w0, [sp, #60]
 a64:	str	x1, [sp, #48]
 a68:	str	x2, [sp, #40]
 a6c:	fmov	d0, #-1.000000000000000000e+00
 a70:	str	d0, [sp, #104]
 a74:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 a78:	add	x0, x0, #0xb8
 a7c:	ldr	x0, [x0]
 a80:	ldr	x4, [x0, #152]
 a84:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 a88:	add	x0, x0, #0xc0
 a8c:	ldr	x0, [x0]
 a90:	add	x1, sp, #0x48
 a94:	mov	x3, x1
 a98:	mov	w2, #0x2                   	// #2
 a9c:	mov	x1, #0x0                   	// #0
 aa0:	blr	x4
 aa4:	cmp	w0, #0x0
 aa8:	b.eq	ac0 <fprintf@plt+0x380>  // b.none
 aac:	ldr	x0, [sp, #80]
 ab0:	ldrb	w0, [x0]
 ab4:	ucvtf	d0, w0
 ab8:	str	d0, [sp, #104]
 abc:	b	b0c <fprintf@plt+0x3cc>
 ac0:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ac4:	add	x0, x0, #0xb8
 ac8:	ldr	x0, [x0]
 acc:	ldr	w0, [x0, #24]
 ad0:	cmp	w0, #0x0
 ad4:	b.eq	b0c <fprintf@plt+0x3cc>  // b.none
 ad8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 adc:	add	x0, x0, #0xb8
 ae0:	ldr	x0, [x0]
 ae4:	ldr	x19, [x0, #112]
 ae8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 aec:	add	x0, x0, #0xc0
 af0:	ldr	x20, [x0]
 af4:	adrp	x0, 0 <memcpy@plt-0x6d0>
 af8:	add	x0, x0, #0xf68
 afc:	bl	730 <gettext@plt>
 b00:	mov	x1, x0
 b04:	mov	x0, x20
 b08:	blr	x19
 b0c:	ldr	x0, [sp, #48]
 b10:	ldr	d0, [sp, #104]
 b14:	bl	a1c <fprintf@plt+0x2dc>
 b18:	ldp	x19, x20, [sp, #16]
 b1c:	ldp	x29, x30, [sp], #112
 b20:	ret
 b24:	stp	x29, x30, [sp, #-128]!
 b28:	mov	x29, sp
 b2c:	stp	x19, x20, [sp, #16]
 b30:	str	w0, [sp, #60]
 b34:	str	x1, [sp, #48]
 b38:	str	x2, [sp, #40]
 b3c:	str	wzr, [sp, #124]
 b40:	str	xzr, [sp, #112]
 b44:	strb	wzr, [sp, #73]
 b48:	ldrb	w0, [sp, #73]
 b4c:	strb	w0, [sp, #72]
 b50:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 b54:	add	x0, x0, #0xb8
 b58:	ldr	x0, [x0]
 b5c:	ldr	x4, [x0, #152]
 b60:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 b64:	add	x0, x0, #0xc0
 b68:	ldr	x0, [x0]
 b6c:	add	x1, sp, #0x50
 b70:	mov	x3, x1
 b74:	mov	w2, #0x1                   	// #1
 b78:	mov	x1, #0x0                   	// #0
 b7c:	blr	x4
 b80:	cmp	w0, #0x0
 b84:	b.eq	bbc <fprintf@plt+0x47c>  // b.none
 b88:	ldr	d0, [sp, #88]
 b8c:	str	d0, [sp, #112]
 b90:	ldr	d0, [sp, #112]
 b94:	fcvtzu	w0, d0
 b98:	str	w0, [sp, #124]
 b9c:	ldr	w0, [sp, #124]
 ba0:	and	w0, w0, #0xff
 ba4:	str	w0, [sp, #124]
 ba8:	ldr	w0, [sp, #124]
 bac:	and	w0, w0, #0xff
 bb0:	strb	w0, [sp, #72]
 bb4:	strb	wzr, [sp, #73]
 bb8:	b	c08 <fprintf@plt+0x4c8>
 bbc:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 bc0:	add	x0, x0, #0xb8
 bc4:	ldr	x0, [x0]
 bc8:	ldr	w0, [x0, #24]
 bcc:	cmp	w0, #0x0
 bd0:	b.eq	c08 <fprintf@plt+0x4c8>  // b.none
 bd4:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 bd8:	add	x0, x0, #0xb8
 bdc:	ldr	x0, [x0]
 be0:	ldr	x19, [x0, #112]
 be4:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 be8:	add	x0, x0, #0xc0
 bec:	ldr	x20, [x0]
 bf0:	adrp	x0, 0 <memcpy@plt-0x6d0>
 bf4:	add	x0, x0, #0xf98
 bf8:	bl	730 <gettext@plt>
 bfc:	mov	x1, x0
 c00:	mov	x0, x20
 c04:	blr	x19
 c08:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 c0c:	add	x0, x0, #0xb8
 c10:	ldr	x6, [x0]
 c14:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 c18:	add	x0, x0, #0xc0
 c1c:	ldr	x0, [x0]
 c20:	add	x1, sp, #0x48
 c24:	ldr	x5, [sp, #48]
 c28:	mov	w4, #0x1                   	// #1
 c2c:	mov	x3, #0x1                   	// #1
 c30:	mov	x2, x1
 c34:	mov	x1, x0
 c38:	mov	x0, x6
 c3c:	bl	9d4 <fprintf@plt+0x294>
 c40:	ldp	x19, x20, [sp, #16]
 c44:	ldp	x29, x30, [sp], #128
 c48:	ret

0000000000000c4c <dl_load@@Base>:
 c4c:	stp	x29, x30, [sp, #-64]!
 c50:	mov	x29, sp
 c54:	str	x0, [sp, #24]
 c58:	str	x1, [sp, #16]
 c5c:	str	wzr, [sp, #52]
 c60:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 c64:	add	x0, x0, #0xb8
 c68:	ldr	x1, [sp, #24]
 c6c:	str	x1, [x0]
 c70:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 c74:	add	x0, x0, #0xc0
 c78:	ldr	x1, [sp, #16]
 c7c:	str	x1, [x0]
 c80:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 c84:	add	x0, x0, #0xb8
 c88:	ldr	x0, [x0]
 c8c:	ldr	w0, [x0]
 c90:	cmp	w0, #0x2
 c94:	b.ne	cb0 <dl_load@@Base+0x64>  // b.any
 c98:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 c9c:	add	x0, x0, #0xb8
 ca0:	ldr	x0, [x0]
 ca4:	ldr	w0, [x0, #4]
 ca8:	cmp	w0, #0x0
 cac:	b.ge	d28 <dl_load@@Base+0xdc>  // b.tcont
 cb0:	adrp	x0, 11000 <dl_load@@Base+0x103b4>
 cb4:	ldr	x0, [x0, #4048]
 cb8:	ldr	x0, [x0]
 cbc:	mov	x3, x0
 cc0:	mov	x2, #0x25                  	// #37
 cc4:	mov	x1, #0x1                   	// #1
 cc8:	adrp	x0, 0 <memcpy@plt-0x6d0>
 ccc:	add	x0, x0, #0xfd8
 cd0:	bl	720 <fwrite@plt>
 cd4:	adrp	x0, 11000 <dl_load@@Base+0x103b4>
 cd8:	ldr	x0, [x0, #4048]
 cdc:	ldr	x6, [x0]
 ce0:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ce4:	add	x0, x0, #0xb8
 ce8:	ldr	x0, [x0]
 cec:	ldr	w1, [x0]
 cf0:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 cf4:	add	x0, x0, #0xb8
 cf8:	ldr	x0, [x0]
 cfc:	ldr	w0, [x0, #4]
 d00:	mov	w5, w0
 d04:	mov	w4, w1
 d08:	mov	w3, #0x0                   	// #0
 d0c:	mov	w2, #0x2                   	// #2
 d10:	adrp	x0, 1000 <dl_load@@Base+0x3b4>
 d14:	add	x1, x0, #0x0
 d18:	mov	x0, x6
 d1c:	bl	740 <fprintf@plt>
 d20:	mov	w0, #0x1                   	// #1
 d24:	bl	6e0 <exit@plt>
 d28:	str	xzr, [sp, #56]
 d2c:	mov	x0, #0x2                   	// #2
 d30:	str	x0, [sp, #40]
 d34:	b	e28 <dl_load@@Base+0x1dc>
 d38:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 d3c:	add	x2, x0, #0x50
 d40:	ldr	x1, [sp, #56]
 d44:	mov	x0, x1
 d48:	lsl	x0, x0, #1
 d4c:	add	x0, x0, x1
 d50:	lsl	x0, x0, #4
 d54:	add	x0, x2, x0
 d58:	ldr	x0, [x0]
 d5c:	cmp	x0, #0x0
 d60:	b.eq	e3c <dl_load@@Base+0x1f0>  // b.none
 d64:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 d68:	add	x0, x0, #0xb8
 d6c:	ldr	x0, [x0]
 d70:	ldr	x3, [x0, #48]
 d74:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 d78:	add	x0, x0, #0xc0
 d7c:	ldr	x4, [x0]
 d80:	ldr	x1, [sp, #56]
 d84:	mov	x0, x1
 d88:	lsl	x0, x0, #1
 d8c:	add	x0, x0, x1
 d90:	lsl	x0, x0, #4
 d94:	adrp	x1, 12000 <dl_load@@Base+0x113b4>
 d98:	add	x1, x1, #0x50
 d9c:	add	x0, x0, x1
 da0:	mov	x2, x0
 da4:	adrp	x0, 1000 <dl_load@@Base+0x3b4>
 da8:	add	x1, x0, #0x38
 dac:	mov	x0, x4
 db0:	blr	x3
 db4:	cmp	w0, #0x0
 db8:	b.ne	e1c <dl_load@@Base+0x1d0>  // b.any
 dbc:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 dc0:	add	x0, x0, #0xb8
 dc4:	ldr	x0, [x0]
 dc8:	ldr	x3, [x0, #104]
 dcc:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 dd0:	add	x0, x0, #0xc0
 dd4:	ldr	x4, [x0]
 dd8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ddc:	add	x2, x0, #0x50
 de0:	ldr	x1, [sp, #56]
 de4:	mov	x0, x1
 de8:	lsl	x0, x0, #1
 dec:	add	x0, x0, x1
 df0:	lsl	x0, x0, #4
 df4:	add	x0, x2, x0
 df8:	ldr	x0, [x0]
 dfc:	mov	x2, x0
 e00:	adrp	x0, 1000 <dl_load@@Base+0x3b4>
 e04:	add	x1, x0, #0x40
 e08:	mov	x0, x4
 e0c:	blr	x3
 e10:	ldr	w0, [sp, #52]
 e14:	add	w0, w0, #0x1
 e18:	str	w0, [sp, #52]
 e1c:	ldr	x0, [sp, #56]
 e20:	add	x0, x0, #0x1
 e24:	str	x0, [sp, #56]
 e28:	ldr	x1, [sp, #56]
 e2c:	ldr	x0, [sp, #40]
 e30:	cmp	x1, x0
 e34:	b.cc	d38 <dl_load@@Base+0xec>  // b.lo, b.ul, b.last
 e38:	b	e40 <dl_load@@Base+0x1f4>
 e3c:	nop
 e40:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 e44:	add	x0, x0, #0xc8
 e48:	ldr	x0, [x0]
 e4c:	cmp	x0, #0x0
 e50:	b.eq	ea4 <dl_load@@Base+0x258>  // b.none
 e54:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 e58:	add	x0, x0, #0xc8
 e5c:	ldr	x0, [x0]
 e60:	blr	x0
 e64:	cmp	w0, #0x0
 e68:	b.ne	ea4 <dl_load@@Base+0x258>  // b.any
 e6c:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 e70:	add	x0, x0, #0xb8
 e74:	ldr	x0, [x0]
 e78:	ldr	x2, [x0, #104]
 e7c:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 e80:	add	x0, x0, #0xc0
 e84:	ldr	x3, [x0]
 e88:	adrp	x0, 1000 <dl_load@@Base+0x3b4>
 e8c:	add	x1, x0, #0x60
 e90:	mov	x0, x3
 e94:	blr	x2
 e98:	ldr	w0, [sp, #52]
 e9c:	add	w0, w0, #0x1
 ea0:	str	w0, [sp, #52]
 ea4:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ea8:	add	x0, x0, #0x48
 eac:	ldr	x0, [x0]
 eb0:	cmp	x0, #0x0
 eb4:	b.eq	eec <dl_load@@Base+0x2a0>  // b.none
 eb8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ebc:	add	x0, x0, #0xb8
 ec0:	ldr	x0, [x0]
 ec4:	ldr	x2, [x0, #88]
 ec8:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ecc:	add	x0, x0, #0xc0
 ed0:	ldr	x3, [x0]
 ed4:	adrp	x0, 12000 <dl_load@@Base+0x113b4>
 ed8:	add	x0, x0, #0x48
 edc:	ldr	x0, [x0]
 ee0:	mov	x1, x0
 ee4:	mov	x0, x3
 ee8:	blr	x2
 eec:	ldr	w0, [sp, #52]
 ef0:	cmp	w0, #0x0
 ef4:	cset	w0, eq  // eq = none
 ef8:	and	w0, w0, #0xff
 efc:	ldp	x29, x30, [sp], #64
 f00:	ret

Disassembly of section .fini:

0000000000000f04 <.fini>:
 f04:	stp	x29, x30, [sp, #-16]!
 f08:	mov	x29, sp
 f0c:	ldp	x29, x30, [sp], #16
 f10:	ret
