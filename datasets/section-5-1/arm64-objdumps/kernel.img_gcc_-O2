
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//kernel.img_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_start>:
       0:	ldr	x2, 28 <_start+0x28>
       4:	str	x0, [x2]
       8:	ldr	x2, 20 <_start+0x20>
       c:	str	x1, [x2]
      10:	ldr	x2, 18 <_start+0x18>
      14:	br	x2
	...
      30:	mrs	x1, cntvct_el0
      34:	adrp	x0, 0 <_start>
      38:	ldr	x0, [x0]
      3c:	ldr	x0, [x0]
      40:	udiv	x0, x1, x0
      44:	ret
	...

0000000000000050 <grub_machine_init>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	mov	x29, sp
      58:	bl	39d8 <grub_efi_init>
      5c:	mrs	x1, cntfrq_el0
      60:	mov	x3, #0xf7cf                	// #63439
      64:	lsr	x1, x1, #3
      68:	movk	x3, #0xe353, lsl #16
      6c:	adrp	x2, 0 <_start>
      70:	movk	x3, #0x9ba5, lsl #32
      74:	adrp	x0, 0 <_start>
      78:	movk	x3, #0x20c4, lsl #48
      7c:	ldr	x2, [x2]
      80:	umulh	x1, x1, x3
      84:	ldr	x0, [x0]
      88:	lsr	x1, x1, #4
      8c:	str	x1, [x2]
      90:	ldp	x29, x30, [sp], #16
      94:	b	5928 <grub_install_get_time_ms>
	...

00000000000000a8 <grub_machine_fini>:
      a8:	tbnz	w0, #0, b0 <grub_machine_fini+0x8>
      ac:	ret
      b0:	b	3ae8 <grub_efi_fini>
      b4:	nop

00000000000000b8 <grub_efi_get_firmware_fdt>:
      b8:	stp	x29, x30, [sp, #-64]!
      bc:	adrp	x1, 0 <_start>
      c0:	mov	x0, #0xb83                 	// #2947
      c4:	mov	x29, sp
      c8:	stp	x21, x22, [sp, #32]
      cc:	mov	x2, #0x21d5                	// #8661
      d0:	movk	x0, #0x15d9, lsl #16
      d4:	ldr	x21, [x1]
      d8:	movk	x2, #0xb1b6, lsl #16
      dc:	movk	x0, #0x692c, lsl #32
      e0:	movk	x2, #0xf19c, lsl #32
      e4:	movk	x0, #0xe0aa, lsl #48
      e8:	movk	x2, #0x41a5, lsl #48
      ec:	stp	x2, x0, [sp, #48]
      f0:	ldr	x0, [x21]
      f4:	stp	x19, x20, [sp, #16]
      f8:	ldp	x1, x22, [x0, #104]
      fc:	cbz	x1, 17c <grub_efi_get_firmware_fdt+0xc4>
     100:	mov	w20, #0x0                   	// #0
     104:	mov	x0, #0x0                   	// #0
     108:	b	120 <grub_efi_get_firmware_fdt+0x68>
     10c:	ldr	x1, [x21]
     110:	mov	w0, w20
     114:	ldr	x1, [x1, #104]
     118:	cmp	x1, w20, uxtw
     11c:	b.ls	17c <grub_efi_get_firmware_fdt+0xc4>  // b.plast
     120:	add	x0, x0, x0, lsl #1
     124:	add	w20, w20, #0x1
     128:	add	x1, sp, #0x30
     12c:	mov	x2, #0x10                  	// #16
     130:	add	x19, x22, x0, lsl #3
     134:	mov	x0, x19
     138:	bl	9b28 <grub_memcmp>
     13c:	cbnz	w0, 10c <grub_efi_get_firmware_fdt+0x54>
     140:	adrp	x3, 0 <_start>
     144:	adrp	x2, 0 <_start>
     148:	adrp	x0, 0 <_start>
     14c:	mov	w1, #0x26                  	// #38
     150:	ldr	x3, [x3]
     154:	ldr	x2, [x2]
     158:	ldr	x0, [x0]
     15c:	ldr	x19, [x19, #16]
     160:	mov	x4, x19
     164:	bl	ae68 <grub_real_dprintf>
     168:	mov	x0, x19
     16c:	ldp	x19, x20, [sp, #16]
     170:	ldp	x21, x22, [sp, #32]
     174:	ldp	x29, x30, [sp], #64
     178:	ret
     17c:	mov	x19, #0x0                   	// #0
     180:	mov	x0, x19
     184:	ldp	x19, x20, [sp, #16]
     188:	ldp	x21, x22, [sp, #32]
     18c:	ldp	x29, x30, [sp], #64
     190:	ret
     194:	nop
	...

00000000000001b8 <grub_arch_sync_caches>:
     1b8:	stp	x29, x30, [sp, #-64]!
     1bc:	adrp	x2, 0 <_start>
     1c0:	mov	x29, sp
     1c4:	stp	x21, x22, [sp, #32]
     1c8:	sub	x21, x1, #0x1
     1cc:	ldr	x22, [x2]
     1d0:	stp	x19, x20, [sp, #16]
     1d4:	mov	x19, x0
     1d8:	ldr	x2, [x22]
     1dc:	cbz	x2, 228 <grub_arch_sync_caches+0x70>
     1e0:	ldr	x3, [x22, #8]
     1e4:	cmp	x3, x2
     1e8:	csel	x3, x3, x2, ge  // ge = tcont
     1ec:	add	x20, x19, x3
     1f0:	neg	x3, x3
     1f4:	add	x20, x20, x21
     1f8:	and	x19, x3, x19
     1fc:	and	x20, x20, x3
     200:	mov	x0, x19
     204:	mov	x1, x20
     208:	bl	2e0 <grub_arch_clean_dcache_range>
     20c:	mov	x1, x20
     210:	mov	x0, x19
     214:	ldr	x2, [x22, #8]
     218:	ldp	x19, x20, [sp, #16]
     21c:	ldp	x21, x22, [sp, #32]
     220:	ldp	x29, x30, [sp], #64
     224:	b	300 <grub_arch_invalidate_icache_range>
     228:	str	x23, [sp, #48]
     22c:	mrs	x5, ctr_el0
     230:	adrp	x1, 0 <_start>
     234:	and	w6, w5, #0xf
     238:	ubfx	w4, w5, #16, #4
     23c:	adrp	x2, 0 <_start>
     240:	adrp	x0, 0 <_start>
     244:	mov	w5, #0x4                   	// #4
     248:	ldr	x3, [x1]
     24c:	lsl	w4, w5, w4
     250:	lsl	w5, w5, w6
     254:	sxtw	x4, w4
     258:	ldr	x23, [x2]
     25c:	sxtw	x5, w5
     260:	ldr	x20, [x0]
     264:	mov	x2, x23
     268:	mov	w1, #0x2a                  	// #42
     26c:	stp	x4, x5, [x22]
     270:	mov	x0, x20
     274:	bl	ae68 <grub_real_dprintf>
     278:	adrp	x1, 0 <_start>
     27c:	mov	x2, x23
     280:	ldr	x4, [x22, #8]
     284:	mov	x0, x20
     288:	ldr	x3, [x1]
     28c:	mov	w1, #0x2b                  	// #43
     290:	bl	ae68 <grub_real_dprintf>
     294:	ldr	x2, [x22]
     298:	cbz	x2, 2a4 <grub_arch_sync_caches+0xec>
     29c:	ldr	x23, [sp, #48]
     2a0:	b	1e0 <grub_arch_sync_caches+0x28>
     2a4:	adrp	x0, 0 <_start>
     2a8:	ldr	x0, [x0]
     2ac:	bl	b188 <grub_fatal>
	...

00000000000002e0 <grub_arch_clean_dcache_range>:
     2e0:	cmp	x0, x1
     2e4:	b.ge	2f4 <grub_arch_clean_dcache_range+0x14>  // b.tcont
     2e8:	dc	cvau, x0
     2ec:	add	x0, x0, x2
     2f0:	b	2e0 <grub_arch_clean_dcache_range>
     2f4:	dsb	ish
     2f8:	isb
     2fc:	ret

0000000000000300 <grub_arch_invalidate_icache_range>:
     300:	cmp	x0, x1
     304:	b.ge	314 <grub_arch_invalidate_icache_range+0x14>  // b.tcont
     308:	ic	ivau, x0
     30c:	add	x0, x0, x2
     310:	b	300 <grub_arch_invalidate_icache_range>
     314:	dsb	ish
     318:	isb
     31c:	ret

0000000000000320 <grub_arch_dl_check_header>:
     320:	ldrh	w1, [x0, #4]
     324:	cmp	w1, #0x102
     328:	b.ne	338 <grub_arch_dl_check_header+0x18>  // b.any
     32c:	ldrh	w0, [x0, #18]
     330:	cmp	w0, #0xb7
     334:	b.eq	348 <grub_arch_dl_check_header+0x28>  // b.none
     338:	adrp	x1, 0 <_start>
     33c:	mov	w0, #0x15                  	// #21
     340:	ldr	x1, [x1]
     344:	b	85c0 <grub_error>
     348:	mov	w0, #0x0                   	// #0
     34c:	ret
	...

0000000000000358 <grub_arch_dl_relocate_symbols>:
     358:	stp	x29, x30, [sp, #-112]!
     35c:	mov	x29, sp
     360:	stp	x25, x26, [sp, #64]
     364:	stp	x27, x28, [sp, #80]
     368:	mov	x28, x0
     36c:	ldp	x0, x26, [x2, #24]
     370:	stp	x19, x20, [sp, #16]
     374:	add	x20, x1, x0
     378:	add	x26, x20, x26
     37c:	cmp	x20, x26
     380:	b.cs	494 <grub_arch_dl_relocate_symbols+0x13c>  // b.hs, b.nlast
     384:	mov	x25, x2
     388:	stp	x21, x22, [sp, #32]
     38c:	mov	w21, #0x0                   	// #0
     390:	stp	x23, x24, [sp, #48]
     394:	mov	x24, x3
     398:	adrp	x23, 0 <_start>
     39c:	b	408 <grub_arch_dl_relocate_symbols+0xb0>
     3a0:	cmp	x2, #0x101
     3a4:	b.eq	64c <grub_arch_dl_relocate_symbols+0x2f4>  // b.none
     3a8:	cmp	x2, #0x105
     3ac:	b.ne	624 <grub_arch_dl_relocate_symbols+0x2cc>  // b.any
     3b0:	ldrsw	x0, [x6, x27]
     3b4:	sub	x0, x0, x22
     3b8:	add	x0, x0, x19
     3bc:	cmp	x0, w0, sxtw
     3c0:	sxtw	x9, w0
     3c4:	b.ne	6f0 <grub_arch_dl_relocate_symbols+0x398>  // b.any
     3c8:	adrp	x0, 0 <_start>
     3cc:	mov	x5, x19
     3d0:	ldr	x2, [x23]
     3d4:	mov	x4, x22
     3d8:	ldr	x3, [x0]
     3dc:	adrp	x0, 0 <_start>
     3e0:	mov	w1, #0x83                  	// #131
     3e4:	stp	x6, x9, [sp, #96]
     3e8:	ldr	x0, [x0]
     3ec:	bl	ae68 <grub_real_dprintf>
     3f0:	ldp	x6, x9, [sp, #96]
     3f4:	str	w9, [x6, x27]
     3f8:	ldr	x0, [x25, #56]
     3fc:	add	x20, x20, x0
     400:	cmp	x26, x20
     404:	b.ls	48c <grub_arch_dl_relocate_symbols+0x134>  // b.plast
     408:	ldr	x27, [x20]
     40c:	ldr	x0, [x24, #16]
     410:	cmp	x27, x0
     414:	b.cs	6a8 <grub_arch_dl_relocate_symbols+0x350>  // b.hs, b.nlast
     418:	ldr	x2, [x20, #8]
     41c:	ldp	x3, x4, [x28, #32]
     420:	lsr	x1, x2, #32
     424:	ldr	w0, [x25, #4]
     428:	cmp	w0, #0x4
     42c:	madd	x1, x1, x4, x3
     430:	ldr	x19, [x1, #8]
     434:	b.ne	440 <grub_arch_dl_relocate_symbols+0xe8>  // b.any
     438:	ldr	x0, [x20, #16]
     43c:	add	x19, x19, x0
     440:	ldr	x6, [x24, #8]
     444:	cmp	w2, #0x11b
     448:	and	x2, x2, #0xffffffff
     44c:	add	x22, x6, x27
     450:	b.hi	4ac <grub_arch_dl_relocate_symbols+0x154>  // b.pmore
     454:	cmp	x2, #0x119
     458:	b.hi	5f8 <grub_arch_dl_relocate_symbols+0x2a0>  // b.pmore
     45c:	cmp	x2, #0x113
     460:	b.eq	5d0 <grub_arch_dl_relocate_symbols+0x278>  // b.none
     464:	b.ls	3a0 <grub_arch_dl_relocate_symbols+0x48>  // b.plast
     468:	cmp	x2, #0x115
     46c:	b.ne	624 <grub_arch_dl_relocate_symbols+0x2cc>  // b.any
     470:	mov	x0, x22
     474:	mov	x1, x19
     478:	bl	860 <grub_arm64_set_abs_lo12>
     47c:	ldr	x0, [x25, #56]
     480:	add	x20, x20, x0
     484:	cmp	x26, x20
     488:	b.hi	408 <grub_arch_dl_relocate_symbols+0xb0>  // b.pmore
     48c:	ldp	x21, x22, [sp, #32]
     490:	ldp	x23, x24, [sp, #48]
     494:	mov	w0, #0x0                   	// #0
     498:	ldp	x19, x20, [sp, #16]
     49c:	ldp	x25, x26, [sp, #64]
     4a0:	ldp	x27, x28, [sp, #80]
     4a4:	ldp	x29, x30, [sp], #112
     4a8:	ret
     4ac:	cmp	x2, #0x137
     4b0:	b.eq	4e0 <grub_arch_dl_relocate_symbols+0x188>  // b.none
     4b4:	cmp	x2, #0x138
     4b8:	b.ne	4c8 <grub_arch_dl_relocate_symbols+0x170>  // b.any
     4bc:	cbz	w21, 6e0 <grub_arch_dl_relocate_symbols+0x388>
     4c0:	sub	w21, w21, #0x1
     4c4:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     4c8:	cmp	x2, #0x11e
     4cc:	b.ne	624 <grub_arch_dl_relocate_symbols+0x2cc>  // b.any
     4d0:	mov	x1, x19
     4d4:	mov	x0, x22
     4d8:	bl	870 <grub_arm64_set_abs_lo12_ldst64>
     4dc:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     4e0:	ldr	x27, [x28, #72]
     4e4:	adrp	x0, 0 <_start>
     4e8:	ldr	x2, [x23]
     4ec:	mov	x9, x27
     4f0:	ldr	x3, [x0]
     4f4:	adrp	x0, 0 <_start>
     4f8:	str	x19, [x9], #8
     4fc:	mov	x5, x19
     500:	ldr	x0, [x0]
     504:	str	x9, [x28, #72]
     508:	and	x9, x27, #0xfffffffffffff000
     50c:	mov	x4, x22
     510:	mov	x6, x27
     514:	and	x19, x22, #0xfffffffffffff000
     518:	mov	w1, #0x90                  	// #144
     51c:	sub	x19, x9, x19
     520:	bl	ae68 <grub_real_dprintf>
     524:	add	w21, w21, #0x1
     528:	mov	x0, x19
     52c:	bl	820 <grub_arm64_check_hi21_signed>
     530:	cbz	w0, 6d0 <grub_arch_dl_relocate_symbols+0x378>
     534:	mov	x1, x19
     538:	mov	x0, x22
     53c:	bl	830 <grub_arm64_set_hi21>
     540:	ldr	x0, [x25, #56]
     544:	add	x19, x20, x0
     548:	cmp	x26, x19
     54c:	b.ls	5a8 <grub_arch_dl_relocate_symbols+0x250>  // b.plast
     550:	ldr	w2, [x20, #12]
     554:	b	564 <grub_arch_dl_relocate_symbols+0x20c>
     558:	add	x19, x19, x0
     55c:	cmp	x26, x19
     560:	b.ls	5a8 <grub_arch_dl_relocate_symbols+0x250>  // b.plast
     564:	ldr	x1, [x19, #8]
     568:	cmp	x2, x1, lsr #32
     56c:	b.ne	558 <grub_arch_dl_relocate_symbols+0x200>  // b.any
     570:	ldr	x3, [x19, #16]
     574:	ldr	x4, [x20, #16]
     578:	cmp	x4, x3
     57c:	b.ne	558 <grub_arch_dl_relocate_symbols+0x200>  // b.any
     580:	cmp	w1, #0x138
     584:	b.ne	558 <grub_arch_dl_relocate_symbols+0x200>  // b.any
     588:	ldr	x2, [x24, #8]
     58c:	mov	x1, x27
     590:	ldr	x0, [x19]
     594:	add	x0, x2, x0
     598:	bl	870 <grub_arm64_set_abs_lo12_ldst64>
     59c:	cmp	x26, x19
     5a0:	b.hi	3f8 <grub_arch_dl_relocate_symbols+0xa0>  // b.pmore
     5a4:	nop
     5a8:	adrp	x1, 0 <_start>
     5ac:	mov	w0, #0x2                   	// #2
     5b0:	ldr	x1, [x1]
     5b4:	ldp	x19, x20, [sp, #16]
     5b8:	ldp	x21, x22, [sp, #32]
     5bc:	ldp	x23, x24, [sp, #48]
     5c0:	ldp	x25, x26, [sp, #64]
     5c4:	ldp	x27, x28, [sp, #80]
     5c8:	ldp	x29, x30, [sp], #112
     5cc:	b	85c0 <grub_error>
     5d0:	and	x1, x22, #0xfffffffffffff000
     5d4:	and	x19, x19, #0xfffffffffffff000
     5d8:	sub	x19, x19, x1
     5dc:	mov	x0, x19
     5e0:	bl	820 <grub_arm64_check_hi21_signed>
     5e4:	cbz	w0, 6d0 <grub_arch_dl_relocate_symbols+0x378>
     5e8:	mov	x1, x19
     5ec:	mov	x0, x22
     5f0:	bl	830 <grub_arm64_set_hi21>
     5f4:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     5f8:	sub	x27, x19, x22
     5fc:	mov	x0, x27
     600:	bl	770 <grub_arm_64_check_xxxx26_offset>
     604:	cbz	w0, 680 <grub_arch_dl_relocate_symbols+0x328>
     608:	mov	x0, x27
     60c:	bl	770 <grub_arm_64_check_xxxx26_offset>
     610:	cbz	w0, 700 <grub_arch_dl_relocate_symbols+0x3a8>
     614:	mov	x1, x27
     618:	mov	x0, x22
     61c:	bl	788 <grub_arm64_set_xxxx26_offset>
     620:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     624:	adrp	x1, 0 <_start>
     628:	mov	w0, #0x18                  	// #24
     62c:	ldp	x19, x20, [sp, #16]
     630:	ldr	x1, [x1]
     634:	ldp	x21, x22, [sp, #32]
     638:	ldp	x23, x24, [sp, #48]
     63c:	ldp	x25, x26, [sp, #64]
     640:	ldp	x27, x28, [sp, #80]
     644:	ldp	x29, x30, [sp], #112
     648:	b	85c0 <grub_error>
     64c:	adrp	x0, 0 <_start>
     650:	mov	x4, x22
     654:	ldr	x2, [x23]
     658:	mov	x5, x19
     65c:	ldr	x3, [x0]
     660:	adrp	x0, 0 <_start>
     664:	mov	w1, #0x59                  	// #89
     668:	str	x6, [sp, #96]
     66c:	ldr	x0, [x0]
     670:	bl	ae68 <grub_real_dprintf>
     674:	ldr	x6, [sp, #96]
     678:	str	x19, [x6, x27]
     67c:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     680:	ldr	x0, [x28, #88]
     684:	add	x1, x0, #0x10
     688:	str	x1, [x28, #88]
     68c:	mov	x1, #0x50                  	// #80
     690:	sub	x27, x0, x22
     694:	movk	x1, #0x5800, lsl #16
     698:	movk	x1, #0x200, lsl #32
     69c:	movk	x1, #0xd61f, lsl #48
     6a0:	stp	x1, x19, [x0]
     6a4:	b	608 <grub_arch_dl_relocate_symbols+0x2b0>
     6a8:	adrp	x1, 0 <_start>
     6ac:	mov	w0, #0x2                   	// #2
     6b0:	ldp	x19, x20, [sp, #16]
     6b4:	ldr	x1, [x1]
     6b8:	ldp	x21, x22, [sp, #32]
     6bc:	ldp	x23, x24, [sp, #48]
     6c0:	ldp	x25, x26, [sp, #64]
     6c4:	ldp	x27, x28, [sp, #80]
     6c8:	ldp	x29, x30, [sp], #112
     6cc:	b	85c0 <grub_error>
     6d0:	adrp	x1, 0 <_start>
     6d4:	mov	w0, #0x2                   	// #2
     6d8:	ldr	x1, [x1]
     6dc:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
     6e0:	adrp	x1, 0 <_start>
     6e4:	mov	w0, #0x2                   	// #2
     6e8:	ldr	x1, [x1]
     6ec:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
     6f0:	adrp	x1, 0 <_start>
     6f4:	mov	w0, #0x2                   	// #2
     6f8:	ldr	x1, [x1]
     6fc:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
     700:	adrp	x1, 0 <_start>
     704:	mov	w0, #0x2                   	// #2
     708:	ldr	x1, [x1]
     70c:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
	...

0000000000000770 <grub_arm_64_check_xxxx26_offset>:
     770:	mov	x1, #0x8000000             	// #134217728
     774:	add	x0, x0, x1
     778:	mov	x1, #0xfffffff             	// #268435455
     77c:	cmp	x0, x1
     780:	cset	w0, ls  // ls = plast
     784:	ret

0000000000000788 <grub_arm64_set_xxxx26_offset>:
     788:	stp	x29, x30, [sp, #-32]!
     78c:	cmp	x1, #0x0
     790:	mov	x6, x1
     794:	mov	x29, sp
     798:	stp	x19, x20, [sp, #16]
     79c:	mov	w5, #0x2b                  	// #43
     7a0:	mov	x19, x1
     7a4:	mov	x20, x0
     7a8:	b.le	7f0 <grub_arm64_set_xxxx26_offset+0x68>
     7ac:	adrp	x2, 0 <_start>
     7b0:	adrp	x1, 0 <_start>
     7b4:	adrp	x0, 0 <_start>
     7b8:	mov	x4, x20
     7bc:	ldr	x3, [x2]
     7c0:	ubfx	w19, w19, #2, #26
     7c4:	ldr	x2, [x1]
     7c8:	mov	w1, #0x31                  	// #49
     7cc:	ldr	x0, [x0]
     7d0:	bl	ae68 <grub_real_dprintf>
     7d4:	ldr	w1, [x20]
     7d8:	and	w1, w1, #0xfc000000
     7dc:	orr	w19, w1, w19
     7e0:	str	w19, [x20]
     7e4:	ldp	x19, x20, [sp, #16]
     7e8:	ldp	x29, x30, [sp], #32
     7ec:	ret
     7f0:	b.eq	800 <grub_arm64_set_xxxx26_offset+0x78>  // b.none
     7f4:	neg	x6, x1
     7f8:	mov	w5, #0x2d                  	// #45
     7fc:	b	7ac <grub_arm64_set_xxxx26_offset+0x24>
     800:	mov	w5, #0x2d                  	// #45
     804:	b	7ac <grub_arm64_set_xxxx26_offset+0x24>
	...

0000000000000820 <grub_arm64_check_hi21_signed>:
     820:	cmp	x0, w0, sxtw
     824:	cset	w0, eq  // eq = none
     828:	ret
     82c:	nop

0000000000000830 <grub_arm64_set_hi21>:
     830:	asr	x2, x1, #12
     834:	asr	x1, x1, #14
     838:	ldr	w3, [x0]
     83c:	mov	w4, #0x1f                  	// #31
     840:	ubfiz	w2, w2, #29, #2
     844:	ubfiz	w1, w1, #5, #19
     848:	orr	w1, w2, w1
     84c:	movk	w4, #0x9f00, lsl #16
     850:	and	w2, w3, w4
     854:	orr	w1, w1, w2
     858:	str	w1, [x0]
     85c:	ret

0000000000000860 <grub_arm64_set_abs_lo12>:
     860:	ldr	w2, [x0]
     864:	bfi	w2, w1, #10, #12
     868:	str	w2, [x0]
     86c:	ret

0000000000000870 <grub_arm64_set_abs_lo12_ldst64>:
     870:	lsl	w1, w1, #7
     874:	and	w2, w1, #0x7fc00
     878:	ldr	w1, [x0]
     87c:	and	w1, w1, #0xfff803ff
     880:	orr	w1, w1, w2
     884:	str	w1, [x0]
     888:	ret
     88c:	nop

0000000000000890 <grub_arm64_dl_get_tramp_got_size>:
     890:	ldrh	w8, [x0, #60]
     894:	str	xzr, [x1]
     898:	str	xzr, [x2]
     89c:	ldr	x5, [x0, #40]
     8a0:	add	x5, x0, x5
     8a4:	cbz	w8, 934 <grub_arm64_dl_get_tramp_got_size+0xa4>
     8a8:	ldrh	w9, [x0, #58]
     8ac:	mov	w7, #0x0                   	// #0
     8b0:	b	8c4 <grub_arm64_dl_get_tramp_got_size+0x34>
     8b4:	add	w7, w7, #0x1
     8b8:	add	x5, x5, x9
     8bc:	cmp	w7, w8
     8c0:	b.eq	934 <grub_arm64_dl_get_tramp_got_size+0xa4>  // b.none
     8c4:	ldr	w3, [x5, #4]
     8c8:	cmp	w3, #0x9
     8cc:	ccmp	w3, #0x4, #0x4, ne  // ne = any
     8d0:	b.ne	8b4 <grub_arm64_dl_get_tramp_got_size+0x24>  // b.any
     8d4:	ldp	x3, x6, [x5, #24]
     8d8:	add	x3, x0, x3
     8dc:	add	x6, x3, x6
     8e0:	cmp	x3, x6
     8e4:	b.cc	910 <grub_arm64_dl_get_tramp_got_size+0x80>  // b.lo, b.ul, b.last
     8e8:	b	8b4 <grub_arm64_dl_get_tramp_got_size+0x24>
     8ec:	cmp	x4, #0x119
     8f0:	b.ls	900 <grub_arm64_dl_get_tramp_got_size+0x70>  // b.plast
     8f4:	ldr	x4, [x1]
     8f8:	add	x4, x4, #0x10
     8fc:	str	x4, [x1]
     900:	ldr	x4, [x5, #56]
     904:	add	x3, x3, x4
     908:	cmp	x6, x3
     90c:	b.ls	8b4 <grub_arm64_dl_get_tramp_got_size+0x24>  // b.plast
     910:	ldr	w4, [x3, #8]
     914:	cmp	x4, #0x11b
     918:	b.ls	8ec <grub_arm64_dl_get_tramp_got_size+0x5c>  // b.plast
     91c:	cmp	x4, #0x137
     920:	b.ne	900 <grub_arm64_dl_get_tramp_got_size+0x70>  // b.any
     924:	ldr	x4, [x2]
     928:	add	x4, x4, #0x8
     92c:	str	x4, [x2]
     930:	b	900 <grub_arm64_dl_get_tramp_got_size+0x70>
     934:	mov	w0, #0x0                   	// #0
     938:	ret
     93c:	nop
     940:	mov	x4, x0
     944:	adrp	x1, 0 <_start>
     948:	adrp	x2, 0 <_start>
     94c:	adrp	x0, 0 <_start>
     950:	ldr	x3, [x1]
     954:	mov	w1, #0x21c                 	// #540
     958:	ldr	x2, [x2]
     95c:	ldr	x0, [x0]
     960:	ldr	x4, [x4]
     964:	b	ae68 <grub_real_dprintf>
	...

0000000000000980 <grub_efidisk_fini>:
     980:	stp	x29, x30, [sp, #-32]!
     984:	adrp	x0, 0 <_start>
     988:	mov	x29, sp
     98c:	stp	x19, x20, [sp, #16]
     990:	ldr	x20, [x0]
     994:	ldr	x19, [x20]
     998:	cbz	x19, 9b0 <grub_efidisk_fini+0x30>
     99c:	nop
     9a0:	mov	x0, x19
     9a4:	ldr	x19, [x19, #32]
     9a8:	bl	5828 <grub_free>
     9ac:	cbnz	x19, 9a0 <grub_efidisk_fini+0x20>
     9b0:	ldr	x19, [x20, #8]
     9b4:	cbz	x19, 9c8 <grub_efidisk_fini+0x48>
     9b8:	mov	x0, x19
     9bc:	ldr	x19, [x19, #32]
     9c0:	bl	5828 <grub_free>
     9c4:	cbnz	x19, 9b8 <grub_efidisk_fini+0x38>
     9c8:	ldr	x19, [x20, #16]
     9cc:	cbz	x19, 9e0 <grub_efidisk_fini+0x60>
     9d0:	mov	x0, x19
     9d4:	ldr	x19, [x19, #32]
     9d8:	bl	5828 <grub_free>
     9dc:	cbnz	x19, 9d0 <grub_efidisk_fini+0x50>
     9e0:	stp	xzr, xzr, [x20]
     9e4:	adrp	x0, 0 <_start>
     9e8:	str	xzr, [x20, #16]
     9ec:	ldp	x19, x20, [sp, #16]
     9f0:	ldp	x29, x30, [sp], #32
     9f4:	ldr	x0, [x0]
     9f8:	b	6948 <grub_disk_dev_unregister>
     9fc:	nop
	...
     a10:	stp	x29, x30, [sp, #-80]!
     a14:	adrp	x3, 0 <_start>
     a18:	adrp	x4, 0 <_start>
     a1c:	adrp	x2, 0 <_start>
     a20:	mov	x29, sp
     a24:	ldr	x3, [x3]
     a28:	stp	x21, x22, [sp, #32]
     a2c:	mov	x21, x1
     a30:	ldr	x22, [x2]
     a34:	stp	x23, x24, [sp, #48]
     a38:	mov	w1, #0x1e2                 	// #482
     a3c:	ldr	x23, [x4]
     a40:	stp	x19, x20, [sp, #16]
     a44:	mov	x20, x0
     a48:	mov	x4, x0
     a4c:	mov	x2, x23
     a50:	mov	x0, x22
     a54:	bl	ae68 <grub_real_dprintf>
     a58:	ldrb	w1, [x20]
     a5c:	sub	w0, w1, #0x66
     a60:	cmp	w1, #0x63
     a64:	and	w0, w0, #0xfffffffd
     a68:	and	w0, w0, #0xff
     a6c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     a70:	b.ne	c8c <grub_efidisk_fini+0x30c>  // b.any
     a74:	ldrb	w0, [x20, #1]
     a78:	cmp	w0, #0x64
     a7c:	b.ne	c8c <grub_efidisk_fini+0x30c>  // b.any
     a80:	mov	x1, #0x0                   	// #0
     a84:	add	x0, x20, #0x2
     a88:	mov	w2, #0xa                   	// #10
     a8c:	bl	9ed8 <grub_strtoul>
     a90:	adrp	x1, 0 <_start>
     a94:	ldr	x19, [x1]
     a98:	ldr	w24, [x19]
     a9c:	cbnz	w24, c94 <grub_efidisk_fini+0x314>
     aa0:	tbnz	w0, #31, be4 <grub_efidisk_fini+0x264>
     aa4:	ldrb	w2, [x20]
     aa8:	cmp	w2, #0x66
     aac:	b.eq	c30 <grub_efidisk_fini+0x2b0>  // b.none
     ab0:	cmp	w2, #0x68
     ab4:	b.eq	ae0 <grub_efidisk_fini+0x160>  // b.none
     ab8:	cmp	w2, #0x63
     abc:	b.eq	bfc <grub_efidisk_fini+0x27c>  // b.none
     ac0:	adrp	x1, 0 <_start>
     ac4:	mov	w0, #0xc                   	// #12
     ac8:	ldp	x19, x20, [sp, #16]
     acc:	ldp	x21, x22, [sp, #32]
     ad0:	ldp	x23, x24, [sp, #48]
     ad4:	ldp	x29, x30, [sp], #80
     ad8:	ldr	x1, [x1]
     adc:	b	85c0 <grub_error>
     ae0:	adrp	x1, 0 <_start>
     ae4:	cmp	w0, #0x0
     ae8:	ldr	x1, [x1]
     aec:	ldr	x19, [x1, #8]
     af0:	mov	w1, w0
     af4:	ccmp	x19, #0x0, #0x4, ne  // ne = any
     af8:	b.eq	b14 <grub_efidisk_fini+0x194>  // b.none
     afc:	nop
     b00:	ldr	x19, [x19, #32]
     b04:	sub	w1, w1, #0x1
     b08:	cmp	x19, #0x0
     b0c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     b10:	b.ne	b00 <grub_efidisk_fini+0x180>  // b.any
     b14:	cbnz	w1, ac0 <grub_efidisk_fini+0x140>
     b18:	cbz	x19, ac0 <grub_efidisk_fini+0x140>
     b1c:	ldr	x1, [x19, #24]
     b20:	str	x25, [sp, #64]
     b24:	adrp	x3, 0 <_start>
     b28:	orr	w0, w2, w0, lsl #8
     b2c:	mov	x2, x23
     b30:	ldr	x25, [x1, #8]
     b34:	sxtw	x0, w0
     b38:	ldr	x3, [x3]
     b3c:	mov	x4, x25
     b40:	ldp	w6, w7, [x25, #12]
     b44:	mov	w1, #0x1ff                 	// #511
     b48:	ldr	x5, [x25, #24]
     b4c:	str	x0, [x21, #32]
     b50:	mov	x0, x22
     b54:	bl	ae68 <grub_real_dprintf>
     b58:	ldr	w2, [x25, #16]
     b5c:	sub	w24, w2, #0x1
     b60:	ands	w24, w24, w2
     b64:	b.ne	cac <grub_efidisk_fini+0x32c>  // b.any
     b68:	ldr	x0, [x25, #24]
     b6c:	mov	w1, #0x14                  	// #20
     b70:	ldr	w2, [x25, #12]
     b74:	add	x0, x0, #0x1
     b78:	str	x0, [x21, #16]
     b7c:	sub	w0, w2, #0x1
     b80:	str	w1, [x21, #28]
     b84:	tst	w0, w2
     b88:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     b8c:	b.eq	c68 <grub_efidisk_fini+0x2e8>  // b.none
     b90:	str	wzr, [x21, #24]
     b94:	cmp	w2, #0x1
     b98:	b.ls	bc0 <grub_efidisk_fini+0x240>  // b.plast
     b9c:	mov	w0, #0x1                   	// #1
     ba0:	mov	w4, w0
     ba4:	nop
     ba8:	lsl	w1, w4, w0
     bac:	mov	w3, w0
     bb0:	cmp	w2, w1
     bb4:	add	w0, w0, #0x1
     bb8:	b.hi	ba8 <grub_efidisk_fini+0x228>  // b.pmore
     bbc:	str	w3, [x21, #24]
     bc0:	adrp	x0, 0 <_start>
     bc4:	str	x19, [x21, #64]
     bc8:	mov	x4, x20
     bcc:	mov	x2, x23
     bd0:	ldr	x3, [x0]
     bd4:	mov	w1, #0x213                 	// #531
     bd8:	mov	x0, x22
     bdc:	bl	ae68 <grub_real_dprintf>
     be0:	ldr	x25, [sp, #64]
     be4:	mov	w0, w24
     be8:	ldp	x19, x20, [sp, #16]
     bec:	ldp	x21, x22, [sp, #32]
     bf0:	ldp	x23, x24, [sp, #48]
     bf4:	ldp	x29, x30, [sp], #80
     bf8:	ret
     bfc:	adrp	x1, 0 <_start>
     c00:	cmp	w0, #0x0
     c04:	ldr	x1, [x1]
     c08:	ldr	x19, [x1, #16]
     c0c:	mov	w1, w0
     c10:	ccmp	x19, #0x0, #0x4, ne  // ne = any
     c14:	b.eq	b14 <grub_efidisk_fini+0x194>  // b.none
     c18:	ldr	x19, [x19, #32]
     c1c:	sub	w1, w1, #0x1
     c20:	cmp	x19, #0x0
     c24:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     c28:	b.ne	c18 <grub_efidisk_fini+0x298>  // b.any
     c2c:	b	b14 <grub_efidisk_fini+0x194>
     c30:	adrp	x1, 0 <_start>
     c34:	ldr	x1, [x1]
     c38:	ldr	x19, [x1]
     c3c:	mov	w1, w0
     c40:	cmp	x19, #0x0
     c44:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     c48:	b.eq	b14 <grub_efidisk_fini+0x194>  // b.none
     c4c:	nop
     c50:	ldr	x19, [x19, #32]
     c54:	sub	w1, w1, #0x1
     c58:	cmp	x19, #0x0
     c5c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     c60:	b.ne	c50 <grub_efidisk_fini+0x2d0>  // b.any
     c64:	b	b14 <grub_efidisk_fini+0x194>
     c68:	adrp	x1, 0 <_start>
     c6c:	mov	w0, #0x1d                  	// #29
     c70:	ldr	x1, [x1]
     c74:	ldp	x19, x20, [sp, #16]
     c78:	ldp	x21, x22, [sp, #32]
     c7c:	ldp	x23, x24, [sp, #48]
     c80:	ldr	x25, [sp, #64]
     c84:	ldp	x29, x30, [sp], #80
     c88:	b	85c0 <grub_error>
     c8c:	adrp	x0, 0 <_start>
     c90:	ldr	x19, [x0]
     c94:	adrp	x1, 0 <_start>
     c98:	mov	w0, #0xc                   	// #12
     c9c:	ldr	x1, [x1]
     ca0:	bl	85c0 <grub_error>
     ca4:	ldr	w24, [x19]
     ca8:	b	be4 <grub_efidisk_fini+0x264>
     cac:	adrp	x1, 0 <_start>
     cb0:	mov	w0, #0x1d                  	// #29
     cb4:	ldr	x1, [x1]
     cb8:	b	c74 <grub_efidisk_fini+0x2f4>
     cbc:	nop
	...
     d18:	stp	x29, x30, [sp, #-96]!
     d1c:	adrp	x1, 0 <_start>
     d20:	mov	x2, #0x0                   	// #0
     d24:	mov	x29, sp
     d28:	stp	x23, x24, [sp, #48]
     d2c:	add	x3, sp, #0x58
     d30:	mov	w0, #0x2                   	// #2
     d34:	ldr	x23, [x1]
     d38:	stp	x21, x22, [sp, #32]
     d3c:	add	x23, x23, #0x40
     d40:	mov	x1, x23
     d44:	bl	1f68 <grub_efi_locate_handle>
     d48:	cbz	x0, e38 <grub_efidisk_fini+0x4b8>
     d4c:	mov	x24, x0
     d50:	ldr	x0, [sp, #88]
     d54:	sub	x1, x0, #0x1
     d58:	str	x1, [sp, #88]
     d5c:	cbz	x0, e74 <grub_efidisk_fini+0x4f4>
     d60:	stp	x25, x26, [sp, #64]
     d64:	mov	w25, #0x5845                	// #22597
     d68:	mov	x22, #0x0                   	// #0
     d6c:	movk	w25, #0x6950, lsl #16
     d70:	stp	x19, x20, [sp, #16]
     d74:	mov	x20, x24
     d78:	b	db0 <grub_efidisk_fini+0x430>
     d7c:	bl	57d8 <grub_malloc>
     d80:	mov	x2, x0
     d84:	cbz	x0, e14 <grub_efidisk_fini+0x494>
     d88:	ldr	x0, [x20]
     d8c:	str	x22, [x2, #32]
     d90:	mov	x22, x2
     d94:	stp	x0, x19, [x2]
     d98:	stp	x21, x26, [x2, #16]
     d9c:	add	x20, x20, #0x8
     da0:	ldr	x0, [sp, #88]
     da4:	sub	x1, x0, #0x1
     da8:	str	x1, [sp, #88]
     dac:	cbz	x0, e50 <grub_efidisk_fini+0x4d0>
     db0:	ldr	x0, [x20]
     db4:	bl	2d28 <grub_efi_get_device_path>
     db8:	mov	x19, x0
     dbc:	cbz	x0, d9c <grub_efidisk_fini+0x41c>
     dc0:	bl	2d98 <grub_efi_find_last_device_path>
     dc4:	mov	x21, x0
     dc8:	mov	x1, x23
     dcc:	mov	w2, #0x2                   	// #2
     dd0:	cbz	x0, d9c <grub_efidisk_fini+0x41c>
     dd4:	ldr	x0, [x20]
     dd8:	bl	2060 <grub_efi_open_protocol>
     ddc:	mov	x26, x0
     de0:	mov	x0, #0x28                  	// #40
     de4:	cbz	x26, d9c <grub_efidisk_fini+0x41c>
     de8:	ldr	x1, [x26, #8]
     dec:	cbz	x1, d7c <grub_efidisk_fini+0x3fc>
     df0:	ldr	w2, [x1]
     df4:	cmp	w2, w25
     df8:	b.ne	d7c <grub_efidisk_fini+0x3fc>  // b.any
     dfc:	ldr	w1, [x1, #12]
     e00:	cmp	w1, #0x1
     e04:	b.eq	d9c <grub_efidisk_fini+0x41c>  // b.none
     e08:	bl	57d8 <grub_malloc>
     e0c:	mov	x2, x0
     e10:	cbnz	x0, d88 <grub_efidisk_fini+0x408>
     e14:	mov	x0, x24
     e18:	bl	5828 <grub_free>
     e1c:	cbz	x22, e30 <grub_efidisk_fini+0x4b0>
     e20:	mov	x0, x22
     e24:	ldr	x22, [x22, #32]
     e28:	bl	5828 <grub_free>
     e2c:	cbnz	x22, e20 <grub_efidisk_fini+0x4a0>
     e30:	ldp	x19, x20, [sp, #16]
     e34:	ldp	x25, x26, [sp, #64]
     e38:	mov	x22, #0x0                   	// #0
     e3c:	mov	x0, x22
     e40:	ldp	x21, x22, [sp, #32]
     e44:	ldp	x23, x24, [sp, #48]
     e48:	ldp	x29, x30, [sp], #96
     e4c:	ret
     e50:	ldp	x19, x20, [sp, #16]
     e54:	ldp	x25, x26, [sp, #64]
     e58:	mov	x0, x24
     e5c:	bl	5828 <grub_free>
     e60:	mov	x0, x22
     e64:	ldp	x21, x22, [sp, #32]
     e68:	ldp	x23, x24, [sp, #48]
     e6c:	ldp	x29, x30, [sp], #96
     e70:	ret
     e74:	mov	x22, #0x0                   	// #0
     e78:	b	e58 <grub_efidisk_fini+0x4d8>
     e7c:	nop
	...
     e88:	stp	x29, x30, [sp, #-48]!
     e8c:	mov	x29, sp
     e90:	stp	x19, x20, [sp, #16]
     e94:	mov	x19, x0
     e98:	mov	x20, x1
     e9c:	ldr	x0, [x1, #8]
     ea0:	bl	2df0 <grub_efi_duplicate_device_path>
     ea4:	cbz	x0, f0c <grub_efidisk_fini+0x58c>
     ea8:	str	x21, [sp, #32]
     eac:	mov	x21, x0
     eb0:	bl	2d98 <grub_efi_find_last_device_path>
     eb4:	cbz	x0, f08 <grub_efidisk_fini+0x588>
     eb8:	mov	w1, #0xff7f                	// #65407
     ebc:	movk	w1, #0x4, lsl #16
     ec0:	str	w1, [x0]
     ec4:	cbz	x19, ee8 <grub_efidisk_fini+0x568>
     ec8:	cmp	x20, x19
     ecc:	b.eq	ee0 <grub_efidisk_fini+0x560>  // b.none
     ed0:	ldr	x0, [x19, #8]
     ed4:	mov	x1, x21
     ed8:	bl	38d0 <grub_efi_compare_device_paths>
     edc:	cbz	w0, eec <grub_efidisk_fini+0x56c>
     ee0:	ldr	x19, [x19, #32]
     ee4:	cbnz	x19, ec8 <grub_efidisk_fini+0x548>
     ee8:	mov	x19, #0x0                   	// #0
     eec:	mov	x0, x21
     ef0:	bl	5828 <grub_free>
     ef4:	mov	x0, x19
     ef8:	ldp	x19, x20, [sp, #16]
     efc:	ldr	x21, [sp, #32]
     f00:	ldp	x29, x30, [sp], #48
     f04:	ret
     f08:	ldr	x21, [sp, #32]
     f0c:	mov	x19, #0x0                   	// #0
     f10:	mov	x0, x19
     f14:	ldp	x19, x20, [sp, #16]
     f18:	ldp	x29, x30, [sp], #48
     f1c:	ret
     f20:	stp	x29, x30, [sp, #-48]!
     f24:	mov	x29, sp
     f28:	ldr	x2, [x0]
     f2c:	stp	x19, x20, [sp, #16]
     f30:	mov	x20, x0
     f34:	str	x21, [sp, #32]
     f38:	mov	x21, x1
     f3c:	cbnz	x2, f5c <grub_efidisk_fini+0x5dc>
     f40:	b	fa4 <grub_efidisk_fini+0x624>
     f44:	cmp	w0, #0x0
     f48:	b.gt	fa4 <grub_efidisk_fini+0x624>
     f4c:	ldr	x2, [x20]
     f50:	add	x20, x2, #0x20
     f54:	ldr	x2, [x2, #32]
     f58:	cbz	x2, fa4 <grub_efidisk_fini+0x624>
     f5c:	ldr	x0, [x2, #8]
     f60:	bl	2d98 <grub_efi_find_last_device_path>
     f64:	mov	x19, x0
     f68:	ldr	x0, [x21, #8]
     f6c:	bl	2d98 <grub_efi_find_last_device_path>
     f70:	mov	x1, x0
     f74:	mov	x0, x19
     f78:	bl	38d0 <grub_efi_compare_device_paths>
     f7c:	cbnz	w0, f44 <grub_efidisk_fini+0x5c4>
     f80:	ldr	x0, [x20]
     f84:	ldr	x1, [x21, #8]
     f88:	ldr	x0, [x0, #8]
     f8c:	bl	38d0 <grub_efi_compare_device_paths>
     f90:	cbnz	w0, f44 <grub_efidisk_fini+0x5c4>
     f94:	ldp	x19, x20, [sp, #16]
     f98:	ldr	x21, [sp, #32]
     f9c:	ldp	x29, x30, [sp], #48
     fa0:	ret
     fa4:	mov	x0, #0x28                  	// #40
     fa8:	bl	57d8 <grub_malloc>
     fac:	mov	x19, x0
     fb0:	cbz	x0, f94 <grub_efidisk_fini+0x614>
     fb4:	mov	x1, x21
     fb8:	mov	x2, #0x28                  	// #40
     fbc:	bl	9a40 <grub_memmove>
     fc0:	ldr	x0, [x20]
     fc4:	str	x0, [x19, #32]
     fc8:	str	x19, [x20]
     fcc:	ldp	x19, x20, [sp, #16]
     fd0:	ldr	x21, [sp, #32]
     fd4:	ldp	x29, x30, [sp], #48
     fd8:	ret
     fdc:	nop
     fe0:	mov	x6, x0
     fe4:	cbz	x1, 1064 <grub_efidisk_fini+0x6e4>
     fe8:	mov	x3, x1
     fec:	mov	x4, #0x0                   	// #0
     ff0:	ldr	x5, [x3, #8]
     ff4:	ldr	x3, [x3, #40]
     ff8:	add	x4, x4, x5
     ffc:	cbnz	x3, ff0 <grub_efidisk_fini+0x670>
    1000:	ldr	x7, [x2, #8]
    1004:	mov	w0, #0x0                   	// #0
    1008:	ldr	w3, [x6, #24]
    100c:	ldr	x5, [x7, #8]
    1010:	sub	w3, w3, #0x9
    1014:	lsl	x5, x5, x3
    1018:	cmp	x5, x4
    101c:	b.eq	1024 <grub_efidisk_fini+0x6a4>  // b.none
    1020:	ret
    1024:	ldr	x4, [x7, #16]
    1028:	ldr	x5, [x1, #16]
    102c:	lsl	x3, x4, x3
    1030:	cmp	x3, x5
    1034:	b.ne	1020 <grub_efidisk_fini+0x6a0>  // b.any
    1038:	stp	x29, x30, [sp, #-32]!
    103c:	mov	x0, x1
    1040:	mov	x29, sp
    1044:	str	x2, [sp, #24]
    1048:	bl	b9f8 <grub_partition_get_name>
    104c:	ldr	x2, [sp, #24]
    1050:	mov	x1, x0
    1054:	mov	w0, #0x1                   	// #1
    1058:	str	x1, [x2]
    105c:	ldp	x29, x30, [sp], #32
    1060:	ret
    1064:	ldr	x7, [x2, #8]
    1068:	mov	x4, #0x0                   	// #0
    106c:	ldr	w3, [x6, #24]
    1070:	mov	w0, #0x0                   	// #0
    1074:	ldr	x5, [x7, #8]
    1078:	sub	w3, w3, #0x9
    107c:	lsl	x5, x5, x3
    1080:	cmp	x5, x4
    1084:	b.ne	1020 <grub_efidisk_fini+0x6a0>  // b.any
    1088:	b	1024 <grub_efidisk_fini+0x6a4>
    108c:	nop
    1090:	stp	x29, x30, [sp, #-64]!
    1094:	mov	x29, sp
    1098:	stp	x21, x22, [sp, #32]
    109c:	mov	w21, w5
    10a0:	ldr	x22, [x1, #24]
    10a4:	stp	x19, x20, [sp, #16]
    10a8:	lsl	x19, x3, x0
    10ac:	ldr	x1, [x22, #8]
    10b0:	ldr	w0, [x1, #16]
    10b4:	cmp	w0, #0x0
    10b8:	csinc	w0, w0, wzr, ne  // ne = any
    10bc:	sub	x3, x0, #0x1
    10c0:	tst	x4, x3
    10c4:	b.ne	1110 <grub_efidisk_fini+0x790>  // b.any
    10c8:	ldr	w1, [x1]
    10cc:	cbz	w5, 10f0 <grub_efidisk_fini+0x770>
    10d0:	mov	x3, x19
    10d4:	mov	x0, x22
    10d8:	ldp	x19, x20, [sp, #16]
    10dc:	ldr	x5, [x22, #32]
    10e0:	ldp	x21, x22, [sp, #32]
    10e4:	mov	x16, x5
    10e8:	ldp	x29, x30, [sp], #64
    10ec:	br	x16
    10f0:	mov	x3, x19
    10f4:	mov	x0, x22
    10f8:	ldp	x19, x20, [sp, #16]
    10fc:	ldr	x5, [x22, #24]
    1100:	ldp	x21, x22, [sp, #32]
    1104:	mov	x16, x5
    1108:	ldp	x29, x30, [sp], #64
    110c:	br	x16
    1110:	mov	x20, x4
    1114:	mov	x1, x19
    1118:	stp	x23, x24, [sp, #48]
    111c:	mov	x23, x2
    1120:	bl	5588 <grub_memalign>
    1124:	mov	x24, x0
    1128:	cbz	x0, 11b8 <grub_efidisk_fini+0x838>
    112c:	cbnz	w21, 1184 <grub_efidisk_fini+0x804>
    1130:	mov	x4, x0
    1134:	mov	x3, x19
    1138:	ldr	x0, [x22, #8]
    113c:	mov	x2, x23
    1140:	ldr	x5, [x22, #24]
    1144:	ldr	w1, [x0]
    1148:	mov	x0, x22
    114c:	blr	x5
    1150:	mov	x21, x0
    1154:	mov	x2, x19
    1158:	mov	x0, x20
    115c:	mov	x1, x24
    1160:	bl	9a40 <grub_memmove>
    1164:	mov	x0, x24
    1168:	bl	5828 <grub_free>
    116c:	mov	x0, x21
    1170:	ldp	x19, x20, [sp, #16]
    1174:	ldp	x21, x22, [sp, #32]
    1178:	ldp	x23, x24, [sp, #48]
    117c:	ldp	x29, x30, [sp], #64
    1180:	ret
    1184:	mov	x1, x20
    1188:	mov	x2, x19
    118c:	bl	9a40 <grub_memmove>
    1190:	ldr	x0, [x22, #8]
    1194:	mov	x3, x19
    1198:	ldr	x5, [x22, #32]
    119c:	mov	x2, x23
    11a0:	ldr	w1, [x0]
    11a4:	mov	x4, x24
    11a8:	mov	x0, x22
    11ac:	blr	x5
    11b0:	mov	x21, x0
    11b4:	b	1164 <grub_efidisk_fini+0x7e4>
    11b8:	mov	x21, #0x9                   	// #9
    11bc:	movk	x21, #0x8000, lsl #48
    11c0:	b	116c <grub_efidisk_fini+0x7ec>
    11c4:	nop
    11c8:	stp	x29, x30, [sp, #-48]!
    11cc:	adrp	x5, 0 <_start>
    11d0:	adrp	x4, 0 <_start>
    11d4:	mov	x29, sp
    11d8:	stp	x19, x20, [sp, #16]
    11dc:	mov	x19, x0
    11e0:	adrp	x0, 0 <_start>
    11e4:	stp	x21, x22, [sp, #32]
    11e8:	mov	x21, x2
    11ec:	mov	x22, x3
    11f0:	ldr	x2, [x4]
    11f4:	mov	x20, x1
    11f8:	ldr	x3, [x5]
    11fc:	mov	x4, x21
    1200:	ldr	x0, [x0]
    1204:	mov	x5, x1
    1208:	ldr	x6, [x19]
    120c:	mov	w1, #0x268                 	// #616
    1210:	bl	ae68 <grub_real_dprintf>
    1214:	ldr	w0, [x19, #24]
    1218:	mov	x4, x22
    121c:	ldr	x1, [x19, #64]
    1220:	mov	x3, x21
    1224:	mov	x2, x20
    1228:	mov	w5, #0x1                   	// #1
    122c:	bl	1090 <grub_efidisk_fini+0x710>
    1230:	mov	x1, #0xc                   	// #12
    1234:	movk	x1, #0x8000, lsl #48
    1238:	cmp	x0, x1
    123c:	b.eq	127c <grub_efidisk_fini+0x8fc>  // b.none
    1240:	cbnz	x0, 1258 <grub_efidisk_fini+0x8d8>
    1244:	mov	w0, #0x0                   	// #0
    1248:	ldp	x19, x20, [sp, #16]
    124c:	ldp	x21, x22, [sp, #32]
    1250:	ldp	x29, x30, [sp], #48
    1254:	ret
    1258:	mov	x2, x20
    125c:	adrp	x1, 0 <_start>
    1260:	ldr	x3, [x19]
    1264:	mov	w0, #0xf                   	// #15
    1268:	ldp	x19, x20, [sp, #16]
    126c:	ldp	x21, x22, [sp, #32]
    1270:	ldp	x29, x30, [sp], #48
    1274:	ldr	x1, [x1]
    1278:	b	85c0 <grub_error>
    127c:	adrp	x1, 0 <_start>
    1280:	mov	w0, #0xb                   	// #11
    1284:	ldr	x2, [x19]
    1288:	ldp	x19, x20, [sp, #16]
    128c:	ldp	x21, x22, [sp, #32]
    1290:	ldp	x29, x30, [sp], #48
    1294:	ldr	x1, [x1]
    1298:	b	85c0 <grub_error>
    129c:	nop
	...
    12c8:	stp	x29, x30, [sp, #-112]!
    12cc:	mov	x29, sp
    12d0:	stp	x19, x20, [sp, #16]
    12d4:	mov	x20, x0
    12d8:	stp	x21, x22, [sp, #32]
    12dc:	mov	x21, x1
    12e0:	cbz	w2, 13bc <grub_efidisk_fini+0xa3c>
    12e4:	cmp	w2, #0x1
    12e8:	b.ne	13a8 <grub_efidisk_fini+0xa28>  // b.any
    12ec:	adrp	x0, 0 <_start>
    12f0:	stp	x27, x28, [sp, #80]
    12f4:	ldr	x28, [x0]
    12f8:	stp	x23, x24, [sp, #48]
    12fc:	stp	x25, x26, [sp, #64]
    1300:	ldr	x22, [x28]
    1304:	cbz	x22, 1460 <grub_efidisk_fini+0xae0>
    1308:	adrp	x2, 0 <_start>
    130c:	adrp	x1, 0 <_start>
    1310:	adrp	x0, 0 <_start>
    1314:	adrp	x3, 0 <_start>
    1318:	ldr	x26, [x2]
    131c:	add	x19, sp, #0x60
    1320:	ldr	x25, [x1]
    1324:	mov	w23, #0x0                   	// #0
    1328:	ldr	x24, [x0]
    132c:	ldr	x27, [x3]
    1330:	b	1340 <grub_efidisk_fini+0x9c0>
    1334:	ldr	x22, [x22, #32]
    1338:	add	w23, w23, #0x1
    133c:	cbz	x22, 1460 <grub_efidisk_fini+0xae0>
    1340:	mov	w3, w23
    1344:	mov	x2, x27
    1348:	mov	x1, #0x10                  	// #16
    134c:	mov	x0, x19
    1350:	bl	b038 <grub_snprintf>
    1354:	mov	x4, x19
    1358:	mov	x3, x26
    135c:	mov	x2, x25
    1360:	mov	x0, x24
    1364:	mov	w1, #0x1a6                 	// #422
    1368:	bl	ae68 <grub_real_dprintf>
    136c:	mov	x1, x21
    1370:	mov	x0, x19
    1374:	blr	x20
    1378:	cbz	w0, 1334 <grub_efidisk_fini+0x9b4>
    137c:	ldp	x23, x24, [sp, #48]
    1380:	mov	w0, #0x1                   	// #1
    1384:	ldp	x25, x26, [sp, #64]
    1388:	ldp	x27, x28, [sp, #80]
    138c:	ldp	x19, x20, [sp, #16]
    1390:	ldp	x21, x22, [sp, #32]
    1394:	ldp	x29, x30, [sp], #112
    1398:	ret
    139c:	ldp	x23, x24, [sp, #48]
    13a0:	ldp	x25, x26, [sp, #64]
    13a4:	ldp	x27, x28, [sp, #80]
    13a8:	mov	w0, #0x0                   	// #0
    13ac:	ldp	x19, x20, [sp, #16]
    13b0:	ldp	x21, x22, [sp, #32]
    13b4:	ldp	x29, x30, [sp], #112
    13b8:	ret
    13bc:	adrp	x0, 0 <_start>
    13c0:	ldr	x0, [x0]
    13c4:	ldr	x22, [x0, #8]
    13c8:	cbz	x22, 13a8 <grub_efidisk_fini+0xa28>
    13cc:	adrp	x3, 0 <_start>
    13d0:	adrp	x2, 0 <_start>
    13d4:	adrp	x1, 0 <_start>
    13d8:	adrp	x0, 0 <_start>
    13dc:	add	x19, sp, #0x60
    13e0:	stp	x23, x24, [sp, #48]
    13e4:	mov	w23, #0x0                   	// #0
    13e8:	ldr	x24, [x0]
    13ec:	stp	x25, x26, [sp, #64]
    13f0:	ldr	x26, [x2]
    13f4:	stp	x27, x28, [sp, #80]
    13f8:	ldr	x25, [x1]
    13fc:	ldr	x27, [x3]
    1400:	b	1410 <grub_efidisk_fini+0xa90>
    1404:	ldr	x22, [x22, #32]
    1408:	add	w23, w23, #0x1
    140c:	cbz	x22, 139c <grub_efidisk_fini+0xa1c>
    1410:	mov	w3, w23
    1414:	mov	x2, x27
    1418:	mov	x1, #0x10                  	// #16
    141c:	mov	x0, x19
    1420:	bl	b038 <grub_snprintf>
    1424:	mov	x4, x19
    1428:	mov	x3, x26
    142c:	mov	x2, x25
    1430:	mov	x0, x24
    1434:	mov	w1, #0x19d                 	// #413
    1438:	bl	ae68 <grub_real_dprintf>
    143c:	mov	x1, x21
    1440:	mov	x0, x19
    1444:	blr	x20
    1448:	cbz	w0, 1404 <grub_efidisk_fini+0xa84>
    144c:	mov	w0, #0x1                   	// #1
    1450:	ldp	x23, x24, [sp, #48]
    1454:	ldp	x25, x26, [sp, #64]
    1458:	ldp	x27, x28, [sp, #80]
    145c:	b	138c <grub_efidisk_fini+0xa0c>
    1460:	ldr	x22, [x28, #16]
    1464:	cbz	x22, 14e0 <grub_efidisk_fini+0xb60>
    1468:	adrp	x2, 0 <_start>
    146c:	adrp	x1, 0 <_start>
    1470:	adrp	x0, 0 <_start>
    1474:	adrp	x3, 0 <_start>
    1478:	ldr	x26, [x2]
    147c:	add	x19, sp, #0x60
    1480:	ldr	x25, [x1]
    1484:	mov	w23, #0x0                   	// #0
    1488:	ldr	x24, [x0]
    148c:	ldr	x27, [x3]
    1490:	b	14a0 <grub_efidisk_fini+0xb20>
    1494:	ldr	x22, [x22, #32]
    1498:	add	w23, w23, #0x1
    149c:	cbz	x22, 14e0 <grub_efidisk_fini+0xb60>
    14a0:	mov	w3, w23
    14a4:	mov	x2, x27
    14a8:	mov	x1, #0x10                  	// #16
    14ac:	mov	x0, x19
    14b0:	bl	b038 <grub_snprintf>
    14b4:	mov	x4, x19
    14b8:	mov	x3, x26
    14bc:	mov	x2, x25
    14c0:	mov	x0, x24
    14c4:	mov	w1, #0x1ae                 	// #430
    14c8:	bl	ae68 <grub_real_dprintf>
    14cc:	mov	x1, x21
    14d0:	mov	x0, x19
    14d4:	blr	x20
    14d8:	cbz	w0, 1494 <grub_efidisk_fini+0xb14>
    14dc:	b	137c <grub_efidisk_fini+0x9fc>
    14e0:	mov	w0, #0x0                   	// #0
    14e4:	ldp	x23, x24, [sp, #48]
    14e8:	ldp	x25, x26, [sp, #64]
    14ec:	ldp	x27, x28, [sp, #80]
    14f0:	b	13ac <grub_efidisk_fini+0xa2c>
    14f4:	nop
	...
    1530:	stp	x29, x30, [sp, #-48]!
    1534:	adrp	x5, 0 <_start>
    1538:	adrp	x4, 0 <_start>
    153c:	mov	x29, sp
    1540:	stp	x19, x20, [sp, #16]
    1544:	mov	x19, x0
    1548:	adrp	x0, 0 <_start>
    154c:	stp	x21, x22, [sp, #32]
    1550:	mov	x21, x2
    1554:	mov	x22, x3
    1558:	ldr	x2, [x4]
    155c:	mov	x20, x1
    1560:	ldr	x3, [x5]
    1564:	mov	x4, x21
    1568:	ldr	x0, [x0]
    156c:	mov	x5, x1
    1570:	ldr	x6, [x19]
    1574:	mov	w1, #0x251                 	// #593
    1578:	bl	ae68 <grub_real_dprintf>
    157c:	ldr	w0, [x19, #24]
    1580:	mov	x4, x22
    1584:	ldr	x1, [x19, #64]
    1588:	mov	x3, x21
    158c:	mov	x2, x20
    1590:	mov	w5, #0x0                   	// #0
    1594:	bl	1090 <grub_efidisk_fini+0x710>
    1598:	mov	x1, #0xc                   	// #12
    159c:	movk	x1, #0x8000, lsl #48
    15a0:	cmp	x0, x1
    15a4:	b.eq	15e4 <grub_efidisk_fini+0xc64>  // b.none
    15a8:	cbnz	x0, 15c0 <grub_efidisk_fini+0xc40>
    15ac:	mov	w0, #0x0                   	// #0
    15b0:	ldp	x19, x20, [sp, #16]
    15b4:	ldp	x21, x22, [sp, #32]
    15b8:	ldp	x29, x30, [sp], #48
    15bc:	ret
    15c0:	mov	x2, x20
    15c4:	adrp	x1, 0 <_start>
    15c8:	ldr	x3, [x19]
    15cc:	mov	w0, #0xe                   	// #14
    15d0:	ldp	x19, x20, [sp, #16]
    15d4:	ldp	x21, x22, [sp, #32]
    15d8:	ldp	x29, x30, [sp], #48
    15dc:	ldr	x1, [x1]
    15e0:	b	85c0 <grub_error>
    15e4:	adrp	x1, 0 <_start>
    15e8:	mov	w0, #0xb                   	// #11
    15ec:	ldr	x2, [x19]
    15f0:	ldp	x19, x20, [sp, #16]
    15f4:	ldp	x21, x22, [sp, #32]
    15f8:	ldp	x29, x30, [sp], #48
    15fc:	ldr	x1, [x1]
    1600:	b	85c0 <grub_error>
    1604:	nop
	...

0000000000001630 <grub_efidisk_init>:
    1630:	stp	x29, x30, [sp, #-96]!
    1634:	adrp	x0, 0 <_start>
    1638:	adrp	x1, 0 <_start>
    163c:	mov	x29, sp
    1640:	ldr	x0, [x0]
    1644:	ldr	x1, [x1]
    1648:	str	x1, [x0]
    164c:	bl	d18 <grub_efidisk_fini+0x398>
    1650:	cbz	x0, 17bc <grub_efidisk_init+0x18c>
    1654:	stp	x19, x20, [sp, #16]
    1658:	mov	x19, x0
    165c:	mov	x20, x0
    1660:	stp	x21, x22, [sp, #32]
    1664:	stp	x23, x24, [sp, #48]
    1668:	adrp	x23, 0 <_start>
    166c:	stp	x25, x26, [sp, #64]
    1670:	b	167c <grub_efidisk_init+0x4c>
    1674:	ldr	x20, [x20, #32]
    1678:	cbz	x20, 16e0 <grub_efidisk_init+0xb0>
    167c:	ldr	x0, [x20, #16]
    1680:	cbz	x0, 1674 <grub_efidisk_init+0x44>
    1684:	ldrb	w1, [x0]
    1688:	and	w1, w1, #0x7f
    168c:	cmp	w1, #0x4
    1690:	b.ne	1674 <grub_efidisk_init+0x44>  // b.any
    1694:	ldrb	w0, [x0, #1]
    1698:	cmp	w0, #0x1
    169c:	b.eq	1840 <grub_efidisk_init+0x210>  // b.none
    16a0:	cmp	w0, #0x2
    16a4:	mov	w22, #0x0                   	// #0
    16a8:	b.ne	1674 <grub_efidisk_init+0x44>  // b.any
    16ac:	mov	x1, x20
    16b0:	mov	x0, x19
    16b4:	bl	e88 <grub_efidisk_fini+0x508>
    16b8:	mov	x21, x0
    16bc:	cbz	x0, 1674 <grub_efidisk_init+0x44>
    16c0:	mov	x1, x0
    16c4:	mov	x0, x19
    16c8:	bl	e88 <grub_efidisk_fini+0x508>
    16cc:	cbz	x0, 1848 <grub_efidisk_init+0x218>
    16d0:	str	xzr, [x20, #16]
    16d4:	ldr	x20, [x20, #32]
    16d8:	cbnz	x20, 167c <grub_efidisk_init+0x4c>
    16dc:	nop
    16e0:	mov	x23, #0x85eb                	// #34283
    16e4:	mov	x22, #0x8c8b                	// #35979
    16e8:	movk	x23, #0x2b05, lsl #16
    16ec:	movk	x22, #0x1be2, lsl #16
    16f0:	mov	w26, #0x41d0                	// #16848
    16f4:	mov	w25, #0x41d0                	// #16848
    16f8:	mov	w24, #0x41d1                	// #16849
    16fc:	movk	x23, #0xd8b8, lsl #32
    1700:	movk	x22, #0xae01, lsl #32
    1704:	mov	x20, x19
    1708:	movk	w26, #0x604, lsl #16
    170c:	movk	w25, #0x700, lsl #16
    1710:	movk	w24, #0x701, lsl #16
    1714:	movk	x23, #0x49a9, lsl #48
    1718:	movk	x22, #0xb7f2, lsl #48
    171c:	b	176c <grub_efidisk_init+0x13c>
    1720:	ldr	x1, [x20, #24]
    1724:	cmp	w0, #0x2
    1728:	ldr	x0, [x1, #8]
    172c:	b.ne	173c <grub_efidisk_init+0x10c>  // b.any
    1730:	ldrb	w1, [x21, #1]
    1734:	cmp	w1, #0x1
    1738:	b.eq	1818 <grub_efidisk_init+0x1e8>  // b.none
    173c:	ldrb	w1, [x0, #7]
    1740:	cbz	w1, 1750 <grub_efidisk_init+0x120>
    1744:	ldr	w0, [x0, #12]
    1748:	cmp	w0, #0x200
    174c:	b.hi	17d0 <grub_efidisk_init+0x1a0>  // b.pmore
    1750:	adrp	x0, 0 <_start>
    1754:	mov	x1, x20
    1758:	ldr	x0, [x0]
    175c:	add	x0, x0, #0x8
    1760:	bl	f20 <grub_efidisk_fini+0x5a0>
    1764:	ldr	x20, [x20, #32]
    1768:	cbz	x20, 179c <grub_efidisk_init+0x16c>
    176c:	ldr	x21, [x20, #16]
    1770:	cbz	x21, 1764 <grub_efidisk_init+0x134>
    1774:	ldrb	w0, [x21]
    1778:	and	w0, w0, #0x7f
    177c:	cmp	w0, #0x4
    1780:	b.ne	1720 <grub_efidisk_init+0xf0>  // b.any
    1784:	ldrb	w0, [x21, #1]
    1788:	cmp	w0, #0x3
    178c:	b.eq	17e8 <grub_efidisk_init+0x1b8>  // b.none
    1790:	ldr	x0, [x20, #24]
    1794:	ldr	x0, [x0, #8]
    1798:	b	173c <grub_efidisk_init+0x10c>
    179c:	mov	x0, x19
    17a0:	ldr	x19, [x19, #32]
    17a4:	bl	5828 <grub_free>
    17a8:	cbnz	x19, 179c <grub_efidisk_init+0x16c>
    17ac:	ldp	x19, x20, [sp, #16]
    17b0:	ldp	x21, x22, [sp, #32]
    17b4:	ldp	x23, x24, [sp, #48]
    17b8:	ldp	x25, x26, [sp, #64]
    17bc:	adrp	x0, 0 <_start>
    17c0:	ldr	x0, [x0]
    17c4:	bl	6928 <grub_disk_dev_register>
    17c8:	ldp	x29, x30, [sp], #96
    17cc:	ret
    17d0:	adrp	x0, 0 <_start>
    17d4:	mov	x1, x20
    17d8:	ldr	x0, [x0]
    17dc:	add	x0, x0, #0x10
    17e0:	bl	f20 <grub_efidisk_fini+0x5a0>
    17e4:	b	1764 <grub_efidisk_init+0x134>
    17e8:	stp	x23, x22, [sp, #80]
    17ec:	ldrh	w0, [x21, #2]
    17f0:	cmp	w0, #0x14
    17f4:	b.ne	1790 <grub_efidisk_init+0x160>  // b.any
    17f8:	add	x1, sp, #0x50
    17fc:	add	x0, x21, #0x4
    1800:	mov	x2, #0x10                  	// #16
    1804:	bl	9b28 <grub_memcmp>
    1808:	cbz	w0, 1880 <grub_efidisk_init+0x250>
    180c:	ldrb	w0, [x21]
    1810:	and	w0, w0, #0x7f
    1814:	b	1720 <grub_efidisk_init+0xf0>
    1818:	ldr	w1, [x21, #4]
    181c:	cmp	w1, w26
    1820:	ccmp	w1, w25, #0x4, ne  // ne = any
    1824:	ccmp	w1, w24, #0x4, ne  // ne = any
    1828:	b.ne	173c <grub_efidisk_init+0x10c>  // b.any
    182c:	adrp	x0, 0 <_start>
    1830:	mov	x1, x20
    1834:	ldr	x0, [x0]
    1838:	bl	f20 <grub_efidisk_fini+0x5a0>
    183c:	b	1764 <grub_efidisk_init+0x134>
    1840:	mov	w22, w0
    1844:	b	16ac <grub_efidisk_init+0x7c>
    1848:	ldr	x0, [x21, #16]
    184c:	cbz	x0, 16d0 <grub_efidisk_init+0xa0>
    1850:	ldr	x0, [x23]
    1854:	mov	x1, x21
    1858:	cbz	w22, 1870 <grub_efidisk_init+0x240>
    185c:	add	x0, x0, #0x8
    1860:	bl	f20 <grub_efidisk_fini+0x5a0>
    1864:	str	xzr, [x21, #16]
    1868:	str	xzr, [x20, #16]
    186c:	b	16d4 <grub_efidisk_init+0xa4>
    1870:	add	x0, x0, #0x10
    1874:	bl	f20 <grub_efidisk_fini+0x5a0>
    1878:	str	xzr, [x21, #16]
    187c:	b	1868 <grub_efidisk_init+0x238>
    1880:	mov	x1, x20
    1884:	mov	x0, x19
    1888:	bl	e88 <grub_efidisk_fini+0x508>
    188c:	cbnz	x0, 1764 <grub_efidisk_init+0x134>
    1890:	b	180c <grub_efidisk_init+0x1dc>
    1894:	nop
	...

00000000000018b8 <grub_efidisk_get_device_handle>:
    18b8:	stp	x29, x30, [sp, #-80]!
    18bc:	mov	x29, sp
    18c0:	stp	x21, x22, [sp, #32]
    18c4:	mov	x21, x0
    18c8:	ldr	x0, [x0, #8]
    18cc:	stp	x19, x20, [sp, #16]
    18d0:	mov	x19, #0x0                   	// #0
    18d4:	ldr	w0, [x0, #8]
    18d8:	cmp	w0, #0x3
    18dc:	b.ne	1910 <grub_efidisk_get_device_handle+0x58>  // b.any
    18e0:	ldr	x0, [x21]
    18e4:	stp	x23, x24, [sp, #48]
    18e8:	ldr	x23, [x21, #64]
    18ec:	ldrb	w0, [x0]
    18f0:	cmp	w0, #0x66
    18f4:	b.eq	1924 <grub_efidisk_get_device_handle+0x6c>  // b.none
    18f8:	cmp	w0, #0x68
    18fc:	b.eq	1940 <grub_efidisk_get_device_handle+0x88>  // b.none
    1900:	cmp	w0, #0x63
    1904:	mov	x19, #0x0                   	// #0
    1908:	b.eq	1924 <grub_efidisk_get_device_handle+0x6c>  // b.none
    190c:	ldp	x23, x24, [sp, #48]
    1910:	mov	x0, x19
    1914:	ldp	x19, x20, [sp, #16]
    1918:	ldp	x21, x22, [sp, #32]
    191c:	ldp	x29, x30, [sp], #80
    1920:	ret
    1924:	ldr	x19, [x23]
    1928:	ldp	x21, x22, [sp, #32]
    192c:	mov	x0, x19
    1930:	ldp	x19, x20, [sp, #16]
    1934:	ldp	x23, x24, [sp, #48]
    1938:	ldp	x29, x30, [sp], #80
    193c:	ret
    1940:	ldr	x0, [x21, #40]
    1944:	cbz	x0, 1924 <grub_efidisk_get_device_handle+0x6c>
    1948:	bl	d18 <grub_efidisk_fini+0x398>
    194c:	mov	x22, x0
    1950:	cbz	x0, 1a44 <grub_efidisk_get_device_handle+0x18c>
    1954:	mov	w24, #0xff7f                	// #65407
    1958:	mov	x19, x0
    195c:	movk	w24, #0x4, lsl #16
    1960:	str	x25, [sp, #64]
    1964:	b	1970 <grub_efidisk_get_device_handle+0xb8>
    1968:	ldr	x19, [x19, #32]
    196c:	cbz	x19, 1a18 <grub_efidisk_get_device_handle+0x160>
    1970:	ldr	x0, [x19, #8]
    1974:	bl	2df0 <grub_efi_duplicate_device_path>
    1978:	mov	x20, x0
    197c:	cbz	x0, 1968 <grub_efidisk_get_device_handle+0xb0>
    1980:	bl	2d98 <grub_efi_find_last_device_path>
    1984:	cbz	x0, 1968 <grub_efidisk_get_device_handle+0xb0>
    1988:	str	w24, [x0]
    198c:	mov	x0, x20
    1990:	ldr	x1, [x23, #8]
    1994:	bl	38d0 <grub_efi_compare_device_paths>
    1998:	mov	w25, w0
    199c:	mov	x0, x20
    19a0:	bl	5828 <grub_free>
    19a4:	cbnz	w25, 1968 <grub_efidisk_get_device_handle+0xb0>
    19a8:	ldr	x1, [x19, #16]
    19ac:	ldrb	w0, [x1]
    19b0:	and	w0, w0, #0x7f
    19b4:	cmp	w0, #0x4
    19b8:	b.ne	1968 <grub_efidisk_get_device_handle+0xb0>  // b.any
    19bc:	ldrb	w0, [x1, #1]
    19c0:	cmp	w0, #0x1
    19c4:	b.ne	1968 <grub_efidisk_get_device_handle+0xb0>  // b.any
    19c8:	ldr	x4, [x21, #40]
    19cc:	cbz	x4, 1a50 <grub_efidisk_get_device_handle+0x198>
    19d0:	mov	x0, x4
    19d4:	mov	x2, #0x0                   	// #0
    19d8:	ldr	x3, [x0, #8]
    19dc:	ldr	x0, [x0, #40]
    19e0:	add	x2, x2, x3
    19e4:	cbnz	x0, 19d8 <grub_efidisk_get_device_handle+0x120>
    19e8:	ldr	w0, [x21, #24]
    19ec:	ldr	x3, [x1, #8]
    19f0:	sub	w0, w0, #0x9
    19f4:	lsl	x3, x3, x0
    19f8:	cmp	x3, x2
    19fc:	b.ne	1968 <grub_efidisk_get_device_handle+0xb0>  // b.any
    1a00:	ldr	x1, [x1, #16]
    1a04:	ldr	x2, [x4, #16]
    1a08:	lsl	x0, x1, x0
    1a0c:	cmp	x0, x2
    1a10:	b.ne	1968 <grub_efidisk_get_device_handle+0xb0>  // b.any
    1a14:	ldr	x19, [x19]
    1a18:	mov	x0, x22
    1a1c:	ldr	x22, [x22, #32]
    1a20:	bl	5828 <grub_free>
    1a24:	cbnz	x22, 1a18 <grub_efidisk_get_device_handle+0x160>
    1a28:	mov	x0, x19
    1a2c:	ldp	x19, x20, [sp, #16]
    1a30:	ldp	x21, x22, [sp, #32]
    1a34:	ldp	x23, x24, [sp, #48]
    1a38:	ldr	x25, [sp, #64]
    1a3c:	ldp	x29, x30, [sp], #80
    1a40:	ret
    1a44:	mov	x19, #0x0                   	// #0
    1a48:	ldp	x23, x24, [sp, #48]
    1a4c:	b	1910 <grub_efidisk_get_device_handle+0x58>
    1a50:	mov	x2, #0x0                   	// #0
    1a54:	b	19e8 <grub_efidisk_get_device_handle+0x130>

0000000000001a58 <grub_efidisk_get_device_name>:
    1a58:	stp	x29, x30, [sp, #-96]!
    1a5c:	mov	x29, sp
    1a60:	stp	x19, x20, [sp, #16]
    1a64:	bl	2d28 <grub_efi_get_device_path>
    1a68:	cbz	x0, 1b74 <grub_efidisk_get_device_name+0x11c>
    1a6c:	mov	x19, x0
    1a70:	bl	2d98 <grub_efi_find_last_device_path>
    1a74:	mov	x20, x0
    1a78:	cbz	x0, 1b74 <grub_efidisk_get_device_name+0x11c>
    1a7c:	stp	x21, x22, [sp, #32]
    1a80:	ldrb	w0, [x0]
    1a84:	and	w0, w0, #0x7f
    1a88:	cmp	w0, #0x4
    1a8c:	b.ne	1aa4 <grub_efidisk_get_device_name+0x4c>  // b.any
    1a90:	ldrb	w0, [x20, #1]
    1a94:	sub	w0, w0, #0x1
    1a98:	and	w0, w0, #0xff
    1a9c:	cmp	w0, #0x1
    1aa0:	b.ls	1b88 <grub_efidisk_get_device_name+0x130>  // b.plast
    1aa4:	adrp	x0, 0 <_start>
    1aa8:	ldr	x22, [x0]
    1aac:	ldr	x20, [x22, #8]
    1ab0:	cbz	x20, 1b1c <grub_efidisk_get_device_name+0xc4>
    1ab4:	mov	w21, #0x0                   	// #0
    1ab8:	b	1ac8 <grub_efidisk_get_device_name+0x70>
    1abc:	ldr	x20, [x20, #32]
    1ac0:	add	w21, w21, #0x1
    1ac4:	cbz	x20, 1b1c <grub_efidisk_get_device_name+0xc4>
    1ac8:	ldr	x0, [x20, #8]
    1acc:	mov	x1, x19
    1ad0:	bl	38d0 <grub_efi_compare_device_paths>
    1ad4:	cbnz	w0, 1abc <grub_efidisk_get_device_name+0x64>
    1ad8:	adrp	x1, 0 <_start>
    1adc:	add	x19, sp, #0x40
    1ae0:	mov	w3, w21
    1ae4:	add	x0, x19, #0x1
    1ae8:	ldr	x2, [x1]
    1aec:	mov	x1, #0xc                   	// #12
    1af0:	bl	b038 <grub_snprintf>
    1af4:	mov	w0, #0x68                  	// #104
    1af8:	strb	w0, [sp, #64]
    1afc:	mov	x0, x19
    1b00:	bl	a598 <grub_strdup>
    1b04:	ldp	x21, x22, [sp, #32]
    1b08:	mov	x19, x0
    1b0c:	mov	x0, x19
    1b10:	ldp	x19, x20, [sp, #16]
    1b14:	ldp	x29, x30, [sp], #96
    1b18:	ret
    1b1c:	ldr	x20, [x22]
    1b20:	cbz	x20, 1cc8 <grub_efidisk_get_device_name+0x270>
    1b24:	mov	w21, #0x0                   	// #0
    1b28:	b	1b38 <grub_efidisk_get_device_name+0xe0>
    1b2c:	ldr	x20, [x20, #32]
    1b30:	add	w21, w21, #0x1
    1b34:	cbz	x20, 1cc8 <grub_efidisk_get_device_name+0x270>
    1b38:	ldr	x0, [x20, #8]
    1b3c:	mov	x1, x19
    1b40:	bl	38d0 <grub_efi_compare_device_paths>
    1b44:	cbnz	w0, 1b2c <grub_efidisk_get_device_name+0xd4>
    1b48:	adrp	x1, 0 <_start>
    1b4c:	add	x19, sp, #0x40
    1b50:	mov	w3, w21
    1b54:	add	x0, x19, #0x1
    1b58:	ldr	x2, [x1]
    1b5c:	mov	x1, #0xc                   	// #12
    1b60:	bl	b038 <grub_snprintf>
    1b64:	mov	w0, #0x66                  	// #102
    1b68:	strb	w0, [sp, #64]
    1b6c:	b	1afc <grub_efidisk_get_device_name+0xa4>
    1b70:	ldp	x21, x22, [sp, #32]
    1b74:	mov	x19, #0x0                   	// #0
    1b78:	mov	x0, x19
    1b7c:	ldp	x19, x20, [sp, #16]
    1b80:	ldp	x29, x30, [sp], #96
    1b84:	ret
    1b88:	mov	x0, x19
    1b8c:	mov	w19, #0xff7f                	// #65407
    1b90:	bl	2df0 <grub_efi_duplicate_device_path>
    1b94:	movk	w19, #0x4, lsl #16
    1b98:	mov	x21, x0
    1b9c:	cbz	x0, 1d74 <grub_efidisk_get_device_name+0x31c>
    1ba0:	str	x23, [sp, #48]
    1ba4:	b	1bd0 <grub_efidisk_get_device_name+0x178>
    1ba8:	ldrb	w1, [x0]
    1bac:	and	w1, w1, #0x7f
    1bb0:	cmp	w1, #0x4
    1bb4:	b.ne	1bdc <grub_efidisk_get_device_name+0x184>  // b.any
    1bb8:	ldrb	w1, [x0, #1]
    1bbc:	sub	w1, w1, #0x1
    1bc0:	and	w1, w1, #0xff
    1bc4:	cmp	w1, #0x1
    1bc8:	b.hi	1bdc <grub_efidisk_get_device_name+0x184>  // b.pmore
    1bcc:	str	w19, [x0]
    1bd0:	mov	x0, x21
    1bd4:	bl	2d98 <grub_efi_find_last_device_path>
    1bd8:	cbnz	x0, 1ba8 <grub_efidisk_get_device_name+0x150>
    1bdc:	adrp	x0, 0 <_start>
    1be0:	ldr	x22, [x0]
    1be4:	ldr	x19, [x22, #8]
    1be8:	cbz	x19, 1d1c <grub_efidisk_get_device_name+0x2c4>
    1bec:	mov	w23, #0x0                   	// #0
    1bf0:	b	1c00 <grub_efidisk_get_device_name+0x1a8>
    1bf4:	ldr	x19, [x19, #32]
    1bf8:	add	w23, w23, #0x1
    1bfc:	cbz	x19, 1d1c <grub_efidisk_get_device_name+0x2c4>
    1c00:	ldr	x0, [x19, #8]
    1c04:	mov	x1, x21
    1c08:	bl	38d0 <grub_efi_compare_device_paths>
    1c0c:	cbnz	w0, 1bf4 <grub_efidisk_get_device_name+0x19c>
    1c10:	adrp	x1, 0 <_start>
    1c14:	add	x19, sp, #0x40
    1c18:	mov	w3, w23
    1c1c:	add	x0, x19, #0x1
    1c20:	ldr	x2, [x1]
    1c24:	mov	x1, #0xc                   	// #12
    1c28:	bl	b038 <grub_snprintf>
    1c2c:	mov	w0, #0x68                  	// #104
    1c30:	strb	w0, [sp, #64]
    1c34:	mov	x0, x19
    1c38:	bl	6a50 <grub_disk_open>
    1c3c:	mov	x1, x0
    1c40:	mov	x0, x21
    1c44:	mov	x21, x1
    1c48:	bl	5828 <grub_free>
    1c4c:	cbz	x21, 1d70 <grub_efidisk_get_device_name+0x318>
    1c50:	ldr	x0, [x20, #8]
    1c54:	stp	xzr, x20, [sp, #80]
    1c58:	cbnz	x0, 1c7c <grub_efidisk_get_device_name+0x224>
    1c5c:	ldr	w1, [x21, #24]
    1c60:	mov	x0, x21
    1c64:	ldr	x20, [x20, #16]
    1c68:	sub	w1, w1, #0x9
    1c6c:	lsl	x20, x20, x1
    1c70:	bl	7088 <grub_disk_get_size>
    1c74:	cmp	x20, x0
    1c78:	b.eq	1e0c <grub_efidisk_get_device_name+0x3b4>  // b.none
    1c7c:	adrp	x1, 0 <_start>
    1c80:	add	x2, sp, #0x50
    1c84:	mov	x0, x21
    1c88:	ldr	x1, [x1]
    1c8c:	bl	b958 <grub_partition_iterate>
    1c90:	ldr	x2, [sp, #80]
    1c94:	cbz	x2, 1dec <grub_efidisk_get_device_name+0x394>
    1c98:	adrp	x0, 0 <_start>
    1c9c:	ldr	x1, [x21]
    1ca0:	ldr	x0, [x0]
    1ca4:	bl	b138 <grub_xasprintf>
    1ca8:	mov	x19, x0
    1cac:	ldr	x0, [sp, #80]
    1cb0:	bl	5828 <grub_free>
    1cb4:	mov	x0, x21
    1cb8:	bl	6998 <grub_disk_close>
    1cbc:	ldp	x21, x22, [sp, #32]
    1cc0:	ldr	x23, [sp, #48]
    1cc4:	b	1b0c <grub_efidisk_get_device_name+0xb4>
    1cc8:	ldr	x20, [x22, #16]
    1ccc:	cbz	x20, 1b70 <grub_efidisk_get_device_name+0x118>
    1cd0:	mov	w21, #0x0                   	// #0
    1cd4:	b	1ce4 <grub_efidisk_get_device_name+0x28c>
    1cd8:	ldr	x20, [x20, #32]
    1cdc:	add	w21, w21, #0x1
    1ce0:	cbz	x20, 1b70 <grub_efidisk_get_device_name+0x118>
    1ce4:	ldr	x0, [x20, #8]
    1ce8:	mov	x1, x19
    1cec:	bl	38d0 <grub_efi_compare_device_paths>
    1cf0:	cbnz	w0, 1cd8 <grub_efidisk_get_device_name+0x280>
    1cf4:	adrp	x1, 0 <_start>
    1cf8:	add	x19, sp, #0x40
    1cfc:	mov	w3, w21
    1d00:	add	x0, x19, #0x1
    1d04:	ldr	x2, [x1]
    1d08:	mov	x1, #0xc                   	// #12
    1d0c:	bl	b038 <grub_snprintf>
    1d10:	mov	w0, #0x63                  	// #99
    1d14:	strb	w0, [sp, #64]
    1d18:	b	1afc <grub_efidisk_get_device_name+0xa4>
    1d1c:	ldr	x19, [x22]
    1d20:	cbz	x19, 1d80 <grub_efidisk_get_device_name+0x328>
    1d24:	mov	w23, #0x0                   	// #0
    1d28:	b	1d38 <grub_efidisk_get_device_name+0x2e0>
    1d2c:	ldr	x19, [x19, #32]
    1d30:	add	w23, w23, #0x1
    1d34:	cbz	x19, 1d80 <grub_efidisk_get_device_name+0x328>
    1d38:	ldr	x0, [x19, #8]
    1d3c:	mov	x1, x21
    1d40:	bl	38d0 <grub_efi_compare_device_paths>
    1d44:	cbnz	w0, 1d2c <grub_efidisk_get_device_name+0x2d4>
    1d48:	adrp	x1, 0 <_start>
    1d4c:	add	x19, sp, #0x40
    1d50:	mov	w3, w23
    1d54:	add	x0, x19, #0x1
    1d58:	ldr	x2, [x1]
    1d5c:	mov	x1, #0xc                   	// #12
    1d60:	bl	b038 <grub_snprintf>
    1d64:	mov	w0, #0x66                  	// #102
    1d68:	strb	w0, [sp, #64]
    1d6c:	b	1c34 <grub_efidisk_get_device_name+0x1dc>
    1d70:	ldr	x23, [sp, #48]
    1d74:	mov	x19, #0x0                   	// #0
    1d78:	ldp	x21, x22, [sp, #32]
    1d7c:	b	1b0c <grub_efidisk_get_device_name+0xb4>
    1d80:	ldr	x19, [x22, #16]
    1d84:	cbz	x19, 1dd4 <grub_efidisk_get_device_name+0x37c>
    1d88:	mov	w22, #0x0                   	// #0
    1d8c:	b	1d9c <grub_efidisk_get_device_name+0x344>
    1d90:	ldr	x19, [x19, #32]
    1d94:	add	w22, w22, #0x1
    1d98:	cbz	x19, 1dd4 <grub_efidisk_get_device_name+0x37c>
    1d9c:	ldr	x0, [x19, #8]
    1da0:	mov	x1, x21
    1da4:	bl	38d0 <grub_efi_compare_device_paths>
    1da8:	cbnz	w0, 1d90 <grub_efidisk_get_device_name+0x338>
    1dac:	adrp	x1, 0 <_start>
    1db0:	add	x19, sp, #0x40
    1db4:	mov	w3, w22
    1db8:	add	x0, x19, #0x1
    1dbc:	ldr	x2, [x1]
    1dc0:	mov	x1, #0xc                   	// #12
    1dc4:	bl	b038 <grub_snprintf>
    1dc8:	mov	w0, #0x63                  	// #99
    1dcc:	strb	w0, [sp, #64]
    1dd0:	b	1c34 <grub_efidisk_get_device_name+0x1dc>
    1dd4:	mov	x0, x21
    1dd8:	mov	x19, #0x0                   	// #0
    1ddc:	bl	5828 <grub_free>
    1de0:	ldp	x21, x22, [sp, #32]
    1de4:	ldr	x23, [sp, #48]
    1de8:	b	1b0c <grub_efidisk_get_device_name+0xb4>
    1dec:	mov	x0, x21
    1df0:	bl	6998 <grub_disk_close>
    1df4:	mov	x0, x19
    1df8:	bl	a598 <grub_strdup>
    1dfc:	mov	x19, x0
    1e00:	ldp	x21, x22, [sp, #32]
    1e04:	ldr	x23, [sp, #48]
    1e08:	b	1b0c <grub_efidisk_get_device_name+0xb4>
    1e0c:	ldr	x0, [x21]
    1e10:	bl	a598 <grub_strdup>
    1e14:	mov	x19, x0
    1e18:	b	1cb4 <grub_efidisk_get_device_name+0x25c>
    1e1c:	nop
	...
    1e40:	sub	sp, sp, #0x60
    1e44:	adrp	x2, 0 <_start>
    1e48:	stp	x29, x30, [sp, #48]
    1e4c:	add	x29, sp, #0x30
    1e50:	stp	x19, x20, [sp, #64]
    1e54:	mov	x19, x1
    1e58:	mov	x1, x0
    1e5c:	ldr	x0, [x2]
    1e60:	ldrh	w20, [x19, #2]
    1e64:	ldrh	w4, [x19, #10]
    1e68:	ldrh	w3, [x19, #8]
    1e6c:	ldr	w2, [x19, #4]
    1e70:	str	x21, [sp, #80]
    1e74:	sub	w21, w20, #0x14
    1e78:	ldrb	w7, [x19, #14]
    1e7c:	ldrb	w6, [x19, #13]
    1e80:	ldrb	w5, [x19, #12]
    1e84:	ldrb	w8, [x19, #19]
    1e88:	ldrb	w9, [x19, #18]
    1e8c:	ldrb	w10, [x19, #17]
    1e90:	ldrb	w11, [x19, #16]
    1e94:	ldrb	w12, [x19, #15]
    1e98:	str	w12, [sp]
    1e9c:	str	w11, [sp, #8]
    1ea0:	str	w10, [sp, #16]
    1ea4:	str	w9, [sp, #24]
    1ea8:	str	w8, [sp, #32]
    1eac:	str	w21, [sp, #40]
    1eb0:	bl	ada8 <grub_err_printf>
    1eb4:	ldrh	w0, [x19, #2]
    1eb8:	cmp	w0, #0x14
    1ebc:	b.ls	1ef4 <grub_efidisk_get_device_name+0x49c>  // b.plast
    1ec0:	cbz	w21, 1ef4 <grub_efidisk_get_device_name+0x49c>
    1ec4:	adrp	x1, 0 <_start>
    1ec8:	sub	w0, w20, #0x15
    1ecc:	add	x20, x19, #0x15
    1ed0:	add	x19, x19, #0x14
    1ed4:	ldr	x21, [x1]
    1ed8:	add	x20, x20, x0
    1edc:	nop
    1ee0:	ldrb	w1, [x19], #1
    1ee4:	mov	x0, x21
    1ee8:	bl	ada8 <grub_err_printf>
    1eec:	cmp	x19, x20
    1ef0:	b.ne	1ee0 <grub_efidisk_get_device_name+0x488>  // b.any
    1ef4:	adrp	x0, 0 <_start>
    1ef8:	ldp	x29, x30, [sp, #48]
    1efc:	ldp	x19, x20, [sp, #64]
    1f00:	ldr	x0, [x0]
    1f04:	ldr	x21, [sp, #80]
    1f08:	add	sp, sp, #0x60
    1f0c:	b	ada8 <grub_err_printf>
	...

0000000000001f28 <grub_efi_locate_protocol>:
    1f28:	stp	x29, x30, [sp, #-32]!
    1f2c:	adrp	x3, 0 <_start>
    1f30:	mov	x29, sp
    1f34:	ldr	x3, [x3]
    1f38:	add	x2, sp, #0x18
    1f3c:	ldr	x3, [x3]
    1f40:	ldr	x3, [x3, #96]
    1f44:	ldr	x3, [x3, #320]
    1f48:	blr	x3
    1f4c:	cmp	x0, #0x0
    1f50:	ldr	x1, [sp, #24]
    1f54:	ldp	x29, x30, [sp], #32
    1f58:	csel	x0, x1, xzr, eq  // eq = none
    1f5c:	ret
	...

0000000000001f68 <grub_efi_locate_handle>:
    1f68:	stp	x29, x30, [sp, #-80]!
    1f6c:	mov	x29, sp
    1f70:	stp	x19, x20, [sp, #16]
    1f74:	mov	w20, w0
    1f78:	mov	x0, #0x40                  	// #64
    1f7c:	stp	x21, x22, [sp, #32]
    1f80:	mov	x21, x1
    1f84:	mov	x22, x2
    1f88:	stp	x23, x24, [sp, #48]
    1f8c:	mov	x23, x3
    1f90:	str	x0, [sp, #72]
    1f94:	bl	57d8 <grub_malloc>
    1f98:	cbz	x0, 203c <grub_efi_locate_handle+0xd4>
    1f9c:	mov	x19, x0
    1fa0:	adrp	x0, 0 <_start>
    1fa4:	mov	x1, x21
    1fa8:	add	x3, sp, #0x48
    1fac:	ldr	x5, [x0]
    1fb0:	mov	x4, x19
    1fb4:	mov	x2, x22
    1fb8:	mov	w0, w20
    1fbc:	ldr	x5, [x5]
    1fc0:	ldr	x24, [x5, #96]
    1fc4:	ldr	x5, [x24, #176]
    1fc8:	blr	x5
    1fcc:	mov	x1, #0x5                   	// #5
    1fd0:	movk	x1, #0x8000, lsl #48
    1fd4:	cmp	x0, x1
    1fd8:	b.eq	2004 <grub_efi_locate_handle+0x9c>  // b.none
    1fdc:	cbnz	x0, 2044 <grub_efi_locate_handle+0xdc>
    1fe0:	ldr	x0, [sp, #72]
    1fe4:	lsr	x0, x0, #3
    1fe8:	str	x0, [x23]
    1fec:	mov	x0, x19
    1ff0:	ldp	x19, x20, [sp, #16]
    1ff4:	ldp	x21, x22, [sp, #32]
    1ff8:	ldp	x23, x24, [sp, #48]
    1ffc:	ldp	x29, x30, [sp], #80
    2000:	ret
    2004:	mov	x0, x19
    2008:	bl	5828 <grub_free>
    200c:	ldr	x0, [sp, #72]
    2010:	bl	57d8 <grub_malloc>
    2014:	mov	x19, x0
    2018:	cbz	x0, 203c <grub_efi_locate_handle+0xd4>
    201c:	ldr	x5, [x24, #176]
    2020:	add	x3, sp, #0x48
    2024:	mov	x2, x22
    2028:	mov	x1, x21
    202c:	mov	w0, w20
    2030:	mov	x4, x19
    2034:	blr	x5
    2038:	b	1fdc <grub_efi_locate_handle+0x74>
    203c:	mov	x19, #0x0                   	// #0
    2040:	b	1fec <grub_efi_locate_handle+0x84>
    2044:	mov	x0, x19
    2048:	mov	x19, #0x0                   	// #0
    204c:	bl	5828 <grub_free>
    2050:	b	1fec <grub_efi_locate_handle+0x84>
    2054:	nop
	...

0000000000002060 <grub_efi_open_protocol>:
    2060:	stp	x29, x30, [sp, #-32]!
    2064:	adrp	x5, 0 <_start>
    2068:	adrp	x3, 0 <_start>
    206c:	mov	x29, sp
    2070:	ldr	x6, [x5]
    2074:	mov	x4, #0x0                   	// #0
    2078:	ldr	x3, [x3]
    207c:	mov	w5, w2
    2080:	ldr	x6, [x6]
    2084:	add	x2, sp, #0x18
    2088:	ldr	x3, [x3]
    208c:	ldr	x6, [x6, #96]
    2090:	ldr	x6, [x6, #280]
    2094:	blr	x6
    2098:	cmp	x0, #0x0
    209c:	ldr	x1, [sp, #24]
    20a0:	ldp	x29, x30, [sp], #32
    20a4:	csel	x0, x1, xzr, eq  // eq = none
    20a8:	ret
    20ac:	nop
	...

00000000000020c0 <grub_efi_set_text_mode>:
    20c0:	stp	x29, x30, [sp, #-48]!
    20c4:	adrp	x1, 0 <_start>
    20c8:	adrp	x2, 0 <_start>
    20cc:	mov	x29, sp
    20d0:	ldr	x1, [x1]
    20d4:	stp	x19, x20, [sp, #16]
    20d8:	mov	w20, w0
    20dc:	ldr	x0, [x2]
    20e0:	add	x2, sp, #0x28
    20e4:	ldr	x3, [x1]
    20e8:	mov	x1, #0x0                   	// #0
    20ec:	ldr	x3, [x3, #96]
    20f0:	ldr	x3, [x3, #320]
    20f4:	blr	x3
    20f8:	cbnz	x0, 215c <grub_efi_set_text_mode+0x9c>
    20fc:	ldr	x19, [sp, #40]
    2100:	cbz	x19, 215c <grub_efi_set_text_mode+0x9c>
    2104:	ldr	x4, [x19]
    2108:	add	x1, sp, #0x28
    210c:	mov	x0, x19
    2110:	mov	x3, #0x0                   	// #0
    2114:	mov	x2, #0x0                   	// #0
    2118:	blr	x4
    211c:	mov	x1, x0
    2120:	mov	w0, #0x0                   	// #0
    2124:	cbnz	x1, 2150 <grub_efi_set_text_mode+0x90>
    2128:	cmp	w20, #0x0
    212c:	ldr	w0, [sp, #40]
    2130:	cset	w1, eq  // eq = none
    2134:	cmp	w0, w1
    2138:	b.eq	215c <grub_efi_set_text_mode+0x9c>  // b.none
    213c:	ldr	x2, [x19, #8]
    2140:	mov	x0, x19
    2144:	blr	x2
    2148:	cmp	x0, #0x0
    214c:	cset	w0, eq  // eq = none
    2150:	ldp	x19, x20, [sp, #16]
    2154:	ldp	x29, x30, [sp], #48
    2158:	ret
    215c:	mov	w0, #0x1                   	// #1
    2160:	ldp	x19, x20, [sp, #16]
    2164:	ldp	x29, x30, [sp], #48
    2168:	ret
    216c:	nop
	...

0000000000002180 <grub_efi_stall>:
    2180:	adrp	x1, 0 <_start>
    2184:	ldr	x1, [x1]
    2188:	ldr	x1, [x1]
    218c:	ldr	x1, [x1, #96]
    2190:	ldr	x1, [x1, #248]
    2194:	mov	x16, x1
    2198:	br	x16
    219c:	nop
	...

00000000000021a8 <grub_efi_get_loaded_image>:
    21a8:	stp	x29, x30, [sp, #-32]!
    21ac:	adrp	x3, 0 <_start>
    21b0:	adrp	x2, 0 <_start>
    21b4:	mov	x29, sp
    21b8:	ldr	x6, [x3]
    21bc:	adrp	x1, 0 <_start>
    21c0:	ldr	x3, [x2]
    21c4:	mov	w5, #0x2                   	// #2
    21c8:	ldr	x6, [x6]
    21cc:	add	x2, sp, #0x18
    21d0:	ldr	x3, [x3]
    21d4:	mov	x4, #0x0                   	// #0
    21d8:	ldr	x6, [x6, #96]
    21dc:	ldr	x1, [x1]
    21e0:	ldr	x6, [x6, #280]
    21e4:	add	x1, x1, #0x10
    21e8:	blr	x6
    21ec:	cmp	x0, #0x0
    21f0:	ldr	x1, [sp, #24]
    21f4:	ldp	x29, x30, [sp], #32
    21f8:	csel	x0, x1, xzr, eq  // eq = none
    21fc:	ret
	...

0000000000002218 <grub_reboot>:
    2218:	stp	x29, x30, [sp, #-16]!
    221c:	mov	w0, #0x1                   	// #1
    2220:	mov	x29, sp
    2224:	bl	a8 <grub_machine_fini>
    2228:	adrp	x0, 0 <_start>
    222c:	mov	x3, #0x0                   	// #0
    2230:	mov	x2, #0x0                   	// #0
    2234:	mov	x1, #0x0                   	// #0
    2238:	ldr	x4, [x0]
    223c:	mov	w0, #0x0                   	// #0
    2240:	ldr	x4, [x4]
    2244:	ldr	x4, [x4, #88]
    2248:	ldr	x4, [x4, #104]
    224c:	blr	x4
    2250:	b	2250 <grub_reboot+0x38>
    2254:	nop
	...

0000000000002260 <grub_exit>:
    2260:	stp	x29, x30, [sp, #-16]!
    2264:	mov	w0, #0x1                   	// #1
    2268:	mov	x29, sp
    226c:	bl	a8 <grub_machine_fini>
    2270:	adrp	x1, 0 <_start>
    2274:	adrp	x0, 0 <_start>
    2278:	mov	x3, #0x0                   	// #0
    227c:	mov	x2, #0x0                   	// #0
    2280:	ldr	x4, [x1]
    2284:	mov	x1, #0x0                   	// #0
    2288:	ldr	x0, [x0]
    228c:	ldr	x4, [x4]
    2290:	ldr	x0, [x0]
    2294:	ldr	x4, [x4, #96]
    2298:	ldr	x4, [x4, #216]
    229c:	blr	x4
	...

00000000000022b0 <grub_efi_set_virtual_address_map>:
    22b0:	stp	x29, x30, [sp, #-16]!
    22b4:	adrp	x4, 0 <_start>
    22b8:	mov	x29, sp
    22bc:	ldr	x4, [x4]
    22c0:	ldr	x4, [x4]
    22c4:	ldr	x4, [x4, #88]
    22c8:	ldr	x4, [x4, #56]
    22cc:	blr	x4
    22d0:	cbnz	x0, 22e0 <grub_efi_set_virtual_address_map+0x30>
    22d4:	mov	w0, #0x0                   	// #0
    22d8:	ldp	x29, x30, [sp], #16
    22dc:	ret
    22e0:	ldp	x29, x30, [sp], #16
    22e4:	adrp	x1, 0 <_start>
    22e8:	mov	w0, #0x1d                  	// #29
    22ec:	ldr	x1, [x1]
    22f0:	b	85c0 <grub_error>
    22f4:	nop
	...

0000000000002308 <grub_efi_set_variable>:
    2308:	stp	x29, x30, [sp, #-64]!
    230c:	mov	x29, sp
    2310:	stp	x19, x20, [sp, #16]
    2314:	mov	x19, x0
    2318:	stp	x21, x22, [sp, #32]
    231c:	mov	x22, x1
    2320:	stp	x23, x24, [sp, #48]
    2324:	mov	x24, x2
    2328:	mov	x23, x3
    232c:	bl	af48 <grub_strlen>
    2330:	mov	x20, x0
    2334:	add	x0, x0, #0x1
    2338:	lsl	x0, x0, #1
    233c:	bl	57d8 <grub_malloc>
    2340:	cbz	x0, 2534 <grub_efi_set_variable+0x22c>
    2344:	mov	x21, x0
    2348:	mov	x7, x0
    234c:	cbz	x20, 2478 <grub_efi_set_variable+0x170>
    2350:	mov	x10, x20
    2354:	mov	x11, x19
    2358:	mov	w5, #0x0                   	// #0
    235c:	mov	w6, #0x0                   	// #0
    2360:	mov	w3, #0xffff                	// #65535
    2364:	mov	w2, #0xffffd800            	// #-10240
    2368:	mov	w1, #0xffffdc00            	// #-9216
    236c:	b	23c8 <grub_efi_set_variable+0xc0>
    2370:	and	w0, w8, #0xc0
    2374:	cmp	w0, #0x80
    2378:	b.ne	23a0 <grub_efi_set_variable+0x98>  // b.any
    237c:	sub	w6, w6, #0x1
    2380:	bfi	w8, w5, #6, #26
    2384:	mov	w5, w8
    2388:	cmp	w6, #0x1
    238c:	b.eq	24f0 <grub_efi_set_variable+0x1e8>  // b.none
    2390:	cmp	w6, #0x2
    2394:	b.ne	24d0 <grub_efi_set_variable+0x1c8>  // b.any
    2398:	cmp	w8, #0xf
    239c:	b.hi	23b8 <grub_efi_set_variable+0xb0>  // b.pmore
    23a0:	mov	w5, #0x3f                  	// #63
    23a4:	mov	w8, w5
    23a8:	sub	x10, x10, #0x1
    23ac:	mov	x9, x11
    23b0:	mov	w6, #0x0                   	// #0
    23b4:	strh	w8, [x7], #2
    23b8:	cmp	x20, #0x0
    23bc:	ccmp	x10, #0x0, #0x4, ne  // ne = any
    23c0:	b.eq	2478 <grub_efi_set_variable+0x170>  // b.none
    23c4:	mov	x11, x9
    23c8:	mov	x9, x11
    23cc:	cmn	x20, #0x1
    23d0:	cset	x0, ne  // ne = any
    23d4:	sub	x20, x20, x0
    23d8:	ldrb	w8, [x9], #1
    23dc:	cbnz	w6, 2370 <grub_efi_set_variable+0x68>
    23e0:	mov	w5, w8
    23e4:	tbz	w8, #7, 2424 <grub_efi_set_variable+0x11c>
    23e8:	and	w0, w8, #0xe0
    23ec:	cmp	w0, #0xc0
    23f0:	b.eq	24dc <grub_efi_set_variable+0x1d4>  // b.none
    23f4:	and	w0, w8, #0xf0
    23f8:	and	w5, w8, #0xf
    23fc:	cmp	w0, #0xe0
    2400:	mov	w6, #0x2                   	// #2
    2404:	b.eq	23b8 <grub_efi_set_variable+0xb0>  // b.none
    2408:	and	w0, w8, #0xf8
    240c:	and	w5, w8, #0x7
    2410:	cmp	w0, #0xf0
    2414:	mov	w6, #0x3                   	// #3
    2418:	b.eq	23b8 <grub_efi_set_variable+0xb0>  // b.none
    241c:	mov	x11, x9
    2420:	b	23a0 <grub_efi_set_variable+0x98>
    2424:	cbz	w5, 2478 <grub_efi_set_variable+0x170>
    2428:	cmp	x10, #0x1
    242c:	b.ls	24fc <grub_efi_set_variable+0x1f4>  // b.plast
    2430:	mov	x11, x9
    2434:	cmp	w5, w3
    2438:	and	w8, w5, #0xffff
    243c:	b.ls	23a8 <grub_efi_set_variable+0xa0>  // b.plast
    2440:	mov	x11, x7
    2444:	sub	w6, w5, #0x10, lsl #12
    2448:	and	w8, w8, #0x3ff
    244c:	sub	x10, x10, #0x2
    2450:	ubfx	x6, x6, #10, #10
    2454:	orr	w8, w8, w1
    2458:	orr	w6, w6, w2
    245c:	strh	w6, [x11], #4
    2460:	strh	w8, [x7, #2]
    2464:	cmp	x20, #0x0
    2468:	mov	x7, x11
    246c:	ccmp	x10, #0x0, #0x4, ne  // ne = any
    2470:	mov	w6, #0x0                   	// #0
    2474:	b.ne	23c4 <grub_efi_set_variable+0xbc>  // b.any
    2478:	adrp	x0, 0 <_start>
    247c:	mov	x4, x24
    2480:	mov	x3, x23
    2484:	mov	x1, x22
    2488:	ldr	x5, [x0]
    248c:	strh	wzr, [x7]
    2490:	mov	w2, #0x7                   	// #7
    2494:	mov	x0, x21
    2498:	ldr	x5, [x5]
    249c:	ldr	x5, [x5, #88]
    24a0:	ldr	x5, [x5, #88]
    24a4:	blr	x5
    24a8:	mov	x20, x0
    24ac:	mov	x0, x21
    24b0:	bl	5828 <grub_free>
    24b4:	mov	w0, #0x0                   	// #0
    24b8:	cbnz	x20, 2510 <grub_efi_set_variable+0x208>
    24bc:	ldp	x19, x20, [sp, #16]
    24c0:	ldp	x21, x22, [sp, #32]
    24c4:	ldp	x23, x24, [sp, #48]
    24c8:	ldp	x29, x30, [sp], #64
    24cc:	ret
    24d0:	cbz	w6, 2424 <grub_efi_set_variable+0x11c>
    24d4:	mov	w6, #0x1                   	// #1
    24d8:	b	23b8 <grub_efi_set_variable+0xb0>
    24dc:	tst	w8, #0x1e
    24e0:	b.eq	241c <grub_efi_set_variable+0x114>  // b.none
    24e4:	and	w5, w8, #0x1f
    24e8:	mov	w6, #0x1                   	// #1
    24ec:	b	23b8 <grub_efi_set_variable+0xb0>
    24f0:	cmp	w8, #0x1f
    24f4:	b.hi	23b8 <grub_efi_set_variable+0xb0>  // b.pmore
    24f8:	b	23a0 <grub_efi_set_variable+0x98>
    24fc:	cmp	w5, w3
    2500:	b.hi	2478 <grub_efi_set_variable+0x170>  // b.pmore
    2504:	mov	x11, x9
    2508:	and	w8, w5, #0xffff
    250c:	b	23a8 <grub_efi_set_variable+0xa0>
    2510:	mov	x2, x19
    2514:	adrp	x1, 0 <_start>
    2518:	ldp	x19, x20, [sp, #16]
    251c:	mov	w0, #0x1d                  	// #29
    2520:	ldp	x21, x22, [sp, #32]
    2524:	ldp	x23, x24, [sp, #48]
    2528:	ldp	x29, x30, [sp], #64
    252c:	ldr	x1, [x1]
    2530:	b	85c0 <grub_error>
    2534:	adrp	x0, 0 <_start>
    2538:	ldp	x19, x20, [sp, #16]
    253c:	ldr	x0, [x0]
    2540:	ldp	x21, x22, [sp, #32]
    2544:	ldr	w0, [x0]
    2548:	ldp	x23, x24, [sp, #48]
    254c:	ldp	x29, x30, [sp], #64
    2550:	ret
    2554:	nop
	...

0000000000002570 <grub_efi_get_variable>:
    2570:	stp	x29, x30, [sp, #-96]!
    2574:	mov	x29, sp
    2578:	stp	x19, x20, [sp, #16]
    257c:	mov	x19, x2
    2580:	mov	x20, x1
    2584:	stp	x21, x22, [sp, #32]
    2588:	mov	x22, x0
    258c:	str	xzr, [x2]
    2590:	str	xzr, [sp, #88]
    2594:	bl	af48 <grub_strlen>
    2598:	mov	x21, x0
    259c:	add	x0, x0, #0x1
    25a0:	lsl	x0, x0, #1
    25a4:	bl	57d8 <grub_malloc>
    25a8:	cbz	x0, 27e8 <grub_efi_get_variable+0x278>
    25ac:	str	x23, [sp, #48]
    25b0:	mov	x5, x0
    25b4:	mov	x23, x0
    25b8:	cbz	x21, 26a8 <grub_efi_get_variable+0x138>
    25bc:	mov	x2, x21
    25c0:	mov	w3, #0x0                   	// #0
    25c4:	mov	w4, #0x0                   	// #0
    25c8:	mov	w8, #0xffff                	// #65535
    25cc:	mov	w10, #0xffffd800            	// #-10240
    25d0:	mov	w9, #0xffffdc00            	// #-9216
    25d4:	b	2630 <grub_efi_get_variable+0xc0>
    25d8:	and	w1, w6, #0xc0
    25dc:	cmp	w1, #0x80
    25e0:	b.ne	2608 <grub_efi_get_variable+0x98>  // b.any
    25e4:	sub	w4, w4, #0x1
    25e8:	bfi	w6, w3, #6, #26
    25ec:	mov	w3, w6
    25f0:	cmp	w4, #0x1
    25f4:	b.eq	27a4 <grub_efi_get_variable+0x234>  // b.none
    25f8:	cmp	w4, #0x2
    25fc:	b.ne	2798 <grub_efi_get_variable+0x228>  // b.any
    2600:	cmp	w6, #0xf
    2604:	b.hi	2620 <grub_efi_get_variable+0xb0>  // b.pmore
    2608:	mov	w3, #0x3f                  	// #63
    260c:	mov	w6, w3
    2610:	sub	x2, x2, #0x1
    2614:	mov	x0, x22
    2618:	mov	w4, #0x0                   	// #0
    261c:	strh	w6, [x5], #2
    2620:	cmp	x21, #0x0
    2624:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    2628:	b.eq	26a8 <grub_efi_get_variable+0x138>  // b.none
    262c:	mov	x22, x0
    2630:	mov	x0, x22
    2634:	cmn	x21, #0x1
    2638:	cset	x1, ne  // ne = any
    263c:	sub	x21, x21, x1
    2640:	ldrb	w6, [x0], #1
    2644:	cbnz	w4, 25d8 <grub_efi_get_variable+0x68>
    2648:	mov	w3, w6
    264c:	tbz	w6, #7, 274c <grub_efi_get_variable+0x1dc>
    2650:	and	w1, w6, #0xe0
    2654:	cmp	w1, #0xc0
    2658:	b.eq	268c <grub_efi_get_variable+0x11c>  // b.none
    265c:	and	w1, w6, #0xf0
    2660:	and	w3, w6, #0xf
    2664:	cmp	w1, #0xe0
    2668:	mov	w4, #0x2                   	// #2
    266c:	b.eq	2620 <grub_efi_get_variable+0xb0>  // b.none
    2670:	and	w1, w6, #0xf8
    2674:	and	w3, w6, #0x7
    2678:	cmp	w1, #0xf0
    267c:	mov	w4, #0x3                   	// #3
    2680:	b.eq	2620 <grub_efi_get_variable+0xb0>  // b.none
    2684:	mov	x22, x0
    2688:	b	2608 <grub_efi_get_variable+0x98>
    268c:	tst	w6, #0x1e
    2690:	b.eq	2684 <grub_efi_get_variable+0x114>  // b.none
    2694:	cmp	x21, #0x0
    2698:	and	w3, w6, #0x1f
    269c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    26a0:	mov	w4, #0x1                   	// #1
    26a4:	b.ne	262c <grub_efi_get_variable+0xbc>  // b.any
    26a8:	adrp	x0, 0 <_start>
    26ac:	strh	wzr, [x5]
    26b0:	mov	x1, x20
    26b4:	add	x3, sp, #0x58
    26b8:	ldr	x5, [x0]
    26bc:	mov	x4, #0x0                   	// #0
    26c0:	mov	x0, x23
    26c4:	mov	x2, #0x0                   	// #0
    26c8:	ldr	x5, [x5]
    26cc:	ldr	x22, [x5, #88]
    26d0:	ldr	x5, [x22, #72]
    26d4:	blr	x5
    26d8:	mov	x1, #0x5                   	// #5
    26dc:	movk	x1, #0x8000, lsl #48
    26e0:	cmp	x0, x1
    26e4:	b.ne	27c4 <grub_efi_get_variable+0x254>  // b.any
    26e8:	ldr	x0, [sp, #88]
    26ec:	cbz	x0, 27c4 <grub_efi_get_variable+0x254>
    26f0:	bl	57d8 <grub_malloc>
    26f4:	mov	x21, x0
    26f8:	cbz	x0, 2824 <grub_efi_get_variable+0x2b4>
    26fc:	ldr	x5, [x22, #72]
    2700:	mov	x1, x20
    2704:	mov	x4, x0
    2708:	add	x3, sp, #0x58
    270c:	mov	x2, #0x0                   	// #0
    2710:	mov	x0, x23
    2714:	blr	x5
    2718:	mov	x20, x0
    271c:	str	x0, [sp, #72]
    2720:	mov	x0, x23
    2724:	bl	5828 <grub_free>
    2728:	cbnz	x20, 2800 <grub_efi_get_variable+0x290>
    272c:	ldr	x0, [sp, #88]
    2730:	ldr	x23, [sp, #48]
    2734:	str	x0, [x19]
    2738:	mov	x0, x21
    273c:	ldp	x19, x20, [sp, #16]
    2740:	ldp	x21, x22, [sp, #32]
    2744:	ldp	x29, x30, [sp], #96
    2748:	ret
    274c:	cbz	w3, 26a8 <grub_efi_get_variable+0x138>
    2750:	cmp	x2, #0x1
    2754:	b.ls	27b0 <grub_efi_get_variable+0x240>  // b.plast
    2758:	mov	x22, x0
    275c:	cmp	w3, w8
    2760:	and	w6, w3, #0xffff
    2764:	b.ls	2610 <grub_efi_get_variable+0xa0>  // b.plast
    2768:	mov	x7, x5
    276c:	sub	w1, w3, #0x10, lsl #12
    2770:	and	w6, w6, #0x3ff
    2774:	sub	x2, x2, #0x2
    2778:	ubfx	x1, x1, #10, #10
    277c:	orr	w6, w6, w9
    2780:	orr	w1, w1, w10
    2784:	strh	w1, [x7], #4
    2788:	mov	w4, #0x0                   	// #0
    278c:	strh	w6, [x5, #2]
    2790:	mov	x5, x7
    2794:	b	2620 <grub_efi_get_variable+0xb0>
    2798:	cbz	w4, 274c <grub_efi_get_variable+0x1dc>
    279c:	mov	w4, #0x1                   	// #1
    27a0:	b	2620 <grub_efi_get_variable+0xb0>
    27a4:	cmp	w6, #0x1f
    27a8:	b.hi	2620 <grub_efi_get_variable+0xb0>  // b.pmore
    27ac:	b	2608 <grub_efi_get_variable+0x98>
    27b0:	cmp	w3, w8
    27b4:	b.hi	26a8 <grub_efi_get_variable+0x138>  // b.pmore
    27b8:	mov	x22, x0
    27bc:	and	w6, w3, #0xffff
    27c0:	b	2610 <grub_efi_get_variable+0xa0>
    27c4:	mov	x0, x23
    27c8:	mov	x21, #0x0                   	// #0
    27cc:	bl	5828 <grub_free>
    27d0:	mov	x0, x21
    27d4:	ldp	x19, x20, [sp, #16]
    27d8:	ldp	x21, x22, [sp, #32]
    27dc:	ldr	x23, [sp, #48]
    27e0:	ldp	x29, x30, [sp], #96
    27e4:	ret
    27e8:	mov	x21, #0x0                   	// #0
    27ec:	mov	x0, x21
    27f0:	ldp	x19, x20, [sp, #16]
    27f4:	ldp	x21, x22, [sp, #32]
    27f8:	ldp	x29, x30, [sp], #96
    27fc:	ret
    2800:	mov	x0, x21
    2804:	mov	x21, #0x0                   	// #0
    2808:	bl	5828 <grub_free>
    280c:	mov	x0, x21
    2810:	ldp	x19, x20, [sp, #16]
    2814:	ldp	x21, x22, [sp, #32]
    2818:	ldr	x23, [sp, #48]
    281c:	ldp	x29, x30, [sp], #96
    2820:	ret
    2824:	mov	x0, x23
    2828:	bl	5828 <grub_free>
    282c:	ldr	x23, [sp, #48]
    2830:	b	2738 <grub_efi_get_variable+0x1c8>
    2834:	nop
	...

0000000000002840 <grub_efi_modules_addr>:
    2840:	stp	x29, x30, [sp, #-80]!
    2844:	adrp	x0, 0 <_start>
    2848:	adrp	x2, 0 <_start>
    284c:	mov	x29, sp
    2850:	ldr	x0, [x0]
    2854:	adrp	x1, 0 <_start>
    2858:	ldr	x3, [x2]
    285c:	mov	w5, #0x2                   	// #2
    2860:	ldr	x0, [x0]
    2864:	add	x2, sp, #0x48
    2868:	ldr	x3, [x3]
    286c:	mov	x4, #0x0                   	// #0
    2870:	ldr	x0, [x0, #96]
    2874:	ldr	x1, [x1]
    2878:	ldr	x6, [x0, #280]
    287c:	add	x1, x1, #0x10
    2880:	mov	x0, x3
    2884:	blr	x6
    2888:	cbnz	x0, 294c <grub_efi_modules_addr+0x10c>
    288c:	str	x23, [sp, #48]
    2890:	ldr	x23, [sp, #72]
    2894:	cbz	x23, 2928 <grub_efi_modules_addr+0xe8>
    2898:	ldr	x0, [x23, #64]
    289c:	stp	x21, x22, [sp, #32]
    28a0:	add	x21, x0, #0x84
    28a4:	stp	x19, x20, [sp, #16]
    28a8:	ldrh	w19, [x0, #148]
    28ac:	ldrh	w0, [x21, #2]
    28b0:	add	x19, x19, #0x14
    28b4:	add	x19, x21, x19
    28b8:	cbz	w0, 2920 <grub_efi_modules_addr+0xe0>
    28bc:	adrp	x0, 0 <_start>
    28c0:	mov	w20, #0x0                   	// #0
    28c4:	ldr	x22, [x0]
    28c8:	b	28e0 <grub_efi_modules_addr+0xa0>
    28cc:	ldrh	w0, [x21, #2]
    28d0:	add	x19, x19, #0x28
    28d4:	and	w20, w1, #0xffff
    28d8:	cmp	w0, w1, uxth
    28dc:	b.ls	28f8 <grub_efi_modules_addr+0xb8>  // b.plast
    28e0:	mov	x1, x22
    28e4:	mov	x0, x19
    28e8:	bl	9b60 <grub_strcmp>
    28ec:	add	w1, w20, #0x1
    28f0:	cbnz	w0, 28cc <grub_efi_modules_addr+0x8c>
    28f4:	ldrh	w0, [x21, #2]
    28f8:	cmp	w0, w20
    28fc:	b.eq	2920 <grub_efi_modules_addr+0xe0>  // b.none
    2900:	ldr	w1, [x19, #12]
    2904:	mov	w3, #0x696d                	// #26989
    2908:	ldr	x2, [x23, #64]
    290c:	movk	w3, #0x676d, lsl #16
    2910:	add	x0, x2, x1
    2914:	ldr	w1, [x2, x1]
    2918:	cmp	w1, w3
    291c:	b.eq	2938 <grub_efi_modules_addr+0xf8>  // b.none
    2920:	ldp	x19, x20, [sp, #16]
    2924:	ldp	x21, x22, [sp, #32]
    2928:	mov	x0, #0x0                   	// #0
    292c:	ldr	x23, [sp, #48]
    2930:	ldp	x29, x30, [sp], #80
    2934:	ret
    2938:	ldp	x19, x20, [sp, #16]
    293c:	ldp	x21, x22, [sp, #32]
    2940:	ldr	x23, [sp, #48]
    2944:	ldp	x29, x30, [sp], #80
    2948:	ret
    294c:	mov	x0, #0x0                   	// #0
    2950:	ldp	x29, x30, [sp], #80
    2954:	ret
	...

0000000000002978 <grub_efi_get_filename>:
    2978:	stp	x29, x30, [sp, #-96]!
    297c:	mov	x29, sp
    2980:	stp	x19, x20, [sp, #16]
    2984:	cbz	x0, 2cec <grub_efi_get_filename+0x374>
    2988:	stp	x25, x26, [sp, #64]
    298c:	mov	x25, x0
    2990:	ldrb	w1, [x0]
    2994:	ldrb	w4, [x0, #1]
    2998:	and	w1, w1, #0x7f
    299c:	cmp	w1, #0x7f
    29a0:	b.eq	2ce8 <grub_efi_get_filename+0x370>  // b.none
    29a4:	mov	x2, x0
    29a8:	mov	x0, #0x0                   	// #0
    29ac:	nop
    29b0:	cmp	w1, #0x4
    29b4:	ldrh	w3, [x2, #2]
    29b8:	ccmp	w4, #0x4, #0x0, eq  // eq = none
    29bc:	b.ne	29d4 <grub_efi_get_filename+0x5c>  // b.any
    29c0:	sub	w1, w3, #0x4
    29c4:	ubfx	x1, x1, #1, #16
    29c8:	lsl	w1, w1, #2
    29cc:	add	w1, w1, #0x2
    29d0:	add	x0, x0, w1, sxtw
    29d4:	add	x2, x2, w3, uxth
    29d8:	ldrb	w1, [x2]
    29dc:	ldrb	w4, [x2, #1]
    29e0:	and	w1, w1, #0x7f
    29e4:	cmp	w1, #0x7f
    29e8:	b.ne	29b0 <grub_efi_get_filename+0x38>  // b.any
    29ec:	cbz	x0, 2ce8 <grub_efi_get_filename+0x370>
    29f0:	bl	57d8 <grub_malloc>
    29f4:	mov	x20, x0
    29f8:	cbz	x0, 2ce8 <grub_efi_get_filename+0x370>
    29fc:	stp	x23, x24, [sp, #48]
    2a00:	ldrb	w0, [x25]
    2a04:	ldrb	w1, [x25, #1]
    2a08:	and	w0, w0, #0x7f
    2a0c:	cmp	w0, #0x7f
    2a10:	b.eq	2d20 <grub_efi_get_filename+0x3a8>  // b.none
    2a14:	mov	x24, x20
    2a18:	mov	w19, #0xffff2400            	// #-56320
    2a1c:	stp	x21, x22, [sp, #32]
    2a20:	mov	w22, #0x2f                  	// #47
    2a24:	mov	w21, #0xffff2800            	// #-55296
    2a28:	str	x27, [sp, #80]
    2a2c:	b	2a4c <grub_efi_get_filename+0xd4>
    2a30:	ldrh	w0, [x25, #2]
    2a34:	add	x25, x25, x0
    2a38:	ldrb	w0, [x25]
    2a3c:	ldrb	w1, [x25, #1]
    2a40:	and	w0, w0, #0x7f
    2a44:	cmp	w0, #0x7f
    2a48:	b.eq	2b84 <grub_efi_get_filename+0x20c>  // b.none
    2a4c:	cmp	w0, #0x4
    2a50:	ccmp	w1, #0x4, #0x0, eq  // eq = none
    2a54:	b.ne	2a30 <grub_efi_get_filename+0xb8>  // b.any
    2a58:	strb	w22, [x24], #1
    2a5c:	ldrh	w1, [x25, #2]
    2a60:	sub	w1, w1, #0x4
    2a64:	sxtw	x1, w1
    2a68:	tst	w1, #0x1fffe
    2a6c:	lsr	x2, x1, #1
    2a70:	ubfx	w1, w1, #1, #16
    2a74:	b.eq	2c44 <grub_efi_get_filename+0x2cc>  // b.none
    2a78:	ubfiz	x2, x2, #1, #16
    2a7c:	add	x2, x2, #0x2
    2a80:	add	x2, x25, x2
    2a84:	b	2a90 <grub_efi_get_filename+0x118>
    2a88:	ands	w1, w3, #0xffff
    2a8c:	b.eq	2c44 <grub_efi_get_filename+0x2cc>  // b.none
    2a90:	ldrh	w0, [x2]
    2a94:	sub	w3, w1, #0x1
    2a98:	sub	x2, x2, #0x2
    2a9c:	cbz	w0, 2a88 <grub_efi_get_filename+0x110>
    2aa0:	ubfiz	x27, x1, #1, #16
    2aa4:	and	x23, x1, #0xffff
    2aa8:	mov	x0, x27
    2aac:	bl	57d8 <grub_malloc>
    2ab0:	mov	x26, x0
    2ab4:	cbz	x0, 2c54 <grub_efi_get_filename+0x2dc>
    2ab8:	add	x1, x25, #0x4
    2abc:	mov	x2, x27
    2ac0:	bl	9a40 <grub_memmove>
    2ac4:	sub	x1, x23, #0x1
    2ac8:	mov	w5, #0x0                   	// #0
    2acc:	mov	w6, #0x3f                  	// #63
    2ad0:	mov	w7, #0x2400                	// #9216
    2ad4:	b	2b38 <grub_efi_get_filename+0x1c0>
    2ad8:	add	w4, w2, w19
    2adc:	cmp	w4, #0x3ff
    2ae0:	b.hi	2be4 <grub_efi_get_filename+0x26c>  // b.pmore
    2ae4:	add	w4, w5, w21
    2ae8:	mov	x0, x3
    2aec:	add	x24, x24, #0x4
    2af0:	mov	w5, #0x0                   	// #0
    2af4:	add	w2, w2, w4, lsl #10
    2af8:	add	w2, w2, w7
    2afc:	and	w3, w2, #0x3f
    2b00:	lsr	w8, w2, #18
    2b04:	ubfx	x4, x2, #12, #6
    2b08:	ubfx	x2, x2, #6, #6
    2b0c:	orr	w8, w8, #0xfffffff0
    2b10:	orr	w4, w4, #0xffffff80
    2b14:	orr	w2, w2, #0xffffff80
    2b18:	orr	w3, w3, #0xffffff80
    2b1c:	sturb	w8, [x24, #-4]
    2b20:	sturb	w4, [x24, #-3]
    2b24:	sturb	w2, [x24, #-2]
    2b28:	sturb	w3, [x24, #-1]
    2b2c:	sub	x1, x1, #0x1
    2b30:	cmn	x1, #0x1
    2b34:	b.eq	2b60 <grub_efi_get_filename+0x1e8>  // b.none
    2b38:	mov	x3, x0
    2b3c:	ldrh	w2, [x3], #2
    2b40:	cbnz	w5, 2ad8 <grub_efi_get_filename+0x160>
    2b44:	cmp	w2, #0x7f
    2b48:	b.hi	2bf0 <grub_efi_get_filename+0x278>  // b.pmore
    2b4c:	strb	w2, [x24], #1
    2b50:	sub	x1, x1, #0x1
    2b54:	mov	x0, x3
    2b58:	cmn	x1, #0x1
    2b5c:	b.ne	2b38 <grub_efi_get_filename+0x1c0>  // b.any
    2b60:	mov	x0, x26
    2b64:	bl	5828 <grub_free>
    2b68:	ldrh	w0, [x25, #2]
    2b6c:	add	x25, x25, x0
    2b70:	ldrb	w0, [x25]
    2b74:	ldrb	w1, [x25, #1]
    2b78:	and	w0, w0, #0x7f
    2b7c:	cmp	w0, #0x7f
    2b80:	b.ne	2a4c <grub_efi_get_filename+0xd4>  // b.any
    2b84:	ldp	x21, x22, [sp, #32]
    2b88:	ldr	x27, [sp, #80]
    2b8c:	strb	wzr, [x24]
    2b90:	ldrb	w0, [x20]
    2b94:	cbz	w0, 2d18 <grub_efi_get_filename+0x3a0>
    2b98:	mov	x1, x20
    2b9c:	mov	x2, x20
    2ba0:	mov	w3, #0x2f                  	// #47
    2ba4:	nop
    2ba8:	cmp	w0, #0x5c
    2bac:	add	x2, x2, #0x1
    2bb0:	ccmp	w0, w3, #0x4, ne  // ne = any
    2bb4:	b.eq	2cbc <grub_efi_get_filename+0x344>  // b.none
    2bb8:	sturb	w0, [x2, #-1]
    2bbc:	add	x1, x1, #0x1
    2bc0:	ldrb	w0, [x1]
    2bc4:	cbnz	w0, 2ba8 <grub_efi_get_filename+0x230>
    2bc8:	strb	wzr, [x2]
    2bcc:	mov	x0, x20
    2bd0:	ldp	x19, x20, [sp, #16]
    2bd4:	ldp	x23, x24, [sp, #48]
    2bd8:	ldp	x25, x26, [sp, #64]
    2bdc:	ldp	x29, x30, [sp], #96
    2be0:	ret
    2be4:	mov	w5, #0x0                   	// #0
    2be8:	strb	w6, [x24], #1
    2bec:	b	2b2c <grub_efi_get_filename+0x1b4>
    2bf0:	cmp	w2, #0x7ff
    2bf4:	b.hi	2c20 <grub_efi_get_filename+0x2a8>  // b.pmore
    2bf8:	mov	x4, x24
    2bfc:	lsr	w8, w2, #6
    2c00:	orr	w8, w8, #0xffffffc0
    2c04:	and	w2, w2, #0x3f
    2c08:	orr	w2, w2, #0xffffff80
    2c0c:	mov	x0, x3
    2c10:	strb	w8, [x4], #2
    2c14:	strb	w2, [x24, #1]
    2c18:	mov	x24, x4
    2c1c:	b	2b2c <grub_efi_get_filename+0x1b4>
    2c20:	add	w0, w2, w21
    2c24:	cmp	w0, #0x3ff
    2c28:	b.ls	2cb0 <grub_efi_get_filename+0x338>  // b.plast
    2c2c:	add	w0, w2, w19
    2c30:	cmp	w0, #0x3ff
    2c34:	b.hi	2c80 <grub_efi_get_filename+0x308>  // b.pmore
    2c38:	mov	x0, x3
    2c3c:	strb	w6, [x24], #1
    2c40:	b	2b2c <grub_efi_get_filename+0x1b4>
    2c44:	mov	x0, #0x0                   	// #0
    2c48:	bl	57d8 <grub_malloc>
    2c4c:	mov	x26, x0
    2c50:	cbnz	x0, 2d00 <grub_efi_get_filename+0x388>
    2c54:	mov	x0, x20
    2c58:	mov	x20, #0x0                   	// #0
    2c5c:	bl	5828 <grub_free>
    2c60:	mov	x0, x20
    2c64:	ldp	x19, x20, [sp, #16]
    2c68:	ldp	x21, x22, [sp, #32]
    2c6c:	ldp	x23, x24, [sp, #48]
    2c70:	ldp	x25, x26, [sp, #64]
    2c74:	ldr	x27, [sp, #80]
    2c78:	ldp	x29, x30, [sp], #96
    2c7c:	ret
    2c80:	lsr	w8, w2, #12
    2c84:	ubfx	x4, x2, #6, #6
    2c88:	and	w2, w2, #0x3f
    2c8c:	mov	x0, x3
    2c90:	orr	w8, w8, #0xffffffe0
    2c94:	orr	w3, w4, #0xffffff80
    2c98:	orr	w2, w2, #0xffffff80
    2c9c:	add	x24, x24, #0x3
    2ca0:	sturb	w8, [x24, #-3]
    2ca4:	sturb	w3, [x24, #-2]
    2ca8:	sturb	w2, [x24, #-1]
    2cac:	b	2b2c <grub_efi_get_filename+0x1b4>
    2cb0:	mov	w5, w2
    2cb4:	mov	x0, x3
    2cb8:	b	2b2c <grub_efi_get_filename+0x1b4>
    2cbc:	sturb	w3, [x2, #-1]
    2cc0:	ldrb	w0, [x1]
    2cc4:	cmp	w0, #0x5c
    2cc8:	ccmp	w0, w3, #0x4, ne  // ne = any
    2ccc:	b.ne	2bc4 <grub_efi_get_filename+0x24c>  // b.any
    2cd0:	ldrb	w0, [x1, #1]!
    2cd4:	cmp	w0, #0x5c
    2cd8:	ccmp	w0, w3, #0x4, ne  // ne = any
    2cdc:	b.eq	2cd0 <grub_efi_get_filename+0x358>  // b.none
    2ce0:	cbnz	w0, 2ba8 <grub_efi_get_filename+0x230>
    2ce4:	b	2bc8 <grub_efi_get_filename+0x250>
    2ce8:	ldp	x25, x26, [sp, #64]
    2cec:	mov	x20, #0x0                   	// #0
    2cf0:	mov	x0, x20
    2cf4:	ldp	x19, x20, [sp, #16]
    2cf8:	ldp	x29, x30, [sp], #96
    2cfc:	ret
    2d00:	add	x1, x25, #0x4
    2d04:	mov	x2, #0x0                   	// #0
    2d08:	bl	9a40 <grub_memmove>
    2d0c:	mov	x0, x26
    2d10:	bl	5828 <grub_free>
    2d14:	b	2b68 <grub_efi_get_filename+0x1f0>
    2d18:	mov	x2, x20
    2d1c:	b	2bc8 <grub_efi_get_filename+0x250>
    2d20:	mov	x24, x20
    2d24:	b	2b8c <grub_efi_get_filename+0x214>

0000000000002d28 <grub_efi_get_device_path>:
    2d28:	stp	x29, x30, [sp, #-32]!
    2d2c:	adrp	x3, 0 <_start>
    2d30:	adrp	x2, 0 <_start>
    2d34:	mov	x29, sp
    2d38:	ldr	x6, [x3]
    2d3c:	adrp	x1, 0 <_start>
    2d40:	ldr	x3, [x2]
    2d44:	mov	w5, #0x2                   	// #2
    2d48:	ldr	x6, [x6]
    2d4c:	add	x2, sp, #0x18
    2d50:	ldr	x3, [x3]
    2d54:	mov	x4, #0x0                   	// #0
    2d58:	ldr	x6, [x6, #96]
    2d5c:	ldr	x1, [x1]
    2d60:	ldr	x6, [x6, #280]
    2d64:	add	x1, x1, #0x20
    2d68:	blr	x6
    2d6c:	cmp	x0, #0x0
    2d70:	ldr	x1, [sp, #24]
    2d74:	ldp	x29, x30, [sp], #32
    2d78:	csel	x0, x1, xzr, eq  // eq = none
    2d7c:	ret
	...

0000000000002d98 <grub_efi_find_last_device_path>:
    2d98:	mov	x1, x0
    2d9c:	ldrb	w0, [x0]
    2da0:	and	w0, w0, #0x7f
    2da4:	cmp	w0, #0x7f
    2da8:	b.eq	2ddc <grub_efi_find_last_device_path+0x44>  // b.none
    2dac:	nop
    2db0:	ldrh	w2, [x1, #2]
    2db4:	mov	x0, x1
    2db8:	add	x1, x1, x2
    2dbc:	ldrb	w2, [x1]
    2dc0:	and	w2, w2, #0x7f
    2dc4:	cmp	w2, #0x7f
    2dc8:	b.ne	2db0 <grub_efi_find_last_device_path+0x18>  // b.any
    2dcc:	ldrb	w2, [x1, #1]
    2dd0:	cmp	w2, #0xff
    2dd4:	b.ne	2db0 <grub_efi_find_last_device_path+0x18>  // b.any
    2dd8:	ret
    2ddc:	ldrb	w0, [x1, #1]
    2de0:	cmp	w0, #0xff
    2de4:	b.ne	2db0 <grub_efi_find_last_device_path+0x18>  // b.any
    2de8:	mov	x0, #0x0                   	// #0
    2dec:	ret

0000000000002df0 <grub_efi_duplicate_device_path>:
    2df0:	stp	x29, x30, [sp, #-48]!
    2df4:	mov	x3, x0
    2df8:	mov	x29, sp
    2dfc:	stp	x19, x20, [sp, #16]
    2e00:	mov	x19, #0x0                   	// #0
    2e04:	ldrh	w5, [x3, #2]
    2e08:	str	x21, [sp, #32]
    2e0c:	mov	x21, x0
    2e10:	add	x19, x19, x5
    2e14:	ldrb	w4, [x3]
    2e18:	and	w4, w4, #0x7f
    2e1c:	cmp	w4, #0x7f
    2e20:	b.eq	2e44 <grub_efi_duplicate_device_path+0x54>  // b.none
    2e24:	nop
    2e28:	add	x3, x3, x5
    2e2c:	ldrb	w4, [x3]
    2e30:	ldrh	w5, [x3, #2]
    2e34:	and	w4, w4, #0x7f
    2e38:	cmp	w4, #0x7f
    2e3c:	add	x19, x19, x5
    2e40:	b.ne	2e28 <grub_efi_duplicate_device_path+0x38>  // b.any
    2e44:	ldrb	w2, [x3, #1]
    2e48:	cmp	w2, #0xff
    2e4c:	b.ne	2e28 <grub_efi_duplicate_device_path+0x38>  // b.any
    2e50:	mov	x0, x19
    2e54:	bl	57d8 <grub_malloc>
    2e58:	mov	x20, x0
    2e5c:	cbz	x0, 2e6c <grub_efi_duplicate_device_path+0x7c>
    2e60:	mov	x2, x19
    2e64:	mov	x1, x21
    2e68:	bl	9a40 <grub_memmove>
    2e6c:	mov	x0, x20
    2e70:	ldp	x19, x20, [sp, #16]
    2e74:	ldr	x21, [sp, #32]
    2e78:	ldp	x29, x30, [sp], #48
    2e7c:	ret

0000000000002e80 <grub_efi_print_device_path>:
    2e80:	sub	sp, sp, #0xc0
    2e84:	stp	x29, x30, [sp, #112]
    2e88:	add	x29, sp, #0x70
    2e8c:	stp	x19, x20, [sp, #128]
    2e90:	mov	x19, x0
    2e94:	stp	x21, x22, [sp, #144]
    2e98:	mov	w22, #0xffff2800            	// #-55296
    2e9c:	ldrh	w20, [x19, #2]
    2ea0:	stp	x23, x24, [sp, #160]
    2ea4:	mov	w21, #0xffff2400            	// #-56320
    2ea8:	adrp	x23, 0 <_start>
    2eac:	ldrb	w3, [x19]
    2eb0:	ldrb	w1, [x19, #1]
    2eb4:	and	w3, w3, #0x7f
    2eb8:	cmp	w3, #0x4
    2ebc:	b.eq	2f44 <grub_efi_print_device_path+0xc4>  // b.none
    2ec0:	b.hi	3114 <grub_efi_print_device_path+0x294>  // b.pmore
    2ec4:	cmp	w3, #0x2
    2ec8:	b.eq	3200 <grub_efi_print_device_path+0x380>  // b.none
    2ecc:	cmp	w3, #0x3
    2ed0:	b.ne	30b8 <grub_efi_print_device_path+0x238>  // b.any
    2ed4:	cmp	w1, #0xa
    2ed8:	b.eq	36d0 <grub_efi_print_device_path+0x850>  // b.none
    2edc:	b.hi	2fdc <grub_efi_print_device_path+0x15c>  // b.pmore
    2ee0:	cmp	w1, #0x4
    2ee4:	b.eq	361c <grub_efi_print_device_path+0x79c>  // b.none
    2ee8:	b.ls	3144 <grub_efi_print_device_path+0x2c4>  // b.plast
    2eec:	cmp	w1, #0x6
    2ef0:	b.eq	3608 <grub_efi_print_device_path+0x788>  // b.none
    2ef4:	cmp	w1, #0x9
    2ef8:	b.ne	3220 <grub_efi_print_device_path+0x3a0>  // b.any
    2efc:	adrp	x0, 0 <_start>
    2f00:	ldrb	w1, [x19, #8]
    2f04:	ldp	x2, x3, [x19, #24]
    2f08:	ldr	x0, [x0]
    2f0c:	ldr	x4, [x19, #40]
    2f10:	bl	ada8 <grub_err_printf>
    2f14:	nop
    2f18:	ldrb	w0, [x19]
    2f1c:	and	w0, w0, #0x7f
    2f20:	cmp	w0, #0x7f
    2f24:	b.eq	2fb8 <grub_efi_print_device_path+0x138>  // b.none
    2f28:	add	x19, x19, w20, uxth
    2f2c:	ldrb	w3, [x19]
    2f30:	ldrb	w1, [x19, #1]
    2f34:	and	w3, w3, #0x7f
    2f38:	ldrh	w20, [x19, #2]
    2f3c:	cmp	w3, #0x4
    2f40:	b.ne	2ec0 <grub_efi_print_device_path+0x40>  // b.any
    2f44:	cmp	w1, #0x3
    2f48:	b.eq	3570 <grub_efi_print_device_path+0x6f0>  // b.none
    2f4c:	b.ls	3240 <grub_efi_print_device_path+0x3c0>  // b.plast
    2f50:	cmp	w1, #0x4
    2f54:	b.eq	342c <grub_efi_print_device_path+0x5ac>  // b.none
    2f58:	cmp	w1, #0x5
    2f5c:	b.ne	350c <grub_efi_print_device_path+0x68c>  // b.any
    2f60:	adrp	x0, 0 <_start>
    2f64:	ldrb	w7, [x19, #15]
    2f68:	ldrb	w6, [x19, #14]
    2f6c:	ldrb	w5, [x19, #13]
    2f70:	ldrb	w4, [x19, #12]
    2f74:	ldrh	w3, [x19, #10]
    2f78:	ldrh	w2, [x19, #8]
    2f7c:	ldrb	w8, [x19, #19]
    2f80:	ldrb	w9, [x19, #18]
    2f84:	ldrb	w10, [x19, #17]
    2f88:	ldrb	w11, [x19, #16]
    2f8c:	ldr	w1, [x19, #4]
    2f90:	ldr	x0, [x0]
    2f94:	str	w11, [sp]
    2f98:	str	w10, [sp, #8]
    2f9c:	str	w9, [sp, #16]
    2fa0:	str	w8, [sp, #24]
    2fa4:	bl	ada8 <grub_err_printf>
    2fa8:	ldrb	w0, [x19]
    2fac:	and	w0, w0, #0x7f
    2fb0:	cmp	w0, #0x7f
    2fb4:	b.ne	2f28 <grub_efi_print_device_path+0xa8>  // b.any
    2fb8:	ldrb	w0, [x19, #1]
    2fbc:	cmp	w0, #0xff
    2fc0:	b.ne	2f28 <grub_efi_print_device_path+0xa8>  // b.any
    2fc4:	ldp	x29, x30, [sp, #112]
    2fc8:	ldp	x19, x20, [sp, #128]
    2fcc:	ldp	x21, x22, [sp, #144]
    2fd0:	ldp	x23, x24, [sp, #160]
    2fd4:	add	sp, sp, #0xc0
    2fd8:	ret
    2fdc:	cmp	w1, #0xe
    2fe0:	b.eq	35e8 <grub_efi_print_device_path+0x768>  // b.none
    2fe4:	b.ls	3014 <grub_efi_print_device_path+0x194>  // b.plast
    2fe8:	cmp	w1, #0xf
    2fec:	b.eq	3648 <grub_efi_print_device_path+0x7c8>  // b.none
    2ff0:	cmp	w1, #0x12
    2ff4:	b.ne	366c <grub_efi_print_device_path+0x7ec>  // b.any
    2ff8:	adrp	x0, 0 <_start>
    2ffc:	ldrh	w3, [x19, #8]
    3000:	ldrh	w2, [x19, #6]
    3004:	ldrh	w1, [x19, #4]
    3008:	ldr	x0, [x0]
    300c:	bl	ada8 <grub_err_printf>
    3010:	b	2f18 <grub_efi_print_device_path+0x98>
    3014:	cmp	w1, #0xc
    3018:	b.eq	367c <grub_efi_print_device_path+0x7fc>  // b.none
    301c:	cmp	w1, #0xd
    3020:	b.ne	3168 <grub_efi_print_device_path+0x2e8>  // b.any
    3024:	ldrh	w6, [x19, #18]
    3028:	adrp	x0, 0 <_start>
    302c:	ldrh	w2, [x19, #26]
    3030:	ldrh	w3, [x19, #24]
    3034:	ldrh	w4, [x19, #22]
    3038:	ldrh	w5, [x19, #20]
    303c:	ldrb	w1, [x19, #42]
    3040:	ldrh	w8, [x19, #40]
    3044:	ldrh	w9, [x19, #38]
    3048:	ldrh	w10, [x19, #36]
    304c:	ldrh	w11, [x19, #34]
    3050:	ldrh	w12, [x19, #32]
    3054:	ldrh	w13, [x19, #30]
    3058:	ldrh	w14, [x19, #28]
    305c:	ldrh	w7, [x19, #16]
    3060:	str	w6, [sp]
    3064:	ldrh	w6, [x19, #14]
    3068:	str	w5, [sp, #8]
    306c:	ldrh	w5, [x19, #12]
    3070:	str	w4, [sp, #16]
    3074:	ldrh	w4, [x19, #10]
    3078:	str	w3, [sp, #24]
    307c:	ldrh	w3, [x19, #8]
    3080:	str	w2, [sp, #32]
    3084:	ldrh	w2, [x19, #6]
    3088:	str	w14, [sp, #40]
    308c:	str	w13, [sp, #48]
    3090:	str	w12, [sp, #56]
    3094:	str	w11, [sp, #64]
    3098:	str	w10, [sp, #72]
    309c:	str	w9, [sp, #80]
    30a0:	str	w8, [sp, #88]
    30a4:	str	w1, [sp, #96]
    30a8:	ldrh	w1, [x19, #4]
    30ac:	ldr	x0, [x0]
    30b0:	bl	ada8 <grub_err_printf>
    30b4:	b	2f18 <grub_efi_print_device_path+0x98>
    30b8:	cmp	w3, #0x1
    30bc:	b.ne	31d8 <grub_efi_print_device_path+0x358>  // b.any
    30c0:	cmp	w1, #0x3
    30c4:	b.eq	351c <grub_efi_print_device_path+0x69c>  // b.none
    30c8:	b.ls	30f0 <grub_efi_print_device_path+0x270>  // b.plast
    30cc:	cmp	w1, #0x4
    30d0:	b.eq	3534 <grub_efi_print_device_path+0x6b4>  // b.none
    30d4:	cmp	w1, #0x5
    30d8:	b.ne	3548 <grub_efi_print_device_path+0x6c8>  // b.any
    30dc:	adrp	x0, 0 <_start>
    30e0:	ldr	w1, [x19, #4]
    30e4:	ldr	x0, [x0]
    30e8:	bl	ada8 <grub_err_printf>
    30ec:	b	2f18 <grub_efi_print_device_path+0x98>
    30f0:	cmp	w1, #0x1
    30f4:	b.eq	3558 <grub_efi_print_device_path+0x6d8>  // b.none
    30f8:	cmp	w1, #0x2
    30fc:	b.ne	3548 <grub_efi_print_device_path+0x6c8>  // b.any
    3100:	adrp	x0, 0 <_start>
    3104:	ldrb	w1, [x19, #4]
    3108:	ldr	x0, [x0]
    310c:	bl	ada8 <grub_err_printf>
    3110:	b	2f18 <grub_efi_print_device_path+0x98>
    3114:	cmp	w3, #0x5
    3118:	b.eq	319c <grub_efi_print_device_path+0x31c>  // b.none
    311c:	cmp	w3, #0x7f
    3120:	b.ne	31d8 <grub_efi_print_device_path+0x358>  // b.any
    3124:	cmp	w1, #0x1
    3128:	b.eq	3340 <grub_efi_print_device_path+0x4c0>  // b.none
    312c:	cmp	w1, #0xff
    3130:	b.eq	3300 <grub_efi_print_device_path+0x480>  // b.none
    3134:	adrp	x0, 0 <_start>
    3138:	ldr	x0, [x0]
    313c:	bl	ada8 <grub_err_printf>
    3140:	b	2f18 <grub_efi_print_device_path+0x98>
    3144:	cmp	w1, #0x2
    3148:	b.eq	3630 <grub_efi_print_device_path+0x7b0>  // b.none
    314c:	cmp	w1, #0x3
    3150:	b.ne	31b4 <grub_efi_print_device_path+0x334>  // b.any
    3154:	adrp	x0, 0 <_start>
    3158:	ldp	x1, x2, [x19, #8]
    315c:	ldr	x0, [x0]
    3160:	bl	ada8 <grub_err_printf>
    3164:	b	2f18 <grub_efi_print_device_path+0x98>
    3168:	cmp	w1, #0xb
    316c:	b.ne	366c <grub_efi_print_device_path+0x7ec>  // b.any
    3170:	adrp	x0, 0 <_start>
    3174:	ldrb	w7, [x19, #36]
    3178:	ldrb	w6, [x19, #9]
    317c:	ldrb	w5, [x19, #8]
    3180:	ldrb	w4, [x19, #7]
    3184:	ldrb	w3, [x19, #6]
    3188:	ldrb	w2, [x19, #5]
    318c:	ldrb	w1, [x19, #4]
    3190:	ldr	x0, [x0]
    3194:	bl	ada8 <grub_err_printf>
    3198:	b	2f18 <grub_efi_print_device_path+0x98>
    319c:	cmp	w1, #0x1
    31a0:	b.eq	3310 <grub_efi_print_device_path+0x490>  // b.none
    31a4:	adrp	x0, 0 <_start>
    31a8:	ldr	x0, [x0]
    31ac:	bl	ada8 <grub_err_printf>
    31b0:	b	2f18 <grub_efi_print_device_path+0x98>
    31b4:	cmp	w1, #0x1
    31b8:	b.ne	366c <grub_efi_print_device_path+0x7ec>  // b.any
    31bc:	adrp	x0, 0 <_start>
    31c0:	ldrh	w3, [x19, #6]
    31c4:	ldrb	w2, [x19, #5]
    31c8:	ldrb	w1, [x19, #4]
    31cc:	ldr	x0, [x0]
    31d0:	bl	ada8 <grub_err_printf>
    31d4:	b	2f18 <grub_efi_print_device_path+0x98>
    31d8:	adrp	x0, 0 <_start>
    31dc:	mov	w2, w1
    31e0:	ldp	x29, x30, [sp, #112]
    31e4:	mov	w1, w3
    31e8:	ldp	x19, x20, [sp, #128]
    31ec:	ldp	x21, x22, [sp, #144]
    31f0:	ldp	x23, x24, [sp, #160]
    31f4:	add	sp, sp, #0xc0
    31f8:	ldr	x0, [x0]
    31fc:	b	ada8 <grub_err_printf>
    3200:	cmp	w1, #0x1
    3204:	b.eq	332c <grub_efi_print_device_path+0x4ac>  // b.none
    3208:	cmp	w1, #0x2
    320c:	b.eq	3268 <grub_efi_print_device_path+0x3e8>  // b.none
    3210:	adrp	x0, 0 <_start>
    3214:	ldr	x0, [x0]
    3218:	bl	ada8 <grub_err_printf>
    321c:	b	2f18 <grub_efi_print_device_path+0x98>
    3220:	cmp	w1, #0x5
    3224:	b.ne	366c <grub_efi_print_device_path+0x7ec>  // b.any
    3228:	adrp	x0, 0 <_start>
    322c:	ldrb	w2, [x19, #5]
    3230:	ldrb	w1, [x19, #4]
    3234:	ldr	x0, [x0]
    3238:	bl	ada8 <grub_err_printf>
    323c:	b	2f18 <grub_efi_print_device_path+0x98>
    3240:	cmp	w1, #0x1
    3244:	b.eq	33d4 <grub_efi_print_device_path+0x554>  // b.none
    3248:	cmp	w1, #0x2
    324c:	b.ne	350c <grub_efi_print_device_path+0x68c>  // b.any
    3250:	adrp	x0, 0 <_start>
    3254:	ldr	w1, [x19, #4]
    3258:	ldp	x2, x3, [x19, #8]
    325c:	ldr	x0, [x0]
    3260:	bl	ada8 <grub_err_printf>
    3264:	b	2f18 <grub_efi_print_device_path+0x98>
    3268:	adrp	x0, 0 <_start>
    326c:	stp	x25, x26, [sp, #176]
    3270:	add	x24, x19, #0x10
    3274:	ldr	x0, [x0]
    3278:	bl	ada8 <grub_err_printf>
    327c:	ldrb	w0, [x19, #16]
    3280:	cbz	w0, 3350 <grub_efi_print_device_path+0x4d0>
    3284:	adrp	x0, 0 <_start>
    3288:	mov	x1, x24
    328c:	ldr	x0, [x0]
    3290:	bl	ada8 <grub_err_printf>
    3294:	mov	x0, x24
    3298:	bl	af48 <grub_strlen>
    329c:	add	x0, x24, x0
    32a0:	ldrb	w0, [x0, #1]
    32a4:	cbnz	w0, 3374 <grub_efi_print_device_path+0x4f4>
    32a8:	adrp	x0, 0 <_start>
    32ac:	ldr	w1, [x19, #8]
    32b0:	ldr	x0, [x0]
    32b4:	bl	ada8 <grub_err_printf>
    32b8:	mov	x0, x24
    32bc:	bl	af48 <grub_strlen>
    32c0:	mov	x25, x0
    32c4:	mov	x0, x24
    32c8:	add	x25, x24, x25
    32cc:	bl	af48 <grub_strlen>
    32d0:	add	x0, x0, #0x1
    32d4:	add	x0, x24, x0
    32d8:	bl	af48 <grub_strlen>
    32dc:	add	x25, x25, x0
    32e0:	ldrb	w0, [x25, #2]
    32e4:	cbnz	w0, 3394 <grub_efi_print_device_path+0x514>
    32e8:	adrp	x0, 0 <_start>
    32ec:	ldr	w1, [x19, #12]
    32f0:	ldr	x0, [x0]
    32f4:	bl	ada8 <grub_err_printf>
    32f8:	ldp	x25, x26, [sp, #176]
    32fc:	b	2f18 <grub_efi_print_device_path+0x98>
    3300:	adrp	x0, 0 <_start>
    3304:	ldr	x0, [x0]
    3308:	bl	ada8 <grub_err_printf>
    330c:	b	2f18 <grub_efi_print_device_path+0x98>
    3310:	adrp	x0, 0 <_start>
    3314:	ldrh	w2, [x19, #6]
    3318:	ldrh	w1, [x19, #4]
    331c:	add	x3, x19, #0x4
    3320:	ldr	x0, [x0]
    3324:	bl	ada8 <grub_err_printf>
    3328:	b	2f18 <grub_efi_print_device_path+0x98>
    332c:	adrp	x0, 0 <_start>
    3330:	ldp	w1, w2, [x19, #4]
    3334:	ldr	x0, [x0]
    3338:	bl	ada8 <grub_err_printf>
    333c:	b	2f18 <grub_efi_print_device_path+0x98>
    3340:	adrp	x0, 0 <_start>
    3344:	ldr	x0, [x0]
    3348:	bl	ada8 <grub_err_printf>
    334c:	b	2f18 <grub_efi_print_device_path+0x98>
    3350:	adrp	x0, 0 <_start>
    3354:	ldr	w1, [x19, #4]
    3358:	ldr	x0, [x0]
    335c:	bl	ada8 <grub_err_printf>
    3360:	mov	x0, x24
    3364:	bl	af48 <grub_strlen>
    3368:	add	x0, x24, x0
    336c:	ldrb	w0, [x0, #1]
    3370:	cbz	w0, 32a8 <grub_efi_print_device_path+0x428>
    3374:	mov	x0, x24
    3378:	bl	af48 <grub_strlen>
    337c:	adrp	x2, 0 <_start>
    3380:	add	x1, x0, #0x1
    3384:	add	x1, x24, x1
    3388:	ldr	x0, [x2]
    338c:	bl	ada8 <grub_err_printf>
    3390:	b	32b8 <grub_efi_print_device_path+0x438>
    3394:	mov	x0, x24
    3398:	bl	af48 <grub_strlen>
    339c:	mov	x25, x0
    33a0:	mov	x0, x24
    33a4:	bl	af48 <grub_strlen>
    33a8:	add	x0, x0, #0x1
    33ac:	add	x0, x24, x0
    33b0:	bl	af48 <grub_strlen>
    33b4:	adrp	x2, 0 <_start>
    33b8:	add	x1, x25, x0
    33bc:	add	x1, x1, #0x2
    33c0:	ldr	x0, [x2]
    33c4:	add	x1, x24, x1
    33c8:	bl	ada8 <grub_err_printf>
    33cc:	ldp	x25, x26, [sp, #176]
    33d0:	b	2f18 <grub_efi_print_device_path+0x98>
    33d4:	adrp	x0, 0 <_start>
    33d8:	ldrb	w7, [x19, #27]
    33dc:	ldp	x2, x3, [x19, #8]
    33e0:	ldrb	w6, [x19, #26]
    33e4:	ldrb	w5, [x19, #25]
    33e8:	ldrb	w4, [x19, #24]
    33ec:	ldrb	w8, [x19, #41]
    33f0:	ldrb	w9, [x19, #40]
    33f4:	ldrb	w10, [x19, #31]
    33f8:	ldrb	w11, [x19, #30]
    33fc:	ldrb	w12, [x19, #29]
    3400:	ldrb	w13, [x19, #28]
    3404:	ldr	w1, [x19, #4]
    3408:	ldr	x0, [x0]
    340c:	str	w13, [sp]
    3410:	str	w12, [sp, #8]
    3414:	str	w11, [sp, #16]
    3418:	str	w10, [sp, #24]
    341c:	str	w9, [sp, #32]
    3420:	str	w8, [sp, #40]
    3424:	bl	ada8 <grub_err_printf>
    3428:	b	2f18 <grub_efi_print_device_path+0x98>
    342c:	sub	w24, w20, #0x4
    3430:	stp	x25, x26, [sp, #176]
    3434:	lsl	w0, w24, #1
    3438:	add	w0, w0, #0x1
    343c:	sxtw	x0, w0
    3440:	bl	57d8 <grub_malloc>
    3444:	mov	x25, x0
    3448:	cbz	x0, 35bc <grub_efi_print_device_path+0x73c>
    344c:	sxtw	x24, w24
    3450:	mov	x0, x24
    3454:	bl	57d8 <grub_malloc>
    3458:	mov	x26, x0
    345c:	cbz	x0, 3724 <grub_efi_print_device_path+0x8a4>
    3460:	mov	x2, x24
    3464:	add	x1, x19, #0x4
    3468:	lsr	x24, x24, #1
    346c:	bl	9a40 <grub_memmove>
    3470:	sub	x5, x24, #0x1
    3474:	mov	x1, x25
    3478:	cbz	x24, 3708 <grub_efi_print_device_path+0x888>
    347c:	mov	w6, #0x0                   	// #0
    3480:	mov	w7, #0x3f                  	// #63
    3484:	mov	w8, #0x2400                	// #9216
    3488:	b	34ec <grub_efi_print_device_path+0x66c>
    348c:	add	w4, w2, w21
    3490:	cmp	w4, #0x3ff
    3494:	b.hi	3580 <grub_efi_print_device_path+0x700>  // b.pmore
    3498:	add	w4, w6, w22
    349c:	mov	x0, x3
    34a0:	add	x1, x1, #0x4
    34a4:	mov	w6, #0x0                   	// #0
    34a8:	add	w2, w2, w4, lsl #10
    34ac:	add	w2, w2, w8
    34b0:	and	w3, w2, #0x3f
    34b4:	lsr	w9, w2, #18
    34b8:	ubfx	x4, x2, #12, #6
    34bc:	ubfx	x2, x2, #6, #6
    34c0:	orr	w9, w9, #0xfffffff0
    34c4:	orr	w4, w4, #0xffffff80
    34c8:	orr	w2, w2, #0xffffff80
    34cc:	orr	w3, w3, #0xffffff80
    34d0:	sturb	w9, [x1, #-4]
    34d4:	sturb	w4, [x1, #-3]
    34d8:	sturb	w2, [x1, #-2]
    34dc:	sturb	w3, [x1, #-1]
    34e0:	sub	x5, x5, #0x1
    34e4:	cmn	x5, #0x1
    34e8:	b.eq	3708 <grub_efi_print_device_path+0x888>  // b.none
    34ec:	mov	x3, x0
    34f0:	ldrh	w2, [x3], #2
    34f4:	cbnz	w6, 348c <grub_efi_print_device_path+0x60c>
    34f8:	cmp	w2, #0x7f
    34fc:	b.hi	358c <grub_efi_print_device_path+0x70c>  // b.pmore
    3500:	mov	x0, x3
    3504:	strb	w2, [x1], #1
    3508:	b	34e0 <grub_efi_print_device_path+0x660>
    350c:	adrp	x0, 0 <_start>
    3510:	ldr	x0, [x0]
    3514:	bl	ada8 <grub_err_printf>
    3518:	b	2f18 <grub_efi_print_device_path+0x98>
    351c:	adrp	x0, 0 <_start>
    3520:	ldr	w1, [x19, #4]
    3524:	ldp	x2, x3, [x19, #8]
    3528:	ldr	x0, [x0]
    352c:	bl	ada8 <grub_err_printf>
    3530:	b	2f18 <grub_efi_print_device_path+0x98>
    3534:	adrp	x0, 0 <_start>
    3538:	mov	x1, x19
    353c:	ldr	x0, [x0]
    3540:	bl	1e40 <grub_efidisk_get_device_name+0x3e8>
    3544:	b	2f18 <grub_efi_print_device_path+0x98>
    3548:	adrp	x0, 0 <_start>
    354c:	ldr	x0, [x0]
    3550:	bl	ada8 <grub_err_printf>
    3554:	b	2f18 <grub_efi_print_device_path+0x98>
    3558:	adrp	x0, 0 <_start>
    355c:	ldrb	w2, [x19, #5]
    3560:	ldrb	w1, [x19, #4]
    3564:	ldr	x0, [x0]
    3568:	bl	ada8 <grub_err_printf>
    356c:	b	2f18 <grub_efi_print_device_path+0x98>
    3570:	ldr	x0, [x23]
    3574:	mov	x1, x19
    3578:	bl	1e40 <grub_efidisk_get_device_name+0x3e8>
    357c:	b	2f18 <grub_efi_print_device_path+0x98>
    3580:	mov	w6, #0x0                   	// #0
    3584:	strb	w7, [x1], #1
    3588:	b	34e0 <grub_efi_print_device_path+0x660>
    358c:	cmp	w2, #0x7ff
    3590:	b.hi	36e4 <grub_efi_print_device_path+0x864>  // b.pmore
    3594:	mov	x4, x1
    3598:	lsr	w9, w2, #6
    359c:	orr	w9, w9, #0xffffffc0
    35a0:	and	w2, w2, #0x3f
    35a4:	orr	w2, w2, #0xffffff80
    35a8:	mov	x0, x3
    35ac:	strb	w9, [x4], #2
    35b0:	strb	w2, [x1, #1]
    35b4:	mov	x1, x4
    35b8:	b	34e0 <grub_efi_print_device_path+0x660>
    35bc:	adrp	x0, 0 <_start>
    35c0:	ldr	x0, [x0]
    35c4:	str	wzr, [x0]
    35c8:	adrp	x0, 0 <_start>
    35cc:	mov	x1, x25
    35d0:	ldr	x0, [x0]
    35d4:	bl	ada8 <grub_err_printf>
    35d8:	mov	x0, x25
    35dc:	bl	5828 <grub_free>
    35e0:	ldp	x25, x26, [sp, #176]
    35e4:	b	2f18 <grub_efi_print_device_path+0x98>
    35e8:	adrp	x0, 0 <_start>
    35ec:	ldrb	w4, [x19, #18]
    35f0:	ldrb	w3, [x19, #17]
    35f4:	ldrb	w2, [x19, #16]
    35f8:	ldr	x0, [x0]
    35fc:	ldr	x1, [x19, #8]
    3600:	bl	ada8 <grub_err_printf>
    3604:	b	2f18 <grub_efi_print_device_path+0x98>
    3608:	adrp	x0, 0 <_start>
    360c:	ldr	w1, [x19, #4]
    3610:	ldr	x0, [x0]
    3614:	bl	ada8 <grub_err_printf>
    3618:	b	2f18 <grub_efi_print_device_path+0x98>
    361c:	adrp	x0, 0 <_start>
    3620:	ldr	x1, [x19, #8]
    3624:	ldr	x0, [x0]
    3628:	bl	ada8 <grub_err_printf>
    362c:	b	2f18 <grub_efi_print_device_path+0x98>
    3630:	adrp	x0, 0 <_start>
    3634:	ldrh	w2, [x19, #6]
    3638:	ldrh	w1, [x19, #4]
    363c:	ldr	x0, [x0]
    3640:	bl	ada8 <grub_err_printf>
    3644:	b	2f18 <grub_efi_print_device_path+0x98>
    3648:	adrp	x0, 0 <_start>
    364c:	ldrb	w5, [x19, #10]
    3650:	ldrb	w4, [x19, #9]
    3654:	ldrb	w3, [x19, #8]
    3658:	ldrh	w2, [x19, #6]
    365c:	ldrh	w1, [x19, #4]
    3660:	ldr	x0, [x0]
    3664:	bl	ada8 <grub_err_printf>
    3668:	b	2f18 <grub_efi_print_device_path+0x98>
    366c:	adrp	x0, 0 <_start>
    3670:	ldr	x0, [x0]
    3674:	bl	ada8 <grub_err_printf>
    3678:	b	2f18 <grub_efi_print_device_path+0x98>
    367c:	adrp	x0, 0 <_start>
    3680:	ldrb	w7, [x19, #10]
    3684:	ldrb	w6, [x19, #9]
    3688:	ldrb	w5, [x19, #8]
    368c:	ldrb	w4, [x19, #7]
    3690:	ldrb	w3, [x19, #6]
    3694:	ldrb	w2, [x19, #5]
    3698:	ldrb	w1, [x19, #4]
    369c:	ldrb	w8, [x19, #18]
    36a0:	ldrh	w9, [x19, #16]
    36a4:	ldrh	w10, [x19, #14]
    36a8:	ldrh	w11, [x19, #12]
    36ac:	ldrb	w12, [x19, #11]
    36b0:	ldr	x0, [x0]
    36b4:	str	w12, [sp]
    36b8:	str	w11, [sp, #8]
    36bc:	str	w10, [sp, #16]
    36c0:	str	w9, [sp, #24]
    36c4:	str	w8, [sp, #32]
    36c8:	bl	ada8 <grub_err_printf>
    36cc:	b	2f18 <grub_efi_print_device_path+0x98>
    36d0:	adrp	x0, 0 <_start>
    36d4:	mov	x1, x19
    36d8:	ldr	x0, [x0]
    36dc:	bl	1e40 <grub_efidisk_get_device_name+0x3e8>
    36e0:	b	2f18 <grub_efi_print_device_path+0x98>
    36e4:	add	w0, w2, w22
    36e8:	cmp	w0, #0x3ff
    36ec:	b.ls	3718 <grub_efi_print_device_path+0x898>  // b.plast
    36f0:	add	w0, w2, w21
    36f4:	cmp	w0, #0x3ff
    36f8:	b.hi	374c <grub_efi_print_device_path+0x8cc>  // b.pmore
    36fc:	mov	x0, x3
    3700:	strb	w7, [x1], #1
    3704:	b	34e0 <grub_efi_print_device_path+0x660>
    3708:	strb	wzr, [x1]
    370c:	mov	x0, x26
    3710:	bl	5828 <grub_free>
    3714:	b	35c8 <grub_efi_print_device_path+0x748>
    3718:	mov	w6, w2
    371c:	mov	x0, x3
    3720:	b	34e0 <grub_efi_print_device_path+0x660>
    3724:	adrp	x1, 0 <_start>
    3728:	adrp	x0, 0 <_start>
    372c:	ldr	x1, [x1]
    3730:	ldr	x0, [x0]
    3734:	str	wzr, [x1]
    3738:	bl	ada8 <grub_err_printf>
    373c:	mov	x0, x25
    3740:	bl	5828 <grub_free>
    3744:	ldp	x25, x26, [sp, #176]
    3748:	b	2f18 <grub_efi_print_device_path+0x98>
    374c:	lsr	w9, w2, #12
    3750:	ubfx	x4, x2, #6, #6
    3754:	and	w2, w2, #0x3f
    3758:	mov	x0, x3
    375c:	orr	w9, w9, #0xffffffe0
    3760:	orr	w3, w4, #0xffffff80
    3764:	orr	w2, w2, #0xffffff80
    3768:	add	x1, x1, #0x3
    376c:	sturb	w9, [x1, #-3]
    3770:	sturb	w3, [x1, #-2]
    3774:	sturb	w2, [x1, #-1]
    3778:	b	34e0 <grub_efi_print_device_path+0x660>
    377c:	nop
	...

00000000000038d0 <grub_efi_compare_device_paths>:
    38d0:	cmp	x0, #0x0
    38d4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    38d8:	b.eq	3994 <grub_efi_compare_device_paths+0xc4>  // b.none
    38dc:	stp	x29, x30, [sp, #-48]!
    38e0:	mov	x29, sp
    38e4:	stp	x19, x20, [sp, #16]
    38e8:	mov	x19, x0
    38ec:	mov	x20, x1
    38f0:	ldrb	w0, [x0]
    38f4:	ldrb	w2, [x1]
    38f8:	and	w0, w0, #0x7f
    38fc:	and	w2, w2, #0x7f
    3900:	cmp	w0, w2
    3904:	b.ne	39a0 <grub_efi_compare_device_paths+0xd0>  // b.any
    3908:	str	x21, [sp, #32]
    390c:	b	392c <grub_efi_compare_device_paths+0x5c>
    3910:	add	x19, x19, x21
    3914:	ldrb	w2, [x20]
    3918:	and	w2, w2, #0x7f
    391c:	ldrb	w0, [x19]
    3920:	and	w0, w0, #0x7f
    3924:	cmp	w0, w2
    3928:	b.ne	399c <grub_efi_compare_device_paths+0xcc>  // b.any
    392c:	ldrb	w3, [x19, #1]
    3930:	mov	x1, x20
    3934:	ldrb	w2, [x20, #1]
    3938:	mov	x0, x19
    393c:	cmp	w3, w2
    3940:	b.ne	39b0 <grub_efi_compare_device_paths+0xe0>  // b.any
    3944:	ldrh	w3, [x19, #2]
    3948:	ldrh	w4, [x20, #2]
    394c:	and	x21, x3, #0xffff
    3950:	add	x20, x20, x21
    3954:	mov	x2, x21
    3958:	cmp	w3, w4
    395c:	b.ne	39c4 <grub_efi_compare_device_paths+0xf4>  // b.any
    3960:	bl	9b28 <grub_memcmp>
    3964:	cbnz	w0, 3984 <grub_efi_compare_device_paths+0xb4>
    3968:	ldrb	w1, [x19]
    396c:	and	w1, w1, #0x7f
    3970:	cmp	w1, #0x7f
    3974:	b.ne	3910 <grub_efi_compare_device_paths+0x40>  // b.any
    3978:	ldrb	w1, [x19, #1]
    397c:	cmp	w1, #0xff
    3980:	b.ne	3910 <grub_efi_compare_device_paths+0x40>  // b.any
    3984:	ldp	x19, x20, [sp, #16]
    3988:	ldr	x21, [sp, #32]
    398c:	ldp	x29, x30, [sp], #48
    3990:	ret
    3994:	mov	w0, #0x1                   	// #1
    3998:	ret
    399c:	ldr	x21, [sp, #32]
    39a0:	sub	w0, w2, w0
    39a4:	ldp	x19, x20, [sp, #16]
    39a8:	ldp	x29, x30, [sp], #48
    39ac:	ret
    39b0:	sub	w0, w3, w2
    39b4:	ldp	x19, x20, [sp, #16]
    39b8:	ldr	x21, [sp, #32]
    39bc:	ldp	x29, x30, [sp], #48
    39c0:	ret
    39c4:	sub	w0, w3, w4
    39c8:	ldp	x19, x20, [sp, #16]
    39cc:	ldr	x21, [sp, #32]
    39d0:	ldp	x29, x30, [sp], #48
    39d4:	ret

00000000000039d8 <grub_efi_init>:
    39d8:	stp	x29, x30, [sp, #-16]!
    39dc:	mov	x29, sp
    39e0:	bl	2840 <grub_efi_modules_addr>
    39e4:	adrp	x1, 0 <_start>
    39e8:	ldr	x1, [x1]
    39ec:	str	x0, [x1]
    39f0:	bl	4d10 <grub_console_init>
    39f4:	bl	4198 <grub_efi_mm_init>
    39f8:	adrp	x0, 0 <_start>
    39fc:	mov	x3, #0x0                   	// #0
    3a00:	mov	x2, #0x0                   	// #0
    3a04:	mov	x1, #0x0                   	// #0
    3a08:	ldr	x4, [x0]
    3a0c:	mov	x0, #0x0                   	// #0
    3a10:	ldr	x4, [x4]
    3a14:	ldr	x4, [x4, #96]
    3a18:	ldr	x4, [x4, #256]
    3a1c:	blr	x4
    3a20:	ldp	x29, x30, [sp], #16
    3a24:	b	1630 <grub_efidisk_init>
	...

0000000000003a38 <grub_machine_get_bootlocation>:
    3a38:	stp	x29, x30, [sp, #-48]!
    3a3c:	adrp	x2, 0 <_start>
    3a40:	mov	x29, sp
    3a44:	ldr	x3, [x2]
    3a48:	str	x21, [sp, #32]
    3a4c:	mov	x21, x0
    3a50:	stp	x19, x20, [sp, #16]
    3a54:	mov	x20, x1
    3a58:	ldr	x0, [x3]
    3a5c:	bl	21a8 <grub_efi_get_loaded_image>
    3a60:	cbz	x0, 3a98 <grub_machine_get_bootlocation+0x60>
    3a64:	mov	x19, x0
    3a68:	ldr	x0, [x0, #24]
    3a6c:	bl	1a58 <grub_efidisk_get_device_name>
    3a70:	str	x0, [x21]
    3a74:	cbz	x0, 3aa8 <grub_machine_get_bootlocation+0x70>
    3a78:	ldr	x0, [x19, #32]
    3a7c:	bl	2978 <grub_efi_get_filename>
    3a80:	str	x0, [x20]
    3a84:	cbz	x0, 3a98 <grub_machine_get_bootlocation+0x60>
    3a88:	mov	w1, #0x2f                  	// #47
    3a8c:	bl	9c20 <grub_strrchr>
    3a90:	cbz	x0, 3a98 <grub_machine_get_bootlocation+0x60>
    3a94:	strb	wzr, [x0]
    3a98:	ldp	x19, x20, [sp, #16]
    3a9c:	ldr	x21, [sp, #32]
    3aa0:	ldp	x29, x30, [sp], #48
    3aa4:	ret
    3aa8:	adrp	x0, 0 <_start>
    3aac:	ldr	x0, [x0]
    3ab0:	ldr	x3, [x0]
    3ab4:	cbz	x3, 3a78 <grub_machine_get_bootlocation+0x40>
    3ab8:	mov	x2, x20
    3abc:	mov	x1, x21
    3ac0:	ldr	x0, [x19, #24]
    3ac4:	mov	x16, x3
    3ac8:	ldp	x19, x20, [sp, #16]
    3acc:	ldr	x21, [sp, #32]
    3ad0:	ldp	x29, x30, [sp], #48
    3ad4:	br	x16
	...

0000000000003ae8 <grub_efi_fini>:
    3ae8:	stp	x29, x30, [sp, #-16]!
    3aec:	mov	x29, sp
    3af0:	bl	980 <grub_efidisk_fini>
    3af4:	bl	4e28 <grub_console_fini>
    3af8:	ldp	x29, x30, [sp], #16
    3afc:	b	4150 <grub_efi_memory_fini>

0000000000003b00 <grub_efi_free_pages>:
    3b00:	stp	x29, x30, [sp, #-48]!
    3b04:	adrp	x2, 0 <_start>
    3b08:	mov	x29, sp
    3b0c:	str	x21, [sp, #32]
    3b10:	ldr	x21, [x2]
    3b14:	stp	x19, x20, [sp, #16]
    3b18:	mov	x19, x0
    3b1c:	mov	x20, x1
    3b20:	ldr	x2, [x21]
    3b24:	ldr	x2, [x2, #96]
    3b28:	ldr	x2, [x2, #48]
    3b2c:	blr	x2
    3b30:	adrp	x0, 0 <_start>
    3b34:	ldr	x3, [x0]
    3b38:	ldr	x0, [x3]
    3b3c:	cbz	x0, 3b98 <grub_efi_free_pages+0x98>
    3b40:	mov	x1, #0x0                   	// #0
    3b44:	ldr	x2, [x0]
    3b48:	cmp	x19, x2
    3b4c:	b.ne	3b88 <grub_efi_free_pages+0x88>  // b.any
    3b50:	ldr	x2, [x0, #8]
    3b54:	cmp	x20, x2
    3b58:	b.ne	3b88 <grub_efi_free_pages+0x88>  // b.any
    3b5c:	ldr	x2, [x21]
    3b60:	ldr	x4, [x0, #16]
    3b64:	ldr	x2, [x2, #96]
    3b68:	cbz	x1, 3ba8 <grub_efi_free_pages+0xa8>
    3b6c:	str	x4, [x1, #16]
    3b70:	ldp	x19, x20, [sp, #16]
    3b74:	ldr	x21, [sp, #32]
    3b78:	ldp	x29, x30, [sp], #48
    3b7c:	ldr	x1, [x2, #72]
    3b80:	mov	x16, x1
    3b84:	br	x16
    3b88:	ldr	x2, [x0, #16]
    3b8c:	mov	x1, x0
    3b90:	mov	x0, x2
    3b94:	cbnz	x2, 3b44 <grub_efi_free_pages+0x44>
    3b98:	ldp	x19, x20, [sp, #16]
    3b9c:	ldr	x21, [sp, #32]
    3ba0:	ldp	x29, x30, [sp], #48
    3ba4:	ret
    3ba8:	str	x4, [x3]
    3bac:	ldp	x19, x20, [sp, #16]
    3bb0:	ldr	x21, [sp, #32]
    3bb4:	ldp	x29, x30, [sp], #48
    3bb8:	ldr	x1, [x2, #72]
    3bbc:	mov	x16, x1
    3bc0:	br	x16
    3bc4:	nop
	...

0000000000003bd8 <grub_efi_allocate_pages_real>:
    3bd8:	stp	x29, x30, [sp, #-112]!
    3bdc:	mov	x29, sp
    3be0:	stp	x21, x22, [sp, #32]
    3be4:	mov	x22, #0xffffffffffff        	// #281474976710655
    3be8:	cmp	x0, x22
    3bec:	str	x0, [sp, #88]
    3bf0:	b.hi	3cd8 <grub_efi_allocate_pages_real+0x100>  // b.pmore
    3bf4:	adrp	x0, 0 <_start>
    3bf8:	stp	x23, x24, [sp, #48]
    3bfc:	mov	w21, w3
    3c00:	ldr	x23, [x0]
    3c04:	stp	x19, x20, [sp, #16]
    3c08:	mov	w20, w2
    3c0c:	mov	x19, x1
    3c10:	mov	x2, x1
    3c14:	ldr	x4, [x23]
    3c18:	str	x25, [sp, #64]
    3c1c:	add	x3, sp, #0x58
    3c20:	mov	w1, w21
    3c24:	mov	w0, w20
    3c28:	ldr	x25, [x4, #96]
    3c2c:	ldr	x4, [x25, #40]
    3c30:	blr	x4
    3c34:	cbnz	x0, 3ccc <grub_efi_allocate_pages_real+0xf4>
    3c38:	ldr	x24, [sp, #88]
    3c3c:	cbnz	x24, 3c74 <grub_efi_allocate_pages_real+0x9c>
    3c40:	ldr	x4, [x25, #40]
    3c44:	add	x3, sp, #0x58
    3c48:	mov	x2, x19
    3c4c:	str	x22, [sp, #88]
    3c50:	mov	w1, w21
    3c54:	mov	w0, w20
    3c58:	blr	x4
    3c5c:	mov	x20, x0
    3c60:	mov	x1, x19
    3c64:	mov	x0, #0x0                   	// #0
    3c68:	bl	3b00 <grub_efi_free_pages>
    3c6c:	cbnz	x20, 3ccc <grub_efi_allocate_pages_real+0xf4>
    3c70:	ldr	x24, [sp, #88]
    3c74:	add	x2, sp, #0x68
    3c78:	ldr	x3, [x23]
    3c7c:	mov	x1, #0x18                  	// #24
    3c80:	mov	w0, #0x2                   	// #2
    3c84:	ldr	x3, [x3, #96]
    3c88:	ldr	x3, [x3, #64]
    3c8c:	blr	x3
    3c90:	cbnz	x0, 3ce8 <grub_efi_allocate_pages_real+0x110>
    3c94:	adrp	x1, 0 <_start>
    3c98:	ldr	x0, [sp, #104]
    3c9c:	ldr	x1, [x1]
    3ca0:	stp	x24, x19, [x0]
    3ca4:	ldr	x2, [x1]
    3ca8:	str	x0, [x1]
    3cac:	str	x2, [x0, #16]
    3cb0:	ldp	x19, x20, [sp, #16]
    3cb4:	ldp	x21, x22, [sp, #32]
    3cb8:	ldp	x23, x24, [sp, #48]
    3cbc:	ldr	x25, [sp, #64]
    3cc0:	ldr	x0, [sp, #88]
    3cc4:	ldp	x29, x30, [sp], #112
    3cc8:	ret
    3ccc:	ldp	x19, x20, [sp, #16]
    3cd0:	ldp	x23, x24, [sp, #48]
    3cd4:	ldr	x25, [sp, #64]
    3cd8:	mov	x0, #0x0                   	// #0
    3cdc:	ldp	x21, x22, [sp, #32]
    3ce0:	ldp	x29, x30, [sp], #112
    3ce4:	ret
    3ce8:	adrp	x0, 0 <_start>
    3cec:	ldr	x0, [x0]
    3cf0:	bl	ada8 <grub_err_printf>
    3cf4:	b	3cb0 <grub_efi_allocate_pages_real+0xd8>
	...

0000000000003d10 <grub_efi_allocate_any_pages>:
    3d10:	mov	x1, x0
    3d14:	mov	w3, #0x2                   	// #2
    3d18:	mov	w2, #0x1                   	// #1
    3d1c:	mov	x0, #0xffffffffffff        	// #281474976710655
    3d20:	b	3bd8 <grub_efi_allocate_pages_real>
    3d24:	nop

0000000000003d28 <grub_efi_allocate_fixed>:
    3d28:	mov	w3, #0x2                   	// #2
    3d2c:	mov	w2, w3
    3d30:	b	3bd8 <grub_efi_allocate_pages_real>
    3d34:	nop

0000000000003d38 <grub_efi_get_memory_map>:
    3d38:	stp	x29, x30, [sp, #-96]!
    3d3c:	adrp	x5, 0 <_start>
    3d40:	mov	x29, sp
    3d44:	stp	x21, x22, [sp, #32]
    3d48:	mov	x21, x2
    3d4c:	ldr	x22, [x5]
    3d50:	stp	x19, x20, [sp, #16]
    3d54:	mov	x19, x3
    3d58:	mov	x20, x4
    3d5c:	ldr	w2, [x22, #8]
    3d60:	cbnz	w2, 3de8 <grub_efi_get_memory_map+0xb0>
    3d64:	adrp	x3, 0 <_start>
    3d68:	cmp	x21, #0x0
    3d6c:	add	x2, sp, #0x50
    3d70:	add	x4, sp, #0x4c
    3d74:	ldr	x3, [x3]
    3d78:	csel	x21, x2, x21, eq  // eq = none
    3d7c:	cmp	x20, #0x0
    3d80:	add	x2, sp, #0x58
    3d84:	csel	x20, x4, x20, eq  // eq = none
    3d88:	cmp	x19, #0x0
    3d8c:	ldr	x5, [x3]
    3d90:	csel	x19, x2, x19, eq  // eq = none
    3d94:	mov	x4, x20
    3d98:	mov	x2, x21
    3d9c:	mov	x3, x19
    3da0:	ldr	x5, [x5, #96]
    3da4:	ldr	x5, [x5, #56]
    3da8:	blr	x5
    3dac:	mov	x1, x0
    3db0:	ldr	x2, [x19]
    3db4:	cbnz	x2, 3dc0 <grub_efi_get_memory_map+0x88>
    3db8:	mov	x0, #0x28                  	// #40
    3dbc:	str	x0, [x19]
    3dc0:	mov	w0, #0x1                   	// #1
    3dc4:	cbz	x1, 3dd8 <grub_efi_get_memory_map+0xa0>
    3dc8:	mov	x0, #0x5                   	// #5
    3dcc:	movk	x0, #0x8000, lsl #48
    3dd0:	cmp	x1, x0
    3dd4:	csetm	w0, ne  // ne = any
    3dd8:	ldp	x19, x20, [sp, #16]
    3ddc:	ldp	x21, x22, [sp, #32]
    3de0:	ldp	x29, x30, [sp], #96
    3de4:	ret
    3de8:	mov	x3, x1
    3dec:	ldr	x1, [x22, #24]
    3df0:	str	x23, [sp, #48]
    3df4:	mov	x23, x0
    3df8:	ldr	x0, [x22, #16]
    3dfc:	ldr	x2, [x23]
    3e00:	cmp	x2, x0
    3e04:	b.cc	3e58 <grub_efi_get_memory_map+0x120>  // b.lo, b.ul, b.last
    3e08:	mov	x2, x0
    3e0c:	mov	x0, x3
    3e10:	bl	9a40 <grub_memmove>
    3e14:	mov	w0, #0x1                   	// #1
    3e18:	ldr	x1, [x22, #16]
    3e1c:	str	x1, [x23]
    3e20:	cbz	x21, 3e2c <grub_efi_get_memory_map+0xf4>
    3e24:	ldr	x1, [x22, #32]
    3e28:	str	x1, [x21]
    3e2c:	cbz	x19, 3e38 <grub_efi_get_memory_map+0x100>
    3e30:	ldr	x1, [x22, #40]
    3e34:	str	x1, [x19]
    3e38:	cbz	x20, 3e68 <grub_efi_get_memory_map+0x130>
    3e3c:	ldr	w1, [x22, #48]
    3e40:	ldr	x23, [sp, #48]
    3e44:	str	w1, [x20]
    3e48:	ldp	x19, x20, [sp, #16]
    3e4c:	ldp	x21, x22, [sp, #32]
    3e50:	ldp	x29, x30, [sp], #96
    3e54:	ret
    3e58:	mov	x0, x3
    3e5c:	bl	9a40 <grub_memmove>
    3e60:	mov	w0, #0x0                   	// #0
    3e64:	b	3e18 <grub_efi_get_memory_map+0xe0>
    3e68:	ldp	x19, x20, [sp, #16]
    3e6c:	ldp	x21, x22, [sp, #32]
    3e70:	ldr	x23, [sp, #48]
    3e74:	ldp	x29, x30, [sp], #96
    3e78:	ret
    3e7c:	nop
	...

0000000000003e90 <grub_efi_finish_boot_services>:
    3e90:	stp	x29, x30, [sp, #-112]!
    3e94:	adrp	x5, 0 <_start>
    3e98:	mov	x29, sp
    3e9c:	stp	x19, x20, [sp, #16]
    3ea0:	ldr	x19, [x5]
    3ea4:	stp	x25, x26, [sp, #64]
    3ea8:	mov	x26, #0x2                   	// #2
    3eac:	mov	x25, x0
    3eb0:	add	x20, x19, #0x10
    3eb4:	movk	x26, #0x8000, lsl #48
    3eb8:	stp	x21, x22, [sp, #32]
    3ebc:	add	x22, x19, #0x28
    3ec0:	add	x21, x19, #0x20
    3ec4:	stp	x23, x24, [sp, #48]
    3ec8:	mov	x24, x1
    3ecc:	add	x23, x19, #0x30
    3ed0:	stp	x27, x28, [sp, #80]
    3ed4:	mov	x28, x2
    3ed8:	mov	x27, x3
    3edc:	str	x4, [sp, #104]
    3ee0:	b	3f6c <grub_efi_finish_boot_services+0xdc>
    3ee4:	ldr	x0, [x19, #16]
    3ee8:	cbz	x24, 3ef8 <grub_efi_finish_boot_services+0x68>
    3eec:	ldr	x1, [x25]
    3ef0:	cmp	x1, x0
    3ef4:	b.cc	407c <grub_efi_finish_boot_services+0x1ec>  // b.lo, b.ul, b.last
    3ef8:	bl	57d8 <grub_malloc>
    3efc:	mov	x1, x0
    3f00:	str	x1, [x19, #24]
    3f04:	mov	x4, x23
    3f08:	mov	x3, x22
    3f0c:	mov	x2, x21
    3f10:	mov	x0, x20
    3f14:	cbz	x1, 3fb0 <grub_efi_finish_boot_services+0x120>
    3f18:	bl	3d38 <grub_efi_get_memory_map>
    3f1c:	cmp	w0, #0x0
    3f20:	adrp	x2, 0 <_start>
    3f24:	adrp	x1, 0 <_start>
    3f28:	b.le	3fd8 <grub_efi_finish_boot_services+0x148>
    3f2c:	ldr	x2, [x2]
    3f30:	ldr	x0, [x1]
    3f34:	ldr	x1, [x2]
    3f38:	ldr	x0, [x0]
    3f3c:	ldr	x2, [x1, #96]
    3f40:	ldr	x1, [x19, #32]
    3f44:	ldr	x2, [x2, #232]
    3f48:	blr	x2
    3f4c:	cbz	x0, 3fe4 <grub_efi_finish_boot_services+0x154>
    3f50:	cmp	x0, x26
    3f54:	ldr	x0, [x19, #24]
    3f58:	b.ne	4050 <grub_efi_finish_boot_services+0x1c0>  // b.any
    3f5c:	bl	5828 <grub_free>
    3f60:	adrp	x0, 0 <_start>
    3f64:	ldr	x0, [x0]
    3f68:	bl	ada8 <grub_err_printf>
    3f6c:	ldr	x1, [x19, #24]
    3f70:	mov	x4, x23
    3f74:	mov	x3, x22
    3f78:	mov	x2, x21
    3f7c:	mov	x0, x20
    3f80:	bl	3d38 <grub_efi_get_memory_map>
    3f84:	tbz	w0, #31, 3ee4 <grub_efi_finish_boot_services+0x54>
    3f88:	adrp	x1, 0 <_start>
    3f8c:	mov	w0, #0x1d                  	// #29
    3f90:	ldp	x19, x20, [sp, #16]
    3f94:	ldr	x1, [x1]
    3f98:	ldp	x21, x22, [sp, #32]
    3f9c:	ldp	x23, x24, [sp, #48]
    3fa0:	ldp	x25, x26, [sp, #64]
    3fa4:	ldp	x27, x28, [sp, #80]
    3fa8:	ldp	x29, x30, [sp], #112
    3fac:	b	85c0 <grub_error>
    3fb0:	adrp	x0, 0 <_start>
    3fb4:	ldr	x0, [x0]
    3fb8:	ldr	w0, [x0]
    3fbc:	ldp	x19, x20, [sp, #16]
    3fc0:	ldp	x21, x22, [sp, #32]
    3fc4:	ldp	x23, x24, [sp, #48]
    3fc8:	ldp	x25, x26, [sp, #64]
    3fcc:	ldp	x27, x28, [sp, #80]
    3fd0:	ldp	x29, x30, [sp], #112
    3fd4:	ret
    3fd8:	ldr	x0, [x19, #24]
    3fdc:	bl	5828 <grub_free>
    3fe0:	b	3f88 <grub_efi_finish_boot_services+0xf8>
    3fe4:	mov	w0, #0x1                   	// #1
    3fe8:	str	w0, [x19, #8]
    3fec:	cbz	x25, 3ff8 <grub_efi_finish_boot_services+0x168>
    3ff0:	ldr	x0, [x19, #16]
    3ff4:	str	x0, [x25]
    3ff8:	cbz	x24, 4008 <grub_efi_finish_boot_services+0x178>
    3ffc:	ldp	x2, x1, [x19, #16]
    4000:	mov	x0, x24
    4004:	bl	9a40 <grub_memmove>
    4008:	cbz	x28, 4014 <grub_efi_finish_boot_services+0x184>
    400c:	ldr	x0, [x19, #32]
    4010:	str	x0, [x28]
    4014:	cbz	x27, 4020 <grub_efi_finish_boot_services+0x190>
    4018:	ldr	x0, [x19, #40]
    401c:	str	x0, [x27]
    4020:	ldr	x2, [sp, #104]
    4024:	mov	w0, #0x0                   	// #0
    4028:	cbz	x2, 3fbc <grub_efi_finish_boot_services+0x12c>
    402c:	ldr	w1, [x19, #48]
    4030:	str	w1, [x2]
    4034:	ldp	x19, x20, [sp, #16]
    4038:	ldp	x21, x22, [sp, #32]
    403c:	ldp	x23, x24, [sp, #48]
    4040:	ldp	x25, x26, [sp, #64]
    4044:	ldp	x27, x28, [sp, #80]
    4048:	ldp	x29, x30, [sp], #112
    404c:	ret
    4050:	bl	5828 <grub_free>
    4054:	adrp	x1, 0 <_start>
    4058:	mov	w0, #0x1d                  	// #29
    405c:	ldp	x19, x20, [sp, #16]
    4060:	ldr	x1, [x1]
    4064:	ldp	x21, x22, [sp, #32]
    4068:	ldp	x23, x24, [sp, #48]
    406c:	ldp	x25, x26, [sp, #64]
    4070:	ldp	x27, x28, [sp, #80]
    4074:	ldp	x29, x30, [sp], #112
    4078:	b	85c0 <grub_error>
    407c:	adrp	x1, 0 <_start>
    4080:	mov	w0, #0x1d                  	// #29
    4084:	ldp	x19, x20, [sp, #16]
    4088:	ldr	x1, [x1]
    408c:	ldp	x21, x22, [sp, #32]
    4090:	ldp	x23, x24, [sp, #48]
    4094:	ldp	x25, x26, [sp, #64]
    4098:	ldp	x27, x28, [sp, #80]
    409c:	ldp	x29, x30, [sp], #112
    40a0:	b	85c0 <grub_error>
    40a4:	nop
	...

00000000000040e8 <grub_efi_find_mmap_size>:
    40e8:	stp	x29, x30, [sp, #-32]!
    40ec:	mov	x4, #0x0                   	// #0
    40f0:	mov	x2, #0x0                   	// #0
    40f4:	mov	x29, sp
    40f8:	add	x3, sp, #0x18
    40fc:	add	x0, sp, #0x10
    4100:	mov	x1, #0x0                   	// #0
    4104:	str	xzr, [sp, #16]
    4108:	bl	3d38 <grub_efi_get_memory_map>
    410c:	tbnz	w0, #31, 4128 <grub_efi_find_mmap_size+0x40>
    4110:	ldr	x0, [sp, #16]
    4114:	mov	x1, #0x1fff                	// #8191
    4118:	ldp	x29, x30, [sp], #32
    411c:	add	x0, x0, x1
    4120:	and	x0, x0, #0xfffffffffffff000
    4124:	ret
    4128:	adrp	x1, 0 <_start>
    412c:	mov	w0, #0x1d                  	// #29
    4130:	ldr	x1, [x1]
    4134:	bl	85c0 <grub_error>
    4138:	mov	x0, #0x0                   	// #0
    413c:	ldp	x29, x30, [sp], #32
    4140:	ret
    4144:	nop
	...

0000000000004150 <grub_efi_memory_fini>:
    4150:	stp	x29, x30, [sp, #-32]!
    4154:	adrp	x0, 0 <_start>
    4158:	mov	x29, sp
    415c:	str	x19, [sp, #16]
    4160:	ldr	x19, [x0]
    4164:	ldr	x1, [x19]
    4168:	cbz	x1, 4180 <grub_efi_memory_fini+0x30>
    416c:	nop
    4170:	ldp	x0, x1, [x1]
    4174:	bl	3b00 <grub_efi_free_pages>
    4178:	ldr	x1, [x19]
    417c:	cbnz	x1, 4170 <grub_efi_memory_fini+0x20>
    4180:	ldr	x19, [sp, #16]
    4184:	ldp	x29, x30, [sp], #32
    4188:	ret
    418c:	nop
	...

0000000000004198 <grub_efi_mm_init>:
    4198:	stp	x29, x30, [sp, #-160]!
    419c:	mov	w3, #0x2                   	// #2
    41a0:	mov	w2, #0x1                   	// #1
    41a4:	mov	x29, sp
    41a8:	mov	x1, #0x6                   	// #6
    41ac:	mov	x0, #0xffffffffffff        	// #281474976710655
    41b0:	stp	x19, x20, [sp, #16]
    41b4:	stp	x21, x22, [sp, #32]
    41b8:	stp	x23, x24, [sp, #48]
    41bc:	stp	x25, x26, [sp, #64]
    41c0:	stp	x27, x28, [sp, #80]
    41c4:	bl	3bd8 <grub_efi_allocate_pages_real>
    41c8:	cbz	x0, 44bc <grub_efi_mm_init+0x324>
    41cc:	mov	x5, #0x3000                	// #12288
    41d0:	mov	x22, x0
    41d4:	add	x3, sp, #0x70
    41d8:	add	x0, sp, #0x68
    41dc:	mov	x1, x22
    41e0:	mov	x4, #0x0                   	// #0
    41e4:	mov	x2, #0x0                   	// #0
    41e8:	str	x5, [sp, #104]
    41ec:	bl	3d38 <grub_efi_get_memory_map>
    41f0:	cbz	w0, 4464 <grub_efi_mm_init+0x2cc>
    41f4:	tbnz	w0, #31, 44d0 <grub_efi_mm_init+0x338>
    41f8:	ldp	x23, x20, [sp, #104]
    41fc:	add	x23, x22, x23
    4200:	cmp	x22, x23
    4204:	b.cs	4428 <grub_efi_mm_init+0x290>  // b.hs, b.nlast
    4208:	mov	x28, #0xfff                 	// #4095
    420c:	mov	x25, x23
    4210:	mov	x19, x22
    4214:	mov	x21, #0xffffffffffff        	// #281474976710655
    4218:	mov	x26, #0xfffff               	// #1048575
    421c:	mov	x24, #0xfffffffff           	// #68719476735
    4220:	movk	x28, #0x10, lsl #16
    4224:	mov	x27, #0x100000              	// #1048576
    4228:	b	4238 <grub_efi_mm_init+0xa0>
    422c:	add	x19, x19, x20
    4230:	cmp	x23, x19
    4234:	b.ls	42d0 <grub_efi_mm_init+0x138>  // b.plast
    4238:	ldr	w0, [x19]
    423c:	cmp	w0, #0x7
    4240:	b.ne	422c <grub_efi_mm_init+0x94>  // b.any
    4244:	ldr	x0, [x19, #8]
    4248:	cmp	x0, x21
    424c:	b.hi	422c <grub_efi_mm_init+0x94>  // b.pmore
    4250:	ldr	x1, [x19, #24]
    4254:	add	x0, x0, x1, lsl #12
    4258:	cmp	x0, #0x100, lsl #12
    425c:	ccmp	x1, #0x0, #0x4, hi  // hi = pmore
    4260:	b.eq	422c <grub_efi_mm_init+0x94>  // b.none
    4264:	mov	x2, x20
    4268:	mov	x1, x19
    426c:	mov	x0, x25
    4270:	bl	9a40 <grub_memmove>
    4274:	ldr	x0, [x19, #8]
    4278:	cmp	x0, x26
    427c:	b.hi	4294 <grub_efi_mm_init+0xfc>  // b.pmore
    4280:	ldr	x1, [x19, #24]
    4284:	sub	x0, x28, x0
    4288:	str	x27, [x19, #8]
    428c:	sub	x0, x1, x0, lsr #12
    4290:	str	x0, [x19, #24]
    4294:	ldr	x0, [x25, #8]
    4298:	ldr	x1, [x25, #24]
    429c:	add	x0, x0, #0xfff
    42a0:	lsr	x0, x0, #12
    42a4:	add	x2, x0, x1
    42a8:	cmp	x2, x24
    42ac:	b.ls	42b8 <grub_efi_mm_init+0x120>  // b.plast
    42b0:	sub	x1, x24, x0
    42b4:	str	x1, [x25, #24]
    42b8:	cmp	x1, #0x0
    42bc:	add	x0, x25, x20
    42c0:	add	x19, x19, x20
    42c4:	csel	x25, x0, x25, ne  // ne = any
    42c8:	cmp	x23, x19
    42cc:	b.hi	4238 <grub_efi_mm_init+0xa0>  // b.pmore
    42d0:	cmp	x23, x25
    42d4:	ldr	x24, [sp, #112]
    42d8:	b.cs	4428 <grub_efi_mm_init+0x290>  // b.hs, b.nlast
    42dc:	mov	x1, x23
    42e0:	mov	x19, #0x0                   	// #0
    42e4:	nop
    42e8:	ldr	x0, [x1, #24]
    42ec:	add	x1, x1, x24
    42f0:	cmp	x1, x25
    42f4:	add	x19, x19, x0
    42f8:	b.cc	42e8 <grub_efi_mm_init+0x150>  // b.lo, b.ul, b.last
    42fc:	lsr	x19, x19, #2
    4300:	mov	x1, #0x4000                	// #16384
    4304:	movk	x1, #0x6, lsl #16
    4308:	cmp	x19, x1
    430c:	csel	x19, x19, x1, ls  // ls = plast
    4310:	mov	x0, #0x100                 	// #256
    4314:	mov	x1, x23
    4318:	cmp	x19, x0
    431c:	csel	x19, x19, x0, cs  // cs = hs, nlast
    4320:	add	x0, x1, x24
    4324:	mov	x2, x23
    4328:	cmp	x25, x0
    432c:	b.ls	43b0 <grub_efi_mm_init+0x218>  // b.plast
    4330:	mov	x3, x0
    4334:	nop
    4338:	ldr	x5, [x1, #24]
    433c:	ldr	x4, [x3, #24]
    4340:	cmp	x5, x4
    4344:	csel	x1, x1, x3, cs  // cs = hs, nlast
    4348:	add	x3, x3, x24
    434c:	cmp	x25, x3
    4350:	b.hi	4338 <grub_efi_mm_init+0x1a0>  // b.pmore
    4354:	cmp	x1, x2
    4358:	b.eq	4398 <grub_efi_mm_init+0x200>  // b.none
    435c:	ldp	x4, x5, [x1]
    4360:	ldp	x8, x9, [x2]
    4364:	stp	x4, x5, [x2]
    4368:	ldp	x4, x5, [x1, #16]
    436c:	stp	x8, x9, [sp, #120]
    4370:	ldp	x6, x7, [x2, #16]
    4374:	stp	x4, x5, [x2, #16]
    4378:	ldr	x4, [x1, #32]
    437c:	stp	x6, x7, [sp, #136]
    4380:	ldr	x3, [x2, #32]
    4384:	str	x4, [x2, #32]
    4388:	stp	x8, x9, [x1]
    438c:	stp	x6, x7, [x1, #16]
    4390:	str	x3, [x1, #32]
    4394:	str	x3, [sp, #152]
    4398:	mov	x1, x0
    439c:	add	x2, x2, x24
    43a0:	add	x0, x1, x24
    43a4:	cmp	x25, x0
    43a8:	b.hi	4330 <grub_efi_mm_init+0x198>  // b.pmore
    43ac:	nop
    43b0:	ldr	x20, [x23, #24]
    43b4:	ldr	x21, [x23, #8]
    43b8:	cmp	x19, x20
    43bc:	b.cs	43f4 <grub_efi_mm_init+0x25c>  // b.hs, b.nlast
    43c0:	sub	x20, x20, x19
    43c4:	mov	x1, x19
    43c8:	mov	w3, #0x1                   	// #1
    43cc:	mov	w2, #0x2                   	// #2
    43d0:	add	x21, x21, x20, lsl #12
    43d4:	mov	x0, x21
    43d8:	bl	3bd8 <grub_efi_allocate_pages_real>
    43dc:	cbnz	x0, 4434 <grub_efi_mm_init+0x29c>
    43e0:	adrp	x0, 0 <_start>
    43e4:	mov	w2, w19
    43e8:	mov	x1, x21
    43ec:	ldr	x0, [x0]
    43f0:	bl	b188 <grub_fatal>
    43f4:	mov	x1, x20
    43f8:	mov	x0, x21
    43fc:	mov	w3, #0x1                   	// #1
    4400:	mov	w2, #0x2                   	// #2
    4404:	bl	3bd8 <grub_efi_allocate_pages_real>
    4408:	cbz	x0, 44c8 <grub_efi_mm_init+0x330>
    440c:	lsl	x1, x20, #12
    4410:	bl	5420 <grub_mm_init_region>
    4414:	subs	x19, x19, x20
    4418:	b.eq	443c <grub_efi_mm_init+0x2a4>  // b.none
    441c:	add	x23, x23, x24
    4420:	cmp	x25, x23
    4424:	b.hi	43b0 <grub_efi_mm_init+0x218>  // b.pmore
    4428:	adrp	x0, 0 <_start>
    442c:	ldr	x0, [x0]
    4430:	bl	b188 <grub_fatal>
    4434:	lsl	x1, x19, #12
    4438:	bl	5420 <grub_mm_init_region>
    443c:	mov	x0, x22
    4440:	mov	x1, #0x6                   	// #6
    4444:	bl	3b00 <grub_efi_free_pages>
    4448:	ldp	x19, x20, [sp, #16]
    444c:	ldp	x21, x22, [sp, #32]
    4450:	ldp	x23, x24, [sp, #48]
    4454:	ldp	x25, x26, [sp, #64]
    4458:	ldp	x27, x28, [sp, #80]
    445c:	ldp	x29, x30, [sp], #160
    4460:	ret
    4464:	mov	x0, x22
    4468:	mov	x1, #0x6                   	// #6
    446c:	bl	3b00 <grub_efi_free_pages>
    4470:	ldp	x4, x1, [sp, #104]
    4474:	mov	w3, #0x2                   	// #2
    4478:	mov	w2, #0x1                   	// #1
    447c:	mov	x0, #0xffffffffffff        	// #281474976710655
    4480:	add	x1, x4, x1, lsl #5
    4484:	str	x1, [sp, #104]
    4488:	add	x1, x1, #0xfff
    448c:	lsr	x1, x1, #12
    4490:	lsl	x1, x1, #1
    4494:	bl	3bd8 <grub_efi_allocate_pages_real>
    4498:	mov	x22, x0
    449c:	cbz	x0, 44bc <grub_efi_mm_init+0x324>
    44a0:	add	x3, sp, #0x70
    44a4:	add	x0, sp, #0x68
    44a8:	mov	x1, x22
    44ac:	mov	x4, #0x0                   	// #0
    44b0:	mov	x2, #0x0                   	// #0
    44b4:	bl	3d38 <grub_efi_get_memory_map>
    44b8:	b	41f4 <grub_efi_mm_init+0x5c>
    44bc:	adrp	x0, 0 <_start>
    44c0:	ldr	x0, [x0]
    44c4:	bl	b188 <grub_fatal>
    44c8:	mov	x19, x20
    44cc:	b	43e0 <grub_efi_mm_init+0x248>
    44d0:	adrp	x0, 0 <_start>
    44d4:	ldr	x0, [x0]
    44d8:	bl	b188 <grub_fatal>
    44dc:	nop
	...

0000000000004500 <grub_efi_get_ram_base>:
    4500:	stp	x29, x30, [sp, #-48]!
    4504:	mov	x29, sp
    4508:	stp	x19, x20, [sp, #16]
    450c:	mov	x19, x0
    4510:	bl	40e8 <grub_efi_find_mmap_size>
    4514:	str	x0, [sp, #32]
    4518:	bl	57d8 <grub_malloc>
    451c:	cbz	x0, 45a8 <grub_efi_get_ram_base+0xa8>
    4520:	mov	x1, x0
    4524:	mov	x20, x0
    4528:	add	x3, sp, #0x28
    452c:	add	x0, sp, #0x20
    4530:	mov	x4, #0x0                   	// #0
    4534:	mov	x2, #0x0                   	// #0
    4538:	bl	3d38 <grub_efi_get_memory_map>
    453c:	cmp	w0, #0x0
    4540:	b.le	45b8 <grub_efi_get_ram_base+0xb8>
    4544:	ldr	x5, [sp, #32]
    4548:	mov	x0, #0xffffffffffff        	// #281474976710655
    454c:	str	x0, [x19]
    4550:	add	x5, x20, x5
    4554:	cmp	x20, x5
    4558:	b.cs	4590 <grub_efi_get_ram_base+0x90>  // b.hs, b.nlast
    455c:	ldr	x0, [sp, #40]
    4560:	mov	x2, x20
    4564:	nop
    4568:	ldr	x3, [x2, #32]
    456c:	tbz	w3, #3, 4584 <grub_efi_get_ram_base+0x84>
    4570:	ldr	x4, [x19]
    4574:	ldr	x3, [x2, #8]
    4578:	cmp	x3, x4
    457c:	csel	x3, x3, x4, ls  // ls = plast
    4580:	str	x3, [x19]
    4584:	add	x2, x2, x0
    4588:	cmp	x2, x5
    458c:	b.cc	4568 <grub_efi_get_ram_base+0x68>  // b.lo, b.ul, b.last
    4590:	mov	x0, x20
    4594:	bl	5828 <grub_free>
    4598:	mov	w0, #0x0                   	// #0
    459c:	ldp	x19, x20, [sp, #16]
    45a0:	ldp	x29, x30, [sp], #48
    45a4:	ret
    45a8:	mov	w0, #0x3                   	// #3
    45ac:	ldp	x19, x20, [sp, #16]
    45b0:	ldp	x29, x30, [sp], #48
    45b4:	ret
    45b8:	mov	w0, #0x26                  	// #38
    45bc:	ldp	x19, x20, [sp, #16]
    45c0:	ldp	x29, x30, [sp], #48
    45c4:	ret
    45c8:	adrp	x0, 0 <_start>
    45cc:	ldr	x0, [x0]
    45d0:	ldr	w0, [x0]
    45d4:	cbnz	w0, 4748 <grub_efi_get_ram_base+0x248>
    45d8:	stp	x29, x30, [sp, #-96]!
    45dc:	adrp	x0, 0 <_start>
    45e0:	mov	x9, x1
    45e4:	mov	x29, sp
    45e8:	ldr	x0, [x0]
    45ec:	stp	x19, x20, [sp, #16]
    45f0:	ldr	w4, [x9]
    45f4:	ldrh	w11, [x1, #6]
    45f8:	mov	w1, #0xffff                	// #65535
    45fc:	ldr	x0, [x0]
    4600:	ubfx	x4, x4, #0, #23
    4604:	ubfx	x5, x11, #3, #8
    4608:	cmp	w4, w1
    460c:	ldr	x20, [x0, #64]
    4610:	b.ls	4690 <grub_efi_get_ram_base+0x190>  // b.plast
    4614:	mov	w0, #0x3f                  	// #63
    4618:	strh	w0, [sp, #32]
    461c:	cbz	w5, 47b4 <grub_efi_get_ram_base+0x2b4>
    4620:	add	x19, sp, #0x20
    4624:	and	w1, w11, #0x7f8
    4628:	add	x10, x9, #0x18
    462c:	mov	x3, #0x0                   	// #0
    4630:	mov	w0, #0x1                   	// #1
    4634:	mov	w2, #0x0                   	// #0
    4638:	mov	w6, #0x2                   	// #2
    463c:	mov	w8, #0xfffe                	// #65534
    4640:	b	467c <grub_efi_get_ram_base+0x17c>
    4644:	cmp	w5, #0x2
    4648:	mov	x7, x10
    464c:	b.ls	4654 <grub_efi_get_ram_base+0x154>  // b.plast
    4650:	ldr	x7, [x9, #24]
    4654:	ldr	w7, [x7, x3]
    4658:	strh	w7, [x19, w0, uxtw #1]
    465c:	mov	w0, w6
    4660:	add	w2, w2, #0x1
    4664:	add	w6, w0, #0x1
    4668:	cmp	w5, w2
    466c:	b.ls	46e0 <grub_efi_get_ram_base+0x1e0>  // b.plast
    4670:	cmp	w0, #0x1f
    4674:	add	x3, x3, #0x4
    4678:	b.eq	46e0 <grub_efi_get_ram_base+0x1e0>  // b.none
    467c:	cmp	w4, w8
    4680:	b.hi	4660 <grub_efi_get_ram_base+0x160>  // b.pmore
    4684:	cbnz	w1, 4644 <grub_efi_get_ram_base+0x144>
    4688:	mov	x7, #0x0                   	// #0
    468c:	b	4654 <grub_efi_get_ram_base+0x154>
    4690:	mov	w0, #0x2503                	// #9475
    4694:	cmp	w4, w0
    4698:	b.eq	47c0 <grub_efi_get_ram_base+0x2c0>  // b.none
    469c:	b.hi	4724 <grub_efi_get_ram_base+0x224>  // b.pmore
    46a0:	mov	w0, #0x2192                	// #8594
    46a4:	cmp	w4, w0
    46a8:	b.eq	47ac <grub_efi_get_ram_base+0x2ac>  // b.none
    46ac:	b.ls	474c <grub_efi_get_ram_base+0x24c>  // b.plast
    46b0:	mov	w0, #0x2193                	// #8595
    46b4:	cmp	w4, w0
    46b8:	b.eq	479c <grub_efi_get_ram_base+0x29c>  // b.none
    46bc:	mov	w1, #0x2501                	// #9473
    46c0:	mov	w0, #0x2500                	// #9472
    46c4:	cmp	w4, w1
    46c8:	b.eq	4618 <grub_efi_get_ram_base+0x118>  // b.none
    46cc:	nop
    46d0:	strh	w4, [sp, #32]
    46d4:	add	x19, sp, #0x20
    46d8:	mov	w0, #0x1                   	// #1
    46dc:	cbnz	w5, 4620 <grub_efi_get_ram_base+0x120>
    46e0:	strh	wzr, [x19, w0, uxtw #1]
    46e4:	cmp	w4, #0x7f
    46e8:	b.hi	46f4 <grub_efi_get_ram_base+0x1f4>  // b.pmore
    46ec:	tst	w11, #0x7f8
    46f0:	b.eq	4708 <grub_efi_get_ram_base+0x208>  // b.none
    46f4:	ldr	x2, [x20, #16]
    46f8:	mov	x1, x19
    46fc:	mov	x0, x20
    4700:	blr	x2
    4704:	cbnz	x0, 4718 <grub_efi_get_ram_base+0x218>
    4708:	ldr	x2, [x20, #8]
    470c:	mov	x1, x19
    4710:	mov	x0, x20
    4714:	blr	x2
    4718:	ldp	x19, x20, [sp, #16]
    471c:	ldp	x29, x30, [sp], #96
    4720:	ret
    4724:	mov	w0, #0x2517                	// #9495
    4728:	cmp	w4, w0
    472c:	b.eq	47a4 <grub_efi_get_ram_base+0x2a4>  // b.none
    4730:	b.ls	476c <grub_efi_get_ram_base+0x26c>  // b.plast
    4734:	mov	w1, #0x251b                	// #9499
    4738:	mov	w0, #0x2518                	// #9496
    473c:	cmp	w4, w1
    4740:	b.eq	4618 <grub_efi_get_ram_base+0x118>  // b.none
    4744:	b	46d0 <grub_efi_get_ram_base+0x1d0>
    4748:	ret
    474c:	mov	w0, #0x2190                	// #8592
    4750:	cmp	w4, w0
    4754:	b.eq	4794 <grub_efi_get_ram_base+0x294>  // b.none
    4758:	mov	w1, #0x2191                	// #8593
    475c:	mov	w0, #0x25b2                	// #9650
    4760:	cmp	w4, w1
    4764:	b.eq	4618 <grub_efi_get_ram_base+0x118>  // b.none
    4768:	b	46d0 <grub_efi_get_ram_base+0x1d0>
    476c:	mov	w0, #0x250f                	// #9487
    4770:	cmp	w4, w0
    4774:	b.eq	478c <grub_efi_get_ram_base+0x28c>  // b.none
    4778:	mov	w1, #0x2513                	// #9491
    477c:	mov	w0, #0x2510                	// #9488
    4780:	cmp	w4, w1
    4784:	b.eq	4618 <grub_efi_get_ram_base+0x118>  // b.none
    4788:	b	46d0 <grub_efi_get_ram_base+0x1d0>
    478c:	mov	w0, #0x250c                	// #9484
    4790:	b	4618 <grub_efi_get_ram_base+0x118>
    4794:	mov	w0, #0x25c4                	// #9668
    4798:	b	4618 <grub_efi_get_ram_base+0x118>
    479c:	mov	w0, #0x25bc                	// #9660
    47a0:	b	4618 <grub_efi_get_ram_base+0x118>
    47a4:	mov	w0, #0x2514                	// #9492
    47a8:	b	4618 <grub_efi_get_ram_base+0x118>
    47ac:	mov	w0, #0x25ba                	// #9658
    47b0:	b	4618 <grub_efi_get_ram_base+0x118>
    47b4:	add	x19, sp, #0x20
    47b8:	strh	wzr, [sp, #34]
    47bc:	b	46f4 <grub_efi_get_ram_base+0x1f4>
    47c0:	mov	w0, #0x2502                	// #9474
    47c4:	b	4618 <grub_efi_get_ram_base+0x118>
	...
    47d8:	ands	w1, w0, #0xffff
    47dc:	lsr	w0, w0, #16
    47e0:	b.ne	4810 <grub_efi_get_ram_base+0x310>  // b.any
    47e4:	sub	w1, w0, #0x1
    47e8:	sub	w2, w0, #0x8
    47ec:	and	w1, w1, #0xffff
    47f0:	and	w2, w2, #0xffff
    47f4:	cmp	w1, #0x1e
    47f8:	add	w1, w0, #0x60
    47fc:	ccmp	w2, #0x2, #0x0, ls  // ls = plast
    4800:	orr	w1, w1, #0x2000000
    4804:	ccmp	w0, #0xd, #0x4, hi  // hi = pmore
    4808:	csel	w0, w1, w0, ne  // ne = any
    480c:	ret
    4810:	cmp	w0, #0xd
    4814:	cset	w2, eq  // eq = none
    4818:	cmp	w2, #0x0
    481c:	ccmp	w1, #0xd, #0x0, ne  // ne = any
    4820:	b.eq	4860 <grub_efi_get_ram_base+0x360>  // b.none
    4824:	cmp	w1, #0x17
    4828:	b.ls	4850 <grub_efi_get_ram_base+0x350>  // b.plast
    482c:	sub	w3, w0, #0x20
    4830:	sub	w1, w0, #0x8
    4834:	and	w3, w3, #0xffff
    4838:	and	w1, w1, #0xffff
    483c:	cmp	w3, #0x5f
    4840:	ccmp	w1, #0x2, #0x0, hi  // hi = pmore
    4844:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
    4848:	csel	w0, w0, wzr, ne  // ne = any
    484c:	ret
    4850:	adrp	x0, 0 <_start>
    4854:	ldr	x0, [x0]
    4858:	ldr	w0, [x0, w1, sxtw #2]
    485c:	ret
    4860:	mov	w0, #0xd                   	// #13
    4864:	ret
	...
    4870:	adrp	x0, 0 <_start>
    4874:	ldr	x0, [x0]
    4878:	ldr	w0, [x0]
    487c:	cbz	w0, 4890 <grub_efi_get_ram_base+0x390>
    4880:	mov	w1, #0x19                  	// #25
    4884:	mov	w0, #0x50                  	// #80
    4888:	orr	w0, w0, w1, lsl #16
    488c:	ret
    4890:	stp	x29, x30, [sp, #-32]!
    4894:	adrp	x0, 0 <_start>
    4898:	mov	x29, sp
    489c:	ldr	x0, [x0]
    48a0:	add	x3, sp, #0x18
    48a4:	add	x2, sp, #0x10
    48a8:	ldr	x0, [x0]
    48ac:	ldr	x0, [x0, #64]
    48b0:	ldr	x1, [x0, #72]
    48b4:	ldr	x4, [x0, #24]
    48b8:	ldrsw	x1, [x1, #4]
    48bc:	blr	x4
    48c0:	cbz	x0, 48d8 <grub_efi_get_ram_base+0x3d8>
    48c4:	mov	w1, #0x19                  	// #25
    48c8:	mov	w0, #0x50                  	// #80
    48cc:	orr	w0, w0, w1, lsl #16
    48d0:	ldp	x29, x30, [sp], #32
    48d4:	ret
    48d8:	ldrh	w0, [sp, #16]
    48dc:	ldrh	w1, [sp, #24]
    48e0:	ldp	x29, x30, [sp], #32
    48e4:	orr	w0, w0, w1, lsl #16
    48e8:	ret
    48ec:	nop
	...
    4900:	adrp	x0, 0 <_start>
    4904:	ldr	x0, [x0]
    4908:	ldr	w0, [x0]
    490c:	cbnz	w0, 4934 <grub_efi_get_ram_base+0x434>
    4910:	adrp	x0, 0 <_start>
    4914:	lsr	w2, w1, #16
    4918:	and	x1, x1, #0xffff
    491c:	ldr	x0, [x0]
    4920:	ldr	x0, [x0]
    4924:	ldr	x0, [x0, #64]
    4928:	ldr	x3, [x0, #56]
    492c:	mov	x16, x3
    4930:	br	x16
    4934:	ret
	...
    4948:	stp	x29, x30, [sp, #-48]!
    494c:	adrp	x1, 0 <_start>
    4950:	mov	x3, #0x7534                	// #30004
    4954:	mov	x29, sp
    4958:	ldr	x1, [x1]
    495c:	mov	x2, #0x148c                	// #5260
    4960:	movk	x3, #0xdd9e, lsl #16
    4964:	movk	x2, #0x85f5, lsl #16
    4968:	str	x19, [sp, #16]
    496c:	mov	x19, x0
    4970:	ldr	w0, [x1]
    4974:	movk	x3, #0x7762, lsl #32
    4978:	movk	x2, #0xa617, lsl #32
    497c:	movk	x3, #0x4698, lsl #48
    4980:	movk	x2, #0xaa25, lsl #48
    4984:	stp	x3, x2, [sp, #32]
    4988:	cbnz	w0, 4994 <grub_efi_get_ram_base+0x494>
    498c:	ldr	x0, [x19, #56]
    4990:	cbz	x0, 49a4 <grub_efi_get_ram_base+0x4a4>
    4994:	mov	w0, #0x0                   	// #0
    4998:	ldr	x19, [sp, #16]
    499c:	ldp	x29, x30, [sp], #48
    49a0:	ret
    49a4:	adrp	x0, 0 <_start>
    49a8:	add	x1, sp, #0x20
    49ac:	mov	w2, #0x2                   	// #2
    49b0:	ldr	x0, [x0]
    49b4:	ldr	x0, [x0]
    49b8:	ldr	x0, [x0, #40]
    49bc:	bl	2060 <grub_efi_open_protocol>
    49c0:	str	x0, [x19, #56]
    49c4:	mov	w0, #0x0                   	// #0
    49c8:	ldr	x19, [sp, #16]
    49cc:	ldp	x29, x30, [sp], #48
    49d0:	ret
    49d4:	nop
	...
    49e8:	stp	x29, x30, [sp, #-48]!
    49ec:	adrp	x1, 0 <_start>
    49f0:	mov	x29, sp
    49f4:	ldr	x1, [x1]
    49f8:	str	x19, [sp, #16]
    49fc:	ldr	w19, [x1]
    4a00:	cbnz	w19, 4a40 <grub_efi_get_ram_base+0x540>
    4a04:	ldr	x0, [x0, #56]
    4a08:	cbz	x0, 4a54 <grub_efi_get_ram_base+0x554>
    4a0c:	ldr	x2, [x0, #8]
    4a10:	add	x1, sp, #0x20
    4a14:	blr	x2
    4a18:	cbnz	x0, 4a30 <grub_efi_get_ram_base+0x530>
    4a1c:	ldp	w0, w4, [sp, #32]
    4a20:	bl	47d8 <grub_efi_get_ram_base+0x2d8>
    4a24:	mov	w19, w0
    4a28:	cbz	w0, 4a30 <grub_efi_get_ram_base+0x530>
    4a2c:	tbnz	w4, #31, 4a90 <grub_efi_get_ram_base+0x590>
    4a30:	mov	w0, w19
    4a34:	ldr	x19, [sp, #16]
    4a38:	ldp	x29, x30, [sp], #48
    4a3c:	ret
    4a40:	mov	w19, #0x0                   	// #0
    4a44:	mov	w0, w19
    4a48:	ldr	x19, [sp, #16]
    4a4c:	ldp	x29, x30, [sp], #48
    4a50:	ret
    4a54:	adrp	x0, 0 <_start>
    4a58:	add	x1, sp, #0x20
    4a5c:	ldr	x0, [x0]
    4a60:	ldr	x0, [x0]
    4a64:	ldr	x0, [x0, #48]
    4a68:	ldr	x2, [x0, #8]
    4a6c:	blr	x2
    4a70:	cbnz	x0, 4a30 <grub_efi_get_ram_base+0x530>
    4a74:	ldr	w0, [sp, #32]
    4a78:	bl	47d8 <grub_efi_get_ram_base+0x2d8>
    4a7c:	mov	w19, w0
    4a80:	mov	w0, w19
    4a84:	ldr	x19, [sp, #16]
    4a88:	ldp	x29, x30, [sp], #48
    4a8c:	ret
    4a90:	tst	x4, #0x3
    4a94:	b.eq	4aa4 <grub_efi_get_ram_base+0x5a4>  // b.none
    4a98:	tst	x19, #0x800000
    4a9c:	orr	w0, w0, #0x1000000
    4aa0:	csel	w19, w0, w19, ne  // ne = any
    4aa4:	tst	w4, #0x30
    4aa8:	orr	w0, w19, #0x4000000
    4aac:	csel	w19, w0, w19, ne  // ne = any
    4ab0:	tst	w4, #0xc
    4ab4:	orr	w0, w19, #0x2000000
    4ab8:	csel	w19, w0, w19, ne  // ne = any
    4abc:	b	4a30 <grub_efi_get_ram_base+0x530>
	...
    4ad0:	adrp	x0, 0 <_start>
    4ad4:	ldr	x0, [x0]
    4ad8:	ldr	w0, [x0]
    4adc:	cbnz	w0, 4b0c <grub_efi_get_ram_base+0x60c>
    4ae0:	adrp	x1, 0 <_start>
    4ae4:	mov	w0, #0x0                   	// #0
    4ae8:	ldr	x1, [x1]
    4aec:	ldr	x1, [x1]
    4af0:	ldr	x1, [x1, #64]
    4af4:	ldr	x1, [x1, #72]
    4af8:	ldr	w2, [x1, #12]
    4afc:	ldrh	w1, [x1, #16]
    4b00:	bfxil	w0, w2, #0, #16
    4b04:	bfi	w0, w1, #16, #16
    4b08:	ret
    4b0c:	mov	w0, #0x0                   	// #0
    4b10:	ret
    4b14:	nop
	...
    4b28:	adrp	x0, 0 <_start>
    4b2c:	ldr	x0, [x0]
    4b30:	ldr	w0, [x0]
    4b34:	cbnz	w0, 4b94 <grub_efi_get_ram_base+0x694>
    4b38:	stp	x29, x30, [sp, #-32]!
    4b3c:	adrp	x0, 0 <_start>
    4b40:	mov	x1, #0x0                   	// #0
    4b44:	mov	x29, sp
    4b48:	ldr	x0, [x0]
    4b4c:	stp	x19, x20, [sp, #16]
    4b50:	ldr	x0, [x0]
    4b54:	ldr	x19, [x0, #64]
    4b58:	mov	x0, x19
    4b5c:	ldr	x2, [x19, #40]
    4b60:	ldr	x3, [x19, #72]
    4b64:	ldr	w20, [x3, #8]
    4b68:	blr	x2
    4b6c:	ldr	x1, [x19, #48]
    4b70:	mov	x0, x19
    4b74:	blr	x1
    4b78:	sxtw	x1, w20
    4b7c:	mov	x0, x19
    4b80:	ldr	x2, [x19, #40]
    4b84:	ldp	x19, x20, [sp, #16]
    4b88:	mov	x16, x2
    4b8c:	ldp	x29, x30, [sp], #32
    4b90:	br	x16
    4b94:	ret
	...
    4ba8:	adrp	x0, 0 <_start>
    4bac:	ldr	x0, [x0]
    4bb0:	ldr	w0, [x0]
    4bb4:	cbnz	w0, 4bdc <grub_efi_get_ram_base+0x6dc>
    4bb8:	adrp	x0, 0 <_start>
    4bbc:	cmp	w1, #0x1
    4bc0:	ldr	x0, [x0]
    4bc4:	ldr	x0, [x0]
    4bc8:	ldr	x0, [x0, #64]
    4bcc:	b.eq	4c0c <grub_efi_get_ram_base+0x70c>  // b.none
    4bd0:	cmp	w1, #0x2
    4bd4:	b.eq	4bf0 <grub_efi_get_ram_base+0x6f0>  // b.none
    4bd8:	cbz	w1, 4be0 <grub_efi_get_ram_base+0x6e0>
    4bdc:	ret
    4be0:	ldr	x2, [x0, #40]
    4be4:	mov	x1, #0x7                   	// #7
    4be8:	mov	x16, x2
    4bec:	br	x16
    4bf0:	adrp	x1, 0 <_start>
    4bf4:	ldr	x2, [x0, #40]
    4bf8:	ldr	x1, [x1]
    4bfc:	mov	x16, x2
    4c00:	ldrb	w1, [x1]
    4c04:	and	x1, x1, #0x7f
    4c08:	br	x16
    4c0c:	adrp	x1, 0 <_start>
    4c10:	ldr	x2, [x0, #40]
    4c14:	ldr	x1, [x1]
    4c18:	mov	x16, x2
    4c1c:	ldrb	w1, [x1]
    4c20:	and	x1, x1, #0x7f
    4c24:	br	x16
	...
    4c48:	adrp	x2, 0 <_start>
    4c4c:	mov	w1, w0
    4c50:	ldr	x0, [x2]
    4c54:	ldr	x0, [x0]
    4c58:	ldr	x0, [x0, #64]
    4c5c:	ldr	x2, [x0, #64]
    4c60:	mov	x16, x2
    4c64:	br	x16
	...
    4c70:	adrp	x2, 0 <_start>
    4c74:	mov	w0, w1
    4c78:	ldr	x1, [x2]
    4c7c:	ldr	w1, [x1]
    4c80:	cbnz	w1, 4c88 <grub_efi_get_ram_base+0x788>
    4c84:	b	4c48 <grub_efi_get_ram_base+0x748>
    4c88:	ret
    4c8c:	nop
	...
    4c98:	stp	x29, x30, [sp, #-16]!
    4c9c:	adrp	x0, 0 <_start>
    4ca0:	mov	x29, sp
    4ca4:	ldr	x0, [x0]
    4ca8:	ldr	w0, [x0]
    4cac:	cbnz	w0, 4cb4 <grub_efi_get_ram_base+0x7b4>
    4cb0:	bl	4c48 <grub_efi_get_ram_base+0x748>
    4cb4:	mov	w0, #0x0                   	// #0
    4cb8:	bl	20c0 <grub_efi_set_text_mode>
    4cbc:	mov	w0, #0x0                   	// #0
    4cc0:	ldp	x29, x30, [sp], #16
    4cc4:	ret
	...
    4cd0:	stp	x29, x30, [sp, #-16]!
    4cd4:	mov	w0, #0x1                   	// #1
    4cd8:	mov	x29, sp
    4cdc:	bl	20c0 <grub_efi_set_text_mode>
    4ce0:	adrp	x0, 0 <_start>
    4ce4:	ldr	x0, [x0]
    4ce8:	ldr	w0, [x0]
    4cec:	cbnz	w0, 4cf8 <grub_efi_get_ram_base+0x7f8>
    4cf0:	mov	w0, #0x1                   	// #1
    4cf4:	bl	4c48 <grub_efi_get_ram_base+0x748>
    4cf8:	mov	w0, #0x0                   	// #0
    4cfc:	ldp	x29, x30, [sp], #16
    4d00:	ret
    4d04:	nop
	...

0000000000004d10 <grub_console_init>:
    4d10:	stp	x29, x30, [sp, #-32]!
    4d14:	mov	w0, #0x1                   	// #1
    4d18:	mov	x29, sp
    4d1c:	bl	20c0 <grub_efi_set_text_mode>
    4d20:	cbz	w0, 4dd8 <grub_console_init+0xc8>
    4d24:	adrp	x0, 0 <_start>
    4d28:	stp	x19, x20, [sp, #16]
    4d2c:	ldr	x20, [x0]
    4d30:	ldr	x0, [x20]
    4d34:	cbz	x0, 4d78 <grub_console_init+0x68>
    4d38:	adrp	x0, 0 <_start>
    4d3c:	adrp	x1, 0 <_start>
    4d40:	ldr	x0, [x0]
    4d44:	ldr	x19, [x1]
    4d48:	mov	x1, x19
    4d4c:	bl	92e8 <grub_list_push>
    4d50:	adrp	x0, 0 <_start>
    4d54:	ldr	x20, [x0]
    4d58:	ldr	x0, [x20]
    4d5c:	cbz	x0, 4db0 <grub_console_init+0xa0>
    4d60:	add	x1, x19, #0x90
    4d64:	adrp	x0, 0 <_start>
    4d68:	ldp	x19, x20, [sp, #16]
    4d6c:	ldp	x29, x30, [sp], #32
    4d70:	ldr	x0, [x0]
    4d74:	b	92e8 <grub_list_push>
    4d78:	adrp	x1, 0 <_start>
    4d7c:	ldr	x19, [x1]
    4d80:	ldr	x1, [x19, #24]
    4d84:	cbz	x1, 4d94 <grub_console_init+0x84>
    4d88:	mov	x0, x19
    4d8c:	blr	x1
    4d90:	cbnz	w0, 4d50 <grub_console_init+0x40>
    4d94:	mov	x0, x20
    4d98:	mov	x1, x19
    4d9c:	bl	92e8 <grub_list_push>
    4da0:	adrp	x0, 0 <_start>
    4da4:	ldr	x20, [x0]
    4da8:	ldr	x0, [x20]
    4dac:	cbnz	x0, 4d60 <grub_console_init+0x50>
    4db0:	ldr	x1, [x19, #168]
    4db4:	add	x0, x19, #0x90
    4db8:	cbz	x1, 4dc4 <grub_console_init+0xb4>
    4dbc:	blr	x1
    4dc0:	cbnz	w0, 4dec <grub_console_init+0xdc>
    4dc4:	add	x1, x19, #0x90
    4dc8:	mov	x0, x20
    4dcc:	ldp	x19, x20, [sp, #16]
    4dd0:	ldp	x29, x30, [sp], #32
    4dd4:	b	92e8 <grub_list_push>
    4dd8:	ldp	x29, x30, [sp], #32
    4ddc:	adrp	x1, 0 <_start>
    4de0:	mov	w0, #0xd                   	// #13
    4de4:	ldr	x1, [x1]
    4de8:	b	85c0 <grub_error>
    4dec:	ldp	x19, x20, [sp, #16]
    4df0:	ldp	x29, x30, [sp], #32
    4df4:	ret
	...

0000000000004e28 <grub_console_fini>:
    4e28:	stp	x29, x30, [sp, #-32]!
    4e2c:	adrp	x0, 0 <_start>
    4e30:	mov	x29, sp
    4e34:	stp	x19, x20, [sp, #16]
    4e38:	ldr	x19, [x0]
    4e3c:	add	x20, x19, #0x90
    4e40:	mov	x0, x20
    4e44:	bl	9308 <grub_list_remove>
    4e48:	mov	x0, x20
    4e4c:	bl	9308 <grub_list_remove>
    4e50:	mov	x0, x19
    4e54:	bl	9308 <grub_list_remove>
    4e58:	mov	x0, x19
    4e5c:	ldp	x19, x20, [sp, #16]
    4e60:	ldp	x29, x30, [sp], #32
    4e64:	b	9308 <grub_list_remove>
	...
    4e70:	stp	x29, x30, [sp, #-48]!
    4e74:	mov	x29, sp
    4e78:	stp	x19, x20, [sp, #16]
    4e7c:	cbz	x0, 4f04 <grub_console_fini+0xdc>
    4e80:	adrp	x1, 0 <_start>
    4e84:	mov	x2, #0x4                   	// #4
    4e88:	stp	x21, x22, [sp, #32]
    4e8c:	mov	x21, x0
    4e90:	ldr	x1, [x1]
    4e94:	bl	9b28 <grub_memcmp>
    4e98:	cbnz	w0, 4f00 <grub_console_fini+0xd8>
    4e9c:	ldr	w1, [x21, #4]
    4ea0:	add	x19, x21, #0x24
    4ea4:	sub	x1, x1, #0x24
    4ea8:	cmp	xzr, x1, lsr #2
    4eac:	lsr	x1, x1, #2
    4eb0:	b.eq	4f00 <grub_console_fini+0xd8>  // b.none
    4eb4:	add	x1, x1, #0x9
    4eb8:	adrp	x0, 0 <_start>
    4ebc:	add	x21, x21, x1, lsl #2
    4ec0:	ldr	x22, [x0]
    4ec4:	b	4ed0 <grub_console_fini+0xa8>
    4ec8:	cmp	x19, x21
    4ecc:	b.eq	4f00 <grub_console_fini+0xd8>  // b.none
    4ed0:	ldr	w20, [x19]
    4ed4:	mov	x1, x22
    4ed8:	add	x19, x19, #0x4
    4edc:	mov	x2, #0x4                   	// #4
    4ee0:	mov	x0, x20
    4ee4:	bl	9b28 <grub_memcmp>
    4ee8:	cbnz	w0, 4ec8 <grub_console_fini+0xa0>
    4eec:	mov	x0, x20
    4ef0:	ldp	x19, x20, [sp, #16]
    4ef4:	ldp	x21, x22, [sp, #32]
    4ef8:	ldp	x29, x30, [sp], #48
    4efc:	ret
    4f00:	ldp	x21, x22, [sp, #32]
    4f04:	mov	x20, #0x0                   	// #0
    4f08:	mov	x0, x20
    4f0c:	ldp	x19, x20, [sp, #16]
    4f10:	ldp	x29, x30, [sp], #48
    4f14:	ret
	...

0000000000004f28 <grub_byte_checksum>:
    4f28:	mov	x2, x0
    4f2c:	add	x1, x0, x1
    4f30:	cmp	x2, x1
    4f34:	mov	w0, #0x0                   	// #0
    4f38:	b.cs	4f54 <grub_byte_checksum+0x2c>  // b.hs, b.nlast
    4f3c:	nop
    4f40:	ldrb	w3, [x2], #1
    4f44:	add	w0, w0, w3
    4f48:	cmp	x2, x1
    4f4c:	and	w0, w0, #0xff
    4f50:	b.ne	4f40 <grub_byte_checksum+0x18>  // b.any
    4f54:	ret

0000000000004f58 <grub_acpi_find_fadt>:
    4f58:	stp	x29, x30, [sp, #-48]!
    4f5c:	mov	x29, sp
    4f60:	bl	5048 <grub_machine_acpi_get_rsdpv1>
    4f64:	cbz	x0, 4f7c <grub_acpi_find_fadt+0x24>
    4f68:	ldr	w0, [x0, #16]
    4f6c:	bl	4e70 <grub_console_fini+0x48>
    4f70:	cbz	x0, 4f7c <grub_acpi_find_fadt+0x24>
    4f74:	ldp	x29, x30, [sp], #48
    4f78:	ret
    4f7c:	stp	x19, x20, [sp, #16]
    4f80:	bl	5100 <grub_machine_acpi_get_rsdpv2>
    4f84:	mov	x19, x0
    4f88:	cbz	x0, 4fa8 <grub_acpi_find_fadt+0x50>
    4f8c:	ldr	w0, [x0, #16]
    4f90:	bl	4e70 <grub_console_fini+0x48>
    4f94:	cbz	x0, 4fb8 <grub_acpi_find_fadt+0x60>
    4f98:	ldp	x19, x20, [sp, #16]
    4f9c:	ldp	x29, x30, [sp], #48
    4fa0:	ret
    4fa4:	ldp	x21, x22, [sp, #32]
    4fa8:	mov	x0, #0x0                   	// #0
    4fac:	ldp	x19, x20, [sp, #16]
    4fb0:	ldp	x29, x30, [sp], #48
    4fb4:	ret
    4fb8:	ldr	x20, [x19, #24]
    4fbc:	cbz	x20, 4fa8 <grub_acpi_find_fadt+0x50>
    4fc0:	adrp	x1, 0 <_start>
    4fc4:	mov	x0, x20
    4fc8:	mov	x2, #0x4                   	// #4
    4fcc:	ldr	x1, [x1]
    4fd0:	bl	9b28 <grub_memcmp>
    4fd4:	cbnz	w0, 4fa8 <grub_acpi_find_fadt+0x50>
    4fd8:	stp	x21, x22, [sp, #32]
    4fdc:	add	x20, x20, #0x24
    4fe0:	ldur	w21, [x20, #-32]
    4fe4:	sub	x21, x21, #0x24
    4fe8:	cmp	xzr, x21, lsr #2
    4fec:	lsr	x21, x21, #2
    4ff0:	b.eq	4fa4 <grub_acpi_find_fadt+0x4c>  // b.none
    4ff4:	adrp	x0, 0 <_start>
    4ff8:	ldr	x22, [x0]
    4ffc:	b	5008 <grub_acpi_find_fadt+0xb0>
    5000:	subs	x21, x21, #0x1
    5004:	b.eq	4fa4 <grub_acpi_find_fadt+0x4c>  // b.none
    5008:	ldr	x19, [x20]
    500c:	mov	x1, x22
    5010:	add	x20, x20, #0x8
    5014:	mov	x2, #0x4                   	// #4
    5018:	mov	x0, x19
    501c:	bl	9b28 <grub_memcmp>
    5020:	cbnz	w0, 5000 <grub_acpi_find_fadt+0xa8>
    5024:	mov	x0, x19
    5028:	ldp	x19, x20, [sp, #16]
    502c:	ldp	x21, x22, [sp, #32]
    5030:	b	4f74 <grub_acpi_find_fadt+0x1c>
    5034:	nop
	...

0000000000005048 <grub_machine_acpi_get_rsdpv1>:
    5048:	stp	x29, x30, [sp, #-48]!
    504c:	adrp	x0, 0 <_start>
    5050:	mov	x29, sp
    5054:	stp	x21, x22, [sp, #32]
    5058:	ldr	x21, [x0]
    505c:	ldr	x1, [x21]
    5060:	ldr	x0, [x1, #104]
    5064:	cbz	x0, 50dc <grub_machine_acpi_get_rsdpv1+0x94>
    5068:	adrp	x2, 0 <_start>
    506c:	mov	x0, #0x0                   	// #0
    5070:	stp	x19, x20, [sp, #16]
    5074:	mov	w20, #0x0                   	// #0
    5078:	ldr	x22, [x2]
    507c:	b	5094 <grub_machine_acpi_get_rsdpv1+0x4c>
    5080:	ldr	x1, [x21]
    5084:	mov	w0, w20
    5088:	ldr	x2, [x1, #104]
    508c:	cmp	x2, w20, uxtw
    5090:	b.ls	50d8 <grub_machine_acpi_get_rsdpv1+0x90>  // b.plast
    5094:	ldr	x3, [x1, #112]
    5098:	add	x0, x0, x0, lsl #1
    509c:	add	w20, w20, #0x1
    50a0:	mov	x1, x22
    50a4:	lsl	x19, x0, #3
    50a8:	mov	x2, #0x10                  	// #16
    50ac:	add	x0, x3, x19
    50b0:	bl	9b28 <grub_memcmp>
    50b4:	cbnz	w0, 5080 <grub_machine_acpi_get_rsdpv1+0x38>
    50b8:	ldr	x0, [x21]
    50bc:	ldp	x21, x22, [sp, #32]
    50c0:	ldr	x0, [x0, #112]
    50c4:	add	x19, x0, x19
    50c8:	ldr	x0, [x19, #16]
    50cc:	ldp	x19, x20, [sp, #16]
    50d0:	ldp	x29, x30, [sp], #48
    50d4:	ret
    50d8:	ldp	x19, x20, [sp, #16]
    50dc:	mov	x0, #0x0                   	// #0
    50e0:	ldp	x21, x22, [sp, #32]
    50e4:	ldp	x29, x30, [sp], #48
    50e8:	ret
    50ec:	nop
	...

0000000000005100 <grub_machine_acpi_get_rsdpv2>:
    5100:	stp	x29, x30, [sp, #-48]!
    5104:	adrp	x0, 0 <_start>
    5108:	mov	x29, sp
    510c:	stp	x21, x22, [sp, #32]
    5110:	ldr	x22, [x0]
    5114:	ldr	x2, [x22]
    5118:	ldr	x0, [x2, #104]
    511c:	cbz	x0, 5198 <grub_machine_acpi_get_rsdpv2+0x98>
    5120:	adrp	x1, 0 <_start>
    5124:	mov	x0, #0x0                   	// #0
    5128:	stp	x19, x20, [sp, #16]
    512c:	mov	w20, #0x0                   	// #0
    5130:	ldr	x21, [x1]
    5134:	add	x21, x21, #0x10
    5138:	b	5150 <grub_machine_acpi_get_rsdpv2+0x50>
    513c:	ldr	x2, [x22]
    5140:	mov	w0, w20
    5144:	ldr	x3, [x2, #104]
    5148:	cmp	x3, w20, uxtw
    514c:	b.ls	5194 <grub_machine_acpi_get_rsdpv2+0x94>  // b.plast
    5150:	ldr	x3, [x2, #112]
    5154:	add	x0, x0, x0, lsl #1
    5158:	add	w20, w20, #0x1
    515c:	mov	x1, x21
    5160:	lsl	x19, x0, #3
    5164:	mov	x2, #0x10                  	// #16
    5168:	add	x0, x3, x19
    516c:	bl	9b28 <grub_memcmp>
    5170:	cbnz	w0, 513c <grub_machine_acpi_get_rsdpv2+0x3c>
    5174:	ldr	x0, [x22]
    5178:	ldp	x21, x22, [sp, #32]
    517c:	ldr	x0, [x0, #112]
    5180:	add	x19, x0, x19
    5184:	ldr	x0, [x19, #16]
    5188:	ldp	x19, x20, [sp, #16]
    518c:	ldp	x29, x30, [sp], #48
    5190:	ret
    5194:	ldp	x19, x20, [sp, #16]
    5198:	mov	x0, #0x0                   	// #0
    519c:	ldp	x21, x22, [sp, #32]
    51a0:	ldp	x29, x30, [sp], #48
    51a4:	ret
	...

00000000000051b8 <memcpy>:
    51b8:	b	9a40 <grub_memmove>
    51bc:	nop

00000000000051c0 <memmove>:
    51c0:	b	9a40 <grub_memmove>
    51c4:	nop

00000000000051c8 <memcmp>:
    51c8:	b	9b28 <grub_memcmp>
    51cc:	nop

00000000000051d0 <memset>:
    51d0:	b	a670 <grub_memset>
    51d4:	nop
    51d8:	stp	x29, x30, [sp, #-16]!
    51dc:	tst	x0, #0x1f
    51e0:	mov	x29, sp
    51e4:	b.ne	5270 <memset+0xa0>  // b.any
    51e8:	adrp	x3, 0 <_start>
    51ec:	ldr	x3, [x3]
    51f0:	ldr	x3, [x3]
    51f4:	str	x3, [x2]
    51f8:	cbz	x3, 522c <memset+0x5c>
    51fc:	nop
    5200:	add	x4, x3, #0x20
    5204:	cmp	x0, x4
    5208:	b.ls	5220 <memset+0x50>  // b.plast
    520c:	ldr	x4, [x3, #24]
    5210:	add	x4, x3, x4
    5214:	add	x4, x4, #0x20
    5218:	cmp	x0, x4
    521c:	b.ls	523c <memset+0x6c>  // b.plast
    5220:	ldr	x3, [x3, #8]
    5224:	str	x3, [x2]
    5228:	cbnz	x3, 5200 <memset+0x30>
    522c:	adrp	x2, 0 <_start>
    5230:	mov	x1, x0
    5234:	ldr	x0, [x2]
    5238:	bl	b188 <grub_fatal>
    523c:	ldur	x2, [x0, #-16]
    5240:	sub	x0, x0, #0x20
    5244:	str	x0, [x1]
    5248:	mov	x1, #0x2808                	// #10248
    524c:	movk	x1, #0x2d3c, lsl #16
    5250:	cmp	x2, x1
    5254:	b.eq	5290 <memset+0xc0>  // b.none
    5258:	mov	x1, #0x8fa4                	// #36772
    525c:	movk	x1, #0x6db0, lsl #16
    5260:	cmp	x2, x1
    5264:	b.ne	5280 <memset+0xb0>  // b.any
    5268:	ldp	x29, x30, [sp], #16
    526c:	ret
    5270:	adrp	x2, 0 <_start>
    5274:	mov	x1, x0
    5278:	ldr	x0, [x2]
    527c:	bl	b188 <grub_fatal>
    5280:	adrp	x3, 0 <_start>
    5284:	mov	x1, x0
    5288:	ldr	x0, [x3]
    528c:	bl	b188 <grub_fatal>
    5290:	adrp	x2, 0 <_start>
    5294:	mov	x1, x0
    5298:	ldr	x0, [x2]
    529c:	bl	b188 <grub_fatal>
	...
    52c8:	stp	x29, x30, [sp, #-32]!
    52cc:	mov	x29, sp
    52d0:	add	x1, sp, #0x10
    52d4:	add	x2, sp, #0x18
    52d8:	bl	51d8 <memset+0x8>
    52dc:	ldr	x6, [sp, #24]
    52e0:	mov	x0, #0x8fa4                	// #36772
    52e4:	movk	x0, #0x6db0, lsl #16
    52e8:	ldr	x4, [x6]
    52ec:	ldr	x1, [x4, #16]
    52f0:	cmp	x1, x0
    52f4:	b.eq	5394 <memset+0x1c4>  // b.none
    52f8:	mov	x5, #0x2808                	// #10248
    52fc:	movk	x5, #0x2d3c, lsl #16
    5300:	ldr	x1, [x4]
    5304:	ldr	x3, [sp, #16]
    5308:	b	5314 <memset+0x144>
    530c:	mov	x4, x1
    5310:	mov	x1, x0
    5314:	cmp	x1, x3
    5318:	b.ls	5328 <memset+0x158>  // b.plast
    531c:	ldr	x0, [x1]
    5320:	cmp	x3, x0
    5324:	b.hi	534c <memset+0x17c>  // b.pmore
    5328:	ldr	x2, [x1, #16]
    532c:	cmp	x2, x5
    5330:	b.ne	5408 <memset+0x238>  // b.any
    5334:	ldr	x0, [x1]
    5338:	cmp	x1, x0
    533c:	b.hi	530c <memset+0x13c>  // b.pmore
    5340:	cmp	x1, x3
    5344:	ccmp	x0, x3, #0x0, ls  // ls = plast
    5348:	b.cs	530c <memset+0x13c>  // b.hs, b.nlast
    534c:	mov	x2, #0x2808                	// #10248
    5350:	str	x0, [x3]
    5354:	movk	x2, #0x2d3c, lsl #16
    5358:	str	x2, [x3, #16]
    535c:	ldr	x2, [x3, #8]
    5360:	str	x3, [x1]
    5364:	ldr	x0, [x3]
    5368:	ldr	x5, [x0, #8]
    536c:	add	x7, x0, x5, lsl #5
    5370:	cmp	x3, x7
    5374:	b.eq	53d8 <memset+0x208>  // b.none
    5378:	str	x1, [x6]
    537c:	add	x0, x3, x2, lsl #5
    5380:	cmp	x1, x0
    5384:	b.eq	53b4 <memset+0x1e4>  // b.none
    5388:	str	x1, [x6]
    538c:	ldp	x29, x30, [sp], #32
    5390:	ret
    5394:	ldr	x0, [sp, #16]
    5398:	mov	x1, #0x2808                	// #10248
    539c:	movk	x1, #0x2d3c, lsl #16
    53a0:	str	x0, [x0]
    53a4:	str	x1, [x0, #16]
    53a8:	str	x0, [x6]
    53ac:	ldp	x29, x30, [sp], #32
    53b0:	ret
    53b4:	cmp	x1, x4
    53b8:	str	xzr, [x1, #16]
    53bc:	ldr	x0, [x1, #8]
    53c0:	csel	x4, x4, x3, ne  // ne = any
    53c4:	mov	x1, x4
    53c8:	add	x2, x0, x2
    53cc:	str	x2, [x3, #8]
    53d0:	str	x3, [x4]
    53d4:	b	5388 <memset+0x1b8>
    53d8:	str	xzr, [x3, #16]
    53dc:	add	x2, x5, x2
    53e0:	str	x2, [x0, #8]
    53e4:	str	x0, [x1]
    53e8:	ldr	x3, [x3]
    53ec:	str	x3, [sp, #16]
    53f0:	ldr	x2, [x3, #8]
    53f4:	str	x1, [x6]
    53f8:	add	x0, x3, x2, lsl #5
    53fc:	cmp	x1, x0
    5400:	b.ne	5388 <memset+0x1b8>  // b.any
    5404:	b	53b4 <memset+0x1e4>
    5408:	adrp	x0, 0 <_start>
    540c:	ldr	x0, [x0]
    5410:	bl	b188 <grub_fatal>
    5414:	nop
	...

0000000000005420 <grub_mm_init_region>:
    5420:	mov	x2, #0xffffffffffffefff    	// #-4097
    5424:	cmp	x0, x2
    5428:	b.hi	54c4 <grub_mm_init_region+0xa4>  // b.pmore
    542c:	stp	x29, x30, [sp, #-32]!
    5430:	adrp	x5, 0 <_start>
    5434:	mvn	x4, x1
    5438:	mov	x29, sp
    543c:	ldr	x6, [x5]
    5440:	add	x3, x0, #0x1, lsl #12
    5444:	cmp	x3, x4
    5448:	mov	x2, #0xfffffffffffff000    	// #-4096
    544c:	sub	x2, x2, x0
    5450:	ldr	x4, [x6]
    5454:	csel	x1, x2, x1, hi  // hi = pmore
    5458:	cbz	x4, 54cc <grub_mm_init_region+0xac>
    545c:	mov	x2, x4
    5460:	stp	x19, x20, [sp, #16]
    5464:	mov	x20, x6
    5468:	b	5478 <grub_mm_init_region+0x58>
    546c:	add	x20, x2, #0x8
    5470:	ldr	x2, [x2, #8]
    5474:	cbz	x2, 54c8 <grub_mm_init_region+0xa8>
    5478:	ldr	x3, [x2, #16]
    547c:	add	x3, x1, x3
    5480:	add	x5, x0, x3
    5484:	cmp	x2, x5
    5488:	b.ne	546c <grub_mm_init_region+0x4c>  // b.any
    548c:	add	x0, x0, #0x1f
    5490:	cmp	xzr, x3, lsr #5
    5494:	and	x19, x0, #0xffffffffffffffe0
    5498:	lsr	x4, x3, #5
    549c:	ldp	x0, x1, [x2]
    54a0:	stp	x0, x1, [x19]
    54a4:	ldp	x0, x1, [x2, #16]
    54a8:	stp	x0, x1, [x19, #16]
    54ac:	str	x3, [x19, #16]
    54b0:	b.ne	5550 <grub_mm_init_region+0x130>  // b.any
    54b4:	str	x19, [x20]
    54b8:	ldp	x19, x20, [sp, #16]
    54bc:	ldp	x29, x30, [sp], #32
    54c0:	ret
    54c4:	ret
    54c8:	ldp	x19, x20, [sp, #16]
    54cc:	add	x2, x0, #0x1f
    54d0:	and	x2, x2, #0xffffffffffffffe0
    54d4:	add	x5, x2, #0x20
    54d8:	sub	x3, x5, x0
    54dc:	add	x3, x3, #0x20
    54e0:	cmp	x3, x1
    54e4:	b.hi	54bc <grub_mm_init_region+0x9c>  // b.pmore
    54e8:	sub	x0, x2, x0
    54ec:	mov	x3, #0x2808                	// #10248
    54f0:	sub	x1, x1, x0
    54f4:	movk	x3, #0x2d3c, lsl #16
    54f8:	sub	x1, x1, #0x20
    54fc:	str	x5, [x2]
    5500:	str	x0, [x2, #16]
    5504:	mov	x0, x6
    5508:	str	x5, [x2, #32]
    550c:	str	x3, [x2, #48]
    5510:	and	x3, x1, #0xffffffffffffffe0
    5514:	lsr	x1, x1, #5
    5518:	str	x3, [x2, #24]
    551c:	str	x1, [x2, #40]
    5520:	cbnz	x4, 5534 <grub_mm_init_region+0x114>
    5524:	b	5540 <grub_mm_init_region+0x120>
    5528:	add	x0, x4, #0x8
    552c:	ldr	x4, [x4, #8]
    5530:	cbz	x4, 5540 <grub_mm_init_region+0x120>
    5534:	ldr	x1, [x4, #24]
    5538:	cmp	x3, x1
    553c:	b.cs	5528 <grub_mm_init_region+0x108>  // b.hs, b.nlast
    5540:	str	x2, [x0]
    5544:	str	x4, [x2, #8]
    5548:	ldp	x29, x30, [sp], #32
    554c:	ret
    5550:	ldr	x1, [x19, #24]
    5554:	and	x2, x3, #0xffffffffffffffe0
    5558:	mov	x5, #0x8fa4                	// #36772
    555c:	and	x3, x3, #0x1f
    5560:	add	x1, x1, x2
    5564:	movk	x5, #0x6db0, lsl #16
    5568:	stp	x3, x1, [x19, #16]
    556c:	add	x0, x19, #0x40
    5570:	stp	x4, x5, [x19, #40]
    5574:	str	x19, [x20]
    5578:	bl	52c8 <memset+0xf8>
    557c:	b	54b4 <grub_mm_init_region+0x94>
	...

0000000000005588 <grub_memalign>:
    5588:	stp	x29, x30, [sp, #-80]!
    558c:	adrp	x2, 0 <_start>
    5590:	mov	x29, sp
    5594:	stp	x21, x22, [sp, #32]
    5598:	ldr	x21, [x2]
    559c:	ldr	x5, [x21]
    55a0:	cbz	x5, 571c <grub_memalign+0x194>
    55a4:	mvn	x2, x0
    55a8:	cmp	x2, x1
    55ac:	b.cc	571c <grub_memalign+0x194>  // b.lo, b.ul, b.last
    55b0:	add	x3, x1, x0
    55b4:	mov	x2, #0xffffffffffefffff    	// #-1048577
    55b8:	cmp	x3, x2
    55bc:	b.hi	571c <grub_memalign+0x194>  // b.pmore
    55c0:	lsr	x22, x0, #5
    55c4:	stp	x19, x20, [sp, #16]
    55c8:	add	x19, x1, #0x1f
    55cc:	cmp	x22, #0x0
    55d0:	stp	x23, x24, [sp, #48]
    55d4:	lsr	x19, x19, #5
    55d8:	csinc	x20, x22, xzr, ne  // ne = any
    55dc:	mov	x23, #0x2808                	// #10248
    55e0:	add	x19, x19, #0x1
    55e4:	sub	x24, x20, #0x1
    55e8:	str	x25, [sp, #64]
    55ec:	mov	x25, #0x8fa4                	// #36772
    55f0:	mov	w8, #0x2                   	// #2
    55f4:	movk	x23, #0x2d3c, lsl #16
    55f8:	movk	x25, #0x6db0, lsl #16
    55fc:	nop
    5600:	ldr	x4, [x5]
    5604:	ldr	x0, [x4, #16]
    5608:	cmp	x0, x25
    560c:	b.eq	56f0 <grub_memalign+0x168>  // b.none
    5610:	mov	x6, x4
    5614:	ldr	x1, [x4]
    5618:	b	562c <grub_memalign+0xa4>
    561c:	cmp	x4, x1
    5620:	b.eq	56f0 <grub_memalign+0x168>  // b.none
    5624:	mov	x6, x1
    5628:	ldr	x1, [x1]
    562c:	add	x0, x1, #0x20
    5630:	ands	x3, x24, x0, lsr #5
    5634:	sub	x2, x20, x3
    5638:	csel	x3, x2, x3, ne  // ne = any
    563c:	cbz	x1, 57a0 <grub_memalign+0x218>
    5640:	ldr	x2, [x1, #16]
    5644:	cmp	x2, x23
    5648:	b.ne	57ac <grub_memalign+0x224>  // b.any
    564c:	ldr	x2, [x1, #8]
    5650:	add	x7, x19, x3
    5654:	cmp	x2, x7
    5658:	b.cc	561c <grub_memalign+0x94>  // b.lo, b.ul, b.last
    565c:	sub	x7, x2, x19
    5660:	neg	x20, x20
    5664:	sub	x4, x7, x3
    5668:	and	x20, x4, x20
    566c:	adds	x3, x3, x20
    5670:	ccmp	x19, x2, #0x0, eq  // eq = none
    5674:	b.eq	5788 <grub_memalign+0x200>  // b.none
    5678:	cmp	x22, #0x1
    567c:	b.ls	5758 <grub_memalign+0x1d0>  // b.plast
    5680:	add	x4, x19, x3
    5684:	cmp	x2, x4
    5688:	b.eq	5758 <grub_memalign+0x1d0>  // b.none
    568c:	lsl	x9, x4, #5
    5690:	add	x8, x1, x9
    5694:	cbnz	x3, 5768 <grub_memalign+0x1e0>
    5698:	sub	x2, x2, x4
    569c:	stp	x2, x23, [x8, #8]
    56a0:	cmp	x1, x6
    56a4:	ldr	x2, [x1]
    56a8:	str	x2, [x1, x9]
    56ac:	str	x8, [x6]
    56b0:	b.eq	5794 <grub_memalign+0x20c>  // b.none
    56b4:	nop
    56b8:	mov	x2, #0x8fa4                	// #36772
    56bc:	cmp	x19, #0x3ff
    56c0:	movk	x2, #0x6db0, lsl #16
    56c4:	stp	x19, x2, [x1, #8]
    56c8:	b.ls	573c <grub_memalign+0x1b4>  // b.plast
    56cc:	ldr	x2, [x5]
    56d0:	cmp	x1, x2
    56d4:	b.eq	573c <grub_memalign+0x1b4>  // b.none
    56d8:	ldp	x19, x20, [sp, #16]
    56dc:	ldp	x21, x22, [sp, #32]
    56e0:	ldp	x23, x24, [sp, #48]
    56e4:	ldr	x25, [sp, #64]
    56e8:	ldp	x29, x30, [sp], #80
    56ec:	ret
    56f0:	ldr	x5, [x5, #8]
    56f4:	cbnz	x5, 5600 <grub_memalign+0x78>
    56f8:	cmp	w8, #0x1
    56fc:	b.eq	5710 <grub_memalign+0x188>  // b.none
    5700:	bl	68c0 <grub_disk_cache_invalidate_all>
    5704:	ldr	x5, [x21]
    5708:	mov	w8, #0x1                   	// #1
    570c:	cbnz	x5, 5600 <grub_memalign+0x78>
    5710:	ldp	x19, x20, [sp, #16]
    5714:	ldp	x23, x24, [sp, #48]
    5718:	ldr	x25, [sp, #64]
    571c:	adrp	x1, 0 <_start>
    5720:	mov	w0, #0x3                   	// #3
    5724:	ldr	x1, [x1]
    5728:	bl	85c0 <grub_error>
    572c:	mov	x0, #0x0                   	// #0
    5730:	ldp	x21, x22, [sp, #32]
    5734:	ldp	x29, x30, [sp], #80
    5738:	ret
    573c:	ldp	x19, x20, [sp, #16]
    5740:	ldp	x23, x24, [sp, #48]
    5744:	ldr	x25, [sp, #64]
    5748:	str	x6, [x5]
    574c:	ldp	x21, x22, [sp, #32]
    5750:	ldp	x29, x30, [sp], #80
    5754:	ret
    5758:	str	x7, [x1, #8]
    575c:	add	x1, x1, x7, lsl #5
    5760:	add	x0, x1, #0x20
    5764:	b	56b8 <grub_memalign+0x130>
    5768:	sub	x7, x7, x3
    576c:	stp	x7, x23, [x8, #8]
    5770:	str	x1, [x1, x9]
    5774:	str	x3, [x1, #8]
    5778:	add	x1, x1, x3, lsl #5
    577c:	add	x0, x1, #0x20
    5780:	str	x8, [x6]
    5784:	b	56b8 <grub_memalign+0x130>
    5788:	ldr	x2, [x1]
    578c:	str	x2, [x6]
    5790:	b	56b8 <grub_memalign+0x130>
    5794:	mov	x6, x8
    5798:	str	x8, [x8]
    579c:	b	56b8 <grub_memalign+0x130>
    57a0:	adrp	x0, 0 <_start>
    57a4:	ldr	x0, [x0]
    57a8:	bl	b188 <grub_fatal>
    57ac:	adrp	x0, 0 <_start>
    57b0:	ldr	x0, [x0]
    57b4:	bl	b188 <grub_fatal>
	...

00000000000057d8 <grub_malloc>:
    57d8:	mov	x1, x0
    57dc:	mov	x0, #0x0                   	// #0
    57e0:	b	5588 <grub_memalign>
    57e4:	nop

00000000000057e8 <grub_zalloc>:
    57e8:	stp	x29, x30, [sp, #-32]!
    57ec:	mov	x29, sp
    57f0:	stp	x19, x20, [sp, #16]
    57f4:	mov	x20, x0
    57f8:	mov	x1, x20
    57fc:	mov	x0, #0x0                   	// #0
    5800:	bl	5588 <grub_memalign>
    5804:	mov	x19, x0
    5808:	cbz	x0, 5818 <grub_zalloc+0x30>
    580c:	mov	x2, x20
    5810:	mov	w1, #0x0                   	// #0
    5814:	bl	a670 <grub_memset>
    5818:	mov	x0, x19
    581c:	ldp	x19, x20, [sp, #16]
    5820:	ldp	x29, x30, [sp], #32
    5824:	ret

0000000000005828 <grub_free>:
    5828:	cbz	x0, 5830 <grub_free+0x8>
    582c:	b	52c8 <memset+0xf8>
    5830:	ret
    5834:	nop

0000000000005838 <grub_realloc>:
    5838:	stp	x29, x30, [sp, #-64]!
    583c:	mov	x29, sp
    5840:	str	x21, [sp, #32]
    5844:	cbz	x0, 58f8 <grub_realloc+0xc0>
    5848:	stp	x19, x20, [sp, #16]
    584c:	mov	x20, x1
    5850:	cbz	x1, 58dc <grub_realloc+0xa4>
    5854:	mov	x19, x0
    5858:	add	x2, sp, #0x38
    585c:	add	x1, sp, #0x30
    5860:	bl	51d8 <memset+0x8>
    5864:	ldr	x0, [sp, #48]
    5868:	add	x2, x20, #0x1f
    586c:	mov	x21, x19
    5870:	lsr	x2, x2, #5
    5874:	ldr	x0, [x0, #8]
    5878:	add	x2, x2, #0x1
    587c:	cmp	x0, x2
    5880:	b.cc	5898 <grub_realloc+0x60>  // b.lo, b.ul, b.last
    5884:	ldp	x19, x20, [sp, #16]
    5888:	mov	x0, x21
    588c:	ldr	x21, [sp, #32]
    5890:	ldp	x29, x30, [sp], #64
    5894:	ret
    5898:	mov	x1, x20
    589c:	mov	x0, #0x0                   	// #0
    58a0:	bl	5588 <grub_memalign>
    58a4:	mov	x21, x0
    58a8:	cbz	x0, 5884 <grub_realloc+0x4c>
    58ac:	ldr	x2, [sp, #48]
    58b0:	mov	x1, x19
    58b4:	ldr	x2, [x2, #8]
    58b8:	lsl	x2, x2, #5
    58bc:	bl	9a40 <grub_memmove>
    58c0:	mov	x0, x19
    58c4:	bl	52c8 <memset+0xf8>
    58c8:	mov	x0, x21
    58cc:	ldp	x19, x20, [sp, #16]
    58d0:	ldr	x21, [sp, #32]
    58d4:	ldp	x29, x30, [sp], #64
    58d8:	ret
    58dc:	bl	52c8 <memset+0xf8>
    58e0:	mov	x21, #0x0                   	// #0
    58e4:	mov	x0, x21
    58e8:	ldp	x19, x20, [sp, #16]
    58ec:	ldr	x21, [sp, #32]
    58f0:	ldp	x29, x30, [sp], #64
    58f4:	ret
    58f8:	bl	5588 <grub_memalign>
    58fc:	mov	x21, x0
    5900:	b	5888 <grub_realloc+0x50>
    5904:	nop

0000000000005908 <grub_get_time_ms>:
    5908:	adrp	x0, 0 <_start>
    590c:	ldr	x0, [x0]
    5910:	ldr	x0, [x0]
    5914:	mov	x16, x0
    5918:	br	x16
    591c:	nop
	...

0000000000005928 <grub_install_get_time_ms>:
    5928:	adrp	x1, 0 <_start>
    592c:	ldr	x1, [x1]
    5930:	str	x0, [x1]
    5934:	ret
	...

0000000000005940 <grub_millisleep>:
    5940:	stp	x29, x30, [sp, #-32]!
    5944:	mov	x29, sp
    5948:	stp	x19, x20, [sp, #16]
    594c:	mov	w19, w0
    5950:	bl	5908 <grub_get_time_ms>
    5954:	mov	x20, x0
    5958:	bl	5908 <grub_get_time_ms>
    595c:	sub	x0, x0, x20
    5960:	cmp	x0, x19
    5964:	b.cc	5958 <grub_millisleep+0x18>  // b.lo, b.ul, b.last
    5968:	ldp	x19, x20, [sp, #16]
    596c:	ldp	x29, x30, [sp], #32
    5970:	ret
    5974:	nop

0000000000005978 <grub_register_command_prio>:
    5978:	stp	x29, x30, [sp, #-80]!
    597c:	mov	x29, sp
    5980:	stp	x19, x20, [sp, #16]
    5984:	mov	x19, x1
    5988:	stp	x21, x22, [sp, #32]
    598c:	mov	x21, x0
    5990:	mov	x0, #0x48                  	// #72
    5994:	stp	x23, x24, [sp, #48]
    5998:	mov	x23, x2
    599c:	mov	w24, w4
    59a0:	str	x25, [sp, #64]
    59a4:	mov	x25, x3
    59a8:	bl	57e8 <grub_zalloc>
    59ac:	mov	x20, x0
    59b0:	cbz	x0, 5a44 <grub_register_command_prio+0xcc>
    59b4:	adrp	x1, 0 <_start>
    59b8:	adrp	x0, 0 <_start>
    59bc:	str	x19, [x20, #32]
    59c0:	cmp	x23, #0x0
    59c4:	ldr	x22, [x1]
    59c8:	str	x21, [x20, #16]
    59cc:	ldr	x0, [x0]
    59d0:	str	w24, [x20, #24]
    59d4:	ldr	x19, [x22]
    59d8:	csel	x23, x23, x0, ne  // ne = any
    59dc:	str	wzr, [x20, #40]
    59e0:	stp	x23, x25, [x20, #48]
    59e4:	cbz	x19, 5aa0 <grub_register_command_prio+0x128>
    59e8:	mov	w23, #0x0                   	// #0
    59ec:	b	5a1c <grub_register_command_prio+0xa4>
    59f0:	b.ne	5a08 <grub_register_command_prio+0x90>  // b.any
    59f4:	ldr	w0, [x19, #24]
    59f8:	ldr	w1, [x20, #24]
    59fc:	cmp	w1, w0, uxtb
    5a00:	b.ge	5a94 <grub_register_command_prio+0x11c>  // b.tcont
    5a04:	mov	w23, #0x1                   	// #1
    5a08:	ldr	x0, [x19]
    5a0c:	mov	x22, x19
    5a10:	mov	x19, x0
    5a14:	cbz	x0, 5a88 <grub_register_command_prio+0x110>
    5a18:	ldr	x21, [x20, #16]
    5a1c:	mov	x0, x21
    5a20:	ldr	x1, [x19, #16]
    5a24:	bl	9b60 <grub_strcmp>
    5a28:	cmp	w0, #0x0
    5a2c:	b.ge	59f0 <grub_register_command_prio+0x78>  // b.tcont
    5a30:	str	x20, [x22]
    5a34:	str	x19, [x20]
    5a38:	str	x20, [x19, #8]
    5a3c:	str	x22, [x20, #8]
    5a40:	cbz	w23, 5a60 <grub_register_command_prio+0xe8>
    5a44:	mov	x0, x20
    5a48:	ldp	x19, x20, [sp, #16]
    5a4c:	ldp	x21, x22, [sp, #32]
    5a50:	ldp	x23, x24, [sp, #48]
    5a54:	ldr	x25, [sp, #64]
    5a58:	ldp	x29, x30, [sp], #80
    5a5c:	ret
    5a60:	ldr	w24, [x20, #24]
    5a64:	orr	w24, w24, #0x100
    5a68:	str	w24, [x20, #24]
    5a6c:	mov	x0, x20
    5a70:	ldp	x19, x20, [sp, #16]
    5a74:	ldp	x21, x22, [sp, #32]
    5a78:	ldp	x23, x24, [sp, #48]
    5a7c:	ldr	x25, [sp, #64]
    5a80:	ldp	x29, x30, [sp], #80
    5a84:	ret
    5a88:	str	x20, [x22]
    5a8c:	str	xzr, [x20]
    5a90:	b	5a3c <grub_register_command_prio+0xc4>
    5a94:	and	w0, w0, #0xfffffeff
    5a98:	str	w0, [x19, #24]
    5a9c:	b	5a30 <grub_register_command_prio+0xb8>
    5aa0:	str	x20, [x22]
    5aa4:	str	xzr, [x20]
    5aa8:	str	x22, [x20, #8]
    5aac:	b	5a64 <grub_register_command_prio+0xec>
	...

0000000000005ac0 <grub_unregister_command>:
    5ac0:	stp	x29, x30, [sp, #-32]!
    5ac4:	mov	x29, sp
    5ac8:	str	x19, [sp, #16]
    5acc:	mov	x19, x0
    5ad0:	ldr	w0, [x0, #24]
    5ad4:	tbz	w0, #8, 5aec <grub_unregister_command+0x2c>
    5ad8:	ldr	x0, [x19]
    5adc:	cbz	x0, 5aec <grub_unregister_command+0x2c>
    5ae0:	ldr	w1, [x0, #24]
    5ae4:	orr	w1, w1, #0x100
    5ae8:	str	w1, [x0, #24]
    5aec:	mov	x0, x19
    5af0:	bl	9308 <grub_list_remove>
    5af4:	mov	x0, x19
    5af8:	ldr	x19, [sp, #16]
    5afc:	ldp	x29, x30, [sp], #32
    5b00:	b	5828 <grub_free>
    5b04:	nop
    5b08:	stp	x29, x30, [sp, #-16]!
    5b0c:	mov	x29, sp
    5b10:	ldrb	w1, [x1]
    5b14:	tbnz	w1, #0, 5b3c <grub_unregister_command+0x7c>
    5b18:	adrp	x3, 0 <_start>
    5b1c:	adrp	x1, 0 <_start>
    5b20:	ldr	x2, [x1]
    5b24:	mov	x1, x0
    5b28:	ldr	x0, [x3]
    5b2c:	bl	ada8 <grub_err_printf>
    5b30:	mov	w0, #0x0                   	// #0
    5b34:	ldp	x29, x30, [sp], #16
    5b38:	ret
    5b3c:	adrp	x3, 0 <_start>
    5b40:	adrp	x1, 0 <_start>
    5b44:	ldr	x2, [x1]
    5b48:	mov	x1, x0
    5b4c:	ldr	x0, [x3]
    5b50:	bl	ada8 <grub_err_printf>
    5b54:	mov	w0, #0x0                   	// #0
    5b58:	ldp	x29, x30, [sp], #16
    5b5c:	ret
	...
    5b78:	stp	x29, x30, [sp, #-16]!
    5b7c:	adrp	x2, 0 <_start>
    5b80:	mov	x1, x0
    5b84:	mov	x29, sp
    5b88:	ldr	x0, [x2]
    5b8c:	bl	ada8 <grub_err_printf>
    5b90:	mov	w0, #0x0                   	// #0
    5b94:	ldp	x29, x30, [sp], #16
    5b98:	ret
    5b9c:	nop
	...
    5ba8:	stp	x29, x30, [sp, #-64]!
    5bac:	cmp	w1, #0x0
    5bb0:	mov	x29, sp
    5bb4:	stp	x19, x20, [sp, #16]
    5bb8:	b.le	5c68 <grub_unregister_command+0x1a8>
    5bbc:	ldr	x0, [x2]
    5bc0:	stp	x21, x22, [sp, #32]
    5bc4:	mov	x21, x2
    5bc8:	bl	8898 <grub_file_get_device_name>
    5bcc:	mov	x20, x0
    5bd0:	adrp	x1, 0 <_start>
    5bd4:	ldr	x19, [x1]
    5bd8:	ldr	w1, [x19]
    5bdc:	cbz	w1, 5bfc <grub_unregister_command+0x13c>
    5be0:	mov	x0, x20
    5be4:	bl	5828 <grub_free>
    5be8:	ldr	w0, [x19]
    5bec:	ldp	x19, x20, [sp, #16]
    5bf0:	ldp	x21, x22, [sp, #32]
    5bf4:	ldp	x29, x30, [sp], #64
    5bf8:	ret
    5bfc:	bl	60d0 <grub_device_open>
    5c00:	mov	x22, x0
    5c04:	cbz	x0, 5be0 <grub_unregister_command+0x120>
    5c08:	str	x23, [sp, #48]
    5c0c:	bl	9010 <grub_fs_probe>
    5c10:	mov	x23, x0
    5c14:	mov	w1, #0x29                  	// #41
    5c18:	ldr	x0, [x21]
    5c1c:	bl	9c00 <grub_strchr>
    5c20:	add	x1, x0, #0x1
    5c24:	cbz	x0, 5ce8 <grub_unregister_command+0x228>
    5c28:	ldrb	w0, [x1]
    5c2c:	cbnz	w0, 5cac <grub_unregister_command+0x1ec>
    5c30:	cbz	x20, 5d04 <grub_unregister_command+0x244>
    5c34:	ldr	w0, [x19]
    5c38:	cmp	w0, #0x8
    5c3c:	b.eq	5cf0 <grub_unregister_command+0x230>  // b.none
    5c40:	cbz	x23, 5cf8 <grub_unregister_command+0x238>
    5c44:	ldr	x2, [x23, #16]
    5c48:	adrp	x0, 0 <_start>
    5c4c:	mov	x1, x20
    5c50:	ldr	x0, [x0]
    5c54:	bl	ada8 <grub_err_printf>
    5c58:	mov	x0, x22
    5c5c:	bl	61d8 <grub_device_close>
    5c60:	ldr	x23, [sp, #48]
    5c64:	b	5be0 <grub_unregister_command+0x120>
    5c68:	adrp	x0, 0 <_start>
    5c6c:	mov	x1, #0x0                   	// #0
    5c70:	ldr	x0, [x0]
    5c74:	bl	6348 <grub_device_iterate>
    5c78:	adrp	x1, 0 <_start>
    5c7c:	adrp	x0, 0 <_start>
    5c80:	ldr	x1, [x1]
    5c84:	ldr	x0, [x0]
    5c88:	ldr	x1, [x1]
    5c8c:	blr	x1
    5c90:	bl	c318 <grub_refresh>
    5c94:	adrp	x0, 0 <_start>
    5c98:	ldr	x19, [x0]
    5c9c:	ldr	w0, [x19]
    5ca0:	ldp	x19, x20, [sp, #16]
    5ca4:	ldp	x29, x30, [sp], #64
    5ca8:	ret
    5cac:	cbz	x23, 5c58 <grub_unregister_command+0x198>
    5cb0:	adrp	x0, 0 <_start>
    5cb4:	mov	x3, #0x0                   	// #0
    5cb8:	ldr	x4, [x23, #24]
    5cbc:	ldr	x2, [x0]
    5cc0:	mov	x0, x22
    5cc4:	blr	x4
    5cc8:	adrp	x1, 0 <_start>
    5ccc:	adrp	x0, 0 <_start>
    5cd0:	ldr	x1, [x1]
    5cd4:	ldr	x0, [x0]
    5cd8:	ldr	x1, [x1]
    5cdc:	blr	x1
    5ce0:	bl	c318 <grub_refresh>
    5ce4:	b	5c58 <grub_unregister_command+0x198>
    5ce8:	ldr	x1, [x21]
    5cec:	b	5c28 <grub_unregister_command+0x168>
    5cf0:	str	wzr, [x19]
    5cf4:	b	5c40 <grub_unregister_command+0x180>
    5cf8:	adrp	x0, 0 <_start>
    5cfc:	ldr	x2, [x0]
    5d00:	b	5c48 <grub_unregister_command+0x188>
    5d04:	adrp	x1, 0 <_start>
    5d08:	mov	w0, #0x12                  	// #18
    5d0c:	ldr	x1, [x1]
    5d10:	bl	85c0 <grub_error>
    5d14:	b	5c58 <grub_unregister_command+0x198>
	...
    5d58:	cbz	w1, 5da4 <grub_unregister_command+0x2e4>
    5d5c:	stp	x29, x30, [sp, #-16]!
    5d60:	mov	x29, sp
    5d64:	ldr	x0, [x2]
    5d68:	mov	w2, #0x28                  	// #40
    5d6c:	ldrb	w1, [x0]
    5d70:	and	w3, w1, #0xfffffffb
    5d74:	cmp	w3, #0x2b
    5d78:	ccmp	w1, w2, #0x4, ne  // ne = any
    5d7c:	b.ne	5d98 <grub_unregister_command+0x2d8>  // b.any
    5d80:	bl	7f08 <grub_dl_load_file>
    5d84:	cbz	x0, 5d8c <grub_unregister_command+0x2cc>
    5d88:	bl	7300 <grub_dl_ref>
    5d8c:	mov	w0, #0x0                   	// #0
    5d90:	ldp	x29, x30, [sp], #16
    5d94:	ret
    5d98:	bl	7fd8 <grub_dl_load>
    5d9c:	cbnz	x0, 5d88 <grub_unregister_command+0x2c8>
    5da0:	b	5d8c <grub_unregister_command+0x2cc>
    5da4:	adrp	x1, 0 <_start>
    5da8:	mov	w0, #0x12                  	// #18
    5dac:	ldr	x1, [x1]
    5db0:	b	85c0 <grub_error>
    5db4:	nop
	...
    5dc0:	stp	x29, x30, [sp, #-48]!
    5dc4:	cmp	w1, #0x0
    5dc8:	mov	x29, sp
    5dcc:	stp	x19, x20, [sp, #16]
    5dd0:	b.le	5e14 <grub_unregister_command+0x354>
    5dd4:	ldr	x20, [x2]
    5dd8:	mov	w1, #0x3d                  	// #61
    5ddc:	mov	x0, x20
    5de0:	bl	9c00 <grub_strchr>
    5de4:	mov	x19, x0
    5de8:	cbz	x0, 5e68 <grub_unregister_command+0x3a8>
    5dec:	mov	x1, x0
    5df0:	mov	x0, x20
    5df4:	strb	wzr, [x1], #1
    5df8:	bl	81f8 <grub_env_set>
    5dfc:	mov	w0, #0x3d                  	// #61
    5e00:	strb	w0, [x19]
    5e04:	mov	w0, #0x0                   	// #0
    5e08:	ldp	x19, x20, [sp, #16]
    5e0c:	ldp	x29, x30, [sp], #48
    5e10:	ret
    5e14:	bl	8438 <grub_env_update_get_sorted>
    5e18:	mov	x19, x0
    5e1c:	cbz	x0, 5e04 <grub_unregister_command+0x344>
    5e20:	adrp	x0, 0 <_start>
    5e24:	str	x21, [sp, #32]
    5e28:	ldr	x21, [x0]
    5e2c:	nop
    5e30:	ldr	x20, [x19]
    5e34:	mov	x0, x20
    5e38:	bl	8378 <grub_env_get>
    5e3c:	mov	x1, x20
    5e40:	mov	x2, x0
    5e44:	mov	x0, x21
    5e48:	bl	ada8 <grub_err_printf>
    5e4c:	ldr	x19, [x19, #48]
    5e50:	cbnz	x19, 5e30 <grub_unregister_command+0x370>
    5e54:	mov	w0, #0x0                   	// #0
    5e58:	ldp	x19, x20, [sp, #16]
    5e5c:	ldr	x21, [sp, #32]
    5e60:	ldp	x29, x30, [sp], #48
    5e64:	ret
    5e68:	adrp	x1, 0 <_start>
    5e6c:	mov	w0, #0x12                  	// #18
    5e70:	ldp	x19, x20, [sp, #16]
    5e74:	ldp	x29, x30, [sp], #48
    5e78:	ldr	x1, [x1]
    5e7c:	b	85c0 <grub_error>
	...
    5e90:	cmp	w1, #0x0
    5e94:	b.le	5eb4 <grub_unregister_command+0x3f4>
    5e98:	stp	x29, x30, [sp, #-16]!
    5e9c:	mov	x29, sp
    5ea0:	ldr	x0, [x2]
    5ea4:	bl	83b0 <grub_env_unset>
    5ea8:	mov	w0, #0x0                   	// #0
    5eac:	ldp	x29, x30, [sp], #16
    5eb0:	ret
    5eb4:	adrp	x1, 0 <_start>
    5eb8:	mov	w0, #0x12                  	// #18
    5ebc:	ldr	x1, [x1]
    5ec0:	b	85c0 <grub_error>
    5ec4:	nop
	...

0000000000005ed0 <grub_register_core_commands>:
    5ed0:	stp	x29, x30, [sp, #-16]!
    5ed4:	adrp	x3, 0 <_start>
    5ed8:	adrp	x2, 0 <_start>
    5edc:	adrp	x1, 0 <_start>
    5ee0:	adrp	x0, 0 <_start>
    5ee4:	mov	x29, sp
    5ee8:	ldr	x3, [x3]
    5eec:	mov	w4, #0x0                   	// #0
    5ef0:	ldr	x2, [x2]
    5ef4:	ldr	x1, [x1]
    5ef8:	ldr	x0, [x0]
    5efc:	bl	5978 <grub_register_command_prio>
    5f00:	cbz	x0, 5f10 <grub_register_core_commands+0x40>
    5f04:	ldr	w1, [x0, #40]
    5f08:	orr	w1, w1, #0x200
    5f0c:	str	w1, [x0, #40]
    5f10:	adrp	x3, 0 <_start>
    5f14:	adrp	x2, 0 <_start>
    5f18:	adrp	x1, 0 <_start>
    5f1c:	adrp	x0, 0 <_start>
    5f20:	ldr	x3, [x3]
    5f24:	mov	w4, #0x0                   	// #0
    5f28:	ldr	x2, [x2]
    5f2c:	ldr	x1, [x1]
    5f30:	ldr	x0, [x0]
    5f34:	bl	5978 <grub_register_command_prio>
    5f38:	adrp	x3, 0 <_start>
    5f3c:	adrp	x2, 0 <_start>
    5f40:	adrp	x1, 0 <_start>
    5f44:	adrp	x0, 0 <_start>
    5f48:	ldr	x3, [x3]
    5f4c:	mov	w4, #0x0                   	// #0
    5f50:	ldr	x2, [x2]
    5f54:	ldr	x1, [x1]
    5f58:	ldr	x0, [x0]
    5f5c:	bl	5978 <grub_register_command_prio>
    5f60:	ldp	x29, x30, [sp], #16
    5f64:	adrp	x3, 0 <_start>
    5f68:	adrp	x2, 0 <_start>
    5f6c:	adrp	x1, 0 <_start>
    5f70:	adrp	x0, 0 <_start>
    5f74:	mov	w4, #0x0                   	// #0
    5f78:	ldr	x3, [x3]
    5f7c:	ldr	x2, [x2]
    5f80:	ldr	x1, [x1]
    5f84:	ldr	x0, [x0]
    5f88:	b	5978 <grub_register_command_prio>
    5f8c:	nop
	...
    6010:	stp	x29, x30, [sp, #-48]!
    6014:	mov	x29, sp
    6018:	stp	x19, x20, [sp, #16]
    601c:	mov	x20, x2
    6020:	stp	x21, x22, [sp, #32]
    6024:	mov	x22, x0
    6028:	mov	x21, x1
    602c:	mov	x0, #0x10                  	// #16
    6030:	bl	57d8 <grub_malloc>
    6034:	cbz	x0, 6094 <grub_register_core_commands+0x1c4>
    6038:	mov	x19, x0
    603c:	mov	x0, x21
    6040:	bl	b9f8 <grub_partition_get_name>
    6044:	mov	x21, x0
    6048:	cbz	x0, 60a8 <grub_register_core_commands+0x1d8>
    604c:	adrp	x0, 0 <_start>
    6050:	mov	x2, x21
    6054:	ldr	x1, [x22]
    6058:	ldr	x0, [x0]
    605c:	bl	b138 <grub_xasprintf>
    6060:	str	x0, [x19, #8]
    6064:	mov	x0, x21
    6068:	bl	5828 <grub_free>
    606c:	ldr	x0, [x19, #8]
    6070:	cbz	x0, 60a8 <grub_register_core_commands+0x1d8>
    6074:	ldr	x0, [x20, #16]
    6078:	str	x0, [x19]
    607c:	str	x19, [x20, #16]
    6080:	mov	w0, #0x0                   	// #0
    6084:	ldp	x19, x20, [sp, #16]
    6088:	ldp	x21, x22, [sp, #32]
    608c:	ldp	x29, x30, [sp], #48
    6090:	ret
    6094:	mov	w0, #0x1                   	// #1
    6098:	ldp	x19, x20, [sp, #16]
    609c:	ldp	x21, x22, [sp, #32]
    60a0:	ldp	x29, x30, [sp], #48
    60a4:	ret
    60a8:	mov	x0, x19
    60ac:	bl	5828 <grub_free>
    60b0:	mov	w0, #0x1                   	// #1
    60b4:	ldp	x19, x20, [sp, #16]
    60b8:	ldp	x21, x22, [sp, #32]
    60bc:	ldp	x29, x30, [sp], #48
    60c0:	ret
    60c4:	nop
	...

00000000000060d0 <grub_device_open>:
    60d0:	stp	x29, x30, [sp, #-32]!
    60d4:	mov	x29, sp
    60d8:	stp	x19, x20, [sp, #16]
    60dc:	mov	x20, x0
    60e0:	cbz	x0, 6160 <grub_device_open+0x90>
    60e4:	mov	x0, #0x10                  	// #16
    60e8:	bl	57d8 <grub_malloc>
    60ec:	mov	x19, x0
    60f0:	cbz	x0, 6144 <grub_device_open+0x74>
    60f4:	str	xzr, [x19, #8]
    60f8:	mov	x0, x20
    60fc:	bl	6a50 <grub_disk_open>
    6100:	str	x0, [x19]
    6104:	cbz	x0, 6118 <grub_device_open+0x48>
    6108:	mov	x0, x19
    610c:	ldp	x19, x20, [sp, #16]
    6110:	ldp	x29, x30, [sp], #32
    6114:	ret
    6118:	adrp	x0, 0 <_start>
    611c:	ldr	x0, [x0]
    6120:	ldr	x1, [x0]
    6124:	cbz	x1, 613c <grub_device_open+0x6c>
    6128:	adrp	x0, 0 <_start>
    612c:	ldr	x0, [x0]
    6130:	ldr	w2, [x0]
    6134:	cmp	w2, #0xc
    6138:	b.eq	619c <grub_device_open+0xcc>  // b.none
    613c:	ldr	x0, [x19, #8]
    6140:	cbnz	x0, 6108 <grub_device_open+0x38>
    6144:	mov	x0, x19
    6148:	mov	x19, #0x0                   	// #0
    614c:	bl	5828 <grub_free>
    6150:	mov	x0, x19
    6154:	ldp	x19, x20, [sp, #16]
    6158:	ldp	x29, x30, [sp], #32
    615c:	ret
    6160:	adrp	x0, 0 <_start>
    6164:	ldr	x19, [x0]
    6168:	mov	x0, x19
    616c:	bl	8378 <grub_env_get>
    6170:	mov	x20, x0
    6174:	cbz	x0, 6180 <grub_device_open+0xb0>
    6178:	ldrb	w0, [x0]
    617c:	cbnz	w0, 60e4 <grub_device_open+0x14>
    6180:	adrp	x1, 0 <_start>
    6184:	mov	x2, x19
    6188:	mov	w0, #0xd                   	// #13
    618c:	mov	x19, #0x0                   	// #0
    6190:	ldr	x1, [x1]
    6194:	bl	85c0 <grub_error>
    6198:	b	6144 <grub_device_open+0x74>
    619c:	str	wzr, [x0]
    61a0:	mov	x0, x20
    61a4:	blr	x1
    61a8:	str	x0, [x19, #8]
    61ac:	cbnz	x0, 6108 <grub_device_open+0x38>
    61b0:	b	6144 <grub_device_open+0x74>
    61b4:	nop
	...

00000000000061d8 <grub_device_close>:
    61d8:	stp	x29, x30, [sp, #-32]!
    61dc:	mov	x29, sp
    61e0:	str	x19, [sp, #16]
    61e4:	mov	x19, x0
    61e8:	ldr	x0, [x0]
    61ec:	cbz	x0, 61f4 <grub_device_close+0x1c>
    61f0:	bl	6998 <grub_disk_close>
    61f4:	ldr	x0, [x19, #8]
    61f8:	cbz	x0, 620c <grub_device_close+0x34>
    61fc:	ldr	x0, [x0]
    6200:	bl	5828 <grub_free>
    6204:	ldr	x0, [x19, #8]
    6208:	bl	5828 <grub_free>
    620c:	mov	x0, x19
    6210:	bl	5828 <grub_free>
    6214:	adrp	x0, 0 <_start>
    6218:	ldr	x19, [sp, #16]
    621c:	ldr	x0, [x0]
    6220:	ldp	x29, x30, [sp], #32
    6224:	ldr	w0, [x0]
    6228:	ret
    622c:	nop
	...
    6238:	stp	x29, x30, [sp, #-48]!
    623c:	mov	x29, sp
    6240:	stp	x21, x22, [sp, #32]
    6244:	mov	x21, x1
    6248:	ldp	x2, x1, [x1]
    624c:	stp	x19, x20, [sp, #16]
    6250:	mov	x20, x0
    6254:	mov	w19, #0x1                   	// #1
    6258:	blr	x2
    625c:	cbz	w0, 6274 <grub_device_close+0x9c>
    6260:	mov	w0, w19
    6264:	ldp	x19, x20, [sp, #16]
    6268:	ldp	x21, x22, [sp, #32]
    626c:	ldp	x29, x30, [sp], #48
    6270:	ret
    6274:	mov	w19, w0
    6278:	mov	x0, x20
    627c:	bl	60d0 <grub_device_open>
    6280:	mov	x20, x0
    6284:	cbz	x0, 6324 <grub_device_close+0x14c>
    6288:	ldr	x1, [x0]
    628c:	cbz	x1, 630c <grub_device_close+0x134>
    6290:	adrp	x3, 0 <_start>
    6294:	mov	x0, x1
    6298:	mov	x2, x21
    629c:	str	xzr, [x21, #16]
    62a0:	ldr	x1, [x3]
    62a4:	bl	b958 <grub_partition_iterate>
    62a8:	mov	x0, x20
    62ac:	bl	61d8 <grub_device_close>
    62b0:	adrp	x0, 0 <_start>
    62b4:	ldr	x20, [x21, #16]
    62b8:	ldr	x0, [x0]
    62bc:	str	wzr, [x0]
    62c0:	cbz	x20, 6260 <grub_device_close+0x88>
    62c4:	nop
    62c8:	mov	x22, x20
    62cc:	ldr	x20, [x20]
    62d0:	ldr	x0, [x22, #8]
    62d4:	cbnz	w19, 62e8 <grub_device_close+0x110>
    62d8:	ldp	x2, x1, [x21]
    62dc:	blr	x2
    62e0:	mov	w19, w0
    62e4:	ldr	x0, [x22, #8]
    62e8:	bl	5828 <grub_free>
    62ec:	mov	x0, x22
    62f0:	bl	5828 <grub_free>
    62f4:	cbnz	x20, 62c8 <grub_device_close+0xf0>
    62f8:	mov	w0, w19
    62fc:	ldp	x19, x20, [sp, #16]
    6300:	ldp	x21, x22, [sp, #32]
    6304:	ldp	x29, x30, [sp], #48
    6308:	ret
    630c:	bl	61d8 <grub_device_close>
    6310:	mov	w0, w19
    6314:	ldp	x19, x20, [sp, #16]
    6318:	ldp	x21, x22, [sp, #32]
    631c:	ldp	x29, x30, [sp], #48
    6320:	ret
    6324:	adrp	x0, 0 <_start>
    6328:	ldr	x0, [x0]
    632c:	str	wzr, [x0]
    6330:	b	6260 <grub_device_close+0x88>
    6334:	nop
	...

0000000000006348 <grub_device_iterate>:
    6348:	stp	x29, x30, [sp, #-80]!
    634c:	adrp	x2, 0 <_start>
    6350:	mov	x29, sp
    6354:	ldr	x2, [x2]
    6358:	stp	x21, x22, [sp, #32]
    635c:	adrp	x21, 0 <_start>
    6360:	mov	x22, x2
    6364:	stp	x19, x20, [sp, #16]
    6368:	mov	w20, #0x0                   	// #0
    636c:	stp	x0, x1, [sp, #56]
    6370:	str	xzr, [sp, #72]
    6374:	ldr	x19, [x22]
    6378:	cbz	x19, 63a4 <grub_device_iterate+0x5c>
    637c:	nop
    6380:	ldr	x3, [x19, #16]
    6384:	mov	w2, w20
    6388:	add	x1, sp, #0x38
    638c:	cbz	x3, 639c <grub_device_iterate+0x54>
    6390:	ldr	x0, [x21]
    6394:	blr	x3
    6398:	cbnz	w0, 63c4 <grub_device_iterate+0x7c>
    639c:	ldr	x19, [x19, #56]
    63a0:	cbnz	x19, 6380 <grub_device_iterate+0x38>
    63a4:	add	w20, w20, #0x1
    63a8:	cmp	w20, #0x3
    63ac:	b.ne	6374 <grub_device_iterate+0x2c>  // b.any
    63b0:	mov	w0, #0x0                   	// #0
    63b4:	ldp	x19, x20, [sp, #16]
    63b8:	ldp	x21, x22, [sp, #32]
    63bc:	ldp	x29, x30, [sp], #80
    63c0:	ret
    63c4:	mov	w0, #0x1                   	// #1
    63c8:	ldp	x19, x20, [sp, #16]
    63cc:	ldp	x21, x22, [sp, #32]
    63d0:	ldp	x29, x30, [sp], #80
    63d4:	ret
	...
    63e8:	ubfx	x7, x2, #6, #32
    63ec:	mov	x3, #0xc57b                	// #50555
    63f0:	movk	x3, #0x27, lsl #16
    63f4:	lsl	x5, x0, #19
    63f8:	mov	x4, #0xedb3                	// #60851
    63fc:	sub	x5, x5, x0
    6400:	madd	x3, x1, x3, x7
    6404:	movk	x4, #0x513c, lsl #16
    6408:	movk	x4, #0x906c, lsl #32
    640c:	adrp	x6, 0 <_start>
    6410:	add	x3, x3, x5
    6414:	movk	x4, #0xc0, lsl #48
    6418:	ldr	x6, [x6]
    641c:	umulh	x5, x3, x4
    6420:	sub	x4, x3, x5
    6424:	add	x4, x5, x4, lsr #1
    6428:	lsr	x4, x4, #9
    642c:	lsl	x5, x4, #8
    6430:	sub	x5, x5, x4
    6434:	add	x4, x4, x5, lsl #2
    6438:	sub	x3, x3, x4
    643c:	add	x3, x3, x3, lsl #2
    6440:	lsl	x3, x3, #3
    6444:	add	x4, x3, x6
    6448:	ldr	w3, [x3, x6]
    644c:	cmp	x3, x0
    6450:	b.ne	6474 <grub_device_iterate+0x12c>  // b.any
    6454:	ldr	x3, [x4, #8]
    6458:	mov	x0, #0x0                   	// #0
    645c:	cmp	x3, x1
    6460:	b.ne	6470 <grub_device_iterate+0x128>  // b.any
    6464:	ldr	x1, [x4, #16]
    6468:	cmp	x1, x2
    646c:	b.eq	647c <grub_device_iterate+0x134>  // b.none
    6470:	ret
    6474:	mov	x0, #0x0                   	// #0
    6478:	ret
    647c:	mov	w0, #0x1                   	// #1
    6480:	str	w0, [x4, #32]
    6484:	ldr	x0, [x4, #24]
    6488:	ret
    648c:	nop
	...
    6498:	ubfx	x7, x2, #6, #32
    649c:	mov	x3, #0xc57b                	// #50555
    64a0:	movk	x3, #0x27, lsl #16
    64a4:	lsl	x5, x0, #19
    64a8:	mov	x4, #0xedb3                	// #60851
    64ac:	sub	x5, x5, x0
    64b0:	madd	x3, x1, x3, x7
    64b4:	movk	x4, #0x513c, lsl #16
    64b8:	movk	x4, #0x906c, lsl #32
    64bc:	adrp	x6, 0 <_start>
    64c0:	add	x3, x3, x5
    64c4:	movk	x4, #0xc0, lsl #48
    64c8:	ldr	x6, [x6]
    64cc:	umulh	x5, x3, x4
    64d0:	sub	x4, x3, x5
    64d4:	add	x4, x5, x4, lsr #1
    64d8:	lsr	x4, x4, #9
    64dc:	lsl	x5, x4, #8
    64e0:	sub	x5, x5, x4
    64e4:	add	x4, x4, x5, lsl #2
    64e8:	sub	x3, x3, x4
    64ec:	add	x3, x3, x3, lsl #2
    64f0:	lsl	x3, x3, #3
    64f4:	add	x4, x3, x6
    64f8:	ldr	w3, [x3, x6]
    64fc:	cmp	x3, x0
    6500:	b.eq	6508 <grub_device_iterate+0x1c0>  // b.none
    6504:	ret
    6508:	ldr	x0, [x4, #8]
    650c:	cmp	x0, x1
    6510:	b.ne	6504 <grub_device_iterate+0x1bc>  // b.any
    6514:	ldr	x0, [x4, #16]
    6518:	cmp	x0, x2
    651c:	b.ne	6504 <grub_device_iterate+0x1bc>  // b.any
    6520:	str	wzr, [x4, #32]
    6524:	ret
	...
    6530:	stp	x29, x30, [sp, #-80]!
    6534:	mov	x4, #0xc57b                	// #50555
    6538:	movk	x4, #0x27, lsl #16
    653c:	mov	x29, sp
    6540:	stp	x21, x22, [sp, #32]
    6544:	mov	x21, x1
    6548:	ubfx	x1, x2, #6, #32
    654c:	mov	x5, #0xedb3                	// #60851
    6550:	stp	x23, x24, [sp, #48]
    6554:	mov	x24, x0
    6558:	madd	x4, x21, x4, x1
    655c:	lsl	x0, x0, #19
    6560:	sub	x0, x0, x24
    6564:	movk	x5, #0x513c, lsl #16
    6568:	add	x4, x4, x0
    656c:	movk	x5, #0x906c, lsl #32
    6570:	movk	x5, #0xc0, lsl #48
    6574:	stp	x19, x20, [sp, #16]
    6578:	mov	x20, x2
    657c:	umulh	x0, x4, x5
    6580:	adrp	x2, 0 <_start>
    6584:	mov	w1, #0x1                   	// #1
    6588:	sub	x5, x4, x0
    658c:	ldr	x22, [x2]
    6590:	add	x5, x0, x5, lsr #1
    6594:	lsr	x5, x5, #9
    6598:	lsl	x2, x5, #8
    659c:	sub	x2, x2, x5
    65a0:	add	x5, x5, x2, lsl #2
    65a4:	sub	x4, x4, x5
    65a8:	add	x4, x4, x4, lsl #2
    65ac:	lsl	x19, x4, #3
    65b0:	add	x23, x19, x22
    65b4:	ldr	x0, [x23, #24]
    65b8:	str	x25, [sp, #64]
    65bc:	str	w1, [x23, #32]
    65c0:	mov	x25, x3
    65c4:	bl	5828 <grub_free>
    65c8:	str	xzr, [x23, #24]
    65cc:	str	wzr, [x23, #32]
    65d0:	mov	x0, #0x8000                	// #32768
    65d4:	bl	57d8 <grub_malloc>
    65d8:	str	x0, [x23, #24]
    65dc:	cbz	x0, 6610 <grub_device_iterate+0x2c8>
    65e0:	mov	x1, x25
    65e4:	mov	x2, #0x8000                	// #32768
    65e8:	bl	9a40 <grub_memmove>
    65ec:	str	w24, [x19, x22]
    65f0:	stp	x21, x20, [x23, #8]
    65f4:	mov	w0, #0x0                   	// #0
    65f8:	ldp	x19, x20, [sp, #16]
    65fc:	ldp	x21, x22, [sp, #32]
    6600:	ldp	x23, x24, [sp, #48]
    6604:	ldr	x25, [sp, #64]
    6608:	ldp	x29, x30, [sp], #80
    660c:	ret
    6610:	adrp	x0, 0 <_start>
    6614:	ldp	x19, x20, [sp, #16]
    6618:	ldr	x0, [x0]
    661c:	ldp	x21, x22, [sp, #32]
    6620:	ldr	w0, [x0]
    6624:	ldp	x23, x24, [sp, #48]
    6628:	ldr	x25, [sp, #64]
    662c:	ldp	x29, x30, [sp], #80
    6630:	ret
    6634:	nop
	...
    6648:	stp	x29, x30, [sp, #-96]!
    664c:	mov	x29, sp
    6650:	stp	x19, x20, [sp, #16]
    6654:	mov	x19, x0
    6658:	mov	x20, x1
    665c:	ldr	x0, [x0, #8]
    6660:	stp	x21, x22, [sp, #32]
    6664:	mov	x22, x2
    6668:	mov	x2, x1
    666c:	mov	x21, x3
    6670:	ldr	w0, [x0, #8]
    6674:	ldr	x1, [x19, #32]
    6678:	stp	x23, x24, [sp, #48]
    667c:	mov	x23, x4
    6680:	stp	x25, x26, [sp, #64]
    6684:	sub	x25, x3, #0x1
    6688:	bl	63e8 <grub_device_iterate+0xa0>
    668c:	cbz	x0, 66f0 <grub_device_iterate+0x3a8>
    6690:	add	x1, x0, x22
    6694:	mov	x2, x21
    6698:	mov	x0, x23
    669c:	bl	9a40 <grub_memmove>
    66a0:	ldr	x0, [x19, #8]
    66a4:	mov	x2, x20
    66a8:	ldr	x1, [x19, #32]
    66ac:	ldr	w0, [x0, #8]
    66b0:	bl	6498 <grub_device_iterate+0x150>
    66b4:	ldr	x4, [x19, #48]
    66b8:	mov	w23, #0x0                   	// #0
    66bc:	cbz	x4, 66d4 <grub_device_iterate+0x38c>
    66c0:	ldr	x3, [x19, #56]
    66c4:	mov	w2, w21
    66c8:	add	x0, x20, x22, lsr #9
    66cc:	and	w1, w22, #0x1ff
    66d0:	blr	x4
    66d4:	mov	w0, w23
    66d8:	ldp	x19, x20, [sp, #16]
    66dc:	ldp	x21, x22, [sp, #32]
    66e0:	ldp	x23, x24, [sp, #48]
    66e4:	ldp	x25, x26, [sp, #64]
    66e8:	ldp	x29, x30, [sp], #96
    66ec:	ret
    66f0:	mov	x0, #0x8000                	// #32768
    66f4:	bl	57d8 <grub_malloc>
    66f8:	mov	x24, x0
    66fc:	cbz	x0, 6888 <grub_device_iterate+0x540>
    6700:	ldr	x0, [x19, #16]
    6704:	ldr	w2, [x19, #24]
    6708:	cmn	x0, #0x1
    670c:	sub	w1, w2, #0x9
    6710:	b.eq	67cc <grub_device_iterate+0x484>  // b.none
    6714:	add	x3, x20, #0x40
    6718:	lsl	x0, x0, x1
    671c:	cmp	x3, x0
    6720:	b.cc	67cc <grub_device_iterate+0x484>  // b.lo, b.ul, b.last
    6724:	mov	x0, x24
    6728:	stp	x27, x28, [sp, #80]
    672c:	bl	5828 <grub_free>
    6730:	ldr	w0, [x19, #24]
    6734:	mov	x1, #0x1                   	// #1
    6738:	add	x24, x20, x22, lsr #9
    673c:	adrp	x4, 0 <_start>
    6740:	sub	w3, w0, #0x9
    6744:	and	x26, x22, #0x1ff
    6748:	lsl	x2, x1, x0
    674c:	lsl	x1, x1, x3
    6750:	neg	x1, x1
    6754:	bic	x3, x24, x1
    6758:	and	x24, x1, x24
    675c:	ldr	x27, [x4]
    6760:	add	x26, x26, x3, lsl #9
    6764:	add	x2, x2, x26
    6768:	add	x25, x2, x25
    676c:	str	wzr, [x27]
    6770:	lsr	x25, x25, x0
    6774:	lsl	w0, w25, w0
    6778:	bl	57d8 <grub_malloc>
    677c:	mov	x28, x0
    6780:	cbz	x0, 6860 <grub_device_iterate+0x518>
    6784:	ldr	x4, [x19, #8]
    6788:	mov	x3, x0
    678c:	ldr	w1, [x19, #24]
    6790:	mov	w2, w25
    6794:	mov	x0, x19
    6798:	ldr	x4, [x4, #40]
    679c:	sub	w1, w1, #0x9
    67a0:	lsr	x1, x24, x1
    67a4:	blr	x4
    67a8:	cbnz	w0, 682c <grub_device_iterate+0x4e4>
    67ac:	add	x1, x28, x26
    67b0:	mov	x2, x21
    67b4:	mov	x0, x23
    67b8:	bl	9a40 <grub_memmove>
    67bc:	mov	x0, x28
    67c0:	bl	5828 <grub_free>
    67c4:	ldp	x27, x28, [sp, #80]
    67c8:	b	66b4 <grub_device_iterate+0x36c>
    67cc:	ldr	x4, [x19, #8]
    67d0:	mov	w0, #0xf                   	// #15
    67d4:	sub	w0, w0, w2
    67d8:	mov	w2, #0x1                   	// #1
    67dc:	mov	x3, x24
    67e0:	lsr	x1, x20, x1
    67e4:	ldr	x4, [x4, #40]
    67e8:	lsl	w2, w2, w0
    67ec:	mov	x0, x19
    67f0:	blr	x4
    67f4:	cbnz	w0, 6724 <grub_device_iterate+0x3dc>
    67f8:	mov	x2, x21
    67fc:	add	x1, x24, x22
    6800:	mov	x0, x23
    6804:	bl	9a40 <grub_memmove>
    6808:	ldr	x0, [x19, #8]
    680c:	mov	x3, x24
    6810:	ldr	x1, [x19, #32]
    6814:	mov	x2, x20
    6818:	ldr	w0, [x0, #8]
    681c:	bl	6530 <grub_device_iterate+0x1e8>
    6820:	mov	x0, x24
    6824:	bl	5828 <grub_free>
    6828:	b	66b4 <grub_device_iterate+0x36c>
    682c:	bl	8668 <grub_error_push>
    6830:	adrp	x1, 0 <_start>
    6834:	adrp	x2, 0 <_start>
    6838:	adrp	x0, 0 <_start>
    683c:	ldr	x3, [x1]
    6840:	mov	w1, #0x180                 	// #384
    6844:	ldr	x2, [x2]
    6848:	ldr	x0, [x0]
    684c:	ldr	x4, [x19]
    6850:	bl	ae68 <grub_real_dprintf>
    6854:	bl	8718 <grub_error_pop>
    6858:	mov	x0, x28
    685c:	bl	5828 <grub_free>
    6860:	ldr	w23, [x27]
    6864:	ldp	x27, x28, [sp, #80]
    6868:	cbz	w23, 66b4 <grub_device_iterate+0x36c>
    686c:	mov	w0, w23
    6870:	ldp	x19, x20, [sp, #16]
    6874:	ldp	x21, x22, [sp, #32]
    6878:	ldp	x23, x24, [sp, #48]
    687c:	ldp	x25, x26, [sp, #64]
    6880:	ldp	x29, x30, [sp], #96
    6884:	ret
    6888:	adrp	x0, 0 <_start>
    688c:	ldr	x0, [x0]
    6890:	ldr	w23, [x0]
    6894:	cbnz	w23, 686c <grub_device_iterate+0x524>
    6898:	b	66b4 <grub_device_iterate+0x36c>
    689c:	nop
	...

00000000000068c0 <grub_disk_cache_invalidate_all>:
    68c0:	stp	x29, x30, [sp, #-32]!
    68c4:	adrp	x0, 0 <_start>
    68c8:	mov	x29, sp
    68cc:	stp	x19, x20, [sp, #16]
    68d0:	ldr	x19, [x0]
    68d4:	mov	x0, #0x9f88                	// #40840
    68d8:	add	x20, x19, x0
    68dc:	b	68ec <grub_disk_cache_invalidate_all+0x2c>
    68e0:	add	x19, x19, #0x28
    68e4:	cmp	x19, x20
    68e8:	b.eq	6910 <grub_disk_cache_invalidate_all+0x50>  // b.none
    68ec:	ldr	x0, [x19]
    68f0:	cbz	x0, 68e0 <grub_disk_cache_invalidate_all+0x20>
    68f4:	ldr	w1, [x19, #8]
    68f8:	cbnz	w1, 68e0 <grub_disk_cache_invalidate_all+0x20>
    68fc:	bl	5828 <grub_free>
    6900:	str	xzr, [x19]
    6904:	add	x19, x19, #0x28
    6908:	cmp	x19, x20
    690c:	b.ne	68ec <grub_disk_cache_invalidate_all+0x2c>  // b.any
    6910:	ldp	x19, x20, [sp, #16]
    6914:	ldp	x29, x30, [sp], #32
    6918:	ret
    691c:	nop
	...

0000000000006928 <grub_disk_dev_register>:
    6928:	adrp	x1, 0 <_start>
    692c:	ldr	x1, [x1]
    6930:	ldr	x2, [x1]
    6934:	str	x0, [x1]
    6938:	str	x2, [x0, #56]
    693c:	ret
	...

0000000000006948 <grub_disk_dev_unregister>:
    6948:	adrp	x1, 0 <_start>
    694c:	ldr	x2, [x1]
    6950:	ldr	x1, [x2]
    6954:	cbz	x1, 6978 <grub_disk_dev_unregister+0x30>
    6958:	cmp	x1, x0
    695c:	b.ne	6968 <grub_disk_dev_unregister+0x20>  // b.any
    6960:	b	6980 <grub_disk_dev_unregister+0x38>
    6964:	b.eq	697c <grub_disk_dev_unregister+0x34>  // b.none
    6968:	mov	x2, x1
    696c:	ldr	x1, [x1, #56]
    6970:	cmp	x0, x1
    6974:	cbnz	x1, 6964 <grub_disk_dev_unregister+0x1c>
    6978:	ret
    697c:	add	x2, x2, #0x38
    6980:	ldr	x0, [x1, #56]
    6984:	str	x0, [x2]
    6988:	ret
    698c:	nop
	...

0000000000006998 <grub_disk_close>:
    6998:	stp	x29, x30, [sp, #-32]!
    699c:	adrp	x3, 0 <_start>
    69a0:	adrp	x2, 0 <_start>
    69a4:	mov	x29, sp
    69a8:	stp	x19, x20, [sp, #16]
    69ac:	mov	x20, x0
    69b0:	adrp	x0, 0 <_start>
    69b4:	ldr	x3, [x3]
    69b8:	mov	w1, #0x127                 	// #295
    69bc:	ldr	x0, [x0]
    69c0:	ldr	x2, [x2]
    69c4:	ldr	x4, [x20]
    69c8:	bl	ae68 <grub_real_dprintf>
    69cc:	ldr	x0, [x20, #8]
    69d0:	cbz	x0, 69e4 <grub_disk_close+0x4c>
    69d4:	ldr	x1, [x0, #32]
    69d8:	cbz	x1, 69e4 <grub_disk_close+0x4c>
    69dc:	mov	x0, x20
    69e0:	blr	x1
    69e4:	bl	5908 <grub_get_time_ms>
    69e8:	adrp	x1, 0 <_start>
    69ec:	ldr	x19, [x20, #40]
    69f0:	ldr	x1, [x1]
    69f4:	str	x0, [x1]
    69f8:	cbz	x19, 6a14 <grub_disk_close+0x7c>
    69fc:	nop
    6a00:	mov	x0, x19
    6a04:	ldr	x19, [x19, #40]
    6a08:	bl	5828 <grub_free>
    6a0c:	str	x19, [x20, #40]
    6a10:	cbnz	x19, 6a00 <grub_disk_close+0x68>
    6a14:	ldr	x0, [x20]
    6a18:	bl	5828 <grub_free>
    6a1c:	mov	x0, x20
    6a20:	ldp	x19, x20, [sp, #16]
    6a24:	ldp	x29, x30, [sp], #32
    6a28:	b	5828 <grub_free>
    6a2c:	nop
	...

0000000000006a50 <grub_disk_open>:
    6a50:	stp	x29, x30, [sp, #-96]!
    6a54:	adrp	x3, 0 <_start>
    6a58:	adrp	x2, 0 <_start>
    6a5c:	mov	x29, sp
    6a60:	adrp	x1, 0 <_start>
    6a64:	stp	x23, x24, [sp, #48]
    6a68:	mov	x4, x0
    6a6c:	ldr	x24, [x3]
    6a70:	stp	x25, x26, [sp, #64]
    6a74:	mov	x23, x0
    6a78:	ldr	x3, [x2]
    6a7c:	mov	x2, x24
    6a80:	ldr	x25, [x1]
    6a84:	mov	w1, #0xc4                  	// #196
    6a88:	stp	x21, x22, [sp, #32]
    6a8c:	mov	x0, x25
    6a90:	bl	ae68 <grub_real_dprintf>
    6a94:	mov	x0, #0x48                  	// #72
    6a98:	bl	57e8 <grub_zalloc>
    6a9c:	mov	x21, x0
    6aa0:	cbz	x0, 6b54 <grub_disk_open+0x104>
    6aa4:	mov	x1, x23
    6aa8:	mov	x0, #0x9                   	// #9
    6aac:	stp	x19, x20, [sp, #16]
    6ab0:	movk	x0, #0x20, lsl #32
    6ab4:	str	x27, [sp, #80]
    6ab8:	str	x0, [x21, #24]
    6abc:	ldrb	w2, [x1], #1
    6ac0:	cbz	w2, 6b08 <grub_disk_open+0xb8>
    6ac4:	mov	x19, x23
    6ac8:	b	6ae4 <grub_disk_open+0x94>
    6acc:	cmp	w2, #0x2c
    6ad0:	b.eq	6b28 <grub_disk_open+0xd8>  // b.none
    6ad4:	mov	x19, x1
    6ad8:	mov	x1, x19
    6adc:	ldrb	w2, [x1], #1
    6ae0:	cbz	w2, 6b08 <grub_disk_open+0xb8>
    6ae4:	cmp	w2, #0x5c
    6ae8:	b.ne	6acc <grub_disk_open+0x7c>  // b.any
    6aec:	ldrb	w0, [x19, #1]
    6af0:	add	x19, x19, #0x2
    6af4:	cmp	w0, #0x2c
    6af8:	csel	x19, x19, x1, eq  // eq = none
    6afc:	mov	x1, x19
    6b00:	ldrb	w2, [x1], #1
    6b04:	cbnz	w2, 6ae4 <grub_disk_open+0x94>
    6b08:	mov	x0, x23
    6b0c:	bl	a598 <grub_strdup>
    6b10:	str	x0, [x21]
    6b14:	cbz	x0, 6b3c <grub_disk_open+0xec>
    6b18:	mov	x26, x23
    6b1c:	mov	w27, #0x0                   	// #0
    6b20:	mov	x19, #0x0                   	// #0
    6b24:	b	6b94 <grub_disk_open+0x144>
    6b28:	sub	x20, x19, x23
    6b2c:	add	x0, x20, #0x1
    6b30:	bl	57d8 <grub_malloc>
    6b34:	mov	x26, x0
    6b38:	cbnz	x0, 6b6c <grub_disk_open+0x11c>
    6b3c:	adrp	x0, 0 <_start>
    6b40:	ldr	x22, [x0]
    6b44:	ldr	w0, [x22]
    6b48:	cbnz	w0, 6c60 <grub_disk_open+0x210>
    6b4c:	ldp	x19, x20, [sp, #16]
    6b50:	ldr	x27, [sp, #80]
    6b54:	mov	x0, x21
    6b58:	ldp	x21, x22, [sp, #32]
    6b5c:	ldp	x23, x24, [sp, #48]
    6b60:	ldp	x25, x26, [sp, #64]
    6b64:	ldp	x29, x30, [sp], #96
    6b68:	ret
    6b6c:	mov	x2, x20
    6b70:	mov	x1, x23
    6b74:	bl	9a40 <grub_memmove>
    6b78:	strb	wzr, [x26, x20]
    6b7c:	mov	x0, x26
    6b80:	bl	a598 <grub_strdup>
    6b84:	str	x0, [x21]
    6b88:	cmp	x23, x26
    6b8c:	cset	w27, ne  // ne = any
    6b90:	cbz	x0, 6c9c <grub_disk_open+0x24c>
    6b94:	adrp	x0, 0 <_start>
    6b98:	ldr	x0, [x0]
    6b9c:	ldr	x20, [x0]
    6ba0:	adrp	x0, 0 <_start>
    6ba4:	ldr	x22, [x0]
    6ba8:	cbnz	x20, 6bc8 <grub_disk_open+0x178>
    6bac:	b	6c3c <grub_disk_open+0x1ec>
    6bb0:	ldr	w0, [x22]
    6bb4:	cmp	w0, #0xc
    6bb8:	b.ne	6c2c <grub_disk_open+0x1dc>  // b.any
    6bbc:	ldr	x20, [x20, #56]
    6bc0:	str	wzr, [x22]
    6bc4:	cbz	x20, 6c3c <grub_disk_open+0x1ec>
    6bc8:	ldr	x2, [x20, #24]
    6bcc:	mov	x1, x21
    6bd0:	mov	x0, x26
    6bd4:	blr	x2
    6bd8:	cbnz	w0, 6bb0 <grub_disk_open+0x160>
    6bdc:	ldr	w0, [x21, #24]
    6be0:	sub	w1, w0, #0x9
    6be4:	cmp	w1, #0x6
    6be8:	b.hi	6ca8 <grub_disk_open+0x258>  // b.pmore
    6bec:	str	x20, [x21, #8]
    6bf0:	cbz	x19, 6c08 <grub_disk_open+0x1b8>
    6bf4:	add	x1, x19, #0x1
    6bf8:	mov	x0, x21
    6bfc:	bl	b790 <grub_partition_probe>
    6c00:	str	x0, [x21, #40]
    6c04:	cbz	x0, 6cc4 <grub_disk_open+0x274>
    6c08:	bl	5908 <grub_get_time_ms>
    6c0c:	mov	x19, x0
    6c10:	adrp	x1, 0 <_start>
    6c14:	ldr	x20, [x1]
    6c18:	ldr	x0, [x20]
    6c1c:	add	x0, x0, #0x7d0
    6c20:	cmp	x0, x19
    6c24:	b.cc	6c54 <grub_disk_open+0x204>  // b.lo, b.ul, b.last
    6c28:	str	x19, [x20]
    6c2c:	cbz	w27, 6b44 <grub_disk_open+0xf4>
    6c30:	mov	x0, x26
    6c34:	bl	5828 <grub_free>
    6c38:	b	6b44 <grub_disk_open+0xf4>
    6c3c:	adrp	x1, 0 <_start>
    6c40:	mov	x2, x23
    6c44:	mov	w0, #0xc                   	// #12
    6c48:	ldr	x1, [x1]
    6c4c:	bl	85c0 <grub_error>
    6c50:	b	6c2c <grub_disk_open+0x1dc>
    6c54:	bl	68c0 <grub_disk_cache_invalidate_all>
    6c58:	str	x19, [x20]
    6c5c:	b	6c2c <grub_disk_open+0x1dc>
    6c60:	bl	8668 <grub_error_push>
    6c64:	adrp	x0, 0 <_start>
    6c68:	mov	x4, x23
    6c6c:	mov	x2, x24
    6c70:	mov	w1, #0x119                 	// #281
    6c74:	ldr	x3, [x0]
    6c78:	mov	x0, x25
    6c7c:	bl	ae68 <grub_real_dprintf>
    6c80:	bl	8718 <grub_error_pop>
    6c84:	mov	x0, x21
    6c88:	mov	x21, #0x0                   	// #0
    6c8c:	bl	6998 <grub_disk_close>
    6c90:	ldp	x19, x20, [sp, #16]
    6c94:	ldr	x27, [sp, #80]
    6c98:	b	6b54 <grub_disk_open+0x104>
    6c9c:	adrp	x0, 0 <_start>
    6ca0:	ldr	x22, [x0]
    6ca4:	b	6c2c <grub_disk_open+0x1dc>
    6ca8:	adrp	x1, 0 <_start>
    6cac:	mov	w2, #0x1                   	// #1
    6cb0:	lsl	w2, w2, w0
    6cb4:	mov	w0, #0x18                  	// #24
    6cb8:	ldr	x1, [x1]
    6cbc:	bl	85c0 <grub_error>
    6cc0:	b	6c2c <grub_disk_open+0x1dc>
    6cc4:	adrp	x1, 0 <_start>
    6cc8:	mov	w0, #0xc                   	// #12
    6ccc:	ldr	x1, [x1]
    6cd0:	bl	85c0 <grub_error>
    6cd4:	b	6c2c <grub_disk_open+0x1dc>
	...

0000000000006d28 <grub_disk_read>:
    6d28:	stp	x29, x30, [sp, #-96]!
    6d2c:	mov	x29, sp
    6d30:	stp	x27, x28, [sp, #80]
    6d34:	mov	x27, x0
    6d38:	ldr	x0, [x0, #40]
    6d3c:	stp	x19, x20, [sp, #16]
    6d40:	and	x19, x2, #0x1ff
    6d44:	stp	x21, x22, [sp, #32]
    6d48:	add	x22, x1, x2, lsr #9
    6d4c:	stp	x23, x24, [sp, #48]
    6d50:	mov	x23, x3
    6d54:	mov	x24, x4
    6d58:	cbz	x0, 6f70 <grub_disk_read+0x248>
    6d5c:	add	x4, x19, #0x1ff
    6d60:	add	x4, x4, x3
    6d64:	lsr	x4, x4, #9
    6d68:	b	6d80 <grub_disk_read+0x58>
    6d6c:	cmp	x2, x4
    6d70:	b.cc	6d8c <grub_disk_read+0x64>  // b.lo, b.ul, b.last
    6d74:	ldr	x0, [x0, #40]
    6d78:	add	x22, x22, x3
    6d7c:	cbz	x0, 6f70 <grub_disk_read+0x248>
    6d80:	ldp	x3, x1, [x0, #8]
    6d84:	subs	x2, x1, x22
    6d88:	b.hi	6d6c <grub_disk_read+0x44>  // b.pmore
    6d8c:	adrp	x1, 0 <_start>
    6d90:	mov	w0, #0xb                   	// #11
    6d94:	ldr	x1, [x1]
    6d98:	bl	85c0 <grub_error>
    6d9c:	cbnz	w0, 6fc0 <grub_disk_read+0x298>
    6da0:	and	x0, x22, #0x3f
    6da4:	orr	x1, x0, x19
    6da8:	cbz	x1, 6e7c <grub_disk_read+0x154>
    6dac:	add	x2, x19, x0, lsl #9
    6db0:	mov	x20, #0x8000                	// #32768
    6db4:	sub	x20, x20, x2
    6db8:	mov	x4, x24
    6dbc:	cmp	x23, x20
    6dc0:	and	x1, x22, #0xffffffffffffffc0
    6dc4:	csel	x20, x23, x20, ls  // ls = plast
    6dc8:	mov	x0, x27
    6dcc:	mov	x3, x20
    6dd0:	bl	6648 <grub_device_iterate+0x300>
    6dd4:	cbnz	w0, 6e64 <grub_disk_read+0x13c>
    6dd8:	add	x19, x20, x19
    6ddc:	add	x24, x24, x20
    6de0:	sub	x23, x23, x20
    6de4:	stp	x25, x26, [sp, #64]
    6de8:	add	x22, x22, x19, lsr #9
    6dec:	mov	x25, #0x7fff                	// #32767
    6df0:	cmp	x23, x25
    6df4:	b.ls	6e50 <grub_disk_read+0x128>  // b.plast
    6df8:	ldr	w1, [x27, #28]
    6dfc:	lsr	x8, x23, #15
    6e00:	mov	x21, x22
    6e04:	mov	x19, #0x0                   	// #0
    6e08:	b	6e38 <grub_disk_read+0x110>
    6e0c:	ldr	x0, [x27, #8]
    6e10:	ldr	x1, [x27, #32]
    6e14:	ldr	w0, [x0, #8]
    6e18:	bl	63e8 <grub_device_iterate+0xa0>
    6e1c:	mov	x20, x0
    6e20:	cbnz	x0, 6e84 <grub_disk_read+0x15c>
    6e24:	add	x19, x19, #0x1
    6e28:	add	x21, x21, #0x40
    6e2c:	cmp	x8, x19
    6e30:	b.eq	6eac <grub_disk_read+0x184>  // b.none
    6e34:	ldr	w1, [x27, #28]
    6e38:	mov	x2, x21
    6e3c:	cmp	x1, x19
    6e40:	b.hi	6e0c <grub_disk_read+0xe4>  // b.pmore
    6e44:	cbz	x19, 6e00 <grub_disk_read+0xd8>
    6e48:	mov	x20, #0x0                   	// #0
    6e4c:	b	6eac <grub_disk_read+0x184>
    6e50:	cbnz	x23, 7018 <grub_disk_read+0x2f0>
    6e54:	adrp	x0, 0 <_start>
    6e58:	ldp	x25, x26, [sp, #64]
    6e5c:	ldr	x0, [x0]
    6e60:	ldr	w0, [x0]
    6e64:	ldp	x19, x20, [sp, #16]
    6e68:	ldp	x21, x22, [sp, #32]
    6e6c:	ldp	x23, x24, [sp, #48]
    6e70:	ldp	x27, x28, [sp, #80]
    6e74:	ldp	x29, x30, [sp], #96
    6e78:	ret
    6e7c:	stp	x25, x26, [sp, #64]
    6e80:	b	6dec <grub_disk_read+0xc4>
    6e84:	mov	x1, x0
    6e88:	mov	x2, #0x8000                	// #32768
    6e8c:	add	x0, x24, x19, lsl #15
    6e90:	bl	9a40 <grub_memmove>
    6e94:	ldr	x0, [x27, #8]
    6e98:	mov	x2, x21
    6e9c:	ldr	x1, [x27, #32]
    6ea0:	ldr	w0, [x0, #8]
    6ea4:	bl	6498 <grub_device_iterate+0x150>
    6ea8:	cbz	x19, 6f44 <grub_disk_read+0x21c>
    6eac:	ldr	x2, [x27, #8]
    6eb0:	mov	x3, x24
    6eb4:	ldr	w1, [x27, #24]
    6eb8:	mov	x0, x27
    6ebc:	ldr	x4, [x2, #40]
    6ec0:	mov	w2, #0xf                   	// #15
    6ec4:	sub	w2, w2, w1
    6ec8:	sub	w1, w1, #0x9
    6ecc:	lsl	x2, x19, x2
    6ed0:	lsr	x1, x22, x1
    6ed4:	blr	x4
    6ed8:	cbnz	w0, 7034 <grub_disk_read+0x30c>
    6edc:	mov	x26, x24
    6ee0:	mov	x28, x22
    6ee4:	mov	x21, #0x0                   	// #0
    6ee8:	ldr	x0, [x27, #8]
    6eec:	mov	x3, x26
    6ef0:	ldr	x1, [x27, #32]
    6ef4:	mov	x2, x28
    6ef8:	ldr	w0, [x0, #8]
    6efc:	add	x21, x21, #0x1
    6f00:	add	x26, x26, #0x8, lsl #12
    6f04:	add	x28, x28, #0x40
    6f08:	bl	6530 <grub_device_iterate+0x1e8>
    6f0c:	cmp	x21, x19
    6f10:	b.cc	6ee8 <grub_disk_read+0x1c0>  // b.lo, b.ul, b.last
    6f14:	ldr	x4, [x27, #48]
    6f18:	cbz	x4, 6f30 <grub_disk_read+0x208>
    6f1c:	ldr	x3, [x27, #56]
    6f20:	lsl	w2, w19, #15
    6f24:	mov	x0, x22
    6f28:	mov	w1, #0x0                   	// #0
    6f2c:	blr	x4
    6f30:	lsl	x0, x19, #15
    6f34:	add	x22, x22, x19, lsl #6
    6f38:	sub	x23, x23, x0
    6f3c:	add	x24, x24, x0
    6f40:	cbz	x20, 6df0 <grub_disk_read+0xc8>
    6f44:	ldr	x4, [x27, #48]
    6f48:	cbz	x4, 6f60 <grub_disk_read+0x238>
    6f4c:	ldr	x3, [x27, #56]
    6f50:	mov	x0, x22
    6f54:	mov	w2, #0x8000                	// #32768
    6f58:	mov	w1, #0x0                   	// #0
    6f5c:	blr	x4
    6f60:	add	x22, x22, #0x40
    6f64:	add	x24, x24, #0x8, lsl #12
    6f68:	sub	x23, x23, #0x8, lsl #12
    6f6c:	b	6df0 <grub_disk_read+0xc8>
    6f70:	ldr	w1, [x27, #24]
    6f74:	mov	x2, #0x8000000000000       	// #2251799813685248
    6f78:	ldr	x0, [x27, #16]
    6f7c:	sub	w1, w1, #0x9
    6f80:	lsl	x0, x0, x1
    6f84:	cmp	x0, x2
    6f88:	csel	x0, x0, x2, ls  // ls = plast
    6f8c:	cmp	x0, x22
    6f90:	b.ls	6fa8 <grub_disk_read+0x280>  // b.plast
    6f94:	add	x1, x19, #0x1ff
    6f98:	sub	x0, x0, x22
    6f9c:	add	x1, x1, x23
    6fa0:	cmp	x0, x1, lsr #9
    6fa4:	b.cs	6da0 <grub_disk_read+0x78>  // b.hs, b.nlast
    6fa8:	adrp	x1, 0 <_start>
    6fac:	mov	w0, #0xb                   	// #11
    6fb0:	ldr	x2, [x27]
    6fb4:	ldr	x1, [x1]
    6fb8:	bl	85c0 <grub_error>
    6fbc:	cbz	w0, 6da0 <grub_disk_read+0x78>
    6fc0:	bl	8668 <grub_error_push>
    6fc4:	adrp	x1, 0 <_start>
    6fc8:	adrp	x3, 0 <_start>
    6fcc:	adrp	x2, 0 <_start>
    6fd0:	adrp	x0, 0 <_start>
    6fd4:	ldr	x5, [x1]
    6fd8:	mov	x4, x22
    6fdc:	ldr	x3, [x3]
    6fe0:	mov	w1, #0x1a4                 	// #420
    6fe4:	ldr	x2, [x2]
    6fe8:	ldr	x0, [x0]
    6fec:	bl	ae68 <grub_real_dprintf>
    6ff0:	bl	8718 <grub_error_pop>
    6ff4:	adrp	x0, 0 <_start>
    6ff8:	ldp	x19, x20, [sp, #16]
    6ffc:	ldr	x0, [x0]
    7000:	ldp	x21, x22, [sp, #32]
    7004:	ldr	w0, [x0]
    7008:	ldp	x23, x24, [sp, #48]
    700c:	ldp	x27, x28, [sp, #80]
    7010:	ldp	x29, x30, [sp], #96
    7014:	ret
    7018:	mov	x4, x24
    701c:	mov	x3, x23
    7020:	mov	x1, x22
    7024:	mov	x0, x27
    7028:	mov	x2, #0x0                   	// #0
    702c:	bl	6648 <grub_device_iterate+0x300>
    7030:	cbz	w0, 6e54 <grub_disk_read+0x12c>
    7034:	ldp	x19, x20, [sp, #16]
    7038:	ldp	x21, x22, [sp, #32]
    703c:	ldp	x23, x24, [sp, #48]
    7040:	ldp	x25, x26, [sp, #64]
    7044:	ldp	x27, x28, [sp, #80]
    7048:	ldp	x29, x30, [sp], #96
    704c:	ret
	...

0000000000007088 <grub_disk_get_size>:
    7088:	mov	x1, x0
    708c:	ldr	x0, [x0, #40]
    7090:	cbz	x0, 709c <grub_disk_get_size+0x14>
    7094:	ldr	x0, [x0, #16]
    7098:	ret
    709c:	ldr	x0, [x1, #16]
    70a0:	cmn	x0, #0x1
    70a4:	b.eq	7098 <grub_disk_get_size+0x10>  // b.none
    70a8:	ldr	w1, [x1, #24]
    70ac:	sub	w1, w1, #0x9
    70b0:	lsl	x0, x0, x1
    70b4:	ret
    70b8:	stp	x29, x30, [sp, #-64]!
    70bc:	mov	x29, sp
    70c0:	stp	x19, x20, [sp, #16]
    70c4:	mov	x19, x0
    70c8:	ldrh	w0, [x0, #62]
    70cc:	stp	x21, x22, [sp, #32]
    70d0:	mov	x22, x1
    70d4:	ldrh	w3, [x19, #58]
    70d8:	ldr	x1, [x19, #40]
    70dc:	ldrh	w2, [x19, #60]
    70e0:	mul	w0, w0, w3
    70e4:	add	x1, x19, x1
    70e8:	str	x23, [sp, #48]
    70ec:	add	x0, x1, w0, sxtw
    70f0:	ldr	x23, [x0, #24]
    70f4:	cbz	w2, 714c <grub_disk_get_size+0xc4>
    70f8:	mov	x20, x1
    70fc:	mov	w21, #0x0                   	// #0
    7100:	b	7118 <grub_disk_get_size+0x90>
    7104:	ldrh	w2, [x19, #58]
    7108:	ldrh	w0, [x19, #60]
    710c:	add	x20, x20, x2
    7110:	cmp	w0, w21
    7114:	b.ls	714c <grub_disk_get_size+0xc4>  // b.plast
    7118:	ldr	w0, [x20]
    711c:	add	w21, w21, #0x1
    7120:	mov	x1, x22
    7124:	add	x0, x0, x23
    7128:	add	x0, x19, x0
    712c:	bl	9b60 <grub_strcmp>
    7130:	cbnz	w0, 7104 <grub_disk_get_size+0x7c>
    7134:	mov	x0, x20
    7138:	ldp	x19, x20, [sp, #16]
    713c:	ldp	x21, x22, [sp, #32]
    7140:	ldr	x23, [sp, #48]
    7144:	ldp	x29, x30, [sp], #64
    7148:	ret
    714c:	mov	x20, #0x0                   	// #0
    7150:	mov	x0, x20
    7154:	ldp	x19, x20, [sp, #16]
    7158:	ldp	x21, x22, [sp, #32]
    715c:	ldr	x23, [sp, #48]
    7160:	ldp	x29, x30, [sp], #64
    7164:	ret

0000000000007168 <grub_dl_add>:
    7168:	stp	x29, x30, [sp, #-48]!
    716c:	adrp	x1, 0 <_start>
    7170:	mov	x29, sp
    7174:	stp	x19, x20, [sp, #16]
    7178:	mov	x20, x0
    717c:	ldr	x0, [x1]
    7180:	ldr	x19, [x0]
    7184:	str	x21, [sp, #32]
    7188:	ldr	x21, [x20]
    718c:	cbnz	x19, 719c <grub_dl_add+0x34>
    7190:	b	71cc <grub_dl_add+0x64>
    7194:	ldr	x19, [x19, #112]
    7198:	cbz	x19, 71cc <grub_dl_add+0x64>
    719c:	ldr	x1, [x19]
    71a0:	mov	x0, x21
    71a4:	bl	9b60 <grub_strcmp>
    71a8:	cbnz	w0, 7194 <grub_dl_add+0x2c>
    71ac:	adrp	x1, 0 <_start>
    71b0:	mov	w0, #0x2                   	// #2
    71b4:	ldr	x2, [x20]
    71b8:	ldp	x19, x20, [sp, #16]
    71bc:	ldr	x21, [sp, #32]
    71c0:	ldp	x29, x30, [sp], #48
    71c4:	ldr	x1, [x1]
    71c8:	b	85c0 <grub_error>
    71cc:	mov	w0, #0x0                   	// #0
    71d0:	ldp	x19, x20, [sp, #16]
    71d4:	ldr	x21, [sp, #32]
    71d8:	ldp	x29, x30, [sp], #48
    71dc:	ret
	...

00000000000071f0 <grub_dl_register_symbol>:
    71f0:	stp	x29, x30, [sp, #-64]!
    71f4:	mov	x29, sp
    71f8:	stp	x19, x20, [sp, #16]
    71fc:	mov	x19, x0
    7200:	mov	x0, #0x28                  	// #40
    7204:	stp	x21, x22, [sp, #32]
    7208:	mov	w22, w2
    720c:	mov	x21, x3
    7210:	str	x23, [sp, #48]
    7214:	mov	x23, x1
    7218:	bl	57d8 <grub_malloc>
    721c:	cbz	x0, 72c4 <grub_dl_register_symbol+0xd4>
    7220:	mov	x20, x0
    7224:	cbz	x21, 72b4 <grub_dl_register_symbol+0xc4>
    7228:	mov	x0, x19
    722c:	bl	a598 <grub_strdup>
    7230:	str	x0, [x20, #8]
    7234:	cbz	x0, 72bc <grub_dl_register_symbol+0xcc>
    7238:	str	x23, [x20, #16]
    723c:	str	w22, [x20, #24]
    7240:	str	x21, [x20, #32]
    7244:	ldrb	w3, [x19]
    7248:	cbz	w3, 72e4 <grub_dl_register_symbol+0xf4>
    724c:	mov	w1, #0x0                   	// #0
    7250:	add	w2, w1, w1, lsl #10
    7254:	add	w2, w3, w2, lsl #6
    7258:	ldrb	w3, [x19, #1]!
    725c:	sub	w1, w2, w1
    7260:	cbnz	w3, 7250 <grub_dl_register_symbol+0x60>
    7264:	add	w1, w1, w1, lsr #5
    7268:	mov	w0, #0x21b3                	// #8627
    726c:	movk	w0, #0x80c1, lsl #16
    7270:	mov	w2, #0x1fd                 	// #509
    7274:	umull	x0, w1, w0
    7278:	lsr	x0, x0, #40
    727c:	msub	w0, w0, w2, w1
    7280:	adrp	x2, 0 <_start>
    7284:	mov	w1, w0
    7288:	mov	w0, #0x0                   	// #0
    728c:	ldr	x2, [x2]
    7290:	ldp	x21, x22, [sp, #32]
    7294:	add	x2, x2, #0x8
    7298:	ldr	x23, [sp, #48]
    729c:	ldr	x3, [x2, x1, lsl #3]
    72a0:	str	x3, [x20]
    72a4:	str	x20, [x2, x1, lsl #3]
    72a8:	ldp	x19, x20, [sp, #16]
    72ac:	ldp	x29, x30, [sp], #64
    72b0:	ret
    72b4:	str	x19, [x0, #8]
    72b8:	b	7238 <grub_dl_register_symbol+0x48>
    72bc:	mov	x0, x20
    72c0:	bl	5828 <grub_free>
    72c4:	adrp	x0, 0 <_start>
    72c8:	ldp	x19, x20, [sp, #16]
    72cc:	ldr	x0, [x0]
    72d0:	ldp	x21, x22, [sp, #32]
    72d4:	ldr	w0, [x0]
    72d8:	ldr	x23, [sp, #48]
    72dc:	ldp	x29, x30, [sp], #64
    72e0:	ret
    72e4:	mov	w0, #0x0                   	// #0
    72e8:	b	7280 <grub_dl_register_symbol+0x90>
    72ec:	nop
	...

0000000000007300 <grub_dl_ref>:
    7300:	cbz	x0, 7344 <grub_dl_ref+0x44>
    7304:	stp	x29, x30, [sp, #-32]!
    7308:	mov	x29, sp
    730c:	stp	x19, x20, [sp, #16]
    7310:	mov	x20, x0
    7314:	ldr	x19, [x0, #16]
    7318:	cbz	x19, 732c <grub_dl_ref+0x2c>
    731c:	ldr	x0, [x19, #8]
    7320:	bl	7300 <grub_dl_ref>
    7324:	ldr	x19, [x19]
    7328:	cbnz	x19, 731c <grub_dl_ref+0x1c>
    732c:	ldr	w0, [x20, #8]
    7330:	add	w0, w0, #0x1
    7334:	str	w0, [x20, #8]
    7338:	ldp	x19, x20, [sp, #16]
    733c:	ldp	x29, x30, [sp], #32
    7340:	ret
    7344:	mov	w0, #0x0                   	// #0
    7348:	ret
    734c:	nop

0000000000007350 <grub_dl_unref>:
    7350:	cbz	x0, 7394 <grub_dl_unref+0x44>
    7354:	stp	x29, x30, [sp, #-32]!
    7358:	mov	x29, sp
    735c:	stp	x19, x20, [sp, #16]
    7360:	mov	x20, x0
    7364:	ldr	x19, [x0, #16]
    7368:	cbz	x19, 737c <grub_dl_unref+0x2c>
    736c:	ldr	x0, [x19, #8]
    7370:	bl	7350 <grub_dl_unref>
    7374:	ldr	x19, [x19]
    7378:	cbnz	x19, 736c <grub_dl_unref+0x1c>
    737c:	ldr	w0, [x20, #8]
    7380:	sub	w0, w0, #0x1
    7384:	str	w0, [x20, #8]
    7388:	ldp	x19, x20, [sp, #16]
    738c:	ldp	x29, x30, [sp], #32
    7390:	ret
    7394:	mov	w0, #0x0                   	// #0
    7398:	ret
    739c:	nop

00000000000073a0 <grub_dl_unload>:
    73a0:	stp	x29, x30, [sp, #-64]!
    73a4:	mov	x29, sp
    73a8:	stp	x21, x22, [sp, #32]
    73ac:	mov	x22, x0
    73b0:	ldr	w0, [x0, #8]
    73b4:	cmp	w0, #0x0
    73b8:	b.gt	74a8 <grub_dl_unload+0x108>
    73bc:	ldr	x0, [x22, #56]
    73c0:	stp	x19, x20, [sp, #16]
    73c4:	stp	x23, x24, [sp, #48]
    73c8:	cbz	x0, 73d0 <grub_dl_unload+0x30>
    73cc:	blr	x0
    73d0:	adrp	x0, 0 <_start>
    73d4:	ldr	x24, [x0]
    73d8:	ldr	x1, [x24]
    73dc:	cbz	x1, 7400 <grub_dl_unload+0x60>
    73e0:	cmp	x22, x1
    73e4:	b.ne	73f0 <grub_dl_unload+0x50>  // b.any
    73e8:	b	74c8 <grub_dl_unload+0x128>
    73ec:	b.eq	74b8 <grub_dl_unload+0x118>  // b.none
    73f0:	mov	x0, x1
    73f4:	ldr	x1, [x1, #112]
    73f8:	cmp	x22, x1
    73fc:	cbnz	x1, 73ec <grub_dl_unload+0x4c>
    7400:	add	x20, x24, #0x8
    7404:	add	x24, x24, #0xff0
    7408:	ldr	x19, [x20]
    740c:	mov	x23, x20
    7410:	cbz	x19, 7430 <grub_dl_unload+0x90>
    7414:	mov	x21, x19
    7418:	ldr	x19, [x19]
    741c:	ldr	x0, [x21, #32]
    7420:	cmp	x22, x0
    7424:	b.eq	7490 <grub_dl_unload+0xf0>  // b.none
    7428:	mov	x23, x21
    742c:	cbnz	x19, 7414 <grub_dl_unload+0x74>
    7430:	add	x20, x20, #0x8
    7434:	cmp	x24, x20
    7438:	b.ne	7408 <grub_dl_unload+0x68>  // b.any
    743c:	ldr	x19, [x22, #16]
    7440:	cbz	x19, 7460 <grub_dl_unload+0xc0>
    7444:	mov	x20, x19
    7448:	ldr	x19, [x19]
    744c:	ldr	x0, [x20, #8]
    7450:	bl	73a0 <grub_dl_unload>
    7454:	mov	x0, x20
    7458:	bl	5828 <grub_free>
    745c:	cbnz	x19, 7444 <grub_dl_unload+0xa4>
    7460:	ldr	x0, [x22, #96]
    7464:	bl	5828 <grub_free>
    7468:	ldr	x0, [x22]
    746c:	bl	5828 <grub_free>
    7470:	mov	x0, x22
    7474:	bl	5828 <grub_free>
    7478:	mov	w0, #0x1                   	// #1
    747c:	ldp	x19, x20, [sp, #16]
    7480:	ldp	x21, x22, [sp, #32]
    7484:	ldp	x23, x24, [sp, #48]
    7488:	ldp	x29, x30, [sp], #64
    748c:	ret
    7490:	ldr	x0, [x21, #8]
    7494:	str	x19, [x23]
    7498:	bl	5828 <grub_free>
    749c:	mov	x0, x21
    74a0:	bl	5828 <grub_free>
    74a4:	b	7410 <grub_dl_unload+0x70>
    74a8:	mov	w0, #0x0                   	// #0
    74ac:	ldp	x21, x22, [sp, #32]
    74b0:	ldp	x29, x30, [sp], #64
    74b4:	ret
    74b8:	add	x0, x0, #0x70
    74bc:	ldr	x1, [x1, #112]
    74c0:	str	x1, [x0]
    74c4:	b	7400 <grub_dl_unload+0x60>
    74c8:	mov	x0, x24
    74cc:	b	74bc <grub_dl_unload+0x11c>
	...

00000000000074d8 <grub_dl_load_core_noinit>:
    74d8:	stp	x29, x30, [sp, #-144]!
    74dc:	adrp	x3, 0 <_start>
    74e0:	adrp	x4, 0 <_start>
    74e4:	adrp	x2, 0 <_start>
    74e8:	mov	x29, sp
    74ec:	ldr	x3, [x3]
    74f0:	stp	x21, x22, [sp, #32]
    74f4:	mov	x5, x1
    74f8:	ldr	x21, [x4]
    74fc:	mov	x4, x0
    7500:	ldr	x22, [x2]
    7504:	mov	x2, x21
    7508:	stp	x19, x20, [sp, #16]
    750c:	mov	x20, x1
    7510:	mov	x19, x0
    7514:	mov	w1, #0x259                 	// #601
    7518:	mov	x0, x22
    751c:	stp	x23, x24, [sp, #48]
    7520:	bl	ae68 <grub_real_dprintf>
    7524:	cmp	x20, #0x3f
    7528:	b.ls	782c <grub_dl_load_core_noinit+0x354>  // b.plast
    752c:	ldr	w1, [x19]
    7530:	mov	w0, #0x457f                	// #17791
    7534:	movk	w0, #0x464c, lsl #16
    7538:	cmp	w1, w0
    753c:	b.ne	754c <grub_dl_load_core_noinit+0x74>  // b.any
    7540:	ldrb	w0, [x19, #6]
    7544:	cmp	w0, #0x1
    7548:	b.eq	77f0 <grub_dl_load_core_noinit+0x318>  // b.none
    754c:	adrp	x1, 0 <_start>
    7550:	mov	w0, #0x15                  	// #21
    7554:	ldr	x1, [x1]
    7558:	bl	85c0 <grub_error>
    755c:	mov	w24, w0
    7560:	cbnz	w24, 7810 <grub_dl_load_core_noinit+0x338>
    7564:	ldrh	w23, [x19, #16]
    7568:	cmp	w23, #0x1
    756c:	b.ne	78dc <grub_dl_load_core_noinit+0x404>  // b.any
    7570:	ldrh	w0, [x19, #58]
    7574:	ldrh	w2, [x19, #60]
    7578:	ldr	x1, [x19, #40]
    757c:	umaddl	x0, w0, w2, x1
    7580:	cmp	x0, x20
    7584:	b.hi	7908 <grub_dl_load_core_noinit+0x430>  // b.pmore
    7588:	mov	x0, #0x78                  	// #120
    758c:	bl	57e8 <grub_zalloc>
    7590:	mov	x20, x0
    7594:	cbz	x0, 7810 <grub_dl_load_core_noinit+0x338>
    7598:	adrp	x0, 0 <_start>
    759c:	str	w23, [x20, #8]
    75a0:	mov	x4, x20
    75a4:	mov	x2, x21
    75a8:	ldr	x3, [x0]
    75ac:	mov	w1, #0x272                 	// #626
    75b0:	mov	x0, x22
    75b4:	bl	ae68 <grub_real_dprintf>
    75b8:	adrp	x1, 0 <_start>
    75bc:	mov	x0, x19
    75c0:	ldr	x1, [x1]
    75c4:	bl	70b8 <grub_disk_get_size+0x30>
    75c8:	mov	x23, x0
    75cc:	cbz	x0, 7874 <grub_dl_load_core_noinit+0x39c>
    75d0:	adrp	x1, 0 <_start>
    75d4:	ldr	x0, [x0, #24]
    75d8:	ldr	x1, [x1]
    75dc:	add	x0, x19, x0
    75e0:	bl	9b60 <grub_strcmp>
    75e4:	cbnz	w0, 7844 <grub_dl_load_core_noinit+0x36c>
    75e8:	adrp	x1, 0 <_start>
    75ec:	mov	x0, x19
    75f0:	ldr	x1, [x1]
    75f4:	bl	70b8 <grub_disk_get_size+0x30>
    75f8:	cbz	x0, 794c <grub_dl_load_core_noinit+0x474>
    75fc:	ldr	x0, [x0, #24]
    7600:	add	x0, x19, x0
    7604:	bl	a598 <grub_strdup>
    7608:	str	x0, [x20]
    760c:	cbz	x0, 7964 <grub_dl_load_core_noinit+0x48c>
    7610:	adrp	x1, 0 <_start>
    7614:	mov	x0, x19
    7618:	stp	x25, x26, [sp, #64]
    761c:	ldr	x1, [x1]
    7620:	bl	70b8 <grub_disk_get_size+0x30>
    7624:	cbz	x0, 7690 <grub_dl_load_core_noinit+0x1b8>
    7628:	ldp	x23, x26, [x0, #24]
    762c:	add	x23, x19, x23
    7630:	add	x26, x23, x26
    7634:	cmp	x23, x26
    7638:	b.cc	7684 <grub_dl_load_core_noinit+0x1ac>  // b.lo, b.ul, b.last
    763c:	b	7690 <grub_dl_load_core_noinit+0x1b8>
    7640:	bl	7fd8 <grub_dl_load>
    7644:	mov	x25, x0
    7648:	cbz	x0, 7934 <grub_dl_load_core_noinit+0x45c>
    764c:	bl	7300 <grub_dl_ref>
    7650:	mov	x0, #0x10                  	// #16
    7654:	bl	57d8 <grub_malloc>
    7658:	mov	x1, x0
    765c:	mov	x0, x23
    7660:	cbz	x1, 7934 <grub_dl_load_core_noinit+0x45c>
    7664:	ldr	x2, [x20, #16]
    7668:	stp	x2, x25, [x1]
    766c:	str	x1, [x20, #16]
    7670:	bl	af48 <grub_strlen>
    7674:	add	x0, x0, #0x1
    7678:	add	x23, x23, x0
    767c:	cmp	x26, x23
    7680:	b.ls	7690 <grub_dl_load_core_noinit+0x1b8>  // b.plast
    7684:	ldrb	w1, [x23]
    7688:	mov	x0, x23
    768c:	cbnz	w1, 7640 <grub_dl_load_core_noinit+0x168>
    7690:	ldrh	w5, [x19, #60]
    7694:	mov	x23, #0x1                   	// #1
    7698:	ldr	x2, [x19, #40]
    769c:	stp	x27, x28, [sp, #80]
    76a0:	mov	x25, #0x0                   	// #0
    76a4:	add	x2, x19, x2
    76a8:	cbz	w5, 76ec <grub_dl_load_core_noinit+0x214>
    76ac:	ldrh	w6, [x19, #58]
    76b0:	mov	x23, #0x1                   	// #1
    76b4:	mov	x25, #0x0                   	// #0
    76b8:	ldr	x0, [x2, #48]
    76bc:	add	w24, w24, #0x1
    76c0:	ldr	x3, [x2, #32]
    76c4:	sub	x1, x0, #0x1
    76c8:	add	x1, x1, x25
    76cc:	neg	x4, x0
    76d0:	cmp	x23, x0
    76d4:	and	x1, x1, x4
    76d8:	csel	x23, x23, x0, cs  // cs = hs, nlast
    76dc:	add	x25, x1, x3
    76e0:	cmp	w24, w5
    76e4:	add	x2, x2, x6
    76e8:	b.ne	76b8 <grub_dl_load_core_noinit+0x1e0>  // b.any
    76ec:	add	x2, sp, #0x88
    76f0:	add	x1, sp, #0x80
    76f4:	mov	x0, x19
    76f8:	bl	890 <grub_arm64_dl_get_tramp_got_size>
    76fc:	mov	w28, w0
    7700:	cbnz	w0, 78c8 <grub_dl_load_core_noinit+0x3f0>
    7704:	ldp	x1, x2, [sp, #128]
    7708:	cmp	x23, #0x8
    770c:	mov	x0, #0x8                   	// #8
    7710:	csel	x0, x23, x0, cs  // cs = hs, nlast
    7714:	add	x1, x1, #0x7
    7718:	add	x2, x2, #0x7
    771c:	and	x2, x2, #0xfffffffffffffff8
    7720:	and	x1, x1, #0xfffffffffffffff8
    7724:	add	x1, x1, x2
    7728:	add	x25, x1, x25
    772c:	mov	x1, x25
    7730:	bl	5588 <grub_memalign>
    7734:	str	x0, [x20, #96]
    7738:	mov	x26, x0
    773c:	cbz	x0, 7d48 <grub_dl_load_core_noinit+0x870>
    7740:	ldrh	w4, [x19, #60]
    7744:	ldr	x8, [x19, #40]
    7748:	str	x25, [x20, #104]
    774c:	add	x25, x19, x8
    7750:	cbz	w4, 7ddc <grub_dl_load_core_noinit+0x904>
    7754:	mov	w23, #0x0                   	// #0
    7758:	b	7774 <grub_dl_load_core_noinit+0x29c>
    775c:	ldrh	w0, [x19, #58]
    7760:	add	w23, w23, #0x1
    7764:	cmp	w23, w4
    7768:	mov	w2, w4
    776c:	add	x25, x25, x0
    7770:	b.cs	7978 <grub_dl_load_core_noinit+0x4a0>  // b.hs, b.nlast
    7774:	ldr	x0, [x25, #8]
    7778:	tbz	w0, #1, 775c <grub_dl_load_core_noinit+0x284>
    777c:	mov	x0, #0x20                  	// #32
    7780:	bl	57d8 <grub_malloc>
    7784:	mov	x24, x0
    7788:	cbz	x0, 7d48 <grub_dl_load_core_noinit+0x870>
    778c:	ldr	x2, [x25, #32]
    7790:	cbz	x2, 78d4 <grub_dl_load_core_noinit+0x3fc>
    7794:	ldr	x0, [x25, #48]
    7798:	ldr	w1, [x25, #4]
    779c:	add	x27, x26, x0
    77a0:	neg	x0, x0
    77a4:	sub	x27, x27, #0x1
    77a8:	cmp	w1, #0x1
    77ac:	and	x27, x27, x0
    77b0:	add	x26, x27, x2
    77b4:	b.eq	7d28 <grub_dl_load_core_noinit+0x850>  // b.none
    77b8:	cmp	w1, #0x8
    77bc:	b.ne	77d0 <grub_dl_load_core_noinit+0x2f8>  // b.any
    77c0:	mov	x0, x27
    77c4:	mov	w1, #0x0                   	// #0
    77c8:	bl	a670 <grub_memset>
    77cc:	ldr	x2, [x25, #32]
    77d0:	str	x27, [x24, #8]
    77d4:	ldr	x0, [x20, #24]
    77d8:	ldrh	w4, [x19, #60]
    77dc:	str	x0, [x24]
    77e0:	str	x2, [x24, #16]
    77e4:	str	w23, [x24, #24]
    77e8:	str	x24, [x20, #24]
    77ec:	b	775c <grub_dl_load_core_noinit+0x284>
    77f0:	ldr	w0, [x19, #20]
    77f4:	cmp	w0, #0x1
    77f8:	b.ne	754c <grub_dl_load_core_noinit+0x74>  // b.any
    77fc:	mov	x0, x19
    7800:	bl	320 <grub_arch_dl_check_header>
    7804:	mov	w24, w0
    7808:	cbz	w24, 7564 <grub_dl_load_core_noinit+0x8c>
    780c:	nop
    7810:	mov	x20, #0x0                   	// #0
    7814:	mov	x0, x20
    7818:	ldp	x19, x20, [sp, #16]
    781c:	ldp	x21, x22, [sp, #32]
    7820:	ldp	x23, x24, [sp, #48]
    7824:	ldp	x29, x30, [sp], #144
    7828:	ret
    782c:	adrp	x1, 0 <_start>
    7830:	mov	w0, #0x15                  	// #21
    7834:	ldr	x1, [x1]
    7838:	bl	85c0 <grub_error>
    783c:	mov	w24, w0
    7840:	b	7560 <grub_dl_load_core_noinit+0x88>
    7844:	adrp	x1, 0 <_start>
    7848:	ldr	x0, [x23, #24]
    784c:	ldr	x1, [x1]
    7850:	add	x0, x19, x0
    7854:	bl	9b60 <grub_strcmp>
    7858:	cbz	w0, 75e8 <grub_dl_load_core_noinit+0x110>
    785c:	adrp	x1, 0 <_start>
    7860:	ldr	x0, [x23, #24]
    7864:	ldr	x1, [x1]
    7868:	add	x0, x19, x0
    786c:	bl	9b60 <grub_strcmp>
    7870:	cbz	w0, 75e8 <grub_dl_load_core_noinit+0x110>
    7874:	adrp	x1, 0 <_start>
    7878:	mov	w0, #0x2                   	// #2
    787c:	ldr	x1, [x1]
    7880:	bl	85c0 <grub_error>
    7884:	cbz	w0, 75e8 <grub_dl_load_core_noinit+0x110>
    7888:	str	xzr, [x20, #56]
    788c:	mov	x0, x20
    7890:	mov	x20, #0x0                   	// #0
    7894:	bl	73a0 <grub_dl_unload>
    7898:	mov	x0, x20
    789c:	ldp	x19, x20, [sp, #16]
    78a0:	ldp	x21, x22, [sp, #32]
    78a4:	ldp	x23, x24, [sp, #48]
    78a8:	ldp	x29, x30, [sp], #144
    78ac:	ret
    78b0:	adrp	x1, 0 <_start>
    78b4:	mov	w0, #0x2                   	// #2
    78b8:	ldr	x1, [x1]
    78bc:	bl	85c0 <grub_error>
    78c0:	cbz	w0, 7bc0 <grub_dl_load_core_noinit+0x6e8>
    78c4:	nop
    78c8:	ldp	x25, x26, [sp, #64]
    78cc:	ldp	x27, x28, [sp, #80]
    78d0:	b	7888 <grub_dl_load_core_noinit+0x3b0>
    78d4:	str	xzr, [x0, #8]
    78d8:	b	77d4 <grub_dl_load_core_noinit+0x2fc>
    78dc:	adrp	x1, 0 <_start>
    78e0:	mov	x20, #0x0                   	// #0
    78e4:	mov	w0, #0x2                   	// #2
    78e8:	ldr	x1, [x1]
    78ec:	bl	85c0 <grub_error>
    78f0:	mov	x0, x20
    78f4:	ldp	x19, x20, [sp, #16]
    78f8:	ldp	x21, x22, [sp, #32]
    78fc:	ldp	x23, x24, [sp, #48]
    7900:	ldp	x29, x30, [sp], #144
    7904:	ret
    7908:	adrp	x1, 0 <_start>
    790c:	mov	x20, #0x0                   	// #0
    7910:	mov	w0, #0x15                  	// #21
    7914:	ldr	x1, [x1]
    7918:	bl	85c0 <grub_error>
    791c:	mov	x0, x20
    7920:	ldp	x19, x20, [sp, #16]
    7924:	ldp	x21, x22, [sp, #32]
    7928:	ldp	x23, x24, [sp, #48]
    792c:	ldp	x29, x30, [sp], #144
    7930:	ret
    7934:	adrp	x0, 0 <_start>
    7938:	ldr	x0, [x0]
    793c:	ldr	w0, [x0]
    7940:	cbz	w0, 7690 <grub_dl_load_core_noinit+0x1b8>
    7944:	ldp	x25, x26, [sp, #64]
    7948:	b	7888 <grub_dl_load_core_noinit+0x3b0>
    794c:	adrp	x1, 0 <_start>
    7950:	mov	w0, #0x2                   	// #2
    7954:	ldr	x1, [x1]
    7958:	bl	85c0 <grub_error>
    795c:	cbnz	w0, 7888 <grub_dl_load_core_noinit+0x3b0>
    7960:	b	7610 <grub_dl_load_core_noinit+0x138>
    7964:	adrp	x0, 0 <_start>
    7968:	ldr	x0, [x0]
    796c:	ldr	w0, [x0]
    7970:	cbnz	w0, 7888 <grub_dl_load_core_noinit+0x3b0>
    7974:	b	7610 <grub_dl_load_core_noinit+0x138>
    7978:	ldr	x8, [x19, #40]
    797c:	add	x25, x19, x8
    7980:	ldr	x1, [sp, #128]
    7984:	add	x26, x26, #0x7
    7988:	and	x26, x26, #0xfffffffffffffff8
    798c:	stp	x26, x26, [x20, #80]
    7990:	add	x1, x26, x1
    7994:	add	x1, x1, #0x7
    7998:	and	x1, x1, #0xfffffffffffffff8
    799c:	stp	x1, x1, [x20, #64]
    79a0:	cbz	w2, 7bbc <grub_dl_load_core_noinit+0x6e4>
    79a4:	ldrh	w7, [x19, #58]
    79a8:	mov	x0, x25
    79ac:	mov	w1, #0x0                   	// #0
    79b0:	and	x6, x7, #0xffff
    79b4:	b	79c4 <grub_dl_load_core_noinit+0x4ec>
    79b8:	add	x0, x0, x6
    79bc:	cmp	w1, w2
    79c0:	b.eq	7b44 <grub_dl_load_core_noinit+0x66c>  // b.none
    79c4:	ldr	w3, [x0, #4]
    79c8:	add	w1, w1, #0x1
    79cc:	cmp	w3, #0x2
    79d0:	b.ne	79b8 <grub_dl_load_core_noinit+0x4e0>  // b.any
    79d4:	ldr	w1, [x0, #40]
    79d8:	ldp	x6, x24, [x0, #24]
    79dc:	ldr	x23, [x0, #56]
    79e0:	mul	w7, w7, w1
    79e4:	add	x0, x7, x8
    79e8:	udiv	w1, w24, w23
    79ec:	add	x0, x19, x0
    79f0:	add	x26, x19, x6
    79f4:	cmp	w24, w23
    79f8:	ldr	x0, [x0, #24]
    79fc:	stp	x26, x23, [x20, #32]
    7a00:	str	x0, [sp, #112]
    7a04:	str	w1, [sp, #124]
    7a08:	b.cc	7bbc <grub_dl_load_core_noinit+0x6e4>  // b.lo, b.ul, b.last
    7a0c:	mov	w27, #0x0                   	// #0
    7a10:	ldr	x2, [sp, #112]
    7a14:	ldr	w1, [x26]
    7a18:	ldrb	w0, [x26, #4]
    7a1c:	add	x3, x2, w1, uxtw
    7a20:	and	w2, w0, #0xf
    7a24:	lsr	w25, w0, #4
    7a28:	add	x4, x19, x3
    7a2c:	cmp	w2, #0x3
    7a30:	b.eq	7cdc <grub_dl_load_core_noinit+0x804>  // b.none
    7a34:	tst	w0, #0xc
    7a38:	b.ne	7cb8 <grub_dl_load_core_noinit+0x7e0>  // b.any
    7a3c:	tst	w0, #0xe
    7a40:	b.ne	7c34 <grub_dl_load_core_noinit+0x75c>  // b.any
    7a44:	ldrh	w2, [x26, #6]
    7a48:	cbz	w1, 7b58 <grub_dl_load_core_noinit+0x680>
    7a4c:	cbnz	w2, 7b58 <grub_dl_load_core_noinit+0x680>
    7a50:	ldrb	w2, [x19, x3]
    7a54:	cbz	w2, 7dd4 <grub_dl_load_core_noinit+0x8fc>
    7a58:	mov	x3, x4
    7a5c:	mov	w0, #0x0                   	// #0
    7a60:	add	w1, w0, w0, lsl #10
    7a64:	add	w1, w2, w1, lsl #6
    7a68:	ldrb	w2, [x3, #1]!
    7a6c:	sub	w0, w1, w0
    7a70:	cbnz	w2, 7a60 <grub_dl_load_core_noinit+0x588>
    7a74:	add	w0, w0, w0, lsr #5
    7a78:	mov	w1, #0x21b3                	// #8627
    7a7c:	movk	w1, #0x80c1, lsl #16
    7a80:	mov	w2, #0x1fd                 	// #509
    7a84:	umull	x1, w0, w1
    7a88:	lsr	x1, x1, #40
    7a8c:	msub	w1, w1, w2, w0
    7a90:	adrp	x0, 0 <_start>
    7a94:	ldr	x0, [x0]
    7a98:	add	x0, x0, #0x8
    7a9c:	ldr	x24, [x0, w1, uxtw #3]
    7aa0:	cbnz	x24, 7ab4 <grub_dl_load_core_noinit+0x5dc>
    7aa4:	b	7d94 <grub_dl_load_core_noinit+0x8bc>
    7aa8:	ldr	x24, [x24]
    7aac:	ldr	x4, [sp, #104]
    7ab0:	cbz	x24, 7d94 <grub_dl_load_core_noinit+0x8bc>
    7ab4:	ldr	x0, [x24, #8]
    7ab8:	mov	x1, x4
    7abc:	str	x4, [sp, #104]
    7ac0:	bl	9b60 <grub_strcmp>
    7ac4:	cbnz	w0, 7aa8 <grub_dl_load_core_noinit+0x5d0>
    7ac8:	ldr	w0, [x24, #24]
    7acc:	ldr	x1, [x24, #16]
    7ad0:	str	x1, [x26, #8]
    7ad4:	cbz	w0, 7cc4 <grub_dl_load_core_noinit+0x7ec>
    7ad8:	ubfiz	w0, w25, #4, #4
    7adc:	add	w0, w0, #0x2
    7ae0:	strb	w0, [x26, #4]
    7ae4:	b	7cc4 <grub_dl_load_core_noinit+0x7ec>
    7ae8:	ldr	x3, [x20, #24]
    7aec:	cbz	x3, 7b30 <grub_dl_load_core_noinit+0x658>
    7af0:	ldr	w1, [x25, #44]
    7af4:	b	7b00 <grub_dl_load_core_noinit+0x628>
    7af8:	ldr	x3, [x3]
    7afc:	cbz	x3, 7b30 <grub_dl_load_core_noinit+0x658>
    7b00:	ldr	w0, [x3, #24]
    7b04:	cmp	w0, w1
    7b08:	b.ne	7af8 <grub_dl_load_core_noinit+0x620>  // b.any
    7b0c:	ldr	x0, [x20, #32]
    7b10:	cbz	x0, 78b0 <grub_dl_load_core_noinit+0x3d8>
    7b14:	mov	x2, x25
    7b18:	mov	x1, x19
    7b1c:	mov	x0, x20
    7b20:	bl	358 <grub_arch_dl_relocate_symbols>
    7b24:	cbnz	w0, 78c8 <grub_dl_load_core_noinit+0x3f0>
    7b28:	ldrh	w4, [x19, #60]
    7b2c:	nop
    7b30:	ldrh	w0, [x19, #58]
    7b34:	add	w28, w28, #0x1
    7b38:	cmp	w28, w4
    7b3c:	add	x25, x25, x0
    7b40:	b.cs	7bc0 <grub_dl_load_core_noinit+0x6e8>  // b.hs, b.nlast
    7b44:	ldr	w0, [x25, #4]
    7b48:	cmp	w0, #0x9
    7b4c:	ccmp	w0, #0x4, #0x4, ne  // ne = any
    7b50:	b.ne	7b30 <grub_dl_load_core_noinit+0x658>  // b.any
    7b54:	b	7ae8 <grub_dl_load_core_noinit+0x610>
    7b58:	ldr	x0, [x20, #24]
    7b5c:	cbnz	x0, 7b6c <grub_dl_load_core_noinit+0x694>
    7b60:	b	7d8c <grub_dl_load_core_noinit+0x8b4>
    7b64:	ldr	x0, [x0]
    7b68:	cbz	x0, 7d8c <grub_dl_load_core_noinit+0x8b4>
    7b6c:	ldr	w1, [x0, #24]
    7b70:	cmp	w2, w1
    7b74:	b.ne	7b64 <grub_dl_load_core_noinit+0x68c>  // b.any
    7b78:	ldr	x1, [x0, #8]
    7b7c:	ldr	x0, [x26, #8]
    7b80:	add	x1, x1, x0
    7b84:	str	x1, [x26, #8]
    7b88:	cbz	w25, 7cc4 <grub_dl_load_core_noinit+0x7ec>
    7b8c:	mov	x0, x4
    7b90:	mov	x3, x20
    7b94:	mov	w2, #0x0                   	// #0
    7b98:	bl	71f0 <grub_dl_register_symbol>
    7b9c:	cbz	w0, 7cc4 <grub_dl_load_core_noinit+0x7ec>
    7ba0:	adrp	x0, 0 <_start>
    7ba4:	ldr	x0, [x0]
    7ba8:	ldr	w0, [x0]
    7bac:	cbnz	w0, 78c8 <grub_dl_load_core_noinit+0x3f0>
    7bb0:	ldr	x25, [x19, #40]
    7bb4:	ldrh	w4, [x19, #60]
    7bb8:	add	x25, x19, x25
    7bbc:	cbnz	w4, 7b44 <grub_dl_load_core_noinit+0x66c>
    7bc0:	adrp	x0, 0 <_start>
    7bc4:	mov	x2, x21
    7bc8:	ldp	x5, x4, [x20, #96]
    7bcc:	mov	w1, #0x22b                 	// #555
    7bd0:	ldr	x3, [x0]
    7bd4:	mov	x0, x22
    7bd8:	bl	ae68 <grub_real_dprintf>
    7bdc:	ldp	x0, x1, [x20, #96]
    7be0:	bl	1b8 <grub_arch_sync_caches>
    7be4:	adrp	x0, 0 <_start>
    7be8:	mov	x2, x21
    7bec:	ldr	x4, [x20]
    7bf0:	mov	w1, #0x289                 	// #649
    7bf4:	ldr	x3, [x0]
    7bf8:	mov	x0, x22
    7bfc:	bl	ae68 <grub_real_dprintf>
    7c00:	adrp	x0, 0 <_start>
    7c04:	mov	x2, x21
    7c08:	ldr	x4, [x20, #48]
    7c0c:	mov	w1, #0x28a                 	// #650
    7c10:	ldr	x3, [x0]
    7c14:	mov	x0, x22
    7c18:	bl	ae68 <grub_real_dprintf>
    7c1c:	mov	x0, x20
    7c20:	bl	7168 <grub_dl_add>
    7c24:	cbnz	w0, 7db0 <grub_dl_load_core_noinit+0x8d8>
    7c28:	ldp	x25, x26, [sp, #64]
    7c2c:	ldp	x27, x28, [sp, #80]
    7c30:	b	7814 <grub_dl_load_core_noinit+0x33c>
    7c34:	cmp	w2, #0x2
    7c38:	b.ne	7d0c <grub_dl_load_core_noinit+0x834>  // b.any
    7c3c:	ldr	x0, [x20, #24]
    7c40:	ldrh	w2, [x26, #6]
    7c44:	cbnz	x0, 7c54 <grub_dl_load_core_noinit+0x77c>
    7c48:	b	7d40 <grub_dl_load_core_noinit+0x868>
    7c4c:	ldr	x0, [x0]
    7c50:	cbz	x0, 7d40 <grub_dl_load_core_noinit+0x868>
    7c54:	ldr	w1, [x0, #24]
    7c58:	cmp	w2, w1
    7c5c:	b.ne	7c4c <grub_dl_load_core_noinit+0x774>  // b.any
    7c60:	ldr	x1, [x0, #8]
    7c64:	ldr	x0, [x26, #8]
    7c68:	add	x1, x1, x0
    7c6c:	str	x1, [x26, #8]
    7c70:	cbz	w25, 7c90 <grub_dl_load_core_noinit+0x7b8>
    7c74:	mov	x0, x4
    7c78:	mov	x3, x20
    7c7c:	mov	w2, #0x1                   	// #1
    7c80:	str	x4, [sp, #104]
    7c84:	bl	71f0 <grub_dl_register_symbol>
    7c88:	ldr	x4, [sp, #104]
    7c8c:	cbnz	w0, 7ba0 <grub_dl_load_core_noinit+0x6c8>
    7c90:	adrp	x0, 0 <_start>
    7c94:	str	x4, [sp, #104]
    7c98:	ldr	x1, [x0]
    7c9c:	mov	x0, x4
    7ca0:	bl	9b60 <grub_strcmp>
    7ca4:	ldr	x4, [sp, #104]
    7ca8:	cbnz	w0, 7d6c <grub_dl_load_core_noinit+0x894>
    7cac:	ldr	x0, [x26, #8]
    7cb0:	str	x0, [x20, #48]
    7cb4:	b	7cc4 <grub_dl_load_core_noinit+0x7ec>
    7cb8:	cmp	w2, #0x4
    7cbc:	b.ne	7d10 <grub_dl_load_core_noinit+0x838>  // b.any
    7cc0:	str	xzr, [x26, #8]
    7cc4:	ldr	w0, [sp, #124]
    7cc8:	add	w27, w27, #0x1
    7ccc:	add	x26, x26, w23, uxtw
    7cd0:	cmp	w27, w0
    7cd4:	b.cc	7a10 <grub_dl_load_core_noinit+0x538>  // b.lo, b.ul, b.last
    7cd8:	b	7bb0 <grub_dl_load_core_noinit+0x6d8>
    7cdc:	ldr	x0, [x20, #24]
    7ce0:	ldrh	w2, [x26, #6]
    7ce4:	cbnz	x0, 7cf4 <grub_dl_load_core_noinit+0x81c>
    7ce8:	b	7dc8 <grub_dl_load_core_noinit+0x8f0>
    7cec:	ldr	x0, [x0]
    7cf0:	cbz	x0, 7d04 <grub_dl_load_core_noinit+0x82c>
    7cf4:	ldr	w1, [x0, #24]
    7cf8:	cmp	w2, w1
    7cfc:	b.ne	7cec <grub_dl_load_core_noinit+0x814>  // b.any
    7d00:	ldr	x0, [x0, #8]
    7d04:	str	x0, [x26, #8]
    7d08:	b	7cc4 <grub_dl_load_core_noinit+0x7ec>
    7d0c:	mov	w2, #0x3                   	// #3
    7d10:	adrp	x1, 0 <_start>
    7d14:	mov	w0, #0x2                   	// #2
    7d18:	ldr	x1, [x1]
    7d1c:	bl	85c0 <grub_error>
    7d20:	cbz	w0, 7bb0 <grub_dl_load_core_noinit+0x6d8>
    7d24:	b	78c8 <grub_dl_load_core_noinit+0x3f0>
    7d28:	ldr	x1, [x25, #24]
    7d2c:	mov	x0, x27
    7d30:	add	x1, x19, x1
    7d34:	bl	9a40 <grub_memmove>
    7d38:	ldr	x2, [x25, #32]
    7d3c:	b	77d0 <grub_dl_load_core_noinit+0x2f8>
    7d40:	mov	x1, #0x0                   	// #0
    7d44:	b	7c64 <grub_dl_load_core_noinit+0x78c>
    7d48:	adrp	x0, 0 <_start>
    7d4c:	ldr	x0, [x0]
    7d50:	ldr	w0, [x0]
    7d54:	cbnz	w0, 78c8 <grub_dl_load_core_noinit+0x3f0>
    7d58:	ldr	x8, [x19, #40]
    7d5c:	ldrh	w4, [x19, #60]
    7d60:	add	x25, x19, x8
    7d64:	mov	w2, w4
    7d68:	b	79a0 <grub_dl_load_core_noinit+0x4c8>
    7d6c:	adrp	x1, 0 <_start>
    7d70:	mov	x0, x4
    7d74:	ldr	x1, [x1]
    7d78:	bl	9b60 <grub_strcmp>
    7d7c:	cbnz	w0, 7cc4 <grub_dl_load_core_noinit+0x7ec>
    7d80:	ldr	x0, [x26, #8]
    7d84:	str	x0, [x20, #56]
    7d88:	b	7cc4 <grub_dl_load_core_noinit+0x7ec>
    7d8c:	mov	x1, #0x0                   	// #0
    7d90:	b	7b7c <grub_dl_load_core_noinit+0x6a4>
    7d94:	adrp	x1, 0 <_start>
    7d98:	mov	x2, x4
    7d9c:	mov	w0, #0x2                   	// #2
    7da0:	ldr	x1, [x1]
    7da4:	bl	85c0 <grub_error>
    7da8:	cbz	w0, 7bb0 <grub_dl_load_core_noinit+0x6d8>
    7dac:	b	78c8 <grub_dl_load_core_noinit+0x3f0>
    7db0:	mov	x0, x20
    7db4:	mov	x20, #0x0                   	// #0
    7db8:	bl	73a0 <grub_dl_unload>
    7dbc:	ldp	x25, x26, [sp, #64]
    7dc0:	ldp	x27, x28, [sp, #80]
    7dc4:	b	7814 <grub_dl_load_core_noinit+0x33c>
    7dc8:	mov	x0, #0x0                   	// #0
    7dcc:	str	x0, [x26, #8]
    7dd0:	b	7cc4 <grub_dl_load_core_noinit+0x7ec>
    7dd4:	mov	w1, #0x0                   	// #0
    7dd8:	b	7a90 <grub_dl_load_core_noinit+0x5b8>
    7ddc:	mov	w2, #0x0                   	// #0
    7de0:	b	7980 <grub_dl_load_core_noinit+0x4a8>
    7de4:	nop
	...

0000000000007eb8 <grub_dl_load_core>:
    7eb8:	stp	x29, x30, [sp, #-32]!
    7ebc:	mov	x29, sp
    7ec0:	str	x19, [sp, #16]
    7ec4:	bl	74d8 <grub_dl_load_core_noinit>
    7ec8:	mov	x19, x0
    7ecc:	cbz	x0, 7ef0 <grub_dl_load_core+0x38>
    7ed0:	ldr	x1, [x0, #48]
    7ed4:	cbz	x1, 7edc <grub_dl_load_core+0x24>
    7ed8:	blr	x1
    7edc:	adrp	x0, 0 <_start>
    7ee0:	ldr	x0, [x0]
    7ee4:	ldr	x1, [x0]
    7ee8:	str	x19, [x0]
    7eec:	str	x1, [x19, #112]
    7ef0:	mov	x0, x19
    7ef4:	ldr	x19, [sp, #16]
    7ef8:	ldp	x29, x30, [sp], #32
    7efc:	ret
	...

0000000000007f08 <grub_dl_load_file>:
    7f08:	stp	x29, x30, [sp, #-48]!
    7f0c:	mov	w1, #0x1                   	// #1
    7f10:	mov	x29, sp
    7f14:	stp	x19, x20, [sp, #16]
    7f18:	bl	8aa8 <grub_file_open>
    7f1c:	mov	x19, x0
    7f20:	cbz	x0, 7f88 <grub_dl_load_file+0x80>
    7f24:	str	x21, [sp, #32]
    7f28:	ldr	x21, [x0, #64]
    7f2c:	mov	x0, x21
    7f30:	bl	57d8 <grub_malloc>
    7f34:	mov	x20, x0
    7f38:	cbz	x0, 7fbc <grub_dl_load_file+0xb4>
    7f3c:	mov	x1, x0
    7f40:	mov	x2, x21
    7f44:	mov	x0, x19
    7f48:	bl	8940 <grub_file_read>
    7f4c:	cmp	x0, w21, sxtw
    7f50:	mov	x0, x19
    7f54:	b.ne	7f98 <grub_dl_load_file+0x90>  // b.any
    7f58:	bl	8a48 <grub_file_close>
    7f5c:	mov	x1, x21
    7f60:	mov	x0, x20
    7f64:	bl	7eb8 <grub_dl_load_core>
    7f68:	mov	x19, x0
    7f6c:	mov	x0, x20
    7f70:	bl	5828 <grub_free>
    7f74:	cbz	x19, 7fd0 <grub_dl_load_file+0xc8>
    7f78:	ldr	w0, [x19, #8]
    7f7c:	ldr	x21, [sp, #32]
    7f80:	sub	w0, w0, #0x1
    7f84:	str	w0, [x19, #8]
    7f88:	mov	x0, x19
    7f8c:	ldp	x19, x20, [sp, #16]
    7f90:	ldp	x29, x30, [sp], #48
    7f94:	ret
    7f98:	bl	8a48 <grub_file_close>
    7f9c:	mov	x19, #0x0                   	// #0
    7fa0:	mov	x0, x20
    7fa4:	bl	5828 <grub_free>
    7fa8:	mov	x0, x19
    7fac:	ldp	x19, x20, [sp, #16]
    7fb0:	ldr	x21, [sp, #32]
    7fb4:	ldp	x29, x30, [sp], #48
    7fb8:	ret
    7fbc:	mov	x0, x19
    7fc0:	mov	x19, #0x0                   	// #0
    7fc4:	bl	8a48 <grub_file_close>
    7fc8:	ldr	x21, [sp, #32]
    7fcc:	b	7f88 <grub_dl_load_file+0x80>
    7fd0:	ldr	x21, [sp, #32]
    7fd4:	b	7f88 <grub_dl_load_file+0x80>

0000000000007fd8 <grub_dl_load>:
    7fd8:	stp	x29, x30, [sp, #-48]!
    7fdc:	adrp	x1, 0 <_start>
    7fe0:	mov	x29, sp
    7fe4:	stp	x21, x22, [sp, #32]
    7fe8:	ldr	x22, [x1]
    7fec:	stp	x19, x20, [sp, #16]
    7ff0:	mov	x20, x0
    7ff4:	mov	x0, x22
    7ff8:	bl	8378 <grub_env_get>
    7ffc:	adrp	x1, 0 <_start>
    8000:	mov	x21, x0
    8004:	ldr	x0, [x1]
    8008:	ldr	x19, [x0]
    800c:	cbnz	x19, 801c <grub_dl_load+0x44>
    8010:	b	8040 <grub_dl_load+0x68>
    8014:	ldr	x19, [x19, #112]
    8018:	cbz	x19, 8040 <grub_dl_load+0x68>
    801c:	ldr	x1, [x19]
    8020:	mov	x0, x20
    8024:	bl	9b60 <grub_strcmp>
    8028:	cbnz	w0, 8014 <grub_dl_load+0x3c>
    802c:	mov	x0, x19
    8030:	ldp	x19, x20, [sp, #16]
    8034:	ldp	x21, x22, [sp, #32]
    8038:	ldp	x29, x30, [sp], #48
    803c:	ret
    8040:	cbz	x21, 80b0 <grub_dl_load+0xd8>
    8044:	adrp	x0, 0 <_start>
    8048:	mov	x1, x21
    804c:	mov	x2, x20
    8050:	ldr	x0, [x0]
    8054:	bl	b138 <grub_xasprintf>
    8058:	mov	x21, x0
    805c:	cbz	x0, 8098 <grub_dl_load+0xc0>
    8060:	bl	7f08 <grub_dl_load_file>
    8064:	mov	x19, x0
    8068:	mov	x0, x21
    806c:	bl	5828 <grub_free>
    8070:	cbz	x19, 8098 <grub_dl_load+0xc0>
    8074:	ldr	x0, [x19]
    8078:	mov	x1, x20
    807c:	bl	9b60 <grub_strcmp>
    8080:	cbz	w0, 802c <grub_dl_load+0x54>
    8084:	adrp	x1, 0 <_start>
    8088:	mov	w0, #0x2                   	// #2
    808c:	ldr	x1, [x1]
    8090:	bl	85c0 <grub_error>
    8094:	b	802c <grub_dl_load+0x54>
    8098:	mov	x19, #0x0                   	// #0
    809c:	mov	x0, x19
    80a0:	ldp	x19, x20, [sp, #16]
    80a4:	ldp	x21, x22, [sp, #32]
    80a8:	ldp	x29, x30, [sp], #48
    80ac:	ret
    80b0:	adrp	x1, 0 <_start>
    80b4:	mov	x2, x22
    80b8:	mov	x19, #0x0                   	// #0
    80bc:	mov	w0, #0x5                   	// #5
    80c0:	ldr	x1, [x1]
    80c4:	bl	85c0 <grub_error>
    80c8:	b	802c <grub_dl_load+0x54>
    80cc:	nop
	...

00000000000080f8 <grub_dl_unload_unneeded>:
    80f8:	stp	x29, x30, [sp, #-32]!
    80fc:	adrp	x0, 0 <_start>
    8100:	mov	x29, sp
    8104:	stp	x19, x20, [sp, #16]
    8108:	ldr	x20, [x0]
    810c:	ldr	x19, [x20]
    8110:	cbz	x19, 8134 <grub_dl_unload_unneeded+0x3c>
    8114:	nop
    8118:	mov	x0, x19
    811c:	add	x19, x19, #0x70
    8120:	bl	73a0 <grub_dl_unload>
    8124:	cmp	w0, #0x0
    8128:	csel	x19, x19, x20, eq  // eq = none
    812c:	ldr	x19, [x19]
    8130:	cbnz	x19, 8118 <grub_dl_unload_unneeded+0x20>
    8134:	ldp	x19, x20, [sp, #16]
    8138:	ldp	x29, x30, [sp], #32
    813c:	ret
	...
    8148:	stp	x29, x30, [sp, #-32]!
    814c:	mov	x29, sp
    8150:	stp	x19, x20, [sp, #16]
    8154:	mov	x20, x0
    8158:	ldrb	w2, [x0]
    815c:	cbz	w2, 81e4 <grub_dl_unload_unneeded+0xec>
    8160:	mov	x4, x0
    8164:	mov	w3, #0x0                   	// #0
    8168:	add	w5, w2, w2, lsl #2
    816c:	ldrb	w2, [x4, #1]!
    8170:	add	w3, w3, w5
    8174:	cbnz	w2, 8168 <grub_dl_unload_unneeded+0x70>
    8178:	mov	w0, #0xec4f                	// #60495
    817c:	mov	w1, #0xd                   	// #13
    8180:	movk	w0, #0x4ec4, lsl #16
    8184:	umull	x0, w3, w0
    8188:	lsr	x0, x0, #34
    818c:	msub	w0, w0, w1, w3
    8190:	adrp	x1, 0 <_start>
    8194:	ldr	x1, [x1]
    8198:	ldr	x1, [x1]
    819c:	ldr	x19, [x1, w0, sxtw #3]
    81a0:	cbnz	x19, 81b0 <grub_dl_unload_unneeded+0xb8>
    81a4:	b	81d0 <grub_dl_unload_unneeded+0xd8>
    81a8:	ldr	x19, [x19, #32]
    81ac:	cbz	x19, 81d0 <grub_dl_unload_unneeded+0xd8>
    81b0:	ldr	x0, [x19]
    81b4:	mov	x1, x20
    81b8:	bl	9b60 <grub_strcmp>
    81bc:	cbnz	w0, 81a8 <grub_dl_unload_unneeded+0xb0>
    81c0:	mov	x0, x19
    81c4:	ldp	x19, x20, [sp, #16]
    81c8:	ldp	x29, x30, [sp], #32
    81cc:	ret
    81d0:	mov	x19, #0x0                   	// #0
    81d4:	mov	x0, x19
    81d8:	ldp	x19, x20, [sp, #16]
    81dc:	ldp	x29, x30, [sp], #32
    81e0:	ret
    81e4:	mov	w0, #0x0                   	// #0
    81e8:	b	8190 <grub_dl_unload_unneeded+0x98>
    81ec:	nop
	...

00000000000081f8 <grub_env_set>:
    81f8:	stp	x29, x30, [sp, #-48]!
    81fc:	mov	x29, sp
    8200:	stp	x19, x20, [sp, #16]
    8204:	mov	x20, x1
    8208:	str	x21, [sp, #32]
    820c:	mov	x21, x0
    8210:	bl	8148 <grub_dl_unload_unneeded+0x50>
    8214:	cbz	x0, 8274 <grub_env_set+0x7c>
    8218:	ldr	x2, [x0, #24]
    821c:	mov	x19, x0
    8220:	ldr	x21, [x0, #8]
    8224:	cbz	x2, 8310 <grub_env_set+0x118>
    8228:	mov	x1, x20
    822c:	blr	x2
    8230:	str	x0, [x19, #8]
    8234:	cbz	x0, 8254 <grub_env_set+0x5c>
    8238:	mov	x0, x21
    823c:	bl	5828 <grub_free>
    8240:	mov	w0, #0x0                   	// #0
    8244:	ldp	x19, x20, [sp, #16]
    8248:	ldr	x21, [sp, #32]
    824c:	ldp	x29, x30, [sp], #48
    8250:	ret
    8254:	adrp	x0, 0 <_start>
    8258:	str	x21, [x19, #8]
    825c:	ldp	x19, x20, [sp, #16]
    8260:	ldr	x0, [x0]
    8264:	ldr	x21, [sp, #32]
    8268:	ldr	w0, [x0]
    826c:	ldp	x29, x30, [sp], #48
    8270:	ret
    8274:	mov	x0, #0x40                  	// #64
    8278:	bl	57e8 <grub_zalloc>
    827c:	mov	x19, x0
    8280:	cbz	x0, 833c <grub_env_set+0x144>
    8284:	mov	x0, x21
    8288:	bl	a598 <grub_strdup>
    828c:	str	x0, [x19]
    8290:	cbz	x0, 8328 <grub_env_set+0x130>
    8294:	mov	x0, x20
    8298:	bl	a598 <grub_strdup>
    829c:	str	x0, [x19, #8]
    82a0:	cbz	x0, 8324 <grub_env_set+0x12c>
    82a4:	ldr	x2, [x19]
    82a8:	adrp	x0, 0 <_start>
    82ac:	ldr	x0, [x0]
    82b0:	ldrb	w1, [x2]
    82b4:	ldr	x4, [x0]
    82b8:	cbz	w1, 8358 <grub_env_set+0x160>
    82bc:	mov	w0, #0x0                   	// #0
    82c0:	add	w3, w1, w1, lsl #2
    82c4:	ldrb	w1, [x2, #1]!
    82c8:	add	w0, w0, w3
    82cc:	cbnz	w1, 82c0 <grub_env_set+0xc8>
    82d0:	mov	w1, #0xec4f                	// #60495
    82d4:	mov	w2, #0xd                   	// #13
    82d8:	movk	w1, #0x4ec4, lsl #16
    82dc:	umull	x1, w0, w1
    82e0:	lsr	x1, x1, #34
    82e4:	msub	w0, w1, w2, w0
    82e8:	add	x2, x4, w0, uxtw #3
    82ec:	sxtw	x1, w0
    82f0:	ldr	x0, [x4, x1, lsl #3]
    82f4:	stp	x0, x2, [x19, #32]
    82f8:	cbz	x0, 8304 <grub_env_set+0x10c>
    82fc:	add	x2, x19, #0x20
    8300:	str	x2, [x0, #40]
    8304:	mov	w0, #0x0                   	// #0
    8308:	str	x19, [x4, x1, lsl #3]
    830c:	b	8244 <grub_env_set+0x4c>
    8310:	mov	x0, x20
    8314:	bl	a598 <grub_strdup>
    8318:	str	x0, [x19, #8]
    831c:	cbnz	x0, 8238 <grub_env_set+0x40>
    8320:	b	8254 <grub_env_set+0x5c>
    8324:	ldr	x0, [x19]
    8328:	bl	5828 <grub_free>
    832c:	ldr	x0, [x19, #8]
    8330:	bl	5828 <grub_free>
    8334:	mov	x0, x19
    8338:	bl	5828 <grub_free>
    833c:	adrp	x0, 0 <_start>
    8340:	ldp	x19, x20, [sp, #16]
    8344:	ldr	x0, [x0]
    8348:	ldr	x21, [sp, #32]
    834c:	ldr	w0, [x0]
    8350:	ldp	x29, x30, [sp], #48
    8354:	ret
    8358:	mov	x2, x4
    835c:	mov	w0, #0x0                   	// #0
    8360:	b	82ec <grub_env_set+0xf4>
    8364:	nop
	...

0000000000008378 <grub_env_get>:
    8378:	stp	x29, x30, [sp, #-16]!
    837c:	mov	x29, sp
    8380:	bl	8148 <grub_dl_unload_unneeded+0x50>
    8384:	cbz	x0, 83a0 <grub_env_get+0x28>
    8388:	ldr	x2, [x0, #16]
    838c:	ldr	x1, [x0, #8]
    8390:	cbz	x2, 83a4 <grub_env_get+0x2c>
    8394:	ldp	x29, x30, [sp], #16
    8398:	mov	x16, x2
    839c:	br	x16
    83a0:	mov	x1, #0x0                   	// #0
    83a4:	mov	x0, x1
    83a8:	ldp	x29, x30, [sp], #16
    83ac:	ret

00000000000083b0 <grub_env_unset>:
    83b0:	stp	x29, x30, [sp, #-32]!
    83b4:	mov	x29, sp
    83b8:	stp	x19, x20, [sp, #16]
    83bc:	mov	x20, x0
    83c0:	bl	8148 <grub_dl_unload_unneeded+0x50>
    83c4:	cbz	x0, 8424 <grub_env_unset+0x74>
    83c8:	mov	x19, x0
    83cc:	ldr	x0, [x0, #16]
    83d0:	cbnz	x0, 83dc <grub_env_unset+0x2c>
    83d4:	ldr	x0, [x19, #24]
    83d8:	cbz	x0, 83f4 <grub_env_unset+0x44>
    83dc:	mov	x0, x20
    83e0:	adrp	x1, 0 <_start>
    83e4:	ldp	x19, x20, [sp, #16]
    83e8:	ldp	x29, x30, [sp], #32
    83ec:	ldr	x1, [x1]
    83f0:	b	81f8 <grub_env_set>
    83f4:	ldp	x0, x1, [x19, #32]
    83f8:	str	x0, [x1]
    83fc:	cbz	x0, 8404 <grub_env_unset+0x54>
    8400:	str	x1, [x0, #40]
    8404:	ldr	x0, [x19]
    8408:	bl	5828 <grub_free>
    840c:	ldr	x0, [x19, #8]
    8410:	bl	5828 <grub_free>
    8414:	mov	x0, x19
    8418:	ldp	x19, x20, [sp, #16]
    841c:	ldp	x29, x30, [sp], #32
    8420:	b	5828 <grub_free>
    8424:	ldp	x19, x20, [sp, #16]
    8428:	ldp	x29, x30, [sp], #32
    842c:	ret
	...

0000000000008438 <grub_env_update_get_sorted>:
    8438:	stp	x29, x30, [sp, #-64]!
    843c:	adrp	x1, 0 <_start>
    8440:	mov	x0, #0x0                   	// #0
    8444:	mov	x29, sp
    8448:	stp	x21, x22, [sp, #32]
    844c:	mov	w21, #0x0                   	// #0
    8450:	ldr	x22, [x1]
    8454:	stp	x19, x20, [sp, #16]
    8458:	str	xzr, [sp, #56]
    845c:	nop
    8460:	ldr	x1, [x22]
    8464:	ldr	x20, [x1, w21, sxtw #3]
    8468:	cbz	x20, 84b4 <grub_env_update_get_sorted+0x7c>
    846c:	nop
    8470:	add	x19, sp, #0x38
    8474:	cbnz	x0, 8488 <grub_env_update_get_sorted+0x50>
    8478:	b	84a0 <grub_env_update_get_sorted+0x68>
    847c:	add	x19, x0, #0x30
    8480:	ldr	x0, [x0, #48]
    8484:	cbz	x0, 84a0 <grub_env_update_get_sorted+0x68>
    8488:	ldr	x0, [x0]
    848c:	ldr	x1, [x20]
    8490:	bl	9b60 <grub_strcmp>
    8494:	cmp	w0, #0x0
    8498:	ldr	x0, [x19]
    849c:	b.le	847c <grub_env_update_get_sorted+0x44>
    84a0:	str	x0, [x20, #48]
    84a4:	str	x20, [x19]
    84a8:	ldr	x20, [x20, #32]
    84ac:	ldr	x0, [sp, #56]
    84b0:	cbnz	x20, 8470 <grub_env_update_get_sorted+0x38>
    84b4:	add	w21, w21, #0x1
    84b8:	cmp	w21, #0xd
    84bc:	b.ne	8460 <grub_env_update_get_sorted+0x28>  // b.any
    84c0:	ldp	x19, x20, [sp, #16]
    84c4:	ldp	x21, x22, [sp, #32]
    84c8:	ldp	x29, x30, [sp], #64
    84cc:	ret
	...

00000000000084d8 <grub_register_variable_hook>:
    84d8:	stp	x29, x30, [sp, #-48]!
    84dc:	mov	x29, sp
    84e0:	stp	x19, x20, [sp, #16]
    84e4:	mov	x19, x2
    84e8:	mov	x20, x0
    84ec:	str	x21, [sp, #32]
    84f0:	mov	x21, x1
    84f4:	bl	8148 <grub_dl_unload_unneeded+0x50>
    84f8:	mov	x3, x0
    84fc:	cbz	x0, 8518 <grub_register_variable_hook+0x40>
    8500:	mov	w0, #0x0                   	// #0
    8504:	stp	x21, x19, [x3, #16]
    8508:	ldp	x19, x20, [sp, #16]
    850c:	ldr	x21, [sp, #32]
    8510:	ldp	x29, x30, [sp], #48
    8514:	ret
    8518:	adrp	x1, 0 <_start>
    851c:	mov	x0, x20
    8520:	ldr	x1, [x1]
    8524:	bl	81f8 <grub_env_set>
    8528:	cbz	w0, 853c <grub_register_variable_hook+0x64>
    852c:	adrp	x0, 0 <_start>
    8530:	ldr	x0, [x0]
    8534:	ldr	w0, [x0]
    8538:	b	8508 <grub_register_variable_hook+0x30>
    853c:	mov	x0, x20
    8540:	bl	8148 <grub_dl_unload_unneeded+0x50>
    8544:	mov	x3, x0
    8548:	b	8500 <grub_register_variable_hook+0x28>
    854c:	nop
	...

0000000000008560 <grub_env_export>:
    8560:	stp	x29, x30, [sp, #-32]!
    8564:	mov	x29, sp
    8568:	str	x19, [sp, #16]
    856c:	mov	x19, x0
    8570:	bl	8148 <grub_dl_unload_unneeded+0x50>
    8574:	mov	x1, x0
    8578:	cbz	x0, 8594 <grub_env_export+0x34>
    857c:	mov	w2, #0x1                   	// #1
    8580:	mov	w0, #0x0                   	// #0
    8584:	str	w2, [x1, #56]
    8588:	ldr	x19, [sp, #16]
    858c:	ldp	x29, x30, [sp], #32
    8590:	ret
    8594:	adrp	x1, 0 <_start>
    8598:	mov	x0, x19
    859c:	ldr	x1, [x1]
    85a0:	bl	81f8 <grub_env_set>
    85a4:	cbnz	w0, 8588 <grub_env_export+0x28>
    85a8:	mov	x0, x19
    85ac:	bl	8148 <grub_dl_unload_unneeded+0x50>
    85b0:	mov	x1, x0
    85b4:	b	857c <grub_env_export+0x1c>
	...

00000000000085c0 <grub_error>:
    85c0:	stp	x29, x30, [sp, #-144]!
    85c4:	adrp	x9, 0 <_start>
    85c8:	adrp	x8, 0 <_start>
    85cc:	mov	x29, sp
    85d0:	stp	x2, x3, [sp, #96]
    85d4:	add	x3, sp, #0x60
    85d8:	ldr	x2, [x9]
    85dc:	str	x19, [sp, #16]
    85e0:	ldr	x8, [x8]
    85e4:	mov	w19, w0
    85e8:	ldr	x2, [x2]
    85ec:	stp	x4, x5, [sp, #112]
    85f0:	add	x4, sp, #0x90
    85f4:	stp	x6, x7, [sp, #128]
    85f8:	mov	x0, x1
    85fc:	mov	w1, #0xffffffd0            	// #-48
    8600:	str	w19, [x8]
    8604:	stp	x4, x4, [sp, #64]
    8608:	str	x3, [sp, #80]
    860c:	str	w1, [sp, #88]
    8610:	str	wzr, [sp, #92]
    8614:	blr	x2
    8618:	adrp	x1, 0 <_start>
    861c:	mov	x2, x0
    8620:	ldp	x6, x7, [sp, #64]
    8624:	add	x3, sp, #0x20
    8628:	ldp	x4, x5, [sp, #80]
    862c:	stp	x6, x7, [sp, #32]
    8630:	ldr	x0, [x1]
    8634:	mov	x1, #0x100                 	// #256
    8638:	stp	x4, x5, [sp, #48]
    863c:	bl	afa0 <grub_vsnprintf>
    8640:	mov	w0, w19
    8644:	ldr	x19, [sp, #16]
    8648:	ldp	x29, x30, [sp], #144
    864c:	ret
	...

0000000000008668 <grub_error_push>:
    8668:	stp	x29, x30, [sp, #-32]!
    866c:	adrp	x0, 0 <_start>
    8670:	mov	x29, sp
    8674:	stp	x19, x20, [sp, #16]
    8678:	ldr	x19, [x0]
    867c:	ldr	w0, [x19]
    8680:	cmp	w0, #0x9
    8684:	b.le	86a8 <grub_error_push+0x40>
    8688:	adrp	x0, 0 <_start>
    868c:	mov	w1, #0x1                   	// #1
    8690:	str	w1, [x19, #2608]
    8694:	ldr	x20, [x0]
    8698:	str	wzr, [x20]
    869c:	ldp	x19, x20, [sp, #16]
    86a0:	ldp	x29, x30, [sp], #32
    86a4:	ret
    86a8:	adrp	x2, 0 <_start>
    86ac:	sbfiz	x3, x0, #6, #32
    86b0:	adrp	x1, 0 <_start>
    86b4:	add	x4, x19, #0x8
    86b8:	ldr	x20, [x2]
    86bc:	add	x3, x3, w0, sxtw
    86c0:	ldr	x1, [x1]
    86c4:	mov	w2, #0x104                 	// #260
    86c8:	ldr	w5, [x20]
    86cc:	smaddl	x0, w0, w2, x4
    86d0:	str	w5, [x4, x3, lsl #2]
    86d4:	mov	x2, #0x100                 	// #256
    86d8:	add	x0, x0, #0x4
    86dc:	bl	9a40 <grub_memmove>
    86e0:	str	wzr, [x20]
    86e4:	ldr	w0, [x19]
    86e8:	add	w0, w0, #0x1
    86ec:	str	w0, [x19]
    86f0:	ldp	x19, x20, [sp, #16]
    86f4:	ldp	x29, x30, [sp], #32
    86f8:	ret
    86fc:	nop
	...

0000000000008718 <grub_error_pop>:
    8718:	adrp	x0, 0 <_start>
    871c:	ldr	x0, [x0]
    8720:	ldr	w1, [x0]
    8724:	cmp	w1, #0x0
    8728:	b.gt	8740 <grub_error_pop+0x28>
    872c:	adrp	x1, 0 <_start>
    8730:	mov	w0, #0x0                   	// #0
    8734:	ldr	x1, [x1]
    8738:	str	wzr, [x1]
    873c:	ret
    8740:	sub	w1, w1, #0x1
    8744:	stp	x29, x30, [sp, #-16]!
    8748:	mov	x2, x0
    874c:	sbfiz	x3, x1, #6, #32
    8750:	mov	x29, sp
    8754:	add	x3, x3, w1, sxtw
    8758:	adrp	x4, 0 <_start>
    875c:	adrp	x0, 0 <_start>
    8760:	str	w1, [x2], #8
    8764:	mov	w5, #0x104                 	// #260
    8768:	ldr	x4, [x4]
    876c:	smaddl	x1, w1, w5, x2
    8770:	ldr	w3, [x2, x3, lsl #2]
    8774:	mov	x2, #0x100                 	// #256
    8778:	ldr	x0, [x0]
    877c:	add	x1, x1, #0x4
    8780:	str	w3, [x4]
    8784:	bl	9a40 <grub_memmove>
    8788:	mov	w0, #0x1                   	// #1
    878c:	ldp	x29, x30, [sp], #16
    8790:	ret
    8794:	nop
	...

00000000000087b0 <grub_print_error>:
    87b0:	stp	x29, x30, [sp, #-64]!
    87b4:	adrp	x0, 0 <_start>
    87b8:	mov	x29, sp
    87bc:	stp	x19, x20, [sp, #16]
    87c0:	adrp	x20, 0 <_start>
    87c4:	ldr	x19, [x0]
    87c8:	stp	x21, x22, [sp, #32]
    87cc:	adrp	x22, 0 <_start>
    87d0:	adrp	x21, 0 <_start>
    87d4:	str	x23, [sp, #48]
    87d8:	adrp	x23, 0 <_start>
    87dc:	nop
    87e0:	ldr	w0, [x19]
    87e4:	cbz	w0, 8810 <grub_print_error+0x60>
    87e8:	ldr	x1, [x22]
    87ec:	ldr	x0, [x23]
    87f0:	ldr	x1, [x1]
    87f4:	blr	x1
    87f8:	ldr	x1, [x21]
    87fc:	bl	ada8 <grub_err_printf>
    8800:	ldr	x1, [x20]
    8804:	ldr	w0, [x1]
    8808:	add	w0, w0, #0x1
    880c:	str	w0, [x1]
    8810:	bl	8718 <grub_error_pop>
    8814:	cbnz	w0, 87e0 <grub_print_error+0x30>
    8818:	adrp	x0, 0 <_start>
    881c:	ldr	x19, [x0]
    8820:	ldr	w0, [x19, #2608]
    8824:	cbnz	w0, 883c <grub_print_error+0x8c>
    8828:	ldp	x19, x20, [sp, #16]
    882c:	ldp	x21, x22, [sp, #32]
    8830:	ldr	x23, [sp, #48]
    8834:	ldp	x29, x30, [sp], #64
    8838:	ret
    883c:	adrp	x0, 0 <_start>
    8840:	ldr	x0, [x0]
    8844:	bl	ada8 <grub_err_printf>
    8848:	str	wzr, [x19, #2608]
    884c:	ldp	x19, x20, [sp, #16]
    8850:	ldp	x21, x22, [sp, #32]
    8854:	ldr	x23, [sp, #48]
    8858:	ldp	x29, x30, [sp], #64
    885c:	ret
	...

0000000000008898 <grub_file_get_device_name>:
    8898:	stp	x29, x30, [sp, #-48]!
    889c:	mov	x29, sp
    88a0:	stp	x19, x20, [sp, #16]
    88a4:	mov	x19, #0x0                   	// #0
    88a8:	ldrb	w1, [x0]
    88ac:	cmp	w1, #0x28
    88b0:	b.eq	88c4 <grub_file_get_device_name+0x2c>  // b.none
    88b4:	mov	x0, x19
    88b8:	ldp	x19, x20, [sp, #16]
    88bc:	ldp	x29, x30, [sp], #48
    88c0:	ret
    88c4:	mov	x20, x0
    88c8:	mov	w1, #0x29                  	// #41
    88cc:	bl	9c00 <grub_strchr>
    88d0:	mov	x19, x0
    88d4:	cbz	x0, 8920 <grub_file_get_device_name+0x88>
    88d8:	str	x21, [sp, #32]
    88dc:	sub	x21, x0, x20
    88e0:	mov	x0, x21
    88e4:	bl	57d8 <grub_malloc>
    88e8:	mov	x19, x0
    88ec:	cbz	x0, 8918 <grub_file_get_device_name+0x80>
    88f0:	sub	x2, x21, #0x1
    88f4:	add	x21, x19, x21
    88f8:	add	x1, x20, #0x1
    88fc:	bl	9a40 <grub_memmove>
    8900:	mov	x0, x19
    8904:	sturb	wzr, [x21, #-1]
    8908:	ldp	x19, x20, [sp, #16]
    890c:	ldr	x21, [sp, #32]
    8910:	ldp	x29, x30, [sp], #48
    8914:	ret
    8918:	ldr	x21, [sp, #32]
    891c:	b	88b4 <grub_file_get_device_name+0x1c>
    8920:	adrp	x1, 0 <_start>
    8924:	mov	w2, #0x29                  	// #41
    8928:	mov	w0, #0x7                   	// #7
    892c:	ldr	x1, [x1]
    8930:	bl	85c0 <grub_error>
    8934:	b	88b4 <grub_file_get_device_name+0x1c>
	...

0000000000008940 <grub_file_read>:
    8940:	stp	x29, x30, [sp, #-48]!
    8944:	mov	x29, sp
    8948:	ldr	x4, [x0, #24]
    894c:	ldr	x3, [x0, #64]
    8950:	cmp	x4, x3
    8954:	b.hi	8a20 <grub_file_read+0xe0>  // b.pmore
    8958:	stp	x19, x20, [sp, #16]
    895c:	mov	x19, x0
    8960:	mov	x0, #0x0                   	// #0
    8964:	cbz	x2, 8980 <grub_file_read+0x40>
    8968:	sub	x3, x3, x4
    896c:	cmp	x3, x2
    8970:	csel	x2, x3, x2, ls  // ls = plast
    8974:	cmp	x2, #0x0
    8978:	b.lt	898c <grub_file_read+0x4c>  // b.tstop
    897c:	b.ne	89d4 <grub_file_read+0x94>  // b.any
    8980:	ldp	x19, x20, [sp, #16]
    8984:	ldp	x29, x30, [sp], #48
    8988:	ret
    898c:	str	x21, [sp, #32]
    8990:	lsr	x2, x2, #1
    8994:	ldp	x20, x21, [x19, #88]
    8998:	cbz	x20, 89e0 <grub_file_read+0xa0>
    899c:	ldr	x3, [x19, #16]
    89a0:	mov	x0, x19
    89a4:	ldr	x3, [x3, #40]
    89a8:	blr	x3
    89ac:	stp	x20, x21, [x19, #88]
    89b0:	cmp	x0, #0x0
    89b4:	b.le	8a10 <grub_file_read+0xd0>
    89b8:	ldr	x1, [x19, #24]
    89bc:	ldr	x21, [sp, #32]
    89c0:	add	x1, x1, x0
    89c4:	str	x1, [x19, #24]
    89c8:	ldp	x19, x20, [sp, #16]
    89cc:	ldp	x29, x30, [sp], #48
    89d0:	ret
    89d4:	str	x21, [sp, #32]
    89d8:	ldp	x20, x21, [x19, #88]
    89dc:	cbnz	x20, 899c <grub_file_read+0x5c>
    89e0:	adrp	x0, 0 <_start>
    89e4:	str	x4, [x19, #32]
    89e8:	ldr	x3, [x19, #16]
    89ec:	ldr	x0, [x0]
    89f0:	ldr	x3, [x3, #40]
    89f4:	ldr	x0, [x0]
    89f8:	stp	x0, x19, [x19, #88]
    89fc:	mov	x0, x19
    8a00:	blr	x3
    8a04:	stp	x20, x21, [x19, #88]
    8a08:	cmp	x0, #0x0
    8a0c:	b.gt	89b8 <grub_file_read+0x78>
    8a10:	ldp	x19, x20, [sp, #16]
    8a14:	ldr	x21, [sp, #32]
    8a18:	ldp	x29, x30, [sp], #48
    8a1c:	ret
    8a20:	adrp	x1, 0 <_start>
    8a24:	mov	w0, #0xb                   	// #11
    8a28:	ldr	x1, [x1]
    8a2c:	bl	85c0 <grub_error>
    8a30:	mov	x0, #0xffffffffffffffff    	// #-1
    8a34:	b	8984 <grub_file_read+0x44>
	...

0000000000008a48 <grub_file_close>:
    8a48:	stp	x29, x30, [sp, #-32]!
    8a4c:	mov	x29, sp
    8a50:	ldr	x1, [x0, #16]
    8a54:	ldr	x1, [x1, #48]
    8a58:	str	x19, [sp, #16]
    8a5c:	mov	x19, x0
    8a60:	cbz	x1, 8a68 <grub_file_close+0x20>
    8a64:	blr	x1
    8a68:	ldr	x0, [x19, #8]
    8a6c:	cbz	x0, 8a74 <grub_file_close+0x2c>
    8a70:	bl	61d8 <grub_device_close>
    8a74:	ldr	x0, [x19]
    8a78:	bl	5828 <grub_free>
    8a7c:	mov	x0, x19
    8a80:	bl	5828 <grub_free>
    8a84:	adrp	x0, 0 <_start>
    8a88:	ldr	x19, [sp, #16]
    8a8c:	ldr	x0, [x0]
    8a90:	ldp	x29, x30, [sp], #32
    8a94:	ldr	w0, [x0]
    8a98:	ret
    8a9c:	nop
	...

0000000000008aa8 <grub_file_open>:
    8aa8:	stp	x29, x30, [sp, #-80]!
    8aac:	mov	x29, sp
    8ab0:	stp	x19, x20, [sp, #16]
    8ab4:	stp	x21, x22, [sp, #32]
    8ab8:	mov	x22, x0
    8abc:	stp	x23, x24, [sp, #48]
    8ac0:	mov	w23, w1
    8ac4:	bl	8898 <grub_file_get_device_name>
    8ac8:	adrp	x1, 0 <_start>
    8acc:	mov	x19, x0
    8ad0:	ldr	x24, [x1]
    8ad4:	ldr	w0, [x24]
    8ad8:	cbnz	w0, 8c48 <grub_file_open+0x1a0>
    8adc:	ldrb	w0, [x22]
    8ae0:	cmp	w0, #0x28
    8ae4:	b.eq	8c50 <grub_file_open+0x1a8>  // b.none
    8ae8:	mov	x20, x22
    8aec:	mov	x0, x19
    8af0:	bl	60d0 <grub_device_open>
    8af4:	mov	x21, x0
    8af8:	mov	x0, x19
    8afc:	bl	5828 <grub_free>
    8b00:	cbz	x21, 8c48 <grub_file_open+0x1a0>
    8b04:	mov	x0, #0x68                  	// #104
    8b08:	bl	57e8 <grub_zalloc>
    8b0c:	mov	x19, x0
    8b10:	cbz	x0, 8bf0 <grub_file_open+0x148>
    8b14:	ldr	x0, [x21]
    8b18:	str	x21, [x19, #8]
    8b1c:	cbz	x0, 8bd8 <grub_file_open+0x130>
    8b20:	ldrb	w0, [x20]
    8b24:	cmp	w0, #0x2f
    8b28:	b.eq	8bd8 <grub_file_open+0x130>  // b.none
    8b2c:	adrp	x0, 0 <_start>
    8b30:	ldr	x1, [x0]
    8b34:	str	x1, [x19, #16]
    8b38:	ldr	x2, [x1, #32]
    8b3c:	mov	x0, x19
    8b40:	mov	x1, x20
    8b44:	blr	x2
    8b48:	cbnz	w0, 8bf0 <grub_file_open+0x148>
    8b4c:	mov	x0, x22
    8b50:	stp	x25, x26, [sp, #64]
    8b54:	bl	a598 <grub_strdup>
    8b58:	adrp	x1, 0 <_start>
    8b5c:	str	x0, [x19]
    8b60:	mov	x21, #0x1                   	// #1
    8b64:	mov	x3, #0x0                   	// #0
    8b68:	ldr	x25, [x1]
    8b6c:	str	wzr, [x24]
    8b70:	ldr	x2, [x25, x21, lsl #3]
    8b74:	mov	w1, w23
    8b78:	mov	x0, x19
    8b7c:	cbz	x2, 8c1c <grub_file_open+0x174>
    8b80:	blr	x2
    8b84:	mov	x20, x0
    8b88:	cmp	x0, #0x0
    8b8c:	mov	x3, x19
    8b90:	cset	w0, ne  // ne = any
    8b94:	cmp	x20, x19
    8b98:	csel	w26, w0, wzr, ne  // ne = any
    8b9c:	cbnz	w26, 8c28 <grub_file_open+0x180>
    8ba0:	mov	x19, x20
    8ba4:	cmp	w21, #0x3
    8ba8:	add	x21, x21, #0x1
    8bac:	cset	w1, ls  // ls = plast
    8bb0:	tst	w0, w1
    8bb4:	b.ne	8b70 <grub_file_open+0xc8>  // b.any
    8bb8:	cbz	x19, 8c68 <grub_file_open+0x1c0>
    8bbc:	ldp	x25, x26, [sp, #64]
    8bc0:	mov	x0, x19
    8bc4:	ldp	x19, x20, [sp, #16]
    8bc8:	ldp	x21, x22, [sp, #32]
    8bcc:	ldp	x23, x24, [sp, #48]
    8bd0:	ldp	x29, x30, [sp], #80
    8bd4:	ret
    8bd8:	mov	x0, x21
    8bdc:	bl	9010 <grub_fs_probe>
    8be0:	str	x0, [x19, #16]
    8be4:	mov	x1, x0
    8be8:	cbnz	x0, 8b38 <grub_file_open+0x90>
    8bec:	nop
    8bf0:	mov	x0, x21
    8bf4:	bl	61d8 <grub_device_close>
    8bf8:	mov	x0, x19
    8bfc:	mov	x19, #0x0                   	// #0
    8c00:	bl	5828 <grub_free>
    8c04:	mov	x0, x19
    8c08:	ldp	x19, x20, [sp, #16]
    8c0c:	ldp	x21, x22, [sp, #32]
    8c10:	ldp	x23, x24, [sp, #48]
    8c14:	ldp	x29, x30, [sp], #80
    8c18:	ret
    8c1c:	cmp	x19, #0x0
    8c20:	cset	w0, ne  // ne = any
    8c24:	b	8ba4 <grub_file_open+0xfc>
    8c28:	mov	x0, x22
    8c2c:	bl	a598 <grub_strdup>
    8c30:	str	x0, [x20]
    8c34:	mov	x3, x19
    8c38:	mov	w0, w26
    8c3c:	mov	x19, x20
    8c40:	str	wzr, [x24]
    8c44:	b	8ba4 <grub_file_open+0xfc>
    8c48:	mov	x19, #0x0                   	// #0
    8c4c:	b	8bf8 <grub_file_open+0x150>
    8c50:	mov	x0, x22
    8c54:	mov	w1, #0x29                  	// #41
    8c58:	bl	9c00 <grub_strchr>
    8c5c:	cbz	x0, 8ae8 <grub_file_open+0x40>
    8c60:	add	x20, x0, #0x1
    8c64:	b	8aec <grub_file_open+0x44>
    8c68:	mov	x0, x3
    8c6c:	bl	8a48 <grub_file_close>
    8c70:	ldp	x25, x26, [sp, #64]
    8c74:	b	8bc0 <grub_file_open+0x118>
	...

0000000000008c90 <grub_file_seek>:
    8c90:	mov	x2, x0
    8c94:	ldr	x0, [x0, #64]
    8c98:	cmp	x0, x1
    8c9c:	b.cc	8cac <grub_file_seek+0x1c>  // b.lo, b.ul, b.last
    8ca0:	ldr	x0, [x2, #24]
    8ca4:	str	x1, [x2, #24]
    8ca8:	ret
    8cac:	stp	x29, x30, [sp, #-16]!
    8cb0:	adrp	x1, 0 <_start>
    8cb4:	mov	w0, #0xb                   	// #11
    8cb8:	mov	x29, sp
    8cbc:	ldr	x1, [x1]
    8cc0:	bl	85c0 <grub_error>
    8cc4:	mov	x0, #0xffffffffffffffff    	// #-1
    8cc8:	ldp	x29, x30, [sp], #16
    8ccc:	ret
	...
    8cd8:	mov	w0, #0x1                   	// #1
    8cdc:	ret
    8ce0:	stp	x29, x30, [sp, #-80]!
    8ce4:	mov	x29, sp
    8ce8:	stp	x19, x20, [sp, #16]
    8cec:	stp	x23, x24, [sp, #48]
    8cf0:	ldr	x20, [x0, #24]
    8cf4:	stp	x25, x26, [sp, #64]
    8cf8:	ldr	x23, [x0, #64]
    8cfc:	ldr	x24, [x0, #80]
    8d00:	sub	x23, x23, x20
    8d04:	cmp	x23, x2
    8d08:	csel	x23, x23, x2, ls  // ls = plast
    8d0c:	ldr	x5, [x24, #8]
    8d10:	cmp	x23, #0x0
    8d14:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    8d18:	b.eq	8de4 <grub_file_seek+0x154>  // b.none
    8d1c:	mov	x26, x0
    8d20:	mov	x25, #0x0                   	// #0
    8d24:	stp	x21, x22, [sp, #32]
    8d28:	and	x21, x20, #0x1ff
    8d2c:	mov	x22, x1
    8d30:	lsr	x20, x20, #9
    8d34:	b	8d90 <grub_file_seek+0x100>
    8d38:	ldr	x0, [x26, #8]
    8d3c:	cmp	x1, x3, lsr #9
    8d40:	ldr	x1, [x24]
    8d44:	sub	x19, x19, x21
    8d48:	ldr	x0, [x0]
    8d4c:	csel	x19, x19, x23, cc  // cc = lo, ul, last
    8d50:	mov	x2, x21
    8d54:	mov	x3, x19
    8d58:	mov	x4, x22
    8d5c:	add	x21, x19, x21
    8d60:	add	x1, x20, x1
    8d64:	bl	6d28 <grub_disk_read>
    8d68:	cbnz	w0, 8ddc <grub_file_seek+0x14c>
    8d6c:	ldr	x5, [x24, #24]
    8d70:	sub	x23, x23, x19
    8d74:	cmp	x23, #0x0
    8d78:	sub	x20, x20, x21, lsr #9
    8d7c:	add	x24, x24, #0x10
    8d80:	add	x25, x25, x19
    8d84:	and	x21, x21, #0x1ff
    8d88:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    8d8c:	b.eq	8dc0 <grub_file_seek+0x130>  // b.none
    8d90:	sub	x1, x5, x20
    8d94:	add	x3, x23, x21
    8d98:	add	x3, x3, #0x1ff
    8d9c:	cmp	x5, x20
    8da0:	lsl	x19, x1, #9
    8da4:	b.hi	8d38 <grub_file_seek+0xa8>  // b.pmore
    8da8:	add	x24, x24, #0x10
    8dac:	sub	x20, x20, x5
    8db0:	cmp	x23, #0x0
    8db4:	ldr	x5, [x24, #8]
    8db8:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    8dbc:	b.ne	8d90 <grub_file_seek+0x100>  // b.any
    8dc0:	ldp	x21, x22, [sp, #32]
    8dc4:	mov	x0, x25
    8dc8:	ldp	x19, x20, [sp, #16]
    8dcc:	ldp	x23, x24, [sp, #48]
    8dd0:	ldp	x25, x26, [sp, #64]
    8dd4:	ldp	x29, x30, [sp], #80
    8dd8:	ret
    8ddc:	mov	x25, #0xffffffffffffffff    	// #-1
    8de0:	b	8dc0 <grub_file_seek+0x130>
    8de4:	mov	x25, #0x0                   	// #0
    8de8:	b	8dc4 <grub_file_seek+0x134>
    8dec:	nop
    8df0:	stp	x29, x30, [sp, #-96]!
    8df4:	mov	x29, sp
    8df8:	stp	x19, x20, [sp, #16]
    8dfc:	mov	x20, x0
    8e00:	mov	x0, x1
    8e04:	stp	x23, x24, [sp, #48]
    8e08:	mov	x23, x1
    8e0c:	mov	w19, #0x0                   	// #0
    8e10:	ldr	x1, [x20, #8]
    8e14:	stp	x21, x22, [sp, #32]
    8e18:	add	w21, w19, #0x1
    8e1c:	ldr	x22, [x1]
    8e20:	mov	w1, #0x2c                  	// #44
    8e24:	str	x23, [sp, #88]
    8e28:	bl	9c00 <grub_strchr>
    8e2c:	mov	x1, x0
    8e30:	str	x1, [sp, #88]
    8e34:	add	x0, x0, #0x1
    8e38:	cbz	x1, 8e64 <grub_file_seek+0x1d4>
    8e3c:	nop
    8e40:	mov	w1, #0x2c                  	// #44
    8e44:	str	x0, [sp, #88]
    8e48:	bl	9c00 <grub_strchr>
    8e4c:	mov	x1, x0
    8e50:	str	x1, [sp, #88]
    8e54:	mov	w19, w21
    8e58:	add	w21, w19, #0x1
    8e5c:	add	x0, x0, #0x1
    8e60:	cbnz	x1, 8e40 <grub_file_seek+0x1b0>
    8e64:	add	w0, w19, #0x2
    8e68:	lsl	x0, x0, #4
    8e6c:	bl	57e8 <grub_zalloc>
    8e70:	mov	x24, x0
    8e74:	cbz	x0, 8fc0 <grub_file_seek+0x330>
    8e78:	str	xzr, [x20, #64]
    8e7c:	str	x23, [sp, #88]
    8e80:	cbz	w21, 8fdc <grub_file_seek+0x34c>
    8e84:	adrp	x0, 0 <_start>
    8e88:	add	x1, x24, #0x10
    8e8c:	add	x19, x1, w19, uxtw #4
    8e90:	str	x25, [sp, #64]
    8e94:	ldr	x21, [x0]
    8e98:	mov	x25, x24
    8e9c:	mov	x0, x23
    8ea0:	b	8edc <grub_file_seek+0x24c>
    8ea4:	ldr	x0, [x25]
    8ea8:	add	x25, x25, #0x10
    8eac:	ldr	x1, [x22, #16]
    8eb0:	add	x0, x3, x0
    8eb4:	cmp	x1, x0
    8eb8:	b.cc	8f74 <grub_file_seek+0x2e4>  // b.lo, b.ul, b.last
    8ebc:	ldr	x0, [x20, #64]
    8ec0:	cmp	x25, x19
    8ec4:	ldr	x2, [sp, #88]
    8ec8:	add	x3, x0, x3, lsl #9
    8ecc:	str	x3, [x20, #64]
    8ed0:	add	x0, x2, #0x1
    8ed4:	str	x0, [sp, #88]
    8ed8:	b.eq	8fd8 <grub_file_seek+0x348>  // b.none
    8edc:	ldrb	w3, [x0]
    8ee0:	add	x1, sp, #0x58
    8ee4:	mov	w2, #0x0                   	// #0
    8ee8:	cmp	w3, #0x2b
    8eec:	b.eq	8f10 <grub_file_seek+0x280>  // b.none
    8ef0:	bl	9d30 <grub_strtoull>
    8ef4:	ldr	w1, [x21]
    8ef8:	str	x0, [x25]
    8efc:	cbnz	w1, 8f88 <grub_file_seek+0x2f8>
    8f00:	ldr	x0, [sp, #88]
    8f04:	ldrb	w1, [x0]
    8f08:	cmp	w1, #0x2b
    8f0c:	b.ne	8f88 <grub_file_seek+0x2f8>  // b.any
    8f10:	add	x0, x0, #0x1
    8f14:	add	x1, sp, #0x58
    8f18:	mov	w2, #0x0                   	// #0
    8f1c:	str	x0, [sp, #88]
    8f20:	bl	9ed8 <grub_strtoul>
    8f24:	mov	x3, x0
    8f28:	ldr	w1, [x21]
    8f2c:	str	x0, [x25, #8]
    8f30:	cmp	w1, #0x0
    8f34:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    8f38:	b.eq	8f88 <grub_file_seek+0x2f8>  // b.none
    8f3c:	ldr	x0, [sp, #88]
    8f40:	ldrb	w0, [x0]
    8f44:	cmp	w0, #0x2c
    8f48:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    8f4c:	b.eq	8ea4 <grub_file_seek+0x214>  // b.none
    8f50:	bl	9d08 <grub_isspace>
    8f54:	cbz	w0, 8f88 <grub_file_seek+0x2f8>
    8f58:	ldr	x0, [x25]
    8f5c:	add	x25, x25, #0x10
    8f60:	ldur	x3, [x25, #-8]
    8f64:	ldr	x1, [x22, #16]
    8f68:	add	x0, x3, x0
    8f6c:	cmp	x1, x0
    8f70:	b.cs	8ebc <grub_file_seek+0x22c>  // b.hs, b.nlast
    8f74:	adrp	x1, 0 <_start>
    8f78:	mov	w0, #0x7                   	// #7
    8f7c:	ldr	x1, [x1]
    8f80:	bl	85c0 <grub_error>
    8f84:	b	8f9c <grub_file_seek+0x30c>
    8f88:	adrp	x1, 0 <_start>
    8f8c:	mov	x2, x23
    8f90:	mov	w0, #0x7                   	// #7
    8f94:	ldr	x1, [x1]
    8f98:	bl	85c0 <grub_error>
    8f9c:	mov	x0, x24
    8fa0:	bl	5828 <grub_free>
    8fa4:	ldr	w0, [x21]
    8fa8:	ldp	x19, x20, [sp, #16]
    8fac:	ldp	x21, x22, [sp, #32]
    8fb0:	ldp	x23, x24, [sp, #48]
    8fb4:	ldr	x25, [sp, #64]
    8fb8:	ldp	x29, x30, [sp], #96
    8fbc:	ret
    8fc0:	mov	w0, #0x0                   	// #0
    8fc4:	ldp	x19, x20, [sp, #16]
    8fc8:	ldp	x21, x22, [sp, #32]
    8fcc:	ldp	x23, x24, [sp, #48]
    8fd0:	ldp	x29, x30, [sp], #96
    8fd4:	ret
    8fd8:	ldr	x25, [sp, #64]
    8fdc:	str	x24, [x20, #80]
    8fe0:	mov	w0, #0x0                   	// #0
    8fe4:	ldp	x19, x20, [sp, #16]
    8fe8:	ldp	x21, x22, [sp, #32]
    8fec:	ldp	x23, x24, [sp, #48]
    8ff0:	ldp	x29, x30, [sp], #96
    8ff4:	ret
	...

0000000000009010 <grub_fs_probe>:
    9010:	stp	x29, x30, [sp, #-96]!
    9014:	mov	x29, sp
    9018:	stp	x21, x22, [sp, #32]
    901c:	mov	x22, x0
    9020:	ldr	x0, [x0]
    9024:	stp	x19, x20, [sp, #16]
    9028:	cbz	x0, 9114 <grub_fs_probe+0x104>
    902c:	adrp	x0, 0 <_start>
    9030:	stp	x27, x28, [sp, #80]
    9034:	ldr	x27, [x0]
    9038:	stp	x23, x24, [sp, #48]
    903c:	ldr	x19, [x27]
    9040:	cbz	x19, 9150 <grub_fs_probe+0x140>
    9044:	adrp	x5, 0 <_start>
    9048:	adrp	x4, 0 <_start>
    904c:	adrp	x3, 0 <_start>
    9050:	adrp	x2, 0 <_start>
    9054:	adrp	x1, 0 <_start>
    9058:	adrp	x0, 0 <_start>
    905c:	ldr	x21, [x4]
    9060:	stp	x25, x26, [sp, #64]
    9064:	adrp	x26, 0 <_start>
    9068:	ldr	x25, [x5]
    906c:	ldr	x20, [x3]
    9070:	ldr	x24, [x2]
    9074:	ldr	x23, [x1]
    9078:	ldr	x28, [x0]
    907c:	b	90bc <grub_fs_probe+0xac>
    9080:	bl	8668 <grub_error_push>
    9084:	ldr	x3, [x26]
    9088:	mov	x2, x21
    908c:	ldr	x4, [x19, #16]
    9090:	mov	x0, x20
    9094:	mov	w1, #0x4e                  	// #78
    9098:	bl	ae68 <grub_real_dprintf>
    909c:	bl	8718 <grub_error_pop>
    90a0:	ldr	w1, [x28]
    90a4:	and	w1, w1, #0xfffffffd
    90a8:	cmp	w1, #0x9
    90ac:	b.ne	91d8 <grub_fs_probe+0x1c8>  // b.any
    90b0:	ldr	x19, [x19]
    90b4:	str	wzr, [x28]
    90b8:	cbz	x19, 914c <grub_fs_probe+0x13c>
    90bc:	ldr	x4, [x19, #16]
    90c0:	mov	x3, x25
    90c4:	mov	x2, x21
    90c8:	mov	x0, x20
    90cc:	mov	w1, #0x38                  	// #56
    90d0:	bl	ae68 <grub_real_dprintf>
    90d4:	ldr	x4, [x19, #24]
    90d8:	mov	x2, x24
    90dc:	mov	x1, x23
    90e0:	mov	x0, x22
    90e4:	mov	x3, #0x0                   	// #0
    90e8:	blr	x4
    90ec:	ldr	w0, [x28]
    90f0:	cbnz	w0, 9080 <grub_fs_probe+0x70>
    90f4:	ldp	x23, x24, [sp, #48]
    90f8:	ldp	x25, x26, [sp, #64]
    90fc:	ldp	x27, x28, [sp, #80]
    9100:	mov	x0, x19
    9104:	ldp	x19, x20, [sp, #16]
    9108:	ldp	x21, x22, [sp, #32]
    910c:	ldp	x29, x30, [sp], #96
    9110:	ret
    9114:	ldr	x0, [x22, #8]
    9118:	cbz	x0, 9124 <grub_fs_probe+0x114>
    911c:	ldr	x19, [x0, #56]
    9120:	cbnz	x19, 9100 <grub_fs_probe+0xf0>
    9124:	adrp	x1, 0 <_start>
    9128:	mov	x19, #0x0                   	// #0
    912c:	mov	w0, #0x8                   	// #8
    9130:	ldr	x1, [x1]
    9134:	bl	85c0 <grub_error>
    9138:	mov	x0, x19
    913c:	ldp	x19, x20, [sp, #16]
    9140:	ldp	x21, x22, [sp, #32]
    9144:	ldp	x29, x30, [sp], #96
    9148:	ret
    914c:	ldp	x25, x26, [sp, #64]
    9150:	ldr	x0, [x27, #8]
    9154:	cbz	x0, 91fc <grub_fs_probe+0x1ec>
    9158:	ldr	w1, [x27, #16]
    915c:	cbnz	w1, 91fc <grub_fs_probe+0x1ec>
    9160:	mov	w1, #0x1                   	// #1
    9164:	adrp	x23, 0 <_start>
    9168:	adrp	x21, 0 <_start>
    916c:	adrp	x20, 0 <_start>
    9170:	str	w1, [x27, #16]
    9174:	b	91ac <grub_fs_probe+0x19c>
    9178:	ldr	x19, [x27]
    917c:	ldr	x2, [x23]
    9180:	ldr	x1, [x21]
    9184:	ldr	x4, [x19, #24]
    9188:	blr	x4
    918c:	ldr	x1, [x20]
    9190:	ldr	w0, [x1]
    9194:	and	w2, w0, #0xfffffffd
    9198:	cmp	w2, #0x9
    919c:	cbz	w0, 9208 <grub_fs_probe+0x1f8>
    91a0:	b.ne	9220 <grub_fs_probe+0x210>  // b.any
    91a4:	ldr	x0, [x27, #8]
    91a8:	str	wzr, [x1]
    91ac:	blr	x0
    91b0:	mov	w1, w0
    91b4:	mov	x3, #0x0                   	// #0
    91b8:	mov	x0, x22
    91bc:	cbnz	w1, 9178 <grub_fs_probe+0x168>
    91c0:	ldr	w0, [x27, #16]
    91c4:	ldp	x23, x24, [sp, #48]
    91c8:	sub	w0, w0, #0x1
    91cc:	str	w0, [x27, #16]
    91d0:	ldp	x27, x28, [sp, #80]
    91d4:	b	9124 <grub_fs_probe+0x114>
    91d8:	mov	x19, #0x0                   	// #0
    91dc:	mov	x0, x19
    91e0:	ldp	x19, x20, [sp, #16]
    91e4:	ldp	x21, x22, [sp, #32]
    91e8:	ldp	x23, x24, [sp, #48]
    91ec:	ldp	x25, x26, [sp, #64]
    91f0:	ldp	x27, x28, [sp, #80]
    91f4:	ldp	x29, x30, [sp], #96
    91f8:	ret
    91fc:	ldp	x23, x24, [sp, #48]
    9200:	ldp	x27, x28, [sp, #80]
    9204:	b	9124 <grub_fs_probe+0x114>
    9208:	ldr	w0, [x27, #16]
    920c:	ldp	x23, x24, [sp, #48]
    9210:	sub	w0, w0, #0x1
    9214:	str	w0, [x27, #16]
    9218:	ldp	x27, x28, [sp, #80]
    921c:	b	9100 <grub_fs_probe+0xf0>
    9220:	ldr	w0, [x27, #16]
    9224:	mov	x19, #0x0                   	// #0
    9228:	ldp	x23, x24, [sp, #48]
    922c:	sub	w0, w0, #0x1
    9230:	str	w0, [x27, #16]
    9234:	ldp	x27, x28, [sp, #80]
    9238:	b	9100 <grub_fs_probe+0xf0>
    923c:	nop
	...

0000000000009288 <grub_named_list_find>:
    9288:	cbz	x0, 92dc <grub_named_list_find+0x54>
    928c:	stp	x29, x30, [sp, #-32]!
    9290:	mov	x29, sp
    9294:	stp	x19, x20, [sp, #16]
    9298:	mov	x19, x0
    929c:	mov	x20, x1
    92a0:	b	92ac <grub_named_list_find+0x24>
    92a4:	ldr	x19, [x19]
    92a8:	cbz	x19, 92cc <grub_named_list_find+0x44>
    92ac:	ldr	x0, [x19, #16]
    92b0:	mov	x1, x20
    92b4:	bl	9b60 <grub_strcmp>
    92b8:	cbnz	w0, 92a4 <grub_named_list_find+0x1c>
    92bc:	mov	x0, x19
    92c0:	ldp	x19, x20, [sp, #16]
    92c4:	ldp	x29, x30, [sp], #32
    92c8:	ret
    92cc:	mov	x0, #0x0                   	// #0
    92d0:	ldp	x19, x20, [sp, #16]
    92d4:	ldp	x29, x30, [sp], #32
    92d8:	ret
    92dc:	mov	x0, #0x0                   	// #0
    92e0:	ret
    92e4:	nop

00000000000092e8 <grub_list_push>:
    92e8:	ldr	x2, [x0]
    92ec:	str	x0, [x1, #8]
    92f0:	cbz	x2, 92f8 <grub_list_push+0x10>
    92f4:	str	x1, [x2, #8]
    92f8:	str	x2, [x1]
    92fc:	str	x1, [x0]
    9300:	ret
    9304:	nop

0000000000009308 <grub_list_remove>:
    9308:	ldp	x1, x2, [x0]
    930c:	cbz	x2, 9318 <grub_list_remove+0x10>
    9310:	str	x1, [x2]
    9314:	ldr	x1, [x0]
    9318:	cbz	x1, 9320 <grub_list_remove+0x18>
    931c:	str	x2, [x1, #8]
    9320:	stp	xzr, xzr, [x0]
    9324:	ret
    9328:	stp	x29, x30, [sp, #-32]!
    932c:	mov	x0, x1
    9330:	mov	x29, sp
    9334:	str	x19, [sp, #16]
    9338:	mov	x19, x1
    933c:	bl	af48 <grub_strlen>
    9340:	ldrb	w1, [x19]
    9344:	cmp	w1, #0x28
    9348:	b.ne	935c <grub_list_remove+0x54>  // b.any
    934c:	add	x1, x19, x0
    9350:	ldurb	w1, [x1, #-1]
    9354:	cmp	w1, #0x29
    9358:	b.eq	936c <grub_list_remove+0x64>  // b.none
    935c:	mov	x0, x19
    9360:	ldr	x19, [sp, #16]
    9364:	ldp	x29, x30, [sp], #32
    9368:	b	a598 <grub_strdup>
    936c:	sub	x1, x0, #0x2
    9370:	add	x0, x19, #0x1
    9374:	ldr	x19, [sp, #16]
    9378:	ldp	x29, x30, [sp], #32
    937c:	b	a600 <grub_strndup>

0000000000009380 <grub_modules_get_end>:
    9380:	adrp	x0, 0 <_start>
    9384:	ldr	x0, [x0]
    9388:	ldr	x0, [x0]
    938c:	cbz	x0, 93a4 <grub_modules_get_end+0x24>
    9390:	ldr	w2, [x0]
    9394:	mov	w1, #0x696d                	// #26989
    9398:	movk	w1, #0x676d, lsl #16
    939c:	cmp	w2, w1
    93a0:	b.eq	93a8 <grub_modules_get_end+0x28>  // b.none
    93a4:	ret
    93a8:	ldr	x1, [x0, #16]
    93ac:	add	x0, x0, x1
    93b0:	ret
    93b4:	nop
	...

00000000000093c0 <grub_main>:
    93c0:	stp	x29, x30, [sp, #-80]!
    93c4:	mov	x29, sp
    93c8:	stp	x19, x20, [sp, #16]
    93cc:	stp	x21, x22, [sp, #32]
    93d0:	stp	x23, x24, [sp, #48]
    93d4:	bl	50 <grub_machine_init>
    93d8:	adrp	x0, 0 <_start>
    93dc:	ldr	x20, [x0]
    93e0:	ldr	x19, [x20]
    93e4:	cbz	x19, 9404 <grub_main+0x44>
    93e8:	ldr	x2, [x19, #88]
    93ec:	cbz	x2, 93fc <grub_main+0x3c>
    93f0:	mov	x0, x19
    93f4:	mov	w1, #0x2                   	// #2
    93f8:	blr	x2
    93fc:	ldr	x19, [x19]
    9400:	cbnz	x19, 93e8 <grub_main+0x28>
    9404:	adrp	x0, 0 <_start>
    9408:	ldr	x0, [x0]
    940c:	bl	ada8 <grub_err_printf>
    9410:	ldr	x19, [x20]
    9414:	cbz	x19, 9434 <grub_main+0x74>
    9418:	ldr	x2, [x19, #88]
    941c:	cbz	x2, 942c <grub_main+0x6c>
    9420:	mov	x0, x19
    9424:	mov	w1, #0x0                   	// #0
    9428:	blr	x2
    942c:	ldr	x19, [x19]
    9430:	cbnz	x19, 9418 <grub_main+0x58>
    9434:	adrp	x0, 0 <_start>
    9438:	ldr	x20, [x0]
    943c:	ldr	x0, [x20]
    9440:	cbz	x0, 9458 <grub_main+0x98>
    9444:	ldr	w2, [x0]
    9448:	mov	w1, #0x696d                	// #26989
    944c:	movk	w1, #0x676d, lsl #16
    9450:	cmp	w2, w1
    9454:	b.eq	97a4 <grub_main+0x3e4>  // b.none
    9458:	bl	c368 <grub_register_exported_symbols>
    945c:	ldr	x2, [x20]
    9460:	cbz	x2, 9478 <grub_main+0xb8>
    9464:	ldr	w1, [x2]
    9468:	mov	w0, #0x696d                	// #26989
    946c:	movk	w0, #0x676d, lsl #16
    9470:	cmp	w1, w0
    9474:	b.eq	96e0 <grub_main+0x320>  // b.none
    9478:	ldr	x4, [x20]
    947c:	stp	xzr, xzr, [sp, #64]
    9480:	cbz	x4, 9498 <grub_main+0xd8>
    9484:	ldr	w1, [x4]
    9488:	mov	w0, #0x696d                	// #26989
    948c:	movk	w0, #0x676d, lsl #16
    9490:	cmp	w1, w0
    9494:	b.eq	975c <grub_main+0x39c>  // b.none
    9498:	mov	x19, #0x0                   	// #0
    949c:	adrp	x2, 0 <_start>
    94a0:	adrp	x0, 0 <_start>
    94a4:	mov	x1, #0x0                   	// #0
    94a8:	ldr	x2, [x2]
    94ac:	ldr	x21, [x0]
    94b0:	mov	x0, x21
    94b4:	bl	84d8 <grub_register_variable_hook>
    94b8:	add	x0, sp, #0x40
    94bc:	add	x1, sp, #0x48
    94c0:	bl	3a38 <grub_machine_get_bootlocation>
    94c4:	ldr	x0, [sp, #64]
    94c8:	cbz	x0, 9518 <grub_main+0x158>
    94cc:	adrp	x4, 0 <_start>
    94d0:	adrp	x3, 0 <_start>
    94d4:	ldr	x2, [sp, #72]
    94d8:	mov	x1, x0
    94dc:	ldr	x3, [x3]
    94e0:	cmp	x2, #0x0
    94e4:	ldr	x0, [x4]
    94e8:	csel	x2, x2, x3, ne  // ne = any
    94ec:	bl	b138 <grub_xasprintf>
    94f0:	mov	x22, x0
    94f4:	cbz	x0, 9518 <grub_main+0x158>
    94f8:	adrp	x23, 0 <_start>
    94fc:	mov	x1, x0
    9500:	ldr	x0, [x23]
    9504:	bl	81f8 <grub_env_set>
    9508:	ldr	x0, [x23]
    950c:	bl	8560 <grub_env_export>
    9510:	mov	x0, x22
    9514:	bl	5828 <grub_free>
    9518:	cbz	x19, 96ac <grub_main+0x2ec>
    951c:	ldrb	w0, [x19]
    9520:	cmp	w0, #0x28
    9524:	b.eq	98bc <grub_main+0x4fc>  // b.none
    9528:	cbz	w0, 96ac <grub_main+0x2ec>
    952c:	mov	x22, #0x0                   	// #0
    9530:	mov	x0, x19
    9534:	mov	x23, x22
    9538:	bl	a598 <grub_strdup>
    953c:	mov	x19, x0
    9540:	ldr	x0, [sp, #64]
    9544:	cbz	x23, 96b4 <grub_main+0x2f4>
    9548:	cbz	x0, 96c0 <grub_main+0x300>
    954c:	ldrb	w1, [x23]
    9550:	cmp	w1, #0x2c
    9554:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    9558:	b.ne	96c0 <grub_main+0x300>  // b.any
    955c:	ldrb	w3, [x0]
    9560:	cbz	w3, 9584 <grub_main+0x1c4>
    9564:	mov	x1, x0
    9568:	cmp	w3, #0x5c
    956c:	b.eq	96cc <grub_main+0x30c>  // b.none
    9570:	cmp	w3, #0x2c
    9574:	b.eq	9818 <grub_main+0x458>  // b.none
    9578:	add	x1, x1, #0x1
    957c:	ldrb	w3, [x1]
    9580:	cbnz	w3, 9568 <grub_main+0x1a8>
    9584:	adrp	x3, 0 <_start>
    9588:	mov	x1, x0
    958c:	mov	x2, x23
    9590:	ldr	x0, [x3]
    9594:	bl	b138 <grub_xasprintf>
    9598:	mov	x22, x0
    959c:	ldr	x0, [sp, #64]
    95a0:	bl	5828 <grub_free>
    95a4:	mov	x0, x23
    95a8:	bl	5828 <grub_free>
    95ac:	ldr	x0, [sp, #72]
    95b0:	cmp	x19, #0x0
    95b4:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    95b8:	b.ne	9850 <grub_main+0x490>  // b.any
    95bc:	bl	5828 <grub_free>
    95c0:	adrp	x24, 0 <_start>
    95c4:	cbz	x22, 9610 <grub_main+0x250>
    95c8:	adrp	x0, 0 <_start>
    95cc:	adrp	x2, 0 <_start>
    95d0:	cmp	x19, #0x0
    95d4:	mov	x1, x22
    95d8:	ldr	x0, [x0]
    95dc:	ldr	x2, [x2]
    95e0:	csel	x2, x19, x2, ne  // ne = any
    95e4:	bl	b138 <grub_xasprintf>
    95e8:	mov	x23, x0
    95ec:	cbz	x0, 9604 <grub_main+0x244>
    95f0:	ldr	x0, [x24]
    95f4:	mov	x1, x23
    95f8:	bl	81f8 <grub_env_set>
    95fc:	mov	x0, x23
    9600:	bl	5828 <grub_free>
    9604:	mov	x1, x22
    9608:	mov	x0, x21
    960c:	bl	81f8 <grub_env_set>
    9610:	mov	x0, x22
    9614:	bl	5828 <grub_free>
    9618:	mov	x0, x19
    961c:	bl	5828 <grub_free>
    9620:	bl	87b0 <grub_print_error>
    9624:	mov	x0, x21
    9628:	bl	8560 <grub_env_export>
    962c:	ldr	x0, [x24]
    9630:	bl	8560 <grub_env_export>
    9634:	ldr	x0, [x20]
    9638:	cbz	x0, 9640 <grub_main+0x280>
    963c:	str	xzr, [x20]
    9640:	bl	5ed0 <grub_register_core_commands>
    9644:	adrp	x0, 0 <_start>
    9648:	ldr	x0, [x0]
    964c:	ldr	x0, [x0]
    9650:	cbz	x0, 9658 <grub_main+0x298>
    9654:	bl	b710 <grub_parser_execute>
    9658:	adrp	x0, 0 <_start>
    965c:	ldr	x19, [x0]
    9660:	mov	x0, x19
    9664:	bl	7fd8 <grub_dl_load>
    9668:	bl	87b0 <grub_print_error>
    966c:	adrp	x0, 0 <_start>
    9670:	adrp	x2, 0 <_start>
    9674:	mov	x1, x19
    9678:	ldr	x0, [x0]
    967c:	ldr	x2, [x2]
    9680:	ldr	x0, [x0]
    9684:	str	wzr, [x2]
    9688:	bl	9288 <grub_named_list_find>
    968c:	cbz	x0, 96a0 <grub_main+0x2e0>
    9690:	ldr	x3, [x0, #32]
    9694:	mov	x2, #0x0                   	// #0
    9698:	mov	w1, #0x0                   	// #0
    969c:	blr	x3
    96a0:	bl	c070 <grub_rescue_run>
    96a4:	ldrb	w0, [x19]
    96a8:	cbnz	w0, 9530 <grub_main+0x170>
    96ac:	ldr	x0, [sp, #64]
    96b0:	mov	x19, #0x0                   	// #0
    96b4:	mov	x22, x0
    96b8:	cbnz	x0, 95ac <grub_main+0x1ec>
    96bc:	mov	x23, #0x0                   	// #0
    96c0:	mov	x22, x23
    96c4:	bl	5828 <grub_free>
    96c8:	b	95ac <grub_main+0x1ec>
    96cc:	ldrb	w2, [x1, #1]
    96d0:	cmp	w2, #0x2c
    96d4:	b.ne	9578 <grub_main+0x1b8>  // b.any
    96d8:	add	x1, x1, #0x2
    96dc:	b	957c <grub_main+0x1bc>
    96e0:	ldr	x19, [x2, #8]
    96e4:	adds	x19, x2, x19
    96e8:	b.eq	9478 <grub_main+0xb8>  // b.none
    96ec:	ldr	x0, [x2, #16]
    96f0:	adrp	x21, 0 <_start>
    96f4:	add	x0, x0, x2
    96f8:	b	9718 <grub_main+0x358>
    96fc:	ldr	x2, [x20]
    9700:	ldr	w1, [x19, #4]
    9704:	ldr	x0, [x2, #16]
    9708:	add	x0, x0, x2
    970c:	add	x1, x1, #0x7
    9710:	and	x1, x1, #0xfffffffffffffff8
    9714:	add	x19, x19, x1
    9718:	cmp	x19, x0
    971c:	b.cs	9478 <grub_main+0xb8>  // b.hs, b.nlast
    9720:	ldp	w2, w1, [x19]
    9724:	cbnz	w2, 970c <grub_main+0x34c>
    9728:	sub	x1, x1, #0x8
    972c:	add	x0, x19, #0x8
    9730:	bl	7eb8 <grub_dl_load_core>
    9734:	cbz	x0, 98fc <grub_main+0x53c>
    9738:	ldr	x0, [x21]
    973c:	ldr	w0, [x0]
    9740:	cbz	w0, 96fc <grub_main+0x33c>
    9744:	bl	87b0 <grub_print_error>
    9748:	ldr	x2, [x20]
    974c:	ldr	w1, [x19, #4]
    9750:	ldr	x0, [x2, #16]
    9754:	add	x0, x0, x2
    9758:	b	970c <grub_main+0x34c>
    975c:	ldr	x1, [x4, #8]
    9760:	adds	x1, x4, x1
    9764:	b.eq	9498 <grub_main+0xd8>  // b.none
    9768:	ldr	x0, [x4, #16]
    976c:	mov	x19, #0x0                   	// #0
    9770:	add	x4, x4, x0
    9774:	b	9798 <grub_main+0x3d8>
    9778:	mov	x2, x1
    977c:	ldr	w0, [x1, #4]
    9780:	add	x0, x0, #0x7
    9784:	ldr	w3, [x2], #8
    9788:	and	x0, x0, #0xfffffffffffffff8
    978c:	add	x1, x1, x0
    9790:	cmp	w3, #0x3
    9794:	csel	x19, x2, x19, eq  // eq = none
    9798:	cmp	x1, x4
    979c:	b.cc	9778 <grub_main+0x3b8>  // b.lo, b.ul, b.last
    97a0:	b	949c <grub_main+0xdc>
    97a4:	ldr	x19, [x0, #8]
    97a8:	adds	x19, x0, x19
    97ac:	b.eq	9458 <grub_main+0x98>  // b.none
    97b0:	ldr	x1, [x0, #16]
    97b4:	add	x1, x0, x1
    97b8:	b	97c8 <grub_main+0x408>
    97bc:	add	x0, x0, #0x7
    97c0:	and	x0, x0, #0xfffffffffffffff8
    97c4:	add	x19, x19, x0
    97c8:	cmp	x19, x1
    97cc:	b.cs	9458 <grub_main+0x98>  // b.hs, b.nlast
    97d0:	ldp	w2, w0, [x19]
    97d4:	cmp	w2, #0x2
    97d8:	b.ne	97bc <grub_main+0x3fc>  // b.any
    97dc:	sub	x0, x0, #0x7
    97e0:	bl	57d8 <grub_malloc>
    97e4:	adrp	x2, 0 <_start>
    97e8:	ldr	x21, [x2]
    97ec:	str	x0, [x21]
    97f0:	cbz	x0, 9848 <grub_main+0x488>
    97f4:	ldr	w2, [x19, #4]
    97f8:	add	x1, x19, #0x8
    97fc:	sub	x2, x2, #0x8
    9800:	bl	9a40 <grub_memmove>
    9804:	ldr	x0, [x21]
    9808:	ldr	w1, [x19, #4]
    980c:	add	x0, x0, x1
    9810:	sturb	wzr, [x0, #-8]
    9814:	b	9458 <grub_main+0x98>
    9818:	sub	x1, x1, x0
    981c:	bl	a600 <grub_strndup>
    9820:	adrp	x3, 0 <_start>
    9824:	mov	x24, x0
    9828:	mov	x1, x0
    982c:	mov	x2, x23
    9830:	ldr	x0, [x3]
    9834:	bl	b138 <grub_xasprintf>
    9838:	mov	x22, x0
    983c:	mov	x0, x24
    9840:	bl	5828 <grub_free>
    9844:	b	959c <grub_main+0x1dc>
    9848:	bl	87b0 <grub_print_error>
    984c:	b	9458 <grub_main+0x98>
    9850:	bl	af48 <grub_strlen>
    9854:	mov	x1, x0
    9858:	cmp	x0, #0x1
    985c:	b.hi	9870 <grub_main+0x4b0>  // b.pmore
    9860:	b	98b4 <grub_main+0x4f4>
    9864:	strb	wzr, [x19, x1]
    9868:	cmp	x1, #0x1
    986c:	b.eq	98b4 <grub_main+0x4f4>  // b.none
    9870:	ldr	x19, [sp, #72]
    9874:	mov	x2, x1
    9878:	sub	x1, x1, #0x1
    987c:	ldrb	w0, [x19, x1]
    9880:	cmp	w0, #0x2f
    9884:	b.eq	9864 <grub_main+0x4a4>  // b.none
    9888:	cmp	x2, #0x8
    988c:	b.ls	95c0 <grub_main+0x200>  // b.plast
    9890:	adrp	x1, 0 <_start>
    9894:	sub	x23, x2, #0x9
    9898:	add	x0, x19, x23
    989c:	mov	x2, #0x9                   	// #9
    98a0:	ldr	x1, [x1]
    98a4:	bl	9b28 <grub_memcmp>
    98a8:	cbnz	w0, 98b4 <grub_main+0x4f4>
    98ac:	ldr	x0, [sp, #72]
    98b0:	strb	wzr, [x0, x23]
    98b4:	ldr	x19, [sp, #72]
    98b8:	b	95c0 <grub_main+0x200>
    98bc:	mov	x0, x19
    98c0:	mov	w1, #0x29                  	// #41
    98c4:	bl	9c20 <grub_strrchr>
    98c8:	mov	x22, x0
    98cc:	cbz	x0, 96a4 <grub_main+0x2e4>
    98d0:	sub	x1, x0, x19
    98d4:	add	x0, x19, #0x1
    98d8:	sub	x1, x1, #0x1
    98dc:	bl	a600 <grub_strndup>
    98e0:	ldrb	w1, [x22, #1]
    98e4:	mov	x23, x0
    98e8:	mov	x19, #0x0                   	// #0
    98ec:	cbz	w1, 9540 <grub_main+0x180>
    98f0:	add	x19, x22, #0x1
    98f4:	mov	x22, x0
    98f8:	b	9530 <grub_main+0x170>
    98fc:	adrp	x1, 0 <_start>
    9900:	adrp	x0, 0 <_start>
    9904:	ldr	x1, [x1]
    9908:	ldr	x0, [x0]
    990c:	bl	b188 <grub_fatal>
	...
    9998:	ret
    999c:	nop
    99a0:	mov	w1, w0
    99a4:	mov	w0, #0x1                   	// #1
    99a8:	cmp	w1, #0xd
    99ac:	b.eq	99c4 <grub_main+0x604>  // b.none
    99b0:	sub	w0, w1, #0x9
    99b4:	cmp	w1, #0x20
    99b8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    99bc:	mov	w0, #0x1                   	// #1
    99c0:	b.hi	99c8 <grub_main+0x608>  // b.pmore
    99c4:	ret
    99c8:	cmp	w1, #0x2c
    99cc:	mov	w2, #0x3b                  	// #59
    99d0:	ccmp	w1, w2, #0x4, ne  // ne = any
    99d4:	b.eq	99c4 <grub_main+0x604>  // b.none
    99d8:	cmp	w1, #0x7c
    99dc:	mov	w0, #0x26                  	// #38
    99e0:	ccmp	w1, w0, #0x4, ne  // ne = any
    99e4:	cset	w0, eq  // eq = none
    99e8:	ret
    99ec:	nop
    99f0:	mov	x4, x0
    99f4:	mov	w5, #0x40                  	// #64
    99f8:	mov	x0, #0x0                   	// #0
    99fc:	mov	x3, #0x0                   	// #0
    9a00:	lsl	x3, x3, #1
    9a04:	cmp	x4, #0x0
    9a08:	orr	x6, x3, #0x1
    9a0c:	lsl	x0, x0, #1
    9a10:	csel	x3, x6, x3, lt  // lt = tstop
    9a14:	lsl	x4, x4, #1
    9a18:	cmp	x3, x1
    9a1c:	b.cc	9a28 <grub_main+0x668>  // b.lo, b.ul, b.last
    9a20:	orr	x0, x0, #0x1
    9a24:	sub	x3, x3, x1
    9a28:	subs	w5, w5, #0x1
    9a2c:	b.ne	9a00 <grub_main+0x640>  // b.any
    9a30:	cbz	x2, 9a38 <grub_main+0x678>
    9a34:	str	x3, [x2]
    9a38:	ret
    9a3c:	nop

0000000000009a40 <grub_memmove>:
    9a40:	cmp	x0, x1
    9a44:	sub	x3, x2, #0x1
    9a48:	b.cs	9a70 <grub_memmove+0x30>  // b.hs, b.nlast
    9a4c:	mov	x3, #0x0                   	// #0
    9a50:	cbz	x2, 9a6c <grub_memmove+0x2c>
    9a54:	nop
    9a58:	ldrb	w4, [x1, x3]
    9a5c:	strb	w4, [x0, x3]
    9a60:	add	x3, x3, #0x1
    9a64:	cmp	x2, x3
    9a68:	b.ne	9a58 <grub_memmove+0x18>  // b.any
    9a6c:	ret
    9a70:	cbz	x2, 9a6c <grub_memmove+0x2c>
    9a74:	nop
    9a78:	ldrb	w2, [x1, x3]
    9a7c:	strb	w2, [x0, x3]
    9a80:	sub	x3, x3, #0x1
    9a84:	cmn	x3, #0x1
    9a88:	b.eq	9a6c <grub_memmove+0x2c>  // b.none
    9a8c:	ldrb	w2, [x1, x3]
    9a90:	strb	w2, [x0, x3]
    9a94:	sub	x3, x3, #0x1
    9a98:	cmn	x3, #0x1
    9a9c:	b.ne	9a78 <grub_memmove+0x38>  // b.any
    9aa0:	b	9a6c <grub_memmove+0x2c>
    9aa4:	nop

0000000000009aa8 <grub_strcpy>:
    9aa8:	mov	x2, #0x0                   	// #0
    9aac:	nop
    9ab0:	ldrb	w3, [x1, x2]
    9ab4:	strb	w3, [x0, x2]
    9ab8:	add	x2, x2, #0x1
    9abc:	cbnz	w3, 9ab0 <grub_strcpy+0x8>
    9ac0:	ret
    9ac4:	nop

0000000000009ac8 <grub_puts_>:
    9ac8:	stp	x29, x30, [sp, #-48]!
    9acc:	adrp	x1, 0 <_start>
    9ad0:	mov	x29, sp
    9ad4:	ldr	x1, [x1]
    9ad8:	ldr	x1, [x1]
    9adc:	str	x19, [sp, #16]
    9ae0:	blr	x1
    9ae4:	adrp	x1, 0 <_start>
    9ae8:	mov	w2, #0xa                   	// #10
    9aec:	strh	w2, [sp, #40]
    9af0:	ldr	x19, [x1]
    9af4:	ldr	x1, [x19]
    9af8:	blr	x1
    9afc:	ldr	x1, [x19]
    9b00:	add	x0, sp, #0x28
    9b04:	blr	x1
    9b08:	mov	w0, #0x1                   	// #1
    9b0c:	ldr	x19, [sp, #16]
    9b10:	ldp	x29, x30, [sp], #48
    9b14:	ret
	...

0000000000009b28 <grub_memcmp>:
    9b28:	cbz	x2, 9b58 <grub_memcmp+0x30>
    9b2c:	mov	x3, #0x0                   	// #0
    9b30:	b	9b3c <grub_memcmp+0x14>
    9b34:	cmp	x3, x2
    9b38:	b.eq	9b58 <grub_memcmp+0x30>  // b.none
    9b3c:	ldrb	w4, [x0, x3]
    9b40:	ldrb	w5, [x1, x3]
    9b44:	add	x3, x3, #0x1
    9b48:	cmp	w4, w5
    9b4c:	b.eq	9b34 <grub_memcmp+0xc>  // b.none
    9b50:	sub	w0, w4, w5
    9b54:	ret
    9b58:	mov	w0, #0x0                   	// #0
    9b5c:	ret

0000000000009b60 <grub_strcmp>:
    9b60:	ldrb	w3, [x0]
    9b64:	sub	x4, x1, #0x1
    9b68:	mov	x2, #0x1                   	// #1
    9b6c:	ldrb	w1, [x1]
    9b70:	cbnz	w3, 9b88 <grub_strcmp+0x28>
    9b74:	b	9b94 <grub_strcmp+0x34>
    9b78:	ldrb	w3, [x0, x2]
    9b7c:	add	x2, x2, #0x1
    9b80:	ldrb	w1, [x4, x2]
    9b84:	cbz	w3, 9b9c <grub_strcmp+0x3c>
    9b88:	cmp	w1, #0x0
    9b8c:	ccmp	w3, w1, #0x0, ne  // ne = any
    9b90:	b.eq	9b78 <grub_strcmp+0x18>  // b.none
    9b94:	sub	w0, w3, w1
    9b98:	ret
    9b9c:	mov	w3, #0x0                   	// #0
    9ba0:	sub	w0, w3, w1
    9ba4:	ret

0000000000009ba8 <grub_strncmp>:
    9ba8:	cbz	x2, 9bec <grub_strncmp+0x44>
    9bac:	ldrb	w3, [x0]
    9bb0:	sub	x5, x1, #0x1
    9bb4:	ldrb	w4, [x1]
    9bb8:	mov	x1, #0x1                   	// #1
    9bbc:	cbnz	w3, 9bd4 <grub_strncmp+0x2c>
    9bc0:	b	9be4 <grub_strncmp+0x3c>
    9bc4:	ldrb	w3, [x0, x1]
    9bc8:	add	x1, x1, #0x1
    9bcc:	ldrb	w4, [x5, x1]
    9bd0:	cbz	w3, 9bf4 <grub_strncmp+0x4c>
    9bd4:	cmp	w3, w4
    9bd8:	cbz	w4, 9be4 <grub_strncmp+0x3c>
    9bdc:	ccmp	x2, x1, #0x4, eq  // eq = none
    9be0:	b.ne	9bc4 <grub_strncmp+0x1c>  // b.any
    9be4:	sub	w0, w3, w4
    9be8:	ret
    9bec:	mov	w0, #0x0                   	// #0
    9bf0:	ret
    9bf4:	mov	w3, #0x0                   	// #0
    9bf8:	sub	w0, w3, w4
    9bfc:	b	9be8 <grub_strncmp+0x40>

0000000000009c00 <grub_strchr>:
    9c00:	ldrb	w2, [x0]
    9c04:	cmp	w2, w1
    9c08:	b.eq	9c18 <grub_strchr+0x18>  // b.none
    9c0c:	add	x0, x0, #0x1
    9c10:	cbnz	w2, 9c00 <grub_strchr>
    9c14:	mov	x0, #0x0                   	// #0
    9c18:	ret
    9c1c:	nop

0000000000009c20 <grub_strrchr>:
    9c20:	mov	x2, x0
    9c24:	mov	x0, #0x0                   	// #0
    9c28:	ldrb	w3, [x2]
    9c2c:	cmp	w3, w1
    9c30:	csel	x0, x0, x2, ne  // ne = any
    9c34:	add	x2, x2, #0x1
    9c38:	cbnz	w3, 9c28 <grub_strrchr+0x8>
    9c3c:	ret

0000000000009c40 <grub_strword>:
    9c40:	stp	x29, x30, [sp, #-16]!
    9c44:	mov	x4, x0
    9c48:	mov	x7, x1
    9c4c:	mov	x29, sp
    9c50:	b	9c58 <grub_strword+0x18>
    9c54:	add	x4, x4, #0x1
    9c58:	ldrb	w3, [x4]
    9c5c:	mov	w0, w3
    9c60:	bl	99a0 <grub_main+0x5e0>
    9c64:	cbnz	w0, 9c54 <grub_strword+0x14>
    9c68:	cbz	w3, 9cf4 <grub_strword+0xb4>
    9c6c:	ldrb	w8, [x7]
    9c70:	mov	w5, w8
    9c74:	mov	x6, x7
    9c78:	b	9c90 <grub_strword+0x50>
    9c7c:	cmp	w3, w5
    9c80:	b.ne	9cac <grub_strword+0x6c>  // b.any
    9c84:	ldrb	w3, [x4, #1]!
    9c88:	ldrb	w5, [x6, #1]!
    9c8c:	cbz	w3, 9c9c <grub_strword+0x5c>
    9c90:	mov	w0, w3
    9c94:	bl	99a0 <grub_main+0x5e0>
    9c98:	cbz	w0, 9c7c <grub_strword+0x3c>
    9c9c:	cbz	w5, 9cfc <grub_strword+0xbc>
    9ca0:	mov	w0, w5
    9ca4:	bl	99a0 <grub_main+0x5e0>
    9ca8:	cbnz	w0, 9cfc <grub_strword+0xbc>
    9cac:	ldrb	w3, [x4]
    9cb0:	cbnz	w3, 9cc0 <grub_strword+0x80>
    9cb4:	b	9ce4 <grub_strword+0xa4>
    9cb8:	ldrb	w3, [x4, #1]!
    9cbc:	cbz	w3, 9ce4 <grub_strword+0xa4>
    9cc0:	mov	w0, w3
    9cc4:	bl	99a0 <grub_main+0x5e0>
    9cc8:	cbz	w0, 9cb8 <grub_strword+0x78>
    9ccc:	ldrb	w3, [x4]
    9cd0:	mov	w0, w3
    9cd4:	bl	99a0 <grub_main+0x5e0>
    9cd8:	cbz	w0, 9cf0 <grub_strword+0xb0>
    9cdc:	nop
    9ce0:	ldrb	w3, [x4, #1]!
    9ce4:	mov	w0, w3
    9ce8:	bl	99a0 <grub_main+0x5e0>
    9cec:	cbnz	w0, 9ce0 <grub_strword+0xa0>
    9cf0:	cbnz	w3, 9c70 <grub_strword+0x30>
    9cf4:	ldp	x29, x30, [sp], #16
    9cf8:	ret
    9cfc:	mov	w0, #0x1                   	// #1
    9d00:	ldp	x29, x30, [sp], #16
    9d04:	ret

0000000000009d08 <grub_isspace>:
    9d08:	cmp	w0, #0xd
    9d0c:	b.eq	9d24 <grub_isspace+0x1c>  // b.none
    9d10:	cmp	w0, #0x20
    9d14:	sub	w0, w0, #0x9
    9d18:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    9d1c:	cset	w0, ls  // ls = plast
    9d20:	ret
    9d24:	mov	w0, #0x1                   	// #1
    9d28:	ret
    9d2c:	nop

0000000000009d30 <grub_strtoull>:
    9d30:	stp	x29, x30, [sp, #-32]!
    9d34:	mov	x7, x0
    9d38:	mov	x10, x1
    9d3c:	mov	x29, sp
    9d40:	str	x19, [sp, #16]
    9d44:	nop
    9d48:	ldrb	w3, [x7]
    9d4c:	sub	w0, w3, #0x9
    9d50:	cmp	w3, #0xd
    9d54:	and	w0, w0, #0xff
    9d58:	b.eq	9e38 <grub_strtoull+0x108>  // b.none
    9d5c:	cmp	w3, #0x20
    9d60:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    9d64:	b.ls	9e38 <grub_strtoull+0x108>  // b.plast
    9d68:	cmp	w3, #0x30
    9d6c:	b.eq	9e5c <grub_strtoull+0x12c>  // b.none
    9d70:	cmp	w2, #0x0
    9d74:	mov	w0, #0xa                   	// #10
    9d78:	csel	w2, w2, w0, ne  // ne = any
    9d7c:	cbz	w3, 9e88 <grub_strtoull+0x158>
    9d80:	sxtw	x1, w2
    9d84:	mov	x19, #0x0                   	// #0
    9d88:	mov	w2, #0x0                   	// #0
    9d8c:	mov	x9, #0xfffffffe            	// #4294967294
    9d90:	b	9dd8 <grub_strtoull+0xa8>
    9d94:	sub	w3, w3, #0x30
    9d98:	sxtw	x8, w3
    9d9c:	cmp	x8, #0x30
    9da0:	b.hi	9dec <grub_strtoull+0xbc>  // b.pmore
    9da4:	cmp	x8, #0x9
    9da8:	b.hi	9e40 <grub_strtoull+0x110>  // b.pmore
    9dac:	cmp	x8, x1
    9db0:	b.cs	9e40 <grub_strtoull+0x110>  // b.hs, b.nlast
    9db4:	mvn	x0, x8
    9db8:	mov	x2, #0x0                   	// #0
    9dbc:	bl	99f0 <grub_main+0x630>
    9dc0:	cmp	x0, x19
    9dc4:	b.cc	9e14 <grub_strtoull+0xe4>  // b.lo, b.ul, b.last
    9dc8:	ldrb	w3, [x7, #1]!
    9dcc:	madd	x19, x19, x1, x8
    9dd0:	mov	w2, #0x1                   	// #1
    9dd4:	cbz	w3, 9e44 <grub_strtoull+0x114>
    9dd8:	sub	w0, w3, #0x41
    9ddc:	cmp	w0, #0x19
    9de0:	b.hi	9d94 <grub_strtoull+0x64>  // b.pmore
    9de4:	sub	w3, w3, #0x10
    9de8:	sxtw	x8, w3
    9dec:	sub	x8, x8, #0x27
    9df0:	cmp	x1, x8
    9df4:	b.ls	9e40 <grub_strtoull+0x110>  // b.plast
    9df8:	mvn	x0, x8
    9dfc:	cmp	x0, x9
    9e00:	ccmp	x1, x9, #0x2, ls  // ls = plast
    9e04:	b.hi	9db8 <grub_strtoull+0x88>  // b.pmore
    9e08:	udiv	w0, w0, w1
    9e0c:	cmp	x0, x19
    9e10:	b.cs	9dc8 <grub_strtoull+0x98>  // b.hs, b.nlast
    9e14:	adrp	x1, 0 <_start>
    9e18:	mov	w0, #0xb                   	// #11
    9e1c:	mov	x19, #0xffffffffffffffff    	// #-1
    9e20:	ldr	x1, [x1]
    9e24:	bl	85c0 <grub_error>
    9e28:	mov	x0, x19
    9e2c:	ldr	x19, [sp, #16]
    9e30:	ldp	x29, x30, [sp], #32
    9e34:	ret
    9e38:	add	x7, x7, #0x1
    9e3c:	b	9d48 <grub_strtoull+0x18>
    9e40:	cbz	w2, 9e88 <grub_strtoull+0x158>
    9e44:	cbz	x10, 9e28 <grub_strtoull+0xf8>
    9e48:	str	x7, [x10]
    9e4c:	mov	x0, x19
    9e50:	ldr	x19, [sp, #16]
    9e54:	ldp	x29, x30, [sp], #32
    9e58:	ret
    9e5c:	ldrb	w0, [x7, #1]
    9e60:	cmp	w0, #0x78
    9e64:	b.eq	9eac <grub_strtoull+0x17c>  // b.none
    9e68:	cbnz	w2, 9d80 <grub_strtoull+0x50>
    9e6c:	sub	w0, w0, #0x30
    9e70:	mov	w2, #0x8                   	// #8
    9e74:	and	w0, w0, #0xff
    9e78:	mov	w1, #0xa                   	// #10
    9e7c:	cmp	w0, w2
    9e80:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    9e84:	b	9d80 <grub_strtoull+0x50>
    9e88:	adrp	x1, 0 <_start>
    9e8c:	mov	x19, #0x0                   	// #0
    9e90:	mov	w0, #0xa                   	// #10
    9e94:	ldr	x1, [x1]
    9e98:	bl	85c0 <grub_error>
    9e9c:	mov	x0, x19
    9ea0:	ldr	x19, [sp, #16]
    9ea4:	ldp	x29, x30, [sp], #32
    9ea8:	ret
    9eac:	tst	w2, #0xffffffef
    9eb0:	b.ne	9d80 <grub_strtoull+0x50>  // b.any
    9eb4:	ldrb	w3, [x7, #2]
    9eb8:	mov	w2, #0x10                  	// #16
    9ebc:	add	x7, x7, #0x2
    9ec0:	b	9d7c <grub_strtoull+0x4c>
    9ec4:	nop
	...

0000000000009ed8 <grub_strtoul>:
    9ed8:	b	9d30 <grub_strtoull>
    9edc:	nop
    9ee0:	stp	x29, x30, [sp, #-160]!
    9ee4:	mov	x29, sp
    9ee8:	stp	x21, x22, [sp, #32]
    9eec:	mov	x22, x1
    9ef0:	stp	x23, x24, [sp, #48]
    9ef4:	mov	x24, x0
    9ef8:	add	x0, x2, #0x1
    9efc:	stp	x27, x28, [sp, #80]
    9f00:	ldrb	w2, [x2]
    9f04:	stp	x3, x0, [sp, #104]
    9f08:	cbz	w2, a488 <grub_strtoul+0x5b0>
    9f0c:	mov	x28, #0x0                   	// #0
    9f10:	stp	x19, x20, [sp, #16]
    9f14:	stp	x25, x26, [sp, #64]
    9f18:	mov	x26, x4
    9f1c:	mov	x25, #0x0                   	// #0
    9f20:	b	9f48 <grub_strtoul+0x70>
    9f24:	cmp	x22, x28
    9f28:	b.ls	9f30 <grub_strtoul+0x58>  // b.plast
    9f2c:	strb	w2, [x24, x28]
    9f30:	add	x28, x28, #0x1
    9f34:	mov	x1, x0
    9f38:	add	x0, x1, #0x1
    9f3c:	str	x0, [sp, #112]
    9f40:	ldrb	w2, [x1]
    9f44:	cbz	w2, a0e8 <grub_strtoul+0x210>
    9f48:	cmp	w2, #0x25
    9f4c:	b.ne	9f24 <grub_strtoul+0x4c>  // b.any
    9f50:	add	x1, x25, #0x1
    9f54:	mov	x21, x25
    9f58:	mov	w23, #0x20                  	// #32
    9f5c:	str	x1, [sp, #96]
    9f60:	b	9fd0 <grub_strtoul+0xf8>
    9f64:	cmp	w1, #0x30
    9f68:	mov	w2, #0xa                   	// #10
    9f6c:	add	x1, sp, #0x70
    9f70:	mov	w19, #0x30                  	// #48
    9f74:	csel	w19, w19, w23, eq  // eq = none
    9f78:	bl	9d30 <grub_strtoull>
    9f7c:	mov	w27, w0
    9f80:	ldr	x2, [sp, #112]
    9f84:	ldrb	w1, [x2]
    9f88:	cmp	w1, #0x2e
    9f8c:	b.eq	a018 <grub_strtoul+0x140>  // b.none
    9f90:	sub	w5, w1, #0x30
    9f94:	mov	w6, #0xffffffff            	// #-1
    9f98:	cmp	w5, #0x9
    9f9c:	b.hi	9fbc <grub_strtoul+0xe4>  // b.pmore
    9fa0:	mov	x0, x2
    9fa4:	add	x1, sp, #0x70
    9fa8:	mov	w2, #0xa                   	// #10
    9fac:	bl	9d30 <grub_strtoull>
    9fb0:	ldr	x2, [sp, #112]
    9fb4:	mov	w6, w0
    9fb8:	ldrb	w1, [x2]
    9fbc:	cmp	w1, #0x24
    9fc0:	add	x0, x2, #0x1
    9fc4:	b.ne	a02c <grub_strtoul+0x154>  // b.any
    9fc8:	sub	w21, w27, #0x1
    9fcc:	str	x0, [sp, #112]
    9fd0:	ldrb	w1, [x0]
    9fd4:	mov	w20, #0x0                   	// #0
    9fd8:	cmp	w1, #0x2d
    9fdc:	b.ne	9ff4 <grub_strtoul+0x11c>  // b.any
    9fe0:	add	x2, x0, #0x1
    9fe4:	str	x2, [sp, #112]
    9fe8:	mov	w20, #0x1                   	// #1
    9fec:	ldrb	w1, [x0, #1]
    9ff0:	mov	x0, x2
    9ff4:	sub	w2, w1, #0x30
    9ff8:	cmp	w2, #0x9
    9ffc:	b.ls	9f64 <grub_strtoul+0x8c>  // b.plast
    a000:	mov	x2, x0
    a004:	cmp	w1, #0x2e
    a008:	mov	w19, #0x20                  	// #32
    a00c:	mov	w27, #0x0                   	// #0
    a010:	mov	w6, #0xffffffff            	// #-1
    a014:	b.ne	9fbc <grub_strtoul+0xe4>  // b.any
    a018:	add	x0, x2, #0x1
    a01c:	str	x0, [sp, #112]
    a020:	ldrb	w1, [x2, #1]
    a024:	mov	x2, x0
    a028:	b	9f90 <grub_strtoul+0xb8>
    a02c:	str	x0, [sp, #112]
    a030:	ldrb	w1, [x2]
    a034:	cmp	w1, #0x6c
    a038:	b.eq	a21c <grub_strtoul+0x344>  // b.none
    a03c:	cmp	w1, #0x25
    a040:	b.eq	a244 <grub_strtoul+0x36c>  // b.none
    a044:	ldr	x0, [x26]
    a048:	cmp	x0, x21
    a04c:	b.ls	a210 <grub_strtoul+0x338>  // b.plast
    a050:	ldr	x0, [sp, #104]
    a054:	cmp	w1, #0x70
    a058:	ldr	x0, [x0]
    a05c:	ldr	x0, [x0, x21, lsl #3]
    a060:	b.eq	a290 <grub_strtoul+0x3b8>  // b.none
    a064:	b.hi	a0b0 <grub_strtoul+0x1d8>  // b.pmore
    a068:	cmp	w1, #0x63
    a06c:	b.eq	a274 <grub_strtoul+0x39c>  // b.none
    a070:	cmp	w1, #0x64
    a074:	b.eq	a388 <grub_strtoul+0x4b0>  // b.none
    a078:	cmp	w1, #0x43
    a07c:	b.ne	a0c0 <grub_strtoul+0x1e8>  // b.any
    a080:	cmp	w0, #0x7f
    a084:	mov	w3, w0
    a088:	b.hi	a430 <grub_strtoul+0x558>  // b.pmore
    a08c:	and	w0, w0, #0xff
    a090:	cmp	x22, x28
    a094:	add	x2, x28, #0x1
    a098:	ldr	x1, [sp, #112]
    a09c:	b.ls	a540 <grub_strtoul+0x668>  // b.plast
    a0a0:	strb	w0, [x24, x28]
    a0a4:	mov	x28, x2
    a0a8:	ldr	x25, [sp, #96]
    a0ac:	b	9f38 <grub_strtoul+0x60>
    a0b0:	cmp	w1, #0x73
    a0b4:	b.eq	a2bc <grub_strtoul+0x3e4>  // b.none
    a0b8:	cmp	w1, #0x72
    a0bc:	b.hi	a114 <grub_strtoul+0x23c>  // b.pmore
    a0c0:	cmp	x22, x28
    a0c4:	b.ls	a0cc <grub_strtoul+0x1f4>  // b.plast
    a0c8:	strb	w1, [x24, x28]
    a0cc:	ldr	x25, [sp, #96]
    a0d0:	add	x28, x28, #0x1
    a0d4:	ldr	x1, [sp, #112]
    a0d8:	add	x0, x1, #0x1
    a0dc:	str	x0, [sp, #112]
    a0e0:	ldrb	w2, [x1]
    a0e4:	cbnz	w2, 9f48 <grub_strtoul+0x70>
    a0e8:	ldp	x19, x20, [sp, #16]
    a0ec:	mov	w0, w28
    a0f0:	ldp	x25, x26, [sp, #64]
    a0f4:	cmp	x22, x28
    a0f8:	b.ls	a25c <grub_strtoul+0x384>  // b.plast
    a0fc:	strb	wzr, [x24, x28]
    a100:	ldp	x21, x22, [sp, #32]
    a104:	ldp	x23, x24, [sp, #48]
    a108:	ldp	x27, x28, [sp, #80]
    a10c:	ldp	x29, x30, [sp], #160
    a110:	ret
    a114:	cmp	w1, #0x75
    a118:	b.eq	a4a8 <grub_strtoul+0x5d0>  // b.none
    a11c:	cmp	w1, #0x78
    a120:	b.ne	a0c0 <grub_strtoul+0x1e8>  // b.any
    a124:	add	x8, sp, #0x80
    a128:	mov	x9, x8
    a12c:	nop
    a130:	and	w2, w0, #0xf
    a134:	lsr	x0, x0, #4
    a138:	mov	w1, w2
    a13c:	cmp	w2, #0xa
    a140:	add	w1, w1, #0x30
    a144:	add	w2, w2, #0x57
    a148:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    a14c:	strb	w1, [x9], #1
    a150:	cbnz	x0, a130 <grub_strtoul+0x258>
    a154:	strb	wzr, [x9]
    a158:	mov	x7, x8
    a15c:	ldrb	w0, [sp, #128]
    a160:	cbz	w0, a40c <grub_strtoul+0x534>
    a164:	mov	x0, x7
    a168:	ldrb	w1, [x0, #1]!
    a16c:	cbnz	w1, a168 <grub_strtoul+0x290>
    a170:	sub	x0, x0, x7
    a174:	sub	x0, x0, #0x1
    a178:	add	x0, x7, x0
    a17c:	cmp	x0, x7
    a180:	b.ls	a1a0 <grub_strtoul+0x2c8>  // b.plast
    a184:	nop
    a188:	ldrb	w2, [x0]
    a18c:	ldrb	w1, [x7]
    a190:	strb	w2, [x7], #1
    a194:	strb	w1, [x0], #-1
    a198:	cmp	x7, x0
    a19c:	b.cc	a188 <grub_strtoul+0x2b0>  // b.lo, b.ul, b.last
    a1a0:	sub	x9, x9, x8
    a1a4:	ldrb	w0, [sp, #128]
    a1a8:	mov	w1, w27
    a1ac:	cmp	x9, w27, uxtw
    a1b0:	b.cc	a41c <grub_strtoul+0x544>  // b.lo, b.ul, b.last
    a1b4:	cbz	w20, a4ec <grub_strtoul+0x614>
    a1b8:	mov	x1, x28
    a1bc:	mov	x9, #0x0                   	// #0
    a1c0:	cbz	w0, a210 <grub_strtoul+0x338>
    a1c4:	mov	x28, x1
    a1c8:	sub	x8, x8, x1
    a1cc:	nop
    a1d0:	cmp	x22, x28
    a1d4:	b.ls	a1dc <grub_strtoul+0x304>  // b.plast
    a1d8:	strb	w0, [x24, x28]
    a1dc:	add	x28, x28, #0x1
    a1e0:	ldrb	w0, [x8, x28]
    a1e4:	cbnz	w0, a1d0 <grub_strtoul+0x2f8>
    a1e8:	cbz	w20, a210 <grub_strtoul+0x338>
    a1ec:	mov	x0, x28
    a1f0:	cbz	x9, a210 <grub_strtoul+0x338>
    a1f4:	add	x28, x9, x28
    a1f8:	cmp	x22, x0
    a1fc:	b.ls	a204 <grub_strtoul+0x32c>  // b.plast
    a200:	strb	w19, [x24, x0]
    a204:	add	x0, x0, #0x1
    a208:	cmp	x0, x28
    a20c:	b.ne	a1f8 <grub_strtoul+0x320>  // b.any
    a210:	ldr	x25, [sp, #96]
    a214:	ldr	x1, [sp, #112]
    a218:	b	9f38 <grub_strtoul+0x60>
    a21c:	add	x0, x2, #0x2
    a220:	str	x0, [sp, #112]
    a224:	ldrb	w1, [x2, #1]
    a228:	cmp	w1, #0x6c
    a22c:	b.ne	a03c <grub_strtoul+0x164>  // b.any
    a230:	add	x0, x2, #0x3
    a234:	str	x0, [sp, #112]
    a238:	ldrb	w1, [x2, #2]
    a23c:	cmp	w1, #0x25
    a240:	b.ne	a044 <grub_strtoul+0x16c>  // b.any
    a244:	cmp	x22, x28
    a248:	b.ls	a250 <grub_strtoul+0x378>  // b.plast
    a24c:	strb	w1, [x24, x28]
    a250:	add	x28, x28, #0x1
    a254:	ldr	x1, [sp, #112]
    a258:	b	9f38 <grub_strtoul+0x60>
    a25c:	strb	wzr, [x24, x22]
    a260:	ldp	x21, x22, [sp, #32]
    a264:	ldp	x23, x24, [sp, #48]
    a268:	ldp	x27, x28, [sp, #80]
    a26c:	ldp	x29, x30, [sp], #160
    a270:	ret
    a274:	cmp	x22, x28
    a278:	b.ls	a0cc <grub_strtoul+0x1f4>  // b.plast
    a27c:	strb	w0, [x24, x28]
    a280:	add	x28, x28, #0x1
    a284:	ldr	x25, [sp, #96]
    a288:	ldr	x1, [sp, #112]
    a28c:	b	a0d8 <grub_strtoul+0x200>
    a290:	cmp	x22, x28
    a294:	b.ls	a2a0 <grub_strtoul+0x3c8>  // b.plast
    a298:	mov	w1, #0x30                  	// #48
    a29c:	strb	w1, [x24, x28]
    a2a0:	add	x1, x28, #0x1
    a2a4:	cmp	x22, x1
    a2a8:	b.ls	a2b4 <grub_strtoul+0x3dc>  // b.plast
    a2ac:	mov	w2, #0x78                  	// #120
    a2b0:	strb	w2, [x24, x1]
    a2b4:	add	x28, x28, #0x2
    a2b8:	b	a124 <grub_strtoul+0x24c>
    a2bc:	adrp	x1, 0 <_start>
    a2c0:	cmp	x0, #0x0
    a2c4:	mov	w5, w6
    a2c8:	mov	x2, #0x0                   	// #0
    a2cc:	ldr	x1, [x1]
    a2d0:	csel	x0, x0, x1, ne  // ne = any
    a2d4:	cbnz	w6, a2fc <grub_strtoul+0x424>
    a2d8:	mov	w6, w27
    a2dc:	cbnz	w27, a57c <grub_strtoul+0x6a4>
    a2e0:	cbz	w20, a210 <grub_strtoul+0x338>
    a2e4:	ldr	x1, [sp, #112]
    a2e8:	ldr	x25, [sp, #96]
    a2ec:	b	9f38 <grub_strtoul+0x60>
    a2f0:	add	x2, x2, #0x1
    a2f4:	cmp	x2, x5
    a2f8:	b.eq	a304 <grub_strtoul+0x42c>  // b.none
    a2fc:	ldrb	w1, [x0, x2]
    a300:	cbnz	w1, a2f0 <grub_strtoul+0x418>
    a304:	cmp	x2, w27, uxtw
    a308:	mov	w1, w27
    a30c:	b.cc	a494 <grub_strtoul+0x5bc>  // b.lo, b.ul, b.last
    a310:	cbz	w20, a4d8 <grub_strtoul+0x600>
    a314:	mov	x6, #0x0                   	// #0
    a318:	ldr	x1, [sp, #112]
    a31c:	cbz	x2, a2e8 <grub_strtoul+0x410>
    a320:	add	x7, x24, x28
    a324:	mov	x3, #0x0                   	// #0
    a328:	add	x5, x28, x3
    a32c:	cmp	x22, x5
    a330:	b.ls	a33c <grub_strtoul+0x464>  // b.plast
    a334:	ldrb	w5, [x0, x3]
    a338:	strb	w5, [x7, x3]
    a33c:	add	x3, x3, #0x1
    a340:	cmp	x3, x2
    a344:	b.cc	a328 <grub_strtoul+0x450>  // b.lo, b.ul, b.last
    a348:	cmp	x2, #0x0
    a34c:	csinc	x2, x2, xzr, ne  // ne = any
    a350:	add	x28, x28, x2
    a354:	ldr	x25, [sp, #96]
    a358:	cbz	w20, 9f38 <grub_strtoul+0x60>
    a35c:	mov	x0, x28
    a360:	cbz	x6, a2e8 <grub_strtoul+0x410>
    a364:	add	x28, x6, x28
    a368:	cmp	x22, x0
    a36c:	b.ls	a374 <grub_strtoul+0x49c>  // b.plast
    a370:	strb	w19, [x24, x0]
    a374:	add	x0, x0, #0x1
    a378:	cmp	x0, x28
    a37c:	b.ne	a368 <grub_strtoul+0x490>  // b.any
    a380:	ldr	x25, [sp, #96]
    a384:	b	9f38 <grub_strtoul+0x60>
    a388:	tbz	x0, #63, a4a8 <grub_strtoul+0x5d0>
    a38c:	add	x8, sp, #0x80
    a390:	neg	x0, x0
    a394:	add	x7, x8, #0x1
    a398:	mov	w1, #0x2d                  	// #45
    a39c:	strb	w1, [sp, #128]
    a3a0:	mov	x9, x7
    a3a4:	mov	x10, #0xfffffffe            	// #4294967294
    a3a8:	b	a3c0 <grub_strtoul+0x4e8>
    a3ac:	bl	99f0 <grub_main+0x630>
    a3b0:	ldr	x1, [sp, #120]
    a3b4:	add	w1, w1, #0x30
    a3b8:	strb	w1, [x9], #1
    a3bc:	cbz	x0, a3f8 <grub_strtoul+0x520>
    a3c0:	add	x2, sp, #0x78
    a3c4:	cmp	x0, x10
    a3c8:	mov	x1, #0xa                   	// #10
    a3cc:	b.hi	a3ac <grub_strtoul+0x4d4>  // b.pmore
    a3d0:	mov	w1, #0xcccd                	// #52429
    a3d4:	movk	w1, #0xcccc, lsl #16
    a3d8:	umull	x2, w0, w1
    a3dc:	lsr	x2, x2, #35
    a3e0:	add	w1, w2, w2, lsl #2
    a3e4:	sub	w1, w0, w1, lsl #1
    a3e8:	mov	w0, w2
    a3ec:	add	w1, w1, #0x30
    a3f0:	strb	w1, [x9], #1
    a3f4:	cbnz	x0, a3c0 <grub_strtoul+0x4e8>
    a3f8:	strb	wzr, [x9]
    a3fc:	ldrb	w0, [x7]
    a400:	cbnz	w0, a164 <grub_strtoul+0x28c>
    a404:	mov	x0, #0xffffffffffffffff    	// #-1
    a408:	b	a178 <grub_strtoul+0x2a0>
    a40c:	sub	x9, x9, x8
    a410:	mov	w1, w27
    a414:	cmp	x9, w27, uxtw
    a418:	b.cs	a210 <grub_strtoul+0x338>  // b.hs, b.nlast
    a41c:	sub	x9, x1, x9
    a420:	cbz	w20, a458 <grub_strtoul+0x580>
    a424:	mov	x1, x28
    a428:	cbnz	w0, a1c4 <grub_strtoul+0x2ec>
    a42c:	b	a1ec <grub_strtoul+0x314>
    a430:	cmp	w0, #0x7ff
    a434:	b.ls	a4f4 <grub_strtoul+0x61c>  // b.plast
    a438:	mov	w1, #0xffff                	// #65535
    a43c:	cmp	w0, w1
    a440:	b.ls	a55c <grub_strtoul+0x684>  // b.plast
    a444:	mov	w1, #0x10ffff              	// #1114111
    a448:	cmp	w0, w1
    a44c:	b.ls	a56c <grub_strtoul+0x694>  // b.plast
    a450:	mov	w0, #0x3f                  	// #63
    a454:	b	a090 <grub_strtoul+0x1b8>
    a458:	cbz	x9, a4ec <grub_strtoul+0x614>
    a45c:	add	x1, x9, x28
    a460:	cmp	x22, x28
    a464:	b.ls	a46c <grub_strtoul+0x594>  // b.plast
    a468:	strb	w19, [x24, x28]
    a46c:	add	x28, x28, #0x1
    a470:	cmp	x28, x1
    a474:	b.ne	a460 <grub_strtoul+0x588>  // b.any
    a478:	mov	x28, x1
    a47c:	mov	x9, #0xffffffffffffffff    	// #-1
    a480:	cbnz	w0, a1c4 <grub_strtoul+0x2ec>
    a484:	b	a210 <grub_strtoul+0x338>
    a488:	mov	w0, #0x0                   	// #0
    a48c:	mov	x28, #0x0                   	// #0
    a490:	b	a0f4 <grub_strtoul+0x21c>
    a494:	sub	x6, x1, x2
    a498:	cbz	w20, a4b4 <grub_strtoul+0x5dc>
    a49c:	ldr	x1, [sp, #112]
    a4a0:	cbnz	x2, a320 <grub_strtoul+0x448>
    a4a4:	b	a35c <grub_strtoul+0x484>
    a4a8:	add	x8, sp, #0x80
    a4ac:	mov	x7, x8
    a4b0:	b	a3a0 <grub_strtoul+0x4c8>
    a4b4:	cbz	x6, a4d8 <grub_strtoul+0x600>
    a4b8:	add	x1, x28, x6
    a4bc:	nop
    a4c0:	cmp	x22, x28
    a4c4:	b.ls	a4cc <grub_strtoul+0x5f4>  // b.plast
    a4c8:	strb	w19, [x24, x28]
    a4cc:	add	x28, x28, #0x1
    a4d0:	cmp	x28, x1
    a4d4:	b.ne	a4c0 <grub_strtoul+0x5e8>  // b.any
    a4d8:	mov	x6, #0xffffffffffffffff    	// #-1
    a4dc:	ldr	x1, [sp, #112]
    a4e0:	cbnz	x2, a320 <grub_strtoul+0x448>
    a4e4:	ldr	x25, [sp, #96]
    a4e8:	b	9f38 <grub_strtoul+0x60>
    a4ec:	mov	x1, x28
    a4f0:	b	a478 <grub_strtoul+0x5a0>
    a4f4:	mov	w2, #0x0                   	// #0
    a4f8:	mov	w6, #0xc0                  	// #192
    a4fc:	mov	w7, #0x6                   	// #6
    a500:	cmp	x22, x28
    a504:	add	x5, x28, #0x1
    a508:	ldr	x1, [sp, #112]
    a50c:	b.hi	a54c <grub_strtoul+0x674>  // b.pmore
    a510:	mov	x28, x5
    a514:	lsr	w0, w3, w2
    a518:	and	w0, w0, #0x3f
    a51c:	orr	w0, w0, #0xffffff80
    a520:	cmp	x22, x28
    a524:	b.ls	a52c <grub_strtoul+0x654>  // b.plast
    a528:	strb	w0, [x24, x28]
    a52c:	add	x28, x28, #0x1
    a530:	subs	w2, w2, #0x6
    a534:	b.pl	a514 <grub_strtoul+0x63c>  // b.nfrst
    a538:	ldr	x25, [sp, #96]
    a53c:	b	9f38 <grub_strtoul+0x60>
    a540:	mov	x28, x2
    a544:	ldr	x25, [sp, #96]
    a548:	b	9f38 <grub_strtoul+0x60>
    a54c:	lsr	w0, w0, w7
    a550:	orr	w0, w6, w0
    a554:	strb	w0, [x24, x28]
    a558:	b	a510 <grub_strtoul+0x638>
    a55c:	mov	w2, #0x6                   	// #6
    a560:	mov	w6, #0xe0                  	// #224
    a564:	mov	w7, #0xc                   	// #12
    a568:	b	a500 <grub_strtoul+0x628>
    a56c:	mov	w2, #0xc                   	// #12
    a570:	mov	w6, #0xf0                  	// #240
    a574:	mov	w7, #0x12                  	// #18
    a578:	b	a500 <grub_strtoul+0x628>
    a57c:	cbz	w20, a4b8 <grub_strtoul+0x5e0>
    a580:	mov	x0, x28
    a584:	ldr	x1, [sp, #112]
    a588:	b	a364 <grub_strtoul+0x48c>
    a58c:	nop
	...

000000000000a598 <grub_strdup>:
    a598:	stp	x29, x30, [sp, #-32]!
    a59c:	mov	x29, sp
    a5a0:	stp	x19, x20, [sp, #16]
    a5a4:	mov	x20, x0
    a5a8:	ldrb	w0, [x0]
    a5ac:	cbz	w0, a5f4 <grub_strdup+0x5c>
    a5b0:	mov	x2, x20
    a5b4:	nop
    a5b8:	ldrb	w3, [x2, #1]!
    a5bc:	cbnz	w3, a5b8 <grub_strdup+0x20>
    a5c0:	sub	x2, x2, x20
    a5c4:	add	x19, x2, #0x1
    a5c8:	mov	x0, x19
    a5cc:	bl	57d8 <grub_malloc>
    a5d0:	cbz	x0, a5e8 <grub_strdup+0x50>
    a5d4:	mov	x2, x19
    a5d8:	mov	x1, x20
    a5dc:	ldp	x19, x20, [sp, #16]
    a5e0:	ldp	x29, x30, [sp], #32
    a5e4:	b	9a40 <grub_memmove>
    a5e8:	ldp	x19, x20, [sp, #16]
    a5ec:	ldp	x29, x30, [sp], #32
    a5f0:	ret
    a5f4:	mov	x19, #0x1                   	// #1
    a5f8:	b	a5c8 <grub_strdup+0x30>
    a5fc:	nop

000000000000a600 <grub_strndup>:
    a600:	stp	x29, x30, [sp, #-32]!
    a604:	mov	x29, sp
    a608:	stp	x19, x20, [sp, #16]
    a60c:	mov	x20, x0
    a610:	ldrb	w0, [x0]
    a614:	cbz	w0, a664 <grub_strndup+0x64>
    a618:	mov	x2, x20
    a61c:	nop
    a620:	ldrb	w3, [x2, #1]!
    a624:	cbnz	w3, a620 <grub_strndup+0x20>
    a628:	sub	x2, x2, x20
    a62c:	cmp	x2, x1
    a630:	csel	x19, x2, x1, ls  // ls = plast
    a634:	add	x0, x19, #0x1
    a638:	bl	57d8 <grub_malloc>
    a63c:	mov	x5, x0
    a640:	cbz	x0, a654 <grub_strndup+0x54>
    a644:	mov	x1, x20
    a648:	mov	x2, x19
    a64c:	bl	9a40 <grub_memmove>
    a650:	strb	wzr, [x5, x19]
    a654:	mov	x0, x5
    a658:	ldp	x19, x20, [sp, #16]
    a65c:	ldp	x29, x30, [sp], #32
    a660:	ret
    a664:	mov	x19, #0x0                   	// #0
    a668:	mov	x0, #0x1                   	// #1
    a66c:	b	a638 <grub_strndup+0x38>

000000000000a670 <grub_memset>:
    a670:	cmp	x2, #0x17
    a674:	and	w1, w1, #0xff
    a678:	b.ls	a6b8 <grub_memset+0x48>  // b.plast
    a67c:	and	x6, x1, #0xff
    a680:	mov	w3, #0x0                   	// #0
    a684:	mov	x5, #0x0                   	// #0
    a688:	lsl	x4, x6, x3
    a68c:	add	w3, w3, #0x8
    a690:	orr	x5, x5, x4
    a694:	cmp	w3, #0x40
    a698:	b.ne	a688 <grub_memset+0x18>  // b.any
    a69c:	mov	x4, x0
    a6a0:	tst	x4, #0x7
    a6a4:	b.eq	a6d8 <grub_memset+0x68>  // b.none
    a6a8:	strb	w1, [x4], #1
    a6ac:	subs	x2, x2, #0x1
    a6b0:	b.ne	a6a0 <grub_memset+0x30>  // b.any
    a6b4:	ret
    a6b8:	mov	x3, x0
    a6bc:	cbz	x2, a6b4 <grub_memset+0x44>
    a6c0:	add	x2, x3, x2
    a6c4:	nop
    a6c8:	strb	w1, [x3], #1
    a6cc:	cmp	x2, x3
    a6d0:	b.ne	a6c8 <grub_memset+0x58>  // b.any
    a6d4:	ret
    a6d8:	cmp	x2, #0x7
    a6dc:	b.ls	a708 <grub_memset+0x98>  // b.plast
    a6e0:	sub	x3, x2, #0x8
    a6e4:	and	x3, x3, #0xfffffffffffffff8
    a6e8:	add	x3, x3, #0x8
    a6ec:	add	x3, x4, x3
    a6f0:	str	x5, [x4], #8
    a6f4:	cmp	x4, x3
    a6f8:	b.ne	a6f0 <grub_memset+0x80>  // b.any
    a6fc:	and	x2, x2, #0x7
    a700:	cbnz	x2, a6c0 <grub_memset+0x50>
    a704:	b	a6b4 <grub_memset+0x44>
    a708:	mov	x3, x4
    a70c:	b	a6c0 <grub_memset+0x50>
    a710:	stp	x29, x30, [sp, #-96]!
    a714:	mov	x6, #0x1                   	// #1
    a718:	movk	x6, #0x2003, lsl #32
    a71c:	mov	x29, sp
    a720:	stp	x19, x20, [sp, #16]
    a724:	mov	x3, x0
    a728:	mov	x8, #0x0                   	// #0
    a72c:	stp	x23, x24, [sp, #48]
    a730:	mov	x7, #0x1                   	// #1
    a734:	ldr	w24, [x2, #24]
    a738:	ldp	x23, x20, [x2]
    a73c:	stp	x21, x22, [sp, #32]
    a740:	mov	x22, x0
    a744:	stp	x25, x26, [sp, #64]
    a748:	mov	x25, x1
    a74c:	movk	x6, #0x25, lsl #48
    a750:	stp	x27, x28, [sp, #80]
    a754:	str	xzr, [x1, #264]
    a758:	mov	x1, x3
    a75c:	ldrb	w0, [x3], #1
    a760:	cbz	w0, a850 <grub_memset+0x1e0>
    a764:	cmp	w0, #0x25
    a768:	b.ne	a758 <grub_memset+0xe8>  // b.any
    a76c:	ldrb	w0, [x1, #1]
    a770:	cmp	w0, #0x2d
    a774:	b.ne	a788 <grub_memset+0x118>  // b.any
    a778:	ldrb	w0, [x1, #2]
    a77c:	add	x3, x1, #0x2
    a780:	b	a788 <grub_memset+0x118>
    a784:	ldrb	w0, [x3, #1]!
    a788:	sub	w1, w0, #0x30
    a78c:	cmp	w1, #0x9
    a790:	b.ls	a784 <grub_memset+0x114>  // b.plast
    a794:	cmp	w0, #0x24
    a798:	add	x5, x3, #0x1
    a79c:	b.ne	a7ac <grub_memset+0x13c>  // b.any
    a7a0:	add	x0, x3, #0x2
    a7a4:	mov	x3, x5
    a7a8:	mov	x5, x0
    a7ac:	ldrb	w0, [x3]
    a7b0:	cmp	w0, #0x2d
    a7b4:	b.ne	a7c4 <grub_memset+0x154>  // b.any
    a7b8:	ldrb	w0, [x3, #1]
    a7bc:	mov	x3, x5
    a7c0:	add	x5, x5, #0x1
    a7c4:	sub	w1, w0, #0x30
    a7c8:	cmp	w1, #0x9
    a7cc:	b.hi	a7e8 <grub_memset+0x178>  // b.pmore
    a7d0:	mov	x5, x3
    a7d4:	ldrb	w0, [x3, #1]!
    a7d8:	sub	w1, w0, #0x30
    a7dc:	cmp	w1, #0x9
    a7e0:	b.ls	a7d0 <grub_memset+0x160>  // b.plast
    a7e4:	add	x5, x5, #0x2
    a7e8:	cmp	w0, #0x2e
    a7ec:	b.ne	abc0 <grub_memset+0x550>  // b.any
    a7f0:	ldrb	w4, [x3, #1]
    a7f4:	sub	w0, w4, #0x30
    a7f8:	cmp	w0, #0x9
    a7fc:	b.hi	ac2c <grub_memset+0x5bc>  // b.pmore
    a800:	mov	x3, x5
    a804:	ldrb	w4, [x5, #1]!
    a808:	sub	w0, w4, #0x30
    a80c:	cmp	w0, #0x9
    a810:	b.ls	a800 <grub_memset+0x190>  // b.plast
    a814:	add	x3, x3, #0x2
    a818:	cmp	w4, #0x6c
    a81c:	b.eq	aac4 <grub_memset+0x454>  // b.none
    a820:	sub	w4, w4, #0x43
    a824:	and	w4, w4, #0xff
    a828:	cmp	w4, #0x35
    a82c:	b.hi	a758 <grub_memset+0xe8>  // b.pmore
    a830:	lsl	x4, x7, x4
    a834:	tst	x4, x6
    a838:	b.eq	a758 <grub_memset+0xe8>  // b.none
    a83c:	add	x8, x8, #0x1
    a840:	str	x8, [x25, #264]
    a844:	mov	x1, x3
    a848:	ldrb	w0, [x3], #1
    a84c:	cbnz	w0, a764 <grub_memset+0xf4>
    a850:	cmp	x8, #0x20
    a854:	lsl	x2, x8, #3
    a858:	b.hi	aba4 <grub_memset+0x534>  // b.pmore
    a85c:	mov	x0, x25
    a860:	str	x25, [x25, #256]
    a864:	mov	x26, #0x0                   	// #0
    a868:	mov	w27, #0x5                   	// #5
    a86c:	mov	w1, #0x0                   	// #0
    a870:	bl	a670 <grub_memset>
    a874:	nop
    a878:	mov	x1, x22
    a87c:	ldrb	w0, [x22], #1
    a880:	cbz	w0, a99c <grub_memset+0x32c>
    a884:	cmp	w0, #0x25
    a888:	b.ne	a878 <grub_memset+0x208>  // b.any
    a88c:	ldrb	w0, [x1, #1]
    a890:	add	x28, x26, #0x1
    a894:	cmp	w0, #0x2d
    a898:	b.ne	a8a4 <grub_memset+0x234>  // b.any
    a89c:	ldrb	w0, [x1, #2]
    a8a0:	add	x22, x1, #0x2
    a8a4:	sub	w1, w0, #0x30
    a8a8:	mov	x19, x22
    a8ac:	cmp	w1, #0x9
    a8b0:	b.hi	a8c8 <grub_memset+0x258>  // b.pmore
    a8b4:	nop
    a8b8:	ldrb	w0, [x19, #1]!
    a8bc:	sub	w1, w0, #0x30
    a8c0:	cmp	w1, #0x9
    a8c4:	b.ls	a8b8 <grub_memset+0x248>  // b.plast
    a8c8:	cmp	w0, #0x24
    a8cc:	add	x21, x19, #0x1
    a8d0:	mov	x1, x26
    a8d4:	b.eq	ab80 <grub_memset+0x510>  // b.none
    a8d8:	ldrb	w0, [x19]
    a8dc:	cmp	w0, #0x2d
    a8e0:	b.ne	a8f0 <grub_memset+0x280>  // b.any
    a8e4:	ldrb	w0, [x19, #1]
    a8e8:	mov	x19, x21
    a8ec:	add	x21, x21, #0x1
    a8f0:	sub	w2, w0, #0x30
    a8f4:	cmp	w2, #0x9
    a8f8:	b.hi	a918 <grub_memset+0x2a8>  // b.pmore
    a8fc:	nop
    a900:	mov	x21, x19
    a904:	ldrb	w0, [x19, #1]!
    a908:	sub	w2, w0, #0x30
    a90c:	cmp	w2, #0x9
    a910:	b.ls	a900 <grub_memset+0x290>  // b.plast
    a914:	add	x21, x21, #0x2
    a918:	cmp	w0, #0x2e
    a91c:	b.ne	abd4 <grub_memset+0x564>  // b.any
    a920:	ldrb	w2, [x19, #1]
    a924:	sub	w0, w2, #0x30
    a928:	cmp	w0, #0x9
    a92c:	b.hi	ac18 <grub_memset+0x5a8>  // b.pmore
    a930:	mov	x22, x21
    a934:	ldrb	w2, [x21, #1]!
    a938:	sub	w3, w2, #0x30
    a93c:	cmp	w3, #0x9
    a940:	b.ls	a930 <grub_memset+0x2c0>  // b.plast
    a944:	add	x22, x22, #0x2
    a948:	cmp	w2, #0x25
    a94c:	b.eq	ab74 <grub_memset+0x504>  // b.none
    a950:	cmp	w2, #0x6c
    a954:	mov	w3, #0x0                   	// #0
    a958:	b.eq	aaec <grub_memset+0x47c>  // b.none
    a95c:	ldr	x0, [x25, #264]
    a960:	cmp	x0, x1
    a964:	b.ls	a98c <grub_memset+0x31c>  // b.plast
    a968:	cmp	w2, #0x70
    a96c:	b.eq	aa48 <grub_memset+0x3d8>  // b.none
    a970:	b.hi	aa18 <grub_memset+0x3a8>  // b.pmore
    a974:	cmp	w2, #0x64
    a978:	b.eq	abe4 <grub_memset+0x574>  // b.none
    a97c:	b.hi	a98c <grub_memset+0x31c>  // b.pmore
    a980:	and	w2, w2, #0xffffffdf
    a984:	cmp	w2, #0x43
    a988:	b.eq	ab48 <grub_memset+0x4d8>  // b.none
    a98c:	mov	x26, x28
    a990:	mov	x1, x22
    a994:	ldrb	w0, [x22], #1
    a998:	cbnz	w0, a884 <grub_memset+0x214>
    a99c:	ldr	x2, [x25, #264]
    a9a0:	cbz	x2, a9fc <grub_memset+0x38c>
    a9a4:	ldr	x1, [x25, #256]
    a9a8:	add	x2, x1, x2, lsl #3
    a9ac:	nop
    a9b0:	ldr	w0, [x1]
    a9b4:	cmp	w0, #0x3
    a9b8:	b.eq	aaa8 <grub_memset+0x438>  // b.none
    a9bc:	b.hi	aa5c <grub_memset+0x3ec>  // b.pmore
    a9c0:	cmp	w0, #0x1
    a9c4:	b.eq	aa6c <grub_memset+0x3fc>  // b.none
    a9c8:	cmp	w0, #0x2
    a9cc:	b.eq	aa6c <grub_memset+0x3fc>  // b.none
    a9d0:	cbnz	w0, a9f0 <grub_memset+0x380>
    a9d4:	tbnz	w24, #31, ab08 <grub_memset+0x498>
    a9d8:	add	x3, x23, #0xb
    a9dc:	mov	x0, x23
    a9e0:	and	x23, x3, #0xfffffffffffffff8
    a9e4:	ldrsw	x0, [x0]
    a9e8:	str	x0, [x1]
    a9ec:	nop
    a9f0:	add	x1, x1, #0x8
    a9f4:	cmp	x2, x1
    a9f8:	b.ne	a9b0 <grub_memset+0x340>  // b.any
    a9fc:	ldp	x19, x20, [sp, #16]
    aa00:	ldp	x21, x22, [sp, #32]
    aa04:	ldp	x23, x24, [sp, #48]
    aa08:	ldp	x25, x26, [sp, #64]
    aa0c:	ldp	x27, x28, [sp, #80]
    aa10:	ldp	x29, x30, [sp], #96
    aa14:	ret
    aa18:	cmp	w2, #0x75
    aa1c:	b.eq	aa28 <grub_memset+0x3b8>  // b.none
    aa20:	cmp	w2, #0x78
    aa24:	b.ne	aa40 <grub_memset+0x3d0>  // b.any
    aa28:	ldr	x0, [x25, #256]
    aa2c:	lsl	x1, x1, #3
    aa30:	add	w3, w3, #0x3
    aa34:	mov	x26, x28
    aa38:	str	w3, [x0, x1]
    aa3c:	b	a990 <grub_memset+0x320>
    aa40:	cmp	w2, #0x73
    aa44:	b.ne	a98c <grub_memset+0x31c>  // b.any
    aa48:	ldr	x0, [x25, #256]
    aa4c:	lsl	x1, x1, #3
    aa50:	mov	x26, x28
    aa54:	str	w27, [x0, x1]
    aa58:	b	a990 <grub_memset+0x320>
    aa5c:	cmp	w0, #0x4
    aa60:	b.eq	aa6c <grub_memset+0x3fc>  // b.none
    aa64:	cmp	w0, #0x5
    aa68:	b.ne	a9f0 <grub_memset+0x380>  // b.any
    aa6c:	tbnz	w24, #31, aa88 <grub_memset+0x418>
    aa70:	add	x3, x23, #0xf
    aa74:	mov	x0, x23
    aa78:	and	x23, x3, #0xfffffffffffffff8
    aa7c:	ldr	x0, [x0]
    aa80:	str	x0, [x1]
    aa84:	b	a9f0 <grub_memset+0x380>
    aa88:	add	w3, w24, #0x8
    aa8c:	cmp	w3, #0x0
    aa90:	b.le	aae0 <grub_memset+0x470>
    aa94:	add	x4, x23, #0xf
    aa98:	mov	x0, x23
    aa9c:	mov	w24, w3
    aaa0:	and	x23, x4, #0xfffffffffffffff8
    aaa4:	b	aa7c <grub_memset+0x40c>
    aaa8:	tbnz	w24, #31, ab28 <grub_memset+0x4b8>
    aaac:	add	x3, x23, #0xb
    aab0:	mov	x0, x23
    aab4:	and	x23, x3, #0xfffffffffffffff8
    aab8:	ldr	w0, [x0]
    aabc:	str	x0, [x1]
    aac0:	b	a9f0 <grub_memset+0x380>
    aac4:	ldrb	w4, [x5, #1]
    aac8:	add	x3, x5, #0x2
    aacc:	cmp	w4, #0x6c
    aad0:	b.ne	a820 <grub_memset+0x1b0>  // b.any
    aad4:	ldrb	w4, [x5, #2]
    aad8:	add	x3, x5, #0x3
    aadc:	b	a820 <grub_memset+0x1b0>
    aae0:	add	x0, x20, w24, sxtw
    aae4:	mov	w24, w3
    aae8:	b	aa7c <grub_memset+0x40c>
    aaec:	ldrb	w2, [x21, #1]
    aaf0:	cmp	w2, #0x6c
    aaf4:	b.ne	ac20 <grub_memset+0x5b0>  // b.any
    aaf8:	ldrb	w2, [x21, #2]
    aafc:	add	x22, x21, #0x3
    ab00:	mov	w3, #0x2                   	// #2
    ab04:	b	a95c <grub_memset+0x2ec>
    ab08:	add	w3, w24, #0x8
    ab0c:	cmp	w3, #0x0
    ab10:	b.le	ab5c <grub_memset+0x4ec>
    ab14:	add	x4, x23, #0xb
    ab18:	mov	x0, x23
    ab1c:	mov	w24, w3
    ab20:	and	x23, x4, #0xfffffffffffffff8
    ab24:	b	a9e4 <grub_memset+0x374>
    ab28:	add	w3, w24, #0x8
    ab2c:	cmp	w3, #0x0
    ab30:	b.le	ab68 <grub_memset+0x4f8>
    ab34:	add	x4, x23, #0xb
    ab38:	mov	x0, x23
    ab3c:	mov	w24, w3
    ab40:	and	x23, x4, #0xfffffffffffffff8
    ab44:	b	aab8 <grub_memset+0x448>
    ab48:	ldr	x0, [x25, #256]
    ab4c:	lsl	x1, x1, #3
    ab50:	mov	x26, x28
    ab54:	str	wzr, [x0, x1]
    ab58:	b	a990 <grub_memset+0x320>
    ab5c:	add	x0, x20, w24, sxtw
    ab60:	mov	w24, w3
    ab64:	b	a9e4 <grub_memset+0x374>
    ab68:	add	x0, x20, w24, sxtw
    ab6c:	mov	w24, w3
    ab70:	b	aab8 <grub_memset+0x448>
    ab74:	mov	x28, x26
    ab78:	mov	x26, x28
    ab7c:	b	a990 <grub_memset+0x320>
    ab80:	mov	w2, #0xa                   	// #10
    ab84:	mov	x1, #0x0                   	// #0
    ab88:	mov	x0, x22
    ab8c:	bl	9d30 <grub_strtoull>
    ab90:	add	x2, x19, #0x2
    ab94:	sub	x1, x0, #0x1
    ab98:	mov	x19, x21
    ab9c:	mov	x21, x2
    aba0:	b	a8d8 <grub_memset+0x268>
    aba4:	mov	x0, x2
    aba8:	bl	57d8 <grub_malloc>
    abac:	str	x0, [x25, #256]
    abb0:	cbz	x0, abf8 <grub_memset+0x588>
    abb4:	ldr	x2, [x25, #264]
    abb8:	lsl	x2, x2, #3
    abbc:	b	a864 <grub_memset+0x1f4>
    abc0:	mov	x0, x5
    abc4:	ldrb	w4, [x3]
    abc8:	mov	x5, x3
    abcc:	mov	x3, x0
    abd0:	b	a818 <grub_memset+0x1a8>
    abd4:	mov	x22, x21
    abd8:	ldrb	w2, [x19]
    abdc:	mov	x21, x19
    abe0:	b	a948 <grub_memset+0x2d8>
    abe4:	ldr	x0, [x25, #256]
    abe8:	lsl	x1, x1, #3
    abec:	mov	x26, x28
    abf0:	str	w3, [x0, x1]
    abf4:	b	a990 <grub_memset+0x320>
    abf8:	adrp	x1, 0 <_start>
    abfc:	mov	x3, #0x20                  	// #32
    ac00:	mov	x0, x25
    ac04:	mov	x2, #0x100                 	// #256
    ac08:	ldr	x1, [x1]
    ac0c:	stp	x25, x3, [x25, #256]
    ac10:	str	wzr, [x1]
    ac14:	b	a864 <grub_memset+0x1f4>
    ac18:	add	x22, x21, #0x1
    ac1c:	b	a948 <grub_memset+0x2d8>
    ac20:	add	x22, x21, #0x2
    ac24:	mov	w3, #0x1                   	// #1
    ac28:	b	a95c <grub_memset+0x2ec>
    ac2c:	add	x3, x5, #0x1
    ac30:	b	a818 <grub_memset+0x1a8>
    ac34:	nop
	...

000000000000ac40 <grub_vprintf>:
    ac40:	mov	x3, x1
    ac44:	stp	x29, x30, [sp, #-384]!
    ac48:	mov	x29, sp
    ac4c:	ldp	x4, x5, [x3]
    ac50:	stp	x4, x5, [sp, #80]
    ac54:	add	x2, sp, #0x50
    ac58:	ldp	x4, x5, [x3, #16]
    ac5c:	stp	x19, x20, [sp, #16]
    ac60:	add	x20, sp, #0x70
    ac64:	mov	x1, x20
    ac68:	stp	x21, x22, [sp, #32]
    ac6c:	mov	x21, x0
    ac70:	stp	x23, x24, [sp, #48]
    ac74:	stp	x25, x26, [sp, #64]
    ac78:	add	x26, x20, #0x108
    ac7c:	add	x25, x20, #0x100
    ac80:	stp	x4, x5, [sp, #96]
    ac84:	bl	a710 <grub_memset+0xa0>
    ac88:	adrp	x0, 0 <_start>
    ac8c:	mov	x2, x21
    ac90:	mov	x4, x26
    ac94:	ldr	x22, [x0]
    ac98:	mov	x3, x25
    ac9c:	mov	x1, #0xff                  	// #255
    aca0:	mov	x0, x22
    aca4:	bl	9ee0 <grub_strtoul+0x8>
    aca8:	sxtw	x24, w0
    acac:	mov	x19, x24
    acb0:	cmp	x24, #0xff
    acb4:	b.hi	ad3c <grub_vprintf+0xfc>  // b.pmore
    acb8:	ldr	x0, [sp, #368]
    acbc:	mov	x23, x22
    acc0:	cmp	x0, x20
    acc4:	b.eq	ad0c <grub_vprintf+0xcc>  // b.none
    acc8:	bl	5828 <grub_free>
    accc:	adrp	x1, 0 <_start>
    acd0:	mov	x0, x23
    acd4:	ldr	x1, [x1]
    acd8:	ldr	x1, [x1]
    acdc:	blr	x1
    ace0:	cmp	x23, x22
    ace4:	b.eq	acf0 <grub_vprintf+0xb0>  // b.none
    ace8:	mov	x0, x23
    acec:	bl	5828 <grub_free>
    acf0:	mov	w0, w19
    acf4:	ldp	x19, x20, [sp, #16]
    acf8:	ldp	x21, x22, [sp, #32]
    acfc:	ldp	x23, x24, [sp, #48]
    ad00:	ldp	x25, x26, [sp, #64]
    ad04:	ldp	x29, x30, [sp], #384
    ad08:	ret
    ad0c:	adrp	x1, 0 <_start>
    ad10:	mov	x0, x22
    ad14:	ldr	x1, [x1]
    ad18:	ldr	x1, [x1]
    ad1c:	blr	x1
    ad20:	mov	w0, w19
    ad24:	ldp	x19, x20, [sp, #16]
    ad28:	ldp	x21, x22, [sp, #32]
    ad2c:	ldp	x23, x24, [sp, #48]
    ad30:	ldp	x25, x26, [sp, #64]
    ad34:	ldp	x29, x30, [sp], #384
    ad38:	ret
    ad3c:	add	x0, x24, #0x1
    ad40:	bl	57d8 <grub_malloc>
    ad44:	mov	x23, x0
    ad48:	cbz	x0, ad74 <grub_vprintf+0x134>
    ad4c:	mov	x4, x26
    ad50:	mov	x3, x25
    ad54:	mov	x2, x21
    ad58:	mov	x1, x24
    ad5c:	bl	9ee0 <grub_strtoul+0x8>
    ad60:	mov	w19, w0
    ad64:	ldr	x0, [sp, #368]
    ad68:	cmp	x0, x20
    ad6c:	b.ne	acc8 <grub_vprintf+0x88>  // b.any
    ad70:	b	accc <grub_vprintf+0x8c>
    ad74:	adrp	x0, 0 <_start>
    ad78:	mov	w1, #0x2e2e                	// #11822
    ad7c:	movk	w1, #0x2e, lsl #16
    ad80:	str	w1, [x22, #252]
    ad84:	ldr	x0, [x0]
    ad88:	str	wzr, [x0]
    ad8c:	b	acb8 <grub_vprintf+0x78>
	...

000000000000ada8 <grub_err_printf>:
    ada8:	stp	x29, x30, [sp, #-144]!
    adac:	mov	w8, #0xffffffc8            	// #-56
    adb0:	mov	x29, sp
    adb4:	add	x10, sp, #0x90
    adb8:	stp	x10, x10, [sp, #48]
    adbc:	add	x9, sp, #0x50
    adc0:	str	x9, [sp, #64]
    adc4:	stp	w8, wzr, [sp, #72]
    adc8:	ldp	x8, x9, [sp, #48]
    adcc:	stp	x8, x9, [sp, #16]
    add0:	ldp	x8, x9, [sp, #64]
    add4:	stp	x8, x9, [sp, #32]
    add8:	stp	x1, x2, [sp, #88]
    addc:	add	x1, sp, #0x10
    ade0:	stp	x3, x4, [sp, #104]
    ade4:	stp	x5, x6, [sp, #120]
    ade8:	str	x7, [sp, #136]
    adec:	bl	ac40 <grub_vprintf>
    adf0:	ldp	x29, x30, [sp], #144
    adf4:	ret

000000000000adf8 <grub_printf_>:
    adf8:	stp	x29, x30, [sp, #-144]!
    adfc:	adrp	x9, 0 <_start>
    ae00:	mov	x29, sp
    ae04:	stp	x1, x2, [sp, #88]
    ae08:	add	x8, sp, #0x50
    ae0c:	mov	w2, #0xffffffc8            	// #-56
    ae10:	ldr	x1, [x9]
    ae14:	stp	x3, x4, [sp, #104]
    ae18:	add	x3, sp, #0x90
    ae1c:	str	x5, [sp, #120]
    ae20:	stp	x3, x3, [sp, #48]
    ae24:	ldr	x1, [x1]
    ae28:	stp	x6, x7, [sp, #128]
    ae2c:	str	x8, [sp, #64]
    ae30:	str	w2, [sp, #72]
    ae34:	str	wzr, [sp, #76]
    ae38:	blr	x1
    ae3c:	ldp	x4, x5, [sp, #48]
    ae40:	add	x1, sp, #0x10
    ae44:	ldp	x2, x3, [sp, #64]
    ae48:	stp	x4, x5, [sp, #16]
    ae4c:	stp	x2, x3, [sp, #32]
    ae50:	bl	ac40 <grub_vprintf>
    ae54:	ldp	x29, x30, [sp], #144
    ae58:	ret
    ae5c:	nop
	...

000000000000ae68 <grub_real_dprintf>:
    ae68:	stp	x29, x30, [sp, #-144]!
    ae6c:	adrp	x9, 0 <_start>
    ae70:	mov	x29, sp
    ae74:	stp	x21, x22, [sp, #32]
    ae78:	mov	x22, x0
    ae7c:	mov	w21, w1
    ae80:	ldr	x0, [x9]
    ae84:	stp	x19, x20, [sp, #16]
    ae88:	mov	x19, x2
    ae8c:	mov	x20, x3
    ae90:	stp	x4, x5, [sp, #112]
    ae94:	stp	x6, x7, [sp, #128]
    ae98:	bl	8378 <grub_env_get>
    ae9c:	cbz	x0, af00 <grub_real_dprintf+0x98>
    aea0:	adrp	x1, 0 <_start>
    aea4:	mov	x9, x0
    aea8:	ldr	x1, [x1]
    aeac:	bl	9c40 <grub_strword>
    aeb0:	cbz	w0, af10 <grub_real_dprintf+0xa8>
    aeb4:	adrp	x0, 0 <_start>
    aeb8:	mov	w2, w21
    aebc:	mov	x1, x22
    aec0:	ldr	x0, [x0]
    aec4:	bl	ada8 <grub_err_printf>
    aec8:	add	x1, sp, #0x90
    aecc:	stp	x1, x1, [sp, #80]
    aed0:	add	x0, sp, #0x70
    aed4:	mov	w2, #0xffffffe0            	// #-32
    aed8:	str	x0, [sp, #96]
    aedc:	stp	w2, wzr, [sp, #104]
    aee0:	add	x1, sp, #0x30
    aee4:	ldp	x2, x3, [sp, #80]
    aee8:	stp	x2, x3, [sp, #48]
    aeec:	mov	x0, x20
    aef0:	ldp	x2, x3, [sp, #96]
    aef4:	stp	x2, x3, [sp, #64]
    aef8:	bl	ac40 <grub_vprintf>
    aefc:	bl	c318 <grub_refresh>
    af00:	ldp	x19, x20, [sp, #16]
    af04:	ldp	x21, x22, [sp, #32]
    af08:	ldp	x29, x30, [sp], #144
    af0c:	ret
    af10:	mov	x1, x19
    af14:	mov	x0, x9
    af18:	bl	9c40 <grub_strword>
    af1c:	cbnz	w0, aeb4 <grub_real_dprintf+0x4c>
    af20:	ldp	x19, x20, [sp, #16]
    af24:	ldp	x21, x22, [sp, #32]
    af28:	ldp	x29, x30, [sp], #144
    af2c:	ret
	...

000000000000af48 <grub_strlen>:
    af48:	ldrb	w1, [x0]
    af4c:	cbz	w1, af68 <grub_strlen+0x20>
    af50:	mov	x1, x0
    af54:	nop
    af58:	ldrb	w2, [x1, #1]!
    af5c:	cbnz	w2, af58 <grub_strlen+0x10>
    af60:	sub	x0, x1, x0
    af64:	ret
    af68:	mov	x0, #0x0                   	// #0
    af6c:	ret

000000000000af70 <grub_divmod64>:
    af70:	mov	x5, #0xfffffffe            	// #4294967294
    af74:	cmp	x0, x5
    af78:	mov	x4, x0
    af7c:	ccmp	x1, x5, #0x2, ls  // ls = plast
    af80:	b.ls	af88 <grub_divmod64+0x18>  // b.plast
    af84:	b	99f0 <grub_main+0x630>
    af88:	udiv	w0, w0, w1
    af8c:	cbz	x2, af98 <grub_divmod64+0x28>
    af90:	msub	w3, w0, w1, w4
    af94:	str	x3, [x2]
    af98:	ret
    af9c:	nop

000000000000afa0 <grub_vsnprintf>:
    afa0:	cbnz	x1, afac <grub_vsnprintf+0xc>
    afa4:	mov	w0, #0x0                   	// #0
    afa8:	ret
    afac:	stp	x29, x30, [sp, #-352]!
    afb0:	mov	x29, sp
    afb4:	ldp	x6, x7, [x3]
    afb8:	stp	x19, x20, [sp, #16]
    afbc:	mov	x19, x2
    afc0:	ldp	x4, x5, [x3, #16]
    afc4:	stp	x21, x22, [sp, #32]
    afc8:	add	x22, sp, #0x50
    afcc:	mov	x21, x0
    afd0:	sub	x20, x1, #0x1
    afd4:	mov	x0, x19
    afd8:	mov	x1, x22
    afdc:	add	x2, sp, #0x30
    afe0:	stp	x6, x7, [sp, #48]
    afe4:	stp	x4, x5, [sp, #64]
    afe8:	bl	a710 <grub_memset+0xa0>
    afec:	mov	x2, x19
    aff0:	mov	x1, x20
    aff4:	mov	x0, x21
    aff8:	add	x4, x22, #0x108
    affc:	add	x3, x22, #0x100
    b000:	bl	9ee0 <grub_strtoul+0x8>
    b004:	sxtw	x19, w0
    b008:	ldr	x1, [sp, #336]
    b00c:	cmp	x1, x22
    b010:	b.eq	b01c <grub_vsnprintf+0x7c>  // b.none
    b014:	mov	x0, x1
    b018:	bl	5828 <grub_free>
    b01c:	cmp	x20, x19
    b020:	csel	x0, x20, x19, ls  // ls = plast
    b024:	ldp	x19, x20, [sp, #16]
    b028:	ldp	x21, x22, [sp, #32]
    b02c:	ldp	x29, x30, [sp], #352
    b030:	ret
    b034:	nop

000000000000b038 <grub_snprintf>:
    b038:	stp	x29, x30, [sp, #-128]!
    b03c:	mov	w8, #0xffffffd8            	// #-40
    b040:	mov	x29, sp
    b044:	add	x10, sp, #0x80
    b048:	stp	x10, x10, [sp, #48]
    b04c:	add	x9, sp, #0x50
    b050:	str	x9, [sp, #64]
    b054:	stp	w8, wzr, [sp, #72]
    b058:	ldp	x8, x9, [sp, #48]
    b05c:	stp	x8, x9, [sp, #16]
    b060:	ldp	x8, x9, [sp, #64]
    b064:	stp	x8, x9, [sp, #32]
    b068:	stp	x3, x4, [sp, #88]
    b06c:	add	x3, sp, #0x10
    b070:	stp	x5, x6, [sp, #104]
    b074:	str	x7, [sp, #120]
    b078:	bl	afa0 <grub_vsnprintf>
    b07c:	ldp	x29, x30, [sp], #128
    b080:	ret
    b084:	nop

000000000000b088 <grub_xvasprintf>:
    b088:	mov	x2, x1
    b08c:	stp	x29, x30, [sp, #-368]!
    b090:	mov	x29, sp
    b094:	ldp	x6, x7, [x2]
    b098:	stp	x23, x24, [sp, #48]
    b09c:	add	x24, sp, #0x60
    b0a0:	ldp	x4, x5, [x2, #16]
    b0a4:	add	x23, x24, #0x108
    b0a8:	mov	x1, x24
    b0ac:	add	x2, sp, #0x40
    b0b0:	stp	x19, x20, [sp, #16]
    b0b4:	mov	x20, #0xff                  	// #255
    b0b8:	stp	x21, x22, [sp, #32]
    b0bc:	add	x22, x24, #0x100
    b0c0:	mov	x21, x0
    b0c4:	stp	x6, x7, [sp, #64]
    b0c8:	stp	x4, x5, [sp, #80]
    b0cc:	bl	a710 <grub_memset+0xa0>
    b0d0:	b	b0f0 <grub_xvasprintf+0x68>
    b0d4:	bl	9ee0 <grub_strtoul+0x8>
    b0d8:	sxtw	x1, w0
    b0dc:	mov	x0, x19
    b0e0:	cmp	x20, w1, sxtw
    b0e4:	b.cs	b110 <grub_xvasprintf+0x88>  // b.hs, b.nlast
    b0e8:	mov	x20, x1
    b0ec:	bl	5828 <grub_free>
    b0f0:	add	x0, x20, #0x1
    b0f4:	bl	57d8 <grub_malloc>
    b0f8:	mov	x1, x20
    b0fc:	mov	x4, x23
    b100:	mov	x3, x22
    b104:	mov	x2, x21
    b108:	mov	x19, x0
    b10c:	cbnz	x0, b0d4 <grub_xvasprintf+0x4c>
    b110:	ldr	x0, [sp, #352]
    b114:	cmp	x0, x24
    b118:	b.eq	b120 <grub_xvasprintf+0x98>  // b.none
    b11c:	bl	5828 <grub_free>
    b120:	mov	x0, x19
    b124:	ldp	x19, x20, [sp, #16]
    b128:	ldp	x21, x22, [sp, #32]
    b12c:	ldp	x23, x24, [sp, #48]
    b130:	ldp	x29, x30, [sp], #368
    b134:	ret

000000000000b138 <grub_xasprintf>:
    b138:	stp	x29, x30, [sp, #-144]!
    b13c:	mov	w8, #0xffffffc8            	// #-56
    b140:	mov	x29, sp
    b144:	add	x10, sp, #0x90
    b148:	stp	x10, x10, [sp, #48]
    b14c:	add	x9, sp, #0x50
    b150:	str	x9, [sp, #64]
    b154:	stp	w8, wzr, [sp, #72]
    b158:	ldp	x8, x9, [sp, #48]
    b15c:	stp	x8, x9, [sp, #16]
    b160:	ldp	x8, x9, [sp, #64]
    b164:	stp	x8, x9, [sp, #32]
    b168:	stp	x1, x2, [sp, #88]
    b16c:	add	x1, sp, #0x10
    b170:	stp	x3, x4, [sp, #104]
    b174:	stp	x5, x6, [sp, #120]
    b178:	str	x7, [sp, #136]
    b17c:	bl	b088 <grub_xvasprintf>
    b180:	ldp	x29, x30, [sp], #144
    b184:	ret

000000000000b188 <grub_fatal>:
    b188:	stp	x29, x30, [sp, #-144]!
    b18c:	adrp	x9, 0 <_start>
    b190:	mov	x29, sp
    b194:	stp	x1, x2, [sp, #88]
    b198:	add	x8, sp, #0x50
    b19c:	mov	w2, #0xffffffc8            	// #-56
    b1a0:	ldr	x1, [x9]
    b1a4:	stp	x3, x4, [sp, #104]
    b1a8:	add	x3, sp, #0x90
    b1ac:	str	x5, [sp, #120]
    b1b0:	stp	x3, x3, [sp, #48]
    b1b4:	ldr	x1, [x1]
    b1b8:	stp	x6, x7, [sp, #128]
    b1bc:	str	x8, [sp, #64]
    b1c0:	str	w2, [sp, #72]
    b1c4:	str	wzr, [sp, #76]
    b1c8:	blr	x1
    b1cc:	ldp	x2, x3, [sp, #48]
    b1d0:	stp	x2, x3, [sp, #16]
    b1d4:	add	x1, sp, #0x10
    b1d8:	ldp	x2, x3, [sp, #64]
    b1dc:	stp	x2, x3, [sp, #32]
    b1e0:	bl	ac40 <grub_vprintf>
    b1e4:	bl	c318 <grub_refresh>
    b1e8:	adrp	x0, 0 <_start>
    b1ec:	ldr	x0, [x0]
    b1f0:	bl	ada8 <grub_err_printf>
    b1f4:	adrp	x0, 0 <_start>
    b1f8:	ldr	x0, [x0]
    b1fc:	ldr	x0, [x0]
    b200:	cbz	x0, b214 <grub_fatal+0x8c>
    b204:	adrp	x0, 0 <_start>
    b208:	ldr	x0, [x0]
    b20c:	bl	ada8 <grub_err_printf>
    b210:	bl	c2c0 <grub_getkey>
    b214:	bl	2260 <grub_exit>
	...
    b238:	stp	x29, x30, [sp, #-48]!
    b23c:	mov	x29, sp
    b240:	str	x21, [sp, #32]
    b244:	mov	x21, x0
    b248:	ldr	x0, [x2]
    b24c:	cbz	x0, b2a0 <grub_fatal+0x118>
    b250:	stp	x19, x20, [sp, #16]
    b254:	mov	x19, x2
    b258:	mov	w1, #0xa                   	// #10
    b25c:	bl	9c00 <grub_strchr>
    b260:	mov	x20, x0
    b264:	ldr	x0, [x19]
    b268:	cbz	x20, b294 <grub_fatal+0x10c>
    b26c:	sub	x1, x20, x0
    b270:	add	x20, x20, #0x1
    b274:	bl	a600 <grub_strndup>
    b278:	str	x0, [x21]
    b27c:	str	x20, [x19]
    b280:	mov	w0, #0x0                   	// #0
    b284:	ldp	x19, x20, [sp, #16]
    b288:	ldr	x21, [sp, #32]
    b28c:	ldp	x29, x30, [sp], #48
    b290:	ret
    b294:	bl	a598 <grub_strdup>
    b298:	str	x0, [x21]
    b29c:	b	b27c <grub_fatal+0xf4>
    b2a0:	str	xzr, [x21]
    b2a4:	mov	w0, #0x0                   	// #0
    b2a8:	ldr	x21, [sp, #32]
    b2ac:	ldp	x29, x30, [sp], #48
    b2b0:	ret
    b2b4:	nop
    b2b8:	stp	x29, x30, [sp, #-48]!
    b2bc:	mov	x29, sp
    b2c0:	stp	x19, x20, [sp, #16]
    b2c4:	mov	x20, x2
    b2c8:	mov	x19, x1
    b2cc:	ldr	x1, [x2]
    b2d0:	str	x21, [sp, #32]
    b2d4:	mov	x21, x0
    b2d8:	add	x2, x1, #0x1
    b2dc:	str	x2, [x20]
    b2e0:	strb	wzr, [x1]
    b2e4:	bl	8378 <grub_env_get>
    b2e8:	str	x21, [x20]
    b2ec:	cbz	x0, b314 <grub_fatal+0x18c>
    b2f0:	ldrb	w1, [x0]
    b2f4:	cbz	w1, b314 <grub_fatal+0x18c>
    b2f8:	ldr	x2, [x19]
    b2fc:	add	x1, x2, #0x1
    b300:	str	x1, [x19]
    b304:	ldrb	w1, [x0]
    b308:	strb	w1, [x2]
    b30c:	ldrb	w1, [x0, #1]!
    b310:	cbnz	w1, b2f8 <grub_fatal+0x170>
    b314:	ldp	x19, x20, [sp, #16]
    b318:	ldr	x21, [sp, #32]
    b31c:	ldp	x29, x30, [sp], #48
    b320:	ret
    b324:	nop

000000000000b328 <grub_parser_cmdline_state>:
    b328:	stp	x29, x30, [sp, #-80]!
    b32c:	adrp	x3, 0 <_start>
    b330:	mov	x29, sp
    b334:	stp	x19, x20, [sp, #16]
    b338:	mov	w20, w0
    b33c:	mov	w0, #0x1                   	// #1
    b340:	ldr	x19, [x3]
    b344:	stp	x21, x22, [sp, #32]
    b348:	and	w21, w1, #0xff
    b34c:	stp	x23, x24, [sp, #48]
    b350:	mov	x23, x2
    b354:	ldr	w1, [x19]
    b358:	str	w20, [sp, #68]
    b35c:	str	w0, [sp, #76]
    b360:	cbz	w1, b3b8 <grub_parser_cmdline_state+0x90>
    b364:	and	w22, w21, #0xffffffdf
    b368:	sub	w24, w21, #0x30
    b36c:	sub	w22, w22, #0x41
    b370:	and	w22, w22, #0xff
    b374:	nop
    b378:	cmp	w20, w1
    b37c:	b.ne	b3b0 <grub_parser_cmdline_state+0x88>  // b.any
    b380:	ldrb	w0, [x19, #8]
    b384:	cmp	w0, w21
    b388:	b.eq	b3d8 <grub_parser_cmdline_state+0xb0>  // b.none
    b38c:	bl	9d08 <grub_isspace>
    b390:	cbz	w0, b3a8 <grub_parser_cmdline_state+0x80>
    b394:	cmp	w22, #0x19
    b398:	b.ls	b3a8 <grub_parser_cmdline_state+0x80>  // b.plast
    b39c:	cmp	w21, #0x5f
    b3a0:	ccmp	w24, #0x9, #0x0, ne  // ne = any
    b3a4:	b.hi	b3d8 <grub_parser_cmdline_state+0xb0>  // b.pmore
    b3a8:	ldrb	w0, [x19, #8]
    b3ac:	cbz	w0, b3d8 <grub_parser_cmdline_state+0xb0>
    b3b0:	ldr	w1, [x19, #16]!
    b3b4:	cbnz	w1, b378 <grub_parser_cmdline_state+0x50>
    b3b8:	add	x19, sp, #0x40
    b3bc:	strb	w21, [x23]
    b3c0:	ldp	x21, x22, [sp, #32]
    b3c4:	ldr	w0, [x19, #4]
    b3c8:	ldp	x19, x20, [sp, #16]
    b3cc:	ldp	x23, x24, [sp, #48]
    b3d0:	ldp	x29, x30, [sp], #80
    b3d4:	ret
    b3d8:	ldr	w0, [x19]
    b3dc:	cbz	w0, b3b8 <grub_parser_cmdline_state+0x90>
    b3e0:	ldr	w0, [x19, #12]
    b3e4:	cmp	w0, #0x0
    b3e8:	csel	w21, w21, wzr, ne  // ne = any
    b3ec:	strb	w21, [x23]
    b3f0:	ldr	w0, [x19, #4]
    b3f4:	ldp	x19, x20, [sp, #16]
    b3f8:	ldp	x21, x22, [sp, #32]
    b3fc:	ldp	x23, x24, [sp, #48]
    b400:	ldp	x29, x30, [sp], #80
    b404:	ret
	...

000000000000b410 <grub_parser_split_cmdline>:
    b410:	sub	sp, sp, #0x540
    b414:	stp	x29, x30, [sp]
    b418:	mov	x29, sp
    b41c:	stp	x19, x20, [sp, #16]
    b420:	mov	w20, #0x1                   	// #1
    b424:	stp	x21, x22, [sp, #32]
    b428:	mov	x21, x3
    b42c:	add	x22, sp, #0x140
    b430:	stp	x23, x24, [sp, #48]
    b434:	mov	x24, x1
    b438:	mov	x23, x4
    b43c:	stp	x25, x26, [sp, #64]
    b440:	mov	x25, x2
    b444:	add	x26, sp, #0x78
    b448:	str	wzr, [x3]
    b44c:	stp	x22, x0, [sp, #96]
    b450:	str	x26, [sp, #112]
    b454:	cbz	x0, b4d8 <grub_parser_split_cmdline+0xc8>
    b458:	ldrb	w1, [x0]
    b45c:	cbz	w1, b4d8 <grub_parser_split_cmdline+0xc8>
    b460:	add	x2, sp, #0x5f
    b464:	mov	w0, w20
    b468:	bl	b328 <grub_parser_cmdline_state>
    b46c:	mov	w19, w0
    b470:	sub	w2, w19, #0x9
    b474:	sub	w1, w20, #0x9
    b478:	cmp	w2, #0x1
    b47c:	sub	w0, w20, #0x6
    b480:	cset	w2, ls  // ls = plast
    b484:	cmp	w1, #0x1
    b488:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    b48c:	b.hi	b524 <grub_parser_split_cmdline+0x114>  // b.pmore
    b490:	cmp	w2, #0x0
    b494:	sub	w0, w19, #0x6
    b498:	ccmp	w0, #0x1, #0x0, eq  // eq = none
    b49c:	b.hi	b56c <grub_parser_split_cmdline+0x15c>  // b.pmore
    b4a0:	ldrb	w0, [sp, #95]
    b4a4:	cbz	w0, b4b8 <grub_parser_split_cmdline+0xa8>
    b4a8:	ldr	x1, [sp, #112]
    b4ac:	add	x2, x1, #0x1
    b4b0:	str	x2, [sp, #112]
    b4b4:	strb	w0, [x1]
    b4b8:	ldr	x0, [sp, #104]
    b4bc:	mov	x1, x0
    b4c0:	add	x0, x0, #0x1
    b4c4:	str	x0, [sp, #104]
    b4c8:	ldrb	w1, [x1, #1]
    b4cc:	cbz	w1, b500 <grub_parser_split_cmdline+0xf0>
    b4d0:	mov	w20, w19
    b4d4:	b	b460 <grub_parser_split_cmdline+0x50>
    b4d8:	cbz	x24, b5a0 <grub_parser_split_cmdline+0x190>
    b4dc:	mov	x2, x25
    b4e0:	add	x0, sp, #0x68
    b4e4:	mov	w1, #0x1                   	// #1
    b4e8:	blr	x24
    b4ec:	ldr	x0, [sp, #104]
    b4f0:	cbz	x0, b5a0 <grub_parser_split_cmdline+0x190>
    b4f4:	ldrb	w1, [x0]
    b4f8:	cbnz	w1, b460 <grub_parser_split_cmdline+0x50>
    b4fc:	mov	w19, w20
    b500:	cmp	w19, #0x1
    b504:	b.eq	b5a0 <grub_parser_split_cmdline+0x190>  // b.none
    b508:	sub	w2, w19, #0x9
    b50c:	sub	w1, w19, #0x6
    b510:	cmp	w2, #0x1
    b514:	ccmp	w1, #0x1, #0x0, hi  // hi = pmore
    b518:	b.ls	b590 <grub_parser_split_cmdline+0x180>  // b.plast
    b51c:	mov	w20, w19
    b520:	b	b454 <grub_parser_split_cmdline+0x44>
    b524:	cmp	w2, #0x0
    b528:	sub	w0, w19, #0x6
    b52c:	ccmp	w0, #0x1, #0x0, eq  // eq = none
    b530:	b.ls	b4a0 <grub_parser_split_cmdline+0x90>  // b.plast
    b534:	cmp	w19, #0x1
    b538:	ldrb	w0, [sp, #95]
    b53c:	ccmp	w20, #0x2, #0x4, eq  // eq = none
    b540:	b.ne	b55c <grub_parser_split_cmdline+0x14c>  // b.any
    b544:	cbz	w0, b4b8 <grub_parser_split_cmdline+0xa8>
    b548:	ldr	x1, [sp, #96]
    b54c:	add	x2, x1, #0x1
    b550:	str	x2, [sp, #96]
    b554:	strb	w0, [x1]
    b558:	b	b4b8 <grub_parser_split_cmdline+0xa8>
    b55c:	bl	9d08 <grub_isspace>
    b560:	cbnz	w0, b65c <grub_parser_split_cmdline+0x24c>
    b564:	ldrb	w0, [sp, #95]
    b568:	b	b544 <grub_parser_split_cmdline+0x134>
    b56c:	mov	x0, x26
    b570:	add	x2, sp, #0x70
    b574:	add	x1, sp, #0x60
    b578:	bl	b2b8 <grub_fatal+0x130>
    b57c:	cmp	w19, #0x1
    b580:	ldrb	w0, [sp, #95]
    b584:	ccmp	w20, #0x2, #0x4, eq  // eq = none
    b588:	b.eq	b544 <grub_parser_split_cmdline+0x134>  // b.none
    b58c:	b	b55c <grub_parser_split_cmdline+0x14c>
    b590:	mov	x0, x26
    b594:	add	x2, sp, #0x70
    b598:	add	x1, sp, #0x60
    b59c:	bl	b2b8 <grub_fatal+0x130>
    b5a0:	ldr	x0, [sp, #96]
    b5a4:	cmp	x0, x22
    b5a8:	b.eq	b5b4 <grub_parser_split_cmdline+0x1a4>  // b.none
    b5ac:	ldurb	w1, [x0, #-1]
    b5b0:	cbnz	w1, b6a4 <grub_parser_split_cmdline+0x294>
    b5b4:	sub	x0, x0, x22
    b5b8:	bl	57d8 <grub_malloc>
    b5bc:	mov	x19, x0
    b5c0:	cbz	x0, b6d0 <grub_parser_split_cmdline+0x2c0>
    b5c4:	ldr	x2, [sp, #96]
    b5c8:	mov	x1, x22
    b5cc:	sub	x2, x2, x22
    b5d0:	bl	9a40 <grub_memmove>
    b5d4:	ldr	w0, [x21]
    b5d8:	add	w0, w0, #0x1
    b5dc:	sbfiz	x0, x0, #3, #32
    b5e0:	bl	57d8 <grub_malloc>
    b5e4:	str	x0, [x23]
    b5e8:	cbz	x0, b6f8 <grub_parser_split_cmdline+0x2e8>
    b5ec:	ldr	w5, [x21]
    b5f0:	mov	x4, #0x0                   	// #0
    b5f4:	str	x19, [sp, #96]
    b5f8:	cmp	w5, #0x0
    b5fc:	b.le	b63c <grub_parser_split_cmdline+0x22c>
    b600:	str	x19, [x0, x4, lsl #3]
    b604:	ldr	x3, [sp, #96]
    b608:	ldrb	w1, [x3]
    b60c:	cbz	w1, b628 <grub_parser_split_cmdline+0x218>
    b610:	add	x1, x3, #0x1
    b614:	nop
    b618:	str	x1, [sp, #96]
    b61c:	mov	x3, x1
    b620:	ldrb	w2, [x1], #1
    b624:	cbnz	w2, b618 <grub_parser_split_cmdline+0x208>
    b628:	add	x19, x3, #0x1
    b62c:	str	x19, [sp, #96]
    b630:	add	x4, x4, #0x1
    b634:	cmp	w5, w4
    b638:	b.gt	b600 <grub_parser_split_cmdline+0x1f0>
    b63c:	mov	w0, #0x0                   	// #0
    b640:	ldp	x29, x30, [sp]
    b644:	ldp	x19, x20, [sp, #16]
    b648:	ldp	x21, x22, [sp, #32]
    b64c:	ldp	x23, x24, [sp, #48]
    b650:	ldp	x25, x26, [sp, #64]
    b654:	add	sp, sp, #0x540
    b658:	ret
    b65c:	ldr	x0, [sp, #96]
    b660:	cmp	x0, x22
    b664:	b.eq	b4b8 <grub_parser_split_cmdline+0xa8>  // b.none
    b668:	ldurb	w1, [x0, #-1]
    b66c:	cbz	w1, b4b8 <grub_parser_split_cmdline+0xa8>
    b670:	add	x1, x0, #0x1
    b674:	str	x1, [sp, #96]
    b678:	strb	wzr, [x0]
    b67c:	ldr	x1, [sp, #104]
    b680:	ldr	w0, [x21]
    b684:	add	x2, x1, #0x1
    b688:	str	x2, [sp, #104]
    b68c:	add	w0, w0, #0x1
    b690:	str	w0, [x21]
    b694:	ldrb	w1, [x1, #1]
    b698:	cbz	w1, b5a0 <grub_parser_split_cmdline+0x190>
    b69c:	mov	w20, w19
    b6a0:	b	b460 <grub_parser_split_cmdline+0x50>
    b6a4:	add	x1, x0, #0x1
    b6a8:	str	x1, [sp, #96]
    b6ac:	strb	wzr, [x0]
    b6b0:	ldr	w1, [x21]
    b6b4:	ldr	x0, [sp, #96]
    b6b8:	add	w1, w1, #0x1
    b6bc:	str	w1, [x21]
    b6c0:	sub	x0, x0, x22
    b6c4:	bl	57d8 <grub_malloc>
    b6c8:	mov	x19, x0
    b6cc:	cbnz	x0, b5c4 <grub_parser_split_cmdline+0x1b4>
    b6d0:	adrp	x0, 0 <_start>
    b6d4:	ldp	x29, x30, [sp]
    b6d8:	ldr	x0, [x0]
    b6dc:	ldp	x19, x20, [sp, #16]
    b6e0:	ldr	w0, [x0]
    b6e4:	ldp	x21, x22, [sp, #32]
    b6e8:	ldp	x23, x24, [sp, #48]
    b6ec:	ldp	x25, x26, [sp, #64]
    b6f0:	add	sp, sp, #0x540
    b6f4:	ret
    b6f8:	mov	x0, x19
    b6fc:	bl	5828 <grub_free>
    b700:	b	b6d0 <grub_parser_split_cmdline+0x2c0>
    b704:	nop
	...

000000000000b710 <grub_parser_execute>:
    b710:	stp	x29, x30, [sp, #-64]!
    b714:	mov	x29, sp
    b718:	str	x0, [sp, #40]
    b71c:	cbz	x0, b768 <grub_parser_execute+0x58>
    b720:	adrp	x0, 0 <_start>
    b724:	str	x19, [sp, #16]
    b728:	ldr	x19, [x0]
    b72c:	nop
    b730:	add	x2, sp, #0x28
    b734:	mov	w1, #0x0                   	// #0
    b738:	add	x0, sp, #0x38
    b73c:	bl	b238 <grub_fatal+0xb0>
    b740:	ldr	x0, [sp, #56]
    b744:	add	x2, sp, #0x28
    b748:	mov	x1, x19
    b74c:	bl	bd98 <grub_rescue_parse_line>
    b750:	ldr	x0, [sp, #56]
    b754:	bl	5828 <grub_free>
    b758:	bl	87b0 <grub_print_error>
    b75c:	ldr	x0, [sp, #40]
    b760:	cbnz	x0, b730 <grub_parser_execute+0x20>
    b764:	ldr	x19, [sp, #16]
    b768:	adrp	x0, 0 <_start>
    b76c:	ldr	x0, [x0]
    b770:	ldr	w0, [x0]
    b774:	ldp	x29, x30, [sp], #64
    b778:	ret
    b77c:	nop
	...

000000000000b790 <grub_partition_probe>:
    b790:	stp	x29, x30, [sp, #-144]!
    b794:	mov	x29, sp
    b798:	stp	x21, x22, [sp, #32]
    b79c:	ldrb	w2, [x1]
    b7a0:	str	x1, [sp, #120]
    b7a4:	ldr	x22, [x0, #40]
    b7a8:	cbz	w2, b934 <grub_partition_probe+0x1a4>
    b7ac:	stp	x19, x20, [sp, #16]
    b7b0:	mov	x20, x0
    b7b4:	adrp	x0, 0 <_start>
    b7b8:	mov	x19, x1
    b7bc:	mov	x21, x22
    b7c0:	ldr	x0, [x0]
    b7c4:	stp	x23, x24, [sp, #48]
    b7c8:	adrp	x23, 0 <_start>
    b7cc:	stp	x25, x26, [sp, #64]
    b7d0:	stp	x27, x28, [sp, #80]
    b7d4:	str	x0, [sp, #104]
    b7d8:	mov	x26, x19
    b7dc:	b	b7f0 <grub_partition_probe+0x60>
    b7e0:	add	x26, x26, #0x1
    b7e4:	str	x26, [sp, #120]
    b7e8:	ldrb	w2, [x26]
    b7ec:	cbz	w2, b804 <grub_partition_probe+0x74>
    b7f0:	and	w2, w2, #0xffffffdf
    b7f4:	sub	w2, w2, #0x41
    b7f8:	and	w2, w2, #0xff
    b7fc:	cmp	w2, #0x19
    b800:	b.ls	b7e0 <grub_partition_probe+0x50>  // b.plast
    b804:	add	x1, sp, #0x78
    b808:	mov	x0, x26
    b80c:	mov	w2, #0x0                   	// #0
    b810:	bl	9ed8 <grub_strtoul>
    b814:	ldr	x1, [sp, #104]
    b818:	sub	w28, w0, #0x1
    b81c:	ldr	x25, [x1]
    b820:	cbz	x25, b88c <grub_partition_probe+0xfc>
    b824:	sub	x27, x26, x19
    b828:	cmp	x26, x19
    b82c:	b.eq	b850 <grub_partition_probe+0xc0>  // b.none
    b830:	ldr	x0, [x25, #16]
    b834:	mov	x2, x27
    b838:	mov	x1, x19
    b83c:	bl	9ba8 <grub_strncmp>
    b840:	cbnz	w0, b90c <grub_partition_probe+0x17c>
    b844:	ldr	x0, [x25, #16]
    b848:	ldrb	w0, [x0, x27]
    b84c:	cbnz	w0, b90c <grub_partition_probe+0x17c>
    b850:	adrp	x0, 0 <_start>
    b854:	str	w28, [sp, #128]
    b858:	ldr	x4, [x25, #24]
    b85c:	str	x21, [x20, #40]
    b860:	ldr	x1, [x0]
    b864:	str	xzr, [sp, #136]
    b868:	add	x2, sp, #0x80
    b86c:	mov	x0, x20
    b870:	blr	x4
    b874:	ldr	x24, [x23]
    b878:	ldr	w0, [x24]
    b87c:	cbnz	w0, b8f0 <grub_partition_probe+0x160>
    b880:	ldr	x0, [sp, #136]
    b884:	str	x22, [x20, #40]
    b888:	cbnz	x0, b8c0 <grub_partition_probe+0x130>
    b88c:	cbz	x21, b8a0 <grub_partition_probe+0x110>
    b890:	mov	x0, x21
    b894:	ldr	x21, [x21, #40]
    b898:	bl	5828 <grub_free>
    b89c:	cbnz	x21, b890 <grub_partition_probe+0x100>
    b8a0:	ldp	x19, x20, [sp, #16]
    b8a4:	mov	x0, #0x0                   	// #0
    b8a8:	ldp	x23, x24, [sp, #48]
    b8ac:	ldp	x25, x26, [sp, #64]
    b8b0:	ldp	x27, x28, [sp, #80]
    b8b4:	ldp	x21, x22, [sp, #32]
    b8b8:	ldp	x29, x30, [sp], #144
    b8bc:	ret
    b8c0:	ldr	x1, [sp, #120]
    b8c4:	str	x21, [x0, #40]
    b8c8:	cbz	x1, b918 <grub_partition_probe+0x188>
    b8cc:	ldrb	w2, [x1]
    b8d0:	cmp	w2, #0x2c
    b8d4:	b.ne	b918 <grub_partition_probe+0x188>  // b.any
    b8d8:	add	x19, x1, #0x1
    b8dc:	str	x19, [sp, #120]
    b8e0:	ldrb	w2, [x1, #1]
    b8e4:	cbz	w2, b918 <grub_partition_probe+0x188>
    b8e8:	mov	x21, x0
    b8ec:	b	b7d8 <grub_partition_probe+0x48>
    b8f0:	ldr	x0, [sp, #136]
    b8f4:	bl	5828 <grub_free>
    b8f8:	str	x22, [x20, #40]
    b8fc:	ldr	w0, [x24]
    b900:	cmp	w0, #0x13
    b904:	b.ne	b88c <grub_partition_probe+0xfc>  // b.any
    b908:	str	wzr, [x24]
    b90c:	ldr	x25, [x25]
    b910:	cbnz	x25, b828 <grub_partition_probe+0x98>
    b914:	b	b88c <grub_partition_probe+0xfc>
    b918:	ldp	x19, x20, [sp, #16]
    b91c:	ldp	x21, x22, [sp, #32]
    b920:	ldp	x23, x24, [sp, #48]
    b924:	ldp	x25, x26, [sp, #64]
    b928:	ldp	x27, x28, [sp, #80]
    b92c:	ldp	x29, x30, [sp], #144
    b930:	ret
    b934:	mov	x0, x22
    b938:	b	b8b4 <grub_partition_probe+0x124>
    b93c:	nop
	...

000000000000b958 <grub_partition_iterate>:
    b958:	stp	x29, x30, [sp, #-80]!
    b95c:	adrp	x3, 0 <_start>
    b960:	mov	x29, sp
    b964:	ldr	x3, [x3]
    b968:	stp	x19, x20, [sp, #16]
    b96c:	str	wzr, [sp, #56]
    b970:	ldr	x19, [x3]
    b974:	stp	x1, x2, [sp, #64]
    b978:	cbz	x19, b9d4 <grub_partition_iterate+0x7c>
    b97c:	mov	x20, x0
    b980:	adrp	x0, 0 <_start>
    b984:	stp	x21, x22, [sp, #32]
    b988:	adrp	x22, 0 <_start>
    b98c:	ldr	x21, [x0]
    b990:	b	b99c <grub_partition_iterate+0x44>
    b994:	ldr	x19, [x19]
    b998:	cbz	x19, b9c4 <grub_partition_iterate+0x6c>
    b99c:	ldr	x3, [x19, #24]
    b9a0:	add	x2, sp, #0x38
    b9a4:	mov	x1, x21
    b9a8:	mov	x0, x20
    b9ac:	blr	x3
    b9b0:	cbz	w0, b9bc <grub_partition_iterate+0x64>
    b9b4:	ldr	x0, [x22]
    b9b8:	str	wzr, [x0]
    b9bc:	ldr	w0, [sp, #56]
    b9c0:	cbz	w0, b994 <grub_partition_iterate+0x3c>
    b9c4:	ldp	x21, x22, [sp, #32]
    b9c8:	ldp	x19, x20, [sp, #16]
    b9cc:	ldp	x29, x30, [sp], #80
    b9d0:	ret
    b9d4:	mov	w0, #0x0                   	// #0
    b9d8:	b	b9c8 <grub_partition_iterate+0x70>
    b9dc:	nop
	...

000000000000b9f8 <grub_partition_get_name>:
    b9f8:	stp	x29, x30, [sp, #-112]!
    b9fc:	mov	x29, sp
    ba00:	stp	x23, x24, [sp, #48]
    ba04:	cbz	x0, bafc <grub_partition_get_name+0x104>
    ba08:	stp	x19, x20, [sp, #16]
    ba0c:	mov	x20, x0
    ba10:	mov	x19, x0
    ba14:	stp	x25, x26, [sp, #64]
    ba18:	mov	x25, #0x0                   	// #0
    ba1c:	nop
    ba20:	ldr	x0, [x19, #48]
    ba24:	ldr	x0, [x0, #16]
    ba28:	bl	af48 <grub_strlen>
    ba2c:	add	x0, x0, #0x1c
    ba30:	ldr	x19, [x19, #40]
    ba34:	add	x25, x25, x0
    ba38:	cbnz	x19, ba20 <grub_partition_get_name+0x28>
    ba3c:	add	x0, x25, #0x1
    ba40:	bl	57d8 <grub_malloc>
    ba44:	mov	x23, x0
    ba48:	cbz	x0, bb10 <grub_partition_get_name+0x118>
    ba4c:	adrp	x0, 0 <_start>
    ba50:	add	x24, x23, x25
    ba54:	stp	x21, x22, [sp, #32]
    ba58:	mov	x26, x24
    ba5c:	mov	w21, #0x2c                  	// #44
    ba60:	ldr	x22, [x0]
    ba64:	strb	wzr, [x23, x25]
    ba68:	ldr	w3, [x20]
    ba6c:	mov	x2, x22
    ba70:	mov	x1, #0x1b                  	// #27
    ba74:	add	x0, sp, #0x50
    ba78:	add	w3, w3, #0x1
    ba7c:	bl	b038 <grub_snprintf>
    ba80:	add	x0, sp, #0x50
    ba84:	bl	af48 <grub_strlen>
    ba88:	sub	x19, x26, x0
    ba8c:	mov	x2, x0
    ba90:	add	x1, sp, #0x50
    ba94:	mov	x0, x19
    ba98:	bl	9a40 <grub_memmove>
    ba9c:	ldr	x0, [x20, #48]
    baa0:	ldr	x0, [x0, #16]
    baa4:	bl	af48 <grub_strlen>
    baa8:	sub	x19, x19, x0
    baac:	ldr	x1, [x20, #48]
    bab0:	mov	x2, x0
    bab4:	mov	x0, x19
    bab8:	sub	x26, x19, #0x1
    babc:	ldr	x1, [x1, #16]
    bac0:	bl	9a40 <grub_memmove>
    bac4:	sturb	w21, [x19, #-1]
    bac8:	ldr	x20, [x20, #40]
    bacc:	cbnz	x20, ba68 <grub_partition_get_name+0x70>
    bad0:	sub	x2, x24, x26
    bad4:	mov	x1, x19
    bad8:	mov	x0, x23
    badc:	bl	9a40 <grub_memmove>
    bae0:	ldp	x19, x20, [sp, #16]
    bae4:	ldp	x21, x22, [sp, #32]
    bae8:	ldp	x25, x26, [sp, #64]
    baec:	mov	x0, x23
    baf0:	ldp	x23, x24, [sp, #48]
    baf4:	ldp	x29, x30, [sp], #112
    baf8:	ret
    bafc:	adrp	x0, 0 <_start>
    bb00:	ldr	x0, [x0]
    bb04:	bl	a598 <grub_strdup>
    bb08:	mov	x23, x0
    bb0c:	b	baec <grub_partition_get_name+0xf4>
    bb10:	ldp	x19, x20, [sp, #16]
    bb14:	ldp	x25, x26, [sp, #64]
    bb18:	b	baec <grub_partition_get_name+0xf4>
    bb1c:	nop
	...
    bb30:	cbz	x1, bb6c <grub_partition_get_name+0x174>
    bb34:	stp	x29, x30, [sp, #-32]!
    bb38:	mov	x29, sp
    bb3c:	stp	x19, x20, [sp, #16]
    bb40:	mov	x19, x2
    bb44:	mov	x20, x0
    bb48:	ldp	x2, x4, [x2, #8]
    bb4c:	mov	w0, #0x1                   	// #1
    bb50:	ldr	x3, [x1, #16]
    bb54:	add	x2, x2, x4
    bb58:	cmp	x2, x3
    bb5c:	b.hi	bb74 <grub_partition_get_name+0x17c>  // b.pmore
    bb60:	ldp	x19, x20, [sp, #16]
    bb64:	ldp	x29, x30, [sp], #32
    bb68:	ret
    bb6c:	mov	w0, #0x1                   	// #1
    bb70:	ret
    bb74:	mov	x0, x1
    bb78:	bl	b9f8 <grub_partition_get_name>
    bb7c:	ldr	x4, [x19, #48]
    bb80:	adrp	x6, 0 <_start>
    bb84:	adrp	x3, 0 <_start>
    bb88:	adrp	x2, 0 <_start>
    bb8c:	mov	x7, x0
    bb90:	ldr	w5, [x19]
    bb94:	ldr	x3, [x3]
    bb98:	mov	x19, x0
    bb9c:	ldr	x2, [x2]
    bba0:	add	w5, w5, #0x1
    bba4:	ldr	x0, [x6]
    bba8:	mov	w1, #0x30                  	// #48
    bbac:	ldr	x6, [x20]
    bbb0:	ldr	x4, [x4, #16]
    bbb4:	bl	ae68 <grub_real_dprintf>
    bbb8:	mov	x0, x19
    bbbc:	bl	5828 <grub_free>
    bbc0:	mov	w0, #0x0                   	// #0
    bbc4:	ldp	x19, x20, [sp, #16]
    bbc8:	ldp	x29, x30, [sp], #32
    bbcc:	ret
	...
    bbe8:	stp	x29, x30, [sp, #-48]!
    bbec:	mov	x29, sp
    bbf0:	ldr	w3, [x2]
    bbf4:	stp	x19, x20, [sp, #16]
    bbf8:	mov	x20, x2
    bbfc:	ldr	w2, [x1]
    bc00:	str	x21, [sp, #32]
    bc04:	mov	x19, x1
    bc08:	cmp	w3, w2
    bc0c:	b.eq	bc28 <grub_partition_get_name+0x230>  // b.none
    bc10:	mov	w21, #0x0                   	// #0
    bc14:	mov	w0, w21
    bc18:	ldp	x19, x20, [sp, #16]
    bc1c:	ldr	x21, [sp, #32]
    bc20:	ldp	x29, x30, [sp], #48
    bc24:	ret
    bc28:	mov	x2, x1
    bc2c:	ldr	x1, [x0, #40]
    bc30:	bl	bb30 <grub_partition_get_name+0x138>
    bc34:	cbz	w0, bc10 <grub_partition_get_name+0x218>
    bc38:	mov	x0, #0x40                  	// #64
    bc3c:	bl	57d8 <grub_malloc>
    bc40:	str	x0, [x20, #8]
    bc44:	mov	w21, #0x1                   	// #1
    bc48:	cbz	x0, bc14 <grub_partition_get_name+0x21c>
    bc4c:	mov	x1, x19
    bc50:	mov	x2, #0x40                  	// #64
    bc54:	bl	9a40 <grub_memmove>
    bc58:	mov	w0, w21
    bc5c:	ldp	x19, x20, [sp, #16]
    bc60:	ldr	x21, [sp, #32]
    bc64:	ldp	x29, x30, [sp], #48
    bc68:	ret
    bc6c:	nop
    bc70:	stp	x29, x30, [sp, #-128]!
    bc74:	mov	x29, sp
    bc78:	ldp	x4, x5, [x1]
    bc7c:	stp	x4, x5, [sp, #64]
    bc80:	ldp	x4, x5, [x1, #16]
    bc84:	stp	x4, x5, [sp, #80]
    bc88:	ldp	x4, x5, [x1, #32]
    bc8c:	stp	x4, x5, [sp, #96]
    bc90:	ldp	x4, x5, [x1, #48]
    bc94:	stp	x19, x20, [sp, #16]
    bc98:	mov	x19, x2
    bc9c:	mov	x2, x1
    bca0:	stp	x21, x22, [sp, #32]
    bca4:	mov	x22, x0
    bca8:	ldr	x1, [x0, #40]
    bcac:	stp	x4, x5, [sp, #112]
    bcb0:	bl	bb30 <grub_partition_get_name+0x138>
    bcb4:	cbz	w0, bd48 <grub_partition_get_name+0x350>
    bcb8:	ldp	x3, x2, [x19, #8]
    bcbc:	add	x1, sp, #0x40
    bcc0:	ldr	x4, [x22, #40]
    bcc4:	str	xzr, [x22, #40]
    bcc8:	str	x4, [sp, #104]
    bccc:	mov	x0, x22
    bcd0:	blr	x3
    bcd4:	cbnz	w0, bd58 <grub_partition_get_name+0x360>
    bcd8:	ldr	x0, [sp, #72]
    bcdc:	cbz	x0, bd74 <grub_partition_get_name+0x37c>
    bce0:	adrp	x0, 0 <_start>
    bce4:	add	x1, sp, #0x40
    bce8:	str	x1, [x22, #40]
    bcec:	ldr	x0, [x0]
    bcf0:	ldr	x20, [x0]
    bcf4:	cbz	x20, bd74 <grub_partition_get_name+0x37c>
    bcf8:	adrp	x0, 0 <_start>
    bcfc:	str	x23, [sp, #48]
    bd00:	adrp	x23, 0 <_start>
    bd04:	ldr	x21, [x0]
    bd08:	b	bd14 <grub_partition_get_name+0x31c>
    bd0c:	ldr	x20, [x20]
    bd10:	cbz	x20, bd3c <grub_partition_get_name+0x344>
    bd14:	ldr	x3, [x20, #24]
    bd18:	mov	x2, x19
    bd1c:	mov	x1, x21
    bd20:	mov	x0, x22
    bd24:	blr	x3
    bd28:	cbz	w0, bd34 <grub_partition_get_name+0x33c>
    bd2c:	ldr	x0, [x23]
    bd30:	str	wzr, [x0]
    bd34:	ldr	w0, [x19]
    bd38:	cbz	w0, bd0c <grub_partition_get_name+0x314>
    bd3c:	ldr	x23, [sp, #48]
    bd40:	ldr	x1, [sp, #104]
    bd44:	str	x1, [x22, #40]
    bd48:	ldp	x19, x20, [sp, #16]
    bd4c:	ldp	x21, x22, [sp, #32]
    bd50:	ldp	x29, x30, [sp], #128
    bd54:	ret
    bd58:	mov	w1, #0x1                   	// #1
    bd5c:	str	w1, [x19]
    bd60:	mov	w0, w1
    bd64:	ldp	x19, x20, [sp, #16]
    bd68:	ldp	x21, x22, [sp, #32]
    bd6c:	ldp	x29, x30, [sp], #128
    bd70:	ret
    bd74:	ldr	w0, [x19]
    bd78:	b	bd40 <grub_partition_get_name+0x348>
    bd7c:	nop
	...

000000000000bd98 <grub_rescue_parse_line>:
    bd98:	stp	x29, x30, [sp, #-48]!
    bd9c:	mov	x29, sp
    bda0:	add	x4, sp, #0x28
    bda4:	add	x3, sp, #0x24
    bda8:	bl	b410 <grub_parser_split_cmdline>
    bdac:	cbnz	w0, be04 <grub_rescue_parse_line+0x6c>
    bdb0:	ldr	w1, [sp, #36]
    bdb4:	cmp	w1, #0x0
    bdb8:	b.lt	be04 <grub_rescue_parse_line+0x6c>  // b.tstop
    bdbc:	b.eq	be10 <grub_rescue_parse_line+0x78>  // b.none
    bdc0:	ldr	x0, [sp, #40]
    bdc4:	stp	x19, x20, [sp, #16]
    bdc8:	cmp	w1, #0x1
    bdcc:	ldr	x19, [x0]
    bdd0:	b.eq	be74 <grub_rescue_parse_line+0xdc>  // b.none
    bdd4:	ldrb	w0, [x19]
    bdd8:	cbnz	w0, be18 <grub_rescue_parse_line+0x80>
    bddc:	mov	x0, x19
    bde0:	bl	5828 <grub_free>
    bde4:	ldr	x0, [sp, #40]
    bde8:	bl	5828 <grub_free>
    bdec:	adrp	x0, 0 <_start>
    bdf0:	ldp	x19, x20, [sp, #16]
    bdf4:	ldr	x0, [x0]
    bdf8:	ldr	w0, [x0]
    bdfc:	ldp	x29, x30, [sp], #48
    be00:	ret
    be04:	adrp	x0, 0 <_start>
    be08:	ldr	x0, [x0]
    be0c:	ldr	w0, [x0]
    be10:	ldp	x29, x30, [sp], #48
    be14:	ret
    be18:	adrp	x0, 0 <_start>
    be1c:	mov	x1, x19
    be20:	ldr	x20, [x0]
    be24:	ldr	x0, [x20]
    be28:	bl	9288 <grub_named_list_find>
    be2c:	cbz	x0, bebc <grub_rescue_parse_line+0x124>
    be30:	ldr	x3, [x0, #32]
    be34:	ldr	x2, [sp, #40]
    be38:	ldr	w1, [sp, #36]
    be3c:	add	x2, x2, #0x8
    be40:	sub	w1, w1, #0x1
    be44:	blr	x3
    be48:	ldr	x0, [sp, #40]
    be4c:	ldr	x19, [x0]
    be50:	mov	x0, x19
    be54:	bl	5828 <grub_free>
    be58:	ldr	x0, [sp, #40]
    be5c:	bl	5828 <grub_free>
    be60:	adrp	x0, 0 <_start>
    be64:	ldp	x19, x20, [sp, #16]
    be68:	ldr	x0, [x0]
    be6c:	ldr	w0, [x0]
    be70:	b	bdfc <grub_rescue_parse_line+0x64>
    be74:	mov	x0, x19
    be78:	mov	w1, #0x3d                  	// #61
    be7c:	bl	9c00 <grub_strchr>
    be80:	mov	x19, x0
    be84:	cbnz	x0, be94 <grub_rescue_parse_line+0xfc>
    be88:	ldr	x0, [sp, #40]
    be8c:	ldr	x19, [x0]
    be90:	b	bdd4 <grub_rescue_parse_line+0x3c>
    be94:	mov	x1, x0
    be98:	strb	wzr, [x1], #1
    be9c:	ldr	x0, [sp, #40]
    bea0:	ldr	x0, [x0]
    bea4:	bl	81f8 <grub_env_set>
    bea8:	mov	w0, #0x3d                  	// #61
    beac:	strb	w0, [x19]
    beb0:	ldr	x0, [sp, #40]
    beb4:	ldr	x19, [x0]
    beb8:	b	bddc <grub_rescue_parse_line+0x44>
    bebc:	adrp	x0, 0 <_start>
    bec0:	mov	x1, x19
    bec4:	ldr	x0, [x0]
    bec8:	bl	adf8 <grub_printf_>
    becc:	adrp	x1, 0 <_start>
    bed0:	ldr	x0, [x20]
    bed4:	ldr	x1, [x1]
    bed8:	bl	9288 <grub_named_list_find>
    bedc:	cbz	x0, beec <grub_rescue_parse_line+0x154>
    bee0:	adrp	x0, 0 <_start>
    bee4:	ldr	x0, [x0]
    bee8:	bl	ada8 <grub_err_printf>
    beec:	ldr	x0, [sp, #40]
    bef0:	ldr	x19, [x0]
    bef4:	b	bddc <grub_rescue_parse_line+0x44>
	...
    bf20:	stp	x29, x30, [sp, #-80]!
    bf24:	mov	x29, sp
    bf28:	stp	x19, x20, [sp, #16]
    bf2c:	stp	x21, x22, [sp, #32]
    bf30:	mov	x22, x0
    bf34:	str	x23, [sp, #48]
    bf38:	cbnz	w1, c03c <grub_rescue_parse_line+0x2a4>
    bf3c:	adrp	x0, 0 <_start>
    bf40:	ldr	x0, [x0]
    bf44:	bl	ada8 <grub_err_printf>
    bf48:	adrp	x0, 0 <_start>
    bf4c:	mov	w1, #0x0                   	// #0
    bf50:	mov	x2, #0x100                 	// #256
    bf54:	mov	w23, #0x2008                	// #8200
    bf58:	ldr	x20, [x0]
    bf5c:	mov	w19, #0x0                   	// #0
    bf60:	movk	w23, #0x8, lsl #16
    bf64:	mov	x0, x20
    bf68:	bl	a670 <grub_memset>
    bf6c:	adrp	x0, 0 <_start>
    bf70:	ldr	x21, [x0]
    bf74:	bl	c2c0 <grub_getkey>
    bf78:	cmp	w0, #0xa
    bf7c:	sub	w1, w0, #0x20
    bf80:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    bf84:	b.eq	bfd4 <grub_rescue_parse_line+0x23c>  // b.none
    bf88:	cmp	w1, #0x5e
    bf8c:	b.hi	c010 <grub_rescue_parse_line+0x278>  // b.pmore
    bf90:	and	w1, w0, #0xff
    bf94:	add	w2, w19, #0x1
    bf98:	cmp	w19, #0xfe
    bf9c:	b.gt	bfbc <grub_rescue_parse_line+0x224>
    bfa0:	ldr	x3, [x21]
    bfa4:	strb	w1, [x20, w19, sxtw]
    bfa8:	strb	w1, [sp, #72]
    bfac:	add	x0, sp, #0x48
    bfb0:	strb	wzr, [sp, #73]
    bfb4:	mov	w19, w2
    bfb8:	blr	x3
    bfbc:	bl	c318 <grub_refresh>
    bfc0:	bl	c2c0 <grub_getkey>
    bfc4:	cmp	w0, #0xa
    bfc8:	sub	w1, w0, #0x20
    bfcc:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    bfd0:	b.ne	bf88 <grub_rescue_parse_line+0x1f0>  // b.any
    bfd4:	adrp	x0, 0 <_start>
    bfd8:	ldr	x1, [x21]
    bfdc:	ldr	x0, [x0]
    bfe0:	blr	x1
    bfe4:	bl	c318 <grub_refresh>
    bfe8:	mov	x0, x20
    bfec:	bl	a598 <grub_strdup>
    bff0:	mov	x1, x0
    bff4:	mov	w0, #0x0                   	// #0
    bff8:	ldp	x19, x20, [sp, #16]
    bffc:	ldr	x23, [sp, #48]
    c000:	str	x1, [x22]
    c004:	ldp	x21, x22, [sp, #32]
    c008:	ldp	x29, x30, [sp], #80
    c00c:	ret
    c010:	cmp	w0, #0x8
    c014:	b.ne	bfbc <grub_rescue_parse_line+0x224>  // b.any
    c018:	cbz	w19, bfbc <grub_rescue_parse_line+0x224>
    c01c:	sub	w19, w19, #0x1
    c020:	add	x0, sp, #0x48
    c024:	ldr	x1, [x21]
    c028:	str	w23, [sp, #72]
    c02c:	strb	wzr, [x20, w19, sxtw]
    c030:	blr	x1
    c034:	bl	c318 <grub_refresh>
    c038:	b	bfc0 <grub_rescue_parse_line+0x228>
    c03c:	adrp	x0, 0 <_start>
    c040:	ldr	x0, [x0]
    c044:	b	bf44 <grub_rescue_parse_line+0x1ac>
	...

000000000000c070 <grub_rescue_run>:
    c070:	stp	x29, x30, [sp, #-48]!
    c074:	adrp	x0, 0 <_start>
    c078:	mov	x29, sp
    c07c:	ldr	x0, [x0]
    c080:	stp	x19, x20, [sp, #16]
    c084:	bl	ada8 <grub_err_printf>
    c088:	adrp	x1, 0 <_start>
    c08c:	adrp	x0, 0 <_start>
    c090:	ldr	x19, [x1]
    c094:	ldr	x20, [x0]
    c098:	bl	87b0 <grub_print_error>
    c09c:	add	x0, sp, #0x28
    c0a0:	mov	x2, #0x0                   	// #0
    c0a4:	mov	w1, #0x0                   	// #0
    c0a8:	str	wzr, [x19]
    c0ac:	bl	bf20 <grub_rescue_parse_line+0x188>
    c0b0:	ldr	x0, [sp, #40]
    c0b4:	cbz	x0, c098 <grub_rescue_run+0x28>
    c0b8:	ldrb	w1, [x0]
    c0bc:	cbz	w1, c098 <grub_rescue_run+0x28>
    c0c0:	mov	x1, x20
    c0c4:	mov	x2, #0x0                   	// #0
    c0c8:	bl	bd98 <grub_rescue_parse_line>
    c0cc:	ldr	x0, [sp, #40]
    c0d0:	bl	5828 <grub_free>
    c0d4:	b	c098 <grub_rescue_run+0x28>
	...
    c0f0:	stp	x29, x30, [sp, #-64]!
    c0f4:	mov	w2, #0x0                   	// #0
    c0f8:	mov	x29, sp
    c0fc:	stp	x19, x20, [sp, #16]
    c100:	mov	w20, w0
    c104:	mov	w0, #0x1                   	// #1
    c108:	stp	xzr, xzr, [sp, #32]
    c10c:	bfxil	w2, w20, #0, #23
    c110:	cmp	w20, #0x9
    c114:	str	w2, [sp, #32]
    c118:	mov	x19, x1
    c11c:	strb	w0, [sp, #40]
    c120:	stp	xzr, xzr, [sp, #48]
    c124:	b.eq	c14c <grub_rescue_run+0xdc>  // b.none
    c128:	ldr	x2, [x19, #40]
    c12c:	add	x1, sp, #0x20
    c130:	mov	x0, x19
    c134:	blr	x2
    c138:	cmp	w20, #0xa
    c13c:	b.eq	c188 <grub_rescue_run+0x118>  // b.none
    c140:	ldp	x19, x20, [sp, #16]
    c144:	ldp	x29, x30, [sp], #64
    c148:	ret
    c14c:	ldr	x1, [x1, #64]
    c150:	cbz	x1, c1a0 <grub_rescue_run+0x130>
    c154:	mov	x0, x19
    c158:	blr	x1
    c15c:	mvn	w20, w0
    c160:	and	w20, w20, #0x7
    c164:	sub	w20, w20, #0x1
    c168:	mov	x1, x19
    c16c:	mov	w0, #0x20                  	// #32
    c170:	bl	c0f0 <grub_rescue_run+0x80>
    c174:	cmn	w20, #0x1
    c178:	b.ne	c164 <grub_rescue_run+0xf4>  // b.any
    c17c:	ldp	x19, x20, [sp, #16]
    c180:	ldp	x29, x30, [sp], #64
    c184:	ret
    c188:	mov	x1, x19
    c18c:	mov	w0, #0xd                   	// #13
    c190:	bl	c0f0 <grub_rescue_run+0x80>
    c194:	ldp	x19, x20, [sp, #16]
    c198:	ldp	x29, x30, [sp], #64
    c19c:	ret
    c1a0:	ldr	x2, [x19, #40]
    c1a4:	mov	x0, x19
    c1a8:	add	x1, sp, #0x20
    c1ac:	blr	x2
    c1b0:	ldp	x19, x20, [sp, #16]
    c1b4:	ldp	x29, x30, [sp], #64
    c1b8:	ret
    c1bc:	nop
    c1c0:	stp	x29, x30, [sp, #-64]!
    c1c4:	mov	x29, sp
    c1c8:	stp	x19, x20, [sp, #16]
    c1cc:	ldrb	w20, [x0]
    c1d0:	cbz	w20, c224 <grub_rescue_run+0x1b4>
    c1d4:	stp	x21, x22, [sp, #32]
    c1d8:	mov	x21, x0
    c1dc:	adrp	x0, 0 <_start>
    c1e0:	str	x23, [sp, #48]
    c1e4:	mov	w23, #0x3f                  	// #63
    c1e8:	ldr	x22, [x0]
    c1ec:	nop
    c1f0:	cmp	w20, #0x80
    c1f4:	ldr	x19, [x22]
    c1f8:	csel	w20, w20, w23, cc  // cc = lo, ul, last
    c1fc:	cbz	x19, c214 <grub_rescue_run+0x1a4>
    c200:	mov	x1, x19
    c204:	mov	w0, w20
    c208:	bl	c0f0 <grub_rescue_run+0x80>
    c20c:	ldr	x19, [x19]
    c210:	cbnz	x19, c200 <grub_rescue_run+0x190>
    c214:	ldrb	w20, [x21, #1]!
    c218:	cbnz	w20, c1f0 <grub_rescue_run+0x180>
    c21c:	ldp	x21, x22, [sp, #32]
    c220:	ldr	x23, [sp, #48]
    c224:	ldp	x19, x20, [sp, #16]
    c228:	ldp	x29, x30, [sp], #64
    c22c:	ret
	...

000000000000c238 <grub_getkey_noblock>:
    c238:	stp	x29, x30, [sp, #-32]!
    c23c:	adrp	x0, 0 <_start>
    c240:	mov	x29, sp
    c244:	str	x19, [sp, #16]
    c248:	ldr	x19, [x0]
    c24c:	ldr	x1, [x19]
    c250:	cbz	x1, c25c <grub_getkey_noblock+0x24>
    c254:	mov	w0, #0x0                   	// #0
    c258:	blr	x1
    c25c:	ldr	x0, [x19, #8]
    c260:	cbz	x0, c268 <grub_getkey_noblock+0x30>
    c264:	blr	x0
    c268:	adrp	x0, 0 <_start>
    c26c:	ldr	x0, [x0]
    c270:	ldr	x19, [x0]
    c274:	cbnz	x19, c284 <grub_getkey_noblock+0x4c>
    c278:	b	c2a0 <grub_getkey_noblock+0x68>
    c27c:	ldr	x19, [x19]
    c280:	cbz	x19, c2a0 <grub_getkey_noblock+0x68>
    c284:	ldr	x1, [x19, #40]
    c288:	mov	x0, x19
    c28c:	blr	x1
    c290:	cbz	w0, c27c <grub_getkey_noblock+0x44>
    c294:	ldr	x19, [sp, #16]
    c298:	ldp	x29, x30, [sp], #32
    c29c:	ret
    c2a0:	mov	w0, #0x0                   	// #0
    c2a4:	ldr	x19, [sp, #16]
    c2a8:	ldp	x29, x30, [sp], #32
    c2ac:	ret
	...

000000000000c2c0 <grub_getkey>:
    c2c0:	stp	x29, x30, [sp, #-32]!
    c2c4:	adrp	x0, 0 <_start>
    c2c8:	mov	x29, sp
    c2cc:	ldr	x0, [x0]
    c2d0:	str	x19, [sp, #16]
    c2d4:	ldr	x19, [x0]
    c2d8:	cbz	x19, c2f8 <grub_getkey+0x38>
    c2dc:	nop
    c2e0:	ldr	x1, [x19, #104]
    c2e4:	mov	x0, x19
    c2e8:	cbz	x1, c2f0 <grub_getkey+0x30>
    c2ec:	blr	x1
    c2f0:	ldr	x19, [x19]
    c2f4:	cbnz	x19, c2e0 <grub_getkey+0x20>
    c2f8:	bl	c238 <grub_getkey_noblock>
    c2fc:	cbz	w0, c2f8 <grub_getkey+0x38>
    c300:	ldr	x19, [sp, #16]
    c304:	ldp	x29, x30, [sp], #32
    c308:	ret
    c30c:	nop
	...

000000000000c318 <grub_refresh>:
    c318:	stp	x29, x30, [sp, #-32]!
    c31c:	adrp	x0, 0 <_start>
    c320:	mov	x29, sp
    c324:	ldr	x0, [x0]
    c328:	str	x19, [sp, #16]
    c32c:	ldr	x19, [x0]
    c330:	cbz	x19, c350 <grub_refresh+0x38>
    c334:	nop
    c338:	ldr	x1, [x19, #104]
    c33c:	mov	x0, x19
    c340:	cbz	x1, c348 <grub_refresh+0x30>
    c344:	blr	x1
    c348:	ldr	x19, [x19]
    c34c:	cbnz	x19, c338 <grub_refresh+0x20>
    c350:	ldr	x19, [sp, #16]
    c354:	ldp	x29, x30, [sp], #32
    c358:	ret
    c35c:	nop
	...

000000000000c368 <grub_register_exported_symbols>:
    c368:	stp	x29, x30, [sp, #-32]!
    c36c:	adrp	x0, 0 <_start>
    c370:	mov	x29, sp
    c374:	str	x19, [sp, #16]
    c378:	ldr	x19, [x0]
    c37c:	ldr	x0, [x19]
    c380:	cbz	x0, c3a0 <grub_register_exported_symbols+0x38>
    c384:	nop
    c388:	ldr	w2, [x19, #16]
    c38c:	mov	x3, #0x0                   	// #0
    c390:	ldr	x1, [x19, #8]
    c394:	bl	71f0 <grub_dl_register_symbol>
    c398:	ldr	x0, [x19, #24]!
    c39c:	cbnz	x0, c388 <grub_register_exported_symbols+0x20>
    c3a0:	ldr	x19, [sp, #16]
    c3a4:	ldp	x29, x30, [sp], #32
    c3a8:	ret
    c3ac:	nop
	...
