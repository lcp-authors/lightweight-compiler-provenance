
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//30-systemd-environment-d-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400a48 <_init>:
  400a48:	stp	x29, x30, [sp, #-16]!
  400a4c:	mov	x29, sp
  400a50:	bl	400c20 <call_weak_fn>
  400a54:	ldp	x29, x30, [sp], #16
  400a58:	ret

Disassembly of section .plt:

0000000000400a60 <__libc_start_main@plt-0x20>:
  400a60:	stp	x16, x30, [sp, #-16]!
  400a64:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400a68:	ldr	x17, [x16, #3920]
  400a6c:	add	x16, x16, #0xf50
  400a70:	br	x17
  400a74:	nop
  400a78:	nop
  400a7c:	nop

0000000000400a80 <__libc_start_main@plt>:
  400a80:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400a84:	ldr	x17, [x16, #3928]
  400a88:	add	x16, x16, #0xf58
  400a8c:	br	x17

0000000000400a90 <abort@plt>:
  400a90:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400a94:	ldr	x17, [x16, #3936]
  400a98:	add	x16, x16, #0xf60
  400a9c:	br	x17

0000000000400aa0 <__gmon_start__@plt>:
  400aa0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400aa4:	ldr	x17, [x16, #3944]
  400aa8:	add	x16, x16, #0xf68
  400aac:	br	x17

0000000000400ab0 <log_parse_environment_realm@plt>:
  400ab0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400ab4:	ldr	x17, [x16, #3952]
  400ab8:	add	x16, x16, #0xf70
  400abc:	br	x17

0000000000400ac0 <log_open@plt>:
  400ac0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400ac4:	ldr	x17, [x16, #3960]
  400ac8:	add	x16, x16, #0xf78
  400acc:	br	x17

0000000000400ad0 <log_get_max_level_realm@plt>:
  400ad0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400ad4:	ldr	x17, [x16, #3968]
  400ad8:	add	x16, x16, #0xf80
  400adc:	br	x17

0000000000400ae0 <log_internal_realm@plt>:
  400ae0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400ae4:	ldr	x17, [x16, #3976]
  400ae8:	add	x16, x16, #0xf88
  400aec:	br	x17

0000000000400af0 <abs@plt>:
  400af0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400af4:	ldr	x17, [x16, #3984]
  400af8:	add	x16, x16, #0xf90
  400afc:	br	x17

0000000000400b00 <conf_files_list_strv@plt>:
  400b00:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b04:	ldr	x17, [x16, #3992]
  400b08:	add	x16, x16, #0xf98
  400b0c:	br	x17

0000000000400b10 <merge_env_file@plt>:
  400b10:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b14:	ldr	x17, [x16, #4000]
  400b18:	add	x16, x16, #0xfa0
  400b1c:	br	x17

0000000000400b20 <strchr@plt>:
  400b20:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b24:	ldr	x17, [x16, #4008]
  400b28:	add	x16, x16, #0xfa8
  400b2c:	br	x17

0000000000400b30 <log_assert_failed_realm@plt>:
  400b30:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b34:	ldr	x17, [x16, #4016]
  400b38:	add	x16, x16, #0xfb0
  400b3c:	br	x17

0000000000400b40 <shell_maybe_quote@plt>:
  400b40:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b44:	ldr	x17, [x16, #4024]
  400b48:	add	x16, x16, #0xfb8
  400b4c:	br	x17

0000000000400b50 <log_oom_internal@plt>:
  400b50:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b54:	ldr	x17, [x16, #4032]
  400b58:	add	x16, x16, #0xfc0
  400b5c:	br	x17

0000000000400b60 <printf@plt>:
  400b60:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b64:	ldr	x17, [x16, #4040]
  400b68:	add	x16, x16, #0xfc8
  400b6c:	br	x17

0000000000400b70 <strv_free@plt>:
  400b70:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b74:	ldr	x17, [x16, #4048]
  400b78:	add	x16, x16, #0xfd0
  400b7c:	br	x17

0000000000400b80 <strv_new_internal@plt>:
  400b80:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b84:	ldr	x17, [x16, #4056]
  400b88:	add	x16, x16, #0xfd8
  400b8c:	br	x17

0000000000400b90 <sd_path_home@plt>:
  400b90:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400b94:	ldr	x17, [x16, #4064]
  400b98:	add	x16, x16, #0xfe0
  400b9c:	br	x17

0000000000400ba0 <strv_extend_front@plt>:
  400ba0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400ba4:	ldr	x17, [x16, #4072]
  400ba8:	add	x16, x16, #0xfe8
  400bac:	br	x17

0000000000400bb0 <free@plt>:
  400bb0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400bb4:	ldr	x17, [x16, #4080]
  400bb8:	add	x16, x16, #0xff0
  400bbc:	br	x17

0000000000400bc0 <strv_join_prefix@plt>:
  400bc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d7a0>
  400bc4:	ldr	x17, [x16, #4088]
  400bc8:	add	x16, x16, #0xff8
  400bcc:	br	x17

Disassembly of section .text:

0000000000400bd0 <_start>:
  400bd0:	mov	x29, #0x0                   	// #0
  400bd4:	mov	x30, #0x0                   	// #0
  400bd8:	mov	x5, x0
  400bdc:	ldr	x1, [sp]
  400be0:	add	x2, sp, #0x8
  400be4:	mov	x6, sp
  400be8:	movz	x0, #0x0, lsl #48
  400bec:	movk	x0, #0x0, lsl #32
  400bf0:	movk	x0, #0x40, lsl #16
  400bf4:	movk	x0, #0xd98
  400bf8:	movz	x3, #0x0, lsl #48
  400bfc:	movk	x3, #0x0, lsl #32
  400c00:	movk	x3, #0x40, lsl #16
  400c04:	movk	x3, #0x1540
  400c08:	movz	x4, #0x0, lsl #48
  400c0c:	movk	x4, #0x0, lsl #32
  400c10:	movk	x4, #0x40, lsl #16
  400c14:	movk	x4, #0x15c0
  400c18:	bl	400a80 <__libc_start_main@plt>
  400c1c:	bl	400a90 <abort@plt>

0000000000400c20 <call_weak_fn>:
  400c20:	adrp	x0, 41f000 <__FRAME_END__+0x1d7a0>
  400c24:	ldr	x0, [x0, #3896]
  400c28:	cbz	x0, 400c30 <call_weak_fn+0x10>
  400c2c:	b	400aa0 <__gmon_start__@plt>
  400c30:	ret

0000000000400c34 <deregister_tm_clones>:
  400c34:	stp	x29, x30, [sp, #-32]!
  400c38:	mov	x29, sp
  400c3c:	adrp	x0, 420000 <completed.8445>
  400c40:	add	x0, x0, #0x0
  400c44:	str	x0, [sp, #24]
  400c48:	ldr	x0, [sp, #24]
  400c4c:	str	x0, [sp, #24]
  400c50:	ldr	x1, [sp, #24]
  400c54:	adrp	x0, 420000 <completed.8445>
  400c58:	add	x0, x0, #0x0
  400c5c:	cmp	x1, x0
  400c60:	b.eq	400c9c <deregister_tm_clones+0x68>  // b.none
  400c64:	adrp	x0, 401000 <load_and_print+0xe4>
  400c68:	add	x0, x0, #0x5d8
  400c6c:	ldr	x0, [x0]
  400c70:	str	x0, [sp, #16]
  400c74:	ldr	x0, [sp, #16]
  400c78:	str	x0, [sp, #16]
  400c7c:	ldr	x0, [sp, #16]
  400c80:	cmp	x0, #0x0
  400c84:	b.eq	400ca0 <deregister_tm_clones+0x6c>  // b.none
  400c88:	ldr	x1, [sp, #16]
  400c8c:	adrp	x0, 420000 <completed.8445>
  400c90:	add	x0, x0, #0x0
  400c94:	blr	x1
  400c98:	b	400ca0 <deregister_tm_clones+0x6c>
  400c9c:	nop
  400ca0:	ldp	x29, x30, [sp], #32
  400ca4:	ret

0000000000400ca8 <register_tm_clones>:
  400ca8:	stp	x29, x30, [sp, #-48]!
  400cac:	mov	x29, sp
  400cb0:	adrp	x0, 420000 <completed.8445>
  400cb4:	add	x0, x0, #0x0
  400cb8:	str	x0, [sp, #40]
  400cbc:	ldr	x0, [sp, #40]
  400cc0:	str	x0, [sp, #40]
  400cc4:	ldr	x1, [sp, #40]
  400cc8:	adrp	x0, 420000 <completed.8445>
  400ccc:	add	x0, x0, #0x0
  400cd0:	sub	x0, x1, x0
  400cd4:	asr	x0, x0, #3
  400cd8:	lsr	x1, x0, #63
  400cdc:	add	x0, x1, x0
  400ce0:	asr	x0, x0, #1
  400ce4:	str	x0, [sp, #32]
  400ce8:	ldr	x0, [sp, #32]
  400cec:	cmp	x0, #0x0
  400cf0:	b.eq	400d30 <register_tm_clones+0x88>  // b.none
  400cf4:	adrp	x0, 401000 <load_and_print+0xe4>
  400cf8:	add	x0, x0, #0x5e0
  400cfc:	ldr	x0, [x0]
  400d00:	str	x0, [sp, #24]
  400d04:	ldr	x0, [sp, #24]
  400d08:	str	x0, [sp, #24]
  400d0c:	ldr	x0, [sp, #24]
  400d10:	cmp	x0, #0x0
  400d14:	b.eq	400d34 <register_tm_clones+0x8c>  // b.none
  400d18:	ldr	x2, [sp, #24]
  400d1c:	ldr	x1, [sp, #32]
  400d20:	adrp	x0, 420000 <completed.8445>
  400d24:	add	x0, x0, #0x0
  400d28:	blr	x2
  400d2c:	b	400d34 <register_tm_clones+0x8c>
  400d30:	nop
  400d34:	ldp	x29, x30, [sp], #48
  400d38:	ret

0000000000400d3c <__do_global_dtors_aux>:
  400d3c:	stp	x29, x30, [sp, #-16]!
  400d40:	mov	x29, sp
  400d44:	adrp	x0, 420000 <completed.8445>
  400d48:	add	x0, x0, #0x0
  400d4c:	ldrb	w0, [x0]
  400d50:	and	x0, x0, #0xff
  400d54:	cmp	x0, #0x0
  400d58:	b.ne	400d74 <__do_global_dtors_aux+0x38>  // b.any
  400d5c:	bl	400c34 <deregister_tm_clones>
  400d60:	adrp	x0, 420000 <completed.8445>
  400d64:	add	x0, x0, #0x0
  400d68:	mov	w1, #0x1                   	// #1
  400d6c:	strb	w1, [x0]
  400d70:	b	400d78 <__do_global_dtors_aux+0x3c>
  400d74:	nop
  400d78:	ldp	x29, x30, [sp], #16
  400d7c:	ret

0000000000400d80 <frame_dummy>:
  400d80:	stp	x29, x30, [sp, #-16]!
  400d84:	mov	x29, sp
  400d88:	bl	400ca8 <register_tm_clones>
  400d8c:	nop
  400d90:	ldp	x29, x30, [sp], #16
  400d94:	ret

0000000000400d98 <main>:
  400d98:	sub	sp, sp, #0x60
  400d9c:	stp	x29, x30, [sp, #80]
  400da0:	add	x29, sp, #0x50
  400da4:	mov	w8, wzr
  400da8:	adrp	x9, 401000 <load_and_print+0xe4>
  400dac:	add	x9, x9, #0x5e8
  400db0:	add	x9, x9, #0x3
  400db4:	stur	wzr, [x29, #-4]
  400db8:	stur	w0, [x29, #-8]
  400dbc:	stur	x1, [x29, #-16]
  400dc0:	mov	w0, w8
  400dc4:	str	x9, [sp, #16]
  400dc8:	bl	400ab0 <log_parse_environment_realm@plt>
  400dcc:	bl	400ac0 <log_open@plt>
  400dd0:	ldur	w8, [x29, #-8]
  400dd4:	cmp	w8, #0x1
  400dd8:	b.le	400e60 <main+0xc8>
  400ddc:	mov	w8, #0x3                   	// #3
  400de0:	stur	w8, [x29, #-24]
  400de4:	stur	wzr, [x29, #-28]
  400de8:	stur	wzr, [x29, #-32]
  400dec:	ldur	w0, [x29, #-32]
  400df0:	bl	400ad0 <log_get_max_level_realm@plt>
  400df4:	ldur	w8, [x29, #-24]
  400df8:	and	w8, w8, #0x7
  400dfc:	cmp	w0, w8
  400e00:	b.lt	400e38 <main+0xa0>  // b.tstop
  400e04:	ldur	w8, [x29, #-32]
  400e08:	ldur	w9, [x29, #-24]
  400e0c:	orr	w0, w9, w8, lsl #10
  400e10:	ldur	w1, [x29, #-28]
  400e14:	ldr	x2, [sp, #16]
  400e18:	mov	w3, #0x5a                  	// #90
  400e1c:	adrp	x4, 401000 <load_and_print+0xe4>
  400e20:	add	x4, x4, #0x621
  400e24:	adrp	x5, 401000 <load_and_print+0xe4>
  400e28:	add	x5, x5, #0x626
  400e2c:	bl	400ae0 <log_internal_realm@plt>
  400e30:	str	w0, [sp, #12]
  400e34:	b	400e4c <main+0xb4>
  400e38:	ldur	w0, [x29, #-28]
  400e3c:	bl	400af0 <abs@plt>
  400e40:	mov	w8, wzr
  400e44:	subs	w8, w8, w0, uxtb
  400e48:	str	w8, [sp, #12]
  400e4c:	ldr	w8, [sp, #12]
  400e50:	stur	w8, [x29, #-36]
  400e54:	mov	w8, #0x1                   	// #1
  400e58:	stur	w8, [x29, #-4]
  400e5c:	b	400f0c <main+0x174>
  400e60:	bl	400f1c <load_and_print>
  400e64:	stur	w0, [x29, #-20]
  400e68:	ldur	w8, [x29, #-20]
  400e6c:	cmp	w8, #0x0
  400e70:	cset	w8, ge  // ge = tcont
  400e74:	tbnz	w8, #0, 400ef4 <main+0x15c>
  400e78:	mov	w8, #0x3                   	// #3
  400e7c:	str	w8, [sp, #40]
  400e80:	ldur	w8, [x29, #-20]
  400e84:	str	w8, [sp, #36]
  400e88:	str	wzr, [sp, #32]
  400e8c:	ldr	w0, [sp, #32]
  400e90:	bl	400ad0 <log_get_max_level_realm@plt>
  400e94:	ldr	w8, [sp, #40]
  400e98:	and	w8, w8, #0x7
  400e9c:	cmp	w0, w8
  400ea0:	b.lt	400ed8 <main+0x140>  // b.tstop
  400ea4:	ldr	w8, [sp, #32]
  400ea8:	ldr	w9, [sp, #40]
  400eac:	orr	w0, w9, w8, lsl #10
  400eb0:	ldr	w1, [sp, #36]
  400eb4:	ldr	x2, [sp, #16]
  400eb8:	mov	w3, #0x60                  	// #96
  400ebc:	adrp	x4, 401000 <load_and_print+0xe4>
  400ec0:	add	x4, x4, #0x621
  400ec4:	adrp	x5, 401000 <load_and_print+0xe4>
  400ec8:	add	x5, x5, #0x647
  400ecc:	bl	400ae0 <log_internal_realm@plt>
  400ed0:	str	w0, [sp, #8]
  400ed4:	b	400eec <main+0x154>
  400ed8:	ldr	w0, [sp, #36]
  400edc:	bl	400af0 <abs@plt>
  400ee0:	mov	w8, wzr
  400ee4:	subs	w8, w8, w0, uxtb
  400ee8:	str	w8, [sp, #8]
  400eec:	ldr	w8, [sp, #8]
  400ef0:	str	w8, [sp, #28]
  400ef4:	ldur	w8, [x29, #-20]
  400ef8:	mov	w9, wzr
  400efc:	mov	w10, #0x1                   	// #1
  400f00:	cmp	w8, #0x0
  400f04:	csel	w8, w10, w9, lt  // lt = tstop
  400f08:	stur	w8, [x29, #-4]
  400f0c:	ldur	w0, [x29, #-4]
  400f10:	ldp	x29, x30, [sp, #80]
  400f14:	add	sp, sp, #0x60
  400f18:	ret

0000000000400f1c <load_and_print>:
  400f1c:	sub	sp, sp, #0x80
  400f20:	stp	x29, x30, [sp, #112]
  400f24:	add	x29, sp, #0x70
  400f28:	mov	x8, xzr
  400f2c:	adrp	x9, 401000 <load_and_print+0xe4>
  400f30:	add	x9, x9, #0x5e8
  400f34:	add	x9, x9, #0x3
  400f38:	sub	x0, x29, #0x10
  400f3c:	stur	x8, [x29, #-16]
  400f40:	stur	x8, [x29, #-24]
  400f44:	stur	x8, [x29, #-32]
  400f48:	str	x9, [sp, #24]
  400f4c:	bl	401280 <environment_dirs>
  400f50:	stur	w0, [x29, #-44]
  400f54:	ldur	w10, [x29, #-44]
  400f58:	cmp	w10, #0x0
  400f5c:	cset	w10, ge  // ge = tcont
  400f60:	tbnz	w10, #0, 400f78 <load_and_print+0x5c>
  400f64:	ldur	w8, [x29, #-44]
  400f68:	stur	w8, [x29, #-4]
  400f6c:	mov	w8, #0x1                   	// #1
  400f70:	stur	w8, [x29, #-48]
  400f74:	b	401224 <load_and_print+0x308>
  400f78:	ldur	x4, [x29, #-16]
  400f7c:	sub	x0, x29, #0x18
  400f80:	adrp	x1, 401000 <load_and_print+0xe4>
  400f84:	add	x1, x1, #0x668
  400f88:	mov	x8, xzr
  400f8c:	mov	x2, x8
  400f90:	mov	w9, wzr
  400f94:	mov	w3, w9
  400f98:	bl	400b00 <conf_files_list_strv@plt>
  400f9c:	stur	w0, [x29, #-44]
  400fa0:	ldur	w9, [x29, #-44]
  400fa4:	cmp	w9, #0x0
  400fa8:	cset	w9, ge  // ge = tcont
  400fac:	tbnz	w9, #0, 400fc4 <load_and_print+0xa8>
  400fb0:	ldur	w8, [x29, #-44]
  400fb4:	stur	w8, [x29, #-4]
  400fb8:	mov	w8, #0x1                   	// #1
  400fbc:	stur	w8, [x29, #-48]
  400fc0:	b	401224 <load_and_print+0x308>
  400fc4:	ldur	x8, [x29, #-24]
  400fc8:	stur	x8, [x29, #-40]
  400fcc:	ldur	x8, [x29, #-40]
  400fd0:	mov	w9, #0x0                   	// #0
  400fd4:	str	w9, [sp, #20]
  400fd8:	cbz	x8, 400ff0 <load_and_print+0xd4>
  400fdc:	ldur	x8, [x29, #-40]
  400fe0:	ldr	x8, [x8]
  400fe4:	cmp	x8, #0x0
  400fe8:	cset	w9, ne  // ne = any
  400fec:	str	w9, [sp, #20]
  400ff0:	ldr	w8, [sp, #20]
  400ff4:	tbnz	w8, #0, 400ffc <load_and_print+0xe0>
  400ff8:	b	4010cc <load_and_print+0x1b0>
  400ffc:	mov	w8, #0x7                   	// #7
  401000:	stur	w8, [x29, #-52]
  401004:	str	wzr, [sp, #56]
  401008:	str	wzr, [sp, #52]
  40100c:	ldr	w0, [sp, #52]
  401010:	bl	400ad0 <log_get_max_level_realm@plt>
  401014:	ldur	w8, [x29, #-52]
  401018:	and	w8, w8, #0x7
  40101c:	cmp	w0, w8
  401020:	b.lt	401060 <load_and_print+0x144>  // b.tstop
  401024:	ldr	w8, [sp, #52]
  401028:	ldur	w9, [x29, #-52]
  40102c:	orr	w0, w9, w8, lsl #10
  401030:	ldr	w1, [sp, #56]
  401034:	ldur	x10, [x29, #-40]
  401038:	ldr	x6, [x10]
  40103c:	ldr	x2, [sp, #24]
  401040:	mov	w3, #0x3b                  	// #59
  401044:	adrp	x4, 401000 <load_and_print+0xe4>
  401048:	add	x4, x4, #0x66e
  40104c:	adrp	x5, 401000 <load_and_print+0xe4>
  401050:	add	x5, x5, #0x67d
  401054:	bl	400ae0 <log_internal_realm@plt>
  401058:	str	w0, [sp, #16]
  40105c:	b	401074 <load_and_print+0x158>
  401060:	ldr	w0, [sp, #56]
  401064:	bl	400af0 <abs@plt>
  401068:	mov	w8, wzr
  40106c:	subs	w8, w8, w0, uxtb
  401070:	str	w8, [sp, #16]
  401074:	ldr	w8, [sp, #16]
  401078:	str	w8, [sp, #48]
  40107c:	ldur	x9, [x29, #-40]
  401080:	ldr	x2, [x9]
  401084:	sub	x0, x29, #0x20
  401088:	mov	x9, xzr
  40108c:	mov	x1, x9
  401090:	bl	400b10 <merge_env_file@plt>
  401094:	stur	w0, [x29, #-44]
  401098:	ldur	w8, [x29, #-44]
  40109c:	mov	w10, #0xfffffff4            	// #-12
  4010a0:	cmp	w8, w10
  4010a4:	b.ne	4010bc <load_and_print+0x1a0>  // b.any
  4010a8:	ldur	w8, [x29, #-44]
  4010ac:	stur	w8, [x29, #-4]
  4010b0:	mov	w8, #0x1                   	// #1
  4010b4:	stur	w8, [x29, #-48]
  4010b8:	b	401224 <load_and_print+0x308>
  4010bc:	ldur	x8, [x29, #-40]
  4010c0:	add	x8, x8, #0x8
  4010c4:	stur	x8, [x29, #-40]
  4010c8:	b	400fcc <load_and_print+0xb0>
  4010cc:	ldur	x8, [x29, #-32]
  4010d0:	stur	x8, [x29, #-40]
  4010d4:	ldur	x8, [x29, #-40]
  4010d8:	mov	w9, #0x0                   	// #0
  4010dc:	str	w9, [sp, #12]
  4010e0:	cbz	x8, 4010f8 <load_and_print+0x1dc>
  4010e4:	ldur	x8, [x29, #-40]
  4010e8:	ldr	x8, [x8]
  4010ec:	cmp	x8, #0x0
  4010f0:	cset	w9, ne  // ne = any
  4010f4:	str	w9, [sp, #12]
  4010f8:	ldr	w8, [sp, #12]
  4010fc:	tbnz	w8, #0, 401104 <load_and_print+0x1e8>
  401100:	b	401218 <load_and_print+0x2fc>
  401104:	mov	x8, xzr
  401108:	str	x8, [sp, #32]
  40110c:	ldur	x8, [x29, #-40]
  401110:	ldr	x0, [x8]
  401114:	mov	w1, #0x3d                  	// #61
  401118:	bl	400b20 <strchr@plt>
  40111c:	str	x0, [sp, #40]
  401120:	ldr	x8, [sp, #40]
  401124:	cmp	x8, #0x0
  401128:	cset	w9, ne  // ne = any
  40112c:	mov	w10, #0x1                   	// #1
  401130:	eor	w9, w9, #0x1
  401134:	eor	w9, w9, w10
  401138:	eor	w9, w9, w10
  40113c:	and	w9, w9, #0x1
  401140:	mov	w0, w9
  401144:	sxtw	x8, w0
  401148:	cbz	x8, 401170 <load_and_print+0x254>
  40114c:	mov	w8, wzr
  401150:	mov	w0, w8
  401154:	adrp	x1, 401000 <load_and_print+0xe4>
  401158:	add	x1, x1, #0x68b
  40115c:	ldr	x2, [sp, #24]
  401160:	mov	w3, #0x47                  	// #71
  401164:	adrp	x4, 401000 <load_and_print+0xe4>
  401168:	add	x4, x4, #0x68d
  40116c:	bl	400b30 <log_assert_failed_realm@plt>
  401170:	ldr	x8, [sp, #40]
  401174:	add	x0, x8, #0x1
  401178:	mov	w1, #0x1                   	// #1
  40117c:	bl	400b40 <shell_maybe_quote@plt>
  401180:	str	x0, [sp, #32]
  401184:	ldr	x8, [sp, #32]
  401188:	cbnz	x8, 4011b8 <load_and_print+0x29c>
  40118c:	mov	w8, wzr
  401190:	mov	w0, w8
  401194:	ldr	x1, [sp, #24]
  401198:	mov	w2, #0x4b                  	// #75
  40119c:	adrp	x3, 401000 <load_and_print+0xe4>
  4011a0:	add	x3, x3, #0x66e
  4011a4:	bl	400b50 <log_oom_internal@plt>
  4011a8:	stur	w0, [x29, #-4]
  4011ac:	mov	w8, #0x1                   	// #1
  4011b0:	stur	w8, [x29, #-48]
  4011b4:	b	4011e8 <load_and_print+0x2cc>
  4011b8:	ldr	x8, [sp, #40]
  4011bc:	ldur	x9, [x29, #-40]
  4011c0:	ldr	x9, [x9]
  4011c4:	subs	x8, x8, x9
  4011c8:	ldur	x9, [x29, #-40]
  4011cc:	ldr	x2, [x9]
  4011d0:	ldr	x3, [sp, #32]
  4011d4:	adrp	x0, 401000 <load_and_print+0xe4>
  4011d8:	add	x0, x0, #0x6a6
  4011dc:	mov	w1, w8
  4011e0:	bl	400b60 <printf@plt>
  4011e4:	stur	wzr, [x29, #-48]
  4011e8:	add	x0, sp, #0x20
  4011ec:	bl	4014a8 <freep>
  4011f0:	ldur	w8, [x29, #-48]
  4011f4:	cmp	w8, #0x0
  4011f8:	cset	w8, eq  // eq = none
  4011fc:	eor	w8, w8, #0x1
  401200:	tbnz	w8, #0, 401224 <load_and_print+0x308>
  401204:	b	401208 <load_and_print+0x2ec>
  401208:	ldur	x8, [x29, #-40]
  40120c:	add	x8, x8, #0x8
  401210:	stur	x8, [x29, #-40]
  401214:	b	4010d4 <load_and_print+0x1b8>
  401218:	stur	wzr, [x29, #-4]
  40121c:	mov	w8, #0x1                   	// #1
  401220:	stur	w8, [x29, #-48]
  401224:	sub	x0, x29, #0x20
  401228:	bl	40124c <strv_freep>
  40122c:	sub	x0, x29, #0x18
  401230:	bl	40124c <strv_freep>
  401234:	sub	x0, x29, #0x10
  401238:	bl	40124c <strv_freep>
  40123c:	ldur	w0, [x29, #-4]
  401240:	ldp	x29, x30, [sp, #112]
  401244:	add	sp, sp, #0x80
  401248:	ret

000000000040124c <strv_freep>:
  40124c:	sub	sp, sp, #0x20
  401250:	stp	x29, x30, [sp, #16]
  401254:	add	x29, sp, #0x10
  401258:	str	x0, [sp, #8]
  40125c:	ldr	x8, [sp, #8]
  401260:	ldr	x8, [x8]
  401264:	cbz	x8, 401274 <strv_freep+0x28>
  401268:	ldr	x8, [sp, #8]
  40126c:	ldr	x0, [x8]
  401270:	bl	400b70 <strv_free@plt>
  401274:	ldp	x29, x30, [sp, #16]
  401278:	add	sp, sp, #0x20
  40127c:	ret

0000000000401280 <environment_dirs>:
  401280:	sub	sp, sp, #0x80
  401284:	stp	x29, x30, [sp, #112]
  401288:	add	x29, sp, #0x70
  40128c:	mov	x8, xzr
  401290:	adrp	x9, 401000 <load_and_print+0xe4>
  401294:	add	x9, x9, #0x6af
  401298:	adrp	x1, 401000 <load_and_print+0xe4>
  40129c:	add	x1, x1, #0x6c2
  4012a0:	adrp	x2, 401000 <load_and_print+0xe4>
  4012a4:	add	x2, x2, #0x6d5
  4012a8:	adrp	x3, 401000 <load_and_print+0xe4>
  4012ac:	add	x3, x3, #0x6f2
  4012b0:	adrp	x10, 401000 <load_and_print+0xe4>
  4012b4:	add	x10, x10, #0x5e8
  4012b8:	add	x10, x10, #0x3
  4012bc:	stur	x0, [x29, #-16]
  4012c0:	stur	x8, [x29, #-24]
  4012c4:	stur	x8, [x29, #-32]
  4012c8:	mov	x0, x9
  4012cc:	mov	x4, x8
  4012d0:	mov	x5, x8
  4012d4:	str	x10, [sp, #24]
  4012d8:	bl	400b80 <strv_new_internal@plt>
  4012dc:	stur	x0, [x29, #-24]
  4012e0:	ldur	x8, [x29, #-24]
  4012e4:	cbnz	x8, 4012fc <environment_dirs+0x7c>
  4012e8:	mov	w8, #0xfffffff4            	// #-12
  4012ec:	stur	w8, [x29, #-4]
  4012f0:	mov	w8, #0x1                   	// #1
  4012f4:	stur	w8, [x29, #-40]
  4012f8:	b	401488 <environment_dirs+0x208>
  4012fc:	mov	x0, #0x14                  	// #20
  401300:	adrp	x1, 401000 <load_and_print+0xe4>
  401304:	add	x1, x1, #0x709
  401308:	sub	x2, x29, #0x20
  40130c:	bl	400b90 <sd_path_home@plt>
  401310:	stur	w0, [x29, #-36]
  401314:	ldur	w8, [x29, #-36]
  401318:	cmp	w8, #0x0
  40131c:	cset	w8, ge  // ge = tcont
  401320:	tbnz	w8, #0, 401338 <environment_dirs+0xb8>
  401324:	ldur	w8, [x29, #-36]
  401328:	stur	w8, [x29, #-4]
  40132c:	mov	w8, #0x1                   	// #1
  401330:	stur	w8, [x29, #-40]
  401334:	b	401488 <environment_dirs+0x208>
  401338:	ldur	x1, [x29, #-32]
  40133c:	sub	x0, x29, #0x18
  401340:	bl	400ba0 <strv_extend_front@plt>
  401344:	stur	w0, [x29, #-36]
  401348:	ldur	w8, [x29, #-36]
  40134c:	cmp	w8, #0x0
  401350:	cset	w8, ge  // ge = tcont
  401354:	tbnz	w8, #0, 40136c <environment_dirs+0xec>
  401358:	ldur	w8, [x29, #-36]
  40135c:	stur	w8, [x29, #-4]
  401360:	mov	w8, #0x1                   	// #1
  401364:	stur	w8, [x29, #-40]
  401368:	b	401488 <environment_dirs+0x208>
  40136c:	mov	w8, wzr
  401370:	mov	w0, w8
  401374:	bl	400ad0 <log_get_max_level_realm@plt>
  401378:	cmp	w0, #0x7
  40137c:	cset	w8, ge  // ge = tcont
  401380:	mov	w9, #0x1                   	// #1
  401384:	eor	w8, w8, #0x1
  401388:	eor	w8, w8, w9
  40138c:	and	w8, w8, #0x1
  401390:	mov	w1, w8
  401394:	sxtw	x10, w1
  401398:	cbz	x10, 401458 <environment_dirs+0x1d8>
  40139c:	ldur	x0, [x29, #-24]
  4013a0:	adrp	x1, 401000 <load_and_print+0xe4>
  4013a4:	add	x1, x1, #0x717
  4013a8:	bl	4014d0 <strv_join>
  4013ac:	stur	x0, [x29, #-48]
  4013b0:	mov	w8, #0x7                   	// #7
  4013b4:	stur	w8, [x29, #-52]
  4013b8:	str	wzr, [sp, #56]
  4013bc:	str	wzr, [sp, #52]
  4013c0:	ldr	w0, [sp, #52]
  4013c4:	bl	400ad0 <log_get_max_level_realm@plt>
  4013c8:	ldur	w8, [x29, #-52]
  4013cc:	and	w8, w8, #0x7
  4013d0:	cmp	w0, w8
  4013d4:	b.lt	401434 <environment_dirs+0x1b4>  // b.tstop
  4013d8:	ldr	w8, [sp, #52]
  4013dc:	ldur	w9, [x29, #-52]
  4013e0:	orr	w0, w9, w8, lsl #10
  4013e4:	ldr	w1, [sp, #56]
  4013e8:	ldur	x10, [x29, #-48]
  4013ec:	str	w0, [sp, #20]
  4013f0:	mov	x0, x10
  4013f4:	str	w1, [sp, #16]
  4013f8:	bl	401504 <strna>
  4013fc:	ldr	w8, [sp, #20]
  401400:	str	x0, [sp, #8]
  401404:	mov	w0, w8
  401408:	ldr	w1, [sp, #16]
  40140c:	ldr	x2, [sp, #24]
  401410:	mov	w3, #0x23                  	// #35
  401414:	adrp	x4, 401000 <load_and_print+0xe4>
  401418:	add	x4, x4, #0x71a
  40141c:	adrp	x5, 401000 <load_and_print+0xe4>
  401420:	add	x5, x5, #0x72b
  401424:	ldr	x6, [sp, #8]
  401428:	bl	400ae0 <log_internal_realm@plt>
  40142c:	str	w0, [sp, #4]
  401430:	b	401448 <environment_dirs+0x1c8>
  401434:	ldr	w0, [sp, #56]
  401438:	bl	400af0 <abs@plt>
  40143c:	mov	w8, wzr
  401440:	subs	w8, w8, w0, uxtb
  401444:	str	w8, [sp, #4]
  401448:	ldr	w8, [sp, #4]
  40144c:	str	w8, [sp, #48]
  401450:	sub	x0, x29, #0x30
  401454:	bl	4014a8 <freep>
  401458:	ldur	x8, [x29, #-24]
  40145c:	str	x8, [sp, #40]
  401460:	mov	x8, xzr
  401464:	stur	x8, [x29, #-24]
  401468:	ldr	x8, [sp, #40]
  40146c:	str	x8, [sp, #32]
  401470:	ldr	x8, [sp, #32]
  401474:	ldur	x9, [x29, #-16]
  401478:	str	x8, [x9]
  40147c:	stur	wzr, [x29, #-4]
  401480:	mov	w10, #0x1                   	// #1
  401484:	stur	w10, [x29, #-40]
  401488:	sub	x0, x29, #0x20
  40148c:	bl	4014a8 <freep>
  401490:	sub	x0, x29, #0x18
  401494:	bl	40124c <strv_freep>
  401498:	ldur	w0, [x29, #-4]
  40149c:	ldp	x29, x30, [sp, #112]
  4014a0:	add	sp, sp, #0x80
  4014a4:	ret

00000000004014a8 <freep>:
  4014a8:	sub	sp, sp, #0x20
  4014ac:	stp	x29, x30, [sp, #16]
  4014b0:	add	x29, sp, #0x10
  4014b4:	str	x0, [sp, #8]
  4014b8:	ldr	x8, [sp, #8]
  4014bc:	ldr	x0, [x8]
  4014c0:	bl	400bb0 <free@plt>
  4014c4:	ldp	x29, x30, [sp, #16]
  4014c8:	add	sp, sp, #0x20
  4014cc:	ret

00000000004014d0 <strv_join>:
  4014d0:	sub	sp, sp, #0x20
  4014d4:	stp	x29, x30, [sp, #16]
  4014d8:	add	x29, sp, #0x10
  4014dc:	mov	x8, xzr
  4014e0:	str	x0, [sp, #8]
  4014e4:	str	x1, [sp]
  4014e8:	ldr	x0, [sp, #8]
  4014ec:	ldr	x1, [sp]
  4014f0:	mov	x2, x8
  4014f4:	bl	400bc0 <strv_join_prefix@plt>
  4014f8:	ldp	x29, x30, [sp, #16]
  4014fc:	add	sp, sp, #0x20
  401500:	ret

0000000000401504 <strna>:
  401504:	sub	sp, sp, #0x20
  401508:	str	x0, [sp, #24]
  40150c:	ldr	x8, [sp, #24]
  401510:	str	x8, [sp, #16]
  401514:	cbz	x8, 401524 <strna+0x20>
  401518:	ldr	x8, [sp, #16]
  40151c:	str	x8, [sp, #8]
  401520:	b	401530 <strna+0x2c>
  401524:	adrp	x8, 401000 <load_and_print+0xe4>
  401528:	add	x8, x8, #0x76b
  40152c:	str	x8, [sp, #8]
  401530:	ldr	x8, [sp, #8]
  401534:	mov	x0, x8
  401538:	add	sp, sp, #0x20
  40153c:	ret

0000000000401540 <__libc_csu_init>:
  401540:	stp	x29, x30, [sp, #-64]!
  401544:	mov	x29, sp
  401548:	stp	x19, x20, [sp, #16]
  40154c:	adrp	x20, 41f000 <__FRAME_END__+0x1d7a0>
  401550:	add	x20, x20, #0xd10
  401554:	stp	x21, x22, [sp, #32]
  401558:	adrp	x21, 41f000 <__FRAME_END__+0x1d7a0>
  40155c:	add	x21, x21, #0xd08
  401560:	sub	x20, x20, x21
  401564:	mov	w22, w0
  401568:	stp	x23, x24, [sp, #48]
  40156c:	mov	x23, x1
  401570:	mov	x24, x2
  401574:	bl	400a48 <_init>
  401578:	cmp	xzr, x20, asr #3
  40157c:	b.eq	4015a8 <__libc_csu_init+0x68>  // b.none
  401580:	asr	x20, x20, #3
  401584:	mov	x19, #0x0                   	// #0
  401588:	ldr	x3, [x21, x19, lsl #3]
  40158c:	mov	x2, x24
  401590:	add	x19, x19, #0x1
  401594:	mov	x1, x23
  401598:	mov	w0, w22
  40159c:	blr	x3
  4015a0:	cmp	x20, x19
  4015a4:	b.ne	401588 <__libc_csu_init+0x48>  // b.any
  4015a8:	ldp	x19, x20, [sp, #16]
  4015ac:	ldp	x21, x22, [sp, #32]
  4015b0:	ldp	x23, x24, [sp, #48]
  4015b4:	ldp	x29, x30, [sp], #64
  4015b8:	ret
  4015bc:	nop

00000000004015c0 <__libc_csu_fini>:
  4015c0:	ret

Disassembly of section .fini:

00000000004015c4 <_fini>:
  4015c4:	stp	x29, x30, [sp, #-16]!
  4015c8:	mov	x29, sp
  4015cc:	ldp	x29, x30, [sp], #16
  4015d0:	ret
