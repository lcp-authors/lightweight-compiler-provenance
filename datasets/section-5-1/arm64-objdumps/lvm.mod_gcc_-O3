
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lvm.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1800>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	adrp	x2, 0 <grub_mod_init-0x1800>
       8:	mov	x29, sp
       c:	stp	x19, x20, [sp, #16]
      10:	mov	x20, x0
      14:	adrp	x19, 0 <grub_mod_init-0x1800>
      18:	ldr	x0, [x2]
      1c:	stp	x21, x22, [sp, #32]
      20:	mov	x22, x1
      24:	str	x23, [sp, #48]
      28:	bl	0 <grub_strlen>
      2c:	mov	x23, x0
      30:	mov	x0, x22
      34:	bl	0 <grub_strlen>
      38:	mov	x21, x0
      3c:	nop
      40:	ldrb	w1, [x20]
      44:	cbz	w1, 84 <grub_mod_init-0x177c>
      48:	mov	x0, x20
      4c:	cmp	w1, #0x73
      50:	add	x20, x20, #0x1
      54:	b.ne	40 <grub_mod_init-0x17c0>  // b.any
      58:	mov	x2, #0x0                   	// #0
      5c:	mov	w4, #0x74                  	// #116
      60:	b	74 <grub_mod_init-0x178c>
      64:	b.ne	40 <grub_mod_init-0x17c0>  // b.any
      68:	ldr	x1, [x19]
      6c:	ldrb	w4, [x2, x1]
      70:	cbz	w4, 9c <grub_mod_init-0x1764>
      74:	ldrb	w3, [x20, x2]
      78:	add	x2, x2, #0x1
      7c:	cmp	w3, w4
      80:	cbnz	w3, 64 <grub_mod_init-0x179c>
      84:	mov	w0, #0x0                   	// #0
      88:	ldp	x19, x20, [sp, #16]
      8c:	ldp	x21, x22, [sp, #32]
      90:	ldr	x23, [sp, #48]
      94:	ldp	x29, x30, [sp], #64
      98:	ret
      9c:	adrp	x1, 0 <grub_mod_init-0x1800>
      a0:	add	x20, x0, x23
      a4:	mov	x0, x20
      a8:	mov	x2, #0x4                   	// #4
      ac:	ldr	x1, [x1]
      b0:	bl	0 <grub_memcmp>
      b4:	cbnz	w0, 40 <grub_mod_init-0x17c0>
      b8:	add	x20, x20, #0x4
      bc:	nop
      c0:	ldrb	w0, [x20]
      c4:	bl	0 <grub_isspace>
      c8:	cbnz	w0, 130 <grub_mod_init-0x16d0>
      cc:	ldrb	w0, [x20]
      d0:	cmp	w0, #0x22
      d4:	b.ne	84 <grub_mod_init-0x177c>  // b.any
      d8:	add	x19, x20, #0x1
      dc:	mov	x2, x21
      e0:	mov	x0, x19
      e4:	mov	x1, x22
      e8:	bl	0 <grub_memcmp>
      ec:	cbnz	w0, fc <grub_mod_init-0x1704>
      f0:	ldrb	w0, [x19, x21]
      f4:	cmp	w0, #0x22
      f8:	b.eq	138 <grub_mod_init-0x16c8>  // b.none
      fc:	ldrb	w0, [x20, #1]
     100:	cmp	w0, #0x22
     104:	b.eq	114 <grub_mod_init-0x16ec>  // b.none
     108:	ldrb	w2, [x19, #1]!
     10c:	cmp	w2, #0x22
     110:	b.ne	108 <grub_mod_init-0x16f8>  // b.any
     114:	ldrb	w0, [x19, #1]
     118:	cmp	w0, #0x5d
     11c:	b.eq	84 <grub_mod_init-0x177c>  // b.none
     120:	ldrb	w0, [x19, #2]
     124:	add	x20, x19, #0x2
     128:	bl	0 <grub_isspace>
     12c:	cbz	w0, cc <grub_mod_init-0x1734>
     130:	add	x20, x20, #0x1
     134:	b	c0 <grub_mod_init-0x1740>
     138:	mov	w0, #0x1                   	// #1
     13c:	ldp	x19, x20, [sp, #16]
     140:	ldp	x21, x22, [sp, #32]
     144:	ldr	x23, [sp, #48]
     148:	ldp	x29, x30, [sp], #64
     14c:	ret
	...
     168:	sub	sp, sp, #0x300
     16c:	stp	x29, x30, [sp]
     170:	mov	x29, sp
     174:	stp	x19, x20, [sp, #16]
     178:	mov	x20, x0
     17c:	stp	x23, x24, [sp, #48]
     180:	mov	x24, x1
     184:	adrp	x23, 0 <grub_mod_init-0x1800>
     188:	stp	x25, x26, [sp, #64]
     18c:	add	x26, sp, #0x118
     190:	stp	x21, x22, [sp, #32]
     194:	mov	x21, #0x0                   	// #0
     198:	adrp	x22, 0 <grub_mod_init-0x1800>
     19c:	str	x2, [sp, #96]
     1a0:	mov	x1, x21
     1a4:	add	x4, sp, #0x100
     1a8:	mov	x0, x20
     1ac:	mov	x3, #0x200                 	// #512
     1b0:	mov	x2, #0x0                   	// #0
     1b4:	add	x21, x21, #0x1
     1b8:	bl	0 <grub_disk_read>
     1bc:	mov	w19, w0
     1c0:	cbnz	w0, 1e0 <grub_mod_init-0x1620>
     1c4:	ldr	x1, [x22]
     1c8:	add	x0, sp, #0x100
     1cc:	mov	x2, #0x8                   	// #8
     1d0:	bl	0 <grub_strncmp>
     1d4:	cbz	w0, 204 <grub_mod_init-0x15fc>
     1d8:	cmp	x21, #0x4
     1dc:	b.ne	1a0 <grub_mod_init-0x1660>  // b.any
     1e0:	mov	x21, #0x0                   	// #0
     1e4:	mov	x0, x21
     1e8:	ldp	x29, x30, [sp]
     1ec:	ldp	x19, x20, [sp, #16]
     1f0:	ldp	x21, x22, [sp, #32]
     1f4:	ldp	x23, x24, [sp, #48]
     1f8:	ldp	x25, x26, [sp, #64]
     1fc:	add	sp, sp, #0x300
     200:	ret
     204:	ldr	x1, [x23]
     208:	mov	x0, x26
     20c:	mov	x2, #0x8                   	// #8
     210:	bl	0 <grub_strncmp>
     214:	cbnz	w0, 1d8 <grub_mod_init-0x1628>
     218:	ldr	w0, [sp, #276]
     21c:	add	x2, sp, #0x100
     220:	add	x25, sp, #0xd8
     224:	mov	x1, #0x0                   	// #0
     228:	add	x0, x2, x0
     22c:	mov	w4, #0x2d                  	// #45
     230:	stp	x27, x28, [sp, #80]
     234:	nop
     238:	ldrb	w2, [x0, x1]
     23c:	strb	w2, [x25, w19, uxtw]
     240:	cmp	w1, #0x1
     244:	and	w3, w1, #0x3
     248:	ccmp	w1, #0x1d, #0x4, ne  // ne = any
     24c:	add	w2, w19, #0x1
     250:	b.eq	25c <grub_mod_init-0x15a4>  // b.none
     254:	cmp	w3, #0x1
     258:	b.eq	3e0 <grub_mod_init-0x1420>  // b.none
     25c:	mov	w19, w2
     260:	add	x1, x1, #0x1
     264:	cmp	x1, #0x20
     268:	b.ne	238 <grub_mod_init-0x15c8>  // b.any
     26c:	ldr	x1, [x0, #56]
     270:	strb	wzr, [x25, w19, uxtw]
     274:	cbnz	x1, 474 <grub_mod_init-0x138c>
     278:	ldp	x21, x19, [x0, #72]
     27c:	lsl	x0, x19, #1
     280:	bl	0 <grub_malloc>
     284:	mov	x22, x0
     288:	cbz	x0, 4ac <grub_mod_init-0x1354>
     28c:	mov	x2, x21
     290:	mov	x0, x20
     294:	mov	x4, x22
     298:	mov	x3, x19
     29c:	mov	x1, #0x0                   	// #0
     2a0:	bl	0 <grub_disk_read>
     2a4:	cbnz	w0, 3b0 <grub_mod_init-0x1450>
     2a8:	adrp	x1, 0 <grub_mod_init-0x1800>
     2ac:	add	x0, x22, #0x4
     2b0:	mov	x2, #0x10                  	// #16
     2b4:	ldr	x1, [x1]
     2b8:	bl	0 <grub_strncmp>
     2bc:	cbnz	w0, 460 <grub_mod_init-0x13a0>
     2c0:	ldr	w0, [x22, #20]
     2c4:	cmp	w0, #0x1
     2c8:	b.ne	460 <grub_mod_init-0x13a0>  // b.any
     2cc:	ldp	x2, x0, [x22, #32]
     2d0:	add	x19, x22, x19
     2d4:	ldr	x1, [x22, #48]
     2d8:	add	x1, x0, x1
     2dc:	cmp	x1, x2
     2e0:	b.hi	4b4 <grub_mod_init-0x134c>  // b.pmore
     2e4:	add	x20, x22, x0
     2e8:	str	x20, [sp, #168]
     2ec:	mov	x21, x20
     2f0:	ldrb	w0, [x22, x0]
     2f4:	cmp	w0, #0x20
     2f8:	b.eq	31c <grub_mod_init-0x14e4>  // b.none
     2fc:	cmp	x20, x19
     300:	b.cc	310 <grub_mod_init-0x14f0>  // b.lo, b.ul, b.last
     304:	b	31c <grub_mod_init-0x14e4>
     308:	cmp	x21, x19
     30c:	b.eq	3b0 <grub_mod_init-0x1450>  // b.none
     310:	ldrb	w0, [x21, #1]!
     314:	cmp	w0, #0x20
     318:	b.ne	308 <grub_mod_init-0x14f8>  // b.any
     31c:	cmp	x21, x19
     320:	b.eq	3b0 <grub_mod_init-0x1450>  // b.none
     324:	sub	x20, x21, x20
     328:	add	x0, x20, #0x1
     32c:	bl	0 <grub_malloc>
     330:	mov	x27, x0
     334:	cbz	x0, 3b0 <grub_mod_init-0x1450>
     338:	ldr	x1, [sp, #168]
     33c:	add	x3, x0, x20
     340:	mov	x2, x20
     344:	str	x3, [sp, #104]
     348:	bl	0 <grub_memmove>
     34c:	strb	wzr, [x27, x20]
     350:	ldrb	w0, [x21]
     354:	cbz	w0, 3a4 <grub_mod_init-0x145c>
     358:	adrp	x4, 0 <grub_mod_init-0x1800>
     35c:	b	368 <grub_mod_init-0x1498>
     360:	ldrb	w0, [x21]
     364:	cbz	w0, 3a4 <grub_mod_init-0x145c>
     368:	mov	x3, x21
     36c:	cmp	w0, #0x69
     370:	add	x21, x21, #0x1
     374:	b.ne	360 <grub_mod_init-0x14a0>  // b.any
     378:	mov	x0, #0x0                   	// #0
     37c:	mov	w2, #0x64                  	// #100
     380:	b	394 <grub_mod_init-0x146c>
     384:	b.ne	360 <grub_mod_init-0x14a0>  // b.any
     388:	ldr	x19, [x4]
     38c:	ldrb	w2, [x19, x0]
     390:	cbz	w2, 3ec <grub_mod_init-0x1414>
     394:	ldrb	w1, [x21, x0]
     398:	add	x0, x0, #0x1
     39c:	cmp	w1, w2
     3a0:	cbnz	w1, 384 <grub_mod_init-0x147c>
     3a4:	str	xzr, [sp, #168]
     3a8:	mov	x0, x27
     3ac:	bl	0 <grub_free>
     3b0:	mov	x0, x22
     3b4:	mov	x21, #0x0                   	// #0
     3b8:	bl	0 <grub_free>
     3bc:	mov	x0, x21
     3c0:	ldp	x29, x30, [sp]
     3c4:	ldp	x19, x20, [sp, #16]
     3c8:	ldp	x21, x22, [sp, #32]
     3cc:	ldp	x23, x24, [sp, #48]
     3d0:	ldp	x25, x26, [sp, #64]
     3d4:	ldp	x27, x28, [sp, #80]
     3d8:	add	sp, sp, #0x300
     3dc:	ret
     3e0:	add	w19, w19, #0x2
     3e4:	strb	w4, [x25, w2, uxtw]
     3e8:	b	260 <grub_mod_init-0x15a0>
     3ec:	mov	x2, #0x26                  	// #38
     3f0:	add	x1, x3, #0x6
     3f4:	add	x0, sp, #0xb0
     3f8:	str	x1, [sp, #168]
     3fc:	bl	0 <grub_memmove>
     400:	strb	wzr, [sp, #214]
     404:	add	x1, sp, #0xb0
     408:	mov	x0, #0x26                  	// #38
     40c:	bl	0 <grub_diskfilter_get_vg_by_uuid>
     410:	mov	x21, x0
     414:	cbz	x0, 4cc <grub_mod_init-0x1334>
     418:	mov	x0, x27
     41c:	bl	0 <grub_free>
     420:	mov	x0, #0x26                  	// #38
     424:	bl	0 <grub_malloc>
     428:	str	x0, [x24]
     42c:	cbz	x0, 960 <grub_mod_init-0xea0>
     430:	mov	x1, x25
     434:	mov	x2, #0x26                  	// #38
     438:	bl	0 <grub_memmove>
     43c:	mov	x0, #0x26                  	// #38
     440:	str	x0, [x24, #8]
     444:	mov	x0, x22
     448:	bl	0 <grub_free>
     44c:	ldr	x1, [sp, #96]
     450:	mov	x0, #0xffffffffffffffff    	// #-1
     454:	ldp	x27, x28, [sp, #80]
     458:	str	x0, [x1]
     45c:	b	1e4 <grub_mod_init-0x161c>
     460:	adrp	x1, 0 <grub_mod_init-0x1800>
     464:	mov	w0, #0x18                  	// #24
     468:	ldr	x1, [x1]
     46c:	bl	0 <grub_error>
     470:	b	3b0 <grub_mod_init-0x1450>
     474:	adrp	x1, 0 <grub_mod_init-0x1800>
     478:	mov	x21, #0x0                   	// #0
     47c:	mov	w0, #0x18                  	// #24
     480:	ldr	x1, [x1]
     484:	bl	0 <grub_error>
     488:	mov	x0, x21
     48c:	ldp	x29, x30, [sp]
     490:	ldp	x19, x20, [sp, #16]
     494:	ldp	x21, x22, [sp, #32]
     498:	ldp	x23, x24, [sp, #48]
     49c:	ldp	x25, x26, [sp, #64]
     4a0:	ldp	x27, x28, [sp, #80]
     4a4:	add	sp, sp, #0x300
     4a8:	ret
     4ac:	ldp	x27, x28, [sp, #80]
     4b0:	b	1e0 <grub_mod_init-0x1620>
     4b4:	sub	x2, x1, x2
     4b8:	mov	x0, x19
     4bc:	add	x1, x22, #0x200
     4c0:	bl	0 <grub_memmove>
     4c4:	ldr	x0, [x22, #40]
     4c8:	b	2e4 <grub_mod_init-0x151c>
     4cc:	mov	x0, #0x38                  	// #56
     4d0:	bl	0 <grub_malloc>
     4d4:	mov	x26, x0
     4d8:	cbz	x0, 3a8 <grub_mod_init-0x1458>
     4dc:	str	x27, [x26, #16]
     4e0:	mov	x0, #0x26                  	// #38
     4e4:	bl	0 <grub_malloc>
     4e8:	str	x0, [x26]
     4ec:	cbz	x0, 3a8 <grub_mod_init-0x1458>
     4f0:	mov	x2, #0x26                  	// #38
     4f4:	add	x1, sp, #0xb0
     4f8:	bl	0 <grub_memmove>
     4fc:	ldr	x2, [sp, #168]
     500:	mov	x0, #0x26                  	// #38
     504:	str	x0, [x26, #8]
     508:	ldrb	w0, [x2]
     50c:	cbz	w0, 55c <grub_mod_init-0x12a4>
     510:	adrp	x4, 0 <grub_mod_init-0x1800>
     514:	b	520 <grub_mod_init-0x12e0>
     518:	ldrb	w0, [x2]
     51c:	cbz	w0, 55c <grub_mod_init-0x12a4>
     520:	mov	x6, x2
     524:	cmp	w0, #0x65
     528:	add	x2, x2, #0x1
     52c:	b.ne	518 <grub_mod_init-0x12e8>  // b.any
     530:	mov	x1, #0x0                   	// #0
     534:	mov	w3, #0x78                  	// #120
     538:	b	54c <grub_mod_init-0x12b4>
     53c:	b.ne	518 <grub_mod_init-0x12e8>  // b.any
     540:	ldr	x0, [x4]
     544:	ldrb	w3, [x1, x0]
     548:	cbz	w3, 570 <grub_mod_init-0x1290>
     54c:	ldrb	w0, [x2, x1]
     550:	add	x1, x1, #0x1
     554:	cmp	w3, w0
     558:	cbnz	w0, 53c <grub_mod_init-0x12c4>
     55c:	str	xzr, [x26, #24]
     560:	str	xzr, [sp, #168]
     564:	mov	x0, x26
     568:	bl	0 <grub_free>
     56c:	b	3a8 <grub_mod_init-0x1458>
     570:	sub	x0, x0, #0x1
     574:	str	x6, [sp, #168]
     578:	bl	0 <grub_strlen>
     57c:	ldr	x3, [sp, #168]
     580:	add	x1, sp, #0xa8
     584:	mov	w2, #0xa                   	// #10
     588:	add	x0, x3, x0
     58c:	str	x0, [sp, #168]
     590:	bl	0 <grub_strtoull>
     594:	str	x0, [x26, #24]
     598:	ldr	x1, [sp, #168]
     59c:	cbz	x1, 564 <grub_mod_init-0x129c>
     5a0:	stp	xzr, xzr, [x26, #32]
     5a4:	ldrb	w0, [x1]
     5a8:	cbz	w0, 5f8 <grub_mod_init-0x1208>
     5ac:	adrp	x6, 0 <grub_mod_init-0x1800>
     5b0:	b	5bc <grub_mod_init-0x1244>
     5b4:	ldrb	w0, [x1]
     5b8:	cbz	w0, 5f8 <grub_mod_init-0x1208>
     5bc:	cmp	w0, #0x70
     5c0:	mov	x0, x1
     5c4:	add	x1, x1, #0x1
     5c8:	b.ne	5b4 <grub_mod_init-0x124c>  // b.any
     5cc:	mov	x2, #0x0                   	// #0
     5d0:	mov	w3, #0x68                  	// #104
     5d4:	b	5e8 <grub_mod_init-0x1218>
     5d8:	b.ne	5b4 <grub_mod_init-0x124c>  // b.any
     5dc:	ldr	x3, [x6]
     5e0:	ldrb	w3, [x2, x3]
     5e4:	cbz	w3, 7a0 <grub_mod_init-0x1060>
     5e8:	ldrb	w4, [x1, x2]
     5ec:	add	x2, x2, #0x1
     5f0:	cmp	w4, w3
     5f4:	cbnz	w4, 5d8 <grub_mod_init-0x1228>
     5f8:	mov	x0, #0x0                   	// #0
     5fc:	str	xzr, [sp, #168]
     600:	ldrb	w0, [x0]
     604:	cbz	w0, 654 <grub_mod_init-0x11ac>
     608:	adrp	x4, 0 <grub_mod_init-0x1800>
     60c:	b	618 <grub_mod_init-0x11e8>
     610:	ldrb	w0, [x21]
     614:	cbz	w0, 654 <grub_mod_init-0x11ac>
     618:	cmp	w0, #0x6c
     61c:	mov	x0, x21
     620:	add	x21, x21, #0x1
     624:	b.ne	610 <grub_mod_init-0x11f0>  // b.any
     628:	mov	x1, #0x0                   	// #0
     62c:	mov	w2, #0x6f                  	// #111
     630:	b	644 <grub_mod_init-0x11bc>
     634:	b.ne	610 <grub_mod_init-0x11f0>  // b.any
     638:	ldr	x2, [x4]
     63c:	ldrb	w2, [x1, x2]
     640:	cbz	w2, 974 <grub_mod_init-0xe8c>
     644:	ldrb	w3, [x21, x1]
     648:	add	x1, x1, #0x1
     64c:	cmp	w2, w3
     650:	cbnz	w3, 634 <grub_mod_init-0x11cc>
     654:	str	xzr, [sp, #168]
     658:	ldr	x20, [x26, #40]
     65c:	cbz	x20, 78c <grub_mod_init-0x1074>
     660:	ldr	w2, [x20, #28]
     664:	cbz	w2, 784 <grub_mod_init-0x107c>
     668:	ldr	x1, [x20, #64]
     66c:	str	wzr, [sp, #104]
     670:	ldr	w0, [sp, #104]
     674:	mov	w3, #0x38                  	// #56
     678:	mov	w23, #0x0                   	// #0
     67c:	umull	x21, w0, w3
     680:	add	x0, x1, x21
     684:	ldr	w3, [x0, #32]
     688:	cbnz	w3, 6b0 <grub_mod_init-0x1150>
     68c:	b	770 <grub_mod_init-0x1090>
     690:	ldr	x2, [x0, #40]
     694:	add	x2, x2, x19
     698:	ldr	x3, [x2, #16]
     69c:	cbz	x3, 6cc <grub_mod_init-0x1134>
     6a0:	ldr	w2, [x0, #32]
     6a4:	add	w23, w23, #0x1
     6a8:	cmp	w2, w23
     6ac:	b.ls	76c <grub_mod_init-0x1094>  // b.plast
     6b0:	ldr	x28, [x26, #32]
     6b4:	ubfiz	x19, x23, #5, #32
     6b8:	cbnz	x28, 730 <grub_mod_init-0x10d0>
     6bc:	ldr	x2, [x0, #40]
     6c0:	add	x2, x2, x19
     6c4:	ldr	x3, [x2, #16]
     6c8:	cbnz	x3, 6a0 <grub_mod_init-0x1160>
     6cc:	ldr	x28, [x26, #40]
     6d0:	cbnz	x28, 6f0 <grub_mod_init-0x1110>
     6d4:	b	6a0 <grub_mod_init-0x1160>
     6d8:	ldr	x28, [x28, #80]
     6dc:	ldr	x1, [x20, #64]
     6e0:	add	x0, x1, x21
     6e4:	cbz	x28, 6a0 <grub_mod_init-0x1160>
     6e8:	ldr	x2, [x0, #40]
     6ec:	add	x2, x2, x19
     6f0:	ldr	x1, [x2, #8]
     6f4:	ldr	x0, [x28, #16]
     6f8:	bl	0 <grub_strcmp>
     6fc:	cbnz	w0, 6d8 <grub_mod_init-0x1128>
     700:	ldr	x1, [x20, #64]
     704:	add	x0, x1, x21
     708:	ldr	x2, [x0, #40]
     70c:	add	x2, x2, x19
     710:	str	x28, [x2, #24]
     714:	ldr	x28, [x28, #80]
     718:	cbnz	x28, 6e8 <grub_mod_init-0x1118>
     71c:	b	6a0 <grub_mod_init-0x1160>
     720:	ldr	x28, [x28, #56]
     724:	ldr	x1, [x20, #64]
     728:	add	x0, x1, x21
     72c:	cbz	x28, 690 <grub_mod_init-0x1170>
     730:	ldr	x1, [x0, #40]
     734:	ldr	x0, [x28, #16]
     738:	add	x1, x1, x19
     73c:	ldr	x1, [x1, #8]
     740:	bl	0 <grub_strcmp>
     744:	cbnz	w0, 720 <grub_mod_init-0x10e0>
     748:	ldr	x1, [x20, #64]
     74c:	add	w23, w23, #0x1
     750:	add	x0, x1, x21
     754:	ldr	x3, [x0, #40]
     758:	ldr	w2, [x0, #32]
     75c:	add	x19, x3, x19
     760:	cmp	w2, w23
     764:	str	x28, [x19, #16]
     768:	b.hi	6b0 <grub_mod_init-0x1150>  // b.pmore
     76c:	ldr	w2, [x20, #28]
     770:	ldr	w0, [sp, #104]
     774:	add	w0, w0, #0x1
     778:	str	w0, [sp, #104]
     77c:	cmp	w0, w2
     780:	b.cc	670 <grub_mod_init-0x1190>  // b.lo, b.ul, b.last
     784:	ldr	x20, [x20, #80]
     788:	cbnz	x20, 660 <grub_mod_init-0x11a0>
     78c:	mov	x0, x26
     790:	bl	0 <grub_diskfilter_vg_register>
     794:	cbnz	w0, 564 <grub_mod_init-0x129c>
     798:	mov	x21, x26
     79c:	b	420 <grub_mod_init-0x13e0>
     7a0:	add	x0, x0, #0x12
     7a4:	adrp	x28, 0 <grub_mod_init-0x1800>
     7a8:	str	x0, [sp, #168]
     7ac:	ldrb	w0, [x0]
     7b0:	bl	0 <grub_isspace>
     7b4:	cbnz	w0, 878 <grub_mod_init-0xf88>
     7b8:	ldr	x21, [sp, #168]
     7bc:	ldrb	w0, [x21]
     7c0:	cmp	w0, #0x7d
     7c4:	b.eq	608 <grub_mod_init-0x11f8>  // b.none
     7c8:	mov	x0, #0x48                  	// #72
     7cc:	bl	0 <grub_zalloc>
     7d0:	ldr	x2, [sp, #168]
     7d4:	mov	x21, x0
     7d8:	ldrb	w0, [x2]
     7dc:	cmp	w0, #0x20
     7e0:	b.eq	968 <grub_mod_init-0xe98>  // b.none
     7e4:	mov	x0, x2
     7e8:	ldrb	w1, [x0, #1]!
     7ec:	cmp	w1, #0x20
     7f0:	b.ne	7e8 <grub_mod_init-0x1018>  // b.any
     7f4:	sub	x2, x0, x2
     7f8:	add	x0, x2, #0x1
     7fc:	mov	x23, x2
     800:	bl	0 <grub_malloc>
     804:	str	x0, [x21, #16]
     808:	ldr	x1, [sp, #168]
     80c:	mov	x2, x23
     810:	bl	0 <grub_memmove>
     814:	ldr	x0, [x21, #16]
     818:	strb	wzr, [x0, x23]
     81c:	ldr	x1, [sp, #168]
     820:	ldrb	w0, [x1]
     824:	cbz	w0, 860 <grub_mod_init-0xfa0>
     828:	mov	x4, x1
     82c:	cmp	w0, #0x69
     830:	add	x1, x1, #0x1
     834:	b.ne	820 <grub_mod_init-0xfe0>  // b.any
     838:	mov	x0, #0x0                   	// #0
     83c:	mov	w3, #0x64                  	// #100
     840:	b	850 <grub_mod_init-0xfb0>
     844:	b.ne	820 <grub_mod_init-0xfe0>  // b.any
     848:	ldrb	w3, [x19, x0]
     84c:	cbz	w3, 888 <grub_mod_init-0xf78>
     850:	ldrb	w2, [x1, x0]
     854:	add	x0, x0, #0x1
     858:	cmp	w2, w3
     85c:	cbnz	w2, 844 <grub_mod_init-0xfbc>
     860:	str	xzr, [sp, #168]
     864:	ldr	x0, [x21, #16]
     868:	bl	0 <grub_free>
     86c:	mov	x0, x21
     870:	bl	0 <grub_free>
     874:	b	564 <grub_mod_init-0x129c>
     878:	ldr	x0, [sp, #168]
     87c:	add	x0, x0, #0x1
     880:	str	x0, [sp, #168]
     884:	b	7ac <grub_mod_init-0x1054>
     888:	add	x4, x4, #0x6
     88c:	mov	x0, #0x26                  	// #38
     890:	str	x4, [sp, #168]
     894:	bl	0 <grub_malloc>
     898:	str	x0, [x21]
     89c:	cbz	x0, 864 <grub_mod_init-0xf9c>
     8a0:	ldr	x1, [sp, #168]
     8a4:	mov	x2, #0x26                  	// #38
     8a8:	bl	0 <grub_memmove>
     8ac:	ldr	x2, [sp, #168]
     8b0:	mov	x0, #0x26                  	// #38
     8b4:	str	x0, [x21, #8]
     8b8:	ldrb	w0, [x2]
     8bc:	cbz	w0, 8fc <grub_mod_init-0xf04>
     8c0:	mov	x4, x2
     8c4:	cmp	w0, #0x70
     8c8:	add	x2, x2, #0x1
     8cc:	b.ne	8b8 <grub_mod_init-0xf48>  // b.any
     8d0:	mov	x1, #0x0                   	// #0
     8d4:	mov	w3, #0x65                  	// #101
     8d8:	b	8ec <grub_mod_init-0xf14>
     8dc:	b.ne	8b8 <grub_mod_init-0xf48>  // b.any
     8e0:	ldr	x0, [x28]
     8e4:	ldrb	w3, [x1, x0]
     8e8:	cbz	w3, 908 <grub_mod_init-0xef8>
     8ec:	ldrb	w0, [x2, x1]
     8f0:	add	x1, x1, #0x1
     8f4:	cmp	w0, w3
     8f8:	cbnz	w0, 8dc <grub_mod_init-0xf24>
     8fc:	str	xzr, [x21, #48]
     900:	str	xzr, [sp, #168]
     904:	b	864 <grub_mod_init-0xf9c>
     908:	sub	x0, x0, #0x1
     90c:	str	x4, [sp, #168]
     910:	bl	0 <grub_strlen>
     914:	ldr	x3, [sp, #168]
     918:	add	x1, sp, #0xa8
     91c:	mov	w2, #0xa                   	// #10
     920:	add	x0, x3, x0
     924:	str	x0, [sp, #168]
     928:	bl	0 <grub_strtoull>
     92c:	str	x0, [x21, #48]
     930:	ldr	x0, [sp, #168]
     934:	cbz	x0, 864 <grub_mod_init-0xf9c>
     938:	mov	w1, #0x7d                  	// #125
     93c:	bl	0 <grub_strchr>
     940:	cbz	x0, 860 <grub_mod_init-0xfa0>
     944:	ldr	x1, [x26, #32]
     948:	str	xzr, [x21, #24]
     94c:	str	x1, [x21, #56]
     950:	add	x0, x0, #0x1
     954:	str	x21, [x26, #32]
     958:	str	x0, [sp, #168]
     95c:	b	7ac <grub_mod_init-0x1054>
     960:	mov	x26, x21
     964:	b	564 <grub_mod_init-0x129c>
     968:	mov	x23, #0x0                   	// #0
     96c:	mov	x0, #0x1                   	// #1
     970:	b	800 <grub_mod_init-0x1000>
     974:	add	x20, x20, #0x3
     978:	add	x0, x0, #0x11
     97c:	adrp	x28, 0 <grub_mod_init-0x1800>
     980:	str	x0, [sp, #168]
     984:	lsl	x1, x20, #1
     988:	str	x1, [sp, #128]
     98c:	b	998 <grub_mod_init-0xe68>
     990:	add	x0, x0, #0x1
     994:	str	x0, [sp, #168]
     998:	ldrb	w0, [x0]
     99c:	bl	0 <grub_isspace>
     9a0:	mov	w23, w0
     9a4:	ldr	x0, [sp, #168]
     9a8:	cbnz	w23, 990 <grub_mod_init-0xe70>
     9ac:	ldrb	w0, [x0]
     9b0:	cmp	w0, #0x7d
     9b4:	b.eq	658 <grub_mod_init-0x11a8>  // b.none
     9b8:	mov	x0, #0x60                  	// #96
     9bc:	bl	0 <grub_zalloc>
     9c0:	mov	x20, x0
     9c4:	ldr	x0, [sp, #168]
     9c8:	mov	x21, x0
     9cc:	ldrb	w1, [x0]
     9d0:	cmp	w1, #0x20
     9d4:	b.eq	9e4 <grub_mod_init-0xe1c>  // b.none
     9d8:	ldrb	w1, [x21, #1]!
     9dc:	cmp	w1, #0x20
     9e0:	b.ne	9d8 <grub_mod_init-0xe28>  // b.any
     9e4:	sub	x3, x21, x0
     9e8:	str	x3, [sp, #112]
     9ec:	mov	x1, x3
     9f0:	bl	0 <grub_strndup>
     9f4:	str	x0, [x20, #16]
     9f8:	cbz	x0, b40 <grub_mod_init-0xcc0>
     9fc:	ldr	x3, [sp, #112]
     a00:	ldr	x0, [sp, #128]
     a04:	add	x0, x0, x3, lsl #1
     a08:	bl	0 <grub_malloc>
     a0c:	str	x0, [x20]
     a10:	cbz	x0, b40 <grub_mod_init-0xcc0>
     a14:	adrp	x1, 0 <grub_mod_init-0x1800>
     a18:	mov	x2, #0x4                   	// #4
     a1c:	ldr	x1, [x1]
     a20:	bl	0 <grub_memmove>
     a24:	ldp	x1, x3, [sp, #104]
     a28:	ldr	x0, [x20]
     a2c:	add	x0, x0, #0x4
     a30:	cmp	x1, x27
     a34:	b.ls	a74 <grub_mod_init-0xd8c>  // b.plast
     a38:	mov	x1, x27
     a3c:	b	a54 <grub_mod_init-0xdac>
     a40:	add	x0, x0, #0x1
     a44:	ldr	x2, [sp, #104]
     a48:	add	x1, x1, #0x1
     a4c:	cmp	x2, x1
     a50:	b.eq	a74 <grub_mod_init-0xd8c>  // b.none
     a54:	ldrb	w2, [x1]
     a58:	strb	w2, [x0]
     a5c:	ldrb	w2, [x1]
     a60:	cmp	w2, #0x2d
     a64:	b.ne	a40 <grub_mod_init-0xdc0>  // b.any
     a68:	add	x0, x0, #0x2
     a6c:	sturb	w2, [x0, #-1]
     a70:	b	a44 <grub_mod_init-0xdbc>
     a74:	mov	w1, #0x2d                  	// #45
     a78:	strb	w1, [x0], #1
     a7c:	ldr	x1, [sp, #168]
     a80:	add	x2, x1, x3
     a84:	cmp	x1, x2
     a88:	b.cs	ab8 <grub_mod_init-0xd48>  // b.hs, b.nlast
     a8c:	ldrb	w2, [x1]
     a90:	strb	w2, [x0]
     a94:	ldrb	w2, [x1]
     a98:	cmp	w2, #0x2d
     a9c:	b.eq	b54 <grub_mod_init-0xcac>  // b.none
     aa0:	ldr	x2, [sp, #168]
     aa4:	add	x1, x1, #0x1
     aa8:	add	x0, x0, #0x1
     aac:	add	x2, x2, x3
     ab0:	cmp	x1, x2
     ab4:	b.cc	a8c <grub_mod_init-0xd74>  // b.lo, b.ul, b.last
     ab8:	strb	wzr, [x0]
     abc:	mov	x0, #0x54                  	// #84
     ac0:	bl	0 <grub_malloc>
     ac4:	str	x0, [x20, #8]
     ac8:	cbz	x0, b40 <grub_mod_init-0xcc0>
     acc:	adrp	x1, 0 <grub_mod_init-0x1800>
     ad0:	mov	x2, #0x6                   	// #6
     ad4:	ldr	x1, [x1]
     ad8:	bl	0 <grub_memmove>
     adc:	ldr	x0, [x20, #8]
     ae0:	add	x1, sp, #0xb0
     ae4:	mov	x2, #0x26                  	// #38
     ae8:	add	x0, x0, #0x6
     aec:	bl	0 <grub_memmove>
     af0:	ldr	x0, [x20, #8]
     af4:	mov	w1, #0x2f                  	// #47
     af8:	strb	w1, [x0, #44]
     afc:	ldrb	w0, [x21]
     b00:	cbz	w0, b3c <grub_mod_init-0xcc4>
     b04:	mov	x1, x21
     b08:	cmp	w0, #0x69
     b0c:	add	x21, x21, #0x1
     b10:	b.ne	afc <grub_mod_init-0xd04>  // b.any
     b14:	mov	x0, #0x0                   	// #0
     b18:	mov	w2, #0x64                  	// #100
     b1c:	b	b2c <grub_mod_init-0xcd4>
     b20:	b.ne	afc <grub_mod_init-0xd04>  // b.any
     b24:	ldrb	w2, [x19, x0]
     b28:	cbz	w2, b78 <grub_mod_init-0xc88>
     b2c:	ldrb	w3, [x21, x0]
     b30:	add	x0, x0, #0x1
     b34:	cmp	w3, w2
     b38:	cbnz	w3, b20 <grub_mod_init-0xce0>
     b3c:	str	xzr, [sp, #168]
     b40:	ldr	x0, [x20, #16]
     b44:	bl	0 <grub_free>
     b48:	mov	x0, x20
     b4c:	bl	0 <grub_free>
     b50:	b	564 <grub_mod_init-0x129c>
     b54:	strb	w2, [x0, #1]
     b58:	add	x1, x1, #0x1
     b5c:	add	x6, x0, #0x2
     b60:	ldr	x2, [sp, #168]
     b64:	mov	x0, x6
     b68:	add	x2, x2, x3
     b6c:	cmp	x1, x2
     b70:	b.cc	a8c <grub_mod_init-0xd74>  // b.lo, b.ul, b.last
     b74:	b	ab8 <grub_mod_init-0xd48>
     b78:	ldr	x0, [x20, #8]
     b7c:	add	x1, x1, #0x6
     b80:	mov	x2, #0x26                  	// #38
     b84:	str	x1, [sp, #168]
     b88:	add	x0, x0, #0x2d
     b8c:	bl	0 <grub_memmove>
     b90:	ldr	x2, [x20, #8]
     b94:	adrp	x0, 0 <grub_mod_init-0x1800>
     b98:	ldr	x1, [x0]
     b9c:	strb	wzr, [x2, #83]
     ba0:	ldr	x0, [sp, #168]
     ba4:	str	xzr, [x20, #40]
     ba8:	bl	0 <grub_mod_init-0x1800>
     bac:	str	w0, [x20, #56]
     bb0:	adrp	x1, 0 <grub_mod_init-0x1800>
     bb4:	ldr	x0, [sp, #168]
     bb8:	ldr	x1, [x1]
     bbc:	bl	0 <grub_mod_init-0x1800>
     bc0:	str	w0, [sp, #124]
     bc4:	ldr	x1, [sp, #168]
     bc8:	ldrb	w0, [x1]
     bcc:	cbz	w0, c1c <grub_mod_init-0xbe4>
     bd0:	adrp	x4, 0 <grub_mod_init-0x1800>
     bd4:	b	be0 <grub_mod_init-0xc20>
     bd8:	ldrb	w0, [x1]
     bdc:	cbz	w0, c1c <grub_mod_init-0xbe4>
     be0:	mov	x6, x1
     be4:	cmp	w0, #0x73
     be8:	add	x1, x1, #0x1
     bec:	b.ne	bd8 <grub_mod_init-0xc28>  // b.any
     bf0:	mov	x2, #0x0                   	// #0
     bf4:	mov	w3, #0x65                  	// #101
     bf8:	b	c0c <grub_mod_init-0xbf4>
     bfc:	b.ne	bd8 <grub_mod_init-0xc28>  // b.any
     c00:	ldr	x0, [x4]
     c04:	ldrb	w3, [x2, x0]
     c08:	cbz	w3, c28 <grub_mod_init-0xbd8>
     c0c:	ldrb	w0, [x1, x2]
     c10:	add	x2, x2, #0x1
     c14:	cmp	w0, w3
     c18:	cbnz	w0, bfc <grub_mod_init-0xc04>
     c1c:	str	wzr, [x20, #28]
     c20:	str	xzr, [sp, #168]
     c24:	b	b40 <grub_mod_init-0xcc0>
     c28:	sub	x0, x0, #0x1
     c2c:	str	x6, [sp, #168]
     c30:	bl	0 <grub_strlen>
     c34:	ldr	x3, [sp, #168]
     c38:	add	x1, sp, #0xa8
     c3c:	mov	w2, #0xa                   	// #10
     c40:	add	x0, x3, x0
     c44:	str	x0, [sp, #168]
     c48:	bl	0 <grub_strtoull>
     c4c:	str	w0, [x20, #28]
     c50:	ldr	x1, [sp, #168]
     c54:	cbz	x1, b40 <grub_mod_init-0xcc0>
     c58:	ubfiz	x1, x0, #3, #32
     c5c:	sub	x0, x1, w0, uxtw
     c60:	lsl	x0, x0, #3
     c64:	bl	0 <grub_zalloc>
     c68:	ldr	w1, [x20, #28]
     c6c:	mov	x21, x0
     c70:	str	x0, [x20, #64]
     c74:	cbz	w1, 11b0 <grub_mod_init-0x650>
     c78:	ldr	x0, [sp, #168]
     c7c:	str	wzr, [sp, #120]
     c80:	ldrb	w1, [x0]
     c84:	cbz	w1, cc4 <grub_mod_init-0xb3c>
     c88:	cmp	w1, #0x73
     c8c:	mov	x1, x0
     c90:	add	x0, x0, #0x1
     c94:	b.ne	c80 <grub_mod_init-0xb80>  // b.any
     c98:	mov	x2, #0x0                   	// #0
     c9c:	mov	w6, #0x65                  	// #101
     ca0:	b	cb4 <grub_mod_init-0xb4c>
     ca4:	b.ne	c80 <grub_mod_init-0xb80>  // b.any
     ca8:	ldr	x4, [x28]
     cac:	ldrb	w6, [x2, x4]
     cb0:	cbz	w6, ccc <grub_mod_init-0xb34>
     cb4:	ldrb	w4, [x0, x2]
     cb8:	add	x2, x2, #0x1
     cbc:	cmp	w4, w6
     cc0:	cbnz	w4, ca4 <grub_mod_init-0xb5c>
     cc4:	str	xzr, [sp, #168]
     cc8:	b	564 <grub_mod_init-0x129c>
     ccc:	str	x1, [sp, #168]
     cd0:	ldrb	w0, [x1]
     cd4:	cbz	w0, d24 <grub_mod_init-0xadc>
     cd8:	adrp	x6, 0 <grub_mod_init-0x1800>
     cdc:	b	ce8 <grub_mod_init-0xb18>
     ce0:	ldrb	w0, [x1]
     ce4:	cbz	w0, d24 <grub_mod_init-0xadc>
     ce8:	mov	x7, x1
     cec:	cmp	w0, #0x73
     cf0:	add	x1, x1, #0x1
     cf4:	b.ne	ce0 <grub_mod_init-0xb20>  // b.any
     cf8:	mov	x2, #0x0                   	// #0
     cfc:	mov	w4, #0x74                  	// #116
     d00:	b	d14 <grub_mod_init-0xaec>
     d04:	b.ne	ce0 <grub_mod_init-0xb20>  // b.any
     d08:	ldr	x0, [x6]
     d0c:	ldrb	w4, [x2, x0]
     d10:	cbz	w4, d30 <grub_mod_init-0xad0>
     d14:	ldrb	w0, [x1, x2]
     d18:	add	x2, x2, #0x1
     d1c:	cmp	w0, w4
     d20:	cbnz	w0, d04 <grub_mod_init-0xafc>
     d24:	str	xzr, [sp, #168]
     d28:	str	xzr, [x21]
     d2c:	b	564 <grub_mod_init-0x129c>
     d30:	sub	x0, x0, #0x1
     d34:	str	x7, [sp, #168]
     d38:	bl	0 <grub_strlen>
     d3c:	ldr	x4, [sp, #168]
     d40:	add	x1, sp, #0xa8
     d44:	mov	w2, #0xa                   	// #10
     d48:	add	x0, x4, x0
     d4c:	str	x0, [sp, #168]
     d50:	bl	0 <grub_strtoull>
     d54:	ldr	x1, [sp, #168]
     d58:	str	x0, [x21]
     d5c:	cbz	x1, 564 <grub_mod_init-0x129c>
     d60:	ldrb	w0, [x1]
     d64:	cbz	w0, db4 <grub_mod_init-0xa4c>
     d68:	adrp	x6, 0 <grub_mod_init-0x1800>
     d6c:	b	d78 <grub_mod_init-0xa88>
     d70:	ldrb	w0, [x1]
     d74:	cbz	w0, db4 <grub_mod_init-0xa4c>
     d78:	mov	x7, x1
     d7c:	cmp	w0, #0x65
     d80:	add	x1, x1, #0x1
     d84:	b.ne	d70 <grub_mod_init-0xa90>  // b.any
     d88:	mov	x2, #0x0                   	// #0
     d8c:	mov	w4, #0x78                  	// #120
     d90:	b	da4 <grub_mod_init-0xa5c>
     d94:	b.ne	d70 <grub_mod_init-0xa90>  // b.any
     d98:	ldr	x0, [x6]
     d9c:	ldrb	w4, [x2, x0]
     da0:	cbz	w4, dc0 <grub_mod_init-0xa40>
     da4:	ldrb	w0, [x1, x2]
     da8:	add	x2, x2, #0x1
     dac:	cmp	w0, w4
     db0:	cbnz	w0, d94 <grub_mod_init-0xa6c>
     db4:	str	xzr, [sp, #168]
     db8:	str	xzr, [x21, #8]
     dbc:	b	564 <grub_mod_init-0x129c>
     dc0:	sub	x0, x0, #0x1
     dc4:	str	x7, [sp, #168]
     dc8:	bl	0 <grub_strlen>
     dcc:	ldr	x4, [sp, #168]
     dd0:	add	x1, sp, #0xa8
     dd4:	mov	w2, #0xa                   	// #10
     dd8:	add	x0, x4, x0
     ddc:	str	x0, [sp, #168]
     de0:	bl	0 <grub_strtoull>
     de4:	mov	x7, x0
     de8:	ldr	x1, [sp, #168]
     dec:	str	x0, [x21, #8]
     df0:	cbz	x1, 564 <grub_mod_init-0x129c>
     df4:	ldrb	w0, [x1]
     df8:	cbz	w0, cc4 <grub_mod_init-0xb3c>
     dfc:	adrp	x8, 0 <grub_mod_init-0x1800>
     e00:	b	e0c <grub_mod_init-0x9f4>
     e04:	ldrb	w0, [x1]
     e08:	cbz	w0, cc4 <grub_mod_init-0xb3c>
     e0c:	mov	x6, x1
     e10:	cmp	w0, #0x74
     e14:	add	x1, x1, #0x1
     e18:	b.ne	e04 <grub_mod_init-0x9fc>  // b.any
     e1c:	mov	x0, #0x0                   	// #0
     e20:	mov	w2, #0x79                  	// #121
     e24:	b	e38 <grub_mod_init-0x9c8>
     e28:	b.ne	e04 <grub_mod_init-0x9fc>  // b.any
     e2c:	ldr	x2, [x8]
     e30:	ldrb	w2, [x0, x2]
     e34:	cbz	w2, e50 <grub_mod_init-0x9b0>
     e38:	ldrb	w4, [x1, x0]
     e3c:	add	x0, x0, #0x1
     e40:	cmp	w4, w2
     e44:	cbnz	w4, e28 <grub_mod_init-0x9d8>
     e48:	str	xzr, [sp, #168]
     e4c:	b	564 <grub_mod_init-0x129c>
     e50:	ldr	x4, [x26, #24]
     e54:	adrp	x1, 0 <grub_mod_init-0x1800>
     e58:	ldr	x2, [x20, #40]
     e5c:	add	x0, x6, #0x8
     e60:	ldr	x1, [x1]
     e64:	str	x0, [sp, #168]
     e68:	madd	x7, x7, x4, x2
     e6c:	mov	x2, #0x8                   	// #8
     e70:	str	x7, [x20, #40]
     e74:	bl	0 <grub_memcmp>
     e78:	cbz	w0, 11e4 <grub_mod_init-0x61c>
     e7c:	adrp	x1, 0 <grub_mod_init-0x1800>
     e80:	mov	x2, #0x7                   	// #7
     e84:	ldr	x0, [sp, #168]
     e88:	ldr	x1, [x1]
     e8c:	bl	0 <grub_memcmp>
     e90:	cbz	w0, 1244 <grub_mod_init-0x5bc>
     e94:	adrp	x1, 0 <grub_mod_init-0x1800>
     e98:	mov	x2, #0x4                   	// #4
     e9c:	ldr	x0, [sp, #168]
     ea0:	ldr	x1, [x1]
     ea4:	bl	0 <grub_memcmp>
     ea8:	cbnz	w0, 1704 <grub_mod_init-0xfc>
     eac:	ldr	x0, [sp, #168]
     eb0:	ldrb	w1, [x0, #4]
     eb4:	sub	w2, w1, #0x34
     eb8:	cmp	w1, #0x31
     ebc:	and	w2, w2, #0xff
     ec0:	ccmp	w2, #0x2, #0x0, ne  // ne = any
     ec4:	b.hi	16c4 <grub_mod_init-0x13c>  // b.pmore
     ec8:	ldrb	w2, [x0, #5]
     ecc:	cmp	w2, #0x22
     ed0:	b.ne	16c4 <grub_mod_init-0x13c>  // b.any
     ed4:	cmp	w1, #0x35
     ed8:	b.eq	1514 <grub_mod_init-0x2ec>  // b.none
     edc:	b.hi	f58 <grub_mod_init-0x8a8>  // b.pmore
     ee0:	cmp	w1, #0x31
     ee4:	b.eq	1524 <grub_mod_init-0x2dc>  // b.none
     ee8:	cmp	w1, #0x34
     eec:	b.ne	ef8 <grub_mod_init-0x908>  // b.any
     ef0:	mov	w1, #0x4                   	// #4
     ef4:	stp	w1, wzr, [x21, #16]
     ef8:	ldrb	w1, [x0]
     efc:	cbz	w1, f4c <grub_mod_init-0x8b4>
     f00:	adrp	x6, 0 <grub_mod_init-0x1800>
     f04:	b	f10 <grub_mod_init-0x8f0>
     f08:	ldrb	w1, [x0]
     f0c:	cbz	w1, f4c <grub_mod_init-0x8b4>
     f10:	mov	x7, x0
     f14:	cmp	w1, #0x64
     f18:	add	x0, x0, #0x1
     f1c:	b.ne	f08 <grub_mod_init-0x8f8>  // b.any
     f20:	mov	x1, #0x0                   	// #0
     f24:	mov	w2, #0x65                  	// #101
     f28:	b	f3c <grub_mod_init-0x8c4>
     f2c:	b.ne	f08 <grub_mod_init-0x8f8>  // b.any
     f30:	ldr	x4, [x6]
     f34:	ldrb	w2, [x1, x4]
     f38:	cbz	w2, f70 <grub_mod_init-0x890>
     f3c:	ldrb	w4, [x0, x1]
     f40:	add	x1, x1, #0x1
     f44:	cmp	w2, w4
     f48:	cbnz	w4, f2c <grub_mod_init-0x8d4>
     f4c:	str	xzr, [sp, #168]
     f50:	str	wzr, [x21, #32]
     f54:	b	564 <grub_mod_init-0x129c>
     f58:	cmp	w1, #0x36
     f5c:	b.ne	ef8 <grub_mod_init-0x908>  // b.any
     f60:	mov	w2, #0x6                   	// #6
     f64:	mov	w1, #0x5                   	// #5
     f68:	stp	w2, w1, [x21, #16]
     f6c:	b	ef8 <grub_mod_init-0x908>
     f70:	sub	x0, x4, #0x1
     f74:	str	x7, [sp, #168]
     f78:	bl	0 <grub_strlen>
     f7c:	ldr	x4, [sp, #168]
     f80:	add	x1, sp, #0xa8
     f84:	mov	w2, #0xa                   	// #10
     f88:	add	x0, x4, x0
     f8c:	str	x0, [sp, #168]
     f90:	bl	0 <grub_strtoull>
     f94:	ldr	x1, [sp, #168]
     f98:	str	w0, [x21, #32]
     f9c:	cbz	x1, 564 <grub_mod_init-0x129c>
     fa0:	ldr	w2, [x21, #16]
     fa4:	cmp	w2, #0x1
     fa8:	b.eq	1040 <grub_mod_init-0x7c0>  // b.none
     fac:	ldrb	w0, [x1]
     fb0:	cbz	w0, 1000 <grub_mod_init-0x800>
     fb4:	adrp	x7, 0 <grub_mod_init-0x1800>
     fb8:	b	fc4 <grub_mod_init-0x83c>
     fbc:	ldrb	w0, [x1]
     fc0:	cbz	w0, 1000 <grub_mod_init-0x800>
     fc4:	mov	x6, x1
     fc8:	cmp	w0, #0x73
     fcc:	add	x1, x1, #0x1
     fd0:	b.ne	fbc <grub_mod_init-0x844>  // b.any
     fd4:	mov	x2, #0x0                   	// #0
     fd8:	mov	w4, #0x74                  	// #116
     fdc:	b	ff0 <grub_mod_init-0x810>
     fe0:	b.ne	fbc <grub_mod_init-0x844>  // b.any
     fe4:	ldr	x0, [x7]
     fe8:	ldrb	w4, [x2, x0]
     fec:	cbz	w4, 100c <grub_mod_init-0x7f4>
     ff0:	ldrb	w0, [x1, x2]
     ff4:	add	x2, x2, #0x1
     ff8:	cmp	w0, w4
     ffc:	cbnz	w0, fe0 <grub_mod_init-0x820>
    1000:	str	xzr, [sp, #168]
    1004:	str	wzr, [x21, #48]
    1008:	b	564 <grub_mod_init-0x129c>
    100c:	sub	x0, x0, #0x1
    1010:	str	x6, [sp, #168]
    1014:	bl	0 <grub_strlen>
    1018:	ldr	x4, [sp, #168]
    101c:	add	x1, sp, #0xa8
    1020:	mov	w2, #0xa                   	// #10
    1024:	add	x0, x4, x0
    1028:	str	x0, [sp, #168]
    102c:	bl	0 <grub_strtoull>
    1030:	ldr	x1, [sp, #168]
    1034:	str	w0, [x21, #48]
    1038:	cbz	x1, 564 <grub_mod_init-0x129c>
    103c:	ldr	w0, [x21, #32]
    1040:	ubfiz	x0, x0, #5, #32
    1044:	bl	0 <grub_zalloc>
    1048:	ldr	x1, [sp, #168]
    104c:	str	x0, [x21, #40]
    1050:	ldrb	w0, [x1]
    1054:	cbz	w0, 10a4 <grub_mod_init-0x75c>
    1058:	adrp	x7, 0 <grub_mod_init-0x1800>
    105c:	b	1068 <grub_mod_init-0x798>
    1060:	ldrb	w0, [x1]
    1064:	cbz	w0, 10a4 <grub_mod_init-0x75c>
    1068:	cmp	w0, #0x72
    106c:	mov	x0, x1
    1070:	add	x1, x1, #0x1
    1074:	b.ne	1060 <grub_mod_init-0x7a0>  // b.any
    1078:	mov	x2, #0x0                   	// #0
    107c:	mov	w6, #0x61                  	// #97
    1080:	b	1094 <grub_mod_init-0x76c>
    1084:	b.ne	1060 <grub_mod_init-0x7a0>  // b.any
    1088:	ldr	x4, [x7]
    108c:	ldrb	w6, [x2, x4]
    1090:	cbz	w6, 10b4 <grub_mod_init-0x74c>
    1094:	ldrb	w4, [x1, x2]
    1098:	add	x2, x2, #0x1
    109c:	cmp	w6, w4
    10a0:	cbnz	w4, 1084 <grub_mod_init-0x77c>
    10a4:	str	xzr, [sp, #168]
    10a8:	ldr	x0, [x21, #40]
    10ac:	bl	0 <grub_free>
    10b0:	b	564 <grub_mod_init-0x129c>
    10b4:	ldr	w1, [x21, #32]
    10b8:	add	x0, x0, #0x9
    10bc:	str	x0, [sp, #168]
    10c0:	cbz	w1, 1188 <grub_mod_init-0x678>
    10c4:	str	wzr, [sp, #112]
    10c8:	mov	w1, #0x22                  	// #34
    10cc:	bl	0 <grub_strchr>
    10d0:	str	x0, [sp, #168]
    10d4:	cbz	x0, 1170 <grub_mod_init-0x690>
    10d8:	add	x0, x0, #0x1
    10dc:	mov	w1, #0x22                  	// #34
    10e0:	bl	0 <grub_strchr>
    10e4:	str	x0, [sp, #168]
    10e8:	cbz	x0, 1170 <grub_mod_init-0x690>
    10ec:	add	x0, x0, #0x1
    10f0:	mov	w1, #0x22                  	// #34
    10f4:	bl	0 <grub_strchr>
    10f8:	cbz	x0, 16f0 <grub_mod_init-0x110>
    10fc:	add	x1, x0, #0x1
    1100:	str	x1, [sp, #168]
    1104:	mov	x4, x1
    1108:	ldrb	w0, [x0, #1]
    110c:	cmp	w0, #0x22
    1110:	b.eq	1120 <grub_mod_init-0x6e0>  // b.none
    1114:	ldrb	w0, [x4, #1]!
    1118:	cmp	w0, #0x22
    111c:	b.ne	1114 <grub_mod_init-0x6ec>  // b.any
    1120:	sub	x2, x4, x1
    1124:	str	x2, [sp, #136]
    1128:	add	x0, x2, #0x1
    112c:	str	x4, [sp, #152]
    1130:	bl	0 <grub_malloc>
    1134:	str	x0, [sp, #144]
    1138:	cbz	x0, 10a8 <grub_mod_init-0x758>
    113c:	ldr	x2, [sp, #136]
    1140:	ldr	x1, [sp, #168]
    1144:	bl	0 <grub_memmove>
    1148:	ldp	x2, x6, [sp, #136]
    114c:	ldr	x0, [sp, #112]
    1150:	ldr	x4, [sp, #152]
    1154:	strb	wzr, [x6, x2]
    1158:	ubfiz	x2, x0, #5, #32
    115c:	add	x0, x4, #0x1
    1160:	ldr	x1, [x21, #40]
    1164:	str	x0, [sp, #168]
    1168:	add	x1, x1, x2
    116c:	str	x6, [x1, #8]
    1170:	ldr	w2, [sp, #112]
    1174:	ldr	w1, [x21, #32]
    1178:	add	w2, w2, #0x1
    117c:	str	w2, [sp, #112]
    1180:	cmp	w1, w2
    1184:	b.hi	10c8 <grub_mod_init-0x738>  // b.pmore
    1188:	ldr	w2, [x21, #16]
    118c:	cmp	w2, #0x4
    1190:	b.eq	14d8 <grub_mod_init-0x328>  // b.none
    1194:	ldr	w2, [sp, #120]
    1198:	add	x21, x21, #0x38
    119c:	ldr	w1, [x20, #28]
    11a0:	add	w2, w2, #0x1
    11a4:	str	w2, [sp, #120]
    11a8:	cmp	w1, w2
    11ac:	b.hi	c80 <grub_mod_init-0xb80>  // b.pmore
    11b0:	ldr	x0, [sp, #168]
    11b4:	cbz	x0, b40 <grub_mod_init-0xcc0>
    11b8:	mov	w1, #0x7d                  	// #125
    11bc:	bl	0 <grub_strchr>
    11c0:	cbz	x0, b3c <grub_mod_init-0xcc4>
    11c4:	add	x0, x0, #0x3
    11c8:	str	x0, [sp, #168]
    11cc:	cbnz	w23, 16d8 <grub_mod_init-0x128>
    11d0:	ldr	x0, [x26, #40]
    11d4:	stp	x26, x0, [x20, #72]
    11d8:	str	x20, [x26, #40]
    11dc:	ldr	x0, [sp, #168]
    11e0:	b	998 <grub_mod_init-0xe68>
    11e4:	ldr	x1, [sp, #168]
    11e8:	str	wzr, [x21, #16]
    11ec:	ldrb	w0, [x1]
    11f0:	cbz	w0, f4c <grub_mod_init-0x8b4>
    11f4:	adrp	x7, 0 <grub_mod_init-0x1800>
    11f8:	b	1204 <grub_mod_init-0x5fc>
    11fc:	ldrb	w0, [x1]
    1200:	cbz	w0, f4c <grub_mod_init-0x8b4>
    1204:	mov	x6, x1
    1208:	cmp	w0, #0x73
    120c:	add	x1, x1, #0x1
    1210:	b.ne	11fc <grub_mod_init-0x604>  // b.any
    1214:	mov	x2, #0x0                   	// #0
    1218:	mov	w4, #0x74                  	// #116
    121c:	b	1230 <grub_mod_init-0x5d0>
    1220:	b.ne	11fc <grub_mod_init-0x604>  // b.any
    1224:	ldr	x0, [x7]
    1228:	ldrb	w4, [x2, x0]
    122c:	cbz	w4, 12a8 <grub_mod_init-0x558>
    1230:	ldrb	w0, [x1, x2]
    1234:	add	x2, x2, #0x1
    1238:	cmp	w0, w4
    123c:	cbnz	w0, 1220 <grub_mod_init-0x5e0>
    1240:	b	f4c <grub_mod_init-0x8b4>
    1244:	ldr	x1, [sp, #168]
    1248:	mov	w0, #0x1                   	// #1
    124c:	str	w0, [x21, #16]
    1250:	ldrb	w0, [x1]
    1254:	cbz	w0, f4c <grub_mod_init-0x8b4>
    1258:	adrp	x7, 0 <grub_mod_init-0x1800>
    125c:	b	1268 <grub_mod_init-0x598>
    1260:	ldrb	w0, [x1]
    1264:	cbz	w0, f4c <grub_mod_init-0x8b4>
    1268:	mov	x6, x1
    126c:	cmp	w0, #0x6d
    1270:	add	x1, x1, #0x1
    1274:	b.ne	1260 <grub_mod_init-0x5a0>  // b.any
    1278:	mov	x2, #0x0                   	// #0
    127c:	mov	w4, #0x69                  	// #105
    1280:	b	1294 <grub_mod_init-0x56c>
    1284:	b.ne	1260 <grub_mod_init-0x5a0>  // b.any
    1288:	ldr	x0, [x7]
    128c:	ldrb	w4, [x2, x0]
    1290:	cbz	w4, 1530 <grub_mod_init-0x2d0>
    1294:	ldrb	w0, [x1, x2]
    1298:	add	x2, x2, #0x1
    129c:	cmp	w0, w4
    12a0:	cbnz	w0, 1284 <grub_mod_init-0x57c>
    12a4:	b	f4c <grub_mod_init-0x8b4>
    12a8:	sub	x0, x0, #0x1
    12ac:	str	x6, [sp, #168]
    12b0:	bl	0 <grub_strlen>
    12b4:	ldr	x4, [sp, #168]
    12b8:	add	x1, sp, #0xa8
    12bc:	mov	w2, #0xa                   	// #10
    12c0:	add	x0, x4, x0
    12c4:	str	x0, [sp, #168]
    12c8:	bl	0 <grub_strtoull>
    12cc:	mov	x2, x0
    12d0:	ldr	x1, [sp, #168]
    12d4:	str	w0, [x21, #32]
    12d8:	mov	w6, w0
    12dc:	cbz	x1, 564 <grub_mod_init-0x129c>
    12e0:	cmp	w2, #0x1
    12e4:	b.ne	1474 <grub_mod_init-0x38c>  // b.any
    12e8:	ubfiz	x0, x6, #5, #32
    12ec:	bl	0 <grub_zalloc>
    12f0:	ldr	x1, [sp, #168]
    12f4:	str	x0, [x21, #40]
    12f8:	mov	x6, x0
    12fc:	ldrb	w0, [x1]
    1300:	cbz	w0, 10a4 <grub_mod_init-0x75c>
    1304:	adrp	x8, 0 <grub_mod_init-0x1800>
    1308:	b	1314 <grub_mod_init-0x4ec>
    130c:	ldrb	w0, [x1]
    1310:	cbz	w0, 10a4 <grub_mod_init-0x75c>
    1314:	cmp	w0, #0x73
    1318:	mov	x0, x1
    131c:	add	x1, x1, #0x1
    1320:	b.ne	130c <grub_mod_init-0x4f4>  // b.any
    1324:	mov	x2, #0x0                   	// #0
    1328:	mov	w4, #0x74                  	// #116
    132c:	b	1340 <grub_mod_init-0x4c0>
    1330:	b.ne	130c <grub_mod_init-0x4f4>  // b.any
    1334:	ldr	x4, [x8]
    1338:	ldrb	w4, [x2, x4]
    133c:	cbz	w4, 1354 <grub_mod_init-0x4ac>
    1340:	ldrb	w7, [x1, x2]
    1344:	add	x2, x2, #0x1
    1348:	cmp	w7, w4
    134c:	cbnz	w7, 1330 <grub_mod_init-0x4d0>
    1350:	b	10a4 <grub_mod_init-0x75c>
    1354:	ldr	w1, [x21, #32]
    1358:	add	x0, x0, #0xb
    135c:	str	x0, [sp, #168]
    1360:	cbz	w1, 1194 <grub_mod_init-0x66c>
    1364:	str	wzr, [sp, #112]
    1368:	mov	w1, #0x22                  	// #34
    136c:	str	x6, [sp, #136]
    1370:	bl	0 <grub_strchr>
    1374:	ldr	x6, [sp, #136]
    1378:	cbz	x0, 146c <grub_mod_init-0x394>
    137c:	add	x1, x0, #0x1
    1380:	str	x1, [sp, #168]
    1384:	mov	x4, x1
    1388:	ldrb	w0, [x0, #1]
    138c:	cmp	w0, #0x22
    1390:	b.eq	13a0 <grub_mod_init-0x460>  // b.none
    1394:	ldrb	w0, [x4, #1]!
    1398:	cmp	w0, #0x22
    139c:	b.ne	1394 <grub_mod_init-0x46c>  // b.any
    13a0:	sub	x2, x4, x1
    13a4:	stp	x2, x6, [sp, #136]
    13a8:	add	x0, x2, #0x1
    13ac:	str	x4, [sp, #152]
    13b0:	bl	0 <grub_malloc>
    13b4:	ldr	x6, [sp, #144]
    13b8:	str	x0, [x6, #8]
    13bc:	cbz	x0, 10a8 <grub_mod_init-0x758>
    13c0:	ldr	x2, [sp, #136]
    13c4:	ldr	x1, [sp, #168]
    13c8:	bl	0 <grub_memmove>
    13cc:	ldp	x2, x6, [sp, #136]
    13d0:	ldr	x4, [sp, #152]
    13d4:	add	x1, x4, #0x1
    13d8:	ldr	x0, [x6, #8]
    13dc:	strb	wzr, [x0, x2]
    13e0:	str	x1, [sp, #168]
    13e4:	ldrb	w0, [x4, #1]
    13e8:	cbnz	w0, 13f8 <grub_mod_init-0x408>
    13ec:	b	16f8 <grub_mod_init-0x108>
    13f0:	ldrb	w0, [x1, #1]!
    13f4:	cbz	w0, 16f8 <grub_mod_init-0x108>
    13f8:	cmp	w0, #0x2c
    13fc:	b.ne	13f0 <grub_mod_init-0x410>  // b.any
    1400:	adrp	x0, 0 <grub_mod_init-0x1800>
    1404:	str	x6, [sp, #136]
    1408:	str	x1, [sp, #168]
    140c:	ldr	x0, [x0]
    1410:	bl	0 <grub_strlen>
    1414:	ldr	x4, [sp, #168]
    1418:	add	x1, sp, #0xa8
    141c:	mov	w2, #0xa                   	// #10
    1420:	add	x0, x4, x0
    1424:	str	x0, [sp, #168]
    1428:	bl	0 <grub_strtoull>
    142c:	mov	x1, x0
    1430:	ldr	x6, [sp, #136]
    1434:	mov	x2, x6
    1438:	ldr	x4, [x26, #24]
    143c:	ldr	x0, [sp, #168]
    1440:	mul	x1, x4, x1
    1444:	str	x1, [x2], #32
    1448:	cmp	x0, #0x0
    144c:	csel	x6, x2, x6, ne  // ne = any
    1450:	ldr	w2, [sp, #112]
    1454:	ldr	w1, [x21, #32]
    1458:	add	w2, w2, #0x1
    145c:	str	w2, [sp, #112]
    1460:	cmp	w1, w2
    1464:	b.hi	1368 <grub_mod_init-0x498>  // b.pmore
    1468:	b	1194 <grub_mod_init-0x66c>
    146c:	str	xzr, [sp, #168]
    1470:	b	1450 <grub_mod_init-0x3b0>
    1474:	ldrb	w2, [x1]
    1478:	cbz	w2, 14c8 <grub_mod_init-0x338>
    147c:	adrp	x8, 0 <grub_mod_init-0x1800>
    1480:	b	148c <grub_mod_init-0x374>
    1484:	ldrb	w2, [x1]
    1488:	cbz	w2, 14c8 <grub_mod_init-0x338>
    148c:	mov	x7, x1
    1490:	cmp	w2, #0x73
    1494:	add	x1, x1, #0x1
    1498:	b.ne	1484 <grub_mod_init-0x37c>  // b.any
    149c:	mov	x2, #0x0                   	// #0
    14a0:	mov	w4, #0x74                  	// #116
    14a4:	b	14b8 <grub_mod_init-0x348>
    14a8:	b.ne	1484 <grub_mod_init-0x37c>  // b.any
    14ac:	ldr	x0, [x8]
    14b0:	ldrb	w4, [x2, x0]
    14b4:	cbz	w4, 1690 <grub_mod_init-0x170>
    14b8:	ldrb	w0, [x1, x2]
    14bc:	add	x2, x2, #0x1
    14c0:	cmp	w0, w4
    14c4:	cbnz	w0, 14a8 <grub_mod_init-0x358>
    14c8:	str	xzr, [sp, #168]
    14cc:	mov	w1, #0x0                   	// #0
    14d0:	str	w1, [x21, #48]
    14d4:	b	12e8 <grub_mod_init-0x518>
    14d8:	ldr	x0, [x21, #40]
    14dc:	sub	w2, w1, #0x1
    14e0:	add	x1, x0, #0x20
    14e4:	lsl	x2, x2, #5
    14e8:	ldr	x4, [x0, #8]
    14ec:	str	x4, [sp, #112]
    14f0:	bl	0 <grub_memmove>
    14f4:	ldr	w1, [x21, #32]
    14f8:	ldr	x2, [x21, #40]
    14fc:	sub	w1, w1, #0x1
    1500:	ldr	x4, [sp, #112]
    1504:	add	x1, x2, x1, lsl #5
    1508:	ldr	x0, [sp, #168]
    150c:	str	x4, [x1, #8]
    1510:	b	1194 <grub_mod_init-0x66c>
    1514:	mov	w2, #0x5                   	// #5
    1518:	mov	w1, #0x2                   	// #2
    151c:	stp	w2, w1, [x21, #16]
    1520:	b	ef8 <grub_mod_init-0x908>
    1524:	mov	w1, #0x1                   	// #1
    1528:	str	w1, [x21, #16]
    152c:	b	ef8 <grub_mod_init-0x908>
    1530:	sub	x0, x0, #0x1
    1534:	str	x6, [sp, #168]
    1538:	bl	0 <grub_strlen>
    153c:	ldr	x4, [sp, #168]
    1540:	add	x1, sp, #0xa8
    1544:	mov	w2, #0xa                   	// #10
    1548:	add	x0, x4, x0
    154c:	str	x0, [sp, #168]
    1550:	bl	0 <grub_strtoull>
    1554:	ldr	x1, [sp, #168]
    1558:	str	w0, [x21, #32]
    155c:	cbz	x1, 564 <grub_mod_init-0x129c>
    1560:	ubfiz	x0, x0, #5, #32
    1564:	bl	0 <grub_zalloc>
    1568:	ldr	x1, [sp, #168]
    156c:	str	x0, [x21, #40]
    1570:	ldrb	w0, [x1]
    1574:	cbz	w0, 10a4 <grub_mod_init-0x75c>
    1578:	adrp	x7, 0 <grub_mod_init-0x1800>
    157c:	b	1588 <grub_mod_init-0x278>
    1580:	ldrb	w0, [x1]
    1584:	cbz	w0, 10a4 <grub_mod_init-0x75c>
    1588:	cmp	w0, #0x6d
    158c:	mov	x0, x1
    1590:	add	x1, x1, #0x1
    1594:	b.ne	1580 <grub_mod_init-0x280>  // b.any
    1598:	mov	x2, #0x0                   	// #0
    159c:	mov	w4, #0x69                  	// #105
    15a0:	b	15b4 <grub_mod_init-0x24c>
    15a4:	b.ne	1580 <grub_mod_init-0x280>  // b.any
    15a8:	ldr	x4, [x7]
    15ac:	ldrb	w4, [x2, x4]
    15b0:	cbz	w4, 15c8 <grub_mod_init-0x238>
    15b4:	ldrb	w6, [x1, x2]
    15b8:	add	x2, x2, #0x1
    15bc:	cmp	w6, w4
    15c0:	cbnz	w6, 15a4 <grub_mod_init-0x25c>
    15c4:	b	10a4 <grub_mod_init-0x75c>
    15c8:	ldr	w1, [x21, #32]
    15cc:	add	x0, x0, #0xb
    15d0:	str	x0, [sp, #168]
    15d4:	cbz	w1, 1674 <grub_mod_init-0x18c>
    15d8:	str	wzr, [sp, #112]
    15dc:	mov	w1, #0x22                  	// #34
    15e0:	bl	0 <grub_strchr>
    15e4:	cbz	x0, 1688 <grub_mod_init-0x178>
    15e8:	add	x1, x0, #0x1
    15ec:	str	x1, [sp, #168]
    15f0:	mov	x6, x1
    15f4:	ldrb	w0, [x0, #1]
    15f8:	cmp	w0, #0x22
    15fc:	b.eq	160c <grub_mod_init-0x1f4>  // b.none
    1600:	ldrb	w0, [x6, #1]!
    1604:	cmp	w0, #0x22
    1608:	b.ne	1600 <grub_mod_init-0x200>  // b.any
    160c:	sub	x2, x6, x1
    1610:	str	x2, [sp, #136]
    1614:	add	x0, x2, #0x1
    1618:	str	x6, [sp, #152]
    161c:	bl	0 <grub_malloc>
    1620:	str	x0, [sp, #144]
    1624:	cbz	x0, 10a8 <grub_mod_init-0x758>
    1628:	ldr	x2, [sp, #136]
    162c:	ldr	x1, [sp, #168]
    1630:	bl	0 <grub_memmove>
    1634:	ldp	x2, x4, [sp, #136]
    1638:	ldr	x0, [sp, #112]
    163c:	ldr	x6, [sp, #152]
    1640:	strb	wzr, [x4, x2]
    1644:	ubfiz	x2, x0, #5, #32
    1648:	add	x0, x6, #0x1
    164c:	ldr	x1, [x21, #40]
    1650:	str	x0, [sp, #168]
    1654:	add	x1, x1, x2
    1658:	str	x4, [x1, #8]
    165c:	ldr	w2, [sp, #112]
    1660:	ldr	w1, [x21, #32]
    1664:	add	w2, w2, #0x1
    1668:	str	w2, [sp, #112]
    166c:	cmp	w1, w2
    1670:	b.hi	15dc <grub_mod_init-0x224>  // b.pmore
    1674:	ldr	w1, [sp, #124]
    1678:	cbz	w1, 1194 <grub_mod_init-0x66c>
    167c:	mov	w1, #0x1                   	// #1
    1680:	str	w1, [x21, #32]
    1684:	b	1194 <grub_mod_init-0x66c>
    1688:	str	xzr, [sp, #168]
    168c:	b	165c <grub_mod_init-0x1a4>
    1690:	sub	x0, x0, #0x1
    1694:	str	x7, [sp, #168]
    1698:	bl	0 <grub_strlen>
    169c:	ldr	x4, [sp, #168]
    16a0:	add	x1, sp, #0xa8
    16a4:	mov	w2, #0xa                   	// #10
    16a8:	add	x0, x4, x0
    16ac:	str	x0, [sp, #168]
    16b0:	bl	0 <grub_strtoull>
    16b4:	mov	w1, w0
    16b8:	ldr	w6, [x21, #32]
    16bc:	str	w1, [x21, #48]
    16c0:	b	12e8 <grub_mod_init-0x518>
    16c4:	mov	w1, #0x7d                  	// #125
    16c8:	bl	0 <grub_strchr>
    16cc:	cbz	x0, b3c <grub_mod_init-0xcc4>
    16d0:	add	x0, x0, #0x3
    16d4:	str	x0, [sp, #168]
    16d8:	ldr	x0, [x20, #16]
    16dc:	bl	0 <grub_free>
    16e0:	mov	x0, x20
    16e4:	bl	0 <grub_free>
    16e8:	ldr	x0, [sp, #168]
    16ec:	b	998 <grub_mod_init-0xe68>
    16f0:	str	xzr, [sp, #168]
    16f4:	b	1170 <grub_mod_init-0x690>
    16f8:	mov	x1, #0x0                   	// #0
    16fc:	str	xzr, [sp, #168]
    1700:	b	1434 <grub_mod_init-0x3cc>
    1704:	mov	w23, #0x1                   	// #1
    1708:	b	11b0 <grub_mod_init-0x650>
    170c:	nop
	...

0000000000001800 <grub_mod_init>:
    1800:	adrp	x0, 0 <grub_mod_init-0x1800>
    1804:	ldr	x1, [x0]
    1808:	ldr	x0, [x1]
    180c:	cbz	x0, 181c <grub_mod_init+0x1c>
    1810:	mov	x1, x0
    1814:	ldr	x0, [x0]
    1818:	cbnz	x0, 1810 <grub_mod_init+0x10>
    181c:	adrp	x0, 0 <grub_mod_init-0x1800>
    1820:	ldr	x0, [x0]
    1824:	stp	xzr, x1, [x0]
    1828:	str	x0, [x1]
    182c:	ret
	...

0000000000001840 <grub_mod_fini>:
    1840:	adrp	x0, 0 <grub_mod_init-0x1800>
    1844:	ldr	x0, [x0]
    1848:	b	0 <grub_list_remove>
    184c:	nop
	...
