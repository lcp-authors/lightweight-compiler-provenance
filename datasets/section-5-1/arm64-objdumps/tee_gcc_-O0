
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tee_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000978 <_init>:
 978:	stp	x29, x30, [sp, #-16]!
 97c:	mov	x29, sp
 980:	bl	aa0 <call_weak_fn>
 984:	ldp	x29, x30, [sp], #16
 988:	ret

Disassembly of section .plt:

0000000000000990 <.plt>:
 990:	stp	x16, x30, [sp, #-16]!
 994:	adrp	x16, 11000 <__FRAME_END__+0xfd14>
 998:	ldr	x17, [x16, #4088]
 99c:	add	x16, x16, #0xff8
 9a0:	br	x17
 9a4:	nop
 9a8:	nop
 9ac:	nop

00000000000009b0 <builtin_error@plt>:
 9b0:	adrp	x16, 12000 <builtin_error>
 9b4:	ldr	x17, [x16]
 9b8:	add	x16, x16, #0x0
 9bc:	br	x17

00000000000009c0 <__cxa_finalize@plt>:
 9c0:	adrp	x16, 12000 <builtin_error>
 9c4:	ldr	x17, [x16, #8]
 9c8:	add	x16, x16, #0x8
 9cc:	br	x17

00000000000009d0 <builtin_help@plt>:
 9d0:	adrp	x16, 12000 <builtin_error>
 9d4:	ldr	x17, [x16, #16]
 9d8:	add	x16, x16, #0x10
 9dc:	br	x17

00000000000009e0 <open@plt>:
 9e0:	adrp	x16, 12000 <builtin_error>
 9e4:	ldr	x17, [x16, #24]
 9e8:	add	x16, x16, #0x18
 9ec:	br	x17

00000000000009f0 <xmalloc@plt>:
 9f0:	adrp	x16, 12000 <builtin_error>
 9f4:	ldr	x17, [x16, #32]
 9f8:	add	x16, x16, #0x20
 9fc:	br	x17

0000000000000a00 <builtin_usage@plt>:
 a00:	adrp	x16, 12000 <builtin_error>
 a04:	ldr	x17, [x16, #40]
 a08:	add	x16, x16, #0x28
 a0c:	br	x17

0000000000000a10 <strerror@plt>:
 a10:	adrp	x16, 12000 <builtin_error>
 a14:	ldr	x17, [x16, #48]
 a18:	add	x16, x16, #0x30
 a1c:	br	x17

0000000000000a20 <close@plt>:
 a20:	adrp	x16, 12000 <builtin_error>
 a24:	ldr	x17, [x16, #56]
 a28:	add	x16, x16, #0x38
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <builtin_error>
 a34:	ldr	x17, [x16, #64]
 a38:	add	x16, x16, #0x40
 a3c:	br	x17

0000000000000a40 <write@plt>:
 a40:	adrp	x16, 12000 <builtin_error>
 a44:	ldr	x17, [x16, #72]
 a48:	add	x16, x16, #0x48
 a4c:	br	x17

0000000000000a50 <free@plt>:
 a50:	adrp	x16, 12000 <builtin_error>
 a54:	ldr	x17, [x16, #80]
 a58:	add	x16, x16, #0x50
 a5c:	br	x17

0000000000000a60 <internal_getopt@plt>:
 a60:	adrp	x16, 12000 <builtin_error>
 a64:	ldr	x17, [x16, #88]
 a68:	add	x16, x16, #0x58
 a6c:	br	x17

0000000000000a70 <reset_internal_getopt@plt>:
 a70:	adrp	x16, 12000 <builtin_error>
 a74:	ldr	x17, [x16, #96]
 a78:	add	x16, x16, #0x60
 a7c:	br	x17

0000000000000a80 <read@plt>:
 a80:	adrp	x16, 12000 <builtin_error>
 a84:	ldr	x17, [x16, #104]
 a88:	add	x16, x16, #0x68
 a8c:	br	x17

0000000000000a90 <__errno_location@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16, #112]
 a98:	add	x16, x16, #0x70
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <call_weak_fn>:
     aa0:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     aa4:	ldr	x0, [x0, #4048]
     aa8:	cbz	x0, ab0 <call_weak_fn+0x10>
     aac:	b	a30 <__gmon_start__@plt>
     ab0:	ret

0000000000000ab4 <deregister_tm_clones>:
     ab4:	stp	x29, x30, [sp, #-32]!
     ab8:	mov	x29, sp
     abc:	adrp	x0, 12000 <builtin_error>
     ac0:	add	x0, x0, #0xe8
     ac4:	str	x0, [sp, #24]
     ac8:	ldr	x0, [sp, #24]
     acc:	str	x0, [sp, #24]
     ad0:	ldr	x1, [sp, #24]
     ad4:	adrp	x0, 12000 <builtin_error>
     ad8:	add	x0, x0, #0xe8
     adc:	cmp	x1, x0
     ae0:	b.eq	b18 <deregister_tm_clones+0x64>  // b.none
     ae4:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     ae8:	ldr	x0, [x0, #4024]
     aec:	str	x0, [sp, #16]
     af0:	ldr	x0, [sp, #16]
     af4:	str	x0, [sp, #16]
     af8:	ldr	x0, [sp, #16]
     afc:	cmp	x0, #0x0
     b00:	b.eq	b1c <deregister_tm_clones+0x68>  // b.none
     b04:	ldr	x1, [sp, #16]
     b08:	adrp	x0, 12000 <builtin_error>
     b0c:	add	x0, x0, #0xe8
     b10:	blr	x1
     b14:	b	b1c <deregister_tm_clones+0x68>
     b18:	nop
     b1c:	ldp	x29, x30, [sp], #32
     b20:	ret

0000000000000b24 <register_tm_clones>:
     b24:	stp	x29, x30, [sp, #-48]!
     b28:	mov	x29, sp
     b2c:	adrp	x0, 12000 <builtin_error>
     b30:	add	x0, x0, #0xe8
     b34:	str	x0, [sp, #40]
     b38:	ldr	x0, [sp, #40]
     b3c:	str	x0, [sp, #40]
     b40:	ldr	x1, [sp, #40]
     b44:	adrp	x0, 12000 <builtin_error>
     b48:	add	x0, x0, #0xe8
     b4c:	sub	x0, x1, x0
     b50:	asr	x0, x0, #3
     b54:	lsr	x1, x0, #63
     b58:	add	x0, x1, x0
     b5c:	asr	x0, x0, #1
     b60:	str	x0, [sp, #32]
     b64:	ldr	x0, [sp, #32]
     b68:	cmp	x0, #0x0
     b6c:	b.eq	ba8 <register_tm_clones+0x84>  // b.none
     b70:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     b74:	ldr	x0, [x0, #4064]
     b78:	str	x0, [sp, #24]
     b7c:	ldr	x0, [sp, #24]
     b80:	str	x0, [sp, #24]
     b84:	ldr	x0, [sp, #24]
     b88:	cmp	x0, #0x0
     b8c:	b.eq	bac <register_tm_clones+0x88>  // b.none
     b90:	ldr	x2, [sp, #24]
     b94:	ldr	x1, [sp, #32]
     b98:	adrp	x0, 12000 <builtin_error>
     b9c:	add	x0, x0, #0xe8
     ba0:	blr	x2
     ba4:	b	bac <register_tm_clones+0x88>
     ba8:	nop
     bac:	ldp	x29, x30, [sp], #48
     bb0:	ret

0000000000000bb4 <__do_global_dtors_aux>:
     bb4:	stp	x29, x30, [sp, #-16]!
     bb8:	mov	x29, sp
     bbc:	adrp	x0, 12000 <builtin_error>
     bc0:	add	x0, x0, #0xe8
     bc4:	ldrb	w0, [x0]
     bc8:	and	x0, x0, #0xff
     bcc:	cmp	x0, #0x0
     bd0:	b.ne	c0c <__do_global_dtors_aux+0x58>  // b.any
     bd4:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     bd8:	ldr	x0, [x0, #4032]
     bdc:	cmp	x0, #0x0
     be0:	b.eq	bf4 <__do_global_dtors_aux+0x40>  // b.none
     be4:	adrp	x0, 12000 <builtin_error>
     be8:	add	x0, x0, #0x78
     bec:	ldr	x0, [x0]
     bf0:	bl	9c0 <__cxa_finalize@plt>
     bf4:	bl	ab4 <deregister_tm_clones>
     bf8:	adrp	x0, 12000 <builtin_error>
     bfc:	add	x0, x0, #0xe8
     c00:	mov	w1, #0x1                   	// #1
     c04:	strb	w1, [x0]
     c08:	b	c10 <__do_global_dtors_aux+0x5c>
     c0c:	nop
     c10:	ldp	x29, x30, [sp], #16
     c14:	ret

0000000000000c18 <frame_dummy>:
     c18:	stp	x29, x30, [sp, #-16]!
     c1c:	mov	x29, sp
     c20:	bl	b24 <register_tm_clones>
     c24:	nop
     c28:	ldp	x29, x30, [sp], #16
     c2c:	ret

0000000000000c30 <tee_builtin>:
     c30:	stp	x29, x30, [sp, #-112]!
     c34:	mov	x29, sp
     c38:	str	x19, [sp, #16]
     c3c:	str	x0, [sp, #40]
     c40:	bl	a70 <reset_internal_getopt@plt>
     c44:	str	wzr, [sp, #104]
     c48:	ldr	w0, [sp, #104]
     c4c:	str	w0, [sp, #108]
     c50:	adrp	x0, 12000 <builtin_error>
     c54:	add	x0, x0, #0xf0
     c58:	str	xzr, [x0]
     c5c:	b	cc0 <tee_builtin+0x90>
     c60:	ldr	w0, [sp, #76]
     c64:	cmp	w0, #0x69
     c68:	b.eq	c9c <tee_builtin+0x6c>  // b.none
     c6c:	ldr	w0, [sp, #76]
     c70:	cmp	w0, #0x69
     c74:	b.gt	cb4 <tee_builtin+0x84>
     c78:	ldr	w0, [sp, #76]
     c7c:	cmn	w0, #0x63
     c80:	b.eq	ca8 <tee_builtin+0x78>  // b.none
     c84:	ldr	w0, [sp, #76]
     c88:	cmp	w0, #0x61
     c8c:	b.ne	cb4 <tee_builtin+0x84>  // b.any
     c90:	mov	w0, #0x1                   	// #1
     c94:	str	w0, [sp, #108]
     c98:	b	cc0 <tee_builtin+0x90>
     c9c:	mov	w0, #0x1                   	// #1
     ca0:	str	w0, [sp, #104]
     ca4:	b	cc0 <tee_builtin+0x90>
     ca8:	bl	9d0 <builtin_help@plt>
     cac:	mov	w0, #0x102                 	// #258
     cb0:	b	1034 <tee_builtin+0x404>
     cb4:	bl	a00 <builtin_usage@plt>
     cb8:	mov	w0, #0x102                 	// #258
     cbc:	b	1034 <tee_builtin+0x404>
     cc0:	adrp	x0, 1000 <tee_builtin+0x3d0>
     cc4:	add	x1, x0, #0x50
     cc8:	ldr	x0, [sp, #40]
     ccc:	bl	a60 <internal_getopt@plt>
     cd0:	str	w0, [sp, #76]
     cd4:	ldr	w0, [sp, #76]
     cd8:	cmn	w0, #0x1
     cdc:	b.ne	c60 <tee_builtin+0x30>  // b.any
     ce0:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     ce4:	ldr	x0, [x0, #4056]
     ce8:	ldr	x0, [x0]
     cec:	str	x0, [sp, #40]
     cf0:	ldr	w0, [sp, #104]
     cf4:	cmp	w0, #0x0
     cf8:	b.ne	d18 <tee_builtin+0xe8>  // b.any
     cfc:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     d00:	ldr	x0, [x0, #4040]
     d04:	ldr	w0, [x0]
     d08:	add	w1, w0, #0x1
     d0c:	adrp	x0, 11000 <__FRAME_END__+0xfd14>
     d10:	ldr	x0, [x0, #4040]
     d14:	str	w1, [x0]
     d18:	mov	x0, #0x2000                	// #8192
     d1c:	bl	9f0 <xmalloc@plt>
     d20:	str	x0, [sp, #64]
     d24:	mov	x0, #0x18                  	// #24
     d28:	bl	9f0 <xmalloc@plt>
     d2c:	mov	x1, x0
     d30:	adrp	x0, 12000 <builtin_error>
     d34:	add	x0, x0, #0xf0
     d38:	str	x1, [x0]
     d3c:	adrp	x0, 12000 <builtin_error>
     d40:	add	x0, x0, #0xf0
     d44:	ldr	x0, [x0]
     d48:	str	x0, [sp, #88]
     d4c:	adrp	x0, 12000 <builtin_error>
     d50:	add	x0, x0, #0xf0
     d54:	ldr	x0, [x0]
     d58:	mov	w1, #0x1                   	// #1
     d5c:	str	w1, [x0, #8]
     d60:	adrp	x0, 12000 <builtin_error>
     d64:	add	x0, x0, #0xf0
     d68:	ldr	x0, [x0]
     d6c:	adrp	x1, 1000 <tee_builtin+0x3d0>
     d70:	add	x1, x1, #0x58
     d74:	str	x1, [x0, #16]
     d78:	adrp	x0, 12000 <builtin_error>
     d7c:	add	x0, x0, #0xf0
     d80:	ldr	x0, [x0]
     d84:	str	xzr, [x0]
     d88:	ldr	w0, [sp, #108]
     d8c:	cmp	w0, #0x0
     d90:	b.eq	d9c <tee_builtin+0x16c>  // b.none
     d94:	mov	w0, #0x441                 	// #1089
     d98:	b	da0 <tee_builtin+0x170>
     d9c:	mov	w0, #0x241                 	// #577
     da0:	str	w0, [sp, #60]
     da4:	str	wzr, [sp, #100]
     da8:	b	e68 <tee_builtin+0x238>
     dac:	ldr	x0, [sp, #40]
     db0:	ldr	x0, [x0, #8]
     db4:	ldr	x0, [x0]
     db8:	mov	w2, #0x1b6                 	// #438
     dbc:	ldr	w1, [sp, #60]
     dc0:	bl	9e0 <open@plt>
     dc4:	str	w0, [sp, #48]
     dc8:	ldr	w0, [sp, #48]
     dcc:	cmp	w0, #0x0
     dd0:	b.ge	e0c <tee_builtin+0x1dc>  // b.tcont
     dd4:	ldr	x0, [sp, #40]
     dd8:	ldr	x0, [x0, #8]
     ddc:	ldr	x19, [x0]
     de0:	bl	a90 <__errno_location@plt>
     de4:	ldr	w0, [x0]
     de8:	bl	a10 <strerror@plt>
     dec:	mov	x2, x0
     df0:	mov	x1, x19
     df4:	adrp	x0, 1000 <tee_builtin+0x3d0>
     df8:	add	x0, x0, #0x60
     dfc:	bl	9b0 <builtin_error@plt>
     e00:	mov	w0, #0x1                   	// #1
     e04:	str	w0, [sp, #100]
     e08:	b	e5c <tee_builtin+0x22c>
     e0c:	mov	x0, #0x18                  	// #24
     e10:	bl	9f0 <xmalloc@plt>
     e14:	mov	x1, x0
     e18:	ldr	x0, [sp, #88]
     e1c:	str	x1, [x0]
     e20:	ldr	x0, [sp, #88]
     e24:	ldr	x0, [x0]
     e28:	ldr	w1, [sp, #48]
     e2c:	str	w1, [x0, #8]
     e30:	ldr	x0, [sp, #40]
     e34:	ldr	x1, [x0, #8]
     e38:	ldr	x0, [sp, #88]
     e3c:	ldr	x0, [x0]
     e40:	ldr	x1, [x1]
     e44:	str	x1, [x0, #16]
     e48:	ldr	x0, [sp, #88]
     e4c:	ldr	x0, [x0]
     e50:	str	x0, [sp, #88]
     e54:	ldr	x0, [sp, #88]
     e58:	str	xzr, [x0]
     e5c:	ldr	x0, [sp, #40]
     e60:	ldr	x0, [x0]
     e64:	str	x0, [sp, #40]
     e68:	ldr	x0, [sp, #40]
     e6c:	cmp	x0, #0x0
     e70:	b.ne	dac <tee_builtin+0x17c>  // b.any
     e74:	b	f3c <tee_builtin+0x30c>
     e78:	adrp	x0, 12000 <builtin_error>
     e7c:	add	x0, x0, #0xf0
     e80:	ldr	x0, [x0]
     e84:	str	x0, [sp, #88]
     e88:	b	f30 <tee_builtin+0x300>
     e8c:	ldr	w0, [sp, #56]
     e90:	str	w0, [sp, #96]
     e94:	ldr	x0, [sp, #64]
     e98:	str	x0, [sp, #80]
     e9c:	ldr	x0, [sp, #88]
     ea0:	ldr	w0, [x0, #8]
     ea4:	ldrsw	x1, [sp, #96]
     ea8:	mov	x2, x1
     eac:	ldr	x1, [sp, #80]
     eb0:	bl	a40 <write@plt>
     eb4:	str	w0, [sp, #52]
     eb8:	ldr	w0, [sp, #52]
     ebc:	cmn	w0, #0x1
     ec0:	b.ne	ef8 <tee_builtin+0x2c8>  // b.any
     ec4:	ldr	x0, [sp, #88]
     ec8:	ldr	x19, [x0, #16]
     ecc:	bl	a90 <__errno_location@plt>
     ed0:	ldr	w0, [x0]
     ed4:	bl	a10 <strerror@plt>
     ed8:	mov	x2, x0
     edc:	mov	x1, x19
     ee0:	adrp	x0, 1000 <tee_builtin+0x3d0>
     ee4:	add	x0, x0, #0x78
     ee8:	bl	9b0 <builtin_error@plt>
     eec:	mov	w0, #0x1                   	// #1
     ef0:	str	w0, [sp, #100]
     ef4:	b	f24 <tee_builtin+0x2f4>
     ef8:	ldrsw	x0, [sp, #52]
     efc:	ldr	x1, [sp, #80]
     f00:	add	x0, x1, x0
     f04:	str	x0, [sp, #80]
     f08:	ldr	w1, [sp, #96]
     f0c:	ldr	w0, [sp, #52]
     f10:	sub	w0, w1, w0
     f14:	str	w0, [sp, #96]
     f18:	ldr	w0, [sp, #96]
     f1c:	cmp	w0, #0x0
     f20:	b.ne	e9c <tee_builtin+0x26c>  // b.any
     f24:	ldr	x0, [sp, #88]
     f28:	ldr	x0, [x0]
     f2c:	str	x0, [sp, #88]
     f30:	ldr	x0, [sp, #88]
     f34:	cmp	x0, #0x0
     f38:	b.ne	e8c <tee_builtin+0x25c>  // b.any
     f3c:	mov	x2, #0x2000                	// #8192
     f40:	ldr	x1, [sp, #64]
     f44:	mov	w0, #0x0                   	// #0
     f48:	bl	a80 <read@plt>
     f4c:	str	w0, [sp, #56]
     f50:	ldr	w0, [sp, #56]
     f54:	cmp	w0, #0x0
     f58:	b.gt	e78 <tee_builtin+0x248>
     f5c:	ldr	w0, [sp, #56]
     f60:	cmp	w0, #0x0
     f64:	b.ge	f84 <tee_builtin+0x354>  // b.tcont
     f68:	bl	a90 <__errno_location@plt>
     f6c:	ldr	w0, [x0]
     f70:	bl	a10 <strerror@plt>
     f74:	mov	x1, x0
     f78:	adrp	x0, 1000 <tee_builtin+0x3d0>
     f7c:	add	x0, x0, #0x90
     f80:	bl	9b0 <builtin_error@plt>
     f84:	adrp	x0, 12000 <builtin_error>
     f88:	add	x0, x0, #0xf0
     f8c:	ldr	x0, [x0]
     f90:	ldr	x1, [x0]
     f94:	adrp	x0, 12000 <builtin_error>
     f98:	add	x0, x0, #0xf0
     f9c:	str	x1, [x0]
     fa0:	b	101c <tee_builtin+0x3ec>
     fa4:	adrp	x0, 12000 <builtin_error>
     fa8:	add	x0, x0, #0xf0
     fac:	ldr	x0, [x0]
     fb0:	str	x0, [sp, #88]
     fb4:	ldr	x0, [sp, #88]
     fb8:	ldr	w0, [x0, #8]
     fbc:	bl	a20 <close@plt>
     fc0:	cmp	w0, #0x0
     fc4:	b.ge	ff8 <tee_builtin+0x3c8>  // b.tcont
     fc8:	ldr	x0, [sp, #88]
     fcc:	ldr	x19, [x0, #16]
     fd0:	bl	a90 <__errno_location@plt>
     fd4:	ldr	w0, [x0]
     fd8:	bl	a10 <strerror@plt>
     fdc:	mov	x2, x0
     fe0:	mov	x1, x19
     fe4:	adrp	x0, 1000 <tee_builtin+0x3d0>
     fe8:	add	x0, x0, #0xa0
     fec:	bl	9b0 <builtin_error@plt>
     ff0:	mov	w0, #0x1                   	// #1
     ff4:	str	w0, [sp, #100]
     ff8:	adrp	x0, 12000 <builtin_error>
     ffc:	add	x0, x0, #0xf0
    1000:	ldr	x0, [x0]
    1004:	ldr	x1, [x0]
    1008:	adrp	x0, 12000 <builtin_error>
    100c:	add	x0, x0, #0xf0
    1010:	str	x1, [x0]
    1014:	ldr	x0, [sp, #88]
    1018:	bl	a50 <free@plt>
    101c:	adrp	x0, 12000 <builtin_error>
    1020:	add	x0, x0, #0xf0
    1024:	ldr	x0, [x0]
    1028:	cmp	x0, #0x0
    102c:	b.ne	fa4 <tee_builtin+0x374>  // b.any
    1030:	ldr	w0, [sp, #100]
    1034:	ldr	x19, [sp, #16]
    1038:	ldp	x29, x30, [sp], #112
    103c:	ret

Disassembly of section .fini:

0000000000001040 <_fini>:
    1040:	stp	x29, x30, [sp, #-16]!
    1044:	mov	x29, sp
    1048:	ldp	x29, x30, [sp], #16
    104c:	ret
