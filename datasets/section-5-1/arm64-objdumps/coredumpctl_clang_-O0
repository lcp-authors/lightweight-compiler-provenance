
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//coredumpctl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004024a8 <.init>:
  4024a8:	stp	x29, x30, [sp, #-16]!
  4024ac:	mov	x29, sp
  4024b0:	bl	402b90 <safe_fork_full@plt+0x60>
  4024b4:	ldp	x29, x30, [sp], #16
  4024b8:	ret

Disassembly of section .plt:

00000000004024c0 <__libc_start_main@plt-0x20>:
  4024c0:	stp	x16, x30, [sp, #-16]!
  4024c4:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4024c8:	ldr	x17, [x16, #3272]
  4024cc:	add	x16, x16, #0xcc8
  4024d0:	br	x17
  4024d4:	nop
  4024d8:	nop
  4024dc:	nop

00000000004024e0 <__libc_start_main@plt>:
  4024e0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4024e4:	ldr	x17, [x16, #3280]
  4024e8:	add	x16, x16, #0xcd0
  4024ec:	br	x17

00000000004024f0 <abort@plt>:
  4024f0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4024f4:	ldr	x17, [x16, #3288]
  4024f8:	add	x16, x16, #0xcd8
  4024fc:	br	x17

0000000000402500 <__gmon_start__@plt>:
  402500:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402504:	ldr	x17, [x16, #3296]
  402508:	add	x16, x16, #0xce0
  40250c:	br	x17

0000000000402510 <ask_password_agent_close@plt>:
  402510:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402514:	ldr	x17, [x16, #3304]
  402518:	add	x16, x16, #0xce8
  40251c:	br	x17

0000000000402520 <polkit_agent_close@plt>:
  402520:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402524:	ldr	x17, [x16, #3312]
  402528:	add	x16, x16, #0xcf0
  40252c:	br	x17

0000000000402530 <pager_close@plt>:
  402530:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402534:	ldr	x17, [x16, #3320]
  402538:	add	x16, x16, #0xcf8
  40253c:	br	x17

0000000000402540 <mac_selinux_finish@plt>:
  402540:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402544:	ldr	x17, [x16, #3328]
  402548:	add	x16, x16, #0xd00
  40254c:	br	x17

0000000000402550 <setlocale@plt>:
  402550:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402554:	ldr	x17, [x16, #3336]
  402558:	add	x16, x16, #0xd08
  40255c:	br	x17

0000000000402560 <log_show_color@plt>:
  402560:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402564:	ldr	x17, [x16, #3344]
  402568:	add	x16, x16, #0xd10
  40256c:	br	x17

0000000000402570 <log_parse_environment_realm@plt>:
  402570:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402574:	ldr	x17, [x16, #3352]
  402578:	add	x16, x16, #0xd18
  40257c:	br	x17

0000000000402580 <log_open@plt>:
  402580:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402584:	ldr	x17, [x16, #3360]
  402588:	add	x16, x16, #0xd20
  40258c:	br	x17

0000000000402590 <rlimit_nofile_bump@plt>:
  402590:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402594:	ldr	x17, [x16, #3368]
  402598:	add	x16, x16, #0xd28
  40259c:	br	x17

00000000004025a0 <sigbus_install@plt>:
  4025a0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4025a4:	ldr	x17, [x16, #3376]
  4025a8:	add	x16, x16, #0xd30
  4025ac:	br	x17

00000000004025b0 <printf@plt>:
  4025b0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4025b4:	ldr	x17, [x16, #3384]
  4025b8:	add	x16, x16, #0xd38
  4025bc:	br	x17

00000000004025c0 <log_assert_failed_realm@plt>:
  4025c0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4025c4:	ldr	x17, [x16, #3392]
  4025c8:	add	x16, x16, #0xd40
  4025cc:	br	x17

00000000004025d0 <getopt_long@plt>:
  4025d0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4025d4:	ldr	x17, [x16, #3400]
  4025d8:	add	x16, x16, #0xd48
  4025dc:	br	x17

00000000004025e0 <version@plt>:
  4025e0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4025e4:	ldr	x17, [x16, #3408]
  4025e8:	add	x16, x16, #0xd50
  4025ec:	br	x17

00000000004025f0 <log_get_max_level_realm@plt>:
  4025f0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4025f4:	ldr	x17, [x16, #3416]
  4025f8:	add	x16, x16, #0xd58
  4025fc:	br	x17

0000000000402600 <log_internal_realm@plt>:
  402600:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402604:	ldr	x17, [x16, #3424]
  402608:	add	x16, x16, #0xd60
  40260c:	br	x17

0000000000402610 <abs@plt>:
  402610:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402614:	ldr	x17, [x16, #3432]
  402618:	add	x16, x16, #0xd68
  40261c:	br	x17

0000000000402620 <parse_timestamp@plt>:
  402620:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402624:	ldr	x17, [x16, #3440]
  402628:	add	x16, x16, #0xd70
  40262c:	br	x17

0000000000402630 <log_assert_failed_unreachable_realm@plt>:
  402630:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402634:	ldr	x17, [x16, #3448]
  402638:	add	x16, x16, #0xd78
  40263c:	br	x17

0000000000402640 <sd_bus_default_system@plt>:
  402640:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402644:	ldr	x17, [x16, #3456]
  402648:	add	x16, x16, #0xd80
  40264c:	br	x17

0000000000402650 <sd_bus_message_new_method_call@plt>:
  402650:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402654:	ldr	x17, [x16, #3464]
  402658:	add	x16, x16, #0xd88
  40265c:	br	x17

0000000000402660 <sd_bus_message_append_strv@plt>:
  402660:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402664:	ldr	x17, [x16, #3472]
  402668:	add	x16, x16, #0xd90
  40266c:	br	x17

0000000000402670 <sd_bus_call@plt>:
  402670:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402674:	ldr	x17, [x16, #3480]
  402678:	add	x16, x16, #0xd98
  40267c:	br	x17

0000000000402680 <bus_error_message@plt>:
  402680:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402684:	ldr	x17, [x16, #3488]
  402688:	add	x16, x16, #0xda0
  40268c:	br	x17

0000000000402690 <sd_bus_message_enter_container@plt>:
  402690:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402694:	ldr	x17, [x16, #3496]
  402698:	add	x16, x16, #0xda8
  40269c:	br	x17

00000000004026a0 <sd_bus_message_read@plt>:
  4026a0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4026a4:	ldr	x17, [x16, #3504]
  4026a8:	add	x16, x16, #0xdb0
  4026ac:	br	x17

00000000004026b0 <strv_find@plt>:
  4026b0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4026b4:	ldr	x17, [x16, #3512]
  4026b8:	add	x16, x16, #0xdb8
  4026bc:	br	x17

00000000004026c0 <sd_bus_message_exit_container@plt>:
  4026c0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4026c4:	ldr	x17, [x16, #3520]
  4026c8:	add	x16, x16, #0xdc0
  4026cc:	br	x17

00000000004026d0 <sd_bus_error_free@plt>:
  4026d0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4026d4:	ldr	x17, [x16, #3528]
  4026d8:	add	x16, x16, #0xdc8
  4026dc:	br	x17

00000000004026e0 <dispatch_verb@plt>:
  4026e0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4026e4:	ldr	x17, [x16, #3536]
  4026e8:	add	x16, x16, #0xdd0
  4026ec:	br	x17

00000000004026f0 <colors_enabled@plt>:
  4026f0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4026f4:	ldr	x17, [x16, #3544]
  4026f8:	add	x16, x16, #0xdd8
  4026fc:	br	x17

0000000000402700 <terminal_urlify_man@plt>:
  402700:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402704:	ldr	x17, [x16, #3552]
  402708:	add	x16, x16, #0xde0
  40270c:	br	x17

0000000000402710 <log_oom_internal@plt>:
  402710:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402714:	ldr	x17, [x16, #3560]
  402718:	add	x16, x16, #0xde8
  40271c:	br	x17

0000000000402720 <free@plt>:
  402720:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402724:	ldr	x17, [x16, #3568]
  402728:	add	x16, x16, #0xdf0
  40272c:	br	x17

0000000000402730 <sd_bus_flush_close_unref@plt>:
  402730:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402734:	ldr	x17, [x16, #3576]
  402738:	add	x16, x16, #0xdf8
  40273c:	br	x17

0000000000402740 <sd_bus_message_unref@plt>:
  402740:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402744:	ldr	x17, [x16, #3584]
  402748:	add	x16, x16, #0xe00
  40274c:	br	x17

0000000000402750 <strcmp@plt>:
  402750:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402754:	ldr	x17, [x16, #3592]
  402758:	add	x16, x16, #0xe08
  40275c:	br	x17

0000000000402760 <pager_open@plt>:
  402760:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402764:	ldr	x17, [x16, #3600]
  402768:	add	x16, x16, #0xe10
  40276c:	br	x17

0000000000402770 <sd_journal_set_data_threshold@plt>:
  402770:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402774:	ldr	x17, [x16, #3608]
  402778:	add	x16, x16, #0xe18
  40277c:	br	x17

0000000000402780 <sd_journal_seek_realtime_usec@plt>:
  402780:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402784:	ldr	x17, [x16, #3616]
  402788:	add	x16, x16, #0xe20
  40278c:	br	x17

0000000000402790 <sd_journal_seek_tail@plt>:
  402790:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402794:	ldr	x17, [x16, #3624]
  402798:	add	x16, x16, #0xe28
  40279c:	br	x17

00000000004027a0 <sd_journal_seek_head@plt>:
  4027a0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4027a4:	ldr	x17, [x16, #3632]
  4027a8:	add	x16, x16, #0xe30
  4027ac:	br	x17

00000000004027b0 <sd_journal_next@plt>:
  4027b0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4027b4:	ldr	x17, [x16, #3640]
  4027b8:	add	x16, x16, #0xe38
  4027bc:	br	x17

00000000004027c0 <sd_journal_previous@plt>:
  4027c0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4027c4:	ldr	x17, [x16, #3648]
  4027c8:	add	x16, x16, #0xe40
  4027cc:	br	x17

00000000004027d0 <sd_journal_get_realtime_usec@plt>:
  4027d0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4027d4:	ldr	x17, [x16, #3656]
  4027d8:	add	x16, x16, #0xe48
  4027dc:	br	x17

00000000004027e0 <fopen64@plt>:
  4027e0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4027e4:	ldr	x17, [x16, #3664]
  4027e8:	add	x16, x16, #0xe50
  4027ec:	br	x17

00000000004027f0 <__errno_location@plt>:
  4027f0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4027f4:	ldr	x17, [x16, #3672]
  4027f8:	add	x16, x16, #0xe58
  4027fc:	br	x17

0000000000402800 <getenv@plt>:
  402800:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402804:	ldr	x17, [x16, #3680]
  402808:	add	x16, x16, #0xe60
  40280c:	br	x17

0000000000402810 <strdup@plt>:
  402810:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402814:	ldr	x17, [x16, #3688]
  402818:	add	x16, x16, #0xe68
  40281c:	br	x17

0000000000402820 <fputs@plt>:
  402820:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402824:	ldr	x17, [x16, #3696]
  402828:	add	x16, x16, #0xe70
  40282c:	br	x17

0000000000402830 <sd_journal_get_data@plt>:
  402830:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402834:	ldr	x17, [x16, #3704]
  402838:	add	x16, x16, #0xe78
  40283c:	br	x17

0000000000402840 <strndup@plt>:
  402840:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402844:	ldr	x17, [x16, #3712]
  402848:	add	x16, x16, #0xe80
  40284c:	br	x17

0000000000402850 <endswith@plt>:
  402850:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402854:	ldr	x17, [x16, #3720]
  402858:	add	x16, x16, #0xe88
  40285c:	br	x17

0000000000402860 <path_is_absolute@plt>:
  402860:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402864:	ldr	x17, [x16, #3728]
  402868:	add	x16, x16, #0xe90
  40286c:	br	x17

0000000000402870 <ignore_signals@plt>:
  402870:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402874:	ldr	x17, [x16, #3736]
  402878:	add	x16, x16, #0xe98
  40287c:	br	x17

0000000000402880 <strlen@plt>:
  402880:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402884:	ldr	x17, [x16, #3744]
  402888:	add	x16, x16, #0xea0
  40288c:	br	x17

0000000000402890 <stpcpy@plt>:
  402890:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402894:	ldr	x17, [x16, #3752]
  402898:	add	x16, x16, #0xea8
  40289c:	br	x17

00000000004028a0 <execlp@plt>:
  4028a0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4028a4:	ldr	x17, [x16, #3760]
  4028a8:	add	x16, x16, #0xeb0
  4028ac:	br	x17

00000000004028b0 <_exit@plt>:
  4028b0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4028b4:	ldr	x17, [x16, #3768]
  4028b8:	add	x16, x16, #0xeb8
  4028bc:	br	x17

00000000004028c0 <wait_for_terminate_and_check@plt>:
  4028c0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4028c4:	ldr	x17, [x16, #3776]
  4028c8:	add	x16, x16, #0xec0
  4028cc:	br	x17

00000000004028d0 <default_signals@plt>:
  4028d0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4028d4:	ldr	x17, [x16, #3784]
  4028d8:	add	x16, x16, #0xec8
  4028dc:	br	x17

00000000004028e0 <unlink@plt>:
  4028e0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4028e4:	ldr	x17, [x16, #3792]
  4028e8:	add	x16, x16, #0xed0
  4028ec:	br	x17

00000000004028f0 <sd_journal_close@plt>:
  4028f0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4028f4:	ldr	x17, [x16, #3800]
  4028f8:	add	x16, x16, #0xed8
  4028fc:	br	x17

0000000000402900 <sd_journal_open_directory@plt>:
  402900:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402904:	ldr	x17, [x16, #3808]
  402908:	add	x16, x16, #0xee0
  40290c:	br	x17

0000000000402910 <sd_journal_open@plt>:
  402910:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402914:	ldr	x17, [x16, #3816]
  402918:	add	x16, x16, #0xee8
  40291c:	br	x17

0000000000402920 <journal_access_check_and_warn@plt>:
  402920:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402924:	ldr	x17, [x16, #3824]
  402928:	add	x16, x16, #0xef0
  40292c:	br	x17

0000000000402930 <journal_make_match_string@plt>:
  402930:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402934:	ldr	x17, [x16, #3832]
  402938:	add	x16, x16, #0xef8
  40293c:	br	x17

0000000000402940 <sd_journal_add_match@plt>:
  402940:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402944:	ldr	x17, [x16, #3840]
  402948:	add	x16, x16, #0xf00
  40294c:	br	x17

0000000000402950 <strchr@plt>:
  402950:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402954:	ldr	x17, [x16, #3848]
  402958:	add	x16, x16, #0xf08
  40295c:	br	x17

0000000000402960 <path_make_absolute_cwd@plt>:
  402960:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402964:	ldr	x17, [x16, #3856]
  402968:	add	x16, x16, #0xf10
  40296c:	br	x17

0000000000402970 <parse_pid@plt>:
  402970:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402974:	ldr	x17, [x16, #3864]
  402978:	add	x16, x16, #0xf18
  40297c:	br	x17

0000000000402980 <sd_journal_restart_data@plt>:
  402980:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402984:	ldr	x17, [x16, #3872]
  402988:	add	x16, x16, #0xf20
  40298c:	br	x17

0000000000402990 <sd_journal_enumerate_data@plt>:
  402990:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402994:	ldr	x17, [x16, #3880]
  402998:	add	x16, x16, #0xf28
  40299c:	br	x17

00000000004029a0 <fprintf@plt>:
  4029a0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4029a4:	ldr	x17, [x16, #3888]
  4029a8:	add	x16, x16, #0xf30
  4029ac:	br	x17

00000000004029b0 <parse_uid@plt>:
  4029b0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4029b4:	ldr	x17, [x16, #3896]
  4029b8:	add	x16, x16, #0xf38
  4029bc:	br	x17

00000000004029c0 <uid_to_name@plt>:
  4029c0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4029c4:	ldr	x17, [x16, #3904]
  4029c8:	add	x16, x16, #0xf40
  4029cc:	br	x17

00000000004029d0 <gid_to_name@plt>:
  4029d0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4029d4:	ldr	x17, [x16, #3912]
  4029d8:	add	x16, x16, #0xf48
  4029dc:	br	x17

00000000004029e0 <safe_atoi@plt>:
  4029e0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4029e4:	ldr	x17, [x16, #3920]
  4029e8:	add	x16, x16, #0xf50
  4029ec:	br	x17

00000000004029f0 <signal_to_string@plt>:
  4029f0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  4029f4:	ldr	x17, [x16, #3928]
  4029f8:	add	x16, x16, #0xf58
  4029fc:	br	x17

0000000000402a00 <format_timestamp@plt>:
  402a00:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a04:	ldr	x17, [x16, #3936]
  402a08:	add	x16, x16, #0xf60
  402a0c:	br	x17

0000000000402a10 <format_timestamp_relative@plt>:
  402a10:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a14:	ldr	x17, [x16, #3944]
  402a18:	add	x16, x16, #0xf68
  402a1c:	br	x17

0000000000402a20 <access@plt>:
  402a20:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a24:	ldr	x17, [x16, #3952]
  402a28:	add	x16, x16, #0xf70
  402a2c:	br	x17

0000000000402a30 <parse_boolean@plt>:
  402a30:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a34:	ldr	x17, [x16, #3960]
  402a38:	add	x16, x16, #0xf78
  402a3c:	br	x17

0000000000402a40 <strreplace@plt>:
  402a40:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a44:	ldr	x17, [x16, #3968]
  402a48:	add	x16, x16, #0xf80
  402a4c:	br	x17

0000000000402a50 <strstrip@plt>:
  402a50:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a54:	ldr	x17, [x16, #3976]
  402a58:	add	x16, x16, #0xf88
  402a5c:	br	x17

0000000000402a60 <memcmp@plt>:
  402a60:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a64:	ldr	x17, [x16, #3984]
  402a68:	add	x16, x16, #0xf90
  402a6c:	br	x17

0000000000402a70 <strcmp_ptr@plt>:
  402a70:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a74:	ldr	x17, [x16, #3992]
  402a78:	add	x16, x16, #0xf98
  402a7c:	br	x17

0000000000402a80 <safe_atollu@plt>:
  402a80:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a84:	ldr	x17, [x16, #4000]
  402a88:	add	x16, x16, #0xfa0
  402a8c:	br	x17

0000000000402a90 <safe_fclose@plt>:
  402a90:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402a94:	ldr	x17, [x16, #4008]
  402a98:	add	x16, x16, #0xfa8
  402a9c:	br	x17

0000000000402aa0 <var_tmp_dir@plt>:
  402aa0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402aa4:	ldr	x17, [x16, #4016]
  402aa8:	add	x16, x16, #0xfb0
  402aac:	br	x17

0000000000402ab0 <path_join_internal@plt>:
  402ab0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402ab4:	ldr	x17, [x16, #4024]
  402ab8:	add	x16, x16, #0xfb8
  402abc:	br	x17

0000000000402ac0 <mkostemp_safe@plt>:
  402ac0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402ac4:	ldr	x17, [x16, #4032]
  402ac8:	add	x16, x16, #0xfc0
  402acc:	br	x17

0000000000402ad0 <on_tty@plt>:
  402ad0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402ad4:	ldr	x17, [x16, #4040]
  402ad8:	add	x16, x16, #0xfc8
  402adc:	br	x17

0000000000402ae0 <fileno@plt>:
  402ae0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402ae4:	ldr	x17, [x16, #4048]
  402ae8:	add	x16, x16, #0xfd0
  402aec:	br	x17

0000000000402af0 <open64@plt>:
  402af0:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402af4:	ldr	x17, [x16, #4056]
  402af8:	add	x16, x16, #0xfd8
  402afc:	br	x17

0000000000402b00 <decompress_stream@plt>:
  402b00:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402b04:	ldr	x17, [x16, #4064]
  402b08:	add	x16, x16, #0xfe0
  402b0c:	br	x17

0000000000402b10 <write@plt>:
  402b10:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402b14:	ldr	x17, [x16, #4072]
  402b18:	add	x16, x16, #0xfe8
  402b1c:	br	x17

0000000000402b20 <safe_close@plt>:
  402b20:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402b24:	ldr	x17, [x16, #4080]
  402b28:	add	x16, x16, #0xff0
  402b2c:	br	x17

0000000000402b30 <safe_fork_full@plt>:
  402b30:	adrp	x16, 41f000 <safe_fork_full@plt+0x1c4d0>
  402b34:	ldr	x17, [x16, #4088]
  402b38:	add	x16, x16, #0xff8
  402b3c:	br	x17

Disassembly of section .text:

0000000000402b40 <.text>:
  402b40:	mov	x29, #0x0                   	// #0
  402b44:	mov	x30, #0x0                   	// #0
  402b48:	mov	x5, x0
  402b4c:	ldr	x1, [sp]
  402b50:	add	x2, sp, #0x8
  402b54:	mov	x6, sp
  402b58:	movz	x0, #0x0, lsl #48
  402b5c:	movk	x0, #0x0, lsl #32
  402b60:	movk	x0, #0x40, lsl #16
  402b64:	movk	x0, #0x2d08
  402b68:	movz	x3, #0x0, lsl #48
  402b6c:	movk	x3, #0x0, lsl #32
  402b70:	movk	x3, #0x40, lsl #16
  402b74:	movk	x3, #0x8c38
  402b78:	movz	x4, #0x0, lsl #48
  402b7c:	movk	x4, #0x0, lsl #32
  402b80:	movk	x4, #0x40, lsl #16
  402b84:	movk	x4, #0x8cb8
  402b88:	bl	4024e0 <__libc_start_main@plt>
  402b8c:	bl	4024f0 <abort@plt>
  402b90:	adrp	x0, 41f000 <safe_fork_full@plt+0x1c4d0>
  402b94:	ldr	x0, [x0, #3232]
  402b98:	cbz	x0, 402ba0 <safe_fork_full@plt+0x70>
  402b9c:	b	402500 <__gmon_start__@plt>
  402ba0:	ret
  402ba4:	stp	x29, x30, [sp, #-32]!
  402ba8:	mov	x29, sp
  402bac:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402bb0:	add	x0, x0, #0x0
  402bb4:	str	x0, [sp, #24]
  402bb8:	ldr	x0, [sp, #24]
  402bbc:	str	x0, [sp, #24]
  402bc0:	ldr	x1, [sp, #24]
  402bc4:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402bc8:	add	x0, x0, #0x0
  402bcc:	cmp	x1, x0
  402bd0:	b.eq	402c0c <safe_fork_full@plt+0xdc>  // b.none
  402bd4:	adrp	x0, 408000 <safe_fork_full@plt+0x54d0>
  402bd8:	add	x0, x0, #0xcd0
  402bdc:	ldr	x0, [x0]
  402be0:	str	x0, [sp, #16]
  402be4:	ldr	x0, [sp, #16]
  402be8:	str	x0, [sp, #16]
  402bec:	ldr	x0, [sp, #16]
  402bf0:	cmp	x0, #0x0
  402bf4:	b.eq	402c10 <safe_fork_full@plt+0xe0>  // b.none
  402bf8:	ldr	x1, [sp, #16]
  402bfc:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402c00:	add	x0, x0, #0x0
  402c04:	blr	x1
  402c08:	b	402c10 <safe_fork_full@plt+0xe0>
  402c0c:	nop
  402c10:	ldp	x29, x30, [sp], #32
  402c14:	ret
  402c18:	stp	x29, x30, [sp, #-48]!
  402c1c:	mov	x29, sp
  402c20:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402c24:	add	x0, x0, #0x0
  402c28:	str	x0, [sp, #40]
  402c2c:	ldr	x0, [sp, #40]
  402c30:	str	x0, [sp, #40]
  402c34:	ldr	x1, [sp, #40]
  402c38:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402c3c:	add	x0, x0, #0x0
  402c40:	sub	x0, x1, x0
  402c44:	asr	x0, x0, #3
  402c48:	lsr	x1, x0, #63
  402c4c:	add	x0, x1, x0
  402c50:	asr	x0, x0, #1
  402c54:	str	x0, [sp, #32]
  402c58:	ldr	x0, [sp, #32]
  402c5c:	cmp	x0, #0x0
  402c60:	b.eq	402ca0 <safe_fork_full@plt+0x170>  // b.none
  402c64:	adrp	x0, 408000 <safe_fork_full@plt+0x54d0>
  402c68:	add	x0, x0, #0xcd8
  402c6c:	ldr	x0, [x0]
  402c70:	str	x0, [sp, #24]
  402c74:	ldr	x0, [sp, #24]
  402c78:	str	x0, [sp, #24]
  402c7c:	ldr	x0, [sp, #24]
  402c80:	cmp	x0, #0x0
  402c84:	b.eq	402ca4 <safe_fork_full@plt+0x174>  // b.none
  402c88:	ldr	x2, [sp, #24]
  402c8c:	ldr	x1, [sp, #32]
  402c90:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402c94:	add	x0, x0, #0x0
  402c98:	blr	x2
  402c9c:	b	402ca4 <safe_fork_full@plt+0x174>
  402ca0:	nop
  402ca4:	ldp	x29, x30, [sp], #48
  402ca8:	ret
  402cac:	stp	x29, x30, [sp, #-16]!
  402cb0:	mov	x29, sp
  402cb4:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402cb8:	add	x0, x0, #0x48
  402cbc:	ldrb	w0, [x0]
  402cc0:	and	x0, x0, #0xff
  402cc4:	cmp	x0, #0x0
  402cc8:	b.ne	402ce4 <safe_fork_full@plt+0x1b4>  // b.any
  402ccc:	bl	402ba4 <safe_fork_full@plt+0x74>
  402cd0:	adrp	x0, 420000 <safe_fork_full@plt+0x1d4d0>
  402cd4:	add	x0, x0, #0x48
  402cd8:	mov	w1, #0x1                   	// #1
  402cdc:	strb	w1, [x0]
  402ce0:	b	402ce8 <safe_fork_full@plt+0x1b8>
  402ce4:	nop
  402ce8:	ldp	x29, x30, [sp], #16
  402cec:	ret
  402cf0:	stp	x29, x30, [sp, #-16]!
  402cf4:	mov	x29, sp
  402cf8:	bl	402c18 <safe_fork_full@plt+0xe8>
  402cfc:	nop
  402d00:	ldp	x29, x30, [sp], #16
  402d04:	ret
  402d08:	sub	sp, sp, #0x30
  402d0c:	stp	x29, x30, [sp, #32]
  402d10:	add	x29, sp, #0x20
  402d14:	stur	wzr, [x29, #-4]
  402d18:	stur	w0, [x29, #-8]
  402d1c:	str	x1, [sp, #16]
  402d20:	ldur	w0, [x29, #-8]
  402d24:	ldr	x1, [sp, #16]
  402d28:	bl	402d88 <safe_fork_full@plt+0x258>
  402d2c:	ldur	w0, [x29, #-8]
  402d30:	ldr	x1, [sp, #16]
  402d34:	bl	402dbc <safe_fork_full@plt+0x28c>
  402d38:	str	w0, [sp, #12]
  402d3c:	bl	402510 <ask_password_agent_close@plt>
  402d40:	bl	402520 <polkit_agent_close@plt>
  402d44:	bl	402530 <pager_close@plt>
  402d48:	bl	402540 <mac_selinux_finish@plt>
  402d4c:	bl	402ef4 <safe_fork_full@plt+0x3c4>
  402d50:	ldr	w8, [sp, #12]
  402d54:	cmp	w8, #0x0
  402d58:	cset	w8, ge  // ge = tcont
  402d5c:	tbnz	w8, #0, 402d6c <safe_fork_full@plt+0x23c>
  402d60:	mov	w8, #0x1                   	// #1
  402d64:	str	w8, [sp, #8]
  402d68:	b	402d74 <safe_fork_full@plt+0x244>
  402d6c:	ldr	w8, [sp, #12]
  402d70:	str	w8, [sp, #8]
  402d74:	ldr	w8, [sp, #8]
  402d78:	mov	w0, w8
  402d7c:	ldp	x29, x30, [sp, #32]
  402d80:	add	sp, sp, #0x30
  402d84:	ret
  402d88:	sub	sp, sp, #0x10
  402d8c:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  402d90:	add	x8, x8, #0x88
  402d94:	adrp	x9, 420000 <safe_fork_full@plt+0x1d4d0>
  402d98:	add	x9, x9, #0x90
  402d9c:	str	w0, [sp, #12]
  402da0:	str	x1, [sp]
  402da4:	ldr	w10, [sp, #12]
  402da8:	str	w10, [x8]
  402dac:	ldr	x8, [sp]
  402db0:	str	x8, [x9]
  402db4:	add	sp, sp, #0x10
  402db8:	ret
  402dbc:	sub	sp, sp, #0x60
  402dc0:	stp	x29, x30, [sp, #80]
  402dc4:	add	x29, sp, #0x50
  402dc8:	mov	w8, #0x6                   	// #6
  402dcc:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  402dd0:	add	x9, x9, #0xf48
  402dd4:	mov	w10, wzr
  402dd8:	mov	w11, #0x80000               	// #524288
  402ddc:	mov	w12, #0x1                   	// #1
  402de0:	stur	w0, [x29, #-8]
  402de4:	stur	x1, [x29, #-16]
  402de8:	mov	w0, w8
  402dec:	mov	x1, x9
  402df0:	stur	w10, [x29, #-28]
  402df4:	stur	w11, [x29, #-32]
  402df8:	stur	w12, [x29, #-36]
  402dfc:	bl	402550 <setlocale@plt>
  402e00:	ldur	w8, [x29, #-36]
  402e04:	and	w10, w8, #0x1
  402e08:	mov	w0, w10
  402e0c:	bl	402560 <log_show_color@plt>
  402e10:	ldur	w0, [x29, #-28]
  402e14:	bl	402570 <log_parse_environment_realm@plt>
  402e18:	bl	402580 <log_open@plt>
  402e1c:	ldur	w8, [x29, #-32]
  402e20:	mov	w0, w8
  402e24:	bl	402590 <rlimit_nofile_bump@plt>
  402e28:	ldur	w8, [x29, #-8]
  402e2c:	ldur	x1, [x29, #-16]
  402e30:	mov	w0, w8
  402e34:	bl	402f74 <safe_fork_full@plt+0x444>
  402e38:	stur	w0, [x29, #-20]
  402e3c:	ldur	w8, [x29, #-20]
  402e40:	cmp	w8, #0x0
  402e44:	cset	w8, gt
  402e48:	tbnz	w8, #0, 402e58 <safe_fork_full@plt+0x328>
  402e4c:	ldur	w8, [x29, #-20]
  402e50:	stur	w8, [x29, #-4]
  402e54:	b	402ee4 <safe_fork_full@plt+0x3b4>
  402e58:	bl	4025a0 <sigbus_install@plt>
  402e5c:	bl	40360c <safe_fork_full@plt+0xadc>
  402e60:	stur	w0, [x29, #-24]
  402e64:	ldur	w0, [x29, #-8]
  402e68:	ldur	x1, [x29, #-16]
  402e6c:	bl	403df0 <safe_fork_full@plt+0x12c0>
  402e70:	stur	w0, [x29, #-20]
  402e74:	ldur	w8, [x29, #-24]
  402e78:	cmp	w8, #0x0
  402e7c:	cset	w8, le
  402e80:	tbnz	w8, #0, 402edc <safe_fork_full@plt+0x3ac>
  402e84:	bl	403e2c <safe_fork_full@plt+0x12fc>
  402e88:	ldur	w2, [x29, #-24]
  402e8c:	ldur	w8, [x29, #-24]
  402e90:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  402e94:	add	x9, x9, #0xfa4
  402e98:	adrp	x10, 408000 <safe_fork_full@plt+0x54d0>
  402e9c:	add	x10, x10, #0xf94
  402ea0:	cmp	w8, #0x1
  402ea4:	csel	x3, x10, x9, eq  // eq = none
  402ea8:	str	x0, [sp, #32]
  402eac:	str	w2, [sp, #28]
  402eb0:	str	x3, [sp, #16]
  402eb4:	bl	403e70 <safe_fork_full@plt+0x1340>
  402eb8:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  402ebc:	add	x9, x9, #0xf49
  402ec0:	str	x0, [sp, #8]
  402ec4:	mov	x0, x9
  402ec8:	ldr	x1, [sp, #32]
  402ecc:	ldr	w2, [sp, #28]
  402ed0:	ldr	x3, [sp, #16]
  402ed4:	ldr	x4, [sp, #8]
  402ed8:	bl	4025b0 <printf@plt>
  402edc:	ldur	w8, [x29, #-20]
  402ee0:	stur	w8, [x29, #-4]
  402ee4:	ldur	w0, [x29, #-4]
  402ee8:	ldp	x29, x30, [sp, #80]
  402eec:	add	sp, sp, #0x60
  402ef0:	ret
  402ef4:	sub	sp, sp, #0x20
  402ef8:	stp	x29, x30, [sp, #16]
  402efc:	add	x29, sp, #0x10
  402f00:	adrp	x8, 41f000 <safe_fork_full@plt+0x1c4d0>
  402f04:	ldr	x8, [x8, #3240]
  402f08:	str	x8, [sp]
  402f0c:	cbnz	x8, 402f14 <safe_fork_full@plt+0x3e4>
  402f10:	b	402f68 <safe_fork_full@plt+0x438>
  402f14:	ldr	x0, [sp]
  402f18:	mov	x1, #0x8                   	// #8
  402f1c:	bl	408c04 <safe_fork_full@plt+0x60d4>
  402f20:	str	x0, [sp, #8]
  402f24:	ldr	x8, [sp, #8]
  402f28:	adrp	x9, 41f000 <safe_fork_full@plt+0x1c4d0>
  402f2c:	ldr	x9, [x9, #3248]
  402f30:	cmp	x8, x9
  402f34:	b.cs	402f68 <safe_fork_full@plt+0x438>  // b.hs, b.nlast
  402f38:	ldr	x8, [sp, #8]
  402f3c:	ldr	x8, [x8, #8]
  402f40:	ldr	x9, [sp, #8]
  402f44:	ldr	x0, [x9]
  402f48:	blr	x8
  402f4c:	ldr	x8, [sp, #8]
  402f50:	add	x8, x8, #0x10
  402f54:	mov	x0, x8
  402f58:	mov	x1, #0x8                   	// #8
  402f5c:	bl	408c04 <safe_fork_full@plt+0x60d4>
  402f60:	str	x0, [sp, #8]
  402f64:	b	402f24 <safe_fork_full@plt+0x3f4>
  402f68:	ldp	x29, x30, [sp, #16]
  402f6c:	add	sp, sp, #0x20
  402f70:	ret
  402f74:	sub	sp, sp, #0xc0
  402f78:	stp	x29, x30, [sp, #176]
  402f7c:	add	x29, sp, #0xb0
  402f80:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  402f84:	add	x8, x8, #0x0
  402f88:	adrp	x9, 420000 <safe_fork_full@plt+0x1d4d0>
  402f8c:	add	x9, x9, #0x8
  402f90:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  402f94:	add	x10, x10, #0x1a
  402f98:	add	x10, x10, #0x3
  402f9c:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  402fa0:	add	x11, x11, #0x69
  402fa4:	adrp	x12, 420000 <safe_fork_full@plt+0x1d4d0>
  402fa8:	add	x12, x12, #0x98
  402fac:	adrp	x13, 409000 <safe_fork_full@plt+0x64d0>
  402fb0:	add	x13, x13, #0x38
  402fb4:	stur	w0, [x29, #-8]
  402fb8:	stur	x1, [x29, #-16]
  402fbc:	str	x8, [sp, #64]
  402fc0:	str	x9, [sp, #56]
  402fc4:	str	x10, [sp, #48]
  402fc8:	str	x11, [sp, #40]
  402fcc:	str	x12, [sp, #32]
  402fd0:	str	x13, [sp, #24]
  402fd4:	ldur	w8, [x29, #-8]
  402fd8:	cmp	w8, #0x0
  402fdc:	cset	w8, ge  // ge = tcont
  402fe0:	mov	w9, #0x1                   	// #1
  402fe4:	eor	w8, w8, #0x1
  402fe8:	eor	w8, w8, w9
  402fec:	eor	w8, w8, w9
  402ff0:	and	w8, w8, #0x1
  402ff4:	mov	w0, w8
  402ff8:	sxtw	x10, w0
  402ffc:	cbz	x10, 403020 <safe_fork_full@plt+0x4f0>
  403000:	mov	w8, wzr
  403004:	mov	w0, w8
  403008:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  40300c:	add	x1, x1, #0x10
  403010:	ldr	x2, [sp, #48]
  403014:	mov	w3, #0xcd                  	// #205
  403018:	ldr	x4, [sp, #24]
  40301c:	bl	4025c0 <log_assert_failed_realm@plt>
  403020:	ldur	x8, [x29, #-16]
  403024:	cmp	x8, #0x0
  403028:	cset	w9, ne  // ne = any
  40302c:	mov	w10, #0x1                   	// #1
  403030:	eor	w9, w9, #0x1
  403034:	eor	w9, w9, w10
  403038:	eor	w9, w9, w10
  40303c:	and	w9, w9, #0x1
  403040:	mov	w0, w9
  403044:	sxtw	x8, w0
  403048:	cbz	x8, 40306c <safe_fork_full@plt+0x53c>
  40304c:	mov	w8, wzr
  403050:	mov	w0, w8
  403054:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  403058:	add	x1, x1, #0x55
  40305c:	ldr	x2, [sp, #48]
  403060:	mov	w3, #0xce                  	// #206
  403064:	ldr	x4, [sp, #24]
  403068:	bl	4025c0 <log_assert_failed_realm@plt>
  40306c:	ldur	w0, [x29, #-8]
  403070:	ldur	x1, [x29, #-16]
  403074:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  403078:	add	x2, x2, #0x5a
  40307c:	adrp	x3, 408000 <safe_fork_full@plt+0x54d0>
  403080:	add	x3, x3, #0xce8
  403084:	mov	x8, xzr
  403088:	mov	x4, x8
  40308c:	bl	4025d0 <getopt_long@plt>
  403090:	stur	w0, [x29, #-20]
  403094:	cmp	w0, #0x0
  403098:	cset	w9, lt  // lt = tstop
  40309c:	tbnz	w9, #0, 40352c <safe_fork_full@plt+0x9fc>
  4030a0:	ldur	w8, [x29, #-20]
  4030a4:	cmp	w8, #0x31
  4030a8:	str	w8, [sp, #20]
  4030ac:	b.eq	4034a8 <safe_fork_full@plt+0x978>  // b.none
  4030b0:	b	4030b4 <safe_fork_full@plt+0x584>
  4030b4:	ldr	w8, [sp, #20]
  4030b8:	cmp	w8, #0x3f
  4030bc:	b.eq	4034fc <safe_fork_full@plt+0x9cc>  // b.none
  4030c0:	b	4030c4 <safe_fork_full@plt+0x594>
  4030c4:	ldr	w8, [sp, #20]
  4030c8:	cmp	w8, #0x44
  4030cc:	b.eq	4034bc <safe_fork_full@plt+0x98c>  // b.none
  4030d0:	b	4030d4 <safe_fork_full@plt+0x5a4>
  4030d4:	ldr	w8, [sp, #20]
  4030d8:	cmp	w8, #0x46
  4030dc:	b.eq	4033f8 <safe_fork_full@plt+0x8c8>  // b.none
  4030e0:	b	4030e4 <safe_fork_full@plt+0x5b4>
  4030e4:	ldr	w8, [sp, #20]
  4030e8:	cmp	w8, #0x53
  4030ec:	b.eq	403290 <safe_fork_full@plt+0x760>  // b.none
  4030f0:	b	4030f4 <safe_fork_full@plt+0x5c4>
  4030f4:	ldr	w8, [sp, #20]
  4030f8:	cmp	w8, #0x55
  4030fc:	b.eq	403344 <safe_fork_full@plt+0x814>  // b.none
  403100:	b	403104 <safe_fork_full@plt+0x5d4>
  403104:	ldr	w8, [sp, #20]
  403108:	cmp	w8, #0x68
  40310c:	b.eq	403184 <safe_fork_full@plt+0x654>  // b.none
  403110:	b	403114 <safe_fork_full@plt+0x5e4>
  403114:	ldr	w8, [sp, #20]
  403118:	cmp	w8, #0x6f
  40311c:	b.eq	4031e0 <safe_fork_full@plt+0x6b0>  // b.none
  403120:	b	403124 <safe_fork_full@plt+0x5f4>
  403124:	ldr	w8, [sp, #20]
  403128:	cmp	w8, #0x71
  40312c:	b.eq	4034e8 <safe_fork_full@plt+0x9b8>  // b.none
  403130:	b	403134 <safe_fork_full@plt+0x604>
  403134:	ldr	w8, [sp, #20]
  403138:	cmp	w8, #0x72
  40313c:	b.eq	4034d4 <safe_fork_full@plt+0x9a4>  // b.none
  403140:	b	403144 <safe_fork_full@plt+0x614>
  403144:	ldr	w8, [sp, #20]
  403148:	cmp	w8, #0x100
  40314c:	b.eq	403190 <safe_fork_full@plt+0x660>  // b.none
  403150:	b	403154 <safe_fork_full@plt+0x624>
  403154:	ldr	w8, [sp, #20]
  403158:	cmp	w8, #0x101
  40315c:	b.eq	40319c <safe_fork_full@plt+0x66c>  // b.none
  403160:	b	403164 <safe_fork_full@plt+0x634>
  403164:	ldr	w8, [sp, #20]
  403168:	cmp	w8, #0x102
  40316c:	b.eq	4031b4 <safe_fork_full@plt+0x684>  // b.none
  403170:	b	403174 <safe_fork_full@plt+0x644>
  403174:	ldr	w8, [sp, #20]
  403178:	cmp	w8, #0x103
  40317c:	b.eq	4031c8 <safe_fork_full@plt+0x698>  // b.none
  403180:	b	403508 <safe_fork_full@plt+0x9d8>
  403184:	bl	403eb4 <safe_fork_full@plt+0x1384>
  403188:	stur	w0, [x29, #-4]
  40318c:	b	4035fc <safe_fork_full@plt+0xacc>
  403190:	bl	4025e0 <version@plt>
  403194:	stur	w0, [x29, #-4]
  403198:	b	4035fc <safe_fork_full@plt+0xacc>
  40319c:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4031a0:	add	x8, x8, #0x50
  4031a4:	ldr	w9, [x8]
  4031a8:	orr	w9, w9, #0x1
  4031ac:	str	w9, [x8]
  4031b0:	b	403528 <safe_fork_full@plt+0x9f8>
  4031b4:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4031b8:	add	x8, x8, #0x54
  4031bc:	mov	w9, #0x1                   	// #1
  4031c0:	str	w9, [x8]
  4031c4:	b	403528 <safe_fork_full@plt+0x9f8>
  4031c8:	ldr	x8, [sp, #32]
  4031cc:	ldr	x9, [x8]
  4031d0:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  4031d4:	add	x10, x10, #0x58
  4031d8:	str	x9, [x10]
  4031dc:	b	403528 <safe_fork_full@plt+0x9f8>
  4031e0:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4031e4:	add	x8, x8, #0x60
  4031e8:	ldr	x8, [x8]
  4031ec:	cbz	x8, 403278 <safe_fork_full@plt+0x748>
  4031f0:	mov	w8, #0x3                   	// #3
  4031f4:	stur	w8, [x29, #-28]
  4031f8:	mov	w8, #0x16                  	// #22
  4031fc:	movk	w8, #0x4000, lsl #16
  403200:	stur	w8, [x29, #-32]
  403204:	stur	wzr, [x29, #-36]
  403208:	ldur	w0, [x29, #-36]
  40320c:	bl	4025f0 <log_get_max_level_realm@plt>
  403210:	ldur	w8, [x29, #-28]
  403214:	and	w8, w8, #0x7
  403218:	cmp	w0, w8
  40321c:	b.lt	403250 <safe_fork_full@plt+0x720>  // b.tstop
  403220:	ldur	w8, [x29, #-36]
  403224:	ldur	w9, [x29, #-28]
  403228:	orr	w0, w9, w8, lsl #10
  40322c:	ldur	w1, [x29, #-32]
  403230:	ldr	x2, [sp, #48]
  403234:	mov	w3, #0xe7                  	// #231
  403238:	ldr	x4, [sp, #40]
  40323c:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  403240:	add	x5, x5, #0x74
  403244:	bl	402600 <log_internal_realm@plt>
  403248:	str	w0, [sp, #16]
  40324c:	b	403264 <safe_fork_full@plt+0x734>
  403250:	ldur	w0, [x29, #-32]
  403254:	bl	402610 <abs@plt>
  403258:	mov	w8, wzr
  40325c:	subs	w8, w8, w0, uxtb
  403260:	str	w8, [sp, #16]
  403264:	ldr	w8, [sp, #16]
  403268:	stur	w8, [x29, #-40]
  40326c:	ldur	w8, [x29, #-40]
  403270:	stur	w8, [x29, #-4]
  403274:	b	4035fc <safe_fork_full@plt+0xacc>
  403278:	ldr	x8, [sp, #32]
  40327c:	ldr	x9, [x8]
  403280:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  403284:	add	x10, x10, #0x60
  403288:	str	x9, [x10]
  40328c:	b	403528 <safe_fork_full@plt+0x9f8>
  403290:	ldr	x8, [sp, #32]
  403294:	ldr	x0, [x8]
  403298:	ldr	x1, [sp, #64]
  40329c:	bl	402620 <parse_timestamp@plt>
  4032a0:	stur	w0, [x29, #-24]
  4032a4:	ldur	w9, [x29, #-24]
  4032a8:	cmp	w9, #0x0
  4032ac:	cset	w9, ge  // ge = tcont
  4032b0:	tbnz	w9, #0, 403340 <safe_fork_full@plt+0x810>
  4032b4:	mov	w8, #0x3                   	// #3
  4032b8:	stur	w8, [x29, #-44]
  4032bc:	ldur	w8, [x29, #-24]
  4032c0:	stur	w8, [x29, #-48]
  4032c4:	stur	wzr, [x29, #-52]
  4032c8:	ldur	w0, [x29, #-52]
  4032cc:	bl	4025f0 <log_get_max_level_realm@plt>
  4032d0:	ldur	w8, [x29, #-44]
  4032d4:	and	w8, w8, #0x7
  4032d8:	cmp	w0, w8
  4032dc:	b.lt	403318 <safe_fork_full@plt+0x7e8>  // b.tstop
  4032e0:	ldur	w8, [x29, #-52]
  4032e4:	ldur	w9, [x29, #-44]
  4032e8:	orr	w0, w9, w8, lsl #10
  4032ec:	ldur	w1, [x29, #-48]
  4032f0:	ldr	x10, [sp, #32]
  4032f4:	ldr	x6, [x10]
  4032f8:	ldr	x2, [sp, #48]
  4032fc:	mov	w3, #0xef                  	// #239
  403300:	ldr	x4, [sp, #40]
  403304:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  403308:	add	x5, x5, #0x96
  40330c:	bl	402600 <log_internal_realm@plt>
  403310:	str	w0, [sp, #12]
  403314:	b	40332c <safe_fork_full@plt+0x7fc>
  403318:	ldur	w0, [x29, #-48]
  40331c:	bl	402610 <abs@plt>
  403320:	mov	w8, wzr
  403324:	subs	w8, w8, w0, uxtb
  403328:	str	w8, [sp, #12]
  40332c:	ldr	w8, [sp, #12]
  403330:	stur	w8, [x29, #-56]
  403334:	ldur	w8, [x29, #-56]
  403338:	stur	w8, [x29, #-4]
  40333c:	b	4035fc <safe_fork_full@plt+0xacc>
  403340:	b	403528 <safe_fork_full@plt+0x9f8>
  403344:	ldr	x8, [sp, #32]
  403348:	ldr	x0, [x8]
  40334c:	ldr	x1, [sp, #56]
  403350:	bl	402620 <parse_timestamp@plt>
  403354:	stur	w0, [x29, #-24]
  403358:	ldur	w9, [x29, #-24]
  40335c:	cmp	w9, #0x0
  403360:	cset	w9, ge  // ge = tcont
  403364:	tbnz	w9, #0, 4033f4 <safe_fork_full@plt+0x8c4>
  403368:	mov	w8, #0x3                   	// #3
  40336c:	stur	w8, [x29, #-60]
  403370:	ldur	w8, [x29, #-24]
  403374:	stur	w8, [x29, #-64]
  403378:	stur	wzr, [x29, #-68]
  40337c:	ldur	w0, [x29, #-68]
  403380:	bl	4025f0 <log_get_max_level_realm@plt>
  403384:	ldur	w8, [x29, #-60]
  403388:	and	w8, w8, #0x7
  40338c:	cmp	w0, w8
  403390:	b.lt	4033cc <safe_fork_full@plt+0x89c>  // b.tstop
  403394:	ldur	w8, [x29, #-68]
  403398:	ldur	w9, [x29, #-60]
  40339c:	orr	w0, w9, w8, lsl #10
  4033a0:	ldur	w1, [x29, #-64]
  4033a4:	ldr	x10, [sp, #32]
  4033a8:	ldr	x6, [x10]
  4033ac:	ldr	x2, [sp, #48]
  4033b0:	mov	w3, #0xf5                  	// #245
  4033b4:	ldr	x4, [sp, #40]
  4033b8:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4033bc:	add	x5, x5, #0x96
  4033c0:	bl	402600 <log_internal_realm@plt>
  4033c4:	str	w0, [sp, #8]
  4033c8:	b	4033e0 <safe_fork_full@plt+0x8b0>
  4033cc:	ldur	w0, [x29, #-64]
  4033d0:	bl	402610 <abs@plt>
  4033d4:	mov	w8, wzr
  4033d8:	subs	w8, w8, w0, uxtb
  4033dc:	str	w8, [sp, #8]
  4033e0:	ldr	w8, [sp, #8]
  4033e4:	stur	w8, [x29, #-72]
  4033e8:	ldur	w8, [x29, #-72]
  4033ec:	stur	w8, [x29, #-4]
  4033f0:	b	4035fc <safe_fork_full@plt+0xacc>
  4033f4:	b	403528 <safe_fork_full@plt+0x9f8>
  4033f8:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4033fc:	add	x8, x8, #0x68
  403400:	ldr	x8, [x8]
  403404:	cbz	x8, 403490 <safe_fork_full@plt+0x960>
  403408:	mov	w8, #0x3                   	// #3
  40340c:	stur	w8, [x29, #-76]
  403410:	mov	w8, #0x16                  	// #22
  403414:	movk	w8, #0x4000, lsl #16
  403418:	stur	w8, [x29, #-80]
  40341c:	stur	wzr, [x29, #-84]
  403420:	ldur	w0, [x29, #-84]
  403424:	bl	4025f0 <log_get_max_level_realm@plt>
  403428:	ldur	w8, [x29, #-76]
  40342c:	and	w8, w8, #0x7
  403430:	cmp	w0, w8
  403434:	b.lt	403468 <safe_fork_full@plt+0x938>  // b.tstop
  403438:	ldur	w8, [x29, #-84]
  40343c:	ldur	w9, [x29, #-76]
  403440:	orr	w0, w9, w8, lsl #10
  403444:	ldur	w1, [x29, #-80]
  403448:	ldr	x2, [sp, #48]
  40344c:	mov	w3, #0xfb                  	// #251
  403450:	ldr	x4, [sp, #40]
  403454:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  403458:	add	x5, x5, #0xb9
  40345c:	bl	402600 <log_internal_realm@plt>
  403460:	str	w0, [sp, #4]
  403464:	b	40347c <safe_fork_full@plt+0x94c>
  403468:	ldur	w0, [x29, #-80]
  40346c:	bl	402610 <abs@plt>
  403470:	mov	w8, wzr
  403474:	subs	w8, w8, w0, uxtb
  403478:	str	w8, [sp, #4]
  40347c:	ldr	w8, [sp, #4]
  403480:	str	w8, [sp, #88]
  403484:	ldr	w8, [sp, #88]
  403488:	stur	w8, [x29, #-4]
  40348c:	b	4035fc <safe_fork_full@plt+0xacc>
  403490:	ldr	x8, [sp, #32]
  403494:	ldr	x9, [x8]
  403498:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  40349c:	add	x10, x10, #0x68
  4034a0:	str	x9, [x10]
  4034a4:	b	403528 <safe_fork_full@plt+0x9f8>
  4034a8:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4034ac:	add	x8, x8, #0x70
  4034b0:	mov	w9, #0x1                   	// #1
  4034b4:	str	w9, [x8]
  4034b8:	b	403528 <safe_fork_full@plt+0x9f8>
  4034bc:	ldr	x8, [sp, #32]
  4034c0:	ldr	x9, [x8]
  4034c4:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  4034c8:	add	x10, x10, #0x78
  4034cc:	str	x9, [x10]
  4034d0:	b	403528 <safe_fork_full@plt+0x9f8>
  4034d4:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4034d8:	add	x8, x8, #0x80
  4034dc:	mov	w9, #0x1                   	// #1
  4034e0:	strb	w9, [x8]
  4034e4:	b	403528 <safe_fork_full@plt+0x9f8>
  4034e8:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4034ec:	add	x8, x8, #0x81
  4034f0:	mov	w9, #0x1                   	// #1
  4034f4:	strb	w9, [x8]
  4034f8:	b	403528 <safe_fork_full@plt+0x9f8>
  4034fc:	mov	w8, #0xffffffea            	// #-22
  403500:	stur	w8, [x29, #-4]
  403504:	b	4035fc <safe_fork_full@plt+0xacc>
  403508:	mov	w8, wzr
  40350c:	mov	w0, w8
  403510:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  403514:	add	x1, x1, #0xdf
  403518:	ldr	x2, [sp, #48]
  40351c:	mov	w3, #0x113                 	// #275
  403520:	ldr	x4, [sp, #24]
  403524:	bl	402630 <log_assert_failed_unreachable_realm@plt>
  403528:	b	40306c <safe_fork_full@plt+0x53c>
  40352c:	ldr	x8, [sp, #64]
  403530:	ldr	x9, [x8]
  403534:	mov	x10, #0xffffffffffffffff    	// #-1
  403538:	cmp	x9, x10
  40353c:	b.eq	4035f4 <safe_fork_full@plt+0xac4>  // b.none
  403540:	ldr	x8, [sp, #56]
  403544:	ldr	x9, [x8]
  403548:	mov	x10, #0xffffffffffffffff    	// #-1
  40354c:	cmp	x9, x10
  403550:	b.eq	4035f4 <safe_fork_full@plt+0xac4>  // b.none
  403554:	ldr	x8, [sp, #64]
  403558:	ldr	x9, [x8]
  40355c:	ldr	x10, [sp, #56]
  403560:	ldr	x11, [x10]
  403564:	cmp	x9, x11
  403568:	b.ls	4035f4 <safe_fork_full@plt+0xac4>  // b.plast
  40356c:	mov	w8, #0x3                   	// #3
  403570:	str	w8, [sp, #84]
  403574:	mov	w8, #0x16                  	// #22
  403578:	movk	w8, #0x4000, lsl #16
  40357c:	str	w8, [sp, #80]
  403580:	str	wzr, [sp, #76]
  403584:	ldr	w0, [sp, #76]
  403588:	bl	4025f0 <log_get_max_level_realm@plt>
  40358c:	ldr	w8, [sp, #84]
  403590:	and	w8, w8, #0x7
  403594:	cmp	w0, w8
  403598:	b.lt	4035cc <safe_fork_full@plt+0xa9c>  // b.tstop
  40359c:	ldr	w8, [sp, #76]
  4035a0:	ldr	w9, [sp, #84]
  4035a4:	orr	w0, w9, w8, lsl #10
  4035a8:	ldr	w1, [sp, #80]
  4035ac:	ldr	x2, [sp, #48]
  4035b0:	mov	w3, #0x119                 	// #281
  4035b4:	ldr	x4, [sp, #40]
  4035b8:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4035bc:	add	x5, x5, #0xf0
  4035c0:	bl	402600 <log_internal_realm@plt>
  4035c4:	str	w0, [sp]
  4035c8:	b	4035e0 <safe_fork_full@plt+0xab0>
  4035cc:	ldr	w0, [sp, #80]
  4035d0:	bl	402610 <abs@plt>
  4035d4:	mov	w8, wzr
  4035d8:	subs	w8, w8, w0, uxtb
  4035dc:	str	w8, [sp]
  4035e0:	ldr	w8, [sp]
  4035e4:	str	w8, [sp, #72]
  4035e8:	ldr	w8, [sp, #72]
  4035ec:	stur	w8, [x29, #-4]
  4035f0:	b	4035fc <safe_fork_full@plt+0xacc>
  4035f4:	mov	w8, #0x1                   	// #1
  4035f8:	stur	w8, [x29, #-4]
  4035fc:	ldur	w0, [x29, #-4]
  403600:	ldp	x29, x30, [sp, #176]
  403604:	add	sp, sp, #0xc0
  403608:	ret
  40360c:	sub	sp, sp, #0x1d0
  403610:	stp	x29, x30, [sp, #432]
  403614:	str	x28, [sp, #448]
  403618:	add	x29, sp, #0x1b0
  40361c:	mov	x8, xzr
  403620:	adrp	x9, 420000 <safe_fork_full@plt+0x1d4d0>
  403624:	add	x9, x9, #0x81
  403628:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  40362c:	add	x10, x10, #0x1a
  403630:	add	x10, x10, #0x3
  403634:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  403638:	add	x11, x11, #0x58e
  40363c:	adrp	x12, 409000 <safe_fork_full@plt+0x64d0>
  403640:	add	x12, x12, #0x6b3
  403644:	adrp	x13, 409000 <safe_fork_full@plt+0x64d0>
  403648:	add	x13, x13, #0x623
  40364c:	stur	x8, [x29, #-16]
  403650:	stur	x8, [x29, #-24]
  403654:	stur	xzr, [x29, #-48]
  403658:	stur	xzr, [x29, #-40]
  40365c:	stur	xzr, [x29, #-32]
  403660:	stur	x8, [x29, #-56]
  403664:	stur	wzr, [x29, #-60]
  403668:	ldrb	w14, [x9]
  40366c:	str	x10, [sp, #120]
  403670:	str	x11, [sp, #112]
  403674:	str	x12, [sp, #104]
  403678:	str	x13, [sp, #96]
  40367c:	tbnz	w14, #0, 403684 <safe_fork_full@plt+0xb54>
  403680:	b	403694 <safe_fork_full@plt+0xb64>
  403684:	stur	wzr, [x29, #-4]
  403688:	mov	w8, #0x1                   	// #1
  40368c:	stur	w8, [x29, #-92]
  403690:	b	403dbc <safe_fork_full@plt+0x128c>
  403694:	sub	x0, x29, #0x10
  403698:	bl	402640 <sd_bus_default_system@plt>
  40369c:	stur	w0, [x29, #-64]
  4036a0:	ldur	w8, [x29, #-64]
  4036a4:	cmp	w8, #0x0
  4036a8:	cset	w8, ge  // ge = tcont
  4036ac:	tbnz	w8, #0, 40373c <safe_fork_full@plt+0xc0c>
  4036b0:	mov	w8, #0x3                   	// #3
  4036b4:	stur	w8, [x29, #-96]
  4036b8:	ldur	w8, [x29, #-64]
  4036bc:	stur	w8, [x29, #-100]
  4036c0:	stur	wzr, [x29, #-104]
  4036c4:	ldur	w0, [x29, #-104]
  4036c8:	bl	4025f0 <log_get_max_level_realm@plt>
  4036cc:	ldur	w8, [x29, #-96]
  4036d0:	and	w8, w8, #0x7
  4036d4:	cmp	w0, w8
  4036d8:	b.lt	40370c <safe_fork_full@plt+0xbdc>  // b.tstop
  4036dc:	ldur	w8, [x29, #-104]
  4036e0:	ldur	w9, [x29, #-96]
  4036e4:	orr	w0, w9, w8, lsl #10
  4036e8:	ldur	w1, [x29, #-100]
  4036ec:	ldr	x2, [sp, #120]
  4036f0:	mov	w3, #0x3f4                 	// #1012
  4036f4:	ldr	x4, [sp, #112]
  4036f8:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4036fc:	add	x5, x5, #0x5a1
  403700:	bl	402600 <log_internal_realm@plt>
  403704:	str	w0, [sp, #92]
  403708:	b	403720 <safe_fork_full@plt+0xbf0>
  40370c:	ldur	w0, [x29, #-100]
  403710:	bl	402610 <abs@plt>
  403714:	mov	w8, wzr
  403718:	subs	w8, w8, w0, uxtb
  40371c:	str	w8, [sp, #92]
  403720:	ldr	w8, [sp, #92]
  403724:	stur	w8, [x29, #-108]
  403728:	ldur	w8, [x29, #-108]
  40372c:	stur	w8, [x29, #-4]
  403730:	mov	w8, #0x1                   	// #1
  403734:	stur	w8, [x29, #-92]
  403738:	b	403dbc <safe_fork_full@plt+0x128c>
  40373c:	ldur	x0, [x29, #-16]
  403740:	sub	x1, x29, #0x18
  403744:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  403748:	add	x2, x2, #0x5bb
  40374c:	adrp	x3, 409000 <safe_fork_full@plt+0x64d0>
  403750:	add	x3, x3, #0x5d4
  403754:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  403758:	add	x4, x4, #0x5ee
  40375c:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  403760:	add	x5, x5, #0x60f
  403764:	bl	402650 <sd_bus_message_new_method_call@plt>
  403768:	stur	w0, [x29, #-64]
  40376c:	ldur	w8, [x29, #-64]
  403770:	cmp	w8, #0x0
  403774:	cset	w8, ge  // ge = tcont
  403778:	tbnz	w8, #0, 403804 <safe_fork_full@plt+0xcd4>
  40377c:	mov	w8, #0x3                   	// #3
  403780:	stur	w8, [x29, #-112]
  403784:	ldur	w8, [x29, #-64]
  403788:	stur	w8, [x29, #-116]
  40378c:	stur	wzr, [x29, #-120]
  403790:	ldur	w0, [x29, #-120]
  403794:	bl	4025f0 <log_get_max_level_realm@plt>
  403798:	ldur	w8, [x29, #-112]
  40379c:	and	w8, w8, #0x7
  4037a0:	cmp	w0, w8
  4037a4:	b.lt	4037d4 <safe_fork_full@plt+0xca4>  // b.tstop
  4037a8:	ldur	w8, [x29, #-120]
  4037ac:	ldur	w9, [x29, #-112]
  4037b0:	orr	w0, w9, w8, lsl #10
  4037b4:	ldur	w1, [x29, #-116]
  4037b8:	ldr	x2, [sp, #120]
  4037bc:	mov	w3, #0x3fe                 	// #1022
  4037c0:	ldr	x4, [sp, #112]
  4037c4:	ldr	x5, [sp, #96]
  4037c8:	bl	402600 <log_internal_realm@plt>
  4037cc:	str	w0, [sp, #88]
  4037d0:	b	4037e8 <safe_fork_full@plt+0xcb8>
  4037d4:	ldur	w0, [x29, #-116]
  4037d8:	bl	402610 <abs@plt>
  4037dc:	mov	w8, wzr
  4037e0:	subs	w8, w8, w0, uxtb
  4037e4:	str	w8, [sp, #88]
  4037e8:	ldr	w8, [sp, #88]
  4037ec:	stur	w8, [x29, #-124]
  4037f0:	ldur	w8, [x29, #-124]
  4037f4:	stur	w8, [x29, #-4]
  4037f8:	mov	w8, #0x1                   	// #1
  4037fc:	stur	w8, [x29, #-92]
  403800:	b	403dbc <safe_fork_full@plt+0x128c>
  403804:	ldur	x0, [x29, #-24]
  403808:	mov	x8, xzr
  40380c:	mov	x1, x8
  403810:	bl	402660 <sd_bus_message_append_strv@plt>
  403814:	stur	w0, [x29, #-64]
  403818:	ldur	w9, [x29, #-64]
  40381c:	cmp	w9, #0x0
  403820:	cset	w9, ge  // ge = tcont
  403824:	tbnz	w9, #0, 4038b0 <safe_fork_full@plt+0xd80>
  403828:	mov	w8, #0x3                   	// #3
  40382c:	stur	w8, [x29, #-128]
  403830:	ldur	w8, [x29, #-64]
  403834:	stur	w8, [x29, #-132]
  403838:	stur	wzr, [x29, #-136]
  40383c:	ldur	w0, [x29, #-136]
  403840:	bl	4025f0 <log_get_max_level_realm@plt>
  403844:	ldur	w8, [x29, #-128]
  403848:	and	w8, w8, #0x7
  40384c:	cmp	w0, w8
  403850:	b.lt	403880 <safe_fork_full@plt+0xd50>  // b.tstop
  403854:	ldur	w8, [x29, #-136]
  403858:	ldur	w9, [x29, #-128]
  40385c:	orr	w0, w9, w8, lsl #10
  403860:	ldur	w1, [x29, #-132]
  403864:	ldr	x2, [sp, #120]
  403868:	mov	w3, #0x402                 	// #1026
  40386c:	ldr	x4, [sp, #112]
  403870:	ldr	x5, [sp, #96]
  403874:	bl	402600 <log_internal_realm@plt>
  403878:	str	w0, [sp, #84]
  40387c:	b	403894 <safe_fork_full@plt+0xd64>
  403880:	ldur	w0, [x29, #-132]
  403884:	bl	402610 <abs@plt>
  403888:	mov	w8, wzr
  40388c:	subs	w8, w8, w0, uxtb
  403890:	str	w8, [sp, #84]
  403894:	ldr	w8, [sp, #84]
  403898:	stur	w8, [x29, #-140]
  40389c:	ldur	w8, [x29, #-140]
  4038a0:	stur	w8, [x29, #-4]
  4038a4:	mov	w8, #0x1                   	// #1
  4038a8:	stur	w8, [x29, #-92]
  4038ac:	b	403dbc <safe_fork_full@plt+0x128c>
  4038b0:	ldur	x0, [x29, #-24]
  4038b4:	sub	x8, x29, #0xa0
  4038b8:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  4038bc:	add	x9, x9, #0x644
  4038c0:	stur	x9, [x29, #-160]
  4038c4:	mov	x9, xzr
  4038c8:	str	x9, [x8, #8]
  4038cc:	mov	x1, x8
  4038d0:	bl	402660 <sd_bus_message_append_strv@plt>
  4038d4:	stur	w0, [x29, #-64]
  4038d8:	ldur	w10, [x29, #-64]
  4038dc:	cmp	w10, #0x0
  4038e0:	cset	w10, ge  // ge = tcont
  4038e4:	tbnz	w10, #0, 403970 <safe_fork_full@plt+0xe40>
  4038e8:	mov	w8, #0x3                   	// #3
  4038ec:	stur	w8, [x29, #-164]
  4038f0:	ldur	w8, [x29, #-64]
  4038f4:	stur	w8, [x29, #-168]
  4038f8:	stur	wzr, [x29, #-172]
  4038fc:	ldur	w0, [x29, #-172]
  403900:	bl	4025f0 <log_get_max_level_realm@plt>
  403904:	ldur	w8, [x29, #-164]
  403908:	and	w8, w8, #0x7
  40390c:	cmp	w0, w8
  403910:	b.lt	403940 <safe_fork_full@plt+0xe10>  // b.tstop
  403914:	ldur	w8, [x29, #-172]
  403918:	ldur	w9, [x29, #-164]
  40391c:	orr	w0, w9, w8, lsl #10
  403920:	ldur	w1, [x29, #-168]
  403924:	ldr	x2, [sp, #120]
  403928:	mov	w3, #0x406                 	// #1030
  40392c:	ldr	x4, [sp, #112]
  403930:	ldr	x5, [sp, #96]
  403934:	bl	402600 <log_internal_realm@plt>
  403938:	str	w0, [sp, #80]
  40393c:	b	403954 <safe_fork_full@plt+0xe24>
  403940:	ldur	w0, [x29, #-168]
  403944:	bl	402610 <abs@plt>
  403948:	mov	w8, wzr
  40394c:	subs	w8, w8, w0, uxtb
  403950:	str	w8, [sp, #80]
  403954:	ldr	w8, [sp, #80]
  403958:	stur	w8, [x29, #-176]
  40395c:	ldur	w8, [x29, #-176]
  403960:	stur	w8, [x29, #-4]
  403964:	mov	w8, #0x1                   	// #1
  403968:	stur	w8, [x29, #-92]
  40396c:	b	403dbc <safe_fork_full@plt+0x128c>
  403970:	ldur	x0, [x29, #-16]
  403974:	ldur	x1, [x29, #-24]
  403978:	mov	x2, #0xc6c0                	// #50880
  40397c:	movk	x2, #0x2d, lsl #16
  403980:	sub	x3, x29, #0x30
  403984:	sub	x4, x29, #0x38
  403988:	bl	402670 <sd_bus_call@plt>
  40398c:	stur	w0, [x29, #-64]
  403990:	ldur	w8, [x29, #-64]
  403994:	cmp	w8, #0x0
  403998:	cset	w8, ge  // ge = tcont
  40399c:	tbnz	w8, #0, 403a5c <safe_fork_full@plt+0xf2c>
  4039a0:	mov	w8, #0x3                   	// #3
  4039a4:	stur	w8, [x29, #-180]
  4039a8:	ldur	w8, [x29, #-64]
  4039ac:	stur	w8, [x29, #-184]
  4039b0:	stur	wzr, [x29, #-188]
  4039b4:	ldur	w0, [x29, #-188]
  4039b8:	bl	4025f0 <log_get_max_level_realm@plt>
  4039bc:	ldur	w8, [x29, #-180]
  4039c0:	and	w8, w8, #0x7
  4039c4:	cmp	w0, w8
  4039c8:	b.lt	403a2c <safe_fork_full@plt+0xefc>  // b.tstop
  4039cc:	ldur	w8, [x29, #-188]
  4039d0:	ldur	w9, [x29, #-180]
  4039d4:	orr	w0, w9, w8, lsl #10
  4039d8:	ldur	w1, [x29, #-184]
  4039dc:	ldur	w8, [x29, #-64]
  4039e0:	sub	x10, x29, #0x30
  4039e4:	str	w0, [sp, #76]
  4039e8:	mov	x0, x10
  4039ec:	str	w1, [sp, #72]
  4039f0:	mov	w1, w8
  4039f4:	bl	402680 <bus_error_message@plt>
  4039f8:	ldr	w8, [sp, #76]
  4039fc:	str	x0, [sp, #64]
  403a00:	mov	w0, w8
  403a04:	ldr	w1, [sp, #72]
  403a08:	ldr	x2, [sp, #120]
  403a0c:	mov	w3, #0x40b                 	// #1035
  403a10:	ldr	x4, [sp, #112]
  403a14:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  403a18:	add	x5, x5, #0x65f
  403a1c:	ldr	x6, [sp, #64]
  403a20:	bl	402600 <log_internal_realm@plt>
  403a24:	str	w0, [sp, #60]
  403a28:	b	403a40 <safe_fork_full@plt+0xf10>
  403a2c:	ldur	w0, [x29, #-184]
  403a30:	bl	402610 <abs@plt>
  403a34:	mov	w8, wzr
  403a38:	subs	w8, w8, w0, uxtb
  403a3c:	str	w8, [sp, #60]
  403a40:	ldr	w8, [sp, #60]
  403a44:	stur	w8, [x29, #-192]
  403a48:	ldur	w8, [x29, #-192]
  403a4c:	stur	w8, [x29, #-4]
  403a50:	mov	w8, #0x1                   	// #1
  403a54:	stur	w8, [x29, #-92]
  403a58:	b	403dbc <safe_fork_full@plt+0x128c>
  403a5c:	ldur	x0, [x29, #-56]
  403a60:	mov	w1, #0x61                  	// #97
  403a64:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  403a68:	add	x2, x2, #0x6a6
  403a6c:	bl	402690 <sd_bus_message_enter_container@plt>
  403a70:	stur	w0, [x29, #-64]
  403a74:	ldur	w8, [x29, #-64]
  403a78:	cmp	w8, #0x0
  403a7c:	cset	w8, ge  // ge = tcont
  403a80:	tbnz	w8, #0, 403b0c <safe_fork_full@plt+0xfdc>
  403a84:	mov	w8, #0x3                   	// #3
  403a88:	stur	w8, [x29, #-196]
  403a8c:	ldur	w8, [x29, #-64]
  403a90:	stur	w8, [x29, #-200]
  403a94:	stur	wzr, [x29, #-204]
  403a98:	ldur	w0, [x29, #-204]
  403a9c:	bl	4025f0 <log_get_max_level_realm@plt>
  403aa0:	ldur	w8, [x29, #-196]
  403aa4:	and	w8, w8, #0x7
  403aa8:	cmp	w0, w8
  403aac:	b.lt	403adc <safe_fork_full@plt+0xfac>  // b.tstop
  403ab0:	ldur	w8, [x29, #-204]
  403ab4:	ldur	w9, [x29, #-196]
  403ab8:	orr	w0, w9, w8, lsl #10
  403abc:	ldur	w1, [x29, #-200]
  403ac0:	ldr	x2, [sp, #120]
  403ac4:	mov	w3, #0x40f                 	// #1039
  403ac8:	ldr	x4, [sp, #112]
  403acc:	ldr	x5, [sp, #104]
  403ad0:	bl	402600 <log_internal_realm@plt>
  403ad4:	str	w0, [sp, #56]
  403ad8:	b	403af0 <safe_fork_full@plt+0xfc0>
  403adc:	ldur	w0, [x29, #-200]
  403ae0:	bl	402610 <abs@plt>
  403ae4:	mov	w8, wzr
  403ae8:	subs	w8, w8, w0, uxtb
  403aec:	str	w8, [sp, #56]
  403af0:	ldr	w8, [sp, #56]
  403af4:	stur	w8, [x29, #-208]
  403af8:	ldur	w8, [x29, #-208]
  403afc:	stur	w8, [x29, #-4]
  403b00:	mov	w8, #0x1                   	// #1
  403b04:	stur	w8, [x29, #-92]
  403b08:	b	403dbc <safe_fork_full@plt+0x128c>
  403b0c:	ldur	x0, [x29, #-56]
  403b10:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  403b14:	add	x1, x1, #0x6a6
  403b18:	sub	x2, x29, #0x48
  403b1c:	mov	x8, xzr
  403b20:	mov	x3, x8
  403b24:	mov	x4, x8
  403b28:	sub	x5, x29, #0x50
  403b2c:	sub	x6, x29, #0x58
  403b30:	mov	x7, x8
  403b34:	mov	x9, sp
  403b38:	str	x8, [x9]
  403b3c:	mov	x9, sp
  403b40:	str	x8, [x9, #8]
  403b44:	mov	x9, sp
  403b48:	str	x8, [x9, #16]
  403b4c:	mov	x9, sp
  403b50:	str	x8, [x9, #24]
  403b54:	bl	4026a0 <sd_bus_message_read@plt>
  403b58:	stur	w0, [x29, #-64]
  403b5c:	cmp	w0, #0x0
  403b60:	cset	w10, le
  403b64:	tbnz	w10, #0, 403c70 <safe_fork_full@plt+0x1140>
  403b68:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  403b6c:	add	x8, x8, #0x10
  403b70:	ldr	q0, [x8]
  403b74:	add	x0, sp, #0xb0
  403b78:	str	q0, [sp, #176]
  403b7c:	ldr	q0, [x8, #16]
  403b80:	str	q0, [sp, #192]
  403b84:	ldur	x1, [x29, #-80]
  403b88:	bl	4026b0 <strv_find@plt>
  403b8c:	cmp	x0, #0x0
  403b90:	cset	w9, ne  // ne = any
  403b94:	mov	w10, #0x1                   	// #1
  403b98:	eor	w9, w9, #0x1
  403b9c:	eor	w9, w9, w10
  403ba0:	eor	w9, w9, w10
  403ba4:	and	w9, w9, w10
  403ba8:	sturb	w9, [x29, #-209]
  403bac:	mov	w9, #0x7                   	// #7
  403bb0:	str	w9, [sp, #172]
  403bb4:	str	wzr, [sp, #168]
  403bb8:	str	wzr, [sp, #164]
  403bbc:	ldr	w0, [sp, #164]
  403bc0:	bl	4025f0 <log_get_max_level_realm@plt>
  403bc4:	ldr	w9, [sp, #172]
  403bc8:	and	w9, w9, #0x7
  403bcc:	cmp	w0, w9
  403bd0:	b.lt	403c3c <safe_fork_full@plt+0x110c>  // b.tstop
  403bd4:	ldr	w8, [sp, #164]
  403bd8:	ldr	w9, [sp, #172]
  403bdc:	orr	w0, w9, w8, lsl #10
  403be0:	ldr	w1, [sp, #168]
  403be4:	ldur	x6, [x29, #-72]
  403be8:	ldur	x7, [x29, #-80]
  403bec:	ldur	x10, [x29, #-88]
  403bf0:	ldurb	w8, [x29, #-209]
  403bf4:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  403bf8:	add	x11, x11, #0x709
  403bfc:	adrp	x12, 408000 <safe_fork_full@plt+0x54d0>
  403c00:	add	x12, x12, #0xf48
  403c04:	tst	w8, #0x1
  403c08:	csel	x11, x12, x11, ne  // ne = any
  403c0c:	ldr	x2, [sp, #120]
  403c10:	mov	w3, #0x416                 	// #1046
  403c14:	ldr	x4, [sp, #112]
  403c18:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  403c1c:	add	x5, x5, #0x6e8
  403c20:	mov	x12, sp
  403c24:	str	x10, [x12]
  403c28:	mov	x10, sp
  403c2c:	str	x11, [x10, #8]
  403c30:	bl	402600 <log_internal_realm@plt>
  403c34:	str	w0, [sp, #52]
  403c38:	b	403c50 <safe_fork_full@plt+0x1120>
  403c3c:	ldr	w0, [sp, #168]
  403c40:	bl	402610 <abs@plt>
  403c44:	mov	w8, wzr
  403c48:	subs	w8, w8, w0, uxtb
  403c4c:	str	w8, [sp, #52]
  403c50:	ldr	w8, [sp, #52]
  403c54:	str	w8, [sp, #160]
  403c58:	ldurb	w8, [x29, #-209]
  403c5c:	and	w8, w8, #0x1
  403c60:	ldur	w9, [x29, #-60]
  403c64:	add	w8, w9, w8
  403c68:	stur	w8, [x29, #-60]
  403c6c:	b	403b0c <safe_fork_full@plt+0xfdc>
  403c70:	ldur	w8, [x29, #-64]
  403c74:	cmp	w8, #0x0
  403c78:	cset	w8, ge  // ge = tcont
  403c7c:	tbnz	w8, #0, 403d08 <safe_fork_full@plt+0x11d8>
  403c80:	mov	w8, #0x3                   	// #3
  403c84:	str	w8, [sp, #156]
  403c88:	ldur	w8, [x29, #-64]
  403c8c:	str	w8, [sp, #152]
  403c90:	str	wzr, [sp, #148]
  403c94:	ldr	w0, [sp, #148]
  403c98:	bl	4025f0 <log_get_max_level_realm@plt>
  403c9c:	ldr	w8, [sp, #156]
  403ca0:	and	w8, w8, #0x7
  403ca4:	cmp	w0, w8
  403ca8:	b.lt	403cd8 <safe_fork_full@plt+0x11a8>  // b.tstop
  403cac:	ldr	w8, [sp, #148]
  403cb0:	ldr	w9, [sp, #156]
  403cb4:	orr	w0, w9, w8, lsl #10
  403cb8:	ldr	w1, [sp, #152]
  403cbc:	ldr	x2, [sp, #120]
  403cc0:	mov	w3, #0x41a                 	// #1050
  403cc4:	ldr	x4, [sp, #112]
  403cc8:	ldr	x5, [sp, #104]
  403ccc:	bl	402600 <log_internal_realm@plt>
  403cd0:	str	w0, [sp, #48]
  403cd4:	b	403cec <safe_fork_full@plt+0x11bc>
  403cd8:	ldr	w0, [sp, #152]
  403cdc:	bl	402610 <abs@plt>
  403ce0:	mov	w8, wzr
  403ce4:	subs	w8, w8, w0, uxtb
  403ce8:	str	w8, [sp, #48]
  403cec:	ldr	w8, [sp, #48]
  403cf0:	str	w8, [sp, #144]
  403cf4:	ldr	w8, [sp, #144]
  403cf8:	stur	w8, [x29, #-4]
  403cfc:	mov	w8, #0x1                   	// #1
  403d00:	stur	w8, [x29, #-92]
  403d04:	b	403dbc <safe_fork_full@plt+0x128c>
  403d08:	ldur	x0, [x29, #-56]
  403d0c:	bl	4026c0 <sd_bus_message_exit_container@plt>
  403d10:	stur	w0, [x29, #-64]
  403d14:	ldur	w8, [x29, #-64]
  403d18:	cmp	w8, #0x0
  403d1c:	cset	w8, ge  // ge = tcont
  403d20:	tbnz	w8, #0, 403dac <safe_fork_full@plt+0x127c>
  403d24:	mov	w8, #0x3                   	// #3
  403d28:	str	w8, [sp, #140]
  403d2c:	ldur	w8, [x29, #-64]
  403d30:	str	w8, [sp, #136]
  403d34:	str	wzr, [sp, #132]
  403d38:	ldr	w0, [sp, #132]
  403d3c:	bl	4025f0 <log_get_max_level_realm@plt>
  403d40:	ldr	w8, [sp, #140]
  403d44:	and	w8, w8, #0x7
  403d48:	cmp	w0, w8
  403d4c:	b.lt	403d7c <safe_fork_full@plt+0x124c>  // b.tstop
  403d50:	ldr	w8, [sp, #132]
  403d54:	ldr	w9, [sp, #140]
  403d58:	orr	w0, w9, w8, lsl #10
  403d5c:	ldr	w1, [sp, #136]
  403d60:	ldr	x2, [sp, #120]
  403d64:	mov	w3, #0x41e                 	// #1054
  403d68:	ldr	x4, [sp, #112]
  403d6c:	ldr	x5, [sp, #104]
  403d70:	bl	402600 <log_internal_realm@plt>
  403d74:	str	w0, [sp, #44]
  403d78:	b	403d90 <safe_fork_full@plt+0x1260>
  403d7c:	ldr	w0, [sp, #136]
  403d80:	bl	402610 <abs@plt>
  403d84:	mov	w8, wzr
  403d88:	subs	w8, w8, w0, uxtb
  403d8c:	str	w8, [sp, #44]
  403d90:	ldr	w8, [sp, #44]
  403d94:	str	w8, [sp, #128]
  403d98:	ldr	w8, [sp, #128]
  403d9c:	stur	w8, [x29, #-4]
  403da0:	mov	w8, #0x1                   	// #1
  403da4:	stur	w8, [x29, #-92]
  403da8:	b	403dbc <safe_fork_full@plt+0x128c>
  403dac:	ldur	w8, [x29, #-60]
  403db0:	stur	w8, [x29, #-4]
  403db4:	mov	w8, #0x1                   	// #1
  403db8:	stur	w8, [x29, #-92]
  403dbc:	sub	x0, x29, #0x38
  403dc0:	bl	404034 <safe_fork_full@plt+0x1504>
  403dc4:	sub	x0, x29, #0x30
  403dc8:	bl	4026d0 <sd_bus_error_free@plt>
  403dcc:	sub	x0, x29, #0x18
  403dd0:	bl	404034 <safe_fork_full@plt+0x1504>
  403dd4:	sub	x0, x29, #0x10
  403dd8:	bl	404000 <safe_fork_full@plt+0x14d0>
  403ddc:	ldur	w0, [x29, #-4]
  403de0:	ldr	x28, [sp, #448]
  403de4:	ldp	x29, x30, [sp, #432]
  403de8:	add	sp, sp, #0x1d0
  403dec:	ret
  403df0:	sub	sp, sp, #0x20
  403df4:	stp	x29, x30, [sp, #16]
  403df8:	add	x29, sp, #0x10
  403dfc:	adrp	x2, 408000 <safe_fork_full@plt+0x54d0>
  403e00:	add	x2, x2, #0xe88
  403e04:	mov	x8, xzr
  403e08:	stur	w0, [x29, #-4]
  403e0c:	str	x1, [sp]
  403e10:	ldur	w0, [x29, #-4]
  403e14:	ldr	x1, [sp]
  403e18:	mov	x3, x8
  403e1c:	bl	4026e0 <dispatch_verb@plt>
  403e20:	ldp	x29, x30, [sp, #16]
  403e24:	add	sp, sp, #0x20
  403e28:	ret
  403e2c:	sub	sp, sp, #0x20
  403e30:	stp	x29, x30, [sp, #16]
  403e34:	add	x29, sp, #0x10
  403e38:	adrp	x8, 40a000 <safe_fork_full@plt+0x74d0>
  403e3c:	add	x8, x8, #0x345
  403e40:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  403e44:	add	x9, x9, #0xf48
  403e48:	str	x8, [sp, #8]
  403e4c:	str	x9, [sp]
  403e50:	bl	4026f0 <colors_enabled@plt>
  403e54:	tst	w0, #0x1
  403e58:	ldr	x8, [sp, #8]
  403e5c:	ldr	x9, [sp]
  403e60:	csel	x0, x8, x9, ne  // ne = any
  403e64:	ldp	x29, x30, [sp, #16]
  403e68:	add	sp, sp, #0x20
  403e6c:	ret
  403e70:	sub	sp, sp, #0x20
  403e74:	stp	x29, x30, [sp, #16]
  403e78:	add	x29, sp, #0x10
  403e7c:	adrp	x8, 40a000 <safe_fork_full@plt+0x74d0>
  403e80:	add	x8, x8, #0x34f
  403e84:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  403e88:	add	x9, x9, #0xf48
  403e8c:	str	x8, [sp, #8]
  403e90:	str	x9, [sp]
  403e94:	bl	4026f0 <colors_enabled@plt>
  403e98:	tst	w0, #0x1
  403e9c:	ldr	x8, [sp, #8]
  403ea0:	ldr	x9, [sp]
  403ea4:	csel	x0, x8, x9, ne  // ne = any
  403ea8:	ldp	x29, x30, [sp, #16]
  403eac:	add	sp, sp, #0x20
  403eb0:	ret
  403eb4:	sub	sp, sp, #0x50
  403eb8:	stp	x29, x30, [sp, #64]
  403ebc:	add	x29, sp, #0x40
  403ec0:	mov	x8, xzr
  403ec4:	adrp	x0, 409000 <safe_fork_full@plt+0x64d0>
  403ec8:	add	x0, x0, #0x112
  403ecc:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  403ed0:	add	x1, x1, #0x11e
  403ed4:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  403ed8:	add	x9, x9, #0x1a
  403edc:	add	x9, x9, #0x3
  403ee0:	sub	x2, x29, #0x10
  403ee4:	stur	x8, [x29, #-16]
  403ee8:	str	x9, [sp, #32]
  403eec:	bl	402700 <terminal_urlify_man@plt>
  403ef0:	stur	w0, [x29, #-20]
  403ef4:	ldur	w10, [x29, #-20]
  403ef8:	cmp	w10, #0x0
  403efc:	cset	w10, ge  // ge = tcont
  403f00:	tbnz	w10, #0, 403f30 <safe_fork_full@plt+0x1400>
  403f04:	mov	w8, wzr
  403f08:	mov	w0, w8
  403f0c:	ldr	x1, [sp, #32]
  403f10:	mov	w2, #0x92                  	// #146
  403f14:	adrp	x3, 408000 <safe_fork_full@plt+0x54d0>
  403f18:	add	x3, x3, #0xfb6
  403f1c:	bl	402710 <log_oom_internal@plt>
  403f20:	stur	w0, [x29, #-4]
  403f24:	mov	w8, #0x1                   	// #1
  403f28:	stur	w8, [x29, #-24]
  403f2c:	b	403f7c <safe_fork_full@plt+0x144c>
  403f30:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  403f34:	add	x8, x8, #0xa0
  403f38:	ldr	x1, [x8]
  403f3c:	str	x1, [sp, #24]
  403f40:	bl	403fbc <safe_fork_full@plt+0x148c>
  403f44:	str	x0, [sp, #16]
  403f48:	bl	403e70 <safe_fork_full@plt+0x1340>
  403f4c:	ldur	x4, [x29, #-16]
  403f50:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  403f54:	add	x8, x8, #0x120
  403f58:	str	x0, [sp, #8]
  403f5c:	mov	x0, x8
  403f60:	ldr	x1, [sp, #24]
  403f64:	ldr	x2, [sp, #16]
  403f68:	ldr	x3, [sp, #8]
  403f6c:	bl	4025b0 <printf@plt>
  403f70:	stur	wzr, [x29, #-4]
  403f74:	mov	w9, #0x1                   	// #1
  403f78:	stur	w9, [x29, #-24]
  403f7c:	sub	x0, x29, #0x10
  403f80:	bl	403f94 <safe_fork_full@plt+0x1464>
  403f84:	ldur	w0, [x29, #-4]
  403f88:	ldp	x29, x30, [sp, #64]
  403f8c:	add	sp, sp, #0x50
  403f90:	ret
  403f94:	sub	sp, sp, #0x20
  403f98:	stp	x29, x30, [sp, #16]
  403f9c:	add	x29, sp, #0x10
  403fa0:	str	x0, [sp, #8]
  403fa4:	ldr	x8, [sp, #8]
  403fa8:	ldr	x0, [x8]
  403fac:	bl	402720 <free@plt>
  403fb0:	ldp	x29, x30, [sp, #16]
  403fb4:	add	sp, sp, #0x20
  403fb8:	ret
  403fbc:	sub	sp, sp, #0x20
  403fc0:	stp	x29, x30, [sp, #16]
  403fc4:	add	x29, sp, #0x10
  403fc8:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  403fcc:	add	x8, x8, #0x584
  403fd0:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  403fd4:	add	x9, x9, #0xf48
  403fd8:	str	x8, [sp, #8]
  403fdc:	str	x9, [sp]
  403fe0:	bl	4026f0 <colors_enabled@plt>
  403fe4:	tst	w0, #0x1
  403fe8:	ldr	x8, [sp, #8]
  403fec:	ldr	x9, [sp]
  403ff0:	csel	x0, x8, x9, ne  // ne = any
  403ff4:	ldp	x29, x30, [sp, #16]
  403ff8:	add	sp, sp, #0x20
  403ffc:	ret
  404000:	sub	sp, sp, #0x20
  404004:	stp	x29, x30, [sp, #16]
  404008:	add	x29, sp, #0x10
  40400c:	str	x0, [sp, #8]
  404010:	ldr	x8, [sp, #8]
  404014:	ldr	x8, [x8]
  404018:	cbz	x8, 404028 <safe_fork_full@plt+0x14f8>
  40401c:	ldr	x8, [sp, #8]
  404020:	ldr	x0, [x8]
  404024:	bl	402730 <sd_bus_flush_close_unref@plt>
  404028:	ldp	x29, x30, [sp, #16]
  40402c:	add	sp, sp, #0x20
  404030:	ret
  404034:	sub	sp, sp, #0x20
  404038:	stp	x29, x30, [sp, #16]
  40403c:	add	x29, sp, #0x10
  404040:	str	x0, [sp, #8]
  404044:	ldr	x8, [sp, #8]
  404048:	ldr	x8, [x8]
  40404c:	cbz	x8, 40405c <safe_fork_full@plt+0x152c>
  404050:	ldr	x8, [sp, #8]
  404054:	ldr	x0, [x8]
  404058:	bl	402740 <sd_bus_message_unref@plt>
  40405c:	ldp	x29, x30, [sp, #16]
  404060:	add	sp, sp, #0x20
  404064:	ret
  404068:	sub	sp, sp, #0xe0
  40406c:	stp	x29, x30, [sp, #208]
  404070:	add	x29, sp, #0xd0
  404074:	mov	x8, xzr
  404078:	adrp	x9, 420000 <safe_fork_full@plt+0x1d4d0>
  40407c:	add	x9, x9, #0x0
  404080:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  404084:	add	x10, x10, #0x80
  404088:	adrp	x11, 420000 <safe_fork_full@plt+0x1d4d0>
  40408c:	add	x11, x11, #0x8
  404090:	adrp	x12, 409000 <safe_fork_full@plt+0x64d0>
  404094:	add	x12, x12, #0x1a
  404098:	add	x12, x12, #0x3
  40409c:	adrp	x13, 409000 <safe_fork_full@plt+0x64d0>
  4040a0:	add	x13, x13, #0x727
  4040a4:	stur	w0, [x29, #-8]
  4040a8:	stur	x1, [x29, #-16]
  4040ac:	stur	x2, [x29, #-24]
  4040b0:	stur	x8, [x29, #-32]
  4040b4:	stur	wzr, [x29, #-36]
  4040b8:	ldur	w14, [x29, #-8]
  4040bc:	mov	w15, #0x0                   	// #0
  4040c0:	cmp	w14, #0x1
  4040c4:	str	x9, [sp, #56]
  4040c8:	str	x10, [sp, #48]
  4040cc:	str	x11, [sp, #40]
  4040d0:	str	x12, [sp, #32]
  4040d4:	str	x13, [sp, #24]
  4040d8:	str	w15, [sp, #20]
  4040dc:	b.lt	404100 <safe_fork_full@plt+0x15d0>  // b.tstop
  4040e0:	ldur	x8, [x29, #-16]
  4040e4:	ldr	x0, [x8]
  4040e8:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4040ec:	add	x1, x1, #0x713
  4040f0:	bl	402750 <strcmp@plt>
  4040f4:	cmp	w0, #0x0
  4040f8:	cset	w9, eq  // eq = none
  4040fc:	str	w9, [sp, #20]
  404100:	ldr	w8, [sp, #20]
  404104:	and	w8, w8, #0x1
  404108:	sturb	w8, [x29, #-37]
  40410c:	ldur	x9, [x29, #-16]
  404110:	add	x1, x9, #0x8
  404114:	sub	x0, x29, #0x20
  404118:	bl	405364 <safe_fork_full@plt+0x2834>
  40411c:	stur	w0, [x29, #-44]
  404120:	ldur	w8, [x29, #-44]
  404124:	cmp	w8, #0x0
  404128:	cset	w8, ge  // ge = tcont
  40412c:	tbnz	w8, #0, 404144 <safe_fork_full@plt+0x1614>
  404130:	ldur	w8, [x29, #-44]
  404134:	stur	w8, [x29, #-4]
  404138:	mov	w8, #0x1                   	// #1
  40413c:	stur	w8, [x29, #-48]
  404140:	b	4046cc <safe_fork_full@plt+0x1b9c>
  404144:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  404148:	add	x8, x8, #0x50
  40414c:	ldr	w0, [x8]
  404150:	bl	402760 <pager_open@plt>
  404154:	ldur	x8, [x29, #-32]
  404158:	mov	x0, x8
  40415c:	mov	x1, #0x1000                	// #4096
  404160:	bl	402770 <sd_journal_set_data_threshold@plt>
  404164:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  404168:	add	x8, x8, #0x70
  40416c:	ldr	w9, [x8]
  404170:	cbnz	w9, 40418c <safe_fork_full@plt+0x165c>
  404174:	ldurb	w8, [x29, #-37]
  404178:	tbnz	w8, #0, 404180 <safe_fork_full@plt+0x1650>
  40417c:	b	4041e4 <safe_fork_full@plt+0x16b4>
  404180:	ldur	w8, [x29, #-8]
  404184:	cmp	w8, #0x1
  404188:	b.ne	4041e4 <safe_fork_full@plt+0x16b4>  // b.any
  40418c:	ldur	x0, [x29, #-32]
  404190:	bl	4056f4 <safe_fork_full@plt+0x2bc4>
  404194:	stur	w0, [x29, #-44]
  404198:	ldur	w8, [x29, #-44]
  40419c:	cmp	w8, #0x0
  4041a0:	cset	w8, ge  // ge = tcont
  4041a4:	tbnz	w8, #0, 4041bc <safe_fork_full@plt+0x168c>
  4041a8:	ldur	w8, [x29, #-44]
  4041ac:	stur	w8, [x29, #-4]
  4041b0:	mov	w8, #0x1                   	// #1
  4041b4:	stur	w8, [x29, #-48]
  4041b8:	b	4046cc <safe_fork_full@plt+0x1b9c>
  4041bc:	ldur	x0, [x29, #-32]
  4041c0:	ldurb	w8, [x29, #-37]
  4041c4:	mov	w9, wzr
  4041c8:	mov	w1, w9
  4041cc:	and	w2, w8, #0x1
  4041d0:	bl	405878 <safe_fork_full@plt+0x2d48>
  4041d4:	stur	w0, [x29, #-4]
  4041d8:	mov	w8, #0x1                   	// #1
  4041dc:	stur	w8, [x29, #-48]
  4041e0:	b	4046cc <safe_fork_full@plt+0x1b9c>
  4041e4:	ldr	x8, [sp, #56]
  4041e8:	ldr	x9, [x8]
  4041ec:	mov	x10, #0xffffffffffffffff    	// #-1
  4041f0:	cmp	x9, x10
  4041f4:	b.eq	40421c <safe_fork_full@plt+0x16ec>  // b.none
  4041f8:	ldr	x8, [sp, #48]
  4041fc:	ldrb	w9, [x8]
  404200:	tbnz	w9, #0, 40421c <safe_fork_full@plt+0x16ec>
  404204:	ldur	x0, [x29, #-32]
  404208:	ldr	x8, [sp, #56]
  40420c:	ldr	x1, [x8]
  404210:	bl	402780 <sd_journal_seek_realtime_usec@plt>
  404214:	stur	w0, [x29, #-44]
  404218:	b	404284 <safe_fork_full@plt+0x1754>
  40421c:	ldr	x8, [sp, #40]
  404220:	ldr	x9, [x8]
  404224:	mov	x10, #0xffffffffffffffff    	// #-1
  404228:	cmp	x9, x10
  40422c:	b.eq	404258 <safe_fork_full@plt+0x1728>  // b.none
  404230:	ldr	x8, [sp, #48]
  404234:	ldrb	w9, [x8]
  404238:	tbnz	w9, #0, 404240 <safe_fork_full@plt+0x1710>
  40423c:	b	404258 <safe_fork_full@plt+0x1728>
  404240:	ldur	x0, [x29, #-32]
  404244:	ldr	x8, [sp, #40]
  404248:	ldr	x1, [x8]
  40424c:	bl	402780 <sd_journal_seek_realtime_usec@plt>
  404250:	stur	w0, [x29, #-44]
  404254:	b	404284 <safe_fork_full@plt+0x1754>
  404258:	ldr	x8, [sp, #48]
  40425c:	ldrb	w9, [x8]
  404260:	tbnz	w9, #0, 404268 <safe_fork_full@plt+0x1738>
  404264:	b	404278 <safe_fork_full@plt+0x1748>
  404268:	ldur	x0, [x29, #-32]
  40426c:	bl	402790 <sd_journal_seek_tail@plt>
  404270:	stur	w0, [x29, #-44]
  404274:	b	404284 <safe_fork_full@plt+0x1754>
  404278:	ldur	x0, [x29, #-32]
  40427c:	bl	4027a0 <sd_journal_seek_head@plt>
  404280:	stur	w0, [x29, #-44]
  404284:	ldur	w8, [x29, #-44]
  404288:	cmp	w8, #0x0
  40428c:	cset	w8, ge  // ge = tcont
  404290:	tbnz	w8, #0, 404320 <safe_fork_full@plt+0x17f0>
  404294:	mov	w8, #0x3                   	// #3
  404298:	stur	w8, [x29, #-52]
  40429c:	ldur	w8, [x29, #-44]
  4042a0:	stur	w8, [x29, #-56]
  4042a4:	stur	wzr, [x29, #-60]
  4042a8:	ldur	w0, [x29, #-60]
  4042ac:	bl	4025f0 <log_get_max_level_realm@plt>
  4042b0:	ldur	w8, [x29, #-52]
  4042b4:	and	w8, w8, #0x7
  4042b8:	cmp	w0, w8
  4042bc:	b.lt	4042f0 <safe_fork_full@plt+0x17c0>  // b.tstop
  4042c0:	ldur	w8, [x29, #-60]
  4042c4:	ldur	w9, [x29, #-52]
  4042c8:	orr	w0, w9, w8, lsl #10
  4042cc:	ldur	w1, [x29, #-56]
  4042d0:	ldr	x2, [sp, #32]
  4042d4:	mov	w3, #0x2a8                 	// #680
  4042d8:	ldr	x4, [sp, #24]
  4042dc:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4042e0:	add	x5, x5, #0x731
  4042e4:	bl	402600 <log_internal_realm@plt>
  4042e8:	str	w0, [sp, #16]
  4042ec:	b	404304 <safe_fork_full@plt+0x17d4>
  4042f0:	ldur	w0, [x29, #-56]
  4042f4:	bl	402610 <abs@plt>
  4042f8:	mov	w8, wzr
  4042fc:	subs	w8, w8, w0, uxtb
  404300:	str	w8, [sp, #16]
  404304:	ldr	w8, [sp, #16]
  404308:	stur	w8, [x29, #-64]
  40430c:	ldur	w8, [x29, #-64]
  404310:	stur	w8, [x29, #-4]
  404314:	mov	w8, #0x1                   	// #1
  404318:	stur	w8, [x29, #-48]
  40431c:	b	4046cc <safe_fork_full@plt+0x1b9c>
  404320:	ldr	x8, [sp, #48]
  404324:	ldrb	w9, [x8]
  404328:	tbnz	w9, #0, 40433c <safe_fork_full@plt+0x180c>
  40432c:	ldur	x0, [x29, #-32]
  404330:	bl	4027b0 <sd_journal_next@plt>
  404334:	stur	w0, [x29, #-44]
  404338:	b	404348 <safe_fork_full@plt+0x1818>
  40433c:	ldur	x0, [x29, #-32]
  404340:	bl	4027c0 <sd_journal_previous@plt>
  404344:	stur	w0, [x29, #-44]
  404348:	ldur	w8, [x29, #-44]
  40434c:	cmp	w8, #0x0
  404350:	cset	w8, ge  // ge = tcont
  404354:	tbnz	w8, #0, 4043e4 <safe_fork_full@plt+0x18b4>
  404358:	mov	w8, #0x3                   	// #3
  40435c:	stur	w8, [x29, #-68]
  404360:	ldur	w8, [x29, #-44]
  404364:	stur	w8, [x29, #-72]
  404368:	stur	wzr, [x29, #-76]
  40436c:	ldur	w0, [x29, #-76]
  404370:	bl	4025f0 <log_get_max_level_realm@plt>
  404374:	ldur	w8, [x29, #-68]
  404378:	and	w8, w8, #0x7
  40437c:	cmp	w0, w8
  404380:	b.lt	4043b4 <safe_fork_full@plt+0x1884>  // b.tstop
  404384:	ldur	w8, [x29, #-76]
  404388:	ldur	w9, [x29, #-68]
  40438c:	orr	w0, w9, w8, lsl #10
  404390:	ldur	w1, [x29, #-72]
  404394:	ldr	x2, [sp, #32]
  404398:	mov	w3, #0x2b1                 	// #689
  40439c:	ldr	x4, [sp, #24]
  4043a0:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4043a4:	add	x5, x5, #0x74c
  4043a8:	bl	402600 <log_internal_realm@plt>
  4043ac:	str	w0, [sp, #12]
  4043b0:	b	4043c8 <safe_fork_full@plt+0x1898>
  4043b4:	ldur	w0, [x29, #-72]
  4043b8:	bl	402610 <abs@plt>
  4043bc:	mov	w8, wzr
  4043c0:	subs	w8, w8, w0, uxtb
  4043c4:	str	w8, [sp, #12]
  4043c8:	ldr	w8, [sp, #12]
  4043cc:	stur	w8, [x29, #-80]
  4043d0:	ldur	w8, [x29, #-80]
  4043d4:	stur	w8, [x29, #-4]
  4043d8:	mov	w8, #0x1                   	// #1
  4043dc:	stur	w8, [x29, #-48]
  4043e0:	b	4046cc <safe_fork_full@plt+0x1b9c>
  4043e4:	ldur	w8, [x29, #-44]
  4043e8:	cbnz	w8, 4043f0 <safe_fork_full@plt+0x18c0>
  4043ec:	b	404608 <safe_fork_full@plt+0x1ad8>
  4043f0:	ldr	x8, [sp, #40]
  4043f4:	ldr	x9, [x8]
  4043f8:	mov	x10, #0xffffffffffffffff    	// #-1
  4043fc:	cmp	x9, x10
  404400:	b.eq	4044d4 <safe_fork_full@plt+0x19a4>  // b.none
  404404:	ldr	x8, [sp, #48]
  404408:	ldrb	w9, [x8]
  40440c:	tbnz	w9, #0, 4044d4 <safe_fork_full@plt+0x19a4>
  404410:	ldur	x0, [x29, #-32]
  404414:	sub	x1, x29, #0x58
  404418:	bl	4027d0 <sd_journal_get_realtime_usec@plt>
  40441c:	stur	w0, [x29, #-44]
  404420:	ldur	w8, [x29, #-44]
  404424:	cmp	w8, #0x0
  404428:	cset	w8, ge  // ge = tcont
  40442c:	tbnz	w8, #0, 4044bc <safe_fork_full@plt+0x198c>
  404430:	mov	w8, #0x3                   	// #3
  404434:	stur	w8, [x29, #-92]
  404438:	ldur	w8, [x29, #-44]
  40443c:	stur	w8, [x29, #-96]
  404440:	stur	wzr, [x29, #-100]
  404444:	ldur	w0, [x29, #-100]
  404448:	bl	4025f0 <log_get_max_level_realm@plt>
  40444c:	ldur	w8, [x29, #-92]
  404450:	and	w8, w8, #0x7
  404454:	cmp	w0, w8
  404458:	b.lt	40448c <safe_fork_full@plt+0x195c>  // b.tstop
  40445c:	ldur	w8, [x29, #-100]
  404460:	ldur	w9, [x29, #-92]
  404464:	orr	w0, w9, w8, lsl #10
  404468:	ldur	w1, [x29, #-96]
  40446c:	ldr	x2, [sp, #32]
  404470:	mov	w3, #0x2bb                 	// #699
  404474:	ldr	x4, [sp, #24]
  404478:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  40447c:	add	x5, x5, #0x772
  404480:	bl	402600 <log_internal_realm@plt>
  404484:	str	w0, [sp, #8]
  404488:	b	4044a0 <safe_fork_full@plt+0x1970>
  40448c:	ldur	w0, [x29, #-96]
  404490:	bl	402610 <abs@plt>
  404494:	mov	w8, wzr
  404498:	subs	w8, w8, w0, uxtb
  40449c:	str	w8, [sp, #8]
  4044a0:	ldr	w8, [sp, #8]
  4044a4:	str	w8, [sp, #104]
  4044a8:	ldr	w8, [sp, #104]
  4044ac:	stur	w8, [x29, #-4]
  4044b0:	mov	w8, #0x1                   	// #1
  4044b4:	stur	w8, [x29, #-48]
  4044b8:	b	4046cc <safe_fork_full@plt+0x1b9c>
  4044bc:	ldur	x8, [x29, #-88]
  4044c0:	ldr	x9, [sp, #40]
  4044c4:	ldr	x10, [x9]
  4044c8:	cmp	x8, x10
  4044cc:	b.ls	4044d4 <safe_fork_full@plt+0x19a4>  // b.plast
  4044d0:	b	404320 <safe_fork_full@plt+0x17f0>
  4044d4:	ldr	x8, [sp, #56]
  4044d8:	ldr	x9, [x8]
  4044dc:	mov	x10, #0xffffffffffffffff    	// #-1
  4044e0:	cmp	x9, x10
  4044e4:	b.eq	4045bc <safe_fork_full@plt+0x1a8c>  // b.none
  4044e8:	ldr	x8, [sp, #48]
  4044ec:	ldrb	w9, [x8]
  4044f0:	tbnz	w9, #0, 4044f8 <safe_fork_full@plt+0x19c8>
  4044f4:	b	4045bc <safe_fork_full@plt+0x1a8c>
  4044f8:	ldur	x0, [x29, #-32]
  4044fc:	add	x1, sp, #0x60
  404500:	bl	4027d0 <sd_journal_get_realtime_usec@plt>
  404504:	stur	w0, [x29, #-44]
  404508:	ldur	w8, [x29, #-44]
  40450c:	cmp	w8, #0x0
  404510:	cset	w8, ge  // ge = tcont
  404514:	tbnz	w8, #0, 4045a4 <safe_fork_full@plt+0x1a74>
  404518:	mov	w8, #0x3                   	// #3
  40451c:	str	w8, [sp, #92]
  404520:	ldur	w8, [x29, #-44]
  404524:	str	w8, [sp, #88]
  404528:	str	wzr, [sp, #84]
  40452c:	ldr	w0, [sp, #84]
  404530:	bl	4025f0 <log_get_max_level_realm@plt>
  404534:	ldr	w8, [sp, #92]
  404538:	and	w8, w8, #0x7
  40453c:	cmp	w0, w8
  404540:	b.lt	404574 <safe_fork_full@plt+0x1a44>  // b.tstop
  404544:	ldr	w8, [sp, #84]
  404548:	ldr	w9, [sp, #92]
  40454c:	orr	w0, w9, w8, lsl #10
  404550:	ldr	w1, [sp, #88]
  404554:	ldr	x2, [sp, #32]
  404558:	mov	w3, #0x2c5                 	// #709
  40455c:	ldr	x4, [sp, #24]
  404560:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  404564:	add	x5, x5, #0x772
  404568:	bl	402600 <log_internal_realm@plt>
  40456c:	str	w0, [sp, #4]
  404570:	b	404588 <safe_fork_full@plt+0x1a58>
  404574:	ldr	w0, [sp, #88]
  404578:	bl	402610 <abs@plt>
  40457c:	mov	w8, wzr
  404580:	subs	w8, w8, w0, uxtb
  404584:	str	w8, [sp, #4]
  404588:	ldr	w8, [sp, #4]
  40458c:	str	w8, [sp, #80]
  404590:	ldr	w8, [sp, #80]
  404594:	stur	w8, [x29, #-4]
  404598:	mov	w8, #0x1                   	// #1
  40459c:	stur	w8, [x29, #-48]
  4045a0:	b	4046cc <safe_fork_full@plt+0x1b9c>
  4045a4:	ldr	x8, [sp, #96]
  4045a8:	ldr	x9, [sp, #56]
  4045ac:	ldr	x10, [x9]
  4045b0:	cmp	x8, x10
  4045b4:	b.cs	4045bc <safe_fork_full@plt+0x1a8c>  // b.hs, b.nlast
  4045b8:	b	404320 <safe_fork_full@plt+0x17f0>
  4045bc:	ldur	x0, [x29, #-32]
  4045c0:	ldur	w8, [x29, #-36]
  4045c4:	add	w9, w8, #0x1
  4045c8:	stur	w9, [x29, #-36]
  4045cc:	ldurb	w9, [x29, #-37]
  4045d0:	mov	w1, w8
  4045d4:	and	w2, w9, #0x1
  4045d8:	bl	405878 <safe_fork_full@plt+0x2d48>
  4045dc:	stur	w0, [x29, #-44]
  4045e0:	ldur	w8, [x29, #-44]
  4045e4:	cmp	w8, #0x0
  4045e8:	cset	w8, ge  // ge = tcont
  4045ec:	tbnz	w8, #0, 404604 <safe_fork_full@plt+0x1ad4>
  4045f0:	ldur	w8, [x29, #-44]
  4045f4:	stur	w8, [x29, #-4]
  4045f8:	mov	w8, #0x1                   	// #1
  4045fc:	stur	w8, [x29, #-48]
  404600:	b	4046cc <safe_fork_full@plt+0x1b9c>
  404604:	b	404320 <safe_fork_full@plt+0x17f0>
  404608:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  40460c:	add	x8, x8, #0x68
  404610:	ldr	x8, [x8]
  404614:	cbnz	x8, 4046c0 <safe_fork_full@plt+0x1b90>
  404618:	ldur	w8, [x29, #-36]
  40461c:	cmp	w8, #0x0
  404620:	cset	w8, hi  // hi = pmore
  404624:	tbnz	w8, #0, 4046c0 <safe_fork_full@plt+0x1b90>
  404628:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  40462c:	add	x8, x8, #0x81
  404630:	ldrb	w9, [x8]
  404634:	tbnz	w9, #0, 4046ac <safe_fork_full@plt+0x1b7c>
  404638:	mov	w8, #0x5                   	// #5
  40463c:	str	w8, [sp, #76]
  404640:	str	wzr, [sp, #72]
  404644:	str	wzr, [sp, #68]
  404648:	ldr	w0, [sp, #68]
  40464c:	bl	4025f0 <log_get_max_level_realm@plt>
  404650:	ldr	w8, [sp, #76]
  404654:	and	w8, w8, #0x7
  404658:	cmp	w0, w8
  40465c:	b.lt	404690 <safe_fork_full@plt+0x1b60>  // b.tstop
  404660:	ldr	w8, [sp, #68]
  404664:	ldr	w9, [sp, #76]
  404668:	orr	w0, w9, w8, lsl #10
  40466c:	ldr	w1, [sp, #72]
  404670:	ldr	x2, [sp, #32]
  404674:	mov	w3, #0x2d1                 	// #721
  404678:	ldr	x4, [sp, #24]
  40467c:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  404680:	add	x5, x5, #0x794
  404684:	bl	402600 <log_internal_realm@plt>
  404688:	str	w0, [sp]
  40468c:	b	4046a4 <safe_fork_full@plt+0x1b74>
  404690:	ldr	w0, [sp, #72]
  404694:	bl	402610 <abs@plt>
  404698:	mov	w8, wzr
  40469c:	subs	w8, w8, w0, uxtb
  4046a0:	str	w8, [sp]
  4046a4:	ldr	w8, [sp]
  4046a8:	str	w8, [sp, #64]
  4046ac:	mov	w8, #0xfffffffd            	// #-3
  4046b0:	stur	w8, [x29, #-4]
  4046b4:	mov	w8, #0x1                   	// #1
  4046b8:	stur	w8, [x29, #-48]
  4046bc:	b	4046cc <safe_fork_full@plt+0x1b9c>
  4046c0:	stur	wzr, [x29, #-4]
  4046c4:	mov	w8, #0x1                   	// #1
  4046c8:	stur	w8, [x29, #-48]
  4046cc:	sub	x0, x29, #0x20
  4046d0:	bl	405330 <safe_fork_full@plt+0x2800>
  4046d4:	ldur	w0, [x29, #-4]
  4046d8:	ldp	x29, x30, [sp, #208]
  4046dc:	add	sp, sp, #0xe0
  4046e0:	ret
  4046e4:	sub	sp, sp, #0xa0
  4046e8:	stp	x29, x30, [sp, #144]
  4046ec:	add	x29, sp, #0x90
  4046f0:	mov	x8, xzr
  4046f4:	adrp	x9, 420000 <safe_fork_full@plt+0x1d4d0>
  4046f8:	add	x9, x9, #0x68
  4046fc:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  404700:	add	x10, x10, #0x60
  404704:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  404708:	add	x11, x11, #0x1a
  40470c:	add	x11, x11, #0x3
  404710:	adrp	x12, 409000 <safe_fork_full@plt+0x64d0>
  404714:	add	x12, x12, #0xf3a
  404718:	stur	w0, [x29, #-8]
  40471c:	stur	x1, [x29, #-16]
  404720:	stur	x2, [x29, #-24]
  404724:	stur	x8, [x29, #-32]
  404728:	stur	x8, [x29, #-40]
  40472c:	ldr	x8, [x9]
  404730:	str	x10, [sp, #40]
  404734:	str	x11, [sp, #32]
  404738:	str	x12, [sp, #24]
  40473c:	cbz	x8, 4047c8 <safe_fork_full@plt+0x1c98>
  404740:	mov	w8, #0x3                   	// #3
  404744:	stur	w8, [x29, #-48]
  404748:	stur	wzr, [x29, #-52]
  40474c:	stur	wzr, [x29, #-56]
  404750:	ldur	w0, [x29, #-56]
  404754:	bl	4025f0 <log_get_max_level_realm@plt>
  404758:	ldur	w8, [x29, #-48]
  40475c:	and	w8, w8, #0x7
  404760:	cmp	w0, w8
  404764:	b.lt	404798 <safe_fork_full@plt+0x1c68>  // b.tstop
  404768:	ldur	w8, [x29, #-56]
  40476c:	ldur	w9, [x29, #-48]
  404770:	orr	w0, w9, w8, lsl #10
  404774:	ldur	w1, [x29, #-52]
  404778:	ldr	x2, [sp, #32]
  40477c:	mov	w3, #0x36b                 	// #875
  404780:	ldr	x4, [sp, #24]
  404784:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  404788:	add	x5, x5, #0xf44
  40478c:	bl	402600 <log_internal_realm@plt>
  404790:	str	w0, [sp, #20]
  404794:	b	4047ac <safe_fork_full@plt+0x1c7c>
  404798:	ldur	w0, [x29, #-52]
  40479c:	bl	402610 <abs@plt>
  4047a0:	mov	w8, wzr
  4047a4:	subs	w8, w8, w0, uxtb
  4047a8:	str	w8, [sp, #20]
  4047ac:	ldr	w8, [sp, #20]
  4047b0:	stur	w8, [x29, #-60]
  4047b4:	mov	w8, #0xffffffea            	// #-22
  4047b8:	stur	w8, [x29, #-4]
  4047bc:	mov	w8, #0x1                   	// #1
  4047c0:	stur	w8, [x29, #-64]
  4047c4:	b	404a2c <safe_fork_full@plt+0x1efc>
  4047c8:	ldur	x8, [x29, #-16]
  4047cc:	add	x1, x8, #0x8
  4047d0:	sub	x0, x29, #0x20
  4047d4:	bl	405364 <safe_fork_full@plt+0x2834>
  4047d8:	stur	w0, [x29, #-44]
  4047dc:	ldur	w9, [x29, #-44]
  4047e0:	cmp	w9, #0x0
  4047e4:	cset	w9, ge  // ge = tcont
  4047e8:	tbnz	w9, #0, 404800 <safe_fork_full@plt+0x1cd0>
  4047ec:	ldur	w8, [x29, #-44]
  4047f0:	stur	w8, [x29, #-4]
  4047f4:	mov	w8, #0x1                   	// #1
  4047f8:	stur	w8, [x29, #-64]
  4047fc:	b	404a2c <safe_fork_full@plt+0x1efc>
  404800:	ldur	x0, [x29, #-32]
  404804:	bl	4056f4 <safe_fork_full@plt+0x2bc4>
  404808:	stur	w0, [x29, #-44]
  40480c:	ldur	w8, [x29, #-44]
  404810:	cmp	w8, #0x0
  404814:	cset	w8, ge  // ge = tcont
  404818:	tbnz	w8, #0, 404830 <safe_fork_full@plt+0x1d00>
  40481c:	ldur	w8, [x29, #-44]
  404820:	stur	w8, [x29, #-4]
  404824:	mov	w8, #0x1                   	// #1
  404828:	stur	w8, [x29, #-64]
  40482c:	b	404a2c <safe_fork_full@plt+0x1efc>
  404830:	ldr	x8, [sp, #40]
  404834:	ldr	x9, [x8]
  404838:	cbz	x9, 4048f4 <safe_fork_full@plt+0x1dc4>
  40483c:	ldr	x8, [sp, #40]
  404840:	ldr	x0, [x8]
  404844:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  404848:	add	x1, x1, #0xf71
  40484c:	bl	4027e0 <fopen64@plt>
  404850:	stur	x0, [x29, #-40]
  404854:	ldur	x8, [x29, #-40]
  404858:	cbnz	x8, 4048f4 <safe_fork_full@plt+0x1dc4>
  40485c:	mov	w8, #0x3                   	// #3
  404860:	stur	w8, [x29, #-68]
  404864:	bl	4027f0 <__errno_location@plt>
  404868:	ldr	w8, [x0]
  40486c:	str	w8, [sp, #72]
  404870:	str	wzr, [sp, #68]
  404874:	ldr	w0, [sp, #68]
  404878:	bl	4025f0 <log_get_max_level_realm@plt>
  40487c:	ldur	w8, [x29, #-68]
  404880:	and	w8, w8, #0x7
  404884:	cmp	w0, w8
  404888:	b.lt	4048c4 <safe_fork_full@plt+0x1d94>  // b.tstop
  40488c:	ldr	w8, [sp, #68]
  404890:	ldur	w9, [x29, #-68]
  404894:	orr	w0, w9, w8, lsl #10
  404898:	ldr	w1, [sp, #72]
  40489c:	ldr	x10, [sp, #40]
  4048a0:	ldr	x6, [x10]
  4048a4:	ldr	x2, [sp, #32]
  4048a8:	mov	w3, #0x37a                 	// #890
  4048ac:	ldr	x4, [sp, #24]
  4048b0:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4048b4:	add	x5, x5, #0xf74
  4048b8:	bl	402600 <log_internal_realm@plt>
  4048bc:	str	w0, [sp, #16]
  4048c0:	b	4048d8 <safe_fork_full@plt+0x1da8>
  4048c4:	ldr	w0, [sp, #72]
  4048c8:	bl	402610 <abs@plt>
  4048cc:	mov	w8, wzr
  4048d0:	subs	w8, w8, w0, uxtb
  4048d4:	str	w8, [sp, #16]
  4048d8:	ldr	w8, [sp, #16]
  4048dc:	str	w8, [sp, #64]
  4048e0:	ldr	w8, [sp, #64]
  4048e4:	stur	w8, [x29, #-4]
  4048e8:	mov	w8, #0x1                   	// #1
  4048ec:	stur	w8, [x29, #-64]
  4048f0:	b	404a2c <safe_fork_full@plt+0x1efc>
  4048f4:	ldur	x8, [x29, #-40]
  4048f8:	cbz	x8, 404910 <safe_fork_full@plt+0x1de0>
  4048fc:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  404900:	add	x8, x8, #0xa8
  404904:	ldr	x8, [x8]
  404908:	str	x8, [sp, #8]
  40490c:	b	404920 <safe_fork_full@plt+0x1df0>
  404910:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  404914:	add	x8, x8, #0xb0
  404918:	ldr	x8, [x8]
  40491c:	str	x8, [sp, #8]
  404920:	ldr	x8, [sp, #8]
  404924:	ldur	x1, [x29, #-32]
  404928:	mov	x0, x8
  40492c:	mov	w9, wzr
  404930:	and	w2, w9, #0x1
  404934:	bl	4060f0 <safe_fork_full@plt+0x35c0>
  404938:	ldur	x8, [x29, #-32]
  40493c:	ldur	x1, [x29, #-40]
  404940:	mov	x0, x8
  404944:	mov	x8, xzr
  404948:	mov	x3, x8
  40494c:	mov	x2, x3
  404950:	mov	x3, x8
  404954:	bl	407ec4 <safe_fork_full@plt+0x5394>
  404958:	stur	w0, [x29, #-44]
  40495c:	ldur	w9, [x29, #-44]
  404960:	cmp	w9, #0x0
  404964:	cset	w9, ge  // ge = tcont
  404968:	tbnz	w9, #0, 404980 <safe_fork_full@plt+0x1e50>
  40496c:	ldur	w8, [x29, #-44]
  404970:	stur	w8, [x29, #-4]
  404974:	mov	w8, #0x1                   	// #1
  404978:	stur	w8, [x29, #-64]
  40497c:	b	404a2c <safe_fork_full@plt+0x1efc>
  404980:	ldur	x0, [x29, #-32]
  404984:	bl	4027c0 <sd_journal_previous@plt>
  404988:	stur	w0, [x29, #-44]
  40498c:	ldur	w8, [x29, #-44]
  404990:	cmp	w8, #0x0
  404994:	cset	w8, le
  404998:	tbnz	w8, #0, 404a20 <safe_fork_full@plt+0x1ef0>
  40499c:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4049a0:	add	x8, x8, #0x81
  4049a4:	ldrb	w9, [x8]
  4049a8:	tbnz	w9, #0, 404a20 <safe_fork_full@plt+0x1ef0>
  4049ac:	mov	w8, #0x5                   	// #5
  4049b0:	str	w8, [sp, #60]
  4049b4:	str	wzr, [sp, #56]
  4049b8:	str	wzr, [sp, #52]
  4049bc:	ldr	w0, [sp, #52]
  4049c0:	bl	4025f0 <log_get_max_level_realm@plt>
  4049c4:	ldr	w8, [sp, #60]
  4049c8:	and	w8, w8, #0x7
  4049cc:	cmp	w0, w8
  4049d0:	b.lt	404a04 <safe_fork_full@plt+0x1ed4>  // b.tstop
  4049d4:	ldr	w8, [sp, #52]
  4049d8:	ldr	w9, [sp, #60]
  4049dc:	orr	w0, w9, w8, lsl #10
  4049e0:	ldr	w1, [sp, #56]
  4049e4:	ldr	x2, [sp, #32]
  4049e8:	mov	w3, #0x385                 	// #901
  4049ec:	ldr	x4, [sp, #24]
  4049f0:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4049f4:	add	x5, x5, #0xf98
  4049f8:	bl	402600 <log_internal_realm@plt>
  4049fc:	str	w0, [sp, #4]
  404a00:	b	404a18 <safe_fork_full@plt+0x1ee8>
  404a04:	ldr	w0, [sp, #56]
  404a08:	bl	402610 <abs@plt>
  404a0c:	mov	w8, wzr
  404a10:	subs	w8, w8, w0, uxtb
  404a14:	str	w8, [sp, #4]
  404a18:	ldr	w8, [sp, #4]
  404a1c:	str	w8, [sp, #48]
  404a20:	stur	wzr, [x29, #-4]
  404a24:	mov	w8, #0x1                   	// #1
  404a28:	stur	w8, [x29, #-64]
  404a2c:	sub	x0, x29, #0x28
  404a30:	bl	407e9c <safe_fork_full@plt+0x536c>
  404a34:	sub	x0, x29, #0x20
  404a38:	bl	405330 <safe_fork_full@plt+0x2800>
  404a3c:	ldur	w0, [x29, #-4]
  404a40:	ldp	x29, x30, [sp, #144]
  404a44:	add	sp, sp, #0xa0
  404a48:	ret
  404a4c:	stp	x29, x30, [sp, #-32]!
  404a50:	stp	x28, x19, [sp, #16]
  404a54:	mov	x29, sp
  404a58:	sub	sp, sp, #0x170
  404a5c:	mov	x19, sp
  404a60:	mov	x8, xzr
  404a64:	mov	w9, #0x0                   	// #0
  404a68:	adrp	x10, 420000 <safe_fork_full@plt+0x1d4d0>
  404a6c:	add	x10, x10, #0x58
  404a70:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  404a74:	add	x11, x11, #0x1a
  404a78:	add	x11, x11, #0x3
  404a7c:	adrp	x12, 40a000 <safe_fork_full@plt+0x74d0>
  404a80:	add	x12, x12, #0x26d
  404a84:	adrp	x13, 40a000 <safe_fork_full@plt+0x74d0>
  404a88:	add	x13, x13, #0x2bf
  404a8c:	stur	w0, [x29, #-8]
  404a90:	stur	x1, [x29, #-16]
  404a94:	stur	x2, [x29, #-24]
  404a98:	stur	x8, [x29, #-32]
  404a9c:	stur	x8, [x29, #-40]
  404aa0:	stur	x8, [x29, #-48]
  404aa4:	stur	x8, [x29, #-56]
  404aa8:	sturb	w9, [x29, #-57]
  404aac:	ldr	x8, [x10]
  404ab0:	str	x10, [x19, #72]
  404ab4:	str	x11, [x19, #64]
  404ab8:	str	x12, [x19, #56]
  404abc:	str	x13, [x19, #48]
  404ac0:	cbnz	x8, 404afc <safe_fork_full@plt+0x1fcc>
  404ac4:	adrp	x0, 40a000 <safe_fork_full@plt+0x74d0>
  404ac8:	add	x0, x0, #0x25c
  404acc:	bl	402800 <getenv@plt>
  404ad0:	stur	x0, [x29, #-104]
  404ad4:	ldur	x8, [x29, #-104]
  404ad8:	cbz	x8, 404aec <safe_fork_full@plt+0x1fbc>
  404adc:	ldur	x8, [x29, #-104]
  404ae0:	ldr	x9, [x19, #72]
  404ae4:	str	x8, [x9]
  404ae8:	b	404afc <safe_fork_full@plt+0x1fcc>
  404aec:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  404af0:	add	x8, x8, #0x723
  404af4:	ldr	x9, [x19, #72]
  404af8:	str	x8, [x9]
  404afc:	ldr	x8, [x19, #72]
  404b00:	ldr	x0, [x8]
  404b04:	bl	402810 <strdup@plt>
  404b08:	stur	x0, [x29, #-56]
  404b0c:	ldur	x8, [x29, #-56]
  404b10:	cbnz	x8, 404b28 <safe_fork_full@plt+0x1ff8>
  404b14:	mov	w8, #0xfffffff4            	// #-12
  404b18:	stur	w8, [x29, #-4]
  404b1c:	mov	w8, #0x1                   	// #1
  404b20:	stur	w8, [x29, #-108]
  404b24:	b	4052fc <safe_fork_full@plt+0x27cc>
  404b28:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  404b2c:	add	x8, x8, #0x68
  404b30:	ldr	x8, [x8]
  404b34:	cbz	x8, 404bc0 <safe_fork_full@plt+0x2090>
  404b38:	mov	w8, #0x3                   	// #3
  404b3c:	stur	w8, [x29, #-112]
  404b40:	stur	wzr, [x29, #-116]
  404b44:	stur	wzr, [x29, #-120]
  404b48:	ldur	w0, [x29, #-120]
  404b4c:	bl	4025f0 <log_get_max_level_realm@plt>
  404b50:	ldur	w8, [x29, #-112]
  404b54:	and	w8, w8, #0x7
  404b58:	cmp	w0, w8
  404b5c:	b.lt	404b90 <safe_fork_full@plt+0x2060>  // b.tstop
  404b60:	ldur	w8, [x29, #-120]
  404b64:	ldur	w9, [x29, #-112]
  404b68:	orr	w0, w9, w8, lsl #10
  404b6c:	ldur	w1, [x29, #-116]
  404b70:	ldr	x2, [x19, #64]
  404b74:	mov	w3, #0x3a2                 	// #930
  404b78:	ldr	x4, [x19, #56]
  404b7c:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  404b80:	add	x5, x5, #0xf44
  404b84:	bl	402600 <log_internal_realm@plt>
  404b88:	str	w0, [x19, #44]
  404b8c:	b	404ba4 <safe_fork_full@plt+0x2074>
  404b90:	ldur	w0, [x29, #-116]
  404b94:	bl	402610 <abs@plt>
  404b98:	mov	w8, wzr
  404b9c:	subs	w8, w8, w0, uxtb
  404ba0:	str	w8, [x19, #44]
  404ba4:	ldr	w8, [x19, #44]
  404ba8:	stur	w8, [x29, #-124]
  404bac:	mov	w8, #0xffffffea            	// #-22
  404bb0:	stur	w8, [x29, #-4]
  404bb4:	mov	w8, #0x1                   	// #1
  404bb8:	stur	w8, [x29, #-108]
  404bbc:	b	4052fc <safe_fork_full@plt+0x27cc>
  404bc0:	ldur	x8, [x29, #-16]
  404bc4:	add	x1, x8, #0x8
  404bc8:	sub	x0, x29, #0x20
  404bcc:	bl	405364 <safe_fork_full@plt+0x2834>
  404bd0:	stur	w0, [x29, #-96]
  404bd4:	ldur	w9, [x29, #-96]
  404bd8:	cmp	w9, #0x0
  404bdc:	cset	w9, ge  // ge = tcont
  404be0:	tbnz	w9, #0, 404bf8 <safe_fork_full@plt+0x20c8>
  404be4:	ldur	w8, [x29, #-96]
  404be8:	stur	w8, [x29, #-4]
  404bec:	mov	w8, #0x1                   	// #1
  404bf0:	stur	w8, [x29, #-108]
  404bf4:	b	4052fc <safe_fork_full@plt+0x27cc>
  404bf8:	ldur	x0, [x29, #-32]
  404bfc:	bl	4056f4 <safe_fork_full@plt+0x2bc4>
  404c00:	stur	w0, [x29, #-96]
  404c04:	ldur	w8, [x29, #-96]
  404c08:	cmp	w8, #0x0
  404c0c:	cset	w8, ge  // ge = tcont
  404c10:	tbnz	w8, #0, 404c28 <safe_fork_full@plt+0x20f8>
  404c14:	ldur	w8, [x29, #-96]
  404c18:	stur	w8, [x29, #-4]
  404c1c:	mov	w8, #0x1                   	// #1
  404c20:	stur	w8, [x29, #-108]
  404c24:	b	4052fc <safe_fork_full@plt+0x27cc>
  404c28:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  404c2c:	add	x8, x8, #0xa8
  404c30:	ldr	x0, [x8]
  404c34:	ldur	x1, [x29, #-32]
  404c38:	mov	w9, wzr
  404c3c:	and	w2, w9, #0x1
  404c40:	str	x8, [x19, #32]
  404c44:	bl	4060f0 <safe_fork_full@plt+0x35c0>
  404c48:	ldr	x8, [x19, #32]
  404c4c:	ldr	x1, [x8]
  404c50:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  404c54:	add	x10, x10, #0xb72
  404c58:	mov	x0, x10
  404c5c:	bl	402820 <fputs@plt>
  404c60:	ldur	x8, [x29, #-32]
  404c64:	mov	x0, x8
  404c68:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  404c6c:	add	x1, x1, #0xa7a
  404c70:	sub	x2, x29, #0x48
  404c74:	sub	x3, x29, #0x58
  404c78:	bl	402830 <sd_journal_get_data@plt>
  404c7c:	stur	w0, [x29, #-96]
  404c80:	ldur	w9, [x29, #-96]
  404c84:	cmp	w9, #0x0
  404c88:	cset	w9, ge  // ge = tcont
  404c8c:	tbnz	w9, #0, 404d1c <safe_fork_full@plt+0x21ec>
  404c90:	mov	w8, #0x3                   	// #3
  404c94:	stur	w8, [x29, #-128]
  404c98:	ldur	w8, [x29, #-96]
  404c9c:	stur	w8, [x29, #-132]
  404ca0:	stur	wzr, [x29, #-136]
  404ca4:	ldur	w0, [x29, #-136]
  404ca8:	bl	4025f0 <log_get_max_level_realm@plt>
  404cac:	ldur	w8, [x29, #-128]
  404cb0:	and	w8, w8, #0x7
  404cb4:	cmp	w0, w8
  404cb8:	b.lt	404cec <safe_fork_full@plt+0x21bc>  // b.tstop
  404cbc:	ldur	w8, [x29, #-136]
  404cc0:	ldur	w9, [x29, #-128]
  404cc4:	orr	w0, w9, w8, lsl #10
  404cc8:	ldur	w1, [x29, #-132]
  404ccc:	ldr	x2, [x19, #64]
  404cd0:	mov	w3, #0x3b3                 	// #947
  404cd4:	ldr	x4, [x19, #56]
  404cd8:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  404cdc:	add	x5, x5, #0x277
  404ce0:	bl	402600 <log_internal_realm@plt>
  404ce4:	str	w0, [x19, #28]
  404ce8:	b	404d00 <safe_fork_full@plt+0x21d0>
  404cec:	ldur	w0, [x29, #-132]
  404cf0:	bl	402610 <abs@plt>
  404cf4:	mov	w8, wzr
  404cf8:	subs	w8, w8, w0, uxtb
  404cfc:	str	w8, [x19, #28]
  404d00:	ldr	w8, [x19, #28]
  404d04:	stur	w8, [x29, #-140]
  404d08:	ldur	w8, [x29, #-140]
  404d0c:	stur	w8, [x29, #-4]
  404d10:	mov	w8, #0x1                   	// #1
  404d14:	stur	w8, [x29, #-108]
  404d18:	b	4052fc <safe_fork_full@plt+0x27cc>
  404d1c:	ldur	x8, [x29, #-88]
  404d20:	cmp	x8, #0xd
  404d24:	cset	w9, hi  // hi = pmore
  404d28:	mov	w10, #0x1                   	// #1
  404d2c:	eor	w9, w9, #0x1
  404d30:	eor	w9, w9, w10
  404d34:	eor	w9, w9, w10
  404d38:	and	w9, w9, #0x1
  404d3c:	mov	w0, w9
  404d40:	sxtw	x8, w0
  404d44:	cbz	x8, 404d68 <safe_fork_full@plt+0x2238>
  404d48:	mov	w8, wzr
  404d4c:	mov	w0, w8
  404d50:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  404d54:	add	x1, x1, #0x2a1
  404d58:	ldr	x2, [x19, #64]
  404d5c:	mov	w3, #0x3b5                 	// #949
  404d60:	ldr	x4, [x19, #48]
  404d64:	bl	4025c0 <log_assert_failed_realm@plt>
  404d68:	ldur	x8, [x29, #-72]
  404d6c:	add	x8, x8, #0xd
  404d70:	stur	x8, [x29, #-72]
  404d74:	ldur	x8, [x29, #-88]
  404d78:	subs	x8, x8, #0xd
  404d7c:	stur	x8, [x29, #-88]
  404d80:	ldur	x0, [x29, #-72]
  404d84:	ldur	x1, [x29, #-88]
  404d88:	bl	402840 <strndup@plt>
  404d8c:	stur	x0, [x29, #-40]
  404d90:	ldur	x8, [x29, #-40]
  404d94:	cbnz	x8, 404dc0 <safe_fork_full@plt+0x2290>
  404d98:	mov	w8, wzr
  404d9c:	mov	w0, w8
  404da0:	ldr	x1, [x19, #64]
  404da4:	mov	w2, #0x3bb                 	// #955
  404da8:	ldr	x3, [x19, #56]
  404dac:	bl	402710 <log_oom_internal@plt>
  404db0:	stur	w0, [x29, #-4]
  404db4:	mov	w8, #0x1                   	// #1
  404db8:	stur	w8, [x29, #-108]
  404dbc:	b	4052fc <safe_fork_full@plt+0x27cc>
  404dc0:	ldur	x0, [x29, #-40]
  404dc4:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  404dc8:	add	x1, x1, #0x2e3
  404dcc:	bl	402850 <endswith@plt>
  404dd0:	cbz	x0, 404e5c <safe_fork_full@plt+0x232c>
  404dd4:	mov	w8, #0x3                   	// #3
  404dd8:	stur	w8, [x29, #-144]
  404ddc:	stur	wzr, [x29, #-148]
  404de0:	stur	wzr, [x29, #-152]
  404de4:	ldur	w0, [x29, #-152]
  404de8:	bl	4025f0 <log_get_max_level_realm@plt>
  404dec:	ldur	w8, [x29, #-144]
  404df0:	and	w8, w8, #0x7
  404df4:	cmp	w0, w8
  404df8:	b.lt	404e2c <safe_fork_full@plt+0x22fc>  // b.tstop
  404dfc:	ldur	w8, [x29, #-152]
  404e00:	ldur	w9, [x29, #-144]
  404e04:	orr	w0, w9, w8, lsl #10
  404e08:	ldur	w1, [x29, #-148]
  404e0c:	ldr	x2, [x19, #64]
  404e10:	mov	w3, #0x3be                 	// #958
  404e14:	ldr	x4, [x19, #56]
  404e18:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  404e1c:	add	x5, x5, #0x2ee
  404e20:	bl	402600 <log_internal_realm@plt>
  404e24:	str	w0, [x19, #24]
  404e28:	b	404e40 <safe_fork_full@plt+0x2310>
  404e2c:	ldur	w0, [x29, #-148]
  404e30:	bl	402610 <abs@plt>
  404e34:	mov	w8, wzr
  404e38:	subs	w8, w8, w0, uxtb
  404e3c:	str	w8, [x19, #24]
  404e40:	ldr	w8, [x19, #24]
  404e44:	stur	w8, [x29, #-156]
  404e48:	mov	w8, #0xfffffffe            	// #-2
  404e4c:	stur	w8, [x29, #-4]
  404e50:	mov	w8, #0x1                   	// #1
  404e54:	stur	w8, [x29, #-108]
  404e58:	b	4052fc <safe_fork_full@plt+0x27cc>
  404e5c:	ldur	x0, [x29, #-40]
  404e60:	bl	402860 <path_is_absolute@plt>
  404e64:	tbnz	w0, #0, 404ef0 <safe_fork_full@plt+0x23c0>
  404e68:	mov	w8, #0x3                   	// #3
  404e6c:	stur	w8, [x29, #-160]
  404e70:	stur	wzr, [x29, #-164]
  404e74:	stur	wzr, [x29, #-168]
  404e78:	ldur	w0, [x29, #-168]
  404e7c:	bl	4025f0 <log_get_max_level_realm@plt>
  404e80:	ldur	w8, [x29, #-160]
  404e84:	and	w8, w8, #0x7
  404e88:	cmp	w0, w8
  404e8c:	b.lt	404ec0 <safe_fork_full@plt+0x2390>  // b.tstop
  404e90:	ldur	w8, [x29, #-168]
  404e94:	ldur	w9, [x29, #-160]
  404e98:	orr	w0, w9, w8, lsl #10
  404e9c:	ldur	w1, [x29, #-164]
  404ea0:	ldr	x2, [x19, #64]
  404ea4:	mov	w3, #0x3c3                 	// #963
  404ea8:	ldr	x4, [x19, #56]
  404eac:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  404eb0:	add	x5, x5, #0x306
  404eb4:	bl	402600 <log_internal_realm@plt>
  404eb8:	str	w0, [x19, #20]
  404ebc:	b	404ed4 <safe_fork_full@plt+0x23a4>
  404ec0:	ldur	w0, [x29, #-164]
  404ec4:	bl	402610 <abs@plt>
  404ec8:	mov	w8, wzr
  404ecc:	subs	w8, w8, w0, uxtb
  404ed0:	str	w8, [x19, #20]
  404ed4:	ldr	w8, [x19, #20]
  404ed8:	stur	w8, [x29, #-172]
  404edc:	mov	w8, #0xfffffffe            	// #-2
  404ee0:	stur	w8, [x29, #-4]
  404ee4:	mov	w8, #0x1                   	// #1
  404ee8:	stur	w8, [x29, #-108]
  404eec:	b	4052fc <safe_fork_full@plt+0x27cc>
  404ef0:	ldur	x0, [x29, #-32]
  404ef4:	mov	x8, xzr
  404ef8:	mov	x1, x8
  404efc:	sub	x2, x29, #0x30
  404f00:	sub	x3, x29, #0x39
  404f04:	bl	407ec4 <safe_fork_full@plt+0x5394>
  404f08:	stur	w0, [x29, #-96]
  404f0c:	ldur	w9, [x29, #-96]
  404f10:	cmp	w9, #0x0
  404f14:	cset	w9, ge  // ge = tcont
  404f18:	tbnz	w9, #0, 404f30 <safe_fork_full@plt+0x2400>
  404f1c:	ldur	w8, [x29, #-96]
  404f20:	stur	w8, [x29, #-4]
  404f24:	mov	w8, #0x1                   	// #1
  404f28:	stur	w8, [x29, #-108]
  404f2c:	b	4052fc <safe_fork_full@plt+0x27cc>
  404f30:	mov	w0, #0x2                   	// #2
  404f34:	mov	w1, #0xffffffff            	// #-1
  404f38:	bl	402870 <ignore_signals@plt>
  404f3c:	add	x8, x19, #0xa8
  404f40:	adrp	x9, 40a000 <safe_fork_full@plt+0x74d0>
  404f44:	add	x9, x9, #0x326
  404f48:	str	x9, [x19, #168]
  404f4c:	ldur	x9, [x29, #-56]
  404f50:	str	x9, [x8, #8]
  404f54:	adrp	x9, 40a000 <safe_fork_full@plt+0x74d0>
  404f58:	add	x9, x9, #0x328
  404f5c:	str	x9, [x8, #16]
  404f60:	str	xzr, [x19, #144]
  404f64:	str	xzr, [x19, #136]
  404f68:	ldr	x8, [x19, #136]
  404f6c:	mov	w9, #0x0                   	// #0
  404f70:	cmp	x8, #0x3
  404f74:	str	w9, [x19, #16]
  404f78:	b.cs	404fa0 <safe_fork_full@plt+0x2470>  // b.hs, b.nlast
  404f7c:	ldr	x8, [x19, #136]
  404f80:	mov	x9, #0x8                   	// #8
  404f84:	mul	x8, x9, x8
  404f88:	add	x9, x19, #0xa8
  404f8c:	add	x8, x9, x8
  404f90:	ldr	x8, [x8]
  404f94:	cmp	x8, #0x0
  404f98:	cset	w10, ne  // ne = any
  404f9c:	str	w10, [x19, #16]
  404fa0:	ldr	w8, [x19, #16]
  404fa4:	tbnz	w8, #0, 404fac <safe_fork_full@plt+0x247c>
  404fa8:	b	404fe4 <safe_fork_full@plt+0x24b4>
  404fac:	ldr	x8, [x19, #136]
  404fb0:	mov	x9, #0x8                   	// #8
  404fb4:	mul	x8, x9, x8
  404fb8:	add	x9, x19, #0xa8
  404fbc:	add	x8, x9, x8
  404fc0:	ldr	x0, [x8]
  404fc4:	bl	402880 <strlen@plt>
  404fc8:	ldr	x8, [x19, #144]
  404fcc:	add	x8, x8, x0
  404fd0:	str	x8, [x19, #144]
  404fd4:	ldr	x8, [x19, #136]
  404fd8:	add	x8, x8, #0x1
  404fdc:	str	x8, [x19, #136]
  404fe0:	b	404f68 <safe_fork_full@plt+0x2438>
  404fe4:	ldr	x8, [x19, #144]
  404fe8:	add	x8, x8, #0x1
  404fec:	str	x8, [x19, #128]
  404ff0:	ldr	x1, [x19, #128]
  404ff4:	mov	x0, #0x1                   	// #1
  404ff8:	bl	406088 <safe_fork_full@plt+0x3558>
  404ffc:	mov	w8, #0x1                   	// #1
  405000:	eor	w9, w0, #0x1
  405004:	eor	w9, w9, w8
  405008:	eor	w9, w9, w8
  40500c:	eor	w8, w9, w8
  405010:	and	w8, w8, #0x1
  405014:	mov	w1, w8
  405018:	sxtw	x10, w1
  40501c:	cbz	x10, 405040 <safe_fork_full@plt+0x2510>
  405020:	mov	w8, wzr
  405024:	mov	w0, w8
  405028:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  40502c:	add	x1, x1, #0x91a
  405030:	ldr	x2, [x19, #64]
  405034:	mov	w3, #0x3ce                 	// #974
  405038:	ldr	x4, [x19, #48]
  40503c:	bl	4025c0 <log_assert_failed_realm@plt>
  405040:	ldr	x8, [x19, #128]
  405044:	mov	x9, #0x1                   	// #1
  405048:	mul	x8, x9, x8
  40504c:	cmp	x8, #0x400, lsl #12
  405050:	cset	w10, ls  // ls = plast
  405054:	mov	w11, #0x1                   	// #1
  405058:	eor	w10, w10, #0x1
  40505c:	eor	w10, w10, w11
  405060:	eor	w10, w10, w11
  405064:	and	w10, w10, #0x1
  405068:	mov	w0, w10
  40506c:	sxtw	x8, w0
  405070:	cbz	x8, 405094 <safe_fork_full@plt+0x2564>
  405074:	mov	w8, wzr
  405078:	mov	w0, w8
  40507c:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  405080:	add	x1, x1, #0x96f
  405084:	ldr	x2, [x19, #64]
  405088:	mov	w3, #0x3ce                 	// #974
  40508c:	ldr	x4, [x19, #48]
  405090:	bl	4025c0 <log_assert_failed_realm@plt>
  405094:	ldr	x8, [x19, #128]
  405098:	mov	x9, #0x1                   	// #1
  40509c:	mul	x8, x9, x8
  4050a0:	mul	x8, x8, x9
  4050a4:	add	x8, x8, #0xf
  4050a8:	and	x8, x8, #0xfffffffffffffff0
  4050ac:	mov	x9, sp
  4050b0:	subs	x8, x9, x8
  4050b4:	mov	sp, x8
  4050b8:	str	x8, [x19, #120]
  4050bc:	ldr	x8, [x19, #120]
  4050c0:	str	x8, [x19, #160]
  4050c4:	str	x8, [x19, #152]
  4050c8:	str	xzr, [x19, #136]
  4050cc:	ldr	x8, [x19, #136]
  4050d0:	mov	w9, #0x0                   	// #0
  4050d4:	cmp	x8, #0x3
  4050d8:	str	w9, [x19, #12]
  4050dc:	b.cs	405104 <safe_fork_full@plt+0x25d4>  // b.hs, b.nlast
  4050e0:	ldr	x8, [x19, #136]
  4050e4:	mov	x9, #0x8                   	// #8
  4050e8:	mul	x8, x9, x8
  4050ec:	add	x9, x19, #0xa8
  4050f0:	add	x8, x9, x8
  4050f4:	ldr	x8, [x8]
  4050f8:	cmp	x8, #0x0
  4050fc:	cset	w10, ne  // ne = any
  405100:	str	w10, [x19, #12]
  405104:	ldr	w8, [x19, #12]
  405108:	tbnz	w8, #0, 405110 <safe_fork_full@plt+0x25e0>
  40510c:	b	405144 <safe_fork_full@plt+0x2614>
  405110:	ldr	x0, [x19, #152]
  405114:	ldr	x8, [x19, #136]
  405118:	mov	x9, #0x8                   	// #8
  40511c:	mul	x8, x9, x8
  405120:	add	x9, x19, #0xa8
  405124:	add	x8, x9, x8
  405128:	ldr	x1, [x8]
  40512c:	bl	402890 <stpcpy@plt>
  405130:	str	x0, [x19, #152]
  405134:	ldr	x8, [x19, #136]
  405138:	add	x8, x8, #0x1
  40513c:	str	x8, [x19, #136]
  405140:	b	4050cc <safe_fork_full@plt+0x259c>
  405144:	ldr	x8, [x19, #152]
  405148:	mov	w9, #0x0                   	// #0
  40514c:	strb	w9, [x8]
  405150:	ldr	x8, [x19, #160]
  405154:	str	x8, [x19, #112]
  405158:	ldr	x8, [x19, #112]
  40515c:	stur	x8, [x29, #-80]
  405160:	ldur	x0, [x29, #-80]
  405164:	mov	w1, #0x227                 	// #551
  405168:	sub	x2, x29, #0x5c
  40516c:	bl	408bbc <safe_fork_full@plt+0x608c>
  405170:	stur	w0, [x29, #-96]
  405174:	ldur	w9, [x29, #-96]
  405178:	cmp	w9, #0x0
  40517c:	cset	w9, ge  // ge = tcont
  405180:	tbnz	w9, #0, 405188 <safe_fork_full@plt+0x2658>
  405184:	b	405254 <safe_fork_full@plt+0x2724>
  405188:	ldur	w8, [x29, #-96]
  40518c:	cbnz	w8, 405240 <safe_fork_full@plt+0x2710>
  405190:	ldur	x0, [x29, #-56]
  405194:	ldur	x1, [x29, #-56]
  405198:	ldur	x2, [x29, #-40]
  40519c:	ldur	x4, [x29, #-48]
  4051a0:	adrp	x3, 40a000 <safe_fork_full@plt+0x74d0>
  4051a4:	add	x3, x3, #0x32a
  4051a8:	mov	x8, xzr
  4051ac:	mov	x5, x8
  4051b0:	bl	4028a0 <execlp@plt>
  4051b4:	bl	402580 <log_open@plt>
  4051b8:	mov	w9, #0x3                   	// #3
  4051bc:	str	w9, [x19, #108]
  4051c0:	bl	4027f0 <__errno_location@plt>
  4051c4:	ldr	w9, [x0]
  4051c8:	str	w9, [x19, #104]
  4051cc:	str	wzr, [x19, #100]
  4051d0:	ldr	w0, [x19, #100]
  4051d4:	bl	4025f0 <log_get_max_level_realm@plt>
  4051d8:	ldr	w9, [x19, #108]
  4051dc:	and	w9, w9, #0x7
  4051e0:	cmp	w0, w9
  4051e4:	b.lt	40521c <safe_fork_full@plt+0x26ec>  // b.tstop
  4051e8:	ldr	w8, [x19, #100]
  4051ec:	ldr	w9, [x19, #108]
  4051f0:	orr	w0, w9, w8, lsl #10
  4051f4:	ldr	w1, [x19, #104]
  4051f8:	ldur	x6, [x29, #-56]
  4051fc:	ldr	x2, [x19, #64]
  405200:	mov	w3, #0x3d6                 	// #982
  405204:	ldr	x4, [x19, #56]
  405208:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  40520c:	add	x5, x5, #0x32d
  405210:	bl	402600 <log_internal_realm@plt>
  405214:	str	w0, [x19, #8]
  405218:	b	405230 <safe_fork_full@plt+0x2700>
  40521c:	ldr	w0, [x19, #104]
  405220:	bl	402610 <abs@plt>
  405224:	mov	w8, wzr
  405228:	subs	w8, w8, w0, uxtb
  40522c:	str	w8, [x19, #8]
  405230:	ldr	w8, [x19, #8]
  405234:	str	w8, [x19, #96]
  405238:	mov	w0, #0x1                   	// #1
  40523c:	bl	4028b0 <_exit@plt>
  405240:	ldur	x0, [x29, #-56]
  405244:	ldur	w1, [x29, #-92]
  405248:	mov	w2, #0x1                   	// #1
  40524c:	bl	4028c0 <wait_for_terminate_and_check@plt>
  405250:	stur	w0, [x29, #-96]
  405254:	mov	w0, #0x2                   	// #2
  405258:	mov	w1, #0xffffffff            	// #-1
  40525c:	bl	4028d0 <default_signals@plt>
  405260:	ldurb	w8, [x29, #-57]
  405264:	tbnz	w8, #0, 40526c <safe_fork_full@plt+0x273c>
  405268:	b	4052ec <safe_fork_full@plt+0x27bc>
  40526c:	mov	w8, #0x7                   	// #7
  405270:	str	w8, [x19, #92]
  405274:	str	wzr, [x19, #88]
  405278:	str	wzr, [x19, #84]
  40527c:	ldr	w0, [x19, #84]
  405280:	bl	4025f0 <log_get_max_level_realm@plt>
  405284:	ldr	w8, [x19, #92]
  405288:	and	w8, w8, #0x7
  40528c:	cmp	w0, w8
  405290:	b.lt	4052c8 <safe_fork_full@plt+0x2798>  // b.tstop
  405294:	ldr	w8, [x19, #84]
  405298:	ldr	w9, [x19, #92]
  40529c:	orr	w0, w9, w8, lsl #10
  4052a0:	ldr	w1, [x19, #88]
  4052a4:	ldur	x6, [x29, #-48]
  4052a8:	ldr	x2, [x19, #64]
  4052ac:	mov	w3, #0x3e0                 	// #992
  4052b0:	ldr	x4, [x19, #56]
  4052b4:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  4052b8:	add	x5, x5, #0x242
  4052bc:	bl	402600 <log_internal_realm@plt>
  4052c0:	str	w0, [x19, #4]
  4052c4:	b	4052dc <safe_fork_full@plt+0x27ac>
  4052c8:	ldr	w0, [x19, #88]
  4052cc:	bl	402610 <abs@plt>
  4052d0:	mov	w8, wzr
  4052d4:	subs	w8, w8, w0, uxtb
  4052d8:	str	w8, [x19, #4]
  4052dc:	ldr	w8, [x19, #4]
  4052e0:	str	w8, [x19, #80]
  4052e4:	ldur	x0, [x29, #-48]
  4052e8:	bl	4028e0 <unlink@plt>
  4052ec:	ldur	w8, [x29, #-96]
  4052f0:	stur	w8, [x29, #-4]
  4052f4:	mov	w8, #0x1                   	// #1
  4052f8:	stur	w8, [x29, #-108]
  4052fc:	sub	x0, x29, #0x38
  405300:	bl	403f94 <safe_fork_full@plt+0x1464>
  405304:	sub	x0, x29, #0x30
  405308:	bl	403f94 <safe_fork_full@plt+0x1464>
  40530c:	sub	x0, x29, #0x28
  405310:	bl	403f94 <safe_fork_full@plt+0x1464>
  405314:	sub	x0, x29, #0x20
  405318:	bl	405330 <safe_fork_full@plt+0x2800>
  40531c:	ldur	w0, [x29, #-4]
  405320:	mov	sp, x29
  405324:	ldp	x28, x19, [sp, #16]
  405328:	ldp	x29, x30, [sp], #32
  40532c:	ret
  405330:	sub	sp, sp, #0x20
  405334:	stp	x29, x30, [sp, #16]
  405338:	add	x29, sp, #0x10
  40533c:	str	x0, [sp, #8]
  405340:	ldr	x8, [sp, #8]
  405344:	ldr	x8, [x8]
  405348:	cbz	x8, 405358 <safe_fork_full@plt+0x2828>
  40534c:	ldr	x8, [sp, #8]
  405350:	ldr	x0, [x8]
  405354:	bl	4028f0 <sd_journal_close@plt>
  405358:	ldp	x29, x30, [sp, #16]
  40535c:	add	sp, sp, #0x20
  405360:	ret
  405364:	sub	sp, sp, #0xb0
  405368:	stp	x29, x30, [sp, #160]
  40536c:	add	x29, sp, #0xa0
  405370:	mov	x8, xzr
  405374:	adrp	x9, 420000 <safe_fork_full@plt+0x1d4d0>
  405378:	add	x9, x9, #0x78
  40537c:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  405380:	add	x10, x10, #0x1a
  405384:	add	x10, x10, #0x3
  405388:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  40538c:	add	x11, x11, #0x7d8
  405390:	stur	x0, [x29, #-16]
  405394:	stur	x1, [x29, #-24]
  405398:	stur	x8, [x29, #-32]
  40539c:	str	x9, [sp, #40]
  4053a0:	str	x10, [sp, #32]
  4053a4:	str	x11, [sp, #24]
  4053a8:	ldur	x8, [x29, #-16]
  4053ac:	cmp	x8, #0x0
  4053b0:	cset	w9, ne  // ne = any
  4053b4:	mov	w10, #0x1                   	// #1
  4053b8:	eor	w9, w9, #0x1
  4053bc:	eor	w9, w9, w10
  4053c0:	eor	w9, w9, w10
  4053c4:	and	w9, w9, #0x1
  4053c8:	mov	w0, w9
  4053cc:	sxtw	x8, w0
  4053d0:	cbz	x8, 4053f8 <safe_fork_full@plt+0x28c8>
  4053d4:	mov	w8, wzr
  4053d8:	mov	w0, w8
  4053dc:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4053e0:	add	x1, x1, #0x7a8
  4053e4:	ldr	x2, [sp, #32]
  4053e8:	mov	w3, #0x6c                  	// #108
  4053ec:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  4053f0:	add	x4, x4, #0x7ac
  4053f4:	bl	4025c0 <log_assert_failed_realm@plt>
  4053f8:	ldr	x8, [sp, #40]
  4053fc:	ldr	x9, [x8]
  405400:	cbz	x9, 4054c8 <safe_fork_full@plt+0x2998>
  405404:	ldr	x8, [sp, #40]
  405408:	ldr	x1, [x8]
  40540c:	sub	x0, x29, #0x20
  405410:	mov	w9, wzr
  405414:	mov	w2, w9
  405418:	bl	402900 <sd_journal_open_directory@plt>
  40541c:	stur	w0, [x29, #-36]
  405420:	ldur	w9, [x29, #-36]
  405424:	cmp	w9, #0x0
  405428:	cset	w9, ge  // ge = tcont
  40542c:	tbnz	w9, #0, 4054c4 <safe_fork_full@plt+0x2994>
  405430:	mov	w8, #0x3                   	// #3
  405434:	stur	w8, [x29, #-40]
  405438:	ldur	w8, [x29, #-36]
  40543c:	stur	w8, [x29, #-44]
  405440:	stur	wzr, [x29, #-48]
  405444:	ldur	w0, [x29, #-48]
  405448:	bl	4025f0 <log_get_max_level_realm@plt>
  40544c:	ldur	w8, [x29, #-40]
  405450:	and	w8, w8, #0x7
  405454:	cmp	w0, w8
  405458:	b.lt	405494 <safe_fork_full@plt+0x2964>  // b.tstop
  40545c:	ldur	w8, [x29, #-48]
  405460:	ldur	w9, [x29, #-40]
  405464:	orr	w0, w9, w8, lsl #10
  405468:	ldur	w1, [x29, #-44]
  40546c:	ldr	x10, [sp, #40]
  405470:	ldr	x6, [x10]
  405474:	ldr	x2, [sp, #32]
  405478:	mov	w3, #0x71                  	// #113
  40547c:	ldr	x4, [sp, #24]
  405480:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405484:	add	x5, x5, #0x7e8
  405488:	bl	402600 <log_internal_realm@plt>
  40548c:	str	w0, [sp, #20]
  405490:	b	4054a8 <safe_fork_full@plt+0x2978>
  405494:	ldur	w0, [x29, #-44]
  405498:	bl	402610 <abs@plt>
  40549c:	mov	w8, wzr
  4054a0:	subs	w8, w8, w0, uxtb
  4054a4:	str	w8, [sp, #20]
  4054a8:	ldr	w8, [sp, #20]
  4054ac:	stur	w8, [x29, #-52]
  4054b0:	ldur	w8, [x29, #-52]
  4054b4:	stur	w8, [x29, #-4]
  4054b8:	mov	w8, #0x1                   	// #1
  4054bc:	stur	w8, [x29, #-56]
  4054c0:	b	4056dc <safe_fork_full@plt+0x2bac>
  4054c4:	b	405574 <safe_fork_full@plt+0x2a44>
  4054c8:	sub	x0, x29, #0x20
  4054cc:	mov	w1, #0x1                   	// #1
  4054d0:	bl	402910 <sd_journal_open@plt>
  4054d4:	stur	w0, [x29, #-36]
  4054d8:	ldur	w8, [x29, #-36]
  4054dc:	cmp	w8, #0x0
  4054e0:	cset	w8, ge  // ge = tcont
  4054e4:	tbnz	w8, #0, 405574 <safe_fork_full@plt+0x2a44>
  4054e8:	mov	w8, #0x3                   	// #3
  4054ec:	stur	w8, [x29, #-60]
  4054f0:	ldur	w8, [x29, #-36]
  4054f4:	stur	w8, [x29, #-64]
  4054f8:	stur	wzr, [x29, #-68]
  4054fc:	ldur	w0, [x29, #-68]
  405500:	bl	4025f0 <log_get_max_level_realm@plt>
  405504:	ldur	w8, [x29, #-60]
  405508:	and	w8, w8, #0x7
  40550c:	cmp	w0, w8
  405510:	b.lt	405544 <safe_fork_full@plt+0x2a14>  // b.tstop
  405514:	ldur	w8, [x29, #-68]
  405518:	ldur	w9, [x29, #-60]
  40551c:	orr	w0, w9, w8, lsl #10
  405520:	ldur	w1, [x29, #-64]
  405524:	ldr	x2, [sp, #32]
  405528:	mov	w3, #0x75                  	// #117
  40552c:	ldr	x4, [sp, #24]
  405530:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405534:	add	x5, x5, #0x815
  405538:	bl	402600 <log_internal_realm@plt>
  40553c:	str	w0, [sp, #16]
  405540:	b	405558 <safe_fork_full@plt+0x2a28>
  405544:	ldur	w0, [x29, #-64]
  405548:	bl	402610 <abs@plt>
  40554c:	mov	w8, wzr
  405550:	subs	w8, w8, w0, uxtb
  405554:	str	w8, [sp, #16]
  405558:	ldr	w8, [sp, #16]
  40555c:	stur	w8, [x29, #-72]
  405560:	ldur	w8, [x29, #-72]
  405564:	stur	w8, [x29, #-4]
  405568:	mov	w8, #0x1                   	// #1
  40556c:	stur	w8, [x29, #-56]
  405570:	b	4056dc <safe_fork_full@plt+0x2bac>
  405574:	ldur	x0, [x29, #-32]
  405578:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  40557c:	add	x8, x8, #0x81
  405580:	ldrb	w9, [x8]
  405584:	mov	w10, #0x1                   	// #1
  405588:	and	w1, w9, #0x1
  40558c:	and	w2, w10, #0x1
  405590:	bl	402920 <journal_access_check_and_warn@plt>
  405594:	stur	w0, [x29, #-36]
  405598:	ldur	w9, [x29, #-36]
  40559c:	cmp	w9, #0x0
  4055a0:	cset	w9, ge  // ge = tcont
  4055a4:	tbnz	w9, #0, 4055bc <safe_fork_full@plt+0x2a8c>
  4055a8:	ldur	w8, [x29, #-36]
  4055ac:	stur	w8, [x29, #-4]
  4055b0:	mov	w8, #0x1                   	// #1
  4055b4:	stur	w8, [x29, #-56]
  4055b8:	b	4056dc <safe_fork_full@plt+0x2bac>
  4055bc:	ldur	x0, [x29, #-32]
  4055c0:	ldur	x1, [x29, #-24]
  4055c4:	bl	405984 <safe_fork_full@plt+0x2e54>
  4055c8:	stur	w0, [x29, #-36]
  4055cc:	ldur	w8, [x29, #-36]
  4055d0:	cmp	w8, #0x0
  4055d4:	cset	w8, ge  // ge = tcont
  4055d8:	tbnz	w8, #0, 4055f0 <safe_fork_full@plt+0x2ac0>
  4055dc:	ldur	w8, [x29, #-36]
  4055e0:	stur	w8, [x29, #-4]
  4055e4:	mov	w8, #0x1                   	// #1
  4055e8:	stur	w8, [x29, #-56]
  4055ec:	b	4056dc <safe_fork_full@plt+0x2bac>
  4055f0:	mov	w8, wzr
  4055f4:	mov	w0, w8
  4055f8:	bl	4025f0 <log_get_max_level_realm@plt>
  4055fc:	cmp	w0, #0x7
  405600:	cset	w8, ge  // ge = tcont
  405604:	mov	w9, #0x1                   	// #1
  405608:	eor	w8, w8, #0x1
  40560c:	eor	w8, w8, w9
  405610:	and	w8, w8, #0x1
  405614:	mov	w1, w8
  405618:	sxtw	x10, w1
  40561c:	cbz	x10, 4056ac <safe_fork_full@plt+0x2b7c>
  405620:	ldur	x0, [x29, #-32]
  405624:	bl	402930 <journal_make_match_string@plt>
  405628:	str	x0, [sp, #80]
  40562c:	mov	w8, #0x7                   	// #7
  405630:	str	w8, [sp, #76]
  405634:	str	wzr, [sp, #72]
  405638:	str	wzr, [sp, #68]
  40563c:	ldr	w0, [sp, #68]
  405640:	bl	4025f0 <log_get_max_level_realm@plt>
  405644:	ldr	w8, [sp, #76]
  405648:	and	w8, w8, #0x7
  40564c:	cmp	w0, w8
  405650:	b.lt	405688 <safe_fork_full@plt+0x2b58>  // b.tstop
  405654:	ldr	w8, [sp, #68]
  405658:	ldr	w9, [sp, #76]
  40565c:	orr	w0, w9, w8, lsl #10
  405660:	ldr	w1, [sp, #72]
  405664:	ldr	x6, [sp, #80]
  405668:	ldr	x2, [sp, #32]
  40566c:	mov	w3, #0x84                  	// #132
  405670:	ldr	x4, [sp, #24]
  405674:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405678:	add	x5, x5, #0x830
  40567c:	bl	402600 <log_internal_realm@plt>
  405680:	str	w0, [sp, #12]
  405684:	b	40569c <safe_fork_full@plt+0x2b6c>
  405688:	ldr	w0, [sp, #72]
  40568c:	bl	402610 <abs@plt>
  405690:	mov	w8, wzr
  405694:	subs	w8, w8, w0, uxtb
  405698:	str	w8, [sp, #12]
  40569c:	ldr	w8, [sp, #12]
  4056a0:	str	w8, [sp, #64]
  4056a4:	add	x0, sp, #0x50
  4056a8:	bl	403f94 <safe_fork_full@plt+0x1464>
  4056ac:	ldur	x8, [x29, #-32]
  4056b0:	str	x8, [sp, #56]
  4056b4:	mov	x8, xzr
  4056b8:	stur	x8, [x29, #-32]
  4056bc:	ldr	x8, [sp, #56]
  4056c0:	str	x8, [sp, #48]
  4056c4:	ldr	x8, [sp, #48]
  4056c8:	ldur	x9, [x29, #-16]
  4056cc:	str	x8, [x9]
  4056d0:	stur	wzr, [x29, #-4]
  4056d4:	mov	w10, #0x1                   	// #1
  4056d8:	stur	w10, [x29, #-56]
  4056dc:	sub	x0, x29, #0x20
  4056e0:	bl	405330 <safe_fork_full@plt+0x2800>
  4056e4:	ldur	w0, [x29, #-4]
  4056e8:	ldp	x29, x30, [sp, #160]
  4056ec:	add	sp, sp, #0xb0
  4056f0:	ret
  4056f4:	sub	sp, sp, #0x60
  4056f8:	stp	x29, x30, [sp, #80]
  4056fc:	add	x29, sp, #0x50
  405700:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  405704:	add	x8, x8, #0x1a
  405708:	add	x8, x8, #0x3
  40570c:	stur	x0, [x29, #-16]
  405710:	ldur	x0, [x29, #-16]
  405714:	str	x8, [sp, #16]
  405718:	bl	402790 <sd_journal_seek_tail@plt>
  40571c:	stur	w0, [x29, #-20]
  405720:	ldur	w9, [x29, #-20]
  405724:	cbnz	w9, 405734 <safe_fork_full@plt+0x2c04>
  405728:	ldur	x0, [x29, #-16]
  40572c:	bl	4027c0 <sd_journal_previous@plt>
  405730:	stur	w0, [x29, #-20]
  405734:	ldur	w8, [x29, #-20]
  405738:	cmp	w8, #0x0
  40573c:	cset	w8, ge  // ge = tcont
  405740:	tbnz	w8, #0, 4057cc <safe_fork_full@plt+0x2c9c>
  405744:	mov	w8, #0x3                   	// #3
  405748:	stur	w8, [x29, #-24]
  40574c:	ldur	w8, [x29, #-20]
  405750:	stur	w8, [x29, #-28]
  405754:	stur	wzr, [x29, #-32]
  405758:	ldur	w0, [x29, #-32]
  40575c:	bl	4025f0 <log_get_max_level_realm@plt>
  405760:	ldur	w8, [x29, #-24]
  405764:	and	w8, w8, #0x7
  405768:	cmp	w0, w8
  40576c:	b.lt	4057a4 <safe_fork_full@plt+0x2c74>  // b.tstop
  405770:	ldur	w8, [x29, #-32]
  405774:	ldur	w9, [x29, #-24]
  405778:	orr	w0, w9, w8, lsl #10
  40577c:	ldur	w1, [x29, #-28]
  405780:	ldr	x2, [sp, #16]
  405784:	mov	w3, #0x272                 	// #626
  405788:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  40578c:	add	x4, x4, #0x99f
  405790:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405794:	add	x5, x5, #0x9a5
  405798:	bl	402600 <log_internal_realm@plt>
  40579c:	str	w0, [sp, #12]
  4057a0:	b	4057b8 <safe_fork_full@plt+0x2c88>
  4057a4:	ldur	w0, [x29, #-28]
  4057a8:	bl	402610 <abs@plt>
  4057ac:	mov	w8, wzr
  4057b0:	subs	w8, w8, w0, uxtb
  4057b4:	str	w8, [sp, #12]
  4057b8:	ldr	w8, [sp, #12]
  4057bc:	stur	w8, [x29, #-36]
  4057c0:	ldur	w8, [x29, #-36]
  4057c4:	stur	w8, [x29, #-4]
  4057c8:	b	405868 <safe_fork_full@plt+0x2d38>
  4057cc:	ldur	w8, [x29, #-20]
  4057d0:	cbnz	w8, 405860 <safe_fork_full@plt+0x2d30>
  4057d4:	mov	w8, #0x3                   	// #3
  4057d8:	str	w8, [sp, #40]
  4057dc:	mov	w8, #0x3                   	// #3
  4057e0:	movk	w8, #0x4000, lsl #16
  4057e4:	str	w8, [sp, #36]
  4057e8:	str	wzr, [sp, #32]
  4057ec:	ldr	w0, [sp, #32]
  4057f0:	bl	4025f0 <log_get_max_level_realm@plt>
  4057f4:	ldr	w8, [sp, #40]
  4057f8:	and	w8, w8, #0x7
  4057fc:	cmp	w0, w8
  405800:	b.lt	405838 <safe_fork_full@plt+0x2d08>  // b.tstop
  405804:	ldr	w8, [sp, #32]
  405808:	ldr	w9, [sp, #40]
  40580c:	orr	w0, w9, w8, lsl #10
  405810:	ldr	w1, [sp, #36]
  405814:	ldr	x2, [sp, #16]
  405818:	mov	w3, #0x275                 	// #629
  40581c:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  405820:	add	x4, x4, #0x99f
  405824:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405828:	add	x5, x5, #0x9c2
  40582c:	bl	402600 <log_internal_realm@plt>
  405830:	str	w0, [sp, #8]
  405834:	b	40584c <safe_fork_full@plt+0x2d1c>
  405838:	ldr	w0, [sp, #36]
  40583c:	bl	402610 <abs@plt>
  405840:	mov	w8, wzr
  405844:	subs	w8, w8, w0, uxtb
  405848:	str	w8, [sp, #8]
  40584c:	ldr	w8, [sp, #8]
  405850:	str	w8, [sp, #28]
  405854:	ldr	w8, [sp, #28]
  405858:	stur	w8, [x29, #-4]
  40585c:	b	405868 <safe_fork_full@plt+0x2d38>
  405860:	ldur	w8, [x29, #-20]
  405864:	stur	w8, [x29, #-4]
  405868:	ldur	w0, [x29, #-4]
  40586c:	ldp	x29, x30, [sp, #80]
  405870:	add	sp, sp, #0x60
  405874:	ret
  405878:	sub	sp, sp, #0x40
  40587c:	stp	x29, x30, [sp, #48]
  405880:	add	x29, sp, #0x30
  405884:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  405888:	add	x8, x8, #0xa8
  40588c:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  405890:	add	x9, x9, #0x1a
  405894:	add	x9, x9, #0x3
  405898:	stur	x0, [x29, #-16]
  40589c:	stur	w1, [x29, #-20]
  4058a0:	and	w10, w2, #0x1
  4058a4:	sturb	w10, [x29, #-21]
  4058a8:	str	x8, [sp, #16]
  4058ac:	str	x9, [sp, #8]
  4058b0:	ldur	x8, [x29, #-16]
  4058b4:	cmp	x8, #0x0
  4058b8:	cset	w9, ne  // ne = any
  4058bc:	mov	w10, #0x1                   	// #1
  4058c0:	eor	w9, w9, #0x1
  4058c4:	eor	w9, w9, w10
  4058c8:	eor	w9, w9, w10
  4058cc:	and	w9, w9, #0x1
  4058d0:	mov	w0, w9
  4058d4:	sxtw	x8, w0
  4058d8:	cbz	x8, 405900 <safe_fork_full@plt+0x2dd0>
  4058dc:	mov	w8, wzr
  4058e0:	mov	w0, w8
  4058e4:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4058e8:	add	x1, x1, #0x9d2
  4058ec:	ldr	x2, [sp, #8]
  4058f0:	mov	w3, #0x27a                 	// #634
  4058f4:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  4058f8:	add	x4, x4, #0x9d4
  4058fc:	bl	4025c0 <log_assert_failed_realm@plt>
  405900:	ldurb	w8, [x29, #-21]
  405904:	tbnz	w8, #0, 40590c <safe_fork_full@plt+0x2ddc>
  405908:	b	405934 <safe_fork_full@plt+0x2e04>
  40590c:	ldr	x8, [sp, #16]
  405910:	ldr	x0, [x8]
  405914:	ldur	x1, [x29, #-16]
  405918:	ldur	w9, [x29, #-20]
  40591c:	cmp	w9, #0x0
  405920:	cset	w9, ne  // ne = any
  405924:	and	w2, w9, #0x1
  405928:	bl	4060f0 <safe_fork_full@plt+0x35c0>
  40592c:	stur	w0, [x29, #-4]
  405930:	b	405974 <safe_fork_full@plt+0x2e44>
  405934:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  405938:	add	x8, x8, #0x68
  40593c:	ldr	x8, [x8]
  405940:	cbz	x8, 40595c <safe_fork_full@plt+0x2e2c>
  405944:	ldr	x8, [sp, #16]
  405948:	ldr	x0, [x8]
  40594c:	ldur	x1, [x29, #-16]
  405950:	bl	40711c <safe_fork_full@plt+0x45ec>
  405954:	stur	w0, [x29, #-4]
  405958:	b	405974 <safe_fork_full@plt+0x2e44>
  40595c:	ldr	x8, [sp, #16]
  405960:	ldr	x0, [x8]
  405964:	ldur	x1, [x29, #-16]
  405968:	ldur	w2, [x29, #-20]
  40596c:	bl	407300 <safe_fork_full@plt+0x47d0>
  405970:	stur	w0, [x29, #-4]
  405974:	ldur	w0, [x29, #-4]
  405978:	ldp	x29, x30, [sp, #48]
  40597c:	add	sp, sp, #0x40
  405980:	ret
  405984:	sub	sp, sp, #0x70
  405988:	stp	x29, x30, [sp, #96]
  40598c:	add	x29, sp, #0x60
  405990:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  405994:	add	x8, x8, #0x843
  405998:	mov	x9, xzr
  40599c:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  4059a0:	add	x10, x10, #0x1a
  4059a4:	add	x10, x10, #0x3
  4059a8:	stur	x0, [x29, #-16]
  4059ac:	stur	x1, [x29, #-24]
  4059b0:	ldur	x0, [x29, #-16]
  4059b4:	mov	x1, x8
  4059b8:	mov	x2, x9
  4059bc:	str	x10, [sp, #16]
  4059c0:	bl	402940 <sd_journal_add_match@plt>
  4059c4:	stur	w0, [x29, #-36]
  4059c8:	ldur	w11, [x29, #-36]
  4059cc:	cmp	w11, #0x0
  4059d0:	cset	w11, ge  // ge = tcont
  4059d4:	tbnz	w11, #0, 405a68 <safe_fork_full@plt+0x2f38>
  4059d8:	mov	w8, #0x3                   	// #3
  4059dc:	stur	w8, [x29, #-40]
  4059e0:	ldur	w8, [x29, #-36]
  4059e4:	stur	w8, [x29, #-44]
  4059e8:	str	wzr, [sp, #48]
  4059ec:	ldr	w0, [sp, #48]
  4059f0:	bl	4025f0 <log_get_max_level_realm@plt>
  4059f4:	ldur	w8, [x29, #-40]
  4059f8:	and	w8, w8, #0x7
  4059fc:	cmp	w0, w8
  405a00:	b.lt	405a40 <safe_fork_full@plt+0x2f10>  // b.tstop
  405a04:	ldr	w8, [sp, #48]
  405a08:	ldur	w9, [x29, #-40]
  405a0c:	orr	w0, w9, w8, lsl #10
  405a10:	ldur	w1, [x29, #-44]
  405a14:	ldr	x2, [sp, #16]
  405a18:	mov	w3, #0x59                  	// #89
  405a1c:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  405a20:	add	x4, x4, #0x86f
  405a24:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405a28:	add	x5, x5, #0x87b
  405a2c:	adrp	x6, 409000 <safe_fork_full@plt+0x64d0>
  405a30:	add	x6, x6, #0x843
  405a34:	bl	402600 <log_internal_realm@plt>
  405a38:	str	w0, [sp, #12]
  405a3c:	b	405a54 <safe_fork_full@plt+0x2f24>
  405a40:	ldur	w0, [x29, #-44]
  405a44:	bl	402610 <abs@plt>
  405a48:	mov	w8, wzr
  405a4c:	subs	w8, w8, w0, uxtb
  405a50:	str	w8, [sp, #12]
  405a54:	ldr	w8, [sp, #12]
  405a58:	str	w8, [sp, #44]
  405a5c:	ldr	w8, [sp, #44]
  405a60:	stur	w8, [x29, #-4]
  405a64:	b	405ba0 <safe_fork_full@plt+0x3070>
  405a68:	ldur	x0, [x29, #-16]
  405a6c:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  405a70:	add	x1, x1, #0x898
  405a74:	mov	x8, xzr
  405a78:	mov	x2, x8
  405a7c:	bl	402940 <sd_journal_add_match@plt>
  405a80:	stur	w0, [x29, #-36]
  405a84:	ldur	w9, [x29, #-36]
  405a88:	cmp	w9, #0x0
  405a8c:	cset	w9, ge  // ge = tcont
  405a90:	tbnz	w9, #0, 405b24 <safe_fork_full@plt+0x2ff4>
  405a94:	mov	w8, #0x3                   	// #3
  405a98:	str	w8, [sp, #40]
  405a9c:	ldur	w8, [x29, #-36]
  405aa0:	str	w8, [sp, #36]
  405aa4:	str	wzr, [sp, #32]
  405aa8:	ldr	w0, [sp, #32]
  405aac:	bl	4025f0 <log_get_max_level_realm@plt>
  405ab0:	ldr	w8, [sp, #40]
  405ab4:	and	w8, w8, #0x7
  405ab8:	cmp	w0, w8
  405abc:	b.lt	405afc <safe_fork_full@plt+0x2fcc>  // b.tstop
  405ac0:	ldr	w8, [sp, #32]
  405ac4:	ldr	w9, [sp, #40]
  405ac8:	orr	w0, w9, w8, lsl #10
  405acc:	ldr	w1, [sp, #36]
  405ad0:	ldr	x2, [sp, #16]
  405ad4:	mov	w3, #0x5d                  	// #93
  405ad8:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  405adc:	add	x4, x4, #0x86f
  405ae0:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405ae4:	add	x5, x5, #0x87b
  405ae8:	adrp	x6, 409000 <safe_fork_full@plt+0x64d0>
  405aec:	add	x6, x6, #0x898
  405af0:	bl	402600 <log_internal_realm@plt>
  405af4:	str	w0, [sp, #8]
  405af8:	b	405b10 <safe_fork_full@plt+0x2fe0>
  405afc:	ldr	w0, [sp, #36]
  405b00:	bl	402610 <abs@plt>
  405b04:	mov	w8, wzr
  405b08:	subs	w8, w8, w0, uxtb
  405b0c:	str	w8, [sp, #8]
  405b10:	ldr	w8, [sp, #8]
  405b14:	str	w8, [sp, #28]
  405b18:	ldr	w8, [sp, #28]
  405b1c:	stur	w8, [x29, #-4]
  405b20:	b	405ba0 <safe_fork_full@plt+0x3070>
  405b24:	ldur	x8, [x29, #-24]
  405b28:	stur	x8, [x29, #-32]
  405b2c:	ldur	x8, [x29, #-32]
  405b30:	mov	w9, #0x0                   	// #0
  405b34:	str	w9, [sp, #4]
  405b38:	cbz	x8, 405b50 <safe_fork_full@plt+0x3020>
  405b3c:	ldur	x8, [x29, #-32]
  405b40:	ldr	x8, [x8]
  405b44:	cmp	x8, #0x0
  405b48:	cset	w9, ne  // ne = any
  405b4c:	str	w9, [sp, #4]
  405b50:	ldr	w8, [sp, #4]
  405b54:	tbnz	w8, #0, 405b5c <safe_fork_full@plt+0x302c>
  405b58:	b	405b9c <safe_fork_full@plt+0x306c>
  405b5c:	ldur	x0, [x29, #-16]
  405b60:	ldur	x8, [x29, #-32]
  405b64:	ldr	x1, [x8]
  405b68:	bl	405bb0 <safe_fork_full@plt+0x3080>
  405b6c:	stur	w0, [x29, #-36]
  405b70:	ldur	w9, [x29, #-36]
  405b74:	cmp	w9, #0x0
  405b78:	cset	w9, ge  // ge = tcont
  405b7c:	tbnz	w9, #0, 405b8c <safe_fork_full@plt+0x305c>
  405b80:	ldur	w8, [x29, #-36]
  405b84:	stur	w8, [x29, #-4]
  405b88:	b	405ba0 <safe_fork_full@plt+0x3070>
  405b8c:	ldur	x8, [x29, #-32]
  405b90:	add	x8, x8, #0x8
  405b94:	stur	x8, [x29, #-32]
  405b98:	b	405b2c <safe_fork_full@plt+0x2ffc>
  405b9c:	stur	wzr, [x29, #-4]
  405ba0:	ldur	w0, [x29, #-4]
  405ba4:	ldp	x29, x30, [sp, #96]
  405ba8:	add	sp, sp, #0x70
  405bac:	ret
  405bb0:	stp	x29, x30, [sp, #-16]!
  405bb4:	mov	x29, sp
  405bb8:	sub	sp, sp, #0xe0
  405bbc:	mov	x8, xzr
  405bc0:	mov	w9, #0x3d                  	// #61
  405bc4:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  405bc8:	add	x10, x10, #0x1a
  405bcc:	add	x10, x10, #0x3
  405bd0:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  405bd4:	add	x11, x11, #0x8c4
  405bd8:	stur	x0, [x29, #-16]
  405bdc:	stur	x1, [x29, #-24]
  405be0:	stur	x8, [x29, #-32]
  405be4:	ldur	x0, [x29, #-24]
  405be8:	mov	w1, w9
  405bec:	stur	x10, [x29, #-192]
  405bf0:	stur	x11, [x29, #-200]
  405bf4:	bl	402950 <strchr@plt>
  405bf8:	cbz	x0, 405c0c <safe_fork_full@plt+0x30dc>
  405bfc:	adrp	x8, 408000 <safe_fork_full@plt+0x54d0>
  405c00:	add	x8, x8, #0xf48
  405c04:	stur	x8, [x29, #-40]
  405c08:	b	405d18 <safe_fork_full@plt+0x31e8>
  405c0c:	ldur	x0, [x29, #-24]
  405c10:	mov	w1, #0x2f                  	// #47
  405c14:	bl	402950 <strchr@plt>
  405c18:	cbz	x0, 405ce4 <safe_fork_full@plt+0x31b4>
  405c1c:	ldur	x0, [x29, #-24]
  405c20:	sub	x1, x29, #0x20
  405c24:	bl	402960 <path_make_absolute_cwd@plt>
  405c28:	stur	w0, [x29, #-56]
  405c2c:	ldur	w8, [x29, #-56]
  405c30:	cmp	w8, #0x0
  405c34:	cset	w8, ge  // ge = tcont
  405c38:	tbnz	w8, #0, 405ccc <safe_fork_full@plt+0x319c>
  405c3c:	mov	w8, #0x3                   	// #3
  405c40:	stur	w8, [x29, #-60]
  405c44:	ldur	w8, [x29, #-56]
  405c48:	stur	w8, [x29, #-64]
  405c4c:	stur	wzr, [x29, #-68]
  405c50:	ldur	w0, [x29, #-68]
  405c54:	bl	4025f0 <log_get_max_level_realm@plt>
  405c58:	ldur	w8, [x29, #-60]
  405c5c:	and	w8, w8, #0x7
  405c60:	cmp	w0, w8
  405c64:	b.lt	405c9c <safe_fork_full@plt+0x316c>  // b.tstop
  405c68:	ldur	w8, [x29, #-68]
  405c6c:	ldur	w9, [x29, #-60]
  405c70:	orr	w0, w9, w8, lsl #10
  405c74:	ldur	w1, [x29, #-64]
  405c78:	ldur	x6, [x29, #-24]
  405c7c:	ldur	x2, [x29, #-192]
  405c80:	mov	w3, #0x41                  	// #65
  405c84:	ldur	x4, [x29, #-200]
  405c88:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405c8c:	add	x5, x5, #0x8ce
  405c90:	bl	402600 <log_internal_realm@plt>
  405c94:	stur	w0, [x29, #-204]
  405c98:	b	405cb0 <safe_fork_full@plt+0x3180>
  405c9c:	ldur	w0, [x29, #-64]
  405ca0:	bl	402610 <abs@plt>
  405ca4:	mov	w8, wzr
  405ca8:	subs	w8, w8, w0, uxtb
  405cac:	stur	w8, [x29, #-204]
  405cb0:	ldur	w8, [x29, #-204]
  405cb4:	stur	w8, [x29, #-72]
  405cb8:	ldur	w8, [x29, #-72]
  405cbc:	stur	w8, [x29, #-4]
  405cc0:	mov	w8, #0x1                   	// #1
  405cc4:	stur	w8, [x29, #-76]
  405cc8:	b	406070 <safe_fork_full@plt+0x3540>
  405ccc:	ldur	x8, [x29, #-32]
  405cd0:	stur	x8, [x29, #-24]
  405cd4:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  405cd8:	add	x8, x8, #0x8ef
  405cdc:	stur	x8, [x29, #-40]
  405ce0:	b	405d18 <safe_fork_full@plt+0x31e8>
  405ce4:	ldur	x0, [x29, #-24]
  405ce8:	sub	x1, x29, #0x34
  405cec:	bl	402970 <parse_pid@plt>
  405cf0:	cmp	w0, #0x0
  405cf4:	cset	w8, lt  // lt = tstop
  405cf8:	tbnz	w8, #0, 405d0c <safe_fork_full@plt+0x31dc>
  405cfc:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  405d00:	add	x8, x8, #0x8fd
  405d04:	stur	x8, [x29, #-40]
  405d08:	b	405d18 <safe_fork_full@plt+0x31e8>
  405d0c:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  405d10:	add	x8, x8, #0x90b
  405d14:	stur	x8, [x29, #-40]
  405d18:	ldur	x8, [x29, #-40]
  405d1c:	sub	x9, x29, #0x60
  405d20:	stur	x8, [x29, #-96]
  405d24:	ldur	x8, [x29, #-24]
  405d28:	str	x8, [x9, #8]
  405d2c:	stur	xzr, [x29, #-120]
  405d30:	stur	xzr, [x29, #-128]
  405d34:	ldur	x8, [x29, #-128]
  405d38:	mov	w9, #0x0                   	// #0
  405d3c:	cmp	x8, #0x2
  405d40:	stur	w9, [x29, #-208]
  405d44:	b.cs	405d6c <safe_fork_full@plt+0x323c>  // b.hs, b.nlast
  405d48:	ldur	x8, [x29, #-128]
  405d4c:	mov	x9, #0x8                   	// #8
  405d50:	mul	x8, x9, x8
  405d54:	sub	x9, x29, #0x60
  405d58:	add	x8, x9, x8
  405d5c:	ldr	x8, [x8]
  405d60:	cmp	x8, #0x0
  405d64:	cset	w10, ne  // ne = any
  405d68:	stur	w10, [x29, #-208]
  405d6c:	ldur	w8, [x29, #-208]
  405d70:	tbnz	w8, #0, 405d78 <safe_fork_full@plt+0x3248>
  405d74:	b	405db0 <safe_fork_full@plt+0x3280>
  405d78:	ldur	x8, [x29, #-128]
  405d7c:	mov	x9, #0x8                   	// #8
  405d80:	mul	x8, x9, x8
  405d84:	sub	x9, x29, #0x60
  405d88:	add	x8, x9, x8
  405d8c:	ldr	x0, [x8]
  405d90:	bl	402880 <strlen@plt>
  405d94:	ldur	x8, [x29, #-120]
  405d98:	add	x8, x8, x0
  405d9c:	stur	x8, [x29, #-120]
  405da0:	ldur	x8, [x29, #-128]
  405da4:	add	x8, x8, #0x1
  405da8:	stur	x8, [x29, #-128]
  405dac:	b	405d34 <safe_fork_full@plt+0x3204>
  405db0:	ldur	x8, [x29, #-120]
  405db4:	add	x8, x8, #0x1
  405db8:	stur	x8, [x29, #-136]
  405dbc:	ldur	x1, [x29, #-136]
  405dc0:	mov	x0, #0x1                   	// #1
  405dc4:	bl	406088 <safe_fork_full@plt+0x3558>
  405dc8:	mov	w8, #0x1                   	// #1
  405dcc:	eor	w9, w0, #0x1
  405dd0:	eor	w9, w9, w8
  405dd4:	eor	w9, w9, w8
  405dd8:	eor	w8, w9, w8
  405ddc:	and	w8, w8, #0x1
  405de0:	mov	w1, w8
  405de4:	sxtw	x10, w1
  405de8:	cbz	x10, 405e10 <safe_fork_full@plt+0x32e0>
  405dec:	mov	w8, wzr
  405df0:	mov	w0, w8
  405df4:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  405df8:	add	x1, x1, #0x91a
  405dfc:	ldur	x2, [x29, #-192]
  405e00:	mov	w3, #0x4a                  	// #74
  405e04:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  405e08:	add	x4, x4, #0x945
  405e0c:	bl	4025c0 <log_assert_failed_realm@plt>
  405e10:	ldur	x8, [x29, #-136]
  405e14:	mov	x9, #0x1                   	// #1
  405e18:	mul	x8, x9, x8
  405e1c:	cmp	x8, #0x400, lsl #12
  405e20:	cset	w10, ls  // ls = plast
  405e24:	mov	w11, #0x1                   	// #1
  405e28:	eor	w10, w10, #0x1
  405e2c:	eor	w10, w10, w11
  405e30:	eor	w10, w10, w11
  405e34:	and	w10, w10, #0x1
  405e38:	mov	w0, w10
  405e3c:	sxtw	x8, w0
  405e40:	cbz	x8, 405e68 <safe_fork_full@plt+0x3338>
  405e44:	mov	w8, wzr
  405e48:	mov	w0, w8
  405e4c:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  405e50:	add	x1, x1, #0x96f
  405e54:	ldur	x2, [x29, #-192]
  405e58:	mov	w3, #0x4a                  	// #74
  405e5c:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  405e60:	add	x4, x4, #0x945
  405e64:	bl	4025c0 <log_assert_failed_realm@plt>
  405e68:	ldur	x8, [x29, #-136]
  405e6c:	mov	x9, #0x1                   	// #1
  405e70:	mul	x8, x9, x8
  405e74:	mul	x8, x8, x9
  405e78:	add	x8, x8, #0xf
  405e7c:	and	x8, x8, #0xfffffffffffffff0
  405e80:	mov	x9, sp
  405e84:	subs	x8, x9, x8
  405e88:	mov	sp, x8
  405e8c:	stur	x8, [x29, #-144]
  405e90:	ldur	x8, [x29, #-144]
  405e94:	stur	x8, [x29, #-104]
  405e98:	stur	x8, [x29, #-112]
  405e9c:	stur	xzr, [x29, #-128]
  405ea0:	ldur	x8, [x29, #-128]
  405ea4:	mov	w9, #0x0                   	// #0
  405ea8:	cmp	x8, #0x2
  405eac:	stur	w9, [x29, #-212]
  405eb0:	b.cs	405ed8 <safe_fork_full@plt+0x33a8>  // b.hs, b.nlast
  405eb4:	ldur	x8, [x29, #-128]
  405eb8:	mov	x9, #0x8                   	// #8
  405ebc:	mul	x8, x9, x8
  405ec0:	sub	x9, x29, #0x60
  405ec4:	add	x8, x9, x8
  405ec8:	ldr	x8, [x8]
  405ecc:	cmp	x8, #0x0
  405ed0:	cset	w10, ne  // ne = any
  405ed4:	stur	w10, [x29, #-212]
  405ed8:	ldur	w8, [x29, #-212]
  405edc:	tbnz	w8, #0, 405ee4 <safe_fork_full@plt+0x33b4>
  405ee0:	b	405f18 <safe_fork_full@plt+0x33e8>
  405ee4:	ldur	x0, [x29, #-112]
  405ee8:	ldur	x8, [x29, #-128]
  405eec:	mov	x9, #0x8                   	// #8
  405ef0:	mul	x8, x9, x8
  405ef4:	sub	x9, x29, #0x60
  405ef8:	add	x8, x9, x8
  405efc:	ldr	x1, [x8]
  405f00:	bl	402890 <stpcpy@plt>
  405f04:	stur	x0, [x29, #-112]
  405f08:	ldur	x8, [x29, #-128]
  405f0c:	add	x8, x8, #0x1
  405f10:	stur	x8, [x29, #-128]
  405f14:	b	405ea0 <safe_fork_full@plt+0x3370>
  405f18:	ldur	x8, [x29, #-112]
  405f1c:	mov	w9, #0x0                   	// #0
  405f20:	strb	w9, [x8]
  405f24:	ldur	x8, [x29, #-104]
  405f28:	stur	x8, [x29, #-152]
  405f2c:	ldur	x8, [x29, #-152]
  405f30:	stur	x8, [x29, #-48]
  405f34:	mov	w9, #0x7                   	// #7
  405f38:	stur	w9, [x29, #-156]
  405f3c:	stur	wzr, [x29, #-160]
  405f40:	stur	wzr, [x29, #-164]
  405f44:	ldur	w0, [x29, #-164]
  405f48:	bl	4025f0 <log_get_max_level_realm@plt>
  405f4c:	ldur	w9, [x29, #-156]
  405f50:	and	w9, w9, #0x7
  405f54:	cmp	w0, w9
  405f58:	b.lt	405f90 <safe_fork_full@plt+0x3460>  // b.tstop
  405f5c:	ldur	w8, [x29, #-164]
  405f60:	ldur	w9, [x29, #-156]
  405f64:	orr	w0, w9, w8, lsl #10
  405f68:	ldur	w1, [x29, #-160]
  405f6c:	ldur	x6, [x29, #-48]
  405f70:	ldur	x2, [x29, #-192]
  405f74:	mov	w3, #0x4b                  	// #75
  405f78:	ldur	x4, [x29, #-200]
  405f7c:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  405f80:	add	x5, x5, #0x98e
  405f84:	bl	402600 <log_internal_realm@plt>
  405f88:	stur	w0, [x29, #-216]
  405f8c:	b	405fa4 <safe_fork_full@plt+0x3474>
  405f90:	ldur	w0, [x29, #-160]
  405f94:	bl	402610 <abs@plt>
  405f98:	mov	w8, wzr
  405f9c:	subs	w8, w8, w0, uxtb
  405fa0:	stur	w8, [x29, #-216]
  405fa4:	ldur	w8, [x29, #-216]
  405fa8:	stur	w8, [x29, #-168]
  405fac:	ldur	x0, [x29, #-16]
  405fb0:	ldur	x1, [x29, #-48]
  405fb4:	mov	x9, xzr
  405fb8:	mov	x2, x9
  405fbc:	bl	402940 <sd_journal_add_match@plt>
  405fc0:	stur	w0, [x29, #-56]
  405fc4:	ldur	w8, [x29, #-56]
  405fc8:	cmp	w8, #0x0
  405fcc:	cset	w8, ge  // ge = tcont
  405fd0:	tbnz	w8, #0, 406064 <safe_fork_full@plt+0x3534>
  405fd4:	mov	w8, #0x3                   	// #3
  405fd8:	stur	w8, [x29, #-172]
  405fdc:	ldur	w8, [x29, #-56]
  405fe0:	stur	w8, [x29, #-176]
  405fe4:	stur	wzr, [x29, #-180]
  405fe8:	ldur	w0, [x29, #-180]
  405fec:	bl	4025f0 <log_get_max_level_realm@plt>
  405ff0:	ldur	w8, [x29, #-172]
  405ff4:	and	w8, w8, #0x7
  405ff8:	cmp	w0, w8
  405ffc:	b.lt	406034 <safe_fork_full@plt+0x3504>  // b.tstop
  406000:	ldur	w8, [x29, #-180]
  406004:	ldur	w9, [x29, #-172]
  406008:	orr	w0, w9, w8, lsl #10
  40600c:	ldur	w1, [x29, #-176]
  406010:	ldur	x6, [x29, #-24]
  406014:	ldur	x2, [x29, #-192]
  406018:	mov	w3, #0x4e                  	// #78
  40601c:	ldur	x4, [x29, #-200]
  406020:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  406024:	add	x5, x5, #0x87b
  406028:	bl	402600 <log_internal_realm@plt>
  40602c:	stur	w0, [x29, #-220]
  406030:	b	406048 <safe_fork_full@plt+0x3518>
  406034:	ldur	w0, [x29, #-176]
  406038:	bl	402610 <abs@plt>
  40603c:	mov	w8, wzr
  406040:	subs	w8, w8, w0, uxtb
  406044:	stur	w8, [x29, #-220]
  406048:	ldur	w8, [x29, #-220]
  40604c:	stur	w8, [x29, #-184]
  406050:	ldur	w8, [x29, #-184]
  406054:	stur	w8, [x29, #-4]
  406058:	mov	w8, #0x1                   	// #1
  40605c:	stur	w8, [x29, #-76]
  406060:	b	406070 <safe_fork_full@plt+0x3540>
  406064:	stur	wzr, [x29, #-4]
  406068:	mov	w8, #0x1                   	// #1
  40606c:	stur	w8, [x29, #-76]
  406070:	sub	x0, x29, #0x20
  406074:	bl	403f94 <safe_fork_full@plt+0x1464>
  406078:	ldur	w0, [x29, #-4]
  40607c:	mov	sp, x29
  406080:	ldp	x29, x30, [sp], #16
  406084:	ret
  406088:	sub	sp, sp, #0x20
  40608c:	str	x0, [sp, #24]
  406090:	str	x1, [sp, #16]
  406094:	ldr	x8, [sp, #16]
  406098:	mov	w9, #0x0                   	// #0
  40609c:	str	w9, [sp, #12]
  4060a0:	cbz	x8, 4060c0 <safe_fork_full@plt+0x3590>
  4060a4:	ldr	x8, [sp, #24]
  4060a8:	ldr	x9, [sp, #16]
  4060ac:	mov	x10, #0xffffffffffffffff    	// #-1
  4060b0:	udiv	x9, x10, x9
  4060b4:	cmp	x8, x9
  4060b8:	cset	w11, hi  // hi = pmore
  4060bc:	str	w11, [sp, #12]
  4060c0:	ldr	w8, [sp, #12]
  4060c4:	mov	w9, #0x1                   	// #1
  4060c8:	eor	w8, w8, #0x1
  4060cc:	eor	w8, w8, w9
  4060d0:	and	w8, w8, #0x1
  4060d4:	mov	w0, w8
  4060d8:	sxtw	x10, w0
  4060dc:	cmp	x10, #0x0
  4060e0:	cset	w8, ne  // ne = any
  4060e4:	and	w0, w8, #0x1
  4060e8:	add	sp, sp, #0x20
  4060ec:	ret
  4060f0:	stp	x29, x30, [sp, #-32]!
  4060f4:	str	x28, [sp, #16]
  4060f8:	mov	x29, sp
  4060fc:	sub	sp, sp, #0x330
  406100:	mov	x8, xzr
  406104:	adrp	x9, 408000 <safe_fork_full@plt+0x54d0>
  406108:	add	x9, x9, #0xf48
  40610c:	mov	w10, #0x1                   	// #1
  406110:	adrp	x11, 409000 <safe_fork_full@plt+0x64d0>
  406114:	add	x11, x11, #0x1a
  406118:	add	x11, x11, #0x3
  40611c:	stur	x0, [x29, #-16]
  406120:	stur	x1, [x29, #-24]
  406124:	and	w10, w2, w10
  406128:	sturb	w10, [x29, #-25]
  40612c:	stur	x8, [x29, #-40]
  406130:	stur	x8, [x29, #-48]
  406134:	stur	x8, [x29, #-56]
  406138:	stur	x8, [x29, #-64]
  40613c:	stur	x8, [x29, #-72]
  406140:	stur	x8, [x29, #-80]
  406144:	stur	x8, [x29, #-88]
  406148:	stur	x8, [x29, #-96]
  40614c:	stur	x8, [x29, #-104]
  406150:	stur	x8, [x29, #-112]
  406154:	stur	x8, [x29, #-120]
  406158:	stur	x8, [x29, #-128]
  40615c:	stur	x8, [x29, #-136]
  406160:	stur	x8, [x29, #-144]
  406164:	stur	x8, [x29, #-152]
  406168:	stur	x8, [x29, #-160]
  40616c:	stur	x8, [x29, #-168]
  406170:	stur	x8, [x29, #-176]
  406174:	stur	x8, [x29, #-184]
  406178:	stur	x8, [x29, #-192]
  40617c:	stur	x8, [x29, #-200]
  406180:	stur	x8, [x29, #-208]
  406184:	str	x9, [sp, #296]
  406188:	str	x11, [sp, #288]
  40618c:	ldur	x8, [x29, #-16]
  406190:	cmp	x8, #0x0
  406194:	cset	w9, ne  // ne = any
  406198:	mov	w10, #0x1                   	// #1
  40619c:	eor	w9, w9, #0x1
  4061a0:	eor	w9, w9, w10
  4061a4:	eor	w9, w9, w10
  4061a8:	and	w9, w9, #0x1
  4061ac:	mov	w0, w9
  4061b0:	sxtw	x8, w0
  4061b4:	cbz	x8, 4061dc <safe_fork_full@plt+0x36ac>
  4061b8:	mov	w8, wzr
  4061bc:	mov	w0, w8
  4061c0:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4061c4:	add	x1, x1, #0xa07
  4061c8:	ldr	x2, [sp, #288]
  4061cc:	mov	w3, #0x1be                 	// #446
  4061d0:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  4061d4:	add	x4, x4, #0xa0c
  4061d8:	bl	4025c0 <log_assert_failed_realm@plt>
  4061dc:	ldur	x8, [x29, #-24]
  4061e0:	cmp	x8, #0x0
  4061e4:	cset	w9, ne  // ne = any
  4061e8:	mov	w10, #0x1                   	// #1
  4061ec:	eor	w9, w9, #0x1
  4061f0:	eor	w9, w9, w10
  4061f4:	eor	w9, w9, w10
  4061f8:	and	w9, w9, #0x1
  4061fc:	mov	w0, w9
  406200:	sxtw	x8, w0
  406204:	cbz	x8, 40622c <safe_fork_full@plt+0x36fc>
  406208:	mov	w8, wzr
  40620c:	mov	w0, w8
  406210:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406214:	add	x1, x1, #0x9d2
  406218:	ldr	x2, [sp, #288]
  40621c:	mov	w3, #0x1bf                 	// #447
  406220:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  406224:	add	x4, x4, #0xa0c
  406228:	bl	4025c0 <log_assert_failed_realm@plt>
  40622c:	ldur	x0, [x29, #-24]
  406230:	bl	402980 <sd_journal_restart_data@plt>
  406234:	ldur	x0, [x29, #-24]
  406238:	sub	x1, x29, #0xd8
  40623c:	sub	x2, x29, #0xe0
  406240:	bl	402990 <sd_journal_enumerate_data@plt>
  406244:	cmp	w0, #0x0
  406248:	cset	w8, le
  40624c:	tbnz	w8, #0, 40698c <safe_fork_full@plt+0x3e5c>
  406250:	ldur	x0, [x29, #-216]
  406254:	ldur	x1, [x29, #-224]
  406258:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  40625c:	add	x2, x2, #0xa38
  406260:	sub	x3, x29, #0x28
  406264:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406268:	stur	w0, [x29, #-236]
  40626c:	ldur	w8, [x29, #-236]
  406270:	cmp	w8, #0x0
  406274:	cset	w8, ge  // ge = tcont
  406278:	tbnz	w8, #0, 406290 <safe_fork_full@plt+0x3760>
  40627c:	ldur	w8, [x29, #-236]
  406280:	stur	w8, [x29, #-4]
  406284:	mov	w8, #0x1                   	// #1
  406288:	stur	w8, [x29, #-240]
  40628c:	b	407058 <safe_fork_full@plt+0x4528>
  406290:	ldur	w8, [x29, #-236]
  406294:	cmp	w8, #0x0
  406298:	cset	w8, le
  40629c:	tbnz	w8, #0, 4062a4 <safe_fork_full@plt+0x3774>
  4062a0:	b	406234 <safe_fork_full@plt+0x3704>
  4062a4:	ldur	x0, [x29, #-216]
  4062a8:	ldur	x1, [x29, #-224]
  4062ac:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4062b0:	add	x2, x2, #0xa43
  4062b4:	sub	x3, x29, #0x30
  4062b8:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4062bc:	stur	w0, [x29, #-244]
  4062c0:	ldur	w8, [x29, #-244]
  4062c4:	cmp	w8, #0x0
  4062c8:	cset	w8, ge  // ge = tcont
  4062cc:	tbnz	w8, #0, 4062e4 <safe_fork_full@plt+0x37b4>
  4062d0:	ldur	w8, [x29, #-244]
  4062d4:	stur	w8, [x29, #-4]
  4062d8:	mov	w8, #0x1                   	// #1
  4062dc:	stur	w8, [x29, #-240]
  4062e0:	b	407058 <safe_fork_full@plt+0x4528>
  4062e4:	ldur	w8, [x29, #-244]
  4062e8:	cmp	w8, #0x0
  4062ec:	cset	w8, le
  4062f0:	tbnz	w8, #0, 4062f8 <safe_fork_full@plt+0x37c8>
  4062f4:	b	406234 <safe_fork_full@plt+0x3704>
  4062f8:	ldur	x0, [x29, #-216]
  4062fc:	ldur	x1, [x29, #-224]
  406300:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406304:	add	x2, x2, #0xa50
  406308:	sub	x3, x29, #0x38
  40630c:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406310:	stur	w0, [x29, #-248]
  406314:	ldur	w8, [x29, #-248]
  406318:	cmp	w8, #0x0
  40631c:	cset	w8, ge  // ge = tcont
  406320:	tbnz	w8, #0, 406338 <safe_fork_full@plt+0x3808>
  406324:	ldur	w8, [x29, #-248]
  406328:	stur	w8, [x29, #-4]
  40632c:	mov	w8, #0x1                   	// #1
  406330:	stur	w8, [x29, #-240]
  406334:	b	407058 <safe_fork_full@plt+0x4528>
  406338:	ldur	w8, [x29, #-248]
  40633c:	cmp	w8, #0x0
  406340:	cset	w8, le
  406344:	tbnz	w8, #0, 40634c <safe_fork_full@plt+0x381c>
  406348:	b	406234 <safe_fork_full@plt+0x3704>
  40634c:	ldur	x0, [x29, #-216]
  406350:	ldur	x1, [x29, #-224]
  406354:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406358:	add	x2, x2, #0xa5d
  40635c:	sub	x3, x29, #0x40
  406360:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406364:	stur	w0, [x29, #-252]
  406368:	ldur	w8, [x29, #-252]
  40636c:	cmp	w8, #0x0
  406370:	cset	w8, ge  // ge = tcont
  406374:	tbnz	w8, #0, 40638c <safe_fork_full@plt+0x385c>
  406378:	ldur	w8, [x29, #-252]
  40637c:	stur	w8, [x29, #-4]
  406380:	mov	w8, #0x1                   	// #1
  406384:	stur	w8, [x29, #-240]
  406388:	b	407058 <safe_fork_full@plt+0x4528>
  40638c:	ldur	w8, [x29, #-252]
  406390:	cmp	w8, #0x0
  406394:	cset	w8, le
  406398:	tbnz	w8, #0, 4063a0 <safe_fork_full@plt+0x3870>
  40639c:	b	406234 <safe_fork_full@plt+0x3704>
  4063a0:	ldur	x0, [x29, #-216]
  4063a4:	ldur	x1, [x29, #-224]
  4063a8:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4063ac:	add	x2, x2, #0xa6a
  4063b0:	sub	x3, x29, #0x48
  4063b4:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4063b8:	stur	w0, [x29, #-256]
  4063bc:	ldur	w8, [x29, #-256]
  4063c0:	cmp	w8, #0x0
  4063c4:	cset	w8, ge  // ge = tcont
  4063c8:	tbnz	w8, #0, 4063e0 <safe_fork_full@plt+0x38b0>
  4063cc:	ldur	w8, [x29, #-256]
  4063d0:	stur	w8, [x29, #-4]
  4063d4:	mov	w8, #0x1                   	// #1
  4063d8:	stur	w8, [x29, #-240]
  4063dc:	b	407058 <safe_fork_full@plt+0x4528>
  4063e0:	ldur	w8, [x29, #-256]
  4063e4:	cmp	w8, #0x0
  4063e8:	cset	w8, le
  4063ec:	tbnz	w8, #0, 4063f4 <safe_fork_full@plt+0x38c4>
  4063f0:	b	406234 <safe_fork_full@plt+0x3704>
  4063f4:	ldur	x0, [x29, #-216]
  4063f8:	ldur	x1, [x29, #-224]
  4063fc:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406400:	add	x2, x2, #0xa7a
  406404:	sub	x3, x29, #0x50
  406408:	bl	407cb4 <safe_fork_full@plt+0x5184>
  40640c:	str	w0, [sp, #556]
  406410:	ldr	w8, [sp, #556]
  406414:	cmp	w8, #0x0
  406418:	cset	w8, ge  // ge = tcont
  40641c:	tbnz	w8, #0, 406434 <safe_fork_full@plt+0x3904>
  406420:	ldr	w8, [sp, #556]
  406424:	stur	w8, [x29, #-4]
  406428:	mov	w8, #0x1                   	// #1
  40642c:	stur	w8, [x29, #-240]
  406430:	b	407058 <safe_fork_full@plt+0x4528>
  406434:	ldr	w8, [sp, #556]
  406438:	cmp	w8, #0x0
  40643c:	cset	w8, le
  406440:	tbnz	w8, #0, 406448 <safe_fork_full@plt+0x3918>
  406444:	b	406234 <safe_fork_full@plt+0x3704>
  406448:	ldur	x0, [x29, #-216]
  40644c:	ldur	x1, [x29, #-224]
  406450:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406454:	add	x2, x2, #0xa87
  406458:	sub	x3, x29, #0x58
  40645c:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406460:	str	w0, [sp, #552]
  406464:	ldr	w8, [sp, #552]
  406468:	cmp	w8, #0x0
  40646c:	cset	w8, ge  // ge = tcont
  406470:	tbnz	w8, #0, 406488 <safe_fork_full@plt+0x3958>
  406474:	ldr	w8, [sp, #552]
  406478:	stur	w8, [x29, #-4]
  40647c:	mov	w8, #0x1                   	// #1
  406480:	stur	w8, [x29, #-240]
  406484:	b	407058 <safe_fork_full@plt+0x4528>
  406488:	ldr	w8, [sp, #552]
  40648c:	cmp	w8, #0x0
  406490:	cset	w8, le
  406494:	tbnz	w8, #0, 40649c <safe_fork_full@plt+0x396c>
  406498:	b	406234 <safe_fork_full@plt+0x3704>
  40649c:	ldur	x0, [x29, #-216]
  4064a0:	ldur	x1, [x29, #-224]
  4064a4:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4064a8:	add	x2, x2, #0xa95
  4064ac:	sub	x3, x29, #0x60
  4064b0:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4064b4:	str	w0, [sp, #548]
  4064b8:	ldr	w8, [sp, #548]
  4064bc:	cmp	w8, #0x0
  4064c0:	cset	w8, ge  // ge = tcont
  4064c4:	tbnz	w8, #0, 4064dc <safe_fork_full@plt+0x39ac>
  4064c8:	ldr	w8, [sp, #548]
  4064cc:	stur	w8, [x29, #-4]
  4064d0:	mov	w8, #0x1                   	// #1
  4064d4:	stur	w8, [x29, #-240]
  4064d8:	b	407058 <safe_fork_full@plt+0x4528>
  4064dc:	ldr	w8, [sp, #548]
  4064e0:	cmp	w8, #0x0
  4064e4:	cset	w8, le
  4064e8:	tbnz	w8, #0, 4064f0 <safe_fork_full@plt+0x39c0>
  4064ec:	b	406234 <safe_fork_full@plt+0x3704>
  4064f0:	ldur	x0, [x29, #-216]
  4064f4:	ldur	x1, [x29, #-224]
  4064f8:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4064fc:	add	x2, x2, #0xaa6
  406500:	sub	x3, x29, #0x68
  406504:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406508:	str	w0, [sp, #544]
  40650c:	ldr	w8, [sp, #544]
  406510:	cmp	w8, #0x0
  406514:	cset	w8, ge  // ge = tcont
  406518:	tbnz	w8, #0, 406530 <safe_fork_full@plt+0x3a00>
  40651c:	ldr	w8, [sp, #544]
  406520:	stur	w8, [x29, #-4]
  406524:	mov	w8, #0x1                   	// #1
  406528:	stur	w8, [x29, #-240]
  40652c:	b	407058 <safe_fork_full@plt+0x4528>
  406530:	ldr	w8, [sp, #544]
  406534:	cmp	w8, #0x0
  406538:	cset	w8, le
  40653c:	tbnz	w8, #0, 406544 <safe_fork_full@plt+0x3a14>
  406540:	b	406234 <safe_fork_full@plt+0x3704>
  406544:	ldur	x0, [x29, #-216]
  406548:	ldur	x1, [x29, #-224]
  40654c:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406550:	add	x2, x2, #0xab4
  406554:	sub	x3, x29, #0x70
  406558:	bl	407cb4 <safe_fork_full@plt+0x5184>
  40655c:	str	w0, [sp, #540]
  406560:	ldr	w8, [sp, #540]
  406564:	cmp	w8, #0x0
  406568:	cset	w8, ge  // ge = tcont
  40656c:	tbnz	w8, #0, 406584 <safe_fork_full@plt+0x3a54>
  406570:	ldr	w8, [sp, #540]
  406574:	stur	w8, [x29, #-4]
  406578:	mov	w8, #0x1                   	// #1
  40657c:	stur	w8, [x29, #-240]
  406580:	b	407058 <safe_fork_full@plt+0x4528>
  406584:	ldr	w8, [sp, #540]
  406588:	cmp	w8, #0x0
  40658c:	cset	w8, le
  406590:	tbnz	w8, #0, 406598 <safe_fork_full@plt+0x3a68>
  406594:	b	406234 <safe_fork_full@plt+0x3704>
  406598:	ldur	x0, [x29, #-216]
  40659c:	ldur	x1, [x29, #-224]
  4065a0:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4065a4:	add	x2, x2, #0xac7
  4065a8:	sub	x3, x29, #0x78
  4065ac:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4065b0:	str	w0, [sp, #536]
  4065b4:	ldr	w8, [sp, #536]
  4065b8:	cmp	w8, #0x0
  4065bc:	cset	w8, ge  // ge = tcont
  4065c0:	tbnz	w8, #0, 4065d8 <safe_fork_full@plt+0x3aa8>
  4065c4:	ldr	w8, [sp, #536]
  4065c8:	stur	w8, [x29, #-4]
  4065cc:	mov	w8, #0x1                   	// #1
  4065d0:	stur	w8, [x29, #-240]
  4065d4:	b	407058 <safe_fork_full@plt+0x4528>
  4065d8:	ldr	w8, [sp, #536]
  4065dc:	cmp	w8, #0x0
  4065e0:	cset	w8, le
  4065e4:	tbnz	w8, #0, 4065ec <safe_fork_full@plt+0x3abc>
  4065e8:	b	406234 <safe_fork_full@plt+0x3704>
  4065ec:	ldur	x0, [x29, #-216]
  4065f0:	ldur	x1, [x29, #-224]
  4065f4:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4065f8:	add	x2, x2, #0xad8
  4065fc:	sub	x3, x29, #0xa8
  406600:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406604:	str	w0, [sp, #532]
  406608:	ldr	w8, [sp, #532]
  40660c:	cmp	w8, #0x0
  406610:	cset	w8, ge  // ge = tcont
  406614:	tbnz	w8, #0, 40662c <safe_fork_full@plt+0x3afc>
  406618:	ldr	w8, [sp, #532]
  40661c:	stur	w8, [x29, #-4]
  406620:	mov	w8, #0x1                   	// #1
  406624:	stur	w8, [x29, #-240]
  406628:	b	407058 <safe_fork_full@plt+0x4528>
  40662c:	ldr	w8, [sp, #532]
  406630:	cmp	w8, #0x0
  406634:	cset	w8, le
  406638:	tbnz	w8, #0, 406640 <safe_fork_full@plt+0x3b10>
  40663c:	b	406234 <safe_fork_full@plt+0x3704>
  406640:	ldur	x0, [x29, #-216]
  406644:	ldur	x1, [x29, #-224]
  406648:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  40664c:	add	x2, x2, #0xaeb
  406650:	sub	x3, x29, #0x98
  406654:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406658:	str	w0, [sp, #528]
  40665c:	ldr	w8, [sp, #528]
  406660:	cmp	w8, #0x0
  406664:	cset	w8, ge  // ge = tcont
  406668:	tbnz	w8, #0, 406680 <safe_fork_full@plt+0x3b50>
  40666c:	ldr	w8, [sp, #528]
  406670:	stur	w8, [x29, #-4]
  406674:	mov	w8, #0x1                   	// #1
  406678:	stur	w8, [x29, #-240]
  40667c:	b	407058 <safe_fork_full@plt+0x4528>
  406680:	ldr	w8, [sp, #528]
  406684:	cmp	w8, #0x0
  406688:	cset	w8, le
  40668c:	tbnz	w8, #0, 406694 <safe_fork_full@plt+0x3b64>
  406690:	b	406234 <safe_fork_full@plt+0x3704>
  406694:	ldur	x0, [x29, #-216]
  406698:	ldur	x1, [x29, #-224]
  40669c:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4066a0:	add	x2, x2, #0xafa
  4066a4:	sub	x3, x29, #0xa0
  4066a8:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4066ac:	str	w0, [sp, #524]
  4066b0:	ldr	w8, [sp, #524]
  4066b4:	cmp	w8, #0x0
  4066b8:	cset	w8, ge  // ge = tcont
  4066bc:	tbnz	w8, #0, 4066d4 <safe_fork_full@plt+0x3ba4>
  4066c0:	ldr	w8, [sp, #524]
  4066c4:	stur	w8, [x29, #-4]
  4066c8:	mov	w8, #0x1                   	// #1
  4066cc:	stur	w8, [x29, #-240]
  4066d0:	b	407058 <safe_fork_full@plt+0x4528>
  4066d4:	ldr	w8, [sp, #524]
  4066d8:	cmp	w8, #0x0
  4066dc:	cset	w8, le
  4066e0:	tbnz	w8, #0, 4066e8 <safe_fork_full@plt+0x3bb8>
  4066e4:	b	406234 <safe_fork_full@plt+0x3704>
  4066e8:	ldur	x0, [x29, #-216]
  4066ec:	ldur	x1, [x29, #-224]
  4066f0:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4066f4:	add	x2, x2, #0xb0a
  4066f8:	sub	x3, x29, #0xb8
  4066fc:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406700:	str	w0, [sp, #520]
  406704:	ldr	w8, [sp, #520]
  406708:	cmp	w8, #0x0
  40670c:	cset	w8, ge  // ge = tcont
  406710:	tbnz	w8, #0, 406728 <safe_fork_full@plt+0x3bf8>
  406714:	ldr	w8, [sp, #520]
  406718:	stur	w8, [x29, #-4]
  40671c:	mov	w8, #0x1                   	// #1
  406720:	stur	w8, [x29, #-240]
  406724:	b	407058 <safe_fork_full@plt+0x4528>
  406728:	ldr	w8, [sp, #520]
  40672c:	cmp	w8, #0x0
  406730:	cset	w8, le
  406734:	tbnz	w8, #0, 40673c <safe_fork_full@plt+0x3c0c>
  406738:	b	406234 <safe_fork_full@plt+0x3704>
  40673c:	ldur	x0, [x29, #-216]
  406740:	ldur	x1, [x29, #-224]
  406744:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406748:	add	x2, x2, #0xb1d
  40674c:	sub	x3, x29, #0xc0
  406750:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406754:	str	w0, [sp, #516]
  406758:	ldr	w8, [sp, #516]
  40675c:	cmp	w8, #0x0
  406760:	cset	w8, ge  // ge = tcont
  406764:	tbnz	w8, #0, 40677c <safe_fork_full@plt+0x3c4c>
  406768:	ldr	w8, [sp, #516]
  40676c:	stur	w8, [x29, #-4]
  406770:	mov	w8, #0x1                   	// #1
  406774:	stur	w8, [x29, #-240]
  406778:	b	407058 <safe_fork_full@plt+0x4528>
  40677c:	ldr	w8, [sp, #516]
  406780:	cmp	w8, #0x0
  406784:	cset	w8, le
  406788:	tbnz	w8, #0, 406790 <safe_fork_full@plt+0x3c60>
  40678c:	b	406234 <safe_fork_full@plt+0x3704>
  406790:	ldur	x0, [x29, #-216]
  406794:	ldur	x1, [x29, #-224]
  406798:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  40679c:	add	x2, x2, #0xb2f
  4067a0:	sub	x3, x29, #0xc8
  4067a4:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4067a8:	str	w0, [sp, #512]
  4067ac:	ldr	w8, [sp, #512]
  4067b0:	cmp	w8, #0x0
  4067b4:	cset	w8, ge  // ge = tcont
  4067b8:	tbnz	w8, #0, 4067d0 <safe_fork_full@plt+0x3ca0>
  4067bc:	ldr	w8, [sp, #512]
  4067c0:	stur	w8, [x29, #-4]
  4067c4:	mov	w8, #0x1                   	// #1
  4067c8:	stur	w8, [x29, #-240]
  4067cc:	b	407058 <safe_fork_full@plt+0x4528>
  4067d0:	ldr	w8, [sp, #512]
  4067d4:	cmp	w8, #0x0
  4067d8:	cset	w8, le
  4067dc:	tbnz	w8, #0, 4067e4 <safe_fork_full@plt+0x3cb4>
  4067e0:	b	406234 <safe_fork_full@plt+0x3704>
  4067e4:	ldur	x0, [x29, #-216]
  4067e8:	ldur	x1, [x29, #-224]
  4067ec:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4067f0:	add	x2, x2, #0xb42
  4067f4:	sub	x3, x29, #0xd0
  4067f8:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4067fc:	str	w0, [sp, #508]
  406800:	ldr	w8, [sp, #508]
  406804:	cmp	w8, #0x0
  406808:	cset	w8, ge  // ge = tcont
  40680c:	tbnz	w8, #0, 406824 <safe_fork_full@plt+0x3cf4>
  406810:	ldr	w8, [sp, #508]
  406814:	stur	w8, [x29, #-4]
  406818:	mov	w8, #0x1                   	// #1
  40681c:	stur	w8, [x29, #-240]
  406820:	b	407058 <safe_fork_full@plt+0x4528>
  406824:	ldr	w8, [sp, #508]
  406828:	cmp	w8, #0x0
  40682c:	cset	w8, le
  406830:	tbnz	w8, #0, 406838 <safe_fork_full@plt+0x3d08>
  406834:	b	406234 <safe_fork_full@plt+0x3704>
  406838:	ldur	x0, [x29, #-216]
  40683c:	ldur	x1, [x29, #-224]
  406840:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406844:	add	x2, x2, #0xb4b
  406848:	sub	x3, x29, #0x80
  40684c:	bl	407cb4 <safe_fork_full@plt+0x5184>
  406850:	str	w0, [sp, #504]
  406854:	ldr	w8, [sp, #504]
  406858:	cmp	w8, #0x0
  40685c:	cset	w8, ge  // ge = tcont
  406860:	tbnz	w8, #0, 406878 <safe_fork_full@plt+0x3d48>
  406864:	ldr	w8, [sp, #504]
  406868:	stur	w8, [x29, #-4]
  40686c:	mov	w8, #0x1                   	// #1
  406870:	stur	w8, [x29, #-240]
  406874:	b	407058 <safe_fork_full@plt+0x4528>
  406878:	ldr	w8, [sp, #504]
  40687c:	cmp	w8, #0x0
  406880:	cset	w8, le
  406884:	tbnz	w8, #0, 40688c <safe_fork_full@plt+0x3d5c>
  406888:	b	406234 <safe_fork_full@plt+0x3704>
  40688c:	ldur	x0, [x29, #-216]
  406890:	ldur	x1, [x29, #-224]
  406894:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406898:	add	x2, x2, #0xb54
  40689c:	sub	x3, x29, #0x88
  4068a0:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4068a4:	str	w0, [sp, #500]
  4068a8:	ldr	w8, [sp, #500]
  4068ac:	cmp	w8, #0x0
  4068b0:	cset	w8, ge  // ge = tcont
  4068b4:	tbnz	w8, #0, 4068cc <safe_fork_full@plt+0x3d9c>
  4068b8:	ldr	w8, [sp, #500]
  4068bc:	stur	w8, [x29, #-4]
  4068c0:	mov	w8, #0x1                   	// #1
  4068c4:	stur	w8, [x29, #-240]
  4068c8:	b	407058 <safe_fork_full@plt+0x4528>
  4068cc:	ldr	w8, [sp, #500]
  4068d0:	cmp	w8, #0x0
  4068d4:	cset	w8, le
  4068d8:	tbnz	w8, #0, 4068e0 <safe_fork_full@plt+0x3db0>
  4068dc:	b	406234 <safe_fork_full@plt+0x3704>
  4068e0:	ldur	x0, [x29, #-216]
  4068e4:	ldur	x1, [x29, #-224]
  4068e8:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4068ec:	add	x2, x2, #0xb60
  4068f0:	sub	x3, x29, #0x90
  4068f4:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4068f8:	str	w0, [sp, #496]
  4068fc:	ldr	w8, [sp, #496]
  406900:	cmp	w8, #0x0
  406904:	cset	w8, ge  // ge = tcont
  406908:	tbnz	w8, #0, 406920 <safe_fork_full@plt+0x3df0>
  40690c:	ldr	w8, [sp, #496]
  406910:	stur	w8, [x29, #-4]
  406914:	mov	w8, #0x1                   	// #1
  406918:	stur	w8, [x29, #-240]
  40691c:	b	407058 <safe_fork_full@plt+0x4528>
  406920:	ldr	w8, [sp, #496]
  406924:	cmp	w8, #0x0
  406928:	cset	w8, le
  40692c:	tbnz	w8, #0, 406934 <safe_fork_full@plt+0x3e04>
  406930:	b	406234 <safe_fork_full@plt+0x3704>
  406934:	ldur	x0, [x29, #-216]
  406938:	ldur	x1, [x29, #-224]
  40693c:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406940:	add	x2, x2, #0xb6a
  406944:	sub	x3, x29, #0xb0
  406948:	bl	407cb4 <safe_fork_full@plt+0x5184>
  40694c:	str	w0, [sp, #492]
  406950:	ldr	w8, [sp, #492]
  406954:	cmp	w8, #0x0
  406958:	cset	w8, ge  // ge = tcont
  40695c:	tbnz	w8, #0, 406974 <safe_fork_full@plt+0x3e44>
  406960:	ldr	w8, [sp, #492]
  406964:	stur	w8, [x29, #-4]
  406968:	mov	w8, #0x1                   	// #1
  40696c:	stur	w8, [x29, #-240]
  406970:	b	407058 <safe_fork_full@plt+0x4528>
  406974:	ldr	w8, [sp, #492]
  406978:	cmp	w8, #0x0
  40697c:	cset	w8, le
  406980:	tbnz	w8, #0, 406988 <safe_fork_full@plt+0x3e58>
  406984:	b	406234 <safe_fork_full@plt+0x3704>
  406988:	b	406234 <safe_fork_full@plt+0x3704>
  40698c:	ldurb	w8, [x29, #-25]
  406990:	tbnz	w8, #0, 406998 <safe_fork_full@plt+0x3e68>
  406994:	b	4069a8 <safe_fork_full@plt+0x3e78>
  406998:	ldur	x1, [x29, #-16]
  40699c:	adrp	x0, 409000 <safe_fork_full@plt+0x64d0>
  4069a0:	add	x0, x0, #0xb72
  4069a4:	bl	402820 <fputs@plt>
  4069a8:	ldur	x0, [x29, #-40]
  4069ac:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4069b0:	add	x1, x1, #0xb74
  4069b4:	bl	407dd0 <safe_fork_full@plt+0x52a0>
  4069b8:	and	w8, w0, #0x1
  4069bc:	sturb	w8, [x29, #-225]
  4069c0:	ldur	x9, [x29, #-88]
  4069c4:	cbz	x9, 406a18 <safe_fork_full@plt+0x3ee8>
  4069c8:	ldur	x0, [x29, #-16]
  4069cc:	str	x0, [sp, #280]
  4069d0:	bl	403fbc <safe_fork_full@plt+0x148c>
  4069d4:	ldur	x8, [x29, #-48]
  4069d8:	str	x0, [sp, #272]
  4069dc:	mov	x0, x8
  4069e0:	bl	407e08 <safe_fork_full@plt+0x52d8>
  4069e4:	str	x0, [sp, #264]
  4069e8:	bl	403e70 <safe_fork_full@plt+0x1340>
  4069ec:	ldur	x5, [x29, #-88]
  4069f0:	ldr	x8, [sp, #280]
  4069f4:	str	x0, [sp, #256]
  4069f8:	mov	x0, x8
  4069fc:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406a00:	add	x1, x1, #0xb95
  406a04:	ldr	x2, [sp, #272]
  406a08:	ldr	x3, [sp, #264]
  406a0c:	ldr	x4, [sp, #256]
  406a10:	bl	4029a0 <fprintf@plt>
  406a14:	b	406a60 <safe_fork_full@plt+0x3f30>
  406a18:	ldur	x0, [x29, #-16]
  406a1c:	str	x0, [sp, #248]
  406a20:	bl	403fbc <safe_fork_full@plt+0x148c>
  406a24:	ldur	x8, [x29, #-48]
  406a28:	str	x0, [sp, #240]
  406a2c:	mov	x0, x8
  406a30:	bl	407e08 <safe_fork_full@plt+0x52d8>
  406a34:	str	x0, [sp, #232]
  406a38:	bl	403e70 <safe_fork_full@plt+0x1340>
  406a3c:	ldr	x8, [sp, #248]
  406a40:	str	x0, [sp, #224]
  406a44:	mov	x0, x8
  406a48:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406a4c:	add	x1, x1, #0xbb2
  406a50:	ldr	x2, [sp, #240]
  406a54:	ldr	x3, [sp, #232]
  406a58:	ldr	x4, [sp, #224]
  406a5c:	bl	4029a0 <fprintf@plt>
  406a60:	ldur	x8, [x29, #-56]
  406a64:	cbz	x8, 406adc <safe_fork_full@plt+0x3fac>
  406a68:	ldur	x0, [x29, #-56]
  406a6c:	add	x1, sp, #0x1e8
  406a70:	bl	4029b0 <parse_uid@plt>
  406a74:	cmp	w0, #0x0
  406a78:	cset	w8, lt  // lt = tstop
  406a7c:	tbnz	w8, #0, 406ac8 <safe_fork_full@plt+0x3f98>
  406a80:	add	x0, sp, #0x1e0
  406a84:	mov	x8, xzr
  406a88:	str	x8, [sp, #480]
  406a8c:	ldr	w9, [sp, #488]
  406a90:	str	x0, [sp, #216]
  406a94:	mov	w0, w9
  406a98:	bl	4029c0 <uid_to_name@plt>
  406a9c:	str	x0, [sp, #480]
  406aa0:	ldur	x0, [x29, #-16]
  406aa4:	ldur	x2, [x29, #-56]
  406aa8:	ldr	x3, [sp, #480]
  406aac:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406ab0:	add	x1, x1, #0xbca
  406ab4:	bl	4029a0 <fprintf@plt>
  406ab8:	ldr	x8, [sp, #216]
  406abc:	mov	x0, x8
  406ac0:	bl	403f94 <safe_fork_full@plt+0x1464>
  406ac4:	b	406adc <safe_fork_full@plt+0x3fac>
  406ac8:	ldur	x0, [x29, #-16]
  406acc:	ldur	x2, [x29, #-56]
  406ad0:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406ad4:	add	x1, x1, #0xbe3
  406ad8:	bl	4029a0 <fprintf@plt>
  406adc:	ldur	x8, [x29, #-64]
  406ae0:	cbz	x8, 406b58 <safe_fork_full@plt+0x4028>
  406ae4:	ldur	x0, [x29, #-64]
  406ae8:	add	x1, sp, #0x1dc
  406aec:	bl	407e44 <safe_fork_full@plt+0x5314>
  406af0:	cmp	w0, #0x0
  406af4:	cset	w8, lt  // lt = tstop
  406af8:	tbnz	w8, #0, 406b44 <safe_fork_full@plt+0x4014>
  406afc:	add	x0, sp, #0x1d0
  406b00:	mov	x8, xzr
  406b04:	str	x8, [sp, #464]
  406b08:	ldr	w9, [sp, #476]
  406b0c:	str	x0, [sp, #208]
  406b10:	mov	w0, w9
  406b14:	bl	4029d0 <gid_to_name@plt>
  406b18:	str	x0, [sp, #464]
  406b1c:	ldur	x0, [x29, #-16]
  406b20:	ldur	x2, [x29, #-64]
  406b24:	ldr	x3, [sp, #464]
  406b28:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406b2c:	add	x1, x1, #0xbf7
  406b30:	bl	4029a0 <fprintf@plt>
  406b34:	ldr	x8, [sp, #208]
  406b38:	mov	x0, x8
  406b3c:	bl	403f94 <safe_fork_full@plt+0x1464>
  406b40:	b	406b58 <safe_fork_full@plt+0x4028>
  406b44:	ldur	x0, [x29, #-16]
  406b48:	ldur	x2, [x29, #-64]
  406b4c:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406b50:	add	x1, x1, #0xc10
  406b54:	bl	4029a0 <fprintf@plt>
  406b58:	ldur	x8, [x29, #-72]
  406b5c:	cbz	x8, 406c08 <safe_fork_full@plt+0x40d8>
  406b60:	ldurb	w8, [x29, #-225]
  406b64:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  406b68:	add	x9, x9, #0xc2b
  406b6c:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  406b70:	add	x10, x10, #0xc24
  406b74:	tst	w8, #0x1
  406b78:	csel	x9, x10, x9, ne  // ne = any
  406b7c:	str	x9, [sp, #448]
  406b80:	ldurb	w8, [x29, #-225]
  406b84:	tbnz	w8, #0, 406b8c <safe_fork_full@plt+0x405c>
  406b88:	b	406bf0 <safe_fork_full@plt+0x40c0>
  406b8c:	ldur	x0, [x29, #-72]
  406b90:	add	x1, sp, #0x1cc
  406b94:	bl	4029e0 <safe_atoi@plt>
  406b98:	cmp	w0, #0x0
  406b9c:	cset	w8, lt  // lt = tstop
  406ba0:	tbnz	w8, #0, 406bf0 <safe_fork_full@plt+0x40c0>
  406ba4:	ldur	x0, [x29, #-16]
  406ba8:	ldr	x2, [sp, #448]
  406bac:	ldur	x3, [x29, #-72]
  406bb0:	ldr	w8, [sp, #460]
  406bb4:	str	x0, [sp, #200]
  406bb8:	mov	w0, w8
  406bbc:	str	x2, [sp, #192]
  406bc0:	str	x3, [sp, #184]
  406bc4:	bl	4029f0 <signal_to_string@plt>
  406bc8:	ldr	x9, [sp, #200]
  406bcc:	str	x0, [sp, #176]
  406bd0:	mov	x0, x9
  406bd4:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406bd8:	add	x1, x1, #0xc32
  406bdc:	ldr	x2, [sp, #192]
  406be0:	ldr	x3, [sp, #184]
  406be4:	ldr	x4, [sp, #176]
  406be8:	bl	4029a0 <fprintf@plt>
  406bec:	b	406c08 <safe_fork_full@plt+0x40d8>
  406bf0:	ldur	x0, [x29, #-16]
  406bf4:	ldr	x2, [sp, #448]
  406bf8:	ldur	x3, [x29, #-72]
  406bfc:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406c00:	add	x1, x1, #0xc47
  406c04:	bl	4029a0 <fprintf@plt>
  406c08:	ldur	x8, [x29, #-184]
  406c0c:	cbz	x8, 406c9c <safe_fork_full@plt+0x416c>
  406c10:	ldur	x0, [x29, #-184]
  406c14:	add	x1, sp, #0x1b8
  406c18:	bl	407e70 <safe_fork_full@plt+0x5340>
  406c1c:	stur	w0, [x29, #-232]
  406c20:	ldur	w8, [x29, #-232]
  406c24:	cmp	w8, #0x0
  406c28:	cset	w8, lt  // lt = tstop
  406c2c:	tbnz	w8, #0, 406c88 <safe_fork_full@plt+0x4158>
  406c30:	ldur	x0, [x29, #-16]
  406c34:	ldr	x2, [sp, #440]
  406c38:	add	x8, sp, #0x192
  406c3c:	str	x0, [sp, #168]
  406c40:	mov	x0, x8
  406c44:	mov	x1, #0x26                  	// #38
  406c48:	bl	402a00 <format_timestamp@plt>
  406c4c:	ldr	x2, [sp, #440]
  406c50:	add	x8, sp, #0x152
  406c54:	str	x0, [sp, #160]
  406c58:	mov	x0, x8
  406c5c:	mov	x1, #0x40                  	// #64
  406c60:	bl	402a10 <format_timestamp_relative@plt>
  406c64:	ldr	x8, [sp, #168]
  406c68:	str	x0, [sp, #152]
  406c6c:	mov	x0, x8
  406c70:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406c74:	add	x1, x1, #0xc57
  406c78:	ldr	x2, [sp, #160]
  406c7c:	ldr	x3, [sp, #152]
  406c80:	bl	4029a0 <fprintf@plt>
  406c84:	b	406c9c <safe_fork_full@plt+0x416c>
  406c88:	ldur	x0, [x29, #-16]
  406c8c:	ldur	x2, [x29, #-184]
  406c90:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406c94:	add	x1, x1, #0xc70
  406c98:	bl	4029a0 <fprintf@plt>
  406c9c:	ldur	x8, [x29, #-96]
  406ca0:	cbz	x8, 406cb8 <safe_fork_full@plt+0x4188>
  406ca4:	ldur	x0, [x29, #-16]
  406ca8:	ldur	x2, [x29, #-96]
  406cac:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406cb0:	add	x1, x1, #0xc84
  406cb4:	bl	4029a0 <fprintf@plt>
  406cb8:	ldur	x8, [x29, #-80]
  406cbc:	cbz	x8, 406d00 <safe_fork_full@plt+0x41d0>
  406cc0:	ldur	x0, [x29, #-16]
  406cc4:	str	x0, [sp, #144]
  406cc8:	bl	403fbc <safe_fork_full@plt+0x148c>
  406ccc:	ldur	x3, [x29, #-80]
  406cd0:	str	x0, [sp, #136]
  406cd4:	str	x3, [sp, #128]
  406cd8:	bl	403e70 <safe_fork_full@plt+0x1340>
  406cdc:	ldr	x8, [sp, #144]
  406ce0:	str	x0, [sp, #120]
  406ce4:	mov	x0, x8
  406ce8:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406cec:	add	x1, x1, #0xc98
  406cf0:	ldr	x2, [sp, #136]
  406cf4:	ldr	x3, [sp, #128]
  406cf8:	ldr	x4, [sp, #120]
  406cfc:	bl	4029a0 <fprintf@plt>
  406d00:	ldur	x8, [x29, #-160]
  406d04:	cbz	x8, 406d1c <safe_fork_full@plt+0x41ec>
  406d08:	ldur	x0, [x29, #-16]
  406d0c:	ldur	x2, [x29, #-160]
  406d10:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406d14:	add	x1, x1, #0xcb0
  406d18:	bl	4029a0 <fprintf@plt>
  406d1c:	ldur	x8, [x29, #-104]
  406d20:	cbz	x8, 406d38 <safe_fork_full@plt+0x4208>
  406d24:	ldur	x0, [x29, #-16]
  406d28:	ldur	x2, [x29, #-104]
  406d2c:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406d30:	add	x1, x1, #0xcc4
  406d34:	bl	4029a0 <fprintf@plt>
  406d38:	ldur	x8, [x29, #-112]
  406d3c:	cbz	x8, 406d54 <safe_fork_full@plt+0x4224>
  406d40:	ldur	x0, [x29, #-16]
  406d44:	ldur	x2, [x29, #-112]
  406d48:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406d4c:	add	x1, x1, #0xcd8
  406d50:	bl	4029a0 <fprintf@plt>
  406d54:	ldur	x8, [x29, #-152]
  406d58:	cbz	x8, 406d70 <safe_fork_full@plt+0x4240>
  406d5c:	ldur	x0, [x29, #-16]
  406d60:	ldur	x2, [x29, #-152]
  406d64:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406d68:	add	x1, x1, #0xcec
  406d6c:	bl	4029a0 <fprintf@plt>
  406d70:	ldur	x8, [x29, #-120]
  406d74:	cbz	x8, 406d8c <safe_fork_full@plt+0x425c>
  406d78:	ldur	x0, [x29, #-16]
  406d7c:	ldur	x2, [x29, #-120]
  406d80:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406d84:	add	x1, x1, #0xd00
  406d88:	bl	4029a0 <fprintf@plt>
  406d8c:	ldur	x8, [x29, #-168]
  406d90:	cbz	x8, 406e08 <safe_fork_full@plt+0x42d8>
  406d94:	ldur	x0, [x29, #-168]
  406d98:	add	x1, sp, #0x14c
  406d9c:	bl	4029b0 <parse_uid@plt>
  406da0:	cmp	w0, #0x0
  406da4:	cset	w8, lt  // lt = tstop
  406da8:	tbnz	w8, #0, 406df4 <safe_fork_full@plt+0x42c4>
  406dac:	add	x0, sp, #0x140
  406db0:	mov	x8, xzr
  406db4:	str	x8, [sp, #320]
  406db8:	ldr	w9, [sp, #332]
  406dbc:	str	x0, [sp, #112]
  406dc0:	mov	w0, w9
  406dc4:	bl	4029c0 <uid_to_name@plt>
  406dc8:	str	x0, [sp, #320]
  406dcc:	ldur	x0, [x29, #-16]
  406dd0:	ldur	x2, [x29, #-168]
  406dd4:	ldr	x3, [sp, #320]
  406dd8:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406ddc:	add	x1, x1, #0xd14
  406de0:	bl	4029a0 <fprintf@plt>
  406de4:	ldr	x8, [sp, #112]
  406de8:	mov	x0, x8
  406dec:	bl	403f94 <safe_fork_full@plt+0x1464>
  406df0:	b	406e08 <safe_fork_full@plt+0x42d8>
  406df4:	ldur	x0, [x29, #-16]
  406df8:	ldur	x2, [x29, #-168]
  406dfc:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406e00:	add	x1, x1, #0xd2d
  406e04:	bl	4029a0 <fprintf@plt>
  406e08:	ldur	x8, [x29, #-128]
  406e0c:	cbz	x8, 406e24 <safe_fork_full@plt+0x42f4>
  406e10:	ldur	x0, [x29, #-16]
  406e14:	ldur	x2, [x29, #-128]
  406e18:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406e1c:	add	x1, x1, #0xd41
  406e20:	bl	4029a0 <fprintf@plt>
  406e24:	ldur	x8, [x29, #-136]
  406e28:	cbz	x8, 406e40 <safe_fork_full@plt+0x4310>
  406e2c:	ldur	x0, [x29, #-16]
  406e30:	ldur	x2, [x29, #-136]
  406e34:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406e38:	add	x1, x1, #0xd55
  406e3c:	bl	4029a0 <fprintf@plt>
  406e40:	ldur	x8, [x29, #-144]
  406e44:	cbz	x8, 406e5c <safe_fork_full@plt+0x432c>
  406e48:	ldur	x0, [x29, #-16]
  406e4c:	ldur	x2, [x29, #-144]
  406e50:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406e54:	add	x1, x1, #0xd69
  406e58:	bl	4029a0 <fprintf@plt>
  406e5c:	ldur	x8, [x29, #-192]
  406e60:	cbz	x8, 406f98 <safe_fork_full@plt+0x4468>
  406e64:	ldur	x0, [x29, #-192]
  406e68:	mov	w1, #0x4                   	// #4
  406e6c:	bl	402a20 <access@plt>
  406e70:	cmp	w0, #0x0
  406e74:	cset	w8, lt  // lt = tstop
  406e78:	and	w8, w8, #0x1
  406e7c:	strb	w8, [sp, #319]
  406e80:	ldur	x9, [x29, #-200]
  406e84:	mov	w8, #0x0                   	// #0
  406e88:	str	w8, [sp, #108]
  406e8c:	cbz	x9, 406ea4 <safe_fork_full@plt+0x4374>
  406e90:	ldur	x0, [x29, #-200]
  406e94:	bl	402a30 <parse_boolean@plt>
  406e98:	cmp	w0, #0x0
  406e9c:	cset	w8, gt
  406ea0:	str	w8, [sp, #108]
  406ea4:	ldr	w8, [sp, #108]
  406ea8:	and	w8, w8, #0x1
  406eac:	strb	w8, [sp, #318]
  406eb0:	ldrb	w8, [sp, #319]
  406eb4:	tbnz	w8, #0, 406ec4 <safe_fork_full@plt+0x4394>
  406eb8:	ldrb	w8, [sp, #318]
  406ebc:	tbnz	w8, #0, 406ec4 <safe_fork_full@plt+0x4394>
  406ec0:	b	406f80 <safe_fork_full@plt+0x4450>
  406ec4:	ldur	x0, [x29, #-16]
  406ec8:	str	x0, [sp, #96]
  406ecc:	bl	403e2c <safe_fork_full@plt+0x12fc>
  406ed0:	ldur	x3, [x29, #-192]
  406ed4:	ldrb	w8, [sp, #319]
  406ed8:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  406edc:	add	x9, x9, #0xd9e
  406ee0:	tst	w8, #0x1
  406ee4:	ldr	x10, [sp, #296]
  406ee8:	csel	x4, x9, x10, ne  // ne = any
  406eec:	ldrb	w8, [sp, #319]
  406ef0:	mov	w11, #0x0                   	// #0
  406ef4:	str	x0, [sp, #88]
  406ef8:	str	x3, [sp, #80]
  406efc:	str	x4, [sp, #72]
  406f00:	str	w11, [sp, #68]
  406f04:	tbnz	w8, #0, 406f0c <safe_fork_full@plt+0x43dc>
  406f08:	b	406f14 <safe_fork_full@plt+0x43e4>
  406f0c:	ldrb	w8, [sp, #318]
  406f10:	str	w8, [sp, #68]
  406f14:	ldr	w8, [sp, #68]
  406f18:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  406f1c:	add	x9, x9, #0xdab
  406f20:	tst	w8, #0x1
  406f24:	ldr	x10, [sp, #296]
  406f28:	csel	x5, x9, x10, ne  // ne = any
  406f2c:	ldrb	w8, [sp, #318]
  406f30:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  406f34:	add	x9, x9, #0xdae
  406f38:	tst	w8, #0x1
  406f3c:	csel	x6, x9, x10, ne  // ne = any
  406f40:	str	x5, [sp, #56]
  406f44:	str	x6, [sp, #48]
  406f48:	bl	403e70 <safe_fork_full@plt+0x1340>
  406f4c:	ldr	x9, [sp, #96]
  406f50:	str	x0, [sp, #40]
  406f54:	mov	x0, x9
  406f58:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406f5c:	add	x1, x1, #0xd7d
  406f60:	ldr	x2, [sp, #88]
  406f64:	ldr	x3, [sp, #80]
  406f68:	ldr	x4, [sp, #72]
  406f6c:	ldr	x5, [sp, #56]
  406f70:	ldr	x6, [sp, #48]
  406f74:	ldr	x7, [sp, #40]
  406f78:	bl	4029a0 <fprintf@plt>
  406f7c:	b	406f94 <safe_fork_full@plt+0x4464>
  406f80:	ldur	x0, [x29, #-16]
  406f84:	ldur	x2, [x29, #-192]
  406f88:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406f8c:	add	x1, x1, #0xdb8
  406f90:	bl	4029a0 <fprintf@plt>
  406f94:	b	406fc4 <safe_fork_full@plt+0x4494>
  406f98:	ldur	x8, [x29, #-208]
  406f9c:	cbz	x8, 406fb4 <safe_fork_full@plt+0x4484>
  406fa0:	ldur	x0, [x29, #-16]
  406fa4:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406fa8:	add	x1, x1, #0xdcc
  406fac:	bl	4029a0 <fprintf@plt>
  406fb0:	b	406fc4 <safe_fork_full@plt+0x4494>
  406fb4:	ldur	x0, [x29, #-16]
  406fb8:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406fbc:	add	x1, x1, #0xde5
  406fc0:	bl	4029a0 <fprintf@plt>
  406fc4:	ldur	x8, [x29, #-176]
  406fc8:	cbz	x8, 40704c <safe_fork_full@plt+0x451c>
  406fcc:	mov	x8, xzr
  406fd0:	str	x8, [sp, #304]
  406fd4:	ldur	x0, [x29, #-176]
  406fd8:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  406fdc:	add	x1, x1, #0xb72
  406fe0:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  406fe4:	add	x2, x2, #0xdfb
  406fe8:	bl	402a40 <strreplace@plt>
  406fec:	str	x0, [sp, #304]
  406ff0:	ldur	x0, [x29, #-16]
  406ff4:	ldr	x8, [sp, #304]
  406ff8:	str	x0, [sp, #32]
  406ffc:	str	x8, [sp, #24]
  407000:	cbz	x8, 407010 <safe_fork_full@plt+0x44e0>
  407004:	ldr	x8, [sp, #24]
  407008:	str	x8, [sp, #16]
  40700c:	b	407018 <safe_fork_full@plt+0x44e8>
  407010:	ldur	x8, [x29, #-176]
  407014:	str	x8, [sp, #16]
  407018:	ldr	x8, [sp, #16]
  40701c:	mov	x0, x8
  407020:	bl	402a50 <strstrip@plt>
  407024:	ldr	x8, [sp, #32]
  407028:	str	x0, [sp, #8]
  40702c:	mov	x0, x8
  407030:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407034:	add	x1, x1, #0xe0d
  407038:	ldr	x2, [sp, #8]
  40703c:	bl	4029a0 <fprintf@plt>
  407040:	add	x8, sp, #0x130
  407044:	mov	x0, x8
  407048:	bl	403f94 <safe_fork_full@plt+0x1464>
  40704c:	stur	wzr, [x29, #-4]
  407050:	mov	w8, #0x1                   	// #1
  407054:	stur	w8, [x29, #-240]
  407058:	sub	x0, x29, #0xd0
  40705c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407060:	sub	x0, x29, #0xc8
  407064:	bl	403f94 <safe_fork_full@plt+0x1464>
  407068:	sub	x0, x29, #0xc0
  40706c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407070:	sub	x0, x29, #0xb8
  407074:	bl	403f94 <safe_fork_full@plt+0x1464>
  407078:	sub	x0, x29, #0xb0
  40707c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407080:	sub	x0, x29, #0xa8
  407084:	bl	403f94 <safe_fork_full@plt+0x1464>
  407088:	sub	x0, x29, #0xa0
  40708c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407090:	sub	x0, x29, #0x98
  407094:	bl	403f94 <safe_fork_full@plt+0x1464>
  407098:	sub	x0, x29, #0x90
  40709c:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070a0:	sub	x0, x29, #0x88
  4070a4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070a8:	sub	x0, x29, #0x80
  4070ac:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070b0:	sub	x0, x29, #0x78
  4070b4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070b8:	sub	x0, x29, #0x70
  4070bc:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070c0:	sub	x0, x29, #0x68
  4070c4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070c8:	sub	x0, x29, #0x60
  4070cc:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070d0:	sub	x0, x29, #0x58
  4070d4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070d8:	sub	x0, x29, #0x50
  4070dc:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070e0:	sub	x0, x29, #0x48
  4070e4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070e8:	sub	x0, x29, #0x40
  4070ec:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070f0:	sub	x0, x29, #0x38
  4070f4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4070f8:	sub	x0, x29, #0x30
  4070fc:	bl	403f94 <safe_fork_full@plt+0x1464>
  407100:	sub	x0, x29, #0x28
  407104:	bl	403f94 <safe_fork_full@plt+0x1464>
  407108:	ldur	w0, [x29, #-4]
  40710c:	add	sp, sp, #0x330
  407110:	ldr	x28, [sp, #16]
  407114:	ldp	x29, x30, [sp], #32
  407118:	ret
  40711c:	sub	sp, sp, #0x60
  407120:	stp	x29, x30, [sp, #80]
  407124:	add	x29, sp, #0x50
  407128:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  40712c:	add	x8, x8, #0x1a
  407130:	add	x8, x8, #0x3
  407134:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  407138:	add	x9, x9, #0xe2e
  40713c:	stur	x0, [x29, #-16]
  407140:	stur	x1, [x29, #-24]
  407144:	str	x8, [sp, #16]
  407148:	str	x9, [sp, #8]
  40714c:	ldur	x8, [x29, #-16]
  407150:	cmp	x8, #0x0
  407154:	cset	w9, ne  // ne = any
  407158:	mov	w10, #0x1                   	// #1
  40715c:	eor	w9, w9, #0x1
  407160:	eor	w9, w9, w10
  407164:	eor	w9, w9, w10
  407168:	and	w9, w9, #0x1
  40716c:	mov	w0, w9
  407170:	sxtw	x8, w0
  407174:	cbz	x8, 407198 <safe_fork_full@plt+0x4668>
  407178:	mov	w8, wzr
  40717c:	mov	w0, w8
  407180:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407184:	add	x1, x1, #0xa07
  407188:	ldr	x2, [sp, #16]
  40718c:	mov	w3, #0x13d                 	// #317
  407190:	ldr	x4, [sp, #8]
  407194:	bl	4025c0 <log_assert_failed_realm@plt>
  407198:	ldur	x8, [x29, #-24]
  40719c:	cmp	x8, #0x0
  4071a0:	cset	w9, ne  // ne = any
  4071a4:	mov	w10, #0x1                   	// #1
  4071a8:	eor	w9, w9, #0x1
  4071ac:	eor	w9, w9, w10
  4071b0:	eor	w9, w9, w10
  4071b4:	and	w9, w9, #0x1
  4071b8:	mov	w0, w9
  4071bc:	sxtw	x8, w0
  4071c0:	cbz	x8, 4071e4 <safe_fork_full@plt+0x46b4>
  4071c4:	mov	w8, wzr
  4071c8:	mov	w0, w8
  4071cc:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4071d0:	add	x1, x1, #0x9d2
  4071d4:	ldr	x2, [sp, #16]
  4071d8:	mov	w3, #0x13e                 	// #318
  4071dc:	ldr	x4, [sp, #8]
  4071e0:	bl	4025c0 <log_assert_failed_realm@plt>
  4071e4:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  4071e8:	add	x8, x8, #0x68
  4071ec:	ldr	x8, [x8]
  4071f0:	cmp	x8, #0x0
  4071f4:	cset	w9, ne  // ne = any
  4071f8:	mov	w10, #0x1                   	// #1
  4071fc:	eor	w9, w9, #0x1
  407200:	eor	w9, w9, w10
  407204:	eor	w9, w9, w10
  407208:	and	w9, w9, #0x1
  40720c:	mov	w0, w9
  407210:	sxtw	x8, w0
  407214:	cbz	x8, 407238 <safe_fork_full@plt+0x4708>
  407218:	mov	w8, wzr
  40721c:	mov	w0, w8
  407220:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407224:	add	x1, x1, #0xe54
  407228:	ldr	x2, [sp, #16]
  40722c:	mov	w3, #0x140                 	// #320
  407230:	ldr	x4, [sp, #8]
  407234:	bl	4025c0 <log_assert_failed_realm@plt>
  407238:	ldur	x0, [x29, #-24]
  40723c:	bl	402980 <sd_journal_restart_data@plt>
  407240:	ldur	x0, [x29, #-24]
  407244:	sub	x1, x29, #0x20
  407248:	add	x2, sp, #0x28
  40724c:	bl	402990 <sd_journal_enumerate_data@plt>
  407250:	cmp	w0, #0x0
  407254:	cset	w8, le
  407258:	tbnz	w8, #0, 4072ec <safe_fork_full@plt+0x47bc>
  40725c:	add	x3, sp, #0x20
  407260:	mov	x8, xzr
  407264:	str	x8, [sp, #32]
  407268:	ldur	x0, [x29, #-32]
  40726c:	ldr	x1, [sp, #40]
  407270:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  407274:	add	x8, x8, #0x68
  407278:	ldr	x2, [x8]
  40727c:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407280:	str	w0, [sp, #28]
  407284:	ldr	w9, [sp, #28]
  407288:	cmp	w9, #0x0
  40728c:	cset	w9, ge  // ge = tcont
  407290:	tbnz	w9, #0, 4072a8 <safe_fork_full@plt+0x4778>
  407294:	ldr	w8, [sp, #28]
  407298:	stur	w8, [x29, #-4]
  40729c:	mov	w8, #0x1                   	// #1
  4072a0:	str	w8, [sp, #24]
  4072a4:	b	4072d0 <safe_fork_full@plt+0x47a0>
  4072a8:	ldr	w8, [sp, #28]
  4072ac:	cmp	w8, #0x0
  4072b0:	cset	w8, le
  4072b4:	tbnz	w8, #0, 4072cc <safe_fork_full@plt+0x479c>
  4072b8:	ldur	x0, [x29, #-16]
  4072bc:	ldr	x2, [sp, #32]
  4072c0:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4072c4:	add	x1, x1, #0xe5e
  4072c8:	bl	4029a0 <fprintf@plt>
  4072cc:	str	wzr, [sp, #24]
  4072d0:	add	x0, sp, #0x20
  4072d4:	bl	403f94 <safe_fork_full@plt+0x1464>
  4072d8:	ldr	w8, [sp, #24]
  4072dc:	cbz	w8, 4072e8 <safe_fork_full@plt+0x47b8>
  4072e0:	b	4072e4 <safe_fork_full@plt+0x47b4>
  4072e4:	b	4072f0 <safe_fork_full@plt+0x47c0>
  4072e8:	b	407240 <safe_fork_full@plt+0x4710>
  4072ec:	stur	wzr, [x29, #-4]
  4072f0:	ldur	w0, [x29, #-4]
  4072f4:	ldp	x29, x30, [sp, #80]
  4072f8:	add	sp, sp, #0x60
  4072fc:	ret
  407300:	stp	x29, x30, [sp, #-32]!
  407304:	str	x28, [sp, #16]
  407308:	mov	x29, sp
  40730c:	sub	sp, sp, #0x1f0
  407310:	mov	x8, xzr
  407314:	adrp	x9, 409000 <safe_fork_full@plt+0x64d0>
  407318:	add	x9, x9, #0x1a
  40731c:	add	x9, x9, #0x3
  407320:	stur	x0, [x29, #-16]
  407324:	stur	x1, [x29, #-24]
  407328:	stur	w2, [x29, #-28]
  40732c:	stur	x8, [x29, #-40]
  407330:	stur	x8, [x29, #-48]
  407334:	stur	x8, [x29, #-56]
  407338:	stur	x8, [x29, #-64]
  40733c:	stur	x8, [x29, #-72]
  407340:	stur	x8, [x29, #-80]
  407344:	stur	x8, [x29, #-88]
  407348:	stur	x8, [x29, #-96]
  40734c:	stur	x8, [x29, #-104]
  407350:	stur	x8, [x29, #-112]
  407354:	stur	x8, [x29, #-120]
  407358:	str	x9, [sp, #168]
  40735c:	ldur	x8, [x29, #-16]
  407360:	cmp	x8, #0x0
  407364:	cset	w9, ne  // ne = any
  407368:	mov	w10, #0x1                   	// #1
  40736c:	eor	w9, w9, #0x1
  407370:	eor	w9, w9, w10
  407374:	eor	w9, w9, w10
  407378:	and	w9, w9, #0x1
  40737c:	mov	w0, w9
  407380:	sxtw	x8, w0
  407384:	cbz	x8, 4073ac <safe_fork_full@plt+0x487c>
  407388:	mov	w8, wzr
  40738c:	mov	w0, w8
  407390:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407394:	add	x1, x1, #0xa07
  407398:	ldr	x2, [sp, #168]
  40739c:	mov	w3, #0x16b                 	// #363
  4073a0:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  4073a4:	add	x4, x4, #0xe62
  4073a8:	bl	4025c0 <log_assert_failed_realm@plt>
  4073ac:	ldur	x8, [x29, #-24]
  4073b0:	cmp	x8, #0x0
  4073b4:	cset	w9, ne  // ne = any
  4073b8:	mov	w10, #0x1                   	// #1
  4073bc:	eor	w9, w9, #0x1
  4073c0:	eor	w9, w9, w10
  4073c4:	eor	w9, w9, w10
  4073c8:	and	w9, w9, #0x1
  4073cc:	mov	w0, w9
  4073d0:	sxtw	x8, w0
  4073d4:	cbz	x8, 4073fc <safe_fork_full@plt+0x48cc>
  4073d8:	mov	w8, wzr
  4073dc:	mov	w0, w8
  4073e0:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  4073e4:	add	x1, x1, #0x9d2
  4073e8:	ldr	x2, [sp, #168]
  4073ec:	mov	w3, #0x16c                 	// #364
  4073f0:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  4073f4:	add	x4, x4, #0xe62
  4073f8:	bl	4025c0 <log_assert_failed_realm@plt>
  4073fc:	ldur	x0, [x29, #-24]
  407400:	bl	402980 <sd_journal_restart_data@plt>
  407404:	ldur	x0, [x29, #-24]
  407408:	sub	x1, x29, #0x80
  40740c:	sub	x2, x29, #0x88
  407410:	bl	402990 <sd_journal_enumerate_data@plt>
  407414:	cmp	w0, #0x0
  407418:	cset	w8, le
  40741c:	tbnz	w8, #0, 4077c0 <safe_fork_full@plt+0x4c90>
  407420:	ldur	x0, [x29, #-128]
  407424:	ldur	x1, [x29, #-136]
  407428:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  40742c:	add	x2, x2, #0xa38
  407430:	sub	x3, x29, #0x28
  407434:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407438:	stur	w0, [x29, #-208]
  40743c:	ldur	w8, [x29, #-208]
  407440:	cmp	w8, #0x0
  407444:	cset	w8, ge  // ge = tcont
  407448:	tbnz	w8, #0, 407460 <safe_fork_full@plt+0x4930>
  40744c:	ldur	w8, [x29, #-208]
  407450:	stur	w8, [x29, #-4]
  407454:	mov	w8, #0x1                   	// #1
  407458:	stur	w8, [x29, #-212]
  40745c:	b	407c48 <safe_fork_full@plt+0x5118>
  407460:	ldur	w8, [x29, #-208]
  407464:	cmp	w8, #0x0
  407468:	cset	w8, le
  40746c:	tbnz	w8, #0, 407474 <safe_fork_full@plt+0x4944>
  407470:	b	407404 <safe_fork_full@plt+0x48d4>
  407474:	ldur	x0, [x29, #-128]
  407478:	ldur	x1, [x29, #-136]
  40747c:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  407480:	add	x2, x2, #0xa43
  407484:	sub	x3, x29, #0x30
  407488:	bl	407cb4 <safe_fork_full@plt+0x5184>
  40748c:	stur	w0, [x29, #-216]
  407490:	ldur	w8, [x29, #-216]
  407494:	cmp	w8, #0x0
  407498:	cset	w8, ge  // ge = tcont
  40749c:	tbnz	w8, #0, 4074b4 <safe_fork_full@plt+0x4984>
  4074a0:	ldur	w8, [x29, #-216]
  4074a4:	stur	w8, [x29, #-4]
  4074a8:	mov	w8, #0x1                   	// #1
  4074ac:	stur	w8, [x29, #-212]
  4074b0:	b	407c48 <safe_fork_full@plt+0x5118>
  4074b4:	ldur	w8, [x29, #-216]
  4074b8:	cmp	w8, #0x0
  4074bc:	cset	w8, le
  4074c0:	tbnz	w8, #0, 4074c8 <safe_fork_full@plt+0x4998>
  4074c4:	b	407404 <safe_fork_full@plt+0x48d4>
  4074c8:	ldur	x0, [x29, #-128]
  4074cc:	ldur	x1, [x29, #-136]
  4074d0:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4074d4:	add	x2, x2, #0xa50
  4074d8:	sub	x3, x29, #0x38
  4074dc:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4074e0:	stur	w0, [x29, #-220]
  4074e4:	ldur	w8, [x29, #-220]
  4074e8:	cmp	w8, #0x0
  4074ec:	cset	w8, ge  // ge = tcont
  4074f0:	tbnz	w8, #0, 407508 <safe_fork_full@plt+0x49d8>
  4074f4:	ldur	w8, [x29, #-220]
  4074f8:	stur	w8, [x29, #-4]
  4074fc:	mov	w8, #0x1                   	// #1
  407500:	stur	w8, [x29, #-212]
  407504:	b	407c48 <safe_fork_full@plt+0x5118>
  407508:	ldur	w8, [x29, #-220]
  40750c:	cmp	w8, #0x0
  407510:	cset	w8, le
  407514:	tbnz	w8, #0, 40751c <safe_fork_full@plt+0x49ec>
  407518:	b	407404 <safe_fork_full@plt+0x48d4>
  40751c:	ldur	x0, [x29, #-128]
  407520:	ldur	x1, [x29, #-136]
  407524:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  407528:	add	x2, x2, #0xa5d
  40752c:	sub	x3, x29, #0x40
  407530:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407534:	stur	w0, [x29, #-224]
  407538:	ldur	w8, [x29, #-224]
  40753c:	cmp	w8, #0x0
  407540:	cset	w8, ge  // ge = tcont
  407544:	tbnz	w8, #0, 40755c <safe_fork_full@plt+0x4a2c>
  407548:	ldur	w8, [x29, #-224]
  40754c:	stur	w8, [x29, #-4]
  407550:	mov	w8, #0x1                   	// #1
  407554:	stur	w8, [x29, #-212]
  407558:	b	407c48 <safe_fork_full@plt+0x5118>
  40755c:	ldur	w8, [x29, #-224]
  407560:	cmp	w8, #0x0
  407564:	cset	w8, le
  407568:	tbnz	w8, #0, 407570 <safe_fork_full@plt+0x4a40>
  40756c:	b	407404 <safe_fork_full@plt+0x48d4>
  407570:	ldur	x0, [x29, #-128]
  407574:	ldur	x1, [x29, #-136]
  407578:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  40757c:	add	x2, x2, #0xa6a
  407580:	sub	x3, x29, #0x48
  407584:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407588:	stur	w0, [x29, #-228]
  40758c:	ldur	w8, [x29, #-228]
  407590:	cmp	w8, #0x0
  407594:	cset	w8, ge  // ge = tcont
  407598:	tbnz	w8, #0, 4075b0 <safe_fork_full@plt+0x4a80>
  40759c:	ldur	w8, [x29, #-228]
  4075a0:	stur	w8, [x29, #-4]
  4075a4:	mov	w8, #0x1                   	// #1
  4075a8:	stur	w8, [x29, #-212]
  4075ac:	b	407c48 <safe_fork_full@plt+0x5118>
  4075b0:	ldur	w8, [x29, #-228]
  4075b4:	cmp	w8, #0x0
  4075b8:	cset	w8, le
  4075bc:	tbnz	w8, #0, 4075c4 <safe_fork_full@plt+0x4a94>
  4075c0:	b	407404 <safe_fork_full@plt+0x48d4>
  4075c4:	ldur	x0, [x29, #-128]
  4075c8:	ldur	x1, [x29, #-136]
  4075cc:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4075d0:	add	x2, x2, #0xa7a
  4075d4:	sub	x3, x29, #0x50
  4075d8:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4075dc:	stur	w0, [x29, #-232]
  4075e0:	ldur	w8, [x29, #-232]
  4075e4:	cmp	w8, #0x0
  4075e8:	cset	w8, ge  // ge = tcont
  4075ec:	tbnz	w8, #0, 407604 <safe_fork_full@plt+0x4ad4>
  4075f0:	ldur	w8, [x29, #-232]
  4075f4:	stur	w8, [x29, #-4]
  4075f8:	mov	w8, #0x1                   	// #1
  4075fc:	stur	w8, [x29, #-212]
  407600:	b	407c48 <safe_fork_full@plt+0x5118>
  407604:	ldur	w8, [x29, #-232]
  407608:	cmp	w8, #0x0
  40760c:	cset	w8, le
  407610:	tbnz	w8, #0, 407618 <safe_fork_full@plt+0x4ae8>
  407614:	b	407404 <safe_fork_full@plt+0x48d4>
  407618:	ldur	x0, [x29, #-128]
  40761c:	ldur	x1, [x29, #-136]
  407620:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  407624:	add	x2, x2, #0xa87
  407628:	sub	x3, x29, #0x58
  40762c:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407630:	stur	w0, [x29, #-236]
  407634:	ldur	w8, [x29, #-236]
  407638:	cmp	w8, #0x0
  40763c:	cset	w8, ge  // ge = tcont
  407640:	tbnz	w8, #0, 407658 <safe_fork_full@plt+0x4b28>
  407644:	ldur	w8, [x29, #-236]
  407648:	stur	w8, [x29, #-4]
  40764c:	mov	w8, #0x1                   	// #1
  407650:	stur	w8, [x29, #-212]
  407654:	b	407c48 <safe_fork_full@plt+0x5118>
  407658:	ldur	w8, [x29, #-236]
  40765c:	cmp	w8, #0x0
  407660:	cset	w8, le
  407664:	tbnz	w8, #0, 40766c <safe_fork_full@plt+0x4b3c>
  407668:	b	407404 <safe_fork_full@plt+0x48d4>
  40766c:	ldur	x0, [x29, #-128]
  407670:	ldur	x1, [x29, #-136]
  407674:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  407678:	add	x2, x2, #0xa95
  40767c:	sub	x3, x29, #0x60
  407680:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407684:	stur	w0, [x29, #-240]
  407688:	ldur	w8, [x29, #-240]
  40768c:	cmp	w8, #0x0
  407690:	cset	w8, ge  // ge = tcont
  407694:	tbnz	w8, #0, 4076ac <safe_fork_full@plt+0x4b7c>
  407698:	ldur	w8, [x29, #-240]
  40769c:	stur	w8, [x29, #-4]
  4076a0:	mov	w8, #0x1                   	// #1
  4076a4:	stur	w8, [x29, #-212]
  4076a8:	b	407c48 <safe_fork_full@plt+0x5118>
  4076ac:	ldur	w8, [x29, #-240]
  4076b0:	cmp	w8, #0x0
  4076b4:	cset	w8, le
  4076b8:	tbnz	w8, #0, 4076c0 <safe_fork_full@plt+0x4b90>
  4076bc:	b	407404 <safe_fork_full@plt+0x48d4>
  4076c0:	ldur	x0, [x29, #-128]
  4076c4:	ldur	x1, [x29, #-136]
  4076c8:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  4076cc:	add	x2, x2, #0xb1d
  4076d0:	sub	x3, x29, #0x68
  4076d4:	bl	407cb4 <safe_fork_full@plt+0x5184>
  4076d8:	stur	w0, [x29, #-244]
  4076dc:	ldur	w8, [x29, #-244]
  4076e0:	cmp	w8, #0x0
  4076e4:	cset	w8, ge  // ge = tcont
  4076e8:	tbnz	w8, #0, 407700 <safe_fork_full@plt+0x4bd0>
  4076ec:	ldur	w8, [x29, #-244]
  4076f0:	stur	w8, [x29, #-4]
  4076f4:	mov	w8, #0x1                   	// #1
  4076f8:	stur	w8, [x29, #-212]
  4076fc:	b	407c48 <safe_fork_full@plt+0x5118>
  407700:	ldur	w8, [x29, #-244]
  407704:	cmp	w8, #0x0
  407708:	cset	w8, le
  40770c:	tbnz	w8, #0, 407714 <safe_fork_full@plt+0x4be4>
  407710:	b	407404 <safe_fork_full@plt+0x48d4>
  407714:	ldur	x0, [x29, #-128]
  407718:	ldur	x1, [x29, #-136]
  40771c:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  407720:	add	x2, x2, #0xb2f
  407724:	sub	x3, x29, #0x70
  407728:	bl	407cb4 <safe_fork_full@plt+0x5184>
  40772c:	str	w0, [sp, #248]
  407730:	ldr	w8, [sp, #248]
  407734:	cmp	w8, #0x0
  407738:	cset	w8, ge  // ge = tcont
  40773c:	tbnz	w8, #0, 407754 <safe_fork_full@plt+0x4c24>
  407740:	ldr	w8, [sp, #248]
  407744:	stur	w8, [x29, #-4]
  407748:	mov	w8, #0x1                   	// #1
  40774c:	stur	w8, [x29, #-212]
  407750:	b	407c48 <safe_fork_full@plt+0x5118>
  407754:	ldr	w8, [sp, #248]
  407758:	cmp	w8, #0x0
  40775c:	cset	w8, le
  407760:	tbnz	w8, #0, 407768 <safe_fork_full@plt+0x4c38>
  407764:	b	407404 <safe_fork_full@plt+0x48d4>
  407768:	ldur	x0, [x29, #-128]
  40776c:	ldur	x1, [x29, #-136]
  407770:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  407774:	add	x2, x2, #0xb42
  407778:	sub	x3, x29, #0x78
  40777c:	bl	407cb4 <safe_fork_full@plt+0x5184>
  407780:	str	w0, [sp, #244]
  407784:	ldr	w8, [sp, #244]
  407788:	cmp	w8, #0x0
  40778c:	cset	w8, ge  // ge = tcont
  407790:	tbnz	w8, #0, 4077a8 <safe_fork_full@plt+0x4c78>
  407794:	ldr	w8, [sp, #244]
  407798:	stur	w8, [x29, #-4]
  40779c:	mov	w8, #0x1                   	// #1
  4077a0:	stur	w8, [x29, #-212]
  4077a4:	b	407c48 <safe_fork_full@plt+0x5118>
  4077a8:	ldr	w8, [sp, #244]
  4077ac:	cmp	w8, #0x0
  4077b0:	cset	w8, le
  4077b4:	tbnz	w8, #0, 4077bc <safe_fork_full@plt+0x4c8c>
  4077b8:	b	407404 <safe_fork_full@plt+0x48d4>
  4077bc:	b	407404 <safe_fork_full@plt+0x48d4>
  4077c0:	ldur	x8, [x29, #-48]
  4077c4:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077c8:	ldur	x8, [x29, #-56]
  4077cc:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077d0:	ldur	x8, [x29, #-64]
  4077d4:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077d8:	ldur	x8, [x29, #-72]
  4077dc:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077e0:	ldur	x8, [x29, #-80]
  4077e4:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077e8:	ldur	x8, [x29, #-88]
  4077ec:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077f0:	ldur	x8, [x29, #-96]
  4077f4:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  4077f8:	ldur	x8, [x29, #-104]
  4077fc:	cbnz	x8, 40788c <safe_fork_full@plt+0x4d5c>
  407800:	mov	w8, #0x4                   	// #4
  407804:	str	w8, [sp, #240]
  407808:	str	wzr, [sp, #236]
  40780c:	str	wzr, [sp, #232]
  407810:	ldr	w0, [sp, #232]
  407814:	bl	4025f0 <log_get_max_level_realm@plt>
  407818:	ldr	w8, [sp, #240]
  40781c:	and	w8, w8, #0x7
  407820:	cmp	w0, w8
  407824:	b.lt	40785c <safe_fork_full@plt+0x4d2c>  // b.tstop
  407828:	ldr	w8, [sp, #232]
  40782c:	ldr	w9, [sp, #240]
  407830:	orr	w0, w9, w8, lsl #10
  407834:	ldr	w1, [sp, #236]
  407838:	ldr	x2, [sp, #168]
  40783c:	mov	w3, #0x17d                 	// #381
  407840:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  407844:	add	x4, x4, #0xe8c
  407848:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  40784c:	add	x5, x5, #0xe97
  407850:	bl	402600 <log_internal_realm@plt>
  407854:	str	w0, [sp, #164]
  407858:	b	407870 <safe_fork_full@plt+0x4d40>
  40785c:	ldr	w0, [sp, #236]
  407860:	bl	402610 <abs@plt>
  407864:	mov	w8, wzr
  407868:	subs	w8, w8, w0, uxtb
  40786c:	str	w8, [sp, #164]
  407870:	ldr	w8, [sp, #164]
  407874:	str	w8, [sp, #228]
  407878:	mov	w8, #0xffffffea            	// #-22
  40787c:	stur	w8, [x29, #-4]
  407880:	mov	w8, #0x1                   	// #1
  407884:	stur	w8, [x29, #-212]
  407888:	b	407c48 <safe_fork_full@plt+0x5118>
  40788c:	ldur	x0, [x29, #-24]
  407890:	sub	x1, x29, #0x90
  407894:	bl	4027d0 <sd_journal_get_realtime_usec@plt>
  407898:	stur	w0, [x29, #-188]
  40789c:	ldur	w8, [x29, #-188]
  4078a0:	cmp	w8, #0x0
  4078a4:	cset	w8, ge  // ge = tcont
  4078a8:	tbnz	w8, #0, 40793c <safe_fork_full@plt+0x4e0c>
  4078ac:	mov	w8, #0x3                   	// #3
  4078b0:	str	w8, [sp, #224]
  4078b4:	ldur	w8, [x29, #-188]
  4078b8:	str	w8, [sp, #220]
  4078bc:	str	wzr, [sp, #216]
  4078c0:	ldr	w0, [sp, #216]
  4078c4:	bl	4025f0 <log_get_max_level_realm@plt>
  4078c8:	ldr	w8, [sp, #224]
  4078cc:	and	w8, w8, #0x7
  4078d0:	cmp	w0, w8
  4078d4:	b.lt	40790c <safe_fork_full@plt+0x4ddc>  // b.tstop
  4078d8:	ldr	w8, [sp, #216]
  4078dc:	ldr	w9, [sp, #224]
  4078e0:	orr	w0, w9, w8, lsl #10
  4078e4:	ldr	w1, [sp, #220]
  4078e8:	ldr	x2, [sp, #168]
  4078ec:	mov	w3, #0x183                 	// #387
  4078f0:	adrp	x4, 409000 <safe_fork_full@plt+0x64d0>
  4078f4:	add	x4, x4, #0xe8c
  4078f8:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  4078fc:	add	x5, x5, #0xeb0
  407900:	bl	402600 <log_internal_realm@plt>
  407904:	str	w0, [sp, #160]
  407908:	b	407920 <safe_fork_full@plt+0x4df0>
  40790c:	ldr	w0, [sp, #220]
  407910:	bl	402610 <abs@plt>
  407914:	mov	w8, wzr
  407918:	subs	w8, w8, w0, uxtb
  40791c:	str	w8, [sp, #160]
  407920:	ldr	w8, [sp, #160]
  407924:	str	w8, [sp, #212]
  407928:	ldr	w8, [sp, #212]
  40792c:	stur	w8, [x29, #-4]
  407930:	mov	w8, #0x1                   	// #1
  407934:	stur	w8, [x29, #-212]
  407938:	b	407c48 <safe_fork_full@plt+0x5118>
  40793c:	ldur	x2, [x29, #-144]
  407940:	sub	x0, x29, #0xb6
  407944:	mov	x1, #0x26                  	// #38
  407948:	bl	402a00 <format_timestamp@plt>
  40794c:	ldur	w8, [x29, #-28]
  407950:	cbnz	w8, 4079fc <safe_fork_full@plt+0x4ecc>
  407954:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  407958:	add	x8, x8, #0x54
  40795c:	ldr	w9, [x8]
  407960:	cbnz	w9, 4079fc <safe_fork_full@plt+0x4ecc>
  407964:	ldur	x0, [x29, #-16]
  407968:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  40796c:	add	x1, x1, #0xed5
  407970:	mov	w2, #0x1c                  	// #28
  407974:	adrp	x3, 409000 <safe_fork_full@plt+0x64d0>
  407978:	add	x3, x3, #0xef3
  40797c:	mov	w4, #0x6                   	// #6
  407980:	adrp	x5, 409000 <safe_fork_full@plt+0x64d0>
  407984:	add	x5, x5, #0xef8
  407988:	mov	w8, #0x5                   	// #5
  40798c:	mov	w6, w8
  407990:	adrp	x7, 409000 <safe_fork_full@plt+0x64d0>
  407994:	add	x7, x7, #0xefc
  407998:	mov	x9, sp
  40799c:	str	w8, [x9]
  4079a0:	mov	x9, sp
  4079a4:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  4079a8:	add	x10, x10, #0xf00
  4079ac:	str	x10, [x9, #8]
  4079b0:	mov	x9, sp
  4079b4:	mov	w8, #0x3                   	// #3
  4079b8:	str	w8, [x9, #16]
  4079bc:	mov	x9, sp
  4079c0:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  4079c4:	add	x10, x10, #0xf04
  4079c8:	str	x10, [x9, #24]
  4079cc:	mov	x9, sp
  4079d0:	mov	w8, #0x9                   	// #9
  4079d4:	str	w8, [x9, #32]
  4079d8:	mov	x9, sp
  4079dc:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  4079e0:	add	x10, x10, #0xf08
  4079e4:	str	x10, [x9, #40]
  4079e8:	mov	x9, sp
  4079ec:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  4079f0:	add	x10, x10, #0xf11
  4079f4:	str	x10, [x9, #48]
  4079f8:	bl	4029a0 <fprintf@plt>
  4079fc:	ldur	x0, [x29, #-40]
  407a00:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407a04:	add	x1, x1, #0xb74
  407a08:	bl	407dd0 <safe_fork_full@plt+0x52a0>
  407a0c:	and	w8, w0, #0x1
  407a10:	sturb	w8, [x29, #-201]
  407a14:	ldur	x9, [x29, #-104]
  407a18:	cbz	x9, 407a6c <safe_fork_full@plt+0x4f3c>
  407a1c:	ldur	x0, [x29, #-104]
  407a20:	mov	w1, #0x4                   	// #4
  407a24:	bl	402a20 <access@plt>
  407a28:	cbnz	w0, 407a3c <safe_fork_full@plt+0x4f0c>
  407a2c:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407a30:	add	x8, x8, #0xf15
  407a34:	stur	x8, [x29, #-200]
  407a38:	b	407a68 <safe_fork_full@plt+0x4f38>
  407a3c:	bl	4027f0 <__errno_location@plt>
  407a40:	ldr	w8, [x0]
  407a44:	cmp	w8, #0x2
  407a48:	b.ne	407a5c <safe_fork_full@plt+0x4f2c>  // b.any
  407a4c:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407a50:	add	x8, x8, #0xf1d
  407a54:	stur	x8, [x29, #-200]
  407a58:	b	407a68 <safe_fork_full@plt+0x4f38>
  407a5c:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407a60:	add	x8, x8, #0xf25
  407a64:	stur	x8, [x29, #-200]
  407a68:	b	407aac <safe_fork_full@plt+0x4f7c>
  407a6c:	ldur	x8, [x29, #-120]
  407a70:	cbz	x8, 407a84 <safe_fork_full@plt+0x4f54>
  407a74:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407a78:	add	x8, x8, #0xf2b
  407a7c:	stur	x8, [x29, #-200]
  407a80:	b	407aac <safe_fork_full@plt+0x4f7c>
  407a84:	ldurb	w8, [x29, #-201]
  407a88:	tbnz	w8, #0, 407a90 <safe_fork_full@plt+0x4f60>
  407a8c:	b	407aa0 <safe_fork_full@plt+0x4f70>
  407a90:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407a94:	add	x8, x8, #0xf33
  407a98:	stur	x8, [x29, #-200]
  407a9c:	b	407aac <safe_fork_full@plt+0x4f7c>
  407aa0:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407aa4:	add	x8, x8, #0xf38
  407aa8:	stur	x8, [x29, #-200]
  407aac:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  407ab0:	add	x8, x8, #0x30
  407ab4:	ldr	q0, [x8]
  407ab8:	add	x0, sp, #0xb0
  407abc:	str	q0, [sp, #176]
  407ac0:	ldr	x8, [x8, #16]
  407ac4:	str	x8, [sp, #192]
  407ac8:	ldur	x1, [x29, #-200]
  407acc:	bl	4026b0 <strv_find@plt>
  407ad0:	cbz	x0, 407afc <safe_fork_full@plt+0x4fcc>
  407ad4:	ldur	x8, [x29, #-112]
  407ad8:	cbz	x8, 407afc <safe_fork_full@plt+0x4fcc>
  407adc:	ldur	x0, [x29, #-112]
  407ae0:	bl	402a30 <parse_boolean@plt>
  407ae4:	cmp	w0, #0x0
  407ae8:	cset	w8, le
  407aec:	tbnz	w8, #0, 407afc <safe_fork_full@plt+0x4fcc>
  407af0:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407af4:	add	x8, x8, #0xdae
  407af8:	stur	x8, [x29, #-200]
  407afc:	ldur	x0, [x29, #-16]
  407b00:	ldur	x8, [x29, #-48]
  407b04:	str	x0, [sp, #152]
  407b08:	mov	x0, x8
  407b0c:	bl	407e08 <safe_fork_full@plt+0x52d8>
  407b10:	ldur	x8, [x29, #-56]
  407b14:	str	x0, [sp, #144]
  407b18:	mov	x0, x8
  407b1c:	bl	407e08 <safe_fork_full@plt+0x52d8>
  407b20:	ldur	x8, [x29, #-64]
  407b24:	str	x0, [sp, #136]
  407b28:	mov	x0, x8
  407b2c:	bl	407e08 <safe_fork_full@plt+0x52d8>
  407b30:	ldurb	w9, [x29, #-201]
  407b34:	str	x0, [sp, #128]
  407b38:	tbnz	w9, #0, 407b40 <safe_fork_full@plt+0x5010>
  407b3c:	b	407b50 <safe_fork_full@plt+0x5020>
  407b40:	ldur	x0, [x29, #-72]
  407b44:	bl	407e08 <safe_fork_full@plt+0x52d8>
  407b48:	str	x0, [sp, #120]
  407b4c:	b	407b5c <safe_fork_full@plt+0x502c>
  407b50:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407b54:	add	x8, x8, #0xf38
  407b58:	str	x8, [sp, #120]
  407b5c:	ldr	x8, [sp, #120]
  407b60:	ldur	x9, [x29, #-200]
  407b64:	ldur	x10, [x29, #-80]
  407b68:	str	x8, [sp, #112]
  407b6c:	str	x9, [sp, #104]
  407b70:	str	x10, [sp, #96]
  407b74:	cbz	x10, 407b84 <safe_fork_full@plt+0x5054>
  407b78:	ldr	x8, [sp, #96]
  407b7c:	str	x8, [sp, #88]
  407b80:	b	407bac <safe_fork_full@plt+0x507c>
  407b84:	ldur	x8, [x29, #-88]
  407b88:	str	x8, [sp, #80]
  407b8c:	cbz	x8, 407b9c <safe_fork_full@plt+0x506c>
  407b90:	ldr	x8, [sp, #80]
  407b94:	str	x8, [sp, #72]
  407b98:	b	407ba4 <safe_fork_full@plt+0x5074>
  407b9c:	ldur	x8, [x29, #-96]
  407ba0:	str	x8, [sp, #72]
  407ba4:	ldr	x8, [sp, #72]
  407ba8:	str	x8, [sp, #88]
  407bac:	ldr	x8, [sp, #88]
  407bb0:	mov	x0, x8
  407bb4:	bl	407e08 <safe_fork_full@plt+0x52d8>
  407bb8:	ldr	x8, [sp, #152]
  407bbc:	str	x0, [sp, #64]
  407bc0:	mov	x0, x8
  407bc4:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407bc8:	add	x1, x1, #0xed5
  407bcc:	mov	w2, #0x1c                  	// #28
  407bd0:	sub	x3, x29, #0xb6
  407bd4:	mov	w4, #0x6                   	// #6
  407bd8:	ldr	x5, [sp, #144]
  407bdc:	mov	w9, #0x5                   	// #5
  407be0:	mov	w6, w9
  407be4:	ldr	x7, [sp, #136]
  407be8:	mov	x10, sp
  407bec:	str	w9, [x10]
  407bf0:	mov	x10, sp
  407bf4:	ldr	x11, [sp, #128]
  407bf8:	str	x11, [x10, #8]
  407bfc:	mov	x10, sp
  407c00:	mov	w9, #0x3                   	// #3
  407c04:	str	w9, [x10, #16]
  407c08:	mov	x10, sp
  407c0c:	ldr	x12, [sp, #112]
  407c10:	str	x12, [x10, #24]
  407c14:	mov	x10, sp
  407c18:	mov	w9, #0x9                   	// #9
  407c1c:	str	w9, [x10, #32]
  407c20:	mov	x10, sp
  407c24:	ldr	x13, [sp, #104]
  407c28:	str	x13, [x10, #40]
  407c2c:	mov	x10, sp
  407c30:	ldr	x14, [sp, #64]
  407c34:	str	x14, [x10, #48]
  407c38:	bl	4029a0 <fprintf@plt>
  407c3c:	stur	wzr, [x29, #-4]
  407c40:	mov	w9, #0x1                   	// #1
  407c44:	stur	w9, [x29, #-212]
  407c48:	sub	x0, x29, #0x78
  407c4c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c50:	sub	x0, x29, #0x70
  407c54:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c58:	sub	x0, x29, #0x68
  407c5c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c60:	sub	x0, x29, #0x60
  407c64:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c68:	sub	x0, x29, #0x58
  407c6c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c70:	sub	x0, x29, #0x50
  407c74:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c78:	sub	x0, x29, #0x48
  407c7c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c80:	sub	x0, x29, #0x40
  407c84:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c88:	sub	x0, x29, #0x38
  407c8c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c90:	sub	x0, x29, #0x30
  407c94:	bl	403f94 <safe_fork_full@plt+0x1464>
  407c98:	sub	x0, x29, #0x28
  407c9c:	bl	403f94 <safe_fork_full@plt+0x1464>
  407ca0:	ldur	w0, [x29, #-4]
  407ca4:	add	sp, sp, #0x1f0
  407ca8:	ldr	x28, [sp, #16]
  407cac:	ldp	x29, x30, [sp], #32
  407cb0:	ret
  407cb4:	sub	sp, sp, #0x60
  407cb8:	stp	x29, x30, [sp, #80]
  407cbc:	add	x29, sp, #0x50
  407cc0:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407cc4:	add	x8, x8, #0x1a
  407cc8:	add	x8, x8, #0x3
  407ccc:	stur	x0, [x29, #-16]
  407cd0:	stur	x1, [x29, #-24]
  407cd4:	stur	x2, [x29, #-32]
  407cd8:	str	x3, [sp, #40]
  407cdc:	ldur	x0, [x29, #-32]
  407ce0:	str	x8, [sp, #8]
  407ce4:	bl	402880 <strlen@plt>
  407ce8:	add	x8, x0, #0x1
  407cec:	str	x8, [sp, #32]
  407cf0:	ldur	x8, [x29, #-24]
  407cf4:	ldr	x9, [sp, #32]
  407cf8:	cmp	x8, x9
  407cfc:	b.cs	407d08 <safe_fork_full@plt+0x51d8>  // b.hs, b.nlast
  407d00:	stur	wzr, [x29, #-4]
  407d04:	b	407dc0 <safe_fork_full@plt+0x5290>
  407d08:	ldur	x0, [x29, #-16]
  407d0c:	ldur	x1, [x29, #-32]
  407d10:	ldr	x8, [sp, #32]
  407d14:	subs	x2, x8, #0x1
  407d18:	bl	402a60 <memcmp@plt>
  407d1c:	cbz	w0, 407d28 <safe_fork_full@plt+0x51f8>
  407d20:	stur	wzr, [x29, #-4]
  407d24:	b	407dc0 <safe_fork_full@plt+0x5290>
  407d28:	ldur	x8, [x29, #-16]
  407d2c:	ldr	x9, [sp, #32]
  407d30:	subs	x9, x9, #0x1
  407d34:	ldrb	w10, [x8, x9]
  407d38:	cmp	w10, #0x3d
  407d3c:	b.eq	407d48 <safe_fork_full@plt+0x5218>  // b.none
  407d40:	stur	wzr, [x29, #-4]
  407d44:	b	407dc0 <safe_fork_full@plt+0x5290>
  407d48:	ldur	x8, [x29, #-16]
  407d4c:	ldr	x9, [sp, #32]
  407d50:	add	x0, x8, x9
  407d54:	ldur	x8, [x29, #-24]
  407d58:	ldr	x9, [sp, #32]
  407d5c:	subs	x1, x8, x9
  407d60:	bl	402840 <strndup@plt>
  407d64:	str	x0, [sp, #24]
  407d68:	ldr	x8, [sp, #24]
  407d6c:	cbnz	x8, 407d94 <safe_fork_full@plt+0x5264>
  407d70:	mov	w8, wzr
  407d74:	mov	w0, w8
  407d78:	ldr	x1, [sp, #8]
  407d7c:	mov	w2, #0x133                 	// #307
  407d80:	adrp	x3, 409000 <safe_fork_full@plt+0x64d0>
  407d84:	add	x3, x3, #0xe21
  407d88:	bl	402710 <log_oom_internal@plt>
  407d8c:	stur	w0, [x29, #-4]
  407d90:	b	407dc0 <safe_fork_full@plt+0x5290>
  407d94:	ldr	x8, [sp, #40]
  407d98:	ldr	x0, [x8]
  407d9c:	bl	402720 <free@plt>
  407da0:	ldr	x8, [sp, #24]
  407da4:	ldr	x9, [sp, #40]
  407da8:	str	x8, [x9]
  407dac:	mov	x8, xzr
  407db0:	str	x8, [sp, #24]
  407db4:	str	wzr, [sp, #20]
  407db8:	mov	w10, #0x1                   	// #1
  407dbc:	stur	w10, [x29, #-4]
  407dc0:	ldur	w0, [x29, #-4]
  407dc4:	ldp	x29, x30, [sp, #80]
  407dc8:	add	sp, sp, #0x60
  407dcc:	ret
  407dd0:	sub	sp, sp, #0x20
  407dd4:	stp	x29, x30, [sp, #16]
  407dd8:	add	x29, sp, #0x10
  407ddc:	str	x0, [sp, #8]
  407de0:	str	x1, [sp]
  407de4:	ldr	x0, [sp, #8]
  407de8:	ldr	x1, [sp]
  407dec:	bl	402a70 <strcmp_ptr@plt>
  407df0:	cmp	w0, #0x0
  407df4:	cset	w8, eq  // eq = none
  407df8:	and	w0, w8, #0x1
  407dfc:	ldp	x29, x30, [sp, #16]
  407e00:	add	sp, sp, #0x20
  407e04:	ret
  407e08:	sub	sp, sp, #0x20
  407e0c:	str	x0, [sp, #24]
  407e10:	ldr	x8, [sp, #24]
  407e14:	str	x8, [sp, #16]
  407e18:	cbz	x8, 407e28 <safe_fork_full@plt+0x52f8>
  407e1c:	ldr	x8, [sp, #16]
  407e20:	str	x8, [sp, #8]
  407e24:	b	407e34 <safe_fork_full@plt+0x5304>
  407e28:	adrp	x8, 409000 <safe_fork_full@plt+0x64d0>
  407e2c:	add	x8, x8, #0xe2a
  407e30:	str	x8, [sp, #8]
  407e34:	ldr	x8, [sp, #8]
  407e38:	mov	x0, x8
  407e3c:	add	sp, sp, #0x20
  407e40:	ret
  407e44:	sub	sp, sp, #0x20
  407e48:	stp	x29, x30, [sp, #16]
  407e4c:	add	x29, sp, #0x10
  407e50:	str	x0, [sp, #8]
  407e54:	str	x1, [sp]
  407e58:	ldr	x0, [sp, #8]
  407e5c:	ldr	x1, [sp]
  407e60:	bl	4029b0 <parse_uid@plt>
  407e64:	ldp	x29, x30, [sp, #16]
  407e68:	add	sp, sp, #0x20
  407e6c:	ret
  407e70:	sub	sp, sp, #0x20
  407e74:	stp	x29, x30, [sp, #16]
  407e78:	add	x29, sp, #0x10
  407e7c:	str	x0, [sp, #8]
  407e80:	str	x1, [sp]
  407e84:	ldr	x0, [sp, #8]
  407e88:	ldr	x1, [sp]
  407e8c:	bl	402a80 <safe_atollu@plt>
  407e90:	ldp	x29, x30, [sp, #16]
  407e94:	add	sp, sp, #0x20
  407e98:	ret
  407e9c:	sub	sp, sp, #0x20
  407ea0:	stp	x29, x30, [sp, #16]
  407ea4:	add	x29, sp, #0x10
  407ea8:	str	x0, [sp, #8]
  407eac:	ldr	x8, [sp, #8]
  407eb0:	ldr	x0, [x8]
  407eb4:	bl	402a90 <safe_fclose@plt>
  407eb8:	ldp	x29, x30, [sp, #16]
  407ebc:	add	sp, sp, #0x20
  407ec0:	ret
  407ec4:	sub	sp, sp, #0x1e0
  407ec8:	stp	x29, x30, [sp, #448]
  407ecc:	str	x28, [sp, #464]
  407ed0:	add	x29, sp, #0x1c0
  407ed4:	mov	x8, xzr
  407ed8:	mov	w9, #0xffffffff            	// #-1
  407edc:	adrp	x10, 409000 <safe_fork_full@plt+0x64d0>
  407ee0:	add	x10, x10, #0x1a
  407ee4:	add	x10, x10, #0x3
  407ee8:	adrp	x11, 40a000 <safe_fork_full@plt+0x74d0>
  407eec:	add	x11, x11, #0x28
  407ef0:	adrp	x12, 409000 <safe_fork_full@plt+0x64d0>
  407ef4:	add	x12, x12, #0xfd4
  407ef8:	stur	x0, [x29, #-16]
  407efc:	stur	x1, [x29, #-24]
  407f00:	stur	x2, [x29, #-32]
  407f04:	stur	x3, [x29, #-40]
  407f08:	stur	x8, [x29, #-56]
  407f0c:	stur	w9, [x29, #-76]
  407f10:	stur	x8, [x29, #-88]
  407f14:	str	x10, [sp, #80]
  407f18:	str	x11, [sp, #72]
  407f1c:	str	x12, [sp, #64]
  407f20:	ldur	x8, [x29, #-24]
  407f24:	mov	w9, #0x0                   	// #0
  407f28:	str	w9, [sp, #60]
  407f2c:	cbz	x8, 407f40 <safe_fork_full@plt+0x5410>
  407f30:	ldur	x8, [x29, #-32]
  407f34:	cmp	x8, #0x0
  407f38:	cset	w9, ne  // ne = any
  407f3c:	str	w9, [sp, #60]
  407f40:	ldr	w8, [sp, #60]
  407f44:	mov	w9, #0x1                   	// #1
  407f48:	eor	w8, w8, #0x1
  407f4c:	eor	w8, w8, w9
  407f50:	eor	w8, w8, w9
  407f54:	eor	w8, w8, w9
  407f58:	and	w8, w8, #0x1
  407f5c:	mov	w0, w8
  407f60:	sxtw	x10, w0
  407f64:	cbz	x10, 407f88 <safe_fork_full@plt+0x5458>
  407f68:	mov	w8, wzr
  407f6c:	mov	w0, w8
  407f70:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  407f74:	add	x1, x1, #0xfc4
  407f78:	ldr	x2, [sp, #80]
  407f7c:	mov	w3, #0x2e1                 	// #737
  407f80:	ldr	x4, [sp, #64]
  407f84:	bl	4025c0 <log_assert_failed_realm@plt>
  407f88:	ldur	x8, [x29, #-32]
  407f8c:	cmp	x8, #0x0
  407f90:	cset	w9, ne  // ne = any
  407f94:	mov	w10, #0x1                   	// #1
  407f98:	eor	w9, w9, #0x1
  407f9c:	eor	w9, w9, w10
  407fa0:	and	w9, w9, #0x1
  407fa4:	ldur	x8, [x29, #-40]
  407fa8:	cmp	x8, #0x0
  407fac:	cset	w11, ne  // ne = any
  407fb0:	eor	w11, w11, w10
  407fb4:	eor	w11, w11, w10
  407fb8:	and	w11, w11, #0x1
  407fbc:	cmp	w9, w11
  407fc0:	cset	w9, eq  // eq = none
  407fc4:	eor	w9, w9, w10
  407fc8:	eor	w9, w9, w10
  407fcc:	eor	w9, w9, w10
  407fd0:	and	w9, w9, #0x1
  407fd4:	mov	w0, w9
  407fd8:	sxtw	x8, w0
  407fdc:	cbz	x8, 408000 <safe_fork_full@plt+0x54d0>
  407fe0:	mov	w8, wzr
  407fe4:	mov	w0, w8
  407fe8:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  407fec:	add	x1, x1, #0xa
  407ff0:	ldr	x2, [sp, #80]
  407ff4:	mov	w3, #0x2e2                 	// #738
  407ff8:	ldr	x4, [sp, #64]
  407ffc:	bl	4025c0 <log_assert_failed_realm@plt>
  408000:	ldur	x0, [x29, #-16]
  408004:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  408008:	add	x1, x1, #0xb1d
  40800c:	sub	x2, x29, #0x30
  408010:	sub	x3, x29, #0x40
  408014:	bl	402830 <sd_journal_get_data@plt>
  408018:	stur	w0, [x29, #-68]
  40801c:	ldur	w8, [x29, #-68]
  408020:	cbnz	w8, 4081c4 <safe_fork_full@plt+0x5694>
  408024:	ldur	x0, [x29, #-48]
  408028:	ldur	x1, [x29, #-64]
  40802c:	adrp	x2, 409000 <safe_fork_full@plt+0x64d0>
  408030:	add	x2, x2, #0xb1d
  408034:	sub	x3, x29, #0x38
  408038:	bl	407cb4 <safe_fork_full@plt+0x5184>
  40803c:	stur	w0, [x29, #-68]
  408040:	ldur	w8, [x29, #-68]
  408044:	cmp	w8, #0x0
  408048:	cset	w8, ge  // ge = tcont
  40804c:	tbnz	w8, #0, 408064 <safe_fork_full@plt+0x5534>
  408050:	ldur	w8, [x29, #-68]
  408054:	stur	w8, [x29, #-4]
  408058:	mov	w8, #0x1                   	// #1
  40805c:	stur	w8, [x29, #-92]
  408060:	b	408b70 <safe_fork_full@plt+0x6040>
  408064:	ldur	w8, [x29, #-68]
  408068:	cmp	w8, #0x0
  40806c:	cset	w8, gt
  408070:	mov	w9, #0x1                   	// #1
  408074:	eor	w8, w8, #0x1
  408078:	eor	w8, w8, w9
  40807c:	eor	w8, w8, w9
  408080:	and	w8, w8, #0x1
  408084:	mov	w0, w8
  408088:	sxtw	x10, w0
  40808c:	cbz	x10, 4080b0 <safe_fork_full@plt+0x5580>
  408090:	mov	w8, wzr
  408094:	mov	w0, w8
  408098:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  40809c:	add	x1, x1, #0x22
  4080a0:	ldr	x2, [sp, #80]
  4080a4:	mov	w3, #0x2ea                 	// #746
  4080a8:	ldr	x4, [sp, #64]
  4080ac:	bl	4025c0 <log_assert_failed_realm@plt>
  4080b0:	ldur	x0, [x29, #-56]
  4080b4:	mov	w1, #0x4                   	// #4
  4080b8:	bl	402a20 <access@plt>
  4080bc:	cmp	w0, #0x0
  4080c0:	cset	w8, ge  // ge = tcont
  4080c4:	tbnz	w8, #0, 40815c <safe_fork_full@plt+0x562c>
  4080c8:	mov	w8, #0x3                   	// #3
  4080cc:	stur	w8, [x29, #-96]
  4080d0:	bl	4027f0 <__errno_location@plt>
  4080d4:	ldr	w8, [x0]
  4080d8:	stur	w8, [x29, #-100]
  4080dc:	stur	wzr, [x29, #-104]
  4080e0:	ldur	w0, [x29, #-104]
  4080e4:	bl	4025f0 <log_get_max_level_realm@plt>
  4080e8:	ldur	w8, [x29, #-96]
  4080ec:	and	w8, w8, #0x7
  4080f0:	cmp	w0, w8
  4080f4:	b.lt	40812c <safe_fork_full@plt+0x55fc>  // b.tstop
  4080f8:	ldur	w8, [x29, #-104]
  4080fc:	ldur	w9, [x29, #-96]
  408100:	orr	w0, w9, w8, lsl #10
  408104:	ldur	w1, [x29, #-100]
  408108:	ldur	x6, [x29, #-56]
  40810c:	ldr	x2, [sp, #80]
  408110:	mov	w3, #0x2ed                 	// #749
  408114:	ldr	x4, [sp, #72]
  408118:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  40811c:	add	x5, x5, #0x32
  408120:	bl	402600 <log_internal_realm@plt>
  408124:	str	w0, [sp, #56]
  408128:	b	408140 <safe_fork_full@plt+0x5610>
  40812c:	ldur	w0, [x29, #-100]
  408130:	bl	402610 <abs@plt>
  408134:	mov	w8, wzr
  408138:	subs	w8, w8, w0, uxtb
  40813c:	str	w8, [sp, #56]
  408140:	ldr	w8, [sp, #56]
  408144:	stur	w8, [x29, #-108]
  408148:	ldur	w8, [x29, #-108]
  40814c:	stur	w8, [x29, #-4]
  408150:	mov	w8, #0x1                   	// #1
  408154:	stur	w8, [x29, #-92]
  408158:	b	408b70 <safe_fork_full@plt+0x6040>
  40815c:	ldur	x8, [x29, #-32]
  408160:	cbz	x8, 4081c0 <safe_fork_full@plt+0x5690>
  408164:	ldur	x0, [x29, #-56]
  408168:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  40816c:	add	x1, x1, #0x50
  408170:	bl	402850 <endswith@plt>
  408174:	cbnz	x0, 4081c0 <safe_fork_full@plt+0x5690>
  408178:	ldur	x0, [x29, #-56]
  40817c:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  408180:	add	x1, x1, #0x54
  408184:	bl	402850 <endswith@plt>
  408188:	cbnz	x0, 4081c0 <safe_fork_full@plt+0x5690>
  40818c:	ldur	x8, [x29, #-56]
  408190:	stur	x8, [x29, #-120]
  408194:	mov	x8, xzr
  408198:	stur	x8, [x29, #-56]
  40819c:	ldur	x8, [x29, #-120]
  4081a0:	stur	x8, [x29, #-128]
  4081a4:	ldur	x8, [x29, #-128]
  4081a8:	ldur	x9, [x29, #-32]
  4081ac:	str	x8, [x9]
  4081b0:	stur	wzr, [x29, #-4]
  4081b4:	mov	w10, #0x1                   	// #1
  4081b8:	stur	w10, [x29, #-92]
  4081bc:	b	408b70 <safe_fork_full@plt+0x6040>
  4081c0:	b	4083b4 <safe_fork_full@plt+0x5884>
  4081c4:	ldur	w8, [x29, #-68]
  4081c8:	mov	w9, #0xfffffffe            	// #-2
  4081cc:	cmp	w8, w9
  4081d0:	b.eq	408260 <safe_fork_full@plt+0x5730>  // b.none
  4081d4:	mov	w8, #0x3                   	// #3
  4081d8:	stur	w8, [x29, #-132]
  4081dc:	ldur	w8, [x29, #-68]
  4081e0:	stur	w8, [x29, #-136]
  4081e4:	stur	wzr, [x29, #-140]
  4081e8:	ldur	w0, [x29, #-140]
  4081ec:	bl	4025f0 <log_get_max_level_realm@plt>
  4081f0:	ldur	w8, [x29, #-132]
  4081f4:	and	w8, w8, #0x7
  4081f8:	cmp	w0, w8
  4081fc:	b.lt	408230 <safe_fork_full@plt+0x5700>  // b.tstop
  408200:	ldur	w8, [x29, #-140]
  408204:	ldur	w9, [x29, #-132]
  408208:	orr	w0, w9, w8, lsl #10
  40820c:	ldur	w1, [x29, #-136]
  408210:	ldr	x2, [sp, #80]
  408214:	mov	w3, #0x2f7                 	// #759
  408218:	ldr	x4, [sp, #72]
  40821c:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408220:	add	x5, x5, #0x59
  408224:	bl	402600 <log_internal_realm@plt>
  408228:	str	w0, [sp, #52]
  40822c:	b	408244 <safe_fork_full@plt+0x5714>
  408230:	ldur	w0, [x29, #-136]
  408234:	bl	402610 <abs@plt>
  408238:	mov	w8, wzr
  40823c:	subs	w8, w8, w0, uxtb
  408240:	str	w8, [sp, #52]
  408244:	ldr	w8, [sp, #52]
  408248:	stur	w8, [x29, #-144]
  40824c:	ldur	w8, [x29, #-144]
  408250:	stur	w8, [x29, #-4]
  408254:	mov	w8, #0x1                   	// #1
  408258:	stur	w8, [x29, #-92]
  40825c:	b	408b70 <safe_fork_full@plt+0x6040>
  408260:	ldur	x0, [x29, #-16]
  408264:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  408268:	add	x1, x1, #0xb42
  40826c:	sub	x2, x29, #0x30
  408270:	sub	x3, x29, #0x40
  408274:	bl	402830 <sd_journal_get_data@plt>
  408278:	stur	w0, [x29, #-68]
  40827c:	ldur	w8, [x29, #-68]
  408280:	mov	w9, #0xfffffffe            	// #-2
  408284:	cmp	w8, w9
  408288:	b.ne	408318 <safe_fork_full@plt+0x57e8>  // b.any
  40828c:	mov	w8, #0x3                   	// #3
  408290:	stur	w8, [x29, #-148]
  408294:	ldur	w8, [x29, #-68]
  408298:	stur	w8, [x29, #-152]
  40829c:	stur	wzr, [x29, #-156]
  4082a0:	ldur	w0, [x29, #-156]
  4082a4:	bl	4025f0 <log_get_max_level_realm@plt>
  4082a8:	ldur	w8, [x29, #-148]
  4082ac:	and	w8, w8, #0x7
  4082b0:	cmp	w0, w8
  4082b4:	b.lt	4082e8 <safe_fork_full@plt+0x57b8>  // b.tstop
  4082b8:	ldur	w8, [x29, #-156]
  4082bc:	ldur	w9, [x29, #-148]
  4082c0:	orr	w0, w9, w8, lsl #10
  4082c4:	ldur	w1, [x29, #-152]
  4082c8:	ldr	x2, [sp, #80]
  4082cc:	mov	w3, #0x2fe                 	// #766
  4082d0:	ldr	x4, [sp, #72]
  4082d4:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  4082d8:	add	x5, x5, #0x88
  4082dc:	bl	402600 <log_internal_realm@plt>
  4082e0:	str	w0, [sp, #48]
  4082e4:	b	4082fc <safe_fork_full@plt+0x57cc>
  4082e8:	ldur	w0, [x29, #-152]
  4082ec:	bl	402610 <abs@plt>
  4082f0:	mov	w8, wzr
  4082f4:	subs	w8, w8, w0, uxtb
  4082f8:	str	w8, [sp, #48]
  4082fc:	ldr	w8, [sp, #48]
  408300:	stur	w8, [x29, #-160]
  408304:	ldur	w8, [x29, #-160]
  408308:	stur	w8, [x29, #-4]
  40830c:	mov	w8, #0x1                   	// #1
  408310:	stur	w8, [x29, #-92]
  408314:	b	408b70 <safe_fork_full@plt+0x6040>
  408318:	ldur	w8, [x29, #-68]
  40831c:	cmp	w8, #0x0
  408320:	cset	w8, ge  // ge = tcont
  408324:	tbnz	w8, #0, 4083b4 <safe_fork_full@plt+0x5884>
  408328:	mov	w8, #0x3                   	// #3
  40832c:	stur	w8, [x29, #-164]
  408330:	ldur	w8, [x29, #-68]
  408334:	stur	w8, [x29, #-168]
  408338:	stur	wzr, [x29, #-172]
  40833c:	ldur	w0, [x29, #-172]
  408340:	bl	4025f0 <log_get_max_level_realm@plt>
  408344:	ldur	w8, [x29, #-164]
  408348:	and	w8, w8, #0x7
  40834c:	cmp	w0, w8
  408350:	b.lt	408384 <safe_fork_full@plt+0x5854>  // b.tstop
  408354:	ldur	w8, [x29, #-172]
  408358:	ldur	w9, [x29, #-164]
  40835c:	orr	w0, w9, w8, lsl #10
  408360:	ldur	w1, [x29, #-168]
  408364:	ldr	x2, [sp, #80]
  408368:	mov	w3, #0x300                 	// #768
  40836c:	ldr	x4, [sp, #72]
  408370:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408374:	add	x5, x5, #0xe8
  408378:	bl	402600 <log_internal_realm@plt>
  40837c:	str	w0, [sp, #44]
  408380:	b	408398 <safe_fork_full@plt+0x5868>
  408384:	ldur	w0, [x29, #-168]
  408388:	bl	402610 <abs@plt>
  40838c:	mov	w8, wzr
  408390:	subs	w8, w8, w0, uxtb
  408394:	str	w8, [sp, #44]
  408398:	ldr	w8, [sp, #44]
  40839c:	stur	w8, [x29, #-176]
  4083a0:	ldur	w8, [x29, #-176]
  4083a4:	stur	w8, [x29, #-4]
  4083a8:	mov	w8, #0x1                   	// #1
  4083ac:	stur	w8, [x29, #-92]
  4083b0:	b	408b70 <safe_fork_full@plt+0x6040>
  4083b4:	ldur	x8, [x29, #-32]
  4083b8:	cbz	x8, 4085dc <safe_fork_full@plt+0x5aac>
  4083bc:	sub	x0, x29, #0xb8
  4083c0:	bl	402aa0 <var_tmp_dir@plt>
  4083c4:	stur	w0, [x29, #-68]
  4083c8:	ldur	w8, [x29, #-68]
  4083cc:	cmp	w8, #0x0
  4083d0:	cset	w8, ge  // ge = tcont
  4083d4:	tbnz	w8, #0, 408464 <safe_fork_full@plt+0x5934>
  4083d8:	mov	w8, #0x3                   	// #3
  4083dc:	stur	w8, [x29, #-188]
  4083e0:	ldur	w8, [x29, #-68]
  4083e4:	stur	w8, [x29, #-192]
  4083e8:	stur	wzr, [x29, #-196]
  4083ec:	ldur	w0, [x29, #-196]
  4083f0:	bl	4025f0 <log_get_max_level_realm@plt>
  4083f4:	ldur	w8, [x29, #-188]
  4083f8:	and	w8, w8, #0x7
  4083fc:	cmp	w0, w8
  408400:	b.lt	408434 <safe_fork_full@plt+0x5904>  // b.tstop
  408404:	ldur	w8, [x29, #-196]
  408408:	ldur	w9, [x29, #-188]
  40840c:	orr	w0, w9, w8, lsl #10
  408410:	ldur	w1, [x29, #-192]
  408414:	ldr	x2, [sp, #80]
  408418:	mov	w3, #0x30a                 	// #778
  40841c:	ldr	x4, [sp, #72]
  408420:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408424:	add	x5, x5, #0x10e
  408428:	bl	402600 <log_internal_realm@plt>
  40842c:	str	w0, [sp, #40]
  408430:	b	408448 <safe_fork_full@plt+0x5918>
  408434:	ldur	w0, [x29, #-192]
  408438:	bl	402610 <abs@plt>
  40843c:	mov	w8, wzr
  408440:	subs	w8, w8, w0, uxtb
  408444:	str	w8, [sp, #40]
  408448:	ldr	w8, [sp, #40]
  40844c:	stur	w8, [x29, #-200]
  408450:	ldur	w8, [x29, #-200]
  408454:	stur	w8, [x29, #-4]
  408458:	mov	w8, #0x1                   	// #1
  40845c:	stur	w8, [x29, #-92]
  408460:	b	408b70 <safe_fork_full@plt+0x6040>
  408464:	ldur	x0, [x29, #-184]
  408468:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  40846c:	add	x1, x1, #0x13d
  408470:	mov	x8, #0xffffffffffffffff    	// #-1
  408474:	mov	x2, x8
  408478:	bl	402ab0 <path_join_internal@plt>
  40847c:	stur	x0, [x29, #-88]
  408480:	ldur	x8, [x29, #-88]
  408484:	cbnz	x8, 4084b0 <safe_fork_full@plt+0x5980>
  408488:	mov	w8, wzr
  40848c:	mov	w0, w8
  408490:	ldr	x1, [sp, #80]
  408494:	mov	w2, #0x30e                 	// #782
  408498:	ldr	x3, [sp, #72]
  40849c:	bl	402710 <log_oom_internal@plt>
  4084a0:	stur	w0, [x29, #-4]
  4084a4:	mov	w8, #0x1                   	// #1
  4084a8:	stur	w8, [x29, #-92]
  4084ac:	b	408b70 <safe_fork_full@plt+0x6040>
  4084b0:	ldur	x0, [x29, #-88]
  4084b4:	bl	402ac0 <mkostemp_safe@plt>
  4084b8:	stur	w0, [x29, #-76]
  4084bc:	ldur	w8, [x29, #-76]
  4084c0:	cmp	w8, #0x0
  4084c4:	cset	w8, ge  // ge = tcont
  4084c8:	tbnz	w8, #0, 408558 <safe_fork_full@plt+0x5a28>
  4084cc:	mov	w8, #0x3                   	// #3
  4084d0:	stur	w8, [x29, #-204]
  4084d4:	ldur	w8, [x29, #-76]
  4084d8:	stur	w8, [x29, #-208]
  4084dc:	stur	wzr, [x29, #-212]
  4084e0:	ldur	w0, [x29, #-212]
  4084e4:	bl	4025f0 <log_get_max_level_realm@plt>
  4084e8:	ldur	w8, [x29, #-204]
  4084ec:	and	w8, w8, #0x7
  4084f0:	cmp	w0, w8
  4084f4:	b.lt	408528 <safe_fork_full@plt+0x59f8>  // b.tstop
  4084f8:	ldur	w8, [x29, #-212]
  4084fc:	ldur	w9, [x29, #-204]
  408500:	orr	w0, w9, w8, lsl #10
  408504:	ldur	w1, [x29, #-208]
  408508:	ldr	x2, [sp, #80]
  40850c:	mov	w3, #0x312                 	// #786
  408510:	ldr	x4, [sp, #72]
  408514:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408518:	add	x5, x5, #0x14d
  40851c:	bl	402600 <log_internal_realm@plt>
  408520:	str	w0, [sp, #36]
  408524:	b	40853c <safe_fork_full@plt+0x5a0c>
  408528:	ldur	w0, [x29, #-208]
  40852c:	bl	402610 <abs@plt>
  408530:	mov	w8, wzr
  408534:	subs	w8, w8, w0, uxtb
  408538:	str	w8, [sp, #36]
  40853c:	ldr	w8, [sp, #36]
  408540:	stur	w8, [x29, #-216]
  408544:	ldur	w8, [x29, #-216]
  408548:	stur	w8, [x29, #-4]
  40854c:	mov	w8, #0x1                   	// #1
  408550:	stur	w8, [x29, #-92]
  408554:	b	408b70 <safe_fork_full@plt+0x6040>
  408558:	mov	w8, #0x7                   	// #7
  40855c:	stur	w8, [x29, #-220]
  408560:	str	wzr, [sp, #224]
  408564:	str	wzr, [sp, #220]
  408568:	ldr	w0, [sp, #220]
  40856c:	bl	4025f0 <log_get_max_level_realm@plt>
  408570:	ldur	w8, [x29, #-220]
  408574:	and	w8, w8, #0x7
  408578:	cmp	w0, w8
  40857c:	b.lt	4085b4 <safe_fork_full@plt+0x5a84>  // b.tstop
  408580:	ldr	w8, [sp, #220]
  408584:	ldur	w9, [x29, #-220]
  408588:	orr	w0, w9, w8, lsl #10
  40858c:	ldr	w1, [sp, #224]
  408590:	ldur	x6, [x29, #-88]
  408594:	ldr	x2, [sp, #80]
  408598:	mov	w3, #0x313                 	// #787
  40859c:	ldr	x4, [sp, #72]
  4085a0:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  4085a4:	add	x5, x5, #0x171
  4085a8:	bl	402600 <log_internal_realm@plt>
  4085ac:	str	w0, [sp, #32]
  4085b0:	b	4085c8 <safe_fork_full@plt+0x5a98>
  4085b4:	ldr	w0, [sp, #224]
  4085b8:	bl	402610 <abs@plt>
  4085bc:	mov	w8, wzr
  4085c0:	subs	w8, w8, w0, uxtb
  4085c4:	str	w8, [sp, #32]
  4085c8:	ldr	w8, [sp, #32]
  4085cc:	str	w8, [sp, #216]
  4085d0:	ldur	w8, [x29, #-76]
  4085d4:	stur	w8, [x29, #-72]
  4085d8:	b	40869c <safe_fork_full@plt+0x5b6c>
  4085dc:	ldur	x8, [x29, #-24]
  4085e0:	cbnz	x8, 408690 <safe_fork_full@plt+0x5b60>
  4085e4:	bl	402ad0 <on_tty@plt>
  4085e8:	tbnz	w0, #0, 4085f0 <safe_fork_full@plt+0x5ac0>
  4085ec:	b	408680 <safe_fork_full@plt+0x5b50>
  4085f0:	mov	w8, #0x3                   	// #3
  4085f4:	str	w8, [sp, #212]
  4085f8:	mov	w8, #0x19                  	// #25
  4085fc:	movk	w8, #0x4000, lsl #16
  408600:	str	w8, [sp, #208]
  408604:	str	wzr, [sp, #204]
  408608:	ldr	w0, [sp, #204]
  40860c:	bl	4025f0 <log_get_max_level_realm@plt>
  408610:	ldr	w8, [sp, #212]
  408614:	and	w8, w8, #0x7
  408618:	cmp	w0, w8
  40861c:	b.lt	408650 <safe_fork_full@plt+0x5b20>  // b.tstop
  408620:	ldr	w8, [sp, #204]
  408624:	ldr	w9, [sp, #212]
  408628:	orr	w0, w9, w8, lsl #10
  40862c:	ldr	w1, [sp, #208]
  408630:	ldr	x2, [sp, #80]
  408634:	mov	w3, #0x322                 	// #802
  408638:	ldr	x4, [sp, #72]
  40863c:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408640:	add	x5, x5, #0x18b
  408644:	bl	402600 <log_internal_realm@plt>
  408648:	str	w0, [sp, #28]
  40864c:	b	408664 <safe_fork_full@plt+0x5b34>
  408650:	ldr	w0, [sp, #208]
  408654:	bl	402610 <abs@plt>
  408658:	mov	w8, wzr
  40865c:	subs	w8, w8, w0, uxtb
  408660:	str	w8, [sp, #28]
  408664:	ldr	w8, [sp, #28]
  408668:	str	w8, [sp, #200]
  40866c:	ldr	w8, [sp, #200]
  408670:	stur	w8, [x29, #-4]
  408674:	mov	w8, #0x1                   	// #1
  408678:	stur	w8, [x29, #-92]
  40867c:	b	408b70 <safe_fork_full@plt+0x6040>
  408680:	adrp	x8, 420000 <safe_fork_full@plt+0x1d4d0>
  408684:	add	x8, x8, #0xa8
  408688:	ldr	x8, [x8]
  40868c:	stur	x8, [x29, #-24]
  408690:	ldur	x0, [x29, #-24]
  408694:	bl	402ae0 <fileno@plt>
  408698:	stur	w0, [x29, #-72]
  40869c:	ldur	x8, [x29, #-56]
  4086a0:	cbz	x8, 408838 <safe_fork_full@plt+0x5d08>
  4086a4:	ldur	x0, [x29, #-56]
  4086a8:	mov	w1, #0x80000               	// #524288
  4086ac:	bl	402af0 <open64@plt>
  4086b0:	str	w0, [sp, #196]
  4086b4:	ldr	w8, [sp, #196]
  4086b8:	cmp	w8, #0x0
  4086bc:	cset	w8, ge  // ge = tcont
  4086c0:	tbnz	w8, #0, 408758 <safe_fork_full@plt+0x5c28>
  4086c4:	mov	w8, #0x3                   	// #3
  4086c8:	str	w8, [sp, #192]
  4086cc:	bl	4027f0 <__errno_location@plt>
  4086d0:	ldr	w8, [x0]
  4086d4:	str	w8, [sp, #188]
  4086d8:	str	wzr, [sp, #184]
  4086dc:	ldr	w0, [sp, #184]
  4086e0:	bl	4025f0 <log_get_max_level_realm@plt>
  4086e4:	ldr	w8, [sp, #192]
  4086e8:	and	w8, w8, #0x7
  4086ec:	cmp	w0, w8
  4086f0:	b.lt	408728 <safe_fork_full@plt+0x5bf8>  // b.tstop
  4086f4:	ldr	w8, [sp, #184]
  4086f8:	ldr	w9, [sp, #192]
  4086fc:	orr	w0, w9, w8, lsl #10
  408700:	ldr	w1, [sp, #188]
  408704:	ldur	x6, [x29, #-56]
  408708:	ldr	x2, [sp, #80]
  40870c:	mov	w3, #0x32f                 	// #815
  408710:	ldr	x4, [sp, #72]
  408714:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408718:	add	x5, x5, #0x1d5
  40871c:	bl	402600 <log_internal_realm@plt>
  408720:	str	w0, [sp, #24]
  408724:	b	40873c <safe_fork_full@plt+0x5c0c>
  408728:	ldr	w0, [sp, #188]
  40872c:	bl	402610 <abs@plt>
  408730:	mov	w8, wzr
  408734:	subs	w8, w8, w0, uxtb
  408738:	str	w8, [sp, #24]
  40873c:	ldr	w8, [sp, #24]
  408740:	str	w8, [sp, #180]
  408744:	ldr	w8, [sp, #180]
  408748:	stur	w8, [x29, #-68]
  40874c:	mov	w8, #0x8                   	// #8
  408750:	stur	w8, [x29, #-92]
  408754:	b	40880c <safe_fork_full@plt+0x5cdc>
  408758:	ldur	x0, [x29, #-56]
  40875c:	ldr	w1, [sp, #196]
  408760:	ldur	w2, [x29, #-72]
  408764:	mov	x3, #0xffffffffffffffff    	// #-1
  408768:	bl	402b00 <decompress_stream@plt>
  40876c:	stur	w0, [x29, #-68]
  408770:	ldur	w8, [x29, #-68]
  408774:	cmp	w8, #0x0
  408778:	cset	w8, ge  // ge = tcont
  40877c:	tbnz	w8, #0, 408808 <safe_fork_full@plt+0x5cd8>
  408780:	mov	w8, #0x3                   	// #3
  408784:	str	w8, [sp, #176]
  408788:	ldur	w8, [x29, #-68]
  40878c:	str	w8, [sp, #172]
  408790:	str	wzr, [sp, #168]
  408794:	ldr	w0, [sp, #168]
  408798:	bl	4025f0 <log_get_max_level_realm@plt>
  40879c:	ldr	w8, [sp, #176]
  4087a0:	and	w8, w8, #0x7
  4087a4:	cmp	w0, w8
  4087a8:	b.lt	4087e0 <safe_fork_full@plt+0x5cb0>  // b.tstop
  4087ac:	ldr	w8, [sp, #168]
  4087b0:	ldr	w9, [sp, #176]
  4087b4:	orr	w0, w9, w8, lsl #10
  4087b8:	ldr	w1, [sp, #172]
  4087bc:	ldur	x6, [x29, #-56]
  4087c0:	ldr	x2, [sp, #80]
  4087c4:	mov	w3, #0x335                 	// #821
  4087c8:	ldr	x4, [sp, #72]
  4087cc:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  4087d0:	add	x5, x5, #0x1eb
  4087d4:	bl	402600 <log_internal_realm@plt>
  4087d8:	str	w0, [sp, #20]
  4087dc:	b	4087f4 <safe_fork_full@plt+0x5cc4>
  4087e0:	ldr	w0, [sp, #172]
  4087e4:	bl	402610 <abs@plt>
  4087e8:	mov	w8, wzr
  4087ec:	subs	w8, w8, w0, uxtb
  4087f0:	str	w8, [sp, #20]
  4087f4:	ldr	w8, [sp, #20]
  4087f8:	str	w8, [sp, #164]
  4087fc:	mov	w8, #0x8                   	// #8
  408800:	stur	w8, [x29, #-92]
  408804:	b	40880c <safe_fork_full@plt+0x5cdc>
  408808:	stur	wzr, [x29, #-92]
  40880c:	add	x0, sp, #0xc4
  408810:	bl	408b94 <safe_fork_full@plt+0x6064>
  408814:	ldur	w8, [x29, #-92]
  408818:	str	w8, [sp, #16]
  40881c:	cbz	w8, 408834 <safe_fork_full@plt+0x5d04>
  408820:	b	408824 <safe_fork_full@plt+0x5cf4>
  408824:	ldr	w8, [sp, #16]
  408828:	cmp	w8, #0x8
  40882c:	b.eq	408ad4 <safe_fork_full@plt+0x5fa4>  // b.none
  408830:	b	408b70 <safe_fork_full@plt+0x6040>
  408834:	b	408aa4 <safe_fork_full@plt+0x5f74>
  408838:	ldur	x0, [x29, #-16]
  40883c:	mov	x8, xzr
  408840:	mov	x1, x8
  408844:	bl	402770 <sd_journal_set_data_threshold@plt>
  408848:	ldur	x8, [x29, #-16]
  40884c:	mov	x0, x8
  408850:	adrp	x1, 409000 <safe_fork_full@plt+0x64d0>
  408854:	add	x1, x1, #0xb42
  408858:	sub	x2, x29, #0x30
  40885c:	sub	x3, x29, #0x40
  408860:	bl	402830 <sd_journal_get_data@plt>
  408864:	stur	w0, [x29, #-68]
  408868:	ldur	w9, [x29, #-68]
  40886c:	cmp	w9, #0x0
  408870:	cset	w9, ge  // ge = tcont
  408874:	tbnz	w9, #0, 408904 <safe_fork_full@plt+0x5dd4>
  408878:	mov	w8, #0x3                   	// #3
  40887c:	str	w8, [sp, #148]
  408880:	ldur	w8, [x29, #-68]
  408884:	str	w8, [sp, #144]
  408888:	str	wzr, [sp, #140]
  40888c:	ldr	w0, [sp, #140]
  408890:	bl	4025f0 <log_get_max_level_realm@plt>
  408894:	ldr	w8, [sp, #148]
  408898:	and	w8, w8, #0x7
  40889c:	cmp	w0, w8
  4088a0:	b.lt	4088d4 <safe_fork_full@plt+0x5da4>  // b.tstop
  4088a4:	ldr	w8, [sp, #140]
  4088a8:	ldr	w9, [sp, #148]
  4088ac:	orr	w0, w9, w8, lsl #10
  4088b0:	ldr	w1, [sp, #144]
  4088b4:	ldr	x2, [sp, #80]
  4088b8:	mov	w3, #0x345                 	// #837
  4088bc:	ldr	x4, [sp, #72]
  4088c0:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  4088c4:	add	x5, x5, #0xe8
  4088c8:	bl	402600 <log_internal_realm@plt>
  4088cc:	str	w0, [sp, #12]
  4088d0:	b	4088e8 <safe_fork_full@plt+0x5db8>
  4088d4:	ldr	w0, [sp, #144]
  4088d8:	bl	402610 <abs@plt>
  4088dc:	mov	w8, wzr
  4088e0:	subs	w8, w8, w0, uxtb
  4088e4:	str	w8, [sp, #12]
  4088e8:	ldr	w8, [sp, #12]
  4088ec:	str	w8, [sp, #136]
  4088f0:	ldr	w8, [sp, #136]
  4088f4:	stur	w8, [x29, #-4]
  4088f8:	mov	w8, #0x1                   	// #1
  4088fc:	stur	w8, [x29, #-92]
  408900:	b	408b70 <safe_fork_full@plt+0x6040>
  408904:	ldur	x8, [x29, #-64]
  408908:	cmp	x8, #0x9
  40890c:	cset	w9, cs  // cs = hs, nlast
  408910:	mov	w10, #0x1                   	// #1
  408914:	eor	w9, w9, #0x1
  408918:	eor	w9, w9, w10
  40891c:	eor	w9, w9, w10
  408920:	and	w9, w9, #0x1
  408924:	mov	w0, w9
  408928:	sxtw	x8, w0
  40892c:	cbz	x8, 408950 <safe_fork_full@plt+0x5e20>
  408930:	mov	w8, wzr
  408934:	mov	w0, w8
  408938:	adrp	x1, 40a000 <safe_fork_full@plt+0x74d0>
  40893c:	add	x1, x1, #0x207
  408940:	ldr	x2, [sp, #80]
  408944:	mov	w3, #0x347                 	// #839
  408948:	ldr	x4, [sp, #64]
  40894c:	bl	4025c0 <log_assert_failed_realm@plt>
  408950:	ldur	x8, [x29, #-48]
  408954:	add	x8, x8, #0x9
  408958:	stur	x8, [x29, #-48]
  40895c:	ldur	x8, [x29, #-64]
  408960:	subs	x8, x8, #0x9
  408964:	stur	x8, [x29, #-64]
  408968:	ldur	w0, [x29, #-72]
  40896c:	ldur	x1, [x29, #-48]
  408970:	ldur	x2, [x29, #-64]
  408974:	bl	402b10 <write@plt>
  408978:	str	x0, [sp, #152]
  40897c:	ldr	x8, [sp, #152]
  408980:	cmp	x8, #0x0
  408984:	cset	w9, ge  // ge = tcont
  408988:	tbnz	w9, #0, 408a14 <safe_fork_full@plt+0x5ee4>
  40898c:	mov	w8, #0x3                   	// #3
  408990:	str	w8, [sp, #132]
  408994:	bl	4027f0 <__errno_location@plt>
  408998:	ldr	w8, [x0]
  40899c:	str	w8, [sp, #128]
  4089a0:	str	wzr, [sp, #124]
  4089a4:	ldr	w0, [sp, #124]
  4089a8:	bl	4025f0 <log_get_max_level_realm@plt>
  4089ac:	ldr	w8, [sp, #132]
  4089b0:	and	w8, w8, #0x7
  4089b4:	cmp	w0, w8
  4089b8:	b.lt	4089ec <safe_fork_full@plt+0x5ebc>  // b.tstop
  4089bc:	ldr	w8, [sp, #124]
  4089c0:	ldr	w9, [sp, #132]
  4089c4:	orr	w0, w9, w8, lsl #10
  4089c8:	ldr	w1, [sp, #128]
  4089cc:	ldr	x2, [sp, #80]
  4089d0:	mov	w3, #0x34d                 	// #845
  4089d4:	ldr	x4, [sp, #72]
  4089d8:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  4089dc:	add	x5, x5, #0x210
  4089e0:	bl	402600 <log_internal_realm@plt>
  4089e4:	str	w0, [sp, #8]
  4089e8:	b	408a00 <safe_fork_full@plt+0x5ed0>
  4089ec:	ldr	w0, [sp, #128]
  4089f0:	bl	402610 <abs@plt>
  4089f4:	mov	w8, wzr
  4089f8:	subs	w8, w8, w0, uxtb
  4089fc:	str	w8, [sp, #8]
  408a00:	ldr	w8, [sp, #8]
  408a04:	str	w8, [sp, #120]
  408a08:	ldr	w8, [sp, #120]
  408a0c:	stur	w8, [x29, #-68]
  408a10:	b	408ad4 <safe_fork_full@plt+0x5fa4>
  408a14:	ldr	x8, [sp, #152]
  408a18:	ldur	x9, [x29, #-64]
  408a1c:	cmp	x8, x9
  408a20:	b.eq	408aa4 <safe_fork_full@plt+0x5f74>  // b.none
  408a24:	mov	w8, #0x3                   	// #3
  408a28:	str	w8, [sp, #116]
  408a2c:	str	wzr, [sp, #112]
  408a30:	str	wzr, [sp, #108]
  408a34:	ldr	w0, [sp, #108]
  408a38:	bl	4025f0 <log_get_max_level_realm@plt>
  408a3c:	ldr	w8, [sp, #116]
  408a40:	and	w8, w8, #0x7
  408a44:	cmp	w0, w8
  408a48:	b.lt	408a7c <safe_fork_full@plt+0x5f4c>  // b.tstop
  408a4c:	ldr	w8, [sp, #108]
  408a50:	ldr	w9, [sp, #116]
  408a54:	orr	w0, w9, w8, lsl #10
  408a58:	ldr	w1, [sp, #112]
  408a5c:	ldr	x2, [sp, #80]
  408a60:	mov	w3, #0x351                 	// #849
  408a64:	ldr	x4, [sp, #72]
  408a68:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408a6c:	add	x5, x5, #0x22b
  408a70:	bl	402600 <log_internal_realm@plt>
  408a74:	str	w0, [sp, #4]
  408a78:	b	408a90 <safe_fork_full@plt+0x5f60>
  408a7c:	ldr	w0, [sp, #112]
  408a80:	bl	402610 <abs@plt>
  408a84:	mov	w8, wzr
  408a88:	subs	w8, w8, w0, uxtb
  408a8c:	str	w8, [sp, #4]
  408a90:	ldr	w8, [sp, #4]
  408a94:	str	w8, [sp, #104]
  408a98:	mov	w8, #0xfffffffb            	// #-5
  408a9c:	stur	w8, [x29, #-68]
  408aa0:	b	408ad4 <safe_fork_full@plt+0x5fa4>
  408aa4:	ldur	x8, [x29, #-88]
  408aa8:	cbz	x8, 408ac4 <safe_fork_full@plt+0x5f94>
  408aac:	ldur	x8, [x29, #-88]
  408ab0:	ldur	x9, [x29, #-32]
  408ab4:	str	x8, [x9]
  408ab8:	ldur	x8, [x29, #-40]
  408abc:	mov	w10, #0x1                   	// #1
  408ac0:	strb	w10, [x8]
  408ac4:	stur	wzr, [x29, #-4]
  408ac8:	mov	w8, #0x1                   	// #1
  408acc:	stur	w8, [x29, #-92]
  408ad0:	b	408b70 <safe_fork_full@plt+0x6040>
  408ad4:	ldur	x8, [x29, #-88]
  408ad8:	cbz	x8, 408b60 <safe_fork_full@plt+0x6030>
  408adc:	ldur	x0, [x29, #-88]
  408ae0:	bl	4028e0 <unlink@plt>
  408ae4:	mov	w8, #0x7                   	// #7
  408ae8:	str	w8, [sp, #100]
  408aec:	str	wzr, [sp, #96]
  408af0:	str	wzr, [sp, #92]
  408af4:	ldr	w8, [sp, #92]
  408af8:	mov	w0, w8
  408afc:	bl	4025f0 <log_get_max_level_realm@plt>
  408b00:	ldr	w8, [sp, #100]
  408b04:	and	w8, w8, #0x7
  408b08:	cmp	w0, w8
  408b0c:	b.lt	408b44 <safe_fork_full@plt+0x6014>  // b.tstop
  408b10:	ldr	w8, [sp, #92]
  408b14:	ldr	w9, [sp, #100]
  408b18:	orr	w0, w9, w8, lsl #10
  408b1c:	ldr	w1, [sp, #96]
  408b20:	ldur	x6, [x29, #-88]
  408b24:	ldr	x2, [sp, #80]
  408b28:	mov	w3, #0x360                 	// #864
  408b2c:	ldr	x4, [sp, #72]
  408b30:	adrp	x5, 40a000 <safe_fork_full@plt+0x74d0>
  408b34:	add	x5, x5, #0x242
  408b38:	bl	402600 <log_internal_realm@plt>
  408b3c:	str	w0, [sp]
  408b40:	b	408b58 <safe_fork_full@plt+0x6028>
  408b44:	ldr	w0, [sp, #96]
  408b48:	bl	402610 <abs@plt>
  408b4c:	mov	w8, wzr
  408b50:	subs	w8, w8, w0, uxtb
  408b54:	str	w8, [sp]
  408b58:	ldr	w8, [sp]
  408b5c:	str	w8, [sp, #88]
  408b60:	ldur	w8, [x29, #-68]
  408b64:	stur	w8, [x29, #-4]
  408b68:	mov	w8, #0x1                   	// #1
  408b6c:	stur	w8, [x29, #-92]
  408b70:	sub	x0, x29, #0x4c
  408b74:	bl	408b94 <safe_fork_full@plt+0x6064>
  408b78:	sub	x0, x29, #0x38
  408b7c:	bl	403f94 <safe_fork_full@plt+0x1464>
  408b80:	ldur	w0, [x29, #-4]
  408b84:	ldr	x28, [sp, #464]
  408b88:	ldp	x29, x30, [sp, #448]
  408b8c:	add	sp, sp, #0x1e0
  408b90:	ret
  408b94:	sub	sp, sp, #0x20
  408b98:	stp	x29, x30, [sp, #16]
  408b9c:	add	x29, sp, #0x10
  408ba0:	str	x0, [sp, #8]
  408ba4:	ldr	x8, [sp, #8]
  408ba8:	ldr	w0, [x8]
  408bac:	bl	402b20 <safe_close@plt>
  408bb0:	ldp	x29, x30, [sp, #16]
  408bb4:	add	sp, sp, #0x20
  408bb8:	ret
  408bbc:	sub	sp, sp, #0x30
  408bc0:	stp	x29, x30, [sp, #32]
  408bc4:	add	x29, sp, #0x20
  408bc8:	mov	x8, xzr
  408bcc:	mov	x3, x8
  408bd0:	stur	x0, [x29, #-8]
  408bd4:	stur	w1, [x29, #-12]
  408bd8:	str	x2, [sp, #8]
  408bdc:	ldur	x0, [x29, #-8]
  408be0:	ldur	w9, [x29, #-12]
  408be4:	ldr	x4, [sp, #8]
  408be8:	mov	x1, x3
  408bec:	mov	x2, x8
  408bf0:	mov	w3, w9
  408bf4:	bl	402b30 <safe_fork_full@plt>
  408bf8:	ldp	x29, x30, [sp, #32]
  408bfc:	add	sp, sp, #0x30
  408c00:	ret
  408c04:	sub	sp, sp, #0x10
  408c08:	str	x0, [sp, #8]
  408c0c:	str	x1, [sp]
  408c10:	ldr	x8, [sp, #8]
  408c14:	ldr	x9, [sp]
  408c18:	add	x8, x8, x9
  408c1c:	subs	x8, x8, #0x1
  408c20:	ldr	x9, [sp]
  408c24:	subs	x9, x9, #0x1
  408c28:	bic	x0, x8, x9
  408c2c:	add	sp, sp, #0x10
  408c30:	ret
  408c34:	udf	#0
  408c38:	stp	x29, x30, [sp, #-64]!
  408c3c:	mov	x29, sp
  408c40:	stp	x19, x20, [sp, #16]
  408c44:	adrp	x20, 41f000 <safe_fork_full@plt+0x1c4d0>
  408c48:	add	x20, x20, #0xa68
  408c4c:	stp	x21, x22, [sp, #32]
  408c50:	adrp	x21, 41f000 <safe_fork_full@plt+0x1c4d0>
  408c54:	add	x21, x21, #0xa60
  408c58:	sub	x20, x20, x21
  408c5c:	mov	w22, w0
  408c60:	stp	x23, x24, [sp, #48]
  408c64:	mov	x23, x1
  408c68:	mov	x24, x2
  408c6c:	bl	4024a8 <__libc_start_main@plt-0x38>
  408c70:	cmp	xzr, x20, asr #3
  408c74:	b.eq	408ca0 <safe_fork_full@plt+0x6170>  // b.none
  408c78:	asr	x20, x20, #3
  408c7c:	mov	x19, #0x0                   	// #0
  408c80:	ldr	x3, [x21, x19, lsl #3]
  408c84:	mov	x2, x24
  408c88:	add	x19, x19, #0x1
  408c8c:	mov	x1, x23
  408c90:	mov	w0, w22
  408c94:	blr	x3
  408c98:	cmp	x20, x19
  408c9c:	b.ne	408c80 <safe_fork_full@plt+0x6150>  // b.any
  408ca0:	ldp	x19, x20, [sp, #16]
  408ca4:	ldp	x21, x22, [sp, #32]
  408ca8:	ldp	x23, x24, [sp, #48]
  408cac:	ldp	x29, x30, [sp], #64
  408cb0:	ret
  408cb4:	nop
  408cb8:	ret

Disassembly of section .fini:

0000000000408cbc <.fini>:
  408cbc:	stp	x29, x30, [sp, #-16]!
  408cc0:	mov	x29, sp
  408cc4:	ldp	x29, x30, [sp], #16
  408cc8:	ret
