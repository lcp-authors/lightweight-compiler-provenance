
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//zlib.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c90 <.init>:
    1c90:	stp	x29, x30, [sp, #-16]!
    1c94:	mov	x29, sp
    1c98:	bl	2020 <PyThread_free_lock@plt+0x10>
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret

Disassembly of section .plt:

0000000000001cb0 <memcpy@plt-0x20>:
    1cb0:	stp	x16, x30, [sp, #-16]!
    1cb4:	adrp	x16, 17000 <PyInit_zlib@@Base+0x11bd0>
    1cb8:	ldr	x17, [x16, #4088]
    1cbc:	add	x16, x16, #0xff8
    1cc0:	br	x17
    1cc4:	nop
    1cc8:	nop
    1ccc:	nop

0000000000001cd0 <memcpy@plt>:
    1cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16]
    1cd8:	add	x16, x16, #0x0
    1cdc:	br	x17

0000000000001ce0 <PyModule_AddIntConstant@plt>:
    1ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #8]
    1ce8:	add	x16, x16, #0x8
    1cec:	br	x17

0000000000001cf0 <_PyBytes_Resize@plt>:
    1cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #16]
    1cf8:	add	x16, x16, #0x10
    1cfc:	br	x17

0000000000001d00 <inflate@plt>:
    1d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #24]
    1d08:	add	x16, x16, #0x18
    1d0c:	br	x17

0000000000001d10 <PyEval_RestoreThread@plt>:
    1d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #32]
    1d18:	add	x16, x16, #0x20
    1d1c:	br	x17

0000000000001d20 <PyBuffer_Release@plt>:
    1d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #40]
    1d28:	add	x16, x16, #0x28
    1d2c:	br	x17

0000000000001d30 <__cxa_finalize@plt>:
    1d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #48]
    1d38:	add	x16, x16, #0x30
    1d3c:	br	x17

0000000000001d40 <PyMem_RawMalloc@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #56]
    1d48:	add	x16, x16, #0x38
    1d4c:	br	x17

0000000000001d50 <crc32@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #64]
    1d58:	add	x16, x16, #0x40
    1d5c:	br	x17

0000000000001d60 <PyBuffer_IsContiguous@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #72]
    1d68:	add	x16, x16, #0x48
    1d6c:	br	x17

0000000000001d70 <PyBytes_FromStringAndSize@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #80]
    1d78:	add	x16, x16, #0x50
    1d7c:	br	x17

0000000000001d80 <_Py_Dealloc@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #88]
    1d88:	add	x16, x16, #0x58
    1d8c:	br	x17

0000000000001d90 <PyErr_NoMemory@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #96]
    1d98:	add	x16, x16, #0x60
    1d9c:	br	x17

0000000000001da0 <PyThread_acquire_lock@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #104]
    1da8:	add	x16, x16, #0x68
    1dac:	br	x17

0000000000001db0 <_PyArg_UnpackKeywords@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #112]
    1db8:	add	x16, x16, #0x70
    1dbc:	br	x17

0000000000001dc0 <PyErr_SetString@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #120]
    1dc8:	add	x16, x16, #0x78
    1dcc:	br	x17

0000000000001dd0 <deflate@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #128]
    1dd8:	add	x16, x16, #0x80
    1ddc:	br	x17

0000000000001de0 <_PyLong_FromNbIndexOrNbInt@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #136]
    1de8:	add	x16, x16, #0x88
    1dec:	br	x17

0000000000001df0 <PyObject_Free@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #144]
    1df8:	add	x16, x16, #0x90
    1dfc:	br	x17

0000000000001e00 <deflateInit2_@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #152]
    1e08:	add	x16, x16, #0x98
    1e0c:	br	x17

0000000000001e10 <PyType_Ready@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #160]
    1e18:	add	x16, x16, #0xa0
    1e1c:	br	x17

0000000000001e20 <PyLong_AsSsize_t@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #168]
    1e28:	add	x16, x16, #0xa8
    1e2c:	br	x17

0000000000001e30 <_PyArg_BadArgument@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #176]
    1e38:	add	x16, x16, #0xb0
    1e3c:	br	x17

0000000000001e40 <PyErr_NewException@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #184]
    1e48:	add	x16, x16, #0xb8
    1e4c:	br	x17

0000000000001e50 <deflateInit_@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #192]
    1e58:	add	x16, x16, #0xc0
    1e5c:	br	x17

0000000000001e60 <PyLong_AsUnsignedLongMask@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #200]
    1e68:	add	x16, x16, #0xc8
    1e6c:	br	x17

0000000000001e70 <__gmon_start__@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #208]
    1e78:	add	x16, x16, #0xd0
    1e7c:	br	x17

0000000000001e80 <_PyArg_CheckPositional@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #216]
    1e88:	add	x16, x16, #0xd8
    1e8c:	br	x17

0000000000001e90 <inflateEnd@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #224]
    1e98:	add	x16, x16, #0xe0
    1e9c:	br	x17

0000000000001ea0 <inflateCopy@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #232]
    1ea8:	add	x16, x16, #0xe8
    1eac:	br	x17

0000000000001eb0 <PyErr_Occurred@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #240]
    1eb8:	add	x16, x16, #0xf0
    1ebc:	br	x17

0000000000001ec0 <PyModule_Create2@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #248]
    1ec8:	add	x16, x16, #0xf8
    1ecc:	br	x17

0000000000001ed0 <inflateSetDictionary@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #256]
    1ed8:	add	x16, x16, #0x100
    1edc:	br	x17

0000000000001ee0 <adler32@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #264]
    1ee8:	add	x16, x16, #0x108
    1eec:	br	x17

0000000000001ef0 <PyMem_RawFree@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #272]
    1ef8:	add	x16, x16, #0x110
    1efc:	br	x17

0000000000001f00 <PyThread_allocate_lock@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #280]
    1f08:	add	x16, x16, #0x118
    1f0c:	br	x17

0000000000001f10 <deflateEnd@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #288]
    1f18:	add	x16, x16, #0x120
    1f1c:	br	x17

0000000000001f20 <PyThread_release_lock@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #296]
    1f28:	add	x16, x16, #0x128
    1f2c:	br	x17

0000000000001f30 <PyObject_GetBuffer@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #304]
    1f38:	add	x16, x16, #0x130
    1f3c:	br	x17

0000000000001f40 <deflateCopy@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #312]
    1f48:	add	x16, x16, #0x138
    1f4c:	br	x17

0000000000001f50 <PyLong_FromUnsignedLong@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #320]
    1f58:	add	x16, x16, #0x140
    1f5c:	br	x17

0000000000001f60 <_PyObject_New@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #328]
    1f68:	add	x16, x16, #0x148
    1f6c:	br	x17

0000000000001f70 <PyUnicode_FromString@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #336]
    1f78:	add	x16, x16, #0x150
    1f7c:	br	x17

0000000000001f80 <inflateInit2_@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #344]
    1f88:	add	x16, x16, #0x158
    1f8c:	br	x17

0000000000001f90 <PyModule_AddStringConstant@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #352]
    1f98:	add	x16, x16, #0x160
    1f9c:	br	x17

0000000000001fa0 <PyEval_SaveThread@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #360]
    1fa8:	add	x16, x16, #0x168
    1fac:	br	x17

0000000000001fb0 <PyModule_AddObject@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #368]
    1fb8:	add	x16, x16, #0x170
    1fbc:	br	x17

0000000000001fc0 <zlibVersion@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #376]
    1fc8:	add	x16, x16, #0x178
    1fcc:	br	x17

0000000000001fd0 <PyType_IsSubtype@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #384]
    1fd8:	add	x16, x16, #0x180
    1fdc:	br	x17

0000000000001fe0 <PyErr_Format@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #392]
    1fe8:	add	x16, x16, #0x188
    1fec:	br	x17

0000000000001ff0 <_PyLong_AsInt@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #400]
    1ff8:	add	x16, x16, #0x190
    1ffc:	br	x17

0000000000002000 <deflateSetDictionary@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #408]
    2008:	add	x16, x16, #0x198
    200c:	br	x17

0000000000002010 <PyThread_free_lock@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #416]
    2018:	add	x16, x16, #0x1a0
    201c:	br	x17

Disassembly of section .text:

0000000000002020 <PyInit_zlib@@Base-0x3410>:
    2020:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2024:	ldr	x0, [x0, #4048]
    2028:	cbz	x0, 2030 <PyThread_free_lock@plt+0x20>
    202c:	b	1e70 <__gmon_start__@plt>
    2030:	ret
    2034:	nop
    2038:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    203c:	add	x0, x0, #0x998
    2040:	adrp	x1, 18000 <PyInit_zlib@@Base+0x12bd0>
    2044:	add	x1, x1, #0x998
    2048:	cmp	x1, x0
    204c:	b.eq	2064 <PyThread_free_lock@plt+0x54>  // b.none
    2050:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    2054:	ldr	x1, [x1, #4000]
    2058:	cbz	x1, 2064 <PyThread_free_lock@plt+0x54>
    205c:	mov	x16, x1
    2060:	br	x16
    2064:	ret
    2068:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    206c:	add	x0, x0, #0x998
    2070:	adrp	x1, 18000 <PyInit_zlib@@Base+0x12bd0>
    2074:	add	x1, x1, #0x998
    2078:	sub	x1, x1, x0
    207c:	lsr	x2, x1, #63
    2080:	add	x1, x2, x1, asr #3
    2084:	cmp	xzr, x1, asr #1
    2088:	asr	x1, x1, #1
    208c:	b.eq	20a4 <PyThread_free_lock@plt+0x94>  // b.none
    2090:	adrp	x2, 17000 <PyInit_zlib@@Base+0x11bd0>
    2094:	ldr	x2, [x2, #4064]
    2098:	cbz	x2, 20a4 <PyThread_free_lock@plt+0x94>
    209c:	mov	x16, x2
    20a0:	br	x16
    20a4:	ret
    20a8:	stp	x29, x30, [sp, #-32]!
    20ac:	mov	x29, sp
    20b0:	str	x19, [sp, #16]
    20b4:	adrp	x19, 18000 <PyInit_zlib@@Base+0x12bd0>
    20b8:	ldrb	w0, [x19, #2456]
    20bc:	cbnz	w0, 20e4 <PyThread_free_lock@plt+0xd4>
    20c0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    20c4:	ldr	x0, [x0, #4016]
    20c8:	cbz	x0, 20d8 <PyThread_free_lock@plt+0xc8>
    20cc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    20d0:	ldr	x0, [x0, #424]
    20d4:	bl	1d30 <__cxa_finalize@plt>
    20d8:	bl	2038 <PyThread_free_lock@plt+0x28>
    20dc:	mov	w0, #0x1                   	// #1
    20e0:	strb	w0, [x19, #2456]
    20e4:	ldr	x19, [sp, #16]
    20e8:	ldp	x29, x30, [sp], #32
    20ec:	ret
    20f0:	b	2068 <PyThread_free_lock@plt+0x58>
    20f4:	nop
    20f8:	mov	x0, x1
    20fc:	b	1ef0 <PyMem_RawFree@plt>
    2100:	mov	w3, w1
    2104:	mov	w4, w2
    2108:	cbz	w2, 211c <PyThread_free_lock@plt+0x10c>
    210c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    2110:	udiv	x0, x0, x4
    2114:	cmp	x0, x3
    2118:	b.cc	2124 <PyThread_free_lock@plt+0x114>  // b.lo, b.ul, b.last
    211c:	umull	x0, w1, w2
    2120:	b	1d40 <PyMem_RawMalloc@plt>
    2124:	mov	x0, #0x0                   	// #0
    2128:	ret
    212c:	nop
    2130:	stp	x29, x30, [sp, #-32]!
    2134:	mov	x29, sp
    2138:	stp	x19, x20, [sp, #16]
    213c:	bl	1f60 <_PyObject_New@plt>
    2140:	cbz	x0, 21b0 <PyThread_free_lock@plt+0x1a0>
    2144:	mov	x19, x0
    2148:	strb	wzr, [x0, #144]
    214c:	adrp	x20, 5000 <PyThread_free_lock@plt+0x2ff0>
    2150:	add	x20, x20, #0xae8
    2154:	mov	x0, x20
    2158:	mov	x1, #0x0                   	// #0
    215c:	str	wzr, [x19, #148]
    2160:	str	xzr, [x19, #152]
    2164:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2168:	str	x0, [x19, #128]
    216c:	cbz	x0, 21a0 <PyThread_free_lock@plt+0x190>
    2170:	mov	x0, x20
    2174:	mov	x1, #0x0                   	// #0
    2178:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    217c:	str	x0, [x19, #136]
    2180:	cbz	x0, 21a0 <PyThread_free_lock@plt+0x190>
    2184:	bl	1f00 <PyThread_allocate_lock@plt>
    2188:	str	x0, [x19, #160]
    218c:	cbz	x0, 21d4 <PyThread_free_lock@plt+0x1c4>
    2190:	mov	x0, x19
    2194:	ldp	x19, x20, [sp, #16]
    2198:	ldp	x29, x30, [sp], #32
    219c:	ret
    21a0:	ldr	x0, [x19]
    21a4:	sub	x0, x0, #0x1
    21a8:	str	x0, [x19]
    21ac:	cbz	x0, 21c4 <PyThread_free_lock@plt+0x1b4>
    21b0:	mov	x19, #0x0                   	// #0
    21b4:	mov	x0, x19
    21b8:	ldp	x19, x20, [sp, #16]
    21bc:	ldp	x29, x30, [sp], #32
    21c0:	ret
    21c4:	mov	x0, x19
    21c8:	mov	x19, #0x0                   	// #0
    21cc:	bl	1d80 <_Py_Dealloc@plt>
    21d0:	b	2190 <PyThread_free_lock@plt+0x180>
    21d4:	ldr	x0, [x19]
    21d8:	sub	x0, x0, #0x1
    21dc:	str	x0, [x19]
    21e0:	cbz	x0, 2204 <PyThread_free_lock@plt+0x1f4>
    21e4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    21e8:	mov	x19, #0x0                   	// #0
    21ec:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    21f0:	add	x1, x1, #0x6d0
    21f4:	ldr	x0, [x0, #4024]
    21f8:	ldr	x0, [x0]
    21fc:	bl	1dc0 <PyErr_SetString@plt>
    2200:	b	2190 <PyThread_free_lock@plt+0x180>
    2204:	mov	x0, x19
    2208:	bl	1d80 <_Py_Dealloc@plt>
    220c:	b	21e4 <PyThread_free_lock@plt+0x1d4>
    2210:	stp	x29, x30, [sp, #-32]!
    2214:	mov	x29, sp
    2218:	str	x19, [sp, #16]
    221c:	mov	x19, x0
    2220:	ldr	w0, [x0, #148]
    2224:	cbnz	w0, 22ac <PyThread_free_lock@plt+0x29c>
    2228:	ldr	x0, [x19, #160]
    222c:	bl	2010 <PyThread_free_lock@plt>
    2230:	ldr	x0, [x19, #128]
    2234:	cbz	x0, 2248 <PyThread_free_lock@plt+0x238>
    2238:	ldr	x1, [x0]
    223c:	sub	x1, x1, #0x1
    2240:	str	x1, [x0]
    2244:	cbz	x1, 22a4 <PyThread_free_lock@plt+0x294>
    2248:	ldr	x0, [x19, #136]
    224c:	cbz	x0, 2260 <PyThread_free_lock@plt+0x250>
    2250:	ldr	x1, [x0]
    2254:	sub	x1, x1, #0x1
    2258:	str	x1, [x0]
    225c:	cbz	x1, 229c <PyThread_free_lock@plt+0x28c>
    2260:	ldr	x0, [x19, #152]
    2264:	cbz	x0, 2278 <PyThread_free_lock@plt+0x268>
    2268:	ldr	x1, [x0]
    226c:	sub	x1, x1, #0x1
    2270:	str	x1, [x0]
    2274:	cbz	x1, 2288 <PyThread_free_lock@plt+0x278>
    2278:	mov	x0, x19
    227c:	ldr	x19, [sp, #16]
    2280:	ldp	x29, x30, [sp], #32
    2284:	b	1df0 <PyObject_Free@plt>
    2288:	bl	1d80 <_Py_Dealloc@plt>
    228c:	mov	x0, x19
    2290:	ldr	x19, [sp, #16]
    2294:	ldp	x29, x30, [sp], #32
    2298:	b	1df0 <PyObject_Free@plt>
    229c:	bl	1d80 <_Py_Dealloc@plt>
    22a0:	b	2260 <PyThread_free_lock@plt+0x250>
    22a4:	bl	1d80 <_Py_Dealloc@plt>
    22a8:	b	2248 <PyThread_free_lock@plt+0x238>
    22ac:	add	x0, x19, #0x10
    22b0:	bl	1f10 <deflateEnd@plt>
    22b4:	b	2228 <PyThread_free_lock@plt+0x218>
    22b8:	adrp	x5, 18000 <PyInit_zlib@@Base+0x12bd0>
    22bc:	mov	x4, x0
    22c0:	cmn	w1, #0x6
    22c4:	mov	x3, x2
    22c8:	ldr	x0, [x5, #2464]
    22cc:	b.eq	230c <PyThread_free_lock@plt+0x2fc>  // b.none
    22d0:	cbz	x4, 22e4 <PyThread_free_lock@plt+0x2d4>
    22d4:	mov	w2, w1
    22d8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    22dc:	add	x1, x1, #0x770
    22e0:	b	1fe0 <PyErr_Format@plt>
    22e4:	cmn	w1, #0x3
    22e8:	b.eq	2354 <PyThread_free_lock@plt+0x344>  // b.none
    22ec:	cmn	w1, #0x2
    22f0:	b.eq	233c <PyThread_free_lock@plt+0x32c>  // b.none
    22f4:	cmn	w1, #0x5
    22f8:	b.eq	2324 <PyThread_free_lock@plt+0x314>  // b.none
    22fc:	mov	w2, w1
    2300:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2304:	add	x1, x1, #0x760
    2308:	b	1fe0 <PyErr_Format@plt>
    230c:	mov	w2, w1
    2310:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    2314:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2318:	add	x4, x4, #0x708
    231c:	add	x1, x1, #0x770
    2320:	b	1fe0 <PyErr_Format@plt>
    2324:	mov	w2, w1
    2328:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    232c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2330:	add	x4, x4, #0x740
    2334:	add	x1, x1, #0x770
    2338:	b	1fe0 <PyErr_Format@plt>
    233c:	mov	w2, w1
    2340:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    2344:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2348:	add	x4, x4, #0x6e8
    234c:	add	x1, x1, #0x770
    2350:	b	1fe0 <PyErr_Format@plt>
    2354:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    2358:	add	x4, x4, #0x728
    235c:	b	22d4 <PyThread_free_lock@plt+0x2c4>
    2360:	stp	x29, x30, [sp, #-144]!
    2364:	sub	x0, x2, #0x1
    2368:	cmp	x0, #0x1
    236c:	mov	x29, sp
    2370:	stp	x19, x20, [sp, #16]
    2374:	mov	x19, x2
    2378:	mov	x20, x1
    237c:	stp	xzr, xzr, [sp, #64]
    2380:	stp	xzr, xzr, [sp, #80]
    2384:	stp	xzr, xzr, [sp, #96]
    2388:	stp	xzr, xzr, [sp, #112]
    238c:	stp	xzr, xzr, [sp, #128]
    2390:	b.ls	23b0 <PyThread_free_lock@plt+0x3a0>  // b.plast
    2394:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    2398:	mov	x1, x19
    239c:	add	x0, x0, #0x788
    23a0:	mov	x3, #0x2                   	// #2
    23a4:	mov	x2, #0x1                   	// #1
    23a8:	bl	1e80 <_PyArg_CheckPositional@plt>
    23ac:	cbz	w0, 24bc <PyThread_free_lock@plt+0x4ac>
    23b0:	ldr	x0, [x20]
    23b4:	stp	x21, x22, [sp, #32]
    23b8:	add	x21, sp, #0x40
    23bc:	mov	x1, x21
    23c0:	mov	w2, #0x0                   	// #0
    23c4:	bl	1f30 <PyObject_GetBuffer@plt>
    23c8:	cbnz	w0, 24b8 <PyThread_free_lock@plt+0x4a8>
    23cc:	mov	x0, x21
    23d0:	mov	w1, #0x43                  	// #67
    23d4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    23d8:	cbz	w0, 2528 <PyThread_free_lock@plt+0x518>
    23dc:	cmp	x19, #0x1
    23e0:	b.le	24f8 <PyThread_free_lock@plt+0x4e8>
    23e4:	ldr	x0, [x20, #8]
    23e8:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    23ec:	ldr	x1, [x1, #4008]
    23f0:	ldr	x0, [x0, #8]
    23f4:	cmp	x0, x1
    23f8:	b.eq	2504 <PyThread_free_lock@plt+0x4f4>  // b.none
    23fc:	bl	1fd0 <PyType_IsSubtype@plt>
    2400:	cbnz	w0, 2504 <PyThread_free_lock@plt+0x4f4>
    2404:	ldr	x0, [x20, #8]
    2408:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    240c:	cmn	w0, #0x1
    2410:	mov	w22, w0
    2414:	b.eq	24ac <PyThread_free_lock@plt+0x49c>  // b.none
    2418:	and	x19, x0, #0xffffffff
    241c:	ldr	x20, [sp, #80]
    2420:	mov	x0, #0x1400                	// #5120
    2424:	ldr	x21, [sp, #64]
    2428:	cmp	x20, x0
    242c:	b.le	24e0 <PyThread_free_lock@plt+0x4d0>
    2430:	str	x23, [sp, #48]
    2434:	bl	1fa0 <PyEval_SaveThread@plt>
    2438:	mov	x1, #0xffffffff            	// #4294967295
    243c:	mov	x23, x0
    2440:	cmp	x20, x1
    2444:	b.le	2478 <PyThread_free_lock@plt+0x468>
    2448:	mov	x19, x1
    244c:	nop
    2450:	mov	w0, w22
    2454:	mov	x1, x21
    2458:	sub	x20, x20, x19
    245c:	mov	w2, #0xffffffff            	// #-1
    2460:	bl	1d50 <crc32@plt>
    2464:	add	x21, x21, x19
    2468:	cmp	x20, x19
    246c:	mov	w22, w0
    2470:	b.hi	2450 <PyThread_free_lock@plt+0x440>  // b.pmore
    2474:	and	x19, x0, #0xffffffff
    2478:	mov	w2, w20
    247c:	mov	x1, x21
    2480:	mov	x0, x19
    2484:	bl	1d50 <crc32@plt>
    2488:	mov	x19, x0
    248c:	mov	x0, x23
    2490:	bl	1d10 <PyEval_RestoreThread@plt>
    2494:	ldr	x23, [sp, #48]
    2498:	mov	w0, w19
    249c:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    24a0:	mov	x19, x0
    24a4:	ldp	x21, x22, [sp, #32]
    24a8:	b	24c0 <PyThread_free_lock@plt+0x4b0>
    24ac:	mov	x19, #0xffffffff            	// #4294967295
    24b0:	bl	1eb0 <PyErr_Occurred@plt>
    24b4:	cbz	x0, 241c <PyThread_free_lock@plt+0x40c>
    24b8:	ldp	x21, x22, [sp, #32]
    24bc:	mov	x19, #0x0                   	// #0
    24c0:	ldr	x0, [sp, #72]
    24c4:	cbz	x0, 24d0 <PyThread_free_lock@plt+0x4c0>
    24c8:	add	x0, sp, #0x40
    24cc:	bl	1d20 <PyBuffer_Release@plt>
    24d0:	mov	x0, x19
    24d4:	ldp	x19, x20, [sp, #16]
    24d8:	ldp	x29, x30, [sp], #144
    24dc:	ret
    24e0:	mov	x0, x19
    24e4:	mov	w2, w20
    24e8:	mov	x1, x21
    24ec:	bl	1d50 <crc32@plt>
    24f0:	mov	w19, w0
    24f4:	b	2498 <PyThread_free_lock@plt+0x488>
    24f8:	mov	x19, #0x0                   	// #0
    24fc:	mov	w22, #0x0                   	// #0
    2500:	b	241c <PyThread_free_lock@plt+0x40c>
    2504:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2508:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    250c:	mov	x19, #0x0                   	// #0
    2510:	add	x1, x1, #0x7b8
    2514:	ldr	x0, [x0, #4040]
    2518:	ldr	x0, [x0]
    251c:	bl	1dc0 <PyErr_SetString@plt>
    2520:	ldp	x21, x22, [sp, #32]
    2524:	b	24c0 <PyThread_free_lock@plt+0x4b0>
    2528:	ldr	x3, [x20]
    252c:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    2530:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2534:	add	x2, x2, #0x790
    2538:	add	x1, x1, #0x7a8
    253c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    2540:	mov	x19, #0x0                   	// #0
    2544:	add	x0, x0, #0x788
    2548:	bl	1e30 <_PyArg_BadArgument@plt>
    254c:	ldp	x21, x22, [sp, #32]
    2550:	b	24c0 <PyThread_free_lock@plt+0x4b0>
    2554:	nop
    2558:	stp	x29, x30, [sp, #-144]!
    255c:	sub	x0, x2, #0x1
    2560:	cmp	x0, #0x1
    2564:	mov	x29, sp
    2568:	stp	x19, x20, [sp, #16]
    256c:	mov	x19, x2
    2570:	mov	x20, x1
    2574:	stp	xzr, xzr, [sp, #64]
    2578:	stp	xzr, xzr, [sp, #80]
    257c:	stp	xzr, xzr, [sp, #96]
    2580:	stp	xzr, xzr, [sp, #112]
    2584:	stp	xzr, xzr, [sp, #128]
    2588:	b.ls	25a8 <PyThread_free_lock@plt+0x598>  // b.plast
    258c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    2590:	mov	x1, x19
    2594:	add	x0, x0, #0x7e0
    2598:	mov	x3, #0x2                   	// #2
    259c:	mov	x2, #0x1                   	// #1
    25a0:	bl	1e80 <_PyArg_CheckPositional@plt>
    25a4:	cbz	w0, 26b4 <PyThread_free_lock@plt+0x6a4>
    25a8:	ldr	x0, [x20]
    25ac:	stp	x21, x22, [sp, #32]
    25b0:	add	x21, sp, #0x40
    25b4:	mov	x1, x21
    25b8:	mov	w2, #0x0                   	// #0
    25bc:	bl	1f30 <PyObject_GetBuffer@plt>
    25c0:	cbnz	w0, 26b0 <PyThread_free_lock@plt+0x6a0>
    25c4:	mov	x0, x21
    25c8:	mov	w1, #0x43                  	// #67
    25cc:	bl	1d60 <PyBuffer_IsContiguous@plt>
    25d0:	cbz	w0, 2720 <PyThread_free_lock@plt+0x710>
    25d4:	cmp	x19, #0x1
    25d8:	b.le	26f0 <PyThread_free_lock@plt+0x6e0>
    25dc:	ldr	x0, [x20, #8]
    25e0:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    25e4:	ldr	x1, [x1, #4008]
    25e8:	ldr	x0, [x0, #8]
    25ec:	cmp	x0, x1
    25f0:	b.eq	26fc <PyThread_free_lock@plt+0x6ec>  // b.none
    25f4:	bl	1fd0 <PyType_IsSubtype@plt>
    25f8:	cbnz	w0, 26fc <PyThread_free_lock@plt+0x6ec>
    25fc:	ldr	x0, [x20, #8]
    2600:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    2604:	cmn	w0, #0x1
    2608:	mov	w22, w0
    260c:	b.eq	26a4 <PyThread_free_lock@plt+0x694>  // b.none
    2610:	and	x19, x0, #0xffffffff
    2614:	ldr	x20, [sp, #80]
    2618:	mov	x0, #0x1400                	// #5120
    261c:	ldr	x21, [sp, #64]
    2620:	cmp	x20, x0
    2624:	b.le	26d8 <PyThread_free_lock@plt+0x6c8>
    2628:	str	x23, [sp, #48]
    262c:	bl	1fa0 <PyEval_SaveThread@plt>
    2630:	mov	x1, #0xffffffff            	// #4294967295
    2634:	mov	x23, x0
    2638:	cmp	x20, x1
    263c:	b.le	2670 <PyThread_free_lock@plt+0x660>
    2640:	mov	x19, x1
    2644:	nop
    2648:	mov	w0, w22
    264c:	mov	x1, x21
    2650:	sub	x20, x20, x19
    2654:	mov	w2, #0xffffffff            	// #-1
    2658:	bl	1ee0 <adler32@plt>
    265c:	add	x21, x21, x19
    2660:	cmp	x20, x19
    2664:	mov	w22, w0
    2668:	b.hi	2648 <PyThread_free_lock@plt+0x638>  // b.pmore
    266c:	and	x19, x0, #0xffffffff
    2670:	mov	w2, w20
    2674:	mov	x1, x21
    2678:	mov	x0, x19
    267c:	bl	1ee0 <adler32@plt>
    2680:	mov	x19, x0
    2684:	mov	x0, x23
    2688:	bl	1d10 <PyEval_RestoreThread@plt>
    268c:	ldr	x23, [sp, #48]
    2690:	mov	w0, w19
    2694:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    2698:	mov	x19, x0
    269c:	ldp	x21, x22, [sp, #32]
    26a0:	b	26b8 <PyThread_free_lock@plt+0x6a8>
    26a4:	mov	x19, #0xffffffff            	// #4294967295
    26a8:	bl	1eb0 <PyErr_Occurred@plt>
    26ac:	cbz	x0, 2614 <PyThread_free_lock@plt+0x604>
    26b0:	ldp	x21, x22, [sp, #32]
    26b4:	mov	x19, #0x0                   	// #0
    26b8:	ldr	x0, [sp, #72]
    26bc:	cbz	x0, 26c8 <PyThread_free_lock@plt+0x6b8>
    26c0:	add	x0, sp, #0x40
    26c4:	bl	1d20 <PyBuffer_Release@plt>
    26c8:	mov	x0, x19
    26cc:	ldp	x19, x20, [sp, #16]
    26d0:	ldp	x29, x30, [sp], #144
    26d4:	ret
    26d8:	mov	x0, x19
    26dc:	mov	w2, w20
    26e0:	mov	x1, x21
    26e4:	bl	1ee0 <adler32@plt>
    26e8:	mov	w19, w0
    26ec:	b	2690 <PyThread_free_lock@plt+0x680>
    26f0:	mov	x19, #0x1                   	// #1
    26f4:	mov	w22, w19
    26f8:	b	2614 <PyThread_free_lock@plt+0x604>
    26fc:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2700:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2704:	mov	x19, #0x0                   	// #0
    2708:	add	x1, x1, #0x7b8
    270c:	ldr	x0, [x0, #4040]
    2710:	ldr	x0, [x0]
    2714:	bl	1dc0 <PyErr_SetString@plt>
    2718:	ldp	x21, x22, [sp, #32]
    271c:	b	26b8 <PyThread_free_lock@plt+0x6a8>
    2720:	ldr	x3, [x20]
    2724:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    2728:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    272c:	add	x2, x2, #0x790
    2730:	add	x1, x1, #0x7a8
    2734:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    2738:	mov	x19, #0x0                   	// #0
    273c:	add	x0, x0, #0x7e0
    2740:	bl	1e30 <_PyArg_BadArgument@plt>
    2744:	ldp	x21, x22, [sp, #32]
    2748:	b	26b8 <PyThread_free_lock@plt+0x6a8>
    274c:	nop
    2750:	stp	x29, x30, [sp, #-64]!
    2754:	cmp	w3, #0x1
    2758:	mov	x29, sp
    275c:	stp	x19, x20, [sp, #16]
    2760:	mov	x19, x0
    2764:	mov	x20, x1
    2768:	stp	x21, x22, [sp, #32]
    276c:	mov	x21, x2
    2770:	ldr	w0, [x0, #24]
    2774:	b.eq	27dc <PyThread_free_lock@plt+0x7cc>  // b.none
    2778:	cbnz	w0, 2788 <PyThread_free_lock@plt+0x778>
    277c:	ldr	x0, [x19, #136]
    2780:	ldr	x0, [x0, #16]
    2784:	cbz	x0, 27c0 <PyThread_free_lock@plt+0x7b0>
    2788:	ldr	x1, [x20]
    278c:	ldr	x2, [x21]
    2790:	ldr	x0, [x19, #16]
    2794:	add	x1, x1, x2
    2798:	sub	x1, x1, x0
    279c:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    27a0:	mov	x1, x0
    27a4:	cbz	x0, 2888 <PyThread_free_lock@plt+0x878>
    27a8:	ldr	x0, [x19, #136]
    27ac:	str	x1, [x19, #136]
    27b0:	ldr	x1, [x0]
    27b4:	sub	x1, x1, #0x1
    27b8:	str	x1, [x0]
    27bc:	cbz	x1, 27d4 <PyThread_free_lock@plt+0x7c4>
    27c0:	mov	w0, #0x0                   	// #0
    27c4:	ldp	x19, x20, [sp, #16]
    27c8:	ldp	x21, x22, [sp, #32]
    27cc:	ldp	x29, x30, [sp], #64
    27d0:	ret
    27d4:	bl	1d80 <_Py_Dealloc@plt>
    27d8:	b	27c0 <PyThread_free_lock@plt+0x7b0>
    27dc:	cbz	w0, 277c <PyThread_free_lock@plt+0x76c>
    27e0:	ldr	x2, [x19, #128]
    27e4:	stp	x23, x24, [sp, #48]
    27e8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    27ec:	ldr	x22, [x1]
    27f0:	ldr	x1, [x21]
    27f4:	ldr	x24, [x2, #16]
    27f8:	add	x22, x22, x1
    27fc:	ldr	x1, [x19, #16]
    2800:	sub	x0, x0, x24
    2804:	sub	x22, x22, x1
    2808:	cmp	x22, x0
    280c:	b.gt	2890 <PyThread_free_lock@plt+0x880>
    2810:	add	x1, x24, x22
    2814:	mov	x0, #0x0                   	// #0
    2818:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    281c:	mov	x23, x0
    2820:	cbz	x0, 2884 <PyThread_free_lock@plt+0x874>
    2824:	add	x3, x0, #0x20
    2828:	mov	x2, x24
    282c:	ldr	x1, [x19, #128]
    2830:	mov	x0, x3
    2834:	add	x1, x1, #0x20
    2838:	bl	1cd0 <memcpy@plt>
    283c:	ldr	x1, [x19, #16]
    2840:	mov	x2, x22
    2844:	add	x0, x0, x24
    2848:	bl	1cd0 <memcpy@plt>
    284c:	ldr	x0, [x19, #128]
    2850:	ldr	x1, [x0]
    2854:	str	x23, [x19, #128]
    2858:	sub	x1, x1, #0x1
    285c:	str	x1, [x0]
    2860:	cbz	x1, 287c <PyThread_free_lock@plt+0x86c>
    2864:	ldr	x0, [x19, #136]
    2868:	ldp	x23, x24, [sp, #48]
    286c:	str	wzr, [x19, #24]
    2870:	ldr	x0, [x0, #16]
    2874:	cbnz	x0, 2788 <PyThread_free_lock@plt+0x778>
    2878:	b	27c0 <PyThread_free_lock@plt+0x7b0>
    287c:	bl	1d80 <_Py_Dealloc@plt>
    2880:	b	2864 <PyThread_free_lock@plt+0x854>
    2884:	ldp	x23, x24, [sp, #48]
    2888:	mov	w0, #0xffffffff            	// #-1
    288c:	b	27c4 <PyThread_free_lock@plt+0x7b4>
    2890:	bl	1d90 <PyErr_NoMemory@plt>
    2894:	mov	w0, #0xffffffff            	// #-1
    2898:	ldp	x23, x24, [sp, #48]
    289c:	b	27c4 <PyThread_free_lock@plt+0x7b4>
    28a0:	stp	x29, x30, [sp, #-32]!
    28a4:	mov	x29, sp
    28a8:	str	x19, [sp, #16]
    28ac:	mov	x19, x0
    28b0:	ldr	w0, [x0, #148]
    28b4:	cbnz	w0, 293c <PyThread_free_lock@plt+0x92c>
    28b8:	ldr	x0, [x19, #160]
    28bc:	bl	2010 <PyThread_free_lock@plt>
    28c0:	ldr	x0, [x19, #128]
    28c4:	cbz	x0, 28d8 <PyThread_free_lock@plt+0x8c8>
    28c8:	ldr	x1, [x0]
    28cc:	sub	x1, x1, #0x1
    28d0:	str	x1, [x0]
    28d4:	cbz	x1, 2934 <PyThread_free_lock@plt+0x924>
    28d8:	ldr	x0, [x19, #136]
    28dc:	cbz	x0, 28f0 <PyThread_free_lock@plt+0x8e0>
    28e0:	ldr	x1, [x0]
    28e4:	sub	x1, x1, #0x1
    28e8:	str	x1, [x0]
    28ec:	cbz	x1, 292c <PyThread_free_lock@plt+0x91c>
    28f0:	ldr	x0, [x19, #152]
    28f4:	cbz	x0, 2908 <PyThread_free_lock@plt+0x8f8>
    28f8:	ldr	x1, [x0]
    28fc:	sub	x1, x1, #0x1
    2900:	str	x1, [x0]
    2904:	cbz	x1, 2918 <PyThread_free_lock@plt+0x908>
    2908:	mov	x0, x19
    290c:	ldr	x19, [sp, #16]
    2910:	ldp	x29, x30, [sp], #32
    2914:	b	1df0 <PyObject_Free@plt>
    2918:	bl	1d80 <_Py_Dealloc@plt>
    291c:	mov	x0, x19
    2920:	ldr	x19, [sp, #16]
    2924:	ldp	x29, x30, [sp], #32
    2928:	b	1df0 <PyObject_Free@plt>
    292c:	bl	1d80 <_Py_Dealloc@plt>
    2930:	b	28f0 <PyThread_free_lock@plt+0x8e0>
    2934:	bl	1d80 <_Py_Dealloc@plt>
    2938:	b	28d8 <PyThread_free_lock@plt+0x8c8>
    293c:	add	x0, x19, #0x10
    2940:	bl	1e90 <inflateEnd@plt>
    2944:	b	28b8 <PyThread_free_lock@plt+0x8a8>
    2948:	stp	x29, x30, [sp, #-192]!
    294c:	mov	w2, #0x0                   	// #0
    2950:	mov	x29, sp
    2954:	stp	x21, x22, [sp, #32]
    2958:	add	x22, sp, #0x70
    295c:	mov	x21, #0x0                   	// #0
    2960:	stp	x19, x20, [sp, #16]
    2964:	mov	x19, x1
    2968:	mov	x20, x0
    296c:	mov	x0, x1
    2970:	mov	x1, x22
    2974:	stp	xzr, xzr, [sp, #112]
    2978:	stp	xzr, xzr, [sp, #128]
    297c:	stp	xzr, xzr, [sp, #144]
    2980:	stp	xzr, xzr, [sp, #160]
    2984:	stp	xzr, xzr, [sp, #176]
    2988:	bl	1f30 <PyObject_GetBuffer@plt>
    298c:	cbnz	w0, 2adc <PyThread_free_lock@plt+0xacc>
    2990:	mov	x0, x22
    2994:	mov	w1, #0x43                  	// #67
    2998:	bl	1d60 <PyBuffer_IsContiguous@plt>
    299c:	cbz	w0, 2b90 <PyThread_free_lock@plt+0xb80>
    29a0:	ldr	x0, [sp, #112]
    29a4:	stp	x23, x24, [sp, #48]
    29a8:	mov	x24, #0xffffffff            	// #4294967295
    29ac:	stp	x25, x26, [sp, #64]
    29b0:	mov	x26, #0x4000                	// #16384
    29b4:	stp	x27, x28, [sp, #80]
    29b8:	add	x28, x20, #0x10
    29bc:	add	x27, sp, #0x68
    29c0:	str	x0, [x20, #16]
    29c4:	str	xzr, [sp, #104]
    29c8:	ldr	x21, [sp, #128]
    29cc:	bl	1fa0 <PyEval_SaveThread@plt>
    29d0:	mov	x19, x0
    29d4:	mov	w1, #0x1                   	// #1
    29d8:	ldr	x0, [x20, #160]
    29dc:	bl	1da0 <PyThread_acquire_lock@plt>
    29e0:	mov	x0, x19
    29e4:	bl	1d10 <PyEval_RestoreThread@plt>
    29e8:	cmp	x21, x24
    29ec:	b.ls	2b00 <PyThread_free_lock@plt+0xaf0>  // b.plast
    29f0:	sub	x21, x21, x24
    29f4:	mov	w0, #0xffffffff            	// #-1
    29f8:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
    29fc:	str	w0, [x20, #24]
    2a00:	b	2a48 <PyThread_free_lock@plt+0xa38>
    2a04:	cmp	x2, x24
    2a08:	sub	w19, w26, w19
    2a0c:	csinv	w19, w19, wzr, ls  // ls = plast
    2a10:	str	x1, [x20, #40]
    2a14:	str	w19, [x20, #48]
    2a18:	bl	1fa0 <PyEval_SaveThread@plt>
    2a1c:	mov	x25, x0
    2a20:	mov	w1, #0x0                   	// #0
    2a24:	mov	x0, x28
    2a28:	bl	1dd0 <deflate@plt>
    2a2c:	mov	w19, w0
    2a30:	mov	x0, x25
    2a34:	bl	1d10 <PyEval_RestoreThread@plt>
    2a38:	cmn	w19, #0x2
    2a3c:	b.eq	2b2c <PyThread_free_lock@plt+0xb1c>  // b.none
    2a40:	ldr	w0, [x20, #48]
    2a44:	cbnz	w0, 2b64 <PyThread_free_lock@plt+0xb54>
    2a48:	ldr	x0, [sp, #104]
    2a4c:	add	x19, x0, #0x20
    2a50:	cbz	x0, 2b0c <PyThread_free_lock@plt+0xafc>
    2a54:	ldr	x1, [x20, #40]
    2a58:	sub	x19, x1, x19
    2a5c:	sub	x2, x26, x19
    2a60:	cmp	x26, x19
    2a64:	b.ne	2a04 <PyThread_free_lock@plt+0x9f4>  // b.any
    2a68:	lsl	x1, x26, #1
    2a6c:	cmp	x26, x23
    2a70:	b.eq	2aa4 <PyThread_free_lock@plt+0xa94>  // b.none
    2a74:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    2a78:	cmp	x26, x0
    2a7c:	csel	x26, x1, x23, le
    2a80:	mov	x0, x27
    2a84:	mov	x1, x26
    2a88:	bl	1cf0 <_PyBytes_Resize@plt>
    2a8c:	sub	x2, x26, x19
    2a90:	tbnz	w0, #31, 2aa8 <PyThread_free_lock@plt+0xa98>
    2a94:	ldr	x1, [sp, #104]
    2a98:	add	x1, x1, #0x20
    2a9c:	add	x1, x1, x19
    2aa0:	b	2a04 <PyThread_free_lock@plt+0x9f4>
    2aa4:	bl	1d90 <PyErr_NoMemory@plt>
    2aa8:	ldr	x0, [sp, #104]
    2aac:	cbz	x0, 2ac4 <PyThread_free_lock@plt+0xab4>
    2ab0:	ldr	x1, [x0]
    2ab4:	str	xzr, [sp, #104]
    2ab8:	sub	x1, x1, #0x1
    2abc:	str	x1, [x0]
    2ac0:	cbz	x1, 2b88 <PyThread_free_lock@plt+0xb78>
    2ac4:	ldr	x0, [x20, #160]
    2ac8:	bl	1f20 <PyThread_release_lock@plt>
    2acc:	ldp	x23, x24, [sp, #48]
    2ad0:	ldp	x25, x26, [sp, #64]
    2ad4:	ldp	x27, x28, [sp, #80]
    2ad8:	ldr	x21, [sp, #104]
    2adc:	ldr	x0, [sp, #120]
    2ae0:	cbz	x0, 2aec <PyThread_free_lock@plt+0xadc>
    2ae4:	mov	x0, x22
    2ae8:	bl	1d20 <PyBuffer_Release@plt>
    2aec:	mov	x0, x21
    2af0:	ldp	x19, x20, [sp, #16]
    2af4:	ldp	x21, x22, [sp, #32]
    2af8:	ldp	x29, x30, [sp], #192
    2afc:	ret
    2b00:	mov	w0, w21
    2b04:	mov	x21, #0x0                   	// #0
    2b08:	b	29f8 <PyThread_free_lock@plt+0x9e8>
    2b0c:	mov	x1, x26
    2b10:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2b14:	str	x0, [sp, #104]
    2b18:	add	x1, x0, #0x20
    2b1c:	mov	x2, x26
    2b20:	cbz	x0, 2ac4 <PyThread_free_lock@plt+0xab4>
    2b24:	mov	x19, #0x0                   	// #0
    2b28:	b	2a04 <PyThread_free_lock@plt+0x9f4>
    2b2c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    2b30:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2b34:	ldr	x4, [x20, #64]
    2b38:	add	x1, x1, #0x6e8
    2b3c:	ldr	x0, [x0, #2464]
    2b40:	cmp	x4, #0x0
    2b44:	csel	x4, x1, x4, eq  // eq = none
    2b48:	mov	w2, w19
    2b4c:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    2b50:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2b54:	add	x3, x3, #0x808
    2b58:	add	x1, x1, #0x770
    2b5c:	bl	1fe0 <PyErr_Format@plt>
    2b60:	b	2aa8 <PyThread_free_lock@plt+0xa98>
    2b64:	cbnz	x21, 29e8 <PyThread_free_lock@plt+0x9d8>
    2b68:	ldr	x2, [x20, #40]
    2b6c:	add	x0, sp, #0x68
    2b70:	ldr	x1, [sp, #104]
    2b74:	add	x1, x1, #0x20
    2b78:	sub	x1, x2, x1
    2b7c:	bl	1cf0 <_PyBytes_Resize@plt>
    2b80:	cbnz	w0, 2aa8 <PyThread_free_lock@plt+0xa98>
    2b84:	b	2ac4 <PyThread_free_lock@plt+0xab4>
    2b88:	bl	1d80 <_Py_Dealloc@plt>
    2b8c:	b	2ac4 <PyThread_free_lock@plt+0xab4>
    2b90:	mov	x3, x19
    2b94:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    2b98:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2b9c:	add	x2, x2, #0x790
    2ba0:	add	x1, x1, #0x7e8
    2ba4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    2ba8:	add	x0, x0, #0x7f8
    2bac:	bl	1e30 <_PyArg_BadArgument@plt>
    2bb0:	b	2adc <PyThread_free_lock@plt+0xacc>
    2bb4:	nop
    2bb8:	sub	sp, sp, #0xb0
    2bbc:	mov	x0, x3
    2bc0:	stp	x29, x30, [sp, #16]
    2bc4:	add	x29, sp, #0x10
    2bc8:	stp	x19, x20, [sp, #32]
    2bcc:	mov	x19, x1
    2bd0:	mov	x1, x2
    2bd4:	str	x21, [sp, #48]
    2bd8:	cbz	x3, 2d40 <PyThread_free_lock@plt+0xd30>
    2bdc:	ldr	x20, [x3, #16]
    2be0:	add	x20, x2, x20
    2be4:	add	x2, sp, #0x50
    2be8:	str	x2, [sp]
    2bec:	mov	x3, x0
    2bf0:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    2bf4:	mov	x0, x19
    2bf8:	add	x4, x4, #0x1b0
    2bfc:	mov	w7, #0x0                   	// #0
    2c00:	mov	w6, #0x2                   	// #2
    2c04:	mov	w5, #0x0                   	// #0
    2c08:	mov	x2, #0x0                   	// #0
    2c0c:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2c10:	mov	x19, x0
    2c14:	cbz	x0, 2da0 <PyThread_free_lock@plt+0xd90>
    2c18:	cbz	x20, 2d58 <PyThread_free_lock@plt+0xd48>
    2c1c:	ldr	x0, [x19]
    2c20:	cbz	x0, 2dbc <PyThread_free_lock@plt+0xdac>
    2c24:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    2c28:	ldr	x0, [x0, #8]
    2c2c:	ldr	x1, [x1, #4008]
    2c30:	cmp	x0, x1
    2c34:	b.eq	2ecc <PyThread_free_lock@plt+0xebc>  // b.none
    2c38:	bl	1fd0 <PyType_IsSubtype@plt>
    2c3c:	cbnz	w0, 2ecc <PyThread_free_lock@plt+0xebc>
    2c40:	ldr	x0, [x19]
    2c44:	bl	1ff0 <_PyLong_AsInt@plt>
    2c48:	mov	w21, w0
    2c4c:	cmn	w0, #0x1
    2c50:	b.eq	2d98 <PyThread_free_lock@plt+0xd88>  // b.none
    2c54:	cmp	x20, #0x1
    2c58:	b.eq	2d5c <PyThread_free_lock@plt+0xd4c>  // b.none
    2c5c:	ldr	x20, [x19, #8]
    2c60:	cbz	x20, 2d5c <PyThread_free_lock@plt+0xd4c>
    2c64:	ldr	x0, [x20, #8]
    2c68:	ldr	x0, [x0, #160]
    2c6c:	cbz	x0, 2f00 <PyThread_free_lock@plt+0xef0>
    2c70:	ldr	x0, [x0]
    2c74:	cbz	x0, 2f00 <PyThread_free_lock@plt+0xef0>
    2c78:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    2c7c:	add	x0, x0, #0x1b0
    2c80:	add	x0, x0, #0x40
    2c84:	bl	2130 <PyThread_free_lock@plt+0x120>
    2c88:	mov	x19, x0
    2c8c:	cbz	x0, 2da0 <PyThread_free_lock@plt+0xd90>
    2c90:	ldr	x0, [x20]
    2c94:	adrp	x2, 2000 <deflateSetDictionary@plt>
    2c98:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2c9c:	add	x2, x2, #0x100
    2ca0:	add	x1, x1, #0xf8
    2ca4:	str	xzr, [x19, #16]
    2ca8:	str	wzr, [x19, #24]
    2cac:	add	x0, x0, #0x1
    2cb0:	stp	x2, x1, [x19, #80]
    2cb4:	str	xzr, [x19, #96]
    2cb8:	str	x0, [x20]
    2cbc:	str	x20, [x19, #152]
    2cc0:	add	x20, x19, #0x10
    2cc4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    2cc8:	add	x2, x2, #0x850
    2ccc:	mov	x0, x20
    2cd0:	mov	w1, w21
    2cd4:	mov	w3, #0x70                  	// #112
    2cd8:	bl	1f80 <inflateInit2_@plt>
    2cdc:	mov	w2, w0
    2ce0:	cmn	w0, #0x2
    2ce4:	b.eq	2dd0 <PyThread_free_lock@plt+0xdc0>  // b.none
    2ce8:	cbz	w0, 2e58 <PyThread_free_lock@plt+0xe48>
    2cec:	cmn	w0, #0x4
    2cf0:	b.eq	2e14 <PyThread_free_lock@plt+0xe04>  // b.none
    2cf4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    2cf8:	cmn	w2, #0x6
    2cfc:	ldr	x0, [x0, #2464]
    2d00:	b.eq	2dc4 <PyThread_free_lock@plt+0xdb4>  // b.none
    2d04:	ldr	x4, [x19, #64]
    2d08:	cbz	x4, 2f38 <PyThread_free_lock@plt+0xf28>
    2d0c:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    2d10:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2d14:	add	x3, x3, #0x8f0
    2d18:	add	x1, x1, #0x770
    2d1c:	bl	1fe0 <PyErr_Format@plt>
    2d20:	ldr	x0, [x19]
    2d24:	sub	x0, x0, #0x1
    2d28:	str	x0, [x19]
    2d2c:	cbnz	x0, 2da0 <PyThread_free_lock@plt+0xd90>
    2d30:	mov	x0, x19
    2d34:	mov	x19, #0x0                   	// #0
    2d38:	bl	1d80 <_Py_Dealloc@plt>
    2d3c:	b	2da4 <PyThread_free_lock@plt+0xd94>
    2d40:	tbnz	x2, #63, 2f9c <PyThread_free_lock@plt+0xf8c>
    2d44:	cmp	x19, #0x0
    2d48:	mov	x20, x2
    2d4c:	ccmp	x2, #0x2, #0x0, ne  // ne = any
    2d50:	b.gt	2be4 <PyThread_free_lock@plt+0xbd4>
    2d54:	cbnz	x20, 2c1c <PyThread_free_lock@plt+0xc0c>
    2d58:	mov	w21, #0xf                   	// #15
    2d5c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    2d60:	add	x0, x0, #0x1b0
    2d64:	add	x0, x0, #0x40
    2d68:	bl	2130 <PyThread_free_lock@plt+0x120>
    2d6c:	mov	x19, x0
    2d70:	cbz	x0, 2da0 <PyThread_free_lock@plt+0xd90>
    2d74:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2d78:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2d7c:	add	x1, x1, #0x100
    2d80:	add	x0, x0, #0xf8
    2d84:	str	xzr, [x19, #16]
    2d88:	str	wzr, [x19, #24]
    2d8c:	stp	x1, x0, [x19, #80]
    2d90:	str	xzr, [x19, #96]
    2d94:	b	2cc0 <PyThread_free_lock@plt+0xcb0>
    2d98:	bl	1eb0 <PyErr_Occurred@plt>
    2d9c:	cbz	x0, 2c54 <PyThread_free_lock@plt+0xc44>
    2da0:	mov	x19, #0x0                   	// #0
    2da4:	mov	x0, x19
    2da8:	ldp	x29, x30, [sp, #16]
    2dac:	ldp	x19, x20, [sp, #32]
    2db0:	ldr	x21, [sp, #48]
    2db4:	add	sp, sp, #0xb0
    2db8:	ret
    2dbc:	mov	w21, #0xf                   	// #15
    2dc0:	b	2c5c <PyThread_free_lock@plt+0xc4c>
    2dc4:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    2dc8:	add	x4, x4, #0x708
    2dcc:	b	2d0c <PyThread_free_lock@plt+0xcfc>
    2dd0:	ldr	x0, [x19]
    2dd4:	sub	x0, x0, #0x1
    2dd8:	str	x0, [x19]
    2ddc:	cbz	x0, 2f20 <PyThread_free_lock@plt+0xf10>
    2de0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2de4:	mov	x19, #0x0                   	// #0
    2de8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2dec:	add	x1, x1, #0x8a0
    2df0:	ldr	x0, [x0, #4032]
    2df4:	ldr	x0, [x0]
    2df8:	bl	1dc0 <PyErr_SetString@plt>
    2dfc:	mov	x0, x19
    2e00:	ldp	x29, x30, [sp, #16]
    2e04:	ldp	x19, x20, [sp, #32]
    2e08:	ldr	x21, [sp, #48]
    2e0c:	add	sp, sp, #0xb0
    2e10:	ret
    2e14:	ldr	x0, [x19]
    2e18:	sub	x0, x0, #0x1
    2e1c:	str	x0, [x19]
    2e20:	cbz	x0, 2f2c <PyThread_free_lock@plt+0xf1c>
    2e24:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2e28:	mov	x19, #0x0                   	// #0
    2e2c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2e30:	add	x1, x1, #0x8c0
    2e34:	ldr	x0, [x0, #4024]
    2e38:	ldr	x0, [x0]
    2e3c:	bl	1dc0 <PyErr_SetString@plt>
    2e40:	mov	x0, x19
    2e44:	ldp	x29, x30, [sp, #16]
    2e48:	ldp	x19, x20, [sp, #32]
    2e4c:	ldr	x21, [sp, #48]
    2e50:	add	sp, sp, #0xb0
    2e54:	ret
    2e58:	ldr	x0, [x19, #152]
    2e5c:	mov	w1, #0x1                   	// #1
    2e60:	str	w1, [x19, #148]
    2e64:	cmp	w21, #0x0
    2e68:	ccmp	x0, #0x0, #0x4, lt  // lt = tstop
    2e6c:	b.eq	2da4 <PyThread_free_lock@plt+0xd94>  // b.none
    2e70:	add	x21, sp, #0x60
    2e74:	mov	w2, #0x0                   	// #0
    2e78:	mov	x1, x21
    2e7c:	bl	1f30 <PyObject_GetBuffer@plt>
    2e80:	cmn	w0, #0x1
    2e84:	b.eq	2d20 <PyThread_free_lock@plt+0xd10>  // b.none
    2e88:	ldr	x2, [sp, #112]
    2e8c:	mov	x0, #0xffffffff            	// #4294967295
    2e90:	cmp	x2, x0
    2e94:	b.hi	2f78 <PyThread_free_lock@plt+0xf68>  // b.pmore
    2e98:	ldr	x1, [sp, #96]
    2e9c:	mov	x0, x20
    2ea0:	bl	1ed0 <inflateSetDictionary@plt>
    2ea4:	mov	w20, w0
    2ea8:	mov	x0, x21
    2eac:	bl	1d20 <PyBuffer_Release@plt>
    2eb0:	cbz	w20, 2da4 <PyThread_free_lock@plt+0xd94>
    2eb4:	ldr	x0, [x19, #64]
    2eb8:	mov	w1, w20
    2ebc:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    2ec0:	add	x2, x2, #0x888
    2ec4:	bl	22b8 <PyThread_free_lock@plt+0x2a8>
    2ec8:	b	2d20 <PyThread_free_lock@plt+0xd10>
    2ecc:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2ed0:	mov	x19, #0x0                   	// #0
    2ed4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2ed8:	add	x1, x1, #0x7b8
    2edc:	ldr	x0, [x0, #4040]
    2ee0:	ldr	x0, [x0]
    2ee4:	bl	1dc0 <PyErr_SetString@plt>
    2ee8:	mov	x0, x19
    2eec:	ldp	x29, x30, [sp, #16]
    2ef0:	ldp	x19, x20, [sp, #32]
    2ef4:	ldr	x21, [sp, #48]
    2ef8:	add	sp, sp, #0xb0
    2efc:	ret
    2f00:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2f04:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2f08:	mov	x19, #0x0                   	// #0
    2f0c:	add	x1, x1, #0x820
    2f10:	ldr	x0, [x0, #4040]
    2f14:	ldr	x0, [x0]
    2f18:	bl	1dc0 <PyErr_SetString@plt>
    2f1c:	b	2da4 <PyThread_free_lock@plt+0xd94>
    2f20:	mov	x0, x19
    2f24:	bl	1d80 <_Py_Dealloc@plt>
    2f28:	b	2de0 <PyThread_free_lock@plt+0xdd0>
    2f2c:	mov	x0, x19
    2f30:	bl	1d80 <_Py_Dealloc@plt>
    2f34:	b	2e24 <PyThread_free_lock@plt+0xe14>
    2f38:	cmn	w2, #0x3
    2f3c:	b.eq	2f6c <PyThread_free_lock@plt+0xf5c>  // b.none
    2f40:	cmn	w2, #0x5
    2f44:	b.eq	2f60 <PyThread_free_lock@plt+0xf50>  // b.none
    2f48:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    2f4c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2f50:	add	x3, x3, #0x8f0
    2f54:	add	x1, x1, #0x760
    2f58:	bl	1fe0 <PyErr_Format@plt>
    2f5c:	b	2d20 <PyThread_free_lock@plt+0xd10>
    2f60:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    2f64:	add	x4, x4, #0x740
    2f68:	b	2d0c <PyThread_free_lock@plt+0xcfc>
    2f6c:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    2f70:	add	x4, x4, #0x728
    2f74:	b	2d0c <PyThread_free_lock@plt+0xcfc>
    2f78:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    2f7c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    2f80:	add	x1, x1, #0x858
    2f84:	ldr	x0, [x0, #4056]
    2f88:	ldr	x0, [x0]
    2f8c:	bl	1dc0 <PyErr_SetString@plt>
    2f90:	mov	x0, x21
    2f94:	bl	1d20 <PyBuffer_Release@plt>
    2f98:	b	2d20 <PyThread_free_lock@plt+0xd10>
    2f9c:	add	x0, sp, #0x50
    2fa0:	str	x0, [sp]
    2fa4:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    2fa8:	mov	x0, x19
    2fac:	add	x4, x4, #0x1b0
    2fb0:	mov	w7, #0x0                   	// #0
    2fb4:	mov	w6, #0x2                   	// #2
    2fb8:	mov	w5, #0x0                   	// #0
    2fbc:	mov	x2, #0x0                   	// #0
    2fc0:	str	x1, [sp, #72]
    2fc4:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2fc8:	mov	x19, x0
    2fcc:	cbz	x0, 2da0 <PyThread_free_lock@plt+0xd90>
    2fd0:	ldr	x1, [sp, #72]
    2fd4:	mov	x20, x1
    2fd8:	b	2c1c <PyThread_free_lock@plt+0xc0c>
    2fdc:	nop
    2fe0:	stp	x29, x30, [sp, #-48]!
    2fe4:	adrp	x1, 18000 <PyInit_zlib@@Base+0x12bd0>
    2fe8:	add	x1, x1, #0x1b0
    2fec:	mov	x29, sp
    2ff0:	stp	x19, x20, [sp, #16]
    2ff4:	str	x21, [sp, #32]
    2ff8:	mov	x21, x0
    2ffc:	add	x0, x1, #0x40
    3000:	bl	2130 <PyThread_free_lock@plt+0x120>
    3004:	cbz	x0, 3090 <PyThread_free_lock@plt+0x1080>
    3008:	mov	x19, x0
    300c:	bl	1fa0 <PyEval_SaveThread@plt>
    3010:	mov	x20, x0
    3014:	mov	w1, #0x1                   	// #1
    3018:	ldr	x0, [x21, #160]
    301c:	bl	1da0 <PyThread_acquire_lock@plt>
    3020:	mov	x0, x20
    3024:	bl	1d10 <PyEval_RestoreThread@plt>
    3028:	add	x1, x21, #0x10
    302c:	add	x0, x19, #0x10
    3030:	bl	1ea0 <inflateCopy@plt>
    3034:	mov	w2, w0
    3038:	cmn	w0, #0x2
    303c:	b.eq	31ac <PyThread_free_lock@plt+0x119c>  // b.none
    3040:	cbz	w0, 30f8 <PyThread_free_lock@plt+0x10e8>
    3044:	cmn	w0, #0x4
    3048:	b.eq	30a8 <PyThread_free_lock@plt+0x1098>  // b.none
    304c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3050:	cmn	w2, #0x6
    3054:	ldr	x0, [x0, #2464]
    3058:	b.eq	31c8 <PyThread_free_lock@plt+0x11b8>  // b.none
    305c:	ldr	x4, [x21, #64]
    3060:	cbz	x4, 31d4 <PyThread_free_lock@plt+0x11c4>
    3064:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3068:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    306c:	add	x3, x3, #0x938
    3070:	add	x1, x1, #0x770
    3074:	bl	1fe0 <PyErr_Format@plt>
    3078:	ldr	x0, [x21, #160]
    307c:	bl	1f20 <PyThread_release_lock@plt>
    3080:	ldr	x0, [x19]
    3084:	sub	x0, x0, #0x1
    3088:	str	x0, [x19]
    308c:	cbz	x0, 30d8 <PyThread_free_lock@plt+0x10c8>
    3090:	mov	x19, #0x0                   	// #0
    3094:	mov	x0, x19
    3098:	ldp	x19, x20, [sp, #16]
    309c:	ldr	x21, [sp, #32]
    30a0:	ldp	x29, x30, [sp], #48
    30a4:	ret
    30a8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    30ac:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    30b0:	add	x1, x1, #0x8c0
    30b4:	ldr	x0, [x0, #4024]
    30b8:	ldr	x0, [x0]
    30bc:	bl	1dc0 <PyErr_SetString@plt>
    30c0:	ldr	x0, [x21, #160]
    30c4:	bl	1f20 <PyThread_release_lock@plt>
    30c8:	ldr	x0, [x19]
    30cc:	sub	x0, x0, #0x1
    30d0:	str	x0, [x19]
    30d4:	cbnz	x0, 3090 <PyThread_free_lock@plt+0x1080>
    30d8:	mov	x0, x19
    30dc:	mov	x19, #0x0                   	// #0
    30e0:	bl	1d80 <_Py_Dealloc@plt>
    30e4:	mov	x0, x19
    30e8:	ldp	x19, x20, [sp, #16]
    30ec:	ldr	x21, [sp, #32]
    30f0:	ldp	x29, x30, [sp], #48
    30f4:	ret
    30f8:	ldr	x1, [x21, #128]
    30fc:	ldr	x0, [x19, #128]
    3100:	ldr	x2, [x1]
    3104:	add	x2, x2, #0x1
    3108:	str	x2, [x1]
    310c:	str	x1, [x19, #128]
    3110:	cbz	x0, 3124 <PyThread_free_lock@plt+0x1114>
    3114:	ldr	x1, [x0]
    3118:	sub	x1, x1, #0x1
    311c:	str	x1, [x0]
    3120:	cbz	x1, 31fc <PyThread_free_lock@plt+0x11ec>
    3124:	ldr	x1, [x21, #136]
    3128:	ldr	x0, [x19, #136]
    312c:	ldr	x2, [x1]
    3130:	add	x2, x2, #0x1
    3134:	str	x2, [x1]
    3138:	str	x1, [x19, #136]
    313c:	cbz	x0, 3150 <PyThread_free_lock@plt+0x1140>
    3140:	ldr	x1, [x0]
    3144:	sub	x1, x1, #0x1
    3148:	str	x1, [x0]
    314c:	cbz	x1, 3204 <PyThread_free_lock@plt+0x11f4>
    3150:	ldr	x1, [x21, #152]
    3154:	cbz	x1, 3164 <PyThread_free_lock@plt+0x1154>
    3158:	ldr	x0, [x1]
    315c:	add	x0, x0, #0x1
    3160:	str	x0, [x1]
    3164:	ldr	x0, [x19, #152]
    3168:	str	x1, [x19, #152]
    316c:	cbz	x0, 3180 <PyThread_free_lock@plt+0x1170>
    3170:	ldr	x1, [x0]
    3174:	sub	x1, x1, #0x1
    3178:	str	x1, [x0]
    317c:	cbz	x1, 320c <PyThread_free_lock@plt+0x11fc>
    3180:	ldrb	w1, [x21, #144]
    3184:	mov	w0, #0x1                   	// #1
    3188:	strb	w1, [x19, #144]
    318c:	str	w0, [x19, #148]
    3190:	ldr	x0, [x21, #160]
    3194:	bl	1f20 <PyThread_release_lock@plt>
    3198:	mov	x0, x19
    319c:	ldp	x19, x20, [sp, #16]
    31a0:	ldr	x21, [sp, #32]
    31a4:	ldp	x29, x30, [sp], #48
    31a8:	ret
    31ac:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    31b0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    31b4:	add	x1, x1, #0x918
    31b8:	ldr	x0, [x0, #4032]
    31bc:	ldr	x0, [x0]
    31c0:	bl	1dc0 <PyErr_SetString@plt>
    31c4:	b	30c0 <PyThread_free_lock@plt+0x10b0>
    31c8:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    31cc:	add	x4, x4, #0x708
    31d0:	b	3064 <PyThread_free_lock@plt+0x1054>
    31d4:	cmn	w2, #0x3
    31d8:	b.eq	3220 <PyThread_free_lock@plt+0x1210>  // b.none
    31dc:	cmn	w2, #0x5
    31e0:	b.eq	3214 <PyThread_free_lock@plt+0x1204>  // b.none
    31e4:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    31e8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    31ec:	add	x3, x3, #0x938
    31f0:	add	x1, x1, #0x760
    31f4:	bl	1fe0 <PyErr_Format@plt>
    31f8:	b	30c0 <PyThread_free_lock@plt+0x10b0>
    31fc:	bl	1d80 <_Py_Dealloc@plt>
    3200:	b	3124 <PyThread_free_lock@plt+0x1114>
    3204:	bl	1d80 <_Py_Dealloc@plt>
    3208:	b	3150 <PyThread_free_lock@plt+0x1140>
    320c:	bl	1d80 <_Py_Dealloc@plt>
    3210:	b	3180 <PyThread_free_lock@plt+0x1170>
    3214:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3218:	add	x4, x4, #0x740
    321c:	b	3064 <PyThread_free_lock@plt+0x1054>
    3220:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3224:	add	x4, x4, #0x728
    3228:	b	3064 <PyThread_free_lock@plt+0x1054>
    322c:	nop
    3230:	b	2fe0 <PyThread_free_lock@plt+0xfd0>
    3234:	nop
    3238:	b	2fe0 <PyThread_free_lock@plt+0xfd0>
    323c:	nop
    3240:	b	2fe0 <PyThread_free_lock@plt+0xfd0>
    3244:	nop
    3248:	stp	x29, x30, [sp, #-48]!
    324c:	adrp	x1, 18000 <PyInit_zlib@@Base+0x12bd0>
    3250:	add	x1, x1, #0x1b0
    3254:	mov	x29, sp
    3258:	stp	x19, x20, [sp, #16]
    325c:	str	x21, [sp, #32]
    3260:	mov	x21, x0
    3264:	add	x0, x1, #0x1e0
    3268:	bl	2130 <PyThread_free_lock@plt+0x120>
    326c:	cbz	x0, 32f8 <PyThread_free_lock@plt+0x12e8>
    3270:	mov	x19, x0
    3274:	bl	1fa0 <PyEval_SaveThread@plt>
    3278:	mov	x20, x0
    327c:	mov	w1, #0x1                   	// #1
    3280:	ldr	x0, [x21, #160]
    3284:	bl	1da0 <PyThread_acquire_lock@plt>
    3288:	mov	x0, x20
    328c:	bl	1d10 <PyEval_RestoreThread@plt>
    3290:	add	x1, x21, #0x10
    3294:	add	x0, x19, #0x10
    3298:	bl	1f40 <deflateCopy@plt>
    329c:	mov	w2, w0
    32a0:	cmn	w0, #0x2
    32a4:	b.eq	3414 <PyThread_free_lock@plt+0x1404>  // b.none
    32a8:	cbz	w0, 3360 <PyThread_free_lock@plt+0x1350>
    32ac:	cmn	w0, #0x4
    32b0:	b.eq	3310 <PyThread_free_lock@plt+0x1300>  // b.none
    32b4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    32b8:	cmn	w2, #0x6
    32bc:	ldr	x0, [x0, #2464]
    32c0:	b.eq	3430 <PyThread_free_lock@plt+0x1420>  // b.none
    32c4:	ldr	x4, [x21, #64]
    32c8:	cbz	x4, 343c <PyThread_free_lock@plt+0x142c>
    32cc:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    32d0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    32d4:	add	x3, x3, #0x990
    32d8:	add	x1, x1, #0x770
    32dc:	bl	1fe0 <PyErr_Format@plt>
    32e0:	ldr	x0, [x21, #160]
    32e4:	bl	1f20 <PyThread_release_lock@plt>
    32e8:	ldr	x0, [x19]
    32ec:	sub	x0, x0, #0x1
    32f0:	str	x0, [x19]
    32f4:	cbz	x0, 3340 <PyThread_free_lock@plt+0x1330>
    32f8:	mov	x19, #0x0                   	// #0
    32fc:	mov	x0, x19
    3300:	ldp	x19, x20, [sp, #16]
    3304:	ldr	x21, [sp, #32]
    3308:	ldp	x29, x30, [sp], #48
    330c:	ret
    3310:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3314:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3318:	add	x1, x1, #0x960
    331c:	ldr	x0, [x0, #4024]
    3320:	ldr	x0, [x0]
    3324:	bl	1dc0 <PyErr_SetString@plt>
    3328:	ldr	x0, [x21, #160]
    332c:	bl	1f20 <PyThread_release_lock@plt>
    3330:	ldr	x0, [x19]
    3334:	sub	x0, x0, #0x1
    3338:	str	x0, [x19]
    333c:	cbnz	x0, 32f8 <PyThread_free_lock@plt+0x12e8>
    3340:	mov	x0, x19
    3344:	mov	x19, #0x0                   	// #0
    3348:	bl	1d80 <_Py_Dealloc@plt>
    334c:	mov	x0, x19
    3350:	ldp	x19, x20, [sp, #16]
    3354:	ldr	x21, [sp, #32]
    3358:	ldp	x29, x30, [sp], #48
    335c:	ret
    3360:	ldr	x1, [x21, #128]
    3364:	ldr	x0, [x19, #128]
    3368:	ldr	x2, [x1]
    336c:	add	x2, x2, #0x1
    3370:	str	x2, [x1]
    3374:	str	x1, [x19, #128]
    3378:	cbz	x0, 338c <PyThread_free_lock@plt+0x137c>
    337c:	ldr	x1, [x0]
    3380:	sub	x1, x1, #0x1
    3384:	str	x1, [x0]
    3388:	cbz	x1, 3464 <PyThread_free_lock@plt+0x1454>
    338c:	ldr	x1, [x21, #136]
    3390:	ldr	x0, [x19, #136]
    3394:	ldr	x2, [x1]
    3398:	add	x2, x2, #0x1
    339c:	str	x2, [x1]
    33a0:	str	x1, [x19, #136]
    33a4:	cbz	x0, 33b8 <PyThread_free_lock@plt+0x13a8>
    33a8:	ldr	x1, [x0]
    33ac:	sub	x1, x1, #0x1
    33b0:	str	x1, [x0]
    33b4:	cbz	x1, 346c <PyThread_free_lock@plt+0x145c>
    33b8:	ldr	x1, [x21, #152]
    33bc:	cbz	x1, 33cc <PyThread_free_lock@plt+0x13bc>
    33c0:	ldr	x0, [x1]
    33c4:	add	x0, x0, #0x1
    33c8:	str	x0, [x1]
    33cc:	ldr	x0, [x19, #152]
    33d0:	str	x1, [x19, #152]
    33d4:	cbz	x0, 33e8 <PyThread_free_lock@plt+0x13d8>
    33d8:	ldr	x1, [x0]
    33dc:	sub	x1, x1, #0x1
    33e0:	str	x1, [x0]
    33e4:	cbz	x1, 3474 <PyThread_free_lock@plt+0x1464>
    33e8:	ldrb	w1, [x21, #144]
    33ec:	mov	w0, #0x1                   	// #1
    33f0:	strb	w1, [x19, #144]
    33f4:	str	w0, [x19, #148]
    33f8:	ldr	x0, [x21, #160]
    33fc:	bl	1f20 <PyThread_release_lock@plt>
    3400:	mov	x0, x19
    3404:	ldp	x19, x20, [sp, #16]
    3408:	ldr	x21, [sp, #32]
    340c:	ldp	x29, x30, [sp], #48
    3410:	ret
    3414:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3418:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    341c:	add	x1, x1, #0x918
    3420:	ldr	x0, [x0, #4032]
    3424:	ldr	x0, [x0]
    3428:	bl	1dc0 <PyErr_SetString@plt>
    342c:	b	3328 <PyThread_free_lock@plt+0x1318>
    3430:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3434:	add	x4, x4, #0x708
    3438:	b	32cc <PyThread_free_lock@plt+0x12bc>
    343c:	cmn	w2, #0x3
    3440:	b.eq	3488 <PyThread_free_lock@plt+0x1478>  // b.none
    3444:	cmn	w2, #0x5
    3448:	b.eq	347c <PyThread_free_lock@plt+0x146c>  // b.none
    344c:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3450:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3454:	add	x3, x3, #0x990
    3458:	add	x1, x1, #0x760
    345c:	bl	1fe0 <PyErr_Format@plt>
    3460:	b	3328 <PyThread_free_lock@plt+0x1318>
    3464:	bl	1d80 <_Py_Dealloc@plt>
    3468:	b	338c <PyThread_free_lock@plt+0x137c>
    346c:	bl	1d80 <_Py_Dealloc@plt>
    3470:	b	33b8 <PyThread_free_lock@plt+0x13a8>
    3474:	bl	1d80 <_Py_Dealloc@plt>
    3478:	b	33e8 <PyThread_free_lock@plt+0x13d8>
    347c:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3480:	add	x4, x4, #0x740
    3484:	b	32cc <PyThread_free_lock@plt+0x12bc>
    3488:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    348c:	add	x4, x4, #0x728
    3490:	b	32cc <PyThread_free_lock@plt+0x12bc>
    3494:	nop
    3498:	b	3248 <PyThread_free_lock@plt+0x1238>
    349c:	nop
    34a0:	b	3248 <PyThread_free_lock@plt+0x1238>
    34a4:	nop
    34a8:	b	3248 <PyThread_free_lock@plt+0x1238>
    34ac:	nop
    34b0:	sub	sp, sp, #0x150
    34b4:	stp	x29, x30, [sp, #16]
    34b8:	add	x29, sp, #0x10
    34bc:	stp	x19, x20, [sp, #32]
    34c0:	mov	x19, x1
    34c4:	mov	x1, x2
    34c8:	stp	x21, x22, [sp, #48]
    34cc:	cbz	x3, 363c <PyThread_free_lock@plt+0x162c>
    34d0:	ldr	x21, [x3, #16]
    34d4:	stp	xzr, xzr, [sp, #144]
    34d8:	add	x21, x2, x21
    34dc:	stp	xzr, xzr, [sp, #160]
    34e0:	stp	xzr, xzr, [sp, #176]
    34e4:	stp	xzr, xzr, [sp, #192]
    34e8:	stp	xzr, xzr, [sp, #208]
    34ec:	add	x0, sp, #0x80
    34f0:	str	x0, [sp]
    34f4:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    34f8:	add	x4, x4, #0x1b0
    34fc:	mov	x0, x19
    3500:	add	x4, x4, #0x380
    3504:	mov	w7, #0x0                   	// #0
    3508:	mov	w6, #0x2                   	// #2
    350c:	mov	w5, #0x1                   	// #1
    3510:	mov	x2, #0x0                   	// #0
    3514:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    3518:	mov	x19, x0
    351c:	cbz	x0, 3670 <PyThread_free_lock@plt+0x1660>
    3520:	ldr	x0, [x19]
    3524:	add	x20, sp, #0x90
    3528:	mov	x1, x20
    352c:	mov	w2, #0x0                   	// #0
    3530:	bl	1f30 <PyObject_GetBuffer@plt>
    3534:	cbnz	w0, 3670 <PyThread_free_lock@plt+0x1660>
    3538:	mov	x0, x20
    353c:	mov	w1, #0x43                  	// #67
    3540:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3544:	cbz	w0, 3844 <PyThread_free_lock@plt+0x1834>
    3548:	cmp	x21, #0x1
    354c:	b.eq	369c <PyThread_free_lock@plt+0x168c>  // b.none
    3550:	ldr	x0, [x19, #8]
    3554:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    3558:	ldr	x1, [x1, #4008]
    355c:	ldr	x0, [x0, #8]
    3560:	cmp	x0, x1
    3564:	b.eq	36b4 <PyThread_free_lock@plt+0x16a4>  // b.none
    3568:	bl	1fd0 <PyType_IsSubtype@plt>
    356c:	cbnz	w0, 36b4 <PyThread_free_lock@plt+0x16a4>
    3570:	ldr	x0, [x19, #8]
    3574:	bl	1ff0 <_PyLong_AsInt@plt>
    3578:	mov	w1, w0
    357c:	cmn	w0, #0x1
    3580:	b.eq	3668 <PyThread_free_lock@plt+0x1658>  // b.none
    3584:	stp	x23, x24, [sp, #64]
    3588:	adrp	x5, 2000 <deflateSetDictionary@plt>
    358c:	ldr	x6, [sp, #144]
    3590:	add	x5, x5, #0x100
    3594:	adrp	x4, 2000 <deflateSetDictionary@plt>
    3598:	add	x4, x4, #0xf8
    359c:	add	x20, sp, #0xe0
    35a0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    35a4:	mov	x0, x20
    35a8:	add	x2, x2, #0x850
    35ac:	mov	w3, #0x70                  	// #112
    35b0:	str	xzr, [sp, #120]
    35b4:	str	x6, [sp, #224]
    35b8:	stp	x5, x4, [sp, #288]
    35bc:	str	xzr, [sp, #304]
    35c0:	ldr	x24, [sp, #160]
    35c4:	bl	1e50 <deflateInit_@plt>
    35c8:	mov	w19, w0
    35cc:	cmn	w0, #0x2
    35d0:	b.eq	381c <PyThread_free_lock@plt+0x180c>  // b.none
    35d4:	cbz	w0, 36d4 <PyThread_free_lock@plt+0x16c4>
    35d8:	cmn	w0, #0x4
    35dc:	b.eq	3800 <PyThread_free_lock@plt+0x17f0>  // b.none
    35e0:	mov	x0, x20
    35e4:	bl	1f10 <deflateEnd@plt>
    35e8:	cmn	w19, #0x6
    35ec:	b.eq	386c <PyThread_free_lock@plt+0x185c>  // b.none
    35f0:	ldr	x4, [sp, #272]
    35f4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    35f8:	ldr	x0, [x0, #2464]
    35fc:	cbz	x4, 3880 <PyThread_free_lock@plt+0x1870>
    3600:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3604:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3608:	mov	w2, w19
    360c:	add	x3, x3, #0x808
    3610:	add	x1, x1, #0x770
    3614:	bl	1fe0 <PyErr_Format@plt>
    3618:	ldr	x0, [sp, #120]
    361c:	mov	x19, #0x0                   	// #0
    3620:	cbz	x0, 3634 <PyThread_free_lock@plt+0x1624>
    3624:	ldr	x1, [x0]
    3628:	sub	x1, x1, #0x1
    362c:	str	x1, [x0]
    3630:	cbz	x1, 36a8 <PyThread_free_lock@plt+0x1698>
    3634:	ldp	x23, x24, [sp, #64]
    3638:	b	3674 <PyThread_free_lock@plt+0x1664>
    363c:	stp	xzr, xzr, [sp, #144]
    3640:	sub	x0, x2, #0x1
    3644:	mov	x21, x2
    3648:	stp	xzr, xzr, [sp, #160]
    364c:	cmp	x0, #0x1
    3650:	stp	xzr, xzr, [sp, #176]
    3654:	stp	xzr, xzr, [sp, #192]
    3658:	stp	xzr, xzr, [sp, #208]
    365c:	b.hi	34ec <PyThread_free_lock@plt+0x14dc>  // b.pmore
    3660:	cbnz	x19, 3520 <PyThread_free_lock@plt+0x1510>
    3664:	b	34ec <PyThread_free_lock@plt+0x14dc>
    3668:	bl	1eb0 <PyErr_Occurred@plt>
    366c:	cbz	x0, 369c <PyThread_free_lock@plt+0x168c>
    3670:	mov	x19, #0x0                   	// #0
    3674:	ldr	x0, [sp, #152]
    3678:	cbz	x0, 3684 <PyThread_free_lock@plt+0x1674>
    367c:	add	x0, sp, #0x90
    3680:	bl	1d20 <PyBuffer_Release@plt>
    3684:	mov	x0, x19
    3688:	ldp	x29, x30, [sp, #16]
    368c:	ldp	x19, x20, [sp, #32]
    3690:	ldp	x21, x22, [sp, #48]
    3694:	add	sp, sp, #0x150
    3698:	ret
    369c:	mov	w1, #0xffffffff            	// #-1
    36a0:	stp	x23, x24, [sp, #64]
    36a4:	b	3588 <PyThread_free_lock@plt+0x1578>
    36a8:	bl	1d80 <_Py_Dealloc@plt>
    36ac:	ldp	x23, x24, [sp, #64]
    36b0:	b	3674 <PyThread_free_lock@plt+0x1664>
    36b4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    36b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    36bc:	mov	x19, #0x0                   	// #0
    36c0:	add	x1, x1, #0x7b8
    36c4:	ldr	x0, [x0, #4040]
    36c8:	ldr	x0, [x0]
    36cc:	bl	1dc0 <PyErr_SetString@plt>
    36d0:	b	3674 <PyThread_free_lock@plt+0x1664>
    36d4:	stp	x27, x28, [sp, #96]
    36d8:	add	x27, sp, #0x78
    36dc:	mov	x28, #0x4000                	// #16384
    36e0:	mov	x21, #0xffffffff            	// #4294967295
    36e4:	stp	x25, x26, [sp, #80]
    36e8:	mov	w25, #0xffffffff            	// #-1
    36ec:	cmp	x24, x21
    36f0:	b.ls	3834 <PyThread_free_lock@plt+0x1824>  // b.plast
    36f4:	sub	x24, x24, x21
    36f8:	mov	w22, #0x0                   	// #0
    36fc:	str	w25, [sp, #232]
    3700:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
    3704:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    3708:	b	3748 <PyThread_free_lock@plt+0x1738>
    370c:	str	x0, [sp, #248]
    3710:	str	w25, [sp, #256]
    3714:	bl	1fa0 <PyEval_SaveThread@plt>
    3718:	mov	x19, x0
    371c:	mov	w1, w22
    3720:	mov	x0, x20
    3724:	bl	1dd0 <deflate@plt>
    3728:	mov	w2, w0
    372c:	mov	x0, x19
    3730:	mov	w19, w2
    3734:	bl	1d10 <PyEval_RestoreThread@plt>
    3738:	cmn	w19, #0x2
    373c:	b.eq	38ac <PyThread_free_lock@plt+0x189c>  // b.none
    3740:	ldr	w0, [sp, #256]
    3744:	cbnz	w0, 38f4 <PyThread_free_lock@plt+0x18e4>
    3748:	ldr	x19, [sp, #120]
    374c:	cbz	x19, 37dc <PyThread_free_lock@plt+0x17cc>
    3750:	ldr	x0, [sp, #248]
    3754:	add	x19, x19, #0x20
    3758:	sub	x19, x0, x19
    375c:	sub	x1, x28, x19
    3760:	cmp	x28, x19
    3764:	b.eq	3780 <PyThread_free_lock@plt+0x1770>  // b.none
    3768:	cmp	x1, x21
    376c:	b.hi	370c <PyThread_free_lock@plt+0x16fc>  // b.pmore
    3770:	sub	w1, w28, w19
    3774:	str	x0, [sp, #248]
    3778:	str	w1, [sp, #256]
    377c:	b	3714 <PyThread_free_lock@plt+0x1704>
    3780:	cmp	x28, x23
    3784:	b.eq	37c4 <PyThread_free_lock@plt+0x17b4>  // b.none
    3788:	cmp	x28, x26
    378c:	lsl	x28, x28, #1
    3790:	csel	x28, x28, x23, le
    3794:	mov	x0, x27
    3798:	mov	x1, x28
    379c:	bl	1cf0 <_PyBytes_Resize@plt>
    37a0:	tbnz	w0, #31, 37c8 <PyThread_free_lock@plt+0x17b8>
    37a4:	ldr	x0, [sp, #120]
    37a8:	sub	x1, x28, x19
    37ac:	cmp	x1, x21
    37b0:	mov	w1, #0xffffffff            	// #-1
    37b4:	add	x0, x0, #0x20
    37b8:	add	x0, x0, x19
    37bc:	b.ls	3770 <PyThread_free_lock@plt+0x1760>  // b.plast
    37c0:	b	3774 <PyThread_free_lock@plt+0x1764>
    37c4:	bl	1d90 <PyErr_NoMemory@plt>
    37c8:	mov	x0, x20
    37cc:	bl	1f10 <deflateEnd@plt>
    37d0:	ldp	x25, x26, [sp, #80]
    37d4:	ldp	x27, x28, [sp, #96]
    37d8:	b	3618 <PyThread_free_lock@plt+0x1608>
    37dc:	mov	x1, x28
    37e0:	mov	x0, #0x0                   	// #0
    37e4:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    37e8:	str	x0, [sp, #120]
    37ec:	cbz	x0, 37c8 <PyThread_free_lock@plt+0x17b8>
    37f0:	add	x0, x0, #0x20
    37f4:	mov	x1, x28
    37f8:	mov	x19, #0x0                   	// #0
    37fc:	b	3768 <PyThread_free_lock@plt+0x1758>
    3800:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3804:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3808:	add	x1, x1, #0x9b8
    380c:	ldr	x0, [x0, #4024]
    3810:	ldr	x0, [x0]
    3814:	bl	1dc0 <PyErr_SetString@plt>
    3818:	b	3618 <PyThread_free_lock@plt+0x1608>
    381c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3820:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3824:	add	x1, x1, #0x9e0
    3828:	ldr	x0, [x0, #2464]
    382c:	bl	1dc0 <PyErr_SetString@plt>
    3830:	b	3618 <PyThread_free_lock@plt+0x1608>
    3834:	mov	w22, #0x4                   	// #4
    3838:	str	w24, [sp, #232]
    383c:	mov	x24, #0x0                   	// #0
    3840:	b	3700 <PyThread_free_lock@plt+0x16f0>
    3844:	ldr	x3, [x19]
    3848:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    384c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3850:	add	x2, x2, #0x790
    3854:	add	x1, x1, #0x7a8
    3858:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    385c:	mov	x19, #0x0                   	// #0
    3860:	add	x0, x0, #0x7f8
    3864:	bl	1e30 <_PyArg_BadArgument@plt>
    3868:	b	3674 <PyThread_free_lock@plt+0x1664>
    386c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3870:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3874:	add	x4, x4, #0x708
    3878:	ldr	x0, [x0, #2464]
    387c:	b	3600 <PyThread_free_lock@plt+0x15f0>
    3880:	cmn	w19, #0x3
    3884:	b.eq	3944 <PyThread_free_lock@plt+0x1934>  // b.none
    3888:	cmn	w19, #0x5
    388c:	b.eq	3938 <PyThread_free_lock@plt+0x1928>  // b.none
    3890:	mov	w2, w19
    3894:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3898:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    389c:	add	x3, x3, #0x808
    38a0:	add	x1, x1, #0x760
    38a4:	bl	1fe0 <PyErr_Format@plt>
    38a8:	b	3618 <PyThread_free_lock@plt+0x1608>
    38ac:	mov	x0, x20
    38b0:	bl	1f10 <deflateEnd@plt>
    38b4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    38b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    38bc:	ldr	x4, [sp, #272]
    38c0:	add	x1, x1, #0x6e8
    38c4:	ldr	x0, [x0, #2464]
    38c8:	cmp	x4, #0x0
    38cc:	csel	x4, x1, x4, eq  // eq = none
    38d0:	mov	w2, w19
    38d4:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    38d8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    38dc:	add	x3, x3, #0x808
    38e0:	add	x1, x1, #0x770
    38e4:	bl	1fe0 <PyErr_Format@plt>
    38e8:	ldp	x25, x26, [sp, #80]
    38ec:	ldp	x27, x28, [sp, #96]
    38f0:	b	3618 <PyThread_free_lock@plt+0x1608>
    38f4:	cbz	w22, 36ec <PyThread_free_lock@plt+0x16dc>
    38f8:	mov	x0, x20
    38fc:	bl	1f10 <deflateEnd@plt>
    3900:	mov	w1, w0
    3904:	cbnz	w0, 3950 <PyThread_free_lock@plt+0x1940>
    3908:	ldr	x1, [sp, #120]
    390c:	add	x0, sp, #0x78
    3910:	ldr	x2, [sp, #248]
    3914:	add	x1, x1, #0x20
    3918:	sub	x1, x2, x1
    391c:	bl	1cf0 <_PyBytes_Resize@plt>
    3920:	tbnz	w0, #31, 396c <PyThread_free_lock@plt+0x195c>
    3924:	ldp	x23, x24, [sp, #64]
    3928:	ldp	x25, x26, [sp, #80]
    392c:	ldp	x27, x28, [sp, #96]
    3930:	ldr	x19, [sp, #120]
    3934:	b	3674 <PyThread_free_lock@plt+0x1664>
    3938:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    393c:	add	x4, x4, #0x740
    3940:	b	3600 <PyThread_free_lock@plt+0x15f0>
    3944:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3948:	add	x4, x4, #0x728
    394c:	b	3600 <PyThread_free_lock@plt+0x15f0>
    3950:	ldr	x0, [sp, #272]
    3954:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    3958:	add	x2, x2, #0x9f8
    395c:	bl	22b8 <PyThread_free_lock@plt+0x2a8>
    3960:	ldp	x25, x26, [sp, #80]
    3964:	ldp	x27, x28, [sp, #96]
    3968:	b	3618 <PyThread_free_lock@plt+0x1608>
    396c:	ldp	x25, x26, [sp, #80]
    3970:	ldp	x27, x28, [sp, #96]
    3974:	b	3618 <PyThread_free_lock@plt+0x1608>
    3978:	sub	sp, sp, #0x150
    397c:	stp	x29, x30, [sp, #16]
    3980:	add	x29, sp, #0x10
    3984:	stp	x19, x20, [sp, #32]
    3988:	mov	x19, x1
    398c:	mov	x1, x2
    3990:	cbz	x3, 3b50 <PyThread_free_lock@plt+0x1b40>
    3994:	ldr	x20, [x3, #16]
    3998:	stp	xzr, xzr, [sp, #144]
    399c:	add	x20, x2, x20
    39a0:	stp	xzr, xzr, [sp, #160]
    39a4:	stp	xzr, xzr, [sp, #176]
    39a8:	stp	xzr, xzr, [sp, #192]
    39ac:	stp	xzr, xzr, [sp, #208]
    39b0:	add	x0, sp, #0x78
    39b4:	str	x0, [sp]
    39b8:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    39bc:	add	x4, x4, #0x1b0
    39c0:	mov	x0, x19
    39c4:	add	x4, x4, #0x3c0
    39c8:	mov	w7, #0x0                   	// #0
    39cc:	mov	w6, #0x3                   	// #3
    39d0:	mov	w5, #0x1                   	// #1
    39d4:	mov	x2, #0x0                   	// #0
    39d8:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    39dc:	mov	x19, x0
    39e0:	cbz	x0, 3b8c <PyThread_free_lock@plt+0x1b7c>
    39e4:	stp	x21, x22, [sp, #48]
    39e8:	add	x21, sp, #0x90
    39ec:	ldr	x0, [x19]
    39f0:	mov	x1, x21
    39f4:	mov	w2, #0x0                   	// #0
    39f8:	bl	1f30 <PyObject_GetBuffer@plt>
    39fc:	cbnz	w0, 3b88 <PyThread_free_lock@plt+0x1b78>
    3a00:	mov	x0, x21
    3a04:	mov	w1, #0x43                  	// #67
    3a08:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3a0c:	cbz	w0, 3dbc <PyThread_free_lock@plt+0x1dac>
    3a10:	cmp	x20, #0x1
    3a14:	b.eq	3bc0 <PyThread_free_lock@plt+0x1bb0>  // b.none
    3a18:	ldr	x0, [x19, #8]
    3a1c:	cbz	x0, 3da4 <PyThread_free_lock@plt+0x1d94>
    3a20:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    3a24:	ldr	x0, [x0, #8]
    3a28:	ldr	x1, [x1, #4008]
    3a2c:	cmp	x0, x1
    3a30:	b.eq	3d08 <PyThread_free_lock@plt+0x1cf8>  // b.none
    3a34:	bl	1fd0 <PyType_IsSubtype@plt>
    3a38:	cbnz	w0, 3d08 <PyThread_free_lock@plt+0x1cf8>
    3a3c:	ldr	x0, [x19, #8]
    3a40:	bl	1ff0 <_PyLong_AsInt@plt>
    3a44:	mov	w21, w0
    3a48:	cmn	w0, #0x1
    3a4c:	b.eq	3b7c <PyThread_free_lock@plt+0x1b6c>  // b.none
    3a50:	cmp	x20, #0x2
    3a54:	b.eq	3e5c <PyThread_free_lock@plt+0x1e4c>  // b.none
    3a58:	ldr	x0, [x19, #16]
    3a5c:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    3a60:	mov	x20, x0
    3a64:	cbz	x0, 3b88 <PyThread_free_lock@plt+0x1b78>
    3a68:	bl	1e20 <PyLong_AsSsize_t@plt>
    3a6c:	mov	x19, x0
    3a70:	ldr	x1, [x20]
    3a74:	sub	x0, x1, #0x1
    3a78:	str	x0, [x20]
    3a7c:	cbz	x0, 3de8 <PyThread_free_lock@plt+0x1dd8>
    3a80:	cmn	x19, #0x1
    3a84:	b.eq	3eb4 <PyThread_free_lock@plt+0x1ea4>  // b.none
    3a88:	str	xzr, [sp, #112]
    3a8c:	cmp	x19, #0x0
    3a90:	b.lt	3ec0 <PyThread_free_lock@plt+0x1eb0>  // b.tstop
    3a94:	csinc	x19, x19, xzr, ne  // ne = any
    3a98:	stp	x27, x28, [sp, #96]
    3a9c:	adrp	x5, 2000 <deflateSetDictionary@plt>
    3aa0:	ldr	x6, [sp, #144]
    3aa4:	add	x5, x5, #0x100
    3aa8:	adrp	x4, 2000 <deflateSetDictionary@plt>
    3aac:	add	x4, x4, #0xf8
    3ab0:	add	x27, sp, #0xe0
    3ab4:	mov	w1, w21
    3ab8:	mov	x0, x27
    3abc:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    3ac0:	mov	w3, #0x70                  	// #112
    3ac4:	add	x2, x2, #0x850
    3ac8:	str	x6, [sp, #224]
    3acc:	str	wzr, [sp, #232]
    3ad0:	stp	x5, x4, [sp, #288]
    3ad4:	str	xzr, [sp, #304]
    3ad8:	ldr	x21, [sp, #160]
    3adc:	bl	1f80 <inflateInit2_@plt>
    3ae0:	mov	w20, w0
    3ae4:	cmn	w0, #0x4
    3ae8:	b.eq	3d2c <PyThread_free_lock@plt+0x1d1c>  // b.none
    3aec:	cbz	w0, 3bd4 <PyThread_free_lock@plt+0x1bc4>
    3af0:	mov	x0, x27
    3af4:	bl	1e90 <inflateEnd@plt>
    3af8:	cmn	w20, #0x6
    3afc:	b.eq	3ea0 <PyThread_free_lock@plt+0x1e90>  // b.none
    3b00:	ldr	x4, [sp, #272]
    3b04:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3b08:	ldr	x0, [x0, #2464]
    3b0c:	cbz	x4, 3e6c <PyThread_free_lock@plt+0x1e5c>
    3b10:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3b14:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3b18:	mov	w2, w20
    3b1c:	add	x3, x3, #0xa70
    3b20:	add	x1, x1, #0x770
    3b24:	bl	1fe0 <PyErr_Format@plt>
    3b28:	ldr	x0, [sp, #112]
    3b2c:	mov	x19, #0x0                   	// #0
    3b30:	cbz	x0, 3b44 <PyThread_free_lock@plt+0x1b34>
    3b34:	ldr	x1, [x0]
    3b38:	sub	x1, x1, #0x1
    3b3c:	str	x1, [x0]
    3b40:	cbz	x1, 3d9c <PyThread_free_lock@plt+0x1d8c>
    3b44:	ldp	x21, x22, [sp, #48]
    3b48:	ldp	x27, x28, [sp, #96]
    3b4c:	b	3b90 <PyThread_free_lock@plt+0x1b80>
    3b50:	stp	xzr, xzr, [sp, #144]
    3b54:	sub	x0, x2, #0x1
    3b58:	cmp	x0, #0x2
    3b5c:	stp	xzr, xzr, [sp, #160]
    3b60:	stp	xzr, xzr, [sp, #176]
    3b64:	stp	xzr, xzr, [sp, #192]
    3b68:	stp	xzr, xzr, [sp, #208]
    3b6c:	b.hi	3b74 <PyThread_free_lock@plt+0x1b64>  // b.pmore
    3b70:	cbnz	x19, 3bb4 <PyThread_free_lock@plt+0x1ba4>
    3b74:	mov	x20, x1
    3b78:	b	39b0 <PyThread_free_lock@plt+0x19a0>
    3b7c:	bl	1eb0 <PyErr_Occurred@plt>
    3b80:	cbz	x0, 3a50 <PyThread_free_lock@plt+0x1a40>
    3b84:	nop
    3b88:	ldp	x21, x22, [sp, #48]
    3b8c:	mov	x19, #0x0                   	// #0
    3b90:	ldr	x0, [sp, #152]
    3b94:	cbz	x0, 3ba0 <PyThread_free_lock@plt+0x1b90>
    3b98:	add	x0, sp, #0x90
    3b9c:	bl	1d20 <PyBuffer_Release@plt>
    3ba0:	mov	x0, x19
    3ba4:	ldp	x29, x30, [sp, #16]
    3ba8:	ldp	x19, x20, [sp, #32]
    3bac:	add	sp, sp, #0x150
    3bb0:	ret
    3bb4:	mov	x20, x2
    3bb8:	stp	x21, x22, [sp, #48]
    3bbc:	b	39e8 <PyThread_free_lock@plt+0x19d8>
    3bc0:	mov	w21, #0xf                   	// #15
    3bc4:	mov	x19, #0x4000                	// #16384
    3bc8:	stp	x27, x28, [sp, #96]
    3bcc:	str	xzr, [sp, #112]
    3bd0:	b	3a9c <PyThread_free_lock@plt+0x1a8c>
    3bd4:	stp	x23, x24, [sp, #64]
    3bd8:	add	x24, sp, #0x70
    3bdc:	mov	w22, #0xffffffff            	// #-1
    3be0:	stp	x25, x26, [sp, #80]
    3be4:	mov	x26, #0xffffffff            	// #4294967295
    3be8:	cmp	x21, x26
    3bec:	b.ls	3dac <PyThread_free_lock@plt+0x1d9c>  // b.plast
    3bf0:	sub	x21, x21, x26
    3bf4:	mov	w23, #0x0                   	// #0
    3bf8:	str	w22, [sp, #232]
    3bfc:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
    3c00:	ldr	x20, [sp, #112]
    3c04:	cbz	x20, 3efc <PyThread_free_lock@plt+0x1eec>
    3c08:	ldr	x0, [sp, #248]
    3c0c:	add	x20, x20, #0x20
    3c10:	sub	x20, x0, x20
    3c14:	sub	x1, x19, x20
    3c18:	cmp	x19, x20
    3c1c:	b.eq	3d48 <PyThread_free_lock@plt+0x1d38>  // b.none
    3c20:	cmp	x1, x26
    3c24:	b.ls	3d8c <PyThread_free_lock@plt+0x1d7c>  // b.plast
    3c28:	str	x0, [sp, #248]
    3c2c:	str	w22, [sp, #256]
    3c30:	bl	1fa0 <PyEval_SaveThread@plt>
    3c34:	mov	x28, x0
    3c38:	mov	w1, w23
    3c3c:	mov	x0, x27
    3c40:	bl	1d00 <inflate@plt>
    3c44:	mov	w20, w0
    3c48:	mov	x0, x28
    3c4c:	bl	1d10 <PyEval_RestoreThread@plt>
    3c50:	cmn	w20, #0x4
    3c54:	b.eq	3df4 <PyThread_free_lock@plt+0x1de4>  // b.none
    3c58:	cmn	w20, #0x3
    3c5c:	b.ge	3cac <PyThread_free_lock@plt+0x1c9c>  // b.tcont
    3c60:	cmn	w20, #0x5
    3c64:	b.eq	3e20 <PyThread_free_lock@plt+0x1e10>  // b.none
    3c68:	mov	x0, x27
    3c6c:	bl	1e90 <inflateEnd@plt>
    3c70:	cmn	w20, #0x6
    3c74:	b.ne	3f50 <PyThread_free_lock@plt+0x1f40>  // b.any
    3c78:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3c7c:	add	x4, x4, #0x708
    3c80:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3c84:	mov	w2, w20
    3c88:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3c8c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3c90:	ldr	x0, [x0, #2464]
    3c94:	add	x3, x3, #0xa98
    3c98:	add	x1, x1, #0x770
    3c9c:	bl	1fe0 <PyErr_Format@plt>
    3ca0:	ldp	x23, x24, [sp, #64]
    3ca4:	ldp	x25, x26, [sp, #80]
    3ca8:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3cac:	cmp	w20, #0x1
    3cb0:	b.ls	3e20 <PyThread_free_lock@plt+0x1e10>  // b.plast
    3cb4:	mov	x0, x27
    3cb8:	bl	1e90 <inflateEnd@plt>
    3cbc:	ldr	x4, [sp, #272]
    3cc0:	cbnz	x4, 3c80 <PyThread_free_lock@plt+0x1c70>
    3cc4:	cmn	w20, #0x3
    3cc8:	b.eq	3f44 <PyThread_free_lock@plt+0x1f34>  // b.none
    3ccc:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3cd0:	cmn	w20, #0x2
    3cd4:	add	x4, x4, #0x6e8
    3cd8:	b.eq	3c80 <PyThread_free_lock@plt+0x1c70>  // b.none
    3cdc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3ce0:	mov	w2, w20
    3ce4:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3ce8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3cec:	ldr	x0, [x0, #2464]
    3cf0:	add	x3, x3, #0xa98
    3cf4:	add	x1, x1, #0x760
    3cf8:	bl	1fe0 <PyErr_Format@plt>
    3cfc:	ldp	x23, x24, [sp, #64]
    3d00:	ldp	x25, x26, [sp, #80]
    3d04:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3d08:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3d0c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3d10:	mov	x19, #0x0                   	// #0
    3d14:	add	x1, x1, #0x7b8
    3d18:	ldr	x0, [x0, #4040]
    3d1c:	ldr	x0, [x0]
    3d20:	bl	1dc0 <PyErr_SetString@plt>
    3d24:	ldp	x21, x22, [sp, #48]
    3d28:	b	3b90 <PyThread_free_lock@plt+0x1b80>
    3d2c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3d30:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3d34:	add	x1, x1, #0xa48
    3d38:	ldr	x0, [x0, #4024]
    3d3c:	ldr	x0, [x0]
    3d40:	bl	1dc0 <PyErr_SetString@plt>
    3d44:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3d48:	cmp	x19, x25
    3d4c:	b.eq	3ee4 <PyThread_free_lock@plt+0x1ed4>  // b.none
    3d50:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    3d54:	cmp	x19, x0
    3d58:	lsl	x19, x19, #1
    3d5c:	mov	x0, x24
    3d60:	csel	x19, x19, x25, le
    3d64:	mov	x1, x19
    3d68:	bl	1cf0 <_PyBytes_Resize@plt>
    3d6c:	tbnz	w0, #31, 3ee8 <PyThread_free_lock@plt+0x1ed8>
    3d70:	ldr	x0, [sp, #112]
    3d74:	sub	x1, x19, x20
    3d78:	cmp	x1, x26
    3d7c:	mov	w1, #0xffffffff            	// #-1
    3d80:	add	x0, x0, #0x20
    3d84:	add	x0, x0, x20
    3d88:	b.hi	3d90 <PyThread_free_lock@plt+0x1d80>  // b.pmore
    3d8c:	sub	w1, w19, w20
    3d90:	str	x0, [sp, #248]
    3d94:	str	w1, [sp, #256]
    3d98:	b	3c30 <PyThread_free_lock@plt+0x1c20>
    3d9c:	bl	1d80 <_Py_Dealloc@plt>
    3da0:	b	3b44 <PyThread_free_lock@plt+0x1b34>
    3da4:	mov	w21, #0xf                   	// #15
    3da8:	b	3a58 <PyThread_free_lock@plt+0x1a48>
    3dac:	mov	w23, #0x4                   	// #4
    3db0:	str	w21, [sp, #232]
    3db4:	mov	x21, #0x0                   	// #0
    3db8:	b	3bfc <PyThread_free_lock@plt+0x1bec>
    3dbc:	ldr	x3, [x19]
    3dc0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    3dc4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3dc8:	add	x2, x2, #0x790
    3dcc:	add	x1, x1, #0x7a8
    3dd0:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    3dd4:	mov	x19, #0x0                   	// #0
    3dd8:	add	x0, x0, #0xa18
    3ddc:	bl	1e30 <_PyArg_BadArgument@plt>
    3de0:	ldp	x21, x22, [sp, #48]
    3de4:	b	3b90 <PyThread_free_lock@plt+0x1b80>
    3de8:	mov	x0, x20
    3dec:	bl	1d80 <_Py_Dealloc@plt>
    3df0:	b	3a80 <PyThread_free_lock@plt+0x1a70>
    3df4:	mov	x0, x27
    3df8:	bl	1e90 <inflateEnd@plt>
    3dfc:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3e00:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3e04:	add	x1, x1, #0xa48
    3e08:	ldr	x0, [x0, #4024]
    3e0c:	ldr	x0, [x0]
    3e10:	bl	1dc0 <PyErr_SetString@plt>
    3e14:	ldp	x23, x24, [sp, #64]
    3e18:	ldp	x25, x26, [sp, #80]
    3e1c:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3e20:	ldr	w0, [sp, #256]
    3e24:	cbz	w0, 3c00 <PyThread_free_lock@plt+0x1bf0>
    3e28:	cmp	w20, #0x1
    3e2c:	b.eq	3f5c <PyThread_free_lock@plt+0x1f4c>  // b.none
    3e30:	cbnz	x21, 3be8 <PyThread_free_lock@plt+0x1bd8>
    3e34:	mov	x0, x27
    3e38:	bl	1e90 <inflateEnd@plt>
    3e3c:	ldr	x0, [sp, #272]
    3e40:	mov	w1, w20
    3e44:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    3e48:	add	x2, x2, #0xa98
    3e4c:	bl	22b8 <PyThread_free_lock@plt+0x2a8>
    3e50:	ldp	x23, x24, [sp, #64]
    3e54:	ldp	x25, x26, [sp, #80]
    3e58:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3e5c:	mov	x19, #0x4000                	// #16384
    3e60:	stp	x27, x28, [sp, #96]
    3e64:	str	xzr, [sp, #112]
    3e68:	b	3a9c <PyThread_free_lock@plt+0x1a8c>
    3e6c:	cmn	w20, #0x3
    3e70:	b.eq	3f38 <PyThread_free_lock@plt+0x1f28>  // b.none
    3e74:	cmn	w20, #0x2
    3e78:	b.eq	3f20 <PyThread_free_lock@plt+0x1f10>  // b.none
    3e7c:	cmn	w20, #0x5
    3e80:	b.eq	3f2c <PyThread_free_lock@plt+0x1f1c>  // b.none
    3e84:	mov	w2, w20
    3e88:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    3e8c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3e90:	add	x3, x3, #0xa70
    3e94:	add	x1, x1, #0x760
    3e98:	bl	1fe0 <PyErr_Format@plt>
    3e9c:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3ea0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    3ea4:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3ea8:	add	x4, x4, #0x708
    3eac:	ldr	x0, [x0, #2464]
    3eb0:	b	3b10 <PyThread_free_lock@plt+0x1b00>
    3eb4:	bl	1eb0 <PyErr_Occurred@plt>
    3eb8:	cbnz	x0, 3b88 <PyThread_free_lock@plt+0x1b78>
    3ebc:	str	xzr, [sp, #112]
    3ec0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    3ec4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    3ec8:	mov	x19, #0x0                   	// #0
    3ecc:	add	x1, x1, #0xa28
    3ed0:	ldr	x0, [x0, #4032]
    3ed4:	ldr	x0, [x0]
    3ed8:	bl	1dc0 <PyErr_SetString@plt>
    3edc:	ldp	x21, x22, [sp, #48]
    3ee0:	b	3b90 <PyThread_free_lock@plt+0x1b80>
    3ee4:	bl	1d90 <PyErr_NoMemory@plt>
    3ee8:	mov	x0, x27
    3eec:	bl	1e90 <inflateEnd@plt>
    3ef0:	ldp	x23, x24, [sp, #64]
    3ef4:	ldp	x25, x26, [sp, #80]
    3ef8:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3efc:	mov	x1, x19
    3f00:	mov	x0, #0x0                   	// #0
    3f04:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3f08:	str	x0, [sp, #112]
    3f0c:	cbz	x0, 3ee8 <PyThread_free_lock@plt+0x1ed8>
    3f10:	add	x0, x0, #0x20
    3f14:	mov	x1, x19
    3f18:	mov	x20, #0x0                   	// #0
    3f1c:	b	3c20 <PyThread_free_lock@plt+0x1c10>
    3f20:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3f24:	add	x4, x4, #0x6e8
    3f28:	b	3b10 <PyThread_free_lock@plt+0x1b00>
    3f2c:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3f30:	add	x4, x4, #0x740
    3f34:	b	3b10 <PyThread_free_lock@plt+0x1b00>
    3f38:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3f3c:	add	x4, x4, #0x728
    3f40:	b	3b10 <PyThread_free_lock@plt+0x1b00>
    3f44:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    3f48:	add	x4, x4, #0x728
    3f4c:	b	3c80 <PyThread_free_lock@plt+0x1c70>
    3f50:	ldr	x4, [sp, #272]
    3f54:	cbnz	x4, 3c80 <PyThread_free_lock@plt+0x1c70>
    3f58:	b	3ccc <PyThread_free_lock@plt+0x1cbc>
    3f5c:	mov	x0, x27
    3f60:	bl	1e90 <inflateEnd@plt>
    3f64:	mov	w1, w0
    3f68:	cbnz	w0, 3fa0 <PyThread_free_lock@plt+0x1f90>
    3f6c:	ldr	x1, [sp, #112]
    3f70:	add	x0, sp, #0x70
    3f74:	ldr	x2, [sp, #248]
    3f78:	add	x1, x1, #0x20
    3f7c:	sub	x1, x2, x1
    3f80:	bl	1cf0 <_PyBytes_Resize@plt>
    3f84:	tbnz	w0, #31, 3fbc <PyThread_free_lock@plt+0x1fac>
    3f88:	ldp	x21, x22, [sp, #48]
    3f8c:	ldp	x23, x24, [sp, #64]
    3f90:	ldp	x25, x26, [sp, #80]
    3f94:	ldp	x27, x28, [sp, #96]
    3f98:	ldr	x19, [sp, #112]
    3f9c:	b	3b90 <PyThread_free_lock@plt+0x1b80>
    3fa0:	ldr	x0, [sp, #272]
    3fa4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    3fa8:	add	x2, x2, #0xab8
    3fac:	bl	22b8 <PyThread_free_lock@plt+0x2a8>
    3fb0:	ldp	x23, x24, [sp, #64]
    3fb4:	ldp	x25, x26, [sp, #80]
    3fb8:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3fbc:	ldp	x23, x24, [sp, #64]
    3fc0:	ldp	x25, x26, [sp, #80]
    3fc4:	b	3b28 <PyThread_free_lock@plt+0x1b18>
    3fc8:	sub	sp, sp, #0xf0
    3fcc:	mov	x0, x3
    3fd0:	stp	x29, x30, [sp, #16]
    3fd4:	add	x29, sp, #0x10
    3fd8:	stp	x19, x20, [sp, #32]
    3fdc:	mov	x19, x1
    3fe0:	mov	x1, x2
    3fe4:	stp	x21, x22, [sp, #48]
    3fe8:	stp	x23, x24, [sp, #64]
    3fec:	str	x25, [sp, #80]
    3ff0:	cbz	x3, 41ec <PyThread_free_lock@plt+0x21dc>
    3ff4:	ldr	x21, [x3, #16]
    3ff8:	stp	xzr, xzr, [sp, #160]
    3ffc:	add	x21, x2, x21
    4000:	stp	xzr, xzr, [sp, #176]
    4004:	stp	xzr, xzr, [sp, #192]
    4008:	stp	xzr, xzr, [sp, #208]
    400c:	stp	xzr, xzr, [sp, #224]
    4010:	add	x2, sp, #0x70
    4014:	str	x2, [sp]
    4018:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    401c:	add	x4, x4, #0x1b0
    4020:	mov	x3, x0
    4024:	add	x4, x4, #0x400
    4028:	mov	x0, x19
    402c:	mov	w7, #0x0                   	// #0
    4030:	mov	w6, #0x6                   	// #6
    4034:	mov	w5, #0x0                   	// #0
    4038:	mov	x2, #0x0                   	// #0
    403c:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4040:	mov	x19, x0
    4044:	cbz	x0, 4318 <PyThread_free_lock@plt+0x2308>
    4048:	cbz	x21, 4218 <PyThread_free_lock@plt+0x2208>
    404c:	ldr	x0, [x19]
    4050:	cbz	x0, 436c <PyThread_free_lock@plt+0x235c>
    4054:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    4058:	ldr	x0, [x0, #8]
    405c:	ldr	x1, [x1, #4008]
    4060:	cmp	x0, x1
    4064:	b.eq	434c <PyThread_free_lock@plt+0x233c>  // b.none
    4068:	bl	1fd0 <PyType_IsSubtype@plt>
    406c:	mov	w20, w0
    4070:	cbnz	w0, 434c <PyThread_free_lock@plt+0x233c>
    4074:	ldr	x0, [x19]
    4078:	bl	1ff0 <_PyLong_AsInt@plt>
    407c:	mov	w22, w0
    4080:	cmn	w0, #0x1
    4084:	b.eq	430c <PyThread_free_lock@plt+0x22fc>  // b.none
    4088:	subs	x21, x21, #0x1
    408c:	b.eq	4380 <PyThread_free_lock@plt+0x2370>  // b.none
    4090:	ldr	x0, [x19, #8]
    4094:	cbz	x0, 4378 <PyThread_free_lock@plt+0x2368>
    4098:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    409c:	ldr	x0, [x0, #8]
    40a0:	ldr	x1, [x1, #4008]
    40a4:	cmp	x0, x1
    40a8:	b.eq	434c <PyThread_free_lock@plt+0x233c>  // b.none
    40ac:	bl	1fd0 <PyType_IsSubtype@plt>
    40b0:	mov	w20, w0
    40b4:	cbnz	w0, 434c <PyThread_free_lock@plt+0x233c>
    40b8:	ldr	x0, [x19, #8]
    40bc:	bl	1ff0 <_PyLong_AsInt@plt>
    40c0:	mov	w23, w0
    40c4:	cmn	w0, #0x1
    40c8:	b.eq	44a4 <PyThread_free_lock@plt+0x2494>  // b.none
    40cc:	subs	x21, x21, #0x1
    40d0:	b.eq	4470 <PyThread_free_lock@plt+0x2460>  // b.none
    40d4:	ldr	x0, [x19, #16]
    40d8:	cbz	x0, 440c <PyThread_free_lock@plt+0x23fc>
    40dc:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    40e0:	ldr	x0, [x0, #8]
    40e4:	ldr	x1, [x1, #4008]
    40e8:	cmp	x0, x1
    40ec:	b.eq	434c <PyThread_free_lock@plt+0x233c>  // b.none
    40f0:	bl	1fd0 <PyType_IsSubtype@plt>
    40f4:	mov	w20, w0
    40f8:	cbnz	w0, 434c <PyThread_free_lock@plt+0x233c>
    40fc:	ldr	x0, [x19, #16]
    4100:	bl	1ff0 <_PyLong_AsInt@plt>
    4104:	mov	w25, w0
    4108:	cmn	w0, #0x1
    410c:	b.eq	44b8 <PyThread_free_lock@plt+0x24a8>  // b.none
    4110:	subs	x21, x21, #0x1
    4114:	b.eq	44b0 <PyThread_free_lock@plt+0x24a0>  // b.none
    4118:	ldr	x0, [x19, #24]
    411c:	cbz	x0, 449c <PyThread_free_lock@plt+0x248c>
    4120:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    4124:	ldr	x0, [x0, #8]
    4128:	ldr	x1, [x1, #4008]
    412c:	cmp	x0, x1
    4130:	b.eq	434c <PyThread_free_lock@plt+0x233c>  // b.none
    4134:	bl	1fd0 <PyType_IsSubtype@plt>
    4138:	mov	w20, w0
    413c:	cbnz	w0, 434c <PyThread_free_lock@plt+0x233c>
    4140:	ldr	x0, [x19, #24]
    4144:	bl	1ff0 <_PyLong_AsInt@plt>
    4148:	mov	w24, w0
    414c:	cmn	w0, #0x1
    4150:	b.eq	4464 <PyThread_free_lock@plt+0x2454>  // b.none
    4154:	subs	x21, x21, #0x1
    4158:	b.eq	422c <PyThread_free_lock@plt+0x221c>  // b.none
    415c:	ldr	x0, [x19, #32]
    4160:	cbz	x0, 44c4 <PyThread_free_lock@plt+0x24b4>
    4164:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    4168:	ldr	x0, [x0, #8]
    416c:	ldr	x1, [x1, #4008]
    4170:	cmp	x0, x1
    4174:	b.eq	434c <PyThread_free_lock@plt+0x233c>  // b.none
    4178:	bl	1fd0 <PyType_IsSubtype@plt>
    417c:	cbnz	w0, 434c <PyThread_free_lock@plt+0x233c>
    4180:	ldr	x0, [x19, #32]
    4184:	bl	1ff0 <_PyLong_AsInt@plt>
    4188:	mov	w20, w0
    418c:	cmn	w0, #0x1
    4190:	b.eq	44d8 <PyThread_free_lock@plt+0x24c8>  // b.none
    4194:	cmp	x21, #0x1
    4198:	b.eq	422c <PyThread_free_lock@plt+0x221c>  // b.none
    419c:	ldr	x0, [x19, #40]
    41a0:	add	x21, sp, #0xa0
    41a4:	mov	x1, x21
    41a8:	mov	w2, #0x0                   	// #0
    41ac:	bl	1f30 <PyObject_GetBuffer@plt>
    41b0:	cbnz	w0, 4318 <PyThread_free_lock@plt+0x2308>
    41b4:	mov	x0, x21
    41b8:	mov	w1, #0x43                  	// #67
    41bc:	bl	1d60 <PyBuffer_IsContiguous@plt>
    41c0:	cbnz	w0, 422c <PyThread_free_lock@plt+0x221c>
    41c4:	ldr	x3, [x19, #40]
    41c8:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    41cc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    41d0:	add	x2, x2, #0x790
    41d4:	add	x1, x1, #0xad8
    41d8:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    41dc:	mov	x19, #0x0                   	// #0
    41e0:	add	x0, x0, #0xaf0
    41e4:	bl	1e30 <_PyArg_BadArgument@plt>
    41e8:	b	431c <PyThread_free_lock@plt+0x230c>
    41ec:	stp	xzr, xzr, [sp, #160]
    41f0:	stp	xzr, xzr, [sp, #176]
    41f4:	stp	xzr, xzr, [sp, #192]
    41f8:	stp	xzr, xzr, [sp, #208]
    41fc:	stp	xzr, xzr, [sp, #224]
    4200:	tbnz	x2, #63, 44f0 <PyThread_free_lock@plt+0x24e0>
    4204:	cmp	x19, #0x0
    4208:	mov	x21, x2
    420c:	ccmp	x2, #0x6, #0x0, ne  // ne = any
    4210:	b.gt	4010 <PyThread_free_lock@plt+0x2000>
    4214:	cbnz	x21, 404c <PyThread_free_lock@plt+0x203c>
    4218:	mov	w24, #0x8                   	// #8
    421c:	mov	w23, w24
    4220:	mov	w20, #0x0                   	// #0
    4224:	mov	w25, #0xf                   	// #15
    4228:	mov	w22, #0xffffffff            	// #-1
    422c:	ldr	x0, [sp, #160]
    4230:	cbz	x0, 4244 <PyThread_free_lock@plt+0x2234>
    4234:	ldr	x1, [sp, #176]
    4238:	mov	x0, #0xffffffff            	// #4294967295
    423c:	cmp	x1, x0
    4240:	b.hi	447c <PyThread_free_lock@plt+0x246c>  // b.pmore
    4244:	adrp	x1, 18000 <PyInit_zlib@@Base+0x12bd0>
    4248:	add	x1, x1, #0x1b0
    424c:	add	x0, x1, #0x1e0
    4250:	bl	2130 <PyThread_free_lock@plt+0x120>
    4254:	mov	x19, x0
    4258:	cbz	x0, 4318 <PyThread_free_lock@plt+0x2308>
    425c:	adrp	x1, 2000 <deflateSetDictionary@plt>
    4260:	adrp	x0, 2000 <deflateSetDictionary@plt>
    4264:	add	x1, x1, #0x100
    4268:	add	x0, x0, #0xf8
    426c:	str	xzr, [x19, #16]
    4270:	mov	w2, w23
    4274:	str	wzr, [x19, #24]
    4278:	add	x21, x19, #0x10
    427c:	stp	x1, x0, [x19, #80]
    4280:	mov	w5, w20
    4284:	mov	w4, w24
    4288:	str	xzr, [x19, #96]
    428c:	mov	w3, w25
    4290:	mov	w1, w22
    4294:	mov	x0, x21
    4298:	adrp	x6, 5000 <PyThread_free_lock@plt+0x2ff0>
    429c:	mov	w7, #0x70                  	// #112
    42a0:	add	x6, x6, #0x850
    42a4:	bl	1e00 <deflateInit2_@plt>
    42a8:	mov	w2, w0
    42ac:	cmn	w0, #0x2
    42b0:	b.eq	4390 <PyThread_free_lock@plt+0x2380>  // b.none
    42b4:	cbz	w0, 43c8 <PyThread_free_lock@plt+0x23b8>
    42b8:	cmn	w0, #0x4
    42bc:	b.eq	43ac <PyThread_free_lock@plt+0x239c>  // b.none
    42c0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    42c4:	cmn	w2, #0x6
    42c8:	ldr	x0, [x0, #2464]
    42cc:	b.eq	4414 <PyThread_free_lock@plt+0x2404>  // b.none
    42d0:	ldr	x4, [x19, #64]
    42d4:	cbz	x4, 4420 <PyThread_free_lock@plt+0x2410>
    42d8:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    42dc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    42e0:	add	x3, x3, #0xb30
    42e4:	add	x1, x1, #0x770
    42e8:	bl	1fe0 <PyErr_Format@plt>
    42ec:	ldr	x0, [x19]
    42f0:	sub	x0, x0, #0x1
    42f4:	str	x0, [x19]
    42f8:	cbnz	x0, 4318 <PyThread_free_lock@plt+0x2308>
    42fc:	mov	x0, x19
    4300:	mov	x19, #0x0                   	// #0
    4304:	bl	1d80 <_Py_Dealloc@plt>
    4308:	b	431c <PyThread_free_lock@plt+0x230c>
    430c:	bl	1eb0 <PyErr_Occurred@plt>
    4310:	cbz	x0, 4088 <PyThread_free_lock@plt+0x2078>
    4314:	nop
    4318:	mov	x19, #0x0                   	// #0
    431c:	ldr	x0, [sp, #168]
    4320:	cbz	x0, 432c <PyThread_free_lock@plt+0x231c>
    4324:	add	x0, sp, #0xa0
    4328:	bl	1d20 <PyBuffer_Release@plt>
    432c:	mov	x0, x19
    4330:	ldp	x29, x30, [sp, #16]
    4334:	ldp	x19, x20, [sp, #32]
    4338:	ldp	x21, x22, [sp, #48]
    433c:	ldp	x23, x24, [sp, #64]
    4340:	ldr	x25, [sp, #80]
    4344:	add	sp, sp, #0xf0
    4348:	ret
    434c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    4350:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4354:	mov	x19, #0x0                   	// #0
    4358:	add	x1, x1, #0x7b8
    435c:	ldr	x0, [x0, #4040]
    4360:	ldr	x0, [x0]
    4364:	bl	1dc0 <PyErr_SetString@plt>
    4368:	b	431c <PyThread_free_lock@plt+0x230c>
    436c:	ldr	x0, [x19, #8]
    4370:	mov	w22, #0xffffffff            	// #-1
    4374:	cbnz	x0, 4098 <PyThread_free_lock@plt+0x2088>
    4378:	mov	w23, #0x8                   	// #8
    437c:	b	40d4 <PyThread_free_lock@plt+0x20c4>
    4380:	mov	w24, #0x8                   	// #8
    4384:	mov	w25, #0xf                   	// #15
    4388:	mov	w23, w24
    438c:	b	422c <PyThread_free_lock@plt+0x221c>
    4390:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    4394:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4398:	add	x1, x1, #0x8a0
    439c:	ldr	x0, [x0, #4032]
    43a0:	ldr	x0, [x0]
    43a4:	bl	1dc0 <PyErr_SetString@plt>
    43a8:	b	42ec <PyThread_free_lock@plt+0x22dc>
    43ac:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    43b0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    43b4:	add	x1, x1, #0x960
    43b8:	ldr	x0, [x0, #4024]
    43bc:	ldr	x0, [x0]
    43c0:	bl	1dc0 <PyErr_SetString@plt>
    43c4:	b	42ec <PyThread_free_lock@plt+0x22dc>
    43c8:	ldr	x1, [sp, #160]
    43cc:	mov	w0, #0x1                   	// #1
    43d0:	str	w0, [x19, #148]
    43d4:	cbz	x1, 431c <PyThread_free_lock@plt+0x230c>
    43d8:	ldr	w2, [sp, #176]
    43dc:	mov	x0, x21
    43e0:	bl	2000 <deflateSetDictionary@plt>
    43e4:	cmn	w0, #0x2
    43e8:	b.eq	4448 <PyThread_free_lock@plt+0x2438>  // b.none
    43ec:	cbz	w0, 431c <PyThread_free_lock@plt+0x230c>
    43f0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    43f4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    43f8:	add	x1, x1, #0xb18
    43fc:	ldr	x0, [x0, #4032]
    4400:	ldr	x0, [x0]
    4404:	bl	1dc0 <PyErr_SetString@plt>
    4408:	b	42ec <PyThread_free_lock@plt+0x22dc>
    440c:	mov	w25, #0xf                   	// #15
    4410:	b	4118 <PyThread_free_lock@plt+0x2108>
    4414:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4418:	add	x4, x4, #0x708
    441c:	b	42d8 <PyThread_free_lock@plt+0x22c8>
    4420:	cmn	w2, #0x3
    4424:	b.eq	44e4 <PyThread_free_lock@plt+0x24d4>  // b.none
    4428:	cmn	w2, #0x5
    442c:	b.eq	44cc <PyThread_free_lock@plt+0x24bc>  // b.none
    4430:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    4434:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4438:	add	x3, x3, #0xb30
    443c:	add	x1, x1, #0x760
    4440:	bl	1fe0 <PyErr_Format@plt>
    4444:	b	42ec <PyThread_free_lock@plt+0x22dc>
    4448:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    444c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4450:	add	x1, x1, #0xb00
    4454:	ldr	x0, [x0, #4032]
    4458:	ldr	x0, [x0]
    445c:	bl	1dc0 <PyErr_SetString@plt>
    4460:	b	42ec <PyThread_free_lock@plt+0x22dc>
    4464:	bl	1eb0 <PyErr_Occurred@plt>
    4468:	cbz	x0, 4154 <PyThread_free_lock@plt+0x2144>
    446c:	b	4318 <PyThread_free_lock@plt+0x2308>
    4470:	mov	w24, #0x8                   	// #8
    4474:	mov	w25, #0xf                   	// #15
    4478:	b	422c <PyThread_free_lock@plt+0x221c>
    447c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    4480:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4484:	mov	x19, #0x0                   	// #0
    4488:	add	x1, x1, #0x858
    448c:	ldr	x0, [x0, #4056]
    4490:	ldr	x0, [x0]
    4494:	bl	1dc0 <PyErr_SetString@plt>
    4498:	b	431c <PyThread_free_lock@plt+0x230c>
    449c:	mov	w24, #0x8                   	// #8
    44a0:	b	415c <PyThread_free_lock@plt+0x214c>
    44a4:	bl	1eb0 <PyErr_Occurred@plt>
    44a8:	cbz	x0, 40cc <PyThread_free_lock@plt+0x20bc>
    44ac:	b	4318 <PyThread_free_lock@plt+0x2308>
    44b0:	mov	w24, #0x8                   	// #8
    44b4:	b	422c <PyThread_free_lock@plt+0x221c>
    44b8:	bl	1eb0 <PyErr_Occurred@plt>
    44bc:	cbz	x0, 4110 <PyThread_free_lock@plt+0x2100>
    44c0:	b	4318 <PyThread_free_lock@plt+0x2308>
    44c4:	mov	w20, #0x0                   	// #0
    44c8:	b	419c <PyThread_free_lock@plt+0x218c>
    44cc:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    44d0:	add	x4, x4, #0x740
    44d4:	b	42d8 <PyThread_free_lock@plt+0x22c8>
    44d8:	bl	1eb0 <PyErr_Occurred@plt>
    44dc:	cbz	x0, 4194 <PyThread_free_lock@plt+0x2184>
    44e0:	b	4318 <PyThread_free_lock@plt+0x2308>
    44e4:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    44e8:	add	x4, x4, #0x728
    44ec:	b	42d8 <PyThread_free_lock@plt+0x22c8>
    44f0:	add	x0, sp, #0x70
    44f4:	str	x0, [sp]
    44f8:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    44fc:	add	x4, x4, #0x1b0
    4500:	mov	x0, x19
    4504:	add	x4, x4, #0x400
    4508:	mov	w7, #0x0                   	// #0
    450c:	mov	w6, #0x6                   	// #6
    4510:	mov	w5, #0x0                   	// #0
    4514:	mov	x2, #0x0                   	// #0
    4518:	str	x1, [sp, #104]
    451c:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4520:	mov	x19, x0
    4524:	cbz	x0, 4318 <PyThread_free_lock@plt+0x2308>
    4528:	ldr	x1, [sp, #104]
    452c:	mov	x21, x1
    4530:	b	404c <PyThread_free_lock@plt+0x203c>
    4534:	nop
    4538:	stp	x29, x30, [sp, #-288]!
    453c:	cmp	x2, #0x1
    4540:	mov	x29, sp
    4544:	stp	x19, x20, [sp, #16]
    4548:	mov	x20, x2
    454c:	mov	x19, x0
    4550:	stp	x21, x22, [sp, #32]
    4554:	mov	x21, x1
    4558:	b.hi	4844 <PyThread_free_lock@plt+0x2834>  // b.pmore
    455c:	stp	x25, x26, [sp, #64]
    4560:	cmp	x20, #0x0
    4564:	b.le	486c <PyThread_free_lock@plt+0x285c>
    4568:	ldr	x0, [x21]
    456c:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    4570:	mov	x20, x0
    4574:	cbz	x0, 46f0 <PyThread_free_lock@plt+0x26e0>
    4578:	bl	1e20 <PyLong_AsSsize_t@plt>
    457c:	mov	x26, x0
    4580:	ldr	x1, [x20]
    4584:	sub	x0, x1, #0x1
    4588:	str	x0, [x20]
    458c:	cbz	x0, 48c0 <PyThread_free_lock@plt+0x28b0>
    4590:	cmn	x26, #0x1
    4594:	b.eq	46e4 <PyThread_free_lock@plt+0x26d4>  // b.none
    4598:	str	xzr, [sp, #120]
    459c:	cmp	x26, #0x0
    45a0:	b.le	48d0 <PyThread_free_lock@plt+0x28c0>
    45a4:	ldr	x0, [x19, #136]
    45a8:	add	x25, sp, #0x80
    45ac:	mov	x1, x25
    45b0:	mov	w2, #0x0                   	// #0
    45b4:	bl	1f30 <PyObject_GetBuffer@plt>
    45b8:	cmn	w0, #0x1
    45bc:	b.eq	4890 <PyThread_free_lock@plt+0x2880>  // b.none
    45c0:	stp	x23, x24, [sp, #48]
    45c4:	mov	x20, x19
    45c8:	add	x24, sp, #0xd0
    45cc:	stp	x27, x28, [sp, #80]
    45d0:	bl	1fa0 <PyEval_SaveThread@plt>
    45d4:	mov	x21, x0
    45d8:	ldr	x0, [x19, #160]
    45dc:	mov	w1, #0x1                   	// #1
    45e0:	add	x28, sp, #0x78
    45e4:	bl	1da0 <PyThread_acquire_lock@plt>
    45e8:	mov	x0, x21
    45ec:	bl	1d10 <PyEval_RestoreThread@plt>
    45f0:	ldr	x22, [sp, #144]
    45f4:	mov	x21, #0xffffffff            	// #4294967295
    45f8:	ldr	x0, [sp, #128]
    45fc:	str	x0, [x20, #16]!
    4600:	cmp	x22, x21
    4604:	b.ls	48a8 <PyThread_free_lock@plt+0x2898>  // b.plast
    4608:	sub	x22, x22, x21
    460c:	mov	w0, #0xffffffff            	// #-1
    4610:	mov	w27, #0x0                   	// #0
    4614:	str	w0, [x19, #24]
    4618:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
    461c:	nop
    4620:	ldr	x2, [sp, #120]
    4624:	cbz	x2, 4708 <PyThread_free_lock@plt+0x26f8>
    4628:	ldr	x0, [x19, #40]
    462c:	add	x2, x2, #0x20
    4630:	sub	x2, x0, x2
    4634:	sub	x1, x26, x2
    4638:	cmp	x26, x2
    463c:	b.eq	47b0 <PyThread_free_lock@plt+0x27a0>  // b.none
    4640:	cmp	x1, x21
    4644:	sub	w2, w26, w2
    4648:	csinv	w2, w2, wzr, ls  // ls = plast
    464c:	str	x0, [x19, #40]
    4650:	str	w2, [x19, #48]
    4654:	bl	1fa0 <PyEval_SaveThread@plt>
    4658:	mov	x2, x0
    465c:	mov	w1, w27
    4660:	mov	x0, x20
    4664:	str	x2, [sp, #104]
    4668:	bl	1d00 <inflate@plt>
    466c:	mov	w3, w0
    4670:	ldr	x2, [sp, #104]
    4674:	str	w3, [sp, #104]
    4678:	mov	x0, x2
    467c:	bl	1d10 <PyEval_RestoreThread@plt>
    4680:	ldr	w3, [sp, #104]
    4684:	cmn	w3, #0x5
    4688:	b.eq	4694 <PyThread_free_lock@plt+0x2684>  // b.none
    468c:	cmp	w3, #0x1
    4690:	b.hi	472c <PyThread_free_lock@plt+0x271c>  // b.pmore
    4694:	ldr	w0, [x19, #48]
    4698:	cmp	w0, #0x0
    469c:	ccmp	w3, #0x2, #0x4, ne  // ne = any
    46a0:	b.eq	4620 <PyThread_free_lock@plt+0x2610>  // b.none
    46a4:	cmp	w3, #0x1
    46a8:	b.eq	4978 <PyThread_free_lock@plt+0x2968>  // b.none
    46ac:	cbnz	x22, 4600 <PyThread_free_lock@plt+0x25f0>
    46b0:	add	x2, x25, #0x10
    46b4:	mov	x1, x25
    46b8:	mov	x0, x19
    46bc:	bl	2750 <PyThread_free_lock@plt+0x740>
    46c0:	tbnz	w0, #31, 47f8 <PyThread_free_lock@plt+0x27e8>
    46c4:	ldr	x2, [x19, #40]
    46c8:	add	x0, sp, #0x78
    46cc:	ldr	x1, [sp, #120]
    46d0:	add	x1, x1, #0x20
    46d4:	sub	x1, x2, x1
    46d8:	bl	1cf0 <_PyBytes_Resize@plt>
    46dc:	cbnz	w0, 47f8 <PyThread_free_lock@plt+0x27e8>
    46e0:	b	4814 <PyThread_free_lock@plt+0x2804>
    46e4:	bl	1eb0 <PyErr_Occurred@plt>
    46e8:	cbz	x0, 48cc <PyThread_free_lock@plt+0x28bc>
    46ec:	nop
    46f0:	ldp	x25, x26, [sp, #64]
    46f4:	mov	x0, #0x0                   	// #0
    46f8:	ldp	x19, x20, [sp, #16]
    46fc:	ldp	x21, x22, [sp, #32]
    4700:	ldp	x29, x30, [sp], #288
    4704:	ret
    4708:	mov	x1, x26
    470c:	mov	x0, #0x0                   	// #0
    4710:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    4714:	str	x0, [sp, #120]
    4718:	cbz	x0, 4814 <PyThread_free_lock@plt+0x2804>
    471c:	add	x0, x0, #0x20
    4720:	mov	x1, x26
    4724:	mov	x2, #0x0                   	// #0
    4728:	b	4640 <PyThread_free_lock@plt+0x2630>
    472c:	cmp	w3, #0x2
    4730:	b.ne	46b0 <PyThread_free_lock@plt+0x26a0>  // b.any
    4734:	ldr	x0, [x19, #152]
    4738:	cbz	x0, 46b0 <PyThread_free_lock@plt+0x26a0>
    473c:	mov	x1, x24
    4740:	mov	w2, #0x0                   	// #0
    4744:	bl	1f30 <PyObject_GetBuffer@plt>
    4748:	cmn	w0, #0x1
    474c:	b.eq	47f8 <PyThread_free_lock@plt+0x27e8>  // b.none
    4750:	ldr	x2, [sp, #224]
    4754:	cmp	x2, x21
    4758:	b.hi	4900 <PyThread_free_lock@plt+0x28f0>  // b.pmore
    475c:	ldr	x1, [sp, #208]
    4760:	mov	x0, x20
    4764:	bl	1ed0 <inflateSetDictionary@plt>
    4768:	mov	w2, w0
    476c:	mov	x0, x24
    4770:	str	w2, [sp, #104]
    4774:	bl	1d20 <PyBuffer_Release@plt>
    4778:	ldr	w2, [sp, #104]
    477c:	cbz	w2, 4620 <PyThread_free_lock@plt+0x2610>
    4780:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    4784:	cmn	w2, #0x6
    4788:	ldr	x0, [x0, #2464]
    478c:	b.eq	4924 <PyThread_free_lock@plt+0x2914>  // b.none
    4790:	ldr	x4, [x19, #64]
    4794:	cbz	x4, 4930 <PyThread_free_lock@plt+0x2920>
    4798:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    479c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    47a0:	add	x3, x3, #0x888
    47a4:	add	x1, x1, #0x770
    47a8:	bl	1fe0 <PyErr_Format@plt>
    47ac:	b	47f8 <PyThread_free_lock@plt+0x27e8>
    47b0:	str	x2, [sp, #104]
    47b4:	cmp	x26, x23
    47b8:	b.eq	47f4 <PyThread_free_lock@plt+0x27e4>  // b.none
    47bc:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    47c0:	lsl	x4, x26, #1
    47c4:	cmp	x26, x0
    47c8:	mov	x0, x28
    47cc:	csel	x26, x4, x23, le
    47d0:	mov	x1, x26
    47d4:	bl	1cf0 <_PyBytes_Resize@plt>
    47d8:	tbnz	w0, #31, 47f8 <PyThread_free_lock@plt+0x27e8>
    47dc:	ldr	x0, [sp, #120]
    47e0:	ldr	x2, [sp, #104]
    47e4:	add	x0, x0, #0x20
    47e8:	sub	x1, x26, x2
    47ec:	add	x0, x0, x2
    47f0:	b	4640 <PyThread_free_lock@plt+0x2630>
    47f4:	bl	1d90 <PyErr_NoMemory@plt>
    47f8:	ldr	x0, [sp, #120]
    47fc:	cbz	x0, 4814 <PyThread_free_lock@plt+0x2804>
    4800:	ldr	x1, [x0]
    4804:	str	xzr, [sp, #120]
    4808:	sub	x1, x1, #0x1
    480c:	str	x1, [x0]
    4810:	cbz	x1, 48b8 <PyThread_free_lock@plt+0x28a8>
    4814:	mov	x0, x25
    4818:	bl	1d20 <PyBuffer_Release@plt>
    481c:	ldr	x0, [x19, #160]
    4820:	bl	1f20 <PyThread_release_lock@plt>
    4824:	ldp	x19, x20, [sp, #16]
    4828:	ldp	x21, x22, [sp, #32]
    482c:	ldp	x23, x24, [sp, #48]
    4830:	ldp	x25, x26, [sp, #64]
    4834:	ldp	x27, x28, [sp, #80]
    4838:	ldr	x0, [sp, #120]
    483c:	ldp	x29, x30, [sp], #288
    4840:	ret
    4844:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    4848:	mov	x1, x20
    484c:	add	x0, x0, #0xb58
    4850:	mov	x3, #0x1                   	// #1
    4854:	mov	x2, #0x0                   	// #0
    4858:	bl	1e80 <_PyArg_CheckPositional@plt>
    485c:	cbz	w0, 46f4 <PyThread_free_lock@plt+0x26e4>
    4860:	stp	x25, x26, [sp, #64]
    4864:	cmp	x20, #0x0
    4868:	b.gt	4568 <PyThread_free_lock@plt+0x2558>
    486c:	ldr	x0, [x19, #136]
    4870:	add	x25, sp, #0x80
    4874:	mov	x1, x25
    4878:	mov	w2, #0x0                   	// #0
    487c:	mov	x26, #0x4000                	// #16384
    4880:	str	xzr, [sp, #120]
    4884:	bl	1f30 <PyObject_GetBuffer@plt>
    4888:	cmn	w0, #0x1
    488c:	b.ne	45c0 <PyThread_free_lock@plt+0x25b0>  // b.any
    4890:	mov	x0, #0x0                   	// #0
    4894:	ldp	x19, x20, [sp, #16]
    4898:	ldp	x21, x22, [sp, #32]
    489c:	ldp	x25, x26, [sp, #64]
    48a0:	ldp	x29, x30, [sp], #288
    48a4:	ret
    48a8:	mov	w27, #0x4                   	// #4
    48ac:	str	w22, [x19, #24]
    48b0:	mov	x22, #0x0                   	// #0
    48b4:	b	4618 <PyThread_free_lock@plt+0x2608>
    48b8:	bl	1d80 <_Py_Dealloc@plt>
    48bc:	b	4814 <PyThread_free_lock@plt+0x2804>
    48c0:	mov	x0, x20
    48c4:	bl	1d80 <_Py_Dealloc@plt>
    48c8:	b	4590 <PyThread_free_lock@plt+0x2580>
    48cc:	str	xzr, [sp, #120]
    48d0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    48d4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    48d8:	add	x1, x1, #0xb60
    48dc:	ldr	x0, [x0, #4032]
    48e0:	ldr	x0, [x0]
    48e4:	bl	1dc0 <PyErr_SetString@plt>
    48e8:	mov	x0, #0x0                   	// #0
    48ec:	ldp	x19, x20, [sp, #16]
    48f0:	ldp	x21, x22, [sp, #32]
    48f4:	ldp	x25, x26, [sp, #64]
    48f8:	ldp	x29, x30, [sp], #288
    48fc:	ret
    4900:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    4904:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4908:	add	x1, x1, #0x858
    490c:	ldr	x0, [x0, #4056]
    4910:	ldr	x0, [x0]
    4914:	bl	1dc0 <PyErr_SetString@plt>
    4918:	mov	x0, x24
    491c:	bl	1d20 <PyBuffer_Release@plt>
    4920:	b	47f8 <PyThread_free_lock@plt+0x27e8>
    4924:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4928:	add	x4, x4, #0x708
    492c:	b	4798 <PyThread_free_lock@plt+0x2788>
    4930:	cmn	w2, #0x3
    4934:	b.eq	4a18 <PyThread_free_lock@plt+0x2a08>  // b.none
    4938:	cmn	w2, #0x2
    493c:	b.eq	4960 <PyThread_free_lock@plt+0x2950>  // b.none
    4940:	cmn	w2, #0x5
    4944:	b.eq	496c <PyThread_free_lock@plt+0x295c>  // b.none
    4948:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    494c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4950:	add	x3, x3, #0x888
    4954:	add	x1, x1, #0x760
    4958:	bl	1fe0 <PyErr_Format@plt>
    495c:	b	47f8 <PyThread_free_lock@plt+0x27e8>
    4960:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4964:	add	x4, x4, #0x6e8
    4968:	b	4798 <PyThread_free_lock@plt+0x2788>
    496c:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4970:	add	x4, x4, #0x740
    4974:	b	4798 <PyThread_free_lock@plt+0x2788>
    4978:	add	x2, x25, #0x10
    497c:	mov	x1, x25
    4980:	mov	x0, x19
    4984:	str	w3, [sp, #104]
    4988:	bl	2750 <PyThread_free_lock@plt+0x740>
    498c:	ldr	w3, [sp, #104]
    4990:	tbnz	w0, #31, 47f8 <PyThread_free_lock@plt+0x27e8>
    4994:	strb	w3, [x19, #144]
    4998:	mov	x0, x20
    499c:	str	wzr, [x19, #148]
    49a0:	bl	1e90 <inflateEnd@plt>
    49a4:	mov	w2, w0
    49a8:	cbz	w0, 46c4 <PyThread_free_lock@plt+0x26b4>
    49ac:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    49b0:	cmn	w2, #0x6
    49b4:	ldr	x0, [x0, #2464]
    49b8:	b.eq	49dc <PyThread_free_lock@plt+0x29cc>  // b.none
    49bc:	ldr	x4, [x19, #64]
    49c0:	cbz	x4, 49e8 <PyThread_free_lock@plt+0x29d8>
    49c4:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    49c8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    49cc:	add	x3, x3, #0xab8
    49d0:	add	x1, x1, #0x770
    49d4:	bl	1fe0 <PyErr_Format@plt>
    49d8:	b	47f8 <PyThread_free_lock@plt+0x27e8>
    49dc:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    49e0:	add	x4, x4, #0x708
    49e4:	b	49c4 <PyThread_free_lock@plt+0x29b4>
    49e8:	cmn	w2, #0x3
    49ec:	b.eq	4a3c <PyThread_free_lock@plt+0x2a2c>  // b.none
    49f0:	cmn	w2, #0x2
    49f4:	b.eq	4a30 <PyThread_free_lock@plt+0x2a20>  // b.none
    49f8:	cmn	w2, #0x5
    49fc:	b.eq	4a24 <PyThread_free_lock@plt+0x2a14>  // b.none
    4a00:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    4a04:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4a08:	add	x3, x3, #0xab8
    4a0c:	add	x1, x1, #0x760
    4a10:	bl	1fe0 <PyErr_Format@plt>
    4a14:	b	47f8 <PyThread_free_lock@plt+0x27e8>
    4a18:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4a1c:	add	x4, x4, #0x728
    4a20:	b	4798 <PyThread_free_lock@plt+0x2788>
    4a24:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4a28:	add	x4, x4, #0x740
    4a2c:	b	49c4 <PyThread_free_lock@plt+0x29b4>
    4a30:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4a34:	add	x4, x4, #0x6e8
    4a38:	b	49c4 <PyThread_free_lock@plt+0x29b4>
    4a3c:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4a40:	add	x4, x4, #0x728
    4a44:	b	49c4 <PyThread_free_lock@plt+0x29b4>
    4a48:	sub	sp, sp, #0x140
    4a4c:	stp	x29, x30, [sp, #16]
    4a50:	add	x29, sp, #0x10
    4a54:	stp	x19, x20, [sp, #32]
    4a58:	mov	x19, x0
    4a5c:	stp	x21, x22, [sp, #48]
    4a60:	mov	x21, x1
    4a64:	mov	x1, x2
    4a68:	cbz	x3, 4c40 <PyThread_free_lock@plt+0x2c30>
    4a6c:	ldr	x22, [x3, #16]
    4a70:	stp	xzr, xzr, [sp, #160]
    4a74:	add	x22, x2, x22
    4a78:	stp	xzr, xzr, [sp, #176]
    4a7c:	stp	xzr, xzr, [sp, #192]
    4a80:	stp	xzr, xzr, [sp, #208]
    4a84:	stp	xzr, xzr, [sp, #224]
    4a88:	add	x0, sp, #0x90
    4a8c:	str	x0, [sp]
    4a90:	adrp	x4, 18000 <PyInit_zlib@@Base+0x12bd0>
    4a94:	add	x4, x4, #0x1b0
    4a98:	mov	x0, x21
    4a9c:	add	x4, x4, #0x440
    4aa0:	mov	w7, #0x0                   	// #0
    4aa4:	mov	w6, #0x2                   	// #2
    4aa8:	mov	w5, #0x1                   	// #1
    4aac:	mov	x2, #0x0                   	// #0
    4ab0:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4ab4:	mov	x21, x0
    4ab8:	cbz	x0, 4c70 <PyThread_free_lock@plt+0x2c60>
    4abc:	stp	x23, x24, [sp, #64]
    4ac0:	add	x24, sp, #0xa0
    4ac4:	ldr	x0, [x21]
    4ac8:	mov	x1, x24
    4acc:	mov	w2, #0x0                   	// #0
    4ad0:	bl	1f30 <PyObject_GetBuffer@plt>
    4ad4:	mov	w20, w0
    4ad8:	cbnz	w0, 4c6c <PyThread_free_lock@plt+0x2c5c>
    4adc:	mov	x0, x24
    4ae0:	mov	w1, #0x43                  	// #67
    4ae4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    4ae8:	cbz	w0, 4eb0 <PyThread_free_lock@plt+0x2ea0>
    4aec:	stp	x25, x26, [sp, #80]
    4af0:	cmp	x22, #0x1
    4af4:	stp	x27, x28, [sp, #96]
    4af8:	b.eq	4e2c <PyThread_free_lock@plt+0x2e1c>  // b.none
    4afc:	ldr	x0, [x21, #8]
    4b00:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    4b04:	mov	x22, x0
    4b08:	cbz	x0, 4e5c <PyThread_free_lock@plt+0x2e4c>
    4b0c:	bl	1e20 <PyLong_AsSsize_t@plt>
    4b10:	mov	x21, x0
    4b14:	ldr	x1, [x22]
    4b18:	sub	x0, x1, #0x1
    4b1c:	str	x0, [x22]
    4b20:	cbz	x0, 4e50 <PyThread_free_lock@plt+0x2e40>
    4b24:	cmn	x21, #0x1
    4b28:	b.eq	4f08 <PyThread_free_lock@plt+0x2ef8>  // b.none
    4b2c:	str	xzr, [sp, #136]
    4b30:	cmp	x21, #0x0
    4b34:	b.lt	4f14 <PyThread_free_lock@plt+0x2f04>  // b.tstop
    4b38:	ldr	x0, [sp, #160]
    4b3c:	ldr	x26, [sp, #176]
    4b40:	b.eq	4e38 <PyThread_free_lock@plt+0x2e28>  // b.none
    4b44:	mov	x1, #0x3fff                	// #16383
    4b48:	cmp	x21, x1
    4b4c:	mov	x3, #0x4000                	// #16384
    4b50:	csel	x27, x21, x3, le
    4b54:	asr	x1, x21, #1
    4b58:	str	x0, [x19, #16]
    4b5c:	stp	x1, x21, [sp, #112]
    4b60:	bl	1fa0 <PyEval_SaveThread@plt>
    4b64:	mov	x23, x0
    4b68:	mov	w1, #0x1                   	// #1
    4b6c:	ldr	x0, [x19, #160]
    4b70:	add	x28, sp, #0x88
    4b74:	mov	x22, #0xffffffff            	// #4294967295
    4b78:	bl	1da0 <PyThread_acquire_lock@plt>
    4b7c:	mov	x0, x23
    4b80:	bl	1d10 <PyEval_RestoreThread@plt>
    4b84:	cmp	x26, x22
    4b88:	b.hi	4e20 <PyThread_free_lock@plt+0x2e10>  // b.pmore
    4b8c:	mov	w0, w26
    4b90:	mov	x26, #0x0                   	// #0
    4b94:	add	x25, sp, #0xf0
    4b98:	str	w0, [x19, #24]
    4b9c:	nop
    4ba0:	ldr	x23, [sp, #136]
    4ba4:	cbz	x23, 4ca8 <PyThread_free_lock@plt+0x2c98>
    4ba8:	ldr	x0, [x19, #40]
    4bac:	add	x23, x23, #0x20
    4bb0:	sub	x23, x0, x23
    4bb4:	sub	x1, x27, x23
    4bb8:	cmp	x27, x23
    4bbc:	b.eq	4db4 <PyThread_free_lock@plt+0x2da4>  // b.none
    4bc0:	cmp	x1, x22
    4bc4:	sub	w23, w27, w23
    4bc8:	csinv	w23, w23, wzr, ls  // ls = plast
    4bcc:	str	x0, [x19, #40]
    4bd0:	str	w23, [x19, #48]
    4bd4:	add	x23, x19, #0x10
    4bd8:	bl	1fa0 <PyEval_SaveThread@plt>
    4bdc:	mov	x20, x0
    4be0:	mov	w1, #0x2                   	// #2
    4be4:	mov	x0, x23
    4be8:	bl	1d00 <inflate@plt>
    4bec:	mov	w1, w0
    4bf0:	mov	x0, x20
    4bf4:	mov	w20, w1
    4bf8:	bl	1d10 <PyEval_RestoreThread@plt>
    4bfc:	cmn	w20, #0x5
    4c00:	b.eq	4d48 <PyThread_free_lock@plt+0x2d38>  // b.none
    4c04:	cmp	w20, #0x1
    4c08:	b.hi	4cc8 <PyThread_free_lock@plt+0x2cb8>  // b.pmore
    4c0c:	ldr	w0, [x19, #48]
    4c10:	cbz	w0, 4ba0 <PyThread_free_lock@plt+0x2b90>
    4c14:	cmp	w20, #0x2
    4c18:	b.eq	4ba0 <PyThread_free_lock@plt+0x2b90>  // b.none
    4c1c:	cmp	w20, #0x1
    4c20:	b.ne	4d50 <PyThread_free_lock@plt+0x2d40>  // b.any
    4c24:	mov	w3, w20
    4c28:	add	x2, x24, #0x10
    4c2c:	mov	x1, x24
    4c30:	mov	x0, x19
    4c34:	bl	2750 <PyThread_free_lock@plt+0x740>
    4c38:	tbz	w0, #31, 4efc <PyThread_free_lock@plt+0x2eec>
    4c3c:	b	4dfc <PyThread_free_lock@plt+0x2dec>
    4c40:	stp	xzr, xzr, [sp, #160]
    4c44:	sub	x0, x2, #0x1
    4c48:	cmp	x0, #0x1
    4c4c:	stp	xzr, xzr, [sp, #176]
    4c50:	stp	xzr, xzr, [sp, #192]
    4c54:	stp	xzr, xzr, [sp, #208]
    4c58:	stp	xzr, xzr, [sp, #224]
    4c5c:	b.hi	4c64 <PyThread_free_lock@plt+0x2c54>  // b.pmore
    4c60:	cbnz	x21, 4c9c <PyThread_free_lock@plt+0x2c8c>
    4c64:	mov	x22, x1
    4c68:	b	4a88 <PyThread_free_lock@plt+0x2a78>
    4c6c:	ldp	x23, x24, [sp, #64]
    4c70:	mov	x19, #0x0                   	// #0
    4c74:	ldr	x0, [sp, #168]
    4c78:	cbz	x0, 4c84 <PyThread_free_lock@plt+0x2c74>
    4c7c:	add	x0, sp, #0xa0
    4c80:	bl	1d20 <PyBuffer_Release@plt>
    4c84:	mov	x0, x19
    4c88:	ldp	x29, x30, [sp, #16]
    4c8c:	ldp	x19, x20, [sp, #32]
    4c90:	ldp	x21, x22, [sp, #48]
    4c94:	add	sp, sp, #0x140
    4c98:	ret
    4c9c:	mov	x22, x2
    4ca0:	stp	x23, x24, [sp, #64]
    4ca4:	b	4ac0 <PyThread_free_lock@plt+0x2ab0>
    4ca8:	mov	x1, x27
    4cac:	mov	x0, #0x0                   	// #0
    4cb0:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    4cb4:	str	x0, [sp, #136]
    4cb8:	cbz	x0, 4d98 <PyThread_free_lock@plt+0x2d88>
    4cbc:	add	x0, x0, #0x20
    4cc0:	mov	x1, x27
    4cc4:	b	4bc0 <PyThread_free_lock@plt+0x2bb0>
    4cc8:	cmp	w20, #0x2
    4ccc:	b.ne	4d58 <PyThread_free_lock@plt+0x2d48>  // b.any
    4cd0:	ldr	x0, [x19, #152]
    4cd4:	cbz	x0, 4e6c <PyThread_free_lock@plt+0x2e5c>
    4cd8:	mov	x1, x25
    4cdc:	mov	w2, #0x0                   	// #0
    4ce0:	bl	1f30 <PyObject_GetBuffer@plt>
    4ce4:	cmn	w0, #0x1
    4ce8:	b.eq	4dfc <PyThread_free_lock@plt+0x2dec>  // b.none
    4cec:	ldr	x2, [sp, #256]
    4cf0:	cmp	x2, x22
    4cf4:	b.hi	4f40 <PyThread_free_lock@plt+0x2f30>  // b.pmore
    4cf8:	ldr	x1, [sp, #240]
    4cfc:	mov	x0, x23
    4d00:	bl	1ed0 <inflateSetDictionary@plt>
    4d04:	mov	w23, w0
    4d08:	mov	x0, x25
    4d0c:	bl	1d20 <PyBuffer_Release@plt>
    4d10:	cbz	w23, 4c0c <PyThread_free_lock@plt+0x2bfc>
    4d14:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    4d18:	cmn	w23, #0x6
    4d1c:	ldr	x0, [x0, #2464]
    4d20:	b.eq	4f64 <PyThread_free_lock@plt+0x2f54>  // b.none
    4d24:	ldr	x4, [x19, #64]
    4d28:	cbz	x4, 4f8c <PyThread_free_lock@plt+0x2f7c>
    4d2c:	mov	w2, w23
    4d30:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    4d34:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4d38:	add	x3, x3, #0x888
    4d3c:	add	x1, x1, #0x770
    4d40:	bl	1fe0 <PyErr_Format@plt>
    4d44:	b	4dfc <PyThread_free_lock@plt+0x2dec>
    4d48:	ldr	w0, [x19, #48]
    4d4c:	cbz	w0, 4ba0 <PyThread_free_lock@plt+0x2b90>
    4d50:	cbnz	x26, 4b84 <PyThread_free_lock@plt+0x2b74>
    4d54:	nop
    4d58:	mov	w3, w20
    4d5c:	add	x2, x24, #0x10
    4d60:	mov	x1, x24
    4d64:	mov	x0, x19
    4d68:	bl	2750 <PyThread_free_lock@plt+0x740>
    4d6c:	tbnz	w0, #31, 4dfc <PyThread_free_lock@plt+0x2dec>
    4d70:	cmp	w20, #0x0
    4d74:	ccmn	w20, #0x5, #0x4, ne  // ne = any
    4d78:	b.ne	4fe4 <PyThread_free_lock@plt+0x2fd4>  // b.any
    4d7c:	ldr	x2, [x19, #40]
    4d80:	add	x0, sp, #0x88
    4d84:	ldr	x1, [sp, #136]
    4d88:	add	x1, x1, #0x20
    4d8c:	sub	x1, x2, x1
    4d90:	bl	1cf0 <_PyBytes_Resize@plt>
    4d94:	cbnz	w0, 4dfc <PyThread_free_lock@plt+0x2dec>
    4d98:	ldr	x0, [x19, #160]
    4d9c:	bl	1f20 <PyThread_release_lock@plt>
    4da0:	ldp	x23, x24, [sp, #64]
    4da4:	ldp	x25, x26, [sp, #80]
    4da8:	ldp	x27, x28, [sp, #96]
    4dac:	ldr	x19, [sp, #136]
    4db0:	b	4c74 <PyThread_free_lock@plt+0x2c64>
    4db4:	cmp	x27, x21
    4db8:	b.eq	4df0 <PyThread_free_lock@plt+0x2de0>  // b.none
    4dbc:	ldr	x0, [sp, #112]
    4dc0:	lsl	x3, x27, #1
    4dc4:	cmp	x27, x0
    4dc8:	mov	x0, x28
    4dcc:	csel	x27, x3, x21, le
    4dd0:	mov	x1, x27
    4dd4:	bl	1cf0 <_PyBytes_Resize@plt>
    4dd8:	tbnz	w0, #31, 4dfc <PyThread_free_lock@plt+0x2dec>
    4ddc:	ldr	x0, [sp, #136]
    4de0:	sub	x1, x27, x23
    4de4:	add	x0, x0, #0x20
    4de8:	add	x0, x0, x23
    4dec:	b	4bc0 <PyThread_free_lock@plt+0x2bb0>
    4df0:	ldr	x0, [sp, #120]
    4df4:	cbnz	x0, 4edc <PyThread_free_lock@plt+0x2ecc>
    4df8:	bl	1d90 <PyErr_NoMemory@plt>
    4dfc:	ldr	x0, [sp, #136]
    4e00:	cbz	x0, 4d98 <PyThread_free_lock@plt+0x2d88>
    4e04:	ldr	x1, [x0]
    4e08:	str	xzr, [sp, #136]
    4e0c:	sub	x1, x1, #0x1
    4e10:	str	x1, [x0]
    4e14:	cbnz	x1, 4d98 <PyThread_free_lock@plt+0x2d88>
    4e18:	bl	1d80 <_Py_Dealloc@plt>
    4e1c:	b	4d98 <PyThread_free_lock@plt+0x2d88>
    4e20:	sub	x26, x26, x22
    4e24:	mov	w0, #0xffffffff            	// #-1
    4e28:	b	4b94 <PyThread_free_lock@plt+0x2b84>
    4e2c:	ldr	x0, [sp, #160]
    4e30:	str	xzr, [sp, #136]
    4e34:	ldr	x26, [sp, #176]
    4e38:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
    4e3c:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
    4e40:	mov	x27, #0x4000                	// #16384
    4e44:	str	x0, [x19, #16]
    4e48:	stp	x1, xzr, [sp, #112]
    4e4c:	b	4b60 <PyThread_free_lock@plt+0x2b50>
    4e50:	mov	x0, x22
    4e54:	bl	1d80 <_Py_Dealloc@plt>
    4e58:	b	4b24 <PyThread_free_lock@plt+0x2b14>
    4e5c:	ldp	x23, x24, [sp, #64]
    4e60:	ldp	x25, x26, [sp, #80]
    4e64:	ldp	x27, x28, [sp, #96]
    4e68:	b	4c70 <PyThread_free_lock@plt+0x2c60>
    4e6c:	mov	w3, w20
    4e70:	add	x2, x24, #0x10
    4e74:	mov	x1, x24
    4e78:	mov	x0, x19
    4e7c:	bl	2750 <PyThread_free_lock@plt+0x740>
    4e80:	tbnz	w0, #31, 4dfc <PyThread_free_lock@plt+0x2dec>
    4e84:	ldr	x4, [x19, #64]
    4e88:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    4e8c:	ldr	x0, [x0, #2464]
    4e90:	cbz	x4, 4f70 <PyThread_free_lock@plt+0x2f60>
    4e94:	mov	w2, w20
    4e98:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    4e9c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4ea0:	add	x3, x3, #0xa98
    4ea4:	add	x1, x1, #0x770
    4ea8:	bl	1fe0 <PyErr_Format@plt>
    4eac:	b	4dfc <PyThread_free_lock@plt+0x2dec>
    4eb0:	ldr	x3, [x21]
    4eb4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    4eb8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4ebc:	add	x2, x2, #0x790
    4ec0:	add	x1, x1, #0x7a8
    4ec4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    4ec8:	mov	x19, #0x0                   	// #0
    4ecc:	add	x0, x0, #0xa18
    4ed0:	bl	1e30 <_PyArg_BadArgument@plt>
    4ed4:	ldp	x23, x24, [sp, #64]
    4ed8:	b	4c74 <PyThread_free_lock@plt+0x2c64>
    4edc:	mov	w3, w20
    4ee0:	add	x2, x24, #0x10
    4ee4:	mov	x1, x24
    4ee8:	mov	x0, x19
    4eec:	bl	2750 <PyThread_free_lock@plt+0x740>
    4ef0:	tbnz	w0, #31, 4dfc <PyThread_free_lock@plt+0x2dec>
    4ef4:	cmp	w20, #0x1
    4ef8:	b.ne	4d70 <PyThread_free_lock@plt+0x2d60>  // b.any
    4efc:	mov	w0, #0x1                   	// #1
    4f00:	strb	w0, [x19, #144]
    4f04:	b	4d7c <PyThread_free_lock@plt+0x2d6c>
    4f08:	bl	1eb0 <PyErr_Occurred@plt>
    4f0c:	cbnz	x0, 4e5c <PyThread_free_lock@plt+0x2e4c>
    4f10:	str	xzr, [sp, #136]
    4f14:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    4f18:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4f1c:	mov	x19, #0x0                   	// #0
    4f20:	add	x1, x1, #0xb88
    4f24:	ldr	x0, [x0, #4032]
    4f28:	ldr	x0, [x0]
    4f2c:	bl	1dc0 <PyErr_SetString@plt>
    4f30:	ldp	x23, x24, [sp, #64]
    4f34:	ldp	x25, x26, [sp, #80]
    4f38:	ldp	x27, x28, [sp, #96]
    4f3c:	b	4c74 <PyThread_free_lock@plt+0x2c64>
    4f40:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    4f44:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4f48:	add	x1, x1, #0x858
    4f4c:	ldr	x0, [x0, #4056]
    4f50:	ldr	x0, [x0]
    4f54:	bl	1dc0 <PyErr_SetString@plt>
    4f58:	mov	x0, x25
    4f5c:	bl	1d20 <PyBuffer_Release@plt>
    4f60:	b	4dfc <PyThread_free_lock@plt+0x2dec>
    4f64:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4f68:	add	x4, x4, #0x708
    4f6c:	b	4d2c <PyThread_free_lock@plt+0x2d1c>
    4f70:	mov	w2, w20
    4f74:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    4f78:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4f7c:	add	x3, x3, #0xa98
    4f80:	add	x1, x1, #0x760
    4f84:	bl	1fe0 <PyErr_Format@plt>
    4f88:	b	4dfc <PyThread_free_lock@plt+0x2dec>
    4f8c:	cmn	w23, #0x3
    4f90:	b.eq	4fd8 <PyThread_free_lock@plt+0x2fc8>  // b.none
    4f94:	cmn	w23, #0x2
    4f98:	b.eq	4fc0 <PyThread_free_lock@plt+0x2fb0>  // b.none
    4f9c:	cmn	w23, #0x5
    4fa0:	b.eq	4fcc <PyThread_free_lock@plt+0x2fbc>  // b.none
    4fa4:	mov	w2, w23
    4fa8:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    4fac:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    4fb0:	add	x3, x3, #0x888
    4fb4:	add	x1, x1, #0x760
    4fb8:	bl	1fe0 <PyErr_Format@plt>
    4fbc:	b	4dfc <PyThread_free_lock@plt+0x2dec>
    4fc0:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4fc4:	add	x4, x4, #0x6e8
    4fc8:	b	4d2c <PyThread_free_lock@plt+0x2d1c>
    4fcc:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4fd0:	add	x4, x4, #0x740
    4fd4:	b	4d2c <PyThread_free_lock@plt+0x2d1c>
    4fd8:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4fdc:	add	x4, x4, #0x728
    4fe0:	b	4d2c <PyThread_free_lock@plt+0x2d1c>
    4fe4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    4fe8:	cmn	w20, #0x6
    4fec:	ldr	x0, [x0, #2464]
    4ff0:	b.ne	5000 <PyThread_free_lock@plt+0x2ff0>  // b.any
    4ff4:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    4ff8:	add	x4, x4, #0x708
    4ffc:	b	4e94 <PyThread_free_lock@plt+0x2e84>
    5000:	ldr	x4, [x19, #64]
    5004:	cbnz	x4, 4e94 <PyThread_free_lock@plt+0x2e84>
    5008:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    500c:	cmn	w20, #0x3
    5010:	add	x4, x4, #0x728
    5014:	b.eq	4e94 <PyThread_free_lock@plt+0x2e84>  // b.none
    5018:	cmn	w20, #0x2
    501c:	b.ne	4f70 <PyThread_free_lock@plt+0x2f60>  // b.any
    5020:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    5024:	add	x4, x4, #0x6e8
    5028:	b	4e94 <PyThread_free_lock@plt+0x2e84>
    502c:	nop
    5030:	stp	x29, x30, [sp, #-112]!
    5034:	cmp	x2, #0x1
    5038:	mov	x29, sp
    503c:	stp	x19, x20, [sp, #16]
    5040:	mov	x19, x2
    5044:	mov	x20, x0
    5048:	stp	x21, x22, [sp, #32]
    504c:	mov	x21, x1
    5050:	b.hi	50e0 <PyThread_free_lock@plt+0x30d0>  // b.pmore
    5054:	cmp	x19, #0x0
    5058:	b.le	5104 <PyThread_free_lock@plt+0x30f4>
    505c:	ldr	x0, [x21]
    5060:	adrp	x1, 17000 <PyInit_zlib@@Base+0x11bd0>
    5064:	ldr	x1, [x1, #4008]
    5068:	ldr	x0, [x0, #8]
    506c:	cmp	x0, x1
    5070:	b.eq	50b4 <PyThread_free_lock@plt+0x30a4>  // b.none
    5074:	bl	1fd0 <PyType_IsSubtype@plt>
    5078:	cbnz	w0, 50b4 <PyThread_free_lock@plt+0x30a4>
    507c:	ldr	x0, [x21]
    5080:	bl	1ff0 <_PyLong_AsInt@plt>
    5084:	mov	w21, w0
    5088:	cmn	w0, #0x1
    508c:	b.eq	52ec <PyThread_free_lock@plt+0x32dc>  // b.none
    5090:	str	xzr, [sp, #104]
    5094:	cbnz	w0, 5354 <PyThread_free_lock@plt+0x3344>
    5098:	mov	x1, #0x0                   	// #0
    509c:	mov	x0, #0x0                   	// #0
    50a0:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    50a4:	ldp	x19, x20, [sp, #16]
    50a8:	ldp	x21, x22, [sp, #32]
    50ac:	ldp	x29, x30, [sp], #112
    50b0:	ret
    50b4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x11bd0>
    50b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    50bc:	add	x1, x1, #0x7b8
    50c0:	ldr	x0, [x0, #4040]
    50c4:	ldr	x0, [x0]
    50c8:	bl	1dc0 <PyErr_SetString@plt>
    50cc:	mov	x0, #0x0                   	// #0
    50d0:	ldp	x19, x20, [sp, #16]
    50d4:	ldp	x21, x22, [sp, #32]
    50d8:	ldp	x29, x30, [sp], #112
    50dc:	ret
    50e0:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    50e4:	mov	x1, x19
    50e8:	add	x0, x0, #0xb58
    50ec:	mov	x3, #0x1                   	// #1
    50f0:	mov	x2, #0x0                   	// #0
    50f4:	bl	1e80 <_PyArg_CheckPositional@plt>
    50f8:	cbz	w0, 50cc <PyThread_free_lock@plt+0x30bc>
    50fc:	cmp	x19, #0x0
    5100:	b.gt	505c <PyThread_free_lock@plt+0x304c>
    5104:	mov	w21, #0x4                   	// #4
    5108:	stp	x23, x24, [sp, #48]
    510c:	stp	x25, x26, [sp, #64]
    5110:	stp	x27, x28, [sp, #80]
    5114:	str	xzr, [sp, #104]
    5118:	bl	1fa0 <PyEval_SaveThread@plt>
    511c:	mov	x19, x0
    5120:	ldr	x0, [x20, #160]
    5124:	mov	w1, #0x1                   	// #1
    5128:	add	x23, x20, #0x10
    512c:	add	x27, sp, #0x68
    5130:	mov	x28, #0x4000                	// #16384
    5134:	mov	x22, #0x7fffffffffffffff    	// #9223372036854775807
    5138:	bl	1da0 <PyThread_acquire_lock@plt>
    513c:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    5140:	mov	x0, x19
    5144:	mov	x25, #0xffffffff            	// #4294967295
    5148:	bl	1d10 <PyEval_RestoreThread@plt>
    514c:	str	wzr, [x20, #24]
    5150:	b	5198 <PyThread_free_lock@plt+0x3188>
    5154:	cmp	x2, x25
    5158:	sub	w19, w28, w19
    515c:	csinv	w19, w19, wzr, ls  // ls = plast
    5160:	str	x1, [x20, #40]
    5164:	str	w19, [x20, #48]
    5168:	bl	1fa0 <PyEval_SaveThread@plt>
    516c:	mov	x24, x0
    5170:	mov	w1, w21
    5174:	mov	x0, x23
    5178:	bl	1dd0 <deflate@plt>
    517c:	mov	w19, w0
    5180:	mov	x0, x24
    5184:	bl	1d10 <PyEval_RestoreThread@plt>
    5188:	cmn	w19, #0x2
    518c:	b.eq	5260 <PyThread_free_lock@plt+0x3250>  // b.none
    5190:	ldr	w0, [x20, #48]
    5194:	cbnz	w0, 52b4 <PyThread_free_lock@plt+0x32a4>
    5198:	ldr	x0, [sp, #104]
    519c:	add	x19, x0, #0x20
    51a0:	cbz	x0, 5238 <PyThread_free_lock@plt+0x3228>
    51a4:	ldr	x1, [x20, #40]
    51a8:	sub	x19, x1, x19
    51ac:	sub	x2, x28, x19
    51b0:	cmp	x28, x19
    51b4:	b.ne	5154 <PyThread_free_lock@plt+0x3144>  // b.any
    51b8:	lsl	x1, x28, #1
    51bc:	cmp	x28, x22
    51c0:	b.eq	51f0 <PyThread_free_lock@plt+0x31e0>  // b.none
    51c4:	cmp	x28, x26
    51c8:	mov	x0, x27
    51cc:	csel	x28, x1, x22, le
    51d0:	mov	x1, x28
    51d4:	bl	1cf0 <_PyBytes_Resize@plt>
    51d8:	sub	x2, x28, x19
    51dc:	tbnz	w0, #31, 51f4 <PyThread_free_lock@plt+0x31e4>
    51e0:	ldr	x1, [sp, #104]
    51e4:	add	x1, x1, #0x20
    51e8:	add	x1, x1, x19
    51ec:	b	5154 <PyThread_free_lock@plt+0x3144>
    51f0:	bl	1d90 <PyErr_NoMemory@plt>
    51f4:	ldr	x0, [sp, #104]
    51f8:	cbz	x0, 5210 <PyThread_free_lock@plt+0x3200>
    51fc:	ldr	x1, [x0]
    5200:	str	xzr, [sp, #104]
    5204:	sub	x1, x1, #0x1
    5208:	str	x1, [x0]
    520c:	cbz	x1, 5258 <PyThread_free_lock@plt+0x3248>
    5210:	ldr	x0, [x20, #160]
    5214:	bl	1f20 <PyThread_release_lock@plt>
    5218:	ldp	x19, x20, [sp, #16]
    521c:	ldp	x21, x22, [sp, #32]
    5220:	ldp	x23, x24, [sp, #48]
    5224:	ldp	x25, x26, [sp, #64]
    5228:	ldp	x27, x28, [sp, #80]
    522c:	ldr	x0, [sp, #104]
    5230:	ldp	x29, x30, [sp], #112
    5234:	ret
    5238:	mov	x1, x28
    523c:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    5240:	str	x0, [sp, #104]
    5244:	add	x1, x0, #0x20
    5248:	mov	x2, x28
    524c:	cbz	x0, 5210 <PyThread_free_lock@plt+0x3200>
    5250:	mov	x19, #0x0                   	// #0
    5254:	b	5154 <PyThread_free_lock@plt+0x3144>
    5258:	bl	1d80 <_Py_Dealloc@plt>
    525c:	b	5210 <PyThread_free_lock@plt+0x3200>
    5260:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    5264:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5268:	ldr	x4, [x20, #64]
    526c:	add	x1, x1, #0x6e8
    5270:	ldr	x0, [x0, #2464]
    5274:	cmp	x4, #0x0
    5278:	csel	x4, x1, x4, eq  // eq = none
    527c:	mov	w2, w19
    5280:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    5284:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5288:	add	x3, x3, #0xba8
    528c:	add	x1, x1, #0x770
    5290:	bl	1fe0 <PyErr_Format@plt>
    5294:	ldr	x0, [sp, #104]
    5298:	cbz	x0, 5210 <PyThread_free_lock@plt+0x3200>
    529c:	ldr	x1, [x0]
    52a0:	str	xzr, [sp, #104]
    52a4:	sub	x1, x1, #0x1
    52a8:	str	x1, [x0]
    52ac:	cbnz	x1, 5210 <PyThread_free_lock@plt+0x3200>
    52b0:	b	5258 <PyThread_free_lock@plt+0x3248>
    52b4:	cmp	w19, #0x1
    52b8:	ccmp	w21, #0x4, #0x0, eq  // eq = none
    52bc:	b.eq	5308 <PyThread_free_lock@plt+0x32f8>  // b.none
    52c0:	cmp	w19, #0x0
    52c4:	ccmn	w19, #0x5, #0x4, ne  // ne = any
    52c8:	b.ne	5320 <PyThread_free_lock@plt+0x3310>  // b.any
    52cc:	ldr	x2, [x20, #40]
    52d0:	add	x0, sp, #0x68
    52d4:	ldr	x1, [sp, #104]
    52d8:	add	x1, x1, #0x20
    52dc:	sub	x1, x2, x1
    52e0:	bl	1cf0 <_PyBytes_Resize@plt>
    52e4:	tbz	w0, #31, 5210 <PyThread_free_lock@plt+0x3200>
    52e8:	b	51f4 <PyThread_free_lock@plt+0x31e4>
    52ec:	bl	1eb0 <PyErr_Occurred@plt>
    52f0:	cbnz	x0, 50cc <PyThread_free_lock@plt+0x30bc>
    52f4:	stp	x23, x24, [sp, #48]
    52f8:	stp	x25, x26, [sp, #64]
    52fc:	stp	x27, x28, [sp, #80]
    5300:	str	xzr, [sp, #104]
    5304:	b	5118 <PyThread_free_lock@plt+0x3108>
    5308:	mov	x0, x23
    530c:	bl	1f10 <deflateEnd@plt>
    5310:	mov	w2, w0
    5314:	cbnz	w0, 5364 <PyThread_free_lock@plt+0x3354>
    5318:	str	wzr, [x20, #148]
    531c:	b	52cc <PyThread_free_lock@plt+0x32bc>
    5320:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    5324:	cmn	w19, #0x6
    5328:	ldr	x0, [x0, #2464]
    532c:	b.eq	5394 <PyThread_free_lock@plt+0x3384>  // b.none
    5330:	ldr	x4, [x20, #64]
    5334:	cbz	x4, 53a0 <PyThread_free_lock@plt+0x3390>
    5338:	mov	w2, w19
    533c:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    5340:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5344:	add	x3, x3, #0xba8
    5348:	add	x1, x1, #0x770
    534c:	bl	1fe0 <PyErr_Format@plt>
    5350:	b	51f4 <PyThread_free_lock@plt+0x31e4>
    5354:	stp	x23, x24, [sp, #48]
    5358:	stp	x25, x26, [sp, #64]
    535c:	stp	x27, x28, [sp, #80]
    5360:	b	5118 <PyThread_free_lock@plt+0x3108>
    5364:	adrp	x0, 18000 <PyInit_zlib@@Base+0x12bd0>
    5368:	cmn	w2, #0x6
    536c:	ldr	x0, [x0, #2464]
    5370:	b.eq	53c4 <PyThread_free_lock@plt+0x33b4>  // b.none
    5374:	ldr	x4, [x20, #64]
    5378:	cbz	x4, 53d0 <PyThread_free_lock@plt+0x33c0>
    537c:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    5380:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5384:	add	x3, x3, #0x9f8
    5388:	add	x1, x1, #0x770
    538c:	bl	1fe0 <PyErr_Format@plt>
    5390:	b	51f4 <PyThread_free_lock@plt+0x31e4>
    5394:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    5398:	add	x4, x4, #0x708
    539c:	b	5338 <PyThread_free_lock@plt+0x3328>
    53a0:	cmn	w19, #0x3
    53a4:	b.eq	5400 <PyThread_free_lock@plt+0x33f0>  // b.none
    53a8:	mov	w2, w19
    53ac:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    53b0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    53b4:	add	x3, x3, #0xba8
    53b8:	add	x1, x1, #0x760
    53bc:	bl	1fe0 <PyErr_Format@plt>
    53c0:	b	51f4 <PyThread_free_lock@plt+0x31e4>
    53c4:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    53c8:	add	x4, x4, #0x708
    53cc:	b	537c <PyThread_free_lock@plt+0x336c>
    53d0:	cmn	w2, #0x3
    53d4:	b.eq	5424 <PyThread_free_lock@plt+0x3414>  // b.none
    53d8:	cmn	w2, #0x2
    53dc:	b.eq	5418 <PyThread_free_lock@plt+0x3408>  // b.none
    53e0:	cmn	w2, #0x5
    53e4:	b.eq	540c <PyThread_free_lock@plt+0x33fc>  // b.none
    53e8:	adrp	x3, 5000 <PyThread_free_lock@plt+0x2ff0>
    53ec:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    53f0:	add	x3, x3, #0x9f8
    53f4:	add	x1, x1, #0x760
    53f8:	bl	1fe0 <PyErr_Format@plt>
    53fc:	b	51f4 <PyThread_free_lock@plt+0x31e4>
    5400:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    5404:	add	x4, x4, #0x728
    5408:	b	5338 <PyThread_free_lock@plt+0x3328>
    540c:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    5410:	add	x4, x4, #0x740
    5414:	b	537c <PyThread_free_lock@plt+0x336c>
    5418:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    541c:	add	x4, x4, #0x6e8
    5420:	b	537c <PyThread_free_lock@plt+0x336c>
    5424:	adrp	x4, 5000 <PyThread_free_lock@plt+0x2ff0>
    5428:	add	x4, x4, #0x728
    542c:	b	537c <PyThread_free_lock@plt+0x336c>

0000000000005430 <PyInit_zlib@@Base>:
    5430:	stp	x29, x30, [sp, #-32]!
    5434:	mov	x29, sp
    5438:	str	x19, [sp, #16]
    543c:	adrp	x19, 18000 <PyInit_zlib@@Base+0x12bd0>
    5440:	add	x19, x19, #0x1b0
    5444:	add	x0, x19, #0x1e0
    5448:	bl	1e10 <PyType_Ready@plt>
    544c:	tbnz	w0, #31, 56ac <PyInit_zlib@@Base+0x27c>
    5450:	add	x0, x19, #0x40
    5454:	bl	1e10 <PyType_Ready@plt>
    5458:	tbnz	w0, #31, 56ac <PyInit_zlib@@Base+0x27c>
    545c:	add	x0, x19, #0x480
    5460:	mov	w1, #0x3f5                 	// #1013
    5464:	bl	1ec0 <PyModule_Create2@plt>
    5468:	mov	x19, x0
    546c:	cbz	x0, 56ac <PyInit_zlib@@Base+0x27c>
    5470:	mov	x2, #0x0                   	// #0
    5474:	mov	x1, #0x0                   	// #0
    5478:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    547c:	add	x0, x0, #0xbb8
    5480:	bl	1e40 <PyErr_NewException@plt>
    5484:	mov	x2, x0
    5488:	adrp	x1, 18000 <PyInit_zlib@@Base+0x12bd0>
    548c:	str	x0, [x1, #2464]
    5490:	cbz	x0, 54b0 <PyInit_zlib@@Base+0x80>
    5494:	ldr	x3, [x2]
    5498:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    549c:	mov	x0, x19
    54a0:	add	x1, x1, #0xbc8
    54a4:	add	x3, x3, #0x1
    54a8:	str	x3, [x2]
    54ac:	bl	1fb0 <PyModule_AddObject@plt>
    54b0:	mov	x2, #0xf                   	// #15
    54b4:	mov	x0, x19
    54b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    54bc:	add	x1, x1, #0xbd0
    54c0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    54c4:	mov	x2, #0x8                   	// #8
    54c8:	mov	x0, x19
    54cc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    54d0:	add	x1, x1, #0xbe0
    54d4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    54d8:	mov	x2, #0x8                   	// #8
    54dc:	mov	x0, x19
    54e0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    54e4:	add	x1, x1, #0xbf0
    54e8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    54ec:	mov	x2, #0x4000                	// #16384
    54f0:	mov	x0, x19
    54f4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    54f8:	add	x1, x1, #0xc00
    54fc:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5500:	mov	x2, #0x0                   	// #0
    5504:	mov	x0, x19
    5508:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    550c:	add	x1, x1, #0xc10
    5510:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5514:	mov	x2, #0x1                   	// #1
    5518:	mov	x0, x19
    551c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5520:	add	x1, x1, #0xc28
    5524:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5528:	mov	x2, #0x9                   	// #9
    552c:	mov	x0, x19
    5530:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5534:	add	x1, x1, #0xc38
    5538:	bl	1ce0 <PyModule_AddIntConstant@plt>
    553c:	mov	x2, #0xffffffffffffffff    	// #-1
    5540:	mov	x0, x19
    5544:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5548:	add	x1, x1, #0xc50
    554c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5550:	mov	x2, #0x1                   	// #1
    5554:	mov	x0, x19
    5558:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    555c:	add	x1, x1, #0xc68
    5560:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5564:	mov	x2, #0x2                   	// #2
    5568:	mov	x0, x19
    556c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5570:	add	x1, x1, #0xc78
    5574:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5578:	mov	x2, #0x3                   	// #3
    557c:	mov	x0, x19
    5580:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5584:	add	x1, x1, #0xc88
    5588:	bl	1ce0 <PyModule_AddIntConstant@plt>
    558c:	mov	x2, #0x4                   	// #4
    5590:	mov	x0, x19
    5594:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5598:	add	x1, x1, #0xc90
    559c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    55a0:	mov	x2, #0x0                   	// #0
    55a4:	mov	x0, x19
    55a8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    55ac:	add	x1, x1, #0xc98
    55b0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    55b4:	mov	x2, #0x0                   	// #0
    55b8:	mov	x0, x19
    55bc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    55c0:	add	x1, x1, #0xcb0
    55c4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    55c8:	mov	x2, #0x1                   	// #1
    55cc:	mov	x0, x19
    55d0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    55d4:	add	x1, x1, #0xcc0
    55d8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    55dc:	mov	x2, #0x2                   	// #2
    55e0:	mov	x0, x19
    55e4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    55e8:	add	x1, x1, #0xcd0
    55ec:	bl	1ce0 <PyModule_AddIntConstant@plt>
    55f0:	mov	x2, #0x3                   	// #3
    55f4:	mov	x0, x19
    55f8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    55fc:	add	x1, x1, #0xce0
    5600:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5604:	mov	x2, #0x4                   	// #4
    5608:	mov	x0, x19
    560c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5610:	add	x1, x1, #0xcf0
    5614:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5618:	mov	x2, #0x5                   	// #5
    561c:	mov	x0, x19
    5620:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5624:	add	x1, x1, #0xd00
    5628:	bl	1ce0 <PyModule_AddIntConstant@plt>
    562c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5630:	add	x1, x1, #0xd08
    5634:	mov	x2, #0x6                   	// #6
    5638:	mov	x0, x19
    563c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5640:	adrp	x0, 5000 <PyThread_free_lock@plt+0x2ff0>
    5644:	add	x0, x0, #0x850
    5648:	bl	1f70 <PyUnicode_FromString@plt>
    564c:	mov	x2, x0
    5650:	cbz	x0, 5664 <PyInit_zlib@@Base+0x234>
    5654:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5658:	mov	x0, x19
    565c:	add	x1, x1, #0xd10
    5660:	bl	1fb0 <PyModule_AddObject@plt>
    5664:	bl	1fc0 <zlibVersion@plt>
    5668:	bl	1f70 <PyUnicode_FromString@plt>
    566c:	mov	x2, x0
    5670:	cbz	x0, 5684 <PyInit_zlib@@Base+0x254>
    5674:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5678:	mov	x0, x19
    567c:	add	x1, x1, #0xd20
    5680:	bl	1fb0 <PyModule_AddObject@plt>
    5684:	mov	x0, x19
    5688:	adrp	x2, 5000 <PyThread_free_lock@plt+0x2ff0>
    568c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x2ff0>
    5690:	add	x2, x2, #0xd38
    5694:	add	x1, x1, #0xd40
    5698:	bl	1f90 <PyModule_AddStringConstant@plt>
    569c:	mov	x0, x19
    56a0:	ldr	x19, [sp, #16]
    56a4:	ldp	x29, x30, [sp], #32
    56a8:	ret
    56ac:	mov	x19, #0x0                   	// #0
    56b0:	mov	x0, x19
    56b4:	ldr	x19, [sp, #16]
    56b8:	ldp	x29, x30, [sp], #32
    56bc:	ret

Disassembly of section .fini:

00000000000056c0 <.fini>:
    56c0:	stp	x29, x30, [sp, #-16]!
    56c4:	mov	x29, sp
    56c8:	ldp	x29, x30, [sp], #16
    56cc:	ret
