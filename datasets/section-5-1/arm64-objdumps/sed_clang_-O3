
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402538 <.init>:
  402538:	stp	x29, x30, [sp, #-16]!
  40253c:	mov	x29, sp
  402540:	bl	402cc0 <wcrtomb@plt+0x60>
  402544:	ldp	x29, x30, [sp], #16
  402548:	ret

Disassembly of section .plt:

0000000000402550 <mbrtowc@plt-0x20>:
  402550:	stp	x16, x30, [sp, #-16]!
  402554:	adrp	x16, 43a000 <_obstack_memory_used@@Base+0x22ae4>
  402558:	ldr	x17, [x16, #4088]
  40255c:	add	x16, x16, #0xff8
  402560:	br	x17
  402564:	nop
  402568:	nop
  40256c:	nop

0000000000402570 <mbrtowc@plt>:
  402570:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16]
  402578:	add	x16, x16, #0x0
  40257c:	br	x17

0000000000402580 <memcpy@plt>:
  402580:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #8]
  402588:	add	x16, x16, #0x8
  40258c:	br	x17

0000000000402590 <memmove@plt>:
  402590:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #16]
  402598:	add	x16, x16, #0x10
  40259c:	br	x17

00000000004025a0 <isalpha@plt>:
  4025a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #24]
  4025a8:	add	x16, x16, #0x18
  4025ac:	br	x17

00000000004025b0 <fwrite_unlocked@plt>:
  4025b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #32]
  4025b8:	add	x16, x16, #0x20
  4025bc:	br	x17

00000000004025c0 <strlen@plt>:
  4025c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #40]
  4025c8:	add	x16, x16, #0x28
  4025cc:	br	x17

00000000004025d0 <__sprintf_chk@plt>:
  4025d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #48]
  4025d8:	add	x16, x16, #0x30
  4025dc:	br	x17

00000000004025e0 <acl_set_fd@plt>:
  4025e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #56]
  4025e8:	add	x16, x16, #0x38
  4025ec:	br	x17

00000000004025f0 <exit@plt>:
  4025f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #64]
  4025f8:	add	x16, x16, #0x40
  4025fc:	br	x17

0000000000402600 <error@plt>:
  402600:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #72]
  402608:	add	x16, x16, #0x48
  40260c:	br	x17

0000000000402610 <acl_entries@plt>:
  402610:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #80]
  402618:	add	x16, x16, #0x50
  40261c:	br	x17

0000000000402620 <wctype@plt>:
  402620:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #88]
  402628:	add	x16, x16, #0x58
  40262c:	br	x17

0000000000402630 <readlink@plt>:
  402630:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #96]
  402638:	add	x16, x16, #0x60
  40263c:	br	x17

0000000000402640 <ftell@plt>:
  402640:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #104]
  402648:	add	x16, x16, #0x68
  40264c:	br	x17

0000000000402650 <__cxa_atexit@plt>:
  402650:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #112]
  402658:	add	x16, x16, #0x70
  40265c:	br	x17

0000000000402660 <qsort@plt>:
  402660:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #120]
  402668:	add	x16, x16, #0x78
  40266c:	br	x17

0000000000402670 <setvbuf@plt>:
  402670:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #128]
  402678:	add	x16, x16, #0x80
  40267c:	br	x17

0000000000402680 <isblank@plt>:
  402680:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #136]
  402688:	add	x16, x16, #0x88
  40268c:	br	x17

0000000000402690 <__fwriting@plt>:
  402690:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #144]
  402698:	add	x16, x16, #0x90
  40269c:	br	x17

00000000004026a0 <__ctype_tolower_loc@plt>:
  4026a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #152]
  4026a8:	add	x16, x16, #0x98
  4026ac:	br	x17

00000000004026b0 <fileno@plt>:
  4026b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #160]
  4026b8:	add	x16, x16, #0xa0
  4026bc:	br	x17

00000000004026c0 <acl_delete_def_file@plt>:
  4026c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #168]
  4026c8:	add	x16, x16, #0xa8
  4026cc:	br	x17

00000000004026d0 <fclose@plt>:
  4026d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #176]
  4026d8:	add	x16, x16, #0xb0
  4026dc:	br	x17

00000000004026e0 <wctob@plt>:
  4026e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #184]
  4026e8:	add	x16, x16, #0xb8
  4026ec:	br	x17

00000000004026f0 <nl_langinfo@plt>:
  4026f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #192]
  4026f8:	add	x16, x16, #0xc0
  4026fc:	br	x17

0000000000402700 <fopen@plt>:
  402700:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #200]
  402708:	add	x16, x16, #0xc8
  40270c:	br	x17

0000000000402710 <isspace@plt>:
  402710:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #208]
  402718:	add	x16, x16, #0xd0
  40271c:	br	x17

0000000000402720 <iswctype@plt>:
  402720:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #216]
  402728:	add	x16, x16, #0xd8
  40272c:	br	x17

0000000000402730 <malloc@plt>:
  402730:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #224]
  402738:	add	x16, x16, #0xe0
  40273c:	br	x17

0000000000402740 <chmod@plt>:
  402740:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #232]
  402748:	add	x16, x16, #0xe8
  40274c:	br	x17

0000000000402750 <getdelim@plt>:
  402750:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #240]
  402758:	add	x16, x16, #0xf0
  40275c:	br	x17

0000000000402760 <islower@plt>:
  402760:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #248]
  402768:	add	x16, x16, #0xf8
  40276c:	br	x17

0000000000402770 <isxdigit@plt>:
  402770:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #256]
  402778:	add	x16, x16, #0x100
  40277c:	br	x17

0000000000402780 <popen@plt>:
  402780:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #264]
  402788:	add	x16, x16, #0x108
  40278c:	br	x17

0000000000402790 <strncmp@plt>:
  402790:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #272]
  402798:	add	x16, x16, #0x110
  40279c:	br	x17

00000000004027a0 <bindtextdomain@plt>:
  4027a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #280]
  4027a8:	add	x16, x16, #0x118
  4027ac:	br	x17

00000000004027b0 <isdigit@plt>:
  4027b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #288]
  4027b8:	add	x16, x16, #0x120
  4027bc:	br	x17

00000000004027c0 <__libc_start_main@plt>:
  4027c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #296]
  4027c8:	add	x16, x16, #0x128
  4027cc:	br	x17

00000000004027d0 <strverscmp@plt>:
  4027d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #304]
  4027d8:	add	x16, x16, #0x130
  4027dc:	br	x17

00000000004027e0 <__printf_chk@plt>:
  4027e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #312]
  4027e8:	add	x16, x16, #0x138
  4027ec:	br	x17

00000000004027f0 <acl_get_tag_type@plt>:
  4027f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #320]
  4027f8:	add	x16, x16, #0x140
  4027fc:	br	x17

0000000000402800 <memset@plt>:
  402800:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #328]
  402808:	add	x16, x16, #0x148
  40280c:	br	x17

0000000000402810 <fdopen@plt>:
  402810:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #336]
  402818:	add	x16, x16, #0x150
  40281c:	br	x17

0000000000402820 <fchmod@plt>:
  402820:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #344]
  402828:	add	x16, x16, #0x158
  40282c:	br	x17

0000000000402830 <__vfprintf_chk@plt>:
  402830:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #352]
  402838:	add	x16, x16, #0x160
  40283c:	br	x17

0000000000402840 <calloc@plt>:
  402840:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #360]
  402848:	add	x16, x16, #0x168
  40284c:	br	x17

0000000000402850 <bcmp@plt>:
  402850:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #368]
  402858:	add	x16, x16, #0x170
  40285c:	br	x17

0000000000402860 <isupper@plt>:
  402860:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #376]
  402868:	add	x16, x16, #0x178
  40286c:	br	x17

0000000000402870 <realloc@plt>:
  402870:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #384]
  402878:	add	x16, x16, #0x180
  40287c:	br	x17

0000000000402880 <__ctype_toupper_loc@plt>:
  402880:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #392]
  402888:	add	x16, x16, #0x188
  40288c:	br	x17

0000000000402890 <acl_set_file@plt>:
  402890:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #400]
  402898:	add	x16, x16, #0x190
  40289c:	br	x17

00000000004028a0 <rewind@plt>:
  4028a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #408]
  4028a8:	add	x16, x16, #0x198
  4028ac:	br	x17

00000000004028b0 <acl_from_mode@plt>:
  4028b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #416]
  4028b8:	add	x16, x16, #0x1a0
  4028bc:	br	x17

00000000004028c0 <acl_get_fd@plt>:
  4028c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #424]
  4028c8:	add	x16, x16, #0x1a8
  4028cc:	br	x17

00000000004028d0 <strdup@plt>:
  4028d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #432]
  4028d8:	add	x16, x16, #0x1b0
  4028dc:	br	x17

00000000004028e0 <strerror@plt>:
  4028e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #440]
  4028e8:	add	x16, x16, #0x1b8
  4028ec:	br	x17

00000000004028f0 <strrchr@plt>:
  4028f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #448]
  4028f8:	add	x16, x16, #0x1c0
  4028fc:	br	x17

0000000000402900 <__gmon_start__@plt>:
  402900:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #456]
  402908:	add	x16, x16, #0x1c8
  40290c:	br	x17

0000000000402910 <btowc@plt>:
  402910:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #464]
  402918:	add	x16, x16, #0x1d0
  40291c:	br	x17

0000000000402920 <abort@plt>:
  402920:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #472]
  402928:	add	x16, x16, #0x1d8
  40292c:	br	x17

0000000000402930 <mkostemp@plt>:
  402930:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #480]
  402938:	add	x16, x16, #0x1e0
  40293c:	br	x17

0000000000402940 <iscntrl@plt>:
  402940:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #488]
  402948:	add	x16, x16, #0x1e8
  40294c:	br	x17

0000000000402950 <mbsinit@plt>:
  402950:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #496]
  402958:	add	x16, x16, #0x1f0
  40295c:	br	x17

0000000000402960 <__overflow@plt>:
  402960:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #504]
  402968:	add	x16, x16, #0x1f8
  40296c:	br	x17

0000000000402970 <ispunct@plt>:
  402970:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #512]
  402978:	add	x16, x16, #0x200
  40297c:	br	x17

0000000000402980 <puts@plt>:
  402980:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #520]
  402988:	add	x16, x16, #0x208
  40298c:	br	x17

0000000000402990 <fread_unlocked@plt>:
  402990:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #528]
  402998:	add	x16, x16, #0x210
  40299c:	br	x17

00000000004029a0 <textdomain@plt>:
  4029a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #536]
  4029a8:	add	x16, x16, #0x218
  4029ac:	br	x17

00000000004029b0 <getopt_long@plt>:
  4029b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #544]
  4029b8:	add	x16, x16, #0x220
  4029bc:	br	x17

00000000004029c0 <__fprintf_chk@plt>:
  4029c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #552]
  4029c8:	add	x16, x16, #0x228
  4029cc:	br	x17

00000000004029d0 <strcmp@plt>:
  4029d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #560]
  4029d8:	add	x16, x16, #0x230
  4029dc:	br	x17

00000000004029e0 <__ctype_b_loc@plt>:
  4029e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #568]
  4029e8:	add	x16, x16, #0x238
  4029ec:	br	x17

00000000004029f0 <acl_get_file@plt>:
  4029f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #576]
  4029f8:	add	x16, x16, #0x240
  4029fc:	br	x17

0000000000402a00 <strtol@plt>:
  402a00:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #584]
  402a08:	add	x16, x16, #0x248
  402a0c:	br	x17

0000000000402a10 <free@plt>:
  402a10:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #592]
  402a18:	add	x16, x16, #0x250
  402a1c:	br	x17

0000000000402a20 <ungetc@plt>:
  402a20:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #600]
  402a28:	add	x16, x16, #0x258
  402a2c:	br	x17

0000000000402a30 <__ctype_get_mb_cur_max@plt>:
  402a30:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #608]
  402a38:	add	x16, x16, #0x260
  402a3c:	br	x17

0000000000402a40 <acl_get_entry@plt>:
  402a40:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #616]
  402a48:	add	x16, x16, #0x268
  402a4c:	br	x17

0000000000402a50 <strchr@plt>:
  402a50:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #624]
  402a58:	add	x16, x16, #0x270
  402a5c:	br	x17

0000000000402a60 <memrchr@plt>:
  402a60:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #632]
  402a68:	add	x16, x16, #0x278
  402a6c:	br	x17

0000000000402a70 <rename@plt>:
  402a70:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #640]
  402a78:	add	x16, x16, #0x280
  402a7c:	br	x17

0000000000402a80 <fwrite@plt>:
  402a80:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #648]
  402a88:	add	x16, x16, #0x288
  402a8c:	br	x17

0000000000402a90 <fflush_unlocked@plt>:
  402a90:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #656]
  402a98:	add	x16, x16, #0x290
  402a9c:	br	x17

0000000000402aa0 <dcngettext@plt>:
  402aa0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #664]
  402aa8:	add	x16, x16, #0x298
  402aac:	br	x17

0000000000402ab0 <strcpy@plt>:
  402ab0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #672]
  402ab8:	add	x16, x16, #0x2a0
  402abc:	br	x17

0000000000402ac0 <clearerr_unlocked@plt>:
  402ac0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #680]
  402ac8:	add	x16, x16, #0x2a8
  402acc:	br	x17

0000000000402ad0 <__lxstat@plt>:
  402ad0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #688]
  402ad8:	add	x16, x16, #0x2b0
  402adc:	br	x17

0000000000402ae0 <memchr@plt>:
  402ae0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #696]
  402ae8:	add	x16, x16, #0x2b8
  402aec:	br	x17

0000000000402af0 <isatty@plt>:
  402af0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #704]
  402af8:	add	x16, x16, #0x2c0
  402afc:	br	x17

0000000000402b00 <isgraph@plt>:
  402b00:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #712]
  402b08:	add	x16, x16, #0x2c8
  402b0c:	br	x17

0000000000402b10 <iswalnum@plt>:
  402b10:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #720]
  402b18:	add	x16, x16, #0x2d0
  402b1c:	br	x17

0000000000402b20 <__fxstat@plt>:
  402b20:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #728]
  402b28:	add	x16, x16, #0x2d8
  402b2c:	br	x17

0000000000402b30 <strstr@plt>:
  402b30:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #736]
  402b38:	add	x16, x16, #0x2e0
  402b3c:	br	x17

0000000000402b40 <dcgettext@plt>:
  402b40:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #744]
  402b48:	add	x16, x16, #0x2e8
  402b4c:	br	x17

0000000000402b50 <fputs_unlocked@plt>:
  402b50:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #752]
  402b58:	add	x16, x16, #0x2f0
  402b5c:	br	x17

0000000000402b60 <strcoll@plt>:
  402b60:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #760]
  402b68:	add	x16, x16, #0x2f8
  402b6c:	br	x17

0000000000402b70 <isalnum@plt>:
  402b70:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #768]
  402b78:	add	x16, x16, #0x300
  402b7c:	br	x17

0000000000402b80 <pclose@plt>:
  402b80:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #776]
  402b88:	add	x16, x16, #0x308
  402b8c:	br	x17

0000000000402b90 <towupper@plt>:
  402b90:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #784]
  402b98:	add	x16, x16, #0x310
  402b9c:	br	x17

0000000000402ba0 <iswprint@plt>:
  402ba0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #792]
  402ba8:	add	x16, x16, #0x318
  402bac:	br	x17

0000000000402bb0 <umask@plt>:
  402bb0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #800]
  402bb8:	add	x16, x16, #0x320
  402bbc:	br	x17

0000000000402bc0 <__assert_fail@plt>:
  402bc0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #808]
  402bc8:	add	x16, x16, #0x328
  402bcc:	br	x17

0000000000402bd0 <__errno_location@plt>:
  402bd0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #816]
  402bd8:	add	x16, x16, #0x330
  402bdc:	br	x17

0000000000402be0 <getenv@plt>:
  402be0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #824]
  402be8:	add	x16, x16, #0x338
  402bec:	br	x17

0000000000402bf0 <unlink@plt>:
  402bf0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #832]
  402bf8:	add	x16, x16, #0x340
  402bfc:	br	x17

0000000000402c00 <fchown@plt>:
  402c00:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #840]
  402c08:	add	x16, x16, #0x348
  402c0c:	br	x17

0000000000402c10 <towlower@plt>:
  402c10:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #848]
  402c18:	add	x16, x16, #0x350
  402c1c:	br	x17

0000000000402c20 <__uflow@plt>:
  402c20:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #856]
  402c28:	add	x16, x16, #0x358
  402c2c:	br	x17

0000000000402c30 <isprint@plt>:
  402c30:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #864]
  402c38:	add	x16, x16, #0x360
  402c3c:	br	x17

0000000000402c40 <setlocale@plt>:
  402c40:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #872]
  402c48:	add	x16, x16, #0x368
  402c4c:	br	x17

0000000000402c50 <acl_free@plt>:
  402c50:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #880]
  402c58:	add	x16, x16, #0x370
  402c5c:	br	x17

0000000000402c60 <wcrtomb@plt>:
  402c60:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #888]
  402c68:	add	x16, x16, #0x378
  402c6c:	br	x17

Disassembly of section .text:

0000000000402c70 <_obstack_begin@@Base-0x14534>:
  402c70:	mov	x29, #0x0                   	// #0
  402c74:	mov	x30, #0x0                   	// #0
  402c78:	mov	x5, x0
  402c7c:	ldr	x1, [sp]
  402c80:	add	x2, sp, #0x8
  402c84:	mov	x6, sp
  402c88:	movz	x0, #0x0, lsl #48
  402c8c:	movk	x0, #0x0, lsl #32
  402c90:	movk	x0, #0x40, lsl #16
  402c94:	movk	x0, #0xb310
  402c98:	movz	x3, #0x0, lsl #48
  402c9c:	movk	x3, #0x0, lsl #32
  402ca0:	movk	x3, #0x42, lsl #16
  402ca4:	movk	x3, #0x80d0
  402ca8:	movz	x4, #0x0, lsl #48
  402cac:	movk	x4, #0x0, lsl #32
  402cb0:	movk	x4, #0x42, lsl #16
  402cb4:	movk	x4, #0x8150
  402cb8:	bl	4027c0 <__libc_start_main@plt>
  402cbc:	bl	402920 <abort@plt>
  402cc0:	adrp	x0, 43a000 <_obstack_memory_used@@Base+0x22ae4>
  402cc4:	ldr	x0, [x0, #4064]
  402cc8:	cbz	x0, 402cd0 <wcrtomb@plt+0x70>
  402ccc:	b	402900 <__gmon_start__@plt>
  402cd0:	ret
  402cd4:	nop
  402cd8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402cdc:	add	x0, x0, #0x4d8
  402ce0:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402ce4:	add	x1, x1, #0x4d8
  402ce8:	cmp	x1, x0
  402cec:	b.eq	402d04 <wcrtomb@plt+0xa4>  // b.none
  402cf0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  402cf4:	ldr	x1, [x1, #392]
  402cf8:	cbz	x1, 402d04 <wcrtomb@plt+0xa4>
  402cfc:	mov	x16, x1
  402d00:	br	x16
  402d04:	ret
  402d08:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402d0c:	add	x0, x0, #0x4d8
  402d10:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402d14:	add	x1, x1, #0x4d8
  402d18:	sub	x1, x1, x0
  402d1c:	lsr	x2, x1, #63
  402d20:	add	x1, x2, x1, asr #3
  402d24:	cmp	xzr, x1, asr #1
  402d28:	asr	x1, x1, #1
  402d2c:	b.eq	402d44 <wcrtomb@plt+0xe4>  // b.none
  402d30:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x10ae4>
  402d34:	ldr	x2, [x2, #400]
  402d38:	cbz	x2, 402d44 <wcrtomb@plt+0xe4>
  402d3c:	mov	x16, x2
  402d40:	br	x16
  402d44:	ret
  402d48:	stp	x29, x30, [sp, #-32]!
  402d4c:	mov	x29, sp
  402d50:	str	x19, [sp, #16]
  402d54:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402d58:	ldrb	w0, [x19, #1296]
  402d5c:	cbnz	w0, 402d6c <wcrtomb@plt+0x10c>
  402d60:	bl	402cd8 <wcrtomb@plt+0x78>
  402d64:	mov	w0, #0x1                   	// #1
  402d68:	strb	w0, [x19, #1296]
  402d6c:	ldr	x19, [sp, #16]
  402d70:	ldp	x29, x30, [sp], #32
  402d74:	ret
  402d78:	b	402d08 <wcrtomb@plt+0xa8>
  402d7c:	stp	x29, x30, [sp, #-32]!
  402d80:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402d84:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402d88:	stp	x20, x19, [sp, #16]
  402d8c:	ldr	x8, [x8, #1432]
  402d90:	ldr	x20, [x9, #1248]
  402d94:	mov	x19, x0
  402d98:	mov	x29, sp
  402d9c:	cbnz	x8, 402dd8 <wcrtomb@plt+0x178>
  402da0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  402da4:	add	x1, x1, #0x94a
  402da8:	mov	w2, #0x5                   	// #5
  402dac:	mov	x0, xzr
  402db0:	bl	402b40 <dcgettext@plt>
  402db4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402db8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402dbc:	add	x9, x9, #0x578
  402dc0:	ldr	x3, [x8, #1936]
  402dc4:	ldp	x10, x8, [x9]
  402dc8:	ldr	x4, [x9, #48]
  402dcc:	mov	x2, x0
  402dd0:	sub	x5, x8, x10
  402dd4:	b	402e04 <wcrtomb@plt+0x1a4>
  402dd8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  402ddc:	add	x1, x1, #0x930
  402de0:	mov	w2, #0x5                   	// #5
  402de4:	mov	x0, xzr
  402de8:	bl	402b40 <dcgettext@plt>
  402dec:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402df0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402df4:	add	x9, x9, #0x598
  402df8:	ldr	x3, [x8, #1936]
  402dfc:	ldp	x4, x5, [x9]
  402e00:	mov	x2, x0
  402e04:	mov	w1, #0x1                   	// #1
  402e08:	mov	x0, x20
  402e0c:	mov	x6, x19
  402e10:	bl	4029c0 <__fprintf_chk@plt>
  402e14:	mov	w0, #0x1                   	// #1
  402e18:	bl	4025f0 <exit@plt>
  402e1c:	sub	sp, sp, #0x70
  402e20:	stp	x22, x21, [sp, #80]
  402e24:	stp	x20, x19, [sp, #96]
  402e28:	mov	x19, x0
  402e2c:	cmp	x1, #0x1
  402e30:	mov	x21, x0
  402e34:	stp	x29, x30, [sp, #16]
  402e38:	stp	x28, x27, [sp, #32]
  402e3c:	stp	x26, x25, [sp, #48]
  402e40:	stp	x24, x23, [sp, #64]
  402e44:	add	x29, sp, #0x10
  402e48:	str	xzr, [sp, #8]
  402e4c:	b.lt	40323c <wcrtomb@plt+0x5dc>  // b.tstop
  402e50:	mov	w20, w2
  402e54:	mov	w28, wzr
  402e58:	add	x24, x19, x1
  402e5c:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402e60:	adrp	x27, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  402e64:	mov	x22, x19
  402e68:	mov	x21, x19
  402e6c:	b	402e94 <wcrtomb@plt+0x234>
  402e70:	cmp	w8, #0xa
  402e74:	b.ne	402fcc <wcrtomb@plt+0x36c>  // b.any
  402e78:	mov	w28, wzr
  402e7c:	mov	w8, #0xa                   	// #10
  402e80:	strb	w8, [x21], #1
  402e84:	add	x23, x22, #0x2
  402e88:	cmp	x23, x24
  402e8c:	mov	x22, x23
  402e90:	b.cs	40323c <wcrtomb@plt+0x5dc>  // b.hs, b.nlast
  402e94:	ldr	w8, [x25, #2260]
  402e98:	cmp	w8, #0x1
  402e9c:	b.eq	402ebc <wcrtomb@plt+0x25c>  // b.none
  402ea0:	sub	x2, x24, x22
  402ea4:	add	x3, sp, #0x8
  402ea8:	mov	x0, xzr
  402eac:	mov	x1, x22
  402eb0:	bl	417134 <wcrtomb@plt+0x144d4>
  402eb4:	cmp	w0, #0x1
  402eb8:	b.ne	402f5c <wcrtomb@plt+0x2fc>  // b.any
  402ebc:	ldrb	w8, [x22]
  402ec0:	cmp	w8, #0x5c
  402ec4:	b.ne	402f10 <wcrtomb@plt+0x2b0>  // b.any
  402ec8:	cbnz	w28, 402f10 <wcrtomb@plt+0x2b0>
  402ecc:	add	x26, x22, #0x1
  402ed0:	cmp	x26, x24
  402ed4:	b.cs	402f10 <wcrtomb@plt+0x2b0>  // b.hs, b.nlast
  402ed8:	ldrb	w8, [x26]
  402edc:	sub	w9, w8, #0x61
  402ee0:	cmp	w9, #0x17
  402ee4:	b.hi	402e70 <wcrtomb@plt+0x210>  // b.pmore
  402ee8:	adrp	x12, 428000 <_obstack_memory_used@@Base+0x10ae4>
  402eec:	add	x12, x12, #0x1c8
  402ef0:	adr	x11, 402e78 <wcrtomb@plt+0x218>
  402ef4:	ldrb	w10, [x12, x9]
  402ef8:	add	x11, x11, x10, lsl #2
  402efc:	mov	w10, #0xa                   	// #10
  402f00:	br	x11
  402f04:	mov	w28, wzr
  402f08:	mov	w8, #0x7                   	// #7
  402f0c:	b	402e80 <wcrtomb@plt+0x220>
  402f10:	cmp	w20, #0x2
  402f14:	b.ne	403220 <wcrtomb@plt+0x5c0>  // b.any
  402f18:	ldr	w9, [x27, #2264]
  402f1c:	cbz	w9, 403220 <wcrtomb@plt+0x5c0>
  402f20:	sub	w9, w8, #0x2e
  402f24:	cmp	w9, #0x2f
  402f28:	b.hi	403220 <wcrtomb@plt+0x5c0>  // b.pmore
  402f2c:	adrp	x12, 428000 <_obstack_memory_used@@Base+0x10ae4>
  402f30:	add	x12, x12, #0x198
  402f34:	adr	x10, 402f44 <wcrtomb@plt+0x2e4>
  402f38:	ldrb	w11, [x12, x9]
  402f3c:	add	x10, x10, x11, lsl #2
  402f40:	br	x10
  402f44:	cmn	w28, #0x1
  402f48:	b.ne	403220 <wcrtomb@plt+0x5c0>  // b.any
  402f4c:	ldurb	w9, [x22, #-1]
  402f50:	cmp	w9, #0x5b
  402f54:	csinv	w28, w8, wzr, eq  // eq = none
  402f58:	b	403220 <wcrtomb@plt+0x5c0>
  402f5c:	lsl	x8, x0, #32
  402f60:	mov	x9, #0xffffffff00000000    	// #-4294967296
  402f64:	cmp	x8, x9
  402f68:	b.ne	402f74 <wcrtomb@plt+0x314>  // b.any
  402f6c:	mov	w0, #0x1                   	// #1
  402f70:	b	402f84 <wcrtomb@plt+0x324>
  402f74:	mov	x9, #0xfffffffe00000000    	// #-8589934592
  402f78:	cmp	x8, x9
  402f7c:	b.eq	402f6c <wcrtomb@plt+0x30c>  // b.none
  402f80:	cbz	w0, 402f6c <wcrtomb@plt+0x30c>
  402f84:	sxtw	x23, w0
  402f88:	mov	x0, x21
  402f8c:	mov	x1, x22
  402f90:	mov	x2, x23
  402f94:	bl	402590 <memmove@plt>
  402f98:	add	x21, x21, x23
  402f9c:	add	x23, x22, x23
  402fa0:	b	402e88 <wcrtomb@plt+0x228>
  402fa4:	cmp	w28, #0x0
  402fa8:	csinv	w28, w28, wzr, ne  // ne = any
  402fac:	mov	w8, #0x5b                  	// #91
  402fb0:	b	403220 <wcrtomb@plt+0x5c0>
  402fb4:	add	w8, w28, #0x1
  402fb8:	cmp	w8, #0x2
  402fbc:	b.cs	4031ac <wcrtomb@plt+0x54c>  // b.hs, b.nlast
  402fc0:	mov	w28, wzr
  402fc4:	mov	w8, #0x5d                  	// #93
  402fc8:	b	403220 <wcrtomb@plt+0x5c0>
  402fcc:	mov	w28, wzr
  402fd0:	cbz	w20, 40321c <wcrtomb@plt+0x5bc>
  402fd4:	mov	w8, #0x5c                  	// #92
  402fd8:	strb	w8, [x21], #1
  402fdc:	ldrb	w8, [x26]
  402fe0:	mov	x22, x26
  402fe4:	b	403220 <wcrtomb@plt+0x5c0>
  402fe8:	mov	w28, wzr
  402fec:	mov	w8, #0xc                   	// #12
  402ff0:	b	402e80 <wcrtomb@plt+0x220>
  402ff4:	mov	w10, #0x10                  	// #16
  402ff8:	add	x23, x22, #0x2
  402ffc:	cmp	x23, x24
  403000:	b.cc	40305c <wcrtomb@plt+0x3fc>  // b.lo, b.ul, b.last
  403004:	b	4031e0 <wcrtomb@plt+0x580>
  403008:	add	x23, x22, #0x2
  40300c:	cmp	x23, x24
  403010:	b.cs	40320c <wcrtomb@plt+0x5ac>  // b.hs, b.nlast
  403014:	bl	402880 <__ctype_toupper_loc@plt>
  403018:	ldr	x8, [x0]
  40301c:	ldrb	w9, [x23]
  403020:	ldr	w8, [x8, x9, lsl #2]
  403024:	eor	w8, w8, #0x40
  403028:	strb	w8, [x21], #1
  40302c:	ldrb	w8, [x23]
  403030:	cmp	w8, #0x5c
  403034:	b.ne	40322c <wcrtomb@plt+0x5cc>  // b.any
  403038:	ldrb	w8, [x22, #3]
  40303c:	cmp	w8, #0x5c
  403040:	b.ne	403260 <wcrtomb@plt+0x600>  // b.any
  403044:	mov	w8, #0x3                   	// #3
  403048:	b	403230 <wcrtomb@plt+0x5d0>
  40304c:	mov	w10, #0x8                   	// #8
  403050:	add	x23, x22, #0x2
  403054:	cmp	x23, x24
  403058:	b.cs	4031e0 <wcrtomb@plt+0x580>  // b.hs, b.nlast
  40305c:	adrp	x18, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403060:	mov	x11, xzr
  403064:	mov	w9, wzr
  403068:	mov	w12, #0x1                   	// #1
  40306c:	add	x18, x18, #0x1e0
  403070:	add	x13, x22, x11
  403074:	ldrb	w14, [x13, #2]
  403078:	sub	w15, w14, #0x30
  40307c:	cmp	w15, #0x36
  403080:	b.hi	4031c8 <wcrtomb@plt+0x568>  // b.pmore
  403084:	adr	x16, 40309c <wcrtomb@plt+0x43c>
  403088:	ldrb	w17, [x18, x15]
  40308c:	add	x16, x16, x17, lsl #2
  403090:	mov	w14, wzr
  403094:	mov	w15, #0x8                   	// #8
  403098:	br	x16
  40309c:	mov	w15, #0xa                   	// #10
  4030a0:	cmp	w15, w10
  4030a4:	mov	w14, w15
  4030a8:	b.cc	403110 <wcrtomb@plt+0x4b0>  // b.lo, b.ul, b.last
  4030ac:	b	4031c8 <wcrtomb@plt+0x568>
  4030b0:	mov	w15, #0xc                   	// #12
  4030b4:	cmp	w15, w10
  4030b8:	mov	w14, w15
  4030bc:	b.cc	403110 <wcrtomb@plt+0x4b0>  // b.lo, b.ul, b.last
  4030c0:	b	4031c8 <wcrtomb@plt+0x568>
  4030c4:	mov	w15, #0xd                   	// #13
  4030c8:	cmp	w15, w10
  4030cc:	mov	w14, w15
  4030d0:	b.cc	403110 <wcrtomb@plt+0x4b0>  // b.lo, b.ul, b.last
  4030d4:	b	4031c8 <wcrtomb@plt+0x568>
  4030d8:	mov	w15, #0xb                   	// #11
  4030dc:	cmp	w15, w10
  4030e0:	mov	w14, w15
  4030e4:	b.cc	403110 <wcrtomb@plt+0x4b0>  // b.lo, b.ul, b.last
  4030e8:	b	4031c8 <wcrtomb@plt+0x568>
  4030ec:	mov	w15, #0xf                   	// #15
  4030f0:	cmp	w15, w10
  4030f4:	mov	w14, w15
  4030f8:	b.cc	403110 <wcrtomb@plt+0x4b0>  // b.lo, b.ul, b.last
  4030fc:	b	4031c8 <wcrtomb@plt+0x568>
  403100:	mov	w15, #0xe                   	// #14
  403104:	cmp	w15, w10
  403108:	mov	w14, w15
  40310c:	b.cs	4031c8 <wcrtomb@plt+0x568>  // b.hs, b.nlast
  403110:	mul	w12, w12, w10
  403114:	madd	w9, w9, w10, w14
  403118:	cmp	w12, #0xff
  40311c:	add	x13, x11, #0x1
  403120:	b.hi	4031d4 <wcrtomb@plt+0x574>  // b.pmore
  403124:	add	x11, x22, x11
  403128:	add	x11, x11, #0x3
  40312c:	cmp	x11, x24
  403130:	mov	x11, x13
  403134:	b.cc	403070 <wcrtomb@plt+0x410>  // b.lo, b.ul, b.last
  403138:	b	4031d4 <wcrtomb@plt+0x574>
  40313c:	mov	w15, #0x9                   	// #9
  403140:	cmp	w15, w10
  403144:	mov	w14, w15
  403148:	b.cc	403110 <wcrtomb@plt+0x4b0>  // b.lo, b.ul, b.last
  40314c:	b	4031c8 <wcrtomb@plt+0x568>
  403150:	mov	w14, #0x6                   	// #6
  403154:	b	403110 <wcrtomb@plt+0x4b0>
  403158:	mov	w14, #0x3                   	// #3
  40315c:	b	403110 <wcrtomb@plt+0x4b0>
  403160:	mov	w14, #0x1                   	// #1
  403164:	b	403110 <wcrtomb@plt+0x4b0>
  403168:	mov	w14, #0x4                   	// #4
  40316c:	b	403110 <wcrtomb@plt+0x4b0>
  403170:	mov	w14, #0x5                   	// #5
  403174:	b	403110 <wcrtomb@plt+0x4b0>
  403178:	mov	w14, #0x2                   	// #2
  40317c:	b	403110 <wcrtomb@plt+0x4b0>
  403180:	mov	w14, #0x7                   	// #7
  403184:	b	403110 <wcrtomb@plt+0x4b0>
  403188:	mov	w28, wzr
  40318c:	mov	w8, #0xd                   	// #13
  403190:	b	402e80 <wcrtomb@plt+0x220>
  403194:	mov	w28, wzr
  403198:	mov	w8, #0x9                   	// #9
  40319c:	b	402e80 <wcrtomb@plt+0x220>
  4031a0:	mov	w28, wzr
  4031a4:	mov	w8, #0xb                   	// #11
  4031a8:	b	402e80 <wcrtomb@plt+0x220>
  4031ac:	ldurb	w8, [x22, #-2]
  4031b0:	cmp	w28, w8
  4031b4:	b.eq	402fc4 <wcrtomb@plt+0x364>  // b.none
  4031b8:	ldurb	w8, [x22, #-1]
  4031bc:	cmp	w28, w8
  4031c0:	csinv	w28, w28, wzr, ne  // ne = any
  4031c4:	b	402fc4 <wcrtomb@plt+0x364>
  4031c8:	add	x23, x13, #0x2
  4031cc:	cbnz	x11, 4031dc <wcrtomb@plt+0x57c>
  4031d0:	b	4031e0 <wcrtomb@plt+0x580>
  4031d4:	add	x8, x22, x13
  4031d8:	add	x23, x8, #0x2
  4031dc:	mov	w8, w9
  4031e0:	cmp	w20, #0x1
  4031e4:	b.ne	403204 <wcrtomb@plt+0x5a4>  // b.any
  4031e8:	and	w9, w8, #0xff
  4031ec:	cmp	w9, #0x5c
  4031f0:	b.eq	4031fc <wcrtomb@plt+0x59c>  // b.none
  4031f4:	cmp	w9, #0x26
  4031f8:	b.ne	403204 <wcrtomb@plt+0x5a4>  // b.any
  4031fc:	mov	w9, #0x5c                  	// #92
  403200:	strb	w9, [x21], #1
  403204:	mov	w28, wzr
  403208:	b	403224 <wcrtomb@plt+0x5c4>
  40320c:	mov	w28, wzr
  403210:	cbz	w20, 402e88 <wcrtomb@plt+0x228>
  403214:	mov	w8, #0x5c                  	// #92
  403218:	b	403224 <wcrtomb@plt+0x5c4>
  40321c:	mov	x22, x26
  403220:	add	x23, x22, #0x1
  403224:	strb	w8, [x21], #1
  403228:	b	402e88 <wcrtomb@plt+0x228>
  40322c:	mov	w8, #0x2                   	// #2
  403230:	mov	w28, wzr
  403234:	add	x23, x26, x8
  403238:	b	402e88 <wcrtomb@plt+0x228>
  40323c:	sub	x0, x21, x19
  403240:	ldp	x20, x19, [sp, #96]
  403244:	ldp	x22, x21, [sp, #80]
  403248:	ldp	x24, x23, [sp, #64]
  40324c:	ldp	x26, x25, [sp, #48]
  403250:	ldp	x28, x27, [sp, #32]
  403254:	ldp	x29, x30, [sp, #16]
  403258:	add	sp, sp, #0x70
  40325c:	ret
  403260:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403264:	add	x0, x0, #0x796
  403268:	bl	402d7c <wcrtomb@plt+0x11c>
  40326c:	stp	x29, x30, [sp, #-32]!
  403270:	str	x19, [sp, #16]
  403274:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403278:	add	x19, x19, #0x518
  40327c:	ldr	x9, [x19, #8]
  403280:	add	x8, x1, x2
  403284:	stp	x8, xzr, [x19, #112]
  403288:	mov	x29, sp
  40328c:	add	x8, x9, #0x1
  403290:	stp	x1, x1, [x19, #96]
  403294:	stp	xzr, xzr, [x19, #128]
  403298:	str	x8, [x19, #8]
  40329c:	str	x8, [x19, #144]
  4032a0:	bl	4032c0 <wcrtomb@plt+0x660>
  4032a4:	mov	w8, #0x1                   	// #1
  4032a8:	stp	xzr, xzr, [x19, #96]
  4032ac:	str	xzr, [x19, #112]
  4032b0:	strb	w8, [x19]
  4032b4:	ldr	x19, [sp, #16]
  4032b8:	ldp	x29, x30, [sp], #32
  4032bc:	ret
  4032c0:	sub	sp, sp, #0x1f0
  4032c4:	stp	x28, x27, [sp, #416]
  4032c8:	mov	x28, x0
  4032cc:	stp	x29, x30, [sp, #400]
  4032d0:	stp	x26, x25, [sp, #432]
  4032d4:	stp	x24, x23, [sp, #448]
  4032d8:	stp	x22, x21, [sp, #464]
  4032dc:	stp	x20, x19, [sp, #480]
  4032e0:	add	x29, sp, #0x190
  4032e4:	cbnz	x0, 403324 <wcrtomb@plt+0x6c4>
  4032e8:	mov	w0, #0x1                   	// #1
  4032ec:	mov	w1, #0x18                  	// #24
  4032f0:	bl	417018 <wcrtomb@plt+0x143b8>
  4032f4:	mov	x28, x0
  4032f8:	stp	xzr, xzr, [x0, #8]
  4032fc:	str	xzr, [x0]
  403300:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403304:	adrp	x3, 416000 <wcrtomb@plt+0x133a0>
  403308:	adrp	x4, 402000 <mbrtowc@plt-0x570>
  40330c:	add	x0, x0, #0x5b0
  403310:	add	x3, x3, #0xff4
  403314:	add	x4, x4, #0xa10
  403318:	mov	x1, xzr
  40331c:	mov	x2, xzr
  403320:	bl	4171a4 <_obstack_begin@@Base>
  403324:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403328:	ldr	x8, [x8, #1328]
  40332c:	cbz	x8, 40333c <wcrtomb@plt+0x6dc>
  403330:	mov	w1, #0xa                   	// #10
  403334:	mov	x0, xzr
  403338:	bl	40567c <wcrtomb@plt+0x2a1c>
  40333c:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403340:	ldr	q0, [x8, #2064]
  403344:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403348:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  40334c:	movk	x22, #0x3334
  403350:	stur	q0, [x29, #-144]
  403354:	ldr	q0, [x8, #2080]
  403358:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40335c:	adrp	x27, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403360:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403364:	stur	q0, [x29, #-160]
  403368:	ldr	q0, [x8, #2096]
  40336c:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403370:	movk	x22, #0x333, lsl #48
  403374:	mov	w21, #0x28                  	// #40
  403378:	stur	q0, [x29, #-176]
  40337c:	ldr	q0, [x8, #2112]
  403380:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403384:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403388:	stur	x28, [x29, #-104]
  40338c:	stur	q0, [x29, #-192]
  403390:	ldr	q0, [x8, #2128]
  403394:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403398:	str	q0, [sp, #192]
  40339c:	ldr	q0, [x8, #2144]
  4033a0:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033a4:	str	q0, [sp, #176]
  4033a8:	ldr	q0, [x8, #2160]
  4033ac:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033b0:	str	q0, [sp, #160]
  4033b4:	ldr	q0, [x8, #2176]
  4033b8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033bc:	str	q0, [sp, #144]
  4033c0:	ldr	q0, [x8, #2192]
  4033c4:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033c8:	str	q0, [sp, #128]
  4033cc:	ldr	q0, [x8, #2208]
  4033d0:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033d4:	str	q0, [sp, #112]
  4033d8:	ldr	q0, [x8, #2224]
  4033dc:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033e0:	str	q0, [sp, #96]
  4033e4:	ldr	q0, [x8, #2240]
  4033e8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033ec:	str	q0, [sp, #80]
  4033f0:	ldr	q0, [x8, #2256]
  4033f4:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4033f8:	str	q0, [sp, #64]
  4033fc:	ldr	q0, [x8, #2272]
  403400:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403404:	str	q0, [sp, #48]
  403408:	ldr	q0, [x8, #2288]
  40340c:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  403410:	str	q0, [sp, #32]
  403414:	ldr	q0, [x8, #2304]
  403418:	str	q0, [sp, #16]
  40341c:	b	403434 <wcrtomb@plt+0x7d4>
  403420:	mov	w26, #0xffffffff            	// #-1
  403424:	bl	4029e0 <__ctype_b_loc@plt>
  403428:	ldr	x8, [x0]
  40342c:	ldrh	w8, [x8, w26, sxtw #1]
  403430:	tbz	w8, #13, 4034ac <wcrtomb@plt+0x84c>
  403434:	ldr	x8, [x27, #1408]
  403438:	cbz	x8, 403460 <wcrtomb@plt+0x800>
  40343c:	ldr	x9, [x19, #1416]
  403440:	cmp	x8, x9
  403444:	b.cs	403420 <wcrtomb@plt+0x7c0>  // b.hs, b.nlast
  403448:	add	x9, x8, #0x1
  40344c:	str	x9, [x27, #1408]
  403450:	ldrb	w26, [x8]
  403454:	cmp	w26, #0x3b
  403458:	b.eq	403434 <wcrtomb@plt+0x7d4>  // b.none
  40345c:	b	403490 <wcrtomb@plt+0x830>
  403460:	ldr	x0, [x23, #1424]
  403464:	cbz	x0, 403420 <wcrtomb@plt+0x7c0>
  403468:	ldrb	w8, [x0]
  40346c:	tbnz	w8, #4, 403420 <wcrtomb@plt+0x7c0>
  403470:	ldp	x8, x9, [x0, #8]
  403474:	cmp	x8, x9
  403478:	b.cs	404fcc <wcrtomb@plt+0x236c>  // b.hs, b.nlast
  40347c:	add	x9, x8, #0x1
  403480:	str	x9, [x0, #8]
  403484:	ldrb	w26, [x8]
  403488:	cmp	w26, #0x3b
  40348c:	b.eq	403434 <wcrtomb@plt+0x7d4>  // b.none
  403490:	cmp	w26, #0xa
  403494:	b.ne	403424 <wcrtomb@plt+0x7c4>  // b.any
  403498:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40349c:	ldr	x8, [x9, #1440]
  4034a0:	add	x8, x8, #0x1
  4034a4:	str	x8, [x9, #1440]
  4034a8:	b	403424 <wcrtomb@plt+0x7c4>
  4034ac:	cmn	w26, #0x1
  4034b0:	b.eq	4051a8 <wcrtomb@plt+0x2548>  // b.none
  4034b4:	ldp	x8, x25, [x28, #8]
  4034b8:	mov	x24, x0
  4034bc:	cmp	x25, x8
  4034c0:	b.ne	4034f0 <wcrtomb@plt+0x890>  // b.any
  4034c4:	add	x8, x25, #0x28
  4034c8:	cmp	x8, x22
  4034cc:	str	x8, [x28, #8]
  4034d0:	b.cs	4051fc <wcrtomb@plt+0x259c>  // b.hs, b.nlast
  4034d4:	ldr	x0, [x28]
  4034d8:	add	x8, x8, x8, lsl #2
  4034dc:	lsl	x1, x8, #3
  4034e0:	bl	416e54 <wcrtomb@plt+0x141f4>
  4034e4:	ldr	x25, [x28, #16]
  4034e8:	str	x0, [x28]
  4034ec:	b	4034f4 <wcrtomb@plt+0x894>
  4034f0:	ldr	x0, [x28]
  4034f4:	stur	x0, [x29, #-80]
  4034f8:	madd	x20, x25, x21, x0
  4034fc:	sub	x0, x29, #0x48
  403500:	mov	w1, w26
  403504:	stp	xzr, xzr, [x20]
  403508:	stur	xzr, [x20, #14]
  40350c:	bl	405914 <wcrtomb@plt+0x2cb4>
  403510:	ldur	x14, [x29, #-80]
  403514:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403518:	tbz	w0, #0, 403628 <wcrtomb@plt+0x9c8>
  40351c:	ldur	w8, [x29, #-72]
  403520:	and	w8, w8, #0xfffffffe
  403524:	cmp	w8, #0x4
  403528:	b.eq	405200 <wcrtomb@plt+0x25a0>  // b.none
  40352c:	sub	x0, x29, #0x48
  403530:	mov	w1, #0x20                  	// #32
  403534:	bl	417044 <wcrtomb@plt+0x143e4>
  403538:	ldur	x14, [x29, #-80]
  40353c:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403540:	str	x0, [x20]
  403544:	b	403558 <wcrtomb@plt+0x8f8>
  403548:	mov	w26, #0xffffffff            	// #-1
  40354c:	ldr	x8, [x24]
  403550:	ldrh	w8, [x8, w26, sxtw #1]
  403554:	tbz	w8, #0, 4035e0 <wcrtomb@plt+0x980>
  403558:	ldr	x8, [x27, #1408]
  40355c:	cbz	x8, 403584 <wcrtomb@plt+0x924>
  403560:	ldr	x9, [x19, #1416]
  403564:	cmp	x8, x9
  403568:	b.cs	403548 <wcrtomb@plt+0x8e8>  // b.hs, b.nlast
  40356c:	add	x9, x8, #0x1
  403570:	str	x9, [x27, #1408]
  403574:	ldrb	w26, [x8]
  403578:	cmp	w26, #0xa
  40357c:	b.ne	40354c <wcrtomb@plt+0x8ec>  // b.any
  403580:	b	4035b4 <wcrtomb@plt+0x954>
  403584:	ldr	x0, [x23, #1424]
  403588:	cbz	x0, 403548 <wcrtomb@plt+0x8e8>
  40358c:	ldrb	w8, [x0]
  403590:	tbnz	w8, #4, 403548 <wcrtomb@plt+0x8e8>
  403594:	ldp	x8, x9, [x0, #8]
  403598:	cmp	x8, x9
  40359c:	b.cs	4035c4 <wcrtomb@plt+0x964>  // b.hs, b.nlast
  4035a0:	add	x9, x8, #0x1
  4035a4:	str	x9, [x0, #8]
  4035a8:	ldrb	w26, [x8]
  4035ac:	cmp	w26, #0xa
  4035b0:	b.ne	40354c <wcrtomb@plt+0x8ec>  // b.any
  4035b4:	ldr	x8, [x11, #1440]
  4035b8:	add	x8, x8, #0x1
  4035bc:	str	x8, [x11, #1440]
  4035c0:	b	40354c <wcrtomb@plt+0x8ec>
  4035c4:	bl	402c20 <__uflow@plt>
  4035c8:	ldur	x14, [x29, #-80]
  4035cc:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4035d0:	mov	w26, w0
  4035d4:	cmp	w26, #0xa
  4035d8:	b.ne	40354c <wcrtomb@plt+0x8ec>  // b.any
  4035dc:	b	4035b4 <wcrtomb@plt+0x954>
  4035e0:	cmp	w26, #0x2c
  4035e4:	b.eq	4036e8 <wcrtomb@plt+0xa88>  // b.none
  4035e8:	ldr	x8, [x20]
  4035ec:	ldr	w9, [x8]
  4035f0:	cmp	w9, #0x2
  4035f4:	b.ne	403628 <wcrtomb@plt+0x9c8>  // b.any
  4035f8:	ldr	x8, [x8, #8]
  4035fc:	cbnz	x8, 403628 <wcrtomb@plt+0x9c8>
  403600:	madd	x8, x25, x21, x14
  403604:	ldr	x8, [x8, #8]
  403608:	cbz	x8, 405234 <wcrtomb@plt+0x25d4>
  40360c:	ldr	w8, [x8]
  403610:	cmp	w8, #0x1
  403614:	b.ne	405234 <wcrtomb@plt+0x25d4>  // b.any
  403618:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40361c:	ldr	w8, [x8, #2264]
  403620:	cmp	w8, #0x2
  403624:	b.eq	405234 <wcrtomb@plt+0x25d4>  // b.none
  403628:	cmp	w26, #0x21
  40362c:	b.ne	403774 <wcrtomb@plt+0xb14>  // b.any
  403630:	madd	x8, x25, x21, x14
  403634:	mov	w9, #0x1                   	// #1
  403638:	strb	w9, [x8, #20]
  40363c:	b	403650 <wcrtomb@plt+0x9f0>
  403640:	mov	w26, #0xffffffff            	// #-1
  403644:	ldr	x8, [x24]
  403648:	ldrh	w8, [x8, w26, sxtw #1]
  40364c:	tbz	w8, #0, 40376c <wcrtomb@plt+0xb0c>
  403650:	ldr	x8, [x27, #1408]
  403654:	cbz	x8, 40367c <wcrtomb@plt+0xa1c>
  403658:	ldr	x9, [x19, #1416]
  40365c:	cmp	x8, x9
  403660:	b.cs	403640 <wcrtomb@plt+0x9e0>  // b.hs, b.nlast
  403664:	add	x9, x8, #0x1
  403668:	str	x9, [x27, #1408]
  40366c:	ldrb	w26, [x8]
  403670:	cmp	w26, #0xa
  403674:	b.ne	403644 <wcrtomb@plt+0x9e4>  // b.any
  403678:	b	4036ac <wcrtomb@plt+0xa4c>
  40367c:	ldr	x0, [x23, #1424]
  403680:	cbz	x0, 403640 <wcrtomb@plt+0x9e0>
  403684:	ldrb	w8, [x0]
  403688:	tbnz	w8, #4, 403640 <wcrtomb@plt+0x9e0>
  40368c:	ldp	x8, x9, [x0, #8]
  403690:	cmp	x8, x9
  403694:	b.cs	4036bc <wcrtomb@plt+0xa5c>  // b.hs, b.nlast
  403698:	add	x9, x8, #0x1
  40369c:	str	x9, [x0, #8]
  4036a0:	ldrb	w26, [x8]
  4036a4:	cmp	w26, #0xa
  4036a8:	b.ne	403644 <wcrtomb@plt+0x9e4>  // b.any
  4036ac:	ldr	x8, [x11, #1440]
  4036b0:	add	x8, x8, #0x1
  4036b4:	str	x8, [x11, #1440]
  4036b8:	b	403644 <wcrtomb@plt+0x9e4>
  4036bc:	bl	402c20 <__uflow@plt>
  4036c0:	ldur	x14, [x29, #-80]
  4036c4:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4036c8:	mov	w26, w0
  4036cc:	cmp	w26, #0xa
  4036d0:	b.ne	403644 <wcrtomb@plt+0x9e4>  // b.any
  4036d4:	b	4036ac <wcrtomb@plt+0xa4c>
  4036d8:	mov	w1, #0xffffffff            	// #-1
  4036dc:	ldr	x8, [x24]
  4036e0:	ldrh	w8, [x8, w1, sxtw #1]
  4036e4:	tbz	w8, #0, 4039d4 <wcrtomb@plt+0xd74>
  4036e8:	ldr	x8, [x27, #1408]
  4036ec:	cbz	x8, 403714 <wcrtomb@plt+0xab4>
  4036f0:	ldr	x9, [x19, #1416]
  4036f4:	cmp	x8, x9
  4036f8:	b.cs	4036d8 <wcrtomb@plt+0xa78>  // b.hs, b.nlast
  4036fc:	add	x9, x8, #0x1
  403700:	str	x9, [x27, #1408]
  403704:	ldrb	w1, [x8]
  403708:	cmp	w1, #0xa
  40370c:	b.ne	4036dc <wcrtomb@plt+0xa7c>  // b.any
  403710:	b	403744 <wcrtomb@plt+0xae4>
  403714:	ldr	x0, [x23, #1424]
  403718:	cbz	x0, 4036d8 <wcrtomb@plt+0xa78>
  40371c:	ldrb	w8, [x0]
  403720:	tbnz	w8, #4, 4036d8 <wcrtomb@plt+0xa78>
  403724:	ldp	x8, x9, [x0, #8]
  403728:	cmp	x8, x9
  40372c:	b.cs	403754 <wcrtomb@plt+0xaf4>  // b.hs, b.nlast
  403730:	add	x9, x8, #0x1
  403734:	str	x9, [x0, #8]
  403738:	ldrb	w1, [x8]
  40373c:	cmp	w1, #0xa
  403740:	b.ne	4036dc <wcrtomb@plt+0xa7c>  // b.any
  403744:	ldr	x8, [x11, #1440]
  403748:	add	x8, x8, #0x1
  40374c:	str	x8, [x11, #1440]
  403750:	b	4036dc <wcrtomb@plt+0xa7c>
  403754:	bl	402c20 <__uflow@plt>
  403758:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40375c:	mov	w1, w0
  403760:	cmp	w1, #0xa
  403764:	b.ne	4036dc <wcrtomb@plt+0xa7c>  // b.any
  403768:	b	403744 <wcrtomb@plt+0xae4>
  40376c:	cmp	w26, #0x21
  403770:	b.eq	40520c <wcrtomb@plt+0x25ac>  // b.none
  403774:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403778:	ldr	w8, [x8, #2264]
  40377c:	cmp	w8, #0x2
  403780:	b.ne	4037b8 <wcrtomb@plt+0xb58>  // b.any
  403784:	sub	w8, w26, #0x3d
  403788:	cmp	w8, #0x3d
  40378c:	b.hi	4037b8 <wcrtomb@plt+0xb58>  // b.pmore
  403790:	mov	x10, #0x1                   	// #1
  403794:	mov	w9, #0x1                   	// #1
  403798:	movk	x10, #0x9010, lsl #32
  40379c:	lsl	x9, x9, x8
  4037a0:	movk	x10, #0x20, lsl #48
  4037a4:	tst	x9, x10
  4037a8:	b.eq	403bf0 <wcrtomb@plt+0xf90>  // b.none
  4037ac:	madd	x8, x25, x21, x14
  4037b0:	ldr	x8, [x8, #8]
  4037b4:	cbnz	x8, 405218 <wcrtomb@plt+0x25b8>
  4037b8:	add	w8, w26, #0x1
  4037bc:	madd	x9, x25, x21, x14
  4037c0:	cmp	w8, #0x7e
  4037c4:	strb	w26, [x9, #21]
  4037c8:	b.hi	4051e8 <wcrtomb@plt+0x2588>  // b.pmore
  4037cc:	adrp	x12, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4037d0:	add	x12, x12, #0x218
  4037d4:	adr	x9, 4037e4 <wcrtomb@plt+0xb84>
  4037d8:	ldrh	w10, [x12, x8, lsl #1]
  4037dc:	add	x9, x9, x10, lsl #2
  4037e0:	br	x9
  4037e4:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4037e8:	add	x20, x20, #0x540
  4037ec:	ldr	x21, [x20]
  4037f0:	ldr	x22, [x28, #16]
  4037f4:	bl	405f04 <wcrtomb@plt+0x32a4>
  4037f8:	ldp	x9, x8, [x20, #136]
  4037fc:	mov	x20, x0
  403800:	sub	x8, x8, x9
  403804:	cmp	x8, #0x2f
  403808:	b.hi	403824 <wcrtomb@plt+0xbc4>  // b.pmore
  40380c:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403810:	add	x24, x24, #0x5b0
  403814:	mov	w1, #0x30                  	// #48
  403818:	mov	x0, x24
  40381c:	bl	4172f8 <_obstack_newchunk@@Base>
  403820:	ldr	x9, [x24, #24]
  403824:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403828:	add	x10, x10, #0x5c0
  40382c:	ldr	x8, [x10]
  403830:	add	x9, x9, #0x30
  403834:	str	x9, [x10, #8]
  403838:	cmp	x9, x8
  40383c:	b.ne	403850 <wcrtomb@plt+0xbf0>  // b.any
  403840:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403844:	ldrb	w10, [x11, #1536]
  403848:	orr	w10, w10, #0x2
  40384c:	strb	w10, [x11, #1536]
  403850:	adrp	x14, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403854:	add	x14, x14, #0x540
  403858:	ldr	x10, [x14, #160]
  40385c:	ldr	x11, [x14, #120]
  403860:	ldr	x12, [x14, #144]
  403864:	add	x9, x10, x9
  403868:	bic	x9, x9, x10
  40386c:	sub	x13, x12, x11
  403870:	sub	x10, x9, x11
  403874:	cmp	x10, x13
  403878:	csel	x9, x12, x9, hi  // hi = pmore
  40387c:	stp	x9, x9, [x14, #128]
  403880:	stp	x22, x20, [x8]
  403884:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  403888:	movk	x22, #0x3334
  40388c:	str	x21, [x8, #40]
  403890:	str	x8, [x14]
  403894:	movk	x22, #0x333, lsl #48
  403898:	mov	w21, #0x28                  	// #40
  40389c:	b	404f50 <wcrtomb@plt+0x22f0>
  4038a0:	mov	w8, #0xffffffff            	// #-1
  4038a4:	ldr	x9, [x24]
  4038a8:	ldrh	w9, [x9, w8, sxtw #1]
  4038ac:	tbz	w9, #0, 40426c <wcrtomb@plt+0x160c>
  4038b0:	ldr	x8, [x27, #1408]
  4038b4:	cbz	x8, 4038dc <wcrtomb@plt+0xc7c>
  4038b8:	ldr	x9, [x19, #1416]
  4038bc:	cmp	x8, x9
  4038c0:	b.cs	4038a0 <wcrtomb@plt+0xc40>  // b.hs, b.nlast
  4038c4:	add	x9, x8, #0x1
  4038c8:	str	x9, [x27, #1408]
  4038cc:	ldrb	w8, [x8]
  4038d0:	cmp	w8, #0xa
  4038d4:	b.ne	4038a4 <wcrtomb@plt+0xc44>  // b.any
  4038d8:	b	40390c <wcrtomb@plt+0xcac>
  4038dc:	ldr	x0, [x23, #1424]
  4038e0:	cbz	x0, 4038a0 <wcrtomb@plt+0xc40>
  4038e4:	ldrb	w8, [x0]
  4038e8:	tbnz	w8, #4, 4038a0 <wcrtomb@plt+0xc40>
  4038ec:	ldp	x8, x9, [x0, #8]
  4038f0:	cmp	x8, x9
  4038f4:	b.cs	403920 <wcrtomb@plt+0xcc0>  // b.hs, b.nlast
  4038f8:	add	x9, x8, #0x1
  4038fc:	str	x9, [x0, #8]
  403900:	ldrb	w8, [x8]
  403904:	cmp	w8, #0xa
  403908:	b.ne	4038a4 <wcrtomb@plt+0xc44>  // b.any
  40390c:	ldr	x8, [x11, #1440]
  403910:	add	x8, x8, #0x1
  403914:	str	x8, [x11, #1440]
  403918:	mov	w8, #0xa                   	// #10
  40391c:	b	4038a4 <wcrtomb@plt+0xc44>
  403920:	bl	402c20 <__uflow@plt>
  403924:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403928:	mov	w8, w0
  40392c:	cmp	w8, #0xa
  403930:	b.ne	4038a4 <wcrtomb@plt+0xc44>  // b.any
  403934:	b	40390c <wcrtomb@plt+0xcac>
  403938:	mov	w8, #0xffffffff            	// #-1
  40393c:	ldr	x9, [x24]
  403940:	ldrh	w9, [x9, w8, sxtw #1]
  403944:	tbz	w9, #0, 403cdc <wcrtomb@plt+0x107c>
  403948:	ldr	x8, [x27, #1408]
  40394c:	cbz	x8, 403974 <wcrtomb@plt+0xd14>
  403950:	ldr	x9, [x19, #1416]
  403954:	cmp	x8, x9
  403958:	b.cs	403938 <wcrtomb@plt+0xcd8>  // b.hs, b.nlast
  40395c:	add	x9, x8, #0x1
  403960:	str	x9, [x27, #1408]
  403964:	ldrb	w8, [x8]
  403968:	cmp	w8, #0xa
  40396c:	b.ne	40393c <wcrtomb@plt+0xcdc>  // b.any
  403970:	b	4039a4 <wcrtomb@plt+0xd44>
  403974:	ldr	x0, [x23, #1424]
  403978:	cbz	x0, 403938 <wcrtomb@plt+0xcd8>
  40397c:	ldrb	w8, [x0]
  403980:	tbnz	w8, #4, 403938 <wcrtomb@plt+0xcd8>
  403984:	ldp	x8, x9, [x0, #8]
  403988:	cmp	x8, x9
  40398c:	b.cs	4039b8 <wcrtomb@plt+0xd58>  // b.hs, b.nlast
  403990:	add	x9, x8, #0x1
  403994:	str	x9, [x0, #8]
  403998:	ldrb	w8, [x8]
  40399c:	cmp	w8, #0xa
  4039a0:	b.ne	40393c <wcrtomb@plt+0xcdc>  // b.any
  4039a4:	ldr	x8, [x11, #1440]
  4039a8:	add	x8, x8, #0x1
  4039ac:	str	x8, [x11, #1440]
  4039b0:	mov	w8, #0xa                   	// #10
  4039b4:	b	40393c <wcrtomb@plt+0xcdc>
  4039b8:	bl	402c20 <__uflow@plt>
  4039bc:	ldur	x14, [x29, #-80]
  4039c0:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4039c4:	mov	w8, w0
  4039c8:	cmp	w8, #0xa
  4039cc:	b.ne	40393c <wcrtomb@plt+0xcdc>  // b.any
  4039d0:	b	4039a4 <wcrtomb@plt+0xd44>
  4039d4:	sub	x0, x29, #0x48
  4039d8:	bl	405914 <wcrtomb@plt+0x2cb4>
  4039dc:	tbz	w0, #0, 40524c <wcrtomb@plt+0x25ec>
  4039e0:	sub	x0, x29, #0x48
  4039e4:	mov	w1, #0x20                  	// #32
  4039e8:	bl	417044 <wcrtomb@plt+0x143e4>
  4039ec:	ldur	x14, [x29, #-80]
  4039f0:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4039f4:	madd	x8, x25, x21, x14
  4039f8:	str	x0, [x8, #8]
  4039fc:	b	403a10 <wcrtomb@plt+0xdb0>
  403a00:	mov	w26, #0xffffffff            	// #-1
  403a04:	ldr	x8, [x24]
  403a08:	ldrh	w8, [x8, w26, sxtw #1]
  403a0c:	tbz	w8, #0, 4035e8 <wcrtomb@plt+0x988>
  403a10:	ldr	x8, [x27, #1408]
  403a14:	cbz	x8, 403a3c <wcrtomb@plt+0xddc>
  403a18:	ldr	x9, [x19, #1416]
  403a1c:	cmp	x8, x9
  403a20:	b.cs	403a00 <wcrtomb@plt+0xda0>  // b.hs, b.nlast
  403a24:	add	x9, x8, #0x1
  403a28:	str	x9, [x27, #1408]
  403a2c:	ldrb	w26, [x8]
  403a30:	cmp	w26, #0xa
  403a34:	b.ne	403a04 <wcrtomb@plt+0xda4>  // b.any
  403a38:	b	403a6c <wcrtomb@plt+0xe0c>
  403a3c:	ldr	x0, [x23, #1424]
  403a40:	cbz	x0, 403a00 <wcrtomb@plt+0xda0>
  403a44:	ldrb	w8, [x0]
  403a48:	tbnz	w8, #4, 403a00 <wcrtomb@plt+0xda0>
  403a4c:	ldp	x8, x9, [x0, #8]
  403a50:	cmp	x8, x9
  403a54:	b.cs	403a7c <wcrtomb@plt+0xe1c>  // b.hs, b.nlast
  403a58:	add	x9, x8, #0x1
  403a5c:	str	x9, [x0, #8]
  403a60:	ldrb	w26, [x8]
  403a64:	cmp	w26, #0xa
  403a68:	b.ne	403a04 <wcrtomb@plt+0xda4>  // b.any
  403a6c:	ldr	x8, [x11, #1440]
  403a70:	add	x8, x8, #0x1
  403a74:	str	x8, [x11, #1440]
  403a78:	b	403a04 <wcrtomb@plt+0xda4>
  403a7c:	bl	402c20 <__uflow@plt>
  403a80:	ldur	x14, [x29, #-80]
  403a84:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403a88:	mov	w26, w0
  403a8c:	cmp	w26, #0xa
  403a90:	b.ne	403a04 <wcrtomb@plt+0xda4>  // b.any
  403a94:	b	403a6c <wcrtomb@plt+0xe0c>
  403a98:	madd	x8, x25, x21, x14
  403a9c:	ldr	x8, [x8, #8]
  403aa0:	cbz	x8, 403ab8 <wcrtomb@plt+0xe58>
  403aa4:	b	405218 <wcrtomb@plt+0x25b8>
  403aa8:	mov	w8, #0xffffffff            	// #-1
  403aac:	ldr	x9, [x24]
  403ab0:	ldrh	w10, [x9, w8, sxtw #1]
  403ab4:	tbz	w10, #0, 403b44 <wcrtomb@plt+0xee4>
  403ab8:	ldr	x8, [x27, #1408]
  403abc:	cbz	x8, 403ae4 <wcrtomb@plt+0xe84>
  403ac0:	ldr	x9, [x19, #1416]
  403ac4:	cmp	x8, x9
  403ac8:	b.cs	403aa8 <wcrtomb@plt+0xe48>  // b.hs, b.nlast
  403acc:	add	x9, x8, #0x1
  403ad0:	str	x9, [x27, #1408]
  403ad4:	ldrb	w8, [x8]
  403ad8:	cmp	w8, #0xa
  403adc:	b.ne	403aac <wcrtomb@plt+0xe4c>  // b.any
  403ae0:	b	403b14 <wcrtomb@plt+0xeb4>
  403ae4:	ldr	x0, [x23, #1424]
  403ae8:	cbz	x0, 403aa8 <wcrtomb@plt+0xe48>
  403aec:	ldrb	w8, [x0]
  403af0:	tbnz	w8, #4, 403aa8 <wcrtomb@plt+0xe48>
  403af4:	ldp	x8, x9, [x0, #8]
  403af8:	cmp	x8, x9
  403afc:	b.cs	403b28 <wcrtomb@plt+0xec8>  // b.hs, b.nlast
  403b00:	add	x9, x8, #0x1
  403b04:	str	x9, [x0, #8]
  403b08:	ldrb	w8, [x8]
  403b0c:	cmp	w8, #0xa
  403b10:	b.ne	403aac <wcrtomb@plt+0xe4c>  // b.any
  403b14:	ldr	x8, [x11, #1440]
  403b18:	add	x8, x8, #0x1
  403b1c:	str	x8, [x11, #1440]
  403b20:	mov	w8, #0xa                   	// #10
  403b24:	b	403aac <wcrtomb@plt+0xe4c>
  403b28:	bl	402c20 <__uflow@plt>
  403b2c:	ldur	x14, [x29, #-80]
  403b30:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403b34:	mov	w8, w0
  403b38:	cmp	w8, #0xa
  403b3c:	b.ne	403aac <wcrtomb@plt+0xe4c>  // b.any
  403b40:	b	403b14 <wcrtomb@plt+0xeb4>
  403b44:	and	w10, w8, #0xff
  403b48:	ldrh	w9, [x9, w10, uxtw #1]
  403b4c:	tbz	w9, #11, 403b7c <wcrtomb@plt+0xf1c>
  403b50:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403b54:	ldr	w9, [x9, #2264]
  403b58:	cmp	w9, #0x2
  403b5c:	b.eq	403b7c <wcrtomb@plt+0xf1c>  // b.none
  403b60:	mov	w0, w8
  403b64:	mov	x20, x14
  403b68:	bl	4061d0 <wcrtomb@plt+0x3570>
  403b6c:	madd	x8, x25, x21, x20
  403b70:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403b74:	str	w0, [x8, #24]
  403b78:	b	4041e4 <wcrtomb@plt+0x1584>
  403b7c:	madd	x9, x25, x21, x14
  403b80:	cmn	w8, #0x1
  403b84:	mov	w10, #0xffffffff            	// #-1
  403b88:	str	w10, [x9, #24]
  403b8c:	b.eq	4041e4 <wcrtomb@plt+0x1584>  // b.none
  403b90:	cmp	w8, #0xa
  403b94:	b.ne	403ba8 <wcrtomb@plt+0xf48>  // b.any
  403b98:	ldr	x9, [x11, #1440]
  403b9c:	cbz	x9, 403ba8 <wcrtomb@plt+0xf48>
  403ba0:	sub	x9, x9, #0x1
  403ba4:	str	x9, [x11, #1440]
  403ba8:	ldr	x9, [x27, #1408]
  403bac:	cbz	x9, 4041c0 <wcrtomb@plt+0x1560>
  403bb0:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403bb4:	ldr	x10, [x10, #1400]
  403bb8:	cmp	x9, x10
  403bbc:	b.ls	405224 <wcrtomb@plt+0x25c4>  // b.plast
  403bc0:	sub	x10, x9, #0x1
  403bc4:	str	x10, [x27, #1408]
  403bc8:	ldurb	w9, [x9, #-1]
  403bcc:	cmp	w8, w9
  403bd0:	b.eq	4041e4 <wcrtomb@plt+0x1584>  // b.none
  403bd4:	b	405224 <wcrtomb@plt+0x25c4>
  403bd8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403bdc:	ldr	x1, [x8, #1112]
  403be0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403be4:	mov	w2, #0x1                   	// #1
  403be8:	add	x0, x0, #0x558
  403bec:	b	403d84 <wcrtomb@plt+0x1124>
  403bf0:	mov	w9, #0x1                   	// #1
  403bf4:	lsl	x8, x9, x8
  403bf8:	mov	x9, #0x8200                	// #33280
  403bfc:	movk	x9, #0x4b0, lsl #16
  403c00:	movk	x9, #0x100, lsl #32
  403c04:	movk	x9, #0x2200, lsl #48
  403c08:	tst	x8, x9
  403c0c:	b.eq	4037b8 <wcrtomb@plt+0xb58>  // b.none
  403c10:	b	4051e8 <wcrtomb@plt+0x2588>
  403c14:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403c18:	ldrb	w8, [x8, #1868]
  403c1c:	cbz	w8, 403c34 <wcrtomb@plt+0xfd4>
  403c20:	b	405320 <wcrtomb@plt+0x26c0>
  403c24:	mov	w8, #0xffffffff            	// #-1
  403c28:	ldr	x9, [x24]
  403c2c:	ldrh	w9, [x9, w8, sxtw #1]
  403c30:	tbz	w9, #0, 403cc0 <wcrtomb@plt+0x1060>
  403c34:	ldr	x8, [x27, #1408]
  403c38:	cbz	x8, 403c60 <wcrtomb@plt+0x1000>
  403c3c:	ldr	x9, [x19, #1416]
  403c40:	cmp	x8, x9
  403c44:	b.cs	403c24 <wcrtomb@plt+0xfc4>  // b.hs, b.nlast
  403c48:	add	x9, x8, #0x1
  403c4c:	str	x9, [x27, #1408]
  403c50:	ldrb	w8, [x8]
  403c54:	cmp	w8, #0xa
  403c58:	b.ne	403c28 <wcrtomb@plt+0xfc8>  // b.any
  403c5c:	b	403c90 <wcrtomb@plt+0x1030>
  403c60:	ldr	x0, [x23, #1424]
  403c64:	cbz	x0, 403c24 <wcrtomb@plt+0xfc4>
  403c68:	ldrb	w8, [x0]
  403c6c:	tbnz	w8, #4, 403c24 <wcrtomb@plt+0xfc4>
  403c70:	ldp	x8, x9, [x0, #8]
  403c74:	cmp	x8, x9
  403c78:	b.cs	403ca4 <wcrtomb@plt+0x1044>  // b.hs, b.nlast
  403c7c:	add	x9, x8, #0x1
  403c80:	str	x9, [x0, #8]
  403c84:	ldrb	w8, [x8]
  403c88:	cmp	w8, #0xa
  403c8c:	b.ne	403c28 <wcrtomb@plt+0xfc8>  // b.any
  403c90:	ldr	x8, [x11, #1440]
  403c94:	add	x8, x8, #0x1
  403c98:	str	x8, [x11, #1440]
  403c9c:	mov	w8, #0xa                   	// #10
  403ca0:	b	403c28 <wcrtomb@plt+0xfc8>
  403ca4:	bl	402c20 <__uflow@plt>
  403ca8:	ldur	x14, [x29, #-80]
  403cac:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403cb0:	mov	w8, w0
  403cb4:	cmp	w8, #0xa
  403cb8:	b.ne	403c28 <wcrtomb@plt+0xfc8>  // b.any
  403cbc:	b	403c90 <wcrtomb@plt+0x1030>
  403cc0:	cmp	w8, #0xa
  403cc4:	b.eq	403cd0 <wcrtomb@plt+0x1070>  // b.none
  403cc8:	cmn	w8, #0x1
  403ccc:	b.ne	403cdc <wcrtomb@plt+0x107c>  // b.any
  403cd0:	madd	x8, x25, x21, x14
  403cd4:	str	xzr, [x8, #32]
  403cd8:	b	404f50 <wcrtomb@plt+0x22f0>
  403cdc:	cmp	w8, #0x5c
  403ce0:	b.eq	403d44 <wcrtomb@plt+0x10e4>  // b.none
  403ce4:	cmn	w8, #0x1
  403ce8:	b.eq	405270 <wcrtomb@plt+0x2610>  // b.none
  403cec:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403cf0:	ldr	w9, [x9, #2264]
  403cf4:	cmp	w9, #0x2
  403cf8:	b.eq	405270 <wcrtomb@plt+0x2610>  // b.none
  403cfc:	cmp	w8, #0xa
  403d00:	b.ne	403d14 <wcrtomb@plt+0x10b4>  // b.any
  403d04:	ldr	x9, [x11, #1440]
  403d08:	cbz	x9, 403d14 <wcrtomb@plt+0x10b4>
  403d0c:	sub	x9, x9, #0x1
  403d10:	str	x9, [x11, #1440]
  403d14:	ldr	x9, [x27, #1408]
  403d18:	cbz	x9, 404150 <wcrtomb@plt+0x14f0>
  403d1c:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403d20:	ldr	x10, [x10, #1400]
  403d24:	cmp	x9, x10
  403d28:	b.ls	405224 <wcrtomb@plt+0x25c4>  // b.plast
  403d2c:	sub	x10, x9, #0x1
  403d30:	str	x10, [x27, #1408]
  403d34:	ldurb	w9, [x9, #-1]
  403d38:	cmp	w8, w9
  403d3c:	b.eq	404160 <wcrtomb@plt+0x1500>  // b.none
  403d40:	b	405224 <wcrtomb@plt+0x25c4>
  403d44:	ldr	x8, [x27, #1408]
  403d48:	cbz	x8, 404168 <wcrtomb@plt+0x1508>
  403d4c:	ldr	x9, [x19, #1416]
  403d50:	cmp	x8, x9
  403d54:	b.cs	4041ac <wcrtomb@plt+0x154c>  // b.hs, b.nlast
  403d58:	add	x9, x8, #0x1
  403d5c:	str	x9, [x27, #1408]
  403d60:	ldrb	w1, [x8]
  403d64:	cmp	w1, #0xa
  403d68:	b.eq	404198 <wcrtomb@plt+0x1538>  // b.none
  403d6c:	b	4041b0 <wcrtomb@plt+0x1550>
  403d70:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403d74:	ldr	x1, [x8, #1104]
  403d78:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403d7c:	add	x0, x0, #0x550
  403d80:	mov	w2, wzr
  403d84:	mov	x20, x14
  403d88:	bl	40649c <wcrtomb@plt+0x383c>
  403d8c:	madd	x8, x25, x21, x20
  403d90:	str	x0, [x8, #24]
  403d94:	b	404f50 <wcrtomb@plt+0x22f0>
  403d98:	ldr	x8, [x20]
  403d9c:	cbnz	x8, 40527c <wcrtomb@plt+0x261c>
  403da0:	ldr	x8, [x27, #1408]
  403da4:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403da8:	add	x20, x20, #0x518
  403dac:	cbz	x8, 4042f4 <wcrtomb@plt+0x1694>
  403db0:	ldr	x9, [x19, #1416]
  403db4:	cmp	x8, x9
  403db8:	b.cs	404c8c <wcrtomb@plt+0x202c>  // b.hs, b.nlast
  403dbc:	add	x9, x8, #0x1
  403dc0:	str	x9, [x27, #1408]
  403dc4:	ldrb	w0, [x8]
  403dc8:	cmp	w0, #0x6e
  403dcc:	b.ne	405114 <wcrtomb@plt+0x24b4>  // b.any
  403dd0:	b	404324 <wcrtomb@plt+0x16c4>
  403dd4:	ldr	x8, [x20]
  403dd8:	cbnz	x8, 405288 <wcrtomb@plt+0x2628>
  403ddc:	bl	405f04 <wcrtomb@plt+0x32a4>
  403de0:	ldrb	w8, [x0]
  403de4:	cbz	w8, 405294 <wcrtomb@plt+0x2634>
  403de8:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403dec:	add	x10, x10, #0x548
  403df0:	ldp	x9, x8, [x10, #128]
  403df4:	ldr	x21, [x10]
  403df8:	ldr	x22, [x28, #16]
  403dfc:	mov	x20, x0
  403e00:	sub	x8, x8, x9
  403e04:	cmp	x8, #0x2f
  403e08:	b.hi	403e24 <wcrtomb@plt+0x11c4>  // b.pmore
  403e0c:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403e10:	add	x24, x24, #0x5b0
  403e14:	mov	w1, #0x30                  	// #48
  403e18:	mov	x0, x24
  403e1c:	bl	4172f8 <_obstack_newchunk@@Base>
  403e20:	ldr	x9, [x24, #24]
  403e24:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403e28:	add	x10, x10, #0x5c0
  403e2c:	ldr	x8, [x10]
  403e30:	add	x9, x9, #0x30
  403e34:	str	x9, [x10, #8]
  403e38:	cmp	x9, x8
  403e3c:	b.ne	403e50 <wcrtomb@plt+0x11f0>  // b.any
  403e40:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403e44:	ldrb	w10, [x11, #1536]
  403e48:	orr	w10, w10, #0x2
  403e4c:	strb	w10, [x11, #1536]
  403e50:	adrp	x13, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403e54:	add	x13, x13, #0x548
  403e58:	ldr	x10, [x13, #152]
  403e5c:	ldr	x11, [x13, #112]
  403e60:	ldr	x12, [x13, #136]
  403e64:	add	x9, x10, x9
  403e68:	bic	x9, x9, x10
  403e6c:	sub	x10, x12, x11
  403e70:	sub	x11, x9, x11
  403e74:	cmp	x11, x10
  403e78:	csel	x9, x12, x9, hi  // hi = pmore
  403e7c:	stp	x9, x9, [x13, #120]
  403e80:	stp	x22, x20, [x8]
  403e84:	str	x21, [x8, #40]
  403e88:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403e8c:	ldrb	w9, [x9, #1872]
  403e90:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  403e94:	movk	x22, #0x3334
  403e98:	movk	x22, #0x333, lsl #48
  403e9c:	mov	w21, #0x28                  	// #40
  403ea0:	str	x8, [x13]
  403ea4:	cbz	w9, 404f50 <wcrtomb@plt+0x22f0>
  403ea8:	mov	x0, x20
  403eac:	bl	4028d0 <strdup@plt>
  403eb0:	ldur	x8, [x29, #-80]
  403eb4:	madd	x8, x25, x21, x8
  403eb8:	str	x0, [x8, #24]
  403ebc:	b	404f50 <wcrtomb@plt+0x22f0>
  403ec0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403ec4:	ldr	x8, [x8, #1320]
  403ec8:	cbz	x8, 4052a0 <wcrtomb@plt+0x2640>
  403ecc:	ldr	x8, [x20]
  403ed0:	cbz	x8, 403ee8 <wcrtomb@plt+0x1288>
  403ed4:	b	4052ac <wcrtomb@plt+0x264c>
  403ed8:	mov	w8, #0xffffffff            	// #-1
  403edc:	ldr	x9, [x24]
  403ee0:	ldrh	w9, [x9, w8, sxtw #1]
  403ee4:	tbz	w9, #0, 403f70 <wcrtomb@plt+0x1310>
  403ee8:	ldr	x8, [x27, #1408]
  403eec:	cbz	x8, 403f14 <wcrtomb@plt+0x12b4>
  403ef0:	ldr	x9, [x19, #1416]
  403ef4:	cmp	x8, x9
  403ef8:	b.cs	403ed8 <wcrtomb@plt+0x1278>  // b.hs, b.nlast
  403efc:	add	x9, x8, #0x1
  403f00:	str	x9, [x27, #1408]
  403f04:	ldrb	w8, [x8]
  403f08:	cmp	w8, #0xa
  403f0c:	b.ne	403edc <wcrtomb@plt+0x127c>  // b.any
  403f10:	b	403f44 <wcrtomb@plt+0x12e4>
  403f14:	ldr	x0, [x23, #1424]
  403f18:	cbz	x0, 403ed8 <wcrtomb@plt+0x1278>
  403f1c:	ldrb	w8, [x0]
  403f20:	tbnz	w8, #4, 403ed8 <wcrtomb@plt+0x1278>
  403f24:	ldp	x8, x9, [x0, #8]
  403f28:	cmp	x8, x9
  403f2c:	b.cs	403f58 <wcrtomb@plt+0x12f8>  // b.hs, b.nlast
  403f30:	add	x9, x8, #0x1
  403f34:	str	x9, [x0, #8]
  403f38:	ldrb	w8, [x8]
  403f3c:	cmp	w8, #0xa
  403f40:	b.ne	403edc <wcrtomb@plt+0x127c>  // b.any
  403f44:	ldr	x8, [x11, #1440]
  403f48:	add	x8, x8, #0x1
  403f4c:	str	x8, [x11, #1440]
  403f50:	mov	w8, #0xa                   	// #10
  403f54:	b	403edc <wcrtomb@plt+0x127c>
  403f58:	bl	402c20 <__uflow@plt>
  403f5c:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403f60:	mov	w8, w0
  403f64:	cmp	w8, #0xa
  403f68:	b.ne	403edc <wcrtomb@plt+0x127c>  // b.any
  403f6c:	b	403f44 <wcrtomb@plt+0x12e4>
  403f70:	cmp	w8, #0x22
  403f74:	b.le	4042e0 <wcrtomb@plt+0x1680>
  403f78:	cmp	w8, #0x7d
  403f7c:	b.eq	403f90 <wcrtomb@plt+0x1330>  // b.none
  403f80:	cmp	w8, #0x3b
  403f84:	b.eq	404ef4 <wcrtomb@plt+0x2294>  // b.none
  403f88:	cmp	w8, #0x23
  403f8c:	b.ne	405258 <wcrtomb@plt+0x25f8>  // b.any
  403f90:	ldr	x9, [x27, #1408]
  403f94:	cbz	x9, 404ee8 <wcrtomb@plt+0x2288>
  403f98:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403f9c:	ldr	x10, [x10, #1400]
  403fa0:	cmp	x9, x10
  403fa4:	b.ls	405224 <wcrtomb@plt+0x25c4>  // b.plast
  403fa8:	sub	x10, x9, #0x1
  403fac:	str	x10, [x27, #1408]
  403fb0:	ldurb	w9, [x9, #-1]
  403fb4:	cmp	w8, w9
  403fb8:	b.eq	404ef4 <wcrtomb@plt+0x2294>  // b.none
  403fbc:	b	405224 <wcrtomb@plt+0x25c4>
  403fc0:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403fc4:	add	x10, x10, #0x528
  403fc8:	ldp	x9, x8, [x10, #160]
  403fcc:	ldr	x20, [x10]
  403fd0:	ldr	x21, [x28, #16]
  403fd4:	sub	x8, x8, x9
  403fd8:	cmp	x8, #0x2f
  403fdc:	b.hi	403ffc <wcrtomb@plt+0x139c>  // b.pmore
  403fe0:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  403fe4:	add	x24, x24, #0x5b0
  403fe8:	mov	w1, #0x30                  	// #48
  403fec:	mov	x0, x24
  403ff0:	bl	4172f8 <_obstack_newchunk@@Base>
  403ff4:	ldur	x14, [x29, #-80]
  403ff8:	ldr	x9, [x24, #24]
  403ffc:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404000:	add	x10, x10, #0x5c0
  404004:	ldr	x8, [x10]
  404008:	add	x9, x9, #0x30
  40400c:	str	x9, [x10, #8]
  404010:	cmp	x9, x8
  404014:	b.ne	404028 <wcrtomb@plt+0x13c8>  // b.any
  404018:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40401c:	ldrb	w10, [x11, #1536]
  404020:	orr	w10, w10, #0x2
  404024:	strb	w10, [x11, #1536]
  404028:	adrp	x13, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40402c:	add	x13, x13, #0x528
  404030:	ldr	x10, [x13, #184]
  404034:	ldr	x11, [x13, #144]
  404038:	ldr	x12, [x13, #168]
  40403c:	add	x9, x10, x9
  404040:	bic	x9, x9, x10
  404044:	sub	x10, x12, x11
  404048:	sub	x11, x9, x11
  40404c:	cmp	x11, x10
  404050:	csel	x9, x12, x9, hi  // hi = pmore
  404054:	stp	x9, x9, [x13, #152]
  404058:	stp	x21, xzr, [x8]
  40405c:	ldr	q0, [x13, #112]
  404060:	ldr	x9, [x13, #128]
  404064:	mov	w21, #0x28                  	// #40
  404068:	str	q0, [x8, #16]
  40406c:	stp	x9, x20, [x8, #32]
  404070:	str	x8, [x13]
  404074:	madd	x8, x25, x21, x14
  404078:	ldrb	w9, [x8, #20]
  40407c:	cmp	w9, #0x0
  404080:	cset	w9, eq  // eq = none
  404084:	strb	w9, [x8, #20]
  404088:	b	404f50 <wcrtomb@plt+0x22f0>
  40408c:	ldr	x8, [x27, #1408]
  404090:	cbz	x8, 404358 <wcrtomb@plt+0x16f8>
  404094:	ldr	x9, [x19, #1416]
  404098:	cmp	x8, x9
  40409c:	b.cs	404398 <wcrtomb@plt+0x1738>  // b.hs, b.nlast
  4040a0:	add	x9, x8, #0x1
  4040a4:	str	x9, [x27, #1408]
  4040a8:	ldrb	w20, [x8]
  4040ac:	cmp	w20, #0xa
  4040b0:	b.eq	404388 <wcrtomb@plt+0x1728>  // b.none
  4040b4:	b	40439c <wcrtomb@plt+0x173c>
  4040b8:	bl	4062e8 <wcrtomb@plt+0x3688>
  4040bc:	mov	x20, x0
  4040c0:	bl	40c788 <wcrtomb@plt+0x9b28>
  4040c4:	ldrb	w8, [x0]
  4040c8:	cbz	w8, 4052b8 <wcrtomb@plt+0x2658>
  4040cc:	bl	417098 <wcrtomb@plt+0x14438>
  4040d0:	ldur	x8, [x29, #-80]
  4040d4:	madd	x8, x25, x21, x8
  4040d8:	str	x0, [x8, #24]
  4040dc:	b	404f48 <wcrtomb@plt+0x22e8>
  4040e0:	ldr	x8, [x27, #1408]
  4040e4:	cbz	x8, 404614 <wcrtomb@plt+0x19b4>
  4040e8:	ldr	x9, [x19, #1416]
  4040ec:	cmp	x8, x9
  4040f0:	b.cs	404654 <wcrtomb@plt+0x19f4>  // b.hs, b.nlast
  4040f4:	add	x9, x8, #0x1
  4040f8:	str	x9, [x27, #1408]
  4040fc:	ldrb	w20, [x8]
  404100:	cmp	w20, #0xa
  404104:	b.eq	404644 <wcrtomb@plt+0x19e4>  // b.none
  404108:	b	404658 <wcrtomb@plt+0x19f8>
  40410c:	bl	405f04 <wcrtomb@plt+0x32a4>
  404110:	ldrb	w8, [x0]
  404114:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  404118:	mov	x20, x0
  40411c:	add	x1, x1, #0x999
  404120:	cmp	w8, #0x0
  404124:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  404128:	add	x8, x8, #0x995
  40412c:	csel	x0, x8, x0, eq  // eq = none
  404130:	bl	4027d0 <strverscmp@plt>
  404134:	cmp	w0, #0x1
  404138:	b.ge	4052c4 <wcrtomb@plt+0x2664>  // b.tcont
  40413c:	mov	x0, x20
  404140:	bl	402a10 <free@plt>
  404144:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404148:	str	wzr, [x8, #2264]
  40414c:	b	403434 <wcrtomb@plt+0x7d4>
  404150:	ldr	x1, [x23, #1424]
  404154:	mov	w0, w8
  404158:	bl	402a20 <ungetc@plt>
  40415c:	ldur	x14, [x29, #-80]
  404160:	mov	w1, #0xa                   	// #10
  404164:	b	4041b0 <wcrtomb@plt+0x1550>
  404168:	ldr	x0, [x23, #1424]
  40416c:	cbz	x0, 4041ac <wcrtomb@plt+0x154c>
  404170:	ldrb	w8, [x0]
  404174:	tbnz	w8, #4, 4041ac <wcrtomb@plt+0x154c>
  404178:	ldp	x8, x9, [x0, #8]
  40417c:	cmp	x8, x9
  404180:	b.cs	4050a4 <wcrtomb@plt+0x2444>  // b.hs, b.nlast
  404184:	add	x9, x8, #0x1
  404188:	str	x9, [x0, #8]
  40418c:	ldrb	w1, [x8]
  404190:	cmp	w1, #0xa
  404194:	b.ne	4041b0 <wcrtomb@plt+0x1550>  // b.any
  404198:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40419c:	ldr	x8, [x9, #1440]
  4041a0:	add	x8, x8, #0x1
  4041a4:	str	x8, [x9, #1440]
  4041a8:	b	4041b0 <wcrtomb@plt+0x1550>
  4041ac:	mov	w1, #0xffffffff            	// #-1
  4041b0:	madd	x8, x25, x21, x14
  4041b4:	add	x0, x8, #0x18
  4041b8:	bl	40567c <wcrtomb@plt+0x2a1c>
  4041bc:	b	404f50 <wcrtomb@plt+0x22f0>
  4041c0:	ldr	x1, [x23, #1424]
  4041c4:	mov	w0, w8
  4041c8:	bl	402a20 <ungetc@plt>
  4041cc:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4041d0:	b	4041e4 <wcrtomb@plt+0x1584>
  4041d4:	mov	w8, #0xffffffff            	// #-1
  4041d8:	ldr	x9, [x24]
  4041dc:	ldrh	w9, [x9, w8, sxtw #1]
  4041e0:	tbz	w9, #0, 40426c <wcrtomb@plt+0x160c>
  4041e4:	ldr	x8, [x27, #1408]
  4041e8:	cbz	x8, 404210 <wcrtomb@plt+0x15b0>
  4041ec:	ldr	x9, [x19, #1416]
  4041f0:	cmp	x8, x9
  4041f4:	b.cs	4041d4 <wcrtomb@plt+0x1574>  // b.hs, b.nlast
  4041f8:	add	x9, x8, #0x1
  4041fc:	str	x9, [x27, #1408]
  404200:	ldrb	w8, [x8]
  404204:	cmp	w8, #0xa
  404208:	b.ne	4041d8 <wcrtomb@plt+0x1578>  // b.any
  40420c:	b	404240 <wcrtomb@plt+0x15e0>
  404210:	ldr	x0, [x23, #1424]
  404214:	cbz	x0, 4041d4 <wcrtomb@plt+0x1574>
  404218:	ldrb	w8, [x0]
  40421c:	tbnz	w8, #4, 4041d4 <wcrtomb@plt+0x1574>
  404220:	ldp	x8, x9, [x0, #8]
  404224:	cmp	x8, x9
  404228:	b.cs	404254 <wcrtomb@plt+0x15f4>  // b.hs, b.nlast
  40422c:	add	x9, x8, #0x1
  404230:	str	x9, [x0, #8]
  404234:	ldrb	w8, [x8]
  404238:	cmp	w8, #0xa
  40423c:	b.ne	4041d8 <wcrtomb@plt+0x1578>  // b.any
  404240:	ldr	x8, [x11, #1440]
  404244:	add	x8, x8, #0x1
  404248:	str	x8, [x11, #1440]
  40424c:	mov	w8, #0xa                   	// #10
  404250:	b	4041d8 <wcrtomb@plt+0x1578>
  404254:	bl	402c20 <__uflow@plt>
  404258:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40425c:	mov	w8, w0
  404260:	cmp	w8, #0xa
  404264:	b.ne	4041d8 <wcrtomb@plt+0x1578>  // b.any
  404268:	b	404240 <wcrtomb@plt+0x15e0>
  40426c:	cmp	w8, #0x22
  404270:	b.le	4042bc <wcrtomb@plt+0x165c>
  404274:	cmp	w8, #0x7d
  404278:	b.eq	40428c <wcrtomb@plt+0x162c>  // b.none
  40427c:	cmp	w8, #0x3b
  404280:	b.eq	404f50 <wcrtomb@plt+0x22f0>  // b.none
  404284:	cmp	w8, #0x23
  404288:	b.ne	405258 <wcrtomb@plt+0x25f8>  // b.any
  40428c:	ldr	x9, [x27, #1408]
  404290:	cbz	x9, 4042d0 <wcrtomb@plt+0x1670>
  404294:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404298:	ldr	x10, [x10, #1400]
  40429c:	cmp	x9, x10
  4042a0:	b.ls	405224 <wcrtomb@plt+0x25c4>  // b.plast
  4042a4:	sub	x10, x9, #0x1
  4042a8:	str	x10, [x27, #1408]
  4042ac:	ldurb	w9, [x9, #-1]
  4042b0:	cmp	w8, w9
  4042b4:	b.eq	404f50 <wcrtomb@plt+0x22f0>  // b.none
  4042b8:	b	405224 <wcrtomb@plt+0x25c4>
  4042bc:	cmn	w8, #0x1
  4042c0:	b.eq	404f50 <wcrtomb@plt+0x22f0>  // b.none
  4042c4:	cmp	w8, #0xa
  4042c8:	b.eq	404f50 <wcrtomb@plt+0x22f0>  // b.none
  4042cc:	b	405258 <wcrtomb@plt+0x25f8>
  4042d0:	ldr	x1, [x23, #1424]
  4042d4:	mov	w0, w8
  4042d8:	bl	402a20 <ungetc@plt>
  4042dc:	b	404f50 <wcrtomb@plt+0x22f0>
  4042e0:	cmn	w8, #0x1
  4042e4:	b.eq	404ef4 <wcrtomb@plt+0x2294>  // b.none
  4042e8:	cmp	w8, #0xa
  4042ec:	b.eq	404ef4 <wcrtomb@plt+0x2294>  // b.none
  4042f0:	b	405258 <wcrtomb@plt+0x25f8>
  4042f4:	ldr	x0, [x23, #1424]
  4042f8:	cbz	x0, 404fac <wcrtomb@plt+0x234c>
  4042fc:	ldrb	w8, [x0]
  404300:	tbnz	w8, #4, 404fb4 <wcrtomb@plt+0x2354>
  404304:	ldp	x8, x9, [x0, #8]
  404308:	cmp	x8, x9
  40430c:	b.cs	4050bc <wcrtomb@plt+0x245c>  // b.hs, b.nlast
  404310:	add	x9, x8, #0x1
  404314:	str	x9, [x0, #8]
  404318:	ldrb	w0, [x8]
  40431c:	cmp	w0, #0x6e
  404320:	b.ne	405114 <wcrtomb@plt+0x24b4>  // b.any
  404324:	ldr	x8, [x20, #136]
  404328:	cmp	x8, #0x1
  40432c:	b.hi	405128 <wcrtomb@plt+0x24c8>  // b.pmore
  404330:	ldrb	w8, [x20]
  404334:	cbnz	w8, 405128 <wcrtomb@plt+0x24c8>
  404338:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40433c:	ldr	x8, [x8, #1400]
  404340:	cbz	x8, 405078 <wcrtomb@plt+0x2418>
  404344:	ldr	x9, [x27, #1408]
  404348:	add	x8, x8, #0x2
  40434c:	cmp	x9, x8
  404350:	b.ne	40509c <wcrtomb@plt+0x243c>  // b.any
  404354:	b	405090 <wcrtomb@plt+0x2430>
  404358:	ldr	x0, [x23, #1424]
  40435c:	cbz	x0, 404398 <wcrtomb@plt+0x1738>
  404360:	ldrb	w8, [x0]
  404364:	tbnz	w8, #4, 404398 <wcrtomb@plt+0x1738>
  404368:	ldp	x8, x9, [x0, #8]
  40436c:	cmp	x8, x9
  404370:	b.cs	4050d0 <wcrtomb@plt+0x2470>  // b.hs, b.nlast
  404374:	add	x9, x8, #0x1
  404378:	str	x9, [x0, #8]
  40437c:	ldrb	w20, [x8]
  404380:	cmp	w20, #0xa
  404384:	b.ne	40439c <wcrtomb@plt+0x173c>  // b.any
  404388:	ldr	x8, [x11, #1440]
  40438c:	add	x8, x8, #0x1
  404390:	str	x8, [x11, #1440]
  404394:	b	40439c <wcrtomb@plt+0x173c>
  404398:	mov	w20, #0xffffffff            	// #-1
  40439c:	mov	w0, w20
  4043a0:	mov	w1, wzr
  4043a4:	bl	406678 <wcrtomb@plt+0x3a18>
  4043a8:	cbz	x0, 4052d0 <wcrtomb@plt+0x2670>
  4043ac:	mov	x22, x0
  4043b0:	bl	40c788 <wcrtomb@plt+0x9b28>
  4043b4:	mov	x26, x0
  4043b8:	mov	x0, x22
  4043bc:	stur	x22, [x29, #-112]
  4043c0:	bl	40c790 <wcrtomb@plt+0x9b30>
  4043c4:	mov	x1, x0
  4043c8:	mov	x0, x26
  4043cc:	mov	w2, wzr
  4043d0:	bl	402e1c <wcrtomb@plt+0x1bc>
  4043d4:	mov	x22, x0
  4043d8:	mov	w0, w20
  4043dc:	mov	w1, wzr
  4043e0:	bl	406678 <wcrtomb@plt+0x3a18>
  4043e4:	cbz	x0, 4052d0 <wcrtomb@plt+0x2670>
  4043e8:	mov	x21, x0
  4043ec:	bl	40c788 <wcrtomb@plt+0x9b28>
  4043f0:	mov	x20, x0
  4043f4:	mov	x0, x21
  4043f8:	bl	40c790 <wcrtomb@plt+0x9b30>
  4043fc:	mov	x1, x0
  404400:	mov	x0, x20
  404404:	mov	w2, wzr
  404408:	stur	x20, [x29, #-96]
  40440c:	bl	402e1c <wcrtomb@plt+0x1bc>
  404410:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404414:	ldr	w8, [x8, #2260]
  404418:	stur	x0, [x29, #-88]
  40441c:	cmp	w8, #0x2
  404420:	b.lt	4044a4 <wcrtomb@plt+0x1844>  // b.tstop
  404424:	mov	w1, #0x8                   	// #8
  404428:	mov	x0, x22
  40442c:	mov	x19, x26
  404430:	str	x21, [sp, #8]
  404434:	mov	w26, #0x28                  	// #40
  404438:	bl	417018 <wcrtomb@plt+0x143b8>
  40443c:	mov	x20, x0
  404440:	stur	xzr, [x29, #-40]
  404444:	cbz	x22, 404cc4 <wcrtomb@plt+0x2064>
  404448:	mov	x21, xzr
  40444c:	mov	x23, xzr
  404450:	b	40448c <wcrtomb@plt+0x182c>
  404454:	add	x1, x19, x21
  404458:	sub	x2, x22, x21
  40445c:	sub	x3, x29, #0x28
  404460:	mov	x0, xzr
  404464:	bl	417134 <wcrtomb@plt+0x144d4>
  404468:	sub	x8, x0, #0x1
  40446c:	cmn	x8, #0x4
  404470:	csinc	x8, x0, xzr, ls  // ls = plast
  404474:	add	x9, x23, #0x1
  404478:	add	x21, x8, x21
  40447c:	cmp	x22, x21
  404480:	str	x8, [x20, x23, lsl #3]
  404484:	mov	x23, x9
  404488:	b.ls	404cc8 <wcrtomb@plt+0x2068>  // b.plast
  40448c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404490:	ldr	w8, [x8, #2260]
  404494:	cmp	w8, #0x1
  404498:	b.ne	404454 <wcrtomb@plt+0x17f4>  // b.any
  40449c:	mov	w0, #0x1                   	// #1
  4044a0:	b	404468 <wcrtomb@plt+0x1808>
  4044a4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4044a8:	add	x9, x9, #0x5c8
  4044ac:	ldp	x9, x8, [x9]
  4044b0:	mov	x20, x21
  4044b4:	sub	x8, x8, x9
  4044b8:	cmp	x8, #0xff
  4044bc:	b.hi	4044ec <wcrtomb@plt+0x188c>  // b.pmore
  4044c0:	mov	x19, x26
  4044c4:	mov	x26, x20
  4044c8:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4044cc:	add	x20, x20, #0x5b0
  4044d0:	mov	w1, #0x100                 	// #256
  4044d4:	mov	x0, x20
  4044d8:	bl	4172f8 <_obstack_newchunk@@Base>
  4044dc:	ldr	x9, [x20, #24]
  4044e0:	mov	x20, x26
  4044e4:	mov	x26, x19
  4044e8:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4044ec:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4044f0:	add	x10, x10, #0x5c0
  4044f4:	ldr	x8, [x10]
  4044f8:	add	x9, x9, #0x100
  4044fc:	mov	w21, #0x28                  	// #40
  404500:	str	x9, [x10, #8]
  404504:	cmp	x9, x8
  404508:	b.ne	40451c <wcrtomb@plt+0x18bc>  // b.any
  40450c:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404510:	ldrb	w10, [x11, #1536]
  404514:	orr	w10, w10, #0x2
  404518:	strb	w10, [x11, #1536]
  40451c:	adrp	x14, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404520:	add	x14, x14, #0x5b8
  404524:	ldr	x10, [x14, #40]
  404528:	ldr	x11, [x14]
  40452c:	ldr	x12, [x14, #24]
  404530:	add	x9, x10, x9
  404534:	bic	x9, x9, x10
  404538:	sub	x13, x12, x11
  40453c:	sub	x10, x9, x11
  404540:	cmp	x10, x13
  404544:	ldur	x10, [x29, #-88]
  404548:	csel	x9, x12, x9, hi  // hi = pmore
  40454c:	stp	x9, x9, [x14, #8]
  404550:	cmp	x22, x10
  404554:	b.ne	405240 <wcrtomb@plt+0x25e0>  // b.any
  404558:	ldur	q0, [x29, #-144]
  40455c:	ldur	x12, [x29, #-80]
  404560:	ldur	x13, [x29, #-96]
  404564:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404568:	str	q0, [x8]
  40456c:	ldur	q0, [x29, #-160]
  404570:	str	q0, [x8, #16]
  404574:	ldur	q0, [x29, #-176]
  404578:	str	q0, [x8, #32]
  40457c:	ldur	q0, [x29, #-192]
  404580:	str	q0, [x8, #48]
  404584:	ldr	q0, [sp, #192]
  404588:	str	q0, [x8, #64]
  40458c:	ldr	q0, [sp, #176]
  404590:	str	q0, [x8, #80]
  404594:	ldr	q0, [sp, #160]
  404598:	str	q0, [x8, #96]
  40459c:	ldr	q0, [sp, #144]
  4045a0:	str	q0, [x8, #112]
  4045a4:	ldr	q0, [sp, #128]
  4045a8:	str	q0, [x8, #128]
  4045ac:	ldr	q0, [sp, #112]
  4045b0:	str	q0, [x8, #144]
  4045b4:	ldr	q0, [sp, #96]
  4045b8:	str	q0, [x8, #160]
  4045bc:	ldr	q0, [sp, #80]
  4045c0:	str	q0, [x8, #176]
  4045c4:	ldr	q0, [sp, #64]
  4045c8:	str	q0, [x8, #192]
  4045cc:	ldr	q0, [sp, #48]
  4045d0:	str	q0, [x8, #208]
  4045d4:	ldr	q0, [sp, #32]
  4045d8:	str	q0, [x8, #224]
  4045dc:	ldr	q0, [sp, #16]
  4045e0:	str	q0, [x8, #240]
  4045e4:	cbz	x22, 4045fc <wcrtomb@plt+0x199c>
  4045e8:	ldrb	w9, [x13], #1
  4045ec:	ldrb	w10, [x26], #1
  4045f0:	subs	x22, x22, #0x1
  4045f4:	strb	w9, [x8, x10]
  4045f8:	b.ne	4045e8 <wcrtomb@plt+0x1988>  // b.any
  4045fc:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  404600:	movk	x22, #0x3334
  404604:	madd	x9, x25, x21, x12
  404608:	movk	x22, #0x333, lsl #48
  40460c:	str	x8, [x9, #24]
  404610:	b	404dfc <wcrtomb@plt+0x219c>
  404614:	ldr	x0, [x23, #1424]
  404618:	cbz	x0, 404654 <wcrtomb@plt+0x19f4>
  40461c:	ldrb	w8, [x0]
  404620:	tbnz	w8, #4, 404654 <wcrtomb@plt+0x19f4>
  404624:	ldp	x8, x9, [x0, #8]
  404628:	cmp	x8, x9
  40462c:	b.cs	4050e8 <wcrtomb@plt+0x2488>  // b.hs, b.nlast
  404630:	add	x9, x8, #0x1
  404634:	str	x9, [x0, #8]
  404638:	ldrb	w20, [x8]
  40463c:	cmp	w20, #0xa
  404640:	b.ne	404658 <wcrtomb@plt+0x19f8>  // b.any
  404644:	ldr	x8, [x11, #1440]
  404648:	add	x8, x8, #0x1
  40464c:	str	x8, [x11, #1440]
  404650:	b	404658 <wcrtomb@plt+0x19f8>
  404654:	mov	w20, #0xffffffff            	// #-1
  404658:	mov	w1, #0x1                   	// #1
  40465c:	mov	w0, w20
  404660:	bl	406678 <wcrtomb@plt+0x3a18>
  404664:	cbz	x0, 4052dc <wcrtomb@plt+0x267c>
  404668:	mov	x22, x0
  40466c:	mov	w0, w20
  404670:	mov	w1, wzr
  404674:	bl	406678 <wcrtomb@plt+0x3a18>
  404678:	cbz	x0, 4052dc <wcrtomb@plt+0x267c>
  40467c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404680:	add	x8, x8, #0x5c8
  404684:	ldp	x8, x9, [x8]
  404688:	mov	x26, x0
  40468c:	sub	x9, x9, x8
  404690:	cmp	x9, #0x27
  404694:	b.hi	4046b0 <wcrtomb@plt+0x1a50>  // b.pmore
  404698:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40469c:	add	x20, x20, #0x5b0
  4046a0:	mov	w1, #0x28                  	// #40
  4046a4:	mov	x0, x20
  4046a8:	bl	4172f8 <_obstack_newchunk@@Base>
  4046ac:	ldr	x8, [x20, #24]
  4046b0:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4046b4:	add	x9, x9, #0x5c0
  4046b8:	stur	x22, [x29, #-96]
  4046bc:	ldr	x22, [x9]
  4046c0:	ldur	x12, [x29, #-80]
  4046c4:	add	x8, x8, #0x28
  4046c8:	str	x8, [x9, #8]
  4046cc:	cmp	x8, x22
  4046d0:	b.ne	4046e4 <wcrtomb@plt+0x1a84>  // b.any
  4046d4:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4046d8:	ldrb	w9, [x10, #1536]
  4046dc:	orr	w9, w9, #0x2
  4046e0:	strb	w9, [x10, #1536]
  4046e4:	adrp	x13, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4046e8:	add	x13, x13, #0x5b8
  4046ec:	ldr	x9, [x13, #40]
  4046f0:	ldr	x10, [x13]
  4046f4:	ldr	x11, [x13, #24]
  4046f8:	madd	x14, x25, x21, x12
  4046fc:	add	x8, x9, x8
  404700:	bic	x8, x8, x9
  404704:	sub	x12, x11, x10
  404708:	sub	x9, x8, x10
  40470c:	cmp	x9, x12
  404710:	csel	x8, x11, x8, hi  // hi = pmore
  404714:	stp	x8, x8, [x13, #8]
  404718:	str	x22, [x14, #24]!
  40471c:	mov	x0, x26
  404720:	stur	x14, [x29, #-112]
  404724:	bl	40c788 <wcrtomb@plt+0x9b28>
  404728:	mov	x20, x0
  40472c:	mov	x0, x26
  404730:	stur	x26, [x29, #-120]
  404734:	bl	40c790 <wcrtomb@plt+0x9b30>
  404738:	mov	x9, x22
  40473c:	ldrb	w8, [x9, #32]
  404740:	mov	x22, x0
  404744:	mov	x0, x20
  404748:	mov	x1, x22
  40474c:	and	w8, w8, #0xf
  404750:	stur	x9, [x29, #-88]
  404754:	strb	w8, [x9, #32]
  404758:	bl	417044 <wcrtomb@plt+0x143e4>
  40475c:	mov	w2, #0x1                   	// #1
  404760:	mov	x1, x22
  404764:	mov	x28, x0
  404768:	bl	402e1c <wcrtomb@plt+0x1bc>
  40476c:	cmp	x0, #0x1
  404770:	add	x15, x28, x0
  404774:	stur	x15, [x29, #-80]
  404778:	b.lt	404a14 <wcrtomb@plt+0x1db4>  // b.tstop
  40477c:	mov	w25, wzr
  404780:	mov	w22, wzr
  404784:	sub	x26, x29, #0x28
  404788:	mov	x21, x28
  40478c:	b	4047a0 <wcrtomb@plt+0x1b40>
  404790:	mov	x9, x21
  404794:	add	x21, x9, #0x1
  404798:	cmp	x21, x15
  40479c:	b.cs	404a1c <wcrtomb@plt+0x1dbc>  // b.hs, b.nlast
  4047a0:	ldrb	w8, [x21]
  4047a4:	cmp	w8, #0x26
  4047a8:	b.eq	40489c <wcrtomb@plt+0x1c3c>  // b.none
  4047ac:	cmp	w8, #0x5c
  4047b0:	b.ne	404790 <wcrtomb@plt+0x1b30>  // b.any
  4047b4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4047b8:	add	x9, x9, #0x5c8
  4047bc:	ldp	x9, x8, [x9]
  4047c0:	sub	x23, x21, x28
  4047c4:	sub	x8, x8, x9
  4047c8:	cmp	x8, #0x1f
  4047cc:	b.hi	4047ec <wcrtomb@plt+0x1b8c>  // b.pmore
  4047d0:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4047d4:	add	x20, x20, #0x5b0
  4047d8:	mov	w1, #0x20                  	// #32
  4047dc:	mov	x0, x20
  4047e0:	bl	4172f8 <_obstack_newchunk@@Base>
  4047e4:	ldur	x15, [x29, #-80]
  4047e8:	ldr	x9, [x20, #24]
  4047ec:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4047f0:	add	x10, x10, #0x5c0
  4047f4:	ldr	x8, [x10]
  4047f8:	add	x9, x9, #0x20
  4047fc:	str	x9, [x10, #8]
  404800:	cmp	x9, x8
  404804:	b.ne	404818 <wcrtomb@plt+0x1bb8>  // b.any
  404808:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40480c:	ldrb	w10, [x11, #1536]
  404810:	orr	w10, w10, #0x2
  404814:	strb	w10, [x11, #1536]
  404818:	adrp	x13, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40481c:	add	x13, x13, #0x5b8
  404820:	ldr	x10, [x13, #40]
  404824:	ldr	x11, [x13]
  404828:	ldr	x12, [x13, #24]
  40482c:	add	x9, x10, x9
  404830:	bic	x10, x9, x10
  404834:	sub	x9, x12, x11
  404838:	sub	x11, x10, x11
  40483c:	cmp	x11, x9
  404840:	add	x9, x21, #0x1
  404844:	csel	x10, x12, x10, hi  // hi = pmore
  404848:	cmp	x9, x15
  40484c:	stp	x10, x10, [x13, #8]
  404850:	mov	w10, #0xffffffff            	// #-1
  404854:	stp	x28, x23, [x8]
  404858:	stp	w10, w22, [x8, #16]
  40485c:	str	x8, [x26, #24]
  404860:	b.eq	404960 <wcrtomb@plt+0x1d00>  // b.none
  404864:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404868:	ldr	w10, [x10, #2264]
  40486c:	cmp	w10, #0x2
  404870:	b.ne	404978 <wcrtomb@plt+0x1d18>  // b.any
  404874:	ldr	x11, [x24]
  404878:	ldrb	w10, [x9]
  40487c:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404880:	ldrh	w11, [x11, x10, lsl #1]
  404884:	tbnz	w11, #11, 404980 <wcrtomb@plt+0x1d20>
  404888:	strb	w10, [x21]
  40488c:	ldr	x10, [x8, #8]
  404890:	add	x10, x10, #0x1
  404894:	str	x10, [x8, #8]
  404898:	b	4049c8 <wcrtomb@plt+0x1d68>
  40489c:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4048a0:	add	x9, x9, #0x5c8
  4048a4:	ldp	x10, x8, [x9]
  4048a8:	sub	x8, x8, x10
  4048ac:	cmp	x8, #0x1f
  4048b0:	b.hi	4048d0 <wcrtomb@plt+0x1c70>  // b.pmore
  4048b4:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4048b8:	add	x20, x20, #0x5b0
  4048bc:	mov	w1, #0x20                  	// #32
  4048c0:	mov	x0, x20
  4048c4:	bl	4172f8 <_obstack_newchunk@@Base>
  4048c8:	ldur	x15, [x29, #-80]
  4048cc:	ldr	x10, [x20, #24]
  4048d0:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4048d4:	add	x11, x11, #0x5c0
  4048d8:	ldr	x8, [x11]
  4048dc:	add	x10, x10, #0x20
  4048e0:	sub	x9, x21, x28
  4048e4:	str	x10, [x11, #8]
  4048e8:	cmp	x10, x8
  4048ec:	b.ne	404900 <wcrtomb@plt+0x1ca0>  // b.any
  4048f0:	adrp	x12, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4048f4:	ldrb	w11, [x12, #1536]
  4048f8:	orr	w11, w11, #0x2
  4048fc:	strb	w11, [x12, #1536]
  404900:	adrp	x14, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404904:	add	x14, x14, #0x5b8
  404908:	ldr	x11, [x14, #40]
  40490c:	ldr	x12, [x14]
  404910:	ldr	x13, [x14, #24]
  404914:	add	x10, x11, x10
  404918:	bic	x10, x10, x11
  40491c:	sub	x11, x13, x12
  404920:	sub	x12, x10, x12
  404924:	cmp	x12, x11
  404928:	csel	x10, x13, x10, hi  // hi = pmore
  40492c:	stp	x10, x10, [x14, #8]
  404930:	stp	x28, x9, [x8]
  404934:	str	w22, [x8, #20]
  404938:	add	x28, x21, #0x1
  40493c:	mov	x9, x21
  404940:	mov	w22, w25
  404944:	str	x8, [x26, #24]
  404948:	str	wzr, [x8, #16]
  40494c:	mov	x26, x8
  404950:	add	x21, x9, #0x1
  404954:	cmp	x21, x15
  404958:	b.cc	4047a0 <wcrtomb@plt+0x1b40>  // b.lo, b.ul, b.last
  40495c:	b	404a1c <wcrtomb@plt+0x1dbc>
  404960:	add	x10, x23, #0x1
  404964:	str	x10, [x8, #8]
  404968:	mov	w22, w25
  40496c:	mov	w11, w25
  404970:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404974:	b	4049d0 <wcrtomb@plt+0x1d70>
  404978:	ldrb	w10, [x9]
  40497c:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404980:	sub	w12, w10, #0x30
  404984:	cmp	w12, #0x45
  404988:	b.hi	404888 <wcrtomb@plt+0x1c28>  // b.pmore
  40498c:	adrp	x14, 428000 <_obstack_memory_used@@Base+0x10ae4>
  404990:	add	x14, x14, #0x316
  404994:	adr	x13, 404888 <wcrtomb@plt+0x1c28>
  404998:	ldrb	w11, [x14, x12]
  40499c:	add	x13, x13, x11, lsl #2
  4049a0:	mov	w22, #0x2                   	// #2
  4049a4:	mov	w11, #0x2                   	// #2
  4049a8:	br	x13
  4049ac:	ldur	x11, [x29, #-88]
  4049b0:	str	w12, [x8, #16]
  4049b4:	ldrb	w10, [x11, #32]
  4049b8:	cmp	w12, w10, lsr #4
  4049bc:	b.le	4049c8 <wcrtomb@plt+0x1d68>
  4049c0:	bfi	w10, w12, #4, #28
  4049c4:	strb	w10, [x11, #32]
  4049c8:	mov	w22, w25
  4049cc:	mov	w11, w25
  4049d0:	add	x28, x21, #0x2
  4049d4:	mov	w25, w11
  4049d8:	mov	x26, x8
  4049dc:	add	x21, x9, #0x1
  4049e0:	cmp	x21, x15
  4049e4:	b.cc	4047a0 <wcrtomb@plt+0x1b40>  // b.lo, b.ul, b.last
  4049e8:	b	404a1c <wcrtomb@plt+0x1dbc>
  4049ec:	mov	w22, #0x1                   	// #1
  4049f0:	mov	w11, #0x1                   	// #1
  4049f4:	b	4049d0 <wcrtomb@plt+0x1d70>
  4049f8:	mov	w22, wzr
  4049fc:	mov	w11, wzr
  404a00:	b	4049d0 <wcrtomb@plt+0x1d70>
  404a04:	orr	w22, w25, #0x4
  404a08:	b	4049cc <wcrtomb@plt+0x1d6c>
  404a0c:	orr	w22, w25, #0x8
  404a10:	b	4049cc <wcrtomb@plt+0x1d6c>
  404a14:	mov	w22, wzr
  404a18:	sub	x26, x29, #0x28
  404a1c:	cmp	x28, x15
  404a20:	b.cs	404ad4 <wcrtomb@plt+0x1e74>  // b.hs, b.nlast
  404a24:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404a28:	add	x9, x9, #0x5c8
  404a2c:	ldp	x10, x8, [x9]
  404a30:	ldur	x25, [x29, #-112]
  404a34:	sub	x8, x8, x10
  404a38:	cmp	x8, #0x1f
  404a3c:	b.hi	404a5c <wcrtomb@plt+0x1dfc>  // b.pmore
  404a40:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404a44:	add	x20, x20, #0x5b0
  404a48:	mov	w1, #0x20                  	// #32
  404a4c:	mov	x0, x20
  404a50:	bl	4172f8 <_obstack_newchunk@@Base>
  404a54:	ldur	x15, [x29, #-80]
  404a58:	ldr	x10, [x20, #24]
  404a5c:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404a60:	add	x11, x11, #0x5c0
  404a64:	ldr	x8, [x11]
  404a68:	add	x10, x10, #0x20
  404a6c:	sub	x9, x15, x28
  404a70:	str	x10, [x11, #8]
  404a74:	cmp	x10, x8
  404a78:	b.ne	404a8c <wcrtomb@plt+0x1e2c>  // b.any
  404a7c:	adrp	x12, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404a80:	ldrb	w11, [x12, #1536]
  404a84:	orr	w11, w11, #0x2
  404a88:	strb	w11, [x12, #1536]
  404a8c:	adrp	x14, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404a90:	add	x14, x14, #0x5b8
  404a94:	ldr	x11, [x14, #40]
  404a98:	ldr	x12, [x14]
  404a9c:	ldr	x13, [x14, #24]
  404aa0:	add	x10, x11, x10
  404aa4:	bic	x10, x10, x11
  404aa8:	sub	x11, x13, x12
  404aac:	sub	x12, x10, x12
  404ab0:	cmp	x12, x11
  404ab4:	csel	x10, x13, x10, hi  // hi = pmore
  404ab8:	stp	x10, x10, [x14, #8]
  404abc:	stp	x28, x9, [x8]
  404ac0:	mov	w9, #0xffffffff            	// #-1
  404ac4:	stp	w9, w22, [x8, #16]
  404ac8:	str	x8, [x26, #24]
  404acc:	mov	x26, x8
  404ad0:	b	404ad8 <wcrtomb@plt+0x1e78>
  404ad4:	ldur	x25, [x29, #-112]
  404ad8:	str	xzr, [x26, #24]
  404adc:	ldur	x8, [x29, #-16]
  404ae0:	ldur	x9, [x29, #-88]
  404ae4:	ldur	x0, [x29, #-120]
  404ae8:	str	x8, [x9, #8]
  404aec:	bl	40c904 <wcrtomb@plt+0x9ca4>
  404af0:	ldr	x20, [x25]
  404af4:	ldur	x28, [x29, #-104]
  404af8:	mov	w21, wzr
  404afc:	adrp	x12, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404b00:	ldrb	w8, [x20, #32]
  404b04:	mov	x22, x20
  404b08:	str	xzr, [x20, #24]
  404b0c:	and	w8, w8, #0xf0
  404b10:	strb	w8, [x20, #32]
  404b14:	str	xzr, [x22, #16]!
  404b18:	ldr	x8, [x27, #1408]
  404b1c:	cbz	x8, 404b44 <wcrtomb@plt+0x1ee4>
  404b20:	ldr	x9, [x19, #1416]
  404b24:	cmp	x8, x9
  404b28:	b.cs	404b88 <wcrtomb@plt+0x1f28>  // b.hs, b.nlast
  404b2c:	add	x9, x8, #0x1
  404b30:	str	x9, [x27, #1408]
  404b34:	ldrb	w8, [x8]
  404b38:	cmp	w8, #0xa
  404b3c:	b.eq	404b74 <wcrtomb@plt+0x1f14>  // b.none
  404b40:	b	404b8c <wcrtomb@plt+0x1f2c>
  404b44:	ldr	x0, [x23, #1424]
  404b48:	cbz	x0, 404b88 <wcrtomb@plt+0x1f28>
  404b4c:	ldrb	w8, [x0]
  404b50:	tbnz	w8, #4, 404b88 <wcrtomb@plt+0x1f28>
  404b54:	ldp	x8, x9, [x0, #8]
  404b58:	cmp	x8, x9
  404b5c:	b.cs	404c74 <wcrtomb@plt+0x2014>  // b.hs, b.nlast
  404b60:	add	x9, x8, #0x1
  404b64:	str	x9, [x0, #8]
  404b68:	ldrb	w8, [x8]
  404b6c:	cmp	w8, #0xa
  404b70:	b.ne	404b8c <wcrtomb@plt+0x1f2c>  // b.any
  404b74:	ldr	x8, [x12, #1440]
  404b78:	add	x8, x8, #0x1
  404b7c:	str	x8, [x12, #1440]
  404b80:	mov	w8, #0xa                   	// #10
  404b84:	b	404b8c <wcrtomb@plt+0x1f2c>
  404b88:	mov	w8, #0xffffffff            	// #-1
  404b8c:	ldr	x9, [x24]
  404b90:	ldrh	w9, [x9, w8, sxtw #1]
  404b94:	tbnz	w9, #0, 404b18 <wcrtomb@plt+0x1eb8>
  404b98:	add	w9, w8, #0x1
  404b9c:	cmp	w9, #0x7e
  404ba0:	b.hi	405264 <wcrtomb@plt+0x2604>  // b.pmore
  404ba4:	adrp	x13, 428000 <_obstack_memory_used@@Base+0x10ae4>
  404ba8:	add	x13, x13, #0x35c
  404bac:	adr	x10, 404bbc <wcrtomb@plt+0x1f5c>
  404bb0:	ldrh	w11, [x13, x9, lsl #1]
  404bb4:	add	x10, x10, x11, lsl #2
  404bb8:	br	x10
  404bbc:	ldr	x9, [x22]
  404bc0:	cbnz	x9, 4052e8 <wcrtomb@plt+0x2688>
  404bc4:	mov	w0, w8
  404bc8:	bl	4061d0 <wcrtomb@plt+0x3570>
  404bcc:	adrp	x12, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404bd0:	str	x0, [x22]
  404bd4:	cbnz	x0, 404b18 <wcrtomb@plt+0x1eb8>
  404bd8:	b	4052f4 <wcrtomb@plt+0x2694>
  404bdc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404be0:	ldr	w8, [x8, #2264]
  404be4:	cmp	w8, #0x2
  404be8:	b.eq	405264 <wcrtomb@plt+0x2604>  // b.none
  404bec:	mov	w8, #0x2                   	// #2
  404bf0:	orr	w21, w21, w8
  404bf4:	b	404b18 <wcrtomb@plt+0x1eb8>
  404bf8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404bfc:	ldr	w8, [x8, #2264]
  404c00:	cmp	w8, #0x2
  404c04:	b.eq	405264 <wcrtomb@plt+0x2604>  // b.none
  404c08:	mov	w8, #0x4                   	// #4
  404c0c:	orr	w21, w21, w8
  404c10:	b	404b18 <wcrtomb@plt+0x1eb8>
  404c14:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404c18:	ldr	w8, [x8, #2264]
  404c1c:	cmp	w8, #0x2
  404c20:	b.eq	405264 <wcrtomb@plt+0x2604>  // b.none
  404c24:	ldrb	w8, [x20, #32]
  404c28:	orr	w8, w8, #0x8
  404c2c:	strb	w8, [x20, #32]
  404c30:	b	404b18 <wcrtomb@plt+0x1eb8>
  404c34:	ldrb	w8, [x20, #32]
  404c38:	tbnz	w8, #0, 405308 <wcrtomb@plt+0x26a8>
  404c3c:	orr	w8, w8, #0x1
  404c40:	strb	w8, [x20, #32]
  404c44:	b	404b18 <wcrtomb@plt+0x1eb8>
  404c48:	ldrb	w8, [x20, #32]
  404c4c:	tst	w8, #0x6
  404c50:	b.ne	405314 <wcrtomb@plt+0x26b4>  // b.any
  404c54:	ubfx	w9, w8, #3, #1
  404c58:	mov	w10, #0x1                   	// #1
  404c5c:	lsl	w9, w10, w9
  404c60:	ubfiz	w9, w9, #1, #2
  404c64:	and	w8, w8, #0xfffffff9
  404c68:	orr	w8, w9, w8
  404c6c:	strb	w8, [x20, #32]
  404c70:	b	404b18 <wcrtomb@plt+0x1eb8>
  404c74:	bl	402c20 <__uflow@plt>
  404c78:	adrp	x12, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404c7c:	mov	w8, w0
  404c80:	cmp	w8, #0xa
  404c84:	b.eq	404b74 <wcrtomb@plt+0x1f14>  // b.none
  404c88:	b	404b8c <wcrtomb@plt+0x1f2c>
  404c8c:	mov	w0, #0xffffffff            	// #-1
  404c90:	b	405128 <wcrtomb@plt+0x24c8>
  404c94:	ldr	x9, [x27, #1408]
  404c98:	cbz	x9, 404fbc <wcrtomb@plt+0x235c>
  404c9c:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404ca0:	ldr	x10, [x10, #1400]
  404ca4:	cmp	x9, x10
  404ca8:	b.ls	405224 <wcrtomb@plt+0x25c4>  // b.plast
  404cac:	sub	x10, x9, #0x1
  404cb0:	str	x10, [x27, #1408]
  404cb4:	ldurb	w9, [x9, #-1]
  404cb8:	cmp	w8, w9
  404cbc:	b.eq	40501c <wcrtomb@plt+0x23bc>  // b.none
  404cc0:	b	405224 <wcrtomb@plt+0x25c4>
  404cc4:	mov	x9, xzr
  404cc8:	mov	w0, #0x1                   	// #1
  404ccc:	bfi	x0, x9, #1, #63
  404cd0:	mov	w1, #0x8                   	// #8
  404cd4:	stur	x9, [x29, #-120]
  404cd8:	stur	xzr, [x29, #-40]
  404cdc:	bl	417018 <wcrtomb@plt+0x143b8>
  404ce0:	ldur	x8, [x29, #-80]
  404ce4:	ldur	x28, [x29, #-120]
  404ce8:	mov	x21, xzr
  404cec:	str	x0, [sp]
  404cf0:	madd	x8, x25, x26, x8
  404cf4:	str	x0, [x8, #24]
  404cf8:	cbz	x28, 404da8 <wcrtomb@plt+0x2148>
  404cfc:	add	x23, x0, #0x8
  404d00:	b	404d58 <wcrtomb@plt+0x20f8>
  404d04:	ldur	x26, [x29, #-96]
  404d08:	sub	x3, x29, #0x28
  404d0c:	mov	x0, xzr
  404d10:	mov	x2, x25
  404d14:	add	x1, x26, x21
  404d18:	bl	417134 <wcrtomb@plt+0x144d4>
  404d1c:	sub	x8, x0, #0x1
  404d20:	cmn	x8, #0x4
  404d24:	csinc	x22, x0, xzr, ls  // ls = plast
  404d28:	add	x0, x22, #0x1
  404d2c:	bl	416ff4 <wcrtomb@plt+0x14394>
  404d30:	add	x1, x26, x21
  404d34:	mov	x2, x22
  404d38:	mov	x25, x0
  404d3c:	str	x0, [x23], #16
  404d40:	bl	402580 <memcpy@plt>
  404d44:	add	x21, x22, x21
  404d48:	subs	x28, x28, #0x1
  404d4c:	add	x20, x20, #0x8
  404d50:	strb	wzr, [x25, x22]
  404d54:	b.eq	404da8 <wcrtomb@plt+0x2148>  // b.none
  404d58:	ldur	x8, [x29, #-88]
  404d5c:	subs	x25, x8, x21
  404d60:	b.ls	405240 <wcrtomb@plt+0x25e0>  // b.plast
  404d64:	ldr	x22, [x20]
  404d68:	add	x0, x22, #0x1
  404d6c:	bl	416ff4 <wcrtomb@plt+0x14394>
  404d70:	mov	x1, x19
  404d74:	mov	x2, x22
  404d78:	mov	x26, x0
  404d7c:	stur	x0, [x23, #-8]
  404d80:	bl	402580 <memcpy@plt>
  404d84:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404d88:	ldr	w8, [x8, #2260]
  404d8c:	add	x19, x19, x22
  404d90:	strb	wzr, [x26, x22]
  404d94:	cmp	w8, #0x1
  404d98:	b.ne	404d04 <wcrtomb@plt+0x20a4>  // b.any
  404d9c:	ldur	x26, [x29, #-96]
  404da0:	mov	w0, #0x1                   	// #1
  404da4:	b	404d1c <wcrtomb@plt+0x20bc>
  404da8:	ldur	x9, [x29, #-88]
  404dac:	ldur	x8, [x29, #-120]
  404db0:	cmp	x9, x21
  404db4:	ldr	x9, [sp]
  404db8:	lsl	x8, x8, #4
  404dbc:	str	xzr, [x9, x8]
  404dc0:	b.ne	405240 <wcrtomb@plt+0x25e0>  // b.any
  404dc4:	ldur	x28, [x29, #-104]
  404dc8:	ldr	x20, [sp, #8]
  404dcc:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  404dd0:	movk	x22, #0x3334
  404dd4:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404dd8:	movk	x22, #0x333, lsl #48
  404ddc:	mov	w21, #0x28                  	// #40
  404de0:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404de4:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404de8:	b	404dfc <wcrtomb@plt+0x219c>
  404dec:	mov	w8, #0xffffffff            	// #-1
  404df0:	ldr	x9, [x24]
  404df4:	ldrh	w9, [x9, w8, sxtw #1]
  404df8:	tbz	w9, #0, 404e84 <wcrtomb@plt+0x2224>
  404dfc:	ldr	x8, [x27, #1408]
  404e00:	cbz	x8, 404e28 <wcrtomb@plt+0x21c8>
  404e04:	ldr	x9, [x19, #1416]
  404e08:	cmp	x8, x9
  404e0c:	b.cs	404dec <wcrtomb@plt+0x218c>  // b.hs, b.nlast
  404e10:	add	x9, x8, #0x1
  404e14:	str	x9, [x27, #1408]
  404e18:	ldrb	w8, [x8]
  404e1c:	cmp	w8, #0xa
  404e20:	b.ne	404df0 <wcrtomb@plt+0x2190>  // b.any
  404e24:	b	404e58 <wcrtomb@plt+0x21f8>
  404e28:	ldr	x0, [x23, #1424]
  404e2c:	cbz	x0, 404dec <wcrtomb@plt+0x218c>
  404e30:	ldrb	w8, [x0]
  404e34:	tbnz	w8, #4, 404dec <wcrtomb@plt+0x218c>
  404e38:	ldp	x8, x9, [x0, #8]
  404e3c:	cmp	x8, x9
  404e40:	b.cs	404e6c <wcrtomb@plt+0x220c>  // b.hs, b.nlast
  404e44:	add	x9, x8, #0x1
  404e48:	str	x9, [x0, #8]
  404e4c:	ldrb	w8, [x8]
  404e50:	cmp	w8, #0xa
  404e54:	b.ne	404df0 <wcrtomb@plt+0x2190>  // b.any
  404e58:	ldr	x8, [x11, #1440]
  404e5c:	add	x8, x8, #0x1
  404e60:	str	x8, [x11, #1440]
  404e64:	mov	w8, #0xa                   	// #10
  404e68:	b	404df0 <wcrtomb@plt+0x2190>
  404e6c:	bl	402c20 <__uflow@plt>
  404e70:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404e74:	mov	w8, w0
  404e78:	cmp	w8, #0xa
  404e7c:	b.ne	404df0 <wcrtomb@plt+0x2190>  // b.any
  404e80:	b	404e58 <wcrtomb@plt+0x21f8>
  404e84:	cmp	w8, #0x22
  404e88:	b.le	404ed4 <wcrtomb@plt+0x2274>
  404e8c:	cmp	w8, #0x7d
  404e90:	b.eq	404ea4 <wcrtomb@plt+0x2244>  // b.none
  404e94:	cmp	w8, #0x3b
  404e98:	b.eq	404f40 <wcrtomb@plt+0x22e0>  // b.none
  404e9c:	cmp	w8, #0x23
  404ea0:	b.ne	405258 <wcrtomb@plt+0x25f8>  // b.any
  404ea4:	ldr	x9, [x27, #1408]
  404ea8:	cbz	x9, 404f34 <wcrtomb@plt+0x22d4>
  404eac:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404eb0:	ldr	x10, [x10, #1400]
  404eb4:	cmp	x9, x10
  404eb8:	b.ls	405224 <wcrtomb@plt+0x25c4>  // b.plast
  404ebc:	sub	x10, x9, #0x1
  404ec0:	str	x10, [x27, #1408]
  404ec4:	ldurb	w9, [x9, #-1]
  404ec8:	cmp	w8, w9
  404ecc:	b.eq	404f40 <wcrtomb@plt+0x22e0>  // b.none
  404ed0:	b	405224 <wcrtomb@plt+0x25c4>
  404ed4:	cmn	w8, #0x1
  404ed8:	b.eq	404f40 <wcrtomb@plt+0x22e0>  // b.none
  404edc:	cmp	w8, #0xa
  404ee0:	b.eq	404f40 <wcrtomb@plt+0x22e0>  // b.none
  404ee4:	b	405258 <wcrtomb@plt+0x25f8>
  404ee8:	ldr	x1, [x23, #1424]
  404eec:	mov	w0, w8
  404ef0:	bl	402a20 <ungetc@plt>
  404ef4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404ef8:	ldr	x8, [x8, #1320]
  404efc:	ldr	x9, [x28]
  404f00:	ldr	x11, [x28, #16]
  404f04:	ldr	x10, [x8]
  404f08:	madd	x9, x10, x21, x9
  404f0c:	str	x11, [x9, #24]
  404f10:	cbz	x8, 404f24 <wcrtomb@plt+0x22c4>
  404f14:	ldr	x0, [x8, #8]
  404f18:	ldr	x20, [x8, #40]
  404f1c:	bl	402a10 <free@plt>
  404f20:	b	404f28 <wcrtomb@plt+0x22c8>
  404f24:	mov	x20, xzr
  404f28:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404f2c:	str	x20, [x8, #1320]
  404f30:	b	404f50 <wcrtomb@plt+0x22f0>
  404f34:	ldr	x1, [x23, #1424]
  404f38:	mov	w0, w8
  404f3c:	bl	402a20 <ungetc@plt>
  404f40:	ldur	x0, [x29, #-112]
  404f44:	bl	40c904 <wcrtomb@plt+0x9ca4>
  404f48:	mov	x0, x20
  404f4c:	bl	40c904 <wcrtomb@plt+0x9ca4>
  404f50:	ldr	x8, [x28, #16]
  404f54:	add	x8, x8, #0x1
  404f58:	str	x8, [x28, #16]
  404f5c:	b	403434 <wcrtomb@plt+0x7d4>
  404f60:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404f64:	ldr	x1, [x8, #1112]
  404f68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  404f6c:	mov	w2, #0x1                   	// #1
  404f70:	add	x0, x0, #0x558
  404f74:	bl	40649c <wcrtomb@plt+0x383c>
  404f78:	str	x0, [x20, #24]
  404f7c:	b	40501c <wcrtomb@plt+0x23bc>
  404f80:	ldr	x8, [x27, #1408]
  404f84:	cbz	x8, 404fe0 <wcrtomb@plt+0x2380>
  404f88:	ldr	x9, [x19, #1416]
  404f8c:	cmp	x8, x9
  404f90:	b.cs	405264 <wcrtomb@plt+0x2604>  // b.hs, b.nlast
  404f94:	add	x9, x8, #0x1
  404f98:	str	x9, [x27, #1408]
  404f9c:	ldrb	w0, [x8]
  404fa0:	cmp	w0, #0xa
  404fa4:	b.eq	405010 <wcrtomb@plt+0x23b0>  // b.none
  404fa8:	b	405264 <wcrtomb@plt+0x2604>
  404fac:	mov	w0, #0xffffffff            	// #-1
  404fb0:	b	405128 <wcrtomb@plt+0x24c8>
  404fb4:	mov	w0, #0xffffffff            	// #-1
  404fb8:	b	405128 <wcrtomb@plt+0x24c8>
  404fbc:	ldr	x1, [x23, #1424]
  404fc0:	mov	w0, w8
  404fc4:	bl	402a20 <ungetc@plt>
  404fc8:	b	40501c <wcrtomb@plt+0x23bc>
  404fcc:	bl	402c20 <__uflow@plt>
  404fd0:	mov	w26, w0
  404fd4:	cmp	w26, #0x3b
  404fd8:	b.eq	403434 <wcrtomb@plt+0x7d4>  // b.none
  404fdc:	b	403490 <wcrtomb@plt+0x830>
  404fe0:	ldr	x0, [x23, #1424]
  404fe4:	cbz	x0, 405264 <wcrtomb@plt+0x2604>
  404fe8:	ldrb	w8, [x0]
  404fec:	tbnz	w8, #4, 405264 <wcrtomb@plt+0x2604>
  404ff0:	ldp	x8, x9, [x0, #8]
  404ff4:	cmp	x8, x9
  404ff8:	b.cs	405100 <wcrtomb@plt+0x24a0>  // b.hs, b.nlast
  404ffc:	add	x9, x8, #0x1
  405000:	str	x9, [x0, #8]
  405004:	ldrb	w0, [x8]
  405008:	cmp	w0, #0xa
  40500c:	b.ne	405264 <wcrtomb@plt+0x2604>  // b.any
  405010:	ldr	x8, [x12, #1440]
  405014:	add	x8, x8, #0x1
  405018:	str	x8, [x12, #1440]
  40501c:	ldr	x8, [x25]
  405020:	ldur	x20, [x29, #-96]
  405024:	mov	w1, w21
  405028:	ldrb	w8, [x8, #32]
  40502c:	mov	x0, x20
  405030:	lsr	w8, w8, #4
  405034:	add	w2, w8, #0x1
  405038:	bl	40ac90 <wcrtomb@plt+0x8030>
  40503c:	ldr	x8, [x25]
  405040:	str	x0, [x8]
  405044:	mov	x0, x20
  405048:	bl	40c904 <wcrtomb@plt+0x9ca4>
  40504c:	ldr	x8, [x25]
  405050:	mov	x22, #0x3333333333333333    	// #3689348814741910323
  405054:	movk	x22, #0x3334
  405058:	movk	x22, #0x333, lsl #48
  40505c:	ldrb	w8, [x8, #32]
  405060:	mov	w21, #0x28                  	// #40
  405064:	tbz	w8, #3, 404f50 <wcrtomb@plt+0x22f0>
  405068:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40506c:	ldrb	w8, [x8, #1868]
  405070:	cbz	w8, 404f50 <wcrtomb@plt+0x22f0>
  405074:	b	405320 <wcrtomb@plt+0x26c0>
  405078:	ldr	x0, [x23, #1424]
  40507c:	cbz	x0, 40509c <wcrtomb@plt+0x243c>
  405080:	bl	402640 <ftell@plt>
  405084:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405088:	cmp	x0, #0x2
  40508c:	b.ne	40509c <wcrtomb@plt+0x243c>  // b.any
  405090:	mov	w8, #0x1                   	// #1
  405094:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405098:	strb	w8, [x9, #1856]
  40509c:	mov	w0, #0x6e                  	// #110
  4050a0:	b	405128 <wcrtomb@plt+0x24c8>
  4050a4:	bl	402c20 <__uflow@plt>
  4050a8:	ldur	x14, [x29, #-80]
  4050ac:	mov	w1, w0
  4050b0:	cmp	w1, #0xa
  4050b4:	b.eq	404198 <wcrtomb@plt+0x1538>  // b.none
  4050b8:	b	4041b0 <wcrtomb@plt+0x1550>
  4050bc:	bl	402c20 <__uflow@plt>
  4050c0:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4050c4:	cmp	w0, #0x6e
  4050c8:	b.ne	405114 <wcrtomb@plt+0x24b4>  // b.any
  4050cc:	b	404324 <wcrtomb@plt+0x16c4>
  4050d0:	bl	402c20 <__uflow@plt>
  4050d4:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4050d8:	mov	w20, w0
  4050dc:	cmp	w20, #0xa
  4050e0:	b.eq	404388 <wcrtomb@plt+0x1728>  // b.none
  4050e4:	b	40439c <wcrtomb@plt+0x173c>
  4050e8:	bl	402c20 <__uflow@plt>
  4050ec:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4050f0:	mov	w20, w0
  4050f4:	cmp	w20, #0xa
  4050f8:	b.eq	404644 <wcrtomb@plt+0x19e4>  // b.none
  4050fc:	b	404658 <wcrtomb@plt+0x19f8>
  405100:	bl	402c20 <__uflow@plt>
  405104:	adrp	x12, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405108:	cmp	w0, #0xa
  40510c:	b.eq	405010 <wcrtomb@plt+0x23b0>  // b.none
  405110:	b	405264 <wcrtomb@plt+0x2604>
  405114:	cmp	w0, #0xa
  405118:	b.ne	405128 <wcrtomb@plt+0x24c8>  // b.any
  40511c:	ldr	x8, [x11, #1440]
  405120:	add	x8, x8, #0x1
  405124:	str	x8, [x11, #1440]
  405128:	cmn	w0, #0x1
  40512c:	b.eq	403434 <wcrtomb@plt+0x7d4>  // b.none
  405130:	cmp	w0, #0xa
  405134:	b.eq	403434 <wcrtomb@plt+0x7d4>  // b.none
  405138:	ldr	x8, [x27, #1408]
  40513c:	cbz	x8, 405154 <wcrtomb@plt+0x24f4>
  405140:	ldr	x9, [x19, #1416]
  405144:	mov	w0, #0xffffffff            	// #-1
  405148:	cmp	x8, x9
  40514c:	b.cs	405128 <wcrtomb@plt+0x24c8>  // b.hs, b.nlast
  405150:	b	405188 <wcrtomb@plt+0x2528>
  405154:	ldr	x8, [x23, #1424]
  405158:	mov	w0, #0xffffffff            	// #-1
  40515c:	cbz	x8, 405128 <wcrtomb@plt+0x24c8>
  405160:	ldrb	w9, [x8]
  405164:	mov	w0, #0xffffffff            	// #-1
  405168:	tbnz	w9, #4, 405128 <wcrtomb@plt+0x24c8>
  40516c:	ldp	x9, x10, [x8, #8]
  405170:	cmp	x9, x10
  405174:	b.cs	405198 <wcrtomb@plt+0x2538>  // b.hs, b.nlast
  405178:	add	x10, x9, #0x1
  40517c:	str	x10, [x8, #8]
  405180:	ldrb	w0, [x9]
  405184:	b	405114 <wcrtomb@plt+0x24b4>
  405188:	add	x9, x8, #0x1
  40518c:	str	x9, [x27, #1408]
  405190:	ldrb	w0, [x8]
  405194:	b	405114 <wcrtomb@plt+0x24b4>
  405198:	mov	x0, x8
  40519c:	bl	402c20 <__uflow@plt>
  4051a0:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4051a4:	b	405114 <wcrtomb@plt+0x24b4>
  4051a8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4051ac:	ldr	w8, [x8, #2264]
  4051b0:	cmp	w8, #0x2
  4051b4:	b.ne	4051c4 <wcrtomb@plt+0x2564>  // b.any
  4051b8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4051bc:	ldr	x8, [x8, #1328]
  4051c0:	cbnz	x8, 40532c <wcrtomb@plt+0x26cc>
  4051c4:	mov	x0, x28
  4051c8:	ldp	x20, x19, [sp, #480]
  4051cc:	ldp	x22, x21, [sp, #464]
  4051d0:	ldp	x24, x23, [sp, #448]
  4051d4:	ldp	x26, x25, [sp, #432]
  4051d8:	ldp	x28, x27, [sp, #416]
  4051dc:	ldp	x29, x30, [sp, #400]
  4051e0:	add	sp, sp, #0x1f0
  4051e4:	ret
  4051e8:	mov	w0, w26
  4051ec:	bl	405eb0 <wcrtomb@plt+0x3250>
  4051f0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4051f4:	add	x1, x1, #0x58f
  4051f8:	b	405334 <wcrtomb@plt+0x26d4>
  4051fc:	bl	4170f0 <wcrtomb@plt+0x14490>
  405200:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405204:	add	x1, x1, #0x4a7
  405208:	b	405334 <wcrtomb@plt+0x26d4>
  40520c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405210:	add	x1, x1, #0x48a
  405214:	b	405334 <wcrtomb@plt+0x26d4>
  405218:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40521c:	add	x1, x1, #0x59f
  405220:	b	405334 <wcrtomb@plt+0x26d4>
  405224:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405228:	add	x0, x0, #0x99d
  40522c:	mov	w1, w8
  405230:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  405234:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405238:	add	x1, x1, #0x73b
  40523c:	b	405334 <wcrtomb@plt+0x26d4>
  405240:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405244:	add	x1, x1, #0x6bc
  405248:	b	405334 <wcrtomb@plt+0x26d4>
  40524c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405250:	add	x1, x1, #0x498
  405254:	b	405334 <wcrtomb@plt+0x26d4>
  405258:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40525c:	add	x1, x1, #0x4ef
  405260:	b	405334 <wcrtomb@plt+0x26d4>
  405264:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405268:	add	x1, x1, #0x60a
  40526c:	b	405334 <wcrtomb@plt+0x26d4>
  405270:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405274:	add	x1, x1, #0x50e
  405278:	b	405334 <wcrtomb@plt+0x26d4>
  40527c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405280:	add	x1, x1, #0x56b
  405284:	b	405334 <wcrtomb@plt+0x26d4>
  405288:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40528c:	add	x1, x1, #0x54e
  405290:	b	405334 <wcrtomb@plt+0x26d4>
  405294:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405298:	add	x1, x1, #0x784
  40529c:	b	405334 <wcrtomb@plt+0x26d4>
  4052a0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052a4:	add	x1, x1, #0x4e0
  4052a8:	b	405334 <wcrtomb@plt+0x26d4>
  4052ac:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052b0:	add	x1, x1, #0x52f
  4052b4:	b	405334 <wcrtomb@plt+0x26d4>
  4052b8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052bc:	add	x1, x1, #0x7e6
  4052c0:	b	405334 <wcrtomb@plt+0x26d4>
  4052c4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052c8:	add	x1, x1, #0x71d
  4052cc:	b	405334 <wcrtomb@plt+0x26d4>
  4052d0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052d4:	add	x1, x1, #0x5f1
  4052d8:	b	4052fc <wcrtomb@plt+0x269c>
  4052dc:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052e0:	add	x1, x1, #0x5d8
  4052e4:	b	4052fc <wcrtomb@plt+0x269c>
  4052e8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052ec:	add	x1, x1, #0x668
  4052f0:	b	405334 <wcrtomb@plt+0x26d4>
  4052f4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4052f8:	add	x1, x1, #0x68f
  4052fc:	mov	w2, #0x5                   	// #5
  405300:	bl	402b40 <dcgettext@plt>
  405304:	bl	402d7c <wcrtomb@plt+0x11c>
  405308:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40530c:	add	x1, x1, #0x644
  405310:	b	405334 <wcrtomb@plt+0x26d4>
  405314:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405318:	add	x1, x1, #0x620
  40531c:	b	405334 <wcrtomb@plt+0x26d4>
  405320:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405324:	add	x1, x1, #0x7be
  405328:	b	405334 <wcrtomb@plt+0x26d4>
  40532c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405330:	add	x1, x1, #0x771
  405334:	mov	w2, #0x5                   	// #5
  405338:	mov	x0, xzr
  40533c:	bl	402b40 <dcgettext@plt>
  405340:	bl	402d7c <wcrtomb@plt+0x11c>
  405344:	stp	x29, x30, [sp, #-48]!
  405348:	stp	x22, x21, [sp, #16]
  40534c:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405350:	ldr	x8, [x21, #1280]
  405354:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405358:	stp	x20, x19, [sp, #32]
  40535c:	mov	x19, x1
  405360:	str	x8, [x22, #1424]
  405364:	ldrb	w8, [x1]
  405368:	mov	x20, x0
  40536c:	mov	x29, sp
  405370:	cmp	w8, #0x2d
  405374:	b.ne	405380 <wcrtomb@plt+0x2720>  // b.any
  405378:	ldrb	w8, [x19, #1]
  40537c:	cbz	w8, 405398 <wcrtomb@plt+0x2738>
  405380:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405384:	add	x1, x1, #0x970
  405388:	mov	w2, #0x1                   	// #1
  40538c:	mov	x0, x19
  405390:	bl	40bcf4 <wcrtomb@plt+0x9094>
  405394:	str	x0, [x22, #1424]
  405398:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40539c:	ldr	q0, [x8, #2320]
  4053a0:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4053a4:	add	x22, x22, #0x590
  4053a8:	mov	x0, x20
  4053ac:	str	x19, [x22, #8]
  4053b0:	str	q0, [x22, #16]
  4053b4:	bl	4032c0 <wcrtomb@plt+0x660>
  4053b8:	ldr	x8, [x22]
  4053bc:	ldr	x9, [x21, #1280]
  4053c0:	mov	x19, x0
  4053c4:	cmp	x8, x9
  4053c8:	b.eq	4053d4 <wcrtomb@plt+0x2774>  // b.none
  4053cc:	mov	x0, x8
  4053d0:	bl	40c2a8 <wcrtomb@plt+0x9648>
  4053d4:	mov	x0, x19
  4053d8:	ldp	x20, x19, [sp, #32]
  4053dc:	ldp	x22, x21, [sp, #16]
  4053e0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4053e4:	add	x8, x8, #0x518
  4053e8:	mov	w9, #0x1                   	// #1
  4053ec:	str	xzr, [x8, #120]
  4053f0:	strb	w9, [x8]
  4053f4:	ldp	x29, x30, [sp], #48
  4053f8:	ret
  4053fc:	stp	x29, x30, [sp, #-80]!
  405400:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405404:	ldr	x8, [x8, #1320]
  405408:	str	x25, [sp, #16]
  40540c:	stp	x24, x23, [sp, #32]
  405410:	stp	x22, x21, [sp, #48]
  405414:	stp	x20, x19, [sp, #64]
  405418:	mov	x29, sp
  40541c:	cbnz	x8, 405554 <wcrtomb@plt+0x28f4>
  405420:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405424:	ldr	x20, [x22, #1328]
  405428:	mov	x19, x0
  40542c:	cbz	x20, 40547c <wcrtomb@plt+0x281c>
  405430:	mov	x0, x20
  405434:	bl	40c790 <wcrtomb@plt+0x9b30>
  405438:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40543c:	ldr	x8, [x8, #1336]
  405440:	str	x0, [x8, #8]
  405444:	cbz	x0, 405470 <wcrtomb@plt+0x2810>
  405448:	mov	x21, x0
  40544c:	mov	x0, x20
  405450:	bl	40c788 <wcrtomb@plt+0x9b28>
  405454:	mov	x1, x21
  405458:	bl	417044 <wcrtomb@plt+0x143e4>
  40545c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405460:	add	x8, x8, #0x530
  405464:	ldr	x9, [x8, #8]
  405468:	str	x0, [x9]
  40546c:	ldr	x20, [x8]
  405470:	mov	x0, x20
  405474:	bl	40c904 <wcrtomb@plt+0x9ca4>
  405478:	str	xzr, [x22, #1328]
  40547c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405480:	ldr	x22, [x8, #1344]
  405484:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405488:	cbz	x22, 4054f4 <wcrtomb@plt+0x2894>
  40548c:	add	x23, x19, #0x10
  405490:	mov	w24, #0x28                  	// #40
  405494:	b	4054cc <wcrtomb@plt+0x286c>
  405498:	ldrb	w8, [x20]
  40549c:	mov	x25, x23
  4054a0:	cbnz	w8, 405538 <wcrtomb@plt+0x28d8>
  4054a4:	ldr	x8, [x19]
  4054a8:	ldr	x9, [x22]
  4054ac:	ldr	x10, [x25]
  4054b0:	madd	x8, x9, x24, x8
  4054b4:	str	x10, [x8, #24]
  4054b8:	ldr	x0, [x22, #8]
  4054bc:	ldr	x20, [x22, #40]
  4054c0:	bl	402a10 <free@plt>
  4054c4:	mov	x22, x20
  4054c8:	cbz	x20, 4054f4 <wcrtomb@plt+0x2894>
  4054cc:	ldr	x25, [x21, #1352]
  4054d0:	ldr	x20, [x22, #8]
  4054d4:	cbz	x25, 405498 <wcrtomb@plt+0x2838>
  4054d8:	ldr	x0, [x25, #8]
  4054dc:	mov	x1, x20
  4054e0:	bl	4029d0 <strcmp@plt>
  4054e4:	cbz	w0, 4054a4 <wcrtomb@plt+0x2844>
  4054e8:	ldr	x25, [x25, #40]
  4054ec:	cbnz	x25, 4054d8 <wcrtomb@plt+0x2878>
  4054f0:	b	405498 <wcrtomb@plt+0x2838>
  4054f4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4054f8:	add	x9, x9, #0x540
  4054fc:	ldr	x8, [x9, #8]
  405500:	str	xzr, [x9]
  405504:	cbz	x8, 40551c <wcrtomb@plt+0x28bc>
  405508:	ldr	x0, [x8, #8]
  40550c:	ldr	x19, [x8, #40]
  405510:	bl	402a10 <free@plt>
  405514:	mov	x8, x19
  405518:	cbnz	x19, 405508 <wcrtomb@plt+0x28a8>
  40551c:	str	xzr, [x21, #1352]
  405520:	ldp	x20, x19, [sp, #64]
  405524:	ldp	x22, x21, [sp, #48]
  405528:	ldp	x24, x23, [sp, #32]
  40552c:	ldr	x25, [sp, #16]
  405530:	ldp	x29, x30, [sp], #80
  405534:	ret
  405538:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40553c:	add	x1, x1, #0x973
  405540:	mov	w2, #0x5                   	// #5
  405544:	mov	x0, xzr
  405548:	bl	402b40 <dcgettext@plt>
  40554c:	ldr	x1, [x22, #8]
  405550:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  405554:	ldr	x9, [x8, #32]
  405558:	ldr	q0, [x8, #16]
  40555c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405560:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405564:	add	x8, x8, #0x598
  405568:	add	x1, x1, #0x4d2
  40556c:	mov	w2, #0x5                   	// #5
  405570:	mov	x0, xzr
  405574:	str	x9, [x8, #16]
  405578:	str	q0, [x8]
  40557c:	bl	402b40 <dcgettext@plt>
  405580:	bl	402d7c <wcrtomb@plt+0x11c>
  405584:	stp	x29, x30, [sp, #-32]!
  405588:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40558c:	str	x19, [sp, #16]
  405590:	ldr	x19, [x8, #1360]
  405594:	mov	x29, sp
  405598:	cbnz	x19, 4055b0 <wcrtomb@plt+0x2950>
  40559c:	ldr	x19, [sp, #16]
  4055a0:	ldp	x29, x30, [sp], #32
  4055a4:	ret
  4055a8:	ldr	x19, [x19, #24]
  4055ac:	cbz	x19, 40559c <wcrtomb@plt+0x293c>
  4055b0:	ldr	x0, [x19, #16]
  4055b4:	cbz	x0, 4055a8 <wcrtomb@plt+0x2948>
  4055b8:	bl	4028a0 <rewind@plt>
  4055bc:	b	4055a8 <wcrtomb@plt+0x2948>
  4055c0:	stp	x29, x30, [sp, #-48]!
  4055c4:	stp	x20, x19, [sp, #32]
  4055c8:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4055cc:	ldr	x20, [x19, #1360]
  4055d0:	str	x21, [sp, #16]
  4055d4:	mov	x29, sp
  4055d8:	cbnz	x20, 40561c <wcrtomb@plt+0x29bc>
  4055dc:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4055e0:	ldr	x21, [x20, #1368]
  4055e4:	cbnz	x21, 405638 <wcrtomb@plt+0x29d8>
  4055e8:	ldr	x19, [x19, #1360]
  4055ec:	cbnz	x19, 405654 <wcrtomb@plt+0x29f4>
  4055f0:	ldr	x19, [x20, #1368]
  4055f4:	cbnz	x19, 40566c <wcrtomb@plt+0x2a0c>
  4055f8:	ldp	x20, x19, [sp, #32]
  4055fc:	ldr	x21, [sp, #16]
  405600:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405604:	add	x8, x8, #0x550
  405608:	stp	xzr, xzr, [x8]
  40560c:	ldp	x29, x30, [sp], #48
  405610:	ret
  405614:	ldr	x20, [x20, #24]
  405618:	cbz	x20, 4055dc <wcrtomb@plt+0x297c>
  40561c:	ldr	x0, [x20]
  405620:	cbz	x0, 405614 <wcrtomb@plt+0x29b4>
  405624:	bl	402a10 <free@plt>
  405628:	str	xzr, [x20]
  40562c:	b	405614 <wcrtomb@plt+0x29b4>
  405630:	ldr	x21, [x21, #24]
  405634:	cbz	x21, 4055e8 <wcrtomb@plt+0x2988>
  405638:	ldr	x0, [x21]
  40563c:	cbz	x0, 405630 <wcrtomb@plt+0x29d0>
  405640:	bl	402a10 <free@plt>
  405644:	str	xzr, [x21]
  405648:	b	405630 <wcrtomb@plt+0x29d0>
  40564c:	ldr	x19, [x19, #24]
  405650:	cbz	x19, 4055f0 <wcrtomb@plt+0x2990>
  405654:	ldr	x0, [x19, #16]
  405658:	cbz	x0, 40564c <wcrtomb@plt+0x29ec>
  40565c:	bl	40c2a8 <wcrtomb@plt+0x9648>
  405660:	b	40564c <wcrtomb@plt+0x29ec>
  405664:	ldr	x19, [x19, #24]
  405668:	cbz	x19, 4055f8 <wcrtomb@plt+0x2998>
  40566c:	ldr	x0, [x19, #16]
  405670:	cbz	x0, 405664 <wcrtomb@plt+0x2a04>
  405674:	bl	40c2a8 <wcrtomb@plt+0x9648>
  405678:	b	405664 <wcrtomb@plt+0x2a04>
  40567c:	stp	x29, x30, [sp, #-80]!
  405680:	stp	x22, x21, [sp, #48]
  405684:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405688:	stp	x20, x19, [sp, #64]
  40568c:	mov	w20, w1
  405690:	mov	x19, x0
  405694:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405698:	add	x21, x21, #0x530
  40569c:	stp	x26, x25, [sp, #16]
  4056a0:	stp	x24, x23, [sp, #32]
  4056a4:	mov	x29, sp
  4056a8:	cbz	x0, 4056c8 <wcrtomb@plt+0x2a68>
  4056ac:	ldr	x0, [x22, #1328]
  4056b0:	cbz	x0, 4056b8 <wcrtomb@plt+0x2a58>
  4056b4:	bl	40c904 <wcrtomb@plt+0x9ca4>
  4056b8:	bl	40c744 <wcrtomb@plt+0x9ae4>
  4056bc:	str	x0, [x21]
  4056c0:	stp	xzr, xzr, [x19]
  4056c4:	str	x19, [x21, #8]
  4056c8:	cmn	w20, #0x1
  4056cc:	b.eq	4058e8 <wcrtomb@plt+0x2c88>  // b.none
  4056d0:	cmp	w20, #0xa
  4056d4:	b.eq	4056e4 <wcrtomb@plt+0x2a84>  // b.none
  4056d8:	ldr	x0, [x22, #1328]
  4056dc:	mov	w1, w20
  4056e0:	bl	40c850 <wcrtomb@plt+0x9bf0>
  4056e4:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4056e8:	ldr	x8, [x23, #1408]
  4056ec:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4056f0:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4056f4:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4056f8:	cbz	x8, 405720 <wcrtomb@plt+0x2ac0>
  4056fc:	ldr	x9, [x25, #1416]
  405700:	cmp	x8, x9
  405704:	b.cs	405738 <wcrtomb@plt+0x2ad8>  // b.hs, b.nlast
  405708:	add	x9, x8, #0x1
  40570c:	str	x9, [x23, #1408]
  405710:	ldrb	w20, [x8]
  405714:	cmp	w20, #0xa
  405718:	b.ne	405774 <wcrtomb@plt+0x2b14>  // b.any
  40571c:	b	405768 <wcrtomb@plt+0x2b08>
  405720:	ldr	x0, [x26, #1424]
  405724:	cbz	x0, 405740 <wcrtomb@plt+0x2ae0>
  405728:	ldrb	w8, [x0]
  40572c:	tbz	w8, #4, 405748 <wcrtomb@plt+0x2ae8>
  405730:	mov	w20, #0xffffffff            	// #-1
  405734:	b	405774 <wcrtomb@plt+0x2b14>
  405738:	mov	w20, #0xffffffff            	// #-1
  40573c:	b	405774 <wcrtomb@plt+0x2b14>
  405740:	mov	w20, #0xffffffff            	// #-1
  405744:	b	405774 <wcrtomb@plt+0x2b14>
  405748:	ldp	x8, x9, [x0, #8]
  40574c:	cmp	x8, x9
  405750:	b.cs	405900 <wcrtomb@plt+0x2ca0>  // b.hs, b.nlast
  405754:	add	x9, x8, #0x1
  405758:	str	x9, [x0, #8]
  40575c:	ldrb	w20, [x8]
  405760:	cmp	w20, #0xa
  405764:	b.ne	405774 <wcrtomb@plt+0x2b14>  // b.any
  405768:	ldr	x8, [x24, #1440]
  40576c:	add	x8, x8, #0x1
  405770:	str	x8, [x24, #1440]
  405774:	cmp	w20, #0x5c
  405778:	b.eq	405790 <wcrtomb@plt+0x2b30>  // b.none
  40577c:	cmn	w20, #0x1
  405780:	b.eq	405884 <wcrtomb@plt+0x2c24>  // b.none
  405784:	cmp	w20, #0xa
  405788:	b.ne	405820 <wcrtomb@plt+0x2bc0>  // b.any
  40578c:	b	405884 <wcrtomb@plt+0x2c24>
  405790:	ldr	x8, [x23, #1408]
  405794:	cbz	x8, 4057bc <wcrtomb@plt+0x2b5c>
  405798:	ldr	x9, [x25, #1416]
  40579c:	cmp	x8, x9
  4057a0:	b.cs	405864 <wcrtomb@plt+0x2c04>  // b.hs, b.nlast
  4057a4:	add	x9, x8, #0x1
  4057a8:	str	x9, [x23, #1408]
  4057ac:	ldrb	w20, [x8]
  4057b0:	cmp	w20, #0xa
  4057b4:	b.ne	4057ec <wcrtomb@plt+0x2b8c>  // b.any
  4057b8:	b	405808 <wcrtomb@plt+0x2ba8>
  4057bc:	ldr	x0, [x26, #1424]
  4057c0:	cbz	x0, 405864 <wcrtomb@plt+0x2c04>
  4057c4:	ldrb	w8, [x0]
  4057c8:	tbnz	w8, #4, 405864 <wcrtomb@plt+0x2c04>
  4057cc:	ldp	x8, x9, [x0, #8]
  4057d0:	cmp	x8, x9
  4057d4:	b.cs	4057f8 <wcrtomb@plt+0x2b98>  // b.hs, b.nlast
  4057d8:	add	x9, x8, #0x1
  4057dc:	str	x9, [x0, #8]
  4057e0:	ldrb	w20, [x8]
  4057e4:	cmp	w20, #0xa
  4057e8:	b.eq	405808 <wcrtomb@plt+0x2ba8>  // b.none
  4057ec:	cmn	w20, #0x1
  4057f0:	b.ne	405814 <wcrtomb@plt+0x2bb4>  // b.any
  4057f4:	b	405864 <wcrtomb@plt+0x2c04>
  4057f8:	bl	402c20 <__uflow@plt>
  4057fc:	mov	w20, w0
  405800:	cmp	w20, #0xa
  405804:	b.ne	4057ec <wcrtomb@plt+0x2b8c>  // b.any
  405808:	ldr	x8, [x24, #1440]
  40580c:	add	x8, x8, #0x1
  405810:	str	x8, [x24, #1440]
  405814:	ldr	x0, [x22, #1328]
  405818:	mov	w1, #0x5c                  	// #92
  40581c:	bl	40c850 <wcrtomb@plt+0x9bf0>
  405820:	ldr	x0, [x21]
  405824:	mov	w1, w20
  405828:	bl	40c850 <wcrtomb@plt+0x9bf0>
  40582c:	ldr	x8, [x21, #80]
  405830:	cbz	x8, 405848 <wcrtomb@plt+0x2be8>
  405834:	ldr	x9, [x25, #1416]
  405838:	mov	w20, #0xffffffff            	// #-1
  40583c:	cmp	x8, x9
  405840:	b.cs	405774 <wcrtomb@plt+0x2b14>  // b.hs, b.nlast
  405844:	b	405708 <wcrtomb@plt+0x2aa8>
  405848:	ldr	x0, [x26, #1424]
  40584c:	mov	w20, #0xffffffff            	// #-1
  405850:	cbz	x0, 405774 <wcrtomb@plt+0x2b14>
  405854:	ldrb	w8, [x0]
  405858:	mov	w20, #0xffffffff            	// #-1
  40585c:	tbz	w8, #4, 405748 <wcrtomb@plt+0x2ae8>
  405860:	b	405774 <wcrtomb@plt+0x2b14>
  405864:	ldr	x0, [x22, #1328]
  405868:	ldp	x20, x19, [sp, #64]
  40586c:	ldp	x22, x21, [sp, #48]
  405870:	ldp	x24, x23, [sp, #32]
  405874:	ldp	x26, x25, [sp, #16]
  405878:	mov	w1, #0xa                   	// #10
  40587c:	ldp	x29, x30, [sp], #80
  405880:	b	40c850 <wcrtomb@plt+0x9bf0>
  405884:	ldr	x0, [x21]
  405888:	mov	w1, #0xa                   	// #10
  40588c:	bl	40c850 <wcrtomb@plt+0x9bf0>
  405890:	ldp	x20, x8, [x21]
  405894:	cmp	x19, #0x0
  405898:	mov	x0, x20
  40589c:	csel	x22, x19, x8, ne  // ne = any
  4058a0:	bl	40c788 <wcrtomb@plt+0x9b28>
  4058a4:	mov	x19, x0
  4058a8:	mov	x0, x20
  4058ac:	bl	40c790 <wcrtomb@plt+0x9b30>
  4058b0:	mov	x1, x0
  4058b4:	mov	x0, x19
  4058b8:	mov	w2, wzr
  4058bc:	bl	402e1c <wcrtomb@plt+0x1bc>
  4058c0:	str	x0, [x22, #8]
  4058c4:	mov	x19, x0
  4058c8:	ldr	x0, [x21]
  4058cc:	bl	40c788 <wcrtomb@plt+0x9b28>
  4058d0:	mov	x1, x19
  4058d4:	bl	417044 <wcrtomb@plt+0x143e4>
  4058d8:	str	x0, [x22]
  4058dc:	ldr	x0, [x21]
  4058e0:	bl	40c904 <wcrtomb@plt+0x9ca4>
  4058e4:	str	xzr, [x21]
  4058e8:	ldp	x20, x19, [sp, #64]
  4058ec:	ldp	x22, x21, [sp, #48]
  4058f0:	ldp	x24, x23, [sp, #32]
  4058f4:	ldp	x26, x25, [sp, #16]
  4058f8:	ldp	x29, x30, [sp], #80
  4058fc:	ret
  405900:	bl	402c20 <__uflow@plt>
  405904:	mov	w20, w0
  405908:	cmp	w20, #0xa
  40590c:	b.ne	405774 <wcrtomb@plt+0x2b14>  // b.any
  405910:	b	405768 <wcrtomb@plt+0x2b08>
  405914:	stp	x29, x30, [sp, #-96]!
  405918:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40591c:	ldr	q0, [x8, #2336]
  405920:	stp	x22, x21, [sp, #64]
  405924:	stp	x20, x19, [sp, #80]
  405928:	mov	w21, w1
  40592c:	mov	x19, x0
  405930:	cmp	w1, #0x5c
  405934:	str	x27, [sp, #16]
  405938:	stp	x26, x25, [sp, #32]
  40593c:	stp	x24, x23, [sp, #48]
  405940:	mov	x29, sp
  405944:	str	wzr, [x0]
  405948:	stur	q0, [x0, #8]
  40594c:	str	xzr, [x0, #24]
  405950:	b.eq	40595c <wcrtomb@plt+0x2cfc>  // b.none
  405954:	cmp	w21, #0x2f
  405958:	b.ne	4059a0 <wcrtomb@plt+0x2d40>  // b.any
  40595c:	mov	w8, #0x1                   	// #1
  405960:	cmp	w21, #0x5c
  405964:	str	w8, [x19]
  405968:	b.ne	405c88 <wcrtomb@plt+0x3028>  // b.any
  40596c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405970:	ldr	x9, [x8, #1408]
  405974:	cbz	x9, 405c3c <wcrtomb@plt+0x2fdc>
  405978:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40597c:	ldr	x10, [x10, #1416]
  405980:	cmp	x9, x10
  405984:	b.cs	405c84 <wcrtomb@plt+0x3024>  // b.hs, b.nlast
  405988:	add	x10, x9, #0x1
  40598c:	str	x10, [x8, #1408]
  405990:	ldrb	w21, [x9]
  405994:	cmp	w21, #0xa
  405998:	b.eq	405c70 <wcrtomb@plt+0x3010>  // b.none
  40599c:	b	405c88 <wcrtomb@plt+0x3028>
  4059a0:	bl	4029e0 <__ctype_b_loc@plt>
  4059a4:	ldr	x8, [x0]
  4059a8:	and	w9, w21, #0xff
  4059ac:	mov	x20, x0
  4059b0:	ldrh	w8, [x8, w9, uxtw #1]
  4059b4:	tbnz	w8, #11, 405a80 <wcrtomb@plt+0x2e20>
  4059b8:	cmp	w21, #0x2b
  4059bc:	cset	w8, ne  // ne = any
  4059c0:	cmp	w21, #0x7e
  4059c4:	cset	w9, ne  // ne = any
  4059c8:	and	w8, w8, w9
  4059cc:	tbnz	w8, #0, 405e24 <wcrtomb@plt+0x31c4>
  4059d0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4059d4:	ldr	w8, [x8, #2264]
  4059d8:	cmp	w8, #0x2
  4059dc:	b.eq	405e24 <wcrtomb@plt+0x31c4>  // b.none
  4059e0:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4059e4:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4059e8:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4059ec:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4059f0:	b	405a04 <wcrtomb@plt+0x2da4>
  4059f4:	mov	w0, #0xffffffff            	// #-1
  4059f8:	ldr	x8, [x20]
  4059fc:	ldrh	w8, [x8, w0, sxtw #1]
  405a00:	tbz	w8, #0, 405e34 <wcrtomb@plt+0x31d4>
  405a04:	ldr	x8, [x22, #1408]
  405a08:	cbz	x8, 405a30 <wcrtomb@plt+0x2dd0>
  405a0c:	ldr	x9, [x25, #1416]
  405a10:	cmp	x8, x9
  405a14:	b.cs	4059f4 <wcrtomb@plt+0x2d94>  // b.hs, b.nlast
  405a18:	add	x9, x8, #0x1
  405a1c:	str	x9, [x22, #1408]
  405a20:	ldrb	w0, [x8]
  405a24:	cmp	w0, #0xa
  405a28:	b.ne	4059f8 <wcrtomb@plt+0x2d98>  // b.any
  405a2c:	b	405a60 <wcrtomb@plt+0x2e00>
  405a30:	ldr	x0, [x23, #1424]
  405a34:	cbz	x0, 4059f4 <wcrtomb@plt+0x2d94>
  405a38:	ldrb	w8, [x0]
  405a3c:	tbnz	w8, #4, 4059f4 <wcrtomb@plt+0x2d94>
  405a40:	ldp	x8, x9, [x0, #8]
  405a44:	cmp	x8, x9
  405a48:	b.cs	405a70 <wcrtomb@plt+0x2e10>  // b.hs, b.nlast
  405a4c:	add	x9, x8, #0x1
  405a50:	str	x9, [x0, #8]
  405a54:	ldrb	w0, [x8]
  405a58:	cmp	w0, #0xa
  405a5c:	b.ne	4059f8 <wcrtomb@plt+0x2d98>  // b.any
  405a60:	ldr	x8, [x24, #1440]
  405a64:	add	x8, x8, #0x1
  405a68:	str	x8, [x24, #1440]
  405a6c:	b	4059f8 <wcrtomb@plt+0x2d98>
  405a70:	bl	402c20 <__uflow@plt>
  405a74:	cmp	w0, #0xa
  405a78:	b.ne	4059f8 <wcrtomb@plt+0x2d98>  // b.any
  405a7c:	b	405a60 <wcrtomb@plt+0x2e00>
  405a80:	mov	w0, w21
  405a84:	bl	4061d0 <wcrtomb@plt+0x3570>
  405a88:	mov	w8, #0x2                   	// #2
  405a8c:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405a90:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405a94:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405a98:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405a9c:	str	x0, [x19, #8]
  405aa0:	str	w8, [x19]
  405aa4:	b	405ab8 <wcrtomb@plt+0x2e58>
  405aa8:	mov	w8, #0xffffffff            	// #-1
  405aac:	ldr	x9, [x20]
  405ab0:	ldrh	w9, [x9, w8, sxtw #1]
  405ab4:	tbz	w9, #0, 405b3c <wcrtomb@plt+0x2edc>
  405ab8:	ldr	x8, [x21, #1408]
  405abc:	cbz	x8, 405ae4 <wcrtomb@plt+0x2e84>
  405ac0:	ldr	x9, [x24, #1416]
  405ac4:	cmp	x8, x9
  405ac8:	b.cs	405aa8 <wcrtomb@plt+0x2e48>  // b.hs, b.nlast
  405acc:	add	x9, x8, #0x1
  405ad0:	str	x9, [x21, #1408]
  405ad4:	ldrb	w8, [x8]
  405ad8:	cmp	w8, #0xa
  405adc:	b.ne	405aac <wcrtomb@plt+0x2e4c>  // b.any
  405ae0:	b	405b14 <wcrtomb@plt+0x2eb4>
  405ae4:	ldr	x0, [x22, #1424]
  405ae8:	cbz	x0, 405aa8 <wcrtomb@plt+0x2e48>
  405aec:	ldrb	w8, [x0]
  405af0:	tbnz	w8, #4, 405aa8 <wcrtomb@plt+0x2e48>
  405af4:	ldp	x8, x9, [x0, #8]
  405af8:	cmp	x8, x9
  405afc:	b.cs	405b28 <wcrtomb@plt+0x2ec8>  // b.hs, b.nlast
  405b00:	add	x9, x8, #0x1
  405b04:	str	x9, [x0, #8]
  405b08:	ldrb	w8, [x8]
  405b0c:	cmp	w8, #0xa
  405b10:	b.ne	405aac <wcrtomb@plt+0x2e4c>  // b.any
  405b14:	ldr	x8, [x23, #1440]
  405b18:	add	x8, x8, #0x1
  405b1c:	str	x8, [x23, #1440]
  405b20:	mov	w8, #0xa                   	// #10
  405b24:	b	405aac <wcrtomb@plt+0x2e4c>
  405b28:	bl	402c20 <__uflow@plt>
  405b2c:	mov	w8, w0
  405b30:	cmp	w8, #0xa
  405b34:	b.ne	405aac <wcrtomb@plt+0x2e4c>  // b.any
  405b38:	b	405b14 <wcrtomb@plt+0x2eb4>
  405b3c:	cmp	w8, #0x7e
  405b40:	b.ne	405b54 <wcrtomb@plt+0x2ef4>  // b.any
  405b44:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405b48:	ldr	w9, [x9, #2264]
  405b4c:	cmp	w9, #0x2
  405b50:	b.ne	405bc0 <wcrtomb@plt+0x2f60>  // b.any
  405b54:	cmn	w8, #0x1
  405b58:	b.eq	405e04 <wcrtomb@plt+0x31a4>  // b.none
  405b5c:	cmp	w8, #0xa
  405b60:	b.ne	405b74 <wcrtomb@plt+0x2f14>  // b.any
  405b64:	ldr	x9, [x23, #1440]
  405b68:	cbz	x9, 405b74 <wcrtomb@plt+0x2f14>
  405b6c:	sub	x9, x9, #0x1
  405b70:	str	x9, [x23, #1440]
  405b74:	ldr	x9, [x21, #1408]
  405b78:	cbz	x9, 405e78 <wcrtomb@plt+0x3218>
  405b7c:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405b80:	ldr	x10, [x10, #1400]
  405b84:	cmp	x9, x10
  405b88:	b.ls	405ba0 <wcrtomb@plt+0x2f40>  // b.plast
  405b8c:	sub	x10, x9, #0x1
  405b90:	str	x10, [x21, #1408]
  405b94:	ldurb	w9, [x9, #-1]
  405b98:	cmp	w8, w9
  405b9c:	b.eq	405e04 <wcrtomb@plt+0x31a4>  // b.none
  405ba0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405ba4:	add	x0, x0, #0x99d
  405ba8:	mov	w1, w8
  405bac:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  405bb0:	mov	w0, #0xffffffff            	// #-1
  405bb4:	ldr	x8, [x20]
  405bb8:	ldrh	w8, [x8, w0, sxtw #1]
  405bbc:	tbz	w8, #0, 405e50 <wcrtomb@plt+0x31f0>
  405bc0:	ldr	x8, [x21, #1408]
  405bc4:	cbz	x8, 405bec <wcrtomb@plt+0x2f8c>
  405bc8:	ldr	x9, [x24, #1416]
  405bcc:	cmp	x8, x9
  405bd0:	b.cs	405bb0 <wcrtomb@plt+0x2f50>  // b.hs, b.nlast
  405bd4:	add	x9, x8, #0x1
  405bd8:	str	x9, [x21, #1408]
  405bdc:	ldrb	w0, [x8]
  405be0:	cmp	w0, #0xa
  405be4:	b.ne	405bb4 <wcrtomb@plt+0x2f54>  // b.any
  405be8:	b	405c1c <wcrtomb@plt+0x2fbc>
  405bec:	ldr	x0, [x22, #1424]
  405bf0:	cbz	x0, 405bb0 <wcrtomb@plt+0x2f50>
  405bf4:	ldrb	w8, [x0]
  405bf8:	tbnz	w8, #4, 405bb0 <wcrtomb@plt+0x2f50>
  405bfc:	ldp	x8, x9, [x0, #8]
  405c00:	cmp	x8, x9
  405c04:	b.cs	405c2c <wcrtomb@plt+0x2fcc>  // b.hs, b.nlast
  405c08:	add	x9, x8, #0x1
  405c0c:	str	x9, [x0, #8]
  405c10:	ldrb	w0, [x8]
  405c14:	cmp	w0, #0xa
  405c18:	b.ne	405bb4 <wcrtomb@plt+0x2f54>  // b.any
  405c1c:	ldr	x8, [x23, #1440]
  405c20:	add	x8, x8, #0x1
  405c24:	str	x8, [x23, #1440]
  405c28:	b	405bb4 <wcrtomb@plt+0x2f54>
  405c2c:	bl	402c20 <__uflow@plt>
  405c30:	cmp	w0, #0xa
  405c34:	b.ne	405bb4 <wcrtomb@plt+0x2f54>  // b.any
  405c38:	b	405c1c <wcrtomb@plt+0x2fbc>
  405c3c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405c40:	ldr	x0, [x8, #1424]
  405c44:	cbz	x0, 405c84 <wcrtomb@plt+0x3024>
  405c48:	ldrb	w8, [x0]
  405c4c:	tbnz	w8, #4, 405c84 <wcrtomb@plt+0x3024>
  405c50:	ldp	x8, x9, [x0, #8]
  405c54:	cmp	x8, x9
  405c58:	b.cs	405e88 <wcrtomb@plt+0x3228>  // b.hs, b.nlast
  405c5c:	add	x9, x8, #0x1
  405c60:	str	x9, [x0, #8]
  405c64:	ldrb	w21, [x8]
  405c68:	cmp	w21, #0xa
  405c6c:	b.ne	405c88 <wcrtomb@plt+0x3028>  // b.any
  405c70:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405c74:	ldr	x9, [x8, #1440]
  405c78:	add	x9, x9, #0x1
  405c7c:	str	x9, [x8, #1440]
  405c80:	b	405c88 <wcrtomb@plt+0x3028>
  405c84:	mov	w21, #0xffffffff            	// #-1
  405c88:	mov	w1, #0x1                   	// #1
  405c8c:	mov	w0, w21
  405c90:	bl	406678 <wcrtomb@plt+0x3a18>
  405c94:	cbz	x0, 405e9c <wcrtomb@plt+0x323c>
  405c98:	mov	x20, x0
  405c9c:	mov	w21, wzr
  405ca0:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405ca4:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405ca8:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405cac:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405cb0:	adrp	x27, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405cb4:	b	405ccc <wcrtomb@plt+0x306c>
  405cb8:	mov	w22, #0xffffffff            	// #-1
  405cbc:	bl	4029e0 <__ctype_b_loc@plt>
  405cc0:	ldr	x8, [x0]
  405cc4:	ldrh	w8, [x8, w22, sxtw #1]
  405cc8:	tbz	w8, #0, 405d38 <wcrtomb@plt+0x30d8>
  405ccc:	ldr	x8, [x23, #1408]
  405cd0:	cbz	x8, 405cf8 <wcrtomb@plt+0x3098>
  405cd4:	ldr	x9, [x27, #1416]
  405cd8:	cmp	x8, x9
  405cdc:	b.cs	405cb8 <wcrtomb@plt+0x3058>  // b.hs, b.nlast
  405ce0:	add	x9, x8, #0x1
  405ce4:	str	x9, [x23, #1408]
  405ce8:	ldrb	w22, [x8]
  405cec:	cmp	w22, #0xa
  405cf0:	b.ne	405cbc <wcrtomb@plt+0x305c>  // b.any
  405cf4:	b	405d28 <wcrtomb@plt+0x30c8>
  405cf8:	ldr	x0, [x24, #1424]
  405cfc:	cbz	x0, 405cb8 <wcrtomb@plt+0x3058>
  405d00:	ldrb	w8, [x0]
  405d04:	tbnz	w8, #4, 405cb8 <wcrtomb@plt+0x3058>
  405d08:	ldp	x8, x9, [x0, #8]
  405d0c:	cmp	x8, x9
  405d10:	b.cs	405d6c <wcrtomb@plt+0x310c>  // b.hs, b.nlast
  405d14:	add	x9, x8, #0x1
  405d18:	str	x9, [x0, #8]
  405d1c:	ldrb	w22, [x8]
  405d20:	cmp	w22, #0xa
  405d24:	b.ne	405cbc <wcrtomb@plt+0x305c>  // b.any
  405d28:	ldr	x8, [x25, #1440]
  405d2c:	add	x8, x8, #0x1
  405d30:	str	x8, [x25, #1440]
  405d34:	b	405cbc <wcrtomb@plt+0x305c>
  405d38:	ldr	w8, [x26, #2264]
  405d3c:	cmp	w8, #0x2
  405d40:	b.eq	405d80 <wcrtomb@plt+0x3120>  // b.none
  405d44:	cmp	w22, #0x49
  405d48:	b.eq	405d60 <wcrtomb@plt+0x3100>  // b.none
  405d4c:	cmp	w22, #0x4d
  405d50:	b.ne	405d80 <wcrtomb@plt+0x3120>  // b.any
  405d54:	mov	w8, #0x4                   	// #4
  405d58:	orr	w21, w21, w8
  405d5c:	b	405ccc <wcrtomb@plt+0x306c>
  405d60:	mov	w8, #0x2                   	// #2
  405d64:	orr	w21, w21, w8
  405d68:	b	405ccc <wcrtomb@plt+0x306c>
  405d6c:	bl	402c20 <__uflow@plt>
  405d70:	mov	w22, w0
  405d74:	cmp	w22, #0xa
  405d78:	b.ne	405cbc <wcrtomb@plt+0x305c>  // b.any
  405d7c:	b	405d28 <wcrtomb@plt+0x30c8>
  405d80:	cmn	w22, #0x1
  405d84:	b.eq	405de8 <wcrtomb@plt+0x3188>  // b.none
  405d88:	cmp	w22, #0xa
  405d8c:	b.ne	405da0 <wcrtomb@plt+0x3140>  // b.any
  405d90:	ldr	x8, [x25, #1440]
  405d94:	cbz	x8, 405da0 <wcrtomb@plt+0x3140>
  405d98:	sub	x8, x8, #0x1
  405d9c:	str	x8, [x25, #1440]
  405da0:	ldr	x8, [x23, #1408]
  405da4:	cbz	x8, 405ddc <wcrtomb@plt+0x317c>
  405da8:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405dac:	ldr	x9, [x9, #1400]
  405db0:	cmp	x8, x9
  405db4:	b.ls	405dcc <wcrtomb@plt+0x316c>  // b.plast
  405db8:	sub	x9, x8, #0x1
  405dbc:	str	x9, [x23, #1408]
  405dc0:	ldurb	w8, [x8, #-1]
  405dc4:	cmp	w22, w8
  405dc8:	b.eq	405de8 <wcrtomb@plt+0x3188>  // b.none
  405dcc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405dd0:	add	x0, x0, #0x99d
  405dd4:	mov	w1, w22
  405dd8:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  405ddc:	ldr	x1, [x24, #1424]
  405de0:	mov	w0, w22
  405de4:	bl	402a20 <ungetc@plt>
  405de8:	mov	x0, x20
  405dec:	mov	w1, w21
  405df0:	mov	w2, wzr
  405df4:	bl	40ac90 <wcrtomb@plt+0x8030>
  405df8:	str	x0, [x19, #24]
  405dfc:	mov	x0, x20
  405e00:	bl	40c904 <wcrtomb@plt+0x9ca4>
  405e04:	mov	w0, #0x1                   	// #1
  405e08:	ldp	x20, x19, [sp, #80]
  405e0c:	ldp	x22, x21, [sp, #64]
  405e10:	ldp	x24, x23, [sp, #48]
  405e14:	ldp	x26, x25, [sp, #32]
  405e18:	ldr	x27, [sp, #16]
  405e1c:	ldp	x29, x30, [sp], #96
  405e20:	ret
  405e24:	cmp	w21, #0x24
  405e28:	b.ne	405e64 <wcrtomb@plt+0x3204>  // b.any
  405e2c:	mov	w8, #0x6                   	// #6
  405e30:	b	405e70 <wcrtomb@plt+0x3210>
  405e34:	bl	4061d0 <wcrtomb@plt+0x3570>
  405e38:	str	x0, [x19, #16]
  405e3c:	cbz	x0, 405e04 <wcrtomb@plt+0x31a4>
  405e40:	cmp	w21, #0x2b
  405e44:	b.ne	405e6c <wcrtomb@plt+0x320c>  // b.any
  405e48:	mov	w8, #0x4                   	// #4
  405e4c:	b	405e70 <wcrtomb@plt+0x3210>
  405e50:	bl	4061d0 <wcrtomb@plt+0x3570>
  405e54:	cbz	x0, 405e04 <wcrtomb@plt+0x31a4>
  405e58:	str	x0, [x19, #16]
  405e5c:	mov	w8, #0x3                   	// #3
  405e60:	b	405e70 <wcrtomb@plt+0x3210>
  405e64:	mov	w0, wzr
  405e68:	b	405e08 <wcrtomb@plt+0x31a8>
  405e6c:	mov	w8, #0x5                   	// #5
  405e70:	str	w8, [x19]
  405e74:	b	405e04 <wcrtomb@plt+0x31a4>
  405e78:	ldr	x1, [x22, #1424]
  405e7c:	mov	w0, w8
  405e80:	bl	402a20 <ungetc@plt>
  405e84:	b	405e04 <wcrtomb@plt+0x31a4>
  405e88:	bl	402c20 <__uflow@plt>
  405e8c:	mov	w21, w0
  405e90:	cmp	w21, #0xa
  405e94:	b.eq	405c70 <wcrtomb@plt+0x3010>  // b.none
  405e98:	b	405c88 <wcrtomb@plt+0x3028>
  405e9c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405ea0:	add	x1, x1, #0x5bd
  405ea4:	mov	w2, #0x5                   	// #5
  405ea8:	bl	402b40 <dcgettext@plt>
  405eac:	bl	402d7c <wcrtomb@plt+0x11c>
  405eb0:	stp	x29, x30, [sp, #-48]!
  405eb4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  405eb8:	stp	x20, x19, [sp, #32]
  405ebc:	mov	w19, w0
  405ec0:	add	x1, x1, #0x75b
  405ec4:	mov	w2, #0x5                   	// #5
  405ec8:	mov	x0, xzr
  405ecc:	str	x21, [sp, #16]
  405ed0:	mov	x29, sp
  405ed4:	bl	402b40 <dcgettext@plt>
  405ed8:	mov	x20, x0
  405edc:	bl	4025c0 <strlen@plt>
  405ee0:	bl	416dd4 <wcrtomb@plt+0x14174>
  405ee4:	and	w4, w19, #0xff
  405ee8:	mov	w1, #0x1                   	// #1
  405eec:	mov	x2, #0xffffffffffffffff    	// #-1
  405ef0:	mov	x3, x20
  405ef4:	mov	x21, x0
  405ef8:	bl	4025d0 <__sprintf_chk@plt>
  405efc:	mov	x0, x21
  405f00:	bl	402d7c <wcrtomb@plt+0x11c>
  405f04:	stp	x29, x30, [sp, #-80]!
  405f08:	str	x25, [sp, #16]
  405f0c:	stp	x24, x23, [sp, #32]
  405f10:	stp	x22, x21, [sp, #48]
  405f14:	stp	x20, x19, [sp, #64]
  405f18:	mov	x29, sp
  405f1c:	bl	40c744 <wcrtomb@plt+0x9ae4>
  405f20:	mov	x19, x0
  405f24:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405f28:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405f2c:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405f30:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  405f34:	b	405f4c <wcrtomb@plt+0x32ec>
  405f38:	mov	w20, #0xffffffff            	// #-1
  405f3c:	bl	4029e0 <__ctype_b_loc@plt>
  405f40:	ldr	x8, [x0]
  405f44:	ldrh	w8, [x8, w20, sxtw #1]
  405f48:	tbz	w8, #0, 405fcc <wcrtomb@plt+0x336c>
  405f4c:	ldr	x8, [x22, #1408]
  405f50:	cbz	x8, 405f78 <wcrtomb@plt+0x3318>
  405f54:	ldr	x9, [x25, #1416]
  405f58:	cmp	x8, x9
  405f5c:	b.cs	405f38 <wcrtomb@plt+0x32d8>  // b.hs, b.nlast
  405f60:	add	x9, x8, #0x1
  405f64:	str	x9, [x22, #1408]
  405f68:	ldrb	w20, [x8]
  405f6c:	cmp	w20, #0xa
  405f70:	b.ne	405f3c <wcrtomb@plt+0x32dc>  // b.any
  405f74:	b	405fa8 <wcrtomb@plt+0x3348>
  405f78:	ldr	x0, [x23, #1424]
  405f7c:	cbz	x0, 405f38 <wcrtomb@plt+0x32d8>
  405f80:	ldrb	w8, [x0]
  405f84:	tbnz	w8, #4, 405f38 <wcrtomb@plt+0x32d8>
  405f88:	ldp	x8, x9, [x0, #8]
  405f8c:	cmp	x8, x9
  405f90:	b.cs	405fb8 <wcrtomb@plt+0x3358>  // b.hs, b.nlast
  405f94:	add	x9, x8, #0x1
  405f98:	str	x9, [x0, #8]
  405f9c:	ldrb	w20, [x8]
  405fa0:	cmp	w20, #0xa
  405fa4:	b.ne	405f3c <wcrtomb@plt+0x32dc>  // b.any
  405fa8:	ldr	x8, [x24, #1440]
  405fac:	add	x8, x8, #0x1
  405fb0:	str	x8, [x24, #1440]
  405fb4:	b	405f3c <wcrtomb@plt+0x32dc>
  405fb8:	bl	402c20 <__uflow@plt>
  405fbc:	mov	w20, w0
  405fc0:	cmp	w20, #0xa
  405fc4:	b.ne	405f3c <wcrtomb@plt+0x32dc>  // b.any
  405fc8:	b	405fa8 <wcrtomb@plt+0x3348>
  405fcc:	mov	x21, x0
  405fd0:	b	405fe0 <wcrtomb@plt+0x3380>
  405fd4:	ldr	x8, [x24, #1440]
  405fd8:	add	x8, x8, #0x1
  405fdc:	str	x8, [x24, #1440]
  405fe0:	cmn	w20, #0x1
  405fe4:	b.eq	406104 <wcrtomb@plt+0x34a4>  // b.none
  405fe8:	cmp	w20, #0xa
  405fec:	b.eq	4060a0 <wcrtomb@plt+0x3440>  // b.none
  405ff0:	ldr	x8, [x21]
  405ff4:	ldrh	w8, [x8, w20, sxtw #1]
  405ff8:	tbnz	w8, #0, 4060a0 <wcrtomb@plt+0x3440>
  405ffc:	cmp	w20, #0x23
  406000:	b.eq	4060bc <wcrtomb@plt+0x345c>  // b.none
  406004:	cmp	w20, #0x3b
  406008:	b.eq	4060bc <wcrtomb@plt+0x345c>  // b.none
  40600c:	cmp	w20, #0x7d
  406010:	b.eq	4060bc <wcrtomb@plt+0x345c>  // b.none
  406014:	mov	x0, x19
  406018:	mov	w1, w20
  40601c:	bl	40c850 <wcrtomb@plt+0x9bf0>
  406020:	ldr	x8, [x22, #1408]
  406024:	cbz	x8, 406050 <wcrtomb@plt+0x33f0>
  406028:	ldr	x9, [x25, #1416]
  40602c:	mov	w20, #0xffffffff            	// #-1
  406030:	cmp	x8, x9
  406034:	b.cs	405fe0 <wcrtomb@plt+0x3380>  // b.hs, b.nlast
  406038:	add	x9, x8, #0x1
  40603c:	str	x9, [x22, #1408]
  406040:	ldrb	w20, [x8]
  406044:	cmp	w20, #0xa
  406048:	b.ne	405fe0 <wcrtomb@plt+0x3380>  // b.any
  40604c:	b	405fd4 <wcrtomb@plt+0x3374>
  406050:	ldr	x0, [x23, #1424]
  406054:	mov	w20, #0xffffffff            	// #-1
  406058:	cbz	x0, 405fe0 <wcrtomb@plt+0x3380>
  40605c:	ldrb	w8, [x0]
  406060:	mov	w20, #0xffffffff            	// #-1
  406064:	tbnz	w8, #4, 405fe0 <wcrtomb@plt+0x3380>
  406068:	ldp	x8, x9, [x0, #8]
  40606c:	cmp	x8, x9
  406070:	b.cs	40608c <wcrtomb@plt+0x342c>  // b.hs, b.nlast
  406074:	add	x9, x8, #0x1
  406078:	str	x9, [x0, #8]
  40607c:	ldrb	w20, [x8]
  406080:	cmp	w20, #0xa
  406084:	b.ne	405fe0 <wcrtomb@plt+0x3380>  // b.any
  406088:	b	405fd4 <wcrtomb@plt+0x3374>
  40608c:	bl	402c20 <__uflow@plt>
  406090:	mov	w20, w0
  406094:	cmp	w20, #0xa
  406098:	b.ne	405fe0 <wcrtomb@plt+0x3380>  // b.any
  40609c:	b	405fd4 <wcrtomb@plt+0x3374>
  4060a0:	cmp	w20, #0xa
  4060a4:	b.ne	4060bc <wcrtomb@plt+0x345c>  // b.any
  4060a8:	ldr	x8, [x24, #1440]
  4060ac:	cbz	x8, 4060bc <wcrtomb@plt+0x345c>
  4060b0:	sub	x8, x8, #0x1
  4060b4:	mov	w20, #0xa                   	// #10
  4060b8:	str	x8, [x24, #1440]
  4060bc:	ldr	x8, [x22, #1408]
  4060c0:	cbz	x8, 4060f8 <wcrtomb@plt+0x3498>
  4060c4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4060c8:	ldr	x9, [x9, #1400]
  4060cc:	cmp	x8, x9
  4060d0:	b.ls	4060e8 <wcrtomb@plt+0x3488>  // b.plast
  4060d4:	sub	x9, x8, #0x1
  4060d8:	str	x9, [x22, #1408]
  4060dc:	ldurb	w8, [x8, #-1]
  4060e0:	cmp	w20, w8
  4060e4:	b.eq	406104 <wcrtomb@plt+0x34a4>  // b.none
  4060e8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4060ec:	add	x0, x0, #0x99d
  4060f0:	mov	w1, w20
  4060f4:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  4060f8:	ldr	x1, [x23, #1424]
  4060fc:	mov	w0, w20
  406100:	bl	402a20 <ungetc@plt>
  406104:	mov	x0, x19
  406108:	mov	w1, wzr
  40610c:	bl	40c850 <wcrtomb@plt+0x9bf0>
  406110:	mov	x0, x19
  406114:	bl	40c788 <wcrtomb@plt+0x9b28>
  406118:	bl	417098 <wcrtomb@plt+0x14438>
  40611c:	mov	x20, x0
  406120:	mov	x0, x19
  406124:	bl	40c904 <wcrtomb@plt+0x9ca4>
  406128:	mov	x0, x20
  40612c:	ldp	x20, x19, [sp, #64]
  406130:	ldp	x22, x21, [sp, #48]
  406134:	ldp	x24, x23, [sp, #32]
  406138:	ldr	x25, [sp, #16]
  40613c:	ldp	x29, x30, [sp], #80
  406140:	ret
  406144:	stp	x29, x30, [sp, #-16]!
  406148:	cmn	w0, #0x1
  40614c:	mov	x29, sp
  406150:	b.eq	4061a4 <wcrtomb@plt+0x3544>  // b.none
  406154:	mov	w8, w0
  406158:	cmp	w0, #0xa
  40615c:	b.ne	406174 <wcrtomb@plt+0x3514>  // b.any
  406160:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406164:	ldr	x10, [x9, #1440]
  406168:	cbz	x10, 406174 <wcrtomb@plt+0x3514>
  40616c:	sub	x10, x10, #0x1
  406170:	str	x10, [x9, #1440]
  406174:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406178:	ldr	x9, [x10, #1408]
  40617c:	cbz	x9, 4061ac <wcrtomb@plt+0x354c>
  406180:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406184:	ldr	x11, [x11, #1400]
  406188:	cmp	x9, x11
  40618c:	b.ls	4061c0 <wcrtomb@plt+0x3560>  // b.plast
  406190:	sub	x11, x9, #0x1
  406194:	str	x11, [x10, #1408]
  406198:	ldurb	w9, [x9, #-1]
  40619c:	cmp	w9, w8
  4061a0:	b.ne	4061c0 <wcrtomb@plt+0x3560>  // b.any
  4061a4:	ldp	x29, x30, [sp], #16
  4061a8:	ret
  4061ac:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4061b0:	ldr	x1, [x9, #1424]
  4061b4:	mov	w0, w8
  4061b8:	ldp	x29, x30, [sp], #16
  4061bc:	b	402a20 <ungetc@plt>
  4061c0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4061c4:	add	x0, x0, #0x99d
  4061c8:	mov	w1, w8
  4061cc:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  4061d0:	stp	x29, x30, [sp, #-80]!
  4061d4:	stp	x26, x25, [sp, #16]
  4061d8:	stp	x24, x23, [sp, #32]
  4061dc:	stp	x22, x21, [sp, #48]
  4061e0:	stp	x20, x19, [sp, #64]
  4061e4:	mov	x29, sp
  4061e8:	mov	w21, w0
  4061ec:	bl	4029e0 <__ctype_b_loc@plt>
  4061f0:	ldr	x8, [x0]
  4061f4:	and	w9, w21, #0xff
  4061f8:	ldrh	w8, [x8, w9, uxtw #1]
  4061fc:	tbnz	w8, #11, 406228 <wcrtomb@plt+0x35c8>
  406200:	mov	x19, xzr
  406204:	mov	w0, w21
  406208:	bl	406144 <wcrtomb@plt+0x34e4>
  40620c:	mov	x0, x19
  406210:	ldp	x20, x19, [sp, #64]
  406214:	ldp	x22, x21, [sp, #48]
  406218:	ldp	x24, x23, [sp, #32]
  40621c:	ldp	x26, x25, [sp, #16]
  406220:	ldp	x29, x30, [sp], #80
  406224:	ret
  406228:	mov	x20, x0
  40622c:	mov	x19, xzr
  406230:	mov	w22, #0xa                   	// #10
  406234:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406238:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40623c:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406240:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406244:	b	40625c <wcrtomb@plt+0x35fc>
  406248:	mov	w21, #0xffffffff            	// #-1
  40624c:	ldr	x8, [x20]
  406250:	and	w9, w21, #0xff
  406254:	ldrh	w8, [x8, w9, uxtw #1]
  406258:	tbz	w8, #11, 406204 <wcrtomb@plt+0x35a4>
  40625c:	ldr	x8, [x23, #1408]
  406260:	mul	x9, x19, x22
  406264:	add	x9, x9, w21, sxtw
  406268:	sub	x19, x9, #0x30
  40626c:	cbz	x8, 406294 <wcrtomb@plt+0x3634>
  406270:	ldr	x9, [x26, #1416]
  406274:	cmp	x8, x9
  406278:	b.cs	406248 <wcrtomb@plt+0x35e8>  // b.hs, b.nlast
  40627c:	add	x9, x8, #0x1
  406280:	str	x9, [x23, #1408]
  406284:	ldrb	w21, [x8]
  406288:	cmp	w21, #0xa
  40628c:	b.ne	40624c <wcrtomb@plt+0x35ec>  // b.any
  406290:	b	4062c4 <wcrtomb@plt+0x3664>
  406294:	ldr	x0, [x24, #1424]
  406298:	cbz	x0, 406248 <wcrtomb@plt+0x35e8>
  40629c:	ldrb	w8, [x0]
  4062a0:	tbnz	w8, #4, 406248 <wcrtomb@plt+0x35e8>
  4062a4:	ldp	x8, x9, [x0, #8]
  4062a8:	cmp	x8, x9
  4062ac:	b.cs	4062d4 <wcrtomb@plt+0x3674>  // b.hs, b.nlast
  4062b0:	add	x9, x8, #0x1
  4062b4:	str	x9, [x0, #8]
  4062b8:	ldrb	w21, [x8]
  4062bc:	cmp	w21, #0xa
  4062c0:	b.ne	40624c <wcrtomb@plt+0x35ec>  // b.any
  4062c4:	ldr	x8, [x25, #1440]
  4062c8:	add	x8, x8, #0x1
  4062cc:	str	x8, [x25, #1440]
  4062d0:	b	40624c <wcrtomb@plt+0x35ec>
  4062d4:	bl	402c20 <__uflow@plt>
  4062d8:	mov	w21, w0
  4062dc:	cmp	w21, #0xa
  4062e0:	b.ne	40624c <wcrtomb@plt+0x35ec>  // b.any
  4062e4:	b	4062c4 <wcrtomb@plt+0x3664>
  4062e8:	stp	x29, x30, [sp, #-64]!
  4062ec:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4062f0:	ldrb	w8, [x8, #1868]
  4062f4:	stp	x24, x23, [sp, #16]
  4062f8:	stp	x22, x21, [sp, #32]
  4062fc:	stp	x20, x19, [sp, #48]
  406300:	mov	x29, sp
  406304:	cbnz	w8, 406484 <wcrtomb@plt+0x3824>
  406308:	bl	40c744 <wcrtomb@plt+0x9ae4>
  40630c:	mov	x19, x0
  406310:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406314:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406318:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40631c:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406320:	b	406338 <wcrtomb@plt+0x36d8>
  406324:	mov	w20, #0xffffffff            	// #-1
  406328:	bl	4029e0 <__ctype_b_loc@plt>
  40632c:	ldr	x8, [x0]
  406330:	ldrh	w8, [x8, w20, sxtw #1]
  406334:	tbz	w8, #0, 4063c4 <wcrtomb@plt+0x3764>
  406338:	ldr	x8, [x21, #1408]
  40633c:	cbz	x8, 406364 <wcrtomb@plt+0x3704>
  406340:	ldr	x9, [x24, #1416]
  406344:	cmp	x8, x9
  406348:	b.cs	406324 <wcrtomb@plt+0x36c4>  // b.hs, b.nlast
  40634c:	add	x9, x8, #0x1
  406350:	str	x9, [x21, #1408]
  406354:	ldrb	w20, [x8]
  406358:	cmp	w20, #0xa
  40635c:	b.ne	406328 <wcrtomb@plt+0x36c8>  // b.any
  406360:	b	406394 <wcrtomb@plt+0x3734>
  406364:	ldr	x0, [x22, #1424]
  406368:	cbz	x0, 406324 <wcrtomb@plt+0x36c4>
  40636c:	ldrb	w8, [x0]
  406370:	tbnz	w8, #4, 406324 <wcrtomb@plt+0x36c4>
  406374:	ldp	x8, x9, [x0, #8]
  406378:	cmp	x8, x9
  40637c:	b.cs	4063a4 <wcrtomb@plt+0x3744>  // b.hs, b.nlast
  406380:	add	x9, x8, #0x1
  406384:	str	x9, [x0, #8]
  406388:	ldrb	w20, [x8]
  40638c:	cmp	w20, #0xa
  406390:	b.ne	406328 <wcrtomb@plt+0x36c8>  // b.any
  406394:	ldr	x8, [x23, #1440]
  406398:	add	x8, x8, #0x1
  40639c:	str	x8, [x23, #1440]
  4063a0:	b	406328 <wcrtomb@plt+0x36c8>
  4063a4:	bl	402c20 <__uflow@plt>
  4063a8:	mov	w20, w0
  4063ac:	cmp	w20, #0xa
  4063b0:	b.ne	406328 <wcrtomb@plt+0x36c8>  // b.any
  4063b4:	b	406394 <wcrtomb@plt+0x3734>
  4063b8:	ldr	x8, [x23, #1440]
  4063bc:	add	x8, x8, #0x1
  4063c0:	str	x8, [x23, #1440]
  4063c4:	cmn	w20, #0x1
  4063c8:	b.eq	406460 <wcrtomb@plt+0x3800>  // b.none
  4063cc:	cmp	w20, #0xa
  4063d0:	b.eq	406460 <wcrtomb@plt+0x3800>  // b.none
  4063d4:	mov	x0, x19
  4063d8:	mov	w1, w20
  4063dc:	bl	40c850 <wcrtomb@plt+0x9bf0>
  4063e0:	ldr	x8, [x21, #1408]
  4063e4:	cbz	x8, 406410 <wcrtomb@plt+0x37b0>
  4063e8:	ldr	x9, [x24, #1416]
  4063ec:	mov	w20, #0xffffffff            	// #-1
  4063f0:	cmp	x8, x9
  4063f4:	b.cs	4063c4 <wcrtomb@plt+0x3764>  // b.hs, b.nlast
  4063f8:	add	x9, x8, #0x1
  4063fc:	str	x9, [x21, #1408]
  406400:	ldrb	w20, [x8]
  406404:	cmp	w20, #0xa
  406408:	b.ne	4063c4 <wcrtomb@plt+0x3764>  // b.any
  40640c:	b	4063b8 <wcrtomb@plt+0x3758>
  406410:	ldr	x0, [x22, #1424]
  406414:	mov	w20, #0xffffffff            	// #-1
  406418:	cbz	x0, 4063c4 <wcrtomb@plt+0x3764>
  40641c:	ldrb	w8, [x0]
  406420:	mov	w20, #0xffffffff            	// #-1
  406424:	tbnz	w8, #4, 4063c4 <wcrtomb@plt+0x3764>
  406428:	ldp	x8, x9, [x0, #8]
  40642c:	cmp	x8, x9
  406430:	b.cs	40644c <wcrtomb@plt+0x37ec>  // b.hs, b.nlast
  406434:	add	x9, x8, #0x1
  406438:	str	x9, [x0, #8]
  40643c:	ldrb	w20, [x8]
  406440:	cmp	w20, #0xa
  406444:	b.ne	4063c4 <wcrtomb@plt+0x3764>  // b.any
  406448:	b	4063b8 <wcrtomb@plt+0x3758>
  40644c:	bl	402c20 <__uflow@plt>
  406450:	mov	w20, w0
  406454:	cmp	w20, #0xa
  406458:	b.eq	4063b8 <wcrtomb@plt+0x3758>  // b.none
  40645c:	b	4063c4 <wcrtomb@plt+0x3764>
  406460:	mov	x0, x19
  406464:	mov	w1, wzr
  406468:	bl	40c850 <wcrtomb@plt+0x9bf0>
  40646c:	mov	x0, x19
  406470:	ldp	x20, x19, [sp, #48]
  406474:	ldp	x22, x21, [sp, #32]
  406478:	ldp	x24, x23, [sp, #16]
  40647c:	ldp	x29, x30, [sp], #64
  406480:	ret
  406484:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406488:	add	x1, x1, #0x7be
  40648c:	mov	w2, #0x5                   	// #5
  406490:	mov	x0, xzr
  406494:	bl	402b40 <dcgettext@plt>
  406498:	bl	402d7c <wcrtomb@plt+0x11c>
  40649c:	stp	x29, x30, [sp, #-80]!
  4064a0:	stp	x26, x25, [sp, #16]
  4064a4:	stp	x24, x23, [sp, #32]
  4064a8:	stp	x22, x21, [sp, #48]
  4064ac:	stp	x20, x19, [sp, #64]
  4064b0:	mov	x29, sp
  4064b4:	mov	w21, w2
  4064b8:	mov	x22, x1
  4064bc:	mov	x20, x0
  4064c0:	bl	4062e8 <wcrtomb@plt+0x3688>
  4064c4:	mov	x19, x0
  4064c8:	bl	40c788 <wcrtomb@plt+0x9b28>
  4064cc:	ldrb	w8, [x0]
  4064d0:	cbz	w8, 406660 <wcrtomb@plt+0x3a00>
  4064d4:	ldr	x24, [x20]
  4064d8:	mov	x23, x0
  4064dc:	cbz	x24, 4064f8 <wcrtomb@plt+0x3898>
  4064e0:	ldr	x0, [x24]
  4064e4:	mov	x1, x23
  4064e8:	bl	4029d0 <strcmp@plt>
  4064ec:	cbz	w0, 40650c <wcrtomb@plt+0x38ac>
  4064f0:	ldr	x24, [x24, #24]
  4064f4:	cbnz	x24, 4064e0 <wcrtomb@plt+0x3880>
  4064f8:	mov	w25, wzr
  4064fc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406500:	ldr	w8, [x8, #2264]
  406504:	cbnz	w8, 40656c <wcrtomb@plt+0x390c>
  406508:	b	40651c <wcrtomb@plt+0x38bc>
  40650c:	mov	w25, #0x1                   	// #1
  406510:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406514:	ldr	w8, [x8, #2264]
  406518:	cbnz	w8, 40656c <wcrtomb@plt+0x390c>
  40651c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406520:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406524:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406528:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40652c:	ldr	x8, [x8, #1280]
  406530:	ldr	x9, [x9, #1272]
  406534:	ldr	x10, [x10, #1248]
  406538:	ldr	x0, [x11, #912]
  40653c:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406540:	add	x11, x11, #0x560
  406544:	stp	x8, x9, [x11]
  406548:	str	x10, [x11, #16]
  40654c:	cbz	x0, 40656c <wcrtomb@plt+0x390c>
  406550:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406554:	add	x26, x26, #0x390
  406558:	mov	x1, x23
  40655c:	bl	4029d0 <strcmp@plt>
  406560:	cbz	w0, 40662c <wcrtomb@plt+0x39cc>
  406564:	ldr	x0, [x26, #40]!
  406568:	cbnz	x0, 406558 <wcrtomb@plt+0x38f8>
  40656c:	tbnz	w25, #0, 40663c <wcrtomb@plt+0x39dc>
  406570:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406574:	add	x8, x8, #0x5c8
  406578:	ldp	x8, x9, [x8]
  40657c:	sub	x9, x9, x8
  406580:	cmp	x9, #0x1f
  406584:	b.hi	4065a0 <wcrtomb@plt+0x3940>  // b.pmore
  406588:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40658c:	add	x24, x24, #0x5b0
  406590:	mov	w1, #0x20                  	// #32
  406594:	mov	x0, x24
  406598:	bl	4172f8 <_obstack_newchunk@@Base>
  40659c:	ldr	x8, [x24, #24]
  4065a0:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4065a4:	add	x9, x9, #0x5c0
  4065a8:	ldr	x24, [x9]
  4065ac:	add	x8, x8, #0x20
  4065b0:	str	x8, [x9, #8]
  4065b4:	cmp	x8, x24
  4065b8:	b.ne	4065cc <wcrtomb@plt+0x396c>  // b.any
  4065bc:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4065c0:	ldrb	w10, [x9, #1536]
  4065c4:	orr	w10, w10, #0x2
  4065c8:	strb	w10, [x9, #1536]
  4065cc:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4065d0:	add	x9, x9, #0x5b8
  4065d4:	ldr	x10, [x9, #40]
  4065d8:	ldr	x11, [x9]
  4065dc:	ldr	x12, [x9, #24]
  4065e0:	mov	x0, x23
  4065e4:	add	x8, x10, x8
  4065e8:	bic	x8, x8, x10
  4065ec:	sub	x13, x12, x11
  4065f0:	sub	x10, x8, x11
  4065f4:	cmp	x10, x13
  4065f8:	csel	x8, x12, x8, hi  // hi = pmore
  4065fc:	stp	x8, x8, [x9, #8]
  406600:	bl	417098 <wcrtomb@plt+0x14438>
  406604:	mov	x1, x22
  406608:	mov	w2, w21
  40660c:	str	x0, [x24]
  406610:	bl	40bcf4 <wcrtomb@plt+0x9094>
  406614:	str	x0, [x24, #16]
  406618:	strb	wzr, [x24, #8]
  40661c:	ldr	x8, [x20]
  406620:	str	x8, [x24, #24]
  406624:	str	x24, [x20]
  406628:	b	40663c <wcrtomb@plt+0x39dc>
  40662c:	ldr	x8, [x26, #32]
  406630:	mov	x24, x26
  406634:	ldr	x8, [x8]
  406638:	str	x8, [x26, #16]
  40663c:	mov	x0, x19
  406640:	bl	40c904 <wcrtomb@plt+0x9ca4>
  406644:	mov	x0, x24
  406648:	ldp	x20, x19, [sp, #64]
  40664c:	ldp	x22, x21, [sp, #48]
  406650:	ldp	x24, x23, [sp, #32]
  406654:	ldp	x26, x25, [sp, #16]
  406658:	ldp	x29, x30, [sp], #80
  40665c:	ret
  406660:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406664:	add	x1, x1, #0x7e6
  406668:	mov	w2, #0x5                   	// #5
  40666c:	mov	x0, xzr
  406670:	bl	402b40 <dcgettext@plt>
  406674:	bl	402d7c <wcrtomb@plt+0x11c>
  406678:	sub	sp, sp, #0x80
  40667c:	stp	x24, x23, [sp, #80]
  406680:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406684:	ldr	w8, [x24, #2260]
  406688:	stp	x29, x30, [sp, #32]
  40668c:	stp	x20, x19, [sp, #112]
  406690:	add	x29, sp, #0x20
  406694:	mov	w20, w0
  406698:	cmp	w8, #0x1
  40669c:	stp	x28, x27, [sp, #48]
  4066a0:	stp	x26, x25, [sp, #64]
  4066a4:	stp	x22, x21, [sp, #96]
  4066a8:	str	w1, [sp, #16]
  4066ac:	stur	xzr, [x29, #-8]
  4066b0:	b.eq	4066c4 <wcrtomb@plt+0x3a64>  // b.none
  4066b4:	sub	x1, x29, #0x8
  4066b8:	mov	w0, w20
  4066bc:	bl	40ab60 <wcrtomb@plt+0x7f00>
  4066c0:	cbnz	w0, 406c30 <wcrtomb@plt+0x3fd0>
  4066c4:	stur	xzr, [x29, #-8]
  4066c8:	bl	40c744 <wcrtomb@plt+0x9ae4>
  4066cc:	ldr	w8, [sp, #16]
  4066d0:	adrp	x27, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4066d4:	mov	x19, x0
  4066d8:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4066dc:	cmp	w8, #0x0
  4066e0:	cset	w8, eq  // eq = none
  4066e4:	cmp	w20, #0x26
  4066e8:	cset	w9, eq  // eq = none
  4066ec:	and	w8, w8, w9
  4066f0:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4066f4:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4066f8:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4066fc:	eor	w8, w8, #0x1
  406700:	add	x27, x27, #0x45a
  406704:	stur	w20, [x29, #-12]
  406708:	str	w8, [sp, #12]
  40670c:	b	40672c <wcrtomb@plt+0x3acc>
  406710:	ldr	x8, [x26, #1440]
  406714:	mov	w22, #0xa                   	// #10
  406718:	add	x8, x8, #0x1
  40671c:	str	x8, [x26, #1440]
  406720:	mov	x0, x19
  406724:	mov	w1, w22
  406728:	bl	40c850 <wcrtomb@plt+0x9bf0>
  40672c:	ldr	x8, [x23, #1408]
  406730:	cbz	x8, 406758 <wcrtomb@plt+0x3af8>
  406734:	ldr	x9, [x28, #1416]
  406738:	cmp	x8, x9
  40673c:	b.cs	406bec <wcrtomb@plt+0x3f8c>  // b.hs, b.nlast
  406740:	add	x9, x8, #0x1
  406744:	str	x9, [x23, #1408]
  406748:	ldrb	w22, [x8]
  40674c:	cmn	w22, #0x1
  406750:	b.ne	406788 <wcrtomb@plt+0x3b28>  // b.any
  406754:	b	406bec <wcrtomb@plt+0x3f8c>
  406758:	ldr	x0, [x25, #1424]
  40675c:	cbz	x0, 406bec <wcrtomb@plt+0x3f8c>
  406760:	ldrb	w8, [x0]
  406764:	tbnz	w8, #4, 406bec <wcrtomb@plt+0x3f8c>
  406768:	ldp	x8, x9, [x0, #8]
  40676c:	cmp	x8, x9
  406770:	b.cs	406b3c <wcrtomb@plt+0x3edc>  // b.hs, b.nlast
  406774:	add	x9, x8, #0x1
  406778:	str	x9, [x0, #8]
  40677c:	ldrb	w22, [x8]
  406780:	cmn	w22, #0x1
  406784:	b.eq	406bec <wcrtomb@plt+0x3f8c>  // b.none
  406788:	cmp	w22, #0xa
  40678c:	b.eq	406c1c <wcrtomb@plt+0x3fbc>  // b.none
  406790:	ldr	w8, [x24, #2260]
  406794:	cmp	w8, #0x1
  406798:	b.eq	4067ac <wcrtomb@plt+0x3b4c>  // b.none
  40679c:	sub	x1, x29, #0x8
  4067a0:	mov	w0, w22
  4067a4:	bl	40ab60 <wcrtomb@plt+0x7f00>
  4067a8:	cbnz	w0, 406720 <wcrtomb@plt+0x3ac0>
  4067ac:	ldur	w8, [x29, #-12]
  4067b0:	cmp	w22, w8
  4067b4:	b.eq	406bf8 <wcrtomb@plt+0x3f98>  // b.none
  4067b8:	cmp	w22, #0x5c
  4067bc:	b.ne	4067ec <wcrtomb@plt+0x3b8c>  // b.any
  4067c0:	ldr	x8, [x23, #1408]
  4067c4:	cbz	x8, 406834 <wcrtomb@plt+0x3bd4>
  4067c8:	ldr	x9, [x28, #1416]
  4067cc:	cmp	x8, x9
  4067d0:	b.cs	406bec <wcrtomb@plt+0x3f8c>  // b.hs, b.nlast
  4067d4:	add	x9, x8, #0x1
  4067d8:	str	x9, [x23, #1408]
  4067dc:	ldrb	w0, [x8]
  4067e0:	cmp	w0, #0xa
  4067e4:	b.ne	406864 <wcrtomb@plt+0x3c04>  // b.any
  4067e8:	b	406710 <wcrtomb@plt+0x3ab0>
  4067ec:	ldr	w8, [sp, #16]
  4067f0:	cbz	w8, 406720 <wcrtomb@plt+0x3ac0>
  4067f4:	cmp	w22, #0x5b
  4067f8:	b.ne	406720 <wcrtomb@plt+0x3ac0>  // b.any
  4067fc:	mov	w1, #0x5b                  	// #91
  406800:	mov	x0, x19
  406804:	bl	40c850 <wcrtomb@plt+0x9bf0>
  406808:	ldr	x8, [x23, #1408]
  40680c:	cbz	x8, 4068c4 <wcrtomb@plt+0x3c64>
  406810:	ldr	x9, [x28, #1416]
  406814:	cmp	x8, x9
  406818:	b.cs	4069d4 <wcrtomb@plt+0x3d74>  // b.hs, b.nlast
  40681c:	add	x9, x8, #0x1
  406820:	str	x9, [x23, #1408]
  406824:	ldrb	w22, [x8]
  406828:	cmp	w22, #0x5e
  40682c:	b.ne	406948 <wcrtomb@plt+0x3ce8>  // b.any
  406830:	b	4068f4 <wcrtomb@plt+0x3c94>
  406834:	ldr	x0, [x25, #1424]
  406838:	cbz	x0, 406bec <wcrtomb@plt+0x3f8c>
  40683c:	ldrb	w8, [x0]
  406840:	tbnz	w8, #4, 406bec <wcrtomb@plt+0x3f8c>
  406844:	ldp	x8, x9, [x0, #8]
  406848:	cmp	x8, x9
  40684c:	b.cs	406b50 <wcrtomb@plt+0x3ef0>  // b.hs, b.nlast
  406850:	add	x9, x8, #0x1
  406854:	str	x9, [x0, #8]
  406858:	ldrb	w0, [x8]
  40685c:	cmp	w0, #0xa
  406860:	b.eq	406710 <wcrtomb@plt+0x3ab0>  // b.none
  406864:	cmn	w0, #0x1
  406868:	b.eq	406bec <wcrtomb@plt+0x3f8c>  // b.none
  40686c:	ldr	w8, [sp, #16]
  406870:	mov	w22, #0xa                   	// #10
  406874:	cmp	w8, #0x0
  406878:	cset	w8, ne  // ne = any
  40687c:	cmp	w0, #0x6e
  406880:	cset	w9, eq  // eq = none
  406884:	cmp	w0, #0xa
  406888:	b.eq	406720 <wcrtomb@plt+0x3ac0>  // b.none
  40688c:	and	w8, w8, w9
  406890:	tbnz	w8, #0, 406720 <wcrtomb@plt+0x3ac0>
  406894:	ldur	w22, [x29, #-12]
  406898:	ldr	w9, [sp, #12]
  40689c:	cmp	w0, w22
  4068a0:	cset	w8, eq  // eq = none
  4068a4:	and	w8, w8, w9
  4068a8:	tbnz	w8, #0, 406720 <wcrtomb@plt+0x3ac0>
  4068ac:	mov	w8, #0x26                  	// #38
  4068b0:	csel	w22, w0, w8, ne  // ne = any
  4068b4:	mov	w1, #0x5c                  	// #92
  4068b8:	mov	x0, x19
  4068bc:	bl	40c850 <wcrtomb@plt+0x9bf0>
  4068c0:	b	406720 <wcrtomb@plt+0x3ac0>
  4068c4:	ldr	x0, [x25, #1424]
  4068c8:	cbz	x0, 4069d4 <wcrtomb@plt+0x3d74>
  4068cc:	ldrb	w8, [x0]
  4068d0:	tbnz	w8, #4, 4069d4 <wcrtomb@plt+0x3d74>
  4068d4:	ldp	x8, x9, [x0, #8]
  4068d8:	cmp	x8, x9
  4068dc:	b.cs	406b60 <wcrtomb@plt+0x3f00>  // b.hs, b.nlast
  4068e0:	add	x9, x8, #0x1
  4068e4:	str	x9, [x0, #8]
  4068e8:	ldrb	w22, [x8]
  4068ec:	cmp	w22, #0x5e
  4068f0:	b.ne	406948 <wcrtomb@plt+0x3ce8>  // b.any
  4068f4:	mov	w1, #0x5e                  	// #94
  4068f8:	mov	x0, x19
  4068fc:	bl	40c850 <wcrtomb@plt+0x9bf0>
  406900:	ldr	x8, [x23, #1408]
  406904:	cbz	x8, 406920 <wcrtomb@plt+0x3cc0>
  406908:	ldr	x9, [x28, #1416]
  40690c:	cmp	x8, x9
  406910:	b.cs	4069d4 <wcrtomb@plt+0x3d74>  // b.hs, b.nlast
  406914:	add	x9, x8, #0x1
  406918:	str	x9, [x23, #1408]
  40691c:	b	406944 <wcrtomb@plt+0x3ce4>
  406920:	ldr	x0, [x25, #1424]
  406924:	cbz	x0, 4069d4 <wcrtomb@plt+0x3d74>
  406928:	ldrb	w8, [x0]
  40692c:	tbnz	w8, #4, 4069d4 <wcrtomb@plt+0x3d74>
  406930:	ldp	x8, x9, [x0, #8]
  406934:	cmp	x8, x9
  406938:	b.cs	406b74 <wcrtomb@plt+0x3f14>  // b.hs, b.nlast
  40693c:	add	x9, x8, #0x1
  406940:	str	x9, [x0, #8]
  406944:	ldrb	w22, [x8]
  406948:	cmp	w22, #0xa
  40694c:	b.ne	406960 <wcrtomb@plt+0x3d00>  // b.any
  406950:	ldr	x8, [x26, #1440]
  406954:	add	x8, x8, #0x1
  406958:	str	x8, [x26, #1440]
  40695c:	b	4069d8 <wcrtomb@plt+0x3d78>
  406960:	cmp	w22, #0x5d
  406964:	b.ne	4069d8 <wcrtomb@plt+0x3d78>  // b.any
  406968:	mov	w1, #0x5d                  	// #93
  40696c:	mov	x0, x19
  406970:	bl	40c850 <wcrtomb@plt+0x9bf0>
  406974:	ldr	x8, [x23, #1408]
  406978:	cbz	x8, 4069a0 <wcrtomb@plt+0x3d40>
  40697c:	ldr	x9, [x28, #1416]
  406980:	cmp	x8, x9
  406984:	b.cs	4069d4 <wcrtomb@plt+0x3d74>  // b.hs, b.nlast
  406988:	add	x9, x8, #0x1
  40698c:	str	x9, [x23, #1408]
  406990:	ldrb	w22, [x8]
  406994:	cmp	w22, #0xa
  406998:	b.eq	406950 <wcrtomb@plt+0x3cf0>  // b.none
  40699c:	b	4069d8 <wcrtomb@plt+0x3d78>
  4069a0:	ldr	x0, [x25, #1424]
  4069a4:	cbz	x0, 4069d4 <wcrtomb@plt+0x3d74>
  4069a8:	ldrb	w8, [x0]
  4069ac:	tbnz	w8, #4, 4069d4 <wcrtomb@plt+0x3d74>
  4069b0:	ldp	x8, x9, [x0, #8]
  4069b4:	cmp	x8, x9
  4069b8:	b.cs	406b80 <wcrtomb@plt+0x3f20>  // b.hs, b.nlast
  4069bc:	add	x9, x8, #0x1
  4069c0:	str	x9, [x0, #8]
  4069c4:	ldrb	w22, [x8]
  4069c8:	cmp	w22, #0xa
  4069cc:	b.eq	406950 <wcrtomb@plt+0x3cf0>  // b.none
  4069d0:	b	4069d8 <wcrtomb@plt+0x3d78>
  4069d4:	mov	w22, #0xffffffff            	// #-1
  4069d8:	mov	w20, wzr
  4069dc:	b	4069ec <wcrtomb@plt+0x3d8c>
  4069e0:	ldr	x8, [x26, #1440]
  4069e4:	add	x8, x8, #0x1
  4069e8:	str	x8, [x26, #1440]
  4069ec:	ldr	w8, [x24, #2260]
  4069f0:	cmp	w8, #0x1
  4069f4:	b.ne	406a40 <wcrtomb@plt+0x3de0>  // b.any
  4069f8:	mov	w0, wzr
  4069fc:	sub	w8, w22, #0x2e
  406a00:	cmp	w8, #0x2f
  406a04:	b.hi	406a58 <wcrtomb@plt+0x3df8>  // b.pmore
  406a08:	adr	x9, 406a18 <wcrtomb@plt+0x3db8>
  406a0c:	ldrb	w10, [x27, x8]
  406a10:	add	x9, x9, x10, lsl #2
  406a14:	br	x9
  406a18:	cbnz	w0, 406aa8 <wcrtomb@plt+0x3e48>
  406a1c:	cmp	w20, #0x1
  406a20:	b.eq	406a94 <wcrtomb@plt+0x3e34>  // b.none
  406a24:	cmp	w20, #0x2
  406a28:	b.ne	406aa4 <wcrtomb@plt+0x3e44>  // b.any
  406a2c:	cmp	w22, w21
  406a30:	b.ne	406aa0 <wcrtomb@plt+0x3e40>  // b.any
  406a34:	mov	w20, #0x3                   	// #3
  406a38:	mov	w21, w22
  406a3c:	b	406aa8 <wcrtomb@plt+0x3e48>
  406a40:	sub	x1, x29, #0x8
  406a44:	mov	w0, w22
  406a48:	bl	40ab60 <wcrtomb@plt+0x7f00>
  406a4c:	sub	w8, w22, #0x2e
  406a50:	cmp	w8, #0x2f
  406a54:	b.ls	406a08 <wcrtomb@plt+0x3da8>  // b.plast
  406a58:	cmn	w22, #0x1
  406a5c:	b.eq	406bec <wcrtomb@plt+0x3f8c>  // b.none
  406a60:	cmp	w22, #0xa
  406a64:	b.ne	406aa4 <wcrtomb@plt+0x3e44>  // b.any
  406a68:	b	406b94 <wcrtomb@plt+0x3f34>
  406a6c:	cbnz	w0, 406aa8 <wcrtomb@plt+0x3e48>
  406a70:	cmp	w20, #0x0
  406a74:	csinc	w20, w20, wzr, ne  // ne = any
  406a78:	b	406aa8 <wcrtomb@plt+0x3e48>
  406a7c:	cbnz	w0, 406aa8 <wcrtomb@plt+0x3e48>
  406a80:	cmp	w20, #0x2
  406a84:	b.cc	406b34 <wcrtomb@plt+0x3ed4>  // b.lo, b.ul, b.last
  406a88:	cmp	w20, #0x3
  406a8c:	csel	w20, wzr, w20, eq  // eq = none
  406a90:	b	406aa4 <wcrtomb@plt+0x3e44>
  406a94:	mov	w20, #0x2                   	// #2
  406a98:	mov	w21, w22
  406a9c:	b	406aa8 <wcrtomb@plt+0x3e48>
  406aa0:	mov	w20, #0x2                   	// #2
  406aa4:	and	w20, w20, #0xfffffffe
  406aa8:	mov	x0, x19
  406aac:	mov	w1, w22
  406ab0:	bl	40c850 <wcrtomb@plt+0x9bf0>
  406ab4:	ldr	x8, [x23, #1408]
  406ab8:	cbz	x8, 406ae4 <wcrtomb@plt+0x3e84>
  406abc:	ldr	x9, [x28, #1416]
  406ac0:	mov	w22, #0xffffffff            	// #-1
  406ac4:	cmp	x8, x9
  406ac8:	b.cs	4069ec <wcrtomb@plt+0x3d8c>  // b.hs, b.nlast
  406acc:	add	x9, x8, #0x1
  406ad0:	str	x9, [x23, #1408]
  406ad4:	ldrb	w22, [x8]
  406ad8:	cmp	w22, #0xa
  406adc:	b.ne	4069ec <wcrtomb@plt+0x3d8c>  // b.any
  406ae0:	b	4069e0 <wcrtomb@plt+0x3d80>
  406ae4:	ldr	x0, [x25, #1424]
  406ae8:	mov	w22, #0xffffffff            	// #-1
  406aec:	cbz	x0, 4069ec <wcrtomb@plt+0x3d8c>
  406af0:	ldrb	w8, [x0]
  406af4:	mov	w22, #0xffffffff            	// #-1
  406af8:	tbnz	w8, #4, 4069ec <wcrtomb@plt+0x3d8c>
  406afc:	ldp	x8, x9, [x0, #8]
  406b00:	cmp	x8, x9
  406b04:	b.cs	406b20 <wcrtomb@plt+0x3ec0>  // b.hs, b.nlast
  406b08:	add	x9, x8, #0x1
  406b0c:	str	x9, [x0, #8]
  406b10:	ldrb	w22, [x8]
  406b14:	cmp	w22, #0xa
  406b18:	b.ne	4069ec <wcrtomb@plt+0x3d8c>  // b.any
  406b1c:	b	4069e0 <wcrtomb@plt+0x3d80>
  406b20:	bl	402c20 <__uflow@plt>
  406b24:	mov	w22, w0
  406b28:	cmp	w22, #0xa
  406b2c:	b.ne	4069ec <wcrtomb@plt+0x3d8c>  // b.any
  406b30:	b	4069e0 <wcrtomb@plt+0x3d80>
  406b34:	mov	w22, #0x5d                  	// #93
  406b38:	b	406720 <wcrtomb@plt+0x3ac0>
  406b3c:	bl	402c20 <__uflow@plt>
  406b40:	mov	w22, w0
  406b44:	cmn	w22, #0x1
  406b48:	b.ne	406788 <wcrtomb@plt+0x3b28>  // b.any
  406b4c:	b	406bec <wcrtomb@plt+0x3f8c>
  406b50:	bl	402c20 <__uflow@plt>
  406b54:	cmp	w0, #0xa
  406b58:	b.ne	406864 <wcrtomb@plt+0x3c04>  // b.any
  406b5c:	b	406710 <wcrtomb@plt+0x3ab0>
  406b60:	bl	402c20 <__uflow@plt>
  406b64:	mov	w22, w0
  406b68:	cmp	w22, #0x5e
  406b6c:	b.ne	406948 <wcrtomb@plt+0x3ce8>  // b.any
  406b70:	b	4068f4 <wcrtomb@plt+0x3c94>
  406b74:	bl	402c20 <__uflow@plt>
  406b78:	mov	w22, w0
  406b7c:	b	406948 <wcrtomb@plt+0x3ce8>
  406b80:	bl	402c20 <__uflow@plt>
  406b84:	mov	w22, w0
  406b88:	cmp	w22, #0xa
  406b8c:	b.eq	406950 <wcrtomb@plt+0x3cf0>  // b.none
  406b90:	b	4069d8 <wcrtomb@plt+0x3d78>
  406b94:	ldr	x8, [x26, #1440]
  406b98:	cbz	x8, 406ba4 <wcrtomb@plt+0x3f44>
  406b9c:	sub	x8, x8, #0x1
  406ba0:	str	x8, [x26, #1440]
  406ba4:	ldr	x8, [x23, #1408]
  406ba8:	cbz	x8, 406be0 <wcrtomb@plt+0x3f80>
  406bac:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406bb0:	ldr	x9, [x9, #1400]
  406bb4:	cmp	x8, x9
  406bb8:	b.ls	406bd0 <wcrtomb@plt+0x3f70>  // b.plast
  406bbc:	sub	x9, x8, #0x1
  406bc0:	str	x9, [x23, #1408]
  406bc4:	ldurb	w8, [x8, #-1]
  406bc8:	cmp	w8, #0xa
  406bcc:	b.eq	406bec <wcrtomb@plt+0x3f8c>  // b.none
  406bd0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406bd4:	add	x0, x0, #0x99d
  406bd8:	mov	w1, #0xa                   	// #10
  406bdc:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  406be0:	ldr	x1, [x25, #1424]
  406be4:	mov	w0, #0xa                   	// #10
  406be8:	bl	402a20 <ungetc@plt>
  406bec:	mov	x0, x19
  406bf0:	bl	40c904 <wcrtomb@plt+0x9ca4>
  406bf4:	mov	x19, xzr
  406bf8:	mov	x0, x19
  406bfc:	ldp	x20, x19, [sp, #112]
  406c00:	ldp	x22, x21, [sp, #96]
  406c04:	ldp	x24, x23, [sp, #80]
  406c08:	ldp	x26, x25, [sp, #64]
  406c0c:	ldp	x28, x27, [sp, #48]
  406c10:	ldp	x29, x30, [sp, #32]
  406c14:	add	sp, sp, #0x80
  406c18:	ret
  406c1c:	ldr	x8, [x26, #1440]
  406c20:	add	x8, x8, #0x1
  406c24:	str	x8, [x26, #1440]
  406c28:	cbnz	x8, 406b9c <wcrtomb@plt+0x3f3c>
  406c2c:	b	406ba4 <wcrtomb@plt+0x3f44>
  406c30:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406c34:	add	x0, x0, #0x6ea
  406c38:	bl	402d7c <wcrtomb@plt+0x11c>
  406c3c:	stp	x29, x30, [sp, #-48]!
  406c40:	str	x21, [sp, #16]
  406c44:	stp	x20, x19, [sp, #32]
  406c48:	mov	x29, sp
  406c4c:	mov	w20, w0
  406c50:	bl	4029e0 <__ctype_b_loc@plt>
  406c54:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406c58:	ldr	x8, [x21, #1272]
  406c5c:	and	w19, w20, #0xff
  406c60:	cmp	w19, #0x5c
  406c64:	ldp	x9, x10, [x8, #40]
  406c68:	b.eq	406ca0 <wcrtomb@plt+0x4040>  // b.none
  406c6c:	ldr	x11, [x0]
  406c70:	and	x12, x20, #0xff
  406c74:	ldrh	w11, [x11, x12, lsl #1]
  406c78:	tbz	w11, #14, 406ca0 <wcrtomb@plt+0x4040>
  406c7c:	cmp	x9, x10
  406c80:	b.cs	406d88 <wcrtomb@plt+0x4128>  // b.hs, b.nlast
  406c84:	add	x10, x9, #0x1
  406c88:	str	x10, [x8, #40]
  406c8c:	strb	w20, [x9]
  406c90:	ldp	x20, x19, [sp, #32]
  406c94:	ldr	x21, [sp, #16]
  406c98:	ldp	x29, x30, [sp], #48
  406c9c:	ret
  406ca0:	cmp	x9, x10
  406ca4:	b.cs	406da0 <wcrtomb@plt+0x4140>  // b.hs, b.nlast
  406ca8:	add	x10, x9, #0x1
  406cac:	mov	w11, #0x5c                  	// #92
  406cb0:	str	x10, [x8, #40]
  406cb4:	strb	w11, [x9]
  406cb8:	and	w9, w20, #0xff
  406cbc:	sub	w8, w9, #0x7
  406cc0:	cmp	w8, #0x6
  406cc4:	b.hi	406dbc <wcrtomb@plt+0x415c>  // b.pmore
  406cc8:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406ccc:	add	x9, x9, #0x9ee
  406cd0:	adr	x10, 406ce0 <wcrtomb@plt+0x4080>
  406cd4:	ldrb	w11, [x9, x8]
  406cd8:	add	x10, x10, x11, lsl #2
  406cdc:	br	x10
  406ce0:	ldr	x0, [x21, #1272]
  406ce4:	ldp	x8, x9, [x0, #40]
  406ce8:	cmp	x8, x9
  406cec:	b.cs	406e14 <wcrtomb@plt+0x41b4>  // b.hs, b.nlast
  406cf0:	add	x9, x8, #0x1
  406cf4:	mov	w10, #0x61                  	// #97
  406cf8:	b	406ddc <wcrtomb@plt+0x417c>
  406cfc:	ldr	x0, [x21, #1272]
  406d00:	ldp	x8, x9, [x0, #40]
  406d04:	cmp	x8, x9
  406d08:	b.cs	406e28 <wcrtomb@plt+0x41c8>  // b.hs, b.nlast
  406d0c:	add	x9, x8, #0x1
  406d10:	mov	w10, #0x74                  	// #116
  406d14:	b	406ddc <wcrtomb@plt+0x417c>
  406d18:	ldr	x0, [x21, #1272]
  406d1c:	ldp	x8, x9, [x0, #40]
  406d20:	cmp	x8, x9
  406d24:	b.cs	406e3c <wcrtomb@plt+0x41dc>  // b.hs, b.nlast
  406d28:	add	x9, x8, #0x1
  406d2c:	mov	w10, #0x6e                  	// #110
  406d30:	b	406ddc <wcrtomb@plt+0x417c>
  406d34:	ldr	x0, [x21, #1272]
  406d38:	ldp	x8, x9, [x0, #40]
  406d3c:	cmp	x8, x9
  406d40:	b.cs	406e50 <wcrtomb@plt+0x41f0>  // b.hs, b.nlast
  406d44:	add	x9, x8, #0x1
  406d48:	mov	w10, #0x76                  	// #118
  406d4c:	b	406ddc <wcrtomb@plt+0x417c>
  406d50:	ldr	x0, [x21, #1272]
  406d54:	ldp	x8, x9, [x0, #40]
  406d58:	cmp	x8, x9
  406d5c:	b.cs	406e64 <wcrtomb@plt+0x4204>  // b.hs, b.nlast
  406d60:	add	x9, x8, #0x1
  406d64:	mov	w10, #0x66                  	// #102
  406d68:	b	406ddc <wcrtomb@plt+0x417c>
  406d6c:	ldr	x0, [x21, #1272]
  406d70:	ldp	x8, x9, [x0, #40]
  406d74:	cmp	x8, x9
  406d78:	b.cs	406e78 <wcrtomb@plt+0x4218>  // b.hs, b.nlast
  406d7c:	add	x9, x8, #0x1
  406d80:	mov	w10, #0x72                  	// #114
  406d84:	b	406ddc <wcrtomb@plt+0x417c>
  406d88:	mov	x0, x8
  406d8c:	mov	w1, w19
  406d90:	ldp	x20, x19, [sp, #32]
  406d94:	ldr	x21, [sp, #16]
  406d98:	ldp	x29, x30, [sp], #48
  406d9c:	b	402960 <__overflow@plt>
  406da0:	mov	w1, #0x5c                  	// #92
  406da4:	mov	x0, x8
  406da8:	bl	402960 <__overflow@plt>
  406dac:	and	w9, w20, #0xff
  406db0:	sub	w8, w9, #0x7
  406db4:	cmp	w8, #0x6
  406db8:	b.ls	406cc8 <wcrtomb@plt+0x4068>  // b.plast
  406dbc:	cmp	w9, #0x5c
  406dc0:	b.ne	406df4 <wcrtomb@plt+0x4194>  // b.any
  406dc4:	ldr	x0, [x21, #1272]
  406dc8:	ldp	x8, x9, [x0, #40]
  406dcc:	cmp	x8, x9
  406dd0:	b.cs	406e8c <wcrtomb@plt+0x422c>  // b.hs, b.nlast
  406dd4:	add	x9, x8, #0x1
  406dd8:	mov	w10, #0x5c                  	// #92
  406ddc:	str	x9, [x0, #40]
  406de0:	strb	w10, [x8]
  406de4:	ldp	x20, x19, [sp, #32]
  406de8:	ldr	x21, [sp, #16]
  406dec:	ldp	x29, x30, [sp], #48
  406df0:	ret
  406df4:	mov	w2, w19
  406df8:	ldp	x20, x19, [sp, #32]
  406dfc:	ldr	x21, [sp, #16]
  406e00:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406e04:	add	x1, x1, #0xab3
  406e08:	mov	w0, #0x1                   	// #1
  406e0c:	ldp	x29, x30, [sp], #48
  406e10:	b	4027e0 <__printf_chk@plt>
  406e14:	mov	w1, #0x61                  	// #97
  406e18:	ldp	x20, x19, [sp, #32]
  406e1c:	ldr	x21, [sp, #16]
  406e20:	ldp	x29, x30, [sp], #48
  406e24:	b	402960 <__overflow@plt>
  406e28:	mov	w1, #0x74                  	// #116
  406e2c:	ldp	x20, x19, [sp, #32]
  406e30:	ldr	x21, [sp, #16]
  406e34:	ldp	x29, x30, [sp], #48
  406e38:	b	402960 <__overflow@plt>
  406e3c:	mov	w1, #0x6e                  	// #110
  406e40:	ldp	x20, x19, [sp, #32]
  406e44:	ldr	x21, [sp, #16]
  406e48:	ldp	x29, x30, [sp], #48
  406e4c:	b	402960 <__overflow@plt>
  406e50:	mov	w1, #0x76                  	// #118
  406e54:	ldp	x20, x19, [sp, #32]
  406e58:	ldr	x21, [sp, #16]
  406e5c:	ldp	x29, x30, [sp], #48
  406e60:	b	402960 <__overflow@plt>
  406e64:	mov	w1, #0x66                  	// #102
  406e68:	ldp	x20, x19, [sp, #32]
  406e6c:	ldr	x21, [sp, #16]
  406e70:	ldp	x29, x30, [sp], #48
  406e74:	b	402960 <__overflow@plt>
  406e78:	mov	w1, #0x72                  	// #114
  406e7c:	ldp	x20, x19, [sp, #32]
  406e80:	ldr	x21, [sp, #16]
  406e84:	ldp	x29, x30, [sp], #48
  406e88:	b	402960 <__overflow@plt>
  406e8c:	mov	w1, #0x5c                  	// #92
  406e90:	ldp	x20, x19, [sp, #32]
  406e94:	ldr	x21, [sp, #16]
  406e98:	ldp	x29, x30, [sp], #48
  406e9c:	b	402960 <__overflow@plt>
  406ea0:	stp	x29, x30, [sp, #-96]!
  406ea4:	stp	x28, x27, [sp, #16]
  406ea8:	stp	x26, x25, [sp, #32]
  406eac:	stp	x24, x23, [sp, #48]
  406eb0:	stp	x22, x21, [sp, #64]
  406eb4:	stp	x20, x19, [sp, #80]
  406eb8:	mov	x29, sp
  406ebc:	cbz	x0, 407040 <wcrtomb@plt+0x43e0>
  406ec0:	ldrb	w9, [x1, #21]
  406ec4:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406ec8:	ldr	w8, [x22, #1544]
  406ecc:	mov	x19, x1
  406ed0:	mov	x20, x0
  406ed4:	cmp	w9, #0x7d
  406ed8:	b.ne	406ee4 <wcrtomb@plt+0x4284>  // b.any
  406edc:	sub	w8, w8, #0x1
  406ee0:	str	w8, [x22, #1544]
  406ee4:	cmp	w8, #0x1
  406ee8:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  406eec:	b.lt	406f18 <wcrtomb@plt+0x42b8>  // b.tstop
  406ef0:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406ef4:	mov	w24, wzr
  406ef8:	add	x21, x21, #0xcf0
  406efc:	ldr	x1, [x23, #1272]
  406f00:	mov	x0, x21
  406f04:	bl	402b50 <fputs_unlocked@plt>
  406f08:	ldr	w8, [x22, #1544]
  406f0c:	add	w24, w24, #0x1
  406f10:	cmp	w24, w8
  406f14:	b.lt	406efc <wcrtomb@plt+0x429c>  // b.tstop
  406f18:	ldr	x0, [x19]
  406f1c:	bl	4077e4 <wcrtomb@plt+0x4b84>
  406f20:	ldr	x8, [x19, #8]
  406f24:	cbz	x8, 406f48 <wcrtomb@plt+0x42e8>
  406f28:	ldr	x0, [x23, #1272]
  406f2c:	ldp	x8, x9, [x0, #40]
  406f30:	cmp	x8, x9
  406f34:	b.cs	4075e8 <wcrtomb@plt+0x4988>  // b.hs, b.nlast
  406f38:	add	x9, x8, #0x1
  406f3c:	mov	w10, #0x2c                  	// #44
  406f40:	str	x9, [x0, #40]
  406f44:	strb	w10, [x8]
  406f48:	ldr	x0, [x19, #8]
  406f4c:	bl	4077e4 <wcrtomb@plt+0x4b84>
  406f50:	ldrb	w8, [x19, #20]
  406f54:	ldrb	w9, [x19, #21]
  406f58:	cmp	w8, #0x0
  406f5c:	cset	w8, ne  // ne = any
  406f60:	cmp	w9, #0x7b
  406f64:	cset	w9, eq  // eq = none
  406f68:	cmp	w8, w9
  406f6c:	b.eq	406f90 <wcrtomb@plt+0x4330>  // b.none
  406f70:	ldr	x0, [x23, #1272]
  406f74:	ldp	x8, x9, [x0, #40]
  406f78:	cmp	x8, x9
  406f7c:	b.cs	4075f4 <wcrtomb@plt+0x4994>  // b.hs, b.nlast
  406f80:	add	x9, x8, #0x1
  406f84:	mov	w10, #0x21                  	// #33
  406f88:	str	x9, [x0, #40]
  406f8c:	strb	w10, [x8]
  406f90:	ldr	x8, [x19]
  406f94:	cbnz	x8, 406fa0 <wcrtomb@plt+0x4340>
  406f98:	ldr	x8, [x19, #8]
  406f9c:	cbz	x8, 406fc0 <wcrtomb@plt+0x4360>
  406fa0:	ldr	x0, [x23, #1272]
  406fa4:	ldp	x8, x9, [x0, #40]
  406fa8:	cmp	x8, x9
  406fac:	b.cs	4075dc <wcrtomb@plt+0x497c>  // b.hs, b.nlast
  406fb0:	add	x9, x8, #0x1
  406fb4:	mov	w10, #0x20                  	// #32
  406fb8:	str	x9, [x0, #40]
  406fbc:	strb	w10, [x8]
  406fc0:	ldr	x0, [x23, #1272]
  406fc4:	ldrb	w1, [x19, #21]
  406fc8:	ldp	x8, x9, [x0, #40]
  406fcc:	cmp	x8, x9
  406fd0:	b.cs	407590 <wcrtomb@plt+0x4930>  // b.hs, b.nlast
  406fd4:	add	x9, x8, #0x1
  406fd8:	str	x9, [x0, #40]
  406fdc:	strb	w1, [x8]
  406fe0:	ldrb	w8, [x19, #21]
  406fe4:	sub	w8, w8, #0x23
  406fe8:	cmp	w8, #0x5a
  406fec:	b.hi	4075a4 <wcrtomb@plt+0x4944>  // b.pmore
  406ff0:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  406ff4:	add	x9, x9, #0x9f6
  406ff8:	adr	x10, 407008 <wcrtomb@plt+0x43a8>
  406ffc:	ldrh	w11, [x9, x8, lsl #1]
  407000:	add	x10, x10, x11, lsl #2
  407004:	br	x10
  407008:	ldr	x0, [x23, #1272]
  40700c:	ldp	x8, x9, [x0, #40]
  407010:	cmp	x8, x9
  407014:	b.cs	4075c4 <wcrtomb@plt+0x4964>  // b.hs, b.nlast
  407018:	add	x9, x8, #0x1
  40701c:	mov	w10, #0xa                   	// #10
  407020:	str	x9, [x0, #40]
  407024:	strb	w10, [x8]
  407028:	ldrb	w8, [x19, #21]
  40702c:	cmp	w8, #0x7b
  407030:	b.ne	407040 <wcrtomb@plt+0x43e0>  // b.any
  407034:	ldr	w8, [x22, #1544]
  407038:	add	w8, w8, #0x1
  40703c:	str	w8, [x22, #1544]
  407040:	ldp	x20, x19, [sp, #80]
  407044:	ldp	x22, x21, [sp, #64]
  407048:	ldp	x24, x23, [sp, #48]
  40704c:	ldp	x26, x25, [sp, #32]
  407050:	ldp	x28, x27, [sp, #16]
  407054:	ldp	x29, x30, [sp], #96
  407058:	ret
  40705c:	ldr	w2, [x19, #24]
  407060:	cmn	w2, #0x1
  407064:	b.eq	407008 <wcrtomb@plt+0x43a8>  // b.none
  407068:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40706c:	add	x1, x1, #0xdf7
  407070:	mov	w0, #0x1                   	// #1
  407074:	bl	4027e0 <__printf_chk@plt>
  407078:	b	407008 <wcrtomb@plt+0x43a8>
  40707c:	ldr	x8, [x19, #24]
  407080:	ldr	x9, [x20, #16]
  407084:	cmp	x8, x9
  407088:	b.cs	407008 <wcrtomb@plt+0x43a8>  // b.hs, b.nlast
  40708c:	ldr	x9, [x20]
  407090:	mov	w10, #0x28                  	// #40
  407094:	madd	x8, x8, x10, x9
  407098:	ldr	x2, [x8, #24]
  40709c:	cbz	x2, 407008 <wcrtomb@plt+0x43a8>
  4070a0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4070a4:	add	x1, x1, #0xa80
  4070a8:	b	407144 <wcrtomb@plt+0x44e4>
  4070ac:	ldr	x1, [x23, #1272]
  4070b0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4070b4:	add	x0, x0, #0xb3a
  4070b8:	bl	402b50 <fputs_unlocked@plt>
  4070bc:	ldr	x2, [x19, #32]
  4070c0:	cbz	x2, 407008 <wcrtomb@plt+0x43a8>
  4070c4:	ldr	x3, [x23, #1272]
  4070c8:	ldr	x0, [x19, #24]
  4070cc:	b	407104 <wcrtomb@plt+0x44a4>
  4070d0:	ldr	x8, [x19, #24]
  4070d4:	cbnz	x8, 407244 <wcrtomb@plt+0x45e4>
  4070d8:	b	407008 <wcrtomb@plt+0x43a8>
  4070dc:	ldr	x0, [x23, #1272]
  4070e0:	ldp	x8, x9, [x0, #40]
  4070e4:	cmp	x8, x9
  4070e8:	b.cs	407608 <wcrtomb@plt+0x49a8>  // b.hs, b.nlast
  4070ec:	add	x9, x8, #0x1
  4070f0:	mov	w10, #0x20                  	// #32
  4070f4:	str	x9, [x0, #40]
  4070f8:	strb	w10, [x8]
  4070fc:	ldp	x0, x2, [x19, #24]
  407100:	ldr	x3, [x23, #1272]
  407104:	mov	w1, #0x1                   	// #1
  407108:	bl	4025b0 <fwrite_unlocked@plt>
  40710c:	b	407008 <wcrtomb@plt+0x43a8>
  407110:	ldr	x0, [x23, #1272]
  407114:	ldp	x8, x9, [x0, #40]
  407118:	cmp	x8, x9
  40711c:	b.cs	407614 <wcrtomb@plt+0x49b4>  // b.hs, b.nlast
  407120:	add	x9, x8, #0x1
  407124:	mov	w10, #0x20                  	// #32
  407128:	str	x9, [x0, #40]
  40712c:	strb	w10, [x8]
  407130:	ldr	x0, [x19, #24]
  407134:	b	407248 <wcrtomb@plt+0x45e8>
  407138:	ldr	x2, [x19, #24]
  40713c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  407140:	add	x1, x1, #0xa81
  407144:	mov	w0, #0x1                   	// #1
  407148:	bl	4027e0 <__printf_chk@plt>
  40714c:	b	407008 <wcrtomb@plt+0x43a8>
  407150:	ldr	x0, [x23, #1272]
  407154:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407158:	ldr	w20, [x10, #2260]
  40715c:	ldp	x8, x9, [x0, #40]
  407160:	cmp	x8, x9
  407164:	b.cs	407620 <wcrtomb@plt+0x49c0>  // b.hs, b.nlast
  407168:	add	x9, x8, #0x1
  40716c:	mov	w10, #0x2f                  	// #47
  407170:	str	x9, [x0, #40]
  407174:	strb	w10, [x8]
  407178:	cmp	w20, #0x1
  40717c:	b.le	407630 <wcrtomb@plt+0x49d0>
  407180:	ldr	x8, [x19, #24]
  407184:	ldr	x0, [x8]
  407188:	ldr	x8, [x23, #1272]
  40718c:	cbz	x0, 4071b0 <wcrtomb@plt+0x4550>
  407190:	mov	w20, #0x2                   	// #2
  407194:	mov	x1, x8
  407198:	bl	402b50 <fputs_unlocked@plt>
  40719c:	ldr	x8, [x19, #24]
  4071a0:	ldr	x0, [x8, w20, uxtw #3]
  4071a4:	ldr	x8, [x23, #1272]
  4071a8:	add	w20, w20, #0x2
  4071ac:	cbnz	x0, 407194 <wcrtomb@plt+0x4534>
  4071b0:	ldp	x9, x10, [x8, #40]
  4071b4:	cmp	x9, x10
  4071b8:	b.cs	407710 <wcrtomb@plt+0x4ab0>  // b.hs, b.nlast
  4071bc:	add	x10, x9, #0x1
  4071c0:	mov	w11, #0x2f                  	// #47
  4071c4:	str	x10, [x8, #40]
  4071c8:	strb	w11, [x9]
  4071cc:	ldr	x8, [x19, #24]
  4071d0:	ldr	x9, [x8]
  4071d4:	cbz	x9, 4071fc <wcrtomb@plt+0x459c>
  4071d8:	mov	w20, #0x1                   	// #1
  4071dc:	ldr	x0, [x8, w20, uxtw #3]
  4071e0:	ldr	x1, [x23, #1272]
  4071e4:	bl	402b50 <fputs_unlocked@plt>
  4071e8:	ldr	x8, [x19, #24]
  4071ec:	add	w9, w20, #0x1
  4071f0:	add	w20, w20, #0x2
  4071f4:	ldr	x9, [x8, w9, uxtw #3]
  4071f8:	cbnz	x9, 4071dc <wcrtomb@plt+0x457c>
  4071fc:	ldr	x0, [x23, #1272]
  407200:	ldp	x8, x9, [x0, #40]
  407204:	cmp	x8, x9
  407208:	b.cs	4076f0 <wcrtomb@plt+0x4a90>  // b.hs, b.nlast
  40720c:	add	x9, x8, #0x1
  407210:	mov	w10, #0x2f                  	// #47
  407214:	str	x9, [x0, #40]
  407218:	strb	w10, [x8]
  40721c:	b	407008 <wcrtomb@plt+0x43a8>
  407220:	ldr	x0, [x23, #1272]
  407224:	ldp	x8, x9, [x0, #40]
  407228:	cmp	x8, x9
  40722c:	b.cs	4076e4 <wcrtomb@plt+0x4a84>  // b.hs, b.nlast
  407230:	add	x9, x8, #0x1
  407234:	mov	w10, #0x20                  	// #32
  407238:	str	x9, [x0, #40]
  40723c:	strb	w10, [x8]
  407240:	ldr	x8, [x19, #24]
  407244:	ldr	x0, [x8]
  407248:	ldr	x1, [x23, #1272]
  40724c:	bl	402b50 <fputs_unlocked@plt>
  407250:	b	407008 <wcrtomb@plt+0x43a8>
  407254:	ldr	x21, [x19, #24]
  407258:	cbz	x21, 407008 <wcrtomb@plt+0x43a8>
  40725c:	ldr	x0, [x21]
  407260:	bl	4079e0 <wcrtomb@plt+0x4d80>
  407264:	ldr	x24, [x21, #8]
  407268:	cbz	x24, 407438 <wcrtomb@plt+0x47d8>
  40726c:	adrp	x20, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407270:	mov	w28, wzr
  407274:	mov	w25, #0x26                  	// #38
  407278:	add	x20, x20, #0xb3c
  40727c:	mov	w26, #0x5c                  	// #92
  407280:	mov	w27, #0x45                  	// #69
  407284:	b	40729c <wcrtomb@plt+0x463c>
  407288:	mov	w0, #0x1                   	// #1
  40728c:	mov	x1, x20
  407290:	bl	4027e0 <__printf_chk@plt>
  407294:	ldr	x24, [x24, #24]
  407298:	cbz	x24, 407438 <wcrtomb@plt+0x47d8>
  40729c:	ldr	w8, [x24, #20]
  4072a0:	cmp	w8, w28
  4072a4:	b.eq	4073a8 <wcrtomb@plt+0x4748>  // b.none
  4072a8:	ldr	x0, [x23, #1272]
  4072ac:	ldp	x8, x9, [x0, #40]
  4072b0:	cmp	x8, x9
  4072b4:	b.cs	407370 <wcrtomb@plt+0x4710>  // b.hs, b.nlast
  4072b8:	add	x9, x8, #0x1
  4072bc:	str	x9, [x0, #40]
  4072c0:	strb	w26, [x8]
  4072c4:	ldr	w8, [x24, #20]
  4072c8:	cmp	w8, #0x2
  4072cc:	b.eq	407384 <wcrtomb@plt+0x4724>  // b.none
  4072d0:	cmp	w8, #0x1
  4072d4:	b.eq	4072fc <wcrtomb@plt+0x469c>  // b.none
  4072d8:	cbnz	w8, 40731c <wcrtomb@plt+0x46bc>
  4072dc:	ldr	x0, [x23, #1272]
  4072e0:	ldp	x8, x9, [x0, #40]
  4072e4:	cmp	x8, x9
  4072e8:	b.cs	4073fc <wcrtomb@plt+0x479c>  // b.hs, b.nlast
  4072ec:	add	x9, x8, #0x1
  4072f0:	str	x9, [x0, #40]
  4072f4:	strb	w27, [x8]
  4072f8:	b	4073a4 <wcrtomb@plt+0x4744>
  4072fc:	ldr	x0, [x23, #1272]
  407300:	ldp	x8, x9, [x0, #40]
  407304:	cmp	x8, x9
  407308:	b.cs	407408 <wcrtomb@plt+0x47a8>  // b.hs, b.nlast
  40730c:	add	x9, x8, #0x1
  407310:	str	x9, [x0, #40]
  407314:	mov	w9, #0x55                  	// #85
  407318:	b	4073a0 <wcrtomb@plt+0x4740>
  40731c:	and	w8, w8, #0xc
  407320:	cmp	w8, #0x8
  407324:	b.eq	407350 <wcrtomb@plt+0x46f0>  // b.none
  407328:	cmp	w8, #0x4
  40732c:	b.ne	4073a4 <wcrtomb@plt+0x4744>  // b.any
  407330:	ldr	x0, [x23, #1272]
  407334:	ldp	x8, x9, [x0, #40]
  407338:	cmp	x8, x9
  40733c:	b.cs	407420 <wcrtomb@plt+0x47c0>  // b.hs, b.nlast
  407340:	add	x9, x8, #0x1
  407344:	str	x9, [x0, #40]
  407348:	mov	w9, #0x75                  	// #117
  40734c:	b	4073a0 <wcrtomb@plt+0x4740>
  407350:	ldr	x0, [x23, #1272]
  407354:	ldp	x8, x9, [x0, #40]
  407358:	cmp	x8, x9
  40735c:	b.cs	40742c <wcrtomb@plt+0x47cc>  // b.hs, b.nlast
  407360:	add	x9, x8, #0x1
  407364:	str	x9, [x0, #40]
  407368:	mov	w9, #0x6c                  	// #108
  40736c:	b	4073a0 <wcrtomb@plt+0x4740>
  407370:	mov	w1, #0x5c                  	// #92
  407374:	bl	402960 <__overflow@plt>
  407378:	ldr	w8, [x24, #20]
  40737c:	cmp	w8, #0x2
  407380:	b.ne	4072d0 <wcrtomb@plt+0x4670>  // b.any
  407384:	ldr	x0, [x23, #1272]
  407388:	ldp	x8, x9, [x0, #40]
  40738c:	cmp	x8, x9
  407390:	b.cs	407414 <wcrtomb@plt+0x47b4>  // b.hs, b.nlast
  407394:	add	x9, x8, #0x1
  407398:	str	x9, [x0, #40]
  40739c:	mov	w9, #0x4c                  	// #76
  4073a0:	strb	w9, [x8]
  4073a4:	ldr	w28, [x24, #20]
  4073a8:	ldr	x2, [x24, #8]
  4073ac:	cbz	x2, 4073c0 <wcrtomb@plt+0x4760>
  4073b0:	ldr	x3, [x23, #1272]
  4073b4:	ldr	x0, [x24]
  4073b8:	mov	w1, #0x1                   	// #1
  4073bc:	bl	4025b0 <fwrite_unlocked@plt>
  4073c0:	ldr	w2, [x24, #16]
  4073c4:	cmn	w2, #0x1
  4073c8:	b.eq	407294 <wcrtomb@plt+0x4634>  // b.none
  4073cc:	cbnz	w2, 407288 <wcrtomb@plt+0x4628>
  4073d0:	ldr	x0, [x23, #1272]
  4073d4:	ldp	x8, x9, [x0, #40]
  4073d8:	cmp	x8, x9
  4073dc:	b.cs	4073f0 <wcrtomb@plt+0x4790>  // b.hs, b.nlast
  4073e0:	add	x9, x8, #0x1
  4073e4:	str	x9, [x0, #40]
  4073e8:	strb	w25, [x8]
  4073ec:	b	407294 <wcrtomb@plt+0x4634>
  4073f0:	mov	w1, #0x26                  	// #38
  4073f4:	bl	402960 <__overflow@plt>
  4073f8:	b	407294 <wcrtomb@plt+0x4634>
  4073fc:	mov	w1, #0x45                  	// #69
  407400:	bl	402960 <__overflow@plt>
  407404:	b	4073a4 <wcrtomb@plt+0x4744>
  407408:	mov	w1, #0x55                  	// #85
  40740c:	bl	402960 <__overflow@plt>
  407410:	b	4073a4 <wcrtomb@plt+0x4744>
  407414:	mov	w1, #0x4c                  	// #76
  407418:	bl	402960 <__overflow@plt>
  40741c:	b	4073a4 <wcrtomb@plt+0x4744>
  407420:	mov	w1, #0x75                  	// #117
  407424:	bl	402960 <__overflow@plt>
  407428:	b	4073a4 <wcrtomb@plt+0x4744>
  40742c:	mov	w1, #0x6c                  	// #108
  407430:	bl	402960 <__overflow@plt>
  407434:	b	4073a4 <wcrtomb@plt+0x4744>
  407438:	ldr	x0, [x23, #1272]
  40743c:	ldp	x8, x9, [x0, #40]
  407440:	cmp	x8, x9
  407444:	b.cs	4076fc <wcrtomb@plt+0x4a9c>  // b.hs, b.nlast
  407448:	add	x9, x8, #0x1
  40744c:	mov	w10, #0x2f                  	// #47
  407450:	str	x9, [x0, #40]
  407454:	strb	w10, [x8]
  407458:	ldr	x20, [x21]
  40745c:	cbz	x20, 4074b0 <wcrtomb@plt+0x4850>
  407460:	ldrb	w8, [x20, #64]
  407464:	tbz	w8, #1, 407488 <wcrtomb@plt+0x4828>
  407468:	ldr	x0, [x23, #1272]
  40746c:	ldp	x8, x9, [x0, #40]
  407470:	cmp	x8, x9
  407474:	b.cs	407784 <wcrtomb@plt+0x4b24>  // b.hs, b.nlast
  407478:	add	x9, x8, #0x1
  40747c:	mov	w10, #0x69                  	// #105
  407480:	str	x9, [x0, #40]
  407484:	strb	w10, [x8]
  407488:	ldrb	w8, [x20, #64]
  40748c:	tbz	w8, #2, 4074b0 <wcrtomb@plt+0x4850>
  407490:	ldr	x0, [x23, #1272]
  407494:	ldp	x8, x9, [x0, #40]
  407498:	cmp	x8, x9
  40749c:	b.cs	407798 <wcrtomb@plt+0x4b38>  // b.hs, b.nlast
  4074a0:	add	x9, x8, #0x1
  4074a4:	mov	w10, #0x6d                  	// #109
  4074a8:	str	x9, [x0, #40]
  4074ac:	strb	w10, [x8]
  4074b0:	ldrb	w8, [x21, #32]
  4074b4:	tbnz	w8, #0, 4074d0 <wcrtomb@plt+0x4870>
  4074b8:	ldrb	w8, [x21, #32]
  4074bc:	tbnz	w8, #3, 4074f8 <wcrtomb@plt+0x4898>
  4074c0:	ldrb	w8, [x21, #32]
  4074c4:	tst	w8, #0x6
  4074c8:	b.ne	407524 <wcrtomb@plt+0x48c4>  // b.any
  4074cc:	b	407544 <wcrtomb@plt+0x48e4>
  4074d0:	ldr	x0, [x23, #1272]
  4074d4:	ldp	x8, x9, [x0, #40]
  4074d8:	cmp	x8, x9
  4074dc:	b.cs	407758 <wcrtomb@plt+0x4af8>  // b.hs, b.nlast
  4074e0:	add	x9, x8, #0x1
  4074e4:	mov	w10, #0x67                  	// #103
  4074e8:	str	x9, [x0, #40]
  4074ec:	strb	w10, [x8]
  4074f0:	ldrb	w8, [x21, #32]
  4074f4:	tbz	w8, #3, 4074c0 <wcrtomb@plt+0x4860>
  4074f8:	ldr	x0, [x23, #1272]
  4074fc:	ldp	x8, x9, [x0, #40]
  407500:	cmp	x8, x9
  407504:	b.cs	40776c <wcrtomb@plt+0x4b0c>  // b.hs, b.nlast
  407508:	add	x9, x8, #0x1
  40750c:	mov	w10, #0x65                  	// #101
  407510:	str	x9, [x0, #40]
  407514:	strb	w10, [x8]
  407518:	ldrb	w8, [x21, #32]
  40751c:	tst	w8, #0x6
  407520:	b.eq	407544 <wcrtomb@plt+0x48e4>  // b.none
  407524:	ldr	x0, [x23, #1272]
  407528:	ldp	x8, x9, [x0, #40]
  40752c:	cmp	x8, x9
  407530:	b.cs	407738 <wcrtomb@plt+0x4ad8>  // b.hs, b.nlast
  407534:	add	x9, x8, #0x1
  407538:	mov	w10, #0x70                  	// #112
  40753c:	str	x9, [x0, #40]
  407540:	strb	w10, [x8]
  407544:	ldr	x2, [x21, #16]
  407548:	cbz	x2, 40755c <wcrtomb@plt+0x48fc>
  40754c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407550:	add	x1, x1, #0xadb
  407554:	mov	w0, #0x1                   	// #1
  407558:	bl	4027e0 <__printf_chk@plt>
  40755c:	ldr	x8, [x21, #24]
  407560:	cbz	x8, 407008 <wcrtomb@plt+0x43a8>
  407564:	ldr	x0, [x23, #1272]
  407568:	ldp	x8, x9, [x0, #40]
  40756c:	cmp	x8, x9
  407570:	b.cs	407744 <wcrtomb@plt+0x4ae4>  // b.hs, b.nlast
  407574:	add	x9, x8, #0x1
  407578:	mov	w10, #0x77                  	// #119
  40757c:	str	x9, [x0, #40]
  407580:	strb	w10, [x8]
  407584:	ldr	x8, [x21, #24]
  407588:	cbnz	x8, 407244 <wcrtomb@plt+0x45e4>
  40758c:	b	407008 <wcrtomb@plt+0x43a8>
  407590:	bl	402960 <__overflow@plt>
  407594:	ldrb	w8, [x19, #21]
  407598:	sub	w8, w8, #0x23
  40759c:	cmp	w8, #0x5a
  4075a0:	b.ls	406ff0 <wcrtomb@plt+0x4390>  // b.plast
  4075a4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4075a8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4075ac:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4075b0:	add	x0, x0, #0x997
  4075b4:	add	x1, x1, #0xae5
  4075b8:	add	x3, x3, #0xaf1
  4075bc:	mov	w2, #0x194                 	// #404
  4075c0:	bl	402bc0 <__assert_fail@plt>
  4075c4:	mov	w1, #0xa                   	// #10
  4075c8:	bl	402960 <__overflow@plt>
  4075cc:	ldrb	w8, [x19, #21]
  4075d0:	cmp	w8, #0x7b
  4075d4:	b.eq	407034 <wcrtomb@plt+0x43d4>  // b.none
  4075d8:	b	407040 <wcrtomb@plt+0x43e0>
  4075dc:	mov	w1, #0x20                  	// #32
  4075e0:	bl	402960 <__overflow@plt>
  4075e4:	b	406fc0 <wcrtomb@plt+0x4360>
  4075e8:	mov	w1, #0x2c                  	// #44
  4075ec:	bl	402960 <__overflow@plt>
  4075f0:	b	406f48 <wcrtomb@plt+0x42e8>
  4075f4:	mov	w1, #0x21                  	// #33
  4075f8:	bl	402960 <__overflow@plt>
  4075fc:	ldr	x8, [x19]
  407600:	cbnz	x8, 406fa0 <wcrtomb@plt+0x4340>
  407604:	b	406f98 <wcrtomb@plt+0x4338>
  407608:	mov	w1, #0x20                  	// #32
  40760c:	bl	402960 <__overflow@plt>
  407610:	b	4070fc <wcrtomb@plt+0x449c>
  407614:	mov	w1, #0x20                  	// #32
  407618:	bl	402960 <__overflow@plt>
  40761c:	b	407130 <wcrtomb@plt+0x44d0>
  407620:	mov	w1, #0x2f                  	// #47
  407624:	bl	402960 <__overflow@plt>
  407628:	cmp	w20, #0x1
  40762c:	b.gt	407180 <wcrtomb@plt+0x4520>
  407630:	mov	x20, xzr
  407634:	b	407650 <wcrtomb@plt+0x49f0>
  407638:	add	x9, x8, #0x1
  40763c:	str	x9, [x0, #40]
  407640:	strb	w20, [x8]
  407644:	add	x20, x20, #0x1
  407648:	cmp	x20, #0x100
  40764c:	b.eq	40767c <wcrtomb@plt+0x4a1c>  // b.none
  407650:	ldr	x8, [x19, #24]
  407654:	ldrb	w8, [x8, x20]
  407658:	cmp	w8, w20, uxtb
  40765c:	b.eq	407644 <wcrtomb@plt+0x49e4>  // b.none
  407660:	ldr	x0, [x23, #1272]
  407664:	ldp	x8, x9, [x0, #40]
  407668:	cmp	x8, x9
  40766c:	b.cc	407638 <wcrtomb@plt+0x49d8>  // b.lo, b.ul, b.last
  407670:	mov	w1, w20
  407674:	bl	402960 <__overflow@plt>
  407678:	b	407644 <wcrtomb@plt+0x49e4>
  40767c:	ldr	x0, [x23, #1272]
  407680:	ldp	x8, x9, [x0, #40]
  407684:	cmp	x8, x9
  407688:	b.cs	40772c <wcrtomb@plt+0x4acc>  // b.hs, b.nlast
  40768c:	add	x9, x8, #0x1
  407690:	mov	w10, #0x2f                  	// #47
  407694:	str	x9, [x0, #40]
  407698:	strb	w10, [x8]
  40769c:	mov	x20, xzr
  4076a0:	b	4076bc <wcrtomb@plt+0x4a5c>
  4076a4:	add	x9, x8, #0x1
  4076a8:	str	x9, [x0, #40]
  4076ac:	strb	w1, [x8]
  4076b0:	add	x20, x20, #0x1
  4076b4:	cmp	x20, #0x100
  4076b8:	b.eq	4071fc <wcrtomb@plt+0x459c>  // b.none
  4076bc:	ldr	x8, [x19, #24]
  4076c0:	ldrb	w1, [x8, x20]
  4076c4:	cmp	x20, x1
  4076c8:	b.eq	4076b0 <wcrtomb@plt+0x4a50>  // b.none
  4076cc:	ldr	x0, [x23, #1272]
  4076d0:	ldp	x8, x9, [x0, #40]
  4076d4:	cmp	x8, x9
  4076d8:	b.cc	4076a4 <wcrtomb@plt+0x4a44>  // b.lo, b.ul, b.last
  4076dc:	bl	402960 <__overflow@plt>
  4076e0:	b	4076b0 <wcrtomb@plt+0x4a50>
  4076e4:	mov	w1, #0x20                  	// #32
  4076e8:	bl	402960 <__overflow@plt>
  4076ec:	b	407240 <wcrtomb@plt+0x45e0>
  4076f0:	mov	w1, #0x2f                  	// #47
  4076f4:	bl	402960 <__overflow@plt>
  4076f8:	b	407008 <wcrtomb@plt+0x43a8>
  4076fc:	mov	w1, #0x2f                  	// #47
  407700:	bl	402960 <__overflow@plt>
  407704:	ldr	x20, [x21]
  407708:	cbnz	x20, 407460 <wcrtomb@plt+0x4800>
  40770c:	b	4074b0 <wcrtomb@plt+0x4850>
  407710:	mov	w1, #0x2f                  	// #47
  407714:	mov	x0, x8
  407718:	bl	402960 <__overflow@plt>
  40771c:	ldr	x8, [x19, #24]
  407720:	ldr	x9, [x8]
  407724:	cbnz	x9, 4071d8 <wcrtomb@plt+0x4578>
  407728:	b	4071fc <wcrtomb@plt+0x459c>
  40772c:	mov	w1, #0x2f                  	// #47
  407730:	bl	402960 <__overflow@plt>
  407734:	b	40769c <wcrtomb@plt+0x4a3c>
  407738:	mov	w1, #0x70                  	// #112
  40773c:	bl	402960 <__overflow@plt>
  407740:	b	407544 <wcrtomb@plt+0x48e4>
  407744:	mov	w1, #0x77                  	// #119
  407748:	bl	402960 <__overflow@plt>
  40774c:	ldr	x8, [x21, #24]
  407750:	cbnz	x8, 407244 <wcrtomb@plt+0x45e4>
  407754:	b	407008 <wcrtomb@plt+0x43a8>
  407758:	mov	w1, #0x67                  	// #103
  40775c:	bl	402960 <__overflow@plt>
  407760:	ldrb	w8, [x21, #32]
  407764:	tbz	w8, #3, 4074c0 <wcrtomb@plt+0x4860>
  407768:	b	4074f8 <wcrtomb@plt+0x4898>
  40776c:	mov	w1, #0x65                  	// #101
  407770:	bl	402960 <__overflow@plt>
  407774:	ldrb	w8, [x21, #32]
  407778:	tst	w8, #0x6
  40777c:	b.ne	407524 <wcrtomb@plt+0x48c4>  // b.any
  407780:	b	407544 <wcrtomb@plt+0x48e4>
  407784:	mov	w1, #0x69                  	// #105
  407788:	bl	402960 <__overflow@plt>
  40778c:	ldrb	w8, [x20, #64]
  407790:	tbnz	w8, #2, 407490 <wcrtomb@plt+0x4830>
  407794:	b	4074b0 <wcrtomb@plt+0x4850>
  407798:	mov	w1, #0x6d                  	// #109
  40779c:	bl	402960 <__overflow@plt>
  4077a0:	b	4074b0 <wcrtomb@plt+0x4850>
  4077a4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4077a8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4077ac:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4077b0:	add	x0, x0, #0x997
  4077b4:	add	x1, x1, #0xae5
  4077b8:	add	x3, x3, #0xaf1
  4077bc:	mov	w2, #0x123                 	// #291
  4077c0:	bl	402bc0 <__assert_fail@plt>
  4077c4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4077c8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4077cc:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4077d0:	add	x0, x0, #0x997
  4077d4:	add	x1, x1, #0xae5
  4077d8:	add	x3, x3, #0xaf1
  4077dc:	mov	w2, #0x17e                 	// #382
  4077e0:	bl	402bc0 <__assert_fail@plt>
  4077e4:	stp	x29, x30, [sp, #-32]!
  4077e8:	str	x19, [sp, #16]
  4077ec:	mov	x29, sp
  4077f0:	cbz	x0, 407930 <wcrtomb@plt+0x4cd0>
  4077f4:	ldr	w8, [x0]
  4077f8:	mov	x19, x0
  4077fc:	cmp	w8, #0x6
  407800:	b.hi	407930 <wcrtomb@plt+0x4cd0>  // b.pmore
  407804:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407808:	add	x9, x9, #0xaac
  40780c:	adr	x10, 40781c <wcrtomb@plt+0x4bbc>
  407810:	ldrb	w11, [x9, x8]
  407814:	add	x10, x10, x11, lsl #2
  407818:	br	x10
  40781c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407820:	ldr	x1, [x8, #1272]
  407824:	ldr	x19, [sp, #16]
  407828:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40782c:	add	x0, x0, #0xac6
  407830:	ldp	x29, x30, [sp], #32
  407834:	b	402b50 <fputs_unlocked@plt>
  407838:	ldr	x0, [x19, #24]
  40783c:	bl	4079e0 <wcrtomb@plt+0x4d80>
  407840:	ldr	x19, [x19, #24]
  407844:	cbz	x19, 407930 <wcrtomb@plt+0x4cd0>
  407848:	ldrb	w8, [x19, #64]
  40784c:	tbz	w8, #1, 407874 <wcrtomb@plt+0x4c14>
  407850:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407854:	ldr	x0, [x8, #1272]
  407858:	ldp	x8, x9, [x0, #40]
  40785c:	cmp	x8, x9
  407860:	b.cs	407944 <wcrtomb@plt+0x4ce4>  // b.hs, b.nlast
  407864:	add	x9, x8, #0x1
  407868:	mov	w10, #0x49                  	// #73
  40786c:	str	x9, [x0, #40]
  407870:	strb	w10, [x8]
  407874:	ldrb	w8, [x19, #64]
  407878:	tbz	w8, #2, 407930 <wcrtomb@plt+0x4cd0>
  40787c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407880:	ldr	x0, [x8, #1272]
  407884:	ldp	x8, x9, [x0, #40]
  407888:	cmp	x8, x9
  40788c:	b.cs	407958 <wcrtomb@plt+0x4cf8>  // b.hs, b.nlast
  407890:	add	x9, x8, #0x1
  407894:	mov	w10, #0x4d                  	// #77
  407898:	b	407928 <wcrtomb@plt+0x4cc8>
  40789c:	ldr	x2, [x19, #8]
  4078a0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4078a4:	add	x1, x1, #0xadb
  4078a8:	ldr	x19, [sp, #16]
  4078ac:	mov	w0, #0x1                   	// #1
  4078b0:	ldp	x29, x30, [sp], #32
  4078b4:	b	4027e0 <__printf_chk@plt>
  4078b8:	ldp	x2, x3, [x19, #8]
  4078bc:	ldr	x19, [sp, #16]
  4078c0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4078c4:	add	x1, x1, #0xad2
  4078c8:	mov	w0, #0x1                   	// #1
  4078cc:	ldp	x29, x30, [sp], #32
  4078d0:	b	4027e0 <__printf_chk@plt>
  4078d4:	ldr	x2, [x19, #16]
  4078d8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4078dc:	add	x1, x1, #0xada
  4078e0:	ldr	x19, [sp, #16]
  4078e4:	mov	w0, #0x1                   	// #1
  4078e8:	ldp	x29, x30, [sp], #32
  4078ec:	b	4027e0 <__printf_chk@plt>
  4078f0:	ldr	x2, [x19, #16]
  4078f4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4078f8:	add	x1, x1, #0xad5
  4078fc:	ldr	x19, [sp, #16]
  407900:	mov	w0, #0x1                   	// #1
  407904:	ldp	x29, x30, [sp], #32
  407908:	b	4027e0 <__printf_chk@plt>
  40790c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407910:	ldr	x0, [x8, #1272]
  407914:	ldp	x8, x9, [x0, #40]
  407918:	cmp	x8, x9
  40791c:	b.cs	40793c <wcrtomb@plt+0x4cdc>  // b.hs, b.nlast
  407920:	add	x9, x8, #0x1
  407924:	mov	w10, #0x24                  	// #36
  407928:	str	x9, [x0, #40]
  40792c:	strb	w10, [x8]
  407930:	ldr	x19, [sp, #16]
  407934:	ldp	x29, x30, [sp], #32
  407938:	ret
  40793c:	mov	w1, #0x24                  	// #36
  407940:	b	40795c <wcrtomb@plt+0x4cfc>
  407944:	mov	w1, #0x49                  	// #73
  407948:	bl	402960 <__overflow@plt>
  40794c:	ldrb	w8, [x19, #64]
  407950:	tbnz	w8, #2, 40787c <wcrtomb@plt+0x4c1c>
  407954:	b	407930 <wcrtomb@plt+0x4cd0>
  407958:	mov	w1, #0x4d                  	// #77
  40795c:	ldr	x19, [sp, #16]
  407960:	ldp	x29, x30, [sp], #32
  407964:	b	402960 <__overflow@plt>
  407968:	cbz	x0, 4079dc <wcrtomb@plt+0x4d7c>
  40796c:	stp	x29, x30, [sp, #-48]!
  407970:	stp	x20, x19, [sp, #32]
  407974:	mov	x19, x0
  407978:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40797c:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407980:	mov	w8, #0x1                   	// #1
  407984:	add	x0, x0, #0xab9
  407988:	stp	x22, x21, [sp, #16]
  40798c:	mov	x29, sp
  407990:	str	w8, [x20, #1544]
  407994:	bl	402980 <puts@plt>
  407998:	ldr	x8, [x19, #16]
  40799c:	cbz	x8, 4079cc <wcrtomb@plt+0x4d6c>
  4079a0:	mov	x21, xzr
  4079a4:	mov	x22, xzr
  4079a8:	ldr	x8, [x19]
  4079ac:	mov	x0, x19
  4079b0:	add	x1, x8, x21
  4079b4:	bl	406ea0 <wcrtomb@plt+0x4240>
  4079b8:	ldr	x8, [x19, #16]
  4079bc:	add	x22, x22, #0x1
  4079c0:	add	x21, x21, #0x28
  4079c4:	cmp	x22, x8
  4079c8:	b.cc	4079a8 <wcrtomb@plt+0x4d48>  // b.lo, b.ul, b.last
  4079cc:	str	wzr, [x20, #1544]
  4079d0:	ldp	x20, x19, [sp, #32]
  4079d4:	ldp	x22, x21, [sp, #16]
  4079d8:	ldp	x29, x30, [sp], #48
  4079dc:	ret
  4079e0:	stp	x29, x30, [sp, #-48]!
  4079e4:	stp	x22, x21, [sp, #16]
  4079e8:	stp	x20, x19, [sp, #32]
  4079ec:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4079f0:	ldr	x8, [x20, #1272]
  4079f4:	mov	x29, sp
  4079f8:	cbz	x0, 407a94 <wcrtomb@plt+0x4e34>
  4079fc:	ldp	x9, x10, [x8, #40]
  407a00:	mov	x19, x0
  407a04:	cmp	x9, x10
  407a08:	b.cs	407ab0 <wcrtomb@plt+0x4e50>  // b.hs, b.nlast
  407a0c:	add	x10, x9, #0x1
  407a10:	mov	w11, #0x2f                  	// #47
  407a14:	str	x10, [x8, #40]
  407a18:	strb	w11, [x9]
  407a1c:	ldr	x21, [x19, #72]
  407a20:	cbz	x21, 407a64 <wcrtomb@plt+0x4e04>
  407a24:	add	x22, x19, #0x5a
  407a28:	adrp	x19, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407a2c:	add	x19, x19, #0xae2
  407a30:	b	407a40 <wcrtomb@plt+0x4de0>
  407a34:	bl	406c3c <wcrtomb@plt+0x3fdc>
  407a38:	add	x22, x22, #0x1
  407a3c:	cbz	x21, 407a64 <wcrtomb@plt+0x4e04>
  407a40:	ldrb	w0, [x22]
  407a44:	sub	x21, x21, #0x1
  407a48:	cmp	w0, #0x2f
  407a4c:	b.ne	407a34 <wcrtomb@plt+0x4dd4>  // b.any
  407a50:	ldr	x1, [x20, #1272]
  407a54:	mov	x0, x19
  407a58:	bl	402b50 <fputs_unlocked@plt>
  407a5c:	add	x22, x22, #0x1
  407a60:	cbnz	x21, 407a40 <wcrtomb@plt+0x4de0>
  407a64:	ldr	x0, [x20, #1272]
  407a68:	ldp	x8, x9, [x0, #40]
  407a6c:	cmp	x8, x9
  407a70:	b.cs	407ac8 <wcrtomb@plt+0x4e68>  // b.hs, b.nlast
  407a74:	add	x9, x8, #0x1
  407a78:	mov	w10, #0x2f                  	// #47
  407a7c:	str	x9, [x0, #40]
  407a80:	strb	w10, [x8]
  407a84:	ldp	x20, x19, [sp, #32]
  407a88:	ldp	x22, x21, [sp, #16]
  407a8c:	ldp	x29, x30, [sp], #48
  407a90:	ret
  407a94:	ldp	x20, x19, [sp, #32]
  407a98:	ldp	x22, x21, [sp, #16]
  407a9c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407aa0:	add	x0, x0, #0xadf
  407aa4:	mov	x1, x8
  407aa8:	ldp	x29, x30, [sp], #48
  407aac:	b	402b50 <fputs_unlocked@plt>
  407ab0:	mov	w1, #0x2f                  	// #47
  407ab4:	mov	x0, x8
  407ab8:	bl	402960 <__overflow@plt>
  407abc:	ldr	x21, [x19, #72]
  407ac0:	cbnz	x21, 407a24 <wcrtomb@plt+0x4dc4>
  407ac4:	b	407a64 <wcrtomb@plt+0x4e04>
  407ac8:	ldp	x20, x19, [sp, #32]
  407acc:	ldp	x22, x21, [sp, #16]
  407ad0:	mov	w1, #0x2f                  	// #47
  407ad4:	ldp	x29, x30, [sp], #48
  407ad8:	b	402960 <__overflow@plt>
  407adc:	sub	sp, sp, #0x130
  407ae0:	stp	x20, x19, [sp, #288]
  407ae4:	mov	x19, x0
  407ae8:	mov	w0, #0x33                  	// #51
  407aec:	stp	x29, x30, [sp, #208]
  407af0:	stp	x28, x27, [sp, #224]
  407af4:	stp	x26, x25, [sp, #240]
  407af8:	stp	x24, x23, [sp, #256]
  407afc:	stp	x22, x21, [sp, #272]
  407b00:	add	x29, sp, #0xd0
  407b04:	mov	x20, x1
  407b08:	bl	416ff4 <wcrtomb@plt+0x14394>
  407b0c:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407b10:	ldr	q0, [x8, #2880]
  407b14:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407b18:	add	x23, x23, #0x670
  407b1c:	mov	w21, #0x1                   	// #1
  407b20:	stp	x0, x0, [x23]
  407b24:	mov	w0, #0x1                   	// #1
  407b28:	strb	w21, [x23, #32]
  407b2c:	str	q0, [x23, #16]
  407b30:	stur	xzr, [x23, #36]
  407b34:	bl	416ff4 <wcrtomb@plt+0x14394>
  407b38:	stp	x0, x0, [x23, #48]
  407b3c:	mov	w0, #0x1                   	// #1
  407b40:	stp	xzr, xzr, [x23, #64]
  407b44:	strb	w21, [x23, #80]
  407b48:	stur	xzr, [x23, #84]
  407b4c:	bl	416ff4 <wcrtomb@plt+0x14394>
  407b50:	stp	x0, x0, [x23, #96]
  407b54:	stp	xzr, xzr, [x23, #112]
  407b58:	strb	w21, [x23, #128]
  407b5c:	stur	xzr, [x23, #132]
  407b60:	strb	w21, [sp, #24]
  407b64:	cbz	x20, 407b78 <wcrtomb@plt+0x4f18>
  407b68:	ldr	x8, [x20]
  407b6c:	cbz	x8, 407b78 <wcrtomb@plt+0x4f18>
  407b70:	str	x20, [sp]
  407b74:	b	407b90 <wcrtomb@plt+0x4f30>
  407b78:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407b7c:	ldr	x8, [x8, #1880]
  407b80:	cbnz	x8, 407cc4 <wcrtomb@plt+0x5064>
  407b84:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407b88:	add	x8, x8, #0x438
  407b8c:	str	x8, [sp]
  407b90:	adrp	x8, 407000 <wcrtomb@plt+0x43a0>
  407b94:	adrp	x20, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407b98:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407b9c:	add	x8, x8, #0xcdc
  407ba0:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407ba4:	add	x20, x20, #0xccb
  407ba8:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407bac:	add	x21, x21, #0xcf3
  407bb0:	mov	w26, #0xa                   	// #10
  407bb4:	stp	xzr, xzr, [sp, #8]
  407bb8:	str	x8, [sp, #32]
  407bbc:	str	xzr, [sp, #184]
  407bc0:	b	407bf4 <wcrtomb@plt+0x4f94>
  407bc4:	ldr	x0, [x25, #1272]
  407bc8:	ldp	x8, x9, [x0, #40]
  407bcc:	cmp	x8, x9
  407bd0:	b.cs	407c74 <wcrtomb@plt+0x5014>  // b.hs, b.nlast
  407bd4:	add	x9, x8, #0x1
  407bd8:	str	x9, [x0, #40]
  407bdc:	strb	w26, [x8]
  407be0:	mov	x1, sp
  407be4:	mov	x0, x19
  407be8:	bl	407e3c <wcrtomb@plt+0x51dc>
  407bec:	cmn	w0, #0x1
  407bf0:	b.ne	407c88 <wcrtomb@plt+0x5028>  // b.any
  407bf4:	mov	x0, sp
  407bf8:	mov	x1, x19
  407bfc:	mov	w2, wzr
  407c00:	bl	407ce4 <wcrtomb@plt+0x5084>
  407c04:	tbz	w0, #0, 407c80 <wcrtomb@plt+0x5020>
  407c08:	ldrb	w8, [x24, #1872]
  407c0c:	cbz	w8, 407be0 <wcrtomb@plt+0x4f80>
  407c10:	ldr	x0, [sp, #184]
  407c14:	cbz	x0, 407c20 <wcrtomb@plt+0x4fc0>
  407c18:	bl	4026b0 <fileno@plt>
  407c1c:	cbz	w0, 407c28 <wcrtomb@plt+0x4fc8>
  407c20:	ldr	x2, [sp, #48]
  407c24:	b	407c30 <wcrtomb@plt+0x4fd0>
  407c28:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407c2c:	add	x2, x2, #0xce3
  407c30:	ldr	x3, [sp, #16]
  407c34:	mov	w0, #0x1                   	// #1
  407c38:	mov	x1, x20
  407c3c:	bl	4027e0 <__printf_chk@plt>
  407c40:	ldr	x1, [x25, #1272]
  407c44:	ldp	x27, x28, [x23]
  407c48:	ldr	x22, [x23, #16]
  407c4c:	mov	x0, x21
  407c50:	bl	402b50 <fputs_unlocked@plt>
  407c54:	cbz	x22, 407bc4 <wcrtomb@plt+0x4f64>
  407c58:	cmp	x28, #0x0
  407c5c:	csel	x28, x27, x28, eq  // eq = none
  407c60:	ldrb	w0, [x28], #1
  407c64:	sub	x22, x22, #0x1
  407c68:	bl	406c3c <wcrtomb@plt+0x3fdc>
  407c6c:	cbnz	x22, 407c60 <wcrtomb@plt+0x5000>
  407c70:	b	407bc4 <wcrtomb@plt+0x4f64>
  407c74:	mov	w1, #0xa                   	// #10
  407c78:	bl	402960 <__overflow@plt>
  407c7c:	b	407be0 <wcrtomb@plt+0x4f80>
  407c80:	mov	w22, wzr
  407c84:	b	407c8c <wcrtomb@plt+0x502c>
  407c88:	mov	w22, w0
  407c8c:	mov	x0, sp
  407c90:	bl	409f04 <wcrtomb@plt+0x72a4>
  407c94:	ldr	x8, [sp, #8]
  407c98:	ldp	x20, x19, [sp, #288]
  407c9c:	ldp	x24, x23, [sp, #256]
  407ca0:	ldp	x26, x25, [sp, #240]
  407ca4:	cmp	x8, #0x0
  407ca8:	mov	w8, #0x2                   	// #2
  407cac:	csel	w0, w22, w8, eq  // eq = none
  407cb0:	ldp	x22, x21, [sp, #272]
  407cb4:	ldp	x28, x27, [sp, #224]
  407cb8:	ldp	x29, x30, [sp, #208]
  407cbc:	add	sp, sp, #0x130
  407cc0:	ret
  407cc4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407cc8:	add	x1, x1, #0xc3c
  407ccc:	mov	w2, #0x5                   	// #5
  407cd0:	mov	x0, xzr
  407cd4:	bl	402b40 <dcgettext@plt>
  407cd8:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  407cdc:	mov	w0, wzr
  407ce0:	ret
  407ce4:	stp	x29, x30, [sp, #-64]!
  407ce8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407cec:	ldr	x8, [x8, #1560]
  407cf0:	stp	x22, x21, [sp, #32]
  407cf4:	stp	x20, x19, [sp, #48]
  407cf8:	mov	w21, w2
  407cfc:	mov	x19, x1
  407d00:	mov	x20, x0
  407d04:	stp	x24, x23, [sp, #16]
  407d08:	mov	x29, sp
  407d0c:	cbz	x8, 407d14 <wcrtomb@plt+0x50b4>
  407d10:	bl	40a0e4 <wcrtomb@plt+0x7484>
  407d14:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d18:	strb	wzr, [x8, #1552]
  407d1c:	cbnz	w21, 407d28 <wcrtomb@plt+0x50c8>
  407d20:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d24:	str	xzr, [x8, #1664]
  407d28:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d2c:	mov	w9, #0x1                   	// #1
  407d30:	strb	w9, [x8, #1680]
  407d34:	ldr	x8, [x20, #32]
  407d38:	mov	x0, x20
  407d3c:	blr	x8
  407d40:	tbz	w0, #0, 407d58 <wcrtomb@plt+0x50f8>
  407d44:	ldr	x8, [x20, #16]
  407d48:	mov	w0, #0x1                   	// #1
  407d4c:	add	x8, x8, #0x1
  407d50:	str	x8, [x20, #16]
  407d54:	b	407e28 <wcrtomb@plt+0x51c8>
  407d58:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d5c:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d60:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d64:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407d68:	b	407d9c <wcrtomb@plt+0x513c>
  407d6c:	ldrb	w9, [x23, #1860]
  407d70:	ldr	x8, [x20]
  407d74:	strb	w9, [x20, #24]
  407d78:	add	x9, x8, #0x8
  407d7c:	str	x9, [x20]
  407d80:	ldr	x0, [x8]
  407d84:	mov	x1, x20
  407d88:	bl	40a23c <wcrtomb@plt+0x75dc>
  407d8c:	ldr	x8, [x20, #32]
  407d90:	mov	x0, x20
  407d94:	blr	x8
  407d98:	tbnz	w0, #0, 407d44 <wcrtomb@plt+0x50e4>
  407d9c:	mov	x0, x20
  407da0:	bl	409f04 <wcrtomb@plt+0x72a4>
  407da4:	ldr	x8, [x20]
  407da8:	ldr	x9, [x8]
  407dac:	cbz	x9, 407e24 <wcrtomb@plt+0x51c4>
  407db0:	ldrb	w9, [x20, #24]
  407db4:	cbz	w9, 407d78 <wcrtomb@plt+0x5118>
  407db8:	str	xzr, [x20, #16]
  407dbc:	str	xzr, [x21, #1712]
  407dc0:	ldr	w8, [x19, #16]
  407dc4:	cbz	w8, 407e10 <wcrtomb@plt+0x51b0>
  407dc8:	ldr	x9, [x19]
  407dcc:	b	407de0 <wcrtomb@plt+0x5180>
  407dd0:	mov	w10, wzr
  407dd4:	str	w10, [x9, #16]
  407dd8:	add	x9, x9, #0x28
  407ddc:	cbz	w8, 407e10 <wcrtomb@plt+0x51b0>
  407de0:	ldr	x10, [x9]
  407de4:	sub	w8, w8, #0x1
  407de8:	cbz	x10, 407dd0 <wcrtomb@plt+0x5170>
  407dec:	ldr	w11, [x10]
  407df0:	cmp	w11, #0x2
  407df4:	b.ne	407dd0 <wcrtomb@plt+0x5170>  // b.any
  407df8:	ldr	x10, [x10, #8]
  407dfc:	cbnz	x10, 407dd0 <wcrtomb@plt+0x5170>
  407e00:	mov	w10, #0x1                   	// #1
  407e04:	str	w10, [x9, #16]
  407e08:	add	x9, x9, #0x28
  407e0c:	cbnz	w8, 407de0 <wcrtomb@plt+0x5180>
  407e10:	bl	405584 <wcrtomb@plt+0x2924>
  407e14:	ldr	x8, [x22, #1880]
  407e18:	cbz	x8, 407d6c <wcrtomb@plt+0x510c>
  407e1c:	strb	wzr, [x24, #1624]
  407e20:	b	407d6c <wcrtomb@plt+0x510c>
  407e24:	mov	w0, wzr
  407e28:	ldp	x20, x19, [sp, #48]
  407e2c:	ldp	x22, x21, [sp, #32]
  407e30:	ldp	x24, x23, [sp, #16]
  407e34:	ldp	x29, x30, [sp], #64
  407e38:	ret
  407e3c:	stp	x29, x30, [sp, #-96]!
  407e40:	stp	x28, x27, [sp, #16]
  407e44:	stp	x26, x25, [sp, #32]
  407e48:	stp	x24, x23, [sp, #48]
  407e4c:	stp	x22, x21, [sp, #64]
  407e50:	stp	x20, x19, [sp, #80]
  407e54:	mov	x29, sp
  407e58:	sub	sp, sp, #0x1, lsl #12
  407e5c:	sub	sp, sp, #0x110
  407e60:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407e64:	ldrb	w8, [x28, #1872]
  407e68:	ldr	x9, [x0, #16]
  407e6c:	cmp	w8, #0x0
  407e70:	cset	w8, ne  // ne = any
  407e74:	cmp	x9, #0x1
  407e78:	b.lt	409b7c <wcrtomb@plt+0x6f1c>  // b.tstop
  407e7c:	ldr	x19, [x0]
  407e80:	mov	w10, #0x28                  	// #40
  407e84:	add	x11, sp, #0x70
  407e88:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407e8c:	mov	x21, x0
  407e90:	mov	x22, x1
  407e94:	add	x23, x23, #0x678
  407e98:	orr	x12, x11, #0x1
  407e9c:	orr	x11, x11, #0x2
  407ea0:	madd	x9, x9, x10, x19
  407ea4:	stp	x12, x0, [sp, #16]
  407ea8:	stp	x11, x1, [sp, #32]
  407eac:	str	x9, [sp, #48]
  407eb0:	tbz	w8, #0, 407ed4 <wcrtomb@plt+0x5274>
  407eb4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  407eb8:	ldr	x1, [x8, #1272]
  407ebc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407ec0:	add	x0, x0, #0xcfd
  407ec4:	bl	402b50 <fputs_unlocked@plt>
  407ec8:	mov	x0, x21
  407ecc:	mov	x1, x19
  407ed0:	bl	406ea0 <wcrtomb@plt+0x4240>
  407ed4:	ldr	x9, [x19]
  407ed8:	cbz	x9, 40801c <wcrtomb@plt+0x53bc>
  407edc:	ldr	w10, [x19, #16]
  407ee0:	ldr	x8, [x19, #8]
  407ee4:	cmp	w10, #0x1
  407ee8:	b.ne	407f28 <wcrtomb@plt+0x52c8>  // b.any
  407eec:	ldr	w9, [x8]
  407ef0:	cmp	w9, #0x6
  407ef4:	b.hi	409ec8 <wcrtomb@plt+0x7268>  // b.pmore
  407ef8:	adrp	x12, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407efc:	mov	w9, w9
  407f00:	add	x12, x12, #0xb71
  407f04:	adr	x10, 407f14 <wcrtomb@plt+0x52b4>
  407f08:	ldrb	w11, [x12, x9]
  407f0c:	add	x10, x10, x11, lsl #2
  407f10:	br	x10
  407f14:	ldr	x8, [x8, #8]
  407f18:	ldr	x9, [x22, #16]
  407f1c:	cmp	x8, x9
  407f20:	b.ls	408014 <wcrtomb@plt+0x53b4>  // b.plast
  407f24:	b	40801c <wcrtomb@plt+0x53bc>
  407f28:	ldr	w11, [x9]
  407f2c:	cmp	w11, #0x6
  407f30:	cbz	x8, 407f68 <wcrtomb@plt+0x5308>
  407f34:	b.hi	409ec8 <wcrtomb@plt+0x7268>  // b.pmore
  407f38:	adrp	x13, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407f3c:	mov	w8, w11
  407f40:	add	x13, x13, #0xb50
  407f44:	adr	x11, 407f54 <wcrtomb@plt+0x52f4>
  407f48:	ldrb	w12, [x13, x8]
  407f4c:	add	x11, x11, x12, lsl #2
  407f50:	br	x11
  407f54:	ldr	x8, [x9, #8]
  407f58:	ldr	x9, [x22, #16]
  407f5c:	cmp	x8, x9
  407f60:	b.hi	40822c <wcrtomb@plt+0x55cc>  // b.pmore
  407f64:	b	408134 <wcrtomb@plt+0x54d4>
  407f68:	b.hi	409ec8 <wcrtomb@plt+0x7268>  // b.pmore
  407f6c:	adrp	x12, 428000 <_obstack_memory_used@@Base+0x10ae4>
  407f70:	mov	w8, w11
  407f74:	add	x12, x12, #0xb6a
  407f78:	adr	x10, 407f8c <wcrtomb@plt+0x532c>
  407f7c:	ldrb	w11, [x12, x8]
  407f80:	add	x10, x10, x11, lsl #2
  407f84:	mov	w0, #0x1                   	// #1
  407f88:	br	x10
  407f8c:	ldr	x8, [x9, #8]
  407f90:	ldr	x9, [x22, #16]
  407f94:	cmp	x8, x9
  407f98:	cset	w0, ls  // ls = plast
  407f9c:	b	408020 <wcrtomb@plt+0x53c0>
  407fa0:	ldr	x9, [x22, #16]
  407fa4:	ldr	x8, [x8, #8]
  407fa8:	cmp	x9, x8
  407fac:	b.cc	407fb8 <wcrtomb@plt+0x5358>  // b.lo, b.ul, b.last
  407fb0:	mov	w10, #0x2                   	// #2
  407fb4:	str	w10, [x19, #16]
  407fb8:	cmp	x9, x8
  407fbc:	cset	w0, ls  // ls = plast
  407fc0:	b	408020 <wcrtomb@plt+0x53c0>
  407fc4:	ldr	x9, [x22, #16]
  407fc8:	ldr	x10, [x8, #8]
  407fcc:	subs	x9, x9, x10
  407fd0:	b.cc	40801c <wcrtomb@plt+0x53bc>  // b.lo, b.ul, b.last
  407fd4:	ldr	x8, [x8, #16]
  407fd8:	udiv	x10, x9, x8
  407fdc:	msub	x8, x10, x8, x9
  407fe0:	cbnz	x8, 40801c <wcrtomb@plt+0x53bc>
  407fe4:	b	408014 <wcrtomb@plt+0x53b4>
  407fe8:	ldr	x0, [x8, #24]
  407fec:	ldp	x1, x2, [x23]
  407ff0:	mov	x3, xzr
  407ff4:	mov	x4, xzr
  407ff8:	mov	w5, wzr
  407ffc:	bl	40af44 <wcrtomb@plt+0x82e4>
  408000:	cbnz	w0, 408014 <wcrtomb@plt+0x53b4>
  408004:	b	40801c <wcrtomb@plt+0x53bc>
  408008:	mov	x0, x22
  40800c:	bl	40a728 <wcrtomb@plt+0x7ac8>
  408010:	tbz	w0, #0, 40801c <wcrtomb@plt+0x53bc>
  408014:	mov	w8, #0x2                   	// #2
  408018:	str	w8, [x19, #16]
  40801c:	mov	w0, #0x1                   	// #1
  408020:	ldrb	w8, [x19, #20]
  408024:	and	w9, w0, #0x1
  408028:	cmp	w8, w9
  40802c:	b.ne	408050 <wcrtomb@plt+0x53f0>  // b.any
  408030:	add	x19, x19, #0x28
  408034:	ldrb	w8, [x28, #1872]
  408038:	ldr	x9, [sp, #48]
  40803c:	cmp	w8, #0x0
  408040:	cset	w8, ne  // ne = any
  408044:	cmp	x19, x9
  408048:	b.cc	407eb0 <wcrtomb@plt+0x5250>  // b.lo, b.ul, b.last
  40804c:	b	409b7c <wcrtomb@plt+0x6f1c>
  408050:	ldrb	w1, [x19, #21]
  408054:	sub	w8, w1, #0x23
  408058:	cmp	w8, #0x5a
  40805c:	b.hi	409ebc <wcrtomb@plt+0x725c>  // b.pmore
  408060:	adrp	x11, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408064:	add	x11, x11, #0xb78
  408068:	adr	x9, 408030 <wcrtomb@plt+0x53d0>
  40806c:	ldrh	w10, [x11, x8, lsl #1]
  408070:	add	x9, x9, x10, lsl #2
  408074:	br	x9
  408078:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40807c:	ldrb	w8, [x8, #1624]
  408080:	cbz	w8, 4080a8 <wcrtomb@plt+0x5448>
  408084:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408088:	add	x20, x20, #0x658
  40808c:	ldr	x3, [x20, #8]
  408090:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408094:	add	x0, x0, #0x448
  408098:	mov	w1, #0x1                   	// #1
  40809c:	mov	w2, #0x1                   	// #1
  4080a0:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4080a4:	strb	wzr, [x20]
  4080a8:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4080ac:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4080b0:	ldr	x3, [x22, #16]
  4080b4:	ldr	x0, [x20, #1632]
  4080b8:	ldrb	w4, [x8, #1096]
  4080bc:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4080c0:	add	x2, x2, #0xd1b
  4080c4:	b	40885c <wcrtomb@plt+0x5bfc>
  4080c8:	cmp	w10, #0x2
  4080cc:	b.eq	40822c <wcrtomb@plt+0x55cc>  // b.none
  4080d0:	ldr	x8, [x22, #16]
  4080d4:	ldr	x9, [x9, #8]
  4080d8:	cmp	x8, x9
  4080dc:	b.cc	40822c <wcrtomb@plt+0x55cc>  // b.lo, b.ul, b.last
  4080e0:	b	408134 <wcrtomb@plt+0x54d4>
  4080e4:	ldr	x8, [x22, #16]
  4080e8:	ldr	x10, [x9, #8]
  4080ec:	subs	x8, x8, x10
  4080f0:	b.cc	40822c <wcrtomb@plt+0x55cc>  // b.lo, b.ul, b.last
  4080f4:	ldr	x9, [x9, #16]
  4080f8:	udiv	x10, x8, x9
  4080fc:	msub	x8, x10, x9, x8
  408100:	cbnz	x8, 40822c <wcrtomb@plt+0x55cc>
  408104:	b	408134 <wcrtomb@plt+0x54d4>
  408108:	ldr	x0, [x9, #24]
  40810c:	ldp	x1, x2, [x23]
  408110:	mov	x3, xzr
  408114:	mov	x4, xzr
  408118:	mov	w5, wzr
  40811c:	bl	40af44 <wcrtomb@plt+0x82e4>
  408120:	cbnz	w0, 408134 <wcrtomb@plt+0x54d4>
  408124:	b	408020 <wcrtomb@plt+0x53c0>
  408128:	mov	x0, x22
  40812c:	bl	40a728 <wcrtomb@plt+0x7ac8>
  408130:	tbz	w0, #0, 40822c <wcrtomb@plt+0x55cc>
  408134:	ldr	x8, [x19, #8]
  408138:	mov	w0, #0x1                   	// #1
  40813c:	str	w0, [x19, #16]
  408140:	ldr	w9, [x8]
  408144:	sub	w10, w9, #0x1
  408148:	cmp	w10, #0x4
  40814c:	b.hi	407ef0 <wcrtomb@plt+0x5290>  // b.pmore
  408150:	adrp	x13, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408154:	add	x13, x13, #0xb57
  408158:	adr	x11, 407ef0 <wcrtomb@plt+0x5290>
  40815c:	ldrb	w12, [x13, x10]
  408160:	add	x11, x11, x12, lsl #2
  408164:	br	x11
  408168:	ldr	x9, [x22, #16]
  40816c:	ldr	x8, [x8, #8]
  408170:	cmp	x9, x8
  408174:	b.cc	408180 <wcrtomb@plt+0x5520>  // b.lo, b.ul, b.last
  408178:	mov	w10, #0x2                   	// #2
  40817c:	str	w10, [x19, #16]
  408180:	cmp	x9, x8
  408184:	b.ls	40801c <wcrtomb@plt+0x53bc>  // b.plast
  408188:	ldr	x8, [x19]
  40818c:	ldr	w10, [x8]
  408190:	cmp	w10, #0x6
  408194:	b.hi	409ec8 <wcrtomb@plt+0x7268>  // b.pmore
  408198:	adrp	x13, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40819c:	add	x13, x13, #0xb5c
  4081a0:	adr	x11, 408020 <wcrtomb@plt+0x53c0>
  4081a4:	ldrh	w12, [x13, x10, lsl #1]
  4081a8:	add	x11, x11, x12, lsl #2
  4081ac:	mov	w0, #0x1                   	// #1
  4081b0:	br	x11
  4081b4:	ldr	x8, [x8, #8]
  4081b8:	b	407f94 <wcrtomb@plt+0x5334>
  4081bc:	ldr	x9, [x22, #16]
  4081c0:	ldr	x10, [x8, #16]
  4081c4:	mov	w0, #0x1                   	// #1
  4081c8:	add	x9, x10, x9
  4081cc:	str	x9, [x8, #8]
  4081d0:	b	408020 <wcrtomb@plt+0x53c0>
  4081d4:	ldr	x9, [x22, #16]
  4081d8:	ldr	x10, [x8, #16]
  4081dc:	mov	w0, #0x1                   	// #1
  4081e0:	add	x11, x10, x9
  4081e4:	udiv	x12, x9, x10
  4081e8:	neg	x9, x9
  4081ec:	madd	x9, x12, x10, x9
  4081f0:	add	x9, x11, x9
  4081f4:	str	x9, [x8, #8]
  4081f8:	b	408020 <wcrtomb@plt+0x53c0>
  4081fc:	mov	x0, x22
  408200:	bl	40a728 <wcrtomb@plt+0x7ac8>
  408204:	b	408020 <wcrtomb@plt+0x53c0>
  408208:	ldr	x8, [x9, #8]
  40820c:	ldr	x9, [x22, #16]
  408210:	cmp	x8, x9
  408214:	cset	w0, eq  // eq = none
  408218:	b	408020 <wcrtomb@plt+0x53c0>
  40821c:	ldr	x8, [x22, #16]
  408220:	ldr	x10, [x9, #8]
  408224:	subs	x8, x8, x10
  408228:	b.cs	4090fc <wcrtomb@plt+0x649c>  // b.hs, b.nlast
  40822c:	mov	w0, wzr
  408230:	b	408020 <wcrtomb@plt+0x53c0>
  408234:	ldr	x0, [x9, #24]
  408238:	ldp	x1, x2, [x23]
  40823c:	mov	x3, xzr
  408240:	mov	x4, xzr
  408244:	mov	w5, wzr
  408248:	bl	40af44 <wcrtomb@plt+0x82e4>
  40824c:	cmp	w0, #0x0
  408250:	cset	w0, ne  // ne = any
  408254:	b	408020 <wcrtomb@plt+0x53c0>
  408258:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40825c:	ldr	x8, [x8, #1816]
  408260:	ldr	x20, [x19, #32]
  408264:	cbz	x8, 40918c <wcrtomb@plt+0x652c>
  408268:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40826c:	str	xzr, [x8, #1808]
  408270:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408274:	add	x8, x8, #0x724
  408278:	str	xzr, [x8]
  40827c:	cbz	w20, 4091c4 <wcrtomb@plt+0x6564>
  408280:	ldr	x8, [x19, #24]
  408284:	sub	w9, w20, #0x1
  408288:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40828c:	add	x1, x1, #0xfe2
  408290:	strb	wzr, [x8, w9, sxtw]
  408294:	ldr	x0, [x19, #24]
  408298:	bl	402780 <popen@plt>
  40829c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4082a0:	ldrb	w8, [x8, #1624]
  4082a4:	mov	x24, x0
  4082a8:	cbz	w8, 4091f4 <wcrtomb@plt+0x6594>
  4082ac:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4082b0:	add	x21, x21, #0x658
  4082b4:	ldr	x3, [x21, #8]
  4082b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4082bc:	add	x0, x0, #0x448
  4082c0:	mov	w1, #0x1                   	// #1
  4082c4:	mov	w2, #0x1                   	// #1
  4082c8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4082cc:	strb	wzr, [x21]
  4082d0:	ldr	x21, [sp, #24]
  4082d4:	b	4091f4 <wcrtomb@plt+0x6594>
  4082d8:	ldr	x8, [x19, #24]
  4082dc:	cbz	x8, 408030 <wcrtomb@plt+0x53d0>
  4082e0:	mov	w0, #0x1                   	// #1
  4082e4:	mov	w1, #0x28                  	// #40
  4082e8:	bl	417018 <wcrtomb@plt+0x143b8>
  4082ec:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4082f0:	add	x8, x8, #0x618
  4082f4:	ldr	x9, [x8, #8]
  4082f8:	movi	v0.2d, #0x0
  4082fc:	strb	wzr, [x0, #32]
  408300:	stp	q0, q0, [x0]
  408304:	add	x10, x9, #0x18
  408308:	cmp	x9, #0x0
  40830c:	csel	x9, x8, x10, eq  // eq = none
  408310:	str	x0, [x9]
  408314:	str	x0, [x8, #8]
  408318:	ldr	x8, [x19, #24]
  40831c:	add	x19, x19, #0x28
  408320:	str	x8, [x0]
  408324:	b	408034 <wcrtomb@plt+0x53d4>
  408328:	ldrb	w8, [x28, #1872]
  40832c:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408330:	str	xzr, [x9, #1664]
  408334:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  408338:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40833c:	ldr	x1, [x20, #1272]
  408340:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408344:	add	x0, x0, #0xcf3
  408348:	bl	402b50 <fputs_unlocked@plt>
  40834c:	ldr	x0, [x20, #1272]
  408350:	ldp	x8, x9, [x0, #40]
  408354:	cmp	x8, x9
  408358:	b.cs	409b54 <wcrtomb@plt+0x6ef4>  // b.hs, b.nlast
  40835c:	add	x9, x8, #0x1
  408360:	mov	w10, #0xa                   	// #10
  408364:	str	x9, [x0, #40]
  408368:	strb	w10, [x8]
  40836c:	b	408030 <wcrtomb@plt+0x53d0>
  408370:	mov	w0, #0x1                   	// #1
  408374:	mov	w1, #0x28                  	// #40
  408378:	bl	417018 <wcrtomb@plt+0x143b8>
  40837c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408380:	add	x8, x8, #0x618
  408384:	ldr	x9, [x8, #8]
  408388:	movi	v0.2d, #0x0
  40838c:	strb	wzr, [x0, #32]
  408390:	stp	q0, q0, [x0]
  408394:	add	x10, x9, #0x18
  408398:	cmp	x9, #0x0
  40839c:	csel	x9, x8, x10, eq  // eq = none
  4083a0:	str	x0, [x9]
  4083a4:	str	x0, [x8, #8]
  4083a8:	ldr	x8, [x19, #24]
  4083ac:	str	x8, [x0, #8]
  4083b0:	ldr	x8, [x19, #32]
  4083b4:	str	x8, [x0, #16]
  4083b8:	b	408030 <wcrtomb@plt+0x53d0>
  4083bc:	add	x24, x23, #0x28
  4083c0:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4083c4:	add	x1, x1, #0x448
  4083c8:	mov	w2, #0x1                   	// #1
  4083cc:	mov	x0, x24
  4083d0:	bl	40a538 <wcrtomb@plt+0x78d8>
  4083d4:	ldp	x1, x2, [x23]
  4083d8:	mov	x0, x24
  4083dc:	bl	40a538 <wcrtomb@plt+0x78d8>
  4083e0:	ldrb	w8, [x23, #24]
  4083e4:	ldur	x9, [x23, #28]
  4083e8:	ldrb	w10, [x28, #1872]
  4083ec:	strb	w8, [x23, #72]
  4083f0:	stur	x9, [x23, #76]
  4083f4:	cbz	w10, 408030 <wcrtomb@plt+0x53d0>
  4083f8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4083fc:	add	x8, x8, #0x6a0
  408400:	ldp	x22, x21, [x8]
  408404:	ldr	x20, [x8, #16]
  408408:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40840c:	ldr	x1, [x8, #1272]
  408410:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408414:	add	x0, x0, #0xce9
  408418:	bl	402b50 <fputs_unlocked@plt>
  40841c:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  408420:	cmp	x21, #0x0
  408424:	csel	x21, x22, x21, eq  // eq = none
  408428:	ldrb	w0, [x21], #1
  40842c:	sub	x20, x20, #0x1
  408430:	bl	406c3c <wcrtomb@plt+0x3fdc>
  408434:	cbnz	x20, 408428 <wcrtomb@plt+0x57c8>
  408438:	b	409b18 <wcrtomb@plt+0x6eb8>
  40843c:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408440:	add	x24, x24, #0x670
  408444:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408448:	add	x1, x1, #0x448
  40844c:	mov	w2, #0x1                   	// #1
  408450:	mov	x0, x24
  408454:	bl	40a538 <wcrtomb@plt+0x78d8>
  408458:	mov	x0, x22
  40845c:	bl	40a728 <wcrtomb@plt+0x7ac8>
  408460:	tbnz	w0, #0, 409de0 <wcrtomb@plt+0x7180>
  408464:	mov	w2, #0x1                   	// #1
  408468:	mov	x0, x22
  40846c:	mov	x1, x21
  408470:	bl	407ce4 <wcrtomb@plt+0x5084>
  408474:	tbz	w0, #0, 409de0 <wcrtomb@plt+0x7180>
  408478:	ldrb	w8, [x28, #1872]
  40847c:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  408480:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408484:	ldr	x1, [x8, #1272]
  408488:	ldp	x22, x21, [x24]
  40848c:	ldr	x20, [x24, #16]
  408490:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408494:	add	x0, x0, #0xcf3
  408498:	bl	402b50 <fputs_unlocked@plt>
  40849c:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  4084a0:	cmp	x21, #0x0
  4084a4:	csel	x21, x22, x21, eq  // eq = none
  4084a8:	ldrb	w0, [x21], #1
  4084ac:	sub	x20, x20, #0x1
  4084b0:	bl	406c3c <wcrtomb@plt+0x3fdc>
  4084b4:	cbnz	x20, 4084a8 <wcrtomb@plt+0x5848>
  4084b8:	b	409b18 <wcrtomb@plt+0x6eb8>
  4084bc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4084c0:	ldrb	w9, [x8, #1552]
  4084c4:	tbz	w9, #0, 408df0 <wcrtomb@plt+0x6190>
  4084c8:	strb	wzr, [x8, #1552]
  4084cc:	b	408030 <wcrtomb@plt+0x53d0>
  4084d0:	ldr	x8, [x19, #24]
  4084d4:	ldr	x3, [x8, #16]
  4084d8:	cbz	x3, 408030 <wcrtomb@plt+0x53d0>
  4084dc:	ldrb	w8, [x3]
  4084e0:	tbnz	w8, #4, 408030 <wcrtomb@plt+0x53d0>
  4084e4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4084e8:	ldrb	w2, [x8, #1096]
  4084ec:	add	x0, sp, #0x38
  4084f0:	add	x1, sp, #0x70
  4084f4:	str	xzr, [sp, #56]
  4084f8:	bl	40c1bc <wcrtomb@plt+0x955c>
  4084fc:	mov	x24, x0
  408500:	cmn	w24, #0x1
  408504:	b.eq	409524 <wcrtomb@plt+0x68c4>  // b.none
  408508:	mov	w0, #0x1                   	// #1
  40850c:	mov	w1, #0x28                  	// #40
  408510:	mov	w20, #0x1                   	// #1
  408514:	bl	417018 <wcrtomb@plt+0x143b8>
  408518:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40851c:	add	x8, x8, #0x618
  408520:	ldr	x9, [x8, #8]
  408524:	movi	v0.2d, #0x0
  408528:	strb	wzr, [x0, #32]
  40852c:	stp	q0, q0, [x0]
  408530:	add	x10, x9, #0x18
  408534:	cmp	x9, #0x0
  408538:	csel	x9, x8, x10, eq  // eq = none
  40853c:	str	x0, [x9]
  408540:	ldr	x9, [sp, #56]
  408544:	sxtw	x10, w24
  408548:	str	x0, [x8, #8]
  40854c:	strb	w20, [x0, #32]
  408550:	stp	x9, x10, [x0, #8]
  408554:	b	408030 <wcrtomb@plt+0x53d0>
  408558:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40855c:	ldp	x24, x19, [x23]
  408560:	ldrb	w1, [x8, #1096]
  408564:	mov	x0, x24
  408568:	mov	x2, x19
  40856c:	bl	402ae0 <memchr@plt>
  408570:	cbz	x0, 409d14 <wcrtomb@plt+0x70b4>
  408574:	ldr	x8, [x23, #16]
  408578:	add	x20, x0, #0x1
  40857c:	sub	x9, x24, x20
  408580:	mov	x10, x21
  408584:	add	x21, x9, x19
  408588:	add	x8, x9, x8
  40858c:	stp	x20, x21, [x23]
  408590:	str	x8, [x23, #16]
  408594:	ldrb	w8, [x28, #1872]
  408598:	ldr	x19, [x10]
  40859c:	cbz	w8, 40951c <wcrtomb@plt+0x68bc>
  4085a0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4085a4:	ldr	x1, [x8, #1272]
  4085a8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4085ac:	add	x0, x0, #0xcf3
  4085b0:	bl	402b50 <fputs_unlocked@plt>
  4085b4:	cbz	x21, 4085c8 <wcrtomb@plt+0x5968>
  4085b8:	ldrb	w0, [x20], #1
  4085bc:	sub	x21, x21, #0x1
  4085c0:	bl	406c3c <wcrtomb@plt+0x3fdc>
  4085c4:	cbnz	x21, 4085b8 <wcrtomb@plt+0x5958>
  4085c8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4085cc:	ldr	x0, [x8, #1272]
  4085d0:	ldp	x8, x9, [x0, #40]
  4085d4:	cmp	x8, x9
  4085d8:	b.cs	409b6c <wcrtomb@plt+0x6f0c>  // b.hs, b.nlast
  4085dc:	ldr	x21, [sp, #24]
  4085e0:	add	x9, x8, #0x1
  4085e4:	mov	w10, #0xa                   	// #10
  4085e8:	str	x9, [x0, #40]
  4085ec:	strb	w10, [x8]
  4085f0:	b	408034 <wcrtomb@plt+0x53d4>
  4085f4:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4085f8:	add	x24, x24, #0x670
  4085fc:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408600:	add	x1, x1, #0x448
  408604:	mov	w2, #0x1                   	// #1
  408608:	mov	x0, x24
  40860c:	bl	40a538 <wcrtomb@plt+0x78d8>
  408610:	ldp	x1, x2, [x24, #56]
  408614:	mov	x0, x24
  408618:	bl	40a538 <wcrtomb@plt+0x78d8>
  40861c:	ldrb	w8, [x24, #80]
  408620:	ldur	x9, [x24, #84]
  408624:	ldrb	w10, [x28, #1872]
  408628:	strb	w8, [x24, #32]
  40862c:	stur	x9, [x24, #36]
  408630:	cbz	w10, 408030 <wcrtomb@plt+0x53d0>
  408634:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408638:	ldr	x1, [x8, #1272]
  40863c:	ldp	x22, x21, [x24]
  408640:	ldr	x20, [x24, #16]
  408644:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408648:	add	x0, x0, #0xcf3
  40864c:	bl	402b50 <fputs_unlocked@plt>
  408650:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  408654:	cmp	x21, #0x0
  408658:	csel	x21, x22, x21, eq  // eq = none
  40865c:	ldrb	w0, [x21], #1
  408660:	sub	x20, x20, #0x1
  408664:	bl	406c3c <wcrtomb@plt+0x3fdc>
  408668:	cbnz	x20, 40865c <wcrtomb@plt+0x59fc>
  40866c:	b	409b18 <wcrtomb@plt+0x6eb8>
  408670:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408674:	ldp	x25, x26, [x23]
  408678:	ldrb	w1, [x8, #1096]
  40867c:	mov	x0, x25
  408680:	mov	x2, x26
  408684:	bl	402ae0 <memchr@plt>
  408688:	sub	x8, x0, x25
  40868c:	cmp	x0, #0x0
  408690:	csel	x26, x8, x26, ne  // ne = any
  408694:	cbz	x25, 408030 <wcrtomb@plt+0x53d0>
  408698:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40869c:	ldrb	w8, [x20, #1624]
  4086a0:	ldrb	w21, [x23, #24]
  4086a4:	mov	x24, x0
  4086a8:	cbz	w8, 4086d4 <wcrtomb@plt+0x5a74>
  4086ac:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4086b0:	add	x22, x22, #0x658
  4086b4:	ldr	x3, [x22, #8]
  4086b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4086bc:	add	x0, x0, #0x448
  4086c0:	mov	w1, #0x1                   	// #1
  4086c4:	mov	w2, #0x1                   	// #1
  4086c8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4086cc:	strb	wzr, [x22]
  4086d0:	ldr	x22, [sp, #40]
  4086d4:	cbz	x26, 4086f0 <wcrtomb@plt+0x5a90>
  4086d8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4086dc:	ldr	x3, [x8, #1632]
  4086e0:	mov	w1, #0x1                   	// #1
  4086e4:	mov	x0, x25
  4086e8:	mov	x2, x26
  4086ec:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4086f0:	tbnz	w21, #0, 4087e0 <wcrtomb@plt+0x5b80>
  4086f4:	cbnz	x24, 4087e0 <wcrtomb@plt+0x5b80>
  4086f8:	mov	w8, #0x1                   	// #1
  4086fc:	strb	w8, [x20, #1624]
  408700:	b	4087fc <wcrtomb@plt+0x5b9c>
  408704:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408708:	ldrb	w8, [x8, #1856]
  40870c:	cbz	w8, 409308 <wcrtomb@plt+0x66a8>
  408710:	mov	x0, x22
  408714:	bl	40a728 <wcrtomb@plt+0x7ac8>
  408718:	tbnz	w0, #0, 409ce0 <wcrtomb@plt+0x7080>
  40871c:	mov	x0, x22
  408720:	mov	x1, x21
  408724:	mov	w2, wzr
  408728:	bl	407ce4 <wcrtomb@plt+0x5084>
  40872c:	tbz	w0, #0, 409ce0 <wcrtomb@plt+0x7080>
  408730:	ldrb	w8, [x28, #1872]
  408734:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  408738:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40873c:	add	x8, x8, #0x670
  408740:	ldp	x22, x21, [x8]
  408744:	ldr	x20, [x8, #16]
  408748:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40874c:	ldr	x1, [x8, #1272]
  408750:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408754:	add	x0, x0, #0xcf3
  408758:	bl	402b50 <fputs_unlocked@plt>
  40875c:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  408760:	cmp	x21, #0x0
  408764:	csel	x21, x22, x21, eq  // eq = none
  408768:	ldrb	w0, [x21], #1
  40876c:	sub	x20, x20, #0x1
  408770:	bl	406c3c <wcrtomb@plt+0x3fdc>
  408774:	cbnz	x20, 408768 <wcrtomb@plt+0x5b08>
  408778:	b	409b18 <wcrtomb@plt+0x6eb8>
  40877c:	ldr	x24, [x23]
  408780:	cbz	x24, 408030 <wcrtomb@plt+0x53d0>
  408784:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408788:	ldr	x25, [x23, #8]
  40878c:	ldrb	w8, [x20, #1624]
  408790:	ldrb	w21, [x23, #24]
  408794:	cbz	w8, 4087c0 <wcrtomb@plt+0x5b60>
  408798:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40879c:	add	x22, x22, #0x658
  4087a0:	ldr	x3, [x22, #8]
  4087a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4087a8:	add	x0, x0, #0x448
  4087ac:	mov	w1, #0x1                   	// #1
  4087b0:	mov	w2, #0x1                   	// #1
  4087b4:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4087b8:	strb	wzr, [x22]
  4087bc:	ldr	x22, [sp, #40]
  4087c0:	cbz	x25, 4087dc <wcrtomb@plt+0x5b7c>
  4087c4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4087c8:	ldr	x3, [x8, #1632]
  4087cc:	mov	w1, #0x1                   	// #1
  4087d0:	mov	x0, x24
  4087d4:	mov	x2, x25
  4087d8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4087dc:	cbz	w21, 4086f8 <wcrtomb@plt+0x5a98>
  4087e0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4087e4:	ldr	x3, [x8, #1632]
  4087e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4087ec:	add	x0, x0, #0x448
  4087f0:	mov	w1, #0x1                   	// #1
  4087f4:	mov	w2, #0x1                   	// #1
  4087f8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4087fc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408800:	ldrb	w8, [x8, #1852]
  408804:	ldr	x21, [sp, #24]
  408808:	cbnz	w8, 40929c <wcrtomb@plt+0x663c>
  40880c:	b	408030 <wcrtomb@plt+0x53d0>
  408810:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408814:	ldrb	w8, [x8, #1624]
  408818:	cbz	w8, 408840 <wcrtomb@plt+0x5be0>
  40881c:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408820:	add	x20, x20, #0x658
  408824:	ldr	x3, [x20, #8]
  408828:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40882c:	add	x0, x0, #0x448
  408830:	mov	w1, #0x1                   	// #1
  408834:	mov	w2, #0x1                   	// #1
  408838:	bl	40bfe8 <wcrtomb@plt+0x9388>
  40883c:	strb	wzr, [x20]
  408840:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408844:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408848:	ldr	x3, [x22, #48]
  40884c:	ldr	x0, [x20, #1632]
  408850:	ldrb	w4, [x8, #1096]
  408854:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408858:	add	x2, x2, #0xd21
  40885c:	mov	w1, #0x1                   	// #1
  408860:	bl	4029c0 <__fprintf_chk@plt>
  408864:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408868:	ldrb	w8, [x8, #1852]
  40886c:	cbnz	w8, 408db4 <wcrtomb@plt+0x6154>
  408870:	b	408030 <wcrtomb@plt+0x53d0>
  408874:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408878:	add	x8, x8, #0x670
  40887c:	ldrb	w9, [x28, #1872]
  408880:	ldr	w10, [x8, #32]
  408884:	ldp	q0, q1, [x8, #48]
  408888:	ldr	w11, [x8, #80]
  40888c:	ldp	q3, q2, [x8]
  408890:	str	w10, [x8, #80]
  408894:	stp	q0, q1, [x8]
  408898:	str	w11, [x8, #32]
  40889c:	stp	q3, q2, [x8, #48]
  4088a0:	cbz	w9, 408030 <wcrtomb@plt+0x53d0>
  4088a4:	ldp	x22, x21, [x8]
  4088a8:	ldr	x20, [x8, #16]
  4088ac:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4088b0:	ldr	x1, [x8, #1272]
  4088b4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4088b8:	add	x0, x0, #0xcf3
  4088bc:	bl	402b50 <fputs_unlocked@plt>
  4088c0:	cbz	x20, 4088dc <wcrtomb@plt+0x5c7c>
  4088c4:	cmp	x21, #0x0
  4088c8:	csel	x21, x22, x21, eq  // eq = none
  4088cc:	ldrb	w0, [x21], #1
  4088d0:	sub	x20, x20, #0x1
  4088d4:	bl	406c3c <wcrtomb@plt+0x3fdc>
  4088d8:	cbnz	x20, 4088cc <wcrtomb@plt+0x5c6c>
  4088dc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4088e0:	ldr	x0, [x8, #1272]
  4088e4:	ldp	x8, x9, [x0, #40]
  4088e8:	cmp	x8, x9
  4088ec:	b.cs	409b60 <wcrtomb@plt+0x6f00>  // b.hs, b.nlast
  4088f0:	add	x9, x8, #0x1
  4088f4:	mov	w10, #0xa                   	// #10
  4088f8:	str	x9, [x0, #40]
  4088fc:	strb	w10, [x8]
  408900:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408904:	add	x8, x8, #0x6a0
  408908:	ldp	x22, x21, [x8]
  40890c:	ldr	x20, [x8, #16]
  408910:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408914:	ldr	x1, [x8, #1272]
  408918:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40891c:	add	x0, x0, #0xce9
  408920:	bl	402b50 <fputs_unlocked@plt>
  408924:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  408928:	cmp	x21, #0x0
  40892c:	csel	x21, x22, x21, eq  // eq = none
  408930:	ldrb	w0, [x21], #1
  408934:	sub	x20, x20, #0x1
  408938:	bl	406c3c <wcrtomb@plt+0x3fdc>
  40893c:	cbnz	x20, 408930 <wcrtomb@plt+0x5cd0>
  408940:	b	409b18 <wcrtomb@plt+0x6eb8>
  408944:	ldr	x20, [x19, #24]
  408948:	ldr	x26, [x20, #16]
  40894c:	cbz	x26, 408030 <wcrtomb@plt+0x53d0>
  408950:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408954:	ldp	x25, x27, [x23]
  408958:	ldrb	w1, [x8, #1096]
  40895c:	mov	x0, x25
  408960:	mov	x2, x27
  408964:	bl	402ae0 <memchr@plt>
  408968:	sub	x8, x0, x25
  40896c:	cmp	x0, #0x0
  408970:	csel	x27, x8, x27, ne  // ne = any
  408974:	cbz	x25, 408030 <wcrtomb@plt+0x53d0>
  408978:	ldrb	w8, [x20, #8]
  40897c:	ldrb	w21, [x23, #24]
  408980:	mov	x24, x0
  408984:	cbz	w8, 4089a4 <wcrtomb@plt+0x5d44>
  408988:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40898c:	add	x0, x0, #0x448
  408990:	mov	w1, #0x1                   	// #1
  408994:	mov	w2, #0x1                   	// #1
  408998:	mov	x3, x26
  40899c:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4089a0:	strb	wzr, [x20, #8]
  4089a4:	cbz	x27, 4089bc <wcrtomb@plt+0x5d5c>
  4089a8:	ldr	x3, [x20, #16]
  4089ac:	mov	w1, #0x1                   	// #1
  4089b0:	mov	x0, x25
  4089b4:	mov	x2, x27
  4089b8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4089bc:	tbnz	w21, #0, 408ae0 <wcrtomb@plt+0x5e80>
  4089c0:	cbnz	x24, 408ae0 <wcrtomb@plt+0x5e80>
  4089c4:	mov	w8, #0x1                   	// #1
  4089c8:	strb	w8, [x20, #8]
  4089cc:	b	408af8 <wcrtomb@plt+0x5e98>
  4089d0:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4089d4:	add	x1, x1, #0x670
  4089d8:	add	x0, x1, #0x30
  4089dc:	bl	40a698 <wcrtomb@plt+0x7a38>
  4089e0:	ldrb	w8, [x28, #1872]
  4089e4:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  4089e8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4089ec:	add	x8, x8, #0x6a0
  4089f0:	ldp	x22, x21, [x8]
  4089f4:	ldr	x20, [x8, #16]
  4089f8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4089fc:	ldr	x1, [x8, #1272]
  408a00:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408a04:	add	x0, x0, #0xce9
  408a08:	bl	402b50 <fputs_unlocked@plt>
  408a0c:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  408a10:	cmp	x21, #0x0
  408a14:	csel	x21, x22, x21, eq  // eq = none
  408a18:	ldrb	w0, [x21], #1
  408a1c:	sub	x20, x20, #0x1
  408a20:	bl	406c3c <wcrtomb@plt+0x3fdc>
  408a24:	cbnz	x20, 408a18 <wcrtomb@plt+0x5db8>
  408a28:	b	409b18 <wcrtomb@plt+0x6eb8>
  408a2c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408a30:	add	x0, x0, #0x670
  408a34:	add	x1, x0, #0x30
  408a38:	bl	40a698 <wcrtomb@plt+0x7a38>
  408a3c:	ldrb	w8, [x28, #1872]
  408a40:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  408a44:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408a48:	add	x8, x8, #0x6a0
  408a4c:	ldp	x22, x21, [x8]
  408a50:	ldr	x20, [x8, #16]
  408a54:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408a58:	ldr	x1, [x8, #1272]
  408a5c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408a60:	add	x0, x0, #0xce9
  408a64:	bl	402b50 <fputs_unlocked@plt>
  408a68:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  408a6c:	cmp	x21, #0x0
  408a70:	csel	x21, x22, x21, eq  // eq = none
  408a74:	ldrb	w0, [x21], #1
  408a78:	sub	x20, x20, #0x1
  408a7c:	bl	406c3c <wcrtomb@plt+0x3fdc>
  408a80:	cbnz	x20, 408a74 <wcrtomb@plt+0x5e14>
  408a84:	b	409b18 <wcrtomb@plt+0x6eb8>
  408a88:	ldr	x20, [x19, #24]
  408a8c:	ldr	x3, [x20, #16]
  408a90:	cbz	x3, 408030 <wcrtomb@plt+0x53d0>
  408a94:	ldr	x24, [x23]
  408a98:	cbz	x24, 408030 <wcrtomb@plt+0x53d0>
  408a9c:	ldr	x25, [x23, #8]
  408aa0:	ldrb	w8, [x20, #8]
  408aa4:	ldrb	w21, [x23, #24]
  408aa8:	cbz	w8, 408ac4 <wcrtomb@plt+0x5e64>
  408aac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408ab0:	add	x0, x0, #0x448
  408ab4:	mov	w1, #0x1                   	// #1
  408ab8:	mov	w2, #0x1                   	// #1
  408abc:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408ac0:	strb	wzr, [x20, #8]
  408ac4:	cbz	x25, 408adc <wcrtomb@plt+0x5e7c>
  408ac8:	ldr	x3, [x20, #16]
  408acc:	mov	w1, #0x1                   	// #1
  408ad0:	mov	x0, x24
  408ad4:	mov	x2, x25
  408ad8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408adc:	cbz	w21, 4089c4 <wcrtomb@plt+0x5d64>
  408ae0:	ldr	x3, [x20, #16]
  408ae4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408ae8:	add	x0, x0, #0x448
  408aec:	mov	w1, #0x1                   	// #1
  408af0:	mov	w2, #0x1                   	// #1
  408af4:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408af8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408afc:	ldrb	w8, [x8, #1852]
  408b00:	ldr	x21, [sp, #24]
  408b04:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  408b08:	ldr	x0, [x20, #16]
  408b0c:	bl	40c234 <wcrtomb@plt+0x95d4>
  408b10:	b	408030 <wcrtomb@plt+0x53d0>
  408b14:	adrp	x27, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408b18:	ldr	w9, [x27, #2260]
  408b1c:	cmp	w9, #0x2
  408b20:	b.lt	409114 <wcrtomb@plt+0x64b4>  // b.tstop
  408b24:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408b28:	ldr	x8, [x8, #1664]
  408b2c:	ldr	x21, [x19, #24]
  408b30:	str	xzr, [sp, #112]
  408b34:	cbz	x8, 408d28 <wcrtomb@plt+0x60c8>
  408b38:	mov	x20, xzr
  408b3c:	cmp	w9, #0x1
  408b40:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408b44:	b.ne	408b5c <wcrtomb@plt+0x5efc>  // b.any
  408b48:	b	408b78 <wcrtomb@plt+0x5f18>
  408b4c:	ldr	w9, [x27, #2260]
  408b50:	cmp	w9, #0x1
  408b54:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408b58:	b.eq	408b78 <wcrtomb@plt+0x5f18>  // b.none
  408b5c:	ldr	x9, [x22, #1656]
  408b60:	sub	x2, x8, x20
  408b64:	add	x3, sp, #0x70
  408b68:	mov	x0, xzr
  408b6c:	add	x1, x9, x20
  408b70:	bl	417134 <wcrtomb@plt+0x144d4>
  408b74:	b	408b7c <wcrtomb@plt+0x5f1c>
  408b78:	mov	w0, #0x1                   	// #1
  408b7c:	ldr	x1, [x21]
  408b80:	sub	x8, x0, #0x1
  408b84:	cmn	x8, #0x4
  408b88:	csinc	x24, x0, xzr, ls  // ls = plast
  408b8c:	cbz	x1, 408d10 <wcrtomb@plt+0x60b0>
  408b90:	ldr	x26, [x22, #1656]
  408b94:	mov	x2, x24
  408b98:	add	x25, x26, x20
  408b9c:	mov	x0, x25
  408ba0:	bl	402790 <strncmp@plt>
  408ba4:	mov	w22, wzr
  408ba8:	cbz	w0, 408bc8 <wcrtomb@plt+0x5f68>
  408bac:	add	w22, w22, #0x2
  408bb0:	ldr	x1, [x21, w22, uxtw #3]
  408bb4:	cbz	x1, 408d10 <wcrtomb@plt+0x60b0>
  408bb8:	mov	x0, x25
  408bbc:	mov	x2, x24
  408bc0:	bl	402790 <strncmp@plt>
  408bc4:	cbnz	w0, 408bac <wcrtomb@plt+0x5f4c>
  408bc8:	orr	w9, w22, #0x1
  408bcc:	ldr	x27, [x21, w9, uxtw #3]
  408bd0:	str	x9, [sp, #8]
  408bd4:	ldrb	w8, [x27]
  408bd8:	cbz	w8, 408ca4 <wcrtomb@plt+0x6044>
  408bdc:	mov	x0, x27
  408be0:	bl	4025c0 <strlen@plt>
  408be4:	mov	x25, x0
  408be8:	subs	x22, x25, x24
  408bec:	b.ls	408cb0 <wcrtomb@plt+0x6050>  // b.plast
  408bf0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408bf4:	add	x8, x8, #0x680
  408bf8:	ldp	x2, x9, [x8]
  408bfc:	add	x8, x22, x2
  408c00:	add	x27, x8, #0x1
  408c04:	cmp	x9, x27
  408c08:	b.cs	408cb8 <wcrtomb@plt+0x6058>  // b.hs, b.nlast
  408c0c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408c10:	ldr	x0, [x8, #1648]
  408c14:	lsl	x9, x9, #1
  408c18:	sub	x8, x26, x0
  408c1c:	cmp	x9, w8, sxtw
  408c20:	b.cs	408c60 <wcrtomb@plt+0x6000>  // b.hs, b.nlast
  408c24:	mov	x1, x26
  408c28:	bl	402590 <memmove@plt>
  408c2c:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408c30:	add	x10, x10, #0x670
  408c34:	ldp	x26, x8, [x10]
  408c38:	ldr	x9, [x10, #24]
  408c3c:	sub	x8, x8, x26
  408c40:	add	x9, x9, x8
  408c44:	cmp	x9, x27
  408c48:	str	x9, [x10, #24]
  408c4c:	str	x26, [x10, #8]
  408c50:	b.hi	408cb8 <wcrtomb@plt+0x6058>  // b.pmore
  408c54:	mov	x8, xzr
  408c58:	lsl	x9, x9, #1
  408c5c:	mov	x0, x26
  408c60:	cmp	x9, x27
  408c64:	csel	x9, x27, x9, cc  // cc = lo, ul, last
  408c68:	mov	w10, #0x32                  	// #50
  408c6c:	cmp	x9, #0x32
  408c70:	csel	x9, x9, x10, hi  // hi = pmore
  408c74:	sxtw	x26, w8
  408c78:	add	x8, x26, x9
  408c7c:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408c80:	adds	x1, x8, #0x1
  408c84:	str	x9, [x11, #1672]
  408c88:	b.mi	409eec <wcrtomb@plt+0x728c>  // b.first
  408c8c:	bl	416e54 <wcrtomb@plt+0x141f4>
  408c90:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408c94:	add	x26, x0, x26
  408c98:	add	x8, x8, #0x670
  408c9c:	stp	x0, x26, [x8]
  408ca0:	b	408cb8 <wcrtomb@plt+0x6058>
  408ca4:	mov	w25, #0x1                   	// #1
  408ca8:	subs	x22, x25, x24
  408cac:	b.hi	408bf0 <wcrtomb@plt+0x5f90>  // b.pmore
  408cb0:	mov	x28, x20
  408cb4:	b.cs	408cf4 <wcrtomb@plt+0x6094>  // b.hs, b.nlast
  408cb8:	ldr	x9, [x23, #8]
  408cbc:	add	x8, x26, x20
  408cc0:	add	x1, x8, x24
  408cc4:	add	x0, x8, x25
  408cc8:	add	x8, x20, x24
  408ccc:	sub	x8, x9, x8
  408cd0:	add	x2, x8, #0x1
  408cd4:	mov	x27, x23
  408cd8:	bl	402590 <memmove@plt>
  408cdc:	ldp	x26, x8, [x23]
  408ce0:	add	x28, x22, x20
  408ce4:	add	x8, x8, x22
  408ce8:	str	x8, [x23, #8]
  408cec:	ldr	x8, [sp, #8]
  408cf0:	ldr	x27, [x21, x8, lsl #3]
  408cf4:	add	x0, x26, x20
  408cf8:	mov	x1, x27
  408cfc:	mov	x2, x25
  408d00:	bl	402580 <memcpy@plt>
  408d04:	mov	x20, x28
  408d08:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d0c:	adrp	x27, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d10:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d14:	ldr	x8, [x8, #1664]
  408d18:	ldr	x22, [sp, #40]
  408d1c:	add	x20, x20, x24
  408d20:	cmp	x8, x20
  408d24:	b.hi	408b4c <wcrtomb@plt+0x5eec>  // b.pmore
  408d28:	ldr	x21, [sp, #24]
  408d2c:	b	409140 <wcrtomb@plt+0x64e0>
  408d30:	ldr	x24, [x19, #24]
  408d34:	cbz	x24, 408030 <wcrtomb@plt+0x53d0>
  408d38:	ldr	x8, [x19, #32]
  408d3c:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d40:	ldrb	w9, [x9, #1624]
  408d44:	sub	x25, x8, #0x1
  408d48:	cbz	w9, 408d70 <wcrtomb@plt+0x6110>
  408d4c:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d50:	add	x20, x20, #0x658
  408d54:	ldr	x3, [x20, #8]
  408d58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d5c:	add	x0, x0, #0x448
  408d60:	mov	w1, #0x1                   	// #1
  408d64:	mov	w2, #0x1                   	// #1
  408d68:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408d6c:	strb	wzr, [x20]
  408d70:	cbz	x25, 408d8c <wcrtomb@plt+0x612c>
  408d74:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d78:	ldr	x3, [x8, #1632]
  408d7c:	mov	w1, #0x1                   	// #1
  408d80:	mov	x0, x24
  408d84:	mov	x2, x25
  408d88:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408d8c:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d90:	ldr	x3, [x20, #1632]
  408d94:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408d98:	add	x0, x0, #0x448
  408d9c:	mov	w1, #0x1                   	// #1
  408da0:	mov	w2, #0x1                   	// #1
  408da4:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408da8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408dac:	ldrb	w8, [x8, #1852]
  408db0:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  408db4:	ldr	x0, [x20, #1632]
  408db8:	bl	40c234 <wcrtomb@plt+0x95d4>
  408dbc:	b	408030 <wcrtomb@plt+0x53d0>
  408dc0:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408dc4:	ldr	x8, [x26, #1816]
  408dc8:	ldr	x27, [x19, #24]
  408dcc:	cbz	x8, 40938c <wcrtomb@plt+0x672c>
  408dd0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408dd4:	str	xzr, [x8, #1808]
  408dd8:	b	4093b4 <wcrtomb@plt+0x6754>
  408ddc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408de0:	ldrb	w9, [x8, #1552]
  408de4:	cmp	w9, #0x1
  408de8:	b.ne	408030 <wcrtomb@plt+0x53d0>  // b.any
  408dec:	strb	wzr, [x8, #1552]
  408df0:	ldr	x8, [x21]
  408df4:	ldr	x9, [x19, #24]
  408df8:	mov	w10, #0x28                  	// #40
  408dfc:	madd	x19, x9, x10, x8
  408e00:	b	408034 <wcrtomb@plt+0x53d4>
  408e04:	ldr	w8, [x19, #24]
  408e08:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408e0c:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408e10:	add	x10, x10, #0x658
  408e14:	ldr	x9, [x9, #1120]
  408e18:	mov	x27, x23
  408e1c:	ldp	x23, x26, [x10, #32]
  408e20:	ldrb	w11, [x10]
  408e24:	ldr	x24, [x10, #8]
  408e28:	cmn	w8, #0x1
  408e2c:	csel	x20, x9, x8, eq  // eq = none
  408e30:	cbz	w11, 408e54 <wcrtomb@plt+0x61f4>
  408e34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408e38:	add	x0, x0, #0x448
  408e3c:	mov	w1, #0x1                   	// #1
  408e40:	mov	w2, #0x1                   	// #1
  408e44:	mov	x3, x24
  408e48:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408e4c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408e50:	strb	wzr, [x8, #1624]
  408e54:	cbz	x26, 4090ac <wcrtomb@plt+0x644c>
  408e58:	cmp	w20, #0x0
  408e5c:	b.le	408fe8 <wcrtomb@plt+0x6388>
  408e60:	mov	x21, xzr
  408e64:	sxtw	x20, w20
  408e68:	b	408e90 <wcrtomb@plt+0x6230>
  408e6c:	add	x0, sp, #0x70
  408e70:	mov	w1, #0x1                   	// #1
  408e74:	mov	x2, x25
  408e78:	mov	x3, x24
  408e7c:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408e80:	add	x21, x21, x25
  408e84:	subs	x26, x26, #0x1
  408e88:	add	x23, x23, #0x1
  408e8c:	b.eq	4090ac <wcrtomb@plt+0x644c>  // b.none
  408e90:	ldrsb	w22, [x23]
  408e94:	tbnz	w22, #31, 408eac <wcrtomb@plt+0x624c>
  408e98:	and	x25, x22, #0xff
  408e9c:	bl	4029e0 <__ctype_b_loc@plt>
  408ea0:	ldr	x8, [x0]
  408ea4:	ldrh	w8, [x8, x25, lsl #1]
  408ea8:	tbnz	w8, #14, 408ee8 <wcrtomb@plt+0x6288>
  408eac:	mov	w8, #0x5c                  	// #92
  408eb0:	strb	w8, [sp, #112]
  408eb4:	ldrb	w4, [x23]
  408eb8:	sub	w8, w4, #0x7
  408ebc:	cmp	w8, #0x6
  408ec0:	b.hi	408f20 <wcrtomb@plt+0x62c0>  // b.pmore
  408ec4:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408ec8:	add	x9, x9, #0xc35
  408ecc:	adr	x10, 408ee0 <wcrtomb@plt+0x6280>
  408ed0:	ldrb	w11, [x9, x8]
  408ed4:	add	x10, x10, x11, lsl #2
  408ed8:	ldr	x22, [sp, #40]
  408edc:	br	x10
  408ee0:	mov	w8, #0x61                  	// #97
  408ee4:	b	408f64 <wcrtomb@plt+0x6304>
  408ee8:	strb	w22, [sp, #112]
  408eec:	ldrb	w8, [x23]
  408ef0:	ldr	x22, [sp, #40]
  408ef4:	cmp	w8, #0x5c
  408ef8:	ldr	x8, [sp, #16]
  408efc:	b.ne	408f6c <wcrtomb@plt+0x630c>  // b.any
  408f00:	mov	w8, #0x5c                  	// #92
  408f04:	b	408f64 <wcrtomb@plt+0x6304>
  408f08:	mov	w8, #0x76                  	// #118
  408f0c:	b	408f64 <wcrtomb@plt+0x6304>
  408f10:	mov	w8, #0x74                  	// #116
  408f14:	b	408f64 <wcrtomb@plt+0x6304>
  408f18:	mov	w8, #0x6e                  	// #110
  408f1c:	b	408f64 <wcrtomb@plt+0x6304>
  408f20:	ldr	x22, [sp, #16]
  408f24:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408f28:	add	x3, x3, #0xab4
  408f2c:	mov	w1, #0x1                   	// #1
  408f30:	mov	w2, #0xb3                  	// #179
  408f34:	mov	x0, x22
  408f38:	bl	4025d0 <__sprintf_chk@plt>
  408f3c:	mov	x0, x22
  408f40:	bl	4025c0 <strlen@plt>
  408f44:	add	x8, x22, x0
  408f48:	ldr	x22, [sp, #40]
  408f4c:	b	408f6c <wcrtomb@plt+0x630c>
  408f50:	mov	w8, #0x62                  	// #98
  408f54:	b	408f64 <wcrtomb@plt+0x6304>
  408f58:	mov	w8, #0x66                  	// #102
  408f5c:	b	408f64 <wcrtomb@plt+0x6304>
  408f60:	mov	w8, #0x72                  	// #114
  408f64:	strb	w8, [sp, #113]
  408f68:	ldr	x8, [sp, #32]
  408f6c:	add	x9, sp, #0x70
  408f70:	sub	x25, x8, x9
  408f74:	add	x8, x25, x21
  408f78:	cmp	x8, x20
  408f7c:	b.cc	408e6c <wcrtomb@plt+0x620c>  // b.lo, b.ul, b.last
  408f80:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  408f84:	add	x0, x0, #0xb3a
  408f88:	mov	w1, #0x1                   	// #1
  408f8c:	mov	w2, #0x1                   	// #1
  408f90:	mov	x3, x24
  408f94:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408f98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  408f9c:	add	x0, x0, #0x448
  408fa0:	mov	w1, #0x1                   	// #1
  408fa4:	mov	w2, #0x1                   	// #1
  408fa8:	mov	x3, x24
  408fac:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408fb0:	mov	x21, xzr
  408fb4:	b	408e6c <wcrtomb@plt+0x620c>
  408fb8:	mov	w8, #0x76                  	// #118
  408fbc:	strb	w8, [sp, #113]
  408fc0:	ldr	x8, [sp, #32]
  408fc4:	add	x9, sp, #0x70
  408fc8:	sub	x2, x8, x9
  408fcc:	add	x0, sp, #0x70
  408fd0:	mov	w1, #0x1                   	// #1
  408fd4:	mov	x3, x24
  408fd8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  408fdc:	subs	x26, x26, #0x1
  408fe0:	add	x23, x23, #0x1
  408fe4:	b.eq	4090ac <wcrtomb@plt+0x644c>  // b.none
  408fe8:	ldrsb	w20, [x23]
  408fec:	tbnz	w20, #31, 409004 <wcrtomb@plt+0x63a4>
  408ff0:	and	x21, x20, #0xff
  408ff4:	bl	4029e0 <__ctype_b_loc@plt>
  408ff8:	ldr	x8, [x0]
  408ffc:	ldrh	w8, [x8, x21, lsl #1]
  409000:	tbnz	w8, #14, 40903c <wcrtomb@plt+0x63dc>
  409004:	mov	w8, #0x5c                  	// #92
  409008:	strb	w8, [sp, #112]
  40900c:	ldrb	w4, [x23]
  409010:	sub	w8, w4, #0x7
  409014:	cmp	w8, #0x6
  409018:	b.hi	409060 <wcrtomb@plt+0x6400>  // b.pmore
  40901c:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409020:	add	x9, x9, #0xc2e
  409024:	adr	x10, 408fb8 <wcrtomb@plt+0x6358>
  409028:	ldrb	w11, [x9, x8]
  40902c:	add	x10, x10, x11, lsl #2
  409030:	br	x10
  409034:	mov	w8, #0x61                  	// #97
  409038:	b	408fbc <wcrtomb@plt+0x635c>
  40903c:	strb	w20, [sp, #112]
  409040:	ldrb	w8, [x23]
  409044:	cmp	w8, #0x5c
  409048:	ldr	x8, [sp, #16]
  40904c:	b.ne	408fc4 <wcrtomb@plt+0x6364>  // b.any
  409050:	mov	w8, #0x5c                  	// #92
  409054:	b	408fbc <wcrtomb@plt+0x635c>
  409058:	mov	w8, #0x74                  	// #116
  40905c:	b	408fbc <wcrtomb@plt+0x635c>
  409060:	ldr	x20, [sp, #16]
  409064:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409068:	add	x3, x3, #0xab4
  40906c:	mov	w1, #0x1                   	// #1
  409070:	mov	w2, #0xb3                  	// #179
  409074:	mov	x0, x20
  409078:	bl	4025d0 <__sprintf_chk@plt>
  40907c:	mov	x0, x20
  409080:	bl	4025c0 <strlen@plt>
  409084:	add	x8, x20, x0
  409088:	b	408fc4 <wcrtomb@plt+0x6364>
  40908c:	mov	w8, #0x62                  	// #98
  409090:	b	408fbc <wcrtomb@plt+0x635c>
  409094:	mov	w8, #0x6e                  	// #110
  409098:	b	408fbc <wcrtomb@plt+0x635c>
  40909c:	mov	w8, #0x66                  	// #102
  4090a0:	b	408fbc <wcrtomb@plt+0x635c>
  4090a4:	mov	w8, #0x72                  	// #114
  4090a8:	b	408fbc <wcrtomb@plt+0x635c>
  4090ac:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4090b0:	add	x0, x0, #0xd70
  4090b4:	mov	w1, #0x1                   	// #1
  4090b8:	mov	w2, #0x1                   	// #1
  4090bc:	mov	x3, x24
  4090c0:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4090c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4090c8:	add	x0, x0, #0x448
  4090cc:	mov	w1, #0x1                   	// #1
  4090d0:	mov	w2, #0x1                   	// #1
  4090d4:	mov	x3, x24
  4090d8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4090dc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4090e0:	ldrb	w8, [x8, #1852]
  4090e4:	cbz	w8, 4090f0 <wcrtomb@plt+0x6490>
  4090e8:	mov	x0, x24
  4090ec:	bl	40c234 <wcrtomb@plt+0x95d4>
  4090f0:	ldr	x21, [sp, #24]
  4090f4:	mov	x23, x27
  4090f8:	b	408030 <wcrtomb@plt+0x53d0>
  4090fc:	ldr	x9, [x9, #16]
  409100:	udiv	x10, x8, x9
  409104:	msub	x8, x10, x9, x8
  409108:	cmp	x8, #0x0
  40910c:	cset	w0, eq  // eq = none
  409110:	b	408020 <wcrtomb@plt+0x53c0>
  409114:	ldr	x9, [x23, #8]
  409118:	cmp	x9, #0x1
  40911c:	b.lt	409140 <wcrtomb@plt+0x64e0>  // b.tstop
  409120:	ldr	x8, [x23]
  409124:	add	x9, x8, x9
  409128:	ldr	x10, [x19, #24]
  40912c:	ldrb	w11, [x8]
  409130:	ldrb	w10, [x10, x11]
  409134:	strb	w10, [x8], #1
  409138:	cmp	x8, x9
  40913c:	b.cc	409128 <wcrtomb@plt+0x64c8>  // b.lo, b.ul, b.last
  409140:	ldrb	w8, [x28, #1872]
  409144:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  409148:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40914c:	add	x8, x8, #0x670
  409150:	ldp	x22, x21, [x8]
  409154:	ldr	x20, [x8, #16]
  409158:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40915c:	ldr	x1, [x8, #1272]
  409160:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409164:	add	x0, x0, #0xcf3
  409168:	bl	402b50 <fputs_unlocked@plt>
  40916c:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  409170:	cmp	x21, #0x0
  409174:	csel	x21, x22, x21, eq  // eq = none
  409178:	ldrb	w0, [x21], #1
  40917c:	sub	x20, x20, #0x1
  409180:	bl	406c3c <wcrtomb@plt+0x3fdc>
  409184:	cbnz	x20, 409178 <wcrtomb@plt+0x6518>
  409188:	b	409b18 <wcrtomb@plt+0x6eb8>
  40918c:	mov	w0, #0x33                  	// #51
  409190:	bl	416ff4 <wcrtomb@plt+0x14394>
  409194:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409198:	ldr	q0, [x9, #2880]
  40919c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4091a0:	add	x8, x8, #0x700
  4091a4:	mov	w9, #0x1                   	// #1
  4091a8:	stp	x0, x0, [x8]
  4091ac:	str	q0, [x8, #16]
  4091b0:	strb	w9, [x8, #32]
  4091b4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4091b8:	add	x8, x8, #0x724
  4091bc:	str	xzr, [x8]
  4091c0:	cbnz	w20, 408280 <wcrtomb@plt+0x5620>
  4091c4:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4091c8:	add	x24, x24, #0x670
  4091cc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4091d0:	add	x1, x1, #0x3e3
  4091d4:	mov	w2, #0x1                   	// #1
  4091d8:	mov	x0, x24
  4091dc:	bl	40a538 <wcrtomb@plt+0x78d8>
  4091e0:	ldr	x0, [x24, #8]
  4091e4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4091e8:	add	x1, x1, #0xfe2
  4091ec:	bl	402780 <popen@plt>
  4091f0:	mov	x24, x0
  4091f4:	cbz	x24, 409ed4 <wcrtomb@plt+0x7274>
  4091f8:	ldrb	w8, [x24]
  4091fc:	tbnz	w8, #4, 409284 <wcrtomb@plt+0x6624>
  409200:	cbnz	w20, 409210 <wcrtomb@plt+0x65b0>
  409204:	b	409250 <wcrtomb@plt+0x65f0>
  409208:	ldrb	w8, [x24]
  40920c:	tbnz	w8, #4, 409284 <wcrtomb@plt+0x6624>
  409210:	add	x0, sp, #0x70
  409214:	mov	w1, #0x1                   	// #1
  409218:	mov	w2, #0x1000                	// #4096
  40921c:	mov	x3, x24
  409220:	bl	402990 <fread_unlocked@plt>
  409224:	cmp	w0, #0x1
  409228:	b.lt	409208 <wcrtomb@plt+0x65a8>  // b.tstop
  40922c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409230:	ldr	x3, [x8, #1632]
  409234:	sxtw	x2, w0
  409238:	add	x0, sp, #0x70
  40923c:	mov	w1, #0x1                   	// #1
  409240:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409244:	b	409208 <wcrtomb@plt+0x65a8>
  409248:	ldrb	w8, [x24]
  40924c:	tbnz	w8, #4, 409284 <wcrtomb@plt+0x6624>
  409250:	add	x0, sp, #0x70
  409254:	mov	w1, #0x1                   	// #1
  409258:	mov	w2, #0x1000                	// #4096
  40925c:	mov	x3, x24
  409260:	bl	402990 <fread_unlocked@plt>
  409264:	cmp	w0, #0x1
  409268:	b.lt	409248 <wcrtomb@plt+0x65e8>  // b.tstop
  40926c:	sxtw	x2, w0
  409270:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409274:	add	x0, x0, #0x700
  409278:	add	x1, sp, #0x70
  40927c:	bl	40a538 <wcrtomb@plt+0x78d8>
  409280:	b	409248 <wcrtomb@plt+0x65e8>
  409284:	mov	x0, x24
  409288:	bl	402b80 <pclose@plt>
  40928c:	cbz	w20, 4092ac <wcrtomb@plt+0x664c>
  409290:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409294:	ldrb	w8, [x8, #1852]
  409298:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  40929c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4092a0:	ldr	x0, [x8, #1632]
  4092a4:	bl	40c234 <wcrtomb@plt+0x95d4>
  4092a8:	b	408030 <wcrtomb@plt+0x53d0>
  4092ac:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4092b0:	ldr	x9, [x8, #1808]
  4092b4:	cbz	x9, 4092dc <wcrtomb@plt+0x667c>
  4092b8:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4092bc:	ldr	x10, [x10, #1800]
  4092c0:	sub	x9, x9, #0x1
  4092c4:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4092c8:	ldrb	w11, [x11, #1096]
  4092cc:	ldrb	w10, [x10, x9]
  4092d0:	cmp	w10, w11
  4092d4:	b.ne	4092dc <wcrtomb@plt+0x667c>  // b.any
  4092d8:	str	x9, [x8, #1808]
  4092dc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4092e0:	add	x8, x8, #0x670
  4092e4:	ldp	q4, q0, [x8, #16]
  4092e8:	ldp	q1, q2, [x8, #144]
  4092ec:	ldr	q3, [x8, #176]
  4092f0:	ldr	q5, [x8]
  4092f4:	str	q0, [x8, #176]
  4092f8:	stp	q1, q2, [x8]
  4092fc:	str	q3, [x8, #32]
  409300:	stp	q5, q4, [x8, #144]
  409304:	b	408030 <wcrtomb@plt+0x53d0>
  409308:	ldr	x24, [x23]
  40930c:	cbz	x24, 408710 <wcrtomb@plt+0x5ab0>
  409310:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409314:	ldr	x25, [x23, #8]
  409318:	ldrb	w8, [x20, #1624]
  40931c:	ldrb	w21, [x23, #24]
  409320:	cbz	w8, 40934c <wcrtomb@plt+0x66ec>
  409324:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409328:	add	x22, x22, #0x658
  40932c:	ldr	x3, [x22, #8]
  409330:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409334:	add	x0, x0, #0x448
  409338:	mov	w1, #0x1                   	// #1
  40933c:	mov	w2, #0x1                   	// #1
  409340:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409344:	strb	wzr, [x22]
  409348:	ldr	x22, [sp, #40]
  40934c:	cbz	x25, 409368 <wcrtomb@plt+0x6708>
  409350:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409354:	ldr	x3, [x8, #1632]
  409358:	mov	w1, #0x1                   	// #1
  40935c:	mov	x0, x24
  409360:	mov	x2, x25
  409364:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409368:	cbz	w21, 409830 <wcrtomb@plt+0x6bd0>
  40936c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409370:	ldr	x3, [x8, #1632]
  409374:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409378:	add	x0, x0, #0x448
  40937c:	mov	w1, #0x1                   	// #1
  409380:	mov	w2, #0x1                   	// #1
  409384:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409388:	b	409838 <wcrtomb@plt+0x6bd8>
  40938c:	mov	w0, #0x33                  	// #51
  409390:	bl	416ff4 <wcrtomb@plt+0x14394>
  409394:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409398:	ldr	q0, [x9, #2880]
  40939c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4093a0:	add	x8, x8, #0x700
  4093a4:	mov	w9, #0x1                   	// #1
  4093a8:	stp	x0, x0, [x8]
  4093ac:	str	q0, [x8, #16]
  4093b0:	strb	w9, [x8, #32]
  4093b4:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4093b8:	add	x24, x24, #0x638
  4093bc:	ldur	x8, [x24, #92]
  4093c0:	ldp	x1, x2, [x24, #64]
  4093c4:	mov	x3, xzr
  4093c8:	mov	x4, x24
  4093cc:	stur	x8, [x24, #236]
  4093d0:	ldrb	w8, [x27, #32]
  4093d4:	ldr	x0, [x27]
  4093d8:	lsr	w8, w8, #4
  4093dc:	add	w5, w8, #0x1
  4093e0:	bl	40af44 <wcrtomb@plt+0x82e4>
  4093e4:	cbz	w0, 409ad0 <wcrtomb@plt+0x6e70>
  4093e8:	ldrb	w8, [x28, #1872]
  4093ec:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4093f0:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4093f4:	add	x28, x28, #0x640
  4093f8:	cbz	w8, 4094b4 <wcrtomb@plt+0x6854>
  4093fc:	ldr	x8, [x23, #1592]
  409400:	cbz	x8, 4094b4 <wcrtomb@plt+0x6854>
  409404:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409408:	ldr	x8, [x20, #1600]
  40940c:	ldr	x8, [x8]
  409410:	cmn	x8, #0x1
  409414:	b.eq	40942c <wcrtomb@plt+0x67cc>  // b.none
  409418:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40941c:	add	x0, x0, #0xd72
  409420:	bl	402980 <puts@plt>
  409424:	ldr	x8, [x23, #1592]
  409428:	cbz	x8, 4094b4 <wcrtomb@plt+0x6854>
  40942c:	mov	x25, xzr
  409430:	b	409450 <wcrtomb@plt+0x67f0>
  409434:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409438:	add	x0, x0, #0xd9e
  40943c:	bl	402980 <puts@plt>
  409440:	ldr	x8, [x23, #1592]
  409444:	add	x25, x25, #0x1
  409448:	cmp	x8, x25
  40944c:	b.ls	4094b4 <wcrtomb@plt+0x6854>  // b.plast
  409450:	ldr	x8, [x20, #1600]
  409454:	ldr	x3, [x8, x25, lsl #3]
  409458:	cmn	x3, #0x1
  40945c:	b.eq	4094b4 <wcrtomb@plt+0x6854>  // b.none
  409460:	ldr	x8, [x28, #8]
  409464:	lsl	x21, x25, #3
  409468:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40946c:	add	x1, x1, #0xd8a
  409470:	ldr	w4, [x8, x21]
  409474:	mov	w0, #0x1                   	// #1
  409478:	mov	w2, w25
  40947c:	bl	4027e0 <__printf_chk@plt>
  409480:	ldp	x8, x9, [x28]
  409484:	ldr	x8, [x8, x21]
  409488:	ldr	x9, [x9, x21]
  40948c:	subs	x1, x9, x8
  409490:	b.eq	409434 <wcrtomb@plt+0x67d4>  // b.none
  409494:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409498:	ldr	x9, [x9, #1656]
  40949c:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4094a0:	ldr	x3, [x10, #1272]
  4094a4:	mov	w2, #0x1                   	// #1
  4094a8:	add	x0, x9, x8
  4094ac:	bl	4025b0 <fwrite_unlocked@plt>
  4094b0:	b	409434 <wcrtomb@plt+0x67d4>
  4094b4:	ldr	x8, [x27, #8]
  4094b8:	cbnz	x8, 4095a0 <wcrtomb@plt+0x6940>
  4094bc:	ldr	x8, [x27, #16]
  4094c0:	cmp	x8, #0x1
  4094c4:	b.hi	4095a0 <wcrtomb@plt+0x6940>  // b.pmore
  4094c8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4094cc:	ldr	x8, [x8, #1600]
  4094d0:	ldr	x8, [x8]
  4094d4:	cbnz	x8, 40955c <wcrtomb@plt+0x68fc>
  4094d8:	ldrb	w9, [x27, #32]
  4094dc:	tbnz	w9, #0, 40955c <wcrtomb@plt+0x68fc>
  4094e0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4094e4:	add	x8, x8, #0x610
  4094e8:	ldr	x9, [x8, #56]
  4094ec:	mov	w10, #0x1                   	// #1
  4094f0:	strb	w10, [x8]
  4094f4:	ldp	x11, x12, [x8, #104]
  4094f8:	ldr	x10, [x9]
  4094fc:	add	x11, x11, x10
  409500:	sub	x10, x12, x10
  409504:	stp	x11, x10, [x8, #104]
  409508:	ldr	x9, [x9]
  40950c:	ldr	x10, [x8, #120]
  409510:	sub	x9, x10, x9
  409514:	str	x9, [x8, #120]
  409518:	b	40958c <wcrtomb@plt+0x692c>
  40951c:	ldr	x21, [sp, #24]
  409520:	b	408034 <wcrtomb@plt+0x53d4>
  409524:	ldr	x0, [sp, #56]
  409528:	bl	402a10 <free@plt>
  40952c:	b	408030 <wcrtomb@plt+0x53d0>
  409530:	ldr	x0, [x8, #24]
  409534:	b	408238 <wcrtomb@plt+0x55d8>
  409538:	ldr	x10, [x8, #8]
  40953c:	subs	x9, x9, x10
  409540:	b.cc	40822c <wcrtomb@plt+0x55cc>  // b.lo, b.ul, b.last
  409544:	ldr	x8, [x8, #16]
  409548:	udiv	x10, x9, x8
  40954c:	msub	x8, x10, x8, x9
  409550:	b	409108 <wcrtomb@plt+0x64a8>
  409554:	ldr	x8, [x8, #8]
  409558:	b	408210 <wcrtomb@plt+0x55b0>
  40955c:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409560:	add	x9, x9, #0x648
  409564:	ldr	x10, [x9]
  409568:	ldr	x9, [x9, #56]
  40956c:	ldr	x10, [x10]
  409570:	cmp	x10, x9
  409574:	b.ne	4095a0 <wcrtomb@plt+0x6940>  // b.any
  409578:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40957c:	add	x9, x9, #0x610
  409580:	mov	w10, #0x1                   	// #1
  409584:	strb	w10, [x9]
  409588:	str	x8, [x9, #112]
  40958c:	ldr	x21, [sp, #24]
  409590:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409594:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409598:	add	x23, x23, #0x678
  40959c:	b	4097a4 <wcrtomb@plt+0x6b44>
  4095a0:	mov	x21, xzr
  4095a4:	mov	x26, xzr
  4095a8:	mov	x25, xzr
  4095ac:	ldp	x8, x9, [x28]
  4095b0:	ldr	x22, [x8]
  4095b4:	ldr	x20, [x9]
  4095b8:	subs	x2, x22, x25
  4095bc:	b.ls	4095d8 <wcrtomb@plt+0x6978>  // b.plast
  4095c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4095c4:	add	x0, x0, #0x678
  4095c8:	ldr	x8, [x0], #136
  4095cc:	add	x1, x8, x25
  4095d0:	bl	40a538 <wcrtomb@plt+0x78d8>
  4095d4:	mov	x25, x22
  4095d8:	cmp	x22, x26
  4095dc:	sub	x26, x20, x22
  4095e0:	b.hi	409604 <wcrtomb@plt+0x69a4>  // b.pmore
  4095e4:	cbz	x21, 409604 <wcrtomb@plt+0x69a4>
  4095e8:	cbnz	x26, 409604 <wcrtomb@plt+0x69a4>
  4095ec:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4095f0:	ldr	x8, [x8, #1664]
  4095f4:	cmp	x25, x8
  4095f8:	b.cs	409730 <wcrtomb@plt+0x6ad0>  // b.hs, b.nlast
  4095fc:	mov	w26, #0x1                   	// #1
  409600:	b	409618 <wcrtomb@plt+0x69b8>
  409604:	ldr	x8, [x27, #16]
  409608:	add	x21, x21, #0x1
  40960c:	cmp	x21, x8
  409610:	b.cs	40963c <wcrtomb@plt+0x69dc>  // b.hs, b.nlast
  409614:	cbz	x26, 4095ec <wcrtomb@plt+0x698c>
  409618:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40961c:	add	x0, x0, #0x678
  409620:	ldr	x8, [x0], #136
  409624:	mov	x2, x26
  409628:	add	x1, x8, x22
  40962c:	bl	40a538 <wcrtomb@plt+0x78d8>
  409630:	add	x25, x26, x22
  409634:	ldr	x22, [sp, #40]
  409638:	b	4096f0 <wcrtomb@plt+0x6a90>
  40963c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409640:	mov	w9, #0x1                   	// #1
  409644:	strb	w9, [x8, #1552]
  409648:	ldr	x22, [x27, #8]
  40964c:	cbz	x22, 4096e0 <wcrtomb@plt+0x6a80>
  409650:	mov	w8, wzr
  409654:	b	409678 <wcrtomb@plt+0x6a18>
  409658:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40965c:	ldr	x9, [x9, #1656]
  409660:	mov	w2, w25
  409664:	add	x0, x9, x8
  409668:	bl	40a890 <wcrtomb@plt+0x7c30>
  40966c:	mov	w8, wzr
  409670:	ldr	x22, [x22, #24]
  409674:	cbz	x22, 4096e0 <wcrtomb@plt+0x6a80>
  409678:	ldp	w26, w9, [x22, #16]
  40967c:	ldr	x1, [x22, #8]
  409680:	tst	w9, #0xc
  409684:	csel	w8, w8, wzr, eq  // eq = none
  409688:	orr	w25, w8, w9
  40968c:	cbz	x1, 4096a0 <wcrtomb@plt+0x6a40>
  409690:	ldr	x0, [x22]
  409694:	mov	w2, w25
  409698:	bl	40a890 <wcrtomb@plt+0x7c30>
  40969c:	and	w25, w25, #0xfffffff3
  4096a0:	tbnz	w26, #31, 40966c <wcrtomb@plt+0x6a0c>
  4096a4:	ldr	x8, [x23, #1592]
  4096a8:	cmp	x8, x26
  4096ac:	b.ls	40966c <wcrtomb@plt+0x6a0c>  // b.plast
  4096b0:	ldp	x9, x8, [x28]
  4096b4:	lsl	x10, x26, #3
  4096b8:	ldr	x11, [x8, x10]
  4096bc:	ldr	x8, [x9, x10]
  4096c0:	subs	x1, x11, x8
  4096c4:	b.ne	409658 <wcrtomb@plt+0x69f8>  // b.any
  4096c8:	ldrb	w8, [x22, #20]
  4096cc:	and	w9, w25, #0xc
  4096d0:	tst	w8, #0xc
  4096d4:	csel	w8, wzr, w9, eq  // eq = none
  4096d8:	ldr	x22, [x22, #24]
  4096dc:	cbnz	x22, 409678 <wcrtomb@plt+0x6a18>
  4096e0:	ldrb	w8, [x27, #32]
  4096e4:	ldr	x22, [sp, #40]
  4096e8:	mov	x25, x20
  4096ec:	tbz	w8, #0, 409734 <wcrtomb@plt+0x6ad4>
  4096f0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4096f4:	ldr	x2, [x8, #1664]
  4096f8:	cmp	x25, x2
  4096fc:	b.hi	409734 <wcrtomb@plt+0x6ad4>  // b.pmore
  409700:	ldr	x8, [x24, #16]
  409704:	ldrb	w9, [x27, #32]
  409708:	ldr	x0, [x27]
  40970c:	ldr	x1, [x24, #64]
  409710:	ldr	x26, [x8]
  409714:	lsr	w8, w9, #4
  409718:	add	w5, w8, #0x1
  40971c:	mov	x3, x25
  409720:	mov	x4, x24
  409724:	bl	40af44 <wcrtomb@plt+0x82e4>
  409728:	cbnz	w0, 4095ac <wcrtomb@plt+0x694c>
  40972c:	b	409734 <wcrtomb@plt+0x6ad4>
  409730:	ldr	x22, [sp, #40]
  409734:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409738:	ldr	x8, [x8, #1664]
  40973c:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409740:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409744:	add	x23, x23, #0x678
  409748:	subs	x2, x8, x25
  40974c:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409750:	b.ls	409764 <wcrtomb@plt+0x6b04>  // b.plast
  409754:	mov	x0, x23
  409758:	ldr	x8, [x0], #136
  40975c:	add	x1, x8, x25
  409760:	bl	40a538 <wcrtomb@plt+0x78d8>
  409764:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409768:	add	x8, x8, #0x670
  40976c:	ldrb	w9, [x8, #32]
  409770:	ldp	q0, q3, [x8, #144]
  409774:	ldp	q2, q1, [x8]
  409778:	ldr	w10, [x8, #32]
  40977c:	strb	w9, [x8, #176]
  409780:	ldr	w9, [x8, #176]
  409784:	stp	q0, q3, [x8]
  409788:	stp	q2, q1, [x8, #144]
  40978c:	str	w10, [x8, #176]
  409790:	str	w9, [x8, #32]
  409794:	ldr	x8, [x27, #16]
  409798:	cmp	x21, x8
  40979c:	ldr	x21, [sp, #24]
  4097a0:	b.cc	409ad0 <wcrtomb@plt+0x6e70>  // b.lo, b.ul, b.last
  4097a4:	ldrb	w8, [x27, #32]
  4097a8:	tbz	w8, #1, 40987c <wcrtomb@plt+0x6c1c>
  4097ac:	ldr	x24, [x23]
  4097b0:	cbz	x24, 40987c <wcrtomb@plt+0x6c1c>
  4097b4:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4097b8:	ldr	x25, [x23, #8]
  4097bc:	ldrb	w8, [x20, #1624]
  4097c0:	ldrb	w21, [x23, #24]
  4097c4:	cbz	w8, 4097f0 <wcrtomb@plt+0x6b90>
  4097c8:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4097cc:	add	x22, x22, #0x658
  4097d0:	ldr	x3, [x22, #8]
  4097d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4097d8:	add	x0, x0, #0x448
  4097dc:	mov	w1, #0x1                   	// #1
  4097e0:	mov	w2, #0x1                   	// #1
  4097e4:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4097e8:	strb	wzr, [x22]
  4097ec:	ldr	x22, [sp, #40]
  4097f0:	cbz	x25, 40980c <wcrtomb@plt+0x6bac>
  4097f4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4097f8:	ldr	x3, [x8, #1632]
  4097fc:	mov	w1, #0x1                   	// #1
  409800:	mov	x0, x24
  409804:	mov	x2, x25
  409808:	bl	40bfe8 <wcrtomb@plt+0x9388>
  40980c:	cbz	w21, 409858 <wcrtomb@plt+0x6bf8>
  409810:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409814:	ldr	x3, [x8, #1632]
  409818:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40981c:	add	x0, x0, #0x448
  409820:	mov	w1, #0x1                   	// #1
  409824:	mov	w2, #0x1                   	// #1
  409828:	bl	40bfe8 <wcrtomb@plt+0x9388>
  40982c:	b	409860 <wcrtomb@plt+0x6c00>
  409830:	mov	w8, #0x1                   	// #1
  409834:	strb	w8, [x20, #1624]
  409838:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40983c:	ldrb	w8, [x8, #1852]
  409840:	ldr	x21, [sp, #24]
  409844:	cbz	w8, 408710 <wcrtomb@plt+0x5ab0>
  409848:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40984c:	ldr	x0, [x8, #1632]
  409850:	bl	40c234 <wcrtomb@plt+0x95d4>
  409854:	b	408710 <wcrtomb@plt+0x5ab0>
  409858:	mov	w8, #0x1                   	// #1
  40985c:	strb	w8, [x20, #1624]
  409860:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409864:	ldrb	w8, [x8, #1852]
  409868:	ldr	x21, [sp, #24]
  40986c:	cbz	w8, 40987c <wcrtomb@plt+0x6c1c>
  409870:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409874:	ldr	x0, [x8, #1632]
  409878:	bl	40c234 <wcrtomb@plt+0x95d4>
  40987c:	ldrb	w8, [x27, #32]
  409880:	tbz	w8, #3, 40998c <wcrtomb@plt+0x6d2c>
  409884:	ldr	x8, [x26, #1816]
  409888:	cbz	x8, 409898 <wcrtomb@plt+0x6c38>
  40988c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409890:	str	xzr, [x8, #1808]
  409894:	b	4098c0 <wcrtomb@plt+0x6c60>
  409898:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40989c:	mov	w0, #0x33                  	// #51
  4098a0:	add	x20, x20, #0x700
  4098a4:	bl	416ff4 <wcrtomb@plt+0x14394>
  4098a8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4098ac:	ldr	q0, [x8, #2880]
  4098b0:	mov	w8, #0x1                   	// #1
  4098b4:	stp	x0, x0, [x20]
  4098b8:	strb	w8, [x20, #32]
  4098bc:	str	q0, [x20, #16]
  4098c0:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4098c4:	add	x24, x24, #0x670
  4098c8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4098cc:	add	x1, x1, #0x3e3
  4098d0:	mov	w2, #0x1                   	// #1
  4098d4:	mov	x0, x24
  4098d8:	stur	xzr, [x24, #180]
  4098dc:	bl	40a538 <wcrtomb@plt+0x78d8>
  4098e0:	ldr	x0, [x24, #8]
  4098e4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4098e8:	add	x1, x1, #0xfe2
  4098ec:	bl	402780 <popen@plt>
  4098f0:	cbz	x0, 409ef0 <wcrtomb@plt+0x7290>
  4098f4:	mov	x25, x0
  4098f8:	ldrb	w8, [x25]
  4098fc:	tbnz	w8, #4, 409934 <wcrtomb@plt+0x6cd4>
  409900:	add	x0, sp, #0x70
  409904:	mov	w1, #0x1                   	// #1
  409908:	mov	w2, #0x1000                	// #4096
  40990c:	mov	x3, x25
  409910:	bl	402990 <fread_unlocked@plt>
  409914:	cmp	w0, #0x1
  409918:	b.lt	4098f8 <wcrtomb@plt+0x6c98>  // b.tstop
  40991c:	sxtw	x2, w0
  409920:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409924:	add	x0, x0, #0x700
  409928:	add	x1, sp, #0x70
  40992c:	bl	40a538 <wcrtomb@plt+0x78d8>
  409930:	b	4098f8 <wcrtomb@plt+0x6c98>
  409934:	mov	x0, x25
  409938:	bl	402b80 <pclose@plt>
  40993c:	ldp	q1, q2, [x24, #144]
  409940:	ldp	q3, q0, [x24, #16]
  409944:	ldr	q4, [x24]
  409948:	ldr	q5, [x24, #176]
  40994c:	stp	q1, q2, [x24]
  409950:	ldr	x8, [x24, #16]
  409954:	stp	q4, q3, [x24, #144]
  409958:	str	q5, [x24, #32]
  40995c:	str	q0, [x24, #176]
  409960:	cbz	x8, 40998c <wcrtomb@plt+0x6d2c>
  409964:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409968:	ldr	x9, [x9, #1656]
  40996c:	sub	x8, x8, #0x1
  409970:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409974:	ldrb	w10, [x10, #1096]
  409978:	ldrb	w9, [x9, x8]
  40997c:	cmp	w9, w10
  409980:	b.ne	40998c <wcrtomb@plt+0x6d2c>  // b.any
  409984:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409988:	str	x8, [x9, #1664]
  40998c:	ldrb	w8, [x27, #32]
  409990:	tbz	w8, #2, 409a3c <wcrtomb@plt+0x6ddc>
  409994:	ldr	x24, [x23]
  409998:	cbz	x24, 409a3c <wcrtomb@plt+0x6ddc>
  40999c:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4099a0:	ldr	x25, [x23, #8]
  4099a4:	ldrb	w8, [x20, #1624]
  4099a8:	ldrb	w21, [x23, #24]
  4099ac:	cbz	w8, 4099d8 <wcrtomb@plt+0x6d78>
  4099b0:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4099b4:	add	x22, x22, #0x658
  4099b8:	ldr	x3, [x22, #8]
  4099bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4099c0:	add	x0, x0, #0x448
  4099c4:	mov	w1, #0x1                   	// #1
  4099c8:	mov	w2, #0x1                   	// #1
  4099cc:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4099d0:	strb	wzr, [x22]
  4099d4:	ldr	x22, [sp, #40]
  4099d8:	cbz	x25, 4099f4 <wcrtomb@plt+0x6d94>
  4099dc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4099e0:	ldr	x3, [x8, #1632]
  4099e4:	mov	w1, #0x1                   	// #1
  4099e8:	mov	x0, x24
  4099ec:	mov	x2, x25
  4099f0:	bl	40bfe8 <wcrtomb@plt+0x9388>
  4099f4:	cbz	w21, 409a18 <wcrtomb@plt+0x6db8>
  4099f8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4099fc:	ldr	x3, [x8, #1632]
  409a00:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409a04:	add	x0, x0, #0x448
  409a08:	mov	w1, #0x1                   	// #1
  409a0c:	mov	w2, #0x1                   	// #1
  409a10:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409a14:	b	409a20 <wcrtomb@plt+0x6dc0>
  409a18:	mov	w8, #0x1                   	// #1
  409a1c:	strb	w8, [x20, #1624]
  409a20:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409a24:	ldrb	w8, [x8, #1852]
  409a28:	ldr	x21, [sp, #24]
  409a2c:	cbz	w8, 409a3c <wcrtomb@plt+0x6ddc>
  409a30:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409a34:	ldr	x0, [x8, #1632]
  409a38:	bl	40c234 <wcrtomb@plt+0x95d4>
  409a3c:	ldr	x20, [x27, #24]
  409a40:	cbz	x20, 409ad0 <wcrtomb@plt+0x6e70>
  409a44:	ldr	x24, [x23]
  409a48:	cbz	x24, 409ad0 <wcrtomb@plt+0x6e70>
  409a4c:	ldr	x25, [x23, #8]
  409a50:	ldrb	w8, [x20, #8]
  409a54:	ldrb	w21, [x23, #24]
  409a58:	cbz	w8, 409a78 <wcrtomb@plt+0x6e18>
  409a5c:	ldr	x3, [x20, #16]
  409a60:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409a64:	add	x0, x0, #0x448
  409a68:	mov	w1, #0x1                   	// #1
  409a6c:	mov	w2, #0x1                   	// #1
  409a70:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409a74:	strb	wzr, [x20, #8]
  409a78:	cbz	x25, 409a90 <wcrtomb@plt+0x6e30>
  409a7c:	ldr	x3, [x20, #16]
  409a80:	mov	w1, #0x1                   	// #1
  409a84:	mov	x0, x24
  409a88:	mov	x2, x25
  409a8c:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409a90:	cbz	w21, 409ab0 <wcrtomb@plt+0x6e50>
  409a94:	ldr	x3, [x20, #16]
  409a98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409a9c:	add	x0, x0, #0x448
  409aa0:	mov	w1, #0x1                   	// #1
  409aa4:	mov	w2, #0x1                   	// #1
  409aa8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409aac:	b	409ab8 <wcrtomb@plt+0x6e58>
  409ab0:	mov	w8, #0x1                   	// #1
  409ab4:	strb	w8, [x20, #8]
  409ab8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409abc:	ldrb	w8, [x8, #1852]
  409ac0:	ldr	x21, [sp, #24]
  409ac4:	cbz	w8, 409ad0 <wcrtomb@plt+0x6e70>
  409ac8:	ldr	x0, [x20, #16]
  409acc:	bl	40c234 <wcrtomb@plt+0x95d4>
  409ad0:	ldrb	w8, [x28, #1872]
  409ad4:	cbz	w8, 408030 <wcrtomb@plt+0x53d0>
  409ad8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409adc:	add	x8, x8, #0x670
  409ae0:	ldp	x22, x21, [x8]
  409ae4:	ldr	x20, [x8, #16]
  409ae8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409aec:	ldr	x1, [x8, #1272]
  409af0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409af4:	add	x0, x0, #0xcf3
  409af8:	bl	402b50 <fputs_unlocked@plt>
  409afc:	cbz	x20, 409b18 <wcrtomb@plt+0x6eb8>
  409b00:	cmp	x21, #0x0
  409b04:	csel	x21, x22, x21, eq  // eq = none
  409b08:	ldrb	w0, [x21], #1
  409b0c:	sub	x20, x20, #0x1
  409b10:	bl	406c3c <wcrtomb@plt+0x3fdc>
  409b14:	cbnz	x20, 409b08 <wcrtomb@plt+0x6ea8>
  409b18:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409b1c:	ldr	x0, [x8, #1272]
  409b20:	ldp	x8, x9, [x0, #40]
  409b24:	cmp	x8, x9
  409b28:	b.cs	409b48 <wcrtomb@plt+0x6ee8>  // b.hs, b.nlast
  409b2c:	add	x9, x8, #0x1
  409b30:	mov	w10, #0xa                   	// #10
  409b34:	str	x9, [x0, #40]
  409b38:	strb	w10, [x8]
  409b3c:	ldr	x21, [sp, #24]
  409b40:	ldr	x22, [sp, #40]
  409b44:	b	408030 <wcrtomb@plt+0x53d0>
  409b48:	mov	w1, #0xa                   	// #10
  409b4c:	bl	402960 <__overflow@plt>
  409b50:	b	409b3c <wcrtomb@plt+0x6edc>
  409b54:	mov	w1, #0xa                   	// #10
  409b58:	bl	402960 <__overflow@plt>
  409b5c:	b	408030 <wcrtomb@plt+0x53d0>
  409b60:	mov	w1, #0xa                   	// #10
  409b64:	bl	402960 <__overflow@plt>
  409b68:	b	408900 <wcrtomb@plt+0x5ca0>
  409b6c:	mov	w1, #0xa                   	// #10
  409b70:	bl	402960 <__overflow@plt>
  409b74:	ldr	x21, [sp, #24]
  409b78:	b	408034 <wcrtomb@plt+0x53d4>
  409b7c:	cbz	w8, 409b8c <wcrtomb@plt+0x6f2c>
  409b80:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409b84:	add	x0, x0, #0xd62
  409b88:	bl	402980 <puts@plt>
  409b8c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409b90:	ldrb	w8, [x8, #1856]
  409b94:	cbnz	w8, 409d14 <wcrtomb@plt+0x70b4>
  409b98:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409b9c:	add	x8, x8, #0x678
  409ba0:	ldr	x19, [x8]
  409ba4:	cbz	x19, 409d14 <wcrtomb@plt+0x70b4>
  409ba8:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409bac:	ldr	x20, [x8, #8]
  409bb0:	ldrb	w9, [x21, #1624]
  409bb4:	ldrb	w23, [x8, #24]
  409bb8:	cbz	w9, 409be0 <wcrtomb@plt+0x6f80>
  409bbc:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409bc0:	add	x22, x22, #0x658
  409bc4:	ldr	x3, [x22, #8]
  409bc8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409bcc:	add	x0, x0, #0x448
  409bd0:	mov	w1, #0x1                   	// #1
  409bd4:	mov	w2, #0x1                   	// #1
  409bd8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409bdc:	strb	wzr, [x22]
  409be0:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409be4:	cbz	x20, 409bfc <wcrtomb@plt+0x6f9c>
  409be8:	ldr	x3, [x22, #1632]
  409bec:	mov	w1, #0x1                   	// #1
  409bf0:	mov	x0, x19
  409bf4:	mov	x2, x20
  409bf8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409bfc:	cbz	w23, 409cf8 <wcrtomb@plt+0x7098>
  409c00:	ldr	x3, [x22, #1632]
  409c04:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c08:	add	x0, x0, #0x448
  409c0c:	mov	w1, #0x1                   	// #1
  409c10:	mov	w2, #0x1                   	// #1
  409c14:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409c18:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c1c:	ldrb	w8, [x8, #1852]
  409c20:	cbnz	w8, 409d0c <wcrtomb@plt+0x70ac>
  409c24:	b	409d14 <wcrtomb@plt+0x70b4>
  409c28:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c2c:	ldrb	w8, [x8, #1856]
  409c30:	cbz	w8, 409d3c <wcrtomb@plt+0x70dc>
  409c34:	bl	40a0e4 <wcrtomb@plt+0x7484>
  409c38:	ldr	w8, [x19, #24]
  409c3c:	cmn	w8, #0x1
  409c40:	csel	w0, wzr, w8, eq  // eq = none
  409c44:	b	409d18 <wcrtomb@plt+0x70b8>
  409c48:	ldr	w8, [x19, #16]
  409c4c:	cmp	w8, #0x1
  409c50:	b.eq	409ce0 <wcrtomb@plt+0x7080>  // b.none
  409c54:	ldr	x20, [x19, #24]
  409c58:	cbz	x20, 409ce0 <wcrtomb@plt+0x7080>
  409c5c:	ldr	x8, [x19, #32]
  409c60:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c64:	ldrb	w9, [x9, #1624]
  409c68:	sub	x19, x8, #0x1
  409c6c:	cbz	w9, 409c94 <wcrtomb@plt+0x7034>
  409c70:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c74:	add	x21, x21, #0x658
  409c78:	ldr	x3, [x21, #8]
  409c7c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c80:	add	x0, x0, #0x448
  409c84:	mov	w1, #0x1                   	// #1
  409c88:	mov	w2, #0x1                   	// #1
  409c8c:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409c90:	strb	wzr, [x21]
  409c94:	cbz	x19, 409cb0 <wcrtomb@plt+0x7050>
  409c98:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409c9c:	ldr	x3, [x8, #1632]
  409ca0:	mov	w1, #0x1                   	// #1
  409ca4:	mov	x0, x20
  409ca8:	mov	x2, x19
  409cac:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409cb0:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409cb4:	ldr	x3, [x19, #1632]
  409cb8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409cbc:	add	x0, x0, #0x448
  409cc0:	mov	w1, #0x1                   	// #1
  409cc4:	mov	w2, #0x1                   	// #1
  409cc8:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409ccc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409cd0:	ldrb	w8, [x8, #1852]
  409cd4:	cbz	w8, 409ce0 <wcrtomb@plt+0x7080>
  409cd8:	ldr	x0, [x19, #1632]
  409cdc:	bl	40c234 <wcrtomb@plt+0x95d4>
  409ce0:	ldrb	w8, [x28, #1872]
  409ce4:	cbz	w8, 409d14 <wcrtomb@plt+0x70b4>
  409ce8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409cec:	add	x0, x0, #0xd62
  409cf0:	bl	402980 <puts@plt>
  409cf4:	b	409d14 <wcrtomb@plt+0x70b4>
  409cf8:	mov	w8, #0x1                   	// #1
  409cfc:	strb	w8, [x21, #1624]
  409d00:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409d04:	ldrb	w8, [x8, #1852]
  409d08:	cbz	w8, 409d14 <wcrtomb@plt+0x70b4>
  409d0c:	ldr	x0, [x22, #1632]
  409d10:	bl	40c234 <wcrtomb@plt+0x95d4>
  409d14:	mov	w0, #0xffffffff            	// #-1
  409d18:	add	sp, sp, #0x1, lsl #12
  409d1c:	add	sp, sp, #0x110
  409d20:	ldp	x20, x19, [sp, #80]
  409d24:	ldp	x22, x21, [sp, #64]
  409d28:	ldp	x24, x23, [sp, #48]
  409d2c:	ldp	x26, x25, [sp, #32]
  409d30:	ldp	x28, x27, [sp, #16]
  409d34:	ldp	x29, x30, [sp], #96
  409d38:	ret
  409d3c:	ldr	x20, [x23]
  409d40:	cbz	x20, 409c34 <wcrtomb@plt+0x6fd4>
  409d44:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409d48:	ldr	x21, [x23, #8]
  409d4c:	ldrb	w8, [x22, #1624]
  409d50:	ldrb	w23, [x23, #24]
  409d54:	cbz	w8, 409d7c <wcrtomb@plt+0x711c>
  409d58:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409d5c:	add	x24, x24, #0x658
  409d60:	ldr	x3, [x24, #8]
  409d64:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409d68:	add	x0, x0, #0x448
  409d6c:	mov	w1, #0x1                   	// #1
  409d70:	mov	w2, #0x1                   	// #1
  409d74:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409d78:	strb	wzr, [x24]
  409d7c:	cbz	x21, 409d98 <wcrtomb@plt+0x7138>
  409d80:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409d84:	ldr	x3, [x8, #1632]
  409d88:	mov	w1, #0x1                   	// #1
  409d8c:	mov	x0, x20
  409d90:	mov	x2, x21
  409d94:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409d98:	cbz	w23, 409dbc <wcrtomb@plt+0x715c>
  409d9c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409da0:	ldr	x3, [x8, #1632]
  409da4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409da8:	add	x0, x0, #0x448
  409dac:	mov	w1, #0x1                   	// #1
  409db0:	mov	w2, #0x1                   	// #1
  409db4:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409db8:	b	409dc4 <wcrtomb@plt+0x7164>
  409dbc:	mov	w8, #0x1                   	// #1
  409dc0:	strb	w8, [x22, #1624]
  409dc4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409dc8:	ldrb	w8, [x8, #1852]
  409dcc:	cbz	w8, 409c34 <wcrtomb@plt+0x6fd4>
  409dd0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409dd4:	ldr	x0, [x8, #1632]
  409dd8:	bl	40c234 <wcrtomb@plt+0x95d4>
  409ddc:	b	409c34 <wcrtomb@plt+0x6fd4>
  409de0:	ldrb	w8, [x28, #1872]
  409de4:	cbz	w8, 409df4 <wcrtomb@plt+0x7194>
  409de8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409dec:	add	x0, x0, #0xd62
  409df0:	bl	402980 <puts@plt>
  409df4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409df8:	ldr	x9, [x8, #1664]
  409dfc:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e00:	ldr	w10, [x10, #2264]
  409e04:	mov	w0, #0xffffffff            	// #-1
  409e08:	sub	x19, x9, #0x1
  409e0c:	str	x19, [x8, #1664]
  409e10:	cbnz	w10, 409d18 <wcrtomb@plt+0x70b8>
  409e14:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e18:	ldrb	w8, [x8, #1856]
  409e1c:	cbnz	w8, 409d18 <wcrtomb@plt+0x70b8>
  409e20:	ldr	x20, [x23]
  409e24:	cbz	x20, 409d14 <wcrtomb@plt+0x70b4>
  409e28:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e2c:	ldrb	w8, [x21, #1624]
  409e30:	ldrb	w22, [x23, #24]
  409e34:	cbz	w8, 409e5c <wcrtomb@plt+0x71fc>
  409e38:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e3c:	add	x23, x23, #0x658
  409e40:	ldr	x3, [x23, #8]
  409e44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e48:	add	x0, x0, #0x448
  409e4c:	mov	w1, #0x1                   	// #1
  409e50:	mov	w2, #0x1                   	// #1
  409e54:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409e58:	strb	wzr, [x23]
  409e5c:	cbz	x19, 409e78 <wcrtomb@plt+0x7218>
  409e60:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e64:	ldr	x3, [x8, #1632]
  409e68:	mov	w1, #0x1                   	// #1
  409e6c:	mov	x0, x20
  409e70:	mov	x2, x19
  409e74:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409e78:	cbz	w22, 409e9c <wcrtomb@plt+0x723c>
  409e7c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e80:	ldr	x3, [x8, #1632]
  409e84:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409e88:	add	x0, x0, #0x448
  409e8c:	mov	w1, #0x1                   	// #1
  409e90:	mov	w2, #0x1                   	// #1
  409e94:	bl	40bfe8 <wcrtomb@plt+0x9388>
  409e98:	b	409ea4 <wcrtomb@plt+0x7244>
  409e9c:	mov	w8, #0x1                   	// #1
  409ea0:	strb	w8, [x21, #1624]
  409ea4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409ea8:	ldrb	w8, [x8, #1852]
  409eac:	cbz	w8, 409d14 <wcrtomb@plt+0x70b4>
  409eb0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409eb4:	ldr	x0, [x8, #1632]
  409eb8:	b	409d10 <wcrtomb@plt+0x70b0>
  409ebc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409ec0:	add	x0, x0, #0xd26
  409ec4:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  409ec8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409ecc:	add	x0, x0, #0xd41
  409ed0:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  409ed4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409ed8:	add	x1, x1, #0xd07
  409edc:	mov	w2, #0x5                   	// #5
  409ee0:	mov	x0, xzr
  409ee4:	bl	402b40 <dcgettext@plt>
  409ee8:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  409eec:	bl	4170f0 <wcrtomb@plt+0x14490>
  409ef0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409ef4:	add	x1, x1, #0xd07
  409ef8:	mov	w2, #0x5                   	// #5
  409efc:	bl	402b40 <dcgettext@plt>
  409f00:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  409f04:	stp	x29, x30, [sp, #-80]!
  409f08:	stp	x26, x25, [sp, #16]
  409f0c:	stp	x24, x23, [sp, #32]
  409f10:	stp	x22, x21, [sp, #48]
  409f14:	stp	x20, x19, [sp, #64]
  409f18:	mov	x19, x0
  409f1c:	ldr	x0, [x0, #184]
  409f20:	adrp	x8, 407000 <wcrtomb@plt+0x43a0>
  409f24:	add	x8, x8, #0xcdc
  409f28:	mov	x29, sp
  409f2c:	str	x8, [x19, #32]
  409f30:	cbz	x0, 40a0cc <wcrtomb@plt+0x746c>
  409f34:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409f38:	ldr	x8, [x24, #1880]
  409f3c:	cbz	x8, 40a07c <wcrtomb@plt+0x741c>
  409f40:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  409f44:	ldr	x8, [x23, #1632]
  409f48:	cbz	x8, 40a07c <wcrtomb@plt+0x741c>
  409f4c:	ldr	x20, [x19, #48]
  409f50:	bl	4026b0 <fileno@plt>
  409f54:	ldr	x8, [x23, #1632]
  409f58:	mov	w21, w0
  409f5c:	mov	x0, x8
  409f60:	bl	4026b0 <fileno@plt>
  409f64:	ldp	w1, w2, [x19, #80]
  409f68:	mov	w22, w0
  409f6c:	bl	402c00 <fchown@plt>
  409f70:	cmn	w0, #0x1
  409f74:	b.ne	409f88 <wcrtomb@plt+0x7328>  // b.any
  409f78:	ldr	w2, [x19, #84]
  409f7c:	mov	w1, #0xffffffff            	// #-1
  409f80:	mov	w0, w22
  409f84:	bl	402c00 <fchown@plt>
  409f88:	ldp	x2, x0, [x19, #40]
  409f8c:	ldr	w4, [x19, #72]
  409f90:	mov	w1, w21
  409f94:	mov	w3, w22
  409f98:	bl	40c930 <wcrtomb@plt+0x9cd0>
  409f9c:	ldr	x0, [x19, #184]
  409fa0:	bl	40c2a8 <wcrtomb@plt+0x9648>
  409fa4:	ldr	x0, [x23, #1632]
  409fa8:	bl	40c2a8 <wcrtomb@plt+0x9648>
  409fac:	ldr	x23, [x24, #1880]
  409fb0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  409fb4:	add	x1, x1, #0xdce
  409fb8:	mov	x0, x23
  409fbc:	bl	4029d0 <strcmp@plt>
  409fc0:	cbz	w0, 40a0ac <wcrtomb@plt+0x744c>
  409fc4:	mov	x0, x20
  409fc8:	bl	4025c0 <strlen@plt>
  409fcc:	mov	x22, x0
  409fd0:	mov	x0, x23
  409fd4:	bl	4025c0 <strlen@plt>
  409fd8:	mov	x21, x0
  409fdc:	mov	w1, #0x2a                  	// #42
  409fe0:	mov	x0, x23
  409fe4:	bl	402a50 <strchr@plt>
  409fe8:	cbz	x0, 40a00c <wcrtomb@plt+0x73ac>
  409fec:	sub	w23, w22, #0x1
  409ff0:	add	x0, x0, #0x1
  409ff4:	mov	w1, #0x2a                  	// #42
  409ff8:	mov	w25, w21
  409ffc:	bl	402a50 <strchr@plt>
  40a000:	add	w21, w21, w23
  40a004:	cbnz	x0, 409ff0 <wcrtomb@plt+0x7390>
  40a008:	add	w21, w23, w25
  40a00c:	add	w8, w21, #0x1
  40a010:	sxtw	x0, w8
  40a014:	bl	416dd4 <wcrtomb@plt+0x14174>
  40a018:	ldr	x23, [x24, #1880]
  40a01c:	mov	x21, x0
  40a020:	mov	w1, #0x2a                  	// #42
  40a024:	mov	x0, x23
  40a028:	bl	402a50 <strchr@plt>
  40a02c:	cbz	x0, 40a084 <wcrtomb@plt+0x7424>
  40a030:	mov	x24, x0
  40a034:	sxtw	x26, w22
  40a038:	mov	x22, x21
  40a03c:	sub	x25, x24, x23
  40a040:	mov	x0, x22
  40a044:	mov	x1, x23
  40a048:	mov	x2, x25
  40a04c:	bl	402580 <memcpy@plt>
  40a050:	add	x0, x22, x25
  40a054:	mov	x1, x20
  40a058:	bl	402ab0 <strcpy@plt>
  40a05c:	add	x23, x24, #0x1
  40a060:	add	x22, x0, x26
  40a064:	mov	w1, #0x2a                  	// #42
  40a068:	mov	x0, x23
  40a06c:	bl	402a50 <strchr@plt>
  40a070:	mov	x24, x0
  40a074:	cbnz	x0, 40a03c <wcrtomb@plt+0x73dc>
  40a078:	b	40a088 <wcrtomb@plt+0x7428>
  40a07c:	bl	40c2a8 <wcrtomb@plt+0x9648>
  40a080:	b	40a0c8 <wcrtomb@plt+0x7468>
  40a084:	mov	x22, x21
  40a088:	mov	x0, x22
  40a08c:	mov	x1, x23
  40a090:	bl	402ab0 <strcpy@plt>
  40a094:	ldr	x2, [x19, #40]
  40a098:	mov	x0, x20
  40a09c:	mov	x1, x21
  40a0a0:	bl	40c680 <wcrtomb@plt+0x9a20>
  40a0a4:	mov	x0, x21
  40a0a8:	bl	402a10 <free@plt>
  40a0ac:	ldr	x0, [x19, #40]
  40a0b0:	mov	x1, x20
  40a0b4:	mov	x2, x0
  40a0b8:	bl	40c680 <wcrtomb@plt+0x9a20>
  40a0bc:	bl	40b304 <wcrtomb@plt+0x86a4>
  40a0c0:	ldr	x0, [x19, #40]
  40a0c4:	bl	402a10 <free@plt>
  40a0c8:	str	xzr, [x19, #184]
  40a0cc:	ldp	x20, x19, [sp, #64]
  40a0d0:	ldp	x22, x21, [sp, #48]
  40a0d4:	ldp	x24, x23, [sp, #32]
  40a0d8:	ldp	x26, x25, [sp, #16]
  40a0dc:	ldp	x29, x30, [sp], #80
  40a0e0:	ret
  40a0e4:	stp	x29, x30, [sp, #-64]!
  40a0e8:	stp	x28, x23, [sp, #16]
  40a0ec:	stp	x22, x21, [sp, #32]
  40a0f0:	stp	x20, x19, [sp, #48]
  40a0f4:	mov	x29, sp
  40a0f8:	sub	sp, sp, #0x2, lsl #12
  40a0fc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a100:	ldrb	w8, [x8, #1624]
  40a104:	cbz	w8, 40a12c <wcrtomb@plt+0x74cc>
  40a108:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a10c:	add	x19, x19, #0x658
  40a110:	ldr	x3, [x19, #8]
  40a114:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a118:	add	x0, x0, #0x448
  40a11c:	mov	w1, #0x1                   	// #1
  40a120:	mov	w2, #0x1                   	// #1
  40a124:	bl	40bfe8 <wcrtomb@plt+0x9388>
  40a128:	strb	wzr, [x19]
  40a12c:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a130:	ldr	x22, [x20, #1560]
  40a134:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a138:	cbz	x22, 40a1d4 <wcrtomb@plt+0x7574>
  40a13c:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a140:	b	40a154 <wcrtomb@plt+0x74f4>
  40a144:	mov	x0, x19
  40a148:	bl	40c2a8 <wcrtomb@plt+0x9648>
  40a14c:	ldr	x22, [x22, #24]
  40a150:	cbz	x22, 40a1d4 <wcrtomb@plt+0x7574>
  40a154:	ldr	x0, [x22, #8]
  40a158:	cbz	x0, 40a16c <wcrtomb@plt+0x750c>
  40a15c:	ldr	x2, [x22, #16]
  40a160:	ldr	x3, [x21, #1632]
  40a164:	mov	w1, #0x1                   	// #1
  40a168:	bl	40bfe8 <wcrtomb@plt+0x9388>
  40a16c:	ldr	x0, [x22]
  40a170:	cbz	x0, 40a14c <wcrtomb@plt+0x74ec>
  40a174:	ldr	x1, [x23, #1104]
  40a178:	mov	w2, wzr
  40a17c:	bl	40bcf4 <wcrtomb@plt+0x9094>
  40a180:	cbz	x0, 40a14c <wcrtomb@plt+0x74ec>
  40a184:	mov	x19, x0
  40a188:	mov	x0, sp
  40a18c:	mov	w1, #0x1                   	// #1
  40a190:	mov	w2, #0x2000                	// #8192
  40a194:	mov	x3, x19
  40a198:	bl	40c114 <wcrtomb@plt+0x94b4>
  40a19c:	cbz	x0, 40a144 <wcrtomb@plt+0x74e4>
  40a1a0:	mov	x2, x0
  40a1a4:	ldr	x3, [x21, #1632]
  40a1a8:	mov	x0, sp
  40a1ac:	mov	w1, #0x1                   	// #1
  40a1b0:	bl	40bfe8 <wcrtomb@plt+0x9388>
  40a1b4:	mov	x0, sp
  40a1b8:	mov	w1, #0x1                   	// #1
  40a1bc:	mov	w2, #0x2000                	// #8192
  40a1c0:	mov	x3, x19
  40a1c4:	bl	40c114 <wcrtomb@plt+0x94b4>
  40a1c8:	mov	x2, x0
  40a1cc:	cbnz	x0, 40a1a4 <wcrtomb@plt+0x7544>
  40a1d0:	b	40a144 <wcrtomb@plt+0x74e4>
  40a1d4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a1d8:	ldrb	w8, [x8, #1852]
  40a1dc:	cbz	w8, 40a1e8 <wcrtomb@plt+0x7588>
  40a1e0:	ldr	x0, [x21, #1632]
  40a1e4:	bl	40c234 <wcrtomb@plt+0x95d4>
  40a1e8:	ldr	x19, [x20, #1560]
  40a1ec:	cbnz	x19, 40a228 <wcrtomb@plt+0x75c8>
  40a1f0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a1f4:	add	x8, x8, #0x618
  40a1f8:	stp	xzr, xzr, [x8]
  40a1fc:	add	sp, sp, #0x2, lsl #12
  40a200:	ldp	x20, x19, [sp, #48]
  40a204:	ldp	x22, x21, [sp, #32]
  40a208:	ldp	x28, x23, [sp, #16]
  40a20c:	ldp	x29, x30, [sp], #64
  40a210:	ret
  40a214:	ldr	x20, [x19, #24]
  40a218:	mov	x0, x19
  40a21c:	bl	402a10 <free@plt>
  40a220:	mov	x19, x20
  40a224:	cbz	x20, 40a1f0 <wcrtomb@plt+0x7590>
  40a228:	ldrb	w8, [x19, #32]
  40a22c:	cbz	w8, 40a214 <wcrtomb@plt+0x75b4>
  40a230:	ldr	x0, [x19, #8]
  40a234:	bl	402a10 <free@plt>
  40a238:	b	40a214 <wcrtomb@plt+0x75b4>
  40a23c:	stp	x29, x30, [sp, #-48]!
  40a240:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a244:	stp	x22, x21, [sp, #16]
  40a248:	stp	x20, x19, [sp, #32]
  40a24c:	str	xzr, [x8, #1760]
  40a250:	str	x0, [x1, #48]
  40a254:	ldrb	w8, [x0]
  40a258:	mov	x19, x1
  40a25c:	mov	x20, x0
  40a260:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a264:	cmp	w8, #0x2d
  40a268:	mov	x29, sp
  40a26c:	b.ne	40a298 <wcrtomb@plt+0x7638>  // b.any
  40a270:	ldrb	w8, [x20, #1]
  40a274:	cbnz	w8, 40a298 <wcrtomb@plt+0x7638>
  40a278:	ldr	x8, [x21, #1880]
  40a27c:	cbnz	x8, 40a298 <wcrtomb@plt+0x7638>
  40a280:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a284:	ldr	x0, [x20, #1280]
  40a288:	bl	402ac0 <clearerr_unlocked@plt>
  40a28c:	ldr	x0, [x20, #1280]
  40a290:	str	x0, [x19, #184]
  40a294:	b	40a2cc <wcrtomb@plt+0x766c>
  40a298:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a29c:	ldrb	w8, [x8, #1864]
  40a2a0:	cbz	w8, 40a2b0 <wcrtomb@plt+0x7650>
  40a2a4:	mov	x0, x20
  40a2a8:	bl	40c418 <wcrtomb@plt+0x97b8>
  40a2ac:	str	x0, [x19, #48]
  40a2b0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a2b4:	ldr	x1, [x8, #1104]
  40a2b8:	mov	x0, x20
  40a2bc:	mov	w2, wzr
  40a2c0:	bl	40bcf4 <wcrtomb@plt+0x9094>
  40a2c4:	str	x0, [x19, #184]
  40a2c8:	cbz	x0, 40a38c <wcrtomb@plt+0x772c>
  40a2cc:	adrp	x8, 40a000 <wcrtomb@plt+0x73a0>
  40a2d0:	add	x8, x8, #0x4b8
  40a2d4:	str	x8, [x19, #32]
  40a2d8:	ldr	x8, [x21, #1880]
  40a2dc:	cbz	x8, 40a400 <wcrtomb@plt+0x77a0>
  40a2e0:	ldr	x0, [x19, #48]
  40a2e4:	bl	417098 <wcrtomb@plt+0x14438>
  40a2e8:	mov	w1, #0x2f                  	// #47
  40a2ec:	mov	x20, x0
  40a2f0:	bl	4028f0 <strrchr@plt>
  40a2f4:	cbz	x0, 40a440 <wcrtomb@plt+0x77e0>
  40a2f8:	strb	wzr, [x0]
  40a2fc:	ldr	x0, [x19, #184]
  40a300:	bl	4026b0 <fileno@plt>
  40a304:	bl	402af0 <isatty@plt>
  40a308:	cbnz	w0, 40a458 <wcrtomb@plt+0x77f8>
  40a30c:	ldr	x0, [x19, #184]
  40a310:	bl	4026b0 <fileno@plt>
  40a314:	mov	w1, w0
  40a318:	add	x2, x19, #0x38
  40a31c:	mov	w0, wzr
  40a320:	bl	402b20 <__fxstat@plt>
  40a324:	ldr	w8, [x19, #72]
  40a328:	and	w8, w8, #0xf000
  40a32c:	cmp	w8, #0x8, lsl #12
  40a330:	b.ne	40a464 <wcrtomb@plt+0x7804>  // b.any
  40a334:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a338:	ldr	x3, [x8, #1112]
  40a33c:	add	x21, x19, #0x28
  40a340:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40a344:	add	x2, x2, #0x271
  40a348:	mov	x0, x21
  40a34c:	mov	x1, x20
  40a350:	bl	40be98 <wcrtomb@plt+0x9238>
  40a354:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a358:	add	x22, x22, #0x658
  40a35c:	str	x0, [x22, #8]
  40a360:	ldr	x0, [x19, #40]
  40a364:	bl	40b2f8 <wcrtomb@plt+0x8698>
  40a368:	mov	x0, x20
  40a36c:	strb	wzr, [x22]
  40a370:	bl	402a10 <free@plt>
  40a374:	ldr	x8, [x22, #8]
  40a378:	cbz	x8, 40a480 <wcrtomb@plt+0x7820>
  40a37c:	ldp	x20, x19, [sp, #32]
  40a380:	ldp	x22, x21, [sp, #16]
  40a384:	ldp	x29, x30, [sp], #48
  40a388:	ret
  40a38c:	bl	402bd0 <__errno_location@plt>
  40a390:	ldr	w0, [x0]
  40a394:	bl	4028e0 <strerror@plt>
  40a398:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a39c:	ldr	x21, [x8, #1248]
  40a3a0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40a3a4:	mov	x22, x0
  40a3a8:	add	x1, x1, #0xc4b
  40a3ac:	mov	w2, #0x5                   	// #5
  40a3b0:	mov	x0, xzr
  40a3b4:	bl	402b40 <dcgettext@plt>
  40a3b8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a3bc:	ldr	x3, [x8, #1936]
  40a3c0:	mov	x2, x0
  40a3c4:	mov	w1, #0x1                   	// #1
  40a3c8:	mov	x0, x21
  40a3cc:	mov	x4, x20
  40a3d0:	mov	x5, x22
  40a3d4:	bl	4029c0 <__fprintf_chk@plt>
  40a3d8:	ldr	x8, [x19, #8]
  40a3dc:	adrp	x9, 407000 <wcrtomb@plt+0x43a0>
  40a3e0:	add	x9, x9, #0xcdc
  40a3e4:	str	x9, [x19, #32]
  40a3e8:	add	x8, x8, #0x1
  40a3ec:	str	x8, [x19, #8]
  40a3f0:	ldp	x20, x19, [sp, #32]
  40a3f4:	ldp	x22, x21, [sp, #16]
  40a3f8:	ldp	x29, x30, [sp], #48
  40a3fc:	ret
  40a400:	cbz	x0, 40a420 <wcrtomb@plt+0x77c0>
  40a404:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a408:	ldrb	w8, [x8, #1852]
  40a40c:	cbz	w8, 40a420 <wcrtomb@plt+0x77c0>
  40a410:	mov	w2, #0x2                   	// #2
  40a414:	mov	x1, xzr
  40a418:	mov	x3, xzr
  40a41c:	bl	402670 <setvbuf@plt>
  40a420:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a424:	ldr	x8, [x8, #1272]
  40a428:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a42c:	str	x8, [x9, #1632]
  40a430:	ldp	x20, x19, [sp, #32]
  40a434:	ldp	x22, x21, [sp, #16]
  40a438:	ldp	x29, x30, [sp], #48
  40a43c:	ret
  40a440:	mov	w8, #0x2e                  	// #46
  40a444:	strh	w8, [x20]
  40a448:	ldr	x0, [x19, #184]
  40a44c:	bl	4026b0 <fileno@plt>
  40a450:	bl	402af0 <isatty@plt>
  40a454:	cbz	w0, 40a30c <wcrtomb@plt+0x76ac>
  40a458:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40a45c:	add	x1, x1, #0xc62
  40a460:	b	40a46c <wcrtomb@plt+0x780c>
  40a464:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40a468:	add	x1, x1, #0xc82
  40a46c:	mov	w2, #0x5                   	// #5
  40a470:	mov	x0, xzr
  40a474:	bl	402b40 <dcgettext@plt>
  40a478:	ldr	x1, [x19, #48]
  40a47c:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40a480:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40a484:	add	x1, x1, #0xca7
  40a488:	mov	w2, #0x5                   	// #5
  40a48c:	mov	x0, xzr
  40a490:	bl	402b40 <dcgettext@plt>
  40a494:	ldr	x19, [x21]
  40a498:	mov	x20, x0
  40a49c:	bl	402bd0 <__errno_location@plt>
  40a4a0:	ldr	w0, [x0]
  40a4a4:	bl	4028e0 <strerror@plt>
  40a4a8:	mov	x2, x0
  40a4ac:	mov	x0, x20
  40a4b0:	mov	x1, x19
  40a4b4:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40a4b8:	stp	x29, x30, [sp, #-32]!
  40a4bc:	str	x19, [sp, #16]
  40a4c0:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a4c4:	ldr	x3, [x0, #184]
  40a4c8:	ldrb	w2, [x19, #1096]
  40a4cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a4d0:	add	x0, x0, #0x628
  40a4d4:	add	x1, x0, #0x8
  40a4d8:	mov	x29, sp
  40a4dc:	bl	40c1bc <wcrtomb@plt+0x955c>
  40a4e0:	subs	x2, x0, #0x1
  40a4e4:	b.lt	40a528 <wcrtomb@plt+0x78c8>  // b.tstop
  40a4e8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a4ec:	ldr	x1, [x8, #1576]
  40a4f0:	ldrb	w9, [x19, #1096]
  40a4f4:	ldrb	w8, [x1, x2]
  40a4f8:	cmp	w8, w9
  40a4fc:	b.eq	40a50c <wcrtomb@plt+0x78ac>  // b.none
  40a500:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a504:	mov	x2, x0
  40a508:	strb	wzr, [x8, #1680]
  40a50c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a510:	add	x0, x0, #0x670
  40a514:	bl	40a538 <wcrtomb@plt+0x78d8>
  40a518:	mov	w0, #0x1                   	// #1
  40a51c:	ldr	x19, [sp, #16]
  40a520:	ldp	x29, x30, [sp], #32
  40a524:	ret
  40a528:	mov	w0, wzr
  40a52c:	ldr	x19, [sp, #16]
  40a530:	ldp	x29, x30, [sp], #32
  40a534:	ret
  40a538:	stp	x29, x30, [sp, #-64]!
  40a53c:	str	x23, [sp, #16]
  40a540:	stp	x22, x21, [sp, #32]
  40a544:	stp	x20, x19, [sp, #48]
  40a548:	mov	x19, x2
  40a54c:	ldp	x2, x10, [x0, #16]
  40a550:	ldr	x8, [x0, #8]
  40a554:	mov	x21, x0
  40a558:	mov	x20, x1
  40a55c:	add	x22, x2, x19
  40a560:	cmp	x10, x22
  40a564:	mov	x29, sp
  40a568:	b.cs	40a5e8 <wcrtomb@plt+0x7988>  // b.hs, b.nlast
  40a56c:	ldr	x0, [x21]
  40a570:	lsl	x10, x10, #1
  40a574:	sub	x9, x8, x0
  40a578:	cmp	x10, w9, sxtw
  40a57c:	b.cs	40a5b4 <wcrtomb@plt+0x7954>  // b.hs, b.nlast
  40a580:	mov	x1, x8
  40a584:	bl	402590 <memmove@plt>
  40a588:	ldp	x8, x9, [x21]
  40a58c:	ldr	x10, [x21, #24]
  40a590:	sub	x9, x9, x8
  40a594:	add	x10, x10, x9
  40a598:	cmp	x10, x22
  40a59c:	str	x10, [x21, #24]
  40a5a0:	str	x8, [x21, #8]
  40a5a4:	b.hi	40a5e8 <wcrtomb@plt+0x7988>  // b.pmore
  40a5a8:	mov	x9, xzr
  40a5ac:	lsl	x10, x10, #1
  40a5b0:	mov	x0, x8
  40a5b4:	cmp	x10, x22
  40a5b8:	csel	x10, x22, x10, cc  // cc = lo, ul, last
  40a5bc:	mov	w8, #0x32                  	// #50
  40a5c0:	cmp	x10, #0x32
  40a5c4:	csel	x8, x10, x8, hi  // hi = pmore
  40a5c8:	sxtw	x23, w9
  40a5cc:	add	x9, x23, x8
  40a5d0:	adds	x1, x9, #0x1
  40a5d4:	str	x8, [x21, #24]
  40a5d8:	b.mi	40a694 <wcrtomb@plt+0x7a34>  // b.first
  40a5dc:	bl	416e54 <wcrtomb@plt+0x141f4>
  40a5e0:	add	x8, x0, x23
  40a5e4:	stp	x0, x8, [x21]
  40a5e8:	ldr	x9, [x21, #16]
  40a5ec:	mov	x1, x20
  40a5f0:	mov	x2, x19
  40a5f4:	add	x0, x8, x9
  40a5f8:	bl	402580 <memcpy@plt>
  40a5fc:	str	x22, [x21, #16]
  40a600:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a604:	ldrb	w8, [x8, #2256]
  40a608:	cbnz	w8, 40a680 <wcrtomb@plt+0x7a20>
  40a60c:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a610:	ldr	w8, [x22, #2260]
  40a614:	cmp	w8, #0x2
  40a618:	b.lt	40a680 <wcrtomb@plt+0x7a20>  // b.tstop
  40a61c:	cbz	x19, 40a680 <wcrtomb@plt+0x7a20>
  40a620:	add	x21, x21, #0x24
  40a624:	cmp	w8, #0x1
  40a628:	b.eq	40a64c <wcrtomb@plt+0x79ec>  // b.none
  40a62c:	mov	x0, xzr
  40a630:	mov	x1, x20
  40a634:	mov	x2, x19
  40a638:	mov	x3, x21
  40a63c:	bl	417134 <wcrtomb@plt+0x144d4>
  40a640:	cmn	x0, #0x2
  40a644:	b.cc	40a660 <wcrtomb@plt+0x7a00>  // b.lo, b.ul, b.last
  40a648:	str	xzr, [x21]
  40a64c:	add	x20, x20, #0x1
  40a650:	mov	w0, #0x1                   	// #1
  40a654:	subs	x19, x19, x0
  40a658:	b.ne	40a670 <wcrtomb@plt+0x7a10>  // b.any
  40a65c:	b	40a680 <wcrtomb@plt+0x7a20>
  40a660:	cbz	x0, 40a680 <wcrtomb@plt+0x7a20>
  40a664:	add	x20, x20, x0
  40a668:	subs	x19, x19, x0
  40a66c:	b.eq	40a680 <wcrtomb@plt+0x7a20>  // b.none
  40a670:	ldr	w8, [x22, #2260]
  40a674:	cmp	w8, #0x1
  40a678:	b.ne	40a62c <wcrtomb@plt+0x79cc>  // b.any
  40a67c:	b	40a64c <wcrtomb@plt+0x79ec>
  40a680:	ldp	x20, x19, [sp, #48]
  40a684:	ldp	x22, x21, [sp, #32]
  40a688:	ldr	x23, [sp, #16]
  40a68c:	ldp	x29, x30, [sp], #64
  40a690:	ret
  40a694:	bl	4170f0 <wcrtomb@plt+0x14490>
  40a698:	stp	x29, x30, [sp, #-32]!
  40a69c:	stp	x20, x19, [sp, #16]
  40a6a0:	mov	x20, x0
  40a6a4:	ldp	x0, x8, [x1]
  40a6a8:	ldr	x9, [x1, #24]
  40a6ac:	mov	x19, x1
  40a6b0:	mov	x29, sp
  40a6b4:	sub	x8, x8, x0
  40a6b8:	add	x9, x9, x8
  40a6bc:	str	x9, [x1, #24]
  40a6c0:	ldr	x8, [x20, #16]
  40a6c4:	cmp	x9, x8
  40a6c8:	b.cs	40a700 <wcrtomb@plt+0x7aa0>  // b.hs, b.nlast
  40a6cc:	lsl	x9, x9, #1
  40a6d0:	cmp	x9, x8
  40a6d4:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  40a6d8:	cmp	x8, #0x32
  40a6dc:	mov	w9, #0x32                  	// #50
  40a6e0:	csel	x8, x8, x9, hi  // hi = pmore
  40a6e4:	str	x8, [x19, #24]
  40a6e8:	bl	402a10 <free@plt>
  40a6ec:	ldr	x8, [x19, #24]
  40a6f0:	add	x0, x8, #0x1
  40a6f4:	bl	416ff4 <wcrtomb@plt+0x14394>
  40a6f8:	str	x0, [x19]
  40a6fc:	ldr	x8, [x20, #16]
  40a700:	stp	x0, x8, [x19, #8]
  40a704:	ldrb	w8, [x20, #32]
  40a708:	strb	w8, [x19, #32]
  40a70c:	ldp	x1, x2, [x20, #8]
  40a710:	bl	402580 <memcpy@plt>
  40a714:	ldur	x8, [x20, #36]
  40a718:	stur	x8, [x19, #36]
  40a71c:	ldp	x20, x19, [sp, #16]
  40a720:	ldp	x29, x30, [sp], #32
  40a724:	ret
  40a728:	sub	sp, sp, #0x20
  40a72c:	stp	x29, x30, [sp, #16]
  40a730:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a734:	ldr	x8, [x8, #1760]
  40a738:	add	x29, sp, #0x10
  40a73c:	cbz	x8, 40a750 <wcrtomb@plt+0x7af0>
  40a740:	mov	w0, wzr
  40a744:	ldp	x29, x30, [sp, #16]
  40a748:	add	sp, sp, #0x20
  40a74c:	ret
  40a750:	ldr	x1, [x0, #184]
  40a754:	cbz	x1, 40a78c <wcrtomb@plt+0x7b2c>
  40a758:	ldrb	w8, [x1]
  40a75c:	tbnz	w8, #4, 40a78c <wcrtomb@plt+0x7b2c>
  40a760:	ldp	x8, x9, [x1, #8]
  40a764:	cmp	x8, x9
  40a768:	b.cs	40a7a8 <wcrtomb@plt+0x7b48>  // b.hs, b.nlast
  40a76c:	add	x9, x8, #0x1
  40a770:	str	x9, [x1, #8]
  40a774:	ldrb	w0, [x8]
  40a778:	bl	402a20 <ungetc@plt>
  40a77c:	mov	w0, wzr
  40a780:	ldp	x29, x30, [sp, #16]
  40a784:	add	sp, sp, #0x20
  40a788:	ret
  40a78c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a790:	ldrb	w8, [x8, #1860]
  40a794:	cbz	w8, 40a7d8 <wcrtomb@plt+0x7b78>
  40a798:	mov	w0, #0x1                   	// #1
  40a79c:	ldp	x29, x30, [sp, #16]
  40a7a0:	add	sp, sp, #0x20
  40a7a4:	ret
  40a7a8:	str	x0, [sp, #8]
  40a7ac:	mov	x0, x1
  40a7b0:	bl	402c20 <__uflow@plt>
  40a7b4:	cmn	w0, #0x1
  40a7b8:	b.eq	40a7c8 <wcrtomb@plt+0x7b68>  // b.none
  40a7bc:	ldr	x8, [sp, #8]
  40a7c0:	ldr	x1, [x8, #184]
  40a7c4:	b	40a778 <wcrtomb@plt+0x7b18>
  40a7c8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a7cc:	ldrb	w8, [x8, #1860]
  40a7d0:	cbnz	w8, 40a798 <wcrtomb@plt+0x7b38>
  40a7d4:	ldr	x0, [sp, #8]
  40a7d8:	ldp	x29, x30, [sp, #16]
  40a7dc:	add	sp, sp, #0x20
  40a7e0:	b	40a7e4 <wcrtomb@plt+0x7b84>
  40a7e4:	stp	x29, x30, [sp, #-32]!
  40a7e8:	str	x19, [sp, #16]
  40a7ec:	mov	x29, sp
  40a7f0:	mov	x19, x0
  40a7f4:	bl	409f04 <wcrtomb@plt+0x72a4>
  40a7f8:	ldr	x8, [x19]
  40a7fc:	ldr	x9, [x8]
  40a800:	cbz	x9, 40a878 <wcrtomb@plt+0x7c18>
  40a804:	add	x9, x8, #0x8
  40a808:	str	x9, [x19]
  40a80c:	ldr	x0, [x8]
  40a810:	mov	x1, x19
  40a814:	bl	40a23c <wcrtomb@plt+0x75dc>
  40a818:	ldr	x1, [x19, #184]
  40a81c:	cbz	x1, 40a83c <wcrtomb@plt+0x7bdc>
  40a820:	ldp	x8, x9, [x1, #8]
  40a824:	cmp	x8, x9
  40a828:	b.cc	40a858 <wcrtomb@plt+0x7bf8>  // b.lo, b.ul, b.last
  40a82c:	mov	x0, x1
  40a830:	bl	402c20 <__uflow@plt>
  40a834:	cmn	w0, #0x1
  40a838:	b.ne	40a888 <wcrtomb@plt+0x7c28>  // b.any
  40a83c:	mov	x0, x19
  40a840:	bl	409f04 <wcrtomb@plt+0x72a4>
  40a844:	ldr	x8, [x19]
  40a848:	mov	w0, #0x1                   	// #1
  40a84c:	ldr	x9, [x8]
  40a850:	cbnz	x9, 40a804 <wcrtomb@plt+0x7ba4>
  40a854:	b	40a86c <wcrtomb@plt+0x7c0c>
  40a858:	add	x9, x8, #0x1
  40a85c:	str	x9, [x1, #8]
  40a860:	ldrb	w0, [x8]
  40a864:	bl	402a20 <ungetc@plt>
  40a868:	mov	w0, wzr
  40a86c:	ldr	x19, [sp, #16]
  40a870:	ldp	x29, x30, [sp], #32
  40a874:	ret
  40a878:	mov	w0, #0x1                   	// #1
  40a87c:	ldr	x19, [sp, #16]
  40a880:	ldp	x29, x30, [sp], #32
  40a884:	ret
  40a888:	ldr	x1, [x19, #184]
  40a88c:	b	40a864 <wcrtomb@plt+0x7c04>
  40a890:	sub	sp, sp, #0x50
  40a894:	stp	x20, x19, [sp, #64]
  40a898:	mov	x19, x1
  40a89c:	mov	x20, x0
  40a8a0:	stp	x29, x30, [sp, #16]
  40a8a4:	stp	x24, x23, [sp, #32]
  40a8a8:	stp	x22, x21, [sp, #48]
  40a8ac:	add	x29, sp, #0x10
  40a8b0:	cbz	w2, 40ab30 <wcrtomb@plt+0x7ed0>
  40a8b4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a8b8:	add	x8, x8, #0x710
  40a8bc:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a8c0:	mov	w21, w2
  40a8c4:	ldp	x2, x9, [x8]
  40a8c8:	ldrsw	x8, [x23, #2260]
  40a8cc:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a8d0:	add	x22, x22, #0x700
  40a8d4:	sub	x11, x9, x2
  40a8d8:	mul	x10, x8, x19
  40a8dc:	cmp	x11, x10
  40a8e0:	b.cs	40a960 <wcrtomb@plt+0x7d00>  // b.hs, b.nlast
  40a8e4:	ldp	x0, x1, [x22]
  40a8e8:	lsl	x9, x9, #1
  40a8ec:	add	x24, x10, x2
  40a8f0:	sub	x8, x1, x0
  40a8f4:	cmp	x9, w8, sxtw
  40a8f8:	b.cs	40a928 <wcrtomb@plt+0x7cc8>  // b.hs, b.nlast
  40a8fc:	bl	402590 <memmove@plt>
  40a900:	ldp	x0, x8, [x22]
  40a904:	ldr	x9, [x22, #24]
  40a908:	sub	x8, x8, x0
  40a90c:	add	x9, x9, x8
  40a910:	cmp	x9, x24
  40a914:	str	x9, [x22, #24]
  40a918:	str	x0, [x22, #8]
  40a91c:	b.hi	40a960 <wcrtomb@plt+0x7d00>  // b.pmore
  40a920:	mov	x8, xzr
  40a924:	lsl	x9, x9, #1
  40a928:	cmp	x9, x24
  40a92c:	csel	x9, x24, x9, cc  // cc = lo, ul, last
  40a930:	mov	w10, #0x32                  	// #50
  40a934:	cmp	x9, #0x32
  40a938:	csel	x9, x9, x10, hi  // hi = pmore
  40a93c:	sxtw	x24, w8
  40a940:	add	x8, x24, x9
  40a944:	adrp	x11, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a948:	adds	x1, x8, #0x1
  40a94c:	str	x9, [x11, #1816]
  40a950:	b.mi	40ab5c <wcrtomb@plt+0x7efc>  // b.first
  40a954:	bl	416e54 <wcrtomb@plt+0x141f4>
  40a958:	add	x8, x0, x24
  40a95c:	stp	x0, x8, [x22]
  40a960:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a964:	add	x8, x8, #0x724
  40a968:	ldr	x8, [x8]
  40a96c:	str	x8, [sp, #8]
  40a970:	cbz	x19, 40ab44 <wcrtomb@plt+0x7ee4>
  40a974:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40a978:	add	x24, x24, #0x708
  40a97c:	b	40a9a0 <wcrtomb@plt+0x7d40>
  40a980:	mov	w0, w1
  40a984:	bl	4026e0 <wctob@plt>
  40a988:	ldp	x8, x9, [x24]
  40a98c:	strb	w0, [x8, x9]
  40a990:	ldr	x8, [x24, #8]
  40a994:	add	x8, x8, #0x1
  40a998:	str	x8, [x24, #8]
  40a99c:	cbz	x19, 40ab44 <wcrtomb@plt+0x7ee4>
  40a9a0:	ldr	w8, [x23, #2260]
  40a9a4:	cmp	w8, #0x1
  40a9a8:	b.ne	40a9c0 <wcrtomb@plt+0x7d60>  // b.any
  40a9ac:	ldrb	w0, [x20]
  40a9b0:	bl	402910 <btowc@plt>
  40a9b4:	str	w0, [sp, #4]
  40a9b8:	mov	w0, #0x1                   	// #1
  40a9bc:	b	40a9e8 <wcrtomb@plt+0x7d88>
  40a9c0:	add	x0, sp, #0x4
  40a9c4:	add	x3, sp, #0x8
  40a9c8:	mov	x1, x20
  40a9cc:	mov	x2, x19
  40a9d0:	bl	417134 <wcrtomb@plt+0x144d4>
  40a9d4:	cmn	x0, #0x1
  40a9d8:	b.eq	40aa34 <wcrtomb@plt+0x7dd4>  // b.none
  40a9dc:	cmn	x0, #0x2
  40a9e0:	b.eq	40ab30 <wcrtomb@plt+0x7ed0>  // b.none
  40a9e4:	cbz	x0, 40ab30 <wcrtomb@plt+0x7ed0>
  40a9e8:	add	x20, x20, x0
  40a9ec:	tst	w21, #0xc
  40a9f0:	sub	x19, x19, x0
  40a9f4:	b.eq	40aa24 <wcrtomb@plt+0x7dc4>  // b.none
  40a9f8:	ldr	w0, [sp, #4]
  40a9fc:	tbnz	w21, #2, 40aa5c <wcrtomb@plt+0x7dfc>
  40aa00:	bl	402c10 <towlower@plt>
  40aa04:	mov	w1, w0
  40aa08:	ands	w21, w21, #0xfffffff3
  40aa0c:	str	w0, [sp, #4]
  40aa10:	b.eq	40aae0 <wcrtomb@plt+0x7e80>  // b.none
  40aa14:	ldr	w8, [x23, #2260]
  40aa18:	cmp	w8, #0x1
  40aa1c:	b.eq	40a980 <wcrtomb@plt+0x7d20>  // b.none
  40aa20:	b	40aa8c <wcrtomb@plt+0x7e2c>
  40aa24:	ldr	w0, [sp, #4]
  40aa28:	tbnz	w21, #0, 40aa74 <wcrtomb@plt+0x7e14>
  40aa2c:	bl	402c10 <towlower@plt>
  40aa30:	b	40aa78 <wcrtomb@plt+0x7e18>
  40aa34:	ands	w21, w21, #0xfffffff3
  40aa38:	b.eq	40ab30 <wcrtomb@plt+0x7ed0>  // b.none
  40aa3c:	mov	w2, #0x1                   	// #1
  40aa40:	mov	x0, x22
  40aa44:	mov	x1, x20
  40aa48:	bl	40a538 <wcrtomb@plt+0x78d8>
  40aa4c:	stur	xzr, [x22, #36]
  40aa50:	add	x20, x20, #0x1
  40aa54:	sub	x19, x19, #0x1
  40aa58:	b	40a99c <wcrtomb@plt+0x7d3c>
  40aa5c:	bl	402b90 <towupper@plt>
  40aa60:	mov	w1, w0
  40aa64:	ands	w21, w21, #0xfffffff3
  40aa68:	str	w0, [sp, #4]
  40aa6c:	b.ne	40aa14 <wcrtomb@plt+0x7db4>  // b.any
  40aa70:	b	40aae0 <wcrtomb@plt+0x7e80>
  40aa74:	bl	402b90 <towupper@plt>
  40aa78:	mov	w1, w0
  40aa7c:	str	w0, [sp, #4]
  40aa80:	ldr	w8, [x23, #2260]
  40aa84:	cmp	w8, #0x1
  40aa88:	b.eq	40a980 <wcrtomb@plt+0x7d20>  // b.none
  40aa8c:	ldp	x8, x9, [x24]
  40aa90:	add	x2, x24, #0x1c
  40aa94:	add	x0, x8, x9
  40aa98:	bl	402c60 <wcrtomb@plt>
  40aa9c:	ldr	x8, [x24, #8]
  40aaa0:	cmn	x0, #0x2
  40aaa4:	add	x8, x8, x0
  40aaa8:	str	x8, [x24, #8]
  40aaac:	b.cc	40a99c <wcrtomb@plt+0x7d3c>  // b.lo, b.ul, b.last
  40aab0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40aab4:	ldr	x19, [x8, #1248]
  40aab8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40aabc:	add	x1, x1, #0xda0
  40aac0:	mov	w2, #0x5                   	// #5
  40aac4:	mov	x0, xzr
  40aac8:	bl	402b40 <dcgettext@plt>
  40aacc:	mov	x2, x0
  40aad0:	mov	w1, #0x1                   	// #1
  40aad4:	mov	x0, x19
  40aad8:	bl	4029c0 <__fprintf_chk@plt>
  40aadc:	bl	402920 <abort@plt>
  40aae0:	ldr	w8, [x23, #2260]
  40aae4:	cmp	w8, #0x1
  40aae8:	b.ne	40ab0c <wcrtomb@plt+0x7eac>  // b.any
  40aaec:	mov	w0, w1
  40aaf0:	bl	4026e0 <wctob@plt>
  40aaf4:	ldp	x8, x9, [x24]
  40aaf8:	strb	w0, [x8, x9]
  40aafc:	ldr	x8, [x24, #8]
  40ab00:	add	x8, x8, #0x1
  40ab04:	str	x8, [x24, #8]
  40ab08:	b	40ab30 <wcrtomb@plt+0x7ed0>
  40ab0c:	ldp	x8, x9, [x24]
  40ab10:	add	x2, x24, #0x1c
  40ab14:	add	x0, x8, x9
  40ab18:	bl	402c60 <wcrtomb@plt>
  40ab1c:	ldr	x8, [x24, #8]
  40ab20:	cmn	x0, #0x2
  40ab24:	add	x8, x8, x0
  40ab28:	str	x8, [x24, #8]
  40ab2c:	b.cs	40aab0 <wcrtomb@plt+0x7e50>  // b.hs, b.nlast
  40ab30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ab34:	add	x0, x0, #0x700
  40ab38:	mov	x1, x20
  40ab3c:	mov	x2, x19
  40ab40:	bl	40a538 <wcrtomb@plt+0x78d8>
  40ab44:	ldp	x20, x19, [sp, #64]
  40ab48:	ldp	x22, x21, [sp, #48]
  40ab4c:	ldp	x24, x23, [sp, #32]
  40ab50:	ldp	x29, x30, [sp, #16]
  40ab54:	add	sp, sp, #0x50
  40ab58:	ret
  40ab5c:	bl	4170f0 <wcrtomb@plt+0x14490>
  40ab60:	sub	sp, sp, #0x40
  40ab64:	stp	x29, x30, [sp, #16]
  40ab68:	add	x29, sp, #0x10
  40ab6c:	stp	x22, x21, [sp, #32]
  40ab70:	mov	w21, w0
  40ab74:	sturb	w0, [x29, #-4]
  40ab78:	mov	x0, x1
  40ab7c:	stp	x20, x19, [sp, #48]
  40ab80:	mov	x19, x1
  40ab84:	bl	402950 <mbsinit@plt>
  40ab88:	mov	w22, w0
  40ab8c:	sub	x1, x29, #0x4
  40ab90:	mov	w2, #0x1                   	// #1
  40ab94:	mov	x0, xzr
  40ab98:	mov	x3, x19
  40ab9c:	mov	w20, #0x1                   	// #1
  40aba0:	bl	417134 <wcrtomb@plt+0x144d4>
  40aba4:	mov	x2, x0
  40aba8:	add	w8, w2, #0x2
  40abac:	cmp	w8, #0x3
  40abb0:	b.hi	40abf8 <wcrtomb@plt+0x7f98>  // b.pmore
  40abb4:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40abb8:	add	x9, x9, #0xdd0
  40abbc:	adr	x10, 40abcc <wcrtomb@plt+0x7f6c>
  40abc0:	ldrb	w11, [x9, x8]
  40abc4:	add	x10, x10, x11, lsl #2
  40abc8:	br	x10
  40abcc:	mov	w20, wzr
  40abd0:	str	xzr, [x19]
  40abd4:	b	40abe0 <wcrtomb@plt+0x7f80>
  40abd8:	cmp	w22, #0x0
  40abdc:	cset	w20, eq  // eq = none
  40abe0:	mov	w0, w20
  40abe4:	ldp	x20, x19, [sp, #48]
  40abe8:	ldp	x22, x21, [sp, #32]
  40abec:	ldp	x29, x30, [sp, #16]
  40abf0:	add	sp, sp, #0x40
  40abf4:	ret
  40abf8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40abfc:	add	x0, x0, #0xdd4
  40ac00:	mov	w1, w21
  40ac04:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40ac08:	stp	x29, x30, [sp, #-16]!
  40ac0c:	mov	x29, sp
  40ac10:	bl	414a64 <wcrtomb@plt+0x11e04>
  40ac14:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40ac18:	add	x1, x1, #0xdfb
  40ac1c:	bl	4029d0 <strcmp@plt>
  40ac20:	cmp	w0, #0x0
  40ac24:	cset	w8, eq  // eq = none
  40ac28:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ac2c:	strb	w8, [x9, #2256]
  40ac30:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  40ac34:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ac38:	str	w0, [x8, #2260]
  40ac3c:	ldp	x29, x30, [sp], #16
  40ac40:	ret
  40ac44:	stp	x29, x30, [sp, #-16]!
  40ac48:	mov	x1, x0
  40ac4c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40ac50:	add	x0, x0, #0xa81
  40ac54:	mov	x29, sp
  40ac58:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40ac5c:	stp	x29, x30, [sp, #-32]!
  40ac60:	str	x19, [sp, #16]
  40ac64:	mov	x19, x0
  40ac68:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40ac6c:	add	x0, x0, #0xe01
  40ac70:	mov	x29, sp
  40ac74:	bl	402be0 <getenv@plt>
  40ac78:	cbz	x0, 40ac88 <wcrtomb@plt+0x8028>
  40ac7c:	ldr	x19, [sp, #16]
  40ac80:	ldp	x29, x30, [sp], #32
  40ac84:	ret
  40ac88:	mov	x0, x19
  40ac8c:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  40ac90:	stp	x29, x30, [sp, #-64]!
  40ac94:	str	x23, [sp, #16]
  40ac98:	stp	x22, x21, [sp, #32]
  40ac9c:	stp	x20, x19, [sp, #48]
  40aca0:	mov	x29, sp
  40aca4:	mov	w19, w2
  40aca8:	mov	w23, w1
  40acac:	mov	x22, x0
  40acb0:	bl	40c790 <wcrtomb@plt+0x9b30>
  40acb4:	cbz	x0, 40ad0c <wcrtomb@plt+0x80ac>
  40acb8:	mov	x21, x0
  40acbc:	add	x0, x0, #0x5f
  40acc0:	bl	416ff4 <wcrtomb@plt+0x14394>
  40acc4:	mov	x20, x0
  40acc8:	str	w23, [x0, #64]
  40accc:	add	x23, x0, #0x5a
  40acd0:	mov	x0, x22
  40acd4:	bl	40c788 <wcrtomb@plt+0x9b28>
  40acd8:	mov	x1, x0
  40acdc:	mov	x0, x23
  40ace0:	mov	x2, x21
  40ace4:	bl	402580 <memcpy@plt>
  40ace8:	mov	w2, #0x2                   	// #2
  40acec:	mov	x0, x23
  40acf0:	mov	x1, x21
  40acf4:	bl	402e1c <wcrtomb@plt+0x1bc>
  40acf8:	str	x0, [x20, #72]
  40acfc:	mov	x0, x20
  40ad00:	mov	w1, w19
  40ad04:	bl	40ad48 <wcrtomb@plt+0x80e8>
  40ad08:	b	40ad18 <wcrtomb@plt+0x80b8>
  40ad0c:	cmp	w23, #0x1
  40ad10:	b.ge	40ad30 <wcrtomb@plt+0x80d0>  // b.tcont
  40ad14:	mov	x20, xzr
  40ad18:	mov	x0, x20
  40ad1c:	ldp	x20, x19, [sp, #48]
  40ad20:	ldp	x22, x21, [sp, #32]
  40ad24:	ldr	x23, [sp, #16]
  40ad28:	ldp	x29, x30, [sp], #64
  40ad2c:	ret
  40ad30:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40ad34:	add	x1, x1, #0xe89
  40ad38:	mov	w2, #0x5                   	// #5
  40ad3c:	mov	x0, xzr
  40ad40:	bl	402b40 <dcgettext@plt>
  40ad44:	bl	402d7c <wcrtomb@plt+0x11c>
  40ad48:	sub	sp, sp, #0x110
  40ad4c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ad50:	stp	x28, x23, [sp, #224]
  40ad54:	ldr	w10, [x8, #1848]
  40ad58:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ad5c:	ldr	w8, [x23, #2264]
  40ad60:	mov	w9, #0xb27c                	// #45692
  40ad64:	mov	w11, #0x246                 	// #582
  40ad68:	movk	w9, #0x7, lsl #16
  40ad6c:	movk	w11, #0x105, lsl #16
  40ad70:	tst	w10, #0x1
  40ad74:	stp	x22, x21, [sp, #240]
  40ad78:	stp	x20, x19, [sp, #256]
  40ad7c:	mov	w20, w1
  40ad80:	csel	w21, w9, w11, ne  // ne = any
  40ad84:	cmp	w8, #0x2
  40ad88:	mov	x19, x0
  40ad8c:	stp	x29, x30, [sp, #208]
  40ad90:	add	x29, sp, #0xd0
  40ad94:	b.eq	40add8 <wcrtomb@plt+0x8178>  // b.none
  40ad98:	cmp	w8, #0x1
  40ad9c:	b.eq	40adbc <wcrtomb@plt+0x815c>  // b.none
  40ada0:	cbnz	w8, 40adc0 <wcrtomb@plt+0x8160>
  40ada4:	mov	w8, #0xb27e                	// #45694
  40ada8:	movk	w8, #0x105, lsl #16
  40adac:	and	w21, w21, w8
  40adb0:	ldr	w22, [x19, #64]
  40adb4:	tbz	w22, #1, 40adc8 <wcrtomb@plt+0x8168>
  40adb8:	b	40adf4 <wcrtomb@plt+0x8194>
  40adbc:	orr	w21, w21, #0x20000
  40adc0:	ldr	w22, [x19, #64]
  40adc4:	tbnz	w22, #1, 40adf4 <wcrtomb@plt+0x8194>
  40adc8:	mov	w0, #0x100                 	// #256
  40adcc:	bl	402730 <malloc@plt>
  40add0:	str	x0, [x19, #32]
  40add4:	b	40adf8 <wcrtomb@plt+0x8198>
  40add8:	orr	w8, w9, #0x80000
  40addc:	mov	w9, #0x646                 	// #1606
  40ade0:	tst	w10, #0x1
  40ade4:	movk	w9, #0x10f, lsl #16
  40ade8:	csel	w21, w8, w9, ne  // ne = any
  40adec:	ldr	w22, [x19, #64]
  40adf0:	tbz	w22, #1, 40adc8 <wcrtomb@plt+0x8168>
  40adf4:	orr	w21, w21, #0x400000
  40adf8:	cmp	w20, #0x0
  40adfc:	cset	w8, eq  // eq = none
  40ae00:	bfi	w21, w8, #25, #1
  40ae04:	and	w8, w21, #0xffffffbf
  40ae08:	orr	w8, w8, #0x100
  40ae0c:	tst	w22, #0x4
  40ae10:	csel	w22, w21, w8, eq  // eq = none
  40ae14:	mov	x0, x22
  40ae18:	bl	4188a8 <_obstack_memory_used@@Base+0x138c>
  40ae1c:	ldr	x1, [x19, #72]
  40ae20:	add	x21, x19, #0x5a
  40ae24:	mov	x0, x21
  40ae28:	mov	x2, x19
  40ae2c:	bl	417590 <_obstack_memory_used@@Base+0x74>
  40ae30:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ae34:	ldrb	w8, [x8, #1096]
  40ae38:	cmp	w8, #0xa
  40ae3c:	b.ne	40ae50 <wcrtomb@plt+0x81f0>  // b.any
  40ae40:	ldrb	w9, [x19, #64]
  40ae44:	lsl	w9, w9, #5
  40ae48:	and	w9, w9, #0xffffff80
  40ae4c:	b	40ae54 <wcrtomb@plt+0x81f4>
  40ae50:	mov	w9, wzr
  40ae54:	ldrb	w10, [x19, #56]
  40ae58:	str	xzr, [x19, #40]
  40ae5c:	and	w10, w10, #0x7f
  40ae60:	orr	w9, w10, w9
  40ae64:	strb	w9, [x19, #56]
  40ae68:	cbnz	x0, 40af0c <wcrtomb@plt+0x82ac>
  40ae6c:	cbz	w20, 40ae88 <wcrtomb@plt+0x8228>
  40ae70:	ldr	x9, [x19, #48]
  40ae74:	sub	w20, w20, #0x1
  40ae78:	cmp	x9, w20, sxtw
  40ae7c:	b.cs	40ae88 <wcrtomb@plt+0x8228>  // b.hs, b.nlast
  40ae80:	ldr	w9, [x23, #2264]
  40ae84:	cbz	w9, 40af10 <wcrtomb@plt+0x82b0>
  40ae88:	cmp	w8, #0xa
  40ae8c:	cset	w8, ne  // ne = any
  40ae90:	lsl	w20, w8, #1
  40ae94:	bl	4103bc <wcrtomb@plt+0xd75c>
  40ae98:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40ae9c:	add	x1, x1, #0x8dc
  40aea0:	mov	x2, x22
  40aea4:	mov	w3, w20
  40aea8:	str	x0, [x19, #80]
  40aeac:	bl	4103c4 <wcrtomb@plt+0xd764>
  40aeb0:	ldp	x1, x2, [x19, #72]
  40aeb4:	mov	w3, #0x1                   	// #1
  40aeb8:	mov	x0, x21
  40aebc:	bl	40da04 <wcrtomb@plt+0xada4>
  40aec0:	ldr	x8, [x19, #72]
  40aec4:	cmp	x8, #0x1
  40aec8:	b.ne	40aef4 <wcrtomb@plt+0x8294>  // b.any
  40aecc:	ldrb	w8, [x21]
  40aed0:	cmp	w8, #0x24
  40aed4:	b.eq	40aeec <wcrtomb@plt+0x828c>  // b.none
  40aed8:	cmp	w8, #0x5e
  40aedc:	b.ne	40aef4 <wcrtomb@plt+0x8294>  // b.any
  40aee0:	mov	w8, #0x1                   	// #1
  40aee4:	strb	w8, [x19, #88]
  40aee8:	b	40aef4 <wcrtomb@plt+0x8294>
  40aeec:	mov	w8, #0x1                   	// #1
  40aef0:	strb	w8, [x19, #89]
  40aef4:	ldp	x20, x19, [sp, #256]
  40aef8:	ldp	x22, x21, [sp, #240]
  40aefc:	ldp	x28, x23, [sp, #224]
  40af00:	ldp	x29, x30, [sp, #208]
  40af04:	add	sp, sp, #0x110
  40af08:	ret
  40af0c:	bl	402d7c <wcrtomb@plt+0x11c>
  40af10:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40af14:	add	x1, x1, #0xe3f
  40af18:	mov	w2, #0x5                   	// #5
  40af1c:	mov	x0, xzr
  40af20:	bl	402b40 <dcgettext@plt>
  40af24:	mov	x3, x0
  40af28:	add	x0, sp, #0x8
  40af2c:	mov	w1, #0x1                   	// #1
  40af30:	mov	w2, #0xc8                  	// #200
  40af34:	mov	w4, w20
  40af38:	bl	4025d0 <__sprintf_chk@plt>
  40af3c:	add	x0, sp, #0x8
  40af40:	bl	402d7c <wcrtomb@plt+0x11c>
  40af44:	sub	sp, sp, #0x70
  40af48:	stp	x24, x23, [sp, #64]
  40af4c:	stp	x22, x21, [sp, #80]
  40af50:	stp	x20, x19, [sp, #96]
  40af54:	mov	w20, w5
  40af58:	mov	x19, x4
  40af5c:	mov	x22, x3
  40af60:	mov	x24, x2
  40af64:	mov	x21, x1
  40af68:	stp	x29, x30, [sp, #16]
  40af6c:	stp	x28, x27, [sp, #32]
  40af70:	stp	x26, x25, [sp, #48]
  40af74:	add	x29, sp, #0x10
  40af78:	cbz	x0, 40af8c <wcrtomb@plt+0x832c>
  40af7c:	mov	x23, x0
  40af80:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40af84:	str	x0, [x8, #1840]
  40af88:	b	40af98 <wcrtomb@plt+0x8338>
  40af8c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40af90:	ldr	x23, [x8, #1840]
  40af94:	cbz	x23, 40b2e0 <wcrtomb@plt+0x8680>
  40af98:	mov	w8, #0x7fffffff            	// #2147483647
  40af9c:	cmp	x24, x8
  40afa0:	b.cs	40b2c8 <wcrtomb@plt+0x8668>  // b.hs, b.nlast
  40afa4:	ldrb	w8, [x23, #56]
  40afa8:	cbz	w20, 40afe0 <wcrtomb@plt+0x8380>
  40afac:	tbz	w8, #4, 40afe0 <wcrtomb@plt+0x8380>
  40afb0:	ldr	x0, [x23, #80]
  40afb4:	cbz	x0, 40afc8 <wcrtomb@plt+0x8368>
  40afb8:	bl	40f3b8 <wcrtomb@plt+0xc758>
  40afbc:	ldr	x0, [x23, #80]
  40afc0:	bl	402a10 <free@plt>
  40afc4:	str	xzr, [x23, #80]
  40afc8:	mov	x0, x23
  40afcc:	bl	419238 <_obstack_memory_used@@Base+0x1d1c>
  40afd0:	mov	x0, x23
  40afd4:	mov	w1, w20
  40afd8:	bl	40ad48 <wcrtomb@plt+0x80e8>
  40afdc:	ldrb	w8, [x23, #56]
  40afe0:	ldrb	w10, [x23, #88]
  40afe4:	ldrb	w9, [x23, #89]
  40afe8:	and	w8, w8, #0xfffffffb
  40afec:	orr	w8, w8, #0x2
  40aff0:	strb	w8, [x23, #56]
  40aff4:	cbz	w10, 40b010 <wcrtomb@plt+0x83b0>
  40aff8:	cbnz	w9, 40b014 <wcrtomb@plt+0x83b4>
  40affc:	cbz	x22, 40b044 <wcrtomb@plt+0x83e4>
  40b000:	ldrb	w8, [x23, #64]
  40b004:	tbnz	w8, #2, 40b128 <wcrtomb@plt+0x84c8>
  40b008:	mov	w0, wzr
  40b00c:	b	40b0c0 <wcrtomb@plt+0x8460>
  40b010:	cbz	w9, 40b0e0 <wcrtomb@plt+0x8480>
  40b014:	ldrb	w8, [x23, #64]
  40b018:	tbnz	w8, #2, 40b024 <wcrtomb@plt+0x83c4>
  40b01c:	mov	x0, xzr
  40b020:	b	40b038 <wcrtomb@plt+0x83d8>
  40b024:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b028:	ldrb	w1, [x8, #1096]
  40b02c:	add	x0, x21, x22
  40b030:	sub	x2, x24, x22
  40b034:	bl	402ae0 <memchr@plt>
  40b038:	sub	x8, x0, x21
  40b03c:	cmp	x0, #0x0
  40b040:	csel	x22, x24, x8, eq  // eq = none
  40b044:	cbz	w20, 40b0bc <wcrtomb@plt+0x845c>
  40b048:	ldr	x8, [x19, #8]
  40b04c:	cbz	x8, 40b058 <wcrtomb@plt+0x83f8>
  40b050:	ldr	x0, [x19, #16]
  40b054:	b	40b084 <wcrtomb@plt+0x8424>
  40b058:	mov	w0, #0x1                   	// #1
  40b05c:	mov	w1, #0x8                   	// #8
  40b060:	mov	w20, #0x1                   	// #1
  40b064:	bl	417018 <wcrtomb@plt+0x143b8>
  40b068:	str	x0, [x19, #8]
  40b06c:	mov	w0, #0x1                   	// #1
  40b070:	mov	w1, #0x8                   	// #8
  40b074:	bl	417018 <wcrtomb@plt+0x143b8>
  40b078:	ldr	x8, [x19, #8]
  40b07c:	str	x0, [x19, #16]
  40b080:	str	x20, [x19]
  40b084:	str	x22, [x8]
  40b088:	str	x22, [x0]
  40b08c:	ldr	x9, [x19]
  40b090:	cmp	x9, #0x2
  40b094:	b.cc	40b0bc <wcrtomb@plt+0x845c>  // b.lo, b.ul, b.last
  40b098:	mov	w9, #0x1                   	// #1
  40b09c:	mov	x10, #0xffffffffffffffff    	// #-1
  40b0a0:	lsl	x11, x9, #3
  40b0a4:	str	x10, [x0, x11]
  40b0a8:	str	x10, [x8, x11]
  40b0ac:	ldr	x11, [x19]
  40b0b0:	add	x9, x9, #0x1
  40b0b4:	cmp	x9, x11
  40b0b8:	b.cc	40b0a0 <wcrtomb@plt+0x8440>  // b.lo, b.ul, b.last
  40b0bc:	mov	w0, #0x1                   	// #1
  40b0c0:	ldp	x20, x19, [sp, #96]
  40b0c4:	ldp	x22, x21, [sp, #80]
  40b0c8:	ldp	x24, x23, [sp, #64]
  40b0cc:	ldp	x26, x25, [sp, #48]
  40b0d0:	ldp	x28, x27, [sp, #32]
  40b0d4:	ldp	x29, x30, [sp, #16]
  40b0d8:	add	sp, sp, #0x70
  40b0dc:	ret
  40b0e0:	cbz	x22, 40b15c <wcrtomb@plt+0x84fc>
  40b0e4:	ldrb	w8, [x23, #64]
  40b0e8:	tbz	w8, #2, 40b0fc <wcrtomb@plt+0x849c>
  40b0ec:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b0f0:	ldrb	w26, [x8, #1096]
  40b0f4:	cmp	w26, #0xa
  40b0f8:	b.ne	40b1b0 <wcrtomb@plt+0x8550>  // b.any
  40b0fc:	cmp	w20, #0x0
  40b100:	sub	x4, x24, x22
  40b104:	csel	x5, x19, xzr, ne  // ne = any
  40b108:	mov	x0, x23
  40b10c:	mov	x1, x21
  40b110:	mov	x2, x24
  40b114:	mov	x3, x22
  40b118:	bl	41bd94 <_obstack_memory_used@@Base+0x4878>
  40b11c:	mvn	w8, w0
  40b120:	lsr	w0, w8, #31
  40b124:	b	40b0c0 <wcrtomb@plt+0x8460>
  40b128:	add	x8, x22, x21
  40b12c:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b130:	ldurb	w8, [x8, #-1]
  40b134:	ldrb	w1, [x9, #1096]
  40b138:	cmp	w8, w1
  40b13c:	b.eq	40b044 <wcrtomb@plt+0x83e4>  // b.none
  40b140:	add	x0, x21, x22
  40b144:	sub	x2, x24, x22
  40b148:	bl	402ae0 <memchr@plt>
  40b14c:	cbz	x0, 40b0c0 <wcrtomb@plt+0x8460>
  40b150:	sub	x8, x0, x21
  40b154:	add	x22, x8, #0x1
  40b158:	b	40b044 <wcrtomb@plt+0x83e4>
  40b15c:	ldr	x0, [x23, #80]
  40b160:	bl	40d9f4 <wcrtomb@plt+0xad94>
  40b164:	mov	x25, x0
  40b168:	cbz	x0, 40b18c <wcrtomb@plt+0x852c>
  40b16c:	add	x2, x21, x24
  40b170:	mov	w3, #0x1                   	// #1
  40b174:	mov	x0, x25
  40b178:	mov	x1, x21
  40b17c:	mov	x4, xzr
  40b180:	mov	x5, xzr
  40b184:	bl	40d9e8 <wcrtomb@plt+0xad88>
  40b188:	cbz	x0, 40b0c0 <wcrtomb@plt+0x8460>
  40b18c:	cbnz	w20, 40b198 <wcrtomb@plt+0x8538>
  40b190:	ldrb	w8, [x23, #64]
  40b194:	tbnz	w8, #2, 40b288 <wcrtomb@plt+0x8628>
  40b198:	cbnz	x25, 40b0e4 <wcrtomb@plt+0x8484>
  40b19c:	ldr	x25, [x23, #80]
  40b1a0:	mov	x0, x25
  40b1a4:	bl	40d9fc <wcrtomb@plt+0xad9c>
  40b1a8:	tbz	w0, #0, 40b0e4 <wcrtomb@plt+0x8484>
  40b1ac:	b	40b28c <wcrtomb@plt+0x862c>
  40b1b0:	mov	x25, x21
  40b1b4:	cbz	x22, 40b1d0 <wcrtomb@plt+0x8570>
  40b1b8:	mov	x0, x21
  40b1bc:	mov	w1, w26
  40b1c0:	mov	x2, x22
  40b1c4:	bl	402a60 <memrchr@plt>
  40b1c8:	cmp	x0, #0x0
  40b1cc:	csinc	x25, x21, x0, eq  // eq = none
  40b1d0:	cmp	w20, #0x0
  40b1d4:	add	x28, x21, x22
  40b1d8:	add	x24, x21, x24
  40b1dc:	csel	x22, x19, xzr, ne  // ne = any
  40b1e0:	and	w1, w26, #0xff
  40b1e4:	sub	x2, x24, x25
  40b1e8:	mov	x0, x25
  40b1ec:	bl	402ae0 <memchr@plt>
  40b1f0:	cmp	x0, #0x0
  40b1f4:	csel	x27, x24, x0, eq  // eq = none
  40b1f8:	sub	x3, x28, x25
  40b1fc:	sub	x2, x27, x25
  40b200:	sub	x4, x27, x28
  40b204:	mov	x0, x23
  40b208:	mov	x1, x25
  40b20c:	mov	x5, x22
  40b210:	bl	41bd94 <_obstack_memory_used@@Base+0x4878>
  40b214:	tbz	w0, #31, 40b234 <wcrtomb@plt+0x85d4>
  40b218:	cmp	x27, x24
  40b21c:	b.eq	40b11c <wcrtomb@plt+0x84bc>  // b.none
  40b220:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b224:	ldrb	w26, [x8, #1096]
  40b228:	add	x25, x27, #0x1
  40b22c:	mov	x28, x25
  40b230:	b	40b1e0 <wcrtomb@plt+0x8580>
  40b234:	sub	x8, x25, x21
  40b238:	add	w0, w0, w8
  40b23c:	cbz	w20, 40b11c <wcrtomb@plt+0x84bc>
  40b240:	ldr	x9, [x19]
  40b244:	cbz	x9, 40b11c <wcrtomb@plt+0x84bc>
  40b248:	ldp	x9, x10, [x19, #8]
  40b24c:	mov	x11, xzr
  40b250:	b	40b264 <wcrtomb@plt+0x8604>
  40b254:	ldr	x12, [x19]
  40b258:	add	x11, x11, #0x1
  40b25c:	cmp	x11, x12
  40b260:	b.cs	40b11c <wcrtomb@plt+0x84bc>  // b.hs, b.nlast
  40b264:	ldr	x12, [x9, x11, lsl #3]
  40b268:	tbnz	x12, #63, 40b274 <wcrtomb@plt+0x8614>
  40b26c:	add	x12, x12, x8
  40b270:	str	x12, [x9, x11, lsl #3]
  40b274:	ldr	x12, [x10, x11, lsl #3]
  40b278:	tbnz	x12, #63, 40b254 <wcrtomb@plt+0x85f4>
  40b27c:	add	x12, x12, x8
  40b280:	str	x12, [x10, x11, lsl #3]
  40b284:	b	40b254 <wcrtomb@plt+0x85f4>
  40b288:	ldr	x25, [x23, #80]
  40b28c:	add	x2, x21, x24
  40b290:	sub	x5, x29, #0x4
  40b294:	mov	w3, #0x1                   	// #1
  40b298:	mov	x0, x25
  40b29c:	mov	x1, x21
  40b2a0:	mov	x4, xzr
  40b2a4:	sturb	wzr, [x29, #-4]
  40b2a8:	bl	40d9e8 <wcrtomb@plt+0xad88>
  40b2ac:	cbz	x0, 40b0c0 <wcrtomb@plt+0x8460>
  40b2b0:	cbnz	w20, 40b0e4 <wcrtomb@plt+0x8484>
  40b2b4:	ldrb	w8, [x23, #64]
  40b2b8:	tbz	w8, #2, 40b0e4 <wcrtomb@plt+0x8484>
  40b2bc:	ldurb	w8, [x29, #-4]
  40b2c0:	cbz	w8, 40b0bc <wcrtomb@plt+0x845c>
  40b2c4:	b	40b0e4 <wcrtomb@plt+0x8484>
  40b2c8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40b2cc:	add	x1, x1, #0xe11
  40b2d0:	mov	w2, #0x5                   	// #5
  40b2d4:	mov	x0, xzr
  40b2d8:	bl	402b40 <dcgettext@plt>
  40b2dc:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40b2e0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40b2e4:	add	x1, x1, #0xe6a
  40b2e8:	mov	w2, #0x5                   	// #5
  40b2ec:	mov	x0, xzr
  40b2f0:	bl	402b40 <dcgettext@plt>
  40b2f4:	bl	402d7c <wcrtomb@plt+0x11c>
  40b2f8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b2fc:	str	x0, [x8, #1888]
  40b300:	ret
  40b304:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b308:	str	xzr, [x8, #1888]
  40b30c:	ret
  40b310:	sub	sp, sp, #0x80
  40b314:	stp	x20, x19, [sp, #112]
  40b318:	mov	w20, w0
  40b31c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b320:	add	x0, x0, #0x23d
  40b324:	stp	x29, x30, [sp, #32]
  40b328:	stp	x28, x27, [sp, #48]
  40b32c:	stp	x26, x25, [sp, #64]
  40b330:	stp	x24, x23, [sp, #80]
  40b334:	stp	x22, x21, [sp, #96]
  40b338:	add	x29, sp, #0x20
  40b33c:	mov	x19, x1
  40b340:	bl	402be0 <getenv@plt>
  40b344:	ldr	x8, [x19]
  40b348:	mov	x21, x0
  40b34c:	mov	x0, x8
  40b350:	bl	414aa0 <wcrtomb@plt+0x11e40>
  40b354:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b358:	add	x1, x1, #0x3e3
  40b35c:	mov	w0, #0x6                   	// #6
  40b360:	bl	402c40 <setlocale@plt>
  40b364:	bl	40ac08 <wcrtomb@plt+0x7fa8>
  40b368:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b36c:	add	x0, x0, #0x8dc
  40b370:	bl	414870 <wcrtomb@plt+0x11c10>
  40b374:	adrp	x0, 40b000 <wcrtomb@plt+0x83a0>
  40b378:	add	x0, x0, #0x794
  40b37c:	bl	428158 <_obstack_memory_used@@Base+0x10c3c>
  40b380:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b384:	add	x22, x22, #0x271
  40b388:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b38c:	add	x1, x1, #0x242
  40b390:	mov	x0, x22
  40b394:	bl	4027a0 <bindtextdomain@plt>
  40b398:	mov	x0, x22
  40b39c:	bl	4029a0 <textdomain@plt>
  40b3a0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40b3a4:	add	x0, x0, #0xe01
  40b3a8:	bl	402be0 <getenv@plt>
  40b3ac:	cmp	x0, #0x0
  40b3b0:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b3b4:	cset	w8, ne  // ne = any
  40b3b8:	str	w8, [x9, #2264]
  40b3bc:	cbz	x21, 40b3e8 <wcrtomb@plt+0x8788>
  40b3c0:	mov	w2, #0xa                   	// #10
  40b3c4:	mov	x0, x21
  40b3c8:	mov	x1, xzr
  40b3cc:	bl	402a00 <strtol@plt>
  40b3d0:	cmp	w0, #0x2
  40b3d4:	b.cc	40b3e8 <wcrtomb@plt+0x8788>  // b.lo, b.ul, b.last
  40b3d8:	sxtw	x8, w0
  40b3dc:	sub	x8, x8, #0x1
  40b3e0:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b3e4:	str	x8, [x9, #1120]
  40b3e8:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b3ec:	adrp	x22, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40b3f0:	adrp	x24, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40b3f4:	add	x21, x21, #0x254
  40b3f8:	add	x22, x22, #0xf38
  40b3fc:	mov	w27, #0x1                   	// #1
  40b400:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b404:	add	x24, x24, #0xeb8
  40b408:	adrp	x26, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b40c:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b410:	mov	w0, w20
  40b414:	mov	x1, x19
  40b418:	mov	x2, x21
  40b41c:	mov	x3, x22
  40b420:	mov	x4, xzr
  40b424:	bl	4029b0 <getopt_long@plt>
  40b428:	add	w8, w0, #0x1
  40b42c:	cmp	w8, #0x7b
  40b430:	b.hi	40b44c <wcrtomb@plt+0x87ec>  // b.pmore
  40b434:	adr	x9, 40b444 <wcrtomb@plt+0x87e4>
  40b438:	ldrb	w10, [x24, x8]
  40b43c:	add	x9, x9, x10, lsl #2
  40b440:	br	x9
  40b444:	str	w27, [x26, #1848]
  40b448:	b	40b410 <wcrtomb@plt+0x87b0>
  40b44c:	cmp	w0, #0x100
  40b450:	b.eq	40b47c <wcrtomb@plt+0x881c>  // b.none
  40b454:	cmp	w0, #0x101
  40b458:	b.ne	40b694 <wcrtomb@plt+0x8a34>  // b.any
  40b45c:	strb	w27, [x25, #1872]
  40b460:	b	40b410 <wcrtomb@plt+0x87b0>
  40b464:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b468:	strb	w27, [x8, #1856]
  40b46c:	b	40b410 <wcrtomb@plt+0x87b0>
  40b470:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b474:	strb	w27, [x8, #1852]
  40b478:	b	40b410 <wcrtomb@plt+0x87b0>
  40b47c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b480:	strb	w27, [x8, #1868]
  40b484:	b	40b410 <wcrtomb@plt+0x87b0>
  40b488:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b48c:	mov	x28, x24
  40b490:	ldr	x24, [x8, #1256]
  40b494:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b498:	strb	w27, [x8, #1860]
  40b49c:	cbz	x24, 40b5a4 <wcrtomb@plt+0x8944>
  40b4a0:	mov	w1, #0x2a                  	// #42
  40b4a4:	mov	x0, x24
  40b4a8:	bl	402a50 <strchr@plt>
  40b4ac:	cbz	x0, 40b5c0 <wcrtomb@plt+0x8960>
  40b4b0:	mov	x0, x24
  40b4b4:	b	40b5ac <wcrtomb@plt+0x894c>
  40b4b8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b4bc:	strb	wzr, [x8, #1096]
  40b4c0:	b	40b410 <wcrtomb@plt+0x87b0>
  40b4c4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b4c8:	mov	x28, x25
  40b4cc:	ldr	x25, [x8, #1256]
  40b4d0:	mov	x27, x26
  40b4d4:	mov	x26, x22
  40b4d8:	mov	x22, x21
  40b4dc:	mov	x21, x24
  40b4e0:	ldr	x24, [x23, #1896]
  40b4e4:	mov	x0, x25
  40b4e8:	bl	4025c0 <strlen@plt>
  40b4ec:	mov	x2, x0
  40b4f0:	mov	x0, x24
  40b4f4:	mov	x1, x25
  40b4f8:	mov	x24, x21
  40b4fc:	mov	x21, x22
  40b500:	mov	x22, x26
  40b504:	mov	x26, x27
  40b508:	mov	x25, x28
  40b50c:	mov	w27, #0x1                   	// #1
  40b510:	bl	40326c <wcrtomb@plt+0x60c>
  40b514:	str	x0, [x23, #1896]
  40b518:	b	40b410 <wcrtomb@plt+0x87b0>
  40b51c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b520:	ldr	x0, [x8, #1256]
  40b524:	mov	w2, #0xa                   	// #10
  40b528:	mov	x1, xzr
  40b52c:	bl	402a00 <strtol@plt>
  40b530:	sxtw	x8, w0
  40b534:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b538:	str	x8, [x9, #1120]
  40b53c:	b	40b410 <wcrtomb@plt+0x87b0>
  40b540:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b544:	mov	w9, #0x2                   	// #2
  40b548:	str	w9, [x8, #2264]
  40b54c:	b	40b410 <wcrtomb@plt+0x87b0>
  40b550:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b554:	strb	w27, [x8, #1864]
  40b558:	b	40b410 <wcrtomb@plt+0x87b0>
  40b55c:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b560:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b564:	add	x9, x9, #0x267
  40b568:	str	x9, [x8, #1104]
  40b56c:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b570:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b574:	add	x9, x9, #0x26a
  40b578:	str	x9, [x8, #1112]
  40b57c:	b	40b410 <wcrtomb@plt+0x87b0>
  40b580:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b584:	ldr	x0, [x23, #1896]
  40b588:	ldr	x1, [x8, #1256]
  40b58c:	bl	405344 <wcrtomb@plt+0x26e4>
  40b590:	str	x0, [x23, #1896]
  40b594:	b	40b410 <wcrtomb@plt+0x87b0>
  40b598:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b59c:	strb	w27, [x8, #1860]
  40b5a0:	b	40b410 <wcrtomb@plt+0x87b0>
  40b5a4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40b5a8:	add	x0, x0, #0xdce
  40b5ac:	bl	417098 <wcrtomb@plt+0x14438>
  40b5b0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b5b4:	str	x0, [x8, #1880]
  40b5b8:	mov	x24, x28
  40b5bc:	b	40b410 <wcrtomb@plt+0x87b0>
  40b5c0:	mov	x0, x24
  40b5c4:	bl	4025c0 <strlen@plt>
  40b5c8:	add	x0, x0, #0x2
  40b5cc:	bl	416ff4 <wcrtomb@plt+0x14394>
  40b5d0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b5d4:	ldr	x1, [x8, #1256]
  40b5d8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b5dc:	str	x0, [x8, #1880]
  40b5e0:	mov	w8, #0x2a                  	// #42
  40b5e4:	strb	w8, [x0], #1
  40b5e8:	bl	402ab0 <strcpy@plt>
  40b5ec:	mov	x24, x28
  40b5f0:	b	40b410 <wcrtomb@plt+0x87b0>
  40b5f4:	ldr	x0, [x23, #1896]
  40b5f8:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b5fc:	cbnz	x0, 40b634 <wcrtomb@plt+0x89d4>
  40b600:	ldrsw	x8, [x21, #1264]
  40b604:	cmp	w8, w20
  40b608:	b.ge	40b694 <wcrtomb@plt+0x8a34>  // b.tcont
  40b60c:	add	w9, w8, #0x1
  40b610:	str	w9, [x21, #1264]
  40b614:	ldr	x20, [x19, x8, lsl #3]
  40b618:	mov	x0, x20
  40b61c:	bl	4025c0 <strlen@plt>
  40b620:	mov	x2, x0
  40b624:	mov	x0, xzr
  40b628:	mov	x1, x20
  40b62c:	bl	40326c <wcrtomb@plt+0x60c>
  40b630:	str	x0, [x23, #1896]
  40b634:	bl	4053fc <wcrtomb@plt+0x279c>
  40b638:	ldrb	w8, [x25, #1872]
  40b63c:	cbz	w8, 40b648 <wcrtomb@plt+0x89e8>
  40b640:	ldr	x0, [x23, #1896]
  40b644:	bl	407968 <wcrtomb@plt+0x4d08>
  40b648:	ldrsw	x8, [x21, #1264]
  40b64c:	ldr	x0, [x23, #1896]
  40b650:	add	x1, x19, x8, lsl #3
  40b654:	bl	407adc <wcrtomb@plt+0x4e7c>
  40b658:	ldr	x8, [x23, #1896]
  40b65c:	mov	w19, w0
  40b660:	mov	x0, x8
  40b664:	bl	4055c0 <wcrtomb@plt+0x2960>
  40b668:	mov	x0, xzr
  40b66c:	bl	40c2a8 <wcrtomb@plt+0x9648>
  40b670:	mov	w0, w19
  40b674:	ldp	x20, x19, [sp, #112]
  40b678:	ldp	x22, x21, [sp, #96]
  40b67c:	ldp	x24, x23, [sp, #80]
  40b680:	ldp	x26, x25, [sp, #64]
  40b684:	ldp	x28, x27, [sp, #48]
  40b688:	ldp	x29, x30, [sp, #32]
  40b68c:	add	sp, sp, #0x80
  40b690:	ret
  40b694:	mov	w0, #0x1                   	// #1
  40b698:	bl	40b8cc <wcrtomb@plt+0x8c6c>
  40b69c:	mov	w0, wzr
  40b6a0:	bl	40b8cc <wcrtomb@plt+0x8c6c>
  40b6a4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b6a8:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b6ac:	adrp	x10, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b6b0:	ldr	x19, [x8, #1272]
  40b6b4:	ldr	x20, [x9, #1936]
  40b6b8:	ldr	x21, [x10, #1128]
  40b6bc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b6c0:	add	x1, x1, #0x275
  40b6c4:	mov	w2, #0x5                   	// #5
  40b6c8:	mov	x0, xzr
  40b6cc:	bl	402b40 <dcgettext@plt>
  40b6d0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b6d4:	mov	x22, x0
  40b6d8:	add	x1, x1, #0x282
  40b6dc:	mov	w2, #0x5                   	// #5
  40b6e0:	mov	x0, xzr
  40b6e4:	bl	402b40 <dcgettext@plt>
  40b6e8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b6ec:	mov	x23, x0
  40b6f0:	add	x1, x1, #0x28b
  40b6f4:	mov	w2, #0x5                   	// #5
  40b6f8:	mov	x0, xzr
  40b6fc:	bl	402b40 <dcgettext@plt>
  40b700:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b704:	mov	x24, x0
  40b708:	add	x1, x1, #0x297
  40b70c:	mov	w2, #0x5                   	// #5
  40b710:	mov	x0, xzr
  40b714:	bl	402b40 <dcgettext@plt>
  40b718:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b71c:	mov	x25, x0
  40b720:	add	x1, x1, #0x2a5
  40b724:	mov	w2, #0x5                   	// #5
  40b728:	mov	x0, xzr
  40b72c:	bl	402b40 <dcgettext@plt>
  40b730:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b734:	mov	x26, x0
  40b738:	add	x1, x1, #0x2b2
  40b73c:	mov	w2, #0x5                   	// #5
  40b740:	mov	x0, xzr
  40b744:	bl	402b40 <dcgettext@plt>
  40b748:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b74c:	stp	x0, xzr, [sp, #8]
  40b750:	add	x2, x2, #0x26d
  40b754:	mov	x0, x19
  40b758:	mov	x1, x20
  40b75c:	mov	x3, x21
  40b760:	mov	x4, x22
  40b764:	mov	x5, x23
  40b768:	mov	x6, x24
  40b76c:	mov	x7, x25
  40b770:	str	x26, [sp]
  40b774:	bl	416c90 <wcrtomb@plt+0x14030>
  40b778:	bl	40b7a8 <wcrtomb@plt+0x8b48>
  40b77c:	mov	w0, wzr
  40b780:	bl	40b838 <wcrtomb@plt+0x8bd8>
  40b784:	mov	x0, xzr
  40b788:	bl	40c2a8 <wcrtomb@plt+0x9648>
  40b78c:	mov	w0, wzr
  40b790:	bl	4025f0 <exit@plt>
  40b794:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b798:	ldr	x0, [x8, #1888]
  40b79c:	cbz	x0, 40b7a4 <wcrtomb@plt+0x8b44>
  40b7a0:	b	402bf0 <unlink@plt>
  40b7a4:	ret
  40b7a8:	stp	x29, x30, [sp, #-32]!
  40b7ac:	str	x19, [sp, #16]
  40b7b0:	adrp	x19, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b7b4:	ldr	x0, [x19, #1272]
  40b7b8:	mov	x29, sp
  40b7bc:	ldp	x8, x9, [x0, #40]
  40b7c0:	cmp	x8, x9
  40b7c4:	b.cs	40b81c <wcrtomb@plt+0x8bbc>  // b.hs, b.nlast
  40b7c8:	add	x9, x8, #0x1
  40b7cc:	mov	w10, #0xa                   	// #10
  40b7d0:	str	x9, [x0, #40]
  40b7d4:	strb	w10, [x8]
  40b7d8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b7dc:	add	x1, x1, #0x2bf
  40b7e0:	mov	w2, #0x5                   	// #5
  40b7e4:	mov	x0, xzr
  40b7e8:	bl	402b40 <dcgettext@plt>
  40b7ec:	bl	402980 <puts@plt>
  40b7f0:	ldr	x0, [x19, #1272]
  40b7f4:	ldp	x8, x9, [x0, #40]
  40b7f8:	cmp	x8, x9
  40b7fc:	b.cs	40b828 <wcrtomb@plt+0x8bc8>  // b.hs, b.nlast
  40b800:	ldr	x19, [sp, #16]
  40b804:	add	x9, x8, #0x1
  40b808:	mov	w10, #0xa                   	// #10
  40b80c:	str	x9, [x0, #40]
  40b810:	strb	w10, [x8]
  40b814:	ldp	x29, x30, [sp], #32
  40b818:	ret
  40b81c:	mov	w1, #0xa                   	// #10
  40b820:	bl	402960 <__overflow@plt>
  40b824:	b	40b7d8 <wcrtomb@plt+0x8b78>
  40b828:	ldr	x19, [sp, #16]
  40b82c:	mov	w1, #0xa                   	// #10
  40b830:	ldp	x29, x30, [sp], #32
  40b834:	b	402960 <__overflow@plt>
  40b838:	stp	x29, x30, [sp, #-32]!
  40b83c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b840:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b844:	add	x8, x8, #0x4e0
  40b848:	add	x9, x9, #0x4f8
  40b84c:	cmp	w0, #0x0
  40b850:	stp	x20, x19, [sp, #16]
  40b854:	csel	x8, x8, x9, ne  // ne = any
  40b858:	ldr	x19, [x8]
  40b85c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b860:	mov	w20, w0
  40b864:	add	x1, x1, #0x2f3
  40b868:	mov	w2, #0x5                   	// #5
  40b86c:	mov	x0, xzr
  40b870:	mov	x29, sp
  40b874:	bl	402b40 <dcgettext@plt>
  40b878:	mov	x2, x0
  40b87c:	mov	w1, #0x1                   	// #1
  40b880:	mov	x0, x19
  40b884:	bl	4029c0 <__fprintf_chk@plt>
  40b888:	cbz	w20, 40b898 <wcrtomb@plt+0x8c38>
  40b88c:	ldp	x20, x19, [sp, #16]
  40b890:	ldp	x29, x30, [sp], #32
  40b894:	ret
  40b898:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b89c:	add	x1, x1, #0x36d
  40b8a0:	mov	w2, #0x5                   	// #5
  40b8a4:	mov	x0, xzr
  40b8a8:	bl	402b40 <dcgettext@plt>
  40b8ac:	mov	x2, x0
  40b8b0:	mov	x0, x19
  40b8b4:	ldp	x20, x19, [sp, #16]
  40b8b8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b8bc:	add	x3, x3, #0x38b
  40b8c0:	mov	w1, #0x1                   	// #1
  40b8c4:	ldp	x29, x30, [sp], #32
  40b8c8:	b	4029c0 <__fprintf_chk@plt>
  40b8cc:	stp	x29, x30, [sp, #-32]!
  40b8d0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b8d4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b8d8:	add	x8, x8, #0x4e0
  40b8dc:	add	x9, x9, #0x4f8
  40b8e0:	cmp	w0, #0x0
  40b8e4:	stp	x20, x19, [sp, #16]
  40b8e8:	csel	x8, x9, x8, eq  // eq = none
  40b8ec:	ldr	x20, [x8]
  40b8f0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b8f4:	mov	w19, w0
  40b8f8:	add	x1, x1, #0x39b
  40b8fc:	mov	w2, #0x5                   	// #5
  40b900:	mov	x0, xzr
  40b904:	mov	x29, sp
  40b908:	bl	402b40 <dcgettext@plt>
  40b90c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40b910:	ldr	x3, [x8, #1936]
  40b914:	mov	x2, x0
  40b918:	mov	w1, #0x1                   	// #1
  40b91c:	mov	x0, x20
  40b920:	bl	4029c0 <__fprintf_chk@plt>
  40b924:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b928:	add	x1, x1, #0x3e4
  40b92c:	mov	w2, #0x5                   	// #5
  40b930:	mov	x0, xzr
  40b934:	bl	402b40 <dcgettext@plt>
  40b938:	mov	x2, x0
  40b93c:	mov	w1, #0x1                   	// #1
  40b940:	mov	x0, x20
  40b944:	bl	4029c0 <__fprintf_chk@plt>
  40b948:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b94c:	add	x1, x1, #0x43b
  40b950:	mov	w2, #0x5                   	// #5
  40b954:	mov	x0, xzr
  40b958:	bl	402b40 <dcgettext@plt>
  40b95c:	mov	x2, x0
  40b960:	mov	w1, #0x1                   	// #1
  40b964:	mov	x0, x20
  40b968:	bl	4029c0 <__fprintf_chk@plt>
  40b96c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b970:	add	x1, x1, #0x476
  40b974:	mov	w2, #0x5                   	// #5
  40b978:	mov	x0, xzr
  40b97c:	bl	402b40 <dcgettext@plt>
  40b980:	mov	x2, x0
  40b984:	mov	w1, #0x1                   	// #1
  40b988:	mov	x0, x20
  40b98c:	bl	4029c0 <__fprintf_chk@plt>
  40b990:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b994:	add	x1, x1, #0x4d7
  40b998:	mov	w2, #0x5                   	// #5
  40b99c:	mov	x0, xzr
  40b9a0:	bl	402b40 <dcgettext@plt>
  40b9a4:	mov	x2, x0
  40b9a8:	mov	w1, #0x1                   	// #1
  40b9ac:	mov	x0, x20
  40b9b0:	bl	4029c0 <__fprintf_chk@plt>
  40b9b4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b9b8:	add	x1, x1, #0x54d
  40b9bc:	mov	w2, #0x5                   	// #5
  40b9c0:	mov	x0, xzr
  40b9c4:	bl	402b40 <dcgettext@plt>
  40b9c8:	mov	x2, x0
  40b9cc:	mov	w1, #0x1                   	// #1
  40b9d0:	mov	x0, x20
  40b9d4:	bl	4029c0 <__fprintf_chk@plt>
  40b9d8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40b9dc:	add	x1, x1, #0x59c
  40b9e0:	mov	w2, #0x5                   	// #5
  40b9e4:	mov	x0, xzr
  40b9e8:	bl	402b40 <dcgettext@plt>
  40b9ec:	mov	x2, x0
  40b9f0:	mov	w1, #0x1                   	// #1
  40b9f4:	mov	x0, x20
  40b9f8:	bl	4029c0 <__fprintf_chk@plt>
  40b9fc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40ba00:	add	x1, x1, #0x606
  40ba04:	mov	w2, #0x5                   	// #5
  40ba08:	mov	x0, xzr
  40ba0c:	bl	402b40 <dcgettext@plt>
  40ba10:	mov	x2, x0
  40ba14:	mov	w1, #0x1                   	// #1
  40ba18:	mov	x0, x20
  40ba1c:	bl	4029c0 <__fprintf_chk@plt>
  40ba20:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40ba24:	add	x1, x1, #0x669
  40ba28:	mov	w2, #0x5                   	// #5
  40ba2c:	mov	x0, xzr
  40ba30:	bl	402b40 <dcgettext@plt>
  40ba34:	mov	x2, x0
  40ba38:	mov	w1, #0x1                   	// #1
  40ba3c:	mov	x0, x20
  40ba40:	bl	4029c0 <__fprintf_chk@plt>
  40ba44:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40ba48:	add	x1, x1, #0x6a1
  40ba4c:	mov	w2, #0x5                   	// #5
  40ba50:	mov	x0, xzr
  40ba54:	bl	402b40 <dcgettext@plt>
  40ba58:	mov	x2, x0
  40ba5c:	mov	w1, #0x1                   	// #1
  40ba60:	mov	x0, x20
  40ba64:	bl	4029c0 <__fprintf_chk@plt>
  40ba68:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40ba6c:	add	x1, x1, #0x72f
  40ba70:	mov	w2, #0x5                   	// #5
  40ba74:	mov	x0, xzr
  40ba78:	bl	402b40 <dcgettext@plt>
  40ba7c:	mov	x2, x0
  40ba80:	mov	w1, #0x1                   	// #1
  40ba84:	mov	x0, x20
  40ba88:	bl	4029c0 <__fprintf_chk@plt>
  40ba8c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40ba90:	add	x1, x1, #0x7af
  40ba94:	mov	w2, #0x5                   	// #5
  40ba98:	mov	x0, xzr
  40ba9c:	bl	402b40 <dcgettext@plt>
  40baa0:	mov	x2, x0
  40baa4:	mov	w1, #0x1                   	// #1
  40baa8:	mov	x0, x20
  40baac:	bl	4029c0 <__fprintf_chk@plt>
  40bab0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bab4:	add	x1, x1, #0x803
  40bab8:	mov	w2, #0x5                   	// #5
  40babc:	mov	x0, xzr
  40bac0:	bl	402b40 <dcgettext@plt>
  40bac4:	mov	x2, x0
  40bac8:	mov	w1, #0x1                   	// #1
  40bacc:	mov	x0, x20
  40bad0:	bl	4029c0 <__fprintf_chk@plt>
  40bad4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bad8:	add	x1, x1, #0x893
  40badc:	mov	w2, #0x5                   	// #5
  40bae0:	mov	x0, xzr
  40bae4:	bl	402b40 <dcgettext@plt>
  40bae8:	mov	x2, x0
  40baec:	mov	w1, #0x1                   	// #1
  40baf0:	mov	x0, x20
  40baf4:	bl	4029c0 <__fprintf_chk@plt>
  40baf8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bafc:	add	x1, x1, #0x8d8
  40bb00:	mov	w2, #0x5                   	// #5
  40bb04:	mov	x0, xzr
  40bb08:	bl	402b40 <dcgettext@plt>
  40bb0c:	mov	x2, x0
  40bb10:	mov	w1, #0x1                   	// #1
  40bb14:	mov	x0, x20
  40bb18:	bl	4029c0 <__fprintf_chk@plt>
  40bb1c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bb20:	add	x1, x1, #0x905
  40bb24:	mov	w2, #0x5                   	// #5
  40bb28:	mov	x0, xzr
  40bb2c:	bl	402b40 <dcgettext@plt>
  40bb30:	mov	x2, x0
  40bb34:	mov	w1, #0x1                   	// #1
  40bb38:	mov	x0, x20
  40bb3c:	bl	4029c0 <__fprintf_chk@plt>
  40bb40:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bb44:	add	x1, x1, #0x93b
  40bb48:	mov	w2, #0x5                   	// #5
  40bb4c:	mov	x0, xzr
  40bb50:	bl	402b40 <dcgettext@plt>
  40bb54:	mov	x2, x0
  40bb58:	mov	w1, #0x1                   	// #1
  40bb5c:	mov	x0, x20
  40bb60:	bl	4029c0 <__fprintf_chk@plt>
  40bb64:	mov	w0, w19
  40bb68:	bl	40b838 <wcrtomb@plt+0x8bd8>
  40bb6c:	mov	x0, xzr
  40bb70:	bl	40c2a8 <wcrtomb@plt+0x9648>
  40bb74:	mov	w0, w19
  40bb78:	bl	4025f0 <exit@plt>
  40bb7c:	sub	sp, sp, #0x150
  40bb80:	stp	x29, x30, [sp, #256]
  40bb84:	stp	x24, x23, [sp, #288]
  40bb88:	add	x29, sp, #0x100
  40bb8c:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bb90:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bb94:	stp	x20, x19, [sp, #320]
  40bb98:	mov	x19, x0
  40bb9c:	stp	x3, x4, [x29, #-104]
  40bba0:	ldr	x0, [x23, #1248]
  40bba4:	ldr	x3, [x8, #1936]
  40bba8:	stp	x1, x2, [x29, #-120]
  40bbac:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bbb0:	add	x2, x2, #0xa50
  40bbb4:	mov	w1, #0x1                   	// #1
  40bbb8:	str	x28, [sp, #272]
  40bbbc:	stp	x22, x21, [sp, #304]
  40bbc0:	stp	x5, x6, [x29, #-88]
  40bbc4:	stur	x7, [x29, #-72]
  40bbc8:	stp	q0, q1, [sp]
  40bbcc:	stp	q2, q3, [sp, #32]
  40bbd0:	stp	q4, q5, [sp, #64]
  40bbd4:	stp	q6, q7, [sp, #96]
  40bbd8:	bl	4029c0 <__fprintf_chk@plt>
  40bbdc:	sub	x9, x29, #0x78
  40bbe0:	mov	x10, sp
  40bbe4:	mov	x11, #0xffffffffffffffc8    	// #-56
  40bbe8:	add	x8, x29, #0x50
  40bbec:	movk	x11, #0xff80, lsl #32
  40bbf0:	add	x9, x9, #0x38
  40bbf4:	add	x10, x10, #0x80
  40bbf8:	stp	x8, x9, [x29, #-64]
  40bbfc:	stp	x10, x11, [x29, #-48]
  40bc00:	ldp	q0, q1, [x29, #-64]
  40bc04:	ldr	x0, [x23, #1248]
  40bc08:	sub	x3, x29, #0x20
  40bc0c:	mov	w1, #0x1                   	// #1
  40bc10:	mov	x2, x19
  40bc14:	stp	q0, q1, [x29, #-32]
  40bc18:	bl	402830 <__vfprintf_chk@plt>
  40bc1c:	ldr	x0, [x23, #1248]
  40bc20:	ldp	x8, x9, [x0, #40]
  40bc24:	cmp	x8, x9
  40bc28:	b.cs	40bc4c <wcrtomb@plt+0x8fec>  // b.hs, b.nlast
  40bc2c:	add	x9, x8, #0x1
  40bc30:	mov	w10, #0xa                   	// #10
  40bc34:	str	x9, [x0, #40]
  40bc38:	strb	w10, [x8]
  40bc3c:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bc40:	ldr	x8, [x24, #1904]
  40bc44:	cbnz	x8, 40bc60 <wcrtomb@plt+0x9000>
  40bc48:	b	40bcec <wcrtomb@plt+0x908c>
  40bc4c:	mov	w1, #0xa                   	// #10
  40bc50:	bl	402960 <__overflow@plt>
  40bc54:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bc58:	ldr	x8, [x24, #1904]
  40bc5c:	cbz	x8, 40bcec <wcrtomb@plt+0x908c>
  40bc60:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bc64:	add	x19, x19, #0xa55
  40bc68:	ldrb	w9, [x8, #24]
  40bc6c:	tbz	w9, #0, 40bcdc <wcrtomb@plt+0x907c>
  40bc70:	ldr	x0, [x8]
  40bc74:	bl	4026d0 <fclose@plt>
  40bc78:	bl	402bd0 <__errno_location@plt>
  40bc7c:	str	wzr, [x0]
  40bc80:	ldr	x8, [x24, #1904]
  40bc84:	mov	x20, x0
  40bc88:	ldr	x0, [x8, #8]
  40bc8c:	bl	402bf0 <unlink@plt>
  40bc90:	ldr	w8, [x20]
  40bc94:	cbz	w8, 40bcdc <wcrtomb@plt+0x907c>
  40bc98:	ldr	x21, [x23, #1248]
  40bc9c:	mov	w2, #0x5                   	// #5
  40bca0:	mov	x0, xzr
  40bca4:	mov	x1, x19
  40bca8:	bl	402b40 <dcgettext@plt>
  40bcac:	ldr	x8, [x24, #1904]
  40bcb0:	ldr	x22, [x8, #8]
  40bcb4:	ldr	w8, [x20]
  40bcb8:	mov	x20, x0
  40bcbc:	mov	w0, w8
  40bcc0:	bl	4028e0 <strerror@plt>
  40bcc4:	mov	x4, x0
  40bcc8:	mov	w1, #0x1                   	// #1
  40bccc:	mov	x0, x21
  40bcd0:	mov	x2, x20
  40bcd4:	mov	x3, x22
  40bcd8:	bl	4029c0 <__fprintf_chk@plt>
  40bcdc:	ldr	x8, [x24, #1904]
  40bce0:	ldr	x8, [x8, #16]
  40bce4:	str	x8, [x24, #1904]
  40bce8:	cbnz	x8, 40bc68 <wcrtomb@plt+0x9008>
  40bcec:	mov	w0, #0x4                   	// #4
  40bcf0:	bl	4025f0 <exit@plt>
  40bcf4:	stp	x29, x30, [sp, #-48]!
  40bcf8:	stp	x22, x21, [sp, #16]
  40bcfc:	stp	x20, x19, [sp, #32]
  40bd00:	mov	x29, sp
  40bd04:	mov	w21, w2
  40bd08:	mov	x19, x0
  40bd0c:	bl	402700 <fopen@plt>
  40bd10:	mov	x20, x0
  40bd14:	cbz	x0, 40bd58 <wcrtomb@plt+0x90f8>
  40bd18:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bd1c:	ldr	x21, [x22, #1904]
  40bd20:	cbz	x21, 40bd38 <wcrtomb@plt+0x90d8>
  40bd24:	ldr	x8, [x21]
  40bd28:	cmp	x8, x20
  40bd2c:	b.eq	40bd90 <wcrtomb@plt+0x9130>  // b.none
  40bd30:	ldr	x21, [x21, #16]
  40bd34:	cbnz	x21, 40bd24 <wcrtomb@plt+0x90c4>
  40bd38:	mov	w0, #0x1                   	// #1
  40bd3c:	mov	w1, #0x20                  	// #32
  40bd40:	bl	417018 <wcrtomb@plt+0x143b8>
  40bd44:	ldr	x8, [x22, #1904]
  40bd48:	mov	x21, x0
  40bd4c:	str	x0, [x22, #1904]
  40bd50:	str	x8, [x0, #16]
  40bd54:	b	40bd98 <wcrtomb@plt+0x9138>
  40bd58:	cbz	w21, 40bdb0 <wcrtomb@plt+0x9150>
  40bd5c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bd60:	add	x1, x1, #0xa6a
  40bd64:	mov	w2, #0x5                   	// #5
  40bd68:	mov	x0, xzr
  40bd6c:	bl	402b40 <dcgettext@plt>
  40bd70:	mov	x20, x0
  40bd74:	bl	402bd0 <__errno_location@plt>
  40bd78:	ldr	w0, [x0]
  40bd7c:	bl	4028e0 <strerror@plt>
  40bd80:	mov	x2, x0
  40bd84:	mov	x0, x20
  40bd88:	mov	x1, x19
  40bd8c:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40bd90:	ldr	x0, [x21, #8]
  40bd94:	bl	402a10 <free@plt>
  40bd98:	mov	x0, x19
  40bd9c:	bl	417098 <wcrtomb@plt+0x14438>
  40bda0:	ldrb	w8, [x21, #24]
  40bda4:	stp	x20, x0, [x21]
  40bda8:	and	w8, w8, #0xfe
  40bdac:	strb	w8, [x21, #24]
  40bdb0:	mov	x0, x20
  40bdb4:	ldp	x20, x19, [sp, #32]
  40bdb8:	ldp	x22, x21, [sp, #16]
  40bdbc:	ldp	x29, x30, [sp], #48
  40bdc0:	ret
  40bdc4:	stp	x29, x30, [sp, #-48]!
  40bdc8:	stp	x20, x19, [sp, #32]
  40bdcc:	mov	x19, x1
  40bdd0:	mov	x1, x2
  40bdd4:	stp	x22, x21, [sp, #16]
  40bdd8:	mov	x29, sp
  40bddc:	mov	w21, w3
  40bde0:	bl	402810 <fdopen@plt>
  40bde4:	mov	x20, x0
  40bde8:	cbz	x0, 40be2c <wcrtomb@plt+0x91cc>
  40bdec:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bdf0:	ldr	x21, [x22, #1904]
  40bdf4:	cbz	x21, 40be0c <wcrtomb@plt+0x91ac>
  40bdf8:	ldr	x8, [x21]
  40bdfc:	cmp	x8, x20
  40be00:	b.eq	40be64 <wcrtomb@plt+0x9204>  // b.none
  40be04:	ldr	x21, [x21, #16]
  40be08:	cbnz	x21, 40bdf8 <wcrtomb@plt+0x9198>
  40be0c:	mov	w0, #0x1                   	// #1
  40be10:	mov	w1, #0x20                  	// #32
  40be14:	bl	417018 <wcrtomb@plt+0x143b8>
  40be18:	ldr	x8, [x22, #1904]
  40be1c:	mov	x21, x0
  40be20:	str	x0, [x22, #1904]
  40be24:	str	x8, [x0, #16]
  40be28:	b	40be6c <wcrtomb@plt+0x920c>
  40be2c:	cbz	w21, 40be84 <wcrtomb@plt+0x9224>
  40be30:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40be34:	add	x1, x1, #0xa84
  40be38:	mov	w2, #0x5                   	// #5
  40be3c:	mov	x0, xzr
  40be40:	bl	402b40 <dcgettext@plt>
  40be44:	mov	x20, x0
  40be48:	bl	402bd0 <__errno_location@plt>
  40be4c:	ldr	w0, [x0]
  40be50:	bl	4028e0 <strerror@plt>
  40be54:	mov	x2, x0
  40be58:	mov	x0, x20
  40be5c:	mov	x1, x19
  40be60:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40be64:	ldr	x0, [x21, #8]
  40be68:	bl	402a10 <free@plt>
  40be6c:	mov	x0, x19
  40be70:	bl	417098 <wcrtomb@plt+0x14438>
  40be74:	ldrb	w8, [x21, #24]
  40be78:	stp	x20, x0, [x21]
  40be7c:	and	w8, w8, #0xfe
  40be80:	strb	w8, [x21, #24]
  40be84:	mov	x0, x20
  40be88:	ldp	x20, x19, [sp, #32]
  40be8c:	ldp	x22, x21, [sp, #16]
  40be90:	ldp	x29, x30, [sp], #48
  40be94:	ret
  40be98:	stp	x29, x30, [sp, #-64]!
  40be9c:	stp	x22, x21, [sp, #32]
  40bea0:	mov	x21, x0
  40bea4:	mov	x0, x1
  40bea8:	str	x23, [sp, #16]
  40beac:	stp	x20, x19, [sp, #48]
  40beb0:	mov	x29, sp
  40beb4:	mov	x20, x3
  40beb8:	mov	x22, x2
  40bebc:	mov	x23, x1
  40bec0:	bl	4025c0 <strlen@plt>
  40bec4:	mov	x19, x0
  40bec8:	mov	x0, x22
  40becc:	bl	4025c0 <strlen@plt>
  40bed0:	add	x8, x19, x0
  40bed4:	add	x0, x8, #0x8
  40bed8:	bl	416dd4 <wcrtomb@plt+0x14174>
  40bedc:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40bee0:	add	x3, x3, #0xa9e
  40bee4:	mov	w1, #0x1                   	// #1
  40bee8:	mov	x2, #0xffffffffffffffff    	// #-1
  40beec:	mov	x4, x23
  40bef0:	mov	x5, x22
  40bef4:	mov	x19, x0
  40bef8:	bl	4025d0 <__sprintf_chk@plt>
  40befc:	mov	w0, #0x3f                  	// #63
  40bf00:	bl	402bb0 <umask@plt>
  40bf04:	mov	w23, w0
  40bf08:	mov	x0, x19
  40bf0c:	mov	w1, wzr
  40bf10:	bl	402930 <mkostemp@plt>
  40bf14:	mov	w22, w0
  40bf18:	mov	w0, w23
  40bf1c:	bl	402bb0 <umask@plt>
  40bf20:	cmn	w22, #0x1
  40bf24:	b.eq	40bfb4 <wcrtomb@plt+0x9354>  // b.none
  40bf28:	mov	w0, w22
  40bf2c:	mov	x1, x20
  40bf30:	str	x19, [x21]
  40bf34:	bl	402810 <fdopen@plt>
  40bf38:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40bf3c:	ldr	x21, [x22, #1904]
  40bf40:	mov	x20, x0
  40bf44:	cbz	x21, 40bf5c <wcrtomb@plt+0x92fc>
  40bf48:	ldr	x8, [x21]
  40bf4c:	cmp	x8, x20
  40bf50:	b.eq	40bf7c <wcrtomb@plt+0x931c>  // b.none
  40bf54:	ldr	x21, [x21, #16]
  40bf58:	cbnz	x21, 40bf48 <wcrtomb@plt+0x92e8>
  40bf5c:	mov	w0, #0x1                   	// #1
  40bf60:	mov	w1, #0x20                  	// #32
  40bf64:	bl	417018 <wcrtomb@plt+0x143b8>
  40bf68:	ldr	x8, [x22, #1904]
  40bf6c:	mov	x21, x0
  40bf70:	str	x0, [x22, #1904]
  40bf74:	str	x8, [x0, #16]
  40bf78:	b	40bf84 <wcrtomb@plt+0x9324>
  40bf7c:	ldr	x0, [x21, #8]
  40bf80:	bl	402a10 <free@plt>
  40bf84:	mov	x0, x19
  40bf88:	bl	417098 <wcrtomb@plt+0x14438>
  40bf8c:	ldrb	w8, [x21, #24]
  40bf90:	stp	x20, x0, [x21]
  40bf94:	mov	x0, x20
  40bf98:	ldr	x23, [sp, #16]
  40bf9c:	and	w8, w8, #0xfe
  40bfa0:	strb	w8, [x21, #24]
  40bfa4:	ldp	x20, x19, [sp, #48]
  40bfa8:	ldp	x22, x21, [sp, #32]
  40bfac:	ldp	x29, x30, [sp], #64
  40bfb0:	ret
  40bfb4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40bfb8:	add	x1, x1, #0xca7
  40bfbc:	mov	w2, #0x5                   	// #5
  40bfc0:	mov	x0, xzr
  40bfc4:	bl	402b40 <dcgettext@plt>
  40bfc8:	mov	x20, x0
  40bfcc:	bl	402bd0 <__errno_location@plt>
  40bfd0:	ldr	w0, [x0]
  40bfd4:	bl	4028e0 <strerror@plt>
  40bfd8:	mov	x2, x0
  40bfdc:	mov	x0, x20
  40bfe0:	mov	x1, x19
  40bfe4:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40bfe8:	stp	x29, x30, [sp, #-48]!
  40bfec:	stp	x22, x21, [sp, #16]
  40bff0:	mov	x22, x0
  40bff4:	mov	x0, x3
  40bff8:	stp	x20, x19, [sp, #32]
  40bffc:	mov	x29, sp
  40c000:	mov	x20, x3
  40c004:	mov	x19, x2
  40c008:	mov	x21, x1
  40c00c:	bl	402ac0 <clearerr_unlocked@plt>
  40c010:	cbz	x21, 40c030 <wcrtomb@plt+0x93d0>
  40c014:	mov	x0, x22
  40c018:	mov	x1, x21
  40c01c:	mov	x2, x19
  40c020:	mov	x3, x20
  40c024:	bl	4025b0 <fwrite_unlocked@plt>
  40c028:	cmp	x0, x19
  40c02c:	b.ne	40c040 <wcrtomb@plt+0x93e0>  // b.any
  40c030:	ldp	x20, x19, [sp, #32]
  40c034:	ldp	x22, x21, [sp, #16]
  40c038:	ldp	x29, x30, [sp], #48
  40c03c:	ret
  40c040:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c044:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c048:	add	x1, x1, #0xaaa
  40c04c:	add	x2, x2, #0xacd
  40c050:	mov	w4, #0x5                   	// #5
  40c054:	mov	x0, xzr
  40c058:	mov	x3, x19
  40c05c:	bl	402aa0 <dcngettext@plt>
  40c060:	mov	x21, x0
  40c064:	mov	x0, x20
  40c068:	bl	40c090 <wcrtomb@plt+0x9430>
  40c06c:	mov	x20, x0
  40c070:	bl	402bd0 <__errno_location@plt>
  40c074:	ldr	w0, [x0]
  40c078:	bl	4028e0 <strerror@plt>
  40c07c:	mov	x3, x0
  40c080:	mov	x0, x21
  40c084:	mov	x1, x19
  40c088:	mov	x2, x20
  40c08c:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c090:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c094:	ldr	x8, [x8, #1904]
  40c098:	cbz	x8, 40c0b0 <wcrtomb@plt+0x9450>
  40c09c:	ldr	x9, [x8]
  40c0a0:	cmp	x9, x0
  40c0a4:	b.eq	40c0f4 <wcrtomb@plt+0x9494>  // b.none
  40c0a8:	ldr	x8, [x8, #16]
  40c0ac:	cbnz	x8, 40c09c <wcrtomb@plt+0x943c>
  40c0b0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c0b4:	ldr	x8, [x8, #1280]
  40c0b8:	cmp	x8, x0
  40c0bc:	b.eq	40c0fc <wcrtomb@plt+0x949c>  // b.none
  40c0c0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c0c4:	ldr	x8, [x8, #1272]
  40c0c8:	cmp	x8, x0
  40c0cc:	b.eq	40c108 <wcrtomb@plt+0x94a8>  // b.none
  40c0d0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c0d4:	ldr	x8, [x8, #1248]
  40c0d8:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c0dc:	adrp	x10, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40c0e0:	add	x9, x9, #0xb63
  40c0e4:	add	x10, x10, #0x9e6
  40c0e8:	cmp	x8, x0
  40c0ec:	csel	x0, x10, x9, eq  // eq = none
  40c0f0:	ret
  40c0f4:	ldr	x0, [x8, #8]
  40c0f8:	ret
  40c0fc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40c100:	add	x0, x0, #0x9cf
  40c104:	ret
  40c108:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x10ae4>
  40c10c:	add	x0, x0, #0x9da
  40c110:	ret
  40c114:	stp	x29, x30, [sp, #-48]!
  40c118:	stp	x22, x21, [sp, #16]
  40c11c:	mov	x22, x0
  40c120:	mov	x0, x3
  40c124:	stp	x20, x19, [sp, #32]
  40c128:	mov	x29, sp
  40c12c:	mov	x19, x3
  40c130:	mov	x20, x2
  40c134:	mov	x21, x1
  40c138:	bl	402ac0 <clearerr_unlocked@plt>
  40c13c:	cbz	x21, 40c168 <wcrtomb@plt+0x9508>
  40c140:	mov	x0, x22
  40c144:	mov	x1, x21
  40c148:	mov	x2, x20
  40c14c:	mov	x3, x19
  40c150:	bl	402990 <fread_unlocked@plt>
  40c154:	mov	x20, x0
  40c158:	cbnz	x0, 40c168 <wcrtomb@plt+0x9508>
  40c15c:	ldrb	w8, [x19]
  40c160:	tbnz	w8, #5, 40c17c <wcrtomb@plt+0x951c>
  40c164:	mov	x20, xzr
  40c168:	mov	x0, x20
  40c16c:	ldp	x20, x19, [sp, #32]
  40c170:	ldp	x22, x21, [sp, #16]
  40c174:	ldp	x29, x30, [sp], #48
  40c178:	ret
  40c17c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c180:	add	x1, x1, #0xaf1
  40c184:	mov	w2, #0x5                   	// #5
  40c188:	mov	x0, xzr
  40c18c:	bl	402b40 <dcgettext@plt>
  40c190:	mov	x20, x0
  40c194:	mov	x0, x19
  40c198:	bl	40c090 <wcrtomb@plt+0x9430>
  40c19c:	mov	x19, x0
  40c1a0:	bl	402bd0 <__errno_location@plt>
  40c1a4:	ldr	w0, [x0]
  40c1a8:	bl	4028e0 <strerror@plt>
  40c1ac:	mov	x2, x0
  40c1b0:	mov	x0, x20
  40c1b4:	mov	x1, x19
  40c1b8:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c1bc:	stp	x29, x30, [sp, #-32]!
  40c1c0:	stp	x20, x19, [sp, #16]
  40c1c4:	ldrb	w8, [x3]
  40c1c8:	mov	x19, x3
  40c1cc:	mov	x29, sp
  40c1d0:	tbnz	w8, #5, 40c1f4 <wcrtomb@plt+0x9594>
  40c1d4:	and	w2, w2, #0xff
  40c1d8:	mov	x3, x19
  40c1dc:	bl	402750 <getdelim@plt>
  40c1e0:	ldrb	w8, [x19]
  40c1e4:	tbnz	w8, #5, 40c1f4 <wcrtomb@plt+0x9594>
  40c1e8:	ldp	x20, x19, [sp, #16]
  40c1ec:	ldp	x29, x30, [sp], #32
  40c1f0:	ret
  40c1f4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c1f8:	add	x1, x1, #0xaf1
  40c1fc:	mov	w2, #0x5                   	// #5
  40c200:	mov	x0, xzr
  40c204:	bl	402b40 <dcgettext@plt>
  40c208:	mov	x20, x0
  40c20c:	mov	x0, x19
  40c210:	bl	40c090 <wcrtomb@plt+0x9430>
  40c214:	mov	x19, x0
  40c218:	bl	402bd0 <__errno_location@plt>
  40c21c:	ldr	w0, [x0]
  40c220:	bl	4028e0 <strerror@plt>
  40c224:	mov	x2, x0
  40c228:	mov	x0, x20
  40c22c:	mov	x1, x19
  40c230:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c234:	stp	x29, x30, [sp, #-32]!
  40c238:	stp	x20, x19, [sp, #16]
  40c23c:	mov	x29, sp
  40c240:	mov	x19, x0
  40c244:	bl	402690 <__fwriting@plt>
  40c248:	cbz	w0, 40c274 <wcrtomb@plt+0x9614>
  40c24c:	mov	x0, x19
  40c250:	bl	402ac0 <clearerr_unlocked@plt>
  40c254:	mov	x0, x19
  40c258:	bl	402a90 <fflush_unlocked@plt>
  40c25c:	cmn	w0, #0x1
  40c260:	b.ne	40c274 <wcrtomb@plt+0x9614>  // b.any
  40c264:	bl	402bd0 <__errno_location@plt>
  40c268:	ldr	w20, [x0]
  40c26c:	cmp	w20, #0x9
  40c270:	b.ne	40c280 <wcrtomb@plt+0x9620>  // b.any
  40c274:	ldp	x20, x19, [sp, #16]
  40c278:	ldp	x29, x30, [sp], #32
  40c27c:	ret
  40c280:	mov	x0, x19
  40c284:	bl	40c090 <wcrtomb@plt+0x9430>
  40c288:	mov	x19, x0
  40c28c:	mov	w0, w20
  40c290:	bl	4028e0 <strerror@plt>
  40c294:	mov	x2, x0
  40c298:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c29c:	add	x0, x0, #0xb06
  40c2a0:	mov	x1, x19
  40c2a4:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c2a8:	sub	sp, sp, #0x60
  40c2ac:	stp	x22, x21, [sp, #64]
  40c2b0:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c2b4:	stp	x20, x19, [sp, #80]
  40c2b8:	ldr	x20, [x22, #1904]
  40c2bc:	mov	x19, x0
  40c2c0:	stp	x29, x30, [sp, #32]
  40c2c4:	str	x23, [sp, #48]
  40c2c8:	add	x29, sp, #0x20
  40c2cc:	str	x20, [sp, #16]
  40c2d0:	cbz	x20, 40c39c <wcrtomb@plt+0x973c>
  40c2d4:	cbz	x19, 40c358 <wcrtomb@plt+0x96f8>
  40c2d8:	mov	x8, sp
  40c2dc:	add	x23, x8, #0x10
  40c2e0:	mov	x21, sp
  40c2e4:	b	40c2f8 <wcrtomb@plt+0x9698>
  40c2e8:	mov	x21, x20
  40c2ec:	mov	x23, x21
  40c2f0:	ldr	x20, [x23, #16]!
  40c2f4:	cbz	x20, 40c348 <wcrtomb@plt+0x96e8>
  40c2f8:	ldr	x8, [x20]
  40c2fc:	cmp	x8, x19
  40c300:	b.ne	40c2e8 <wcrtomb@plt+0x9688>  // b.any
  40c304:	mov	x0, x19
  40c308:	bl	40c234 <wcrtomb@plt+0x95d4>
  40c30c:	mov	x0, x19
  40c310:	bl	402ac0 <clearerr_unlocked@plt>
  40c314:	mov	x0, x19
  40c318:	bl	4026d0 <fclose@plt>
  40c31c:	cmn	w0, #0x1
  40c320:	b.eq	40c3ec <wcrtomb@plt+0x978c>  // b.none
  40c324:	ldr	x8, [x20, #16]
  40c328:	str	x8, [x23]
  40c32c:	ldr	x0, [x20, #8]
  40c330:	bl	402a10 <free@plt>
  40c334:	mov	x0, x20
  40c338:	bl	402a10 <free@plt>
  40c33c:	mov	x23, x21
  40c340:	ldr	x20, [x23, #16]!
  40c344:	cbnz	x20, 40c2f8 <wcrtomb@plt+0x9698>
  40c348:	ldr	x8, [sp, #16]
  40c34c:	str	x8, [x22, #1904]
  40c350:	cbnz	x19, 40c3d0 <wcrtomb@plt+0x9770>
  40c354:	b	40c3a8 <wcrtomb@plt+0x9748>
  40c358:	ldr	x21, [x20]
  40c35c:	mov	x0, x21
  40c360:	bl	40c234 <wcrtomb@plt+0x95d4>
  40c364:	mov	x0, x21
  40c368:	bl	402ac0 <clearerr_unlocked@plt>
  40c36c:	mov	x0, x21
  40c370:	bl	4026d0 <fclose@plt>
  40c374:	cmn	w0, #0x1
  40c378:	b.eq	40c3e8 <wcrtomb@plt+0x9788>  // b.none
  40c37c:	ldr	x21, [x20, #16]
  40c380:	str	x21, [sp, #16]
  40c384:	ldr	x0, [x20, #8]
  40c388:	bl	402a10 <free@plt>
  40c38c:	mov	x0, x20
  40c390:	bl	402a10 <free@plt>
  40c394:	mov	x20, x21
  40c398:	cbnz	x21, 40c358 <wcrtomb@plt+0x96f8>
  40c39c:	mov	x8, xzr
  40c3a0:	str	x8, [x22, #1904]
  40c3a4:	cbnz	x19, 40c3d0 <wcrtomb@plt+0x9770>
  40c3a8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c3ac:	ldr	x19, [x8, #1272]
  40c3b0:	mov	x0, x19
  40c3b4:	bl	40c234 <wcrtomb@plt+0x95d4>
  40c3b8:	mov	x0, x19
  40c3bc:	bl	402ac0 <clearerr_unlocked@plt>
  40c3c0:	mov	x0, x19
  40c3c4:	bl	4026d0 <fclose@plt>
  40c3c8:	cmn	w0, #0x1
  40c3cc:	b.eq	40c3ec <wcrtomb@plt+0x978c>  // b.none
  40c3d0:	ldp	x20, x19, [sp, #80]
  40c3d4:	ldp	x22, x21, [sp, #64]
  40c3d8:	ldr	x23, [sp, #48]
  40c3dc:	ldp	x29, x30, [sp, #32]
  40c3e0:	add	sp, sp, #0x60
  40c3e4:	ret
  40c3e8:	mov	x19, x21
  40c3ec:	mov	x0, x19
  40c3f0:	bl	40c090 <wcrtomb@plt+0x9430>
  40c3f4:	mov	x19, x0
  40c3f8:	bl	402bd0 <__errno_location@plt>
  40c3fc:	ldr	w0, [x0]
  40c400:	bl	4028e0 <strerror@plt>
  40c404:	mov	x2, x0
  40c408:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c40c:	add	x0, x0, #0xb6d
  40c410:	mov	x1, x19
  40c414:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c418:	sub	sp, sp, #0xe0
  40c41c:	stp	x22, x21, [sp, #192]
  40c420:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c424:	ldr	w8, [x22, #1912]
  40c428:	stp	x20, x19, [sp, #208]
  40c42c:	mov	x19, x0
  40c430:	stp	x29, x30, [sp, #128]
  40c434:	stp	x28, x27, [sp, #144]
  40c438:	stp	x26, x25, [sp, #160]
  40c43c:	stp	x24, x23, [sp, #176]
  40c440:	add	x29, sp, #0x80
  40c444:	cbnz	w8, 40c470 <wcrtomb@plt+0x9810>
  40c448:	mov	w0, #0x1001                	// #4097
  40c44c:	mov	w20, #0x1001                	// #4097
  40c450:	bl	416ff4 <wcrtomb@plt+0x14394>
  40c454:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c458:	add	x21, x21, #0x778
  40c45c:	str	x0, [x21, #8]
  40c460:	mov	w0, #0x1001                	// #4097
  40c464:	bl	416ff4 <wcrtomb@plt+0x14394>
  40c468:	str	x0, [x21, #16]
  40c46c:	str	w20, [x21]
  40c470:	mov	x2, sp
  40c474:	mov	w0, wzr
  40c478:	mov	x1, x19
  40c47c:	bl	402ad0 <__lxstat@plt>
  40c480:	cbnz	w0, 40c618 <wcrtomb@plt+0x99b8>
  40c484:	ldr	w8, [sp, #16]
  40c488:	mov	w9, #0xa000                	// #40960
  40c48c:	and	w8, w8, w9
  40c490:	cmp	w8, #0xa, lsl #12
  40c494:	b.ne	40c618 <wcrtomb@plt+0x99b8>  // b.any
  40c498:	adrp	x24, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c49c:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c4a0:	adrp	x23, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c4a4:	add	x24, x24, #0x780
  40c4a8:	add	x25, x25, #0x778
  40c4ac:	mov	w26, #0xa000                	// #40960
  40c4b0:	ldr	x1, [x23, #1928]
  40c4b4:	cmp	x19, x1
  40c4b8:	b.ne	40c4cc <wcrtomb@plt+0x986c>  // b.any
  40c4bc:	ldr	x0, [x24]
  40c4c0:	mov	x1, x19
  40c4c4:	bl	402ab0 <strcpy@plt>
  40c4c8:	ldp	x19, x1, [x24]
  40c4cc:	ldrsw	x2, [x22, #1912]
  40c4d0:	mov	x0, x19
  40c4d4:	bl	402630 <readlink@plt>
  40c4d8:	ldr	w28, [x22, #1912]
  40c4dc:	mov	x20, x0
  40c4e0:	cmp	w28, w20
  40c4e4:	b.ne	40c534 <wcrtomb@plt+0x98d4>  // b.any
  40c4e8:	ldr	x0, [x25, #8]
  40c4ec:	lsl	w8, w20, #1
  40c4f0:	sxtw	x1, w8
  40c4f4:	str	w8, [x25]
  40c4f8:	bl	416e54 <wcrtomb@plt+0x141f4>
  40c4fc:	ldr	x8, [x25, #16]
  40c500:	ldrsw	x1, [x25]
  40c504:	str	x0, [x25, #8]
  40c508:	mov	x0, x8
  40c50c:	bl	416e54 <wcrtomb@plt+0x141f4>
  40c510:	ldrsw	x2, [x25]
  40c514:	mov	x1, x0
  40c518:	str	x0, [x25, #16]
  40c51c:	mov	x0, x19
  40c520:	bl	402630 <readlink@plt>
  40c524:	ldr	w28, [x25]
  40c528:	mov	x20, x0
  40c52c:	cmp	w28, w20
  40c530:	b.eq	40c4e8 <wcrtomb@plt+0x9888>  // b.none
  40c534:	tbnz	w20, #31, 40c640 <wcrtomb@plt+0x99e0>
  40c538:	ldr	x8, [x23, #1928]
  40c53c:	strb	wzr, [x8, w20, sxtw]
  40c540:	ldr	x21, [x23, #1928]
  40c544:	ldrb	w8, [x21]
  40c548:	cmp	w8, #0x2f
  40c54c:	b.eq	40c5f0 <wcrtomb@plt+0x9990>  // b.none
  40c550:	mov	w1, #0x2f                  	// #47
  40c554:	mov	x0, x19
  40c558:	bl	4028f0 <strrchr@plt>
  40c55c:	cbz	x0, 40c5f0 <wcrtomb@plt+0x9990>
  40c560:	sub	w8, w0, w19
  40c564:	add	w27, w8, #0x1
  40c568:	add	w8, w27, w20
  40c56c:	cmp	w8, w28
  40c570:	b.lt	40c5a4 <wcrtomb@plt+0x9944>  // b.tstop
  40c574:	ldr	x0, [x25, #8]
  40c578:	add	w8, w8, #0x1
  40c57c:	sxtw	x1, w8
  40c580:	str	w8, [x25]
  40c584:	bl	416e54 <wcrtomb@plt+0x141f4>
  40c588:	ldr	x8, [x25, #16]
  40c58c:	ldrsw	x1, [x25]
  40c590:	str	x0, [x25, #8]
  40c594:	mov	x0, x8
  40c598:	bl	416e54 <wcrtomb@plt+0x141f4>
  40c59c:	mov	x21, x0
  40c5a0:	str	x0, [x25, #16]
  40c5a4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c5a8:	ldr	x0, [x8, #1920]
  40c5ac:	lsl	x28, x20, #32
  40c5b0:	sxtw	x20, w27
  40c5b4:	cmp	x19, x0
  40c5b8:	b.eq	40c5cc <wcrtomb@plt+0x996c>  // b.none
  40c5bc:	mov	x1, x19
  40c5c0:	mov	x2, x20
  40c5c4:	bl	402580 <memcpy@plt>
  40c5c8:	ldp	x19, x21, [x24]
  40c5cc:	mov	x8, #0x100000000           	// #4294967296
  40c5d0:	add	x8, x28, x8
  40c5d4:	add	x0, x19, x20
  40c5d8:	asr	x2, x8, #32
  40c5dc:	mov	x1, x21
  40c5e0:	bl	402580 <memcpy@plt>
  40c5e4:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  40c5e8:	ldr	x19, [x8, #1920]
  40c5ec:	b	40c5f4 <wcrtomb@plt+0x9994>
  40c5f0:	mov	x19, x21
  40c5f4:	mov	x2, sp
  40c5f8:	mov	w0, wzr
  40c5fc:	mov	x1, x19
  40c600:	bl	402ad0 <__lxstat@plt>
  40c604:	cbnz	w0, 40c618 <wcrtomb@plt+0x99b8>
  40c608:	ldr	w8, [sp, #16]
  40c60c:	and	w8, w8, w26
  40c610:	cmp	w8, #0xa, lsl #12
  40c614:	b.eq	40c4b0 <wcrtomb@plt+0x9850>  // b.none
  40c618:	tbnz	w0, #31, 40c674 <wcrtomb@plt+0x9a14>
  40c61c:	mov	x0, x19
  40c620:	ldp	x20, x19, [sp, #208]
  40c624:	ldp	x22, x21, [sp, #192]
  40c628:	ldp	x24, x23, [sp, #176]
  40c62c:	ldp	x26, x25, [sp, #160]
  40c630:	ldp	x28, x27, [sp, #144]
  40c634:	ldp	x29, x30, [sp, #128]
  40c638:	add	sp, sp, #0xe0
  40c63c:	ret
  40c640:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c644:	add	x1, x1, #0xb1c
  40c648:	mov	w2, #0x5                   	// #5
  40c64c:	mov	x0, xzr
  40c650:	bl	402b40 <dcgettext@plt>
  40c654:	mov	x20, x0
  40c658:	bl	402bd0 <__errno_location@plt>
  40c65c:	ldr	w0, [x0]
  40c660:	bl	4028e0 <strerror@plt>
  40c664:	mov	x2, x0
  40c668:	mov	x0, x20
  40c66c:	mov	x1, x19
  40c670:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c674:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c678:	add	x1, x1, #0xb3b
  40c67c:	b	40c648 <wcrtomb@plt+0x99e8>
  40c680:	stp	x29, x30, [sp, #-48]!
  40c684:	stp	x22, x21, [sp, #16]
  40c688:	stp	x20, x19, [sp, #32]
  40c68c:	mov	x29, sp
  40c690:	mov	x20, x2
  40c694:	mov	x19, x0
  40c698:	bl	402a70 <rename@plt>
  40c69c:	cmn	w0, #0x1
  40c6a0:	b.eq	40c6b4 <wcrtomb@plt+0x9a54>  // b.none
  40c6a4:	ldp	x20, x19, [sp, #32]
  40c6a8:	ldp	x22, x21, [sp, #16]
  40c6ac:	ldp	x29, x30, [sp], #48
  40c6b0:	ret
  40c6b4:	cbz	x20, 40c6dc <wcrtomb@plt+0x9a7c>
  40c6b8:	bl	402bd0 <__errno_location@plt>
  40c6bc:	ldr	w22, [x0]
  40c6c0:	mov	x21, x0
  40c6c4:	str	wzr, [x0]
  40c6c8:	mov	x0, x20
  40c6cc:	bl	402bf0 <unlink@plt>
  40c6d0:	ldr	w8, [x21]
  40c6d4:	cbnz	w8, 40c710 <wcrtomb@plt+0x9ab0>
  40c6d8:	str	w22, [x21]
  40c6dc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c6e0:	add	x1, x1, #0xb4e
  40c6e4:	mov	w2, #0x5                   	// #5
  40c6e8:	mov	x0, xzr
  40c6ec:	bl	402b40 <dcgettext@plt>
  40c6f0:	mov	x20, x0
  40c6f4:	bl	402bd0 <__errno_location@plt>
  40c6f8:	ldr	w0, [x0]
  40c6fc:	bl	4028e0 <strerror@plt>
  40c700:	mov	x2, x0
  40c704:	mov	x0, x20
  40c708:	mov	x1, x19
  40c70c:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c710:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c714:	add	x1, x1, #0xa55
  40c718:	mov	w2, #0x5                   	// #5
  40c71c:	mov	x0, xzr
  40c720:	bl	402b40 <dcgettext@plt>
  40c724:	ldr	w8, [x21]
  40c728:	mov	x19, x0
  40c72c:	mov	w0, w8
  40c730:	bl	4028e0 <strerror@plt>
  40c734:	mov	x2, x0
  40c738:	mov	x0, x19
  40c73c:	mov	x1, x20
  40c740:	bl	40bb7c <wcrtomb@plt+0x8f1c>
  40c744:	stp	x29, x30, [sp, #-32]!
  40c748:	mov	w0, #0x1                   	// #1
  40c74c:	mov	w1, #0x18                  	// #24
  40c750:	str	x19, [sp, #16]
  40c754:	mov	x29, sp
  40c758:	bl	417018 <wcrtomb@plt+0x143b8>
  40c75c:	mov	x19, x0
  40c760:	mov	w0, #0x32                  	// #50
  40c764:	bl	416ff4 <wcrtomb@plt+0x14394>
  40c768:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c76c:	ldr	q0, [x8, #2624]
  40c770:	str	x0, [x19, #16]
  40c774:	mov	x0, x19
  40c778:	str	q0, [x19]
  40c77c:	ldr	x19, [sp, #16]
  40c780:	ldp	x29, x30, [sp], #32
  40c784:	ret
  40c788:	ldr	x0, [x0, #16]
  40c78c:	ret
  40c790:	ldr	x0, [x0, #8]
  40c794:	ret
  40c798:	stp	x29, x30, [sp, #-64]!
  40c79c:	str	x23, [sp, #16]
  40c7a0:	stp	x22, x21, [sp, #32]
  40c7a4:	stp	x20, x19, [sp, #48]
  40c7a8:	ldp	x9, x8, [x0]
  40c7ac:	mov	x19, x2
  40c7b0:	mov	x20, x0
  40c7b4:	mov	x21, x1
  40c7b8:	sub	x10, x9, x8
  40c7bc:	cmp	x10, x2
  40c7c0:	mov	x29, sp
  40c7c4:	b.cs	40c810 <wcrtomb@plt+0x9bb0>  // b.hs, b.nlast
  40c7c8:	add	x22, x8, x19
  40c7cc:	cmp	x9, x22
  40c7d0:	b.cs	40c810 <wcrtomb@plt+0x9bb0>  // b.hs, b.nlast
  40c7d4:	lsl	x23, x9, #1
  40c7d8:	cmp	x23, x22
  40c7dc:	b.ls	40c7f0 <wcrtomb@plt+0x9b90>  // b.plast
  40c7e0:	ldr	x0, [x20, #16]
  40c7e4:	mov	x1, x23
  40c7e8:	bl	402870 <realloc@plt>
  40c7ec:	cbnz	x0, 40c804 <wcrtomb@plt+0x9ba4>
  40c7f0:	tbnz	x22, #63, 40c84c <wcrtomb@plt+0x9bec>
  40c7f4:	ldr	x0, [x20, #16]
  40c7f8:	mov	x1, x22
  40c7fc:	bl	416e54 <wcrtomb@plt+0x141f4>
  40c800:	mov	x23, x22
  40c804:	ldr	x8, [x20, #8]
  40c808:	str	x23, [x20]
  40c80c:	str	x0, [x20, #16]
  40c810:	ldr	x9, [x20, #16]
  40c814:	mov	x1, x21
  40c818:	mov	x2, x19
  40c81c:	add	x22, x9, x8
  40c820:	mov	x0, x22
  40c824:	bl	402580 <memcpy@plt>
  40c828:	ldr	x8, [x20, #8]
  40c82c:	mov	x0, x22
  40c830:	ldr	x23, [sp, #16]
  40c834:	add	x8, x8, x19
  40c838:	str	x8, [x20, #8]
  40c83c:	ldp	x20, x19, [sp, #48]
  40c840:	ldp	x22, x21, [sp, #32]
  40c844:	ldp	x29, x30, [sp], #64
  40c848:	ret
  40c84c:	bl	4170f0 <wcrtomb@plt+0x14490>
  40c850:	stp	x29, x30, [sp, #-48]!
  40c854:	cmn	w1, #0x1
  40c858:	stp	x22, x21, [sp, #16]
  40c85c:	stp	x20, x19, [sp, #32]
  40c860:	mov	x29, sp
  40c864:	b.eq	40c88c <wcrtomb@plt+0x9c2c>  // b.none
  40c868:	ldp	x9, x8, [x0]
  40c86c:	mov	w19, w1
  40c870:	mov	x20, x0
  40c874:	cmp	x9, x8
  40c878:	b.ne	40c8dc <wcrtomb@plt+0x9c7c>  // b.any
  40c87c:	adds	x21, x9, #0x1
  40c880:	b.cc	40c8a0 <wcrtomb@plt+0x9c40>  // b.lo, b.ul, b.last
  40c884:	mov	x8, #0xffffffffffffffff    	// #-1
  40c888:	b	40c8dc <wcrtomb@plt+0x9c7c>
  40c88c:	mov	x0, xzr
  40c890:	ldp	x20, x19, [sp, #32]
  40c894:	ldp	x22, x21, [sp, #16]
  40c898:	ldp	x29, x30, [sp], #48
  40c89c:	ret
  40c8a0:	lsl	x22, x9, #1
  40c8a4:	cmp	x22, x21
  40c8a8:	b.ls	40c8bc <wcrtomb@plt+0x9c5c>  // b.plast
  40c8ac:	ldr	x0, [x20, #16]
  40c8b0:	mov	x1, x22
  40c8b4:	bl	402870 <realloc@plt>
  40c8b8:	cbnz	x0, 40c8d0 <wcrtomb@plt+0x9c70>
  40c8bc:	tbnz	x21, #63, 40c900 <wcrtomb@plt+0x9ca0>
  40c8c0:	ldr	x0, [x20, #16]
  40c8c4:	mov	x1, x21
  40c8c8:	bl	416e54 <wcrtomb@plt+0x141f4>
  40c8cc:	mov	x22, x21
  40c8d0:	ldr	x8, [x20, #8]
  40c8d4:	str	x22, [x20]
  40c8d8:	str	x0, [x20, #16]
  40c8dc:	ldr	x9, [x20, #16]
  40c8e0:	add	x10, x8, #0x1
  40c8e4:	str	x10, [x20, #8]
  40c8e8:	add	x0, x9, x8
  40c8ec:	strb	w19, [x0]
  40c8f0:	ldp	x20, x19, [sp, #32]
  40c8f4:	ldp	x22, x21, [sp, #16]
  40c8f8:	ldp	x29, x30, [sp], #48
  40c8fc:	ret
  40c900:	bl	4170f0 <wcrtomb@plt+0x14490>
  40c904:	stp	x29, x30, [sp, #-32]!
  40c908:	str	x19, [sp, #16]
  40c90c:	mov	x19, x0
  40c910:	mov	x29, sp
  40c914:	cbz	x0, 40c920 <wcrtomb@plt+0x9cc0>
  40c918:	ldr	x0, [x19, #16]
  40c91c:	bl	402a10 <free@plt>
  40c920:	mov	x0, x19
  40c924:	ldr	x19, [sp, #16]
  40c928:	ldp	x29, x30, [sp], #32
  40c92c:	b	402a10 <free@plt>
  40c930:	stp	x29, x30, [sp, #-48]!
  40c934:	stp	x22, x21, [sp, #16]
  40c938:	stp	x20, x19, [sp, #32]
  40c93c:	mov	x29, sp
  40c940:	mov	x20, x2
  40c944:	mov	x21, x0
  40c948:	bl	414b4c <wcrtomb@plt+0x11eec>
  40c94c:	mov	w19, w0
  40c950:	cmn	w0, #0x1
  40c954:	b.eq	40c988 <wcrtomb@plt+0x9d28>  // b.none
  40c958:	cmn	w19, #0x2
  40c95c:	b.ne	40c9c4 <wcrtomb@plt+0x9d64>  // b.any
  40c960:	bl	402bd0 <__errno_location@plt>
  40c964:	ldr	w20, [x0]
  40c968:	mov	x0, x21
  40c96c:	bl	416630 <wcrtomb@plt+0x139d0>
  40c970:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c974:	mov	x3, x0
  40c978:	add	x2, x2, #0xa81
  40c97c:	mov	w0, wzr
  40c980:	mov	w1, w20
  40c984:	b	40c9c0 <wcrtomb@plt+0x9d60>
  40c988:	bl	402bd0 <__errno_location@plt>
  40c98c:	ldr	w21, [x0]
  40c990:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40c994:	add	x1, x1, #0xb83
  40c998:	mov	w2, #0x5                   	// #5
  40c99c:	mov	x0, xzr
  40c9a0:	bl	402b40 <dcgettext@plt>
  40c9a4:	mov	x22, x0
  40c9a8:	mov	x0, x20
  40c9ac:	bl	416630 <wcrtomb@plt+0x139d0>
  40c9b0:	mov	x3, x0
  40c9b4:	mov	w0, wzr
  40c9b8:	mov	w1, w21
  40c9bc:	mov	x2, x22
  40c9c0:	bl	402600 <error@plt>
  40c9c4:	mov	w0, w19
  40c9c8:	ldp	x20, x19, [sp, #32]
  40c9cc:	ldp	x22, x21, [sp, #16]
  40c9d0:	ldp	x29, x30, [sp], #48
  40c9d4:	ret
  40c9d8:	stp	x29, x30, [sp, #-32]!
  40c9dc:	ldrb	w8, [x2, #456]
  40c9e0:	mov	x9, #0xffffffffffffffff    	// #-1
  40c9e4:	str	x9, [x2, #48]
  40c9e8:	mov	w9, #0x1                   	// #1
  40c9ec:	str	x19, [sp, #16]
  40c9f0:	mov	x29, sp
  40c9f4:	stp	x0, x1, [x2, #32]
  40c9f8:	strb	w9, [x2, #120]
  40c9fc:	cbz	w8, 40cb5c <wcrtomb@plt+0x9efc>
  40ca00:	ldr	x8, [x2, #184]
  40ca04:	mov	x19, x2
  40ca08:	cbnz	x8, 40ca1c <wcrtomb@plt+0x9dbc>
  40ca0c:	mov	w1, #0x10b                 	// #267
  40ca10:	mov	w2, #0x3                   	// #3
  40ca14:	mov	x0, x19
  40ca18:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40ca1c:	mov	x0, x19
  40ca20:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  40ca24:	ldr	x8, [x19, #168]
  40ca28:	stp	x0, x8, [x19, #128]
  40ca2c:	mov	x0, x19
  40ca30:	bl	411ae0 <wcrtomb@plt+0xee80>
  40ca34:	ldr	x8, [x19, #128]
  40ca38:	cmp	x8, #0x106
  40ca3c:	b.eq	40ca90 <wcrtomb@plt+0x9e30>  // b.none
  40ca40:	cmp	x8, #0x108
  40ca44:	b.eq	40cb50 <wcrtomb@plt+0x9ef0>  // b.none
  40ca48:	tbnz	x8, #63, 40cae4 <wcrtomb@plt+0x9e84>
  40ca4c:	mov	x0, x19
  40ca50:	bl	411ae0 <wcrtomb@plt+0xee80>
  40ca54:	mov	w1, #0x105                 	// #261
  40ca58:	mov	w2, #0x3                   	// #3
  40ca5c:	mov	x0, x19
  40ca60:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40ca64:	ldr	x8, [x19, #128]
  40ca68:	cmp	x8, #0x106
  40ca6c:	b.ne	40ca40 <wcrtomb@plt+0x9de0>  // b.any
  40ca70:	b	40ca90 <wcrtomb@plt+0x9e30>
  40ca74:	mov	w1, #0x106                 	// #262
  40ca78:	mov	w2, #0x3                   	// #3
  40ca7c:	mov	x0, x19
  40ca80:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40ca84:	ldr	x8, [x19, #128]
  40ca88:	cmp	x8, #0x106
  40ca8c:	b.ne	40cae4 <wcrtomb@plt+0x9e84>  // b.any
  40ca90:	mov	x0, x19
  40ca94:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  40ca98:	str	x0, [x19, #128]
  40ca9c:	mov	x0, x19
  40caa0:	bl	411ae0 <wcrtomb@plt+0xee80>
  40caa4:	ldr	x8, [x19, #128]
  40caa8:	cmp	x8, #0x106
  40caac:	b.eq	40ca74 <wcrtomb@plt+0x9e14>  // b.none
  40cab0:	cmp	x8, #0x108
  40cab4:	b.eq	40ca74 <wcrtomb@plt+0x9e14>  // b.none
  40cab8:	tbnz	x8, #63, 40ca74 <wcrtomb@plt+0x9e14>
  40cabc:	mov	x0, x19
  40cac0:	bl	411ae0 <wcrtomb@plt+0xee80>
  40cac4:	mov	w1, #0x105                 	// #261
  40cac8:	mov	w2, #0x3                   	// #3
  40cacc:	mov	x0, x19
  40cad0:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cad4:	ldr	x8, [x19, #128]
  40cad8:	cmp	x8, #0x106
  40cadc:	b.ne	40cab0 <wcrtomb@plt+0x9e50>  // b.any
  40cae0:	b	40ca74 <wcrtomb@plt+0x9e14>
  40cae4:	cmn	x8, #0x1
  40cae8:	b.ne	40cb50 <wcrtomb@plt+0x9ef0>  // b.any
  40caec:	ldr	x8, [x19, #184]
  40caf0:	mov	x0, x19
  40caf4:	mvn	x1, x8
  40caf8:	bl	40cb74 <wcrtomb@plt+0x9f14>
  40cafc:	mov	w1, #0x105                 	// #261
  40cb00:	mov	w2, #0x3                   	// #3
  40cb04:	mov	x0, x19
  40cb08:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cb0c:	ldr	x8, [x19, #184]
  40cb10:	cbz	x8, 40cb3c <wcrtomb@plt+0x9edc>
  40cb14:	mov	w1, #0x106                 	// #262
  40cb18:	mov	w2, #0x3                   	// #3
  40cb1c:	mov	x0, x19
  40cb20:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cb24:	ldr	x8, [x19, #184]
  40cb28:	add	x8, x8, #0x1
  40cb2c:	str	x8, [x19, #184]
  40cb30:	ldr	x19, [sp, #16]
  40cb34:	ldp	x29, x30, [sp], #32
  40cb38:	ret
  40cb3c:	mov	w8, #0x1                   	// #1
  40cb40:	str	x8, [x19, #184]
  40cb44:	ldr	x19, [sp, #16]
  40cb48:	ldp	x29, x30, [sp], #32
  40cb4c:	ret
  40cb50:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40cb54:	add	x1, x1, #0xf04
  40cb58:	b	40cb64 <wcrtomb@plt+0x9f04>
  40cb5c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40cb60:	add	x1, x1, #0xef0
  40cb64:	mov	w2, #0x5                   	// #5
  40cb68:	mov	x0, xzr
  40cb6c:	bl	402b40 <dcgettext@plt>
  40cb70:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  40cb74:	sub	sp, sp, #0x60
  40cb78:	stp	x20, x19, [sp, #80]
  40cb7c:	cmp	x1, #0x113
  40cb80:	mov	x19, x0
  40cb84:	stp	x29, x30, [sp, #16]
  40cb88:	str	x25, [sp, #32]
  40cb8c:	stp	x24, x23, [sp, #48]
  40cb90:	stp	x22, x21, [sp, #64]
  40cb94:	add	x29, sp, #0x10
  40cb98:	b.ne	40cc94 <wcrtomb@plt+0xa034>  // b.any
  40cb9c:	ldrb	w8, [x19, #1048]
  40cba0:	cbz	w8, 40cc94 <wcrtomb@plt+0xa034>
  40cba4:	ldr	x8, [x19, #104]
  40cba8:	cmp	x8, #0x1
  40cbac:	b.lt	40ccb8 <wcrtomb@plt+0xa058>  // b.tstop
  40cbb0:	mov	x8, sp
  40cbb4:	mov	x22, xzr
  40cbb8:	mov	w21, wzr
  40cbbc:	orr	x23, x8, #0x1
  40cbc0:	b	40cbd8 <wcrtomb@plt+0x9f78>
  40cbc4:	ldr	x8, [x19, #104]
  40cbc8:	add	x22, x22, #0x1
  40cbcc:	mov	w21, #0x1                   	// #1
  40cbd0:	cmp	x22, x8
  40cbd4:	b.ge	40ccbc <wcrtomb@plt+0xa05c>  // b.tcont
  40cbd8:	ldr	x8, [x19, #96]
  40cbdc:	mov	x0, sp
  40cbe0:	add	x2, x29, #0x18
  40cbe4:	ldr	w1, [x8, x22, lsl #2]
  40cbe8:	str	xzr, [x29, #24]
  40cbec:	bl	402c60 <wcrtomb@plt>
  40cbf0:	cmn	x0, #0x1
  40cbf4:	b.eq	40cc68 <wcrtomb@plt+0xa008>  // b.none
  40cbf8:	ldrb	w1, [sp]
  40cbfc:	mov	x20, x0
  40cc00:	cmp	w20, #0x1
  40cc04:	b.eq	40cc70 <wcrtomb@plt+0xa010>  // b.none
  40cc08:	mov	w2, #0x1                   	// #1
  40cc0c:	mov	x0, x19
  40cc10:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cc14:	cmp	w20, #0x2
  40cc18:	b.lt	40cc7c <wcrtomb@plt+0xa01c>  // b.tstop
  40cc1c:	sub	w8, w20, #0x1
  40cc20:	and	x9, x20, #0xffffffff
  40cc24:	sub	x20, x8, #0x1
  40cc28:	sub	x24, x9, #0x1
  40cc2c:	mov	x25, x23
  40cc30:	ldrb	w1, [x25], #1
  40cc34:	cmp	x20, #0x0
  40cc38:	cset	w8, eq  // eq = none
  40cc3c:	lsl	w2, w8, #1
  40cc40:	mov	x0, x19
  40cc44:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cc48:	mov	w1, #0x105                 	// #261
  40cc4c:	mov	w2, #0x3                   	// #3
  40cc50:	mov	x0, x19
  40cc54:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cc58:	subs	x24, x24, #0x1
  40cc5c:	sub	x20, x20, #0x1
  40cc60:	b.ne	40cc30 <wcrtomb@plt+0x9fd0>  // b.any
  40cc64:	b	40cc7c <wcrtomb@plt+0xa01c>
  40cc68:	mov	x1, xzr
  40cc6c:	strb	wzr, [sp]
  40cc70:	mov	w2, #0x3                   	// #3
  40cc74:	mov	x0, x19
  40cc78:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cc7c:	tbz	w21, #0, 40cbc4 <wcrtomb@plt+0x9f64>
  40cc80:	mov	w1, #0x106                 	// #262
  40cc84:	mov	w2, #0x3                   	// #3
  40cc88:	mov	x0, x19
  40cc8c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40cc90:	b	40cbc4 <wcrtomb@plt+0x9f64>
  40cc94:	mov	x0, x19
  40cc98:	ldp	x20, x19, [sp, #80]
  40cc9c:	ldp	x22, x21, [sp, #64]
  40cca0:	ldp	x24, x23, [sp, #48]
  40cca4:	ldr	x25, [sp, #32]
  40cca8:	ldp	x29, x30, [sp, #16]
  40ccac:	mov	w2, #0x3                   	// #3
  40ccb0:	add	sp, sp, #0x60
  40ccb4:	b	4107a0 <wcrtomb@plt+0xdb40>
  40ccb8:	mov	w21, wzr
  40ccbc:	ldr	x8, [x19, #80]
  40ccc0:	str	xzr, [x19, #104]
  40ccc4:	cmn	x8, #0x1
  40ccc8:	b.eq	40ccec <wcrtomb@plt+0xa08c>  // b.none
  40cccc:	add	x1, x8, #0x114
  40ccd0:	mov	x0, x19
  40ccd4:	bl	40cb74 <wcrtomb@plt+0x9f14>
  40ccd8:	cbz	w21, 40ccec <wcrtomb@plt+0xa08c>
  40ccdc:	mov	w1, #0x106                 	// #262
  40cce0:	mov	w2, #0x3                   	// #3
  40cce4:	mov	x0, x19
  40cce8:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40ccec:	ldp	x20, x19, [sp, #80]
  40ccf0:	ldp	x22, x21, [sp, #64]
  40ccf4:	ldp	x24, x23, [sp, #48]
  40ccf8:	ldr	x25, [sp, #32]
  40ccfc:	ldp	x29, x30, [sp, #16]
  40cd00:	add	sp, sp, #0x60
  40cd04:	ret
  40cd08:	sub	sp, sp, #0x60
  40cd0c:	stp	x29, x30, [sp, #32]
  40cd10:	stp	x24, x23, [sp, #48]
  40cd14:	stp	x22, x21, [sp, #64]
  40cd18:	stp	x20, x19, [sp, #80]
  40cd1c:	ldr	x20, [x0, #40]
  40cd20:	mov	x19, x0
  40cd24:	add	x29, sp, #0x20
  40cd28:	cbz	x20, 40cdb8 <wcrtomb@plt+0xa158>
  40cd2c:	mov	w23, wzr
  40cd30:	add	x21, x19, #0x110
  40cd34:	mov	w24, #0x1                   	// #1
  40cd38:	ldr	x1, [x19, #32]
  40cd3c:	ldrb	w8, [x1]
  40cd40:	add	x8, x19, x8, lsl #2
  40cd44:	ldr	w22, [x8, #1308]
  40cd48:	cmn	w22, #0x1
  40cd4c:	b.ne	40cd84 <wcrtomb@plt+0xa124>  // b.any
  40cd50:	mov	x0, sp
  40cd54:	mov	x2, x20
  40cd58:	mov	x3, x21
  40cd5c:	bl	417134 <wcrtomb@plt+0x144d4>
  40cd60:	sub	x8, x0, #0x1
  40cd64:	cmn	x8, #0x3
  40cd68:	b.cs	40cd80 <wcrtomb@plt+0xa120>  // b.hs, b.nlast
  40cd6c:	ldr	w8, [sp]
  40cd70:	cmp	w0, #0x1
  40cd74:	str	w8, [x19, #72]
  40cd78:	b.eq	40cd88 <wcrtomb@plt+0xa128>  // b.none
  40cd7c:	b	40cf20 <wcrtomb@plt+0xa2c0>
  40cd80:	str	xzr, [x21]
  40cd84:	str	w22, [x19, #72]
  40cd88:	ldp	x12, x11, [x19, #32]
  40cd8c:	mov	x8, x12
  40cd90:	ldrb	w22, [x8], #1
  40cd94:	sub	x20, x11, #0x1
  40cd98:	cmp	w22, #0x5c
  40cd9c:	stp	x8, x20, [x19, #32]
  40cda0:	b.ne	40cdc0 <wcrtomb@plt+0xa160>  // b.any
  40cda4:	cbz	w24, 40cdfc <wcrtomb@plt+0xa19c>
  40cda8:	cbz	x20, 40d99c <wcrtomb@plt+0xad3c>
  40cdac:	sub	w24, w24, #0x1
  40cdb0:	mov	w23, #0x1                   	// #1
  40cdb4:	b	40cd38 <wcrtomb@plt+0xa0d8>
  40cdb8:	mov	x21, #0xffffffffffffffff    	// #-1
  40cdbc:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40cdc0:	sub	w8, w22, #0xa
  40cdc4:	cmp	w8, #0x72
  40cdc8:	b.hi	40ce00 <wcrtomb@plt+0xa1a0>  // b.pmore
  40cdcc:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40cdd0:	add	x9, x9, #0xba8
  40cdd4:	adr	x10, 40cde4 <wcrtomb@plt+0xa184>
  40cdd8:	ldrb	w13, [x9, x8]
  40cddc:	add	x10, x10, x13, lsl #2
  40cde0:	br	x10
  40cde4:	tbz	w23, #0, 40ce00 <wcrtomb@plt+0xa1a0>
  40cde8:	ldrb	w8, [x19, #449]
  40cdec:	tbnz	w8, #6, 40ce00 <wcrtomb@plt+0xa1a0>
  40cdf0:	strb	wzr, [x19, #120]
  40cdf4:	mov	w21, #0x112                 	// #274
  40cdf8:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40cdfc:	mov	w22, #0x5c                  	// #92
  40ce00:	ldrb	w8, [x19, #1048]
  40ce04:	strb	wzr, [x19, #120]
  40ce08:	cbz	w8, 40ce30 <wcrtomb@plt+0xa1d0>
  40ce0c:	mov	w21, #0x109                 	// #265
  40ce10:	str	x21, [x19, #48]
  40ce14:	mov	x0, x21
  40ce18:	ldp	x20, x19, [sp, #80]
  40ce1c:	ldp	x22, x21, [sp, #64]
  40ce20:	ldp	x24, x23, [sp, #48]
  40ce24:	ldp	x29, x30, [sp, #32]
  40ce28:	add	sp, sp, #0x60
  40ce2c:	ret
  40ce30:	ldrb	w8, [x19, #457]
  40ce34:	cbz	w8, 40ceac <wcrtomb@plt+0xa24c>
  40ce38:	bl	4029e0 <__ctype_b_loc@plt>
  40ce3c:	ldr	x8, [x0]
  40ce40:	sxtw	x21, w22
  40ce44:	ldrh	w8, [x8, w22, sxtw #1]
  40ce48:	tbz	w8, #10, 40ce10 <wcrtomb@plt+0xa1b0>
  40ce4c:	movi	v0.2d, #0x0
  40ce50:	stp	q0, q0, [sp]
  40ce54:	bl	402880 <__ctype_toupper_loc@plt>
  40ce58:	ldr	x8, [x0]
  40ce5c:	ldr	w20, [x8, x21, lsl #2]
  40ce60:	bl	402880 <__ctype_toupper_loc@plt>
  40ce64:	ldr	x9, [x0]
  40ce68:	mov	x8, xzr
  40ce6c:	mov	w10, #0x1                   	// #1
  40ce70:	mov	x11, sp
  40ce74:	b	40ce84 <wcrtomb@plt+0xa224>
  40ce78:	add	x8, x8, #0x1
  40ce7c:	cmp	x8, #0x100
  40ce80:	b.eq	40ceb4 <wcrtomb@plt+0xa254>  // b.none
  40ce84:	ldr	w12, [x9, x8, lsl #2]
  40ce88:	cmp	w12, w20
  40ce8c:	b.ne	40ce78 <wcrtomb@plt+0xa218>  // b.any
  40ce90:	ubfx	x12, x8, #6, #26
  40ce94:	lsl	x12, x12, #3
  40ce98:	ldr	x13, [x11, x12]
  40ce9c:	lsl	x14, x10, x8
  40cea0:	orr	x13, x13, x14
  40cea4:	str	x13, [x11, x12]
  40cea8:	b	40ce78 <wcrtomb@plt+0xa218>
  40ceac:	sxtw	x21, w22
  40ceb0:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40ceb4:	ldr	x9, [x19, #8]
  40ceb8:	cmp	x9, #0x0
  40cebc:	b.le	40d4f0 <wcrtomb@plt+0xa890>
  40cec0:	ldr	x0, [x19]
  40cec4:	ldp	x8, x10, [sp]
  40cec8:	ldp	x11, x12, [sp, #16]
  40cecc:	mov	x20, xzr
  40ced0:	add	x13, x0, #0x10
  40ced4:	ldp	x14, x15, [x13, #-16]
  40ced8:	ldp	x16, x17, [x13]
  40cedc:	eor	x14, x14, x8
  40cee0:	eor	x15, x15, x10
  40cee4:	eor	x16, x16, x11
  40cee8:	orr	x14, x15, x14
  40ceec:	orr	x14, x14, x16
  40cef0:	eor	x15, x17, x12
  40cef4:	orr	x14, x14, x15
  40cef8:	cbz	x14, 40d91c <wcrtomb@plt+0xacbc>
  40cefc:	add	x20, x20, #0x1
  40cf00:	cmp	x9, x20
  40cf04:	add	x13, x13, #0x20
  40cf08:	b.ne	40ced4 <wcrtomb@plt+0xa274>  // b.any
  40cf0c:	mov	x20, x9
  40cf10:	ldr	x8, [x19, #16]
  40cf14:	cmp	x8, x9
  40cf18:	b.gt	40d908 <wcrtomb@plt+0xaca8>
  40cf1c:	b	40d504 <wcrtomb@plt+0xa8a4>
  40cf20:	ldp	x8, x9, [x19, #32]
  40cf24:	sxtw	x10, w0
  40cf28:	mov	w22, #0xffffffff            	// #-1
  40cf2c:	add	x8, x8, x10
  40cf30:	sub	x9, x9, x10
  40cf34:	stp	x8, x9, [x19, #32]
  40cf38:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40cf3c:	tbz	w23, #0, 40ce00 <wcrtomb@plt+0xa1a0>
  40cf40:	ldrb	w8, [x19, #450]
  40cf44:	tbnz	w8, #3, 40ce00 <wcrtomb@plt+0xa1a0>
  40cf48:	ldrb	w8, [x19, #1048]
  40cf4c:	cbz	w8, 40d35c <wcrtomb@plt+0xa6fc>
  40cf50:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40cf54:	add	x23, x12, #0x1
  40cf58:	add	x8, x8, #0xfd1
  40cf5c:	cmp	w22, #0x77
  40cf60:	mov	w9, #0xb                   	// #11
  40cf64:	b	40cf90 <wcrtomb@plt+0xa330>
  40cf68:	tbz	w23, #0, 40ce00 <wcrtomb@plt+0xa1a0>
  40cf6c:	ldrb	w8, [x19, #450]
  40cf70:	tbnz	w8, #3, 40ce00 <wcrtomb@plt+0xa1a0>
  40cf74:	ldrb	w8, [x19, #1048]
  40cf78:	cbz	w8, 40d428 <wcrtomb@plt+0xa7c8>
  40cf7c:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40cf80:	add	x23, x12, #0x1
  40cf84:	add	x8, x8, #0xfc5
  40cf88:	cmp	w22, #0x73
  40cf8c:	mov	w9, #0xa                   	// #10
  40cf90:	cinc	x8, x8, eq  // eq = none
  40cf94:	cinc	x9, x9, ne  // ne = any
  40cf98:	mov	x0, x19
  40cf9c:	stp	x8, x9, [x19, #32]
  40cfa0:	bl	410944 <wcrtomb@plt+0xdce4>
  40cfa4:	mov	x21, x0
  40cfa8:	stp	x20, x0, [x19, #40]
  40cfac:	str	x23, [x19, #32]
  40cfb0:	strb	wzr, [x19, #120]
  40cfb4:	b	40ce14 <wcrtomb@plt+0xa1b4>
  40cfb8:	tbz	w23, #0, 40d1c0 <wcrtomb@plt+0xa560>
  40cfbc:	ldrb	w8, [x19, #450]
  40cfc0:	tbnz	w8, #3, 40d1c0 <wcrtomb@plt+0xa560>
  40cfc4:	mov	w21, #0x110                 	// #272
  40cfc8:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40cfcc:	ldr	x8, [x19, #448]
  40cfd0:	tbz	w8, #9, 40d800 <wcrtomb@plt+0xaba0>
  40cfd4:	mov	w10, #0x1                   	// #1
  40cfd8:	and	w9, w23, #0x1
  40cfdc:	bic	w10, w10, w8, lsr #12
  40cfe0:	cmp	w10, w9
  40cfe4:	b.ne	40d800 <wcrtomb@plt+0xaba0>  // b.any
  40cfe8:	tbnz	w8, #4, 40cff4 <wcrtomb@plt+0xa394>
  40cfec:	ldrb	w9, [x19, #120]
  40cff0:	cbnz	w9, 40d800 <wcrtomb@plt+0xaba0>
  40cff4:	add	x9, x12, x11
  40cff8:	movi	v0.2d, #0xffffffffffffffff
  40cffc:	str	d0, [x19, #64]
  40d000:	cbz	x20, 40d708 <wcrtomb@plt+0xaaa8>
  40d004:	mov	x13, xzr
  40d008:	mov	w10, #0xffffffff            	// #-1
  40d00c:	mov	w14, #0xa                   	// #10
  40d010:	mov	w15, #0x8030                	// #32816
  40d014:	mov	w16, #0x8000                	// #32768
  40d018:	b	40d1fc <wcrtomb@plt+0xa59c>
  40d01c:	tbz	w23, #0, 40d238 <wcrtomb@plt+0xa5d8>
  40d020:	mov	w22, #0x5b                  	// #91
  40d024:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d028:	ldr	x8, [x19, #448]
  40d02c:	tbnz	w8, #10, 40d1c8 <wcrtomb@plt+0xa568>
  40d030:	mov	w9, #0x1                   	// #1
  40d034:	and	w10, w23, #0x1
  40d038:	bic	w8, w9, w8, lsr #15
  40d03c:	cmp	w8, w10
  40d040:	b.ne	40d1c8 <wcrtomb@plt+0xa568>  // b.any
  40d044:	strb	w9, [x19, #120]
  40d048:	mov	w21, #0x106                 	// #262
  40d04c:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d050:	tbz	w23, #0, 40d1d0 <wcrtomb@plt+0xa570>
  40d054:	ldrb	w8, [x19, #450]
  40d058:	tbnz	w8, #3, 40d1d0 <wcrtomb@plt+0xa570>
  40d05c:	mov	w21, #0x10f                 	// #271
  40d060:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d064:	ldr	x8, [x19, #448]
  40d068:	tbnz	w8, #10, 40d084 <wcrtomb@plt+0xa424>
  40d06c:	ubfx	x9, x8, #1, #1
  40d070:	eor	w9, w23, w9
  40d074:	tbnz	w9, #0, 40d084 <wcrtomb@plt+0xa424>
  40d078:	tbnz	w8, #4, 40d5ac <wcrtomb@plt+0xa94c>
  40d07c:	ldrb	w8, [x19, #120]
  40d080:	cbz	w8, 40d5ac <wcrtomb@plt+0xa94c>
  40d084:	mov	w22, #0x2b                  	// #43
  40d088:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d08c:	tbz	w23, #0, 40d250 <wcrtomb@plt+0xa5f0>
  40d090:	mov	w22, #0x2e                  	// #46
  40d094:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d098:	ldr	x8, [x19, #448]
  40d09c:	mov	w10, #0x1                   	// #1
  40d0a0:	and	w9, w23, #0x1
  40d0a4:	bic	w10, w10, w8, lsr #13
  40d0a8:	cmp	w10, w9
  40d0ac:	b.ne	40d0bc <wcrtomb@plt+0xa45c>  // b.any
  40d0b0:	ldr	x9, [x19, #56]
  40d0b4:	tbz	w8, #17, 40d348 <wcrtomb@plt+0xa6e8>
  40d0b8:	cbnz	x9, 40d348 <wcrtomb@plt+0xa6e8>
  40d0bc:	mov	w22, #0x29                  	// #41
  40d0c0:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d0c4:	ldr	w9, [x19, #448]
  40d0c8:	mov	w8, #0x1                   	// #1
  40d0cc:	and	w10, w23, #0x1
  40d0d0:	bic	w9, w8, w9, lsr #13
  40d0d4:	cmp	w9, w10
  40d0d8:	b.ne	40d278 <wcrtomb@plt+0xa618>  // b.any
  40d0dc:	ldr	x9, [x19, #56]
  40d0e0:	strb	w8, [x19, #120]
  40d0e4:	mov	w21, #0x107                 	// #263
  40d0e8:	add	x8, x9, #0x1
  40d0ec:	str	x8, [x19, #56]
  40d0f0:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d0f4:	tbnz	w23, #0, 40d108 <wcrtomb@plt+0xa4a8>
  40d0f8:	ldrb	w8, [x19, #448]
  40d0fc:	tbnz	w8, #4, 40d340 <wcrtomb@plt+0xa6e0>
  40d100:	ldrb	w8, [x19, #120]
  40d104:	cbz	w8, 40d340 <wcrtomb@plt+0xa6e0>
  40d108:	mov	w22, #0x2a                  	// #42
  40d10c:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d110:	tbz	w23, #0, 40d11c <wcrtomb@plt+0xa4bc>
  40d114:	ldrb	w8, [x19, #450]
  40d118:	tbz	w8, #3, 40d300 <wcrtomb@plt+0xa6a0>
  40d11c:	mov	w22, #0x27                  	// #39
  40d120:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d124:	tbz	w23, #0, 40d1d8 <wcrtomb@plt+0xa578>
  40d128:	ldrb	w8, [x19, #450]
  40d12c:	tbnz	w8, #3, 40d1d8 <wcrtomb@plt+0xa578>
  40d130:	mov	w21, #0x111                 	// #273
  40d134:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d138:	tbz	w23, #0, 40d280 <wcrtomb@plt+0xa620>
  40d13c:	mov	w22, #0x24                  	// #36
  40d140:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d144:	ldr	x8, [x19, #448]
  40d148:	and	x8, x8, #0xc00
  40d14c:	cmp	x8, #0x800
  40d150:	cset	w8, ne  // ne = any
  40d154:	orr	w8, w23, w8
  40d158:	tbz	w8, #0, 40d308 <wcrtomb@plt+0xa6a8>
  40d15c:	mov	w22, #0xa                   	// #10
  40d160:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d164:	ldr	x8, [x19, #448]
  40d168:	tbnz	w8, #10, 40d184 <wcrtomb@plt+0xa524>
  40d16c:	ubfx	x9, x8, #1, #1
  40d170:	eor	w9, w23, w9
  40d174:	tbnz	w9, #0, 40d184 <wcrtomb@plt+0xa524>
  40d178:	tbnz	w8, #4, 40d5b4 <wcrtomb@plt+0xa954>
  40d17c:	ldrb	w8, [x19, #120]
  40d180:	cbz	w8, 40d5b4 <wcrtomb@plt+0xa954>
  40d184:	mov	w22, #0x3f                  	// #63
  40d188:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d18c:	tbz	w23, #0, 40d1e0 <wcrtomb@plt+0xa580>
  40d190:	ldrb	w8, [x19, #450]
  40d194:	tbnz	w8, #3, 40d1e0 <wcrtomb@plt+0xa580>
  40d198:	mov	w21, #0x10e                 	// #270
  40d19c:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d1a0:	tbz	w23, #0, 40d318 <wcrtomb@plt+0xa6b8>
  40d1a4:	mov	w22, #0x5e                  	// #94
  40d1a8:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1ac:	tbz	w23, #0, 40d1b8 <wcrtomb@plt+0xa558>
  40d1b0:	ldrb	w8, [x19, #450]
  40d1b4:	tbz	w8, #3, 40d338 <wcrtomb@plt+0xa6d8>
  40d1b8:	mov	w22, #0x60                  	// #96
  40d1bc:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1c0:	mov	w22, #0x62                  	// #98
  40d1c4:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1c8:	mov	w22, #0x7c                  	// #124
  40d1cc:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1d0:	mov	w22, #0x3e                  	// #62
  40d1d4:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1d8:	mov	w22, #0x42                  	// #66
  40d1dc:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1e0:	mov	w22, #0x3c                  	// #60
  40d1e4:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d1e8:	mov	w10, w0
  40d1ec:	add	x13, x13, #0x1
  40d1f0:	cmp	x20, x13
  40d1f4:	str	w10, [x19, #64]
  40d1f8:	b.eq	40d7a8 <wcrtomb@plt+0xab48>  // b.none
  40d1fc:	add	x17, x12, x13
  40d200:	ldrb	w18, [x17, #1]
  40d204:	sub	w0, w18, #0x30
  40d208:	cmp	w0, #0x9
  40d20c:	b.hi	40d718 <wcrtomb@plt+0xaab8>  // b.pmore
  40d210:	tbnz	w10, #31, 40d1e8 <wcrtomb@plt+0xa588>
  40d214:	madd	w10, w10, w14, w18
  40d218:	sub	w17, w10, #0x30
  40d21c:	cmp	w10, w15
  40d220:	csel	w10, w16, w17, gt
  40d224:	add	x13, x13, #0x1
  40d228:	cmp	x20, x13
  40d22c:	str	w10, [x19, #64]
  40d230:	b.ne	40d1fc <wcrtomb@plt+0xa59c>  // b.any
  40d234:	b	40d7a8 <wcrtomb@plt+0xab48>
  40d238:	mov	x0, x19
  40d23c:	strb	wzr, [x19, #120]
  40d240:	bl	410944 <wcrtomb@plt+0xdce4>
  40d244:	mov	x21, x0
  40d248:	str	x0, [x19, #48]
  40d24c:	b	40ce14 <wcrtomb@plt+0xa1b4>
  40d250:	ldr	x20, [x19, #24]
  40d254:	tbz	x20, #63, 40d980 <wcrtomb@plt+0xad20>
  40d258:	movi	v0.2d, #0xffffffffffffffff
  40d25c:	stp	q0, q0, [sp]
  40d260:	ldr	x8, [x19, #448]
  40d264:	tbnz	w8, #6, 40d5bc <wcrtomb@plt+0xa95c>
  40d268:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40d26c:	str	x9, [sp]
  40d270:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40d274:	b	40d5c0 <wcrtomb@plt+0xa960>
  40d278:	mov	w22, #0x28                  	// #40
  40d27c:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d280:	cbz	x20, 40d300 <wcrtomb@plt+0xa6a0>
  40d284:	ldr	x8, [x19, #448]
  40d288:	tbnz	w8, #3, 40d300 <wcrtomb@plt+0xa6a0>
  40d28c:	mov	w10, #0x1                   	// #1
  40d290:	bic	w13, w10, w8, lsr #13
  40d294:	cmp	x20, x13
  40d298:	add	x9, x12, #0x1
  40d29c:	b.le	40d2bc <wcrtomb@plt+0xa65c>
  40d2a0:	ldrb	w12, [x9]
  40d2a4:	cmp	w12, #0x5c
  40d2a8:	cset	w12, eq  // eq = none
  40d2ac:	and	x12, x13, x12
  40d2b0:	ldrb	w12, [x9, x12]
  40d2b4:	cmp	w12, #0x29
  40d2b8:	b.eq	40d300 <wcrtomb@plt+0xa6a0>  // b.none
  40d2bc:	bic	w10, w10, w8, lsr #15
  40d2c0:	cmp	x20, x10
  40d2c4:	b.le	40d2e4 <wcrtomb@plt+0xa684>
  40d2c8:	ldrb	w12, [x9]
  40d2cc:	cmp	w12, #0x5c
  40d2d0:	cset	w12, eq  // eq = none
  40d2d4:	and	x10, x10, x12
  40d2d8:	ldrb	w10, [x9, x10]
  40d2dc:	cmp	w10, #0x7c
  40d2e0:	b.eq	40d300 <wcrtomb@plt+0xa6a0>  // b.none
  40d2e4:	cmp	x11, #0x2
  40d2e8:	mov	w22, #0x24                  	// #36
  40d2ec:	b.lt	40ce00 <wcrtomb@plt+0xa1a0>  // b.tstop
  40d2f0:	tbz	w8, #11, 40ce00 <wcrtomb@plt+0xa1a0>
  40d2f4:	ldrb	w8, [x9]
  40d2f8:	cmp	w8, #0xa
  40d2fc:	b.ne	40d13c <wcrtomb@plt+0xa4dc>  // b.any
  40d300:	mov	w21, #0x10d                 	// #269
  40d304:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d308:	mov	w8, #0x1                   	// #1
  40d30c:	mov	w21, #0x106                 	// #262
  40d310:	strb	w8, [x19, #120]
  40d314:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d318:	ldrb	w8, [x19, #448]
  40d31c:	tbnz	w8, #3, 40d338 <wcrtomb@plt+0xa6d8>
  40d320:	ldr	x8, [x19, #48]
  40d324:	sub	x9, x8, #0x106
  40d328:	cmp	x9, #0x2
  40d32c:	b.cc	40d338 <wcrtomb@plt+0xa6d8>  // b.lo, b.ul, b.last
  40d330:	cmn	x8, #0x1
  40d334:	b.ne	40d1a4 <wcrtomb@plt+0xa544>  // b.any
  40d338:	mov	w21, #0x10c                 	// #268
  40d33c:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d340:	mov	w21, #0x102                 	// #258
  40d344:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d348:	sub	x8, x9, #0x1
  40d34c:	strb	wzr, [x19, #120]
  40d350:	mov	w21, #0x108                 	// #264
  40d354:	str	x8, [x19, #56]
  40d358:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d35c:	mov	x8, xzr
  40d360:	movi	v0.2d, #0x0
  40d364:	add	x9, x19, #0x1cc
  40d368:	mov	w10, #0x1                   	// #1
  40d36c:	mov	x11, sp
  40d370:	stp	q0, q0, [sp]
  40d374:	b	40d384 <wcrtomb@plt+0xa724>
  40d378:	add	x8, x8, #0x1
  40d37c:	cmp	x8, #0x100
  40d380:	b.eq	40d3ac <wcrtomb@plt+0xa74c>  // b.none
  40d384:	ldrb	w12, [x9, x8]
  40d388:	cmp	w12, #0x2
  40d38c:	b.ne	40d378 <wcrtomb@plt+0xa718>  // b.any
  40d390:	ubfx	x12, x8, #6, #26
  40d394:	lsl	x12, x12, #3
  40d398:	ldr	x13, [x11, x12]
  40d39c:	lsl	x14, x10, x8
  40d3a0:	orr	x13, x13, x14
  40d3a4:	str	x13, [x11, x12]
  40d3a8:	b	40d378 <wcrtomb@plt+0xa718>
  40d3ac:	cmp	w22, #0x57
  40d3b0:	b.ne	40d3c4 <wcrtomb@plt+0xa764>  // b.any
  40d3b4:	ldp	q0, q1, [sp]
  40d3b8:	mvn	v0.16b, v0.16b
  40d3bc:	mvn	v1.16b, v1.16b
  40d3c0:	stp	q0, q1, [sp]
  40d3c4:	ldr	x9, [x19, #8]
  40d3c8:	strb	wzr, [x19, #120]
  40d3cc:	cmp	x9, #0x0
  40d3d0:	b.le	40d6c0 <wcrtomb@plt+0xaa60>
  40d3d4:	ldr	x0, [x19]
  40d3d8:	ldp	x8, x10, [sp]
  40d3dc:	ldp	x11, x12, [sp, #16]
  40d3e0:	mov	x20, xzr
  40d3e4:	add	x13, x0, #0x10
  40d3e8:	ldp	x14, x15, [x13, #-16]
  40d3ec:	ldp	x16, x17, [x13]
  40d3f0:	eor	x14, x14, x8
  40d3f4:	eor	x15, x15, x10
  40d3f8:	eor	x16, x16, x11
  40d3fc:	orr	x14, x15, x14
  40d400:	orr	x14, x14, x16
  40d404:	eor	x15, x17, x12
  40d408:	orr	x14, x14, x15
  40d40c:	cbz	x14, 40d91c <wcrtomb@plt+0xacbc>
  40d410:	add	x20, x20, #0x1
  40d414:	cmp	x9, x20
  40d418:	add	x13, x13, #0x20
  40d41c:	b.ne	40d3e8 <wcrtomb@plt+0xa788>  // b.any
  40d420:	mov	x20, x9
  40d424:	b	40d6c8 <wcrtomb@plt+0xaa68>
  40d428:	movi	v0.2d, #0x0
  40d42c:	stp	q0, q0, [sp]
  40d430:	bl	4029e0 <__ctype_b_loc@plt>
  40d434:	ldr	x9, [x0]
  40d438:	mov	x8, xzr
  40d43c:	mov	w10, #0x1                   	// #1
  40d440:	mov	x11, sp
  40d444:	b	40d454 <wcrtomb@plt+0xa7f4>
  40d448:	add	x8, x8, #0x1
  40d44c:	cmp	x8, #0x100
  40d450:	b.eq	40d478 <wcrtomb@plt+0xa818>  // b.none
  40d454:	ldrh	w12, [x9, x8, lsl #1]
  40d458:	tbz	w12, #13, 40d448 <wcrtomb@plt+0xa7e8>
  40d45c:	ubfx	x12, x8, #6, #26
  40d460:	lsl	x12, x12, #3
  40d464:	ldr	x13, [x11, x12]
  40d468:	lsl	x14, x10, x8
  40d46c:	orr	x13, x13, x14
  40d470:	str	x13, [x11, x12]
  40d474:	b	40d448 <wcrtomb@plt+0xa7e8>
  40d478:	cmp	w22, #0x53
  40d47c:	b.ne	40d490 <wcrtomb@plt+0xa830>  // b.any
  40d480:	ldp	q0, q1, [sp]
  40d484:	mvn	v0.16b, v0.16b
  40d488:	mvn	v1.16b, v1.16b
  40d48c:	stp	q0, q1, [sp]
  40d490:	ldr	x9, [x19, #8]
  40d494:	strb	wzr, [x19, #120]
  40d498:	cmp	x9, #0x0
  40d49c:	b.le	40d4f0 <wcrtomb@plt+0xa890>
  40d4a0:	ldr	x0, [x19]
  40d4a4:	ldp	x8, x10, [sp]
  40d4a8:	ldp	x11, x12, [sp, #16]
  40d4ac:	mov	x20, xzr
  40d4b0:	add	x13, x0, #0x10
  40d4b4:	ldp	x14, x15, [x13, #-16]
  40d4b8:	ldp	x16, x17, [x13]
  40d4bc:	eor	x14, x14, x8
  40d4c0:	eor	x15, x15, x10
  40d4c4:	eor	x16, x16, x11
  40d4c8:	orr	x14, x15, x14
  40d4cc:	orr	x14, x14, x16
  40d4d0:	eor	x15, x17, x12
  40d4d4:	orr	x14, x14, x15
  40d4d8:	cbz	x14, 40d91c <wcrtomb@plt+0xacbc>
  40d4dc:	add	x20, x20, #0x1
  40d4e0:	cmp	x9, x20
  40d4e4:	add	x13, x13, #0x20
  40d4e8:	b.ne	40d4b4 <wcrtomb@plt+0xa854>  // b.any
  40d4ec:	b	40cf0c <wcrtomb@plt+0xa2ac>
  40d4f0:	ldr	x0, [x19]
  40d4f4:	mov	x20, xzr
  40d4f8:	ldr	x8, [x19, #16]
  40d4fc:	cmp	x8, x9
  40d500:	b.gt	40d908 <wcrtomb@plt+0xaca8>
  40d504:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40d508:	adds	x10, x8, x8, asr #1
  40d50c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40d510:	movk	x9, #0x7fff, lsl #48
  40d514:	csel	x21, x11, x10, vs
  40d518:	cmp	x21, x9
  40d51c:	csel	x10, x21, x9, lt  // lt = tstop
  40d520:	tbnz	x10, #63, 40d538 <wcrtomb@plt+0xa8d8>
  40d524:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40d528:	cmp	x10, x11
  40d52c:	b.le	40d550 <wcrtomb@plt+0xa8f0>
  40d530:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40d534:	b	40d560 <wcrtomb@plt+0xa900>
  40d538:	cmn	x10, #0x1
  40d53c:	b.eq	40d55c <wcrtomb@plt+0xa8fc>  // b.none
  40d540:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40d544:	sdiv	x11, x11, x10
  40d548:	cmp	x11, #0x20
  40d54c:	b.lt	40d530 <wcrtomb@plt+0xa8d0>  // b.tstop
  40d550:	lsl	x1, x10, #5
  40d554:	cmp	x1, #0x7f
  40d558:	b.gt	40d57c <wcrtomb@plt+0xa91c>
  40d55c:	mov	w10, #0x80                  	// #128
  40d560:	lsr	x21, x10, #5
  40d564:	and	x1, x10, #0x7fffffffffffffe0
  40d568:	cbnz	x0, 40d580 <wcrtomb@plt+0xa920>
  40d56c:	str	xzr, [x19, #16]
  40d570:	cmp	x21, x8
  40d574:	b.gt	40d8fc <wcrtomb@plt+0xac9c>
  40d578:	b	40d588 <wcrtomb@plt+0xa928>
  40d57c:	cbz	x0, 40d56c <wcrtomb@plt+0xa90c>
  40d580:	cmp	x21, x8
  40d584:	b.gt	40d8fc <wcrtomb@plt+0xac9c>
  40d588:	adds	x21, x8, #0x1
  40d58c:	b.vs	40d9b4 <wcrtomb@plt+0xad54>
  40d590:	cmp	x21, x9
  40d594:	b.gt	40d9b4 <wcrtomb@plt+0xad54>
  40d598:	tbnz	x21, #63, 40d8e0 <wcrtomb@plt+0xac80>
  40d59c:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40d5a0:	cmp	x21, x8
  40d5a4:	b.le	40d8f8 <wcrtomb@plt+0xac98>
  40d5a8:	b	40d9b4 <wcrtomb@plt+0xad54>
  40d5ac:	mov	w21, #0x103                 	// #259
  40d5b0:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d5b4:	mov	w21, #0x101                 	// #257
  40d5b8:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d5bc:	mov	x9, #0xfffffffffffffffe    	// #-2
  40d5c0:	tbz	w8, #7, 40d5c8 <wcrtomb@plt+0xa968>
  40d5c4:	str	x9, [sp]
  40d5c8:	ldrb	w8, [x19, #1048]
  40d5cc:	cbz	w8, 40d618 <wcrtomb@plt+0xa9b8>
  40d5d0:	mov	x8, xzr
  40d5d4:	add	x9, x19, #0x51c
  40d5d8:	mov	w10, #0x1                   	// #1
  40d5dc:	mov	x11, sp
  40d5e0:	b	40d5f0 <wcrtomb@plt+0xa990>
  40d5e4:	add	x8, x8, #0x1
  40d5e8:	cmp	x8, #0x100
  40d5ec:	b.eq	40d618 <wcrtomb@plt+0xa9b8>  // b.none
  40d5f0:	ldr	w12, [x9, x8, lsl #2]
  40d5f4:	cmn	w12, #0x1
  40d5f8:	b.ne	40d5e4 <wcrtomb@plt+0xa984>  // b.any
  40d5fc:	ubfx	x12, x8, #6, #26
  40d600:	lsl	x12, x12, #3
  40d604:	ldr	x13, [x11, x12]
  40d608:	lsl	x14, x10, x8
  40d60c:	bic	x13, x13, x14
  40d610:	str	x13, [x11, x12]
  40d614:	b	40d5e4 <wcrtomb@plt+0xa984>
  40d618:	ldr	x9, [x19, #8]
  40d61c:	cmp	x9, #0x0
  40d620:	b.le	40d678 <wcrtomb@plt+0xaa18>
  40d624:	ldr	x0, [x19]
  40d628:	ldp	x8, x10, [sp]
  40d62c:	ldp	x11, x12, [sp, #16]
  40d630:	mov	x20, xzr
  40d634:	add	x13, x0, #0x10
  40d638:	ldp	x14, x15, [x13, #-16]
  40d63c:	ldp	x16, x17, [x13]
  40d640:	eor	x14, x14, x8
  40d644:	eor	x15, x15, x10
  40d648:	eor	x16, x16, x11
  40d64c:	orr	x14, x15, x14
  40d650:	orr	x14, x14, x16
  40d654:	eor	x15, x17, x12
  40d658:	orr	x14, x14, x15
  40d65c:	cbz	x14, 40d97c <wcrtomb@plt+0xad1c>
  40d660:	add	x20, x20, #0x1
  40d664:	cmp	x9, x20
  40d668:	add	x13, x13, #0x20
  40d66c:	b.ne	40d638 <wcrtomb@plt+0xa9d8>  // b.any
  40d670:	mov	x20, x9
  40d674:	b	40d680 <wcrtomb@plt+0xaa20>
  40d678:	ldr	x0, [x19]
  40d67c:	mov	x20, xzr
  40d680:	ldr	x8, [x19, #16]
  40d684:	cmp	x8, x9
  40d688:	b.gt	40d968 <wcrtomb@plt+0xad08>
  40d68c:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40d690:	adds	x10, x8, x8, asr #1
  40d694:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40d698:	movk	x9, #0x7fff, lsl #48
  40d69c:	csel	x21, x11, x10, vs
  40d6a0:	cmp	x21, x9
  40d6a4:	csel	x10, x21, x9, lt  // lt = tstop
  40d6a8:	tbnz	x10, #63, 40d808 <wcrtomb@plt+0xaba8>
  40d6ac:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40d6b0:	cmp	x10, x11
  40d6b4:	b.le	40d820 <wcrtomb@plt+0xabc0>
  40d6b8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40d6bc:	b	40d830 <wcrtomb@plt+0xabd0>
  40d6c0:	ldr	x0, [x19]
  40d6c4:	mov	x20, xzr
  40d6c8:	ldr	x8, [x19, #16]
  40d6cc:	cmp	x8, x9
  40d6d0:	b.gt	40d908 <wcrtomb@plt+0xaca8>
  40d6d4:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40d6d8:	adds	x10, x8, x8, asr #1
  40d6dc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40d6e0:	movk	x9, #0x7fff, lsl #48
  40d6e4:	csel	x21, x11, x10, vs
  40d6e8:	cmp	x21, x9
  40d6ec:	csel	x10, x21, x9, lt  // lt = tstop
  40d6f0:	tbnz	x10, #63, 40d87c <wcrtomb@plt+0xac1c>
  40d6f4:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40d6f8:	cmp	x10, x11
  40d6fc:	b.le	40d894 <wcrtomb@plt+0xac34>
  40d700:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40d704:	b	40d8a4 <wcrtomb@plt+0xac44>
  40d708:	add	x11, x12, #0x1
  40d70c:	mov	w12, #0xffffffff            	// #-1
  40d710:	mov	w10, #0xffffffff            	// #-1
  40d714:	b	40d7c0 <wcrtomb@plt+0xab60>
  40d718:	cmp	w18, #0x2c
  40d71c:	b.ne	40d7b4 <wcrtomb@plt+0xab54>  // b.any
  40d720:	tbz	w10, #31, 40d72c <wcrtomb@plt+0xaacc>
  40d724:	mov	w10, wzr
  40d728:	str	wzr, [x19, #64]
  40d72c:	sub	x14, x11, #0x2
  40d730:	cmp	x14, x13
  40d734:	b.eq	40d7a8 <wcrtomb@plt+0xab48>  // b.none
  40d738:	sub	x11, x11, x13
  40d73c:	add	x16, x12, x13
  40d740:	mov	w12, #0xffffffff            	// #-1
  40d744:	mov	w13, #0xa                   	// #10
  40d748:	mov	w14, #0x8030                	// #32816
  40d74c:	sub	x15, x11, #0x2
  40d750:	add	x11, x16, #0x2
  40d754:	mov	w16, #0x8000                	// #32768
  40d758:	b	40d770 <wcrtomb@plt+0xab10>
  40d75c:	mov	w12, w18
  40d760:	subs	x15, x15, #0x1
  40d764:	add	x11, x11, #0x1
  40d768:	str	w12, [x19, #68]
  40d76c:	b.eq	40d7ac <wcrtomb@plt+0xab4c>  // b.none
  40d770:	ldrb	w17, [x11]
  40d774:	sub	w18, w17, #0x30
  40d778:	cmp	w18, #0x9
  40d77c:	b.hi	40d7c0 <wcrtomb@plt+0xab60>  // b.pmore
  40d780:	tbnz	w12, #31, 40d75c <wcrtomb@plt+0xaafc>
  40d784:	madd	w12, w12, w13, w17
  40d788:	sub	w17, w12, #0x30
  40d78c:	cmp	w12, w14
  40d790:	csel	w12, w16, w17, gt
  40d794:	subs	x15, x15, #0x1
  40d798:	add	x11, x11, #0x1
  40d79c:	str	w12, [x19, #68]
  40d7a0:	b.ne	40d770 <wcrtomb@plt+0xab10>  // b.any
  40d7a4:	b	40d7ac <wcrtomb@plt+0xab4c>
  40d7a8:	mov	w12, #0xffffffff            	// #-1
  40d7ac:	mov	x11, x9
  40d7b0:	b	40d7c0 <wcrtomb@plt+0xab60>
  40d7b4:	add	x11, x17, #0x1
  40d7b8:	str	w10, [x19, #68]
  40d7bc:	mov	w12, w10
  40d7c0:	tbz	w23, #0, 40d7d8 <wcrtomb@plt+0xab78>
  40d7c4:	cmp	x11, x9
  40d7c8:	b.eq	40d7fc <wcrtomb@plt+0xab9c>  // b.none
  40d7cc:	ldrb	w13, [x11], #1
  40d7d0:	cmp	w13, #0x5c
  40d7d4:	b.ne	40d7fc <wcrtomb@plt+0xab9c>  // b.any
  40d7d8:	cmp	x11, x9
  40d7dc:	b.eq	40d7fc <wcrtomb@plt+0xab9c>  // b.none
  40d7e0:	ldrb	w13, [x11], #1
  40d7e4:	cmp	w13, #0x7d
  40d7e8:	b.ne	40d7fc <wcrtomb@plt+0xab9c>  // b.any
  40d7ec:	tbnz	w10, #31, 40d7fc <wcrtomb@plt+0xab9c>
  40d7f0:	tbnz	w12, #31, 40d924 <wcrtomb@plt+0xacc4>
  40d7f4:	cmp	w10, w12
  40d7f8:	b.le	40d924 <wcrtomb@plt+0xacc4>
  40d7fc:	tbz	w8, #21, 40d9b8 <wcrtomb@plt+0xad58>
  40d800:	mov	w22, #0x7b                  	// #123
  40d804:	b	40ce00 <wcrtomb@plt+0xa1a0>
  40d808:	cmn	x10, #0x1
  40d80c:	b.eq	40d82c <wcrtomb@plt+0xabcc>  // b.none
  40d810:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40d814:	sdiv	x11, x11, x10
  40d818:	cmp	x11, #0x20
  40d81c:	b.lt	40d6b8 <wcrtomb@plt+0xaa58>  // b.tstop
  40d820:	lsl	x1, x10, #5
  40d824:	cmp	x1, #0x7f
  40d828:	b.gt	40d84c <wcrtomb@plt+0xabec>
  40d82c:	mov	w10, #0x80                  	// #128
  40d830:	lsr	x21, x10, #5
  40d834:	and	x1, x10, #0x7fffffffffffffe0
  40d838:	cbnz	x0, 40d850 <wcrtomb@plt+0xabf0>
  40d83c:	str	xzr, [x19, #16]
  40d840:	cmp	x21, x8
  40d844:	b.gt	40d95c <wcrtomb@plt+0xacfc>
  40d848:	b	40d858 <wcrtomb@plt+0xabf8>
  40d84c:	cbz	x0, 40d83c <wcrtomb@plt+0xabdc>
  40d850:	cmp	x21, x8
  40d854:	b.gt	40d95c <wcrtomb@plt+0xacfc>
  40d858:	adds	x21, x8, #0x1
  40d85c:	b.vs	40d9b4 <wcrtomb@plt+0xad54>
  40d860:	cmp	x21, x9
  40d864:	b.gt	40d9b4 <wcrtomb@plt+0xad54>
  40d868:	tbnz	x21, #63, 40d940 <wcrtomb@plt+0xace0>
  40d86c:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40d870:	cmp	x21, x8
  40d874:	b.le	40d958 <wcrtomb@plt+0xacf8>
  40d878:	b	40d9b4 <wcrtomb@plt+0xad54>
  40d87c:	cmn	x10, #0x1
  40d880:	b.eq	40d8a0 <wcrtomb@plt+0xac40>  // b.none
  40d884:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40d888:	sdiv	x11, x11, x10
  40d88c:	cmp	x11, #0x20
  40d890:	b.lt	40d700 <wcrtomb@plt+0xaaa0>  // b.tstop
  40d894:	lsl	x1, x10, #5
  40d898:	cmp	x1, #0x7f
  40d89c:	b.gt	40d8c0 <wcrtomb@plt+0xac60>
  40d8a0:	mov	w10, #0x80                  	// #128
  40d8a4:	lsr	x21, x10, #5
  40d8a8:	and	x1, x10, #0x7fffffffffffffe0
  40d8ac:	cbnz	x0, 40d8c4 <wcrtomb@plt+0xac64>
  40d8b0:	str	xzr, [x19, #16]
  40d8b4:	cmp	x21, x8
  40d8b8:	b.gt	40d8fc <wcrtomb@plt+0xac9c>
  40d8bc:	b	40d8cc <wcrtomb@plt+0xac6c>
  40d8c0:	cbz	x0, 40d8b0 <wcrtomb@plt+0xac50>
  40d8c4:	cmp	x21, x8
  40d8c8:	b.gt	40d8fc <wcrtomb@plt+0xac9c>
  40d8cc:	adds	x21, x8, #0x1
  40d8d0:	b.vs	40d9b4 <wcrtomb@plt+0xad54>
  40d8d4:	cmp	x21, x9
  40d8d8:	b.gt	40d9b4 <wcrtomb@plt+0xad54>
  40d8dc:	tbz	x21, #63, 40d59c <wcrtomb@plt+0xa93c>
  40d8e0:	cmn	x21, #0x1
  40d8e4:	b.eq	40d8f8 <wcrtomb@plt+0xac98>  // b.none
  40d8e8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40d8ec:	sdiv	x8, x8, x21
  40d8f0:	cmp	x8, #0x20
  40d8f4:	b.lt	40d9b4 <wcrtomb@plt+0xad54>  // b.tstop
  40d8f8:	lsl	x1, x21, #5
  40d8fc:	bl	416e54 <wcrtomb@plt+0x141f4>
  40d900:	ldr	x9, [x19, #8]
  40d904:	str	x21, [x19, #16]
  40d908:	add	x8, x9, #0x1
  40d90c:	stp	x0, x8, [x19]
  40d910:	ldp	q1, q0, [sp]
  40d914:	add	x8, x0, x20, lsl #5
  40d918:	stp	q1, q0, [x8]
  40d91c:	add	x21, x20, #0x114
  40d920:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d924:	cmp	w12, #0x8, lsl #12
  40d928:	b.ge	40d9d0 <wcrtomb@plt+0xad70>  // b.tcont
  40d92c:	sub	x8, x9, x11
  40d930:	strb	wzr, [x19, #120]
  40d934:	mov	w21, #0x104                 	// #260
  40d938:	stp	x11, x8, [x19, #32]
  40d93c:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d940:	cmn	x21, #0x1
  40d944:	b.eq	40d958 <wcrtomb@plt+0xacf8>  // b.none
  40d948:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40d94c:	sdiv	x8, x8, x21
  40d950:	cmp	x8, #0x20
  40d954:	b.lt	40d9b4 <wcrtomb@plt+0xad54>  // b.tstop
  40d958:	lsl	x1, x21, #5
  40d95c:	bl	416e54 <wcrtomb@plt+0x141f4>
  40d960:	ldr	x9, [x19, #8]
  40d964:	str	x21, [x19, #16]
  40d968:	add	x8, x9, #0x1
  40d96c:	stp	x0, x8, [x19]
  40d970:	ldp	q1, q0, [sp]
  40d974:	add	x8, x0, x20, lsl #5
  40d978:	stp	q1, q0, [x8]
  40d97c:	str	x20, [x19, #24]
  40d980:	ldrb	w8, [x19, #1048]
  40d984:	add	x9, x20, #0x114
  40d988:	strb	wzr, [x19, #120]
  40d98c:	cmp	w8, #0x0
  40d990:	mov	w8, #0x10a                 	// #266
  40d994:	csel	x21, x9, x8, eq  // eq = none
  40d998:	b	40ce10 <wcrtomb@plt+0xa1b0>
  40d99c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40d9a0:	add	x1, x1, #0xf7e
  40d9a4:	mov	w2, #0x5                   	// #5
  40d9a8:	mov	x0, xzr
  40d9ac:	bl	402b40 <dcgettext@plt>
  40d9b0:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  40d9b4:	bl	4170f0 <wcrtomb@plt+0x14490>
  40d9b8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40d9bc:	add	x1, x1, #0xf92
  40d9c0:	mov	w2, #0x5                   	// #5
  40d9c4:	mov	x0, xzr
  40d9c8:	bl	402b40 <dcgettext@plt>
  40d9cc:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  40d9d0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40d9d4:	add	x1, x1, #0xfaa
  40d9d8:	mov	w2, #0x5                   	// #5
  40d9dc:	mov	x0, xzr
  40d9e0:	bl	402b40 <dcgettext@plt>
  40d9e4:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  40d9e8:	ldr	x6, [x0, #1040]
  40d9ec:	and	w3, w3, #0x1
  40d9f0:	br	x6
  40d9f4:	ldr	x0, [x0, #288]
  40d9f8:	ret
  40d9fc:	ldrb	w0, [x0, #192]
  40da00:	ret
  40da04:	sub	sp, sp, #0x70
  40da08:	stp	x22, x21, [sp, #80]
  40da0c:	stp	x20, x19, [sp, #96]
  40da10:	mov	w22, w3
  40da14:	mov	x20, x2
  40da18:	stp	x29, x30, [sp, #16]
  40da1c:	stp	x28, x27, [sp, #32]
  40da20:	stp	x26, x25, [sp, #48]
  40da24:	stp	x24, x23, [sp, #64]
  40da28:	add	x29, sp, #0x10
  40da2c:	cbz	x0, 40da38 <wcrtomb@plt+0xadd8>
  40da30:	mov	x2, x20
  40da34:	bl	40c9d8 <wcrtomb@plt+0x9d78>
  40da38:	mov	w0, #0x920                 	// #2336
  40da3c:	bl	416dd4 <wcrtomb@plt+0x14174>
  40da40:	mov	w2, #0x920                 	// #2336
  40da44:	mov	x1, x20
  40da48:	mov	x21, x0
  40da4c:	bl	402580 <memcpy@plt>
  40da50:	adrp	x9, 410000 <wcrtomb@plt+0xd3a0>
  40da54:	add	x9, x9, #0x638
  40da58:	add	x8, x21, #0x118
  40da5c:	movi	v0.2d, #0x0
  40da60:	strb	wzr, [x21, #1048]
  40da64:	str	xzr, [x21, #320]
  40da68:	str	x9, [x21, #1040]
  40da6c:	stp	q0, q0, [x8]
  40da70:	ldr	x8, [x21, #16]
  40da74:	stp	xzr, xzr, [x21, #344]
  40da78:	str	xzr, [x21, #336]
  40da7c:	stp	q0, q0, [x21, #368]
  40da80:	lsr	x9, x8, #58
  40da84:	cbnz	x9, 40deec <wcrtomb@plt+0xb28c>
  40da88:	lsl	x0, x8, #5
  40da8c:	bl	416dd4 <wcrtomb@plt+0x14174>
  40da90:	str	x0, [x21]
  40da94:	ldr	x8, [x20, #8]
  40da98:	cbz	x8, 40daa8 <wcrtomb@plt+0xae48>
  40da9c:	ldr	x1, [x20]
  40daa0:	lsl	x2, x8, #5
  40daa4:	bl	402580 <memcpy@plt>
  40daa8:	ldr	x8, [x20, #152]
  40daac:	lsr	x9, x8, #59
  40dab0:	cbnz	x9, 40deec <wcrtomb@plt+0xb28c>
  40dab4:	lsl	x0, x8, #4
  40dab8:	bl	416dd4 <wcrtomb@plt+0x14174>
  40dabc:	str	x0, [x21, #144]
  40dac0:	ldr	x8, [x20, #152]
  40dac4:	lsl	x9, x8, #1
  40dac8:	cmp	x8, #0x0
  40dacc:	str	x9, [x21, #160]
  40dad0:	b.le	40dd44 <wcrtomb@plt+0xb0e4>
  40dad4:	ldr	x9, [x20, #144]
  40dad8:	stur	w22, [x29, #-4]
  40dadc:	mov	x24, xzr
  40dae0:	mov	x19, xzr
  40dae4:	mov	w23, wzr
  40dae8:	mov	w8, wzr
  40daec:	mov	w26, #0x1                   	// #1
  40daf0:	mov	w16, #0x100                 	// #256
  40daf4:	mov	w28, #0x301                 	// #769
  40daf8:	mov	w22, #0x102                 	// #258
  40dafc:	movi	v0.2d, #0xffffffffffffffff
  40db00:	b	40db38 <wcrtomb@plt+0xaed8>
  40db04:	str	x10, [x0, x19, lsl #3]
  40db08:	ldr	x10, [x9, x24, lsl #3]
  40db0c:	add	x19, x19, #0x1
  40db10:	cmp	x10, #0x100
  40db14:	cset	w11, cc  // cc = lo, ul, last
  40db18:	cmp	x10, #0x113
  40db1c:	cset	w10, gt
  40db20:	orr	w10, w11, w10
  40db24:	orr	w23, w23, w10
  40db28:	ldr	x10, [x20, #152]
  40db2c:	add	x24, x24, #0x1
  40db30:	cmp	x24, x10
  40db34:	b.ge	40dd1c <wcrtomb@plt+0xb0bc>  // b.tcont
  40db38:	ldr	x10, [x9, x24, lsl #3]
  40db3c:	sub	x11, x10, #0x10a
  40db40:	cmp	x11, #0x9
  40db44:	b.hi	40db04 <wcrtomb@plt+0xaea4>  // b.pmore
  40db48:	lsl	x12, x26, x11
  40db4c:	tst	x12, #0xf0
  40db50:	b.eq	40db6c <wcrtomb@plt+0xaf0c>  // b.none
  40db54:	ldrb	w11, [x20, #1048]
  40db58:	cbz	w11, 40db04 <wcrtomb@plt+0xaea4>
  40db5c:	add	x10, x19, #0x1
  40db60:	str	x16, [x0, x19, lsl #3]
  40db64:	mov	x19, x10
  40db68:	b	40db28 <wcrtomb@plt+0xaec8>
  40db6c:	lsl	x11, x26, x11
  40db70:	tst	x11, x28
  40db74:	b.eq	40db04 <wcrtomb@plt+0xaea4>  // b.none
  40db78:	ldr	x10, [x21, #8]
  40db7c:	cmp	x10, #0x0
  40db80:	b.le	40dbd0 <wcrtomb@plt+0xaf70>
  40db84:	ldr	x8, [x21]
  40db88:	mov	x25, xzr
  40db8c:	add	x11, x8, #0x10
  40db90:	ldp	x12, x13, [x11, #-16]
  40db94:	ldp	x14, x15, [x11]
  40db98:	and	x12, x13, x12
  40db9c:	and	x12, x12, x14
  40dba0:	and	x12, x12, x15
  40dba4:	cmn	x12, #0x1
  40dba8:	b.eq	40dcf0 <wcrtomb@plt+0xb090>  // b.none
  40dbac:	add	x25, x25, #0x1
  40dbb0:	cmp	x10, x25
  40dbb4:	add	x11, x11, #0x20
  40dbb8:	b.ne	40db90 <wcrtomb@plt+0xaf30>  // b.any
  40dbbc:	mov	x25, x10
  40dbc0:	ldr	x9, [x21, #16]
  40dbc4:	cmp	x9, x10
  40dbc8:	b.le	40dbe4 <wcrtomb@plt+0xaf84>
  40dbcc:	b	40dcd8 <wcrtomb@plt+0xb078>
  40dbd0:	ldr	x8, [x21]
  40dbd4:	mov	x25, xzr
  40dbd8:	ldr	x9, [x21, #16]
  40dbdc:	cmp	x9, x10
  40dbe0:	b.gt	40dcd8 <wcrtomb@plt+0xb078>
  40dbe4:	adds	x10, x9, x9, asr #1
  40dbe8:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40dbec:	csel	x27, x11, x10, vs
  40dbf0:	mov	x10, #0xfffffffffffffeeb    	// #-277
  40dbf4:	movk	x10, #0x7fff, lsl #48
  40dbf8:	cmp	x27, x10
  40dbfc:	mov	x12, #0xfffffffffffffeeb    	// #-277
  40dc00:	movk	x12, #0x7fff, lsl #48
  40dc04:	csel	x10, x27, x10, lt  // lt = tstop
  40dc08:	tbnz	x10, #63, 40dc38 <wcrtomb@plt+0xafd8>
  40dc0c:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40dc10:	cmp	x10, x11
  40dc14:	b.le	40dc50 <wcrtomb@plt+0xaff0>
  40dc18:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40dc1c:	lsr	x27, x10, #5
  40dc20:	and	x1, x10, #0x7fffffffffffffe0
  40dc24:	cbnz	x8, 40dc74 <wcrtomb@plt+0xb014>
  40dc28:	str	xzr, [x21, #16]
  40dc2c:	cmp	x27, x9
  40dc30:	b.gt	40dcbc <wcrtomb@plt+0xb05c>
  40dc34:	b	40dc7c <wcrtomb@plt+0xb01c>
  40dc38:	cmn	x10, #0x1
  40dc3c:	b.eq	40dc5c <wcrtomb@plt+0xaffc>  // b.none
  40dc40:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40dc44:	sdiv	x11, x11, x10
  40dc48:	cmp	x11, #0x20
  40dc4c:	b.lt	40dc18 <wcrtomb@plt+0xafb8>  // b.tstop
  40dc50:	lsl	x1, x10, #5
  40dc54:	cmp	x1, #0x7f
  40dc58:	b.gt	40dc70 <wcrtomb@plt+0xb010>
  40dc5c:	mov	w10, #0x80                  	// #128
  40dc60:	lsr	x27, x10, #5
  40dc64:	and	x1, x10, #0x7fffffffffffffe0
  40dc68:	cbnz	x8, 40dc74 <wcrtomb@plt+0xb014>
  40dc6c:	b	40dc28 <wcrtomb@plt+0xafc8>
  40dc70:	cbz	x8, 40dc28 <wcrtomb@plt+0xafc8>
  40dc74:	cmp	x27, x9
  40dc78:	b.gt	40dcbc <wcrtomb@plt+0xb05c>
  40dc7c:	adds	x27, x9, #0x1
  40dc80:	b.vs	40deec <wcrtomb@plt+0xb28c>
  40dc84:	cmp	x27, x12
  40dc88:	b.gt	40deec <wcrtomb@plt+0xb28c>
  40dc8c:	tbnz	x27, #63, 40dca0 <wcrtomb@plt+0xb040>
  40dc90:	mov	x9, #0x3ffffffffffffff     	// #288230376151711743
  40dc94:	cmp	x27, x9
  40dc98:	b.le	40dcb8 <wcrtomb@plt+0xb058>
  40dc9c:	b	40deec <wcrtomb@plt+0xb28c>
  40dca0:	cmn	x27, #0x1
  40dca4:	b.eq	40dcb8 <wcrtomb@plt+0xb058>  // b.none
  40dca8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40dcac:	sdiv	x9, x9, x27
  40dcb0:	cmp	x9, #0x20
  40dcb4:	b.lt	40deec <wcrtomb@plt+0xb28c>  // b.tstop
  40dcb8:	lsl	x1, x27, #5
  40dcbc:	mov	x0, x8
  40dcc0:	bl	416e54 <wcrtomb@plt+0x141f4>
  40dcc4:	ldr	x10, [x21, #8]
  40dcc8:	mov	x8, x0
  40dccc:	mov	w16, #0x100                 	// #256
  40dcd0:	movi	v0.2d, #0xffffffffffffffff
  40dcd4:	str	x27, [x21, #16]
  40dcd8:	add	x9, x10, #0x1
  40dcdc:	add	x10, x8, x25, lsl #5
  40dce0:	stp	x8, x9, [x21]
  40dce4:	stp	q0, q0, [x10]
  40dce8:	ldr	x0, [x21, #144]
  40dcec:	ldr	x9, [x20, #144]
  40dcf0:	add	x8, x25, #0x114
  40dcf4:	add	x10, x0, x19, lsl #3
  40dcf8:	add	x11, x24, #0x1
  40dcfc:	stp	x8, x22, [x10]
  40dd00:	ldr	x8, [x9, x11, lsl #3]
  40dd04:	add	x19, x19, #0x2
  40dd08:	sub	x8, x8, #0x101
  40dd0c:	cmp	x8, #0x3
  40dd10:	cinc	x24, x24, cc  // cc = lo, ul, last
  40dd14:	mov	w8, #0x1                   	// #1
  40dd18:	b	40db28 <wcrtomb@plt+0xaec8>
  40dd1c:	ldur	w22, [x29, #-4]
  40dd20:	str	x19, [x21, #152]
  40dd24:	tbz	w23, #0, 40dd48 <wcrtomb@plt+0xb0e8>
  40dd28:	tbnz	w8, #0, 40dd34 <wcrtomb@plt+0xb0d4>
  40dd2c:	ldrb	w8, [x20, #1048]
  40dd30:	cbz	w8, 40dd48 <wcrtomb@plt+0xb0e8>
  40dd34:	str	x21, [x20, #288]
  40dd38:	cmp	x10, #0x1
  40dd3c:	b.ge	40dd64 <wcrtomb@plt+0xb104>  // b.tcont
  40dd40:	b	40ddd4 <wcrtomb@plt+0xb174>
  40dd44:	str	xzr, [x21, #152]
  40dd48:	mov	x0, x21
  40dd4c:	bl	40f3b8 <wcrtomb@plt+0xc758>
  40dd50:	mov	x0, x21
  40dd54:	bl	402a10 <free@plt>
  40dd58:	ldr	x10, [x20, #152]
  40dd5c:	cmp	x10, #0x1
  40dd60:	b.lt	40ddd4 <wcrtomb@plt+0xb174>  // b.tstop
  40dd64:	ldr	x8, [x20, #144]
  40dd68:	mov	x9, x10
  40dd6c:	b	40dd84 <wcrtomb@plt+0xb124>
  40dd70:	ldrb	w11, [x20, #1048]
  40dd74:	cbnz	w11, 40dda0 <wcrtomb@plt+0xb140>
  40dd78:	subs	x9, x9, #0x1
  40dd7c:	add	x8, x8, #0x8
  40dd80:	b.eq	40ddd4 <wcrtomb@plt+0xb174>  // b.none
  40dd84:	ldr	x11, [x8]
  40dd88:	sub	x12, x11, #0x10e
  40dd8c:	cmp	x12, #0x4
  40dd90:	b.cc	40dd70 <wcrtomb@plt+0xb110>  // b.lo, b.ul, b.last
  40dd94:	sub	x11, x11, #0x112
  40dd98:	cmp	x11, #0x2
  40dd9c:	b.cs	40dd78 <wcrtomb@plt+0xb118>  // b.hs, b.nlast
  40dda0:	adrp	x8, 40f000 <wcrtomb@plt+0xc3a0>
  40dda4:	add	x8, x8, #0x3a8
  40dda8:	str	x8, [x20, #1040]
  40ddac:	ldr	x0, [x20, #288]
  40ddb0:	cbnz	x0, 40dec0 <wcrtomb@plt+0xb260>
  40ddb4:	ldp	x20, x19, [sp, #96]
  40ddb8:	ldp	x22, x21, [sp, #80]
  40ddbc:	ldp	x24, x23, [sp, #64]
  40ddc0:	ldp	x26, x25, [sp, #48]
  40ddc4:	ldp	x28, x27, [sp, #32]
  40ddc8:	ldp	x29, x30, [sp, #16]
  40ddcc:	add	sp, sp, #0x70
  40ddd0:	ret
  40ddd4:	ldrb	w8, [x20, #1050]
  40ddd8:	cbz	w8, 40deac <wcrtomb@plt+0xb24c>
  40dddc:	cmp	x10, #0x1
  40dde0:	b.lt	40de2c <wcrtomb@plt+0xb1cc>  // b.tstop
  40dde4:	ldr	x8, [x20, #144]
  40dde8:	mov	w9, wzr
  40ddec:	ldr	x11, [x8]
  40ddf0:	cmp	x11, #0x112
  40ddf4:	b.eq	40de18 <wcrtomb@plt+0xb1b8>  // b.none
  40ddf8:	cmp	x11, #0x113
  40ddfc:	b.eq	40deac <wcrtomb@plt+0xb24c>  // b.none
  40de00:	cmp	x11, #0x10a
  40de04:	b.eq	40def0 <wcrtomb@plt+0xb290>  // b.none
  40de08:	subs	x10, x10, #0x1
  40de0c:	add	x8, x8, #0x8
  40de10:	b.ne	40ddec <wcrtomb@plt+0xb18c>  // b.any
  40de14:	b	40de28 <wcrtomb@plt+0xb1c8>
  40de18:	mov	w9, #0x1                   	// #1
  40de1c:	subs	x10, x10, #0x1
  40de20:	add	x8, x8, #0x8
  40de24:	b.ne	40ddec <wcrtomb@plt+0xb18c>  // b.any
  40de28:	tbnz	w9, #0, 40de44 <wcrtomb@plt+0xb1e4>
  40de2c:	ldr	x0, [x20, #288]
  40de30:	cbz	x0, 40de44 <wcrtomb@plt+0xb1e4>
  40de34:	bl	40f3b8 <wcrtomb@plt+0xc758>
  40de38:	ldr	x0, [x20, #288]
  40de3c:	bl	402a10 <free@plt>
  40de40:	str	xzr, [x20, #288]
  40de44:	ldr	x0, [x20, #280]
  40de48:	bl	402a10 <free@plt>
  40de4c:	ldr	x0, [x20, #96]
  40de50:	bl	402a10 <free@plt>
  40de54:	ldr	x0, [x20, #408]
  40de58:	bl	402a10 <free@plt>
  40de5c:	ldr	x8, [x20, #432]
  40de60:	cbz	x8, 40de94 <wcrtomb@plt+0xb234>
  40de64:	ldr	x9, [x20, #352]
  40de68:	tbnz	x9, #63, 40de8c <wcrtomb@plt+0xb22c>
  40de6c:	mov	x19, #0xffffffffffffffff    	// #-1
  40de70:	ldr	x0, [x8, x19, lsl #3]
  40de74:	bl	402a10 <free@plt>
  40de78:	ldr	x9, [x20, #352]
  40de7c:	ldr	x8, [x20, #432]
  40de80:	add	x19, x19, #0x1
  40de84:	cmp	x19, x9
  40de88:	b.lt	40de70 <wcrtomb@plt+0xb210>  // b.tstop
  40de8c:	sub	x0, x8, #0x10
  40de90:	bl	402a10 <free@plt>
  40de94:	adrp	x8, 410000 <wcrtomb@plt+0xd3a0>
  40de98:	add	x8, x8, #0x638
  40de9c:	str	x8, [x20, #1040]
  40dea0:	mov	w8, #0x1                   	// #1
  40dea4:	strb	wzr, [x20, #1048]
  40dea8:	strb	w8, [x20, #192]
  40deac:	and	w1, w22, #0x1
  40deb0:	mov	x0, x20
  40deb4:	bl	40def4 <wcrtomb@plt+0xb294>
  40deb8:	ldr	x0, [x20, #288]
  40debc:	cbz	x0, 40ddb4 <wcrtomb@plt+0xb154>
  40dec0:	mov	w8, #0x1                   	// #1
  40dec4:	strb	w8, [x20, #192]
  40dec8:	and	w1, w22, #0x1
  40decc:	ldp	x20, x19, [sp, #96]
  40ded0:	ldp	x22, x21, [sp, #80]
  40ded4:	ldp	x24, x23, [sp, #64]
  40ded8:	ldp	x26, x25, [sp, #48]
  40dedc:	ldp	x28, x27, [sp, #32]
  40dee0:	ldp	x29, x30, [sp, #16]
  40dee4:	add	sp, sp, #0x70
  40dee8:	b	40def4 <wcrtomb@plt+0xb294>
  40deec:	bl	4170f0 <wcrtomb@plt+0x14490>
  40def0:	bl	402920 <abort@plt>
  40def4:	sub	sp, sp, #0x130
  40def8:	stp	x29, x30, [sp, #208]
  40defc:	stp	x28, x27, [sp, #224]
  40df00:	stp	x26, x25, [sp, #240]
  40df04:	stp	x24, x23, [sp, #256]
  40df08:	stp	x22, x21, [sp, #272]
  40df0c:	stp	x20, x19, [sp, #288]
  40df10:	ldr	x8, [x0, #176]
  40df14:	add	x29, sp, #0xd0
  40df18:	lsr	x9, x8, #58
  40df1c:	cbnz	x9, 40f3a4 <wcrtomb@plt+0xc744>
  40df20:	mov	x23, x0
  40df24:	mov	x19, #0x5555555555555555    	// #6148914691236517205
  40df28:	lsl	x0, x8, #5
  40df2c:	mov	w21, w1
  40df30:	movk	x19, #0x555, lsl #48
  40df34:	bl	416dd4 <wcrtomb@plt+0x14174>
  40df38:	ldr	x8, [x23, #168]
  40df3c:	str	x0, [sp, #16]
  40df40:	cmp	x8, x19
  40df44:	b.hi	40f3a4 <wcrtomb@plt+0xc744>  // b.pmore
  40df48:	ldr	x19, [x23, #176]
  40df4c:	add	x8, x8, x8, lsl #1
  40df50:	lsl	x0, x8, #3
  40df54:	and	w21, w21, #0x1
  40df58:	bl	416dd4 <wcrtomb@plt+0x14174>
  40df5c:	str	x0, [sp, #8]
  40df60:	mov	w1, #0x105                 	// #261
  40df64:	mov	w2, #0x3                   	// #3
  40df68:	mov	x0, x23
  40df6c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  40df70:	ldr	x20, [x23, #176]
  40df74:	strb	w21, [x23, #328]
  40df78:	lsr	x8, x20, #59
  40df7c:	cbnz	x8, 40f3a4 <wcrtomb@plt+0xc744>
  40df80:	lsl	x0, x20, #4
  40df84:	bl	416dd4 <wcrtomb@plt+0x14174>
  40df88:	stp	xzr, x20, [x29, #-72]
  40df8c:	stur	x0, [x29, #-80]
  40df90:	ldr	x0, [x23, #152]
  40df94:	mov	w1, #0x18                  	// #24
  40df98:	bl	417018 <wcrtomb@plt+0x143b8>
  40df9c:	ldr	x8, [x23, #152]
  40dfa0:	str	x0, [x23, #320]
  40dfa4:	stur	x23, [x29, #-88]
  40dfa8:	cmp	x8, #0x1
  40dfac:	b.lt	40e444 <wcrtomb@plt+0xb7e4>  // b.tstop
  40dfb0:	ldp	x22, x8, [sp, #8]
  40dfb4:	mov	w9, #0x1                   	// #1
  40dfb8:	adrp	x15, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40dfbc:	mov	x13, xzr
  40dfc0:	add	x14, x8, x19, lsl #4
  40dfc4:	add	x15, x15, #0xc1b
  40dfc8:	mov	w25, #0x18                  	// #24
  40dfcc:	dup	v0.2d, x9
  40dfd0:	mov	x16, x8
  40dfd4:	str	q0, [sp, #80]
  40dfd8:	b	40dff4 <wcrtomb@plt+0xb394>
  40dfdc:	mov	w8, #0x1                   	// #1
  40dfe0:	sturb	w8, [x22, #-24]
  40dfe4:	ldr	x8, [x23, #152]
  40dfe8:	add	x13, x13, #0x1
  40dfec:	cmp	x13, x8
  40dff0:	b.ge	40e444 <wcrtomb@plt+0xb7e4>  // b.tcont
  40dff4:	ldr	x8, [x23, #144]
  40dff8:	ldr	x8, [x8, x13, lsl #3]
  40dffc:	sub	x9, x8, #0x100
  40e000:	cmp	x9, #0x6
  40e004:	b.hi	40e1ac <wcrtomb@plt+0xb54c>  // b.pmore
  40e008:	adr	x10, 40dfdc <wcrtomb@plt+0xb37c>
  40e00c:	ldrb	w11, [x15, x9]
  40e010:	add	x10, x10, x11, lsl #2
  40e014:	br	x10
  40e018:	ldp	x10, x9, [x22, #-16]
  40e01c:	sub	x11, x16, x10, lsl #4
  40e020:	cmp	x9, #0x1
  40e024:	stp	x11, x10, [x29, #-56]
  40e028:	b.lt	40e188 <wcrtomb@plt+0xb528>  // b.tstop
  40e02c:	mov	x19, xzr
  40e030:	sub	x24, x14, x9, lsl #4
  40e034:	str	x16, [sp, #96]
  40e038:	stur	x13, [x29, #-96]
  40e03c:	str	x14, [sp, #104]
  40e040:	b	40e058 <wcrtomb@plt+0xb3f8>
  40e044:	ldur	x8, [x22, #-8]
  40e048:	add	x19, x19, #0x1
  40e04c:	add	x24, x24, #0x10
  40e050:	cmp	x19, x8
  40e054:	b.ge	40e170 <wcrtomb@plt+0xb510>  // b.tcont
  40e058:	ldur	x20, [x29, #-88]
  40e05c:	ldr	x9, [x24]
  40e060:	sub	x0, x29, #0x38
  40e064:	sub	x3, x29, #0x50
  40e068:	ldr	x8, [x20, #320]
  40e06c:	mov	w2, #0xffffffff            	// #-1
  40e070:	madd	x1, x9, x25, x8
  40e074:	bl	412974 <wcrtomb@plt+0xfd14>
  40e078:	ldr	x23, [x20, #320]
  40e07c:	ldr	x28, [x24]
  40e080:	madd	x27, x28, x25, x23
  40e084:	mov	x26, x27
  40e088:	ldr	x8, [x26, #16]!
  40e08c:	ldur	x21, [x29, #-72]
  40e090:	cmp	x8, x21
  40e094:	b.ge	40e150 <wcrtomb@plt+0xb4f0>  // b.tcont
  40e098:	ldr	x0, [x27]
  40e09c:	bl	402a10 <free@plt>
  40e0a0:	ldr	x8, [x26]
  40e0a4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40e0a8:	adds	x9, x8, x8, asr #1
  40e0ac:	csel	x20, x10, x9, vs
  40e0b0:	tbnz	x20, #63, 40e0c8 <wcrtomb@plt+0xb468>
  40e0b4:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40e0b8:	cmp	x20, x9
  40e0bc:	b.le	40e0e0 <wcrtomb@plt+0xb480>
  40e0c0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40e0c4:	b	40e0f0 <wcrtomb@plt+0xb490>
  40e0c8:	cmn	x20, #0x1
  40e0cc:	b.eq	40e0ec <wcrtomb@plt+0xb48c>  // b.none
  40e0d0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40e0d4:	sdiv	x9, x9, x20
  40e0d8:	cmp	x9, #0x10
  40e0dc:	b.lt	40e0c0 <wcrtomb@plt+0xb460>  // b.tstop
  40e0e0:	lsl	x1, x20, #4
  40e0e4:	cmp	x1, #0x7f
  40e0e8:	b.gt	40e0f8 <wcrtomb@plt+0xb498>
  40e0ec:	mov	w9, #0x80                  	// #128
  40e0f0:	lsr	x20, x9, #4
  40e0f4:	and	x1, x9, #0x7ffffffffffffff0
  40e0f8:	cmp	x20, x21
  40e0fc:	str	xzr, [x26]
  40e100:	b.ge	40e140 <wcrtomb@plt+0xb4e0>  // b.tcont
  40e104:	sub	x9, x21, x8
  40e108:	adds	x20, x8, x9
  40e10c:	b.vs	40f3a4 <wcrtomb@plt+0xc744>
  40e110:	tbnz	x20, #63, 40e124 <wcrtomb@plt+0xb4c4>
  40e114:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40e118:	cmp	x20, x8
  40e11c:	b.le	40e13c <wcrtomb@plt+0xb4dc>
  40e120:	b	40f3a4 <wcrtomb@plt+0xc744>
  40e124:	cmn	x20, #0x1
  40e128:	b.eq	40e13c <wcrtomb@plt+0xb4dc>  // b.none
  40e12c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40e130:	sdiv	x8, x8, x20
  40e134:	cmp	x8, #0x10
  40e138:	b.lt	40f3a4 <wcrtomb@plt+0xc744>  // b.tstop
  40e13c:	lsl	x1, x20, #4
  40e140:	mov	x0, xzr
  40e144:	bl	416e54 <wcrtomb@plt+0x141f4>
  40e148:	str	x20, [x26]
  40e14c:	str	x0, [x27]
  40e150:	madd	x8, x28, x25, x23
  40e154:	str	x21, [x8, #8]
  40e158:	cbz	x21, 40e044 <wcrtomb@plt+0xb3e4>
  40e15c:	ldr	x0, [x27]
  40e160:	ldur	x1, [x29, #-80]
  40e164:	lsl	x2, x21, #4
  40e168:	bl	402580 <memcpy@plt>
  40e16c:	b	40e044 <wcrtomb@plt+0xb3e4>
  40e170:	ldp	x13, x23, [x29, #-96]
  40e174:	ldp	x16, x14, [sp, #96]
  40e178:	adrp	x15, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40e17c:	add	x15, x15, #0xc1b
  40e180:	ldr	x8, [x23, #144]
  40e184:	ldr	x8, [x8, x13, lsl #3]
  40e188:	cmp	x8, #0x103
  40e18c:	b.ne	40dfdc <wcrtomb@plt+0xb37c>  // b.any
  40e190:	b	40dfe4 <wcrtomb@plt+0xb384>
  40e194:	mov	w8, #0x1                   	// #1
  40e198:	strb	w8, [x22]
  40e19c:	add	x8, x22, #0x18
  40e1a0:	stp	xzr, xzr, [x22, #8]
  40e1a4:	mov	x22, x8
  40e1a8:	b	40dfe4 <wcrtomb@plt+0xb384>
  40e1ac:	ldr	q0, [sp, #80]
  40e1b0:	cmp	x8, #0x112
  40e1b4:	mov	w8, #0x1ff                 	// #511
  40e1b8:	str	x13, [x14]
  40e1bc:	str	x13, [x16]
  40e1c0:	str	w8, [x14, #8]
  40e1c4:	str	w8, [x16, #8]
  40e1c8:	cset	w8, eq  // eq = none
  40e1cc:	stur	q0, [x22, #8]
  40e1d0:	add	x16, x16, #0x10
  40e1d4:	strb	w8, [x22], #24
  40e1d8:	add	x14, x14, #0x10
  40e1dc:	b	40dfe4 <wcrtomb@plt+0xb384>
  40e1e0:	ldur	x10, [x22, #-16]
  40e1e4:	ldur	x9, [x22, #-32]
  40e1e8:	sub	x8, x16, x10, lsl #4
  40e1ec:	cmp	x9, #0x1
  40e1f0:	stp	x8, x10, [x29, #-56]
  40e1f4:	b.lt	40e37c <wcrtomb@plt+0xb71c>  // b.tstop
  40e1f8:	ldur	x8, [x22, #-8]
  40e1fc:	mov	x19, xzr
  40e200:	str	x16, [sp, #96]
  40e204:	stur	x13, [x29, #-96]
  40e208:	sub	x8, x14, x8, lsl #4
  40e20c:	sub	x24, x8, x9, lsl #4
  40e210:	str	x14, [sp, #104]
  40e214:	b	40e22c <wcrtomb@plt+0xb5cc>
  40e218:	ldur	x9, [x22, #-32]
  40e21c:	add	x19, x19, #0x1
  40e220:	add	x24, x24, #0x10
  40e224:	cmp	x19, x9
  40e228:	b.ge	40e368 <wcrtomb@plt+0xb708>  // b.tcont
  40e22c:	ldur	x20, [x29, #-88]
  40e230:	ldr	x9, [x24]
  40e234:	sub	x0, x29, #0x38
  40e238:	sub	x3, x29, #0x50
  40e23c:	ldr	x8, [x20, #320]
  40e240:	mov	w2, #0xffffffff            	// #-1
  40e244:	madd	x1, x9, x25, x8
  40e248:	bl	412974 <wcrtomb@plt+0xfd14>
  40e24c:	ldr	x23, [x20, #320]
  40e250:	ldr	x28, [x24]
  40e254:	madd	x26, x28, x25, x23
  40e258:	mov	x27, x26
  40e25c:	ldr	x8, [x27, #16]!
  40e260:	ldur	x21, [x29, #-72]
  40e264:	cmp	x8, x21
  40e268:	b.ge	40e324 <wcrtomb@plt+0xb6c4>  // b.tcont
  40e26c:	ldr	x0, [x26]
  40e270:	bl	402a10 <free@plt>
  40e274:	ldr	x8, [x27]
  40e278:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40e27c:	adds	x9, x8, x8, asr #1
  40e280:	csel	x20, x10, x9, vs
  40e284:	tbnz	x20, #63, 40e29c <wcrtomb@plt+0xb63c>
  40e288:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40e28c:	cmp	x20, x9
  40e290:	b.le	40e2b4 <wcrtomb@plt+0xb654>
  40e294:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40e298:	b	40e2c4 <wcrtomb@plt+0xb664>
  40e29c:	cmn	x20, #0x1
  40e2a0:	b.eq	40e2c0 <wcrtomb@plt+0xb660>  // b.none
  40e2a4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40e2a8:	sdiv	x9, x9, x20
  40e2ac:	cmp	x9, #0x10
  40e2b0:	b.lt	40e294 <wcrtomb@plt+0xb634>  // b.tstop
  40e2b4:	lsl	x1, x20, #4
  40e2b8:	cmp	x1, #0x7f
  40e2bc:	b.gt	40e2cc <wcrtomb@plt+0xb66c>
  40e2c0:	mov	w9, #0x80                  	// #128
  40e2c4:	lsr	x20, x9, #4
  40e2c8:	and	x1, x9, #0x7ffffffffffffff0
  40e2cc:	cmp	x20, x21
  40e2d0:	str	xzr, [x27]
  40e2d4:	b.ge	40e314 <wcrtomb@plt+0xb6b4>  // b.tcont
  40e2d8:	sub	x9, x21, x8
  40e2dc:	adds	x20, x8, x9
  40e2e0:	b.vs	40f3a4 <wcrtomb@plt+0xc744>
  40e2e4:	tbnz	x20, #63, 40e2f8 <wcrtomb@plt+0xb698>
  40e2e8:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40e2ec:	cmp	x20, x8
  40e2f0:	b.le	40e310 <wcrtomb@plt+0xb6b0>
  40e2f4:	b	40f3a4 <wcrtomb@plt+0xc744>
  40e2f8:	cmn	x20, #0x1
  40e2fc:	b.eq	40e310 <wcrtomb@plt+0xb6b0>  // b.none
  40e300:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40e304:	sdiv	x8, x8, x20
  40e308:	cmp	x8, #0x10
  40e30c:	b.lt	40f3a4 <wcrtomb@plt+0xc744>  // b.tstop
  40e310:	lsl	x1, x20, #4
  40e314:	mov	x0, xzr
  40e318:	bl	416e54 <wcrtomb@plt+0x141f4>
  40e31c:	str	x20, [x27]
  40e320:	str	x0, [x26]
  40e324:	madd	x8, x28, x25, x23
  40e328:	str	x21, [x8, #8]
  40e32c:	cbz	x21, 40e218 <wcrtomb@plt+0xb5b8>
  40e330:	ldr	x0, [x26]
  40e334:	ldur	x1, [x29, #-80]
  40e338:	lsl	x2, x21, #4
  40e33c:	bl	402580 <memcpy@plt>
  40e340:	b	40e218 <wcrtomb@plt+0xb5b8>
  40e344:	ldrb	w8, [x22, #-24]!
  40e348:	ldur	q0, [x22, #8]
  40e34c:	ldur	q1, [x22, #-16]
  40e350:	ldurb	w9, [x22, #-24]
  40e354:	add	v0.2d, v1.2d, v0.2d
  40e358:	orr	w8, w9, w8
  40e35c:	stur	q0, [x22, #-16]
  40e360:	sturb	w8, [x22, #-24]
  40e364:	b	40dfe4 <wcrtomb@plt+0xb384>
  40e368:	ldur	x10, [x22, #-16]
  40e36c:	ldp	x13, x23, [x29, #-96]
  40e370:	ldp	x16, x14, [sp, #96]
  40e374:	adrp	x15, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40e378:	add	x15, x15, #0xc1b
  40e37c:	ldurb	w8, [x22, #-48]
  40e380:	cbz	w8, 40e3a8 <wcrtomb@plt+0xb748>
  40e384:	ldur	x11, [x22, #-40]
  40e388:	add	x10, x11, x10
  40e38c:	stur	x10, [x22, #-40]
  40e390:	ldurb	w10, [x22, #-24]
  40e394:	ldur	x12, [x22, #-8]
  40e398:	cbz	w10, 40e3b8 <wcrtomb@plt+0xb758>
  40e39c:	add	x10, x12, x9
  40e3a0:	mov	w9, #0x1                   	// #1
  40e3a4:	b	40e430 <wcrtomb@plt+0xb7d0>
  40e3a8:	sub	x16, x16, x10, lsl #4
  40e3ac:	ldurb	w10, [x22, #-24]
  40e3b0:	ldur	x12, [x22, #-8]
  40e3b4:	cbnz	w10, 40e39c <wcrtomb@plt+0xb73c>
  40e3b8:	cmp	x12, #0x1
  40e3bc:	neg	x11, x9
  40e3c0:	b.lt	40e424 <wcrtomb@plt+0xb7c4>  // b.tstop
  40e3c4:	sub	x8, x14, x12, lsl #4
  40e3c8:	sub	x8, x8, x9, lsl #4
  40e3cc:	ldur	x10, [x22, #-8]
  40e3d0:	ldr	q0, [x8, x9, lsl #4]
  40e3d4:	cmp	x10, #0x2
  40e3d8:	str	q0, [x8]
  40e3dc:	b.lt	40e410 <wcrtomb@plt+0xb7b0>  // b.tstop
  40e3e0:	sub	x9, x11, x12
  40e3e4:	add	x9, x14, x9, lsl #4
  40e3e8:	add	x9, x9, #0x10
  40e3ec:	mov	w11, #0x1                   	// #1
  40e3f0:	ldur	x12, [x22, #-32]
  40e3f4:	ldur	x10, [x22, #-8]
  40e3f8:	add	x12, x11, x12
  40e3fc:	ldr	q0, [x8, x12, lsl #4]
  40e400:	add	x11, x11, #0x1
  40e404:	cmp	x11, x10
  40e408:	str	q0, [x9], #16
  40e40c:	b.lt	40e3f0 <wcrtomb@plt+0xb790>  // b.tstop
  40e410:	ldur	x11, [x22, #-32]
  40e414:	ldurb	w9, [x22, #-24]
  40e418:	ldurb	w8, [x22, #-48]
  40e41c:	neg	x11, x11
  40e420:	b	40e42c <wcrtomb@plt+0xb7cc>
  40e424:	mov	w9, wzr
  40e428:	mov	x10, x12
  40e42c:	add	x14, x14, x11, lsl #4
  40e430:	and	w8, w8, w9
  40e434:	stur	x10, [x22, #-32]
  40e438:	sturb	w8, [x22, #-48]
  40e43c:	sub	x22, x22, #0x18
  40e440:	b	40dfe4 <wcrtomb@plt+0xb384>
  40e444:	ldr	x28, [x23, #176]
  40e448:	lsr	x8, x28, #59
  40e44c:	cbnz	x8, 40f3a4 <wcrtomb@plt+0xc744>
  40e450:	lsl	x0, x28, #4
  40e454:	mov	x19, x23
  40e458:	bl	416dd4 <wcrtomb@plt+0x14174>
  40e45c:	stp	xzr, x28, [x29, #-24]
  40e460:	stur	x0, [x29, #-32]
  40e464:	ldr	x8, [x23, #152]
  40e468:	mov	x22, x0
  40e46c:	cmp	x8, #0x1
  40e470:	b.lt	40e7c0 <wcrtomb@plt+0xbb60>  // b.tstop
  40e474:	mov	x20, xzr
  40e478:	mov	w21, #0x18                  	// #24
  40e47c:	b	40e48c <wcrtomb@plt+0xb82c>
  40e480:	add	x20, x20, #0x1
  40e484:	cmp	x20, x8
  40e488:	b.ge	40e7c0 <wcrtomb@plt+0xbb60>  // b.tcont
  40e48c:	ldr	x11, [x19, #320]
  40e490:	madd	x9, x20, x21, x11
  40e494:	ldr	x10, [x9, #8]!
  40e498:	cmp	x10, #0x1
  40e49c:	b.lt	40e480 <wcrtomb@plt+0xb820>  // b.tstop
  40e4a0:	ldr	x12, [x19, #144]
  40e4a4:	ldr	x12, [x12, x20, lsl #3]
  40e4a8:	cmp	x12, #0x100
  40e4ac:	cset	w13, lt  // lt = tstop
  40e4b0:	cmp	x12, #0x112
  40e4b4:	cset	w14, eq  // eq = none
  40e4b8:	cmp	x12, #0x10a
  40e4bc:	orr	w13, w13, w14
  40e4c0:	cset	w14, eq  // eq = none
  40e4c4:	cmp	x12, #0x113
  40e4c8:	orr	w13, w14, w13
  40e4cc:	cset	w14, eq  // eq = none
  40e4d0:	cmp	x12, #0x114
  40e4d4:	orr	w13, w14, w13
  40e4d8:	cset	w14, lt  // lt = tstop
  40e4dc:	eor	w13, w14, w13
  40e4e0:	cmp	w13, #0x1
  40e4e4:	b.ne	40e480 <wcrtomb@plt+0xb820>  // b.any
  40e4e8:	sub	x12, x12, #0x10c
  40e4ec:	cmp	x12, #0x5
  40e4f0:	b.hi	40e504 <wcrtomb@plt+0xb8a4>  // b.pmore
  40e4f4:	adrp	x13, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40e4f8:	add	x13, x13, #0xeb8
  40e4fc:	ldr	w12, [x13, x12, lsl #2]
  40e500:	b	40e508 <wcrtomb@plt+0xb8a8>
  40e504:	mov	w12, #0x1ff                 	// #511
  40e508:	madd	x11, x20, x21, x11
  40e50c:	ldr	x13, [x11]
  40e510:	mov	x15, xzr
  40e514:	mov	x16, x10
  40e518:	stur	w12, [x29, #-96]
  40e51c:	b	40e52c <wcrtomb@plt+0xb8cc>
  40e520:	add	x15, x12, #0x1
  40e524:	cmp	x15, x16
  40e528:	b.ge	40e554 <wcrtomb@plt+0xb8f4>  // b.tcont
  40e52c:	add	x12, x16, x15
  40e530:	asr	x12, x12, #1
  40e534:	lsl	x14, x12, #4
  40e538:	ldr	x17, [x13, x14]
  40e53c:	cmp	x17, x20
  40e540:	b.lt	40e520 <wcrtomb@plt+0xb8c0>  // b.tstop
  40e544:	b.eq	40e560 <wcrtomb@plt+0xb900>  // b.none
  40e548:	mov	x16, x12
  40e54c:	cmp	x15, x16
  40e550:	b.lt	40e52c <wcrtomb@plt+0xb8cc>  // b.tstop
  40e554:	cmp	x8, #0x1
  40e558:	b.ge	40e5c0 <wcrtomb@plt+0xb960>  // b.tcont
  40e55c:	b	40e480 <wcrtomb@plt+0xb820>
  40e560:	add	x8, x12, #0x1
  40e564:	cmp	x8, x10
  40e568:	b.ge	40e5ac <wcrtomb@plt+0xb94c>  // b.tcont
  40e56c:	ldr	q0, [x13, x8, lsl #4]
  40e570:	add	x15, x12, #0x2
  40e574:	cmp	x15, x10
  40e578:	str	q0, [x13, x12, lsl #4]
  40e57c:	b.eq	40e5b0 <wcrtomb@plt+0xb950>  // b.none
  40e580:	sub	x8, x10, #0x2
  40e584:	ldr	x10, [x11]
  40e588:	add	x12, x12, #0x1
  40e58c:	cmp	x8, x12
  40e590:	add	x10, x10, x14
  40e594:	ldr	q0, [x10, #32]
  40e598:	add	x14, x14, #0x10
  40e59c:	str	q0, [x10, #16]
  40e5a0:	b.ne	40e584 <wcrtomb@plt+0xb924>  // b.any
  40e5a4:	add	x8, x12, #0x1
  40e5a8:	b	40e5b0 <wcrtomb@plt+0xb950>
  40e5ac:	mov	x8, x12
  40e5b0:	str	x8, [x9]
  40e5b4:	ldr	x8, [x19, #152]
  40e5b8:	cmp	x8, #0x1
  40e5bc:	b.lt	40e480 <wcrtomb@plt+0xb820>  // b.tstop
  40e5c0:	mov	x27, xzr
  40e5c4:	b	40e5ec <wcrtomb@plt+0xb98c>
  40e5c8:	sub	x0, x29, #0x20
  40e5cc:	mov	x1, x24
  40e5d0:	mov	w2, w25
  40e5d4:	mov	x3, x23
  40e5d8:	bl	412974 <wcrtomb@plt+0xfd14>
  40e5dc:	ldr	x8, [x19, #152]
  40e5e0:	add	x27, x27, #0x1
  40e5e4:	cmp	x27, x8
  40e5e8:	b.ge	40e480 <wcrtomb@plt+0xb820>  // b.tcont
  40e5ec:	cmp	x20, x27
  40e5f0:	b.eq	40e5dc <wcrtomb@plt+0xb97c>  // b.none
  40e5f4:	ldr	x10, [x19, #320]
  40e5f8:	madd	x26, x27, x21, x10
  40e5fc:	ldr	x8, [x26, #8]!
  40e600:	cmp	x8, #0x1
  40e604:	b.lt	40e5dc <wcrtomb@plt+0xb97c>  // b.tstop
  40e608:	madd	x23, x27, x21, x10
  40e60c:	ldr	x11, [x23]
  40e610:	mov	x9, xzr
  40e614:	madd	x24, x20, x21, x10
  40e618:	mov	x13, x8
  40e61c:	b	40e62c <wcrtomb@plt+0xb9cc>
  40e620:	add	x9, x10, #0x1
  40e624:	cmp	x9, x13
  40e628:	b.ge	40e654 <wcrtomb@plt+0xb9f4>  // b.tcont
  40e62c:	add	x10, x13, x9
  40e630:	asr	x10, x10, #1
  40e634:	lsl	x12, x10, #4
  40e638:	ldr	x14, [x11, x12]
  40e63c:	cmp	x14, x20
  40e640:	b.lt	40e620 <wcrtomb@plt+0xb9c0>  // b.tstop
  40e644:	b.eq	40e668 <wcrtomb@plt+0xba08>  // b.none
  40e648:	mov	x13, x10
  40e64c:	cmp	x9, x13
  40e650:	b.lt	40e62c <wcrtomb@plt+0xb9cc>  // b.tstop
  40e654:	mov	w9, wzr
  40e658:	ldur	w10, [x29, #-96]
  40e65c:	ands	w25, w9, w10
  40e660:	b.ne	40e6d4 <wcrtomb@plt+0xba74>  // b.any
  40e664:	b	40e5dc <wcrtomb@plt+0xb97c>
  40e668:	add	x9, x11, x10, lsl #4
  40e66c:	ldr	w9, [x9, #8]
  40e670:	add	x13, x10, #0x1
  40e674:	cmp	x13, x8
  40e678:	b.ge	40e6bc <wcrtomb@plt+0xba5c>  // b.tcont
  40e67c:	ldr	q0, [x11, x13, lsl #4]
  40e680:	add	x14, x10, #0x2
  40e684:	cmp	x14, x8
  40e688:	str	q0, [x11, x10, lsl #4]
  40e68c:	b.eq	40e6c0 <wcrtomb@plt+0xba60>  // b.none
  40e690:	sub	x8, x8, #0x2
  40e694:	ldr	x11, [x23]
  40e698:	add	x10, x10, #0x1
  40e69c:	cmp	x8, x10
  40e6a0:	add	x11, x11, x12
  40e6a4:	ldr	q0, [x11, #32]
  40e6a8:	add	x12, x12, #0x10
  40e6ac:	str	q0, [x11, #16]
  40e6b0:	b.ne	40e694 <wcrtomb@plt+0xba34>  // b.any
  40e6b4:	add	x13, x10, #0x1
  40e6b8:	b	40e6c0 <wcrtomb@plt+0xba60>
  40e6bc:	mov	x13, x10
  40e6c0:	mov	x8, x13
  40e6c4:	str	x13, [x26]
  40e6c8:	ldur	w10, [x29, #-96]
  40e6cc:	ands	w25, w9, w10
  40e6d0:	b.eq	40e5dc <wcrtomb@plt+0xb97c>  // b.none
  40e6d4:	cmp	x28, x8
  40e6d8:	b.ge	40e7a4 <wcrtomb@plt+0xbb44>  // b.tcont
  40e6dc:	mov	x0, x22
  40e6e0:	bl	402a10 <free@plt>
  40e6e4:	ldr	x8, [x26]
  40e6e8:	adds	x9, x28, x28, asr #1
  40e6ec:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40e6f0:	csel	x19, x10, x9, vs
  40e6f4:	tbnz	x19, #63, 40e70c <wcrtomb@plt+0xbaac>
  40e6f8:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40e6fc:	cmp	x19, x9
  40e700:	b.le	40e724 <wcrtomb@plt+0xbac4>
  40e704:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40e708:	b	40e734 <wcrtomb@plt+0xbad4>
  40e70c:	cmn	x19, #0x1
  40e710:	b.eq	40e730 <wcrtomb@plt+0xbad0>  // b.none
  40e714:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40e718:	sdiv	x9, x9, x19
  40e71c:	cmp	x9, #0x10
  40e720:	b.lt	40e704 <wcrtomb@plt+0xbaa4>  // b.tstop
  40e724:	lsl	x1, x19, #4
  40e728:	cmp	x1, #0x7f
  40e72c:	b.gt	40e73c <wcrtomb@plt+0xbadc>
  40e730:	mov	w9, #0x80                  	// #128
  40e734:	lsr	x19, x9, #4
  40e738:	and	x1, x9, #0x7ffffffffffffff0
  40e73c:	cmp	x19, x8
  40e740:	stur	xzr, [x29, #-16]
  40e744:	b.ge	40e784 <wcrtomb@plt+0xbb24>  // b.tcont
  40e748:	sub	x8, x8, x28
  40e74c:	adds	x19, x28, x8
  40e750:	b.vs	40f3a4 <wcrtomb@plt+0xc744>
  40e754:	tbnz	x19, #63, 40e768 <wcrtomb@plt+0xbb08>
  40e758:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40e75c:	cmp	x19, x8
  40e760:	b.le	40e780 <wcrtomb@plt+0xbb20>
  40e764:	b	40f3a4 <wcrtomb@plt+0xc744>
  40e768:	cmn	x19, #0x1
  40e76c:	b.eq	40e780 <wcrtomb@plt+0xbb20>  // b.none
  40e770:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40e774:	sdiv	x8, x8, x19
  40e778:	cmp	x8, #0x10
  40e77c:	b.lt	40f3a4 <wcrtomb@plt+0xc744>  // b.tstop
  40e780:	lsl	x1, x19, #4
  40e784:	mov	x0, xzr
  40e788:	bl	416e54 <wcrtomb@plt+0x141f4>
  40e78c:	stur	x19, [x29, #-16]
  40e790:	stur	x0, [x29, #-32]
  40e794:	ldr	x8, [x26]
  40e798:	mov	x28, x19
  40e79c:	ldur	x19, [x29, #-88]
  40e7a0:	mov	x22, x0
  40e7a4:	stur	x8, [x29, #-24]
  40e7a8:	cbz	x8, 40e5c8 <wcrtomb@plt+0xb968>
  40e7ac:	ldr	x1, [x23]
  40e7b0:	lsl	x2, x8, #4
  40e7b4:	mov	x0, x22
  40e7b8:	bl	402580 <memcpy@plt>
  40e7bc:	b	40e5c8 <wcrtomb@plt+0xb968>
  40e7c0:	mov	x0, x22
  40e7c4:	bl	402a10 <free@plt>
  40e7c8:	ldr	x0, [x19, #152]
  40e7cc:	bl	416ff4 <wcrtomb@plt+0x14394>
  40e7d0:	ldr	x8, [x19, #152]
  40e7d4:	mov	x22, x0
  40e7d8:	cmp	x8, #0x1
  40e7dc:	b.lt	40e874 <wcrtomb@plt+0xbc14>  // b.tstop
  40e7e0:	ldr	x10, [x19, #320]
  40e7e4:	mov	x9, xzr
  40e7e8:	mov	w11, #0x18                  	// #24
  40e7ec:	mov	w12, #0x8                   	// #8
  40e7f0:	b	40e800 <wcrtomb@plt+0xbba0>
  40e7f4:	add	x9, x9, #0x1
  40e7f8:	cmp	x9, x8
  40e7fc:	b.eq	40e874 <wcrtomb@plt+0xbc14>  // b.none
  40e800:	madd	x13, x9, x11, x10
  40e804:	ldr	x13, [x13, #8]
  40e808:	cmp	x13, #0x1
  40e80c:	b.lt	40e7f4 <wcrtomb@plt+0xbb94>  // b.tstop
  40e810:	mul	x14, x9, x11
  40e814:	ldr	x14, [x10, x14]
  40e818:	b	40e834 <wcrtomb@plt+0xbbd4>
  40e81c:	ldrb	w15, [x22, x9]
  40e820:	orr	w15, w15, #0x1
  40e824:	strb	w15, [x22, x9]
  40e828:	subs	x13, x13, #0x1
  40e82c:	add	x14, x14, #0x10
  40e830:	b.eq	40e7f4 <wcrtomb@plt+0xbb94>  // b.none
  40e834:	ldr	x15, [x14]
  40e838:	cmp	x15, x9
  40e83c:	b.eq	40e81c <wcrtomb@plt+0xbbbc>  // b.none
  40e840:	ldrb	w16, [x22, x15]
  40e844:	b.ge	40e854 <wcrtomb@plt+0xbbf4>  // b.tcont
  40e848:	orr	w16, w16, #0x2
  40e84c:	strb	w16, [x22, x15]
  40e850:	b	40e828 <wcrtomb@plt+0xbbc8>
  40e854:	and	w17, w16, #0x8
  40e858:	strb	w17, [x22, x15]
  40e85c:	tbnz	w16, #3, 40e868 <wcrtomb@plt+0xbc08>
  40e860:	strb	w12, [x22, x15]
  40e864:	b	40e828 <wcrtomb@plt+0xbbc8>
  40e868:	orr	w16, w17, #0x4
  40e86c:	strb	w16, [x22, x15]
  40e870:	b	40e828 <wcrtomb@plt+0xbbc8>
  40e874:	ldrb	w8, [x22]
  40e878:	mov	x21, x19
  40e87c:	orr	w19, w8, #0x10
  40e880:	strb	w19, [x22]
  40e884:	ldr	x20, [x21, #176]
  40e888:	lsr	x8, x20, #59
  40e88c:	cbnz	x8, 40f3a4 <wcrtomb@plt+0xc744>
  40e890:	lsl	x0, x20, #4
  40e894:	bl	416dd4 <wcrtomb@plt+0x14174>
  40e898:	stp	xzr, x20, [x29, #-24]
  40e89c:	stur	x0, [x29, #-32]
  40e8a0:	ldr	x8, [x21, #152]
  40e8a4:	lsr	x9, x8, #61
  40e8a8:	cbnz	x9, 40f3a4 <wcrtomb@plt+0xc744>
  40e8ac:	lsl	x0, x8, #2
  40e8b0:	bl	416dd4 <wcrtomb@plt+0x14174>
  40e8b4:	ldr	x8, [x21, #152]
  40e8b8:	str	x0, [x21, #336]
  40e8bc:	cmp	x8, #0x1
  40e8c0:	b.lt	40ee14 <wcrtomb@plt+0xc1b4>  // b.tstop
  40e8c4:	mov	x16, xzr
  40e8c8:	mov	w17, #0x18                  	// #24
  40e8cc:	tbz	w19, #4, 40edf8 <wcrtomb@plt+0xc198>
  40e8d0:	ldur	x19, [x29, #-88]
  40e8d4:	ldr	x9, [x19, #336]
  40e8d8:	ldr	x20, [x19, #320]
  40e8dc:	str	wzr, [x9, x16, lsl #2]
  40e8e0:	madd	x18, x16, x17, x20
  40e8e4:	ldr	x9, [x18, #8]!
  40e8e8:	cmp	x9, #0x1
  40e8ec:	b.lt	40e900 <wcrtomb@plt+0xbca0>  // b.tstop
  40e8f0:	mov	x21, xzr
  40e8f4:	mov	x28, xzr
  40e8f8:	madd	x0, x16, x17, x20
  40e8fc:	b	40e958 <wcrtomb@plt+0xbcf8>
  40e900:	mov	x21, xzr
  40e904:	str	x21, [x18]
  40e908:	add	x16, x16, #0x1
  40e90c:	cmp	x16, x8
  40e910:	b.lt	40ee08 <wcrtomb@plt+0xc1a8>  // b.tstop
  40e914:	b	40ee18 <wcrtomb@plt+0xc1b8>
  40e918:	ldp	x0, x18, [sp, #32]
  40e91c:	ldur	x19, [x29, #-88]
  40e920:	ldp	x16, x1, [sp, #48]
  40e924:	ldr	x20, [sp, #64]
  40e928:	ldr	x8, [x0]
  40e92c:	ldr	w2, [sp, #28]
  40e930:	mov	w17, #0x18                  	// #24
  40e934:	ldr	q0, [x8, x28, lsl #4]
  40e938:	str	q0, [x8, x21, lsl #4]
  40e93c:	add	x21, x21, #0x1
  40e940:	orr	w8, w2, #0x10
  40e944:	strb	w8, [x22, x1]
  40e948:	ldr	x8, [x18]
  40e94c:	add	x28, x28, #0x1
  40e950:	cmp	x28, x8
  40e954:	b.ge	40ede0 <wcrtomb@plt+0xc180>  // b.tcont
  40e958:	ldr	x8, [x0]
  40e95c:	add	x10, x8, x28, lsl #4
  40e960:	ldr	w9, [x10, #8]
  40e964:	cbz	w9, 40e948 <wcrtomb@plt+0xbce8>
  40e968:	ldr	x1, [x10]
  40e96c:	ldr	x10, [x19, #144]
  40e970:	ldr	x11, [x10, x1, lsl #3]
  40e974:	tbnz	x11, #63, 40ea40 <wcrtomb@plt+0xbde0>
  40e978:	ldrb	w2, [x22, x1]
  40e97c:	cmp	x21, #0x1
  40e980:	b.lt	40e934 <wcrtomb@plt+0xbcd4>  // b.tstop
  40e984:	and	w12, w2, #0x6
  40e988:	cbnz	w12, 40e934 <wcrtomb@plt+0xbcd4>
  40e98c:	mov	x12, xzr
  40e990:	add	x13, x8, #0x8
  40e994:	mov	w27, #0x1                   	// #1
  40e998:	b	40e9b4 <wcrtomb@plt+0xbd54>
  40e99c:	add	x12, x12, #0x1
  40e9a0:	cmp	x12, x21
  40e9a4:	cset	w27, lt  // lt = tstop
  40e9a8:	cmp	x21, x12
  40e9ac:	add	x13, x13, #0x10
  40e9b0:	b.eq	40e934 <wcrtomb@plt+0xbcd4>  // b.none
  40e9b4:	ldr	w14, [x13]
  40e9b8:	cmp	w14, w9
  40e9bc:	b.ne	40e99c <wcrtomb@plt+0xbd3c>  // b.any
  40e9c0:	ldur	x25, [x13, #-8]
  40e9c4:	ldrb	w14, [x22, x25]
  40e9c8:	tst	w14, #0x6
  40e9cc:	b.ne	40e99c <wcrtomb@plt+0xbd3c>  // b.any
  40e9d0:	ldr	x15, [x10, x25, lsl #3]
  40e9d4:	cmp	x11, x15
  40e9d8:	b.ne	40e99c <wcrtomb@plt+0xbd3c>  // b.any
  40e9dc:	eor	w14, w14, w2
  40e9e0:	tbnz	w14, #0, 40e99c <wcrtomb@plt+0xbd3c>
  40e9e4:	stp	x0, x18, [sp, #32]
  40e9e8:	stp	x16, x1, [sp, #48]
  40e9ec:	madd	x18, x1, x17, x20
  40e9f0:	ldr	x8, [x18, #8]!
  40e9f4:	str	w2, [sp, #28]
  40e9f8:	str	x20, [sp, #64]
  40e9fc:	tbnz	w2, #0, 40ec04 <wcrtomb@plt+0xbfa4>
  40ea00:	ldr	x9, [sp, #56]
  40ea04:	madd	x23, x25, x17, x20
  40ea08:	cmp	x8, #0x3
  40ea0c:	madd	x12, x9, x17, x20
  40ea10:	b.gt	40ec60 <wcrtomb@plt+0xc000>
  40ea14:	mov	w9, #0x18                  	// #24
  40ea18:	cmp	x8, #0x1
  40ea1c:	b.lt	40edc4 <wcrtomb@plt+0xc164>  // b.tstop
  40ea20:	ldr	x10, [sp, #64]
  40ea24:	mov	x20, xzr
  40ea28:	madd	x13, x25, x9, x10
  40ea2c:	ldr	x25, [x13, #8]!
  40ea30:	stp	x12, x18, [sp, #96]
  40ea34:	add	x14, x13, #0x8
  40ea38:	stp	x14, x13, [sp, #72]
  40ea3c:	b	40ea7c <wcrtomb@plt+0xbe1c>
  40ea40:	ldr	x8, [x19, #336]
  40ea44:	lsl	x10, x16, #2
  40ea48:	ldr	w11, [x8, x10]
  40ea4c:	orr	w9, w11, w9
  40ea50:	str	w9, [x8, x10]
  40ea54:	b	40e948 <wcrtomb@plt+0xbce8>
  40ea58:	add	x8, x0, x24, lsl #4
  40ea5c:	stp	x19, x15, [x8]
  40ea60:	ldr	x8, [x13]
  40ea64:	add	x25, x8, #0x1
  40ea68:	str	x25, [x13]
  40ea6c:	ldr	x8, [x18]
  40ea70:	add	x20, x20, #0x1
  40ea74:	cmp	x20, x8
  40ea78:	b.ge	40edc4 <wcrtomb@plt+0xc164>  // b.tcont
  40ea7c:	ldr	x9, [x12]
  40ea80:	cmp	x25, #0x0
  40ea84:	add	x9, x9, x20, lsl #4
  40ea88:	ldp	x19, x15, [x9]
  40ea8c:	b.le	40eaec <wcrtomb@plt+0xbe8c>
  40ea90:	ldr	x0, [x23]
  40ea94:	mov	x24, xzr
  40ea98:	mov	x9, x25
  40ea9c:	b	40eaac <wcrtomb@plt+0xbe4c>
  40eaa0:	add	x24, x10, #0x1
  40eaa4:	cmp	x24, x9
  40eaa8:	b.ge	40eaf4 <wcrtomb@plt+0xbe94>  // b.tcont
  40eaac:	add	x10, x9, x24
  40eab0:	asr	x10, x10, #1
  40eab4:	lsl	x11, x10, #4
  40eab8:	ldr	x11, [x0, x11]
  40eabc:	cmp	x11, x19
  40eac0:	b.lt	40eaa0 <wcrtomb@plt+0xbe40>  // b.tstop
  40eac4:	mov	x9, x10
  40eac8:	b.ne	40eaa4 <wcrtomb@plt+0xbe44>  // b.any
  40eacc:	add	x9, x0, x10, lsl #4
  40ead0:	ldr	w10, [x9, #8]
  40ead4:	orr	w10, w10, w15
  40ead8:	str	w10, [x9, #8]
  40eadc:	add	x20, x20, #0x1
  40eae0:	cmp	x20, x8
  40eae4:	b.lt	40ea7c <wcrtomb@plt+0xbe1c>  // b.tstop
  40eae8:	b	40edc4 <wcrtomb@plt+0xc164>
  40eaec:	ldr	x0, [x23]
  40eaf0:	mov	x24, xzr
  40eaf4:	ldr	x8, [x14]
  40eaf8:	cmp	x8, x25
  40eafc:	b.gt	40ebd0 <wcrtomb@plt+0xbf70>
  40eb00:	adds	x9, x8, x8, asr #1
  40eb04:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40eb08:	csel	x26, x10, x9, vs
  40eb0c:	stur	x15, [x29, #-96]
  40eb10:	tbnz	x26, #63, 40eb40 <wcrtomb@plt+0xbee0>
  40eb14:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40eb18:	cmp	x26, x9
  40eb1c:	b.le	40eb58 <wcrtomb@plt+0xbef8>
  40eb20:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40eb24:	lsr	x26, x9, #4
  40eb28:	and	x1, x9, #0x7ffffffffffffff0
  40eb2c:	cbnz	x0, 40eb7c <wcrtomb@plt+0xbf1c>
  40eb30:	str	xzr, [x14]
  40eb34:	cmp	x26, x8
  40eb38:	b.gt	40ebbc <wcrtomb@plt+0xbf5c>
  40eb3c:	b	40eb84 <wcrtomb@plt+0xbf24>
  40eb40:	cmn	x26, #0x1
  40eb44:	b.eq	40eb64 <wcrtomb@plt+0xbf04>  // b.none
  40eb48:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40eb4c:	sdiv	x9, x9, x26
  40eb50:	cmp	x9, #0x10
  40eb54:	b.lt	40eb20 <wcrtomb@plt+0xbec0>  // b.tstop
  40eb58:	lsl	x1, x26, #4
  40eb5c:	cmp	x1, #0x7f
  40eb60:	b.gt	40eb78 <wcrtomb@plt+0xbf18>
  40eb64:	mov	w9, #0x80                  	// #128
  40eb68:	lsr	x26, x9, #4
  40eb6c:	and	x1, x9, #0x7ffffffffffffff0
  40eb70:	cbnz	x0, 40eb7c <wcrtomb@plt+0xbf1c>
  40eb74:	b	40eb30 <wcrtomb@plt+0xbed0>
  40eb78:	cbz	x0, 40eb30 <wcrtomb@plt+0xbed0>
  40eb7c:	cmp	x26, x8
  40eb80:	b.gt	40ebbc <wcrtomb@plt+0xbf5c>
  40eb84:	adds	x26, x8, #0x1
  40eb88:	b.vs	40f3a4 <wcrtomb@plt+0xc744>
  40eb8c:	tbnz	x26, #63, 40eba0 <wcrtomb@plt+0xbf40>
  40eb90:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40eb94:	cmp	x26, x8
  40eb98:	b.le	40ebb8 <wcrtomb@plt+0xbf58>
  40eb9c:	b	40f3a4 <wcrtomb@plt+0xc744>
  40eba0:	cmn	x26, #0x1
  40eba4:	b.eq	40ebb8 <wcrtomb@plt+0xbf58>  // b.none
  40eba8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40ebac:	sdiv	x8, x8, x26
  40ebb0:	cmp	x8, #0x10
  40ebb4:	b.lt	40f3a4 <wcrtomb@plt+0xc744>  // b.tstop
  40ebb8:	lsl	x1, x26, #4
  40ebbc:	bl	416e54 <wcrtomb@plt+0x141f4>
  40ebc0:	ldp	x14, x13, [sp, #72]
  40ebc4:	ldur	x15, [x29, #-96]
  40ebc8:	str	x26, [x14]
  40ebcc:	ldp	x12, x18, [sp, #96]
  40ebd0:	cmp	x25, x24
  40ebd4:	str	x0, [x23]
  40ebd8:	b.le	40ea58 <wcrtomb@plt+0xbdf8>
  40ebdc:	lsl	x8, x25, #4
  40ebe0:	add	x9, x0, x8
  40ebe4:	ldur	q0, [x9, #-16]
  40ebe8:	sub	x25, x25, #0x1
  40ebec:	cmp	x25, x24
  40ebf0:	sub	x8, x8, #0x10
  40ebf4:	str	q0, [x9]
  40ebf8:	ldr	x0, [x23]
  40ebfc:	b.gt	40ebe0 <wcrtomb@plt+0xbf80>
  40ec00:	b	40ea58 <wcrtomb@plt+0xbdf8>
  40ec04:	cmp	x8, #0x1
  40ec08:	b.lt	40edc4 <wcrtomb@plt+0xc164>  // b.tstop
  40ec0c:	ldp	x16, x20, [sp, #56]
  40ec10:	mov	w17, #0x18                  	// #24
  40ec14:	mov	x13, xzr
  40ec18:	mov	x14, x8
  40ec1c:	madd	x9, x16, x17, x20
  40ec20:	ldr	x11, [x9]
  40ec24:	b	40ec34 <wcrtomb@plt+0xbfd4>
  40ec28:	add	x13, x10, #0x1
  40ec2c:	cmp	x13, x14
  40ec30:	b.ge	40ea00 <wcrtomb@plt+0xbda0>  // b.tcont
  40ec34:	add	x10, x14, x13
  40ec38:	asr	x10, x10, #1
  40ec3c:	lsl	x12, x10, #4
  40ec40:	ldr	x15, [x11, x12]
  40ec44:	cmp	x15, x16
  40ec48:	b.lt	40ec28 <wcrtomb@plt+0xbfc8>  // b.tstop
  40ec4c:	b.eq	40ecc0 <wcrtomb@plt+0xc060>  // b.none
  40ec50:	mov	x14, x10
  40ec54:	cmp	x13, x14
  40ec58:	b.lt	40ec34 <wcrtomb@plt+0xbfd4>  // b.tstop
  40ec5c:	b	40ea00 <wcrtomb@plt+0xbda0>
  40ec60:	sub	x3, x29, #0x20
  40ec64:	mov	w2, #0xffffffff            	// #-1
  40ec68:	mov	x0, x12
  40ec6c:	mov	x1, x23
  40ec70:	bl	412974 <wcrtomb@plt+0xfd14>
  40ec74:	mov	w8, #0x18                  	// #24
  40ec78:	madd	x20, x25, x8, x20
  40ec7c:	ldr	x8, [x20, #16]!
  40ec80:	ldur	x19, [x29, #-24]
  40ec84:	mov	w26, #0x18                  	// #24
  40ec88:	cmp	x8, x19
  40ec8c:	b.ge	40eda4 <wcrtomb@plt+0xc144>  // b.tcont
  40ec90:	ldr	x0, [x23]
  40ec94:	bl	402a10 <free@plt>
  40ec98:	ldr	x8, [x20]
  40ec9c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40eca0:	adds	x9, x8, x8, asr #1
  40eca4:	csel	x24, x10, x9, vs
  40eca8:	tbnz	x24, #63, 40ed0c <wcrtomb@plt+0xc0ac>
  40ecac:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40ecb0:	cmp	x24, x9
  40ecb4:	b.le	40ed24 <wcrtomb@plt+0xc0c4>
  40ecb8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40ecbc:	b	40ed34 <wcrtomb@plt+0xc0d4>
  40ecc0:	add	x13, x10, #0x1
  40ecc4:	cmp	x13, x8
  40ecc8:	b.ge	40ed68 <wcrtomb@plt+0xc108>  // b.tcont
  40eccc:	ldr	q0, [x11, x13, lsl #4]
  40ecd0:	add	x14, x10, #0x2
  40ecd4:	cmp	x14, x8
  40ecd8:	str	q0, [x11, x10, lsl #4]
  40ecdc:	b.eq	40ed6c <wcrtomb@plt+0xc10c>  // b.none
  40ece0:	sub	x8, x8, #0x2
  40ece4:	ldr	x11, [x9]
  40ece8:	add	x10, x10, #0x1
  40ecec:	cmp	x8, x10
  40ecf0:	add	x11, x11, x12
  40ecf4:	ldr	q0, [x11, #32]
  40ecf8:	add	x12, x12, #0x10
  40ecfc:	str	q0, [x11, #16]
  40ed00:	b.ne	40ece4 <wcrtomb@plt+0xc084>  // b.any
  40ed04:	add	x13, x10, #0x1
  40ed08:	b	40ed6c <wcrtomb@plt+0xc10c>
  40ed0c:	cmn	x24, #0x1
  40ed10:	b.eq	40ed30 <wcrtomb@plt+0xc0d0>  // b.none
  40ed14:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40ed18:	sdiv	x9, x9, x24
  40ed1c:	cmp	x9, #0x10
  40ed20:	b.lt	40ecb8 <wcrtomb@plt+0xc058>  // b.tstop
  40ed24:	lsl	x1, x24, #4
  40ed28:	cmp	x1, #0x7f
  40ed2c:	b.gt	40ed3c <wcrtomb@plt+0xc0dc>
  40ed30:	mov	w9, #0x80                  	// #128
  40ed34:	lsr	x24, x9, #4
  40ed38:	and	x1, x9, #0x7ffffffffffffff0
  40ed3c:	cmp	x24, x19
  40ed40:	str	xzr, [x20]
  40ed44:	b.ge	40ed94 <wcrtomb@plt+0xc134>  // b.tcont
  40ed48:	sub	x9, x19, x8
  40ed4c:	adds	x24, x8, x9
  40ed50:	b.vs	40f3a4 <wcrtomb@plt+0xc744>
  40ed54:	tbnz	x24, #63, 40ed78 <wcrtomb@plt+0xc118>
  40ed58:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40ed5c:	cmp	x24, x8
  40ed60:	b.le	40ed90 <wcrtomb@plt+0xc130>
  40ed64:	b	40f3a4 <wcrtomb@plt+0xc744>
  40ed68:	mov	x13, x10
  40ed6c:	mov	x8, x13
  40ed70:	str	x13, [x18]
  40ed74:	b	40ea00 <wcrtomb@plt+0xbda0>
  40ed78:	cmn	x24, #0x1
  40ed7c:	b.eq	40ed90 <wcrtomb@plt+0xc130>  // b.none
  40ed80:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40ed84:	sdiv	x8, x8, x24
  40ed88:	cmp	x8, #0x10
  40ed8c:	b.lt	40f3a4 <wcrtomb@plt+0xc744>  // b.tstop
  40ed90:	lsl	x1, x24, #4
  40ed94:	mov	x0, xzr
  40ed98:	bl	416e54 <wcrtomb@plt+0x141f4>
  40ed9c:	str	x24, [x20]
  40eda0:	str	x0, [x23]
  40eda4:	ldr	x8, [sp, #64]
  40eda8:	madd	x8, x25, x26, x8
  40edac:	str	x19, [x8, #8]
  40edb0:	cbz	x19, 40edc4 <wcrtomb@plt+0xc164>
  40edb4:	ldr	x0, [x23]
  40edb8:	ldur	x1, [x29, #-32]
  40edbc:	lsl	x2, x19, #4
  40edc0:	bl	402580 <memcpy@plt>
  40edc4:	tbz	w27, #0, 40e918 <wcrtomb@plt+0xbcb8>
  40edc8:	ldur	x19, [x29, #-88]
  40edcc:	ldp	x18, x16, [sp, #40]
  40edd0:	ldr	x20, [sp, #64]
  40edd4:	ldr	x0, [sp, #32]
  40edd8:	mov	w17, #0x18                  	// #24
  40eddc:	b	40e948 <wcrtomb@plt+0xbce8>
  40ede0:	ldr	x8, [x19, #152]
  40ede4:	str	x21, [x18]
  40ede8:	add	x16, x16, #0x1
  40edec:	cmp	x16, x8
  40edf0:	b.lt	40ee08 <wcrtomb@plt+0xc1a8>  // b.tstop
  40edf4:	b	40ee18 <wcrtomb@plt+0xc1b8>
  40edf8:	ldur	x19, [x29, #-88]
  40edfc:	add	x16, x16, #0x1
  40ee00:	cmp	x16, x8
  40ee04:	b.ge	40ee18 <wcrtomb@plt+0xc1b8>  // b.tcont
  40ee08:	ldrb	w19, [x22, x16]
  40ee0c:	tbnz	w19, #4, 40e8d0 <wcrtomb@plt+0xbc70>
  40ee10:	b	40edf8 <wcrtomb@plt+0xc198>
  40ee14:	ldur	x19, [x29, #-88]
  40ee18:	lsr	x9, x8, #60
  40ee1c:	cbnz	x9, 40f3a4 <wcrtomb@plt+0xc744>
  40ee20:	lsl	x0, x8, #3
  40ee24:	bl	416dd4 <wcrtomb@plt+0x14174>
  40ee28:	str	xzr, [x0]
  40ee2c:	ldr	x8, [x19, #152]
  40ee30:	mov	x23, x0
  40ee34:	cmp	x8, #0x2
  40ee38:	b.lt	40ee50 <wcrtomb@plt+0xc1f0>  // b.tstop
  40ee3c:	lsl	x8, x8, #3
  40ee40:	add	x0, x23, #0x8
  40ee44:	sub	x2, x8, #0x8
  40ee48:	mov	w1, #0xff                  	// #255
  40ee4c:	bl	402800 <memset@plt>
  40ee50:	ldr	x8, [x19, #176]
  40ee54:	lsr	x9, x8, #60
  40ee58:	cbnz	x9, 40f3a4 <wcrtomb@plt+0xc744>
  40ee5c:	lsl	x0, x8, #3
  40ee60:	bl	416dd4 <wcrtomb@plt+0x14174>
  40ee64:	ldr	x8, [x19, #176]
  40ee68:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40ee6c:	movk	x9, #0x555, lsl #48
  40ee70:	cmp	x8, x9
  40ee74:	b.hi	40f3a4 <wcrtomb@plt+0xc744>  // b.pmore
  40ee78:	add	x8, x8, x8, lsl #1
  40ee7c:	mov	x24, x0
  40ee80:	lsl	x0, x8, #3
  40ee84:	bl	416dd4 <wcrtomb@plt+0x14174>
  40ee88:	ldr	x8, [x19, #176]
  40ee8c:	lsr	x9, x8, #61
  40ee90:	cbnz	x9, 40f3a4 <wcrtomb@plt+0xc744>
  40ee94:	mov	x25, x0
  40ee98:	lsl	x0, x8, #2
  40ee9c:	bl	416dd4 <wcrtomb@plt+0x14174>
  40eea0:	ldrb	w8, [x19, #1048]
  40eea4:	mov	x26, x0
  40eea8:	cbz	w8, 40f0e8 <wcrtomb@plt+0xc488>
  40eeac:	ldr	x0, [x19, #176]
  40eeb0:	tbnz	x0, #63, 40f3a4 <wcrtomb@plt+0xc744>
  40eeb4:	bl	416dd4 <wcrtomb@plt+0x14174>
  40eeb8:	mov	x27, x0
  40eebc:	ldr	x8, [x19, #152]
  40eec0:	cmp	x8, #0x1
  40eec4:	b.lt	40f0f8 <wcrtomb@plt+0xc498>  // b.tstop
  40eec8:	mov	x8, xzr
  40eecc:	mov	x19, xzr
  40eed0:	mov	w20, #0x1                   	// #1
  40eed4:	cbz	x27, 40f00c <wcrtomb@plt+0xc3ac>
  40eed8:	cmn	x8, #0x1
  40eedc:	b.eq	40efa8 <wcrtomb@plt+0xc348>  // b.none
  40eee0:	ldur	x12, [x29, #-88]
  40eee4:	mov	w11, #0x18                  	// #24
  40eee8:	ldr	x9, [x12, #144]
  40eeec:	ldr	x9, [x9, x19, lsl #3]
  40eef0:	str	x9, [x24, x8, lsl #3]
  40eef4:	ldr	x9, [x12, #320]
  40eef8:	madd	x9, x19, x11, x9
  40eefc:	ldr	x10, [x9, #16]
  40ef00:	ldr	q0, [x9]
  40ef04:	madd	x11, x8, x11, x25
  40ef08:	str	x10, [x11, #16]
  40ef0c:	str	q0, [x11]
  40ef10:	ldr	x10, [x12, #336]
  40ef14:	ldr	w10, [x10, x19, lsl #2]
  40ef18:	str	w10, [x26, x8, lsl #2]
  40ef1c:	ldr	x10, [x12, #280]
  40ef20:	ldrb	w10, [x10, x19]
  40ef24:	strb	w10, [x27, x8]
  40ef28:	ldr	x1, [x9, #8]
  40ef2c:	cmp	x1, #0x0
  40ef30:	b.le	40ef74 <wcrtomb@plt+0xc314>
  40ef34:	ldr	x0, [x9]
  40ef38:	mov	x9, x1
  40ef3c:	mov	x8, x0
  40ef40:	b	40ef50 <wcrtomb@plt+0xc2f0>
  40ef44:	subs	x9, x9, #0x1
  40ef48:	str	x10, [x8], #16
  40ef4c:	b.eq	40ef78 <wcrtomb@plt+0xc318>  // b.none
  40ef50:	ldr	x11, [x8]
  40ef54:	ldr	x10, [x23, x11, lsl #3]
  40ef58:	cmn	x10, #0x1
  40ef5c:	b.ne	40ef44 <wcrtomb@plt+0xc2e4>  // b.any
  40ef60:	add	x12, x20, #0x1
  40ef64:	str	x20, [x23, x11, lsl #3]
  40ef68:	mov	x10, x20
  40ef6c:	mov	x20, x12
  40ef70:	b	40ef44 <wcrtomb@plt+0xc2e4>
  40ef74:	ldr	x0, [x9]
  40ef78:	adrp	x3, 412000 <wcrtomb@plt+0xf3a0>
  40ef7c:	mov	w2, #0x10                  	// #16
  40ef80:	add	x3, x3, #0xb84
  40ef84:	bl	402660 <qsort@plt>
  40ef88:	ldur	x21, [x29, #-88]
  40ef8c:	ldr	x8, [x21, #152]
  40ef90:	add	x19, x19, #0x1
  40ef94:	cmp	x19, x8
  40ef98:	b.ge	40f0cc <wcrtomb@plt+0xc46c>  // b.tcont
  40ef9c:	ldr	x8, [x23, x19, lsl #3]
  40efa0:	cmn	x8, #0x1
  40efa4:	b.ne	40eee0 <wcrtomb@plt+0xc280>  // b.any
  40efa8:	ldur	x21, [x29, #-88]
  40efac:	add	x9, x19, x19, lsl #1
  40efb0:	lsl	x28, x9, #3
  40efb4:	ldr	x8, [x21, #320]
  40efb8:	ldr	x0, [x8, x28]
  40efbc:	bl	402a10 <free@plt>
  40efc0:	ldr	x8, [x21, #320]
  40efc4:	add	x8, x8, x28
  40efc8:	stp	xzr, xzr, [x8]
  40efcc:	ldr	x8, [x21, #152]
  40efd0:	add	x19, x19, #0x1
  40efd4:	cmp	x19, x8
  40efd8:	b.lt	40ef9c <wcrtomb@plt+0xc33c>  // b.tstop
  40efdc:	b	40f0cc <wcrtomb@plt+0xc46c>
  40efe0:	ldr	x0, [x9]
  40efe4:	adrp	x3, 412000 <wcrtomb@plt+0xf3a0>
  40efe8:	mov	w2, #0x10                  	// #16
  40efec:	add	x3, x3, #0xb84
  40eff0:	bl	402660 <qsort@plt>
  40eff4:	ldur	x21, [x29, #-88]
  40eff8:	ldr	x8, [x21, #152]
  40effc:	add	x19, x19, #0x1
  40f000:	cmp	x19, x8
  40f004:	b.ge	40f0cc <wcrtomb@plt+0xc46c>  // b.tcont
  40f008:	ldr	x8, [x23, x19, lsl #3]
  40f00c:	cmn	x8, #0x1
  40f010:	b.eq	40f098 <wcrtomb@plt+0xc438>  // b.none
  40f014:	ldur	x12, [x29, #-88]
  40f018:	mov	w11, #0x18                  	// #24
  40f01c:	ldr	x9, [x12, #144]
  40f020:	ldr	x9, [x9, x19, lsl #3]
  40f024:	str	x9, [x24, x8, lsl #3]
  40f028:	ldr	x9, [x12, #320]
  40f02c:	madd	x9, x19, x11, x9
  40f030:	ldp	x1, x10, [x9, #8]
  40f034:	ldr	q0, [x9]
  40f038:	madd	x11, x8, x11, x25
  40f03c:	str	x10, [x11, #16]
  40f040:	str	q0, [x11]
  40f044:	ldr	x10, [x12, #336]
  40f048:	cmp	x1, #0x0
  40f04c:	ldr	w10, [x10, x19, lsl #2]
  40f050:	str	w10, [x26, x8, lsl #2]
  40f054:	b.le	40efe0 <wcrtomb@plt+0xc380>
  40f058:	ldr	x0, [x9]
  40f05c:	mov	x9, x1
  40f060:	mov	x8, x0
  40f064:	b	40f074 <wcrtomb@plt+0xc414>
  40f068:	subs	x9, x9, #0x1
  40f06c:	str	x10, [x8], #16
  40f070:	b.eq	40efe4 <wcrtomb@plt+0xc384>  // b.none
  40f074:	ldr	x11, [x8]
  40f078:	ldr	x10, [x23, x11, lsl #3]
  40f07c:	cmn	x10, #0x1
  40f080:	b.ne	40f068 <wcrtomb@plt+0xc408>  // b.any
  40f084:	add	x12, x20, #0x1
  40f088:	str	x20, [x23, x11, lsl #3]
  40f08c:	mov	x10, x20
  40f090:	mov	x20, x12
  40f094:	b	40f068 <wcrtomb@plt+0xc408>
  40f098:	ldur	x21, [x29, #-88]
  40f09c:	add	x9, x19, x19, lsl #1
  40f0a0:	lsl	x28, x9, #3
  40f0a4:	ldr	x8, [x21, #320]
  40f0a8:	ldr	x0, [x8, x28]
  40f0ac:	bl	402a10 <free@plt>
  40f0b0:	ldr	x8, [x21, #320]
  40f0b4:	add	x8, x8, x28
  40f0b8:	stp	xzr, xzr, [x8]
  40f0bc:	ldr	x8, [x21, #152]
  40f0c0:	add	x19, x19, #0x1
  40f0c4:	cmp	x19, x8
  40f0c8:	b.lt	40f008 <wcrtomb@plt+0xc3a8>  // b.tstop
  40f0cc:	ldur	x19, [x29, #-88]
  40f0d0:	cmp	x20, #0x1
  40f0d4:	b.lt	40f1b0 <wcrtomb@plt+0xc550>  // b.tstop
  40f0d8:	mov	x8, xzr
  40f0dc:	mov	x9, xzr
  40f0e0:	cbnz	x27, 40f108 <wcrtomb@plt+0xc4a8>
  40f0e4:	b	40f164 <wcrtomb@plt+0xc504>
  40f0e8:	mov	x27, xzr
  40f0ec:	ldr	x8, [x19, #152]
  40f0f0:	cmp	x8, #0x1
  40f0f4:	b.ge	40eec8 <wcrtomb@plt+0xc268>  // b.tcont
  40f0f8:	mov	w20, #0x1                   	// #1
  40f0fc:	mov	x8, xzr
  40f100:	mov	x9, xzr
  40f104:	cbz	x27, 40f164 <wcrtomb@plt+0xc504>
  40f108:	lsl	x10, x9, #3
  40f10c:	ldr	x11, [x19, #144]
  40f110:	ldr	x12, [x24, x10]
  40f114:	str	x12, [x11, x10]
  40f118:	add	x10, x25, x8
  40f11c:	ldr	x11, [x19, #320]
  40f120:	ldr	x12, [x10, #16]
  40f124:	ldr	q0, [x10]
  40f128:	lsl	x10, x9, #2
  40f12c:	add	x11, x11, x8
  40f130:	str	x12, [x11, #16]
  40f134:	str	q0, [x11]
  40f138:	ldr	w11, [x26, x10]
  40f13c:	ldr	x12, [x19, #336]
  40f140:	add	x8, x8, #0x18
  40f144:	str	w11, [x12, x10]
  40f148:	ldrb	w10, [x27, x9]
  40f14c:	ldr	x11, [x19, #280]
  40f150:	strb	w10, [x11, x9]
  40f154:	add	x9, x9, #0x1
  40f158:	cmp	x20, x9
  40f15c:	b.ne	40f108 <wcrtomb@plt+0xc4a8>  // b.any
  40f160:	b	40f1b0 <wcrtomb@plt+0xc550>
  40f164:	lsl	x10, x9, #3
  40f168:	ldr	x11, [x19, #144]
  40f16c:	ldr	x12, [x24, x10]
  40f170:	str	x12, [x11, x10]
  40f174:	add	x10, x25, x8
  40f178:	ldr	x11, [x19, #320]
  40f17c:	ldr	x12, [x10, #16]
  40f180:	ldr	q0, [x10]
  40f184:	lsl	x10, x9, #2
  40f188:	add	x11, x11, x8
  40f18c:	str	x12, [x11, #16]
  40f190:	str	q0, [x11]
  40f194:	ldr	w11, [x26, x10]
  40f198:	ldr	x12, [x19, #336]
  40f19c:	add	x9, x9, #0x1
  40f1a0:	cmp	x20, x9
  40f1a4:	add	x8, x8, #0x18
  40f1a8:	str	w11, [x12, x10]
  40f1ac:	b.ne	40f164 <wcrtomb@plt+0xc504>  // b.any
  40f1b0:	mov	x0, x24
  40f1b4:	str	x20, [x19, #176]
  40f1b8:	str	x20, [x19, #152]
  40f1bc:	bl	402a10 <free@plt>
  40f1c0:	mov	x0, x25
  40f1c4:	bl	402a10 <free@plt>
  40f1c8:	mov	x0, x26
  40f1cc:	bl	402a10 <free@plt>
  40f1d0:	mov	x0, x27
  40f1d4:	bl	402a10 <free@plt>
  40f1d8:	mov	x0, x23
  40f1dc:	bl	402a10 <free@plt>
  40f1e0:	ldur	x0, [x29, #-32]
  40f1e4:	bl	402a10 <free@plt>
  40f1e8:	mov	x0, x22
  40f1ec:	bl	402a10 <free@plt>
  40f1f0:	mov	w0, #0x10                  	// #16
  40f1f4:	bl	416dd4 <wcrtomb@plt+0x14174>
  40f1f8:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40f1fc:	ldr	q0, [x8, #3792]
  40f200:	mov	w8, #0x1                   	// #1
  40f204:	dup	v1.2d, x8
  40f208:	stur	x0, [x29, #-56]
  40f20c:	stur	q1, [x29, #-48]
  40f210:	str	q0, [x0]
  40f214:	ldr	x8, [x19, #152]
  40f218:	lsr	x9, x8, #61
  40f21c:	cbnz	x9, 40f3a4 <wcrtomb@plt+0xc744>
  40f220:	mov	x22, x0
  40f224:	lsl	x0, x8, #2
  40f228:	bl	416dd4 <wcrtomb@plt+0x14174>
  40f22c:	ldr	x8, [x19, #152]
  40f230:	str	x0, [x19, #344]
  40f234:	cmp	x8, #0x1
  40f238:	b.lt	40f308 <wcrtomb@plt+0xc6a8>  // b.tstop
  40f23c:	mov	x8, xzr
  40f240:	mov	w9, #0x49                  	// #73
  40f244:	mov	w10, #0x18                  	// #24
  40f248:	b	40f260 <wcrtomb@plt+0xc600>
  40f24c:	ldr	x11, [x19, #152]
  40f250:	ldr	x0, [x19, #344]
  40f254:	add	x8, x8, #0x1
  40f258:	cmp	x8, x11
  40f25c:	b.ge	40f308 <wcrtomb@plt+0xc6a8>  // b.tcont
  40f260:	lsl	x12, x8, #2
  40f264:	str	wzr, [x0, x12]
  40f268:	ldr	x13, [x19, #336]
  40f26c:	ldr	w11, [x13, x12]
  40f270:	eor	w11, w11, w11, lsr #2
  40f274:	tst	w11, w9
  40f278:	cset	w11, ne  // ne = any
  40f27c:	lsl	w11, w11, #2
  40f280:	str	w11, [x0, x12]
  40f284:	ldr	w12, [x13, x12]
  40f288:	eor	w12, w12, w12, lsr #1
  40f28c:	tst	w12, w9
  40f290:	b.eq	40f29c <wcrtomb@plt+0xc63c>  // b.none
  40f294:	orr	w11, w11, #0x2
  40f298:	str	w11, [x0, x8, lsl #2]
  40f29c:	ldr	x14, [x19, #320]
  40f2a0:	madd	x12, x8, x10, x14
  40f2a4:	ldr	x12, [x12, #8]
  40f2a8:	cmp	x12, #0x1
  40f2ac:	b.lt	40f24c <wcrtomb@plt+0xc5ec>  // b.tstop
  40f2b0:	mul	x15, x8, x10
  40f2b4:	ldr	x14, [x14, x15]
  40f2b8:	mov	x13, xzr
  40f2bc:	add	x14, x14, #0x8
  40f2c0:	b	40f2d4 <wcrtomb@plt+0xc674>
  40f2c4:	add	x13, x13, #0x1
  40f2c8:	cmp	x13, x12
  40f2cc:	add	x14, x14, #0x10
  40f2d0:	b.ge	40f24c <wcrtomb@plt+0xc5ec>  // b.tcont
  40f2d4:	ldr	w15, [x14]
  40f2d8:	eor	w16, w15, w15, lsr #2
  40f2dc:	tst	w16, w9
  40f2e0:	b.eq	40f2f0 <wcrtomb@plt+0xc690>  // b.none
  40f2e4:	orr	w11, w11, #0x4
  40f2e8:	str	w11, [x0, x8, lsl #2]
  40f2ec:	ldr	w15, [x14]
  40f2f0:	eor	w15, w15, w15, lsr #1
  40f2f4:	tst	w15, w9
  40f2f8:	b.eq	40f2c4 <wcrtomb@plt+0xc664>  // b.none
  40f2fc:	orr	w11, w11, #0x2
  40f300:	str	w11, [x0, x8, lsl #2]
  40f304:	b	40f2c4 <wcrtomb@plt+0xc664>
  40f308:	ldr	x8, [x22]
  40f30c:	ldr	w19, [x0, x8, lsl #2]
  40f310:	tbz	w19, #2, 40f324 <wcrtomb@plt+0xc6c4>
  40f314:	ldur	x0, [x29, #-88]
  40f318:	sub	x1, x29, #0x38
  40f31c:	mov	w2, #0x4                   	// #4
  40f320:	bl	4124a8 <wcrtomb@plt+0xf848>
  40f324:	ldur	x20, [x29, #-88]
  40f328:	eor	w2, w19, #0x7
  40f32c:	sub	x1, x29, #0x38
  40f330:	mov	x0, x20
  40f334:	bl	4124a8 <wcrtomb@plt+0xf848>
  40f338:	sxtw	x8, w0
  40f33c:	str	w0, [x20, #364]
  40f340:	str	x8, [x20, #400]
  40f344:	tbz	w19, #1, 40f35c <wcrtomb@plt+0xc6fc>
  40f348:	sub	x1, x29, #0x38
  40f34c:	mov	w2, #0x2                   	// #2
  40f350:	mov	x0, x20
  40f354:	bl	4124a8 <wcrtomb@plt+0xf848>
  40f358:	str	w0, [x20, #364]
  40f35c:	add	w8, w0, #0x1
  40f360:	ldr	x0, [sp, #16]
  40f364:	str	w8, [x20, #364]
  40f368:	str	wzr, [x20, #360]
  40f36c:	bl	402a10 <free@plt>
  40f370:	ldr	x0, [sp, #8]
  40f374:	bl	402a10 <free@plt>
  40f378:	ldur	x0, [x29, #-80]
  40f37c:	bl	402a10 <free@plt>
  40f380:	mov	x0, x22
  40f384:	ldp	x20, x19, [sp, #288]
  40f388:	ldp	x22, x21, [sp, #272]
  40f38c:	ldp	x24, x23, [sp, #256]
  40f390:	ldp	x26, x25, [sp, #240]
  40f394:	ldp	x28, x27, [sp, #224]
  40f398:	ldp	x29, x30, [sp, #208]
  40f39c:	add	sp, sp, #0x130
  40f3a0:	b	402a10 <free@plt>
  40f3a4:	bl	4170f0 <wcrtomb@plt+0x14490>
  40f3a8:	mov	x0, x1
  40f3ac:	mov	w8, #0x1                   	// #1
  40f3b0:	strb	w8, [x5]
  40f3b4:	ret
  40f3b8:	stp	x29, x30, [sp, #-48]!
  40f3bc:	stp	x20, x19, [sp, #32]
  40f3c0:	mov	x19, x0
  40f3c4:	ldr	x0, [x0]
  40f3c8:	str	x21, [sp, #16]
  40f3cc:	mov	x29, sp
  40f3d0:	bl	402a10 <free@plt>
  40f3d4:	ldr	x0, [x19, #144]
  40f3d8:	bl	402a10 <free@plt>
  40f3dc:	ldrb	w8, [x19, #1048]
  40f3e0:	cbz	w8, 40f434 <wcrtomb@plt+0xc7d4>
  40f3e4:	ldr	x0, [x19, #280]
  40f3e8:	bl	402a10 <free@plt>
  40f3ec:	ldr	x0, [x19, #96]
  40f3f0:	bl	402a10 <free@plt>
  40f3f4:	ldr	x0, [x19, #408]
  40f3f8:	bl	402a10 <free@plt>
  40f3fc:	ldr	x8, [x19, #432]
  40f400:	cbz	x8, 40f434 <wcrtomb@plt+0xc7d4>
  40f404:	ldr	x9, [x19, #352]
  40f408:	tbnz	x9, #63, 40f42c <wcrtomb@plt+0xc7cc>
  40f40c:	mov	x20, #0xffffffffffffffff    	// #-1
  40f410:	ldr	x0, [x8, x20, lsl #3]
  40f414:	bl	402a10 <free@plt>
  40f418:	ldr	x9, [x19, #352]
  40f41c:	ldr	x8, [x19, #432]
  40f420:	add	x20, x20, #0x1
  40f424:	cmp	x20, x9
  40f428:	b.lt	40f410 <wcrtomb@plt+0xc7b0>  // b.tstop
  40f42c:	sub	x0, x8, #0x10
  40f430:	bl	402a10 <free@plt>
  40f434:	ldr	x0, [x19, #336]
  40f438:	bl	402a10 <free@plt>
  40f43c:	ldr	x0, [x19, #344]
  40f440:	bl	402a10 <free@plt>
  40f444:	ldr	x8, [x19, #304]
  40f448:	cmp	x8, #0x1
  40f44c:	b.lt	40f48c <wcrtomb@plt+0xc82c>  // b.tstop
  40f450:	mov	x20, xzr
  40f454:	mov	x21, xzr
  40f458:	ldr	x8, [x19, #296]
  40f45c:	add	x8, x8, x20
  40f460:	ldr	x0, [x8, #8]
  40f464:	bl	402a10 <free@plt>
  40f468:	ldr	x8, [x19, #296]
  40f46c:	add	x8, x8, x20
  40f470:	ldr	x0, [x8, #48]
  40f474:	bl	402a10 <free@plt>
  40f478:	ldr	x8, [x19, #304]
  40f47c:	add	x21, x21, #0x1
  40f480:	add	x20, x20, #0x50
  40f484:	cmp	x21, x8
  40f488:	b.lt	40f458 <wcrtomb@plt+0xc7f8>  // b.tstop
  40f48c:	ldr	x0, [x19, #296]
  40f490:	bl	402a10 <free@plt>
  40f494:	ldr	x0, [x19, #320]
  40f498:	cbz	x0, 40f4ec <wcrtomb@plt+0xc88c>
  40f49c:	ldr	x8, [x19, #152]
  40f4a0:	cmp	x8, #0x1
  40f4a4:	b.lt	40f4e8 <wcrtomb@plt+0xc888>  // b.tstop
  40f4a8:	ldr	x0, [x0]
  40f4ac:	bl	402a10 <free@plt>
  40f4b0:	ldr	x8, [x19, #152]
  40f4b4:	cmp	x8, #0x2
  40f4b8:	b.lt	40f4e4 <wcrtomb@plt+0xc884>  // b.tstop
  40f4bc:	mov	w20, #0x1                   	// #1
  40f4c0:	mov	w21, #0x18                  	// #24
  40f4c4:	ldr	x8, [x19, #320]
  40f4c8:	ldr	x0, [x8, x21]
  40f4cc:	bl	402a10 <free@plt>
  40f4d0:	ldr	x8, [x19, #152]
  40f4d4:	add	x20, x20, #0x1
  40f4d8:	add	x21, x21, #0x18
  40f4dc:	cmp	x20, x8
  40f4e0:	b.lt	40f4c4 <wcrtomb@plt+0xc864>  // b.tstop
  40f4e4:	ldr	x0, [x19, #320]
  40f4e8:	bl	402a10 <free@plt>
  40f4ec:	ldr	x8, [x19, #368]
  40f4f0:	cbz	x8, 40f550 <wcrtomb@plt+0xc8f0>
  40f4f4:	ldr	x9, [x19, #352]
  40f4f8:	cmp	x9, #0x1
  40f4fc:	b.lt	40f530 <wcrtomb@plt+0xc8d0>  // b.tstop
  40f500:	mov	x20, xzr
  40f504:	lsl	x21, x20, #3
  40f508:	ldr	x0, [x8, x21]
  40f50c:	bl	402a10 <free@plt>
  40f510:	ldr	x8, [x19, #376]
  40f514:	ldr	x0, [x8, x21]
  40f518:	bl	402a10 <free@plt>
  40f51c:	ldr	x9, [x19, #352]
  40f520:	ldr	x8, [x19, #368]
  40f524:	add	x20, x20, #0x1
  40f528:	cmp	x20, x9
  40f52c:	b.lt	40f504 <wcrtomb@plt+0xc8a4>  // b.tstop
  40f530:	sub	x0, x8, #0x10
  40f534:	bl	402a10 <free@plt>
  40f538:	ldr	x0, [x19, #376]
  40f53c:	bl	402a10 <free@plt>
  40f540:	ldr	x0, [x19, #392]
  40f544:	bl	402a10 <free@plt>
  40f548:	ldr	x0, [x19, #384]
  40f54c:	bl	402a10 <free@plt>
  40f550:	ldr	x0, [x19, #288]
  40f554:	cbz	x0, 40f570 <wcrtomb@plt+0xc910>
  40f558:	bl	40f3b8 <wcrtomb@plt+0xc758>
  40f55c:	ldr	x0, [x19, #288]
  40f560:	ldp	x20, x19, [sp, #32]
  40f564:	ldr	x21, [sp, #16]
  40f568:	ldp	x29, x30, [sp], #48
  40f56c:	b	402a10 <free@plt>
  40f570:	ldp	x20, x19, [sp, #32]
  40f574:	ldr	x21, [sp, #16]
  40f578:	ldp	x29, x30, [sp], #48
  40f57c:	ret
  40f580:	sub	sp, sp, #0xa0
  40f584:	stp	x29, x30, [sp, #64]
  40f588:	stp	x28, x27, [sp, #80]
  40f58c:	stp	x26, x25, [sp, #96]
  40f590:	stp	x24, x23, [sp, #112]
  40f594:	stp	x22, x21, [sp, #128]
  40f598:	stp	x20, x19, [sp, #144]
  40f59c:	ldr	x21, [x0, #152]
  40f5a0:	add	x29, sp, #0x40
  40f5a4:	cmp	x21, #0x3
  40f5a8:	b.lt	410094 <wcrtomb@plt+0xd434>  // b.tstop
  40f5ac:	stp	wzr, wzr, [sp, #20]
  40f5b0:	ldrb	w9, [x0, #1048]
  40f5b4:	ldrb	w8, [x0, #457]
  40f5b8:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40f5bc:	mov	x24, x0
  40f5c0:	eor	w9, w9, #0x1
  40f5c4:	mov	x25, xzr
  40f5c8:	mov	w27, #0x1                   	// #1
  40f5cc:	mov	w23, #0x2                   	// #2
  40f5d0:	add	x28, x28, #0x3e3
  40f5d4:	and	w8, w9, w8
  40f5d8:	str	w8, [sp, #28]
  40f5dc:	stur	x0, [x29, #-16]
  40f5e0:	b	40f644 <wcrtomb@plt+0xc9e4>
  40f5e4:	mov	w0, #0x30                  	// #48
  40f5e8:	bl	416dd4 <wcrtomb@plt+0x14174>
  40f5ec:	mov	x22, x0
  40f5f0:	mov	w0, #0x8                   	// #8
  40f5f4:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f5f8:	str	x0, [x22]
  40f5fc:	mov	w0, #0x2                   	// #2
  40f600:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f604:	str	x0, [x22, #8]
  40f608:	mov	w0, #0x2                   	// #2
  40f60c:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f610:	str	x0, [x22, #16]
  40f614:	mov	w0, #0x2                   	// #2
  40f618:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f61c:	str	x0, [x22, #24]
  40f620:	strh	wzr, [x22, #32]
  40f624:	str	x25, [x22, #40]
  40f628:	ldur	x24, [x29, #-16]
  40f62c:	mov	x25, x22
  40f630:	ldr	x21, [x24, #152]
  40f634:	add	x23, x27, #0x2
  40f638:	add	x27, x27, #0x1
  40f63c:	cmp	x23, x21
  40f640:	b.ge	41013c <wcrtomb@plt+0xd4dc>  // b.tcont
  40f644:	ldr	x24, [x24, #144]
  40f648:	add	x22, x24, x27, lsl #3
  40f64c:	ldr	x19, [x22]
  40f650:	sub	x8, x19, #0x100
  40f654:	cmp	x8, #0x13
  40f658:	b.hi	40f6bc <wcrtomb@plt+0xca5c>  // b.pmore
  40f65c:	adrp	x11, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40f660:	add	x11, x11, #0xc22
  40f664:	adr	x9, 40f5e4 <wcrtomb@plt+0xc984>
  40f668:	ldrh	w10, [x11, x8, lsl #1]
  40f66c:	add	x9, x9, x10, lsl #2
  40f670:	br	x9
  40f674:	ldr	x8, [x25]
  40f678:	ldr	x0, [x8]
  40f67c:	cbz	x0, 40f694 <wcrtomb@plt+0xca34>
  40f680:	add	x19, x8, #0x8
  40f684:	bl	402a10 <free@plt>
  40f688:	ldr	x0, [x19], #8
  40f68c:	cbnz	x0, 40f684 <wcrtomb@plt+0xca24>
  40f690:	ldr	x8, [x25]
  40f694:	str	xzr, [x8]
  40f698:	ldr	x8, [x25, #24]
  40f69c:	ldur	x24, [x29, #-16]
  40f6a0:	strb	wzr, [x8]
  40f6a4:	ldr	x8, [x25, #16]
  40f6a8:	strb	wzr, [x8]
  40f6ac:	ldr	x8, [x25, #8]
  40f6b0:	strb	wzr, [x8]
  40f6b4:	strh	wzr, [x25, #32]
  40f6b8:	b	40f630 <wcrtomb@plt+0xc9d0>
  40f6bc:	cmn	x19, #0x1
  40f6c0:	b.eq	4100e8 <wcrtomb@plt+0xd488>  // b.none
  40f6c4:	cbz	x19, 4101d4 <wcrtomb@plt+0xd574>
  40f6c8:	str	x25, [sp, #32]
  40f6cc:	subs	x25, x19, #0x114
  40f6d0:	b.lt	40fe64 <wcrtomb@plt+0xd204>  // b.tstop
  40f6d4:	ldur	x8, [x29, #-16]
  40f6d8:	mov	x19, xzr
  40f6dc:	ldr	x26, [x8]
  40f6e0:	ubfx	x8, x19, #6, #26
  40f6e4:	add	x9, x26, x25, lsl #5
  40f6e8:	ldr	x8, [x9, w8, uxtw #3]
  40f6ec:	lsr	x8, x8, x19
  40f6f0:	tbnz	w8, #0, 40fd74 <wcrtomb@plt+0xd114>
  40f6f4:	add	x19, x19, #0x1
  40f6f8:	cmp	w19, #0x100
  40f6fc:	b.ne	40f6e0 <wcrtomb@plt+0xca80>  // b.any
  40f700:	mov	w0, #0x30                  	// #48
  40f704:	bl	416dd4 <wcrtomb@plt+0x14174>
  40f708:	mov	x25, x0
  40f70c:	mov	w0, #0x8                   	// #8
  40f710:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f714:	str	x0, [x25]
  40f718:	mov	w0, #0x2                   	// #2
  40f71c:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f720:	str	x0, [x25, #8]
  40f724:	mov	w0, #0x2                   	// #2
  40f728:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f72c:	str	x0, [x25, #16]
  40f730:	mov	w0, #0x2                   	// #2
  40f734:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f738:	ldr	x8, [sp, #32]
  40f73c:	ldur	x24, [x29, #-16]
  40f740:	str	x0, [x25, #24]
  40f744:	strh	wzr, [x25, #32]
  40f748:	str	x8, [x25, #40]
  40f74c:	b	40f630 <wcrtomb@plt+0xc9d0>
  40f750:	ldr	x8, [x25]
  40f754:	ldr	x21, [x25, #40]
  40f758:	ldr	x23, [x8]
  40f75c:	ldr	x22, [x21]
  40f760:	cbz	x23, 40f78c <wcrtomb@plt+0xcb2c>
  40f764:	add	x19, x8, #0x8
  40f768:	mov	x0, x23
  40f76c:	bl	4025c0 <strlen@plt>
  40f770:	mov	x2, x0
  40f774:	mov	x0, x22
  40f778:	mov	x1, x23
  40f77c:	bl	410290 <wcrtomb@plt+0xd630>
  40f780:	ldr	x23, [x19], #8
  40f784:	mov	x22, x0
  40f788:	cbnz	x23, 40f768 <wcrtomb@plt+0xcb08>
  40f78c:	ldr	x0, [x21, #16]
  40f790:	str	x22, [x21]
  40f794:	ldrb	w8, [x0]
  40f798:	cbz	w8, 40f80c <wcrtomb@plt+0xcbac>
  40f79c:	ldr	x22, [x25, #8]
  40f7a0:	ldrb	w8, [x22]
  40f7a4:	cbz	w8, 40f80c <wcrtomb@plt+0xcbac>
  40f7a8:	bl	4025c0 <strlen@plt>
  40f7ac:	mov	x23, x0
  40f7b0:	mov	x0, x22
  40f7b4:	bl	4025c0 <strlen@plt>
  40f7b8:	add	x24, x0, x23
  40f7bc:	mov	x22, x0
  40f7c0:	mov	x0, x24
  40f7c4:	bl	416dd4 <wcrtomb@plt+0x14174>
  40f7c8:	ldr	x1, [x21, #16]
  40f7cc:	mov	x2, x23
  40f7d0:	mov	x19, x25
  40f7d4:	mov	x25, x0
  40f7d8:	bl	402580 <memcpy@plt>
  40f7dc:	ldr	x1, [x19, #8]
  40f7e0:	add	x0, x25, x23
  40f7e4:	mov	x2, x22
  40f7e8:	bl	402580 <memcpy@plt>
  40f7ec:	ldr	x0, [x21]
  40f7f0:	mov	x1, x25
  40f7f4:	mov	x2, x24
  40f7f8:	bl	410290 <wcrtomb@plt+0xd630>
  40f7fc:	str	x0, [x21]
  40f800:	mov	x0, x25
  40f804:	mov	x25, x19
  40f808:	bl	402a10 <free@plt>
  40f80c:	ldr	x8, [x21, #24]
  40f810:	ldrb	w8, [x8]
  40f814:	cbz	w8, 40f86c <wcrtomb@plt+0xcc0c>
  40f818:	ldr	x23, [x25, #8]
  40f81c:	ldr	x22, [x21, #8]
  40f820:	mov	x0, x23
  40f824:	bl	4025c0 <strlen@plt>
  40f828:	cbz	x0, 40f868 <wcrtomb@plt+0xcc08>
  40f82c:	mov	x24, x0
  40f830:	mov	x0, x22
  40f834:	bl	4025c0 <strlen@plt>
  40f838:	add	x24, x24, #0x1
  40f83c:	mov	x19, x25
  40f840:	mov	x25, x0
  40f844:	add	x1, x0, x24
  40f848:	mov	x0, x22
  40f84c:	bl	416e54 <wcrtomb@plt+0x141f4>
  40f850:	mov	x22, x0
  40f854:	add	x0, x0, x25
  40f858:	mov	x1, x23
  40f85c:	mov	x2, x24
  40f860:	mov	x25, x19
  40f864:	bl	402580 <memcpy@plt>
  40f868:	str	x22, [x21, #8]
  40f86c:	ldr	x8, [x25, #24]
  40f870:	ldrb	w8, [x8]
  40f874:	cbnz	w8, 40f880 <wcrtomb@plt+0xcc20>
  40f878:	ldr	x8, [x21, #16]
  40f87c:	strb	wzr, [x8]
  40f880:	ldr	x22, [x25, #16]
  40f884:	ldr	x23, [x21, #16]
  40f888:	mov	x0, x22
  40f88c:	bl	4025c0 <strlen@plt>
  40f890:	cbz	x0, 40f8d0 <wcrtomb@plt+0xcc70>
  40f894:	mov	x24, x0
  40f898:	mov	x0, x23
  40f89c:	bl	4025c0 <strlen@plt>
  40f8a0:	add	x24, x24, #0x1
  40f8a4:	mov	x19, x25
  40f8a8:	mov	x25, x0
  40f8ac:	add	x1, x0, x24
  40f8b0:	mov	x0, x23
  40f8b4:	bl	416e54 <wcrtomb@plt+0x141f4>
  40f8b8:	mov	x23, x0
  40f8bc:	add	x0, x0, x25
  40f8c0:	mov	x1, x22
  40f8c4:	mov	x2, x24
  40f8c8:	mov	x25, x19
  40f8cc:	bl	402580 <memcpy@plt>
  40f8d0:	ldr	x22, [x21, #24]
  40f8d4:	str	x23, [x21, #16]
  40f8d8:	ldrb	w8, [x22]
  40f8dc:	cbnz	w8, 40f8e8 <wcrtomb@plt+0xcc88>
  40f8e0:	ldrb	w8, [x21, #32]
  40f8e4:	cbz	w8, 40fddc <wcrtomb@plt+0xd17c>
  40f8e8:	ldr	x23, [x25, #24]
  40f8ec:	ldrb	w8, [x23]
  40f8f0:	cbnz	w8, 40f8fc <wcrtomb@plt+0xcc9c>
  40f8f4:	ldrb	w8, [x25, #33]
  40f8f8:	cbz	w8, 40fddc <wcrtomb@plt+0xd17c>
  40f8fc:	mov	x0, x23
  40f900:	bl	4025c0 <strlen@plt>
  40f904:	cbz	x0, 40f944 <wcrtomb@plt+0xcce4>
  40f908:	mov	x24, x0
  40f90c:	mov	x0, x22
  40f910:	bl	4025c0 <strlen@plt>
  40f914:	add	x24, x24, #0x1
  40f918:	mov	x19, x25
  40f91c:	mov	x25, x0
  40f920:	add	x1, x0, x24
  40f924:	mov	x0, x22
  40f928:	bl	416e54 <wcrtomb@plt+0x141f4>
  40f92c:	mov	x22, x0
  40f930:	add	x0, x0, x25
  40f934:	mov	x1, x23
  40f938:	mov	x2, x24
  40f93c:	mov	x25, x19
  40f940:	bl	402580 <memcpy@plt>
  40f944:	str	x22, [x21, #24]
  40f948:	ldur	x24, [x29, #-16]
  40f94c:	ldrb	w8, [x25, #33]
  40f950:	strb	w8, [x21, #33]
  40f954:	ldr	x8, [x25]
  40f958:	ldr	x0, [x8]
  40f95c:	cbnz	x0, 40fdfc <wcrtomb@plt+0xd19c>
  40f960:	b	40fe10 <wcrtomb@plt+0xd1b0>
  40f964:	ldr	x8, [x25, #24]
  40f968:	ldur	x24, [x29, #-16]
  40f96c:	strb	wzr, [x8]
  40f970:	b	40f630 <wcrtomb@plt+0xc9d0>
  40f974:	mov	w0, #0x30                  	// #48
  40f978:	bl	416dd4 <wcrtomb@plt+0x14174>
  40f97c:	mov	x22, x0
  40f980:	mov	w0, #0x8                   	// #8
  40f984:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f988:	str	x0, [x22]
  40f98c:	mov	w0, #0x2                   	// #2
  40f990:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f994:	str	x0, [x22, #8]
  40f998:	mov	w0, #0x2                   	// #2
  40f99c:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f9a0:	str	x0, [x22, #16]
  40f9a4:	mov	w0, #0x2                   	// #2
  40f9a8:	bl	416ff4 <wcrtomb@plt+0x14394>
  40f9ac:	mov	w8, #0x100                 	// #256
  40f9b0:	strh	w8, [x22, #32]
  40f9b4:	mov	w8, #0x1                   	// #1
  40f9b8:	str	x0, [x22, #24]
  40f9bc:	str	x25, [x22, #40]
  40f9c0:	str	w8, [sp, #20]
  40f9c4:	b	40f628 <wcrtomb@plt+0xc9c8>
  40f9c8:	ldr	x19, [x25, #40]
  40f9cc:	ldr	x1, [x25, #24]
  40f9d0:	str	x27, [sp, #8]
  40f9d4:	ldr	x22, [x19, #24]
  40f9d8:	mov	x0, x22
  40f9dc:	bl	4029d0 <strcmp@plt>
  40f9e0:	cbz	w0, 40fa50 <wcrtomb@plt+0xcdf0>
  40f9e4:	strb	wzr, [x22]
  40f9e8:	strh	wzr, [x19, #32]
  40f9ec:	ldr	x8, [x19, #8]
  40f9f0:	ldrb	w10, [x8]
  40f9f4:	cbnz	w10, 40fa7c <wcrtomb@plt+0xce1c>
  40f9f8:	b	40fab0 <wcrtomb@plt+0xce50>
  40f9fc:	mov	w0, #0x30                  	// #48
  40fa00:	bl	416dd4 <wcrtomb@plt+0x14174>
  40fa04:	mov	x22, x0
  40fa08:	mov	w0, #0x8                   	// #8
  40fa0c:	bl	416ff4 <wcrtomb@plt+0x14394>
  40fa10:	str	x0, [x22]
  40fa14:	mov	w0, #0x2                   	// #2
  40fa18:	bl	416ff4 <wcrtomb@plt+0x14394>
  40fa1c:	str	x0, [x22, #8]
  40fa20:	mov	w0, #0x2                   	// #2
  40fa24:	bl	416ff4 <wcrtomb@plt+0x14394>
  40fa28:	str	x0, [x22, #16]
  40fa2c:	mov	w0, #0x2                   	// #2
  40fa30:	bl	416ff4 <wcrtomb@plt+0x14394>
  40fa34:	mov	w9, #0x1                   	// #1
  40fa38:	mov	w8, #0x1                   	// #1
  40fa3c:	str	x0, [x22, #24]
  40fa40:	str	x25, [x22, #40]
  40fa44:	str	w8, [sp, #24]
  40fa48:	strh	w9, [x22, #32]
  40fa4c:	b	40f628 <wcrtomb@plt+0xc9c8>
  40fa50:	ldrb	w8, [x25, #32]
  40fa54:	ldrb	w9, [x19, #32]
  40fa58:	and	w8, w9, w8
  40fa5c:	strb	w8, [x19, #32]
  40fa60:	ldrb	w8, [x25, #33]
  40fa64:	ldrb	w9, [x19, #33]
  40fa68:	and	w8, w9, w8
  40fa6c:	strb	w8, [x19, #33]
  40fa70:	ldr	x8, [x19, #8]
  40fa74:	ldrb	w10, [x8]
  40fa78:	cbz	w10, 40fab0 <wcrtomb@plt+0xce50>
  40fa7c:	ldr	x9, [x25, #8]
  40fa80:	ldrb	w11, [x9]
  40fa84:	cmp	w10, w11
  40fa88:	b.ne	40fab0 <wcrtomb@plt+0xce50>  // b.any
  40fa8c:	add	x10, x8, #0x1
  40fa90:	add	x9, x9, #0x1
  40fa94:	mov	x8, x10
  40fa98:	ldrb	w10, [x10]
  40fa9c:	cbz	w10, 40fab0 <wcrtomb@plt+0xce50>
  40faa0:	ldrb	w11, [x9], #1
  40faa4:	cmp	w10, w11
  40faa8:	add	x10, x8, #0x1
  40faac:	b.eq	40fa94 <wcrtomb@plt+0xce34>  // b.none
  40fab0:	strb	wzr, [x8]
  40fab4:	ldr	x22, [x19, #16]
  40fab8:	mov	x0, x22
  40fabc:	bl	4025c0 <strlen@plt>
  40fac0:	ldr	x24, [x25, #16]
  40fac4:	mov	x23, x0
  40fac8:	mov	x0, x24
  40facc:	bl	4025c0 <strlen@plt>
  40fad0:	cmp	x23, x0
  40fad4:	csel	x9, x0, x23, gt
  40fad8:	cmp	x9, #0x1
  40fadc:	b.lt	40fb44 <wcrtomb@plt+0xcee4>  // b.tstop
  40fae0:	add	x10, x24, x0
  40fae4:	mov	x8, xzr
  40fae8:	sub	x10, x10, #0x1
  40faec:	sub	x11, x23, #0x1
  40faf0:	ldrb	w12, [x22, x11]
  40faf4:	ldrb	w13, [x10]
  40faf8:	cmp	w12, w13
  40fafc:	b.ne	40fb18 <wcrtomb@plt+0xceb8>  // b.any
  40fb00:	add	x8, x8, #0x1
  40fb04:	sub	x10, x10, #0x1
  40fb08:	cmp	x8, x9
  40fb0c:	sub	x11, x11, #0x1
  40fb10:	b.lt	40faf0 <wcrtomb@plt+0xce90>  // b.tstop
  40fb14:	mov	x8, x9
  40fb18:	cbz	x8, 40fb48 <wcrtomb@plt+0xcee8>
  40fb1c:	mov	x9, xzr
  40fb20:	sub	x10, x23, x8
  40fb24:	add	x11, x22, x10
  40fb28:	ldrb	w11, [x11, x9]
  40fb2c:	strb	w11, [x22, x9]
  40fb30:	ldr	x22, [x19, #16]
  40fb34:	add	x9, x9, #0x1
  40fb38:	cmp	x8, x9
  40fb3c:	b.ne	40fb24 <wcrtomb@plt+0xcec4>  // b.any
  40fb40:	b	40fb48 <wcrtomb@plt+0xcee8>
  40fb44:	mov	x8, xzr
  40fb48:	strb	wzr, [x22, x8]
  40fb4c:	str	x19, [sp]
  40fb50:	ldr	x19, [x19]
  40fb54:	ldr	x21, [x25]
  40fb58:	mov	w0, #0x8                   	// #8
  40fb5c:	str	x25, [sp, #32]
  40fb60:	bl	416ff4 <wcrtomb@plt+0x14394>
  40fb64:	ldr	x24, [x19]
  40fb68:	mov	x22, x0
  40fb6c:	cbz	x24, 40fcd0 <wcrtomb@plt+0xd070>
  40fb70:	mov	x8, xzr
  40fb74:	mov	x28, x19
  40fb78:	stur	x19, [x29, #-24]
  40fb7c:	b	40fb98 <wcrtomb@plt+0xcf38>
  40fb80:	ldur	x19, [x29, #-24]
  40fb84:	ldur	x8, [x29, #-8]
  40fb88:	add	x8, x8, #0x1
  40fb8c:	add	x28, x19, x8, lsl #3
  40fb90:	ldr	x24, [x28]
  40fb94:	cbz	x24, 40fcd0 <wcrtomb@plt+0xd070>
  40fb98:	ldr	x25, [x21]
  40fb9c:	cbz	x25, 40fb88 <wcrtomb@plt+0xcf28>
  40fba0:	mov	x19, xzr
  40fba4:	stur	x8, [x29, #-8]
  40fba8:	mov	w0, #0x8                   	// #8
  40fbac:	bl	416ff4 <wcrtomb@plt+0x14394>
  40fbb0:	ldrb	w8, [x24]
  40fbb4:	mov	x23, x0
  40fbb8:	cbnz	w8, 40fc44 <wcrtomb@plt+0xcfe4>
  40fbbc:	ldr	x24, [x23]
  40fbc0:	cbz	x24, 40fc08 <wcrtomb@plt+0xcfa8>
  40fbc4:	mov	w20, #0x8                   	// #8
  40fbc8:	mov	x0, x24
  40fbcc:	bl	4025c0 <strlen@plt>
  40fbd0:	mov	x2, x0
  40fbd4:	mov	x0, x22
  40fbd8:	mov	x1, x24
  40fbdc:	bl	410290 <wcrtomb@plt+0xd630>
  40fbe0:	ldr	x24, [x23, x20]
  40fbe4:	mov	x22, x0
  40fbe8:	add	x20, x20, #0x8
  40fbec:	cbnz	x24, 40fbc8 <wcrtomb@plt+0xcf68>
  40fbf0:	ldr	x0, [x23]
  40fbf4:	cbz	x0, 40fc08 <wcrtomb@plt+0xcfa8>
  40fbf8:	add	x20, x23, #0x8
  40fbfc:	bl	402a10 <free@plt>
  40fc00:	ldr	x0, [x20], #8
  40fc04:	cbnz	x0, 40fbfc <wcrtomb@plt+0xcf9c>
  40fc08:	mov	x0, x23
  40fc0c:	bl	402a10 <free@plt>
  40fc10:	add	x19, x19, #0x1
  40fc14:	ldr	x25, [x21, x19, lsl #3]
  40fc18:	cbz	x25, 40fb80 <wcrtomb@plt+0xcf20>
  40fc1c:	ldr	x24, [x28]
  40fc20:	b	40fba8 <wcrtomb@plt+0xcf48>
  40fc24:	cbz	x27, 40fc3c <wcrtomb@plt+0xcfdc>
  40fc28:	mov	x0, x23
  40fc2c:	mov	x1, x24
  40fc30:	mov	x2, x27
  40fc34:	bl	410290 <wcrtomb@plt+0xd630>
  40fc38:	mov	x23, x0
  40fc3c:	ldrb	w8, [x24, #1]!
  40fc40:	cbz	w8, 40fbbc <wcrtomb@plt+0xcf5c>
  40fc44:	and	w26, w8, #0xff
  40fc48:	mov	x0, x25
  40fc4c:	mov	w1, w26
  40fc50:	bl	402a50 <strchr@plt>
  40fc54:	cbz	x0, 40fc3c <wcrtomb@plt+0xcfdc>
  40fc58:	ldrb	w20, [x24, #1]
  40fc5c:	cbz	w20, 40fcb0 <wcrtomb@plt+0xd050>
  40fc60:	mov	x27, xzr
  40fc64:	b	40fc84 <wcrtomb@plt+0xd024>
  40fc68:	add	x8, x8, #0x1
  40fc6c:	cmp	x8, x27
  40fc70:	add	x0, x0, #0x1
  40fc74:	mov	w1, w26
  40fc78:	csel	x27, x8, x27, gt
  40fc7c:	bl	402a50 <strchr@plt>
  40fc80:	cbz	x0, 40fc24 <wcrtomb@plt+0xcfc4>
  40fc84:	mov	x8, xzr
  40fc88:	add	x9, x0, #0x1
  40fc8c:	mov	w10, w20
  40fc90:	ldrb	w11, [x9, x8]
  40fc94:	cmp	w11, w10, uxtb
  40fc98:	b.ne	40fc68 <wcrtomb@plt+0xd008>  // b.any
  40fc9c:	add	x10, x24, x8
  40fca0:	ldrb	w10, [x10, #2]
  40fca4:	add	x8, x8, #0x1
  40fca8:	cbnz	w10, 40fc90 <wcrtomb@plt+0xd030>
  40fcac:	b	40fc68 <wcrtomb@plt+0xd008>
  40fcb0:	mov	x27, xzr
  40fcb4:	cmp	x27, #0x0
  40fcb8:	add	x0, x0, #0x1
  40fcbc:	mov	w1, w26
  40fcc0:	csinc	x27, x27, xzr, ne  // ne = any
  40fcc4:	bl	402a50 <strchr@plt>
  40fcc8:	cbnz	x0, 40fcb4 <wcrtomb@plt+0xd054>
  40fccc:	b	40fc28 <wcrtomb@plt+0xcfc8>
  40fcd0:	ldr	x25, [sp]
  40fcd4:	ldr	x8, [x25]
  40fcd8:	ldr	x0, [x8]
  40fcdc:	cbz	x0, 40fd08 <wcrtomb@plt+0xd0a8>
  40fce0:	ldr	x20, [sp, #32]
  40fce4:	ldur	x24, [x29, #-16]
  40fce8:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40fcec:	add	x19, x8, #0x8
  40fcf0:	add	x28, x28, #0x3e3
  40fcf4:	bl	402a10 <free@plt>
  40fcf8:	ldr	x0, [x19], #8
  40fcfc:	cbnz	x0, 40fcf4 <wcrtomb@plt+0xd094>
  40fd00:	ldr	x8, [x25]
  40fd04:	b	40fd18 <wcrtomb@plt+0xd0b8>
  40fd08:	ldr	x20, [sp, #32]
  40fd0c:	ldur	x24, [x29, #-16]
  40fd10:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x11ae4>
  40fd14:	add	x28, x28, #0x3e3
  40fd18:	mov	x0, x8
  40fd1c:	bl	402a10 <free@plt>
  40fd20:	str	x22, [x25]
  40fd24:	ldr	x8, [x20]
  40fd28:	ldr	x0, [x8]
  40fd2c:	cbz	x0, 40fd44 <wcrtomb@plt+0xd0e4>
  40fd30:	add	x19, x8, #0x8
  40fd34:	bl	402a10 <free@plt>
  40fd38:	ldr	x0, [x19], #8
  40fd3c:	cbnz	x0, 40fd34 <wcrtomb@plt+0xd0d4>
  40fd40:	ldr	x8, [x20]
  40fd44:	mov	x0, x8
  40fd48:	bl	402a10 <free@plt>
  40fd4c:	ldr	x0, [x20, #8]
  40fd50:	bl	402a10 <free@plt>
  40fd54:	ldr	x0, [x20, #16]
  40fd58:	bl	402a10 <free@plt>
  40fd5c:	ldr	x0, [x20, #24]
  40fd60:	bl	402a10 <free@plt>
  40fd64:	mov	x0, x20
  40fd68:	bl	402a10 <free@plt>
  40fd6c:	ldr	x27, [sp, #8]
  40fd70:	b	40f630 <wcrtomb@plt+0xc9d0>
  40fd74:	cmp	w19, #0xfe
  40fd78:	b.hi	40fe64 <wcrtomb@plt+0xd204>  // b.pmore
  40fd7c:	ldr	w8, [sp, #28]
  40fd80:	tst	w8, #0xff
  40fd84:	b.eq	40fe40 <wcrtomb@plt+0xd1e0>  // b.none
  40fd88:	add	x20, x19, #0x1
  40fd8c:	b	40fd9c <wcrtomb@plt+0xd13c>
  40fd90:	add	x20, x20, #0x1
  40fd94:	cmp	x20, #0x100
  40fd98:	b.eq	40fe64 <wcrtomb@plt+0xd204>  // b.none
  40fd9c:	ubfx	x8, x20, #6, #26
  40fda0:	add	x9, x26, x25, lsl #5
  40fda4:	ldr	x8, [x9, x8, lsl #3]
  40fda8:	lsr	x8, x8, x20
  40fdac:	tbz	w8, #0, 40fd90 <wcrtomb@plt+0xd130>
  40fdb0:	bl	402880 <__ctype_toupper_loc@plt>
  40fdb4:	ldr	x8, [x0]
  40fdb8:	ldr	w8, [x8, x20, lsl #2]
  40fdbc:	stur	w8, [x29, #-8]
  40fdc0:	bl	402880 <__ctype_toupper_loc@plt>
  40fdc4:	ldr	x8, [x0]
  40fdc8:	ldur	w9, [x29, #-8]
  40fdcc:	ldr	w8, [x8, x19, lsl #2]
  40fdd0:	cmp	w9, w8
  40fdd4:	b.eq	40fd90 <wcrtomb@plt+0xd130>  // b.none
  40fdd8:	b	40f700 <wcrtomb@plt+0xcaa0>
  40fddc:	ldur	x24, [x29, #-16]
  40fde0:	mov	w8, wzr
  40fde4:	strb	wzr, [x22]
  40fde8:	strb	wzr, [x21, #32]
  40fdec:	strb	w8, [x21, #33]
  40fdf0:	ldr	x8, [x25]
  40fdf4:	ldr	x0, [x8]
  40fdf8:	cbz	x0, 40fe10 <wcrtomb@plt+0xd1b0>
  40fdfc:	add	x19, x8, #0x8
  40fe00:	bl	402a10 <free@plt>
  40fe04:	ldr	x0, [x19], #8
  40fe08:	cbnz	x0, 40fe00 <wcrtomb@plt+0xd1a0>
  40fe0c:	ldr	x8, [x25]
  40fe10:	mov	x0, x8
  40fe14:	bl	402a10 <free@plt>
  40fe18:	ldr	x0, [x25, #8]
  40fe1c:	bl	402a10 <free@plt>
  40fe20:	ldr	x0, [x25, #16]
  40fe24:	bl	402a10 <free@plt>
  40fe28:	ldr	x0, [x25, #24]
  40fe2c:	bl	402a10 <free@plt>
  40fe30:	mov	x0, x25
  40fe34:	bl	402a10 <free@plt>
  40fe38:	mov	x25, x21
  40fe3c:	b	40f630 <wcrtomb@plt+0xc9d0>
  40fe40:	add	w8, w19, #0x1
  40fe44:	lsr	w9, w8, #6
  40fe48:	add	x10, x26, x25, lsl #5
  40fe4c:	ldr	x9, [x10, w9, uxtw #3]
  40fe50:	lsr	x9, x9, x8
  40fe54:	tbnz	w9, #0, 40f700 <wcrtomb@plt+0xcaa0>
  40fe58:	add	w8, w8, #0x1
  40fe5c:	cmp	w8, #0x100
  40fe60:	b.ne	40fe44 <wcrtomb@plt+0xd1e4>  // b.any
  40fe64:	ldr	x8, [x24, x23, lsl #3]
  40fe68:	add	x24, x27, #0x2
  40fe6c:	cmp	x8, #0x105
  40fe70:	b.ne	40fed8 <wcrtomb@plt+0xd278>  // b.any
  40fe74:	sub	x8, x21, #0x1
  40fe78:	cmp	x24, x8
  40fe7c:	b.ge	40fed8 <wcrtomb@plt+0xd278>  // b.tcont
  40fe80:	mov	x9, xzr
  40fe84:	add	x10, x27, #0x2
  40fe88:	mov	x21, x24
  40fe8c:	cmn	x9, #0x2
  40fe90:	b.eq	40fea8 <wcrtomb@plt+0xd248>  // b.none
  40fe94:	add	x11, x22, x9, lsl #3
  40fe98:	ldr	x11, [x11, #16]
  40fe9c:	sub	x11, x11, #0x1
  40fea0:	cmp	x11, #0xfe
  40fea4:	b.hi	40fedc <wcrtomb@plt+0xd27c>  // b.pmore
  40fea8:	add	x11, x22, x9, lsl #3
  40feac:	ldr	x11, [x11, #24]
  40feb0:	cmp	x11, #0x105
  40feb4:	b.ne	40fecc <wcrtomb@plt+0xd26c>  // b.any
  40feb8:	add	x9, x9, #0x2
  40febc:	add	x11, x10, x9
  40fec0:	cmp	x11, x8
  40fec4:	add	x21, x21, #0x2
  40fec8:	b.lt	40fe8c <wcrtomb@plt+0xd22c>  // b.tstop
  40fecc:	add	x8, x27, x9
  40fed0:	add	x21, x8, #0x2
  40fed4:	b	40fedc <wcrtomb@plt+0xd27c>
  40fed8:	mov	x21, x24
  40fedc:	ldr	w8, [sp, #28]
  40fee0:	sub	x25, x21, x27
  40fee4:	mov	w0, #0x30                  	// #48
  40fee8:	mov	x26, x27
  40feec:	and	w20, w8, #0xff
  40fef0:	asr	x8, x25, #1
  40fef4:	add	x23, x8, #0x1
  40fef8:	bl	416dd4 <wcrtomb@plt+0x14174>
  40fefc:	mov	x22, x0
  40ff00:	mov	w0, #0x8                   	// #8
  40ff04:	bl	416ff4 <wcrtomb@plt+0x14394>
  40ff08:	str	x0, [x22]
  40ff0c:	mov	x0, x23
  40ff10:	bl	416ff4 <wcrtomb@plt+0x14394>
  40ff14:	str	x0, [x22, #8]
  40ff18:	mov	x0, x23
  40ff1c:	bl	416ff4 <wcrtomb@plt+0x14394>
  40ff20:	str	x0, [x22, #16]
  40ff24:	mov	x0, x23
  40ff28:	bl	416ff4 <wcrtomb@plt+0x14394>
  40ff2c:	ldr	x8, [sp, #32]
  40ff30:	str	x0, [x22, #24]
  40ff34:	strh	wzr, [x22, #32]
  40ff38:	str	x8, [x22, #40]
  40ff3c:	cbz	w20, 40ff60 <wcrtomb@plt+0xd300>
  40ff40:	add	w8, w19, #0x80
  40ff44:	cmp	w8, #0x17f
  40ff48:	b.hi	40ff5c <wcrtomb@plt+0xd2fc>  // b.pmore
  40ff4c:	bl	402880 <__ctype_toupper_loc@plt>
  40ff50:	ldr	x8, [x0]
  40ff54:	sbfiz	x9, x19, #2, #32
  40ff58:	ldr	w19, [x8, x9]
  40ff5c:	sxtw	x19, w19
  40ff60:	ldr	x8, [x22, #16]
  40ff64:	mov	x12, x26
  40ff68:	cmp	x24, x21
  40ff6c:	strb	w19, [x8]
  40ff70:	ldr	x8, [x22, #8]
  40ff74:	strb	w19, [x8]
  40ff78:	ldr	x8, [x22, #24]
  40ff7c:	strb	w19, [x8]
  40ff80:	b.ge	41000c <wcrtomb@plt+0xd3ac>  // b.tcont
  40ff84:	ldr	w8, [sp, #28]
  40ff88:	ldur	x24, [x29, #-16]
  40ff8c:	and	w9, w8, #0xff
  40ff90:	sub	x8, x25, #0x3
  40ff94:	lsr	x8, x8, #1
  40ff98:	add	x20, x8, #0x2
  40ff9c:	cbz	w9, 410018 <wcrtomb@plt+0xd3b8>
  40ffa0:	neg	x19, x8
  40ffa4:	mov	w21, #0x1                   	// #1
  40ffa8:	b	40ffd8 <wcrtomb@plt+0xd378>
  40ffac:	ldr	x8, [x22, #16]
  40ffb0:	add	x12, x12, #0x2
  40ffb4:	strb	w23, [x8, x21]
  40ffb8:	ldr	x8, [x22, #8]
  40ffbc:	strb	w23, [x8, x21]
  40ffc0:	ldr	x8, [x22, #24]
  40ffc4:	strb	w23, [x8, x21]
  40ffc8:	add	x21, x21, #0x1
  40ffcc:	add	x8, x19, x21
  40ffd0:	cmp	x8, #0x2
  40ffd4:	b.eq	410058 <wcrtomb@plt+0xd3f8>  // b.none
  40ffd8:	ldr	x8, [x24, #144]
  40ffdc:	add	x8, x8, x12, lsl #3
  40ffe0:	ldr	x23, [x8, #16]
  40ffe4:	add	w8, w23, #0x80
  40ffe8:	cmp	w8, #0x17f
  40ffec:	b.hi	40ffac <wcrtomb@plt+0xd34c>  // b.pmore
  40fff0:	mov	x25, x12
  40fff4:	bl	402880 <__ctype_toupper_loc@plt>
  40fff8:	ldr	x8, [x0]
  40fffc:	sbfiz	x9, x23, #2, #32
  410000:	mov	x12, x25
  410004:	ldr	w23, [x8, x9]
  410008:	b	40ffac <wcrtomb@plt+0xd34c>
  41000c:	ldur	x24, [x29, #-16]
  410010:	mov	w20, #0x1                   	// #1
  410014:	b	41005c <wcrtomb@plt+0xd3fc>
  410018:	neg	x8, x8
  41001c:	mov	w9, #0x1                   	// #1
  410020:	ldr	x10, [x24, #144]
  410024:	ldr	x11, [x22, #16]
  410028:	add	x10, x10, x12, lsl #3
  41002c:	ldrb	w10, [x10, #16]
  410030:	add	x12, x12, #0x2
  410034:	strb	w10, [x11, x9]
  410038:	ldr	x11, [x22, #8]
  41003c:	strb	w10, [x11, x9]
  410040:	ldr	x11, [x22, #24]
  410044:	strb	w10, [x11, x9]
  410048:	add	x9, x9, #0x1
  41004c:	add	x10, x8, x9
  410050:	cmp	x10, #0x2
  410054:	b.ne	410020 <wcrtomb@plt+0xd3c0>  // b.any
  410058:	mov	x26, x12
  41005c:	ldr	x8, [x22, #16]
  410060:	mov	x2, x20
  410064:	strb	wzr, [x8, x20]
  410068:	ldr	x8, [x22, #8]
  41006c:	strb	wzr, [x8, x20]
  410070:	ldr	x8, [x22, #24]
  410074:	strb	wzr, [x8, x20]
  410078:	ldr	x0, [x22]
  41007c:	ldr	x1, [x22, #24]
  410080:	bl	410290 <wcrtomb@plt+0xd630>
  410084:	mov	x25, x22
  410088:	mov	x27, x26
  41008c:	str	x0, [x22]
  410090:	b	40f630 <wcrtomb@plt+0xc9d0>
  410094:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410098:	mov	x25, xzr
  41009c:	mov	w20, wzr
  4100a0:	mov	w22, wzr
  4100a4:	mov	w19, wzr
  4100a8:	add	x28, x28, #0x3e3
  4100ac:	ldrb	w8, [x28]
  4100b0:	cbz	w8, 410150 <wcrtomb@plt+0xd4f0>
  4100b4:	mov	x0, x28
  4100b8:	bl	4025c0 <strlen@plt>
  4100bc:	add	x0, x0, #0x4
  4100c0:	bl	416dd4 <wcrtomb@plt+0x14174>
  4100c4:	mov	x21, x0
  4100c8:	strb	w19, [x0]
  4100cc:	strb	w22, [x0, #1]
  4100d0:	strb	w20, [x0, #2]
  4100d4:	add	x0, x0, #0x3
  4100d8:	mov	x1, x28
  4100dc:	bl	402ab0 <strcpy@plt>
  4100e0:	cbnz	x25, 4101ac <wcrtomb@plt+0xd54c>
  4100e4:	b	410158 <wcrtomb@plt+0xd4f8>
  4100e8:	ldr	x8, [x25, #40]
  4100ec:	cbnz	x8, 410270 <wcrtomb@plt+0xd610>
  4100f0:	ldr	x8, [x25]
  4100f4:	ldr	x21, [x8]
  4100f8:	cbz	x21, 4101e8 <wcrtomb@plt+0xd588>
  4100fc:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410100:	add	x19, x8, #0x8
  410104:	add	x28, x28, #0x3e3
  410108:	mov	x0, x21
  41010c:	bl	4025c0 <strlen@plt>
  410110:	mov	x22, x0
  410114:	mov	x0, x28
  410118:	bl	4025c0 <strlen@plt>
  41011c:	cmp	x22, x0
  410120:	csel	x28, x21, x28, hi  // hi = pmore
  410124:	ldr	x21, [x19], #8
  410128:	cbnz	x21, 410108 <wcrtomb@plt+0xd4a8>
  41012c:	ldr	x1, [x25, #24]
  410130:	mov	x0, x28
  410134:	bl	4029d0 <strcmp@plt>
  410138:	cbz	w0, 410200 <wcrtomb@plt+0xd5a0>
  41013c:	mov	w20, wzr
  410140:	mov	w22, wzr
  410144:	mov	w19, wzr
  410148:	ldrb	w8, [x28]
  41014c:	cbnz	w8, 4100b4 <wcrtomb@plt+0xd454>
  410150:	mov	x21, xzr
  410154:	cbnz	x25, 4101ac <wcrtomb@plt+0xd54c>
  410158:	mov	x0, x21
  41015c:	ldp	x20, x19, [sp, #144]
  410160:	ldp	x22, x21, [sp, #128]
  410164:	ldp	x24, x23, [sp, #112]
  410168:	ldp	x26, x25, [sp, #96]
  41016c:	ldp	x28, x27, [sp, #80]
  410170:	ldp	x29, x30, [sp, #64]
  410174:	add	sp, sp, #0xa0
  410178:	ret
  41017c:	mov	x0, x8
  410180:	bl	402a10 <free@plt>
  410184:	ldr	x0, [x25, #8]
  410188:	bl	402a10 <free@plt>
  41018c:	ldr	x0, [x25, #16]
  410190:	bl	402a10 <free@plt>
  410194:	ldr	x0, [x25, #24]
  410198:	bl	402a10 <free@plt>
  41019c:	mov	x0, x25
  4101a0:	bl	402a10 <free@plt>
  4101a4:	mov	x25, x19
  4101a8:	cbz	x19, 410158 <wcrtomb@plt+0xd4f8>
  4101ac:	ldr	x8, [x25]
  4101b0:	ldr	x19, [x25, #40]
  4101b4:	ldr	x0, [x8]
  4101b8:	cbz	x0, 41017c <wcrtomb@plt+0xd51c>
  4101bc:	add	x20, x8, #0x8
  4101c0:	bl	402a10 <free@plt>
  4101c4:	ldr	x0, [x20], #8
  4101c8:	cbnz	x0, 4101c0 <wcrtomb@plt+0xd560>
  4101cc:	ldr	x8, [x25]
  4101d0:	b	41017c <wcrtomb@plt+0xd51c>
  4101d4:	mov	w20, wzr
  4101d8:	mov	w22, wzr
  4101dc:	ldrb	w8, [x28]
  4101e0:	cbnz	w8, 4100b4 <wcrtomb@plt+0xd454>
  4101e4:	b	410150 <wcrtomb@plt+0xd4f0>
  4101e8:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4101ec:	add	x28, x28, #0x3e3
  4101f0:	ldr	x1, [x25, #24]
  4101f4:	mov	x0, x28
  4101f8:	bl	4029d0 <strcmp@plt>
  4101fc:	cbnz	w0, 41013c <wcrtomb@plt+0xd4dc>
  410200:	ldr	w8, [sp, #24]
  410204:	tbz	w8, #0, 410210 <wcrtomb@plt+0xd5b0>
  410208:	ldrb	w8, [x25, #32]
  41020c:	cbz	w8, 410238 <wcrtomb@plt+0xd5d8>
  410210:	ldr	w8, [sp, #20]
  410214:	tbz	w8, #0, 410220 <wcrtomb@plt+0xd5c0>
  410218:	ldrb	w8, [x25, #33]
  41021c:	cbz	w8, 410238 <wcrtomb@plt+0xd5d8>
  410220:	mov	w19, #0x1                   	// #1
  410224:	ldrb	w22, [x25, #32]
  410228:	ldrb	w20, [x25, #33]
  41022c:	ldrb	w8, [x28]
  410230:	cbnz	w8, 4100b4 <wcrtomb@plt+0xd454>
  410234:	b	410150 <wcrtomb@plt+0xd4f0>
  410238:	mov	w19, wzr
  41023c:	ldrb	w22, [x25, #32]
  410240:	ldrb	w20, [x25, #33]
  410244:	ldrb	w8, [x28]
  410248:	cbnz	w8, 4100b4 <wcrtomb@plt+0xd454>
  41024c:	b	410150 <wcrtomb@plt+0xd4f0>
  410250:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410254:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410258:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41025c:	add	x0, x0, #0xf11
  410260:	add	x1, x1, #0xf3e
  410264:	add	x3, x3, #0xf48
  410268:	mov	w2, #0xff6                 	// #4086
  41026c:	bl	402bc0 <__assert_fail@plt>
  410270:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410274:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410278:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41027c:	add	x0, x0, #0xf74
  410280:	add	x1, x1, #0xf3e
  410284:	add	x3, x3, #0xf48
  410288:	mov	w2, #0x1039                	// #4153
  41028c:	bl	402bc0 <__assert_fail@plt>
  410290:	stp	x29, x30, [sp, #-64]!
  410294:	stp	x20, x19, [sp, #48]
  410298:	mov	x19, x0
  41029c:	add	x0, x2, #0x1
  4102a0:	stp	x24, x23, [sp, #16]
  4102a4:	stp	x22, x21, [sp, #32]
  4102a8:	mov	x29, sp
  4102ac:	mov	x21, x2
  4102b0:	mov	x22, x1
  4102b4:	bl	416dd4 <wcrtomb@plt+0x14174>
  4102b8:	mov	x1, x22
  4102bc:	mov	x2, x21
  4102c0:	mov	x20, x0
  4102c4:	bl	402580 <memcpy@plt>
  4102c8:	strb	wzr, [x20, x21]
  4102cc:	ldr	x21, [x19]
  4102d0:	cbz	x21, 410360 <wcrtomb@plt+0xd700>
  4102d4:	mov	x23, xzr
  4102d8:	mov	x0, x21
  4102dc:	mov	x1, x20
  4102e0:	bl	402b30 <strstr@plt>
  4102e4:	cbnz	x0, 41036c <wcrtomb@plt+0xd70c>
  4102e8:	add	x8, x19, x23, lsl #3
  4102ec:	ldr	x0, [x8, #8]
  4102f0:	add	x22, x23, #0x1
  4102f4:	mov	x23, x22
  4102f8:	cbnz	x0, 4102dc <wcrtomb@plt+0xd67c>
  4102fc:	cbz	x21, 410380 <wcrtomb@plt+0xd720>
  410300:	mov	x23, xzr
  410304:	mov	x24, x19
  410308:	b	41031c <wcrtomb@plt+0xd6bc>
  41030c:	add	x23, x23, #0x1
  410310:	add	x24, x19, x23, lsl #3
  410314:	ldr	x21, [x24]
  410318:	cbz	x21, 410380 <wcrtomb@plt+0xd720>
  41031c:	mov	x0, x20
  410320:	mov	x1, x21
  410324:	bl	402b30 <strstr@plt>
  410328:	cbz	x0, 41030c <wcrtomb@plt+0xd6ac>
  41032c:	mov	x0, x21
  410330:	bl	402a10 <free@plt>
  410334:	sub	x22, x22, #0x1
  410338:	cmp	x22, x23
  41033c:	b.eq	41037c <wcrtomb@plt+0xd71c>  // b.none
  410340:	lsl	x8, x22, #3
  410344:	ldr	x9, [x19, x8]
  410348:	str	x9, [x24]
  41034c:	str	xzr, [x19, x8]
  410350:	add	x24, x19, x23, lsl #3
  410354:	ldr	x21, [x24]
  410358:	cbnz	x21, 41031c <wcrtomb@plt+0xd6bc>
  41035c:	b	410380 <wcrtomb@plt+0xd720>
  410360:	mov	x22, xzr
  410364:	mov	w8, #0x2                   	// #2
  410368:	b	41038c <wcrtomb@plt+0xd72c>
  41036c:	mov	x0, x20
  410370:	bl	402a10 <free@plt>
  410374:	mov	x0, x19
  410378:	b	4103a0 <wcrtomb@plt+0xd740>
  41037c:	mov	x22, x23
  410380:	add	x8, x22, #0x2
  410384:	lsr	x9, x8, #60
  410388:	cbnz	x9, 4103b4 <wcrtomb@plt+0xd754>
  41038c:	lsl	x1, x8, #3
  410390:	mov	x0, x19
  410394:	bl	416e54 <wcrtomb@plt+0x141f4>
  410398:	add	x8, x0, x22, lsl #3
  41039c:	stp	x20, xzr, [x8]
  4103a0:	ldp	x20, x19, [sp, #48]
  4103a4:	ldp	x22, x21, [sp, #32]
  4103a8:	ldp	x24, x23, [sp, #16]
  4103ac:	ldp	x29, x30, [sp], #64
  4103b0:	ret
  4103b4:	bl	4170f0 <wcrtomb@plt+0x14490>
  4103b8:	b	402a10 <free@plt>
  4103bc:	mov	w0, #0x920                 	// #2336
  4103c0:	b	416dd4 <wcrtomb@plt+0x14174>
  4103c4:	stp	x29, x30, [sp, #-96]!
  4103c8:	stp	x24, x23, [sp, #48]
  4103cc:	stp	x22, x21, [sp, #64]
  4103d0:	mov	x21, x2
  4103d4:	mov	x22, x1
  4103d8:	mov	x23, #0x2401                	// #9217
  4103dc:	mov	w2, #0x410                 	// #1040
  4103e0:	mov	w1, wzr
  4103e4:	str	x27, [sp, #16]
  4103e8:	stp	x26, x25, [sp, #32]
  4103ec:	stp	x20, x19, [sp, #80]
  4103f0:	mov	x29, sp
  4103f4:	mov	w20, w3
  4103f8:	mov	x19, x0
  4103fc:	movk	x23, #0xc000, lsl #32
  410400:	bl	402800 <memset@plt>
  410404:	ldrb	w8, [x22]
  410408:	adrp	x9, 410000 <wcrtomb@plt+0xd3a0>
  41040c:	adrp	x10, 410000 <wcrtomb@plt+0xd3a0>
  410410:	add	x9, x9, #0x62c
  410414:	add	x10, x10, #0x638
  410418:	cmp	w8, #0x0
  41041c:	csel	x8, x10, x9, eq  // eq = none
  410420:	add	x0, x19, #0x418
  410424:	mov	w2, #0x504                 	// #1284
  410428:	mov	x1, x22
  41042c:	str	x8, [x19, #1040]
  410430:	bl	402580 <memcpy@plt>
  410434:	ldrb	w8, [x19, #1048]
  410438:	mov	x9, #0xffffffffffffffff    	// #-1
  41043c:	add	x10, x19, #0x1c0
  410440:	mov	w22, #0x1                   	// #1
  410444:	eor	w8, w8, #0x1
  410448:	strb	w8, [x19, #192]
  41044c:	ubfx	w8, w21, #22, #1
  410450:	str	x9, [x19, #24]
  410454:	strb	w22, [x19, #456]
  410458:	strb	w8, [x10, #9]
  41045c:	and	w8, w20, #0x1
  410460:	tst	w20, #0x2
  410464:	strb	w8, [x10, #10]
  410468:	mov	w8, #0xa                   	// #10
  41046c:	csel	w24, w8, wzr, eq  // eq = none
  410470:	strb	w24, [x10, #11]
  410474:	str	x21, [x19, #448]
  410478:	tbnz	w20, #0, 410560 <wcrtomb@plt+0xd900>
  41047c:	add	x8, x19, x24
  410480:	mov	x20, xzr
  410484:	lsl	x21, x22, x24
  410488:	add	x25, x19, #0x51c
  41048c:	add	x26, x8, #0x1cc
  410490:	mov	w27, #0x4                   	// #4
  410494:	b	4104bc <wcrtomb@plt+0xd85c>
  410498:	cmp	x20, #0x40
  41049c:	cset	w8, cc  // cc = lo, ul, last
  4104a0:	lsr	x9, x23, x20
  4104a4:	and	w8, w9, w8
  4104a8:	add	x9, x19, x20
  4104ac:	add	x20, x20, #0x1
  4104b0:	cmp	x20, #0x100
  4104b4:	strb	w8, [x9, #716]
  4104b8:	b.eq	410610 <wcrtomb@plt+0xd9b0>  // b.none
  4104bc:	cmp	x24, x20
  4104c0:	b.ne	4104e0 <wcrtomb@plt+0xd880>  // b.any
  4104c4:	strb	w27, [x26]
  4104c8:	ldr	x8, [x19, #1008]
  4104cc:	orr	x8, x8, x21
  4104d0:	str	x8, [x19, #1008]
  4104d4:	ldrb	w8, [x19, #1050]
  4104d8:	cbnz	w8, 41053c <wcrtomb@plt+0xd8dc>
  4104dc:	b	410498 <wcrtomb@plt+0xd838>
  4104e0:	ldr	w8, [x25, x20, lsl #2]
  4104e4:	cmn	w8, #0x1
  4104e8:	b.eq	41054c <wcrtomb@plt+0xd8ec>  // b.none
  4104ec:	bl	4029e0 <__ctype_b_loc@plt>
  4104f0:	ldr	x8, [x0]
  4104f4:	cmp	x20, #0x5f
  4104f8:	cset	w9, eq  // eq = none
  4104fc:	add	x10, x19, x20
  410500:	ldrh	w8, [x8, x20, lsl #1]
  410504:	and	w8, w8, #0x8
  410508:	orr	w8, w9, w8, lsr #3
  41050c:	cmp	w8, #0x0
  410510:	cinc	w9, w22, ne  // ne = any
  410514:	strb	w9, [x10, #460]
  410518:	cbz	w8, 410534 <wcrtomb@plt+0xd8d4>
  41051c:	ubfx	x8, x20, #6, #26
  410520:	add	x8, x19, x8, lsl #3
  410524:	ldr	x9, [x8, #976]
  410528:	lsl	x10, x22, x20
  41052c:	orr	x9, x9, x10
  410530:	str	x9, [x8, #976]
  410534:	ldrb	w8, [x19, #1050]
  410538:	cbz	w8, 410498 <wcrtomb@plt+0xd838>
  41053c:	and	x8, x20, #0xc0
  410540:	cmp	x8, #0x80
  410544:	cset	w8, ne  // ne = any
  410548:	b	4104a8 <wcrtomb@plt+0xd848>
  41054c:	add	x8, x19, x20
  410550:	strb	w22, [x8, #460]
  410554:	ldrb	w8, [x19, #1050]
  410558:	cbnz	w8, 41053c <wcrtomb@plt+0xd8dc>
  41055c:	b	410498 <wcrtomb@plt+0xd838>
  410560:	mov	x20, xzr
  410564:	add	x21, x19, #0x51c
  410568:	b	410590 <wcrtomb@plt+0xd930>
  41056c:	cmp	x20, #0x40
  410570:	cset	w8, cc  // cc = lo, ul, last
  410574:	lsr	x9, x23, x20
  410578:	and	w8, w9, w8
  41057c:	add	x9, x19, x20
  410580:	add	x20, x20, #0x1
  410584:	cmp	x20, #0x100
  410588:	strb	w8, [x9, #716]
  41058c:	b.eq	410610 <wcrtomb@plt+0xd9b0>  // b.none
  410590:	ldr	w8, [x21, x20, lsl #2]
  410594:	cmn	w8, #0x1
  410598:	b.eq	4105f0 <wcrtomb@plt+0xd990>  // b.none
  41059c:	bl	4029e0 <__ctype_b_loc@plt>
  4105a0:	ldr	x8, [x0]
  4105a4:	cmp	x20, #0x5f
  4105a8:	cset	w9, eq  // eq = none
  4105ac:	add	x10, x19, x20
  4105b0:	ldrh	w8, [x8, x20, lsl #1]
  4105b4:	and	w8, w8, #0x8
  4105b8:	orr	w8, w9, w8, lsr #3
  4105bc:	cmp	w8, #0x0
  4105c0:	cinc	w9, w22, ne  // ne = any
  4105c4:	strb	w9, [x10, #460]
  4105c8:	cbz	w8, 4105e4 <wcrtomb@plt+0xd984>
  4105cc:	ubfx	x8, x20, #6, #26
  4105d0:	add	x8, x19, x8, lsl #3
  4105d4:	ldr	x9, [x8, #976]
  4105d8:	lsl	x10, x22, x20
  4105dc:	orr	x9, x9, x10
  4105e0:	str	x9, [x8, #976]
  4105e4:	ldrb	w8, [x19, #1050]
  4105e8:	cbnz	w8, 410600 <wcrtomb@plt+0xd9a0>
  4105ec:	b	41056c <wcrtomb@plt+0xd90c>
  4105f0:	add	x8, x19, x20
  4105f4:	strb	w22, [x8, #460]
  4105f8:	ldrb	w8, [x19, #1050]
  4105fc:	cbz	w8, 41056c <wcrtomb@plt+0xd90c>
  410600:	and	x8, x20, #0xc0
  410604:	cmp	x8, #0x80
  410608:	cset	w8, ne  // ne = any
  41060c:	b	41057c <wcrtomb@plt+0xd91c>
  410610:	ldp	x20, x19, [sp, #80]
  410614:	ldp	x22, x21, [sp, #64]
  410618:	ldp	x24, x23, [sp, #48]
  41061c:	ldp	x26, x25, [sp, #32]
  410620:	ldr	x27, [sp, #16]
  410624:	ldp	x29, x30, [sp], #96
  410628:	ret
  41062c:	and	w3, w3, #0x1
  410630:	mov	w5, #0x1                   	// #1
  410634:	b	412b9c <wcrtomb@plt+0xff3c>
  410638:	and	w3, w3, #0x1
  41063c:	mov	w5, wzr
  410640:	b	412b9c <wcrtomb@plt+0xff3c>
  410644:	stp	x29, x30, [sp, #-32]!
  410648:	movi	v0.2d, #0x0
  41064c:	mov	x8, #0xffffffffffffffff    	// #-1
  410650:	stp	x20, x19, [sp, #16]
  410654:	stp	q0, q0, [x0, #416]
  410658:	stp	q0, q0, [x0, #384]
  41065c:	stp	q0, q0, [x0, #352]
  410660:	stp	q0, q0, [x0, #320]
  410664:	stp	q0, q0, [x0, #288]
  410668:	stp	q0, q0, [x0, #256]
  41066c:	stp	q0, q0, [x0, #224]
  410670:	stp	q0, q0, [x0, #192]
  410674:	stp	q0, q0, [x0, #160]
  410678:	stp	q0, q0, [x0, #128]
  41067c:	stp	q0, q0, [x0, #96]
  410680:	stp	q0, q0, [x0, #64]
  410684:	stp	q0, q0, [x0, #32]
  410688:	stp	q0, q0, [x0]
  41068c:	str	x8, [x0, #24]
  410690:	ldrb	w8, [x1, #192]
  410694:	mov	x19, x1
  410698:	mov	x20, x0
  41069c:	add	x0, x0, #0x1c0
  4106a0:	add	x1, x1, #0x1c0
  4106a4:	mov	w2, #0x250                 	// #592
  4106a8:	mov	x29, sp
  4106ac:	strb	w8, [x20, #192]
  4106b0:	bl	402580 <memcpy@plt>
  4106b4:	ldr	x8, [x19, #1040]
  4106b8:	add	x0, x20, #0x418
  4106bc:	add	x1, x19, #0x418
  4106c0:	mov	w2, #0x504                 	// #1284
  4106c4:	str	x8, [x20, #1040]
  4106c8:	ldp	x20, x19, [sp, #16]
  4106cc:	ldp	x29, x30, [sp], #32
  4106d0:	b	402580 <memcpy@plt>
  4106d4:	sub	sp, sp, #0x50
  4106d8:	stp	x20, x19, [sp, #64]
  4106dc:	mov	x19, x0
  4106e0:	add	x0, sp, #0x10
  4106e4:	add	x2, sp, #0x8
  4106e8:	stp	x29, x30, [sp, #32]
  4106ec:	stp	x22, x21, [sp, #48]
  4106f0:	add	x29, sp, #0x20
  4106f4:	str	xzr, [sp, #8]
  4106f8:	bl	402c60 <wcrtomb@plt>
  4106fc:	cmn	x0, #0x1
  410700:	b.eq	410778 <wcrtomb@plt+0xdb18>  // b.none
  410704:	ldrb	w1, [sp, #16]
  410708:	mov	x20, x0
  41070c:	cmp	w20, #0x1
  410710:	b.eq	410780 <wcrtomb@plt+0xdb20>  // b.none
  410714:	mov	w2, #0x1                   	// #1
  410718:	mov	x0, x19
  41071c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  410720:	cmp	w20, #0x2
  410724:	b.lt	41078c <wcrtomb@plt+0xdb2c>  // b.tstop
  410728:	sub	w8, w20, #0x1
  41072c:	and	x9, x20, #0xffffffff
  410730:	add	x10, sp, #0x10
  410734:	sub	x20, x8, #0x1
  410738:	orr	x21, x10, #0x1
  41073c:	sub	x22, x9, #0x1
  410740:	ldrb	w1, [x21], #1
  410744:	cmp	x20, #0x0
  410748:	cset	w8, eq  // eq = none
  41074c:	lsl	w2, w8, #1
  410750:	mov	x0, x19
  410754:	bl	4107a0 <wcrtomb@plt+0xdb40>
  410758:	mov	w1, #0x105                 	// #261
  41075c:	mov	w2, #0x3                   	// #3
  410760:	mov	x0, x19
  410764:	bl	4107a0 <wcrtomb@plt+0xdb40>
  410768:	subs	x22, x22, #0x1
  41076c:	sub	x20, x20, #0x1
  410770:	b.ne	410740 <wcrtomb@plt+0xdae0>  // b.any
  410774:	b	41078c <wcrtomb@plt+0xdb2c>
  410778:	mov	x1, xzr
  41077c:	strb	wzr, [sp, #16]
  410780:	mov	w2, #0x3                   	// #3
  410784:	mov	x0, x19
  410788:	bl	4107a0 <wcrtomb@plt+0xdb40>
  41078c:	ldp	x20, x19, [sp, #64]
  410790:	ldp	x22, x21, [sp, #48]
  410794:	ldp	x29, x30, [sp, #32]
  410798:	add	sp, sp, #0x50
  41079c:	ret
  4107a0:	stp	x29, x30, [sp, #-48]!
  4107a4:	stp	x22, x21, [sp, #16]
  4107a8:	stp	x20, x19, [sp, #32]
  4107ac:	ldp	x9, x8, [x0, #152]
  4107b0:	mov	w21, w2
  4107b4:	mov	x19, x0
  4107b8:	mov	x20, x1
  4107bc:	cmp	x8, x9
  4107c0:	mov	x29, sp
  4107c4:	b.ne	4108ac <wcrtomb@plt+0xdc4c>  // b.any
  4107c8:	ldr	x0, [x19, #144]
  4107cc:	adds	x9, x8, x8, asr #1
  4107d0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4107d4:	csel	x22, x10, x9, vs
  4107d8:	tbnz	x22, #63, 410808 <wcrtomb@plt+0xdba8>
  4107dc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  4107e0:	cmp	x22, x9
  4107e4:	b.le	410820 <wcrtomb@plt+0xdbc0>
  4107e8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4107ec:	lsr	x22, x9, #3
  4107f0:	and	x1, x9, #0x7ffffffffffffff8
  4107f4:	cbnz	x0, 410844 <wcrtomb@plt+0xdbe4>
  4107f8:	str	xzr, [x19, #160]
  4107fc:	cmp	x22, x8
  410800:	b.gt	410884 <wcrtomb@plt+0xdc24>
  410804:	b	41084c <wcrtomb@plt+0xdbec>
  410808:	cmn	x22, #0x1
  41080c:	b.eq	41082c <wcrtomb@plt+0xdbcc>  // b.none
  410810:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  410814:	sdiv	x9, x9, x22
  410818:	cmp	x9, #0x8
  41081c:	b.lt	4107e8 <wcrtomb@plt+0xdb88>  // b.tstop
  410820:	lsl	x1, x22, #3
  410824:	cmp	x1, #0x7f
  410828:	b.gt	410840 <wcrtomb@plt+0xdbe0>
  41082c:	mov	w9, #0x80                  	// #128
  410830:	lsr	x22, x9, #3
  410834:	and	x1, x9, #0x7ffffffffffffff8
  410838:	cbnz	x0, 410844 <wcrtomb@plt+0xdbe4>
  41083c:	b	4107f8 <wcrtomb@plt+0xdb98>
  410840:	cbz	x0, 4107f8 <wcrtomb@plt+0xdb98>
  410844:	cmp	x22, x8
  410848:	b.gt	410884 <wcrtomb@plt+0xdc24>
  41084c:	adds	x22, x8, #0x1
  410850:	b.vs	410940 <wcrtomb@plt+0xdce0>
  410854:	tbnz	x22, #63, 410868 <wcrtomb@plt+0xdc08>
  410858:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  41085c:	cmp	x22, x8
  410860:	b.le	410880 <wcrtomb@plt+0xdc20>
  410864:	b	410940 <wcrtomb@plt+0xdce0>
  410868:	cmn	x22, #0x1
  41086c:	b.eq	410880 <wcrtomb@plt+0xdc20>  // b.none
  410870:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410874:	sdiv	x8, x8, x22
  410878:	cmp	x8, #0x8
  41087c:	b.lt	410940 <wcrtomb@plt+0xdce0>  // b.tstop
  410880:	lsl	x1, x22, #3
  410884:	bl	416e54 <wcrtomb@plt+0x141f4>
  410888:	ldrb	w8, [x19, #1048]
  41088c:	str	x22, [x19, #160]
  410890:	str	x0, [x19, #144]
  410894:	cbz	w8, 4108ac <wcrtomb@plt+0xdc4c>
  410898:	tbnz	x22, #63, 410940 <wcrtomb@plt+0xdce0>
  41089c:	ldr	x0, [x19, #280]
  4108a0:	mov	x1, x22
  4108a4:	bl	416e54 <wcrtomb@plt+0x141f4>
  4108a8:	str	x0, [x19, #280]
  4108ac:	ldrb	w8, [x19, #1048]
  4108b0:	cbz	w8, 4108c0 <wcrtomb@plt+0xdc60>
  4108b4:	ldr	x8, [x19, #280]
  4108b8:	ldr	x9, [x19, #152]
  4108bc:	strb	w21, [x8, x9]
  4108c0:	ldp	x10, x9, [x19, #144]
  4108c4:	sub	x8, x20, #0x100
  4108c8:	cmp	x8, #0x12
  4108cc:	add	x11, x9, #0x1
  4108d0:	str	x11, [x19, #152]
  4108d4:	str	x20, [x10, x9, lsl #3]
  4108d8:	b.hi	410904 <wcrtomb@plt+0xdca4>  // b.pmore
  4108dc:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4108e0:	add	x9, x9, #0xc4a
  4108e4:	adr	x10, 4108f4 <wcrtomb@plt+0xdc94>
  4108e8:	ldrb	w11, [x9, x8]
  4108ec:	add	x10, x10, x11, lsl #2
  4108f0:	br	x10
  4108f4:	ldr	x8, [x19, #136]
  4108f8:	sub	x8, x8, #0x1
  4108fc:	b	410918 <wcrtomb@plt+0xdcb8>
  410900:	strb	wzr, [x19, #192]
  410904:	ldr	x8, [x19, #176]
  410908:	add	x8, x8, #0x1
  41090c:	str	x8, [x19, #176]
  410910:	ldr	x8, [x19, #136]
  410914:	add	x8, x8, #0x1
  410918:	str	x8, [x19, #136]
  41091c:	ldr	x8, [x19, #136]
  410920:	ldr	x9, [x19, #168]
  410924:	cmp	x8, x9
  410928:	b.le	410930 <wcrtomb@plt+0xdcd0>
  41092c:	str	x8, [x19, #168]
  410930:	ldp	x20, x19, [sp, #32]
  410934:	ldp	x22, x21, [sp, #16]
  410938:	ldp	x29, x30, [sp], #48
  41093c:	ret
  410940:	bl	4170f0 <wcrtomb@plt+0x14490>
  410944:	sub	sp, sp, #0x150
  410948:	stp	x29, x30, [sp, #240]
  41094c:	add	x29, sp, #0xf0
  410950:	sub	x8, x29, #0x40
  410954:	movi	v0.2d, #0x0
  410958:	stp	x28, x27, [sp, #256]
  41095c:	stp	x26, x25, [sp, #272]
  410960:	stp	x24, x23, [sp, #288]
  410964:	stp	x22, x21, [sp, #304]
  410968:	stp	x20, x19, [sp, #320]
  41096c:	str	xzr, [x0, #104]
  410970:	stp	q0, q0, [x8]
  410974:	mov	x19, x0
  410978:	ldr	x2, [x19, #40]!
  41097c:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  410980:	mov	x24, x0
  410984:	ldr	x1, [x24, #32]!
  410988:	mov	x23, x0
  41098c:	add	x22, x0, #0x48
  410990:	ldrb	w8, [x1]
  410994:	add	x8, x0, x8, lsl #2
  410998:	ldr	w27, [x8, #1308]
  41099c:	cmn	w27, #0x1
  4109a0:	b.ne	4109e4 <wcrtomb@plt+0xdd84>  // b.any
  4109a4:	add	x20, x23, #0x110
  4109a8:	add	x0, sp, #0x2c
  4109ac:	mov	x3, x20
  4109b0:	bl	417134 <wcrtomb@plt+0x144d4>
  4109b4:	sub	x8, x0, #0x1
  4109b8:	cmn	x8, #0x3
  4109bc:	b.cs	4109e0 <wcrtomb@plt+0xdd80>  // b.hs, b.nlast
  4109c0:	ldr	w27, [sp, #44]
  4109c4:	cmp	w0, #0x1
  4109c8:	str	w27, [x22]
  4109cc:	b.eq	4109e8 <wcrtomb@plt+0xdd88>  // b.none
  4109d0:	ldr	x9, [x24]
  4109d4:	sxtw	x8, w0
  4109d8:	mov	w21, #0xffffffff            	// #-1
  4109dc:	b	4109f4 <wcrtomb@plt+0xdd94>
  4109e0:	str	xzr, [x20]
  4109e4:	str	w27, [x22]
  4109e8:	ldr	x9, [x24]
  4109ec:	mov	w8, #0x1                   	// #1
  4109f0:	ldrb	w21, [x9]
  4109f4:	add	x1, x9, x8
  4109f8:	str	x1, [x24]
  4109fc:	ldr	x9, [x19]
  410a00:	cmp	w21, #0x5e
  410a04:	sub	x2, x9, x8
  410a08:	cset	w8, eq  // eq = none
  410a0c:	str	x2, [x19]
  410a10:	stp	w8, w21, [sp, #8]
  410a14:	b.ne	410a6c <wcrtomb@plt+0xde0c>  // b.any
  410a18:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  410a1c:	ldrb	w8, [x1]
  410a20:	add	x8, x23, x8, lsl #2
  410a24:	ldr	w27, [x8, #1308]
  410a28:	cmn	w27, #0x1
  410a2c:	b.ne	410a7c <wcrtomb@plt+0xde1c>  // b.any
  410a30:	add	x20, x23, #0x110
  410a34:	add	x0, sp, #0x2c
  410a38:	mov	x3, x20
  410a3c:	bl	417134 <wcrtomb@plt+0x144d4>
  410a40:	sub	x8, x0, #0x1
  410a44:	cmn	x8, #0x3
  410a48:	b.cs	410a78 <wcrtomb@plt+0xde18>  // b.hs, b.nlast
  410a4c:	ldr	w27, [sp, #44]
  410a50:	cmp	w0, #0x1
  410a54:	str	w27, [x22]
  410a58:	b.eq	410a80 <wcrtomb@plt+0xde20>  // b.none
  410a5c:	ldr	x8, [x24]
  410a60:	sxtw	x9, w0
  410a64:	mov	w25, #0xffffffff            	// #-1
  410a68:	b	410a8c <wcrtomb@plt+0xde2c>
  410a6c:	mov	w25, w21
  410a70:	mov	w8, #0x1                   	// #1
  410a74:	b	410aac <wcrtomb@plt+0xde4c>
  410a78:	str	xzr, [x20]
  410a7c:	str	w27, [x22]
  410a80:	ldr	x8, [x24]
  410a84:	mov	w9, #0x1                   	// #1
  410a88:	ldrb	w25, [x8]
  410a8c:	ldr	x10, [x23, #40]
  410a90:	ldrb	w11, [x23, #1049]
  410a94:	add	x8, x8, x9
  410a98:	str	x8, [x23, #32]
  410a9c:	sub	x8, x10, x9
  410aa0:	cmp	w11, #0x0
  410aa4:	str	x8, [x23, #40]
  410aa8:	cset	w8, ne  // ne = any
  410aac:	str	w8, [sp, #24]
  410ab0:	add	x8, x23, #0x110
  410ab4:	cmp	w25, #0x3a
  410ab8:	str	x8, [sp, #32]
  410abc:	add	x8, sp, #0x2c
  410ac0:	sub	x26, x29, #0x40
  410ac4:	cset	w20, eq  // eq = none
  410ac8:	add	x8, x8, #0x4
  410acc:	str	x8, [sp, #16]
  410ad0:	b	410afc <wcrtomb@plt+0xde9c>
  410ad4:	lsr	w8, w25, #6
  410ad8:	lsl	x8, x8, #3
  410adc:	ldr	x9, [x26, x8]
  410ae0:	lsl	x10, x11, x25
  410ae4:	orr	x9, x9, x10
  410ae8:	str	x9, [x26, x8]
  410aec:	cmp	w28, #0x5d
  410af0:	mov	w25, w28
  410af4:	mov	w27, w21
  410af8:	b.eq	4116f8 <wcrtomb@plt+0xea98>  // b.none
  410afc:	cmp	w25, #0x5c
  410b00:	and	w20, w20, #0xfffffffd
  410b04:	b.eq	410b8c <wcrtomb@plt+0xdf2c>  // b.none
  410b08:	cmp	w25, #0x5b
  410b0c:	b.ne	410b94 <wcrtomb@plt+0xdf34>  // b.any
  410b10:	ldr	x2, [x19]
  410b14:	str	w20, [sp, #40]
  410b18:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  410b1c:	ldr	x1, [x23, #32]
  410b20:	ldrb	w8, [x1]
  410b24:	add	x8, x23, x8, lsl #2
  410b28:	ldr	w21, [x8, #1308]
  410b2c:	cmn	w21, #0x1
  410b30:	b.ne	410bfc <wcrtomb@plt+0xdf9c>  // b.any
  410b34:	ldr	x20, [sp, #32]
  410b38:	add	x0, sp, #0x2c
  410b3c:	mov	x3, x20
  410b40:	bl	417134 <wcrtomb@plt+0x144d4>
  410b44:	sub	x8, x0, #0x1
  410b48:	cmn	x8, #0x3
  410b4c:	b.cs	410bf8 <wcrtomb@plt+0xdf98>  // b.hs, b.nlast
  410b50:	ldr	w21, [sp, #44]
  410b54:	cmp	w0, #0x1
  410b58:	str	w21, [x22]
  410b5c:	b.eq	410c00 <wcrtomb@plt+0xdfa0>  // b.none
  410b60:	ldr	x8, [x24]
  410b64:	sxtw	x9, w0
  410b68:	mov	w25, #0x5b                  	// #91
  410b6c:	mov	w28, #0xffffffff            	// #-1
  410b70:	add	x8, x8, x9
  410b74:	str	x8, [x24]
  410b78:	ldr	x10, [x19]
  410b7c:	mov	w8, #0x4                   	// #4
  410b80:	sub	x9, x10, x9
  410b84:	str	x9, [x19]
  410b88:	b	410c44 <wcrtomb@plt+0xdfe4>
  410b8c:	ldrb	w8, [x23, #448]
  410b90:	tbnz	w8, #0, 410ba0 <wcrtomb@plt+0xdf40>
  410b94:	ldr	x2, [x19]
  410b98:	cbnz	x2, 410fd0 <wcrtomb@plt+0xe370>
  410b9c:	b	411aac <wcrtomb@plt+0xee4c>
  410ba0:	ldr	x2, [x19]
  410ba4:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  410ba8:	ldr	x1, [x23, #32]
  410bac:	ldrb	w8, [x1]
  410bb0:	add	x8, x23, x8, lsl #2
  410bb4:	ldr	w27, [x8, #1308]
  410bb8:	cmn	w27, #0x1
  410bbc:	b.ne	410fa8 <wcrtomb@plt+0xe348>  // b.any
  410bc0:	mov	w21, w20
  410bc4:	ldr	x20, [sp, #32]
  410bc8:	add	x0, sp, #0x2c
  410bcc:	mov	x3, x20
  410bd0:	bl	417134 <wcrtomb@plt+0x144d4>
  410bd4:	sub	x8, x0, #0x1
  410bd8:	cmn	x8, #0x3
  410bdc:	b.cs	410fa0 <wcrtomb@plt+0xe340>  // b.hs, b.nlast
  410be0:	ldr	w27, [sp, #44]
  410be4:	cmp	w0, #0x1
  410be8:	str	w27, [x22]
  410bec:	b.ne	4111ac <wcrtomb@plt+0xe54c>  // b.any
  410bf0:	mov	w20, w21
  410bf4:	b	410fac <wcrtomb@plt+0xe34c>
  410bf8:	str	xzr, [x20]
  410bfc:	str	w21, [x22]
  410c00:	ldr	x1, [x24]
  410c04:	mov	w20, wzr
  410c08:	ldrb	w28, [x1], #1
  410c0c:	str	x1, [x24]
  410c10:	ldr	x8, [x19]
  410c14:	cmp	w28, #0x2e
  410c18:	sub	x2, x8, #0x1
  410c1c:	str	x2, [x19]
  410c20:	b.eq	410d04 <wcrtomb@plt+0xe0a4>  // b.none
  410c24:	cmp	w28, #0x3d
  410c28:	b.eq	410d04 <wcrtomb@plt+0xe0a4>  // b.none
  410c2c:	cmp	w28, #0x3a
  410c30:	b.ne	410ce8 <wcrtomb@plt+0xe088>  // b.any
  410c34:	ldrb	w8, [x23, #448]
  410c38:	tbnz	w8, #2, 410d00 <wcrtomb@plt+0xe0a0>
  410c3c:	mov	w8, #0x4                   	// #4
  410c40:	mov	w25, #0x5b                  	// #91
  410c44:	ldr	w20, [sp, #40]
  410c48:	mov	w11, #0x1                   	// #1
  410c4c:	ldrb	w9, [x23, #1048]
  410c50:	orr	w20, w20, w8
  410c54:	cbnz	w9, 4112d0 <wcrtomb@plt+0xe670>
  410c58:	ldrb	w8, [x23, #457]
  410c5c:	cbz	w8, 410ad4 <wcrtomb@plt+0xde74>
  410c60:	bl	4029e0 <__ctype_b_loc@plt>
  410c64:	ldr	x8, [x0]
  410c68:	mov	w11, #0x1                   	// #1
  410c6c:	ldrh	w8, [x8, w25, sxtw #1]
  410c70:	tbz	w8, #10, 410ad4 <wcrtomb@plt+0xde74>
  410c74:	add	w8, w25, #0x80
  410c78:	cmp	w8, #0x17f
  410c7c:	b.hi	410ca0 <wcrtomb@plt+0xe040>  // b.pmore
  410c80:	mov	w27, w21
  410c84:	mov	w21, w20
  410c88:	sxtw	x20, w25
  410c8c:	bl	402880 <__ctype_toupper_loc@plt>
  410c90:	ldr	x8, [x0]
  410c94:	ldr	w25, [x8, x20, lsl #2]
  410c98:	mov	w20, w21
  410c9c:	mov	w21, w27
  410ca0:	bl	402880 <__ctype_toupper_loc@plt>
  410ca4:	ldr	x8, [x0]
  410ca8:	mov	x9, xzr
  410cac:	mov	w13, #0x1                   	// #1
  410cb0:	b	410cc0 <wcrtomb@plt+0xe060>
  410cb4:	add	x9, x9, #0x1
  410cb8:	cmp	x9, #0x100
  410cbc:	b.eq	410aec <wcrtomb@plt+0xde8c>  // b.none
  410cc0:	ldr	w10, [x8, x9, lsl #2]
  410cc4:	cmp	w10, w25
  410cc8:	b.ne	410cb4 <wcrtomb@plt+0xe054>  // b.any
  410ccc:	ubfx	x10, x9, #6, #26
  410cd0:	lsl	x10, x10, #3
  410cd4:	ldr	x11, [x26, x10]
  410cd8:	lsl	x12, x13, x9
  410cdc:	orr	x11, x11, x12
  410ce0:	str	x11, [x26, x10]
  410ce4:	b	410cb4 <wcrtomb@plt+0xe054>
  410ce8:	ldr	w20, [sp, #40]
  410cec:	mov	w25, #0x5b                  	// #91
  410cf0:	cmp	w28, #0x2d
  410cf4:	b.eq	411064 <wcrtomb@plt+0xe404>  // b.none
  410cf8:	mov	w11, #0x1                   	// #1
  410cfc:	b	4112b4 <wcrtomb@plt+0xe654>
  410d00:	mov	w20, #0x1                   	// #1
  410d04:	ldr	x27, [sp, #32]
  410d08:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  410d0c:	mov	w21, wzr
  410d10:	b	410d20 <wcrtomb@plt+0xe0c0>
  410d14:	cmp	w21, #0x1f
  410d18:	b.ls	410db0 <wcrtomb@plt+0xe150>  // b.plast
  410d1c:	strb	wzr, [sp, #44]
  410d20:	ldrb	w8, [x1]
  410d24:	add	x8, x23, x8, lsl #2
  410d28:	ldr	w25, [x8, #1308]
  410d2c:	cmn	w25, #0x1
  410d30:	b.ne	410d70 <wcrtomb@plt+0xe110>  // b.any
  410d34:	sub	x0, x29, #0x14
  410d38:	mov	x3, x27
  410d3c:	bl	417134 <wcrtomb@plt+0x144d4>
  410d40:	sub	x8, x0, #0x1
  410d44:	cmn	x8, #0x3
  410d48:	b.cs	410d6c <wcrtomb@plt+0xe10c>  // b.hs, b.nlast
  410d4c:	ldur	w8, [x29, #-20]
  410d50:	cmp	w0, #0x1
  410d54:	str	w8, [x22]
  410d58:	b.eq	410d74 <wcrtomb@plt+0xe114>  // b.none
  410d5c:	ldr	x9, [x24]
  410d60:	sxtw	x10, w0
  410d64:	mov	w8, #0xffffffff            	// #-1
  410d68:	b	410d80 <wcrtomb@plt+0xe120>
  410d6c:	str	xzr, [x27]
  410d70:	str	w25, [x22]
  410d74:	ldr	x9, [x24]
  410d78:	mov	w10, #0x1                   	// #1
  410d7c:	ldrb	w8, [x9]
  410d80:	add	x1, x9, x10
  410d84:	str	x1, [x24]
  410d88:	ldr	x9, [x19]
  410d8c:	subs	x2, x9, x10
  410d90:	str	x2, [x19]
  410d94:	b.eq	411aac <wcrtomb@plt+0xee4c>  // b.none
  410d98:	cmp	w8, w28
  410d9c:	b.ne	410d14 <wcrtomb@plt+0xe0b4>  // b.any
  410da0:	ldrb	w9, [x1]
  410da4:	cmp	w9, #0x5d
  410da8:	b.ne	410d14 <wcrtomb@plt+0xe0b4>  // b.any
  410dac:	b	410dc4 <wcrtomb@plt+0xe164>
  410db0:	add	w9, w21, #0x1
  410db4:	add	x10, sp, #0x2c
  410db8:	strb	w8, [x10, w21, uxtw]
  410dbc:	mov	w21, w9
  410dc0:	b	410d20 <wcrtomb@plt+0xe0c0>
  410dc4:	add	x8, sp, #0x2c
  410dc8:	strb	wzr, [x8, w21, uxtw]
  410dcc:	ldr	w21, [x23, #1680]
  410dd0:	cmn	w21, #0x1
  410dd4:	b.ne	410e0c <wcrtomb@plt+0xe1ac>  // b.any
  410dd8:	sub	x0, x29, #0x14
  410ddc:	mov	x3, x27
  410de0:	bl	417134 <wcrtomb@plt+0x144d4>
  410de4:	sub	x8, x0, #0x1
  410de8:	cmn	x8, #0x3
  410dec:	b.cs	410e08 <wcrtomb@plt+0xe1a8>  // b.hs, b.nlast
  410df0:	ldur	w8, [x29, #-20]
  410df4:	cmp	w0, #0x1
  410df8:	str	w8, [x22]
  410dfc:	b.eq	410e10 <wcrtomb@plt+0xe1b0>  // b.none
  410e00:	sxtw	x8, w0
  410e04:	b	410e14 <wcrtomb@plt+0xe1b4>
  410e08:	str	xzr, [x27]
  410e0c:	str	w21, [x22]
  410e10:	mov	w8, #0x1                   	// #1
  410e14:	ldr	x9, [x24]
  410e18:	add	x9, x9, x8
  410e1c:	str	x9, [x24]
  410e20:	ldr	x9, [x19]
  410e24:	sub	x27, x9, x8
  410e28:	str	x27, [x19]
  410e2c:	cbz	w20, 41162c <wcrtomb@plt+0xe9cc>
  410e30:	ldrb	w8, [x23, #457]
  410e34:	mov	w11, #0x72                  	// #114
  410e38:	cbz	w8, 410e7c <wcrtomb@plt+0xe21c>
  410e3c:	ldr	w8, [sp, #44]
  410e40:	ldrh	w9, [sp, #48]
  410e44:	mov	w10, #0x7075                	// #28789
  410e48:	movk	w10, #0x6570, lsl #16
  410e4c:	eor	w8, w8, w10
  410e50:	eor	w9, w9, w11
  410e54:	orr	w8, w8, w9
  410e58:	cbz	w8, 410f7c <wcrtomb@plt+0xe31c>
  410e5c:	ldr	w8, [sp, #44]
  410e60:	ldrh	w9, [sp, #48]
  410e64:	mov	w10, #0x6f6c                	// #28524
  410e68:	movk	w10, #0x6577, lsl #16
  410e6c:	eor	w8, w8, w10
  410e70:	eor	w9, w9, w11
  410e74:	orr	w8, w8, w9
  410e78:	cbz	w8, 410f7c <wcrtomb@plt+0xe31c>
  410e7c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410e80:	add	x21, sp, #0x2c
  410e84:	add	x1, x1, #0xfea
  410e88:	mov	x0, x21
  410e8c:	bl	4029d0 <strcmp@plt>
  410e90:	cbz	w0, 410f94 <wcrtomb@plt+0xe334>
  410e94:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410e98:	mov	x0, x21
  410e9c:	add	x1, x1, #0xfde
  410ea0:	bl	4029d0 <strcmp@plt>
  410ea4:	cbz	w0, 4111a0 <wcrtomb@plt+0xe540>
  410ea8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410eac:	mov	x0, x21
  410eb0:	add	x1, x1, #0xfe4
  410eb4:	bl	4029d0 <strcmp@plt>
  410eb8:	cbz	w0, 4111c0 <wcrtomb@plt+0xe560>
  410ebc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410ec0:	mov	x0, x21
  410ec4:	add	x1, x1, #0x4b
  410ec8:	bl	4029d0 <strcmp@plt>
  410ecc:	cbz	w0, 4111cc <wcrtomb@plt+0xe56c>
  410ed0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410ed4:	mov	x0, x21
  410ed8:	add	x1, x1, #0x4a
  410edc:	bl	4029d0 <strcmp@plt>
  410ee0:	cbz	w0, 411588 <wcrtomb@plt+0xe928>
  410ee4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410ee8:	mov	x0, x21
  410eec:	add	x1, x1, #0x51
  410ef0:	bl	4029d0 <strcmp@plt>
  410ef4:	cbz	w0, 411594 <wcrtomb@plt+0xe934>
  410ef8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410efc:	mov	x0, x21
  410f00:	add	x1, x1, #0x57
  410f04:	bl	4029d0 <strcmp@plt>
  410f08:	cbz	w0, 4115a0 <wcrtomb@plt+0xe940>
  410f0c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410f10:	mov	x0, x21
  410f14:	add	x1, x1, #0x5d
  410f18:	bl	4029d0 <strcmp@plt>
  410f1c:	cbz	w0, 4115ac <wcrtomb@plt+0xe94c>
  410f20:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410f24:	mov	x0, x21
  410f28:	add	x1, x1, #0x63
  410f2c:	bl	4029d0 <strcmp@plt>
  410f30:	cbz	w0, 4115b8 <wcrtomb@plt+0xe958>
  410f34:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410f38:	mov	x0, x21
  410f3c:	add	x1, x1, #0x69
  410f40:	bl	4029d0 <strcmp@plt>
  410f44:	cbz	w0, 4115c4 <wcrtomb@plt+0xe964>
  410f48:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410f4c:	mov	x0, x21
  410f50:	add	x1, x1, #0x6f
  410f54:	bl	4029d0 <strcmp@plt>
  410f58:	cbz	w0, 4115d0 <wcrtomb@plt+0xe970>
  410f5c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  410f60:	mov	x0, x21
  410f64:	add	x1, x1, #0x75
  410f68:	bl	4029d0 <strcmp@plt>
  410f6c:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410f70:	add	x20, x20, #0xd68
  410f74:	cbz	w0, 4115d8 <wcrtomb@plt+0xe978>
  410f78:	b	411ac8 <wcrtomb@plt+0xee68>
  410f7c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410f80:	add	x1, x1, #0xfea
  410f84:	mov	x21, x1
  410f88:	mov	x0, x21
  410f8c:	bl	4029d0 <strcmp@plt>
  410f90:	cbnz	w0, 410e94 <wcrtomb@plt+0xe234>
  410f94:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  410f98:	add	x20, x20, #0xc60
  410f9c:	b	4115d8 <wcrtomb@plt+0xe978>
  410fa0:	str	xzr, [x20]
  410fa4:	mov	w20, w21
  410fa8:	str	w27, [x22]
  410fac:	ldr	x8, [x24]
  410fb0:	mov	w9, #0x1                   	// #1
  410fb4:	ldrb	w25, [x8]
  410fb8:	add	x8, x8, x9
  410fbc:	str	x8, [x24]
  410fc0:	ldr	x8, [x19]
  410fc4:	sub	x2, x8, x9
  410fc8:	str	x2, [x19]
  410fcc:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  410fd0:	ldr	x1, [x23, #32]
  410fd4:	ldrb	w8, [x1]
  410fd8:	add	x8, x23, x8, lsl #2
  410fdc:	ldr	w21, [x8, #1308]
  410fe0:	cmn	w21, #0x1
  410fe4:	b.ne	411038 <wcrtomb@plt+0xe3d8>  // b.any
  410fe8:	mov	w28, w21
  410fec:	mov	w21, w20
  410ff0:	ldr	x20, [sp, #32]
  410ff4:	add	x0, sp, #0x2c
  410ff8:	mov	x3, x20
  410ffc:	bl	417134 <wcrtomb@plt+0x144d4>
  411000:	sub	x8, x0, #0x1
  411004:	cmn	x8, #0x3
  411008:	b.cs	41102c <wcrtomb@plt+0xe3cc>  // b.hs, b.nlast
  41100c:	ldr	w8, [sp, #44]
  411010:	cmp	w0, #0x1
  411014:	mov	w10, w8
  411018:	str	w8, [x22]
  41101c:	b.ne	411134 <wcrtomb@plt+0xe4d4>  // b.any
  411020:	mov	w20, w21
  411024:	mov	w21, w10
  411028:	b	41103c <wcrtomb@plt+0xe3dc>
  41102c:	str	xzr, [x20]
  411030:	mov	w20, w21
  411034:	mov	w21, w28
  411038:	str	w21, [x22]
  41103c:	ldr	x8, [x24]
  411040:	mov	w9, #0x1                   	// #1
  411044:	ldrb	w28, [x8]
  411048:	add	x1, x8, x9
  41104c:	str	x1, [x24]
  411050:	ldr	x8, [x19]
  411054:	sub	x2, x8, x9
  411058:	str	x2, [x19]
  41105c:	cmp	w28, #0x2d
  411060:	b.ne	410cf8 <wcrtomb@plt+0xe098>  // b.any
  411064:	str	w20, [sp, #40]
  411068:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  41106c:	ldrb	w8, [x1]
  411070:	add	x8, x23, x8, lsl #2
  411074:	ldr	w12, [x8, #1308]
  411078:	cmn	w12, #0x1
  41107c:	b.ne	4110c8 <wcrtomb@plt+0xe468>  // b.any
  411080:	ldr	x20, [sp, #32]
  411084:	add	x0, sp, #0x2c
  411088:	mov	w28, w12
  41108c:	mov	x3, x20
  411090:	bl	417134 <wcrtomb@plt+0x144d4>
  411094:	sub	x8, x0, #0x1
  411098:	cmn	x8, #0x3
  41109c:	b.cs	4110c0 <wcrtomb@plt+0xe460>  // b.hs, b.nlast
  4110a0:	ldr	w12, [sp, #44]
  4110a4:	cmp	w0, #0x1
  4110a8:	str	w12, [x22]
  4110ac:	b.eq	4110cc <wcrtomb@plt+0xe46c>  // b.none
  4110b0:	ldr	x8, [x24]
  4110b4:	sxtw	x9, w0
  4110b8:	mov	w20, #0xffffffff            	// #-1
  4110bc:	b	4111f0 <wcrtomb@plt+0xe590>
  4110c0:	mov	w12, w28
  4110c4:	str	xzr, [x20]
  4110c8:	str	w12, [x22]
  4110cc:	ldr	x8, [x24]
  4110d0:	mov	x1, x8
  4110d4:	ldrb	w20, [x1], #1
  4110d8:	str	x1, [x24]
  4110dc:	ldr	x9, [x19]
  4110e0:	cmp	w20, #0x5d
  4110e4:	sub	x2, x9, #0x1
  4110e8:	str	x2, [x19]
  4110ec:	b.eq	411110 <wcrtomb@plt+0xe4b0>  // b.none
  4110f0:	cmp	w20, #0x5c
  4110f4:	b.eq	411124 <wcrtomb@plt+0xe4c4>  // b.none
  4110f8:	cmp	w20, #0x5b
  4110fc:	b.ne	411204 <wcrtomb@plt+0xe5a4>  // b.any
  411100:	ldrb	w10, [x1]
  411104:	cmp	w10, #0x2e
  411108:	b.ne	411198 <wcrtomb@plt+0xe538>  // b.any
  41110c:	str	wzr, [sp, #24]
  411110:	ldr	w20, [sp, #40]
  411114:	stp	x8, x9, [x23, #32]
  411118:	mov	w28, #0x2d                  	// #45
  41111c:	mov	w11, #0x1                   	// #1
  411120:	b	4112b4 <wcrtomb@plt+0xe654>
  411124:	ldrb	w8, [x23, #448]
  411128:	tbnz	w8, #0, 41114c <wcrtomb@plt+0xe4ec>
  41112c:	mov	w20, #0x5c                  	// #92
  411130:	b	411204 <wcrtomb@plt+0xe5a4>
  411134:	ldr	x8, [x24]
  411138:	sxtw	x9, w0
  41113c:	mov	w28, #0xffffffff            	// #-1
  411140:	mov	w20, w21
  411144:	mov	w21, w10
  411148:	b	411048 <wcrtomb@plt+0xe3e8>
  41114c:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  411150:	ldrb	w8, [x1]
  411154:	add	x8, x23, x8, lsl #2
  411158:	ldr	w12, [x8, #1308]
  41115c:	cmn	w12, #0x1
  411160:	b.ne	4111e0 <wcrtomb@plt+0xe580>  // b.any
  411164:	ldr	x20, [sp, #32]
  411168:	add	x0, sp, #0x2c
  41116c:	mov	w21, w12
  411170:	mov	x3, x20
  411174:	bl	417134 <wcrtomb@plt+0x144d4>
  411178:	sub	x8, x0, #0x1
  41117c:	cmn	x8, #0x3
  411180:	b.cs	4111d8 <wcrtomb@plt+0xe578>  // b.hs, b.nlast
  411184:	ldr	w12, [sp, #44]
  411188:	cmp	w0, #0x1
  41118c:	str	w12, [x22]
  411190:	b.ne	4110b0 <wcrtomb@plt+0xe450>  // b.any
  411194:	b	4111e4 <wcrtomb@plt+0xe584>
  411198:	mov	w20, #0x5b                  	// #91
  41119c:	b	411204 <wcrtomb@plt+0xe5a4>
  4111a0:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4111a4:	add	x20, x20, #0xc78
  4111a8:	b	4115d8 <wcrtomb@plt+0xe978>
  4111ac:	ldr	x8, [x24]
  4111b0:	sxtw	x9, w0
  4111b4:	mov	w25, #0xffffffff            	// #-1
  4111b8:	mov	w20, w21
  4111bc:	b	410fb8 <wcrtomb@plt+0xe358>
  4111c0:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4111c4:	add	x20, x20, #0xc90
  4111c8:	b	4115d8 <wcrtomb@plt+0xe978>
  4111cc:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4111d0:	add	x20, x20, #0xca8
  4111d4:	b	4115d8 <wcrtomb@plt+0xe978>
  4111d8:	mov	w12, w21
  4111dc:	str	xzr, [x20]
  4111e0:	str	w12, [x22]
  4111e4:	ldr	x8, [x24]
  4111e8:	mov	w9, #0x1                   	// #1
  4111ec:	ldrb	w20, [x8]
  4111f0:	add	x1, x8, x9
  4111f4:	str	x1, [x24]
  4111f8:	ldr	x8, [x19]
  4111fc:	sub	x2, x8, x9
  411200:	str	x2, [x19]
  411204:	cbz	x2, 411aac <wcrtomb@plt+0xee4c>
  411208:	ldrb	w8, [x1]
  41120c:	add	x8, x23, x8, lsl #2
  411210:	ldr	w21, [x8, #1308]
  411214:	ldr	w8, [sp, #40]
  411218:	cmn	w21, #0x1
  41121c:	orr	w8, w8, #0x8
  411220:	str	w8, [sp, #40]
  411224:	b.ne	411278 <wcrtomb@plt+0xe618>  // b.any
  411228:	ldr	x28, [sp, #32]
  41122c:	add	x0, sp, #0x2c
  411230:	str	w12, [sp, #28]
  411234:	mov	x3, x28
  411238:	bl	417134 <wcrtomb@plt+0x144d4>
  41123c:	sub	x8, x0, #0x1
  411240:	cmn	x8, #0x3
  411244:	b.cs	411270 <wcrtomb@plt+0xe610>  // b.hs, b.nlast
  411248:	ldr	w21, [sp, #44]
  41124c:	ldr	w12, [sp, #28]
  411250:	cmp	w0, #0x1
  411254:	mov	w11, #0x1                   	// #1
  411258:	str	w21, [x22]
  41125c:	b.eq	411280 <wcrtomb@plt+0xe620>  // b.none
  411260:	ldr	x8, [x24]
  411264:	sxtw	x9, w0
  411268:	mov	w28, #0xffffffff            	// #-1
  41126c:	b	41128c <wcrtomb@plt+0xe62c>
  411270:	ldr	w12, [sp, #28]
  411274:	str	xzr, [x28]
  411278:	mov	w11, #0x1                   	// #1
  41127c:	str	w21, [x22]
  411280:	ldr	x8, [x24]
  411284:	mov	w9, #0x1                   	// #1
  411288:	ldrb	w28, [x8]
  41128c:	add	x8, x8, x9
  411290:	str	x8, [x24]
  411294:	ldr	x8, [x19]
  411298:	cmn	w27, #0x1
  41129c:	sub	x8, x8, x9
  4112a0:	str	x8, [x19]
  4112a4:	b.eq	41130c <wcrtomb@plt+0xe6ac>  // b.none
  4112a8:	cmp	w27, w12
  4112ac:	b.ne	41130c <wcrtomb@plt+0xe6ac>  // b.any
  4112b0:	ldr	w20, [sp, #40]
  4112b4:	cmp	w25, #0x3a
  4112b8:	mov	w8, #0x4                   	// #4
  4112bc:	mov	w9, #0x2                   	// #2
  4112c0:	csel	w8, w9, w8, eq  // eq = none
  4112c4:	ldrb	w9, [x23, #1048]
  4112c8:	orr	w20, w20, w8
  4112cc:	cbz	w9, 410c58 <wcrtomb@plt+0xdff8>
  4112d0:	cmn	w27, #0x1
  4112d4:	b.eq	411304 <wcrtomb@plt+0xe6a4>  // b.none
  4112d8:	ldrb	w8, [x23, #457]
  4112dc:	str	w21, [sp, #28]
  4112e0:	mov	w21, w20
  4112e4:	cbz	w8, 411420 <wcrtomb@plt+0xe7c0>
  4112e8:	ldr	x1, [sp, #16]
  4112ec:	mov	w0, w27
  4112f0:	bl	414974 <wcrtomb@plt+0x11d14>
  4112f4:	str	w27, [sp, #44]
  4112f8:	tbnz	w0, #31, 411568 <wcrtomb@plt+0xe908>
  4112fc:	add	w8, w0, #0x1
  411300:	b	411428 <wcrtomb@plt+0xe7c8>
  411304:	str	wzr, [sp, #24]
  411308:	b	410aec <wcrtomb@plt+0xde8c>
  41130c:	ldrb	w8, [x23, #1049]
  411310:	cbnz	w8, 411334 <wcrtomb@plt+0xe6d4>
  411314:	sub	w8, w25, #0x30
  411318:	and	w8, w8, #0xff
  41131c:	cmp	w8, #0x9
  411320:	b.hi	41157c <wcrtomb@plt+0xe91c>  // b.pmore
  411324:	sub	w8, w20, #0x30
  411328:	and	w8, w8, #0xff
  41132c:	cmp	w8, #0x9
  411330:	b.hi	41157c <wcrtomb@plt+0xe91c>  // b.pmore
  411334:	cmp	w25, w20
  411338:	b.gt	411388 <wcrtomb@plt+0xe728>
  41133c:	ldrb	w8, [x23, #457]
  411340:	cbz	w8, 411360 <wcrtomb@plt+0xe700>
  411344:	str	w21, [sp, #28]
  411348:	sxtw	x25, w25
  41134c:	sxtw	x20, w20
  411350:	bl	4029e0 <__ctype_b_loc@plt>
  411354:	ldr	x27, [x0]
  411358:	mov	w13, #0x1                   	// #1
  41135c:	b	4113b4 <wcrtomb@plt+0xe754>
  411360:	lsr	w8, w25, #6
  411364:	lsl	x8, x8, #3
  411368:	ldr	x9, [x26, x8]
  41136c:	lsl	x10, x11, x25
  411370:	cmp	w25, w20
  411374:	orr	x9, x9, x10
  411378:	add	w10, w25, #0x1
  41137c:	mov	w25, w10
  411380:	str	x9, [x26, x8]
  411384:	b.lt	411360 <wcrtomb@plt+0xe700>  // b.tstop
  411388:	ldr	w20, [sp, #40]
  41138c:	b	410aec <wcrtomb@plt+0xde8c>
  411390:	ubfx	x8, x25, #6, #26
  411394:	lsl	x8, x8, #3
  411398:	ldr	x9, [x26, x8]
  41139c:	lsl	x10, x13, x25
  4113a0:	orr	x9, x9, x10
  4113a4:	str	x9, [x26, x8]
  4113a8:	cmp	x25, x20
  4113ac:	add	x25, x25, #0x1
  4113b0:	b.ge	411574 <wcrtomb@plt+0xe914>  // b.tcont
  4113b4:	ldrh	w8, [x27, x25, lsl #1]
  4113b8:	tbz	w8, #10, 411390 <wcrtomb@plt+0xe730>
  4113bc:	add	x8, x25, #0x80
  4113c0:	cmp	x8, #0x17f
  4113c4:	mov	w21, w25
  4113c8:	b.hi	4113d8 <wcrtomb@plt+0xe778>  // b.pmore
  4113cc:	bl	402880 <__ctype_toupper_loc@plt>
  4113d0:	ldr	x8, [x0]
  4113d4:	ldr	w21, [x8, x25, lsl #2]
  4113d8:	bl	402880 <__ctype_toupper_loc@plt>
  4113dc:	ldr	x8, [x0]
  4113e0:	mov	x9, xzr
  4113e4:	mov	w13, #0x1                   	// #1
  4113e8:	b	4113f8 <wcrtomb@plt+0xe798>
  4113ec:	add	x9, x9, #0x1
  4113f0:	cmp	x9, #0x100
  4113f4:	b.eq	4113a8 <wcrtomb@plt+0xe748>  // b.none
  4113f8:	ldr	w10, [x8, x9, lsl #2]
  4113fc:	cmp	w10, w21
  411400:	b.ne	4113ec <wcrtomb@plt+0xe78c>  // b.any
  411404:	ubfx	x10, x9, #6, #26
  411408:	lsl	x10, x10, #3
  41140c:	ldr	x11, [x26, x10]
  411410:	lsl	x12, x13, x9
  411414:	orr	x11, x11, x12
  411418:	str	x11, [x26, x10]
  41141c:	b	4113ec <wcrtomb@plt+0xe78c>
  411420:	str	w27, [sp, #44]
  411424:	mov	w8, #0x1                   	// #1
  411428:	ldr	x25, [sp, #16]
  41142c:	mov	w8, w8
  411430:	sub	x20, x8, #0x1
  411434:	mov	w0, w27
  411438:	bl	4026e0 <wctob@plt>
  41143c:	tbnz	w0, #31, 411464 <wcrtomb@plt+0xe804>
  411440:	lsr	w8, w0, #6
  411444:	lsl	x8, x8, #3
  411448:	ldr	x9, [x26, x8]
  41144c:	mov	w10, #0x1                   	// #1
  411450:	lsl	x10, x10, x0
  411454:	orr	x9, x9, x10
  411458:	str	x9, [x26, x8]
  41145c:	cbnz	x20, 411550 <wcrtomb@plt+0xe8f0>
  411460:	b	411568 <wcrtomb@plt+0xe908>
  411464:	ldp	x9, x8, [x23, #104]
  411468:	ldr	x0, [x23, #96]
  41146c:	cmp	x8, x9
  411470:	b.gt	411538 <wcrtomb@plt+0xe8d8>
  411474:	adds	x9, x8, x8, asr #1
  411478:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41147c:	csel	x27, x10, x9, vs
  411480:	tbnz	x27, #63, 4114b0 <wcrtomb@plt+0xe850>
  411484:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  411488:	cmp	x27, x9
  41148c:	b.le	4114c8 <wcrtomb@plt+0xe868>
  411490:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  411494:	lsr	x27, x9, #2
  411498:	and	x1, x9, #0x7ffffffffffffffc
  41149c:	cbnz	x0, 4114ec <wcrtomb@plt+0xe88c>
  4114a0:	str	xzr, [x23, #112]
  4114a4:	cmp	x27, x8
  4114a8:	b.gt	41152c <wcrtomb@plt+0xe8cc>
  4114ac:	b	4114f4 <wcrtomb@plt+0xe894>
  4114b0:	cmn	x27, #0x1
  4114b4:	b.eq	4114d4 <wcrtomb@plt+0xe874>  // b.none
  4114b8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4114bc:	sdiv	x9, x9, x27
  4114c0:	cmp	x9, #0x4
  4114c4:	b.lt	411490 <wcrtomb@plt+0xe830>  // b.tstop
  4114c8:	lsl	x1, x27, #2
  4114cc:	cmp	x1, #0x7f
  4114d0:	b.gt	4114e8 <wcrtomb@plt+0xe888>
  4114d4:	mov	w9, #0x80                  	// #128
  4114d8:	lsr	x27, x9, #2
  4114dc:	and	x1, x9, #0x7ffffffffffffffc
  4114e0:	cbnz	x0, 4114ec <wcrtomb@plt+0xe88c>
  4114e4:	b	4114a0 <wcrtomb@plt+0xe840>
  4114e8:	cbz	x0, 4114a0 <wcrtomb@plt+0xe840>
  4114ec:	cmp	x27, x8
  4114f0:	b.gt	41152c <wcrtomb@plt+0xe8cc>
  4114f4:	adds	x27, x8, #0x1
  4114f8:	b.vs	411ac4 <wcrtomb@plt+0xee64>
  4114fc:	tbnz	x27, #63, 411510 <wcrtomb@plt+0xe8b0>
  411500:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  411504:	cmp	x27, x8
  411508:	b.le	411528 <wcrtomb@plt+0xe8c8>
  41150c:	b	411ac4 <wcrtomb@plt+0xee64>
  411510:	cmn	x27, #0x1
  411514:	b.eq	411528 <wcrtomb@plt+0xe8c8>  // b.none
  411518:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  41151c:	sdiv	x8, x8, x27
  411520:	cmp	x8, #0x4
  411524:	b.lt	411ac4 <wcrtomb@plt+0xee64>  // b.tstop
  411528:	lsl	x1, x27, #2
  41152c:	bl	416e54 <wcrtomb@plt+0x141f4>
  411530:	ldr	x9, [x23, #104]
  411534:	str	x27, [x23, #112]
  411538:	str	x0, [x23, #96]
  41153c:	ldur	w8, [x25, #-4]
  411540:	add	x10, x9, #0x1
  411544:	str	x10, [x23, #104]
  411548:	str	w8, [x0, x9, lsl #2]
  41154c:	cbz	x20, 411568 <wcrtomb@plt+0xe908>
  411550:	ldr	w27, [x25], #4
  411554:	sub	x20, x20, #0x1
  411558:	mov	w0, w27
  41155c:	bl	4026e0 <wctob@plt>
  411560:	tbz	w0, #31, 411440 <wcrtomb@plt+0xe7e0>
  411564:	b	411464 <wcrtomb@plt+0xe804>
  411568:	mov	w20, w21
  41156c:	ldr	w21, [sp, #28]
  411570:	b	410aec <wcrtomb@plt+0xde8c>
  411574:	ldr	w20, [sp, #40]
  411578:	b	41156c <wcrtomb@plt+0xe90c>
  41157c:	ldr	w20, [sp, #40]
  411580:	str	wzr, [sp, #24]
  411584:	b	410aec <wcrtomb@plt+0xde8c>
  411588:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41158c:	add	x20, x20, #0xcc0
  411590:	b	4115d8 <wcrtomb@plt+0xe978>
  411594:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  411598:	add	x20, x20, #0xcd8
  41159c:	b	4115d8 <wcrtomb@plt+0xe978>
  4115a0:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4115a4:	add	x20, x20, #0xcf0
  4115a8:	b	4115d8 <wcrtomb@plt+0xe978>
  4115ac:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4115b0:	add	x20, x20, #0xd08
  4115b4:	b	4115d8 <wcrtomb@plt+0xe978>
  4115b8:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4115bc:	add	x20, x20, #0xd20
  4115c0:	b	4115d8 <wcrtomb@plt+0xe978>
  4115c4:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4115c8:	add	x20, x20, #0xd38
  4115cc:	b	4115d8 <wcrtomb@plt+0xe978>
  4115d0:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4115d4:	add	x20, x20, #0xd50
  4115d8:	ldrb	w8, [x23, #1048]
  4115dc:	cbz	w8, 4115e8 <wcrtomb@plt+0xe988>
  4115e0:	ldrb	w8, [x20, #16]
  4115e4:	cbz	w8, 41162c <wcrtomb@plt+0xe9cc>
  4115e8:	mov	w21, wzr
  4115ec:	b	4115fc <wcrtomb@plt+0xe99c>
  4115f0:	add	w21, w21, #0x1
  4115f4:	cmp	w21, #0x100
  4115f8:	b.eq	41163c <wcrtomb@plt+0xe9dc>  // b.none
  4115fc:	ldr	x8, [x20, #8]
  411600:	mov	w0, w21
  411604:	blr	x8
  411608:	mov	w10, #0x1                   	// #1
  41160c:	cbz	w0, 4115f0 <wcrtomb@plt+0xe990>
  411610:	lsr	w8, w21, #6
  411614:	lsl	x8, x8, #3
  411618:	ldr	x9, [x26, x8]
  41161c:	lsl	x10, x10, x21
  411620:	orr	x9, x9, x10
  411624:	str	x9, [x26, x8]
  411628:	b	4115f0 <wcrtomb@plt+0xe990>
  41162c:	str	wzr, [sp, #24]
  411630:	ldr	w20, [sp, #40]
  411634:	cbnz	x27, 411648 <wcrtomb@plt+0xe9e8>
  411638:	b	411aac <wcrtomb@plt+0xee4c>
  41163c:	ldr	x27, [x19]
  411640:	ldr	w20, [sp, #40]
  411644:	cbz	x27, 411aac <wcrtomb@plt+0xee4c>
  411648:	ldr	x1, [x23, #32]
  41164c:	orr	w20, w20, #0x8
  411650:	ldrb	w8, [x1]
  411654:	add	x8, x23, x8, lsl #2
  411658:	ldr	w21, [x8, #1308]
  41165c:	cmn	w21, #0x1
  411660:	b.ne	4116b8 <wcrtomb@plt+0xea58>  // b.any
  411664:	mov	w25, w21
  411668:	mov	w21, w20
  41166c:	ldr	x20, [sp, #32]
  411670:	sub	x0, x29, #0x14
  411674:	mov	x2, x27
  411678:	mov	x3, x20
  41167c:	bl	417134 <wcrtomb@plt+0x144d4>
  411680:	sub	x8, x0, #0x1
  411684:	cmn	x8, #0x3
  411688:	b.cs	4116ac <wcrtomb@plt+0xea4c>  // b.hs, b.nlast
  41168c:	ldur	w8, [x29, #-20]
  411690:	cmp	w0, #0x1
  411694:	mov	w10, w8
  411698:	str	w8, [x22]
  41169c:	b.ne	4116e0 <wcrtomb@plt+0xea80>  // b.any
  4116a0:	mov	w20, w21
  4116a4:	mov	w21, w10
  4116a8:	b	4116bc <wcrtomb@plt+0xea5c>
  4116ac:	str	xzr, [x20]
  4116b0:	mov	w20, w21
  4116b4:	mov	w21, w25
  4116b8:	str	w21, [x22]
  4116bc:	ldr	x8, [x24]
  4116c0:	mov	w9, #0x1                   	// #1
  4116c4:	ldrb	w28, [x8]
  4116c8:	add	x8, x8, x9
  4116cc:	str	x8, [x24]
  4116d0:	ldr	x8, [x19]
  4116d4:	sub	x8, x8, x9
  4116d8:	str	x8, [x19]
  4116dc:	b	410aec <wcrtomb@plt+0xde8c>
  4116e0:	ldr	x8, [x24]
  4116e4:	sxtw	x9, w0
  4116e8:	mov	w28, #0xffffffff            	// #-1
  4116ec:	mov	w20, w21
  4116f0:	mov	w21, w10
  4116f4:	b	4116c8 <wcrtomb@plt+0xea68>
  4116f8:	cmp	w20, #0x7
  4116fc:	b.ne	411718 <wcrtomb@plt+0xeab8>  // b.any
  411700:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  411704:	add	x1, x1, #0x8
  411708:	mov	w2, #0x5                   	// #5
  41170c:	mov	x0, xzr
  411710:	bl	402b40 <dcgettext@plt>
  411714:	bl	40ac5c <wcrtomb@plt+0x7ffc>
  411718:	ldr	w9, [sp, #12]
  41171c:	ldr	w8, [sp, #24]
  411720:	tbz	w8, #0, 4117c4 <wcrtomb@plt+0xeb64>
  411724:	ldrb	w8, [x23, #1048]
  411728:	cbz	w8, 4117cc <wcrtomb@plt+0xeb6c>
  41172c:	cmp	w9, #0x5e
  411730:	b.eq	41173c <wcrtomb@plt+0xeadc>  // b.none
  411734:	ldr	x8, [x23, #104]
  411738:	cbz	x8, 411800 <wcrtomb@plt+0xeba0>
  41173c:	ldr	w8, [sp, #8]
  411740:	sub	x9, x29, #0x40
  411744:	strb	w8, [x23, #88]
  411748:	ldp	x8, x10, [x9]
  41174c:	ldp	x11, x12, [x9, #16]
  411750:	orr	x9, x10, x8
  411754:	orr	x9, x9, x11
  411758:	orr	x9, x9, x12
  41175c:	cbz	x9, 411870 <wcrtomb@plt+0xec10>
  411760:	ldr	x9, [x23, #8]
  411764:	cmp	x9, #0x0
  411768:	b.le	4118d8 <wcrtomb@plt+0xec78>
  41176c:	ldr	x0, [x23]
  411770:	mov	x19, xzr
  411774:	add	x13, x0, #0x10
  411778:	ldp	x14, x15, [x13, #-16]
  41177c:	ldp	x16, x17, [x13]
  411780:	eor	x14, x14, x8
  411784:	eor	x15, x15, x10
  411788:	eor	x16, x16, x11
  41178c:	orr	x14, x15, x14
  411790:	orr	x14, x14, x16
  411794:	eor	x15, x17, x12
  411798:	orr	x14, x14, x15
  41179c:	cbz	x14, 411a84 <wcrtomb@plt+0xee24>
  4117a0:	add	x19, x19, #0x1
  4117a4:	cmp	x9, x19
  4117a8:	add	x13, x13, #0x20
  4117ac:	b.ne	411778 <wcrtomb@plt+0xeb18>  // b.any
  4117b0:	mov	x19, x9
  4117b4:	ldr	x8, [x23, #16]
  4117b8:	cmp	x8, x9
  4117bc:	b.le	4118ec <wcrtomb@plt+0xec8c>
  4117c0:	b	411a6c <wcrtomb@plt+0xee0c>
  4117c4:	mov	w0, #0x112                 	// #274
  4117c8:	b	411a8c <wcrtomb@plt+0xee2c>
  4117cc:	cmp	w9, #0x5e
  4117d0:	b.ne	411800 <wcrtomb@plt+0xeba0>  // b.any
  4117d4:	sub	x8, x29, #0x40
  4117d8:	ldp	q0, q1, [x8]
  4117dc:	sub	x9, x29, #0x40
  4117e0:	mvn	v0.16b, v0.16b
  4117e4:	mvn	v1.16b, v1.16b
  4117e8:	stp	q0, q1, [x8]
  4117ec:	ldrb	w8, [x23, #449]
  4117f0:	tbz	w8, #0, 411800 <wcrtomb@plt+0xeba0>
  4117f4:	fmov	x8, d0
  4117f8:	and	x8, x8, #0xfffffffffffffbff
  4117fc:	str	x8, [x9]
  411800:	ldr	x9, [x23, #8]
  411804:	cmp	x9, #0x0
  411808:	b.le	411878 <wcrtomb@plt+0xec18>
  41180c:	ldr	x0, [x23]
  411810:	sub	x12, x29, #0x40
  411814:	ldp	x8, x10, [x12]
  411818:	ldp	x11, x12, [x12, #16]
  41181c:	mov	x19, xzr
  411820:	add	x13, x0, #0x10
  411824:	ldp	x14, x15, [x13, #-16]
  411828:	ldp	x16, x17, [x13]
  41182c:	eor	x14, x14, x8
  411830:	eor	x15, x15, x10
  411834:	eor	x16, x16, x11
  411838:	orr	x14, x15, x14
  41183c:	orr	x14, x14, x16
  411840:	eor	x15, x17, x12
  411844:	orr	x14, x14, x15
  411848:	cbz	x14, 411a3c <wcrtomb@plt+0xeddc>
  41184c:	add	x19, x19, #0x1
  411850:	cmp	x9, x19
  411854:	add	x13, x13, #0x20
  411858:	b.ne	411824 <wcrtomb@plt+0xebc4>  // b.any
  41185c:	mov	x19, x9
  411860:	ldr	x8, [x23, #16]
  411864:	cmp	x8, x9
  411868:	b.le	41188c <wcrtomb@plt+0xec2c>
  41186c:	b	411a24 <wcrtomb@plt+0xedc4>
  411870:	mov	x19, #0xffffffffffffffff    	// #-1
  411874:	b	411a84 <wcrtomb@plt+0xee24>
  411878:	ldr	x0, [x23]
  41187c:	mov	x19, xzr
  411880:	ldr	x8, [x23, #16]
  411884:	cmp	x8, x9
  411888:	b.gt	411a24 <wcrtomb@plt+0xedc4>
  41188c:	mov	x9, #0xfffffffffffffeeb    	// #-277
  411890:	adds	x10, x8, x8, asr #1
  411894:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  411898:	movk	x9, #0x7fff, lsl #48
  41189c:	csel	x20, x11, x10, vs
  4118a0:	cmp	x20, x9
  4118a4:	csel	x10, x20, x9, lt  // lt = tstop
  4118a8:	tbnz	x10, #63, 411920 <wcrtomb@plt+0xecc0>
  4118ac:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  4118b0:	cmp	x10, x11
  4118b4:	b.le	411938 <wcrtomb@plt+0xecd8>
  4118b8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4118bc:	lsr	x20, x10, #5
  4118c0:	and	x1, x10, #0x7fffffffffffffe0
  4118c4:	cbnz	x0, 41195c <wcrtomb@plt+0xecfc>
  4118c8:	str	xzr, [x23, #16]
  4118cc:	cmp	x20, x8
  4118d0:	b.gt	411a18 <wcrtomb@plt+0xedb8>
  4118d4:	b	411964 <wcrtomb@plt+0xed04>
  4118d8:	ldr	x0, [x23]
  4118dc:	mov	x19, xzr
  4118e0:	ldr	x8, [x23, #16]
  4118e4:	cmp	x8, x9
  4118e8:	b.gt	411a6c <wcrtomb@plt+0xee0c>
  4118ec:	mov	x9, #0xfffffffffffffeeb    	// #-277
  4118f0:	adds	x10, x8, x8, asr #1
  4118f4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4118f8:	movk	x9, #0x7fff, lsl #48
  4118fc:	csel	x20, x11, x10, vs
  411900:	cmp	x20, x9
  411904:	csel	x10, x20, x9, lt  // lt = tstop
  411908:	tbnz	x10, #63, 411988 <wcrtomb@plt+0xed28>
  41190c:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  411910:	cmp	x10, x11
  411914:	b.le	4119a0 <wcrtomb@plt+0xed40>
  411918:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41191c:	b	4119b0 <wcrtomb@plt+0xed50>
  411920:	cmn	x10, #0x1
  411924:	b.eq	411944 <wcrtomb@plt+0xece4>  // b.none
  411928:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  41192c:	sdiv	x11, x11, x10
  411930:	cmp	x11, #0x20
  411934:	b.lt	4118b8 <wcrtomb@plt+0xec58>  // b.tstop
  411938:	lsl	x1, x10, #5
  41193c:	cmp	x1, #0x7f
  411940:	b.gt	411958 <wcrtomb@plt+0xecf8>
  411944:	mov	w10, #0x80                  	// #128
  411948:	lsr	x20, x10, #5
  41194c:	and	x1, x10, #0x7fffffffffffffe0
  411950:	cbnz	x0, 41195c <wcrtomb@plt+0xecfc>
  411954:	b	4118c8 <wcrtomb@plt+0xec68>
  411958:	cbz	x0, 4118c8 <wcrtomb@plt+0xec68>
  41195c:	cmp	x20, x8
  411960:	b.gt	411a18 <wcrtomb@plt+0xedb8>
  411964:	adds	x20, x8, #0x1
  411968:	b.vs	411ac4 <wcrtomb@plt+0xee64>
  41196c:	cmp	x20, x9
  411970:	b.gt	411ac4 <wcrtomb@plt+0xee64>
  411974:	tbnz	x20, #63, 4119fc <wcrtomb@plt+0xed9c>
  411978:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  41197c:	cmp	x20, x8
  411980:	b.le	411a14 <wcrtomb@plt+0xedb4>
  411984:	b	411ac4 <wcrtomb@plt+0xee64>
  411988:	cmn	x10, #0x1
  41198c:	b.eq	4119ac <wcrtomb@plt+0xed4c>  // b.none
  411990:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  411994:	sdiv	x11, x11, x10
  411998:	cmp	x11, #0x20
  41199c:	b.lt	411918 <wcrtomb@plt+0xecb8>  // b.tstop
  4119a0:	lsl	x1, x10, #5
  4119a4:	cmp	x1, #0x7f
  4119a8:	b.gt	4119cc <wcrtomb@plt+0xed6c>
  4119ac:	mov	w10, #0x80                  	// #128
  4119b0:	lsr	x20, x10, #5
  4119b4:	and	x1, x10, #0x7fffffffffffffe0
  4119b8:	cbnz	x0, 4119d0 <wcrtomb@plt+0xed70>
  4119bc:	str	xzr, [x23, #16]
  4119c0:	cmp	x20, x8
  4119c4:	b.gt	411a60 <wcrtomb@plt+0xee00>
  4119c8:	b	4119d8 <wcrtomb@plt+0xed78>
  4119cc:	cbz	x0, 4119bc <wcrtomb@plt+0xed5c>
  4119d0:	cmp	x20, x8
  4119d4:	b.gt	411a60 <wcrtomb@plt+0xee00>
  4119d8:	adds	x20, x8, #0x1
  4119dc:	b.vs	411ac4 <wcrtomb@plt+0xee64>
  4119e0:	cmp	x20, x9
  4119e4:	b.gt	411ac4 <wcrtomb@plt+0xee64>
  4119e8:	tbnz	x20, #63, 411a44 <wcrtomb@plt+0xede4>
  4119ec:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  4119f0:	cmp	x20, x8
  4119f4:	b.le	411a5c <wcrtomb@plt+0xedfc>
  4119f8:	b	411ac4 <wcrtomb@plt+0xee64>
  4119fc:	cmn	x20, #0x1
  411a00:	b.eq	411a14 <wcrtomb@plt+0xedb4>  // b.none
  411a04:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  411a08:	sdiv	x8, x8, x20
  411a0c:	cmp	x8, #0x20
  411a10:	b.lt	411ac4 <wcrtomb@plt+0xee64>  // b.tstop
  411a14:	lsl	x1, x20, #5
  411a18:	bl	416e54 <wcrtomb@plt+0x141f4>
  411a1c:	ldr	x9, [x23, #8]
  411a20:	str	x20, [x23, #16]
  411a24:	add	x8, x9, #0x1
  411a28:	stp	x0, x8, [x23]
  411a2c:	sub	x8, x29, #0x40
  411a30:	ldp	q1, q0, [x8]
  411a34:	add	x8, x0, x19, lsl #5
  411a38:	stp	q1, q0, [x8]
  411a3c:	add	x0, x19, #0x114
  411a40:	b	411a8c <wcrtomb@plt+0xee2c>
  411a44:	cmn	x20, #0x1
  411a48:	b.eq	411a5c <wcrtomb@plt+0xedfc>  // b.none
  411a4c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  411a50:	sdiv	x8, x8, x20
  411a54:	cmp	x8, #0x20
  411a58:	b.lt	411ac4 <wcrtomb@plt+0xee64>  // b.tstop
  411a5c:	lsl	x1, x20, #5
  411a60:	bl	416e54 <wcrtomb@plt+0x141f4>
  411a64:	ldr	x9, [x23, #8]
  411a68:	str	x20, [x23, #16]
  411a6c:	add	x8, x9, #0x1
  411a70:	stp	x0, x8, [x23]
  411a74:	sub	x8, x29, #0x40
  411a78:	ldp	q1, q0, [x8]
  411a7c:	add	x8, x0, x19, lsl #5
  411a80:	stp	q1, q0, [x8]
  411a84:	str	x19, [x23, #80]
  411a88:	mov	w0, #0x113                 	// #275
  411a8c:	ldp	x20, x19, [sp, #320]
  411a90:	ldp	x22, x21, [sp, #304]
  411a94:	ldp	x24, x23, [sp, #288]
  411a98:	ldp	x26, x25, [sp, #272]
  411a9c:	ldp	x28, x27, [sp, #256]
  411aa0:	ldp	x29, x30, [sp, #240]
  411aa4:	add	sp, sp, #0x150
  411aa8:	ret
  411aac:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  411ab0:	add	x1, x1, #0x3d
  411ab4:	mov	w2, #0x5                   	// #5
  411ab8:	mov	x0, xzr
  411abc:	bl	402b40 <dcgettext@plt>
  411ac0:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  411ac4:	bl	4170f0 <wcrtomb@plt+0x14490>
  411ac8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  411acc:	add	x1, x1, #0xff0
  411ad0:	mov	w2, #0x5                   	// #5
  411ad4:	mov	x0, xzr
  411ad8:	bl	402b40 <dcgettext@plt>
  411adc:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  411ae0:	sub	sp, sp, #0xe0
  411ae4:	stp	x29, x30, [sp, #128]
  411ae8:	stp	x28, x27, [sp, #144]
  411aec:	stp	x26, x25, [sp, #160]
  411af0:	stp	x24, x23, [sp, #176]
  411af4:	stp	x22, x21, [sp, #192]
  411af8:	stp	x20, x19, [sp, #208]
  411afc:	ldr	x1, [x0, #128]
  411b00:	mov	x19, x0
  411b04:	add	x29, sp, #0x80
  411b08:	cmp	x1, #0x100
  411b0c:	b.cc	411b24 <wcrtomb@plt+0xeec4>  // b.lo, b.ul, b.last
  411b10:	cmp	x1, #0x113
  411b14:	b.gt	411b24 <wcrtomb@plt+0xeec4>
  411b18:	sub	x8, x1, #0x10b
  411b1c:	cmp	x8, #0x9
  411b20:	b.cs	411b68 <wcrtomb@plt+0xef08>  // b.hs, b.nlast
  411b24:	mov	x0, x19
  411b28:	bl	40cb74 <wcrtomb@plt+0x9f14>
  411b2c:	mov	x0, x19
  411b30:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  411b34:	mov	x1, x0
  411b38:	str	x0, [x19, #128]
  411b3c:	sub	x8, x1, #0x101
  411b40:	cmp	x8, #0x3
  411b44:	b.ls	411d74 <wcrtomb@plt+0xf114>  // b.plast
  411b48:	ldp	x20, x19, [sp, #208]
  411b4c:	ldp	x22, x21, [sp, #192]
  411b50:	ldp	x24, x23, [sp, #176]
  411b54:	ldp	x26, x25, [sp, #160]
  411b58:	ldp	x28, x27, [sp, #144]
  411b5c:	ldp	x29, x30, [sp, #128]
  411b60:	add	sp, sp, #0xe0
  411b64:	ret
  411b68:	cmp	x1, #0x107
  411b6c:	b.eq	411c00 <wcrtomb@plt+0xefa0>  // b.none
  411b70:	cmp	x1, #0x109
  411b74:	b.eq	411ccc <wcrtomb@plt+0xf06c>  // b.none
  411b78:	cmp	x1, #0x10a
  411b7c:	b.ne	411d2c <wcrtomb@plt+0xf0cc>  // b.any
  411b80:	ldrb	w8, [x19, #1050]
  411b84:	cbz	w8, 411b24 <wcrtomb@plt+0xeec4>
  411b88:	ldr	x1, [x19, #200]
  411b8c:	cbnz	x1, 41224c <wcrtomb@plt+0xf5ec>
  411b90:	ldr	x8, [x19, #448]
  411b94:	ldr	x9, [x19, #8]
  411b98:	mov	x10, #0xfffffffffffffbff    	// #-1025
  411b9c:	mov	x20, #0xfffffffffffffeeb    	// #-277
  411ba0:	tst	x8, #0x40
  411ba4:	csinv	x10, x10, xzr, eq  // eq = none
  411ba8:	tst	x8, #0x80
  411bac:	and	x8, x10, #0xfffffffffffffffe
  411bb0:	csel	x21, x10, x8, eq  // eq = none
  411bb4:	cmp	x9, #0x0
  411bb8:	movk	x20, #0x7fff, lsl #48
  411bbc:	b.le	411fc0 <wcrtomb@plt+0xf360>
  411bc0:	ldr	x0, [x19]
  411bc4:	mov	x22, xzr
  411bc8:	add	x8, x0, #0x10
  411bcc:	ldp	x10, x11, [x8, #-16]
  411bd0:	ldp	x12, x13, [x8]
  411bd4:	eor	x10, x10, x21
  411bd8:	orn	x10, x10, x11
  411bdc:	orr	x10, x10, x12
  411be0:	orr	x10, x10, x13
  411be4:	cbz	x10, 4120b4 <wcrtomb@plt+0xf454>
  411be8:	add	x22, x22, #0x1
  411bec:	cmp	x9, x22
  411bf0:	add	x8, x8, #0x20
  411bf4:	b.ne	411bcc <wcrtomb@plt+0xef6c>  // b.any
  411bf8:	mov	x22, x9
  411bfc:	b	411fc8 <wcrtomb@plt+0xf368>
  411c00:	mov	x0, x19
  411c04:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  411c08:	str	x0, [x19, #128]
  411c0c:	mov	x0, x19
  411c10:	bl	411ae0 <wcrtomb@plt+0xee80>
  411c14:	ldr	x8, [x19, #128]
  411c18:	cmp	x8, #0x106
  411c1c:	b.eq	411c68 <wcrtomb@plt+0xf008>  // b.none
  411c20:	cmp	x8, #0x108
  411c24:	b.eq	411c68 <wcrtomb@plt+0xf008>  // b.none
  411c28:	tbnz	x8, #63, 411c68 <wcrtomb@plt+0xf008>
  411c2c:	mov	x0, x19
  411c30:	bl	411ae0 <wcrtomb@plt+0xee80>
  411c34:	mov	w1, #0x105                 	// #261
  411c38:	mov	w2, #0x3                   	// #3
  411c3c:	mov	x0, x19
  411c40:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411c44:	ldr	x8, [x19, #128]
  411c48:	cmp	x8, #0x106
  411c4c:	b.ne	411c20 <wcrtomb@plt+0xefc0>  // b.any
  411c50:	b	411c68 <wcrtomb@plt+0xf008>
  411c54:	mov	w1, #0x106                 	// #262
  411c58:	mov	w2, #0x3                   	// #3
  411c5c:	mov	x0, x19
  411c60:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411c64:	ldr	x8, [x19, #128]
  411c68:	cmp	x8, #0x108
  411c6c:	b.eq	411b2c <wcrtomb@plt+0xeecc>  // b.none
  411c70:	cmp	x8, #0x106
  411c74:	b.ne	4123f0 <wcrtomb@plt+0xf790>  // b.any
  411c78:	mov	x0, x19
  411c7c:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  411c80:	str	x0, [x19, #128]
  411c84:	mov	x0, x19
  411c88:	bl	411ae0 <wcrtomb@plt+0xee80>
  411c8c:	ldr	x8, [x19, #128]
  411c90:	cmp	x8, #0x106
  411c94:	b.eq	411c54 <wcrtomb@plt+0xeff4>  // b.none
  411c98:	cmp	x8, #0x108
  411c9c:	b.eq	411c54 <wcrtomb@plt+0xeff4>  // b.none
  411ca0:	tbnz	x8, #63, 411c54 <wcrtomb@plt+0xeff4>
  411ca4:	mov	x0, x19
  411ca8:	bl	411ae0 <wcrtomb@plt+0xee80>
  411cac:	mov	w1, #0x105                 	// #261
  411cb0:	mov	w2, #0x3                   	// #3
  411cb4:	mov	x0, x19
  411cb8:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411cbc:	ldr	x8, [x19, #128]
  411cc0:	cmp	x8, #0x106
  411cc4:	b.ne	411c98 <wcrtomb@plt+0xf038>  // b.any
  411cc8:	b	411c54 <wcrtomb@plt+0xeff4>
  411ccc:	ldr	w1, [x19, #72]
  411cd0:	cmn	w1, #0x1
  411cd4:	b.eq	411fb8 <wcrtomb@plt+0xf358>  // b.none
  411cd8:	mov	x0, x19
  411cdc:	bl	4106d4 <wcrtomb@plt+0xda74>
  411ce0:	ldrb	w8, [x19, #457]
  411ce4:	cbz	w8, 411b2c <wcrtomb@plt+0xeecc>
  411ce8:	ldr	w0, [x19, #72]
  411cec:	mov	x1, sp
  411cf0:	bl	414974 <wcrtomb@plt+0x11d14>
  411cf4:	cmp	w0, #0x1
  411cf8:	b.lt	411b2c <wcrtomb@plt+0xeecc>  // b.tstop
  411cfc:	mov	w20, w0
  411d00:	mov	x21, sp
  411d04:	ldr	w1, [x21], #4
  411d08:	mov	x0, x19
  411d0c:	bl	4106d4 <wcrtomb@plt+0xda74>
  411d10:	mov	w1, #0x106                 	// #262
  411d14:	mov	w2, #0x3                   	// #3
  411d18:	mov	x0, x19
  411d1c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411d20:	subs	x20, x20, #0x1
  411d24:	b.ne	411d04 <wcrtomb@plt+0xf0a4>  // b.any
  411d28:	b	411b2c <wcrtomb@plt+0xeecc>
  411d2c:	mov	w1, #0x100                 	// #256
  411d30:	mov	w2, #0x3                   	// #3
  411d34:	mov	x0, x19
  411d38:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411d3c:	ldr	x1, [x19, #128]
  411d40:	sub	x8, x1, #0x101
  411d44:	cmp	x8, #0x3
  411d48:	b.ls	411d74 <wcrtomb@plt+0xf114>  // b.plast
  411d4c:	b	411b48 <wcrtomb@plt+0xeee8>
  411d50:	mov	x0, x19
  411d54:	bl	40cb74 <wcrtomb@plt+0x9f14>
  411d58:	mov	x0, x19
  411d5c:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  411d60:	mov	x1, x0
  411d64:	str	x0, [x19, #128]
  411d68:	sub	x8, x1, #0x101
  411d6c:	cmp	x8, #0x4
  411d70:	b.cs	411b48 <wcrtomb@plt+0xeee8>  // b.hs, b.nlast
  411d74:	cmp	x1, #0x104
  411d78:	b.ne	411d50 <wcrtomb@plt+0xf0f0>  // b.any
  411d7c:	ldr	x21, [x19, #152]
  411d80:	ldp	w23, w24, [x19, #64]
  411d84:	mov	x0, x19
  411d88:	mov	x1, x21
  411d8c:	orr	w25, w23, w24
  411d90:	bl	412408 <wcrtomb@plt+0xf7a8>
  411d94:	sub	x22, x21, x0
  411d98:	cbz	w25, 411e48 <wcrtomb@plt+0xf1e8>
  411d9c:	mov	x20, x0
  411da0:	tbnz	w24, #31, 411e74 <wcrtomb@plt+0xf214>
  411da4:	cbz	w23, 411e8c <wcrtomb@plt+0xf22c>
  411da8:	cmp	w23, #0x2
  411dac:	b.lt	411ea8 <wcrtomb@plt+0xf248>  // b.tstop
  411db0:	cmp	x20, #0x0
  411db4:	b.le	411eb0 <wcrtomb@plt+0xf250>
  411db8:	neg	x24, x20
  411dbc:	lsl	x25, x21, #3
  411dc0:	mov	w23, #0x1                   	// #1
  411dc4:	b	411de8 <wcrtomb@plt+0xf188>
  411dc8:	mov	w1, #0x105                 	// #261
  411dcc:	mov	w2, #0x3                   	// #3
  411dd0:	mov	x0, x19
  411dd4:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411dd8:	ldr	w8, [x19, #64]
  411ddc:	add	w23, w23, #0x1
  411de0:	cmp	w23, w8
  411de4:	b.ge	411ed4 <wcrtomb@plt+0xf274>  // b.tcont
  411de8:	ldrb	w8, [x19, #1048]
  411dec:	mov	x26, x22
  411df0:	mov	x27, x20
  411df4:	mov	x28, x24
  411df8:	cbz	w8, 411e24 <wcrtomb@plt+0xf1c4>
  411dfc:	ldr	x8, [x19, #144]
  411e00:	ldr	x9, [x19, #280]
  411e04:	mov	x0, x19
  411e08:	ldr	x1, [x8, x26, lsl #3]
  411e0c:	ldrb	w2, [x9, x26]
  411e10:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411e14:	subs	x27, x27, #0x1
  411e18:	add	x26, x26, #0x1
  411e1c:	b.ne	411dfc <wcrtomb@plt+0xf19c>  // b.any
  411e20:	b	411dc8 <wcrtomb@plt+0xf168>
  411e24:	ldr	x8, [x19, #144]
  411e28:	mov	w2, #0x3                   	// #3
  411e2c:	mov	x0, x19
  411e30:	add	x8, x8, x25
  411e34:	ldr	x1, [x8, x28, lsl #3]
  411e38:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411e3c:	adds	x28, x28, #0x1
  411e40:	b.cc	411e24 <wcrtomb@plt+0xf1c4>  // b.lo, b.ul, b.last
  411e44:	b	411dc8 <wcrtomb@plt+0xf168>
  411e48:	mov	x0, x19
  411e4c:	str	x22, [x19, #152]
  411e50:	bl	40cd08 <wcrtomb@plt+0xa0a8>
  411e54:	str	x0, [x19, #128]
  411e58:	mov	x0, x19
  411e5c:	bl	411ae0 <wcrtomb@plt+0xee80>
  411e60:	ldr	x1, [x19, #128]
  411e64:	sub	x8, x1, #0x101
  411e68:	cmp	x8, #0x4
  411e6c:	b.cc	411d74 <wcrtomb@plt+0xf114>  // b.lo, b.ul, b.last
  411e70:	b	411b48 <wcrtomb@plt+0xeee8>
  411e74:	mov	w1, #0x103                 	// #259
  411e78:	mov	w2, #0x3                   	// #3
  411e7c:	mov	x0, x19
  411e80:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411e84:	ldr	w23, [x19, #64]
  411e88:	cbnz	w23, 411da8 <wcrtomb@plt+0xf148>
  411e8c:	mov	w1, #0x101                 	// #257
  411e90:	mov	w2, #0x3                   	// #3
  411e94:	mov	x0, x19
  411e98:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411e9c:	ldr	w23, [x19, #64]
  411ea0:	cmp	w23, #0x2
  411ea4:	b.ge	411db0 <wcrtomb@plt+0xf150>  // b.tcont
  411ea8:	mov	w23, #0x1                   	// #1
  411eac:	b	411ed4 <wcrtomb@plt+0xf274>
  411eb0:	mov	w23, #0x1                   	// #1
  411eb4:	mov	w1, #0x105                 	// #261
  411eb8:	mov	w2, #0x3                   	// #3
  411ebc:	mov	x0, x19
  411ec0:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411ec4:	ldr	w8, [x19, #64]
  411ec8:	add	w23, w23, #0x1
  411ecc:	cmp	w23, w8
  411ed0:	b.lt	411eb4 <wcrtomb@plt+0xf254>  // b.tstop
  411ed4:	ldr	w8, [x19, #68]
  411ed8:	cmp	w23, w8
  411edc:	b.ge	411d58 <wcrtomb@plt+0xf0f8>  // b.tcont
  411ee0:	cmp	x20, #0x0
  411ee4:	b.le	411f84 <wcrtomb@plt+0xf324>
  411ee8:	neg	x24, x20
  411eec:	lsl	x21, x21, #3
  411ef0:	b	411f24 <wcrtomb@plt+0xf2c4>
  411ef4:	mov	w1, #0x101                 	// #257
  411ef8:	mov	w2, #0x3                   	// #3
  411efc:	mov	x0, x19
  411f00:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411f04:	mov	w1, #0x105                 	// #261
  411f08:	mov	w2, #0x3                   	// #3
  411f0c:	mov	x0, x19
  411f10:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411f14:	ldr	w8, [x19, #68]
  411f18:	add	w23, w23, #0x1
  411f1c:	cmp	w23, w8
  411f20:	b.ge	411d58 <wcrtomb@plt+0xf0f8>  // b.tcont
  411f24:	ldrb	w8, [x19, #1048]
  411f28:	mov	x25, x22
  411f2c:	mov	x26, x20
  411f30:	mov	x27, x24
  411f34:	cbz	w8, 411f60 <wcrtomb@plt+0xf300>
  411f38:	ldr	x8, [x19, #144]
  411f3c:	ldr	x9, [x19, #280]
  411f40:	mov	x0, x19
  411f44:	ldr	x1, [x8, x25, lsl #3]
  411f48:	ldrb	w2, [x9, x25]
  411f4c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411f50:	subs	x26, x26, #0x1
  411f54:	add	x25, x25, #0x1
  411f58:	b.ne	411f38 <wcrtomb@plt+0xf2d8>  // b.any
  411f5c:	b	411ef4 <wcrtomb@plt+0xf294>
  411f60:	ldr	x8, [x19, #144]
  411f64:	mov	w2, #0x3                   	// #3
  411f68:	mov	x0, x19
  411f6c:	add	x8, x8, x21
  411f70:	ldr	x1, [x8, x27, lsl #3]
  411f74:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411f78:	adds	x27, x27, #0x1
  411f7c:	b.cc	411f60 <wcrtomb@plt+0xf300>  // b.lo, b.ul, b.last
  411f80:	b	411ef4 <wcrtomb@plt+0xf294>
  411f84:	mov	w1, #0x101                 	// #257
  411f88:	mov	w2, #0x3                   	// #3
  411f8c:	mov	x0, x19
  411f90:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411f94:	mov	w1, #0x105                 	// #261
  411f98:	mov	w2, #0x3                   	// #3
  411f9c:	mov	x0, x19
  411fa0:	bl	4107a0 <wcrtomb@plt+0xdb40>
  411fa4:	ldr	w8, [x19, #68]
  411fa8:	add	w23, w23, #0x1
  411fac:	cmp	w23, w8
  411fb0:	b.lt	411f84 <wcrtomb@plt+0xf324>  // b.tstop
  411fb4:	b	411d58 <wcrtomb@plt+0xf0f8>
  411fb8:	mov	w1, #0x112                 	// #274
  411fbc:	b	4123e0 <wcrtomb@plt+0xf780>
  411fc0:	ldr	x0, [x19]
  411fc4:	mov	x22, xzr
  411fc8:	ldr	x8, [x19, #16]
  411fcc:	cmp	x8, x9
  411fd0:	b.gt	41209c <wcrtomb@plt+0xf43c>
  411fd4:	adds	x9, x8, x8, asr #1
  411fd8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  411fdc:	csel	x23, x10, x9, vs
  411fe0:	cmp	x23, x20
  411fe4:	csel	x9, x23, x20, lt  // lt = tstop
  411fe8:	tbnz	x9, #63, 412000 <wcrtomb@plt+0xf3a0>
  411fec:	mov	x10, #0x3ffffffffffffff     	// #288230376151711743
  411ff0:	cmp	x9, x10
  411ff4:	b.le	412018 <wcrtomb@plt+0xf3b8>
  411ff8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  411ffc:	b	412028 <wcrtomb@plt+0xf3c8>
  412000:	cmn	x9, #0x1
  412004:	b.eq	412024 <wcrtomb@plt+0xf3c4>  // b.none
  412008:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41200c:	sdiv	x10, x10, x9
  412010:	cmp	x10, #0x20
  412014:	b.lt	411ff8 <wcrtomb@plt+0xf398>  // b.tstop
  412018:	lsl	x1, x9, #5
  41201c:	cmp	x1, #0x7f
  412020:	b.gt	412044 <wcrtomb@plt+0xf3e4>
  412024:	mov	w9, #0x80                  	// #128
  412028:	lsr	x23, x9, #5
  41202c:	and	x1, x9, #0x7fffffffffffffe0
  412030:	cbnz	x0, 412048 <wcrtomb@plt+0xf3e8>
  412034:	str	xzr, [x19, #16]
  412038:	cmp	x23, x8
  41203c:	b.gt	412090 <wcrtomb@plt+0xf430>
  412040:	b	412050 <wcrtomb@plt+0xf3f0>
  412044:	cbz	x0, 412034 <wcrtomb@plt+0xf3d4>
  412048:	cmp	x23, x8
  41204c:	b.gt	412090 <wcrtomb@plt+0xf430>
  412050:	adds	x23, x8, #0x1
  412054:	b.vs	412244 <wcrtomb@plt+0xf5e4>
  412058:	cmp	x23, x20
  41205c:	b.gt	412244 <wcrtomb@plt+0xf5e4>
  412060:	tbnz	x23, #63, 412074 <wcrtomb@plt+0xf414>
  412064:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  412068:	cmp	x23, x8
  41206c:	b.le	41208c <wcrtomb@plt+0xf42c>
  412070:	b	412244 <wcrtomb@plt+0xf5e4>
  412074:	cmn	x23, #0x1
  412078:	b.eq	41208c <wcrtomb@plt+0xf42c>  // b.none
  41207c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412080:	sdiv	x8, x8, x23
  412084:	cmp	x8, #0x20
  412088:	b.lt	412244 <wcrtomb@plt+0xf5e4>  // b.tstop
  41208c:	lsl	x1, x23, #5
  412090:	bl	416e54 <wcrtomb@plt+0x141f4>
  412094:	ldr	x9, [x19, #8]
  412098:	str	x23, [x19, #16]
  41209c:	add	x8, x9, #0x1
  4120a0:	add	x9, x0, x22, lsl #5
  4120a4:	mov	x10, #0xffffffffffffffff    	// #-1
  4120a8:	stp	x0, x8, [x19]
  4120ac:	stp	x21, x10, [x9]
  4120b0:	stp	xzr, xzr, [x9, #16]
  4120b4:	add	x8, x22, #0x114
  4120b8:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4120bc:	mov	w21, #0x1                   	// #1
  4120c0:	add	x22, x22, #0xd98
  4120c4:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
  4120c8:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
  4120cc:	mov	x25, #0x3ffffffffffffff     	// #288230376151711743
  4120d0:	str	x8, [x19, #200]
  4120d4:	b	41211c <wcrtomb@plt+0xf4bc>
  4120d8:	cmp	x28, x25
  4120dc:	b.gt	412244 <wcrtomb@plt+0xf5e4>
  4120e0:	lsl	x1, x28, #5
  4120e4:	bl	416e54 <wcrtomb@plt+0x141f4>
  4120e8:	ldr	x8, [x19, #8]
  4120ec:	str	x28, [x19, #16]
  4120f0:	ldp	q0, q1, [x26]
  4120f4:	add	x8, x8, #0x1
  4120f8:	add	x9, x0, x27, lsl #5
  4120fc:	stp	x0, x8, [x19]
  412100:	stp	q0, q1, [x9]
  412104:	add	x9, x19, x21, lsl #3
  412108:	add	x21, x21, #0x1
  41210c:	add	x8, x27, #0x114
  412110:	cmp	x21, #0x9
  412114:	str	x8, [x9, #200]
  412118:	b.eq	412248 <wcrtomb@plt+0xf5e8>  // b.none
  41211c:	ldr	x8, [x19, #8]
  412120:	add	x26, x22, x21, lsl #5
  412124:	cmp	x8, #0x0
  412128:	b.le	41218c <wcrtomb@plt+0xf52c>
  41212c:	ldr	x0, [x19]
  412130:	ldp	x9, x10, [x26]
  412134:	ldp	x11, x12, [x26, #16]
  412138:	mov	x27, xzr
  41213c:	add	x13, x0, #0x10
  412140:	ldp	x14, x15, [x13, #-16]
  412144:	ldp	x16, x17, [x13]
  412148:	eor	x14, x14, x9
  41214c:	eor	x15, x15, x10
  412150:	eor	x16, x16, x11
  412154:	orr	x14, x15, x14
  412158:	orr	x14, x14, x16
  41215c:	eor	x15, x17, x12
  412160:	orr	x14, x14, x15
  412164:	cbz	x14, 412104 <wcrtomb@plt+0xf4a4>
  412168:	add	x27, x27, #0x1
  41216c:	cmp	x8, x27
  412170:	add	x13, x13, #0x20
  412174:	b.ne	412140 <wcrtomb@plt+0xf4e0>  // b.any
  412178:	mov	x27, x8
  41217c:	ldr	x9, [x19, #16]
  412180:	cmp	x9, x8
  412184:	b.gt	4120f0 <wcrtomb@plt+0xf490>
  412188:	b	4121a0 <wcrtomb@plt+0xf540>
  41218c:	ldr	x0, [x19]
  412190:	mov	x27, xzr
  412194:	ldr	x9, [x19, #16]
  412198:	cmp	x9, x8
  41219c:	b.gt	4120f0 <wcrtomb@plt+0xf490>
  4121a0:	adds	x8, x9, x9, asr #1
  4121a4:	csel	x28, x23, x8, vs
  4121a8:	cmp	x28, x20
  4121ac:	csel	x8, x28, x20, lt  // lt = tstop
  4121b0:	tbnz	x8, #63, 4121dc <wcrtomb@plt+0xf57c>
  4121b4:	cmp	x8, x25
  4121b8:	b.le	4121f0 <wcrtomb@plt+0xf590>
  4121bc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4121c0:	lsr	x28, x8, #5
  4121c4:	and	x1, x8, #0x7fffffffffffffe0
  4121c8:	cbnz	x0, 412214 <wcrtomb@plt+0xf5b4>
  4121cc:	str	xzr, [x19, #16]
  4121d0:	cmp	x28, x9
  4121d4:	b.gt	4120e4 <wcrtomb@plt+0xf484>
  4121d8:	b	41221c <wcrtomb@plt+0xf5bc>
  4121dc:	cmn	x8, #0x1
  4121e0:	b.eq	4121fc <wcrtomb@plt+0xf59c>  // b.none
  4121e4:	sdiv	x10, x24, x8
  4121e8:	cmp	x10, #0x20
  4121ec:	b.lt	4121bc <wcrtomb@plt+0xf55c>  // b.tstop
  4121f0:	lsl	x1, x8, #5
  4121f4:	cmp	x1, #0x7f
  4121f8:	b.gt	412210 <wcrtomb@plt+0xf5b0>
  4121fc:	mov	w8, #0x80                  	// #128
  412200:	lsr	x28, x8, #5
  412204:	and	x1, x8, #0x7fffffffffffffe0
  412208:	cbnz	x0, 412214 <wcrtomb@plt+0xf5b4>
  41220c:	b	4121cc <wcrtomb@plt+0xf56c>
  412210:	cbz	x0, 4121cc <wcrtomb@plt+0xf56c>
  412214:	cmp	x28, x9
  412218:	b.gt	4120e4 <wcrtomb@plt+0xf484>
  41221c:	adds	x28, x9, #0x1
  412220:	b.vs	412244 <wcrtomb@plt+0xf5e4>
  412224:	cmp	x28, x20
  412228:	b.gt	412244 <wcrtomb@plt+0xf5e4>
  41222c:	tbz	x28, #63, 4120d8 <wcrtomb@plt+0xf478>
  412230:	cmn	x28, #0x1
  412234:	b.eq	4120e0 <wcrtomb@plt+0xf480>  // b.none
  412238:	sdiv	x8, x24, x28
  41223c:	cmp	x8, #0x20
  412240:	b.ge	4120e0 <wcrtomb@plt+0xf480>  // b.tcont
  412244:	bl	4170f0 <wcrtomb@plt+0x14490>
  412248:	ldr	x1, [x19, #200]
  41224c:	mov	x0, x19
  412250:	bl	40cb74 <wcrtomb@plt+0x9f14>
  412254:	ldr	x1, [x19, #208]
  412258:	mov	x0, x19
  41225c:	bl	40cb74 <wcrtomb@plt+0x9f14>
  412260:	mov	w1, #0xe0                  	// #224
  412264:	mov	w2, #0x3                   	// #3
  412268:	mov	x0, x19
  41226c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  412270:	ldr	x1, [x19, #224]
  412274:	mov	x0, x19
  412278:	bl	40cb74 <wcrtomb@plt+0x9f14>
  41227c:	mov	w1, #0x105                 	// #261
  412280:	mov	w2, #0x3                   	// #3
  412284:	mov	x0, x19
  412288:	bl	4107a0 <wcrtomb@plt+0xdb40>
  41228c:	mov	w1, #0x106                 	// #262
  412290:	mov	w2, #0x3                   	// #3
  412294:	mov	x0, x19
  412298:	bl	4107a0 <wcrtomb@plt+0xdb40>
  41229c:	mov	w1, #0xed                  	// #237
  4122a0:	mov	w2, #0x3                   	// #3
  4122a4:	mov	x0, x19
  4122a8:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4122ac:	ldr	x1, [x19, #240]
  4122b0:	mov	x0, x19
  4122b4:	bl	40cb74 <wcrtomb@plt+0x9f14>
  4122b8:	mov	w1, #0x105                 	// #261
  4122bc:	mov	w2, #0x3                   	// #3
  4122c0:	mov	x0, x19
  4122c4:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4122c8:	mov	w1, #0x106                 	// #262
  4122cc:	mov	w2, #0x3                   	// #3
  4122d0:	mov	x0, x19
  4122d4:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4122d8:	ldr	x1, [x19, #232]
  4122dc:	mov	x0, x19
  4122e0:	bl	40cb74 <wcrtomb@plt+0x9f14>
  4122e4:	mov	w1, #0xf0                  	// #240
  4122e8:	mov	w2, #0x3                   	// #3
  4122ec:	mov	x0, x19
  4122f0:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4122f4:	ldr	x1, [x19, #248]
  4122f8:	mov	x0, x19
  4122fc:	bl	40cb74 <wcrtomb@plt+0x9f14>
  412300:	mov	w1, #0x105                 	// #261
  412304:	mov	w2, #0x3                   	// #3
  412308:	mov	x0, x19
  41230c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  412310:	mov	w1, #0x106                 	// #262
  412314:	mov	w2, #0x3                   	// #3
  412318:	mov	x0, x19
  41231c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  412320:	mov	w1, #0xf4                  	// #244
  412324:	mov	w2, #0x3                   	// #3
  412328:	mov	x0, x19
  41232c:	bl	4107a0 <wcrtomb@plt+0xdb40>
  412330:	ldr	x1, [x19, #264]
  412334:	mov	x0, x19
  412338:	bl	40cb74 <wcrtomb@plt+0x9f14>
  41233c:	mov	w1, #0x105                 	// #261
  412340:	mov	w2, #0x3                   	// #3
  412344:	mov	x0, x19
  412348:	bl	4107a0 <wcrtomb@plt+0xdb40>
  41234c:	mov	w1, #0x106                 	// #262
  412350:	mov	w2, #0x3                   	// #3
  412354:	mov	x0, x19
  412358:	bl	4107a0 <wcrtomb@plt+0xdb40>
  41235c:	ldr	x1, [x19, #256]
  412360:	mov	x0, x19
  412364:	bl	40cb74 <wcrtomb@plt+0x9f14>
  412368:	ldr	x1, [x19, #216]
  41236c:	mov	x0, x19
  412370:	bl	40cb74 <wcrtomb@plt+0x9f14>
  412374:	mov	w1, #0x105                 	// #261
  412378:	mov	w2, #0x3                   	// #3
  41237c:	mov	x0, x19
  412380:	bl	4107a0 <wcrtomb@plt+0xdb40>
  412384:	mov	w1, #0x106                 	// #262
  412388:	mov	w2, #0x3                   	// #3
  41238c:	mov	x0, x19
  412390:	bl	4107a0 <wcrtomb@plt+0xdb40>
  412394:	ldr	x1, [x19, #216]
  412398:	mov	x0, x19
  41239c:	bl	40cb74 <wcrtomb@plt+0x9f14>
  4123a0:	mov	w1, #0x105                 	// #261
  4123a4:	mov	w2, #0x3                   	// #3
  4123a8:	mov	x0, x19
  4123ac:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4123b0:	mov	w1, #0x106                 	// #262
  4123b4:	mov	w2, #0x3                   	// #3
  4123b8:	mov	x0, x19
  4123bc:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4123c0:	ldr	x1, [x19, #216]
  4123c4:	mov	x0, x19
  4123c8:	bl	40cb74 <wcrtomb@plt+0x9f14>
  4123cc:	mov	w1, #0x105                 	// #261
  4123d0:	mov	w2, #0x3                   	// #3
  4123d4:	mov	x0, x19
  4123d8:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4123dc:	mov	w1, #0x106                 	// #262
  4123e0:	mov	w2, #0x3                   	// #3
  4123e4:	mov	x0, x19
  4123e8:	bl	4107a0 <wcrtomb@plt+0xdb40>
  4123ec:	b	411b2c <wcrtomb@plt+0xeecc>
  4123f0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4123f4:	add	x1, x1, #0x7b
  4123f8:	mov	w2, #0x5                   	// #5
  4123fc:	mov	x0, xzr
  412400:	bl	402b40 <dcgettext@plt>
  412404:	bl	40ac44 <wcrtomb@plt+0x7fe4>
  412408:	stp	x29, x30, [sp, #-48]!
  41240c:	stp	x20, x19, [sp, #32]
  412410:	ldr	x8, [x0, #144]
  412414:	sub	x20, x1, #0x1
  412418:	mov	x19, x0
  41241c:	str	x21, [sp, #16]
  412420:	ldr	x8, [x8, x20, lsl #3]
  412424:	mov	x29, sp
  412428:	sub	x9, x8, #0x101
  41242c:	cmp	x9, #0x3
  412430:	b.cs	412454 <wcrtomb@plt+0xf7f4>  // b.hs, b.nlast
  412434:	mov	x0, x19
  412438:	mov	x1, x20
  41243c:	bl	412408 <wcrtomb@plt+0xf7a8>
  412440:	add	x0, x0, #0x1
  412444:	ldp	x20, x19, [sp, #32]
  412448:	ldr	x21, [sp, #16]
  41244c:	ldp	x29, x30, [sp], #48
  412450:	ret
  412454:	sub	x8, x8, #0x105
  412458:	cmp	x8, #0x2
  41245c:	b.cs	412494 <wcrtomb@plt+0xf834>  // b.hs, b.nlast
  412460:	mov	x0, x19
  412464:	mov	x1, x20
  412468:	bl	412408 <wcrtomb@plt+0xf7a8>
  41246c:	mov	x21, x0
  412470:	sub	x1, x20, x0
  412474:	mov	x0, x19
  412478:	bl	412408 <wcrtomb@plt+0xf7a8>
  41247c:	add	x8, x21, x0
  412480:	add	x0, x8, #0x1
  412484:	ldp	x20, x19, [sp, #32]
  412488:	ldr	x21, [sp, #16]
  41248c:	ldp	x29, x30, [sp], #48
  412490:	ret
  412494:	mov	w0, #0x1                   	// #1
  412498:	ldp	x20, x19, [sp, #32]
  41249c:	ldr	x21, [sp, #16]
  4124a0:	ldp	x29, x30, [sp], #48
  4124a4:	ret
  4124a8:	stp	x29, x30, [sp, #-96]!
  4124ac:	stp	x28, x27, [sp, #16]
  4124b0:	stp	x26, x25, [sp, #32]
  4124b4:	stp	x24, x23, [sp, #48]
  4124b8:	stp	x22, x21, [sp, #64]
  4124bc:	stp	x20, x19, [sp, #80]
  4124c0:	ldr	x26, [x1, #8]
  4124c4:	mov	w19, w2
  4124c8:	mov	x21, x1
  4124cc:	mov	x20, x0
  4124d0:	cmp	x26, #0x1
  4124d4:	mov	x29, sp
  4124d8:	b.lt	4124f4 <wcrtomb@plt+0xf894>  // b.tstop
  4124dc:	ldr	x9, [x21]
  4124e0:	cmp	x26, #0x4
  4124e4:	b.hi	4124fc <wcrtomb@plt+0xf89c>  // b.pmore
  4124e8:	mov	x23, xzr
  4124ec:	mov	x8, xzr
  4124f0:	b	412568 <wcrtomb@plt+0xf908>
  4124f4:	mov	x23, xzr
  4124f8:	b	41258c <wcrtomb@plt+0xf92c>
  4124fc:	and	x8, x26, #0x3
  412500:	tst	x26, #0x3
  412504:	mov	w11, #0x4                   	// #4
  412508:	csel	x8, x11, x8, eq  // eq = none
  41250c:	sub	x8, x26, x8
  412510:	add	x10, x9, #0x20
  412514:	movi	v0.2d, #0x0
  412518:	mov	x11, x8
  41251c:	movi	v1.2d, #0x0
  412520:	sub	x12, x10, #0x20
  412524:	sub	x13, x10, #0x18
  412528:	add	x14, x10, #0x8
  41252c:	ld2	{v2.2d, v3.2d}, [x10]
  412530:	ld2	{v4.2d, v5.2d}, [x12]
  412534:	ld4	{v16.2s-v19.2s}, [x13]
  412538:	ld4	{v20.2s-v23.2s}, [x14]
  41253c:	subs	x11, x11, #0x4
  412540:	add	x10, x10, #0x40
  412544:	uaddw	v4.2d, v4.2d, v16.2s
  412548:	uaddw	v2.2d, v2.2d, v20.2s
  41254c:	eor	v0.16b, v4.16b, v0.16b
  412550:	eor	v1.16b, v2.16b, v1.16b
  412554:	b.ne	412520 <wcrtomb@plt+0xf8c0>  // b.any
  412558:	eor	v0.16b, v1.16b, v0.16b
  41255c:	dup	v1.2d, v0.d[1]
  412560:	eor	v0.16b, v0.16b, v1.16b
  412564:	fmov	x23, d0
  412568:	add	x9, x9, x8, lsl #4
  41256c:	add	x9, x9, #0x8
  412570:	ldur	x10, [x9, #-8]
  412574:	ldr	w11, [x9], #16
  412578:	add	x8, x8, #0x1
  41257c:	cmp	x8, x26
  412580:	add	x10, x10, x11
  412584:	eor	x23, x10, x23
  412588:	b.lt	412570 <wcrtomb@plt+0xf910>  // b.tstop
  41258c:	ldr	x8, [x20, #304]
  412590:	cmp	x8, #0x1
  412594:	b.lt	41263c <wcrtomb@plt+0xf9dc>  // b.tstop
  412598:	ldr	x9, [x20, #296]
  41259c:	cmp	x26, #0x1
  4125a0:	b.lt	4126f4 <wcrtomb@plt+0xfa94>  // b.tstop
  4125a4:	mov	x22, xzr
  4125a8:	mov	w10, #0x50                  	// #80
  4125ac:	b	4125c0 <wcrtomb@plt+0xf960>
  4125b0:	cbz	x13, 412950 <wcrtomb@plt+0xfcf0>
  4125b4:	add	x22, x22, #0x1
  4125b8:	cmp	x22, x8
  4125bc:	b.ge	412640 <wcrtomb@plt+0xf9e0>  // b.tcont
  4125c0:	mul	x11, x22, x10
  4125c4:	ldr	x11, [x9, x11]
  4125c8:	cmp	x23, x11
  4125cc:	b.ne	4125b4 <wcrtomb@plt+0xf954>  // b.any
  4125d0:	madd	x11, x22, x10, x9
  4125d4:	ldr	x11, [x11, #16]
  4125d8:	cmp	x26, x11
  4125dc:	b.ne	4125b4 <wcrtomb@plt+0xf954>  // b.any
  4125e0:	madd	x11, x22, x10, x9
  4125e4:	ldrb	w11, [x11, #32]
  4125e8:	cmp	w11, w19
  4125ec:	b.ne	4125b4 <wcrtomb@plt+0xf954>  // b.any
  4125f0:	madd	x11, x22, x10, x9
  4125f4:	ldr	x11, [x11, #8]
  4125f8:	ldr	x12, [x21]
  4125fc:	mov	x13, x26
  412600:	add	x11, x11, #0x8
  412604:	add	x12, x12, #0x8
  412608:	ldr	w14, [x12]
  41260c:	ldr	w15, [x11]
  412610:	cmp	w14, w15
  412614:	b.ne	4125b0 <wcrtomb@plt+0xf950>  // b.any
  412618:	ldur	x14, [x12, #-8]
  41261c:	ldur	x15, [x11, #-8]
  412620:	cmp	x14, x15
  412624:	b.ne	4125b0 <wcrtomb@plt+0xf950>  // b.any
  412628:	subs	x13, x13, #0x1
  41262c:	add	x11, x11, #0x10
  412630:	add	x12, x12, #0x10
  412634:	b.ne	412608 <wcrtomb@plt+0xf9a8>  // b.any
  412638:	b	412950 <wcrtomb@plt+0xfcf0>
  41263c:	mov	x22, xzr
  412640:	cmp	x26, #0x1
  412644:	b.lt	4126b4 <wcrtomb@plt+0xfa54>  // b.tstop
  412648:	ldr	x9, [x20, #336]
  41264c:	ldr	x10, [x21]
  412650:	mov	x25, xzr
  412654:	mov	w24, wzr
  412658:	and	w11, w19, #0x7
  41265c:	mov	w12, #0x1ff                 	// #511
  412660:	mov	x13, x26
  412664:	b	412684 <wcrtomb@plt+0xfa24>
  412668:	ldr	x15, [x20, #144]
  41266c:	ldr	x14, [x15, x14, lsl #3]
  412670:	cmp	x14, #0x112
  412674:	csel	w24, w12, w24, eq  // eq = none
  412678:	subs	x13, x13, #0x1
  41267c:	add	x10, x10, #0x10
  412680:	b.eq	4126bc <wcrtomb@plt+0xfa5c>  // b.none
  412684:	ldr	x14, [x10]
  412688:	ldr	w15, [x9, x14, lsl #2]
  41268c:	cbz	w15, 412668 <wcrtomb@plt+0xfa08>
  412690:	orr	w16, w15, w15, lsr #3
  412694:	orr	w16, w16, w15, lsr #6
  412698:	tst	w11, w16
  41269c:	csel	w15, wzr, w15, eq  // eq = none
  4126a0:	orr	w24, w15, w24
  4126a4:	cbnz	x25, 412678 <wcrtomb@plt+0xfa18>
  4126a8:	ldr	x15, [x20, #144]
  4126ac:	ldr	x25, [x15, x14, lsl #3]
  4126b0:	b	412678 <wcrtomb@plt+0xfa18>
  4126b4:	mov	w24, wzr
  4126b8:	mov	x25, xzr
  4126bc:	ldr	x9, [x20, #312]
  4126c0:	ldr	x0, [x20, #296]
  4126c4:	cmp	x9, x8
  4126c8:	b.gt	4127ec <wcrtomb@plt+0xfb8c>
  4126cc:	adds	x8, x9, x9, asr #1
  4126d0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4126d4:	csel	x26, x10, x8, vs
  4126d8:	tbnz	x26, #63, 41273c <wcrtomb@plt+0xfadc>
  4126dc:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
  4126e0:	movk	x8, #0x199, lsl #48
  4126e4:	cmp	x26, x8
  4126e8:	b.le	412754 <wcrtomb@plt+0xfaf4>
  4126ec:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4126f0:	b	412768 <wcrtomb@plt+0xfb08>
  4126f4:	mov	x22, xzr
  4126f8:	add	x9, x9, #0x10
  4126fc:	b	412710 <wcrtomb@plt+0xfab0>
  412700:	add	x22, x22, #0x1
  412704:	cmp	x22, x8
  412708:	add	x9, x9, #0x50
  41270c:	b.ge	412640 <wcrtomb@plt+0xf9e0>  // b.tcont
  412710:	ldur	x10, [x9, #-16]
  412714:	cmp	x23, x10
  412718:	b.ne	412700 <wcrtomb@plt+0xfaa0>  // b.any
  41271c:	ldr	x10, [x9]
  412720:	cmp	x26, x10
  412724:	b.ne	412700 <wcrtomb@plt+0xfaa0>  // b.any
  412728:	ldrb	w10, [x9, #16]
  41272c:	cmp	w10, w19
  412730:	b.ne	412700 <wcrtomb@plt+0xfaa0>  // b.any
  412734:	cbnz	x26, 412700 <wcrtomb@plt+0xfaa0>
  412738:	b	412950 <wcrtomb@plt+0xfcf0>
  41273c:	cmn	x26, #0x1
  412740:	b.eq	412764 <wcrtomb@plt+0xfb04>  // b.none
  412744:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412748:	sdiv	x8, x8, x26
  41274c:	cmp	x8, #0x50
  412750:	b.lt	4126ec <wcrtomb@plt+0xfa8c>  // b.tstop
  412754:	add	x8, x26, x26, lsl #2
  412758:	lsl	x1, x8, #4
  41275c:	cmp	x1, #0x7f
  412760:	b.gt	412794 <wcrtomb@plt+0xfb34>
  412764:	mov	w8, #0x80                  	// #128
  412768:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  41276c:	movk	x10, #0xcccd
  412770:	umulh	x8, x8, x10
  412774:	lsr	x26, x8, #6
  412778:	add	x8, x26, x26, lsl #2
  41277c:	lsl	x1, x8, #4
  412780:	cbnz	x0, 412798 <wcrtomb@plt+0xfb38>
  412784:	str	xzr, [x20, #312]
  412788:	cmp	x26, x9
  41278c:	b.gt	4127e0 <wcrtomb@plt+0xfb80>
  412790:	b	4127a0 <wcrtomb@plt+0xfb40>
  412794:	cbz	x0, 412784 <wcrtomb@plt+0xfb24>
  412798:	cmp	x26, x9
  41279c:	b.gt	4127e0 <wcrtomb@plt+0xfb80>
  4127a0:	adds	x26, x9, #0x1
  4127a4:	b.vs	412970 <wcrtomb@plt+0xfd10>
  4127a8:	tbnz	x26, #63, 4127c0 <wcrtomb@plt+0xfb60>
  4127ac:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
  4127b0:	movk	x8, #0x199, lsl #48
  4127b4:	cmp	x26, x8
  4127b8:	b.le	4127d8 <wcrtomb@plt+0xfb78>
  4127bc:	b	412970 <wcrtomb@plt+0xfd10>
  4127c0:	cmn	x26, #0x1
  4127c4:	b.eq	4127d8 <wcrtomb@plt+0xfb78>  // b.none
  4127c8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4127cc:	sdiv	x8, x8, x26
  4127d0:	cmp	x8, #0x50
  4127d4:	b.lt	412970 <wcrtomb@plt+0xfd10>  // b.tstop
  4127d8:	add	x8, x26, x26, lsl #2
  4127dc:	lsl	x1, x8, #4
  4127e0:	bl	416e54 <wcrtomb@plt+0x141f4>
  4127e4:	str	x26, [x20, #312]
  4127e8:	ldr	x26, [x21, #8]
  4127ec:	mov	w8, #0x50                  	// #80
  4127f0:	mul	x8, x22, x8
  4127f4:	lsr	x9, x26, #59
  4127f8:	str	x0, [x20, #296]
  4127fc:	str	x23, [x0, x8]
  412800:	cbnz	x9, 412970 <wcrtomb@plt+0xfd10>
  412804:	add	x8, x22, x22, lsl #2
  412808:	lsl	x27, x8, #4
  41280c:	add	x23, x0, x27
  412810:	lsl	x0, x26, #4
  412814:	bl	416dd4 <wcrtomb@plt+0x14174>
  412818:	stp	xzr, x26, [x23, #16]
  41281c:	str	x0, [x23, #8]
  412820:	ldr	x23, [x20, #296]
  412824:	add	x27, x23, x27
  412828:	ldr	x9, [x27, #24]!
  41282c:	ldr	x8, [x21, #8]
  412830:	sub	x26, x27, #0x10
  412834:	cmp	x9, x8
  412838:	b.ge	4128fc <wcrtomb@plt+0xfc9c>  // b.tcont
  41283c:	ldr	x0, [x26]
  412840:	bl	402a10 <free@plt>
  412844:	ldr	x8, [x27]
  412848:	ldr	x9, [x21, #8]
  41284c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  412850:	adds	x10, x8, x8, asr #1
  412854:	csel	x28, x11, x10, vs
  412858:	tbnz	x28, #63, 412870 <wcrtomb@plt+0xfc10>
  41285c:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  412860:	cmp	x28, x10
  412864:	b.le	412888 <wcrtomb@plt+0xfc28>
  412868:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41286c:	b	412898 <wcrtomb@plt+0xfc38>
  412870:	cmn	x28, #0x1
  412874:	b.eq	412894 <wcrtomb@plt+0xfc34>  // b.none
  412878:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41287c:	sdiv	x10, x10, x28
  412880:	cmp	x10, #0x10
  412884:	b.lt	412868 <wcrtomb@plt+0xfc08>  // b.tstop
  412888:	lsl	x1, x28, #4
  41288c:	cmp	x1, #0x7f
  412890:	b.gt	4128a0 <wcrtomb@plt+0xfc40>
  412894:	mov	w10, #0x80                  	// #128
  412898:	lsr	x28, x10, #4
  41289c:	and	x1, x10, #0x7ffffffffffffff0
  4128a0:	cmp	x28, x9
  4128a4:	str	xzr, [x27]
  4128a8:	b.ge	4128e8 <wcrtomb@plt+0xfc88>  // b.tcont
  4128ac:	sub	x9, x9, x8
  4128b0:	adds	x28, x8, x9
  4128b4:	b.vs	412970 <wcrtomb@plt+0xfd10>
  4128b8:	tbnz	x28, #63, 4128cc <wcrtomb@plt+0xfc6c>
  4128bc:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4128c0:	cmp	x28, x8
  4128c4:	b.le	4128e4 <wcrtomb@plt+0xfc84>
  4128c8:	b	412970 <wcrtomb@plt+0xfd10>
  4128cc:	cmn	x28, #0x1
  4128d0:	b.eq	4128e4 <wcrtomb@plt+0xfc84>  // b.none
  4128d4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4128d8:	sdiv	x8, x8, x28
  4128dc:	cmp	x8, #0x10
  4128e0:	b.lt	412970 <wcrtomb@plt+0xfd10>  // b.tstop
  4128e4:	lsl	x1, x28, #4
  4128e8:	mov	x0, xzr
  4128ec:	bl	416e54 <wcrtomb@plt+0x141f4>
  4128f0:	str	x28, [x27]
  4128f4:	str	x0, [x26]
  4128f8:	ldr	x8, [x21, #8]
  4128fc:	mov	w9, #0x50                  	// #80
  412900:	madd	x9, x22, x9, x23
  412904:	str	x8, [x9, #16]
  412908:	ldr	x8, [x21, #8]
  41290c:	cbz	x8, 412920 <wcrtomb@plt+0xfcc0>
  412910:	ldr	x0, [x26]
  412914:	ldr	x1, [x21]
  412918:	lsl	x2, x8, #4
  41291c:	bl	402580 <memcpy@plt>
  412920:	ldr	x8, [x20, #296]
  412924:	mov	w9, #0x50                  	// #80
  412928:	mov	x10, #0xffffffffffffffff    	// #-1
  41292c:	madd	x8, x22, x9, x8
  412930:	strb	w19, [x8, #32]
  412934:	strh	w24, [x8, #34]
  412938:	stp	xzr, xzr, [x8, #48]
  41293c:	str	x25, [x8, #40]
  412940:	str	x10, [x8, #72]
  412944:	ldr	x8, [x20, #304]
  412948:	add	x8, x8, #0x1
  41294c:	str	x8, [x20, #304]
  412950:	mov	x0, x22
  412954:	ldp	x20, x19, [sp, #80]
  412958:	ldp	x22, x21, [sp, #64]
  41295c:	ldp	x24, x23, [sp, #48]
  412960:	ldp	x26, x25, [sp, #32]
  412964:	ldp	x28, x27, [sp, #16]
  412968:	ldp	x29, x30, [sp], #96
  41296c:	ret
  412970:	bl	4170f0 <wcrtomb@plt+0x14490>
  412974:	stp	x29, x30, [sp, #-64]!
  412978:	stp	x22, x21, [sp, #32]
  41297c:	stp	x20, x19, [sp, #48]
  412980:	ldr	x8, [x3, #16]
  412984:	ldr	x9, [x0, #8]
  412988:	ldr	x10, [x1, #8]
  41298c:	mov	x19, x3
  412990:	mov	x20, x1
  412994:	sub	x8, x8, x9
  412998:	mov	x21, x0
  41299c:	cmp	x8, x10
  4129a0:	mov	w22, w2
  4129a4:	str	x23, [sp, #16]
  4129a8:	mov	x29, sp
  4129ac:	b.ge	412a70 <wcrtomb@plt+0xfe10>  // b.tcont
  4129b0:	ldr	x0, [x19]
  4129b4:	bl	402a10 <free@plt>
  4129b8:	ldr	x8, [x21, #8]
  4129bc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4129c0:	str	x8, [x19, #16]
  4129c4:	ldr	x9, [x20, #8]
  4129c8:	adds	x10, x8, x8, asr #1
  4129cc:	csel	x23, x11, x10, vs
  4129d0:	tbnz	x23, #63, 4129e8 <wcrtomb@plt+0xfd88>
  4129d4:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  4129d8:	cmp	x23, x10
  4129dc:	b.le	412a00 <wcrtomb@plt+0xfda0>
  4129e0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4129e4:	b	412a10 <wcrtomb@plt+0xfdb0>
  4129e8:	cmn	x23, #0x1
  4129ec:	b.eq	412a0c <wcrtomb@plt+0xfdac>  // b.none
  4129f0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4129f4:	sdiv	x10, x10, x23
  4129f8:	cmp	x10, #0x10
  4129fc:	b.lt	4129e0 <wcrtomb@plt+0xfd80>  // b.tstop
  412a00:	lsl	x1, x23, #4
  412a04:	cmp	x1, #0x7f
  412a08:	b.gt	412a18 <wcrtomb@plt+0xfdb8>
  412a0c:	mov	w10, #0x80                  	// #128
  412a10:	lsr	x23, x10, #4
  412a14:	and	x1, x10, #0x7ffffffffffffff0
  412a18:	sub	x10, x23, x8
  412a1c:	cmp	x10, x9
  412a20:	str	xzr, [x19, #16]
  412a24:	b.ge	412a60 <wcrtomb@plt+0xfe00>  // b.tcont
  412a28:	adds	x23, x8, x9
  412a2c:	b.vs	412b80 <wcrtomb@plt+0xff20>
  412a30:	tbnz	x23, #63, 412a44 <wcrtomb@plt+0xfde4>
  412a34:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412a38:	cmp	x23, x8
  412a3c:	b.le	412a5c <wcrtomb@plt+0xfdfc>
  412a40:	b	412b80 <wcrtomb@plt+0xff20>
  412a44:	cmn	x23, #0x1
  412a48:	b.eq	412a5c <wcrtomb@plt+0xfdfc>  // b.none
  412a4c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412a50:	sdiv	x8, x8, x23
  412a54:	cmp	x8, #0x10
  412a58:	b.lt	412b80 <wcrtomb@plt+0xff20>  // b.tstop
  412a5c:	lsl	x1, x23, #4
  412a60:	mov	x0, xzr
  412a64:	bl	416e54 <wcrtomb@plt+0x141f4>
  412a68:	str	x23, [x19, #16]
  412a6c:	str	x0, [x19]
  412a70:	str	xzr, [x19, #8]
  412a74:	ldr	x8, [x21, #8]
  412a78:	ldr	x12, [x20, #8]
  412a7c:	cmp	x8, #0x0
  412a80:	cset	w11, gt
  412a84:	b.gt	412a90 <wcrtomb@plt+0xfe30>
  412a88:	cmp	x12, #0x1
  412a8c:	b.lt	412b6c <wcrtomb@plt+0xff0c>  // b.tstop
  412a90:	mov	x8, xzr
  412a94:	mov	x10, xzr
  412a98:	mov	x9, xzr
  412a9c:	cmp	x10, x12
  412aa0:	b.ge	412ae0 <wcrtomb@plt+0xfe80>  // b.tcont
  412aa4:	tbz	w11, #0, 412b18 <wcrtomb@plt+0xfeb8>
  412aa8:	ldr	x12, [x21]
  412aac:	ldr	x11, [x20]
  412ab0:	lsl	x13, x8, #4
  412ab4:	lsl	x14, x10, #4
  412ab8:	ldr	x12, [x12, x13]
  412abc:	ldr	x13, [x11, x14]
  412ac0:	cmp	x12, x13
  412ac4:	b.gt	412b1c <wcrtomb@plt+0xfebc>
  412ac8:	b.ne	412ae0 <wcrtomb@plt+0xfe80>  // b.any
  412acc:	add	x11, x11, x10, lsl #4
  412ad0:	ldr	w11, [x11, #8]
  412ad4:	add	x10, x10, #0x1
  412ad8:	and	w11, w11, w22
  412adc:	b	412ae4 <wcrtomb@plt+0xfe84>
  412ae0:	mov	w11, wzr
  412ae4:	ldr	x12, [x21]
  412ae8:	ldr	x13, [x19]
  412aec:	add	x12, x12, x8, lsl #4
  412af0:	ldr	x14, [x12]
  412af4:	add	x13, x13, x9, lsl #4
  412af8:	add	x8, x8, #0x1
  412afc:	add	x9, x9, #0x1
  412b00:	str	x14, [x13]
  412b04:	ldr	w12, [x12, #8]
  412b08:	str	x9, [x19, #8]
  412b0c:	orr	w11, w12, w11
  412b10:	str	w11, [x13, #8]
  412b14:	b	412b50 <wcrtomb@plt+0xfef0>
  412b18:	ldr	x11, [x20]
  412b1c:	add	x12, x11, x10, lsl #4
  412b20:	ldr	w12, [x12, #8]
  412b24:	ands	w12, w12, w22
  412b28:	b.eq	412b4c <wcrtomb@plt+0xfeec>  // b.none
  412b2c:	ldr	x13, [x19]
  412b30:	lsl	x14, x10, #4
  412b34:	ldr	x11, [x11, x14]
  412b38:	add	x13, x13, x9, lsl #4
  412b3c:	add	x9, x9, #0x1
  412b40:	str	x11, [x13]
  412b44:	str	x9, [x19, #8]
  412b48:	str	w12, [x13, #8]
  412b4c:	add	x10, x10, #0x1
  412b50:	ldr	x11, [x21, #8]
  412b54:	ldr	x12, [x20, #8]
  412b58:	cmp	x8, x11
  412b5c:	cset	w11, lt  // lt = tstop
  412b60:	b.lt	412a9c <wcrtomb@plt+0xfe3c>  // b.tstop
  412b64:	cmp	x10, x12
  412b68:	b.lt	412a9c <wcrtomb@plt+0xfe3c>  // b.tstop
  412b6c:	ldp	x20, x19, [sp, #48]
  412b70:	ldp	x22, x21, [sp, #32]
  412b74:	ldr	x23, [sp, #16]
  412b78:	ldp	x29, x30, [sp], #64
  412b7c:	ret
  412b80:	bl	4170f0 <wcrtomb@plt+0x14490>
  412b84:	ldr	x8, [x0]
  412b88:	ldr	x9, [x1]
  412b8c:	cmp	x8, x9
  412b90:	cset	w8, gt
  412b94:	csinv	w0, w8, wzr, ge  // ge = tcont
  412b98:	ret
  412b9c:	sub	sp, sp, #0xa0
  412ba0:	stp	x29, x30, [sp, #64]
  412ba4:	stp	x28, x27, [sp, #80]
  412ba8:	stp	x26, x25, [sp, #96]
  412bac:	stp	x24, x23, [sp, #112]
  412bb0:	stp	x22, x21, [sp, #128]
  412bb4:	stp	x20, x19, [sp, #144]
  412bb8:	ldr	x8, [x0, #304]
  412bbc:	mov	w21, w5
  412bc0:	mov	x24, x4
  412bc4:	mov	x19, x2
  412bc8:	mov	x23, x0
  412bcc:	cmp	x8, #0x400
  412bd0:	mov	x26, x1
  412bd4:	add	x29, sp, #0x40
  412bd8:	str	w3, [sp, #28]
  412bdc:	b.lt	412d90 <wcrtomb@plt+0x10130>  // b.tstop
  412be0:	ldrsw	x20, [x23, #364]
  412be4:	cmp	x8, x20
  412be8:	b.le	412c30 <wcrtomb@plt+0xffd0>
  412bec:	add	x8, x20, x20, lsl #2
  412bf0:	lsl	x22, x8, #4
  412bf4:	ldr	x8, [x23, #296]
  412bf8:	add	x8, x8, x22
  412bfc:	ldr	x0, [x8, #8]
  412c00:	bl	402a10 <free@plt>
  412c04:	ldr	x8, [x23, #296]
  412c08:	add	x8, x8, x22
  412c0c:	ldr	x0, [x8, #48]
  412c10:	bl	402a10 <free@plt>
  412c14:	ldr	x8, [x23, #304]
  412c18:	add	x20, x20, #0x1
  412c1c:	add	x22, x22, #0x50
  412c20:	cmp	x20, x8
  412c24:	b.lt	412bf4 <wcrtomb@plt+0xff94>  // b.tstop
  412c28:	ldrsw	x20, [x23, #364]
  412c2c:	mov	x1, x26
  412c30:	ldr	x8, [x23, #368]
  412c34:	str	x20, [x23, #304]
  412c38:	cbz	x8, 412cc0 <wcrtomb@plt+0x10060>
  412c3c:	ldr	x9, [x23, #352]
  412c40:	cmp	x9, #0x1
  412c44:	b.lt	412cb8 <wcrtomb@plt+0x10058>  // b.tstop
  412c48:	ldr	x0, [x8]
  412c4c:	bl	402a10 <free@plt>
  412c50:	ldr	x8, [x23, #376]
  412c54:	ldr	x0, [x8]
  412c58:	bl	402a10 <free@plt>
  412c5c:	ldr	x8, [x23, #376]
  412c60:	str	xzr, [x8]
  412c64:	ldr	x8, [x23, #368]
  412c68:	str	xzr, [x8]
  412c6c:	ldr	x8, [x23, #352]
  412c70:	cmp	x8, #0x2
  412c74:	b.lt	412cb8 <wcrtomb@plt+0x10058>  // b.tstop
  412c78:	mov	w20, #0x1                   	// #1
  412c7c:	ldr	x8, [x23, #368]
  412c80:	lsl	x22, x20, #3
  412c84:	ldr	x0, [x8, x22]
  412c88:	bl	402a10 <free@plt>
  412c8c:	ldr	x8, [x23, #376]
  412c90:	ldr	x0, [x8, x22]
  412c94:	bl	402a10 <free@plt>
  412c98:	ldr	x8, [x23, #376]
  412c9c:	add	x20, x20, #0x1
  412ca0:	str	xzr, [x8, x22]
  412ca4:	ldr	x8, [x23, #368]
  412ca8:	str	xzr, [x8, x22]
  412cac:	ldr	x8, [x23, #352]
  412cb0:	cmp	x20, x8
  412cb4:	b.lt	412c7c <wcrtomb@plt+0x1001c>  // b.tstop
  412cb8:	mov	x1, x26
  412cbc:	str	wzr, [x23, #360]
  412cc0:	ldrb	w8, [x23, #1048]
  412cc4:	cbz	w8, 412d90 <wcrtomb@plt+0x10130>
  412cc8:	ldr	x8, [x23, #432]
  412ccc:	cbz	x8, 412d90 <wcrtomb@plt+0x10130>
  412cd0:	ldr	x9, [x23, #352]
  412cd4:	tbnz	x9, #63, 412d20 <wcrtomb@plt+0x100c0>
  412cd8:	ldur	x0, [x8, #-8]
  412cdc:	bl	402a10 <free@plt>
  412ce0:	ldr	x8, [x23, #432]
  412ce4:	stur	xzr, [x8, #-8]
  412ce8:	ldr	x8, [x23, #352]
  412cec:	cmp	x8, #0x1
  412cf0:	b.lt	412d20 <wcrtomb@plt+0x100c0>  // b.tstop
  412cf4:	mov	x20, xzr
  412cf8:	ldr	x8, [x23, #432]
  412cfc:	lsl	x22, x20, #3
  412d00:	ldr	x0, [x8, x22]
  412d04:	bl	402a10 <free@plt>
  412d08:	ldr	x8, [x23, #432]
  412d0c:	add	x20, x20, #0x1
  412d10:	str	xzr, [x8, x22]
  412d14:	ldr	x8, [x23, #352]
  412d18:	cmp	x20, x8
  412d1c:	b.lt	412cf8 <wcrtomb@plt+0x10098>  // b.tstop
  412d20:	ldr	w8, [x23, #364]
  412d24:	mov	x1, x26
  412d28:	cmp	w8, #0x1
  412d2c:	b.lt	412d8c <wcrtomb@plt+0x1012c>  // b.tstop
  412d30:	ldr	x10, [x23, #296]
  412d34:	cmp	w8, #0x1
  412d38:	b.ne	412d44 <wcrtomb@plt+0x100e4>  // b.any
  412d3c:	mov	x9, xzr
  412d40:	b	412d6c <wcrtomb@plt+0x1010c>
  412d44:	and	x9, x8, #0xfffffffe
  412d48:	add	x11, x10, #0x98
  412d4c:	mov	x12, #0xffffffffffffffff    	// #-1
  412d50:	mov	x13, x9
  412d54:	stur	x12, [x11, #-80]
  412d58:	str	x12, [x11], #160
  412d5c:	subs	x13, x13, #0x2
  412d60:	b.ne	412d54 <wcrtomb@plt+0x100f4>  // b.any
  412d64:	cmp	x9, x8
  412d68:	b.eq	412d8c <wcrtomb@plt+0x1012c>  // b.none
  412d6c:	mov	w11, #0x50                  	// #80
  412d70:	madd	x10, x9, x11, x10
  412d74:	add	x10, x10, #0x48
  412d78:	mov	x11, #0xffffffffffffffff    	// #-1
  412d7c:	add	x9, x9, #0x1
  412d80:	cmp	x9, x8
  412d84:	str	x11, [x10], #80
  412d88:	b.cc	412d7c <wcrtomb@plt+0x1011c>  // b.lo, b.ul, b.last
  412d8c:	str	xzr, [x23, #440]
  412d90:	ldr	x8, [x23, #352]
  412d94:	cbnz	x8, 412da4 <wcrtomb@plt+0x10144>
  412d98:	mov	x0, x23
  412d9c:	bl	41324c <wcrtomb@plt+0x105ec>
  412da0:	mov	x1, x26
  412da4:	stur	x1, [x29, #-16]
  412da8:	ldr	x22, [x23, #368]
  412dac:	ldrb	w8, [x23, #459]
  412db0:	ldrb	w25, [x19]
  412db4:	str	x8, [sp, #32]
  412db8:	strb	w8, [x19]
  412dbc:	tbz	w21, #0, 412dec <wcrtomb@plt+0x1018c>
  412dc0:	ldr	x8, [x23, #424]
  412dc4:	str	xzr, [x23, #272]
  412dc8:	cbnz	x8, 412dec <wcrtomb@plt+0x1018c>
  412dcc:	ldr	x20, [x23, #176]
  412dd0:	lsr	x8, x20, #59
  412dd4:	cbnz	x8, 413248 <wcrtomb@plt+0x105e8>
  412dd8:	lsl	x0, x20, #4
  412ddc:	bl	416dd4 <wcrtomb@plt+0x14174>
  412de0:	mov	x1, x26
  412de4:	stp	xzr, x20, [x23, #416]
  412de8:	str	x0, [x23, #408]
  412dec:	ldr	x8, [sp, #32]
  412df0:	str	x24, [sp, #8]
  412df4:	mov	x27, xzr
  412df8:	mov	x28, xzr
  412dfc:	add	x8, x23, x8
  412e00:	add	x24, x23, #0x110
  412e04:	add	x8, x8, #0x1cc
  412e08:	str	w25, [sp, #4]
  412e0c:	stur	xzr, [x29, #-24]
  412e10:	str	x8, [sp, #16]
  412e14:	b	412e38 <wcrtomb@plt+0x101d8>
  412e18:	ldr	x8, [x23, #376]
  412e1c:	add	x9, x26, #0x1
  412e20:	mov	x28, x20
  412e24:	mov	x1, x25
  412e28:	ldr	x8, [x8, x20, lsl #3]
  412e2c:	stur	x9, [x29, #-16]
  412e30:	ldrb	w9, [x26]
  412e34:	ldr	x27, [x8, x9, lsl #3]
  412e38:	ldr	x26, [x22, x27, lsl #3]
  412e3c:	cbz	x26, 412ff8 <wcrtomb@plt+0x10398>
  412e40:	mov	x25, x1
  412e44:	b	412e6c <wcrtomb@plt+0x1020c>
  412e48:	add	x11, x10, #0x1
  412e4c:	stur	x11, [x29, #-16]
  412e50:	ldrb	w10, [x10]
  412e54:	mov	x27, x8
  412e58:	ldr	x20, [x9, x10, lsl #3]
  412e5c:	ldr	x26, [x22, x20, lsl #3]
  412e60:	mov	x28, x27
  412e64:	mov	x27, x20
  412e68:	cbz	x26, 413000 <wcrtomb@plt+0x103a0>
  412e6c:	ldrsw	x8, [x23, #364]
  412e70:	cmp	x27, x8
  412e74:	b.ge	412ee4 <wcrtomb@plt+0x10284>  // b.tcont
  412e78:	tbz	w21, #0, 412e9c <wcrtomb@plt+0x1023c>
  412e7c:	ldr	x8, [x23, #296]
  412e80:	mov	w9, #0x50                  	// #80
  412e84:	madd	x8, x27, x9, x8
  412e88:	ldr	x8, [x8, #56]
  412e8c:	cbz	x8, 412e9c <wcrtomb@plt+0x1023c>
  412e90:	ldur	x20, [x29, #-16]
  412e94:	ldrb	w8, [x20]
  412e98:	b	412ed0 <wcrtomb@plt+0x10270>
  412e9c:	ldur	x20, [x29, #-16]
  412ea0:	ldrb	w8, [x20]
  412ea4:	ldr	x9, [x26, x8, lsl #3]
  412ea8:	cmp	x9, x27
  412eac:	b.ne	412ecc <wcrtomb@plt+0x1026c>  // b.any
  412eb0:	add	x9, x20, #0x1
  412eb4:	stur	x9, [x29, #-16]
  412eb8:	ldrb	w8, [x9], #1
  412ebc:	ldr	x10, [x26, x8, lsl #3]
  412ec0:	cmp	x10, x27
  412ec4:	b.eq	412eb4 <wcrtomb@plt+0x10254>  // b.none
  412ec8:	sub	x20, x9, #0x1
  412ecc:	tbz	w21, #0, 412f90 <wcrtomb@plt+0x10330>
  412ed0:	add	x8, x23, x8
  412ed4:	ldrb	w8, [x8, #716]
  412ed8:	cbz	w8, 412f48 <wcrtomb@plt+0x102e8>
  412edc:	mov	x25, x20
  412ee0:	stur	x25, [x29, #-16]
  412ee4:	tbz	w21, #0, 412f8c <wcrtomb@plt+0x1032c>
  412ee8:	ldr	x8, [x23, #296]
  412eec:	mov	w9, #0x50                  	// #80
  412ef0:	madd	x8, x27, x9, x8
  412ef4:	ldr	x9, [x8, #56]
  412ef8:	ldur	x8, [x29, #-16]
  412efc:	cbz	x9, 412fe4 <wcrtomb@plt+0x10384>
  412f00:	cmp	x8, x19
  412f04:	b.cs	412fe4 <wcrtomb@plt+0x10384>  // b.hs, b.nlast
  412f08:	ldrb	w9, [x8]
  412f0c:	add	x9, x23, x9, lsl #2
  412f10:	ldr	w9, [x9, #1308]
  412f14:	cmn	w9, #0x1
  412f18:	b.ne	412fe4 <wcrtomb@plt+0x10384>  // b.any
  412f1c:	sub	x2, x29, #0x10
  412f20:	mov	x0, x23
  412f24:	mov	x1, x27
  412f28:	mov	x3, x19
  412f2c:	bl	413424 <wcrtomb@plt+0x107c4>
  412f30:	ldur	x25, [x29, #-16]
  412f34:	ldr	x22, [x23, #368]
  412f38:	mov	x20, x0
  412f3c:	b	412e5c <wcrtomb@plt+0x101fc>
  412f40:	mov	w0, #0x1                   	// #1
  412f44:	add	x25, x25, w0, sxtw
  412f48:	cmp	x25, x20
  412f4c:	b.cs	412ee0 <wcrtomb@plt+0x10280>  // b.hs, b.nlast
  412f50:	ldrb	w8, [x25]
  412f54:	add	x8, x23, x8, lsl #2
  412f58:	ldr	w8, [x8, #1308]
  412f5c:	cmn	w8, #0x1
  412f60:	b.ne	412f40 <wcrtomb@plt+0x102e0>  // b.any
  412f64:	sub	x2, x19, x25
  412f68:	sub	x0, x29, #0x4
  412f6c:	mov	x1, x25
  412f70:	mov	x3, x24
  412f74:	bl	417134 <wcrtomb@plt+0x144d4>
  412f78:	sub	x8, x0, #0x1
  412f7c:	cmn	x8, #0x3
  412f80:	b.cc	412f44 <wcrtomb@plt+0x102e4>  // b.lo, b.ul, b.last
  412f84:	str	xzr, [x24]
  412f88:	b	412f40 <wcrtomb@plt+0x102e0>
  412f8c:	ldur	x20, [x29, #-16]
  412f90:	add	x10, x20, #0x1
  412f94:	stur	x10, [x29, #-16]
  412f98:	ldrb	w8, [x20]
  412f9c:	ldr	x8, [x26, x8, lsl #3]
  412fa0:	ldr	x9, [x22, x8, lsl #3]
  412fa4:	cbz	x9, 413150 <wcrtomb@plt+0x104f0>
  412fa8:	ldrsw	x11, [x23, #364]
  412fac:	cmp	x27, x11
  412fb0:	b.ge	412e48 <wcrtomb@plt+0x101e8>  // b.tcont
  412fb4:	ldrb	w11, [x10]
  412fb8:	ldr	x11, [x9, x11, lsl #3]
  412fbc:	cmp	x11, x8
  412fc0:	b.ne	412e48 <wcrtomb@plt+0x101e8>  // b.any
  412fc4:	add	x10, x20, #0x2
  412fc8:	stur	x10, [x29, #-16]
  412fcc:	ldrb	w11, [x10], #1
  412fd0:	ldr	x11, [x9, x11, lsl #3]
  412fd4:	cmp	x11, x8
  412fd8:	b.eq	412fc8 <wcrtomb@plt+0x10368>  // b.none
  412fdc:	sub	x10, x10, #0x1
  412fe0:	b	412e48 <wcrtomb@plt+0x101e8>
  412fe4:	add	x9, x8, #0x1
  412fe8:	stur	x9, [x29, #-16]
  412fec:	ldrb	w8, [x8]
  412ff0:	ldr	x20, [x26, x8, lsl #3]
  412ff4:	b	412e5c <wcrtomb@plt+0x101fc>
  412ff8:	mov	x20, x27
  412ffc:	mov	x25, x1
  413000:	tbnz	x20, #63, 41315c <wcrtomb@plt+0x104fc>
  413004:	ldr	x8, [x23, #376]
  413008:	ldr	x8, [x8, x20, lsl #3]
  41300c:	cbz	x8, 41312c <wcrtomb@plt+0x104cc>
  413010:	ldur	x26, [x29, #-16]
  413014:	ldr	x9, [x23, #384]
  413018:	ldrb	w8, [x26]
  41301c:	ldrb	w9, [x9, x20]
  413020:	add	x10, x23, x8
  413024:	ldrb	w10, [x10, #460]
  413028:	tst	w10, w9
  41302c:	b.ne	413204 <wcrtomb@plt+0x105a4>  // b.any
  413030:	cmp	x26, x19
  413034:	b.ne	413058 <wcrtomb@plt+0x103f8>  // b.any
  413038:	ldr	x9, [x23, #296]
  41303c:	mov	w10, #0x50                  	// #80
  413040:	madd	x9, x20, x10, x9
  413044:	ldrb	w10, [x9, #32]
  413048:	ldrh	w9, [x9, #34]
  41304c:	and	w9, w10, w9, lsr #6
  413050:	tst	w9, #0x7
  413054:	b.ne	413204 <wcrtomb@plt+0x105a4>  // b.any
  413058:	tbz	w21, #0, 412e18 <wcrtomb@plt+0x101b8>
  41305c:	ldrsw	x9, [x23, #364]
  413060:	cmp	x20, x9
  413064:	b.ge	413088 <wcrtomb@plt+0x10428>  // b.tcont
  413068:	add	x8, x23, x8
  41306c:	ldrb	w8, [x8, #716]
  413070:	cbnz	w8, 413080 <wcrtomb@plt+0x10420>
  413074:	cmp	x25, x26
  413078:	b.cc	4130f0 <wcrtomb@plt+0x10490>  // b.lo, b.ul, b.last
  41307c:	mov	x26, x25
  413080:	stur	x26, [x29, #-16]
  413084:	mov	x25, x26
  413088:	ldr	x8, [x23, #296]
  41308c:	mov	w9, #0x50                  	// #80
  413090:	madd	x8, x20, x9, x8
  413094:	ldr	x8, [x8, #56]
  413098:	cbz	x8, 412e18 <wcrtomb@plt+0x101b8>
  41309c:	cmp	x26, x19
  4130a0:	b.cs	412e18 <wcrtomb@plt+0x101b8>  // b.hs, b.nlast
  4130a4:	ldrb	w8, [x26]
  4130a8:	add	x8, x23, x8, lsl #2
  4130ac:	ldr	w8, [x8, #1308]
  4130b0:	cmn	w8, #0x1
  4130b4:	b.ne	412e18 <wcrtomb@plt+0x101b8>  // b.any
  4130b8:	sub	x2, x29, #0x10
  4130bc:	mov	x0, x23
  4130c0:	mov	x1, x20
  4130c4:	mov	x3, x19
  4130c8:	bl	413424 <wcrtomb@plt+0x107c4>
  4130cc:	ldur	x1, [x29, #-16]
  4130d0:	ldr	x22, [x23, #368]
  4130d4:	mov	x27, x0
  4130d8:	mov	x28, x20
  4130dc:	b	412e38 <wcrtomb@plt+0x101d8>
  4130e0:	mov	w0, #0x1                   	// #1
  4130e4:	add	x25, x25, w0, sxtw
  4130e8:	cmp	x25, x26
  4130ec:	b.cs	4131f0 <wcrtomb@plt+0x10590>  // b.hs, b.nlast
  4130f0:	ldrb	w8, [x25]
  4130f4:	add	x8, x23, x8, lsl #2
  4130f8:	ldr	w8, [x8, #1308]
  4130fc:	cmn	w8, #0x1
  413100:	b.ne	4130e0 <wcrtomb@plt+0x10480>  // b.any
  413104:	sub	x2, x19, x25
  413108:	sub	x0, x29, #0x4
  41310c:	mov	x1, x25
  413110:	mov	x3, x24
  413114:	bl	417134 <wcrtomb@plt+0x144d4>
  413118:	sub	x8, x0, #0x1
  41311c:	cmn	x8, #0x3
  413120:	b.cc	4130e4 <wcrtomb@plt+0x10484>  // b.lo, b.ul, b.last
  413124:	str	xzr, [x24]
  413128:	b	4130e0 <wcrtomb@plt+0x10480>
  41312c:	ldur	x8, [x29, #-16]
  413130:	mov	x0, x20
  413134:	mov	x1, x23
  413138:	ldrb	w2, [x8]
  41313c:	bl	4138e4 <wcrtomb@plt+0x10c84>
  413140:	ldr	x22, [x23, #368]
  413144:	mov	x27, x20
  413148:	mov	x1, x25
  41314c:	b	412e38 <wcrtomb@plt+0x101d8>
  413150:	mov	x20, x8
  413154:	mov	x28, x27
  413158:	tbz	x20, #63, 413004 <wcrtomb@plt+0x103a4>
  41315c:	ldur	x1, [x29, #-16]
  413160:	cmn	x20, #0x2
  413164:	b.ne	413188 <wcrtomb@plt+0x10528>  // b.any
  413168:	ldurb	w2, [x1, #-1]
  41316c:	mov	x0, x28
  413170:	mov	x1, x23
  413174:	bl	4138e4 <wcrtomb@plt+0x10c84>
  413178:	ldr	x22, [x23, #368]
  41317c:	mov	x27, x0
  413180:	mov	x1, x25
  413184:	b	412e38 <wcrtomb@plt+0x101d8>
  413188:	cmp	x1, x19
  41318c:	b.hi	4131fc <wcrtomb@plt+0x1059c>  // b.pmore
  413190:	ldurb	w8, [x1, #-1]
  413194:	ldr	x9, [sp, #32]
  413198:	cmp	w8, w9
  41319c:	b.ne	4131fc <wcrtomb@plt+0x1059c>  // b.any
  4131a0:	ldr	x8, [x23, #392]
  4131a4:	ldr	x27, [x8, x28, lsl #3]
  4131a8:	tbnz	x27, #63, 4131fc <wcrtomb@plt+0x1059c>
  4131ac:	ldur	x8, [x29, #-24]
  4131b0:	add	x8, x8, #0x1
  4131b4:	stur	x8, [x29, #-24]
  4131b8:	ldr	w8, [sp, #28]
  4131bc:	tbnz	w8, #0, 412e38 <wcrtomb@plt+0x101d8>
  4131c0:	ldr	x8, [sp, #16]
  4131c4:	mov	x27, xzr
  4131c8:	ldrb	w8, [x8]
  4131cc:	cmp	w8, #0x4
  4131d0:	b.eq	412e38 <wcrtomb@plt+0x101d8>  // b.none
  4131d4:	cmp	w8, #0x2
  4131d8:	b.ne	4131e8 <wcrtomb@plt+0x10588>  // b.any
  4131dc:	ldrsw	x8, [x23, #364]
  4131e0:	sub	x27, x8, #0x1
  4131e4:	b	412e38 <wcrtomb@plt+0x101d8>
  4131e8:	ldr	x27, [x23, #400]
  4131ec:	b	412e38 <wcrtomb@plt+0x101d8>
  4131f0:	mov	x26, x25
  4131f4:	stur	x25, [x29, #-16]
  4131f8:	b	413088 <wcrtomb@plt+0x10428>
  4131fc:	mov	x26, xzr
  413200:	stur	xzr, [x29, #-16]
  413204:	ldr	x9, [sp, #8]
  413208:	ldr	w10, [sp, #4]
  41320c:	cbz	x9, 413220 <wcrtomb@plt+0x105c0>
  413210:	ldr	x8, [x9]
  413214:	ldur	x11, [x29, #-24]
  413218:	add	x8, x8, x11
  41321c:	str	x8, [x9]
  413220:	strb	w10, [x19]
  413224:	mov	x0, x26
  413228:	ldp	x20, x19, [sp, #144]
  41322c:	ldp	x22, x21, [sp, #128]
  413230:	ldp	x24, x23, [sp, #112]
  413234:	ldp	x26, x25, [sp, #96]
  413238:	ldp	x28, x27, [sp, #80]
  41323c:	ldp	x29, x30, [sp, #64]
  413240:	add	sp, sp, #0xa0
  413244:	ret
  413248:	bl	4170f0 <wcrtomb@plt+0x14490>
  41324c:	stp	x29, x30, [sp, #-64]!
  413250:	stp	x22, x21, [sp, #32]
  413254:	stp	x20, x19, [sp, #48]
  413258:	ldr	x22, [x0, #352]
  41325c:	ldr	x8, [x0, #304]
  413260:	str	x23, [sp, #16]
  413264:	mov	x29, sp
  413268:	subs	x8, x8, x22
  41326c:	b.le	41340c <wcrtomb@plt+0x107ac>
  413270:	ldr	x9, [x0, #368]
  413274:	add	x10, x22, #0x2
  413278:	mov	x19, x0
  41327c:	cmp	x9, #0x0
  413280:	sub	x11, x9, #0x10
  413284:	csel	x9, xzr, x10, eq  // eq = none
  413288:	csel	x0, xzr, x11, eq  // eq = none
  41328c:	adds	x10, x9, x9, asr #1
  413290:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  413294:	csel	x23, x11, x10, vs
  413298:	tbnz	x23, #63, 4132b0 <wcrtomb@plt+0x10650>
  41329c:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
  4132a0:	cmp	x23, x10
  4132a4:	b.le	4132c8 <wcrtomb@plt+0x10668>
  4132a8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4132ac:	b	4132d8 <wcrtomb@plt+0x10678>
  4132b0:	cmn	x23, #0x1
  4132b4:	b.eq	4132d4 <wcrtomb@plt+0x10674>  // b.none
  4132b8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4132bc:	sdiv	x10, x10, x23
  4132c0:	cmp	x10, #0x8
  4132c4:	b.lt	4132a8 <wcrtomb@plt+0x10648>  // b.tstop
  4132c8:	lsl	x1, x23, #3
  4132cc:	cmp	x1, #0x7f
  4132d0:	b.gt	4132e0 <wcrtomb@plt+0x10680>
  4132d4:	mov	w10, #0x80                  	// #128
  4132d8:	lsr	x23, x10, #3
  4132dc:	and	x1, x10, #0x7ffffffffffffff8
  4132e0:	sub	x10, x23, x9
  4132e4:	cmp	x10, x8
  4132e8:	b.ge	413324 <wcrtomb@plt+0x106c4>  // b.tcont
  4132ec:	adds	x23, x9, x8
  4132f0:	b.vs	413420 <wcrtomb@plt+0x107c0>
  4132f4:	tbnz	x23, #63, 413308 <wcrtomb@plt+0x106a8>
  4132f8:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  4132fc:	cmp	x23, x8
  413300:	b.le	413320 <wcrtomb@plt+0x106c0>
  413304:	b	413420 <wcrtomb@plt+0x107c0>
  413308:	cmn	x23, #0x1
  41330c:	b.eq	413320 <wcrtomb@plt+0x106c0>  // b.none
  413310:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  413314:	sdiv	x8, x8, x23
  413318:	cmp	x8, #0x8
  41331c:	b.lt	413420 <wcrtomb@plt+0x107c0>  // b.tstop
  413320:	lsl	x1, x23, #3
  413324:	bl	416e54 <wcrtomb@plt+0x141f4>
  413328:	add	x8, x0, #0x10
  41332c:	sub	x20, x23, #0x2
  413330:	stp	xzr, xzr, [x0]
  413334:	str	x8, [x19, #368]
  413338:	lsr	x8, x20, #60
  41333c:	str	x20, [x19, #352]
  413340:	cbnz	x8, 413420 <wcrtomb@plt+0x107c0>
  413344:	ldr	x0, [x19, #376]
  413348:	lsl	x21, x20, #3
  41334c:	mov	x1, x21
  413350:	bl	416e54 <wcrtomb@plt+0x141f4>
  413354:	ldr	x8, [x19, #384]
  413358:	str	x0, [x19, #376]
  41335c:	mov	x1, x20
  413360:	mov	x0, x8
  413364:	bl	416e54 <wcrtomb@plt+0x141f4>
  413368:	ldr	x8, [x19, #392]
  41336c:	str	x0, [x19, #384]
  413370:	mov	x1, x21
  413374:	mov	x0, x8
  413378:	bl	416e54 <wcrtomb@plt+0x141f4>
  41337c:	ldrb	w8, [x19, #1048]
  413380:	str	x0, [x19, #392]
  413384:	cbz	w8, 4133b0 <wcrtomb@plt+0x10750>
  413388:	ldr	x8, [x19, #432]
  41338c:	lsl	x1, x23, #3
  413390:	sub	x9, x8, #0x10
  413394:	cmp	x8, #0x0
  413398:	csel	x0, xzr, x9, eq  // eq = none
  41339c:	bl	416e54 <wcrtomb@plt+0x141f4>
  4133a0:	cbnz	x22, 4133a8 <wcrtomb@plt+0x10748>
  4133a4:	stp	xzr, xzr, [x0]
  4133a8:	add	x8, x0, #0x10
  4133ac:	str	x8, [x19, #432]
  4133b0:	cmp	x22, x20
  4133b4:	b.ge	41340c <wcrtomb@plt+0x107ac>  // b.tcont
  4133b8:	ldrb	w8, [x19, #1048]
  4133bc:	cbz	w8, 4133ec <wcrtomb@plt+0x1078c>
  4133c0:	ldr	x8, [x19, #368]
  4133c4:	lsl	x9, x22, #3
  4133c8:	add	x22, x22, #0x1
  4133cc:	cmp	x22, x20
  4133d0:	str	xzr, [x8, x9]
  4133d4:	ldr	x8, [x19, #376]
  4133d8:	str	xzr, [x8, x9]
  4133dc:	ldr	x8, [x19, #432]
  4133e0:	str	xzr, [x8, x9]
  4133e4:	b.lt	4133c0 <wcrtomb@plt+0x10760>  // b.tstop
  4133e8:	b	41340c <wcrtomb@plt+0x107ac>
  4133ec:	ldr	x8, [x19, #368]
  4133f0:	lsl	x9, x22, #3
  4133f4:	add	x22, x22, #0x1
  4133f8:	cmp	x22, x20
  4133fc:	str	xzr, [x8, x9]
  413400:	ldr	x8, [x19, #376]
  413404:	str	xzr, [x8, x9]
  413408:	b.lt	4133ec <wcrtomb@plt+0x1078c>  // b.tstop
  41340c:	ldp	x20, x19, [sp, #48]
  413410:	ldp	x22, x21, [sp, #32]
  413414:	ldr	x23, [sp, #16]
  413418:	ldp	x29, x30, [sp], #64
  41341c:	ret
  413420:	bl	4170f0 <wcrtomb@plt+0x14490>
  413424:	sub	sp, sp, #0x70
  413428:	stp	x29, x30, [sp, #16]
  41342c:	stp	x28, x27, [sp, #32]
  413430:	stp	x26, x25, [sp, #48]
  413434:	stp	x24, x23, [sp, #64]
  413438:	stp	x22, x21, [sp, #80]
  41343c:	stp	x20, x19, [sp, #96]
  413440:	ldr	x8, [x2]
  413444:	mov	x23, x2
  413448:	mov	x19, x0
  41344c:	mov	x20, x1
  413450:	ldrb	w9, [x8]
  413454:	add	x29, sp, #0x10
  413458:	add	x9, x0, x9, lsl #2
  41345c:	ldr	w26, [x9, #1308]
  413460:	cmn	w26, #0x1
  413464:	b.ne	4134b8 <wcrtomb@plt+0x10858>  // b.any
  413468:	add	x21, x19, #0x110
  41346c:	sub	x2, x3, x8
  413470:	sub	x0, x29, #0x4
  413474:	mov	x1, x8
  413478:	mov	x3, x21
  41347c:	bl	417134 <wcrtomb@plt+0x144d4>
  413480:	sub	x8, x0, #0x1
  413484:	cmn	x8, #0x3
  413488:	b.cs	4134b4 <wcrtomb@plt+0x10854>  // b.hs, b.nlast
  41348c:	ldur	w26, [x29, #-4]
  413490:	mov	x24, x0
  413494:	add	x21, x19, #0x198
  413498:	add	x25, x19, #0x1a0
  41349c:	cmp	w24, #0x1
  4134a0:	str	xzr, [x19, #416]
  4134a4:	b.ge	4134c8 <wcrtomb@plt+0x10868>  // b.tcont
  4134a8:	mov	w27, wzr
  4134ac:	mov	x22, x20
  4134b0:	b	413570 <wcrtomb@plt+0x10910>
  4134b4:	str	xzr, [x21]
  4134b8:	add	x21, x19, #0x198
  4134bc:	add	x25, x19, #0x1a0
  4134c0:	mov	w24, #0x1                   	// #1
  4134c4:	str	xzr, [x19, #416]
  4134c8:	mov	w27, wzr
  4134cc:	mov	x22, x20
  4134d0:	b	4134f0 <wcrtomb@plt+0x10890>
  4134d4:	add	x9, x8, #0x1
  4134d8:	str	x9, [x23]
  4134dc:	ldrb	w8, [x8]
  4134e0:	add	w27, w27, #0x1
  4134e4:	cmp	w24, w27
  4134e8:	ldr	x22, [x28, x8, lsl #3]
  4134ec:	b.eq	41356c <wcrtomb@plt+0x1090c>  // b.none
  4134f0:	cbz	w27, 413500 <wcrtomb@plt+0x108a0>
  4134f4:	ldrsw	x8, [x19, #364]
  4134f8:	cmp	x22, x8
  4134fc:	b.lt	413570 <wcrtomb@plt+0x10910>  // b.tstop
  413500:	ldr	x8, [x19, #368]
  413504:	ldr	x28, [x8, x22, lsl #3]
  413508:	cbnz	x28, 413544 <wcrtomb@plt+0x108e4>
  41350c:	ldr	x8, [x19, #376]
  413510:	ldr	x28, [x8, x22, lsl #3]
  413514:	cbnz	x28, 413544 <wcrtomb@plt+0x108e4>
  413518:	ldr	x8, [x23]
  41351c:	mov	x0, x22
  413520:	mov	x1, x19
  413524:	ldrb	w2, [x8]
  413528:	bl	4138e4 <wcrtomb@plt+0x10c84>
  41352c:	ldr	x8, [x19, #368]
  413530:	ldr	x28, [x8, x22, lsl #3]
  413534:	cbnz	x28, 413544 <wcrtomb@plt+0x108e4>
  413538:	ldr	x8, [x19, #376]
  41353c:	ldr	x28, [x8, x22, lsl #3]
  413540:	cbz	x28, 4138c0 <wcrtomb@plt+0x10c60>
  413544:	ldr	x8, [x23]
  413548:	ldrb	w2, [x8]
  41354c:	ldr	x9, [x28, x2, lsl #3]
  413550:	cmn	x9, #0x2
  413554:	b.ne	4134d4 <wcrtomb@plt+0x10874>  // b.any
  413558:	mov	x0, x22
  41355c:	mov	x1, x19
  413560:	bl	4138e4 <wcrtomb@plt+0x10c84>
  413564:	ldr	x8, [x23]
  413568:	b	4134d4 <wcrtomb@plt+0x10874>
  41356c:	mov	w27, w24
  413570:	ldr	x8, [x23]
  413574:	sub	w9, w24, w27
  413578:	cmn	w26, #0x1
  41357c:	add	x8, x8, w9, sxtw
  413580:	str	x8, [x23]
  413584:	b.eq	4135b4 <wcrtomb@plt+0x10954>  // b.none
  413588:	ldr	x8, [x19, #296]
  41358c:	mov	w9, #0x50                  	// #80
  413590:	madd	x9, x20, x9, x8
  413594:	ldr	x9, [x9, #72]
  413598:	tbnz	x9, #63, 4135bc <wcrtomb@plt+0x1095c>
  41359c:	ldr	x10, [x19, #432]
  4135a0:	ldr	x10, [x10, x22, lsl #3]
  4135a4:	cbz	x10, 413684 <wcrtomb@plt+0x10a24>
  4135a8:	ldr	x23, [x10, x9, lsl #3]
  4135ac:	tbz	x23, #63, 41389c <wcrtomb@plt+0x10c3c>
  4135b0:	b	4136b0 <wcrtomb@plt+0x10a50>
  4135b4:	mov	x23, x22
  4135b8:	b	41389c <wcrtomb@plt+0x10c3c>
  4135bc:	ldr	x9, [x19, #440]
  4135c0:	cmp	x9, #0x400
  4135c4:	b.lt	413664 <wcrtomb@plt+0x10a04>  // b.tstop
  4135c8:	ldr	x8, [x19, #352]
  4135cc:	tbnz	x8, #63, 4135fc <wcrtomb@plt+0x1099c>
  4135d0:	mov	x23, #0xffffffffffffffff    	// #-1
  4135d4:	ldr	x8, [x19, #432]
  4135d8:	lsl	x24, x23, #3
  4135dc:	ldr	x0, [x8, x24]
  4135e0:	bl	402a10 <free@plt>
  4135e4:	ldr	x8, [x19, #432]
  4135e8:	add	x23, x23, #0x1
  4135ec:	str	xzr, [x8, x24]
  4135f0:	ldr	x8, [x19, #352]
  4135f4:	cmp	x23, x8
  4135f8:	b.lt	4135d4 <wcrtomb@plt+0x10974>  // b.tstop
  4135fc:	ldp	x8, x9, [x19, #296]
  413600:	cmp	x9, #0x1
  413604:	b.lt	41365c <wcrtomb@plt+0x109fc>  // b.tstop
  413608:	b.ne	413614 <wcrtomb@plt+0x109b4>  // b.any
  41360c:	mov	x10, xzr
  413610:	b	41363c <wcrtomb@plt+0x109dc>
  413614:	and	x10, x9, #0xfffffffffffffffe
  413618:	add	x11, x8, #0x98
  41361c:	mov	x12, #0xffffffffffffffff    	// #-1
  413620:	mov	x13, x10
  413624:	stur	x12, [x11, #-80]
  413628:	str	x12, [x11], #160
  41362c:	subs	x13, x13, #0x2
  413630:	b.ne	413624 <wcrtomb@plt+0x109c4>  // b.any
  413634:	cmp	x9, x10
  413638:	b.eq	41365c <wcrtomb@plt+0x109fc>  // b.none
  41363c:	mov	w11, #0x50                  	// #80
  413640:	madd	x11, x10, x11, x8
  413644:	add	x11, x11, #0x48
  413648:	mov	x12, #0xffffffffffffffff    	// #-1
  41364c:	add	x10, x10, #0x1
  413650:	cmp	x10, x9
  413654:	str	x12, [x11], #80
  413658:	b.lt	41364c <wcrtomb@plt+0x109ec>  // b.tstop
  41365c:	mov	x9, xzr
  413660:	str	xzr, [x19, #440]
  413664:	add	x10, x9, #0x1
  413668:	mov	w11, #0x50                  	// #80
  41366c:	str	x10, [x19, #440]
  413670:	madd	x10, x20, x11, x8
  413674:	str	x9, [x10, #72]
  413678:	ldr	x10, [x19, #432]
  41367c:	ldr	x10, [x10, x22, lsl #3]
  413680:	cbnz	x10, 4135a8 <wcrtomb@plt+0x10948>
  413684:	mov	w0, #0x2000                	// #8192
  413688:	bl	416dd4 <wcrtomb@plt+0x14174>
  41368c:	ldr	x8, [x19, #432]
  413690:	lsl	x9, x22, #3
  413694:	mov	w1, #0xff                  	// #255
  413698:	mov	w2, #0x2000                	// #8192
  41369c:	str	x0, [x8, x9]
  4136a0:	ldr	x8, [x19, #432]
  4136a4:	ldr	x0, [x8, x9]
  4136a8:	bl	402800 <memset@plt>
  4136ac:	ldr	x8, [x19, #296]
  4136b0:	mov	w9, #0x50                  	// #80
  4136b4:	madd	x9, x20, x9, x8
  4136b8:	cmn	x22, #0x1
  4136bc:	add	x23, x9, #0x30
  4136c0:	b.eq	4136e4 <wcrtomb@plt+0x10a84>  // b.none
  4136c4:	mov	w9, #0x50                  	// #80
  4136c8:	madd	x8, x22, x9, x8
  4136cc:	add	x1, x8, #0x8
  4136d0:	mov	w2, #0xffffffff            	// #-1
  4136d4:	mov	x0, x23
  4136d8:	mov	x3, x21
  4136dc:	bl	412974 <wcrtomb@plt+0xfd14>
  4136e0:	b	4137d8 <wcrtomb@plt+0x10b78>
  4136e4:	mov	w9, #0x50                  	// #80
  4136e8:	madd	x24, x20, x9, x8
  4136ec:	ldr	x10, [x19, #424]
  4136f0:	ldr	x9, [x24, #56]!
  4136f4:	cmp	x10, x9
  4136f8:	b.ge	4137bc <wcrtomb@plt+0x10b5c>  // b.tcont
  4136fc:	ldr	x0, [x21]
  413700:	bl	402a10 <free@plt>
  413704:	ldr	x8, [x19, #424]
  413708:	ldr	x9, [x24]
  41370c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  413710:	adds	x10, x8, x8, asr #1
  413714:	csel	x26, x11, x10, vs
  413718:	tbnz	x26, #63, 413730 <wcrtomb@plt+0x10ad0>
  41371c:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  413720:	cmp	x26, x10
  413724:	b.le	413748 <wcrtomb@plt+0x10ae8>
  413728:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41372c:	b	413758 <wcrtomb@plt+0x10af8>
  413730:	cmn	x26, #0x1
  413734:	b.eq	413754 <wcrtomb@plt+0x10af4>  // b.none
  413738:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41373c:	sdiv	x10, x10, x26
  413740:	cmp	x10, #0x10
  413744:	b.lt	413728 <wcrtomb@plt+0x10ac8>  // b.tstop
  413748:	lsl	x1, x26, #4
  41374c:	cmp	x1, #0x7f
  413750:	b.gt	413760 <wcrtomb@plt+0x10b00>
  413754:	mov	w10, #0x80                  	// #128
  413758:	lsr	x26, x10, #4
  41375c:	and	x1, x10, #0x7ffffffffffffff0
  413760:	cmp	x26, x9
  413764:	str	xzr, [x19, #424]
  413768:	b.ge	4137a8 <wcrtomb@plt+0x10b48>  // b.tcont
  41376c:	sub	x9, x9, x8
  413770:	adds	x26, x8, x9
  413774:	b.vs	4138e0 <wcrtomb@plt+0x10c80>
  413778:	tbnz	x26, #63, 41378c <wcrtomb@plt+0x10b2c>
  41377c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  413780:	cmp	x26, x8
  413784:	b.le	4137a4 <wcrtomb@plt+0x10b44>
  413788:	b	4138e0 <wcrtomb@plt+0x10c80>
  41378c:	cmn	x26, #0x1
  413790:	b.eq	4137a4 <wcrtomb@plt+0x10b44>  // b.none
  413794:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  413798:	sdiv	x8, x8, x26
  41379c:	cmp	x8, #0x10
  4137a0:	b.lt	4138e0 <wcrtomb@plt+0x10c80>  // b.tstop
  4137a4:	lsl	x1, x26, #4
  4137a8:	mov	x0, xzr
  4137ac:	bl	416e54 <wcrtomb@plt+0x141f4>
  4137b0:	str	x26, [x19, #424]
  4137b4:	str	x0, [x21]
  4137b8:	ldr	x9, [x24]
  4137bc:	str	x9, [x25]
  4137c0:	ldr	x8, [x24]
  4137c4:	cbz	x8, 4137dc <wcrtomb@plt+0x10b7c>
  4137c8:	ldr	x0, [x21]
  4137cc:	ldr	x1, [x23]
  4137d0:	lsl	x2, x8, #4
  4137d4:	bl	402580 <memcpy@plt>
  4137d8:	ldr	x9, [x25]
  4137dc:	cmp	x9, #0x1
  4137e0:	b.lt	413800 <wcrtomb@plt+0x10ba0>  // b.tstop
  4137e4:	ldr	x8, [x19, #344]
  4137e8:	ldr	x10, [x21]
  4137ec:	cmp	x9, #0x3
  4137f0:	b.cs	413808 <wcrtomb@plt+0x10ba8>  // b.hs, b.nlast
  4137f4:	mov	x11, xzr
  4137f8:	mov	w12, wzr
  4137fc:	b	413848 <wcrtomb@plt+0x10be8>
  413800:	mov	w2, #0x7                   	// #7
  413804:	b	413868 <wcrtomb@plt+0x10c08>
  413808:	and	x11, x9, #0xfffffffffffffffe
  41380c:	mov	w12, wzr
  413810:	mov	w13, wzr
  413814:	add	x14, x10, #0x10
  413818:	mov	x15, x11
  41381c:	ldur	x16, [x14, #-16]
  413820:	ldr	x17, [x14], #32
  413824:	subs	x15, x15, #0x2
  413828:	ldr	w16, [x8, x16, lsl #2]
  41382c:	ldr	w17, [x8, x17, lsl #2]
  413830:	orr	w12, w16, w12
  413834:	orr	w13, w17, w13
  413838:	b.ne	41381c <wcrtomb@plt+0x10bbc>  // b.any
  41383c:	cmp	x9, x11
  413840:	orr	w12, w13, w12
  413844:	b.eq	413864 <wcrtomb@plt+0x10c04>  // b.none
  413848:	sub	x9, x9, x11
  41384c:	add	x10, x10, x11, lsl #4
  413850:	ldr	x11, [x10], #16
  413854:	subs	x9, x9, #0x1
  413858:	ldr	w11, [x8, x11, lsl #2]
  41385c:	orr	w12, w11, w12
  413860:	b.ne	413850 <wcrtomb@plt+0x10bf0>  // b.any
  413864:	eor	w2, w12, #0x7
  413868:	mov	x0, x19
  41386c:	mov	x1, x21
  413870:	bl	4124a8 <wcrtomb@plt+0xf848>
  413874:	mov	x23, x0
  413878:	mov	x0, x19
  41387c:	bl	41324c <wcrtomb@plt+0x105ec>
  413880:	ldr	x9, [x19, #296]
  413884:	ldr	x8, [x19, #432]
  413888:	mov	w10, #0x50                  	// #80
  41388c:	madd	x9, x20, x10, x9
  413890:	ldr	x8, [x8, x22, lsl #3]
  413894:	ldr	x9, [x9, #72]
  413898:	str	x23, [x8, x9, lsl #3]
  41389c:	mov	x0, x23
  4138a0:	ldp	x20, x19, [sp, #96]
  4138a4:	ldp	x22, x21, [sp, #80]
  4138a8:	ldp	x24, x23, [sp, #64]
  4138ac:	ldp	x26, x25, [sp, #48]
  4138b0:	ldp	x28, x27, [sp, #32]
  4138b4:	ldp	x29, x30, [sp, #16]
  4138b8:	add	sp, sp, #0x70
  4138bc:	ret
  4138c0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4138c4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4138c8:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4138cc:	add	x0, x0, #0x5b
  4138d0:	add	x1, x1, #0xf3e
  4138d4:	add	x3, x3, #0x88
  4138d8:	mov	w2, #0xc93                 	// #3219
  4138dc:	bl	402bc0 <__assert_fail@plt>
  4138e0:	bl	4170f0 <wcrtomb@plt+0x14490>
  4138e4:	sub	sp, sp, #0x160
  4138e8:	stp	x29, x30, [sp, #256]
  4138ec:	stp	x28, x27, [sp, #272]
  4138f0:	stp	x26, x25, [sp, #288]
  4138f4:	stp	x24, x23, [sp, #304]
  4138f8:	stp	x22, x21, [sp, #320]
  4138fc:	stp	x20, x19, [sp, #336]
  413900:	ldr	x8, [x1, #296]
  413904:	mov	w9, #0x50                  	// #80
  413908:	add	x29, sp, #0x100
  41390c:	str	x2, [sp, #56]
  413910:	madd	x8, x0, x9, x8
  413914:	ldrh	w8, [x8, #34]
  413918:	mov	w9, #0x178                 	// #376
  41391c:	str	x0, [sp, #128]
  413920:	stur	x1, [x29, #-120]
  413924:	cmp	w8, #0x0
  413928:	mov	w8, #0x170                 	// #368
  41392c:	csel	x8, x8, x9, eq  // eq = none
  413930:	ldr	x19, [x1, x8]
  413934:	ldr	x11, [x19, x0, lsl #3]
  413938:	cbnz	x11, 413b4c <wcrtomb@plt+0x10eec>
  41393c:	ldr	w8, [x1, #360]
  413940:	cmp	w8, #0x400
  413944:	b.lt	4139a4 <wcrtomb@plt+0x10d44>  // b.tstop
  413948:	ldrsw	x20, [x1, #364]
  41394c:	ldr	x8, [x1, #352]
  413950:	cmp	x8, x20
  413954:	b.le	41399c <wcrtomb@plt+0x10d3c>
  413958:	ldr	x8, [x1, #368]
  41395c:	lsl	x21, x20, #3
  413960:	ldr	x0, [x8, x21]
  413964:	bl	402a10 <free@plt>
  413968:	ldur	x8, [x29, #-120]
  41396c:	ldr	x8, [x8, #376]
  413970:	ldr	x0, [x8, x21]
  413974:	bl	402a10 <free@plt>
  413978:	ldur	x1, [x29, #-120]
  41397c:	add	x20, x20, #0x1
  413980:	ldr	x8, [x1, #376]
  413984:	str	xzr, [x8, x21]
  413988:	ldr	x8, [x1, #368]
  41398c:	str	xzr, [x8, x21]
  413990:	ldr	x8, [x1, #352]
  413994:	cmp	x20, x8
  413998:	b.lt	413958 <wcrtomb@plt+0x10cf8>  // b.tstop
  41399c:	mov	w8, wzr
  4139a0:	str	wzr, [x1, #360]
  4139a4:	add	w8, w8, #0x1
  4139a8:	mov	w0, #0x800                 	// #2048
  4139ac:	str	w8, [x1, #360]
  4139b0:	bl	416dd4 <wcrtomb@plt+0x14174>
  4139b4:	ldur	x1, [x29, #-120]
  4139b8:	mov	x11, x0
  4139bc:	ldr	x0, [sp, #128]
  4139c0:	mov	x8, #0xfffffffffffffffe    	// #-2
  4139c4:	dup	v0.2d, x8
  4139c8:	str	x11, [x19, x0, lsl #3]
  4139cc:	stp	q0, q0, [x11]
  4139d0:	stp	q0, q0, [x11, #32]
  4139d4:	stp	q0, q0, [x11, #64]
  4139d8:	stp	q0, q0, [x11, #96]
  4139dc:	stp	q0, q0, [x11, #128]
  4139e0:	stp	q0, q0, [x11, #160]
  4139e4:	stp	q0, q0, [x11, #192]
  4139e8:	stp	q0, q0, [x11, #224]
  4139ec:	stp	q0, q0, [x11, #256]
  4139f0:	stp	q0, q0, [x11, #288]
  4139f4:	stp	q0, q0, [x11, #320]
  4139f8:	stp	q0, q0, [x11, #352]
  4139fc:	stp	q0, q0, [x11, #384]
  413a00:	stp	q0, q0, [x11, #416]
  413a04:	stp	q0, q0, [x11, #448]
  413a08:	stp	q0, q0, [x11, #480]
  413a0c:	stp	q0, q0, [x11, #512]
  413a10:	stp	q0, q0, [x11, #544]
  413a14:	stp	q0, q0, [x11, #576]
  413a18:	stp	q0, q0, [x11, #608]
  413a1c:	stp	q0, q0, [x11, #640]
  413a20:	stp	q0, q0, [x11, #672]
  413a24:	stp	q0, q0, [x11, #704]
  413a28:	stp	q0, q0, [x11, #736]
  413a2c:	stp	q0, q0, [x11, #768]
  413a30:	stp	q0, q0, [x11, #800]
  413a34:	stp	q0, q0, [x11, #832]
  413a38:	stp	q0, q0, [x11, #864]
  413a3c:	stp	q0, q0, [x11, #896]
  413a40:	stp	q0, q0, [x11, #928]
  413a44:	stp	q0, q0, [x11, #960]
  413a48:	stp	q0, q0, [x11, #992]
  413a4c:	str	q0, [x11, #1024]
  413a50:	str	q0, [x11, #1040]
  413a54:	str	q0, [x11, #1056]
  413a58:	str	q0, [x11, #1072]
  413a5c:	str	q0, [x11, #1088]
  413a60:	str	q0, [x11, #1104]
  413a64:	str	q0, [x11, #1120]
  413a68:	str	q0, [x11, #1136]
  413a6c:	str	q0, [x11, #1152]
  413a70:	str	q0, [x11, #1168]
  413a74:	str	q0, [x11, #1184]
  413a78:	str	q0, [x11, #1200]
  413a7c:	str	q0, [x11, #1216]
  413a80:	str	q0, [x11, #1232]
  413a84:	str	q0, [x11, #1248]
  413a88:	str	q0, [x11, #1264]
  413a8c:	str	q0, [x11, #1280]
  413a90:	str	q0, [x11, #1296]
  413a94:	str	q0, [x11, #1312]
  413a98:	str	q0, [x11, #1328]
  413a9c:	str	q0, [x11, #1344]
  413aa0:	str	q0, [x11, #1360]
  413aa4:	str	q0, [x11, #1376]
  413aa8:	str	q0, [x11, #1392]
  413aac:	str	q0, [x11, #1408]
  413ab0:	str	q0, [x11, #1424]
  413ab4:	str	q0, [x11, #1440]
  413ab8:	str	q0, [x11, #1456]
  413abc:	str	q0, [x11, #1472]
  413ac0:	str	q0, [x11, #1488]
  413ac4:	str	q0, [x11, #1504]
  413ac8:	str	q0, [x11, #1520]
  413acc:	str	q0, [x11, #1536]
  413ad0:	str	q0, [x11, #1552]
  413ad4:	str	q0, [x11, #1568]
  413ad8:	str	q0, [x11, #1584]
  413adc:	str	q0, [x11, #1600]
  413ae0:	str	q0, [x11, #1616]
  413ae4:	str	q0, [x11, #1632]
  413ae8:	str	q0, [x11, #1648]
  413aec:	str	q0, [x11, #1664]
  413af0:	str	q0, [x11, #1680]
  413af4:	str	q0, [x11, #1696]
  413af8:	str	q0, [x11, #1712]
  413afc:	str	q0, [x11, #1728]
  413b00:	str	q0, [x11, #1744]
  413b04:	str	q0, [x11, #1760]
  413b08:	str	q0, [x11, #1776]
  413b0c:	str	q0, [x11, #1792]
  413b10:	str	q0, [x11, #1808]
  413b14:	str	q0, [x11, #1824]
  413b18:	str	q0, [x11, #1840]
  413b1c:	str	q0, [x11, #1856]
  413b20:	str	q0, [x11, #1872]
  413b24:	str	q0, [x11, #1888]
  413b28:	str	q0, [x11, #1904]
  413b2c:	str	q0, [x11, #1920]
  413b30:	str	q0, [x11, #1936]
  413b34:	str	q0, [x11, #1952]
  413b38:	str	q0, [x11, #1968]
  413b3c:	str	q0, [x11, #1984]
  413b40:	str	q0, [x11, #2000]
  413b44:	str	q0, [x11, #2016]
  413b48:	str	q0, [x11, #2032]
  413b4c:	ldr	x8, [x1, #384]
  413b50:	mov	w9, #0x50                  	// #80
  413b54:	strb	wzr, [x8, x0]
  413b58:	ldr	x8, [x1, #296]
  413b5c:	madd	x9, x0, x9, x8
  413b60:	ldrb	w8, [x9, #32]
  413b64:	ldrh	w9, [x9, #34]
  413b68:	and	w10, w8, w9, lsr #6
  413b6c:	tst	w10, #0x7
  413b70:	b.eq	413b98 <wcrtomb@plt+0x10f38>  // b.none
  413b74:	ldr	x8, [x1, #384]
  413b78:	ldrb	w9, [x8, x0]
  413b7c:	orr	w9, w9, #0x4
  413b80:	strb	w9, [x8, x0]
  413b84:	ldr	x8, [x1, #296]
  413b88:	mov	w9, #0x50                  	// #80
  413b8c:	madd	x9, x0, x9, x8
  413b90:	ldrb	w8, [x9, #32]
  413b94:	ldrh	w9, [x9, #34]
  413b98:	and	w10, w8, w9, lsr #3
  413b9c:	tst	w10, #0x7
  413ba0:	b.eq	413bc8 <wcrtomb@plt+0x10f68>  // b.none
  413ba4:	ldr	x8, [x1, #384]
  413ba8:	ldrb	w9, [x8, x0]
  413bac:	orr	w9, w9, #0x2
  413bb0:	strb	w9, [x8, x0]
  413bb4:	ldr	x8, [x1, #296]
  413bb8:	mov	w9, #0x50                  	// #80
  413bbc:	madd	x9, x0, x9, x8
  413bc0:	ldrb	w8, [x9, #32]
  413bc4:	ldrh	w9, [x9, #34]
  413bc8:	and	w8, w9, w8
  413bcc:	tst	w8, #0x7
  413bd0:	str	x11, [sp, #40]
  413bd4:	b.eq	413be8 <wcrtomb@plt+0x10f88>  // b.none
  413bd8:	ldr	x8, [x1, #384]
  413bdc:	ldrb	w9, [x8, x0]
  413be0:	orr	w9, w9, #0x1
  413be4:	strb	w9, [x8, x0]
  413be8:	ldr	x22, [x1, #176]
  413bec:	lsr	x8, x22, #59
  413bf0:	cbnz	x8, 41486c <wcrtomb@plt+0x11c0c>
  413bf4:	lsl	x0, x22, #4
  413bf8:	mov	x19, x1
  413bfc:	bl	416dd4 <wcrtomb@plt+0x14174>
  413c00:	stur	x0, [x29, #-16]
  413c04:	ldr	x8, [x19, #296]
  413c08:	ldr	x13, [sp, #128]
  413c0c:	mov	w9, #0x50                  	// #80
  413c10:	mov	x24, x0
  413c14:	mov	x14, x19
  413c18:	madd	x9, x13, x9, x8
  413c1c:	ldr	x9, [x9, #16]
  413c20:	cmp	x9, #0x1
  413c24:	b.lt	413e0c <wcrtomb@plt+0x111ac>  // b.tstop
  413c28:	ldr	x9, [x14, #320]
  413c2c:	mov	x11, xzr
  413c30:	mov	x25, xzr
  413c34:	mov	w15, #0x50                  	// #80
  413c38:	mov	w23, #0x18                  	// #24
  413c3c:	b	413c58 <wcrtomb@plt+0x10ff8>
  413c40:	madd	x10, x13, x15, x8
  413c44:	ldr	x11, [sp, #120]
  413c48:	ldr	x10, [x10, #16]
  413c4c:	add	x11, x11, #0x1
  413c50:	cmp	x11, x10
  413c54:	b.ge	413e10 <wcrtomb@plt+0x111b0>  // b.tcont
  413c58:	madd	x10, x13, x15, x8
  413c5c:	ldr	x10, [x10, #8]
  413c60:	lsl	x28, x11, #4
  413c64:	str	x11, [sp, #120]
  413c68:	ldr	x10, [x10, x28]
  413c6c:	madd	x11, x10, x23, x9
  413c70:	ldr	x11, [x11, #8]
  413c74:	cmp	x11, #0x1
  413c78:	b.lt	413c40 <wcrtomb@plt+0x10fe0>  // b.tstop
  413c7c:	mov	x26, xzr
  413c80:	b	413cb8 <wcrtomb@plt+0x11058>
  413c84:	add	x8, x24, x21, lsl #4
  413c88:	stp	x20, x19, [x8]
  413c8c:	ldr	x9, [x14, #320]
  413c90:	ldr	x8, [x14, #296]
  413c94:	add	x25, x25, #0x1
  413c98:	madd	x10, x13, x15, x8
  413c9c:	ldr	x10, [x10, #8]
  413ca0:	add	x26, x26, #0x1
  413ca4:	ldr	x10, [x10, x28]
  413ca8:	madd	x11, x10, x23, x9
  413cac:	ldr	x11, [x11, #8]
  413cb0:	cmp	x26, x11
  413cb4:	b.ge	413c40 <wcrtomb@plt+0x10fe0>  // b.tcont
  413cb8:	mul	x10, x10, x23
  413cbc:	ldr	x10, [x9, x10]
  413cc0:	cmp	x25, #0x1
  413cc4:	add	x10, x10, x26, lsl #4
  413cc8:	ldp	x20, x19, [x10]
  413ccc:	b.lt	413d1c <wcrtomb@plt+0x110bc>  // b.tstop
  413cd0:	mov	x21, xzr
  413cd4:	mov	x10, x25
  413cd8:	b	413ce8 <wcrtomb@plt+0x11088>
  413cdc:	add	x21, x11, #0x1
  413ce0:	cmp	x21, x10
  413ce4:	b.ge	413d20 <wcrtomb@plt+0x110c0>  // b.tcont
  413ce8:	add	x11, x10, x21
  413cec:	asr	x11, x11, #1
  413cf0:	lsl	x12, x11, #4
  413cf4:	ldr	x12, [x24, x12]
  413cf8:	cmp	x12, x20
  413cfc:	b.lt	413cdc <wcrtomb@plt+0x1107c>  // b.tstop
  413d00:	mov	x10, x11
  413d04:	b.ne	413ce0 <wcrtomb@plt+0x11080>  // b.any
  413d08:	add	x10, x24, x11, lsl #4
  413d0c:	ldr	w11, [x10, #8]
  413d10:	orr	w11, w11, w19
  413d14:	str	w11, [x10, #8]
  413d18:	b	413c98 <wcrtomb@plt+0x11038>
  413d1c:	mov	x21, xzr
  413d20:	cmp	x22, x25
  413d24:	b.gt	413dd8 <wcrtomb@plt+0x11178>
  413d28:	adds	x8, x22, x22, asr #1
  413d2c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  413d30:	csel	x27, x9, x8, vs
  413d34:	tbnz	x27, #63, 413d4c <wcrtomb@plt+0x110ec>
  413d38:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  413d3c:	cmp	x27, x8
  413d40:	b.le	413d64 <wcrtomb@plt+0x11104>
  413d44:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  413d48:	b	413d74 <wcrtomb@plt+0x11114>
  413d4c:	cmn	x27, #0x1
  413d50:	b.eq	413d70 <wcrtomb@plt+0x11110>  // b.none
  413d54:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  413d58:	sdiv	x8, x8, x27
  413d5c:	cmp	x8, #0x10
  413d60:	b.lt	413d44 <wcrtomb@plt+0x110e4>  // b.tstop
  413d64:	lsl	x1, x27, #4
  413d68:	cmp	x1, #0x7f
  413d6c:	b.gt	413d7c <wcrtomb@plt+0x1111c>
  413d70:	mov	w8, #0x80                  	// #128
  413d74:	lsr	x27, x8, #4
  413d78:	and	x1, x8, #0x7ffffffffffffff0
  413d7c:	cmp	x27, x22
  413d80:	b.gt	413dbc <wcrtomb@plt+0x1115c>
  413d84:	adds	x27, x22, #0x1
  413d88:	b.vs	41486c <wcrtomb@plt+0x11c0c>
  413d8c:	tbnz	x27, #63, 413da0 <wcrtomb@plt+0x11140>
  413d90:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  413d94:	cmp	x27, x8
  413d98:	b.le	413db8 <wcrtomb@plt+0x11158>
  413d9c:	b	41486c <wcrtomb@plt+0x11c0c>
  413da0:	cmn	x27, #0x1
  413da4:	b.eq	413db8 <wcrtomb@plt+0x11158>  // b.none
  413da8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  413dac:	sdiv	x8, x8, x27
  413db0:	cmp	x8, #0x10
  413db4:	b.lt	41486c <wcrtomb@plt+0x11c0c>  // b.tstop
  413db8:	lsl	x1, x27, #4
  413dbc:	mov	x0, x24
  413dc0:	bl	416e54 <wcrtomb@plt+0x141f4>
  413dc4:	ldr	x13, [sp, #128]
  413dc8:	ldur	x14, [x29, #-120]
  413dcc:	mov	x24, x0
  413dd0:	mov	x22, x27
  413dd4:	mov	w15, #0x50                  	// #80
  413dd8:	cmp	x25, x21
  413ddc:	stur	x24, [x29, #-16]
  413de0:	b.le	413c84 <wcrtomb@plt+0x11024>
  413de4:	add	x8, x24, x25, lsl #4
  413de8:	mov	x9, x25
  413dec:	ldur	q0, [x8, #-16]
  413df0:	sub	x9, x9, #0x1
  413df4:	sub	x10, x8, #0x10
  413df8:	cmp	x9, x21
  413dfc:	str	q0, [x8]
  413e00:	mov	x8, x10
  413e04:	b.gt	413dec <wcrtomb@plt+0x1118c>
  413e08:	b	413c84 <wcrtomb@plt+0x11024>
  413e0c:	mov	x25, xzr
  413e10:	ldr	x9, [x14, #176]
  413e14:	lsr	x8, x9, #59
  413e18:	cbnz	x8, 41486c <wcrtomb@plt+0x11c0c>
  413e1c:	lsl	x0, x9, #4
  413e20:	mov	x19, x9
  413e24:	bl	416dd4 <wcrtomb@plt+0x14174>
  413e28:	mov	x16, x19
  413e2c:	movi	v0.2d, #0xffffffffffffffff
  413e30:	cmp	x25, #0x1
  413e34:	mov	x28, xzr
  413e38:	stp	xzr, x19, [x29, #-32]
  413e3c:	stur	x0, [x29, #-40]
  413e40:	stp	q0, q0, [x29, #-80]
  413e44:	b.lt	41440c <wcrtomb@plt+0x117ac>  // b.tstop
  413e48:	ldr	x9, [sp, #56]
  413e4c:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  413e50:	ldr	q0, [x8, #3808]
  413e54:	ldr	x13, [sp, #128]
  413e58:	ldur	x14, [x29, #-120]
  413e5c:	mov	w18, #0x1                   	// #1
  413e60:	mov	x26, xzr
  413e64:	ubfx	x17, x9, #6, #2
  413e68:	and	x1, x9, #0xff
  413e6c:	mov	x20, #0xffffffffffffffff    	// #-1
  413e70:	movi	v4.2d, #0x0
  413e74:	sub	x2, x29, #0x70
  413e78:	mov	w3, #0x50                  	// #80
  413e7c:	lsl	x4, x18, x9
  413e80:	mov	x21, #0xffffffffffffffff    	// #-1
  413e84:	mov	x15, #0xffffffffffffffff    	// #-1
  413e88:	mov	x23, #0xffffffffffffffff    	// #-1
  413e8c:	str	q0, [sp]
  413e90:	stp	x1, x17, [sp, #104]
  413e94:	str	x4, [sp, #96]
  413e98:	b	413ec0 <wcrtomb@plt+0x11260>
  413e9c:	bic	x23, x23, x10
  413ea0:	bic	x15, x15, x8
  413ea4:	bic	x21, x21, x11
  413ea8:	bic	x20, x20, x9
  413eac:	stp	x23, x15, [x29, #-80]
  413eb0:	stp	x21, x20, [x29, #-64]
  413eb4:	add	x26, x26, #0x1
  413eb8:	cmp	x26, x25
  413ebc:	b.eq	414420 <wcrtomb@plt+0x117c0>  // b.none
  413ec0:	add	x9, x24, x26, lsl #4
  413ec4:	ldr	x8, [x14, #144]
  413ec8:	ldp	x27, x22, [x9]
  413ecc:	ldr	x9, [x8, x27, lsl #3]
  413ed0:	cmp	x9, #0xff
  413ed4:	b.hi	413f0c <wcrtomb@plt+0x112ac>  // b.pmore
  413ed8:	stp	q4, q4, [x29, #-112]
  413edc:	lsl	x9, x27, #3
  413ee0:	ldr	x10, [x8, x9]
  413ee4:	ubfx	x11, x10, #6, #26
  413ee8:	lsl	x11, x11, #3
  413eec:	ldr	x12, [x2, x11]
  413ef0:	lsl	x10, x18, x10
  413ef4:	orr	x10, x10, x12
  413ef8:	str	x10, [x2, x11]
  413efc:	ldr	x8, [x8, x9]
  413f00:	cmp	x8, x1
  413f04:	cset	w5, eq  // eq = none
  413f08:	b	4141d4 <wcrtomb@plt+0x11574>
  413f0c:	cmp	x9, #0x114
  413f10:	b.lt	413f3c <wcrtomb@plt+0x112dc>  // b.tstop
  413f14:	ldr	x8, [x14]
  413f18:	add	x8, x8, x9, lsl #5
  413f1c:	mov	x9, #0xffffffffffffdd80    	// #-8832
  413f20:	add	x8, x8, x9
  413f24:	ldp	q1, q0, [x8]
  413f28:	stp	q1, q0, [x29, #-112]
  413f2c:	ldr	x8, [x2, x17, lsl #3]
  413f30:	tst	x8, x4
  413f34:	cset	w5, ne  // ne = any
  413f38:	b	4141d4 <wcrtomb@plt+0x11574>
  413f3c:	cmp	x9, #0x10a
  413f40:	b.ne	413eb4 <wcrtomb@plt+0x11254>  // b.any
  413f44:	ldr	x8, [x14]
  413f48:	ldr	x9, [x14, #24]
  413f4c:	add	x8, x8, x9, lsl #5
  413f50:	ldp	q1, q0, [x8]
  413f54:	stp	q1, q0, [x29, #-112]
  413f58:	ldr	x8, [x14, #296]
  413f5c:	ldr	x9, [x2, x17, lsl #3]
  413f60:	madd	x10, x13, x3, x8
  413f64:	ldrb	w10, [x10, #32]
  413f68:	tst	x9, x4
  413f6c:	cset	w5, ne  // ne = any
  413f70:	and	w9, w22, w10
  413f74:	tst	w9, #0x7
  413f78:	b.eq	4141d4 <wcrtomb@plt+0x11574>  // b.none
  413f7c:	stp	x23, x21, [sp, #64]
  413f80:	str	x20, [sp, #80]
  413f84:	madd	x19, x13, x3, x8
  413f88:	ldr	x21, [x19, #56]!
  413f8c:	str	x0, [sp, #88]
  413f90:	cbnz	x21, 414004 <wcrtomb@plt+0x113a4>
  413f94:	add	x9, x13, x13, lsl #2
  413f98:	lsl	x20, x9, #4
  413f9c:	add	x8, x8, x20
  413fa0:	mov	w0, #0x10                  	// #16
  413fa4:	str	x8, [sp, #120]
  413fa8:	mov	x23, x15
  413fac:	mov	x21, x28
  413fb0:	mov	x28, x16
  413fb4:	str	w5, [sp, #52]
  413fb8:	bl	416dd4 <wcrtomb@plt+0x14174>
  413fbc:	ldp	x17, x8, [sp, #112]
  413fc0:	ldr	q0, [sp]
  413fc4:	ldur	x14, [x29, #-120]
  413fc8:	ldp	x4, x1, [sp, #96]
  413fcc:	str	x0, [x8, #48]
  413fd0:	str	q0, [x19]
  413fd4:	ldr	x8, [x14, #296]
  413fd8:	ldr	w5, [sp, #52]
  413fdc:	mov	x16, x28
  413fe0:	mov	x28, x21
  413fe4:	add	x9, x8, x20
  413fe8:	ldr	x13, [sp, #128]
  413fec:	ldr	x21, [x9, #56]
  413ff0:	mov	w3, #0x50                  	// #80
  413ff4:	sub	x2, x29, #0x70
  413ff8:	movi	v4.2d, #0x0
  413ffc:	mov	w18, #0x1                   	// #1
  414000:	mov	x15, x23
  414004:	madd	x12, x13, x3, x8
  414008:	cmp	x21, #0x0
  41400c:	add	x23, x12, #0x30
  414010:	str	x28, [sp, #120]
  414014:	b.le	414068 <wcrtomb@plt+0x11408>
  414018:	ldr	x0, [x23]
  41401c:	mov	x28, xzr
  414020:	mov	x9, x21
  414024:	b	414034 <wcrtomb@plt+0x113d4>
  414028:	add	x28, x10, #0x1
  41402c:	cmp	x28, x9
  414030:	b.ge	414070 <wcrtomb@plt+0x11410>  // b.tcont
  414034:	add	x10, x9, x28
  414038:	asr	x10, x10, #1
  41403c:	lsl	x11, x10, #4
  414040:	ldr	x11, [x0, x11]
  414044:	cmp	x11, x27
  414048:	b.lt	414028 <wcrtomb@plt+0x113c8>  // b.tstop
  41404c:	mov	x9, x10
  414050:	b.ne	41402c <wcrtomb@plt+0x113cc>  // b.any
  414054:	add	x8, x0, x10, lsl #4
  414058:	ldr	w9, [x8, #8]
  41405c:	orr	w9, w9, w22
  414060:	str	w9, [x8, #8]
  414064:	b	4141c8 <wcrtomb@plt+0x11568>
  414068:	ldr	x0, [x23]
  41406c:	mov	x28, xzr
  414070:	madd	x20, x13, x3, x8
  414074:	ldr	x8, [x20, #64]!
  414078:	cmp	x8, x21
  41407c:	b.gt	414180 <wcrtomb@plt+0x11520>
  414080:	adds	x9, x8, x8, asr #1
  414084:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  414088:	csel	x19, x10, x9, vs
  41408c:	str	x15, [sp, #32]
  414090:	tbnz	x19, #63, 4140c8 <wcrtomb@plt+0x11468>
  414094:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  414098:	cmp	x19, x9
  41409c:	b.le	4140e0 <wcrtomb@plt+0x11480>
  4140a0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4140a4:	lsr	x19, x9, #4
  4140a8:	and	x1, x9, #0x7ffffffffffffff0
  4140ac:	cbnz	x0, 414104 <wcrtomb@plt+0x114a4>
  4140b0:	str	xzr, [x20]
  4140b4:	cmp	x19, x8
  4140b8:	stp	x12, x16, [sp, #16]
  4140bc:	str	w5, [sp, #52]
  4140c0:	b.gt	41414c <wcrtomb@plt+0x114ec>
  4140c4:	b	414114 <wcrtomb@plt+0x114b4>
  4140c8:	cmn	x19, #0x1
  4140cc:	b.eq	4140ec <wcrtomb@plt+0x1148c>  // b.none
  4140d0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4140d4:	sdiv	x9, x9, x19
  4140d8:	cmp	x9, #0x10
  4140dc:	b.lt	4140a0 <wcrtomb@plt+0x11440>  // b.tstop
  4140e0:	lsl	x1, x19, #4
  4140e4:	cmp	x1, #0x7f
  4140e8:	b.gt	414100 <wcrtomb@plt+0x114a0>
  4140ec:	mov	w9, #0x80                  	// #128
  4140f0:	lsr	x19, x9, #4
  4140f4:	and	x1, x9, #0x7ffffffffffffff0
  4140f8:	cbnz	x0, 414104 <wcrtomb@plt+0x114a4>
  4140fc:	b	4140b0 <wcrtomb@plt+0x11450>
  414100:	cbz	x0, 4140b0 <wcrtomb@plt+0x11450>
  414104:	cmp	x19, x8
  414108:	stp	x12, x16, [sp, #16]
  41410c:	str	w5, [sp, #52]
  414110:	b.gt	41414c <wcrtomb@plt+0x114ec>
  414114:	adds	x19, x8, #0x1
  414118:	b.vs	41486c <wcrtomb@plt+0x11c0c>
  41411c:	tbnz	x19, #63, 414130 <wcrtomb@plt+0x114d0>
  414120:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  414124:	cmp	x19, x8
  414128:	b.le	414148 <wcrtomb@plt+0x114e8>
  41412c:	b	41486c <wcrtomb@plt+0x11c0c>
  414130:	cmn	x19, #0x1
  414134:	b.eq	414148 <wcrtomb@plt+0x114e8>  // b.none
  414138:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  41413c:	sdiv	x8, x8, x19
  414140:	cmp	x8, #0x10
  414144:	b.lt	41486c <wcrtomb@plt+0x11c0c>  // b.tstop
  414148:	lsl	x1, x19, #4
  41414c:	bl	416e54 <wcrtomb@plt+0x141f4>
  414150:	str	x19, [x20]
  414154:	ldr	x13, [sp, #128]
  414158:	ldur	x14, [x29, #-120]
  41415c:	ldp	x16, x15, [sp, #24]
  414160:	ldp	x1, x17, [sp, #104]
  414164:	ldr	x4, [sp, #96]
  414168:	ldr	w5, [sp, #52]
  41416c:	ldr	x12, [sp, #16]
  414170:	mov	w18, #0x1                   	// #1
  414174:	movi	v4.2d, #0x0
  414178:	sub	x2, x29, #0x70
  41417c:	mov	w3, #0x50                  	// #80
  414180:	add	x8, x12, #0x38
  414184:	cmp	x21, x28
  414188:	str	x0, [x23]
  41418c:	b.le	4141b4 <wcrtomb@plt+0x11554>
  414190:	lsl	x9, x21, #4
  414194:	add	x10, x0, x9
  414198:	ldur	q0, [x10, #-16]
  41419c:	sub	x21, x21, #0x1
  4141a0:	cmp	x21, x28
  4141a4:	sub	x9, x9, #0x10
  4141a8:	str	q0, [x10]
  4141ac:	ldr	x0, [x23]
  4141b0:	b.gt	414194 <wcrtomb@plt+0x11534>
  4141b4:	add	x9, x0, x28, lsl #4
  4141b8:	stp	x27, x22, [x9]
  4141bc:	ldr	x9, [x8]
  4141c0:	add	x9, x9, #0x1
  4141c4:	str	x9, [x8]
  4141c8:	ldp	x20, x0, [sp, #80]
  4141cc:	ldr	x28, [sp, #120]
  4141d0:	ldp	x23, x21, [sp, #64]
  4141d4:	cmp	w22, #0x1ff
  4141d8:	b.ne	4141ec <wcrtomb@plt+0x1158c>  // b.any
  4141dc:	ldp	x10, x8, [x29, #-112]
  4141e0:	ldp	x11, x9, [x29, #-96]
  4141e4:	cbz	w5, 413e9c <wcrtomb@plt+0x1123c>
  4141e8:	b	4142dc <wcrtomb@plt+0x1167c>
  4141ec:	ldr	x8, [x14, #296]
  4141f0:	lsr	w9, w22, #3
  4141f4:	madd	x8, x13, x3, x8
  4141f8:	ldrb	w8, [x8, #32]
  4141fc:	and	w8, w8, #0x7
  414200:	tst	w8, w22, lsr #6
  414204:	b.eq	414234 <wcrtomb@plt+0x115d4>  // b.none
  414208:	tst	w9, w8
  41420c:	b.eq	414258 <wcrtomb@plt+0x115f8>  // b.none
  414210:	tst	w8, w22
  414214:	b.eq	41427c <wcrtomb@plt+0x1161c>  // b.none
  414218:	ldp	x10, x8, [x29, #-112]
  41421c:	ldp	x11, x9, [x29, #-96]
  414220:	orr	x12, x8, x10
  414224:	orr	x12, x12, x11
  414228:	orr	x12, x12, x9
  41422c:	cbnz	x12, 4142c8 <wcrtomb@plt+0x11668>
  414230:	b	413eb4 <wcrtomb@plt+0x11254>
  414234:	ldr	q0, [x14, #1008]
  414238:	ldp	q1, q2, [x29, #-112]
  41423c:	bic	v0.16b, v1.16b, v0.16b
  414240:	stur	q0, [x29, #-112]
  414244:	ldr	q0, [x14, #1024]
  414248:	bic	v0.16b, v2.16b, v0.16b
  41424c:	stur	q0, [x29, #-96]
  414250:	tst	w9, w8
  414254:	b.ne	414210 <wcrtomb@plt+0x115b0>  // b.any
  414258:	ldr	q0, [x14, #976]
  41425c:	ldp	q1, q2, [x29, #-112]
  414260:	bic	v0.16b, v1.16b, v0.16b
  414264:	stur	q0, [x29, #-112]
  414268:	ldr	q0, [x14, #992]
  41426c:	bic	v0.16b, v2.16b, v0.16b
  414270:	stur	q0, [x29, #-96]
  414274:	tst	w8, w22
  414278:	b.ne	414218 <wcrtomb@plt+0x115b8>  // b.any
  41427c:	ldr	q0, [x14, #976]
  414280:	ldr	q1, [x14, #1008]
  414284:	ldp	q2, q3, [x29, #-112]
  414288:	orr	v0.16b, v1.16b, v0.16b
  41428c:	and	v0.16b, v2.16b, v0.16b
  414290:	stur	q0, [x29, #-112]
  414294:	ldr	q1, [x14, #992]
  414298:	ldr	q2, [x14, #1024]
  41429c:	mov	x8, v0.d[1]
  4142a0:	fmov	x10, d0
  4142a4:	orr	v0.16b, v2.16b, v1.16b
  4142a8:	and	v0.16b, v3.16b, v0.16b
  4142ac:	mov	x9, v0.d[1]
  4142b0:	fmov	x11, d0
  4142b4:	stur	q0, [x29, #-96]
  4142b8:	orr	x12, x8, x10
  4142bc:	orr	x12, x12, x11
  4142c0:	orr	x12, x12, x9
  4142c4:	cbz	x12, 413eb4 <wcrtomb@plt+0x11254>
  4142c8:	ldr	x12, [x2, x17, lsl #3]
  4142cc:	tst	x12, x4
  4142d0:	cset	w12, ne  // ne = any
  4142d4:	and	w12, w5, w12
  4142d8:	tbz	w12, #0, 413e9c <wcrtomb@plt+0x1123c>
  4142dc:	and	x23, x23, x10
  4142e0:	and	x15, x15, x8
  4142e4:	and	x21, x21, x11
  4142e8:	and	x20, x20, x9
  4142ec:	cmp	x16, x28
  4142f0:	stp	x23, x15, [x29, #-80]
  4142f4:	stp	x21, x20, [x29, #-64]
  4142f8:	b.gt	4143f4 <wcrtomb@plt+0x11794>
  4142fc:	adds	x8, x16, x16, asr #1
  414300:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414304:	str	x28, [sp, #120]
  414308:	mov	x28, x23
  41430c:	mov	x23, x15
  414310:	csel	x19, x9, x8, vs
  414314:	tbnz	x19, #63, 414344 <wcrtomb@plt+0x116e4>
  414318:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  41431c:	cmp	x19, x8
  414320:	b.le	41435c <wcrtomb@plt+0x116fc>
  414324:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  414328:	lsr	x19, x8, #4
  41432c:	and	x1, x8, #0x7ffffffffffffff0
  414330:	cbnz	x0, 414380 <wcrtomb@plt+0x11720>
  414334:	stur	xzr, [x29, #-24]
  414338:	cmp	x19, x16
  41433c:	b.gt	4143c0 <wcrtomb@plt+0x11760>
  414340:	b	414388 <wcrtomb@plt+0x11728>
  414344:	cmn	x19, #0x1
  414348:	b.eq	414368 <wcrtomb@plt+0x11708>  // b.none
  41434c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  414350:	sdiv	x8, x8, x19
  414354:	cmp	x8, #0x10
  414358:	b.lt	414324 <wcrtomb@plt+0x116c4>  // b.tstop
  41435c:	lsl	x1, x19, #4
  414360:	cmp	x1, #0x7f
  414364:	b.gt	41437c <wcrtomb@plt+0x1171c>
  414368:	mov	w8, #0x80                  	// #128
  41436c:	lsr	x19, x8, #4
  414370:	and	x1, x8, #0x7ffffffffffffff0
  414374:	cbnz	x0, 414380 <wcrtomb@plt+0x11720>
  414378:	b	414334 <wcrtomb@plt+0x116d4>
  41437c:	cbz	x0, 414334 <wcrtomb@plt+0x116d4>
  414380:	cmp	x19, x16
  414384:	b.gt	4143c0 <wcrtomb@plt+0x11760>
  414388:	adds	x19, x16, #0x1
  41438c:	b.vs	41486c <wcrtomb@plt+0x11c0c>
  414390:	tbnz	x19, #63, 4143a4 <wcrtomb@plt+0x11744>
  414394:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  414398:	cmp	x19, x8
  41439c:	b.le	4143bc <wcrtomb@plt+0x1175c>
  4143a0:	b	41486c <wcrtomb@plt+0x11c0c>
  4143a4:	cmn	x19, #0x1
  4143a8:	b.eq	4143bc <wcrtomb@plt+0x1175c>  // b.none
  4143ac:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4143b0:	sdiv	x8, x8, x19
  4143b4:	cmp	x8, #0x10
  4143b8:	b.lt	41486c <wcrtomb@plt+0x11c0c>  // b.tstop
  4143bc:	lsl	x1, x19, #4
  4143c0:	bl	416e54 <wcrtomb@plt+0x141f4>
  4143c4:	ldur	x14, [x29, #-120]
  4143c8:	mov	x15, x23
  4143cc:	mov	x23, x28
  4143d0:	ldp	x28, x13, [sp, #120]
  4143d4:	ldp	x1, x17, [sp, #104]
  4143d8:	ldr	x4, [sp, #96]
  4143dc:	mov	x16, x19
  4143e0:	mov	w18, #0x1                   	// #1
  4143e4:	movi	v4.2d, #0x0
  4143e8:	sub	x2, x29, #0x70
  4143ec:	mov	w3, #0x50                  	// #80
  4143f0:	stur	x19, [x29, #-24]
  4143f4:	add	x9, x28, #0x1
  4143f8:	add	x8, x0, x28, lsl #4
  4143fc:	mov	x28, x9
  414400:	stp	x0, x9, [x29, #-40]
  414404:	stp	x27, x22, [x8]
  414408:	b	413eb4 <wcrtomb@plt+0x11254>
  41440c:	ldur	x14, [x29, #-120]
  414410:	mov	x20, #0xffffffffffffffff    	// #-1
  414414:	mov	x21, #0xffffffffffffffff    	// #-1
  414418:	mov	x15, #0xffffffffffffffff    	// #-1
  41441c:	mov	x23, #0xffffffffffffffff    	// #-1
  414420:	ldr	x19, [x14, #176]
  414424:	lsr	x8, x19, #59
  414428:	cbnz	x8, 41486c <wcrtomb@plt+0x11c0c>
  41442c:	mov	x27, x0
  414430:	lsl	x0, x19, #4
  414434:	mov	x26, x16
  414438:	mov	x25, x15
  41443c:	mov	x24, x21
  414440:	mov	x22, x20
  414444:	mov	x20, x14
  414448:	bl	416dd4 <wcrtomb@plt+0x14174>
  41444c:	stp	xzr, x19, [x29, #-104]
  414450:	stur	x0, [x29, #-112]
  414454:	ldrb	w8, [x20, #328]
  414458:	ldr	x21, [sp, #40]
  41445c:	cmp	x28, #0x0
  414460:	mov	x0, x20
  414464:	b.le	414500 <wcrtomb@plt+0x118a0>
  414468:	mov	x14, x25
  41446c:	cbz	w8, 4145d4 <wcrtomb@plt+0x11974>
  414470:	ldrb	w8, [x0, #1048]
  414474:	cmp	w8, #0x1
  414478:	cset	w9, ne  // ne = any
  41447c:	cbz	w8, 4144a8 <wcrtomb@plt+0x11848>
  414480:	ldr	x8, [x0, #280]
  414484:	mov	w10, #0x1                   	// #1
  414488:	mov	x11, x27
  41448c:	ldr	x9, [x11], #16
  414490:	ldrb	w12, [x8, x9]
  414494:	and	w9, w12, #0x1
  414498:	tbz	w12, #0, 4144a8 <wcrtomb@plt+0x11848>
  41449c:	cmp	x10, x28
  4144a0:	add	x10, x10, #0x1
  4144a4:	b.lt	41448c <wcrtomb@plt+0x1182c>  // b.tstop
  4144a8:	cbz	w9, 4145d4 <wcrtomb@plt+0x11974>
  4144ac:	ldr	x8, [x0, #296]
  4144b0:	sub	x1, x29, #0x28
  4144b4:	sub	x3, x29, #0x70
  4144b8:	mov	w2, #0xffffffff            	// #-1
  4144bc:	add	x0, x8, #0x8
  4144c0:	bl	412974 <wcrtomb@plt+0xfd14>
  4144c4:	ldur	x28, [x29, #-104]
  4144c8:	mov	x0, x27
  4144cc:	mov	x8, x26
  4144d0:	subs	x20, x28, x26
  4144d4:	b.le	4145ac <wcrtomb@plt+0x1194c>
  4144d8:	bl	402a10 <free@plt>
  4144dc:	adds	x8, x26, x26, asr #1
  4144e0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4144e4:	csel	x19, x9, x8, vs
  4144e8:	tbnz	x19, #63, 414528 <wcrtomb@plt+0x118c8>
  4144ec:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4144f0:	cmp	x19, x8
  4144f4:	b.le	414540 <wcrtomb@plt+0x118e0>
  4144f8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4144fc:	b	414550 <wcrtomb@plt+0x118f0>
  414500:	cbz	w8, 414518 <wcrtomb@plt+0x118b8>
  414504:	ldrsw	x8, [x0, #364]
  414508:	ldr	x24, [x0, #400]
  41450c:	mov	x25, xzr
  414510:	sub	x26, x8, #0x1
  414514:	b	414784 <wcrtomb@plt+0x11b24>
  414518:	mov	x26, #0xffffffffffffffff    	// #-1
  41451c:	mov	x25, #0xffffffffffffffff    	// #-1
  414520:	mov	x24, #0xffffffffffffffff    	// #-1
  414524:	b	414784 <wcrtomb@plt+0x11b24>
  414528:	cmn	x19, #0x1
  41452c:	b.eq	41454c <wcrtomb@plt+0x118ec>  // b.none
  414530:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  414534:	sdiv	x8, x8, x19
  414538:	cmp	x8, #0x10
  41453c:	b.lt	4144f8 <wcrtomb@plt+0x11898>  // b.tstop
  414540:	lsl	x1, x19, #4
  414544:	cmp	x1, #0x7f
  414548:	b.gt	414558 <wcrtomb@plt+0x118f8>
  41454c:	mov	w8, #0x80                  	// #128
  414550:	lsr	x19, x8, #4
  414554:	and	x1, x8, #0x7ffffffffffffff0
  414558:	cmp	x19, x28
  41455c:	stur	xzr, [x29, #-24]
  414560:	b.ge	41459c <wcrtomb@plt+0x1193c>  // b.tcont
  414564:	adds	x19, x26, x20
  414568:	b.vs	41486c <wcrtomb@plt+0x11c0c>
  41456c:	tbnz	x19, #63, 414580 <wcrtomb@plt+0x11920>
  414570:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  414574:	cmp	x19, x8
  414578:	b.le	414598 <wcrtomb@plt+0x11938>
  41457c:	b	41486c <wcrtomb@plt+0x11c0c>
  414580:	cmn	x19, #0x1
  414584:	b.eq	414598 <wcrtomb@plt+0x11938>  // b.none
  414588:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  41458c:	sdiv	x8, x8, x19
  414590:	cmp	x8, #0x10
  414594:	b.lt	41486c <wcrtomb@plt+0x11c0c>  // b.tstop
  414598:	lsl	x1, x19, #4
  41459c:	mov	x0, xzr
  4145a0:	bl	416e54 <wcrtomb@plt+0x141f4>
  4145a4:	stur	x19, [x29, #-24]
  4145a8:	stur	x0, [x29, #-40]
  4145ac:	stur	x28, [x29, #-32]
  4145b0:	cbz	x28, 4145c8 <wcrtomb@plt+0x11968>
  4145b4:	ldur	x1, [x29, #-112]
  4145b8:	lsl	x2, x28, #4
  4145bc:	mov	x27, x0
  4145c0:	bl	402580 <memcpy@plt>
  4145c4:	b	4145cc <wcrtomb@plt+0x1196c>
  4145c8:	mov	x27, x0
  4145cc:	ldur	x0, [x29, #-120]
  4145d0:	mov	x14, x25
  4145d4:	ldr	x8, [x0, #1008]
  4145d8:	ldr	x9, [x0, #976]
  4145dc:	mov	w10, #0x2                   	// #2
  4145e0:	ldr	x11, [x0, #1016]
  4145e4:	tst	x8, x23
  4145e8:	cset	w12, ne  // ne = any
  4145ec:	orr	x8, x9, x8
  4145f0:	tst	x9, x23
  4145f4:	bfi	w10, w12, #2, #1
  4145f8:	lsl	w12, w12, #2
  4145fc:	csel	w10, w12, w10, eq  // eq = none
  414600:	bics	xzr, x23, x8
  414604:	ldr	x9, [x0, #984]
  414608:	cset	w13, ne  // ne = any
  41460c:	orr	w10, w10, w13
  414610:	tst	x11, x14
  414614:	orr	w13, w10, #0x4
  414618:	csel	w10, w10, w13, eq  // eq = none
  41461c:	ldr	x12, [x0, #1024]
  414620:	orr	x11, x9, x11
  414624:	tst	x9, x14
  414628:	orr	w9, w10, #0x2
  41462c:	csel	w9, w10, w9, eq  // eq = none
  414630:	bics	xzr, x14, x11
  414634:	ldr	x8, [x0, #992]
  414638:	cset	w14, ne  // ne = any
  41463c:	orr	w9, w9, w14
  414640:	tst	x12, x24
  414644:	orr	w14, w9, #0x4
  414648:	csel	w9, w9, w14, eq  // eq = none
  41464c:	ldr	x13, [x0, #1032]
  414650:	orr	x11, x8, x12
  414654:	tst	x8, x24
  414658:	orr	w8, w9, #0x2
  41465c:	csel	w8, w9, w8, eq  // eq = none
  414660:	bics	xzr, x24, x11
  414664:	ldr	x10, [x0, #1000]
  414668:	cset	w9, ne  // ne = any
  41466c:	orr	w8, w8, w9
  414670:	tst	x13, x22
  414674:	orr	w9, w8, #0x4
  414678:	csel	w8, w8, w9, eq  // eq = none
  41467c:	orr	x12, x10, x13
  414680:	tst	x10, x22
  414684:	orr	w9, w8, #0x2
  414688:	csel	w8, w8, w9, eq  // eq = none
  41468c:	bics	xzr, x22, x12
  414690:	cset	w9, ne  // ne = any
  414694:	cmp	x28, #0x1
  414698:	orr	w19, w8, w9
  41469c:	b.lt	4146b8 <wcrtomb@plt+0x11a58>  // b.tstop
  4146a0:	ldr	x8, [x0, #344]
  4146a4:	cmp	x28, #0x3
  4146a8:	b.cs	4146c0 <wcrtomb@plt+0x11a60>  // b.hs, b.nlast
  4146ac:	mov	x9, xzr
  4146b0:	mov	w20, wzr
  4146b4:	b	414700 <wcrtomb@plt+0x11aa0>
  4146b8:	mov	w20, wzr
  4146bc:	b	41471c <wcrtomb@plt+0x11abc>
  4146c0:	and	x9, x28, #0xfffffffffffffffe
  4146c4:	mov	w10, wzr
  4146c8:	mov	w11, wzr
  4146cc:	add	x12, x27, #0x10
  4146d0:	mov	x13, x9
  4146d4:	ldur	x14, [x12, #-16]
  4146d8:	ldr	x15, [x12], #32
  4146dc:	subs	x13, x13, #0x2
  4146e0:	ldr	w14, [x8, x14, lsl #2]
  4146e4:	ldr	w15, [x8, x15, lsl #2]
  4146e8:	orr	w10, w14, w10
  4146ec:	orr	w11, w15, w11
  4146f0:	b.ne	4146d4 <wcrtomb@plt+0x11a74>  // b.any
  4146f4:	cmp	x28, x9
  4146f8:	orr	w20, w11, w10
  4146fc:	b.eq	41471c <wcrtomb@plt+0x11abc>  // b.none
  414700:	sub	x10, x28, x9
  414704:	add	x9, x27, x9, lsl #4
  414708:	ldr	x11, [x9], #16
  41470c:	subs	x10, x10, #0x1
  414710:	ldr	w11, [x8, x11, lsl #2]
  414714:	orr	w20, w11, w20
  414718:	b.ne	414708 <wcrtomb@plt+0x11aa8>  // b.any
  41471c:	bics	wzr, w19, w20
  414720:	b.eq	414858 <wcrtomb@plt+0x11bf8>  // b.none
  414724:	eor	w2, w20, #0x7
  414728:	sub	x1, x29, #0x28
  41472c:	bl	4124a8 <wcrtomb@plt+0xf848>
  414730:	mov	x24, x0
  414734:	and	w19, w20, w19
  414738:	mov	x25, x24
  41473c:	tbz	w19, #2, 414754 <wcrtomb@plt+0x11af4>
  414740:	ldur	x0, [x29, #-120]
  414744:	sub	x1, x29, #0x28
  414748:	mov	w2, #0x4                   	// #4
  41474c:	bl	4124a8 <wcrtomb@plt+0xf848>
  414750:	mov	x25, x0
  414754:	ldur	x8, [x29, #-120]
  414758:	mov	x26, x24
  41475c:	tbz	w19, #1, 414778 <wcrtomb@plt+0x11b18>
  414760:	sub	x1, x29, #0x28
  414764:	mov	w2, #0x2                   	// #2
  414768:	mov	x0, x8
  41476c:	bl	4124a8 <wcrtomb@plt+0xf848>
  414770:	ldur	x8, [x29, #-120]
  414774:	mov	x26, x0
  414778:	mov	x0, x8
  41477c:	bl	41324c <wcrtomb@plt+0x105ec>
  414780:	ldur	x0, [x29, #-120]
  414784:	mov	x8, xzr
  414788:	add	x9, x0, #0x1cc
  41478c:	sub	x10, x29, #0x50
  414790:	b	4147a4 <wcrtomb@plt+0x11b44>
  414794:	str	x11, [x21, x8, lsl #3]
  414798:	add	x8, x8, #0x1
  41479c:	cmp	x8, #0x100
  4147a0:	b.eq	4147d8 <wcrtomb@plt+0x11b78>  // b.none
  4147a4:	ubfx	x11, x8, #6, #26
  4147a8:	ldr	x11, [x10, x11, lsl #3]
  4147ac:	lsr	x11, x11, x8
  4147b0:	tbz	w11, #0, 414798 <wcrtomb@plt+0x11b38>
  4147b4:	ldrb	w12, [x9, x8]
  4147b8:	mov	x11, x25
  4147bc:	cmp	w12, #0x4
  4147c0:	b.eq	414794 <wcrtomb@plt+0x11b34>  // b.none
  4147c4:	cmp	w12, #0x2
  4147c8:	mov	x11, x26
  4147cc:	b.eq	414794 <wcrtomb@plt+0x11b34>  // b.none
  4147d0:	mov	x11, x24
  4147d4:	b	414794 <wcrtomb@plt+0x11b34>
  4147d8:	mov	x0, x27
  4147dc:	bl	402a10 <free@plt>
  4147e0:	ldur	x0, [x29, #-16]
  4147e4:	bl	402a10 <free@plt>
  4147e8:	ldur	x0, [x29, #-112]
  4147ec:	bl	402a10 <free@plt>
  4147f0:	ldur	x11, [x29, #-120]
  4147f4:	sub	x10, x29, #0x50
  4147f8:	ldrb	w8, [x11, #459]
  4147fc:	lsr	x9, x8, #3
  414800:	and	x9, x9, #0x18
  414804:	ldr	x9, [x10, x9]
  414808:	lsr	x9, x9, x8
  41480c:	tbz	w9, #0, 41482c <wcrtomb@plt+0x11bcc>
  414810:	lsl	x8, x8, #3
  414814:	ldr	x9, [x11, #392]
  414818:	ldr	x10, [x21, x8]
  41481c:	ldr	x12, [sp, #128]
  414820:	mov	x11, #0xffffffffffffffff    	// #-1
  414824:	str	x10, [x9, x12, lsl #3]
  414828:	str	x11, [x21, x8]
  41482c:	ldr	x8, [sp, #56]
  414830:	ldp	x20, x19, [sp, #336]
  414834:	ldp	x24, x23, [sp, #304]
  414838:	ldp	x26, x25, [sp, #288]
  41483c:	and	x8, x8, #0xff
  414840:	ldr	x0, [x21, x8, lsl #3]
  414844:	ldp	x22, x21, [sp, #320]
  414848:	ldp	x28, x27, [sp, #272]
  41484c:	ldp	x29, x30, [sp, #256]
  414850:	add	sp, sp, #0x160
  414854:	ret
  414858:	mov	x24, #0xffffffffffffffff    	// #-1
  41485c:	and	w19, w20, w19
  414860:	mov	x25, x24
  414864:	tbnz	w19, #2, 414740 <wcrtomb@plt+0x11ae0>
  414868:	b	414754 <wcrtomb@plt+0x11af4>
  41486c:	bl	4170f0 <wcrtomb@plt+0x14490>
  414870:	sub	sp, sp, #0x40
  414874:	stp	x29, x30, [sp, #32]
  414878:	stp	x20, x19, [sp, #48]
  41487c:	add	x29, sp, #0x20
  414880:	mov	x19, x0
  414884:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  414888:	cmp	x0, #0x1
  41488c:	cset	w8, hi  // hi = pmore
  414890:	strb	w8, [x19]
  414894:	b.hi	4148cc <wcrtomb@plt+0x11c6c>  // b.pmore
  414898:	mov	w20, #0x1                   	// #1
  41489c:	cmp	w20, #0x100
  4148a0:	b.eq	4148d4 <wcrtomb@plt+0x11c74>  // b.none
  4148a4:	sub	w8, w20, #0x1
  4148a8:	add	x0, sp, #0x10
  4148ac:	sub	x1, x29, #0x4
  4148b0:	strb	wzr, [sp, #17]
  4148b4:	sturb	w20, [x29, #-4]
  4148b8:	strb	w8, [sp, #16]
  4148bc:	sturb	wzr, [x29, #-3]
  4148c0:	bl	402b60 <strcoll@plt>
  4148c4:	add	w20, w20, #0x1
  4148c8:	tbnz	w0, #31, 41489c <wcrtomb@plt+0x11c3c>
  4148cc:	mov	w8, wzr
  4148d0:	b	4148d8 <wcrtomb@plt+0x11c78>
  4148d4:	mov	w8, #0x1                   	// #1
  4148d8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4148dc:	add	x1, x1, #0x102
  4148e0:	sub	x0, x29, #0x4
  4148e4:	add	x3, sp, #0x10
  4148e8:	mov	w2, #0x2                   	// #2
  4148ec:	strb	w8, [x19, #1]
  4148f0:	str	xzr, [sp, #16]
  4148f4:	bl	417134 <wcrtomb@plt+0x144d4>
  4148f8:	ldur	w8, [x29, #-4]
  4148fc:	cmp	x0, #0x2
  414900:	cset	w9, eq  // eq = none
  414904:	mov	x20, xzr
  414908:	cmp	w8, #0x100
  41490c:	cset	w8, eq  // eq = none
  414910:	and	w8, w9, w8
  414914:	strb	w8, [x19, #2]
  414918:	add	x19, x19, #0x104
  41491c:	sub	x0, x29, #0x4
  414920:	add	x1, sp, #0xc
  414924:	add	x3, sp, #0x10
  414928:	mov	w2, #0x1                   	// #1
  41492c:	strb	w20, [sp, #12]
  414930:	str	xzr, [sp, #16]
  414934:	bl	417134 <wcrtomb@plt+0x144d4>
  414938:	add	x8, x19, x20
  41493c:	cmp	x0, #0x2
  414940:	sub	x8, x8, #0x101
  414944:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  414948:	strb	w9, [x8]
  41494c:	ldur	w8, [x29, #-4]
  414950:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  414954:	str	w8, [x19, x20, lsl #2]
  414958:	add	x20, x20, #0x1
  41495c:	cmp	x20, #0x100
  414960:	b.ne	41491c <wcrtomb@plt+0x11cbc>  // b.any
  414964:	ldp	x20, x19, [sp, #48]
  414968:	ldp	x29, x30, [sp, #32]
  41496c:	add	sp, sp, #0x40
  414970:	ret
  414974:	stp	x29, x30, [sp, #-80]!
  414978:	stp	x26, x25, [sp, #16]
  41497c:	stp	x24, x23, [sp, #32]
  414980:	stp	x22, x21, [sp, #48]
  414984:	stp	x20, x19, [sp, #64]
  414988:	mov	x29, sp
  41498c:	mov	x19, x1
  414990:	mov	w20, w0
  414994:	bl	402b90 <towupper@plt>
  414998:	mov	w21, w0
  41499c:	bl	402c10 <towlower@plt>
  4149a0:	cmp	w21, w20
  4149a4:	mov	w22, w0
  4149a8:	b.ne	4149bc <wcrtomb@plt+0x11d5c>  // b.any
  4149ac:	mov	w23, wzr
  4149b0:	cmp	w22, w21
  4149b4:	b.ne	4149cc <wcrtomb@plt+0x11d6c>  // b.any
  4149b8:	b	4149f0 <wcrtomb@plt+0x11d90>
  4149bc:	mov	w23, #0x1                   	// #1
  4149c0:	str	w21, [x19]
  4149c4:	cmp	w22, w21
  4149c8:	b.eq	4149f0 <wcrtomb@plt+0x11d90>  // b.none
  4149cc:	cmp	w22, w20
  4149d0:	b.eq	4149f0 <wcrtomb@plt+0x11d90>  // b.none
  4149d4:	mov	w0, w22
  4149d8:	bl	402b90 <towupper@plt>
  4149dc:	cmp	w0, w21
  4149e0:	b.ne	4149f0 <wcrtomb@plt+0x11d90>  // b.any
  4149e4:	add	w8, w23, #0x1
  4149e8:	str	w22, [x19, w23, uxtw #2]
  4149ec:	mov	w23, w8
  4149f0:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4149f4:	mov	x25, xzr
  4149f8:	add	x26, x26, #0xdc
  4149fc:	b	414a0c <wcrtomb@plt+0x11dac>
  414a00:	add	x25, x25, #0x2
  414a04:	cmp	x25, #0x26
  414a08:	b.eq	414a48 <wcrtomb@plt+0x11de8>  // b.none
  414a0c:	ldrsh	w24, [x26, x25]
  414a10:	cmp	w24, w20
  414a14:	b.eq	414a00 <wcrtomb@plt+0x11da0>  // b.none
  414a18:	cmp	w22, w24
  414a1c:	b.eq	414a00 <wcrtomb@plt+0x11da0>  // b.none
  414a20:	cmp	w21, w24
  414a24:	b.eq	414a00 <wcrtomb@plt+0x11da0>  // b.none
  414a28:	mov	w0, w24
  414a2c:	bl	402b90 <towupper@plt>
  414a30:	cmp	w0, w21
  414a34:	b.ne	414a00 <wcrtomb@plt+0x11da0>  // b.any
  414a38:	add	w8, w23, #0x1
  414a3c:	str	w24, [x19, w23, sxtw #2]
  414a40:	mov	w23, w8
  414a44:	b	414a00 <wcrtomb@plt+0x11da0>
  414a48:	mov	w0, w23
  414a4c:	ldp	x20, x19, [sp, #64]
  414a50:	ldp	x22, x21, [sp, #48]
  414a54:	ldp	x24, x23, [sp, #32]
  414a58:	ldp	x26, x25, [sp, #16]
  414a5c:	ldp	x29, x30, [sp], #80
  414a60:	ret
  414a64:	stp	x29, x30, [sp, #-16]!
  414a68:	mov	w0, #0xe                   	// #14
  414a6c:	mov	x29, sp
  414a70:	bl	4026f0 <nl_langinfo@plt>
  414a74:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  414a78:	add	x8, x8, #0x3e3
  414a7c:	cmp	x0, #0x0
  414a80:	csel	x8, x8, x0, eq  // eq = none
  414a84:	ldrb	w9, [x8]
  414a88:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414a8c:	add	x10, x10, #0x105
  414a90:	cmp	w9, #0x0
  414a94:	csel	x0, x10, x8, eq  // eq = none
  414a98:	ldp	x29, x30, [sp], #16
  414a9c:	ret
  414aa0:	stp	x29, x30, [sp, #-32]!
  414aa4:	stp	x20, x19, [sp, #16]
  414aa8:	mov	x29, sp
  414aac:	cbz	x0, 414b2c <wcrtomb@plt+0x11ecc>
  414ab0:	mov	w1, #0x2f                  	// #47
  414ab4:	mov	x19, x0
  414ab8:	bl	4028f0 <strrchr@plt>
  414abc:	cmp	x0, #0x0
  414ac0:	csinc	x20, x19, x0, eq  // eq = none
  414ac4:	sub	x8, x20, x19
  414ac8:	cmp	x8, #0x7
  414acc:	b.lt	414b10 <wcrtomb@plt+0x11eb0>  // b.tstop
  414ad0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414ad4:	sub	x0, x20, #0x7
  414ad8:	add	x1, x1, #0x143
  414adc:	mov	w2, #0x7                   	// #7
  414ae0:	bl	402790 <strncmp@plt>
  414ae4:	cbnz	w0, 414b10 <wcrtomb@plt+0x11eb0>
  414ae8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414aec:	add	x1, x1, #0x14b
  414af0:	mov	w2, #0x3                   	// #3
  414af4:	mov	x0, x20
  414af8:	bl	402790 <strncmp@plt>
  414afc:	mov	x19, x20
  414b00:	cbnz	w0, 414b10 <wcrtomb@plt+0x11eb0>
  414b04:	add	x19, x20, #0x3
  414b08:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414b0c:	str	x19, [x8, #1288]
  414b10:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414b14:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414b18:	str	x19, [x8, #1936]
  414b1c:	str	x19, [x9, #1240]
  414b20:	ldp	x20, x19, [sp, #16]
  414b24:	ldp	x29, x30, [sp], #32
  414b28:	ret
  414b2c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414b30:	ldr	x3, [x8, #1248]
  414b34:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414b38:	add	x0, x0, #0x10b
  414b3c:	mov	w1, #0x37                  	// #55
  414b40:	mov	w2, #0x1                   	// #1
  414b44:	bl	402a80 <fwrite@plt>
  414b48:	bl	402920 <abort@plt>
  414b4c:	sub	sp, sp, #0x40
  414b50:	stp	x20, x19, [sp, #48]
  414b54:	mov	w19, w3
  414b58:	mov	x20, x2
  414b5c:	mov	x3, sp
  414b60:	mov	w2, w4
  414b64:	stp	x29, x30, [sp, #32]
  414b68:	add	x29, sp, #0x20
  414b6c:	bl	427c00 <_obstack_memory_used@@Base+0x106e4>
  414b70:	cbz	w0, 414b7c <wcrtomb@plt+0x11f1c>
  414b74:	mov	w19, #0xfffffffe            	// #-2
  414b78:	b	414b98 <wcrtomb@plt+0x11f38>
  414b7c:	mov	x0, sp
  414b80:	mov	x1, x20
  414b84:	mov	w2, w19
  414b88:	bl	427cd8 <_obstack_memory_used@@Base+0x107bc>
  414b8c:	mov	w19, w0
  414b90:	mov	x0, sp
  414b94:	bl	427bc4 <_obstack_memory_used@@Base+0x106a8>
  414b98:	mov	w0, w19
  414b9c:	ldp	x20, x19, [sp, #48]
  414ba0:	ldp	x29, x30, [sp, #32]
  414ba4:	add	sp, sp, #0x40
  414ba8:	ret
  414bac:	stp	x29, x30, [sp, #-48]!
  414bb0:	str	x21, [sp, #16]
  414bb4:	stp	x20, x19, [sp, #32]
  414bb8:	mov	x29, sp
  414bbc:	mov	x19, x0
  414bc0:	bl	402bd0 <__errno_location@plt>
  414bc4:	ldr	w21, [x0]
  414bc8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414bcc:	add	x8, x8, #0x798
  414bd0:	cmp	x19, #0x0
  414bd4:	mov	x20, x0
  414bd8:	csel	x0, x8, x19, eq  // eq = none
  414bdc:	mov	w1, #0x38                  	// #56
  414be0:	bl	417044 <wcrtomb@plt+0x143e4>
  414be4:	str	w21, [x20]
  414be8:	ldp	x20, x19, [sp, #32]
  414bec:	ldr	x21, [sp, #16]
  414bf0:	ldp	x29, x30, [sp], #48
  414bf4:	ret
  414bf8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414bfc:	add	x8, x8, #0x798
  414c00:	cmp	x0, #0x0
  414c04:	csel	x8, x8, x0, eq  // eq = none
  414c08:	ldr	w0, [x8]
  414c0c:	ret
  414c10:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414c14:	add	x8, x8, #0x798
  414c18:	cmp	x0, #0x0
  414c1c:	csel	x8, x8, x0, eq  // eq = none
  414c20:	str	w1, [x8]
  414c24:	ret
  414c28:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414c2c:	add	x8, x8, #0x798
  414c30:	cmp	x0, #0x0
  414c34:	ubfx	w9, w1, #5, #3
  414c38:	csel	x8, x8, x0, eq  // eq = none
  414c3c:	add	x8, x8, w9, uxtw #2
  414c40:	ldr	w9, [x8, #8]
  414c44:	lsr	w10, w9, w1
  414c48:	and	w0, w10, #0x1
  414c4c:	and	w10, w2, #0x1
  414c50:	eor	w10, w0, w10
  414c54:	lsl	w10, w10, w1
  414c58:	eor	w9, w10, w9
  414c5c:	str	w9, [x8, #8]
  414c60:	ret
  414c64:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414c68:	add	x8, x8, #0x798
  414c6c:	cmp	x0, #0x0
  414c70:	csel	x8, x8, x0, eq  // eq = none
  414c74:	ldr	w0, [x8, #4]
  414c78:	str	w1, [x8, #4]
  414c7c:	ret
  414c80:	stp	x29, x30, [sp, #-16]!
  414c84:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414c88:	add	x8, x8, #0x798
  414c8c:	cmp	x0, #0x0
  414c90:	csel	x8, x8, x0, eq  // eq = none
  414c94:	mov	w9, #0xa                   	// #10
  414c98:	mov	x29, sp
  414c9c:	str	w9, [x8]
  414ca0:	cbz	x1, 414cb4 <wcrtomb@plt+0x12054>
  414ca4:	cbz	x2, 414cb4 <wcrtomb@plt+0x12054>
  414ca8:	stp	x1, x2, [x8, #40]
  414cac:	ldp	x29, x30, [sp], #16
  414cb0:	ret
  414cb4:	bl	402920 <abort@plt>
  414cb8:	sub	sp, sp, #0x60
  414cbc:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  414cc0:	add	x8, x8, #0x798
  414cc4:	cmp	x4, #0x0
  414cc8:	stp	x29, x30, [sp, #16]
  414ccc:	str	x25, [sp, #32]
  414cd0:	stp	x24, x23, [sp, #48]
  414cd4:	stp	x22, x21, [sp, #64]
  414cd8:	stp	x20, x19, [sp, #80]
  414cdc:	add	x29, sp, #0x10
  414ce0:	mov	x19, x3
  414ce4:	mov	x20, x2
  414ce8:	mov	x21, x1
  414cec:	mov	x22, x0
  414cf0:	csel	x24, x8, x4, eq  // eq = none
  414cf4:	bl	402bd0 <__errno_location@plt>
  414cf8:	ldp	w4, w5, [x24]
  414cfc:	ldp	x7, x8, [x24, #40]
  414d00:	ldr	w25, [x0]
  414d04:	mov	x23, x0
  414d08:	add	x6, x24, #0x8
  414d0c:	mov	x0, x22
  414d10:	mov	x1, x21
  414d14:	mov	x2, x20
  414d18:	mov	x3, x19
  414d1c:	str	x8, [sp]
  414d20:	bl	414d44 <wcrtomb@plt+0x120e4>
  414d24:	str	w25, [x23]
  414d28:	ldp	x20, x19, [sp, #80]
  414d2c:	ldp	x22, x21, [sp, #64]
  414d30:	ldp	x24, x23, [sp, #48]
  414d34:	ldr	x25, [sp, #32]
  414d38:	ldp	x29, x30, [sp, #16]
  414d3c:	add	sp, sp, #0x60
  414d40:	ret
  414d44:	sub	sp, sp, #0x120
  414d48:	stp	x29, x30, [sp, #192]
  414d4c:	add	x29, sp, #0xc0
  414d50:	ldr	x8, [x29, #96]
  414d54:	stp	x28, x27, [sp, #208]
  414d58:	stp	x26, x25, [sp, #224]
  414d5c:	stp	x24, x23, [sp, #240]
  414d60:	stp	x22, x21, [sp, #256]
  414d64:	stp	x20, x19, [sp, #272]
  414d68:	str	x7, [sp, #96]
  414d6c:	stur	x6, [x29, #-40]
  414d70:	mov	w20, w5
  414d74:	mov	w24, w4
  414d78:	mov	x22, x3
  414d7c:	mov	x19, x2
  414d80:	mov	x23, x1
  414d84:	stur	x8, [x29, #-88]
  414d88:	mov	x28, x0
  414d8c:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  414d90:	mov	w8, wzr
  414d94:	mov	w15, wzr
  414d98:	stp	wzr, w20, [sp, #84]
  414d9c:	ubfx	w21, w20, #1, #1
  414da0:	mov	w20, w24
  414da4:	add	x9, x19, #0x1
  414da8:	mov	w14, #0x1                   	// #1
  414dac:	str	x0, [sp, #32]
  414db0:	str	xzr, [sp, #72]
  414db4:	stur	xzr, [x29, #-64]
  414db8:	stur	xzr, [x29, #-32]
  414dbc:	stur	x9, [x29, #-80]
  414dc0:	cmp	w20, #0xa
  414dc4:	b.hi	415cf0 <wcrtomb@plt+0x13090>  // b.pmore
  414dc8:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414dcc:	mov	w9, w20
  414dd0:	add	x12, x12, #0x150
  414dd4:	adr	x10, 414df8 <wcrtomb@plt+0x12198>
  414dd8:	ldrb	w11, [x12, x9]
  414ddc:	add	x10, x10, x11, lsl #2
  414de0:	mov	x24, x23
  414de4:	mov	x27, xzr
  414de8:	mov	w17, wzr
  414dec:	mov	w16, #0x1                   	// #1
  414df0:	mov	x23, x22
  414df4:	br	x10
  414df8:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414dfc:	add	x25, x25, #0x2ac
  414e00:	mov	w2, #0x5                   	// #5
  414e04:	mov	x0, xzr
  414e08:	mov	x1, x25
  414e0c:	mov	w27, w15
  414e10:	mov	w26, w14
  414e14:	mov	w22, w20
  414e18:	bl	402b40 <dcgettext@plt>
  414e1c:	mov	x20, x0
  414e20:	cmp	x0, x25
  414e24:	b.ne	414ff4 <wcrtomb@plt+0x12394>  // b.any
  414e28:	bl	414a64 <wcrtomb@plt+0x11e04>
  414e2c:	ldrb	w8, [x0]
  414e30:	and	w8, w8, #0xffffffdf
  414e34:	cmp	w8, #0x47
  414e38:	b.eq	414f84 <wcrtomb@plt+0x12324>  // b.none
  414e3c:	cmp	w8, #0x55
  414e40:	mov	w9, w22
  414e44:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414e48:	ldrb	w8, [x0, #1]
  414e4c:	and	w8, w8, #0xffffffdf
  414e50:	cmp	w8, #0x54
  414e54:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414e58:	ldrb	w8, [x0, #2]
  414e5c:	and	w8, w8, #0xffffffdf
  414e60:	cmp	w8, #0x46
  414e64:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414e68:	ldrb	w8, [x0, #3]
  414e6c:	cmp	w8, #0x2d
  414e70:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414e74:	ldrb	w8, [x0, #4]
  414e78:	cmp	w8, #0x38
  414e7c:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414e80:	ldrb	w8, [x0, #5]
  414e84:	cbnz	w8, 414fdc <wcrtomb@plt+0x1237c>
  414e88:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  414e8c:	add	x20, x20, #0x2ae
  414e90:	b	414ff4 <wcrtomb@plt+0x12394>
  414e94:	mov	w8, #0x1                   	// #1
  414e98:	b	414f18 <wcrtomb@plt+0x122b8>
  414e9c:	tbnz	w21, #0, 414f18 <wcrtomb@plt+0x122b8>
  414ea0:	mov	w16, w8
  414ea4:	mov	w17, wzr
  414ea8:	cbz	x24, 414eb4 <wcrtomb@plt+0x12254>
  414eac:	mov	w8, #0x27                  	// #39
  414eb0:	strb	w8, [x28]
  414eb4:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  414eb8:	add	x8, x8, #0xd9e
  414ebc:	stur	x8, [x29, #-64]
  414ec0:	mov	w8, #0x1                   	// #1
  414ec4:	mov	w20, #0x2                   	// #2
  414ec8:	mov	w27, #0x1                   	// #1
  414ecc:	stur	x8, [x29, #-32]
  414ed0:	b	415184 <wcrtomb@plt+0x12524>
  414ed4:	tbz	w21, #0, 414f40 <wcrtomb@plt+0x122e0>
  414ed8:	mov	w8, #0x1                   	// #1
  414edc:	stur	x8, [x29, #-32]
  414ee0:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  414ee4:	add	x8, x8, #0xf3c
  414ee8:	mov	x27, xzr
  414eec:	mov	w20, #0x5                   	// #5
  414ef0:	stur	x8, [x29, #-64]
  414ef4:	mov	w16, #0x1                   	// #1
  414ef8:	mov	w17, #0x1                   	// #1
  414efc:	b	415184 <wcrtomb@plt+0x12524>
  414f00:	mov	w20, wzr
  414f04:	mov	x27, xzr
  414f08:	mov	w17, wzr
  414f0c:	mov	w16, w8
  414f10:	b	415184 <wcrtomb@plt+0x12524>
  414f14:	tbz	w21, #0, 414f74 <wcrtomb@plt+0x12314>
  414f18:	mov	w9, #0x1                   	// #1
  414f1c:	stur	x9, [x29, #-32]
  414f20:	adrp	x9, 428000 <_obstack_memory_used@@Base+0x10ae4>
  414f24:	add	x9, x9, #0xd9e
  414f28:	mov	x27, xzr
  414f2c:	mov	w20, #0x2                   	// #2
  414f30:	stur	x9, [x29, #-64]
  414f34:	mov	w16, w8
  414f38:	mov	w17, #0x1                   	// #1
  414f3c:	b	415184 <wcrtomb@plt+0x12524>
  414f40:	mov	w17, wzr
  414f44:	cbz	x24, 414f50 <wcrtomb@plt+0x122f0>
  414f48:	mov	w8, #0x22                  	// #34
  414f4c:	strb	w8, [x28]
  414f50:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  414f54:	add	x8, x8, #0xf3c
  414f58:	stur	x8, [x29, #-64]
  414f5c:	mov	w8, #0x1                   	// #1
  414f60:	mov	w27, #0x1                   	// #1
  414f64:	mov	w20, #0x5                   	// #5
  414f68:	stur	x8, [x29, #-32]
  414f6c:	mov	w16, #0x1                   	// #1
  414f70:	b	415184 <wcrtomb@plt+0x12524>
  414f74:	mov	w16, #0x1                   	// #1
  414f78:	mov	w17, wzr
  414f7c:	cbnz	x24, 414eac <wcrtomb@plt+0x1224c>
  414f80:	b	414eb4 <wcrtomb@plt+0x12254>
  414f84:	ldrb	w8, [x0, #1]
  414f88:	mov	w9, w22
  414f8c:	and	w8, w8, #0xffffffdf
  414f90:	cmp	w8, #0x42
  414f94:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414f98:	ldrb	w8, [x0, #2]
  414f9c:	cmp	w8, #0x31
  414fa0:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414fa4:	ldrb	w8, [x0, #3]
  414fa8:	cmp	w8, #0x38
  414fac:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414fb0:	ldrb	w8, [x0, #4]
  414fb4:	cmp	w8, #0x30
  414fb8:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414fbc:	ldrb	w8, [x0, #5]
  414fc0:	cmp	w8, #0x33
  414fc4:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414fc8:	ldrb	w8, [x0, #6]
  414fcc:	cmp	w8, #0x30
  414fd0:	b.ne	414fdc <wcrtomb@plt+0x1237c>  // b.any
  414fd4:	ldrb	w8, [x0, #7]
  414fd8:	cbz	w8, 415bbc <wcrtomb@plt+0x12f5c>
  414fdc:	cmp	w9, #0x9
  414fe0:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  414fe4:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  414fe8:	add	x8, x8, #0xd9e
  414fec:	add	x9, x9, #0xf3c
  414ff0:	csel	x20, x9, x8, eq  // eq = none
  414ff4:	adrp	x25, 428000 <_obstack_memory_used@@Base+0x10ae4>
  414ff8:	add	x25, x25, #0xd9e
  414ffc:	mov	w2, #0x5                   	// #5
  415000:	mov	x0, xzr
  415004:	mov	x1, x25
  415008:	bl	402b40 <dcgettext@plt>
  41500c:	cmp	x0, x25
  415010:	stur	x0, [x29, #-88]
  415014:	str	x20, [sp, #96]
  415018:	b.eq	415024 <wcrtomb@plt+0x123c4>  // b.none
  41501c:	mov	w20, w22
  415020:	b	415108 <wcrtomb@plt+0x124a8>
  415024:	bl	414a64 <wcrtomb@plt+0x11e04>
  415028:	ldrb	w8, [x0]
  41502c:	and	w8, w8, #0xffffffdf
  415030:	cmp	w8, #0x47
  415034:	b.eq	415094 <wcrtomb@plt+0x12434>  // b.none
  415038:	cmp	w8, #0x55
  41503c:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  415040:	ldrb	w8, [x0, #1]
  415044:	and	w8, w8, #0xffffffdf
  415048:	cmp	w8, #0x54
  41504c:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  415050:	ldrb	w8, [x0, #2]
  415054:	and	w8, w8, #0xffffffdf
  415058:	cmp	w8, #0x46
  41505c:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  415060:	ldrb	w8, [x0, #3]
  415064:	cmp	w8, #0x2d
  415068:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  41506c:	ldrb	w8, [x0, #4]
  415070:	cmp	w8, #0x38
  415074:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  415078:	ldrb	w8, [x0, #5]
  41507c:	cbnz	w8, 4150e8 <wcrtomb@plt+0x12488>
  415080:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  415084:	add	x8, x8, #0x2b2
  415088:	stur	x8, [x29, #-88]
  41508c:	mov	w20, w22
  415090:	b	415108 <wcrtomb@plt+0x124a8>
  415094:	ldrb	w8, [x0, #1]
  415098:	and	w8, w8, #0xffffffdf
  41509c:	cmp	w8, #0x42
  4150a0:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  4150a4:	ldrb	w8, [x0, #2]
  4150a8:	cmp	w8, #0x31
  4150ac:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  4150b0:	ldrb	w8, [x0, #3]
  4150b4:	cmp	w8, #0x38
  4150b8:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  4150bc:	ldrb	w8, [x0, #4]
  4150c0:	cmp	w8, #0x30
  4150c4:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  4150c8:	ldrb	w8, [x0, #5]
  4150cc:	cmp	w8, #0x33
  4150d0:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  4150d4:	ldrb	w8, [x0, #6]
  4150d8:	cmp	w8, #0x30
  4150dc:	b.ne	4150e8 <wcrtomb@plt+0x12488>  // b.any
  4150e0:	ldrb	w8, [x0, #7]
  4150e4:	cbz	w8, 415bc8 <wcrtomb@plt+0x12f68>
  4150e8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x10ae4>
  4150ec:	adrp	x9, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4150f0:	cmp	w22, #0x9
  4150f4:	add	x8, x8, #0xd9e
  4150f8:	add	x9, x9, #0xf3c
  4150fc:	mov	w20, w22
  415100:	csel	x8, x9, x8, eq  // eq = none
  415104:	stur	x8, [x29, #-88]
  415108:	mov	w14, w26
  41510c:	mov	w15, w27
  415110:	tbnz	w21, #0, 415154 <wcrtomb@plt+0x124f4>
  415114:	ldr	x8, [sp, #96]
  415118:	ldrb	w9, [x8]
  41511c:	cbz	w9, 415154 <wcrtomb@plt+0x124f4>
  415120:	mov	w26, w15
  415124:	mov	w22, w14
  415128:	mov	x10, xzr
  41512c:	add	x8, x8, #0x1
  415130:	b	415144 <wcrtomb@plt+0x124e4>
  415134:	ldrb	w9, [x8, x10]
  415138:	add	x27, x10, #0x1
  41513c:	mov	x10, x27
  415140:	cbz	w9, 415160 <wcrtomb@plt+0x12500>
  415144:	cmp	x10, x24
  415148:	b.cs	415134 <wcrtomb@plt+0x124d4>  // b.hs, b.nlast
  41514c:	strb	w9, [x28, x10]
  415150:	b	415134 <wcrtomb@plt+0x124d4>
  415154:	mov	w26, w15
  415158:	mov	w22, w14
  41515c:	mov	x27, xzr
  415160:	ldur	x25, [x29, #-88]
  415164:	mov	x0, x25
  415168:	bl	4025c0 <strlen@plt>
  41516c:	stur	x0, [x29, #-32]
  415170:	mov	w16, #0x1                   	// #1
  415174:	stur	x25, [x29, #-64]
  415178:	mov	w17, w21
  41517c:	mov	w14, w22
  415180:	mov	w15, w26
  415184:	ldp	x8, x9, [x29, #-40]
  415188:	eor	w18, w17, #0x1
  41518c:	stur	w18, [x29, #-68]
  415190:	mov	x22, xzr
  415194:	cmp	x8, #0x0
  415198:	cset	w8, eq  // eq = none
  41519c:	cmp	x9, #0x0
  4151a0:	cset	w9, ne  // ne = any
  4151a4:	cmp	w20, #0x2
  4151a8:	cset	w10, ne  // ne = any
  4151ac:	and	w13, w10, w16
  4151b0:	and	w12, w9, w17
  4151b4:	orr	w10, w10, w18
  4151b8:	and	w18, w9, w13
  4151bc:	orr	w9, w13, w17
  4151c0:	eor	w9, w9, #0x1
  4151c4:	cset	w11, eq  // eq = none
  4151c8:	orr	w8, w8, w9
  4151cc:	and	w12, w16, w12
  4151d0:	str	w10, [sp, #92]
  4151d4:	and	w10, w11, w17
  4151d8:	stur	w8, [x29, #-24]
  4151dc:	eor	w8, w16, #0x1
  4151e0:	stp	w10, w12, [sp, #60]
  4151e4:	stur	w16, [x29, #-72]
  4151e8:	str	w8, [sp, #68]
  4151ec:	stp	w17, w20, [x29, #-48]
  4151f0:	stur	w18, [x29, #-52]
  4151f4:	cmn	x23, #0x1
  4151f8:	b.eq	415208 <wcrtomb@plt+0x125a8>  // b.none
  4151fc:	cmp	x22, x23
  415200:	b.ne	415210 <wcrtomb@plt+0x125b0>  // b.any
  415204:	b	415b4c <wcrtomb@plt+0x12eec>
  415208:	ldrb	w8, [x19, x22]
  41520c:	cbz	w8, 415b54 <wcrtomb@plt+0x12ef4>
  415210:	cbz	w18, 415258 <wcrtomb@plt+0x125f8>
  415214:	ldur	x8, [x29, #-32]
  415218:	cmp	x8, #0x2
  41521c:	add	x20, x22, x8
  415220:	b.cc	41524c <wcrtomb@plt+0x125ec>  // b.lo, b.ul, b.last
  415224:	cmn	x23, #0x1
  415228:	b.ne	41524c <wcrtomb@plt+0x125ec>  // b.any
  41522c:	mov	x0, x19
  415230:	mov	w21, w14
  415234:	mov	w25, w15
  415238:	bl	4025c0 <strlen@plt>
  41523c:	ldp	w18, w17, [x29, #-52]
  415240:	mov	x23, x0
  415244:	mov	w15, w25
  415248:	mov	w14, w21
  41524c:	cmp	x20, x23
  415250:	b.ls	41526c <wcrtomb@plt+0x1260c>  // b.plast
  415254:	ldur	w20, [x29, #-44]
  415258:	mov	w25, wzr
  41525c:	ldrb	w21, [x19, x22]
  415260:	cmp	w21, #0x7e
  415264:	b.ls	4152b8 <wcrtomb@plt+0x12658>  // b.plast
  415268:	b	415508 <wcrtomb@plt+0x128a8>
  41526c:	ldur	x1, [x29, #-64]
  415270:	ldur	x2, [x29, #-32]
  415274:	add	x0, x19, x22
  415278:	mov	w26, w15
  41527c:	mov	w21, w14
  415280:	bl	402850 <bcmp@plt>
  415284:	ldur	w9, [x29, #-68]
  415288:	ldur	w20, [x29, #-44]
  41528c:	cmp	w0, #0x0
  415290:	cset	w8, ne  // ne = any
  415294:	orr	w8, w8, w9
  415298:	cset	w25, eq  // eq = none
  41529c:	tbz	w8, #0, 415c14 <wcrtomb@plt+0x12fb4>
  4152a0:	ldp	w18, w17, [x29, #-52]
  4152a4:	mov	w14, w21
  4152a8:	mov	w15, w26
  4152ac:	ldrb	w21, [x19, x22]
  4152b0:	cmp	w21, #0x7e
  4152b4:	b.hi	415508 <wcrtomb@plt+0x128a8>  // b.pmore
  4152b8:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4152bc:	add	x13, x13, #0x15b
  4152c0:	adr	x12, 4152e4 <wcrtomb@plt+0x12684>
  4152c4:	ldrb	w9, [x13, x21]
  4152c8:	add	x12, x12, x9, lsl #2
  4152cc:	mov	w10, wzr
  4152d0:	mov	w8, wzr
  4152d4:	mov	w26, #0x1                   	// #1
  4152d8:	mov	w11, #0x6e                  	// #110
  4152dc:	mov	w9, #0x61                  	// #97
  4152e0:	br	x12
  4152e4:	ldur	w9, [x29, #-24]
  4152e8:	tbnz	w9, #0, 415308 <wcrtomb@plt+0x126a8>
  4152ec:	ldur	x10, [x29, #-40]
  4152f0:	lsr	w9, w21, #5
  4152f4:	ldr	w9, [x10, w9, uxtw #2]
  4152f8:	lsr	w9, w9, w21
  4152fc:	tbz	w9, #0, 415308 <wcrtomb@plt+0x126a8>
  415300:	mov	w9, w21
  415304:	b	415310 <wcrtomb@plt+0x126b0>
  415308:	mov	w9, w21
  41530c:	cbz	w25, 415548 <wcrtomb@plt+0x128e8>
  415310:	tbnz	w17, #0, 415bd4 <wcrtomb@plt+0x12f74>
  415314:	cmp	w20, #0x2
  415318:	cset	w8, ne  // ne = any
  41531c:	orr	w8, w8, w15
  415320:	tbnz	w8, #0, 41535c <wcrtomb@plt+0x126fc>
  415324:	cmp	x27, x24
  415328:	b.cs	415394 <wcrtomb@plt+0x12734>  // b.hs, b.nlast
  41532c:	mov	w8, #0x27                  	// #39
  415330:	strb	w8, [x28, x27]
  415334:	add	x8, x27, #0x1
  415338:	cmp	x8, x24
  41533c:	b.cc	4153a0 <wcrtomb@plt+0x12740>  // b.lo, b.ul, b.last
  415340:	add	x8, x27, #0x2
  415344:	cmp	x8, x24
  415348:	b.cs	415354 <wcrtomb@plt+0x126f4>  // b.hs, b.nlast
  41534c:	mov	w10, #0x27                  	// #39
  415350:	strb	w10, [x28, x8]
  415354:	add	x27, x27, #0x3
  415358:	mov	w15, #0x1                   	// #1
  41535c:	cmp	x27, x24
  415360:	b.cs	41536c <wcrtomb@plt+0x1270c>  // b.hs, b.nlast
  415364:	mov	w8, #0x5c                  	// #92
  415368:	strb	w8, [x28, x27]
  41536c:	add	x27, x27, #0x1
  415370:	cmp	x27, x24
  415374:	b.cs	41537c <wcrtomb@plt+0x1271c>  // b.hs, b.nlast
  415378:	strb	w9, [x28, x27]
  41537c:	add	x27, x27, #0x1
  415380:	and	w14, w14, w26
  415384:	add	x22, x22, #0x1
  415388:	cmn	x23, #0x1
  41538c:	b.ne	4151fc <wcrtomb@plt+0x1259c>  // b.any
  415390:	b	415208 <wcrtomb@plt+0x125a8>
  415394:	add	x8, x27, #0x1
  415398:	cmp	x8, x24
  41539c:	b.cs	415340 <wcrtomb@plt+0x126e0>  // b.hs, b.nlast
  4153a0:	mov	w10, #0x24                  	// #36
  4153a4:	strb	w10, [x28, x8]
  4153a8:	add	x8, x27, #0x2
  4153ac:	cmp	x8, x24
  4153b0:	b.cc	41534c <wcrtomb@plt+0x126ec>  // b.lo, b.ul, b.last
  4153b4:	b	415354 <wcrtomb@plt+0x126f4>
  4153b8:	cmp	x23, #0x1
  4153bc:	b.eq	4153e0 <wcrtomb@plt+0x12780>  // b.none
  4153c0:	cmn	x23, #0x1
  4153c4:	b.ne	4153e4 <wcrtomb@plt+0x12784>  // b.any
  4153c8:	ldrb	w8, [x19, #1]
  4153cc:	cbz	w8, 4153e0 <wcrtomb@plt+0x12780>
  4153d0:	mov	w8, wzr
  4153d4:	mov	w26, wzr
  4153d8:	mov	x23, #0xffffffffffffffff    	// #-1
  4153dc:	b	4152e4 <wcrtomb@plt+0x12684>
  4153e0:	cbz	x22, 4153f0 <wcrtomb@plt+0x12790>
  4153e4:	mov	w8, wzr
  4153e8:	mov	w26, wzr
  4153ec:	b	4152e4 <wcrtomb@plt+0x12684>
  4153f0:	mov	w10, #0x1                   	// #1
  4153f4:	cmp	w20, #0x2
  4153f8:	b.ne	415400 <wcrtomb@plt+0x127a0>  // b.any
  4153fc:	tbnz	w17, #0, 415bd4 <wcrtomb@plt+0x12f74>
  415400:	mov	w8, wzr
  415404:	mov	w26, w10
  415408:	b	4152e4 <wcrtomb@plt+0x12684>
  41540c:	cmp	w20, #0x2
  415410:	b.ne	415530 <wcrtomb@plt+0x128d0>  // b.any
  415414:	tbz	w17, #0, 41553c <wcrtomb@plt+0x128dc>
  415418:	b	415bd4 <wcrtomb@plt+0x12f74>
  41541c:	mov	w9, #0x66                  	// #102
  415420:	b	41558c <wcrtomb@plt+0x1292c>
  415424:	mov	w11, #0x74                  	// #116
  415428:	b	415438 <wcrtomb@plt+0x127d8>
  41542c:	mov	w9, #0x62                  	// #98
  415430:	b	41558c <wcrtomb@plt+0x1292c>
  415434:	mov	w11, #0x72                  	// #114
  415438:	ldr	w8, [sp, #92]
  41543c:	mov	w9, w11
  415440:	tbnz	w8, #0, 41558c <wcrtomb@plt+0x1292c>
  415444:	b	415bd4 <wcrtomb@plt+0x12f74>
  415448:	ldur	w8, [x29, #-72]
  41544c:	tbz	w8, #0, 4155a0 <wcrtomb@plt+0x12940>
  415450:	cmp	w20, #0x2
  415454:	tbnz	w17, #0, 415ce4 <wcrtomb@plt+0x13084>
  415458:	cset	w8, ne  // ne = any
  41545c:	orr	w8, w8, w15
  415460:	tbz	w8, #0, 415774 <wcrtomb@plt+0x12b14>
  415464:	mov	x8, x27
  415468:	cmp	x8, x24
  41546c:	b.cc	4157b4 <wcrtomb@plt+0x12b54>  // b.lo, b.ul, b.last
  415470:	b	4157bc <wcrtomb@plt+0x12b5c>
  415474:	cmp	w20, #0x5
  415478:	b.eq	4156d4 <wcrtomb@plt+0x12a74>  // b.none
  41547c:	cmp	w20, #0x2
  415480:	b.ne	415764 <wcrtomb@plt+0x12b04>  // b.any
  415484:	tbz	w17, #0, 415764 <wcrtomb@plt+0x12b04>
  415488:	b	415bd4 <wcrtomb@plt+0x12f74>
  41548c:	mov	w9, #0x76                  	// #118
  415490:	b	41558c <wcrtomb@plt+0x1292c>
  415494:	cmp	w20, #0x2
  415498:	b.ne	4155b0 <wcrtomb@plt+0x12950>  // b.any
  41549c:	tbnz	w17, #0, 415bd4 <wcrtomb@plt+0x12f74>
  4154a0:	ldr	x10, [sp, #72]
  4154a4:	cmp	x24, #0x0
  4154a8:	cset	w8, eq  // eq = none
  4154ac:	cmp	x10, #0x0
  4154b0:	cset	w9, ne  // ne = any
  4154b4:	orr	w8, w9, w8
  4154b8:	cmp	w8, #0x0
  4154bc:	csel	x10, x10, x24, ne  // ne = any
  4154c0:	csel	x24, x24, xzr, ne  // ne = any
  4154c4:	cmp	x27, x24
  4154c8:	str	x10, [sp, #72]
  4154cc:	b.cs	4156b0 <wcrtomb@plt+0x12a50>  // b.hs, b.nlast
  4154d0:	mov	w8, #0x27                  	// #39
  4154d4:	strb	w8, [x28, x27]
  4154d8:	add	x8, x27, #0x1
  4154dc:	cmp	x8, x24
  4154e0:	b.cc	4156bc <wcrtomb@plt+0x12a5c>  // b.lo, b.ul, b.last
  4154e4:	add	x8, x27, #0x2
  4154e8:	cmp	x8, x24
  4154ec:	b.cs	4154f8 <wcrtomb@plt+0x12898>  // b.hs, b.nlast
  4154f0:	mov	w9, #0x27                  	// #39
  4154f4:	strb	w9, [x28, x8]
  4154f8:	mov	w15, wzr
  4154fc:	mov	w8, wzr
  415500:	add	x27, x27, #0x3
  415504:	b	4155b4 <wcrtomb@plt+0x12954>
  415508:	ldr	x8, [sp, #32]
  41550c:	stp	w15, w14, [sp, #24]
  415510:	cmp	x8, #0x1
  415514:	b.ne	4155c8 <wcrtomb@plt+0x12968>  // b.any
  415518:	bl	4029e0 <__ctype_b_loc@plt>
  41551c:	ldr	x8, [x0]
  415520:	mov	w20, #0x1                   	// #1
  415524:	ldrh	w8, [x8, x21, lsl #1]
  415528:	ubfx	w26, w8, #14, #1
  41552c:	b	415924 <wcrtomb@plt+0x12cc4>
  415530:	ldr	w8, [sp, #64]
  415534:	mov	w9, #0x5c                  	// #92
  415538:	tbz	w8, #0, 41558c <wcrtomb@plt+0x1292c>
  41553c:	mov	w8, wzr
  415540:	mov	w26, wzr
  415544:	mov	w21, #0x5c                  	// #92
  415548:	tbnz	w8, #0, 41557c <wcrtomb@plt+0x1291c>
  41554c:	tbz	w15, #0, 41557c <wcrtomb@plt+0x1291c>
  415550:	cmp	x27, x24
  415554:	b.cs	415560 <wcrtomb@plt+0x12900>  // b.hs, b.nlast
  415558:	mov	w8, #0x27                  	// #39
  41555c:	strb	w8, [x28, x27]
  415560:	add	x8, x27, #0x1
  415564:	cmp	x8, x24
  415568:	b.cs	415574 <wcrtomb@plt+0x12914>  // b.hs, b.nlast
  41556c:	mov	w9, #0x27                  	// #39
  415570:	strb	w9, [x28, x8]
  415574:	mov	w15, wzr
  415578:	add	x27, x27, #0x2
  41557c:	mov	w9, w21
  415580:	cmp	x27, x24
  415584:	b.cc	415378 <wcrtomb@plt+0x12718>  // b.lo, b.ul, b.last
  415588:	b	41537c <wcrtomb@plt+0x1271c>
  41558c:	ldur	w10, [x29, #-72]
  415590:	mov	w8, wzr
  415594:	mov	w26, wzr
  415598:	tbz	w10, #0, 4152e4 <wcrtomb@plt+0x12684>
  41559c:	b	415310 <wcrtomb@plt+0x126b0>
  4155a0:	ldr	w8, [sp, #88]
  4155a4:	tbnz	w8, #0, 415384 <wcrtomb@plt+0x12724>
  4155a8:	mov	w21, wzr
  4155ac:	b	4153e4 <wcrtomb@plt+0x12784>
  4155b0:	mov	w8, wzr
  4155b4:	mov	w9, #0x1                   	// #1
  4155b8:	mov	w21, #0x27                  	// #39
  4155bc:	str	w9, [sp, #84]
  4155c0:	mov	w26, #0x1                   	// #1
  4155c4:	b	4152e4 <wcrtomb@plt+0x12684>
  4155c8:	cmn	x23, #0x1
  4155cc:	stur	xzr, [x29, #-16]
  4155d0:	b.eq	415848 <wcrtomb@plt+0x12be8>  // b.none
  4155d4:	ldr	w8, [sp, #60]
  4155d8:	stp	x23, x19, [sp, #40]
  4155dc:	tbz	w8, #0, 415860 <wcrtomb@plt+0x12c00>
  4155e0:	ldur	x8, [x29, #-80]
  4155e4:	mov	x20, xzr
  4155e8:	mov	w26, #0x1                   	// #1
  4155ec:	add	x8, x8, x22
  4155f0:	str	x8, [sp, #16]
  4155f4:	b	415620 <wcrtomb@plt+0x129c0>
  4155f8:	ldur	w0, [x29, #-20]
  4155fc:	bl	402ba0 <iswprint@plt>
  415600:	cmp	w0, #0x0
  415604:	cset	w8, ne  // ne = any
  415608:	sub	x0, x29, #0x10
  41560c:	and	w26, w26, w8
  415610:	add	x20, x23, x20
  415614:	bl	402950 <mbsinit@plt>
  415618:	ldr	x23, [sp, #40]
  41561c:	cbnz	w0, 415920 <wcrtomb@plt+0x12cc0>
  415620:	ldr	x8, [sp, #48]
  415624:	mov	x19, x28
  415628:	add	x28, x20, x22
  41562c:	sub	x2, x23, x28
  415630:	add	x1, x8, x28
  415634:	sub	x0, x29, #0x14
  415638:	sub	x3, x29, #0x10
  41563c:	bl	417134 <wcrtomb@plt+0x144d4>
  415640:	cmn	x0, #0x2
  415644:	b.eq	4158e0 <wcrtomb@plt+0x12c80>  // b.none
  415648:	mov	x23, x0
  41564c:	cmn	x0, #0x1
  415650:	b.eq	4158d0 <wcrtomb@plt+0x12c70>  // b.none
  415654:	mov	x28, x19
  415658:	cbz	x23, 4158d8 <wcrtomb@plt+0x12c78>
  41565c:	ldr	x19, [sp, #48]
  415660:	cmp	x23, #0x2
  415664:	b.cc	4155f8 <wcrtomb@plt+0x12998>  // b.lo, b.ul, b.last
  415668:	ldr	x9, [sp, #16]
  41566c:	sub	x8, x23, #0x1
  415670:	add	x9, x9, x20
  415674:	b	415684 <wcrtomb@plt+0x12a24>
  415678:	subs	x8, x8, #0x1
  41567c:	add	x9, x9, #0x1
  415680:	b.eq	4155f8 <wcrtomb@plt+0x12998>  // b.none
  415684:	ldrb	w10, [x9]
  415688:	sub	w10, w10, #0x5b
  41568c:	cmp	w10, #0x21
  415690:	b.hi	415678 <wcrtomb@plt+0x12a18>  // b.pmore
  415694:	mov	w11, #0x1                   	// #1
  415698:	lsl	x10, x11, x10
  41569c:	mov	x11, #0x2b                  	// #43
  4156a0:	movk	x11, #0x2, lsl #32
  4156a4:	tst	x10, x11
  4156a8:	b.eq	415678 <wcrtomb@plt+0x12a18>  // b.none
  4156ac:	b	415bfc <wcrtomb@plt+0x12f9c>
  4156b0:	add	x8, x27, #0x1
  4156b4:	cmp	x8, x24
  4156b8:	b.cs	4154e4 <wcrtomb@plt+0x12884>  // b.hs, b.nlast
  4156bc:	mov	w9, #0x5c                  	// #92
  4156c0:	strb	w9, [x28, x8]
  4156c4:	add	x8, x27, #0x2
  4156c8:	cmp	x8, x24
  4156cc:	b.cc	4154f0 <wcrtomb@plt+0x12890>  // b.lo, b.ul, b.last
  4156d0:	b	4154f8 <wcrtomb@plt+0x12898>
  4156d4:	ldr	w8, [sp, #88]
  4156d8:	tbz	w8, #2, 415764 <wcrtomb@plt+0x12b04>
  4156dc:	add	x9, x22, #0x2
  4156e0:	cmp	x9, x23
  4156e4:	b.cs	415764 <wcrtomb@plt+0x12b04>  // b.hs, b.nlast
  4156e8:	add	x8, x22, x19
  4156ec:	ldrb	w8, [x8, #1]
  4156f0:	cmp	w8, #0x3f
  4156f4:	b.ne	415764 <wcrtomb@plt+0x12b04>  // b.any
  4156f8:	ldrb	w21, [x19, x9]
  4156fc:	mov	w8, wzr
  415700:	cmp	w21, #0x3e
  415704:	b.hi	415b40 <wcrtomb@plt+0x12ee0>  // b.pmore
  415708:	mov	w10, #0x1                   	// #1
  41570c:	mov	x11, #0xa38200000000        	// #179778741075968
  415710:	lsl	x10, x10, x21
  415714:	movk	x11, #0x7000, lsl #48
  415718:	tst	x10, x11
  41571c:	b.eq	415b40 <wcrtomb@plt+0x12ee0>  // b.none
  415720:	tbnz	w17, #0, 415bd4 <wcrtomb@plt+0x12f74>
  415724:	cmp	x27, x24
  415728:	b.cs	415af8 <wcrtomb@plt+0x12e98>  // b.hs, b.nlast
  41572c:	mov	w8, #0x3f                  	// #63
  415730:	strb	w8, [x28, x27]
  415734:	add	x8, x27, #0x1
  415738:	cmp	x8, x24
  41573c:	b.cc	415b04 <wcrtomb@plt+0x12ea4>  // b.lo, b.ul, b.last
  415740:	add	x8, x27, #0x2
  415744:	cmp	x8, x24
  415748:	b.cs	415b18 <wcrtomb@plt+0x12eb8>  // b.hs, b.nlast
  41574c:	mov	w10, #0x22                  	// #34
  415750:	strb	w10, [x28, x8]
  415754:	add	x8, x27, #0x3
  415758:	cmp	x8, x24
  41575c:	b.cc	415b24 <wcrtomb@plt+0x12ec4>  // b.lo, b.ul, b.last
  415760:	b	415b2c <wcrtomb@plt+0x12ecc>
  415764:	mov	w8, wzr
  415768:	mov	w26, wzr
  41576c:	mov	w21, #0x3f                  	// #63
  415770:	b	4152e4 <wcrtomb@plt+0x12684>
  415774:	cmp	x27, x24
  415778:	b.cs	415824 <wcrtomb@plt+0x12bc4>  // b.hs, b.nlast
  41577c:	mov	w8, #0x27                  	// #39
  415780:	strb	w8, [x28, x27]
  415784:	add	x8, x27, #0x1
  415788:	cmp	x8, x24
  41578c:	b.cc	415830 <wcrtomb@plt+0x12bd0>  // b.lo, b.ul, b.last
  415790:	add	x8, x27, #0x2
  415794:	cmp	x8, x24
  415798:	b.cs	4157a4 <wcrtomb@plt+0x12b44>  // b.hs, b.nlast
  41579c:	mov	w9, #0x27                  	// #39
  4157a0:	strb	w9, [x28, x8]
  4157a4:	add	x8, x27, #0x3
  4157a8:	mov	w15, #0x1                   	// #1
  4157ac:	cmp	x8, x24
  4157b0:	b.cs	4157bc <wcrtomb@plt+0x12b5c>  // b.hs, b.nlast
  4157b4:	mov	w9, #0x5c                  	// #92
  4157b8:	strb	w9, [x28, x8]
  4157bc:	cmp	w20, #0x2
  4157c0:	add	x27, x8, #0x1
  4157c4:	b.eq	415814 <wcrtomb@plt+0x12bb4>  // b.none
  4157c8:	add	x9, x22, #0x1
  4157cc:	cmp	x9, x23
  4157d0:	b.cs	415814 <wcrtomb@plt+0x12bb4>  // b.hs, b.nlast
  4157d4:	ldrb	w9, [x19, x9]
  4157d8:	sub	w9, w9, #0x30
  4157dc:	cmp	w9, #0x9
  4157e0:	b.hi	415814 <wcrtomb@plt+0x12bb4>  // b.pmore
  4157e4:	cmp	x27, x24
  4157e8:	b.cs	4157f4 <wcrtomb@plt+0x12b94>  // b.hs, b.nlast
  4157ec:	mov	w9, #0x30                  	// #48
  4157f0:	strb	w9, [x28, x27]
  4157f4:	add	x9, x8, #0x2
  4157f8:	cmp	x9, x24
  4157fc:	b.cs	415808 <wcrtomb@plt+0x12ba8>  // b.hs, b.nlast
  415800:	mov	w10, #0x30                  	// #48
  415804:	strb	w10, [x28, x9]
  415808:	mov	w26, wzr
  41580c:	add	x27, x8, #0x3
  415810:	b	415818 <wcrtomb@plt+0x12bb8>
  415814:	mov	w26, wzr
  415818:	mov	w8, #0x1                   	// #1
  41581c:	mov	w21, #0x30                  	// #48
  415820:	b	4152e4 <wcrtomb@plt+0x12684>
  415824:	add	x8, x27, #0x1
  415828:	cmp	x8, x24
  41582c:	b.cs	415790 <wcrtomb@plt+0x12b30>  // b.hs, b.nlast
  415830:	mov	w9, #0x24                  	// #36
  415834:	strb	w9, [x28, x8]
  415838:	add	x8, x27, #0x2
  41583c:	cmp	x8, x24
  415840:	b.cc	41579c <wcrtomb@plt+0x12b3c>  // b.lo, b.ul, b.last
  415844:	b	4157a4 <wcrtomb@plt+0x12b44>
  415848:	mov	x0, x19
  41584c:	bl	4025c0 <strlen@plt>
  415850:	mov	x23, x0
  415854:	ldr	w8, [sp, #60]
  415858:	stp	x23, x19, [sp, #40]
  41585c:	tbnz	w8, #0, 4155e0 <wcrtomb@plt+0x12980>
  415860:	mov	x20, xzr
  415864:	mov	w26, #0x1                   	// #1
  415868:	ldr	x8, [sp, #48]
  41586c:	mov	x19, x28
  415870:	add	x28, x20, x22
  415874:	sub	x2, x23, x28
  415878:	add	x1, x8, x28
  41587c:	sub	x0, x29, #0x14
  415880:	sub	x3, x29, #0x10
  415884:	bl	417134 <wcrtomb@plt+0x144d4>
  415888:	cmn	x0, #0x2
  41588c:	b.eq	4158e0 <wcrtomb@plt+0x12c80>  // b.none
  415890:	mov	x23, x0
  415894:	cmn	x0, #0x1
  415898:	b.eq	4158d0 <wcrtomb@plt+0x12c70>  // b.none
  41589c:	mov	x28, x19
  4158a0:	cbz	x23, 4158d8 <wcrtomb@plt+0x12c78>
  4158a4:	ldur	w0, [x29, #-20]
  4158a8:	bl	402ba0 <iswprint@plt>
  4158ac:	cmp	w0, #0x0
  4158b0:	cset	w8, ne  // ne = any
  4158b4:	sub	x0, x29, #0x10
  4158b8:	and	w26, w26, w8
  4158bc:	add	x20, x23, x20
  4158c0:	bl	402950 <mbsinit@plt>
  4158c4:	ldr	x23, [sp, #40]
  4158c8:	cbz	w0, 415868 <wcrtomb@plt+0x12c08>
  4158cc:	b	415920 <wcrtomb@plt+0x12cc0>
  4158d0:	mov	w26, wzr
  4158d4:	mov	x28, x19
  4158d8:	ldr	x23, [sp, #40]
  4158dc:	b	415920 <wcrtomb@plt+0x12cc0>
  4158e0:	ldr	x23, [sp, #40]
  4158e4:	cmp	x28, x23
  4158e8:	b.cs	415918 <wcrtomb@plt+0x12cb8>  // b.hs, b.nlast
  4158ec:	sub	x8, x23, x22
  4158f0:	ldr	x9, [sp, #48]
  4158f4:	ldrb	w9, [x9, x28]
  4158f8:	cbz	w9, 415918 <wcrtomb@plt+0x12cb8>
  4158fc:	add	x20, x20, #0x1
  415900:	add	x28, x20, x22
  415904:	cmp	x28, x23
  415908:	b.cc	4158f0 <wcrtomb@plt+0x12c90>  // b.lo, b.ul, b.last
  41590c:	mov	w26, wzr
  415910:	mov	x20, x8
  415914:	b	41591c <wcrtomb@plt+0x12cbc>
  415918:	mov	w26, wzr
  41591c:	mov	x28, x19
  415920:	ldr	x19, [sp, #48]
  415924:	ldr	w8, [sp, #68]
  415928:	ldp	w15, w14, [sp, #24]
  41592c:	ldp	w18, w17, [x29, #-52]
  415930:	cmp	x20, #0x1
  415934:	orr	w8, w26, w8
  415938:	b.hi	41594c <wcrtomb@plt+0x12cec>  // b.pmore
  41593c:	tbz	w8, #0, 41594c <wcrtomb@plt+0x12cec>
  415940:	ldur	w20, [x29, #-44]
  415944:	mov	w8, wzr
  415948:	b	4152e4 <wcrtomb@plt+0x12684>
  41594c:	add	x9, x20, x22
  415950:	ldur	w20, [x29, #-44]
  415954:	mov	w10, wzr
  415958:	b	41596c <wcrtomb@plt+0x12d0c>
  41595c:	ldur	x12, [x29, #-80]
  415960:	add	x27, x27, #0x1
  415964:	ldrb	w21, [x12, x22]
  415968:	mov	x22, x11
  41596c:	tbz	w8, #0, 41599c <wcrtomb@plt+0x12d3c>
  415970:	tbz	w25, #0, 415a08 <wcrtomb@plt+0x12da8>
  415974:	cmp	x27, x24
  415978:	b.cs	415984 <wcrtomb@plt+0x12d24>  // b.hs, b.nlast
  41597c:	mov	w11, #0x5c                  	// #92
  415980:	strb	w11, [x28, x27]
  415984:	mov	w25, wzr
  415988:	add	x27, x27, #0x1
  41598c:	add	x11, x22, #0x1
  415990:	cmp	x9, x11
  415994:	b.hi	415a18 <wcrtomb@plt+0x12db8>  // b.pmore
  415998:	b	415aec <wcrtomb@plt+0x12e8c>
  41599c:	tbnz	w17, #0, 415bd4 <wcrtomb@plt+0x12f74>
  4159a0:	cmp	w20, #0x2
  4159a4:	cset	w10, ne  // ne = any
  4159a8:	orr	w10, w10, w15
  4159ac:	tbz	w10, #0, 415a60 <wcrtomb@plt+0x12e00>
  4159b0:	cmp	x27, x24
  4159b4:	b.cs	415aa0 <wcrtomb@plt+0x12e40>  // b.hs, b.nlast
  4159b8:	mov	w10, #0x5c                  	// #92
  4159bc:	strb	w10, [x28, x27]
  4159c0:	add	x10, x27, #0x1
  4159c4:	cmp	x10, x24
  4159c8:	b.cc	415aac <wcrtomb@plt+0x12e4c>  // b.lo, b.ul, b.last
  4159cc:	add	x10, x27, #0x2
  4159d0:	cmp	x10, x24
  4159d4:	b.cs	4159e4 <wcrtomb@plt+0x12d84>  // b.hs, b.nlast
  4159d8:	mov	w11, #0x30                  	// #48
  4159dc:	bfxil	w11, w21, #3, #3
  4159e0:	strb	w11, [x28, x10]
  4159e4:	mov	w11, #0x30                  	// #48
  4159e8:	bfxil	w11, w21, #0, #3
  4159ec:	add	x27, x27, #0x3
  4159f0:	mov	w10, #0x1                   	// #1
  4159f4:	mov	w21, w11
  4159f8:	add	x11, x22, #0x1
  4159fc:	cmp	x9, x11
  415a00:	b.hi	415a18 <wcrtomb@plt+0x12db8>  // b.pmore
  415a04:	b	415aec <wcrtomb@plt+0x12e8c>
  415a08:	mov	w25, wzr
  415a0c:	add	x11, x22, #0x1
  415a10:	cmp	x9, x11
  415a14:	b.ls	415aec <wcrtomb@plt+0x12e8c>  // b.plast
  415a18:	and	w12, w10, #0x1
  415a1c:	orn	w12, w12, w15
  415a20:	tbnz	w12, #0, 415a50 <wcrtomb@plt+0x12df0>
  415a24:	cmp	x27, x24
  415a28:	b.cs	415a34 <wcrtomb@plt+0x12dd4>  // b.hs, b.nlast
  415a2c:	mov	w12, #0x27                  	// #39
  415a30:	strb	w12, [x28, x27]
  415a34:	add	x12, x27, #0x1
  415a38:	cmp	x12, x24
  415a3c:	b.cs	415a48 <wcrtomb@plt+0x12de8>  // b.hs, b.nlast
  415a40:	mov	w13, #0x27                  	// #39
  415a44:	strb	w13, [x28, x12]
  415a48:	mov	w15, wzr
  415a4c:	add	x27, x27, #0x2
  415a50:	cmp	x27, x24
  415a54:	b.cs	41595c <wcrtomb@plt+0x12cfc>  // b.hs, b.nlast
  415a58:	strb	w21, [x28, x27]
  415a5c:	b	41595c <wcrtomb@plt+0x12cfc>
  415a60:	cmp	x27, x24
  415a64:	b.cs	415ac8 <wcrtomb@plt+0x12e68>  // b.hs, b.nlast
  415a68:	mov	w10, #0x27                  	// #39
  415a6c:	strb	w10, [x28, x27]
  415a70:	add	x10, x27, #0x1
  415a74:	cmp	x10, x24
  415a78:	b.cc	415ad4 <wcrtomb@plt+0x12e74>  // b.lo, b.ul, b.last
  415a7c:	add	x10, x27, #0x2
  415a80:	cmp	x10, x24
  415a84:	b.cs	415a90 <wcrtomb@plt+0x12e30>  // b.hs, b.nlast
  415a88:	mov	w11, #0x27                  	// #39
  415a8c:	strb	w11, [x28, x10]
  415a90:	add	x27, x27, #0x3
  415a94:	mov	w15, #0x1                   	// #1
  415a98:	cmp	x27, x24
  415a9c:	b.cc	4159b8 <wcrtomb@plt+0x12d58>  // b.lo, b.ul, b.last
  415aa0:	add	x10, x27, #0x1
  415aa4:	cmp	x10, x24
  415aa8:	b.cs	4159cc <wcrtomb@plt+0x12d6c>  // b.hs, b.nlast
  415aac:	mov	w11, #0x30                  	// #48
  415ab0:	bfxil	w11, w21, #6, #2
  415ab4:	strb	w11, [x28, x10]
  415ab8:	add	x10, x27, #0x2
  415abc:	cmp	x10, x24
  415ac0:	b.cc	4159d8 <wcrtomb@plt+0x12d78>  // b.lo, b.ul, b.last
  415ac4:	b	4159e4 <wcrtomb@plt+0x12d84>
  415ac8:	add	x10, x27, #0x1
  415acc:	cmp	x10, x24
  415ad0:	b.cs	415a7c <wcrtomb@plt+0x12e1c>  // b.hs, b.nlast
  415ad4:	mov	w11, #0x24                  	// #36
  415ad8:	strb	w11, [x28, x10]
  415adc:	add	x10, x27, #0x2
  415ae0:	cmp	x10, x24
  415ae4:	b.cc	415a88 <wcrtomb@plt+0x12e28>  // b.lo, b.ul, b.last
  415ae8:	b	415a90 <wcrtomb@plt+0x12e30>
  415aec:	and	w8, w10, #0x1
  415af0:	tbz	w8, #0, 41554c <wcrtomb@plt+0x128ec>
  415af4:	b	41557c <wcrtomb@plt+0x1291c>
  415af8:	add	x8, x27, #0x1
  415afc:	cmp	x8, x24
  415b00:	b.cs	415740 <wcrtomb@plt+0x12ae0>  // b.hs, b.nlast
  415b04:	mov	w10, #0x22                  	// #34
  415b08:	strb	w10, [x28, x8]
  415b0c:	add	x8, x27, #0x2
  415b10:	cmp	x8, x24
  415b14:	b.cc	41574c <wcrtomb@plt+0x12aec>  // b.lo, b.ul, b.last
  415b18:	add	x8, x27, #0x3
  415b1c:	cmp	x8, x24
  415b20:	b.cs	415b2c <wcrtomb@plt+0x12ecc>  // b.hs, b.nlast
  415b24:	mov	w10, #0x3f                  	// #63
  415b28:	strb	w10, [x28, x8]
  415b2c:	mov	w8, wzr
  415b30:	mov	w26, wzr
  415b34:	add	x27, x27, #0x4
  415b38:	mov	x22, x9
  415b3c:	b	4152e4 <wcrtomb@plt+0x12684>
  415b40:	mov	w21, #0x3f                  	// #63
  415b44:	mov	w26, w8
  415b48:	b	4152e4 <wcrtomb@plt+0x12684>
  415b4c:	mov	x23, x22
  415b50:	b	415b58 <wcrtomb@plt+0x12ef8>
  415b54:	mov	x23, #0xffffffffffffffff    	// #-1
  415b58:	cmp	w20, #0x2
  415b5c:	cset	w8, eq  // eq = none
  415b60:	cmp	x27, #0x0
  415b64:	cset	w9, eq  // eq = none
  415b68:	and	w8, w8, w9
  415b6c:	and	w8, w17, w8
  415b70:	tbnz	w8, #0, 415bd4 <wcrtomb@plt+0x12f74>
  415b74:	cmp	w20, #0x2
  415b78:	cset	w8, ne  // ne = any
  415b7c:	orr	w8, w17, w8
  415b80:	tbnz	w8, #0, 415c9c <wcrtomb@plt+0x1303c>
  415b84:	ldr	w8, [sp, #84]
  415b88:	eor	w8, w8, #0x1
  415b8c:	tbnz	w8, #0, 415c9c <wcrtomb@plt+0x1303c>
  415b90:	mov	x22, x23
  415b94:	tbnz	w14, #0, 415c6c <wcrtomb@plt+0x1300c>
  415b98:	ldr	x23, [sp, #72]
  415b9c:	mov	w21, wzr
  415ba0:	cbz	x23, 415c98 <wcrtomb@plt+0x13038>
  415ba4:	ldur	w8, [x29, #-72]
  415ba8:	mov	w20, #0x2                   	// #2
  415bac:	mov	w14, w21
  415bb0:	mov	w17, w21
  415bb4:	cbz	x24, 414dc0 <wcrtomb@plt+0x12160>
  415bb8:	b	415c9c <wcrtomb@plt+0x1303c>
  415bbc:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  415bc0:	add	x20, x20, #0x2b6
  415bc4:	b	414ff4 <wcrtomb@plt+0x12394>
  415bc8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  415bcc:	add	x8, x8, #0x2ba
  415bd0:	b	415088 <wcrtomb@plt+0x12428>
  415bd4:	ldur	w8, [x29, #-72]
  415bd8:	ldr	x7, [sp, #96]
  415bdc:	mov	w9, #0x4                   	// #4
  415be0:	tst	w8, #0x1
  415be4:	mov	w8, #0x2                   	// #2
  415be8:	csel	w8, w9, w8, ne  // ne = any
  415bec:	cmp	w20, #0x2
  415bf0:	b.ne	415c18 <wcrtomb@plt+0x12fb8>  // b.any
  415bf4:	mov	w20, w8
  415bf8:	b	415c18 <wcrtomb@plt+0x12fb8>
  415bfc:	ldur	w8, [x29, #-72]
  415c00:	ldr	x23, [sp, #40]
  415c04:	mov	w9, #0x4                   	// #4
  415c08:	tst	w8, #0x1
  415c0c:	mov	w8, #0x2                   	// #2
  415c10:	csel	w20, w9, w8, ne  // ne = any
  415c14:	ldr	x7, [sp, #96]
  415c18:	ldr	w8, [sp, #88]
  415c1c:	mov	x0, x28
  415c20:	mov	x1, x24
  415c24:	mov	x2, x19
  415c28:	and	w5, w8, #0xfffffffd
  415c2c:	ldur	x8, [x29, #-88]
  415c30:	mov	x3, x23
  415c34:	mov	w4, w20
  415c38:	mov	x6, xzr
  415c3c:	str	x8, [sp]
  415c40:	bl	414d44 <wcrtomb@plt+0x120e4>
  415c44:	mov	x27, x0
  415c48:	mov	x0, x27
  415c4c:	ldp	x20, x19, [sp, #272]
  415c50:	ldp	x22, x21, [sp, #256]
  415c54:	ldp	x24, x23, [sp, #240]
  415c58:	ldp	x26, x25, [sp, #224]
  415c5c:	ldp	x28, x27, [sp, #208]
  415c60:	ldp	x29, x30, [sp, #192]
  415c64:	add	sp, sp, #0x120
  415c68:	ret
  415c6c:	ldur	x8, [x29, #-88]
  415c70:	ldr	x1, [sp, #72]
  415c74:	ldr	w5, [sp, #88]
  415c78:	ldur	x6, [x29, #-40]
  415c7c:	ldr	x7, [sp, #96]
  415c80:	mov	w4, #0x5                   	// #5
  415c84:	str	x8, [sp]
  415c88:	mov	x0, x28
  415c8c:	mov	x2, x19
  415c90:	mov	x3, x22
  415c94:	b	415c40 <wcrtomb@plt+0x12fe0>
  415c98:	mov	w17, w21
  415c9c:	ldur	x8, [x29, #-64]
  415ca0:	cbz	x8, 415cd4 <wcrtomb@plt+0x13074>
  415ca4:	tbnz	w17, #0, 415cd4 <wcrtomb@plt+0x13074>
  415ca8:	ldrb	w9, [x8]
  415cac:	cbz	w9, 415cd4 <wcrtomb@plt+0x13074>
  415cb0:	add	x8, x8, #0x1
  415cb4:	b	415cc4 <wcrtomb@plt+0x13064>
  415cb8:	ldrb	w9, [x8], #1
  415cbc:	add	x27, x27, #0x1
  415cc0:	cbz	w9, 415cd4 <wcrtomb@plt+0x13074>
  415cc4:	cmp	x27, x24
  415cc8:	b.cs	415cb8 <wcrtomb@plt+0x13058>  // b.hs, b.nlast
  415ccc:	strb	w9, [x28, x27]
  415cd0:	b	415cb8 <wcrtomb@plt+0x13058>
  415cd4:	cmp	x27, x24
  415cd8:	b.cs	415c48 <wcrtomb@plt+0x12fe8>  // b.hs, b.nlast
  415cdc:	strb	wzr, [x28, x27]
  415ce0:	b	415c48 <wcrtomb@plt+0x12fe8>
  415ce4:	b.ne	415c14 <wcrtomb@plt+0x12fb4>  // b.any
  415ce8:	mov	w20, #0x4                   	// #4
  415cec:	b	415c14 <wcrtomb@plt+0x12fb4>
  415cf0:	bl	402920 <abort@plt>
  415cf4:	sub	sp, sp, #0x60
  415cf8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415cfc:	add	x8, x8, #0x798
  415d00:	cmp	x2, #0x0
  415d04:	stp	x29, x30, [sp, #16]
  415d08:	stp	x26, x25, [sp, #32]
  415d0c:	stp	x24, x23, [sp, #48]
  415d10:	stp	x22, x21, [sp, #64]
  415d14:	stp	x20, x19, [sp, #80]
  415d18:	add	x29, sp, #0x10
  415d1c:	mov	x19, x1
  415d20:	mov	x20, x0
  415d24:	csel	x25, x8, x2, eq  // eq = none
  415d28:	bl	402bd0 <__errno_location@plt>
  415d2c:	ldp	w4, w8, [x25]
  415d30:	ldp	x7, x9, [x25, #40]
  415d34:	ldr	w26, [x0]
  415d38:	add	x23, x25, #0x8
  415d3c:	orr	w22, w8, #0x1
  415d40:	mov	x21, x0
  415d44:	mov	x0, xzr
  415d48:	mov	x1, xzr
  415d4c:	mov	x2, x20
  415d50:	mov	x3, x19
  415d54:	mov	w5, w22
  415d58:	mov	x6, x23
  415d5c:	str	x9, [sp]
  415d60:	bl	414d44 <wcrtomb@plt+0x120e4>
  415d64:	add	x24, x0, #0x1
  415d68:	mov	x0, x24
  415d6c:	bl	416dd4 <wcrtomb@plt+0x14174>
  415d70:	ldr	w4, [x25]
  415d74:	ldp	x7, x8, [x25, #40]
  415d78:	mov	x1, x24
  415d7c:	mov	x2, x20
  415d80:	mov	x3, x19
  415d84:	mov	w5, w22
  415d88:	mov	x6, x23
  415d8c:	mov	x25, x0
  415d90:	str	x8, [sp]
  415d94:	bl	414d44 <wcrtomb@plt+0x120e4>
  415d98:	str	w26, [x21]
  415d9c:	mov	x0, x25
  415da0:	ldp	x20, x19, [sp, #80]
  415da4:	ldp	x22, x21, [sp, #64]
  415da8:	ldp	x24, x23, [sp, #48]
  415dac:	ldp	x26, x25, [sp, #32]
  415db0:	ldp	x29, x30, [sp, #16]
  415db4:	add	sp, sp, #0x60
  415db8:	ret
  415dbc:	sub	sp, sp, #0x70
  415dc0:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415dc4:	add	x8, x8, #0x798
  415dc8:	cmp	x3, #0x0
  415dcc:	stp	x29, x30, [sp, #16]
  415dd0:	stp	x28, x27, [sp, #32]
  415dd4:	stp	x26, x25, [sp, #48]
  415dd8:	stp	x24, x23, [sp, #64]
  415ddc:	stp	x22, x21, [sp, #80]
  415de0:	stp	x20, x19, [sp, #96]
  415de4:	add	x29, sp, #0x10
  415de8:	mov	x19, x2
  415dec:	mov	x22, x1
  415df0:	mov	x23, x0
  415df4:	csel	x21, x8, x3, eq  // eq = none
  415df8:	bl	402bd0 <__errno_location@plt>
  415dfc:	ldp	w4, w8, [x21]
  415e00:	cmp	x19, #0x0
  415e04:	ldp	x7, x9, [x21, #40]
  415e08:	ldr	w28, [x0]
  415e0c:	cset	w10, eq  // eq = none
  415e10:	orr	w25, w8, w10
  415e14:	add	x26, x21, #0x8
  415e18:	mov	x24, x0
  415e1c:	mov	x0, xzr
  415e20:	mov	x1, xzr
  415e24:	mov	x2, x23
  415e28:	mov	x3, x22
  415e2c:	mov	w5, w25
  415e30:	mov	x6, x26
  415e34:	str	x9, [sp]
  415e38:	bl	414d44 <wcrtomb@plt+0x120e4>
  415e3c:	add	x27, x0, #0x1
  415e40:	mov	x20, x0
  415e44:	mov	x0, x27
  415e48:	bl	416dd4 <wcrtomb@plt+0x14174>
  415e4c:	ldr	w4, [x21]
  415e50:	ldp	x7, x8, [x21, #40]
  415e54:	mov	x1, x27
  415e58:	mov	x2, x23
  415e5c:	mov	x3, x22
  415e60:	mov	w5, w25
  415e64:	mov	x6, x26
  415e68:	mov	x21, x0
  415e6c:	str	x8, [sp]
  415e70:	bl	414d44 <wcrtomb@plt+0x120e4>
  415e74:	str	w28, [x24]
  415e78:	cbz	x19, 415e80 <wcrtomb@plt+0x13220>
  415e7c:	str	x20, [x19]
  415e80:	mov	x0, x21
  415e84:	ldp	x20, x19, [sp, #96]
  415e88:	ldp	x22, x21, [sp, #80]
  415e8c:	ldp	x24, x23, [sp, #64]
  415e90:	ldp	x26, x25, [sp, #48]
  415e94:	ldp	x28, x27, [sp, #32]
  415e98:	ldp	x29, x30, [sp, #16]
  415e9c:	add	sp, sp, #0x70
  415ea0:	ret
  415ea4:	stp	x29, x30, [sp, #-48]!
  415ea8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415eac:	add	x8, x8, #0x4a8
  415eb0:	ldr	w9, [x8]
  415eb4:	stp	x20, x19, [sp, #32]
  415eb8:	ldr	x19, [x8, #8]
  415ebc:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415ec0:	cmp	w9, #0x2
  415ec4:	stp	x22, x21, [sp, #16]
  415ec8:	mov	x29, sp
  415ecc:	b.lt	415ef0 <wcrtomb@plt+0x13290>  // b.tstop
  415ed0:	add	x21, x19, #0x18
  415ed4:	mov	w22, #0x1                   	// #1
  415ed8:	ldr	x0, [x21], #16
  415edc:	bl	402a10 <free@plt>
  415ee0:	ldrsw	x8, [x20, #1192]
  415ee4:	add	x22, x22, #0x1
  415ee8:	cmp	x22, x8
  415eec:	b.lt	415ed8 <wcrtomb@plt+0x13278>  // b.tstop
  415ef0:	ldr	x0, [x19, #8]
  415ef4:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415ef8:	add	x21, x21, #0x7d0
  415efc:	adrp	x22, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415f00:	cmp	x0, x21
  415f04:	add	x22, x22, #0x4b8
  415f08:	b.eq	415f18 <wcrtomb@plt+0x132b8>  // b.none
  415f0c:	bl	402a10 <free@plt>
  415f10:	mov	w8, #0x100                 	// #256
  415f14:	stp	x8, x21, [x22]
  415f18:	cmp	x19, x22
  415f1c:	b.eq	415f38 <wcrtomb@plt+0x132d8>  // b.none
  415f20:	mov	x0, x19
  415f24:	bl	402a10 <free@plt>
  415f28:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415f2c:	add	x8, x8, #0x4b0
  415f30:	add	x9, x8, #0x8
  415f34:	str	x9, [x8]
  415f38:	mov	w8, #0x1                   	// #1
  415f3c:	str	w8, [x20, #1192]
  415f40:	ldp	x20, x19, [sp, #32]
  415f44:	ldp	x22, x21, [sp, #16]
  415f48:	ldp	x29, x30, [sp], #48
  415f4c:	ret
  415f50:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415f54:	add	x3, x3, #0x798
  415f58:	mov	x2, #0xffffffffffffffff    	// #-1
  415f5c:	b	415f60 <wcrtomb@plt+0x13300>
  415f60:	sub	sp, sp, #0x80
  415f64:	stp	x29, x30, [sp, #32]
  415f68:	add	x29, sp, #0x20
  415f6c:	stp	x28, x27, [sp, #48]
  415f70:	stp	x26, x25, [sp, #64]
  415f74:	stp	x24, x23, [sp, #80]
  415f78:	stp	x22, x21, [sp, #96]
  415f7c:	stp	x20, x19, [sp, #112]
  415f80:	mov	x22, x3
  415f84:	stur	x2, [x29, #-8]
  415f88:	mov	x21, x1
  415f8c:	mov	w23, w0
  415f90:	bl	402bd0 <__errno_location@plt>
  415f94:	tbnz	w23, #31, 4160f0 <wcrtomb@plt+0x13490>
  415f98:	adrp	x25, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415f9c:	ldr	w8, [x25, #1192]
  415fa0:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415fa4:	ldr	w20, [x0]
  415fa8:	ldr	x27, [x9, #1200]
  415fac:	mov	x19, x0
  415fb0:	cmp	w8, w23
  415fb4:	b.gt	41602c <wcrtomb@plt+0x133cc>
  415fb8:	mov	w8, #0x7fffffff            	// #2147483647
  415fbc:	cmp	w23, w8
  415fc0:	stur	w20, [x29, #-12]
  415fc4:	b.eq	4160f4 <wcrtomb@plt+0x13494>  // b.none
  415fc8:	adrp	x28, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415fcc:	add	x28, x28, #0x4b0
  415fd0:	add	x20, x28, #0x8
  415fd4:	add	w26, w23, #0x1
  415fd8:	cmp	x27, x20
  415fdc:	csel	x0, xzr, x27, eq  // eq = none
  415fe0:	sbfiz	x1, x26, #4, #32
  415fe4:	bl	416e54 <wcrtomb@plt+0x141f4>
  415fe8:	mov	x24, x0
  415fec:	cmp	x27, x20
  415ff0:	str	x0, [x28]
  415ff4:	b.ne	416008 <wcrtomb@plt+0x133a8>  // b.any
  415ff8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  415ffc:	add	x8, x8, #0x4b8
  416000:	ldr	q0, [x8]
  416004:	str	q0, [x24]
  416008:	ldrsw	x8, [x25, #1192]
  41600c:	mov	w1, wzr
  416010:	add	x0, x24, x8, lsl #4
  416014:	sub	w8, w26, w8
  416018:	sbfiz	x2, x8, #4, #32
  41601c:	bl	402800 <memset@plt>
  416020:	ldur	w20, [x29, #-12]
  416024:	mov	x27, x24
  416028:	str	w26, [x25, #1192]
  41602c:	add	x28, x27, w23, uxtw #4
  416030:	mov	x27, x28
  416034:	ldr	x26, [x28]
  416038:	ldr	x23, [x27, #8]!
  41603c:	ldp	w4, w8, [x22]
  416040:	ldp	x7, x9, [x22, #40]
  416044:	ldur	x3, [x29, #-8]
  416048:	add	x24, x22, #0x8
  41604c:	orr	w25, w8, #0x1
  416050:	mov	x0, x23
  416054:	mov	x1, x26
  416058:	mov	x2, x21
  41605c:	mov	w5, w25
  416060:	mov	x6, x24
  416064:	str	x9, [sp]
  416068:	bl	414d44 <wcrtomb@plt+0x120e4>
  41606c:	cmp	x26, x0
  416070:	b.hi	4160c8 <wcrtomb@plt+0x13468>  // b.pmore
  416074:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416078:	add	x8, x8, #0x7d0
  41607c:	add	x26, x0, #0x1
  416080:	cmp	x23, x8
  416084:	str	x26, [x28]
  416088:	b.eq	416094 <wcrtomb@plt+0x13434>  // b.none
  41608c:	mov	x0, x23
  416090:	bl	402a10 <free@plt>
  416094:	mov	x0, x26
  416098:	bl	416dd4 <wcrtomb@plt+0x14174>
  41609c:	str	x0, [x27]
  4160a0:	ldr	w4, [x22]
  4160a4:	ldp	x7, x8, [x22, #40]
  4160a8:	ldur	x3, [x29, #-8]
  4160ac:	mov	x1, x26
  4160b0:	mov	x2, x21
  4160b4:	mov	w5, w25
  4160b8:	mov	x6, x24
  4160bc:	mov	x23, x0
  4160c0:	str	x8, [sp]
  4160c4:	bl	414d44 <wcrtomb@plt+0x120e4>
  4160c8:	str	w20, [x19]
  4160cc:	mov	x0, x23
  4160d0:	ldp	x20, x19, [sp, #112]
  4160d4:	ldp	x22, x21, [sp, #96]
  4160d8:	ldp	x24, x23, [sp, #80]
  4160dc:	ldp	x26, x25, [sp, #64]
  4160e0:	ldp	x28, x27, [sp, #48]
  4160e4:	ldp	x29, x30, [sp, #32]
  4160e8:	add	sp, sp, #0x80
  4160ec:	ret
  4160f0:	bl	402920 <abort@plt>
  4160f4:	bl	4170f0 <wcrtomb@plt+0x14490>
  4160f8:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4160fc:	add	x3, x3, #0x798
  416100:	b	415f60 <wcrtomb@plt+0x13300>
  416104:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416108:	add	x3, x3, #0x798
  41610c:	mov	x2, #0xffffffffffffffff    	// #-1
  416110:	mov	x1, x0
  416114:	mov	w0, wzr
  416118:	b	415f60 <wcrtomb@plt+0x13300>
  41611c:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416120:	mov	x2, x1
  416124:	add	x3, x3, #0x798
  416128:	mov	x1, x0
  41612c:	mov	w0, wzr
  416130:	b	415f60 <wcrtomb@plt+0x13300>
  416134:	sub	sp, sp, #0x50
  416138:	movi	v0.2d, #0x0
  41613c:	cmp	w1, #0xa
  416140:	stp	x29, x30, [sp, #64]
  416144:	add	x29, sp, #0x40
  416148:	str	xzr, [sp, #48]
  41614c:	stp	q0, q0, [sp, #16]
  416150:	str	q0, [sp]
  416154:	b.eq	41617c <wcrtomb@plt+0x1351c>  // b.none
  416158:	mov	x8, x2
  41615c:	str	w1, [sp]
  416160:	mov	x3, sp
  416164:	mov	x2, #0xffffffffffffffff    	// #-1
  416168:	mov	x1, x8
  41616c:	bl	415f60 <wcrtomb@plt+0x13300>
  416170:	ldp	x29, x30, [sp, #64]
  416174:	add	sp, sp, #0x50
  416178:	ret
  41617c:	bl	402920 <abort@plt>
  416180:	sub	sp, sp, #0x50
  416184:	movi	v0.2d, #0x0
  416188:	cmp	w1, #0xa
  41618c:	stp	x29, x30, [sp, #64]
  416190:	add	x29, sp, #0x40
  416194:	str	xzr, [sp, #48]
  416198:	stp	q0, q0, [sp, #16]
  41619c:	str	q0, [sp]
  4161a0:	b.eq	4161c8 <wcrtomb@plt+0x13568>  // b.none
  4161a4:	mov	x8, x3
  4161a8:	str	w1, [sp]
  4161ac:	mov	x3, sp
  4161b0:	mov	x1, x2
  4161b4:	mov	x2, x8
  4161b8:	bl	415f60 <wcrtomb@plt+0x13300>
  4161bc:	ldp	x29, x30, [sp, #64]
  4161c0:	add	sp, sp, #0x50
  4161c4:	ret
  4161c8:	bl	402920 <abort@plt>
  4161cc:	sub	sp, sp, #0x50
  4161d0:	movi	v0.2d, #0x0
  4161d4:	cmp	w0, #0xa
  4161d8:	stp	x29, x30, [sp, #64]
  4161dc:	add	x29, sp, #0x40
  4161e0:	str	xzr, [sp, #48]
  4161e4:	stp	q0, q0, [sp, #16]
  4161e8:	str	q0, [sp]
  4161ec:	b.eq	416210 <wcrtomb@plt+0x135b0>  // b.none
  4161f0:	str	w0, [sp]
  4161f4:	mov	x3, sp
  4161f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4161fc:	mov	w0, wzr
  416200:	bl	415f60 <wcrtomb@plt+0x13300>
  416204:	ldp	x29, x30, [sp, #64]
  416208:	add	sp, sp, #0x50
  41620c:	ret
  416210:	bl	402920 <abort@plt>
  416214:	sub	sp, sp, #0x50
  416218:	movi	v0.2d, #0x0
  41621c:	cmp	w0, #0xa
  416220:	stp	x29, x30, [sp, #64]
  416224:	add	x29, sp, #0x40
  416228:	str	xzr, [sp, #48]
  41622c:	stp	q0, q0, [sp, #16]
  416230:	str	q0, [sp]
  416234:	b.eq	416254 <wcrtomb@plt+0x135f4>  // b.none
  416238:	str	w0, [sp]
  41623c:	mov	x3, sp
  416240:	mov	w0, wzr
  416244:	bl	415f60 <wcrtomb@plt+0x13300>
  416248:	ldp	x29, x30, [sp, #64]
  41624c:	add	sp, sp, #0x50
  416250:	ret
  416254:	bl	402920 <abort@plt>
  416258:	sub	sp, sp, #0x50
  41625c:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416260:	add	x9, x9, #0x798
  416264:	ldp	q0, q1, [x9]
  416268:	ubfx	w10, w2, #5, #3
  41626c:	mov	x11, sp
  416270:	mov	x8, x1
  416274:	stp	q0, q1, [sp]
  416278:	ldr	q0, [x9, #32]
  41627c:	ldr	x9, [x9, #48]
  416280:	mov	x1, x0
  416284:	mov	x3, sp
  416288:	str	q0, [sp, #32]
  41628c:	str	x9, [sp, #48]
  416290:	add	x9, x11, w10, uxtw #2
  416294:	ldr	w10, [x9, #8]
  416298:	mov	w0, wzr
  41629c:	stp	x29, x30, [sp, #64]
  4162a0:	add	x29, sp, #0x40
  4162a4:	lsr	w11, w10, w2
  4162a8:	mvn	w11, w11
  4162ac:	and	w11, w11, #0x1
  4162b0:	lsl	w11, w11, w2
  4162b4:	eor	w10, w11, w10
  4162b8:	mov	x2, x8
  4162bc:	str	w10, [x9, #8]
  4162c0:	bl	415f60 <wcrtomb@plt+0x13300>
  4162c4:	ldp	x29, x30, [sp, #64]
  4162c8:	add	sp, sp, #0x50
  4162cc:	ret
  4162d0:	sub	sp, sp, #0x50
  4162d4:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4162d8:	add	x9, x9, #0x798
  4162dc:	ldp	q0, q1, [x9]
  4162e0:	ubfx	w10, w1, #5, #3
  4162e4:	mov	x11, sp
  4162e8:	mov	x8, x0
  4162ec:	stp	q0, q1, [sp]
  4162f0:	ldr	q0, [x9, #32]
  4162f4:	ldr	x9, [x9, #48]
  4162f8:	mov	x3, sp
  4162fc:	mov	x2, #0xffffffffffffffff    	// #-1
  416300:	str	q0, [sp, #32]
  416304:	str	x9, [sp, #48]
  416308:	add	x9, x11, w10, uxtw #2
  41630c:	ldr	w10, [x9, #8]
  416310:	mov	w0, wzr
  416314:	stp	x29, x30, [sp, #64]
  416318:	add	x29, sp, #0x40
  41631c:	lsr	w11, w10, w1
  416320:	mvn	w11, w11
  416324:	and	w11, w11, #0x1
  416328:	lsl	w11, w11, w1
  41632c:	eor	w10, w11, w10
  416330:	mov	x1, x8
  416334:	str	w10, [x9, #8]
  416338:	bl	415f60 <wcrtomb@plt+0x13300>
  41633c:	ldp	x29, x30, [sp, #64]
  416340:	add	sp, sp, #0x50
  416344:	ret
  416348:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  41634c:	add	x8, x8, #0x798
  416350:	ldp	q0, q1, [x8]
  416354:	ldr	q2, [x8, #32]
  416358:	ldr	x8, [x8, #48]
  41635c:	mov	x1, x0
  416360:	stp	q0, q1, [sp, #-80]!
  416364:	ldr	w9, [sp, #12]
  416368:	str	x8, [sp, #48]
  41636c:	mov	x3, sp
  416370:	mov	x2, #0xffffffffffffffff    	// #-1
  416374:	orr	w8, w9, #0x4000000
  416378:	mov	w0, wzr
  41637c:	stp	x29, x30, [sp, #64]
  416380:	add	x29, sp, #0x40
  416384:	str	q2, [sp, #32]
  416388:	str	w8, [sp, #12]
  41638c:	bl	415f60 <wcrtomb@plt+0x13300>
  416390:	ldp	x29, x30, [sp, #64]
  416394:	add	sp, sp, #0x50
  416398:	ret
  41639c:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4163a0:	add	x8, x8, #0x798
  4163a4:	ldp	q0, q1, [x8]
  4163a8:	ldr	q2, [x8, #32]
  4163ac:	ldr	x8, [x8, #48]
  4163b0:	mov	x2, x1
  4163b4:	stp	q0, q1, [sp, #-80]!
  4163b8:	ldr	w9, [sp, #12]
  4163bc:	mov	x1, x0
  4163c0:	str	x8, [sp, #48]
  4163c4:	mov	x3, sp
  4163c8:	orr	w8, w9, #0x4000000
  4163cc:	mov	w0, wzr
  4163d0:	stp	x29, x30, [sp, #64]
  4163d4:	add	x29, sp, #0x40
  4163d8:	str	q2, [sp, #32]
  4163dc:	str	w8, [sp, #12]
  4163e0:	bl	415f60 <wcrtomb@plt+0x13300>
  4163e4:	ldp	x29, x30, [sp, #64]
  4163e8:	add	sp, sp, #0x50
  4163ec:	ret
  4163f0:	sub	sp, sp, #0x80
  4163f4:	movi	v0.2d, #0x0
  4163f8:	cmp	w1, #0xa
  4163fc:	stp	x29, x30, [sp, #112]
  416400:	add	x29, sp, #0x70
  416404:	str	wzr, [sp, #48]
  416408:	stp	q0, q0, [sp, #16]
  41640c:	str	q0, [sp]
  416410:	b.eq	416460 <wcrtomb@plt+0x13800>  // b.none
  416414:	ldp	q0, q1, [sp]
  416418:	ldr	w9, [sp, #48]
  41641c:	ldr	q2, [sp, #32]
  416420:	mov	x8, x2
  416424:	stur	q0, [sp, #60]
  416428:	ldr	w10, [sp, #68]
  41642c:	str	w1, [sp, #56]
  416430:	str	w9, [sp, #108]
  416434:	add	x3, sp, #0x38
  416438:	orr	w9, w10, #0x4000000
  41643c:	mov	x2, #0xffffffffffffffff    	// #-1
  416440:	mov	x1, x8
  416444:	stur	q1, [sp, #76]
  416448:	stur	q2, [sp, #92]
  41644c:	str	w9, [sp, #68]
  416450:	bl	415f60 <wcrtomb@plt+0x13300>
  416454:	ldp	x29, x30, [sp, #112]
  416458:	add	sp, sp, #0x80
  41645c:	ret
  416460:	bl	402920 <abort@plt>
  416464:	sub	sp, sp, #0x50
  416468:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  41646c:	add	x9, x9, #0x798
  416470:	ldp	q0, q1, [x9]
  416474:	ldr	q2, [x9, #32]
  416478:	ldr	x9, [x9, #48]
  41647c:	mov	w10, #0xa                   	// #10
  416480:	stp	x29, x30, [sp, #64]
  416484:	add	x29, sp, #0x40
  416488:	stp	q0, q1, [sp]
  41648c:	str	q2, [sp, #32]
  416490:	str	x9, [sp, #48]
  416494:	str	w10, [sp]
  416498:	cbz	x1, 4164c4 <wcrtomb@plt+0x13864>
  41649c:	cbz	x2, 4164c4 <wcrtomb@plt+0x13864>
  4164a0:	mov	x8, x3
  4164a4:	stp	x1, x2, [sp, #40]
  4164a8:	mov	x3, sp
  4164ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4164b0:	mov	x1, x8
  4164b4:	bl	415f60 <wcrtomb@plt+0x13300>
  4164b8:	ldp	x29, x30, [sp, #64]
  4164bc:	add	sp, sp, #0x50
  4164c0:	ret
  4164c4:	bl	402920 <abort@plt>
  4164c8:	sub	sp, sp, #0x50
  4164cc:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4164d0:	add	x9, x9, #0x798
  4164d4:	ldp	q0, q1, [x9]
  4164d8:	ldr	x10, [x9, #48]
  4164dc:	stp	x29, x30, [sp, #64]
  4164e0:	add	x29, sp, #0x40
  4164e4:	stp	q0, q1, [sp]
  4164e8:	ldr	q0, [x9, #32]
  4164ec:	mov	w9, #0xa                   	// #10
  4164f0:	str	x10, [sp, #48]
  4164f4:	str	w9, [sp]
  4164f8:	str	q0, [sp, #32]
  4164fc:	cbz	x1, 416528 <wcrtomb@plt+0x138c8>
  416500:	cbz	x2, 416528 <wcrtomb@plt+0x138c8>
  416504:	mov	x8, x3
  416508:	stp	x1, x2, [sp, #40]
  41650c:	mov	x3, sp
  416510:	mov	x1, x8
  416514:	mov	x2, x4
  416518:	bl	415f60 <wcrtomb@plt+0x13300>
  41651c:	ldp	x29, x30, [sp, #64]
  416520:	add	sp, sp, #0x50
  416524:	ret
  416528:	bl	402920 <abort@plt>
  41652c:	sub	sp, sp, #0x50
  416530:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416534:	add	x9, x9, #0x798
  416538:	ldp	q0, q1, [x9]
  41653c:	ldr	q2, [x9, #32]
  416540:	ldr	x9, [x9, #48]
  416544:	mov	w10, #0xa                   	// #10
  416548:	stp	x29, x30, [sp, #64]
  41654c:	add	x29, sp, #0x40
  416550:	stp	q0, q1, [sp]
  416554:	str	q2, [sp, #32]
  416558:	str	x9, [sp, #48]
  41655c:	str	w10, [sp]
  416560:	cbz	x0, 416590 <wcrtomb@plt+0x13930>
  416564:	cbz	x1, 416590 <wcrtomb@plt+0x13930>
  416568:	mov	x8, x2
  41656c:	stp	x0, x1, [sp, #40]
  416570:	mov	x3, sp
  416574:	mov	x2, #0xffffffffffffffff    	// #-1
  416578:	mov	w0, wzr
  41657c:	mov	x1, x8
  416580:	bl	415f60 <wcrtomb@plt+0x13300>
  416584:	ldp	x29, x30, [sp, #64]
  416588:	add	sp, sp, #0x50
  41658c:	ret
  416590:	bl	402920 <abort@plt>
  416594:	sub	sp, sp, #0x50
  416598:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  41659c:	add	x9, x9, #0x798
  4165a0:	ldp	q0, q1, [x9]
  4165a4:	ldr	q2, [x9, #32]
  4165a8:	ldr	x9, [x9, #48]
  4165ac:	mov	w10, #0xa                   	// #10
  4165b0:	stp	x29, x30, [sp, #64]
  4165b4:	add	x29, sp, #0x40
  4165b8:	stp	q0, q1, [sp]
  4165bc:	str	q2, [sp, #32]
  4165c0:	str	x9, [sp, #48]
  4165c4:	str	w10, [sp]
  4165c8:	cbz	x0, 4165f8 <wcrtomb@plt+0x13998>
  4165cc:	cbz	x1, 4165f8 <wcrtomb@plt+0x13998>
  4165d0:	mov	x8, x3
  4165d4:	stp	x0, x1, [sp, #40]
  4165d8:	mov	x3, sp
  4165dc:	mov	w0, wzr
  4165e0:	mov	x1, x2
  4165e4:	mov	x2, x8
  4165e8:	bl	415f60 <wcrtomb@plt+0x13300>
  4165ec:	ldp	x29, x30, [sp, #64]
  4165f0:	add	sp, sp, #0x50
  4165f4:	ret
  4165f8:	bl	402920 <abort@plt>
  4165fc:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416600:	add	x3, x3, #0x470
  416604:	b	415f60 <wcrtomb@plt+0x13300>
  416608:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  41660c:	mov	x2, x1
  416610:	add	x3, x3, #0x470
  416614:	mov	x1, x0
  416618:	mov	w0, wzr
  41661c:	b	415f60 <wcrtomb@plt+0x13300>
  416620:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416624:	add	x3, x3, #0x470
  416628:	mov	x2, #0xffffffffffffffff    	// #-1
  41662c:	b	415f60 <wcrtomb@plt+0x13300>
  416630:	adrp	x3, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416634:	add	x3, x3, #0x470
  416638:	mov	x2, #0xffffffffffffffff    	// #-1
  41663c:	mov	x1, x0
  416640:	mov	w0, wzr
  416644:	b	415f60 <wcrtomb@plt+0x13300>
  416648:	sub	sp, sp, #0x50
  41664c:	stp	x22, x21, [sp, #48]
  416650:	stp	x20, x19, [sp, #64]
  416654:	mov	x21, x5
  416658:	mov	x20, x4
  41665c:	mov	x5, x3
  416660:	mov	x4, x2
  416664:	mov	x19, x0
  416668:	stp	x29, x30, [sp, #32]
  41666c:	add	x29, sp, #0x20
  416670:	cbz	x1, 416690 <wcrtomb@plt+0x13a30>
  416674:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416678:	mov	x3, x1
  41667c:	add	x2, x2, #0x2c7
  416680:	mov	w1, #0x1                   	// #1
  416684:	mov	x0, x19
  416688:	bl	4029c0 <__fprintf_chk@plt>
  41668c:	b	4166ac <wcrtomb@plt+0x13a4c>
  416690:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416694:	add	x2, x2, #0x2d3
  416698:	mov	w1, #0x1                   	// #1
  41669c:	mov	x0, x19
  4166a0:	mov	x3, x4
  4166a4:	mov	x4, x5
  4166a8:	bl	4029c0 <__fprintf_chk@plt>
  4166ac:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4166b0:	add	x1, x1, #0x2da
  4166b4:	mov	w2, #0x5                   	// #5
  4166b8:	mov	x0, xzr
  4166bc:	bl	402b40 <dcgettext@plt>
  4166c0:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4166c4:	mov	x3, x0
  4166c8:	add	x2, x2, #0x5b4
  4166cc:	mov	w1, #0x1                   	// #1
  4166d0:	mov	w4, #0x7e4                 	// #2020
  4166d4:	mov	x0, x19
  4166d8:	bl	4029c0 <__fprintf_chk@plt>
  4166dc:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4166e0:	add	x22, x22, #0x3e2
  4166e4:	mov	x0, x22
  4166e8:	mov	x1, x19
  4166ec:	bl	402b50 <fputs_unlocked@plt>
  4166f0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4166f4:	add	x1, x1, #0x2de
  4166f8:	mov	w2, #0x5                   	// #5
  4166fc:	mov	x0, xzr
  416700:	bl	402b40 <dcgettext@plt>
  416704:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416708:	mov	x2, x0
  41670c:	add	x3, x3, #0x389
  416710:	mov	w1, #0x1                   	// #1
  416714:	mov	x0, x19
  416718:	bl	4029c0 <__fprintf_chk@plt>
  41671c:	mov	x0, x22
  416720:	mov	x1, x19
  416724:	bl	402b50 <fputs_unlocked@plt>
  416728:	cmp	x21, #0x9
  41672c:	b.hi	416780 <wcrtomb@plt+0x13b20>  // b.pmore
  416730:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416734:	add	x8, x8, #0x2bd
  416738:	adr	x9, 416748 <wcrtomb@plt+0x13ae8>
  41673c:	ldrb	w10, [x8, x21]
  416740:	add	x9, x9, x10, lsl #2
  416744:	br	x9
  416748:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41674c:	add	x1, x1, #0x3ab
  416750:	mov	w2, #0x5                   	// #5
  416754:	mov	x0, xzr
  416758:	bl	402b40 <dcgettext@plt>
  41675c:	ldr	x3, [x20]
  416760:	mov	x2, x0
  416764:	mov	x0, x19
  416768:	ldp	x20, x19, [sp, #64]
  41676c:	ldp	x22, x21, [sp, #48]
  416770:	ldp	x29, x30, [sp, #32]
  416774:	mov	w1, #0x1                   	// #1
  416778:	add	sp, sp, #0x50
  41677c:	b	4029c0 <__fprintf_chk@plt>
  416780:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416784:	add	x1, x1, #0x4ea
  416788:	b	4168e4 <wcrtomb@plt+0x13c84>
  41678c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416790:	add	x1, x1, #0x3bb
  416794:	mov	w2, #0x5                   	// #5
  416798:	mov	x0, xzr
  41679c:	bl	402b40 <dcgettext@plt>
  4167a0:	ldp	x3, x4, [x20]
  4167a4:	mov	x2, x0
  4167a8:	mov	x0, x19
  4167ac:	ldp	x20, x19, [sp, #64]
  4167b0:	ldp	x22, x21, [sp, #48]
  4167b4:	ldp	x29, x30, [sp, #32]
  4167b8:	mov	w1, #0x1                   	// #1
  4167bc:	add	sp, sp, #0x50
  4167c0:	b	4029c0 <__fprintf_chk@plt>
  4167c4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4167c8:	add	x1, x1, #0x3d2
  4167cc:	mov	w2, #0x5                   	// #5
  4167d0:	mov	x0, xzr
  4167d4:	bl	402b40 <dcgettext@plt>
  4167d8:	ldp	x3, x4, [x20]
  4167dc:	ldr	x5, [x20, #16]
  4167e0:	mov	x2, x0
  4167e4:	mov	x0, x19
  4167e8:	ldp	x20, x19, [sp, #64]
  4167ec:	ldp	x22, x21, [sp, #48]
  4167f0:	ldp	x29, x30, [sp, #32]
  4167f4:	mov	w1, #0x1                   	// #1
  4167f8:	add	sp, sp, #0x50
  4167fc:	b	4029c0 <__fprintf_chk@plt>
  416800:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416804:	add	x1, x1, #0x3ee
  416808:	mov	w2, #0x5                   	// #5
  41680c:	mov	x0, xzr
  416810:	bl	402b40 <dcgettext@plt>
  416814:	ldp	x3, x4, [x20]
  416818:	ldp	x5, x6, [x20, #16]
  41681c:	mov	x2, x0
  416820:	mov	x0, x19
  416824:	ldp	x20, x19, [sp, #64]
  416828:	ldp	x22, x21, [sp, #48]
  41682c:	ldp	x29, x30, [sp, #32]
  416830:	mov	w1, #0x1                   	// #1
  416834:	add	sp, sp, #0x50
  416838:	b	4029c0 <__fprintf_chk@plt>
  41683c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416840:	add	x1, x1, #0x40e
  416844:	mov	w2, #0x5                   	// #5
  416848:	mov	x0, xzr
  41684c:	bl	402b40 <dcgettext@plt>
  416850:	ldp	x3, x4, [x20]
  416854:	ldp	x5, x6, [x20, #16]
  416858:	ldr	x7, [x20, #32]
  41685c:	mov	x2, x0
  416860:	mov	x0, x19
  416864:	ldp	x20, x19, [sp, #64]
  416868:	ldp	x22, x21, [sp, #48]
  41686c:	ldp	x29, x30, [sp, #32]
  416870:	mov	w1, #0x1                   	// #1
  416874:	add	sp, sp, #0x50
  416878:	b	4029c0 <__fprintf_chk@plt>
  41687c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416880:	add	x1, x1, #0x432
  416884:	mov	w2, #0x5                   	// #5
  416888:	mov	x0, xzr
  41688c:	bl	402b40 <dcgettext@plt>
  416890:	ldp	x3, x4, [x20]
  416894:	ldp	x5, x6, [x20, #16]
  416898:	ldp	x7, x8, [x20, #32]
  41689c:	mov	x2, x0
  4168a0:	b	4168d0 <wcrtomb@plt+0x13c70>
  4168a4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4168a8:	add	x1, x1, #0x45a
  4168ac:	mov	w2, #0x5                   	// #5
  4168b0:	mov	x0, xzr
  4168b4:	bl	402b40 <dcgettext@plt>
  4168b8:	ldr	x9, [x20, #48]
  4168bc:	ldp	x3, x4, [x20]
  4168c0:	ldp	x5, x6, [x20, #16]
  4168c4:	ldp	x7, x8, [x20, #32]
  4168c8:	mov	x2, x0
  4168cc:	str	x9, [sp, #8]
  4168d0:	mov	w1, #0x1                   	// #1
  4168d4:	str	x8, [sp]
  4168d8:	b	416948 <wcrtomb@plt+0x13ce8>
  4168dc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4168e0:	add	x1, x1, #0x4b6
  4168e4:	mov	w2, #0x5                   	// #5
  4168e8:	mov	x0, xzr
  4168ec:	bl	402b40 <dcgettext@plt>
  4168f0:	ldp	x8, x9, [x20, #56]
  4168f4:	ldp	x3, x4, [x20]
  4168f8:	ldp	x5, x6, [x20, #16]
  4168fc:	ldr	x7, [x20, #32]
  416900:	ldur	q0, [x20, #40]
  416904:	mov	x2, x0
  416908:	str	x9, [sp, #24]
  41690c:	b	41693c <wcrtomb@plt+0x13cdc>
  416910:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416914:	add	x1, x1, #0x486
  416918:	mov	w2, #0x5                   	// #5
  41691c:	mov	x0, xzr
  416920:	bl	402b40 <dcgettext@plt>
  416924:	ldp	x3, x4, [x20]
  416928:	ldp	x5, x6, [x20, #16]
  41692c:	ldr	x7, [x20, #32]
  416930:	ldur	q0, [x20, #40]
  416934:	ldr	x8, [x20, #56]
  416938:	mov	x2, x0
  41693c:	str	x8, [sp, #16]
  416940:	mov	w1, #0x1                   	// #1
  416944:	str	q0, [sp]
  416948:	mov	x0, x19
  41694c:	bl	4029c0 <__fprintf_chk@plt>
  416950:	ldp	x20, x19, [sp, #64]
  416954:	ldp	x22, x21, [sp, #48]
  416958:	ldp	x29, x30, [sp, #32]
  41695c:	add	sp, sp, #0x50
  416960:	ret
  416964:	mov	x8, xzr
  416968:	ldr	x9, [x4, x8, lsl #3]
  41696c:	add	x8, x8, #0x1
  416970:	cbnz	x9, 416968 <wcrtomb@plt+0x13d08>
  416974:	sub	x5, x8, #0x1
  416978:	b	416648 <wcrtomb@plt+0x139e8>
  41697c:	sub	sp, sp, #0x60
  416980:	stp	x29, x30, [sp, #80]
  416984:	ldr	w9, [x4, #24]
  416988:	add	x29, sp, #0x50
  41698c:	mov	w8, w9
  416990:	tbz	w9, #31, 4169c4 <wcrtomb@plt+0x13d64>
  416994:	add	w8, w9, #0x8
  416998:	cmn	w9, #0x8
  41699c:	str	w8, [x4, #24]
  4169a0:	b.gt	4169c4 <wcrtomb@plt+0x13d64>
  4169a4:	ldr	x10, [x4, #8]
  4169a8:	sxtw	x9, w9
  4169ac:	add	x9, x10, x9
  4169b0:	ldr	x9, [x9]
  4169b4:	str	x9, [sp]
  4169b8:	cbnz	x9, 4169dc <wcrtomb@plt+0x13d7c>
  4169bc:	mov	x5, xzr
  4169c0:	b	416c7c <wcrtomb@plt+0x1401c>
  4169c4:	ldr	x9, [x4]
  4169c8:	add	x10, x9, #0x8
  4169cc:	str	x10, [x4]
  4169d0:	ldr	x9, [x9]
  4169d4:	str	x9, [sp]
  4169d8:	cbz	x9, 4169bc <wcrtomb@plt+0x13d5c>
  4169dc:	tbnz	w8, #31, 4169e8 <wcrtomb@plt+0x13d88>
  4169e0:	mov	w9, w8
  4169e4:	b	416a14 <wcrtomb@plt+0x13db4>
  4169e8:	add	w9, w8, #0x8
  4169ec:	cmn	w8, #0x8
  4169f0:	str	w9, [x4, #24]
  4169f4:	b.gt	416a14 <wcrtomb@plt+0x13db4>
  4169f8:	ldr	x10, [x4, #8]
  4169fc:	add	x8, x10, w8, sxtw
  416a00:	ldr	x8, [x8]
  416a04:	str	x8, [sp, #8]
  416a08:	cbnz	x8, 416a2c <wcrtomb@plt+0x13dcc>
  416a0c:	mov	w5, #0x1                   	// #1
  416a10:	b	416c7c <wcrtomb@plt+0x1401c>
  416a14:	ldr	x8, [x4]
  416a18:	add	x10, x8, #0x8
  416a1c:	str	x10, [x4]
  416a20:	ldr	x8, [x8]
  416a24:	str	x8, [sp, #8]
  416a28:	cbz	x8, 416a0c <wcrtomb@plt+0x13dac>
  416a2c:	tbnz	w9, #31, 416a38 <wcrtomb@plt+0x13dd8>
  416a30:	mov	w8, w9
  416a34:	b	416a64 <wcrtomb@plt+0x13e04>
  416a38:	add	w8, w9, #0x8
  416a3c:	cmn	w9, #0x8
  416a40:	str	w8, [x4, #24]
  416a44:	b.gt	416a64 <wcrtomb@plt+0x13e04>
  416a48:	ldr	x10, [x4, #8]
  416a4c:	add	x9, x10, w9, sxtw
  416a50:	ldr	x9, [x9]
  416a54:	str	x9, [sp, #16]
  416a58:	cbnz	x9, 416a7c <wcrtomb@plt+0x13e1c>
  416a5c:	mov	w5, #0x2                   	// #2
  416a60:	b	416c7c <wcrtomb@plt+0x1401c>
  416a64:	ldr	x9, [x4]
  416a68:	add	x10, x9, #0x8
  416a6c:	str	x10, [x4]
  416a70:	ldr	x9, [x9]
  416a74:	str	x9, [sp, #16]
  416a78:	cbz	x9, 416a5c <wcrtomb@plt+0x13dfc>
  416a7c:	tbnz	w8, #31, 416a88 <wcrtomb@plt+0x13e28>
  416a80:	mov	w9, w8
  416a84:	b	416ab4 <wcrtomb@plt+0x13e54>
  416a88:	add	w9, w8, #0x8
  416a8c:	cmn	w8, #0x8
  416a90:	str	w9, [x4, #24]
  416a94:	b.gt	416ab4 <wcrtomb@plt+0x13e54>
  416a98:	ldr	x10, [x4, #8]
  416a9c:	add	x8, x10, w8, sxtw
  416aa0:	ldr	x8, [x8]
  416aa4:	str	x8, [sp, #24]
  416aa8:	cbnz	x8, 416acc <wcrtomb@plt+0x13e6c>
  416aac:	mov	w5, #0x3                   	// #3
  416ab0:	b	416c7c <wcrtomb@plt+0x1401c>
  416ab4:	ldr	x8, [x4]
  416ab8:	add	x10, x8, #0x8
  416abc:	str	x10, [x4]
  416ac0:	ldr	x8, [x8]
  416ac4:	str	x8, [sp, #24]
  416ac8:	cbz	x8, 416aac <wcrtomb@plt+0x13e4c>
  416acc:	tbnz	w9, #31, 416ad8 <wcrtomb@plt+0x13e78>
  416ad0:	mov	w8, w9
  416ad4:	b	416b04 <wcrtomb@plt+0x13ea4>
  416ad8:	add	w8, w9, #0x8
  416adc:	cmn	w9, #0x8
  416ae0:	str	w8, [x4, #24]
  416ae4:	b.gt	416b04 <wcrtomb@plt+0x13ea4>
  416ae8:	ldr	x10, [x4, #8]
  416aec:	add	x9, x10, w9, sxtw
  416af0:	ldr	x9, [x9]
  416af4:	str	x9, [sp, #32]
  416af8:	cbnz	x9, 416b1c <wcrtomb@plt+0x13ebc>
  416afc:	mov	w5, #0x4                   	// #4
  416b00:	b	416c7c <wcrtomb@plt+0x1401c>
  416b04:	ldr	x9, [x4]
  416b08:	add	x10, x9, #0x8
  416b0c:	str	x10, [x4]
  416b10:	ldr	x9, [x9]
  416b14:	str	x9, [sp, #32]
  416b18:	cbz	x9, 416afc <wcrtomb@plt+0x13e9c>
  416b1c:	tbnz	w8, #31, 416b28 <wcrtomb@plt+0x13ec8>
  416b20:	mov	w9, w8
  416b24:	b	416b44 <wcrtomb@plt+0x13ee4>
  416b28:	add	w9, w8, #0x8
  416b2c:	cmn	w8, #0x8
  416b30:	str	w9, [x4, #24]
  416b34:	b.gt	416b44 <wcrtomb@plt+0x13ee4>
  416b38:	ldr	x10, [x4, #8]
  416b3c:	add	x8, x10, w8, sxtw
  416b40:	b	416b50 <wcrtomb@plt+0x13ef0>
  416b44:	ldr	x8, [x4]
  416b48:	add	x10, x8, #0x8
  416b4c:	str	x10, [x4]
  416b50:	ldr	x8, [x8]
  416b54:	str	x8, [sp, #40]
  416b58:	cbz	x8, 416b68 <wcrtomb@plt+0x13f08>
  416b5c:	tbnz	w9, #31, 416b70 <wcrtomb@plt+0x13f10>
  416b60:	mov	w8, w9
  416b64:	b	416b8c <wcrtomb@plt+0x13f2c>
  416b68:	mov	w5, #0x5                   	// #5
  416b6c:	b	416c7c <wcrtomb@plt+0x1401c>
  416b70:	add	w8, w9, #0x8
  416b74:	cmn	w9, #0x8
  416b78:	str	w8, [x4, #24]
  416b7c:	b.gt	416b8c <wcrtomb@plt+0x13f2c>
  416b80:	ldr	x10, [x4, #8]
  416b84:	add	x9, x10, w9, sxtw
  416b88:	b	416b98 <wcrtomb@plt+0x13f38>
  416b8c:	ldr	x9, [x4]
  416b90:	add	x10, x9, #0x8
  416b94:	str	x10, [x4]
  416b98:	ldr	x9, [x9]
  416b9c:	str	x9, [sp, #48]
  416ba0:	cbz	x9, 416bb0 <wcrtomb@plt+0x13f50>
  416ba4:	tbnz	w8, #31, 416bb8 <wcrtomb@plt+0x13f58>
  416ba8:	mov	w9, w8
  416bac:	b	416bd4 <wcrtomb@plt+0x13f74>
  416bb0:	mov	w5, #0x6                   	// #6
  416bb4:	b	416c7c <wcrtomb@plt+0x1401c>
  416bb8:	add	w9, w8, #0x8
  416bbc:	cmn	w8, #0x8
  416bc0:	str	w9, [x4, #24]
  416bc4:	b.gt	416bd4 <wcrtomb@plt+0x13f74>
  416bc8:	ldr	x10, [x4, #8]
  416bcc:	add	x8, x10, w8, sxtw
  416bd0:	b	416be0 <wcrtomb@plt+0x13f80>
  416bd4:	ldr	x8, [x4]
  416bd8:	add	x10, x8, #0x8
  416bdc:	str	x10, [x4]
  416be0:	ldr	x8, [x8]
  416be4:	str	x8, [sp, #56]
  416be8:	cbz	x8, 416bf8 <wcrtomb@plt+0x13f98>
  416bec:	tbnz	w9, #31, 416c00 <wcrtomb@plt+0x13fa0>
  416bf0:	mov	w8, w9
  416bf4:	b	416c1c <wcrtomb@plt+0x13fbc>
  416bf8:	mov	w5, #0x7                   	// #7
  416bfc:	b	416c7c <wcrtomb@plt+0x1401c>
  416c00:	add	w8, w9, #0x8
  416c04:	cmn	w9, #0x8
  416c08:	str	w8, [x4, #24]
  416c0c:	b.gt	416c1c <wcrtomb@plt+0x13fbc>
  416c10:	ldr	x10, [x4, #8]
  416c14:	add	x9, x10, w9, sxtw
  416c18:	b	416c28 <wcrtomb@plt+0x13fc8>
  416c1c:	ldr	x9, [x4]
  416c20:	add	x10, x9, #0x8
  416c24:	str	x10, [x4]
  416c28:	ldr	x9, [x9]
  416c2c:	str	x9, [sp, #64]
  416c30:	cbz	x9, 416c78 <wcrtomb@plt+0x14018>
  416c34:	tbz	w8, #31, 416c54 <wcrtomb@plt+0x13ff4>
  416c38:	add	w9, w8, #0x8
  416c3c:	cmn	w8, #0x8
  416c40:	str	w9, [x4, #24]
  416c44:	b.gt	416c54 <wcrtomb@plt+0x13ff4>
  416c48:	ldr	x9, [x4, #8]
  416c4c:	add	x8, x9, w8, sxtw
  416c50:	b	416c60 <wcrtomb@plt+0x14000>
  416c54:	ldr	x8, [x4]
  416c58:	add	x9, x8, #0x8
  416c5c:	str	x9, [x4]
  416c60:	ldr	x8, [x8]
  416c64:	str	x8, [sp, #72]
  416c68:	cmp	x8, #0x0
  416c6c:	mov	w8, #0x9                   	// #9
  416c70:	cinc	x5, x8, ne  // ne = any
  416c74:	b	416c7c <wcrtomb@plt+0x1401c>
  416c78:	mov	w5, #0x8                   	// #8
  416c7c:	mov	x4, sp
  416c80:	bl	416648 <wcrtomb@plt+0x139e8>
  416c84:	ldp	x29, x30, [sp, #80]
  416c88:	add	sp, sp, #0x60
  416c8c:	ret
  416c90:	sub	sp, sp, #0xf0
  416c94:	stp	x29, x30, [sp, #224]
  416c98:	add	x29, sp, #0xe0
  416c9c:	mov	x8, #0xffffffffffffffe0    	// #-32
  416ca0:	mov	x9, sp
  416ca4:	sub	x10, x29, #0x60
  416ca8:	movk	x8, #0xff80, lsl #32
  416cac:	add	x11, x29, #0x10
  416cb0:	add	x9, x9, #0x80
  416cb4:	add	x10, x10, #0x20
  416cb8:	stp	x9, x8, [x29, #-16]
  416cbc:	stp	x11, x10, [x29, #-32]
  416cc0:	stp	x4, x5, [x29, #-96]
  416cc4:	stp	x6, x7, [x29, #-80]
  416cc8:	stp	q0, q1, [sp]
  416ccc:	ldp	q0, q1, [x29, #-32]
  416cd0:	sub	x4, x29, #0x40
  416cd4:	stp	q2, q3, [sp, #32]
  416cd8:	stp	q4, q5, [sp, #64]
  416cdc:	stp	q6, q7, [sp, #96]
  416ce0:	stp	q0, q1, [x29, #-64]
  416ce4:	bl	41697c <wcrtomb@plt+0x13d1c>
  416ce8:	ldp	x29, x30, [sp, #224]
  416cec:	add	sp, sp, #0xf0
  416cf0:	ret
  416cf4:	stp	x29, x30, [sp, #-16]!
  416cf8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  416cfc:	ldr	x1, [x8, #1272]
  416d00:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x11ae4>
  416d04:	add	x0, x0, #0x3e2
  416d08:	mov	x29, sp
  416d0c:	bl	402b50 <fputs_unlocked@plt>
  416d10:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416d14:	add	x1, x1, #0x526
  416d18:	mov	w2, #0x5                   	// #5
  416d1c:	mov	x0, xzr
  416d20:	bl	402b40 <dcgettext@plt>
  416d24:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  416d28:	mov	x1, x0
  416d2c:	add	x2, x2, #0x38b
  416d30:	mov	w0, #0x1                   	// #1
  416d34:	bl	4027e0 <__printf_chk@plt>
  416d38:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416d3c:	add	x1, x1, #0x53a
  416d40:	mov	w2, #0x5                   	// #5
  416d44:	mov	x0, xzr
  416d48:	bl	402b40 <dcgettext@plt>
  416d4c:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  416d50:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416d54:	mov	x1, x0
  416d58:	add	x2, x2, #0x26d
  416d5c:	add	x3, x3, #0x54e
  416d60:	mov	w0, #0x1                   	// #1
  416d64:	bl	4027e0 <__printf_chk@plt>
  416d68:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416d6c:	add	x1, x1, #0x570
  416d70:	mov	w2, #0x5                   	// #5
  416d74:	mov	x0, xzr
  416d78:	bl	402b40 <dcgettext@plt>
  416d7c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  416d80:	mov	x1, x0
  416d84:	add	x2, x2, #0x597
  416d88:	mov	w0, #0x1                   	// #1
  416d8c:	ldp	x29, x30, [sp], #16
  416d90:	b	4027e0 <__printf_chk@plt>
  416d94:	stp	x29, x30, [sp, #-32]!
  416d98:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  416d9c:	udiv	x8, x8, x1
  416da0:	cmp	x8, x0
  416da4:	str	x19, [sp, #16]
  416da8:	mov	x29, sp
  416dac:	b.cc	416dd0 <wcrtomb@plt+0x14170>  // b.lo, b.ul, b.last
  416db0:	mul	x19, x1, x0
  416db4:	mov	x0, x19
  416db8:	bl	402730 <malloc@plt>
  416dbc:	cbz	x19, 416dc4 <wcrtomb@plt+0x14164>
  416dc0:	cbz	x0, 416dd0 <wcrtomb@plt+0x14170>
  416dc4:	ldr	x19, [sp, #16]
  416dc8:	ldp	x29, x30, [sp], #32
  416dcc:	ret
  416dd0:	bl	4170f0 <wcrtomb@plt+0x14490>
  416dd4:	stp	x29, x30, [sp, #-32]!
  416dd8:	str	x19, [sp, #16]
  416ddc:	mov	x29, sp
  416de0:	mov	x19, x0
  416de4:	bl	402730 <malloc@plt>
  416de8:	cbz	x19, 416df0 <wcrtomb@plt+0x14190>
  416dec:	cbz	x0, 416dfc <wcrtomb@plt+0x1419c>
  416df0:	ldr	x19, [sp, #16]
  416df4:	ldp	x29, x30, [sp], #32
  416df8:	ret
  416dfc:	bl	4170f0 <wcrtomb@plt+0x14490>
  416e00:	stp	x29, x30, [sp, #-32]!
  416e04:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  416e08:	udiv	x8, x8, x2
  416e0c:	cmp	x8, x1
  416e10:	str	x19, [sp, #16]
  416e14:	mov	x29, sp
  416e18:	b.cc	416e50 <wcrtomb@plt+0x141f0>  // b.lo, b.ul, b.last
  416e1c:	mul	x19, x2, x1
  416e20:	cbz	x0, 416e34 <wcrtomb@plt+0x141d4>
  416e24:	cbnz	x19, 416e34 <wcrtomb@plt+0x141d4>
  416e28:	bl	402a10 <free@plt>
  416e2c:	mov	x0, xzr
  416e30:	b	416e44 <wcrtomb@plt+0x141e4>
  416e34:	mov	x1, x19
  416e38:	bl	402870 <realloc@plt>
  416e3c:	cbz	x19, 416e44 <wcrtomb@plt+0x141e4>
  416e40:	cbz	x0, 416e50 <wcrtomb@plt+0x141f0>
  416e44:	ldr	x19, [sp, #16]
  416e48:	ldp	x29, x30, [sp], #32
  416e4c:	ret
  416e50:	bl	4170f0 <wcrtomb@plt+0x14490>
  416e54:	stp	x29, x30, [sp, #-32]!
  416e58:	str	x19, [sp, #16]
  416e5c:	mov	x19, x1
  416e60:	mov	x29, sp
  416e64:	cbz	x0, 416e78 <wcrtomb@plt+0x14218>
  416e68:	cbnz	x19, 416e78 <wcrtomb@plt+0x14218>
  416e6c:	bl	402a10 <free@plt>
  416e70:	mov	x0, xzr
  416e74:	b	416e88 <wcrtomb@plt+0x14228>
  416e78:	mov	x1, x19
  416e7c:	bl	402870 <realloc@plt>
  416e80:	cbz	x19, 416e88 <wcrtomb@plt+0x14228>
  416e84:	cbz	x0, 416e94 <wcrtomb@plt+0x14234>
  416e88:	ldr	x19, [sp, #16]
  416e8c:	ldp	x29, x30, [sp], #32
  416e90:	ret
  416e94:	bl	4170f0 <wcrtomb@plt+0x14490>
  416e98:	stp	x29, x30, [sp, #-32]!
  416e9c:	ldr	x8, [x1]
  416ea0:	str	x19, [sp, #16]
  416ea4:	mov	x29, sp
  416ea8:	cbz	x0, 416eec <wcrtomb@plt+0x1428c>
  416eac:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  416eb0:	movk	x9, #0x5554
  416eb4:	udiv	x9, x9, x2
  416eb8:	cmp	x9, x8
  416ebc:	b.ls	416f28 <wcrtomb@plt+0x142c8>  // b.plast
  416ec0:	add	x8, x8, x8, lsr #1
  416ec4:	add	x9, x8, #0x1
  416ec8:	mul	x8, x9, x2
  416ecc:	str	x9, [x1]
  416ed0:	cbz	x8, 416f2c <wcrtomb@plt+0x142cc>
  416ed4:	mov	x1, x8
  416ed8:	bl	402870 <realloc@plt>
  416edc:	cbz	x0, 416f28 <wcrtomb@plt+0x142c8>
  416ee0:	ldr	x19, [sp, #16]
  416ee4:	ldp	x29, x30, [sp], #32
  416ee8:	ret
  416eec:	cbnz	x8, 416f00 <wcrtomb@plt+0x142a0>
  416ef0:	mov	w8, #0x80                  	// #128
  416ef4:	udiv	x8, x8, x2
  416ef8:	cmp	x2, #0x80
  416efc:	cinc	x8, x8, hi  // hi = pmore
  416f00:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416f04:	udiv	x9, x9, x2
  416f08:	cmp	x9, x8
  416f0c:	b.cc	416f28 <wcrtomb@plt+0x142c8>  // b.lo, b.ul, b.last
  416f10:	mul	x19, x8, x2
  416f14:	mov	x0, x19
  416f18:	str	x8, [x1]
  416f1c:	bl	402730 <malloc@plt>
  416f20:	cbz	x19, 416ee0 <wcrtomb@plt+0x14280>
  416f24:	cbnz	x0, 416ee0 <wcrtomb@plt+0x14280>
  416f28:	bl	4170f0 <wcrtomb@plt+0x14490>
  416f2c:	bl	402a10 <free@plt>
  416f30:	mov	x0, xzr
  416f34:	ldr	x19, [sp, #16]
  416f38:	ldp	x29, x30, [sp], #32
  416f3c:	ret
  416f40:	stp	x29, x30, [sp, #-32]!
  416f44:	str	x19, [sp, #16]
  416f48:	mov	x29, sp
  416f4c:	mov	x19, x0
  416f50:	bl	402730 <malloc@plt>
  416f54:	cbz	x19, 416f5c <wcrtomb@plt+0x142fc>
  416f58:	cbz	x0, 416f68 <wcrtomb@plt+0x14308>
  416f5c:	ldr	x19, [sp, #16]
  416f60:	ldp	x29, x30, [sp], #32
  416f64:	ret
  416f68:	bl	4170f0 <wcrtomb@plt+0x14490>
  416f6c:	stp	x29, x30, [sp, #-16]!
  416f70:	ldr	x8, [x1]
  416f74:	mov	x29, sp
  416f78:	cbz	x0, 416fac <wcrtomb@plt+0x1434c>
  416f7c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  416f80:	movk	x9, #0x5554
  416f84:	cmp	x8, x9
  416f88:	b.cs	416ff0 <wcrtomb@plt+0x14390>  // b.hs, b.nlast
  416f8c:	add	x8, x8, x8, lsr #1
  416f90:	adds	x8, x8, #0x1
  416f94:	str	x8, [x1]
  416f98:	b.eq	416fcc <wcrtomb@plt+0x1436c>  // b.none
  416f9c:	mov	x1, x8
  416fa0:	bl	402870 <realloc@plt>
  416fa4:	cbnz	x0, 416fc4 <wcrtomb@plt+0x14364>
  416fa8:	b	416ff0 <wcrtomb@plt+0x14390>
  416fac:	cbz	x8, 416fdc <wcrtomb@plt+0x1437c>
  416fb0:	tbnz	x8, #63, 416ff0 <wcrtomb@plt+0x14390>
  416fb4:	mov	x0, x8
  416fb8:	str	x8, [x1]
  416fbc:	bl	402730 <malloc@plt>
  416fc0:	cbz	x0, 416ff0 <wcrtomb@plt+0x14390>
  416fc4:	ldp	x29, x30, [sp], #16
  416fc8:	ret
  416fcc:	bl	402a10 <free@plt>
  416fd0:	mov	x0, xzr
  416fd4:	ldp	x29, x30, [sp], #16
  416fd8:	ret
  416fdc:	mov	w8, #0x80                  	// #128
  416fe0:	mov	x0, x8
  416fe4:	str	x8, [x1]
  416fe8:	bl	402730 <malloc@plt>
  416fec:	cbnz	x0, 416fc4 <wcrtomb@plt+0x14364>
  416ff0:	bl	4170f0 <wcrtomb@plt+0x14490>
  416ff4:	stp	x29, x30, [sp, #-16]!
  416ff8:	mov	x29, sp
  416ffc:	tbnz	x0, #63, 417014 <wcrtomb@plt+0x143b4>
  417000:	mov	w1, #0x1                   	// #1
  417004:	bl	402840 <calloc@plt>
  417008:	cbz	x0, 417014 <wcrtomb@plt+0x143b4>
  41700c:	ldp	x29, x30, [sp], #16
  417010:	ret
  417014:	bl	4170f0 <wcrtomb@plt+0x14490>
  417018:	stp	x29, x30, [sp, #-16]!
  41701c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  417020:	udiv	x8, x8, x1
  417024:	cmp	x8, x0
  417028:	mov	x29, sp
  41702c:	b.cc	417040 <wcrtomb@plt+0x143e0>  // b.lo, b.ul, b.last
  417030:	bl	402840 <calloc@plt>
  417034:	cbz	x0, 417040 <wcrtomb@plt+0x143e0>
  417038:	ldp	x29, x30, [sp], #16
  41703c:	ret
  417040:	bl	4170f0 <wcrtomb@plt+0x14490>
  417044:	stp	x29, x30, [sp, #-48]!
  417048:	stp	x20, x19, [sp, #32]
  41704c:	mov	x20, x0
  417050:	mov	x0, x1
  417054:	str	x21, [sp, #16]
  417058:	mov	x29, sp
  41705c:	mov	x19, x1
  417060:	bl	402730 <malloc@plt>
  417064:	mov	x21, x0
  417068:	cbz	x19, 417070 <wcrtomb@plt+0x14410>
  41706c:	cbz	x21, 417094 <wcrtomb@plt+0x14434>
  417070:	mov	x0, x21
  417074:	mov	x1, x20
  417078:	mov	x2, x19
  41707c:	bl	402580 <memcpy@plt>
  417080:	mov	x0, x21
  417084:	ldp	x20, x19, [sp, #32]
  417088:	ldr	x21, [sp, #16]
  41708c:	ldp	x29, x30, [sp], #48
  417090:	ret
  417094:	bl	4170f0 <wcrtomb@plt+0x14490>
  417098:	stp	x29, x30, [sp, #-48]!
  41709c:	str	x21, [sp, #16]
  4170a0:	stp	x20, x19, [sp, #32]
  4170a4:	mov	x29, sp
  4170a8:	mov	x19, x0
  4170ac:	bl	4025c0 <strlen@plt>
  4170b0:	add	x20, x0, #0x1
  4170b4:	mov	x0, x20
  4170b8:	bl	402730 <malloc@plt>
  4170bc:	mov	x21, x0
  4170c0:	cbz	x20, 4170c8 <wcrtomb@plt+0x14468>
  4170c4:	cbz	x21, 4170ec <wcrtomb@plt+0x1448c>
  4170c8:	mov	x0, x21
  4170cc:	mov	x1, x19
  4170d0:	mov	x2, x20
  4170d4:	bl	402580 <memcpy@plt>
  4170d8:	mov	x0, x21
  4170dc:	ldp	x20, x19, [sp, #32]
  4170e0:	ldr	x21, [sp, #16]
  4170e4:	ldp	x29, x30, [sp], #48
  4170e8:	ret
  4170ec:	bl	4170f0 <wcrtomb@plt+0x14490>
  4170f0:	stp	x29, x30, [sp, #-32]!
  4170f4:	str	x19, [sp, #16]
  4170f8:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4170fc:	ldr	w19, [x8, #1232]
  417100:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  417104:	add	x1, x1, #0x5e3
  417108:	mov	w2, #0x5                   	// #5
  41710c:	mov	x0, xzr
  417110:	mov	x29, sp
  417114:	bl	402b40 <dcgettext@plt>
  417118:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41711c:	mov	x3, x0
  417120:	add	x2, x2, #0xa81
  417124:	mov	w0, w19
  417128:	mov	w1, wzr
  41712c:	bl	402600 <error@plt>
  417130:	bl	402920 <abort@plt>
  417134:	sub	sp, sp, #0x40
  417138:	stp	x29, x30, [sp, #16]
  41713c:	add	x29, sp, #0x10
  417140:	cmp	x0, #0x0
  417144:	sub	x8, x29, #0x4
  417148:	stp	x20, x19, [sp, #48]
  41714c:	csel	x20, x8, x0, eq  // eq = none
  417150:	mov	x0, x20
  417154:	stp	x22, x21, [sp, #32]
  417158:	mov	x22, x2
  41715c:	mov	x19, x1
  417160:	bl	402570 <mbrtowc@plt>
  417164:	mov	x21, x0
  417168:	cbz	x22, 41718c <wcrtomb@plt+0x1452c>
  41716c:	cmn	x21, #0x2
  417170:	b.cc	41718c <wcrtomb@plt+0x1452c>  // b.lo, b.ul, b.last
  417174:	mov	w0, wzr
  417178:	bl	427f68 <_obstack_memory_used@@Base+0x10a4c>
  41717c:	tbnz	w0, #0, 41718c <wcrtomb@plt+0x1452c>
  417180:	ldrb	w8, [x19]
  417184:	mov	w21, #0x1                   	// #1
  417188:	str	w8, [x20]
  41718c:	mov	x0, x21
  417190:	ldp	x20, x19, [sp, #48]
  417194:	ldp	x22, x21, [sp, #32]
  417198:	ldp	x29, x30, [sp, #16]
  41719c:	add	sp, sp, #0x40
  4171a0:	ret

00000000004171a4 <_obstack_begin@@Base>:
  4171a4:	stp	x29, x30, [sp, #-48]!
  4171a8:	stp	x20, x19, [sp, #32]
  4171ac:	ldrb	w8, [x0, #80]
  4171b0:	cmp	x2, #0x0
  4171b4:	mov	w9, #0x10                  	// #16
  4171b8:	csel	x20, x9, x2, eq  // eq = none
  4171bc:	mov	w9, #0xfe0                 	// #4064
  4171c0:	cmp	x1, #0x0
  4171c4:	str	x21, [sp, #16]
  4171c8:	mov	x19, x0
  4171cc:	str	x4, [x0, #64]
  4171d0:	csel	x0, x9, x1, eq  // eq = none
  4171d4:	and	w8, w8, #0xfe
  4171d8:	sub	x21, x20, #0x1
  4171dc:	mov	x29, sp
  4171e0:	strb	w8, [x19, #80]
  4171e4:	str	x0, [x19]
  4171e8:	stp	x21, x3, [x19, #48]
  4171ec:	blr	x3
  4171f0:	str	x0, [x19, #8]
  4171f4:	cbz	x0, 417240 <_obstack_begin@@Base+0x9c>
  4171f8:	ldr	x10, [x19]
  4171fc:	add	x8, x0, x21
  417200:	neg	x9, x20
  417204:	add	x8, x8, #0x10
  417208:	and	x8, x8, x9
  41720c:	stp	x8, x8, [x19, #16]
  417210:	add	x8, x0, x10
  417214:	str	x8, [x0]
  417218:	str	x8, [x19, #32]
  41721c:	str	xzr, [x0, #8]
  417220:	ldrb	w8, [x19, #80]
  417224:	ldr	x21, [sp, #16]
  417228:	mov	w0, #0x1                   	// #1
  41722c:	and	w8, w8, #0xfffffff9
  417230:	strb	w8, [x19, #80]
  417234:	ldp	x20, x19, [sp, #32]
  417238:	ldp	x29, x30, [sp], #48
  41723c:	ret
  417240:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  417244:	ldr	x8, [x8, #1224]
  417248:	blr	x8

000000000041724c <_obstack_begin_1@@Base>:
  41724c:	stp	x29, x30, [sp, #-48]!
  417250:	stp	x20, x19, [sp, #32]
  417254:	ldrb	w8, [x0, #80]
  417258:	cmp	x2, #0x0
  41725c:	mov	w9, #0x10                  	// #16
  417260:	csel	x20, x9, x2, eq  // eq = none
  417264:	mov	w9, #0xfe0                 	// #4064
  417268:	cmp	x1, #0x0
  41726c:	str	x21, [sp, #16]
  417270:	csel	x1, x9, x1, eq  // eq = none
  417274:	orr	w8, w8, #0x1
  417278:	sub	x21, x20, #0x1
  41727c:	mov	x19, x0
  417280:	stp	x4, x5, [x0, #64]
  417284:	strb	w8, [x0, #80]
  417288:	str	x1, [x0]
  41728c:	stp	x21, x3, [x0, #48]
  417290:	mov	x0, x5
  417294:	mov	x29, sp
  417298:	blr	x3
  41729c:	str	x0, [x19, #8]
  4172a0:	cbz	x0, 4172ec <_obstack_begin_1@@Base+0xa0>
  4172a4:	ldr	x10, [x19]
  4172a8:	add	x8, x0, x21
  4172ac:	neg	x9, x20
  4172b0:	add	x8, x8, #0x10
  4172b4:	and	x8, x8, x9
  4172b8:	stp	x8, x8, [x19, #16]
  4172bc:	add	x8, x0, x10
  4172c0:	str	x8, [x0]
  4172c4:	str	x8, [x19, #32]
  4172c8:	str	xzr, [x0, #8]
  4172cc:	ldrb	w8, [x19, #80]
  4172d0:	ldr	x21, [sp, #16]
  4172d4:	mov	w0, #0x1                   	// #1
  4172d8:	and	w8, w8, #0xfffffff9
  4172dc:	strb	w8, [x19, #80]
  4172e0:	ldp	x20, x19, [sp, #32]
  4172e4:	ldp	x29, x30, [sp], #48
  4172e8:	ret
  4172ec:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4172f0:	ldr	x8, [x8, #1224]
  4172f4:	blr	x8

00000000004172f8 <_obstack_newchunk@@Base>:
  4172f8:	stp	x29, x30, [sp, #-64]!
  4172fc:	str	x23, [sp, #16]
  417300:	stp	x22, x21, [sp, #32]
  417304:	stp	x20, x19, [sp, #48]
  417308:	ldp	x9, x8, [x0, #16]
  41730c:	ldr	x10, [x0, #48]
  417310:	ldr	x11, [x0]
  417314:	mov	x29, sp
  417318:	sub	x20, x8, x9
  41731c:	adds	x8, x20, x1
  417320:	lsr	x9, x20, #3
  417324:	cset	w12, cs  // cs = hs, nlast
  417328:	adds	x10, x8, x10
  41732c:	add	x9, x9, #0x64
  417330:	cset	w8, cs  // cs = hs, nlast
  417334:	adds	x9, x9, x10
  417338:	csel	x9, x10, x9, cs  // cs = hs, nlast
  41733c:	cmp	x9, x11
  417340:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  417344:	tbnz	w12, #0, 417430 <_obstack_newchunk@@Base+0x138>
  417348:	tbnz	w8, #0, 417430 <_obstack_newchunk@@Base+0x138>
  41734c:	ldrb	w8, [x0, #80]
  417350:	ldr	x21, [x0, #8]
  417354:	mov	x19, x0
  417358:	tbnz	w8, #0, 41736c <_obstack_newchunk@@Base+0x74>
  41735c:	ldr	x8, [x19, #56]
  417360:	mov	x0, x23
  417364:	blr	x8
  417368:	b	41737c <_obstack_newchunk@@Base+0x84>
  41736c:	ldr	x8, [x19, #56]
  417370:	ldr	x0, [x19, #72]
  417374:	mov	x1, x23
  417378:	blr	x8
  41737c:	mov	x22, x0
  417380:	cbz	x0, 417430 <_obstack_newchunk@@Base+0x138>
  417384:	add	x8, x22, x23
  417388:	str	x22, [x19, #8]
  41738c:	str	x21, [x22, #8]
  417390:	str	x8, [x19, #32]
  417394:	str	x8, [x22]
  417398:	ldr	x8, [x19, #48]
  41739c:	ldr	x1, [x19, #16]
  4173a0:	mov	x2, x20
  4173a4:	add	x9, x22, x8
  4173a8:	add	x9, x9, #0x10
  4173ac:	bic	x23, x9, x8
  4173b0:	mov	x0, x23
  4173b4:	bl	402580 <memcpy@plt>
  4173b8:	ldrb	w8, [x19, #80]
  4173bc:	tbnz	w8, #1, 417408 <_obstack_newchunk@@Base+0x110>
  4173c0:	ldr	x8, [x19, #48]
  4173c4:	ldr	x9, [x19, #16]
  4173c8:	add	x10, x21, x8
  4173cc:	add	x10, x10, #0x10
  4173d0:	bic	x8, x10, x8
  4173d4:	cmp	x9, x8
  4173d8:	b.ne	417408 <_obstack_newchunk@@Base+0x110>  // b.any
  4173dc:	ldr	x8, [x21, #8]
  4173e0:	str	x8, [x22, #8]
  4173e4:	ldrb	w8, [x19, #80]
  4173e8:	tbnz	w8, #0, 4173fc <_obstack_newchunk@@Base+0x104>
  4173ec:	ldr	x8, [x19, #64]
  4173f0:	mov	x0, x21
  4173f4:	blr	x8
  4173f8:	b	417408 <_obstack_newchunk@@Base+0x110>
  4173fc:	ldp	x8, x0, [x19, #64]
  417400:	mov	x1, x21
  417404:	blr	x8
  417408:	ldrb	w8, [x19, #80]
  41740c:	add	x9, x23, x20
  417410:	stp	x23, x9, [x19, #16]
  417414:	ldr	x23, [sp, #16]
  417418:	and	w8, w8, #0xfffffffd
  41741c:	strb	w8, [x19, #80]
  417420:	ldp	x20, x19, [sp, #48]
  417424:	ldp	x22, x21, [sp, #32]
  417428:	ldp	x29, x30, [sp], #64
  41742c:	ret
  417430:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  417434:	ldr	x8, [x8, #1224]
  417438:	blr	x8

000000000041743c <_obstack_allocated_p@@Base>:
  41743c:	ldr	x8, [x0, #8]
  417440:	cbnz	x8, 417454 <_obstack_allocated_p@@Base+0x18>
  417444:	mov	w0, wzr
  417448:	ret
  41744c:	ldr	x8, [x8, #8]
  417450:	cbz	x8, 417444 <_obstack_allocated_p@@Base+0x8>
  417454:	cmp	x8, x1
  417458:	b.cs	41744c <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  41745c:	ldr	x9, [x8]
  417460:	cmp	x9, x1
  417464:	b.cc	41744c <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  417468:	mov	w0, #0x1                   	// #1
  41746c:	ret

0000000000417470 <_obstack_free@@Base>:
  417470:	stp	x29, x30, [sp, #-48]!
  417474:	stp	x20, x19, [sp, #32]
  417478:	ldr	x8, [x0, #8]
  41747c:	mov	x20, x1
  417480:	str	x21, [sp, #16]
  417484:	mov	x29, sp
  417488:	cbz	x8, 4174e4 <_obstack_free@@Base+0x74>
  41748c:	mov	x19, x0
  417490:	b	4174b4 <_obstack_free@@Base+0x44>
  417494:	ldr	x9, [x19, #64]
  417498:	mov	x0, x8
  41749c:	blr	x9
  4174a0:	ldrb	w8, [x19, #80]
  4174a4:	orr	w8, w8, #0x2
  4174a8:	strb	w8, [x19, #80]
  4174ac:	mov	x8, x21
  4174b0:	cbz	x21, 4174e4 <_obstack_free@@Base+0x74>
  4174b4:	cmp	x8, x20
  4174b8:	b.cs	4174c8 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  4174bc:	ldr	x9, [x8]
  4174c0:	cmp	x9, x20
  4174c4:	b.cs	4174f8 <_obstack_free@@Base+0x88>  // b.hs, b.nlast
  4174c8:	ldrb	w9, [x19, #80]
  4174cc:	ldr	x21, [x8, #8]
  4174d0:	tbz	w9, #0, 417494 <_obstack_free@@Base+0x24>
  4174d4:	ldp	x9, x0, [x19, #64]
  4174d8:	mov	x1, x8
  4174dc:	blr	x9
  4174e0:	b	4174a0 <_obstack_free@@Base+0x30>
  4174e4:	cbnz	x20, 417518 <_obstack_free@@Base+0xa8>
  4174e8:	ldp	x20, x19, [sp, #32]
  4174ec:	ldr	x21, [sp, #16]
  4174f0:	ldp	x29, x30, [sp], #48
  4174f4:	ret
  4174f8:	stp	x20, x20, [x19, #16]
  4174fc:	ldr	x9, [x8]
  417500:	str	x8, [x19, #8]
  417504:	str	x9, [x19, #32]
  417508:	ldp	x20, x19, [sp, #32]
  41750c:	ldr	x21, [sp, #16]
  417510:	ldp	x29, x30, [sp], #48
  417514:	ret
  417518:	bl	402920 <abort@plt>

000000000041751c <_obstack_memory_used@@Base>:
  41751c:	ldr	x8, [x0, #8]
  417520:	cbz	x8, 41753c <_obstack_memory_used@@Base+0x20>
  417524:	mov	x0, xzr
  417528:	sub	x10, x0, x8
  41752c:	ldp	x9, x8, [x8]
  417530:	add	x0, x10, x9
  417534:	cbnz	x8, 417528 <_obstack_memory_used@@Base+0xc>
  417538:	ret
  41753c:	mov	x0, xzr
  417540:	ret
  417544:	stp	x29, x30, [sp, #-32]!
  417548:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  41754c:	str	x19, [sp, #16]
  417550:	ldr	x19, [x8, #1248]
  417554:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  417558:	add	x1, x1, #0x5e3
  41755c:	mov	w2, #0x5                   	// #5
  417560:	mov	x0, xzr
  417564:	mov	x29, sp
  417568:	bl	402b40 <dcgettext@plt>
  41756c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  417570:	mov	x3, x0
  417574:	add	x2, x2, #0x2cf
  417578:	mov	w1, #0x1                   	// #1
  41757c:	mov	x0, x19
  417580:	bl	4029c0 <__fprintf_chk@plt>
  417584:	adrp	x8, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  417588:	ldr	w0, [x8, #1232]
  41758c:	bl	4025f0 <exit@plt>
  417590:	stp	x29, x30, [sp, #-16]!
  417594:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  417598:	ldr	x3, [x9, #3552]
  41759c:	ldrb	w9, [x2, #56]
  4175a0:	mov	x8, x1
  4175a4:	mov	x1, x0
  4175a8:	ubfx	x10, x3, #21, #11
  4175ac:	and	w10, w10, #0x10
  4175b0:	and	w9, w9, #0xffffffef
  4175b4:	orr	w9, w9, w10
  4175b8:	orr	w9, w9, #0x80
  4175bc:	strb	w9, [x2, #56]
  4175c0:	mov	x0, x2
  4175c4:	mov	x2, x8
  4175c8:	mov	x29, sp
  4175cc:	bl	417608 <_obstack_memory_used@@Base+0xec>
  4175d0:	cbz	w0, 4175fc <_obstack_memory_used@@Base+0xe0>
  4175d4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4175d8:	add	x8, x8, #0x8f8
  4175dc:	ldr	x8, [x8, w0, sxtw #3]
  4175e0:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4175e4:	add	x9, x9, #0x775
  4175e8:	mov	w2, #0x5                   	// #5
  4175ec:	add	x1, x9, x8
  4175f0:	mov	x0, xzr
  4175f4:	ldp	x29, x30, [sp], #16
  4175f8:	b	402b40 <dcgettext@plt>
  4175fc:	mov	x0, xzr
  417600:	ldp	x29, x30, [sp], #16
  417604:	ret
  417608:	sub	sp, sp, #0x130
  41760c:	stp	x29, x30, [sp, #208]
  417610:	add	x29, sp, #0xd0
  417614:	stp	x28, x27, [sp, #224]
  417618:	stp	x26, x25, [sp, #240]
  41761c:	stp	x24, x23, [sp, #256]
  417620:	stp	x22, x21, [sp, #272]
  417624:	stp	x20, x19, [sp, #288]
  417628:	stur	wzr, [x29, #-44]
  41762c:	ldrb	w8, [x0, #56]
  417630:	ldp	x20, x9, [x0]
  417634:	mov	w10, #0x90                  	// #144
  417638:	mov	x21, x3
  41763c:	mov	x22, x2
  417640:	mov	x23, x1
  417644:	mov	x19, x0
  417648:	and	w8, w8, w10
  41764c:	cmp	x9, #0xe7
  417650:	stp	xzr, x3, [x0, #16]
  417654:	str	xzr, [x0, #48]
  417658:	strb	w8, [x0, #56]
  41765c:	b.ls	417d78 <_obstack_memory_used@@Base+0x85c>  // b.plast
  417660:	mov	w8, #0xe8                  	// #232
  417664:	str	x8, [x19, #16]
  417668:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41766c:	movk	x8, #0x5554
  417670:	movk	x8, #0x555, lsl #48
  417674:	movi	v0.2d, #0x0
  417678:	cmp	x22, x8
  41767c:	mov	w8, #0xf                   	// #15
  417680:	str	xzr, [x20, #224]
  417684:	stp	q0, q0, [x20, #192]
  417688:	stp	q0, q0, [x20, #160]
  41768c:	stp	q0, q0, [x20, #128]
  417690:	stp	q0, q0, [x20, #96]
  417694:	stp	q0, q0, [x20, #64]
  417698:	stp	q0, q0, [x20, #32]
  41769c:	stp	q0, q0, [x20]
  4176a0:	str	w8, [x20, #128]
  4176a4:	b.hi	4178a0 <_obstack_memory_used@@Base+0x384>  // b.pmore
  4176a8:	add	x24, x22, #0x1
  4176ac:	lsl	x0, x24, #4
  4176b0:	str	x24, [x20, #8]
  4176b4:	bl	402730 <malloc@plt>
  4176b8:	mov	w8, #0x1                   	// #1
  4176bc:	str	x0, [x20]
  4176c0:	mov	x25, x8
  4176c4:	cmp	x8, x22
  4176c8:	lsl	x8, x8, #1
  4176cc:	b.ls	4176c0 <_obstack_memory_used@@Base+0x1a4>  // b.plast
  4176d0:	mov	w0, #0x18                  	// #24
  4176d4:	mov	x1, x25
  4176d8:	bl	402840 <calloc@plt>
  4176dc:	sub	x8, x25, #0x1
  4176e0:	str	x0, [x20, #64]
  4176e4:	str	x8, [x20, #136]
  4176e8:	bl	402a30 <__ctype_get_mb_cur_max@plt>
  4176ec:	str	w0, [x20, #180]
  4176f0:	mov	w0, #0xe                   	// #14
  4176f4:	bl	4026f0 <nl_langinfo@plt>
  4176f8:	ldrb	w8, [x0]
  4176fc:	orr	w8, w8, #0x20
  417700:	cmp	w8, #0x75
  417704:	b.ne	417750 <_obstack_memory_used@@Base+0x234>  // b.any
  417708:	ldrb	w8, [x0, #1]
  41770c:	orr	w8, w8, #0x20
  417710:	cmp	w8, #0x74
  417714:	b.ne	417750 <_obstack_memory_used@@Base+0x234>  // b.any
  417718:	ldrb	w8, [x0, #2]
  41771c:	orr	w8, w8, #0x20
  417720:	cmp	w8, #0x66
  417724:	b.ne	417750 <_obstack_memory_used@@Base+0x234>  // b.any
  417728:	ldrb	w8, [x0, #3]!
  41772c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x10ae4>
  417730:	add	x1, x1, #0xdff
  417734:	cmp	w8, #0x2d
  417738:	cinc	x0, x0, eq  // eq = none
  41773c:	bl	4029d0 <strcmp@plt>
  417740:	cbnz	w0, 417750 <_obstack_memory_used@@Base+0x234>
  417744:	ldrb	w8, [x20, #176]
  417748:	orr	w8, w8, #0x4
  41774c:	strb	w8, [x20, #176]
  417750:	ldrb	w8, [x20, #176]
  417754:	ldr	w9, [x20, #180]
  417758:	and	w10, w8, #0xfffffff7
  41775c:	cmp	w9, #0x2
  417760:	strb	w10, [x20, #176]
  417764:	b.lt	4177e0 <_obstack_memory_used@@Base+0x2c4>  // b.tstop
  417768:	tbnz	w8, #2, 4177d4 <_obstack_memory_used@@Base+0x2b8>
  41776c:	mov	w0, #0x20                  	// #32
  417770:	mov	w1, #0x1                   	// #1
  417774:	bl	402840 <calloc@plt>
  417778:	str	x0, [x20, #120]
  41777c:	cbz	x0, 4178a0 <_obstack_memory_used@@Base+0x384>
  417780:	mov	x25, xzr
  417784:	mov	w26, #0x1                   	// #1
  417788:	b	417798 <_obstack_memory_used@@Base+0x27c>
  41778c:	add	x25, x25, #0x1
  417790:	cmp	x25, #0x40
  417794:	b.eq	4178b8 <_obstack_memory_used@@Base+0x39c>  // b.none
  417798:	mov	w0, w25
  41779c:	bl	402910 <btowc@plt>
  4177a0:	cmn	w0, #0x1
  4177a4:	b.eq	4177bc <_obstack_memory_used@@Base+0x2a0>  // b.none
  4177a8:	ldr	x8, [x20, #120]
  4177ac:	lsl	x10, x26, x25
  4177b0:	ldr	x9, [x8]
  4177b4:	orr	x9, x9, x10
  4177b8:	str	x9, [x8]
  4177bc:	cmp	w25, w0
  4177c0:	b.eq	41778c <_obstack_memory_used@@Base+0x270>  // b.none
  4177c4:	ldrb	w8, [x20, #176]
  4177c8:	orr	w8, w8, #0x8
  4177cc:	strb	w8, [x20, #176]
  4177d0:	b	41778c <_obstack_memory_used@@Base+0x270>
  4177d4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4177d8:	add	x8, x8, #0x980
  4177dc:	str	x8, [x20, #120]
  4177e0:	ldr	x8, [x20]
  4177e4:	cbz	x8, 4178a0 <_obstack_memory_used@@Base+0x384>
  4177e8:	ldr	x8, [x20, #64]
  4177ec:	cbz	x8, 4178a0 <_obstack_memory_used@@Base+0x384>
  4177f0:	stur	wzr, [x29, #-44]
  4177f4:	ldr	x26, [x19, #40]
  4177f8:	and	x25, x21, #0x400000
  4177fc:	movi	v0.2d, #0x0
  417800:	ubfx	x8, x21, #22, #1
  417804:	stp	q0, q0, [sp, #128]
  417808:	strb	w8, [sp, #144]
  41780c:	orr	x8, x25, x26
  417810:	cmp	x8, #0x0
  417814:	cset	w27, ne  // ne = any
  417818:	stp	q0, q0, [sp, #80]
  41781c:	stur	q0, [sp, #112]
  417820:	stp	q0, q0, [sp, #48]
  417824:	stp	q0, q0, [sp, #16]
  417828:	str	x23, [sp, #8]
  41782c:	stp	x22, x22, [sp, #88]
  417830:	str	x26, [sp, #128]
  417834:	strb	w27, [sp, #147]
  417838:	ldr	w8, [x20, #180]
  41783c:	cmp	x22, #0x1
  417840:	str	w8, [sp, #152]
  417844:	ldrb	w9, [x20, #176]
  417848:	stp	x22, x22, [sp, #104]
  41784c:	ubfx	w10, w9, #2, #1
  417850:	ubfx	w9, w9, #3, #1
  417854:	strb	w10, [sp, #145]
  417858:	strb	w9, [sp, #146]
  41785c:	b.lt	4179d0 <_obstack_memory_used@@Base+0x4b4>  // b.tstop
  417860:	cmp	w8, #0x2
  417864:	b.lt	417884 <_obstack_memory_used@@Base+0x368>  // b.tstop
  417868:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  41786c:	cmp	x22, x8
  417870:	b.hi	417e6c <_obstack_memory_used@@Base+0x950>  // b.pmore
  417874:	lsl	x0, x24, #2
  417878:	bl	402730 <malloc@plt>
  41787c:	cbz	x0, 417e6c <_obstack_memory_used@@Base+0x950>
  417880:	str	x0, [sp, #24]
  417884:	cbz	w27, 4179dc <_obstack_memory_used@@Base+0x4c0>
  417888:	mov	x0, x24
  41788c:	bl	402730 <malloc@plt>
  417890:	cbz	x0, 417e6c <_obstack_memory_used@@Base+0x950>
  417894:	mov	w27, #0x1                   	// #1
  417898:	str	x0, [sp, #16]
  41789c:	b	4179e0 <_obstack_memory_used@@Base+0x4c4>
  4178a0:	mov	w21, #0xc                   	// #12
  4178a4:	mov	x0, x20
  4178a8:	stur	w21, [x29, #-44]
  4178ac:	bl	41927c <_obstack_memory_used@@Base+0x1d60>
  4178b0:	stp	xzr, xzr, [x19]
  4178b4:	b	4187fc <_obstack_memory_used@@Base+0x12e0>
  4178b8:	mov	x26, xzr
  4178bc:	mov	w27, #0x1                   	// #1
  4178c0:	b	4178d0 <_obstack_memory_used@@Base+0x3b4>
  4178c4:	add	x26, x26, #0x1
  4178c8:	cmp	x26, #0x40
  4178cc:	b.eq	417910 <_obstack_memory_used@@Base+0x3f4>  // b.none
  4178d0:	add	x25, x26, #0x40
  4178d4:	mov	w0, w25
  4178d8:	bl	402910 <btowc@plt>
  4178dc:	cmn	w0, #0x1
  4178e0:	b.eq	4178f8 <_obstack_memory_used@@Base+0x3dc>  // b.none
  4178e4:	ldr	x8, [x20, #120]
  4178e8:	lsl	x10, x27, x26
  4178ec:	ldr	x9, [x8, #8]
  4178f0:	orr	x9, x9, x10
  4178f4:	str	x9, [x8, #8]
  4178f8:	cmp	w25, w0
  4178fc:	b.eq	4178c4 <_obstack_memory_used@@Base+0x3a8>  // b.none
  417900:	ldrb	w8, [x20, #176]
  417904:	orr	w8, w8, #0x8
  417908:	strb	w8, [x20, #176]
  41790c:	b	4178c4 <_obstack_memory_used@@Base+0x3a8>
  417910:	mov	x26, xzr
  417914:	mov	w27, #0x1                   	// #1
  417918:	b	417928 <_obstack_memory_used@@Base+0x40c>
  41791c:	add	x26, x26, #0x1
  417920:	cmp	x26, #0x40
  417924:	b.eq	417970 <_obstack_memory_used@@Base+0x454>  // b.none
  417928:	add	x25, x26, #0x80
  41792c:	mov	w0, w25
  417930:	bl	402910 <btowc@plt>
  417934:	cmn	w0, #0x1
  417938:	b.eq	417950 <_obstack_memory_used@@Base+0x434>  // b.none
  41793c:	ldr	x8, [x20, #120]
  417940:	lsl	x10, x27, x26
  417944:	ldr	x9, [x8, #16]
  417948:	orr	x9, x9, x10
  41794c:	str	x9, [x8, #16]
  417950:	cmp	w25, #0x7f
  417954:	b.hi	41791c <_obstack_memory_used@@Base+0x400>  // b.pmore
  417958:	cmp	w25, w0
  41795c:	b.eq	41791c <_obstack_memory_used@@Base+0x400>  // b.none
  417960:	ldrb	w8, [x20, #176]
  417964:	orr	w8, w8, #0x8
  417968:	strb	w8, [x20, #176]
  41796c:	b	41791c <_obstack_memory_used@@Base+0x400>
  417970:	mov	x26, xzr
  417974:	mov	w27, #0x1                   	// #1
  417978:	b	417988 <_obstack_memory_used@@Base+0x46c>
  41797c:	add	x26, x26, #0x1
  417980:	cmp	x26, #0x40
  417984:	b.eq	4177e0 <_obstack_memory_used@@Base+0x2c4>  // b.none
  417988:	add	x25, x26, #0xc0
  41798c:	mov	w0, w25
  417990:	bl	402910 <btowc@plt>
  417994:	cmn	w0, #0x1
  417998:	b.eq	4179b0 <_obstack_memory_used@@Base+0x494>  // b.none
  41799c:	ldr	x8, [x20, #120]
  4179a0:	lsl	x10, x27, x26
  4179a4:	ldr	x9, [x8, #24]
  4179a8:	orr	x9, x9, x10
  4179ac:	str	x9, [x8, #24]
  4179b0:	cmp	w25, #0x7f
  4179b4:	b.hi	41797c <_obstack_memory_used@@Base+0x460>  // b.pmore
  4179b8:	cmp	w25, w0
  4179bc:	b.eq	41797c <_obstack_memory_used@@Base+0x460>  // b.none
  4179c0:	ldrb	w8, [x20, #176]
  4179c4:	orr	w8, w8, #0x8
  4179c8:	strb	w8, [x20, #176]
  4179cc:	b	41797c <_obstack_memory_used@@Base+0x460>
  4179d0:	mov	x24, xzr
  4179d4:	mov	x0, xzr
  4179d8:	b	4179e8 <_obstack_memory_used@@Base+0x4cc>
  4179dc:	mov	x0, xzr
  4179e0:	str	x24, [sp, #72]
  4179e4:	ldr	w8, [x20, #180]
  4179e8:	cmp	w27, #0x0
  4179ec:	csel	x9, x23, x0, eq  // eq = none
  4179f0:	cmp	w8, #0x2
  4179f4:	str	x9, [sp, #16]
  4179f8:	cbz	x25, 417b04 <_obstack_memory_used@@Base+0x5e8>
  4179fc:	b.ge	417a70 <_obstack_memory_used@@Base+0x554>  // b.tcont
  417a00:	cmp	x24, x22
  417a04:	csel	x22, x22, x24, gt
  417a08:	cmp	x22, #0x1
  417a0c:	b.lt	417b44 <_obstack_memory_used@@Base+0x628>  // b.tstop
  417a10:	bl	402880 <__ctype_toupper_loc@plt>
  417a14:	mov	x9, xzr
  417a18:	mov	x8, xzr
  417a1c:	add	x9, x23, x9
  417a20:	ldrb	w9, [x9, x8]
  417a24:	cbz	x26, 417a48 <_obstack_memory_used@@Base+0x52c>
  417a28:	b	417a44 <_obstack_memory_used@@Base+0x528>
  417a2c:	ldr	x23, [sp, #8]
  417a30:	ldr	x9, [sp, #48]
  417a34:	ldr	x26, [sp, #128]
  417a38:	add	x9, x23, x9
  417a3c:	ldrb	w9, [x9, x8]
  417a40:	cbz	x26, 417a48 <_obstack_memory_used@@Base+0x52c>
  417a44:	ldrb	w9, [x26, x9]
  417a48:	ldr	x10, [x0]
  417a4c:	ldr	x11, [sp, #16]
  417a50:	ldr	w9, [x10, w9, uxtw #2]
  417a54:	strb	w9, [x11, x8]
  417a58:	add	x8, x8, #0x1
  417a5c:	cmp	x8, x22
  417a60:	b.lt	417a2c <_obstack_memory_used@@Base+0x510>  // b.tstop
  417a64:	b	417b48 <_obstack_memory_used@@Base+0x62c>
  417a68:	str	x0, [sp, #16]
  417a6c:	str	x23, [sp, #72]
  417a70:	add	x0, sp, #0x8
  417a74:	bl	41c040 <_obstack_memory_used@@Base+0x4b24>
  417a78:	cbnz	w0, 417e70 <_obstack_memory_used@@Base+0x954>
  417a7c:	ldr	x8, [sp, #64]
  417a80:	cmp	x8, x22
  417a84:	b.ge	417ba8 <_obstack_memory_used@@Base+0x68c>  // b.tcont
  417a88:	ldr	x8, [sp, #56]
  417a8c:	ldrsw	x9, [x20, #180]
  417a90:	ldr	x24, [sp, #72]
  417a94:	add	x8, x8, x9
  417a98:	cmp	x24, x8
  417a9c:	b.gt	417ba8 <_obstack_memory_used@@Base+0x68c>
  417aa0:	ldr	w8, [sp, #152]
  417aa4:	lsl	x23, x24, #1
  417aa8:	cmp	w8, #0x2
  417aac:	b.lt	417ae8 <_obstack_memory_used@@Base+0x5cc>  // b.tstop
  417ab0:	lsr	x8, x23, #61
  417ab4:	cbnz	x8, 417e6c <_obstack_memory_used@@Base+0x950>
  417ab8:	ldr	x0, [sp, #24]
  417abc:	lsl	x1, x24, #3
  417ac0:	bl	402870 <realloc@plt>
  417ac4:	cbz	x0, 417e6c <_obstack_memory_used@@Base+0x950>
  417ac8:	mov	x8, x0
  417acc:	ldr	x0, [sp, #32]
  417ad0:	str	x8, [sp, #24]
  417ad4:	cbz	x0, 417ae8 <_obstack_memory_used@@Base+0x5cc>
  417ad8:	lsl	x1, x24, #4
  417adc:	bl	402870 <realloc@plt>
  417ae0:	cbz	x0, 417e6c <_obstack_memory_used@@Base+0x950>
  417ae4:	str	x0, [sp, #32]
  417ae8:	ldrb	w8, [sp, #147]
  417aec:	cbz	w8, 417a6c <_obstack_memory_used@@Base+0x550>
  417af0:	ldr	x0, [sp, #16]
  417af4:	mov	x1, x23
  417af8:	bl	402870 <realloc@plt>
  417afc:	cbnz	x0, 417a68 <_obstack_memory_used@@Base+0x54c>
  417b00:	b	417e6c <_obstack_memory_used@@Base+0x950>
  417b04:	b.lt	417b14 <_obstack_memory_used@@Base+0x5f8>  // b.tstop
  417b08:	add	x0, sp, #0x8
  417b0c:	bl	41c708 <_obstack_memory_used@@Base+0x51ec>
  417b10:	b	417ba8 <_obstack_memory_used@@Base+0x68c>
  417b14:	cbz	x26, 417b50 <_obstack_memory_used@@Base+0x634>
  417b18:	cmp	x24, x22
  417b1c:	csel	x8, x22, x24, gt
  417b20:	cmp	x8, #0x1
  417b24:	b.lt	417b58 <_obstack_memory_used@@Base+0x63c>  // b.tstop
  417b28:	ldrb	w10, [x23]
  417b2c:	cmp	x8, #0x1
  417b30:	ldrb	w10, [x26, x10]
  417b34:	strb	w10, [x9]
  417b38:	b.ne	417b60 <_obstack_memory_used@@Base+0x644>  // b.any
  417b3c:	mov	w9, #0x1                   	// #1
  417b40:	b	417ba4 <_obstack_memory_used@@Base+0x688>
  417b44:	mov	x8, xzr
  417b48:	stp	x8, x8, [sp, #56]
  417b4c:	b	417ba8 <_obstack_memory_used@@Base+0x68c>
  417b50:	stp	x24, x24, [sp, #56]
  417b54:	b	417ba8 <_obstack_memory_used@@Base+0x68c>
  417b58:	mov	x9, xzr
  417b5c:	b	417ba4 <_obstack_memory_used@@Base+0x688>
  417b60:	ldrb	w10, [x23, #1]
  417b64:	cmp	x8, #0x3
  417b68:	ldrb	w10, [x26, x10]
  417b6c:	strb	w10, [x9, #1]
  417b70:	mov	w9, #0x2                   	// #2
  417b74:	b.lt	417ba4 <_obstack_memory_used@@Base+0x688>  // b.tstop
  417b78:	ldr	x10, [sp, #8]
  417b7c:	ldr	x11, [sp, #48]
  417b80:	ldr	x12, [sp, #128]
  417b84:	add	x10, x10, x11
  417b88:	ldrb	w10, [x10, x9]
  417b8c:	ldr	x11, [sp, #16]
  417b90:	ldrb	w10, [x12, x10]
  417b94:	strb	w10, [x11, x9]
  417b98:	add	x9, x9, #0x1
  417b9c:	cmp	x9, x8
  417ba0:	b.lt	417b78 <_obstack_memory_used@@Base+0x65c>  // b.tstop
  417ba4:	stp	x9, x9, [sp, #56]
  417ba8:	stur	wzr, [x29, #-44]
  417bac:	ldr	x22, [x19]
  417bb0:	orr	x2, x21, #0x800000
  417bb4:	sub	x0, x29, #0x28
  417bb8:	add	x1, sp, #0x8
  417bbc:	str	xzr, [x19, #48]
  417bc0:	str	x21, [x22, #216]
  417bc4:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  417bc8:	ldr	x8, [sp, #80]
  417bcc:	sub	x2, x29, #0x28
  417bd0:	sub	x5, x29, #0x2c
  417bd4:	mov	x1, x19
  417bd8:	add	x8, x8, w0, sxtw
  417bdc:	add	x0, sp, #0x8
  417be0:	mov	x3, x21
  417be4:	mov	x4, xzr
  417be8:	str	x8, [sp, #80]
  417bec:	bl	41c910 <_obstack_memory_used@@Base+0x53f4>
  417bf0:	mov	x21, x0
  417bf4:	cbnz	x0, 417c00 <_obstack_memory_used@@Base+0x6e4>
  417bf8:	ldur	w8, [x29, #-44]
  417bfc:	cbnz	w8, 417de8 <_obstack_memory_used@@Base+0x8cc>
  417c00:	ldr	w8, [x22, #128]
  417c04:	cmp	w8, #0xf
  417c08:	b.eq	417d98 <_obstack_memory_used@@Base+0x87c>  // b.none
  417c0c:	ldr	x0, [x22, #112]
  417c10:	add	w9, w8, #0x1
  417c14:	sxtw	x8, w8
  417c18:	add	x23, x0, x8, lsl #6
  417c1c:	mov	w10, #0x2                   	// #2
  417c20:	mov	x11, #0xffffffffffffffff    	// #-1
  417c24:	str	w9, [x22, #128]
  417c28:	str	xzr, [x23, #8]!
  417c2c:	stp	xzr, xzr, [x23, #16]
  417c30:	str	xzr, [x23, #8]
  417c34:	str	w10, [x23, #48]
  417c38:	stp	xzr, xzr, [x23, #32]
  417c3c:	str	x11, [x23, #56]
  417c40:	mov	x8, x23
  417c44:	cbz	x21, 417c94 <_obstack_memory_used@@Base+0x778>
  417c48:	ldr	w8, [x22, #128]
  417c4c:	cmp	w8, #0xf
  417c50:	b.eq	417dbc <_obstack_memory_used@@Base+0x8a0>  // b.none
  417c54:	ldr	x0, [x22, #112]
  417c58:	add	w9, w8, #0x1
  417c5c:	sxtw	x8, w8
  417c60:	add	x8, x0, x8, lsl #6
  417c64:	mov	w10, #0x10                  	// #16
  417c68:	mov	x11, #0xffffffffffffffff    	// #-1
  417c6c:	str	w9, [x22, #128]
  417c70:	str	xzr, [x8, #8]!
  417c74:	stp	x21, x23, [x8, #8]
  417c78:	stp	xzr, xzr, [x8, #32]
  417c7c:	str	w10, [x8, #48]
  417c80:	str	xzr, [x8, #24]
  417c84:	str	x11, [x8, #56]
  417c88:	str	x8, [x21]
  417c8c:	cbz	x23, 417de0 <_obstack_memory_used@@Base+0x8c4>
  417c90:	str	x8, [x23]
  417c94:	cbz	x23, 417de0 <_obstack_memory_used@@Base+0x8c4>
  417c98:	cbz	x8, 417de0 <_obstack_memory_used@@Base+0x8c4>
  417c9c:	str	x8, [x20, #104]
  417ca0:	ldr	x21, [x19]
  417ca4:	ldr	x8, [x21, #8]
  417ca8:	lsl	x0, x8, #3
  417cac:	bl	402730 <malloc@plt>
  417cb0:	ldr	x8, [x21, #8]
  417cb4:	str	x0, [x21, #24]
  417cb8:	lsl	x0, x8, #3
  417cbc:	bl	402730 <malloc@plt>
  417cc0:	ldr	x8, [x21, #8]
  417cc4:	str	x0, [x21, #32]
  417cc8:	add	x8, x8, x8, lsl #1
  417ccc:	lsl	x0, x8, #3
  417cd0:	bl	402730 <malloc@plt>
  417cd4:	ldr	x8, [x21, #8]
  417cd8:	str	x0, [x21, #40]
  417cdc:	add	x8, x8, x8, lsl #1
  417ce0:	lsl	x0, x8, #3
  417ce4:	bl	402730 <malloc@plt>
  417ce8:	ldr	x9, [x21, #24]
  417cec:	str	x0, [x21, #48]
  417cf0:	cbz	x9, 417e6c <_obstack_memory_used@@Base+0x950>
  417cf4:	ldr	x9, [x21, #32]
  417cf8:	cbz	x9, 417e6c <_obstack_memory_used@@Base+0x950>
  417cfc:	mov	x8, x0
  417d00:	mov	w0, #0xc                   	// #12
  417d04:	cbz	x8, 417e70 <_obstack_memory_used@@Base+0x954>
  417d08:	ldr	x8, [x21, #40]
  417d0c:	cbz	x8, 417e70 <_obstack_memory_used@@Base+0x954>
  417d10:	ldr	x22, [x19, #48]
  417d14:	lsl	x0, x22, #3
  417d18:	bl	402730 <malloc@plt>
  417d1c:	str	x0, [x21, #224]
  417d20:	cbz	x0, 41804c <_obstack_memory_used@@Base+0xb30>
  417d24:	cbz	x22, 417e94 <_obstack_memory_used@@Base+0x978>
  417d28:	cmp	x22, #0x4
  417d2c:	b.cs	417d38 <_obstack_memory_used@@Base+0x81c>  // b.hs, b.nlast
  417d30:	mov	x8, xzr
  417d34:	b	417e84 <_obstack_memory_used@@Base+0x968>
  417d38:	adrp	x10, 429000 <_obstack_memory_used@@Base+0x11ae4>
  417d3c:	ldr	q0, [x10, #3808]
  417d40:	mov	w10, #0x2                   	// #2
  417d44:	and	x8, x22, #0xfffffffffffffffc
  417d48:	dup	v1.2d, x10
  417d4c:	mov	w10, #0x4                   	// #4
  417d50:	add	x9, x0, #0x10
  417d54:	dup	v2.2d, x10
  417d58:	mov	x10, x8
  417d5c:	add	v3.2d, v0.2d, v1.2d
  417d60:	stp	q0, q3, [x9, #-16]
  417d64:	add	v0.2d, v0.2d, v2.2d
  417d68:	subs	x10, x10, #0x4
  417d6c:	add	x9, x9, #0x20
  417d70:	b.ne	417d5c <_obstack_memory_used@@Base+0x840>  // b.any
  417d74:	b	417e8c <_obstack_memory_used@@Base+0x970>
  417d78:	mov	w1, #0xe8                  	// #232
  417d7c:	mov	x0, x20
  417d80:	bl	402870 <realloc@plt>
  417d84:	cbz	x0, 417e54 <_obstack_memory_used@@Base+0x938>
  417d88:	mov	x20, x0
  417d8c:	mov	w8, #0xe8                  	// #232
  417d90:	stp	x0, x8, [x19]
  417d94:	b	417660 <_obstack_memory_used@@Base+0x144>
  417d98:	mov	w0, #0x3c8                 	// #968
  417d9c:	bl	402730 <malloc@plt>
  417da0:	cbz	x0, 417e5c <_obstack_memory_used@@Base+0x940>
  417da4:	ldr	x9, [x22, #112]
  417da8:	mov	w8, wzr
  417dac:	str	x9, [x0]
  417db0:	str	x0, [x22, #112]
  417db4:	str	wzr, [x22, #128]
  417db8:	b	417c10 <_obstack_memory_used@@Base+0x6f4>
  417dbc:	mov	w0, #0x3c8                 	// #968
  417dc0:	bl	402730 <malloc@plt>
  417dc4:	cbz	x0, 417de0 <_obstack_memory_used@@Base+0x8c4>
  417dc8:	ldr	x9, [x22, #112]
  417dcc:	mov	w8, wzr
  417dd0:	str	x9, [x0]
  417dd4:	str	x0, [x22, #112]
  417dd8:	str	wzr, [x22, #128]
  417ddc:	b	417c58 <_obstack_memory_used@@Base+0x73c>
  417de0:	mov	w8, #0xc                   	// #12
  417de4:	stur	w8, [x29, #-44]
  417de8:	str	xzr, [x20, #104]
  417dec:	ldr	x21, [x19]
  417df0:	ldr	x0, [x21, #112]
  417df4:	cbz	x0, 417e08 <_obstack_memory_used@@Base+0x8ec>
  417df8:	ldr	x22, [x0]
  417dfc:	bl	402a10 <free@plt>
  417e00:	mov	x0, x22
  417e04:	cbnz	x22, 417df8 <_obstack_memory_used@@Base+0x8dc>
  417e08:	ldr	x0, [x21, #32]
  417e0c:	mov	w8, #0xf                   	// #15
  417e10:	str	w8, [x21, #128]
  417e14:	stp	xzr, xzr, [x21, #104]
  417e18:	bl	402a10 <free@plt>
  417e1c:	str	xzr, [x21, #32]
  417e20:	ldr	x0, [sp, #24]
  417e24:	bl	402a10 <free@plt>
  417e28:	ldr	x0, [sp, #32]
  417e2c:	bl	402a10 <free@plt>
  417e30:	ldrb	w8, [sp, #147]
  417e34:	cbz	w8, 417e40 <_obstack_memory_used@@Base+0x924>
  417e38:	ldr	x0, [sp, #16]
  417e3c:	bl	402a10 <free@plt>
  417e40:	mov	x0, x20
  417e44:	bl	41927c <_obstack_memory_used@@Base+0x1d60>
  417e48:	stp	xzr, xzr, [x19]
  417e4c:	ldur	w21, [x29, #-44]
  417e50:	b	4187fc <_obstack_memory_used@@Base+0x12e0>
  417e54:	mov	w21, #0xc                   	// #12
  417e58:	b	4187fc <_obstack_memory_used@@Base+0x12e0>
  417e5c:	mov	x23, xzr
  417e60:	mov	x8, x23
  417e64:	cbnz	x21, 417c48 <_obstack_memory_used@@Base+0x72c>
  417e68:	b	417c94 <_obstack_memory_used@@Base+0x778>
  417e6c:	mov	w0, #0xc                   	// #12
  417e70:	stur	w0, [x29, #-44]
  417e74:	ldr	x21, [x19]
  417e78:	ldr	x0, [x21, #112]
  417e7c:	cbnz	x0, 417df8 <_obstack_memory_used@@Base+0x8dc>
  417e80:	b	417e08 <_obstack_memory_used@@Base+0x8ec>
  417e84:	str	x8, [x0, x8, lsl #3]
  417e88:	add	x8, x8, #0x1
  417e8c:	cmp	x22, x8
  417e90:	b.ne	417e84 <_obstack_memory_used@@Base+0x968>  // b.any
  417e94:	ldr	x9, [x21, #104]
  417e98:	ldrb	w8, [x9, #48]
  417e9c:	cmp	w8, #0x11
  417ea0:	b.eq	417ed8 <_obstack_memory_used@@Base+0x9bc>  // b.none
  417ea4:	cmp	w8, #0x4
  417ea8:	b.ne	417f28 <_obstack_memory_used@@Base+0xa0c>  // b.any
  417eac:	ldr	x8, [x9, #40]
  417eb0:	mov	w11, #0x1                   	// #1
  417eb4:	sbfiz	x8, x8, #3, #32
  417eb8:	ldr	x8, [x0, x8]
  417ebc:	str	x8, [x9, #40]
  417ec0:	ldr	x10, [x21, #160]
  417ec4:	lsl	w8, w11, w8
  417ec8:	sxtw	x8, w8
  417ecc:	orr	x8, x10, x8
  417ed0:	str	x8, [x21, #160]
  417ed4:	b	417f28 <_obstack_memory_used@@Base+0xa0c>
  417ed8:	ldr	x8, [x9, #8]
  417edc:	cbz	x8, 417f28 <_obstack_memory_used@@Base+0xa0c>
  417ee0:	ldrb	w10, [x8, #48]
  417ee4:	cmp	w10, #0x11
  417ee8:	b.ne	417f28 <_obstack_memory_used@@Base+0xa0c>  // b.any
  417eec:	ldr	x10, [x8, #8]
  417ef0:	ldr	x8, [x8, #40]
  417ef4:	str	x10, [x9, #8]
  417ef8:	cbz	x10, 417f00 <_obstack_memory_used@@Base+0x9e4>
  417efc:	str	x9, [x10]
  417f00:	ldr	x10, [x9, #40]
  417f04:	cmp	x8, #0x3f
  417f08:	ldr	x10, [x0, x10, lsl #3]
  417f0c:	str	x10, [x0, x8, lsl #3]
  417f10:	b.gt	417f28 <_obstack_memory_used@@Base+0xa0c>
  417f14:	ldr	x10, [x21, #160]
  417f18:	mov	w11, #0x1                   	// #1
  417f1c:	lsl	x8, x11, x8
  417f20:	bic	x8, x10, x8
  417f24:	b	417ed0 <_obstack_memory_used@@Base+0x9b4>
  417f28:	mov	w8, #0x1                   	// #1
  417f2c:	ldr	x10, [x9, #8]
  417f30:	cbnz	x10, 417f5c <_obstack_memory_used@@Base+0xa40>
  417f34:	mov	x11, xzr
  417f38:	b	417f44 <_obstack_memory_used@@Base+0xa28>
  417f3c:	ldr	x9, [x11]
  417f40:	cbz	x9, 418008 <_obstack_memory_used@@Base+0xaec>
  417f44:	ldr	x10, [x9, #16]
  417f48:	mov	x12, x11
  417f4c:	mov	x11, x9
  417f50:	cmp	x10, x12
  417f54:	b.eq	417f3c <_obstack_memory_used@@Base+0xa20>  // b.none
  417f58:	cbz	x10, 417f3c <_obstack_memory_used@@Base+0xa20>
  417f5c:	ldrb	w9, [x10, #48]
  417f60:	cmp	w9, #0x11
  417f64:	b.eq	417fac <_obstack_memory_used@@Base+0xa90>  // b.none
  417f68:	cmp	w9, #0x4
  417f6c:	mov	x9, x10
  417f70:	b.ne	417f2c <_obstack_memory_used@@Base+0xa10>  // b.any
  417f74:	ldr	x11, [x21, #224]
  417f78:	mov	x9, x10
  417f7c:	cbz	x11, 417f2c <_obstack_memory_used@@Base+0xa10>
  417f80:	ldr	x9, [x10, #40]
  417f84:	sbfiz	x9, x9, #3, #32
  417f88:	ldr	x9, [x11, x9]
  417f8c:	str	x9, [x10, #40]
  417f90:	ldr	x11, [x21, #160]
  417f94:	lsl	w9, w8, w9
  417f98:	sxtw	x9, w9
  417f9c:	orr	x9, x11, x9
  417fa0:	str	x9, [x21, #160]
  417fa4:	mov	x9, x10
  417fa8:	b	417f2c <_obstack_memory_used@@Base+0xa10>
  417fac:	ldr	x11, [x10, #8]
  417fb0:	mov	x9, x10
  417fb4:	cbz	x11, 417f2c <_obstack_memory_used@@Base+0xa10>
  417fb8:	ldrb	w9, [x11, #48]
  417fbc:	cmp	w9, #0x11
  417fc0:	mov	x9, x10
  417fc4:	b.ne	417f2c <_obstack_memory_used@@Base+0xa10>  // b.any
  417fc8:	ldr	x9, [x11, #8]
  417fcc:	ldr	x11, [x11, #40]
  417fd0:	str	x9, [x10, #8]
  417fd4:	cbz	x9, 417fdc <_obstack_memory_used@@Base+0xac0>
  417fd8:	str	x10, [x9]
  417fdc:	ldr	x9, [x21, #224]
  417fe0:	ldr	x12, [x10, #40]
  417fe4:	cmp	x11, #0x3f
  417fe8:	ldr	x12, [x9, x12, lsl #3]
  417fec:	str	x12, [x9, x11, lsl #3]
  417ff0:	mov	x9, x10
  417ff4:	b.gt	417f2c <_obstack_memory_used@@Base+0xa10>
  417ff8:	ldr	x9, [x21, #160]
  417ffc:	lsl	x11, x8, x11
  418000:	bic	x9, x9, x11
  418004:	b	417fa0 <_obstack_memory_used@@Base+0xa84>
  418008:	ldr	x8, [x19, #48]
  41800c:	cbz	x8, 418034 <_obstack_memory_used@@Base+0xb18>
  418010:	ldr	x0, [x21, #224]
  418014:	mov	x9, xzr
  418018:	ldr	x10, [x0, x9, lsl #3]
  41801c:	cmp	x9, x10
  418020:	b.ne	41803c <_obstack_memory_used@@Base+0xb20>  // b.any
  418024:	add	x9, x9, #0x1
  418028:	cmp	x8, x9
  41802c:	b.ne	418018 <_obstack_memory_used@@Base+0xafc>  // b.any
  418030:	b	418044 <_obstack_memory_used@@Base+0xb28>
  418034:	ldr	x0, [x21, #224]
  418038:	b	418044 <_obstack_memory_used@@Base+0xb28>
  41803c:	cmp	x8, x9
  418040:	b.ne	41804c <_obstack_memory_used@@Base+0xb30>  // b.any
  418044:	bl	402a10 <free@plt>
  418048:	str	xzr, [x21, #224]
  41804c:	ldr	x8, [x21, #104]
  418050:	mov	x22, x8
  418054:	ldr	x8, [x8, #8]
  418058:	cbnz	x8, 418050 <_obstack_memory_used@@Base+0xb34>
  41805c:	ldr	x8, [x22, #16]
  418060:	cbnz	x8, 418050 <_obstack_memory_used@@Base+0xb34>
  418064:	mov	x3, xzr
  418068:	b	418074 <_obstack_memory_used@@Base+0xb58>
  41806c:	ldr	x3, [x9, #8]
  418070:	mov	x22, x9
  418074:	stur	wzr, [x29, #-40]
  418078:	cbz	x3, 4180a4 <_obstack_memory_used@@Base+0xb88>
  41807c:	ldrb	w8, [x3, #48]
  418080:	cmp	w8, #0x11
  418084:	b.ne	4180a4 <_obstack_memory_used@@Base+0xb88>  // b.any
  418088:	ldr	x1, [x19]
  41808c:	ldrb	w2, [x19, #56]
  418090:	sub	x0, x29, #0x28
  418094:	bl	420840 <_obstack_memory_used@@Base+0x9324>
  418098:	str	x0, [x22, #8]
  41809c:	cbz	x0, 4180a4 <_obstack_memory_used@@Base+0xb88>
  4180a0:	str	x22, [x0]
  4180a4:	ldr	x3, [x22, #16]
  4180a8:	cbz	x3, 4180d4 <_obstack_memory_used@@Base+0xbb8>
  4180ac:	ldrb	w8, [x3, #48]
  4180b0:	cmp	w8, #0x11
  4180b4:	b.ne	4180d4 <_obstack_memory_used@@Base+0xbb8>  // b.any
  4180b8:	ldr	x1, [x19]
  4180bc:	ldrb	w2, [x19, #56]
  4180c0:	sub	x0, x29, #0x28
  4180c4:	bl	420840 <_obstack_memory_used@@Base+0x9324>
  4180c8:	str	x0, [x22, #16]
  4180cc:	cbz	x0, 4180d4 <_obstack_memory_used@@Base+0xbb8>
  4180d0:	str	x22, [x0]
  4180d4:	ldur	w0, [x29, #-40]
  4180d8:	cbnz	w0, 417e70 <_obstack_memory_used@@Base+0x954>
  4180dc:	ldr	x9, [x22]
  4180e0:	cbz	x9, 4180f8 <_obstack_memory_used@@Base+0xbdc>
  4180e4:	ldr	x8, [x9, #16]
  4180e8:	cmp	x8, x22
  4180ec:	b.eq	41806c <_obstack_memory_used@@Base+0xb50>  // b.none
  4180f0:	cbz	x8, 41806c <_obstack_memory_used@@Base+0xb50>
  4180f4:	b	418050 <_obstack_memory_used@@Base+0xb34>
  4180f8:	ldr	x8, [x21, #104]
  4180fc:	mov	x22, x8
  418100:	ldr	x8, [x8, #8]
  418104:	cbnz	x8, 4180fc <_obstack_memory_used@@Base+0xbe0>
  418108:	ldr	x8, [x22, #16]
  41810c:	cbnz	x8, 4180fc <_obstack_memory_used@@Base+0xbe0>
  418110:	ldrb	w8, [x22, #48]
  418114:	cmp	w8, #0x10
  418118:	b.ne	418134 <_obstack_memory_used@@Base+0xc18>  // b.any
  41811c:	ldr	x8, [x22, #8]
  418120:	ldr	x9, [x8, #24]
  418124:	str	x9, [x22, #24]
  418128:	ldr	x8, [x8, #56]
  41812c:	str	x8, [x22, #56]
  418130:	b	418174 <_obstack_memory_used@@Base+0xc58>
  418134:	ldp	x1, x2, [x22, #40]
  418138:	mov	x0, x21
  41813c:	str	x22, [x22, #24]
  418140:	bl	420acc <_obstack_memory_used@@Base+0x95b0>
  418144:	cmn	x0, #0x1
  418148:	str	x0, [x22, #56]
  41814c:	b.eq	417e6c <_obstack_memory_used@@Base+0x950>  // b.none
  418150:	ldrb	w8, [x22, #48]
  418154:	cmp	w8, #0xc
  418158:	b.ne	418174 <_obstack_memory_used@@Base+0xc58>  // b.any
  41815c:	ldr	x8, [x21]
  418160:	ldr	w9, [x22, #40]
  418164:	add	x8, x8, x0, lsl #4
  418168:	ldr	w10, [x8, #8]
  41816c:	bfi	w10, w9, #8, #10
  418170:	str	w10, [x8, #8]
  418174:	ldr	x9, [x22]
  418178:	cbz	x9, 418198 <_obstack_memory_used@@Base+0xc7c>
  41817c:	ldr	x8, [x9, #16]
  418180:	cmp	x8, x22
  418184:	mov	x22, x9
  418188:	b.eq	418110 <_obstack_memory_used@@Base+0xbf4>  // b.none
  41818c:	mov	x22, x9
  418190:	cbz	x8, 418110 <_obstack_memory_used@@Base+0xbf4>
  418194:	b	4180fc <_obstack_memory_used@@Base+0xbe0>
  418198:	ldr	x22, [x21, #104]
  41819c:	ldrb	w8, [x22, #48]
  4181a0:	cmp	w8, #0x10
  4181a4:	b.eq	4181bc <_obstack_memory_used@@Base+0xca0>  // b.none
  4181a8:	cmp	w8, #0xb
  4181ac:	b.ne	4181cc <_obstack_memory_used@@Base+0xcb0>  // b.any
  4181b0:	ldr	x8, [x22, #8]
  4181b4:	str	x22, [x8, #32]
  4181b8:	b	4181ec <_obstack_memory_used@@Base+0xcd0>
  4181bc:	ldp	x8, x9, [x22, #8]
  4181c0:	ldr	x10, [x9, #24]
  4181c4:	str	x10, [x8, #32]
  4181c8:	b	4181e4 <_obstack_memory_used@@Base+0xcc8>
  4181cc:	ldr	x8, [x22, #8]
  4181d0:	cbz	x8, 4181dc <_obstack_memory_used@@Base+0xcc0>
  4181d4:	ldr	x9, [x22, #32]
  4181d8:	str	x9, [x8, #32]
  4181dc:	ldr	x9, [x22, #16]
  4181e0:	cbz	x9, 4181ec <_obstack_memory_used@@Base+0xcd0>
  4181e4:	ldr	x10, [x22, #32]
  4181e8:	str	x10, [x9, #32]
  4181ec:	mov	x10, x22
  4181f0:	b	41820c <_obstack_memory_used@@Base+0xcf0>
  4181f4:	ldp	x8, x10, [x9, #8]
  4181f8:	ldr	x11, [x10, #24]
  4181fc:	str	x11, [x8, #32]
  418200:	ldr	x11, [x9, #32]
  418204:	str	x11, [x10, #32]
  418208:	mov	x10, x9
  41820c:	mov	x9, x8
  418210:	cbnz	x8, 418238 <_obstack_memory_used@@Base+0xd1c>
  418214:	b	418220 <_obstack_memory_used@@Base+0xd04>
  418218:	ldr	x10, [x8]
  41821c:	cbz	x10, 418288 <_obstack_memory_used@@Base+0xd6c>
  418220:	ldr	x9, [x10, #16]
  418224:	mov	x11, x8
  418228:	mov	x8, x10
  41822c:	cmp	x9, x11
  418230:	b.eq	418218 <_obstack_memory_used@@Base+0xcfc>  // b.none
  418234:	cbz	x9, 418218 <_obstack_memory_used@@Base+0xcfc>
  418238:	ldrb	w8, [x9, #48]
  41823c:	cmp	w8, #0x10
  418240:	b.eq	4181f4 <_obstack_memory_used@@Base+0xcd8>  // b.none
  418244:	cmp	w8, #0xb
  418248:	b.ne	41825c <_obstack_memory_used@@Base+0xd40>  // b.any
  41824c:	ldr	x8, [x9, #8]
  418250:	mov	x10, x9
  418254:	str	x9, [x8, #32]
  418258:	b	41820c <_obstack_memory_used@@Base+0xcf0>
  41825c:	ldr	x8, [x9, #8]
  418260:	cbz	x8, 41826c <_obstack_memory_used@@Base+0xd50>
  418264:	ldr	x10, [x9, #32]
  418268:	str	x10, [x8, #32]
  41826c:	ldr	x11, [x9, #16]
  418270:	mov	x10, x9
  418274:	cbz	x11, 41820c <_obstack_memory_used@@Base+0xcf0>
  418278:	ldr	x10, [x9, #32]
  41827c:	str	x10, [x11, #32]
  418280:	mov	x10, x9
  418284:	b	41820c <_obstack_memory_used@@Base+0xcf0>
  418288:	mov	x0, x21
  41828c:	mov	x1, x22
  418290:	bl	420694 <_obstack_memory_used@@Base+0x9178>
  418294:	cbz	w0, 4182b0 <_obstack_memory_used@@Base+0xd94>
  418298:	b	417e70 <_obstack_memory_used@@Base+0x954>
  41829c:	mov	x0, x21
  4182a0:	mov	x1, x23
  4182a4:	bl	420694 <_obstack_memory_used@@Base+0x9178>
  4182a8:	mov	x22, x23
  4182ac:	cbnz	w0, 417e70 <_obstack_memory_used@@Base+0x954>
  4182b0:	ldr	x23, [x22, #8]
  4182b4:	cbnz	x23, 41829c <_obstack_memory_used@@Base+0xd80>
  4182b8:	mov	x8, xzr
  4182bc:	b	4182c8 <_obstack_memory_used@@Base+0xdac>
  4182c0:	ldr	x22, [x8]
  4182c4:	cbz	x22, 4182e4 <_obstack_memory_used@@Base+0xdc8>
  4182c8:	ldr	x23, [x22, #16]
  4182cc:	mov	x9, x8
  4182d0:	mov	x8, x22
  4182d4:	cmp	x23, x9
  4182d8:	b.eq	4182c0 <_obstack_memory_used@@Base+0xda4>  // b.none
  4182dc:	cbz	x23, 4182c0 <_obstack_memory_used@@Base+0xda4>
  4182e0:	b	41829c <_obstack_memory_used@@Base+0xd80>
  4182e4:	mov	w24, wzr
  4182e8:	mov	w23, #0x18                  	// #24
  4182ec:	ldr	x8, [x21, #48]
  4182f0:	madd	x8, x22, x23, x8
  4182f4:	ldr	x8, [x8, #8]
  4182f8:	cbnz	x8, 418330 <_obstack_memory_used@@Base+0xe14>
  4182fc:	sub	x0, x29, #0x28
  418300:	mov	w3, #0x1                   	// #1
  418304:	mov	x1, x21
  418308:	mov	x2, x22
  41830c:	bl	420c98 <_obstack_memory_used@@Base+0x977c>
  418310:	cbnz	w0, 417e70 <_obstack_memory_used@@Base+0x954>
  418314:	ldr	x8, [x21, #48]
  418318:	madd	x8, x22, x23, x8
  41831c:	ldr	x8, [x8, #8]
  418320:	cbnz	x8, 418330 <_obstack_memory_used@@Base+0xe14>
  418324:	ldur	x0, [x29, #-24]
  418328:	bl	402a10 <free@plt>
  41832c:	mov	w24, #0x1                   	// #1
  418330:	ldr	x9, [x21, #16]
  418334:	add	x8, x22, #0x1
  418338:	mov	w10, w24
  41833c:	cmp	x8, x9
  418340:	cset	w11, ne  // ne = any
  418344:	csinc	x22, xzr, x22, eq  // eq = none
  418348:	and	w24, w24, w11
  41834c:	tbnz	w10, #0, 4182ec <_obstack_memory_used@@Base+0xdd0>
  418350:	cmp	x8, x9
  418354:	b.ne	4182ec <_obstack_memory_used@@Base+0xdd0>  // b.any
  418358:	ldrb	w9, [x19, #56]
  41835c:	tbnz	w9, #4, 418370 <_obstack_memory_used@@Base+0xe54>
  418360:	ldr	x9, [x19, #48]
  418364:	cbz	x9, 418370 <_obstack_memory_used@@Base+0xe54>
  418368:	ldrb	w9, [x21, #176]
  41836c:	tbnz	w9, #0, 418378 <_obstack_memory_used@@Base+0xe5c>
  418370:	ldr	x9, [x21, #152]
  418374:	cbz	x9, 41848c <_obstack_memory_used@@Base+0xf70>
  418378:	add	x8, x8, x8, lsl #1
  41837c:	lsl	x0, x8, #3
  418380:	bl	402730 <malloc@plt>
  418384:	str	x0, [x21, #56]
  418388:	cbz	x0, 417e6c <_obstack_memory_used@@Base+0x950>
  41838c:	ldr	x8, [x21, #16]
  418390:	cbz	x8, 41848c <_obstack_memory_used@@Base+0xf70>
  418394:	stp	xzr, xzr, [x0]
  418398:	str	xzr, [x0, #16]
  41839c:	ldr	x9, [x21, #16]
  4183a0:	cmp	x9, #0x2
  4183a4:	b.cc	4183d4 <_obstack_memory_used@@Base+0xeb8>  // b.lo, b.ul, b.last
  4183a8:	mov	w8, #0x1                   	// #1
  4183ac:	mov	w10, #0x18                  	// #24
  4183b0:	ldr	x9, [x21, #56]
  4183b4:	add	x8, x8, #0x1
  4183b8:	add	x9, x9, x10
  4183bc:	stp	xzr, xzr, [x9]
  4183c0:	str	xzr, [x9, #16]
  4183c4:	ldr	x9, [x21, #16]
  4183c8:	add	x10, x10, #0x18
  4183cc:	cmp	x8, x9
  4183d0:	b.cc	4183b0 <_obstack_memory_used@@Base+0xe94>  // b.lo, b.ul, b.last
  4183d4:	cbz	x9, 41848c <_obstack_memory_used@@Base+0xf70>
  4183d8:	ldr	x8, [x21, #48]
  4183dc:	mov	x22, xzr
  4183e0:	mov	w23, #0x18                  	// #24
  4183e4:	b	4183f8 <_obstack_memory_used@@Base+0xedc>
  4183e8:	ldr	x9, [x21, #16]
  4183ec:	add	x22, x22, #0x1
  4183f0:	cmp	x22, x9
  4183f4:	b.cs	41848c <_obstack_memory_used@@Base+0xf70>  // b.hs, b.nlast
  4183f8:	madd	x10, x22, x23, x8
  4183fc:	ldr	x11, [x10, #8]
  418400:	cmp	x11, #0x1
  418404:	b.lt	4183ec <_obstack_memory_used@@Base+0xed0>  // b.tstop
  418408:	ldr	x24, [x10, #16]
  41840c:	mov	x26, xzr
  418410:	b	41843c <_obstack_memory_used@@Base+0xf20>
  418414:	madd	x10, x11, x23, x10
  418418:	ldr	x0, [x10, #16]
  41841c:	add	x10, x9, #0x1
  418420:	str	x10, [x27]
  418424:	str	x22, [x0, x9, lsl #3]
  418428:	madd	x9, x22, x23, x8
  41842c:	ldr	x9, [x9, #8]
  418430:	add	x26, x26, #0x1
  418434:	cmp	x26, x9
  418438:	b.ge	4183e8 <_obstack_memory_used@@Base+0xecc>  // b.tcont
  41843c:	ldr	x10, [x21, #56]
  418440:	ldr	x11, [x24, x26, lsl #3]
  418444:	madd	x12, x11, x23, x10
  418448:	mov	x27, x12
  41844c:	ldr	x13, [x12]
  418450:	ldr	x9, [x27, #8]!
  418454:	cmp	x13, x9
  418458:	b.ne	418414 <_obstack_memory_used@@Base+0xef8>  // b.any
  41845c:	lsl	x8, x13, #1
  418460:	add	x8, x8, #0x2
  418464:	str	x8, [x12]
  418468:	madd	x28, x11, x23, x10
  41846c:	ldr	x0, [x28, #16]!
  418470:	lsl	x1, x8, #3
  418474:	bl	402870 <realloc@plt>
  418478:	cbz	x0, 417e6c <_obstack_memory_used@@Base+0x950>
  41847c:	str	x0, [x28]
  418480:	ldr	x9, [x27]
  418484:	ldr	x8, [x21, #48]
  418488:	b	41841c <_obstack_memory_used@@Base+0xf00>
  41848c:	stur	wzr, [x29, #-44]
  418490:	cbnz	x25, 418584 <_obstack_memory_used@@Base+0x1068>
  418494:	ldrb	w9, [x20, #176]
  418498:	tbz	w9, #2, 418584 <_obstack_memory_used@@Base+0x1068>
  41849c:	ldr	x8, [x19, #40]
  4184a0:	cbnz	x8, 418584 <_obstack_memory_used@@Base+0x1068>
  4184a4:	ldr	x11, [x20, #16]
  4184a8:	cbz	x11, 418550 <_obstack_memory_used@@Base+0x1034>
  4184ac:	ldr	x10, [x20]
  4184b0:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4184b4:	mov	w8, wzr
  4184b8:	mov	w12, wzr
  4184bc:	add	x13, x13, #0x620
  4184c0:	mov	w14, #0x1                   	// #1
  4184c4:	mov	w15, #0x8b                  	// #139
  4184c8:	mov	x16, x10
  4184cc:	b	4184ec <_obstack_memory_used@@Base+0xfd0>
  4184d0:	ldrsb	w17, [x16]
  4184d4:	cmp	w17, #0x0
  4184d8:	cset	w17, lt  // lt = tstop
  4184dc:	orr	w12, w12, w17
  4184e0:	subs	x11, x11, #0x1
  4184e4:	add	x16, x16, #0x10
  4184e8:	b.eq	418820 <_obstack_memory_used@@Base+0x1304>  // b.none
  4184ec:	ldrb	w17, [x16, #8]
  4184f0:	sub	w17, w17, #0x1
  4184f4:	cmp	w17, #0xb
  4184f8:	b.hi	4188a4 <_obstack_memory_used@@Base+0x1388>  // b.pmore
  4184fc:	adr	x18, 4184d0 <_obstack_memory_used@@Base+0xfb4>
  418500:	ldrb	w0, [x13, x17]
  418504:	add	x18, x18, x0, lsl #2
  418508:	br	x18
  41850c:	ldr	x17, [x16]
  418510:	ldr	x18, [x17, #16]
  418514:	cbnz	x18, 418584 <_obstack_memory_used@@Base+0x1068>
  418518:	ldr	x17, [x17, #24]
  41851c:	cbz	x17, 4184e0 <_obstack_memory_used@@Base+0xfc4>
  418520:	b	418584 <_obstack_memory_used@@Base+0x1068>
  418524:	ldr	w17, [x16]
  418528:	sub	w17, w17, #0x10
  41852c:	ror	w17, w17, #4
  418530:	cmp	w17, #0x7
  418534:	b.hi	418584 <_obstack_memory_used@@Base+0x1068>  // b.pmore
  418538:	lsl	w17, w14, w17
  41853c:	tst	w17, w15
  418540:	b.ne	4184e0 <_obstack_memory_used@@Base+0xfc4>  // b.any
  418544:	b	418584 <_obstack_memory_used@@Base+0x1068>
  418548:	mov	w8, #0x1                   	// #1
  41854c:	b	4184e0 <_obstack_memory_used@@Base+0xfc4>
  418550:	mov	w8, wzr
  418554:	ldr	x10, [x20, #152]
  418558:	mov	w12, #0x2                   	// #2
  41855c:	and	w9, w9, #0xfffffff9
  418560:	mov	w11, #0x1                   	// #1
  418564:	cmp	x10, #0x0
  418568:	cset	w10, gt
  41856c:	orr	w8, w8, w10
  418570:	tst	w8, #0x1
  418574:	csel	w8, w12, wzr, ne  // ne = any
  418578:	orr	w8, w8, w9
  41857c:	str	w11, [x20, #180]
  418580:	strb	w8, [x20, #176]
  418584:	ldr	x8, [x20, #104]
  418588:	ldr	x24, [x20, #48]
  41858c:	ldr	x8, [x8, #24]
  418590:	ldr	x23, [x8, #56]
  418594:	mov	w8, #0x18                  	// #24
  418598:	str	x23, [x20, #144]
  41859c:	madd	x8, x23, x8, x24
  4185a0:	ldr	x22, [x8, #8]
  4185a4:	stur	x22, [x29, #-32]
  4185a8:	ldr	x25, [x8, #8]
  4185ac:	cmp	x25, #0x1
  4185b0:	b.lt	4186f4 <_obstack_memory_used@@Base+0x11d8>  // b.tstop
  4185b4:	lsl	x0, x22, #3
  4185b8:	stur	x22, [x29, #-40]
  4185bc:	bl	402730 <malloc@plt>
  4185c0:	stur	x0, [x29, #-24]
  4185c4:	cbz	x0, 418894 <_obstack_memory_used@@Base+0x1378>
  4185c8:	mov	w8, #0x18                  	// #24
  4185cc:	madd	x8, x23, x8, x24
  4185d0:	ldr	x1, [x8, #16]
  4185d4:	lsl	x2, x25, #3
  4185d8:	mov	x21, x0
  4185dc:	bl	402580 <memcpy@plt>
  4185e0:	cmp	x22, #0x1
  4185e4:	stur	wzr, [x29, #-12]
  4185e8:	b.lt	418700 <_obstack_memory_used@@Base+0x11e4>  // b.tstop
  4185ec:	ldr	x8, [x20, #152]
  4185f0:	cmp	x8, #0x1
  4185f4:	b.lt	418700 <_obstack_memory_used@@Base+0x11e4>  // b.tstop
  4185f8:	mov	x8, xzr
  4185fc:	mov	w23, #0x18                  	// #24
  418600:	ldr	x9, [x21, x8, lsl #3]
  418604:	ldr	x10, [x20]
  418608:	add	x11, x10, x9, lsl #4
  41860c:	ldrb	w11, [x11, #8]
  418610:	cmp	w11, #0x4
  418614:	b.ne	4186e0 <_obstack_memory_used@@Base+0x11c4>  // b.any
  418618:	cmp	x22, #0x1
  41861c:	b.lt	41866c <_obstack_memory_used@@Base+0x1150>  // b.tstop
  418620:	mov	x11, xzr
  418624:	add	x12, x10, x9, lsl #4
  418628:	b	418638 <_obstack_memory_used@@Base+0x111c>
  41862c:	add	x11, x11, #0x1
  418630:	cmp	x22, x11
  418634:	b.eq	4186e0 <_obstack_memory_used@@Base+0x11c4>  // b.none
  418638:	ldr	x13, [x21, x11, lsl #3]
  41863c:	add	x14, x10, x13, lsl #4
  418640:	ldrb	w14, [x14, #8]
  418644:	cmp	w14, #0x9
  418648:	b.ne	41862c <_obstack_memory_used@@Base+0x1110>  // b.any
  41864c:	lsl	x13, x13, #4
  418650:	ldr	x13, [x10, x13]
  418654:	ldr	x14, [x12]
  418658:	cmp	x13, x14
  41865c:	b.ne	41862c <_obstack_memory_used@@Base+0x1110>  // b.any
  418660:	cmp	x11, x22
  418664:	b.ne	418678 <_obstack_memory_used@@Base+0x115c>  // b.any
  418668:	b	4186e0 <_obstack_memory_used@@Base+0x11c4>
  41866c:	mov	x11, xzr
  418670:	cmp	x11, x22
  418674:	b.eq	4186e0 <_obstack_memory_used@@Base+0x11c4>  // b.none
  418678:	ldr	x10, [x20, #40]
  41867c:	madd	x9, x9, x23, x10
  418680:	ldr	x9, [x9, #16]
  418684:	subs	x10, x22, #0x1
  418688:	ldr	x9, [x9]
  41868c:	b.lt	4186c4 <_obstack_memory_used@@Base+0x11a8>  // b.tstop
  418690:	mov	x11, xzr
  418694:	b.eq	4186b8 <_obstack_memory_used@@Base+0x119c>  // b.none
  418698:	add	x12, x11, x10
  41869c:	lsr	x12, x12, #1
  4186a0:	ldr	x13, [x21, x12, lsl #3]
  4186a4:	cmp	x13, x9
  4186a8:	csinc	x11, x11, x12, ge  // ge = tcont
  4186ac:	csel	x10, x10, x12, lt  // lt = tstop
  4186b0:	cmp	x11, x10
  4186b4:	b.cc	418698 <_obstack_memory_used@@Base+0x117c>  // b.lo, b.ul, b.last
  4186b8:	ldr	x10, [x21, x11, lsl #3]
  4186bc:	cmp	x10, x9
  4186c0:	b.eq	4186e0 <_obstack_memory_used@@Base+0x11c4>  // b.none
  4186c4:	ldr	x8, [x20, #48]
  4186c8:	sub	x0, x29, #0x28
  4186cc:	madd	x1, x9, x23, x8
  4186d0:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  4186d4:	cbnz	w0, 418798 <_obstack_memory_used@@Base+0x127c>
  4186d8:	ldur	x22, [x29, #-32]
  4186dc:	mov	x8, xzr
  4186e0:	add	x8, x8, #0x1
  4186e4:	cmp	x8, x22
  4186e8:	b.ge	418700 <_obstack_memory_used@@Base+0x11e4>  // b.tcont
  4186ec:	ldur	x21, [x29, #-24]
  4186f0:	b	418600 <_obstack_memory_used@@Base+0x10e4>
  4186f4:	stp	xzr, xzr, [x29, #-40]
  4186f8:	stur	xzr, [x29, #-24]
  4186fc:	stur	wzr, [x29, #-12]
  418700:	sub	x0, x29, #0xc
  418704:	sub	x2, x29, #0x28
  418708:	mov	x1, x20
  41870c:	mov	w3, wzr
  418710:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  418714:	str	x0, [x20, #72]
  418718:	cbz	x0, 41888c <_obstack_memory_used@@Base+0x1370>
  41871c:	ldrsb	w8, [x0, #104]
  418720:	tbnz	w8, #31, 418730 <_obstack_memory_used@@Base+0x1214>
  418724:	stp	x0, x0, [x20, #88]
  418728:	str	x0, [x20, #80]
  41872c:	b	41878c <_obstack_memory_used@@Base+0x1270>
  418730:	sub	x0, x29, #0xc
  418734:	sub	x2, x29, #0x28
  418738:	mov	w3, #0x1                   	// #1
  41873c:	mov	x1, x20
  418740:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  418744:	str	x0, [x20, #80]
  418748:	sub	x0, x29, #0xc
  41874c:	sub	x2, x29, #0x28
  418750:	mov	w3, #0x2                   	// #2
  418754:	mov	x1, x20
  418758:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  41875c:	str	x0, [x20, #88]
  418760:	sub	x0, x29, #0xc
  418764:	sub	x2, x29, #0x28
  418768:	mov	w3, #0x6                   	// #6
  41876c:	mov	x1, x20
  418770:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  418774:	ldr	x8, [x20, #80]
  418778:	str	x0, [x20, #96]
  41877c:	cbz	x8, 41888c <_obstack_memory_used@@Base+0x1370>
  418780:	cbz	x0, 41888c <_obstack_memory_used@@Base+0x1370>
  418784:	ldr	x8, [x20, #88]
  418788:	cbz	x8, 41888c <_obstack_memory_used@@Base+0x1370>
  41878c:	ldur	x0, [x29, #-24]
  418790:	bl	402a10 <free@plt>
  418794:	mov	w0, wzr
  418798:	stur	w0, [x29, #-44]
  41879c:	ldr	x21, [x19]
  4187a0:	ldr	x0, [x21, #112]
  4187a4:	cbz	x0, 4187b8 <_obstack_memory_used@@Base+0x129c>
  4187a8:	ldr	x22, [x0]
  4187ac:	bl	402a10 <free@plt>
  4187b0:	mov	x0, x22
  4187b4:	cbnz	x22, 4187a8 <_obstack_memory_used@@Base+0x128c>
  4187b8:	ldr	x0, [x21, #32]
  4187bc:	mov	w8, #0xf                   	// #15
  4187c0:	str	w8, [x21, #128]
  4187c4:	stp	xzr, xzr, [x21, #104]
  4187c8:	bl	402a10 <free@plt>
  4187cc:	str	xzr, [x21, #32]
  4187d0:	ldr	x0, [sp, #24]
  4187d4:	bl	402a10 <free@plt>
  4187d8:	ldr	x0, [sp, #32]
  4187dc:	bl	402a10 <free@plt>
  4187e0:	ldrb	w8, [sp, #147]
  4187e4:	cbz	w8, 4187f0 <_obstack_memory_used@@Base+0x12d4>
  4187e8:	ldr	x0, [sp, #16]
  4187ec:	bl	402a10 <free@plt>
  4187f0:	ldur	w8, [x29, #-44]
  4187f4:	cbnz	w8, 417e40 <_obstack_memory_used@@Base+0x924>
  4187f8:	mov	w21, wzr
  4187fc:	mov	w0, w21
  418800:	ldp	x20, x19, [sp, #288]
  418804:	ldp	x22, x21, [sp, #272]
  418808:	ldp	x24, x23, [sp, #256]
  41880c:	ldp	x26, x25, [sp, #240]
  418810:	ldp	x28, x27, [sp, #224]
  418814:	ldp	x29, x30, [sp, #208]
  418818:	add	sp, sp, #0x130
  41881c:	ret
  418820:	orr	w11, w12, w8
  418824:	tbz	w11, #0, 418554 <_obstack_memory_used@@Base+0x1038>
  418828:	mov	x9, xzr
  41882c:	mov	w11, #0x1                   	// #1
  418830:	add	x12, x10, x9
  418834:	ldr	w13, [x12, #8]
  418838:	and	w14, w13, #0xff
  41883c:	cmp	w14, #0x5
  418840:	b.eq	41885c <_obstack_memory_used@@Base+0x1340>  // b.none
  418844:	cmp	w14, #0x1
  418848:	b.ne	418868 <_obstack_memory_used@@Base+0x134c>  // b.any
  41884c:	ldrsb	w10, [x10, x9]
  418850:	tbz	w10, #31, 418868 <_obstack_memory_used@@Base+0x134c>
  418854:	and	w10, w13, #0xffdfffff
  418858:	b	418864 <_obstack_memory_used@@Base+0x1348>
  41885c:	and	w10, w13, #0xffffff00
  418860:	orr	w10, w10, #0x7
  418864:	str	w10, [x12, #8]
  418868:	ldr	x10, [x20, #16]
  41886c:	cmp	x11, x10
  418870:	b.cs	418884 <_obstack_memory_used@@Base+0x1368>  // b.hs, b.nlast
  418874:	ldr	x10, [x20]
  418878:	add	x9, x9, #0x10
  41887c:	add	x11, x11, #0x1
  418880:	b	418830 <_obstack_memory_used@@Base+0x1314>
  418884:	ldrb	w9, [x20, #176]
  418888:	b	418554 <_obstack_memory_used@@Base+0x1038>
  41888c:	ldur	w0, [x29, #-12]
  418890:	b	418798 <_obstack_memory_used@@Base+0x127c>
  418894:	mov	w0, #0xc                   	// #12
  418898:	stp	xzr, xzr, [x29, #-40]
  41889c:	stur	w0, [x29, #-12]
  4188a0:	b	418798 <_obstack_memory_used@@Base+0x127c>
  4188a4:	bl	402920 <abort@plt>
  4188a8:	adrp	x9, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  4188ac:	ldr	x8, [x9, #3552]
  4188b0:	str	x0, [x9, #3552]
  4188b4:	mov	x0, x8
  4188b8:	ret
  4188bc:	stp	x29, x30, [sp, #-48]!
  4188c0:	stp	x20, x19, [sp, #32]
  4188c4:	ldr	x20, [x0, #32]
  4188c8:	str	x21, [sp, #16]
  4188cc:	ldr	x21, [x0]
  4188d0:	movi	v0.2d, #0x0
  4188d4:	stp	q0, q0, [x20, #224]
  4188d8:	stp	q0, q0, [x20, #192]
  4188dc:	stp	q0, q0, [x20, #160]
  4188e0:	stp	q0, q0, [x20, #128]
  4188e4:	stp	q0, q0, [x20, #96]
  4188e8:	stp	q0, q0, [x20, #64]
  4188ec:	stp	q0, q0, [x20, #32]
  4188f0:	stp	q0, q0, [x20]
  4188f4:	ldr	x1, [x21, #72]
  4188f8:	mov	x2, x20
  4188fc:	mov	x29, sp
  418900:	mov	x19, x0
  418904:	bl	418978 <_obstack_memory_used@@Base+0x145c>
  418908:	ldp	x8, x1, [x21, #72]
  41890c:	cmp	x8, x1
  418910:	b.eq	418924 <_obstack_memory_used@@Base+0x1408>  // b.none
  418914:	mov	x0, x19
  418918:	mov	x2, x20
  41891c:	bl	418978 <_obstack_memory_used@@Base+0x145c>
  418920:	ldr	x8, [x21, #72]
  418924:	ldr	x1, [x21, #88]
  418928:	cmp	x8, x1
  41892c:	b.eq	418940 <_obstack_memory_used@@Base+0x1424>  // b.none
  418930:	mov	x0, x19
  418934:	mov	x2, x20
  418938:	bl	418978 <_obstack_memory_used@@Base+0x145c>
  41893c:	ldr	x8, [x21, #72]
  418940:	ldr	x1, [x21, #96]
  418944:	cmp	x8, x1
  418948:	b.eq	418958 <_obstack_memory_used@@Base+0x143c>  // b.none
  41894c:	mov	x0, x19
  418950:	mov	x2, x20
  418954:	bl	418978 <_obstack_memory_used@@Base+0x145c>
  418958:	ldrb	w8, [x19, #56]
  41895c:	ldr	x21, [sp, #16]
  418960:	mov	w0, wzr
  418964:	orr	w8, w8, #0x8
  418968:	strb	w8, [x19, #56]
  41896c:	ldp	x20, x19, [sp, #32]
  418970:	ldp	x29, x30, [sp], #48
  418974:	ret
  418978:	sub	sp, sp, #0x1e0
  41897c:	stp	x29, x30, [sp, #384]
  418980:	stp	x28, x27, [sp, #400]
  418984:	stp	x26, x25, [sp, #416]
  418988:	stp	x24, x23, [sp, #432]
  41898c:	stp	x22, x21, [sp, #448]
  418990:	stp	x20, x19, [sp, #464]
  418994:	ldr	x28, [x0]
  418998:	mov	x20, x2
  41899c:	mov	x23, x0
  4189a0:	add	x29, sp, #0x180
  4189a4:	ldr	w8, [x28, #180]
  4189a8:	cmp	w8, #0x1
  4189ac:	b.ne	4189cc <_obstack_memory_used@@Base+0x14b0>  // b.any
  4189b0:	ldrb	w8, [x23, #26]
  4189b4:	ubfx	w8, w8, #6, #1
  4189b8:	str	w8, [sp, #68]
  4189bc:	ldr	x8, [x1, #16]
  4189c0:	cmp	x8, #0x1
  4189c4:	b.ge	4189dc <_obstack_memory_used@@Base+0x14c0>  // b.tcont
  4189c8:	b	41908c <_obstack_memory_used@@Base+0x1b70>
  4189cc:	str	wzr, [sp, #68]
  4189d0:	ldr	x8, [x1, #16]
  4189d4:	cmp	x8, #0x1
  4189d8:	b.lt	41908c <_obstack_memory_used@@Base+0x1b70>  // b.tstop
  4189dc:	add	x8, x20, #0x3
  4189e0:	str	x8, [sp, #16]
  4189e4:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x11ae4>
  4189e8:	ldr	q0, [x8, #3808]
  4189ec:	add	x9, sp, #0x68
  4189f0:	mov	w8, #0x2                   	// #2
  4189f4:	mov	x25, xzr
  4189f8:	mov	w26, #0x1                   	// #1
  4189fc:	orr	x9, x9, #0x1
  418a00:	str	q0, [sp, #48]
  418a04:	dup	v0.2d, x8
  418a08:	str	x9, [sp, #8]
  418a0c:	str	q0, [sp, #80]
  418a10:	stp	x23, x28, [sp, #24]
  418a14:	str	x1, [sp, #72]
  418a18:	b	418a30 <_obstack_memory_used@@Base+0x1514>
  418a1c:	ldr	x1, [sp, #72]
  418a20:	add	x25, x25, #0x1
  418a24:	ldr	x8, [x1, #16]
  418a28:	cmp	x25, x8
  418a2c:	b.ge	41908c <_obstack_memory_used@@Base+0x1b70>  // b.tcont
  418a30:	ldr	x8, [x1, #24]
  418a34:	ldr	x10, [x28]
  418a38:	ldr	x19, [x8, x25, lsl #3]
  418a3c:	add	x9, x10, x19, lsl #4
  418a40:	ldrb	w8, [x9, #8]
  418a44:	sub	w11, w8, #0x1
  418a48:	cmp	w11, #0x6
  418a4c:	b.hi	418a1c <_obstack_memory_used@@Base+0x1500>  // b.pmore
  418a50:	adrp	x14, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  418a54:	add	x14, x14, #0x62c
  418a58:	adr	x12, 418a1c <_obstack_memory_used@@Base+0x1500>
  418a5c:	ldrh	w13, [x14, x11, lsl #1]
  418a60:	add	x12, x12, x13, lsl #2
  418a64:	br	x12
  418a68:	ldrb	w21, [x9]
  418a6c:	ldr	w8, [sp, #68]
  418a70:	strb	w26, [x20, x21]
  418a74:	cbz	w8, 418a88 <_obstack_memory_used@@Base+0x156c>
  418a78:	bl	4026a0 <__ctype_tolower_loc@plt>
  418a7c:	ldr	x8, [x0]
  418a80:	ldrsw	x8, [x8, x21, lsl #2]
  418a84:	strb	w26, [x20, x8]
  418a88:	ldrb	w8, [x23, #26]
  418a8c:	tbz	w8, #6, 418a1c <_obstack_memory_used@@Base+0x1500>
  418a90:	ldr	w8, [x28, #180]
  418a94:	cmp	w8, #0x2
  418a98:	b.lt	418a1c <_obstack_memory_used@@Base+0x1500>  // b.tstop
  418a9c:	ldr	x9, [x28]
  418aa0:	lsl	x8, x19, #4
  418aa4:	add	x10, x19, #0x1
  418aa8:	mov	w14, #0x1                   	// #1
  418aac:	ldrb	w9, [x9, x8]
  418ab0:	movk	w14, #0x20, lsl #16
  418ab4:	strb	w9, [sp, #104]
  418ab8:	ldr	x9, [x28, #16]
  418abc:	cmp	x10, x9
  418ac0:	ldr	x9, [sp, #8]
  418ac4:	b.cs	418b04 <_obstack_memory_used@@Base+0x15e8>  // b.hs, b.nlast
  418ac8:	ldr	x9, [sp, #8]
  418acc:	ldr	x11, [x28]
  418ad0:	add	w13, w14, #0xfe
  418ad4:	add	x11, x11, x8
  418ad8:	ldr	w12, [x11, #24]
  418adc:	and	w12, w12, w13
  418ae0:	cmp	w12, w14
  418ae4:	b.ne	418b04 <_obstack_memory_used@@Base+0x15e8>  // b.any
  418ae8:	ldrb	w11, [x11, #16]
  418aec:	add	x10, x10, #0x1
  418af0:	add	x8, x8, #0x10
  418af4:	strb	w11, [x9], #1
  418af8:	ldr	x11, [x28, #16]
  418afc:	cmp	x10, x11
  418b00:	b.cc	418acc <_obstack_memory_used@@Base+0x15b0>  // b.lo, b.ul, b.last
  418b04:	add	x8, sp, #0x68
  418b08:	sub	x22, x9, x8
  418b0c:	sub	x0, x29, #0xc
  418b10:	add	x1, sp, #0x68
  418b14:	sub	x3, x29, #0x18
  418b18:	mov	x2, x22
  418b1c:	stur	xzr, [x29, #-24]
  418b20:	bl	417134 <wcrtomb@plt+0x144d4>
  418b24:	cmp	x0, x22
  418b28:	b.ne	418a1c <_obstack_memory_used@@Base+0x1500>  // b.any
  418b2c:	ldur	w0, [x29, #-12]
  418b30:	bl	402c10 <towlower@plt>
  418b34:	mov	w1, w0
  418b38:	add	x0, sp, #0x68
  418b3c:	sub	x2, x29, #0x18
  418b40:	bl	402c60 <wcrtomb@plt>
  418b44:	cmn	x0, #0x1
  418b48:	b.eq	418a1c <_obstack_memory_used@@Base+0x1500>  // b.none
  418b4c:	ldrb	w8, [sp, #104]
  418b50:	strb	w26, [x20, x8]
  418b54:	b	418a1c <_obstack_memory_used@@Base+0x1500>
  418b58:	lsl	x22, x19, #4
  418b5c:	ldr	x8, [x10, x22]
  418b60:	ldr	x19, [x8]
  418b64:	ldr	w8, [sp, #68]
  418b68:	cbz	w8, 418cd8 <_obstack_memory_used@@Base+0x17bc>
  418b6c:	ldr	x9, [sp, #16]
  418b70:	mov	x27, xzr
  418b74:	mov	w8, #0x83                  	// #131
  418b78:	b	418ba0 <_obstack_memory_used@@Base+0x1684>
  418b7c:	bl	4026a0 <__ctype_tolower_loc@plt>
  418b80:	ldr	x8, [x0]
  418b84:	ldr	w8, [x8, x27, lsl #2]
  418b88:	strb	w26, [x20, w8, sxtw]
  418b8c:	add	x27, x27, #0x1
  418b90:	add	w8, w21, #0x1
  418b94:	cmp	x27, #0x40
  418b98:	add	x9, x24, #0x1
  418b9c:	b.eq	418d40 <_obstack_memory_used@@Base+0x1824>  // b.none
  418ba0:	lsr	x10, x19, x27
  418ba4:	mov	w21, w8
  418ba8:	mov	x24, x9
  418bac:	tbz	w10, #0, 418b8c <_obstack_memory_used@@Base+0x1670>
  418bb0:	add	w8, w27, #0x80
  418bb4:	cmp	w8, #0x180
  418bb8:	strb	w26, [x20, x27]
  418bbc:	b.cc	418b7c <_obstack_memory_used@@Base+0x1660>  // b.lo, b.ul, b.last
  418bc0:	mov	w8, w27
  418bc4:	b	418b88 <_obstack_memory_used@@Base+0x166c>
  418bc8:	ldr	w8, [x28, #180]
  418bcc:	ldr	x22, [x9]
  418bd0:	cmp	w8, #0x2
  418bd4:	b.lt	418c30 <_obstack_memory_used@@Base+0x1714>  // b.tstop
  418bd8:	ldr	x8, [x22, #72]
  418bdc:	cbnz	x8, 418bf0 <_obstack_memory_used@@Base+0x16d4>
  418be0:	ldrb	w8, [x22, #32]
  418be4:	tbnz	w8, #0, 418bf0 <_obstack_memory_used@@Base+0x16d4>
  418be8:	ldr	x8, [x22, #64]
  418bec:	cbz	x8, 418c30 <_obstack_memory_used@@Base+0x1714>
  418bf0:	sturb	wzr, [x29, #-24]
  418bf4:	b	418c04 <_obstack_memory_used@@Base+0x16e8>
  418bf8:	add	w8, w8, #0x1
  418bfc:	sturb	w8, [x29, #-24]
  418c00:	tbnz	w8, #8, 418a1c <_obstack_memory_used@@Base+0x1500>
  418c04:	sub	x1, x29, #0x18
  418c08:	add	x3, sp, #0x68
  418c0c:	mov	w2, #0x1                   	// #1
  418c10:	mov	x0, xzr
  418c14:	str	xzr, [sp, #104]
  418c18:	bl	417134 <wcrtomb@plt+0x144d4>
  418c1c:	ldurb	w8, [x29, #-24]
  418c20:	cmn	x0, #0x2
  418c24:	b.ne	418bf8 <_obstack_memory_used@@Base+0x16dc>  // b.any
  418c28:	strb	w26, [x20, x8]
  418c2c:	b	418bf8 <_obstack_memory_used@@Base+0x16dc>
  418c30:	ldr	x8, [x22, #40]
  418c34:	cmp	x8, #0x1
  418c38:	b.lt	418a1c <_obstack_memory_used@@Base+0x1500>  // b.tstop
  418c3c:	ldr	w8, [sp, #68]
  418c40:	tbz	w8, #0, 418fd0 <_obstack_memory_used@@Base+0x1ab4>
  418c44:	mov	x21, xzr
  418c48:	b	418c5c <_obstack_memory_used@@Base+0x1740>
  418c4c:	ldr	x8, [x22, #40]
  418c50:	add	x21, x21, #0x1
  418c54:	cmp	x21, x8
  418c58:	b.ge	418a1c <_obstack_memory_used@@Base+0x1500>  // b.tcont
  418c5c:	stur	xzr, [x29, #-24]
  418c60:	ldr	x8, [x22]
  418c64:	add	x0, sp, #0x68
  418c68:	sub	x2, x29, #0x18
  418c6c:	ldr	w1, [x8, x21, lsl #2]
  418c70:	bl	402c60 <wcrtomb@plt>
  418c74:	cmn	x0, #0x1
  418c78:	b.eq	418c94 <_obstack_memory_used@@Base+0x1778>  // b.none
  418c7c:	ldrb	w19, [sp, #104]
  418c80:	strb	w26, [x20, x19]
  418c84:	bl	4026a0 <__ctype_tolower_loc@plt>
  418c88:	ldr	x8, [x0]
  418c8c:	ldrsw	x8, [x8, x19, lsl #2]
  418c90:	strb	w26, [x20, x8]
  418c94:	ldrb	w8, [x23, #26]
  418c98:	tbz	w8, #6, 418c4c <_obstack_memory_used@@Base+0x1730>
  418c9c:	ldr	w8, [x28, #180]
  418ca0:	cmp	w8, #0x2
  418ca4:	b.lt	418c4c <_obstack_memory_used@@Base+0x1730>  // b.tstop
  418ca8:	ldr	x8, [x22]
  418cac:	ldr	w0, [x8, x21, lsl #2]
  418cb0:	bl	402c10 <towlower@plt>
  418cb4:	mov	w1, w0
  418cb8:	add	x0, sp, #0x68
  418cbc:	sub	x2, x29, #0x18
  418cc0:	bl	402c60 <wcrtomb@plt>
  418cc4:	cmn	x0, #0x1
  418cc8:	b.eq	418c4c <_obstack_memory_used@@Base+0x1730>  // b.none
  418ccc:	ldrb	w8, [sp, #104]
  418cd0:	strb	w26, [x20, x8]
  418cd4:	b	418c4c <_obstack_memory_used@@Base+0x1730>
  418cd8:	ldr	q1, [sp, #48]
  418cdc:	mov	x8, xzr
  418ce0:	dup	v0.2d, x19
  418ce4:	mov	w10, #0x2                   	// #2
  418ce8:	b	418d00 <_obstack_memory_used@@Base+0x17e4>
  418cec:	ldr	q2, [sp, #80]
  418cf0:	add	x8, x8, #0x2
  418cf4:	cmp	x8, #0x40
  418cf8:	add	v1.2d, v1.2d, v2.2d
  418cfc:	b.eq	418da8 <_obstack_memory_used@@Base+0x188c>  // b.none
  418d00:	dup	v2.2d, x26
  418d04:	ushl	v2.2d, v2.2d, v1.2d
  418d08:	cmtst	v3.2d, v2.2d, v0.2d
  418d0c:	xtn	v3.2s, v3.2d
  418d10:	and	v2.16b, v2.16b, v0.16b
  418d14:	fmov	w9, s3
  418d18:	tbz	w9, #0, 418d20 <_obstack_memory_used@@Base+0x1804>
  418d1c:	strb	w26, [x20, x8]
  418d20:	cmeq	v2.2d, v2.2d, #0
  418d24:	mvn	v2.16b, v2.16b
  418d28:	xtn	v2.2s, v2.2d
  418d2c:	mov	w9, v2.s[1]
  418d30:	tbz	w9, #0, 418cec <_obstack_memory_used@@Base+0x17d0>
  418d34:	add	x9, x20, x8
  418d38:	strb	w26, [x9, #1]
  418d3c:	b	418cec <_obstack_memory_used@@Base+0x17d0>
  418d40:	ldr	x8, [x28]
  418d44:	mov	x28, xzr
  418d48:	str	x22, [sp, #40]
  418d4c:	ldr	x8, [x8, x22]
  418d50:	ldr	x23, [x8, #8]
  418d54:	b	418d80 <_obstack_memory_used@@Base+0x1864>
  418d58:	bl	4026a0 <__ctype_tolower_loc@plt>
  418d5c:	ldr	x8, [x0]
  418d60:	ldr	w8, [x8, x27, lsl #2]
  418d64:	strb	w26, [x20, w8, sxtw]
  418d68:	add	x28, x28, #0x1
  418d6c:	add	x27, x27, #0x1
  418d70:	add	w21, w22, #0x1
  418d74:	cmp	x28, #0x40
  418d78:	add	x24, x19, #0x1
  418d7c:	b.eq	418e1c <_obstack_memory_used@@Base+0x1900>  // b.none
  418d80:	lsr	x8, x23, x28
  418d84:	mov	w22, w21
  418d88:	mov	x19, x24
  418d8c:	tbz	w8, #0, 418d68 <_obstack_memory_used@@Base+0x184c>
  418d90:	add	w8, w27, #0x80
  418d94:	cmp	w8, #0x180
  418d98:	strb	w26, [x20, x27]
  418d9c:	b.cc	418d58 <_obstack_memory_used@@Base+0x183c>  // b.lo, b.ul, b.last
  418da0:	mov	w8, w27
  418da4:	b	418d64 <_obstack_memory_used@@Base+0x1848>
  418da8:	ldr	x9, [x28]
  418dac:	ldr	q1, [sp, #48]
  418db0:	mov	x8, xzr
  418db4:	ldr	x9, [x9, x22]
  418db8:	add	x9, x9, #0x8
  418dbc:	ld1r	{v0.2d}, [x9]
  418dc0:	b	418dd8 <_obstack_memory_used@@Base+0x18bc>
  418dc4:	add	x8, x8, #0x2
  418dc8:	dup	v2.2d, x10
  418dcc:	cmp	x8, #0x40
  418dd0:	add	v1.2d, v1.2d, v2.2d
  418dd4:	b.eq	418e84 <_obstack_memory_used@@Base+0x1968>  // b.none
  418dd8:	dup	v2.2d, x26
  418ddc:	ushl	v2.2d, v2.2d, v1.2d
  418de0:	cmtst	v3.2d, v2.2d, v0.2d
  418de4:	xtn	v3.2s, v3.2d
  418de8:	and	v2.16b, v2.16b, v0.16b
  418dec:	fmov	w9, s3
  418df0:	tbz	w9, #0, 418dfc <_obstack_memory_used@@Base+0x18e0>
  418df4:	add	x9, x20, x8
  418df8:	strb	w26, [x9, #64]
  418dfc:	cmeq	v2.2d, v2.2d, #0
  418e00:	mvn	v2.16b, v2.16b
  418e04:	xtn	v2.2s, v2.2d
  418e08:	mov	w9, v2.s[1]
  418e0c:	tbz	w9, #0, 418dc4 <_obstack_memory_used@@Base+0x18a8>
  418e10:	add	x9, x20, x8
  418e14:	strb	w26, [x9, #65]
  418e18:	b	418dc4 <_obstack_memory_used@@Base+0x18a8>
  418e1c:	ldp	x8, x9, [sp, #32]
  418e20:	mov	x28, xzr
  418e24:	ldr	x8, [x8]
  418e28:	ldr	x8, [x8, x9]
  418e2c:	ldr	x23, [x8, #16]
  418e30:	b	418e5c <_obstack_memory_used@@Base+0x1940>
  418e34:	bl	4026a0 <__ctype_tolower_loc@plt>
  418e38:	ldr	x8, [x0]
  418e3c:	ldr	w8, [x8, x27, lsl #2]
  418e40:	strb	w26, [x20, w8, sxtw]
  418e44:	add	x28, x28, #0x1
  418e48:	add	x27, x27, #0x1
  418e4c:	add	w22, w24, #0x1
  418e50:	cmp	x28, #0x40
  418e54:	add	x19, x21, #0x1
  418e58:	b.eq	418ef8 <_obstack_memory_used@@Base+0x19dc>  // b.none
  418e5c:	lsr	x8, x23, x28
  418e60:	mov	w24, w22
  418e64:	mov	x21, x19
  418e68:	tbz	w8, #0, 418e44 <_obstack_memory_used@@Base+0x1928>
  418e6c:	add	w8, w27, #0x80
  418e70:	cmp	w8, #0x180
  418e74:	strb	w26, [x20, x27]
  418e78:	b.cc	418e34 <_obstack_memory_used@@Base+0x1918>  // b.lo, b.ul, b.last
  418e7c:	mov	w8, w27
  418e80:	b	418e40 <_obstack_memory_used@@Base+0x1924>
  418e84:	ldr	x9, [x28]
  418e88:	ldr	q1, [sp, #48]
  418e8c:	mov	x8, xzr
  418e90:	ldr	x9, [x9, x22]
  418e94:	add	x9, x9, #0x10
  418e98:	ld1r	{v0.2d}, [x9]
  418e9c:	b	418eb4 <_obstack_memory_used@@Base+0x1998>
  418ea0:	add	x8, x8, #0x2
  418ea4:	dup	v2.2d, x10
  418ea8:	cmp	x8, #0x40
  418eac:	add	v1.2d, v1.2d, v2.2d
  418eb0:	b.eq	418f58 <_obstack_memory_used@@Base+0x1a3c>  // b.none
  418eb4:	dup	v2.2d, x26
  418eb8:	ushl	v2.2d, v2.2d, v1.2d
  418ebc:	cmtst	v3.2d, v2.2d, v0.2d
  418ec0:	xtn	v3.2s, v3.2d
  418ec4:	and	v2.16b, v2.16b, v0.16b
  418ec8:	fmov	w9, s3
  418ecc:	tbz	w9, #0, 418ed8 <_obstack_memory_used@@Base+0x19bc>
  418ed0:	add	x9, x20, x8
  418ed4:	strb	w26, [x9, #128]
  418ed8:	cmeq	v2.2d, v2.2d, #0
  418edc:	mvn	v2.16b, v2.16b
  418ee0:	xtn	v2.2s, v2.2d
  418ee4:	mov	w9, v2.s[1]
  418ee8:	tbz	w9, #0, 418ea0 <_obstack_memory_used@@Base+0x1984>
  418eec:	add	x9, x20, x8
  418ef0:	strb	w26, [x9, #129]
  418ef4:	b	418ea0 <_obstack_memory_used@@Base+0x1984>
  418ef8:	ldp	x28, x9, [sp, #32]
  418efc:	ldr	x23, [sp, #24]
  418f00:	mov	x22, xzr
  418f04:	ldr	x8, [x28]
  418f08:	ldr	x8, [x8, x9]
  418f0c:	ldr	x19, [x8, #24]
  418f10:	b	418f3c <_obstack_memory_used@@Base+0x1a20>
  418f14:	bl	4026a0 <__ctype_tolower_loc@plt>
  418f18:	ldr	x8, [x0]
  418f1c:	ldr	w8, [x8, x27, lsl #2]
  418f20:	strb	w26, [x20, w8, sxtw]
  418f24:	add	x22, x22, #0x1
  418f28:	add	x27, x27, #0x1
  418f2c:	add	w24, w24, #0x1
  418f30:	cmp	x22, #0x40
  418f34:	add	x21, x21, #0x1
  418f38:	b.eq	418a1c <_obstack_memory_used@@Base+0x1500>  // b.none
  418f3c:	lsr	x8, x19, x22
  418f40:	tbz	w8, #0, 418f24 <_obstack_memory_used@@Base+0x1a08>
  418f44:	cmp	w24, #0x180
  418f48:	strb	w26, [x21]
  418f4c:	b.cc	418f14 <_obstack_memory_used@@Base+0x19f8>  // b.lo, b.ul, b.last
  418f50:	mov	w8, w27
  418f54:	b	418f20 <_obstack_memory_used@@Base+0x1a04>
  418f58:	ldr	x9, [x28]
  418f5c:	ldr	q1, [sp, #48]
  418f60:	mov	x8, xzr
  418f64:	ldr	x9, [x9, x22]
  418f68:	add	x9, x9, #0x18
  418f6c:	ld1r	{v0.2d}, [x9]
  418f70:	b	418f88 <_obstack_memory_used@@Base+0x1a6c>
  418f74:	add	x8, x8, #0x2
  418f78:	dup	v2.2d, x10
  418f7c:	cmp	x8, #0x40
  418f80:	add	v1.2d, v1.2d, v2.2d
  418f84:	b.eq	418a1c <_obstack_memory_used@@Base+0x1500>  // b.none
  418f88:	dup	v2.2d, x26
  418f8c:	ushl	v2.2d, v2.2d, v1.2d
  418f90:	cmtst	v3.2d, v2.2d, v0.2d
  418f94:	xtn	v3.2s, v3.2d
  418f98:	and	v2.16b, v2.16b, v0.16b
  418f9c:	fmov	w9, s3
  418fa0:	tbz	w9, #0, 418fac <_obstack_memory_used@@Base+0x1a90>
  418fa4:	add	x9, x20, x8
  418fa8:	strb	w26, [x9, #192]
  418fac:	cmeq	v2.2d, v2.2d, #0
  418fb0:	mvn	v2.16b, v2.16b
  418fb4:	xtn	v2.2s, v2.2d
  418fb8:	mov	w9, v2.s[1]
  418fbc:	mov	w10, #0x2                   	// #2
  418fc0:	tbz	w9, #0, 418f74 <_obstack_memory_used@@Base+0x1a58>
  418fc4:	add	x9, x20, x8
  418fc8:	strb	w26, [x9, #193]
  418fcc:	b	418f74 <_obstack_memory_used@@Base+0x1a58>
  418fd0:	mov	x19, xzr
  418fd4:	b	418fe8 <_obstack_memory_used@@Base+0x1acc>
  418fd8:	ldr	x8, [x22, #40]
  418fdc:	add	x19, x19, #0x1
  418fe0:	cmp	x19, x8
  418fe4:	b.ge	418a1c <_obstack_memory_used@@Base+0x1500>  // b.tcont
  418fe8:	stur	xzr, [x29, #-24]
  418fec:	ldr	x8, [x22]
  418ff0:	add	x0, sp, #0x68
  418ff4:	sub	x2, x29, #0x18
  418ff8:	ldr	w1, [x8, x19, lsl #2]
  418ffc:	bl	402c60 <wcrtomb@plt>
  419000:	cmn	x0, #0x1
  419004:	b.eq	419010 <_obstack_memory_used@@Base+0x1af4>  // b.none
  419008:	ldrb	w8, [sp, #104]
  41900c:	strb	w26, [x20, x8]
  419010:	ldrb	w8, [x23, #26]
  419014:	tbz	w8, #6, 418fd8 <_obstack_memory_used@@Base+0x1abc>
  419018:	ldr	w8, [x28, #180]
  41901c:	cmp	w8, #0x2
  419020:	b.lt	418fd8 <_obstack_memory_used@@Base+0x1abc>  // b.tstop
  419024:	ldr	x8, [x22]
  419028:	ldr	w0, [x8, x19, lsl #2]
  41902c:	bl	402c10 <towlower@plt>
  419030:	mov	w1, w0
  419034:	add	x0, sp, #0x68
  419038:	sub	x2, x29, #0x18
  41903c:	bl	402c60 <wcrtomb@plt>
  419040:	cmn	x0, #0x1
  419044:	b.eq	418fd8 <_obstack_memory_used@@Base+0x1abc>  // b.none
  419048:	ldrb	w8, [sp, #104]
  41904c:	strb	w26, [x20, x8]
  419050:	b	418fd8 <_obstack_memory_used@@Base+0x1abc>
  419054:	movi	v0.16b, #0x1
  419058:	cmp	w8, #0x2
  41905c:	stp	q0, q0, [x20, #224]
  419060:	stp	q0, q0, [x20, #192]
  419064:	stp	q0, q0, [x20, #160]
  419068:	stp	q0, q0, [x20, #128]
  41906c:	stp	q0, q0, [x20, #96]
  419070:	stp	q0, q0, [x20, #64]
  419074:	stp	q0, q0, [x20, #32]
  419078:	stp	q0, q0, [x20]
  41907c:	b.ne	41908c <_obstack_memory_used@@Base+0x1b70>  // b.any
  419080:	ldrb	w8, [x23, #56]
  419084:	orr	w8, w8, #0x1
  419088:	strb	w8, [x23, #56]
  41908c:	ldp	x20, x19, [sp, #464]
  419090:	ldp	x22, x21, [sp, #448]
  419094:	ldp	x24, x23, [sp, #432]
  419098:	ldp	x26, x25, [sp, #416]
  41909c:	ldp	x28, x27, [sp, #400]
  4190a0:	ldp	x29, x30, [sp, #384]
  4190a4:	add	sp, sp, #0x1e0
  4190a8:	ret
  4190ac:	stp	x29, x30, [sp, #-48]!
  4190b0:	stp	x20, x19, [sp, #32]
  4190b4:	mov	x19, x0
  4190b8:	stp	xzr, xzr, [x0]
  4190bc:	str	xzr, [x0, #16]
  4190c0:	mov	w0, #0x100                 	// #256
  4190c4:	stp	x22, x21, [sp, #16]
  4190c8:	mov	x29, sp
  4190cc:	mov	w21, w2
  4190d0:	mov	x20, x1
  4190d4:	bl	402730 <malloc@plt>
  4190d8:	str	x0, [x19, #32]
  4190dc:	cbz	x0, 419190 <_obstack_memory_used@@Base+0x1c74>
  4190e0:	mov	w8, #0xb2fc                	// #45820
  4190e4:	mov	w9, #0x2c6                 	// #710
  4190e8:	tst	w21, #0x1
  4190ec:	movk	w8, #0x3, lsl #16
  4190f0:	movk	w9, #0x101, lsl #16
  4190f4:	lsl	w10, w21, #21
  4190f8:	csel	x8, x9, x8, eq  // eq = none
  4190fc:	and	w9, w10, #0x400000
  419100:	orr	x22, x8, x9
  419104:	tbnz	w21, #2, 419114 <_obstack_memory_used@@Base+0x1bf8>
  419108:	ldrb	w8, [x19, #56]
  41910c:	and	w8, w8, #0x7f
  419110:	b	41912c <_obstack_memory_used@@Base+0x1c10>
  419114:	ldrb	w8, [x19, #56]
  419118:	mov	w9, #0xb2be                	// #45758
  41911c:	movk	w9, #0x143, lsl #16
  419120:	and	x9, x22, x9
  419124:	orr	x22, x9, #0x100
  419128:	orr	w8, w8, #0xffffff80
  41912c:	lsl	w9, w21, #1
  419130:	strb	w8, [x19, #56]
  419134:	and	w8, w8, #0xffffffef
  419138:	and	w9, w9, #0x10
  41913c:	orr	w8, w8, w9
  419140:	mov	x0, x20
  419144:	strb	w8, [x19, #56]
  419148:	str	xzr, [x19, #40]
  41914c:	bl	4025c0 <strlen@plt>
  419150:	mov	x2, x0
  419154:	mov	x0, x19
  419158:	mov	x1, x20
  41915c:	mov	x3, x22
  419160:	bl	417608 <_obstack_memory_used@@Base+0xec>
  419164:	cmp	w0, #0x10
  419168:	mov	w8, #0x8                   	// #8
  41916c:	csel	w20, w8, w0, eq  // eq = none
  419170:	cbnz	w20, 419198 <_obstack_memory_used@@Base+0x1c7c>
  419174:	mov	x0, x19
  419178:	bl	4188bc <_obstack_memory_used@@Base+0x13a0>
  41917c:	mov	w0, w20
  419180:	ldp	x20, x19, [sp, #32]
  419184:	ldp	x22, x21, [sp, #16]
  419188:	ldp	x29, x30, [sp], #48
  41918c:	ret
  419190:	mov	w20, #0xc                   	// #12
  419194:	b	41917c <_obstack_memory_used@@Base+0x1c60>
  419198:	ldr	x0, [x19, #32]
  41919c:	bl	402a10 <free@plt>
  4191a0:	str	xzr, [x19, #32]
  4191a4:	b	41917c <_obstack_memory_used@@Base+0x1c60>
  4191a8:	stp	x29, x30, [sp, #-48]!
  4191ac:	cmp	w0, #0x11
  4191b0:	stp	x22, x21, [sp, #16]
  4191b4:	stp	x20, x19, [sp, #32]
  4191b8:	mov	x29, sp
  4191bc:	b.cs	419234 <_obstack_memory_used@@Base+0x1d18>  // b.hs, b.nlast
  4191c0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4191c4:	add	x8, x8, #0x8f8
  4191c8:	ldr	x8, [x8, w0, uxtw #3]
  4191cc:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4191d0:	add	x9, x9, #0x775
  4191d4:	mov	x19, x2
  4191d8:	add	x1, x9, x8
  4191dc:	mov	w2, #0x5                   	// #5
  4191e0:	mov	x0, xzr
  4191e4:	mov	x20, x3
  4191e8:	bl	402b40 <dcgettext@plt>
  4191ec:	mov	x21, x0
  4191f0:	bl	4025c0 <strlen@plt>
  4191f4:	add	x22, x0, #0x1
  4191f8:	cbz	x20, 419214 <_obstack_memory_used@@Base+0x1cf8>
  4191fc:	cmp	x22, x20
  419200:	mov	x2, x22
  419204:	b.hi	419228 <_obstack_memory_used@@Base+0x1d0c>  // b.pmore
  419208:	mov	x0, x19
  41920c:	mov	x1, x21
  419210:	bl	402580 <memcpy@plt>
  419214:	mov	x0, x22
  419218:	ldp	x20, x19, [sp, #32]
  41921c:	ldp	x22, x21, [sp, #16]
  419220:	ldp	x29, x30, [sp], #48
  419224:	ret
  419228:	sub	x2, x20, #0x1
  41922c:	strb	wzr, [x19, x2]
  419230:	b	419208 <_obstack_memory_used@@Base+0x1cec>
  419234:	bl	402920 <abort@plt>
  419238:	stp	x29, x30, [sp, #-32]!
  41923c:	str	x19, [sp, #16]
  419240:	mov	x19, x0
  419244:	ldr	x0, [x0]
  419248:	mov	x29, sp
  41924c:	cbz	x0, 419254 <_obstack_memory_used@@Base+0x1d38>
  419250:	bl	41927c <_obstack_memory_used@@Base+0x1d60>
  419254:	ldr	x0, [x19, #32]
  419258:	stp	xzr, xzr, [x19]
  41925c:	bl	402a10 <free@plt>
  419260:	ldr	x0, [x19, #40]
  419264:	str	xzr, [x19, #32]
  419268:	bl	402a10 <free@plt>
  41926c:	str	xzr, [x19, #40]
  419270:	ldr	x19, [sp, #16]
  419274:	ldp	x29, x30, [sp], #32
  419278:	ret
  41927c:	stp	x29, x30, [sp, #-64]!
  419280:	stp	x24, x23, [sp, #16]
  419284:	stp	x22, x21, [sp, #32]
  419288:	stp	x20, x19, [sp, #48]
  41928c:	ldr	x8, [x0]
  419290:	mov	x19, x0
  419294:	mov	x29, sp
  419298:	cbz	x8, 419320 <_obstack_memory_used@@Base+0x1e04>
  41929c:	ldr	x9, [x19, #16]
  4192a0:	cbz	x9, 419320 <_obstack_memory_used@@Base+0x1e04>
  4192a4:	mov	w23, #0xff                  	// #255
  4192a8:	mov	x21, xzr
  4192ac:	mov	w22, #0x1                   	// #1
  4192b0:	movk	w23, #0x4, lsl #16
  4192b4:	add	x9, x8, x21
  4192b8:	ldr	w9, [x9, #8]
  4192bc:	and	w9, w9, w23
  4192c0:	cmp	w9, #0x3
  4192c4:	b.eq	4192f8 <_obstack_memory_used@@Base+0x1ddc>  // b.none
  4192c8:	cmp	w9, #0x6
  4192cc:	b.ne	419304 <_obstack_memory_used@@Base+0x1de8>  // b.any
  4192d0:	ldr	x20, [x8, x21]
  4192d4:	ldr	x0, [x20]
  4192d8:	bl	402a10 <free@plt>
  4192dc:	ldr	x0, [x20, #8]
  4192e0:	bl	402a10 <free@plt>
  4192e4:	ldr	x0, [x20, #16]
  4192e8:	bl	402a10 <free@plt>
  4192ec:	ldr	x0, [x20, #24]
  4192f0:	bl	402a10 <free@plt>
  4192f4:	b	4192fc <_obstack_memory_used@@Base+0x1de0>
  4192f8:	ldr	x20, [x8, x21]
  4192fc:	mov	x0, x20
  419300:	bl	402a10 <free@plt>
  419304:	ldr	x8, [x19, #16]
  419308:	cmp	x22, x8
  41930c:	b.cs	419320 <_obstack_memory_used@@Base+0x1e04>  // b.hs, b.nlast
  419310:	ldr	x8, [x19]
  419314:	add	x22, x22, #0x1
  419318:	add	x21, x21, #0x10
  41931c:	b	4192b4 <_obstack_memory_used@@Base+0x1d98>
  419320:	ldr	x0, [x19, #24]
  419324:	bl	402a10 <free@plt>
  419328:	ldr	x8, [x19, #16]
  41932c:	cbz	x8, 419384 <_obstack_memory_used@@Base+0x1e68>
  419330:	mov	x20, xzr
  419334:	mov	w21, #0x10                  	// #16
  419338:	b	419350 <_obstack_memory_used@@Base+0x1e34>
  41933c:	ldr	x8, [x19, #16]
  419340:	add	x20, x20, #0x1
  419344:	add	x21, x21, #0x18
  419348:	cmp	x20, x8
  41934c:	b.cs	419384 <_obstack_memory_used@@Base+0x1e68>  // b.hs, b.nlast
  419350:	ldr	x8, [x19, #48]
  419354:	cbz	x8, 419360 <_obstack_memory_used@@Base+0x1e44>
  419358:	ldr	x0, [x8, x21]
  41935c:	bl	402a10 <free@plt>
  419360:	ldr	x8, [x19, #56]
  419364:	cbz	x8, 419370 <_obstack_memory_used@@Base+0x1e54>
  419368:	ldr	x0, [x8, x21]
  41936c:	bl	402a10 <free@plt>
  419370:	ldr	x8, [x19, #40]
  419374:	cbz	x8, 41933c <_obstack_memory_used@@Base+0x1e20>
  419378:	ldr	x0, [x8, x21]
  41937c:	bl	402a10 <free@plt>
  419380:	b	41933c <_obstack_memory_used@@Base+0x1e20>
  419384:	ldr	x0, [x19, #40]
  419388:	bl	402a10 <free@plt>
  41938c:	ldr	x0, [x19, #48]
  419390:	bl	402a10 <free@plt>
  419394:	ldr	x0, [x19, #56]
  419398:	bl	402a10 <free@plt>
  41939c:	ldr	x0, [x19]
  4193a0:	bl	402a10 <free@plt>
  4193a4:	ldr	x0, [x19, #64]
  4193a8:	cbz	x0, 41940c <_obstack_memory_used@@Base+0x1ef0>
  4193ac:	mov	x20, xzr
  4193b0:	mov	w21, #0x18                  	// #24
  4193b4:	madd	x23, x20, x21, x0
  4193b8:	mov	x22, x23
  4193bc:	ldr	x8, [x22], #16
  4193c0:	cmp	x8, #0x1
  4193c4:	b.lt	4193e8 <_obstack_memory_used@@Base+0x1ecc>  // b.tstop
  4193c8:	mov	x24, xzr
  4193cc:	ldr	x8, [x22]
  4193d0:	ldr	x0, [x8, x24, lsl #3]
  4193d4:	bl	41bfd8 <_obstack_memory_used@@Base+0x4abc>
  4193d8:	ldr	x8, [x23]
  4193dc:	add	x24, x24, #0x1
  4193e0:	cmp	x24, x8
  4193e4:	b.lt	4193cc <_obstack_memory_used@@Base+0x1eb0>  // b.tstop
  4193e8:	ldr	x0, [x22]
  4193ec:	bl	402a10 <free@plt>
  4193f0:	ldr	x8, [x19, #136]
  4193f4:	cmp	x20, x8
  4193f8:	b.cs	419408 <_obstack_memory_used@@Base+0x1eec>  // b.hs, b.nlast
  4193fc:	ldr	x0, [x19, #64]
  419400:	add	x20, x20, #0x1
  419404:	b	4193b4 <_obstack_memory_used@@Base+0x1e98>
  419408:	ldr	x0, [x19, #64]
  41940c:	bl	402a10 <free@plt>
  419410:	ldr	x0, [x19, #120]
  419414:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  419418:	add	x8, x8, #0x980
  41941c:	cmp	x0, x8
  419420:	b.eq	419428 <_obstack_memory_used@@Base+0x1f0c>  // b.none
  419424:	bl	402a10 <free@plt>
  419428:	ldr	x0, [x19, #224]
  41942c:	bl	402a10 <free@plt>
  419430:	mov	x0, x19
  419434:	ldp	x20, x19, [sp, #48]
  419438:	ldp	x22, x21, [sp, #32]
  41943c:	ldp	x24, x23, [sp, #16]
  419440:	ldp	x29, x30, [sp], #64
  419444:	b	402a10 <free@plt>
  419448:	cmp	w4, #0x7
  41944c:	b.ls	419458 <_obstack_memory_used@@Base+0x1f3c>  // b.plast
  419450:	mov	w0, #0x2                   	// #2
  419454:	ret
  419458:	sub	sp, sp, #0x50
  41945c:	str	x23, [sp, #32]
  419460:	stp	x22, x21, [sp, #48]
  419464:	stp	x20, x19, [sp, #64]
  419468:	mov	w22, w4
  41946c:	mov	x19, x3
  419470:	mov	x21, x2
  419474:	mov	x20, x1
  419478:	mov	x23, x0
  41947c:	stp	x29, x30, [sp, #16]
  419480:	add	x29, sp, #0x10
  419484:	tbnz	w4, #2, 4194c0 <_obstack_memory_used@@Base+0x1fa4>
  419488:	mov	x0, x20
  41948c:	bl	4025c0 <strlen@plt>
  419490:	mov	x2, x0
  419494:	mov	x3, xzr
  419498:	ldrb	w8, [x23, #56]
  41949c:	tbz	w8, #4, 4194cc <_obstack_memory_used@@Base+0x1fb0>
  4194a0:	str	w22, [sp]
  4194a4:	mov	x0, x23
  4194a8:	mov	x1, x20
  4194ac:	mov	x4, x2
  4194b0:	mov	x5, x2
  4194b4:	mov	x6, xzr
  4194b8:	mov	x7, xzr
  4194bc:	b	4194e8 <_obstack_memory_used@@Base+0x1fcc>
  4194c0:	ldp	x3, x2, [x19]
  4194c4:	ldrb	w8, [x23, #56]
  4194c8:	tbnz	w8, #4, 4194a0 <_obstack_memory_used@@Base+0x1f84>
  4194cc:	mov	x0, x23
  4194d0:	mov	x1, x20
  4194d4:	mov	x4, x2
  4194d8:	mov	x5, x2
  4194dc:	mov	x6, x21
  4194e0:	mov	x7, x19
  4194e4:	str	w22, [sp]
  4194e8:	bl	41950c <_obstack_memory_used@@Base+0x1ff0>
  4194ec:	ldp	x20, x19, [sp, #64]
  4194f0:	ldp	x22, x21, [sp, #48]
  4194f4:	ldr	x23, [sp, #32]
  4194f8:	ldp	x29, x30, [sp, #16]
  4194fc:	cmp	w0, #0x0
  419500:	cset	w0, ne  // ne = any
  419504:	add	sp, sp, #0x50
  419508:	ret
  41950c:	stp	x29, x30, [sp, #-96]!
  419510:	stp	x28, x27, [sp, #16]
  419514:	stp	x26, x25, [sp, #32]
  419518:	stp	x24, x23, [sp, #48]
  41951c:	stp	x22, x21, [sp, #64]
  419520:	stp	x20, x19, [sp, #80]
  419524:	mov	x29, sp
  419528:	sub	sp, sp, #0x2e0
  41952c:	ldr	x24, [x0]
  419530:	movi	v0.2d, #0x0
  419534:	stp	q0, q0, [sp, #528]
  419538:	stp	q0, q0, [sp, #496]
  41953c:	stp	q0, q0, [sp, #464]
  419540:	stp	q0, q0, [sp, #432]
  419544:	stp	q0, q0, [sp, #400]
  419548:	stp	q0, q0, [sp, #368]
  41954c:	stp	q0, q0, [sp, #336]
  419550:	stp	q0, q0, [sp, #304]
  419554:	str	x24, [sp, #456]
  419558:	ldr	x8, [x0, #32]
  41955c:	mov	x21, x6
  419560:	mov	x27, x5
  419564:	mov	x26, x3
  419568:	mov	x28, x2
  41956c:	str	x7, [sp, #144]
  419570:	str	x1, [sp, #272]
  419574:	cbz	x8, 419594 <_obstack_memory_used@@Base+0x2078>
  419578:	ldrb	w9, [x0, #56]
  41957c:	mov	w10, #0x9                   	// #9
  419580:	and	w9, w9, w10
  419584:	cmp	w9, #0x8
  419588:	ccmp	x26, x4, #0x4, eq  // eq = none
  41958c:	csel	x22, x8, xzr, ne  // ne = any
  419590:	b	419598 <_obstack_memory_used@@Base+0x207c>
  419594:	mov	x22, xzr
  419598:	ldr	x8, [x0, #48]
  41959c:	ldr	x9, [x0, #16]
  4195a0:	mvn	x10, x8
  4195a4:	add	x10, x10, x21
  4195a8:	cmp	x8, x21
  4195ac:	csel	x23, x10, xzr, cc  // cc = lo, ul, last
  4195b0:	cbz	x9, 41b72c <_obstack_memory_used@@Base+0x4210>
  4195b4:	ldr	x10, [x24, #72]
  4195b8:	cbz	x10, 41b72c <_obstack_memory_used@@Base+0x4210>
  4195bc:	ldr	x9, [x24, #80]
  4195c0:	cbz	x9, 41b72c <_obstack_memory_used@@Base+0x4210>
  4195c4:	ldr	x8, [x24, #88]
  4195c8:	cbz	x8, 41b72c <_obstack_memory_used@@Base+0x4210>
  4195cc:	ldr	x11, [x24, #96]
  4195d0:	cbz	x11, 41b72c <_obstack_memory_used@@Base+0x4210>
  4195d4:	ldr	x10, [x10, #16]
  4195d8:	ldr	x11, [x0, #40]
  4195dc:	str	x11, [sp, #248]
  4195e0:	cbnz	x10, 4195ec <_obstack_memory_used@@Base+0x20d0>
  4195e4:	ldr	x9, [x9, #16]
  4195e8:	cbz	x9, 41b70c <_obstack_memory_used@@Base+0x41f0>
  4195ec:	mov	x25, x4
  4195f0:	sub	x8, x21, x23
  4195f4:	str	x8, [sp, #200]
  4195f8:	cbz	x8, 419604 <_obstack_memory_used@@Base+0x20e8>
  4195fc:	mov	w8, #0x1                   	// #1
  419600:	b	419610 <_obstack_memory_used@@Base+0x20f4>
  419604:	ldr	x8, [x24, #152]
  419608:	cmp	x8, #0x0
  41960c:	cset	w8, ne  // ne = any
  419610:	str	w8, [sp, #172]
  419614:	ldr	x8, [x24, #16]
  419618:	ldrsw	x10, [x24, #180]
  41961c:	ldr	x9, [x0, #24]
  419620:	ldr	x14, [sp, #248]
  419624:	add	x12, x8, #0x1
  419628:	cmp	x12, x10
  41962c:	add	x11, x28, #0x1
  419630:	ldr	x13, [sp, #272]
  419634:	and	x12, x9, #0x400000
  419638:	ubfx	x9, x9, #22, #1
  41963c:	csinc	x8, x10, x8, lt  // lt = tstop
  419640:	strb	w9, [sp, #440]
  419644:	orr	x9, x14, x12
  419648:	cmp	x11, x8
  41964c:	csinc	x19, x8, x28, ge  // ge = tcont
  419650:	cmp	x9, #0x0
  419654:	cset	w20, ne  // ne = any
  419658:	str	x13, [sp, #304]
  41965c:	stp	x28, x28, [sp, #384]
  419660:	str	x14, [sp, #424]
  419664:	str	w10, [sp, #448]
  419668:	strb	w20, [sp, #443]
  41966c:	ldrb	w8, [x24, #176]
  419670:	cmp	w10, #0x2
  419674:	str	x0, [sp, #208]
  419678:	stp	x28, x28, [sp, #400]
  41967c:	ubfx	w9, w8, #2, #1
  419680:	ubfx	w8, w8, #3, #1
  419684:	strb	w9, [sp, #441]
  419688:	strb	w8, [sp, #442]
  41968c:	b.lt	4196ac <_obstack_memory_used@@Base+0x2190>  // b.tstop
  419690:	lsr	x8, x19, #61
  419694:	cbnz	x8, 41b958 <_obstack_memory_used@@Base+0x443c>
  419698:	lsl	x0, x19, #2
  41969c:	bl	402730 <malloc@plt>
  4196a0:	cbz	x0, 41b958 <_obstack_memory_used@@Base+0x443c>
  4196a4:	ldr	x13, [sp, #272]
  4196a8:	str	x0, [sp, #320]
  4196ac:	cbz	w20, 4196cc <_obstack_memory_used@@Base+0x21b0>
  4196b0:	mov	x0, x19
  4196b4:	bl	402730 <malloc@plt>
  4196b8:	cbz	x0, 41b958 <_obstack_memory_used@@Base+0x443c>
  4196bc:	ldr	x13, [sp, #272]
  4196c0:	mov	w8, wzr
  4196c4:	str	x0, [sp, #312]
  4196c8:	b	4196d0 <_obstack_memory_used@@Base+0x21b4>
  4196cc:	mov	w8, #0x1                   	// #1
  4196d0:	add	x9, x24, #0xb8
  4196d4:	str	x19, [sp, #368]
  4196d8:	str	x9, [sp, #432]
  4196dc:	ldrb	w9, [x24, #176]
  4196e0:	ldr	w10, [x29, #96]
  4196e4:	stp	x23, x21, [sp, #128]
  4196e8:	ubfx	w9, w9, #4, #1
  4196ec:	str	w10, [sp, #284]
  4196f0:	strb	w9, [sp, #446]
  4196f4:	cbz	w8, 41970c <_obstack_memory_used@@Base+0x21f0>
  4196f8:	str	x13, [sp, #312]
  4196fc:	ldr	w8, [x24, #180]
  419700:	cmp	w8, #0x1
  419704:	csel	x8, xzr, x28, gt
  419708:	b	419710 <_obstack_memory_used@@Base+0x21f4>
  41970c:	mov	x8, xzr
  419710:	stp	x8, x8, [sp, #352]
  419714:	ldr	x8, [sp, #208]
  419718:	stp	x27, x27, [sp, #400]
  41971c:	ldr	w9, [sp, #284]
  419720:	ldrb	w8, [x8, #56]
  419724:	lsr	w8, w8, #7
  419728:	strb	w8, [sp, #445]
  41972c:	ldr	x23, [x24, #152]
  419730:	mov	x8, #0xffffffffffffffff    	// #-1
  419734:	str	w9, [sp, #464]
  419738:	str	x8, [sp, #472]
  41973c:	lsl	x21, x23, #1
  419740:	cmp	x23, #0x1
  419744:	b.lt	419784 <_obstack_memory_used@@Base+0x2268>  // b.tstop
  419748:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  41974c:	movk	x8, #0x666, lsl #48
  419750:	cmp	x21, x8
  419754:	b.hi	41b958 <_obstack_memory_used@@Base+0x443c>  // b.pmore
  419758:	add	x8, x23, x23, lsl #2
  41975c:	lsl	x0, x8, #4
  419760:	bl	402730 <malloc@plt>
  419764:	mov	x20, x0
  419768:	str	x0, [sp, #520]
  41976c:	lsl	x0, x23, #4
  419770:	bl	402730 <malloc@plt>
  419774:	mov	w27, #0xc                   	// #12
  419778:	str	x0, [sp, #552]
  41977c:	cbz	x20, 41b6a0 <_obstack_memory_used@@Base+0x4184>
  419780:	cbz	x0, 41b6a0 <_obstack_memory_used@@Base+0x4184>
  419784:	ldr	x9, [sp, #200]
  419788:	mov	w8, #0x1                   	// #1
  41978c:	str	x21, [sp, #512]
  419790:	str	w8, [sp, #528]
  419794:	cmp	x9, #0x1
  419798:	str	x21, [sp, #544]
  41979c:	b.hi	4197a8 <_obstack_memory_used@@Base+0x228c>  // b.pmore
  4197a0:	ldrb	w8, [x24, #176]
  4197a4:	tbz	w8, #1, 4197c8 <_obstack_memory_used@@Base+0x22ac>
  4197a8:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  4197ac:	cmp	x19, x8
  4197b0:	b.hi	41b958 <_obstack_memory_used@@Base+0x443c>  // b.pmore
  4197b4:	lsl	x8, x19, #3
  4197b8:	add	x0, x8, #0x8
  4197bc:	bl	402730 <malloc@plt>
  4197c0:	str	x0, [sp, #488]
  4197c4:	cbz	x0, 41b958 <_obstack_memory_used@@Base+0x443c>
  4197c8:	ldr	w9, [sp, #284]
  4197cc:	mov	w10, #0x6                   	// #6
  4197d0:	stur	x26, [x29, #-176]
  4197d4:	add	x8, sp, #0x130
  4197d8:	tst	w9, #0x1
  4197dc:	mov	w9, #0x4                   	// #4
  4197e0:	csel	w9, w10, w9, eq  // eq = none
  4197e4:	str	w9, [sp, #416]
  4197e8:	ldr	w21, [x24, #180]
  4197ec:	cmp	x25, x26
  4197f0:	csel	x20, x25, x26, lt  // lt = tstop
  4197f4:	csel	x9, x26, x25, lt  // lt = tstop
  4197f8:	str	x9, [sp, #288]
  4197fc:	cbz	x22, 419814 <_obstack_memory_used@@Base+0x22f8>
  419800:	ldr	x11, [sp, #248]
  419804:	cmp	w21, #0x1
  419808:	b.ne	41981c <_obstack_memory_used@@Base+0x2300>  // b.any
  41980c:	mov	w9, #0x4                   	// #4
  419810:	b	419838 <_obstack_memory_used@@Base+0x231c>
  419814:	mov	w9, #0x8                   	// #8
  419818:	b	419850 <_obstack_memory_used@@Base+0x2334>
  41981c:	ldr	x9, [sp, #208]
  419820:	ldr	x9, [x9, #24]
  419824:	and	x9, x9, #0x400000
  419828:	orr	x9, x11, x9
  41982c:	cmp	x9, #0x0
  419830:	cset	w9, eq  // eq = none
  419834:	lsl	w9, w9, #2
  419838:	cmp	x25, x26
  41983c:	cset	w10, ge  // ge = tcont
  419840:	cmp	x11, #0x0
  419844:	cset	w11, ne  // ne = any
  419848:	bfi	w11, w10, #1, #1
  41984c:	orr	w9, w11, w9
  419850:	add	x8, x8, #0x38
  419854:	str	x8, [sp, #120]
  419858:	add	x8, sp, #0x130
  41985c:	cmp	x25, x26
  419860:	sub	x10, x29, #0xb0
  419864:	add	x8, x8, #0xc0
  419868:	ldr	x25, [sp, #288]
  41986c:	mov	x11, #0xffffffffffffffff    	// #-1
  419870:	sub	w9, w9, #0x4
  419874:	str	x8, [sp, #184]
  419878:	csel	x8, xzr, x10, lt  // lt = tstop
  41987c:	sub	x12, x29, #0x40
  419880:	stp	x20, x9, [sp, #232]
  419884:	cneg	x9, x11, ge  // ge = tcont
  419888:	cmp	x8, #0x0
  41988c:	str	x9, [sp, #296]
  419890:	add	x9, x12, #0x20
  419894:	str	x8, [sp, #176]
  419898:	cset	w8, ne  // ne = any
  41989c:	str	x9, [sp, #160]
  4198a0:	str	w8, [sp, #196]
  4198a4:	str	x28, [sp, #224]
  4198a8:	str	w21, [sp, #156]
  4198ac:	ldr	x10, [sp, #240]
  4198b0:	cmp	w10, #0x4
  4198b4:	b.hi	419a2c <_obstack_memory_used@@Base+0x2510>  // b.pmore
  4198b8:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4198bc:	add	x11, x11, #0x63a
  4198c0:	adr	x8, 4198d0 <_obstack_memory_used@@Base+0x23b4>
  4198c4:	ldrb	w9, [x11, x10]
  4198c8:	add	x8, x8, x9, lsl #2
  4198cc:	br	x8
  4198d0:	cmp	x26, x20
  4198d4:	b.lt	41b69c <_obstack_memory_used@@Base+0x4180>  // b.tstop
  4198d8:	ldr	x10, [sp, #248]
  4198dc:	cbz	x10, 419ab4 <_obstack_memory_used@@Base+0x2598>
  4198e0:	ldr	x9, [sp, #272]
  4198e4:	b	419908 <_obstack_memory_used@@Base+0x23ec>
  4198e8:	mov	x8, xzr
  4198ec:	ldrb	w8, [x10, x8]
  4198f0:	ldrb	w8, [x22, x8]
  4198f4:	cbnz	w8, 419988 <_obstack_memory_used@@Base+0x246c>
  4198f8:	cmp	x26, x20
  4198fc:	sub	x26, x26, #0x1
  419900:	stur	x26, [x29, #-176]
  419904:	b.le	41b69c <_obstack_memory_used@@Base+0x4180>
  419908:	cmp	x26, x28
  41990c:	b.ge	4198e8 <_obstack_memory_used@@Base+0x23cc>  // b.tcont
  419910:	ldrb	w8, [x9, x26]
  419914:	ldrb	w8, [x10, x8]
  419918:	ldrb	w8, [x22, x8]
  41991c:	cbz	w8, 4198f8 <_obstack_memory_used@@Base+0x23dc>
  419920:	b	419988 <_obstack_memory_used@@Base+0x246c>
  419924:	cmp	x26, x25
  419928:	b.ge	419980 <_obstack_memory_used@@Base+0x2464>  // b.tcont
  41992c:	ldr	x9, [sp, #272]
  419930:	ldr	x10, [sp, #248]
  419934:	ldrb	w8, [x9, x26]
  419938:	ldrb	w8, [x10, x8]
  41993c:	ldrb	w8, [x22, x8]
  419940:	cbnz	w8, 419980 <_obstack_memory_used@@Base+0x2464>
  419944:	add	x26, x26, #0x1
  419948:	cmp	x26, x25
  41994c:	stur	x26, [x29, #-176]
  419950:	b.lt	419934 <_obstack_memory_used@@Base+0x2418>  // b.tstop
  419954:	b	419980 <_obstack_memory_used@@Base+0x2464>
  419958:	ldr	x9, [sp, #272]
  41995c:	cmp	x26, x25
  419960:	b.ge	419980 <_obstack_memory_used@@Base+0x2464>  // b.tcont
  419964:	ldrb	w8, [x9, x26]
  419968:	ldrb	w8, [x22, x8]
  41996c:	cbnz	w8, 419980 <_obstack_memory_used@@Base+0x2464>
  419970:	add	x26, x26, #0x1
  419974:	cmp	x26, x25
  419978:	stur	x26, [x29, #-176]
  41997c:	b.lt	419964 <_obstack_memory_used@@Base+0x2448>  // b.tstop
  419980:	cmp	x26, x25
  419984:	b.eq	419b88 <_obstack_memory_used@@Base+0x266c>  // b.none
  419988:	ldr	w2, [sp, #284]
  41998c:	add	x0, sp, #0x130
  419990:	mov	x1, x26
  419994:	bl	421f28 <_obstack_memory_used@@Base+0xaa0c>
  419998:	cbnz	w0, 41b960 <_obstack_memory_used@@Base+0x4444>
  41999c:	cmp	w21, #0x1
  4199a0:	b.eq	4199bc <_obstack_memory_used@@Base+0x24a0>  // b.none
  4199a4:	ldr	x8, [sp, #352]
  4199a8:	cbz	x8, 4199bc <_obstack_memory_used@@Base+0x24a0>
  4199ac:	ldr	x8, [sp, #320]
  4199b0:	ldr	w8, [x8]
  4199b4:	cmn	w8, #0x1
  4199b8:	b.eq	41b3bc <_obstack_memory_used@@Base+0x3ea0>  // b.none
  4199bc:	ldr	x8, [sp, #184]
  4199c0:	str	wzr, [sp, #528]
  4199c4:	stur	wzr, [x29, #-164]
  4199c8:	stp	xzr, xzr, [x8]
  4199cc:	ldr	x19, [sp, #456]
  4199d0:	ldr	x26, [sp, #376]
  4199d4:	ldr	x28, [x19, #72]
  4199d8:	ldrsb	w8, [x28, #104]
  4199dc:	tbz	w8, #31, 419bb4 <_obstack_memory_used@@Base+0x2698>
  4199e0:	cmp	x26, #0x0
  4199e4:	b.le	419a20 <_obstack_memory_used@@Base+0x2504>
  4199e8:	ldr	x9, [sp, #392]
  4199ec:	sub	x8, x26, #0x1
  4199f0:	cmp	x9, x8
  4199f4:	b.eq	419b9c <_obstack_memory_used@@Base+0x2680>  // b.none
  4199f8:	ldr	w9, [sp, #448]
  4199fc:	cmp	w9, #0x2
  419a00:	b.lt	419af0 <_obstack_memory_used@@Base+0x25d4>  // b.tstop
  419a04:	ldr	x9, [sp, #320]
  419a08:	ldr	w20, [x9, x8, lsl #2]
  419a0c:	cmn	w20, #0x1
  419a10:	b.ne	419b1c <_obstack_memory_used@@Base+0x2600>  // b.any
  419a14:	sub	x8, x8, #0x1
  419a18:	cmn	x8, #0x1
  419a1c:	b.ne	419a08 <_obstack_memory_used@@Base+0x24ec>  // b.any
  419a20:	ldr	w3, [sp, #416]
  419a24:	tbnz	w3, #0, 419bb0 <_obstack_memory_used@@Base+0x2694>
  419a28:	b	419b40 <_obstack_memory_used@@Base+0x2624>
  419a2c:	ldr	x8, [sp, #344]
  419a30:	ldr	x10, [sp, #360]
  419a34:	sub	x9, x26, x8
  419a38:	cmp	x9, x10
  419a3c:	b.cs	419a5c <_obstack_memory_used@@Base+0x2540>  // b.hs, b.nlast
  419a40:	cmp	x26, x28
  419a44:	b.ge	419a84 <_obstack_memory_used@@Base+0x2568>  // b.tcont
  419a48:	ldr	x10, [sp, #312]
  419a4c:	ldrb	w9, [x10, x9]
  419a50:	ldrb	w9, [x22, x9]
  419a54:	cbz	w9, 419a90 <_obstack_memory_used@@Base+0x2574>
  419a58:	b	419988 <_obstack_memory_used@@Base+0x246c>
  419a5c:	ldr	w2, [sp, #284]
  419a60:	add	x0, sp, #0x130
  419a64:	mov	x1, x26
  419a68:	bl	421f28 <_obstack_memory_used@@Base+0xaa0c>
  419a6c:	cbnz	w0, 41b960 <_obstack_memory_used@@Base+0x4444>
  419a70:	ldur	x26, [x29, #-176]
  419a74:	ldr	x8, [sp, #344]
  419a78:	sub	x9, x26, x8
  419a7c:	cmp	x26, x28
  419a80:	b.lt	419a48 <_obstack_memory_used@@Base+0x252c>  // b.tstop
  419a84:	mov	x9, xzr
  419a88:	ldrb	w9, [x22, x9]
  419a8c:	cbnz	w9, 419988 <_obstack_memory_used@@Base+0x246c>
  419a90:	ldr	x9, [sp, #296]
  419a94:	mov	w27, #0x1                   	// #1
  419a98:	add	x26, x26, x9
  419a9c:	cmp	x26, x20
  419aa0:	stur	x26, [x29, #-176]
  419aa4:	b.lt	41b6a0 <_obstack_memory_used@@Base+0x4184>  // b.tstop
  419aa8:	cmp	x26, x25
  419aac:	b.le	419a30 <_obstack_memory_used@@Base+0x2514>
  419ab0:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  419ab4:	ldr	x9, [sp, #272]
  419ab8:	b	419ad8 <_obstack_memory_used@@Base+0x25bc>
  419abc:	mov	x8, xzr
  419ac0:	ldrb	w8, [x22, x8]
  419ac4:	cbnz	w8, 419988 <_obstack_memory_used@@Base+0x246c>
  419ac8:	cmp	x26, x20
  419acc:	sub	x26, x26, #0x1
  419ad0:	stur	x26, [x29, #-176]
  419ad4:	b.le	41b69c <_obstack_memory_used@@Base+0x4180>
  419ad8:	cmp	x26, x28
  419adc:	b.ge	419abc <_obstack_memory_used@@Base+0x25a0>  // b.tcont
  419ae0:	ldrb	w8, [x9, x26]
  419ae4:	ldrb	w8, [x22, x8]
  419ae8:	cbz	w8, 419ac8 <_obstack_memory_used@@Base+0x25ac>
  419aec:	b	419988 <_obstack_memory_used@@Base+0x246c>
  419af0:	ldr	x9, [sp, #312]
  419af4:	ldr	x10, [sp, #432]
  419af8:	ldrb	w8, [x9, x8]
  419afc:	lsr	x9, x8, #3
  419b00:	and	x9, x9, #0x18
  419b04:	ldr	x9, [x10, x9]
  419b08:	lsr	x9, x9, x8
  419b0c:	tbnz	w9, #0, 419bb0 <_obstack_memory_used@@Base+0x2694>
  419b10:	cmp	w8, #0xa
  419b14:	b.eq	419b2c <_obstack_memory_used@@Base+0x2610>  // b.none
  419b18:	b	419bb4 <_obstack_memory_used@@Base+0x2698>
  419b1c:	ldrb	w8, [sp, #446]
  419b20:	cbnz	w8, 41b674 <_obstack_memory_used@@Base+0x4158>
  419b24:	cmp	w20, #0xa
  419b28:	b.ne	419bb4 <_obstack_memory_used@@Base+0x2698>  // b.any
  419b2c:	ldrb	w8, [sp, #445]
  419b30:	cmp	w8, #0x0
  419b34:	cset	w8, ne  // ne = any
  419b38:	lsl	w3, w8, #1
  419b3c:	tbnz	w3, #0, 419bb0 <_obstack_memory_used@@Base+0x2694>
  419b40:	ldr	w9, [sp, #196]
  419b44:	cbz	w3, 419bb8 <_obstack_memory_used@@Base+0x269c>
  419b48:	tbz	w3, #1, 419b58 <_obstack_memory_used@@Base+0x263c>
  419b4c:	tbz	w3, #2, 419b58 <_obstack_memory_used@@Base+0x263c>
  419b50:	ldr	x28, [x19, #96]
  419b54:	b	419bb8 <_obstack_memory_used@@Base+0x269c>
  419b58:	tbnz	w3, #1, 419b80 <_obstack_memory_used@@Base+0x2664>
  419b5c:	ldr	x28, [x19, #72]
  419b60:	tbz	w3, #2, 419bb8 <_obstack_memory_used@@Base+0x269c>
  419b64:	ldr	x2, [x28, #80]
  419b68:	sub	x0, x29, #0xa4
  419b6c:	mov	x1, x19
  419b70:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  419b74:	ldr	w9, [sp, #196]
  419b78:	mov	x28, x0
  419b7c:	b	419bb8 <_obstack_memory_used@@Base+0x269c>
  419b80:	ldr	x28, [x19, #88]
  419b84:	b	419bb8 <_obstack_memory_used@@Base+0x269c>
  419b88:	cmp	x25, x28
  419b8c:	b.ge	41b614 <_obstack_memory_used@@Base+0x40f8>  // b.tcont
  419b90:	ldr	x8, [sp, #272]
  419b94:	ldrb	w8, [x8, x25]
  419b98:	b	41b618 <_obstack_memory_used@@Base+0x40fc>
  419b9c:	ldr	w8, [sp, #464]
  419ba0:	mov	w9, #0xa                   	// #10
  419ba4:	and	w8, w8, #0x2
  419ba8:	eor	w3, w8, w9
  419bac:	tbz	w3, #0, 419b40 <_obstack_memory_used@@Base+0x2624>
  419bb0:	ldr	x28, [x19, #80]
  419bb4:	ldr	w9, [sp, #196]
  419bb8:	cbz	x28, 41b958 <_obstack_memory_used@@Base+0x443c>
  419bbc:	ldr	x8, [sp, #488]
  419bc0:	mov	w20, w9
  419bc4:	cbz	x8, 419bd8 <_obstack_memory_used@@Base+0x26bc>
  419bc8:	str	x28, [x8, x26, lsl #3]
  419bcc:	ldr	x8, [x19, #152]
  419bd0:	mov	w20, w9
  419bd4:	cbnz	x8, 41b4c8 <_obstack_memory_used@@Base+0x3fac>
  419bd8:	ldrsb	w8, [x28, #104]
  419bdc:	tbnz	w8, #4, 41b4ac <_obstack_memory_used@@Base+0x3f90>
  419be0:	str	xzr, [sp, #216]
  419be4:	mov	x23, #0xffffffffffffffff    	// #-1
  419be8:	ldr	x9, [sp, #408]
  419bec:	ldr	x8, [sp, #376]
  419bf0:	cmp	x9, x8
  419bf4:	b.le	41b1ec <_obstack_memory_used@@Base+0x3cd0>
  419bf8:	ldr	x9, [sp, #176]
  419bfc:	str	x9, [sp, #256]
  419c00:	ldr	x10, [sp, #368]
  419c04:	ldr	x9, [sp, #392]
  419c08:	add	x25, x8, #0x1
  419c0c:	mov	x27, x28
  419c10:	cmp	x25, x10
  419c14:	str	x26, [sp, #264]
  419c18:	b.lt	419c24 <_obstack_memory_used@@Base+0x2708>  // b.tstop
  419c1c:	cmp	x10, x9
  419c20:	b.lt	41af7c <_obstack_memory_used@@Base+0x3a60>  // b.tstop
  419c24:	ldr	x10, [sp, #352]
  419c28:	cmp	x25, x10
  419c2c:	b.lt	419c38 <_obstack_memory_used@@Base+0x271c>  // b.tstop
  419c30:	cmp	x10, x9
  419c34:	b.lt	41af7c <_obstack_memory_used@@Base+0x3a60>  // b.tstop
  419c38:	ldrb	w8, [x27, #104]
  419c3c:	tbnz	w8, #5, 419d74 <_obstack_memory_used@@Base+0x2858>
  419c40:	ldr	x8, [sp, #376]
  419c44:	ldr	x9, [sp, #312]
  419c48:	mov	x26, x27
  419c4c:	add	x10, x8, #0x1
  419c50:	str	x10, [sp, #376]
  419c54:	ldrb	w28, [x9, x8]
  419c58:	ldr	x0, [x26, #88]!
  419c5c:	cbz	x0, 41a140 <_obstack_memory_used@@Base+0x2c24>
  419c60:	ldr	x28, [x0, x28, lsl #3]
  419c64:	ldr	x26, [sp, #264]
  419c68:	ldr	x8, [sp, #488]
  419c6c:	cbz	x8, 419c84 <_obstack_memory_used@@Base+0x2768>
  419c70:	sub	x0, x29, #0xa4
  419c74:	add	x1, sp, #0x130
  419c78:	mov	x2, x28
  419c7c:	bl	4242dc <_obstack_memory_used@@Base+0xcdc0>
  419c80:	mov	x28, x0
  419c84:	cbz	x28, 419ca8 <_obstack_memory_used@@Base+0x278c>
  419c88:	ldrsb	w8, [x28, #104]
  419c8c:	cmp	x27, x28
  419c90:	cset	w19, eq  // eq = none
  419c94:	tst	w20, w19
  419c98:	csel	x26, x25, x26, ne  // ne = any
  419c9c:	tbnz	w8, #4, 419d20 <_obstack_memory_used@@Base+0x2804>
  419ca0:	ldr	x25, [sp, #288]
  419ca4:	b	419d54 <_obstack_memory_used@@Base+0x2838>
  419ca8:	ldur	w8, [x29, #-164]
  419cac:	cbnz	w8, 41b958 <_obstack_memory_used@@Base+0x443c>
  419cb0:	ldr	x8, [sp, #216]
  419cb4:	ldr	w9, [sp, #172]
  419cb8:	cmp	x8, #0x0
  419cbc:	cset	w8, ne  // ne = any
  419cc0:	bic	w8, w8, w9
  419cc4:	tbnz	w8, #0, 41b200 <_obstack_memory_used@@Base+0x3ce4>
  419cc8:	ldr	x10, [sp, #488]
  419ccc:	cbz	x10, 41b200 <_obstack_memory_used@@Base+0x3ce4>
  419cd0:	ldr	x8, [sp, #496]
  419cd4:	ldr	x9, [sp, #376]
  419cd8:	add	x10, x10, #0x8
  419cdc:	cmp	x9, x8
  419ce0:	b.ge	41b200 <_obstack_memory_used@@Base+0x3ce4>  // b.tcont
  419ce4:	add	x11, x9, #0x1
  419ce8:	str	x11, [sp, #376]
  419cec:	ldr	x12, [x10, x9, lsl #3]
  419cf0:	mov	x9, x11
  419cf4:	cbz	x12, 419cdc <_obstack_memory_used@@Base+0x27c0>
  419cf8:	sub	x0, x29, #0xa4
  419cfc:	add	x1, sp, #0x130
  419d00:	mov	x2, xzr
  419d04:	bl	4242dc <_obstack_memory_used@@Base+0xcdc0>
  419d08:	mov	x28, x0
  419d0c:	cbnz	x0, 419d6c <_obstack_memory_used@@Base+0x2850>
  419d10:	ldur	w8, [x29, #-164]
  419d14:	cbnz	w8, 419d6c <_obstack_memory_used@@Base+0x2850>
  419d18:	ldr	x10, [sp, #488]
  419d1c:	b	419cd0 <_obstack_memory_used@@Base+0x27b4>
  419d20:	ldr	x25, [sp, #288]
  419d24:	tbz	w8, #31, 419d3c <_obstack_memory_used@@Base+0x2820>
  419d28:	ldr	x2, [sp, #376]
  419d2c:	add	x0, sp, #0x130
  419d30:	mov	x1, x28
  419d34:	bl	422884 <_obstack_memory_used@@Base+0xb368>
  419d38:	cbz	x0, 419d54 <_obstack_memory_used@@Base+0x2838>
  419d3c:	ldr	x23, [sp, #376]
  419d40:	ldr	w8, [sp, #172]
  419d44:	cbz	w8, 41b218 <_obstack_memory_used@@Base+0x3cfc>
  419d48:	mov	w8, #0x1                   	// #1
  419d4c:	str	xzr, [sp, #256]
  419d50:	str	x8, [sp, #216]
  419d54:	ldr	x9, [sp, #408]
  419d58:	ldr	x8, [sp, #376]
  419d5c:	and	w20, w20, w19
  419d60:	cmp	x9, x8
  419d64:	b.gt	419c00 <_obstack_memory_used@@Base+0x26e4>
  419d68:	b	41b1f4 <_obstack_memory_used@@Base+0x3cd8>
  419d6c:	cbnz	x28, 419c88 <_obstack_memory_used@@Base+0x276c>
  419d70:	b	41b200 <_obstack_memory_used@@Base+0x3ce4>
  419d74:	ldr	x8, [x27, #16]
  419d78:	cmp	x8, #0x1
  419d7c:	b.lt	41afe4 <_obstack_memory_used@@Base+0x3ac8>  // b.tstop
  419d80:	ldr	x11, [sp, #456]
  419d84:	mov	x26, xzr
  419d88:	str	x11, [sp, #112]
  419d8c:	b	419da0 <_obstack_memory_used@@Base+0x2884>
  419d90:	ldr	x8, [x27, #16]
  419d94:	add	x26, x26, #0x1
  419d98:	cmp	x26, x8
  419d9c:	b.ge	41afe4 <_obstack_memory_used@@Base+0x3ac8>  // b.tcont
  419da0:	ldr	x8, [x27, #24]
  419da4:	ldr	x12, [x8, x26, lsl #3]
  419da8:	ldr	x8, [x11]
  419dac:	add	x8, x8, x12, lsl #4
  419db0:	ldr	w28, [x8, #8]
  419db4:	tbz	w28, #20, 419d90 <_obstack_memory_used@@Base+0x2874>
  419db8:	tst	w28, #0x3ff00
  419dbc:	b.eq	419eac <_obstack_memory_used@@Base+0x2990>  // b.none
  419dc0:	ldr	x8, [sp, #376]
  419dc4:	tbnz	x8, #63, 419dfc <_obstack_memory_used@@Base+0x28e0>
  419dc8:	ldr	x9, [sp, #392]
  419dcc:	cmp	x9, x8
  419dd0:	b.eq	41a098 <_obstack_memory_used@@Base+0x2b7c>  // b.none
  419dd4:	ldr	w9, [sp, #448]
  419dd8:	cmp	w9, #0x2
  419ddc:	b.lt	419e10 <_obstack_memory_used@@Base+0x28f4>  // b.tstop
  419de0:	ldr	x9, [sp, #320]
  419de4:	ldr	w19, [x9, x8, lsl #2]
  419de8:	cmn	w19, #0x1
  419dec:	b.ne	419e3c <_obstack_memory_used@@Base+0x2920>  // b.any
  419df0:	sub	x8, x8, #0x1
  419df4:	cmn	x8, #0x1
  419df8:	b.ne	419de4 <_obstack_memory_used@@Base+0x28c8>  // b.any
  419dfc:	ldr	w8, [sp, #416]
  419e00:	tst	w8, #0x1
  419e04:	cset	w9, eq  // eq = none
  419e08:	tbnz	w28, #10, 419e84 <_obstack_memory_used@@Base+0x2968>
  419e0c:	b	419e88 <_obstack_memory_used@@Base+0x296c>
  419e10:	ldr	x9, [sp, #312]
  419e14:	ldr	x10, [sp, #432]
  419e18:	ldrb	w8, [x9, x8]
  419e1c:	lsr	x9, x8, #3
  419e20:	and	x9, x9, #0x18
  419e24:	ldr	x9, [x10, x9]
  419e28:	lsr	x9, x9, x8
  419e2c:	tbz	w9, #0, 419e6c <_obstack_memory_used@@Base+0x2950>
  419e30:	mov	w9, wzr
  419e34:	mov	w8, #0x1                   	// #1
  419e38:	b	419e88 <_obstack_memory_used@@Base+0x296c>
  419e3c:	ldrb	w8, [sp, #446]
  419e40:	cbnz	w8, 41a0d8 <_obstack_memory_used@@Base+0x2bbc>
  419e44:	cmp	w19, #0xa
  419e48:	b.ne	419e74 <_obstack_memory_used@@Base+0x2958>  // b.any
  419e4c:	ldrb	w8, [sp, #445]
  419e50:	cmp	w8, #0x0
  419e54:	cset	w8, ne  // ne = any
  419e58:	lsl	w8, w8, #1
  419e5c:	tst	w8, #0x1
  419e60:	cset	w9, eq  // eq = none
  419e64:	tbnz	w28, #10, 419e84 <_obstack_memory_used@@Base+0x2968>
  419e68:	b	419e88 <_obstack_memory_used@@Base+0x296c>
  419e6c:	cmp	w8, #0xa
  419e70:	b.eq	419e4c <_obstack_memory_used@@Base+0x2930>  // b.none
  419e74:	mov	w8, wzr
  419e78:	tst	w8, #0x1
  419e7c:	cset	w9, eq  // eq = none
  419e80:	tbz	w28, #10, 419e88 <_obstack_memory_used@@Base+0x296c>
  419e84:	tbz	w8, #0, 419d90 <_obstack_memory_used@@Base+0x2874>
  419e88:	ldr	x10, [x11]
  419e8c:	add	x10, x10, x12, lsl #4
  419e90:	ldr	w10, [x10, #8]
  419e94:	tbnz	w9, #0, 419e9c <_obstack_memory_used@@Base+0x2980>
  419e98:	tbnz	w10, #11, 419d90 <_obstack_memory_used@@Base+0x2874>
  419e9c:	tbnz	w8, #1, 419ea4 <_obstack_memory_used@@Base+0x2988>
  419ea0:	tbnz	w10, #13, 419d90 <_obstack_memory_used@@Base+0x2874>
  419ea4:	tbnz	w8, #3, 419eac <_obstack_memory_used@@Base+0x2990>
  419ea8:	tbnz	w10, #15, 419d90 <_obstack_memory_used@@Base+0x2874>
  419eac:	ldr	x3, [sp, #376]
  419eb0:	add	x2, sp, #0x130
  419eb4:	mov	x0, x11
  419eb8:	mov	x1, x12
  419ebc:	mov	x28, x12
  419ec0:	bl	425b14 <_obstack_memory_used@@Base+0xe5f8>
  419ec4:	ldr	x11, [sp, #112]
  419ec8:	cbz	w0, 419d90 <_obstack_memory_used@@Base+0x2874>
  419ecc:	ldr	w10, [sp, #528]
  419ed0:	ldp	x9, x11, [sp, #368]
  419ed4:	ldr	x19, [sp, #496]
  419ed8:	ldr	x8, [sp, #392]
  419edc:	cmp	w10, w0
  419ee0:	add	x11, x11, w0, sxtw
  419ee4:	mov	x12, x28
  419ee8:	csel	w10, w0, w10, lt  // lt = tstop
  419eec:	cmp	x9, x11
  419ef0:	str	w10, [sp, #528]
  419ef4:	str	x11, [sp, #104]
  419ef8:	b.gt	419f04 <_obstack_memory_used@@Base+0x29e8>
  419efc:	cmp	x9, x8
  419f00:	b.lt	419f18 <_obstack_memory_used@@Base+0x29fc>  // b.tstop
  419f04:	ldr	x9, [sp, #352]
  419f08:	cmp	x9, x11
  419f0c:	b.gt	419f30 <_obstack_memory_used@@Base+0x2a14>
  419f10:	cmp	x9, x8
  419f14:	b.ge	419f30 <_obstack_memory_used@@Base+0x2a14>  // b.tcont
  419f18:	add	w1, w11, #0x1
  419f1c:	add	x0, sp, #0x130
  419f20:	bl	4240e4 <_obstack_memory_used@@Base+0xcbc8>
  419f24:	ldr	x11, [sp, #104]
  419f28:	mov	x12, x28
  419f2c:	cbnz	w0, 41b054 <_obstack_memory_used@@Base+0x3b38>
  419f30:	subs	x8, x11, x19
  419f34:	b.le	419f5c <_obstack_memory_used@@Base+0x2a40>
  419f38:	ldr	x9, [sp, #488]
  419f3c:	lsl	x2, x8, #3
  419f40:	mov	w1, wzr
  419f44:	add	x9, x9, x19, lsl #3
  419f48:	add	x0, x9, #0x8
  419f4c:	bl	402800 <memset@plt>
  419f50:	ldr	x11, [sp, #104]
  419f54:	mov	x12, x28
  419f58:	str	x11, [sp, #496]
  419f5c:	ldr	x10, [sp, #112]
  419f60:	stur	wzr, [x29, #-96]
  419f64:	ldr	x9, [sp, #488]
  419f68:	ldr	x8, [x10, #24]
  419f6c:	ldr	x10, [x10, #48]
  419f70:	ldr	x28, [x9, x11, lsl #3]
  419f74:	mov	w9, #0x18                  	// #24
  419f78:	ldr	x8, [x8, x12, lsl #3]
  419f7c:	madd	x2, x8, x9, x10
  419f80:	cbz	x28, 419fa0 <_obstack_memory_used@@Base+0x2a84>
  419f84:	ldr	x1, [x28, #80]
  419f88:	sub	x0, x29, #0x40
  419f8c:	bl	4244e0 <_obstack_memory_used@@Base+0xcfc4>
  419f90:	ldr	x11, [sp, #104]
  419f94:	stur	w0, [x29, #-96]
  419f98:	cbz	w0, 419fb0 <_obstack_memory_used@@Base+0x2a94>
  419f9c:	b	41b058 <_obstack_memory_used@@Base+0x3b3c>
  419fa0:	ldr	x8, [x2, #16]
  419fa4:	ldr	q0, [x2]
  419fa8:	stur	x8, [x29, #-48]
  419fac:	stur	q0, [x29, #-64]
  419fb0:	cmp	x11, #0x0
  419fb4:	b.le	41a0b8 <_obstack_memory_used@@Base+0x2b9c>
  419fb8:	ldr	x9, [sp, #392]
  419fbc:	ldr	x1, [sp, #112]
  419fc0:	sub	x8, x11, #0x1
  419fc4:	cmp	x9, x8
  419fc8:	b.eq	41a0c4 <_obstack_memory_used@@Base+0x2ba8>  // b.none
  419fcc:	ldr	w9, [sp, #448]
  419fd0:	cmp	w9, #0x2
  419fd4:	b.lt	419ffc <_obstack_memory_used@@Base+0x2ae0>  // b.tstop
  419fd8:	ldr	x9, [sp, #320]
  419fdc:	ldr	w19, [x9, x8, lsl #2]
  419fe0:	cmn	w19, #0x1
  419fe4:	b.ne	41a024 <_obstack_memory_used@@Base+0x2b08>  // b.any
  419fe8:	sub	x8, x8, #0x1
  419fec:	cmn	x8, #0x1
  419ff0:	b.ne	419fdc <_obstack_memory_used@@Base+0x2ac0>  // b.any
  419ff4:	ldr	w3, [sp, #416]
  419ff8:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  419ffc:	ldr	x9, [sp, #312]
  41a000:	ldr	x10, [sp, #432]
  41a004:	ldrb	w8, [x9, x8]
  41a008:	lsr	x9, x8, #3
  41a00c:	and	x9, x9, #0x18
  41a010:	ldr	x9, [x10, x9]
  41a014:	lsr	x9, x9, x8
  41a018:	tbz	w9, #0, 41a048 <_obstack_memory_used@@Base+0x2b2c>
  41a01c:	mov	w3, #0x1                   	// #1
  41a020:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  41a024:	ldrb	w8, [sp, #446]
  41a028:	cbnz	w8, 41a104 <_obstack_memory_used@@Base+0x2be8>
  41a02c:	cmp	w19, #0xa
  41a030:	b.ne	41a050 <_obstack_memory_used@@Base+0x2b34>  // b.any
  41a034:	ldrb	w8, [sp, #445]
  41a038:	cmp	w8, #0x0
  41a03c:	cset	w8, ne  // ne = any
  41a040:	lsl	w3, w8, #1
  41a044:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  41a048:	cmp	w8, #0xa
  41a04c:	b.eq	41a034 <_obstack_memory_used@@Base+0x2b18>  // b.none
  41a050:	mov	w3, wzr
  41a054:	sub	x0, x29, #0x60
  41a058:	sub	x2, x29, #0x40
  41a05c:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  41a060:	ldr	x8, [sp, #488]
  41a064:	ldr	x9, [sp, #104]
  41a068:	str	x0, [x8, x9, lsl #3]
  41a06c:	cbz	x28, 41a07c <_obstack_memory_used@@Base+0x2b60>
  41a070:	ldur	x0, [x29, #-48]
  41a074:	bl	402a10 <free@plt>
  41a078:	ldr	x9, [sp, #104]
  41a07c:	ldr	x8, [sp, #488]
  41a080:	ldr	x11, [sp, #112]
  41a084:	ldr	x8, [x8, x9, lsl #3]
  41a088:	cbnz	x8, 419d90 <_obstack_memory_used@@Base+0x2874>
  41a08c:	ldur	w0, [x29, #-96]
  41a090:	cbz	w0, 419d90 <_obstack_memory_used@@Base+0x2874>
  41a094:	b	41b058 <_obstack_memory_used@@Base+0x3b3c>
  41a098:	ldr	w8, [sp, #464]
  41a09c:	mov	w9, #0xa                   	// #10
  41a0a0:	and	w8, w8, #0x2
  41a0a4:	eor	w8, w8, w9
  41a0a8:	tst	w8, #0x1
  41a0ac:	cset	w9, eq  // eq = none
  41a0b0:	tbnz	w28, #10, 419e84 <_obstack_memory_used@@Base+0x2968>
  41a0b4:	b	419e88 <_obstack_memory_used@@Base+0x296c>
  41a0b8:	ldr	w3, [sp, #416]
  41a0bc:	ldr	x1, [sp, #112]
  41a0c0:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  41a0c4:	ldr	w8, [sp, #464]
  41a0c8:	mov	w9, #0xa                   	// #10
  41a0cc:	and	w8, w8, #0x2
  41a0d0:	eor	w3, w8, w9
  41a0d4:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  41a0d8:	mov	w0, w19
  41a0dc:	str	x12, [sp, #104]
  41a0e0:	bl	402b10 <iswalnum@plt>
  41a0e4:	mov	w9, wzr
  41a0e8:	cmp	w19, #0x5f
  41a0ec:	mov	w8, #0x1                   	// #1
  41a0f0:	b.eq	41a128 <_obstack_memory_used@@Base+0x2c0c>  // b.none
  41a0f4:	ldr	w21, [sp, #156]
  41a0f8:	ldp	x12, x11, [sp, #104]
  41a0fc:	cbz	w0, 419e44 <_obstack_memory_used@@Base+0x2928>
  41a100:	b	419e88 <_obstack_memory_used@@Base+0x296c>
  41a104:	mov	w0, w19
  41a108:	bl	402b10 <iswalnum@plt>
  41a10c:	cmp	w19, #0x5f
  41a110:	mov	w3, #0x1                   	// #1
  41a114:	b.eq	41a134 <_obstack_memory_used@@Base+0x2c18>  // b.none
  41a118:	ldr	w21, [sp, #156]
  41a11c:	ldr	x1, [sp, #112]
  41a120:	cbz	w0, 41a02c <_obstack_memory_used@@Base+0x2b10>
  41a124:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  41a128:	ldr	w21, [sp, #156]
  41a12c:	ldp	x12, x11, [sp, #104]
  41a130:	b	419e88 <_obstack_memory_used@@Base+0x296c>
  41a134:	ldr	w21, [sp, #156]
  41a138:	ldr	x1, [sp, #112]
  41a13c:	b	41a054 <_obstack_memory_used@@Base+0x2b38>
  41a140:	ldr	x11, [x27, #96]
  41a144:	cbnz	x11, 41af94 <_obstack_memory_used@@Base+0x3a78>
  41a148:	ldr	x8, [sp, #456]
  41a14c:	mov	w0, #0x3800                	// #14336
  41a150:	str	x24, [sp, #112]
  41a154:	str	x8, [sp, #72]
  41a158:	bl	402730 <malloc@plt>
  41a15c:	str	x0, [sp, #40]
  41a160:	cbz	x0, 41b1b0 <_obstack_memory_used@@Base+0x3c94>
  41a164:	movi	v0.2d, #0x0
  41a168:	stp	xzr, xzr, [x26]
  41a16c:	stp	q0, q0, [x29, #-64]
  41a170:	ldr	x8, [x27, #16]
  41a174:	cmp	x8, #0x0
  41a178:	b.le	41acb0 <_obstack_memory_used@@Base+0x3794>
  41a17c:	ldr	x9, [sp, #40]
  41a180:	mov	w8, #0x1800                	// #6144
  41a184:	str	xzr, [sp, #48]
  41a188:	str	xzr, [sp, #104]
  41a18c:	add	x8, x9, x8
  41a190:	str	x8, [sp, #32]
  41a194:	b	41a1c8 <_obstack_memory_used@@Base+0x2cac>
  41a198:	ldr	x8, [sp, #64]
  41a19c:	str	x21, [x0]
  41a1a0:	add	x8, x8, #0x1
  41a1a4:	str	x8, [sp, #104]
  41a1a8:	movi	v0.2d, #0x0
  41a1ac:	stp	q0, q0, [x29, #-64]
  41a1b0:	ldr	x9, [sp, #48]
  41a1b4:	ldr	x8, [x27, #16]
  41a1b8:	add	x9, x9, #0x1
  41a1bc:	cmp	x9, x8
  41a1c0:	str	x9, [sp, #48]
  41a1c4:	b.ge	41a864 <_obstack_memory_used@@Base+0x3348>  // b.tcont
  41a1c8:	ldr	x8, [x27, #24]
  41a1cc:	ldr	x9, [sp, #72]
  41a1d0:	ldr	x10, [sp, #48]
  41a1d4:	ldr	x9, [x9]
  41a1d8:	ldr	x8, [x8, x10, lsl #3]
  41a1dc:	add	x9, x9, x8, lsl #4
  41a1e0:	str	x9, [sp, #56]
  41a1e4:	ldr	w10, [x9, #8]!
  41a1e8:	and	w8, w10, #0xff
  41a1ec:	cmp	w8, #0x1
  41a1f0:	b.ne	41a220 <_obstack_memory_used@@Base+0x2d04>  // b.any
  41a1f4:	ldr	x11, [sp, #56]
  41a1f8:	sub	x14, x29, #0x40
  41a1fc:	mov	w15, #0x1                   	// #1
  41a200:	ldrb	w11, [x11]
  41a204:	lsr	x12, x11, #3
  41a208:	and	x12, x12, #0x18
  41a20c:	ldr	x13, [x14, x12]
  41a210:	lsl	x11, x15, x11
  41a214:	orr	x11, x11, x13
  41a218:	str	x11, [x14, x12]
  41a21c:	b	41a308 <_obstack_memory_used@@Base+0x2dec>
  41a220:	cmp	w8, #0x7
  41a224:	b.eq	41a260 <_obstack_memory_used@@Base+0x2d44>  // b.none
  41a228:	cmp	w8, #0x5
  41a22c:	b.eq	41a298 <_obstack_memory_used@@Base+0x2d7c>  // b.none
  41a230:	cmp	w8, #0x3
  41a234:	b.ne	41a1b0 <_obstack_memory_used@@Base+0x2c94>  // b.any
  41a238:	ldr	x11, [sp, #56]
  41a23c:	ldp	q1, q2, [x29, #-64]
  41a240:	ldr	x11, [x11]
  41a244:	ldr	q0, [x11]
  41a248:	orr	v0.16b, v1.16b, v0.16b
  41a24c:	stur	q0, [x29, #-64]
  41a250:	ldr	q0, [x11, #16]
  41a254:	orr	v0.16b, v2.16b, v0.16b
  41a258:	stur	q0, [x29, #-48]
  41a25c:	b	41a308 <_obstack_memory_used@@Base+0x2dec>
  41a260:	mov	x11, #0xffffffffffffffff    	// #-1
  41a264:	stp	x11, x11, [x29, #-64]
  41a268:	ldr	x11, [sp, #72]
  41a26c:	ldr	x11, [x11, #216]
  41a270:	tbz	w11, #6, 41a278 <_obstack_memory_used@@Base+0x2d5c>
  41a274:	tbz	w11, #7, 41a308 <_obstack_memory_used@@Base+0x2dec>
  41a278:	tst	x11, #0x40
  41a27c:	mov	x12, #0xfffffffffffffffe    	// #-2
  41a280:	mov	x13, #0xfffffffffffffbfe    	// #-1026
  41a284:	csel	x12, x13, x12, eq  // eq = none
  41a288:	tst	x11, #0x80
  41a28c:	mov	x11, #0xfffffffffffffbff    	// #-1025
  41a290:	csel	x11, x11, x12, eq  // eq = none
  41a294:	b	41a304 <_obstack_memory_used@@Base+0x2de8>
  41a298:	ldr	x11, [sp, #72]
  41a29c:	ldr	w11, [x11, #180]
  41a2a0:	cmp	w11, #0x2
  41a2a4:	b.lt	41a2d0 <_obstack_memory_used@@Base+0x2db4>  // b.tstop
  41a2a8:	ldr	x11, [sp, #72]
  41a2ac:	ldp	q1, q2, [x29, #-64]
  41a2b0:	ldr	x11, [x11, #120]
  41a2b4:	ldr	q0, [x11]
  41a2b8:	orr	v0.16b, v1.16b, v0.16b
  41a2bc:	ldr	q1, [x11, #16]
  41a2c0:	fmov	x12, d0
  41a2c4:	orr	v1.16b, v2.16b, v1.16b
  41a2c8:	stp	q0, q1, [x29, #-64]
  41a2cc:	b	41a2dc <_obstack_memory_used@@Base+0x2dc0>
  41a2d0:	movi	v0.2d, #0xffffffffffffffff
  41a2d4:	mov	x12, #0xffffffffffffffff    	// #-1
  41a2d8:	stp	q0, q0, [x29, #-64]
  41a2dc:	ldr	x11, [sp, #72]
  41a2e0:	and	x13, x12, #0xfffffffffffffbff
  41a2e4:	ldr	x11, [x11, #216]
  41a2e8:	tst	x11, #0x40
  41a2ec:	csel	x12, x13, x12, eq  // eq = none
  41a2f0:	tbz	w11, #6, 41a2f8 <_obstack_memory_used@@Base+0x2ddc>
  41a2f4:	tbz	w11, #7, 41a308 <_obstack_memory_used@@Base+0x2dec>
  41a2f8:	and	x13, x12, #0xfffffffffffffffe
  41a2fc:	tst	x11, #0x80
  41a300:	csel	x11, x12, x13, eq  // eq = none
  41a304:	stur	x11, [x29, #-64]
  41a308:	and	w11, w10, #0x3ff00
  41a30c:	cbz	w11, 41a470 <_obstack_memory_used@@Base+0x2f54>
  41a310:	tbz	w10, #13, 41a32c <_obstack_memory_used@@Base+0x2e10>
  41a314:	ldur	x11, [x29, #-64]
  41a318:	movi	v0.2d, #0x0
  41a31c:	stp	q0, q0, [x29, #-64]
  41a320:	tbz	w11, #10, 41a1b0 <_obstack_memory_used@@Base+0x2c94>
  41a324:	mov	w11, #0x400                 	// #1024
  41a328:	stur	x11, [x29, #-64]
  41a32c:	tbnz	w10, #15, 41a1a8 <_obstack_memory_used@@Base+0x2c8c>
  41a330:	tbz	w10, #10, 41a3d0 <_obstack_memory_used@@Base+0x2eb4>
  41a334:	cmp	w8, #0x1
  41a338:	b.ne	41a344 <_obstack_memory_used@@Base+0x2e28>  // b.any
  41a33c:	ldrb	w11, [x9, #2]
  41a340:	tbz	w11, #6, 41a1a8 <_obstack_memory_used@@Base+0x2c8c>
  41a344:	ldr	x11, [sp, #72]
  41a348:	ldr	w11, [x11, #180]
  41a34c:	cmp	w11, #0x1
  41a350:	b.le	41a390 <_obstack_memory_used@@Base+0x2e74>
  41a354:	ldr	x12, [sp, #72]
  41a358:	ldp	q2, q3, [x29, #-64]
  41a35c:	ldr	x11, [x12, #120]
  41a360:	ldur	q0, [x12, #184]
  41a364:	ldr	q1, [x11]
  41a368:	orn	v0.16b, v0.16b, v1.16b
  41a36c:	and	v0.16b, v2.16b, v0.16b
  41a370:	stur	q0, [x29, #-64]
  41a374:	ldur	q1, [x12, #200]
  41a378:	ldr	q2, [x11, #16]
  41a37c:	mov	x11, v0.d[1]
  41a380:	fmov	x12, d0
  41a384:	orn	v0.16b, v1.16b, v2.16b
  41a388:	and	v0.16b, v3.16b, v0.16b
  41a38c:	b	41a3b4 <_obstack_memory_used@@Base+0x2e98>
  41a390:	ldr	x11, [sp, #72]
  41a394:	ldp	q1, q2, [x29, #-64]
  41a398:	ldur	q0, [x11, #184]
  41a39c:	and	v0.16b, v1.16b, v0.16b
  41a3a0:	stur	q0, [x29, #-64]
  41a3a4:	ldur	q1, [x11, #200]
  41a3a8:	mov	x11, v0.d[1]
  41a3ac:	fmov	x12, d0
  41a3b0:	and	v0.16b, v2.16b, v1.16b
  41a3b4:	orr	x11, x11, x12
  41a3b8:	fmov	x12, d0
  41a3bc:	orr	x11, x11, x12
  41a3c0:	mov	x12, v0.d[1]
  41a3c4:	orr	x11, x11, x12
  41a3c8:	stur	q0, [x29, #-48]
  41a3cc:	cbz	x11, 41a1b0 <_obstack_memory_used@@Base+0x2c94>
  41a3d0:	tbz	w10, #11, 41a470 <_obstack_memory_used@@Base+0x2f54>
  41a3d4:	cmp	w8, #0x1
  41a3d8:	b.ne	41a3e4 <_obstack_memory_used@@Base+0x2ec8>  // b.any
  41a3dc:	ldrb	w9, [x9, #2]
  41a3e0:	tbnz	w9, #6, 41a1a8 <_obstack_memory_used@@Base+0x2c8c>
  41a3e4:	ldr	x9, [sp, #72]
  41a3e8:	ldr	w9, [x9, #180]
  41a3ec:	cmp	w9, #0x1
  41a3f0:	b.le	41a430 <_obstack_memory_used@@Base+0x2f14>
  41a3f4:	ldr	x10, [sp, #72]
  41a3f8:	ldp	q2, q3, [x29, #-64]
  41a3fc:	ldr	x9, [x10, #120]
  41a400:	ldur	q0, [x10, #184]
  41a404:	ldr	q1, [x9]
  41a408:	and	v0.16b, v1.16b, v0.16b
  41a40c:	bic	v0.16b, v2.16b, v0.16b
  41a410:	stur	q0, [x29, #-64]
  41a414:	ldur	q1, [x10, #200]
  41a418:	ldr	q2, [x9, #16]
  41a41c:	mov	x9, v0.d[1]
  41a420:	fmov	x10, d0
  41a424:	and	v0.16b, v2.16b, v1.16b
  41a428:	bic	v0.16b, v3.16b, v0.16b
  41a42c:	b	41a454 <_obstack_memory_used@@Base+0x2f38>
  41a430:	ldr	x9, [sp, #72]
  41a434:	ldp	q1, q2, [x29, #-64]
  41a438:	ldur	q0, [x9, #184]
  41a43c:	bic	v0.16b, v1.16b, v0.16b
  41a440:	stur	q0, [x29, #-64]
  41a444:	ldur	q1, [x9, #200]
  41a448:	mov	x9, v0.d[1]
  41a44c:	fmov	x10, d0
  41a450:	bic	v0.16b, v2.16b, v1.16b
  41a454:	orr	x9, x9, x10
  41a458:	fmov	x10, d0
  41a45c:	orr	x9, x9, x10
  41a460:	mov	x10, v0.d[1]
  41a464:	orr	x9, x9, x10
  41a468:	stur	q0, [x29, #-48]
  41a46c:	cbz	x9, 41a1b0 <_obstack_memory_used@@Base+0x2c94>
  41a470:	ldr	x9, [sp, #104]
  41a474:	cmp	x9, #0x1
  41a478:	b.lt	41a658 <_obstack_memory_used@@Base+0x313c>  // b.tstop
  41a47c:	ldur	x9, [x29, #-64]
  41a480:	cmp	w8, #0x1
  41a484:	str	x9, [sp, #80]
  41a488:	ldur	x9, [x29, #-56]
  41a48c:	str	x9, [sp, #88]
  41a490:	ldur	x9, [x29, #-48]
  41a494:	str	x9, [sp, #96]
  41a498:	b.ne	41a660 <_obstack_memory_used@@Base+0x3144>  // b.any
  41a49c:	ldp	x19, x21, [sp, #32]
  41a4a0:	str	xzr, [sp, #64]
  41a4a4:	b	41a4c8 <_obstack_memory_used@@Base+0x2fac>
  41a4a8:	ldr	x9, [sp, #64]
  41a4ac:	ldr	x8, [sp, #104]
  41a4b0:	add	x21, x21, #0x18
  41a4b4:	add	x19, x19, #0x20
  41a4b8:	add	x9, x9, #0x1
  41a4bc:	cmp	x9, x8
  41a4c0:	str	x9, [sp, #64]
  41a4c4:	b.ge	41a63c <_obstack_memory_used@@Base+0x3120>  // b.tcont
  41a4c8:	ldr	x8, [sp, #56]
  41a4cc:	ldrb	w8, [x8]
  41a4d0:	lsr	x9, x8, #3
  41a4d4:	and	x9, x9, #0x18
  41a4d8:	ldr	x9, [x19, x9]
  41a4dc:	lsr	x8, x9, x8
  41a4e0:	tbz	w8, #0, 41a4a8 <_obstack_memory_used@@Base+0x2f8c>
  41a4e4:	ldp	x11, x10, [x19]
  41a4e8:	ldp	x13, x14, [sp, #80]
  41a4ec:	ldp	x12, x9, [x19, #16]
  41a4f0:	ldr	x15, [sp, #96]
  41a4f4:	ldur	x8, [x29, #-40]
  41a4f8:	and	x13, x11, x13
  41a4fc:	and	x14, x10, x14
  41a500:	and	x15, x12, x15
  41a504:	stp	x13, x14, [x29, #-96]
  41a508:	orr	x13, x14, x13
  41a50c:	and	x14, x9, x8
  41a510:	orr	x13, x13, x15
  41a514:	orr	x13, x13, x14
  41a518:	stp	x15, x14, [x29, #-80]
  41a51c:	cbz	x13, 41a4a8 <_obstack_memory_used@@Base+0x2f8c>
  41a520:	ldr	x14, [sp, #80]
  41a524:	bic	x24, x8, x9
  41a528:	stur	x24, [x29, #-40]
  41a52c:	bic	x13, x11, x14
  41a530:	bic	x14, x14, x11
  41a534:	str	x14, [sp, #80]
  41a538:	ldr	x14, [sp, #88]
  41a53c:	bic	x11, x10, x14
  41a540:	bic	x14, x14, x10
  41a544:	str	x14, [sp, #88]
  41a548:	ldr	x14, [sp, #96]
  41a54c:	stp	x13, x11, [x29, #-128]
  41a550:	orr	x11, x11, x13
  41a554:	bic	x10, x12, x14
  41a558:	bic	x14, x14, x12
  41a55c:	bic	x12, x9, x8
  41a560:	stp	x10, x12, [x29, #-112]
  41a564:	orr	x10, x11, x10
  41a568:	orr	x10, x10, x12
  41a56c:	str	x14, [sp, #96]
  41a570:	cbz	x10, 41a60c <_obstack_memory_used@@Base+0x30f0>
  41a574:	ldr	x11, [sp, #104]
  41a578:	ldp	x8, x10, [sp, #32]
  41a57c:	ldp	q0, q1, [x29, #-128]
  41a580:	ldp	q2, q3, [x29, #-96]
  41a584:	mov	w9, #0x18                  	// #24
  41a588:	add	x8, x8, x11, lsl #5
  41a58c:	stp	q0, q1, [x8]
  41a590:	stp	q2, q3, [x19]
  41a594:	ldr	x8, [x21, #8]
  41a598:	madd	x9, x11, x9, x10
  41a59c:	str	x9, [sp, #24]
  41a5a0:	mov	x12, x21
  41a5a4:	str	x8, [x9, #8]
  41a5a8:	ldr	x9, [x21, #8]
  41a5ac:	cmp	x9, #0x0
  41a5b0:	str	x9, [sp, #16]
  41a5b4:	b.le	41a5f4 <_obstack_memory_used@@Base+0x30d8>
  41a5b8:	ldr	x9, [sp, #24]
  41a5bc:	lsl	x0, x8, #3
  41a5c0:	str	x8, [x9]
  41a5c4:	bl	402730 <malloc@plt>
  41a5c8:	ldr	x9, [sp, #40]
  41a5cc:	ldr	x10, [sp, #104]
  41a5d0:	mov	w8, #0x18                  	// #24
  41a5d4:	madd	x8, x10, x8, x9
  41a5d8:	str	x0, [x8, #16]
  41a5dc:	cbz	x0, 41b158 <_obstack_memory_used@@Base+0x3c3c>
  41a5e0:	ldr	x8, [sp, #16]
  41a5e4:	ldr	x1, [x21, #16]
  41a5e8:	lsl	x2, x8, #3
  41a5ec:	bl	402580 <memcpy@plt>
  41a5f0:	b	41a600 <_obstack_memory_used@@Base+0x30e4>
  41a5f4:	ldr	x8, [sp, #24]
  41a5f8:	stp	xzr, xzr, [x8]
  41a5fc:	str	xzr, [x8, #16]
  41a600:	ldr	x8, [sp, #104]
  41a604:	add	x8, x8, #0x1
  41a608:	str	x8, [sp, #104]
  41a60c:	ldr	x8, [x27, #24]
  41a610:	ldr	x9, [sp, #48]
  41a614:	mov	x0, x21
  41a618:	ldr	x1, [x8, x9, lsl #3]
  41a61c:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  41a620:	tbz	w0, #0, 41b118 <_obstack_memory_used@@Base+0x3bfc>
  41a624:	ldp	x9, x8, [sp, #80]
  41a628:	orr	x8, x8, x9
  41a62c:	ldr	x9, [sp, #96]
  41a630:	orr	x8, x8, x9
  41a634:	orr	x8, x8, x24
  41a638:	cbnz	x8, 41a4a8 <_obstack_memory_used@@Base+0x2f8c>
  41a63c:	ldr	x8, [sp, #80]
  41a640:	stur	x8, [x29, #-64]
  41a644:	ldr	x8, [sp, #88]
  41a648:	stur	x8, [x29, #-56]
  41a64c:	ldr	x8, [sp, #96]
  41a650:	stur	x8, [x29, #-48]
  41a654:	b	41a808 <_obstack_memory_used@@Base+0x32ec>
  41a658:	str	xzr, [sp, #64]
  41a65c:	b	41a808 <_obstack_memory_used@@Base+0x32ec>
  41a660:	ldur	x8, [x29, #-40]
  41a664:	ldp	x19, x24, [sp, #32]
  41a668:	stp	x8, xzr, [sp, #56]
  41a66c:	b	41a690 <_obstack_memory_used@@Base+0x3174>
  41a670:	ldr	x9, [sp, #64]
  41a674:	ldr	x8, [sp, #104]
  41a678:	add	x24, x24, #0x18
  41a67c:	add	x19, x19, #0x20
  41a680:	add	x9, x9, #0x1
  41a684:	cmp	x9, x8
  41a688:	str	x9, [sp, #64]
  41a68c:	b.ge	41a7e8 <_obstack_memory_used@@Base+0x32cc>  // b.tcont
  41a690:	ldp	x11, x10, [x19]
  41a694:	ldp	x12, x13, [sp, #80]
  41a698:	ldp	x9, x8, [x19, #16]
  41a69c:	ldr	x14, [sp, #96]
  41a6a0:	ldr	x15, [sp, #56]
  41a6a4:	and	x12, x11, x12
  41a6a8:	and	x13, x10, x13
  41a6ac:	and	x14, x9, x14
  41a6b0:	stp	x12, x13, [x29, #-96]
  41a6b4:	orr	x12, x13, x12
  41a6b8:	and	x15, x8, x15
  41a6bc:	orr	x12, x12, x14
  41a6c0:	orr	x12, x12, x15
  41a6c4:	stp	x14, x15, [x29, #-80]
  41a6c8:	cbz	x12, 41a670 <_obstack_memory_used@@Base+0x3154>
  41a6cc:	ldr	x13, [sp, #80]
  41a6d0:	bic	x12, x11, x13
  41a6d4:	bic	x13, x13, x11
  41a6d8:	str	x13, [sp, #80]
  41a6dc:	ldr	x13, [sp, #88]
  41a6e0:	bic	x11, x10, x13
  41a6e4:	bic	x13, x13, x10
  41a6e8:	str	x13, [sp, #88]
  41a6ec:	ldr	x13, [sp, #96]
  41a6f0:	stp	x12, x11, [x29, #-128]
  41a6f4:	orr	x11, x11, x12
  41a6f8:	bic	x10, x9, x13
  41a6fc:	bic	x13, x13, x9
  41a700:	str	x13, [sp, #96]
  41a704:	ldr	x13, [sp, #56]
  41a708:	orr	x11, x11, x10
  41a70c:	bic	x9, x8, x13
  41a710:	stp	x10, x9, [x29, #-112]
  41a714:	orr	x9, x11, x9
  41a718:	bic	x13, x13, x8
  41a71c:	str	x13, [sp, #56]
  41a720:	cbz	x9, 41a7b4 <_obstack_memory_used@@Base+0x3298>
  41a724:	ldr	x11, [sp, #104]
  41a728:	ldp	x8, x10, [sp, #32]
  41a72c:	ldp	q0, q1, [x29, #-128]
  41a730:	ldp	q2, q3, [x29, #-96]
  41a734:	mov	w9, #0x18                  	// #24
  41a738:	add	x8, x8, x11, lsl #5
  41a73c:	stp	q0, q1, [x8]
  41a740:	stp	q2, q3, [x19]
  41a744:	ldr	x8, [x24, #8]
  41a748:	madd	x9, x11, x9, x10
  41a74c:	mov	x12, x24
  41a750:	str	x9, [sp, #24]
  41a754:	str	x8, [x9, #8]
  41a758:	ldr	x21, [x24, #8]
  41a75c:	cmp	x21, #0x1
  41a760:	b.lt	41a79c <_obstack_memory_used@@Base+0x3280>  // b.tstop
  41a764:	ldr	x9, [sp, #24]
  41a768:	lsl	x0, x8, #3
  41a76c:	str	x8, [x9]
  41a770:	bl	402730 <malloc@plt>
  41a774:	ldr	x9, [sp, #40]
  41a778:	ldr	x10, [sp, #104]
  41a77c:	mov	w8, #0x18                  	// #24
  41a780:	madd	x8, x10, x8, x9
  41a784:	str	x0, [x8, #16]
  41a788:	cbz	x0, 41b134 <_obstack_memory_used@@Base+0x3c18>
  41a78c:	ldr	x1, [x24, #16]
  41a790:	lsl	x2, x21, #3
  41a794:	bl	402580 <memcpy@plt>
  41a798:	b	41a7a8 <_obstack_memory_used@@Base+0x328c>
  41a79c:	ldr	x8, [sp, #24]
  41a7a0:	stp	xzr, xzr, [x8]
  41a7a4:	str	xzr, [x8, #16]
  41a7a8:	ldr	x8, [sp, #104]
  41a7ac:	add	x8, x8, #0x1
  41a7b0:	str	x8, [sp, #104]
  41a7b4:	ldr	x8, [x27, #24]
  41a7b8:	ldr	x9, [sp, #48]
  41a7bc:	mov	x0, x24
  41a7c0:	ldr	x1, [x8, x9, lsl #3]
  41a7c4:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  41a7c8:	tbz	w0, #0, 41b0f4 <_obstack_memory_used@@Base+0x3bd8>
  41a7cc:	ldp	x9, x8, [sp, #80]
  41a7d0:	orr	x8, x8, x9
  41a7d4:	ldr	x9, [sp, #96]
  41a7d8:	orr	x8, x8, x9
  41a7dc:	ldr	x9, [sp, #56]
  41a7e0:	orr	x8, x8, x9
  41a7e4:	cbnz	x8, 41a670 <_obstack_memory_used@@Base+0x3154>
  41a7e8:	ldr	x8, [sp, #80]
  41a7ec:	stur	x8, [x29, #-64]
  41a7f0:	ldr	x8, [sp, #88]
  41a7f4:	stur	x8, [x29, #-56]
  41a7f8:	ldr	x8, [sp, #96]
  41a7fc:	stur	x8, [x29, #-48]
  41a800:	ldr	x8, [sp, #56]
  41a804:	stur	x8, [x29, #-40]
  41a808:	ldr	x8, [sp, #104]
  41a80c:	ldr	x9, [sp, #64]
  41a810:	cmp	x9, x8
  41a814:	b.ne	41a1b0 <_obstack_memory_used@@Base+0x2c94>  // b.any
  41a818:	ldr	x8, [sp, #32]
  41a81c:	ldr	x10, [sp, #64]
  41a820:	ldp	q1, q0, [x29, #-64]
  41a824:	ldr	x9, [sp, #48]
  41a828:	mov	w0, #0x8                   	// #8
  41a82c:	add	x8, x8, x10, lsl #5
  41a830:	stp	q1, q0, [x8]
  41a834:	ldr	x8, [x27, #24]
  41a838:	ldr	x21, [x8, x9, lsl #3]
  41a83c:	ldr	x9, [sp, #40]
  41a840:	mov	w8, #0x18                  	// #24
  41a844:	madd	x19, x10, x8, x9
  41a848:	mov	w8, #0x1                   	// #1
  41a84c:	dup	v0.2d, x8
  41a850:	str	q0, [x19]
  41a854:	bl	402730 <malloc@plt>
  41a858:	str	x0, [x19, #16]
  41a85c:	cbnz	x0, 41a198 <_obstack_memory_used@@Base+0x2c7c>
  41a860:	b	41b1cc <_obstack_memory_used@@Base+0x3cb0>
  41a864:	ldr	x8, [sp, #104]
  41a868:	cmp	x8, #0x0
  41a86c:	b.le	41acd0 <_obstack_memory_used@@Base+0x37b4>
  41a870:	ldr	x8, [sp, #104]
  41a874:	add	x8, x8, #0x1
  41a878:	lsl	x0, x8, #3
  41a87c:	stp	x8, xzr, [x29, #-160]
  41a880:	bl	402730 <malloc@plt>
  41a884:	cmp	x0, #0x0
  41a888:	mov	w8, #0xc                   	// #12
  41a88c:	mov	x19, x0
  41a890:	csel	w8, w8, wzr, eq  // eq = none
  41a894:	stur	x0, [x29, #-144]
  41a898:	stur	w8, [x29, #-132]
  41a89c:	cbz	x0, 41b1e0 <_obstack_memory_used@@Base+0x3cc4>
  41a8a0:	ldr	x8, [sp, #104]
  41a8a4:	add	x8, x8, x8, lsl #1
  41a8a8:	lsl	x0, x8, #3
  41a8ac:	bl	402730 <malloc@plt>
  41a8b0:	str	x0, [sp, #56]
  41a8b4:	cbz	x0, 41b1e0 <_obstack_memory_used@@Base+0x3cc4>
  41a8b8:	ldr	x9, [sp, #104]
  41a8bc:	ldr	x10, [sp, #56]
  41a8c0:	mov	w8, wzr
  41a8c4:	stp	xzr, xzr, [sp, #80]
  41a8c8:	lsl	x9, x9, #3
  41a8cc:	add	x10, x10, x9
  41a8d0:	add	x9, x10, x9
  41a8d4:	str	xzr, [sp, #64]
  41a8d8:	str	xzr, [sp, #48]
  41a8dc:	str	xzr, [sp, #96]
  41a8e0:	str	wzr, [sp, #12]
  41a8e4:	stp	x9, x10, [sp, #16]
  41a8e8:	b	41a960 <_obstack_memory_used@@Base+0x3444>
  41a8ec:	ldrsb	w9, [x0, #104]
  41a8f0:	tbnz	w9, #31, 41aa20 <_obstack_memory_used@@Base+0x3504>
  41a8f4:	ldr	x9, [sp, #96]
  41a8f8:	ldp	x11, x10, [sp, #16]
  41a8fc:	lsl	x9, x9, #3
  41a900:	str	x0, [x10, x9]
  41a904:	ldr	x10, [sp, #56]
  41a908:	ldr	x10, [x10, x9]
  41a90c:	str	x10, [x11, x9]
  41a910:	ldr	x9, [sp, #32]
  41a914:	ldp	x14, x13, [sp, #96]
  41a918:	add	x9, x9, x14, lsl #5
  41a91c:	add	x14, x14, #0x1
  41a920:	ldp	x10, x11, [x9]
  41a924:	cmp	x14, x13
  41a928:	ldr	x13, [sp, #48]
  41a92c:	ldp	x12, x9, [x9, #16]
  41a930:	orr	x13, x10, x13
  41a934:	ldr	x10, [sp, #64]
  41a938:	str	x13, [sp, #48]
  41a93c:	orr	x10, x11, x10
  41a940:	str	x10, [sp, #64]
  41a944:	ldr	x10, [sp, #80]
  41a948:	orr	x10, x12, x10
  41a94c:	str	x10, [sp, #80]
  41a950:	ldr	x10, [sp, #88]
  41a954:	orr	x10, x9, x10
  41a958:	stp	x10, x14, [sp, #88]
  41a95c:	b.eq	41aaac <_obstack_memory_used@@Base+0x3590>  // b.none
  41a960:	ldr	x10, [sp, #40]
  41a964:	ldr	x11, [sp, #96]
  41a968:	mov	w9, #0x18                  	// #24
  41a96c:	stur	xzr, [x29, #-152]
  41a970:	madd	x21, x11, x9, x10
  41a974:	ldr	x9, [x21, #8]!
  41a978:	cmp	x9, #0x1
  41a97c:	b.lt	41a9f0 <_obstack_memory_used@@Base+0x34d4>  // b.tstop
  41a980:	ldr	x11, [sp, #40]
  41a984:	ldr	x12, [sp, #96]
  41a988:	mov	w10, #0x18                  	// #24
  41a98c:	mov	x19, xzr
  41a990:	madd	x10, x12, x10, x11
  41a994:	ldr	x12, [sp, #72]
  41a998:	add	x24, x10, #0x10
  41a99c:	b	41a9b8 <_obstack_memory_used@@Base+0x349c>
  41a9a0:	ldr	x9, [x21]
  41a9a4:	ldr	x12, [sp, #72]
  41a9a8:	mov	w8, wzr
  41a9ac:	add	x19, x19, #0x1
  41a9b0:	cmp	x19, x9
  41a9b4:	b.ge	41a9ec <_obstack_memory_used@@Base+0x34d0>  // b.tcont
  41a9b8:	ldr	x10, [x24]
  41a9bc:	ldr	x11, [x12, #24]
  41a9c0:	ldr	x10, [x10, x19, lsl #3]
  41a9c4:	ldr	x10, [x11, x10, lsl #3]
  41a9c8:	cmn	x10, #0x1
  41a9cc:	b.eq	41a9ac <_obstack_memory_used@@Base+0x3490>  // b.none
  41a9d0:	ldr	x8, [x12, #48]
  41a9d4:	mov	w9, #0x18                  	// #24
  41a9d8:	sub	x0, x29, #0xa0
  41a9dc:	madd	x1, x10, x9, x8
  41a9e0:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  41a9e4:	cbz	w0, 41a9a0 <_obstack_memory_used@@Base+0x3484>
  41a9e8:	b	41b0a4 <_obstack_memory_used@@Base+0x3b88>
  41a9ec:	stur	w8, [x29, #-132]
  41a9f0:	ldr	x1, [sp, #72]
  41a9f4:	sub	x0, x29, #0x84
  41a9f8:	sub	x2, x29, #0xa0
  41a9fc:	mov	w3, wzr
  41aa00:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  41aa04:	ldur	w8, [x29, #-132]
  41aa08:	ldr	x9, [sp, #56]
  41aa0c:	ldr	x10, [sp, #96]
  41aa10:	str	x0, [x9, x10, lsl #3]
  41aa14:	cbnz	x0, 41a8ec <_obstack_memory_used@@Base+0x33d0>
  41aa18:	cbz	w8, 41a8ec <_obstack_memory_used@@Base+0x33d0>
  41aa1c:	b	41b0a8 <_obstack_memory_used@@Base+0x3b8c>
  41aa20:	ldr	x1, [sp, #72]
  41aa24:	sub	x0, x29, #0x84
  41aa28:	sub	x2, x29, #0xa0
  41aa2c:	mov	w3, #0x1                   	// #1
  41aa30:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  41aa34:	ldr	x8, [sp, #24]
  41aa38:	ldr	x9, [sp, #96]
  41aa3c:	str	x0, [x8, x9, lsl #3]
  41aa40:	cbnz	x0, 41aa4c <_obstack_memory_used@@Base+0x3530>
  41aa44:	ldur	w8, [x29, #-132]
  41aa48:	cbnz	w8, 41b0a8 <_obstack_memory_used@@Base+0x3b8c>
  41aa4c:	ldr	x8, [sp, #56]
  41aa50:	ldr	x9, [sp, #96]
  41aa54:	ldr	x8, [x8, x9, lsl #3]
  41aa58:	cmp	x8, x0
  41aa5c:	b.eq	41aa7c <_obstack_memory_used@@Base+0x3560>  // b.none
  41aa60:	ldr	x8, [sp, #72]
  41aa64:	ldr	w9, [sp, #12]
  41aa68:	ldr	w8, [x8, #180]
  41aa6c:	cmp	w8, #0x1
  41aa70:	cset	w8, gt
  41aa74:	orr	w9, w9, w8
  41aa78:	str	w9, [sp, #12]
  41aa7c:	ldr	x1, [sp, #72]
  41aa80:	sub	x0, x29, #0x84
  41aa84:	sub	x2, x29, #0xa0
  41aa88:	mov	w3, #0x2                   	// #2
  41aa8c:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  41aa90:	ldur	w8, [x29, #-132]
  41aa94:	ldr	x9, [sp, #96]
  41aa98:	ldr	x10, [sp, #16]
  41aa9c:	str	x0, [x10, x9, lsl #3]
  41aaa0:	cbnz	x0, 41a910 <_obstack_memory_used@@Base+0x33f4>
  41aaa4:	cbz	w8, 41a910 <_obstack_memory_used@@Base+0x33f4>
  41aaa8:	b	41b0a8 <_obstack_memory_used@@Base+0x3b8c>
  41aaac:	ldr	w8, [sp, #12]
  41aab0:	tbnz	w8, #0, 41ace4 <_obstack_memory_used@@Base+0x37c8>
  41aab4:	mov	w0, #0x8                   	// #8
  41aab8:	mov	w1, #0x100                 	// #256
  41aabc:	bl	402840 <calloc@plt>
  41aac0:	str	x0, [x26]
  41aac4:	cbz	x0, 41b0a8 <_obstack_memory_used@@Base+0x3b8c>
  41aac8:	ldr	x8, [sp, #48]
  41aacc:	cbz	x8, 41ab3c <_obstack_memory_used@@Base+0x3620>
  41aad0:	ldr	x9, [sp, #48]
  41aad4:	mov	x8, xzr
  41aad8:	mov	w10, #0x1                   	// #1
  41aadc:	tbnz	w9, #0, 41aaf4 <_obstack_memory_used@@Base+0x35d8>
  41aae0:	lsl	x10, x10, #1
  41aae4:	lsr	x9, x9, #1
  41aae8:	add	x8, x8, #0x1
  41aaec:	cbnz	x9, 41aadc <_obstack_memory_used@@Base+0x35c0>
  41aaf0:	b	41ab3c <_obstack_memory_used@@Base+0x3620>
  41aaf4:	ldr	x12, [sp, #32]
  41aaf8:	mov	x11, #0xfffffffffffffff8    	// #-8
  41aafc:	ldr	x13, [x12], #32
  41ab00:	add	x11, x11, #0x8
  41ab04:	tst	x13, x10
  41ab08:	b.eq	41aafc <_obstack_memory_used@@Base+0x35e0>  // b.none
  41ab0c:	ldr	x12, [sp, #72]
  41ab10:	ldr	x13, [sp, #24]
  41ab14:	ldr	x12, [x12, #184]
  41ab18:	tst	x12, x10
  41ab1c:	ldr	x12, [sp, #56]
  41ab20:	csel	x12, x12, x13, eq  // eq = none
  41ab24:	ldr	x11, [x12, x11]
  41ab28:	str	x11, [x0, x8, lsl #3]
  41ab2c:	lsl	x10, x10, #1
  41ab30:	lsr	x9, x9, #1
  41ab34:	add	x8, x8, #0x1
  41ab38:	cbnz	x9, 41aadc <_obstack_memory_used@@Base+0x35c0>
  41ab3c:	ldr	x8, [sp, #64]
  41ab40:	cbz	x8, 41abb8 <_obstack_memory_used@@Base+0x369c>
  41ab44:	ldr	x9, [sp, #40]
  41ab48:	mov	w8, #0x1808                	// #6152
  41ab4c:	mov	w10, #0x1                   	// #1
  41ab50:	add	x8, x9, x8
  41ab54:	mov	w9, #0x40                  	// #64
  41ab58:	ldr	x11, [sp, #64]
  41ab5c:	tbnz	w11, #0, 41ab7c <_obstack_memory_used@@Base+0x3660>
  41ab60:	ldr	x11, [sp, #64]
  41ab64:	lsl	x10, x10, #1
  41ab68:	add	x9, x9, #0x1
  41ab6c:	lsr	x11, x11, #1
  41ab70:	str	x11, [sp, #64]
  41ab74:	cbnz	x11, 41ab58 <_obstack_memory_used@@Base+0x363c>
  41ab78:	b	41abb8 <_obstack_memory_used@@Base+0x369c>
  41ab7c:	mov	x11, #0xfffffffffffffff8    	// #-8
  41ab80:	mov	x12, x8
  41ab84:	ldr	x13, [x12], #32
  41ab88:	add	x11, x11, #0x8
  41ab8c:	tst	x13, x10
  41ab90:	b.eq	41ab84 <_obstack_memory_used@@Base+0x3668>  // b.none
  41ab94:	ldr	x12, [sp, #72]
  41ab98:	ldr	x13, [sp, #24]
  41ab9c:	ldr	x12, [x12, #192]
  41aba0:	tst	x12, x10
  41aba4:	ldr	x12, [sp, #56]
  41aba8:	csel	x12, x12, x13, eq  // eq = none
  41abac:	ldr	x11, [x12, x11]
  41abb0:	str	x11, [x0, x9, lsl #3]
  41abb4:	b	41ab60 <_obstack_memory_used@@Base+0x3644>
  41abb8:	ldr	x8, [sp, #80]
  41abbc:	cbz	x8, 41ac34 <_obstack_memory_used@@Base+0x3718>
  41abc0:	ldr	x9, [sp, #40]
  41abc4:	mov	w8, #0x1810                	// #6160
  41abc8:	mov	w10, #0x1                   	// #1
  41abcc:	add	x8, x9, x8
  41abd0:	mov	w9, #0x80                  	// #128
  41abd4:	ldr	x11, [sp, #80]
  41abd8:	tbnz	w11, #0, 41abf8 <_obstack_memory_used@@Base+0x36dc>
  41abdc:	ldr	x11, [sp, #80]
  41abe0:	lsl	x10, x10, #1
  41abe4:	add	x9, x9, #0x1
  41abe8:	lsr	x11, x11, #1
  41abec:	str	x11, [sp, #80]
  41abf0:	cbnz	x11, 41abd4 <_obstack_memory_used@@Base+0x36b8>
  41abf4:	b	41ac34 <_obstack_memory_used@@Base+0x3718>
  41abf8:	mov	x11, #0xfffffffffffffff8    	// #-8
  41abfc:	mov	x12, x8
  41ac00:	ldr	x13, [x12], #32
  41ac04:	add	x11, x11, #0x8
  41ac08:	tst	x13, x10
  41ac0c:	b.eq	41ac00 <_obstack_memory_used@@Base+0x36e4>  // b.none
  41ac10:	ldr	x12, [sp, #72]
  41ac14:	ldr	x13, [sp, #24]
  41ac18:	ldr	x12, [x12, #200]
  41ac1c:	tst	x12, x10
  41ac20:	ldr	x12, [sp, #56]
  41ac24:	csel	x12, x12, x13, eq  // eq = none
  41ac28:	ldr	x11, [x12, x11]
  41ac2c:	str	x11, [x0, x9, lsl #3]
  41ac30:	b	41abdc <_obstack_memory_used@@Base+0x36c0>
  41ac34:	ldr	x8, [sp, #88]
  41ac38:	cbz	x8, 41aedc <_obstack_memory_used@@Base+0x39c0>
  41ac3c:	ldr	x9, [sp, #40]
  41ac40:	mov	w8, #0x1818                	// #6168
  41ac44:	mov	w10, #0x1                   	// #1
  41ac48:	add	x8, x9, x8
  41ac4c:	mov	w9, #0xc0                  	// #192
  41ac50:	ldr	x11, [sp, #88]
  41ac54:	tbnz	w11, #0, 41ac74 <_obstack_memory_used@@Base+0x3758>
  41ac58:	ldr	x11, [sp, #88]
  41ac5c:	lsl	x10, x10, #1
  41ac60:	add	x9, x9, #0x1
  41ac64:	lsr	x11, x11, #1
  41ac68:	str	x11, [sp, #88]
  41ac6c:	cbnz	x11, 41ac50 <_obstack_memory_used@@Base+0x3734>
  41ac70:	b	41aedc <_obstack_memory_used@@Base+0x39c0>
  41ac74:	mov	x11, #0xfffffffffffffff8    	// #-8
  41ac78:	mov	x12, x8
  41ac7c:	ldr	x13, [x12], #32
  41ac80:	add	x11, x11, #0x8
  41ac84:	tst	x13, x10
  41ac88:	b.eq	41ac7c <_obstack_memory_used@@Base+0x3760>  // b.none
  41ac8c:	ldr	x12, [sp, #72]
  41ac90:	ldr	x13, [sp, #24]
  41ac94:	ldr	x12, [x12, #208]
  41ac98:	tst	x12, x10
  41ac9c:	ldr	x12, [sp, #56]
  41aca0:	csel	x12, x12, x13, eq  // eq = none
  41aca4:	ldr	x11, [x12, x11]
  41aca8:	str	x11, [x0, x9, lsl #3]
  41acac:	b	41ac58 <_obstack_memory_used@@Base+0x373c>
  41acb0:	ldr	x0, [sp, #40]
  41acb4:	bl	402a10 <free@plt>
  41acb8:	mov	w0, #0x8                   	// #8
  41acbc:	mov	w1, #0x100                 	// #256
  41acc0:	bl	402840 <calloc@plt>
  41acc4:	str	x0, [x26]
  41acc8:	cbnz	x0, 41af6c <_obstack_memory_used@@Base+0x3a50>
  41accc:	b	41b1b0 <_obstack_memory_used@@Base+0x3c94>
  41acd0:	ldr	x0, [sp, #40]
  41acd4:	bl	402a10 <free@plt>
  41acd8:	ldr	x8, [sp, #104]
  41acdc:	cbz	x8, 41acb8 <_obstack_memory_used@@Base+0x379c>
  41ace0:	b	41b1b0 <_obstack_memory_used@@Base+0x3c94>
  41ace4:	mov	w0, #0x8                   	// #8
  41ace8:	mov	w1, #0x200                 	// #512
  41acec:	bl	402840 <calloc@plt>
  41acf0:	str	x0, [x27, #96]
  41acf4:	cbz	x0, 41b0a8 <_obstack_memory_used@@Base+0x3b8c>
  41acf8:	ldr	x8, [sp, #48]
  41acfc:	cbz	x8, 41ad68 <_obstack_memory_used@@Base+0x384c>
  41ad00:	ldp	x10, x9, [sp, #48]
  41ad04:	mov	x8, xzr
  41ad08:	mov	w11, #0x1                   	// #1
  41ad0c:	sub	x9, x9, #0x8
  41ad10:	tbnz	w10, #0, 41ad28 <_obstack_memory_used@@Base+0x380c>
  41ad14:	lsl	x11, x11, #1
  41ad18:	lsr	x10, x10, #1
  41ad1c:	add	x8, x8, #0x1
  41ad20:	cbnz	x10, 41ad10 <_obstack_memory_used@@Base+0x37f4>
  41ad24:	b	41ad68 <_obstack_memory_used@@Base+0x384c>
  41ad28:	ldr	x13, [sp, #32]
  41ad2c:	mov	x12, x9
  41ad30:	ldr	x14, [x13], #32
  41ad34:	add	x12, x12, #0x8
  41ad38:	tst	x14, x11
  41ad3c:	b.eq	41ad30 <_obstack_memory_used@@Base+0x3814>  // b.none
  41ad40:	ldr	x14, [sp, #104]
  41ad44:	ldr	x13, [x12]
  41ad48:	ldr	x12, [x12, x14, lsl #3]
  41ad4c:	add	x14, x0, x8, lsl #3
  41ad50:	str	x13, [x14]
  41ad54:	str	x12, [x14, #2048]
  41ad58:	lsl	x11, x11, #1
  41ad5c:	lsr	x10, x10, #1
  41ad60:	add	x8, x8, #0x1
  41ad64:	cbnz	x10, 41ad10 <_obstack_memory_used@@Base+0x37f4>
  41ad68:	ldr	x8, [sp, #64]
  41ad6c:	cbz	x8, 41ade4 <_obstack_memory_used@@Base+0x38c8>
  41ad70:	ldr	x8, [sp, #56]
  41ad74:	ldr	x10, [sp, #40]
  41ad78:	mov	w9, #0x1808                	// #6152
  41ad7c:	mov	w11, #0x1                   	// #1
  41ad80:	sub	x8, x8, #0x8
  41ad84:	add	x9, x10, x9
  41ad88:	mov	w10, #0x40                  	// #64
  41ad8c:	ldr	x12, [sp, #64]
  41ad90:	tbnz	w12, #0, 41adb0 <_obstack_memory_used@@Base+0x3894>
  41ad94:	ldr	x12, [sp, #64]
  41ad98:	lsl	x11, x11, #1
  41ad9c:	add	x10, x10, #0x1
  41ada0:	lsr	x12, x12, #1
  41ada4:	str	x12, [sp, #64]
  41ada8:	cbnz	x12, 41ad8c <_obstack_memory_used@@Base+0x3870>
  41adac:	b	41ade4 <_obstack_memory_used@@Base+0x38c8>
  41adb0:	mov	x13, x9
  41adb4:	mov	x12, x8
  41adb8:	ldr	x14, [x13], #32
  41adbc:	add	x12, x12, #0x8
  41adc0:	tst	x14, x11
  41adc4:	b.eq	41adb8 <_obstack_memory_used@@Base+0x389c>  // b.none
  41adc8:	ldr	x14, [sp, #104]
  41adcc:	ldr	x13, [x12]
  41add0:	ldr	x12, [x12, x14, lsl #3]
  41add4:	add	x14, x0, x10, lsl #3
  41add8:	str	x13, [x14]
  41addc:	str	x12, [x14, #2048]
  41ade0:	b	41ad94 <_obstack_memory_used@@Base+0x3878>
  41ade4:	ldr	x8, [sp, #80]
  41ade8:	cbz	x8, 41ae60 <_obstack_memory_used@@Base+0x3944>
  41adec:	ldr	x8, [sp, #56]
  41adf0:	ldr	x10, [sp, #40]
  41adf4:	mov	w9, #0x1810                	// #6160
  41adf8:	mov	w11, #0x1                   	// #1
  41adfc:	sub	x8, x8, #0x8
  41ae00:	add	x9, x10, x9
  41ae04:	mov	w10, #0x80                  	// #128
  41ae08:	ldr	x12, [sp, #80]
  41ae0c:	tbnz	w12, #0, 41ae2c <_obstack_memory_used@@Base+0x3910>
  41ae10:	ldr	x12, [sp, #80]
  41ae14:	lsl	x11, x11, #1
  41ae18:	add	x10, x10, #0x1
  41ae1c:	lsr	x12, x12, #1
  41ae20:	str	x12, [sp, #80]
  41ae24:	cbnz	x12, 41ae08 <_obstack_memory_used@@Base+0x38ec>
  41ae28:	b	41ae60 <_obstack_memory_used@@Base+0x3944>
  41ae2c:	mov	x13, x9
  41ae30:	mov	x12, x8
  41ae34:	ldr	x14, [x13], #32
  41ae38:	add	x12, x12, #0x8
  41ae3c:	tst	x14, x11
  41ae40:	b.eq	41ae34 <_obstack_memory_used@@Base+0x3918>  // b.none
  41ae44:	ldr	x14, [sp, #104]
  41ae48:	ldr	x13, [x12]
  41ae4c:	ldr	x12, [x12, x14, lsl #3]
  41ae50:	add	x14, x0, x10, lsl #3
  41ae54:	str	x13, [x14]
  41ae58:	str	x12, [x14, #2048]
  41ae5c:	b	41ae10 <_obstack_memory_used@@Base+0x38f4>
  41ae60:	ldr	x8, [sp, #88]
  41ae64:	cbz	x8, 41aedc <_obstack_memory_used@@Base+0x39c0>
  41ae68:	ldr	x8, [sp, #56]
  41ae6c:	ldr	x10, [sp, #40]
  41ae70:	mov	w9, #0x1818                	// #6168
  41ae74:	mov	w11, #0x1                   	// #1
  41ae78:	sub	x8, x8, #0x8
  41ae7c:	add	x9, x10, x9
  41ae80:	mov	w10, #0xc0                  	// #192
  41ae84:	ldr	x12, [sp, #88]
  41ae88:	tbnz	w12, #0, 41aea8 <_obstack_memory_used@@Base+0x398c>
  41ae8c:	ldr	x12, [sp, #88]
  41ae90:	lsl	x11, x11, #1
  41ae94:	add	x10, x10, #0x1
  41ae98:	lsr	x12, x12, #1
  41ae9c:	str	x12, [sp, #88]
  41aea0:	cbnz	x12, 41ae84 <_obstack_memory_used@@Base+0x3968>
  41aea4:	b	41aedc <_obstack_memory_used@@Base+0x39c0>
  41aea8:	mov	x13, x9
  41aeac:	mov	x12, x8
  41aeb0:	ldr	x14, [x13], #32
  41aeb4:	add	x12, x12, #0x8
  41aeb8:	tst	x14, x11
  41aebc:	b.eq	41aeb0 <_obstack_memory_used@@Base+0x3994>  // b.none
  41aec0:	ldr	x14, [sp, #104]
  41aec4:	ldr	x13, [x12]
  41aec8:	ldr	x12, [x12, x14, lsl #3]
  41aecc:	add	x14, x0, x10, lsl #3
  41aed0:	str	x13, [x14]
  41aed4:	str	x12, [x14, #2048]
  41aed8:	b	41ae8c <_obstack_memory_used@@Base+0x3970>
  41aedc:	ldr	x8, [sp, #48]
  41aee0:	tbz	w8, #10, 41af2c <_obstack_memory_used@@Base+0x3a10>
  41aee4:	ldr	x9, [sp, #104]
  41aee8:	ldr	x8, [sp, #56]
  41aeec:	add	x8, x8, x9, lsl #4
  41aef0:	ldr	x10, [sp, #32]
  41aef4:	ldrb	w10, [x10, #1]
  41aef8:	tbnz	w10, #2, 41af18 <_obstack_memory_used@@Base+0x39fc>
  41aefc:	ldr	x10, [sp, #32]
  41af00:	add	x8, x8, #0x8
  41af04:	subs	x9, x9, #0x1
  41af08:	add	x10, x10, #0x20
  41af0c:	str	x10, [sp, #32]
  41af10:	b.ne	41aef0 <_obstack_memory_used@@Base+0x39d4>  // b.any
  41af14:	b	41af2c <_obstack_memory_used@@Base+0x3a10>
  41af18:	ldr	x8, [x8]
  41af1c:	ldr	w9, [sp, #12]
  41af20:	str	x8, [x0, #80]
  41af24:	tbz	w9, #0, 41af2c <_obstack_memory_used@@Base+0x3a10>
  41af28:	str	x8, [x0, #2128]
  41af2c:	ldr	x0, [sp, #56]
  41af30:	bl	402a10 <free@plt>
  41af34:	ldur	x0, [x29, #-144]
  41af38:	bl	402a10 <free@plt>
  41af3c:	mov	w19, #0x10                  	// #16
  41af40:	ldr	x8, [sp, #40]
  41af44:	ldr	x0, [x8, x19]
  41af48:	bl	402a10 <free@plt>
  41af4c:	ldr	x8, [sp, #104]
  41af50:	add	x19, x19, #0x18
  41af54:	subs	x8, x8, #0x1
  41af58:	str	x8, [sp, #104]
  41af5c:	b.ne	41af40 <_obstack_memory_used@@Base+0x3a24>  // b.any
  41af60:	ldr	x0, [sp, #40]
  41af64:	bl	402a10 <free@plt>
  41af68:	ldr	x0, [x26]
  41af6c:	ldr	x24, [sp, #112]
  41af70:	ldr	w21, [sp, #156]
  41af74:	cbnz	x0, 419c60 <_obstack_memory_used@@Base+0x2744>
  41af78:	b	41a140 <_obstack_memory_used@@Base+0x2c24>
  41af7c:	add	w1, w8, #0x2
  41af80:	add	x0, sp, #0x130
  41af84:	bl	4240e4 <_obstack_memory_used@@Base+0xcbc8>
  41af88:	stur	w0, [x29, #-164]
  41af8c:	cbz	w0, 419c38 <_obstack_memory_used@@Base+0x271c>
  41af90:	b	41b958 <_obstack_memory_used@@Base+0x443c>
  41af94:	ldr	x8, [sp, #376]
  41af98:	cmp	x8, #0x0
  41af9c:	b.le	41b068 <_obstack_memory_used@@Base+0x3b4c>
  41afa0:	ldr	x9, [sp, #392]
  41afa4:	ldr	x26, [sp, #264]
  41afa8:	sub	x8, x8, #0x1
  41afac:	cmp	x9, x8
  41afb0:	b.eq	41b074 <_obstack_memory_used@@Base+0x3b58>  // b.none
  41afb4:	ldr	w9, [sp, #448]
  41afb8:	cmp	w9, #0x2
  41afbc:	b.lt	41afec <_obstack_memory_used@@Base+0x3ad0>  // b.tstop
  41afc0:	ldr	x9, [sp, #320]
  41afc4:	ldr	w19, [x9, x8, lsl #2]
  41afc8:	cmn	w19, #0x1
  41afcc:	b.ne	41b014 <_obstack_memory_used@@Base+0x3af8>  // b.any
  41afd0:	sub	x8, x8, #0x1
  41afd4:	cmn	x8, #0x1
  41afd8:	b.ne	41afc4 <_obstack_memory_used@@Base+0x3aa8>  // b.any
  41afdc:	ldr	w8, [sp, #416]
  41afe0:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41afe4:	stur	wzr, [x29, #-164]
  41afe8:	b	419c40 <_obstack_memory_used@@Base+0x2724>
  41afec:	ldr	x9, [sp, #312]
  41aff0:	ldr	x10, [sp, #432]
  41aff4:	ldrb	w8, [x9, x8]
  41aff8:	lsr	x9, x8, #3
  41affc:	and	x9, x9, #0x18
  41b000:	ldr	x9, [x10, x9]
  41b004:	lsr	x9, x9, x8
  41b008:	tbz	w9, #0, 41b038 <_obstack_memory_used@@Base+0x3b1c>
  41b00c:	mov	w8, #0x1                   	// #1
  41b010:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41b014:	ldrb	w8, [sp, #446]
  41b018:	cbnz	w8, 41b07c <_obstack_memory_used@@Base+0x3b60>
  41b01c:	cmp	w19, #0xa
  41b020:	b.ne	41b040 <_obstack_memory_used@@Base+0x3b24>  // b.any
  41b024:	ldrb	w8, [sp, #445]
  41b028:	cmp	w8, #0x0
  41b02c:	cset	w8, ne  // ne = any
  41b030:	lsl	w8, w8, #1
  41b034:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41b038:	cmp	w8, #0xa
  41b03c:	b.eq	41b024 <_obstack_memory_used@@Base+0x3b08>  // b.none
  41b040:	mov	w8, wzr
  41b044:	ubfiz	w8, w8, #8, #1
  41b048:	orr	x8, x8, x28
  41b04c:	ldr	x28, [x11, x8, lsl #3]
  41b050:	b	419c68 <_obstack_memory_used@@Base+0x274c>
  41b054:	stur	w0, [x29, #-96]
  41b058:	ldr	x26, [sp, #264]
  41b05c:	mov	x28, xzr
  41b060:	stur	w0, [x29, #-164]
  41b064:	b	419c68 <_obstack_memory_used@@Base+0x274c>
  41b068:	ldr	w8, [sp, #416]
  41b06c:	ldr	x26, [sp, #264]
  41b070:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41b074:	mov	w8, #0xa                   	// #10
  41b078:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41b07c:	mov	w0, w19
  41b080:	str	x11, [sp, #112]
  41b084:	bl	402b10 <iswalnum@plt>
  41b088:	cmp	w19, #0x5f
  41b08c:	mov	w8, #0x1                   	// #1
  41b090:	b.eq	41b0e8 <_obstack_memory_used@@Base+0x3bcc>  // b.none
  41b094:	ldr	x26, [sp, #264]
  41b098:	ldr	x11, [sp, #112]
  41b09c:	cbz	w0, 41b01c <_obstack_memory_used@@Base+0x3b00>
  41b0a0:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41b0a4:	stur	w0, [x29, #-132]
  41b0a8:	ldr	x0, [sp, #56]
  41b0ac:	bl	402a10 <free@plt>
  41b0b0:	ldur	x0, [x29, #-144]
  41b0b4:	bl	402a10 <free@plt>
  41b0b8:	ldr	x8, [sp, #104]
  41b0bc:	cmp	x8, #0x1
  41b0c0:	b.lt	41b1a8 <_obstack_memory_used@@Base+0x3c8c>  // b.tstop
  41b0c4:	ldr	x8, [sp, #40]
  41b0c8:	add	x19, x8, #0x10
  41b0cc:	ldr	x0, [x19], #24
  41b0d0:	bl	402a10 <free@plt>
  41b0d4:	ldr	x8, [sp, #104]
  41b0d8:	subs	x8, x8, #0x1
  41b0dc:	str	x8, [sp, #104]
  41b0e0:	b.ne	41b0cc <_obstack_memory_used@@Base+0x3bb0>  // b.any
  41b0e4:	b	41b1a8 <_obstack_memory_used@@Base+0x3c8c>
  41b0e8:	ldr	x26, [sp, #264]
  41b0ec:	ldr	x11, [sp, #112]
  41b0f0:	b	41b044 <_obstack_memory_used@@Base+0x3b28>
  41b0f4:	ldr	x8, [sp, #80]
  41b0f8:	stur	x8, [x29, #-64]
  41b0fc:	ldr	x8, [sp, #88]
  41b100:	stur	x8, [x29, #-56]
  41b104:	ldr	x8, [sp, #96]
  41b108:	stur	x8, [x29, #-48]
  41b10c:	ldr	x8, [sp, #56]
  41b110:	stur	x8, [x29, #-40]
  41b114:	b	41b178 <_obstack_memory_used@@Base+0x3c5c>
  41b118:	ldr	x8, [sp, #80]
  41b11c:	stur	x8, [x29, #-64]
  41b120:	ldr	x8, [sp, #88]
  41b124:	stur	x8, [x29, #-56]
  41b128:	ldr	x8, [sp, #96]
  41b12c:	stur	x8, [x29, #-48]
  41b130:	b	41b178 <_obstack_memory_used@@Base+0x3c5c>
  41b134:	ldr	x8, [sp, #80]
  41b138:	stur	x8, [x29, #-64]
  41b13c:	ldr	x8, [sp, #88]
  41b140:	stur	x8, [x29, #-56]
  41b144:	ldr	x8, [sp, #96]
  41b148:	stur	x8, [x29, #-48]
  41b14c:	ldr	x8, [sp, #56]
  41b150:	stur	x8, [x29, #-40]
  41b154:	b	41b170 <_obstack_memory_used@@Base+0x3c54>
  41b158:	ldr	x8, [sp, #80]
  41b15c:	stur	x8, [x29, #-64]
  41b160:	ldr	x8, [sp, #88]
  41b164:	stur	x8, [x29, #-56]
  41b168:	ldr	x8, [sp, #96]
  41b16c:	stur	x8, [x29, #-48]
  41b170:	ldr	x8, [sp, #24]
  41b174:	stp	xzr, xzr, [x8]
  41b178:	ldr	x8, [sp, #104]
  41b17c:	str	x8, [sp, #64]
  41b180:	cmp	x8, #0x1
  41b184:	b.lt	41b1a8 <_obstack_memory_used@@Base+0x3c8c>  // b.tstop
  41b188:	ldr	x8, [sp, #40]
  41b18c:	add	x19, x8, #0x10
  41b190:	ldr	x0, [x19], #24
  41b194:	bl	402a10 <free@plt>
  41b198:	ldr	x8, [sp, #64]
  41b19c:	subs	x8, x8, #0x1
  41b1a0:	str	x8, [sp, #64]
  41b1a4:	b.ne	41b190 <_obstack_memory_used@@Base+0x3c74>  // b.any
  41b1a8:	ldr	x0, [sp, #40]
  41b1ac:	bl	402a10 <free@plt>
  41b1b0:	ldr	x24, [sp, #112]
  41b1b4:	ldr	w21, [sp, #156]
  41b1b8:	ldr	x26, [sp, #264]
  41b1bc:	mov	w8, #0xc                   	// #12
  41b1c0:	mov	x28, xzr
  41b1c4:	stur	w8, [x29, #-164]
  41b1c8:	b	419c68 <_obstack_memory_used@@Base+0x274c>
  41b1cc:	stp	xzr, xzr, [x19]
  41b1d0:	ldr	x8, [sp, #64]
  41b1d4:	cmp	x8, #0x1
  41b1d8:	b.ge	41b188 <_obstack_memory_used@@Base+0x3c6c>  // b.tcont
  41b1dc:	b	41b1a8 <_obstack_memory_used@@Base+0x3c8c>
  41b1e0:	mov	x0, x19
  41b1e4:	bl	402a10 <free@plt>
  41b1e8:	b	41b0c4 <_obstack_memory_used@@Base+0x3ba8>
  41b1ec:	ldr	x8, [sp, #176]
  41b1f0:	str	x8, [sp, #256]
  41b1f4:	ldr	x9, [sp, #256]
  41b1f8:	cbnz	x9, 41b20c <_obstack_memory_used@@Base+0x3cf0>
  41b1fc:	b	41b218 <_obstack_memory_used@@Base+0x3cfc>
  41b200:	ldr	x25, [sp, #288]
  41b204:	ldr	x9, [sp, #256]
  41b208:	cbz	x9, 41b218 <_obstack_memory_used@@Base+0x3cfc>
  41b20c:	ldr	x8, [x9]
  41b210:	add	x8, x8, x26
  41b214:	str	x8, [x9]
  41b218:	ldp	x28, x20, [sp, #224]
  41b21c:	cmn	x23, #0x1
  41b220:	b.eq	41b3b4 <_obstack_memory_used@@Base+0x3e98>  // b.none
  41b224:	cmn	x23, #0x2
  41b228:	b.eq	41b958 <_obstack_memory_used@@Base+0x443c>  // b.none
  41b22c:	ldp	x21, x19, [sp, #200]
  41b230:	str	x23, [sp, #472]
  41b234:	ldrb	w8, [x19, #56]
  41b238:	cmp	x21, #0x2
  41b23c:	b.cc	41b244 <_obstack_memory_used@@Base+0x3d28>  // b.lo, b.ul, b.last
  41b240:	tbz	w8, #4, 41b24c <_obstack_memory_used@@Base+0x3d30>
  41b244:	ldr	x9, [x24, #152]
  41b248:	cbz	x9, 41b268 <_obstack_memory_used@@Base+0x3d4c>
  41b24c:	ldr	x8, [sp, #488]
  41b250:	add	x0, sp, #0x130
  41b254:	mov	x2, x23
  41b258:	ldr	x1, [x8, x23, lsl #3]
  41b25c:	bl	422884 <_obstack_memory_used@@Base+0xb368>
  41b260:	str	x0, [sp, #480]
  41b264:	ldrb	w8, [x19, #56]
  41b268:	cmp	x21, #0x2
  41b26c:	b.cc	41b27c <_obstack_memory_used@@Base+0x3d60>  // b.lo, b.ul, b.last
  41b270:	tbnz	w8, #4, 41b27c <_obstack_memory_used@@Base+0x3d60>
  41b274:	ldrb	w8, [x24, #176]
  41b278:	tbnz	w8, #0, 41b284 <_obstack_memory_used@@Base+0x3d68>
  41b27c:	ldr	x8, [x24, #152]
  41b280:	cbz	x8, 41b744 <_obstack_memory_used@@Base+0x4228>
  41b284:	ldr	x28, [sp, #472]
  41b288:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  41b28c:	cmp	x28, x8
  41b290:	b.cs	41b958 <_obstack_memory_used@@Base+0x443c>  // b.hs, b.nlast
  41b294:	ldr	x25, [sp, #456]
  41b298:	ldr	x20, [sp, #480]
  41b29c:	lsl	x8, x28, #3
  41b2a0:	add	x19, x8, #0x8
  41b2a4:	mov	x0, x19
  41b2a8:	bl	402730 <malloc@plt>
  41b2ac:	mov	x26, x0
  41b2b0:	cbz	x0, 41b968 <_obstack_memory_used@@Base+0x444c>
  41b2b4:	ldr	x8, [x25, #152]
  41b2b8:	cbz	x8, 41b364 <_obstack_memory_used@@Base+0x3e48>
  41b2bc:	mov	x0, x19
  41b2c0:	bl	402730 <malloc@plt>
  41b2c4:	cbz	x0, 41b968 <_obstack_memory_used@@Base+0x444c>
  41b2c8:	mov	x19, x0
  41b2cc:	lsl	x8, x28, #3
  41b2d0:	add	x2, x8, #0x8
  41b2d4:	mov	x0, x19
  41b2d8:	mov	w1, wzr
  41b2dc:	bl	402800 <memset@plt>
  41b2e0:	ldr	x8, [sp, #160]
  41b2e4:	add	x0, sp, #0x130
  41b2e8:	sub	x1, x29, #0x40
  41b2ec:	stp	x26, x19, [x29, #-64]
  41b2f0:	stp	x20, x28, [x29, #-48]
  41b2f4:	stp	xzr, xzr, [x8, #8]
  41b2f8:	str	xzr, [x8]
  41b2fc:	bl	4260b4 <_obstack_memory_used@@Base+0xeb98>
  41b300:	cbnz	w0, 41b5d4 <_obstack_memory_used@@Base+0x40b8>
  41b304:	ldr	x8, [x26]
  41b308:	cbnz	x8, 41b3e4 <_obstack_memory_used@@Base+0x3ec8>
  41b30c:	ldr	x9, [x19]
  41b310:	cbnz	x9, 41b3e4 <_obstack_memory_used@@Base+0x3ec8>
  41b314:	subs	x28, x28, #0x1
  41b318:	b.lt	41b484 <_obstack_memory_used@@Base+0x3f68>  // b.tstop
  41b31c:	ldr	x8, [sp, #488]
  41b320:	ldr	x20, [sp, #232]
  41b324:	b	41b338 <_obstack_memory_used@@Base+0x3e1c>
  41b328:	add	x9, x28, #0x1
  41b32c:	sub	x28, x28, #0x1
  41b330:	cmp	x9, #0x2
  41b334:	b.lt	41b35c <_obstack_memory_used@@Base+0x3e40>  // b.tstop
  41b338:	ldr	x1, [x8, x28, lsl #3]
  41b33c:	cbz	x1, 41b328 <_obstack_memory_used@@Base+0x3e0c>
  41b340:	ldrb	w9, [x1, #104]
  41b344:	tbz	w9, #4, 41b328 <_obstack_memory_used@@Base+0x3e0c>
  41b348:	add	x0, sp, #0x130
  41b34c:	mov	x2, x28
  41b350:	bl	422884 <_obstack_memory_used@@Base+0xb368>
  41b354:	mov	x20, x0
  41b358:	b	41b2cc <_obstack_memory_used@@Base+0x3db0>
  41b35c:	ldr	x25, [sp, #288]
  41b360:	b	41b39c <_obstack_memory_used@@Base+0x3e80>
  41b364:	ldr	x8, [sp, #160]
  41b368:	add	x0, sp, #0x130
  41b36c:	sub	x1, x29, #0x40
  41b370:	stp	x26, xzr, [x29, #-64]
  41b374:	stp	x20, x28, [x29, #-48]
  41b378:	stp	xzr, xzr, [x8]
  41b37c:	str	xzr, [x8, #16]
  41b380:	bl	4260b4 <_obstack_memory_used@@Base+0xeb98>
  41b384:	cbnz	w0, 41b634 <_obstack_memory_used@@Base+0x4118>
  41b388:	ldr	x8, [x26]
  41b38c:	ldr	x25, [sp, #288]
  41b390:	cbnz	x8, 41b734 <_obstack_memory_used@@Base+0x4218>
  41b394:	ldr	x20, [sp, #232]
  41b398:	mov	x19, xzr
  41b39c:	mov	x0, x26
  41b3a0:	bl	402a10 <free@plt>
  41b3a4:	mov	x0, x19
  41b3a8:	bl	402a10 <free@plt>
  41b3ac:	ldr	x28, [sp, #224]
  41b3b0:	ldr	w21, [sp, #156]
  41b3b4:	add	x0, sp, #0x130
  41b3b8:	bl	4229ec <_obstack_memory_used@@Base+0xb4d0>
  41b3bc:	ldur	x8, [x29, #-176]
  41b3c0:	ldr	x9, [sp, #296]
  41b3c4:	mov	w27, #0x1                   	// #1
  41b3c8:	add	x26, x8, x9
  41b3cc:	cmp	x26, x20
  41b3d0:	stur	x26, [x29, #-176]
  41b3d4:	b.lt	41b6a0 <_obstack_memory_used@@Base+0x4184>  // b.tstop
  41b3d8:	cmp	x25, x26
  41b3dc:	b.ge	4198ac <_obstack_memory_used@@Base+0x2390>  // b.tcont
  41b3e0:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b3e4:	tbnz	x28, #63, 41b490 <_obstack_memory_used@@Base+0x3f74>
  41b3e8:	str	x24, [sp, #112]
  41b3ec:	mov	x23, x19
  41b3f0:	mov	x24, x26
  41b3f4:	mov	x21, x28
  41b3f8:	ldr	x9, [x23]
  41b3fc:	cbnz	x8, 41b414 <_obstack_memory_used@@Base+0x3ef8>
  41b400:	b	41b45c <_obstack_memory_used@@Base+0x3f40>
  41b404:	ldr	x8, [x24, #8]!
  41b408:	sub	x21, x21, #0x1
  41b40c:	ldr	x9, [x23, #8]!
  41b410:	cbz	x8, 41b45c <_obstack_memory_used@@Base+0x3f40>
  41b414:	cbz	x9, 41b460 <_obstack_memory_used@@Base+0x3f44>
  41b418:	add	x1, x8, #0x8
  41b41c:	add	x2, x9, #0x8
  41b420:	sub	x0, x29, #0x60
  41b424:	bl	4244e0 <_obstack_memory_used@@Base+0xcfc4>
  41b428:	stur	w0, [x29, #-128]
  41b42c:	cbnz	w0, 41b66c <_obstack_memory_used@@Base+0x4150>
  41b430:	sub	x0, x29, #0x80
  41b434:	sub	x2, x29, #0x60
  41b438:	mov	x1, x25
  41b43c:	bl	42588c <_obstack_memory_used@@Base+0xe370>
  41b440:	ldur	x8, [x29, #-80]
  41b444:	str	x0, [x24]
  41b448:	mov	x0, x8
  41b44c:	bl	402a10 <free@plt>
  41b450:	ldur	w27, [x29, #-128]
  41b454:	cbz	w27, 41b460 <_obstack_memory_used@@Base+0x3f44>
  41b458:	b	41b468 <_obstack_memory_used@@Base+0x3f4c>
  41b45c:	str	x9, [x24]
  41b460:	cbnz	x21, 41b404 <_obstack_memory_used@@Base+0x3ee8>
  41b464:	mov	w27, wzr
  41b468:	ldr	x24, [sp, #112]
  41b46c:	ldr	x21, [sp, #200]
  41b470:	mov	x0, x19
  41b474:	bl	402a10 <free@plt>
  41b478:	ldr	x25, [sp, #288]
  41b47c:	cbz	w27, 41b734 <_obstack_memory_used@@Base+0x4218>
  41b480:	b	41b4a4 <_obstack_memory_used@@Base+0x3f88>
  41b484:	ldr	x20, [sp, #232]
  41b488:	ldr	x25, [sp, #288]
  41b48c:	b	41b39c <_obstack_memory_used@@Base+0x3e80>
  41b490:	mov	w27, wzr
  41b494:	mov	x0, x19
  41b498:	bl	402a10 <free@plt>
  41b49c:	ldr	x25, [sp, #288]
  41b4a0:	cbz	w27, 41b734 <_obstack_memory_used@@Base+0x4218>
  41b4a4:	mov	x19, xzr
  41b4a8:	b	41b640 <_obstack_memory_used@@Base+0x4124>
  41b4ac:	tbnz	w8, #31, 41b5dc <_obstack_memory_used@@Base+0x40c0>
  41b4b0:	ldr	w8, [sp, #172]
  41b4b4:	cbz	w8, 41b60c <_obstack_memory_used@@Base+0x40f0>
  41b4b8:	mov	x23, x26
  41b4bc:	mov	w8, #0x1                   	// #1
  41b4c0:	str	x8, [sp, #216]
  41b4c4:	b	419be8 <_obstack_memory_used@@Base+0x26cc>
  41b4c8:	ldr	x8, [x28, #16]
  41b4cc:	str	x26, [sp, #264]
  41b4d0:	cmp	x8, #0x1
  41b4d4:	b.lt	41b5a0 <_obstack_memory_used@@Base+0x4084>  // b.tstop
  41b4d8:	ldr	x20, [sp, #456]
  41b4dc:	mov	x25, xzr
  41b4e0:	b	41b508 <_obstack_memory_used@@Base+0x3fec>
  41b4e4:	add	x9, x21, #0x1
  41b4e8:	str	x26, [x8, #8]
  41b4ec:	str	x9, [sp, #536]
  41b4f0:	str	xzr, [x8]
  41b4f4:	ldr	x8, [x28, #16]
  41b4f8:	ldr	w21, [sp, #156]
  41b4fc:	add	x25, x25, #0x1
  41b500:	cmp	x25, x8
  41b504:	b.ge	41b5a0 <_obstack_memory_used@@Base+0x4084>  // b.tcont
  41b508:	ldr	x9, [x28, #24]
  41b50c:	ldr	x26, [x9, x25, lsl #3]
  41b510:	ldr	x9, [x20]
  41b514:	add	x10, x9, x26, lsl #4
  41b518:	ldrb	w10, [x10, #8]
  41b51c:	cmp	w10, #0x8
  41b520:	b.ne	41b4fc <_obstack_memory_used@@Base+0x3fe0>  // b.any
  41b524:	lsl	x10, x26, #4
  41b528:	ldr	x9, [x9, x10]
  41b52c:	cmp	x9, #0x3f
  41b530:	b.gt	41b4fc <_obstack_memory_used@@Base+0x3fe0>
  41b534:	ldr	x10, [x20, #160]
  41b538:	lsr	x9, x10, x9
  41b53c:	tbz	w9, #0, 41b4fc <_obstack_memory_used@@Base+0x3fe0>
  41b540:	ldr	x23, [sp, #544]
  41b544:	ldr	x21, [sp, #536]
  41b548:	ldr	x19, [sp, #552]
  41b54c:	cmp	x21, x23
  41b550:	b.eq	41b578 <_obstack_memory_used@@Base+0x405c>  // b.none
  41b554:	mov	w0, #0x1                   	// #1
  41b558:	mov	w1, #0x30                  	// #48
  41b55c:	bl	402840 <calloc@plt>
  41b560:	lsl	x8, x21, #3
  41b564:	str	x0, [x19, x8]
  41b568:	ldr	x9, [sp, #552]
  41b56c:	ldr	x8, [x9, x8]
  41b570:	cbnz	x8, 41b4e4 <_obstack_memory_used@@Base+0x3fc8>
  41b574:	b	41b68c <_obstack_memory_used@@Base+0x4170>
  41b578:	lsl	x1, x23, #4
  41b57c:	mov	x0, x19
  41b580:	bl	402870 <realloc@plt>
  41b584:	cbz	x0, 41b68c <_obstack_memory_used@@Base+0x4170>
  41b588:	ldr	x21, [sp, #536]
  41b58c:	mov	x19, x0
  41b590:	lsl	x8, x23, #1
  41b594:	str	x0, [sp, #552]
  41b598:	str	x8, [sp, #544]
  41b59c:	b	41b554 <_obstack_memory_used@@Base+0x4038>
  41b5a0:	stur	wzr, [x29, #-164]
  41b5a4:	ldrb	w8, [x28, #104]
  41b5a8:	ldr	x25, [sp, #288]
  41b5ac:	ldr	x26, [sp, #264]
  41b5b0:	mov	w20, wzr
  41b5b4:	tbz	w8, #6, 419bd8 <_obstack_memory_used@@Base+0x26bc>
  41b5b8:	add	x1, x28, #0x8
  41b5bc:	add	x0, sp, #0x130
  41b5c0:	bl	4237e0 <_obstack_memory_used@@Base+0xc2c4>
  41b5c4:	stur	w0, [x29, #-164]
  41b5c8:	cbnz	w0, 41b694 <_obstack_memory_used@@Base+0x4178>
  41b5cc:	mov	w20, wzr
  41b5d0:	b	419bd8 <_obstack_memory_used@@Base+0x26bc>
  41b5d4:	mov	w27, w0
  41b5d8:	b	41b63c <_obstack_memory_used@@Base+0x4120>
  41b5dc:	add	x0, sp, #0x130
  41b5e0:	mov	x1, x28
  41b5e4:	mov	x2, x26
  41b5e8:	bl	422884 <_obstack_memory_used@@Base+0xb368>
  41b5ec:	ldr	w9, [sp, #172]
  41b5f0:	cmp	x0, #0x0
  41b5f4:	cset	w8, ne  // ne = any
  41b5f8:	str	x8, [sp, #216]
  41b5fc:	cset	w8, eq  // eq = none
  41b600:	orr	w8, w9, w8
  41b604:	csinv	x23, x26, xzr, ne  // ne = any
  41b608:	tbnz	w8, #0, 419be8 <_obstack_memory_used@@Base+0x26cc>
  41b60c:	mov	x23, x26
  41b610:	b	41b218 <_obstack_memory_used@@Base+0x3cfc>
  41b614:	mov	w8, wzr
  41b618:	ldr	x9, [sp, #248]
  41b61c:	cbz	x9, 41b624 <_obstack_memory_used@@Base+0x4108>
  41b620:	ldrb	w8, [x9, w8, uxtw]
  41b624:	ldrb	w8, [x22, w8, uxtw]
  41b628:	mov	x26, x25
  41b62c:	cbnz	w8, 419988 <_obstack_memory_used@@Base+0x246c>
  41b630:	b	41b69c <_obstack_memory_used@@Base+0x4180>
  41b634:	mov	w27, w0
  41b638:	mov	x19, xzr
  41b63c:	ldr	x25, [sp, #288]
  41b640:	mov	x0, x26
  41b644:	bl	402a10 <free@plt>
  41b648:	mov	x0, x19
  41b64c:	bl	402a10 <free@plt>
  41b650:	ldr	x20, [sp, #232]
  41b654:	cbz	w27, 41b744 <_obstack_memory_used@@Base+0x4228>
  41b658:	ldr	x28, [sp, #224]
  41b65c:	ldr	w21, [sp, #156]
  41b660:	cmp	w27, #0x1
  41b664:	b.eq	41b3b4 <_obstack_memory_used@@Base+0x3e98>  // b.none
  41b668:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b66c:	mov	w27, w0
  41b670:	b	41b468 <_obstack_memory_used@@Base+0x3f4c>
  41b674:	mov	w0, w20
  41b678:	bl	402b10 <iswalnum@plt>
  41b67c:	cmp	w20, #0x5f
  41b680:	b.eq	419bb0 <_obstack_memory_used@@Base+0x2694>  // b.none
  41b684:	cbz	w0, 419b24 <_obstack_memory_used@@Base+0x2608>
  41b688:	b	419bb0 <_obstack_memory_used@@Base+0x2694>
  41b68c:	mov	w23, #0xc                   	// #12
  41b690:	b	41b22c <_obstack_memory_used@@Base+0x3d10>
  41b694:	sxtw	x23, w0
  41b698:	b	41b218 <_obstack_memory_used@@Base+0x3cfc>
  41b69c:	mov	w27, #0x1                   	// #1
  41b6a0:	ldr	x0, [sp, #488]
  41b6a4:	bl	402a10 <free@plt>
  41b6a8:	ldr	x8, [x24, #152]
  41b6ac:	cbz	x8, 41b6c8 <_obstack_memory_used@@Base+0x41ac>
  41b6b0:	add	x0, sp, #0x130
  41b6b4:	bl	4229ec <_obstack_memory_used@@Base+0xb4d0>
  41b6b8:	ldr	x0, [sp, #552]
  41b6bc:	bl	402a10 <free@plt>
  41b6c0:	ldr	x0, [sp, #520]
  41b6c4:	bl	402a10 <free@plt>
  41b6c8:	ldr	x0, [sp, #320]
  41b6cc:	bl	402a10 <free@plt>
  41b6d0:	ldr	x0, [sp, #328]
  41b6d4:	bl	402a10 <free@plt>
  41b6d8:	ldrb	w8, [sp, #443]
  41b6dc:	cbz	w8, 41b6e8 <_obstack_memory_used@@Base+0x41cc>
  41b6e0:	ldr	x0, [sp, #312]
  41b6e4:	bl	402a10 <free@plt>
  41b6e8:	mov	w0, w27
  41b6ec:	add	sp, sp, #0x2e0
  41b6f0:	ldp	x20, x19, [sp, #80]
  41b6f4:	ldp	x22, x21, [sp, #64]
  41b6f8:	ldp	x24, x23, [sp, #48]
  41b6fc:	ldp	x26, x25, [sp, #32]
  41b700:	ldp	x28, x27, [sp, #16]
  41b704:	ldp	x29, x30, [sp], #96
  41b708:	ret
  41b70c:	ldr	x8, [x8, #16]
  41b710:	cbz	x8, 41b71c <_obstack_memory_used@@Base+0x4200>
  41b714:	ldrsb	w8, [x0, #56]
  41b718:	tbnz	w8, #31, 4195ec <_obstack_memory_used@@Base+0x20d0>
  41b71c:	mov	x25, xzr
  41b720:	cbz	x26, 41b7a8 <_obstack_memory_used@@Base+0x428c>
  41b724:	mov	x26, x25
  41b728:	cbz	x4, 4195f0 <_obstack_memory_used@@Base+0x20d4>
  41b72c:	mov	w27, #0x1                   	// #1
  41b730:	b	41b6e8 <_obstack_memory_used@@Base+0x41cc>
  41b734:	ldr	x0, [sp, #488]
  41b738:	bl	402a10 <free@plt>
  41b73c:	stp	x20, x26, [sp, #480]
  41b740:	str	x28, [sp, #472]
  41b744:	cbz	x21, 41b7a0 <_obstack_memory_used@@Base+0x4284>
  41b748:	ldp	x20, x19, [sp, #128]
  41b74c:	cmp	x21, #0x1
  41b750:	b.eq	41b770 <_obstack_memory_used@@Base+0x4254>  // b.none
  41b754:	ldr	x8, [sp, #144]
  41b758:	mov	w1, #0xff                  	// #255
  41b75c:	add	x0, x8, #0x10
  41b760:	mvn	x8, x20
  41b764:	add	x8, x8, x19
  41b768:	lsl	x2, x8, #4
  41b76c:	bl	402800 <memset@plt>
  41b770:	ldr	x9, [sp, #144]
  41b774:	ldr	x8, [sp, #472]
  41b778:	cmp	x21, #0x2
  41b77c:	stp	xzr, x8, [x9]
  41b780:	b.cc	41b7d8 <_obstack_memory_used@@Base+0x42bc>  // b.lo, b.ul, b.last
  41b784:	ldr	x8, [sp, #208]
  41b788:	ldrb	w8, [x8, #56]
  41b78c:	tbnz	w8, #4, 41b7d8 <_obstack_memory_used@@Base+0x42bc>
  41b790:	ldrb	w8, [x24, #176]
  41b794:	tbnz	w8, #0, 41b7b0 <_obstack_memory_used@@Base+0x4294>
  41b798:	mov	w4, wzr
  41b79c:	b	41b7bc <_obstack_memory_used@@Base+0x42a0>
  41b7a0:	mov	w27, wzr
  41b7a4:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b7a8:	mov	x26, x25
  41b7ac:	b	4195f0 <_obstack_memory_used@@Base+0x20d4>
  41b7b0:	ldr	x8, [x24, #152]
  41b7b4:	cmp	x8, #0x0
  41b7b8:	cset	w4, gt
  41b7bc:	ldr	x8, [sp, #208]
  41b7c0:	ldr	x3, [sp, #144]
  41b7c4:	add	x1, sp, #0x130
  41b7c8:	mov	x2, x21
  41b7cc:	ldr	x0, [x8]
  41b7d0:	bl	422ab0 <_obstack_memory_used@@Base+0xb594>
  41b7d4:	cbnz	w0, 41b960 <_obstack_memory_used@@Base+0x4444>
  41b7d8:	ldrb	w9, [sp, #444]
  41b7dc:	ldur	x8, [x29, #-176]
  41b7e0:	cbnz	w9, 41b978 <_obstack_memory_used@@Base+0x445c>
  41b7e4:	cmp	x21, #0x1
  41b7e8:	csinc	x10, x21, xzr, hi  // hi = pmore
  41b7ec:	cmp	x10, #0x3
  41b7f0:	b.cs	41b7fc <_obstack_memory_used@@Base+0x42e0>  // b.hs, b.nlast
  41b7f4:	mov	x9, xzr
  41b7f8:	b	41b914 <_obstack_memory_used@@Base+0x43f8>
  41b7fc:	ldr	x11, [sp, #144]
  41b800:	and	x9, x10, #0xfffffffffffffffe
  41b804:	mov	x12, x9
  41b808:	add	x11, x11, #0x10
  41b80c:	b	41b81c <_obstack_memory_used@@Base+0x4300>
  41b810:	subs	x12, x12, #0x2
  41b814:	add	x11, x11, #0x20
  41b818:	b.eq	41b880 <_obstack_memory_used@@Base+0x4364>  // b.none
  41b81c:	ldur	x14, [x11, #-16]
  41b820:	ldr	x13, [x11]
  41b824:	cmn	x14, #0x1
  41b828:	b.eq	41b834 <_obstack_memory_used@@Base+0x4318>  // b.none
  41b82c:	add	x15, x14, x8
  41b830:	stur	x15, [x11, #-16]
  41b834:	cmn	x13, #0x1
  41b838:	b.eq	41b844 <_obstack_memory_used@@Base+0x4328>  // b.none
  41b83c:	add	x15, x13, x8
  41b840:	str	x15, [x11]
  41b844:	cmn	x14, #0x1
  41b848:	b.eq	41b850 <_obstack_memory_used@@Base+0x4334>  // b.none
  41b84c:	ldur	x15, [x11, #-8]
  41b850:	cmn	x13, #0x1
  41b854:	b.eq	41b85c <_obstack_memory_used@@Base+0x4340>  // b.none
  41b858:	ldr	x16, [x11, #8]
  41b85c:	cmn	x14, #0x1
  41b860:	b.eq	41b86c <_obstack_memory_used@@Base+0x4350>  // b.none
  41b864:	add	x14, x15, x8
  41b868:	stur	x14, [x11, #-8]
  41b86c:	cmn	x13, #0x1
  41b870:	b.eq	41b810 <_obstack_memory_used@@Base+0x42f4>  // b.none
  41b874:	add	x13, x16, x8
  41b878:	str	x13, [x11, #8]
  41b87c:	b	41b810 <_obstack_memory_used@@Base+0x42f4>
  41b880:	cmp	x10, x9
  41b884:	b.ne	41b914 <_obstack_memory_used@@Base+0x43f8>  // b.any
  41b888:	cmp	x20, #0x1
  41b88c:	b.lt	41b8a4 <_obstack_memory_used@@Base+0x4388>  // b.tstop
  41b890:	ldr	x8, [sp, #144]
  41b894:	lsl	x2, x20, #4
  41b898:	mov	w1, #0xff                  	// #255
  41b89c:	add	x0, x8, x21, lsl #4
  41b8a0:	bl	402800 <memset@plt>
  41b8a4:	ldr	x8, [x24, #224]
  41b8a8:	mov	w27, wzr
  41b8ac:	cbz	x8, 41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b8b0:	cmp	x21, #0x2
  41b8b4:	b.cc	41b6a0 <_obstack_memory_used@@Base+0x4184>  // b.lo, b.ul, b.last
  41b8b8:	ldr	x11, [sp, #144]
  41b8bc:	ldr	x13, [sp, #144]
  41b8c0:	mvn	x10, x20
  41b8c4:	mov	x9, xzr
  41b8c8:	add	x10, x10, x19
  41b8cc:	add	x11, x11, #0x18
  41b8d0:	b	41b8e8 <_obstack_memory_used@@Base+0x43cc>
  41b8d4:	add	x9, x9, #0x1
  41b8d8:	mov	w27, wzr
  41b8dc:	cmp	x10, x9
  41b8e0:	add	x11, x11, #0x10
  41b8e4:	b.eq	41b6a0 <_obstack_memory_used@@Base+0x4184>  // b.none
  41b8e8:	ldr	x12, [x8, x9, lsl #3]
  41b8ec:	cmp	x9, x12
  41b8f0:	b.eq	41b8d4 <_obstack_memory_used@@Base+0x43b8>  // b.none
  41b8f4:	add	x12, x13, x12, lsl #4
  41b8f8:	ldr	x12, [x12, #16]
  41b8fc:	stur	x12, [x11, #-8]
  41b900:	ldr	x12, [x8, x9, lsl #3]
  41b904:	add	x12, x13, x12, lsl #4
  41b908:	ldr	x12, [x12, #24]
  41b90c:	str	x12, [x11]
  41b910:	b	41b8d4 <_obstack_memory_used@@Base+0x43b8>
  41b914:	ldr	x10, [sp, #144]
  41b918:	add	x10, x10, x9, lsl #4
  41b91c:	add	x10, x10, #0x8
  41b920:	b	41b934 <_obstack_memory_used@@Base+0x4418>
  41b924:	add	x9, x9, #0x1
  41b928:	cmp	x9, x21
  41b92c:	add	x10, x10, #0x10
  41b930:	b.cs	41b888 <_obstack_memory_used@@Base+0x436c>  // b.hs, b.nlast
  41b934:	ldur	x11, [x10, #-8]
  41b938:	cmn	x11, #0x1
  41b93c:	b.eq	41b924 <_obstack_memory_used@@Base+0x4408>  // b.none
  41b940:	ldr	x12, [x10]
  41b944:	add	x11, x11, x8
  41b948:	stur	x11, [x10, #-8]
  41b94c:	add	x11, x12, x8
  41b950:	str	x11, [x10]
  41b954:	b	41b924 <_obstack_memory_used@@Base+0x4408>
  41b958:	mov	w27, #0xc                   	// #12
  41b95c:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b960:	mov	w27, w0
  41b964:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b968:	mov	x0, x26
  41b96c:	bl	402a10 <free@plt>
  41b970:	mov	w27, #0xc                   	// #12
  41b974:	b	41b6a0 <_obstack_memory_used@@Base+0x4184>
  41b978:	ldr	x10, [sp, #352]
  41b97c:	ldr	x11, [sp, #328]
  41b980:	ldr	x12, [sp, #144]
  41b984:	ldr	x16, [sp, #120]
  41b988:	mov	x9, xzr
  41b98c:	b	41b9a0 <_obstack_memory_used@@Base+0x4484>
  41b990:	add	x9, x9, #0x1
  41b994:	cmp	x9, x21
  41b998:	add	x12, x12, #0x10
  41b99c:	b.cs	41b888 <_obstack_memory_used@@Base+0x436c>  // b.hs, b.nlast
  41b9a0:	ldr	x13, [x12]
  41b9a4:	cmn	x13, #0x1
  41b9a8:	b.eq	41b990 <_obstack_memory_used@@Base+0x4474>  // b.none
  41b9ac:	add	x14, x11, x13, lsl #3
  41b9b0:	cmp	x13, x10
  41b9b4:	ldr	x15, [x12, #8]
  41b9b8:	csel	x13, x16, x14, eq  // eq = none
  41b9bc:	ldr	x13, [x13]
  41b9c0:	add	x14, x11, x15, lsl #3
  41b9c4:	cmp	x15, x10
  41b9c8:	csel	x14, x16, x14, eq  // eq = none
  41b9cc:	str	x13, [x12]
  41b9d0:	ldr	x14, [x14]
  41b9d4:	add	x13, x13, x8
  41b9d8:	add	x14, x14, x8
  41b9dc:	stp	x13, x14, [x12]
  41b9e0:	b	41b990 <_obstack_memory_used@@Base+0x4474>
  41b9e4:	mov	x6, x4
  41b9e8:	mov	w7, #0x1                   	// #1
  41b9ec:	mov	x4, xzr
  41b9f0:	mov	x5, x2
  41b9f4:	b	41b9f8 <_obstack_memory_used@@Base+0x44dc>
  41b9f8:	sub	sp, sp, #0x70
  41b9fc:	cmp	x3, x2
  41ba00:	cset	w8, gt
  41ba04:	orr	x8, x8, x3, lsr #63
  41ba08:	stp	x29, x30, [sp, #16]
  41ba0c:	stp	x28, x27, [sp, #32]
  41ba10:	stp	x26, x25, [sp, #48]
  41ba14:	stp	x24, x23, [sp, #64]
  41ba18:	stp	x22, x21, [sp, #80]
  41ba1c:	stp	x20, x19, [sp, #96]
  41ba20:	add	x29, sp, #0x10
  41ba24:	cbnz	x8, 41bd44 <_obstack_memory_used@@Base+0x4828>
  41ba28:	add	x8, x4, x3
  41ba2c:	ldrb	w19, [x0, #56]
  41ba30:	bic	x9, x8, x8, asr #63
  41ba34:	cmp	x8, x2
  41ba38:	csel	x27, x2, x9, gt
  41ba3c:	mov	x22, x6
  41ba40:	mov	x24, x5
  41ba44:	mov	x20, x3
  41ba48:	mov	x25, x2
  41ba4c:	mov	x26, x1
  41ba50:	mov	x21, x0
  41ba54:	cmp	x27, x3
  41ba58:	stur	w7, [x29, #-4]
  41ba5c:	b.le	41ba8c <_obstack_memory_used@@Base+0x4570>
  41ba60:	tbnz	w19, #3, 41bba8 <_obstack_memory_used@@Base+0x468c>
  41ba64:	ldr	x9, [x21, #32]
  41ba68:	mov	w8, w19
  41ba6c:	cbz	x9, 41ba90 <_obstack_memory_used@@Base+0x4574>
  41ba70:	mov	x0, x21
  41ba74:	bl	4188bc <_obstack_memory_used@@Base+0x13a0>
  41ba78:	ldrb	w8, [x21, #56]
  41ba7c:	mov	x28, xzr
  41ba80:	mov	w23, #0x1                   	// #1
  41ba84:	cbnz	x22, 41ba9c <_obstack_memory_used@@Base+0x4580>
  41ba88:	b	41bad8 <_obstack_memory_used@@Base+0x45bc>
  41ba8c:	mov	w8, w19
  41ba90:	mov	x28, xzr
  41ba94:	mov	w23, #0x1                   	// #1
  41ba98:	cbz	x22, 41bad8 <_obstack_memory_used@@Base+0x45bc>
  41ba9c:	tbnz	w8, #4, 41bad8 <_obstack_memory_used@@Base+0x45bc>
  41baa0:	and	w8, w8, #0x6
  41baa4:	cmp	w8, #0x4
  41baa8:	b.ne	41bacc <_obstack_memory_used@@Base+0x45b0>  // b.any
  41baac:	ldr	x8, [x22]
  41bab0:	ldr	x9, [x21, #48]
  41bab4:	cmp	x8, x9
  41bab8:	b.hi	41bad0 <_obstack_memory_used@@Base+0x45b4>  // b.pmore
  41babc:	cmp	x8, #0x1
  41bac0:	csel	x28, xzr, x22, lt  // lt = tstop
  41bac4:	csinc	x23, x8, xzr, ge  // ge = tcont
  41bac8:	b	41bad8 <_obstack_memory_used@@Base+0x45bc>
  41bacc:	ldr	x9, [x21, #48]
  41bad0:	add	x23, x9, #0x1
  41bad4:	mov	x28, x22
  41bad8:	lsl	x0, x23, #4
  41badc:	bl	402730 <malloc@plt>
  41bae0:	cbz	x0, 41bd4c <_obstack_memory_used@@Base+0x4830>
  41bae4:	mov	x22, x0
  41bae8:	ubfx	w8, w19, #5, #2
  41baec:	mov	x0, x21
  41baf0:	mov	x1, x26
  41baf4:	mov	x2, x25
  41baf8:	mov	x3, x20
  41bafc:	mov	x4, x27
  41bb00:	mov	x5, x24
  41bb04:	mov	x6, x23
  41bb08:	mov	x7, x22
  41bb0c:	str	w8, [sp]
  41bb10:	bl	41950c <_obstack_memory_used@@Base+0x1ff0>
  41bb14:	cbz	w0, 41bb50 <_obstack_memory_used@@Base+0x4634>
  41bb18:	cmp	w0, #0x1
  41bb1c:	mov	x8, #0xfffffffffffffffe    	// #-2
  41bb20:	cinc	x19, x8, eq  // eq = none
  41bb24:	mov	x0, x22
  41bb28:	bl	402a10 <free@plt>
  41bb2c:	mov	x0, x19
  41bb30:	ldp	x20, x19, [sp, #96]
  41bb34:	ldp	x22, x21, [sp, #80]
  41bb38:	ldp	x24, x23, [sp, #64]
  41bb3c:	ldp	x26, x25, [sp, #48]
  41bb40:	ldp	x28, x27, [sp, #32]
  41bb44:	ldp	x29, x30, [sp, #16]
  41bb48:	add	sp, sp, #0x70
  41bb4c:	ret
  41bb50:	cbz	x28, 41bd20 <_obstack_memory_used@@Base+0x4804>
  41bb54:	ldrb	w8, [x21, #56]
  41bb58:	add	x26, x23, #0x1
  41bb5c:	ubfx	w8, w8, #1, #2
  41bb60:	cmp	w8, #0x1
  41bb64:	b.eq	41bbbc <_obstack_memory_used@@Base+0x46a0>  // b.none
  41bb68:	cbnz	w8, 41bbe8 <_obstack_memory_used@@Base+0x46cc>
  41bb6c:	lsl	x25, x26, #3
  41bb70:	mov	x0, x25
  41bb74:	bl	402730 <malloc@plt>
  41bb78:	str	x0, [x28, #8]
  41bb7c:	cbz	x0, 41bd8c <_obstack_memory_used@@Base+0x4870>
  41bb80:	mov	x24, x0
  41bb84:	mov	x0, x25
  41bb88:	bl	402730 <malloc@plt>
  41bb8c:	str	x0, [x28, #16]
  41bb90:	cbz	x0, 41bd84 <_obstack_memory_used@@Base+0x4868>
  41bb94:	str	x26, [x28]
  41bb98:	mov	w8, #0x1                   	// #1
  41bb9c:	cmp	x23, #0x1
  41bba0:	b.ge	41bbf8 <_obstack_memory_used@@Base+0x46dc>  // b.tcont
  41bba4:	b	41bbd8 <_obstack_memory_used@@Base+0x46bc>
  41bba8:	mov	w8, w19
  41bbac:	mov	x28, xzr
  41bbb0:	mov	w23, #0x1                   	// #1
  41bbb4:	cbnz	x22, 41ba9c <_obstack_memory_used@@Base+0x4580>
  41bbb8:	b	41bad8 <_obstack_memory_used@@Base+0x45bc>
  41bbbc:	ldr	x9, [x28]
  41bbc0:	cmp	x26, x9
  41bbc4:	b.hi	41bd54 <_obstack_memory_used@@Base+0x4838>  // b.pmore
  41bbc8:	mov	w8, #0x1                   	// #1
  41bbcc:	mov	x26, x9
  41bbd0:	cmp	x23, #0x1
  41bbd4:	b.ge	41bbf8 <_obstack_memory_used@@Base+0x46dc>  // b.tcont
  41bbd8:	mov	x23, xzr
  41bbdc:	cmp	x23, x26
  41bbe0:	b.cc	41bce8 <_obstack_memory_used@@Base+0x47cc>  // b.lo, b.ul, b.last
  41bbe4:	b	41bd0c <_obstack_memory_used@@Base+0x47f0>
  41bbe8:	ldr	x26, [x28]
  41bbec:	mov	w8, #0x2                   	// #2
  41bbf0:	cmp	x23, #0x1
  41bbf4:	b.lt	41bbd8 <_obstack_memory_used@@Base+0x46bc>  // b.tstop
  41bbf8:	ldp	x9, x10, [x28, #8]
  41bbfc:	cmp	x23, #0x3
  41bc00:	b.hi	41bc0c <_obstack_memory_used@@Base+0x46f0>  // b.pmore
  41bc04:	mov	x11, xzr
  41bc08:	b	41bcac <_obstack_memory_used@@Base+0x4790>
  41bc0c:	lsl	x12, x23, #3
  41bc10:	add	x15, x10, x12
  41bc14:	add	x14, x9, x12
  41bc18:	cmp	x9, x15
  41bc1c:	add	x13, x22, x23, lsl #4
  41bc20:	cset	w12, cc  // cc = lo, ul, last
  41bc24:	cmp	x10, x14
  41bc28:	cset	w16, cc  // cc = lo, ul, last
  41bc2c:	cmp	x13, x9
  41bc30:	and	w16, w12, w16
  41bc34:	cset	w12, hi  // hi = pmore
  41bc38:	cmp	x22, x14
  41bc3c:	cset	w14, cc  // cc = lo, ul, last
  41bc40:	cmp	x13, x10
  41bc44:	cset	w13, hi  // hi = pmore
  41bc48:	cmp	x22, x15
  41bc4c:	mov	x11, xzr
  41bc50:	cset	w15, cc  // cc = lo, ul, last
  41bc54:	tbnz	w16, #0, 41bcac <_obstack_memory_used@@Base+0x4790>
  41bc58:	and	w12, w12, w14
  41bc5c:	tbnz	w12, #0, 41bcac <_obstack_memory_used@@Base+0x4790>
  41bc60:	and	w12, w13, w15
  41bc64:	tbnz	w12, #0, 41bcac <_obstack_memory_used@@Base+0x4790>
  41bc68:	and	x11, x23, #0xfffffffffffffffc
  41bc6c:	add	x12, x22, #0x20
  41bc70:	add	x13, x9, #0x10
  41bc74:	add	x14, x10, #0x10
  41bc78:	mov	x15, x11
  41bc7c:	sub	x16, x12, #0x20
  41bc80:	ld2	{v0.2d, v1.2d}, [x12]
  41bc84:	ld2	{v2.2d, v3.2d}, [x16]
  41bc88:	add	x12, x12, #0x40
  41bc8c:	subs	x15, x15, #0x4
  41bc90:	stp	q2, q0, [x13, #-16]
  41bc94:	stp	q3, q1, [x14, #-16]
  41bc98:	add	x13, x13, #0x20
  41bc9c:	add	x14, x14, #0x20
  41bca0:	b.ne	41bc7c <_obstack_memory_used@@Base+0x4760>  // b.any
  41bca4:	cmp	x23, x11
  41bca8:	b.eq	41bcdc <_obstack_memory_used@@Base+0x47c0>  // b.none
  41bcac:	sub	x12, x23, x11
  41bcb0:	lsl	x13, x11, #3
  41bcb4:	add	x11, x22, x11, lsl #4
  41bcb8:	add	x10, x10, x13
  41bcbc:	add	x11, x11, #0x8
  41bcc0:	add	x9, x9, x13
  41bcc4:	ldur	x13, [x11, #-8]
  41bcc8:	subs	x12, x12, #0x1
  41bccc:	str	x13, [x9], #8
  41bcd0:	ldr	x13, [x11], #16
  41bcd4:	str	x13, [x10], #8
  41bcd8:	b.ne	41bcc4 <_obstack_memory_used@@Base+0x47a8>  // b.any
  41bcdc:	ldr	x26, [x28]
  41bce0:	cmp	x23, x26
  41bce4:	b.cs	41bd0c <_obstack_memory_used@@Base+0x47f0>  // b.hs, b.nlast
  41bce8:	ldp	x10, x9, [x28, #8]
  41bcec:	mov	x11, #0xffffffffffffffff    	// #-1
  41bcf0:	lsl	x12, x23, #3
  41bcf4:	str	x11, [x9, x12]
  41bcf8:	str	x11, [x10, x12]
  41bcfc:	ldr	x12, [x28]
  41bd00:	add	x23, x23, #0x1
  41bd04:	cmp	x23, x12
  41bd08:	b.cc	41bcf0 <_obstack_memory_used@@Base+0x47d4>  // b.lo, b.ul, b.last
  41bd0c:	ldrb	w9, [x21, #56]
  41bd10:	and	w9, w9, #0xfffffff9
  41bd14:	orr	w9, w9, w8, lsl #1
  41bd18:	strb	w9, [x21, #56]
  41bd1c:	cbz	w8, 41bd3c <_obstack_memory_used@@Base+0x4820>
  41bd20:	ldur	w8, [x29, #-4]
  41bd24:	tbz	w8, #0, 41bd34 <_obstack_memory_used@@Base+0x4818>
  41bd28:	ldr	x8, [x22, #8]
  41bd2c:	sub	x19, x8, x20
  41bd30:	b	41bb24 <_obstack_memory_used@@Base+0x4608>
  41bd34:	ldr	x19, [x22]
  41bd38:	b	41bb24 <_obstack_memory_used@@Base+0x4608>
  41bd3c:	mov	x19, #0xfffffffffffffffe    	// #-2
  41bd40:	b	41bb24 <_obstack_memory_used@@Base+0x4608>
  41bd44:	mov	x19, #0xffffffffffffffff    	// #-1
  41bd48:	b	41bb2c <_obstack_memory_used@@Base+0x4610>
  41bd4c:	mov	x19, #0xfffffffffffffffe    	// #-2
  41bd50:	b	41bb2c <_obstack_memory_used@@Base+0x4610>
  41bd54:	ldr	x0, [x28, #8]
  41bd58:	lsl	x25, x26, #3
  41bd5c:	mov	x1, x25
  41bd60:	bl	402870 <realloc@plt>
  41bd64:	cbz	x0, 41bd8c <_obstack_memory_used@@Base+0x4870>
  41bd68:	mov	x24, x0
  41bd6c:	ldr	x0, [x28, #16]
  41bd70:	mov	x1, x25
  41bd74:	bl	402870 <realloc@plt>
  41bd78:	cbz	x0, 41bd84 <_obstack_memory_used@@Base+0x4868>
  41bd7c:	stp	x24, x0, [x28, #8]
  41bd80:	b	41bb94 <_obstack_memory_used@@Base+0x4678>
  41bd84:	mov	x0, x24
  41bd88:	bl	402a10 <free@plt>
  41bd8c:	mov	w8, wzr
  41bd90:	b	41bd0c <_obstack_memory_used@@Base+0x47f0>
  41bd94:	mov	x6, x5
  41bd98:	mov	x5, x2
  41bd9c:	mov	w7, wzr
  41bda0:	b	41b9f8 <_obstack_memory_used@@Base+0x44dc>
  41bda4:	stp	x29, x30, [sp, #-96]!
  41bda8:	stp	x22, x21, [sp, #64]
  41bdac:	adds	x22, x2, x4
  41bdb0:	stp	x28, x27, [sp, #16]
  41bdb4:	stp	x26, x25, [sp, #32]
  41bdb8:	stp	x24, x23, [sp, #48]
  41bdbc:	stp	x20, x19, [sp, #80]
  41bdc0:	mov	x29, sp
  41bdc4:	b.vs	41be98 <_obstack_memory_used@@Base+0x497c>
  41bdc8:	orr	x8, x4, x2
  41bdcc:	mov	x19, x7
  41bdd0:	mov	x27, x4
  41bdd4:	mov	x28, x2
  41bdd8:	orr	x8, x8, x7
  41bddc:	tbnz	x8, #63, 41be98 <_obstack_memory_used@@Base+0x497c>
  41bde0:	mov	x20, x6
  41bde4:	mov	x21, x5
  41bde8:	mov	x24, x1
  41bdec:	mov	x23, x0
  41bdf0:	cmp	x27, #0x1
  41bdf4:	b.lt	41be38 <_obstack_memory_used@@Base+0x491c>  // b.tstop
  41bdf8:	mov	x26, x3
  41bdfc:	cmp	x28, #0x1
  41be00:	b.lt	41be40 <_obstack_memory_used@@Base+0x4924>  // b.tstop
  41be04:	mov	x0, x22
  41be08:	bl	402730 <malloc@plt>
  41be0c:	cbz	x0, 41be98 <_obstack_memory_used@@Base+0x497c>
  41be10:	mov	x1, x24
  41be14:	mov	x2, x28
  41be18:	mov	x25, x0
  41be1c:	bl	402580 <memcpy@plt>
  41be20:	add	x0, x25, x28
  41be24:	mov	x1, x26
  41be28:	mov	x2, x27
  41be2c:	bl	402580 <memcpy@plt>
  41be30:	mov	x24, x25
  41be34:	b	41be48 <_obstack_memory_used@@Base+0x492c>
  41be38:	mov	x25, xzr
  41be3c:	b	41be48 <_obstack_memory_used@@Base+0x492c>
  41be40:	mov	x25, xzr
  41be44:	mov	x24, x26
  41be48:	mov	w7, #0x1                   	// #1
  41be4c:	mov	x0, x23
  41be50:	mov	x1, x24
  41be54:	mov	x2, x22
  41be58:	mov	x3, x21
  41be5c:	mov	x4, xzr
  41be60:	mov	x5, x19
  41be64:	mov	x6, x20
  41be68:	bl	41b9f8 <_obstack_memory_used@@Base+0x44dc>
  41be6c:	mov	x19, x0
  41be70:	mov	x0, x25
  41be74:	bl	402a10 <free@plt>
  41be78:	mov	x0, x19
  41be7c:	ldp	x20, x19, [sp, #80]
  41be80:	ldp	x22, x21, [sp, #64]
  41be84:	ldp	x24, x23, [sp, #48]
  41be88:	ldp	x26, x25, [sp, #32]
  41be8c:	ldp	x28, x27, [sp, #16]
  41be90:	ldp	x29, x30, [sp], #96
  41be94:	ret
  41be98:	mov	x0, #0xfffffffffffffffe    	// #-2
  41be9c:	b	41be7c <_obstack_memory_used@@Base+0x4960>
  41bea0:	sub	sp, sp, #0x70
  41bea4:	stp	x22, x21, [sp, #80]
  41bea8:	adds	x22, x2, x4
  41beac:	stp	x29, x30, [sp, #16]
  41beb0:	stp	x28, x27, [sp, #32]
  41beb4:	stp	x26, x25, [sp, #48]
  41beb8:	stp	x24, x23, [sp, #64]
  41bebc:	stp	x20, x19, [sp, #96]
  41bec0:	add	x29, sp, #0x10
  41bec4:	b.vs	41bfa4 <_obstack_memory_used@@Base+0x4a88>
  41bec8:	ldr	x23, [x29, #96]
  41becc:	orr	x8, x4, x2
  41bed0:	mov	x28, x4
  41bed4:	mov	x19, x2
  41bed8:	orr	x8, x8, x23
  41bedc:	tbnz	x8, #63, 41bfa4 <_obstack_memory_used@@Base+0x4a88>
  41bee0:	mov	x20, x6
  41bee4:	mov	x21, x5
  41bee8:	mov	x25, x1
  41beec:	mov	x24, x0
  41bef0:	cmp	x28, #0x1
  41bef4:	b.lt	41bf40 <_obstack_memory_used@@Base+0x4a24>  // b.tstop
  41bef8:	mov	x27, x3
  41befc:	cmp	x19, #0x1
  41bf00:	b.lt	41bf48 <_obstack_memory_used@@Base+0x4a2c>  // b.tstop
  41bf04:	mov	x0, x22
  41bf08:	str	x7, [sp, #8]
  41bf0c:	bl	402730 <malloc@plt>
  41bf10:	cbz	x0, 41bfa4 <_obstack_memory_used@@Base+0x4a88>
  41bf14:	mov	x1, x25
  41bf18:	mov	x2, x19
  41bf1c:	mov	x26, x0
  41bf20:	bl	402580 <memcpy@plt>
  41bf24:	add	x0, x26, x19
  41bf28:	mov	x1, x27
  41bf2c:	mov	x2, x28
  41bf30:	bl	402580 <memcpy@plt>
  41bf34:	ldr	x7, [sp, #8]
  41bf38:	mov	x25, x26
  41bf3c:	b	41bf50 <_obstack_memory_used@@Base+0x4a34>
  41bf40:	mov	x26, xzr
  41bf44:	b	41bf50 <_obstack_memory_used@@Base+0x4a34>
  41bf48:	mov	x26, xzr
  41bf4c:	mov	x25, x27
  41bf50:	mov	x0, x24
  41bf54:	mov	x1, x25
  41bf58:	mov	x2, x22
  41bf5c:	mov	x3, x21
  41bf60:	mov	x4, x20
  41bf64:	mov	x5, x23
  41bf68:	mov	x6, x7
  41bf6c:	mov	w7, wzr
  41bf70:	bl	41b9f8 <_obstack_memory_used@@Base+0x44dc>
  41bf74:	mov	x19, x0
  41bf78:	mov	x0, x26
  41bf7c:	bl	402a10 <free@plt>
  41bf80:	mov	x0, x19
  41bf84:	ldp	x20, x19, [sp, #96]
  41bf88:	ldp	x22, x21, [sp, #80]
  41bf8c:	ldp	x24, x23, [sp, #64]
  41bf90:	ldp	x26, x25, [sp, #48]
  41bf94:	ldp	x28, x27, [sp, #32]
  41bf98:	ldp	x29, x30, [sp, #16]
  41bf9c:	add	sp, sp, #0x70
  41bfa0:	ret
  41bfa4:	mov	x0, #0xfffffffffffffffe    	// #-2
  41bfa8:	b	41bf84 <_obstack_memory_used@@Base+0x4a68>
  41bfac:	ldrb	w8, [x0, #56]
  41bfb0:	cmp	x2, #0x0
  41bfb4:	csel	x9, xzr, x4, eq  // eq = none
  41bfb8:	csel	x10, xzr, x3, eq  // eq = none
  41bfbc:	and	w8, w8, #0xfffffff9
  41bfc0:	orr	w11, w8, #0x2
  41bfc4:	csel	w8, w8, w11, eq  // eq = none
  41bfc8:	strb	w8, [x0, #56]
  41bfcc:	stp	x10, x9, [x1, #8]
  41bfd0:	str	x2, [x1]
  41bfd4:	ret
  41bfd8:	stp	x29, x30, [sp, #-32]!
  41bfdc:	str	x19, [sp, #16]
  41bfe0:	mov	x19, x0
  41bfe4:	ldr	x0, [x0, #48]
  41bfe8:	mov	x29, sp
  41bfec:	bl	402a10 <free@plt>
  41bff0:	ldr	x0, [x19, #72]
  41bff4:	bl	402a10 <free@plt>
  41bff8:	ldr	x8, [x19, #80]
  41bffc:	add	x9, x19, #0x8
  41c000:	cmp	x8, x9
  41c004:	b.eq	41c018 <_obstack_memory_used@@Base+0x4afc>  // b.none
  41c008:	ldr	x0, [x8, #16]
  41c00c:	bl	402a10 <free@plt>
  41c010:	ldr	x0, [x19, #80]
  41c014:	bl	402a10 <free@plt>
  41c018:	ldr	x0, [x19, #24]
  41c01c:	bl	402a10 <free@plt>
  41c020:	ldr	x0, [x19, #96]
  41c024:	bl	402a10 <free@plt>
  41c028:	ldr	x0, [x19, #88]
  41c02c:	bl	402a10 <free@plt>
  41c030:	mov	x0, x19
  41c034:	ldr	x19, [sp, #16]
  41c038:	ldp	x29, x30, [sp], #32
  41c03c:	b	402a10 <free@plt>
  41c040:	sub	sp, sp, #0xb0
  41c044:	stp	x29, x30, [sp, #80]
  41c048:	stp	x28, x27, [sp, #96]
  41c04c:	stp	x26, x25, [sp, #112]
  41c050:	stp	x24, x23, [sp, #128]
  41c054:	stp	x22, x21, [sp, #144]
  41c058:	stp	x20, x19, [sp, #160]
  41c05c:	ldr	x8, [x0, #64]
  41c060:	ldr	x9, [x0, #88]
  41c064:	ldrb	w10, [x0, #138]
  41c068:	ldr	x26, [x0, #48]
  41c06c:	mov	x19, x0
  41c070:	cmp	x8, x9
  41c074:	csel	x25, x9, x8, gt
  41c078:	add	x29, sp, #0x50
  41c07c:	cbnz	w10, 41c090 <_obstack_memory_used@@Base+0x4b74>
  41c080:	ldr	x8, [x19, #120]
  41c084:	cbnz	x8, 41c090 <_obstack_memory_used@@Base+0x4b74>
  41c088:	ldrb	w8, [x19, #140]
  41c08c:	cbz	w8, 41c098 <_obstack_memory_used@@Base+0x4b7c>
  41c090:	ldr	x22, [x19, #56]
  41c094:	b	41c264 <_obstack_memory_used@@Base+0x4d48>
  41c098:	cmp	x25, x26
  41c09c:	b.le	41c244 <_obstack_memory_used@@Base+0x4d28>
  41c0a0:	add	x20, x19, #0x20
  41c0a4:	b	41c0dc <_obstack_memory_used@@Base+0x4bc0>
  41c0a8:	and	x21, x23, #0xff
  41c0ac:	bl	402880 <__ctype_toupper_loc@plt>
  41c0b0:	ldr	x8, [x0]
  41c0b4:	ldr	x9, [x19, #8]
  41c0b8:	add	x28, x26, #0x1
  41c0bc:	ldr	w8, [x8, x21, lsl #2]
  41c0c0:	strb	w8, [x9, x26]
  41c0c4:	ldp	x8, x9, [x19, #8]
  41c0c8:	ldrb	w8, [x8, x26]
  41c0cc:	str	w8, [x9, x26, lsl #2]
  41c0d0:	cmp	x25, x28
  41c0d4:	mov	x26, x28
  41c0d8:	b.le	41c574 <_obstack_memory_used@@Base+0x5058>
  41c0dc:	ldr	x21, [x19, #40]
  41c0e0:	ldr	x22, [x19]
  41c0e4:	add	x8, x21, x26
  41c0e8:	ldrsb	w23, [x22, x8]
  41c0ec:	tbnz	w23, #31, 41c0fc <_obstack_memory_used@@Base+0x4be0>
  41c0f0:	mov	x0, x20
  41c0f4:	bl	402950 <mbsinit@plt>
  41c0f8:	cbnz	w0, 41c0a8 <_obstack_memory_used@@Base+0x4b8c>
  41c0fc:	ldr	x8, [x20]
  41c100:	add	x9, x22, x21
  41c104:	sub	x2, x25, x26
  41c108:	add	x1, x9, x26
  41c10c:	add	x0, sp, #0x4
  41c110:	mov	x3, x20
  41c114:	stur	x8, [x29, #-8]
  41c118:	bl	417134 <wcrtomb@plt+0x144d4>
  41c11c:	sub	x24, x0, #0x1
  41c120:	mov	x21, x0
  41c124:	cmn	x24, #0x4
  41c128:	b.hi	41c1f4 <_obstack_memory_used@@Base+0x4cd8>  // b.pmore
  41c12c:	ldr	w0, [sp, #4]
  41c130:	bl	402b90 <towupper@plt>
  41c134:	ldr	w8, [sp, #4]
  41c138:	mov	w22, w0
  41c13c:	cmp	w0, w8
  41c140:	b.ne	41c158 <_obstack_memory_used@@Base+0x4c3c>  // b.any
  41c144:	ldr	x8, [x19]
  41c148:	ldr	x9, [x19, #40]
  41c14c:	add	x8, x8, x9
  41c150:	add	x23, x8, x26
  41c154:	b	41c174 <_obstack_memory_used@@Base+0x4c58>
  41c158:	add	x0, sp, #0x8
  41c15c:	sub	x2, x29, #0x8
  41c160:	mov	w1, w22
  41c164:	add	x23, sp, #0x8
  41c168:	bl	402c60 <wcrtomb@plt>
  41c16c:	cmp	x21, x0
  41c170:	b.ne	41c24c <_obstack_memory_used@@Base+0x4d30>  // b.any
  41c174:	ldr	x8, [x19, #8]
  41c178:	mov	x1, x23
  41c17c:	mov	x2, x21
  41c180:	add	x0, x8, x26
  41c184:	bl	402580 <memcpy@plt>
  41c188:	ldr	x8, [x19, #16]
  41c18c:	add	x23, x21, x26
  41c190:	add	x28, x26, #0x1
  41c194:	cmp	x28, x23
  41c198:	str	w22, [x8, x26, lsl #2]
  41c19c:	b.ge	41c0d0 <_obstack_memory_used@@Base+0x4bb4>  // b.tcont
  41c1a0:	add	x8, x8, x26, lsl #2
  41c1a4:	lsl	x9, x21, #2
  41c1a8:	add	x0, x8, #0x4
  41c1ac:	sub	x2, x9, #0x4
  41c1b0:	mov	w1, #0xff                  	// #255
  41c1b4:	bl	402800 <memset@plt>
  41c1b8:	cmp	x24, #0x2
  41c1bc:	b.cc	41c1dc <_obstack_memory_used@@Base+0x4cc0>  // b.lo, b.ul, b.last
  41c1c0:	and	x8, x24, #0xfffffffffffffffe
  41c1c4:	add	x28, x28, x8
  41c1c8:	mov	x9, x8
  41c1cc:	subs	x9, x9, #0x2
  41c1d0:	b.ne	41c1cc <_obstack_memory_used@@Base+0x4cb0>  // b.any
  41c1d4:	cmp	x24, x8
  41c1d8:	b.eq	41c1ec <_obstack_memory_used@@Base+0x4cd0>  // b.none
  41c1dc:	add	x8, x21, x26
  41c1e0:	sub	x8, x8, x28
  41c1e4:	subs	x8, x8, #0x1
  41c1e8:	b.ne	41c1e4 <_obstack_memory_used@@Base+0x4cc8>  // b.any
  41c1ec:	mov	x28, x23
  41c1f0:	b	41c0d0 <_obstack_memory_used@@Base+0x4bb4>
  41c1f4:	add	x8, x21, #0x1
  41c1f8:	cmp	x8, #0x2
  41c1fc:	b.cc	41c210 <_obstack_memory_used@@Base+0x4cf4>  // b.lo, b.ul, b.last
  41c200:	ldr	x8, [x19, #64]
  41c204:	ldr	x9, [x19, #88]
  41c208:	cmp	x8, x9
  41c20c:	b.lt	41c254 <_obstack_memory_used@@Base+0x4d38>  // b.tstop
  41c210:	ldr	x8, [x19, #40]
  41c214:	ldp	x9, x10, [x19]
  41c218:	add	x28, x26, #0x1
  41c21c:	cmn	x21, #0x1
  41c220:	add	x8, x8, x26
  41c224:	ldrb	w8, [x9, x8]
  41c228:	strb	w8, [x10, x26]
  41c22c:	ldr	x9, [x19, #16]
  41c230:	str	w8, [x9, x26, lsl #2]
  41c234:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x4bb4>  // b.any
  41c238:	ldur	x8, [x29, #-8]
  41c23c:	str	x8, [x20]
  41c240:	b	41c0d0 <_obstack_memory_used@@Base+0x4bb4>
  41c244:	mov	x28, x26
  41c248:	b	41c574 <_obstack_memory_used@@Base+0x5058>
  41c24c:	mov	x28, x26
  41c250:	b	41c274 <_obstack_memory_used@@Base+0x4d58>
  41c254:	ldur	x8, [x29, #-8]
  41c258:	mov	x28, x26
  41c25c:	str	x8, [x20]
  41c260:	b	41c574 <_obstack_memory_used@@Base+0x5058>
  41c264:	cmp	x26, x25
  41c268:	mov	x28, x26
  41c26c:	mov	x26, x22
  41c270:	b.ge	41c574 <_obstack_memory_used@@Base+0x5058>  // b.tcont
  41c274:	mov	x23, x19
  41c278:	ldr	x8, [x23, #32]!
  41c27c:	sub	x2, x25, x28
  41c280:	stur	x8, [x29, #-8]
  41c284:	ldr	x8, [x23, #88]
  41c288:	cbnz	x8, 41c388 <_obstack_memory_used@@Base+0x4e6c>
  41c28c:	ldr	x8, [x19]
  41c290:	ldr	x9, [x19, #40]
  41c294:	add	x8, x8, x9
  41c298:	add	x24, x8, x26
  41c29c:	mov	x0, sp
  41c2a0:	mov	x1, x24
  41c2a4:	mov	x3, x23
  41c2a8:	bl	417134 <wcrtomb@plt+0x144d4>
  41c2ac:	sub	x27, x0, #0x1
  41c2b0:	mov	x20, x0
  41c2b4:	cmn	x27, #0x4
  41c2b8:	b.hi	41c3dc <_obstack_memory_used@@Base+0x4ec0>  // b.pmore
  41c2bc:	ldr	w0, [sp]
  41c2c0:	mov	x22, x25
  41c2c4:	bl	402b90 <towupper@plt>
  41c2c8:	ldr	w8, [sp]
  41c2cc:	mov	w21, w0
  41c2d0:	cmp	w0, w8
  41c2d4:	b.ne	41c2e0 <_obstack_memory_used@@Base+0x4dc4>  // b.any
  41c2d8:	mov	x25, x24
  41c2dc:	b	41c2fc <_obstack_memory_used@@Base+0x4de0>
  41c2e0:	add	x0, sp, #0x8
  41c2e4:	sub	x2, x29, #0x8
  41c2e8:	mov	w1, w21
  41c2ec:	add	x25, sp, #0x8
  41c2f0:	bl	402c60 <wcrtomb@plt>
  41c2f4:	subs	x9, x0, x20
  41c2f8:	b.ne	41c444 <_obstack_memory_used@@Base+0x4f28>  // b.any
  41c2fc:	ldr	x8, [x19, #8]
  41c300:	mov	x1, x25
  41c304:	mov	x2, x20
  41c308:	add	x0, x8, x28
  41c30c:	bl	402580 <memcpy@plt>
  41c310:	ldrb	w8, [x19, #140]
  41c314:	mov	x25, x22
  41c318:	cbnz	w8, 41c4a4 <_obstack_memory_used@@Base+0x4f88>
  41c31c:	ldr	x8, [x19, #16]
  41c320:	add	x22, x20, x26
  41c324:	add	x23, x20, x28
  41c328:	add	x26, x28, #0x1
  41c32c:	cmp	x26, x23
  41c330:	str	w21, [x8, x28, lsl #2]
  41c334:	b.ge	41c264 <_obstack_memory_used@@Base+0x4d48>  // b.tcont
  41c338:	add	x0, x8, x26, lsl #2
  41c33c:	lsl	x8, x20, #2
  41c340:	sub	x2, x8, #0x4
  41c344:	mov	w1, #0xff                  	// #255
  41c348:	bl	402800 <memset@plt>
  41c34c:	cmp	x27, #0x2
  41c350:	b.cc	41c370 <_obstack_memory_used@@Base+0x4e54>  // b.lo, b.ul, b.last
  41c354:	and	x8, x27, #0xfffffffffffffffe
  41c358:	add	x26, x26, x8
  41c35c:	mov	x9, x8
  41c360:	subs	x9, x9, #0x2
  41c364:	b.ne	41c360 <_obstack_memory_used@@Base+0x4e44>  // b.any
  41c368:	cmp	x27, x8
  41c36c:	b.eq	41c380 <_obstack_memory_used@@Base+0x4e64>  // b.none
  41c370:	add	x8, x20, x28
  41c374:	sub	x8, x8, x26
  41c378:	subs	x8, x8, #0x1
  41c37c:	b.ne	41c378 <_obstack_memory_used@@Base+0x4e5c>  // b.any
  41c380:	mov	x26, x23
  41c384:	b	41c264 <_obstack_memory_used@@Base+0x4d48>
  41c388:	ldr	w9, [x19, #144]
  41c38c:	add	x24, sp, #0x8
  41c390:	cmp	w9, #0x1
  41c394:	b.lt	41c29c <_obstack_memory_used@@Base+0x4d80>  // b.tstop
  41c398:	cmp	x2, #0x1
  41c39c:	b.lt	41c29c <_obstack_memory_used@@Base+0x4d80>  // b.tstop
  41c3a0:	ldr	x11, [x19, #40]
  41c3a4:	ldr	x12, [x19]
  41c3a8:	mov	x10, xzr
  41c3ac:	add	x11, x26, x11
  41c3b0:	add	x11, x12, x11
  41c3b4:	ldrb	w12, [x11, x10]
  41c3b8:	add	x24, sp, #0x8
  41c3bc:	ldrb	w12, [x8, x12]
  41c3c0:	strb	w12, [x24, x10]
  41c3c4:	add	x10, x10, #0x1
  41c3c8:	cmp	x10, x9
  41c3cc:	b.cs	41c29c <_obstack_memory_used@@Base+0x4d80>  // b.hs, b.nlast
  41c3d0:	cmp	x2, x10
  41c3d4:	b.gt	41c3b4 <_obstack_memory_used@@Base+0x4e98>
  41c3d8:	b	41c29c <_obstack_memory_used@@Base+0x4d80>
  41c3dc:	add	x8, x20, #0x1
  41c3e0:	cmp	x8, #0x2
  41c3e4:	b.cc	41c3f8 <_obstack_memory_used@@Base+0x4edc>  // b.lo, b.ul, b.last
  41c3e8:	ldr	x8, [x19, #64]
  41c3ec:	ldr	x9, [x19, #88]
  41c3f0:	cmp	x8, x9
  41c3f4:	b.lt	41c56c <_obstack_memory_used@@Base+0x5050>  // b.tstop
  41c3f8:	ldr	x8, [x19, #40]
  41c3fc:	ldr	x10, [x19]
  41c400:	ldr	x9, [x19, #120]
  41c404:	add	x8, x8, x26
  41c408:	ldrb	w8, [x10, x8]
  41c40c:	cbnz	x9, 41c5a4 <_obstack_memory_used@@Base+0x5088>
  41c410:	ldr	x9, [x19, #8]
  41c414:	strb	w8, [x9, x28]
  41c418:	ldrb	w9, [x19, #140]
  41c41c:	cbnz	w9, 41c5b8 <_obstack_memory_used@@Base+0x509c>
  41c420:	ldr	x9, [x19, #16]
  41c424:	add	x22, x26, #0x1
  41c428:	add	x26, x28, #0x1
  41c42c:	cmn	x20, #0x1
  41c430:	str	w8, [x9, x28, lsl #2]
  41c434:	b.ne	41c264 <_obstack_memory_used@@Base+0x4d48>  // b.any
  41c438:	ldur	x8, [x29, #-8]
  41c43c:	str	x8, [x23]
  41c440:	b	41c264 <_obstack_memory_used@@Base+0x4d48>
  41c444:	mov	x11, x0
  41c448:	cmn	x0, #0x1
  41c44c:	mov	x25, x24
  41c450:	b.eq	41c2fc <_obstack_memory_used@@Base+0x4de0>  // b.none
  41c454:	ldr	x8, [x19, #64]
  41c458:	add	x24, x11, x28
  41c45c:	cmp	x24, x8
  41c460:	b.hi	41c56c <_obstack_memory_used@@Base+0x5050>  // b.pmore
  41c464:	ldr	x0, [x19, #24]
  41c468:	mov	x22, x9
  41c46c:	cbnz	x0, 41c488 <_obstack_memory_used@@Base+0x4f6c>
  41c470:	lsl	x0, x8, #3
  41c474:	mov	x23, x11
  41c478:	bl	402730 <malloc@plt>
  41c47c:	mov	x11, x23
  41c480:	str	x0, [x19, #24]
  41c484:	cbz	x0, 41c59c <_obstack_memory_used@@Base+0x5080>
  41c488:	ldrb	w8, [x19, #140]
  41c48c:	cbnz	w8, 41c5dc <_obstack_memory_used@@Base+0x50c0>
  41c490:	cbz	x28, 41c5d4 <_obstack_memory_used@@Base+0x50b8>
  41c494:	cmp	x28, #0x4
  41c498:	b.cs	41c52c <_obstack_memory_used@@Base+0x5010>  // b.hs, b.nlast
  41c49c:	mov	x8, xzr
  41c4a0:	b	41c5c4 <_obstack_memory_used@@Base+0x50a8>
  41c4a4:	ldr	x8, [x19, #24]
  41c4a8:	cmp	x20, #0x4
  41c4ac:	b.cs	41c4b8 <_obstack_memory_used@@Base+0x4f9c>  // b.hs, b.nlast
  41c4b0:	mov	x9, xzr
  41c4b4:	b	41c508 <_obstack_memory_used@@Base+0x4fec>
  41c4b8:	adrp	x11, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41c4bc:	ldr	q1, [x11, #3808]
  41c4c0:	mov	w11, #0x2                   	// #2
  41c4c4:	and	x9, x20, #0xfffffffffffffffc
  41c4c8:	add	x10, x8, x28, lsl #3
  41c4cc:	dup	v2.2d, x11
  41c4d0:	mov	w11, #0x4                   	// #4
  41c4d4:	dup	v0.2d, x26
  41c4d8:	add	x10, x10, #0x10
  41c4dc:	dup	v3.2d, x11
  41c4e0:	mov	x11, x9
  41c4e4:	add	v4.2d, v1.2d, v0.2d
  41c4e8:	add	v5.2d, v4.2d, v2.2d
  41c4ec:	add	v1.2d, v1.2d, v3.2d
  41c4f0:	subs	x11, x11, #0x4
  41c4f4:	stp	q4, q5, [x10, #-16]
  41c4f8:	add	x10, x10, #0x20
  41c4fc:	b.ne	41c4e4 <_obstack_memory_used@@Base+0x4fc8>  // b.any
  41c500:	cmp	x20, x9
  41c504:	b.eq	41c31c <_obstack_memory_used@@Base+0x4e00>  // b.none
  41c508:	sub	x10, x20, x9
  41c50c:	add	x11, x26, x9
  41c510:	add	x9, x28, x9
  41c514:	add	x8, x8, x9, lsl #3
  41c518:	str	x11, [x8], #8
  41c51c:	subs	x10, x10, #0x1
  41c520:	add	x11, x11, #0x1
  41c524:	b.ne	41c518 <_obstack_memory_used@@Base+0x4ffc>  // b.any
  41c528:	b	41c31c <_obstack_memory_used@@Base+0x4e00>
  41c52c:	adrp	x10, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41c530:	ldr	q0, [x10, #3808]
  41c534:	mov	w10, #0x2                   	// #2
  41c538:	and	x8, x28, #0xfffffffffffffffc
  41c53c:	dup	v1.2d, x10
  41c540:	mov	w10, #0x4                   	// #4
  41c544:	add	x9, x0, #0x10
  41c548:	dup	v2.2d, x10
  41c54c:	mov	x10, x8
  41c550:	add	v3.2d, v0.2d, v1.2d
  41c554:	stp	q0, q3, [x9, #-16]
  41c558:	add	v0.2d, v0.2d, v2.2d
  41c55c:	subs	x10, x10, #0x4
  41c560:	add	x9, x9, #0x20
  41c564:	b.ne	41c550 <_obstack_memory_used@@Base+0x5034>  // b.any
  41c568:	b	41c5cc <_obstack_memory_used@@Base+0x50b0>
  41c56c:	ldur	x8, [x29, #-8]
  41c570:	str	x8, [x23]
  41c574:	mov	w0, wzr
  41c578:	stp	x28, x26, [x19, #48]
  41c57c:	ldp	x20, x19, [sp, #160]
  41c580:	ldp	x22, x21, [sp, #144]
  41c584:	ldp	x24, x23, [sp, #128]
  41c588:	ldp	x26, x25, [sp, #112]
  41c58c:	ldp	x28, x27, [sp, #96]
  41c590:	ldp	x29, x30, [sp, #80]
  41c594:	add	sp, sp, #0xb0
  41c598:	ret
  41c59c:	mov	w0, #0xc                   	// #12
  41c5a0:	b	41c57c <_obstack_memory_used@@Base+0x5060>
  41c5a4:	ldrb	w8, [x9, x8]
  41c5a8:	ldr	x9, [x19, #8]
  41c5ac:	strb	w8, [x9, x28]
  41c5b0:	ldrb	w9, [x19, #140]
  41c5b4:	cbz	w9, 41c420 <_obstack_memory_used@@Base+0x4f04>
  41c5b8:	ldr	x9, [x19, #24]
  41c5bc:	str	x26, [x9, x28, lsl #3]
  41c5c0:	b	41c420 <_obstack_memory_used@@Base+0x4f04>
  41c5c4:	str	x8, [x0, x8, lsl #3]
  41c5c8:	add	x8, x8, #0x1
  41c5cc:	cmp	x28, x8
  41c5d0:	b.ne	41c5c4 <_obstack_memory_used@@Base+0x50a8>  // b.any
  41c5d4:	mov	w8, #0x1                   	// #1
  41c5d8:	strb	w8, [x19, #140]
  41c5dc:	ldr	x8, [x19, #8]
  41c5e0:	add	x1, sp, #0x8
  41c5e4:	mov	x2, x11
  41c5e8:	mov	x23, x11
  41c5ec:	add	x0, x8, x28
  41c5f0:	bl	402580 <memcpy@plt>
  41c5f4:	ldr	x8, [x19, #16]
  41c5f8:	cmp	x23, #0x2
  41c5fc:	mov	x16, x22
  41c600:	str	w21, [x8, x28, lsl #2]
  41c604:	ldr	x9, [x19, #24]
  41c608:	str	x26, [x9, x28, lsl #3]
  41c60c:	b.cc	41c6d0 <_obstack_memory_used@@Base+0x51b4>  // b.lo, b.ul, b.last
  41c610:	sub	x11, x23, #0x1
  41c614:	cmp	x11, #0x4
  41c618:	b.cs	41c624 <_obstack_memory_used@@Base+0x5108>  // b.hs, b.nlast
  41c61c:	mov	w10, #0x1                   	// #1
  41c620:	b	41c6a4 <_obstack_memory_used@@Base+0x5188>
  41c624:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41c628:	ldr	q3, [x13, #1536]
  41c62c:	mov	w15, #0x2                   	// #2
  41c630:	and	x12, x11, #0xfffffffffffffffc
  41c634:	add	x14, x28, #0x3
  41c638:	dup	v4.2d, x15
  41c63c:	mov	w15, #0x4                   	// #4
  41c640:	dup	v0.2d, x20
  41c644:	dup	v1.2d, x27
  41c648:	dup	v2.2d, x26
  41c64c:	orr	x10, x12, #0x1
  41c650:	add	x13, x8, x14, lsl #2
  41c654:	add	x14, x9, x14, lsl #3
  41c658:	movi	v5.2d, #0xffffffffffffffff
  41c65c:	dup	v6.2d, x15
  41c660:	mov	x15, x12
  41c664:	add	v7.2d, v3.2d, v4.2d
  41c668:	cmhi	v16.2d, v0.2d, v3.2d
  41c66c:	cmhi	v17.2d, v0.2d, v7.2d
  41c670:	bsl	v16.16b, v3.16b, v1.16b
  41c674:	bsl	v17.16b, v7.16b, v1.16b
  41c678:	add	v7.2d, v16.2d, v2.2d
  41c67c:	add	v16.2d, v17.2d, v2.2d
  41c680:	subs	x15, x15, #0x4
  41c684:	add	v3.2d, v3.2d, v6.2d
  41c688:	stp	q7, q16, [x14, #-16]
  41c68c:	stp	d5, d5, [x13, #-8]
  41c690:	add	x13, x13, #0x10
  41c694:	add	x14, x14, #0x20
  41c698:	b.ne	41c664 <_obstack_memory_used@@Base+0x5148>  // b.any
  41c69c:	cmp	x11, x12
  41c6a0:	b.eq	41c6d0 <_obstack_memory_used@@Base+0x51b4>  // b.none
  41c6a4:	add	x8, x8, x28, lsl #2
  41c6a8:	add	x9, x9, x28, lsl #3
  41c6ac:	mov	w11, #0xffffffff            	// #-1
  41c6b0:	cmp	x10, x20
  41c6b4:	csel	x12, x10, x27, cc  // cc = lo, ul, last
  41c6b8:	add	x12, x12, x26
  41c6bc:	str	x12, [x9, x10, lsl #3]
  41c6c0:	str	w11, [x8, x10, lsl #2]
  41c6c4:	add	x10, x10, #0x1
  41c6c8:	cmp	x23, x10
  41c6cc:	b.ne	41c6b0 <_obstack_memory_used@@Base+0x5194>  // b.any
  41c6d0:	ldp	x8, x9, [x19, #88]
  41c6d4:	add	x8, x8, x16
  41c6d8:	cmp	x9, x26
  41c6dc:	str	x8, [x19, #88]
  41c6e0:	b.le	41c6f0 <_obstack_memory_used@@Base+0x51d4>
  41c6e4:	ldr	x9, [x19, #104]
  41c6e8:	add	x9, x9, x16
  41c6ec:	str	x9, [x19, #104]
  41c6f0:	ldr	x9, [x19, #64]
  41c6f4:	add	x22, x20, x26
  41c6f8:	mov	x26, x24
  41c6fc:	cmp	x9, x8
  41c700:	csel	x25, x8, x9, gt
  41c704:	b	41c264 <_obstack_memory_used@@Base+0x4d48>
  41c708:	sub	sp, sp, #0x90
  41c70c:	stp	x29, x30, [sp, #64]
  41c710:	stp	x24, x23, [sp, #96]
  41c714:	stp	x22, x21, [sp, #112]
  41c718:	stp	x20, x19, [sp, #128]
  41c71c:	ldr	x8, [x0, #64]
  41c720:	ldr	x9, [x0, #88]
  41c724:	ldr	x23, [x0, #48]
  41c728:	mov	x19, x0
  41c72c:	str	x25, [sp, #80]
  41c730:	cmp	x8, x9
  41c734:	csel	x22, x9, x8, gt
  41c738:	cmp	x22, x23
  41c73c:	add	x29, sp, #0x40
  41c740:	b.le	41c8ec <_obstack_memory_used@@Base+0x53d0>
  41c744:	add	x20, x19, #0x20
  41c748:	ldr	x8, [x19, #120]
  41c74c:	ldr	x24, [x19, #32]
  41c750:	sub	x2, x22, x23
  41c754:	cbnz	x8, 41c844 <_obstack_memory_used@@Base+0x5328>
  41c758:	ldr	x8, [x19]
  41c75c:	ldr	x9, [x19, #40]
  41c760:	add	x8, x8, x9
  41c764:	add	x1, x8, x23
  41c768:	add	x0, x29, #0x1c
  41c76c:	mov	x3, x20
  41c770:	bl	417134 <wcrtomb@plt+0x144d4>
  41c774:	add	x8, x0, #0x1
  41c778:	cmp	x8, #0x2
  41c77c:	b.cc	41c79c <_obstack_memory_used@@Base+0x5280>  // b.lo, b.ul, b.last
  41c780:	mov	x21, x0
  41c784:	cmn	x0, #0x2
  41c788:	b.ne	41c7c4 <_obstack_memory_used@@Base+0x52a8>  // b.any
  41c78c:	ldr	x8, [x19, #64]
  41c790:	ldr	x9, [x19, #88]
  41c794:	cmp	x8, x9
  41c798:	b.lt	41c8e8 <_obstack_memory_used@@Base+0x53cc>  // b.tstop
  41c79c:	ldr	x8, [x19, #40]
  41c7a0:	ldr	x9, [x19]
  41c7a4:	add	x8, x8, x23
  41c7a8:	ldrb	w8, [x9, x8]
  41c7ac:	str	w8, [x29, #28]
  41c7b0:	ldr	x9, [x19, #120]
  41c7b4:	cbnz	x9, 41c8dc <_obstack_memory_used@@Base+0x53c0>
  41c7b8:	mov	w21, #0x1                   	// #1
  41c7bc:	str	x24, [x20]
  41c7c0:	b	41c7c8 <_obstack_memory_used@@Base+0x52ac>
  41c7c4:	ldr	w8, [x29, #28]
  41c7c8:	ldr	x9, [x19, #16]
  41c7cc:	add	x25, x21, x23
  41c7d0:	add	x24, x23, #0x1
  41c7d4:	cmp	x24, x25
  41c7d8:	str	w8, [x9, x23, lsl #2]
  41c7dc:	b.ge	41c834 <_obstack_memory_used@@Base+0x5318>  // b.tcont
  41c7e0:	add	x8, x9, x23, lsl #2
  41c7e4:	lsl	x9, x21, #2
  41c7e8:	add	x0, x8, #0x4
  41c7ec:	sub	x2, x9, #0x4
  41c7f0:	mov	w1, #0xff                  	// #255
  41c7f4:	bl	402800 <memset@plt>
  41c7f8:	sub	x8, x21, #0x1
  41c7fc:	cmp	x8, #0x2
  41c800:	b.cc	41c820 <_obstack_memory_used@@Base+0x5304>  // b.lo, b.ul, b.last
  41c804:	and	x9, x8, #0xfffffffffffffffe
  41c808:	add	x24, x24, x9
  41c80c:	mov	x10, x9
  41c810:	subs	x10, x10, #0x2
  41c814:	b.ne	41c810 <_obstack_memory_used@@Base+0x52f4>  // b.any
  41c818:	cmp	x8, x9
  41c81c:	b.eq	41c830 <_obstack_memory_used@@Base+0x5314>  // b.none
  41c820:	add	x8, x23, x21
  41c824:	sub	x8, x8, x24
  41c828:	subs	x8, x8, #0x1
  41c82c:	b.ne	41c828 <_obstack_memory_used@@Base+0x530c>  // b.any
  41c830:	mov	x24, x25
  41c834:	cmp	x22, x24
  41c838:	mov	x23, x24
  41c83c:	b.gt	41c748 <_obstack_memory_used@@Base+0x522c>
  41c840:	b	41c8f0 <_obstack_memory_used@@Base+0x53d4>
  41c844:	ldr	w9, [x19, #144]
  41c848:	mov	x1, sp
  41c84c:	cmp	w9, #0x1
  41c850:	b.lt	41c768 <_obstack_memory_used@@Base+0x524c>  // b.tstop
  41c854:	cmp	x2, #0x1
  41c858:	b.lt	41c768 <_obstack_memory_used@@Base+0x524c>  // b.tstop
  41c85c:	ldr	x9, [x19, #40]
  41c860:	ldp	x10, x11, [x19]
  41c864:	mov	x1, sp
  41c868:	add	x9, x23, x9
  41c86c:	ldrb	w9, [x10, x9]
  41c870:	ldrb	w8, [x8, x9]
  41c874:	strb	w8, [x11, x23]
  41c878:	strb	w8, [sp]
  41c87c:	ldr	w8, [x19, #144]
  41c880:	cmp	w8, #0x2
  41c884:	b.lt	41c768 <_obstack_memory_used@@Base+0x524c>  // b.tstop
  41c888:	cmp	x2, #0x2
  41c88c:	b.lt	41c768 <_obstack_memory_used@@Base+0x524c>  // b.tstop
  41c890:	mov	w8, #0x1                   	// #1
  41c894:	ldr	x9, [x19, #40]
  41c898:	ldp	x10, x12, [x19]
  41c89c:	ldr	x11, [x19, #120]
  41c8a0:	mov	x1, sp
  41c8a4:	add	x9, x10, x9
  41c8a8:	add	x9, x9, x23
  41c8ac:	ldrb	w9, [x9, x8]
  41c8b0:	add	x10, x12, x23
  41c8b4:	ldrb	w9, [x11, x9]
  41c8b8:	strb	w9, [x10, x8]
  41c8bc:	strb	w9, [x1, x8]
  41c8c0:	ldr	w9, [x19, #144]
  41c8c4:	add	x8, x8, #0x1
  41c8c8:	cmp	w9, w8
  41c8cc:	b.le	41c768 <_obstack_memory_used@@Base+0x524c>
  41c8d0:	cmp	x2, x8
  41c8d4:	b.gt	41c894 <_obstack_memory_used@@Base+0x5378>
  41c8d8:	b	41c768 <_obstack_memory_used@@Base+0x524c>
  41c8dc:	ldrb	w8, [x9, w8, uxtw]
  41c8e0:	str	w8, [x29, #28]
  41c8e4:	b	41c7b8 <_obstack_memory_used@@Base+0x529c>
  41c8e8:	str	x24, [x20]
  41c8ec:	mov	x24, x23
  41c8f0:	stp	x24, x24, [x19, #48]
  41c8f4:	ldp	x20, x19, [sp, #128]
  41c8f8:	ldp	x22, x21, [sp, #112]
  41c8fc:	ldp	x24, x23, [sp, #96]
  41c900:	ldr	x25, [sp, #80]
  41c904:	ldp	x29, x30, [sp, #64]
  41c908:	add	sp, sp, #0x90
  41c90c:	ret
  41c910:	sub	sp, sp, #0x80
  41c914:	stp	x29, x30, [sp, #32]
  41c918:	stp	x28, x27, [sp, #48]
  41c91c:	stp	x26, x25, [sp, #64]
  41c920:	stp	x24, x23, [sp, #80]
  41c924:	stp	x22, x21, [sp, #96]
  41c928:	stp	x20, x19, [sp, #112]
  41c92c:	ldr	x28, [x1]
  41c930:	add	x29, sp, #0x20
  41c934:	mov	x19, x5
  41c938:	mov	x22, x2
  41c93c:	ldr	x8, [x28, #168]
  41c940:	mov	x24, x0
  41c944:	stur	x3, [x29, #-8]
  41c948:	str	x4, [sp]
  41c94c:	stp	x8, x1, [sp, #8]
  41c950:	bl	41d1e8 <_obstack_memory_used@@Base+0x5ccc>
  41c954:	mov	x20, x0
  41c958:	cbnz	x0, 41c964 <_obstack_memory_used@@Base+0x5448>
  41c95c:	ldr	w8, [x19]
  41c960:	cbnz	w8, 41cc4c <_obstack_memory_used@@Base+0x5730>
  41c964:	ldrb	w8, [x22, #8]
  41c968:	cmp	w8, #0xa
  41c96c:	b.ne	41ca90 <_obstack_memory_used@@Base+0x5574>  // b.any
  41c970:	ldur	x8, [x29, #-8]
  41c974:	orr	x25, x8, #0x800000
  41c978:	ldr	x8, [sp]
  41c97c:	cbz	x8, 41cab4 <_obstack_memory_used@@Base+0x5598>
  41c980:	mov	w21, #0xa                   	// #10
  41c984:	mov	x23, #0xffffffffffffffff    	// #-1
  41c988:	b	41c99c <_obstack_memory_used@@Base+0x5480>
  41c98c:	ldrb	w8, [x22, #8]
  41c990:	mov	x20, x0
  41c994:	cmp	w8, #0xa
  41c998:	b.ne	41ca94 <_obstack_memory_used@@Base+0x5578>  // b.any
  41c99c:	mov	x0, x22
  41c9a0:	mov	x1, x24
  41c9a4:	mov	x2, x25
  41c9a8:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41c9ac:	ldr	x8, [x24, #72]
  41c9b0:	add	x8, x8, w0, sxtw
  41c9b4:	str	x8, [x24, #72]
  41c9b8:	ldrb	w8, [x22, #8]
  41c9bc:	orr	w9, w8, #0x8
  41c9c0:	cmp	w9, #0xa
  41c9c4:	b.ne	41ca18 <_obstack_memory_used@@Base+0x54fc>  // b.any
  41c9c8:	mov	x27, xzr
  41c9cc:	ldr	w8, [x28, #128]
  41c9d0:	cmp	w8, #0xf
  41c9d4:	b.eq	41ca6c <_obstack_memory_used@@Base+0x5550>  // b.none
  41c9d8:	ldr	x0, [x28, #112]
  41c9dc:	add	w9, w8, #0x1
  41c9e0:	sxtw	x8, w8
  41c9e4:	add	x0, x0, x8, lsl #6
  41c9e8:	str	w9, [x28, #128]
  41c9ec:	str	xzr, [x0, #8]!
  41c9f0:	stp	x20, x27, [x0, #8]
  41c9f4:	stp	xzr, xzr, [x0, #32]
  41c9f8:	str	w21, [x0, #48]
  41c9fc:	str	xzr, [x0, #24]
  41ca00:	str	x23, [x0, #56]
  41ca04:	cbz	x20, 41ca0c <_obstack_memory_used@@Base+0x54f0>
  41ca08:	str	x0, [x20]
  41ca0c:	cbz	x27, 41c98c <_obstack_memory_used@@Base+0x5470>
  41ca10:	str	x0, [x27]
  41ca14:	b	41c98c <_obstack_memory_used@@Base+0x5470>
  41ca18:	cmp	w8, #0x9
  41ca1c:	b.eq	41c9c8 <_obstack_memory_used@@Base+0x54ac>  // b.none
  41ca20:	ldp	x8, x1, [sp, #8]
  41ca24:	ldur	x3, [x29, #-8]
  41ca28:	ldr	x4, [sp]
  41ca2c:	ldr	x26, [x28, #168]
  41ca30:	mov	x0, x24
  41ca34:	mov	x2, x22
  41ca38:	mov	x5, x19
  41ca3c:	str	x8, [x28, #168]
  41ca40:	bl	41d1e8 <_obstack_memory_used@@Base+0x5ccc>
  41ca44:	mov	x27, x0
  41ca48:	cbnz	x0, 41ca54 <_obstack_memory_used@@Base+0x5538>
  41ca4c:	ldr	w8, [x19]
  41ca50:	cbnz	w8, 41cbbc <_obstack_memory_used@@Base+0x56a0>
  41ca54:	ldr	x8, [x28, #168]
  41ca58:	orr	x8, x8, x26
  41ca5c:	str	x8, [x28, #168]
  41ca60:	ldr	w8, [x28, #128]
  41ca64:	cmp	w8, #0xf
  41ca68:	b.ne	41c9d8 <_obstack_memory_used@@Base+0x54bc>  // b.any
  41ca6c:	mov	w0, #0x3c8                 	// #968
  41ca70:	bl	402730 <malloc@plt>
  41ca74:	cbz	x0, 41cc54 <_obstack_memory_used@@Base+0x5738>
  41ca78:	ldr	x9, [x28, #112]
  41ca7c:	mov	w8, wzr
  41ca80:	str	x9, [x0]
  41ca84:	str	x0, [x28, #112]
  41ca88:	str	wzr, [x28, #128]
  41ca8c:	b	41c9dc <_obstack_memory_used@@Base+0x54c0>
  41ca90:	mov	x0, x20
  41ca94:	ldp	x20, x19, [sp, #112]
  41ca98:	ldp	x22, x21, [sp, #96]
  41ca9c:	ldp	x24, x23, [sp, #80]
  41caa0:	ldp	x26, x25, [sp, #64]
  41caa4:	ldp	x28, x27, [sp, #48]
  41caa8:	ldp	x29, x30, [sp, #32]
  41caac:	add	sp, sp, #0x80
  41cab0:	ret
  41cab4:	mov	w21, #0xa                   	// #10
  41cab8:	mov	x23, #0xffffffffffffffff    	// #-1
  41cabc:	b	41cad0 <_obstack_memory_used@@Base+0x55b4>
  41cac0:	ldrb	w8, [x22, #8]
  41cac4:	mov	x20, x0
  41cac8:	cmp	w8, #0xa
  41cacc:	b.ne	41ca94 <_obstack_memory_used@@Base+0x5578>  // b.any
  41cad0:	mov	x0, x22
  41cad4:	mov	x1, x24
  41cad8:	mov	x2, x25
  41cadc:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41cae0:	ldr	x8, [x24, #72]
  41cae4:	add	x8, x8, w0, sxtw
  41cae8:	str	x8, [x24, #72]
  41caec:	ldrb	w8, [x22, #8]
  41caf0:	orr	w8, w8, #0x8
  41caf4:	cmp	w8, #0xa
  41caf8:	b.ne	41cb4c <_obstack_memory_used@@Base+0x5630>  // b.any
  41cafc:	mov	x26, xzr
  41cb00:	ldr	w8, [x28, #128]
  41cb04:	cmp	w8, #0xf
  41cb08:	b.eq	41cb98 <_obstack_memory_used@@Base+0x567c>  // b.none
  41cb0c:	ldr	x0, [x28, #112]
  41cb10:	add	w9, w8, #0x1
  41cb14:	sxtw	x8, w8
  41cb18:	add	x0, x0, x8, lsl #6
  41cb1c:	str	w9, [x28, #128]
  41cb20:	str	xzr, [x0, #8]!
  41cb24:	stp	x20, x26, [x0, #8]
  41cb28:	stp	xzr, xzr, [x0, #32]
  41cb2c:	str	w21, [x0, #48]
  41cb30:	str	xzr, [x0, #24]
  41cb34:	str	x23, [x0, #56]
  41cb38:	cbz	x20, 41cb40 <_obstack_memory_used@@Base+0x5624>
  41cb3c:	str	x0, [x20]
  41cb40:	cbz	x26, 41cac0 <_obstack_memory_used@@Base+0x55a4>
  41cb44:	str	x0, [x26]
  41cb48:	b	41cac0 <_obstack_memory_used@@Base+0x55a4>
  41cb4c:	ldp	x8, x1, [sp, #8]
  41cb50:	ldur	x3, [x29, #-8]
  41cb54:	ldr	x27, [x28, #168]
  41cb58:	mov	x0, x24
  41cb5c:	mov	x2, x22
  41cb60:	mov	x4, xzr
  41cb64:	mov	x5, x19
  41cb68:	str	x8, [x28, #168]
  41cb6c:	bl	41d1e8 <_obstack_memory_used@@Base+0x5ccc>
  41cb70:	mov	x26, x0
  41cb74:	cbnz	x0, 41cb80 <_obstack_memory_used@@Base+0x5664>
  41cb78:	ldr	w8, [x19]
  41cb7c:	cbnz	w8, 41cbbc <_obstack_memory_used@@Base+0x56a0>
  41cb80:	ldr	x8, [x28, #168]
  41cb84:	orr	x8, x8, x27
  41cb88:	str	x8, [x28, #168]
  41cb8c:	ldr	w8, [x28, #128]
  41cb90:	cmp	w8, #0xf
  41cb94:	b.ne	41cb0c <_obstack_memory_used@@Base+0x55f0>  // b.any
  41cb98:	mov	w0, #0x3c8                 	// #968
  41cb9c:	bl	402730 <malloc@plt>
  41cba0:	cbz	x0, 41cc54 <_obstack_memory_used@@Base+0x5738>
  41cba4:	ldr	x9, [x28, #112]
  41cba8:	mov	w8, wzr
  41cbac:	str	x9, [x0]
  41cbb0:	str	x0, [x28, #112]
  41cbb4:	str	wzr, [x28, #128]
  41cbb8:	b	41cb10 <_obstack_memory_used@@Base+0x55f4>
  41cbbc:	cbz	x20, 41cc4c <_obstack_memory_used@@Base+0x5730>
  41cbc0:	mov	w21, #0xff                  	// #255
  41cbc4:	movk	w21, #0x4, lsl #16
  41cbc8:	mov	x22, x20
  41cbcc:	ldr	x20, [x20, #8]
  41cbd0:	cbnz	x20, 41cbc8 <_obstack_memory_used@@Base+0x56ac>
  41cbd4:	ldr	x20, [x22, #16]
  41cbd8:	cbnz	x20, 41cbc8 <_obstack_memory_used@@Base+0x56ac>
  41cbdc:	ldr	w8, [x22, #48]
  41cbe0:	and	w8, w8, w21
  41cbe4:	cmp	w8, #0x3
  41cbe8:	b.eq	41cc1c <_obstack_memory_used@@Base+0x5700>  // b.none
  41cbec:	cmp	w8, #0x6
  41cbf0:	b.ne	41cc28 <_obstack_memory_used@@Base+0x570c>  // b.any
  41cbf4:	ldr	x19, [x22, #40]
  41cbf8:	ldr	x0, [x19]
  41cbfc:	bl	402a10 <free@plt>
  41cc00:	ldr	x0, [x19, #8]
  41cc04:	bl	402a10 <free@plt>
  41cc08:	ldr	x0, [x19, #16]
  41cc0c:	bl	402a10 <free@plt>
  41cc10:	ldr	x0, [x19, #24]
  41cc14:	bl	402a10 <free@plt>
  41cc18:	b	41cc20 <_obstack_memory_used@@Base+0x5704>
  41cc1c:	ldr	x19, [x22, #40]
  41cc20:	mov	x0, x19
  41cc24:	bl	402a10 <free@plt>
  41cc28:	ldr	x8, [x22]
  41cc2c:	cbz	x8, 41cc4c <_obstack_memory_used@@Base+0x5730>
  41cc30:	ldr	x20, [x8, #16]
  41cc34:	cmp	x20, x22
  41cc38:	mov	x22, x8
  41cc3c:	b.eq	41cbdc <_obstack_memory_used@@Base+0x56c0>  // b.none
  41cc40:	mov	x22, x8
  41cc44:	cbz	x20, 41cbdc <_obstack_memory_used@@Base+0x56c0>
  41cc48:	b	41cbc8 <_obstack_memory_used@@Base+0x56ac>
  41cc4c:	mov	x0, xzr
  41cc50:	b	41ca94 <_obstack_memory_used@@Base+0x5578>
  41cc54:	mov	x0, xzr
  41cc58:	mov	w8, #0xc                   	// #12
  41cc5c:	str	w8, [x19]
  41cc60:	b	41ca94 <_obstack_memory_used@@Base+0x5578>
  41cc64:	sub	sp, sp, #0x50
  41cc68:	stp	x29, x30, [sp, #16]
  41cc6c:	stp	x24, x23, [sp, #32]
  41cc70:	stp	x22, x21, [sp, #48]
  41cc74:	stp	x20, x19, [sp, #64]
  41cc78:	ldr	x9, [x1, #104]
  41cc7c:	ldr	x8, [x1, #72]
  41cc80:	mov	x19, x0
  41cc84:	add	x29, sp, #0x10
  41cc88:	cmp	x9, x8
  41cc8c:	b.le	41cd70 <_obstack_memory_used@@Base+0x5854>
  41cc90:	ldr	x9, [x1, #8]
  41cc94:	mov	x23, x19
  41cc98:	mov	x20, x2
  41cc9c:	mov	x21, x1
  41cca0:	ldrb	w24, [x9, x8]
  41cca4:	strb	w24, [x23], #8
  41cca8:	ldr	w8, [x23]
  41ccac:	and	w9, w8, #0xff9fffff
  41ccb0:	str	w9, [x23]
  41ccb4:	ldr	w11, [x1, #144]
  41ccb8:	cmp	w11, #0x2
  41ccbc:	b.lt	41cce0 <_obstack_memory_used@@Base+0x57c4>  // b.tstop
  41ccc0:	ldr	x9, [x21, #72]
  41ccc4:	ldr	x10, [x21, #48]
  41ccc8:	cmp	x9, x10
  41cccc:	b.eq	41cce0 <_obstack_memory_used@@Base+0x57c4>  // b.none
  41ccd0:	ldr	x10, [x21, #16]
  41ccd4:	ldr	w9, [x10, x9, lsl #2]
  41ccd8:	cmn	w9, #0x1
  41ccdc:	b.eq	41ceb0 <_obstack_memory_used@@Base+0x5994>  // b.none
  41cce0:	mov	w9, #0xff00                	// #65280
  41cce4:	cmp	w24, #0x5c
  41cce8:	movk	w9, #0xff9f, lsl #16
  41ccec:	b.ne	41cd80 <_obstack_memory_used@@Base+0x5864>  // b.any
  41ccf0:	ldr	x12, [x21, #72]
  41ccf4:	ldr	x13, [x21, #88]
  41ccf8:	add	x10, x12, #0x1
  41ccfc:	cmp	x10, x13
  41cd00:	b.ge	41cdd0 <_obstack_memory_used@@Base+0x58b4>  // b.tcont
  41cd04:	ldrb	w13, [x21, #139]
  41cd08:	cbnz	w13, 41d184 <_obstack_memory_used@@Base+0x5c68>
  41cd0c:	ldr	x11, [x21, #8]
  41cd10:	ldrb	w22, [x11, x10]
  41cd14:	and	w8, w8, w9
  41cd18:	orr	w24, w8, #0x1
  41cd1c:	strb	w22, [x19]
  41cd20:	str	w24, [x19, #8]
  41cd24:	ldr	w8, [x21, #144]
  41cd28:	cmp	w8, #0x2
  41cd2c:	b.lt	41ce40 <_obstack_memory_used@@Base+0x5924>  // b.tstop
  41cd30:	ldr	x8, [x21, #72]
  41cd34:	ldr	x9, [x21, #16]
  41cd38:	add	x8, x9, x8, lsl #2
  41cd3c:	ldr	w21, [x8, #4]
  41cd40:	mov	w0, w21
  41cd44:	bl	402b10 <iswalnum@plt>
  41cd48:	ldr	w9, [x23]
  41cd4c:	cmp	w0, #0x0
  41cd50:	mov	w8, #0x5f                  	// #95
  41cd54:	mov	w10, #0x400000              	// #4194304
  41cd58:	ccmp	w21, w8, #0x4, eq  // eq = none
  41cd5c:	csel	w8, w10, wzr, eq  // eq = none
  41cd60:	and	w9, w9, #0xffbfffff
  41cd64:	orr	w8, w8, w9
  41cd68:	and	x9, x22, #0xff
  41cd6c:	b	41ce68 <_obstack_memory_used@@Base+0x594c>
  41cd70:	mov	w8, #0x2                   	// #2
  41cd74:	mov	w0, wzr
  41cd78:	strb	w8, [x19, #8]
  41cd7c:	b	41cfe0 <_obstack_memory_used@@Base+0x5ac4>
  41cd80:	and	w8, w8, w9
  41cd84:	orr	w22, w8, #0x1
  41cd88:	str	w22, [x23]
  41cd8c:	ldr	w8, [x21, #144]
  41cd90:	cmp	w8, #0x2
  41cd94:	b.lt	41cde0 <_obstack_memory_used@@Base+0x58c4>  // b.tstop
  41cd98:	ldr	x8, [x21, #72]
  41cd9c:	ldr	x9, [x21, #16]
  41cda0:	ldr	w22, [x9, x8, lsl #2]
  41cda4:	mov	w0, w22
  41cda8:	bl	402b10 <iswalnum@plt>
  41cdac:	ldr	w9, [x23]
  41cdb0:	cmp	w0, #0x0
  41cdb4:	mov	w8, #0x5f                  	// #95
  41cdb8:	ccmp	w22, w8, #0x4, eq  // eq = none
  41cdbc:	mov	w8, #0x400000              	// #4194304
  41cdc0:	csel	w8, w8, wzr, eq  // eq = none
  41cdc4:	and	w9, w9, #0xffbfffff
  41cdc8:	orr	w8, w8, w9
  41cdcc:	b	41ce0c <_obstack_memory_used@@Base+0x58f0>
  41cdd0:	and	w8, w8, w9
  41cdd4:	mov	w9, #0x24                  	// #36
  41cdd8:	orr	w8, w8, w9
  41cddc:	b	41cfd8 <_obstack_memory_used@@Base+0x5abc>
  41cde0:	bl	4029e0 <__ctype_b_loc@plt>
  41cde4:	ldr	x8, [x0]
  41cde8:	cmp	w24, #0x5f
  41cdec:	cset	w9, eq  // eq = none
  41cdf0:	ldrh	w8, [x8, x24, lsl #1]
  41cdf4:	and	w8, w8, #0x8
  41cdf8:	orr	w8, w9, w8, lsr #3
  41cdfc:	cmp	w8, #0x0
  41ce00:	mov	w8, #0x400000              	// #4194304
  41ce04:	csel	w8, w8, wzr, ne  // ne = any
  41ce08:	orr	w8, w8, w22
  41ce0c:	sub	w9, w24, #0xa
  41ce10:	cmp	w9, #0x73
  41ce14:	mov	w0, #0x1                   	// #1
  41ce18:	str	w8, [x23]
  41ce1c:	b.hi	41cfe0 <_obstack_memory_used@@Base+0x5ac4>  // b.pmore
  41ce20:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ce24:	add	x10, x10, #0x63f
  41ce28:	adr	x11, 41ce38 <_obstack_memory_used@@Base+0x591c>
  41ce2c:	ldrb	w12, [x10, x9]
  41ce30:	add	x11, x11, x12, lsl #2
  41ce34:	br	x11
  41ce38:	tbnz	w20, #11, 41cfd0 <_obstack_memory_used@@Base+0x5ab4>
  41ce3c:	b	41cfdc <_obstack_memory_used@@Base+0x5ac0>
  41ce40:	bl	4029e0 <__ctype_b_loc@plt>
  41ce44:	ldr	x8, [x0]
  41ce48:	and	x9, x22, #0xff
  41ce4c:	and	w10, w22, #0xff
  41ce50:	cmp	w10, #0x5f
  41ce54:	ldrh	w8, [x8, x9, lsl #1]
  41ce58:	cset	w10, eq  // eq = none
  41ce5c:	ubfx	w8, w8, #3, #1
  41ce60:	orr	w8, w8, w10
  41ce64:	orr	w8, w24, w8, lsl #22
  41ce68:	and	w10, w22, #0xff
  41ce6c:	sub	w10, w10, #0x27
  41ce70:	cmp	w10, #0x56
  41ce74:	mov	w0, #0x2                   	// #2
  41ce78:	str	w8, [x23]
  41ce7c:	b.hi	41cfe0 <_obstack_memory_used@@Base+0x5ac4>  // b.pmore
  41ce80:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ce84:	add	x11, x11, #0x6b3
  41ce88:	adr	x12, 41ce98 <_obstack_memory_used@@Base+0x597c>
  41ce8c:	ldrb	w13, [x11, x10]
  41ce90:	add	x12, x12, x13, lsl #2
  41ce94:	br	x12
  41ce98:	tbnz	w20, #14, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41ce9c:	and	w8, w8, #0xffffff00
  41cea0:	sub	x9, x9, #0x31
  41cea4:	orr	w8, w8, #0x4
  41cea8:	str	x9, [x19]
  41ceac:	b	41d100 <_obstack_memory_used@@Base+0x5be4>
  41ceb0:	mov	w9, #0xff00                	// #65280
  41ceb4:	movk	w9, #0xff9f, lsl #16
  41ceb8:	mov	w10, #0x1                   	// #1
  41cebc:	movk	w10, #0x20, lsl #16
  41cec0:	and	w8, w8, w9
  41cec4:	orr	w8, w8, w10
  41cec8:	b	41cfd8 <_obstack_memory_used@@Base+0x5abc>
  41cecc:	tbnz	w20, #3, 41cf18 <_obstack_memory_used@@Base+0x59fc>
  41ced0:	ldr	x9, [x21, #72]
  41ced4:	ldr	x10, [x21, #88]
  41ced8:	add	x9, x9, #0x1
  41cedc:	cmp	x9, x10
  41cee0:	b.eq	41cf18 <_obstack_memory_used@@Base+0x59fc>  // b.none
  41cee4:	mov	x0, sp
  41cee8:	mov	x1, x21
  41ceec:	mov	x2, x20
  41cef0:	str	x9, [x21, #72]
  41cef4:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41cef8:	ldr	x8, [x21, #72]
  41cefc:	sub	x8, x8, #0x1
  41cf00:	str	x8, [x21, #72]
  41cf04:	ldrb	w8, [sp, #8]
  41cf08:	sub	w8, w8, #0x9
  41cf0c:	cmp	w8, #0x1
  41cf10:	b.hi	41cfdc <_obstack_memory_used@@Base+0x5ac0>  // b.pmore
  41cf14:	ldr	w8, [x23]
  41cf18:	and	w8, w8, #0xffffff00
  41cf1c:	mov	w9, #0x20                  	// #32
  41cf20:	b	41cf98 <_obstack_memory_used@@Base+0x5a7c>
  41cf24:	tbz	w20, #13, 41cfdc <_obstack_memory_used@@Base+0x5ac0>
  41cf28:	and	w8, w8, #0xffffff00
  41cf2c:	orr	w8, w8, #0x8
  41cf30:	b	41cfd8 <_obstack_memory_used@@Base+0x5abc>
  41cf34:	tbz	w20, #13, 41cfdc <_obstack_memory_used@@Base+0x5ac0>
  41cf38:	mov	w9, #0x9                   	// #9
  41cf3c:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cf40:	mov	w9, #0xb                   	// #11
  41cf44:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cf48:	mov	w9, #0x402                 	// #1026
  41cf4c:	tst	x20, x9
  41cf50:	b.ne	41cfdc <_obstack_memory_used@@Base+0x5ac0>  // b.any
  41cf54:	mov	w9, #0x12                  	// #18
  41cf58:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cf5c:	mov	w9, #0x5                   	// #5
  41cf60:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cf64:	mov	w9, #0x402                 	// #1026
  41cf68:	tst	x20, x9
  41cf6c:	b.ne	41cfdc <_obstack_memory_used@@Base+0x5ac0>  // b.any
  41cf70:	mov	w9, #0x13                  	// #19
  41cf74:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cf78:	mov	w9, #0x14                  	// #20
  41cf7c:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cf80:	mov	w9, #0x8                   	// #8
  41cf84:	movk	w9, #0x80, lsl #16
  41cf88:	tst	x20, x9
  41cf8c:	b.eq	41d014 <_obstack_memory_used@@Base+0x5af8>  // b.none
  41cf90:	and	w8, w8, #0xffffff00
  41cf94:	mov	w9, #0x10                  	// #16
  41cf98:	orr	w8, w8, #0xc
  41cf9c:	str	w9, [x19]
  41cfa0:	str	w8, [x19, #8]
  41cfa4:	b	41cfdc <_obstack_memory_used@@Base+0x5ac0>
  41cfa8:	mvn	w9, w20
  41cfac:	mov	w10, #0x1200                	// #4608
  41cfb0:	tst	x9, x10
  41cfb4:	b.ne	41cfdc <_obstack_memory_used@@Base+0x5ac0>  // b.any
  41cfb8:	mov	w9, #0x17                  	// #23
  41cfbc:	b	41cfd4 <_obstack_memory_used@@Base+0x5ab8>
  41cfc0:	mov	w9, #0x8400                	// #33792
  41cfc4:	and	x9, x20, x9
  41cfc8:	cmp	x9, #0x8, lsl #12
  41cfcc:	b.ne	41cfdc <_obstack_memory_used@@Base+0x5ac0>  // b.any
  41cfd0:	mov	w9, #0xa                   	// #10
  41cfd4:	bfxil	w8, w9, #0, #8
  41cfd8:	str	w8, [x23]
  41cfdc:	mov	w0, #0x1                   	// #1
  41cfe0:	ldp	x20, x19, [sp, #64]
  41cfe4:	ldp	x22, x21, [sp, #48]
  41cfe8:	ldp	x24, x23, [sp, #32]
  41cfec:	ldp	x29, x30, [sp, #16]
  41cff0:	add	sp, sp, #0x50
  41cff4:	ret
  41cff8:	mvn	w9, w20
  41cffc:	mov	w10, #0x1200                	// #4608
  41d000:	tst	x9, x10
  41d004:	b.ne	41cfdc <_obstack_memory_used@@Base+0x5ac0>  // b.any
  41d008:	and	w8, w8, #0xffffff00
  41d00c:	orr	w8, w8, #0x18
  41d010:	b	41cfd8 <_obstack_memory_used@@Base+0x5abc>
  41d014:	ldr	x9, [x21, #72]
  41d018:	cbz	x9, 41cf90 <_obstack_memory_used@@Base+0x5a74>
  41d01c:	tbz	w20, #11, 41cfdc <_obstack_memory_used@@Base+0x5ac0>
  41d020:	ldr	x10, [x21, #8]
  41d024:	add	x9, x9, x10
  41d028:	ldurb	w9, [x9, #-1]
  41d02c:	cmp	w9, #0xa
  41d030:	b.eq	41cf90 <_obstack_memory_used@@Base+0x5a74>  // b.none
  41d034:	b	41cfdc <_obstack_memory_used@@Base+0x5ac0>
  41d038:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d03c:	and	w8, w8, #0xffffff00
  41d040:	mov	w9, #0x80                  	// #128
  41d044:	b	41d0f8 <_obstack_memory_used@@Base+0x5bdc>
  41d048:	tbnz	w20, #13, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d04c:	and	w8, w8, #0xffffff00
  41d050:	orr	w8, w8, #0x8
  41d054:	b	41d154 <_obstack_memory_used@@Base+0x5c38>
  41d058:	tbnz	w20, #13, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d05c:	mov	w9, #0x9                   	// #9
  41d060:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d064:	mov	w9, #0x402                 	// #1026
  41d068:	and	x9, x20, x9
  41d06c:	cmp	x9, #0x2
  41d070:	b.ne	41d17c <_obstack_memory_used@@Base+0x5c60>  // b.any
  41d074:	mov	w9, #0x12                  	// #18
  41d078:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d07c:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d080:	and	w8, w8, #0xffffff00
  41d084:	mov	w9, #0x6                   	// #6
  41d088:	b	41d0f8 <_obstack_memory_used@@Base+0x5bdc>
  41d08c:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d090:	and	w8, w8, #0xffffff00
  41d094:	mov	w9, #0x9                   	// #9
  41d098:	b	41d0f8 <_obstack_memory_used@@Base+0x5bdc>
  41d09c:	mov	w9, #0x402                 	// #1026
  41d0a0:	and	x9, x20, x9
  41d0a4:	cmp	x9, #0x2
  41d0a8:	b.ne	41d17c <_obstack_memory_used@@Base+0x5c60>  // b.any
  41d0ac:	mov	w9, #0x13                  	// #19
  41d0b0:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d0b4:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d0b8:	and	w8, w8, #0xffffff00
  41d0bc:	mov	w9, #0x200                 	// #512
  41d0c0:	b	41d0f8 <_obstack_memory_used@@Base+0x5bdc>
  41d0c4:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d0c8:	mov	w9, #0x23                  	// #35
  41d0cc:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d0d0:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d0d4:	mov	w9, #0x21                  	// #33
  41d0d8:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d0dc:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d0e0:	and	w8, w8, #0xffffff00
  41d0e4:	mov	w9, #0x40                  	// #64
  41d0e8:	b	41d0f8 <_obstack_memory_used@@Base+0x5bdc>
  41d0ec:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d0f0:	and	w8, w8, #0xffffff00
  41d0f4:	mov	w9, #0x100                 	// #256
  41d0f8:	orr	w8, w8, #0xc
  41d0fc:	str	w9, [x19]
  41d100:	str	w8, [x19, #8]
  41d104:	mov	w0, #0x2                   	// #2
  41d108:	b	41cfe0 <_obstack_memory_used@@Base+0x5ac4>
  41d10c:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d110:	mov	w9, #0x22                  	// #34
  41d114:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d118:	tbnz	w20, #19, 41d17c <_obstack_memory_used@@Base+0x5c60>
  41d11c:	and	w8, w8, #0xffffff00
  41d120:	orr	w8, w8, #0x20
  41d124:	b	41d154 <_obstack_memory_used@@Base+0x5c38>
  41d128:	mov	w9, #0x1200                	// #4608
  41d12c:	and	x9, x20, x9
  41d130:	cmp	x9, #0x200
  41d134:	b.ne	41d17c <_obstack_memory_used@@Base+0x5c60>  // b.any
  41d138:	mov	w9, #0x17                  	// #23
  41d13c:	b	41d150 <_obstack_memory_used@@Base+0x5c34>
  41d140:	mov	w9, #0x8400                	// #33792
  41d144:	tst	x20, x9
  41d148:	b.ne	41d17c <_obstack_memory_used@@Base+0x5c60>  // b.any
  41d14c:	mov	w9, #0xa                   	// #10
  41d150:	bfxil	w8, w9, #0, #8
  41d154:	str	w8, [x23]
  41d158:	mov	w0, #0x2                   	// #2
  41d15c:	b	41cfe0 <_obstack_memory_used@@Base+0x5ac4>
  41d160:	mov	w9, #0x1200                	// #4608
  41d164:	and	x9, x20, x9
  41d168:	cmp	x9, #0x200
  41d16c:	b.ne	41d17c <_obstack_memory_used@@Base+0x5c60>  // b.any
  41d170:	and	w8, w8, #0xffffff00
  41d174:	orr	w8, w8, #0x18
  41d178:	b	41d154 <_obstack_memory_used@@Base+0x5c38>
  41d17c:	mov	w0, #0x2                   	// #2
  41d180:	b	41cfe0 <_obstack_memory_used@@Base+0x5ac4>
  41d184:	cmp	w11, #0x2
  41d188:	b.lt	41d1b8 <_obstack_memory_used@@Base+0x5c9c>  // b.tstop
  41d18c:	ldr	x11, [x21, #16]
  41d190:	ldr	w13, [x11, x10, lsl #2]
  41d194:	cmn	w13, #0x1
  41d198:	b.eq	41cd0c <_obstack_memory_used@@Base+0x57f0>  // b.none
  41d19c:	ldr	x13, [x21, #48]
  41d1a0:	add	x12, x12, #0x2
  41d1a4:	cmp	x13, x12
  41d1a8:	b.eq	41d1b8 <_obstack_memory_used@@Base+0x5c9c>  // b.none
  41d1ac:	ldr	w11, [x11, x12, lsl #2]
  41d1b0:	cmn	w11, #0x1
  41d1b4:	b.eq	41cd0c <_obstack_memory_used@@Base+0x57f0>  // b.none
  41d1b8:	ldrb	w11, [x21, #140]
  41d1bc:	mov	x12, x10
  41d1c0:	cbz	w11, 41d1cc <_obstack_memory_used@@Base+0x5cb0>
  41d1c4:	ldr	x12, [x21, #24]
  41d1c8:	ldr	x12, [x12, x10, lsl #3]
  41d1cc:	ldr	x13, [x21, #40]
  41d1d0:	ldr	x14, [x21]
  41d1d4:	add	x12, x13, x12
  41d1d8:	ldrsb	w22, [x14, x12]
  41d1dc:	cbz	w11, 41cd14 <_obstack_memory_used@@Base+0x57f8>
  41d1e0:	tbnz	w22, #31, 41cd0c <_obstack_memory_used@@Base+0x57f0>
  41d1e4:	b	41cd14 <_obstack_memory_used@@Base+0x57f8>
  41d1e8:	stp	x29, x30, [sp, #-96]!
  41d1ec:	stp	x28, x27, [sp, #16]
  41d1f0:	stp	x26, x25, [sp, #32]
  41d1f4:	stp	x24, x23, [sp, #48]
  41d1f8:	stp	x22, x21, [sp, #64]
  41d1fc:	stp	x20, x19, [sp, #80]
  41d200:	ldr	x27, [x1]
  41d204:	mov	x29, sp
  41d208:	mov	x19, x5
  41d20c:	mov	x26, x4
  41d210:	mov	x21, x3
  41d214:	mov	x22, x2
  41d218:	mov	x23, x1
  41d21c:	mov	x24, x0
  41d220:	bl	41d5ec <_obstack_memory_used@@Base+0x60d0>
  41d224:	mov	x20, x0
  41d228:	cbnz	x0, 41d234 <_obstack_memory_used@@Base+0x5d18>
  41d22c:	ldr	w8, [x19]
  41d230:	cbnz	w8, 41d4a8 <_obstack_memory_used@@Base+0x5f8c>
  41d234:	cbz	x26, 41d32c <_obstack_memory_used@@Base+0x5e10>
  41d238:	mov	x28, #0xffffffffffffffff    	// #-1
  41d23c:	ldrb	w8, [x22, #8]
  41d240:	orr	w9, w8, #0x8
  41d244:	cmp	w9, #0xa
  41d248:	b.ne	41d268 <_obstack_memory_used@@Base+0x5d4c>  // b.any
  41d24c:	b	41d4ac <_obstack_memory_used@@Base+0x5f90>
  41d250:	cmp	x20, #0x0
  41d254:	csel	x20, x25, x20, eq  // eq = none
  41d258:	ldrb	w8, [x22, #8]
  41d25c:	orr	w9, w8, #0x8
  41d260:	cmp	w9, #0xa
  41d264:	b.eq	41d4ac <_obstack_memory_used@@Base+0x5f90>  // b.none
  41d268:	cmp	w8, #0x9
  41d26c:	b.eq	41d4ac <_obstack_memory_used@@Base+0x5f90>  // b.none
  41d270:	mov	x0, x24
  41d274:	mov	x1, x23
  41d278:	mov	x2, x22
  41d27c:	mov	x3, x21
  41d280:	mov	x4, x26
  41d284:	mov	x5, x19
  41d288:	bl	41d5ec <_obstack_memory_used@@Base+0x60d0>
  41d28c:	cmp	x20, #0x0
  41d290:	mov	x25, x0
  41d294:	cset	w8, ne  // ne = any
  41d298:	cbnz	x0, 41d2a4 <_obstack_memory_used@@Base+0x5d88>
  41d29c:	ldr	w9, [x19]
  41d2a0:	cbnz	w9, 41d418 <_obstack_memory_used@@Base+0x5efc>
  41d2a4:	cbz	x20, 41d250 <_obstack_memory_used@@Base+0x5d34>
  41d2a8:	cbz	x25, 41d250 <_obstack_memory_used@@Base+0x5d34>
  41d2ac:	ldr	w8, [x27, #128]
  41d2b0:	cmp	w8, #0xf
  41d2b4:	b.eq	41d308 <_obstack_memory_used@@Base+0x5dec>  // b.none
  41d2b8:	ldr	x0, [x27, #112]
  41d2bc:	add	w9, w8, #0x1
  41d2c0:	sxtw	x8, w8
  41d2c4:	add	x8, x0, x8, lsl #6
  41d2c8:	str	w9, [x27, #128]
  41d2cc:	str	xzr, [x8, #8]!
  41d2d0:	mov	w9, #0x10                  	// #16
  41d2d4:	stp	x20, x25, [x8, #8]
  41d2d8:	stp	xzr, xzr, [x8, #32]
  41d2dc:	str	w9, [x8, #48]
  41d2e0:	str	xzr, [x8, #24]
  41d2e4:	str	x28, [x8, #56]
  41d2e8:	str	x8, [x20]
  41d2ec:	str	x8, [x25]
  41d2f0:	mov	x20, x8
  41d2f4:	ldrb	w8, [x22, #8]
  41d2f8:	orr	w9, w8, #0x8
  41d2fc:	cmp	w9, #0xa
  41d300:	b.ne	41d268 <_obstack_memory_used@@Base+0x5d4c>  // b.any
  41d304:	b	41d4ac <_obstack_memory_used@@Base+0x5f90>
  41d308:	mov	w0, #0x3c8                 	// #968
  41d30c:	bl	402730 <malloc@plt>
  41d310:	cbz	x0, 41d4cc <_obstack_memory_used@@Base+0x5fb0>
  41d314:	ldr	x9, [x27, #112]
  41d318:	mov	w8, wzr
  41d31c:	str	x9, [x0]
  41d320:	str	x0, [x27, #112]
  41d324:	str	wzr, [x27, #128]
  41d328:	b	41d2bc <_obstack_memory_used@@Base+0x5da0>
  41d32c:	mov	w26, #0x10                  	// #16
  41d330:	mov	x28, #0xffffffffffffffff    	// #-1
  41d334:	ldrb	w8, [x22, #8]
  41d338:	orr	w8, w8, #0x8
  41d33c:	cmp	w8, #0xa
  41d340:	b.ne	41d360 <_obstack_memory_used@@Base+0x5e44>  // b.any
  41d344:	b	41d4ac <_obstack_memory_used@@Base+0x5f90>
  41d348:	cmp	x20, #0x0
  41d34c:	csel	x20, x25, x20, eq  // eq = none
  41d350:	ldrb	w8, [x22, #8]
  41d354:	orr	w8, w8, #0x8
  41d358:	cmp	w8, #0xa
  41d35c:	b.eq	41d4ac <_obstack_memory_used@@Base+0x5f90>  // b.none
  41d360:	mov	x0, x24
  41d364:	mov	x1, x23
  41d368:	mov	x2, x22
  41d36c:	mov	x3, x21
  41d370:	mov	x4, xzr
  41d374:	mov	x5, x19
  41d378:	bl	41d5ec <_obstack_memory_used@@Base+0x60d0>
  41d37c:	cmp	x20, #0x0
  41d380:	mov	x25, x0
  41d384:	cset	w8, ne  // ne = any
  41d388:	cbnz	x0, 41d394 <_obstack_memory_used@@Base+0x5e78>
  41d38c:	ldr	w9, [x19]
  41d390:	cbnz	w9, 41d418 <_obstack_memory_used@@Base+0x5efc>
  41d394:	cbz	x20, 41d348 <_obstack_memory_used@@Base+0x5e2c>
  41d398:	cbz	x25, 41d348 <_obstack_memory_used@@Base+0x5e2c>
  41d39c:	ldr	w8, [x27, #128]
  41d3a0:	cmp	w8, #0xf
  41d3a4:	b.eq	41d3f4 <_obstack_memory_used@@Base+0x5ed8>  // b.none
  41d3a8:	ldr	x0, [x27, #112]
  41d3ac:	add	w9, w8, #0x1
  41d3b0:	sxtw	x8, w8
  41d3b4:	add	x8, x0, x8, lsl #6
  41d3b8:	str	w9, [x27, #128]
  41d3bc:	str	xzr, [x8, #8]!
  41d3c0:	stp	x20, x25, [x8, #8]
  41d3c4:	stp	xzr, xzr, [x8, #32]
  41d3c8:	str	w26, [x8, #48]
  41d3cc:	str	xzr, [x8, #24]
  41d3d0:	str	x28, [x8, #56]
  41d3d4:	str	x8, [x20]
  41d3d8:	str	x8, [x25]
  41d3dc:	mov	x20, x8
  41d3e0:	ldrb	w8, [x22, #8]
  41d3e4:	orr	w8, w8, #0x8
  41d3e8:	cmp	w8, #0xa
  41d3ec:	b.ne	41d360 <_obstack_memory_used@@Base+0x5e44>  // b.any
  41d3f0:	b	41d4ac <_obstack_memory_used@@Base+0x5f90>
  41d3f4:	mov	w0, #0x3c8                 	// #968
  41d3f8:	bl	402730 <malloc@plt>
  41d3fc:	cbz	x0, 41d4cc <_obstack_memory_used@@Base+0x5fb0>
  41d400:	ldr	x9, [x27, #112]
  41d404:	mov	w8, wzr
  41d408:	str	x9, [x0]
  41d40c:	str	x0, [x27, #112]
  41d410:	str	wzr, [x27, #128]
  41d414:	b	41d3ac <_obstack_memory_used@@Base+0x5e90>
  41d418:	cbz	w8, 41d4a8 <_obstack_memory_used@@Base+0x5f8c>
  41d41c:	mov	w21, #0xff                  	// #255
  41d420:	movk	w21, #0x4, lsl #16
  41d424:	mov	x22, x20
  41d428:	ldr	x20, [x20, #8]
  41d42c:	cbnz	x20, 41d424 <_obstack_memory_used@@Base+0x5f08>
  41d430:	ldr	x20, [x22, #16]
  41d434:	cbnz	x20, 41d424 <_obstack_memory_used@@Base+0x5f08>
  41d438:	ldr	w8, [x22, #48]
  41d43c:	and	w8, w8, w21
  41d440:	cmp	w8, #0x3
  41d444:	b.eq	41d478 <_obstack_memory_used@@Base+0x5f5c>  // b.none
  41d448:	cmp	w8, #0x6
  41d44c:	b.ne	41d484 <_obstack_memory_used@@Base+0x5f68>  // b.any
  41d450:	ldr	x19, [x22, #40]
  41d454:	ldr	x0, [x19]
  41d458:	bl	402a10 <free@plt>
  41d45c:	ldr	x0, [x19, #8]
  41d460:	bl	402a10 <free@plt>
  41d464:	ldr	x0, [x19, #16]
  41d468:	bl	402a10 <free@plt>
  41d46c:	ldr	x0, [x19, #24]
  41d470:	bl	402a10 <free@plt>
  41d474:	b	41d47c <_obstack_memory_used@@Base+0x5f60>
  41d478:	ldr	x19, [x22, #40]
  41d47c:	mov	x0, x19
  41d480:	bl	402a10 <free@plt>
  41d484:	ldr	x8, [x22]
  41d488:	cbz	x8, 41d4a8 <_obstack_memory_used@@Base+0x5f8c>
  41d48c:	ldr	x20, [x8, #16]
  41d490:	cmp	x20, x22
  41d494:	mov	x22, x8
  41d498:	b.eq	41d438 <_obstack_memory_used@@Base+0x5f1c>  // b.none
  41d49c:	mov	x22, x8
  41d4a0:	cbz	x20, 41d438 <_obstack_memory_used@@Base+0x5f1c>
  41d4a4:	b	41d424 <_obstack_memory_used@@Base+0x5f08>
  41d4a8:	mov	x20, xzr
  41d4ac:	mov	x0, x20
  41d4b0:	ldp	x20, x19, [sp, #80]
  41d4b4:	ldp	x22, x21, [sp, #64]
  41d4b8:	ldp	x24, x23, [sp, #48]
  41d4bc:	ldp	x26, x25, [sp, #32]
  41d4c0:	ldp	x28, x27, [sp, #16]
  41d4c4:	ldp	x29, x30, [sp], #96
  41d4c8:	ret
  41d4cc:	mov	w22, #0xff                  	// #255
  41d4d0:	movk	w22, #0x4, lsl #16
  41d4d4:	mov	x23, x25
  41d4d8:	ldr	x25, [x25, #8]
  41d4dc:	cbnz	x25, 41d4d4 <_obstack_memory_used@@Base+0x5fb8>
  41d4e0:	ldr	x25, [x23, #16]
  41d4e4:	cbnz	x25, 41d4d4 <_obstack_memory_used@@Base+0x5fb8>
  41d4e8:	ldr	w8, [x23, #48]
  41d4ec:	and	w8, w8, w22
  41d4f0:	cmp	w8, #0x3
  41d4f4:	b.eq	41d528 <_obstack_memory_used@@Base+0x600c>  // b.none
  41d4f8:	cmp	w8, #0x6
  41d4fc:	b.ne	41d534 <_obstack_memory_used@@Base+0x6018>  // b.any
  41d500:	ldr	x21, [x23, #40]
  41d504:	ldr	x0, [x21]
  41d508:	bl	402a10 <free@plt>
  41d50c:	ldr	x0, [x21, #8]
  41d510:	bl	402a10 <free@plt>
  41d514:	ldr	x0, [x21, #16]
  41d518:	bl	402a10 <free@plt>
  41d51c:	ldr	x0, [x21, #24]
  41d520:	bl	402a10 <free@plt>
  41d524:	b	41d52c <_obstack_memory_used@@Base+0x6010>
  41d528:	ldr	x21, [x23, #40]
  41d52c:	mov	x0, x21
  41d530:	bl	402a10 <free@plt>
  41d534:	ldr	x8, [x23]
  41d538:	cbz	x8, 41d558 <_obstack_memory_used@@Base+0x603c>
  41d53c:	ldr	x25, [x8, #16]
  41d540:	cmp	x25, x23
  41d544:	mov	x23, x8
  41d548:	b.eq	41d4e8 <_obstack_memory_used@@Base+0x5fcc>  // b.none
  41d54c:	mov	x23, x8
  41d550:	cbz	x25, 41d4e8 <_obstack_memory_used@@Base+0x5fcc>
  41d554:	b	41d4d4 <_obstack_memory_used@@Base+0x5fb8>
  41d558:	mov	x21, x20
  41d55c:	ldr	x20, [x20, #8]
  41d560:	cbnz	x20, 41d558 <_obstack_memory_used@@Base+0x603c>
  41d564:	ldr	x20, [x21, #16]
  41d568:	cbnz	x20, 41d558 <_obstack_memory_used@@Base+0x603c>
  41d56c:	ldr	w8, [x21, #48]
  41d570:	and	w8, w8, w22
  41d574:	cmp	w8, #0x3
  41d578:	b.eq	41d5ac <_obstack_memory_used@@Base+0x6090>  // b.none
  41d57c:	cmp	w8, #0x6
  41d580:	b.ne	41d5b8 <_obstack_memory_used@@Base+0x609c>  // b.any
  41d584:	ldr	x20, [x21, #40]
  41d588:	ldr	x0, [x20]
  41d58c:	bl	402a10 <free@plt>
  41d590:	ldr	x0, [x20, #8]
  41d594:	bl	402a10 <free@plt>
  41d598:	ldr	x0, [x20, #16]
  41d59c:	bl	402a10 <free@plt>
  41d5a0:	ldr	x0, [x20, #24]
  41d5a4:	bl	402a10 <free@plt>
  41d5a8:	b	41d5b0 <_obstack_memory_used@@Base+0x6094>
  41d5ac:	ldr	x20, [x21, #40]
  41d5b0:	mov	x0, x20
  41d5b4:	bl	402a10 <free@plt>
  41d5b8:	ldr	x8, [x21]
  41d5bc:	cbz	x8, 41d5dc <_obstack_memory_used@@Base+0x60c0>
  41d5c0:	ldr	x20, [x8, #16]
  41d5c4:	cmp	x20, x21
  41d5c8:	mov	x21, x8
  41d5cc:	b.eq	41d56c <_obstack_memory_used@@Base+0x6050>  // b.none
  41d5d0:	mov	x21, x8
  41d5d4:	cbz	x20, 41d56c <_obstack_memory_used@@Base+0x6050>
  41d5d8:	b	41d558 <_obstack_memory_used@@Base+0x603c>
  41d5dc:	mov	x20, xzr
  41d5e0:	mov	w8, #0xc                   	// #12
  41d5e4:	str	w8, [x19]
  41d5e8:	b	41d4ac <_obstack_memory_used@@Base+0x5f90>
  41d5ec:	sub	sp, sp, #0x120
  41d5f0:	stp	x29, x30, [sp, #192]
  41d5f4:	stp	x28, x27, [sp, #208]
  41d5f8:	stp	x26, x25, [sp, #224]
  41d5fc:	stp	x24, x23, [sp, #240]
  41d600:	stp	x22, x21, [sp, #256]
  41d604:	stp	x20, x19, [sp, #272]
  41d608:	stp	x0, x3, [sp, #32]
  41d60c:	ldr	w8, [x2, #8]
  41d610:	ldr	x23, [x1]
  41d614:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41d618:	add	x11, x11, #0x70a
  41d61c:	and	w9, w8, #0xff
  41d620:	sub	w10, w9, #0x1
  41d624:	adr	x12, 41d650 <_obstack_memory_used@@Base+0x6134>
  41d628:	ldrh	w13, [x11, x10, lsl #1]
  41d62c:	add	x12, x12, x13, lsl #2
  41d630:	add	x29, sp, #0xc0
  41d634:	mov	x28, x5
  41d638:	mov	x25, x4
  41d63c:	mov	x14, x2
  41d640:	mov	x26, x1
  41d644:	mov	x24, xzr
  41d648:	str	x2, [sp, #56]
  41d64c:	br	x12
  41d650:	ldr	x10, [sp, #40]
  41d654:	tbnz	w10, #5, 41dbf4 <_obstack_memory_used@@Base+0x66d8>
  41d658:	tbnz	w10, #4, 41dc1c <_obstack_memory_used@@Base+0x6700>
  41d65c:	ldr	x10, [sp, #40]
  41d660:	tbnz	w10, #17, 41d6ec <_obstack_memory_used@@Base+0x61d0>
  41d664:	cmp	w9, #0x9
  41d668:	b.ne	41d6ec <_obstack_memory_used@@Base+0x61d0>  // b.any
  41d66c:	mov	w8, #0x10                  	// #16
  41d670:	mov	x24, xzr
  41d674:	str	w8, [x28]
  41d678:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41d67c:	ldr	x8, [sp, #32]
  41d680:	cmp	w9, #0x21
  41d684:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41d688:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41d68c:	ldr	x1, [x8, #120]
  41d690:	cset	w4, eq  // eq = none
  41d694:	add	x2, x2, #0x5d
  41d698:	add	x3, x3, #0x9b8
  41d69c:	b	41d6c0 <_obstack_memory_used@@Base+0x61a4>
  41d6a0:	ldr	x8, [sp, #32]
  41d6a4:	cmp	w9, #0x23
  41d6a8:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41d6ac:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41d6b0:	ldr	x1, [x8, #120]
  41d6b4:	cset	w4, eq  // eq = none
  41d6b8:	add	x2, x2, #0x51
  41d6bc:	add	x3, x3, #0x3e3
  41d6c0:	mov	x0, x23
  41d6c4:	mov	x5, x28
  41d6c8:	bl	41f708 <_obstack_memory_used@@Base+0x81ec>
  41d6cc:	mov	x24, x0
  41d6d0:	cbnz	x0, 41d6e4 <_obstack_memory_used@@Base+0x61c8>
  41d6d4:	ldr	w8, [x28]
  41d6d8:	ldr	x14, [sp, #56]
  41d6dc:	cbz	w8, 41e31c <_obstack_memory_used@@Base+0x6e00>
  41d6e0:	b	41dca0 <_obstack_memory_used@@Base+0x6784>
  41d6e4:	ldr	x14, [sp, #56]
  41d6e8:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41d6ec:	and	w8, w8, #0xffffff00
  41d6f0:	orr	w8, w8, #0x1
  41d6f4:	str	w8, [x14, #8]
  41d6f8:	ldr	w8, [x23, #128]
  41d6fc:	cmp	w8, #0xf
  41d700:	b.eq	41f2cc <_obstack_memory_used@@Base+0x7db0>  // b.none
  41d704:	ldr	x0, [x23, #112]
  41d708:	add	w9, w8, #0x1
  41d70c:	sxtw	x8, w8
  41d710:	add	x24, x0, x8, lsl #6
  41d714:	str	w9, [x23, #128]
  41d718:	str	xzr, [x24, #8]!
  41d71c:	stp	xzr, xzr, [x24, #8]
  41d720:	ldr	q0, [x14]
  41d724:	mov	x9, #0xffffffffffffffff    	// #-1
  41d728:	stp	xzr, xzr, [x24, #24]
  41d72c:	str	x9, [x24, #56]
  41d730:	stur	q0, [x24, #40]
  41d734:	ldr	w8, [x24, #48]
  41d738:	and	w8, w8, #0xfff3ffff
  41d73c:	str	w8, [x24, #48]
  41d740:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41d744:	ldr	w8, [x14]
  41d748:	mov	w9, #0x30f                 	// #783
  41d74c:	tst	w8, w9
  41d750:	b.eq	41d780 <_obstack_memory_used@@Base+0x6264>  // b.none
  41d754:	ldrb	w8, [x23, #176]
  41d758:	tbnz	w8, #4, 41d77c <_obstack_memory_used@@Base+0x6260>
  41d75c:	orr	w9, w8, #0x10
  41d760:	strb	w9, [x23, #176]
  41d764:	tbnz	w8, #3, 41f514 <_obstack_memory_used@@Base+0x7ff8>
  41d768:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41d76c:	ldr	q0, [x9, #1552]
  41d770:	stur	q0, [x23, #184]
  41d774:	tbz	w8, #2, 41f520 <_obstack_memory_used@@Base+0x8004>
  41d778:	stp	xzr, xzr, [x23, #200]
  41d77c:	ldr	w8, [x14]
  41d780:	cmp	w8, #0x200
  41d784:	b.eq	41f000 <_obstack_memory_used@@Base+0x7ae4>  // b.none
  41d788:	ldr	x21, [sp, #40]
  41d78c:	cmp	w8, #0x100
  41d790:	b.ne	41f0fc <_obstack_memory_used@@Base+0x7be0>  // b.any
  41d794:	mov	w8, #0x6                   	// #6
  41d798:	str	w8, [x14]
  41d79c:	ldr	w8, [x23, #128]
  41d7a0:	cmp	w8, #0xf
  41d7a4:	b.eq	41f490 <_obstack_memory_used@@Base+0x7f74>  // b.none
  41d7a8:	ldr	x0, [x23, #112]
  41d7ac:	add	w9, w8, #0x1
  41d7b0:	sxtw	x8, w8
  41d7b4:	add	x19, x0, x8, lsl #6
  41d7b8:	str	w9, [x23, #128]
  41d7bc:	str	xzr, [x19, #8]!
  41d7c0:	stp	xzr, xzr, [x19, #8]
  41d7c4:	ldr	q0, [x14]
  41d7c8:	mov	x8, #0xffffffffffffffff    	// #-1
  41d7cc:	str	x8, [x19, #56]
  41d7d0:	stp	xzr, xzr, [x19, #24]
  41d7d4:	stur	q0, [x19, #40]
  41d7d8:	ldr	w9, [x19, #48]
  41d7dc:	and	w8, w9, #0xfff3ffff
  41d7e0:	str	w8, [x19, #48]
  41d7e4:	mov	w8, #0x9                   	// #9
  41d7e8:	str	w8, [x14]
  41d7ec:	ldr	w8, [x23, #128]
  41d7f0:	cmp	w8, #0xf
  41d7f4:	b.ne	41f068 <_obstack_memory_used@@Base+0x7b4c>  // b.any
  41d7f8:	mov	w0, #0x3c8                 	// #968
  41d7fc:	bl	402730 <malloc@plt>
  41d800:	cbz	x0, 41f598 <_obstack_memory_used@@Base+0x807c>
  41d804:	ldr	x9, [x23, #112]
  41d808:	ldr	x21, [sp, #40]
  41d80c:	ldr	x14, [sp, #56]
  41d810:	mov	w8, wzr
  41d814:	str	x9, [x0]
  41d818:	str	x0, [x23, #112]
  41d81c:	str	wzr, [x23, #128]
  41d820:	b	41f06c <_obstack_memory_used@@Base+0x7b50>
  41d824:	mov	w0, #0x20                  	// #32
  41d828:	mov	w1, #0x1                   	// #1
  41d82c:	stur	xzr, [x29, #-16]
  41d830:	bl	402840 <calloc@plt>
  41d834:	mov	x25, x0
  41d838:	mov	w0, #0x50                  	// #80
  41d83c:	mov	w1, #0x1                   	// #1
  41d840:	bl	402840 <calloc@plt>
  41d844:	mov	x24, x0
  41d848:	cbz	x25, 41f2fc <_obstack_memory_used@@Base+0x7de0>
  41d84c:	cbz	x24, 41f2fc <_obstack_memory_used@@Base+0x7de0>
  41d850:	ldr	x21, [sp, #56]
  41d854:	ldp	x19, x20, [sp, #32]
  41d858:	mov	x0, x21
  41d85c:	mov	x1, x19
  41d860:	mov	x2, x20
  41d864:	bl	41fa60 <_obstack_memory_used@@Base+0x8544>
  41d868:	ldr	w8, [x21, #8]
  41d86c:	mov	x2, x21
  41d870:	mov	w3, w0
  41d874:	and	w9, w8, #0xff
  41d878:	cmp	w9, #0x19
  41d87c:	b.eq	41dca8 <_obstack_memory_used@@Base+0x678c>  // b.none
  41d880:	cmp	w9, #0x2
  41d884:	b.eq	41f2f4 <_obstack_memory_used@@Base+0x7dd8>  // b.none
  41d888:	str	wzr, [sp, #48]
  41d88c:	b	41dd00 <_obstack_memory_used@@Base+0x67e4>
  41d890:	ldr	w8, [x23, #128]
  41d894:	cmp	w8, #0xf
  41d898:	b.eq	41f310 <_obstack_memory_used@@Base+0x7df4>  // b.none
  41d89c:	ldr	x0, [x23, #112]
  41d8a0:	ldr	x10, [sp, #32]
  41d8a4:	add	w9, w8, #0x1
  41d8a8:	sxtw	x8, w8
  41d8ac:	add	x19, x0, x8, lsl #6
  41d8b0:	str	w9, [x23, #128]
  41d8b4:	str	xzr, [x19, #8]!
  41d8b8:	stp	xzr, xzr, [x19, #8]
  41d8bc:	ldr	q0, [x14]
  41d8c0:	mov	x9, #0xffffffffffffffff    	// #-1
  41d8c4:	stp	xzr, xzr, [x19, #24]
  41d8c8:	str	x9, [x19, #56]
  41d8cc:	stur	q0, [x19, #40]
  41d8d0:	ldr	w8, [x19, #48]
  41d8d4:	and	w8, w8, #0xfff3ffff
  41d8d8:	str	w8, [x19, #48]
  41d8dc:	ldr	w8, [x23, #180]
  41d8e0:	cmp	w8, #0x2
  41d8e4:	b.lt	41dc14 <_obstack_memory_used@@Base+0x66f8>  // b.tstop
  41d8e8:	ldr	x9, [x10, #104]
  41d8ec:	ldr	x8, [x10, #72]
  41d8f0:	cmp	x9, x8
  41d8f4:	b.le	41dc14 <_obstack_memory_used@@Base+0x66f8>
  41d8f8:	mov	w20, #0x10                  	// #16
  41d8fc:	mov	x21, #0xffffffffffffffff    	// #-1
  41d900:	ldr	x22, [sp, #32]
  41d904:	ldr	x9, [x22, #48]
  41d908:	cmp	x8, x9
  41d90c:	b.eq	41dc14 <_obstack_memory_used@@Base+0x66f8>  // b.none
  41d910:	ldr	x9, [x22, #16]
  41d914:	ldr	w8, [x9, x8, lsl #2]
  41d918:	cmn	w8, #0x1
  41d91c:	b.ne	41dc14 <_obstack_memory_used@@Base+0x66f8>  // b.any
  41d920:	ldr	x2, [sp, #40]
  41d924:	mov	x0, x14
  41d928:	mov	x1, x22
  41d92c:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41d930:	ldr	x8, [x22, #72]
  41d934:	add	x8, x8, w0, sxtw
  41d938:	str	x8, [x22, #72]
  41d93c:	ldr	w8, [x23, #128]
  41d940:	cmp	w8, #0xf
  41d944:	b.eq	41d9e4 <_obstack_memory_used@@Base+0x64c8>  // b.none
  41d948:	ldr	x0, [x23, #112]
  41d94c:	add	w9, w8, #0x1
  41d950:	sxtw	x8, w8
  41d954:	add	x22, x0, x8, lsl #6
  41d958:	str	w9, [x23, #128]
  41d95c:	str	xzr, [x22, #8]!
  41d960:	stp	xzr, xzr, [x22, #8]
  41d964:	ldr	x14, [sp, #56]
  41d968:	ldr	q0, [x14]
  41d96c:	stp	xzr, xzr, [x22, #24]
  41d970:	str	x21, [x22, #56]
  41d974:	stur	q0, [x22, #40]
  41d978:	ldr	w8, [x22, #48]
  41d97c:	and	w8, w8, #0xfff3ffff
  41d980:	str	w8, [x22, #48]
  41d984:	ldr	w8, [x23, #128]
  41d988:	cmp	w8, #0xf
  41d98c:	b.eq	41da1c <_obstack_memory_used@@Base+0x6500>  // b.none
  41d990:	ldr	x0, [x23, #112]
  41d994:	add	w9, w8, #0x1
  41d998:	sxtw	x8, w8
  41d99c:	add	x24, x0, x8, lsl #6
  41d9a0:	str	w9, [x23, #128]
  41d9a4:	str	xzr, [x24, #8]!
  41d9a8:	stp	x19, x22, [x24, #8]
  41d9ac:	stp	xzr, xzr, [x24, #32]
  41d9b0:	str	w20, [x24, #48]
  41d9b4:	str	xzr, [x24, #24]
  41d9b8:	str	x21, [x24, #56]
  41d9bc:	str	x24, [x19]
  41d9c0:	cbz	x22, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41d9c4:	ldr	x8, [sp, #32]
  41d9c8:	str	x24, [x22]
  41d9cc:	mov	x19, x24
  41d9d0:	ldr	x9, [x8, #104]
  41d9d4:	ldr	x8, [x8, #72]
  41d9d8:	cmp	x9, x8
  41d9dc:	b.gt	41d900 <_obstack_memory_used@@Base+0x63e4>
  41d9e0:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41d9e4:	mov	w0, #0x3c8                 	// #968
  41d9e8:	bl	402730 <malloc@plt>
  41d9ec:	cbz	x0, 41da08 <_obstack_memory_used@@Base+0x64ec>
  41d9f0:	ldr	x9, [x23, #112]
  41d9f4:	mov	w8, wzr
  41d9f8:	str	x9, [x0]
  41d9fc:	str	x0, [x23, #112]
  41da00:	str	wzr, [x23, #128]
  41da04:	b	41d94c <_obstack_memory_used@@Base+0x6430>
  41da08:	ldr	x14, [sp, #56]
  41da0c:	mov	x22, xzr
  41da10:	ldr	w8, [x23, #128]
  41da14:	cmp	w8, #0xf
  41da18:	b.ne	41d990 <_obstack_memory_used@@Base+0x6474>  // b.any
  41da1c:	mov	w0, #0x3c8                 	// #968
  41da20:	bl	402730 <malloc@plt>
  41da24:	ldr	x14, [sp, #56]
  41da28:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41da2c:	ldr	x9, [x23, #112]
  41da30:	mov	w8, wzr
  41da34:	str	x9, [x0]
  41da38:	str	x0, [x23, #112]
  41da3c:	str	wzr, [x23, #128]
  41da40:	b	41d994 <_obstack_memory_used@@Base+0x6478>
  41da44:	ldr	w8, [x14]
  41da48:	ldr	x10, [x23, #168]
  41da4c:	mov	w9, #0x1                   	// #1
  41da50:	lsl	w8, w9, w8
  41da54:	sxtw	x9, w8
  41da58:	tst	x10, x9
  41da5c:	b.eq	41f33c <_obstack_memory_used@@Base+0x7e20>  // b.none
  41da60:	ldr	x10, [x23, #160]
  41da64:	ldr	w8, [x23, #128]
  41da68:	orr	x9, x10, x9
  41da6c:	cmp	w8, #0xf
  41da70:	str	x9, [x23, #160]
  41da74:	b.eq	41f374 <_obstack_memory_used@@Base+0x7e58>  // b.none
  41da78:	ldr	x0, [x23, #112]
  41da7c:	add	w9, w8, #0x1
  41da80:	sxtw	x8, w8
  41da84:	add	x24, x0, x8, lsl #6
  41da88:	str	w9, [x23, #128]
  41da8c:	str	xzr, [x24, #8]!
  41da90:	stp	xzr, xzr, [x24, #8]
  41da94:	ldr	q0, [x14]
  41da98:	mov	x8, #0xffffffffffffffff    	// #-1
  41da9c:	str	x8, [x24, #56]
  41daa0:	stp	xzr, xzr, [x24, #24]
  41daa4:	stur	q0, [x24, #40]
  41daa8:	ldr	w9, [x24, #48]
  41daac:	and	w8, w9, #0xfff3ffff
  41dab0:	str	w8, [x24, #48]
  41dab4:	ldr	x8, [x23, #152]
  41dab8:	ldrb	w9, [x23, #176]
  41dabc:	add	x8, x8, #0x1
  41dac0:	orr	w9, w9, #0x2
  41dac4:	str	x8, [x23, #152]
  41dac8:	strb	w9, [x23, #176]
  41dacc:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41dad0:	ldr	w8, [x23, #128]
  41dad4:	cmp	w8, #0xf
  41dad8:	b.eq	41f34c <_obstack_memory_used@@Base+0x7e30>  // b.none
  41dadc:	ldr	x0, [x23, #112]
  41dae0:	add	w9, w8, #0x1
  41dae4:	sxtw	x8, w8
  41dae8:	add	x10, x0, x8, lsl #6
  41daec:	str	w9, [x23, #128]
  41daf0:	str	xzr, [x10, #8]!
  41daf4:	stp	xzr, xzr, [x10, #8]
  41daf8:	ldr	q0, [x14]
  41dafc:	mov	x9, #0xffffffffffffffff    	// #-1
  41db00:	stp	xzr, xzr, [x10, #24]
  41db04:	str	x9, [x10, #56]
  41db08:	stur	q0, [x10, #40]
  41db0c:	ldr	w8, [x10, #48]
  41db10:	mov	x24, x10
  41db14:	and	w8, w8, #0xfff3ffff
  41db18:	str	w8, [x10, #48]
  41db1c:	ldr	w8, [x23, #180]
  41db20:	cmp	w8, #0x2
  41db24:	b.lt	41e31c <_obstack_memory_used@@Base+0x6e00>  // b.tstop
  41db28:	ldrb	w8, [x23, #176]
  41db2c:	orr	w8, w8, #0x2
  41db30:	strb	w8, [x23, #176]
  41db34:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41db38:	ldr	x19, [x26, #48]
  41db3c:	mov	x0, x14
  41db40:	add	x8, x19, #0x1
  41db44:	str	x8, [x26, #48]
  41db48:	ldp	x20, x21, [sp, #32]
  41db4c:	orr	x2, x21, #0x800000
  41db50:	mov	x1, x20
  41db54:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41db58:	ldr	x8, [x20, #72]
  41db5c:	ldr	x14, [sp, #56]
  41db60:	add	x8, x8, w0, sxtw
  41db64:	str	x8, [x20, #72]
  41db68:	ldrb	w8, [x14, #8]
  41db6c:	cmp	w8, #0x9
  41db70:	b.ne	41dc78 <_obstack_memory_used@@Base+0x675c>  // b.any
  41db74:	mov	x25, xzr
  41db78:	cmp	x19, #0x8
  41db7c:	b.hi	41db98 <_obstack_memory_used@@Base+0x667c>  // b.pmore
  41db80:	ldr	x8, [x23, #168]
  41db84:	mov	w9, #0x1                   	// #1
  41db88:	lsl	w9, w9, w19
  41db8c:	sxtw	x9, w9
  41db90:	orr	x8, x8, x9
  41db94:	str	x8, [x23, #168]
  41db98:	ldr	w8, [x23, #128]
  41db9c:	cmp	w8, #0xf
  41dba0:	b.eq	41f468 <_obstack_memory_used@@Base+0x7f4c>  // b.none
  41dba4:	ldr	x0, [x23, #112]
  41dba8:	add	w9, w8, #0x1
  41dbac:	sxtw	x8, w8
  41dbb0:	add	x8, x0, x8, lsl #6
  41dbb4:	mov	x24, x8
  41dbb8:	mov	w10, #0x11                  	// #17
  41dbbc:	mov	x11, #0xffffffffffffffff    	// #-1
  41dbc0:	str	w9, [x23, #128]
  41dbc4:	str	xzr, [x24, #8]!
  41dbc8:	stp	x25, xzr, [x24, #8]
  41dbcc:	stp	xzr, xzr, [x24, #32]
  41dbd0:	str	w10, [x24, #48]
  41dbd4:	str	xzr, [x24, #24]
  41dbd8:	str	x11, [x24, #56]
  41dbdc:	cbz	x25, 41dbe4 <_obstack_memory_used@@Base+0x66c8>
  41dbe0:	str	x24, [x25]
  41dbe4:	str	x19, [x8, #48]
  41dbe8:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41dbec:	ldr	x10, [sp, #40]
  41dbf0:	tbz	w10, #24, 41d650 <_obstack_memory_used@@Base+0x6134>
  41dbf4:	mov	w8, #0xd                   	// #13
  41dbf8:	mov	x24, xzr
  41dbfc:	str	w8, [x28]
  41dc00:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41dc04:	mov	w8, #0x5                   	// #5
  41dc08:	mov	x24, xzr
  41dc0c:	str	w8, [x28]
  41dc10:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41dc14:	mov	x24, x19
  41dc18:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41dc1c:	ldp	x19, x20, [sp, #32]
  41dc20:	mov	x0, x14
  41dc24:	mov	x21, x14
  41dc28:	mov	x1, x19
  41dc2c:	mov	x2, x20
  41dc30:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41dc34:	ldr	x8, [x19, #72]
  41dc38:	mov	x1, x26
  41dc3c:	mov	x2, x21
  41dc40:	mov	x3, x20
  41dc44:	add	x8, x8, w0, sxtw
  41dc48:	str	x8, [x19, #72]
  41dc4c:	mov	x0, x19
  41dc50:	mov	x4, x25
  41dc54:	mov	x5, x28
  41dc58:	ldp	x20, x19, [sp, #272]
  41dc5c:	ldp	x22, x21, [sp, #256]
  41dc60:	ldp	x24, x23, [sp, #240]
  41dc64:	ldp	x26, x25, [sp, #224]
  41dc68:	ldp	x28, x27, [sp, #208]
  41dc6c:	ldp	x29, x30, [sp, #192]
  41dc70:	add	sp, sp, #0x120
  41dc74:	b	41d5ec <_obstack_memory_used@@Base+0x60d0>
  41dc78:	add	x4, x25, #0x1
  41dc7c:	mov	x0, x20
  41dc80:	mov	x1, x26
  41dc84:	mov	x2, x14
  41dc88:	mov	x3, x21
  41dc8c:	mov	x5, x28
  41dc90:	mov	x20, x14
  41dc94:	bl	41c910 <_obstack_memory_used@@Base+0x53f4>
  41dc98:	ldr	w8, [x28]
  41dc9c:	cbz	w8, 41f168 <_obstack_memory_used@@Base+0x7c4c>
  41dca0:	mov	x24, xzr
  41dca4:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41dca8:	ldrb	w8, [x24, #32]
  41dcac:	orr	w8, w8, #0x1
  41dcb0:	strb	w8, [x24, #32]
  41dcb4:	tbz	w20, #8, 41dcc4 <_obstack_memory_used@@Base+0x67a8>
  41dcb8:	ldr	x8, [x25]
  41dcbc:	orr	x8, x8, #0x400
  41dcc0:	str	x8, [x25]
  41dcc4:	ldr	x8, [x19, #72]
  41dcc8:	mov	x0, x2
  41dccc:	mov	x1, x19
  41dcd0:	mov	x2, x20
  41dcd4:	add	x8, x8, w3, sxtw
  41dcd8:	str	x8, [x19, #72]
  41dcdc:	bl	41fa60 <_obstack_memory_used@@Base+0x8544>
  41dce0:	ldr	x2, [sp, #56]
  41dce4:	ldr	w8, [x2, #8]
  41dce8:	and	w9, w8, #0xff
  41dcec:	cmp	w9, #0x2
  41dcf0:	b.eq	41f2f4 <_obstack_memory_used@@Base+0x7dd8>  // b.none
  41dcf4:	mov	w3, w0
  41dcf8:	mov	w9, #0x1                   	// #1
  41dcfc:	str	w9, [sp, #48]
  41dd00:	and	w9, w8, #0xff
  41dd04:	cmp	w9, #0x15
  41dd08:	b.ne	41dd18 <_obstack_memory_used@@Base+0x67fc>  // b.any
  41dd0c:	and	w8, w8, #0xffffff00
  41dd10:	orr	w8, w8, #0x1
  41dd14:	str	w8, [x2, #8]
  41dd18:	ldr	x4, [sp, #40]
  41dd1c:	sub	x8, x29, #0x50
  41dd20:	mov	w27, #0x3                   	// #3
  41dd24:	sub	x0, x29, #0x20
  41dd28:	mov	w5, #0x1                   	// #1
  41dd2c:	mov	x1, x19
  41dd30:	stur	x8, [x29, #-24]
  41dd34:	stur	w27, [x29, #-32]
  41dd38:	mov	w21, #0x1                   	// #1
  41dd3c:	bl	41fbd8 <_obstack_memory_used@@Base+0x86bc>
  41dd40:	cbnz	w0, 41f2c4 <_obstack_memory_used@@Base+0x7da8>
  41dd44:	ldr	x20, [sp, #40]
  41dd48:	ldr	x22, [sp, #56]
  41dd4c:	stp	xzr, xzr, [sp, #8]
  41dd50:	mov	x0, x22
  41dd54:	mov	x1, x19
  41dd58:	mov	x2, x20
  41dd5c:	bl	41fa60 <_obstack_memory_used@@Base+0x8544>
  41dd60:	ldur	w22, [x29, #-32]
  41dd64:	mov	w26, w0
  41dd68:	cmp	w22, #0x2
  41dd6c:	b.eq	41def8 <_obstack_memory_used@@Base+0x69dc>  // b.none
  41dd70:	cmp	w22, #0x4
  41dd74:	b.ne	41dda4 <_obstack_memory_used@@Base+0x6888>  // b.any
  41dd78:	ldr	x0, [x19, #120]
  41dd7c:	ldur	x4, [x29, #-24]
  41dd80:	ldr	x5, [sp, #40]
  41dd84:	sub	x3, x29, #0x10
  41dd88:	mov	x1, x25
  41dd8c:	mov	x2, x24
  41dd90:	bl	41feb8 <_obstack_memory_used@@Base+0x899c>
  41dd94:	ldr	x14, [sp, #56]
  41dd98:	str	w0, [x28]
  41dd9c:	cbz	w0, 41df34 <_obstack_memory_used@@Base+0x6a18>
  41dda0:	b	41f424 <_obstack_memory_used@@Base+0x7f08>
  41dda4:	ldr	x8, [sp, #56]
  41dda8:	ldrb	w8, [x8, #8]
  41ddac:	cmp	w8, #0x16
  41ddb0:	b.eq	41ddd8 <_obstack_memory_used@@Base+0x68bc>  // b.none
  41ddb4:	cmp	w8, #0x2
  41ddb8:	b.eq	41f2b8 <_obstack_memory_used@@Base+0x7d9c>  // b.none
  41ddbc:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ddc0:	mov	w8, w22
  41ddc4:	add	x11, x11, #0x752
  41ddc8:	adr	x9, 41def8 <_obstack_memory_used@@Base+0x69dc>
  41ddcc:	ldrb	w10, [x11, x8]
  41ddd0:	add	x9, x9, x10, lsl #2
  41ddd4:	br	x9
  41ddd8:	ldr	x8, [x19, #72]
  41dddc:	ldr	x2, [sp, #40]
  41dde0:	add	x0, sp, #0x40
  41dde4:	mov	x1, x19
  41dde8:	add	x8, x8, w26, sxtw
  41ddec:	str	x8, [x19, #72]
  41ddf0:	bl	41fa60 <_obstack_memory_used@@Base+0x8544>
  41ddf4:	ldrb	w8, [sp, #72]
  41ddf8:	cmp	w8, #0x15
  41ddfc:	b.eq	41dec4 <_obstack_memory_used@@Base+0x69a8>  // b.none
  41de00:	cmp	w8, #0x2
  41de04:	str	x28, [sp, #24]
  41de08:	b.eq	41f2bc <_obstack_memory_used@@Base+0x7da0>  // b.none
  41de0c:	ldr	x20, [sp, #40]
  41de10:	mov	w3, w0
  41de14:	add	x8, sp, #0x50
  41de18:	sub	x0, x29, #0x30
  41de1c:	add	x2, sp, #0x40
  41de20:	mov	w5, #0x1                   	// #1
  41de24:	mov	x1, x19
  41de28:	mov	x4, x20
  41de2c:	stur	x8, [x29, #-40]
  41de30:	stur	w27, [x29, #-48]
  41de34:	bl	41fbd8 <_obstack_memory_used@@Base+0x86bc>
  41de38:	cbnz	w0, 41f41c <_obstack_memory_used@@Base+0x7f00>
  41de3c:	ldr	x0, [sp, #56]
  41de40:	mov	x1, x19
  41de44:	mov	x2, x20
  41de48:	bl	41fa60 <_obstack_memory_used@@Base+0x8544>
  41de4c:	ldr	w8, [x23, #180]
  41de50:	ldur	w19, [x29, #-48]
  41de54:	mov	w26, w0
  41de58:	mov	w0, #0xb                   	// #11
  41de5c:	cmp	w8, #0x1
  41de60:	csel	x20, x24, xzr, gt
  41de64:	cmp	w19, #0x2
  41de68:	b.eq	41f41c <_obstack_memory_used@@Base+0x7f00>  // b.none
  41de6c:	ldr	x14, [sp, #56]
  41de70:	cmp	w19, #0x4
  41de74:	b.eq	41f41c <_obstack_memory_used@@Base+0x7f00>  // b.none
  41de78:	cmp	w22, #0x3
  41de7c:	b.ne	41de94 <_obstack_memory_used@@Base+0x6978>  // b.any
  41de80:	ldur	x0, [x29, #-24]
  41de84:	bl	4025c0 <strlen@plt>
  41de88:	ldr	x14, [sp, #56]
  41de8c:	cmp	x0, #0x1
  41de90:	b.hi	41f418 <_obstack_memory_used@@Base+0x7efc>  // b.pmore
  41de94:	cmp	w19, #0x3
  41de98:	b.ne	41deb0 <_obstack_memory_used@@Base+0x6994>  // b.any
  41de9c:	ldur	x0, [x29, #-40]
  41dea0:	bl	4025c0 <strlen@plt>
  41dea4:	ldr	x14, [sp, #56]
  41dea8:	cmp	x0, #0x1
  41deac:	b.hi	41f418 <_obstack_memory_used@@Base+0x7efc>  // b.pmore
  41deb0:	cmp	w22, #0x3
  41deb4:	b.eq	41dfd0 <_obstack_memory_used@@Base+0x6ab4>  // b.none
  41deb8:	cbnz	w22, 41dfdc <_obstack_memory_used@@Base+0x6ac0>
  41debc:	ldurb	w27, [x29, #-24]
  41dec0:	b	41dfe0 <_obstack_memory_used@@Base+0x6ac4>
  41dec4:	ldr	x8, [x19, #72]
  41dec8:	neg	w9, w26
  41decc:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ded0:	mov	w10, w22
  41ded4:	add	x8, x8, w9, sxtw
  41ded8:	str	x8, [x19, #72]
  41dedc:	ldr	x8, [sp, #56]
  41dee0:	add	x11, x11, #0x752
  41dee4:	strb	w21, [x8, #8]
  41dee8:	adr	x8, 41def8 <_obstack_memory_used@@Base+0x69dc>
  41deec:	ldrb	w9, [x11, x10]
  41def0:	add	x8, x8, x9, lsl #2
  41def4:	br	x8
  41def8:	ldur	x27, [x29, #-24]
  41defc:	mov	x0, x27
  41df00:	bl	4025c0 <strlen@plt>
  41df04:	cmp	x0, #0x1
  41df08:	b.ne	41f414 <_obstack_memory_used@@Base+0x7ef8>  // b.any
  41df0c:	ldrb	w8, [x27]
  41df10:	mov	w27, #0x3                   	// #3
  41df14:	lsr	x9, x8, #3
  41df18:	and	x9, x9, #0x18
  41df1c:	ldr	x10, [x25, x9]
  41df20:	lsl	x8, x21, x8
  41df24:	orr	x8, x8, x10
  41df28:	str	x8, [x25, x9]
  41df2c:	ldr	x14, [sp, #56]
  41df30:	str	wzr, [x28]
  41df34:	ldrb	w8, [x14, #8]
  41df38:	cmp	w8, #0x15
  41df3c:	b.eq	41e184 <_obstack_memory_used@@Base+0x6c68>  // b.none
  41df40:	cmp	w8, #0x2
  41df44:	b.eq	41f2b8 <_obstack_memory_used@@Base+0x7d9c>  // b.none
  41df48:	ldr	x20, [sp, #40]
  41df4c:	sub	x8, x29, #0x50
  41df50:	sub	x0, x29, #0x20
  41df54:	mov	x1, x19
  41df58:	mov	x2, x14
  41df5c:	mov	w3, w26
  41df60:	mov	x4, x20
  41df64:	mov	w5, wzr
  41df68:	stur	x8, [x29, #-24]
  41df6c:	stur	w27, [x29, #-32]
  41df70:	mov	x22, x14
  41df74:	bl	41fbd8 <_obstack_memory_used@@Base+0x86bc>
  41df78:	cbz	w0, 41dd50 <_obstack_memory_used@@Base+0x6834>
  41df7c:	b	41f2c4 <_obstack_memory_used@@Base+0x7da8>
  41df80:	ldurb	w8, [x29, #-24]
  41df84:	ldr	x14, [sp, #56]
  41df88:	lsr	x9, x8, #3
  41df8c:	and	x9, x9, #0x18
  41df90:	ldr	x10, [x25, x9]
  41df94:	lsl	x8, x21, x8
  41df98:	orr	x8, x8, x10
  41df9c:	str	x8, [x25, x9]
  41dfa0:	b	41df34 <_obstack_memory_used@@Base+0x6a18>
  41dfa4:	ldr	x8, [x24, #40]
  41dfa8:	ldr	x9, [sp, #16]
  41dfac:	cmp	x9, x8
  41dfb0:	b.eq	41e0f4 <_obstack_memory_used@@Base+0x6bd8>  // b.none
  41dfb4:	ldr	x0, [x24]
  41dfb8:	ldr	x14, [sp, #56]
  41dfbc:	ldur	w9, [x29, #-24]
  41dfc0:	add	x10, x8, #0x1
  41dfc4:	str	x10, [x24, #40]
  41dfc8:	str	w9, [x0, x8, lsl #2]
  41dfcc:	b	41df34 <_obstack_memory_used@@Base+0x6a18>
  41dfd0:	ldur	x8, [x29, #-24]
  41dfd4:	ldrb	w27, [x8]
  41dfd8:	b	41dfe0 <_obstack_memory_used@@Base+0x6ac4>
  41dfdc:	mov	w27, wzr
  41dfe0:	cmp	w19, #0x3
  41dfe4:	b.eq	41dff4 <_obstack_memory_used@@Base+0x6ad8>  // b.none
  41dfe8:	cbnz	w19, 41e000 <_obstack_memory_used@@Base+0x6ae4>
  41dfec:	ldurb	w28, [x29, #-40]
  41dff0:	b	41e004 <_obstack_memory_used@@Base+0x6ae8>
  41dff4:	ldur	x8, [x29, #-40]
  41dff8:	ldrb	w28, [x8]
  41dffc:	b	41e004 <_obstack_memory_used@@Base+0x6ae8>
  41e000:	mov	w28, wzr
  41e004:	cmp	w22, #0x3
  41e008:	b.eq	41e010 <_obstack_memory_used@@Base+0x6af4>  // b.none
  41e00c:	cbnz	w22, 41e028 <_obstack_memory_used@@Base+0x6b0c>
  41e010:	cbz	x20, 41e02c <_obstack_memory_used@@Base+0x6b10>
  41e014:	mov	w0, w27
  41e018:	bl	402910 <btowc@plt>
  41e01c:	ldr	x14, [sp, #56]
  41e020:	mov	w27, w0
  41e024:	b	41e02c <_obstack_memory_used@@Base+0x6b10>
  41e028:	ldur	w27, [x29, #-24]
  41e02c:	cmp	w19, #0x3
  41e030:	b.eq	41e038 <_obstack_memory_used@@Base+0x6b1c>  // b.none
  41e034:	cbnz	w19, 41e050 <_obstack_memory_used@@Base+0x6b34>
  41e038:	cbz	x20, 41e054 <_obstack_memory_used@@Base+0x6b38>
  41e03c:	mov	w0, w28
  41e040:	bl	402910 <btowc@plt>
  41e044:	ldr	x14, [sp, #56]
  41e048:	mov	w28, w0
  41e04c:	b	41e054 <_obstack_memory_used@@Base+0x6b38>
  41e050:	ldur	w28, [x29, #-40]
  41e054:	cmn	w27, #0x1
  41e058:	mov	w0, #0x3                   	// #3
  41e05c:	b.eq	41f41c <_obstack_memory_used@@Base+0x7f00>  // b.none
  41e060:	cmn	w28, #0x1
  41e064:	b.eq	41f41c <_obstack_memory_used@@Base+0x7f00>  // b.none
  41e068:	ldr	x8, [sp, #40]
  41e06c:	tbz	w8, #16, 41e078 <_obstack_memory_used@@Base+0x6b5c>
  41e070:	cmp	w27, w28
  41e074:	b.hi	41f688 <_obstack_memory_used@@Base+0x816c>  // b.pmore
  41e078:	cbz	x20, 41e0a4 <_obstack_memory_used@@Base+0x6b88>
  41e07c:	ldr	x8, [x20, #64]
  41e080:	ldr	x9, [sp, #8]
  41e084:	cmp	x9, x8
  41e088:	b.eq	41e12c <_obstack_memory_used@@Base+0x6c10>  // b.none
  41e08c:	ldp	x22, x10, [x20, #8]
  41e090:	lsl	x9, x8, #2
  41e094:	add	x8, x8, #0x1
  41e098:	str	w27, [x22, x9]
  41e09c:	str	x8, [x20, #64]
  41e0a0:	str	w28, [x10, x9]
  41e0a4:	mov	w9, w28
  41e0a8:	ldp	x28, x19, [sp, #24]
  41e0ac:	mov	x8, xzr
  41e0b0:	mov	w10, w27
  41e0b4:	mov	w27, #0x3                   	// #3
  41e0b8:	b	41e0c8 <_obstack_memory_used@@Base+0x6bac>
  41e0bc:	add	x8, x8, #0x1
  41e0c0:	cmp	x8, #0x100
  41e0c4:	b.eq	41df30 <_obstack_memory_used@@Base+0x6a14>  // b.none
  41e0c8:	cmp	x8, x10
  41e0cc:	b.cc	41e0bc <_obstack_memory_used@@Base+0x6ba0>  // b.lo, b.ul, b.last
  41e0d0:	cmp	x8, x9
  41e0d4:	b.hi	41e0bc <_obstack_memory_used@@Base+0x6ba0>  // b.pmore
  41e0d8:	lsr	x11, x8, #3
  41e0dc:	and	x11, x11, #0x1ffffffffffffff8
  41e0e0:	ldr	x12, [x25, x11]
  41e0e4:	lsl	x13, x21, x8
  41e0e8:	orr	x12, x12, x13
  41e0ec:	str	x12, [x25, x11]
  41e0f0:	b	41e0bc <_obstack_memory_used@@Base+0x6ba0>
  41e0f4:	ldr	x8, [sp, #16]
  41e0f8:	ldr	x0, [x24]
  41e0fc:	mov	w19, #0x1                   	// #1
  41e100:	bfi	x19, x8, #1, #63
  41e104:	lsl	x1, x19, #2
  41e108:	bl	402870 <realloc@plt>
  41e10c:	cbz	x0, 41f6e4 <_obstack_memory_used@@Base+0x81c8>
  41e110:	ldr	x8, [x24, #40]
  41e114:	str	x19, [sp, #16]
  41e118:	ldr	x19, [sp, #32]
  41e11c:	ldr	x14, [sp, #56]
  41e120:	mov	w27, #0x3                   	// #3
  41e124:	str	x0, [x24]
  41e128:	b	41dfbc <_obstack_memory_used@@Base+0x6aa0>
  41e12c:	ldr	x8, [sp, #8]
  41e130:	ldr	x0, [x20, #8]
  41e134:	mov	w19, #0x1                   	// #1
  41e138:	bfi	x19, x8, #1, #63
  41e13c:	lsl	x1, x19, #2
  41e140:	str	x1, [sp, #8]
  41e144:	bl	402870 <realloc@plt>
  41e148:	ldr	x8, [x20, #16]
  41e14c:	ldr	x1, [sp, #8]
  41e150:	mov	x22, x0
  41e154:	mov	x0, x8
  41e158:	bl	402870 <realloc@plt>
  41e15c:	str	x0, [sp]
  41e160:	cbz	x22, 41f6f0 <_obstack_memory_used@@Base+0x81d4>
  41e164:	ldr	x8, [sp]
  41e168:	cbz	x8, 41f6f0 <_obstack_memory_used@@Base+0x81d4>
  41e16c:	ldr	x10, [sp]
  41e170:	ldr	x8, [x20, #64]
  41e174:	stp	x22, x10, [x20, #8]
  41e178:	ldr	x14, [sp, #56]
  41e17c:	str	x19, [sp, #8]
  41e180:	b	41e090 <_obstack_memory_used@@Base+0x6b74>
  41e184:	ldr	x8, [x19, #72]
  41e188:	add	x8, x8, w26, sxtw
  41e18c:	str	x8, [x19, #72]
  41e190:	ldr	w8, [sp, #48]
  41e194:	cbz	w8, 41e1c0 <_obstack_memory_used@@Base+0x6ca4>
  41e198:	ldp	q0, q1, [x25]
  41e19c:	mvn	v0.16b, v0.16b
  41e1a0:	mvn	v1.16b, v1.16b
  41e1a4:	stp	q0, q1, [x25]
  41e1a8:	ldr	w8, [x23, #180]
  41e1ac:	cmp	w8, #0x2
  41e1b0:	b.ge	41e1cc <_obstack_memory_used@@Base+0x6cb0>  // b.tcont
  41e1b4:	ldr	x9, [x24, #40]
  41e1b8:	cbnz	x9, 41e228 <_obstack_memory_used@@Base+0x6d0c>
  41e1bc:	b	41e210 <_obstack_memory_used@@Base+0x6cf4>
  41e1c0:	ldr	w8, [x23, #180]
  41e1c4:	cmp	w8, #0x2
  41e1c8:	b.lt	41e1b4 <_obstack_memory_used@@Base+0x6c98>  // b.tstop
  41e1cc:	ldr	x9, [x23, #120]
  41e1d0:	ldp	x11, x12, [x25]
  41e1d4:	ldr	x10, [x9]
  41e1d8:	and	x10, x11, x10
  41e1dc:	str	x10, [x25]
  41e1e0:	ldr	x10, [x9, #8]
  41e1e4:	and	x10, x12, x10
  41e1e8:	str	x10, [x25, #8]
  41e1ec:	ldr	x10, [x9, #16]
  41e1f0:	ldp	x11, x12, [x25, #16]
  41e1f4:	and	x10, x11, x10
  41e1f8:	str	x10, [x25, #16]
  41e1fc:	ldr	x9, [x9, #24]
  41e200:	and	x9, x12, x9
  41e204:	str	x9, [x25, #24]
  41e208:	ldr	x9, [x24, #40]
  41e20c:	cbnz	x9, 41e228 <_obstack_memory_used@@Base+0x6d0c>
  41e210:	ldr	x9, [x24, #48]
  41e214:	cbnz	x9, 41e228 <_obstack_memory_used@@Base+0x6d0c>
  41e218:	ldr	x9, [x24, #56]
  41e21c:	cbnz	x9, 41e228 <_obstack_memory_used@@Base+0x6d0c>
  41e220:	ldr	x9, [x24, #64]
  41e224:	cbz	x9, 41f21c <_obstack_memory_used@@Base+0x7d00>
  41e228:	ldrb	w9, [x23, #176]
  41e22c:	ldr	w8, [x23, #128]
  41e230:	orr	w9, w9, #0x2
  41e234:	cmp	w8, #0xf
  41e238:	strb	w9, [x23, #176]
  41e23c:	b.eq	41f39c <_obstack_memory_used@@Base+0x7e80>  // b.none
  41e240:	ldr	x0, [x23, #112]
  41e244:	add	w9, w8, #0x1
  41e248:	sxtw	x8, w8
  41e24c:	add	x19, x0, x8, lsl #6
  41e250:	mov	w10, #0x6                   	// #6
  41e254:	mov	x11, #0xffffffffffffffff    	// #-1
  41e258:	str	w9, [x23, #128]
  41e25c:	str	xzr, [x19, #8]!
  41e260:	stp	xzr, xzr, [x19, #16]
  41e264:	str	xzr, [x19, #8]
  41e268:	str	w10, [x19, #48]
  41e26c:	stp	xzr, x24, [x19, #32]
  41e270:	str	x11, [x19, #56]
  41e274:	ldr	x8, [x25]
  41e278:	cbnz	x8, 41e294 <_obstack_memory_used@@Base+0x6d78>
  41e27c:	ldr	x8, [x25, #8]
  41e280:	cbnz	x8, 41e294 <_obstack_memory_used@@Base+0x6d78>
  41e284:	ldr	x8, [x25, #16]
  41e288:	cbnz	x8, 41e294 <_obstack_memory_used@@Base+0x6d78>
  41e28c:	ldr	x8, [x25, #24]
  41e290:	cbz	x8, 41f2a4 <_obstack_memory_used@@Base+0x7d88>
  41e294:	ldr	w8, [x23, #128]
  41e298:	cmp	w8, #0xf
  41e29c:	b.eq	41f3c4 <_obstack_memory_used@@Base+0x7ea8>  // b.none
  41e2a0:	ldr	x0, [x23, #112]
  41e2a4:	add	w9, w8, #0x1
  41e2a8:	sxtw	x8, w8
  41e2ac:	add	x20, x0, x8, lsl #6
  41e2b0:	str	w9, [x23, #128]
  41e2b4:	mov	w9, #0x3                   	// #3
  41e2b8:	mov	x8, #0xffffffffffffffff    	// #-1
  41e2bc:	str	xzr, [x20, #8]!
  41e2c0:	stp	xzr, xzr, [x20, #16]
  41e2c4:	str	xzr, [x20, #8]
  41e2c8:	str	w9, [x20, #48]
  41e2cc:	stp	xzr, x25, [x20, #32]
  41e2d0:	str	x8, [x20, #56]
  41e2d4:	ldr	w8, [x23, #128]
  41e2d8:	cmp	w8, #0xf
  41e2dc:	b.eq	41f3ec <_obstack_memory_used@@Base+0x7ed0>  // b.none
  41e2e0:	ldr	x0, [x23, #112]
  41e2e4:	add	w9, w8, #0x1
  41e2e8:	sxtw	x8, w8
  41e2ec:	add	x24, x0, x8, lsl #6
  41e2f0:	str	w9, [x23, #128]
  41e2f4:	mov	w9, #0xa                   	// #10
  41e2f8:	mov	x8, #0xffffffffffffffff    	// #-1
  41e2fc:	str	xzr, [x24, #8]!
  41e300:	stp	x20, x19, [x24, #8]
  41e304:	stp	xzr, xzr, [x24, #32]
  41e308:	str	w9, [x24, #48]
  41e30c:	str	xzr, [x24, #24]
  41e310:	str	x8, [x24, #56]
  41e314:	str	x24, [x20]
  41e318:	str	x24, [x19]
  41e31c:	ldp	x20, x21, [sp, #32]
  41e320:	mov	x0, x14
  41e324:	str	x28, [sp, #24]
  41e328:	mov	x1, x20
  41e32c:	mov	x2, x21
  41e330:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41e334:	ldr	x8, [x20, #72]
  41e338:	ldr	x12, [sp, #56]
  41e33c:	add	x25, x23, #0x80
  41e340:	add	x26, x23, #0x70
  41e344:	mov	w23, #0x1                   	// #1
  41e348:	mov	x28, #0xffffffffffffffff    	// #-1
  41e34c:	add	x8, x8, w0, sxtw
  41e350:	str	x8, [x20, #72]
  41e354:	ldrb	w8, [x12, #8]
  41e358:	str	x24, [sp, #48]
  41e35c:	cmp	w8, #0x17
  41e360:	b.hi	41ef4c <_obstack_memory_used@@Base+0x7a30>  // b.pmore
  41e364:	mov	w10, #0x800                 	// #2048
  41e368:	lsl	w9, w23, w8
  41e36c:	movk	w10, #0x8c, lsl #16
  41e370:	tst	w9, w10
  41e374:	b.eq	41ef4c <_obstack_memory_used@@Base+0x7a30>  // b.none
  41e378:	ldr	q0, [x12]
  41e37c:	ldr	x19, [x20, #72]
  41e380:	mov	w24, #0xa                   	// #10
  41e384:	cmp	w8, #0x17
  41e388:	stur	q0, [x29, #-80]
  41e38c:	b.ne	41e42c <_obstack_memory_used@@Base+0x6f10>  // b.any
  41e390:	mov	x10, #0xffffffffffffffff    	// #-1
  41e394:	mov	x0, x12
  41e398:	mov	x1, x20
  41e39c:	mov	x2, x21
  41e3a0:	mov	x22, x10
  41e3a4:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41e3a8:	ldr	x8, [x20, #72]
  41e3ac:	ldr	x12, [sp, #56]
  41e3b0:	add	x8, x8, w0, sxtw
  41e3b4:	str	x8, [x20, #72]
  41e3b8:	ldrb	w8, [x12, #8]
  41e3bc:	ldrb	w9, [x12]
  41e3c0:	cmp	w8, #0x18
  41e3c4:	b.eq	41e444 <_obstack_memory_used@@Base+0x6f28>  // b.none
  41e3c8:	cmp	w8, #0x2
  41e3cc:	b.eq	41ea90 <_obstack_memory_used@@Base+0x7574>  // b.none
  41e3d0:	cmp	w9, #0x2c
  41e3d4:	b.eq	41e444 <_obstack_memory_used@@Base+0x6f28>  // b.none
  41e3d8:	cmp	w9, #0x30
  41e3dc:	mov	x10, #0xfffffffffffffffe    	// #-2
  41e3e0:	b.cc	41e394 <_obstack_memory_used@@Base+0x6e78>  // b.lo, b.ul, b.last
  41e3e4:	cmp	w8, #0x1
  41e3e8:	b.ne	41e394 <_obstack_memory_used@@Base+0x6e78>  // b.any
  41e3ec:	cmn	x22, #0x2
  41e3f0:	mov	x10, #0xfffffffffffffffe    	// #-2
  41e3f4:	b.eq	41e394 <_obstack_memory_used@@Base+0x6e78>  // b.none
  41e3f8:	cmp	w9, #0x39
  41e3fc:	b.hi	41e394 <_obstack_memory_used@@Base+0x6e78>  // b.pmore
  41e400:	cmn	x22, #0x1
  41e404:	b.eq	41e424 <_obstack_memory_used@@Base+0x6f08>  // b.none
  41e408:	madd	x8, x22, x24, x9
  41e40c:	mov	w10, #0x8030                	// #32816
  41e410:	sub	x9, x8, #0x30
  41e414:	cmp	x8, x10
  41e418:	mov	w8, #0x8000                	// #32768
  41e41c:	csel	x10, x8, x9, gt
  41e420:	b	41e394 <_obstack_memory_used@@Base+0x6e78>
  41e424:	sub	x10, x9, #0x30
  41e428:	b	41e394 <_obstack_memory_used@@Base+0x6e78>
  41e42c:	cmp	w8, #0x12
  41e430:	cset	w22, eq  // eq = none
  41e434:	cmp	w8, #0x13
  41e438:	mov	w8, #0x1                   	// #1
  41e43c:	cneg	x23, x8, ne  // ne = any
  41e440:	b	41e578 <_obstack_memory_used@@Base+0x705c>
  41e444:	cmn	x22, #0x1
  41e448:	b.ne	41e464 <_obstack_memory_used@@Base+0x6f48>  // b.any
  41e44c:	cmp	w9, #0x2c
  41e450:	b.ne	41e524 <_obstack_memory_used@@Base+0x7008>  // b.any
  41e454:	cmp	w8, #0x1
  41e458:	b.ne	41e524 <_obstack_memory_used@@Base+0x7008>  // b.any
  41e45c:	mov	x22, xzr
  41e460:	b	41e484 <_obstack_memory_used@@Base+0x6f68>
  41e464:	cmn	x22, #0x2
  41e468:	b.eq	41ea90 <_obstack_memory_used@@Base+0x7574>  // b.none
  41e46c:	cmp	w8, #0x18
  41e470:	b.eq	41e538 <_obstack_memory_used@@Base+0x701c>  // b.none
  41e474:	cmp	w8, #0x1
  41e478:	b.ne	41ea90 <_obstack_memory_used@@Base+0x7574>  // b.any
  41e47c:	cmp	w9, #0x2c
  41e480:	b.ne	41ea90 <_obstack_memory_used@@Base+0x7574>  // b.any
  41e484:	mov	x10, #0xffffffffffffffff    	// #-1
  41e488:	mov	x0, x12
  41e48c:	mov	x1, x20
  41e490:	mov	x2, x21
  41e494:	mov	x23, x10
  41e498:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41e49c:	ldr	x8, [x20, #72]
  41e4a0:	ldr	x12, [sp, #56]
  41e4a4:	add	x8, x8, w0, sxtw
  41e4a8:	str	x8, [x20, #72]
  41e4ac:	ldrb	w8, [x12, #8]
  41e4b0:	cmp	w8, #0x18
  41e4b4:	b.eq	41e53c <_obstack_memory_used@@Base+0x7020>  // b.none
  41e4b8:	cmp	w8, #0x2
  41e4bc:	b.eq	41ea8c <_obstack_memory_used@@Base+0x7570>  // b.none
  41e4c0:	ldrb	w9, [x12]
  41e4c4:	mov	w11, #0xa                   	// #10
  41e4c8:	cmp	w9, #0x2c
  41e4cc:	b.eq	41e540 <_obstack_memory_used@@Base+0x7024>  // b.none
  41e4d0:	cmp	w9, #0x30
  41e4d4:	mov	x10, #0xfffffffffffffffe    	// #-2
  41e4d8:	b.cc	41e488 <_obstack_memory_used@@Base+0x6f6c>  // b.lo, b.ul, b.last
  41e4dc:	cmp	w8, #0x1
  41e4e0:	b.ne	41e488 <_obstack_memory_used@@Base+0x6f6c>  // b.any
  41e4e4:	cmn	x23, #0x2
  41e4e8:	mov	x10, #0xfffffffffffffffe    	// #-2
  41e4ec:	b.eq	41e488 <_obstack_memory_used@@Base+0x6f6c>  // b.none
  41e4f0:	cmp	w9, #0x39
  41e4f4:	b.hi	41e488 <_obstack_memory_used@@Base+0x6f6c>  // b.pmore
  41e4f8:	cmn	x23, #0x1
  41e4fc:	b.eq	41e51c <_obstack_memory_used@@Base+0x7000>  // b.none
  41e500:	madd	x8, x23, x11, x9
  41e504:	mov	w10, #0x8030                	// #32816
  41e508:	sub	x9, x8, #0x30
  41e50c:	cmp	x8, x10
  41e510:	mov	w8, #0x8000                	// #32768
  41e514:	csel	x10, x8, x9, gt
  41e518:	b	41e488 <_obstack_memory_used@@Base+0x6f6c>
  41e51c:	sub	x10, x9, #0x30
  41e520:	b	41e488 <_obstack_memory_used@@Base+0x6f6c>
  41e524:	ldr	x8, [sp, #24]
  41e528:	mov	x14, xzr
  41e52c:	mov	w9, #0xa                   	// #10
  41e530:	str	w9, [x8]
  41e534:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41e538:	mov	x23, x22
  41e53c:	mov	w11, #0xa                   	// #10
  41e540:	cmn	x23, #0x2
  41e544:	b.eq	41ea8c <_obstack_memory_used@@Base+0x7570>  // b.none
  41e548:	cmn	x23, #0x1
  41e54c:	cset	w9, eq  // eq = none
  41e550:	cmp	x22, x23
  41e554:	cset	w10, le
  41e558:	cmp	w8, #0x18
  41e55c:	b.ne	41ecd8 <_obstack_memory_used@@Base+0x77bc>  // b.any
  41e560:	orr	w8, w10, w9
  41e564:	tbz	w8, #0, 41ecd8 <_obstack_memory_used@@Base+0x77bc>
  41e568:	cmn	x23, #0x1
  41e56c:	csel	x8, x22, x23, eq  // eq = none
  41e570:	cmp	x8, #0x8, lsl #12
  41e574:	b.ge	41ee58 <_obstack_memory_used@@Base+0x793c>  // b.tcont
  41e578:	mov	x0, x12
  41e57c:	mov	x1, x20
  41e580:	mov	x2, x21
  41e584:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41e588:	ldr	x8, [x20, #72]
  41e58c:	ldr	x19, [sp, #48]
  41e590:	add	x8, x8, w0, sxtw
  41e594:	str	x8, [x20, #72]
  41e598:	cbz	x19, 41e97c <_obstack_memory_used@@Base+0x7460>
  41e59c:	ldr	x12, [sp, #56]
  41e5a0:	orr	x8, x23, x22
  41e5a4:	mov	w13, #0xa                   	// #10
  41e5a8:	cbz	x8, 41e988 <_obstack_memory_used@@Base+0x746c>
  41e5ac:	cmp	x22, #0x1
  41e5b0:	b.ge	41ea2c <_obstack_memory_used@@Base+0x7510>  // b.tcont
  41e5b4:	mov	x14, xzr
  41e5b8:	mov	x21, x19
  41e5bc:	ldrb	w8, [x21, #48]
  41e5c0:	cmp	w8, #0x11
  41e5c4:	b.ne	41e62c <_obstack_memory_used@@Base+0x7110>  // b.any
  41e5c8:	ldr	x8, [x21, #40]
  41e5cc:	mov	x10, x21
  41e5d0:	mov	x9, x10
  41e5d4:	ldr	x10, [x10, #8]
  41e5d8:	cbnz	x10, 41e5d0 <_obstack_memory_used@@Base+0x70b4>
  41e5dc:	ldr	x10, [x9, #16]
  41e5e0:	cbnz	x10, 41e5d0 <_obstack_memory_used@@Base+0x70b4>
  41e5e4:	ldr	w10, [x9, #48]
  41e5e8:	and	w11, w10, #0xff
  41e5ec:	cmp	w11, #0x11
  41e5f0:	b.ne	41e608 <_obstack_memory_used@@Base+0x70ec>  // b.any
  41e5f4:	ldr	x11, [x9, #40]
  41e5f8:	cmp	x11, x8
  41e5fc:	b.ne	41e608 <_obstack_memory_used@@Base+0x70ec>  // b.any
  41e600:	orr	w10, w10, #0x80000
  41e604:	str	w10, [x9, #48]
  41e608:	ldr	x11, [x9]
  41e60c:	cbz	x11, 41e62c <_obstack_memory_used@@Base+0x7110>
  41e610:	ldr	x10, [x11, #16]
  41e614:	cmp	x10, x9
  41e618:	mov	x9, x11
  41e61c:	b.eq	41e5e4 <_obstack_memory_used@@Base+0x70c8>  // b.none
  41e620:	mov	x9, x11
  41e624:	cbz	x10, 41e5e4 <_obstack_memory_used@@Base+0x70c8>
  41e628:	b	41e5d0 <_obstack_memory_used@@Base+0x70b4>
  41e62c:	ldr	w8, [x25]
  41e630:	cmn	x23, #0x1
  41e634:	cinc	w19, w13, eq  // eq = none
  41e638:	cmp	w8, #0xf
  41e63c:	b.eq	41ea54 <_obstack_memory_used@@Base+0x7538>  // b.none
  41e640:	ldr	x0, [x26]
  41e644:	mov	w11, #0x10                  	// #16
  41e648:	add	w9, w8, #0x1
  41e64c:	sxtw	x8, w8
  41e650:	add	x22, x22, #0x2
  41e654:	add	x27, x0, x8, lsl #6
  41e658:	str	w9, [x25]
  41e65c:	cmp	x22, x23
  41e660:	str	xzr, [x27, #8]!
  41e664:	stp	x21, xzr, [x27, #8]
  41e668:	stp	xzr, xzr, [x27, #32]
  41e66c:	str	w19, [x27, #48]
  41e670:	str	xzr, [x27, #24]
  41e674:	str	x28, [x27, #56]
  41e678:	str	x27, [x21]
  41e67c:	b.gt	41e91c <_obstack_memory_used@@Base+0x7400>
  41e680:	mov	x20, x27
  41e684:	ldr	w8, [x25]
  41e688:	cmp	w8, #0xf
  41e68c:	b.eq	41e85c <_obstack_memory_used@@Base+0x7340>  // b.none
  41e690:	ldr	x0, [x26]
  41e694:	add	w10, w8, #0x1
  41e698:	sxtw	x8, w8
  41e69c:	add	x19, x0, x8, lsl #6
  41e6a0:	str	w10, [x25]
  41e6a4:	str	xzr, [x19, #8]!
  41e6a8:	add	x9, x21, #0x28
  41e6ac:	stp	xzr, xzr, [x19, #8]
  41e6b0:	ldr	q0, [x9]
  41e6b4:	add	x24, sp, #0x50
  41e6b8:	stp	xzr, xzr, [x19, #24]
  41e6bc:	str	x28, [x19, #56]
  41e6c0:	stur	q0, [x19, #40]
  41e6c4:	ldr	w8, [x19, #48]
  41e6c8:	and	w8, w8, #0xfff3ffff
  41e6cc:	str	w8, [x19, #48]
  41e6d0:	mov	x8, x19
  41e6d4:	str	x19, [sp, #80]
  41e6d8:	str	x27, [x8]
  41e6dc:	ldr	x8, [x24]
  41e6e0:	ldr	w9, [x8, #48]
  41e6e4:	orr	w9, w9, #0x40000
  41e6e8:	str	w9, [x8, #48]
  41e6ec:	ldr	x8, [x21, #8]
  41e6f0:	ldr	x27, [x24]
  41e6f4:	cbz	x8, 41e75c <_obstack_memory_used@@Base+0x7240>
  41e6f8:	add	x24, x27, #0x8
  41e6fc:	mov	x21, x8
  41e700:	ldr	w8, [x25]
  41e704:	cmp	w8, #0xf
  41e708:	b.eq	41e784 <_obstack_memory_used@@Base+0x7268>  // b.none
  41e70c:	ldr	x0, [x26]
  41e710:	add	w10, w8, #0x1
  41e714:	sxtw	x8, w8
  41e718:	add	x8, x0, x8, lsl #6
  41e71c:	str	w10, [x25]
  41e720:	str	xzr, [x8, #8]!
  41e724:	add	x9, x21, #0x28
  41e728:	stp	xzr, xzr, [x8, #8]
  41e72c:	ldr	q0, [x9]
  41e730:	stp	xzr, xzr, [x8, #24]
  41e734:	str	x28, [x8, #56]
  41e738:	stur	q0, [x8, #40]
  41e73c:	ldr	w9, [x8, #48]
  41e740:	and	w9, w9, #0xfff3ffff
  41e744:	str	w9, [x8, #48]
  41e748:	str	x8, [x24]
  41e74c:	b	41e6d8 <_obstack_memory_used@@Base+0x71bc>
  41e750:	ldr	x21, [x8]
  41e754:	ldr	x27, [x27]
  41e758:	cbz	x21, 41e7bc <_obstack_memory_used@@Base+0x72a0>
  41e75c:	mov	x9, x8
  41e760:	mov	x8, x21
  41e764:	ldr	x21, [x21, #16]
  41e768:	cmp	x21, x9
  41e76c:	b.eq	41e750 <_obstack_memory_used@@Base+0x7234>  // b.none
  41e770:	cbz	x21, 41e750 <_obstack_memory_used@@Base+0x7234>
  41e774:	add	x24, x27, #0x10
  41e778:	ldr	w8, [x25]
  41e77c:	cmp	w8, #0xf
  41e780:	b.ne	41e70c <_obstack_memory_used@@Base+0x71f0>  // b.any
  41e784:	mov	w0, #0x3c8                 	// #968
  41e788:	str	x14, [sp, #16]
  41e78c:	bl	402730 <malloc@plt>
  41e790:	cbz	x0, 41e8dc <_obstack_memory_used@@Base+0x73c0>
  41e794:	ldr	x9, [x26]
  41e798:	ldr	x12, [sp, #56]
  41e79c:	ldr	x14, [sp, #16]
  41e7a0:	mov	w8, wzr
  41e7a4:	mov	w13, #0xa                   	// #10
  41e7a8:	mov	w11, #0x10                  	// #16
  41e7ac:	str	x9, [x0]
  41e7b0:	str	x0, [x26]
  41e7b4:	str	wzr, [x25]
  41e7b8:	b	41e710 <_obstack_memory_used@@Base+0x71f4>
  41e7bc:	ldr	w8, [x25]
  41e7c0:	cmp	w8, #0xf
  41e7c4:	b.eq	41e894 <_obstack_memory_used@@Base+0x7378>  // b.none
  41e7c8:	ldr	x0, [x26]
  41e7cc:	add	w9, w8, #0x1
  41e7d0:	sxtw	x8, w8
  41e7d4:	add	x21, x0, x8, lsl #6
  41e7d8:	str	w9, [x25]
  41e7dc:	str	xzr, [x21, #8]!
  41e7e0:	stp	x20, x19, [x21, #8]
  41e7e4:	stp	xzr, xzr, [x21, #32]
  41e7e8:	str	w11, [x21, #48]
  41e7ec:	str	xzr, [x21, #24]
  41e7f0:	str	x28, [x21, #56]
  41e7f4:	str	x21, [x20]
  41e7f8:	cbz	x19, 41eee4 <_obstack_memory_used@@Base+0x79c8>
  41e7fc:	str	x21, [x19]
  41e800:	ldr	w8, [x25]
  41e804:	cmp	w8, #0xf
  41e808:	b.eq	41e89c <_obstack_memory_used@@Base+0x7380>  // b.none
  41e80c:	ldr	x0, [x26]
  41e810:	add	w9, w8, #0x1
  41e814:	sxtw	x8, w8
  41e818:	add	x20, x0, x8, lsl #6
  41e81c:	cmp	x22, x23
  41e820:	str	w9, [x25]
  41e824:	str	xzr, [x20, #8]!
  41e828:	stp	x21, xzr, [x20, #8]
  41e82c:	stp	xzr, xzr, [x20, #32]
  41e830:	str	w13, [x20, #48]
  41e834:	str	xzr, [x20, #24]
  41e838:	str	x28, [x20, #56]
  41e83c:	str	x20, [x21]
  41e840:	b.ge	41e918 <_obstack_memory_used@@Base+0x73fc>  // b.tcont
  41e844:	ldr	x27, [x19]
  41e848:	add	x22, x22, #0x1
  41e84c:	mov	x21, x19
  41e850:	ldr	w8, [x25]
  41e854:	cmp	w8, #0xf
  41e858:	b.ne	41e690 <_obstack_memory_used@@Base+0x7174>  // b.any
  41e85c:	mov	w0, #0x3c8                 	// #968
  41e860:	str	x14, [sp, #16]
  41e864:	bl	402730 <malloc@plt>
  41e868:	cbz	x0, 41e8d4 <_obstack_memory_used@@Base+0x73b8>
  41e86c:	ldr	x9, [x26]
  41e870:	ldr	x12, [sp, #56]
  41e874:	ldr	x14, [sp, #16]
  41e878:	mov	w8, wzr
  41e87c:	mov	w13, #0xa                   	// #10
  41e880:	mov	w11, #0x10                  	// #16
  41e884:	str	x9, [x0]
  41e888:	str	x0, [x26]
  41e88c:	str	wzr, [x25]
  41e890:	b	41e694 <_obstack_memory_used@@Base+0x7178>
  41e894:	str	x14, [sp, #16]
  41e898:	b	41e8e4 <_obstack_memory_used@@Base+0x73c8>
  41e89c:	mov	w0, #0x3c8                 	// #968
  41e8a0:	mov	x20, x14
  41e8a4:	bl	402730 <malloc@plt>
  41e8a8:	ldr	x12, [sp, #56]
  41e8ac:	mov	w11, #0x10                  	// #16
  41e8b0:	mov	w13, #0xa                   	// #10
  41e8b4:	cbz	x0, 41eee4 <_obstack_memory_used@@Base+0x79c8>
  41e8b8:	ldr	x9, [x26]
  41e8bc:	mov	x14, x20
  41e8c0:	mov	w8, wzr
  41e8c4:	str	x9, [x0]
  41e8c8:	str	x0, [x26]
  41e8cc:	str	wzr, [x25]
  41e8d0:	b	41e810 <_obstack_memory_used@@Base+0x72f4>
  41e8d4:	str	xzr, [sp, #80]
  41e8d8:	b	41e8e0 <_obstack_memory_used@@Base+0x73c4>
  41e8dc:	str	xzr, [x24]
  41e8e0:	mov	x19, xzr
  41e8e4:	mov	w0, #0x3c8                 	// #968
  41e8e8:	bl	402730 <malloc@plt>
  41e8ec:	ldr	x12, [sp, #56]
  41e8f0:	ldr	x14, [sp, #16]
  41e8f4:	mov	w13, #0xa                   	// #10
  41e8f8:	mov	w11, #0x10                  	// #16
  41e8fc:	cbz	x0, 41eee4 <_obstack_memory_used@@Base+0x79c8>
  41e900:	ldr	x9, [x26]
  41e904:	mov	w8, wzr
  41e908:	str	x9, [x0]
  41e90c:	str	x0, [x26]
  41e910:	str	wzr, [x25]
  41e914:	b	41e7cc <_obstack_memory_used@@Base+0x72b0>
  41e918:	mov	x27, x20
  41e91c:	ldp	x20, x21, [sp, #32]
  41e920:	mov	w23, #0x1                   	// #1
  41e924:	cbz	x14, 41e970 <_obstack_memory_used@@Base+0x7454>
  41e928:	ldr	w8, [x25]
  41e92c:	cmp	w8, #0xf
  41e930:	b.eq	41ecec <_obstack_memory_used@@Base+0x77d0>  // b.none
  41e934:	ldr	x0, [x26]
  41e938:	add	w9, w8, #0x1
  41e93c:	sxtw	x8, w8
  41e940:	add	x8, x0, x8, lsl #6
  41e944:	str	w9, [x25]
  41e948:	str	xzr, [x8, #8]!
  41e94c:	stp	x14, x27, [x8, #8]
  41e950:	stp	xzr, xzr, [x8, #32]
  41e954:	str	w11, [x8, #48]
  41e958:	str	xzr, [x8, #24]
  41e95c:	str	x28, [x8, #56]
  41e960:	str	x8, [x14]
  41e964:	mov	x14, x8
  41e968:	str	x8, [x27]
  41e96c:	b	41e974 <_obstack_memory_used@@Base+0x7458>
  41e970:	mov	x14, x27
  41e974:	mov	w8, wzr
  41e978:	b	41ef14 <_obstack_memory_used@@Base+0x79f8>
  41e97c:	ldr	x12, [sp, #56]
  41e980:	mov	x14, xzr
  41e984:	b	41eef8 <_obstack_memory_used@@Base+0x79dc>
  41e988:	mov	x8, x19
  41e98c:	mov	w23, #0x1                   	// #1
  41e990:	mov	x19, x8
  41e994:	ldr	x8, [x8, #8]
  41e998:	cbnz	x8, 41e990 <_obstack_memory_used@@Base+0x7474>
  41e99c:	ldr	x8, [x19, #16]
  41e9a0:	cbnz	x8, 41e990 <_obstack_memory_used@@Base+0x7474>
  41e9a4:	ldr	w8, [x19, #48]
  41e9a8:	mov	w9, #0xff                  	// #255
  41e9ac:	movk	w9, #0x4, lsl #16
  41e9b0:	and	w8, w8, w9
  41e9b4:	cmp	w8, #0x3
  41e9b8:	b.eq	41e9ec <_obstack_memory_used@@Base+0x74d0>  // b.none
  41e9bc:	cmp	w8, #0x6
  41e9c0:	b.ne	41ea00 <_obstack_memory_used@@Base+0x74e4>  // b.any
  41e9c4:	ldr	x23, [x19, #40]
  41e9c8:	ldr	x0, [x23]
  41e9cc:	bl	402a10 <free@plt>
  41e9d0:	ldr	x0, [x23, #8]
  41e9d4:	bl	402a10 <free@plt>
  41e9d8:	ldr	x0, [x23, #16]
  41e9dc:	bl	402a10 <free@plt>
  41e9e0:	ldr	x0, [x23, #24]
  41e9e4:	bl	402a10 <free@plt>
  41e9e8:	b	41e9f0 <_obstack_memory_used@@Base+0x74d4>
  41e9ec:	ldr	x23, [x19, #40]
  41e9f0:	mov	x0, x23
  41e9f4:	bl	402a10 <free@plt>
  41e9f8:	ldr	x12, [sp, #56]
  41e9fc:	mov	w23, #0x1                   	// #1
  41ea00:	ldr	x9, [x19]
  41ea04:	cbz	x9, 41ea24 <_obstack_memory_used@@Base+0x7508>
  41ea08:	ldr	x8, [x9, #16]
  41ea0c:	cmp	x8, x19
  41ea10:	mov	x19, x9
  41ea14:	b.eq	41e9a4 <_obstack_memory_used@@Base+0x7488>  // b.none
  41ea18:	mov	x19, x9
  41ea1c:	cbz	x8, 41e9a4 <_obstack_memory_used@@Base+0x7488>
  41ea20:	b	41e990 <_obstack_memory_used@@Base+0x7474>
  41ea24:	mov	x14, xzr
  41ea28:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41ea2c:	mov	x14, x19
  41ea30:	mov	x15, x19
  41ea34:	mov	w11, #0x10                  	// #16
  41ea38:	b.ne	41eaac <_obstack_memory_used@@Base+0x7590>  // b.any
  41ea3c:	ldr	x21, [sp, #40]
  41ea40:	cmp	x22, x23
  41ea44:	b.ne	41ed20 <_obstack_memory_used@@Base+0x7804>  // b.any
  41ea48:	ldr	x20, [sp, #32]
  41ea4c:	mov	w23, #0x1                   	// #1
  41ea50:	b	41e974 <_obstack_memory_used@@Base+0x7458>
  41ea54:	mov	w0, #0x3c8                 	// #968
  41ea58:	mov	x20, x14
  41ea5c:	bl	402730 <malloc@plt>
  41ea60:	ldr	x12, [sp, #56]
  41ea64:	mov	w13, #0xa                   	// #10
  41ea68:	mov	w11, #0x10                  	// #16
  41ea6c:	cbz	x0, 41eee4 <_obstack_memory_used@@Base+0x79c8>
  41ea70:	ldr	x9, [x26]
  41ea74:	mov	x14, x20
  41ea78:	mov	w8, wzr
  41ea7c:	str	x9, [x0]
  41ea80:	str	x0, [x26]
  41ea84:	str	wzr, [x25]
  41ea88:	b	41e648 <_obstack_memory_used@@Base+0x712c>
  41ea8c:	mov	w23, #0x1                   	// #1
  41ea90:	tbz	w21, #21, 41ee7c <_obstack_memory_used@@Base+0x7960>
  41ea94:	str	x19, [x20, #72]
  41ea98:	ldur	q0, [x29, #-80]
  41ea9c:	ldr	x14, [sp, #48]
  41eaa0:	str	q0, [x12]
  41eaa4:	strb	w23, [x12, #8]
  41eaa8:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41eaac:	ldr	x14, [x19]
  41eab0:	mov	x15, x19
  41eab4:	mov	w21, #0x2                   	// #2
  41eab8:	ldr	w8, [x25]
  41eabc:	cmp	w8, #0xf
  41eac0:	b.eq	41ec54 <_obstack_memory_used@@Base+0x7738>  // b.none
  41eac4:	ldr	x0, [x26]
  41eac8:	add	w10, w8, #0x1
  41eacc:	sxtw	x8, w8
  41ead0:	add	x20, x0, x8, lsl #6
  41ead4:	str	w10, [x25]
  41ead8:	str	xzr, [x20, #8]!
  41eadc:	add	x9, x15, #0x28
  41eae0:	stp	xzr, xzr, [x20, #8]
  41eae4:	ldr	q0, [x9]
  41eae8:	add	x27, sp, #0x50
  41eaec:	stp	xzr, xzr, [x20, #24]
  41eaf0:	str	x28, [x20, #56]
  41eaf4:	stur	q0, [x20, #40]
  41eaf8:	ldr	w8, [x20, #48]
  41eafc:	and	w8, w8, #0xfff3ffff
  41eb00:	str	w8, [x20, #48]
  41eb04:	mov	x8, x20
  41eb08:	str	x20, [sp, #80]
  41eb0c:	str	x14, [x8]
  41eb10:	ldr	x8, [x27]
  41eb14:	ldr	w9, [x8, #48]
  41eb18:	orr	w9, w9, #0x40000
  41eb1c:	str	w9, [x8, #48]
  41eb20:	ldr	x8, [x15, #8]
  41eb24:	ldr	x14, [x27]
  41eb28:	cbz	x8, 41eb90 <_obstack_memory_used@@Base+0x7674>
  41eb2c:	add	x27, x14, #0x8
  41eb30:	mov	x15, x8
  41eb34:	ldr	w8, [x25]
  41eb38:	cmp	w8, #0xf
  41eb3c:	b.eq	41ebb8 <_obstack_memory_used@@Base+0x769c>  // b.none
  41eb40:	ldr	x0, [x26]
  41eb44:	add	w10, w8, #0x1
  41eb48:	sxtw	x8, w8
  41eb4c:	add	x8, x0, x8, lsl #6
  41eb50:	str	w10, [x25]
  41eb54:	str	xzr, [x8, #8]!
  41eb58:	add	x9, x15, #0x28
  41eb5c:	stp	xzr, xzr, [x8, #8]
  41eb60:	ldr	q0, [x9]
  41eb64:	stp	xzr, xzr, [x8, #24]
  41eb68:	str	x28, [x8, #56]
  41eb6c:	stur	q0, [x8, #40]
  41eb70:	ldr	w9, [x8, #48]
  41eb74:	and	w9, w9, #0xfff3ffff
  41eb78:	str	w9, [x8, #48]
  41eb7c:	str	x8, [x27]
  41eb80:	b	41eb0c <_obstack_memory_used@@Base+0x75f0>
  41eb84:	ldr	x15, [x8]
  41eb88:	ldr	x14, [x14]
  41eb8c:	cbz	x15, 41ebf8 <_obstack_memory_used@@Base+0x76dc>
  41eb90:	mov	x9, x8
  41eb94:	mov	x8, x15
  41eb98:	ldr	x15, [x15, #16]
  41eb9c:	cmp	x15, x9
  41eba0:	b.eq	41eb84 <_obstack_memory_used@@Base+0x7668>  // b.none
  41eba4:	cbz	x15, 41eb84 <_obstack_memory_used@@Base+0x7668>
  41eba8:	add	x27, x14, #0x10
  41ebac:	ldr	w8, [x25]
  41ebb0:	cmp	w8, #0xf
  41ebb4:	b.ne	41eb40 <_obstack_memory_used@@Base+0x7624>  // b.any
  41ebb8:	mov	w0, #0x3c8                 	// #968
  41ebbc:	str	x15, [sp, #16]
  41ebc0:	mov	x24, x14
  41ebc4:	bl	402730 <malloc@plt>
  41ebc8:	cbz	x0, 41ec9c <_obstack_memory_used@@Base+0x7780>
  41ebcc:	ldr	x9, [x26]
  41ebd0:	ldr	x12, [sp, #56]
  41ebd4:	ldr	x15, [sp, #16]
  41ebd8:	mov	w8, wzr
  41ebdc:	mov	w13, #0xa                   	// #10
  41ebe0:	mov	w11, #0x10                  	// #16
  41ebe4:	mov	x14, x24
  41ebe8:	str	x9, [x0]
  41ebec:	str	x0, [x26]
  41ebf0:	str	wzr, [x25]
  41ebf4:	b	41eb44 <_obstack_memory_used@@Base+0x7628>
  41ebf8:	ldr	w8, [x25]
  41ebfc:	cmp	w8, #0xf
  41ec00:	b.eq	41eca4 <_obstack_memory_used@@Base+0x7788>  // b.none
  41ec04:	ldr	x0, [x26]
  41ec08:	mov	x15, x20
  41ec0c:	add	w9, w8, #0x1
  41ec10:	sxtw	x8, w8
  41ec14:	add	x14, x0, x8, lsl #6
  41ec18:	str	w9, [x25]
  41ec1c:	str	xzr, [x14, #8]!
  41ec20:	stp	x19, x15, [x14, #8]
  41ec24:	stp	xzr, xzr, [x14, #32]
  41ec28:	str	w11, [x14, #48]
  41ec2c:	str	xzr, [x14, #24]
  41ec30:	str	x28, [x14, #56]
  41ec34:	str	x14, [x19]
  41ec38:	cbz	x15, 41eee4 <_obstack_memory_used@@Base+0x79c8>
  41ec3c:	cmp	x21, x22
  41ec40:	add	x21, x21, #0x1
  41ec44:	mov	x19, x14
  41ec48:	str	x14, [x15]
  41ec4c:	b.ne	41eab8 <_obstack_memory_used@@Base+0x759c>  // b.any
  41ec50:	b	41ea3c <_obstack_memory_used@@Base+0x7520>
  41ec54:	mov	w0, #0x3c8                 	// #968
  41ec58:	mov	x24, x15
  41ec5c:	mov	x20, x14
  41ec60:	bl	402730 <malloc@plt>
  41ec64:	cbz	x0, 41ec94 <_obstack_memory_used@@Base+0x7778>
  41ec68:	ldr	x9, [x26]
  41ec6c:	ldr	x12, [sp, #56]
  41ec70:	mov	w8, wzr
  41ec74:	mov	w13, #0xa                   	// #10
  41ec78:	mov	w11, #0x10                  	// #16
  41ec7c:	mov	x14, x20
  41ec80:	mov	x15, x24
  41ec84:	str	x9, [x0]
  41ec88:	str	x0, [x26]
  41ec8c:	str	wzr, [x25]
  41ec90:	b	41eac8 <_obstack_memory_used@@Base+0x75ac>
  41ec94:	str	xzr, [sp, #80]
  41ec98:	b	41eca0 <_obstack_memory_used@@Base+0x7784>
  41ec9c:	str	xzr, [x27]
  41eca0:	mov	x20, xzr
  41eca4:	mov	w0, #0x3c8                 	// #968
  41eca8:	bl	402730 <malloc@plt>
  41ecac:	ldr	x12, [sp, #56]
  41ecb0:	mov	w13, #0xa                   	// #10
  41ecb4:	mov	w11, #0x10                  	// #16
  41ecb8:	cbz	x0, 41eee4 <_obstack_memory_used@@Base+0x79c8>
  41ecbc:	ldr	x9, [x26]
  41ecc0:	mov	x15, x20
  41ecc4:	mov	w8, wzr
  41ecc8:	str	x9, [x0]
  41eccc:	str	x0, [x26]
  41ecd0:	str	wzr, [x25]
  41ecd4:	b	41ec0c <_obstack_memory_used@@Base+0x76f0>
  41ecd8:	ldr	x8, [sp, #24]
  41ecdc:	mov	x14, xzr
  41ece0:	mov	w23, #0x1                   	// #1
  41ece4:	str	w11, [x8]
  41ece8:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41ecec:	mov	w0, #0x3c8                 	// #968
  41ecf0:	mov	x19, x14
  41ecf4:	bl	402730 <malloc@plt>
  41ecf8:	cbz	x0, 41ee70 <_obstack_memory_used@@Base+0x7954>
  41ecfc:	ldr	x9, [x26]
  41ed00:	ldr	x12, [sp, #56]
  41ed04:	mov	w8, wzr
  41ed08:	mov	w11, #0x10                  	// #16
  41ed0c:	mov	x14, x19
  41ed10:	str	x9, [x0]
  41ed14:	str	x0, [x26]
  41ed18:	str	wzr, [x25]
  41ed1c:	b	41e938 <_obstack_memory_used@@Base+0x741c>
  41ed20:	mov	x20, x15
  41ed24:	ldr	x19, [x20], #40
  41ed28:	ldr	w8, [x25]
  41ed2c:	cmp	w8, #0xf
  41ed30:	b.eq	41ee98 <_obstack_memory_used@@Base+0x797c>  // b.none
  41ed34:	ldr	x0, [x26]
  41ed38:	add	w9, w8, #0x1
  41ed3c:	sxtw	x8, w8
  41ed40:	add	x21, x0, x8, lsl #6
  41ed44:	str	w9, [x25]
  41ed48:	str	xzr, [x21, #8]!
  41ed4c:	stp	xzr, xzr, [x21, #8]
  41ed50:	ldr	q0, [x20]
  41ed54:	add	x20, sp, #0x50
  41ed58:	stp	xzr, xzr, [x21, #24]
  41ed5c:	str	x28, [x21, #56]
  41ed60:	stur	q0, [x21, #40]
  41ed64:	ldr	w8, [x21, #48]
  41ed68:	and	w8, w8, #0xfff3ffff
  41ed6c:	str	w8, [x21, #48]
  41ed70:	mov	x8, x21
  41ed74:	str	x21, [sp, #80]
  41ed78:	str	x19, [x8]
  41ed7c:	ldr	x8, [x20]
  41ed80:	ldr	w9, [x8, #48]
  41ed84:	orr	w9, w9, #0x40000
  41ed88:	str	w9, [x8, #48]
  41ed8c:	ldr	x8, [x15, #8]
  41ed90:	ldr	x19, [x20]
  41ed94:	cbz	x8, 41edb0 <_obstack_memory_used@@Base+0x7894>
  41ed98:	add	x20, x19, #0x8
  41ed9c:	mov	x15, x8
  41eda0:	b	41edcc <_obstack_memory_used@@Base+0x78b0>
  41eda4:	ldr	x15, [x8]
  41eda8:	ldr	x19, [x19]
  41edac:	cbz	x15, 41e5bc <_obstack_memory_used@@Base+0x70a0>
  41edb0:	mov	x9, x8
  41edb4:	mov	x8, x15
  41edb8:	ldr	x15, [x15, #16]
  41edbc:	cmp	x15, x9
  41edc0:	b.eq	41eda4 <_obstack_memory_used@@Base+0x7888>  // b.none
  41edc4:	cbz	x15, 41eda4 <_obstack_memory_used@@Base+0x7888>
  41edc8:	add	x20, x19, #0x10
  41edcc:	ldr	w8, [x25]
  41edd0:	cmp	w8, #0xf
  41edd4:	b.eq	41ee1c <_obstack_memory_used@@Base+0x7900>  // b.none
  41edd8:	ldr	x0, [x26]
  41eddc:	add	w10, w8, #0x1
  41ede0:	sxtw	x8, w8
  41ede4:	add	x8, x0, x8, lsl #6
  41ede8:	str	w10, [x25]
  41edec:	str	xzr, [x8, #8]!
  41edf0:	add	x9, x15, #0x28
  41edf4:	stp	xzr, xzr, [x8, #8]
  41edf8:	ldr	q0, [x9]
  41edfc:	stp	xzr, xzr, [x8, #24]
  41ee00:	str	x28, [x8, #56]
  41ee04:	stur	q0, [x8, #40]
  41ee08:	ldr	w9, [x8, #48]
  41ee0c:	and	w9, w9, #0xfff3ffff
  41ee10:	str	w9, [x8, #48]
  41ee14:	str	x8, [x20]
  41ee18:	b	41ed78 <_obstack_memory_used@@Base+0x785c>
  41ee1c:	mov	w0, #0x3c8                 	// #968
  41ee20:	mov	x27, x15
  41ee24:	mov	x24, x14
  41ee28:	bl	402730 <malloc@plt>
  41ee2c:	cbz	x0, 41eedc <_obstack_memory_used@@Base+0x79c0>
  41ee30:	ldr	x9, [x26]
  41ee34:	ldr	x12, [sp, #56]
  41ee38:	mov	w8, wzr
  41ee3c:	mov	w13, #0xa                   	// #10
  41ee40:	mov	x14, x24
  41ee44:	mov	x15, x27
  41ee48:	str	x9, [x0]
  41ee4c:	str	x0, [x26]
  41ee50:	str	wzr, [x25]
  41ee54:	b	41eddc <_obstack_memory_used@@Base+0x78c0>
  41ee58:	ldr	x8, [sp, #24]
  41ee5c:	mov	w9, #0xf                   	// #15
  41ee60:	mov	x14, xzr
  41ee64:	mov	w23, #0x1                   	// #1
  41ee68:	str	w9, [x8]
  41ee6c:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41ee70:	ldr	x12, [sp, #56]
  41ee74:	mov	x14, xzr
  41ee78:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41ee7c:	ldr	x9, [sp, #24]
  41ee80:	cmp	w8, #0x2
  41ee84:	mov	w8, #0x9                   	// #9
  41ee88:	cinc	w8, w8, ne  // ne = any
  41ee8c:	mov	x14, xzr
  41ee90:	str	w8, [x9]
  41ee94:	b	41eefc <_obstack_memory_used@@Base+0x79e0>
  41ee98:	mov	w0, #0x3c8                 	// #968
  41ee9c:	mov	x24, x15
  41eea0:	mov	x21, x14
  41eea4:	bl	402730 <malloc@plt>
  41eea8:	cbz	x0, 41eed4 <_obstack_memory_used@@Base+0x79b8>
  41eeac:	ldr	x9, [x26]
  41eeb0:	ldr	x12, [sp, #56]
  41eeb4:	mov	w8, wzr
  41eeb8:	mov	w13, #0xa                   	// #10
  41eebc:	mov	x14, x21
  41eec0:	mov	x15, x24
  41eec4:	str	x9, [x0]
  41eec8:	str	x0, [x26]
  41eecc:	str	wzr, [x25]
  41eed0:	b	41ed38 <_obstack_memory_used@@Base+0x781c>
  41eed4:	str	xzr, [sp, #80]
  41eed8:	b	41eee0 <_obstack_memory_used@@Base+0x79c4>
  41eedc:	str	xzr, [x20]
  41eee0:	ldr	x12, [sp, #56]
  41eee4:	ldp	x8, x20, [sp, #24]
  41eee8:	ldr	x21, [sp, #40]
  41eeec:	mov	w9, #0xc                   	// #12
  41eef0:	mov	x14, xzr
  41eef4:	str	w9, [x8]
  41eef8:	mov	w23, #0x1                   	// #1
  41eefc:	cmp	x14, #0x0
  41ef00:	cset	w8, eq  // eq = none
  41ef04:	cbnz	x14, 41ef14 <_obstack_memory_used@@Base+0x79f8>
  41ef08:	ldr	x9, [sp, #24]
  41ef0c:	ldr	w9, [x9]
  41ef10:	cbnz	w9, 41f188 <_obstack_memory_used@@Base+0x7c6c>
  41ef14:	mov	x24, x14
  41ef18:	tbz	w21, #24, 41e354 <_obstack_memory_used@@Base+0x6e38>
  41ef1c:	ldrb	w9, [x12, #8]
  41ef20:	cmp	w9, #0x17
  41ef24:	b.eq	41ef34 <_obstack_memory_used@@Base+0x7a18>  // b.none
  41ef28:	cmp	w9, #0xb
  41ef2c:	mov	x24, x14
  41ef30:	b.ne	41e354 <_obstack_memory_used@@Base+0x6e38>  // b.any
  41ef34:	ldr	x22, [sp, #24]
  41ef38:	tbz	w8, #0, 41ef74 <_obstack_memory_used@@Base+0x7a58>
  41ef3c:	mov	x24, xzr
  41ef40:	mov	w8, #0xd                   	// #13
  41ef44:	str	w8, [x22]
  41ef48:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41ef4c:	ldr	x24, [sp, #48]
  41ef50:	mov	x0, x24
  41ef54:	ldp	x20, x19, [sp, #272]
  41ef58:	ldp	x22, x21, [sp, #256]
  41ef5c:	ldp	x24, x23, [sp, #240]
  41ef60:	ldp	x26, x25, [sp, #224]
  41ef64:	ldp	x28, x27, [sp, #208]
  41ef68:	ldp	x29, x30, [sp, #192]
  41ef6c:	add	sp, sp, #0x120
  41ef70:	ret
  41ef74:	mov	w19, #0xff                  	// #255
  41ef78:	movk	w19, #0x4, lsl #16
  41ef7c:	mov	x21, x14
  41ef80:	ldr	x14, [x14, #8]
  41ef84:	cbnz	x14, 41ef7c <_obstack_memory_used@@Base+0x7a60>
  41ef88:	ldr	x14, [x21, #16]
  41ef8c:	cbnz	x14, 41ef7c <_obstack_memory_used@@Base+0x7a60>
  41ef90:	ldr	w8, [x21, #48]
  41ef94:	and	w8, w8, w19
  41ef98:	cmp	w8, #0x3
  41ef9c:	b.eq	41efd0 <_obstack_memory_used@@Base+0x7ab4>  // b.none
  41efa0:	cmp	w8, #0x6
  41efa4:	b.ne	41efdc <_obstack_memory_used@@Base+0x7ac0>  // b.any
  41efa8:	ldr	x20, [x21, #40]
  41efac:	ldr	x0, [x20]
  41efb0:	bl	402a10 <free@plt>
  41efb4:	ldr	x0, [x20, #8]
  41efb8:	bl	402a10 <free@plt>
  41efbc:	ldr	x0, [x20, #16]
  41efc0:	bl	402a10 <free@plt>
  41efc4:	ldr	x0, [x20, #24]
  41efc8:	bl	402a10 <free@plt>
  41efcc:	b	41efd4 <_obstack_memory_used@@Base+0x7ab8>
  41efd0:	ldr	x20, [x21, #40]
  41efd4:	mov	x0, x20
  41efd8:	bl	402a10 <free@plt>
  41efdc:	ldr	x8, [x21]
  41efe0:	cbz	x8, 41ef3c <_obstack_memory_used@@Base+0x7a20>
  41efe4:	ldr	x14, [x8, #16]
  41efe8:	cmp	x14, x21
  41efec:	mov	x21, x8
  41eff0:	b.eq	41ef90 <_obstack_memory_used@@Base+0x7a74>  // b.none
  41eff4:	mov	x21, x8
  41eff8:	cbz	x14, 41ef90 <_obstack_memory_used@@Base+0x7a74>
  41effc:	b	41ef7c <_obstack_memory_used@@Base+0x7a60>
  41f000:	mov	w8, #0x5                   	// #5
  41f004:	str	w8, [x14]
  41f008:	ldr	w8, [x23, #128]
  41f00c:	ldr	x21, [sp, #40]
  41f010:	cmp	w8, #0xf
  41f014:	b.eq	41f4bc <_obstack_memory_used@@Base+0x7fa0>  // b.none
  41f018:	ldr	x0, [x23, #112]
  41f01c:	add	w9, w8, #0x1
  41f020:	sxtw	x8, w8
  41f024:	add	x19, x0, x8, lsl #6
  41f028:	str	w9, [x23, #128]
  41f02c:	str	xzr, [x19, #8]!
  41f030:	stp	xzr, xzr, [x19, #8]
  41f034:	ldr	q0, [x14]
  41f038:	mov	x8, #0xffffffffffffffff    	// #-1
  41f03c:	str	x8, [x19, #56]
  41f040:	stp	xzr, xzr, [x19, #24]
  41f044:	stur	q0, [x19, #40]
  41f048:	ldr	w9, [x19, #48]
  41f04c:	and	w8, w9, #0xfff3ffff
  41f050:	str	w8, [x19, #48]
  41f054:	mov	w8, #0xa                   	// #10
  41f058:	str	w8, [x14]
  41f05c:	ldr	w8, [x23, #128]
  41f060:	cmp	w8, #0xf
  41f064:	b.eq	41d7f8 <_obstack_memory_used@@Base+0x62dc>  // b.none
  41f068:	ldr	x0, [x23, #112]
  41f06c:	add	w9, w8, #0x1
  41f070:	sxtw	x8, w8
  41f074:	add	x20, x0, x8, lsl #6
  41f078:	str	w9, [x23, #128]
  41f07c:	str	xzr, [x20, #8]!
  41f080:	stp	xzr, xzr, [x20, #8]
  41f084:	ldr	q0, [x14]
  41f088:	mov	x9, #0xffffffffffffffff    	// #-1
  41f08c:	stp	xzr, xzr, [x20, #24]
  41f090:	str	x9, [x20, #56]
  41f094:	stur	q0, [x20, #40]
  41f098:	ldr	w8, [x20, #48]
  41f09c:	and	w8, w8, #0xfff3ffff
  41f0a0:	str	w8, [x20, #48]
  41f0a4:	ldr	w8, [x23, #128]
  41f0a8:	cmp	w8, #0xf
  41f0ac:	b.eq	41f5b0 <_obstack_memory_used@@Base+0x8094>  // b.none
  41f0b0:	ldr	x0, [x23, #112]
  41f0b4:	add	w9, w8, #0x1
  41f0b8:	sxtw	x8, w8
  41f0bc:	add	x24, x0, x8, lsl #6
  41f0c0:	mov	w10, #0xa                   	// #10
  41f0c4:	mov	x11, #0xffffffffffffffff    	// #-1
  41f0c8:	str	w9, [x23, #128]
  41f0cc:	str	xzr, [x24, #8]!
  41f0d0:	stp	x19, x20, [x24, #8]
  41f0d4:	stp	xzr, xzr, [x24, #32]
  41f0d8:	str	w10, [x24, #48]
  41f0dc:	str	xzr, [x24, #24]
  41f0e0:	str	x11, [x24, #56]
  41f0e4:	cbz	x19, 41f0ec <_obstack_memory_used@@Base+0x7bd0>
  41f0e8:	str	x24, [x19]
  41f0ec:	cbz	x20, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f0f0:	str	x24, [x20]
  41f0f4:	cbnz	x19, 41f144 <_obstack_memory_used@@Base+0x7c28>
  41f0f8:	b	41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f0fc:	ldr	w8, [x23, #128]
  41f100:	cmp	w8, #0xf
  41f104:	b.eq	41f4e8 <_obstack_memory_used@@Base+0x7fcc>  // b.none
  41f108:	ldr	x0, [x23, #112]
  41f10c:	add	w9, w8, #0x1
  41f110:	sxtw	x8, w8
  41f114:	add	x24, x0, x8, lsl #6
  41f118:	str	w9, [x23, #128]
  41f11c:	str	xzr, [x24, #8]!
  41f120:	stp	xzr, xzr, [x24, #8]
  41f124:	ldr	q0, [x14]
  41f128:	mov	x9, #0xffffffffffffffff    	// #-1
  41f12c:	stp	xzr, xzr, [x24, #24]
  41f130:	str	x9, [x24, #56]
  41f134:	stur	q0, [x24, #40]
  41f138:	ldr	w8, [x24, #48]
  41f13c:	and	w8, w8, #0xfff3ffff
  41f140:	str	w8, [x24, #48]
  41f144:	ldr	x19, [sp, #32]
  41f148:	mov	x0, x14
  41f14c:	mov	x2, x21
  41f150:	mov	x1, x19
  41f154:	bl	41cc64 <_obstack_memory_used@@Base+0x5748>
  41f158:	ldr	x8, [x19, #72]
  41f15c:	add	x8, x8, w0, sxtw
  41f160:	str	x8, [x19, #72]
  41f164:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41f168:	ldrb	w8, [x20, #8]
  41f16c:	mov	x25, x0
  41f170:	cmp	w8, #0x9
  41f174:	b.ne	41f5e8 <_obstack_memory_used@@Base+0x80cc>  // b.any
  41f178:	mov	x14, x20
  41f17c:	cmp	x19, #0x8
  41f180:	b.ls	41db80 <_obstack_memory_used@@Base+0x6664>  // b.plast
  41f184:	b	41db98 <_obstack_memory_used@@Base+0x667c>
  41f188:	ldr	x9, [sp, #48]
  41f18c:	cbz	x9, 41dca0 <_obstack_memory_used@@Base+0x6784>
  41f190:	mov	w20, #0xff                  	// #255
  41f194:	movk	w20, #0x4, lsl #16
  41f198:	mov	x21, x9
  41f19c:	ldr	x9, [x9, #8]
  41f1a0:	cbnz	x9, 41f198 <_obstack_memory_used@@Base+0x7c7c>
  41f1a4:	ldr	x9, [x21, #16]
  41f1a8:	cbnz	x9, 41f198 <_obstack_memory_used@@Base+0x7c7c>
  41f1ac:	ldr	w8, [x21, #48]
  41f1b0:	and	w8, w8, w20
  41f1b4:	cmp	w8, #0x3
  41f1b8:	b.eq	41f1ec <_obstack_memory_used@@Base+0x7cd0>  // b.none
  41f1bc:	cmp	w8, #0x6
  41f1c0:	b.ne	41f1f8 <_obstack_memory_used@@Base+0x7cdc>  // b.any
  41f1c4:	ldr	x19, [x21, #40]
  41f1c8:	ldr	x0, [x19]
  41f1cc:	bl	402a10 <free@plt>
  41f1d0:	ldr	x0, [x19, #8]
  41f1d4:	bl	402a10 <free@plt>
  41f1d8:	ldr	x0, [x19, #16]
  41f1dc:	bl	402a10 <free@plt>
  41f1e0:	ldr	x0, [x19, #24]
  41f1e4:	bl	402a10 <free@plt>
  41f1e8:	b	41f1f0 <_obstack_memory_used@@Base+0x7cd4>
  41f1ec:	ldr	x19, [x21, #40]
  41f1f0:	mov	x0, x19
  41f1f4:	bl	402a10 <free@plt>
  41f1f8:	ldr	x8, [x21]
  41f1fc:	cbz	x8, 41dca0 <_obstack_memory_used@@Base+0x6784>
  41f200:	ldr	x9, [x8, #16]
  41f204:	cmp	x9, x21
  41f208:	mov	x21, x8
  41f20c:	b.eq	41f1ac <_obstack_memory_used@@Base+0x7c90>  // b.none
  41f210:	mov	x21, x8
  41f214:	cbz	x9, 41f1ac <_obstack_memory_used@@Base+0x7c90>
  41f218:	b	41f198 <_obstack_memory_used@@Base+0x7c7c>
  41f21c:	cmp	w8, #0x2
  41f220:	b.lt	41f234 <_obstack_memory_used@@Base+0x7d18>  // b.tstop
  41f224:	ldr	x8, [x24, #72]
  41f228:	cbnz	x8, 41e228 <_obstack_memory_used@@Base+0x6d0c>
  41f22c:	ldrb	w8, [x24, #32]
  41f230:	tbnz	w8, #0, 41e228 <_obstack_memory_used@@Base+0x6d0c>
  41f234:	ldr	x0, [x24]
  41f238:	bl	402a10 <free@plt>
  41f23c:	ldr	x0, [x24, #8]
  41f240:	bl	402a10 <free@plt>
  41f244:	ldr	x0, [x24, #16]
  41f248:	bl	402a10 <free@plt>
  41f24c:	ldr	x0, [x24, #24]
  41f250:	bl	402a10 <free@plt>
  41f254:	mov	x0, x24
  41f258:	bl	402a10 <free@plt>
  41f25c:	ldr	w8, [x23, #128]
  41f260:	cmp	w8, #0xf
  41f264:	b.eq	41f6c0 <_obstack_memory_used@@Base+0x81a4>  // b.none
  41f268:	ldr	x0, [x23, #112]
  41f26c:	ldr	x14, [sp, #56]
  41f270:	add	w9, w8, #0x1
  41f274:	sxtw	x8, w8
  41f278:	add	x24, x0, x8, lsl #6
  41f27c:	mov	w10, #0x3                   	// #3
  41f280:	mov	x11, #0xffffffffffffffff    	// #-1
  41f284:	str	w9, [x23, #128]
  41f288:	str	xzr, [x24, #8]!
  41f28c:	stp	xzr, xzr, [x24, #16]
  41f290:	str	xzr, [x24, #8]
  41f294:	str	w10, [x24, #48]
  41f298:	stp	xzr, x25, [x24, #32]
  41f29c:	str	x11, [x24, #56]
  41f2a0:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41f2a4:	mov	x0, x25
  41f2a8:	bl	402a10 <free@plt>
  41f2ac:	ldr	x14, [sp, #56]
  41f2b0:	mov	x24, x19
  41f2b4:	b	41e31c <_obstack_memory_used@@Base+0x6e00>
  41f2b8:	str	x28, [sp, #24]
  41f2bc:	mov	w0, #0x7                   	// #7
  41f2c0:	b	41f41c <_obstack_memory_used@@Base+0x7f00>
  41f2c4:	str	x28, [sp, #24]
  41f2c8:	b	41f41c <_obstack_memory_used@@Base+0x7f00>
  41f2cc:	mov	w0, #0x3c8                 	// #968
  41f2d0:	bl	402730 <malloc@plt>
  41f2d4:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f2d8:	ldr	x9, [x23, #112]
  41f2dc:	ldr	x14, [sp, #56]
  41f2e0:	mov	w8, wzr
  41f2e4:	str	x9, [x0]
  41f2e8:	str	x0, [x23, #112]
  41f2ec:	str	wzr, [x23, #128]
  41f2f0:	b	41d708 <_obstack_memory_used@@Base+0x61ec>
  41f2f4:	mov	w8, #0x2                   	// #2
  41f2f8:	b	41f6e8 <_obstack_memory_used@@Base+0x81cc>
  41f2fc:	mov	x0, x25
  41f300:	bl	402a10 <free@plt>
  41f304:	mov	x0, x24
  41f308:	bl	402a10 <free@plt>
  41f30c:	b	41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f310:	mov	w0, #0x3c8                 	// #968
  41f314:	bl	402730 <malloc@plt>
  41f318:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f31c:	ldr	x9, [x23, #112]
  41f320:	ldr	x10, [sp, #32]
  41f324:	ldr	x14, [sp, #56]
  41f328:	mov	w8, wzr
  41f32c:	str	x9, [x0]
  41f330:	str	x0, [x23, #112]
  41f334:	str	wzr, [x23, #128]
  41f338:	b	41d8a4 <_obstack_memory_used@@Base+0x6388>
  41f33c:	mov	w8, #0x6                   	// #6
  41f340:	mov	x24, xzr
  41f344:	str	w8, [x28]
  41f348:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41f34c:	mov	w0, #0x3c8                 	// #968
  41f350:	bl	402730 <malloc@plt>
  41f354:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f358:	ldr	x9, [x23, #112]
  41f35c:	ldr	x14, [sp, #56]
  41f360:	mov	w8, wzr
  41f364:	str	x9, [x0]
  41f368:	str	x0, [x23, #112]
  41f36c:	str	wzr, [x23, #128]
  41f370:	b	41dae0 <_obstack_memory_used@@Base+0x65c4>
  41f374:	mov	w0, #0x3c8                 	// #968
  41f378:	bl	402730 <malloc@plt>
  41f37c:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f380:	ldr	x9, [x23, #112]
  41f384:	ldr	x14, [sp, #56]
  41f388:	mov	w8, wzr
  41f38c:	str	x9, [x0]
  41f390:	str	x0, [x23, #112]
  41f394:	str	wzr, [x23, #128]
  41f398:	b	41da7c <_obstack_memory_used@@Base+0x6560>
  41f39c:	mov	w0, #0x3c8                 	// #968
  41f3a0:	bl	402730 <malloc@plt>
  41f3a4:	cbz	x0, 41f6e4 <_obstack_memory_used@@Base+0x81c8>
  41f3a8:	ldr	x9, [x23, #112]
  41f3ac:	ldr	x14, [sp, #56]
  41f3b0:	mov	w8, wzr
  41f3b4:	str	x9, [x0]
  41f3b8:	str	x0, [x23, #112]
  41f3bc:	str	wzr, [x23, #128]
  41f3c0:	b	41e244 <_obstack_memory_used@@Base+0x6d28>
  41f3c4:	mov	w0, #0x3c8                 	// #968
  41f3c8:	bl	402730 <malloc@plt>
  41f3cc:	cbz	x0, 41f6e4 <_obstack_memory_used@@Base+0x81c8>
  41f3d0:	ldr	x9, [x23, #112]
  41f3d4:	ldr	x14, [sp, #56]
  41f3d8:	mov	w8, wzr
  41f3dc:	str	x9, [x0]
  41f3e0:	str	x0, [x23, #112]
  41f3e4:	str	wzr, [x23, #128]
  41f3e8:	b	41e2a4 <_obstack_memory_used@@Base+0x6d88>
  41f3ec:	mov	w0, #0x3c8                 	// #968
  41f3f0:	bl	402730 <malloc@plt>
  41f3f4:	cbz	x0, 41f6e4 <_obstack_memory_used@@Base+0x81c8>
  41f3f8:	ldr	x9, [x23, #112]
  41f3fc:	ldr	x14, [sp, #56]
  41f400:	mov	w8, wzr
  41f404:	str	x9, [x0]
  41f408:	str	x0, [x23, #112]
  41f40c:	str	wzr, [x23, #128]
  41f410:	b	41e2e4 <_obstack_memory_used@@Base+0x6dc8>
  41f414:	str	x28, [sp, #24]
  41f418:	mov	w0, #0x3                   	// #3
  41f41c:	ldr	x28, [sp, #24]
  41f420:	str	w0, [x28]
  41f424:	mov	x0, x25
  41f428:	bl	402a10 <free@plt>
  41f42c:	ldr	x0, [x24]
  41f430:	bl	402a10 <free@plt>
  41f434:	ldr	x0, [x24, #8]
  41f438:	bl	402a10 <free@plt>
  41f43c:	ldr	x0, [x24, #16]
  41f440:	bl	402a10 <free@plt>
  41f444:	ldr	x0, [x24, #24]
  41f448:	bl	402a10 <free@plt>
  41f44c:	mov	x0, x24
  41f450:	bl	402a10 <free@plt>
  41f454:	ldr	w8, [x28]
  41f458:	ldr	x14, [sp, #56]
  41f45c:	mov	x24, xzr
  41f460:	cbz	w8, 41e31c <_obstack_memory_used@@Base+0x6e00>
  41f464:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41f468:	mov	w0, #0x3c8                 	// #968
  41f46c:	bl	402730 <malloc@plt>
  41f470:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f474:	ldr	x9, [x23, #112]
  41f478:	ldr	x14, [sp, #56]
  41f47c:	mov	w8, wzr
  41f480:	str	x9, [x0]
  41f484:	str	x0, [x23, #112]
  41f488:	str	wzr, [x23, #128]
  41f48c:	b	41dba8 <_obstack_memory_used@@Base+0x668c>
  41f490:	mov	w0, #0x3c8                 	// #968
  41f494:	bl	402730 <malloc@plt>
  41f498:	cbz	x0, 41f690 <_obstack_memory_used@@Base+0x8174>
  41f49c:	ldr	x9, [x23, #112]
  41f4a0:	ldr	x21, [sp, #40]
  41f4a4:	ldr	x14, [sp, #56]
  41f4a8:	mov	w8, wzr
  41f4ac:	str	x9, [x0]
  41f4b0:	str	x0, [x23, #112]
  41f4b4:	str	wzr, [x23, #128]
  41f4b8:	b	41d7ac <_obstack_memory_used@@Base+0x6290>
  41f4bc:	mov	w0, #0x3c8                 	// #968
  41f4c0:	bl	402730 <malloc@plt>
  41f4c4:	cbz	x0, 41f69c <_obstack_memory_used@@Base+0x8180>
  41f4c8:	ldr	x9, [x23, #112]
  41f4cc:	ldr	x21, [sp, #40]
  41f4d0:	ldr	x14, [sp, #56]
  41f4d4:	mov	w8, wzr
  41f4d8:	str	x9, [x0]
  41f4dc:	str	x0, [x23, #112]
  41f4e0:	str	wzr, [x23, #128]
  41f4e4:	b	41f01c <_obstack_memory_used@@Base+0x7b00>
  41f4e8:	mov	w0, #0x3c8                 	// #968
  41f4ec:	bl	402730 <malloc@plt>
  41f4f0:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f4f4:	ldr	x9, [x23, #112]
  41f4f8:	ldr	x21, [sp, #40]
  41f4fc:	ldr	x14, [sp, #56]
  41f500:	mov	w8, wzr
  41f504:	str	x9, [x0]
  41f508:	str	x0, [x23, #112]
  41f50c:	str	wzr, [x23, #128]
  41f510:	b	41f10c <_obstack_memory_used@@Base+0x7bf0>
  41f514:	mov	x20, xzr
  41f518:	mov	x19, xzr
  41f51c:	b	41f528 <_obstack_memory_used@@Base+0x800c>
  41f520:	mov	w19, #0x2                   	// #2
  41f524:	mov	w20, #0x80                  	// #128
  41f528:	bl	4029e0 <__ctype_b_loc@plt>
  41f52c:	ldr	x8, [x0]
  41f530:	ldr	x14, [sp, #56]
  41f534:	mov	w9, #0x1                   	// #1
  41f538:	add	x8, x8, x20, lsl #1
  41f53c:	b	41f554 <_obstack_memory_used@@Base+0x8038>
  41f540:	add	x19, x19, #0x1
  41f544:	add	x20, x20, #0x40
  41f548:	cmp	x19, #0x4
  41f54c:	add	x8, x8, #0x80
  41f550:	b.eq	41d77c <_obstack_memory_used@@Base+0x6260>  // b.none
  41f554:	add	x11, x23, x19, lsl #3
  41f558:	mov	x10, xzr
  41f55c:	add	x11, x11, #0xb8
  41f560:	b	41f580 <_obstack_memory_used@@Base+0x8064>
  41f564:	ldr	x12, [x11]
  41f568:	lsl	x13, x9, x10
  41f56c:	orr	x12, x12, x13
  41f570:	str	x12, [x11]
  41f574:	add	x10, x10, #0x1
  41f578:	cmp	x10, #0x40
  41f57c:	b.eq	41f540 <_obstack_memory_used@@Base+0x8024>  // b.none
  41f580:	add	x12, x20, x10
  41f584:	cmp	x12, #0x5f
  41f588:	b.eq	41f564 <_obstack_memory_used@@Base+0x8048>  // b.none
  41f58c:	ldrh	w12, [x8, x10, lsl #1]
  41f590:	tbz	w12, #3, 41f574 <_obstack_memory_used@@Base+0x8058>
  41f594:	b	41f564 <_obstack_memory_used@@Base+0x8048>
  41f598:	ldr	x21, [sp, #40]
  41f59c:	ldr	x14, [sp, #56]
  41f5a0:	mov	x20, xzr
  41f5a4:	ldr	w8, [x23, #128]
  41f5a8:	cmp	w8, #0xf
  41f5ac:	b.ne	41f0b0 <_obstack_memory_used@@Base+0x7b94>  // b.any
  41f5b0:	mov	w0, #0x3c8                 	// #968
  41f5b4:	bl	402730 <malloc@plt>
  41f5b8:	ldr	x14, [sp, #56]
  41f5bc:	cbz	x0, 41f5d8 <_obstack_memory_used@@Base+0x80bc>
  41f5c0:	ldr	x9, [x23, #112]
  41f5c4:	mov	w8, wzr
  41f5c8:	str	x9, [x0]
  41f5cc:	str	x0, [x23, #112]
  41f5d0:	str	wzr, [x23, #128]
  41f5d4:	b	41f0b4 <_obstack_memory_used@@Base+0x7b98>
  41f5d8:	mov	w8, #0xc                   	// #12
  41f5dc:	mov	x24, xzr
  41f5e0:	str	w8, [x28]
  41f5e4:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41f5e8:	cbz	x25, 41f678 <_obstack_memory_used@@Base+0x815c>
  41f5ec:	mov	w19, #0xff                  	// #255
  41f5f0:	movk	w19, #0x4, lsl #16
  41f5f4:	mov	x21, x25
  41f5f8:	ldr	x25, [x25, #8]
  41f5fc:	cbnz	x25, 41f5f4 <_obstack_memory_used@@Base+0x80d8>
  41f600:	ldr	x25, [x21, #16]
  41f604:	cbnz	x25, 41f5f4 <_obstack_memory_used@@Base+0x80d8>
  41f608:	ldr	w8, [x21, #48]
  41f60c:	and	w8, w8, w19
  41f610:	cmp	w8, #0x3
  41f614:	b.eq	41f648 <_obstack_memory_used@@Base+0x812c>  // b.none
  41f618:	cmp	w8, #0x6
  41f61c:	b.ne	41f654 <_obstack_memory_used@@Base+0x8138>  // b.any
  41f620:	ldr	x20, [x21, #40]
  41f624:	ldr	x0, [x20]
  41f628:	bl	402a10 <free@plt>
  41f62c:	ldr	x0, [x20, #8]
  41f630:	bl	402a10 <free@plt>
  41f634:	ldr	x0, [x20, #16]
  41f638:	bl	402a10 <free@plt>
  41f63c:	ldr	x0, [x20, #24]
  41f640:	bl	402a10 <free@plt>
  41f644:	b	41f64c <_obstack_memory_used@@Base+0x8130>
  41f648:	ldr	x20, [x21, #40]
  41f64c:	mov	x0, x20
  41f650:	bl	402a10 <free@plt>
  41f654:	ldr	x8, [x21]
  41f658:	cbz	x8, 41f678 <_obstack_memory_used@@Base+0x815c>
  41f65c:	ldr	x25, [x8, #16]
  41f660:	cmp	x25, x21
  41f664:	mov	x21, x8
  41f668:	b.eq	41f608 <_obstack_memory_used@@Base+0x80ec>  // b.none
  41f66c:	mov	x21, x8
  41f670:	cbz	x25, 41f608 <_obstack_memory_used@@Base+0x80ec>
  41f674:	b	41f5f4 <_obstack_memory_used@@Base+0x80d8>
  41f678:	mov	w8, #0x8                   	// #8
  41f67c:	mov	x24, xzr
  41f680:	str	w8, [x28]
  41f684:	b	41ef50 <_obstack_memory_used@@Base+0x7a34>
  41f688:	mov	w0, #0xb                   	// #11
  41f68c:	b	41f41c <_obstack_memory_used@@Base+0x7f00>
  41f690:	mov	x19, xzr
  41f694:	mov	w8, #0x9                   	// #9
  41f698:	b	41f6a4 <_obstack_memory_used@@Base+0x8188>
  41f69c:	mov	x19, xzr
  41f6a0:	mov	w8, #0xa                   	// #10
  41f6a4:	ldr	x21, [sp, #40]
  41f6a8:	ldr	x14, [sp, #56]
  41f6ac:	str	w8, [x14]
  41f6b0:	ldr	w8, [x23, #128]
  41f6b4:	cmp	w8, #0xf
  41f6b8:	b.ne	41f068 <_obstack_memory_used@@Base+0x7b4c>  // b.any
  41f6bc:	b	41d7f8 <_obstack_memory_used@@Base+0x62dc>
  41f6c0:	mov	w0, #0x3c8                 	// #968
  41f6c4:	bl	402730 <malloc@plt>
  41f6c8:	cbz	x0, 41f6e4 <_obstack_memory_used@@Base+0x81c8>
  41f6cc:	ldr	x9, [x23, #112]
  41f6d0:	mov	w8, wzr
  41f6d4:	str	x9, [x0]
  41f6d8:	str	x0, [x23, #112]
  41f6dc:	str	wzr, [x23, #128]
  41f6e0:	b	41f26c <_obstack_memory_used@@Base+0x7d50>
  41f6e4:	mov	w8, #0xc                   	// #12
  41f6e8:	str	w8, [x28]
  41f6ec:	b	41f424 <_obstack_memory_used@@Base+0x7f08>
  41f6f0:	mov	x0, x22
  41f6f4:	bl	402a10 <free@plt>
  41f6f8:	ldr	x0, [sp]
  41f6fc:	bl	402a10 <free@plt>
  41f700:	mov	w0, #0xc                   	// #12
  41f704:	b	41f41c <_obstack_memory_used@@Base+0x7f00>
  41f708:	sub	sp, sp, #0x60
  41f70c:	stp	x26, x25, [sp, #32]
  41f710:	stp	x20, x19, [sp, #80]
  41f714:	mov	x26, x1
  41f718:	mov	x20, x0
  41f71c:	mov	w0, #0x20                  	// #32
  41f720:	mov	w1, #0x1                   	// #1
  41f724:	stp	x29, x30, [sp, #16]
  41f728:	stp	x24, x23, [sp, #48]
  41f72c:	stp	x22, x21, [sp, #64]
  41f730:	add	x29, sp, #0x10
  41f734:	mov	x21, x5
  41f738:	mov	w23, w4
  41f73c:	mov	x24, x3
  41f740:	mov	x25, x2
  41f744:	str	xzr, [sp, #8]
  41f748:	bl	402840 <calloc@plt>
  41f74c:	cbz	x0, 41fa24 <_obstack_memory_used@@Base+0x8508>
  41f750:	mov	x22, x0
  41f754:	mov	w0, #0x50                  	// #80
  41f758:	mov	w1, #0x1                   	// #1
  41f75c:	bl	402840 <calloc@plt>
  41f760:	cbz	x0, 41f988 <_obstack_memory_used@@Base+0x846c>
  41f764:	mov	x19, x0
  41f768:	and	w8, w23, #0x1
  41f76c:	strb	w8, [x0, #32]
  41f770:	add	x3, sp, #0x8
  41f774:	mov	x0, x26
  41f778:	mov	x1, x22
  41f77c:	mov	x2, x19
  41f780:	mov	x4, x25
  41f784:	mov	x5, xzr
  41f788:	bl	41feb8 <_obstack_memory_used@@Base+0x899c>
  41f78c:	cbnz	w0, 41f990 <_obstack_memory_used@@Base+0x8474>
  41f790:	ldrb	w8, [x24]
  41f794:	cbz	w8, 41f7c0 <_obstack_memory_used@@Base+0x82a4>
  41f798:	add	x9, x24, #0x1
  41f79c:	mov	w10, #0x1                   	// #1
  41f7a0:	lsr	w11, w8, #3
  41f7a4:	and	x11, x11, #0x18
  41f7a8:	ldr	x12, [x22, x11]
  41f7ac:	lsl	x8, x10, x8
  41f7b0:	orr	x8, x12, x8
  41f7b4:	str	x8, [x22, x11]
  41f7b8:	ldrb	w8, [x9], #1
  41f7bc:	cbnz	w8, 41f7a0 <_obstack_memory_used@@Base+0x8284>
  41f7c0:	tbnz	w23, #0, 41f8b8 <_obstack_memory_used@@Base+0x839c>
  41f7c4:	ldr	w8, [x20, #180]
  41f7c8:	cmp	w8, #0x2
  41f7cc:	b.ge	41f8d4 <_obstack_memory_used@@Base+0x83b8>  // b.tcont
  41f7d0:	ldr	w8, [x20, #128]
  41f7d4:	cmp	w8, #0xf
  41f7d8:	b.eq	41f91c <_obstack_memory_used@@Base+0x8400>  // b.none
  41f7dc:	ldr	x0, [x20, #112]
  41f7e0:	add	w9, w8, #0x1
  41f7e4:	sxtw	x8, w8
  41f7e8:	add	x23, x0, x8, lsl #6
  41f7ec:	str	w9, [x20, #128]
  41f7f0:	mov	w9, #0x3                   	// #3
  41f7f4:	mov	x8, #0xffffffffffffffff    	// #-1
  41f7f8:	str	xzr, [x23, #8]!
  41f7fc:	stp	xzr, xzr, [x23, #16]
  41f800:	str	xzr, [x23, #8]
  41f804:	str	w9, [x23, #48]
  41f808:	stp	xzr, x22, [x23, #32]
  41f80c:	str	x8, [x23, #56]
  41f810:	ldr	w8, [x20, #180]
  41f814:	cmp	w8, #0x2
  41f818:	b.lt	41f940 <_obstack_memory_used@@Base+0x8424>  // b.tstop
  41f81c:	ldrb	w9, [x20, #176]
  41f820:	ldr	w8, [x20, #128]
  41f824:	orr	w9, w9, #0x2
  41f828:	cmp	w8, #0xf
  41f82c:	strb	w9, [x20, #176]
  41f830:	b.eq	41f9d0 <_obstack_memory_used@@Base+0x84b4>  // b.none
  41f834:	ldr	x0, [x20, #112]
  41f838:	add	w9, w8, #0x1
  41f83c:	sxtw	x8, w8
  41f840:	add	x21, x0, x8, lsl #6
  41f844:	str	w9, [x20, #128]
  41f848:	mov	w9, #0x6                   	// #6
  41f84c:	mov	x8, #0xffffffffffffffff    	// #-1
  41f850:	str	xzr, [x21, #8]!
  41f854:	stp	xzr, xzr, [x21, #16]
  41f858:	str	xzr, [x21, #8]
  41f85c:	str	w9, [x21, #48]
  41f860:	stp	xzr, x19, [x21, #32]
  41f864:	str	x8, [x21, #56]
  41f868:	ldr	w8, [x20, #128]
  41f86c:	cmp	w8, #0xf
  41f870:	b.eq	41fa34 <_obstack_memory_used@@Base+0x8518>  // b.none
  41f874:	ldr	x0, [x20, #112]
  41f878:	add	w9, w8, #0x1
  41f87c:	sxtw	x8, w8
  41f880:	add	x8, x0, x8, lsl #6
  41f884:	str	w9, [x20, #128]
  41f888:	mov	w9, #0xa                   	// #10
  41f88c:	mov	x10, #0xffffffffffffffff    	// #-1
  41f890:	str	xzr, [x8, #8]!
  41f894:	stp	x23, x21, [x8, #8]
  41f898:	stp	xzr, xzr, [x8, #32]
  41f89c:	str	w9, [x8, #48]
  41f8a0:	str	xzr, [x8, #24]
  41f8a4:	str	x10, [x8, #56]
  41f8a8:	str	x8, [x23]
  41f8ac:	str	x8, [x21]
  41f8b0:	mov	x23, x8
  41f8b4:	b	41f968 <_obstack_memory_used@@Base+0x844c>
  41f8b8:	ldp	q0, q1, [x22]
  41f8bc:	mvn	v0.16b, v0.16b
  41f8c0:	mvn	v1.16b, v1.16b
  41f8c4:	stp	q0, q1, [x22]
  41f8c8:	ldr	w8, [x20, #180]
  41f8cc:	cmp	w8, #0x2
  41f8d0:	b.lt	41f7d0 <_obstack_memory_used@@Base+0x82b4>  // b.tstop
  41f8d4:	ldr	x8, [x20, #120]
  41f8d8:	ldp	x10, x11, [x22]
  41f8dc:	ldr	x9, [x8]
  41f8e0:	and	x9, x10, x9
  41f8e4:	str	x9, [x22]
  41f8e8:	ldr	x9, [x8, #8]
  41f8ec:	and	x9, x11, x9
  41f8f0:	str	x9, [x22, #8]
  41f8f4:	ldr	x9, [x8, #16]
  41f8f8:	ldp	x10, x11, [x22, #16]
  41f8fc:	and	x9, x10, x9
  41f900:	str	x9, [x22, #16]
  41f904:	ldr	x8, [x8, #24]
  41f908:	and	x8, x11, x8
  41f90c:	str	x8, [x22, #24]
  41f910:	ldr	w8, [x20, #128]
  41f914:	cmp	w8, #0xf
  41f918:	b.ne	41f7dc <_obstack_memory_used@@Base+0x82c0>  // b.any
  41f91c:	mov	w0, #0x3c8                 	// #968
  41f920:	bl	402730 <malloc@plt>
  41f924:	cbz	x0, 41f9f4 <_obstack_memory_used@@Base+0x84d8>
  41f928:	ldr	x9, [x20, #112]
  41f92c:	mov	w8, wzr
  41f930:	str	x9, [x0]
  41f934:	str	x0, [x20, #112]
  41f938:	str	wzr, [x20, #128]
  41f93c:	b	41f7e0 <_obstack_memory_used@@Base+0x82c4>
  41f940:	ldr	x0, [x19]
  41f944:	bl	402a10 <free@plt>
  41f948:	ldr	x0, [x19, #8]
  41f94c:	bl	402a10 <free@plt>
  41f950:	ldr	x0, [x19, #16]
  41f954:	bl	402a10 <free@plt>
  41f958:	ldr	x0, [x19, #24]
  41f95c:	bl	402a10 <free@plt>
  41f960:	mov	x0, x19
  41f964:	bl	402a10 <free@plt>
  41f968:	mov	x0, x23
  41f96c:	ldp	x20, x19, [sp, #80]
  41f970:	ldp	x22, x21, [sp, #64]
  41f974:	ldp	x24, x23, [sp, #48]
  41f978:	ldp	x26, x25, [sp, #32]
  41f97c:	ldp	x29, x30, [sp, #16]
  41f980:	add	sp, sp, #0x60
  41f984:	ret
  41f988:	mov	x0, x22
  41f98c:	b	41fa20 <_obstack_memory_used@@Base+0x8504>
  41f990:	mov	w25, w0
  41f994:	mov	x0, x22
  41f998:	bl	402a10 <free@plt>
  41f99c:	ldr	x0, [x19]
  41f9a0:	bl	402a10 <free@plt>
  41f9a4:	ldr	x0, [x19, #8]
  41f9a8:	bl	402a10 <free@plt>
  41f9ac:	ldr	x0, [x19, #16]
  41f9b0:	bl	402a10 <free@plt>
  41f9b4:	ldr	x0, [x19, #24]
  41f9b8:	bl	402a10 <free@plt>
  41f9bc:	mov	x0, x19
  41f9c0:	bl	402a10 <free@plt>
  41f9c4:	mov	x23, xzr
  41f9c8:	str	w25, [x21]
  41f9cc:	b	41f968 <_obstack_memory_used@@Base+0x844c>
  41f9d0:	mov	w0, #0x3c8                 	// #968
  41f9d4:	bl	402730 <malloc@plt>
  41f9d8:	cbz	x0, 41f9f4 <_obstack_memory_used@@Base+0x84d8>
  41f9dc:	ldr	x9, [x20, #112]
  41f9e0:	mov	w8, wzr
  41f9e4:	str	x9, [x0]
  41f9e8:	str	x0, [x20, #112]
  41f9ec:	str	wzr, [x20, #128]
  41f9f0:	b	41f838 <_obstack_memory_used@@Base+0x831c>
  41f9f4:	mov	x0, x22
  41f9f8:	bl	402a10 <free@plt>
  41f9fc:	ldr	x0, [x19]
  41fa00:	bl	402a10 <free@plt>
  41fa04:	ldr	x0, [x19, #8]
  41fa08:	bl	402a10 <free@plt>
  41fa0c:	ldr	x0, [x19, #16]
  41fa10:	bl	402a10 <free@plt>
  41fa14:	ldr	x0, [x19, #24]
  41fa18:	bl	402a10 <free@plt>
  41fa1c:	mov	x0, x19
  41fa20:	bl	402a10 <free@plt>
  41fa24:	mov	x23, xzr
  41fa28:	mov	w8, #0xc                   	// #12
  41fa2c:	str	w8, [x21]
  41fa30:	b	41f968 <_obstack_memory_used@@Base+0x844c>
  41fa34:	mov	w0, #0x3c8                 	// #968
  41fa38:	bl	402730 <malloc@plt>
  41fa3c:	cbz	x0, 41fa58 <_obstack_memory_used@@Base+0x853c>
  41fa40:	ldr	x9, [x20, #112]
  41fa44:	mov	w8, wzr
  41fa48:	str	x9, [x0]
  41fa4c:	str	x0, [x20, #112]
  41fa50:	str	wzr, [x20, #128]
  41fa54:	b	41f878 <_obstack_memory_used@@Base+0x835c>
  41fa58:	mov	x23, xzr
  41fa5c:	b	41f968 <_obstack_memory_used@@Base+0x844c>
  41fa60:	ldr	x9, [x1, #104]
  41fa64:	ldr	x8, [x1, #72]
  41fa68:	cmp	x9, x8
  41fa6c:	b.le	41fae8 <_obstack_memory_used@@Base+0x85cc>
  41fa70:	ldr	x9, [x1, #8]
  41fa74:	ldrb	w8, [x9, x8]
  41fa78:	strb	w8, [x0]
  41fa7c:	ldr	w9, [x1, #144]
  41fa80:	cmp	w9, #0x2
  41fa84:	b.lt	41faa8 <_obstack_memory_used@@Base+0x858c>  // b.tstop
  41fa88:	ldr	x9, [x1, #72]
  41fa8c:	ldr	x10, [x1, #48]
  41fa90:	cmp	x9, x10
  41fa94:	b.eq	41faa8 <_obstack_memory_used@@Base+0x858c>  // b.none
  41fa98:	ldr	x10, [x1, #16]
  41fa9c:	ldr	w9, [x10, x9, lsl #2]
  41faa0:	cmn	w9, #0x1
  41faa4:	b.eq	41fb70 <_obstack_memory_used@@Base+0x8654>  // b.none
  41faa8:	tbz	w2, #0, 41faf8 <_obstack_memory_used@@Base+0x85dc>
  41faac:	cmp	w8, #0x5c
  41fab0:	b.ne	41faf8 <_obstack_memory_used@@Base+0x85dc>  // b.any
  41fab4:	ldr	x8, [x1, #72]
  41fab8:	ldr	x9, [x1, #88]
  41fabc:	add	x8, x8, #0x1
  41fac0:	cmp	x8, x9
  41fac4:	b.ge	41fb70 <_obstack_memory_used@@Base+0x8654>  // b.tcont
  41fac8:	ldr	x9, [x1, #8]
  41facc:	str	x8, [x1, #72]
  41fad0:	ldrb	w9, [x9, x8]
  41fad4:	mov	w8, #0x1                   	// #1
  41fad8:	strb	w9, [x0]
  41fadc:	strb	w8, [x0, #8]
  41fae0:	mov	w0, w8
  41fae4:	ret
  41fae8:	mov	w9, #0x2                   	// #2
  41faec:	strb	w9, [x0, #8]
  41faf0:	mov	w0, wzr
  41faf4:	ret
  41faf8:	cmp	w8, #0x5c
  41fafc:	b.gt	41fb50 <_obstack_memory_used@@Base+0x8634>
  41fb00:	cmp	w8, #0x2d
  41fb04:	b.eq	41fb80 <_obstack_memory_used@@Base+0x8664>  // b.none
  41fb08:	cmp	w8, #0x5b
  41fb0c:	b.ne	41fb70 <_obstack_memory_used@@Base+0x8654>  // b.any
  41fb10:	ldr	x8, [x1, #72]
  41fb14:	ldr	x9, [x1, #88]
  41fb18:	add	x8, x8, #0x1
  41fb1c:	cmp	x8, x9
  41fb20:	b.ge	41fba0 <_obstack_memory_used@@Base+0x8684>  // b.tcont
  41fb24:	ldr	x9, [x1, #8]
  41fb28:	ldrb	w8, [x9, x8]
  41fb2c:	cmp	w8, #0x3d
  41fb30:	strb	w8, [x0]
  41fb34:	b.eq	41fbbc <_obstack_memory_used@@Base+0x86a0>  // b.none
  41fb38:	cmp	w8, #0x3a
  41fb3c:	b.eq	41fbc4 <_obstack_memory_used@@Base+0x86a8>  // b.none
  41fb40:	cmp	w8, #0x2e
  41fb44:	b.ne	41fba4 <_obstack_memory_used@@Base+0x8688>  // b.any
  41fb48:	mov	w8, #0x1a                  	// #26
  41fb4c:	b	41fbcc <_obstack_memory_used@@Base+0x86b0>
  41fb50:	cmp	w8, #0x5d
  41fb54:	b.eq	41fb90 <_obstack_memory_used@@Base+0x8674>  // b.none
  41fb58:	cmp	w8, #0x5e
  41fb5c:	b.ne	41fb70 <_obstack_memory_used@@Base+0x8654>  // b.any
  41fb60:	mov	w8, #0x19                  	// #25
  41fb64:	strb	w8, [x0, #8]
  41fb68:	mov	w0, #0x1                   	// #1
  41fb6c:	ret
  41fb70:	mov	w8, #0x1                   	// #1
  41fb74:	strb	w8, [x0, #8]
  41fb78:	mov	w0, w8
  41fb7c:	ret
  41fb80:	mov	w8, #0x16                  	// #22
  41fb84:	strb	w8, [x0, #8]
  41fb88:	mov	w0, #0x1                   	// #1
  41fb8c:	ret
  41fb90:	mov	w8, #0x15                  	// #21
  41fb94:	strb	w8, [x0, #8]
  41fb98:	mov	w0, #0x1                   	// #1
  41fb9c:	ret
  41fba0:	strb	wzr, [x0]
  41fba4:	mov	w8, #0x1                   	// #1
  41fba8:	mov	w9, #0x5b                  	// #91
  41fbac:	strb	w8, [x0, #8]
  41fbb0:	strb	w9, [x0]
  41fbb4:	mov	w0, w8
  41fbb8:	ret
  41fbbc:	mov	w8, #0x1c                  	// #28
  41fbc0:	b	41fbcc <_obstack_memory_used@@Base+0x86b0>
  41fbc4:	tbz	w2, #2, 41fba4 <_obstack_memory_used@@Base+0x8688>
  41fbc8:	mov	w8, #0x1e                  	// #30
  41fbcc:	strb	w8, [x0, #8]
  41fbd0:	mov	w0, #0x2                   	// #2
  41fbd4:	ret
  41fbd8:	sub	sp, sp, #0x30
  41fbdc:	stp	x29, x30, [sp, #32]
  41fbe0:	ldr	w8, [x1, #144]
  41fbe4:	ldr	x9, [x1, #72]
  41fbe8:	add	x29, sp, #0x20
  41fbec:	cmp	w8, #0x1
  41fbf0:	b.eq	41fc6c <_obstack_memory_used@@Base+0x8750>  // b.none
  41fbf4:	ldr	x8, [x1, #48]
  41fbf8:	add	x10, x9, #0x1
  41fbfc:	cmp	x10, x8
  41fc00:	b.ge	41fc6c <_obstack_memory_used@@Base+0x8750>  // b.tcont
  41fc04:	ldr	x10, [x1, #16]
  41fc08:	sub	x8, x8, x9
  41fc0c:	mov	w11, #0x1                   	// #1
  41fc10:	add	x12, x10, x9, lsl #2
  41fc14:	ldr	w13, [x12, x11, lsl #2]
  41fc18:	cmn	w13, #0x1
  41fc1c:	b.ne	41fc34 <_obstack_memory_used@@Base+0x8718>  // b.any
  41fc20:	add	x11, x11, #0x1
  41fc24:	cmp	x8, x11
  41fc28:	b.ne	41fc14 <_obstack_memory_used@@Base+0x86f8>  // b.any
  41fc2c:	mov	x11, x8
  41fc30:	b	41fc3c <_obstack_memory_used@@Base+0x8720>
  41fc34:	cmp	w11, #0x2
  41fc38:	b.lt	41fc6c <_obstack_memory_used@@Base+0x8750>  // b.tstop
  41fc3c:	mov	w12, #0x1                   	// #1
  41fc40:	str	w12, [x0]
  41fc44:	ldr	w9, [x10, x9, lsl #2]
  41fc48:	mov	w8, wzr
  41fc4c:	str	w9, [x0, #8]
  41fc50:	ldr	x9, [x1, #72]
  41fc54:	add	x9, x9, w11, sxtw
  41fc58:	str	x9, [x1, #72]
  41fc5c:	ldp	x29, x30, [sp, #32]
  41fc60:	mov	w0, w8
  41fc64:	add	sp, sp, #0x30
  41fc68:	ret
  41fc6c:	add	x8, x9, w3, sxtw
  41fc70:	str	x8, [x1, #72]
  41fc74:	ldrb	w10, [x2, #8]
  41fc78:	sub	w9, w10, #0x16
  41fc7c:	cmp	w9, #0x8
  41fc80:	b.hi	41fe84 <_obstack_memory_used@@Base+0x8968>  // b.pmore
  41fc84:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41fc88:	add	x11, x11, #0x756
  41fc8c:	adr	x12, 41fc9c <_obstack_memory_used@@Base+0x8780>
  41fc90:	ldrb	w13, [x11, x9]
  41fc94:	add	x12, x12, x13, lsl #2
  41fc98:	br	x12
  41fc9c:	ldr	x9, [x1, #104]
  41fca0:	cmp	x9, x8
  41fca4:	b.le	41fdf0 <_obstack_memory_used@@Base+0x88d4>
  41fca8:	ldrb	w9, [x2]
  41fcac:	mov	x8, xzr
  41fcb0:	and	w10, w10, #0xff
  41fcb4:	cmp	w10, #0x1e
  41fcb8:	b.ne	41fd90 <_obstack_memory_used@@Base+0x8874>  // b.any
  41fcbc:	ldrb	w10, [x1, #139]
  41fcc0:	cbz	w10, 41fd90 <_obstack_memory_used@@Base+0x8874>
  41fcc4:	ldrb	w10, [x1, #140]
  41fcc8:	cbz	w10, 41fd4c <_obstack_memory_used@@Base+0x8830>
  41fccc:	ldr	x11, [x1, #72]
  41fcd0:	ldr	x13, [x1, #48]
  41fcd4:	subs	x12, x13, x11
  41fcd8:	b.eq	41fcec <_obstack_memory_used@@Base+0x87d0>  // b.none
  41fcdc:	ldr	x10, [x1, #16]
  41fce0:	ldr	w10, [x10, x11, lsl #2]
  41fce4:	cmn	w10, #0x1
  41fce8:	b.eq	41fd6c <_obstack_memory_used@@Base+0x8850>  // b.none
  41fcec:	ldr	x10, [x1, #24]
  41fcf0:	ldr	x14, [x1, #40]
  41fcf4:	ldr	x15, [x1]
  41fcf8:	ldr	x10, [x10, x11, lsl #3]
  41fcfc:	add	x10, x14, x10
  41fd00:	ldrsb	w10, [x15, x10]
  41fd04:	tbnz	w10, #31, 41fd6c <_obstack_memory_used@@Base+0x8850>
  41fd08:	ldr	w14, [x1, #144]
  41fd0c:	cmp	w14, #0x1
  41fd10:	b.eq	41fd80 <_obstack_memory_used@@Base+0x8864>  // b.none
  41fd14:	add	x14, x11, #0x1
  41fd18:	cmp	x14, x13
  41fd1c:	b.ge	41fd80 <_obstack_memory_used@@Base+0x8864>  // b.tcont
  41fd20:	ldr	x13, [x1, #16]
  41fd24:	add	x14, x13, x11, lsl #2
  41fd28:	mov	w13, #0x1                   	// #1
  41fd2c:	ldr	w15, [x14, x13, lsl #2]
  41fd30:	cmn	w15, #0x1
  41fd34:	b.ne	41fd84 <_obstack_memory_used@@Base+0x8868>  // b.any
  41fd38:	add	x13, x13, #0x1
  41fd3c:	cmp	x12, x13
  41fd40:	b.ne	41fd2c <_obstack_memory_used@@Base+0x8810>  // b.any
  41fd44:	mov	x13, x12
  41fd48:	b	41fd84 <_obstack_memory_used@@Base+0x8868>
  41fd4c:	ldr	x10, [x1, #72]
  41fd50:	ldr	x11, [x1, #40]
  41fd54:	ldr	x13, [x1]
  41fd58:	add	x12, x10, #0x1
  41fd5c:	str	x12, [x1, #72]
  41fd60:	add	x10, x10, x11
  41fd64:	ldrb	w10, [x13, x10]
  41fd68:	b	41fda4 <_obstack_memory_used@@Base+0x8888>
  41fd6c:	ldr	x10, [x1, #8]
  41fd70:	add	x12, x11, #0x1
  41fd74:	str	x12, [x1, #72]
  41fd78:	ldrb	w10, [x10, x11]
  41fd7c:	b	41fda4 <_obstack_memory_used@@Base+0x8888>
  41fd80:	mov	w13, #0x1                   	// #1
  41fd84:	add	x12, x11, w13, sxtw
  41fd88:	str	x12, [x1, #72]
  41fd8c:	b	41fda4 <_obstack_memory_used@@Base+0x8888>
  41fd90:	ldr	x10, [x1, #72]
  41fd94:	ldr	x11, [x1, #8]
  41fd98:	add	x12, x10, #0x1
  41fd9c:	str	x12, [x1, #72]
  41fda0:	ldrb	w10, [x11, x10]
  41fda4:	ldr	x11, [x1, #104]
  41fda8:	cmp	x11, x12
  41fdac:	b.le	41fdf0 <_obstack_memory_used@@Base+0x88d4>
  41fdb0:	cmp	w9, w10, uxtb
  41fdb4:	b.ne	41fdc8 <_obstack_memory_used@@Base+0x88ac>  // b.any
  41fdb8:	ldr	x11, [x1, #8]
  41fdbc:	ldrb	w11, [x11, x12]
  41fdc0:	cmp	w11, #0x5d
  41fdc4:	b.eq	41fe04 <_obstack_memory_used@@Base+0x88e8>  // b.none
  41fdc8:	ldr	x11, [x0, #8]
  41fdcc:	strb	w10, [x11, x8]
  41fdd0:	add	x8, x8, #0x1
  41fdd4:	cmp	x8, #0x20
  41fdd8:	b.eq	41fdf0 <_obstack_memory_used@@Base+0x88d4>  // b.none
  41fddc:	ldrb	w10, [x2, #8]
  41fde0:	and	w10, w10, #0xff
  41fde4:	cmp	w10, #0x1e
  41fde8:	b.eq	41fcbc <_obstack_memory_used@@Base+0x87a0>  // b.none
  41fdec:	b	41fd90 <_obstack_memory_used@@Base+0x8874>
  41fdf0:	mov	w8, #0x7                   	// #7
  41fdf4:	ldp	x29, x30, [sp, #32]
  41fdf8:	mov	w0, w8
  41fdfc:	add	sp, sp, #0x30
  41fe00:	ret
  41fe04:	add	x9, x12, #0x1
  41fe08:	str	x9, [x1, #72]
  41fe0c:	ldr	x9, [x0, #8]
  41fe10:	strb	wzr, [x9, w8, uxtw]
  41fe14:	ldrb	w8, [x2, #8]
  41fe18:	cmp	w8, #0x1e
  41fe1c:	b.eq	41fe3c <_obstack_memory_used@@Base+0x8920>  // b.none
  41fe20:	cmp	w8, #0x1c
  41fe24:	b.eq	41fe44 <_obstack_memory_used@@Base+0x8928>  // b.none
  41fe28:	cmp	w8, #0x1a
  41fe2c:	mov	w8, wzr
  41fe30:	b.ne	41fc5c <_obstack_memory_used@@Base+0x8740>  // b.any
  41fe34:	mov	w9, #0x3                   	// #3
  41fe38:	b	41fe48 <_obstack_memory_used@@Base+0x892c>
  41fe3c:	mov	w9, #0x4                   	// #4
  41fe40:	b	41fe48 <_obstack_memory_used@@Base+0x892c>
  41fe44:	mov	w9, #0x2                   	// #2
  41fe48:	mov	w8, wzr
  41fe4c:	str	w9, [x0]
  41fe50:	ldp	x29, x30, [sp, #32]
  41fe54:	mov	w0, w8
  41fe58:	add	sp, sp, #0x30
  41fe5c:	ret
  41fe60:	tbnz	w5, #0, 41fe84 <_obstack_memory_used@@Base+0x8968>
  41fe64:	stp	x2, x0, [sp]
  41fe68:	add	x0, sp, #0x10
  41fe6c:	mov	x2, x4
  41fe70:	bl	41fa60 <_obstack_memory_used@@Base+0x8544>
  41fe74:	ldrb	w8, [sp, #24]
  41fe78:	ldp	x2, x0, [sp]
  41fe7c:	cmp	w8, #0x15
  41fe80:	b.ne	41fea4 <_obstack_memory_used@@Base+0x8988>  // b.any
  41fe84:	str	wzr, [x0]
  41fe88:	ldrb	w9, [x2]
  41fe8c:	mov	w8, wzr
  41fe90:	strb	w9, [x0, #8]
  41fe94:	ldp	x29, x30, [sp, #32]
  41fe98:	mov	w0, w8
  41fe9c:	add	sp, sp, #0x30
  41fea0:	ret
  41fea4:	mov	w8, #0xb                   	// #11
  41fea8:	ldp	x29, x30, [sp, #32]
  41feac:	mov	w0, w8
  41feb0:	add	sp, sp, #0x30
  41feb4:	ret
  41feb8:	stp	x29, x30, [sp, #-64]!
  41febc:	stp	x24, x23, [sp, #16]
  41fec0:	stp	x22, x21, [sp, #32]
  41fec4:	stp	x20, x19, [sp, #48]
  41fec8:	mov	x21, x4
  41fecc:	mov	x23, x3
  41fed0:	mov	x22, x2
  41fed4:	mov	x19, x1
  41fed8:	mov	x20, x0
  41fedc:	mov	x29, sp
  41fee0:	tbz	w5, #22, 41ff14 <_obstack_memory_used@@Base+0x89f8>
  41fee4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41fee8:	add	x1, x1, #0xfde
  41feec:	mov	x0, x21
  41fef0:	bl	4029d0 <strcmp@plt>
  41fef4:	cbz	w0, 41ff0c <_obstack_memory_used@@Base+0x89f0>
  41fef8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41fefc:	add	x1, x1, #0xfe4
  41ff00:	mov	x0, x21
  41ff04:	bl	4029d0 <strcmp@plt>
  41ff08:	cbnz	w0, 41ff14 <_obstack_memory_used@@Base+0x89f8>
  41ff0c:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41ff10:	add	x21, x21, #0xfea
  41ff14:	ldr	x8, [x23]
  41ff18:	ldr	x9, [x22, #72]
  41ff1c:	cmp	x8, x9
  41ff20:	b.eq	420518 <_obstack_memory_used@@Base+0x8ffc>  // b.none
  41ff24:	mov	x0, x21
  41ff28:	bl	402620 <wctype@plt>
  41ff2c:	ldr	x8, [x22, #72]
  41ff30:	ldr	x9, [x22, #24]
  41ff34:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ff38:	add	x1, x1, #0x5d
  41ff3c:	add	x10, x8, #0x1
  41ff40:	str	x10, [x22, #72]
  41ff44:	str	x0, [x9, x8, lsl #3]
  41ff48:	mov	x0, x21
  41ff4c:	bl	4029d0 <strcmp@plt>
  41ff50:	cbz	w0, 420038 <_obstack_memory_used@@Base+0x8b1c>
  41ff54:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ff58:	add	x1, x1, #0x6f
  41ff5c:	mov	x0, x21
  41ff60:	bl	4029d0 <strcmp@plt>
  41ff64:	cbz	w0, 420080 <_obstack_memory_used@@Base+0x8b64>
  41ff68:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41ff6c:	add	x1, x1, #0xfe4
  41ff70:	mov	x0, x21
  41ff74:	bl	4029d0 <strcmp@plt>
  41ff78:	cbz	w0, 4200c8 <_obstack_memory_used@@Base+0x8bac>
  41ff7c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ff80:	add	x1, x1, #0x51
  41ff84:	mov	x0, x21
  41ff88:	bl	4029d0 <strcmp@plt>
  41ff8c:	cbz	w0, 420110 <_obstack_memory_used@@Base+0x8bf4>
  41ff90:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41ff94:	add	x1, x1, #0xfea
  41ff98:	mov	x0, x21
  41ff9c:	bl	4029d0 <strcmp@plt>
  41ffa0:	cbz	w0, 420158 <_obstack_memory_used@@Base+0x8c3c>
  41ffa4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ffa8:	add	x1, x1, #0x4b
  41ffac:	mov	x0, x21
  41ffb0:	bl	4029d0 <strcmp@plt>
  41ffb4:	cbz	w0, 4201a0 <_obstack_memory_used@@Base+0x8c84>
  41ffb8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ffbc:	add	x1, x1, #0x63
  41ffc0:	mov	x0, x21
  41ffc4:	bl	4029d0 <strcmp@plt>
  41ffc8:	cbz	w0, 420200 <_obstack_memory_used@@Base+0x8ce4>
  41ffcc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x11ae4>
  41ffd0:	add	x1, x1, #0xfde
  41ffd4:	mov	x0, x21
  41ffd8:	bl	4029d0 <strcmp@plt>
  41ffdc:	cbz	w0, 42024c <_obstack_memory_used@@Base+0x8d30>
  41ffe0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41ffe4:	add	x1, x1, #0x75
  41ffe8:	mov	x0, x21
  41ffec:	bl	4029d0 <strcmp@plt>
  41fff0:	cbz	w0, 420298 <_obstack_memory_used@@Base+0x8d7c>
  41fff4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  41fff8:	add	x1, x1, #0x69
  41fffc:	mov	x0, x21
  420000:	bl	4029d0 <strcmp@plt>
  420004:	cbz	w0, 42031c <_obstack_memory_used@@Base+0x8e00>
  420008:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  42000c:	add	x1, x1, #0x57
  420010:	mov	x0, x21
  420014:	bl	4029d0 <strcmp@plt>
  420018:	cbz	w0, 4203a0 <_obstack_memory_used@@Base+0x8e84>
  42001c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  420020:	add	x1, x1, #0x4a
  420024:	mov	x0, x21
  420028:	bl	4029d0 <strcmp@plt>
  42002c:	cbz	w0, 420424 <_obstack_memory_used@@Base+0x8f08>
  420030:	mov	w0, #0x4                   	// #4
  420034:	b	4201ec <_obstack_memory_used@@Base+0x8cd0>
  420038:	bl	4029e0 <__ctype_b_loc@plt>
  42003c:	ldr	x8, [x0]
  420040:	mov	x9, xzr
  420044:	mov	w10, #0x1                   	// #1
  420048:	cbz	x20, 42005c <_obstack_memory_used@@Base+0x8b40>
  42004c:	b	4202f4 <_obstack_memory_used@@Base+0x8dd8>
  420050:	add	x9, x9, #0x1
  420054:	cmp	x9, #0x100
  420058:	b.eq	4201e8 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  42005c:	ldrh	w11, [x8, x9, lsl #1]
  420060:	tbz	w11, #3, 420050 <_obstack_memory_used@@Base+0x8b34>
  420064:	ubfx	x11, x9, #6, #2
  420068:	lsl	x11, x11, #3
  42006c:	ldr	x12, [x19, x11]
  420070:	lsl	x13, x10, x9
  420074:	orr	x12, x12, x13
  420078:	str	x12, [x19, x11]
  42007c:	b	420050 <_obstack_memory_used@@Base+0x8b34>
  420080:	bl	4029e0 <__ctype_b_loc@plt>
  420084:	ldr	x8, [x0]
  420088:	mov	x9, xzr
  42008c:	mov	w10, #0x1                   	// #1
  420090:	cbz	x20, 4200a4 <_obstack_memory_used@@Base+0x8b88>
  420094:	b	420378 <_obstack_memory_used@@Base+0x8e5c>
  420098:	add	x9, x9, #0x1
  42009c:	cmp	x9, #0x100
  4200a0:	b.eq	4201e8 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  4200a4:	ldrh	w11, [x8, x9, lsl #1]
  4200a8:	tbz	w11, #1, 420098 <_obstack_memory_used@@Base+0x8b7c>
  4200ac:	ubfx	x11, x9, #6, #2
  4200b0:	lsl	x11, x11, #3
  4200b4:	ldr	x12, [x19, x11]
  4200b8:	lsl	x13, x10, x9
  4200bc:	orr	x12, x12, x13
  4200c0:	str	x12, [x19, x11]
  4200c4:	b	420098 <_obstack_memory_used@@Base+0x8b7c>
  4200c8:	bl	4029e0 <__ctype_b_loc@plt>
  4200cc:	ldr	x8, [x0]
  4200d0:	mov	x9, xzr
  4200d4:	mov	w10, #0x1                   	// #1
  4200d8:	cbz	x20, 4200ec <_obstack_memory_used@@Base+0x8bd0>
  4200dc:	b	4203fc <_obstack_memory_used@@Base+0x8ee0>
  4200e0:	add	x9, x9, #0x1
  4200e4:	cmp	x9, #0x100
  4200e8:	b.eq	4201e8 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  4200ec:	ldrh	w11, [x8, x9, lsl #1]
  4200f0:	tbz	w11, #9, 4200e0 <_obstack_memory_used@@Base+0x8bc4>
  4200f4:	ubfx	x11, x9, #6, #2
  4200f8:	lsl	x11, x11, #3
  4200fc:	ldr	x12, [x19, x11]
  420100:	lsl	x13, x10, x9
  420104:	orr	x12, x12, x13
  420108:	str	x12, [x19, x11]
  42010c:	b	4200e0 <_obstack_memory_used@@Base+0x8bc4>
  420110:	bl	4029e0 <__ctype_b_loc@plt>
  420114:	ldr	x8, [x0]
  420118:	mov	x9, xzr
  42011c:	mov	w10, #0x1                   	// #1
  420120:	cbz	x20, 420134 <_obstack_memory_used@@Base+0x8c18>
  420124:	b	420480 <_obstack_memory_used@@Base+0x8f64>
  420128:	add	x9, x9, #0x1
  42012c:	cmp	x9, #0x100
  420130:	b.eq	4201e8 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  420134:	ldrh	w11, [x8, x9, lsl #1]
  420138:	tbz	w11, #13, 420128 <_obstack_memory_used@@Base+0x8c0c>
  42013c:	ubfx	x11, x9, #6, #2
  420140:	lsl	x11, x11, #3
  420144:	ldr	x12, [x19, x11]
  420148:	lsl	x13, x10, x9
  42014c:	orr	x12, x12, x13
  420150:	str	x12, [x19, x11]
  420154:	b	420128 <_obstack_memory_used@@Base+0x8c0c>
  420158:	bl	4029e0 <__ctype_b_loc@plt>
  42015c:	ldr	x8, [x0]
  420160:	mov	x9, xzr
  420164:	mov	w10, #0x1                   	// #1
  420168:	cbz	x20, 42017c <_obstack_memory_used@@Base+0x8c60>
  42016c:	b	4204b8 <_obstack_memory_used@@Base+0x8f9c>
  420170:	add	x9, x9, #0x1
  420174:	cmp	x9, #0x100
  420178:	b.eq	4201e8 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  42017c:	ldrh	w11, [x8, x9, lsl #1]
  420180:	tbz	w11, #10, 420170 <_obstack_memory_used@@Base+0x8c54>
  420184:	ubfx	x11, x9, #6, #2
  420188:	lsl	x11, x11, #3
  42018c:	ldr	x12, [x19, x11]
  420190:	lsl	x13, x10, x9
  420194:	orr	x12, x12, x13
  420198:	str	x12, [x19, x11]
  42019c:	b	420170 <_obstack_memory_used@@Base+0x8c54>
  4201a0:	bl	4029e0 <__ctype_b_loc@plt>
  4201a4:	ldr	x8, [x0]
  4201a8:	mov	x9, xzr
  4201ac:	mov	w10, #0x1                   	// #1
  4201b0:	cbz	x20, 4201c4 <_obstack_memory_used@@Base+0x8ca8>
  4201b4:	b	4204f0 <_obstack_memory_used@@Base+0x8fd4>
  4201b8:	add	x9, x9, #0x1
  4201bc:	cmp	x9, #0x100
  4201c0:	b.eq	4201e8 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  4201c4:	ldrh	w11, [x8, x9, lsl #1]
  4201c8:	tbz	w11, #11, 4201b8 <_obstack_memory_used@@Base+0x8c9c>
  4201cc:	ubfx	x11, x9, #6, #2
  4201d0:	lsl	x11, x11, #3
  4201d4:	ldr	x12, [x19, x11]
  4201d8:	lsl	x13, x10, x9
  4201dc:	orr	x12, x12, x13
  4201e0:	str	x12, [x19, x11]
  4201e4:	b	4201b8 <_obstack_memory_used@@Base+0x8c9c>
  4201e8:	mov	w0, wzr
  4201ec:	ldp	x20, x19, [sp, #48]
  4201f0:	ldp	x22, x21, [sp, #32]
  4201f4:	ldp	x24, x23, [sp, #16]
  4201f8:	ldp	x29, x30, [sp], #64
  4201fc:	ret
  420200:	bl	4029e0 <__ctype_b_loc@plt>
  420204:	ldr	x8, [x0]
  420208:	mov	x9, xzr
  42020c:	mov	w10, #0x1                   	// #1
  420210:	cbz	x20, 420228 <_obstack_memory_used@@Base+0x8d0c>
  420214:	b	42054c <_obstack_memory_used@@Base+0x9030>
  420218:	add	x9, x9, #0x1
  42021c:	cmp	x9, #0x100
  420220:	mov	w0, wzr
  420224:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420228:	ldrh	w11, [x8, x9, lsl #1]
  42022c:	tbz	w11, #14, 420218 <_obstack_memory_used@@Base+0x8cfc>
  420230:	ubfx	x11, x9, #6, #2
  420234:	lsl	x11, x11, #3
  420238:	ldr	x12, [x19, x11]
  42023c:	lsl	x13, x10, x9
  420240:	orr	x12, x12, x13
  420244:	str	x12, [x19, x11]
  420248:	b	420218 <_obstack_memory_used@@Base+0x8cfc>
  42024c:	bl	4029e0 <__ctype_b_loc@plt>
  420250:	ldr	x8, [x0]
  420254:	mov	x9, xzr
  420258:	mov	w10, #0x1                   	// #1
  42025c:	cbz	x20, 420274 <_obstack_memory_used@@Base+0x8d58>
  420260:	b	420584 <_obstack_memory_used@@Base+0x9068>
  420264:	add	x9, x9, #0x1
  420268:	cmp	x9, #0x100
  42026c:	mov	w0, wzr
  420270:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420274:	ldrh	w11, [x8, x9, lsl #1]
  420278:	tbz	w11, #8, 420264 <_obstack_memory_used@@Base+0x8d48>
  42027c:	ubfx	x11, x9, #6, #2
  420280:	lsl	x11, x11, #3
  420284:	ldr	x12, [x19, x11]
  420288:	lsl	x13, x10, x9
  42028c:	orr	x12, x12, x13
  420290:	str	x12, [x19, x11]
  420294:	b	420264 <_obstack_memory_used@@Base+0x8d48>
  420298:	bl	4029e0 <__ctype_b_loc@plt>
  42029c:	ldr	x8, [x0]
  4202a0:	mov	x9, xzr
  4202a4:	mov	w10, #0x1                   	// #1
  4202a8:	cbz	x20, 4202c0 <_obstack_memory_used@@Base+0x8da4>
  4202ac:	b	4205bc <_obstack_memory_used@@Base+0x90a0>
  4202b0:	add	x9, x9, #0x1
  4202b4:	cmp	x9, #0x100
  4202b8:	mov	w0, wzr
  4202bc:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4202c0:	ldrh	w11, [x8, x9, lsl #1]
  4202c4:	tbz	w11, #0, 4202b0 <_obstack_memory_used@@Base+0x8d94>
  4202c8:	ubfx	x11, x9, #6, #2
  4202cc:	lsl	x11, x11, #3
  4202d0:	ldr	x12, [x19, x11]
  4202d4:	lsl	x13, x10, x9
  4202d8:	orr	x12, x12, x13
  4202dc:	str	x12, [x19, x11]
  4202e0:	b	4202b0 <_obstack_memory_used@@Base+0x8d94>
  4202e4:	add	x9, x9, #0x1
  4202e8:	cmp	x9, #0x100
  4202ec:	mov	w0, wzr
  4202f0:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4202f4:	ldrh	w11, [x8, x9, lsl #1]
  4202f8:	tbz	w11, #3, 4202e4 <_obstack_memory_used@@Base+0x8dc8>
  4202fc:	ldrb	w11, [x20, x9]
  420300:	lsr	x12, x11, #3
  420304:	and	x12, x12, #0x18
  420308:	ldr	x13, [x19, x12]
  42030c:	lsl	x11, x10, x11
  420310:	orr	x11, x11, x13
  420314:	str	x11, [x19, x12]
  420318:	b	4202e4 <_obstack_memory_used@@Base+0x8dc8>
  42031c:	bl	4029e0 <__ctype_b_loc@plt>
  420320:	ldr	x8, [x0]
  420324:	mov	x9, xzr
  420328:	mov	w10, #0x1                   	// #1
  42032c:	cbz	x20, 420344 <_obstack_memory_used@@Base+0x8e28>
  420330:	b	4205f4 <_obstack_memory_used@@Base+0x90d8>
  420334:	add	x9, x9, #0x1
  420338:	cmp	x9, #0x100
  42033c:	mov	w0, wzr
  420340:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420344:	ldrsh	w11, [x8, x9, lsl #1]
  420348:	tbz	w11, #31, 420334 <_obstack_memory_used@@Base+0x8e18>
  42034c:	ubfx	x11, x9, #6, #2
  420350:	lsl	x11, x11, #3
  420354:	ldr	x12, [x19, x11]
  420358:	lsl	x13, x10, x9
  42035c:	orr	x12, x12, x13
  420360:	str	x12, [x19, x11]
  420364:	b	420334 <_obstack_memory_used@@Base+0x8e18>
  420368:	add	x9, x9, #0x1
  42036c:	cmp	x9, #0x100
  420370:	mov	w0, wzr
  420374:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420378:	ldrh	w11, [x8, x9, lsl #1]
  42037c:	tbz	w11, #1, 420368 <_obstack_memory_used@@Base+0x8e4c>
  420380:	ldrb	w11, [x20, x9]
  420384:	lsr	x12, x11, #3
  420388:	and	x12, x12, #0x18
  42038c:	ldr	x13, [x19, x12]
  420390:	lsl	x11, x10, x11
  420394:	orr	x11, x11, x13
  420398:	str	x11, [x19, x12]
  42039c:	b	420368 <_obstack_memory_used@@Base+0x8e4c>
  4203a0:	bl	4029e0 <__ctype_b_loc@plt>
  4203a4:	ldr	x8, [x0]
  4203a8:	mov	x9, xzr
  4203ac:	mov	w10, #0x1                   	// #1
  4203b0:	cbz	x20, 4203c8 <_obstack_memory_used@@Base+0x8eac>
  4203b4:	b	42062c <_obstack_memory_used@@Base+0x9110>
  4203b8:	add	x9, x9, #0x1
  4203bc:	cmp	x9, #0x100
  4203c0:	mov	w0, wzr
  4203c4:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4203c8:	ldrh	w11, [x8, x9, lsl #1]
  4203cc:	tbz	w11, #2, 4203b8 <_obstack_memory_used@@Base+0x8e9c>
  4203d0:	ubfx	x11, x9, #6, #2
  4203d4:	lsl	x11, x11, #3
  4203d8:	ldr	x12, [x19, x11]
  4203dc:	lsl	x13, x10, x9
  4203e0:	orr	x12, x12, x13
  4203e4:	str	x12, [x19, x11]
  4203e8:	b	4203b8 <_obstack_memory_used@@Base+0x8e9c>
  4203ec:	add	x9, x9, #0x1
  4203f0:	cmp	x9, #0x100
  4203f4:	mov	w0, wzr
  4203f8:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4203fc:	ldrh	w11, [x8, x9, lsl #1]
  420400:	tbz	w11, #9, 4203ec <_obstack_memory_used@@Base+0x8ed0>
  420404:	ldrb	w11, [x20, x9]
  420408:	lsr	x12, x11, #3
  42040c:	and	x12, x12, #0x18
  420410:	ldr	x13, [x19, x12]
  420414:	lsl	x11, x10, x11
  420418:	orr	x11, x11, x13
  42041c:	str	x11, [x19, x12]
  420420:	b	4203ec <_obstack_memory_used@@Base+0x8ed0>
  420424:	bl	4029e0 <__ctype_b_loc@plt>
  420428:	ldr	x8, [x0]
  42042c:	mov	x9, xzr
  420430:	mov	w10, #0x1                   	// #1
  420434:	cbz	x20, 42044c <_obstack_memory_used@@Base+0x8f30>
  420438:	b	420664 <_obstack_memory_used@@Base+0x9148>
  42043c:	add	x9, x9, #0x1
  420440:	cmp	x9, #0x100
  420444:	mov	w0, wzr
  420448:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  42044c:	ldrh	w11, [x8, x9, lsl #1]
  420450:	tbz	w11, #12, 42043c <_obstack_memory_used@@Base+0x8f20>
  420454:	ubfx	x11, x9, #6, #2
  420458:	lsl	x11, x11, #3
  42045c:	ldr	x12, [x19, x11]
  420460:	lsl	x13, x10, x9
  420464:	orr	x12, x12, x13
  420468:	str	x12, [x19, x11]
  42046c:	b	42043c <_obstack_memory_used@@Base+0x8f20>
  420470:	add	x9, x9, #0x1
  420474:	cmp	x9, #0x100
  420478:	mov	w0, wzr
  42047c:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420480:	ldrh	w11, [x8, x9, lsl #1]
  420484:	tbz	w11, #13, 420470 <_obstack_memory_used@@Base+0x8f54>
  420488:	ldrb	w11, [x20, x9]
  42048c:	lsr	x12, x11, #3
  420490:	and	x12, x12, #0x18
  420494:	ldr	x13, [x19, x12]
  420498:	lsl	x11, x10, x11
  42049c:	orr	x11, x11, x13
  4204a0:	str	x11, [x19, x12]
  4204a4:	b	420470 <_obstack_memory_used@@Base+0x8f54>
  4204a8:	add	x9, x9, #0x1
  4204ac:	cmp	x9, #0x100
  4204b0:	mov	w0, wzr
  4204b4:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4204b8:	ldrh	w11, [x8, x9, lsl #1]
  4204bc:	tbz	w11, #10, 4204a8 <_obstack_memory_used@@Base+0x8f8c>
  4204c0:	ldrb	w11, [x20, x9]
  4204c4:	lsr	x12, x11, #3
  4204c8:	and	x12, x12, #0x18
  4204cc:	ldr	x13, [x19, x12]
  4204d0:	lsl	x11, x10, x11
  4204d4:	orr	x11, x11, x13
  4204d8:	str	x11, [x19, x12]
  4204dc:	b	4204a8 <_obstack_memory_used@@Base+0x8f8c>
  4204e0:	add	x9, x9, #0x1
  4204e4:	cmp	x9, #0x100
  4204e8:	mov	w0, wzr
  4204ec:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4204f0:	ldrh	w11, [x8, x9, lsl #1]
  4204f4:	tbz	w11, #11, 4204e0 <_obstack_memory_used@@Base+0x8fc4>
  4204f8:	ldrb	w11, [x20, x9]
  4204fc:	lsr	x12, x11, #3
  420500:	and	x12, x12, #0x18
  420504:	ldr	x13, [x19, x12]
  420508:	lsl	x11, x10, x11
  42050c:	orr	x11, x11, x13
  420510:	str	x11, [x19, x12]
  420514:	b	4204e0 <_obstack_memory_used@@Base+0x8fc4>
  420518:	ldr	x0, [x22, #24]
  42051c:	mov	w24, #0x1                   	// #1
  420520:	bfi	x24, x8, #1, #63
  420524:	lsl	x1, x24, #3
  420528:	bl	402870 <realloc@plt>
  42052c:	cbz	x0, 42068c <_obstack_memory_used@@Base+0x9170>
  420530:	str	x0, [x22, #24]
  420534:	str	x24, [x23]
  420538:	b	41ff24 <_obstack_memory_used@@Base+0x8a08>
  42053c:	add	x9, x9, #0x1
  420540:	cmp	x9, #0x100
  420544:	mov	w0, wzr
  420548:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  42054c:	ldrh	w11, [x8, x9, lsl #1]
  420550:	tbz	w11, #14, 42053c <_obstack_memory_used@@Base+0x9020>
  420554:	ldrb	w11, [x20, x9]
  420558:	lsr	x12, x11, #3
  42055c:	and	x12, x12, #0x18
  420560:	ldr	x13, [x19, x12]
  420564:	lsl	x11, x10, x11
  420568:	orr	x11, x11, x13
  42056c:	str	x11, [x19, x12]
  420570:	b	42053c <_obstack_memory_used@@Base+0x9020>
  420574:	add	x9, x9, #0x1
  420578:	cmp	x9, #0x100
  42057c:	mov	w0, wzr
  420580:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420584:	ldrh	w11, [x8, x9, lsl #1]
  420588:	tbz	w11, #8, 420574 <_obstack_memory_used@@Base+0x9058>
  42058c:	ldrb	w11, [x20, x9]
  420590:	lsr	x12, x11, #3
  420594:	and	x12, x12, #0x18
  420598:	ldr	x13, [x19, x12]
  42059c:	lsl	x11, x10, x11
  4205a0:	orr	x11, x11, x13
  4205a4:	str	x11, [x19, x12]
  4205a8:	b	420574 <_obstack_memory_used@@Base+0x9058>
  4205ac:	add	x9, x9, #0x1
  4205b0:	cmp	x9, #0x100
  4205b4:	mov	w0, wzr
  4205b8:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4205bc:	ldrh	w11, [x8, x9, lsl #1]
  4205c0:	tbz	w11, #0, 4205ac <_obstack_memory_used@@Base+0x9090>
  4205c4:	ldrb	w11, [x20, x9]
  4205c8:	lsr	x12, x11, #3
  4205cc:	and	x12, x12, #0x18
  4205d0:	ldr	x13, [x19, x12]
  4205d4:	lsl	x11, x10, x11
  4205d8:	orr	x11, x11, x13
  4205dc:	str	x11, [x19, x12]
  4205e0:	b	4205ac <_obstack_memory_used@@Base+0x9090>
  4205e4:	add	x9, x9, #0x1
  4205e8:	cmp	x9, #0x100
  4205ec:	mov	w0, wzr
  4205f0:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  4205f4:	ldrsh	w11, [x8, x9, lsl #1]
  4205f8:	tbz	w11, #31, 4205e4 <_obstack_memory_used@@Base+0x90c8>
  4205fc:	ldrb	w11, [x20, x9]
  420600:	lsr	x12, x11, #3
  420604:	and	x12, x12, #0x18
  420608:	ldr	x13, [x19, x12]
  42060c:	lsl	x11, x10, x11
  420610:	orr	x11, x11, x13
  420614:	str	x11, [x19, x12]
  420618:	b	4205e4 <_obstack_memory_used@@Base+0x90c8>
  42061c:	add	x9, x9, #0x1
  420620:	cmp	x9, #0x100
  420624:	mov	w0, wzr
  420628:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  42062c:	ldrh	w11, [x8, x9, lsl #1]
  420630:	tbz	w11, #2, 42061c <_obstack_memory_used@@Base+0x9100>
  420634:	ldrb	w11, [x20, x9]
  420638:	lsr	x12, x11, #3
  42063c:	and	x12, x12, #0x18
  420640:	ldr	x13, [x19, x12]
  420644:	lsl	x11, x10, x11
  420648:	orr	x11, x11, x13
  42064c:	str	x11, [x19, x12]
  420650:	b	42061c <_obstack_memory_used@@Base+0x9100>
  420654:	add	x9, x9, #0x1
  420658:	cmp	x9, #0x100
  42065c:	mov	w0, wzr
  420660:	b.eq	4201ec <_obstack_memory_used@@Base+0x8cd0>  // b.none
  420664:	ldrh	w11, [x8, x9, lsl #1]
  420668:	tbz	w11, #12, 420654 <_obstack_memory_used@@Base+0x9138>
  42066c:	ldrb	w11, [x20, x9]
  420670:	lsr	x12, x11, #3
  420674:	and	x12, x12, #0x18
  420678:	ldr	x13, [x19, x12]
  42067c:	lsl	x11, x10, x11
  420680:	orr	x11, x11, x13
  420684:	str	x11, [x19, x12]
  420688:	b	420654 <_obstack_memory_used@@Base+0x9138>
  42068c:	mov	w0, #0xc                   	// #12
  420690:	b	4201ec <_obstack_memory_used@@Base+0x8cd0>
  420694:	stp	x29, x30, [sp, #-64]!
  420698:	stp	x22, x21, [sp, #32]
  42069c:	stp	x20, x19, [sp, #48]
  4206a0:	ldr	w8, [x1, #48]
  4206a4:	ldr	x19, [x1, #56]
  4206a8:	str	x23, [sp, #16]
  4206ac:	mov	x29, sp
  4206b0:	and	w8, w8, #0xff
  4206b4:	sub	w9, w8, #0x2
  4206b8:	cmp	w9, #0xe
  4206bc:	mov	x8, x0
  4206c0:	b.hi	4207ac <_obstack_memory_used@@Base+0x9290>  // b.pmore
  4206c4:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  4206c8:	add	x10, x10, #0x75f
  4206cc:	adr	x11, 4206e0 <_obstack_memory_used@@Base+0x91c4>
  4206d0:	ldrb	w12, [x10, x9]
  4206d4:	add	x11, x11, x12, lsl #2
  4206d8:	mov	w0, wzr
  4206dc:	br	x11
  4206e0:	ldr	x9, [x1, #32]
  4206e4:	ldr	x8, [x8, #40]
  4206e8:	mov	w10, #0x18                  	// #24
  4206ec:	ldr	x20, [x9, #56]
  4206f0:	madd	x19, x19, x10, x8
  4206f4:	mov	w8, #0x1                   	// #1
  4206f8:	dup	v0.2d, x8
  4206fc:	mov	w0, #0x8                   	// #8
  420700:	str	q0, [x19]
  420704:	bl	402730 <malloc@plt>
  420708:	str	x0, [x19, #16]
  42070c:	cbz	x0, 420834 <_obstack_memory_used@@Base+0x9318>
  420710:	mov	x8, x0
  420714:	mov	w0, wzr
  420718:	str	x20, [x8]
  42071c:	b	420820 <_obstack_memory_used@@Base+0x9304>
  420720:	ldrb	w9, [x8, #176]
  420724:	add	x11, x1, #0x20
  420728:	ldr	x22, [x8, #40]
  42072c:	mov	w0, #0x10                  	// #16
  420730:	orr	w9, w9, #0x1
  420734:	strb	w9, [x8, #176]
  420738:	ldp	x9, x10, [x1, #8]
  42073c:	mov	w8, #0x18                  	// #24
  420740:	madd	x23, x19, x8, x22
  420744:	mov	w8, #0x2                   	// #2
  420748:	add	x12, x9, #0x18
  42074c:	cmp	x9, #0x0
  420750:	add	x9, x10, #0x18
  420754:	csel	x12, x11, x12, eq  // eq = none
  420758:	cmp	x10, #0x0
  42075c:	csel	x9, x11, x9, eq  // eq = none
  420760:	ldr	x10, [x12]
  420764:	ldr	x9, [x9]
  420768:	ldr	x20, [x10, #56]
  42076c:	ldr	x21, [x9, #56]
  420770:	str	x8, [x23]
  420774:	bl	402730 <malloc@plt>
  420778:	str	x0, [x23, #16]
  42077c:	cbz	x0, 420838 <_obstack_memory_used@@Base+0x931c>
  420780:	mov	w9, #0x18                  	// #24
  420784:	madd	x9, x19, x9, x22
  420788:	mov	x8, x0
  42078c:	cmp	x20, x21
  420790:	add	x9, x9, #0x8
  420794:	b.ne	420800 <_obstack_memory_used@@Base+0x92e4>  // b.any
  420798:	mov	w10, #0x1                   	// #1
  42079c:	mov	w0, wzr
  4207a0:	str	x10, [x9]
  4207a4:	str	x20, [x8]
  4207a8:	b	420820 <_obstack_memory_used@@Base+0x9304>
  4207ac:	ldr	x9, [x1, #32]
  4207b0:	ldr	x8, [x8, #24]
  4207b4:	mov	w0, wzr
  4207b8:	ldr	x9, [x9, #56]
  4207bc:	str	x9, [x8, x19, lsl #3]
  4207c0:	b	420820 <_obstack_memory_used@@Base+0x9304>
  4207c4:	ldr	x9, [x1, #32]
  4207c8:	ldr	x20, [x9, #56]
  4207cc:	ldr	x9, [x8, #24]
  4207d0:	str	x20, [x9, x19, lsl #3]
  4207d4:	ldrb	w9, [x1, #48]
  4207d8:	cmp	w9, #0x4
  4207dc:	b.ne	4207f8 <_obstack_memory_used@@Base+0x92dc>  // b.any
  4207e0:	ldr	x8, [x8, #40]
  4207e4:	mov	w9, #0x18                  	// #24
  4207e8:	mov	w10, #0x1                   	// #1
  4207ec:	dup	v0.2d, x10
  4207f0:	madd	x19, x19, x9, x8
  4207f4:	b	4206fc <_obstack_memory_used@@Base+0x91e0>
  4207f8:	mov	w0, wzr
  4207fc:	b	420820 <_obstack_memory_used@@Base+0x9304>
  420800:	mov	w10, #0x2                   	// #2
  420804:	cmp	x20, x21
  420808:	mov	w0, wzr
  42080c:	str	x10, [x9]
  420810:	b.cs	42081c <_obstack_memory_used@@Base+0x9300>  // b.hs, b.nlast
  420814:	stp	x20, x21, [x8]
  420818:	b	420820 <_obstack_memory_used@@Base+0x9304>
  42081c:	stp	x21, x20, [x8]
  420820:	ldp	x20, x19, [sp, #48]
  420824:	ldp	x22, x21, [sp, #32]
  420828:	ldr	x23, [sp, #16]
  42082c:	ldp	x29, x30, [sp], #64
  420830:	ret
  420834:	stp	xzr, xzr, [x19]
  420838:	mov	w0, #0xc                   	// #12
  42083c:	b	420820 <_obstack_memory_used@@Base+0x9304>
  420840:	stp	x29, x30, [sp, #-80]!
  420844:	stp	x24, x23, [sp, #32]
  420848:	stp	x22, x21, [sp, #48]
  42084c:	stp	x20, x19, [sp, #64]
  420850:	ldr	x22, [x3, #8]
  420854:	mov	x19, x3
  420858:	mov	x21, x1
  42085c:	mov	x20, x0
  420860:	str	x25, [sp, #16]
  420864:	mov	x29, sp
  420868:	tbz	w2, #4, 420888 <_obstack_memory_used@@Base+0x936c>
  42086c:	cbz	x22, 420888 <_obstack_memory_used@@Base+0x936c>
  420870:	ldr	x8, [x19, #40]
  420874:	cmp	x8, #0x3f
  420878:	b.gt	4209f0 <_obstack_memory_used@@Base+0x94d4>
  42087c:	ldr	x9, [x21, #160]
  420880:	lsr	x8, x9, x8
  420884:	tbz	w8, #0, 4209f0 <_obstack_memory_used@@Base+0x94d4>
  420888:	ldr	w8, [x21, #128]
  42088c:	cmp	w8, #0xf
  420890:	b.eq	420a0c <_obstack_memory_used@@Base+0x94f0>  // b.none
  420894:	ldr	x0, [x21, #112]
  420898:	add	w9, w8, #0x1
  42089c:	sxtw	x8, w8
  4208a0:	add	x23, x0, x8, lsl #6
  4208a4:	str	w9, [x21, #128]
  4208a8:	mov	w9, #0x8                   	// #8
  4208ac:	mov	x8, #0xffffffffffffffff    	// #-1
  4208b0:	str	xzr, [x23, #8]!
  4208b4:	stp	xzr, xzr, [x23, #16]
  4208b8:	str	xzr, [x23, #8]
  4208bc:	str	w9, [x23, #48]
  4208c0:	stp	xzr, xzr, [x23, #32]
  4208c4:	str	x8, [x23, #56]
  4208c8:	ldr	w8, [x21, #128]
  4208cc:	cmp	w8, #0xf
  4208d0:	b.eq	420a58 <_obstack_memory_used@@Base+0x953c>  // b.none
  4208d4:	ldr	x0, [x21, #112]
  4208d8:	add	w9, w8, #0x1
  4208dc:	sxtw	x8, w8
  4208e0:	add	x24, x0, x8, lsl #6
  4208e4:	mov	w10, #0x9                   	// #9
  4208e8:	mov	x11, #0xffffffffffffffff    	// #-1
  4208ec:	str	w9, [x21, #128]
  4208f0:	str	xzr, [x24, #8]!
  4208f4:	stp	xzr, xzr, [x24, #16]
  4208f8:	str	xzr, [x24, #8]
  4208fc:	str	w10, [x24, #48]
  420900:	stp	xzr, xzr, [x24, #32]
  420904:	str	x11, [x24, #56]
  420908:	mov	x25, x24
  42090c:	cbz	x22, 42095c <_obstack_memory_used@@Base+0x9440>
  420910:	ldr	w8, [x21, #128]
  420914:	cmp	w8, #0xf
  420918:	b.eq	420a30 <_obstack_memory_used@@Base+0x9514>  // b.none
  42091c:	ldr	x0, [x21, #112]
  420920:	add	w9, w8, #0x1
  420924:	sxtw	x8, w8
  420928:	add	x25, x0, x8, lsl #6
  42092c:	mov	w10, #0x10                  	// #16
  420930:	mov	x11, #0xffffffffffffffff    	// #-1
  420934:	str	w9, [x21, #128]
  420938:	str	xzr, [x25, #8]!
  42093c:	stp	x22, x24, [x25, #8]
  420940:	stp	xzr, xzr, [x25, #32]
  420944:	str	w10, [x25, #48]
  420948:	str	xzr, [x25, #24]
  42094c:	str	x11, [x25, #56]
  420950:	str	x25, [x22]
  420954:	cbz	x24, 42095c <_obstack_memory_used@@Base+0x9440>
  420958:	str	x25, [x24]
  42095c:	ldr	w8, [x21, #128]
  420960:	cmp	w8, #0xf
  420964:	b.eq	420a90 <_obstack_memory_used@@Base+0x9574>  // b.none
  420968:	ldr	x0, [x21, #112]
  42096c:	add	w9, w8, #0x1
  420970:	sxtw	x8, w8
  420974:	add	x22, x0, x8, lsl #6
  420978:	mov	w10, #0x10                  	// #16
  42097c:	mov	x11, #0xffffffffffffffff    	// #-1
  420980:	str	w9, [x21, #128]
  420984:	str	xzr, [x22, #8]!
  420988:	stp	x23, x25, [x22, #8]
  42098c:	stp	xzr, xzr, [x22, #32]
  420990:	str	w10, [x22, #48]
  420994:	str	xzr, [x22, #24]
  420998:	str	x11, [x22, #56]
  42099c:	cbz	x23, 4209a4 <_obstack_memory_used@@Base+0x9488>
  4209a0:	str	x22, [x23]
  4209a4:	cbz	x25, 4209ac <_obstack_memory_used@@Base+0x9490>
  4209a8:	str	x22, [x25]
  4209ac:	cbz	x24, 420abc <_obstack_memory_used@@Base+0x95a0>
  4209b0:	cbz	x23, 420abc <_obstack_memory_used@@Base+0x95a0>
  4209b4:	cbz	x25, 420abc <_obstack_memory_used@@Base+0x95a0>
  4209b8:	cbz	x22, 420abc <_obstack_memory_used@@Base+0x95a0>
  4209bc:	ldr	x8, [x19, #40]
  4209c0:	str	x8, [x24, #40]
  4209c4:	str	x8, [x23, #40]
  4209c8:	ldr	w8, [x19, #48]
  4209cc:	ldr	w9, [x24, #48]
  4209d0:	and	w8, w8, #0x80000
  4209d4:	and	w9, w9, #0xfff7ffff
  4209d8:	orr	w9, w9, w8
  4209dc:	str	w9, [x24, #48]
  4209e0:	ldr	w9, [x23, #48]
  4209e4:	and	w9, w9, #0xfff7ffff
  4209e8:	orr	w8, w9, w8
  4209ec:	str	w8, [x23, #48]
  4209f0:	mov	x0, x22
  4209f4:	ldp	x20, x19, [sp, #64]
  4209f8:	ldp	x22, x21, [sp, #48]
  4209fc:	ldp	x24, x23, [sp, #32]
  420a00:	ldr	x25, [sp, #16]
  420a04:	ldp	x29, x30, [sp], #80
  420a08:	ret
  420a0c:	mov	w0, #0x3c8                 	// #968
  420a10:	bl	402730 <malloc@plt>
  420a14:	cbz	x0, 420a54 <_obstack_memory_used@@Base+0x9538>
  420a18:	ldr	x9, [x21, #112]
  420a1c:	mov	w8, wzr
  420a20:	str	x9, [x0]
  420a24:	str	x0, [x21, #112]
  420a28:	str	wzr, [x21, #128]
  420a2c:	b	420898 <_obstack_memory_used@@Base+0x937c>
  420a30:	mov	w0, #0x3c8                 	// #968
  420a34:	bl	402730 <malloc@plt>
  420a38:	cbz	x0, 420a8c <_obstack_memory_used@@Base+0x9570>
  420a3c:	ldr	x9, [x21, #112]
  420a40:	mov	w8, wzr
  420a44:	str	x9, [x0]
  420a48:	str	x0, [x21, #112]
  420a4c:	str	wzr, [x21, #128]
  420a50:	b	420920 <_obstack_memory_used@@Base+0x9404>
  420a54:	mov	x23, xzr
  420a58:	mov	w0, #0x3c8                 	// #968
  420a5c:	bl	402730 <malloc@plt>
  420a60:	cbz	x0, 420a7c <_obstack_memory_used@@Base+0x9560>
  420a64:	ldr	x9, [x21, #112]
  420a68:	mov	w8, wzr
  420a6c:	str	x9, [x0]
  420a70:	str	x0, [x21, #112]
  420a74:	str	wzr, [x21, #128]
  420a78:	b	4208d8 <_obstack_memory_used@@Base+0x93bc>
  420a7c:	mov	x24, xzr
  420a80:	mov	x25, x24
  420a84:	cbnz	x22, 420910 <_obstack_memory_used@@Base+0x93f4>
  420a88:	b	42095c <_obstack_memory_used@@Base+0x9440>
  420a8c:	mov	x25, xzr
  420a90:	mov	w0, #0x3c8                 	// #968
  420a94:	bl	402730 <malloc@plt>
  420a98:	cbz	x0, 420ab4 <_obstack_memory_used@@Base+0x9598>
  420a9c:	ldr	x9, [x21, #112]
  420aa0:	mov	w8, wzr
  420aa4:	str	x9, [x0]
  420aa8:	str	x0, [x21, #112]
  420aac:	str	wzr, [x21, #128]
  420ab0:	b	42096c <_obstack_memory_used@@Base+0x9450>
  420ab4:	mov	x22, xzr
  420ab8:	cbnz	x24, 4209b0 <_obstack_memory_used@@Base+0x9494>
  420abc:	mov	w8, #0xc                   	// #12
  420ac0:	mov	x22, xzr
  420ac4:	str	w8, [x20]
  420ac8:	b	4209f0 <_obstack_memory_used@@Base+0x94d4>
  420acc:	stp	x29, x30, [sp, #-80]!
  420ad0:	stp	x26, x25, [sp, #16]
  420ad4:	stp	x24, x23, [sp, #32]
  420ad8:	stp	x22, x21, [sp, #48]
  420adc:	stp	x20, x19, [sp, #64]
  420ae0:	ldp	x24, x8, [x0, #8]
  420ae4:	mov	x20, x2
  420ae8:	mov	x19, x0
  420aec:	mov	x21, x1
  420af0:	cmp	x8, x24
  420af4:	mov	x29, sp
  420af8:	b.cs	420bc4 <_obstack_memory_used@@Base+0x96a8>  // b.hs, b.nlast
  420afc:	ldr	x9, [x19]
  420b00:	add	x8, x9, x8, lsl #4
  420b04:	stp	x21, x20, [x8]
  420b08:	ldr	x8, [x19]
  420b0c:	ldr	x9, [x19, #16]
  420b10:	add	x9, x8, x9, lsl #4
  420b14:	ldr	w10, [x9, #8]
  420b18:	and	w8, w20, #0xff
  420b1c:	cmp	w8, #0x5
  420b20:	and	w10, w10, #0xfffc00ff
  420b24:	str	w10, [x9, #8]
  420b28:	b.ne	420b40 <_obstack_memory_used@@Base+0x9624>  // b.any
  420b2c:	ldr	w9, [x19, #180]
  420b30:	cmp	w9, #0x1
  420b34:	b.le	420b40 <_obstack_memory_used@@Base+0x9624>
  420b38:	mov	w8, #0x100000              	// #1048576
  420b3c:	b	420b4c <_obstack_memory_used@@Base+0x9630>
  420b40:	cmp	w8, #0x6
  420b44:	cset	w8, eq  // eq = none
  420b48:	lsl	w8, w8, #20
  420b4c:	ldr	x9, [x19]
  420b50:	ldr	x10, [x19, #16]
  420b54:	add	x9, x9, x10, lsl #4
  420b58:	ldr	w10, [x9, #8]
  420b5c:	and	w10, w10, #0xffefffff
  420b60:	orr	w8, w10, w8
  420b64:	str	w8, [x9, #8]
  420b68:	ldp	x9, x8, [x19, #16]
  420b6c:	mov	x10, #0xffffffffffffffff    	// #-1
  420b70:	str	x10, [x8, x9, lsl #3]
  420b74:	ldr	x8, [x19, #40]
  420b78:	ldr	x9, [x19, #16]
  420b7c:	mov	w10, #0x18                  	// #24
  420b80:	madd	x8, x9, x10, x8
  420b84:	stp	xzr, xzr, [x8]
  420b88:	str	xzr, [x8, #16]
  420b8c:	ldr	x8, [x19, #48]
  420b90:	ldr	x9, [x19, #16]
  420b94:	madd	x8, x9, x10, x8
  420b98:	stp	xzr, xzr, [x8]
  420b9c:	str	xzr, [x8, #16]
  420ba0:	ldr	x0, [x19, #16]
  420ba4:	add	x8, x0, #0x1
  420ba8:	str	x8, [x19, #16]
  420bac:	ldp	x20, x19, [sp, #64]
  420bb0:	ldp	x22, x21, [sp, #48]
  420bb4:	ldp	x24, x23, [sp, #32]
  420bb8:	ldp	x26, x25, [sp, #16]
  420bbc:	ldp	x29, x30, [sp], #80
  420bc0:	ret
  420bc4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  420bc8:	lsl	x26, x24, #1
  420bcc:	movk	x8, #0xaaa, lsl #48
  420bd0:	cmp	x26, x8
  420bd4:	b.hi	420c64 <_obstack_memory_used@@Base+0x9748>  // b.pmore
  420bd8:	ldr	x0, [x19]
  420bdc:	lsl	x1, x24, #5
  420be0:	bl	402870 <realloc@plt>
  420be4:	cbz	x0, 420c64 <_obstack_memory_used@@Base+0x9748>
  420be8:	ldr	x8, [x19, #24]
  420bec:	lsl	x23, x24, #4
  420bf0:	str	x0, [x19]
  420bf4:	mov	x1, x23
  420bf8:	mov	x0, x8
  420bfc:	bl	402870 <realloc@plt>
  420c00:	ldr	x8, [x19, #32]
  420c04:	mov	x22, x0
  420c08:	mov	x1, x23
  420c0c:	mov	x0, x8
  420c10:	bl	402870 <realloc@plt>
  420c14:	mov	x23, x0
  420c18:	ldr	x0, [x19, #40]
  420c1c:	add	x8, x24, x24, lsl #1
  420c20:	lsl	x25, x8, #4
  420c24:	mov	x1, x25
  420c28:	bl	402870 <realloc@plt>
  420c2c:	ldr	x8, [x19, #48]
  420c30:	mov	x24, x0
  420c34:	mov	x1, x25
  420c38:	mov	x0, x8
  420c3c:	bl	402870 <realloc@plt>
  420c40:	cbz	x22, 420c6c <_obstack_memory_used@@Base+0x9750>
  420c44:	cbz	x23, 420c6c <_obstack_memory_used@@Base+0x9750>
  420c48:	cbz	x24, 420c6c <_obstack_memory_used@@Base+0x9750>
  420c4c:	cbz	x0, 420c6c <_obstack_memory_used@@Base+0x9750>
  420c50:	ldr	x8, [x19, #16]
  420c54:	stp	x22, x23, [x19, #24]
  420c58:	stp	x24, x0, [x19, #40]
  420c5c:	str	x26, [x19, #8]
  420c60:	b	420afc <_obstack_memory_used@@Base+0x95e0>
  420c64:	mov	x0, #0xffffffffffffffff    	// #-1
  420c68:	b	420bac <_obstack_memory_used@@Base+0x9690>
  420c6c:	mov	x19, x0
  420c70:	mov	x0, x22
  420c74:	bl	402a10 <free@plt>
  420c78:	mov	x0, x23
  420c7c:	bl	402a10 <free@plt>
  420c80:	mov	x0, x24
  420c84:	bl	402a10 <free@plt>
  420c88:	mov	x0, x19
  420c8c:	bl	402a10 <free@plt>
  420c90:	mov	x0, #0xffffffffffffffff    	// #-1
  420c94:	b	420bac <_obstack_memory_used@@Base+0x9690>
  420c98:	sub	sp, sp, #0x90
  420c9c:	stp	x29, x30, [sp, #64]
  420ca0:	stp	x26, x25, [sp, #80]
  420ca4:	stp	x24, x23, [sp, #96]
  420ca8:	stp	x22, x21, [sp, #112]
  420cac:	stp	x20, x19, [sp, #128]
  420cb0:	ldr	x23, [x1, #40]
  420cb4:	mov	w8, #0x18                  	// #24
  420cb8:	mov	x19, x0
  420cbc:	add	x29, sp, #0x40
  420cc0:	madd	x25, x2, x8, x23
  420cc4:	ldr	x8, [x25, #8]!
  420cc8:	mov	w21, w3
  420ccc:	mov	x20, x2
  420cd0:	mov	x22, x1
  420cd4:	add	x24, x8, #0x1
  420cd8:	lsl	x0, x24, #3
  420cdc:	stp	x24, xzr, [sp, #32]
  420ce0:	bl	402730 <malloc@plt>
  420ce4:	str	x0, [sp, #48]
  420ce8:	cbz	x0, 420f0c <_obstack_memory_used@@Base+0x99f0>
  420cec:	ldr	x8, [x22, #48]
  420cf0:	mov	w9, #0x18                  	// #24
  420cf4:	madd	x8, x20, x9, x8
  420cf8:	mov	x9, #0xffffffffffffffff    	// #-1
  420cfc:	str	x9, [x8, #8]
  420d00:	ldr	x9, [x22]
  420d04:	add	x8, x9, x20, lsl #4
  420d08:	ldr	w8, [x8, #8]
  420d0c:	ubfx	w4, w8, #8, #10
  420d10:	cbz	w4, 420d5c <_obstack_memory_used@@Base+0x9840>
  420d14:	ldr	x10, [x25]
  420d18:	cbz	x10, 420d5c <_obstack_memory_used@@Base+0x9840>
  420d1c:	mov	w10, #0x18                  	// #24
  420d20:	madd	x10, x20, x10, x23
  420d24:	ldr	x10, [x10, #16]
  420d28:	ldr	x10, [x10]
  420d2c:	add	x9, x9, x10, lsl #4
  420d30:	ldrb	w9, [x9, #10]
  420d34:	tbnz	w9, #2, 420d5c <_obstack_memory_used@@Base+0x9840>
  420d38:	mov	x0, x22
  420d3c:	mov	x1, x20
  420d40:	mov	x2, x20
  420d44:	mov	x3, x20
  420d48:	bl	420fa8 <_obstack_memory_used@@Base+0x9a8c>
  420d4c:	cbnz	w0, 420ec8 <_obstack_memory_used@@Base+0x99ac>
  420d50:	ldr	x8, [x22]
  420d54:	add	x8, x8, x20, lsl #4
  420d58:	ldr	w8, [x8, #8]
  420d5c:	tbz	w8, #3, 420e24 <_obstack_memory_used@@Base+0x9908>
  420d60:	ldr	x8, [x22, #40]
  420d64:	mov	w9, #0x18                  	// #24
  420d68:	madd	x9, x20, x9, x8
  420d6c:	ldr	x9, [x9, #8]
  420d70:	cmp	x9, #0x1
  420d74:	b.lt	420e24 <_obstack_memory_used@@Base+0x9908>  // b.tstop
  420d78:	mov	w25, wzr
  420d7c:	mov	x24, xzr
  420d80:	mov	w26, #0x18                  	// #24
  420d84:	b	420da4 <_obstack_memory_used@@Base+0x9888>
  420d88:	mov	w25, #0x1                   	// #1
  420d8c:	ldr	x8, [x22, #40]
  420d90:	add	x24, x24, #0x1
  420d94:	madd	x9, x20, x26, x8
  420d98:	ldr	x9, [x9, #8]
  420d9c:	cmp	x24, x9
  420da0:	b.ge	420e6c <_obstack_memory_used@@Base+0x9950>  // b.tcont
  420da4:	madd	x8, x20, x26, x8
  420da8:	ldr	x8, [x8, #16]
  420dac:	ldr	x23, [x8, x24, lsl #3]
  420db0:	ldr	x8, [x22, #48]
  420db4:	madd	x9, x23, x26, x8
  420db8:	ldr	x9, [x9, #8]
  420dbc:	cmn	x9, #0x1
  420dc0:	b.eq	420d88 <_obstack_memory_used@@Base+0x986c>  // b.none
  420dc4:	cbnz	x9, 420de4 <_obstack_memory_used@@Base+0x98c8>
  420dc8:	mov	x0, sp
  420dcc:	mov	x1, x22
  420dd0:	mov	x2, x23
  420dd4:	mov	w3, wzr
  420dd8:	bl	420c98 <_obstack_memory_used@@Base+0x977c>
  420ddc:	cbz	w0, 420df8 <_obstack_memory_used@@Base+0x98dc>
  420de0:	b	420ec8 <_obstack_memory_used@@Base+0x99ac>
  420de4:	madd	x8, x23, x26, x8
  420de8:	ldr	x9, [x8, #16]
  420dec:	ldr	q0, [x8]
  420df0:	str	x9, [sp, #16]
  420df4:	str	q0, [sp]
  420df8:	add	x0, sp, #0x20
  420dfc:	mov	x1, sp
  420e00:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  420e04:	cbnz	w0, 420ec8 <_obstack_memory_used@@Base+0x99ac>
  420e08:	ldr	x8, [x22, #48]
  420e0c:	madd	x8, x23, x26, x8
  420e10:	ldr	x8, [x8, #8]
  420e14:	cbnz	x8, 420d8c <_obstack_memory_used@@Base+0x9870>
  420e18:	ldr	x0, [sp, #16]
  420e1c:	bl	402a10 <free@plt>
  420e20:	b	420d88 <_obstack_memory_used@@Base+0x986c>
  420e24:	mov	w23, #0x1                   	// #1
  420e28:	cbz	x24, 420e7c <_obstack_memory_used@@Base+0x9960>
  420e2c:	ldr	x25, [sp, #40]
  420e30:	cbnz	x25, 420ee4 <_obstack_memory_used@@Base+0x99c8>
  420e34:	ldr	x8, [sp, #48]
  420e38:	mov	w9, #0x1                   	// #1
  420e3c:	str	x20, [x8]
  420e40:	str	x9, [sp, #40]
  420e44:	ldr	x8, [x22, #48]
  420e48:	orr	w9, w23, w21
  420e4c:	tbz	w9, #0, 420ea8 <_obstack_memory_used@@Base+0x998c>
  420e50:	ldr	x9, [sp, #48]
  420e54:	ldr	q0, [sp, #32]
  420e58:	mov	w10, #0x18                  	// #24
  420e5c:	madd	x8, x20, x10, x8
  420e60:	str	x9, [x8, #16]
  420e64:	str	q0, [x8]
  420e68:	b	420eb4 <_obstack_memory_used@@Base+0x9998>
  420e6c:	ldr	x24, [sp, #32]
  420e70:	tst	w25, #0x1
  420e74:	cset	w23, eq  // eq = none
  420e78:	cbnz	x24, 420e2c <_obstack_memory_used@@Base+0x9910>
  420e7c:	mov	w8, #0x1                   	// #1
  420e80:	dup	v0.2d, x8
  420e84:	mov	w0, #0x8                   	// #8
  420e88:	str	q0, [sp, #32]
  420e8c:	bl	402730 <malloc@plt>
  420e90:	str	x0, [sp, #48]
  420e94:	cbz	x0, 420f14 <_obstack_memory_used@@Base+0x99f8>
  420e98:	str	x20, [x0]
  420e9c:	ldr	x8, [x22, #48]
  420ea0:	orr	w9, w23, w21
  420ea4:	tbnz	w9, #0, 420e50 <_obstack_memory_used@@Base+0x9934>
  420ea8:	mov	w9, #0x18                  	// #24
  420eac:	madd	x8, x20, x9, x8
  420eb0:	str	xzr, [x8, #8]
  420eb4:	ldr	x8, [sp, #48]
  420eb8:	ldr	q0, [sp, #32]
  420ebc:	mov	w0, wzr
  420ec0:	str	x8, [x19, #16]
  420ec4:	str	q0, [x19]
  420ec8:	ldp	x20, x19, [sp, #128]
  420ecc:	ldp	x22, x21, [sp, #112]
  420ed0:	ldp	x24, x23, [sp, #96]
  420ed4:	ldp	x26, x25, [sp, #80]
  420ed8:	ldp	x29, x30, [sp, #64]
  420edc:	add	sp, sp, #0x90
  420ee0:	ret
  420ee4:	cmp	x24, x25
  420ee8:	b.ne	420f20 <_obstack_memory_used@@Base+0x9a04>  // b.any
  420eec:	ldr	x0, [sp, #48]
  420ef0:	lsl	x8, x24, #1
  420ef4:	lsl	x1, x24, #4
  420ef8:	str	x8, [sp, #32]
  420efc:	bl	402870 <realloc@plt>
  420f00:	cbz	x0, 420f0c <_obstack_memory_used@@Base+0x99f0>
  420f04:	str	x0, [sp, #48]
  420f08:	b	420f24 <_obstack_memory_used@@Base+0x9a08>
  420f0c:	mov	w0, #0xc                   	// #12
  420f10:	b	420ec8 <_obstack_memory_used@@Base+0x99ac>
  420f14:	stp	xzr, xzr, [sp, #32]
  420f18:	mov	w0, #0xc                   	// #12
  420f1c:	b	420ec8 <_obstack_memory_used@@Base+0x99ac>
  420f20:	ldr	x0, [sp, #48]
  420f24:	ldr	x8, [x0]
  420f28:	cmp	x8, x20
  420f2c:	b.le	420f58 <_obstack_memory_used@@Base+0x9a3c>
  420f30:	cmp	x25, #0x1
  420f34:	b.lt	420f88 <_obstack_memory_used@@Base+0x9a6c>  // b.tstop
  420f38:	mov	x9, x25
  420f3c:	add	x10, x0, x9, lsl #3
  420f40:	ldur	x11, [x10, #-8]
  420f44:	subs	x8, x9, #0x1
  420f48:	mov	x9, x8
  420f4c:	str	x11, [x10]
  420f50:	b.gt	420f3c <_obstack_memory_used@@Base+0x9a20>
  420f54:	b	420f8c <_obstack_memory_used@@Base+0x9a70>
  420f58:	add	x8, x0, x25, lsl #3
  420f5c:	ldur	x9, [x8, #-8]
  420f60:	mov	x8, x25
  420f64:	cmp	x9, x20
  420f68:	b.le	420f8c <_obstack_memory_used@@Base+0x9a70>
  420f6c:	add	x10, x0, x8, lsl #3
  420f70:	str	x9, [x10]
  420f74:	ldur	x9, [x10, #-16]
  420f78:	sub	x8, x8, #0x1
  420f7c:	cmp	x9, x20
  420f80:	b.gt	420f6c <_obstack_memory_used@@Base+0x9a50>
  420f84:	b	420f8c <_obstack_memory_used@@Base+0x9a70>
  420f88:	mov	x8, x25
  420f8c:	str	x20, [x0, x8, lsl #3]
  420f90:	add	x8, x25, #0x1
  420f94:	str	x8, [sp, #40]
  420f98:	ldr	x8, [x22, #48]
  420f9c:	orr	w9, w23, w21
  420fa0:	tbnz	w9, #0, 420e50 <_obstack_memory_used@@Base+0x9934>
  420fa4:	b	420ea8 <_obstack_memory_used@@Base+0x998c>
  420fa8:	stp	x29, x30, [sp, #-96]!
  420fac:	stp	x26, x25, [sp, #32]
  420fb0:	stp	x24, x23, [sp, #48]
  420fb4:	stp	x22, x21, [sp, #64]
  420fb8:	stp	x20, x19, [sp, #80]
  420fbc:	mov	w19, w4
  420fc0:	mov	x20, x3
  420fc4:	mov	x22, x2
  420fc8:	mov	x23, x1
  420fcc:	mov	x21, x0
  420fd0:	mov	w25, #0x18                  	// #24
  420fd4:	str	x27, [sp, #16]
  420fd8:	mov	x29, sp
  420fdc:	ubfiz	w26, w19, #8, #10
  420fe0:	mov	x27, x23
  420fe4:	b	421098 <_obstack_memory_used@@Base+0x9b7c>
  420fe8:	ldr	x9, [x21, #24]
  420fec:	ldr	x10, [x21, #40]
  420ff0:	mov	x0, x21
  420ff4:	ldr	x24, [x9, x27, lsl #3]
  420ff8:	madd	x9, x22, x25, x10
  420ffc:	str	xzr, [x9, #8]
  421000:	add	x8, x8, x24, lsl #4
  421004:	ldp	x1, x2, [x8]
  421008:	bl	420acc <_obstack_memory_used@@Base+0x95b0>
  42100c:	cmn	x0, #0x1
  421010:	b.eq	421374 <_obstack_memory_used@@Base+0x9e58>  // b.none
  421014:	ldr	x8, [x21]
  421018:	lsl	x9, x0, #4
  42101c:	mov	x23, x0
  421020:	mov	x1, x23
  421024:	add	x8, x8, x9
  421028:	ldr	w10, [x8, #8]
  42102c:	and	w10, w10, #0xfffc00ff
  421030:	orr	w10, w10, w26
  421034:	str	w10, [x8, #8]
  421038:	ldr	x8, [x21]
  42103c:	add	x10, x8, x24, lsl #4
  421040:	ldr	w10, [x10, #8]
  421044:	add	x8, x8, x9
  421048:	ldr	w11, [x8, #8]
  42104c:	and	w10, w10, #0x3ff00
  421050:	orr	w10, w10, w11
  421054:	str	w10, [x8, #8]
  421058:	ldr	x8, [x21]
  42105c:	add	x8, x8, x9
  421060:	ldr	w9, [x8, #8]
  421064:	orr	w9, w9, #0x40000
  421068:	str	w9, [x8, #8]
  42106c:	ldr	x8, [x21, #32]
  421070:	str	x24, [x8, x0, lsl #3]
  421074:	ldr	x8, [x21, #24]
  421078:	ldr	x9, [x8, x27, lsl #3]
  42107c:	str	x9, [x8, x22, lsl #3]
  421080:	ldr	x8, [x21, #40]
  421084:	madd	x0, x22, x25, x8
  421088:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  42108c:	mov	x27, x24
  421090:	mov	x22, x23
  421094:	tbz	w0, #0, 421374 <_obstack_memory_used@@Base+0x9e58>
  421098:	ldr	x8, [x21]
  42109c:	add	x10, x8, x27, lsl #4
  4210a0:	ldrb	w9, [x10, #8]!
  4210a4:	cmp	w9, #0x4
  4210a8:	b.eq	420fe8 <_obstack_memory_used@@Base+0x9acc>  // b.none
  4210ac:	ldr	x9, [x21, #40]
  4210b0:	madd	x11, x27, x25, x9
  4210b4:	ldr	x11, [x11, #8]
  4210b8:	cbz	x11, 42132c <_obstack_memory_used@@Base+0x9e10>
  4210bc:	madd	x12, x27, x25, x9
  4210c0:	ldr	x12, [x12, #16]
  4210c4:	cmp	x11, #0x1
  4210c8:	ldr	x23, [x12]
  4210cc:	madd	x12, x22, x25, x9
  4210d0:	str	xzr, [x12, #8]
  4210d4:	b.eq	421284 <_obstack_memory_used@@Base+0x9d68>  // b.none
  4210d8:	ldr	x12, [x21, #16]
  4210dc:	sub	x1, x12, #0x1
  4210e0:	cmp	x1, #0x1
  4210e4:	b.lt	42112c <_obstack_memory_used@@Base+0x9c10>  // b.tstop
  4210e8:	add	x10, x8, x1, lsl #4
  4210ec:	ldr	w11, [x10, #8]
  4210f0:	tbz	w11, #18, 42112c <_obstack_memory_used@@Base+0x9c10>
  4210f4:	ldr	x10, [x21, #32]
  4210f8:	add	x12, x8, x12, lsl #4
  4210fc:	sub	x12, x12, #0x18
  421100:	ldr	x13, [x10, x1, lsl #3]
  421104:	cmp	x13, x23
  421108:	b.ne	421118 <_obstack_memory_used@@Base+0x9bfc>  // b.any
  42110c:	ubfx	w11, w11, #8, #10
  421110:	cmp	w11, w19
  421114:	b.eq	421274 <_obstack_memory_used@@Base+0x9d58>  // b.none
  421118:	ldr	w11, [x12], #-16
  42111c:	sub	x1, x1, #0x1
  421120:	cmp	x1, #0x1
  421124:	b.lt	42112c <_obstack_memory_used@@Base+0x9c10>  // b.tstop
  421128:	tbnz	w11, #18, 421100 <_obstack_memory_used@@Base+0x9be4>
  42112c:	add	x8, x8, x23, lsl #4
  421130:	ldp	x1, x2, [x8]
  421134:	mov	x0, x21
  421138:	bl	420acc <_obstack_memory_used@@Base+0x95b0>
  42113c:	cmn	x0, #0x1
  421140:	b.eq	421374 <_obstack_memory_used@@Base+0x9e58>  // b.none
  421144:	ldr	x8, [x21]
  421148:	lsl	x9, x0, #4
  42114c:	mov	x24, x0
  421150:	mov	x1, x24
  421154:	add	x8, x8, x9
  421158:	ldr	w10, [x8, #8]
  42115c:	and	w10, w10, #0xfffc00ff
  421160:	orr	w10, w10, w26
  421164:	str	w10, [x8, #8]
  421168:	ldr	x8, [x21]
  42116c:	add	x10, x8, x23, lsl #4
  421170:	ldr	w10, [x10, #8]
  421174:	add	x8, x8, x9
  421178:	ldr	w11, [x8, #8]
  42117c:	and	w10, w10, #0x3ff00
  421180:	orr	w10, w10, w11
  421184:	str	w10, [x8, #8]
  421188:	ldr	x8, [x21]
  42118c:	add	x8, x8, x9
  421190:	ldr	w9, [x8, #8]
  421194:	orr	w9, w9, #0x40000
  421198:	str	w9, [x8, #8]
  42119c:	ldr	x8, [x21, #32]
  4211a0:	str	x23, [x8, x0, lsl #3]
  4211a4:	ldr	x8, [x21, #40]
  4211a8:	madd	x0, x22, x25, x8
  4211ac:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  4211b0:	tbz	w0, #0, 421374 <_obstack_memory_used@@Base+0x9e58>
  4211b4:	mov	x0, x21
  4211b8:	mov	x1, x23
  4211bc:	mov	x2, x24
  4211c0:	mov	x3, x20
  4211c4:	mov	w4, w19
  4211c8:	bl	420fa8 <_obstack_memory_used@@Base+0x9a8c>
  4211cc:	cbnz	w0, 42133c <_obstack_memory_used@@Base+0x9e20>
  4211d0:	ldr	x8, [x21, #40]
  4211d4:	ldr	x9, [x21]
  4211d8:	mov	x0, x21
  4211dc:	madd	x8, x27, x25, x8
  4211e0:	ldr	x8, [x8, #16]
  4211e4:	ldr	x27, [x8, #8]
  4211e8:	add	x8, x9, x27, lsl #4
  4211ec:	ldp	x1, x2, [x8]
  4211f0:	bl	420acc <_obstack_memory_used@@Base+0x95b0>
  4211f4:	cmn	x0, #0x1
  4211f8:	b.eq	421374 <_obstack_memory_used@@Base+0x9e58>  // b.none
  4211fc:	ldr	x8, [x21]
  421200:	lsl	x9, x0, #4
  421204:	mov	x23, x0
  421208:	mov	x1, x23
  42120c:	add	x8, x8, x9
  421210:	ldr	w10, [x8, #8]
  421214:	and	w10, w10, #0xfffc00ff
  421218:	orr	w10, w10, w26
  42121c:	str	w10, [x8, #8]
  421220:	ldr	x8, [x21]
  421224:	add	x10, x8, x27, lsl #4
  421228:	ldr	w10, [x10, #8]
  42122c:	add	x8, x8, x9
  421230:	ldr	w11, [x8, #8]
  421234:	and	w10, w10, #0x3ff00
  421238:	orr	w10, w10, w11
  42123c:	str	w10, [x8, #8]
  421240:	ldr	x8, [x21]
  421244:	add	x8, x8, x9
  421248:	ldr	w9, [x8, #8]
  42124c:	orr	w9, w9, #0x40000
  421250:	str	w9, [x8, #8]
  421254:	ldr	x8, [x21, #32]
  421258:	str	x27, [x8, x0, lsl #3]
  42125c:	ldr	x8, [x21, #40]
  421260:	madd	x0, x22, x25, x8
  421264:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  421268:	mov	x22, x23
  42126c:	tbnz	w0, #0, 421098 <_obstack_memory_used@@Base+0x9b7c>
  421270:	b	421374 <_obstack_memory_used@@Base+0x9e58>
  421274:	madd	x0, x22, x25, x9
  421278:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  42127c:	tbnz	w0, #0, 4211d0 <_obstack_memory_used@@Base+0x9cb4>
  421280:	b	421374 <_obstack_memory_used@@Base+0x9e58>
  421284:	cmp	x27, x20
  421288:	b.ne	421294 <_obstack_memory_used@@Base+0x9d78>  // b.any
  42128c:	cmp	x22, x27
  421290:	b.ne	421358 <_obstack_memory_used@@Base+0x9e3c>  // b.any
  421294:	add	x8, x8, x23, lsl #4
  421298:	ldp	x1, x2, [x8]
  42129c:	ldr	w26, [x10]
  4212a0:	mov	x0, x21
  4212a4:	bl	420acc <_obstack_memory_used@@Base+0x95b0>
  4212a8:	cmn	x0, #0x1
  4212ac:	b.eq	421374 <_obstack_memory_used@@Base+0x9e58>  // b.none
  4212b0:	ldr	x8, [x21]
  4212b4:	lsl	x9, x0, #4
  4212b8:	ubfx	w11, w26, #8, #10
  4212bc:	orr	w19, w11, w19
  4212c0:	add	x8, x8, x9
  4212c4:	ldr	w10, [x8, #8]
  4212c8:	mov	x24, x0
  4212cc:	mov	x1, x24
  4212d0:	bfi	w10, w19, #8, #10
  4212d4:	str	w10, [x8, #8]
  4212d8:	ldr	x8, [x21]
  4212dc:	add	x10, x8, x23, lsl #4
  4212e0:	ldr	w10, [x10, #8]
  4212e4:	add	x8, x8, x9
  4212e8:	ldr	w11, [x8, #8]
  4212ec:	and	w10, w10, #0x3ff00
  4212f0:	orr	w10, w10, w11
  4212f4:	str	w10, [x8, #8]
  4212f8:	ldr	x8, [x21]
  4212fc:	add	x8, x8, x9
  421300:	ldr	w9, [x8, #8]
  421304:	orr	w9, w9, #0x40000
  421308:	str	w9, [x8, #8]
  42130c:	ldr	x8, [x21, #32]
  421310:	str	x23, [x8, x0, lsl #3]
  421314:	ldr	x8, [x21, #40]
  421318:	madd	x0, x22, x25, x8
  42131c:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  421320:	mov	x22, x24
  421324:	tbnz	w0, #0, 420fdc <_obstack_memory_used@@Base+0x9ac0>
  421328:	b	421374 <_obstack_memory_used@@Base+0x9e58>
  42132c:	ldr	x8, [x21, #24]
  421330:	mov	w0, wzr
  421334:	ldr	x9, [x8, x27, lsl #3]
  421338:	str	x9, [x8, x22, lsl #3]
  42133c:	ldp	x20, x19, [sp, #80]
  421340:	ldp	x22, x21, [sp, #64]
  421344:	ldp	x24, x23, [sp, #48]
  421348:	ldp	x26, x25, [sp, #32]
  42134c:	ldr	x27, [sp, #16]
  421350:	ldp	x29, x30, [sp], #96
  421354:	ret
  421358:	mov	w8, #0x18                  	// #24
  42135c:	madd	x0, x22, x8, x9
  421360:	mov	x1, x23
  421364:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  421368:	tbz	w0, #0, 421374 <_obstack_memory_used@@Base+0x9e58>
  42136c:	mov	w0, wzr
  421370:	b	42133c <_obstack_memory_used@@Base+0x9e20>
  421374:	mov	w0, #0xc                   	// #12
  421378:	b	42133c <_obstack_memory_used@@Base+0x9e20>
  42137c:	stp	x29, x30, [sp, #-48]!
  421380:	str	x21, [sp, #16]
  421384:	stp	x20, x19, [sp, #32]
  421388:	mov	x29, sp
  42138c:	cbz	x1, 421474 <_obstack_memory_used@@Base+0x9f58>
  421390:	ldr	x10, [x1, #8]
  421394:	mov	x20, x1
  421398:	cbz	x10, 421474 <_obstack_memory_used@@Base+0x9f58>
  42139c:	ldp	x8, x11, [x0]
  4213a0:	mov	x19, x0
  4213a4:	add	x9, x11, x10, lsl #1
  4213a8:	cmp	x8, x9
  4213ac:	b.ge	4213d8 <_obstack_memory_used@@Base+0x9ebc>  // b.tcont
  4213b0:	ldr	x0, [x19, #16]
  4213b4:	add	x21, x8, x10
  4213b8:	lsl	x1, x21, #4
  4213bc:	bl	402870 <realloc@plt>
  4213c0:	cbz	x0, 421500 <_obstack_memory_used@@Base+0x9fe4>
  4213c4:	lsl	x8, x21, #1
  4213c8:	str	x0, [x19, #16]
  4213cc:	str	x8, [x19]
  4213d0:	ldr	x11, [x19, #8]
  4213d4:	ldr	x10, [x20, #8]
  4213d8:	cbz	x11, 4214ec <_obstack_memory_used@@Base+0x9fd0>
  4213dc:	sub	x8, x10, #0x1
  4213e0:	sub	x9, x11, #0x1
  4213e4:	orr	x12, x8, x9
  4213e8:	add	x21, x11, x10, lsl #1
  4213ec:	tbnz	x12, #63, 421438 <_obstack_memory_used@@Base+0x9f1c>
  4213f0:	ldr	x10, [x19, #16]
  4213f4:	ldr	x11, [x20, #16]
  4213f8:	b	421410 <_obstack_memory_used@@Base+0x9ef4>
  4213fc:	sub	x8, x8, #0x1
  421400:	sub	x21, x21, #0x1
  421404:	str	x12, [x10, x21, lsl #3]
  421408:	orr	x12, x8, x9
  42140c:	tbnz	x12, #63, 421438 <_obstack_memory_used@@Base+0x9f1c>
  421410:	ldr	x13, [x10, x9, lsl #3]
  421414:	ldr	x12, [x11, x8, lsl #3]
  421418:	cmp	x13, x12
  42141c:	b.ne	421428 <_obstack_memory_used@@Base+0x9f0c>  // b.any
  421420:	sub	x8, x8, #0x1
  421424:	b	42142c <_obstack_memory_used@@Base+0x9f10>
  421428:	b.lt	4213fc <_obstack_memory_used@@Base+0x9ee0>  // b.tstop
  42142c:	sub	x9, x9, #0x1
  421430:	orr	x12, x8, x9
  421434:	tbz	x12, #63, 421410 <_obstack_memory_used@@Base+0x9ef4>
  421438:	tbnz	x8, #63, 421458 <_obstack_memory_used@@Base+0x9f3c>
  42143c:	ldr	x9, [x19, #16]
  421440:	ldr	x1, [x20, #16]
  421444:	add	x8, x8, #0x1
  421448:	sub	x21, x21, x8
  42144c:	add	x0, x9, x21, lsl #3
  421450:	lsl	x2, x8, #3
  421454:	bl	402580 <memcpy@plt>
  421458:	ldr	x10, [x19, #8]
  42145c:	ldr	x8, [x20, #8]
  421460:	sub	x9, x10, #0x1
  421464:	add	x8, x9, x8, lsl #1
  421468:	sub	x11, x8, x21
  42146c:	adds	x11, x11, #0x1
  421470:	b.cc	421488 <_obstack_memory_used@@Base+0x9f6c>  // b.lo, b.ul, b.last
  421474:	mov	w0, wzr
  421478:	ldp	x20, x19, [sp, #32]
  42147c:	ldr	x21, [sp, #16]
  421480:	ldp	x29, x30, [sp], #48
  421484:	ret
  421488:	ldr	x0, [x19, #16]
  42148c:	add	x10, x11, x10
  421490:	str	x10, [x19, #8]
  421494:	add	x10, x0, x9, lsl #3
  421498:	lsl	x2, x11, #3
  42149c:	neg	x11, x11
  4214a0:	ldr	x12, [x0, x8, lsl #3]
  4214a4:	ldr	x13, [x0, x9, lsl #3]
  4214a8:	cmp	x12, x13
  4214ac:	b.le	4214c8 <_obstack_memory_used@@Base+0x9fac>
  4214b0:	sub	x8, x8, #0x1
  4214b4:	str	x12, [x10, x2]
  4214b8:	adds	x11, x11, #0x1
  4214bc:	sub	x2, x2, #0x8
  4214c0:	b.cc	4214a0 <_obstack_memory_used@@Base+0x9f84>  // b.lo, b.ul, b.last
  4214c4:	b	421474 <_obstack_memory_used@@Base+0x9f58>
  4214c8:	str	x13, [x10, x2]
  4214cc:	cmp	x9, #0x0
  4214d0:	sub	x9, x9, #0x1
  4214d4:	neg	x11, x11
  4214d8:	sub	x10, x10, #0x8
  4214dc:	b.gt	421498 <_obstack_memory_used@@Base+0x9f7c>
  4214e0:	add	x1, x0, x21, lsl #3
  4214e4:	bl	402580 <memcpy@plt>
  4214e8:	b	421474 <_obstack_memory_used@@Base+0x9f58>
  4214ec:	str	x10, [x19, #8]
  4214f0:	ldp	x8, x1, [x20, #8]
  4214f4:	ldr	x0, [x19, #16]
  4214f8:	lsl	x2, x8, #3
  4214fc:	b	4214e4 <_obstack_memory_used@@Base+0x9fc8>
  421500:	mov	w0, #0xc                   	// #12
  421504:	ldp	x20, x19, [sp, #32]
  421508:	ldr	x21, [sp, #16]
  42150c:	ldp	x29, x30, [sp], #48
  421510:	ret
  421514:	stp	x29, x30, [sp, #-32]!
  421518:	stp	x20, x19, [sp, #16]
  42151c:	ldr	x9, [x0]
  421520:	mov	x19, x0
  421524:	mov	x20, x1
  421528:	mov	x29, sp
  42152c:	cbz	x9, 421550 <_obstack_memory_used@@Base+0xa034>
  421530:	ldr	x8, [x19, #8]
  421534:	cbnz	x8, 421580 <_obstack_memory_used@@Base+0xa064>
  421538:	ldr	x8, [x19, #16]
  42153c:	str	x20, [x8]
  421540:	ldr	x8, [x19, #8]
  421544:	add	x8, x8, #0x1
  421548:	str	x8, [x19, #8]
  42154c:	b	421570 <_obstack_memory_used@@Base+0xa054>
  421550:	mov	w8, #0x1                   	// #1
  421554:	dup	v0.2d, x8
  421558:	mov	w0, #0x8                   	// #8
  42155c:	str	q0, [x19]
  421560:	bl	402730 <malloc@plt>
  421564:	str	x0, [x19, #16]
  421568:	cbz	x0, 4215ac <_obstack_memory_used@@Base+0xa090>
  42156c:	str	x20, [x0]
  421570:	mov	w0, #0x1                   	// #1
  421574:	ldp	x20, x19, [sp, #16]
  421578:	ldp	x29, x30, [sp], #32
  42157c:	ret
  421580:	cmp	x9, x8
  421584:	b.ne	4215bc <_obstack_memory_used@@Base+0xa0a0>  // b.any
  421588:	ldr	x0, [x19, #16]
  42158c:	lsl	x8, x9, #1
  421590:	lsl	x1, x9, #4
  421594:	str	x8, [x19]
  421598:	bl	402870 <realloc@plt>
  42159c:	cbz	x0, 421574 <_obstack_memory_used@@Base+0xa058>
  4215a0:	ldr	x8, [x19, #8]
  4215a4:	str	x0, [x19, #16]
  4215a8:	b	4215c0 <_obstack_memory_used@@Base+0xa0a4>
  4215ac:	stp	xzr, xzr, [x19]
  4215b0:	ldp	x20, x19, [sp, #16]
  4215b4:	ldp	x29, x30, [sp], #32
  4215b8:	ret
  4215bc:	ldr	x0, [x19, #16]
  4215c0:	ldr	x9, [x0]
  4215c4:	cmp	x9, x20
  4215c8:	b.le	4215f4 <_obstack_memory_used@@Base+0xa0d8>
  4215cc:	cmp	x8, #0x1
  4215d0:	b.lt	42161c <_obstack_memory_used@@Base+0xa100>  // b.tstop
  4215d4:	mov	x9, x8
  4215d8:	add	x10, x0, x9, lsl #3
  4215dc:	ldur	x11, [x10, #-8]
  4215e0:	subs	x8, x9, #0x1
  4215e4:	mov	x9, x8
  4215e8:	str	x11, [x10]
  4215ec:	b.gt	4215d8 <_obstack_memory_used@@Base+0xa0bc>
  4215f0:	b	42161c <_obstack_memory_used@@Base+0xa100>
  4215f4:	add	x9, x0, x8, lsl #3
  4215f8:	ldur	x9, [x9, #-8]
  4215fc:	cmp	x9, x20
  421600:	b.le	42161c <_obstack_memory_used@@Base+0xa100>
  421604:	add	x10, x0, x8, lsl #3
  421608:	str	x9, [x10]
  42160c:	ldur	x9, [x10, #-16]
  421610:	sub	x8, x8, #0x1
  421614:	cmp	x9, x20
  421618:	b.gt	421604 <_obstack_memory_used@@Base+0xa0e8>
  42161c:	str	x20, [x0, x8, lsl #3]
  421620:	b	421540 <_obstack_memory_used@@Base+0xa024>
  421624:	sub	sp, sp, #0x90
  421628:	stp	x29, x30, [sp, #48]
  42162c:	stp	x28, x27, [sp, #64]
  421630:	stp	x26, x25, [sp, #80]
  421634:	stp	x24, x23, [sp, #96]
  421638:	stp	x22, x21, [sp, #112]
  42163c:	stp	x20, x19, [sp, #128]
  421640:	ldr	x27, [x2, #8]
  421644:	mov	x19, x0
  421648:	add	x29, sp, #0x30
  42164c:	cbz	x27, 42167c <_obstack_memory_used@@Base+0xa160>
  421650:	mov	w26, w3
  421654:	mov	x22, x2
  421658:	mov	x20, x1
  42165c:	subs	x8, x27, #0x1
  421660:	add	x23, x27, w3, uxtw
  421664:	b.lt	4216e4 <_obstack_memory_used@@Base+0xa1c8>  // b.tstop
  421668:	ldr	x9, [x22, #16]
  42166c:	cmp	x27, #0x4
  421670:	b.cs	421688 <_obstack_memory_used@@Base+0xa16c>  // b.hs, b.nlast
  421674:	mov	x10, xzr
  421678:	b	4216cc <_obstack_memory_used@@Base+0xa1b0>
  42167c:	mov	x24, xzr
  421680:	str	wzr, [x19]
  421684:	b	421d94 <_obstack_memory_used@@Base+0xa878>
  421688:	and	x10, x27, #0xfffffffffffffffc
  42168c:	movi	v1.2d, #0x0
  421690:	movi	v0.2d, #0x0
  421694:	mov	v1.d[0], x23
  421698:	add	x11, x9, #0x10
  42169c:	mov	x12, x10
  4216a0:	ldp	q2, q3, [x11, #-16]
  4216a4:	subs	x12, x12, #0x4
  4216a8:	add	x11, x11, #0x20
  4216ac:	add	v1.2d, v2.2d, v1.2d
  4216b0:	add	v0.2d, v3.2d, v0.2d
  4216b4:	b.ne	4216a0 <_obstack_memory_used@@Base+0xa184>  // b.any
  4216b8:	add	v0.2d, v0.2d, v1.2d
  4216bc:	addp	d0, v0.2d
  4216c0:	cmp	x27, x10
  4216c4:	fmov	x23, d0
  4216c8:	b.eq	4216e4 <_obstack_memory_used@@Base+0xa1c8>  // b.none
  4216cc:	sub	x11, x27, x10
  4216d0:	add	x9, x9, x10, lsl #3
  4216d4:	ldr	x10, [x9], #8
  4216d8:	subs	x11, x11, #0x1
  4216dc:	add	x23, x10, x23
  4216e0:	b.ne	4216d4 <_obstack_memory_used@@Base+0xa1b8>  // b.any
  4216e4:	ldr	x9, [x20, #136]
  4216e8:	ldr	x10, [x20, #64]
  4216ec:	and	x11, x9, x23
  4216f0:	mov	w9, #0x18                  	// #24
  4216f4:	mul	x9, x11, x9
  4216f8:	ldr	x9, [x10, x9]
  4216fc:	cmp	x9, #0x1
  421700:	b.lt	421790 <_obstack_memory_used@@Base+0xa274>  // b.tstop
  421704:	cbz	x22, 421790 <_obstack_memory_used@@Base+0xa274>
  421708:	mov	w12, #0x18                  	// #24
  42170c:	madd	x10, x11, x12, x10
  421710:	ldr	x10, [x10, #16]
  421714:	mov	x11, xzr
  421718:	b	421728 <_obstack_memory_used@@Base+0xa20c>
  42171c:	add	x11, x11, #0x1
  421720:	cmp	x11, x9
  421724:	b.ge	421790 <_obstack_memory_used@@Base+0xa274>  // b.tcont
  421728:	ldr	x24, [x10, x11, lsl #3]
  42172c:	ldr	x12, [x24]
  421730:	cmp	x12, x23
  421734:	b.ne	42171c <_obstack_memory_used@@Base+0xa200>  // b.any
  421738:	ldrb	w12, [x24, #104]
  42173c:	and	w12, w12, #0xf
  421740:	cmp	w12, w26
  421744:	b.ne	42171c <_obstack_memory_used@@Base+0xa200>  // b.any
  421748:	ldr	x12, [x24, #80]
  42174c:	cbz	x12, 42171c <_obstack_memory_used@@Base+0xa200>
  421750:	ldr	x13, [x12, #8]
  421754:	cmp	x13, x27
  421758:	b.ne	42171c <_obstack_memory_used@@Base+0xa200>  // b.any
  42175c:	mov	x13, x8
  421760:	add	x14, x13, #0x1
  421764:	cmp	x14, #0x1
  421768:	b.lt	421d94 <_obstack_memory_used@@Base+0xa878>  // b.tstop
  42176c:	ldr	x14, [x12, #16]
  421770:	ldr	x15, [x22, #16]
  421774:	lsl	x16, x13, #3
  421778:	sub	x13, x13, #0x1
  42177c:	ldr	x14, [x14, x16]
  421780:	ldr	x15, [x15, x16]
  421784:	cmp	x14, x15
  421788:	b.eq	421760 <_obstack_memory_used@@Base+0xa244>  // b.none
  42178c:	b	42171c <_obstack_memory_used@@Base+0xa200>
  421790:	mov	w0, #0x70                  	// #112
  421794:	mov	w1, #0x1                   	// #1
  421798:	bl	402840 <calloc@plt>
  42179c:	cbz	x0, 421dc8 <_obstack_memory_used@@Base+0xa8ac>
  4217a0:	mov	x24, x0
  4217a4:	add	x13, x0, #0x8
  4217a8:	cmp	x27, #0x1
  4217ac:	str	x27, [x0, #16]
  4217b0:	str	x20, [sp, #16]
  4217b4:	stur	x13, [x29, #-8]
  4217b8:	str	x19, [sp, #8]
  4217bc:	b.lt	4217f8 <_obstack_memory_used@@Base+0xa2dc>  // b.tstop
  4217c0:	lsl	x25, x27, #3
  4217c4:	mov	x0, x25
  4217c8:	str	x27, [x24, #8]
  4217cc:	bl	402730 <malloc@plt>
  4217d0:	str	x0, [x24, #24]
  4217d4:	cbz	x0, 421dd8 <_obstack_memory_used@@Base+0xa8bc>
  4217d8:	ldr	x1, [x22, #16]
  4217dc:	mov	x2, x25
  4217e0:	bl	402580 <memcpy@plt>
  4217e4:	ldrb	w8, [x24, #104]
  4217e8:	ldr	x27, [x22, #8]
  4217ec:	ldur	x13, [x29, #-8]
  4217f0:	and	w8, w8, #0xfffffff0
  4217f4:	b	421804 <_obstack_memory_used@@Base+0xa2e8>
  4217f8:	mov	w8, wzr
  4217fc:	stp	xzr, xzr, [x13]
  421800:	str	xzr, [x13, #16]
  421804:	and	w9, w26, #0xf
  421808:	mov	x19, x24
  42180c:	orr	w8, w8, w9
  421810:	strb	w8, [x19, #104]!
  421814:	cmp	x27, #0x1
  421818:	stur	x13, [x19, #-24]
  42181c:	b.lt	421d80 <_obstack_memory_used@@Base+0xa864>  // b.tstop
  421820:	ldr	x8, [sp, #16]
  421824:	ldr	x25, [x22, #16]
  421828:	mov	x28, xzr
  42182c:	stur	w26, [x29, #-12]
  421830:	ldr	x14, [x8]
  421834:	mov	x8, xzr
  421838:	str	x14, [sp, #24]
  42183c:	tbnz	w26, #0, 421ae0 <_obstack_memory_used@@Base+0xa5c4>
  421840:	tbnz	w26, #1, 4219b0 <_obstack_memory_used@@Base+0xa494>
  421844:	mov	w15, #0x1100                	// #4352
  421848:	b	421860 <_obstack_memory_used@@Base+0xa344>
  42184c:	add	x8, x8, #0x1
  421850:	ldr	x27, [x22, #8]
  421854:	add	x28, x28, #0x1
  421858:	cmp	x28, x27
  42185c:	b.ge	421d80 <_obstack_memory_used@@Base+0xa864>  // b.tcont
  421860:	ldr	x9, [x25, x28, lsl #3]
  421864:	add	x9, x14, x9, lsl #4
  421868:	ldr	w21, [x9, #8]
  42186c:	and	w9, w21, #0x3ffff
  421870:	cmp	w9, #0x1
  421874:	b.eq	421850 <_obstack_memory_used@@Base+0xa334>  // b.none
  421878:	ldrb	w11, [x19]
  42187c:	lsr	w12, w21, #15
  421880:	and	w10, w21, #0xff
  421884:	and	w12, w12, #0x20
  421888:	and	w9, w21, #0x3ff00
  42188c:	orr	w20, w11, w12
  421890:	cmp	w10, #0x4
  421894:	strb	w20, [x19]
  421898:	b.eq	4218ac <_obstack_memory_used@@Base+0xa390>  // b.none
  42189c:	cmp	w10, #0x2
  4218a0:	b.ne	4218b8 <_obstack_memory_used@@Base+0xa39c>  // b.any
  4218a4:	mov	w10, #0x10                  	// #16
  4218a8:	b	4218b0 <_obstack_memory_used@@Base+0xa394>
  4218ac:	mov	w10, #0x40                  	// #64
  4218b0:	orr	w20, w20, w10
  4218b4:	strb	w20, [x19]
  4218b8:	cbz	w9, 421850 <_obstack_memory_used@@Base+0xa334>
  4218bc:	ldr	x9, [x24, #80]
  4218c0:	cmp	x9, x13
  4218c4:	b.eq	4218d4 <_obstack_memory_used@@Base+0xa3b8>  // b.none
  4218c8:	tst	w21, w15
  4218cc:	b.ne	421954 <_obstack_memory_used@@Base+0xa438>  // b.any
  4218d0:	b	42194c <_obstack_memory_used@@Base+0xa430>
  4218d4:	mov	w0, #0x18                  	// #24
  4218d8:	bl	402730 <malloc@plt>
  4218dc:	cbz	x0, 421dbc <_obstack_memory_used@@Base+0xa8a0>
  4218e0:	mov	x26, x0
  4218e4:	cmp	x27, #0x0
  4218e8:	str	x0, [x24, #80]
  4218ec:	str	x27, [x0, #8]
  4218f0:	b.le	421920 <_obstack_memory_used@@Base+0xa404>
  4218f4:	str	x27, [x26]
  4218f8:	lsl	x27, x27, #3
  4218fc:	mov	x0, x27
  421900:	bl	402730 <malloc@plt>
  421904:	str	x0, [x26, #16]
  421908:	cbz	x0, 421db8 <_obstack_memory_used@@Base+0xa89c>
  42190c:	mov	x1, x25
  421910:	mov	x2, x27
  421914:	bl	402580 <memcpy@plt>
  421918:	ldrb	w20, [x19]
  42191c:	b	421928 <_obstack_memory_used@@Base+0xa40c>
  421920:	stp	xzr, xzr, [x26]
  421924:	str	xzr, [x26, #16]
  421928:	ldur	w26, [x29, #-12]
  42192c:	ldur	x13, [x29, #-8]
  421930:	ldr	x14, [sp, #24]
  421934:	mov	x8, xzr
  421938:	orr	w9, w20, #0x80
  42193c:	mov	w15, #0x1100                	// #4352
  421940:	strb	w9, [x19]
  421944:	tst	w21, w15
  421948:	b.ne	421954 <_obstack_memory_used@@Base+0xa438>  // b.any
  42194c:	tbnz	w26, #2, 421850 <_obstack_memory_used@@Base+0xa334>
  421950:	tbz	w21, #14, 421850 <_obstack_memory_used@@Base+0xa334>
  421954:	subs	x9, x28, x8
  421958:	b.mi	42184c <_obstack_memory_used@@Base+0xa330>  // b.first
  42195c:	ldr	x10, [x24, #16]
  421960:	cmp	x10, x9
  421964:	b.le	42184c <_obstack_memory_used@@Base+0xa330>
  421968:	sub	x10, x10, #0x1
  42196c:	cmp	x10, x9
  421970:	str	x10, [x24, #16]
  421974:	b.le	42184c <_obstack_memory_used@@Base+0xa330>
  421978:	ldr	x10, [x24, #24]
  42197c:	add	x11, x10, x9, lsl #3
  421980:	ldr	x12, [x11, #8]
  421984:	add	x9, x9, #0x1
  421988:	str	x12, [x11]
  42198c:	ldr	x11, [x24, #16]
  421990:	cmp	x9, x11
  421994:	b.lt	42197c <_obstack_memory_used@@Base+0xa460>  // b.tstop
  421998:	b	42184c <_obstack_memory_used@@Base+0xa330>
  42199c:	add	x8, x8, #0x1
  4219a0:	ldr	x27, [x22, #8]
  4219a4:	add	x28, x28, #0x1
  4219a8:	cmp	x28, x27
  4219ac:	b.ge	421d80 <_obstack_memory_used@@Base+0xa864>  // b.tcont
  4219b0:	ldr	x9, [x25, x28, lsl #3]
  4219b4:	add	x9, x14, x9, lsl #4
  4219b8:	ldr	w21, [x9, #8]
  4219bc:	and	w9, w21, #0x3ffff
  4219c0:	cmp	w9, #0x1
  4219c4:	b.eq	4219a0 <_obstack_memory_used@@Base+0xa484>  // b.none
  4219c8:	ldrb	w11, [x19]
  4219cc:	lsr	w12, w21, #15
  4219d0:	and	w10, w21, #0xff
  4219d4:	and	w12, w12, #0x20
  4219d8:	and	w9, w21, #0x3ff00
  4219dc:	orr	w20, w11, w12
  4219e0:	cmp	w10, #0x4
  4219e4:	strb	w20, [x19]
  4219e8:	b.eq	4219fc <_obstack_memory_used@@Base+0xa4e0>  // b.none
  4219ec:	cmp	w10, #0x2
  4219f0:	b.ne	421a08 <_obstack_memory_used@@Base+0xa4ec>  // b.any
  4219f4:	mov	w10, #0x10                  	// #16
  4219f8:	b	421a00 <_obstack_memory_used@@Base+0xa4e4>
  4219fc:	mov	w10, #0x40                  	// #64
  421a00:	orr	w20, w20, w10
  421a04:	strb	w20, [x19]
  421a08:	cbz	w9, 4219a0 <_obstack_memory_used@@Base+0xa484>
  421a0c:	ldr	x9, [x24, #80]
  421a10:	cmp	x9, x13
  421a14:	b.eq	421a20 <_obstack_memory_used@@Base+0xa504>  // b.none
  421a18:	tbz	w21, #8, 421a90 <_obstack_memory_used@@Base+0xa574>
  421a1c:	b	421a98 <_obstack_memory_used@@Base+0xa57c>
  421a20:	mov	w0, #0x18                  	// #24
  421a24:	bl	402730 <malloc@plt>
  421a28:	cbz	x0, 421dbc <_obstack_memory_used@@Base+0xa8a0>
  421a2c:	mov	x26, x0
  421a30:	cmp	x27, #0x0
  421a34:	str	x0, [x24, #80]
  421a38:	str	x27, [x0, #8]
  421a3c:	b.le	421a6c <_obstack_memory_used@@Base+0xa550>
  421a40:	str	x27, [x26]
  421a44:	lsl	x27, x27, #3
  421a48:	mov	x0, x27
  421a4c:	bl	402730 <malloc@plt>
  421a50:	str	x0, [x26, #16]
  421a54:	cbz	x0, 421db8 <_obstack_memory_used@@Base+0xa89c>
  421a58:	mov	x1, x25
  421a5c:	mov	x2, x27
  421a60:	bl	402580 <memcpy@plt>
  421a64:	ldrb	w20, [x19]
  421a68:	b	421a74 <_obstack_memory_used@@Base+0xa558>
  421a6c:	stp	xzr, xzr, [x26]
  421a70:	str	xzr, [x26, #16]
  421a74:	ldur	w26, [x29, #-12]
  421a78:	ldur	x13, [x29, #-8]
  421a7c:	ldr	x14, [sp, #24]
  421a80:	mov	x8, xzr
  421a84:	orr	w9, w20, #0x80
  421a88:	strb	w9, [x19]
  421a8c:	tbnz	w21, #8, 421a98 <_obstack_memory_used@@Base+0xa57c>
  421a90:	tbnz	w26, #2, 4219a0 <_obstack_memory_used@@Base+0xa484>
  421a94:	tbz	w21, #14, 4219a0 <_obstack_memory_used@@Base+0xa484>
  421a98:	subs	x9, x28, x8
  421a9c:	b.mi	42199c <_obstack_memory_used@@Base+0xa480>  // b.first
  421aa0:	ldr	x10, [x24, #16]
  421aa4:	cmp	x10, x9
  421aa8:	b.le	42199c <_obstack_memory_used@@Base+0xa480>
  421aac:	sub	x10, x10, #0x1
  421ab0:	cmp	x10, x9
  421ab4:	str	x10, [x24, #16]
  421ab8:	b.le	42199c <_obstack_memory_used@@Base+0xa480>
  421abc:	ldr	x10, [x24, #24]
  421ac0:	add	x11, x10, x9, lsl #3
  421ac4:	ldr	x12, [x11, #8]
  421ac8:	add	x9, x9, #0x1
  421acc:	str	x12, [x11]
  421ad0:	ldr	x11, [x24, #16]
  421ad4:	cmp	x9, x11
  421ad8:	b.lt	421ac0 <_obstack_memory_used@@Base+0xa5a4>  // b.tstop
  421adc:	b	42199c <_obstack_memory_used@@Base+0xa480>
  421ae0:	tbnz	w26, #1, 421c50 <_obstack_memory_used@@Base+0xa734>
  421ae4:	mov	w15, #0x1200                	// #4608
  421ae8:	b	421b00 <_obstack_memory_used@@Base+0xa5e4>
  421aec:	add	x8, x8, #0x1
  421af0:	ldr	x27, [x22, #8]
  421af4:	add	x28, x28, #0x1
  421af8:	cmp	x28, x27
  421afc:	b.ge	421d80 <_obstack_memory_used@@Base+0xa864>  // b.tcont
  421b00:	ldr	x9, [x25, x28, lsl #3]
  421b04:	add	x9, x14, x9, lsl #4
  421b08:	ldr	w21, [x9, #8]
  421b0c:	and	w9, w21, #0x3ffff
  421b10:	cmp	w9, #0x1
  421b14:	b.eq	421af0 <_obstack_memory_used@@Base+0xa5d4>  // b.none
  421b18:	ldrb	w11, [x19]
  421b1c:	lsr	w12, w21, #15
  421b20:	and	w10, w21, #0xff
  421b24:	and	w12, w12, #0x20
  421b28:	and	w9, w21, #0x3ff00
  421b2c:	orr	w20, w11, w12
  421b30:	cmp	w10, #0x4
  421b34:	strb	w20, [x19]
  421b38:	b.eq	421b4c <_obstack_memory_used@@Base+0xa630>  // b.none
  421b3c:	cmp	w10, #0x2
  421b40:	b.ne	421b58 <_obstack_memory_used@@Base+0xa63c>  // b.any
  421b44:	mov	w10, #0x10                  	// #16
  421b48:	b	421b50 <_obstack_memory_used@@Base+0xa634>
  421b4c:	mov	w10, #0x40                  	// #64
  421b50:	orr	w20, w20, w10
  421b54:	strb	w20, [x19]
  421b58:	cbz	w9, 421af0 <_obstack_memory_used@@Base+0xa5d4>
  421b5c:	ldr	x9, [x24, #80]
  421b60:	cmp	x9, x13
  421b64:	b.eq	421b74 <_obstack_memory_used@@Base+0xa658>  // b.none
  421b68:	tst	w21, w15
  421b6c:	b.ne	421bf4 <_obstack_memory_used@@Base+0xa6d8>  // b.any
  421b70:	b	421bec <_obstack_memory_used@@Base+0xa6d0>
  421b74:	mov	w0, #0x18                  	// #24
  421b78:	bl	402730 <malloc@plt>
  421b7c:	cbz	x0, 421dbc <_obstack_memory_used@@Base+0xa8a0>
  421b80:	mov	x26, x0
  421b84:	cmp	x27, #0x0
  421b88:	str	x0, [x24, #80]
  421b8c:	str	x27, [x0, #8]
  421b90:	b.le	421bc0 <_obstack_memory_used@@Base+0xa6a4>
  421b94:	str	x27, [x26]
  421b98:	lsl	x27, x27, #3
  421b9c:	mov	x0, x27
  421ba0:	bl	402730 <malloc@plt>
  421ba4:	str	x0, [x26, #16]
  421ba8:	cbz	x0, 421db8 <_obstack_memory_used@@Base+0xa89c>
  421bac:	mov	x1, x25
  421bb0:	mov	x2, x27
  421bb4:	bl	402580 <memcpy@plt>
  421bb8:	ldrb	w20, [x19]
  421bbc:	b	421bc8 <_obstack_memory_used@@Base+0xa6ac>
  421bc0:	stp	xzr, xzr, [x26]
  421bc4:	str	xzr, [x26, #16]
  421bc8:	ldur	w26, [x29, #-12]
  421bcc:	ldur	x13, [x29, #-8]
  421bd0:	ldr	x14, [sp, #24]
  421bd4:	mov	x8, xzr
  421bd8:	orr	w9, w20, #0x80
  421bdc:	mov	w15, #0x1200                	// #4608
  421be0:	strb	w9, [x19]
  421be4:	tst	w21, w15
  421be8:	b.ne	421bf4 <_obstack_memory_used@@Base+0xa6d8>  // b.any
  421bec:	tbnz	w26, #2, 421af0 <_obstack_memory_used@@Base+0xa5d4>
  421bf0:	tbz	w21, #14, 421af0 <_obstack_memory_used@@Base+0xa5d4>
  421bf4:	subs	x9, x28, x8
  421bf8:	b.mi	421aec <_obstack_memory_used@@Base+0xa5d0>  // b.first
  421bfc:	ldr	x10, [x24, #16]
  421c00:	cmp	x10, x9
  421c04:	b.le	421aec <_obstack_memory_used@@Base+0xa5d0>
  421c08:	sub	x10, x10, #0x1
  421c0c:	cmp	x10, x9
  421c10:	str	x10, [x24, #16]
  421c14:	b.le	421aec <_obstack_memory_used@@Base+0xa5d0>
  421c18:	ldr	x10, [x24, #24]
  421c1c:	add	x11, x10, x9, lsl #3
  421c20:	ldr	x12, [x11, #8]
  421c24:	add	x9, x9, #0x1
  421c28:	str	x12, [x11]
  421c2c:	ldr	x11, [x24, #16]
  421c30:	cmp	x9, x11
  421c34:	b.lt	421c1c <_obstack_memory_used@@Base+0xa700>  // b.tstop
  421c38:	b	421aec <_obstack_memory_used@@Base+0xa5d0>
  421c3c:	add	x8, x8, #0x1
  421c40:	ldr	x27, [x22, #8]
  421c44:	add	x28, x28, #0x1
  421c48:	cmp	x28, x27
  421c4c:	b.ge	421d80 <_obstack_memory_used@@Base+0xa864>  // b.tcont
  421c50:	ldr	x9, [x25, x28, lsl #3]
  421c54:	add	x9, x14, x9, lsl #4
  421c58:	ldr	w21, [x9, #8]
  421c5c:	and	w9, w21, #0x3ffff
  421c60:	cmp	w9, #0x1
  421c64:	b.eq	421c40 <_obstack_memory_used@@Base+0xa724>  // b.none
  421c68:	ldrb	w11, [x19]
  421c6c:	lsr	w12, w21, #15
  421c70:	and	w10, w21, #0xff
  421c74:	and	w12, w12, #0x20
  421c78:	and	w9, w21, #0x3ff00
  421c7c:	orr	w20, w11, w12
  421c80:	cmp	w10, #0x2
  421c84:	strb	w20, [x19]
  421c88:	b.eq	421c9c <_obstack_memory_used@@Base+0xa780>  // b.none
  421c8c:	cmp	w10, #0x4
  421c90:	b.ne	421ca8 <_obstack_memory_used@@Base+0xa78c>  // b.any
  421c94:	mov	w10, #0x40                  	// #64
  421c98:	b	421ca0 <_obstack_memory_used@@Base+0xa784>
  421c9c:	mov	w10, #0x10                  	// #16
  421ca0:	orr	w20, w20, w10
  421ca4:	strb	w20, [x19]
  421ca8:	cbz	w9, 421c40 <_obstack_memory_used@@Base+0xa724>
  421cac:	ldr	x9, [x24, #80]
  421cb0:	cmp	x9, x13
  421cb4:	b.eq	421cc0 <_obstack_memory_used@@Base+0xa7a4>  // b.none
  421cb8:	tbz	w21, #9, 421d30 <_obstack_memory_used@@Base+0xa814>
  421cbc:	b	421d38 <_obstack_memory_used@@Base+0xa81c>
  421cc0:	mov	w0, #0x18                  	// #24
  421cc4:	bl	402730 <malloc@plt>
  421cc8:	cbz	x0, 421dbc <_obstack_memory_used@@Base+0xa8a0>
  421ccc:	mov	x26, x0
  421cd0:	cmp	x27, #0x1
  421cd4:	str	x0, [x24, #80]
  421cd8:	str	x27, [x0, #8]
  421cdc:	b.lt	421d0c <_obstack_memory_used@@Base+0xa7f0>  // b.tstop
  421ce0:	str	x27, [x26]
  421ce4:	lsl	x27, x27, #3
  421ce8:	mov	x0, x27
  421cec:	bl	402730 <malloc@plt>
  421cf0:	str	x0, [x26, #16]
  421cf4:	cbz	x0, 421db8 <_obstack_memory_used@@Base+0xa89c>
  421cf8:	mov	x1, x25
  421cfc:	mov	x2, x27
  421d00:	bl	402580 <memcpy@plt>
  421d04:	ldrb	w20, [x19]
  421d08:	b	421d14 <_obstack_memory_used@@Base+0xa7f8>
  421d0c:	stp	xzr, xzr, [x26]
  421d10:	str	xzr, [x26, #16]
  421d14:	ldur	w26, [x29, #-12]
  421d18:	ldur	x13, [x29, #-8]
  421d1c:	ldr	x14, [sp, #24]
  421d20:	mov	x8, xzr
  421d24:	orr	w9, w20, #0x80
  421d28:	strb	w9, [x19]
  421d2c:	tbnz	w21, #9, 421d38 <_obstack_memory_used@@Base+0xa81c>
  421d30:	tbnz	w26, #2, 421c40 <_obstack_memory_used@@Base+0xa724>
  421d34:	tbz	w21, #14, 421c40 <_obstack_memory_used@@Base+0xa724>
  421d38:	subs	x9, x28, x8
  421d3c:	b.mi	421c3c <_obstack_memory_used@@Base+0xa720>  // b.first
  421d40:	ldr	x10, [x24, #16]
  421d44:	cmp	x10, x9
  421d48:	b.le	421c3c <_obstack_memory_used@@Base+0xa720>
  421d4c:	sub	x10, x10, #0x1
  421d50:	cmp	x10, x9
  421d54:	str	x10, [x24, #16]
  421d58:	b.le	421c3c <_obstack_memory_used@@Base+0xa720>
  421d5c:	ldr	x10, [x24, #24]
  421d60:	add	x11, x10, x9, lsl #3
  421d64:	ldr	x12, [x11, #8]
  421d68:	add	x9, x9, #0x1
  421d6c:	str	x12, [x11]
  421d70:	ldr	x11, [x24, #16]
  421d74:	cmp	x9, x11
  421d78:	b.lt	421d60 <_obstack_memory_used@@Base+0xa844>  // b.tstop
  421d7c:	b	421c3c <_obstack_memory_used@@Base+0xa720>
  421d80:	ldr	x0, [sp, #16]
  421d84:	mov	x1, x24
  421d88:	mov	x2, x23
  421d8c:	bl	421de4 <_obstack_memory_used@@Base+0xa8c8>
  421d90:	cbnz	w0, 421dbc <_obstack_memory_used@@Base+0xa8a0>
  421d94:	mov	x0, x24
  421d98:	ldp	x20, x19, [sp, #128]
  421d9c:	ldp	x22, x21, [sp, #112]
  421da0:	ldp	x24, x23, [sp, #96]
  421da4:	ldp	x26, x25, [sp, #80]
  421da8:	ldp	x28, x27, [sp, #64]
  421dac:	ldp	x29, x30, [sp, #48]
  421db0:	add	sp, sp, #0x90
  421db4:	ret
  421db8:	stp	xzr, xzr, [x26]
  421dbc:	mov	x0, x24
  421dc0:	bl	41bfd8 <_obstack_memory_used@@Base+0x4abc>
  421dc4:	ldr	x19, [sp, #8]
  421dc8:	mov	x24, xzr
  421dcc:	mov	w8, #0xc                   	// #12
  421dd0:	str	w8, [x19]
  421dd4:	b	421d94 <_obstack_memory_used@@Base+0xa878>
  421dd8:	mov	x0, x24
  421ddc:	bl	402a10 <free@plt>
  421de0:	b	421dc8 <_obstack_memory_used@@Base+0xa8ac>
  421de4:	stp	x29, x30, [sp, #-64]!
  421de8:	stp	x24, x23, [sp, #16]
  421dec:	stp	x22, x21, [sp, #32]
  421df0:	stp	x20, x19, [sp, #48]
  421df4:	ldr	x22, [x1, #16]
  421df8:	mov	x21, x0
  421dfc:	mov	x29, sp
  421e00:	mov	x20, x2
  421e04:	lsl	x0, x22, #3
  421e08:	mov	x19, x1
  421e0c:	str	x2, [x1]
  421e10:	stp	x22, xzr, [x1, #32]
  421e14:	bl	402730 <malloc@plt>
  421e18:	str	x0, [x19, #48]
  421e1c:	cbz	x0, 421f20 <_obstack_memory_used@@Base+0xaa04>
  421e20:	cmp	x22, #0x1
  421e24:	b.lt	421e94 <_obstack_memory_used@@Base+0xa978>  // b.tstop
  421e28:	mov	x23, xzr
  421e2c:	b	421e48 <_obstack_memory_used@@Base+0xa92c>
  421e30:	add	x9, x8, #0x1
  421e34:	str	x9, [x19, #40]
  421e38:	str	x24, [x0, x8, lsl #3]
  421e3c:	add	x23, x23, #0x1
  421e40:	cmp	x23, x22
  421e44:	b.ge	421e94 <_obstack_memory_used@@Base+0xa978>  // b.tcont
  421e48:	ldr	x8, [x19, #24]
  421e4c:	ldr	x24, [x8, x23, lsl #3]
  421e50:	ldr	x8, [x21]
  421e54:	add	x8, x8, x24, lsl #4
  421e58:	ldrb	w8, [x8, #8]
  421e5c:	tbnz	w8, #3, 421e3c <_obstack_memory_used@@Base+0xa920>
  421e60:	ldp	x9, x8, [x19, #32]
  421e64:	cmp	x9, x8
  421e68:	b.ne	421e30 <_obstack_memory_used@@Base+0xa914>  // b.any
  421e6c:	lsl	x8, x9, #1
  421e70:	add	x8, x8, #0x2
  421e74:	lsl	x1, x8, #3
  421e78:	str	x8, [x19, #32]
  421e7c:	bl	402870 <realloc@plt>
  421e80:	cbz	x0, 421f20 <_obstack_memory_used@@Base+0xaa04>
  421e84:	ldr	x8, [x19, #40]
  421e88:	ldr	x22, [x19, #16]
  421e8c:	str	x0, [x19, #48]
  421e90:	b	421e30 <_obstack_memory_used@@Base+0xa914>
  421e94:	ldr	x9, [x21, #136]
  421e98:	ldr	x8, [x21, #64]
  421e9c:	mov	w11, #0x18                  	// #24
  421ea0:	and	x10, x9, x20
  421ea4:	madd	x20, x10, x11, x8
  421ea8:	mov	x21, x20
  421eac:	ldr	x11, [x21, #8]!
  421eb0:	ldr	x9, [x20]
  421eb4:	cmp	x11, x9
  421eb8:	b.le	421eec <_obstack_memory_used@@Base+0xa9d0>
  421ebc:	mov	w11, #0x18                  	// #24
  421ec0:	madd	x8, x10, x11, x8
  421ec4:	ldr	x8, [x8, #16]
  421ec8:	mov	w0, wzr
  421ecc:	add	x10, x9, #0x1
  421ed0:	str	x10, [x20]
  421ed4:	str	x19, [x8, x9, lsl #3]
  421ed8:	ldp	x20, x19, [sp, #48]
  421edc:	ldp	x22, x21, [sp, #32]
  421ee0:	ldp	x24, x23, [sp, #16]
  421ee4:	ldp	x29, x30, [sp], #64
  421ee8:	ret
  421eec:	mov	w11, #0x18                  	// #24
  421ef0:	madd	x22, x10, x11, x8
  421ef4:	ldr	x0, [x22, #16]!
  421ef8:	lsl	x8, x9, #1
  421efc:	add	x23, x8, #0x2
  421f00:	lsl	x1, x23, #3
  421f04:	bl	402870 <realloc@plt>
  421f08:	cbz	x0, 421f20 <_obstack_memory_used@@Base+0xaa04>
  421f0c:	str	x0, [x22]
  421f10:	str	x23, [x21]
  421f14:	ldr	x9, [x20]
  421f18:	mov	x8, x0
  421f1c:	b	421ec8 <_obstack_memory_used@@Base+0xa9ac>
  421f20:	mov	w0, #0xc                   	// #12
  421f24:	b	421ed8 <_obstack_memory_used@@Base+0xa9bc>
  421f28:	sub	sp, sp, #0x80
  421f2c:	stp	x29, x30, [sp, #32]
  421f30:	stp	x28, x27, [sp, #48]
  421f34:	stp	x26, x25, [sp, #64]
  421f38:	stp	x24, x23, [sp, #80]
  421f3c:	stp	x22, x21, [sp, #96]
  421f40:	stp	x20, x19, [sp, #112]
  421f44:	mov	x24, x0
  421f48:	ldr	x8, [x24, #40]!
  421f4c:	mov	x19, x0
  421f50:	mov	x20, x1
  421f54:	mov	w21, w2
  421f58:	cmp	x8, x1
  421f5c:	add	x29, sp, #0x20
  421f60:	b.le	422150 <_obstack_memory_used@@Base+0xac34>
  421f64:	ldr	w8, [x19, #144]
  421f68:	cmp	w8, #0x2
  421f6c:	b.lt	421f74 <_obstack_memory_used@@Base+0xaa58>  // b.tstop
  421f70:	str	xzr, [x19, #32]
  421f74:	ldr	x9, [x19, #80]
  421f78:	ldr	x10, [x19, #96]
  421f7c:	strb	wzr, [x19, #140]
  421f80:	tst	w21, #0x1
  421f84:	str	x9, [x19, #88]
  421f88:	str	x10, [x19, #104]
  421f8c:	stp	xzr, xzr, [x24]
  421f90:	str	xzr, [x24, #16]
  421f94:	ldrb	w9, [x19, #139]
  421f98:	mov	w10, #0x4                   	// #4
  421f9c:	mov	w11, #0x6                   	// #6
  421fa0:	mov	x8, xzr
  421fa4:	csel	w10, w11, w10, eq  // eq = none
  421fa8:	mov	x25, x20
  421fac:	str	w10, [x19, #112]
  421fb0:	cbnz	w9, 421fc4 <_obstack_memory_used@@Base+0xaaa8>
  421fb4:	ldr	x9, [x19]
  421fb8:	mov	x8, xzr
  421fbc:	mov	x25, x20
  421fc0:	str	x9, [x19, #8]
  421fc4:	cbz	x25, 4220d0 <_obstack_memory_used@@Base+0xabb4>
  421fc8:	ldr	x9, [x19, #56]
  421fcc:	cmp	x25, x9
  421fd0:	b.ge	42215c <_obstack_memory_used@@Base+0xac40>  // b.tcont
  421fd4:	ldrb	w8, [x19, #140]
  421fd8:	cbnz	w8, 4222d0 <_obstack_memory_used@@Base+0xadb4>
  421fdc:	cmp	x25, #0x0
  421fe0:	b.le	42201c <_obstack_memory_used@@Base+0xab00>
  421fe4:	ldr	x9, [x19, #88]
  421fe8:	sub	x8, x25, #0x1
  421fec:	cmp	x9, x8
  421ff0:	b.eq	422384 <_obstack_memory_used@@Base+0xae68>  // b.none
  421ff4:	ldr	w9, [x19, #144]
  421ff8:	cmp	w9, #0x2
  421ffc:	b.lt	422024 <_obstack_memory_used@@Base+0xab08>  // b.tstop
  422000:	ldr	x9, [x19, #16]
  422004:	ldr	w21, [x9, x8, lsl #2]
  422008:	cmn	w21, #0x1
  42200c:	b.ne	42204c <_obstack_memory_used@@Base+0xab30>  // b.any
  422010:	sub	x8, x8, #0x1
  422014:	cmn	x8, #0x1
  422018:	b.ne	422004 <_obstack_memory_used@@Base+0xaae8>  // b.any
  42201c:	ldr	w8, [x19, #112]
  422020:	b	42207c <_obstack_memory_used@@Base+0xab60>
  422024:	ldr	x9, [x19, #8]
  422028:	ldrb	w8, [x9, x8]
  42202c:	ldr	x9, [x19, #128]
  422030:	lsr	x10, x8, #3
  422034:	and	x10, x10, #0x18
  422038:	ldr	x9, [x9, x10]
  42203c:	lsr	x9, x9, x8
  422040:	tbz	w9, #0, 422070 <_obstack_memory_used@@Base+0xab54>
  422044:	mov	w8, #0x1                   	// #1
  422048:	b	42207c <_obstack_memory_used@@Base+0xab60>
  42204c:	ldrb	w8, [x19, #142]
  422050:	cbnz	w8, 42244c <_obstack_memory_used@@Base+0xaf30>
  422054:	cmp	w21, #0xa
  422058:	b.ne	422078 <_obstack_memory_used@@Base+0xab5c>  // b.any
  42205c:	ldrb	w8, [x19, #141]
  422060:	cmp	w8, #0x0
  422064:	cset	w8, ne  // ne = any
  422068:	lsl	w8, w8, #1
  42206c:	b	42207c <_obstack_memory_used@@Base+0xab60>
  422070:	cmp	w8, #0xa
  422074:	b.eq	42205c <_obstack_memory_used@@Base+0xab40>  // b.none
  422078:	mov	w8, wzr
  42207c:	ldr	w9, [x19, #144]
  422080:	str	w8, [x19, #112]
  422084:	cmp	w9, #0x2
  422088:	b.lt	4220a4 <_obstack_memory_used@@Base+0xab88>  // b.tstop
  42208c:	ldr	x8, [x19, #48]
  422090:	ldr	x0, [x19, #16]
  422094:	sub	x8, x8, x25
  422098:	add	x1, x0, x25, lsl #2
  42209c:	lsl	x2, x8, #2
  4220a0:	bl	402590 <memmove@plt>
  4220a4:	ldrb	w8, [x19, #139]
  4220a8:	cbnz	w8, 42236c <_obstack_memory_used@@Base+0xae50>
  4220ac:	ldr	q0, [x19, #48]
  4220b0:	dup	v1.2d, x25
  4220b4:	sub	v0.2d, v0.2d, v1.2d
  4220b8:	str	q0, [x19, #48]
  4220bc:	ldrb	w8, [x19, #139]
  4220c0:	cbnz	w8, 4220d0 <_obstack_memory_used@@Base+0xabb4>
  4220c4:	ldr	x8, [x19, #8]
  4220c8:	add	x8, x8, x25
  4220cc:	str	x8, [x19, #8]
  4220d0:	ldr	x8, [x19, #88]
  4220d4:	ldr	x10, [x19, #104]
  4220d8:	ldr	w11, [x19, #144]
  4220dc:	str	x20, [x19, #40]
  4220e0:	sub	x9, x8, x25
  4220e4:	sub	x8, x10, x25
  4220e8:	cmp	w11, #0x2
  4220ec:	str	x9, [x19, #88]
  4220f0:	str	x8, [x19, #104]
  4220f4:	b.lt	422110 <_obstack_memory_used@@Base+0xabf4>  // b.tstop
  4220f8:	ldrb	w8, [x19, #136]
  4220fc:	cbz	w8, 422120 <_obstack_memory_used@@Base+0xac04>
  422100:	mov	x0, x19
  422104:	bl	41c040 <_obstack_memory_used@@Base+0x4b24>
  422108:	cbnz	w0, 422130 <_obstack_memory_used@@Base+0xac14>
  42210c:	b	422128 <_obstack_memory_used@@Base+0xac0c>
  422110:	ldrb	w8, [x19, #139]
  422114:	cbnz	w8, 422394 <_obstack_memory_used@@Base+0xae78>
  422118:	str	x9, [x19, #48]
  42211c:	b	422128 <_obstack_memory_used@@Base+0xac0c>
  422120:	mov	x0, x19
  422124:	bl	41c708 <_obstack_memory_used@@Base+0x51ec>
  422128:	mov	w0, wzr
  42212c:	str	xzr, [x19, #72]
  422130:	ldp	x20, x19, [sp, #112]
  422134:	ldp	x22, x21, [sp, #96]
  422138:	ldp	x24, x23, [sp, #80]
  42213c:	ldp	x26, x25, [sp, #64]
  422140:	ldp	x28, x27, [sp, #48]
  422144:	ldp	x29, x30, [sp, #32]
  422148:	add	sp, sp, #0x80
  42214c:	ret
  422150:	sub	x25, x20, x8
  422154:	cbnz	x25, 421fc8 <_obstack_memory_used@@Base+0xaaac>
  422158:	b	4220d0 <_obstack_memory_used@@Base+0xabb4>
  42215c:	ldrb	w10, [x19, #140]
  422160:	ldr	x26, [x19, #48]
  422164:	cbnz	w10, 4226f8 <_obstack_memory_used@@Base+0xb1dc>
  422168:	ldr	w10, [x19, #144]
  42216c:	str	xzr, [x19, #48]
  422170:	cmp	w10, #0x2
  422174:	b.lt	422728 <_obstack_memory_used@@Base+0xb20c>  // b.tstop
  422178:	ldrb	w11, [x19, #137]
  42217c:	cbz	w11, 422224 <_obstack_memory_used@@Base+0xad08>
  422180:	ldr	x13, [x19]
  422184:	sub	x10, x25, x10
  422188:	add	x11, x13, x8
  42218c:	add	x10, x11, x10
  422190:	cmp	x10, x13
  422194:	add	x22, x11, x25
  422198:	csel	x12, x13, x10, cc  // cc = lo, ul, last
  42219c:	add	x10, x13, x25
  4221a0:	add	x13, x10, x8
  4221a4:	sub	x13, x13, #0x1
  4221a8:	cmp	x13, x12
  4221ac:	b.cc	422224 <_obstack_memory_used@@Base+0xad08>  // b.lo, b.ul, b.last
  4221b0:	ldrb	w13, [x13]
  4221b4:	sub	x10, x10, #0x1
  4221b8:	and	w13, w13, #0xc0
  4221bc:	cmp	w13, #0x80
  4221c0:	b.eq	4221a0 <_obstack_memory_used@@Base+0xac84>  // b.none
  4221c4:	ldr	x12, [x19, #88]
  4221c8:	ldr	x9, [x19, #120]
  4221cc:	add	x23, x10, x8
  4221d0:	mov	x1, x23
  4221d4:	add	x11, x11, x12
  4221d8:	sub	x2, x11, x23
  4221dc:	cbnz	x9, 422824 <_obstack_memory_used@@Base+0xb308>
  4221e0:	sub	x0, x29, #0xc
  4221e4:	sub	x3, x29, #0x8
  4221e8:	stur	xzr, [x29, #-8]
  4221ec:	bl	417134 <wcrtomb@plt+0x144d4>
  4221f0:	sub	x8, x22, x23
  4221f4:	subs	x8, x0, x8
  4221f8:	mov	w9, #0xffffffff            	// #-1
  4221fc:	b.cc	422214 <_obstack_memory_used@@Base+0xacf8>  // b.lo, b.ul, b.last
  422200:	cmn	x0, #0x3
  422204:	b.hi	422214 <_obstack_memory_used@@Base+0xacf8>  // b.pmore
  422208:	str	xzr, [x19, #32]
  42220c:	str	x8, [x19, #48]
  422210:	ldur	w9, [x29, #-12]
  422214:	cmn	w9, #0x1
  422218:	b.ne	4222ac <_obstack_memory_used@@Base+0xad90>  // b.any
  42221c:	ldr	x8, [x19, #40]
  422220:	ldr	x9, [x19, #56]
  422224:	add	x27, x9, x8
  422228:	subs	x8, x27, x20
  42222c:	b.ge	422468 <_obstack_memory_used@@Base+0xaf4c>  // b.tcont
  422230:	add	x22, x19, #0x20
  422234:	ldr	x8, [x19, #80]
  422238:	ldr	x9, [x19]
  42223c:	ldr	x28, [x19, #32]
  422240:	sub	x0, x29, #0x8
  422244:	sub	x23, x8, x27
  422248:	add	x1, x9, x27
  42224c:	mov	x2, x23
  422250:	mov	x3, x22
  422254:	bl	417134 <wcrtomb@plt+0x144d4>
  422258:	sub	x8, x0, #0x1
  42225c:	cmn	x8, #0x3
  422260:	b.cs	422278 <_obstack_memory_used@@Base+0xad5c>  // b.hs, b.nlast
  422264:	ldur	w9, [x29, #-8]
  422268:	add	x27, x0, x27
  42226c:	subs	x8, x27, x20
  422270:	b.lt	422234 <_obstack_memory_used@@Base+0xad18>  // b.tstop
  422274:	b	4222a0 <_obstack_memory_used@@Base+0xad84>
  422278:	mov	w9, wzr
  42227c:	cbz	x23, 42228c <_obstack_memory_used@@Base+0xad70>
  422280:	cbz	x0, 42228c <_obstack_memory_used@@Base+0xad70>
  422284:	ldr	x8, [x19]
  422288:	ldrb	w9, [x8, x27]
  42228c:	str	x28, [x22]
  422290:	mov	w0, #0x1                   	// #1
  422294:	add	x27, x0, x27
  422298:	subs	x8, x27, x20
  42229c:	b.lt	422234 <_obstack_memory_used@@Base+0xad18>  // b.tstop
  4222a0:	cmn	w9, #0x1
  4222a4:	str	x8, [x19, #48]
  4222a8:	b.eq	42246c <_obstack_memory_used@@Base+0xaf50>  // b.none
  4222ac:	ldrb	w8, [x19, #142]
  4222b0:	cbnz	w8, 422800 <_obstack_memory_used@@Base+0xb2e4>
  4222b4:	cmp	w9, #0xa
  4222b8:	b.ne	4226d0 <_obstack_memory_used@@Base+0xb1b4>  // b.any
  4222bc:	ldrb	w8, [x19, #141]
  4222c0:	cmp	w8, #0x0
  4222c4:	cset	w8, ne  // ne = any
  4222c8:	lsl	w8, w8, #1
  4222cc:	b	4226d4 <_obstack_memory_used@@Base+0xb1b8>
  4222d0:	ldr	x9, [x19, #48]
  4222d4:	ldr	x8, [x19, #24]
  4222d8:	mov	x10, xzr
  4222dc:	b	4222ec <_obstack_memory_used@@Base+0xadd0>
  4222e0:	cmp	x10, x13
  4222e4:	mov	x9, x13
  4222e8:	b.ge	42231c <_obstack_memory_used@@Base+0xae00>  // b.tcont
  4222ec:	add	x11, x10, x9
  4222f0:	cmp	x11, #0x0
  4222f4:	cinc	x11, x11, lt  // lt = tstop
  4222f8:	asr	x11, x11, #1
  4222fc:	ldr	x12, [x8, x11, lsl #3]
  422300:	mov	x13, x11
  422304:	cmp	x12, x25
  422308:	b.gt	4222e0 <_obstack_memory_used@@Base+0xadc4>
  42230c:	b.ge	42231c <_obstack_memory_used@@Base+0xae00>  // b.tcont
  422310:	add	x10, x11, #0x1
  422314:	mov	x13, x9
  422318:	b	4222e0 <_obstack_memory_used@@Base+0xadc4>
  42231c:	cmp	x12, x25
  422320:	cinc	x22, x11, lt  // lt = tstop
  422324:	cmp	x22, #0x0
  422328:	b.le	422364 <_obstack_memory_used@@Base+0xae48>
  42232c:	ldr	x9, [x19, #88]
  422330:	sub	x8, x22, #0x1
  422334:	cmp	x9, x8
  422338:	b.eq	422790 <_obstack_memory_used@@Base+0xb274>  // b.none
  42233c:	ldr	w9, [x19, #144]
  422340:	cmp	w9, #0x2
  422344:	b.lt	4223f8 <_obstack_memory_used@@Base+0xaedc>  // b.tstop
  422348:	ldr	x9, [x19, #16]
  42234c:	ldr	w21, [x9, x8, lsl #2]
  422350:	cmn	w21, #0x1
  422354:	b.ne	422428 <_obstack_memory_used@@Base+0xaf0c>  // b.any
  422358:	sub	x8, x8, #0x1
  42235c:	cmn	x8, #0x1
  422360:	b.ne	42234c <_obstack_memory_used@@Base+0xae30>  // b.any
  422364:	ldr	w9, [x19, #112]
  422368:	b	422530 <_obstack_memory_used@@Base+0xb014>
  42236c:	ldr	x0, [x19, #8]
  422370:	ldr	x8, [x19, #48]
  422374:	add	x1, x0, x25
  422378:	sub	x2, x8, x25
  42237c:	bl	402590 <memmove@plt>
  422380:	b	4220ac <_obstack_memory_used@@Base+0xab90>
  422384:	and	w8, w21, #0x2
  422388:	mov	w9, #0xa                   	// #10
  42238c:	eor	w8, w8, w9
  422390:	b	42207c <_obstack_memory_used@@Base+0xab60>
  422394:	ldrb	w8, [x19, #136]
  422398:	cbz	w8, 4224b4 <_obstack_memory_used@@Base+0xaf98>
  42239c:	ldr	x8, [x19, #64]
  4223a0:	ldr	x21, [x19, #48]
  4223a4:	cmp	x8, x9
  4223a8:	csel	x22, x9, x8, gt
  4223ac:	cmp	x21, x22
  4223b0:	b.ge	422420 <_obstack_memory_used@@Base+0xaf04>  // b.tcont
  4223b4:	bl	402880 <__ctype_toupper_loc@plt>
  4223b8:	ldr	x8, [x19]
  4223bc:	ldr	x9, [x19, #120]
  4223c0:	add	x8, x8, x20
  4223c4:	ldrb	w8, [x8, x21]
  4223c8:	cbnz	x9, 4223f0 <_obstack_memory_used@@Base+0xaed4>
  4223cc:	ldr	x9, [x0]
  4223d0:	ldr	x10, [x19, #8]
  4223d4:	ldr	w8, [x9, w8, uxtw #2]
  4223d8:	strb	w8, [x10, x21]
  4223dc:	add	x21, x21, #0x1
  4223e0:	cmp	x21, x22
  4223e4:	b.ge	422420 <_obstack_memory_used@@Base+0xaf04>  // b.tcont
  4223e8:	ldr	x20, [x24]
  4223ec:	b	4223b8 <_obstack_memory_used@@Base+0xae9c>
  4223f0:	ldrb	w8, [x9, x8]
  4223f4:	b	4223cc <_obstack_memory_used@@Base+0xaeb0>
  4223f8:	ldr	x9, [x19, #8]
  4223fc:	ldrb	w8, [x9, x8]
  422400:	ldr	x9, [x19, #128]
  422404:	lsr	x10, x8, #3
  422408:	and	x10, x10, #0x18
  42240c:	ldr	x9, [x9, x10]
  422410:	lsr	x9, x9, x8
  422414:	tbz	w9, #0, 422524 <_obstack_memory_used@@Base+0xb008>
  422418:	mov	w9, #0x1                   	// #1
  42241c:	b	422530 <_obstack_memory_used@@Base+0xb014>
  422420:	stp	x21, x21, [x19, #48]
  422424:	b	422128 <_obstack_memory_used@@Base+0xac0c>
  422428:	ldrb	w8, [x19, #142]
  42242c:	cbnz	w8, 4227e4 <_obstack_memory_used@@Base+0xb2c8>
  422430:	cmp	w21, #0xa
  422434:	b.ne	42252c <_obstack_memory_used@@Base+0xb010>  // b.any
  422438:	ldrb	w8, [x19, #141]
  42243c:	cmp	w8, #0x0
  422440:	cset	w8, ne  // ne = any
  422444:	lsl	w9, w8, #1
  422448:	b	422530 <_obstack_memory_used@@Base+0xb014>
  42244c:	mov	w0, w21
  422450:	bl	402b10 <iswalnum@plt>
  422454:	cmp	w21, #0x5f
  422458:	mov	w8, #0x1                   	// #1
  42245c:	b.eq	42207c <_obstack_memory_used@@Base+0xab60>  // b.none
  422460:	cbz	w0, 422054 <_obstack_memory_used@@Base+0xab38>
  422464:	b	42207c <_obstack_memory_used@@Base+0xab60>
  422468:	str	x8, [x19, #48]
  42246c:	cmp	x26, #0x0
  422470:	b.le	4224ac <_obstack_memory_used@@Base+0xaf90>
  422474:	ldr	x9, [x19, #88]
  422478:	sub	x8, x26, #0x1
  42247c:	cmp	x9, x8
  422480:	b.eq	4227d4 <_obstack_memory_used@@Base+0xb2b8>  // b.none
  422484:	ldr	w9, [x19, #144]
  422488:	cmp	w9, #0x2
  42248c:	b.lt	42268c <_obstack_memory_used@@Base+0xb170>  // b.tstop
  422490:	ldr	x9, [x19, #16]
  422494:	ldr	w21, [x9, x8, lsl #2]
  422498:	cmn	w21, #0x1
  42249c:	b.ne	4226c0 <_obstack_memory_used@@Base+0xb1a4>  // b.any
  4224a0:	sub	x8, x8, #0x1
  4224a4:	cmn	x8, #0x1
  4224a8:	b.ne	422494 <_obstack_memory_used@@Base+0xaf78>  // b.any
  4224ac:	ldr	w8, [x19, #112]
  4224b0:	b	4226d4 <_obstack_memory_used@@Base+0xb1b8>
  4224b4:	ldr	x10, [x19, #120]
  4224b8:	cbz	x10, 422128 <_obstack_memory_used@@Base+0xac0c>
  4224bc:	ldr	x11, [x19, #64]
  4224c0:	ldr	x8, [x19, #48]
  4224c4:	cmp	x11, x9
  4224c8:	csel	x9, x9, x11, gt
  4224cc:	cmp	x8, x9
  4224d0:	b.ge	42251c <_obstack_memory_used@@Base+0xb000>  // b.tcont
  4224d4:	ldp	x11, x13, [x19]
  4224d8:	add	x12, x8, x20
  4224dc:	ldrb	w11, [x11, x12]
  4224e0:	ldrb	w10, [x10, x11]
  4224e4:	strb	w10, [x13, x8]
  4224e8:	add	x8, x8, #0x1
  4224ec:	cmp	x8, x9
  4224f0:	b.ge	42251c <_obstack_memory_used@@Base+0xb000>  // b.tcont
  4224f4:	ldr	x10, [x19, #40]
  4224f8:	ldp	x11, x13, [x19]
  4224fc:	ldr	x12, [x19, #120]
  422500:	add	x10, x11, x10
  422504:	ldrb	w10, [x10, x8]
  422508:	ldrb	w10, [x12, x10]
  42250c:	strb	w10, [x13, x8]
  422510:	add	x8, x8, #0x1
  422514:	cmp	x8, x9
  422518:	b.lt	4224f4 <_obstack_memory_used@@Base+0xafd8>  // b.tstop
  42251c:	stp	x8, x8, [x19, #48]
  422520:	b	422128 <_obstack_memory_used@@Base+0xac0c>
  422524:	cmp	w8, #0xa
  422528:	b.eq	422438 <_obstack_memory_used@@Base+0xaf1c>  // b.none
  42252c:	mov	w9, wzr
  422530:	ldr	x8, [x19, #48]
  422534:	cmp	x22, x25
  422538:	str	w9, [x19, #112]
  42253c:	b.ne	4225c8 <_obstack_memory_used@@Base+0xb0ac>  // b.any
  422540:	subs	x9, x8, x25
  422544:	b.le	4225c8 <_obstack_memory_used@@Base+0xb0ac>
  422548:	ldr	x10, [x19, #24]
  42254c:	ldr	x10, [x10, x25, lsl #3]
  422550:	cmp	x10, x25
  422554:	b.ne	4225c8 <_obstack_memory_used@@Base+0xb0ac>  // b.any
  422558:	ldr	x0, [x19, #16]
  42255c:	lsl	x2, x9, #2
  422560:	add	x1, x0, x25, lsl #2
  422564:	bl	402590 <memmove@plt>
  422568:	ldr	x0, [x19, #8]
  42256c:	ldr	x8, [x19, #48]
  422570:	add	x1, x0, x25
  422574:	sub	x2, x8, x25
  422578:	bl	402590 <memmove@plt>
  42257c:	ldr	q0, [x19, #48]
  422580:	dup	v1.2d, x25
  422584:	sub	v0.2d, v0.2d, v1.2d
  422588:	fmov	x8, d0
  42258c:	cmp	x8, #0x1
  422590:	str	q0, [x19, #48]
  422594:	b.lt	4220bc <_obstack_memory_used@@Base+0xaba0>  // b.tstop
  422598:	ldr	x9, [x19, #24]
  42259c:	mov	x8, xzr
  4225a0:	add	x10, x9, x25, lsl #3
  4225a4:	lsl	x11, x8, #3
  4225a8:	ldr	x12, [x10, x11]
  4225ac:	add	x8, x8, #0x1
  4225b0:	sub	x12, x12, x25
  4225b4:	str	x12, [x9, x11]
  4225b8:	ldr	x11, [x19, #48]
  4225bc:	cmp	x8, x11
  4225c0:	b.lt	4225a4 <_obstack_memory_used@@Base+0xb088>  // b.tstop
  4225c4:	b	4220bc <_obstack_memory_used@@Base+0xaba0>
  4225c8:	ldr	x9, [x19, #80]
  4225cc:	ldr	x10, [x19, #96]
  4225d0:	sub	x11, x25, x20
  4225d4:	strb	wzr, [x19, #140]
  4225d8:	add	x9, x11, x9
  4225dc:	add	x10, x11, x10
  4225e0:	str	x9, [x19, #88]
  4225e4:	str	x10, [x19, #104]
  4225e8:	mov	x9, x22
  4225ec:	subs	x22, x22, #0x1
  4225f0:	b.lt	422608 <_obstack_memory_used@@Base+0xb0ec>  // b.tstop
  4225f4:	ldr	x10, [x19, #24]
  4225f8:	add	x10, x10, x9, lsl #3
  4225fc:	ldur	x10, [x10, #-8]
  422600:	cmp	x10, x25
  422604:	b.eq	4225e8 <_obstack_memory_used@@Base+0xb0cc>  // b.none
  422608:	cmp	x9, x8
  42260c:	b.ge	422630 <_obstack_memory_used@@Base+0xb114>  // b.tcont
  422610:	ldr	x10, [x19, #16]
  422614:	ldr	w11, [x10, x9, lsl #2]
  422618:	cmn	w11, #0x1
  42261c:	b.ne	422630 <_obstack_memory_used@@Base+0xb114>  // b.any
  422620:	add	x9, x9, #0x1
  422624:	cmp	x8, x9
  422628:	b.ne	422614 <_obstack_memory_used@@Base+0xb0f8>  // b.any
  42262c:	b	422638 <_obstack_memory_used@@Base+0xb11c>
  422630:	cmp	x9, x8
  422634:	b.ne	422644 <_obstack_memory_used@@Base+0xb128>  // b.any
  422638:	mov	x8, xzr
  42263c:	stp	xzr, xzr, [x19, #48]
  422640:	b	4220bc <_obstack_memory_used@@Base+0xaba0>
  422644:	ldr	x8, [x19, #24]
  422648:	ldr	x8, [x8, x9, lsl #3]
  42264c:	subs	x21, x8, x25
  422650:	str	x21, [x19, #48]
  422654:	b.eq	4226b4 <_obstack_memory_used@@Base+0xb198>  // b.none
  422658:	cmp	x21, #0x1
  42265c:	b.lt	422670 <_obstack_memory_used@@Base+0xb154>  // b.tstop
  422660:	ldr	x0, [x19, #16]
  422664:	lsl	x2, x21, #2
  422668:	mov	w1, #0xff                  	// #255
  42266c:	bl	402800 <memset@plt>
  422670:	ldr	x0, [x19, #8]
  422674:	mov	w1, #0xff                  	// #255
  422678:	mov	x2, x21
  42267c:	bl	402800 <memset@plt>
  422680:	ldr	x8, [x19, #48]
  422684:	str	x8, [x19, #56]
  422688:	b	4220bc <_obstack_memory_used@@Base+0xaba0>
  42268c:	ldr	x9, [x19, #8]
  422690:	ldrb	w8, [x9, x8]
  422694:	ldr	x9, [x19, #128]
  422698:	lsr	x10, x8, #3
  42269c:	and	x10, x10, #0x18
  4226a0:	ldr	x9, [x9, x10]
  4226a4:	lsr	x9, x9, x8
  4226a8:	tbz	w9, #0, 4226ec <_obstack_memory_used@@Base+0xb1d0>
  4226ac:	mov	w8, #0x1                   	// #1
  4226b0:	b	4226d4 <_obstack_memory_used@@Base+0xb1b8>
  4226b4:	mov	x8, xzr
  4226b8:	str	xzr, [x19, #56]
  4226bc:	b	4220bc <_obstack_memory_used@@Base+0xaba0>
  4226c0:	ldrb	w8, [x19, #142]
  4226c4:	cbnz	w8, 422868 <_obstack_memory_used@@Base+0xb34c>
  4226c8:	cmp	w21, #0xa
  4226cc:	b.eq	4222bc <_obstack_memory_used@@Base+0xada0>  // b.none
  4226d0:	mov	w8, wzr
  4226d4:	ldr	x21, [x19, #48]
  4226d8:	str	w8, [x19, #112]
  4226dc:	cbnz	x21, 4227a0 <_obstack_memory_used@@Base+0xb284>
  4226e0:	ldr	x8, [x19, #48]
  4226e4:	str	x8, [x19, #56]
  4226e8:	b	4220bc <_obstack_memory_used@@Base+0xaba0>
  4226ec:	cmp	w8, #0xa
  4226f0:	b.ne	4226d0 <_obstack_memory_used@@Base+0xb1b4>  // b.any
  4226f4:	b	4222bc <_obstack_memory_used@@Base+0xada0>
  4226f8:	ldr	x10, [x19, #80]
  4226fc:	ldr	x11, [x19, #96]
  422700:	sub	x12, x25, x20
  422704:	strb	wzr, [x19, #140]
  422708:	add	x10, x12, x10
  42270c:	add	x11, x12, x11
  422710:	str	x10, [x19, #88]
  422714:	str	x11, [x19, #104]
  422718:	ldr	w10, [x19, #144]
  42271c:	str	xzr, [x19, #48]
  422720:	cmp	w10, #0x2
  422724:	b.ge	422178 <_obstack_memory_used@@Base+0xac5c>  // b.tcont
  422728:	ldr	x9, [x19]
  42272c:	add	x8, x25, x8
  422730:	add	x8, x8, x9
  422734:	ldr	x9, [x19, #120]
  422738:	ldurb	w8, [x8, #-1]
  42273c:	str	xzr, [x19, #56]
  422740:	cbz	x9, 422748 <_obstack_memory_used@@Base+0xb22c>
  422744:	ldrb	w8, [x9, x8]
  422748:	ldr	x9, [x19, #128]
  42274c:	lsr	x10, x8, #3
  422750:	and	x10, x10, #0x18
  422754:	ldr	x9, [x9, x10]
  422758:	lsr	x9, x9, x8
  42275c:	tbz	w9, #0, 422768 <_obstack_memory_used@@Base+0xb24c>
  422760:	mov	w8, #0x1                   	// #1
  422764:	b	422788 <_obstack_memory_used@@Base+0xb26c>
  422768:	cmp	w8, #0xa
  42276c:	b.ne	422784 <_obstack_memory_used@@Base+0xb268>  // b.any
  422770:	ldrb	w8, [x19, #141]
  422774:	cmp	w8, #0x0
  422778:	cset	w8, ne  // ne = any
  42277c:	lsl	w8, w8, #1
  422780:	b	422788 <_obstack_memory_used@@Base+0xb26c>
  422784:	mov	w8, wzr
  422788:	str	w8, [x19, #112]
  42278c:	b	4220bc <_obstack_memory_used@@Base+0xaba0>
  422790:	and	w8, w21, #0x2
  422794:	mov	w9, #0xa                   	// #10
  422798:	eor	w9, w8, w9
  42279c:	b	422530 <_obstack_memory_used@@Base+0xb014>
  4227a0:	cmp	x21, #0x1
  4227a4:	b.lt	4227b8 <_obstack_memory_used@@Base+0xb29c>  // b.tstop
  4227a8:	ldr	x0, [x19, #16]
  4227ac:	lsl	x2, x21, #2
  4227b0:	mov	w1, #0xff                  	// #255
  4227b4:	bl	402800 <memset@plt>
  4227b8:	ldrb	w8, [x19, #139]
  4227bc:	cbz	w8, 4226e0 <_obstack_memory_used@@Base+0xb1c4>
  4227c0:	ldr	x0, [x19, #8]
  4227c4:	mov	w1, #0xff                  	// #255
  4227c8:	mov	x2, x21
  4227cc:	bl	402800 <memset@plt>
  4227d0:	b	4226e0 <_obstack_memory_used@@Base+0xb1c4>
  4227d4:	and	w8, w21, #0x2
  4227d8:	mov	w9, #0xa                   	// #10
  4227dc:	eor	w8, w8, w9
  4227e0:	b	4226d4 <_obstack_memory_used@@Base+0xb1b8>
  4227e4:	mov	w0, w21
  4227e8:	bl	402b10 <iswalnum@plt>
  4227ec:	cmp	w21, #0x5f
  4227f0:	mov	w9, #0x1                   	// #1
  4227f4:	b.eq	422530 <_obstack_memory_used@@Base+0xb014>  // b.none
  4227f8:	cbz	w0, 422430 <_obstack_memory_used@@Base+0xaf14>
  4227fc:	b	422530 <_obstack_memory_used@@Base+0xb014>
  422800:	mov	w0, w9
  422804:	mov	w21, w9
  422808:	bl	402b10 <iswalnum@plt>
  42280c:	cmp	w21, #0x5f
  422810:	mov	w8, #0x1                   	// #1
  422814:	b.eq	4226d4 <_obstack_memory_used@@Base+0xb1b8>  // b.none
  422818:	mov	w9, w21
  42281c:	cbz	w0, 4222b4 <_obstack_memory_used@@Base+0xad98>
  422820:	b	4226d4 <_obstack_memory_used@@Base+0xb1b8>
  422824:	cmp	x2, #0x6
  422828:	mov	w11, #0x6                   	// #6
  42282c:	csel	x11, x2, x11, lt  // lt = tstop
  422830:	cmp	w11, #0x1
  422834:	add	x1, sp, #0xc
  422838:	b.lt	4221e0 <_obstack_memory_used@@Base+0xacc4>  // b.tstop
  42283c:	sxtw	x11, w11
  422840:	sub	x12, x1, #0x1
  422844:	add	x13, x8, x11
  422848:	add	x13, x10, x13
  42284c:	ldurb	w13, [x13, #-1]
  422850:	add	x1, sp, #0xc
  422854:	ldrb	w13, [x9, x13]
  422858:	strb	w13, [x12, x11]
  42285c:	subs	x11, x11, #0x1
  422860:	b.gt	422844 <_obstack_memory_used@@Base+0xb328>
  422864:	b	4221e0 <_obstack_memory_used@@Base+0xacc4>
  422868:	mov	w0, w21
  42286c:	bl	402b10 <iswalnum@plt>
  422870:	cmp	w21, #0x5f
  422874:	mov	w8, #0x1                   	// #1
  422878:	b.eq	4226d4 <_obstack_memory_used@@Base+0xb1b8>  // b.none
  42287c:	cbz	w0, 4226c8 <_obstack_memory_used@@Base+0xb1ac>
  422880:	b	4226d4 <_obstack_memory_used@@Base+0xb1b8>
  422884:	stp	x29, x30, [sp, #-32]!
  422888:	stp	x20, x19, [sp, #16]
  42288c:	mov	x8, x2
  422890:	ldr	w2, [x0, #160]
  422894:	mov	x20, x1
  422898:	mov	x1, x8
  42289c:	mov	x29, sp
  4228a0:	mov	x19, x0
  4228a4:	bl	423598 <_obstack_memory_used@@Base+0xc07c>
  4228a8:	ldr	x9, [x20, #16]
  4228ac:	cmp	x9, #0x1
  4228b0:	b.lt	4229d8 <_obstack_memory_used@@Base+0xb4bc>  // b.tstop
  4228b4:	ldr	x8, [x19, #152]
  4228b8:	ldr	x10, [x20, #24]
  4228bc:	mov	x12, xzr
  4228c0:	ldr	x11, [x8]
  4228c4:	tbnz	w0, #0, 422950 <_obstack_memory_used@@Base+0xb434>
  4228c8:	tbnz	w0, #1, 422920 <_obstack_memory_used@@Base+0xb404>
  4228cc:	mov	w13, #0x2400                	// #9216
  4228d0:	b	4228e0 <_obstack_memory_used@@Base+0xb3c4>
  4228d4:	add	x12, x12, #0x1
  4228d8:	cmp	x12, x9
  4228dc:	b.ge	4229d8 <_obstack_memory_used@@Base+0xb4bc>  // b.tcont
  4228e0:	ldr	x8, [x10, x12, lsl #3]
  4228e4:	add	x14, x11, x8, lsl #4
  4228e8:	ldr	w14, [x14, #8]
  4228ec:	and	w15, w14, #0xff
  4228f0:	cmp	w15, #0x2
  4228f4:	b.ne	4228d4 <_obstack_memory_used@@Base+0xb3b8>  // b.any
  4228f8:	tst	w14, #0x3ff00
  4228fc:	b.eq	4229dc <_obstack_memory_used@@Base+0xb4c0>  // b.none
  422900:	tst	w14, w13
  422904:	b.ne	4228d4 <_obstack_memory_used@@Base+0xb3b8>  // b.any
  422908:	tbnz	w0, #3, 4229dc <_obstack_memory_used@@Base+0xb4c0>
  42290c:	tbnz	w14, #15, 4228d4 <_obstack_memory_used@@Base+0xb3b8>
  422910:	b	4229dc <_obstack_memory_used@@Base+0xb4c0>
  422914:	add	x12, x12, #0x1
  422918:	cmp	x12, x9
  42291c:	b.ge	4229d8 <_obstack_memory_used@@Base+0xb4bc>  // b.tcont
  422920:	ldr	x8, [x10, x12, lsl #3]
  422924:	add	x13, x11, x8, lsl #4
  422928:	ldr	w13, [x13, #8]
  42292c:	and	w14, w13, #0xff
  422930:	cmp	w14, #0x2
  422934:	b.ne	422914 <_obstack_memory_used@@Base+0xb3f8>  // b.any
  422938:	tst	w13, #0x3ff00
  42293c:	b.eq	4229dc <_obstack_memory_used@@Base+0xb4c0>  // b.none
  422940:	tbnz	w13, #10, 422914 <_obstack_memory_used@@Base+0xb3f8>
  422944:	tbnz	w0, #3, 4229dc <_obstack_memory_used@@Base+0xb4c0>
  422948:	tbnz	w13, #15, 422914 <_obstack_memory_used@@Base+0xb3f8>
  42294c:	b	4229dc <_obstack_memory_used@@Base+0xb4c0>
  422950:	tbnz	w0, #1, 4229a8 <_obstack_memory_used@@Base+0xb48c>
  422954:	mov	w13, #0x2800                	// #10240
  422958:	b	422968 <_obstack_memory_used@@Base+0xb44c>
  42295c:	add	x12, x12, #0x1
  422960:	cmp	x12, x9
  422964:	b.ge	4229d8 <_obstack_memory_used@@Base+0xb4bc>  // b.tcont
  422968:	ldr	x8, [x10, x12, lsl #3]
  42296c:	add	x14, x11, x8, lsl #4
  422970:	ldr	w14, [x14, #8]
  422974:	and	w15, w14, #0xff
  422978:	cmp	w15, #0x2
  42297c:	b.ne	42295c <_obstack_memory_used@@Base+0xb440>  // b.any
  422980:	tst	w14, #0x3ff00
  422984:	b.eq	4229dc <_obstack_memory_used@@Base+0xb4c0>  // b.none
  422988:	tst	w14, w13
  42298c:	b.ne	42295c <_obstack_memory_used@@Base+0xb440>  // b.any
  422990:	tbnz	w0, #3, 4229dc <_obstack_memory_used@@Base+0xb4c0>
  422994:	tbnz	w14, #15, 42295c <_obstack_memory_used@@Base+0xb440>
  422998:	b	4229dc <_obstack_memory_used@@Base+0xb4c0>
  42299c:	add	x12, x12, #0x1
  4229a0:	cmp	x12, x9
  4229a4:	b.ge	4229d8 <_obstack_memory_used@@Base+0xb4bc>  // b.tcont
  4229a8:	ldr	x8, [x10, x12, lsl #3]
  4229ac:	add	x13, x11, x8, lsl #4
  4229b0:	ldr	w13, [x13, #8]
  4229b4:	and	w14, w13, #0xff
  4229b8:	cmp	w14, #0x2
  4229bc:	b.ne	42299c <_obstack_memory_used@@Base+0xb480>  // b.any
  4229c0:	tst	w13, #0x3ff00
  4229c4:	b.eq	4229dc <_obstack_memory_used@@Base+0xb4c0>  // b.none
  4229c8:	tbnz	w13, #11, 42299c <_obstack_memory_used@@Base+0xb480>
  4229cc:	tbnz	w0, #3, 4229dc <_obstack_memory_used@@Base+0xb4c0>
  4229d0:	tbnz	w13, #15, 42299c <_obstack_memory_used@@Base+0xb480>
  4229d4:	b	4229dc <_obstack_memory_used@@Base+0xb4c0>
  4229d8:	mov	x8, xzr
  4229dc:	ldp	x20, x19, [sp, #16]
  4229e0:	mov	x0, x8
  4229e4:	ldp	x29, x30, [sp], #32
  4229e8:	ret
  4229ec:	stp	x29, x30, [sp, #-64]!
  4229f0:	stp	x22, x21, [sp, #32]
  4229f4:	stp	x20, x19, [sp, #48]
  4229f8:	ldr	x8, [x0, #232]
  4229fc:	mov	x19, x0
  422a00:	str	x23, [sp, #16]
  422a04:	mov	x29, sp
  422a08:	cmp	x8, #0x1
  422a0c:	b.lt	422a94 <_obstack_memory_used@@Base+0xb578>  // b.tstop
  422a10:	mov	x22, xzr
  422a14:	b	422a30 <_obstack_memory_used@@Base+0xb514>
  422a18:	mov	x0, x20
  422a1c:	bl	402a10 <free@plt>
  422a20:	ldr	x8, [x19, #232]
  422a24:	add	x22, x22, #0x1
  422a28:	cmp	x22, x8
  422a2c:	b.ge	422a94 <_obstack_memory_used@@Base+0xb578>  // b.tcont
  422a30:	ldr	x8, [x19, #248]
  422a34:	ldr	x20, [x8, x22, lsl #3]
  422a38:	ldr	x8, [x20, #32]
  422a3c:	cmp	x8, #0x1
  422a40:	b.lt	422a70 <_obstack_memory_used@@Base+0xb554>  // b.tstop
  422a44:	mov	x23, xzr
  422a48:	ldr	x8, [x20, #40]
  422a4c:	ldr	x21, [x8, x23, lsl #3]
  422a50:	ldr	x0, [x21, #32]
  422a54:	bl	402a10 <free@plt>
  422a58:	mov	x0, x21
  422a5c:	bl	402a10 <free@plt>
  422a60:	ldr	x8, [x20, #32]
  422a64:	add	x23, x23, #0x1
  422a68:	cmp	x23, x8
  422a6c:	b.lt	422a48 <_obstack_memory_used@@Base+0xb52c>  // b.tstop
  422a70:	ldr	x0, [x20, #40]
  422a74:	bl	402a10 <free@plt>
  422a78:	ldr	x8, [x20, #16]
  422a7c:	cbz	x8, 422a18 <_obstack_memory_used@@Base+0xb4fc>
  422a80:	ldr	x0, [x8, #16]
  422a84:	bl	402a10 <free@plt>
  422a88:	ldr	x0, [x20, #16]
  422a8c:	bl	402a10 <free@plt>
  422a90:	b	422a18 <_obstack_memory_used@@Base+0xb4fc>
  422a94:	str	xzr, [x19, #232]
  422a98:	str	xzr, [x19, #200]
  422a9c:	ldp	x20, x19, [sp, #48]
  422aa0:	ldp	x22, x21, [sp, #32]
  422aa4:	ldr	x23, [sp, #16]
  422aa8:	ldp	x29, x30, [sp], #64
  422aac:	ret
  422ab0:	stp	x29, x30, [sp, #-96]!
  422ab4:	stp	x28, x27, [sp, #16]
  422ab8:	stp	x26, x25, [sp, #32]
  422abc:	stp	x24, x23, [sp, #48]
  422ac0:	stp	x22, x21, [sp, #64]
  422ac4:	stp	x20, x19, [sp, #80]
  422ac8:	mov	x29, sp
  422acc:	sub	sp, sp, #0x90
  422ad0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  422ad4:	add	x8, x8, #0x9a0
  422ad8:	ldr	q0, [x8]
  422adc:	ldr	x8, [x8, #16]
  422ae0:	mov	x20, x3
  422ae4:	mov	x21, x2
  422ae8:	mov	x22, x1
  422aec:	mov	x26, x0
  422af0:	stur	q0, [x29, #-64]
  422af4:	stur	x8, [x29, #-48]
  422af8:	tbz	w4, #0, 422b14 <_obstack_memory_used@@Base+0xb5f8>
  422afc:	mov	w0, #0x60                  	// #96
  422b00:	bl	402730 <malloc@plt>
  422b04:	stur	x0, [x29, #-48]
  422b08:	cbz	x0, 423498 <_obstack_memory_used@@Base+0xbf7c>
  422b0c:	sub	x19, x29, #0x40
  422b10:	b	422b18 <_obstack_memory_used@@Base+0xb5fc>
  422b14:	mov	x19, xzr
  422b18:	ldr	x23, [x26, #144]
  422b1c:	lsl	x24, x21, #4
  422b20:	cmp	x24, #0xfbf
  422b24:	stp	xzr, xzr, [x29, #-32]
  422b28:	stur	xzr, [x29, #-16]
  422b2c:	b.hi	422b4c <_obstack_memory_used@@Base+0xb630>  // b.pmore
  422b30:	add	x9, x24, #0xf
  422b34:	mov	x8, sp
  422b38:	and	x9, x9, #0xfffffffffffffff0
  422b3c:	sub	x0, x8, x9
  422b40:	mov	sp, x0
  422b44:	stur	wzr, [x29, #-84]
  422b48:	b	422b60 <_obstack_memory_used@@Base+0xb644>
  422b4c:	mov	x0, x24
  422b50:	bl	402730 <malloc@plt>
  422b54:	cbz	x0, 423444 <_obstack_memory_used@@Base+0xbf28>
  422b58:	mov	w8, #0x1                   	// #1
  422b5c:	stur	w8, [x29, #-84]
  422b60:	mov	x1, x20
  422b64:	mov	x2, x24
  422b68:	stur	x0, [x29, #-96]
  422b6c:	bl	402580 <memcpy@plt>
  422b70:	ldp	x25, x8, [x20]
  422b74:	cmp	x25, x8
  422b78:	b.le	422be8 <_obstack_memory_used@@Base+0xb6cc>
  422b7c:	mov	x0, xzr
  422b80:	bl	402a10 <free@plt>
  422b84:	ldur	w8, [x29, #-84]
  422b88:	cbz	w8, 422b94 <_obstack_memory_used@@Base+0xb678>
  422b8c:	ldur	x0, [x29, #-96]
  422b90:	bl	402a10 <free@plt>
  422b94:	cbz	x19, 42343c <_obstack_memory_used@@Base+0xbf20>
  422b98:	ldr	x8, [x19]
  422b9c:	ldr	x0, [x19, #16]
  422ba0:	cmp	x8, #0x1
  422ba4:	b.lt	423438 <_obstack_memory_used@@Base+0xbf1c>  // b.tstop
  422ba8:	mov	x20, xzr
  422bac:	mov	x21, xzr
  422bb0:	add	x8, x0, x20
  422bb4:	ldr	x0, [x8, #40]
  422bb8:	bl	402a10 <free@plt>
  422bbc:	ldr	x8, [x19, #16]
  422bc0:	add	x8, x8, x20
  422bc4:	ldr	x0, [x8, #16]
  422bc8:	bl	402a10 <free@plt>
  422bcc:	ldr	x8, [x19]
  422bd0:	ldr	x0, [x19, #16]
  422bd4:	add	x21, x21, #0x1
  422bd8:	add	x20, x20, #0x30
  422bdc:	cmp	x21, x8
  422be0:	b.lt	422bb0 <_obstack_memory_used@@Base+0xb694>  // b.tstop
  422be4:	b	423438 <_obstack_memory_used@@Base+0xbf1c>
  422be8:	add	x8, x20, #0x8
  422bec:	stur	x8, [x29, #-104]
  422bf0:	mov	w8, #0x1                   	// #1
  422bf4:	dup	v0.2d, x8
  422bf8:	stur	q0, [x29, #-128]
  422bfc:	stp	x26, x21, [x29, #-80]
  422c00:	b	422c80 <_obstack_memory_used@@Base+0xb764>
  422c04:	cbz	x19, 4234d0 <_obstack_memory_used@@Base+0xbfb4>
  422c08:	ldr	x8, [x19]
  422c0c:	ldr	x9, [x19, #16]
  422c10:	mov	x0, x20
  422c14:	mov	x2, x24
  422c18:	sub	x8, x8, #0x1
  422c1c:	str	x8, [x19]
  422c20:	add	x8, x8, x8, lsl #1
  422c24:	lsl	x21, x8, #4
  422c28:	add	x8, x9, x21
  422c2c:	ldr	x1, [x8, #16]
  422c30:	ldr	x25, [x8]
  422c34:	bl	402580 <memcpy@plt>
  422c38:	ldur	x0, [x29, #-16]
  422c3c:	bl	402a10 <free@plt>
  422c40:	ldr	x8, [x19, #16]
  422c44:	add	x8, x8, x21
  422c48:	ldr	x0, [x8, #16]
  422c4c:	bl	402a10 <free@plt>
  422c50:	ldr	x8, [x19, #16]
  422c54:	add	x8, x8, x21
  422c58:	ldr	x9, [x8, #40]
  422c5c:	ldur	q0, [x8, #24]
  422c60:	stur	x9, [x29, #-16]
  422c64:	stur	q0, [x29, #-32]
  422c68:	ldr	x26, [x8, #8]
  422c6c:	ldr	x8, [x20, #8]
  422c70:	mov	x23, x26
  422c74:	ldp	x26, x21, [x29, #-80]
  422c78:	cmp	x25, x8
  422c7c:	b.gt	4234bc <_obstack_memory_used@@Base+0xbfa0>
  422c80:	ldr	x8, [x26]
  422c84:	add	x8, x8, x23, lsl #4
  422c88:	ldr	w9, [x8, #8]
  422c8c:	and	w10, w9, #0xff
  422c90:	cmp	w10, #0x9
  422c94:	b.eq	422ccc <_obstack_memory_used@@Base+0xb7b0>  // b.none
  422c98:	cmp	w10, #0x8
  422c9c:	b.ne	422d24 <_obstack_memory_used@@Base+0xb808>  // b.any
  422ca0:	ldr	x8, [x8]
  422ca4:	add	x8, x8, #0x1
  422ca8:	cmp	x8, x21
  422cac:	b.ge	422d24 <_obstack_memory_used@@Base+0xb808>  // b.tcont
  422cb0:	add	x8, x20, x8, lsl #4
  422cb4:	mov	x9, #0xffffffffffffffff    	// #-1
  422cb8:	stp	x25, x9, [x8]
  422cbc:	ldr	x8, [x20, #8]
  422cc0:	cmp	x25, x8
  422cc4:	b.eq	422d30 <_obstack_memory_used@@Base+0xb814>  // b.none
  422cc8:	b	422de8 <_obstack_memory_used@@Base+0xb8cc>
  422ccc:	ldr	x8, [x8]
  422cd0:	add	x8, x8, #0x1
  422cd4:	cmp	x8, x21
  422cd8:	b.ge	422d24 <_obstack_memory_used@@Base+0xb808>  // b.tcont
  422cdc:	lsl	x10, x8, #4
  422ce0:	ldr	x11, [x20, x10]
  422ce4:	cmp	x11, x25
  422ce8:	b.ge	422d00 <_obstack_memory_used@@Base+0xb7e4>  // b.tcont
  422cec:	ldur	x0, [x29, #-96]
  422cf0:	add	x8, x20, x8, lsl #4
  422cf4:	str	x25, [x8, #8]
  422cf8:	mov	x1, x20
  422cfc:	b	422d1c <_obstack_memory_used@@Base+0xb800>
  422d00:	tbz	w9, #19, 422dd4 <_obstack_memory_used@@Base+0xb8b8>
  422d04:	ldur	x9, [x29, #-96]
  422d08:	ldr	x9, [x9, x10]
  422d0c:	cmn	x9, #0x1
  422d10:	b.eq	422dd4 <_obstack_memory_used@@Base+0xb8b8>  // b.none
  422d14:	ldur	x1, [x29, #-96]
  422d18:	mov	x0, x20
  422d1c:	mov	x2, x24
  422d20:	bl	402580 <memcpy@plt>
  422d24:	ldr	x8, [x20, #8]
  422d28:	cmp	x25, x8
  422d2c:	b.ne	422de8 <_obstack_memory_used@@Base+0xb8cc>  // b.any
  422d30:	ldr	x8, [x22, #176]
  422d34:	cmp	x23, x8
  422d38:	b.ne	422de8 <_obstack_memory_used@@Base+0xb8cc>  // b.any
  422d3c:	cbz	x19, 4234f0 <_obstack_memory_used@@Base+0xbfd4>
  422d40:	ldur	x9, [x29, #-104]
  422d44:	b	422d54 <_obstack_memory_used@@Base+0xb838>
  422d48:	subs	x21, x21, #0x1
  422d4c:	add	x9, x9, #0x10
  422d50:	b.eq	4233d4 <_obstack_memory_used@@Base+0xbeb8>  // b.none
  422d54:	ldur	x10, [x9, #-8]
  422d58:	tbnz	x10, #63, 422d48 <_obstack_memory_used@@Base+0xb82c>
  422d5c:	ldr	x10, [x9]
  422d60:	cmn	x10, #0x1
  422d64:	b.ne	422d48 <_obstack_memory_used@@Base+0xb82c>  // b.any
  422d68:	cbz	x21, 4233d4 <_obstack_memory_used@@Base+0xbeb8>
  422d6c:	ldr	x8, [x19]
  422d70:	ldr	x9, [x19, #16]
  422d74:	mov	x0, x20
  422d78:	mov	x2, x24
  422d7c:	sub	x8, x8, #0x1
  422d80:	str	x8, [x19]
  422d84:	add	x8, x8, x8, lsl #1
  422d88:	lsl	x21, x8, #4
  422d8c:	add	x8, x9, x21
  422d90:	ldr	x1, [x8, #16]
  422d94:	ldr	x25, [x8]
  422d98:	bl	402580 <memcpy@plt>
  422d9c:	ldur	x0, [x29, #-16]
  422da0:	bl	402a10 <free@plt>
  422da4:	ldr	x8, [x19, #16]
  422da8:	add	x8, x8, x21
  422dac:	ldr	x0, [x8, #16]
  422db0:	bl	402a10 <free@plt>
  422db4:	ldr	x8, [x19, #16]
  422db8:	add	x8, x8, x21
  422dbc:	ldr	x9, [x8, #40]
  422dc0:	ldur	q0, [x8, #24]
  422dc4:	stur	x9, [x29, #-16]
  422dc8:	stur	q0, [x29, #-32]
  422dcc:	ldr	x23, [x8, #8]
  422dd0:	b	422de8 <_obstack_memory_used@@Base+0xb8cc>
  422dd4:	add	x8, x20, x8, lsl #4
  422dd8:	str	x25, [x8, #8]
  422ddc:	ldr	x8, [x20, #8]
  422de0:	cmp	x25, x8
  422de4:	b.eq	422d30 <_obstack_memory_used@@Base+0xb814>  // b.none
  422de8:	ldr	x27, [x22, #152]
  422dec:	ldr	x8, [x27]
  422df0:	add	x9, x8, x23, lsl #4
  422df4:	ldr	w9, [x9, #8]
  422df8:	tbnz	w9, #3, 422e98 <_obstack_memory_used@@Base+0xb97c>
  422dfc:	tbnz	w9, #20, 422ecc <_obstack_memory_used@@Base+0xb9b0>
  422e00:	and	w9, w9, #0xff
  422e04:	cmp	w9, #0x4
  422e08:	b.ne	4231dc <_obstack_memory_used@@Base+0xbcc0>  // b.any
  422e0c:	lsl	x9, x23, #4
  422e10:	ldr	x8, [x8, x9]
  422e14:	ldur	x11, [x29, #-72]
  422e18:	add	x8, x8, #0x1
  422e1c:	cmp	x8, x11
  422e20:	b.ge	423048 <_obstack_memory_used@@Base+0xbb2c>  // b.tcont
  422e24:	add	x9, x20, x8, lsl #4
  422e28:	ldp	x9, x10, [x9]
  422e2c:	sub	x28, x10, x9
  422e30:	cbz	x19, 423050 <_obstack_memory_used@@Base+0xbb34>
  422e34:	cmp	x8, x11
  422e38:	b.ge	422c08 <_obstack_memory_used@@Base+0xb6ec>  // b.tcont
  422e3c:	lsl	x9, x8, #4
  422e40:	ldr	x9, [x20, x9]
  422e44:	cmn	x9, #0x1
  422e48:	b.eq	422c08 <_obstack_memory_used@@Base+0xb6ec>  // b.none
  422e4c:	add	x8, x20, x8, lsl #4
  422e50:	ldr	x8, [x8, #8]
  422e54:	cmn	x8, #0x1
  422e58:	b.eq	422c08 <_obstack_memory_used@@Base+0xb6ec>  // b.none
  422e5c:	cbz	x28, 4230ac <_obstack_memory_used@@Base+0xbb90>
  422e60:	ldr	x8, [x22, #48]
  422e64:	sub	x8, x8, x25
  422e68:	cmp	x8, x28
  422e6c:	b.lt	422c08 <_obstack_memory_used@@Base+0xb6ec>  // b.tstop
  422e70:	ldr	x8, [x22, #8]
  422e74:	mov	x2, x28
  422e78:	add	x0, x8, x9
  422e7c:	add	x1, x8, x25
  422e80:	bl	402850 <bcmp@plt>
  422e84:	cbnz	w0, 422c08 <_obstack_memory_used@@Base+0xb6ec>
  422e88:	ldr	x8, [x27, #24]
  422e8c:	add	x25, x28, x25
  422e90:	ldr	x26, [x8, x23, lsl #3]
  422e94:	b	423208 <_obstack_memory_used@@Base+0xbcec>
  422e98:	ldr	x9, [x22, #184]
  422e9c:	ldur	x8, [x29, #-32]
  422ea0:	ldr	x21, [x27, #40]
  422ea4:	ldr	x26, [x9, x25, lsl #3]
  422ea8:	cbz	x8, 422efc <_obstack_memory_used@@Base+0xb9e0>
  422eac:	ldur	x28, [x29, #-24]
  422eb0:	cbnz	x28, 423278 <_obstack_memory_used@@Base+0xbd5c>
  422eb4:	ldur	x27, [x29, #-16]
  422eb8:	mov	w8, #0x1                   	// #1
  422ebc:	mov	w18, #0x1                   	// #1
  422ec0:	str	x23, [x27]
  422ec4:	stur	x8, [x29, #-24]
  422ec8:	b	422f24 <_obstack_memory_used@@Base+0xba08>
  422ecc:	mov	x0, x27
  422ed0:	mov	x1, x23
  422ed4:	mov	x2, x22
  422ed8:	mov	x3, x25
  422edc:	bl	425b14 <_obstack_memory_used@@Base+0xe5f8>
  422ee0:	sxtw	x28, w0
  422ee4:	cbz	x28, 4231dc <_obstack_memory_used@@Base+0xbcc0>
  422ee8:	ldr	x8, [x27, #24]
  422eec:	add	x25, x28, x25
  422ef0:	ldr	x26, [x8, x23, lsl #3]
  422ef4:	cbnz	x19, 423208 <_obstack_memory_used@@Base+0xbcec>
  422ef8:	b	423264 <_obstack_memory_used@@Base+0xbd48>
  422efc:	mov	w8, #0x1                   	// #1
  422f00:	dup	v0.2d, x8
  422f04:	mov	w0, #0x8                   	// #8
  422f08:	stur	q0, [x29, #-32]
  422f0c:	bl	402730 <malloc@plt>
  422f10:	mov	x27, x0
  422f14:	stur	x0, [x29, #-16]
  422f18:	cbz	x0, 423518 <_obstack_memory_used@@Base+0xbffc>
  422f1c:	str	x23, [x27]
  422f20:	mov	w18, #0x1                   	// #1
  422f24:	mov	w8, #0x18                  	// #24
  422f28:	madd	x8, x23, x8, x21
  422f2c:	ldr	x8, [x8, #8]
  422f30:	cmp	x8, #0x1
  422f34:	b.lt	422c04 <_obstack_memory_used@@Base+0xb6e8>  // b.tstop
  422f38:	ldr	x9, [x26, #16]
  422f3c:	subs	x10, x9, #0x1
  422f40:	b.lt	422c04 <_obstack_memory_used@@Base+0xb6e8>  // b.tstop
  422f44:	mov	w9, #0x18                  	// #24
  422f48:	madd	x9, x23, x9, x21
  422f4c:	ldr	x9, [x9, #16]
  422f50:	ldr	x11, [x26, #24]
  422f54:	cbz	x10, 422fc4 <_obstack_memory_used@@Base+0xbaa8>
  422f58:	mov	x13, xzr
  422f5c:	mov	x12, #0xffffffffffffffff    	// #-1
  422f60:	b	422f70 <_obstack_memory_used@@Base+0xba54>
  422f64:	add	x13, x13, #0x1
  422f68:	cmp	x13, x8
  422f6c:	b.eq	422fbc <_obstack_memory_used@@Base+0xbaa0>  // b.none
  422f70:	ldr	x23, [x9, x13, lsl #3]
  422f74:	mov	x14, xzr
  422f78:	mov	x15, x10
  422f7c:	add	x16, x14, x15
  422f80:	lsr	x16, x16, #1
  422f84:	ldr	x17, [x11, x16, lsl #3]
  422f88:	cmp	x17, x23
  422f8c:	csinc	x14, x14, x16, ge  // ge = tcont
  422f90:	csel	x15, x15, x16, lt  // lt = tstop
  422f94:	cmp	x14, x15
  422f98:	b.cc	422f7c <_obstack_memory_used@@Base+0xba60>  // b.lo, b.ul, b.last
  422f9c:	ldr	x14, [x11, x14, lsl #3]
  422fa0:	cmp	x14, x23
  422fa4:	b.ne	422f64 <_obstack_memory_used@@Base+0xba48>  // b.any
  422fa8:	cmn	x12, #0x1
  422fac:	mov	x26, x12
  422fb0:	mov	x12, x23
  422fb4:	b.eq	422f64 <_obstack_memory_used@@Base+0xba48>  // b.none
  422fb8:	b	422ffc <_obstack_memory_used@@Base+0xbae0>
  422fbc:	mov	x26, x12
  422fc0:	b	423268 <_obstack_memory_used@@Base+0xbd4c>
  422fc4:	ldr	x23, [x11]
  422fc8:	mov	x26, #0xffffffffffffffff    	// #-1
  422fcc:	b	422fe4 <_obstack_memory_used@@Base+0xbac8>
  422fd0:	mov	x0, x26
  422fd4:	subs	x8, x8, #0x1
  422fd8:	add	x9, x9, #0x8
  422fdc:	mov	x26, x0
  422fe0:	b.eq	423064 <_obstack_memory_used@@Base+0xbb48>  // b.none
  422fe4:	ldr	x10, [x9]
  422fe8:	cmp	x23, x10
  422fec:	b.ne	422fd0 <_obstack_memory_used@@Base+0xbab4>  // b.any
  422ff0:	cmn	x26, #0x1
  422ff4:	mov	x0, x23
  422ff8:	b.eq	422fd4 <_obstack_memory_used@@Base+0xbab8>  // b.none
  422ffc:	subs	x8, x18, #0x1
  423000:	b.lt	42306c <_obstack_memory_used@@Base+0xbb50>  // b.tstop
  423004:	mov	x9, xzr
  423008:	b.eq	42302c <_obstack_memory_used@@Base+0xbb10>  // b.none
  42300c:	add	x10, x9, x8
  423010:	lsr	x10, x10, #1
  423014:	ldr	x11, [x27, x10, lsl #3]
  423018:	cmp	x11, x26
  42301c:	csinc	x9, x9, x10, ge  // ge = tcont
  423020:	csel	x8, x8, x10, lt  // lt = tstop
  423024:	cmp	x9, x8
  423028:	b.cc	42300c <_obstack_memory_used@@Base+0xbaf0>  // b.lo, b.ul, b.last
  42302c:	ldr	x8, [x27, x9, lsl #3]
  423030:	cmp	x8, x26
  423034:	csel	x8, x23, x26, eq  // eq = none
  423038:	b.eq	423040 <_obstack_memory_used@@Base+0xbb24>  // b.none
  42303c:	cbnz	x19, 423070 <_obstack_memory_used@@Base+0xbb54>
  423040:	mov	x26, x8
  423044:	b	423268 <_obstack_memory_used@@Base+0xbd4c>
  423048:	mov	x28, xzr
  42304c:	cbnz	x19, 422e34 <_obstack_memory_used@@Base+0xb918>
  423050:	cbz	x28, 4230ac <_obstack_memory_used@@Base+0xbb90>
  423054:	ldr	x8, [x27, #24]
  423058:	add	x25, x28, x25
  42305c:	ldr	x26, [x8, x23, lsl #3]
  423060:	b	423264 <_obstack_memory_used@@Base+0xbd48>
  423064:	mov	x26, x0
  423068:	b	423268 <_obstack_memory_used@@Base+0xbd4c>
  42306c:	cbz	x19, 423268 <_obstack_memory_used@@Base+0xbd4c>
  423070:	stur	x18, [x29, #-136]
  423074:	ldp	x28, x9, [x19]
  423078:	add	x8, x28, #0x1
  42307c:	cmp	x8, x9
  423080:	str	x8, [x19]
  423084:	b.ne	4230d0 <_obstack_memory_used@@Base+0xbbb4>  // b.any
  423088:	ldr	x0, [x19, #16]
  42308c:	add	x8, x8, x8, lsl #1
  423090:	lsl	x1, x8, #5
  423094:	bl	402870 <realloc@plt>
  423098:	cbz	x0, 42351c <_obstack_memory_used@@Base+0xc000>
  42309c:	ldr	x8, [x19, #8]
  4230a0:	lsl	x8, x8, #1
  4230a4:	stp	x8, x0, [x19, #8]
  4230a8:	b	4230d4 <_obstack_memory_used@@Base+0xbbb8>
  4230ac:	ldur	x8, [x29, #-32]
  4230b0:	cbz	x8, 42315c <_obstack_memory_used@@Base+0xbc40>
  4230b4:	ldur	x21, [x29, #-24]
  4230b8:	cbnz	x21, 423324 <_obstack_memory_used@@Base+0xbe08>
  4230bc:	ldur	x8, [x29, #-16]
  4230c0:	str	x23, [x8]
  4230c4:	mov	w8, #0x1                   	// #1
  4230c8:	stur	x8, [x29, #-24]
  4230cc:	b	423178 <_obstack_memory_used@@Base+0xbc5c>
  4230d0:	ldr	x0, [x19, #16]
  4230d4:	mov	w8, #0x30                  	// #48
  4230d8:	madd	x21, x28, x8, x0
  4230dc:	mov	x0, x24
  4230e0:	stp	x25, x23, [x21]
  4230e4:	bl	402730 <malloc@plt>
  4230e8:	str	x0, [x21, #16]
  4230ec:	cbz	x0, 42351c <_obstack_memory_used@@Base+0xc000>
  4230f0:	mov	x1, x20
  4230f4:	mov	x2, x24
  4230f8:	bl	402580 <memcpy@plt>
  4230fc:	ldr	x21, [x19, #16]
  423100:	ldur	x9, [x29, #-136]
  423104:	mov	w8, #0x30                  	// #48
  423108:	madd	x8, x28, x8, x21
  42310c:	cmp	x9, #0x1
  423110:	add	x10, x8, #0x18
  423114:	str	x9, [x8, #32]
  423118:	b.lt	423150 <_obstack_memory_used@@Base+0xbc34>  // b.tstop
  42311c:	lsl	x23, x9, #3
  423120:	mov	x0, x23
  423124:	stur	x10, [x29, #-144]
  423128:	str	x9, [x10]
  42312c:	bl	402730 <malloc@plt>
  423130:	mov	w8, #0x30                  	// #48
  423134:	madd	x8, x28, x8, x21
  423138:	str	x0, [x8, #40]
  42313c:	cbz	x0, 423508 <_obstack_memory_used@@Base+0xbfec>
  423140:	mov	x1, x27
  423144:	mov	x2, x23
  423148:	bl	402580 <memcpy@plt>
  42314c:	b	423268 <_obstack_memory_used@@Base+0xbd4c>
  423150:	stp	xzr, xzr, [x10]
  423154:	str	xzr, [x10, #16]
  423158:	b	423268 <_obstack_memory_used@@Base+0xbd4c>
  42315c:	ldur	q0, [x29, #-128]
  423160:	mov	w0, #0x8                   	// #8
  423164:	stur	q0, [x29, #-32]
  423168:	bl	402730 <malloc@plt>
  42316c:	stur	x0, [x29, #-16]
  423170:	cbz	x0, 423514 <_obstack_memory_used@@Base+0xbff8>
  423174:	str	x23, [x0]
  423178:	ldr	x8, [x22, #184]
  42317c:	ldr	x9, [x8, x25, lsl #3]
  423180:	ldr	x8, [x9, #16]
  423184:	subs	x8, x8, #0x1
  423188:	b.lt	4231dc <_obstack_memory_used@@Base+0xbcc0>  // b.tstop
  42318c:	ldr	x10, [x27, #40]
  423190:	mov	w11, #0x18                  	// #24
  423194:	ldr	x9, [x9, #24]
  423198:	madd	x10, x23, x11, x10
  42319c:	ldr	x10, [x10, #16]
  4231a0:	ldr	x26, [x10]
  4231a4:	mov	x10, xzr
  4231a8:	b.eq	4231cc <_obstack_memory_used@@Base+0xbcb0>  // b.none
  4231ac:	add	x11, x10, x8
  4231b0:	lsr	x11, x11, #1
  4231b4:	ldr	x12, [x9, x11, lsl #3]
  4231b8:	cmp	x12, x26
  4231bc:	csinc	x10, x10, x11, ge  // ge = tcont
  4231c0:	csel	x8, x8, x11, lt  // lt = tstop
  4231c4:	cmp	x10, x8
  4231c8:	b.cc	4231ac <_obstack_memory_used@@Base+0xbc90>  // b.lo, b.ul, b.last
  4231cc:	ldr	x8, [x9, x10, lsl #3]
  4231d0:	cmp	x8, x26
  4231d4:	b.ne	422ee4 <_obstack_memory_used@@Base+0xb9c8>  // b.any
  4231d8:	b	423268 <_obstack_memory_used@@Base+0xbd4c>
  4231dc:	ldr	x8, [x27]
  4231e0:	mov	x0, x22
  4231e4:	mov	x2, x25
  4231e8:	add	x1, x8, x23, lsl #4
  4231ec:	bl	425e8c <_obstack_memory_used@@Base+0xe970>
  4231f0:	tbz	w0, #0, 422c04 <_obstack_memory_used@@Base+0xb6e8>
  4231f4:	mov	w28, #0x1                   	// #1
  4231f8:	ldr	x8, [x27, #24]
  4231fc:	add	x25, x28, x25
  423200:	ldr	x26, [x8, x23, lsl #3]
  423204:	cbz	x19, 423264 <_obstack_memory_used@@Base+0xbd48>
  423208:	ldr	x8, [x22, #168]
  42320c:	cmp	x25, x8
  423210:	b.gt	422c08 <_obstack_memory_used@@Base+0xb6ec>
  423214:	ldr	x8, [x22, #184]
  423218:	ldr	x8, [x8, x25, lsl #3]
  42321c:	cbz	x8, 422c08 <_obstack_memory_used@@Base+0xb6ec>
  423220:	ldr	x9, [x8, #16]
  423224:	subs	x9, x9, #0x1
  423228:	b.lt	422c08 <_obstack_memory_used@@Base+0xb6ec>  // b.tstop
  42322c:	ldr	x8, [x8, #24]
  423230:	mov	x10, xzr
  423234:	b.eq	423258 <_obstack_memory_used@@Base+0xbd3c>  // b.none
  423238:	add	x11, x10, x9
  42323c:	lsr	x11, x11, #1
  423240:	ldr	x12, [x8, x11, lsl #3]
  423244:	cmp	x12, x26
  423248:	csinc	x10, x10, x11, ge  // ge = tcont
  42324c:	csel	x9, x9, x11, lt  // lt = tstop
  423250:	cmp	x10, x9
  423254:	b.cc	423238 <_obstack_memory_used@@Base+0xbd1c>  // b.lo, b.ul, b.last
  423258:	ldr	x8, [x8, x10, lsl #3]
  42325c:	cmp	x8, x26
  423260:	b.ne	422c04 <_obstack_memory_used@@Base+0xb6e8>  // b.any
  423264:	stur	xzr, [x29, #-24]
  423268:	tbz	x26, #63, 422c6c <_obstack_memory_used@@Base+0xb750>
  42326c:	cmn	x26, #0x2
  423270:	b.ne	422c04 <_obstack_memory_used@@Base+0xb6e8>  // b.any
  423274:	b	423588 <_obstack_memory_used@@Base+0xc06c>
  423278:	cmp	x8, x28
  42327c:	b.ne	4232a8 <_obstack_memory_used@@Base+0xbd8c>  // b.any
  423280:	ldur	x0, [x29, #-16]
  423284:	lsl	x9, x8, #1
  423288:	lsl	x1, x8, #4
  42328c:	stur	x9, [x29, #-32]
  423290:	stur	x0, [x29, #-136]
  423294:	bl	402870 <realloc@plt>
  423298:	cbz	x0, 423590 <_obstack_memory_used@@Base+0xc074>
  42329c:	mov	x27, x0
  4232a0:	stur	x0, [x29, #-16]
  4232a4:	b	4232ac <_obstack_memory_used@@Base+0xbd90>
  4232a8:	ldur	x27, [x29, #-16]
  4232ac:	ldr	x8, [x27]
  4232b0:	cmp	x8, x23
  4232b4:	b.le	4232e0 <_obstack_memory_used@@Base+0xbdc4>
  4232b8:	cmp	x28, #0x1
  4232bc:	b.lt	423310 <_obstack_memory_used@@Base+0xbdf4>  // b.tstop
  4232c0:	mov	x9, x28
  4232c4:	add	x10, x27, x9, lsl #3
  4232c8:	ldur	x11, [x10, #-8]
  4232cc:	subs	x8, x9, #0x1
  4232d0:	mov	x9, x8
  4232d4:	str	x11, [x10]
  4232d8:	b.gt	4232c4 <_obstack_memory_used@@Base+0xbda8>
  4232dc:	b	423314 <_obstack_memory_used@@Base+0xbdf8>
  4232e0:	add	x8, x27, x28, lsl #3
  4232e4:	ldur	x9, [x8, #-8]
  4232e8:	mov	x8, x28
  4232ec:	cmp	x9, x23
  4232f0:	b.le	423314 <_obstack_memory_used@@Base+0xbdf8>
  4232f4:	add	x10, x27, x8, lsl #3
  4232f8:	str	x9, [x10]
  4232fc:	ldur	x9, [x10, #-16]
  423300:	sub	x8, x8, #0x1
  423304:	cmp	x9, x23
  423308:	b.gt	4232f4 <_obstack_memory_used@@Base+0xbdd8>
  42330c:	b	423314 <_obstack_memory_used@@Base+0xbdf8>
  423310:	mov	x8, x28
  423314:	add	x18, x28, #0x1
  423318:	str	x23, [x27, x8, lsl #3]
  42331c:	stur	x18, [x29, #-24]
  423320:	b	422f24 <_obstack_memory_used@@Base+0xba08>
  423324:	mov	x26, x27
  423328:	cmp	x8, x21
  42332c:	b.ne	423354 <_obstack_memory_used@@Base+0xbe38>  // b.any
  423330:	ldur	x27, [x29, #-16]
  423334:	lsl	x9, x8, #1
  423338:	lsl	x1, x8, #4
  42333c:	stur	x9, [x29, #-32]
  423340:	mov	x0, x27
  423344:	bl	402870 <realloc@plt>
  423348:	cbz	x0, 42351c <_obstack_memory_used@@Base+0xc000>
  42334c:	stur	x0, [x29, #-16]
  423350:	b	423358 <_obstack_memory_used@@Base+0xbe3c>
  423354:	ldur	x0, [x29, #-16]
  423358:	ldr	x8, [x0]
  42335c:	cmp	x8, x23
  423360:	b.le	42338c <_obstack_memory_used@@Base+0xbe70>
  423364:	cmp	x21, #0x1
  423368:	b.lt	4233bc <_obstack_memory_used@@Base+0xbea0>  // b.tstop
  42336c:	mov	x9, x21
  423370:	add	x10, x0, x9, lsl #3
  423374:	ldur	x11, [x10, #-8]
  423378:	subs	x8, x9, #0x1
  42337c:	mov	x9, x8
  423380:	str	x11, [x10]
  423384:	b.gt	423370 <_obstack_memory_used@@Base+0xbe54>
  423388:	b	4233c0 <_obstack_memory_used@@Base+0xbea4>
  42338c:	add	x8, x0, x21, lsl #3
  423390:	ldur	x9, [x8, #-8]
  423394:	mov	x8, x21
  423398:	cmp	x9, x23
  42339c:	b.le	4233c0 <_obstack_memory_used@@Base+0xbea4>
  4233a0:	add	x10, x0, x8, lsl #3
  4233a4:	str	x9, [x10]
  4233a8:	ldur	x9, [x10, #-16]
  4233ac:	sub	x8, x8, #0x1
  4233b0:	cmp	x9, x23
  4233b4:	b.gt	4233a0 <_obstack_memory_used@@Base+0xbe84>
  4233b8:	b	4233c0 <_obstack_memory_used@@Base+0xbea4>
  4233bc:	mov	x8, x21
  4233c0:	str	x23, [x0, x8, lsl #3]
  4233c4:	add	x8, x21, #0x1
  4233c8:	mov	x27, x26
  4233cc:	stur	x8, [x29, #-24]
  4233d0:	b	423178 <_obstack_memory_used@@Base+0xbc5c>
  4233d4:	ldur	x0, [x29, #-16]
  4233d8:	bl	402a10 <free@plt>
  4233dc:	ldur	w8, [x29, #-84]
  4233e0:	cbz	w8, 4233ec <_obstack_memory_used@@Base+0xbed0>
  4233e4:	ldur	x0, [x29, #-96]
  4233e8:	bl	402a10 <free@plt>
  4233ec:	ldr	x8, [x19]
  4233f0:	ldr	x0, [x19, #16]
  4233f4:	cmp	x8, #0x1
  4233f8:	b.lt	423438 <_obstack_memory_used@@Base+0xbf1c>  // b.tstop
  4233fc:	mov	x20, xzr
  423400:	mov	x21, xzr
  423404:	add	x8, x0, x20
  423408:	ldr	x0, [x8, #40]
  42340c:	bl	402a10 <free@plt>
  423410:	ldr	x8, [x19, #16]
  423414:	add	x8, x8, x20
  423418:	ldr	x0, [x8, #16]
  42341c:	bl	402a10 <free@plt>
  423420:	ldr	x8, [x19]
  423424:	ldr	x0, [x19, #16]
  423428:	add	x21, x21, #0x1
  42342c:	add	x20, x20, #0x30
  423430:	cmp	x21, x8
  423434:	b.lt	423404 <_obstack_memory_used@@Base+0xbee8>  // b.tstop
  423438:	bl	402a10 <free@plt>
  42343c:	mov	w0, wzr
  423440:	b	42349c <_obstack_memory_used@@Base+0xbf80>
  423444:	cbz	x19, 423498 <_obstack_memory_used@@Base+0xbf7c>
  423448:	ldr	x8, [x19]
  42344c:	ldr	x0, [x19, #16]
  423450:	cmp	x8, #0x1
  423454:	b.lt	423494 <_obstack_memory_used@@Base+0xbf78>  // b.tstop
  423458:	mov	x20, xzr
  42345c:	mov	x21, xzr
  423460:	add	x8, x0, x20
  423464:	ldr	x0, [x8, #40]
  423468:	bl	402a10 <free@plt>
  42346c:	ldr	x8, [x19, #16]
  423470:	add	x8, x8, x20
  423474:	ldr	x0, [x8, #16]
  423478:	bl	402a10 <free@plt>
  42347c:	ldr	x8, [x19]
  423480:	ldr	x0, [x19, #16]
  423484:	add	x21, x21, #0x1
  423488:	add	x20, x20, #0x30
  42348c:	cmp	x21, x8
  423490:	b.lt	423460 <_obstack_memory_used@@Base+0xbf44>  // b.tstop
  423494:	bl	402a10 <free@plt>
  423498:	mov	w0, #0xc                   	// #12
  42349c:	mov	sp, x29
  4234a0:	ldp	x20, x19, [sp, #80]
  4234a4:	ldp	x22, x21, [sp, #64]
  4234a8:	ldp	x24, x23, [sp, #48]
  4234ac:	ldp	x26, x25, [sp, #32]
  4234b0:	ldp	x28, x27, [sp, #16]
  4234b4:	ldp	x29, x30, [sp], #96
  4234b8:	ret
  4234bc:	ldur	x0, [x29, #-16]
  4234c0:	bl	402a10 <free@plt>
  4234c4:	ldur	w8, [x29, #-84]
  4234c8:	cbnz	w8, 422b8c <_obstack_memory_used@@Base+0xb670>
  4234cc:	b	422b94 <_obstack_memory_used@@Base+0xb678>
  4234d0:	ldur	x0, [x29, #-16]
  4234d4:	bl	402a10 <free@plt>
  4234d8:	ldur	w8, [x29, #-84]
  4234dc:	cbz	w8, 4234e8 <_obstack_memory_used@@Base+0xbfcc>
  4234e0:	ldur	x0, [x29, #-96]
  4234e4:	bl	402a10 <free@plt>
  4234e8:	mov	w0, #0x1                   	// #1
  4234ec:	b	42349c <_obstack_memory_used@@Base+0xbf80>
  4234f0:	ldur	x0, [x29, #-16]
  4234f4:	bl	402a10 <free@plt>
  4234f8:	ldur	w8, [x29, #-84]
  4234fc:	cbz	w8, 42343c <_obstack_memory_used@@Base+0xbf20>
  423500:	ldur	x0, [x29, #-96]
  423504:	b	423438 <_obstack_memory_used@@Base+0xbf1c>
  423508:	ldur	x8, [x29, #-144]
  42350c:	stp	xzr, xzr, [x8]
  423510:	b	42351c <_obstack_memory_used@@Base+0xc000>
  423514:	mov	x27, xzr
  423518:	stp	xzr, xzr, [x29, #-32]
  42351c:	mov	x0, x27
  423520:	bl	402a10 <free@plt>
  423524:	ldur	w8, [x29, #-84]
  423528:	cbz	w8, 423534 <_obstack_memory_used@@Base+0xc018>
  42352c:	ldur	x0, [x29, #-96]
  423530:	bl	402a10 <free@plt>
  423534:	cbz	x19, 423498 <_obstack_memory_used@@Base+0xbf7c>
  423538:	ldr	x8, [x19]
  42353c:	ldr	x0, [x19, #16]
  423540:	cmp	x8, #0x1
  423544:	b.lt	423494 <_obstack_memory_used@@Base+0xbf78>  // b.tstop
  423548:	mov	x20, xzr
  42354c:	mov	x21, xzr
  423550:	add	x8, x0, x20
  423554:	ldr	x0, [x8, #40]
  423558:	bl	402a10 <free@plt>
  42355c:	ldr	x8, [x19, #16]
  423560:	add	x8, x8, x20
  423564:	ldr	x0, [x8, #16]
  423568:	bl	402a10 <free@plt>
  42356c:	ldr	x8, [x19]
  423570:	ldr	x0, [x19, #16]
  423574:	add	x21, x21, #0x1
  423578:	add	x20, x20, #0x30
  42357c:	cmp	x21, x8
  423580:	b.lt	423550 <_obstack_memory_used@@Base+0xc034>  // b.tstop
  423584:	b	423494 <_obstack_memory_used@@Base+0xbf78>
  423588:	ldur	x27, [x29, #-16]
  42358c:	b	42351c <_obstack_memory_used@@Base+0xc000>
  423590:	ldur	x27, [x29, #-136]
  423594:	b	42351c <_obstack_memory_used@@Base+0xc000>
  423598:	sub	sp, sp, #0x20
  42359c:	stp	x29, x30, [sp, #16]
  4235a0:	add	x29, sp, #0x10
  4235a4:	tbnz	x1, #63, 423670 <_obstack_memory_used@@Base+0xc154>
  4235a8:	ldr	x8, [x0, #88]
  4235ac:	cmp	x8, x1
  4235b0:	b.eq	423684 <_obstack_memory_used@@Base+0xc168>  // b.none
  4235b4:	ldr	w8, [x0, #144]
  4235b8:	cmp	w8, #0x2
  4235bc:	b.lt	4235f0 <_obstack_memory_used@@Base+0xc0d4>  // b.tstop
  4235c0:	ldr	x8, [x0, #16]
  4235c4:	ldr	w9, [x8, x1, lsl #2]
  4235c8:	cmn	w9, #0x1
  4235cc:	b.ne	423624 <_obstack_memory_used@@Base+0xc108>  // b.any
  4235d0:	sub	x1, x1, #0x1
  4235d4:	cmn	x1, #0x1
  4235d8:	b.ne	4235c4 <_obstack_memory_used@@Base+0xc0a8>  // b.any
  4235dc:	ldr	w8, [x0, #112]
  4235e0:	ldp	x29, x30, [sp, #16]
  4235e4:	mov	w0, w8
  4235e8:	add	sp, sp, #0x20
  4235ec:	ret
  4235f0:	ldr	x8, [x0, #8]
  4235f4:	ldr	x9, [x0, #128]
  4235f8:	ldrb	w8, [x8, x1]
  4235fc:	lsr	x10, x8, #3
  423600:	and	x10, x10, #0x18
  423604:	ldr	x9, [x9, x10]
  423608:	lsr	x9, x9, x8
  42360c:	tbz	w9, #0, 423654 <_obstack_memory_used@@Base+0xc138>
  423610:	mov	w8, #0x1                   	// #1
  423614:	ldp	x29, x30, [sp, #16]
  423618:	mov	w0, w8
  42361c:	add	sp, sp, #0x20
  423620:	ret
  423624:	ldrb	w8, [x0, #142]
  423628:	cbnz	w8, 4236a0 <_obstack_memory_used@@Base+0xc184>
  42362c:	cmp	w9, #0xa
  423630:	b.ne	42365c <_obstack_memory_used@@Base+0xc140>  // b.any
  423634:	ldrb	w8, [x0, #141]
  423638:	cmp	w8, #0x0
  42363c:	cset	w8, ne  // ne = any
  423640:	lsl	w8, w8, #1
  423644:	ldp	x29, x30, [sp, #16]
  423648:	mov	w0, w8
  42364c:	add	sp, sp, #0x20
  423650:	ret
  423654:	cmp	w8, #0xa
  423658:	b.eq	423634 <_obstack_memory_used@@Base+0xc118>  // b.none
  42365c:	mov	w8, wzr
  423660:	ldp	x29, x30, [sp, #16]
  423664:	mov	w0, w8
  423668:	add	sp, sp, #0x20
  42366c:	ret
  423670:	ldr	w8, [x0, #112]
  423674:	ldp	x29, x30, [sp, #16]
  423678:	mov	w0, w8
  42367c:	add	sp, sp, #0x20
  423680:	ret
  423684:	and	w8, w2, #0x2
  423688:	mov	w9, #0xa                   	// #10
  42368c:	eor	w8, w8, w9
  423690:	ldp	x29, x30, [sp, #16]
  423694:	mov	w0, w8
  423698:	add	sp, sp, #0x20
  42369c:	ret
  4236a0:	str	x0, [sp]
  4236a4:	mov	w0, w9
  4236a8:	stur	w9, [x29, #-4]
  4236ac:	bl	402b10 <iswalnum@plt>
  4236b0:	ldur	w9, [x29, #-4]
  4236b4:	mov	w8, #0x1                   	// #1
  4236b8:	cmp	w9, #0x5f
  4236bc:	b.eq	4235e0 <_obstack_memory_used@@Base+0xc0c4>  // b.none
  4236c0:	mov	w10, w0
  4236c4:	ldr	x0, [sp]
  4236c8:	cbz	w10, 42362c <_obstack_memory_used@@Base+0xc110>
  4236cc:	b	4235e0 <_obstack_memory_used@@Base+0xc0c4>
  4236d0:	stp	x29, x30, [sp, #-80]!
  4236d4:	stp	x26, x25, [sp, #16]
  4236d8:	stp	x24, x23, [sp, #32]
  4236dc:	stp	x22, x21, [sp, #48]
  4236e0:	stp	x20, x19, [sp, #64]
  4236e4:	ldr	x8, [x1, #8]
  4236e8:	mov	x29, sp
  4236ec:	cmp	x8, #0x1
  4236f0:	b.lt	4237bc <_obstack_memory_used@@Base+0xc2a0>  // b.tstop
  4236f4:	ldr	x23, [x0, #152]
  4236f8:	mov	x19, x2
  4236fc:	mov	x20, x1
  423700:	mov	x21, x0
  423704:	mov	x24, xzr
  423708:	b	42372c <_obstack_memory_used@@Base+0xc210>
  42370c:	add	x8, x8, #0x1
  423710:	str	x25, [x9, #8]
  423714:	str	x8, [x21, #232]
  423718:	str	x19, [x9]
  42371c:	ldr	x8, [x20, #8]
  423720:	add	x24, x24, #0x1
  423724:	cmp	x24, x8
  423728:	b.ge	4237bc <_obstack_memory_used@@Base+0xc2a0>  // b.tcont
  42372c:	ldr	x9, [x20, #16]
  423730:	ldr	x25, [x9, x24, lsl #3]
  423734:	ldr	x9, [x23]
  423738:	add	x10, x9, x25, lsl #4
  42373c:	ldrb	w10, [x10, #8]
  423740:	cmp	w10, #0x8
  423744:	b.ne	423720 <_obstack_memory_used@@Base+0xc204>  // b.any
  423748:	lsl	x10, x25, #4
  42374c:	ldr	x9, [x9, x10]
  423750:	cmp	x9, #0x3f
  423754:	b.gt	423720 <_obstack_memory_used@@Base+0xc204>
  423758:	ldr	x10, [x23, #160]
  42375c:	lsr	x9, x10, x9
  423760:	tbz	w9, #0, 423720 <_obstack_memory_used@@Base+0xc204>
  423764:	ldp	x8, x26, [x21, #232]
  423768:	ldr	x22, [x21, #248]
  42376c:	cmp	x8, x26
  423770:	b.eq	42379c <_obstack_memory_used@@Base+0xc280>  // b.none
  423774:	mov	w0, #0x1                   	// #1
  423778:	mov	w1, #0x30                  	// #48
  42377c:	bl	402840 <calloc@plt>
  423780:	ldr	x8, [x21, #232]
  423784:	lsl	x9, x8, #3
  423788:	str	x0, [x22, x9]
  42378c:	ldr	x10, [x21, #248]
  423790:	ldr	x9, [x10, x9]
  423794:	cbnz	x9, 42370c <_obstack_memory_used@@Base+0xc1f0>
  423798:	b	4237d8 <_obstack_memory_used@@Base+0xc2bc>
  42379c:	lsl	x1, x26, #4
  4237a0:	mov	x0, x22
  4237a4:	bl	402870 <realloc@plt>
  4237a8:	cbz	x0, 4237d8 <_obstack_memory_used@@Base+0xc2bc>
  4237ac:	mov	x22, x0
  4237b0:	lsl	x8, x26, #1
  4237b4:	stp	x8, x0, [x21, #240]
  4237b8:	b	423774 <_obstack_memory_used@@Base+0xc258>
  4237bc:	mov	w0, wzr
  4237c0:	ldp	x20, x19, [sp, #64]
  4237c4:	ldp	x22, x21, [sp, #48]
  4237c8:	ldp	x24, x23, [sp, #32]
  4237cc:	ldp	x26, x25, [sp, #16]
  4237d0:	ldp	x29, x30, [sp], #80
  4237d4:	ret
  4237d8:	mov	w0, #0xc                   	// #12
  4237dc:	b	4237c0 <_obstack_memory_used@@Base+0xc2a4>
  4237e0:	sub	sp, sp, #0xd0
  4237e4:	stp	x29, x30, [sp, #112]
  4237e8:	stp	x28, x27, [sp, #128]
  4237ec:	stp	x26, x25, [sp, #144]
  4237f0:	stp	x24, x23, [sp, #160]
  4237f4:	stp	x22, x21, [sp, #176]
  4237f8:	stp	x20, x19, [sp, #192]
  4237fc:	ldr	x8, [x1, #8]
  423800:	add	x29, sp, #0x70
  423804:	cmp	x8, #0x1
  423808:	b.lt	424088 <_obstack_memory_used@@Base+0xcb6c>  // b.tstop
  42380c:	ldr	x10, [x0, #152]
  423810:	ldr	x8, [x0, #72]
  423814:	mov	x23, x1
  423818:	mov	x28, x0
  42381c:	mov	x9, xzr
  423820:	stur	x8, [x29, #-48]
  423824:	str	x1, [sp]
  423828:	str	x10, [sp, #32]
  42382c:	b	423844 <_obstack_memory_used@@Base+0xc328>
  423830:	ldp	x9, x10, [sp, #24]
  423834:	ldr	x8, [x23, #8]
  423838:	add	x9, x9, #0x1
  42383c:	cmp	x9, x8
  423840:	b.ge	424088 <_obstack_memory_used@@Base+0xcb6c>  // b.tcont
  423844:	ldr	x8, [x23, #16]
  423848:	str	x9, [sp, #24]
  42384c:	ldr	x9, [x8, x9, lsl #3]
  423850:	ldr	x8, [x10]
  423854:	stur	x9, [x29, #-40]
  423858:	add	x19, x8, x9, lsl #4
  42385c:	ldr	w21, [x19, #8]!
  423860:	and	w8, w21, #0xff
  423864:	cmp	w8, #0x4
  423868:	b.ne	423830 <_obstack_memory_used@@Base+0xc314>  // b.any
  42386c:	tst	w21, #0x3ff00
  423870:	b.eq	423958 <_obstack_memory_used@@Base+0xc43c>  // b.none
  423874:	ldur	x9, [x29, #-48]
  423878:	tbnz	x9, #63, 4238b0 <_obstack_memory_used@@Base+0xc394>
  42387c:	ldr	x8, [x28, #88]
  423880:	cmp	x8, x9
  423884:	b.eq	424048 <_obstack_memory_used@@Base+0xcb2c>  // b.none
  423888:	ldr	w8, [x28, #144]
  42388c:	cmp	w8, #0x2
  423890:	b.lt	4238c4 <_obstack_memory_used@@Base+0xc3a8>  // b.tstop
  423894:	ldr	x8, [x28, #16]
  423898:	ldr	w24, [x8, x9, lsl #2]
  42389c:	cmn	w24, #0x1
  4238a0:	b.ne	4238f0 <_obstack_memory_used@@Base+0xc3d4>  // b.any
  4238a4:	sub	x9, x9, #0x1
  4238a8:	cmn	x9, #0x1
  4238ac:	b.ne	423898 <_obstack_memory_used@@Base+0xc37c>  // b.any
  4238b0:	ldr	w8, [x28, #112]
  4238b4:	tst	w8, #0x1
  4238b8:	cset	w9, eq  // eq = none
  4238bc:	tbnz	w21, #10, 423938 <_obstack_memory_used@@Base+0xc41c>
  4238c0:	b	42393c <_obstack_memory_used@@Base+0xc420>
  4238c4:	ldr	x8, [x28, #8]
  4238c8:	ldrb	w8, [x8, x9]
  4238cc:	ldr	x9, [x28, #128]
  4238d0:	lsr	x10, x8, #3
  4238d4:	and	x10, x10, #0x18
  4238d8:	ldr	x9, [x9, x10]
  4238dc:	lsr	x9, x9, x8
  4238e0:	tbz	w9, #0, 423920 <_obstack_memory_used@@Base+0xc404>
  4238e4:	mov	w9, wzr
  4238e8:	mov	w8, #0x1                   	// #1
  4238ec:	b	42393c <_obstack_memory_used@@Base+0xc420>
  4238f0:	ldrb	w8, [x28, #142]
  4238f4:	cbnz	w8, 424068 <_obstack_memory_used@@Base+0xcb4c>
  4238f8:	cmp	w24, #0xa
  4238fc:	b.ne	423928 <_obstack_memory_used@@Base+0xc40c>  // b.any
  423900:	ldrb	w8, [x28, #141]
  423904:	cmp	w8, #0x0
  423908:	cset	w8, ne  // ne = any
  42390c:	lsl	w8, w8, #1
  423910:	tst	w8, #0x1
  423914:	cset	w9, eq  // eq = none
  423918:	tbnz	w21, #10, 423938 <_obstack_memory_used@@Base+0xc41c>
  42391c:	b	42393c <_obstack_memory_used@@Base+0xc420>
  423920:	cmp	w8, #0xa
  423924:	b.eq	423900 <_obstack_memory_used@@Base+0xc3e4>  // b.none
  423928:	mov	w8, wzr
  42392c:	tst	w8, #0x1
  423930:	cset	w9, eq  // eq = none
  423934:	tbz	w21, #10, 42393c <_obstack_memory_used@@Base+0xc420>
  423938:	tbz	w8, #0, 423830 <_obstack_memory_used@@Base+0xc314>
  42393c:	ldr	w10, [x19]
  423940:	tbnz	w9, #0, 423948 <_obstack_memory_used@@Base+0xc42c>
  423944:	tbnz	w10, #11, 423830 <_obstack_memory_used@@Base+0xc314>
  423948:	tbnz	w8, #1, 423950 <_obstack_memory_used@@Base+0xc434>
  42394c:	tbnz	w10, #13, 423830 <_obstack_memory_used@@Base+0xc314>
  423950:	tbnz	w8, #3, 423958 <_obstack_memory_used@@Base+0xc43c>
  423954:	tbnz	w10, #15, 423830 <_obstack_memory_used@@Base+0xc314>
  423958:	ldr	x19, [x28, #200]
  42395c:	ldr	x20, [x28, #152]
  423960:	ldr	x23, [x28, #8]
  423964:	cmp	x19, #0x1
  423968:	b.lt	4239b8 <_obstack_memory_used@@Base+0xc49c>  // b.tstop
  42396c:	ldr	x9, [x28, #216]
  423970:	ldur	x24, [x29, #-48]
  423974:	mov	x8, xzr
  423978:	mov	x10, x19
  42397c:	mov	w13, #0x28                  	// #40
  423980:	add	x11, x10, x8
  423984:	cmp	x11, #0x0
  423988:	cinc	x11, x11, lt  // lt = tstop
  42398c:	asr	x11, x11, #1
  423990:	madd	x12, x11, x13, x9
  423994:	ldr	x12, [x12, #8]
  423998:	cmp	x12, x24
  42399c:	csel	x10, x10, x11, lt  // lt = tstop
  4239a0:	csinc	x8, x8, x11, ge  // ge = tcont
  4239a4:	cmp	x8, x10
  4239a8:	b.lt	423980 <_obstack_memory_used@@Base+0xc464>  // b.tstop
  4239ac:	cmp	x8, x19
  4239b0:	b.lt	4239cc <_obstack_memory_used@@Base+0xc4b0>  // b.tstop
  4239b4:	b	423a08 <_obstack_memory_used@@Base+0xc4ec>
  4239b8:	ldur	x24, [x29, #-48]
  4239bc:	mov	x8, xzr
  4239c0:	mov	w13, #0x28                  	// #40
  4239c4:	cmp	x8, x19
  4239c8:	b.ge	423a08 <_obstack_memory_used@@Base+0xc4ec>  // b.tcont
  4239cc:	cmn	x8, #0x1
  4239d0:	b.eq	423a08 <_obstack_memory_used@@Base+0xc4ec>  // b.none
  4239d4:	ldr	x9, [x28, #216]
  4239d8:	madd	x10, x8, x13, x9
  4239dc:	ldr	x10, [x10, #8]
  4239e0:	cmp	x10, x24
  4239e4:	b.ne	423a08 <_obstack_memory_used@@Base+0xc4ec>  // b.any
  4239e8:	madd	x8, x8, x13, x9
  4239ec:	ldr	x9, [x8]
  4239f0:	ldur	x10, [x29, #-40]
  4239f4:	cmp	x9, x10
  4239f8:	b.eq	423db0 <_obstack_memory_used@@Base+0xc894>  // b.none
  4239fc:	ldrb	w9, [x8, #32]
  423a00:	add	x8, x8, #0x28
  423a04:	cbnz	w9, 4239ec <_obstack_memory_used@@Base+0xc4d0>
  423a08:	ldr	x8, [x28, #232]
  423a0c:	cmp	x8, #0x1
  423a10:	mov	x8, x19
  423a14:	b.lt	423d9c <_obstack_memory_used@@Base+0xc880>  // b.tstop
  423a18:	ldur	x9, [x29, #-40]
  423a1c:	ldr	x8, [x20]
  423a20:	mov	x12, xzr
  423a24:	str	x19, [sp, #40]
  423a28:	lsl	x9, x9, #4
  423a2c:	ldr	x21, [x8, x9]
  423a30:	stp	x21, x20, [sp, #8]
  423a34:	ldr	x9, [x28, #248]
  423a38:	ldr	x27, [x9, x12, lsl #3]
  423a3c:	ldr	x9, [x27, #8]
  423a40:	lsl	x9, x9, #4
  423a44:	ldr	x8, [x8, x9]
  423a48:	cmp	x8, x21
  423a4c:	b.ne	423bc8 <_obstack_memory_used@@Base+0xc6ac>  // b.any
  423a50:	stp	x12, x27, [sp, #48]
  423a54:	ldr	x8, [x27, #32]
  423a58:	ldr	x20, [x27]
  423a5c:	mov	x21, xzr
  423a60:	mov	x22, x24
  423a64:	cmp	x8, #0x1
  423a68:	b.lt	423b80 <_obstack_memory_used@@Base+0xc664>  // b.tstop
  423a6c:	mov	x19, x20
  423a70:	ldr	x9, [x27, #40]
  423a74:	ldr	x26, [x9, x21, lsl #3]
  423a78:	ldr	x20, [x26, #8]
  423a7c:	sub	x25, x20, x19
  423a80:	cmp	x25, #0x1
  423a84:	b.lt	423ab8 <_obstack_memory_used@@Base+0xc59c>  // b.tstop
  423a88:	ldr	x9, [x28, #48]
  423a8c:	mov	x24, x28
  423a90:	add	x28, x25, x22
  423a94:	cmp	x28, x9
  423a98:	b.gt	423afc <_obstack_memory_used@@Base+0xc5e0>
  423a9c:	mov	x28, x24
  423aa0:	add	x0, x23, x22
  423aa4:	add	x1, x23, x19
  423aa8:	mov	x2, x25
  423aac:	bl	402850 <bcmp@plt>
  423ab0:	ldur	x24, [x29, #-48]
  423ab4:	cbnz	w0, 423b78 <_obstack_memory_used@@Base+0xc65c>
  423ab8:	ldur	x3, [x29, #-40]
  423abc:	mov	x0, x28
  423ac0:	mov	x1, x27
  423ac4:	mov	x2, x26
  423ac8:	mov	x4, x24
  423acc:	bl	4246d4 <_obstack_memory_used@@Base+0xd1b8>
  423ad0:	cmp	w0, #0x1
  423ad4:	b.hi	4240c0 <_obstack_memory_used@@Base+0xcba4>  // b.pmore
  423ad8:	ldr	x8, [x27, #32]
  423adc:	ldr	x23, [x28, #8]
  423ae0:	add	x21, x21, #0x1
  423ae4:	add	x22, x25, x22
  423ae8:	cmp	x21, x8
  423aec:	mov	x19, x20
  423af0:	mov	x9, x27
  423af4:	b.lt	423a70 <_obstack_memory_used@@Base+0xc554>  // b.tstop
  423af8:	b	423b80 <_obstack_memory_used@@Base+0xc664>
  423afc:	ldr	x10, [x24, #88]
  423b00:	mov	x11, x24
  423b04:	cmp	x28, x10
  423b08:	b.gt	423b98 <_obstack_memory_used@@Base+0xc67c>
  423b0c:	ldr	x8, [x11, #64]
  423b10:	ldr	x23, [x11, #192]
  423b14:	cmp	x8, x28
  423b18:	b.gt	423b24 <_obstack_memory_used@@Base+0xc608>
  423b1c:	cmp	x8, x10
  423b20:	b.lt	423b34 <_obstack_memory_used@@Base+0xc618>  // b.tstop
  423b24:	cmp	x9, x28
  423b28:	b.gt	423b44 <_obstack_memory_used@@Base+0xc628>
  423b2c:	cmp	x9, x10
  423b30:	b.ge	423b44 <_obstack_memory_used@@Base+0xc628>  // b.tcont
  423b34:	add	w1, w28, #0x1
  423b38:	mov	x0, x24
  423b3c:	bl	4240e4 <_obstack_memory_used@@Base+0xcbc8>
  423b40:	cbnz	w0, 4240c0 <_obstack_memory_used@@Base+0xcba4>
  423b44:	subs	x8, x28, x23
  423b48:	b.le	423b6c <_obstack_memory_used@@Base+0xc650>
  423b4c:	ldr	x9, [x24, #184]
  423b50:	lsl	x2, x8, #3
  423b54:	mov	w1, wzr
  423b58:	mov	x27, x24
  423b5c:	add	x9, x9, x23, lsl #3
  423b60:	add	x0, x9, #0x8
  423b64:	bl	402800 <memset@plt>
  423b68:	str	x28, [x24, #192]
  423b6c:	ldr	x23, [x24, #8]
  423b70:	ldr	x27, [sp, #56]
  423b74:	b	423a9c <_obstack_memory_used@@Base+0xc580>
  423b78:	ldr	x8, [x27, #32]
  423b7c:	mov	x20, x19
  423b80:	ldr	x19, [sp, #40]
  423b84:	cmp	x21, x8
  423b88:	b.ge	423bb0 <_obstack_memory_used@@Base+0xc694>  // b.tcont
  423b8c:	ldp	x21, x20, [sp, #8]
  423b90:	ldr	x12, [sp, #48]
  423b94:	b	423bc8 <_obstack_memory_used@@Base+0xc6ac>
  423b98:	ldur	x24, [x29, #-48]
  423b9c:	mov	x20, x19
  423ba0:	mov	x28, x11
  423ba4:	ldr	x19, [sp, #40]
  423ba8:	cmp	x21, x8
  423bac:	b.lt	423b8c <_obstack_memory_used@@Base+0xc670>  // b.tstop
  423bb0:	ldr	x12, [sp, #48]
  423bb4:	cmp	x21, #0x0
  423bb8:	cinc	x25, x20, ne  // ne = any
  423bbc:	cmp	x25, x24
  423bc0:	b.le	423be0 <_obstack_memory_used@@Base+0xc6c4>
  423bc4:	ldp	x21, x20, [sp, #8]
  423bc8:	ldr	x8, [x28, #232]
  423bcc:	add	x12, x12, #0x1
  423bd0:	cmp	x12, x8
  423bd4:	b.ge	423d98 <_obstack_memory_used@@Base+0xc87c>  // b.tcont
  423bd8:	ldr	x8, [x20]
  423bdc:	b	423a34 <_obstack_memory_used@@Base+0xc518>
  423be0:	ldp	x21, x20, [sp, #8]
  423be4:	b	423c00 <_obstack_memory_used@@Base+0xc6e4>
  423be8:	ldr	x23, [x28, #8]
  423bec:	ldr	x12, [sp, #48]
  423bf0:	ldr	x27, [sp, #56]
  423bf4:	cmp	x25, x24
  423bf8:	add	x25, x25, #0x1
  423bfc:	b.ge	423bc8 <_obstack_memory_used@@Base+0xc6ac>  // b.tcont
  423c00:	ldr	x8, [x27]
  423c04:	cmp	x25, x8
  423c08:	b.le	423c30 <_obstack_memory_used@@Base+0xc714>
  423c0c:	ldr	x8, [x28, #48]
  423c10:	cmp	x22, x8
  423c14:	b.ge	423d38 <_obstack_memory_used@@Base+0xc81c>  // b.tcont
  423c18:	add	x9, x25, x23
  423c1c:	ldrb	w8, [x23, x22]
  423c20:	ldurb	w9, [x9, #-1]
  423c24:	cmp	w8, w9
  423c28:	b.ne	423bc8 <_obstack_memory_used@@Base+0xc6ac>  // b.any
  423c2c:	add	x22, x22, #0x1
  423c30:	ldr	x8, [x28, #184]
  423c34:	ldr	x9, [x8, x25, lsl #3]
  423c38:	cbz	x9, 423bf0 <_obstack_memory_used@@Base+0xc6d4>
  423c3c:	ldr	x8, [x9, #16]
  423c40:	cmp	x8, #0x1
  423c44:	b.lt	423bf0 <_obstack_memory_used@@Base+0xc6d4>  // b.tstop
  423c48:	ldr	x9, [x9, #24]
  423c4c:	ldr	x10, [x20]
  423c50:	b	423c60 <_obstack_memory_used@@Base+0xc744>
  423c54:	subs	x8, x8, #0x1
  423c58:	add	x9, x9, #0x8
  423c5c:	b.eq	423bf0 <_obstack_memory_used@@Base+0xc6d4>  // b.none
  423c60:	ldr	x26, [x9]
  423c64:	add	x11, x10, x26, lsl #4
  423c68:	ldrb	w11, [x11, #8]
  423c6c:	cmp	w11, #0x9
  423c70:	b.ne	423c54 <_obstack_memory_used@@Base+0xc738>  // b.any
  423c74:	lsl	x11, x26, #4
  423c78:	ldr	x11, [x10, x11]
  423c7c:	cmp	x11, x21
  423c80:	b.ne	423c54 <_obstack_memory_used@@Base+0xc738>  // b.any
  423c84:	cmn	x26, #0x1
  423c88:	b.eq	423bf0 <_obstack_memory_used@@Base+0xc6d4>  // b.none
  423c8c:	ldr	x1, [x27, #16]
  423c90:	cbnz	x1, 423cb4 <_obstack_memory_used@@Base+0xc798>
  423c94:	ldr	x8, [x27]
  423c98:	mov	w0, #0x18                  	// #24
  423c9c:	sub	x8, x25, x8
  423ca0:	add	x1, x8, #0x1
  423ca4:	bl	402840 <calloc@plt>
  423ca8:	mov	x1, x0
  423cac:	str	x0, [x27, #16]
  423cb0:	cbz	x0, 4240b4 <_obstack_memory_used@@Base+0xcb98>
  423cb4:	ldp	x3, x2, [x27]
  423cb8:	mov	w6, #0x9                   	// #9
  423cbc:	mov	x0, x28
  423cc0:	mov	x4, x26
  423cc4:	mov	x5, x25
  423cc8:	bl	42488c <_obstack_memory_used@@Base+0xd370>
  423ccc:	ldr	x12, [sp, #48]
  423cd0:	cmp	w0, #0x1
  423cd4:	b.eq	423bf0 <_obstack_memory_used@@Base+0xc6d4>  // b.none
  423cd8:	mov	w27, w0
  423cdc:	cbnz	w0, 4240c4 <_obstack_memory_used@@Base+0xcba8>
  423ce0:	ldr	x23, [sp, #56]
  423ce4:	ldp	x9, x8, [x23, #24]
  423ce8:	cmp	x8, x9
  423cec:	b.eq	423d60 <_obstack_memory_used@@Base+0xc844>  // b.none
  423cf0:	mov	w0, #0x1                   	// #1
  423cf4:	mov	w1, #0x28                  	// #40
  423cf8:	bl	402840 <calloc@plt>
  423cfc:	cbz	x0, 4240b4 <_obstack_memory_used@@Base+0xcb98>
  423d00:	ldp	x9, x8, [x23, #32]
  423d04:	ldur	x3, [x29, #-40]
  423d08:	mov	x2, x0
  423d0c:	mov	x1, x23
  423d10:	str	x0, [x8, x9, lsl #3]
  423d14:	stp	x26, x25, [x0]
  423d18:	add	x8, x9, #0x1
  423d1c:	mov	x0, x28
  423d20:	mov	x4, x24
  423d24:	str	x8, [x23, #32]
  423d28:	bl	4246d4 <_obstack_memory_used@@Base+0xd1b8>
  423d2c:	cmp	w0, #0x1
  423d30:	b.ls	423be8 <_obstack_memory_used@@Base+0xc6cc>  // b.plast
  423d34:	b	4240c0 <_obstack_memory_used@@Base+0xcba4>
  423d38:	ldr	x8, [x28, #88]
  423d3c:	cmp	x22, x8
  423d40:	b.ge	423bc8 <_obstack_memory_used@@Base+0xc6ac>  // b.tcont
  423d44:	add	w1, w22, #0x1
  423d48:	mov	x0, x28
  423d4c:	bl	4240e4 <_obstack_memory_used@@Base+0xcbc8>
  423d50:	cbnz	w0, 4240c0 <_obstack_memory_used@@Base+0xcba4>
  423d54:	ldr	x23, [x28, #8]
  423d58:	ldp	x12, x27, [sp, #48]
  423d5c:	b	423c18 <_obstack_memory_used@@Base+0xc6fc>
  423d60:	ldr	x0, [x23, #40]
  423d64:	mov	w19, #0x1                   	// #1
  423d68:	bfi	x19, x8, #1, #63
  423d6c:	lsl	x1, x19, #3
  423d70:	bl	402870 <realloc@plt>
  423d74:	cbz	x0, 4240b4 <_obstack_memory_used@@Base+0xcb98>
  423d78:	str	x19, [x23, #24]
  423d7c:	ldr	x19, [sp, #40]
  423d80:	str	x0, [x23, #40]
  423d84:	mov	w0, #0x1                   	// #1
  423d88:	mov	w1, #0x28                  	// #40
  423d8c:	bl	402840 <calloc@plt>
  423d90:	cbnz	x0, 423d00 <_obstack_memory_used@@Base+0xc7e4>
  423d94:	b	4240b4 <_obstack_memory_used@@Base+0xcb98>
  423d98:	ldr	x8, [x28, #200]
  423d9c:	ldr	x23, [sp]
  423da0:	cmp	x19, x8
  423da4:	stur	wzr, [x29, #-4]
  423da8:	b.lt	423dd8 <_obstack_memory_used@@Base+0xc8bc>  // b.tstop
  423dac:	b	423830 <_obstack_memory_used@@Base+0xc314>
  423db0:	mov	x8, x19
  423db4:	ldr	x23, [sp]
  423db8:	cmp	x19, x8
  423dbc:	stur	wzr, [x29, #-4]
  423dc0:	b.lt	423dd8 <_obstack_memory_used@@Base+0xc8bc>  // b.tstop
  423dc4:	b	423830 <_obstack_memory_used@@Base+0xc314>
  423dc8:	ldr	x8, [x28, #200]
  423dcc:	add	x19, x19, #0x1
  423dd0:	cmp	x19, x8
  423dd4:	b.ge	423830 <_obstack_memory_used@@Base+0xc314>  // b.tcont
  423dd8:	ldr	x8, [x28, #216]
  423ddc:	mov	w11, #0x28                  	// #40
  423de0:	mul	x9, x19, x11
  423de4:	ldur	x10, [x29, #-40]
  423de8:	ldr	x9, [x8, x9]
  423dec:	cmp	x9, x10
  423df0:	b.ne	423dc8 <_obstack_memory_used@@Base+0xc8ac>  // b.any
  423df4:	madd	x9, x19, x11, x8
  423df8:	ldr	x9, [x9, #8]
  423dfc:	ldur	x10, [x29, #-48]
  423e00:	cmp	x9, x10
  423e04:	b.ne	423dc8 <_obstack_memory_used@@Base+0xc8ac>  // b.any
  423e08:	ldr	x27, [sp, #32]
  423e0c:	str	x19, [sp, #40]
  423e10:	madd	x8, x19, x11, x8
  423e14:	ldp	x22, x19, [x8, #16]
  423e18:	ldr	x21, [x27, #48]
  423e1c:	cmp	x19, x22
  423e20:	b.ne	423e3c <_obstack_memory_used@@Base+0xc920>  // b.any
  423e24:	ldr	x8, [x27, #40]
  423e28:	ldur	x10, [x29, #-40]
  423e2c:	mov	w9, #0x18                  	// #24
  423e30:	madd	x8, x10, x9, x8
  423e34:	ldr	x8, [x8, #16]
  423e38:	b	423e48 <_obstack_memory_used@@Base+0xc92c>
  423e3c:	ldr	x8, [x27, #24]
  423e40:	ldur	x9, [x29, #-40]
  423e44:	add	x8, x8, x9, lsl #3
  423e48:	ldur	x9, [x29, #-48]
  423e4c:	ldr	x26, [x8]
  423e50:	add	x8, x19, x9
  423e54:	sub	x23, x8, x22
  423e58:	cmp	x23, #0x0
  423e5c:	b.le	423e98 <_obstack_memory_used@@Base+0xc97c>
  423e60:	ldr	x9, [x28, #88]
  423e64:	sub	x8, x23, #0x1
  423e68:	cmp	x9, x8
  423e6c:	b.eq	424018 <_obstack_memory_used@@Base+0xcafc>  // b.none
  423e70:	ldr	w9, [x28, #144]
  423e74:	cmp	w9, #0x2
  423e78:	b.lt	423ea0 <_obstack_memory_used@@Base+0xc984>  // b.tstop
  423e7c:	ldr	x9, [x28, #16]
  423e80:	ldr	w24, [x9, x8, lsl #2]
  423e84:	cmn	w24, #0x1
  423e88:	b.ne	423ec8 <_obstack_memory_used@@Base+0xc9ac>  // b.any
  423e8c:	sub	x8, x8, #0x1
  423e90:	cmn	x8, #0x1
  423e94:	b.ne	423e80 <_obstack_memory_used@@Base+0xc964>  // b.any
  423e98:	ldr	w25, [x28, #112]
  423e9c:	b	423ef8 <_obstack_memory_used@@Base+0xc9dc>
  423ea0:	ldr	x9, [x28, #8]
  423ea4:	ldrb	w8, [x9, x8]
  423ea8:	ldr	x9, [x28, #128]
  423eac:	lsr	x10, x8, #3
  423eb0:	and	x10, x10, #0x18
  423eb4:	ldr	x9, [x9, x10]
  423eb8:	lsr	x9, x9, x8
  423ebc:	tbz	w9, #0, 423eec <_obstack_memory_used@@Base+0xc9d0>
  423ec0:	mov	w25, #0x1                   	// #1
  423ec4:	b	423ef8 <_obstack_memory_used@@Base+0xc9dc>
  423ec8:	ldrb	w8, [x28, #142]
  423ecc:	cbnz	w8, 42402c <_obstack_memory_used@@Base+0xcb10>
  423ed0:	cmp	w24, #0xa
  423ed4:	b.ne	423ef4 <_obstack_memory_used@@Base+0xc9d8>  // b.any
  423ed8:	ldrb	w8, [x28, #141]
  423edc:	cmp	w8, #0x0
  423ee0:	cset	w8, ne  // ne = any
  423ee4:	lsl	w25, w8, #1
  423ee8:	b	423ef8 <_obstack_memory_used@@Base+0xc9dc>
  423eec:	cmp	w8, #0xa
  423ef0:	b.eq	423ed8 <_obstack_memory_used@@Base+0xc9bc>  // b.none
  423ef4:	mov	w25, wzr
  423ef8:	ldr	x8, [x28, #184]
  423efc:	ldur	x9, [x29, #-48]
  423f00:	mov	w10, #0x18                  	// #24
  423f04:	madd	x24, x26, x10, x21
  423f08:	ldr	x9, [x8, x9, lsl #3]
  423f0c:	ldr	x8, [x8, x23, lsl #3]
  423f10:	cbz	x9, 423f74 <_obstack_memory_used@@Base+0xca58>
  423f14:	ldr	x20, [x9, #16]
  423f18:	cbz	x8, 423f7c <_obstack_memory_used@@Base+0xca60>
  423f1c:	ldr	x1, [x8, #80]
  423f20:	sub	x0, x29, #0x20
  423f24:	mov	x2, x24
  423f28:	bl	4244e0 <_obstack_memory_used@@Base+0xcfc4>
  423f2c:	stur	w0, [x29, #-4]
  423f30:	cbnz	w0, 4240cc <_obstack_memory_used@@Base+0xcbb0>
  423f34:	ldr	x1, [sp, #32]
  423f38:	sub	x0, x29, #0x4
  423f3c:	sub	x2, x29, #0x20
  423f40:	mov	w3, w25
  423f44:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  423f48:	ldr	x8, [x28, #184]
  423f4c:	lsl	x21, x23, #3
  423f50:	str	x0, [x8, x21]
  423f54:	ldur	x0, [x29, #-16]
  423f58:	bl	402a10 <free@plt>
  423f5c:	ldr	x8, [x28, #184]
  423f60:	ldr	x9, [x8, x21]
  423f64:	cbnz	x9, 423fc4 <_obstack_memory_used@@Base+0xcaa8>
  423f68:	ldur	w27, [x29, #-4]
  423f6c:	cbz	w27, 423fc4 <_obstack_memory_used@@Base+0xcaa8>
  423f70:	b	424090 <_obstack_memory_used@@Base+0xcb74>
  423f74:	mov	x20, xzr
  423f78:	cbnz	x8, 423f1c <_obstack_memory_used@@Base+0xca00>
  423f7c:	sub	x0, x29, #0x4
  423f80:	mov	x1, x27
  423f84:	mov	x2, x24
  423f88:	mov	w3, w25
  423f8c:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  423f90:	ldr	x8, [x28, #184]
  423f94:	lsl	x9, x23, #3
  423f98:	str	x0, [x8, x9]
  423f9c:	ldr	x8, [x28, #184]
  423fa0:	ldr	x9, [x8, x9]
  423fa4:	cbnz	x9, 423fc4 <_obstack_memory_used@@Base+0xcaa8>
  423fa8:	ldur	w27, [x29, #-4]
  423fac:	ldr	x23, [sp]
  423fb0:	cbnz	w27, 424090 <_obstack_memory_used@@Base+0xcb74>
  423fb4:	cmp	x19, x22
  423fb8:	ldr	x19, [sp, #40]
  423fbc:	b.ne	423dc8 <_obstack_memory_used@@Base+0xc8ac>  // b.any
  423fc0:	b	423fd4 <_obstack_memory_used@@Base+0xcab8>
  423fc4:	ldr	x23, [sp]
  423fc8:	cmp	x19, x22
  423fcc:	ldr	x19, [sp, #40]
  423fd0:	b.ne	423dc8 <_obstack_memory_used@@Base+0xc8ac>  // b.any
  423fd4:	ldur	x9, [x29, #-48]
  423fd8:	ldr	x8, [x8, x9, lsl #3]
  423fdc:	ldr	x8, [x8, #16]
  423fe0:	cmp	x8, x20
  423fe4:	b.le	423dc8 <_obstack_memory_used@@Base+0xc8ac>
  423fe8:	ldur	x2, [x29, #-48]
  423fec:	mov	x0, x28
  423ff0:	mov	x1, x24
  423ff4:	bl	4236d0 <_obstack_memory_used@@Base+0xc1b4>
  423ff8:	stur	w0, [x29, #-4]
  423ffc:	cbnz	w0, 4240dc <_obstack_memory_used@@Base+0xcbc0>
  424000:	mov	x0, x28
  424004:	mov	x1, x24
  424008:	bl	4237e0 <_obstack_memory_used@@Base+0xc2c4>
  42400c:	stur	w0, [x29, #-4]
  424010:	cbz	w0, 423dc8 <_obstack_memory_used@@Base+0xc8ac>
  424014:	b	4240dc <_obstack_memory_used@@Base+0xcbc0>
  424018:	ldr	w8, [x28, #160]
  42401c:	mov	w9, #0xa                   	// #10
  424020:	and	w8, w8, #0x2
  424024:	eor	w25, w8, w9
  424028:	b	423ef8 <_obstack_memory_used@@Base+0xc9dc>
  42402c:	mov	w0, w24
  424030:	bl	402b10 <iswalnum@plt>
  424034:	cmp	w24, #0x5f
  424038:	mov	w25, #0x1                   	// #1
  42403c:	b.eq	423ef8 <_obstack_memory_used@@Base+0xc9dc>  // b.none
  424040:	cbz	w0, 423ed0 <_obstack_memory_used@@Base+0xc9b4>
  424044:	b	423ef8 <_obstack_memory_used@@Base+0xc9dc>
  424048:	ldr	w8, [x28, #160]
  42404c:	mov	w9, #0xa                   	// #10
  424050:	and	w8, w8, #0x2
  424054:	eor	w8, w8, w9
  424058:	tst	w8, #0x1
  42405c:	cset	w9, eq  // eq = none
  424060:	tbnz	w21, #10, 423938 <_obstack_memory_used@@Base+0xc41c>
  424064:	b	42393c <_obstack_memory_used@@Base+0xc420>
  424068:	mov	w0, w24
  42406c:	bl	402b10 <iswalnum@plt>
  424070:	mov	w9, wzr
  424074:	cmp	w24, #0x5f
  424078:	mov	w8, #0x1                   	// #1
  42407c:	b.eq	42393c <_obstack_memory_used@@Base+0xc420>  // b.none
  424080:	cbz	w0, 4238f8 <_obstack_memory_used@@Base+0xc3dc>
  424084:	b	42393c <_obstack_memory_used@@Base+0xc420>
  424088:	mov	w27, wzr
  42408c:	stur	wzr, [x29, #-4]
  424090:	mov	w0, w27
  424094:	ldp	x20, x19, [sp, #192]
  424098:	ldp	x22, x21, [sp, #176]
  42409c:	ldp	x24, x23, [sp, #160]
  4240a0:	ldp	x26, x25, [sp, #144]
  4240a4:	ldp	x28, x27, [sp, #128]
  4240a8:	ldp	x29, x30, [sp, #112]
  4240ac:	add	sp, sp, #0xd0
  4240b0:	ret
  4240b4:	mov	w27, #0xc                   	// #12
  4240b8:	stur	w27, [x29, #-4]
  4240bc:	b	424090 <_obstack_memory_used@@Base+0xcb74>
  4240c0:	mov	w27, w0
  4240c4:	stur	w27, [x29, #-4]
  4240c8:	b	424090 <_obstack_memory_used@@Base+0xcb74>
  4240cc:	mov	w27, w0
  4240d0:	ldur	x0, [x29, #-16]
  4240d4:	bl	402a10 <free@plt>
  4240d8:	b	424090 <_obstack_memory_used@@Base+0xcb74>
  4240dc:	mov	w27, w0
  4240e0:	b	424090 <_obstack_memory_used@@Base+0xcb74>
  4240e4:	stp	x29, x30, [sp, #-48]!
  4240e8:	stp	x20, x19, [sp, #32]
  4240ec:	ldr	x8, [x0, #64]
  4240f0:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  4240f4:	str	x21, [sp, #16]
  4240f8:	mov	x29, sp
  4240fc:	cmp	x8, x9
  424100:	b.hi	4242c8 <_obstack_memory_used@@Base+0xcdac>  // b.pmore
  424104:	ldr	x9, [x0, #88]
  424108:	lsl	x8, x8, #1
  42410c:	ldr	w11, [x0, #144]
  424110:	sxtw	x10, w1
  424114:	cmp	x9, x8
  424118:	csel	x8, x9, x8, lt  // lt = tstop
  42411c:	cmp	x8, x10
  424120:	mov	x19, x0
  424124:	csel	x20, x8, x10, gt
  424128:	cmp	w11, #0x2
  42412c:	b.lt	424168 <_obstack_memory_used@@Base+0xcc4c>  // b.tstop
  424130:	lsr	x8, x20, #61
  424134:	cbnz	x8, 4242c8 <_obstack_memory_used@@Base+0xcdac>
  424138:	ldr	x0, [x19, #16]
  42413c:	lsl	x1, x20, #2
  424140:	bl	402870 <realloc@plt>
  424144:	cbz	x0, 4242c8 <_obstack_memory_used@@Base+0xcdac>
  424148:	mov	x8, x0
  42414c:	ldr	x0, [x19, #24]
  424150:	str	x8, [x19, #16]
  424154:	cbz	x0, 424168 <_obstack_memory_used@@Base+0xcc4c>
  424158:	lsl	x1, x20, #3
  42415c:	bl	402870 <realloc@plt>
  424160:	cbz	x0, 4242c8 <_obstack_memory_used@@Base+0xcdac>
  424164:	str	x0, [x19, #24]
  424168:	ldrb	w8, [x19, #139]
  42416c:	cbz	w8, 424184 <_obstack_memory_used@@Base+0xcc68>
  424170:	ldr	x0, [x19, #8]
  424174:	mov	x1, x20
  424178:	bl	402870 <realloc@plt>
  42417c:	cbz	x0, 4242c8 <_obstack_memory_used@@Base+0xcdac>
  424180:	str	x0, [x19, #8]
  424184:	ldr	x0, [x19, #184]
  424188:	str	x20, [x19, #64]
  42418c:	cbz	x0, 4241a4 <_obstack_memory_used@@Base+0xcc88>
  424190:	lsl	x8, x20, #3
  424194:	add	x1, x8, #0x8
  424198:	bl	402870 <realloc@plt>
  42419c:	cbz	x0, 4242c8 <_obstack_memory_used@@Base+0xcdac>
  4241a0:	str	x0, [x19, #184]
  4241a4:	ldr	w8, [x19, #144]
  4241a8:	ldrb	w9, [x19, #136]
  4241ac:	cmp	w8, #0x2
  4241b0:	cbz	w9, 4241c8 <_obstack_memory_used@@Base+0xccac>
  4241b4:	b.lt	4241d8 <_obstack_memory_used@@Base+0xccbc>  // b.tstop
  4241b8:	mov	x0, x19
  4241bc:	bl	41c040 <_obstack_memory_used@@Base+0x4b24>
  4241c0:	cbz	w0, 4242b4 <_obstack_memory_used@@Base+0xcd98>
  4241c4:	b	4242b8 <_obstack_memory_used@@Base+0xcd9c>
  4241c8:	b.lt	424240 <_obstack_memory_used@@Base+0xcd24>  // b.tstop
  4241cc:	mov	x0, x19
  4241d0:	bl	41c708 <_obstack_memory_used@@Base+0x51ec>
  4241d4:	b	4242b4 <_obstack_memory_used@@Base+0xcd98>
  4241d8:	ldr	x8, [x19, #64]
  4241dc:	ldr	x9, [x19, #88]
  4241e0:	ldr	x20, [x19, #48]
  4241e4:	cmp	x8, x9
  4241e8:	csel	x21, x9, x8, gt
  4241ec:	cmp	x20, x21
  4241f0:	b.ge	424238 <_obstack_memory_used@@Base+0xcd1c>  // b.tcont
  4241f4:	bl	402880 <__ctype_toupper_loc@plt>
  4241f8:	ldr	x8, [x19]
  4241fc:	ldr	x9, [x19, #40]
  424200:	add	x8, x8, x9
  424204:	ldr	x9, [x19, #120]
  424208:	ldrb	w8, [x8, x20]
  42420c:	cbnz	x9, 424230 <_obstack_memory_used@@Base+0xcd14>
  424210:	ldr	x9, [x0]
  424214:	ldr	x10, [x19, #8]
  424218:	ldr	w8, [x9, w8, uxtw #2]
  42421c:	strb	w8, [x10, x20]
  424220:	add	x20, x20, #0x1
  424224:	cmp	x20, x21
  424228:	b.lt	4241f8 <_obstack_memory_used@@Base+0xccdc>  // b.tstop
  42422c:	b	424238 <_obstack_memory_used@@Base+0xcd1c>
  424230:	ldrb	w8, [x9, x8]
  424234:	b	424210 <_obstack_memory_used@@Base+0xccf4>
  424238:	stp	x20, x20, [x19, #48]
  42423c:	b	4242b4 <_obstack_memory_used@@Base+0xcd98>
  424240:	ldr	x10, [x19, #120]
  424244:	cbz	x10, 4242b4 <_obstack_memory_used@@Base+0xcd98>
  424248:	ldr	x9, [x19, #64]
  42424c:	ldr	x11, [x19, #88]
  424250:	ldr	x8, [x19, #48]
  424254:	cmp	x9, x11
  424258:	csel	x9, x11, x9, gt
  42425c:	cmp	x8, x9
  424260:	b.ge	4242b0 <_obstack_memory_used@@Base+0xcd94>  // b.tcont
  424264:	ldr	x11, [x19, #40]
  424268:	ldp	x12, x13, [x19]
  42426c:	add	x11, x11, x8
  424270:	ldrb	w11, [x12, x11]
  424274:	ldrb	w10, [x10, x11]
  424278:	strb	w10, [x13, x8]
  42427c:	add	x8, x8, #0x1
  424280:	cmp	x8, x9
  424284:	b.ge	4242b0 <_obstack_memory_used@@Base+0xcd94>  // b.tcont
  424288:	ldr	x10, [x19, #40]
  42428c:	ldp	x11, x13, [x19]
  424290:	ldr	x12, [x19, #120]
  424294:	add	x10, x11, x10
  424298:	ldrb	w10, [x10, x8]
  42429c:	ldrb	w10, [x12, x10]
  4242a0:	strb	w10, [x13, x8]
  4242a4:	add	x8, x8, #0x1
  4242a8:	cmp	x8, x9
  4242ac:	b.lt	424288 <_obstack_memory_used@@Base+0xcd6c>  // b.tstop
  4242b0:	stp	x8, x8, [x19, #48]
  4242b4:	mov	w0, wzr
  4242b8:	ldp	x20, x19, [sp, #32]
  4242bc:	ldr	x21, [sp, #16]
  4242c0:	ldp	x29, x30, [sp], #48
  4242c4:	ret
  4242c8:	mov	w0, #0xc                   	// #12
  4242cc:	ldp	x20, x19, [sp, #32]
  4242d0:	ldr	x21, [sp, #16]
  4242d4:	ldp	x29, x30, [sp], #48
  4242d8:	ret
  4242dc:	sub	sp, sp, #0x60
  4242e0:	stp	x29, x30, [sp, #32]
  4242e4:	stp	x24, x23, [sp, #48]
  4242e8:	stp	x22, x21, [sp, #64]
  4242ec:	stp	x20, x19, [sp, #80]
  4242f0:	ldr	x20, [x1, #72]
  4242f4:	ldp	x8, x9, [x1, #184]
  4242f8:	ldr	x22, [x1, #152]
  4242fc:	mov	x24, x2
  424300:	mov	x19, x1
  424304:	cmp	x20, x9
  424308:	mov	x21, x0
  42430c:	add	x29, sp, #0x20
  424310:	b.le	424320 <_obstack_memory_used@@Base+0xce04>
  424314:	str	x24, [x8, x20, lsl #3]
  424318:	str	x20, [x19, #192]
  42431c:	b	424440 <_obstack_memory_used@@Base+0xcf24>
  424320:	ldr	x9, [x8, x20, lsl #3]
  424324:	cbz	x9, 424358 <_obstack_memory_used@@Base+0xce3c>
  424328:	ldr	x2, [x9, #80]
  42432c:	cbz	x24, 424360 <_obstack_memory_used@@Base+0xce44>
  424330:	ldr	x23, [x24, #80]
  424334:	mov	x0, sp
  424338:	mov	x1, x23
  42433c:	bl	4244e0 <_obstack_memory_used@@Base+0xcfc4>
  424340:	str	w0, [x21]
  424344:	cbnz	w0, 4244a8 <_obstack_memory_used@@Base+0xcf8c>
  424348:	ldr	x8, [x19, #72]
  42434c:	cmp	x8, #0x0
  424350:	b.gt	424380 <_obstack_memory_used@@Base+0xce64>
  424354:	b	4243b8 <_obstack_memory_used@@Base+0xce9c>
  424358:	str	x24, [x8, x20, lsl #3]
  42435c:	b	424440 <_obstack_memory_used@@Base+0xcf24>
  424360:	ldr	x8, [x2, #16]
  424364:	ldr	q0, [x2]
  424368:	mov	x23, xzr
  42436c:	str	x8, [sp, #16]
  424370:	mov	x8, x20
  424374:	str	q0, [sp]
  424378:	cmp	x8, #0x0
  42437c:	b.le	4243b8 <_obstack_memory_used@@Base+0xce9c>
  424380:	ldr	x9, [x19, #88]
  424384:	sub	x8, x8, #0x1
  424388:	cmp	x9, x8
  42438c:	b.eq	4244b0 <_obstack_memory_used@@Base+0xcf94>  // b.none
  424390:	ldr	w9, [x19, #144]
  424394:	cmp	w9, #0x2
  424398:	b.lt	4243c0 <_obstack_memory_used@@Base+0xcea4>  // b.tstop
  42439c:	ldr	x9, [x19, #16]
  4243a0:	ldr	w24, [x9, x8, lsl #2]
  4243a4:	cmn	w24, #0x1
  4243a8:	b.ne	4243e8 <_obstack_memory_used@@Base+0xcecc>  // b.any
  4243ac:	sub	x8, x8, #0x1
  4243b0:	cmn	x8, #0x1
  4243b4:	b.ne	4243a0 <_obstack_memory_used@@Base+0xce84>  // b.any
  4243b8:	ldr	w3, [x19, #112]
  4243bc:	b	424418 <_obstack_memory_used@@Base+0xcefc>
  4243c0:	ldr	x9, [x19, #8]
  4243c4:	ldrb	w8, [x9, x8]
  4243c8:	ldr	x9, [x19, #128]
  4243cc:	lsr	x10, x8, #3
  4243d0:	and	x10, x10, #0x18
  4243d4:	ldr	x9, [x9, x10]
  4243d8:	lsr	x9, x9, x8
  4243dc:	tbz	w9, #0, 42440c <_obstack_memory_used@@Base+0xcef0>
  4243e0:	mov	w3, #0x1                   	// #1
  4243e4:	b	424418 <_obstack_memory_used@@Base+0xcefc>
  4243e8:	ldrb	w8, [x19, #142]
  4243ec:	cbnz	w8, 4244c4 <_obstack_memory_used@@Base+0xcfa8>
  4243f0:	cmp	w24, #0xa
  4243f4:	b.ne	424414 <_obstack_memory_used@@Base+0xcef8>  // b.any
  4243f8:	ldrb	w8, [x19, #141]
  4243fc:	cmp	w8, #0x0
  424400:	cset	w8, ne  // ne = any
  424404:	lsl	w3, w8, #1
  424408:	b	424418 <_obstack_memory_used@@Base+0xcefc>
  42440c:	cmp	w8, #0xa
  424410:	b.eq	4243f8 <_obstack_memory_used@@Base+0xcedc>  // b.none
  424414:	mov	w3, wzr
  424418:	mov	x2, sp
  42441c:	mov	x0, x21
  424420:	mov	x1, x22
  424424:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  424428:	ldr	x8, [x19, #184]
  42442c:	mov	x24, x0
  424430:	str	x0, [x8, x20, lsl #3]
  424434:	cbz	x23, 424440 <_obstack_memory_used@@Base+0xcf24>
  424438:	ldr	x0, [sp, #16]
  42443c:	bl	402a10 <free@plt>
  424440:	cbz	x24, 42448c <_obstack_memory_used@@Base+0xcf70>
  424444:	ldr	x8, [x22, #152]
  424448:	cbz	x8, 42448c <_obstack_memory_used@@Base+0xcf70>
  42444c:	add	x22, x24, #0x8
  424450:	mov	x0, x19
  424454:	mov	x1, x22
  424458:	mov	x2, x20
  42445c:	bl	4236d0 <_obstack_memory_used@@Base+0xc1b4>
  424460:	str	w0, [x21]
  424464:	cbnz	w0, 4244a8 <_obstack_memory_used@@Base+0xcf8c>
  424468:	ldrb	w8, [x24, #104]
  42446c:	tbz	w8, #6, 42448c <_obstack_memory_used@@Base+0xcf70>
  424470:	mov	x0, x19
  424474:	mov	x1, x22
  424478:	bl	4237e0 <_obstack_memory_used@@Base+0xc2c4>
  42447c:	str	w0, [x21]
  424480:	cbnz	w0, 4244a8 <_obstack_memory_used@@Base+0xcf8c>
  424484:	ldr	x8, [x19, #184]
  424488:	ldr	x24, [x8, x20, lsl #3]
  42448c:	mov	x0, x24
  424490:	ldp	x20, x19, [sp, #80]
  424494:	ldp	x22, x21, [sp, #64]
  424498:	ldp	x24, x23, [sp, #48]
  42449c:	ldp	x29, x30, [sp, #32]
  4244a0:	add	sp, sp, #0x60
  4244a4:	ret
  4244a8:	mov	x24, xzr
  4244ac:	b	42448c <_obstack_memory_used@@Base+0xcf70>
  4244b0:	ldr	w8, [x19, #160]
  4244b4:	mov	w9, #0xa                   	// #10
  4244b8:	and	w8, w8, #0x2
  4244bc:	eor	w3, w8, w9
  4244c0:	b	424418 <_obstack_memory_used@@Base+0xcefc>
  4244c4:	mov	w0, w24
  4244c8:	bl	402b10 <iswalnum@plt>
  4244cc:	cmp	w24, #0x5f
  4244d0:	mov	w3, #0x1                   	// #1
  4244d4:	b.eq	424418 <_obstack_memory_used@@Base+0xcefc>  // b.none
  4244d8:	cbz	w0, 4243f0 <_obstack_memory_used@@Base+0xced4>
  4244dc:	b	424418 <_obstack_memory_used@@Base+0xcefc>
  4244e0:	stp	x29, x30, [sp, #-80]!
  4244e4:	stp	x20, x19, [sp, #64]
  4244e8:	mov	x20, x2
  4244ec:	mov	x19, x0
  4244f0:	stp	x26, x25, [sp, #16]
  4244f4:	stp	x24, x23, [sp, #32]
  4244f8:	stp	x22, x21, [sp, #48]
  4244fc:	mov	x29, sp
  424500:	cbz	x1, 42462c <_obstack_memory_used@@Base+0xd110>
  424504:	ldr	x24, [x1, #8]
  424508:	mov	x21, x1
  42450c:	cbz	x20, 4245f4 <_obstack_memory_used@@Base+0xd0d8>
  424510:	cmp	x24, #0x1
  424514:	b.lt	4245f4 <_obstack_memory_used@@Base+0xd0d8>  // b.tstop
  424518:	ldr	x23, [x20, #8]
  42451c:	cmp	x23, #0x1
  424520:	b.lt	4245f4 <_obstack_memory_used@@Base+0xd0d8>  // b.tstop
  424524:	add	x8, x23, x24
  424528:	lsl	x0, x8, #3
  42452c:	str	x8, [x19]
  424530:	bl	402730 <malloc@plt>
  424534:	str	x0, [x19, #16]
  424538:	cbz	x0, 4246cc <_obstack_memory_used@@Base+0xd1b0>
  42453c:	mov	x25, xzr
  424540:	mov	x22, xzr
  424544:	mov	x11, xzr
  424548:	mov	x9, xzr
  42454c:	mov	w10, #0x1                   	// #1
  424550:	add	x8, x0, x22, lsl #3
  424554:	mov	x26, x11
  424558:	tbz	w10, #0, 424684 <_obstack_memory_used@@Base+0xd168>
  42455c:	ldr	x10, [x21, #16]
  424560:	ldr	x11, [x20, #16]
  424564:	ldr	x13, [x10, x9, lsl #3]
  424568:	ldr	x12, [x11, x26, lsl #3]
  42456c:	cmp	x13, x12
  424570:	b.le	424594 <_obstack_memory_used@@Base+0xd078>
  424574:	add	x26, x26, #0x1
  424578:	cmp	x23, x26
  42457c:	add	x22, x22, #0x1
  424580:	cset	w10, gt
  424584:	cmp	x24, x9
  424588:	str	x12, [x8], #8
  42458c:	b.gt	424558 <_obstack_memory_used@@Base+0xd03c>
  424590:	b	4245c8 <_obstack_memory_used@@Base+0xd0ac>
  424594:	str	x13, [x8]
  424598:	ldr	x23, [x20, #8]
  42459c:	ldr	x24, [x21, #8]
  4245a0:	cinc	x11, x26, eq  // eq = none
  4245a4:	add	x9, x9, #0x1
  4245a8:	cmp	x23, x11
  4245ac:	add	x22, x22, #0x1
  4245b0:	cset	w10, gt
  4245b4:	cmp	x24, x9
  4245b8:	sub	x25, x25, #0x1
  4245bc:	b.gt	424550 <_obstack_memory_used@@Base+0xd034>
  4245c0:	cmp	x13, x12
  4245c4:	cinc	x26, x26, eq  // eq = none
  4245c8:	cbz	w10, 4246a8 <_obstack_memory_used@@Base+0xd18c>
  4245cc:	ldr	x8, [x20, #16]
  4245d0:	sub	x9, x23, x26
  4245d4:	add	x0, x0, x22, lsl #3
  4245d8:	lsl	x2, x9, #3
  4245dc:	add	x1, x8, x26, lsl #3
  4245e0:	bl	402580 <memcpy@plt>
  4245e4:	ldr	x8, [x20, #8]
  4245e8:	sub	x9, x22, x26
  4245ec:	add	x22, x9, x8
  4245f0:	b	4246a8 <_obstack_memory_used@@Base+0xd18c>
  4245f4:	cmp	x24, #0x1
  4245f8:	b.lt	42462c <_obstack_memory_used@@Base+0xd110>  // b.tstop
  4245fc:	str	x24, [x19, #8]
  424600:	ldr	x20, [x21, #8]
  424604:	cmp	x20, #0x1
  424608:	b.lt	424674 <_obstack_memory_used@@Base+0xd158>  // b.tstop
  42460c:	lsl	x0, x24, #3
  424610:	str	x24, [x19]
  424614:	bl	402730 <malloc@plt>
  424618:	str	x0, [x19, #16]
  42461c:	cbz	x0, 4246c8 <_obstack_memory_used@@Base+0xd1ac>
  424620:	ldr	x1, [x21, #16]
  424624:	lsl	x2, x20, #3
  424628:	b	424668 <_obstack_memory_used@@Base+0xd14c>
  42462c:	cbz	x20, 424674 <_obstack_memory_used@@Base+0xd158>
  424630:	ldr	x8, [x20, #8]
  424634:	cmp	x8, #0x1
  424638:	b.lt	424674 <_obstack_memory_used@@Base+0xd158>  // b.tstop
  42463c:	str	x8, [x19, #8]
  424640:	ldr	x21, [x20, #8]
  424644:	cmp	x21, #0x1
  424648:	b.lt	424674 <_obstack_memory_used@@Base+0xd158>  // b.tstop
  42464c:	lsl	x0, x8, #3
  424650:	str	x8, [x19]
  424654:	bl	402730 <malloc@plt>
  424658:	str	x0, [x19, #16]
  42465c:	cbz	x0, 4246c8 <_obstack_memory_used@@Base+0xd1ac>
  424660:	ldr	x1, [x20, #16]
  424664:	lsl	x2, x21, #3
  424668:	bl	402580 <memcpy@plt>
  42466c:	mov	w0, wzr
  424670:	b	4246b0 <_obstack_memory_used@@Base+0xd194>
  424674:	mov	w0, wzr
  424678:	stp	xzr, xzr, [x19]
  42467c:	str	xzr, [x19, #16]
  424680:	b	4246b0 <_obstack_memory_used@@Base+0xd194>
  424684:	ldr	x10, [x21, #16]
  424688:	sub	x11, x24, x9
  42468c:	lsl	x2, x11, #3
  424690:	mov	x0, x8
  424694:	add	x1, x10, x9, lsl #3
  424698:	bl	402580 <memcpy@plt>
  42469c:	ldr	x8, [x21, #8]
  4246a0:	add	x8, x8, x25
  4246a4:	add	x22, x8, x22
  4246a8:	mov	w0, wzr
  4246ac:	str	x22, [x19, #8]
  4246b0:	ldp	x20, x19, [sp, #64]
  4246b4:	ldp	x22, x21, [sp, #48]
  4246b8:	ldp	x24, x23, [sp, #32]
  4246bc:	ldp	x26, x25, [sp, #16]
  4246c0:	ldp	x29, x30, [sp], #80
  4246c4:	ret
  4246c8:	stp	xzr, xzr, [x19]
  4246cc:	mov	w0, #0xc                   	// #12
  4246d0:	b	4246b0 <_obstack_memory_used@@Base+0xd194>
  4246d4:	stp	x29, x30, [sp, #-80]!
  4246d8:	stp	x26, x25, [sp, #16]
  4246dc:	stp	x24, x23, [sp, #32]
  4246e0:	stp	x22, x21, [sp, #48]
  4246e4:	stp	x20, x19, [sp, #64]
  4246e8:	mov	x22, x2
  4246ec:	mov	x23, x3
  4246f0:	ldr	x2, [x2]
  4246f4:	ldr	x3, [x22, #8]
  4246f8:	mov	x20, x4
  4246fc:	mov	x21, x1
  424700:	add	x1, x22, #0x10
  424704:	mov	w6, #0x8                   	// #8
  424708:	mov	x4, x23
  42470c:	mov	x5, x20
  424710:	mov	x29, sp
  424714:	mov	x19, x0
  424718:	bl	42488c <_obstack_memory_used@@Base+0xd370>
  42471c:	cbz	w0, 424738 <_obstack_memory_used@@Base+0xd21c>
  424720:	ldp	x20, x19, [sp, #64]
  424724:	ldp	x22, x21, [sp, #48]
  424728:	ldp	x24, x23, [sp, #32]
  42472c:	ldp	x26, x25, [sp, #16]
  424730:	ldp	x29, x30, [sp], #80
  424734:	ret
  424738:	ldp	x8, x9, [x19, #200]
  42473c:	ldr	x25, [x21]
  424740:	ldr	x24, [x22, #8]
  424744:	cmp	x8, x9
  424748:	b.lt	42478c <_obstack_memory_used@@Base+0xd270>  // b.tstop
  42474c:	ldr	x0, [x19, #216]
  424750:	add	x8, x9, x9, lsl #2
  424754:	lsl	x1, x8, #4
  424758:	bl	402870 <realloc@plt>
  42475c:	cbz	x0, 42487c <_obstack_memory_used@@Base+0xd360>
  424760:	ldp	x8, x26, [x19, #200]
  424764:	mov	w9, #0x28                  	// #40
  424768:	str	x0, [x19, #216]
  42476c:	mov	w1, wzr
  424770:	madd	x0, x8, x9, x0
  424774:	add	x8, x26, x26, lsl #2
  424778:	lsl	x2, x8, #3
  42477c:	bl	402800 <memset@plt>
  424780:	ldr	x8, [x19, #200]
  424784:	lsl	x9, x26, #1
  424788:	str	x9, [x19, #208]
  42478c:	ldr	x9, [x19, #216]
  424790:	subs	x10, x8, #0x1
  424794:	b.lt	4247bc <_obstack_memory_used@@Base+0xd2a0>  // b.tstop
  424798:	mov	w11, #0x28                  	// #40
  42479c:	madd	x11, x10, x11, x9
  4247a0:	ldr	x11, [x11, #8]
  4247a4:	cmp	x11, x20
  4247a8:	b.ne	4247bc <_obstack_memory_used@@Base+0xd2a0>  // b.any
  4247ac:	mov	w11, #0x28                  	// #40
  4247b0:	madd	x10, x10, x11, x9
  4247b4:	mov	w11, #0x1                   	// #1
  4247b8:	strb	w11, [x10, #32]
  4247bc:	mov	w11, #0x28                  	// #40
  4247c0:	subs	x10, x24, x25
  4247c4:	add	x12, x8, #0x1
  4247c8:	madd	x8, x8, x11, x9
  4247cc:	csetm	w9, eq  // eq = none
  4247d0:	stp	x23, x20, [x8]
  4247d4:	stp	x25, x24, [x8, #16]
  4247d8:	strh	w9, [x8, #34]
  4247dc:	str	x12, [x19, #200]
  4247e0:	strb	wzr, [x8, #32]
  4247e4:	ldrsw	x8, [x19, #224]
  4247e8:	cmp	x10, x8
  4247ec:	b.le	4247f4 <_obstack_memory_used@@Base+0xd2d8>
  4247f0:	str	w10, [x19, #224]
  4247f4:	ldr	x9, [x22, #8]
  4247f8:	ldr	x10, [x21]
  4247fc:	ldr	x8, [x19, #64]
  424800:	ldr	x21, [x19, #192]
  424804:	add	x9, x9, x20
  424808:	sub	x20, x9, x10
  42480c:	cmp	x8, x20
  424810:	b.gt	424820 <_obstack_memory_used@@Base+0xd304>
  424814:	ldr	x9, [x19, #88]
  424818:	cmp	x8, x9
  42481c:	b.lt	424838 <_obstack_memory_used@@Base+0xd31c>  // b.tstop
  424820:	ldr	x8, [x19, #48]
  424824:	cmp	x8, x20
  424828:	b.gt	424848 <_obstack_memory_used@@Base+0xd32c>
  42482c:	ldr	x9, [x19, #88]
  424830:	cmp	x8, x9
  424834:	b.ge	424848 <_obstack_memory_used@@Base+0xd32c>  // b.tcont
  424838:	add	w1, w20, #0x1
  42483c:	mov	x0, x19
  424840:	bl	4240e4 <_obstack_memory_used@@Base+0xcbc8>
  424844:	cbnz	w0, 424720 <_obstack_memory_used@@Base+0xd204>
  424848:	subs	x8, x20, x21
  42484c:	b.le	424874 <_obstack_memory_used@@Base+0xd358>
  424850:	ldr	x9, [x19, #184]
  424854:	lsl	x2, x8, #3
  424858:	mov	w1, wzr
  42485c:	add	x9, x9, x21, lsl #3
  424860:	add	x0, x9, #0x8
  424864:	bl	402800 <memset@plt>
  424868:	mov	w0, wzr
  42486c:	str	x20, [x19, #192]
  424870:	b	424720 <_obstack_memory_used@@Base+0xd204>
  424874:	mov	w0, wzr
  424878:	b	424720 <_obstack_memory_used@@Base+0xd204>
  42487c:	ldr	x0, [x19, #216]
  424880:	bl	402a10 <free@plt>
  424884:	mov	w0, #0xc                   	// #12
  424888:	b	424720 <_obstack_memory_used@@Base+0xd204>
  42488c:	sub	sp, sp, #0x100
  424890:	stp	x29, x30, [sp, #160]
  424894:	stp	x28, x27, [sp, #176]
  424898:	stp	x26, x25, [sp, #192]
  42489c:	stp	x24, x23, [sp, #208]
  4248a0:	stp	x22, x21, [sp, #224]
  4248a4:	stp	x20, x19, [sp, #240]
  4248a8:	ldr	x8, [x0, #152]
  4248ac:	add	x29, sp, #0xa0
  4248b0:	stur	wzr, [x29, #-36]
  4248b4:	lsl	x10, x2, #4
  4248b8:	str	x8, [sp, #56]
  4248bc:	ldr	x8, [x8]
  4248c0:	ldrsw	x9, [x0, #224]
  4248c4:	ldr	x21, [x1, #8]
  4248c8:	mov	x24, x4
  4248cc:	ldr	x8, [x8, x10]
  4248d0:	mov	x19, x2
  4248d4:	mov	x25, x1
  4248d8:	mov	x20, x0
  4248dc:	stp	x5, x8, [sp, #40]
  4248e0:	add	x8, x9, x5
  4248e4:	cmp	x21, x8
  4248e8:	mov	x27, x3
  4248ec:	str	w6, [sp, #36]
  4248f0:	b.le	425080 <_obstack_memory_used@@Base+0xdb64>
  4248f4:	ldr	x8, [x25]
  4248f8:	ldr	x28, [x20, #184]
  4248fc:	ldr	x9, [x25, #16]
  424900:	ldr	x21, [x20, #72]
  424904:	cmp	x8, #0x0
  424908:	csel	x26, x27, x8, eq  // eq = none
  42490c:	cmp	x26, #0x0
  424910:	str	x24, [sp]
  424914:	str	x9, [x20, #184]
  424918:	str	x26, [x20, #72]
  42491c:	b.le	4250c8 <_obstack_memory_used@@Base+0xdbac>
  424920:	ldr	x9, [x20, #88]
  424924:	ldr	x24, [sp, #40]
  424928:	sub	x8, x26, #0x1
  42492c:	cmp	x9, x8
  424930:	b.eq	4250d4 <_obstack_memory_used@@Base+0xdbb8>  // b.none
  424934:	ldr	w9, [x20, #144]
  424938:	cmp	w9, #0x2
  42493c:	b.lt	424964 <_obstack_memory_used@@Base+0xd448>  // b.tstop
  424940:	ldr	x9, [x20, #16]
  424944:	ldr	w23, [x9, x8, lsl #2]
  424948:	cmn	w23, #0x1
  42494c:	b.ne	42498c <_obstack_memory_used@@Base+0xd470>  // b.any
  424950:	sub	x8, x8, #0x1
  424954:	cmn	x8, #0x1
  424958:	b.ne	424944 <_obstack_memory_used@@Base+0xd428>  // b.any
  42495c:	ldr	w22, [x20, #112]
  424960:	b	4249bc <_obstack_memory_used@@Base+0xd4a0>
  424964:	ldr	x9, [x20, #8]
  424968:	ldrb	w8, [x9, x8]
  42496c:	ldr	x9, [x20, #128]
  424970:	lsr	x10, x8, #3
  424974:	and	x10, x10, #0x18
  424978:	ldr	x9, [x9, x10]
  42497c:	lsr	x9, x9, x8
  424980:	tbz	w9, #0, 4249b0 <_obstack_memory_used@@Base+0xd494>
  424984:	mov	w22, #0x1                   	// #1
  424988:	b	4249bc <_obstack_memory_used@@Base+0xd4a0>
  42498c:	ldrb	w8, [x20, #142]
  424990:	cbnz	w8, 425108 <_obstack_memory_used@@Base+0xdbec>
  424994:	cmp	w23, #0xa
  424998:	b.ne	4249b8 <_obstack_memory_used@@Base+0xd49c>  // b.any
  42499c:	ldrb	w8, [x20, #141]
  4249a0:	cmp	w8, #0x0
  4249a4:	cset	w8, ne  // ne = any
  4249a8:	lsl	w22, w8, #1
  4249ac:	b	4249bc <_obstack_memory_used@@Base+0xd4a0>
  4249b0:	cmp	w8, #0xa
  4249b4:	b.eq	42499c <_obstack_memory_used@@Base+0xd480>  // b.none
  4249b8:	mov	w22, wzr
  4249bc:	cmp	x26, x27
  4249c0:	stp	x21, x25, [sp, #16]
  4249c4:	str	x28, [sp, #8]
  4249c8:	b.ne	424a6c <_obstack_memory_used@@Base+0xd550>  // b.any
  4249cc:	mov	w8, #0x1                   	// #1
  4249d0:	dup	v0.2d, x8
  4249d4:	mov	w0, #0x8                   	// #8
  4249d8:	stur	q0, [x29, #-64]
  4249dc:	bl	402730 <malloc@plt>
  4249e0:	ldr	w23, [sp, #36]
  4249e4:	stur	x0, [x29, #-48]
  4249e8:	cbz	x0, 4250f8 <_obstack_memory_used@@Base+0xdbdc>
  4249ec:	str	x19, [x0]
  4249f0:	ldp	x2, x0, [sp, #48]
  4249f4:	sub	x1, x29, #0x40
  4249f8:	mov	w3, w23
  4249fc:	stur	wzr, [x29, #-36]
  424a00:	bl	42512c <_obstack_memory_used@@Base+0xdc10>
  424a04:	stur	w0, [x29, #-36]
  424a08:	cbnz	w0, 4250e8 <_obstack_memory_used@@Base+0xdbcc>
  424a0c:	ldur	x21, [x29, #-56]
  424a10:	cbz	x21, 424a34 <_obstack_memory_used@@Base+0xd518>
  424a14:	ldr	x3, [sp, #48]
  424a18:	sub	x1, x29, #0x40
  424a1c:	mov	x0, x20
  424a20:	mov	x2, x26
  424a24:	mov	w4, w23
  424a28:	bl	425270 <_obstack_memory_used@@Base+0xdd54>
  424a2c:	stur	w0, [x29, #-36]
  424a30:	cbnz	w0, 4250e8 <_obstack_memory_used@@Base+0xdbcc>
  424a34:	ldr	x1, [sp, #56]
  424a38:	sub	x0, x29, #0x24
  424a3c:	sub	x2, x29, #0x40
  424a40:	mov	w3, w22
  424a44:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  424a48:	mov	x28, x0
  424a4c:	cbnz	x0, 424a58 <_obstack_memory_used@@Base+0xd53c>
  424a50:	ldur	w8, [x29, #-36]
  424a54:	cbnz	w8, 42504c <_obstack_memory_used@@Base+0xdb30>
  424a58:	ldr	x8, [x20, #184]
  424a5c:	str	x28, [x8, x26, lsl #3]
  424a60:	cmp	x26, x24
  424a64:	b.ge	424f80 <_obstack_memory_used@@Base+0xda64>  // b.tcont
  424a68:	b	424b14 <_obstack_memory_used@@Base+0xd5f8>
  424a6c:	ldr	x8, [x20, #184]
  424a70:	ldr	w23, [sp, #36]
  424a74:	ldr	x28, [x8, x26, lsl #3]
  424a78:	cbz	x28, 424a9c <_obstack_memory_used@@Base+0xd580>
  424a7c:	ldrb	w8, [x28, #104]
  424a80:	tbnz	w8, #6, 424ab0 <_obstack_memory_used@@Base+0xd594>
  424a84:	mov	x21, xzr
  424a88:	stp	xzr, xzr, [x29, #-64]
  424a8c:	stur	xzr, [x29, #-48]
  424a90:	ldrb	w8, [x28, #104]
  424a94:	tbz	w8, #6, 424b0c <_obstack_memory_used@@Base+0xd5f0>
  424a98:	b	424a10 <_obstack_memory_used@@Base+0xd4f4>
  424a9c:	stp	xzr, xzr, [x29, #-64]
  424aa0:	stur	xzr, [x29, #-48]
  424aa4:	cmp	x26, x24
  424aa8:	b.lt	424b14 <_obstack_memory_used@@Base+0xd5f8>  // b.tstop
  424aac:	b	424f80 <_obstack_memory_used@@Base+0xda64>
  424ab0:	ldr	x21, [x28, #16]
  424ab4:	cmp	x21, #0x1
  424ab8:	stur	x21, [x29, #-56]
  424abc:	b.lt	424af4 <_obstack_memory_used@@Base+0xd5d8>  // b.tstop
  424ac0:	lsl	x19, x21, #3
  424ac4:	mov	x0, x19
  424ac8:	stur	x21, [x29, #-64]
  424acc:	bl	402730 <malloc@plt>
  424ad0:	stur	x0, [x29, #-48]
  424ad4:	cbz	x0, 4250f8 <_obstack_memory_used@@Base+0xdbdc>
  424ad8:	ldr	x1, [x28, #24]
  424adc:	mov	x2, x19
  424ae0:	bl	402580 <memcpy@plt>
  424ae4:	stur	wzr, [x29, #-36]
  424ae8:	ldrb	w8, [x28, #104]
  424aec:	tbnz	w8, #6, 424a10 <_obstack_memory_used@@Base+0xd4f4>
  424af0:	b	424b0c <_obstack_memory_used@@Base+0xd5f0>
  424af4:	mov	x21, xzr
  424af8:	stp	xzr, xzr, [x29, #-64]
  424afc:	stur	xzr, [x29, #-48]
  424b00:	stur	wzr, [x29, #-36]
  424b04:	ldrb	w8, [x28, #104]
  424b08:	tbnz	w8, #6, 424a10 <_obstack_memory_used@@Base+0xd4f4>
  424b0c:	cmp	x26, x24
  424b10:	b.ge	424f80 <_obstack_memory_used@@Base+0xda64>  // b.tcont
  424b14:	ldp	x22, x21, [sp, #48]
  424b18:	mov	w8, #0x1                   	// #1
  424b1c:	mov	x9, xzr
  424b20:	dup	v0.2d, x8
  424b24:	str	q0, [sp, #80]
  424b28:	b	424b48 <_obstack_memory_used@@Base+0xd62c>
  424b2c:	ldp	x9, x26, [sp, #64]
  424b30:	ldr	x8, [x20, #184]
  424b34:	cmp	x28, #0x0
  424b38:	csinc	x9, xzr, x9, ne  // ne = any
  424b3c:	cmp	x26, x24
  424b40:	str	x28, [x8, x26, lsl #3]
  424b44:	b.eq	424f7c <_obstack_memory_used@@Base+0xda60>  // b.none
  424b48:	ldrsw	x8, [x20, #224]
  424b4c:	cmp	x9, x8
  424b50:	b.gt	424f80 <_obstack_memory_used@@Base+0xda64>
  424b54:	stur	xzr, [x29, #-56]
  424b58:	ldr	x8, [x20, #184]
  424b5c:	str	x9, [sp, #64]
  424b60:	add	x9, x26, #0x1
  424b64:	str	x9, [sp, #72]
  424b68:	ldr	x8, [x8, x9, lsl #3]
  424b6c:	cbz	x8, 424b84 <_obstack_memory_used@@Base+0xd668>
  424b70:	add	x1, x8, #0x8
  424b74:	sub	x0, x29, #0x40
  424b78:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  424b7c:	stur	w0, [x29, #-36]
  424b80:	cbnz	w0, 42504c <_obstack_memory_used@@Base+0xdb30>
  424b84:	cbz	x28, 424e4c <_obstack_memory_used@@Base+0xd930>
  424b88:	ldr	x22, [x20, #152]
  424b8c:	stur	wzr, [x29, #-4]
  424b90:	stp	xzr, xzr, [x29, #-32]
  424b94:	stur	xzr, [x29, #-16]
  424b98:	ldr	x8, [x28, #40]
  424b9c:	cmp	x8, #0x1
  424ba0:	b.lt	424e3c <_obstack_memory_used@@Base+0xd920>  // b.tstop
  424ba4:	mov	x24, xzr
  424ba8:	b	424bd8 <_obstack_memory_used@@Base+0xd6bc>
  424bac:	ldur	x8, [x29, #-56]
  424bb0:	cbnz	x8, 424d04 <_obstack_memory_used@@Base+0xd7e8>
  424bb4:	ldur	x8, [x29, #-48]
  424bb8:	str	x19, [x8]
  424bbc:	ldur	x8, [x29, #-56]
  424bc0:	add	x8, x8, #0x1
  424bc4:	stur	x8, [x29, #-56]
  424bc8:	ldr	x8, [x28, #40]
  424bcc:	add	x24, x24, #0x1
  424bd0:	cmp	x24, x8
  424bd4:	b.ge	424e2c <_obstack_memory_used@@Base+0xd910>  // b.tcont
  424bd8:	ldr	x8, [x28, #48]
  424bdc:	ldr	x19, [x8, x24, lsl #3]
  424be0:	ldr	x8, [x22]
  424be4:	add	x9, x8, x19, lsl #4
  424be8:	ldrb	w9, [x9, #10]
  424bec:	tbz	w9, #4, 424cc0 <_obstack_memory_used@@Base+0xd7a4>
  424bf0:	mov	x0, x22
  424bf4:	mov	x1, x19
  424bf8:	mov	x2, x20
  424bfc:	mov	x3, x26
  424c00:	bl	425b14 <_obstack_memory_used@@Base+0xe5f8>
  424c04:	mov	w23, w0
  424c08:	cmp	w0, #0x2
  424c0c:	b.lt	424cb8 <_obstack_memory_used@@Base+0xd79c>  // b.tstop
  424c10:	ldr	x8, [x20, #184]
  424c14:	ldr	x9, [x22, #24]
  424c18:	add	x27, x26, w23, uxtw
  424c1c:	ldr	x8, [x8, x27, lsl #3]
  424c20:	ldr	x21, [x9, x19, lsl #3]
  424c24:	stur	xzr, [x29, #-24]
  424c28:	cbz	x8, 424c40 <_obstack_memory_used@@Base+0xd724>
  424c2c:	add	x1, x8, #0x8
  424c30:	sub	x0, x29, #0x20
  424c34:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  424c38:	stur	w0, [x29, #-4]
  424c3c:	cbnz	w0, 425054 <_obstack_memory_used@@Base+0xdb38>
  424c40:	ldur	x9, [x29, #-32]
  424c44:	cbz	x9, 424c68 <_obstack_memory_used@@Base+0xd74c>
  424c48:	ldur	x8, [x29, #-24]
  424c4c:	cbnz	x8, 424d98 <_obstack_memory_used@@Base+0xd87c>
  424c50:	ldur	x8, [x29, #-16]
  424c54:	str	x21, [x8]
  424c58:	ldur	x8, [x29, #-24]
  424c5c:	add	x8, x8, #0x1
  424c60:	stur	x8, [x29, #-24]
  424c64:	b	424c88 <_obstack_memory_used@@Base+0xd76c>
  424c68:	mov	w8, #0x1                   	// #1
  424c6c:	dup	v0.2d, x8
  424c70:	mov	w0, #0x8                   	// #8
  424c74:	stur	q0, [x29, #-32]
  424c78:	bl	402730 <malloc@plt>
  424c7c:	stur	x0, [x29, #-16]
  424c80:	cbz	x0, 425074 <_obstack_memory_used@@Base+0xdb58>
  424c84:	str	x21, [x0]
  424c88:	sub	x0, x29, #0x4
  424c8c:	sub	x2, x29, #0x20
  424c90:	mov	x1, x22
  424c94:	bl	42588c <_obstack_memory_used@@Base+0xe370>
  424c98:	ldr	x8, [x20, #184]
  424c9c:	lsl	x9, x27, #3
  424ca0:	str	x0, [x8, x9]
  424ca4:	ldr	x8, [x20, #184]
  424ca8:	ldr	x8, [x8, x9]
  424cac:	cbnz	x8, 424cb8 <_obstack_memory_used@@Base+0xd79c>
  424cb0:	ldur	w25, [x29, #-4]
  424cb4:	cbnz	w25, 425058 <_obstack_memory_used@@Base+0xdb3c>
  424cb8:	cbnz	w23, 424cd4 <_obstack_memory_used@@Base+0xd7b8>
  424cbc:	ldr	x8, [x22]
  424cc0:	add	x1, x8, x19, lsl #4
  424cc4:	mov	x0, x20
  424cc8:	mov	x2, x26
  424ccc:	bl	425e8c <_obstack_memory_used@@Base+0xe970>
  424cd0:	tbz	w0, #0, 424bc8 <_obstack_memory_used@@Base+0xd6ac>
  424cd4:	ldr	x8, [x22, #24]
  424cd8:	ldur	x9, [x29, #-64]
  424cdc:	ldr	x19, [x8, x19, lsl #3]
  424ce0:	cbnz	x9, 424bac <_obstack_memory_used@@Base+0xd690>
  424ce4:	ldr	q0, [sp, #80]
  424ce8:	mov	w0, #0x8                   	// #8
  424cec:	stur	q0, [x29, #-64]
  424cf0:	bl	402730 <malloc@plt>
  424cf4:	stur	x0, [x29, #-48]
  424cf8:	cbz	x0, 42503c <_obstack_memory_used@@Base+0xdb20>
  424cfc:	str	x19, [x0]
  424d00:	b	424bc8 <_obstack_memory_used@@Base+0xd6ac>
  424d04:	cmp	x9, x8
  424d08:	b.ne	424d30 <_obstack_memory_used@@Base+0xd814>  // b.any
  424d0c:	ldur	x0, [x29, #-48]
  424d10:	lsl	x8, x9, #1
  424d14:	lsl	x1, x9, #4
  424d18:	stur	x8, [x29, #-64]
  424d1c:	bl	402870 <realloc@plt>
  424d20:	cbz	x0, 425040 <_obstack_memory_used@@Base+0xdb24>
  424d24:	ldur	x8, [x29, #-56]
  424d28:	stur	x0, [x29, #-48]
  424d2c:	b	424d34 <_obstack_memory_used@@Base+0xd818>
  424d30:	ldur	x0, [x29, #-48]
  424d34:	ldr	x9, [x0]
  424d38:	cmp	x9, x19
  424d3c:	b.le	424d68 <_obstack_memory_used@@Base+0xd84c>
  424d40:	cmp	x8, #0x1
  424d44:	b.lt	424d90 <_obstack_memory_used@@Base+0xd874>  // b.tstop
  424d48:	mov	x9, x8
  424d4c:	add	x10, x0, x9, lsl #3
  424d50:	ldur	x11, [x10, #-8]
  424d54:	subs	x8, x9, #0x1
  424d58:	mov	x9, x8
  424d5c:	str	x11, [x10]
  424d60:	b.gt	424d4c <_obstack_memory_used@@Base+0xd830>
  424d64:	b	424d90 <_obstack_memory_used@@Base+0xd874>
  424d68:	add	x9, x0, x8, lsl #3
  424d6c:	ldur	x9, [x9, #-8]
  424d70:	cmp	x9, x19
  424d74:	b.le	424d90 <_obstack_memory_used@@Base+0xd874>
  424d78:	add	x10, x0, x8, lsl #3
  424d7c:	str	x9, [x10]
  424d80:	ldur	x9, [x10, #-16]
  424d84:	sub	x8, x8, #0x1
  424d88:	cmp	x9, x19
  424d8c:	b.gt	424d78 <_obstack_memory_used@@Base+0xd85c>
  424d90:	str	x19, [x0, x8, lsl #3]
  424d94:	b	424bbc <_obstack_memory_used@@Base+0xd6a0>
  424d98:	cmp	x9, x8
  424d9c:	b.ne	424dc4 <_obstack_memory_used@@Base+0xd8a8>  // b.any
  424da0:	ldur	x0, [x29, #-16]
  424da4:	lsl	x8, x9, #1
  424da8:	lsl	x1, x9, #4
  424dac:	stur	x8, [x29, #-32]
  424db0:	bl	402870 <realloc@plt>
  424db4:	cbz	x0, 425040 <_obstack_memory_used@@Base+0xdb24>
  424db8:	ldur	x8, [x29, #-24]
  424dbc:	stur	x0, [x29, #-16]
  424dc0:	b	424dc8 <_obstack_memory_used@@Base+0xd8ac>
  424dc4:	ldur	x0, [x29, #-16]
  424dc8:	ldr	x9, [x0]
  424dcc:	cmp	x9, x21
  424dd0:	b.le	424dfc <_obstack_memory_used@@Base+0xd8e0>
  424dd4:	cmp	x8, #0x1
  424dd8:	b.lt	424e24 <_obstack_memory_used@@Base+0xd908>  // b.tstop
  424ddc:	mov	x9, x8
  424de0:	add	x10, x0, x9, lsl #3
  424de4:	ldur	x11, [x10, #-8]
  424de8:	subs	x8, x9, #0x1
  424dec:	mov	x9, x8
  424df0:	str	x11, [x10]
  424df4:	b.gt	424de0 <_obstack_memory_used@@Base+0xd8c4>
  424df8:	b	424e24 <_obstack_memory_used@@Base+0xd908>
  424dfc:	add	x9, x0, x8, lsl #3
  424e00:	ldur	x9, [x9, #-8]
  424e04:	cmp	x9, x21
  424e08:	b.le	424e24 <_obstack_memory_used@@Base+0xd908>
  424e0c:	add	x10, x0, x8, lsl #3
  424e10:	str	x9, [x10]
  424e14:	ldur	x9, [x10, #-16]
  424e18:	sub	x8, x8, #0x1
  424e1c:	cmp	x9, x21
  424e20:	b.gt	424e0c <_obstack_memory_used@@Base+0xd8f0>
  424e24:	str	x21, [x0, x8, lsl #3]
  424e28:	b	424c58 <_obstack_memory_used@@Base+0xd73c>
  424e2c:	ldur	x0, [x29, #-16]
  424e30:	ldr	x24, [sp, #40]
  424e34:	ldr	w23, [sp, #36]
  424e38:	b	424e40 <_obstack_memory_used@@Base+0xd924>
  424e3c:	mov	x0, xzr
  424e40:	bl	402a10 <free@plt>
  424e44:	ldp	x22, x21, [sp, #48]
  424e48:	stur	wzr, [x29, #-36]
  424e4c:	ldur	x8, [x29, #-56]
  424e50:	cbz	x8, 424e90 <_obstack_memory_used@@Base+0xd974>
  424e54:	sub	x1, x29, #0x40
  424e58:	mov	x0, x21
  424e5c:	mov	x2, x22
  424e60:	mov	w3, w23
  424e64:	bl	42512c <_obstack_memory_used@@Base+0xdc10>
  424e68:	stur	w0, [x29, #-36]
  424e6c:	cbnz	w0, 42504c <_obstack_memory_used@@Base+0xdb30>
  424e70:	ldr	x2, [sp, #72]
  424e74:	sub	x1, x29, #0x40
  424e78:	mov	x0, x20
  424e7c:	mov	x3, x22
  424e80:	mov	w4, w23
  424e84:	bl	425270 <_obstack_memory_used@@Base+0xdd54>
  424e88:	stur	w0, [x29, #-36]
  424e8c:	cbnz	w0, 42504c <_obstack_memory_used@@Base+0xdb30>
  424e90:	tbnz	x26, #63, 424ec8 <_obstack_memory_used@@Base+0xd9ac>
  424e94:	ldr	x8, [x20, #88]
  424e98:	cmp	x8, x26
  424e9c:	b.eq	424f4c <_obstack_memory_used@@Base+0xda30>  // b.none
  424ea0:	ldr	w8, [x20, #144]
  424ea4:	cmp	w8, #0x2
  424ea8:	b.lt	424ed0 <_obstack_memory_used@@Base+0xd9b4>  // b.tstop
  424eac:	ldr	x8, [x20, #16]
  424eb0:	ldr	w19, [x8, x26, lsl #2]
  424eb4:	cmn	w19, #0x1
  424eb8:	b.ne	424ef8 <_obstack_memory_used@@Base+0xd9dc>  // b.any
  424ebc:	sub	x26, x26, #0x1
  424ec0:	cmn	x26, #0x1
  424ec4:	b.ne	424eb0 <_obstack_memory_used@@Base+0xd994>  // b.any
  424ec8:	ldr	w3, [x20, #112]
  424ecc:	b	424f28 <_obstack_memory_used@@Base+0xda0c>
  424ed0:	ldr	x8, [x20, #8]
  424ed4:	ldr	x9, [x20, #128]
  424ed8:	ldrb	w8, [x8, x26]
  424edc:	lsr	x10, x8, #3
  424ee0:	and	x10, x10, #0x18
  424ee4:	ldr	x9, [x9, x10]
  424ee8:	lsr	x9, x9, x8
  424eec:	tbz	w9, #0, 424f1c <_obstack_memory_used@@Base+0xda00>
  424ef0:	mov	w3, #0x1                   	// #1
  424ef4:	b	424f28 <_obstack_memory_used@@Base+0xda0c>
  424ef8:	ldrb	w8, [x20, #142]
  424efc:	cbnz	w8, 424f60 <_obstack_memory_used@@Base+0xda44>
  424f00:	cmp	w19, #0xa
  424f04:	b.ne	424f24 <_obstack_memory_used@@Base+0xda08>  // b.any
  424f08:	ldrb	w8, [x20, #141]
  424f0c:	cmp	w8, #0x0
  424f10:	cset	w8, ne  // ne = any
  424f14:	lsl	w3, w8, #1
  424f18:	b	424f28 <_obstack_memory_used@@Base+0xda0c>
  424f1c:	cmp	w8, #0xa
  424f20:	b.eq	424f08 <_obstack_memory_used@@Base+0xd9ec>  // b.none
  424f24:	mov	w3, wzr
  424f28:	sub	x0, x29, #0x24
  424f2c:	sub	x2, x29, #0x40
  424f30:	mov	x1, x21
  424f34:	bl	421624 <_obstack_memory_used@@Base+0xa108>
  424f38:	mov	x28, x0
  424f3c:	cbnz	x0, 424b2c <_obstack_memory_used@@Base+0xd610>
  424f40:	ldur	w8, [x29, #-36]
  424f44:	cbz	w8, 424b2c <_obstack_memory_used@@Base+0xd610>
  424f48:	b	42504c <_obstack_memory_used@@Base+0xdb30>
  424f4c:	ldr	w8, [x20, #160]
  424f50:	mov	w9, #0xa                   	// #10
  424f54:	and	w8, w8, #0x2
  424f58:	eor	w3, w8, w9
  424f5c:	b	424f28 <_obstack_memory_used@@Base+0xda0c>
  424f60:	mov	w0, w19
  424f64:	bl	402b10 <iswalnum@plt>
  424f68:	cmp	w19, #0x5f
  424f6c:	mov	w3, #0x1                   	// #1
  424f70:	b.eq	424f28 <_obstack_memory_used@@Base+0xda0c>  // b.none
  424f74:	cbz	w0, 424f00 <_obstack_memory_used@@Base+0xd9e4>
  424f78:	b	424f28 <_obstack_memory_used@@Base+0xda0c>
  424f7c:	mov	x26, x24
  424f80:	ldur	x0, [x29, #-48]
  424f84:	bl	402a10 <free@plt>
  424f88:	ldr	x8, [x20, #184]
  424f8c:	ldr	x9, [x8, x24, lsl #3]
  424f90:	ldp	x10, x8, [sp, #16]
  424f94:	cmp	x9, #0x0
  424f98:	str	x26, [x8]
  424f9c:	ldr	x8, [sp, #8]
  424fa0:	str	x10, [x20, #72]
  424fa4:	str	x8, [x20, #184]
  424fa8:	add	x8, x9, #0x8
  424fac:	csel	x8, xzr, x8, eq  // eq = none
  424fb0:	cbz	x9, 425014 <_obstack_memory_used@@Base+0xdaf8>
  424fb4:	ldr	x9, [x8, #8]
  424fb8:	subs	x9, x9, #0x1
  424fbc:	b.lt	425014 <_obstack_memory_used@@Base+0xdaf8>  // b.tstop
  424fc0:	ldr	x8, [x8, #16]
  424fc4:	mov	x10, xzr
  424fc8:	b.eq	425004 <_obstack_memory_used@@Base+0xdae8>  // b.none
  424fcc:	ldr	x13, [sp]
  424fd0:	add	x11, x10, x9
  424fd4:	lsr	x11, x11, #1
  424fd8:	ldr	x12, [x8, x11, lsl #3]
  424fdc:	cmp	x12, x13
  424fe0:	csinc	x10, x10, x11, ge  // ge = tcont
  424fe4:	csel	x9, x9, x11, lt  // lt = tstop
  424fe8:	cmp	x10, x9
  424fec:	b.cc	424fd0 <_obstack_memory_used@@Base+0xdab4>  // b.lo, b.ul, b.last
  424ff0:	ldr	x8, [x8, x10, lsl #3]
  424ff4:	cmp	x8, x13
  424ff8:	b.ne	425014 <_obstack_memory_used@@Base+0xdaf8>  // b.any
  424ffc:	mov	w19, wzr
  425000:	b	425018 <_obstack_memory_used@@Base+0xdafc>
  425004:	ldr	x13, [sp]
  425008:	ldr	x8, [x8, x10, lsl #3]
  42500c:	cmp	x8, x13
  425010:	b.eq	424ffc <_obstack_memory_used@@Base+0xdae0>  // b.none
  425014:	mov	w19, #0x1                   	// #1
  425018:	mov	w0, w19
  42501c:	ldp	x20, x19, [sp, #240]
  425020:	ldp	x22, x21, [sp, #224]
  425024:	ldp	x24, x23, [sp, #208]
  425028:	ldp	x26, x25, [sp, #192]
  42502c:	ldp	x28, x27, [sp, #176]
  425030:	ldp	x29, x30, [sp, #160]
  425034:	add	sp, sp, #0x100
  425038:	ret
  42503c:	stp	xzr, xzr, [x29, #-64]
  425040:	ldur	x0, [x29, #-16]
  425044:	mov	w25, #0xc                   	// #12
  425048:	b	42505c <_obstack_memory_used@@Base+0xdb40>
  42504c:	ldur	x0, [x29, #-48]
  425050:	b	425068 <_obstack_memory_used@@Base+0xdb4c>
  425054:	mov	w25, w0
  425058:	ldur	x0, [x29, #-16]
  42505c:	bl	402a10 <free@plt>
  425060:	ldur	x0, [x29, #-48]
  425064:	stur	w25, [x29, #-36]
  425068:	bl	402a10 <free@plt>
  42506c:	ldur	w19, [x29, #-36]
  425070:	b	425018 <_obstack_memory_used@@Base+0xdafc>
  425074:	stp	xzr, xzr, [x29, #-32]
  425078:	mov	w25, #0xc                   	// #12
  42507c:	b	42505c <_obstack_memory_used@@Base+0xdb40>
  425080:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  425084:	sub	x9, x9, x21
  425088:	cmp	x9, x8
  42508c:	b.le	425124 <_obstack_memory_used@@Base+0xdc08>
  425090:	add	x22, x8, #0x1
  425094:	add	x23, x22, x21
  425098:	lsr	x8, x23, #61
  42509c:	cbnz	x8, 425124 <_obstack_memory_used@@Base+0xdc08>
  4250a0:	ldr	x0, [x25, #16]
  4250a4:	lsl	x1, x23, #3
  4250a8:	bl	402870 <realloc@plt>
  4250ac:	cbz	x0, 425124 <_obstack_memory_used@@Base+0xdc08>
  4250b0:	stp	x23, x0, [x25, #8]
  4250b4:	add	x0, x0, x21, lsl #3
  4250b8:	lsl	x2, x22, #3
  4250bc:	mov	w1, wzr
  4250c0:	bl	402800 <memset@plt>
  4250c4:	b	4248f4 <_obstack_memory_used@@Base+0xd3d8>
  4250c8:	ldr	w22, [x20, #112]
  4250cc:	ldr	x24, [sp, #40]
  4250d0:	b	4249bc <_obstack_memory_used@@Base+0xd4a0>
  4250d4:	ldr	w8, [x20, #160]
  4250d8:	mov	w9, #0xa                   	// #10
  4250dc:	and	w8, w8, #0x2
  4250e0:	eor	w22, w8, w9
  4250e4:	b	4249bc <_obstack_memory_used@@Base+0xd4a0>
  4250e8:	mov	w19, w0
  4250ec:	ldur	x0, [x29, #-48]
  4250f0:	bl	402a10 <free@plt>
  4250f4:	b	425018 <_obstack_memory_used@@Base+0xdafc>
  4250f8:	mov	w19, #0xc                   	// #12
  4250fc:	stp	xzr, xzr, [x29, #-64]
  425100:	stur	w19, [x29, #-36]
  425104:	b	425018 <_obstack_memory_used@@Base+0xdafc>
  425108:	mov	w0, w23
  42510c:	bl	402b10 <iswalnum@plt>
  425110:	cmp	w23, #0x5f
  425114:	mov	w22, #0x1                   	// #1
  425118:	b.eq	4249bc <_obstack_memory_used@@Base+0xd4a0>  // b.none
  42511c:	cbz	w0, 424994 <_obstack_memory_used@@Base+0xd478>
  425120:	b	4249bc <_obstack_memory_used@@Base+0xd4a0>
  425124:	mov	w19, #0xc                   	// #12
  425128:	b	425018 <_obstack_memory_used@@Base+0xdafc>
  42512c:	sub	sp, sp, #0x70
  425130:	stp	x29, x30, [sp, #32]
  425134:	stp	x24, x23, [sp, #64]
  425138:	stp	x22, x21, [sp, #80]
  42513c:	stp	x20, x19, [sp, #96]
  425140:	ldr	x23, [x1, #8]
  425144:	mov	x22, x0
  425148:	str	x25, [sp, #48]
  42514c:	add	x29, sp, #0x20
  425150:	lsl	x0, x23, #3
  425154:	mov	w20, w3
  425158:	mov	x21, x2
  42515c:	mov	x19, x1
  425160:	stp	x23, xzr, [sp, #8]
  425164:	bl	402730 <malloc@plt>
  425168:	str	x0, [sp, #24]
  42516c:	cbz	x0, 425268 <_obstack_memory_used@@Base+0xdd4c>
  425170:	cmp	x23, #0x1
  425174:	b.lt	42522c <_obstack_memory_used@@Base+0xdd10>  // b.tstop
  425178:	mov	x24, xzr
  42517c:	mov	w25, #0x18                  	// #24
  425180:	b	4251a0 <_obstack_memory_used@@Base+0xdc84>
  425184:	add	x0, sp, #0x8
  425188:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  42518c:	cbnz	w0, 42521c <_obstack_memory_used@@Base+0xdd00>
  425190:	ldr	x8, [x19, #8]
  425194:	add	x24, x24, #0x1
  425198:	cmp	x24, x8
  42519c:	b.ge	42522c <_obstack_memory_used@@Base+0xdd10>  // b.tcont
  4251a0:	ldr	x8, [x19, #16]
  4251a4:	ldr	x9, [x22, #48]
  4251a8:	ldr	x2, [x8, x24, lsl #3]
  4251ac:	madd	x1, x2, x25, x9
  4251b0:	ldr	x8, [x1, #8]
  4251b4:	cmp	x8, #0x1
  4251b8:	b.lt	425184 <_obstack_memory_used@@Base+0xdc68>  // b.tstop
  4251bc:	madd	x9, x2, x25, x9
  4251c0:	ldr	x9, [x9, #16]
  4251c4:	ldr	x10, [x22]
  4251c8:	b	4251d8 <_obstack_memory_used@@Base+0xdcbc>
  4251cc:	subs	x8, x8, #0x1
  4251d0:	add	x9, x9, #0x8
  4251d4:	b.eq	425184 <_obstack_memory_used@@Base+0xdc68>  // b.none
  4251d8:	ldr	x11, [x9]
  4251dc:	add	x12, x10, x11, lsl #4
  4251e0:	ldrb	w12, [x12, #8]
  4251e4:	cmp	w12, w20
  4251e8:	b.ne	4251cc <_obstack_memory_used@@Base+0xdcb0>  // b.any
  4251ec:	lsl	x12, x11, #4
  4251f0:	ldr	x12, [x10, x12]
  4251f4:	cmp	x12, x21
  4251f8:	b.ne	4251cc <_obstack_memory_used@@Base+0xdcb0>  // b.any
  4251fc:	cmn	x11, #0x1
  425200:	b.eq	425184 <_obstack_memory_used@@Base+0xdc68>  // b.none
  425204:	add	x1, sp, #0x8
  425208:	mov	x0, x22
  42520c:	mov	x3, x21
  425210:	mov	w4, w20
  425214:	bl	42575c <_obstack_memory_used@@Base+0xe240>
  425218:	cbz	w0, 425190 <_obstack_memory_used@@Base+0xdc74>
  42521c:	mov	w23, w0
  425220:	ldr	x0, [sp, #24]
  425224:	bl	402a10 <free@plt>
  425228:	b	425248 <_obstack_memory_used@@Base+0xdd2c>
  42522c:	ldr	x0, [x19, #16]
  425230:	bl	402a10 <free@plt>
  425234:	ldr	x8, [sp, #24]
  425238:	ldur	q0, [sp, #8]
  42523c:	mov	w23, wzr
  425240:	str	x8, [x19, #16]
  425244:	str	q0, [x19]
  425248:	mov	w0, w23
  42524c:	ldp	x20, x19, [sp, #96]
  425250:	ldp	x22, x21, [sp, #80]
  425254:	ldp	x24, x23, [sp, #64]
  425258:	ldr	x25, [sp, #48]
  42525c:	ldp	x29, x30, [sp, #32]
  425260:	add	sp, sp, #0x70
  425264:	ret
  425268:	mov	w23, #0xc                   	// #12
  42526c:	b	425248 <_obstack_memory_used@@Base+0xdd2c>
  425270:	sub	sp, sp, #0xc0
  425274:	stp	x29, x30, [sp, #96]
  425278:	stp	x28, x27, [sp, #112]
  42527c:	stp	x26, x25, [sp, #128]
  425280:	stp	x24, x23, [sp, #144]
  425284:	stp	x22, x21, [sp, #160]
  425288:	stp	x20, x19, [sp, #176]
  42528c:	ldr	x8, [x0, #200]
  425290:	ldr	x23, [x0, #152]
  425294:	mov	x21, x2
  425298:	mov	x22, x0
  42529c:	cmp	x8, #0x1
  4252a0:	mov	x24, x1
  4252a4:	mov	x28, xzr
  4252a8:	add	x29, sp, #0x60
  4252ac:	b.lt	4252e8 <_obstack_memory_used@@Base+0xddcc>  // b.tstop
  4252b0:	ldr	x9, [x22, #216]
  4252b4:	mov	w10, #0x28                  	// #40
  4252b8:	mov	x11, x8
  4252bc:	add	x12, x11, x28
  4252c0:	cmp	x12, #0x0
  4252c4:	cinc	x12, x12, lt  // lt = tstop
  4252c8:	asr	x12, x12, #1
  4252cc:	madd	x13, x12, x10, x9
  4252d0:	ldr	x13, [x13, #8]
  4252d4:	cmp	x13, x21
  4252d8:	csel	x11, x11, x12, lt  // lt = tstop
  4252dc:	csinc	x28, x28, x12, ge  // ge = tcont
  4252e0:	cmp	x28, x11
  4252e4:	b.lt	4252bc <_obstack_memory_used@@Base+0xdda0>  // b.tstop
  4252e8:	cmp	x28, x8
  4252ec:	b.ge	425734 <_obstack_memory_used@@Base+0xe218>  // b.tcont
  4252f0:	cmn	x28, #0x1
  4252f4:	mov	w26, wzr
  4252f8:	b.eq	425738 <_obstack_memory_used@@Base+0xe21c>  // b.none
  4252fc:	ldr	x8, [x22, #216]
  425300:	mov	w9, #0x28                  	// #40
  425304:	madd	x9, x28, x9, x8
  425308:	ldr	x9, [x9, #8]
  42530c:	cmp	x9, x21
  425310:	b.ne	425738 <_obstack_memory_used@@Base+0xe21c>  // b.any
  425314:	mov	w9, #0x1                   	// #1
  425318:	dup	v0.2d, x9
  42531c:	str	x3, [sp, #40]
  425320:	stur	w4, [x29, #-44]
  425324:	str	q0, [sp, #16]
  425328:	stur	x23, [x29, #-40]
  42532c:	mov	w9, #0x28                  	// #40
  425330:	madd	x19, x28, x9, x8
  425334:	b	425344 <_obstack_memory_used@@Base+0xde28>
  425338:	ldrb	w8, [x19, #32]
  42533c:	add	x19, x19, #0x28
  425340:	cbz	w8, 425734 <_obstack_memory_used@@Base+0xe218>
  425344:	ldr	x8, [x24, #8]
  425348:	subs	x9, x8, #0x1
  42534c:	b.lt	425338 <_obstack_memory_used@@Base+0xde1c>  // b.tstop
  425350:	ldr	x10, [x19]
  425354:	ldr	x8, [x24, #16]
  425358:	mov	x11, xzr
  42535c:	b.eq	425384 <_obstack_memory_used@@Base+0xde68>  // b.none
  425360:	mov	x12, x9
  425364:	add	x13, x11, x12
  425368:	lsr	x13, x13, #1
  42536c:	ldr	x14, [x8, x13, lsl #3]
  425370:	cmp	x14, x10
  425374:	csinc	x11, x11, x13, ge  // ge = tcont
  425378:	csel	x12, x12, x13, lt  // lt = tstop
  42537c:	cmp	x11, x12
  425380:	b.cc	425364 <_obstack_memory_used@@Base+0xde48>  // b.lo, b.ul, b.last
  425384:	ldr	x11, [x8, x11, lsl #3]
  425388:	cmp	x11, x10
  42538c:	b.ne	425338 <_obstack_memory_used@@Base+0xde1c>  // b.any
  425390:	ldp	x12, x11, [x19, #16]
  425394:	add	x11, x11, x21
  425398:	sub	x27, x11, x12
  42539c:	cmp	x27, x21
  4253a0:	b.ne	425464 <_obstack_memory_used@@Base+0xdf48>  // b.any
  4253a4:	ldr	x11, [x23, #40]
  4253a8:	mov	w12, #0x18                  	// #24
  4253ac:	madd	x10, x10, x12, x11
  4253b0:	ldr	x10, [x10, #16]
  4253b4:	ldr	x20, [x10]
  4253b8:	mov	x10, xzr
  4253bc:	cbz	x9, 4253e0 <_obstack_memory_used@@Base+0xdec4>
  4253c0:	add	x11, x10, x9
  4253c4:	lsr	x11, x11, #1
  4253c8:	ldr	x12, [x8, x11, lsl #3]
  4253cc:	cmp	x12, x20
  4253d0:	csinc	x10, x10, x11, ge  // ge = tcont
  4253d4:	csel	x9, x9, x11, lt  // lt = tstop
  4253d8:	cmp	x10, x9
  4253dc:	b.cc	4253c0 <_obstack_memory_used@@Base+0xdea4>  // b.lo, b.ul, b.last
  4253e0:	ldr	x8, [x8, x10, lsl #3]
  4253e4:	cmp	x8, x20
  4253e8:	b.eq	4254c0 <_obstack_memory_used@@Base+0xdfa4>  // b.none
  4253ec:	ldr	q0, [sp, #16]
  4253f0:	mov	w0, #0x8                   	// #8
  4253f4:	stur	q0, [x29, #-32]
  4253f8:	bl	402730 <malloc@plt>
  4253fc:	mov	w23, w26
  425400:	stur	x0, [x29, #-16]
  425404:	cbz	x0, 4255f8 <_obstack_memory_used@@Base+0xe0dc>
  425408:	mov	w25, wzr
  42540c:	str	x20, [x0]
  425410:	ldur	x0, [x29, #-40]
  425414:	ldr	x2, [sp, #40]
  425418:	ldur	w3, [x29, #-44]
  42541c:	sub	x1, x29, #0x20
  425420:	stur	w25, [x29, #-4]
  425424:	bl	42512c <_obstack_memory_used@@Base+0xdc10>
  425428:	mov	w26, w0
  42542c:	sub	x1, x29, #0x20
  425430:	mov	x0, x24
  425434:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  425438:	ldur	x8, [x29, #-16]
  42543c:	mov	w27, w0
  425440:	mov	x0, x8
  425444:	bl	402a10 <free@plt>
  425448:	orr	w8, w26, w25
  42544c:	orr	w8, w8, w27
  425450:	cbnz	w8, 425604 <_obstack_memory_used@@Base+0xe0e8>
  425454:	mov	w26, w23
  425458:	ldur	x23, [x29, #-40]
  42545c:	mov	w8, #0x2                   	// #2
  425460:	b	4255dc <_obstack_memory_used@@Base+0xe0c0>
  425464:	ldr	x8, [x22, #184]
  425468:	ldr	x9, [x23, #24]
  42546c:	ldr	x25, [x8, x27, lsl #3]
  425470:	ldr	x20, [x9, x10, lsl #3]
  425474:	cbz	x25, 4254c8 <_obstack_memory_used@@Base+0xdfac>
  425478:	ldr	x8, [x25, #16]
  42547c:	cmp	x8, #0x0
  425480:	b.le	4254f0 <_obstack_memory_used@@Base+0xdfd4>
  425484:	ldr	x9, [x25, #24]
  425488:	mov	x11, xzr
  42548c:	subs	x10, x8, #0x1
  425490:	b.eq	4254b4 <_obstack_memory_used@@Base+0xdf98>  // b.none
  425494:	add	x12, x11, x10
  425498:	lsr	x12, x12, #1
  42549c:	ldr	x13, [x9, x12, lsl #3]
  4254a0:	cmp	x13, x20
  4254a4:	csinc	x11, x11, x12, ge  // ge = tcont
  4254a8:	csel	x10, x10, x12, lt  // lt = tstop
  4254ac:	cmp	x11, x10
  4254b0:	b.cc	425494 <_obstack_memory_used@@Base+0xdf78>  // b.lo, b.ul, b.last
  4254b4:	ldr	x9, [x9, x11, lsl #3]
  4254b8:	cmp	x9, x20
  4254bc:	b.ne	4254f8 <_obstack_memory_used@@Base+0xdfdc>  // b.any
  4254c0:	mov	w8, #0x4                   	// #4
  4254c4:	b	4255dc <_obstack_memory_used@@Base+0xe0c0>
  4254c8:	mov	w8, #0x1                   	// #1
  4254cc:	dup	v0.2d, x8
  4254d0:	mov	w0, #0x8                   	// #8
  4254d4:	stur	q0, [x29, #-32]
  4254d8:	bl	402730 <malloc@plt>
  4254dc:	stur	x0, [x29, #-16]
  4254e0:	cbz	x0, 425624 <_obstack_memory_used@@Base+0xe108>
  4254e4:	str	x20, [x0]
  4254e8:	stur	wzr, [x29, #-4]
  4254ec:	b	425590 <_obstack_memory_used@@Base+0xe074>
  4254f0:	stur	x8, [x29, #-24]
  4254f4:	b	42555c <_obstack_memory_used@@Base+0xe040>
  4254f8:	cmp	x8, #0x1
  4254fc:	stur	x8, [x29, #-24]
  425500:	b.lt	42555c <_obstack_memory_used@@Base+0xe040>  // b.tstop
  425504:	str	w26, [sp, #12]
  425508:	lsl	x26, x8, #3
  42550c:	mov	x0, x26
  425510:	stur	x8, [x29, #-32]
  425514:	bl	402730 <malloc@plt>
  425518:	stur	x0, [x29, #-16]
  42551c:	cbz	x0, 42565c <_obstack_memory_used@@Base+0xe140>
  425520:	ldr	x1, [x25, #24]
  425524:	mov	x2, x26
  425528:	bl	402580 <memcpy@plt>
  42552c:	ldur	x9, [x29, #-32]
  425530:	stur	wzr, [x29, #-4]
  425534:	cbz	x9, 4255ec <_obstack_memory_used@@Base+0xe0d0>
  425538:	ldur	x8, [x29, #-24]
  42553c:	ldr	w26, [sp, #12]
  425540:	cbnz	x8, 42566c <_obstack_memory_used@@Base+0xe150>
  425544:	ldur	x8, [x29, #-16]
  425548:	str	x20, [x8]
  42554c:	ldur	x8, [x29, #-24]
  425550:	add	x8, x8, #0x1
  425554:	stur	x8, [x29, #-24]
  425558:	b	425590 <_obstack_memory_used@@Base+0xe074>
  42555c:	mov	w25, wzr
  425560:	stp	xzr, xzr, [x29, #-32]
  425564:	stur	xzr, [x29, #-16]
  425568:	stur	wzr, [x29, #-4]
  42556c:	mov	w8, #0x1                   	// #1
  425570:	dup	v0.2d, x8
  425574:	mov	w0, #0x8                   	// #8
  425578:	stur	q0, [x29, #-32]
  42557c:	bl	402730 <malloc@plt>
  425580:	stur	x0, [x29, #-16]
  425584:	cbz	x0, 425638 <_obstack_memory_used@@Base+0xe11c>
  425588:	str	x20, [x0]
  42558c:	cbnz	w25, 425648 <_obstack_memory_used@@Base+0xe12c>
  425590:	sub	x0, x29, #0x4
  425594:	sub	x2, x29, #0x20
  425598:	mov	x1, x23
  42559c:	bl	42588c <_obstack_memory_used@@Base+0xe370>
  4255a0:	ldr	x8, [x22, #184]
  4255a4:	lsl	x20, x27, #3
  4255a8:	str	x0, [x8, x20]
  4255ac:	ldur	x0, [x29, #-16]
  4255b0:	bl	402a10 <free@plt>
  4255b4:	ldr	x8, [x22, #184]
  4255b8:	ldur	w9, [x29, #-4]
  4255bc:	ldr	x8, [x8, x20]
  4255c0:	cmp	x8, #0x0
  4255c4:	cset	w10, eq  // eq = none
  4255c8:	cmp	w9, #0x0
  4255cc:	cset	w11, ne  // ne = any
  4255d0:	tst	w10, w11
  4255d4:	and	w8, w10, w11
  4255d8:	csel	w26, w9, w26, ne  // ne = any
  4255dc:	cbz	w8, 425338 <_obstack_memory_used@@Base+0xde1c>
  4255e0:	cmp	w8, #0x4
  4255e4:	b.eq	425338 <_obstack_memory_used@@Base+0xde1c>  // b.none
  4255e8:	b	425724 <_obstack_memory_used@@Base+0xe208>
  4255ec:	mov	w25, wzr
  4255f0:	ldr	w26, [sp, #12]
  4255f4:	b	42556c <_obstack_memory_used@@Base+0xe050>
  4255f8:	stp	xzr, xzr, [x29, #-32]
  4255fc:	mov	w25, #0xc                   	// #12
  425600:	b	425410 <_obstack_memory_used@@Base+0xdef4>
  425604:	cmp	w26, #0x0
  425608:	ldur	x23, [x29, #-40]
  42560c:	csel	w8, w27, w26, eq  // eq = none
  425610:	cmp	w25, #0x0
  425614:	csel	w26, w8, w25, eq  // eq = none
  425618:	stur	w26, [x29, #-4]
  42561c:	mov	w8, #0x1                   	// #1
  425620:	b	4255dc <_obstack_memory_used@@Base+0xe0c0>
  425624:	mov	w26, #0xc                   	// #12
  425628:	stp	xzr, xzr, [x29, #-32]
  42562c:	stur	w26, [x29, #-4]
  425630:	mov	w8, #0x1                   	// #1
  425634:	b	4255dc <_obstack_memory_used@@Base+0xe0c0>
  425638:	stp	xzr, xzr, [x29, #-32]
  42563c:	cbnz	w25, 42564c <_obstack_memory_used@@Base+0xe130>
  425640:	mov	w25, #0xc                   	// #12
  425644:	b	42564c <_obstack_memory_used@@Base+0xe130>
  425648:	bl	402a10 <free@plt>
  42564c:	stur	w25, [x29, #-4]
  425650:	mov	w8, #0x1                   	// #1
  425654:	mov	w26, w25
  425658:	b	4255dc <_obstack_memory_used@@Base+0xe0c0>
  42565c:	mov	w25, #0xc                   	// #12
  425660:	stp	xzr, xzr, [x29, #-32]
  425664:	stur	w25, [x29, #-4]
  425668:	b	4255f0 <_obstack_memory_used@@Base+0xe0d4>
  42566c:	cmp	x9, x8
  425670:	b.ne	425698 <_obstack_memory_used@@Base+0xe17c>  // b.any
  425674:	ldur	x0, [x29, #-16]
  425678:	lsl	x8, x9, #1
  42567c:	lsl	x1, x9, #4
  425680:	stur	x8, [x29, #-32]
  425684:	bl	402870 <realloc@plt>
  425688:	cbz	x0, 425714 <_obstack_memory_used@@Base+0xe1f8>
  42568c:	ldur	x8, [x29, #-24]
  425690:	stur	x0, [x29, #-16]
  425694:	b	42569c <_obstack_memory_used@@Base+0xe180>
  425698:	ldur	x0, [x29, #-16]
  42569c:	ldr	x9, [x0]
  4256a0:	cmp	x9, x20
  4256a4:	b.le	4256d0 <_obstack_memory_used@@Base+0xe1b4>
  4256a8:	cmp	x8, #0x1
  4256ac:	b.lt	4256f8 <_obstack_memory_used@@Base+0xe1dc>  // b.tstop
  4256b0:	mov	x9, x8
  4256b4:	add	x10, x0, x9, lsl #3
  4256b8:	ldur	x11, [x10, #-8]
  4256bc:	subs	x8, x9, #0x1
  4256c0:	mov	x9, x8
  4256c4:	str	x11, [x10]
  4256c8:	b.gt	4256b4 <_obstack_memory_used@@Base+0xe198>
  4256cc:	b	4256f8 <_obstack_memory_used@@Base+0xe1dc>
  4256d0:	add	x9, x0, x8, lsl #3
  4256d4:	ldur	x9, [x9, #-8]
  4256d8:	cmp	x9, x20
  4256dc:	b.le	4256f8 <_obstack_memory_used@@Base+0xe1dc>
  4256e0:	add	x10, x0, x8, lsl #3
  4256e4:	str	x9, [x10]
  4256e8:	ldur	x9, [x10, #-16]
  4256ec:	sub	x8, x8, #0x1
  4256f0:	cmp	x9, x20
  4256f4:	b.gt	4256e0 <_obstack_memory_used@@Base+0xe1c4>
  4256f8:	str	x20, [x0, x8, lsl #3]
  4256fc:	ldur	x8, [x29, #-24]
  425700:	ldr	w26, [sp, #12]
  425704:	ldur	x23, [x29, #-40]
  425708:	add	x8, x8, #0x1
  42570c:	stur	x8, [x29, #-24]
  425710:	b	425590 <_obstack_memory_used@@Base+0xe074>
  425714:	ldur	x0, [x29, #-16]
  425718:	bl	402a10 <free@plt>
  42571c:	ldur	x23, [x29, #-40]
  425720:	b	425640 <_obstack_memory_used@@Base+0xe124>
  425724:	cmp	w8, #0x2
  425728:	b.ne	425738 <_obstack_memory_used@@Base+0xe21c>  // b.any
  42572c:	ldr	x8, [x22, #216]
  425730:	b	42532c <_obstack_memory_used@@Base+0xde10>
  425734:	mov	w26, wzr
  425738:	mov	w0, w26
  42573c:	ldp	x20, x19, [sp, #176]
  425740:	ldp	x22, x21, [sp, #160]
  425744:	ldp	x24, x23, [sp, #144]
  425748:	ldp	x26, x25, [sp, #128]
  42574c:	ldp	x28, x27, [sp, #112]
  425750:	ldp	x29, x30, [sp, #96]
  425754:	add	sp, sp, #0xc0
  425758:	ret
  42575c:	stp	x29, x30, [sp, #-64]!
  425760:	stp	x24, x23, [sp, #16]
  425764:	stp	x22, x21, [sp, #32]
  425768:	stp	x20, x19, [sp, #48]
  42576c:	mov	w21, w4
  425770:	mov	x22, x3
  425774:	mov	x19, x2
  425778:	mov	x20, x1
  42577c:	mov	x23, x0
  425780:	mov	w24, #0x18                  	// #24
  425784:	mov	x29, sp
  425788:	b	42579c <_obstack_memory_used@@Base+0xe280>
  42578c:	cbz	x9, 42586c <_obstack_memory_used@@Base+0xe350>
  425790:	madd	x8, x19, x24, x8
  425794:	ldr	x8, [x8, #16]
  425798:	ldr	x19, [x8]
  42579c:	ldr	x8, [x20, #8]
  4257a0:	subs	x9, x8, #0x1
  4257a4:	b.lt	4257e0 <_obstack_memory_used@@Base+0xe2c4>  // b.tstop
  4257a8:	ldr	x8, [x20, #16]
  4257ac:	mov	x10, xzr
  4257b0:	b.eq	4257d4 <_obstack_memory_used@@Base+0xe2b8>  // b.none
  4257b4:	add	x11, x10, x9
  4257b8:	lsr	x11, x11, #1
  4257bc:	ldr	x12, [x8, x11, lsl #3]
  4257c0:	cmp	x12, x19
  4257c4:	csinc	x10, x10, x11, ge  // ge = tcont
  4257c8:	csel	x9, x9, x11, lt  // lt = tstop
  4257cc:	cmp	x10, x9
  4257d0:	b.cc	4257b4 <_obstack_memory_used@@Base+0xe298>  // b.lo, b.ul, b.last
  4257d4:	ldr	x8, [x8, x10, lsl #3]
  4257d8:	cmp	x8, x19
  4257dc:	b.eq	42586c <_obstack_memory_used@@Base+0xe350>  // b.none
  4257e0:	ldr	x8, [x23]
  4257e4:	add	x9, x8, x19, lsl #4
  4257e8:	ldrb	w9, [x9, #8]
  4257ec:	cmp	w9, w21
  4257f0:	b.ne	425804 <_obstack_memory_used@@Base+0xe2e8>  // b.any
  4257f4:	lsl	x9, x19, #4
  4257f8:	ldr	x8, [x8, x9]
  4257fc:	cmp	x8, x22
  425800:	b.eq	425854 <_obstack_memory_used@@Base+0xe338>  // b.none
  425804:	mov	x0, x20
  425808:	mov	x1, x19
  42580c:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  425810:	tbz	w0, #0, 425884 <_obstack_memory_used@@Base+0xe368>
  425814:	ldr	x8, [x23, #40]
  425818:	madd	x9, x19, x24, x8
  42581c:	ldr	x9, [x9, #8]
  425820:	cmp	x9, #0x2
  425824:	b.ne	42578c <_obstack_memory_used@@Base+0xe270>  // b.any
  425828:	madd	x8, x19, x24, x8
  42582c:	ldr	x8, [x8, #16]
  425830:	mov	x0, x23
  425834:	mov	x1, x20
  425838:	mov	x3, x22
  42583c:	ldr	x2, [x8, #8]
  425840:	mov	w4, w21
  425844:	bl	42575c <_obstack_memory_used@@Base+0xe240>
  425848:	cbnz	w0, 425870 <_obstack_memory_used@@Base+0xe354>
  42584c:	ldr	x8, [x23, #40]
  425850:	b	425790 <_obstack_memory_used@@Base+0xe274>
  425854:	cmp	w21, #0x9
  425858:	b.ne	42586c <_obstack_memory_used@@Base+0xe350>  // b.any
  42585c:	mov	x0, x20
  425860:	mov	x1, x19
  425864:	bl	421514 <_obstack_memory_used@@Base+0x9ff8>
  425868:	tbz	w0, #0, 425884 <_obstack_memory_used@@Base+0xe368>
  42586c:	mov	w0, wzr
  425870:	ldp	x20, x19, [sp, #48]
  425874:	ldp	x22, x21, [sp, #32]
  425878:	ldp	x24, x23, [sp, #16]
  42587c:	ldp	x29, x30, [sp], #64
  425880:	ret
  425884:	mov	w0, #0xc                   	// #12
  425888:	b	425870 <_obstack_memory_used@@Base+0xe354>
  42588c:	stp	x29, x30, [sp, #-80]!
  425890:	stp	x24, x23, [sp, #32]
  425894:	stp	x22, x21, [sp, #48]
  425898:	stp	x20, x19, [sp, #64]
  42589c:	ldr	x24, [x2, #8]
  4258a0:	mov	x19, x0
  4258a4:	str	x25, [sp, #16]
  4258a8:	mov	x29, sp
  4258ac:	cbz	x24, 425ae4 <_obstack_memory_used@@Base+0xe5c8>
  4258b0:	mov	x22, x2
  4258b4:	mov	x20, x1
  4258b8:	subs	x8, x24, #0x1
  4258bc:	mov	x21, x24
  4258c0:	b.lt	425938 <_obstack_memory_used@@Base+0xe41c>  // b.tstop
  4258c4:	ldr	x9, [x22, #16]
  4258c8:	cmp	x24, #0x4
  4258cc:	b.cs	4258dc <_obstack_memory_used@@Base+0xe3c0>  // b.hs, b.nlast
  4258d0:	mov	x10, xzr
  4258d4:	mov	x21, x24
  4258d8:	b	425920 <_obstack_memory_used@@Base+0xe404>
  4258dc:	and	x10, x24, #0xfffffffffffffffc
  4258e0:	movi	v1.2d, #0x0
  4258e4:	movi	v0.2d, #0x0
  4258e8:	mov	v1.d[0], x24
  4258ec:	add	x11, x9, #0x10
  4258f0:	mov	x12, x10
  4258f4:	ldp	q2, q3, [x11, #-16]
  4258f8:	subs	x12, x12, #0x4
  4258fc:	add	x11, x11, #0x20
  425900:	add	v1.2d, v2.2d, v1.2d
  425904:	add	v0.2d, v3.2d, v0.2d
  425908:	b.ne	4258f4 <_obstack_memory_used@@Base+0xe3d8>  // b.any
  42590c:	add	v0.2d, v0.2d, v1.2d
  425910:	addp	d0, v0.2d
  425914:	cmp	x24, x10
  425918:	fmov	x21, d0
  42591c:	b.eq	425938 <_obstack_memory_used@@Base+0xe41c>  // b.none
  425920:	sub	x11, x24, x10
  425924:	add	x9, x9, x10, lsl #3
  425928:	ldr	x10, [x9], #8
  42592c:	subs	x11, x11, #0x1
  425930:	add	x21, x10, x21
  425934:	b.ne	425928 <_obstack_memory_used@@Base+0xe40c>  // b.any
  425938:	ldr	x9, [x20, #136]
  42593c:	ldr	x10, [x20, #64]
  425940:	and	x11, x9, x21
  425944:	mov	w9, #0x18                  	// #24
  425948:	mul	x9, x11, x9
  42594c:	ldr	x9, [x10, x9]
  425950:	cmp	x9, #0x1
  425954:	b.lt	4259cc <_obstack_memory_used@@Base+0xe4b0>  // b.tstop
  425958:	cbz	x22, 4259cc <_obstack_memory_used@@Base+0xe4b0>
  42595c:	mov	w12, #0x18                  	// #24
  425960:	madd	x10, x11, x12, x10
  425964:	ldr	x10, [x10, #16]
  425968:	mov	x11, xzr
  42596c:	b	42597c <_obstack_memory_used@@Base+0xe460>
  425970:	add	x11, x11, #0x1
  425974:	cmp	x11, x9
  425978:	b.ge	4259cc <_obstack_memory_used@@Base+0xe4b0>  // b.tcont
  42597c:	ldr	x23, [x10, x11, lsl #3]
  425980:	ldr	x12, [x23]
  425984:	cmp	x21, x12
  425988:	b.ne	425970 <_obstack_memory_used@@Base+0xe454>  // b.any
  42598c:	ldr	x12, [x23, #16]
  425990:	cmp	x12, x24
  425994:	b.ne	425970 <_obstack_memory_used@@Base+0xe454>  // b.any
  425998:	mov	x12, x8
  42599c:	add	x13, x12, #0x1
  4259a0:	cmp	x13, #0x1
  4259a4:	b.lt	425ac8 <_obstack_memory_used@@Base+0xe5ac>  // b.tstop
  4259a8:	ldr	x13, [x23, #24]
  4259ac:	ldr	x14, [x22, #16]
  4259b0:	lsl	x15, x12, #3
  4259b4:	sub	x12, x12, #0x1
  4259b8:	ldr	x13, [x13, x15]
  4259bc:	ldr	x14, [x14, x15]
  4259c0:	cmp	x13, x14
  4259c4:	b.eq	42599c <_obstack_memory_used@@Base+0xe480>  // b.none
  4259c8:	b	425970 <_obstack_memory_used@@Base+0xe454>
  4259cc:	mov	w0, #0x70                  	// #112
  4259d0:	mov	w1, #0x1                   	// #1
  4259d4:	bl	402840 <calloc@plt>
  4259d8:	cbz	x0, 425b04 <_obstack_memory_used@@Base+0xe5e8>
  4259dc:	mov	x23, x0
  4259e0:	add	x25, x0, #0x8
  4259e4:	cmp	x24, #0x1
  4259e8:	str	x24, [x0, #16]
  4259ec:	b.lt	425aa8 <_obstack_memory_used@@Base+0xe58c>  // b.tstop
  4259f0:	str	x24, [x23, #8]
  4259f4:	lsl	x24, x24, #3
  4259f8:	mov	x0, x24
  4259fc:	bl	402730 <malloc@plt>
  425a00:	str	x0, [x23, #24]
  425a04:	cbz	x0, 425afc <_obstack_memory_used@@Base+0xe5e0>
  425a08:	ldr	x1, [x22, #16]
  425a0c:	mov	x2, x24
  425a10:	bl	402580 <memcpy@plt>
  425a14:	ldr	x8, [x22, #8]
  425a18:	str	x25, [x23, #80]
  425a1c:	cmp	x8, #0x1
  425a20:	b.lt	425ab4 <_obstack_memory_used@@Base+0xe598>  // b.tstop
  425a24:	ldr	x9, [x20]
  425a28:	ldr	x10, [x22, #16]
  425a2c:	b	425a50 <_obstack_memory_used@@Base+0xe534>
  425a30:	ldr	w11, [x11]
  425a34:	tst	w11, #0x3ff00
  425a38:	b.eq	425a44 <_obstack_memory_used@@Base+0xe528>  // b.none
  425a3c:	orr	w11, w12, #0x80
  425a40:	strb	w11, [x23, #104]
  425a44:	subs	x8, x8, #0x1
  425a48:	add	x10, x10, #0x8
  425a4c:	b.eq	425ab4 <_obstack_memory_used@@Base+0xe598>  // b.none
  425a50:	ldr	x11, [x10]
  425a54:	add	x11, x9, x11, lsl #4
  425a58:	ldr	w12, [x11, #8]!
  425a5c:	and	w13, w12, #0x3ffff
  425a60:	cmp	w13, #0x1
  425a64:	b.eq	425a44 <_obstack_memory_used@@Base+0xe528>  // b.none
  425a68:	ldrb	w14, [x23, #104]
  425a6c:	lsr	w15, w12, #15
  425a70:	and	w13, w12, #0xff
  425a74:	and	w12, w15, #0x20
  425a78:	orr	w12, w14, w12
  425a7c:	cmp	w13, #0xc
  425a80:	strb	w12, [x23, #104]
  425a84:	b.eq	425a3c <_obstack_memory_used@@Base+0xe520>  // b.none
  425a88:	cmp	w13, #0x4
  425a8c:	b.eq	425aa0 <_obstack_memory_used@@Base+0xe584>  // b.none
  425a90:	cmp	w13, #0x2
  425a94:	b.ne	425a30 <_obstack_memory_used@@Base+0xe514>  // b.any
  425a98:	orr	w11, w12, #0x10
  425a9c:	b	425a40 <_obstack_memory_used@@Base+0xe524>
  425aa0:	orr	w11, w12, #0x40
  425aa4:	b	425a40 <_obstack_memory_used@@Base+0xe524>
  425aa8:	stp	xzr, xzr, [x25]
  425aac:	str	xzr, [x25, #16]
  425ab0:	str	x25, [x23, #80]
  425ab4:	mov	x0, x20
  425ab8:	mov	x1, x23
  425abc:	mov	x2, x21
  425ac0:	bl	421de4 <_obstack_memory_used@@Base+0xa8c8>
  425ac4:	cbnz	w0, 425af0 <_obstack_memory_used@@Base+0xe5d4>
  425ac8:	mov	x0, x23
  425acc:	ldp	x20, x19, [sp, #64]
  425ad0:	ldp	x22, x21, [sp, #48]
  425ad4:	ldp	x24, x23, [sp, #32]
  425ad8:	ldr	x25, [sp, #16]
  425adc:	ldp	x29, x30, [sp], #80
  425ae0:	ret
  425ae4:	mov	x23, xzr
  425ae8:	str	wzr, [x19]
  425aec:	b	425ac8 <_obstack_memory_used@@Base+0xe5ac>
  425af0:	mov	x0, x23
  425af4:	bl	41bfd8 <_obstack_memory_used@@Base+0x4abc>
  425af8:	b	425b04 <_obstack_memory_used@@Base+0xe5e8>
  425afc:	mov	x0, x23
  425b00:	bl	402a10 <free@plt>
  425b04:	mov	x23, xzr
  425b08:	mov	w8, #0xc                   	// #12
  425b0c:	str	w8, [x19]
  425b10:	b	425ac8 <_obstack_memory_used@@Base+0xe5ac>
  425b14:	stp	x29, x30, [sp, #-48]!
  425b18:	stp	x22, x21, [sp, #16]
  425b1c:	stp	x20, x19, [sp, #32]
  425b20:	ldr	x8, [x0]
  425b24:	mov	x29, sp
  425b28:	add	x9, x8, x1, lsl #4
  425b2c:	ldrb	w10, [x9, #8]
  425b30:	cmp	w10, #0x7
  425b34:	b.eq	425d68 <_obstack_memory_used@@Base+0xe84c>  // b.none
  425b38:	ldr	w9, [x2, #144]
  425b3c:	cmp	w9, #0x1
  425b40:	b.ne	425ba4 <_obstack_memory_used@@Base+0xe688>  // b.any
  425b44:	mov	w20, #0x1                   	// #1
  425b48:	cmp	w10, #0x5
  425b4c:	b.eq	425bf0 <_obstack_memory_used@@Base+0xe6d4>  // b.none
  425b50:	cmp	w10, #0x6
  425b54:	mov	w0, wzr
  425b58:	b.ne	425d10 <_obstack_memory_used@@Base+0xe7f4>  // b.any
  425b5c:	cmp	w20, #0x2
  425b60:	b.lt	425d10 <_obstack_memory_used@@Base+0xe7f4>  // b.tstop
  425b64:	lsl	x10, x1, #4
  425b68:	ldr	x21, [x8, x10]
  425b6c:	ldr	x8, [x21, #64]
  425b70:	cbnz	x8, 425b84 <_obstack_memory_used@@Base+0xe668>
  425b74:	ldr	x10, [x21, #72]
  425b78:	cbnz	x10, 425b84 <_obstack_memory_used@@Base+0xe668>
  425b7c:	ldr	x10, [x21, #40]
  425b80:	cbz	x10, 425d54 <_obstack_memory_used@@Base+0xe838>
  425b84:	cmp	w9, #0x1
  425b88:	b.ne	425c4c <_obstack_memory_used@@Base+0xe730>  // b.any
  425b8c:	ldr	x9, [x2, #8]
  425b90:	ldrb	w19, [x9, x3]
  425b94:	ldr	x9, [x21, #40]
  425b98:	cmp	x9, #0x1
  425b9c:	b.ge	425c60 <_obstack_memory_used@@Base+0xe744>  // b.tcont
  425ba0:	b	425c80 <_obstack_memory_used@@Base+0xe764>
  425ba4:	ldr	x11, [x2, #48]
  425ba8:	add	x12, x3, #0x1
  425bac:	cmp	x12, x11
  425bb0:	b.ge	425be4 <_obstack_memory_used@@Base+0xe6c8>  // b.tcont
  425bb4:	ldr	x13, [x2, #16]
  425bb8:	sub	w20, w11, w3
  425bbc:	sub	x12, x11, x3
  425bc0:	mov	w11, #0x1                   	// #1
  425bc4:	add	x13, x13, x3, lsl #2
  425bc8:	ldr	w14, [x13, x11, lsl #2]
  425bcc:	cmn	w14, #0x1
  425bd0:	b.ne	425c3c <_obstack_memory_used@@Base+0xe720>  // b.any
  425bd4:	add	x11, x11, #0x1
  425bd8:	cmp	x12, x11
  425bdc:	b.ne	425bc8 <_obstack_memory_used@@Base+0xe6ac>  // b.any
  425be0:	b	425be8 <_obstack_memory_used@@Base+0xe6cc>
  425be4:	mov	w20, #0x1                   	// #1
  425be8:	cmp	w10, #0x5
  425bec:	b.ne	425b50 <_obstack_memory_used@@Base+0xe634>  // b.any
  425bf0:	cmp	w20, #0x2
  425bf4:	b.ge	425c00 <_obstack_memory_used@@Base+0xe6e4>  // b.tcont
  425bf8:	mov	w0, wzr
  425bfc:	b	425d10 <_obstack_memory_used@@Base+0xe7f4>
  425c00:	ldr	x8, [x0, #216]
  425c04:	tbnz	w8, #6, 425c18 <_obstack_memory_used@@Base+0xe6fc>
  425c08:	ldr	x9, [x2, #8]
  425c0c:	ldrb	w9, [x9, x3]
  425c10:	cmp	w9, #0xa
  425c14:	b.eq	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.none
  425c18:	tbz	w8, #7, 425c28 <_obstack_memory_used@@Base+0xe70c>
  425c1c:	ldr	x8, [x2, #8]
  425c20:	ldrb	w8, [x8, x3]
  425c24:	cbz	w8, 425d28 <_obstack_memory_used@@Base+0xe80c>
  425c28:	mov	w0, w20
  425c2c:	ldp	x20, x19, [sp, #32]
  425c30:	ldp	x22, x21, [sp, #16]
  425c34:	ldp	x29, x30, [sp], #48
  425c38:	ret
  425c3c:	mov	w20, w11
  425c40:	cmp	w10, #0x5
  425c44:	b.eq	425bf0 <_obstack_memory_used@@Base+0xe6d4>  // b.none
  425c48:	b	425b50 <_obstack_memory_used@@Base+0xe634>
  425c4c:	ldr	x9, [x2, #16]
  425c50:	ldr	w19, [x9, x3, lsl #2]
  425c54:	ldr	x9, [x21, #40]
  425c58:	cmp	x9, #0x1
  425c5c:	b.lt	425c80 <_obstack_memory_used@@Base+0xe764>  // b.tstop
  425c60:	ldr	x10, [x21]
  425c64:	mov	x11, xzr
  425c68:	ldr	w12, [x10, x11, lsl #2]
  425c6c:	cmp	w19, w12
  425c70:	b.eq	425cf4 <_obstack_memory_used@@Base+0xe7d8>  // b.none
  425c74:	add	x11, x11, #0x1
  425c78:	cmp	x11, x9
  425c7c:	b.lt	425c68 <_obstack_memory_used@@Base+0xe74c>  // b.tstop
  425c80:	ldr	x9, [x21, #72]
  425c84:	cmp	x9, #0x1
  425c88:	b.lt	425cb8 <_obstack_memory_used@@Base+0xe79c>  // b.tstop
  425c8c:	mov	x22, xzr
  425c90:	ldr	x8, [x21, #24]
  425c94:	mov	w0, w19
  425c98:	ldr	x1, [x8, x22, lsl #3]
  425c9c:	bl	402720 <iswctype@plt>
  425ca0:	cbnz	w0, 425cf4 <_obstack_memory_used@@Base+0xe7d8>
  425ca4:	ldr	x8, [x21, #72]
  425ca8:	add	x22, x22, #0x1
  425cac:	cmp	x22, x8
  425cb0:	b.lt	425c90 <_obstack_memory_used@@Base+0xe774>  // b.tstop
  425cb4:	ldr	x8, [x21, #64]
  425cb8:	cmp	x8, #0x1
  425cbc:	b.lt	425d04 <_obstack_memory_used@@Base+0xe7e8>  // b.tstop
  425cc0:	ldr	x9, [x21, #8]
  425cc4:	mov	x10, xzr
  425cc8:	b	425cd8 <_obstack_memory_used@@Base+0xe7bc>
  425ccc:	add	x10, x10, #0x1
  425cd0:	cmp	x10, x8
  425cd4:	b.ge	425d04 <_obstack_memory_used@@Base+0xe7e8>  // b.tcont
  425cd8:	ldr	w11, [x9, x10, lsl #2]
  425cdc:	cmp	w11, w19
  425ce0:	b.hi	425ccc <_obstack_memory_used@@Base+0xe7b0>  // b.pmore
  425ce4:	ldr	x11, [x21, #16]
  425ce8:	ldr	w11, [x11, x10, lsl #2]
  425cec:	cmp	w19, w11
  425cf0:	b.hi	425ccc <_obstack_memory_used@@Base+0xe7b0>  // b.pmore
  425cf4:	mov	w0, w20
  425cf8:	ldrb	w8, [x21, #32]
  425cfc:	tbz	w8, #0, 425d10 <_obstack_memory_used@@Base+0xe7f4>
  425d00:	b	425d20 <_obstack_memory_used@@Base+0xe804>
  425d04:	mov	w0, wzr
  425d08:	ldrb	w8, [x21, #32]
  425d0c:	tbnz	w8, #0, 425d20 <_obstack_memory_used@@Base+0xe804>
  425d10:	ldp	x20, x19, [sp, #32]
  425d14:	ldp	x22, x21, [sp, #16]
  425d18:	ldp	x29, x30, [sp], #48
  425d1c:	ret
  425d20:	cmp	w0, #0x0
  425d24:	b.le	425d3c <_obstack_memory_used@@Base+0xe820>
  425d28:	mov	w0, wzr
  425d2c:	ldp	x20, x19, [sp, #32]
  425d30:	ldp	x22, x21, [sp, #16]
  425d34:	ldp	x29, x30, [sp], #48
  425d38:	ret
  425d3c:	cmp	w20, #0x1
  425d40:	csinc	w0, w20, wzr, gt
  425d44:	ldp	x20, x19, [sp, #32]
  425d48:	ldp	x22, x21, [sp, #16]
  425d4c:	ldp	x29, x30, [sp], #48
  425d50:	ret
  425d54:	mov	w19, wzr
  425d58:	ldr	x9, [x21, #40]
  425d5c:	cmp	x9, #0x1
  425d60:	b.ge	425c60 <_obstack_memory_used@@Base+0xe744>  // b.tcont
  425d64:	b	425c80 <_obstack_memory_used@@Base+0xe764>
  425d68:	ldr	x8, [x2, #8]
  425d6c:	ldrb	w10, [x8, x3]
  425d70:	cmp	w10, #0xc2
  425d74:	b.cc	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.lo, b.ul, b.last
  425d78:	ldr	x9, [x2, #88]
  425d7c:	add	x11, x3, #0x2
  425d80:	cmp	x11, x9
  425d84:	b.gt	425d28 <_obstack_memory_used@@Base+0xe80c>
  425d88:	add	x11, x3, x8
  425d8c:	ldrb	w11, [x11, #1]
  425d90:	cmp	w10, #0xdf
  425d94:	b.hi	425dc0 <_obstack_memory_used@@Base+0xe8a4>  // b.pmore
  425d98:	sxtb	w8, w11
  425d9c:	cmp	w11, #0xbf
  425da0:	mov	w9, #0xffffffff            	// #-1
  425da4:	ccmp	w8, w9, #0x0, ls  // ls = plast
  425da8:	mov	w8, #0x2                   	// #2
  425dac:	csel	w0, wzr, w8, gt
  425db0:	ldp	x20, x19, [sp, #32]
  425db4:	ldp	x22, x21, [sp, #16]
  425db8:	ldp	x29, x30, [sp], #48
  425dbc:	ret
  425dc0:	cmp	w10, #0xef
  425dc4:	b.hi	425de0 <_obstack_memory_used@@Base+0xe8c4>  // b.pmore
  425dc8:	cmp	w10, #0xe0
  425dcc:	mov	w10, #0x3                   	// #3
  425dd0:	b.ne	425e3c <_obstack_memory_used@@Base+0xe920>  // b.any
  425dd4:	cmp	w11, #0xa0
  425dd8:	b.cc	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.lo, b.ul, b.last
  425ddc:	b	425e3c <_obstack_memory_used@@Base+0xe920>
  425de0:	cmp	w10, #0xf7
  425de4:	b.hi	425e00 <_obstack_memory_used@@Base+0xe8e4>  // b.pmore
  425de8:	cmp	w10, #0xf0
  425dec:	mov	w10, #0x4                   	// #4
  425df0:	b.ne	425e3c <_obstack_memory_used@@Base+0xe920>  // b.any
  425df4:	cmp	w11, #0x90
  425df8:	b.cc	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.lo, b.ul, b.last
  425dfc:	b	425e3c <_obstack_memory_used@@Base+0xe920>
  425e00:	cmp	w10, #0xfb
  425e04:	b.hi	425e20 <_obstack_memory_used@@Base+0xe904>  // b.pmore
  425e08:	cmp	w10, #0xf8
  425e0c:	mov	w10, #0x5                   	// #5
  425e10:	b.ne	425e3c <_obstack_memory_used@@Base+0xe920>  // b.any
  425e14:	cmp	w11, #0x88
  425e18:	b.cc	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.lo, b.ul, b.last
  425e1c:	b	425e3c <_obstack_memory_used@@Base+0xe920>
  425e20:	cmp	w10, #0xfd
  425e24:	b.hi	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.pmore
  425e28:	cmp	w10, #0xfc
  425e2c:	mov	w10, #0x6                   	// #6
  425e30:	b.ne	425e3c <_obstack_memory_used@@Base+0xe920>  // b.any
  425e34:	cmp	w11, #0x84
  425e38:	b.cc	425d28 <_obstack_memory_used@@Base+0xe80c>  // b.lo, b.ul, b.last
  425e3c:	add	x11, x10, x3
  425e40:	cmp	x11, x9
  425e44:	b.gt	425d28 <_obstack_memory_used@@Base+0xe80c>
  425e48:	add	x8, x3, x8
  425e4c:	sub	x9, x10, #0x1
  425e50:	add	x8, x8, #0x1
  425e54:	ldrb	w11, [x8]
  425e58:	mov	w0, wzr
  425e5c:	sxtb	w12, w11
  425e60:	tbz	w12, #31, 425d10 <_obstack_memory_used@@Base+0xe7f4>
  425e64:	cmp	w11, #0xbf
  425e68:	b.hi	425d10 <_obstack_memory_used@@Base+0xe7f4>  // b.pmore
  425e6c:	subs	x9, x9, #0x1
  425e70:	add	x8, x8, #0x1
  425e74:	b.ne	425e54 <_obstack_memory_used@@Base+0xe938>  // b.any
  425e78:	mov	w0, w10
  425e7c:	ldp	x20, x19, [sp, #32]
  425e80:	ldp	x22, x21, [sp, #16]
  425e84:	ldp	x29, x30, [sp], #48
  425e88:	ret
  425e8c:	sub	sp, sp, #0x30
  425e90:	stp	x29, x30, [sp, #16]
  425e94:	ldr	w10, [x1, #8]
  425e98:	str	x19, [sp, #32]
  425e9c:	add	x29, sp, #0x10
  425ea0:	and	w8, w10, #0xff
  425ea4:	sub	w11, w8, #0x1
  425ea8:	cmp	w11, #0x6
  425eac:	mov	w8, wzr
  425eb0:	b.hi	426014 <_obstack_memory_used@@Base+0xeaf8>  // b.pmore
  425eb4:	ldr	x9, [x0, #8]
  425eb8:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x12ae4>
  425ebc:	add	x12, x12, #0x76e
  425ec0:	ldrb	w9, [x9, x2]
  425ec4:	adr	x13, 425ed4 <_obstack_memory_used@@Base+0xe9b8>
  425ec8:	ldrb	w14, [x12, x11]
  425ecc:	add	x13, x13, x14, lsl #2
  425ed0:	br	x13
  425ed4:	ldrb	w8, [x1]
  425ed8:	cmp	w8, w9
  425edc:	b.eq	425f30 <_obstack_memory_used@@Base+0xea14>  // b.none
  425ee0:	b	426010 <_obstack_memory_used@@Base+0xeaf4>
  425ee4:	ldr	x8, [x1]
  425ee8:	lsr	x11, x9, #3
  425eec:	and	x11, x11, #0x18
  425ef0:	ldr	x8, [x8, x11]
  425ef4:	lsr	x8, x8, x9
  425ef8:	tbnz	w8, #0, 425f30 <_obstack_memory_used@@Base+0xea14>
  425efc:	b	426010 <_obstack_memory_used@@Base+0xeaf4>
  425f00:	sxtb	w8, w9
  425f04:	tbnz	w8, #31, 426010 <_obstack_memory_used@@Base+0xeaf4>
  425f08:	cbz	w9, 425f24 <_obstack_memory_used@@Base+0xea08>
  425f0c:	cmp	w9, #0xa
  425f10:	b.ne	425f30 <_obstack_memory_used@@Base+0xea14>  // b.any
  425f14:	ldr	x8, [x0, #152]
  425f18:	ldrb	w8, [x8, #216]
  425f1c:	tbnz	w8, #6, 425f30 <_obstack_memory_used@@Base+0xea14>
  425f20:	b	426010 <_obstack_memory_used@@Base+0xeaf4>
  425f24:	ldr	x8, [x0, #152]
  425f28:	ldrb	w8, [x8, #216]
  425f2c:	tbnz	w8, #7, 426010 <_obstack_memory_used@@Base+0xeaf4>
  425f30:	tst	w10, #0x3ff00
  425f34:	b.eq	425f84 <_obstack_memory_used@@Base+0xea68>  // b.none
  425f38:	tbnz	x2, #63, 425f70 <_obstack_memory_used@@Base+0xea54>
  425f3c:	ldr	x8, [x0, #88]
  425f40:	cmp	x8, x2
  425f44:	b.eq	426048 <_obstack_memory_used@@Base+0xeb2c>  // b.none
  425f48:	ldr	w8, [x0, #144]
  425f4c:	cmp	w8, #0x2
  425f50:	b.lt	425f8c <_obstack_memory_used@@Base+0xea70>  // b.tstop
  425f54:	ldr	x9, [x0, #16]
  425f58:	ldr	w8, [x9, x2, lsl #2]
  425f5c:	cmn	w8, #0x1
  425f60:	b.ne	425fb0 <_obstack_memory_used@@Base+0xea94>  // b.any
  425f64:	sub	x2, x2, #0x1
  425f68:	cmn	x2, #0x1
  425f6c:	b.ne	425f58 <_obstack_memory_used@@Base+0xea3c>  // b.any
  425f70:	ldr	w11, [x0, #112]
  425f74:	tst	w11, #0x1
  425f78:	cset	w12, eq  // eq = none
  425f7c:	tbnz	w10, #10, 425ff8 <_obstack_memory_used@@Base+0xeadc>
  425f80:	b	425ffc <_obstack_memory_used@@Base+0xeae0>
  425f84:	mov	w8, #0x1                   	// #1
  425f88:	b	426014 <_obstack_memory_used@@Base+0xeaf8>
  425f8c:	ldr	x8, [x0, #128]
  425f90:	lsr	x11, x9, #3
  425f94:	and	x11, x11, #0x18
  425f98:	ldr	x8, [x8, x11]
  425f9c:	lsr	x8, x8, x9
  425fa0:	tbz	w8, #0, 425fe0 <_obstack_memory_used@@Base+0xeac4>
  425fa4:	mov	w12, wzr
  425fa8:	mov	w11, #0x1                   	// #1
  425fac:	b	425ffc <_obstack_memory_used@@Base+0xeae0>
  425fb0:	ldrb	w9, [x0, #142]
  425fb4:	cbnz	w9, 426068 <_obstack_memory_used@@Base+0xeb4c>
  425fb8:	cmp	w8, #0xa
  425fbc:	b.ne	425fe8 <_obstack_memory_used@@Base+0xeacc>  // b.any
  425fc0:	ldrb	w8, [x0, #141]
  425fc4:	cmp	w8, #0x0
  425fc8:	cset	w8, ne  // ne = any
  425fcc:	lsl	w11, w8, #1
  425fd0:	tst	w11, #0x1
  425fd4:	cset	w12, eq  // eq = none
  425fd8:	tbnz	w10, #10, 425ff8 <_obstack_memory_used@@Base+0xeadc>
  425fdc:	b	425ffc <_obstack_memory_used@@Base+0xeae0>
  425fe0:	cmp	w9, #0xa
  425fe4:	b.eq	425fc0 <_obstack_memory_used@@Base+0xeaa4>  // b.none
  425fe8:	mov	w11, wzr
  425fec:	tst	w11, #0x1
  425ff0:	cset	w12, eq  // eq = none
  425ff4:	tbz	w10, #10, 425ffc <_obstack_memory_used@@Base+0xeae0>
  425ff8:	tbz	w11, #0, 426010 <_obstack_memory_used@@Base+0xeaf4>
  425ffc:	ldr	w8, [x1, #8]
  426000:	tbnz	w12, #0, 426008 <_obstack_memory_used@@Base+0xeaec>
  426004:	tbnz	w8, #11, 426010 <_obstack_memory_used@@Base+0xeaf4>
  426008:	tbnz	w11, #1, 426028 <_obstack_memory_used@@Base+0xeb0c>
  42600c:	tbz	w8, #13, 426028 <_obstack_memory_used@@Base+0xeb0c>
  426010:	mov	w8, wzr
  426014:	mov	w0, w8
  426018:	ldr	x19, [sp, #32]
  42601c:	ldp	x29, x30, [sp, #16]
  426020:	add	sp, sp, #0x30
  426024:	ret
  426028:	tst	w8, #0x8000
  42602c:	cset	w8, eq  // eq = none
  426030:	and	w9, w11, #0x8
  426034:	orr	w0, w8, w9, lsr #3
  426038:	ldr	x19, [sp, #32]
  42603c:	ldp	x29, x30, [sp, #16]
  426040:	add	sp, sp, #0x30
  426044:	ret
  426048:	ldr	w8, [x0, #160]
  42604c:	mov	w9, #0xa                   	// #10
  426050:	and	w8, w8, #0x2
  426054:	eor	w11, w8, w9
  426058:	tst	w11, #0x1
  42605c:	cset	w12, eq  // eq = none
  426060:	tbnz	w10, #10, 425ff8 <_obstack_memory_used@@Base+0xeadc>
  426064:	b	425ffc <_obstack_memory_used@@Base+0xeae0>
  426068:	str	x0, [sp]
  42606c:	mov	w0, w8
  426070:	stur	w10, [x29, #-4]
  426074:	str	x1, [x29, #24]
  426078:	mov	w19, w8
  42607c:	bl	402b10 <iswalnum@plt>
  426080:	mov	w12, wzr
  426084:	cmp	w19, #0x5f
  426088:	mov	w11, #0x1                   	// #1
  42608c:	b.eq	4260ac <_obstack_memory_used@@Base+0xeb90>  // b.none
  426090:	mov	w9, w0
  426094:	ldr	x1, [x29, #24]
  426098:	ldr	x0, [sp]
  42609c:	ldur	w10, [x29, #-4]
  4260a0:	mov	w8, w19
  4260a4:	cbz	w9, 425fb8 <_obstack_memory_used@@Base+0xea9c>
  4260a8:	b	425ffc <_obstack_memory_used@@Base+0xeae0>
  4260ac:	ldr	x1, [x29, #24]
  4260b0:	b	425ffc <_obstack_memory_used@@Base+0xeae0>
  4260b4:	sub	sp, sp, #0xd0
  4260b8:	stp	x29, x30, [sp, #112]
  4260bc:	stp	x28, x27, [sp, #128]
  4260c0:	stp	x26, x25, [sp, #144]
  4260c4:	stp	x24, x23, [sp, #160]
  4260c8:	stp	x22, x21, [sp, #176]
  4260cc:	stp	x20, x19, [sp, #192]
  4260d0:	ldp	x19, x21, [x1, #16]
  4260d4:	mov	w8, #0x1                   	// #1
  4260d8:	add	x29, sp, #0x70
  4260dc:	mov	x22, x0
  4260e0:	dup	v0.2d, x8
  4260e4:	mov	w0, #0x8                   	// #8
  4260e8:	mov	x20, x1
  4260ec:	stur	q0, [x29, #-32]
  4260f0:	bl	402730 <malloc@plt>
  4260f4:	stur	x0, [x29, #-16]
  4260f8:	cbz	x0, 4266c0 <_obstack_memory_used@@Base+0xf1a4>
  4260fc:	str	x19, [x0]
  426100:	sub	x3, x29, #0x20
  426104:	mov	x0, x22
  426108:	mov	x1, x20
  42610c:	mov	x2, x21
  426110:	stp	x22, x20, [x29, #-48]
  426114:	bl	4266d4 <_obstack_memory_used@@Base+0xf1b8>
  426118:	cbnz	w0, 4266b8 <_obstack_memory_used@@Base+0xf19c>
  42611c:	mov	w8, #0x1                   	// #1
  426120:	mov	w10, wzr
  426124:	dup	v0.2d, x8
  426128:	mov	w28, #0x28                  	// #40
  42612c:	str	q0, [sp]
  426130:	b	426150 <_obstack_memory_used@@Base+0xec34>
  426134:	sub	x3, x29, #0x20
  426138:	mov	x0, x15
  42613c:	mov	x1, x14
  426140:	mov	x2, x21
  426144:	bl	4266d4 <_obstack_memory_used@@Base+0xf1b8>
  426148:	ldr	w10, [sp, #20]
  42614c:	cbnz	w0, 4266b8 <_obstack_memory_used@@Base+0xf19c>
  426150:	mov	x11, x21
  426154:	subs	x21, x21, #0x1
  426158:	b.lt	426660 <_obstack_memory_used@@Base+0xf144>  // b.tstop
  42615c:	ldp	x15, x14, [x29, #-48]
  426160:	ldr	x0, [x14]
  426164:	ldr	w9, [x15, #224]
  426168:	ldr	x8, [x0, x11, lsl #3]
  42616c:	cmp	x8, #0x0
  426170:	csinc	w10, wzr, w10, ne  // ne = any
  426174:	cmp	w10, w9
  426178:	b.gt	426670 <_obstack_memory_used@@Base+0xf154>
  42617c:	stur	xzr, [x29, #-24]
  426180:	ldr	x8, [x15, #184]
  426184:	str	w10, [sp, #20]
  426188:	ldr	x9, [x8, x21, lsl #3]
  42618c:	cbz	x9, 426134 <_obstack_memory_used@@Base+0xec18>
  426190:	ldr	x8, [x9, #40]
  426194:	cmp	x8, #0x1
  426198:	b.lt	426134 <_obstack_memory_used@@Base+0xec18>  // b.tstop
  42619c:	ldr	x8, [x15, #152]
  4261a0:	mov	x22, xzr
  4261a4:	str	x9, [sp, #32]
  4261a8:	stp	x11, x8, [sp, #48]
  4261ac:	b	4261ec <_obstack_memory_used@@Base+0xecd0>
  4261b0:	ldur	x9, [x29, #-32]
  4261b4:	cbz	x9, 426420 <_obstack_memory_used@@Base+0xef04>
  4261b8:	ldur	x8, [x29, #-24]
  4261bc:	ldr	x19, [sp, #40]
  4261c0:	cbnz	x8, 4265c8 <_obstack_memory_used@@Base+0xf0ac>
  4261c4:	ldur	x8, [x29, #-16]
  4261c8:	str	x19, [x8]
  4261cc:	ldur	x8, [x29, #-24]
  4261d0:	add	x8, x8, #0x1
  4261d4:	stur	x8, [x29, #-24]
  4261d8:	ldr	x9, [sp, #32]
  4261dc:	add	x22, x22, #0x1
  4261e0:	ldr	x8, [x9, #40]
  4261e4:	cmp	x22, x8
  4261e8:	b.ge	426134 <_obstack_memory_used@@Base+0xec18>  // b.tcont
  4261ec:	ldr	x8, [x9, #48]
  4261f0:	ldr	x20, [x8, x22, lsl #3]
  4261f4:	ldr	x8, [sp, #56]
  4261f8:	ldr	x8, [x8]
  4261fc:	add	x8, x8, x20, lsl #4
  426200:	ldrb	w8, [x8, #10]
  426204:	tbnz	w8, #4, 42629c <_obstack_memory_used@@Base+0xed80>
  426208:	ldr	x8, [sp, #56]
  42620c:	mov	x0, x15
  426210:	mov	x2, x21
  426214:	mov	x19, x20
  426218:	ldr	x8, [x8]
  42621c:	add	x1, x8, x20, lsl #4
  426220:	bl	425e8c <_obstack_memory_used@@Base+0xe970>
  426224:	ldr	x16, [sp, #48]
  426228:	ldp	x15, x14, [x29, #-48]
  42622c:	tbz	w0, #0, 4261d8 <_obstack_memory_used@@Base+0xecbc>
  426230:	ldr	x8, [x14]
  426234:	ldr	x9, [x8, x16, lsl #3]
  426238:	cbz	x9, 4261d8 <_obstack_memory_used@@Base+0xecbc>
  42623c:	ldr	x8, [x9, #16]
  426240:	subs	x10, x8, #0x1
  426244:	b.lt	4261d8 <_obstack_memory_used@@Base+0xecbc>  // b.tstop
  426248:	ldr	x8, [sp, #56]
  42624c:	ldr	x9, [x9, #24]
  426250:	mov	x11, x19
  426254:	mov	x11, xzr
  426258:	ldr	x8, [x8, #24]
  42625c:	ldr	x8, [x8, x19, lsl #3]
  426260:	b.eq	426284 <_obstack_memory_used@@Base+0xed68>  // b.none
  426264:	add	x12, x11, x10
  426268:	lsr	x12, x12, #1
  42626c:	ldr	x13, [x9, x12, lsl #3]
  426270:	cmp	x13, x8
  426274:	csinc	x11, x11, x12, ge  // ge = tcont
  426278:	csel	x10, x10, x12, lt  // lt = tstop
  42627c:	cmp	x11, x10
  426280:	b.cc	426264 <_obstack_memory_used@@Base+0xed48>  // b.lo, b.ul, b.last
  426284:	ldr	x9, [x9, x11, lsl #3]
  426288:	cmp	x9, x8
  42628c:	b.ne	4261d8 <_obstack_memory_used@@Base+0xecbc>  // b.any
  426290:	mov	w0, #0x1                   	// #1
  426294:	mov	x20, x19
  426298:	b	42634c <_obstack_memory_used@@Base+0xee30>
  42629c:	ldr	x23, [x15, #152]
  4262a0:	ldr	x19, [x14, #24]
  4262a4:	mov	x1, x20
  4262a8:	mov	x2, x15
  4262ac:	mov	x0, x23
  4262b0:	mov	x3, x21
  4262b4:	bl	425b14 <_obstack_memory_used@@Base+0xe5f8>
  4262b8:	cmp	w0, #0x1
  4262bc:	b.lt	4262d8 <_obstack_memory_used@@Base+0xedbc>  // b.tstop
  4262c0:	add	x8, x21, w0, uxtw
  4262c4:	cmp	x8, x19
  4262c8:	b.le	4262e8 <_obstack_memory_used@@Base+0xedcc>
  4262cc:	ldp	x15, x14, [x29, #-48]
  4262d0:	ldr	x16, [sp, #48]
  4262d4:	b	42634c <_obstack_memory_used@@Base+0xee30>
  4262d8:	ldp	x15, x14, [x29, #-48]
  4262dc:	ldr	x16, [sp, #48]
  4262e0:	cbnz	w0, 42634c <_obstack_memory_used@@Base+0xee30>
  4262e4:	b	426208 <_obstack_memory_used@@Base+0xecec>
  4262e8:	ldp	x15, x14, [x29, #-48]
  4262ec:	ldr	x16, [sp, #48]
  4262f0:	ldr	x9, [x14]
  4262f4:	ldr	x9, [x9, x8, lsl #3]
  4262f8:	cbz	x9, 426208 <_obstack_memory_used@@Base+0xecec>
  4262fc:	ldr	x8, [x9, #16]
  426300:	subs	x10, x8, #0x1
  426304:	b.lt	426208 <_obstack_memory_used@@Base+0xecec>  // b.tstop
  426308:	ldr	x8, [x23, #24]
  42630c:	ldr	x9, [x9, #24]
  426310:	mov	x11, xzr
  426314:	ldr	x8, [x8, x20, lsl #3]
  426318:	b.eq	42633c <_obstack_memory_used@@Base+0xee20>  // b.none
  42631c:	add	x12, x11, x10
  426320:	lsr	x12, x12, #1
  426324:	ldr	x13, [x9, x12, lsl #3]
  426328:	cmp	x13, x8
  42632c:	csinc	x11, x11, x12, ge  // ge = tcont
  426330:	csel	x10, x10, x12, lt  // lt = tstop
  426334:	cmp	x11, x10
  426338:	b.cc	42631c <_obstack_memory_used@@Base+0xee00>  // b.lo, b.ul, b.last
  42633c:	cbz	w0, 426208 <_obstack_memory_used@@Base+0xecec>
  426340:	ldr	x9, [x9, x11, lsl #3]
  426344:	cmp	x9, x8
  426348:	b.ne	426208 <_obstack_memory_used@@Base+0xecec>  // b.any
  42634c:	ldr	x8, [x14, #40]
  426350:	str	x20, [sp, #40]
  426354:	cbz	x8, 4261b0 <_obstack_memory_used@@Base+0xec94>
  426358:	ldr	x9, [sp, #56]
  42635c:	ldr	x11, [sp, #40]
  426360:	add	x23, x21, w0, sxtw
  426364:	mov	x24, xzr
  426368:	ldr	x10, [x9, #24]
  42636c:	ldr	x9, [x15, #200]
  426370:	ldr	x10, [x10, x11, lsl #3]
  426374:	cmp	x9, #0x1
  426378:	str	x10, [sp, #24]
  42637c:	b.lt	4263b4 <_obstack_memory_used@@Base+0xee98>  // b.tstop
  426380:	ldr	x10, [x15, #216]
  426384:	mov	x11, x9
  426388:	add	x12, x11, x24
  42638c:	cmp	x12, #0x0
  426390:	cinc	x12, x12, lt  // lt = tstop
  426394:	asr	x12, x12, #1
  426398:	madd	x13, x12, x28, x10
  42639c:	ldr	x13, [x13, #8]
  4263a0:	cmp	x13, x23
  4263a4:	csel	x11, x11, x12, lt  // lt = tstop
  4263a8:	csinc	x24, x24, x12, ge  // ge = tcont
  4263ac:	cmp	x24, x11
  4263b0:	b.lt	426388 <_obstack_memory_used@@Base+0xee6c>  // b.tstop
  4263b4:	cmp	x24, x9
  4263b8:	b.ge	4263d0 <_obstack_memory_used@@Base+0xeeb4>  // b.tcont
  4263bc:	ldr	x10, [x15, #216]
  4263c0:	madd	x10, x24, x28, x10
  4263c4:	ldr	x10, [x10, #8]
  4263c8:	cmp	x10, x23
  4263cc:	b.eq	4263d4 <_obstack_memory_used@@Base+0xeeb8>  // b.none
  4263d0:	mov	x24, #0xffffffffffffffff    	// #-1
  4263d4:	cmp	x9, #0x1
  4263d8:	b.lt	426448 <_obstack_memory_used@@Base+0xef2c>  // b.tstop
  4263dc:	ldr	x10, [x15, #216]
  4263e0:	mov	x25, xzr
  4263e4:	mov	x11, x9
  4263e8:	add	x12, x11, x25
  4263ec:	cmp	x12, #0x0
  4263f0:	cinc	x12, x12, lt  // lt = tstop
  4263f4:	asr	x12, x12, #1
  4263f8:	madd	x13, x12, x28, x10
  4263fc:	ldr	x13, [x13, #8]
  426400:	cmp	x13, x21
  426404:	csel	x11, x11, x12, lt  // lt = tstop
  426408:	csinc	x25, x25, x12, ge  // ge = tcont
  42640c:	cmp	x25, x11
  426410:	b.lt	4263e8 <_obstack_memory_used@@Base+0xeecc>  // b.tstop
  426414:	cmp	x25, x9
  426418:	b.lt	426454 <_obstack_memory_used@@Base+0xef38>  // b.tstop
  42641c:	b	426468 <_obstack_memory_used@@Base+0xef4c>
  426420:	ldr	q0, [sp]
  426424:	mov	w0, #0x8                   	// #8
  426428:	stur	q0, [x29, #-32]
  42642c:	bl	402730 <malloc@plt>
  426430:	ldr	x8, [sp, #40]
  426434:	stur	x0, [x29, #-16]
  426438:	cbz	x0, 4266ac <_obstack_memory_used@@Base+0xf190>
  42643c:	ldp	x15, x14, [x29, #-48]
  426440:	str	x8, [x0]
  426444:	b	4261d8 <_obstack_memory_used@@Base+0xecbc>
  426448:	mov	x25, xzr
  42644c:	cmp	x25, x9
  426450:	b.ge	426468 <_obstack_memory_used@@Base+0xef4c>  // b.tcont
  426454:	ldr	x9, [x15, #216]
  426458:	madd	x9, x25, x28, x9
  42645c:	ldr	x9, [x9, #8]
  426460:	cmp	x9, x21
  426464:	b.eq	42646c <_obstack_memory_used@@Base+0xef50>  // b.none
  426468:	mov	x25, #0xffffffffffffffff    	// #-1
  42646c:	cmp	x8, #0x1
  426470:	b.lt	4261b0 <_obstack_memory_used@@Base+0xec94>  // b.tstop
  426474:	ldr	x20, [x15, #152]
  426478:	mov	x19, xzr
  42647c:	ldr	x8, [x14, #48]
  426480:	ldr	x9, [x15, #216]
  426484:	ldr	x12, [x20]
  426488:	ldr	x8, [x8, x19, lsl #3]
  42648c:	madd	x10, x8, x28, x9
  426490:	ldr	x11, [x10]
  426494:	ldr	x10, [x10, #16]
  426498:	lsl	x11, x11, #4
  42649c:	ldr	x26, [x12, x11]
  4264a0:	cmp	x10, x23
  4264a4:	b.le	4264b8 <_obstack_memory_used@@Base+0xef9c>
  4264a8:	mov	w27, #0xffffffff            	// #-1
  4264ac:	cmp	x10, x16
  4264b0:	b.lt	42652c <_obstack_memory_used@@Base+0xf010>  // b.tstop
  4264b4:	b	426598 <_obstack_memory_used@@Base+0xf07c>
  4264b8:	madd	x11, x8, x28, x9
  4264bc:	ldr	x11, [x11, #24]
  4264c0:	cmp	x11, x23
  4264c4:	b.ge	4264d8 <_obstack_memory_used@@Base+0xefbc>  // b.tcont
  4264c8:	mov	w27, #0x1                   	// #1
  4264cc:	cmp	x10, x16
  4264d0:	b.lt	42652c <_obstack_memory_used@@Base+0xf010>  // b.tstop
  4264d4:	b	426598 <_obstack_memory_used@@Base+0xf07c>
  4264d8:	cmp	x10, x23
  4264dc:	cset	w1, eq  // eq = none
  4264e0:	cmp	x11, x23
  4264e4:	cset	w11, eq  // eq = none
  4264e8:	bfi	w1, w11, #1, #1
  4264ec:	cbz	w1, 42658c <_obstack_memory_used@@Base+0xf070>
  4264f0:	ldr	x3, [sp, #24]
  4264f4:	mov	x0, x15
  4264f8:	mov	x2, x26
  4264fc:	mov	x4, x24
  426500:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  426504:	ldp	x15, x14, [x29, #-48]
  426508:	ldr	x16, [sp, #48]
  42650c:	mov	w27, w0
  426510:	ldr	x8, [x14, #48]
  426514:	ldr	x9, [x15, #216]
  426518:	ldr	x8, [x8, x19, lsl #3]
  42651c:	madd	x10, x8, x28, x9
  426520:	ldr	x10, [x10, #16]
  426524:	cmp	x10, x16
  426528:	b.ge	426598 <_obstack_memory_used@@Base+0xf07c>  // b.tcont
  42652c:	madd	x8, x8, x28, x9
  426530:	ldr	x8, [x8, #24]
  426534:	cmp	x8, x21
  426538:	b.ge	42654c <_obstack_memory_used@@Base+0xf030>  // b.tcont
  42653c:	mov	w0, #0x1                   	// #1
  426540:	cmp	w0, w27
  426544:	b.eq	4265a4 <_obstack_memory_used@@Base+0xf088>  // b.none
  426548:	b	4261d8 <_obstack_memory_used@@Base+0xecbc>
  42654c:	cmp	x10, x21
  426550:	cset	w1, eq  // eq = none
  426554:	cmp	x8, x21
  426558:	cset	w8, eq  // eq = none
  42655c:	bfi	w1, w8, #1, #1
  426560:	cbz	w1, 4265b8 <_obstack_memory_used@@Base+0xf09c>
  426564:	ldr	x3, [sp, #40]
  426568:	mov	x0, x15
  42656c:	mov	x2, x26
  426570:	mov	x4, x25
  426574:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  426578:	ldr	x16, [sp, #48]
  42657c:	ldp	x15, x14, [x29, #-48]
  426580:	cmp	w0, w27
  426584:	b.eq	4265a4 <_obstack_memory_used@@Base+0xf088>  // b.none
  426588:	b	4261d8 <_obstack_memory_used@@Base+0xecbc>
  42658c:	mov	w27, wzr
  426590:	cmp	x10, x16
  426594:	b.lt	42652c <_obstack_memory_used@@Base+0xf010>  // b.tstop
  426598:	mov	w0, #0xffffffff            	// #-1
  42659c:	cmp	w0, w27
  4265a0:	b.ne	4261d8 <_obstack_memory_used@@Base+0xecbc>  // b.any
  4265a4:	ldr	x8, [x14, #40]
  4265a8:	add	x19, x19, #0x1
  4265ac:	cmp	x19, x8
  4265b0:	b.lt	42647c <_obstack_memory_used@@Base+0xef60>  // b.tstop
  4265b4:	b	4261b0 <_obstack_memory_used@@Base+0xec94>
  4265b8:	mov	w0, wzr
  4265bc:	cmp	w0, w27
  4265c0:	b.eq	4265a4 <_obstack_memory_used@@Base+0xf088>  // b.none
  4265c4:	b	4261d8 <_obstack_memory_used@@Base+0xecbc>
  4265c8:	cmp	x9, x8
  4265cc:	b.ne	4265f8 <_obstack_memory_used@@Base+0xf0dc>  // b.any
  4265d0:	ldur	x0, [x29, #-16]
  4265d4:	lsl	x8, x9, #1
  4265d8:	lsl	x1, x9, #4
  4265dc:	stur	x8, [x29, #-32]
  4265e0:	bl	402870 <realloc@plt>
  4265e4:	cbz	x0, 4266cc <_obstack_memory_used@@Base+0xf1b0>
  4265e8:	ldur	x8, [x29, #-24]
  4265ec:	ldp	x15, x14, [x29, #-48]
  4265f0:	stur	x0, [x29, #-16]
  4265f4:	b	4265fc <_obstack_memory_used@@Base+0xf0e0>
  4265f8:	ldur	x0, [x29, #-16]
  4265fc:	ldr	x9, [x0]
  426600:	cmp	x9, x19
  426604:	b.le	426630 <_obstack_memory_used@@Base+0xf114>
  426608:	cmp	x8, #0x1
  42660c:	b.lt	426658 <_obstack_memory_used@@Base+0xf13c>  // b.tstop
  426610:	mov	x9, x8
  426614:	add	x10, x0, x9, lsl #3
  426618:	ldur	x11, [x10, #-8]
  42661c:	subs	x8, x9, #0x1
  426620:	mov	x9, x8
  426624:	str	x11, [x10]
  426628:	b.gt	426614 <_obstack_memory_used@@Base+0xf0f8>
  42662c:	b	426658 <_obstack_memory_used@@Base+0xf13c>
  426630:	add	x9, x0, x8, lsl #3
  426634:	ldur	x9, [x9, #-8]
  426638:	cmp	x9, x19
  42663c:	b.le	426658 <_obstack_memory_used@@Base+0xf13c>
  426640:	add	x10, x0, x8, lsl #3
  426644:	str	x9, [x10]
  426648:	ldur	x9, [x10, #-16]
  42664c:	sub	x8, x8, #0x1
  426650:	cmp	x9, x19
  426654:	b.gt	426640 <_obstack_memory_used@@Base+0xf124>
  426658:	str	x19, [x0, x8, lsl #3]
  42665c:	b	4261cc <_obstack_memory_used@@Base+0xecb0>
  426660:	mov	w22, wzr
  426664:	ldur	x0, [x29, #-16]
  426668:	bl	402a10 <free@plt>
  42666c:	b	426688 <_obstack_memory_used@@Base+0xf16c>
  426670:	lsl	x2, x11, #3
  426674:	mov	w1, wzr
  426678:	bl	402800 <memset@plt>
  42667c:	ldur	x0, [x29, #-16]
  426680:	bl	402a10 <free@plt>
  426684:	mov	w22, wzr
  426688:	mov	w0, w22
  42668c:	ldp	x20, x19, [sp, #192]
  426690:	ldp	x22, x21, [sp, #176]
  426694:	ldp	x24, x23, [sp, #160]
  426698:	ldp	x26, x25, [sp, #144]
  42669c:	ldp	x28, x27, [sp, #128]
  4266a0:	ldp	x29, x30, [sp, #112]
  4266a4:	add	sp, sp, #0xd0
  4266a8:	ret
  4266ac:	stp	xzr, xzr, [x29, #-32]
  4266b0:	mov	w22, #0xc                   	// #12
  4266b4:	b	426664 <_obstack_memory_used@@Base+0xf148>
  4266b8:	mov	w22, w0
  4266bc:	b	426664 <_obstack_memory_used@@Base+0xf148>
  4266c0:	stp	xzr, xzr, [x29, #-32]
  4266c4:	mov	w22, #0xc                   	// #12
  4266c8:	b	426688 <_obstack_memory_used@@Base+0xf16c>
  4266cc:	mov	w22, #0xc                   	// #12
  4266d0:	b	426664 <_obstack_memory_used@@Base+0xf148>
  4266d4:	sub	sp, sp, #0x150
  4266d8:	stp	x29, x30, [sp, #240]
  4266dc:	stp	x28, x27, [sp, #256]
  4266e0:	stp	x26, x25, [sp, #272]
  4266e4:	stp	x24, x23, [sp, #288]
  4266e8:	stp	x22, x21, [sp, #304]
  4266ec:	stp	x20, x19, [sp, #320]
  4266f0:	add	x29, sp, #0xf0
  4266f4:	ldr	x24, [x0, #152]
  4266f8:	stur	wzr, [x29, #-100]
  4266fc:	ldr	x8, [x0, #184]
  426700:	stur	x2, [x29, #-112]
  426704:	ldr	x21, [x8, x2, lsl #3]
  426708:	ldr	x8, [x3, #8]
  42670c:	stp	x0, x1, [sp, #112]
  426710:	add	x9, x21, #0x8
  426714:	cmp	x21, #0x0
  426718:	csel	x27, xzr, x9, eq  // eq = none
  42671c:	cbz	x8, 426a54 <_obstack_memory_used@@Base+0xf538>
  426720:	mov	x23, x3
  426724:	cbz	x21, 426a6c <_obstack_memory_used@@Base+0xf550>
  426728:	sub	x0, x29, #0x60
  42672c:	mov	x1, x24
  426730:	mov	x2, x23
  426734:	stur	wzr, [x29, #-96]
  426738:	bl	42588c <_obstack_memory_used@@Base+0xe370>
  42673c:	ldur	w26, [x29, #-96]
  426740:	cbnz	w26, 427294 <_obstack_memory_used@@Base+0xfd78>
  426744:	mov	x22, x0
  426748:	ldr	x8, [x22, #56]!
  42674c:	mov	x25, x0
  426750:	cbnz	x8, 4267c0 <_obstack_memory_used@@Base+0xf2a4>
  426754:	ldr	x8, [x23, #8]
  426758:	lsl	x0, x8, #3
  42675c:	stp	x8, xzr, [x25, #56]
  426760:	bl	402730 <malloc@plt>
  426764:	cmp	x0, #0x0
  426768:	mov	w26, #0xc                   	// #12
  42676c:	csel	w8, w26, wzr, eq  // eq = none
  426770:	str	x0, [x25, #72]
  426774:	stur	w8, [x29, #-96]
  426778:	cbz	x0, 427294 <_obstack_memory_used@@Base+0xfd78>
  42677c:	ldr	x8, [x23, #8]
  426780:	cmp	x8, #0x1
  426784:	b.lt	4267c0 <_obstack_memory_used@@Base+0xf2a4>  // b.tstop
  426788:	mov	x19, xzr
  42678c:	mov	w20, #0x18                  	// #24
  426790:	ldr	x8, [x23, #16]
  426794:	ldr	x9, [x24, #56]
  426798:	mov	x0, x22
  42679c:	ldr	x8, [x8, x19, lsl #3]
  4267a0:	madd	x1, x8, x20, x9
  4267a4:	bl	42137c <_obstack_memory_used@@Base+0x9e60>
  4267a8:	cbnz	w0, 42728c <_obstack_memory_used@@Base+0xfd70>
  4267ac:	ldr	x8, [x23, #8]
  4267b0:	add	x19, x19, #0x1
  4267b4:	cmp	x19, x8
  4267b8:	b.lt	426790 <_obstack_memory_used@@Base+0xf274>  // b.tstop
  4267bc:	stur	wzr, [x29, #-96]
  4267c0:	mov	x0, x23
  4267c4:	mov	x1, x27
  4267c8:	mov	x2, x22
  4267cc:	bl	4272c4 <_obstack_memory_used@@Base+0xfda8>
  4267d0:	stur	w0, [x29, #-100]
  4267d4:	cbnz	w0, 4272a4 <_obstack_memory_used@@Base+0xfd88>
  4267d8:	ldr	x15, [sp, #120]
  4267dc:	ldr	x8, [x15, #40]
  4267e0:	cbz	x8, 426a6c <_obstack_memory_used@@Base+0xf550>
  4267e4:	ldur	x14, [x29, #-112]
  4267e8:	cmp	x8, #0x1
  4267ec:	b.lt	426a68 <_obstack_memory_used@@Base+0xf54c>  // b.tstop
  4267f0:	ldr	x8, [sp, #112]
  4267f4:	mov	x20, xzr
  4267f8:	mov	w25, #0x18                  	// #24
  4267fc:	ldr	x22, [x8, #216]
  426800:	b	426814 <_obstack_memory_used@@Base+0xf2f8>
  426804:	ldr	x8, [x15, #40]
  426808:	add	x20, x20, #0x1
  42680c:	cmp	x20, x8
  426810:	b.ge	426a68 <_obstack_memory_used@@Base+0xf54c>  // b.tcont
  426814:	ldr	x8, [x15, #48]
  426818:	mov	w9, #0x28                  	// #40
  42681c:	ldr	x8, [x8, x20, lsl #3]
  426820:	madd	x9, x8, x9, x22
  426824:	ldr	x9, [x9, #16]
  426828:	cmp	x9, x14
  42682c:	b.ge	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tcont
  426830:	mov	w9, #0x28                  	// #40
  426834:	madd	x9, x8, x9, x22
  426838:	ldr	x9, [x9, #8]
  42683c:	cmp	x9, x14
  426840:	b.lt	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tstop
  426844:	mov	w9, #0x28                  	// #40
  426848:	madd	x8, x8, x9, x22
  42684c:	ldr	x10, [x8]
  426850:	ldr	x9, [x24]
  426854:	ldr	x11, [x8, #24]
  426858:	lsl	x8, x10, #4
  42685c:	ldr	x19, [x9, x8]
  426860:	ldr	x8, [x23, #8]
  426864:	cmp	x11, x14
  426868:	b.ne	4268d0 <_obstack_memory_used@@Base+0xf3b4>  // b.any
  42686c:	cmp	x8, #0x1
  426870:	b.lt	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tstop
  426874:	ldr	x10, [x23, #16]
  426878:	mov	x28, #0xffffffffffffffff    	// #-1
  42687c:	mov	x1, #0xffffffffffffffff    	// #-1
  426880:	b	4268a0 <_obstack_memory_used@@Base+0xf384>
  426884:	lsl	x12, x11, #4
  426888:	ldr	x12, [x9, x12]
  42688c:	cmp	x19, x12
  426890:	csel	x28, x11, x28, eq  // eq = none
  426894:	subs	x8, x8, #0x1
  426898:	add	x10, x10, #0x8
  42689c:	b.eq	426940 <_obstack_memory_used@@Base+0xf424>  // b.none
  4268a0:	ldr	x11, [x10]
  4268a4:	add	x12, x9, x11, lsl #4
  4268a8:	ldrb	w12, [x12, #8]
  4268ac:	cmp	w12, #0x9
  4268b0:	b.eq	426884 <_obstack_memory_used@@Base+0xf368>  // b.none
  4268b4:	cmp	w12, #0x8
  4268b8:	b.ne	426894 <_obstack_memory_used@@Base+0xf378>  // b.any
  4268bc:	lsl	x12, x11, #4
  4268c0:	ldr	x12, [x9, x12]
  4268c4:	cmp	x19, x12
  4268c8:	csel	x1, x11, x1, eq  // eq = none
  4268cc:	b	426894 <_obstack_memory_used@@Base+0xf378>
  4268d0:	cmp	x8, #0x1
  4268d4:	b.lt	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tstop
  4268d8:	mov	x28, xzr
  4268dc:	ldr	x10, [x23, #16]
  4268e0:	ldr	x1, [x10, x28, lsl #3]
  4268e4:	add	x10, x9, x1, lsl #4
  4268e8:	ldr	w10, [x10, #8]
  4268ec:	and	w10, w10, #0xfe
  4268f0:	orr	w10, w10, #0x1
  4268f4:	cmp	w10, #0x9
  4268f8:	b.ne	42692c <_obstack_memory_used@@Base+0xf410>  // b.any
  4268fc:	lsl	x10, x1, #4
  426900:	ldr	x9, [x9, x10]
  426904:	cmp	x19, x9
  426908:	b.ne	42692c <_obstack_memory_used@@Base+0xf410>  // b.any
  42690c:	mov	x0, x24
  426910:	mov	x2, x23
  426914:	mov	x3, x27
  426918:	bl	427498 <_obstack_memory_used@@Base+0xff7c>
  42691c:	cbnz	w0, 427260 <_obstack_memory_used@@Base+0xfd44>
  426920:	ldr	x8, [x23, #8]
  426924:	ldur	x14, [x29, #-112]
  426928:	ldr	x15, [sp, #120]
  42692c:	add	x28, x28, #0x1
  426930:	cmp	x28, x8
  426934:	b.ge	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tcont
  426938:	ldr	x9, [x24]
  42693c:	b	4268dc <_obstack_memory_used@@Base+0xf3c0>
  426940:	tbnz	x1, #63, 426960 <_obstack_memory_used@@Base+0xf444>
  426944:	mov	x0, x24
  426948:	mov	x2, x23
  42694c:	mov	x3, x27
  426950:	bl	427498 <_obstack_memory_used@@Base+0xff7c>
  426954:	ldr	x15, [sp, #120]
  426958:	ldur	x14, [x29, #-112]
  42695c:	cbnz	w0, 427260 <_obstack_memory_used@@Base+0xfd44>
  426960:	tbnz	x28, #63, 426804 <_obstack_memory_used@@Base+0xf2e8>
  426964:	ldr	x8, [x23, #8]
  426968:	cmp	x8, #0x1
  42696c:	b.lt	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tstop
  426970:	mov	x19, xzr
  426974:	b	4269a8 <_obstack_memory_used@@Base+0xf48c>
  426978:	mov	x0, x24
  42697c:	mov	x2, x23
  426980:	mov	x3, x27
  426984:	bl	427498 <_obstack_memory_used@@Base+0xff7c>
  426988:	cbnz	w0, 427260 <_obstack_memory_used@@Base+0xfd44>
  42698c:	ldr	x8, [x23, #8]
  426990:	ldur	x14, [x29, #-112]
  426994:	ldr	x15, [sp, #120]
  426998:	sub	x19, x19, #0x1
  42699c:	add	x19, x19, #0x1
  4269a0:	cmp	x19, x8
  4269a4:	b.ge	426804 <_obstack_memory_used@@Base+0xf2e8>  // b.tcont
  4269a8:	ldr	x9, [x23, #16]
  4269ac:	ldr	x1, [x9, x19, lsl #3]
  4269b0:	ldr	x9, [x24, #56]
  4269b4:	madd	x10, x1, x25, x9
  4269b8:	ldr	x10, [x10, #8]
  4269bc:	subs	x10, x10, #0x1
  4269c0:	b.lt	426a00 <_obstack_memory_used@@Base+0xf4e4>  // b.tstop
  4269c4:	madd	x9, x1, x25, x9
  4269c8:	ldr	x9, [x9, #16]
  4269cc:	mov	x11, xzr
  4269d0:	b.eq	4269f4 <_obstack_memory_used@@Base+0xf4d8>  // b.none
  4269d4:	add	x12, x11, x10
  4269d8:	lsr	x12, x12, #1
  4269dc:	ldr	x13, [x9, x12, lsl #3]
  4269e0:	cmp	x13, x28
  4269e4:	csinc	x11, x11, x12, ge  // ge = tcont
  4269e8:	csel	x10, x10, x12, lt  // lt = tstop
  4269ec:	cmp	x11, x10
  4269f0:	b.cc	4269d4 <_obstack_memory_used@@Base+0xf4b8>  // b.lo, b.ul, b.last
  4269f4:	ldr	x9, [x9, x11, lsl #3]
  4269f8:	cmp	x9, x28
  4269fc:	b.eq	42699c <_obstack_memory_used@@Base+0xf480>  // b.none
  426a00:	ldr	x9, [x24, #48]
  426a04:	madd	x10, x1, x25, x9
  426a08:	ldr	x10, [x10, #8]
  426a0c:	subs	x10, x10, #0x1
  426a10:	b.lt	426978 <_obstack_memory_used@@Base+0xf45c>  // b.tstop
  426a14:	madd	x9, x1, x25, x9
  426a18:	ldr	x9, [x9, #16]
  426a1c:	mov	x11, xzr
  426a20:	b.eq	426a44 <_obstack_memory_used@@Base+0xf528>  // b.none
  426a24:	add	x12, x11, x10
  426a28:	lsr	x12, x12, #1
  426a2c:	ldr	x13, [x9, x12, lsl #3]
  426a30:	cmp	x13, x28
  426a34:	csinc	x11, x11, x12, ge  // ge = tcont
  426a38:	csel	x10, x10, x12, lt  // lt = tstop
  426a3c:	cmp	x11, x10
  426a40:	b.cc	426a24 <_obstack_memory_used@@Base+0xf508>  // b.lo, b.ul, b.last
  426a44:	ldr	x9, [x9, x11, lsl #3]
  426a48:	cmp	x9, x28
  426a4c:	b.ne	426978 <_obstack_memory_used@@Base+0xf45c>  // b.any
  426a50:	b	42699c <_obstack_memory_used@@Base+0xf480>
  426a54:	ldr	x8, [x1]
  426a58:	mov	x14, x1
  426a5c:	mov	x15, x0
  426a60:	str	xzr, [x8, x2, lsl #3]
  426a64:	b	426a94 <_obstack_memory_used@@Base+0xf578>
  426a68:	stur	wzr, [x29, #-100]
  426a6c:	sub	x0, x29, #0x64
  426a70:	mov	x1, x24
  426a74:	mov	x2, x23
  426a78:	bl	42588c <_obstack_memory_used@@Base+0xe370>
  426a7c:	ldp	x15, x14, [sp, #112]
  426a80:	ldur	x2, [x29, #-112]
  426a84:	ldr	x8, [x14]
  426a88:	str	x0, [x8, x2, lsl #3]
  426a8c:	ldur	w26, [x29, #-100]
  426a90:	cbnz	w26, 42723c <_obstack_memory_used@@Base+0xfd20>
  426a94:	cbz	x21, 427238 <_obstack_memory_used@@Base+0xfd1c>
  426a98:	ldr	x8, [x15, #184]
  426a9c:	ldr	x8, [x8, x2, lsl #3]
  426aa0:	ldrb	w8, [x8, #104]
  426aa4:	tbz	w8, #6, 427238 <_obstack_memory_used@@Base+0xfd1c>
  426aa8:	ldr	x8, [x15, #200]
  426aac:	ldr	x28, [x15, #152]
  426ab0:	cmp	x8, #0x1
  426ab4:	b.lt	426b00 <_obstack_memory_used@@Base+0xf5e4>  // b.tstop
  426ab8:	ldr	x9, [x15, #216]
  426abc:	mov	x21, xzr
  426ac0:	mov	w10, #0x28                  	// #40
  426ac4:	mov	x11, x8
  426ac8:	add	x12, x11, x21
  426acc:	cmp	x12, #0x0
  426ad0:	cinc	x12, x12, lt  // lt = tstop
  426ad4:	asr	x12, x12, #1
  426ad8:	madd	x13, x12, x10, x9
  426adc:	ldr	x13, [x13, #8]
  426ae0:	cmp	x13, x2
  426ae4:	csel	x11, x11, x12, lt  // lt = tstop
  426ae8:	csinc	x21, x21, x12, ge  // ge = tcont
  426aec:	cmp	x21, x11
  426af0:	b.lt	426ac8 <_obstack_memory_used@@Base+0xf5ac>  // b.tstop
  426af4:	cmp	x21, x8
  426af8:	b.lt	426b0c <_obstack_memory_used@@Base+0xf5f0>  // b.tstop
  426afc:	b	427234 <_obstack_memory_used@@Base+0xfd18>
  426b00:	mov	x21, xzr
  426b04:	cmp	x21, x8
  426b08:	b.ge	427234 <_obstack_memory_used@@Base+0xfd18>  // b.tcont
  426b0c:	cmn	x21, #0x1
  426b10:	b.eq	427234 <_obstack_memory_used@@Base+0xfd18>  // b.none
  426b14:	ldr	x8, [x15, #216]
  426b18:	mov	w9, #0x28                  	// #40
  426b1c:	madd	x8, x21, x9, x8
  426b20:	ldr	x8, [x8, #8]
  426b24:	cmp	x8, x2
  426b28:	b.ne	427234 <_obstack_memory_used@@Base+0xfd18>  // b.any
  426b2c:	stur	xzr, [x29, #-96]
  426b30:	ldr	x8, [x27, #8]
  426b34:	cmp	x8, #0x0
  426b38:	b.le	427234 <_obstack_memory_used@@Base+0xfd18>
  426b3c:	sub	x8, x29, #0x60
  426b40:	add	x9, x2, #0x1
  426b44:	str	x9, [sp, #32]
  426b48:	mov	w9, #0x1                   	// #1
  426b4c:	add	x8, x8, #0x20
  426b50:	mov	x19, xzr
  426b54:	mov	w13, #0x28                  	// #40
  426b58:	mov	w23, #0x18                  	// #24
  426b5c:	str	x8, [sp, #8]
  426b60:	dup	v0.2d, x9
  426b64:	str	xzr, [sp, #88]
  426b68:	str	q0, [sp, #16]
  426b6c:	stp	x28, x27, [sp, #48]
  426b70:	b	426b84 <_obstack_memory_used@@Base+0xf668>
  426b74:	ldr	x8, [x27, #8]
  426b78:	add	x19, x19, #0x1
  426b7c:	cmp	x19, x8
  426b80:	b.ge	42726c <_obstack_memory_used@@Base+0xfd50>  // b.tcont
  426b84:	ldr	x8, [x27, #16]
  426b88:	ldr	x9, [x14, #16]
  426b8c:	ldr	x16, [x8, x19, lsl #3]
  426b90:	ldr	x8, [x28]
  426b94:	cmp	x16, x9
  426b98:	add	x8, x8, x16, lsl #4
  426b9c:	ldrb	w8, [x8, #8]
  426ba0:	b.ne	426bbc <_obstack_memory_used@@Base+0xf6a0>  // b.any
  426ba4:	cmp	w8, #0x4
  426ba8:	b.ne	426b74 <_obstack_memory_used@@Base+0xf658>  // b.any
  426bac:	ldr	x8, [x14, #24]
  426bb0:	cmp	x8, x2
  426bb4:	b.ne	426bc4 <_obstack_memory_used@@Base+0xf6a8>  // b.any
  426bb8:	b	426b74 <_obstack_memory_used@@Base+0xf658>
  426bbc:	cmp	w8, #0x4
  426bc0:	b.ne	426b74 <_obstack_memory_used@@Base+0xf658>  // b.any
  426bc4:	ldr	x8, [x15, #216]
  426bc8:	mov	x24, x21
  426bcc:	str	x19, [sp, #64]
  426bd0:	str	x16, [sp, #104]
  426bd4:	madd	x25, x21, x13, x8
  426bd8:	b	426bf0 <_obstack_memory_used@@Base+0xf6d4>
  426bdc:	ldr	x16, [sp, #104]
  426be0:	ldrb	w8, [x25, #32]
  426be4:	add	x25, x25, #0x28
  426be8:	add	x24, x24, #0x1
  426bec:	cbz	w8, 426b74 <_obstack_memory_used@@Base+0xf658>
  426bf0:	ldr	x8, [x25]
  426bf4:	cmp	x8, x16
  426bf8:	b.ne	426be0 <_obstack_memory_used@@Base+0xf6c4>  // b.any
  426bfc:	ldp	x9, x8, [x25, #16]
  426c00:	subs	x8, x8, x9
  426c04:	add	x20, x8, x2
  426c08:	b.eq	426c24 <_obstack_memory_used@@Base+0xf708>  // b.none
  426c0c:	ldr	x8, [x28, #24]
  426c10:	add	x8, x8, x16, lsl #3
  426c14:	ldr	x9, [x14, #24]
  426c18:	cmp	x20, x9
  426c1c:	b.gt	426be0 <_obstack_memory_used@@Base+0xf6c4>
  426c20:	b	426c3c <_obstack_memory_used@@Base+0xf720>
  426c24:	ldr	x8, [x28, #40]
  426c28:	madd	x8, x16, x23, x8
  426c2c:	ldr	x8, [x8, #16]
  426c30:	ldr	x9, [x14, #24]
  426c34:	cmp	x20, x9
  426c38:	b.gt	426be0 <_obstack_memory_used@@Base+0xf6c4>
  426c3c:	ldr	x9, [x14]
  426c40:	ldr	x10, [x9, x20, lsl #3]
  426c44:	cbz	x10, 426be0 <_obstack_memory_used@@Base+0xf6c4>
  426c48:	ldr	x9, [x10, #16]
  426c4c:	subs	x9, x9, #0x1
  426c50:	b.lt	426be0 <_obstack_memory_used@@Base+0xf6c4>  // b.tstop
  426c54:	ldr	x26, [x8]
  426c58:	ldr	x8, [x10, #24]
  426c5c:	mov	x10, xzr
  426c60:	b.eq	426c84 <_obstack_memory_used@@Base+0xf768>  // b.none
  426c64:	add	x11, x10, x9
  426c68:	lsr	x11, x11, #1
  426c6c:	ldr	x12, [x8, x11, lsl #3]
  426c70:	cmp	x12, x26
  426c74:	csinc	x10, x10, x11, ge  // ge = tcont
  426c78:	csel	x9, x9, x11, lt  // lt = tstop
  426c7c:	cmp	x10, x9
  426c80:	b.cc	426c64 <_obstack_memory_used@@Base+0xf748>  // b.lo, b.ul, b.last
  426c84:	ldr	x8, [x8, x10, lsl #3]
  426c88:	cmp	x8, x26
  426c8c:	b.ne	426bdc <_obstack_memory_used@@Base+0xf6c0>  // b.any
  426c90:	ldr	x8, [x15, #200]
  426c94:	cmp	x8, #0x1
  426c98:	b.lt	426ce0 <_obstack_memory_used@@Base+0xf7c4>  // b.tstop
  426c9c:	ldr	x9, [x15, #216]
  426ca0:	mov	x27, xzr
  426ca4:	mov	x10, x8
  426ca8:	add	x11, x10, x27
  426cac:	cmp	x11, #0x0
  426cb0:	cinc	x11, x11, lt  // lt = tstop
  426cb4:	asr	x11, x11, #1
  426cb8:	madd	x12, x11, x13, x9
  426cbc:	ldr	x12, [x12, #8]
  426cc0:	cmp	x12, x2
  426cc4:	csel	x10, x10, x11, lt  // lt = tstop
  426cc8:	csinc	x27, x27, x11, ge  // ge = tcont
  426ccc:	cmp	x27, x10
  426cd0:	b.lt	426ca8 <_obstack_memory_used@@Base+0xf78c>  // b.tstop
  426cd4:	cmp	x27, x8
  426cd8:	b.lt	426cec <_obstack_memory_used@@Base+0xf7d0>  // b.tstop
  426cdc:	b	426d00 <_obstack_memory_used@@Base+0xf7e4>
  426ce0:	mov	x27, xzr
  426ce4:	cmp	x27, x8
  426ce8:	b.ge	426d00 <_obstack_memory_used@@Base+0xf7e4>  // b.tcont
  426cec:	ldr	x9, [x15, #216]
  426cf0:	madd	x9, x27, x13, x9
  426cf4:	ldr	x9, [x9, #8]
  426cf8:	cmp	x9, x2
  426cfc:	b.eq	426d04 <_obstack_memory_used@@Base+0xf7e8>  // b.none
  426d00:	mov	x27, #0xffffffffffffffff    	// #-1
  426d04:	cmp	x8, #0x1
  426d08:	b.lt	426d54 <_obstack_memory_used@@Base+0xf838>  // b.tstop
  426d0c:	ldr	x9, [x15, #216]
  426d10:	mov	x28, xzr
  426d14:	mov	x10, x8
  426d18:	add	x11, x10, x28
  426d1c:	cmp	x11, #0x0
  426d20:	cinc	x11, x11, lt  // lt = tstop
  426d24:	asr	x11, x11, #1
  426d28:	madd	x12, x11, x13, x9
  426d2c:	ldr	x12, [x12, #8]
  426d30:	cmp	x12, x20
  426d34:	csel	x10, x10, x11, lt  // lt = tstop
  426d38:	csinc	x28, x28, x11, ge  // ge = tcont
  426d3c:	cmp	x28, x10
  426d40:	b.lt	426d18 <_obstack_memory_used@@Base+0xf7fc>  // b.tstop
  426d44:	cmp	x28, x8
  426d48:	str	x17, [sp, #80]
  426d4c:	b.lt	426d64 <_obstack_memory_used@@Base+0xf848>  // b.tstop
  426d50:	b	426d78 <_obstack_memory_used@@Base+0xf85c>
  426d54:	mov	x28, xzr
  426d58:	cmp	x28, x8
  426d5c:	str	x17, [sp, #80]
  426d60:	b.ge	426d78 <_obstack_memory_used@@Base+0xf85c>  // b.tcont
  426d64:	ldr	x8, [x15, #216]
  426d68:	madd	x8, x28, x13, x8
  426d6c:	ldr	x8, [x8, #8]
  426d70:	cmp	x8, x20
  426d74:	b.eq	426d7c <_obstack_memory_used@@Base+0xf860>  // b.none
  426d78:	mov	x28, #0xffffffffffffffff    	// #-1
  426d7c:	ldr	x23, [x14, #40]
  426d80:	cmp	x23, #0x1
  426d84:	b.lt	426f08 <_obstack_memory_used@@Base+0xf9ec>  // b.tstop
  426d88:	ldr	x16, [x15, #152]
  426d8c:	mov	x19, xzr
  426d90:	str	x16, [sp, #96]
  426d94:	b	426db4 <_obstack_memory_used@@Base+0xf898>
  426d98:	mov	w0, #0xffffffff            	// #-1
  426d9c:	cmp	w0, w23
  426da0:	b.ne	426ef0 <_obstack_memory_used@@Base+0xf9d4>  // b.any
  426da4:	ldr	x23, [x14, #40]
  426da8:	add	x19, x19, #0x1
  426dac:	cmp	x19, x23
  426db0:	b.ge	426f08 <_obstack_memory_used@@Base+0xf9ec>  // b.tcont
  426db4:	ldr	x8, [x14, #48]
  426db8:	ldr	x9, [x15, #216]
  426dbc:	ldr	x12, [x16]
  426dc0:	ldr	x8, [x8, x19, lsl #3]
  426dc4:	madd	x10, x8, x13, x9
  426dc8:	ldr	x11, [x10]
  426dcc:	ldr	x10, [x10, #16]
  426dd0:	lsl	x11, x11, #4
  426dd4:	ldr	x22, [x12, x11]
  426dd8:	cmp	x10, x2
  426ddc:	b.le	426df0 <_obstack_memory_used@@Base+0xf8d4>
  426de0:	mov	w23, #0xffffffff            	// #-1
  426de4:	cmp	x10, x20
  426de8:	b.gt	426d98 <_obstack_memory_used@@Base+0xf87c>
  426dec:	b	426e7c <_obstack_memory_used@@Base+0xf960>
  426df0:	madd	x11, x8, x13, x9
  426df4:	ldr	x11, [x11, #24]
  426df8:	cmp	x11, x2
  426dfc:	b.ge	426e10 <_obstack_memory_used@@Base+0xf8f4>  // b.tcont
  426e00:	mov	w23, #0x1                   	// #1
  426e04:	cmp	x10, x20
  426e08:	b.gt	426d98 <_obstack_memory_used@@Base+0xf87c>
  426e0c:	b	426e7c <_obstack_memory_used@@Base+0xf960>
  426e10:	cmp	x10, x2
  426e14:	cset	w1, eq  // eq = none
  426e18:	cmp	x11, x2
  426e1c:	cset	w11, eq  // eq = none
  426e20:	bfi	w1, w11, #1, #1
  426e24:	cbz	w1, 426e70 <_obstack_memory_used@@Base+0xf954>
  426e28:	ldr	x3, [sp, #104]
  426e2c:	mov	x0, x15
  426e30:	mov	x2, x22
  426e34:	mov	x4, x27
  426e38:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  426e3c:	ldp	x15, x14, [sp, #112]
  426e40:	mov	w13, #0x28                  	// #40
  426e44:	ldr	x16, [sp, #96]
  426e48:	ldur	x2, [x29, #-112]
  426e4c:	ldr	x8, [x14, #48]
  426e50:	ldr	x9, [x15, #216]
  426e54:	mov	w23, w0
  426e58:	ldr	x8, [x8, x19, lsl #3]
  426e5c:	madd	x10, x8, x13, x9
  426e60:	ldr	x10, [x10, #16]
  426e64:	cmp	x10, x20
  426e68:	b.le	426e7c <_obstack_memory_used@@Base+0xf960>
  426e6c:	b	426d98 <_obstack_memory_used@@Base+0xf87c>
  426e70:	mov	w23, wzr
  426e74:	cmp	x10, x20
  426e78:	b.gt	426d98 <_obstack_memory_used@@Base+0xf87c>
  426e7c:	madd	x8, x8, x13, x9
  426e80:	ldr	x8, [x8, #24]
  426e84:	cmp	x8, x20
  426e88:	b.ge	426e9c <_obstack_memory_used@@Base+0xf980>  // b.tcont
  426e8c:	mov	w0, #0x1                   	// #1
  426e90:	cmp	w0, w23
  426e94:	b.eq	426da4 <_obstack_memory_used@@Base+0xf888>  // b.none
  426e98:	b	426ef0 <_obstack_memory_used@@Base+0xf9d4>
  426e9c:	cmp	x10, x20
  426ea0:	cset	w1, eq  // eq = none
  426ea4:	cmp	x8, x20
  426ea8:	cset	w8, eq  // eq = none
  426eac:	bfi	w1, w8, #1, #1
  426eb0:	cbz	w1, 426ee4 <_obstack_memory_used@@Base+0xf9c8>
  426eb4:	mov	x0, x15
  426eb8:	mov	x2, x22
  426ebc:	mov	x3, x26
  426ec0:	mov	x4, x28
  426ec4:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  426ec8:	ldr	x16, [sp, #96]
  426ecc:	ldp	x15, x14, [sp, #112]
  426ed0:	ldur	x2, [x29, #-112]
  426ed4:	mov	w13, #0x28                  	// #40
  426ed8:	cmp	w0, w23
  426edc:	b.eq	426da4 <_obstack_memory_used@@Base+0xf888>  // b.none
  426ee0:	b	426ef0 <_obstack_memory_used@@Base+0xf9d4>
  426ee4:	mov	w0, wzr
  426ee8:	cmp	w0, w23
  426eec:	b.eq	426da4 <_obstack_memory_used@@Base+0xf888>  // b.none
  426ef0:	ldp	x28, x27, [sp, #48]
  426ef4:	ldr	x19, [sp, #64]
  426ef8:	ldr	x16, [sp, #104]
  426efc:	ldr	x17, [sp, #80]
  426f00:	mov	w23, #0x18                  	// #24
  426f04:	b	426be0 <_obstack_memory_used@@Base+0xf6c4>
  426f08:	ldp	x28, x27, [sp, #48]
  426f0c:	ldp	x25, x11, [sp, #72]
  426f10:	ldr	x20, [sp, #104]
  426f14:	ldr	x8, [sp, #88]
  426f18:	cbz	x8, 426f38 <_obstack_memory_used@@Base+0xfa1c>
  426f1c:	ldr	x8, [sp, #40]
  426f20:	stp	x20, x2, [x29, #-80]
  426f24:	cbz	x8, 427008 <_obstack_memory_used@@Base+0xfaec>
  426f28:	mov	w23, #0x18                  	// #24
  426f2c:	cbnz	x11, 427224 <_obstack_memory_used@@Base+0xfd08>
  426f30:	str	x24, [x25]
  426f34:	b	427074 <_obstack_memory_used@@Base+0xfb58>
  426f38:	ldr	x8, [x14, #48]
  426f3c:	ldp	q2, q0, [x14, #16]
  426f40:	ldr	q1, [x14]
  426f44:	cmp	x23, #0x1
  426f48:	stp	q2, q0, [x29, #-80]
  426f4c:	stp	x23, x8, [x29, #-56]
  426f50:	stur	q1, [x29, #-96]
  426f54:	b.lt	426ff8 <_obstack_memory_used@@Base+0xfadc>  // b.tstop
  426f58:	lsl	x22, x23, #3
  426f5c:	mov	x0, x22
  426f60:	stur	x23, [x29, #-64]
  426f64:	bl	402730 <malloc@plt>
  426f68:	stur	x0, [x29, #-48]
  426f6c:	cbz	x0, 4272ac <_obstack_memory_used@@Base+0xfd90>
  426f70:	ldr	x8, [sp, #120]
  426f74:	mov	x2, x22
  426f78:	mov	x25, x0
  426f7c:	ldr	x1, [x8, #48]
  426f80:	bl	402580 <memcpy@plt>
  426f84:	ldur	x8, [x29, #-112]
  426f88:	mov	x11, x23
  426f8c:	mov	w23, #0x18                  	// #24
  426f90:	stp	x20, x8, [x29, #-80]
  426f94:	lsl	x8, x11, #1
  426f98:	lsl	x1, x11, #4
  426f9c:	mov	x0, x25
  426fa0:	str	x8, [sp, #40]
  426fa4:	stur	x8, [x29, #-64]
  426fa8:	bl	402870 <realloc@plt>
  426fac:	cbz	x0, 4272bc <_obstack_memory_used@@Base+0xfda0>
  426fb0:	ldur	x11, [x29, #-56]
  426fb4:	ldur	x2, [x29, #-112]
  426fb8:	mov	x25, x0
  426fbc:	stur	x0, [x29, #-48]
  426fc0:	ldr	x8, [x25]
  426fc4:	cmp	x8, x24
  426fc8:	b.le	427044 <_obstack_memory_used@@Base+0xfb28>
  426fcc:	ldr	x15, [sp, #112]
  426fd0:	cmp	x11, #0x1
  426fd4:	b.lt	427070 <_obstack_memory_used@@Base+0xfb54>  // b.tstop
  426fd8:	mov	x8, x11
  426fdc:	add	x9, x25, x8, lsl #3
  426fe0:	ldur	x10, [x9, #-8]
  426fe4:	subs	x11, x8, #0x1
  426fe8:	mov	x8, x11
  426fec:	str	x10, [x9]
  426ff0:	b.gt	426fdc <_obstack_memory_used@@Base+0xfac0>
  426ff4:	b	427070 <_obstack_memory_used@@Base+0xfb54>
  426ff8:	ldr	x8, [sp, #8]
  426ffc:	stp	xzr, xzr, [x8]
  427000:	str	xzr, [x8, #16]
  427004:	stp	x20, x2, [x29, #-80]
  427008:	ldr	q0, [sp, #16]
  42700c:	mov	w0, #0x8                   	// #8
  427010:	stur	q0, [x29, #-64]
  427014:	bl	402730 <malloc@plt>
  427018:	mov	w23, #0x18                  	// #24
  42701c:	stur	x0, [x29, #-48]
  427020:	cbz	x0, 4272ac <_obstack_memory_used@@Base+0xfd90>
  427024:	ldur	x2, [x29, #-112]
  427028:	ldr	x15, [sp, #112]
  42702c:	mov	w8, #0x1                   	// #1
  427030:	mov	x25, x0
  427034:	str	x24, [x0]
  427038:	mov	w20, #0x1                   	// #1
  42703c:	str	x8, [sp, #40]
  427040:	b	427080 <_obstack_memory_used@@Base+0xfb64>
  427044:	add	x8, x25, x11, lsl #3
  427048:	ldur	x8, [x8, #-8]
  42704c:	ldr	x15, [sp, #112]
  427050:	cmp	x8, x24
  427054:	b.le	427070 <_obstack_memory_used@@Base+0xfb54>
  427058:	add	x9, x25, x11, lsl #3
  42705c:	str	x8, [x9]
  427060:	ldur	x8, [x9, #-16]
  427064:	sub	x11, x11, #0x1
  427068:	cmp	x8, x24
  42706c:	b.gt	427058 <_obstack_memory_used@@Base+0xfb3c>
  427070:	str	x24, [x25, x11, lsl #3]
  427074:	ldur	x8, [x29, #-56]
  427078:	add	x20, x8, #0x1
  42707c:	stur	x20, [x29, #-56]
  427080:	ldur	x8, [x29, #-96]
  427084:	sub	x1, x29, #0x60
  427088:	mov	x0, x15
  42708c:	ldr	x19, [x8, x2, lsl #3]
  427090:	str	x8, [sp, #88]
  427094:	bl	4260b4 <_obstack_memory_used@@Base+0xeb98>
  427098:	cbnz	w0, 42729c <_obstack_memory_used@@Base+0xfd80>
  42709c:	ldp	x15, x14, [sp, #112]
  4270a0:	ldur	x2, [x29, #-112]
  4270a4:	mov	w13, #0x28                  	// #40
  4270a8:	str	x25, [sp, #72]
  4270ac:	ldr	x22, [x14, #8]
  4270b0:	cbz	x22, 42713c <_obstack_memory_used@@Base+0xfc20>
  4270b4:	tbnz	x2, #63, 427134 <_obstack_memory_used@@Base+0xfc18>
  4270b8:	ldr	x23, [sp, #88]
  4270bc:	ldr	x25, [sp, #32]
  4270c0:	b	4270d8 <_obstack_memory_used@@Base+0xfbbc>
  4270c4:	str	x8, [x22]
  4270c8:	subs	x25, x25, #0x1
  4270cc:	add	x23, x23, #0x8
  4270d0:	add	x22, x22, #0x8
  4270d4:	b.eq	427134 <_obstack_memory_used@@Base+0xfc18>  // b.none
  4270d8:	ldr	x9, [x22]
  4270dc:	ldr	x8, [x23]
  4270e0:	cbz	x9, 4270c4 <_obstack_memory_used@@Base+0xfba8>
  4270e4:	cbz	x8, 4270c8 <_obstack_memory_used@@Base+0xfbac>
  4270e8:	add	x1, x9, #0x8
  4270ec:	add	x2, x8, #0x8
  4270f0:	sub	x0, x29, #0x28
  4270f4:	bl	4244e0 <_obstack_memory_used@@Base+0xcfc4>
  4270f8:	stur	w0, [x29, #-12]
  4270fc:	cbnz	w0, 42729c <_obstack_memory_used@@Base+0xfd80>
  427100:	sub	x0, x29, #0xc
  427104:	sub	x2, x29, #0x28
  427108:	mov	x1, x28
  42710c:	bl	42588c <_obstack_memory_used@@Base+0xe370>
  427110:	str	x0, [x22]
  427114:	ldur	x0, [x29, #-24]
  427118:	bl	402a10 <free@plt>
  42711c:	ldur	w26, [x29, #-12]
  427120:	ldur	x2, [x29, #-112]
  427124:	ldp	x15, x14, [sp, #112]
  427128:	mov	w13, #0x28                  	// #40
  42712c:	cbz	w26, 4270c8 <_obstack_memory_used@@Base+0xfbac>
  427130:	b	427270 <_obstack_memory_used@@Base+0xfd54>
  427134:	ldr	x25, [sp, #72]
  427138:	mov	w23, #0x18                  	// #24
  42713c:	ldr	x8, [sp, #88]
  427140:	subs	x17, x20, #0x1
  427144:	str	x19, [x8, x2, lsl #3]
  427148:	b.lt	42720c <_obstack_memory_used@@Base+0xfcf0>  // b.tstop
  42714c:	ldr	x19, [sp, #64]
  427150:	ldr	x16, [sp, #104]
  427154:	mov	x8, xzr
  427158:	b.eq	427180 <_obstack_memory_used@@Base+0xfc64>  // b.none
  42715c:	mov	x9, x17
  427160:	add	x10, x8, x9
  427164:	lsr	x10, x10, #1
  427168:	ldr	x11, [x25, x10, lsl #3]
  42716c:	cmp	x11, x24
  427170:	csinc	x8, x8, x10, ge  // ge = tcont
  427174:	csel	x9, x9, x10, lt  // lt = tstop
  427178:	cmp	x8, x9
  42717c:	b.cc	427160 <_obstack_memory_used@@Base+0xfc44>  // b.lo, b.ul, b.last
  427180:	ldr	x9, [x25, x8, lsl #3]
  427184:	cmp	x9, x24
  427188:	csinv	x9, x8, xzr, eq  // eq = none
  42718c:	tbnz	x9, #63, 427214 <_obstack_memory_used@@Base+0xfcf8>
  427190:	cmp	x20, x9
  427194:	b.le	427214 <_obstack_memory_used@@Base+0xfcf8>
  427198:	cmp	x17, x9
  42719c:	stur	x17, [x29, #-56]
  4271a0:	b.le	427218 <_obstack_memory_used@@Base+0xfcfc>
  4271a4:	add	x9, x8, #0x1
  4271a8:	cmp	x17, x9
  4271ac:	csinc	x9, x17, x8, gt
  4271b0:	sub	x9, x9, x8
  4271b4:	cmp	x9, #0x4
  4271b8:	b.cc	4271f0 <_obstack_memory_used@@Base+0xfcd4>  // b.lo, b.ul, b.last
  4271bc:	and	x10, x9, #0xfffffffffffffffc
  4271c0:	add	x11, x25, x8, lsl #3
  4271c4:	add	x8, x8, x10
  4271c8:	add	x11, x11, #0x10
  4271cc:	mov	x12, x10
  4271d0:	ldur	q0, [x11, #-8]
  4271d4:	ldur	q1, [x11, #8]
  4271d8:	subs	x12, x12, #0x4
  4271dc:	stp	q0, q1, [x11, #-16]
  4271e0:	add	x11, x11, #0x20
  4271e4:	b.ne	4271d0 <_obstack_memory_used@@Base+0xfcb4>  // b.any
  4271e8:	cmp	x9, x10
  4271ec:	b.eq	427218 <_obstack_memory_used@@Base+0xfcfc>  // b.none
  4271f0:	add	x9, x25, x8, lsl #3
  4271f4:	ldr	x10, [x9, #8]
  4271f8:	add	x8, x8, #0x1
  4271fc:	cmp	x8, x17
  427200:	str	x10, [x9]
  427204:	b.lt	4271f0 <_obstack_memory_used@@Base+0xfcd4>  // b.tstop
  427208:	b	427218 <_obstack_memory_used@@Base+0xfcfc>
  42720c:	ldr	x19, [sp, #64]
  427210:	ldr	x16, [sp, #104]
  427214:	mov	x17, x20
  427218:	ldr	x8, [x15, #216]
  42721c:	madd	x25, x24, x13, x8
  427220:	b	426be0 <_obstack_memory_used@@Base+0xf6c4>
  427224:	ldr	x8, [sp, #40]
  427228:	cmp	x8, x11
  42722c:	b.eq	426f94 <_obstack_memory_used@@Base+0xfa78>  // b.none
  427230:	b	426fc0 <_obstack_memory_used@@Base+0xfaa4>
  427234:	stur	wzr, [x29, #-100]
  427238:	mov	w26, wzr
  42723c:	mov	w0, w26
  427240:	ldp	x20, x19, [sp, #320]
  427244:	ldp	x22, x21, [sp, #304]
  427248:	ldp	x24, x23, [sp, #288]
  42724c:	ldp	x26, x25, [sp, #272]
  427250:	ldp	x28, x27, [sp, #256]
  427254:	ldp	x29, x30, [sp, #240]
  427258:	add	sp, sp, #0x150
  42725c:	ret
  427260:	mov	w26, w0
  427264:	stur	w0, [x29, #-100]
  427268:	b	42723c <_obstack_memory_used@@Base+0xfd20>
  42726c:	mov	w26, wzr
  427270:	ldur	x8, [x29, #-96]
  427274:	cbz	x8, 427280 <_obstack_memory_used@@Base+0xfd64>
  427278:	ldur	x0, [x29, #-48]
  42727c:	bl	402a10 <free@plt>
  427280:	stur	w26, [x29, #-100]
  427284:	cbz	w26, 427238 <_obstack_memory_used@@Base+0xfd1c>
  427288:	b	42723c <_obstack_memory_used@@Base+0xfd20>
  42728c:	mov	w26, #0xc                   	// #12
  427290:	stur	w0, [x29, #-96]
  427294:	stur	w26, [x29, #-100]
  427298:	b	42723c <_obstack_memory_used@@Base+0xfd20>
  42729c:	mov	w26, w0
  4272a0:	b	427270 <_obstack_memory_used@@Base+0xfd54>
  4272a4:	mov	w26, w0
  4272a8:	b	42723c <_obstack_memory_used@@Base+0xfd20>
  4272ac:	ldr	x8, [sp, #8]
  4272b0:	mov	w26, #0xc                   	// #12
  4272b4:	stp	xzr, xzr, [x8]
  4272b8:	b	427270 <_obstack_memory_used@@Base+0xfd54>
  4272bc:	mov	w26, #0xc                   	// #12
  4272c0:	b	427270 <_obstack_memory_used@@Base+0xfd54>
  4272c4:	stp	x29, x30, [sp, #-48]!
  4272c8:	stp	x22, x21, [sp, #16]
  4272cc:	stp	x20, x19, [sp, #32]
  4272d0:	ldr	x9, [x1, #8]
  4272d4:	mov	x29, sp
  4272d8:	cbz	x9, 427470 <_obstack_memory_used@@Base+0xff54>
  4272dc:	ldr	x10, [x2, #8]
  4272e0:	mov	x20, x2
  4272e4:	cbz	x10, 427470 <_obstack_memory_used@@Base+0xff54>
  4272e8:	ldp	x8, x13, [x0]
  4272ec:	add	x11, x10, x9
  4272f0:	mov	x21, x1
  4272f4:	mov	x19, x0
  4272f8:	add	x12, x13, x11
  4272fc:	cmp	x12, x8
  427300:	b.le	42732c <_obstack_memory_used@@Base+0xfe10>
  427304:	ldr	x0, [x19, #16]
  427308:	add	x22, x8, x11
  42730c:	lsl	x1, x22, #3
  427310:	bl	402870 <realloc@plt>
  427314:	cbz	x0, 427484 <_obstack_memory_used@@Base+0xff68>
  427318:	str	x0, [x19, #16]
  42731c:	str	x22, [x19]
  427320:	ldr	x13, [x19, #8]
  427324:	ldr	x9, [x21, #8]
  427328:	ldr	x10, [x20, #8]
  42732c:	ldr	x11, [x21, #16]
  427330:	ldr	x12, [x20, #16]
  427334:	add	x8, x9, x13
  427338:	add	x8, x8, x10
  42733c:	sub	x13, x13, #0x1
  427340:	sub	x9, x9, #0x1
  427344:	mov	x14, x10
  427348:	sub	x10, x14, #0x1
  42734c:	ldr	x16, [x12, x10, lsl #3]
  427350:	ldr	x15, [x11, x9, lsl #3]
  427354:	cmp	x15, x16
  427358:	b.eq	427380 <_obstack_memory_used@@Base+0xfe64>  // b.none
  42735c:	b.lt	427370 <_obstack_memory_used@@Base+0xfe54>  // b.tstop
  427360:	cmp	x9, #0x0
  427364:	sub	x9, x9, #0x1
  427368:	b.gt	427350 <_obstack_memory_used@@Base+0xfe34>
  42736c:	b	4273d8 <_obstack_memory_used@@Base+0xfebc>
  427370:	cmp	x14, #0x2
  427374:	mov	x14, x10
  427378:	b.ge	427348 <_obstack_memory_used@@Base+0xfe2c>  // b.tcont
  42737c:	b	4273d8 <_obstack_memory_used@@Base+0xfebc>
  427380:	tbnz	x13, #63, 4273a8 <_obstack_memory_used@@Base+0xfe8c>
  427384:	ldr	x17, [x19, #16]
  427388:	ldr	x16, [x17, x13, lsl #3]
  42738c:	cmp	x16, x15
  427390:	b.le	4273b0 <_obstack_memory_used@@Base+0xfe94>
  427394:	sub	x16, x13, #0x1
  427398:	cmp	x13, #0x0
  42739c:	mov	x13, x16
  4273a0:	b.gt	427388 <_obstack_memory_used@@Base+0xfe6c>
  4273a4:	b	4273b8 <_obstack_memory_used@@Base+0xfe9c>
  4273a8:	mov	x16, x13
  4273ac:	b	4273b8 <_obstack_memory_used@@Base+0xfe9c>
  4273b0:	mov	x16, x13
  4273b4:	b.eq	4273c8 <_obstack_memory_used@@Base+0xfeac>  // b.none
  4273b8:	ldr	x13, [x19, #16]
  4273bc:	sub	x8, x8, #0x1
  4273c0:	str	x15, [x13, x8, lsl #3]
  4273c4:	mov	x13, x16
  4273c8:	cmp	x9, #0x1
  4273cc:	b.lt	4273d8 <_obstack_memory_used@@Base+0xfebc>  // b.tstop
  4273d0:	cmp	x14, #0x2
  4273d4:	b.ge	427340 <_obstack_memory_used@@Base+0xfe24>  // b.tcont
  4273d8:	ldp	x12, x0, [x19, #8]
  4273dc:	ldr	x13, [x21, #8]
  4273e0:	ldr	x14, [x20, #8]
  4273e4:	subs	x9, x12, #0x1
  4273e8:	add	x9, x9, x13
  4273ec:	add	x10, x9, x14
  4273f0:	sub	x15, x10, x8
  4273f4:	add	x9, x15, #0x1
  4273f8:	subs	x11, x12, #0x1
  4273fc:	add	x16, x9, x12
  427400:	str	x16, [x19, #8]
  427404:	b.lt	427460 <_obstack_memory_used@@Base+0xff44>  // b.tstop
  427408:	tbnz	x15, #63, 427460 <_obstack_memory_used@@Base+0xff44>
  42740c:	add	x12, x12, x14
  427410:	add	x12, x12, x13
  427414:	sub	x12, x12, x8
  427418:	add	x12, x0, x12, lsl #3
  42741c:	ldr	x14, [x0, x10, lsl #3]
  427420:	ldr	x13, [x0, x11, lsl #3]
  427424:	cmp	x14, x13
  427428:	b.gt	427444 <_obstack_memory_used@@Base+0xff28>
  42742c:	sub	x14, x11, #0x1
  427430:	cmp	x11, #0x0
  427434:	str	x13, [x12, x11, lsl #3]
  427438:	mov	x11, x14
  42743c:	b.gt	42741c <_obstack_memory_used@@Base+0xff00>
  427440:	b	427460 <_obstack_memory_used@@Base+0xff44>
  427444:	mov	x13, xzr
  427448:	sub	x10, x10, #0x1
  42744c:	sub	x9, x9, #0x1
  427450:	str	x14, [x12, x11, lsl #3]
  427454:	sub	x12, x12, #0x8
  427458:	cbnz	x9, 42741c <_obstack_memory_used@@Base+0xff00>
  42745c:	b	427464 <_obstack_memory_used@@Base+0xff48>
  427460:	mov	x13, x9
  427464:	add	x1, x0, x8, lsl #3
  427468:	lsl	x2, x13, #3
  42746c:	bl	402580 <memcpy@plt>
  427470:	mov	w0, wzr
  427474:	ldp	x20, x19, [sp, #32]
  427478:	ldp	x22, x21, [sp, #16]
  42747c:	ldp	x29, x30, [sp], #48
  427480:	ret
  427484:	mov	w0, #0xc                   	// #12
  427488:	ldp	x20, x19, [sp, #32]
  42748c:	ldp	x22, x21, [sp, #16]
  427490:	ldp	x29, x30, [sp], #48
  427494:	ret
  427498:	sub	sp, sp, #0x80
  42749c:	stp	x29, x30, [sp, #32]
  4274a0:	stp	x28, x27, [sp, #48]
  4274a4:	stp	x26, x25, [sp, #64]
  4274a8:	stp	x24, x23, [sp, #80]
  4274ac:	stp	x22, x21, [sp, #96]
  4274b0:	stp	x20, x19, [sp, #112]
  4274b4:	ldr	x25, [x0, #56]
  4274b8:	mov	w8, #0x18                  	// #24
  4274bc:	stp	xzr, xzr, [sp, #8]
  4274c0:	str	xzr, [sp, #24]
  4274c4:	madd	x24, x1, x8, x25
  4274c8:	ldr	x8, [x24, #8]!
  4274cc:	add	x29, sp, #0x20
  4274d0:	cmp	x8, #0x1
  4274d4:	b.lt	427770 <_obstack_memory_used@@Base+0x10254>  // b.tstop
  4274d8:	mov	w27, #0x18                  	// #24
  4274dc:	madd	x9, x1, x27, x25
  4274e0:	mov	x21, x3
  4274e4:	mov	x20, x1
  4274e8:	mov	x22, x0
  4274ec:	mov	x19, x2
  4274f0:	mov	x26, xzr
  4274f4:	add	x28, x9, #0x10
  4274f8:	b	427508 <_obstack_memory_used@@Base+0xffec>
  4274fc:	add	x26, x26, #0x1
  427500:	cmp	x26, x8
  427504:	b.ge	42767c <_obstack_memory_used@@Base+0x10160>  // b.tcont
  427508:	ldr	x11, [x28]
  42750c:	ldr	x9, [x11, x26, lsl #3]
  427510:	cmp	x9, x20
  427514:	b.eq	4274fc <_obstack_memory_used@@Base+0xffe0>  // b.none
  427518:	ldr	x10, [x22]
  42751c:	add	x10, x10, x9, lsl #4
  427520:	ldrb	w10, [x10, #8]
  427524:	tbz	w10, #3, 4274fc <_obstack_memory_used@@Base+0xffe0>
  427528:	ldr	x10, [x22, #40]
  42752c:	madd	x12, x9, x27, x10
  427530:	ldp	x13, x10, [x12, #8]
  427534:	ldr	x12, [x10]
  427538:	cmp	x13, #0x1
  42753c:	b.le	427550 <_obstack_memory_used@@Base+0x10034>
  427540:	ldr	x10, [x10, #8]
  427544:	subs	x13, x8, #0x1
  427548:	b.ge	42755c <_obstack_memory_used@@Base+0x10040>  // b.tcont
  42754c:	b	427590 <_obstack_memory_used@@Base+0x10074>
  427550:	mov	x10, #0xffffffffffffffff    	// #-1
  427554:	subs	x13, x8, #0x1
  427558:	b.lt	427590 <_obstack_memory_used@@Base+0x10074>  // b.tstop
  42755c:	mov	x14, xzr
  427560:	b.eq	427584 <_obstack_memory_used@@Base+0x10068>  // b.none
  427564:	add	x15, x14, x13
  427568:	lsr	x15, x15, #1
  42756c:	ldr	x16, [x11, x15, lsl #3]
  427570:	cmp	x16, x12
  427574:	csinc	x14, x14, x15, ge  // ge = tcont
  427578:	csel	x13, x13, x15, lt  // lt = tstop
  42757c:	cmp	x14, x13
  427580:	b.cc	427564 <_obstack_memory_used@@Base+0x10048>  // b.lo, b.ul, b.last
  427584:	ldr	x13, [x11, x14, lsl #3]
  427588:	cmp	x13, x12
  42758c:	b.eq	4275d4 <_obstack_memory_used@@Base+0x100b8>  // b.none
  427590:	ldr	x13, [x19, #8]
  427594:	subs	x14, x13, #0x1
  427598:	b.lt	4275d4 <_obstack_memory_used@@Base+0x100b8>  // b.tstop
  42759c:	ldr	x13, [x19, #16]
  4275a0:	mov	x15, xzr
  4275a4:	b.eq	4275c8 <_obstack_memory_used@@Base+0x100ac>  // b.none
  4275a8:	add	x16, x15, x14
  4275ac:	lsr	x16, x16, #1
  4275b0:	ldr	x17, [x13, x16, lsl #3]
  4275b4:	cmp	x17, x12
  4275b8:	csinc	x15, x15, x16, ge  // ge = tcont
  4275bc:	csel	x14, x14, x16, lt  // lt = tstop
  4275c0:	cmp	x15, x14
  4275c4:	b.cc	4275a8 <_obstack_memory_used@@Base+0x1008c>  // b.lo, b.ul, b.last
  4275c8:	ldr	x13, [x13, x15, lsl #3]
  4275cc:	cmp	x13, x12
  4275d0:	b.eq	42765c <_obstack_memory_used@@Base+0x10140>  // b.none
  4275d4:	cmp	x10, #0x1
  4275d8:	b.lt	4274fc <_obstack_memory_used@@Base+0xffe0>  // b.tstop
  4275dc:	subs	x12, x8, #0x1
  4275e0:	b.lt	427618 <_obstack_memory_used@@Base+0x100fc>  // b.tstop
  4275e4:	mov	x13, xzr
  4275e8:	b.eq	42760c <_obstack_memory_used@@Base+0x100f0>  // b.none
  4275ec:	add	x14, x13, x12
  4275f0:	lsr	x14, x14, #1
  4275f4:	ldr	x15, [x11, x14, lsl #3]
  4275f8:	cmp	x15, x10
  4275fc:	csinc	x13, x13, x14, ge  // ge = tcont
  427600:	csel	x12, x12, x14, lt  // lt = tstop
  427604:	cmp	x13, x12
  427608:	b.cc	4275ec <_obstack_memory_used@@Base+0x100d0>  // b.lo, b.ul, b.last
  42760c:	ldr	x11, [x11, x13, lsl #3]
  427610:	cmp	x11, x10
  427614:	b.eq	4274fc <_obstack_memory_used@@Base+0xffe0>  // b.none
  427618:	ldr	x11, [x19, #8]
  42761c:	subs	x12, x11, #0x1
  427620:	b.lt	4274fc <_obstack_memory_used@@Base+0xffe0>  // b.tstop
  427624:	ldr	x11, [x19, #16]
  427628:	mov	x13, xzr
  42762c:	b.eq	427650 <_obstack_memory_used@@Base+0x10134>  // b.none
  427630:	add	x14, x13, x12
  427634:	lsr	x14, x14, #1
  427638:	ldr	x15, [x11, x14, lsl #3]
  42763c:	cmp	x15, x10
  427640:	csinc	x13, x13, x14, ge  // ge = tcont
  427644:	csel	x12, x12, x14, lt  // lt = tstop
  427648:	cmp	x13, x12
  42764c:	b.cc	427630 <_obstack_memory_used@@Base+0x10114>  // b.lo, b.ul, b.last
  427650:	ldr	x11, [x11, x13, lsl #3]
  427654:	cmp	x11, x10
  427658:	b.ne	4274fc <_obstack_memory_used@@Base+0xffe0>  // b.any
  42765c:	ldr	x8, [x22, #56]
  427660:	add	x0, sp, #0x8
  427664:	mov	x1, x21
  427668:	madd	x2, x9, x27, x8
  42766c:	bl	4272c4 <_obstack_memory_used@@Base+0xfda8>
  427670:	cbnz	w0, 427840 <_obstack_memory_used@@Base+0x10324>
  427674:	ldr	x8, [x24]
  427678:	b	4274fc <_obstack_memory_used@@Base+0xffe0>
  42767c:	cmp	x8, #0x0
  427680:	b.le	427770 <_obstack_memory_used@@Base+0x10254>
  427684:	mov	w8, #0x18                  	// #24
  427688:	madd	x8, x20, x8, x25
  42768c:	ldp	x9, x0, [sp, #16]
  427690:	ldr	x8, [x8, #16]
  427694:	subs	x9, x9, #0x1
  427698:	b.lt	4277a0 <_obstack_memory_used@@Base+0x10284>  // b.tstop
  42769c:	mov	x10, xzr
  4276a0:	b	4276b4 <_obstack_memory_used@@Base+0x10198>
  4276a4:	ldr	x11, [x24]
  4276a8:	add	x10, x10, #0x1
  4276ac:	cmp	x10, x11
  4276b0:	b.ge	427774 <_obstack_memory_used@@Base+0x10258>  // b.tcont
  4276b4:	ldr	x11, [x8, x10, lsl #3]
  4276b8:	mov	x12, xzr
  4276bc:	cbz	x9, 4276e4 <_obstack_memory_used@@Base+0x101c8>
  4276c0:	mov	x13, x9
  4276c4:	add	x14, x12, x13
  4276c8:	lsr	x14, x14, #1
  4276cc:	ldr	x15, [x0, x14, lsl #3]
  4276d0:	cmp	x15, x11
  4276d4:	csinc	x12, x12, x14, ge  // ge = tcont
  4276d8:	csel	x13, x13, x14, lt  // lt = tstop
  4276dc:	cmp	x12, x13
  4276e0:	b.cc	4276c4 <_obstack_memory_used@@Base+0x101a8>  // b.lo, b.ul, b.last
  4276e4:	ldr	x12, [x0, x12, lsl #3]
  4276e8:	cmp	x12, x11
  4276ec:	b.eq	4276a4 <_obstack_memory_used@@Base+0x10188>  // b.none
  4276f0:	ldr	x15, [x19, #8]
  4276f4:	subs	x14, x15, #0x1
  4276f8:	b.lt	4276a4 <_obstack_memory_used@@Base+0x10188>  // b.tstop
  4276fc:	ldr	x12, [x19, #16]
  427700:	mov	x13, xzr
  427704:	b.eq	42772c <_obstack_memory_used@@Base+0x10210>  // b.none
  427708:	mov	x16, x14
  42770c:	add	x17, x13, x16
  427710:	lsr	x17, x17, #1
  427714:	ldr	x18, [x12, x17, lsl #3]
  427718:	cmp	x18, x11
  42771c:	csinc	x13, x13, x17, ge  // ge = tcont
  427720:	csel	x16, x16, x17, lt  // lt = tstop
  427724:	cmp	x13, x16
  427728:	b.cc	42770c <_obstack_memory_used@@Base+0x101f0>  // b.lo, b.ul, b.last
  42772c:	ldr	x16, [x12, x13, lsl #3]
  427730:	cmp	x16, x11
  427734:	csinv	x11, x13, xzr, eq  // eq = none
  427738:	tbnz	x11, #63, 4276a4 <_obstack_memory_used@@Base+0x10188>
  42773c:	cmp	x15, x11
  427740:	b.le	4276a4 <_obstack_memory_used@@Base+0x10188>
  427744:	cmp	x14, x11
  427748:	str	x14, [x19, #8]
  42774c:	b.le	4276a4 <_obstack_memory_used@@Base+0x10188>
  427750:	add	x11, x12, x13, lsl #3
  427754:	ldr	x14, [x11, #8]
  427758:	add	x13, x13, #0x1
  42775c:	str	x14, [x11]
  427760:	ldr	x11, [x19, #8]
  427764:	cmp	x13, x11
  427768:	b.lt	427750 <_obstack_memory_used@@Base+0x10234>  // b.tstop
  42776c:	b	4276a4 <_obstack_memory_used@@Base+0x10188>
  427770:	ldr	x0, [sp, #24]
  427774:	mov	w23, wzr
  427778:	bl	402a10 <free@plt>
  42777c:	mov	w0, w23
  427780:	ldp	x20, x19, [sp, #112]
  427784:	ldp	x22, x21, [sp, #96]
  427788:	ldp	x24, x23, [sp, #80]
  42778c:	ldp	x26, x25, [sp, #64]
  427790:	ldp	x28, x27, [sp, #48]
  427794:	ldp	x29, x30, [sp, #32]
  427798:	add	sp, sp, #0x80
  42779c:	ret
  4277a0:	ldr	x10, [x19, #8]
  4277a4:	mov	x9, xzr
  4277a8:	b	4277bc <_obstack_memory_used@@Base+0x102a0>
  4277ac:	ldr	x11, [x24]
  4277b0:	add	x9, x9, #0x1
  4277b4:	cmp	x9, x11
  4277b8:	b.ge	427774 <_obstack_memory_used@@Base+0x10258>  // b.tcont
  4277bc:	subs	x13, x10, #0x1
  4277c0:	b.lt	4277ac <_obstack_memory_used@@Base+0x10290>  // b.tstop
  4277c4:	ldr	x14, [x8, x9, lsl #3]
  4277c8:	ldr	x11, [x19, #16]
  4277cc:	mov	x12, xzr
  4277d0:	b.eq	4277f8 <_obstack_memory_used@@Base+0x102dc>  // b.none
  4277d4:	mov	x15, x13
  4277d8:	add	x16, x12, x15
  4277dc:	lsr	x16, x16, #1
  4277e0:	ldr	x17, [x11, x16, lsl #3]
  4277e4:	cmp	x17, x14
  4277e8:	csinc	x12, x12, x16, ge  // ge = tcont
  4277ec:	csel	x15, x15, x16, lt  // lt = tstop
  4277f0:	cmp	x12, x15
  4277f4:	b.cc	4277d8 <_obstack_memory_used@@Base+0x102bc>  // b.lo, b.ul, b.last
  4277f8:	ldr	x15, [x11, x12, lsl #3]
  4277fc:	cmp	x15, x14
  427800:	csinv	x14, x12, xzr, eq  // eq = none
  427804:	tbnz	x14, #63, 4277ac <_obstack_memory_used@@Base+0x10290>
  427808:	cmp	x10, x14
  42780c:	b.le	4277ac <_obstack_memory_used@@Base+0x10290>
  427810:	cmp	x13, x14
  427814:	mov	x10, x13
  427818:	str	x13, [x19, #8]
  42781c:	b.le	4277ac <_obstack_memory_used@@Base+0x10290>
  427820:	add	x10, x11, x12, lsl #3
  427824:	ldr	x13, [x10, #8]
  427828:	add	x12, x12, #0x1
  42782c:	str	x13, [x10]
  427830:	ldr	x10, [x19, #8]
  427834:	cmp	x12, x10
  427838:	b.lt	427820 <_obstack_memory_used@@Base+0x10304>  // b.tstop
  42783c:	b	4277ac <_obstack_memory_used@@Base+0x10290>
  427840:	mov	w23, w0
  427844:	ldr	x0, [sp, #24]
  427848:	b	427778 <_obstack_memory_used@@Base+0x1025c>
  42784c:	sub	sp, sp, #0x80
  427850:	stp	x29, x30, [sp, #32]
  427854:	stp	x28, x27, [sp, #48]
  427858:	stp	x26, x25, [sp, #64]
  42785c:	stp	x24, x23, [sp, #80]
  427860:	stp	x22, x21, [sp, #96]
  427864:	stp	x20, x19, [sp, #112]
  427868:	ldr	x24, [x0, #152]
  42786c:	mov	w9, #0x18                  	// #24
  427870:	mov	w23, w1
  427874:	add	x29, sp, #0x20
  427878:	ldr	x8, [x24, #48]
  42787c:	madd	x25, x3, x9, x8
  427880:	ldr	x9, [x25, #8]!
  427884:	cmp	x9, #0x1
  427888:	b.lt	427ad4 <_obstack_memory_used@@Base+0x105b8>  // b.tstop
  42788c:	mov	w11, #0x18                  	// #24
  427890:	cmp	x2, #0x3f
  427894:	madd	x8, x3, x11, x8
  427898:	and	w9, w23, #0x2
  42789c:	mov	w10, #0x1                   	// #1
  4278a0:	cset	w11, gt
  4278a4:	add	x8, x8, #0x10
  4278a8:	lsl	x10, x10, x2
  4278ac:	stur	x8, [x29, #-8]
  4278b0:	orr	w8, w11, w9, lsr #1
  4278b4:	mov	x19, x4
  4278b8:	mov	x20, x3
  4278bc:	mov	x21, x2
  4278c0:	mov	x22, x0
  4278c4:	mov	x26, xzr
  4278c8:	str	w8, [sp, #8]
  4278cc:	mvn	w8, w10
  4278d0:	str	x10, [sp, #16]
  4278d4:	str	w8, [sp, #12]
  4278d8:	b	4278ec <_obstack_memory_used@@Base+0x103d0>
  4278dc:	ldr	x8, [x25]
  4278e0:	add	x26, x26, #0x1
  4278e4:	cmp	x26, x8
  4278e8:	b.ge	427ad4 <_obstack_memory_used@@Base+0x105b8>  // b.tcont
  4278ec:	ldur	x8, [x29, #-8]
  4278f0:	ldr	x8, [x8]
  4278f4:	ldr	x28, [x8, x26, lsl #3]
  4278f8:	ldr	x8, [x24]
  4278fc:	add	x8, x8, x28, lsl #4
  427900:	ldrb	w9, [x8, #8]
  427904:	cmp	w9, #0x9
  427908:	b.eq	427940 <_obstack_memory_used@@Base+0x10424>  // b.none
  42790c:	cmp	w9, #0x8
  427910:	b.eq	427954 <_obstack_memory_used@@Base+0x10438>  // b.none
  427914:	cmp	w9, #0x4
  427918:	b.ne	4278dc <_obstack_memory_used@@Base+0x103c0>  // b.any
  42791c:	cmn	x19, #0x1
  427920:	b.eq	4278dc <_obstack_memory_used@@Base+0x103c0>  // b.none
  427924:	ldr	x8, [x22, #216]
  427928:	cmp	x21, #0x3f
  42792c:	b.gt	4279ec <_obstack_memory_used@@Base+0x104d0>
  427930:	mov	w9, #0x28                  	// #40
  427934:	madd	x8, x19, x9, x8
  427938:	add	x27, x8, #0x22
  42793c:	b	42798c <_obstack_memory_used@@Base+0x10470>
  427940:	tbz	w23, #1, 4278dc <_obstack_memory_used@@Base+0x103c0>
  427944:	ldr	x8, [x8]
  427948:	cmp	x8, x21
  42794c:	b.ne	4278dc <_obstack_memory_used@@Base+0x103c0>  // b.any
  427950:	b	427ae4 <_obstack_memory_used@@Base+0x105c8>
  427954:	tbz	w23, #0, 4278dc <_obstack_memory_used@@Base+0x103c0>
  427958:	ldr	x8, [x8]
  42795c:	cmp	x8, x21
  427960:	b.ne	4278dc <_obstack_memory_used@@Base+0x103c0>  // b.any
  427964:	b	427aec <_obstack_memory_used@@Base+0x105d0>
  427968:	cmn	w0, #0x1
  42796c:	b.eq	427af0 <_obstack_memory_used@@Base+0x105d4>  // b.none
  427970:	ldrh	w8, [x27]
  427974:	ldr	w9, [sp, #12]
  427978:	and	w8, w8, w9
  42797c:	strh	w8, [x27]
  427980:	ldurb	w8, [x27, #-2]
  427984:	add	x27, x27, #0x28
  427988:	cbz	w8, 4278dc <_obstack_memory_used@@Base+0x103c0>
  42798c:	ldur	x8, [x27, #-34]
  427990:	cmp	x8, x28
  427994:	b.ne	427980 <_obstack_memory_used@@Base+0x10464>  // b.any
  427998:	ldrh	w8, [x27]
  42799c:	ldr	x9, [sp, #16]
  4279a0:	tst	x9, x8
  4279a4:	b.eq	427980 <_obstack_memory_used@@Base+0x10464>  // b.none
  4279a8:	ldr	x8, [x24, #40]
  4279ac:	mov	w9, #0x18                  	// #24
  4279b0:	madd	x8, x28, x9, x8
  4279b4:	ldr	x8, [x8, #16]
  4279b8:	ldr	x3, [x8]
  4279bc:	cmp	x3, x20
  4279c0:	b.eq	427adc <_obstack_memory_used@@Base+0x105c0>  // b.none
  4279c4:	mov	x0, x22
  4279c8:	mov	w1, w23
  4279cc:	mov	x2, x21
  4279d0:	mov	x4, x19
  4279d4:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  4279d8:	cbnz	w0, 427968 <_obstack_memory_used@@Base+0x1044c>
  4279dc:	ldr	w8, [sp, #8]
  4279e0:	cbz	w8, 427970 <_obstack_memory_used@@Base+0x10454>
  4279e4:	tbz	w23, #1, 427980 <_obstack_memory_used@@Base+0x10464>
  4279e8:	b	427ae4 <_obstack_memory_used@@Base+0x105c8>
  4279ec:	ldr	w9, [sp, #8]
  4279f0:	tbz	w9, #0, 427a5c <_obstack_memory_used@@Base+0x10540>
  4279f4:	mov	w9, #0x28                  	// #40
  4279f8:	madd	x27, x19, x9, x8
  4279fc:	b	427a10 <_obstack_memory_used@@Base+0x104f4>
  427a00:	tbnz	w23, #1, 427ae4 <_obstack_memory_used@@Base+0x105c8>
  427a04:	ldrb	w8, [x27, #32]
  427a08:	add	x27, x27, #0x28
  427a0c:	cbz	w8, 4278dc <_obstack_memory_used@@Base+0x103c0>
  427a10:	ldr	x8, [x27]
  427a14:	cmp	x8, x28
  427a18:	b.ne	427a04 <_obstack_memory_used@@Base+0x104e8>  // b.any
  427a1c:	ldr	x8, [x24, #40]
  427a20:	mov	w9, #0x18                  	// #24
  427a24:	madd	x8, x28, x9, x8
  427a28:	ldr	x8, [x8, #16]
  427a2c:	ldr	x3, [x8]
  427a30:	cmp	x3, x20
  427a34:	b.eq	427adc <_obstack_memory_used@@Base+0x105c0>  // b.none
  427a38:	mov	x0, x22
  427a3c:	mov	w1, w23
  427a40:	mov	x2, x21
  427a44:	mov	x4, x19
  427a48:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  427a4c:	cbz	w0, 427a00 <_obstack_memory_used@@Base+0x104e4>
  427a50:	cmn	w0, #0x1
  427a54:	b.ne	427a04 <_obstack_memory_used@@Base+0x104e8>  // b.any
  427a58:	b	427af0 <_obstack_memory_used@@Base+0x105d4>
  427a5c:	mov	w9, #0x28                  	// #40
  427a60:	madd	x8, x19, x9, x8
  427a64:	add	x27, x8, #0x22
  427a68:	b	427a88 <_obstack_memory_used@@Base+0x1056c>
  427a6c:	ldrh	w8, [x27]
  427a70:	ldr	w9, [sp, #12]
  427a74:	and	w8, w8, w9
  427a78:	strh	w8, [x27]
  427a7c:	ldurb	w8, [x27, #-2]
  427a80:	add	x27, x27, #0x28
  427a84:	cbz	w8, 4278dc <_obstack_memory_used@@Base+0x103c0>
  427a88:	ldur	x8, [x27, #-34]
  427a8c:	cmp	x8, x28
  427a90:	b.ne	427a7c <_obstack_memory_used@@Base+0x10560>  // b.any
  427a94:	ldr	x8, [x24, #40]
  427a98:	mov	w9, #0x18                  	// #24
  427a9c:	madd	x8, x28, x9, x8
  427aa0:	ldr	x8, [x8, #16]
  427aa4:	ldr	x3, [x8]
  427aa8:	cmp	x3, x20
  427aac:	b.eq	427adc <_obstack_memory_used@@Base+0x105c0>  // b.none
  427ab0:	mov	x0, x22
  427ab4:	mov	w1, w23
  427ab8:	mov	x2, x21
  427abc:	mov	x4, x19
  427ac0:	bl	42784c <_obstack_memory_used@@Base+0x10330>
  427ac4:	cbz	w0, 427a6c <_obstack_memory_used@@Base+0x10550>
  427ac8:	cmn	w0, #0x1
  427acc:	b.ne	427a7c <_obstack_memory_used@@Base+0x10560>  // b.any
  427ad0:	b	427af0 <_obstack_memory_used@@Base+0x105d4>
  427ad4:	ubfx	w0, w23, #1, #1
  427ad8:	b	427af0 <_obstack_memory_used@@Base+0x105d4>
  427adc:	sbfx	w0, w23, #0, #1
  427ae0:	b	427af0 <_obstack_memory_used@@Base+0x105d4>
  427ae4:	mov	w0, wzr
  427ae8:	b	427af0 <_obstack_memory_used@@Base+0x105d4>
  427aec:	mov	w0, #0xffffffff            	// #-1
  427af0:	ldp	x20, x19, [sp, #112]
  427af4:	ldp	x22, x21, [sp, #96]
  427af8:	ldp	x24, x23, [sp, #80]
  427afc:	ldp	x26, x25, [sp, #64]
  427b00:	ldp	x28, x27, [sp, #48]
  427b04:	ldp	x29, x30, [sp, #32]
  427b08:	add	sp, sp, #0x80
  427b0c:	ret
  427b10:	sub	sp, sp, #0x40
  427b14:	stp	x29, x30, [sp, #16]
  427b18:	add	x29, sp, #0x10
  427b1c:	add	x2, x29, #0x18
  427b20:	mov	w1, wzr
  427b24:	str	x21, [sp, #32]
  427b28:	stp	x20, x19, [sp, #48]
  427b2c:	mov	x19, x0
  427b30:	bl	402a40 <acl_get_entry@plt>
  427b34:	cmp	w0, #0x1
  427b38:	b.lt	427b94 <_obstack_memory_used@@Base+0x10678>  // b.tstop
  427b3c:	mov	x21, #0x12                  	// #18
  427b40:	mov	w20, #0x1                   	// #1
  427b44:	movk	x21, #0x1, lsl #32
  427b48:	ldr	x0, [x29, #24]
  427b4c:	sub	x1, x29, #0x4
  427b50:	bl	4027f0 <acl_get_tag_type@plt>
  427b54:	tbnz	w0, #31, 427b90 <_obstack_memory_used@@Base+0x10674>
  427b58:	ldur	w8, [x29, #-4]
  427b5c:	mov	w0, #0x1                   	// #1
  427b60:	cmp	w8, #0x20
  427b64:	b.hi	427b94 <_obstack_memory_used@@Base+0x10678>  // b.pmore
  427b68:	lsl	x8, x20, x8
  427b6c:	tst	x8, x21
  427b70:	b.eq	427b94 <_obstack_memory_used@@Base+0x10678>  // b.none
  427b74:	add	x2, x29, #0x18
  427b78:	mov	w1, #0x1                   	// #1
  427b7c:	mov	x0, x19
  427b80:	bl	402a40 <acl_get_entry@plt>
  427b84:	cmp	w0, #0x0
  427b88:	b.gt	427b48 <_obstack_memory_used@@Base+0x1062c>
  427b8c:	b	427b94 <_obstack_memory_used@@Base+0x10678>
  427b90:	mov	w0, #0xffffffff            	// #-1
  427b94:	ldp	x20, x19, [sp, #48]
  427b98:	ldr	x21, [sp, #32]
  427b9c:	ldp	x29, x30, [sp, #16]
  427ba0:	add	sp, sp, #0x40
  427ba4:	ret
  427ba8:	stp	x29, x30, [sp, #-16]!
  427bac:	mov	x29, sp
  427bb0:	bl	402610 <acl_entries@plt>
  427bb4:	cmp	w0, #0x0
  427bb8:	cset	w0, gt
  427bbc:	ldp	x29, x30, [sp], #16
  427bc0:	ret
  427bc4:	stp	x29, x30, [sp, #-32]!
  427bc8:	str	x19, [sp, #16]
  427bcc:	mov	x19, x0
  427bd0:	ldr	x0, [x0, #8]
  427bd4:	mov	x29, sp
  427bd8:	cbz	x0, 427be0 <_obstack_memory_used@@Base+0x106c4>
  427bdc:	bl	402c50 <acl_free@plt>
  427be0:	ldr	x0, [x19, #16]
  427be4:	cbz	x0, 427bf4 <_obstack_memory_used@@Base+0x106d8>
  427be8:	ldr	x19, [sp, #16]
  427bec:	ldp	x29, x30, [sp], #32
  427bf0:	b	402c50 <acl_free@plt>
  427bf4:	ldr	x19, [sp, #16]
  427bf8:	ldp	x29, x30, [sp], #32
  427bfc:	ret
  427c00:	stp	x29, x30, [sp, #-48]!
  427c04:	str	x21, [sp, #16]
  427c08:	stp	x20, x19, [sp, #32]
  427c0c:	mov	x19, x3
  427c10:	mov	w21, w2
  427c14:	mov	x20, x0
  427c18:	movi	v0.2d, #0x0
  427c1c:	cmn	w1, #0x1
  427c20:	mov	x29, sp
  427c24:	stp	q0, q0, [x3]
  427c28:	str	w2, [x3]
  427c2c:	b.eq	427c74 <_obstack_memory_used@@Base+0x10758>  // b.none
  427c30:	mov	w0, w1
  427c34:	bl	4028c0 <acl_get_fd@plt>
  427c38:	str	x0, [x19, #8]
  427c3c:	cbz	x0, 427c88 <_obstack_memory_used@@Base+0x1076c>
  427c40:	and	w8, w21, #0xf000
  427c44:	cmp	w8, #0x4, lsl #12
  427c48:	b.ne	427c60 <_obstack_memory_used@@Base+0x10744>  // b.any
  427c4c:	mov	w1, #0x4000                	// #16384
  427c50:	mov	x0, x20
  427c54:	bl	4029f0 <acl_get_file@plt>
  427c58:	str	x0, [x19, #16]
  427c5c:	cbz	x0, 427ca8 <_obstack_memory_used@@Base+0x1078c>
  427c60:	mov	w0, wzr
  427c64:	ldp	x20, x19, [sp, #32]
  427c68:	ldr	x21, [sp, #16]
  427c6c:	ldp	x29, x30, [sp], #48
  427c70:	ret
  427c74:	mov	w1, #0x8000                	// #32768
  427c78:	mov	x0, x20
  427c7c:	bl	4029f0 <acl_get_file@plt>
  427c80:	str	x0, [x19, #8]
  427c84:	cbnz	x0, 427c40 <_obstack_memory_used@@Base+0x10724>
  427c88:	bl	402bd0 <__errno_location@plt>
  427c8c:	ldr	w0, [x0]
  427c90:	bl	42808c <_obstack_memory_used@@Base+0x10b70>
  427c94:	sbfx	w0, w0, #0, #1
  427c98:	ldp	x20, x19, [sp, #32]
  427c9c:	ldr	x21, [sp, #16]
  427ca0:	ldp	x29, x30, [sp], #48
  427ca4:	ret
  427ca8:	mov	w0, #0xffffffff            	// #-1
  427cac:	ldp	x20, x19, [sp, #32]
  427cb0:	ldr	x21, [sp, #16]
  427cb4:	ldp	x29, x30, [sp], #48
  427cb8:	ret
  427cbc:	cmn	w1, #0x1
  427cc0:	b.eq	427cd0 <_obstack_memory_used@@Base+0x107b4>  // b.none
  427cc4:	mov	w0, w1
  427cc8:	mov	w1, w2
  427ccc:	b	402820 <fchmod@plt>
  427cd0:	mov	w1, w2
  427cd4:	b	402740 <chmod@plt>
  427cd8:	sub	sp, sp, #0x50
  427cdc:	stp	x29, x30, [sp, #16]
  427ce0:	add	x29, sp, #0x10
  427ce4:	stp	x24, x23, [sp, #32]
  427ce8:	stp	x22, x21, [sp, #48]
  427cec:	stp	x20, x19, [sp, #64]
  427cf0:	sturb	wzr, [x29, #-4]
  427cf4:	ldr	w8, [x0]
  427cf8:	mov	w19, w2
  427cfc:	mov	x21, x0
  427d00:	mov	x20, x1
  427d04:	ands	w22, w8, #0xe00
  427d08:	b.eq	427d38 <_obstack_memory_used@@Base+0x1081c>  // b.none
  427d0c:	cmn	w19, #0x1
  427d10:	b.eq	427d28 <_obstack_memory_used@@Base+0x1080c>  // b.none
  427d14:	mov	w0, w19
  427d18:	mov	w1, w8
  427d1c:	bl	402820 <fchmod@plt>
  427d20:	cbnz	w0, 427e0c <_obstack_memory_used@@Base+0x108f0>
  427d24:	b	427d38 <_obstack_memory_used@@Base+0x1081c>
  427d28:	mov	x0, x20
  427d2c:	mov	w1, w8
  427d30:	bl	402740 <chmod@plt>
  427d34:	cbnz	w0, 427e0c <_obstack_memory_used@@Base+0x108f0>
  427d38:	sub	x4, x29, #0x4
  427d3c:	mov	x0, x21
  427d40:	mov	x1, x20
  427d44:	mov	w2, w19
  427d48:	mov	w3, wzr
  427d4c:	bl	427e28 <_obstack_memory_used@@Base+0x1090c>
  427d50:	ldurb	w8, [x29, #-4]
  427d54:	cbnz	w8, 427e10 <_obstack_memory_used@@Base+0x108f4>
  427d58:	cbz	w0, 427d98 <_obstack_memory_used@@Base+0x1087c>
  427d5c:	bl	402bd0 <__errno_location@plt>
  427d60:	ldr	w24, [x0]
  427d64:	sub	x4, x29, #0x4
  427d68:	mov	w3, #0x1                   	// #1
  427d6c:	mov	x0, x21
  427d70:	mov	x1, x20
  427d74:	mov	w2, w19
  427d78:	bl	427e28 <_obstack_memory_used@@Base+0x1090c>
  427d7c:	ldurb	w23, [x29, #-4]
  427d80:	cbz	w24, 427d90 <_obstack_memory_used@@Base+0x10874>
  427d84:	bl	402bd0 <__errno_location@plt>
  427d88:	str	w24, [x0]
  427d8c:	mov	w0, #0xffffffff            	// #-1
  427d90:	cbz	w22, 427db8 <_obstack_memory_used@@Base+0x1089c>
  427d94:	b	427e10 <_obstack_memory_used@@Base+0x108f4>
  427d98:	sub	x4, x29, #0x4
  427d9c:	mov	w3, #0x1                   	// #1
  427da0:	mov	x0, x21
  427da4:	mov	x1, x20
  427da8:	mov	w2, w19
  427dac:	bl	427e28 <_obstack_memory_used@@Base+0x1090c>
  427db0:	ldurb	w23, [x29, #-4]
  427db4:	cbnz	w22, 427e10 <_obstack_memory_used@@Base+0x108f4>
  427db8:	cmp	w23, #0x1
  427dbc:	b.eq	427e10 <_obstack_memory_used@@Base+0x108f4>  // b.none
  427dc0:	cbz	w0, 427de8 <_obstack_memory_used@@Base+0x108cc>
  427dc4:	bl	402bd0 <__errno_location@plt>
  427dc8:	ldr	w22, [x0]
  427dcc:	ldr	w1, [x21]
  427dd0:	cmn	w19, #0x1
  427dd4:	b.eq	427df8 <_obstack_memory_used@@Base+0x108dc>  // b.none
  427dd8:	mov	w0, w19
  427ddc:	bl	402820 <fchmod@plt>
  427de0:	cbnz	w22, 427e04 <_obstack_memory_used@@Base+0x108e8>
  427de4:	b	427e10 <_obstack_memory_used@@Base+0x108f4>
  427de8:	mov	w22, wzr
  427dec:	ldr	w1, [x21]
  427df0:	cmn	w19, #0x1
  427df4:	b.ne	427dd8 <_obstack_memory_used@@Base+0x108bc>  // b.any
  427df8:	mov	x0, x20
  427dfc:	bl	402740 <chmod@plt>
  427e00:	cbz	w22, 427e10 <_obstack_memory_used@@Base+0x108f4>
  427e04:	bl	402bd0 <__errno_location@plt>
  427e08:	str	w22, [x0]
  427e0c:	mov	w0, #0xffffffff            	// #-1
  427e10:	ldp	x20, x19, [sp, #64]
  427e14:	ldp	x22, x21, [sp, #48]
  427e18:	ldp	x24, x23, [sp, #32]
  427e1c:	ldp	x29, x30, [sp, #16]
  427e20:	add	sp, sp, #0x50
  427e24:	ret
  427e28:	stp	x29, x30, [sp, #-64]!
  427e2c:	stp	x22, x21, [sp, #32]
  427e30:	stp	x20, x19, [sp, #48]
  427e34:	ldrb	w8, [x0, #24]
  427e38:	str	x23, [sp, #16]
  427e3c:	mov	x29, sp
  427e40:	cbz	w8, 427e60 <_obstack_memory_used@@Base+0x10944>
  427e44:	mov	w23, wzr
  427e48:	mov	w0, w23
  427e4c:	ldp	x20, x19, [sp, #48]
  427e50:	ldp	x22, x21, [sp, #32]
  427e54:	ldr	x23, [sp, #16]
  427e58:	ldp	x29, x30, [sp], #64
  427e5c:	ret
  427e60:	mov	w23, w2
  427e64:	ldr	x2, [x0, #8]
  427e68:	mov	x22, x4
  427e6c:	mov	w21, w3
  427e70:	mov	x19, x0
  427e74:	mov	x20, x1
  427e78:	cbz	w3, 427ea4 <_obstack_memory_used@@Base+0x10988>
  427e7c:	cbz	x2, 427e88 <_obstack_memory_used@@Base+0x1096c>
  427e80:	mov	x0, x2
  427e84:	bl	402c50 <acl_free@plt>
  427e88:	ldr	w0, [x19]
  427e8c:	bl	4028b0 <acl_from_mode@plt>
  427e90:	mov	x2, x0
  427e94:	str	x0, [x19, #8]
  427e98:	cbnz	x0, 427ea8 <_obstack_memory_used@@Base+0x1098c>
  427e9c:	mov	w23, #0xffffffff            	// #-1
  427ea0:	b	427e48 <_obstack_memory_used@@Base+0x1092c>
  427ea4:	cbz	x2, 427e44 <_obstack_memory_used@@Base+0x10928>
  427ea8:	cmn	w23, #0x1
  427eac:	b.eq	427ef0 <_obstack_memory_used@@Base+0x109d4>  // b.none
  427eb0:	mov	w0, w23
  427eb4:	mov	x1, x2
  427eb8:	bl	4025e0 <acl_set_fd@plt>
  427ebc:	mov	w23, w0
  427ec0:	cbz	w0, 427f04 <_obstack_memory_used@@Base+0x109e8>
  427ec4:	bl	402bd0 <__errno_location@plt>
  427ec8:	ldr	w0, [x0]
  427ecc:	bl	42808c <_obstack_memory_used@@Base+0x10b70>
  427ed0:	tbnz	w0, #0, 427e48 <_obstack_memory_used@@Base+0x1092c>
  427ed4:	mov	w8, #0x1                   	// #1
  427ed8:	strb	w8, [x19, #24]
  427edc:	cbnz	w21, 427e44 <_obstack_memory_used@@Base+0x10928>
  427ee0:	ldr	x0, [x19, #8]
  427ee4:	bl	427b10 <_obstack_memory_used@@Base+0x105f4>
  427ee8:	cbnz	w0, 427e48 <_obstack_memory_used@@Base+0x1092c>
  427eec:	b	427e44 <_obstack_memory_used@@Base+0x10928>
  427ef0:	mov	w1, #0x8000                	// #32768
  427ef4:	mov	x0, x20
  427ef8:	bl	402890 <acl_set_file@plt>
  427efc:	mov	w23, w0
  427f00:	cbnz	w0, 427ec4 <_obstack_memory_used@@Base+0x109a8>
  427f04:	mov	w8, #0x1                   	// #1
  427f08:	strb	w8, [x22]
  427f0c:	ldr	w8, [x19]
  427f10:	and	w8, w8, #0xf000
  427f14:	cmp	w8, #0x4, lsl #12
  427f18:	b.ne	427e44 <_obstack_memory_used@@Base+0x10928>  // b.any
  427f1c:	cbz	w21, 427f38 <_obstack_memory_used@@Base+0x10a1c>
  427f20:	mov	x0, x20
  427f24:	ldp	x20, x19, [sp, #48]
  427f28:	ldp	x22, x21, [sp, #32]
  427f2c:	ldr	x23, [sp, #16]
  427f30:	ldp	x29, x30, [sp], #64
  427f34:	b	4026c0 <acl_delete_def_file@plt>
  427f38:	ldr	x0, [x19, #16]
  427f3c:	cbz	x0, 427f20 <_obstack_memory_used@@Base+0x10a04>
  427f40:	bl	427ba8 <_obstack_memory_used@@Base+0x1068c>
  427f44:	cbz	w0, 427f20 <_obstack_memory_used@@Base+0x10a04>
  427f48:	ldr	x2, [x19, #16]
  427f4c:	mov	x0, x20
  427f50:	ldp	x20, x19, [sp, #48]
  427f54:	ldp	x22, x21, [sp, #32]
  427f58:	ldr	x23, [sp, #16]
  427f5c:	mov	w1, #0x4000                	// #16384
  427f60:	ldp	x29, x30, [sp], #64
  427f64:	b	402890 <acl_set_file@plt>
  427f68:	sub	sp, sp, #0x130
  427f6c:	add	x1, sp, #0xc
  427f70:	mov	w2, #0x101                 	// #257
  427f74:	stp	x29, x30, [sp, #272]
  427f78:	str	x28, [sp, #288]
  427f7c:	add	x29, sp, #0x110
  427f80:	bl	427fe0 <_obstack_memory_used@@Base+0x10ac4>
  427f84:	cbz	w0, 427f9c <_obstack_memory_used@@Base+0x10a80>
  427f88:	mov	w0, wzr
  427f8c:	ldr	x28, [sp, #288]
  427f90:	ldp	x29, x30, [sp, #272]
  427f94:	add	sp, sp, #0x130
  427f98:	ret
  427f9c:	ldrh	w8, [sp, #12]
  427fa0:	cmp	w8, #0x43
  427fa4:	b.eq	427f88 <_obstack_memory_used@@Base+0x10a6c>  // b.none
  427fa8:	ldr	w8, [sp, #12]
  427fac:	ldrh	w9, [sp, #16]
  427fb0:	mov	w10, #0x4f50                	// #20304
  427fb4:	movk	w10, #0x4953, lsl #16
  427fb8:	mov	w11, #0x58                  	// #88
  427fbc:	eor	w8, w8, w10
  427fc0:	eor	w9, w9, w11
  427fc4:	orr	w8, w8, w9
  427fc8:	cmp	w8, #0x0
  427fcc:	cset	w0, ne  // ne = any
  427fd0:	ldr	x28, [sp, #288]
  427fd4:	ldp	x29, x30, [sp, #272]
  427fd8:	add	sp, sp, #0x130
  427fdc:	ret
  427fe0:	stp	x29, x30, [sp, #-48]!
  427fe4:	stp	x20, x19, [sp, #32]
  427fe8:	mov	x19, x1
  427fec:	mov	x1, xzr
  427ff0:	str	x21, [sp, #16]
  427ff4:	mov	x29, sp
  427ff8:	mov	x20, x2
  427ffc:	bl	402c40 <setlocale@plt>
  428000:	cbz	x0, 428038 <_obstack_memory_used@@Base+0x10b1c>
  428004:	mov	x21, x0
  428008:	bl	4025c0 <strlen@plt>
  42800c:	cmp	x0, x20
  428010:	b.cs	428054 <_obstack_memory_used@@Base+0x10b38>  // b.hs, b.nlast
  428014:	add	x2, x0, #0x1
  428018:	mov	x0, x19
  42801c:	mov	x1, x21
  428020:	bl	402580 <memcpy@plt>
  428024:	mov	w0, wzr
  428028:	ldp	x20, x19, [sp, #32]
  42802c:	ldr	x21, [sp, #16]
  428030:	ldp	x29, x30, [sp], #48
  428034:	ret
  428038:	cbz	x20, 428040 <_obstack_memory_used@@Base+0x10b24>
  42803c:	strb	wzr, [x19]
  428040:	mov	w0, #0x16                  	// #22
  428044:	ldp	x20, x19, [sp, #32]
  428048:	ldr	x21, [sp, #16]
  42804c:	ldp	x29, x30, [sp], #48
  428050:	ret
  428054:	cbz	x20, 428070 <_obstack_memory_used@@Base+0x10b54>
  428058:	sub	x20, x20, #0x1
  42805c:	mov	x0, x19
  428060:	mov	x1, x21
  428064:	mov	x2, x20
  428068:	bl	402580 <memcpy@plt>
  42806c:	strb	wzr, [x19, x20]
  428070:	mov	w0, #0x22                  	// #34
  428074:	ldp	x20, x19, [sp, #32]
  428078:	ldr	x21, [sp, #16]
  42807c:	ldp	x29, x30, [sp], #48
  428080:	ret
  428084:	mov	x1, xzr
  428088:	b	402c40 <setlocale@plt>
  42808c:	mov	w8, w0
  428090:	cmp	w0, #0x26
  428094:	mov	w0, wzr
  428098:	b.hi	4280b8 <_obstack_memory_used@@Base+0x10b9c>  // b.pmore
  42809c:	mov	w9, w8
  4280a0:	mov	w10, #0x1                   	// #1
  4280a4:	lsl	x9, x10, x9
  4280a8:	mov	x10, #0x410000              	// #4259840
  4280ac:	movk	x10, #0x40, lsl #32
  4280b0:	tst	x9, x10
  4280b4:	b.ne	4280c0 <_obstack_memory_used@@Base+0x10ba4>  // b.any
  4280b8:	cmp	w8, #0x5f
  4280bc:	b.ne	4280c4 <_obstack_memory_used@@Base+0x10ba8>  // b.any
  4280c0:	ret
  4280c4:	mov	w0, #0x1                   	// #1
  4280c8:	ret
  4280cc:	nop
  4280d0:	stp	x29, x30, [sp, #-64]!
  4280d4:	mov	x29, sp
  4280d8:	stp	x19, x20, [sp, #16]
  4280dc:	adrp	x20, 43a000 <_obstack_memory_used@@Base+0x22ae4>
  4280e0:	add	x20, x20, #0xde0
  4280e4:	stp	x21, x22, [sp, #32]
  4280e8:	adrp	x21, 43a000 <_obstack_memory_used@@Base+0x22ae4>
  4280ec:	add	x21, x21, #0xdd8
  4280f0:	sub	x20, x20, x21
  4280f4:	mov	w22, w0
  4280f8:	stp	x23, x24, [sp, #48]
  4280fc:	mov	x23, x1
  428100:	mov	x24, x2
  428104:	bl	402538 <mbrtowc@plt-0x38>
  428108:	cmp	xzr, x20, asr #3
  42810c:	b.eq	428138 <_obstack_memory_used@@Base+0x10c1c>  // b.none
  428110:	asr	x20, x20, #3
  428114:	mov	x19, #0x0                   	// #0
  428118:	ldr	x3, [x21, x19, lsl #3]
  42811c:	mov	x2, x24
  428120:	add	x19, x19, #0x1
  428124:	mov	x1, x23
  428128:	mov	w0, w22
  42812c:	blr	x3
  428130:	cmp	x20, x19
  428134:	b.ne	428118 <_obstack_memory_used@@Base+0x10bfc>  // b.any
  428138:	ldp	x19, x20, [sp, #16]
  42813c:	ldp	x21, x22, [sp, #32]
  428140:	ldp	x23, x24, [sp, #48]
  428144:	ldp	x29, x30, [sp], #64
  428148:	ret
  42814c:	nop
  428150:	ret
  428154:	nop
  428158:	adrp	x2, 43b000 <_obstack_memory_used@@Base+0x23ae4>
  42815c:	mov	x1, #0x0                   	// #0
  428160:	ldr	x2, [x2, #904]
  428164:	b	402650 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000428168 <.fini>:
  428168:	stp	x29, x30, [sp, #-16]!
  42816c:	mov	x29, sp
  428170:	ldp	x29, x30, [sp], #16
  428174:	ret
