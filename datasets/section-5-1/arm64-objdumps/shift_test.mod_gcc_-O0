
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//shift_test.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x698>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #16]
  14:	add	x0, sp, #0x10
  18:	str	x0, [sp, #24]
  1c:	ldr	w0, [sp, #4]
  20:	cmp	w0, #0x3f
  24:	b.le	30 <grub_mod_init-0x668>
  28:	mov	w0, #0x0                   	// #0
  2c:	b	98 <grub_mod_init-0x600>
  30:	ldr	w0, [sp, #4]
  34:	add	w1, w0, #0x7
  38:	cmp	w0, #0x0
  3c:	csel	w0, w1, w0, lt  // lt = tstop
  40:	asr	w0, w0, #3
  44:	sxtw	x0, w0
  48:	ldr	x1, [sp, #24]
  4c:	add	x0, x1, x0
  50:	str	x0, [sp, #24]
  54:	ldr	x0, [sp, #24]
  58:	ldrb	w1, [x0]
  5c:	ldr	w0, [sp, #4]
  60:	negs	w2, w0
  64:	and	w0, w0, #0x7
  68:	and	w2, w2, #0x7
  6c:	csneg	w3, w0, w2, mi  // mi = first
  70:	adrp	x0, 0 <grub_mod_init-0x698>
  74:	add	x0, x0, #0x0
  78:	ldr	x2, [x0]
  7c:	sxtw	x0, w3
  80:	ldrb	w0, [x2, x0]
  84:	and	w0, w1, w0
  88:	and	w0, w0, #0xff
  8c:	cmp	w0, #0x0
  90:	cset	w0, ne  // ne = any
  94:	and	w0, w0, #0xff
  98:	add	sp, sp, #0x20
  9c:	ret
	...
  a8:	sub	sp, sp, #0x20
  ac:	str	x0, [sp, #8]
  b0:	str	w1, [sp, #4]
  b4:	ldr	x0, [sp, #8]
  b8:	str	x0, [sp, #16]
  bc:	add	x0, sp, #0x10
  c0:	str	x0, [sp, #24]
  c4:	ldr	w0, [sp, #4]
  c8:	cmp	w0, #0x3f
  cc:	b.le	d8 <grub_mod_init-0x5c0>
  d0:	ldr	x0, [sp, #8]
  d4:	b	140 <grub_mod_init-0x558>
  d8:	ldr	w0, [sp, #4]
  dc:	add	w1, w0, #0x7
  e0:	cmp	w0, #0x0
  e4:	csel	w0, w1, w0, lt  // lt = tstop
  e8:	asr	w0, w0, #3
  ec:	sxtw	x0, w0
  f0:	ldr	x1, [sp, #24]
  f4:	add	x0, x1, x0
  f8:	str	x0, [sp, #24]
  fc:	ldr	x0, [sp, #24]
 100:	ldrb	w1, [x0]
 104:	ldr	w0, [sp, #4]
 108:	negs	w2, w0
 10c:	and	w0, w0, #0x7
 110:	and	w2, w2, #0x7
 114:	csneg	w3, w0, w2, mi  // mi = first
 118:	adrp	x0, 0 <grub_mod_init-0x698>
 11c:	add	x0, x0, #0x0
 120:	ldr	x2, [x0]
 124:	sxtw	x0, w3
 128:	ldrb	w0, [x2, x0]
 12c:	orr	w0, w1, w0
 130:	and	w1, w0, #0xff
 134:	ldr	x0, [sp, #24]
 138:	strb	w1, [x0]
 13c:	ldr	x0, [sp, #16]
 140:	add	sp, sp, #0x20
 144:	ret
	...
 150:	stp	x29, x30, [sp, #-48]!
 154:	mov	x29, sp
 158:	str	x0, [sp, #24]
 15c:	str	w1, [sp, #20]
 160:	str	xzr, [sp, #40]
 164:	str	wzr, [sp, #36]
 168:	b	1a8 <grub_mod_init-0x4f0>
 16c:	ldr	w1, [sp, #36]
 170:	ldr	x0, [sp, #24]
 174:	bl	0 <grub_mod_init-0x698>
 178:	cmp	w0, #0x0
 17c:	b.eq	19c <grub_mod_init-0x4fc>  // b.none
 180:	ldr	w1, [sp, #36]
 184:	ldr	w0, [sp, #20]
 188:	add	w0, w1, w0
 18c:	mov	w1, w0
 190:	ldr	x0, [sp, #40]
 194:	bl	a8 <grub_mod_init-0x5f0>
 198:	str	x0, [sp, #40]
 19c:	ldr	w0, [sp, #36]
 1a0:	add	w0, w0, #0x1
 1a4:	str	w0, [sp, #36]
 1a8:	ldr	w1, [sp, #36]
 1ac:	ldr	w0, [sp, #20]
 1b0:	add	w0, w1, w0
 1b4:	cmp	w0, #0x3f
 1b8:	b.le	16c <grub_mod_init-0x52c>
 1bc:	ldr	x0, [sp, #40]
 1c0:	ldp	x29, x30, [sp], #48
 1c4:	ret
 1c8:	stp	x29, x30, [sp, #-48]!
 1cc:	mov	x29, sp
 1d0:	str	x0, [sp, #24]
 1d4:	str	w1, [sp, #20]
 1d8:	str	xzr, [sp, #40]
 1dc:	ldr	w0, [sp, #20]
 1e0:	str	w0, [sp, #36]
 1e4:	b	224 <grub_mod_init-0x474>
 1e8:	ldr	w1, [sp, #36]
 1ec:	ldr	x0, [sp, #24]
 1f0:	bl	0 <grub_mod_init-0x698>
 1f4:	cmp	w0, #0x0
 1f8:	b.eq	218 <grub_mod_init-0x480>  // b.none
 1fc:	ldr	w1, [sp, #36]
 200:	ldr	w0, [sp, #20]
 204:	sub	w0, w1, w0
 208:	mov	w1, w0
 20c:	ldr	x0, [sp, #40]
 210:	bl	a8 <grub_mod_init-0x5f0>
 214:	str	x0, [sp, #40]
 218:	ldr	w0, [sp, #36]
 21c:	add	w0, w0, #0x1
 220:	str	w0, [sp, #36]
 224:	ldr	w0, [sp, #36]
 228:	cmp	w0, #0x3f
 22c:	b.le	1e8 <grub_mod_init-0x4b0>
 230:	ldr	x0, [sp, #40]
 234:	ldp	x29, x30, [sp], #48
 238:	ret
 23c:	stp	x29, x30, [sp, #-48]!
 240:	mov	x29, sp
 244:	str	x0, [sp, #24]
 248:	str	w1, [sp, #20]
 24c:	str	xzr, [sp, #40]
 250:	ldr	w0, [sp, #20]
 254:	str	w0, [sp, #36]
 258:	b	298 <grub_mod_init-0x400>
 25c:	ldr	w1, [sp, #36]
 260:	ldr	x0, [sp, #24]
 264:	bl	0 <grub_mod_init-0x698>
 268:	cmp	w0, #0x0
 26c:	b.eq	28c <grub_mod_init-0x40c>  // b.none
 270:	ldr	w1, [sp, #36]
 274:	ldr	w0, [sp, #20]
 278:	sub	w0, w1, w0
 27c:	mov	w1, w0
 280:	ldr	x0, [sp, #40]
 284:	bl	a8 <grub_mod_init-0x5f0>
 288:	str	x0, [sp, #40]
 28c:	ldr	w0, [sp, #36]
 290:	add	w0, w0, #0x1
 294:	str	w0, [sp, #36]
 298:	ldr	w0, [sp, #36]
 29c:	cmp	w0, #0x3f
 2a0:	b.le	25c <grub_mod_init-0x43c>
 2a4:	mov	w1, #0x3f                  	// #63
 2a8:	ldr	x0, [sp, #24]
 2ac:	bl	0 <grub_mod_init-0x698>
 2b0:	cmp	w0, #0x0
 2b4:	b.eq	2f4 <grub_mod_init-0x3a4>  // b.none
 2b8:	ldr	w1, [sp, #36]
 2bc:	ldr	w0, [sp, #20]
 2c0:	sub	w0, w1, w0
 2c4:	str	w0, [sp, #36]
 2c8:	b	2e8 <grub_mod_init-0x3b0>
 2cc:	ldr	w1, [sp, #36]
 2d0:	ldr	x0, [sp, #40]
 2d4:	bl	a8 <grub_mod_init-0x5f0>
 2d8:	str	x0, [sp, #40]
 2dc:	ldr	w0, [sp, #36]
 2e0:	add	w0, w0, #0x1
 2e4:	str	w0, [sp, #36]
 2e8:	ldr	w0, [sp, #36]
 2ec:	cmp	w0, #0x3f
 2f0:	b.le	2cc <grub_mod_init-0x3cc>
 2f4:	ldr	x0, [sp, #40]
 2f8:	ldp	x29, x30, [sp], #48
 2fc:	ret
 300:	sub	sp, sp, #0x60
 304:	stp	x29, x30, [sp, #16]
 308:	add	x29, sp, #0x10
 30c:	stp	x19, x20, [sp, #32]
 310:	str	x21, [sp, #48]
 314:	str	x0, [sp, #72]
 318:	str	wzr, [sp, #92]
 31c:	b	4e4 <grub_mod_init-0x1b4>
 320:	ldr	w0, [sp, #92]
 324:	ldr	x1, [sp, #72]
 328:	lsl	x19, x1, x0
 32c:	ldr	w1, [sp, #92]
 330:	ldr	x0, [sp, #72]
 334:	bl	150 <grub_mod_init-0x548>
 338:	cmp	x19, x0
 33c:	cset	w0, eq  // eq = none
 340:	and	w0, w0, #0xff
 344:	mov	w21, w0
 348:	ldr	x19, [sp, #72]
 34c:	ldr	w0, [sp, #92]
 350:	ldr	x1, [sp, #72]
 354:	lsl	x0, x1, x0
 358:	mov	x20, x0
 35c:	ldr	w1, [sp, #92]
 360:	ldr	x0, [sp, #72]
 364:	bl	150 <grub_mod_init-0x548>
 368:	str	x0, [sp, #8]
 36c:	str	x20, [sp]
 370:	ldr	w7, [sp, #92]
 374:	mov	x6, x19
 378:	adrp	x0, 0 <grub_mod_init-0x698>
 37c:	add	x0, x0, #0x0
 380:	ldr	x5, [x0]
 384:	adrp	x0, 0 <grub_mod_init-0x698>
 388:	add	x0, x0, #0x0
 38c:	ldr	x4, [x0]
 390:	mov	w3, #0x70                  	// #112
 394:	adrp	x0, 0 <grub_mod_init-0x698>
 398:	add	x0, x0, #0x0
 39c:	ldr	x2, [x0]
 3a0:	adrp	x0, 0 <grub_mod_init-0x698>
 3a4:	add	x0, x0, #0x0
 3a8:	ldr	x1, [x0]
 3ac:	mov	w0, w21
 3b0:	bl	0 <grub_test_assert_helper>
 3b4:	ldr	w0, [sp, #92]
 3b8:	ldr	x1, [sp, #72]
 3bc:	lsr	x19, x1, x0
 3c0:	ldr	w1, [sp, #92]
 3c4:	ldr	x0, [sp, #72]
 3c8:	bl	1c8 <grub_mod_init-0x4d0>
 3cc:	cmp	x19, x0
 3d0:	cset	w0, eq  // eq = none
 3d4:	and	w0, w0, #0xff
 3d8:	mov	w21, w0
 3dc:	ldr	x19, [sp, #72]
 3e0:	ldr	w0, [sp, #92]
 3e4:	ldr	x1, [sp, #72]
 3e8:	lsr	x0, x1, x0
 3ec:	mov	x20, x0
 3f0:	ldr	w1, [sp, #92]
 3f4:	ldr	x0, [sp, #72]
 3f8:	bl	1c8 <grub_mod_init-0x4d0>
 3fc:	str	x0, [sp, #8]
 400:	str	x20, [sp]
 404:	ldr	w7, [sp, #92]
 408:	mov	x6, x19
 40c:	adrp	x0, 0 <grub_mod_init-0x698>
 410:	add	x0, x0, #0x0
 414:	ldr	x5, [x0]
 418:	adrp	x0, 0 <grub_mod_init-0x698>
 41c:	add	x0, x0, #0x0
 420:	ldr	x4, [x0]
 424:	mov	w3, #0x74                  	// #116
 428:	adrp	x0, 0 <grub_mod_init-0x698>
 42c:	add	x0, x0, #0x0
 430:	ldr	x2, [x0]
 434:	adrp	x0, 0 <grub_mod_init-0x698>
 438:	add	x0, x0, #0x0
 43c:	ldr	x1, [x0]
 440:	mov	w0, w21
 444:	bl	0 <grub_test_assert_helper>
 448:	ldr	x1, [sp, #72]
 44c:	ldr	w0, [sp, #92]
 450:	asr	x19, x1, x0
 454:	ldr	w1, [sp, #92]
 458:	ldr	x0, [sp, #72]
 45c:	bl	23c <grub_mod_init-0x45c>
 460:	cmp	x19, x0
 464:	cset	w0, eq  // eq = none
 468:	and	w0, w0, #0xff
 46c:	mov	w21, w0
 470:	ldr	x20, [sp, #72]
 474:	ldr	x1, [sp, #72]
 478:	ldr	w0, [sp, #92]
 47c:	asr	x19, x1, x0
 480:	ldr	w1, [sp, #92]
 484:	ldr	x0, [sp, #72]
 488:	bl	23c <grub_mod_init-0x45c>
 48c:	str	x0, [sp, #8]
 490:	str	x19, [sp]
 494:	ldr	w7, [sp, #92]
 498:	mov	x6, x20
 49c:	adrp	x0, 0 <grub_mod_init-0x698>
 4a0:	add	x0, x0, #0x0
 4a4:	ldr	x5, [x0]
 4a8:	adrp	x0, 0 <grub_mod_init-0x698>
 4ac:	add	x0, x0, #0x0
 4b0:	ldr	x4, [x0]
 4b4:	mov	w3, #0x78                  	// #120
 4b8:	adrp	x0, 0 <grub_mod_init-0x698>
 4bc:	add	x0, x0, #0x0
 4c0:	ldr	x2, [x0]
 4c4:	adrp	x0, 0 <grub_mod_init-0x698>
 4c8:	add	x0, x0, #0x0
 4cc:	ldr	x1, [x0]
 4d0:	mov	w0, w21
 4d4:	bl	0 <grub_test_assert_helper>
 4d8:	ldr	w0, [sp, #92]
 4dc:	add	w0, w0, #0x1
 4e0:	str	w0, [sp, #92]
 4e4:	ldr	w0, [sp, #92]
 4e8:	cmp	w0, #0x3f
 4ec:	b.le	320 <grub_mod_init-0x378>
 4f0:	nop
 4f4:	nop
 4f8:	ldp	x19, x20, [sp, #32]
 4fc:	ldr	x21, [sp, #48]
 500:	ldp	x29, x30, [sp, #16]
 504:	add	sp, sp, #0x60
 508:	ret
 50c:	nop
	...
 550:	stp	x29, x30, [sp, #-32]!
 554:	mov	x29, sp
 558:	str	x0, [sp, #24]
 55c:	ldr	x0, [sp, #24]
 560:	bl	300 <grub_mod_init-0x398>
 564:	nop
 568:	ldp	x29, x30, [sp], #32
 56c:	ret
 570:	stp	x29, x30, [sp, #-48]!
 574:	mov	x29, sp
 578:	mov	x0, #0x194                 	// #404
 57c:	str	x0, [sp, #40]
 580:	mov	x0, #0x7                   	// #7
 584:	str	x0, [sp, #32]
 588:	str	xzr, [sp, #24]
 58c:	b	5b4 <grub_mod_init-0xe4>
 590:	adrp	x0, 0 <grub_mod_init-0x698>
 594:	add	x0, x0, #0x0
 598:	ldr	x0, [x0]
 59c:	ldr	x1, [sp, #24]
 5a0:	ldr	x0, [x0, x1, lsl #3]
 5a4:	bl	550 <grub_mod_init-0x148>
 5a8:	ldr	x0, [sp, #24]
 5ac:	add	x0, x0, #0x1
 5b0:	str	x0, [sp, #24]
 5b4:	ldr	x0, [sp, #24]
 5b8:	cmp	x0, #0x4
 5bc:	b.ls	590 <grub_mod_init-0x108>  // b.plast
 5c0:	str	xzr, [sp, #24]
 5c4:	b	674 <grub_mod_init-0x24>
 5c8:	ldr	x1, [sp, #40]
 5cc:	mov	x0, x1
 5d0:	lsl	x0, x0, #4
 5d4:	add	x2, x0, x1
 5d8:	ldr	x1, [sp, #32]
 5dc:	mov	x0, x1
 5e0:	lsl	x0, x0, #1
 5e4:	add	x0, x0, x1
 5e8:	lsl	x0, x0, #2
 5ec:	add	x0, x0, x1
 5f0:	add	x0, x2, x0
 5f4:	str	x0, [sp, #40]
 5f8:	ldr	x1, [sp, #40]
 5fc:	mov	x0, x1
 600:	lsl	x0, x0, #1
 604:	add	x0, x0, x1
 608:	lsl	x0, x0, #3
 60c:	sub	x2, x0, x1
 610:	ldr	x1, [sp, #32]
 614:	mov	x0, x1
 618:	lsl	x0, x0, #3
 61c:	sub	x0, x0, x1
 620:	lsl	x0, x0, #2
 624:	add	x0, x0, x1
 628:	add	x0, x2, x0
 62c:	str	x0, [sp, #32]
 630:	ldr	x0, [sp, #32]
 634:	cmp	x0, #0x0
 638:	b.ne	644 <grub_mod_init-0x54>  // b.any
 63c:	mov	x0, #0x1                   	// #1
 640:	str	x0, [sp, #32]
 644:	ldr	x0, [sp, #40]
 648:	cmp	x0, #0x0
 64c:	b.ne	658 <grub_mod_init-0x40>  // b.any
 650:	mov	x0, #0x1                   	// #1
 654:	str	x0, [sp, #40]
 658:	ldr	x0, [sp, #40]
 65c:	bl	550 <grub_mod_init-0x148>
 660:	ldr	x0, [sp, #32]
 664:	bl	550 <grub_mod_init-0x148>
 668:	ldr	x0, [sp, #24]
 66c:	add	x0, x0, #0x1
 670:	str	x0, [sp, #24]
 674:	ldr	x0, [sp, #24]
 678:	cmp	x0, #0xf9f
 67c:	b.ls	5c8 <grub_mod_init-0xd0>  // b.plast
 680:	nop
 684:	nop
 688:	ldp	x29, x30, [sp], #48
 68c:	ret
	...

0000000000000698 <grub_mod_init>:
 698:	stp	x29, x30, [sp, #-32]!
 69c:	mov	x29, sp
 6a0:	str	x0, [sp, #24]
 6a4:	adrp	x0, 0 <grub_mod_init-0x698>
 6a8:	add	x0, x0, #0x0
 6ac:	ldr	x1, [x0]
 6b0:	adrp	x0, 0 <grub_mod_init-0x698>
 6b4:	add	x0, x0, #0x0
 6b8:	ldr	x0, [x0]
 6bc:	bl	0 <grub_test_register>
 6c0:	nop
 6c4:	ldp	x29, x30, [sp], #32
 6c8:	ret
 6cc:	nop
	...

00000000000006e0 <grub_mod_fini>:
 6e0:	stp	x29, x30, [sp, #-16]!
 6e4:	mov	x29, sp
 6e8:	adrp	x0, 0 <grub_mod_init-0x698>
 6ec:	add	x0, x0, #0x0
 6f0:	ldr	x0, [x0]
 6f4:	bl	0 <grub_test_unregister>
 6f8:	nop
 6fc:	ldp	x29, x30, [sp], #16
 700:	ret
 704:	nop
	...
