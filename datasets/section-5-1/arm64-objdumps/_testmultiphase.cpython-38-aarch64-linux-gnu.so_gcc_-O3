
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_testmultiphase.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001cb0 <.init>:
    1cb0:	stp	x29, x30, [sp, #-16]!
    1cb4:	mov	x29, sp
    1cb8:	bl	1e90 <PyDict_GetItemWithError@plt+0x10>
    1cbc:	ldp	x29, x30, [sp], #16
    1cc0:	ret

Disassembly of section .plt:

0000000000001cd0 <PyDict_SetItemString@plt-0x20>:
    1cd0:	stp	x16, x30, [sp, #-16]!
    1cd4:	adrp	x16, 13000 <PyInit_imp_dummy@@Base+0x10850>
    1cd8:	ldr	x17, [x16, #4088]
    1cdc:	add	x16, x16, #0xff8
    1ce0:	br	x17
    1ce4:	nop
    1ce8:	nop
    1cec:	nop

0000000000001cf0 <PyDict_SetItemString@plt>:
    1cf0:	adrp	x16, 14000 <PyDict_SetItemString>
    1cf4:	ldr	x17, [x16]
    1cf8:	add	x16, x16, #0x0
    1cfc:	br	x17

0000000000001d00 <PyModule_AddIntConstant@plt>:
    1d00:	adrp	x16, 14000 <PyDict_SetItemString>
    1d04:	ldr	x17, [x16, #8]
    1d08:	add	x16, x16, #0x8
    1d0c:	br	x17

0000000000001d10 <PyModuleDef_Init@plt>:
    1d10:	adrp	x16, 14000 <PyDict_SetItemString>
    1d14:	ldr	x17, [x16, #16]
    1d18:	add	x16, x16, #0x10
    1d1c:	br	x17

0000000000001d20 <__cxa_finalize@plt>:
    1d20:	adrp	x16, 14000 <PyDict_SetItemString>
    1d24:	ldr	x17, [x16, #24]
    1d28:	add	x16, x16, #0x18
    1d2c:	br	x17

0000000000001d30 <_Py_Dealloc@plt>:
    1d30:	adrp	x16, 14000 <PyDict_SetItemString>
    1d34:	ldr	x17, [x16, #32]
    1d38:	add	x16, x16, #0x20
    1d3c:	br	x17

0000000000001d40 <PyState_RemoveModule@plt>:
    1d40:	adrp	x16, 14000 <PyDict_SetItemString>
    1d44:	ldr	x17, [x16, #40]
    1d48:	add	x16, x16, #0x28
    1d4c:	br	x17

0000000000001d50 <PyErr_SetString@plt>:
    1d50:	adrp	x16, 14000 <PyDict_SetItemString>
    1d54:	ldr	x17, [x16, #48]
    1d58:	add	x16, x16, #0x30
    1d5c:	br	x17

0000000000001d60 <PyModule_GetState@plt>:
    1d60:	adrp	x16, 14000 <PyDict_SetItemString>
    1d64:	ldr	x17, [x16, #56]
    1d68:	add	x16, x16, #0x38
    1d6c:	br	x17

0000000000001d70 <PyModule_New@plt>:
    1d70:	adrp	x16, 14000 <PyDict_SetItemString>
    1d74:	ldr	x17, [x16, #64]
    1d78:	add	x16, x16, #0x40
    1d7c:	br	x17

0000000000001d80 <PyErr_ExceptionMatches@plt>:
    1d80:	adrp	x16, 14000 <PyDict_SetItemString>
    1d84:	ldr	x17, [x16, #72]
    1d88:	add	x16, x16, #0x48
    1d8c:	br	x17

0000000000001d90 <PyLong_FromLong@plt>:
    1d90:	adrp	x16, 14000 <PyDict_SetItemString>
    1d94:	ldr	x17, [x16, #80]
    1d98:	add	x16, x16, #0x50
    1d9c:	br	x17

0000000000001da0 <PyErr_NewException@plt>:
    1da0:	adrp	x16, 14000 <PyDict_SetItemString>
    1da4:	ldr	x17, [x16, #88]
    1da8:	add	x16, x16, #0x58
    1dac:	br	x17

0000000000001db0 <PyModule_GetDef@plt>:
    1db0:	adrp	x16, 14000 <PyDict_SetItemString>
    1db4:	ldr	x17, [x16, #96]
    1db8:	add	x16, x16, #0x60
    1dbc:	br	x17

0000000000001dc0 <__gmon_start__@plt>:
    1dc0:	adrp	x16, 14000 <PyDict_SetItemString>
    1dc4:	ldr	x17, [x16, #104]
    1dc8:	add	x16, x16, #0x68
    1dcc:	br	x17

0000000000001dd0 <_PyNamespace_New@plt>:
    1dd0:	adrp	x16, 14000 <PyDict_SetItemString>
    1dd4:	ldr	x17, [x16, #112]
    1dd8:	add	x16, x16, #0x70
    1ddc:	br	x17

0000000000001de0 <PyObject_GenericGetAttr@plt>:
    1de0:	adrp	x16, 14000 <PyDict_SetItemString>
    1de4:	ldr	x17, [x16, #120]
    1de8:	add	x16, x16, #0x78
    1dec:	br	x17

0000000000001df0 <PyErr_Occurred@plt>:
    1df0:	adrp	x16, 14000 <PyDict_SetItemString>
    1df4:	ldr	x17, [x16, #128]
    1df8:	add	x16, x16, #0x80
    1dfc:	br	x17

0000000000001e00 <PyState_FindModule@plt>:
    1e00:	adrp	x16, 14000 <PyDict_SetItemString>
    1e04:	ldr	x17, [x16, #136]
    1e08:	add	x16, x16, #0x88
    1e0c:	br	x17

0000000000001e10 <PyArg_ParseTuple@plt>:
    1e10:	adrp	x16, 14000 <PyDict_SetItemString>
    1e14:	ldr	x17, [x16, #144]
    1e18:	add	x16, x16, #0x90
    1e1c:	br	x17

0000000000001e20 <PyDict_New@plt>:
    1e20:	adrp	x16, 14000 <PyDict_SetItemString>
    1e24:	ldr	x17, [x16, #152]
    1e28:	add	x16, x16, #0x98
    1e2c:	br	x17

0000000000001e30 <PyState_AddModule@plt>:
    1e30:	adrp	x16, 14000 <PyDict_SetItemString>
    1e34:	ldr	x17, [x16, #160]
    1e38:	add	x16, x16, #0xa0
    1e3c:	br	x17

0000000000001e40 <PyModule_AddStringConstant@plt>:
    1e40:	adrp	x16, 14000 <PyDict_SetItemString>
    1e44:	ldr	x17, [x16, #168]
    1e48:	add	x16, x16, #0xa8
    1e4c:	br	x17

0000000000001e50 <PyModule_AddObject@plt>:
    1e50:	adrp	x16, 14000 <PyDict_SetItemString>
    1e54:	ldr	x17, [x16, #176]
    1e58:	add	x16, x16, #0xb0
    1e5c:	br	x17

0000000000001e60 <PyDict_DelItemString@plt>:
    1e60:	adrp	x16, 14000 <PyDict_SetItemString>
    1e64:	ldr	x17, [x16, #184]
    1e68:	add	x16, x16, #0xb8
    1e6c:	br	x17

0000000000001e70 <PyType_FromSpec@plt>:
    1e70:	adrp	x16, 14000 <PyDict_SetItemString>
    1e74:	ldr	x17, [x16, #192]
    1e78:	add	x16, x16, #0xc0
    1e7c:	br	x17

0000000000001e80 <PyDict_GetItemWithError@plt>:
    1e80:	adrp	x16, 14000 <PyDict_SetItemString>
    1e84:	ldr	x17, [x16, #200]
    1e88:	add	x16, x16, #0xc8
    1e8c:	br	x17

Disassembly of section .text:

0000000000001e90 <PyInit__testmultiphase@@Base-0x770>:
    1e90:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    1e94:	ldr	x0, [x0, #4032]
    1e98:	cbz	x0, 1ea0 <PyDict_GetItemWithError@plt+0x20>
    1e9c:	b	1dc0 <__gmon_start__@plt>
    1ea0:	ret
    1ea4:	nop
    1ea8:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1eac:	add	x0, x0, #0xc40
    1eb0:	adrp	x1, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1eb4:	add	x1, x1, #0xc40
    1eb8:	cmp	x1, x0
    1ebc:	b.eq	1ed4 <PyDict_GetItemWithError@plt+0x54>  // b.none
    1ec0:	adrp	x1, 13000 <PyInit_imp_dummy@@Base+0x10850>
    1ec4:	ldr	x1, [x1, #4008]
    1ec8:	cbz	x1, 1ed4 <PyDict_GetItemWithError@plt+0x54>
    1ecc:	mov	x16, x1
    1ed0:	br	x16
    1ed4:	ret
    1ed8:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1edc:	add	x0, x0, #0xc40
    1ee0:	adrp	x1, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1ee4:	add	x1, x1, #0xc40
    1ee8:	sub	x1, x1, x0
    1eec:	lsr	x2, x1, #63
    1ef0:	add	x1, x2, x1, asr #3
    1ef4:	cmp	xzr, x1, asr #1
    1ef8:	asr	x1, x1, #1
    1efc:	b.eq	1f14 <PyDict_GetItemWithError@plt+0x94>  // b.none
    1f00:	adrp	x2, 13000 <PyInit_imp_dummy@@Base+0x10850>
    1f04:	ldr	x2, [x2, #4064]
    1f08:	cbz	x2, 1f14 <PyDict_GetItemWithError@plt+0x94>
    1f0c:	mov	x16, x2
    1f10:	br	x16
    1f14:	ret
    1f18:	stp	x29, x30, [sp, #-32]!
    1f1c:	mov	x29, sp
    1f20:	str	x19, [sp, #16]
    1f24:	adrp	x19, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1f28:	ldrb	w0, [x19, #3136]
    1f2c:	cbnz	w0, 1f54 <PyDict_GetItemWithError@plt+0xd4>
    1f30:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    1f34:	ldr	x0, [x0, #4016]
    1f38:	cbz	x0, 1f48 <PyDict_GetItemWithError@plt+0xc8>
    1f3c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1f40:	ldr	x0, [x0, #208]
    1f44:	bl	1d20 <__cxa_finalize@plt>
    1f48:	bl	1ea8 <PyDict_GetItemWithError@plt+0x28>
    1f4c:	mov	w0, #0x1                   	// #1
    1f50:	strb	w0, [x19, #3136]
    1f54:	ldr	x19, [sp, #16]
    1f58:	ldp	x29, x30, [sp], #32
    1f5c:	ret
    1f60:	b	1ed8 <PyDict_GetItemWithError@plt+0x58>
    1f64:	nop
    1f68:	ldr	x0, [x0, #16]
    1f6c:	mov	x3, x1
    1f70:	mov	x1, x2
    1f74:	cbz	x0, 1f80 <PyDict_GetItemWithError@plt+0x100>
    1f78:	mov	x16, x3
    1f7c:	br	x16
    1f80:	mov	w0, #0x0                   	// #0
    1f84:	ret
    1f88:	mov	x0, #0x0                   	// #0
    1f8c:	ret
    1f90:	mov	w0, #0xffffffff            	// #-1
    1f94:	ret
    1f98:	stp	x29, x30, [sp, #-32]!
    1f9c:	adrp	x2, 13000 <PyInit_imp_dummy@@Base+0x10850>
    1fa0:	adrp	x1, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1fa4:	mov	x29, sp
    1fa8:	ldr	x2, [x2, #4056]
    1fac:	stp	x19, x20, [sp, #16]
    1fb0:	adrp	x20, 14000 <PyInit_imp_dummy@@Base+0x11850>
    1fb4:	add	x20, x20, #0x140
    1fb8:	mov	x19, x0
    1fbc:	str	x2, [x1, #232]
    1fc0:	mov	x0, x20
    1fc4:	bl	1e70 <PyType_FromSpec@plt>
    1fc8:	cbz	x0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    1fcc:	mov	x2, x0
    1fd0:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    1fd4:	mov	x0, x19
    1fd8:	add	x1, x1, #0xe90
    1fdc:	bl	1e50 <PyModule_AddObject@plt>
    1fe0:	cbnz	w0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    1fe4:	mov	x2, #0x0                   	// #0
    1fe8:	adrp	x0, 2000 <PyDict_GetItemWithError@plt+0x180>
    1fec:	mov	x1, #0x0                   	// #0
    1ff0:	add	x0, x0, #0x7d0
    1ff4:	bl	1da0 <PyErr_NewException@plt>
    1ff8:	mov	x2, x0
    1ffc:	cbz	x0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    2000:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2004:	mov	x0, x19
    2008:	add	x1, x1, #0x7e0
    200c:	bl	1e50 <PyModule_AddObject@plt>
    2010:	cbnz	w0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    2014:	add	x0, x20, #0x20
    2018:	bl	1e70 <PyType_FromSpec@plt>
    201c:	mov	x2, x0
    2020:	cbz	x0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    2024:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2028:	mov	x0, x19
    202c:	add	x1, x1, #0xe78
    2030:	bl	1e50 <PyModule_AddObject@plt>
    2034:	cbnz	w0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    2038:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    203c:	mov	x0, x19
    2040:	add	x1, x1, #0x7e8
    2044:	mov	x2, #0x7b1                 	// #1969
    2048:	bl	1d00 <PyModule_AddIntConstant@plt>
    204c:	cbnz	w0, 207c <PyDict_GetItemWithError@plt+0x1fc>
    2050:	mov	x0, x19
    2054:	adrp	x2, 2000 <PyDict_GetItemWithError@plt+0x180>
    2058:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    205c:	add	x2, x2, #0x7f8
    2060:	add	x1, x1, #0x810
    2064:	bl	1e40 <PyModule_AddStringConstant@plt>
    2068:	cmp	w0, #0x0
    206c:	csetm	w0, ne  // ne = any
    2070:	ldp	x19, x20, [sp, #16]
    2074:	ldp	x29, x30, [sp], #32
    2078:	ret
    207c:	mov	w0, #0xffffffff            	// #-1
    2080:	ldp	x19, x20, [sp, #16]
    2084:	ldp	x29, x30, [sp], #32
    2088:	ret
    208c:	nop
    2090:	stp	x29, x30, [sp, #-16]!
    2094:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    2098:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    209c:	mov	x29, sp
    20a0:	ldr	x0, [x0, #4000]
    20a4:	add	x1, x1, #0x820
    20a8:	ldr	x0, [x0]
    20ac:	bl	1d50 <PyErr_SetString@plt>
    20b0:	mov	x0, #0x0                   	// #0
    20b4:	ldp	x29, x30, [sp], #16
    20b8:	ret
    20bc:	nop
    20c0:	stp	x29, x30, [sp, #-16]!
    20c4:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    20c8:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    20cc:	mov	x29, sp
    20d0:	ldr	x0, [x0, #4000]
    20d4:	add	x1, x1, #0x838
    20d8:	ldr	x0, [x0]
    20dc:	bl	1d50 <PyErr_SetString@plt>
    20e0:	mov	w0, #0xffffffff            	// #-1
    20e4:	ldp	x29, x30, [sp], #16
    20e8:	ret
    20ec:	nop
    20f0:	stp	x29, x30, [sp, #-16]!
    20f4:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    20f8:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    20fc:	mov	x29, sp
    2100:	ldr	x0, [x0, #4000]
    2104:	add	x1, x1, #0x838
    2108:	ldr	x0, [x0]
    210c:	bl	1d50 <PyErr_SetString@plt>
    2110:	mov	w0, #0x0                   	// #0
    2114:	ldp	x29, x30, [sp], #16
    2118:	ret
    211c:	nop
    2120:	stp	x29, x30, [sp, #-48]!
    2124:	mov	x29, sp
    2128:	stp	x19, x20, [sp, #16]
    212c:	mov	x19, x0
    2130:	ldr	x0, [x0, #16]
    2134:	str	x21, [sp, #32]
    2138:	mov	x21, x1
    213c:	cbz	x0, 2174 <PyDict_GetItemWithError@plt+0x2f4>
    2140:	bl	1e80 <PyDict_GetItemWithError@plt>
    2144:	mov	x20, x0
    2148:	cbz	x0, 216c <PyDict_GetItemWithError@plt+0x2ec>
    214c:	ldr	x0, [x0]
    2150:	add	x0, x0, #0x1
    2154:	str	x0, [x20]
    2158:	mov	x0, x20
    215c:	ldp	x19, x20, [sp, #16]
    2160:	ldr	x21, [sp, #32]
    2164:	ldp	x29, x30, [sp], #48
    2168:	ret
    216c:	bl	1df0 <PyErr_Occurred@plt>
    2170:	cbnz	x0, 2158 <PyDict_GetItemWithError@plt+0x2d8>
    2174:	mov	x1, x21
    2178:	mov	x0, x19
    217c:	ldp	x19, x20, [sp, #16]
    2180:	ldr	x21, [sp, #32]
    2184:	ldp	x29, x30, [sp], #48
    2188:	b	1de0 <PyObject_GenericGetAttr@plt>
    218c:	nop
    2190:	ldr	x1, [x0, #16]
    2194:	cbz	x1, 21ac <PyDict_GetItemWithError@plt+0x32c>
    2198:	ldr	x2, [x1]
    219c:	str	xzr, [x0, #16]
    21a0:	sub	x0, x2, #0x1
    21a4:	str	x0, [x1]
    21a8:	cbz	x0, 21b0 <PyDict_GetItemWithError@plt+0x330>
    21ac:	ret
    21b0:	mov	x0, x1
    21b4:	b	1d30 <_Py_Dealloc@plt>
    21b8:	stp	x29, x30, [sp, #-64]!
    21bc:	mov	x29, sp
    21c0:	stp	x19, x20, [sp, #16]
    21c4:	mov	x20, x1
    21c8:	str	x21, [sp, #32]
    21cc:	mov	x21, x0
    21d0:	bl	1db0 <PyModule_GetDef@plt>
    21d4:	cbz	x0, 2240 <PyDict_GetItemWithError@plt+0x3c0>
    21d8:	mov	x19, x0
    21dc:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    21e0:	mov	x0, x20
    21e4:	add	x2, sp, #0x3c
    21e8:	add	x1, x1, #0x850
    21ec:	bl	1e10 <PyArg_ParseTuple@plt>
    21f0:	cbz	w0, 2240 <PyDict_GetItemWithError@plt+0x3c0>
    21f4:	ldr	w0, [sp, #60]
    21f8:	cmp	w0, #0x1
    21fc:	b.eq	2270 <PyDict_GetItemWithError@plt+0x3f0>  // b.none
    2200:	cmp	w0, #0x2
    2204:	b.eq	2234 <PyDict_GetItemWithError@plt+0x3b4>  // b.none
    2208:	cbz	w0, 2254 <PyDict_GetItemWithError@plt+0x3d4>
    220c:	adrp	x1, 13000 <PyInit_imp_dummy@@Base+0x10850>
    2210:	ldp	x19, x20, [sp, #16]
    2214:	ldr	x1, [x1, #4040]
    2218:	ldr	x21, [sp, #32]
    221c:	mov	x0, x1
    2220:	ldr	x2, [x1]
    2224:	add	x2, x2, #0x1
    2228:	str	x2, [x1]
    222c:	ldp	x29, x30, [sp], #64
    2230:	ret
    2234:	mov	x0, x19
    2238:	bl	1d40 <PyState_RemoveModule@plt>
    223c:	cbz	w0, 220c <PyDict_GetItemWithError@plt+0x38c>
    2240:	mov	x0, #0x0                   	// #0
    2244:	ldp	x19, x20, [sp, #16]
    2248:	ldr	x21, [sp, #32]
    224c:	ldp	x29, x30, [sp], #64
    2250:	ret
    2254:	mov	x0, x19
    2258:	bl	1e00 <PyState_FindModule@plt>
    225c:	cbz	x0, 220c <PyDict_GetItemWithError@plt+0x38c>
    2260:	ldp	x19, x20, [sp, #16]
    2264:	ldr	x21, [sp, #32]
    2268:	ldp	x29, x30, [sp], #64
    226c:	ret
    2270:	mov	x1, x19
    2274:	mov	x0, x21
    2278:	bl	1e30 <PyState_AddModule@plt>
    227c:	cbz	w0, 220c <PyDict_GetItemWithError@plt+0x38c>
    2280:	mov	x0, #0x0                   	// #0
    2284:	b	2244 <PyDict_GetItemWithError@plt+0x3c4>
    2288:	stp	x29, x30, [sp, #-32]!
    228c:	mov	x0, x1
    2290:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2294:	mov	x29, sp
    2298:	add	x1, x1, #0x870
    229c:	add	x3, sp, #0x18
    22a0:	add	x2, sp, #0x10
    22a4:	bl	1e10 <PyArg_ParseTuple@plt>
    22a8:	mov	w1, w0
    22ac:	mov	x0, #0x0                   	// #0
    22b0:	cbz	w1, 22c0 <PyDict_GetItemWithError@plt+0x440>
    22b4:	ldp	x1, x0, [sp, #16]
    22b8:	add	x0, x1, x0
    22bc:	bl	1d90 <PyLong_FromLong@plt>
    22c0:	ldp	x29, x30, [sp], #32
    22c4:	ret
    22c8:	stp	x29, x30, [sp, #-32]!
    22cc:	mov	x0, x1
    22d0:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    22d4:	mov	x29, sp
    22d8:	add	x1, x1, #0x878
    22dc:	add	x3, sp, #0x18
    22e0:	add	x2, sp, #0x10
    22e4:	bl	1e10 <PyArg_ParseTuple@plt>
    22e8:	mov	w1, w0
    22ec:	mov	x0, #0x0                   	// #0
    22f0:	cbz	w1, 2300 <PyDict_GetItemWithError@plt+0x480>
    22f4:	ldp	x1, x0, [sp, #16]
    22f8:	sub	x0, x1, x0
    22fc:	bl	1d90 <PyLong_FromLong@plt>
    2300:	ldp	x29, x30, [sp], #32
    2304:	ret
    2308:	stp	x29, x30, [sp, #-32]!
    230c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2310:	add	x0, x0, #0x140
    2314:	mov	x29, sp
    2318:	add	x2, x0, #0x40
    231c:	stp	x19, x20, [sp, #16]
    2320:	add	x0, x0, #0xa8
    2324:	cmp	x1, x2
    2328:	ccmp	x1, x0, #0x4, ne  // ne = any
    232c:	b.ne	2400 <PyDict_GetItemWithError@plt+0x580>  // b.any
    2330:	bl	1e20 <PyDict_New@plt>
    2334:	mov	x20, x0
    2338:	cbz	x0, 23c4 <PyDict_GetItemWithError@plt+0x544>
    233c:	mov	x0, #0x3                   	// #3
    2340:	bl	1d90 <PyLong_FromLong@plt>
    2344:	mov	x19, x0
    2348:	cbz	x0, 239c <PyDict_GetItemWithError@plt+0x51c>
    234c:	mov	x2, x0
    2350:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2354:	mov	x0, x20
    2358:	add	x1, x1, #0x898
    235c:	bl	1cf0 <PyDict_SetItemString@plt>
    2360:	ldr	x0, [x19]
    2364:	sub	x0, x0, #0x1
    2368:	str	x0, [x19]
    236c:	cbz	x0, 23d8 <PyDict_GetItemWithError@plt+0x558>
    2370:	mov	x0, x20
    2374:	bl	1dd0 <_PyNamespace_New@plt>
    2378:	ldr	x1, [x20]
    237c:	mov	x19, x0
    2380:	sub	x0, x1, #0x1
    2384:	str	x0, [x20]
    2388:	cbz	x0, 23ac <PyDict_GetItemWithError@plt+0x52c>
    238c:	mov	x0, x19
    2390:	ldp	x19, x20, [sp, #16]
    2394:	ldp	x29, x30, [sp], #32
    2398:	ret
    239c:	ldr	x0, [x20]
    23a0:	sub	x0, x0, #0x1
    23a4:	str	x0, [x20]
    23a8:	cbnz	x0, 23c4 <PyDict_GetItemWithError@plt+0x544>
    23ac:	mov	x0, x20
    23b0:	bl	1d30 <_Py_Dealloc@plt>
    23b4:	mov	x0, x19
    23b8:	ldp	x19, x20, [sp, #16]
    23bc:	ldp	x29, x30, [sp], #32
    23c0:	ret
    23c4:	mov	x19, #0x0                   	// #0
    23c8:	mov	x0, x19
    23cc:	ldp	x19, x20, [sp, #16]
    23d0:	ldp	x29, x30, [sp], #32
    23d4:	ret
    23d8:	mov	x0, x19
    23dc:	bl	1d30 <_Py_Dealloc@plt>
    23e0:	mov	x0, x20
    23e4:	bl	1dd0 <_PyNamespace_New@plt>
    23e8:	ldr	x1, [x20]
    23ec:	mov	x19, x0
    23f0:	sub	x0, x1, #0x1
    23f4:	str	x0, [x20]
    23f8:	cbnz	x0, 238c <PyDict_GetItemWithError@plt+0x50c>
    23fc:	b	23ac <PyDict_GetItemWithError@plt+0x52c>
    2400:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    2404:	mov	x19, #0x0                   	// #0
    2408:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    240c:	add	x1, x1, #0x880
    2410:	ldr	x0, [x0, #4000]
    2414:	ldr	x0, [x0]
    2418:	bl	1d50 <PyErr_SetString@plt>
    241c:	mov	x0, x19
    2420:	ldp	x19, x20, [sp, #16]
    2424:	ldp	x29, x30, [sp], #32
    2428:	ret
    242c:	nop
    2430:	stp	x29, x30, [sp, #-16]!
    2434:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    2438:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    243c:	mov	x29, sp
    2440:	ldr	x0, [x0, #4000]
    2444:	add	x1, x1, #0x820
    2448:	ldr	x0, [x0]
    244c:	bl	1d50 <PyErr_SetString@plt>
    2450:	ldp	x29, x30, [sp], #16
    2454:	adrp	x0, 2000 <PyDict_GetItemWithError@plt+0x180>
    2458:	add	x0, x0, #0x8a0
    245c:	b	1d70 <PyModule_New@plt>
    2460:	stp	x29, x30, [sp, #-32]!
    2464:	mov	x29, sp
    2468:	stp	x19, x20, [sp, #16]
    246c:	mov	x19, x1
    2470:	mov	x20, x2
    2474:	bl	1d60 <PyModule_GetState@plt>
    2478:	ldr	x0, [x0]
    247c:	cbz	x0, 2494 <PyDict_GetItemWithError@plt+0x614>
    2480:	mov	x1, x20
    2484:	mov	x16, x19
    2488:	ldp	x19, x20, [sp, #16]
    248c:	ldp	x29, x30, [sp], #32
    2490:	br	x16
    2494:	mov	w0, #0x0                   	// #0
    2498:	ldp	x19, x20, [sp, #16]
    249c:	ldp	x29, x30, [sp], #32
    24a0:	ret
    24a4:	nop
    24a8:	stp	x29, x30, [sp, #-32]!
    24ac:	mov	x29, sp
    24b0:	bl	1d60 <PyModule_GetState@plt>
    24b4:	cbz	x0, 24ec <PyDict_GetItemWithError@plt+0x66c>
    24b8:	str	x19, [sp, #16]
    24bc:	mov	x19, x0
    24c0:	mov	x0, #0x7fffffff            	// #2147483647
    24c4:	bl	1d90 <PyLong_FromLong@plt>
    24c8:	mov	x1, x0
    24cc:	mov	w0, #0x0                   	// #0
    24d0:	ldr	x2, [x1]
    24d4:	str	x1, [x19]
    24d8:	ldr	x19, [sp, #16]
    24dc:	add	x2, x2, #0x1
    24e0:	str	x2, [x1]
    24e4:	ldp	x29, x30, [sp], #32
    24e8:	ret
    24ec:	mov	w0, #0xffffffff            	// #-1
    24f0:	b	24e4 <PyDict_GetItemWithError@plt+0x664>
    24f4:	nop
    24f8:	stp	x29, x30, [sp, #-32]!
    24fc:	mov	x0, x1
    2500:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2504:	mov	x29, sp
    2508:	add	x1, x1, #0x8a8
    250c:	add	x2, sp, #0x18
    2510:	str	xzr, [sp, #24]
    2514:	bl	1e10 <PyArg_ParseTuple@plt>
    2518:	cbz	w0, 2564 <PyDict_GetItemWithError@plt+0x6e4>
    251c:	ldr	x0, [sp, #24]
    2520:	cbz	x0, 2530 <PyDict_GetItemWithError@plt+0x6b0>
    2524:	ldr	x1, [x0, #8]
    2528:	ldr	x1, [x1, #168]
    252c:	tbnz	w1, #28, 2550 <PyDict_GetItemWithError@plt+0x6d0>
    2530:	adrp	x1, 13000 <PyInit_imp_dummy@@Base+0x10850>
    2534:	ldr	x1, [x1, #4040]
    2538:	mov	x0, x1
    253c:	ldr	x2, [x1]
    2540:	add	x2, x2, #0x1
    2544:	str	x2, [x1]
    2548:	ldp	x29, x30, [sp], #32
    254c:	ret
    2550:	ldr	x1, [x0]
    2554:	add	x1, x1, #0x1
    2558:	str	x1, [x0]
    255c:	ldp	x29, x30, [sp], #32
    2560:	ret
    2564:	mov	x0, #0x0                   	// #0
    2568:	ldp	x29, x30, [sp], #32
    256c:	ret
    2570:	stp	x29, x30, [sp, #-48]!
    2574:	mov	x29, sp
    2578:	str	x19, [sp, #16]
    257c:	mov	x19, x0
    2580:	ldr	x0, [x0, #16]
    2584:	cbz	x0, 25b4 <PyDict_GetItemWithError@plt+0x734>
    2588:	cbz	x2, 2598 <PyDict_GetItemWithError@plt+0x718>
    258c:	ldr	x19, [sp, #16]
    2590:	ldp	x29, x30, [sp], #48
    2594:	b	1cf0 <PyDict_SetItemString@plt>
    2598:	bl	1e60 <PyDict_DelItemString@plt>
    259c:	mov	w19, w0
    25a0:	tbnz	w0, #31, 25d0 <PyDict_GetItemWithError@plt+0x750>
    25a4:	mov	w0, w19
    25a8:	ldr	x19, [sp, #16]
    25ac:	ldp	x29, x30, [sp], #48
    25b0:	ret
    25b4:	stp	x1, x2, [sp, #32]
    25b8:	bl	1e20 <PyDict_New@plt>
    25bc:	str	x0, [x19, #16]
    25c0:	ldp	x1, x2, [sp, #32]
    25c4:	cbnz	x0, 2588 <PyDict_GetItemWithError@plt+0x708>
    25c8:	mov	w19, #0xffffffff            	// #-1
    25cc:	b	25a4 <PyDict_GetItemWithError@plt+0x724>
    25d0:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    25d4:	ldr	x0, [x0, #4024]
    25d8:	ldr	x0, [x0]
    25dc:	bl	1d80 <PyErr_ExceptionMatches@plt>
    25e0:	cbz	w0, 25a4 <PyDict_GetItemWithError@plt+0x724>
    25e4:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    25e8:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    25ec:	add	x1, x1, #0x8b0
    25f0:	ldr	x0, [x0, #4048]
    25f4:	ldr	x0, [x0]
    25f8:	bl	1d50 <PyErr_SetString@plt>
    25fc:	b	25a4 <PyDict_GetItemWithError@plt+0x724>

0000000000002600 <PyInit__testmultiphase@@Base>:
    2600:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2604:	add	x0, x0, #0x140
    2608:	add	x0, x0, #0x110
    260c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002610 <PyInit__testmultiphase_nonmodule@@Base>:
    2610:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2614:	add	x0, x0, #0x140
    2618:	add	x0, x0, #0xa8
    261c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002620 <PyInit__testmultiphase_nonmodule_with_methods@@Base>:
    2620:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2624:	add	x0, x0, #0x140
    2628:	add	x0, x0, #0x40
    262c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002630 <PyInitU__testmultiphase_zkouka_naten_evc07gi8e@@Base>:
    2630:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2634:	add	x0, x0, #0x140
    2638:	add	x0, x0, #0x178
    263c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002640 <PyInitU_eckzbwbhc6jpgzcx415x@@Base>:
    2640:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2644:	add	x0, x0, #0x140
    2648:	add	x0, x0, #0x1e0
    264c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002650 <PyInit_x@@Base>:
    2650:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2654:	add	x0, x0, #0x140
    2658:	add	x0, x0, #0x110
    265c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002660 <PyInit__testmultiphase_null_slots@@Base>:
    2660:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2664:	add	x0, x0, #0x140
    2668:	add	x0, x0, #0x248
    266c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002670 <PyInit__testmultiphase_bad_slot_large@@Base>:
    2670:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2674:	add	x0, x0, #0x140
    2678:	add	x0, x0, #0x2b0
    267c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002680 <PyInit__testmultiphase_bad_slot_negative@@Base>:
    2680:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2684:	add	x0, x0, #0x140
    2688:	add	x0, x0, #0x318
    268c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002690 <PyInit__testmultiphase_create_int_with_state@@Base>:
    2690:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2694:	add	x0, x0, #0x140
    2698:	add	x0, x0, #0x380
    269c:	b	1d10 <PyModuleDef_Init@plt>

00000000000026a0 <PyInit__testmultiphase_negative_size@@Base>:
    26a0:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    26a4:	add	x0, x0, #0x140
    26a8:	add	x0, x0, #0x3e8
    26ac:	b	1d10 <PyModuleDef_Init@plt>

00000000000026b0 <PyInit__testmultiphase_export_uninitialized@@Base>:
    26b0:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    26b4:	add	x0, x0, #0x140
    26b8:	add	x0, x0, #0x450
    26bc:	ret

00000000000026c0 <PyInit__testmultiphase_export_null@@Base>:
    26c0:	mov	x0, #0x0                   	// #0
    26c4:	ret

00000000000026c8 <PyInit__testmultiphase_export_raise@@Base>:
    26c8:	stp	x29, x30, [sp, #-16]!
    26cc:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    26d0:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    26d4:	mov	x29, sp
    26d8:	ldr	x0, [x0, #4000]
    26dc:	add	x1, x1, #0x8d8
    26e0:	ldr	x0, [x0]
    26e4:	bl	1d50 <PyErr_SetString@plt>
    26e8:	mov	x0, #0x0                   	// #0
    26ec:	ldp	x29, x30, [sp], #16
    26f0:	ret
    26f4:	nop

00000000000026f8 <PyInit__testmultiphase_export_unreported_exception@@Base>:
    26f8:	stp	x29, x30, [sp, #-16]!
    26fc:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x10850>
    2700:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2704:	mov	x29, sp
    2708:	ldr	x0, [x0, #4000]
    270c:	add	x1, x1, #0x8d8
    2710:	ldr	x0, [x0]
    2714:	bl	1d50 <PyErr_SetString@plt>
    2718:	ldp	x29, x30, [sp], #16
    271c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2720:	add	x0, x0, #0x140
    2724:	add	x0, x0, #0x110
    2728:	b	1d10 <PyModuleDef_Init@plt>
    272c:	nop

0000000000002730 <PyInit__testmultiphase_create_null@@Base>:
    2730:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2734:	add	x0, x0, #0x140
    2738:	add	x0, x0, #0x4b8
    273c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002740 <PyInit__testmultiphase_create_raise@@Base>:
    2740:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2744:	add	x0, x0, #0x140
    2748:	add	x0, x0, #0x520
    274c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002750 <PyInit__testmultiphase_create_unreported_exception@@Base>:
    2750:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2754:	add	x0, x0, #0x140
    2758:	add	x0, x0, #0x588
    275c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002760 <PyInit__testmultiphase_nonmodule_with_exec_slots@@Base>:
    2760:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2764:	add	x0, x0, #0x140
    2768:	add	x0, x0, #0x5f0
    276c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002770 <PyInit__testmultiphase_exec_err@@Base>:
    2770:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2774:	add	x0, x0, #0x140
    2778:	add	x0, x0, #0x658
    277c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002780 <PyInit__testmultiphase_exec_raise@@Base>:
    2780:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2784:	add	x0, x0, #0x140
    2788:	add	x0, x0, #0x6c0
    278c:	b	1d10 <PyModuleDef_Init@plt>

0000000000002790 <PyInit__testmultiphase_exec_unreported_exception@@Base>:
    2790:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    2794:	add	x0, x0, #0x140
    2798:	add	x0, x0, #0x728
    279c:	b	1d10 <PyModuleDef_Init@plt>

00000000000027a0 <PyInit__testmultiphase_with_bad_traverse@@Base>:
    27a0:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    27a4:	add	x0, x0, #0x140
    27a8:	add	x0, x0, #0x790
    27ac:	b	1d10 <PyModuleDef_Init@plt>

00000000000027b0 <PyInit_imp_dummy@@Base>:
    27b0:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x11850>
    27b4:	add	x0, x0, #0x140
    27b8:	add	x0, x0, #0x7f8
    27bc:	b	1d10 <PyModuleDef_Init@plt>

Disassembly of section .fini:

00000000000027c0 <.fini>:
    27c0:	stp	x29, x30, [sp, #-16]!
    27c4:	mov	x29, sp
    27c8:	ldp	x29, x30, [sp], #16
    27cc:	ret
