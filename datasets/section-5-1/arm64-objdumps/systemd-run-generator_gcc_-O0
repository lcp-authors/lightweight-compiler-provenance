
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-run-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400e20 <_init>:
  400e20:	stp	x29, x30, [sp, #-16]!
  400e24:	mov	x29, sp
  400e28:	bl	4010a0 <call_weak_fn>
  400e2c:	ldp	x29, x30, [sp], #16
  400e30:	ret

Disassembly of section .plt:

0000000000400e40 <.plt>:
  400e40:	stp	x16, x30, [sp, #-16]!
  400e44:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400e48:	ldr	x17, [x16, #3824]
  400e4c:	add	x16, x16, #0xef0
  400e50:	br	x17
  400e54:	nop
  400e58:	nop
  400e5c:	nop

0000000000400e60 <safe_fclose@plt>:
  400e60:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400e64:	ldr	x17, [x16, #3832]
  400e68:	add	x16, x16, #0xef8
  400e6c:	br	x17

0000000000400e70 <strcmp_ptr@plt>:
  400e70:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400e74:	ldr	x17, [x16, #3840]
  400e78:	add	x16, x16, #0xf00
  400e7c:	br	x17

0000000000400e80 <stpcpy@plt>:
  400e80:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400e84:	ldr	x17, [x16, #3848]
  400e88:	add	x16, x16, #0xf08
  400e8c:	br	x17

0000000000400e90 <__libc_start_main@plt>:
  400e90:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400e94:	ldr	x17, [x16, #3856]
  400e98:	add	x16, x16, #0xf10
  400e9c:	br	x17

0000000000400ea0 <__gmon_start__@plt>:
  400ea0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400ea4:	ldr	x17, [x16, #3864]
  400ea8:	add	x16, x16, #0xf18
  400eac:	br	x17

0000000000400eb0 <write_string_file_ts@plt>:
  400eb0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400eb4:	ldr	x17, [x16, #3872]
  400eb8:	add	x16, x16, #0xf20
  400ebc:	br	x17

0000000000400ec0 <polkit_agent_close@plt>:
  400ec0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400ec4:	ldr	x17, [x16, #3880]
  400ec8:	add	x16, x16, #0xf28
  400ecc:	br	x17

0000000000400ed0 <free_and_strdup@plt>:
  400ed0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400ed4:	ldr	x17, [x16, #3888]
  400ed8:	add	x16, x16, #0xf30
  400edc:	br	x17

0000000000400ee0 <proc_cmdline_key_streq@plt>:
  400ee0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400ee4:	ldr	x17, [x16, #3896]
  400ee8:	add	x16, x16, #0xf38
  400eec:	br	x17

0000000000400ef0 <fprintf@plt>:
  400ef0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400ef4:	ldr	x17, [x16, #3904]
  400ef8:	add	x16, x16, #0xf40
  400efc:	br	x17

0000000000400f00 <symlink@plt>:
  400f00:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f04:	ldr	x17, [x16, #3912]
  400f08:	add	x16, x16, #0xf48
  400f0c:	br	x17

0000000000400f10 <log_assert_failed_realm@plt>:
  400f10:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f14:	ldr	x17, [x16, #3920]
  400f18:	add	x16, x16, #0xf50
  400f1c:	br	x17

0000000000400f20 <abort@plt>:
  400f20:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f24:	ldr	x17, [x16, #3928]
  400f28:	add	x16, x16, #0xf58
  400f2c:	br	x17

0000000000400f30 <log_setup_generator@plt>:
  400f30:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f34:	ldr	x17, [x16, #3936]
  400f38:	add	x16, x16, #0xf60
  400f3c:	br	x17

0000000000400f40 <strreplace@plt>:
  400f40:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f44:	ldr	x17, [x16, #3944]
  400f48:	add	x16, x16, #0xf68
  400f4c:	br	x17

0000000000400f50 <__errno_location@plt>:
  400f50:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f54:	ldr	x17, [x16, #3952]
  400f58:	add	x16, x16, #0xf70
  400f5c:	br	x17

0000000000400f60 <strv_free@plt>:
  400f60:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f64:	ldr	x17, [x16, #3960]
  400f68:	add	x16, x16, #0xf78
  400f6c:	br	x17

0000000000400f70 <strv_extend@plt>:
  400f70:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f74:	ldr	x17, [x16, #3968]
  400f78:	add	x16, x16, #0xf80
  400f7c:	br	x17

0000000000400f80 <__stack_chk_fail@plt>:
  400f80:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f84:	ldr	x17, [x16, #3976]
  400f88:	add	x16, x16, #0xf88
  400f8c:	br	x17

0000000000400f90 <ask_password_agent_close@plt>:
  400f90:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400f94:	ldr	x17, [x16, #3984]
  400f98:	add	x16, x16, #0xf90
  400f9c:	br	x17

0000000000400fa0 <pager_close@plt>:
  400fa0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400fa4:	ldr	x17, [x16, #3992]
  400fa8:	add	x16, x16, #0xf98
  400fac:	br	x17

0000000000400fb0 <log_internal_realm@plt>:
  400fb0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400fb4:	ldr	x17, [x16, #4000]
  400fb8:	add	x16, x16, #0xfa0
  400fbc:	br	x17

0000000000400fc0 <proc_cmdline_parse@plt>:
  400fc0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400fc4:	ldr	x17, [x16, #4008]
  400fc8:	add	x16, x16, #0xfa8
  400fcc:	br	x17

0000000000400fd0 <free@plt>:
  400fd0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400fd4:	ldr	x17, [x16, #4016]
  400fd8:	add	x16, x16, #0xfb0
  400fdc:	br	x17

0000000000400fe0 <fwrite@plt>:
  400fe0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400fe4:	ldr	x17, [x16, #4024]
  400fe8:	add	x16, x16, #0xfb8
  400fec:	br	x17

0000000000400ff0 <mac_selinux_finish@plt>:
  400ff0:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  400ff4:	ldr	x17, [x16, #4032]
  400ff8:	add	x16, x16, #0xfc0
  400ffc:	br	x17

0000000000401000 <strlen@plt>:
  401000:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  401004:	ldr	x17, [x16, #4040]
  401008:	add	x16, x16, #0xfc8
  40100c:	br	x17

0000000000401010 <fopen64@plt>:
  401010:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  401014:	ldr	x17, [x16, #4048]
  401018:	add	x16, x16, #0xfd0
  40101c:	br	x17

0000000000401020 <log_oom_internal@plt>:
  401020:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  401024:	ldr	x17, [x16, #4056]
  401028:	add	x16, x16, #0xfd8
  40102c:	br	x17

0000000000401030 <fflush_and_check@plt>:
  401030:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  401034:	ldr	x17, [x16, #4064]
  401038:	add	x16, x16, #0xfe0
  40103c:	br	x17

0000000000401040 <log_get_max_level_realm@plt>:
  401040:	adrp	x16, 413000 <__FRAME_END__+0x101e0>
  401044:	ldr	x17, [x16, #4072]
  401048:	add	x16, x16, #0xfe8
  40104c:	br	x17

Disassembly of section .text:

0000000000401050 <_start>:
  401050:	mov	x29, #0x0                   	// #0
  401054:	mov	x30, #0x0                   	// #0
  401058:	mov	x5, x0
  40105c:	ldr	x1, [sp]
  401060:	add	x2, sp, #0x8
  401064:	mov	x6, sp
  401068:	movz	x0, #0x0, lsl #48
  40106c:	movk	x0, #0x0, lsl #32
  401070:	movk	x0, #0x40, lsl #16
  401074:	movk	x0, #0x2290
  401078:	movz	x3, #0x0, lsl #48
  40107c:	movk	x3, #0x0, lsl #32
  401080:	movk	x3, #0x40, lsl #16
  401084:	movk	x3, #0x23e0
  401088:	movz	x4, #0x0, lsl #48
  40108c:	movk	x4, #0x0, lsl #32
  401090:	movk	x4, #0x40, lsl #16
  401094:	movk	x4, #0x2460
  401098:	bl	400e90 <__libc_start_main@plt>
  40109c:	bl	400f20 <abort@plt>

00000000004010a0 <call_weak_fn>:
  4010a0:	adrp	x0, 413000 <__FRAME_END__+0x101e0>
  4010a4:	ldr	x0, [x0, #4088]
  4010a8:	cbz	x0, 4010b0 <call_weak_fn+0x10>
  4010ac:	b	400ea0 <__gmon_start__@plt>
  4010b0:	ret

00000000004010b4 <deregister_tm_clones>:
  4010b4:	stp	x29, x30, [sp, #-32]!
  4010b8:	mov	x29, sp
  4010bc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4010c0:	add	x0, x0, #0x0
  4010c4:	str	x0, [sp, #24]
  4010c8:	ldr	x0, [sp, #24]
  4010cc:	str	x0, [sp, #24]
  4010d0:	ldr	x1, [sp, #24]
  4010d4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4010d8:	add	x0, x0, #0x0
  4010dc:	cmp	x1, x0
  4010e0:	b.eq	40111c <deregister_tm_clones+0x68>  // b.none
  4010e4:	adrp	x0, 402000 <generate+0x890>
  4010e8:	add	x0, x0, #0x478
  4010ec:	ldr	x0, [x0]
  4010f0:	str	x0, [sp, #16]
  4010f4:	ldr	x0, [sp, #16]
  4010f8:	str	x0, [sp, #16]
  4010fc:	ldr	x0, [sp, #16]
  401100:	cmp	x0, #0x0
  401104:	b.eq	401120 <deregister_tm_clones+0x6c>  // b.none
  401108:	ldr	x1, [sp, #16]
  40110c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401110:	add	x0, x0, #0x0
  401114:	blr	x1
  401118:	b	401120 <deregister_tm_clones+0x6c>
  40111c:	nop
  401120:	ldp	x29, x30, [sp], #32
  401124:	ret

0000000000401128 <register_tm_clones>:
  401128:	stp	x29, x30, [sp, #-48]!
  40112c:	mov	x29, sp
  401130:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401134:	add	x0, x0, #0x0
  401138:	str	x0, [sp, #40]
  40113c:	ldr	x0, [sp, #40]
  401140:	str	x0, [sp, #40]
  401144:	ldr	x1, [sp, #40]
  401148:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40114c:	add	x0, x0, #0x0
  401150:	sub	x0, x1, x0
  401154:	asr	x0, x0, #3
  401158:	lsr	x1, x0, #63
  40115c:	add	x0, x1, x0
  401160:	asr	x0, x0, #1
  401164:	str	x0, [sp, #32]
  401168:	ldr	x0, [sp, #32]
  40116c:	cmp	x0, #0x0
  401170:	b.eq	4011b0 <register_tm_clones+0x88>  // b.none
  401174:	adrp	x0, 402000 <generate+0x890>
  401178:	add	x0, x0, #0x480
  40117c:	ldr	x0, [x0]
  401180:	str	x0, [sp, #24]
  401184:	ldr	x0, [sp, #24]
  401188:	str	x0, [sp, #24]
  40118c:	ldr	x0, [sp, #24]
  401190:	cmp	x0, #0x0
  401194:	b.eq	4011b4 <register_tm_clones+0x8c>  // b.none
  401198:	ldr	x2, [sp, #24]
  40119c:	ldr	x1, [sp, #32]
  4011a0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4011a4:	add	x0, x0, #0x0
  4011a8:	blr	x2
  4011ac:	b	4011b4 <register_tm_clones+0x8c>
  4011b0:	nop
  4011b4:	ldp	x29, x30, [sp], #48
  4011b8:	ret

00000000004011bc <__do_global_dtors_aux>:
  4011bc:	stp	x29, x30, [sp, #-16]!
  4011c0:	mov	x29, sp
  4011c4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4011c8:	add	x0, x0, #0xc
  4011cc:	ldrb	w0, [x0]
  4011d0:	and	x0, x0, #0xff
  4011d4:	cmp	x0, #0x0
  4011d8:	b.ne	4011f4 <__do_global_dtors_aux+0x38>  // b.any
  4011dc:	bl	4010b4 <deregister_tm_clones>
  4011e0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4011e4:	add	x0, x0, #0xc
  4011e8:	mov	w1, #0x1                   	// #1
  4011ec:	strb	w1, [x0]
  4011f0:	b	4011f8 <__do_global_dtors_aux+0x3c>
  4011f4:	nop
  4011f8:	ldp	x29, x30, [sp], #16
  4011fc:	ret

0000000000401200 <frame_dummy>:
  401200:	stp	x29, x30, [sp, #-16]!
  401204:	mov	x29, sp
  401208:	bl	401128 <register_tm_clones>
  40120c:	nop
  401210:	ldp	x29, x30, [sp], #16
  401214:	ret

0000000000401218 <ALIGN_TO>:
  401218:	sub	sp, sp, #0x10
  40121c:	str	x0, [sp, #8]
  401220:	str	x1, [sp]
  401224:	ldr	x1, [sp, #8]
  401228:	ldr	x0, [sp]
  40122c:	add	x0, x1, x0
  401230:	sub	x1, x0, #0x1
  401234:	ldr	x0, [sp]
  401238:	neg	x0, x0
  40123c:	and	x0, x1, x0
  401240:	add	sp, sp, #0x10
  401244:	ret

0000000000401248 <freep>:
  401248:	stp	x29, x30, [sp, #-32]!
  40124c:	mov	x29, sp
  401250:	str	x0, [sp, #24]
  401254:	ldr	x0, [sp, #24]
  401258:	ldr	x0, [x0]
  40125c:	bl	400fd0 <free@plt>
  401260:	nop
  401264:	ldp	x29, x30, [sp], #32
  401268:	ret

000000000040126c <size_multiply_overflow>:
  40126c:	sub	sp, sp, #0x10
  401270:	str	x0, [sp, #8]
  401274:	str	x1, [sp]
  401278:	ldr	x0, [sp]
  40127c:	cmp	x0, #0x0
  401280:	cset	w0, ne  // ne = any
  401284:	and	w0, w0, #0xff
  401288:	and	x0, x0, #0xff
  40128c:	cmp	x0, #0x0
  401290:	b.eq	4012d4 <size_multiply_overflow+0x68>  // b.none
  401294:	mov	x2, #0x0                   	// #0
  401298:	ldr	x1, [sp, #8]
  40129c:	ldr	x0, [sp]
  4012a0:	umulh	x0, x1, x0
  4012a4:	cmp	x0, #0x0
  4012a8:	b.eq	4012b0 <size_multiply_overflow+0x44>  // b.none
  4012ac:	mov	x2, #0x1                   	// #1
  4012b0:	mov	x0, x2
  4012b4:	cmp	x0, #0x0
  4012b8:	cset	w0, ne  // ne = any
  4012bc:	and	w0, w0, #0xff
  4012c0:	and	x0, x0, #0xff
  4012c4:	cmp	x0, #0x0
  4012c8:	b.eq	4012d4 <size_multiply_overflow+0x68>  // b.none
  4012cc:	mov	w0, #0x1                   	// #1
  4012d0:	b	4012d8 <size_multiply_overflow+0x6c>
  4012d4:	mov	w0, #0x0                   	// #0
  4012d8:	and	w0, w0, #0x1
  4012dc:	and	w0, w0, #0xff
  4012e0:	add	sp, sp, #0x10
  4012e4:	ret

00000000004012e8 <streq_ptr>:
  4012e8:	stp	x29, x30, [sp, #-32]!
  4012ec:	mov	x29, sp
  4012f0:	str	x0, [sp, #24]
  4012f4:	str	x1, [sp, #16]
  4012f8:	ldr	x1, [sp, #16]
  4012fc:	ldr	x0, [sp, #24]
  401300:	bl	400e70 <strcmp_ptr@plt>
  401304:	cmp	w0, #0x0
  401308:	cset	w0, eq  // eq = none
  40130c:	and	w0, w0, #0xff
  401310:	ldp	x29, x30, [sp], #32
  401314:	ret

0000000000401318 <fclosep>:
  401318:	stp	x29, x30, [sp, #-32]!
  40131c:	mov	x29, sp
  401320:	str	x0, [sp, #24]
  401324:	ldr	x0, [sp, #24]
  401328:	ldr	x0, [x0]
  40132c:	bl	400e60 <safe_fclose@plt>
  401330:	nop
  401334:	ldp	x29, x30, [sp], #32
  401338:	ret

000000000040133c <write_string_file>:
  40133c:	stp	x29, x30, [sp, #-48]!
  401340:	mov	x29, sp
  401344:	str	x0, [sp, #40]
  401348:	str	x1, [sp, #32]
  40134c:	str	w2, [sp, #28]
  401350:	mov	x3, #0x0                   	// #0
  401354:	ldr	w2, [sp, #28]
  401358:	ldr	x1, [sp, #32]
  40135c:	ldr	x0, [sp, #40]
  401360:	bl	400eb0 <write_string_file_ts@plt>
  401364:	ldp	x29, x30, [sp], #48
  401368:	ret

000000000040136c <save_argc_argv>:
  40136c:	sub	sp, sp, #0x10
  401370:	str	w0, [sp, #12]
  401374:	str	x1, [sp]
  401378:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40137c:	add	x0, x0, #0x8
  401380:	ldr	w1, [sp, #12]
  401384:	str	w1, [x0]
  401388:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40138c:	add	x0, x0, #0x0
  401390:	ldr	x1, [sp]
  401394:	str	x1, [x0]
  401398:	nop
  40139c:	add	sp, sp, #0x10
  4013a0:	ret

00000000004013a4 <static_destruct>:
  4013a4:	stp	x29, x30, [sp, #-32]!
  4013a8:	mov	x29, sp
  4013ac:	adrp	x0, 402000 <generate+0x890>
  4013b0:	add	x0, x0, #0x978
  4013b4:	ldr	x0, [x0]
  4013b8:	cmp	x0, #0x0
  4013bc:	b.eq	401420 <static_destruct+0x7c>  // b.none
  4013c0:	adrp	x0, 402000 <generate+0x890>
  4013c4:	add	x0, x0, #0x978
  4013c8:	ldr	x0, [x0]
  4013cc:	mov	x1, #0x8                   	// #8
  4013d0:	bl	401218 <ALIGN_TO>
  4013d4:	str	x0, [sp, #24]
  4013d8:	b	401404 <static_destruct+0x60>
  4013dc:	ldr	x0, [sp, #24]
  4013e0:	ldr	x1, [x0, #8]
  4013e4:	ldr	x0, [sp, #24]
  4013e8:	ldr	x0, [x0]
  4013ec:	blr	x1
  4013f0:	ldr	x0, [sp, #24]
  4013f4:	add	x0, x0, #0x10
  4013f8:	mov	x1, #0x8                   	// #8
  4013fc:	bl	401218 <ALIGN_TO>
  401400:	str	x0, [sp, #24]
  401404:	ldr	x1, [sp, #24]
  401408:	adrp	x0, 402000 <generate+0x890>
  40140c:	add	x0, x0, #0x980
  401410:	ldr	x0, [x0]
  401414:	cmp	x1, x0
  401418:	b.cc	4013dc <static_destruct+0x38>  // b.lo, b.ul, b.last
  40141c:	b	401424 <static_destruct+0x80>
  401420:	nop
  401424:	ldp	x29, x30, [sp], #32
  401428:	ret

000000000040142c <proc_cmdline_value_missing>:
  40142c:	stp	x29, x30, [sp, #-48]!
  401430:	mov	x29, sp
  401434:	str	x0, [sp, #24]
  401438:	str	x1, [sp, #16]
  40143c:	ldr	x0, [sp, #16]
  401440:	cmp	x0, #0x0
  401444:	b.ne	4014c8 <proc_cmdline_value_missing+0x9c>  // b.any
  401448:	mov	w0, #0x4                   	// #4
  40144c:	str	w0, [sp, #36]
  401450:	str	wzr, [sp, #40]
  401454:	str	wzr, [sp, #44]
  401458:	ldr	w0, [sp, #44]
  40145c:	bl	401040 <log_get_max_level_realm@plt>
  401460:	mov	w1, w0
  401464:	ldr	w0, [sp, #36]
  401468:	and	w0, w0, #0x7
  40146c:	cmp	w1, w0
  401470:	b.lt	4014b8 <proc_cmdline_value_missing+0x8c>  // b.tstop
  401474:	ldr	w0, [sp, #44]
  401478:	lsl	w1, w0, #10
  40147c:	ldr	w0, [sp, #36]
  401480:	orr	w7, w1, w0
  401484:	adrp	x0, 402000 <generate+0x890>
  401488:	add	x1, x0, #0x48b
  40148c:	ldr	x6, [sp, #24]
  401490:	adrp	x0, 402000 <generate+0x890>
  401494:	add	x5, x0, #0x4a8
  401498:	adrp	x0, 402000 <generate+0x890>
  40149c:	add	x4, x0, #0x990
  4014a0:	mov	w3, #0x21                  	// #33
  4014a4:	mov	x2, x1
  4014a8:	ldr	w1, [sp, #40]
  4014ac:	mov	w0, w7
  4014b0:	bl	400fb0 <log_internal_realm@plt>
  4014b4:	b	4014c0 <proc_cmdline_value_missing+0x94>
  4014b8:	ldr	w0, [sp, #40]
  4014bc:	cmp	w0, #0x0
  4014c0:	mov	w0, #0x1                   	// #1
  4014c4:	b	4014cc <proc_cmdline_value_missing+0xa0>
  4014c8:	mov	w0, #0x0                   	// #0
  4014cc:	ldp	x29, x30, [sp], #48
  4014d0:	ret

00000000004014d4 <specifier_escape>:
  4014d4:	stp	x29, x30, [sp, #-32]!
  4014d8:	mov	x29, sp
  4014dc:	str	x0, [sp, #24]
  4014e0:	adrp	x0, 402000 <generate+0x890>
  4014e4:	add	x2, x0, #0x4e8
  4014e8:	adrp	x0, 402000 <generate+0x890>
  4014ec:	add	x1, x0, #0x4f0
  4014f0:	ldr	x0, [sp, #24]
  4014f4:	bl	400f40 <strreplace@plt>
  4014f8:	ldp	x29, x30, [sp], #32
  4014fc:	ret

0000000000401500 <strv_freep>:
  401500:	stp	x29, x30, [sp, #-32]!
  401504:	mov	x29, sp
  401508:	str	x0, [sp, #24]
  40150c:	ldr	x0, [sp, #24]
  401510:	ldr	x0, [x0]
  401514:	cmp	x0, #0x0
  401518:	b.eq	401528 <strv_freep+0x28>  // b.none
  40151c:	ldr	x0, [sp, #24]
  401520:	ldr	x0, [x0]
  401524:	bl	400f60 <strv_free@plt>
  401528:	nop
  40152c:	ldp	x29, x30, [sp], #32
  401530:	ret

0000000000401534 <strv_isempty>:
  401534:	sub	sp, sp, #0x10
  401538:	str	x0, [sp, #8]
  40153c:	ldr	x0, [sp, #8]
  401540:	cmp	x0, #0x0
  401544:	b.eq	401558 <strv_isempty+0x24>  // b.none
  401548:	ldr	x0, [sp, #8]
  40154c:	ldr	x0, [x0]
  401550:	cmp	x0, #0x0
  401554:	b.ne	401560 <strv_isempty+0x2c>  // b.any
  401558:	mov	w0, #0x1                   	// #1
  40155c:	b	401564 <strv_isempty+0x30>
  401560:	mov	w0, #0x0                   	// #0
  401564:	and	w0, w0, #0x1
  401568:	and	w0, w0, #0xff
  40156c:	add	sp, sp, #0x10
  401570:	ret

0000000000401574 <__unique_prefix_static_destructor_wrapper0>:
  401574:	stp	x29, x30, [sp, #-48]!
  401578:	mov	x29, sp
  40157c:	str	x0, [sp, #24]
  401580:	ldr	x0, [sp, #24]
  401584:	str	x0, [sp, #40]
  401588:	ldr	x0, [sp, #40]
  40158c:	bl	401500 <strv_freep>
  401590:	nop
  401594:	ldp	x29, x30, [sp], #48
  401598:	ret

000000000040159c <__unique_prefix_static_destructor_wrapper1>:
  40159c:	stp	x29, x30, [sp, #-48]!
  4015a0:	mov	x29, sp
  4015a4:	str	x0, [sp, #24]
  4015a8:	ldr	x0, [sp, #24]
  4015ac:	str	x0, [sp, #40]
  4015b0:	ldr	x0, [sp, #40]
  4015b4:	bl	401248 <freep>
  4015b8:	nop
  4015bc:	ldp	x29, x30, [sp], #48
  4015c0:	ret

00000000004015c4 <__unique_prefix_static_destructor_wrapper2>:
  4015c4:	stp	x29, x30, [sp, #-48]!
  4015c8:	mov	x29, sp
  4015cc:	str	x0, [sp, #24]
  4015d0:	ldr	x0, [sp, #24]
  4015d4:	str	x0, [sp, #40]
  4015d8:	ldr	x0, [sp, #40]
  4015dc:	bl	401248 <freep>
  4015e0:	nop
  4015e4:	ldp	x29, x30, [sp], #48
  4015e8:	ret

00000000004015ec <parse>:
  4015ec:	stp	x29, x30, [sp, #-64]!
  4015f0:	mov	x29, sp
  4015f4:	str	x0, [sp, #40]
  4015f8:	str	x1, [sp, #32]
  4015fc:	str	x2, [sp, #24]
  401600:	adrp	x0, 402000 <generate+0x890>
  401604:	add	x1, x0, #0x4f8
  401608:	ldr	x0, [sp, #40]
  40160c:	bl	400ee0 <proc_cmdline_key_streq@plt>
  401610:	and	w0, w0, #0xff
  401614:	cmp	w0, #0x0
  401618:	b.eq	40167c <parse+0x90>  // b.none
  40161c:	ldr	x1, [sp, #32]
  401620:	ldr	x0, [sp, #40]
  401624:	bl	40142c <proc_cmdline_value_missing>
  401628:	and	w0, w0, #0xff
  40162c:	cmp	w0, #0x0
  401630:	b.eq	40163c <parse+0x50>  // b.none
  401634:	mov	w0, #0x0                   	// #0
  401638:	b	401768 <parse+0x17c>
  40163c:	ldr	x1, [sp, #32]
  401640:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401644:	add	x0, x0, #0x18
  401648:	bl	400f70 <strv_extend@plt>
  40164c:	str	w0, [sp, #60]
  401650:	ldr	w0, [sp, #60]
  401654:	cmp	w0, #0x0
  401658:	b.ge	401764 <parse+0x178>  // b.tcont
  40165c:	adrp	x0, 402000 <generate+0x890>
  401660:	add	x1, x0, #0x50b
  401664:	adrp	x0, 402000 <generate+0x890>
  401668:	add	x3, x0, #0x988
  40166c:	mov	w2, #0x22                  	// #34
  401670:	mov	w0, #0x0                   	// #0
  401674:	bl	401020 <log_oom_internal@plt>
  401678:	b	401768 <parse+0x17c>
  40167c:	adrp	x0, 402000 <generate+0x890>
  401680:	add	x1, x0, #0x530
  401684:	ldr	x0, [sp, #40]
  401688:	bl	400ee0 <proc_cmdline_key_streq@plt>
  40168c:	and	w0, w0, #0xff
  401690:	cmp	w0, #0x0
  401694:	b.eq	4016f0 <parse+0x104>  // b.none
  401698:	ldr	x1, [sp, #32]
  40169c:	ldr	x0, [sp, #40]
  4016a0:	bl	40142c <proc_cmdline_value_missing>
  4016a4:	and	w0, w0, #0xff
  4016a8:	cmp	w0, #0x0
  4016ac:	b.eq	4016b8 <parse+0xcc>  // b.none
  4016b0:	mov	w0, #0x0                   	// #0
  4016b4:	b	401768 <parse+0x17c>
  4016b8:	ldr	x1, [sp, #32]
  4016bc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4016c0:	add	x0, x0, #0x20
  4016c4:	bl	400ed0 <free_and_strdup@plt>
  4016c8:	cmp	w0, #0x0
  4016cc:	b.ge	401764 <parse+0x178>  // b.tcont
  4016d0:	adrp	x0, 402000 <generate+0x890>
  4016d4:	add	x1, x0, #0x50b
  4016d8:	adrp	x0, 402000 <generate+0x890>
  4016dc:	add	x3, x0, #0x988
  4016e0:	mov	w2, #0x2a                  	// #42
  4016e4:	mov	w0, #0x0                   	// #0
  4016e8:	bl	401020 <log_oom_internal@plt>
  4016ec:	b	401768 <parse+0x17c>
  4016f0:	adrp	x0, 402000 <generate+0x890>
  4016f4:	add	x1, x0, #0x550
  4016f8:	ldr	x0, [sp, #40]
  4016fc:	bl	400ee0 <proc_cmdline_key_streq@plt>
  401700:	and	w0, w0, #0xff
  401704:	cmp	w0, #0x0
  401708:	b.eq	401764 <parse+0x178>  // b.none
  40170c:	ldr	x1, [sp, #32]
  401710:	ldr	x0, [sp, #40]
  401714:	bl	40142c <proc_cmdline_value_missing>
  401718:	and	w0, w0, #0xff
  40171c:	cmp	w0, #0x0
  401720:	b.eq	40172c <parse+0x140>  // b.none
  401724:	mov	w0, #0x0                   	// #0
  401728:	b	401768 <parse+0x17c>
  40172c:	ldr	x1, [sp, #32]
  401730:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401734:	add	x0, x0, #0x28
  401738:	bl	400ed0 <free_and_strdup@plt>
  40173c:	cmp	w0, #0x0
  401740:	b.ge	401764 <parse+0x178>  // b.tcont
  401744:	adrp	x0, 402000 <generate+0x890>
  401748:	add	x1, x0, #0x50b
  40174c:	adrp	x0, 402000 <generate+0x890>
  401750:	add	x3, x0, #0x988
  401754:	mov	w2, #0x32                  	// #50
  401758:	mov	w0, #0x0                   	// #0
  40175c:	bl	401020 <log_oom_internal@plt>
  401760:	b	401768 <parse+0x17c>
  401764:	mov	w0, #0x0                   	// #0
  401768:	ldp	x29, x30, [sp], #64
  40176c:	ret

0000000000401770 <generate>:
  401770:	stp	x29, x30, [sp, #-272]!
  401774:	mov	x29, sp
  401778:	stp	x19, x20, [sp, #16]
  40177c:	adrp	x0, 413000 <__FRAME_END__+0x101e0>
  401780:	add	x0, x0, #0xca8
  401784:	ldr	x1, [x0]
  401788:	str	x1, [x29, #264]
  40178c:	mov	x1, #0x0                   	// #0
  401790:	str	xzr, [x29, #96]
  401794:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401798:	add	x0, x0, #0x18
  40179c:	ldr	x0, [x0]
  4017a0:	bl	401534 <strv_isempty>
  4017a4:	and	w0, w0, #0xff
  4017a8:	cmp	w0, #0x0
  4017ac:	b.eq	4017cc <generate+0x5c>  // b.none
  4017b0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4017b4:	add	x0, x0, #0x20
  4017b8:	ldr	x0, [x0]
  4017bc:	cmp	x0, #0x0
  4017c0:	b.ne	4017cc <generate+0x5c>  // b.any
  4017c4:	mov	w19, #0x0                   	// #0
  4017c8:	b	402138 <generate+0x9c8>
  4017cc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4017d0:	add	x0, x0, #0x10
  4017d4:	ldr	x0, [x0]
  4017d8:	str	x0, [x29, #248]
  4017dc:	adrp	x0, 402000 <generate+0x890>
  4017e0:	add	x0, x0, #0x570
  4017e4:	str	x0, [x29, #256]
  4017e8:	str	xzr, [x29, #128]
  4017ec:	str	xzr, [x29, #136]
  4017f0:	b	401824 <generate+0xb4>
  4017f4:	ldr	x0, [x29, #136]
  4017f8:	lsl	x0, x0, #3
  4017fc:	add	x1, x29, #0xf8
  401800:	ldr	x0, [x1, x0]
  401804:	bl	401000 <strlen@plt>
  401808:	mov	x1, x0
  40180c:	ldr	x0, [x29, #128]
  401810:	add	x0, x0, x1
  401814:	str	x0, [x29, #128]
  401818:	ldr	x0, [x29, #136]
  40181c:	add	x0, x0, #0x1
  401820:	str	x0, [x29, #136]
  401824:	ldr	x0, [x29, #136]
  401828:	cmp	x0, #0x1
  40182c:	b.hi	401848 <generate+0xd8>  // b.pmore
  401830:	ldr	x0, [x29, #136]
  401834:	lsl	x0, x0, #3
  401838:	add	x1, x29, #0xf8
  40183c:	ldr	x0, [x1, x0]
  401840:	cmp	x0, #0x0
  401844:	b.ne	4017f4 <generate+0x84>  // b.any
  401848:	ldr	x0, [x29, #128]
  40184c:	add	x0, x0, #0x1
  401850:	str	x0, [x29, #192]
  401854:	ldr	x1, [x29, #192]
  401858:	mov	x0, #0x1                   	// #1
  40185c:	bl	40126c <size_multiply_overflow>
  401860:	and	w0, w0, #0xff
  401864:	and	x0, x0, #0xff
  401868:	cmp	x0, #0x0
  40186c:	b.eq	401898 <generate+0x128>  // b.none
  401870:	adrp	x0, 402000 <generate+0x890>
  401874:	add	x1, x0, #0x50b
  401878:	adrp	x0, 402000 <generate+0x890>
  40187c:	add	x4, x0, #0x9b0
  401880:	mov	w3, #0x41                  	// #65
  401884:	mov	x2, x1
  401888:	adrp	x0, 402000 <generate+0x890>
  40188c:	add	x1, x0, #0x590
  401890:	mov	w0, #0x0                   	// #0
  401894:	bl	400f10 <log_assert_failed_realm@plt>
  401898:	ldr	x0, [x29, #192]
  40189c:	cmp	x0, #0x400, lsl #12
  4018a0:	cset	w0, hi  // hi = pmore
  4018a4:	and	w0, w0, #0xff
  4018a8:	and	x0, x0, #0xff
  4018ac:	cmp	x0, #0x0
  4018b0:	b.eq	4018dc <generate+0x16c>  // b.none
  4018b4:	adrp	x0, 402000 <generate+0x890>
  4018b8:	add	x1, x0, #0x50b
  4018bc:	adrp	x0, 402000 <generate+0x890>
  4018c0:	add	x4, x0, #0x9b0
  4018c4:	mov	w3, #0x41                  	// #65
  4018c8:	mov	x2, x1
  4018cc:	adrp	x0, 402000 <generate+0x890>
  4018d0:	add	x1, x0, #0x5c0
  4018d4:	mov	w0, #0x0                   	// #0
  4018d8:	bl	400f10 <log_assert_failed_realm@plt>
  4018dc:	ldr	x0, [x29, #192]
  4018e0:	add	x0, x0, #0xf
  4018e4:	lsr	x0, x0, #4
  4018e8:	lsl	x0, x0, #4
  4018ec:	sub	sp, sp, x0
  4018f0:	mov	x0, sp
  4018f4:	add	x0, x0, #0xf
  4018f8:	lsr	x0, x0, #4
  4018fc:	lsl	x0, x0, #4
  401900:	str	x0, [x29, #200]
  401904:	ldr	x0, [x29, #200]
  401908:	str	x0, [x29, #120]
  40190c:	str	xzr, [x29, #136]
  401910:	b	401940 <generate+0x1d0>
  401914:	ldr	x0, [x29, #136]
  401918:	lsl	x0, x0, #3
  40191c:	add	x1, x29, #0xf8
  401920:	ldr	x0, [x1, x0]
  401924:	mov	x1, x0
  401928:	ldr	x0, [x29, #120]
  40192c:	bl	400e80 <stpcpy@plt>
  401930:	str	x0, [x29, #120]
  401934:	ldr	x0, [x29, #136]
  401938:	add	x0, x0, #0x1
  40193c:	str	x0, [x29, #136]
  401940:	ldr	x0, [x29, #136]
  401944:	cmp	x0, #0x1
  401948:	b.hi	401964 <generate+0x1f4>  // b.pmore
  40194c:	ldr	x0, [x29, #136]
  401950:	lsl	x0, x0, #3
  401954:	add	x1, x29, #0xf8
  401958:	ldr	x0, [x1, x0]
  40195c:	cmp	x0, #0x0
  401960:	b.ne	401914 <generate+0x1a4>  // b.any
  401964:	ldr	x0, [x29, #120]
  401968:	strb	wzr, [x0]
  40196c:	ldr	x0, [x29, #200]
  401970:	str	x0, [x29, #208]
  401974:	adrp	x0, 402000 <generate+0x890>
  401978:	add	x1, x0, #0x5e0
  40197c:	ldr	x0, [x29, #208]
  401980:	bl	401010 <fopen64@plt>
  401984:	str	x0, [x29, #96]
  401988:	ldr	x0, [x29, #96]
  40198c:	cmp	x0, #0x0
  401990:	b.ne	401a28 <generate+0x2b8>  // b.any
  401994:	mov	w0, #0x3                   	// #3
  401998:	str	w0, [x29, #84]
  40199c:	bl	400f50 <__errno_location@plt>
  4019a0:	ldr	w0, [x0]
  4019a4:	str	w0, [x29, #88]
  4019a8:	str	wzr, [x29, #92]
  4019ac:	ldr	w0, [x29, #92]
  4019b0:	bl	401040 <log_get_max_level_realm@plt>
  4019b4:	mov	w1, w0
  4019b8:	ldr	w0, [x29, #84]
  4019bc:	and	w0, w0, #0x7
  4019c0:	cmp	w1, w0
  4019c4:	b.lt	401a10 <generate+0x2a0>  // b.tstop
  4019c8:	ldr	w0, [x29, #92]
  4019cc:	lsl	w1, w0, #10
  4019d0:	ldr	w0, [x29, #84]
  4019d4:	orr	w7, w1, w0
  4019d8:	adrp	x0, 402000 <generate+0x890>
  4019dc:	add	x1, x0, #0x50b
  4019e0:	ldr	x6, [x29, #208]
  4019e4:	adrp	x0, 402000 <generate+0x890>
  4019e8:	add	x5, x0, #0x5e8
  4019ec:	adrp	x0, 402000 <generate+0x890>
  4019f0:	add	x4, x0, #0x9c0
  4019f4:	mov	w3, #0x44                  	// #68
  4019f8:	mov	x2, x1
  4019fc:	ldr	w1, [x29, #88]
  401a00:	mov	w0, w7
  401a04:	bl	400fb0 <log_internal_realm@plt>
  401a08:	mov	w19, w0
  401a0c:	b	402138 <generate+0x9c8>
  401a10:	ldr	w0, [x29, #88]
  401a14:	cmp	w0, #0x0
  401a18:	cneg	w0, w0, lt  // lt = tstop
  401a1c:	and	w0, w0, #0xff
  401a20:	neg	w19, w0
  401a24:	b	402138 <generate+0x9c8>
  401a28:	ldr	x0, [x29, #96]
  401a2c:	mov	x3, x0
  401a30:	mov	x2, #0xac                  	// #172
  401a34:	mov	x1, #0x1                   	// #1
  401a38:	adrp	x0, 402000 <generate+0x890>
  401a3c:	add	x0, x0, #0x610
  401a40:	bl	400fe0 <fwrite@plt>
  401a44:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401a48:	add	x0, x0, #0x20
  401a4c:	ldr	x2, [x0]
  401a50:	adrp	x0, 402000 <generate+0x890>
  401a54:	add	x1, x0, #0x6c0
  401a58:	mov	x0, x2
  401a5c:	bl	4012e8 <streq_ptr>
  401a60:	and	w0, w0, #0xff
  401a64:	eor	w0, w0, #0x1
  401a68:	and	w0, w0, #0xff
  401a6c:	cmp	w0, #0x0
  401a70:	b.eq	401aa8 <generate+0x338>  // b.none
  401a74:	ldr	x3, [x29, #96]
  401a78:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401a7c:	add	x0, x0, #0x20
  401a80:	ldr	x0, [x0]
  401a84:	cmp	x0, #0x0
  401a88:	b.ne	401a94 <generate+0x324>  // b.any
  401a8c:	adrp	x0, 402000 <generate+0x890>
  401a90:	add	x0, x0, #0x6c8
  401a94:	mov	x2, x0
  401a98:	adrp	x0, 402000 <generate+0x890>
  401a9c:	add	x1, x0, #0x6d0
  401aa0:	mov	x0, x3
  401aa4:	bl	400ef0 <fprintf@plt>
  401aa8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401aac:	add	x0, x0, #0x28
  401ab0:	ldr	x2, [x0]
  401ab4:	adrp	x0, 402000 <generate+0x890>
  401ab8:	add	x1, x0, #0x6c0
  401abc:	mov	x0, x2
  401ac0:	bl	4012e8 <streq_ptr>
  401ac4:	and	w0, w0, #0xff
  401ac8:	eor	w0, w0, #0x1
  401acc:	and	w0, w0, #0xff
  401ad0:	cmp	w0, #0x0
  401ad4:	b.eq	401b0c <generate+0x39c>  // b.none
  401ad8:	ldr	x3, [x29, #96]
  401adc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401ae0:	add	x0, x0, #0x28
  401ae4:	ldr	x0, [x0]
  401ae8:	cmp	x0, #0x0
  401aec:	b.ne	401af8 <generate+0x388>  // b.any
  401af0:	adrp	x0, 402000 <generate+0x890>
  401af4:	add	x0, x0, #0x6c8
  401af8:	mov	x2, x0
  401afc:	adrp	x0, 402000 <generate+0x890>
  401b00:	add	x1, x0, #0x6e8
  401b04:	mov	x0, x3
  401b08:	bl	400ef0 <fprintf@plt>
  401b0c:	ldr	x0, [x29, #96]
  401b10:	mov	x3, x0
  401b14:	mov	x2, #0x37                  	// #55
  401b18:	mov	x1, #0x1                   	// #1
  401b1c:	adrp	x0, 402000 <generate+0x890>
  401b20:	add	x0, x0, #0x700
  401b24:	bl	400fe0 <fwrite@plt>
  401b28:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401b2c:	add	x0, x0, #0x18
  401b30:	ldr	x0, [x0]
  401b34:	str	x0, [x29, #112]
  401b38:	b	401bc0 <generate+0x450>
  401b3c:	str	xzr, [x29, #104]
  401b40:	ldr	x0, [x29, #112]
  401b44:	ldr	x0, [x0]
  401b48:	bl	4014d4 <specifier_escape>
  401b4c:	str	x0, [x29, #104]
  401b50:	ldr	x0, [x29, #104]
  401b54:	cmp	x0, #0x0
  401b58:	b.ne	401b84 <generate+0x414>  // b.any
  401b5c:	adrp	x0, 402000 <generate+0x890>
  401b60:	add	x1, x0, #0x50b
  401b64:	adrp	x0, 402000 <generate+0x890>
  401b68:	add	x3, x0, #0x9c0
  401b6c:	mov	w2, #0x5e                  	// #94
  401b70:	mov	w0, #0x0                   	// #0
  401b74:	bl	401020 <log_oom_internal@plt>
  401b78:	mov	w19, w0
  401b7c:	mov	w20, #0x0                   	// #0
  401b80:	b	401ba4 <generate+0x434>
  401b84:	ldr	x3, [x29, #96]
  401b88:	ldr	x0, [x29, #104]
  401b8c:	mov	x2, x0
  401b90:	adrp	x0, 402000 <generate+0x890>
  401b94:	add	x1, x0, #0x738
  401b98:	mov	x0, x3
  401b9c:	bl	400ef0 <fprintf@plt>
  401ba0:	mov	w20, #0x1                   	// #1
  401ba4:	add	x0, x29, #0x68
  401ba8:	bl	401248 <freep>
  401bac:	cmp	w20, #0x1
  401bb0:	b.ne	402138 <generate+0x9c8>  // b.any
  401bb4:	ldr	x0, [x29, #112]
  401bb8:	add	x0, x0, #0x8
  401bbc:	str	x0, [x29, #112]
  401bc0:	ldr	x0, [x29, #112]
  401bc4:	cmp	x0, #0x0
  401bc8:	b.eq	401bdc <generate+0x46c>  // b.none
  401bcc:	ldr	x0, [x29, #112]
  401bd0:	ldr	x0, [x0]
  401bd4:	cmp	x0, #0x0
  401bd8:	b.ne	401b3c <generate+0x3cc>  // b.any
  401bdc:	ldr	x0, [x29, #96]
  401be0:	bl	401030 <fflush_and_check@plt>
  401be4:	str	w0, [x29, #44]
  401be8:	ldr	w0, [x29, #44]
  401bec:	cmp	w0, #0x0
  401bf0:	b.ge	401c84 <generate+0x514>  // b.tcont
  401bf4:	mov	w0, #0x3                   	// #3
  401bf8:	str	w0, [x29, #72]
  401bfc:	ldr	w0, [x29, #44]
  401c00:	str	w0, [x29, #76]
  401c04:	str	wzr, [x29, #80]
  401c08:	ldr	w0, [x29, #80]
  401c0c:	bl	401040 <log_get_max_level_realm@plt>
  401c10:	mov	w1, w0
  401c14:	ldr	w0, [x29, #72]
  401c18:	and	w0, w0, #0x7
  401c1c:	cmp	w1, w0
  401c20:	b.lt	401c6c <generate+0x4fc>  // b.tstop
  401c24:	ldr	w0, [x29, #80]
  401c28:	lsl	w1, w0, #10
  401c2c:	ldr	w0, [x29, #72]
  401c30:	orr	w7, w1, w0
  401c34:	adrp	x0, 402000 <generate+0x890>
  401c38:	add	x1, x0, #0x50b
  401c3c:	ldr	x6, [x29, #208]
  401c40:	adrp	x0, 402000 <generate+0x890>
  401c44:	add	x5, x0, #0x748
  401c48:	adrp	x0, 402000 <generate+0x890>
  401c4c:	add	x4, x0, #0x9c0
  401c50:	mov	w3, #0x65                  	// #101
  401c54:	mov	x2, x1
  401c58:	ldr	w1, [x29, #76]
  401c5c:	mov	w0, w7
  401c60:	bl	400fb0 <log_internal_realm@plt>
  401c64:	mov	w19, w0
  401c68:	b	402138 <generate+0x9c8>
  401c6c:	ldr	w0, [x29, #76]
  401c70:	cmp	w0, #0x0
  401c74:	cneg	w0, w0, lt  // lt = tstop
  401c78:	and	w0, w0, #0xff
  401c7c:	neg	w19, w0
  401c80:	b	402138 <generate+0x9c8>
  401c84:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401c88:	add	x0, x0, #0x10
  401c8c:	ldr	x0, [x0]
  401c90:	str	x0, [x29, #248]
  401c94:	adrp	x0, 402000 <generate+0x890>
  401c98:	add	x0, x0, #0x770
  401c9c:	str	x0, [x29, #256]
  401ca0:	str	xzr, [x29, #152]
  401ca4:	str	xzr, [x29, #160]
  401ca8:	b	401cdc <generate+0x56c>
  401cac:	ldr	x0, [x29, #160]
  401cb0:	lsl	x0, x0, #3
  401cb4:	add	x1, x29, #0xf8
  401cb8:	ldr	x0, [x1, x0]
  401cbc:	bl	401000 <strlen@plt>
  401cc0:	mov	x1, x0
  401cc4:	ldr	x0, [x29, #152]
  401cc8:	add	x0, x0, x1
  401ccc:	str	x0, [x29, #152]
  401cd0:	ldr	x0, [x29, #160]
  401cd4:	add	x0, x0, #0x1
  401cd8:	str	x0, [x29, #160]
  401cdc:	ldr	x0, [x29, #160]
  401ce0:	cmp	x0, #0x1
  401ce4:	b.hi	401d00 <generate+0x590>  // b.pmore
  401ce8:	ldr	x0, [x29, #160]
  401cec:	lsl	x0, x0, #3
  401cf0:	add	x1, x29, #0xf8
  401cf4:	ldr	x0, [x1, x0]
  401cf8:	cmp	x0, #0x0
  401cfc:	b.ne	401cac <generate+0x53c>  // b.any
  401d00:	ldr	x0, [x29, #152]
  401d04:	add	x0, x0, #0x1
  401d08:	str	x0, [x29, #216]
  401d0c:	ldr	x1, [x29, #216]
  401d10:	mov	x0, #0x1                   	// #1
  401d14:	bl	40126c <size_multiply_overflow>
  401d18:	and	w0, w0, #0xff
  401d1c:	and	x0, x0, #0xff
  401d20:	cmp	x0, #0x0
  401d24:	b.eq	401d50 <generate+0x5e0>  // b.none
  401d28:	adrp	x0, 402000 <generate+0x890>
  401d2c:	add	x1, x0, #0x50b
  401d30:	adrp	x0, 402000 <generate+0x890>
  401d34:	add	x4, x0, #0x9b0
  401d38:	mov	w3, #0x68                  	// #104
  401d3c:	mov	x2, x1
  401d40:	adrp	x0, 402000 <generate+0x890>
  401d44:	add	x1, x0, #0x590
  401d48:	mov	w0, #0x0                   	// #0
  401d4c:	bl	400f10 <log_assert_failed_realm@plt>
  401d50:	ldr	x0, [x29, #216]
  401d54:	cmp	x0, #0x400, lsl #12
  401d58:	cset	w0, hi  // hi = pmore
  401d5c:	and	w0, w0, #0xff
  401d60:	and	x0, x0, #0xff
  401d64:	cmp	x0, #0x0
  401d68:	b.eq	401d94 <generate+0x624>  // b.none
  401d6c:	adrp	x0, 402000 <generate+0x890>
  401d70:	add	x1, x0, #0x50b
  401d74:	adrp	x0, 402000 <generate+0x890>
  401d78:	add	x4, x0, #0x9b0
  401d7c:	mov	w3, #0x68                  	// #104
  401d80:	mov	x2, x1
  401d84:	adrp	x0, 402000 <generate+0x890>
  401d88:	add	x1, x0, #0x5c0
  401d8c:	mov	w0, #0x0                   	// #0
  401d90:	bl	400f10 <log_assert_failed_realm@plt>
  401d94:	ldr	x0, [x29, #216]
  401d98:	add	x0, x0, #0xf
  401d9c:	lsr	x0, x0, #4
  401da0:	lsl	x0, x0, #4
  401da4:	sub	sp, sp, x0
  401da8:	mov	x0, sp
  401dac:	add	x0, x0, #0xf
  401db0:	lsr	x0, x0, #4
  401db4:	lsl	x0, x0, #4
  401db8:	str	x0, [x29, #224]
  401dbc:	ldr	x0, [x29, #224]
  401dc0:	str	x0, [x29, #144]
  401dc4:	str	xzr, [x29, #160]
  401dc8:	b	401df8 <generate+0x688>
  401dcc:	ldr	x0, [x29, #160]
  401dd0:	lsl	x0, x0, #3
  401dd4:	add	x1, x29, #0xf8
  401dd8:	ldr	x0, [x1, x0]
  401ddc:	mov	x1, x0
  401de0:	ldr	x0, [x29, #144]
  401de4:	bl	400e80 <stpcpy@plt>
  401de8:	str	x0, [x29, #144]
  401dec:	ldr	x0, [x29, #160]
  401df0:	add	x0, x0, #0x1
  401df4:	str	x0, [x29, #160]
  401df8:	ldr	x0, [x29, #160]
  401dfc:	cmp	x0, #0x1
  401e00:	b.hi	401e1c <generate+0x6ac>  // b.pmore
  401e04:	ldr	x0, [x29, #160]
  401e08:	lsl	x0, x0, #3
  401e0c:	add	x1, x29, #0xf8
  401e10:	ldr	x0, [x1, x0]
  401e14:	cmp	x0, #0x0
  401e18:	b.ne	401dcc <generate+0x65c>  // b.any
  401e1c:	ldr	x0, [x29, #144]
  401e20:	strb	wzr, [x0]
  401e24:	ldr	x0, [x29, #224]
  401e28:	str	x0, [x29, #208]
  401e2c:	mov	w2, #0x41                  	// #65
  401e30:	adrp	x0, 402000 <generate+0x890>
  401e34:	add	x1, x0, #0x790
  401e38:	ldr	x0, [x29, #208]
  401e3c:	bl	40133c <write_string_file>
  401e40:	str	w0, [x29, #44]
  401e44:	ldr	w0, [x29, #44]
  401e48:	cmp	w0, #0x0
  401e4c:	b.ge	401ee0 <generate+0x770>  // b.tcont
  401e50:	mov	w0, #0x3                   	// #3
  401e54:	str	w0, [x29, #60]
  401e58:	ldr	w0, [x29, #44]
  401e5c:	str	w0, [x29, #64]
  401e60:	str	wzr, [x29, #68]
  401e64:	ldr	w0, [x29, #68]
  401e68:	bl	401040 <log_get_max_level_realm@plt>
  401e6c:	mov	w1, w0
  401e70:	ldr	w0, [x29, #60]
  401e74:	and	w0, w0, #0x7
  401e78:	cmp	w1, w0
  401e7c:	b.lt	401ec8 <generate+0x758>  // b.tstop
  401e80:	ldr	w0, [x29, #68]
  401e84:	lsl	w1, w0, #10
  401e88:	ldr	w0, [x29, #60]
  401e8c:	orr	w7, w1, w0
  401e90:	adrp	x0, 402000 <generate+0x890>
  401e94:	add	x1, x0, #0x50b
  401e98:	ldr	x6, [x29, #208]
  401e9c:	adrp	x0, 402000 <generate+0x890>
  401ea0:	add	x5, x0, #0x5e8
  401ea4:	adrp	x0, 402000 <generate+0x890>
  401ea8:	add	x4, x0, #0x9c0
  401eac:	mov	w3, #0x74                  	// #116
  401eb0:	mov	x2, x1
  401eb4:	ldr	w1, [x29, #64]
  401eb8:	mov	w0, w7
  401ebc:	bl	400fb0 <log_internal_realm@plt>
  401ec0:	mov	w19, w0
  401ec4:	b	402138 <generate+0x9c8>
  401ec8:	ldr	w0, [x29, #64]
  401ecc:	cmp	w0, #0x0
  401ed0:	cneg	w0, w0, lt  // lt = tstop
  401ed4:	and	w0, w0, #0xff
  401ed8:	neg	w19, w0
  401edc:	b	402138 <generate+0x9c8>
  401ee0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401ee4:	add	x0, x0, #0x10
  401ee8:	ldr	x0, [x0]
  401eec:	str	x0, [x29, #248]
  401ef0:	adrp	x0, 402000 <generate+0x890>
  401ef4:	add	x0, x0, #0x888
  401ef8:	str	x0, [x29, #256]
  401efc:	str	xzr, [x29, #176]
  401f00:	str	xzr, [x29, #184]
  401f04:	b	401f38 <generate+0x7c8>
  401f08:	ldr	x0, [x29, #184]
  401f0c:	lsl	x0, x0, #3
  401f10:	add	x1, x29, #0xf8
  401f14:	ldr	x0, [x1, x0]
  401f18:	bl	401000 <strlen@plt>
  401f1c:	mov	x1, x0
  401f20:	ldr	x0, [x29, #176]
  401f24:	add	x0, x0, x1
  401f28:	str	x0, [x29, #176]
  401f2c:	ldr	x0, [x29, #184]
  401f30:	add	x0, x0, #0x1
  401f34:	str	x0, [x29, #184]
  401f38:	ldr	x0, [x29, #184]
  401f3c:	cmp	x0, #0x1
  401f40:	b.hi	401f5c <generate+0x7ec>  // b.pmore
  401f44:	ldr	x0, [x29, #184]
  401f48:	lsl	x0, x0, #3
  401f4c:	add	x1, x29, #0xf8
  401f50:	ldr	x0, [x1, x0]
  401f54:	cmp	x0, #0x0
  401f58:	b.ne	401f08 <generate+0x798>  // b.any
  401f5c:	ldr	x0, [x29, #176]
  401f60:	add	x0, x0, #0x1
  401f64:	str	x0, [x29, #232]
  401f68:	ldr	x1, [x29, #232]
  401f6c:	mov	x0, #0x1                   	// #1
  401f70:	bl	40126c <size_multiply_overflow>
  401f74:	and	w0, w0, #0xff
  401f78:	and	x0, x0, #0xff
  401f7c:	cmp	x0, #0x0
  401f80:	b.eq	401fac <generate+0x83c>  // b.none
  401f84:	adrp	x0, 402000 <generate+0x890>
  401f88:	add	x1, x0, #0x50b
  401f8c:	adrp	x0, 402000 <generate+0x890>
  401f90:	add	x4, x0, #0x9b0
  401f94:	mov	w3, #0x77                  	// #119
  401f98:	mov	x2, x1
  401f9c:	adrp	x0, 402000 <generate+0x890>
  401fa0:	add	x1, x0, #0x590
  401fa4:	mov	w0, #0x0                   	// #0
  401fa8:	bl	400f10 <log_assert_failed_realm@plt>
  401fac:	ldr	x0, [x29, #232]
  401fb0:	cmp	x0, #0x400, lsl #12
  401fb4:	cset	w0, hi  // hi = pmore
  401fb8:	and	w0, w0, #0xff
  401fbc:	and	x0, x0, #0xff
  401fc0:	cmp	x0, #0x0
  401fc4:	b.eq	401ff0 <generate+0x880>  // b.none
  401fc8:	adrp	x0, 402000 <generate+0x890>
  401fcc:	add	x1, x0, #0x50b
  401fd0:	adrp	x0, 402000 <generate+0x890>
  401fd4:	add	x4, x0, #0x9b0
  401fd8:	mov	w3, #0x77                  	// #119
  401fdc:	mov	x2, x1
  401fe0:	adrp	x0, 402000 <generate+0x890>
  401fe4:	add	x1, x0, #0x5c0
  401fe8:	mov	w0, #0x0                   	// #0
  401fec:	bl	400f10 <log_assert_failed_realm@plt>
  401ff0:	ldr	x0, [x29, #232]
  401ff4:	add	x0, x0, #0xf
  401ff8:	lsr	x0, x0, #4
  401ffc:	lsl	x0, x0, #4
  402000:	sub	sp, sp, x0
  402004:	mov	x0, sp
  402008:	add	x0, x0, #0xf
  40200c:	lsr	x0, x0, #4
  402010:	lsl	x0, x0, #4
  402014:	str	x0, [x29, #240]
  402018:	ldr	x0, [x29, #240]
  40201c:	str	x0, [x29, #168]
  402020:	str	xzr, [x29, #184]
  402024:	b	402054 <generate+0x8e4>
  402028:	ldr	x0, [x29, #184]
  40202c:	lsl	x0, x0, #3
  402030:	add	x1, x29, #0xf8
  402034:	ldr	x0, [x1, x0]
  402038:	mov	x1, x0
  40203c:	ldr	x0, [x29, #168]
  402040:	bl	400e80 <stpcpy@plt>
  402044:	str	x0, [x29, #168]
  402048:	ldr	x0, [x29, #184]
  40204c:	add	x0, x0, #0x1
  402050:	str	x0, [x29, #184]
  402054:	ldr	x0, [x29, #184]
  402058:	cmp	x0, #0x1
  40205c:	b.hi	402078 <generate+0x908>  // b.pmore
  402060:	ldr	x0, [x29, #184]
  402064:	lsl	x0, x0, #3
  402068:	add	x1, x29, #0xf8
  40206c:	ldr	x0, [x1, x0]
  402070:	cmp	x0, #0x0
  402074:	b.ne	402028 <generate+0x8b8>  // b.any
  402078:	ldr	x0, [x29, #168]
  40207c:	strb	wzr, [x0]
  402080:	ldr	x0, [x29, #240]
  402084:	str	x0, [x29, #208]
  402088:	ldr	x1, [x29, #208]
  40208c:	adrp	x0, 402000 <generate+0x890>
  402090:	add	x0, x0, #0x898
  402094:	bl	400f00 <symlink@plt>
  402098:	cmp	w0, #0x0
  40209c:	b.ge	402134 <generate+0x9c4>  // b.tcont
  4020a0:	mov	w0, #0x3                   	// #3
  4020a4:	str	w0, [x29, #48]
  4020a8:	bl	400f50 <__errno_location@plt>
  4020ac:	ldr	w0, [x0]
  4020b0:	str	w0, [x29, #52]
  4020b4:	str	wzr, [x29, #56]
  4020b8:	ldr	w0, [x29, #56]
  4020bc:	bl	401040 <log_get_max_level_realm@plt>
  4020c0:	mov	w1, w0
  4020c4:	ldr	w0, [x29, #48]
  4020c8:	and	w0, w0, #0x7
  4020cc:	cmp	w1, w0
  4020d0:	b.lt	40211c <generate+0x9ac>  // b.tstop
  4020d4:	ldr	w0, [x29, #56]
  4020d8:	lsl	w1, w0, #10
  4020dc:	ldr	w0, [x29, #48]
  4020e0:	orr	w7, w1, w0
  4020e4:	adrp	x0, 402000 <generate+0x890>
  4020e8:	add	x1, x0, #0x50b
  4020ec:	ldr	x6, [x29, #208]
  4020f0:	adrp	x0, 402000 <generate+0x890>
  4020f4:	add	x5, x0, #0x8b8
  4020f8:	adrp	x0, 402000 <generate+0x890>
  4020fc:	add	x4, x0, #0x9c0
  402100:	mov	w3, #0x79                  	// #121
  402104:	mov	x2, x1
  402108:	ldr	w1, [x29, #52]
  40210c:	mov	w0, w7
  402110:	bl	400fb0 <log_internal_realm@plt>
  402114:	mov	w19, w0
  402118:	b	402138 <generate+0x9c8>
  40211c:	ldr	w0, [x29, #52]
  402120:	cmp	w0, #0x0
  402124:	cneg	w0, w0, lt  // lt = tstop
  402128:	and	w0, w0, #0xff
  40212c:	neg	w19, w0
  402130:	b	402138 <generate+0x9c8>
  402134:	mov	w19, #0x0                   	// #0
  402138:	add	x0, x29, #0x60
  40213c:	bl	401318 <fclosep>
  402140:	mov	w1, w19
  402144:	adrp	x0, 413000 <__FRAME_END__+0x101e0>
  402148:	add	x0, x0, #0xca8
  40214c:	ldr	x2, [x29, #264]
  402150:	ldr	x0, [x0]
  402154:	eor	x0, x2, x0
  402158:	cmp	x0, #0x0
  40215c:	b.eq	402164 <generate+0x9f4>  // b.none
  402160:	bl	400f80 <__stack_chk_fail@plt>
  402164:	mov	w0, w1
  402168:	mov	sp, x29
  40216c:	ldp	x19, x20, [sp, #16]
  402170:	ldp	x29, x30, [sp], #272
  402174:	ret

0000000000402178 <run>:
  402178:	stp	x29, x30, [sp, #-64]!
  40217c:	mov	x29, sp
  402180:	str	x0, [sp, #40]
  402184:	str	x1, [sp, #32]
  402188:	str	x2, [sp, #24]
  40218c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  402190:	add	x0, x0, #0x10
  402194:	ldr	x1, [sp, #40]
  402198:	str	x1, [x0]
  40219c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4021a0:	add	x0, x0, #0x10
  4021a4:	ldr	x0, [x0]
  4021a8:	cmp	x0, #0x0
  4021ac:	cset	w0, eq  // eq = none
  4021b0:	and	w0, w0, #0xff
  4021b4:	and	x0, x0, #0xff
  4021b8:	cmp	x0, #0x0
  4021bc:	b.eq	4021e8 <run+0x70>  // b.none
  4021c0:	adrp	x0, 402000 <generate+0x890>
  4021c4:	add	x1, x0, #0x50b
  4021c8:	adrp	x0, 402000 <generate+0x890>
  4021cc:	add	x4, x0, #0x9d0
  4021d0:	mov	w3, #0x81                  	// #129
  4021d4:	mov	x2, x1
  4021d8:	adrp	x0, 402000 <generate+0x890>
  4021dc:	add	x1, x0, #0x8f8
  4021e0:	mov	w0, #0x0                   	// #0
  4021e4:	bl	400f10 <log_assert_failed_realm@plt>
  4021e8:	mov	w2, #0x5                   	// #5
  4021ec:	mov	x1, #0x0                   	// #0
  4021f0:	adrp	x0, 401000 <strlen@plt>
  4021f4:	add	x0, x0, #0x5ec
  4021f8:	bl	400fc0 <proc_cmdline_parse@plt>
  4021fc:	str	w0, [sp, #48]
  402200:	ldr	w0, [sp, #48]
  402204:	cmp	w0, #0x0
  402208:	b.ge	402284 <run+0x10c>  // b.tcont
  40220c:	mov	w0, #0x4                   	// #4
  402210:	str	w0, [sp, #52]
  402214:	ldr	w0, [sp, #48]
  402218:	str	w0, [sp, #56]
  40221c:	str	wzr, [sp, #60]
  402220:	ldr	w0, [sp, #60]
  402224:	bl	401040 <log_get_max_level_realm@plt>
  402228:	mov	w1, w0
  40222c:	ldr	w0, [sp, #52]
  402230:	and	w0, w0, #0x7
  402234:	cmp	w1, w0
  402238:	b.lt	40227c <run+0x104>  // b.tstop
  40223c:	ldr	w0, [sp, #60]
  402240:	lsl	w1, w0, #10
  402244:	ldr	w0, [sp, #52]
  402248:	orr	w6, w1, w0
  40224c:	adrp	x0, 402000 <generate+0x890>
  402250:	add	x1, x0, #0x50b
  402254:	adrp	x0, 402000 <generate+0x890>
  402258:	add	x5, x0, #0x908
  40225c:	adrp	x0, 402000 <generate+0x890>
  402260:	add	x4, x0, #0x9d8
  402264:	mov	w3, #0x85                  	// #133
  402268:	mov	x2, x1
  40226c:	ldr	w1, [sp, #56]
  402270:	mov	w0, w6
  402274:	bl	400fb0 <log_internal_realm@plt>
  402278:	b	402284 <run+0x10c>
  40227c:	ldr	w0, [sp, #56]
  402280:	cmp	w0, #0x0
  402284:	bl	401770 <generate>
  402288:	ldp	x29, x30, [sp], #64
  40228c:	ret

0000000000402290 <main>:
  402290:	stp	x29, x30, [sp, #-48]!
  402294:	mov	x29, sp
  402298:	str	w0, [sp, #28]
  40229c:	str	x1, [sp, #16]
  4022a0:	ldr	x1, [sp, #16]
  4022a4:	ldr	w0, [sp, #28]
  4022a8:	bl	40136c <save_argc_argv>
  4022ac:	bl	400f30 <log_setup_generator@plt>
  4022b0:	ldr	w0, [sp, #28]
  4022b4:	cmp	w0, #0x1
  4022b8:	b.le	402354 <main+0xc4>
  4022bc:	ldr	w0, [sp, #28]
  4022c0:	cmp	w0, #0x4
  4022c4:	b.eq	402354 <main+0xc4>  // b.none
  4022c8:	mov	w0, #0x3                   	// #3
  4022cc:	str	w0, [sp, #32]
  4022d0:	mov	w0, #0x16                  	// #22
  4022d4:	movk	w0, #0x4000, lsl #16
  4022d8:	str	w0, [sp, #36]
  4022dc:	str	wzr, [sp, #40]
  4022e0:	ldr	w0, [sp, #40]
  4022e4:	bl	401040 <log_get_max_level_realm@plt>
  4022e8:	mov	w1, w0
  4022ec:	ldr	w0, [sp, #32]
  4022f0:	and	w0, w0, #0x7
  4022f4:	cmp	w1, w0
  4022f8:	b.lt	40233c <main+0xac>  // b.tstop
  4022fc:	ldr	w0, [sp, #40]
  402300:	lsl	w1, w0, #10
  402304:	ldr	w0, [sp, #32]
  402308:	orr	w6, w1, w0
  40230c:	adrp	x0, 402000 <generate+0x890>
  402310:	add	x1, x0, #0x50b
  402314:	adrp	x0, 402000 <generate+0x890>
  402318:	add	x5, x0, #0x940
  40231c:	adrp	x0, 402000 <generate+0x890>
  402320:	add	x4, x0, #0x9e0
  402324:	mov	w3, #0x8a                  	// #138
  402328:	mov	x2, x1
  40232c:	ldr	w1, [sp, #36]
  402330:	mov	w0, w6
  402334:	bl	400fb0 <log_internal_realm@plt>
  402338:	b	4023d8 <main+0x148>
  40233c:	ldr	w0, [sp, #36]
  402340:	cmp	w0, #0x0
  402344:	cneg	w0, w0, lt  // lt = tstop
  402348:	and	w0, w0, #0xff
  40234c:	neg	w0, w0
  402350:	b	4023d8 <main+0x148>
  402354:	ldr	w0, [sp, #28]
  402358:	cmp	w0, #0x1
  40235c:	b.le	40236c <main+0xdc>
  402360:	ldr	x0, [sp, #16]
  402364:	ldr	x0, [x0, #8]
  402368:	b	402374 <main+0xe4>
  40236c:	adrp	x0, 402000 <generate+0x890>
  402370:	add	x0, x0, #0x970
  402374:	ldr	w1, [sp, #28]
  402378:	cmp	w1, #0x1
  40237c:	b.le	40238c <main+0xfc>
  402380:	ldr	x1, [sp, #16]
  402384:	ldr	x1, [x1, #16]
  402388:	b	402394 <main+0x104>
  40238c:	adrp	x1, 402000 <generate+0x890>
  402390:	add	x1, x1, #0x970
  402394:	ldr	w2, [sp, #28]
  402398:	cmp	w2, #0x1
  40239c:	b.le	4023ac <main+0x11c>
  4023a0:	ldr	x2, [sp, #16]
  4023a4:	ldr	x2, [x2, #24]
  4023a8:	b	4023b4 <main+0x124>
  4023ac:	adrp	x2, 402000 <generate+0x890>
  4023b0:	add	x2, x2, #0x970
  4023b4:	bl	402178 <run>
  4023b8:	str	w0, [sp, #44]
  4023bc:	bl	400f90 <ask_password_agent_close@plt>
  4023c0:	bl	400ec0 <polkit_agent_close@plt>
  4023c4:	bl	400fa0 <pager_close@plt>
  4023c8:	bl	400ff0 <mac_selinux_finish@plt>
  4023cc:	bl	4013a4 <static_destruct>
  4023d0:	ldr	w0, [sp, #44]
  4023d4:	lsr	w0, w0, #31
  4023d8:	ldp	x29, x30, [sp], #48
  4023dc:	ret

00000000004023e0 <__libc_csu_init>:
  4023e0:	stp	x29, x30, [sp, #-64]!
  4023e4:	mov	x29, sp
  4023e8:	stp	x19, x20, [sp, #16]
  4023ec:	adrp	x20, 413000 <__FRAME_END__+0x101e0>
  4023f0:	add	x20, x20, #0xca0
  4023f4:	stp	x21, x22, [sp, #32]
  4023f8:	adrp	x21, 413000 <__FRAME_END__+0x101e0>
  4023fc:	add	x21, x21, #0xc98
  402400:	sub	x20, x20, x21
  402404:	mov	w22, w0
  402408:	stp	x23, x24, [sp, #48]
  40240c:	mov	x23, x1
  402410:	mov	x24, x2
  402414:	bl	400e20 <_init>
  402418:	cmp	xzr, x20, asr #3
  40241c:	b.eq	402448 <__libc_csu_init+0x68>  // b.none
  402420:	asr	x20, x20, #3
  402424:	mov	x19, #0x0                   	// #0
  402428:	ldr	x3, [x21, x19, lsl #3]
  40242c:	mov	x2, x24
  402430:	add	x19, x19, #0x1
  402434:	mov	x1, x23
  402438:	mov	w0, w22
  40243c:	blr	x3
  402440:	cmp	x20, x19
  402444:	b.ne	402428 <__libc_csu_init+0x48>  // b.any
  402448:	ldp	x19, x20, [sp, #16]
  40244c:	ldp	x21, x22, [sp, #32]
  402450:	ldp	x23, x24, [sp, #48]
  402454:	ldp	x29, x30, [sp], #64
  402458:	ret
  40245c:	nop

0000000000402460 <__libc_csu_fini>:
  402460:	ret

Disassembly of section .fini:

0000000000402464 <_fini>:
  402464:	stp	x29, x30, [sp, #-16]!
  402468:	mov	x29, sp
  40246c:	ldp	x29, x30, [sp], #16
  402470:	ret
