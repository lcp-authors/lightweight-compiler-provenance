
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-remount-fs_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401180 <_init>:
  401180:	stp	x29, x30, [sp, #-16]!
  401184:	mov	x29, sp
  401188:	bl	401490 <call_weak_fn>
  40118c:	ldp	x29, x30, [sp], #16
  401190:	ret

Disassembly of section .plt:

00000000004011a0 <.plt>:
  4011a0:	stp	x16, x30, [sp, #-16]!
  4011a4:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4011a8:	ldr	x17, [x16, #3752]
  4011ac:	add	x16, x16, #0xea8
  4011b0:	br	x17
  4011b4:	nop
  4011b8:	nop
  4011bc:	nop

00000000004011c0 <internal_hashmap_remove@plt>:
  4011c0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4011c4:	ldr	x17, [x16, #3760]
  4011c8:	add	x16, x16, #0xeb0
  4011cc:	br	x17

00000000004011d0 <internal_hashmap_free@plt>:
  4011d0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4011d4:	ldr	x17, [x16, #3768]
  4011d8:	add	x16, x16, #0xeb8
  4011dc:	br	x17

00000000004011e0 <__libc_start_main@plt>:
  4011e0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4011e4:	ldr	x17, [x16, #3776]
  4011e8:	add	x16, x16, #0xec0
  4011ec:	br	x17

00000000004011f0 <__gmon_start__@plt>:
  4011f0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4011f4:	ldr	x17, [x16, #3784]
  4011f8:	add	x16, x16, #0xec8
  4011fc:	br	x17

0000000000401200 <polkit_agent_close@plt>:
  401200:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401204:	ldr	x17, [x16, #3792]
  401208:	add	x16, x16, #0xed0
  40120c:	br	x17

0000000000401210 <path_equal@plt>:
  401210:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401214:	ldr	x17, [x16, #3800]
  401218:	add	x16, x16, #0xed8
  40121c:	br	x17

0000000000401220 <log_setup_service@plt>:
  401220:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401224:	ldr	x17, [x16, #3808]
  401228:	add	x16, x16, #0xee0
  40122c:	br	x17

0000000000401230 <log_assert_failed_realm@plt>:
  401230:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401234:	ldr	x17, [x16, #3816]
  401238:	add	x16, x16, #0xee8
  40123c:	br	x17

0000000000401240 <_exit@plt>:
  401240:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401244:	ldr	x17, [x16, #3824]
  401248:	add	x16, x16, #0xef0
  40124c:	br	x17

0000000000401250 <umask@plt>:
  401250:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401254:	ldr	x17, [x16, #3832]
  401258:	add	x16, x16, #0xef8
  40125c:	br	x17

0000000000401260 <secure_getenv@plt>:
  401260:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401264:	ldr	x17, [x16, #3840]
  401268:	add	x16, x16, #0xf00
  40126c:	br	x17

0000000000401270 <setmntent@plt>:
  401270:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401274:	ldr	x17, [x16, #3848]
  401278:	add	x16, x16, #0xf08
  40127c:	br	x17

0000000000401280 <is_efi_boot@plt>:
  401280:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401284:	ldr	x17, [x16, #3856]
  401288:	add	x16, x16, #0xf10
  40128c:	br	x17

0000000000401290 <abort@plt>:
  401290:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401294:	ldr	x17, [x16, #3864]
  401298:	add	x16, x16, #0xf18
  40129c:	br	x17

00000000004012a0 <getmntent@plt>:
  4012a0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4012a4:	ldr	x17, [x16, #3872]
  4012a8:	add	x16, x16, #0xf20
  4012ac:	br	x17

00000000004012b0 <endmntent@plt>:
  4012b0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4012b4:	ldr	x17, [x16, #3880]
  4012b8:	add	x16, x16, #0xf28
  4012bc:	br	x17

00000000004012c0 <path_startswith@plt>:
  4012c0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4012c4:	ldr	x17, [x16, #3888]
  4012c8:	add	x16, x16, #0xf30
  4012cc:	br	x17

00000000004012d0 <cg_is_unified_wanted@plt>:
  4012d0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4012d4:	ldr	x17, [x16, #3896]
  4012d8:	add	x16, x16, #0xf38
  4012dc:	br	x17

00000000004012e0 <getenv_bool@plt>:
  4012e0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4012e4:	ldr	x17, [x16, #3904]
  4012e8:	add	x16, x16, #0xf40
  4012ec:	br	x17

00000000004012f0 <__errno_location@plt>:
  4012f0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4012f4:	ldr	x17, [x16, #3912]
  4012f8:	add	x16, x16, #0xf48
  4012fc:	br	x17

0000000000401300 <__stack_chk_fail@plt>:
  401300:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401304:	ldr	x17, [x16, #3920]
  401308:	add	x16, x16, #0xf50
  40130c:	br	x17

0000000000401310 <waitid@plt>:
  401310:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401314:	ldr	x17, [x16, #3928]
  401318:	add	x16, x16, #0xf58
  40131c:	br	x17

0000000000401320 <ask_password_agent_close@plt>:
  401320:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401324:	ldr	x17, [x16, #3936]
  401328:	add	x16, x16, #0xf60
  40132c:	br	x17

0000000000401330 <signal_to_string@plt>:
  401330:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401334:	ldr	x17, [x16, #3944]
  401338:	add	x16, x16, #0xf68
  40133c:	br	x17

0000000000401340 <pager_close@plt>:
  401340:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401344:	ldr	x17, [x16, #3952]
  401348:	add	x16, x16, #0xf70
  40134c:	br	x17

0000000000401350 <cg_is_legacy_wanted@plt>:
  401350:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401354:	ldr	x17, [x16, #3960]
  401358:	add	x16, x16, #0xf78
  40135c:	br	x17

0000000000401360 <mac_smack_use@plt>:
  401360:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401364:	ldr	x17, [x16, #3968]
  401368:	add	x16, x16, #0xf80
  40136c:	br	x17

0000000000401370 <internal_hashmap_size@plt>:
  401370:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401374:	ldr	x17, [x16, #3976]
  401378:	add	x16, x16, #0xf88
  40137c:	br	x17

0000000000401380 <log_internal_realm@plt>:
  401380:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401384:	ldr	x17, [x16, #3984]
  401388:	add	x16, x16, #0xf90
  40138c:	br	x17

0000000000401390 <hashmap_put@plt>:
  401390:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401394:	ldr	x17, [x16, #3992]
  401398:	add	x16, x16, #0xf98
  40139c:	br	x17

00000000004013a0 <strdup@plt>:
  4013a0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4013a4:	ldr	x17, [x16, #4000]
  4013a8:	add	x16, x16, #0xfa0
  4013ac:	br	x17

00000000004013b0 <execv@plt>:
  4013b0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4013b4:	ldr	x17, [x16, #4008]
  4013b8:	add	x16, x16, #0xfa8
  4013bc:	br	x17

00000000004013c0 <safe_fork_full@plt>:
  4013c0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4013c4:	ldr	x17, [x16, #4016]
  4013c8:	add	x16, x16, #0xfb0
  4013cc:	br	x17

00000000004013d0 <free@plt>:
  4013d0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4013d4:	ldr	x17, [x16, #4024]
  4013d8:	add	x16, x16, #0xfb8
  4013dc:	br	x17

00000000004013e0 <cg_is_hybrid_wanted@plt>:
  4013e0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4013e4:	ldr	x17, [x16, #4032]
  4013e8:	add	x16, x16, #0xfc0
  4013ec:	br	x17

00000000004013f0 <internal_hashmap_ensure_allocated@plt>:
  4013f0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  4013f4:	ldr	x17, [x16, #4040]
  4013f8:	add	x16, x16, #0xfc8
  4013fc:	br	x17

0000000000401400 <mac_selinux_finish@plt>:
  401400:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401404:	ldr	x17, [x16, #4048]
  401408:	add	x16, x16, #0xfd0
  40140c:	br	x17

0000000000401410 <is_clean_exit@plt>:
  401410:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401414:	ldr	x17, [x16, #4056]
  401418:	add	x16, x16, #0xfd8
  40141c:	br	x17

0000000000401420 <log_oom_internal@plt>:
  401420:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401424:	ldr	x17, [x16, #4064]
  401428:	add	x16, x16, #0xfe0
  40142c:	br	x17

0000000000401430 <log_get_max_level_realm@plt>:
  401430:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401434:	ldr	x17, [x16, #4072]
  401438:	add	x16, x16, #0xfe8
  40143c:	br	x17

Disassembly of section .text:

0000000000401440 <_start>:
  401440:	mov	x29, #0x0                   	// #0
  401444:	mov	x30, #0x0                   	// #0
  401448:	mov	x5, x0
  40144c:	ldr	x1, [sp]
  401450:	add	x2, sp, #0x8
  401454:	mov	x6, sp
  401458:	movz	x0, #0x0, lsl #48
  40145c:	movk	x0, #0x0, lsl #32
  401460:	movk	x0, #0x40, lsl #16
  401464:	movk	x0, #0x23b8
  401468:	movz	x3, #0x0, lsl #48
  40146c:	movk	x3, #0x0, lsl #32
  401470:	movk	x3, #0x40, lsl #16
  401474:	movk	x3, #0x24a0
  401478:	movz	x4, #0x0, lsl #48
  40147c:	movk	x4, #0x0, lsl #32
  401480:	movk	x4, #0x40, lsl #16
  401484:	movk	x4, #0x2520
  401488:	bl	4011e0 <__libc_start_main@plt>
  40148c:	bl	401290 <abort@plt>

0000000000401490 <call_weak_fn>:
  401490:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401494:	ldr	x0, [x0, #4088]
  401498:	cbz	x0, 4014a0 <call_weak_fn+0x10>
  40149c:	b	4011f0 <__gmon_start__@plt>
  4014a0:	ret

00000000004014a4 <deregister_tm_clones>:
  4014a4:	stp	x29, x30, [sp, #-32]!
  4014a8:	mov	x29, sp
  4014ac:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4014b0:	add	x0, x0, #0x0
  4014b4:	str	x0, [sp, #24]
  4014b8:	ldr	x0, [sp, #24]
  4014bc:	str	x0, [sp, #24]
  4014c0:	ldr	x1, [sp, #24]
  4014c4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4014c8:	add	x0, x0, #0x0
  4014cc:	cmp	x1, x0
  4014d0:	b.eq	40150c <deregister_tm_clones+0x68>  // b.none
  4014d4:	adrp	x0, 402000 <run+0x320>
  4014d8:	add	x0, x0, #0x538
  4014dc:	ldr	x0, [x0]
  4014e0:	str	x0, [sp, #16]
  4014e4:	ldr	x0, [sp, #16]
  4014e8:	str	x0, [sp, #16]
  4014ec:	ldr	x0, [sp, #16]
  4014f0:	cmp	x0, #0x0
  4014f4:	b.eq	401510 <deregister_tm_clones+0x6c>  // b.none
  4014f8:	ldr	x1, [sp, #16]
  4014fc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401500:	add	x0, x0, #0x0
  401504:	blr	x1
  401508:	b	401510 <deregister_tm_clones+0x6c>
  40150c:	nop
  401510:	ldp	x29, x30, [sp], #32
  401514:	ret

0000000000401518 <register_tm_clones>:
  401518:	stp	x29, x30, [sp, #-48]!
  40151c:	mov	x29, sp
  401520:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401524:	add	x0, x0, #0x0
  401528:	str	x0, [sp, #40]
  40152c:	ldr	x0, [sp, #40]
  401530:	str	x0, [sp, #40]
  401534:	ldr	x1, [sp, #40]
  401538:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40153c:	add	x0, x0, #0x0
  401540:	sub	x0, x1, x0
  401544:	asr	x0, x0, #3
  401548:	lsr	x1, x0, #63
  40154c:	add	x0, x1, x0
  401550:	asr	x0, x0, #1
  401554:	str	x0, [sp, #32]
  401558:	ldr	x0, [sp, #32]
  40155c:	cmp	x0, #0x0
  401560:	b.eq	4015a0 <register_tm_clones+0x88>  // b.none
  401564:	adrp	x0, 402000 <run+0x320>
  401568:	add	x0, x0, #0x540
  40156c:	ldr	x0, [x0]
  401570:	str	x0, [sp, #24]
  401574:	ldr	x0, [sp, #24]
  401578:	str	x0, [sp, #24]
  40157c:	ldr	x0, [sp, #24]
  401580:	cmp	x0, #0x0
  401584:	b.eq	4015a4 <register_tm_clones+0x8c>  // b.none
  401588:	ldr	x2, [sp, #24]
  40158c:	ldr	x1, [sp, #32]
  401590:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401594:	add	x0, x0, #0x0
  401598:	blr	x2
  40159c:	b	4015a4 <register_tm_clones+0x8c>
  4015a0:	nop
  4015a4:	ldp	x29, x30, [sp], #48
  4015a8:	ret

00000000004015ac <__do_global_dtors_aux>:
  4015ac:	stp	x29, x30, [sp, #-16]!
  4015b0:	mov	x29, sp
  4015b4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4015b8:	add	x0, x0, #0xc
  4015bc:	ldrb	w0, [x0]
  4015c0:	and	x0, x0, #0xff
  4015c4:	cmp	x0, #0x0
  4015c8:	b.ne	4015e4 <__do_global_dtors_aux+0x38>  // b.any
  4015cc:	bl	4014a4 <deregister_tm_clones>
  4015d0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4015d4:	add	x0, x0, #0xc
  4015d8:	mov	w1, #0x1                   	// #1
  4015dc:	strb	w1, [x0]
  4015e0:	b	4015e8 <__do_global_dtors_aux+0x3c>
  4015e4:	nop
  4015e8:	ldp	x29, x30, [sp], #16
  4015ec:	ret

00000000004015f0 <frame_dummy>:
  4015f0:	stp	x29, x30, [sp, #-16]!
  4015f4:	mov	x29, sp
  4015f8:	bl	401518 <register_tm_clones>
  4015fc:	nop
  401600:	ldp	x29, x30, [sp], #16
  401604:	ret

0000000000401608 <ALIGN_TO>:
  401608:	sub	sp, sp, #0x10
  40160c:	str	x0, [sp, #8]
  401610:	str	x1, [sp]
  401614:	ldr	x1, [sp, #8]
  401618:	ldr	x0, [sp]
  40161c:	add	x0, x1, x0
  401620:	sub	x1, x0, #0x1
  401624:	ldr	x0, [sp]
  401628:	neg	x0, x0
  40162c:	and	x0, x1, x0
  401630:	add	sp, sp, #0x10
  401634:	ret

0000000000401638 <freep>:
  401638:	stp	x29, x30, [sp, #-32]!
  40163c:	mov	x29, sp
  401640:	str	x0, [sp, #24]
  401644:	ldr	x0, [sp, #24]
  401648:	ldr	x0, [x0]
  40164c:	bl	4013d0 <free@plt>
  401650:	nop
  401654:	ldp	x29, x30, [sp], #32
  401658:	ret

000000000040165c <save_argc_argv>:
  40165c:	sub	sp, sp, #0x10
  401660:	str	w0, [sp, #12]
  401664:	str	x1, [sp]
  401668:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40166c:	add	x0, x0, #0x8
  401670:	ldr	w1, [sp, #12]
  401674:	str	w1, [x0]
  401678:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40167c:	add	x0, x0, #0x0
  401680:	ldr	x1, [sp]
  401684:	str	x1, [x0]
  401688:	nop
  40168c:	add	sp, sp, #0x10
  401690:	ret

0000000000401694 <hashmap_free_free>:
  401694:	stp	x29, x30, [sp, #-32]!
  401698:	mov	x29, sp
  40169c:	str	x0, [sp, #24]
  4016a0:	adrp	x0, 401000 <_init-0x180>
  4016a4:	add	x2, x0, #0x3d0
  4016a8:	mov	x1, #0x0                   	// #0
  4016ac:	ldr	x0, [sp, #24]
  4016b0:	bl	4011d0 <internal_hashmap_free@plt>
  4016b4:	ldp	x29, x30, [sp], #32
  4016b8:	ret

00000000004016bc <hashmap_remove>:
  4016bc:	stp	x29, x30, [sp, #-32]!
  4016c0:	mov	x29, sp
  4016c4:	str	x0, [sp, #24]
  4016c8:	str	x1, [sp, #16]
  4016cc:	ldr	x1, [sp, #16]
  4016d0:	ldr	x0, [sp, #24]
  4016d4:	bl	4011c0 <internal_hashmap_remove@plt>
  4016d8:	ldp	x29, x30, [sp], #32
  4016dc:	ret

00000000004016e0 <hashmap_size>:
  4016e0:	stp	x29, x30, [sp, #-32]!
  4016e4:	mov	x29, sp
  4016e8:	str	x0, [sp, #24]
  4016ec:	ldr	x0, [sp, #24]
  4016f0:	bl	401370 <internal_hashmap_size@plt>
  4016f4:	ldp	x29, x30, [sp], #32
  4016f8:	ret

00000000004016fc <hashmap_isempty>:
  4016fc:	stp	x29, x30, [sp, #-32]!
  401700:	mov	x29, sp
  401704:	str	x0, [sp, #24]
  401708:	ldr	x0, [sp, #24]
  40170c:	bl	4016e0 <hashmap_size>
  401710:	cmp	w0, #0x0
  401714:	cset	w0, eq  // eq = none
  401718:	and	w0, w0, #0xff
  40171c:	ldp	x29, x30, [sp], #32
  401720:	ret

0000000000401724 <hashmap_free_freep>:
  401724:	stp	x29, x30, [sp, #-32]!
  401728:	mov	x29, sp
  40172c:	str	x0, [sp, #24]
  401730:	ldr	x0, [sp, #24]
  401734:	ldr	x0, [x0]
  401738:	cmp	x0, #0x0
  40173c:	b.eq	40174c <hashmap_free_freep+0x28>  // b.none
  401740:	ldr	x0, [sp, #24]
  401744:	ldr	x0, [x0]
  401748:	bl	401694 <hashmap_free_free>
  40174c:	nop
  401750:	ldp	x29, x30, [sp], #32
  401754:	ret

0000000000401758 <fstab_path>:
  401758:	stp	x29, x30, [sp, #-16]!
  40175c:	mov	x29, sp
  401760:	adrp	x0, 402000 <run+0x320>
  401764:	add	x0, x0, #0x558
  401768:	bl	401260 <secure_getenv@plt>
  40176c:	cmp	x0, #0x0
  401770:	b.ne	40177c <fstab_path+0x24>  // b.any
  401774:	adrp	x0, 402000 <run+0x320>
  401778:	add	x0, x0, #0x568
  40177c:	ldp	x29, x30, [sp], #16
  401780:	ret

0000000000401784 <static_destruct>:
  401784:	stp	x29, x30, [sp, #-32]!
  401788:	mov	x29, sp
  40178c:	adrp	x0, 402000 <run+0x320>
  401790:	add	x0, x0, #0x778
  401794:	ldr	x0, [x0]
  401798:	cmp	x0, #0x0
  40179c:	b.eq	401800 <static_destruct+0x7c>  // b.none
  4017a0:	adrp	x0, 402000 <run+0x320>
  4017a4:	add	x0, x0, #0x778
  4017a8:	ldr	x0, [x0]
  4017ac:	mov	x1, #0x8                   	// #8
  4017b0:	bl	401608 <ALIGN_TO>
  4017b4:	str	x0, [sp, #24]
  4017b8:	b	4017e4 <static_destruct+0x60>
  4017bc:	ldr	x0, [sp, #24]
  4017c0:	ldr	x1, [x0, #8]
  4017c4:	ldr	x0, [sp, #24]
  4017c8:	ldr	x0, [x0]
  4017cc:	blr	x1
  4017d0:	ldr	x0, [sp, #24]
  4017d4:	add	x0, x0, #0x10
  4017d8:	mov	x1, #0x8                   	// #8
  4017dc:	bl	401608 <ALIGN_TO>
  4017e0:	str	x0, [sp, #24]
  4017e4:	ldr	x1, [sp, #24]
  4017e8:	adrp	x0, 402000 <run+0x320>
  4017ec:	add	x0, x0, #0x780
  4017f0:	ldr	x0, [x0]
  4017f4:	cmp	x1, x0
  4017f8:	b.cc	4017bc <static_destruct+0x38>  // b.lo, b.ul, b.last
  4017fc:	b	401804 <static_destruct+0x80>
  401800:	nop
  401804:	ldp	x29, x30, [sp], #32
  401808:	ret

000000000040180c <endmntentp>:
  40180c:	stp	x29, x30, [sp, #-32]!
  401810:	mov	x29, sp
  401814:	str	x0, [sp, #24]
  401818:	ldr	x0, [sp, #24]
  40181c:	ldr	x0, [x0]
  401820:	cmp	x0, #0x0
  401824:	b.eq	401834 <endmntentp+0x28>  // b.none
  401828:	ldr	x0, [sp, #24]
  40182c:	ldr	x0, [x0]
  401830:	bl	4012b0 <endmntent@plt>
  401834:	nop
  401838:	ldp	x29, x30, [sp], #32
  40183c:	ret

0000000000401840 <PID_TO_PTR>:
  401840:	sub	sp, sp, #0x10
  401844:	str	w0, [sp, #12]
  401848:	ldrsw	x0, [sp, #12]
  40184c:	add	sp, sp, #0x10
  401850:	ret

0000000000401854 <pid_is_valid>:
  401854:	sub	sp, sp, #0x10
  401858:	str	w0, [sp, #12]
  40185c:	ldr	w0, [sp, #12]
  401860:	cmp	w0, #0x0
  401864:	cset	w0, gt
  401868:	and	w0, w0, #0xff
  40186c:	add	sp, sp, #0x10
  401870:	ret

0000000000401874 <safe_fork>:
  401874:	stp	x29, x30, [sp, #-48]!
  401878:	mov	x29, sp
  40187c:	str	x0, [sp, #40]
  401880:	str	w1, [sp, #36]
  401884:	str	x2, [sp, #24]
  401888:	ldr	x4, [sp, #24]
  40188c:	ldr	w3, [sp, #36]
  401890:	mov	x2, #0x0                   	// #0
  401894:	mov	x1, #0x0                   	// #0
  401898:	ldr	x0, [sp, #40]
  40189c:	bl	4013c0 <safe_fork_full@plt>
  4018a0:	ldp	x29, x30, [sp], #48
  4018a4:	ret

00000000004018a8 <track_pid>:
  4018a8:	stp	x29, x30, [sp, #-96]!
  4018ac:	mov	x29, sp
  4018b0:	str	x19, [sp, #16]
  4018b4:	str	x0, [sp, #56]
  4018b8:	str	x1, [sp, #48]
  4018bc:	str	w2, [sp, #44]
  4018c0:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  4018c4:	add	x0, x0, #0x800
  4018c8:	ldr	x1, [x0]
  4018cc:	str	x1, [sp, #88]
  4018d0:	mov	x1, #0x0                   	// #0
  4018d4:	str	xzr, [sp, #72]
  4018d8:	ldr	x0, [sp, #56]
  4018dc:	cmp	x0, #0x0
  4018e0:	cset	w0, eq  // eq = none
  4018e4:	and	w0, w0, #0xff
  4018e8:	and	x0, x0, #0xff
  4018ec:	cmp	x0, #0x0
  4018f0:	b.eq	40191c <track_pid+0x74>  // b.none
  4018f4:	adrp	x0, 402000 <run+0x320>
  4018f8:	add	x1, x0, #0x57b
  4018fc:	adrp	x0, 402000 <run+0x320>
  401900:	add	x4, x0, #0x788
  401904:	mov	w3, #0x1e                  	// #30
  401908:	mov	x2, x1
  40190c:	adrp	x0, 402000 <run+0x320>
  401910:	add	x1, x0, #0x598
  401914:	mov	w0, #0x0                   	// #0
  401918:	bl	401230 <log_assert_failed_realm@plt>
  40191c:	ldr	x0, [sp, #48]
  401920:	cmp	x0, #0x0
  401924:	cset	w0, eq  // eq = none
  401928:	and	w0, w0, #0xff
  40192c:	and	x0, x0, #0xff
  401930:	cmp	x0, #0x0
  401934:	b.eq	401960 <track_pid+0xb8>  // b.none
  401938:	adrp	x0, 402000 <run+0x320>
  40193c:	add	x1, x0, #0x57b
  401940:	adrp	x0, 402000 <run+0x320>
  401944:	add	x4, x0, #0x788
  401948:	mov	w3, #0x1f                  	// #31
  40194c:	mov	x2, x1
  401950:	adrp	x0, 402000 <run+0x320>
  401954:	add	x1, x0, #0x5a0
  401958:	mov	w0, #0x0                   	// #0
  40195c:	bl	401230 <log_assert_failed_realm@plt>
  401960:	ldr	w0, [sp, #44]
  401964:	bl	401854 <pid_is_valid>
  401968:	and	w0, w0, #0xff
  40196c:	eor	w0, w0, #0x1
  401970:	and	w0, w0, #0xff
  401974:	and	x0, x0, #0xff
  401978:	cmp	x0, #0x0
  40197c:	b.eq	4019a8 <track_pid+0x100>  // b.none
  401980:	adrp	x0, 402000 <run+0x320>
  401984:	add	x1, x0, #0x57b
  401988:	adrp	x0, 402000 <run+0x320>
  40198c:	add	x4, x0, #0x788
  401990:	mov	w3, #0x20                  	// #32
  401994:	mov	x2, x1
  401998:	adrp	x0, 402000 <run+0x320>
  40199c:	add	x1, x0, #0x5a8
  4019a0:	mov	w0, #0x0                   	// #0
  4019a4:	bl	401230 <log_assert_failed_realm@plt>
  4019a8:	mov	x1, #0x0                   	// #0
  4019ac:	ldr	x0, [sp, #56]
  4019b0:	bl	4013f0 <internal_hashmap_ensure_allocated@plt>
  4019b4:	str	w0, [sp, #68]
  4019b8:	ldr	w0, [sp, #68]
  4019bc:	cmp	w0, #0x0
  4019c0:	b.ge	4019e8 <track_pid+0x140>  // b.tcont
  4019c4:	adrp	x0, 402000 <run+0x320>
  4019c8:	add	x1, x0, #0x57b
  4019cc:	adrp	x0, 402000 <run+0x320>
  4019d0:	add	x3, x0, #0x798
  4019d4:	mov	w2, #0x24                  	// #36
  4019d8:	mov	w0, #0x0                   	// #0
  4019dc:	bl	401420 <log_oom_internal@plt>
  4019e0:	mov	w19, w0
  4019e4:	b	401a8c <track_pid+0x1e4>
  4019e8:	ldr	x0, [sp, #48]
  4019ec:	bl	4013a0 <strdup@plt>
  4019f0:	str	x0, [sp, #72]
  4019f4:	ldr	x0, [sp, #72]
  4019f8:	cmp	x0, #0x0
  4019fc:	b.ne	401a24 <track_pid+0x17c>  // b.any
  401a00:	adrp	x0, 402000 <run+0x320>
  401a04:	add	x1, x0, #0x57b
  401a08:	adrp	x0, 402000 <run+0x320>
  401a0c:	add	x3, x0, #0x798
  401a10:	mov	w2, #0x28                  	// #40
  401a14:	mov	w0, #0x0                   	// #0
  401a18:	bl	401420 <log_oom_internal@plt>
  401a1c:	mov	w19, w0
  401a20:	b	401a8c <track_pid+0x1e4>
  401a24:	ldr	x0, [sp, #56]
  401a28:	ldr	x19, [x0]
  401a2c:	ldr	w0, [sp, #44]
  401a30:	bl	401840 <PID_TO_PTR>
  401a34:	mov	x1, x0
  401a38:	ldr	x0, [sp, #72]
  401a3c:	mov	x2, x0
  401a40:	mov	x0, x19
  401a44:	bl	401390 <hashmap_put@plt>
  401a48:	str	w0, [sp, #68]
  401a4c:	ldr	w0, [sp, #68]
  401a50:	cmp	w0, #0x0
  401a54:	b.ge	401a7c <track_pid+0x1d4>  // b.tcont
  401a58:	adrp	x0, 402000 <run+0x320>
  401a5c:	add	x1, x0, #0x57b
  401a60:	adrp	x0, 402000 <run+0x320>
  401a64:	add	x3, x0, #0x798
  401a68:	mov	w2, #0x2c                  	// #44
  401a6c:	mov	w0, #0x0                   	// #0
  401a70:	bl	401420 <log_oom_internal@plt>
  401a74:	mov	w19, w0
  401a78:	b	401a8c <track_pid+0x1e4>
  401a7c:	ldr	x0, [sp, #72]
  401a80:	str	x0, [sp, #80]
  401a84:	str	xzr, [sp, #72]
  401a88:	mov	w19, #0x0                   	// #0
  401a8c:	add	x0, sp, #0x48
  401a90:	bl	401638 <freep>
  401a94:	mov	w1, w19
  401a98:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401a9c:	add	x0, x0, #0x800
  401aa0:	ldr	x2, [sp, #88]
  401aa4:	ldr	x0, [x0]
  401aa8:	eor	x0, x2, x0
  401aac:	cmp	x0, #0x0
  401ab0:	b.eq	401ab8 <track_pid+0x210>  // b.none
  401ab4:	bl	401300 <__stack_chk_fail@plt>
  401ab8:	mov	w0, w1
  401abc:	ldr	x19, [sp, #16]
  401ac0:	ldp	x29, x30, [sp], #96
  401ac4:	ret

0000000000401ac8 <do_remount>:
  401ac8:	stp	x29, x30, [sp, #-128]!
  401acc:	mov	x29, sp
  401ad0:	str	x0, [sp, #40]
  401ad4:	strb	w1, [sp, #39]
  401ad8:	str	x2, [sp, #24]
  401adc:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401ae0:	add	x0, x0, #0x800
  401ae4:	ldr	x1, [x0]
  401ae8:	str	x1, [sp, #120]
  401aec:	mov	x1, #0x0                   	// #0
  401af0:	mov	w0, #0x7                   	// #7
  401af4:	str	w0, [sp, #52]
  401af8:	str	wzr, [sp, #56]
  401afc:	str	wzr, [sp, #60]
  401b00:	ldr	w0, [sp, #60]
  401b04:	bl	401430 <log_get_max_level_realm@plt>
  401b08:	mov	w1, w0
  401b0c:	ldr	w0, [sp, #52]
  401b10:	and	w0, w0, #0x7
  401b14:	cmp	w1, w0
  401b18:	b.lt	401b60 <do_remount+0x98>  // b.tstop
  401b1c:	ldr	w0, [sp, #60]
  401b20:	lsl	w1, w0, #10
  401b24:	ldr	w0, [sp, #52]
  401b28:	orr	w7, w1, w0
  401b2c:	adrp	x0, 402000 <run+0x320>
  401b30:	add	x1, x0, #0x57b
  401b34:	ldr	x6, [sp, #40]
  401b38:	adrp	x0, 402000 <run+0x320>
  401b3c:	add	x5, x0, #0x5c0
  401b40:	adrp	x0, 402000 <run+0x320>
  401b44:	add	x4, x0, #0x7a8
  401b48:	mov	w3, #0x36                  	// #54
  401b4c:	mov	x2, x1
  401b50:	ldr	w1, [sp, #56]
  401b54:	mov	w0, w7
  401b58:	bl	401380 <log_internal_realm@plt>
  401b5c:	b	401b68 <do_remount+0xa0>
  401b60:	ldr	w0, [sp, #56]
  401b64:	cmp	w0, #0x0
  401b68:	ldrb	w0, [sp, #39]
  401b6c:	cmp	w0, #0x0
  401b70:	b.eq	401b80 <do_remount+0xb8>  // b.none
  401b74:	adrp	x0, 402000 <run+0x320>
  401b78:	add	x0, x0, #0x5d8
  401b7c:	b	401b88 <do_remount+0xc0>
  401b80:	adrp	x0, 402000 <run+0x320>
  401b84:	add	x0, x0, #0x5e8
  401b88:	add	x1, sp, #0x30
  401b8c:	mov	x2, x1
  401b90:	mov	w1, #0x225                 	// #549
  401b94:	bl	401874 <safe_fork>
  401b98:	str	w0, [sp, #64]
  401b9c:	ldr	w0, [sp, #64]
  401ba0:	cmp	w0, #0x0
  401ba4:	b.ge	401bb0 <do_remount+0xe8>  // b.tcont
  401ba8:	ldr	w0, [sp, #64]
  401bac:	b	401cb0 <do_remount+0x1e8>
  401bb0:	ldr	w0, [sp, #64]
  401bb4:	cmp	w0, #0x0
  401bb8:	b.ne	401c9c <do_remount+0x1d4>  // b.any
  401bbc:	adrp	x0, 402000 <run+0x320>
  401bc0:	add	x0, x0, #0x5f8
  401bc4:	str	x0, [sp, #80]
  401bc8:	ldr	x0, [sp, #40]
  401bcc:	str	x0, [sp, #88]
  401bd0:	adrp	x0, 402000 <run+0x320>
  401bd4:	add	x0, x0, #0x608
  401bd8:	str	x0, [sp, #96]
  401bdc:	ldrb	w0, [sp, #39]
  401be0:	cmp	w0, #0x0
  401be4:	b.eq	401bf4 <do_remount+0x12c>  // b.none
  401be8:	adrp	x0, 402000 <run+0x320>
  401bec:	add	x0, x0, #0x610
  401bf0:	b	401bfc <do_remount+0x134>
  401bf4:	adrp	x0, 402000 <run+0x320>
  401bf8:	add	x0, x0, #0x620
  401bfc:	str	x0, [sp, #104]
  401c00:	str	xzr, [sp, #112]
  401c04:	add	x0, sp, #0x50
  401c08:	mov	x1, x0
  401c0c:	adrp	x0, 402000 <run+0x320>
  401c10:	add	x0, x0, #0x5f8
  401c14:	bl	4013b0 <execv@plt>
  401c18:	mov	w0, #0x3                   	// #3
  401c1c:	str	w0, [sp, #68]
  401c20:	bl	4012f0 <__errno_location@plt>
  401c24:	ldr	w0, [x0]
  401c28:	str	w0, [sp, #72]
  401c2c:	str	wzr, [sp, #76]
  401c30:	ldr	w0, [sp, #76]
  401c34:	bl	401430 <log_get_max_level_realm@plt>
  401c38:	mov	w1, w0
  401c3c:	ldr	w0, [sp, #68]
  401c40:	and	w0, w0, #0x7
  401c44:	cmp	w1, w0
  401c48:	b.lt	401c8c <do_remount+0x1c4>  // b.tstop
  401c4c:	ldr	w0, [sp, #76]
  401c50:	lsl	w1, w0, #10
  401c54:	ldr	w0, [sp, #68]
  401c58:	orr	w6, w1, w0
  401c5c:	adrp	x0, 402000 <run+0x320>
  401c60:	add	x1, x0, #0x57b
  401c64:	adrp	x0, 402000 <run+0x320>
  401c68:	add	x5, x0, #0x628
  401c6c:	adrp	x0, 402000 <run+0x320>
  401c70:	add	x4, x0, #0x7a8
  401c74:	mov	w3, #0x43                  	// #67
  401c78:	mov	x2, x1
  401c7c:	ldr	w1, [sp, #72]
  401c80:	mov	w0, w6
  401c84:	bl	401380 <log_internal_realm@plt>
  401c88:	b	401c94 <do_remount+0x1cc>
  401c8c:	ldr	w0, [sp, #72]
  401c90:	cmp	w0, #0x0
  401c94:	mov	w0, #0x1                   	// #1
  401c98:	bl	401240 <_exit@plt>
  401c9c:	ldr	w0, [sp, #48]
  401ca0:	mov	w2, w0
  401ca4:	ldr	x1, [sp, #40]
  401ca8:	ldr	x0, [sp, #24]
  401cac:	bl	4018a8 <track_pid>
  401cb0:	mov	w1, w0
  401cb4:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401cb8:	add	x0, x0, #0x800
  401cbc:	ldr	x2, [sp, #120]
  401cc0:	ldr	x0, [x0]
  401cc4:	eor	x0, x2, x0
  401cc8:	cmp	x0, #0x0
  401ccc:	b.eq	401cd4 <do_remount+0x20c>  // b.none
  401cd0:	bl	401300 <__stack_chk_fail@plt>
  401cd4:	mov	w0, w1
  401cd8:	ldp	x29, x30, [sp], #128
  401cdc:	ret

0000000000401ce0 <run>:
  401ce0:	stp	x29, x30, [sp, #-320]!
  401ce4:	mov	x29, sp
  401ce8:	stp	x19, x20, [sp, #16]
  401cec:	stp	x21, x22, [sp, #32]
  401cf0:	str	w0, [sp, #60]
  401cf4:	str	x1, [sp, #48]
  401cf8:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401cfc:	add	x0, x0, #0x800
  401d00:	ldr	x1, [x0]
  401d04:	str	x1, [sp, #312]
  401d08:	mov	x1, #0x0                   	// #0
  401d0c:	str	xzr, [sp, #144]
  401d10:	str	xzr, [sp, #152]
  401d14:	strb	wzr, [sp, #66]
  401d18:	bl	401220 <log_setup_service@plt>
  401d1c:	ldr	w0, [sp, #60]
  401d20:	cmp	w0, #0x1
  401d24:	b.le	401db8 <run+0xd8>
  401d28:	mov	w0, #0x3                   	// #3
  401d2c:	str	w0, [sp, #132]
  401d30:	mov	w0, #0x16                  	// #22
  401d34:	movk	w0, #0x4000, lsl #16
  401d38:	str	w0, [sp, #136]
  401d3c:	str	wzr, [sp, #140]
  401d40:	ldr	w0, [sp, #140]
  401d44:	bl	401430 <log_get_max_level_realm@plt>
  401d48:	mov	w1, w0
  401d4c:	ldr	w0, [sp, #132]
  401d50:	and	w0, w0, #0x7
  401d54:	cmp	w1, w0
  401d58:	b.lt	401da0 <run+0xc0>  // b.tstop
  401d5c:	ldr	w0, [sp, #140]
  401d60:	lsl	w1, w0, #10
  401d64:	ldr	w0, [sp, #132]
  401d68:	orr	w6, w1, w0
  401d6c:	adrp	x0, 402000 <run+0x320>
  401d70:	add	x1, x0, #0x57b
  401d74:	adrp	x0, 402000 <run+0x320>
  401d78:	add	x5, x0, #0x650
  401d7c:	adrp	x0, 402000 <run+0x320>
  401d80:	add	x4, x0, #0x7b8
  401d84:	mov	w3, #0x55                  	// #85
  401d88:	mov	x2, x1
  401d8c:	ldr	w1, [sp, #136]
  401d90:	mov	w0, w6
  401d94:	bl	401380 <log_internal_realm@plt>
  401d98:	mov	w19, w0
  401d9c:	b	402370 <run+0x690>
  401da0:	ldr	w0, [sp, #136]
  401da4:	cmp	w0, #0x0
  401da8:	cneg	w0, w0, lt  // lt = tstop
  401dac:	and	w0, w0, #0xff
  401db0:	neg	w19, w0
  401db4:	b	402370 <run+0x690>
  401db8:	mov	w0, #0x12                  	// #18
  401dbc:	bl	401250 <umask@plt>
  401dc0:	bl	401758 <fstab_path>
  401dc4:	mov	x2, x0
  401dc8:	adrp	x0, 402000 <run+0x320>
  401dcc:	add	x1, x0, #0x678
  401dd0:	mov	x0, x2
  401dd4:	bl	401270 <setmntent@plt>
  401dd8:	str	x0, [sp, #152]
  401ddc:	ldr	x0, [sp, #152]
  401de0:	cmp	x0, #0x0
  401de4:	b.ne	401fb0 <run+0x2d0>  // b.any
  401de8:	bl	4012f0 <__errno_location@plt>
  401dec:	ldr	w0, [x0]
  401df0:	cmp	w0, #0x2
  401df4:	b.eq	401fc8 <run+0x2e8>  // b.none
  401df8:	mov	w0, #0x3                   	// #3
  401dfc:	str	w0, [sp, #72]
  401e00:	bl	4012f0 <__errno_location@plt>
  401e04:	ldr	w0, [x0]
  401e08:	str	w0, [sp, #76]
  401e0c:	str	wzr, [sp, #80]
  401e10:	ldr	w0, [sp, #80]
  401e14:	bl	401430 <log_get_max_level_realm@plt>
  401e18:	mov	w1, w0
  401e1c:	ldr	w0, [sp, #72]
  401e20:	and	w0, w0, #0x7
  401e24:	cmp	w1, w0
  401e28:	b.lt	401e78 <run+0x198>  // b.tstop
  401e2c:	ldr	w0, [sp, #80]
  401e30:	lsl	w1, w0, #10
  401e34:	ldr	w0, [sp, #72]
  401e38:	orr	w19, w1, w0
  401e3c:	adrp	x0, 402000 <run+0x320>
  401e40:	add	x20, x0, #0x57b
  401e44:	bl	401758 <fstab_path>
  401e48:	mov	x6, x0
  401e4c:	adrp	x0, 402000 <run+0x320>
  401e50:	add	x5, x0, #0x680
  401e54:	adrp	x0, 402000 <run+0x320>
  401e58:	add	x4, x0, #0x7b8
  401e5c:	mov	w3, #0x5d                  	// #93
  401e60:	mov	x2, x20
  401e64:	ldr	w1, [sp, #76]
  401e68:	mov	w0, w19
  401e6c:	bl	401380 <log_internal_realm@plt>
  401e70:	mov	w19, w0
  401e74:	b	402370 <run+0x690>
  401e78:	ldr	w0, [sp, #76]
  401e7c:	cmp	w0, #0x0
  401e80:	cneg	w0, w0, lt  // lt = tstop
  401e84:	and	w0, w0, #0xff
  401e88:	neg	w19, w0
  401e8c:	b	402370 <run+0x690>
  401e90:	ldr	x0, [sp, #176]
  401e94:	ldr	x0, [x0, #8]
  401e98:	bl	402408 <mount_point_is_api>
  401e9c:	and	w0, w0, #0xff
  401ea0:	eor	w0, w0, #0x1
  401ea4:	and	w0, w0, #0xff
  401ea8:	cmp	w0, #0x0
  401eac:	b.eq	401f54 <run+0x274>  // b.none
  401eb0:	strb	wzr, [sp, #67]
  401eb4:	adrp	x0, 402000 <run+0x320>
  401eb8:	add	x0, x0, #0x760
  401ebc:	add	x2, sp, #0xb8
  401ec0:	mov	x3, x0
  401ec4:	ldp	x0, x1, [x3]
  401ec8:	stp	x0, x1, [x2]
  401ecc:	ldr	x0, [x3, #16]
  401ed0:	str	x0, [x2, #16]
  401ed4:	add	x0, sp, #0xb8
  401ed8:	str	x0, [sp, #168]
  401edc:	b	401f20 <run+0x240>
  401ee0:	ldr	x0, [sp, #176]
  401ee4:	ldr	x2, [x0, #8]
  401ee8:	ldr	x0, [sp, #168]
  401eec:	ldr	x0, [x0]
  401ef0:	mov	x1, x0
  401ef4:	mov	x0, x2
  401ef8:	bl	401210 <path_equal@plt>
  401efc:	and	w0, w0, #0xff
  401f00:	cmp	w0, #0x0
  401f04:	b.eq	401f14 <run+0x234>  // b.none
  401f08:	mov	w0, #0x1                   	// #1
  401f0c:	strb	w0, [sp, #67]
  401f10:	b	401f3c <run+0x25c>
  401f14:	ldr	x0, [sp, #168]
  401f18:	add	x0, x0, #0x8
  401f1c:	str	x0, [sp, #168]
  401f20:	ldr	x0, [sp, #168]
  401f24:	cmp	x0, #0x0
  401f28:	b.eq	401f3c <run+0x25c>  // b.none
  401f2c:	ldr	x0, [sp, #168]
  401f30:	ldr	x0, [x0]
  401f34:	cmp	x0, #0x0
  401f38:	b.ne	401ee0 <run+0x200>  // b.any
  401f3c:	ldrb	w0, [sp, #67]
  401f40:	eor	w0, w0, #0x1
  401f44:	and	w0, w0, #0xff
  401f48:	cmp	w0, #0x0
  401f4c:	b.eq	401f54 <run+0x274>  // b.none
  401f50:	b	401fb0 <run+0x2d0>
  401f54:	ldr	x0, [sp, #176]
  401f58:	ldr	x2, [x0, #8]
  401f5c:	adrp	x0, 402000 <run+0x320>
  401f60:	add	x1, x0, #0x548
  401f64:	mov	x0, x2
  401f68:	bl	401210 <path_equal@plt>
  401f6c:	and	w0, w0, #0xff
  401f70:	cmp	w0, #0x0
  401f74:	b.eq	401f80 <run+0x2a0>  // b.none
  401f78:	mov	w0, #0x1                   	// #1
  401f7c:	strb	w0, [sp, #66]
  401f80:	ldr	x0, [sp, #176]
  401f84:	ldr	x0, [x0, #8]
  401f88:	add	x1, sp, #0x90
  401f8c:	mov	x2, x1
  401f90:	mov	w1, #0x0                   	// #0
  401f94:	bl	401ac8 <do_remount>
  401f98:	str	w0, [sp, #68]
  401f9c:	ldr	w0, [sp, #68]
  401fa0:	cmp	w0, #0x0
  401fa4:	b.ge	401fb0 <run+0x2d0>  // b.tcont
  401fa8:	ldr	w19, [sp, #68]
  401fac:	b	402370 <run+0x690>
  401fb0:	ldr	x0, [sp, #152]
  401fb4:	bl	4012a0 <getmntent@plt>
  401fb8:	str	x0, [sp, #176]
  401fbc:	ldr	x0, [sp, #176]
  401fc0:	cmp	x0, #0x0
  401fc4:	b.ne	401e90 <run+0x1b0>  // b.any
  401fc8:	ldrb	w0, [sp, #66]
  401fcc:	eor	w0, w0, #0x1
  401fd0:	and	w0, w0, #0xff
  401fd4:	cmp	w0, #0x0
  401fd8:	b.eq	4020b8 <run+0x3d8>  // b.none
  401fdc:	adrp	x0, 402000 <run+0x320>
  401fe0:	add	x0, x0, #0x698
  401fe4:	bl	4012e0 <getenv_bool@plt>
  401fe8:	str	w0, [sp, #68]
  401fec:	ldr	w0, [sp, #68]
  401ff0:	cmp	w0, #0x0
  401ff4:	b.ge	40207c <run+0x39c>  // b.tcont
  401ff8:	ldr	w0, [sp, #68]
  401ffc:	cmn	w0, #0x6
  402000:	b.eq	40207c <run+0x39c>  // b.none
  402004:	mov	w0, #0x4                   	// #4
  402008:	str	w0, [sp, #84]
  40200c:	ldr	w0, [sp, #68]
  402010:	str	w0, [sp, #88]
  402014:	str	wzr, [sp, #92]
  402018:	ldr	w0, [sp, #92]
  40201c:	bl	401430 <log_get_max_level_realm@plt>
  402020:	mov	w1, w0
  402024:	ldr	w0, [sp, #84]
  402028:	and	w0, w0, #0x7
  40202c:	cmp	w1, w0
  402030:	b.lt	402074 <run+0x394>  // b.tstop
  402034:	ldr	w0, [sp, #92]
  402038:	lsl	w1, w0, #10
  40203c:	ldr	w0, [sp, #84]
  402040:	orr	w6, w1, w0
  402044:	adrp	x0, 402000 <run+0x320>
  402048:	add	x1, x0, #0x57b
  40204c:	adrp	x0, 402000 <run+0x320>
  402050:	add	x5, x0, #0x6b0
  402054:	adrp	x0, 402000 <run+0x320>
  402058:	add	x4, x0, #0x7b8
  40205c:	mov	w3, #0x74                  	// #116
  402060:	mov	x2, x1
  402064:	ldr	w1, [sp, #88]
  402068:	mov	w0, w6
  40206c:	bl	401380 <log_internal_realm@plt>
  402070:	b	40207c <run+0x39c>
  402074:	ldr	w0, [sp, #88]
  402078:	cmp	w0, #0x0
  40207c:	ldr	w0, [sp, #68]
  402080:	cmp	w0, #0x0
  402084:	b.le	4020b8 <run+0x3d8>
  402088:	add	x0, sp, #0x90
  40208c:	mov	x2, x0
  402090:	mov	w1, #0x1                   	// #1
  402094:	adrp	x0, 402000 <run+0x320>
  402098:	add	x0, x0, #0x548
  40209c:	bl	401ac8 <do_remount>
  4020a0:	str	w0, [sp, #68]
  4020a4:	ldr	w0, [sp, #68]
  4020a8:	cmp	w0, #0x0
  4020ac:	b.ge	4020b8 <run+0x3d8>  // b.tcont
  4020b0:	ldr	w19, [sp, #68]
  4020b4:	b	402370 <run+0x690>
  4020b8:	str	wzr, [sp, #68]
  4020bc:	b	402350 <run+0x670>
  4020c0:	str	xzr, [sp, #160]
  4020c4:	stp	xzr, xzr, [sp, #184]
  4020c8:	stp	xzr, xzr, [sp, #200]
  4020cc:	stp	xzr, xzr, [sp, #216]
  4020d0:	stp	xzr, xzr, [sp, #232]
  4020d4:	stp	xzr, xzr, [sp, #248]
  4020d8:	add	x0, sp, #0x200
  4020dc:	stp	xzr, xzr, [x0, #-248]
  4020e0:	add	x0, sp, #0x200
  4020e4:	stp	xzr, xzr, [x0, #-232]
  4020e8:	add	x0, sp, #0x200
  4020ec:	stp	xzr, xzr, [x0, #-216]
  4020f0:	add	x0, sp, #0xb8
  4020f4:	mov	w3, #0x4                   	// #4
  4020f8:	mov	x2, x0
  4020fc:	mov	w1, #0x0                   	// #0
  402100:	mov	w0, #0x0                   	// #0
  402104:	bl	401310 <waitid@plt>
  402108:	cmp	w0, #0x0
  40210c:	b.ge	4021bc <run+0x4dc>  // b.tcont
  402110:	bl	4012f0 <__errno_location@plt>
  402114:	ldr	w0, [x0]
  402118:	cmp	w0, #0x4
  40211c:	b.ne	402128 <run+0x448>  // b.any
  402120:	mov	w20, #0x0                   	// #0
  402124:	b	402334 <run+0x654>
  402128:	mov	w0, #0x3                   	// #3
  40212c:	str	w0, [sp, #120]
  402130:	bl	4012f0 <__errno_location@plt>
  402134:	ldr	w0, [x0]
  402138:	str	w0, [sp, #124]
  40213c:	str	wzr, [sp, #128]
  402140:	ldr	w0, [sp, #128]
  402144:	bl	401430 <log_get_max_level_realm@plt>
  402148:	mov	w1, w0
  40214c:	ldr	w0, [sp, #120]
  402150:	and	w0, w0, #0x7
  402154:	cmp	w1, w0
  402158:	b.lt	4021a0 <run+0x4c0>  // b.tstop
  40215c:	ldr	w0, [sp, #128]
  402160:	lsl	w1, w0, #10
  402164:	ldr	w0, [sp, #120]
  402168:	orr	w6, w1, w0
  40216c:	adrp	x0, 402000 <run+0x320>
  402170:	add	x1, x0, #0x57b
  402174:	adrp	x0, 402000 <run+0x320>
  402178:	add	x5, x0, #0x6e8
  40217c:	adrp	x0, 402000 <run+0x320>
  402180:	add	x4, x0, #0x7b8
  402184:	mov	w3, #0x86                  	// #134
  402188:	mov	x2, x1
  40218c:	ldr	w1, [sp, #124]
  402190:	mov	w0, w6
  402194:	bl	401380 <log_internal_realm@plt>
  402198:	mov	w19, w0
  40219c:	b	4021b4 <run+0x4d4>
  4021a0:	ldr	w0, [sp, #124]
  4021a4:	cmp	w0, #0x0
  4021a8:	cneg	w0, w0, lt  // lt = tstop
  4021ac:	and	w0, w0, #0xff
  4021b0:	neg	w19, w0
  4021b4:	mov	w20, #0x1                   	// #1
  4021b8:	b	402334 <run+0x654>
  4021bc:	ldr	x20, [sp, #144]
  4021c0:	ldr	w0, [sp, #200]
  4021c4:	bl	401840 <PID_TO_PTR>
  4021c8:	mov	x1, x0
  4021cc:	mov	x0, x20
  4021d0:	bl	4016bc <hashmap_remove>
  4021d4:	str	x0, [sp, #160]
  4021d8:	ldr	x0, [sp, #160]
  4021dc:	cmp	x0, #0x0
  4021e0:	b.eq	402330 <run+0x650>  // b.none
  4021e4:	ldr	w0, [sp, #192]
  4021e8:	ldr	w1, [sp, #208]
  4021ec:	mov	x3, #0x0                   	// #0
  4021f0:	mov	w2, #0x1                   	// #1
  4021f4:	bl	401410 <is_clean_exit@plt>
  4021f8:	and	w0, w0, #0xff
  4021fc:	eor	w0, w0, #0x1
  402200:	and	w0, w0, #0xff
  402204:	cmp	w0, #0x0
  402208:	b.eq	402330 <run+0x650>  // b.none
  40220c:	ldr	w0, [sp, #192]
  402210:	cmp	w0, #0x1
  402214:	b.ne	4022a0 <run+0x5c0>  // b.any
  402218:	mov	w0, #0x3                   	// #3
  40221c:	str	w0, [sp, #108]
  402220:	str	wzr, [sp, #112]
  402224:	str	wzr, [sp, #116]
  402228:	ldr	w0, [sp, #116]
  40222c:	bl	401430 <log_get_max_level_realm@plt>
  402230:	mov	w1, w0
  402234:	ldr	w0, [sp, #108]
  402238:	and	w0, w0, #0x7
  40223c:	cmp	w1, w0
  402240:	b.lt	402294 <run+0x5b4>  // b.tstop
  402244:	ldr	w0, [sp, #116]
  402248:	lsl	w1, w0, #10
  40224c:	ldr	w0, [sp, #108]
  402250:	orr	w8, w1, w0
  402254:	adrp	x0, 402000 <run+0x320>
  402258:	add	x1, x0, #0x57b
  40225c:	ldr	x0, [sp, #160]
  402260:	ldr	w2, [sp, #208]
  402264:	mov	w7, w2
  402268:	mov	x6, x0
  40226c:	adrp	x0, 402000 <run+0x320>
  402270:	add	x5, x0, #0x700
  402274:	adrp	x0, 402000 <run+0x320>
  402278:	add	x4, x0, #0x7b8
  40227c:	mov	w3, #0x8d                  	// #141
  402280:	mov	x2, x1
  402284:	ldr	w1, [sp, #112]
  402288:	mov	w0, w8
  40228c:	bl	401380 <log_internal_realm@plt>
  402290:	b	402328 <run+0x648>
  402294:	ldr	w0, [sp, #112]
  402298:	cmp	w0, #0x0
  40229c:	b	402328 <run+0x648>
  4022a0:	mov	w0, #0x3                   	// #3
  4022a4:	str	w0, [sp, #96]
  4022a8:	str	wzr, [sp, #100]
  4022ac:	str	wzr, [sp, #104]
  4022b0:	ldr	w0, [sp, #104]
  4022b4:	bl	401430 <log_get_max_level_realm@plt>
  4022b8:	mov	w1, w0
  4022bc:	ldr	w0, [sp, #96]
  4022c0:	and	w0, w0, #0x7
  4022c4:	cmp	w1, w0
  4022c8:	b.lt	402320 <run+0x640>  // b.tstop
  4022cc:	ldr	w0, [sp, #104]
  4022d0:	lsl	w1, w0, #10
  4022d4:	ldr	w0, [sp, #96]
  4022d8:	orr	w20, w1, w0
  4022dc:	adrp	x0, 402000 <run+0x320>
  4022e0:	add	x21, x0, #0x57b
  4022e4:	ldr	x22, [sp, #160]
  4022e8:	ldr	w0, [sp, #208]
  4022ec:	bl	401330 <signal_to_string@plt>
  4022f0:	mov	x7, x0
  4022f4:	mov	x6, x22
  4022f8:	adrp	x0, 402000 <run+0x320>
  4022fc:	add	x5, x0, #0x730
  402300:	adrp	x0, 402000 <run+0x320>
  402304:	add	x4, x0, #0x7b8
  402308:	mov	w3, #0x8f                  	// #143
  40230c:	mov	x2, x21
  402310:	ldr	w1, [sp, #100]
  402314:	mov	w0, w20
  402318:	bl	401380 <log_internal_realm@plt>
  40231c:	b	402328 <run+0x648>
  402320:	ldr	w0, [sp, #100]
  402324:	cmp	w0, #0x0
  402328:	mov	w0, #0xfffffff8            	// #-8
  40232c:	str	w0, [sp, #68]
  402330:	mov	w20, #0x2                   	// #2
  402334:	add	x0, sp, #0xa0
  402338:	bl	401638 <freep>
  40233c:	cmp	w20, #0x0
  402340:	b.eq	402350 <run+0x670>  // b.none
  402344:	cmp	w20, #0x2
  402348:	b.ne	402370 <run+0x690>  // b.any
  40234c:	nop
  402350:	ldr	x0, [sp, #144]
  402354:	bl	4016fc <hashmap_isempty>
  402358:	and	w0, w0, #0xff
  40235c:	eor	w0, w0, #0x1
  402360:	and	w0, w0, #0xff
  402364:	cmp	w0, #0x0
  402368:	b.ne	4020c0 <run+0x3e0>  // b.any
  40236c:	ldr	w19, [sp, #68]
  402370:	add	x0, sp, #0x98
  402374:	bl	40180c <endmntentp>
  402378:	add	x0, sp, #0x90
  40237c:	bl	401724 <hashmap_free_freep>
  402380:	mov	w1, w19
  402384:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  402388:	add	x0, x0, #0x800
  40238c:	ldr	x2, [sp, #312]
  402390:	ldr	x0, [x0]
  402394:	eor	x0, x2, x0
  402398:	cmp	x0, #0x0
  40239c:	b.eq	4023a4 <run+0x6c4>  // b.none
  4023a0:	bl	401300 <__stack_chk_fail@plt>
  4023a4:	mov	w0, w1
  4023a8:	ldp	x19, x20, [sp, #16]
  4023ac:	ldp	x21, x22, [sp, #32]
  4023b0:	ldp	x29, x30, [sp], #320
  4023b4:	ret

00000000004023b8 <main>:
  4023b8:	stp	x29, x30, [sp, #-48]!
  4023bc:	mov	x29, sp
  4023c0:	str	w0, [sp, #28]
  4023c4:	str	x1, [sp, #16]
  4023c8:	ldr	x1, [sp, #16]
  4023cc:	ldr	w0, [sp, #28]
  4023d0:	bl	40165c <save_argc_argv>
  4023d4:	ldr	x1, [sp, #16]
  4023d8:	ldr	w0, [sp, #28]
  4023dc:	bl	401ce0 <run>
  4023e0:	str	w0, [sp, #44]
  4023e4:	bl	401320 <ask_password_agent_close@plt>
  4023e8:	bl	401200 <polkit_agent_close@plt>
  4023ec:	bl	401340 <pager_close@plt>
  4023f0:	bl	401400 <mac_selinux_finish@plt>
  4023f4:	bl	401784 <static_destruct>
  4023f8:	ldr	w0, [sp, #44]
  4023fc:	lsr	w0, w0, #31
  402400:	ldp	x29, x30, [sp], #48
  402404:	ret

0000000000402408 <mount_point_is_api>:
  402408:	stp	x29, x30, [sp, #-48]!
  40240c:	mov	x29, sp
  402410:	str	x0, [sp, #24]
  402414:	str	wzr, [sp, #44]
  402418:	b	40246c <mount_point_is_api+0x64>
  40241c:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  402420:	add	x2, x0, #0x808
  402424:	ldr	w1, [sp, #44]
  402428:	mov	x0, x1
  40242c:	lsl	x0, x0, #3
  402430:	sub	x0, x0, x1
  402434:	lsl	x0, x0, #3
  402438:	add	x0, x2, x0
  40243c:	ldr	x0, [x0, #8]
  402440:	mov	x1, x0
  402444:	ldr	x0, [sp, #24]
  402448:	bl	401210 <path_equal@plt>
  40244c:	and	w0, w0, #0xff
  402450:	cmp	w0, #0x0
  402454:	b.eq	402460 <mount_point_is_api+0x58>  // b.none
  402458:	mov	w0, #0x1                   	// #1
  40245c:	b	402494 <mount_point_is_api+0x8c>
  402460:	ldr	w0, [sp, #44]
  402464:	add	w0, w0, #0x1
  402468:	str	w0, [sp, #44]
  40246c:	ldr	w0, [sp, #44]
  402470:	cmp	w0, #0x13
  402474:	b.ls	40241c <mount_point_is_api+0x14>  // b.plast
  402478:	adrp	x0, 402000 <run+0x320>
  40247c:	add	x1, x0, #0x9e8
  402480:	ldr	x0, [sp, #24]
  402484:	bl	4012c0 <path_startswith@plt>
  402488:	cmp	x0, #0x0
  40248c:	cset	w0, ne  // ne = any
  402490:	and	w0, w0, #0xff
  402494:	ldp	x29, x30, [sp], #48
  402498:	ret
  40249c:	nop

00000000004024a0 <__libc_csu_init>:
  4024a0:	stp	x29, x30, [sp, #-64]!
  4024a4:	mov	x29, sp
  4024a8:	stp	x19, x20, [sp, #16]
  4024ac:	adrp	x20, 413000 <__FRAME_END__+0xfd00>
  4024b0:	add	x20, x20, #0x7f8
  4024b4:	stp	x21, x22, [sp, #32]
  4024b8:	adrp	x21, 413000 <__FRAME_END__+0xfd00>
  4024bc:	add	x21, x21, #0x7f0
  4024c0:	sub	x20, x20, x21
  4024c4:	mov	w22, w0
  4024c8:	stp	x23, x24, [sp, #48]
  4024cc:	mov	x23, x1
  4024d0:	mov	x24, x2
  4024d4:	bl	401180 <_init>
  4024d8:	cmp	xzr, x20, asr #3
  4024dc:	b.eq	402508 <__libc_csu_init+0x68>  // b.none
  4024e0:	asr	x20, x20, #3
  4024e4:	mov	x19, #0x0                   	// #0
  4024e8:	ldr	x3, [x21, x19, lsl #3]
  4024ec:	mov	x2, x24
  4024f0:	add	x19, x19, #0x1
  4024f4:	mov	x1, x23
  4024f8:	mov	w0, w22
  4024fc:	blr	x3
  402500:	cmp	x20, x19
  402504:	b.ne	4024e8 <__libc_csu_init+0x48>  // b.any
  402508:	ldp	x19, x20, [sp, #16]
  40250c:	ldp	x21, x22, [sp, #32]
  402510:	ldp	x23, x24, [sp, #48]
  402514:	ldp	x29, x30, [sp], #64
  402518:	ret
  40251c:	nop

0000000000402520 <__libc_csu_fini>:
  402520:	ret

Disassembly of section .fini:

0000000000402524 <_fini>:
  402524:	stp	x29, x30, [sp, #-16]!
  402528:	mov	x29, sp
  40252c:	ldp	x29, x30, [sp], #16
  402530:	ret
