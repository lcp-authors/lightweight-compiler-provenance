
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//binascii.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000016c8 <.init>:
    16c8:	stp	x29, x30, [sp, #-16]!
    16cc:	mov	x29, sp
    16d0:	bl	1930 <PyMem_Malloc@plt+0x10>
    16d4:	ldp	x29, x30, [sp], #16
    16d8:	ret

Disassembly of section .plt:

00000000000016e0 <_PyUnicode_Ready@plt-0x20>:
    16e0:	stp	x16, x30, [sp, #-16]!
    16e4:	adrp	x16, 15000 <PyInit_binascii@@Base+0x135fc>
    16e8:	ldr	x17, [x16, #4088]
    16ec:	add	x16, x16, #0xff8
    16f0:	br	x17
    16f4:	nop
    16f8:	nop
    16fc:	nop

0000000000001700 <_PyUnicode_Ready@plt>:
    1700:	adrp	x16, 16000 <_PyUnicode_Ready>
    1704:	ldr	x17, [x16]
    1708:	add	x16, x16, #0x0
    170c:	br	x17

0000000000001710 <PyModuleDef_Init@plt>:
    1710:	adrp	x16, 16000 <_PyUnicode_Ready>
    1714:	ldr	x17, [x16, #8]
    1718:	add	x16, x16, #0x8
    171c:	br	x17

0000000000001720 <PyMem_Free@plt>:
    1720:	adrp	x16, 16000 <_PyUnicode_Ready>
    1724:	ldr	x17, [x16, #16]
    1728:	add	x16, x16, #0x10
    172c:	br	x17

0000000000001730 <PyBuffer_Release@plt>:
    1730:	adrp	x16, 16000 <_PyUnicode_Ready>
    1734:	ldr	x17, [x16, #24]
    1738:	add	x16, x16, #0x18
    173c:	br	x17

0000000000001740 <__cxa_finalize@plt>:
    1740:	adrp	x16, 16000 <_PyUnicode_Ready>
    1744:	ldr	x17, [x16, #32]
    1748:	add	x16, x16, #0x20
    174c:	br	x17

0000000000001750 <crc32@plt>:
    1750:	adrp	x16, 16000 <_PyUnicode_Ready>
    1754:	ldr	x17, [x16, #40]
    1758:	add	x16, x16, #0x28
    175c:	br	x17

0000000000001760 <PyBuffer_IsContiguous@plt>:
    1760:	adrp	x16, 16000 <_PyUnicode_Ready>
    1764:	ldr	x17, [x16, #48]
    1768:	add	x16, x16, #0x30
    176c:	br	x17

0000000000001770 <PyBytes_FromStringAndSize@plt>:
    1770:	adrp	x16, 16000 <_PyUnicode_Ready>
    1774:	ldr	x17, [x16, #56]
    1778:	add	x16, x16, #0x38
    177c:	br	x17

0000000000001780 <_Py_Dealloc@plt>:
    1780:	adrp	x16, 16000 <_PyUnicode_Ready>
    1784:	ldr	x17, [x16, #64]
    1788:	add	x16, x16, #0x40
    178c:	br	x17

0000000000001790 <PyErr_NoMemory@plt>:
    1790:	adrp	x16, 16000 <_PyUnicode_Ready>
    1794:	ldr	x17, [x16, #72]
    1798:	add	x16, x16, #0x48
    179c:	br	x17

00000000000017a0 <_PyBytesWriter_Prepare@plt>:
    17a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17a4:	ldr	x17, [x16, #80]
    17a8:	add	x16, x16, #0x50
    17ac:	br	x17

00000000000017b0 <_PyArg_UnpackKeywords@plt>:
    17b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17b4:	ldr	x17, [x16, #88]
    17b8:	add	x16, x16, #0x58
    17bc:	br	x17

00000000000017c0 <PyErr_SetString@plt>:
    17c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17c4:	ldr	x17, [x16, #96]
    17c8:	add	x16, x16, #0x60
    17cc:	br	x17

00000000000017d0 <_PyBytesWriter_Finish@plt>:
    17d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17d4:	ldr	x17, [x16, #104]
    17d8:	add	x16, x16, #0x68
    17dc:	br	x17

00000000000017e0 <PyModule_GetState@plt>:
    17e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17e4:	ldr	x17, [x16, #112]
    17e8:	add	x16, x16, #0x70
    17ec:	br	x17

00000000000017f0 <memset@plt>:
    17f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17f4:	ldr	x17, [x16, #120]
    17f8:	add	x16, x16, #0x78
    17fc:	br	x17

0000000000001800 <_PyBytesWriter_Init@plt>:
    1800:	adrp	x16, 16000 <_PyUnicode_Ready>
    1804:	ldr	x17, [x16, #128]
    1808:	add	x16, x16, #0x80
    180c:	br	x17

0000000000001810 <_PyArg_BadArgument@plt>:
    1810:	adrp	x16, 16000 <_PyUnicode_Ready>
    1814:	ldr	x17, [x16, #136]
    1818:	add	x16, x16, #0x88
    181c:	br	x17

0000000000001820 <PyErr_NewException@plt>:
    1820:	adrp	x16, 16000 <_PyUnicode_Ready>
    1824:	ldr	x17, [x16, #144]
    1828:	add	x16, x16, #0x90
    182c:	br	x17

0000000000001830 <_PyBytesWriter_Alloc@plt>:
    1830:	adrp	x16, 16000 <_PyUnicode_Ready>
    1834:	ldr	x17, [x16, #152]
    1838:	add	x16, x16, #0x98
    183c:	br	x17

0000000000001840 <PyLong_AsUnsignedLongMask@plt>:
    1840:	adrp	x16, 16000 <_PyUnicode_Ready>
    1844:	ldr	x17, [x16, #160]
    1848:	add	x16, x16, #0xa0
    184c:	br	x17

0000000000001850 <__gmon_start__@plt>:
    1850:	adrp	x16, 16000 <_PyUnicode_Ready>
    1854:	ldr	x17, [x16, #168]
    1858:	add	x16, x16, #0xa8
    185c:	br	x17

0000000000001860 <_PyArg_CheckPositional@plt>:
    1860:	adrp	x16, 16000 <_PyUnicode_Ready>
    1864:	ldr	x17, [x16, #176]
    1868:	add	x16, x16, #0xb0
    186c:	br	x17

0000000000001870 <PyErr_Occurred@plt>:
    1870:	adrp	x16, 16000 <_PyUnicode_Ready>
    1874:	ldr	x17, [x16, #184]
    1878:	add	x16, x16, #0xb8
    187c:	br	x17

0000000000001880 <PyObject_GetBuffer@plt>:
    1880:	adrp	x16, 16000 <_PyUnicode_Ready>
    1884:	ldr	x17, [x16, #192]
    1888:	add	x16, x16, #0xc0
    188c:	br	x17

0000000000001890 <PyLong_FromUnsignedLong@plt>:
    1890:	adrp	x16, 16000 <_PyUnicode_Ready>
    1894:	ldr	x17, [x16, #200]
    1898:	add	x16, x16, #0xc8
    189c:	br	x17

00000000000018a0 <_Py_strhex_bytes_with_sep@plt>:
    18a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18a4:	ldr	x17, [x16, #208]
    18a8:	add	x16, x16, #0xd0
    18ac:	br	x17

00000000000018b0 <_PyBytesWriter_Dealloc@plt>:
    18b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18b4:	ldr	x17, [x16, #216]
    18b8:	add	x16, x16, #0xd8
    18bc:	br	x17

00000000000018c0 <memchr@plt>:
    18c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18c4:	ldr	x17, [x16, #224]
    18c8:	add	x16, x16, #0xe0
    18cc:	br	x17

00000000000018d0 <PyModule_AddObject@plt>:
    18d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18d4:	ldr	x17, [x16, #232]
    18d8:	add	x16, x16, #0xe8
    18dc:	br	x17

00000000000018e0 <PyType_IsSubtype@plt>:
    18e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18e4:	ldr	x17, [x16, #240]
    18e8:	add	x16, x16, #0xf0
    18ec:	br	x17

00000000000018f0 <PyErr_Format@plt>:
    18f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18f4:	ldr	x17, [x16, #248]
    18f8:	add	x16, x16, #0xf8
    18fc:	br	x17

0000000000001900 <_Py_BuildValue_SizeT@plt>:
    1900:	adrp	x16, 16000 <_PyUnicode_Ready>
    1904:	ldr	x17, [x16, #256]
    1908:	add	x16, x16, #0x100
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 16000 <_PyUnicode_Ready>
    1914:	ldr	x17, [x16, #264]
    1918:	add	x16, x16, #0x108
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 16000 <_PyUnicode_Ready>
    1924:	ldr	x17, [x16, #272]
    1928:	add	x16, x16, #0x110
    192c:	br	x17

Disassembly of section .text:

0000000000001930 <PyInit_binascii@@Base-0xd4>:
    1930:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    1934:	ldr	x0, [x0, #4048]
    1938:	cbz	x0, 1940 <PyMem_Malloc@plt+0x20>
    193c:	b	1850 <__gmon_start__@plt>
    1940:	ret
    1944:	nop
    1948:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    194c:	add	x0, x0, #0x548
    1950:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1954:	add	x1, x1, #0x548
    1958:	cmp	x1, x0
    195c:	b.eq	1974 <PyMem_Malloc@plt+0x54>  // b.none
    1960:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1964:	ldr	x1, [x1, #4008]
    1968:	cbz	x1, 1974 <PyMem_Malloc@plt+0x54>
    196c:	mov	x16, x1
    1970:	br	x16
    1974:	ret
    1978:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    197c:	add	x0, x0, #0x548
    1980:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1984:	add	x1, x1, #0x548
    1988:	sub	x1, x1, x0
    198c:	lsr	x2, x1, #63
    1990:	add	x1, x2, x1, asr #3
    1994:	cmp	xzr, x1, asr #1
    1998:	asr	x1, x1, #1
    199c:	b.eq	19b4 <PyMem_Malloc@plt+0x94>  // b.none
    19a0:	adrp	x2, 15000 <PyInit_binascii@@Base+0x135fc>
    19a4:	ldr	x2, [x2, #4064]
    19a8:	cbz	x2, 19b4 <PyMem_Malloc@plt+0x94>
    19ac:	mov	x16, x2
    19b0:	br	x16
    19b4:	ret
    19b8:	stp	x29, x30, [sp, #-32]!
    19bc:	mov	x29, sp
    19c0:	str	x19, [sp, #16]
    19c4:	adrp	x19, 16000 <PyInit_binascii@@Base+0x145fc>
    19c8:	ldrb	w0, [x19, #1352]
    19cc:	cbnz	w0, 19f4 <PyMem_Malloc@plt+0xd4>
    19d0:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    19d4:	ldr	x0, [x0, #4024]
    19d8:	cbz	x0, 19e8 <PyMem_Malloc@plt+0xc8>
    19dc:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    19e0:	ldr	x0, [x0, #280]
    19e4:	bl	1740 <__cxa_finalize@plt>
    19e8:	bl	1948 <PyMem_Malloc@plt+0x28>
    19ec:	mov	w0, #0x1                   	// #1
    19f0:	strb	w0, [x19, #1352]
    19f4:	ldr	x19, [sp, #16]
    19f8:	ldp	x29, x30, [sp], #32
    19fc:	ret
    1a00:	b	1978 <PyMem_Malloc@plt+0x58>

0000000000001a04 <PyInit_binascii@@Base>:
    1a04:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    1a08:	add	x0, x0, #0x120
    1a0c:	b	1710 <PyModuleDef_Init@plt>
    1a10:	sub	sp, sp, #0x90
    1a14:	stp	x29, x30, [sp, #80]
    1a18:	str	x23, [sp, #96]
    1a1c:	stp	x22, x21, [sp, #112]
    1a20:	stp	x20, x19, [sp, #128]
    1a24:	add	x29, sp, #0x50
    1a28:	mov	x8, x1
    1a2c:	mov	x20, x0
    1a30:	movi	v0.2d, #0x0
    1a34:	mov	x1, sp
    1a38:	mov	x0, x8
    1a3c:	stp	q0, q0, [sp, #48]
    1a40:	stp	q0, q0, [sp, #16]
    1a44:	str	q0, [sp]
    1a48:	bl	3d84 <PyInit_binascii@@Base+0x2380>
    1a4c:	cbz	w0, 1ba8 <PyInit_binascii@@Base+0x1a4>
    1a50:	ldr	x23, [sp]
    1a54:	ldr	x22, [sp, #16]
    1a58:	mov	x0, xzr
    1a5c:	ldrb	w8, [x23]
    1a60:	add	w8, w8, #0x20
    1a64:	and	w21, w8, #0x3f
    1a68:	mov	x1, x21
    1a6c:	bl	1770 <PyBytes_FromStringAndSize@plt>
    1a70:	mov	x19, x0
    1a74:	cbz	x0, 1bc4 <PyInit_binascii@@Base+0x1c0>
    1a78:	add	x8, x23, #0x1
    1a7c:	sub	x9, x22, #0x1
    1a80:	cbz	w21, 1b14 <PyInit_binascii@@Base+0x110>
    1a84:	mov	w13, wzr
    1a88:	mov	w11, wzr
    1a8c:	add	x10, x19, #0x20
    1a90:	mov	w12, #0xffffffff            	// #-1
    1a94:	b	1abc <PyInit_binascii@@Base+0xb8>
    1a98:	sub	w11, w11, #0x2
    1a9c:	lsr	w13, w14, w11
    1aa0:	lsl	w15, w12, w11
    1aa4:	strb	w13, [x10], #1
    1aa8:	bic	w13, w14, w15
    1aac:	sub	x21, x21, #0x1
    1ab0:	cmp	x21, #0x0
    1ab4:	add	x8, x8, #0x1
    1ab8:	b.le	1b14 <PyInit_binascii@@Base+0x110>
    1abc:	subs	x9, x9, #0x1
    1ac0:	b.lt	1af4 <PyInit_binascii@@Base+0xf0>  // b.tstop
    1ac4:	ldrb	w15, [x8]
    1ac8:	mov	w14, wzr
    1acc:	cmp	w15, #0xa
    1ad0:	b.eq	1af8 <PyInit_binascii@@Base+0xf4>  // b.none
    1ad4:	cmp	w15, #0xd
    1ad8:	b.eq	1af8 <PyInit_binascii@@Base+0xf4>  // b.none
    1adc:	sub	w14, w15, #0x20
    1ae0:	cmp	w14, #0x41
    1ae4:	b.cs	1b7c <PyInit_binascii@@Base+0x178>  // b.hs, b.nlast
    1ae8:	add	w14, w15, #0x20
    1aec:	and	w14, w14, #0x3f
    1af0:	b	1af8 <PyInit_binascii@@Base+0xf4>
    1af4:	mov	w14, wzr
    1af8:	add	w15, w11, #0x6
    1afc:	cmp	w15, #0x8
    1b00:	bfi	w14, w13, #6, #26
    1b04:	b.ge	1a98 <PyInit_binascii@@Base+0x94>  // b.tcont
    1b08:	mov	w11, w15
    1b0c:	mov	w13, w14
    1b10:	b	1ab0 <PyInit_binascii@@Base+0xac>
    1b14:	cmp	x9, #0x1
    1b18:	b.lt	1bc4 <PyInit_binascii@@Base+0x1c0>  // b.tstop
    1b1c:	mov	x11, #0x2400                	// #9216
    1b20:	add	x9, x9, #0x1
    1b24:	mov	w10, #0x1                   	// #1
    1b28:	movk	x11, #0x1, lsl #32
    1b2c:	b	1b4c <PyInit_binascii@@Base+0x148>
    1b30:	lsl	x13, x10, x12
    1b34:	tst	x13, x11
    1b38:	b.eq	1b58 <PyInit_binascii@@Base+0x154>  // b.none
    1b3c:	sub	x9, x9, #0x1
    1b40:	cmp	x9, #0x1
    1b44:	add	x8, x8, #0x1
    1b48:	b.le	1bc4 <PyInit_binascii@@Base+0x1c0>
    1b4c:	ldrb	w12, [x8]
    1b50:	cmp	w12, #0x20
    1b54:	b.ls	1b30 <PyInit_binascii@@Base+0x12c>  // b.plast
    1b58:	cmp	w12, #0x60
    1b5c:	b.eq	1b3c <PyInit_binascii@@Base+0x138>  // b.none
    1b60:	mov	x0, x20
    1b64:	bl	17e0 <PyModule_GetState@plt>
    1b68:	cbz	x0, 1ba8 <PyInit_binascii@@Base+0x1a4>
    1b6c:	ldr	x0, [x0]
    1b70:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    1b74:	add	x1, x1, #0xef1
    1b78:	b	1b94 <PyInit_binascii@@Base+0x190>
    1b7c:	mov	x0, x20
    1b80:	bl	17e0 <PyModule_GetState@plt>
    1b84:	cbz	x0, 1ba8 <PyInit_binascii@@Base+0x1a4>
    1b88:	ldr	x0, [x0]
    1b8c:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    1b90:	add	x1, x1, #0xee4
    1b94:	bl	17c0 <PyErr_SetString@plt>
    1b98:	ldr	x8, [x19]
    1b9c:	subs	x8, x8, #0x1
    1ba0:	str	x8, [x19]
    1ba4:	b.eq	1bb8 <PyInit_binascii@@Base+0x1b4>  // b.none
    1ba8:	mov	x19, xzr
    1bac:	ldr	x8, [sp, #8]
    1bb0:	cbnz	x8, 1bcc <PyInit_binascii@@Base+0x1c8>
    1bb4:	b	1bd4 <PyInit_binascii@@Base+0x1d0>
    1bb8:	mov	x0, x19
    1bbc:	bl	1780 <_Py_Dealloc@plt>
    1bc0:	mov	x19, xzr
    1bc4:	ldr	x8, [sp, #8]
    1bc8:	cbz	x8, 1bd4 <PyInit_binascii@@Base+0x1d0>
    1bcc:	mov	x0, sp
    1bd0:	bl	1730 <PyBuffer_Release@plt>
    1bd4:	mov	x0, x19
    1bd8:	ldp	x20, x19, [sp, #128]
    1bdc:	ldp	x22, x21, [sp, #112]
    1be0:	ldr	x23, [sp, #96]
    1be4:	ldp	x29, x30, [sp, #80]
    1be8:	add	sp, sp, #0x90
    1bec:	ret
    1bf0:	stp	x29, x30, [sp, #-64]!
    1bf4:	str	x28, [sp, #16]
    1bf8:	stp	x22, x21, [sp, #32]
    1bfc:	stp	x20, x19, [sp, #48]
    1c00:	mov	x29, sp
    1c04:	sub	sp, sp, #0x2a0
    1c08:	mov	x21, x2
    1c0c:	mov	x19, x1
    1c10:	mov	x20, x0
    1c14:	cbz	x3, 1c20 <PyInit_binascii@@Base+0x21c>
    1c18:	ldr	x22, [x3, #16]
    1c1c:	b	1c24 <PyInit_binascii@@Base+0x220>
    1c20:	mov	x22, xzr
    1c24:	movi	v0.2d, #0x0
    1c28:	stp	q0, q0, [sp, #64]
    1c2c:	stp	q0, q0, [sp, #32]
    1c30:	str	q0, [sp, #16]
    1c34:	cbz	x19, 1c44 <PyInit_binascii@@Base+0x240>
    1c38:	cmp	x21, #0x1
    1c3c:	b.ne	1c44 <PyInit_binascii@@Base+0x240>  // b.any
    1c40:	cbz	x3, 1c78 <PyInit_binascii@@Base+0x274>
    1c44:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    1c48:	add	x8, sp, #0x68
    1c4c:	add	x4, x4, #0x3c8
    1c50:	mov	w5, #0x1                   	// #1
    1c54:	mov	w6, #0x1                   	// #1
    1c58:	mov	x0, x19
    1c5c:	mov	x1, x21
    1c60:	mov	x2, xzr
    1c64:	mov	w7, wzr
    1c68:	str	x8, [sp]
    1c6c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    1c70:	mov	x19, x0
    1c74:	cbz	x0, 1c90 <PyInit_binascii@@Base+0x28c>
    1c78:	ldr	x0, [x19]
    1c7c:	add	x1, sp, #0x10
    1c80:	mov	w2, wzr
    1c84:	bl	1880 <PyObject_GetBuffer@plt>
    1c88:	cbz	w0, 1cbc <PyInit_binascii@@Base+0x2b8>
    1c8c:	mov	x19, xzr
    1c90:	ldr	x8, [sp, #24]
    1c94:	cbz	x8, 1ca0 <PyInit_binascii@@Base+0x29c>
    1c98:	add	x0, sp, #0x10
    1c9c:	bl	1730 <PyBuffer_Release@plt>
    1ca0:	mov	x0, x19
    1ca4:	add	sp, sp, #0x2a0
    1ca8:	ldp	x20, x19, [sp, #48]
    1cac:	ldp	x22, x21, [sp, #32]
    1cb0:	ldr	x28, [sp, #16]
    1cb4:	ldp	x29, x30, [sp], #64
    1cb8:	ret
    1cbc:	add	x0, sp, #0x10
    1cc0:	mov	w1, #0x43                  	// #67
    1cc4:	bl	1760 <PyBuffer_IsContiguous@plt>
    1cc8:	cbz	w0, 1d0c <PyInit_binascii@@Base+0x308>
    1ccc:	add	x8, x22, x21
    1cd0:	cmp	x8, #0x1
    1cd4:	b.ne	1d30 <PyInit_binascii@@Base+0x32c>  // b.any
    1cd8:	mov	w19, wzr
    1cdc:	add	x0, sp, #0x78
    1ce0:	bl	1800 <_PyBytesWriter_Init@plt>
    1ce4:	ldr	x21, [sp, #32]
    1ce8:	cmp	x21, #0x2e
    1cec:	b.lt	1d74 <PyInit_binascii@@Base+0x370>  // b.tstop
    1cf0:	mov	x0, x20
    1cf4:	bl	17e0 <PyModule_GetState@plt>
    1cf8:	cbz	x0, 1c8c <PyInit_binascii@@Base+0x288>
    1cfc:	ldr	x0, [x0]
    1d00:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    1d04:	add	x1, x1, #0xf4d
    1d08:	b	1d6c <PyInit_binascii@@Base+0x368>
    1d0c:	ldr	x3, [x19]
    1d10:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    1d14:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    1d18:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    1d1c:	add	x0, x0, #0xdbe
    1d20:	add	x1, x1, #0xf0b
    1d24:	add	x2, x2, #0xf16
    1d28:	bl	1810 <_PyArg_BadArgument@plt>
    1d2c:	b	1c8c <PyInit_binascii@@Base+0x288>
    1d30:	ldr	x8, [x19, #8]
    1d34:	ldr	x0, [x8, #8]
    1d38:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1d3c:	ldr	x8, [x8, #4016]
    1d40:	cmp	x0, x8
    1d44:	b.eq	1d58 <PyInit_binascii@@Base+0x354>  // b.none
    1d48:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1d4c:	ldr	x1, [x1, #4016]
    1d50:	bl	18e0 <PyType_IsSubtype@plt>
    1d54:	cbz	w0, 1f94 <PyInit_binascii@@Base+0x590>
    1d58:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1d5c:	ldr	x8, [x8, #4040]
    1d60:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    1d64:	add	x1, x1, #0xf28
    1d68:	ldr	x0, [x8]
    1d6c:	bl	17c0 <PyErr_SetString@plt>
    1d70:	b	1c8c <PyInit_binascii@@Base+0x288>
    1d74:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    1d78:	add	x8, x21, #0x2
    1d7c:	movk	x9, #0x5556
    1d80:	ldr	x20, [sp, #16]
    1d84:	smulh	x8, x8, x9
    1d88:	add	x8, x8, x8, lsr #63
    1d8c:	mov	w1, #0x2                   	// #2
    1d90:	bfi	x1, x8, #2, #62
    1d94:	add	x0, sp, #0x78
    1d98:	bl	1830 <_PyBytesWriter_Alloc@plt>
    1d9c:	cbz	x0, 1c8c <PyInit_binascii@@Base+0x288>
    1da0:	cmp	x21, #0x0
    1da4:	add	w9, w21, #0x20
    1da8:	mov	w8, #0x60                  	// #96
    1dac:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    1db0:	mov	x1, x0
    1db4:	csel	w9, w9, w8, eq  // eq = none
    1db8:	cmp	x21, #0x1
    1dbc:	strb	w9, [x1], #1
    1dc0:	b.lt	1f74 <PyInit_binascii@@Base+0x570>  // b.tstop
    1dc4:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1dc8:	ldr	q0, [x12, #80]
    1dcc:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1dd0:	ldr	q1, [x12, #96]
    1dd4:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1dd8:	ldr	q2, [x12, #112]
    1ddc:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1de0:	ldr	q3, [x12, #128]
    1de4:	cmp	w19, #0x0
    1de8:	mov	w11, #0xaaab                	// #43691
    1dec:	cset	w12, eq  // eq = none
    1df0:	mov	w9, wzr
    1df4:	mov	w13, wzr
    1df8:	mov	w14, #0x1                   	// #1
    1dfc:	mov	w10, #0xb                   	// #11
    1e00:	movk	w11, #0xaaaa, lsl #16
    1e04:	dup	v4.16b, w12
    1e08:	mov	w12, #0xfffffffa            	// #-6
    1e0c:	mvni	v5.4s, #0x5
    1e10:	movi	v6.16b, #0x3f
    1e14:	movi	v7.16b, #0x20
    1e18:	movi	v16.16b, #0x60
    1e1c:	mvni	v17.4s, #0x5f
    1e20:	lsl	w9, w9, #8
    1e24:	tbz	w14, #0, 1e30 <PyInit_binascii@@Base+0x42c>
    1e28:	ldrb	w14, [x20]
    1e2c:	orr	w9, w9, w14
    1e30:	cmn	w13, #0x2
    1e34:	add	w17, w13, #0x8
    1e38:	b.lt	1e60 <PyInit_binascii@@Base+0x45c>  // b.tstop
    1e3c:	cmp	w17, #0xb
    1e40:	csel	w14, w17, w10, lt  // lt = tstop
    1e44:	sub	w13, w13, w14
    1e48:	add	w13, w13, #0xd
    1e4c:	cmp	w13, #0x5a
    1e50:	b.cs	1e68 <PyInit_binascii@@Base+0x464>  // b.hs, b.nlast
    1e54:	mov	x14, x1
    1e58:	mov	w13, w17
    1e5c:	b	1f28 <PyInit_binascii@@Base+0x524>
    1e60:	mov	w13, w17
    1e64:	b	1f5c <PyInit_binascii@@Base+0x558>
    1e68:	umull	x13, w13, w11
    1e6c:	lsr	x13, x13, #34
    1e70:	add	w15, w13, #0x1
    1e74:	dup	v21.4s, w17
    1e78:	and	x16, x15, #0x7ffffff0
    1e7c:	add	v18.4s, v21.4s, v0.4s
    1e80:	add	v19.4s, v21.4s, v1.4s
    1e84:	add	v20.4s, v21.4s, v2.4s
    1e88:	add	v21.4s, v21.4s, v3.4s
    1e8c:	add	x14, x1, x16
    1e90:	madd	w13, w16, w12, w17
    1e94:	dup	v22.4s, w9
    1e98:	mov	x17, x16
    1e9c:	add	v23.4s, v19.4s, v5.4s
    1ea0:	add	v25.4s, v21.4s, v5.4s
    1ea4:	add	v24.4s, v18.4s, v5.4s
    1ea8:	add	v26.4s, v20.4s, v5.4s
    1eac:	neg	v25.4s, v25.4s
    1eb0:	neg	v23.4s, v23.4s
    1eb4:	neg	v26.4s, v26.4s
    1eb8:	neg	v24.4s, v24.4s
    1ebc:	ushl	v25.4s, v22.4s, v25.4s
    1ec0:	ushl	v23.4s, v22.4s, v23.4s
    1ec4:	ushl	v26.4s, v22.4s, v26.4s
    1ec8:	ushl	v24.4s, v22.4s, v24.4s
    1ecc:	xtn	v23.4h, v23.4s
    1ed0:	xtn	v25.4h, v25.4s
    1ed4:	xtn2	v23.8h, v24.4s
    1ed8:	xtn2	v25.8h, v26.4s
    1edc:	xtn	v24.8b, v25.8h
    1ee0:	xtn2	v24.16b, v23.8h
    1ee4:	and	v23.16b, v24.16b, v6.16b
    1ee8:	cmtst	v24.16b, v24.16b, v6.16b
    1eec:	orr	v24.16b, v4.16b, v24.16b
    1ef0:	shl	v24.16b, v24.16b, #7
    1ef4:	add	v23.16b, v23.16b, v7.16b
    1ef8:	sshr	v24.16b, v24.16b, #7
    1efc:	bsl	v24.16b, v23.16b, v16.16b
    1f00:	add	v21.4s, v21.4s, v17.4s
    1f04:	add	v20.4s, v20.4s, v17.4s
    1f08:	add	v19.4s, v19.4s, v17.4s
    1f0c:	subs	x17, x17, #0x10
    1f10:	str	q24, [x1], #16
    1f14:	add	v18.4s, v18.4s, v17.4s
    1f18:	b.ne	1e9c <PyInit_binascii@@Base+0x498>  // b.any
    1f1c:	cmp	x16, x15
    1f20:	mov	x1, x14
    1f24:	b.eq	1f5c <PyInit_binascii@@Base+0x558>  // b.none
    1f28:	mov	x1, x14
    1f2c:	mov	w14, w13
    1f30:	sub	w13, w14, #0x6
    1f34:	lsr	w15, w9, w13
    1f38:	tst	w15, #0x3f
    1f3c:	and	w15, w15, #0x3f
    1f40:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    1f44:	add	w15, w15, #0x20
    1f48:	csel	w15, w15, w8, eq  // eq = none
    1f4c:	cmp	w14, #0xb
    1f50:	strb	w15, [x1], #1
    1f54:	mov	w14, w13
    1f58:	b.gt	1f30 <PyInit_binascii@@Base+0x52c>
    1f5c:	sub	x21, x21, #0x1
    1f60:	cmp	x21, #0x0
    1f64:	add	x20, x20, #0x1
    1f68:	cset	w14, gt
    1f6c:	b.gt	1e20 <PyInit_binascii@@Base+0x41c>
    1f70:	cbnz	w13, 1e20 <PyInit_binascii@@Base+0x41c>
    1f74:	mov	w8, #0xa                   	// #10
    1f78:	strb	w8, [x1], #1
    1f7c:	add	x0, sp, #0x78
    1f80:	bl	17d0 <_PyBytesWriter_Finish@plt>
    1f84:	mov	x19, x0
    1f88:	ldr	x8, [sp, #24]
    1f8c:	cbnz	x8, 1c98 <PyInit_binascii@@Base+0x294>
    1f90:	b	1ca0 <PyInit_binascii@@Base+0x29c>
    1f94:	ldr	x0, [x19, #8]
    1f98:	bl	1910 <_PyLong_AsInt@plt>
    1f9c:	mov	w19, w0
    1fa0:	cmn	w0, #0x1
    1fa4:	b.ne	1cdc <PyInit_binascii@@Base+0x2d8>  // b.any
    1fa8:	bl	1870 <PyErr_Occurred@plt>
    1fac:	cbnz	x0, 1c8c <PyInit_binascii@@Base+0x288>
    1fb0:	mov	w19, #0xffffffff            	// #-1
    1fb4:	b	1cdc <PyInit_binascii@@Base+0x2d8>
    1fb8:	stp	x29, x30, [sp, #-80]!
    1fbc:	str	x28, [sp, #16]
    1fc0:	stp	x24, x23, [sp, #32]
    1fc4:	stp	x22, x21, [sp, #48]
    1fc8:	stp	x20, x19, [sp, #64]
    1fcc:	mov	x29, sp
    1fd0:	sub	sp, sp, #0x280
    1fd4:	mov	x8, x1
    1fd8:	mov	x19, x0
    1fdc:	movi	v0.2d, #0x0
    1fe0:	mov	x1, sp
    1fe4:	mov	x0, x8
    1fe8:	stp	q0, q0, [sp, #48]
    1fec:	stp	q0, q0, [sp, #16]
    1ff0:	str	q0, [sp]
    1ff4:	bl	3d84 <PyInit_binascii@@Base+0x2380>
    1ff8:	cbz	w0, 2200 <PyInit_binascii@@Base+0x7fc>
    1ffc:	ldr	x21, [sp, #16]
    2000:	mov	x8, #0xfffffffffffffffd    	// #-3
    2004:	movk	x8, #0x7fff, lsl #48
    2008:	cmp	x21, x8
    200c:	b.lt	201c <PyInit_binascii@@Base+0x618>  // b.tstop
    2010:	bl	1790 <PyErr_NoMemory@plt>
    2014:	mov	x19, x0
    2018:	b	2204 <PyInit_binascii@@Base+0x800>
    201c:	add	x8, x21, #0x3
    2020:	ldr	x22, [sp]
    2024:	add	x9, x21, #0x6
    2028:	cmp	x8, #0x0
    202c:	csel	x8, x9, x8, lt  // lt = tstop
    2030:	asr	x8, x8, #2
    2034:	add	x0, sp, #0x58
    2038:	add	x20, x8, x8, lsl #1
    203c:	bl	1800 <_PyBytesWriter_Init@plt>
    2040:	add	x0, sp, #0x58
    2044:	mov	x1, x20
    2048:	bl	1830 <_PyBytesWriter_Alloc@plt>
    204c:	cbz	x0, 2200 <PyInit_binascii@@Base+0x7fc>
    2050:	mov	x20, x0
    2054:	cmp	x21, #0x1
    2058:	b.lt	21d8 <PyInit_binascii@@Base+0x7d4>  // b.tstop
    205c:	adrp	x9, 4000 <PyInit_binascii@@Base+0x25fc>
    2060:	mov	w11, wzr
    2064:	mov	w8, wzr
    2068:	mov	w24, wzr
    206c:	add	x9, x9, #0xa2e
    2070:	mov	w10, #0xffffffff            	// #-1
    2074:	mov	x23, x20
    2078:	b	209c <PyInit_binascii@@Base+0x698>
    207c:	sub	w24, w24, #0x2
    2080:	lsr	w12, w8, w24
    2084:	lsl	w13, w10, w24
    2088:	strb	w12, [x23], #1
    208c:	bic	w8, w8, w13
    2090:	subs	x21, x21, #0x1
    2094:	add	x22, x22, #0x1
    2098:	b.le	218c <PyInit_binascii@@Base+0x788>
    209c:	ldrsb	w12, [x22]
    20a0:	tbnz	w12, #31, 2090 <PyInit_binascii@@Base+0x68c>
    20a4:	and	x12, x12, #0xff
    20a8:	cmp	w12, #0x1f
    20ac:	b.gt	20c4 <PyInit_binascii@@Base+0x6c0>
    20b0:	cmp	w12, #0xa
    20b4:	b.eq	2090 <PyInit_binascii@@Base+0x68c>  // b.none
    20b8:	cmp	w12, #0xd
    20bc:	b.eq	2090 <PyInit_binascii@@Base+0x68c>  // b.none
    20c0:	b	2150 <PyInit_binascii@@Base+0x74c>
    20c4:	cmp	w12, #0x20
    20c8:	b.eq	2090 <PyInit_binascii@@Base+0x68c>  // b.none
    20cc:	cmp	w12, #0x3d
    20d0:	b.ne	2150 <PyInit_binascii@@Base+0x74c>  // b.any
    20d4:	cmp	w11, #0x2
    20d8:	b.lt	2090 <PyInit_binascii@@Base+0x68c>  // b.tstop
    20dc:	b.ne	21d4 <PyInit_binascii@@Base+0x7d0>  // b.any
    20e0:	mov	w11, #0x1                   	// #1
    20e4:	mov	w14, #0x3d                  	// #61
    20e8:	mov	x12, x21
    20ec:	mov	w13, #0x1                   	// #1
    20f0:	sxtb	w15, w14
    20f4:	tbnz	w15, #31, 2124 <PyInit_binascii@@Base+0x720>
    20f8:	and	w14, w14, #0xff
    20fc:	and	x15, x14, #0x7f
    2100:	ldrb	w15, [x9, x15]
    2104:	cmp	w15, #0xff
    2108:	b.eq	2124 <PyInit_binascii@@Base+0x720>  // b.none
    210c:	cmp	w13, #0x0
    2110:	csinv	w14, w14, wzr, eq  // eq = none
    2114:	sub	w13, w13, #0x1
    2118:	cmp	x12, #0x2
    211c:	b.ge	2130 <PyInit_binascii@@Base+0x72c>  // b.tcont
    2120:	b	217c <PyInit_binascii@@Base+0x778>
    2124:	mov	w14, #0xffffffff            	// #-1
    2128:	cmp	x12, #0x2
    212c:	b.lt	217c <PyInit_binascii@@Base+0x778>  // b.tstop
    2130:	cmn	w14, #0x1
    2134:	b.ne	217c <PyInit_binascii@@Base+0x778>  // b.any
    2138:	ldrb	w14, [x22, x11]
    213c:	sub	x12, x12, #0x1
    2140:	add	x11, x11, #0x1
    2144:	sxtb	w15, w14
    2148:	tbz	w15, #31, 20f8 <PyInit_binascii@@Base+0x6f4>
    214c:	b	2124 <PyInit_binascii@@Base+0x720>
    2150:	ldrb	w12, [x9, x12]
    2154:	cmp	w12, #0xff
    2158:	b.eq	2090 <PyInit_binascii@@Base+0x68c>  // b.none
    215c:	add	w11, w11, #0x1
    2160:	add	w13, w24, #0x6
    2164:	and	w11, w11, #0x3
    2168:	cmp	w13, #0x8
    216c:	orr	w8, w12, w8, lsl #6
    2170:	b.ge	207c <PyInit_binascii@@Base+0x678>  // b.tcont
    2174:	mov	w24, w13
    2178:	b	2090 <PyInit_binascii@@Base+0x68c>
    217c:	cmp	w14, #0x3d
    2180:	b.eq	21d4 <PyInit_binascii@@Base+0x7d0>  // b.none
    2184:	mov	w11, #0x2                   	// #2
    2188:	b	2090 <PyInit_binascii@@Base+0x68c>
    218c:	cbz	w24, 21d4 <PyInit_binascii@@Base+0x7d0>
    2190:	mov	x0, x19
    2194:	bl	17e0 <PyModule_GetState@plt>
    2198:	cbz	x0, 2200 <PyInit_binascii@@Base+0x7fc>
    219c:	ldr	x0, [x0]
    21a0:	cmp	w24, #0x6
    21a4:	b.ne	21ec <PyInit_binascii@@Base+0x7e8>  // b.any
    21a8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    21ac:	sub	x8, x23, x20
    21b0:	movk	x9, #0x5556
    21b4:	smulh	x8, x8, x9
    21b8:	add	x8, x8, x8, lsr #63
    21bc:	mov	w2, #0x1                   	// #1
    21c0:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    21c4:	bfi	x2, x8, #2, #62
    21c8:	add	x1, x1, #0xf66
    21cc:	bl	18f0 <PyErr_Format@plt>
    21d0:	b	21f8 <PyInit_binascii@@Base+0x7f4>
    21d4:	mov	x20, x23
    21d8:	add	x0, sp, #0x58
    21dc:	mov	x1, x20
    21e0:	bl	17d0 <_PyBytesWriter_Finish@plt>
    21e4:	mov	x19, x0
    21e8:	b	2204 <PyInit_binascii@@Base+0x800>
    21ec:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    21f0:	add	x1, x1, #0xfcb
    21f4:	bl	17c0 <PyErr_SetString@plt>
    21f8:	add	x0, sp, #0x58
    21fc:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    2200:	mov	x19, xzr
    2204:	ldr	x8, [sp, #8]
    2208:	cbz	x8, 2214 <PyInit_binascii@@Base+0x810>
    220c:	mov	x0, sp
    2210:	bl	1730 <PyBuffer_Release@plt>
    2214:	mov	x0, x19
    2218:	add	sp, sp, #0x280
    221c:	ldp	x20, x19, [sp, #64]
    2220:	ldp	x22, x21, [sp, #48]
    2224:	ldp	x24, x23, [sp, #32]
    2228:	ldr	x28, [sp, #16]
    222c:	ldp	x29, x30, [sp], #80
    2230:	ret
    2234:	stp	x29, x30, [sp, #-64]!
    2238:	str	x28, [sp, #16]
    223c:	stp	x22, x21, [sp, #32]
    2240:	stp	x20, x19, [sp, #48]
    2244:	mov	x29, sp
    2248:	sub	sp, sp, #0x2a0
    224c:	mov	x21, x2
    2250:	mov	x19, x1
    2254:	mov	x20, x0
    2258:	cbz	x3, 2264 <PyInit_binascii@@Base+0x860>
    225c:	ldr	x22, [x3, #16]
    2260:	b	2268 <PyInit_binascii@@Base+0x864>
    2264:	mov	x22, xzr
    2268:	movi	v0.2d, #0x0
    226c:	stp	q0, q0, [sp, #64]
    2270:	stp	q0, q0, [sp, #32]
    2274:	str	q0, [sp, #16]
    2278:	cbz	x19, 2288 <PyInit_binascii@@Base+0x884>
    227c:	cmp	x21, #0x1
    2280:	b.ne	2288 <PyInit_binascii@@Base+0x884>  // b.any
    2284:	cbz	x3, 22bc <PyInit_binascii@@Base+0x8b8>
    2288:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    228c:	add	x8, sp, #0x68
    2290:	add	x4, x4, #0x408
    2294:	mov	w5, #0x1                   	// #1
    2298:	mov	w6, #0x1                   	// #1
    229c:	mov	x0, x19
    22a0:	mov	x1, x21
    22a4:	mov	x2, xzr
    22a8:	mov	w7, wzr
    22ac:	str	x8, [sp]
    22b0:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    22b4:	mov	x19, x0
    22b8:	cbz	x0, 22d4 <PyInit_binascii@@Base+0x8d0>
    22bc:	ldr	x0, [x19]
    22c0:	add	x1, sp, #0x10
    22c4:	mov	w2, wzr
    22c8:	bl	1880 <PyObject_GetBuffer@plt>
    22cc:	cbz	w0, 2300 <PyInit_binascii@@Base+0x8fc>
    22d0:	mov	x19, xzr
    22d4:	ldr	x8, [sp, #24]
    22d8:	cbz	x8, 22e4 <PyInit_binascii@@Base+0x8e0>
    22dc:	add	x0, sp, #0x10
    22e0:	bl	1730 <PyBuffer_Release@plt>
    22e4:	mov	x0, x19
    22e8:	add	sp, sp, #0x2a0
    22ec:	ldp	x20, x19, [sp, #48]
    22f0:	ldp	x22, x21, [sp, #32]
    22f4:	ldr	x28, [sp, #16]
    22f8:	ldp	x29, x30, [sp], #64
    22fc:	ret
    2300:	add	x0, sp, #0x10
    2304:	mov	w1, #0x43                  	// #67
    2308:	bl	1760 <PyBuffer_IsContiguous@plt>
    230c:	cbz	w0, 2358 <PyInit_binascii@@Base+0x954>
    2310:	add	x8, x22, x21
    2314:	cmp	x8, #0x1
    2318:	b.ne	237c <PyInit_binascii@@Base+0x978>  // b.any
    231c:	mov	w19, #0xffffffff            	// #-1
    2320:	ldr	x21, [sp, #16]
    2324:	ldr	x22, [sp, #32]
    2328:	add	x0, sp, #0x78
    232c:	bl	1800 <_PyBytesWriter_Init@plt>
    2330:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    2334:	cmp	x22, x8
    2338:	b.lt	23c0 <PyInit_binascii@@Base+0x9bc>  // b.tstop
    233c:	mov	x0, x20
    2340:	bl	17e0 <PyModule_GetState@plt>
    2344:	cbz	x0, 22d0 <PyInit_binascii@@Base+0x8cc>
    2348:	ldr	x0, [x0]
    234c:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2350:	add	x1, x1, #0xfe5
    2354:	b	23b8 <PyInit_binascii@@Base+0x9b4>
    2358:	ldr	x3, [x19]
    235c:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2360:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2364:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    2368:	add	x0, x0, #0xdd0
    236c:	add	x1, x1, #0xf0b
    2370:	add	x2, x2, #0xf16
    2374:	bl	1810 <_PyArg_BadArgument@plt>
    2378:	b	22d0 <PyInit_binascii@@Base+0x8cc>
    237c:	ldr	x8, [x19, #8]
    2380:	ldr	x0, [x8, #8]
    2384:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2388:	ldr	x8, [x8, #4016]
    238c:	cmp	x0, x8
    2390:	b.eq	23a4 <PyInit_binascii@@Base+0x9a0>  // b.none
    2394:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2398:	ldr	x1, [x1, #4016]
    239c:	bl	18e0 <PyType_IsSubtype@plt>
    23a0:	cbz	w0, 244c <PyInit_binascii@@Base+0xa48>
    23a4:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    23a8:	ldr	x8, [x8, #4040]
    23ac:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    23b0:	add	x1, x1, #0xf28
    23b4:	ldr	x0, [x8]
    23b8:	bl	17c0 <PyErr_SetString@plt>
    23bc:	b	22d0 <PyInit_binascii@@Base+0x8cc>
    23c0:	cmp	w19, #0x0
    23c4:	mov	w8, #0x2                   	// #2
    23c8:	cinc	x8, x8, ne  // ne = any
    23cc:	add	x1, x8, x22, lsl #1
    23d0:	add	x0, sp, #0x78
    23d4:	bl	1830 <_PyBytesWriter_Alloc@plt>
    23d8:	cbz	x0, 22d0 <PyInit_binascii@@Base+0x8cc>
    23dc:	mov	x1, x0
    23e0:	cmp	x22, #0x1
    23e4:	b.lt	24b8 <PyInit_binascii@@Base+0xab4>  // b.tstop
    23e8:	adrp	x8, 5000 <PyInit_binascii@@Base+0x35fc>
    23ec:	mov	w9, wzr
    23f0:	mov	w11, wzr
    23f4:	add	x8, x8, #0x3
    23f8:	b	240c <PyInit_binascii@@Base+0xa08>
    23fc:	add	w11, w11, #0x8
    2400:	subs	x22, x22, #0x1
    2404:	add	x21, x21, #0x1
    2408:	b.le	246c <PyInit_binascii@@Base+0xa68>
    240c:	ldrb	w10, [x21]
    2410:	lsl	w9, w9, #8
    2414:	cmn	w11, #0x2
    2418:	orr	x9, x9, x10
    241c:	b.lt	23fc <PyInit_binascii@@Base+0x9f8>  // b.tstop
    2420:	add	w11, w11, #0xe
    2424:	sub	w12, w11, #0xc
    2428:	lsr	x12, x9, x12
    242c:	and	x12, x12, #0x3f
    2430:	ldrb	w12, [x8, x12]
    2434:	sub	w11, w11, #0x6
    2438:	cmp	w11, #0xb
    243c:	strb	w12, [x1], #1
    2440:	b.gt	2424 <PyInit_binascii@@Base+0xa20>
    2444:	sub	w11, w11, #0x6
    2448:	b	2400 <PyInit_binascii@@Base+0x9fc>
    244c:	ldr	x0, [x19, #8]
    2450:	bl	1910 <_PyLong_AsInt@plt>
    2454:	mov	w19, w0
    2458:	cmn	w0, #0x1
    245c:	b.ne	2320 <PyInit_binascii@@Base+0x91c>  // b.any
    2460:	bl	1870 <PyErr_Occurred@plt>
    2464:	cbnz	x0, 22d0 <PyInit_binascii@@Base+0x8cc>
    2468:	b	231c <PyInit_binascii@@Base+0x918>
    246c:	cmp	w11, #0x4
    2470:	b.eq	2498 <PyInit_binascii@@Base+0xa94>  // b.none
    2474:	cmp	w11, #0x2
    2478:	b.ne	24b8 <PyInit_binascii@@Base+0xab4>  // b.any
    247c:	lsl	w9, w10, #4
    2480:	and	x9, x9, #0x30
    2484:	ldrb	w8, [x8, x9]
    2488:	mov	w9, #0x3d3d                	// #15677
    248c:	sturh	w9, [x1, #1]
    2490:	strb	w8, [x1], #3
    2494:	b	24b8 <PyInit_binascii@@Base+0xab4>
    2498:	lsl	w9, w10, #2
    249c:	and	x9, x9, #0x3c
    24a0:	ldrb	w8, [x8, x9]
    24a4:	mov	w9, #0x3d                  	// #61
    24a8:	strb	w9, [x1, #1]
    24ac:	strb	w8, [x1]
    24b0:	add	x8, x1, #0x2
    24b4:	mov	x1, x8
    24b8:	cbz	w19, 24c4 <PyInit_binascii@@Base+0xac0>
    24bc:	mov	w8, #0xa                   	// #10
    24c0:	strb	w8, [x1], #1
    24c4:	add	x0, sp, #0x78
    24c8:	bl	17d0 <_PyBytesWriter_Finish@plt>
    24cc:	mov	x19, x0
    24d0:	ldr	x8, [sp, #24]
    24d4:	cbnz	x8, 22dc <PyInit_binascii@@Base+0x8d8>
    24d8:	b	22e4 <PyInit_binascii@@Base+0x8e0>
    24dc:	stp	x29, x30, [sp, #-48]!
    24e0:	stp	x28, x21, [sp, #16]
    24e4:	stp	x20, x19, [sp, #32]
    24e8:	mov	x29, sp
    24ec:	sub	sp, sp, #0x280
    24f0:	mov	x8, x1
    24f4:	mov	x19, x0
    24f8:	movi	v0.2d, #0x0
    24fc:	mov	x1, sp
    2500:	mov	x0, x8
    2504:	stp	q0, q0, [sp, #48]
    2508:	stp	q0, q0, [sp, #16]
    250c:	str	q0, [sp]
    2510:	bl	3d84 <PyInit_binascii@@Base+0x2380>
    2514:	cbz	w0, 2650 <PyInit_binascii@@Base+0xc4c>
    2518:	ldr	x20, [sp]
    251c:	ldr	x21, [sp, #16]
    2520:	add	x0, sp, #0x58
    2524:	bl	1800 <_PyBytesWriter_Init@plt>
    2528:	mov	x8, #0x7ffffffffffffffe    	// #9223372036854775806
    252c:	cmp	x21, x8
    2530:	b.lt	2548 <PyInit_binascii@@Base+0xb44>  // b.tstop
    2534:	bl	1790 <PyErr_NoMemory@plt>
    2538:	mov	x19, x0
    253c:	ldr	x8, [sp, #8]
    2540:	cbnz	x8, 265c <PyInit_binascii@@Base+0xc58>
    2544:	b	2664 <PyInit_binascii@@Base+0xc60>
    2548:	add	x1, x21, #0x2
    254c:	add	x0, sp, #0x58
    2550:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2554:	cbz	x0, 2650 <PyInit_binascii@@Base+0xc4c>
    2558:	mov	x1, x0
    255c:	cmp	x21, #0x1
    2560:	b.lt	2604 <PyInit_binascii@@Base+0xc00>  // b.tstop
    2564:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    2568:	mov	w8, wzr
    256c:	mov	w10, wzr
    2570:	add	x9, x21, #0x1
    2574:	add	x11, x11, #0xaae
    2578:	mov	w12, #0xffffffff            	// #-1
    257c:	b	25a4 <PyInit_binascii@@Base+0xba0>
    2580:	sub	w10, w10, #0x2
    2584:	lsr	w13, w8, w10
    2588:	lsl	w14, w12, w10
    258c:	strb	w13, [x1], #1
    2590:	bic	w8, w8, w14
    2594:	sub	x9, x9, #0x1
    2598:	cmp	x9, #0x1
    259c:	add	x20, x20, #0x1
    25a0:	b.le	25e4 <PyInit_binascii@@Base+0xbe0>
    25a4:	ldrb	w13, [x20]
    25a8:	cmp	w13, #0xa
    25ac:	b.eq	2594 <PyInit_binascii@@Base+0xb90>  // b.none
    25b0:	cmp	w13, #0xd
    25b4:	b.eq	2594 <PyInit_binascii@@Base+0xb90>  // b.none
    25b8:	ldrb	w14, [x11, x13]
    25bc:	cmp	w14, #0x7d
    25c0:	b.eq	262c <PyInit_binascii@@Base+0xc28>  // b.none
    25c4:	cmp	w13, #0x3a
    25c8:	b.eq	267c <PyInit_binascii@@Base+0xc78>  // b.none
    25cc:	add	w13, w10, #0x6
    25d0:	cmp	w13, #0x8
    25d4:	orr	w8, w14, w8, lsl #6
    25d8:	b.ge	2580 <PyInit_binascii@@Base+0xb7c>  // b.tcont
    25dc:	mov	w10, w13
    25e0:	b	2594 <PyInit_binascii@@Base+0xb90>
    25e4:	cbz	w10, 2604 <PyInit_binascii@@Base+0xc00>
    25e8:	mov	x0, x19
    25ec:	bl	17e0 <PyModule_GetState@plt>
    25f0:	cbz	x0, 2650 <PyInit_binascii@@Base+0xc4c>
    25f4:	ldr	x0, [x0, #8]
    25f8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    25fc:	add	x1, x1, #0x44
    2600:	b	2644 <PyInit_binascii@@Base+0xc40>
    2604:	mov	w19, wzr
    2608:	add	x0, sp, #0x58
    260c:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2610:	cbz	x0, 2650 <PyInit_binascii@@Base+0xc4c>
    2614:	mov	x1, x0
    2618:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    261c:	add	x0, x0, #0x6a
    2620:	mov	w2, w19
    2624:	bl	1900 <_Py_BuildValue_SizeT@plt>
    2628:	b	2538 <PyInit_binascii@@Base+0xb34>
    262c:	mov	x0, x19
    2630:	bl	17e0 <PyModule_GetState@plt>
    2634:	cbz	x0, 2650 <PyInit_binascii@@Base+0xc4c>
    2638:	ldr	x0, [x0]
    263c:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2640:	add	x1, x1, #0xee4
    2644:	bl	17c0 <PyErr_SetString@plt>
    2648:	add	x0, sp, #0x58
    264c:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    2650:	mov	x19, xzr
    2654:	ldr	x8, [sp, #8]
    2658:	cbz	x8, 2664 <PyInit_binascii@@Base+0xc60>
    265c:	mov	x0, sp
    2660:	bl	1730 <PyBuffer_Release@plt>
    2664:	mov	x0, x19
    2668:	add	sp, sp, #0x280
    266c:	ldp	x20, x19, [sp, #32]
    2670:	ldp	x28, x21, [sp, #16]
    2674:	ldp	x29, x30, [sp], #48
    2678:	ret
    267c:	mov	w19, #0x1                   	// #1
    2680:	b	2608 <PyInit_binascii@@Base+0xc04>
    2684:	stp	x29, x30, [sp, #-48]!
    2688:	str	x28, [sp, #16]
    268c:	stp	x20, x19, [sp, #32]
    2690:	mov	x29, sp
    2694:	sub	sp, sp, #0x280
    2698:	mov	x19, x1
    269c:	movi	v0.2d, #0x0
    26a0:	mov	x1, sp
    26a4:	mov	x0, x19
    26a8:	mov	w2, wzr
    26ac:	stp	q0, q0, [sp, #48]
    26b0:	stp	q0, q0, [sp, #16]
    26b4:	str	q0, [sp]
    26b8:	bl	1880 <PyObject_GetBuffer@plt>
    26bc:	cbz	w0, 26d0 <PyInit_binascii@@Base+0xccc>
    26c0:	mov	x19, xzr
    26c4:	ldr	x8, [sp, #8]
    26c8:	cbnz	x8, 27e8 <PyInit_binascii@@Base+0xde4>
    26cc:	b	27f0 <PyInit_binascii@@Base+0xdec>
    26d0:	mov	x0, sp
    26d4:	mov	w1, #0x43                  	// #67
    26d8:	bl	1760 <PyBuffer_IsContiguous@plt>
    26dc:	cbz	w0, 2704 <PyInit_binascii@@Base+0xd00>
    26e0:	ldr	x19, [sp]
    26e4:	ldr	x20, [sp, #16]
    26e8:	add	x0, sp, #0x58
    26ec:	bl	1800 <_PyBytesWriter_Init@plt>
    26f0:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    26f4:	cmp	x20, x8
    26f8:	b.lt	2734 <PyInit_binascii@@Base+0xd30>  // b.tstop
    26fc:	bl	1790 <PyErr_NoMemory@plt>
    2700:	b	27dc <PyInit_binascii@@Base+0xdd8>
    2704:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2708:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    270c:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    2710:	add	x0, x0, #0xde3
    2714:	add	x1, x1, #0x6d
    2718:	add	x2, x2, #0xf16
    271c:	mov	x3, x19
    2720:	bl	1810 <_PyArg_BadArgument@plt>
    2724:	mov	x19, xzr
    2728:	ldr	x8, [sp, #8]
    272c:	cbnz	x8, 27e8 <PyInit_binascii@@Base+0xde4>
    2730:	b	27f0 <PyInit_binascii@@Base+0xdec>
    2734:	lsl	x8, x20, #1
    2738:	add	x1, x8, #0x2
    273c:	add	x0, sp, #0x58
    2740:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2744:	cbz	x0, 26c0 <PyInit_binascii@@Base+0xcbc>
    2748:	mov	x1, x0
    274c:	cmp	x20, #0x1
    2750:	b.lt	27d4 <PyInit_binascii@@Base+0xdd0>  // b.tstop
    2754:	adrp	x8, 5000 <PyInit_binascii@@Base+0x35fc>
    2758:	mov	w9, wzr
    275c:	mov	w10, wzr
    2760:	add	x8, x8, #0x76
    2764:	b	2778 <PyInit_binascii@@Base+0xd74>
    2768:	add	w10, w10, #0x8
    276c:	subs	x20, x20, #0x1
    2770:	add	x19, x19, #0x1
    2774:	b.le	27b8 <PyInit_binascii@@Base+0xdb4>
    2778:	ldrb	w11, [x19]
    277c:	lsl	w9, w9, #8
    2780:	cmn	w10, #0x2
    2784:	orr	x9, x9, x11
    2788:	b.lt	2768 <PyInit_binascii@@Base+0xd64>  // b.tstop
    278c:	add	w10, w10, #0xe
    2790:	sub	w11, w10, #0xc
    2794:	lsr	x11, x9, x11
    2798:	and	x11, x11, #0x3f
    279c:	ldrb	w11, [x8, x11]
    27a0:	sub	w10, w10, #0x6
    27a4:	cmp	w10, #0xb
    27a8:	strb	w11, [x1], #1
    27ac:	b.gt	2790 <PyInit_binascii@@Base+0xd8c>
    27b0:	sub	w10, w10, #0x6
    27b4:	b	276c <PyInit_binascii@@Base+0xd68>
    27b8:	cbz	w10, 27d4 <PyInit_binascii@@Base+0xdd0>
    27bc:	mov	w11, #0x6                   	// #6
    27c0:	sub	w10, w11, w10
    27c4:	lsl	w9, w9, w10
    27c8:	and	x9, x9, #0x3f
    27cc:	ldrb	w8, [x8, x9]
    27d0:	strb	w8, [x1], #1
    27d4:	add	x0, sp, #0x58
    27d8:	bl	17d0 <_PyBytesWriter_Finish@plt>
    27dc:	mov	x19, x0
    27e0:	ldr	x8, [sp, #8]
    27e4:	cbz	x8, 27f0 <PyInit_binascii@@Base+0xdec>
    27e8:	mov	x0, sp
    27ec:	bl	1730 <PyBuffer_Release@plt>
    27f0:	mov	x0, x19
    27f4:	add	sp, sp, #0x280
    27f8:	ldp	x20, x19, [sp, #32]
    27fc:	ldr	x28, [sp, #16]
    2800:	ldp	x29, x30, [sp], #48
    2804:	ret
    2808:	sub	sp, sp, #0x70
    280c:	stp	x29, x30, [sp, #80]
    2810:	str	x19, [sp, #96]
    2814:	add	x29, sp, #0x50
    2818:	mov	x8, x1
    281c:	mov	x19, x0
    2820:	movi	v0.2d, #0x0
    2824:	mov	x1, sp
    2828:	mov	x0, x8
    282c:	stp	q0, q0, [sp, #48]
    2830:	stp	q0, q0, [sp, #16]
    2834:	str	q0, [sp]
    2838:	bl	3d84 <PyInit_binascii@@Base+0x2380>
    283c:	cbz	w0, 2874 <PyInit_binascii@@Base+0xe70>
    2840:	mov	x1, sp
    2844:	mov	x0, x19
    2848:	bl	3e9c <PyInit_binascii@@Base+0x2498>
    284c:	mov	x19, x0
    2850:	ldr	x8, [sp, #8]
    2854:	cbz	x8, 2860 <PyInit_binascii@@Base+0xe5c>
    2858:	mov	x0, sp
    285c:	bl	1730 <PyBuffer_Release@plt>
    2860:	mov	x0, x19
    2864:	ldr	x19, [sp, #96]
    2868:	ldp	x29, x30, [sp, #80]
    286c:	add	sp, sp, #0x70
    2870:	ret
    2874:	mov	x19, xzr
    2878:	ldr	x8, [sp, #8]
    287c:	cbnz	x8, 2858 <PyInit_binascii@@Base+0xe54>
    2880:	b	2860 <PyInit_binascii@@Base+0xe5c>
    2884:	sub	sp, sp, #0xb0
    2888:	stp	x29, x30, [sp, #128]
    288c:	str	x21, [sp, #144]
    2890:	stp	x20, x19, [sp, #160]
    2894:	add	x29, sp, #0x80
    2898:	mov	x20, x2
    289c:	mov	x19, x1
    28a0:	cbz	x3, 28ac <PyInit_binascii@@Base+0xea8>
    28a4:	ldr	x21, [x3, #16]
    28a8:	b	28b0 <PyInit_binascii@@Base+0xeac>
    28ac:	mov	x21, xzr
    28b0:	movi	v0.2d, #0x0
    28b4:	stp	q0, q0, [sp, #64]
    28b8:	stp	q0, q0, [sp, #32]
    28bc:	str	q0, [sp, #16]
    28c0:	cbz	x19, 28d4 <PyInit_binascii@@Base+0xed0>
    28c4:	sub	x8, x20, #0x1
    28c8:	cmp	x8, #0x2
    28cc:	b.hi	28d4 <PyInit_binascii@@Base+0xed0>  // b.pmore
    28d0:	cbz	x3, 2908 <PyInit_binascii@@Base+0xf04>
    28d4:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    28d8:	sub	x8, x29, #0x18
    28dc:	add	x4, x4, #0x448
    28e0:	mov	w5, #0x1                   	// #1
    28e4:	mov	w6, #0x3                   	// #3
    28e8:	mov	x0, x19
    28ec:	mov	x1, x20
    28f0:	mov	x2, xzr
    28f4:	mov	w7, wzr
    28f8:	str	x8, [sp]
    28fc:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2900:	mov	x19, x0
    2904:	cbz	x0, 29a8 <PyInit_binascii@@Base+0xfa4>
    2908:	ldr	x0, [x19]
    290c:	add	x1, sp, #0x10
    2910:	mov	w2, wzr
    2914:	bl	1880 <PyObject_GetBuffer@plt>
    2918:	cbz	w0, 292c <PyInit_binascii@@Base+0xf28>
    291c:	mov	x19, xzr
    2920:	ldr	x8, [sp, #24]
    2924:	cbnz	x8, 29b0 <PyInit_binascii@@Base+0xfac>
    2928:	b	29b8 <PyInit_binascii@@Base+0xfb4>
    292c:	add	x0, sp, #0x10
    2930:	mov	w1, #0x43                  	// #67
    2934:	bl	1760 <PyBuffer_IsContiguous@plt>
    2938:	cbz	w0, 2950 <PyInit_binascii@@Base+0xf4c>
    293c:	add	x8, x21, x20
    2940:	cmp	x8, #0x1
    2944:	b.ne	2980 <PyInit_binascii@@Base+0xf7c>  // b.any
    2948:	mov	x20, xzr
    294c:	b	2990 <PyInit_binascii@@Base+0xf8c>
    2950:	ldr	x3, [x19]
    2954:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2958:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    295c:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    2960:	add	x0, x0, #0xdf3
    2964:	add	x1, x1, #0xf8
    2968:	add	x2, x2, #0xf16
    296c:	bl	1810 <_PyArg_BadArgument@plt>
    2970:	mov	x19, xzr
    2974:	ldr	x8, [sp, #24]
    2978:	cbnz	x8, 29b0 <PyInit_binascii@@Base+0xfac>
    297c:	b	29b8 <PyInit_binascii@@Base+0xfb4>
    2980:	ldr	x20, [x19, #8]
    2984:	cmp	x8, #0x2
    2988:	b.ne	29d0 <PyInit_binascii@@Base+0xfcc>  // b.any
    298c:	cbz	x20, 29d0 <PyInit_binascii@@Base+0xfcc>
    2990:	mov	w3, #0x1                   	// #1
    2994:	ldr	x0, [sp, #16]
    2998:	ldr	x1, [sp, #32]
    299c:	mov	x2, x20
    29a0:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    29a4:	mov	x19, x0
    29a8:	ldr	x8, [sp, #24]
    29ac:	cbz	x8, 29b8 <PyInit_binascii@@Base+0xfb4>
    29b0:	add	x0, sp, #0x10
    29b4:	bl	1730 <PyBuffer_Release@plt>
    29b8:	mov	x0, x19
    29bc:	ldp	x20, x19, [sp, #160]
    29c0:	ldr	x21, [sp, #144]
    29c4:	ldp	x29, x30, [sp, #128]
    29c8:	add	sp, sp, #0xb0
    29cc:	ret
    29d0:	ldr	x8, [x19, #16]
    29d4:	ldr	x0, [x8, #8]
    29d8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    29dc:	ldr	x8, [x8, #4016]
    29e0:	cmp	x0, x8
    29e4:	b.eq	29f8 <PyInit_binascii@@Base+0xff4>  // b.none
    29e8:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    29ec:	ldr	x1, [x1, #4016]
    29f0:	bl	18e0 <PyType_IsSubtype@plt>
    29f4:	cbz	w0, 2a20 <PyInit_binascii@@Base+0x101c>
    29f8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    29fc:	ldr	x8, [x8, #4040]
    2a00:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2a04:	add	x1, x1, #0xf28
    2a08:	ldr	x0, [x8]
    2a0c:	bl	17c0 <PyErr_SetString@plt>
    2a10:	mov	x19, xzr
    2a14:	ldr	x8, [sp, #24]
    2a18:	cbnz	x8, 29b0 <PyInit_binascii@@Base+0xfac>
    2a1c:	b	29b8 <PyInit_binascii@@Base+0xfb4>
    2a20:	ldr	x0, [x19, #16]
    2a24:	bl	1910 <_PyLong_AsInt@plt>
    2a28:	cmn	w0, #0x1
    2a2c:	b.eq	2a38 <PyInit_binascii@@Base+0x1034>  // b.none
    2a30:	mov	w3, w0
    2a34:	b	2994 <PyInit_binascii@@Base+0xf90>
    2a38:	bl	1870 <PyErr_Occurred@plt>
    2a3c:	cbnz	x0, 291c <PyInit_binascii@@Base+0xf18>
    2a40:	mov	w3, #0xffffffff            	// #-1
    2a44:	b	2994 <PyInit_binascii@@Base+0xf90>
    2a48:	sub	sp, sp, #0xb0
    2a4c:	stp	x29, x30, [sp, #128]
    2a50:	str	x21, [sp, #144]
    2a54:	stp	x20, x19, [sp, #160]
    2a58:	add	x29, sp, #0x80
    2a5c:	mov	x20, x2
    2a60:	mov	x19, x1
    2a64:	cbz	x3, 2a70 <PyInit_binascii@@Base+0x106c>
    2a68:	ldr	x21, [x3, #16]
    2a6c:	b	2a74 <PyInit_binascii@@Base+0x1070>
    2a70:	mov	x21, xzr
    2a74:	movi	v0.2d, #0x0
    2a78:	stp	q0, q0, [sp, #64]
    2a7c:	stp	q0, q0, [sp, #32]
    2a80:	str	q0, [sp, #16]
    2a84:	cbz	x19, 2a98 <PyInit_binascii@@Base+0x1094>
    2a88:	sub	x8, x20, #0x1
    2a8c:	cmp	x8, #0x2
    2a90:	b.hi	2a98 <PyInit_binascii@@Base+0x1094>  // b.pmore
    2a94:	cbz	x3, 2acc <PyInit_binascii@@Base+0x10c8>
    2a98:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2a9c:	sub	x8, x29, #0x18
    2aa0:	add	x4, x4, #0x488
    2aa4:	mov	w5, #0x1                   	// #1
    2aa8:	mov	w6, #0x3                   	// #3
    2aac:	mov	x0, x19
    2ab0:	mov	x1, x20
    2ab4:	mov	x2, xzr
    2ab8:	mov	w7, wzr
    2abc:	str	x8, [sp]
    2ac0:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2ac4:	mov	x19, x0
    2ac8:	cbz	x0, 2b6c <PyInit_binascii@@Base+0x1168>
    2acc:	ldr	x0, [x19]
    2ad0:	add	x1, sp, #0x10
    2ad4:	mov	w2, wzr
    2ad8:	bl	1880 <PyObject_GetBuffer@plt>
    2adc:	cbz	w0, 2af0 <PyInit_binascii@@Base+0x10ec>
    2ae0:	mov	x19, xzr
    2ae4:	ldr	x8, [sp, #24]
    2ae8:	cbnz	x8, 2b74 <PyInit_binascii@@Base+0x1170>
    2aec:	b	2b7c <PyInit_binascii@@Base+0x1178>
    2af0:	add	x0, sp, #0x10
    2af4:	mov	w1, #0x43                  	// #67
    2af8:	bl	1760 <PyBuffer_IsContiguous@plt>
    2afc:	cbz	w0, 2b14 <PyInit_binascii@@Base+0x1110>
    2b00:	add	x8, x21, x20
    2b04:	cmp	x8, #0x1
    2b08:	b.ne	2b44 <PyInit_binascii@@Base+0x1140>  // b.any
    2b0c:	mov	x20, xzr
    2b10:	b	2b54 <PyInit_binascii@@Base+0x1150>
    2b14:	ldr	x3, [x19]
    2b18:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2b1c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2b20:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    2b24:	add	x0, x0, #0xdfd
    2b28:	add	x1, x1, #0xf8
    2b2c:	add	x2, x2, #0xf16
    2b30:	bl	1810 <_PyArg_BadArgument@plt>
    2b34:	mov	x19, xzr
    2b38:	ldr	x8, [sp, #24]
    2b3c:	cbnz	x8, 2b74 <PyInit_binascii@@Base+0x1170>
    2b40:	b	2b7c <PyInit_binascii@@Base+0x1178>
    2b44:	ldr	x20, [x19, #8]
    2b48:	cmp	x8, #0x2
    2b4c:	b.ne	2b94 <PyInit_binascii@@Base+0x1190>  // b.any
    2b50:	cbz	x20, 2b94 <PyInit_binascii@@Base+0x1190>
    2b54:	mov	w3, #0x1                   	// #1
    2b58:	ldr	x0, [sp, #16]
    2b5c:	ldr	x1, [sp, #32]
    2b60:	mov	x2, x20
    2b64:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    2b68:	mov	x19, x0
    2b6c:	ldr	x8, [sp, #24]
    2b70:	cbz	x8, 2b7c <PyInit_binascii@@Base+0x1178>
    2b74:	add	x0, sp, #0x10
    2b78:	bl	1730 <PyBuffer_Release@plt>
    2b7c:	mov	x0, x19
    2b80:	ldp	x20, x19, [sp, #160]
    2b84:	ldr	x21, [sp, #144]
    2b88:	ldp	x29, x30, [sp, #128]
    2b8c:	add	sp, sp, #0xb0
    2b90:	ret
    2b94:	ldr	x8, [x19, #16]
    2b98:	ldr	x0, [x8, #8]
    2b9c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2ba0:	ldr	x8, [x8, #4016]
    2ba4:	cmp	x0, x8
    2ba8:	b.eq	2bbc <PyInit_binascii@@Base+0x11b8>  // b.none
    2bac:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2bb0:	ldr	x1, [x1, #4016]
    2bb4:	bl	18e0 <PyType_IsSubtype@plt>
    2bb8:	cbz	w0, 2be4 <PyInit_binascii@@Base+0x11e0>
    2bbc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2bc0:	ldr	x8, [x8, #4040]
    2bc4:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2bc8:	add	x1, x1, #0xf28
    2bcc:	ldr	x0, [x8]
    2bd0:	bl	17c0 <PyErr_SetString@plt>
    2bd4:	mov	x19, xzr
    2bd8:	ldr	x8, [sp, #24]
    2bdc:	cbnz	x8, 2b74 <PyInit_binascii@@Base+0x1170>
    2be0:	b	2b7c <PyInit_binascii@@Base+0x1178>
    2be4:	ldr	x0, [x19, #16]
    2be8:	bl	1910 <_PyLong_AsInt@plt>
    2bec:	cmn	w0, #0x1
    2bf0:	b.eq	2bfc <PyInit_binascii@@Base+0x11f8>  // b.none
    2bf4:	mov	w3, w0
    2bf8:	b	2b58 <PyInit_binascii@@Base+0x1154>
    2bfc:	bl	1870 <PyErr_Occurred@plt>
    2c00:	cbnz	x0, 2ae0 <PyInit_binascii@@Base+0x10dc>
    2c04:	mov	w3, #0xffffffff            	// #-1
    2c08:	b	2b58 <PyInit_binascii@@Base+0x1154>
    2c0c:	sub	sp, sp, #0x70
    2c10:	stp	x29, x30, [sp, #80]
    2c14:	str	x19, [sp, #96]
    2c18:	add	x29, sp, #0x50
    2c1c:	mov	x8, x1
    2c20:	mov	x19, x0
    2c24:	movi	v0.2d, #0x0
    2c28:	mov	x1, sp
    2c2c:	mov	x0, x8
    2c30:	stp	q0, q0, [sp, #48]
    2c34:	stp	q0, q0, [sp, #16]
    2c38:	str	q0, [sp]
    2c3c:	bl	3d84 <PyInit_binascii@@Base+0x2380>
    2c40:	cbz	w0, 2c78 <PyInit_binascii@@Base+0x1274>
    2c44:	mov	x1, sp
    2c48:	mov	x0, x19
    2c4c:	bl	3e9c <PyInit_binascii@@Base+0x2498>
    2c50:	mov	x19, x0
    2c54:	ldr	x8, [sp, #8]
    2c58:	cbz	x8, 2c64 <PyInit_binascii@@Base+0x1260>
    2c5c:	mov	x0, sp
    2c60:	bl	1730 <PyBuffer_Release@plt>
    2c64:	mov	x0, x19
    2c68:	ldr	x19, [sp, #96]
    2c6c:	ldp	x29, x30, [sp, #80]
    2c70:	add	sp, sp, #0x70
    2c74:	ret
    2c78:	mov	x19, xzr
    2c7c:	ldr	x8, [sp, #8]
    2c80:	cbnz	x8, 2c5c <PyInit_binascii@@Base+0x1258>
    2c84:	b	2c64 <PyInit_binascii@@Base+0x1260>
    2c88:	stp	x29, x30, [sp, #-48]!
    2c8c:	str	x28, [sp, #16]
    2c90:	stp	x20, x19, [sp, #32]
    2c94:	mov	x29, sp
    2c98:	sub	sp, sp, #0x280
    2c9c:	mov	x19, x1
    2ca0:	movi	v0.2d, #0x0
    2ca4:	mov	x1, sp
    2ca8:	mov	x0, x19
    2cac:	mov	w2, wzr
    2cb0:	stp	q0, q0, [sp, #48]
    2cb4:	stp	q0, q0, [sp, #16]
    2cb8:	str	q0, [sp]
    2cbc:	bl	1880 <PyObject_GetBuffer@plt>
    2cc0:	cbz	w0, 2cf0 <PyInit_binascii@@Base+0x12ec>
    2cc4:	mov	x19, xzr
    2cc8:	ldr	x8, [sp, #8]
    2ccc:	cbz	x8, 2cd8 <PyInit_binascii@@Base+0x12d4>
    2cd0:	mov	x0, sp
    2cd4:	bl	1730 <PyBuffer_Release@plt>
    2cd8:	mov	x0, x19
    2cdc:	add	sp, sp, #0x280
    2ce0:	ldp	x20, x19, [sp, #32]
    2ce4:	ldr	x28, [sp, #16]
    2ce8:	ldp	x29, x30, [sp], #48
    2cec:	ret
    2cf0:	mov	x0, sp
    2cf4:	mov	w1, #0x43                  	// #67
    2cf8:	bl	1760 <PyBuffer_IsContiguous@plt>
    2cfc:	cbz	w0, 2d20 <PyInit_binascii@@Base+0x131c>
    2d00:	add	x0, sp, #0x58
    2d04:	bl	1800 <_PyBytesWriter_Init@plt>
    2d08:	ldr	x19, [sp, #16]
    2d0c:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    2d10:	cmp	x19, x8
    2d14:	b.lt	2d44 <PyInit_binascii@@Base+0x1340>  // b.tstop
    2d18:	bl	1790 <PyErr_NoMemory@plt>
    2d1c:	b	2e08 <PyInit_binascii@@Base+0x1404>
    2d20:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2d24:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2d28:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    2d2c:	add	x0, x0, #0xe05
    2d30:	add	x1, x1, #0x6d
    2d34:	add	x2, x2, #0xf16
    2d38:	mov	x3, x19
    2d3c:	bl	1810 <_PyArg_BadArgument@plt>
    2d40:	b	2cc4 <PyInit_binascii@@Base+0x12c0>
    2d44:	ldr	x20, [sp]
    2d48:	lsl	x8, x19, #1
    2d4c:	add	x1, x8, #0x2
    2d50:	add	x0, sp, #0x58
    2d54:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2d58:	cbz	x0, 2cc4 <PyInit_binascii@@Base+0x12c0>
    2d5c:	mov	x1, x0
    2d60:	cmp	x19, #0x1
    2d64:	b.lt	2e00 <PyInit_binascii@@Base+0x13fc>  // b.tstop
    2d68:	mov	x10, xzr
    2d6c:	add	x8, x20, #0x1
    2d70:	mov	w9, #0x90                  	// #144
    2d74:	b	2d88 <PyInit_binascii@@Base+0x1384>
    2d78:	strh	w9, [x1], #2
    2d7c:	add	x10, x10, #0x1
    2d80:	cmp	x10, x19
    2d84:	b.ge	2e00 <PyInit_binascii@@Base+0x13fc>  // b.tcont
    2d88:	ldrb	w11, [x20, x10]
    2d8c:	cmp	w11, #0x90
    2d90:	b.eq	2d78 <PyInit_binascii@@Base+0x1374>  // b.none
    2d94:	mov	x16, xzr
    2d98:	add	x13, x10, #0xff
    2d9c:	add	x14, x8, x10
    2da0:	add	x12, x10, x16
    2da4:	mov	x15, x16
    2da8:	add	x16, x12, #0x1
    2dac:	cmp	x16, x19
    2db0:	b.ge	2dcc <PyInit_binascii@@Base+0x13c8>  // b.tcont
    2db4:	cmp	x16, x13
    2db8:	b.ge	2dcc <PyInit_binascii@@Base+0x13c8>  // b.tcont
    2dbc:	ldrb	w16, [x14, x15]
    2dc0:	cmp	w16, w11
    2dc4:	add	x16, x15, #0x1
    2dc8:	b.eq	2da0 <PyInit_binascii@@Base+0x139c>  // b.none
    2dcc:	add	x13, x15, #0x1
    2dd0:	mov	x14, x1
    2dd4:	cmp	x13, #0x4
    2dd8:	strb	w11, [x14], #1
    2ddc:	b.lt	2df8 <PyInit_binascii@@Base+0x13f4>  // b.tstop
    2de0:	add	x10, x1, #0x3
    2de4:	strb	w9, [x1, #1]
    2de8:	strb	w13, [x1, #2]
    2dec:	mov	x1, x10
    2df0:	mov	x10, x12
    2df4:	b	2d7c <PyInit_binascii@@Base+0x1378>
    2df8:	mov	x1, x14
    2dfc:	b	2d7c <PyInit_binascii@@Base+0x1378>
    2e00:	add	x0, sp, #0x58
    2e04:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2e08:	mov	x19, x0
    2e0c:	ldr	x8, [sp, #8]
    2e10:	cbnz	x8, 2cd0 <PyInit_binascii@@Base+0x12cc>
    2e14:	b	2cd8 <PyInit_binascii@@Base+0x12d4>
    2e18:	stp	x29, x30, [sp, #-80]!
    2e1c:	stp	x28, x25, [sp, #16]
    2e20:	stp	x24, x23, [sp, #32]
    2e24:	stp	x22, x21, [sp, #48]
    2e28:	stp	x20, x19, [sp, #64]
    2e2c:	mov	x29, sp
    2e30:	sub	sp, sp, #0x280
    2e34:	mov	x20, x1
    2e38:	mov	x19, x0
    2e3c:	movi	v0.2d, #0x0
    2e40:	mov	x1, sp
    2e44:	mov	x0, x20
    2e48:	mov	w2, wzr
    2e4c:	stp	q0, q0, [sp, #48]
    2e50:	stp	q0, q0, [sp, #16]
    2e54:	str	q0, [sp]
    2e58:	bl	1880 <PyObject_GetBuffer@plt>
    2e5c:	cbz	w0, 2e94 <PyInit_binascii@@Base+0x1490>
    2e60:	mov	x19, xzr
    2e64:	ldr	x8, [sp, #8]
    2e68:	cbz	x8, 2e74 <PyInit_binascii@@Base+0x1470>
    2e6c:	mov	x0, sp
    2e70:	bl	1730 <PyBuffer_Release@plt>
    2e74:	mov	x0, x19
    2e78:	add	sp, sp, #0x280
    2e7c:	ldp	x20, x19, [sp, #64]
    2e80:	ldp	x22, x21, [sp, #48]
    2e84:	ldp	x24, x23, [sp, #32]
    2e88:	ldp	x28, x25, [sp, #16]
    2e8c:	ldp	x29, x30, [sp], #80
    2e90:	ret
    2e94:	mov	x0, sp
    2e98:	mov	w1, #0x43                  	// #67
    2e9c:	bl	1760 <PyBuffer_IsContiguous@plt>
    2ea0:	cbz	w0, 2ecc <PyInit_binascii@@Base+0x14c8>
    2ea4:	ldr	x21, [sp]
    2ea8:	ldr	x20, [sp, #16]
    2eac:	add	x0, sp, #0x58
    2eb0:	bl	1800 <_PyBytesWriter_Init@plt>
    2eb4:	cbz	x20, 2ef0 <PyInit_binascii@@Base+0x14ec>
    2eb8:	mov	x8, #0x4000000000000000    	// #4611686018427387904
    2ebc:	cmp	x20, x8
    2ec0:	b.lt	2f10 <PyInit_binascii@@Base+0x150c>  // b.tstop
    2ec4:	bl	1790 <PyErr_NoMemory@plt>
    2ec8:	b	2f00 <PyInit_binascii@@Base+0x14fc>
    2ecc:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2ed0:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2ed4:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    2ed8:	add	x0, x0, #0xe11
    2edc:	add	x1, x1, #0x6d
    2ee0:	add	x2, x2, #0xf16
    2ee4:	mov	x3, x20
    2ee8:	bl	1810 <_PyArg_BadArgument@plt>
    2eec:	b	2e60 <PyInit_binascii@@Base+0x145c>
    2ef0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2ef4:	add	x0, x0, #0x107
    2ef8:	mov	x1, xzr
    2efc:	bl	1770 <PyBytes_FromStringAndSize@plt>
    2f00:	mov	x19, x0
    2f04:	ldr	x8, [sp, #8]
    2f08:	cbnz	x8, 2e6c <PyInit_binascii@@Base+0x1468>
    2f0c:	b	2e74 <PyInit_binascii@@Base+0x1470>
    2f10:	add	x0, sp, #0x58
    2f14:	mov	x1, x20
    2f18:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2f1c:	cbz	x0, 2e60 <PyInit_binascii@@Base+0x145c>
    2f20:	mov	w8, #0x1                   	// #1
    2f24:	subs	x22, x20, #0x1
    2f28:	str	w8, [sp, #116]
    2f2c:	b.mi	3020 <PyInit_binascii@@Base+0x161c>  // b.first
    2f30:	mov	x8, x21
    2f34:	ldrb	w9, [x8], #1
    2f38:	mov	x1, x0
    2f3c:	cmp	w9, #0x90
    2f40:	b.ne	2f7c <PyInit_binascii@@Base+0x1578>  // b.any
    2f44:	subs	x22, x20, #0x2
    2f48:	b.mi	3020 <PyInit_binascii@@Base+0x161c>  // b.first
    2f4c:	ldr	x10, [sp, #104]
    2f50:	ldrb	w8, [x8]
    2f54:	sub	x10, x10, #0x1
    2f58:	str	x10, [sp, #104]
    2f5c:	cbz	w8, 2f78 <PyInit_binascii@@Base+0x1574>
    2f60:	mov	x0, x19
    2f64:	bl	17e0 <PyModule_GetState@plt>
    2f68:	cbz	x0, 2e60 <PyInit_binascii@@Base+0x145c>
    2f6c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2f70:	add	x1, x1, #0x108
    2f74:	b	3038 <PyInit_binascii@@Base+0x1634>
    2f78:	add	x8, x21, #0x2
    2f7c:	cmp	x22, #0x1
    2f80:	strb	w9, [x1], #1
    2f84:	b.lt	304c <PyInit_binascii@@Base+0x1648>  // b.tstop
    2f88:	mov	w23, #0x90                  	// #144
    2f8c:	mov	x24, x8
    2f90:	b	2fa8 <PyInit_binascii@@Base+0x15a4>
    2f94:	sub	x22, x22, #0x1
    2f98:	strb	w9, [x1], #1
    2f9c:	cmp	x22, #0x0
    2fa0:	mov	x8, x24
    2fa4:	b.le	304c <PyInit_binascii@@Base+0x1648>
    2fa8:	ldrb	w9, [x24], #1
    2fac:	cmp	w9, #0x90
    2fb0:	b.ne	2f94 <PyInit_binascii@@Base+0x1590>  // b.any
    2fb4:	cmp	x22, #0x1
    2fb8:	b.le	3020 <PyInit_binascii@@Base+0x161c>
    2fbc:	ldr	x9, [sp, #104]
    2fc0:	ldrb	w25, [x8, #1]
    2fc4:	sub	x22, x22, #0x2
    2fc8:	add	x24, x8, #0x2
    2fcc:	sub	x8, x9, #0x1
    2fd0:	str	x8, [sp, #104]
    2fd4:	cbz	x25, 3018 <PyInit_binascii@@Base+0x1614>
    2fd8:	cmp	w25, #0x1
    2fdc:	b.eq	2f9c <PyInit_binascii@@Base+0x1598>  // b.none
    2fe0:	ldurb	w20, [x1, #-1]
    2fe4:	sub	x2, x25, #0x1
    2fe8:	add	x0, sp, #0x58
    2fec:	bl	17a0 <_PyBytesWriter_Prepare@plt>
    2ff0:	cbz	x0, 3040 <PyInit_binascii@@Base+0x163c>
    2ff4:	sub	w8, w25, #0x1
    2ff8:	and	x2, x8, #0xff
    2ffc:	mov	w1, w20
    3000:	mov	x21, x0
    3004:	bl	17f0 <memset@plt>
    3008:	sub	w8, w25, #0x2
    300c:	add	x8, x21, w8, uxtb
    3010:	add	x1, x8, #0x1
    3014:	b	2f9c <PyInit_binascii@@Base+0x1598>
    3018:	strb	w23, [x1], #1
    301c:	b	2f9c <PyInit_binascii@@Base+0x1598>
    3020:	mov	x0, x19
    3024:	bl	17e0 <PyModule_GetState@plt>
    3028:	cbz	x0, 2e60 <PyInit_binascii@@Base+0x145c>
    302c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3030:	add	x0, x0, #0x8
    3034:	add	x1, x1, #0x107
    3038:	ldr	x0, [x0]
    303c:	bl	17c0 <PyErr_SetString@plt>
    3040:	add	x0, sp, #0x58
    3044:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    3048:	b	2e60 <PyInit_binascii@@Base+0x145c>
    304c:	add	x0, sp, #0x58
    3050:	bl	17d0 <_PyBytesWriter_Finish@plt>
    3054:	b	2f00 <PyInit_binascii@@Base+0x14fc>
    3058:	sub	sp, sp, #0x70
    305c:	stp	x29, x30, [sp, #80]
    3060:	str	x19, [sp, #96]
    3064:	add	x29, sp, #0x50
    3068:	mov	x19, x1
    306c:	movi	v0.2d, #0x0
    3070:	cmp	x2, #0x2
    3074:	stp	q0, q0, [sp, #48]
    3078:	stp	q0, q0, [sp, #16]
    307c:	str	q0, [sp]
    3080:	b.eq	30a4 <PyInit_binascii@@Base+0x16a0>  // b.none
    3084:	mov	x8, x2
    3088:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    308c:	add	x0, x0, #0xe1f
    3090:	mov	w2, #0x2                   	// #2
    3094:	mov	w3, #0x2                   	// #2
    3098:	mov	x1, x8
    309c:	bl	1860 <_PyArg_CheckPositional@plt>
    30a0:	cbz	w0, 312c <PyInit_binascii@@Base+0x1728>
    30a4:	ldr	x0, [x19]
    30a8:	mov	x1, sp
    30ac:	mov	w2, wzr
    30b0:	bl	1880 <PyObject_GetBuffer@plt>
    30b4:	cbnz	w0, 312c <PyInit_binascii@@Base+0x1728>
    30b8:	mov	x0, sp
    30bc:	mov	w1, #0x43                  	// #67
    30c0:	bl	1760 <PyBuffer_IsContiguous@plt>
    30c4:	cbz	w0, 310c <PyInit_binascii@@Base+0x1708>
    30c8:	ldr	x8, [x19, #8]
    30cc:	ldr	x0, [x8, #8]
    30d0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    30d4:	ldr	x8, [x8, #4016]
    30d8:	cmp	x0, x8
    30dc:	b.eq	30f0 <PyInit_binascii@@Base+0x16ec>  // b.none
    30e0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    30e4:	ldr	x1, [x1, #4016]
    30e8:	bl	18e0 <PyType_IsSubtype@plt>
    30ec:	cbz	w0, 3154 <PyInit_binascii@@Base+0x1750>
    30f0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    30f4:	ldr	x8, [x8, #4040]
    30f8:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    30fc:	add	x1, x1, #0xf28
    3100:	ldr	x0, [x8]
    3104:	bl	17c0 <PyErr_SetString@plt>
    3108:	b	312c <PyInit_binascii@@Base+0x1728>
    310c:	ldr	x3, [x19]
    3110:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    3114:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3118:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    311c:	add	x0, x0, #0xe1f
    3120:	add	x1, x1, #0xf0b
    3124:	add	x2, x2, #0xf16
    3128:	bl	1810 <_PyArg_BadArgument@plt>
    312c:	mov	x19, xzr
    3130:	ldr	x8, [sp, #8]
    3134:	cbz	x8, 3140 <PyInit_binascii@@Base+0x173c>
    3138:	mov	x0, sp
    313c:	bl	1730 <PyBuffer_Release@plt>
    3140:	mov	x0, x19
    3144:	ldr	x19, [sp, #96]
    3148:	ldp	x29, x30, [sp, #80]
    314c:	add	sp, sp, #0x70
    3150:	ret
    3154:	ldr	x0, [x19, #8]
    3158:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    315c:	mov	x19, x0
    3160:	cmn	w19, #0x1
    3164:	b.eq	31bc <PyInit_binascii@@Base+0x17b8>  // b.none
    3168:	ldr	x9, [sp, #16]
    316c:	and	w0, w19, #0xffff
    3170:	cmp	x9, #0x1
    3174:	b.lt	31a8 <PyInit_binascii@@Base+0x17a4>  // b.tstop
    3178:	ldr	x8, [sp]
    317c:	adrp	x10, 4000 <PyInit_binascii@@Base+0x25fc>
    3180:	add	x9, x9, #0x1
    3184:	add	x10, x10, #0xbae
    3188:	ldrb	w11, [x8], #1
    318c:	ubfiz	w12, w0, #8, #8
    3190:	sub	x9, x9, #0x1
    3194:	cmp	x9, #0x1
    3198:	eor	w11, w11, w0, lsr #8
    319c:	ldrh	w11, [x10, w11, uxtw #1]
    31a0:	eor	w0, w12, w11
    31a4:	b.gt	3188 <PyInit_binascii@@Base+0x1784>
    31a8:	bl	1890 <PyLong_FromUnsignedLong@plt>
    31ac:	mov	x19, x0
    31b0:	ldr	x8, [sp, #8]
    31b4:	cbnz	x8, 3138 <PyInit_binascii@@Base+0x1734>
    31b8:	b	3140 <PyInit_binascii@@Base+0x173c>
    31bc:	bl	1870 <PyErr_Occurred@plt>
    31c0:	cbnz	x0, 312c <PyInit_binascii@@Base+0x1728>
    31c4:	b	3168 <PyInit_binascii@@Base+0x1764>
    31c8:	sub	sp, sp, #0x70
    31cc:	stp	x29, x30, [sp, #80]
    31d0:	stp	x20, x19, [sp, #96]
    31d4:	add	x29, sp, #0x50
    31d8:	sub	x8, x2, #0x1
    31dc:	mov	x20, x2
    31e0:	mov	x19, x1
    31e4:	movi	v0.2d, #0x0
    31e8:	cmp	x8, #0x2
    31ec:	stp	q0, q0, [sp, #48]
    31f0:	stp	q0, q0, [sp, #16]
    31f4:	str	q0, [sp]
    31f8:	b.cc	3218 <PyInit_binascii@@Base+0x1814>  // b.lo, b.ul, b.last
    31fc:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    3200:	add	x0, x0, #0xe27
    3204:	mov	w2, #0x1                   	// #1
    3208:	mov	w3, #0x2                   	// #2
    320c:	mov	x1, x20
    3210:	bl	1860 <_PyArg_CheckPositional@plt>
    3214:	cbz	w0, 322c <PyInit_binascii@@Base+0x1828>
    3218:	ldr	x0, [x19]
    321c:	mov	x1, sp
    3220:	mov	w2, wzr
    3224:	bl	1880 <PyObject_GetBuffer@plt>
    3228:	cbz	w0, 3254 <PyInit_binascii@@Base+0x1850>
    322c:	mov	x19, xzr
    3230:	ldr	x8, [sp, #8]
    3234:	cbz	x8, 3240 <PyInit_binascii@@Base+0x183c>
    3238:	mov	x0, sp
    323c:	bl	1730 <PyBuffer_Release@plt>
    3240:	mov	x0, x19
    3244:	ldp	x20, x19, [sp, #96]
    3248:	ldp	x29, x30, [sp, #80]
    324c:	add	sp, sp, #0x70
    3250:	ret
    3254:	mov	x0, sp
    3258:	mov	w1, #0x43                  	// #67
    325c:	bl	1760 <PyBuffer_IsContiguous@plt>
    3260:	cbz	w0, 32a4 <PyInit_binascii@@Base+0x18a0>
    3264:	cmp	x20, #0x2
    3268:	b.ge	32c8 <PyInit_binascii@@Base+0x18c4>  // b.tcont
    326c:	mov	x0, xzr
    3270:	ldr	x1, [sp]
    3274:	ldr	w2, [sp, #16]
    3278:	and	x0, x0, #0xffffffff
    327c:	bl	1750 <crc32@plt>
    3280:	mov	x19, x0
    3284:	cmn	w19, #0x1
    3288:	b.eq	330c <PyInit_binascii@@Base+0x1908>  // b.none
    328c:	and	x0, x19, #0xffffffff
    3290:	bl	1890 <PyLong_FromUnsignedLong@plt>
    3294:	mov	x19, x0
    3298:	ldr	x8, [sp, #8]
    329c:	cbnz	x8, 3238 <PyInit_binascii@@Base+0x1834>
    32a0:	b	3240 <PyInit_binascii@@Base+0x183c>
    32a4:	ldr	x3, [x19]
    32a8:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    32ac:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    32b0:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    32b4:	add	x0, x0, #0xe27
    32b8:	add	x1, x1, #0xf0b
    32bc:	add	x2, x2, #0xf16
    32c0:	bl	1810 <_PyArg_BadArgument@plt>
    32c4:	b	322c <PyInit_binascii@@Base+0x1828>
    32c8:	ldr	x8, [x19, #8]
    32cc:	ldr	x0, [x8, #8]
    32d0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    32d4:	ldr	x8, [x8, #4016]
    32d8:	cmp	x0, x8
    32dc:	b.eq	32f0 <PyInit_binascii@@Base+0x18ec>  // b.none
    32e0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    32e4:	ldr	x1, [x1, #4016]
    32e8:	bl	18e0 <PyType_IsSubtype@plt>
    32ec:	cbz	w0, 3318 <PyInit_binascii@@Base+0x1914>
    32f0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    32f4:	ldr	x8, [x8, #4040]
    32f8:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    32fc:	add	x1, x1, #0xf28
    3300:	ldr	x0, [x8]
    3304:	bl	17c0 <PyErr_SetString@plt>
    3308:	b	322c <PyInit_binascii@@Base+0x1828>
    330c:	bl	1870 <PyErr_Occurred@plt>
    3310:	cbnz	x0, 322c <PyInit_binascii@@Base+0x1828>
    3314:	b	328c <PyInit_binascii@@Base+0x1888>
    3318:	ldr	x0, [x19, #8]
    331c:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    3320:	cmn	w0, #0x1
    3324:	b.ne	3270 <PyInit_binascii@@Base+0x186c>  // b.any
    3328:	bl	1870 <PyErr_Occurred@plt>
    332c:	cbnz	x0, 322c <PyInit_binascii@@Base+0x1828>
    3330:	mov	w0, #0xffffffff            	// #-1
    3334:	b	3270 <PyInit_binascii@@Base+0x186c>
    3338:	sub	sp, sp, #0xa0
    333c:	stp	x29, x30, [sp, #112]
    3340:	stp	x22, x21, [sp, #128]
    3344:	stp	x20, x19, [sp, #144]
    3348:	add	x29, sp, #0x70
    334c:	mov	x20, x2
    3350:	mov	x19, x1
    3354:	cbz	x3, 3360 <PyInit_binascii@@Base+0x195c>
    3358:	ldr	x21, [x3, #16]
    335c:	b	3364 <PyInit_binascii@@Base+0x1960>
    3360:	mov	x21, xzr
    3364:	movi	v0.2d, #0x0
    3368:	stp	q0, q0, [sp, #64]
    336c:	stp	q0, q0, [sp, #32]
    3370:	str	q0, [sp, #16]
    3374:	cbz	x19, 3388 <PyInit_binascii@@Base+0x1984>
    3378:	sub	x8, x20, #0x1
    337c:	cmp	x8, #0x1
    3380:	b.hi	3388 <PyInit_binascii@@Base+0x1984>  // b.pmore
    3384:	cbz	x3, 33bc <PyInit_binascii@@Base+0x19b8>
    3388:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    338c:	sub	x8, x29, #0x10
    3390:	add	x4, x4, #0x4c8
    3394:	mov	w5, #0x1                   	// #1
    3398:	mov	w6, #0x2                   	// #2
    339c:	mov	x0, x19
    33a0:	mov	x1, x20
    33a4:	mov	x2, xzr
    33a8:	mov	w7, wzr
    33ac:	str	x8, [sp]
    33b0:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    33b4:	mov	x19, x0
    33b8:	cbz	x0, 35d0 <PyInit_binascii@@Base+0x1bcc>
    33bc:	ldr	x0, [x19]
    33c0:	add	x1, sp, #0x10
    33c4:	bl	3d84 <PyInit_binascii@@Base+0x2380>
    33c8:	cbz	w0, 35a8 <PyInit_binascii@@Base+0x1ba4>
    33cc:	add	x8, x21, x20
    33d0:	cmp	x8, #0x1
    33d4:	b.ne	3560 <PyInit_binascii@@Base+0x1b5c>  // b.any
    33d8:	mov	w19, wzr
    33dc:	ldr	x21, [sp, #32]
    33e0:	ldr	x22, [sp, #16]
    33e4:	mov	x0, x21
    33e8:	bl	1920 <PyMem_Malloc@plt>
    33ec:	cbz	x0, 35a4 <PyInit_binascii@@Base+0x1ba0>
    33f0:	mov	w1, wzr
    33f4:	mov	x2, x21
    33f8:	mov	x20, x0
    33fc:	bl	17f0 <memset@plt>
    3400:	cmp	x21, #0x1
    3404:	b.lt	35b8 <PyInit_binascii@@Base+0x1bb4>  // b.tstop
    3408:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    340c:	ldr	x9, [x9, #4056]
    3410:	mov	x12, xzr
    3414:	mov	x1, xzr
    3418:	mov	w8, #0x3d                  	// #61
    341c:	mov	w10, #0x1                   	// #1
    3420:	mov	w11, #0x20                  	// #32
    3424:	b	3440 <PyInit_binascii@@Base+0x1a3c>
    3428:	strb	w13, [x20, x1]
    342c:	add	x13, x12, #0x1
    3430:	add	x1, x1, #0x1
    3434:	cmp	x13, x21
    3438:	mov	x12, x13
    343c:	b.ge	35bc <PyInit_binascii@@Base+0x1bb8>  // b.tcont
    3440:	ldrb	w13, [x22, x12]
    3444:	cmp	w13, #0x3d
    3448:	b.ne	3498 <PyInit_binascii@@Base+0x1a94>  // b.any
    344c:	add	x13, x12, #0x1
    3450:	cmp	x13, x21
    3454:	b.ge	35bc <PyInit_binascii@@Base+0x1bb8>  // b.tcont
    3458:	ldrb	w14, [x22, x13]
    345c:	cmp	w14, #0xa
    3460:	b.eq	3554 <PyInit_binascii@@Base+0x1b50>  // b.none
    3464:	cmp	w14, #0x3d
    3468:	b.eq	34b4 <PyInit_binascii@@Base+0x1ab0>  // b.none
    346c:	cmp	w14, #0xd
    3470:	b.ne	34c4 <PyInit_binascii@@Base+0x1ac0>  // b.any
    3474:	add	x12, x12, #0x2
    3478:	cmp	x21, x12
    347c:	b.eq	3550 <PyInit_binascii@@Base+0x1b4c>  // b.none
    3480:	ldrb	w13, [x22, x12]
    3484:	add	x12, x12, #0x1
    3488:	cmp	w13, #0xa
    348c:	b.ne	3478 <PyInit_binascii@@Base+0x1a74>  // b.any
    3490:	sub	x13, x12, #0x1
    3494:	b	3554 <PyInit_binascii@@Base+0x1b50>
    3498:	cbz	w19, 3428 <PyInit_binascii@@Base+0x1a24>
    349c:	cmp	w13, #0x5f
    34a0:	b.ne	3428 <PyInit_binascii@@Base+0x1a24>  // b.any
    34a4:	strb	w11, [x20, x1]
    34a8:	add	x1, x1, #0x1
    34ac:	add	x13, x12, #0x1
    34b0:	b	3434 <PyInit_binascii@@Base+0x1a30>
    34b4:	strb	w8, [x20, x1]
    34b8:	add	x1, x1, #0x1
    34bc:	add	x13, x12, #0x2
    34c0:	b	3434 <PyInit_binascii@@Base+0x1a30>
    34c4:	add	x15, x12, #0x2
    34c8:	cmp	x15, x21
    34cc:	b.ge	3540 <PyInit_binascii@@Base+0x1b3c>  // b.tcont
    34d0:	sub	w16, w14, #0x30
    34d4:	and	w16, w16, #0xff
    34d8:	cmp	w16, #0xa
    34dc:	b.cc	34f8 <PyInit_binascii@@Base+0x1af4>  // b.lo, b.ul, b.last
    34e0:	sub	w16, w14, #0x41
    34e4:	cmp	w16, #0x25
    34e8:	b.hi	3540 <PyInit_binascii@@Base+0x1b3c>  // b.pmore
    34ec:	lsl	x16, x10, x16
    34f0:	tst	x16, #0x3f0000003f
    34f4:	b.eq	3540 <PyInit_binascii@@Base+0x1b3c>  // b.none
    34f8:	ldrb	w15, [x22, x15]
    34fc:	sub	w16, w15, #0x30
    3500:	and	w16, w16, #0xff
    3504:	cmp	w16, #0xa
    3508:	b.cc	3524 <PyInit_binascii@@Base+0x1b20>  // b.lo, b.ul, b.last
    350c:	sub	w16, w15, #0x41
    3510:	cmp	w16, #0x25
    3514:	b.hi	3540 <PyInit_binascii@@Base+0x1b3c>  // b.pmore
    3518:	lsl	x16, x10, x16
    351c:	tst	x16, #0x3f0000003f
    3520:	b.eq	3540 <PyInit_binascii@@Base+0x1b3c>  // b.none
    3524:	ldrb	w13, [x9, x14]
    3528:	ldrb	w14, [x9, x15]
    352c:	orr	w13, w14, w13, lsl #4
    3530:	strb	w13, [x20, x1]
    3534:	add	x1, x1, #0x1
    3538:	add	x13, x12, #0x3
    353c:	b	3434 <PyInit_binascii@@Base+0x1a30>
    3540:	add	x12, x1, #0x1
    3544:	strb	w8, [x20, x1]
    3548:	mov	x1, x12
    354c:	b	3434 <PyInit_binascii@@Base+0x1a30>
    3550:	mov	x13, x21
    3554:	cmp	x13, x21
    3558:	cinc	x13, x13, lt  // lt = tstop
    355c:	b	3434 <PyInit_binascii@@Base+0x1a30>
    3560:	ldr	x8, [x19, #8]
    3564:	ldr	x0, [x8, #8]
    3568:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    356c:	ldr	x8, [x8, #4016]
    3570:	cmp	x0, x8
    3574:	b.eq	3588 <PyInit_binascii@@Base+0x1b84>  // b.none
    3578:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    357c:	ldr	x1, [x1, #4016]
    3580:	bl	18e0 <PyType_IsSubtype@plt>
    3584:	cbz	w0, 35f8 <PyInit_binascii@@Base+0x1bf4>
    3588:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    358c:	ldr	x8, [x8, #4040]
    3590:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3594:	add	x1, x1, #0xf28
    3598:	ldr	x0, [x8]
    359c:	bl	17c0 <PyErr_SetString@plt>
    35a0:	b	35a8 <PyInit_binascii@@Base+0x1ba4>
    35a4:	bl	1790 <PyErr_NoMemory@plt>
    35a8:	mov	x19, xzr
    35ac:	ldr	x8, [sp, #24]
    35b0:	cbnz	x8, 35d8 <PyInit_binascii@@Base+0x1bd4>
    35b4:	b	35e0 <PyInit_binascii@@Base+0x1bdc>
    35b8:	mov	x1, xzr
    35bc:	mov	x0, x20
    35c0:	bl	1770 <PyBytes_FromStringAndSize@plt>
    35c4:	mov	x19, x0
    35c8:	mov	x0, x20
    35cc:	bl	1720 <PyMem_Free@plt>
    35d0:	ldr	x8, [sp, #24]
    35d4:	cbz	x8, 35e0 <PyInit_binascii@@Base+0x1bdc>
    35d8:	add	x0, sp, #0x10
    35dc:	bl	1730 <PyBuffer_Release@plt>
    35e0:	mov	x0, x19
    35e4:	ldp	x20, x19, [sp, #144]
    35e8:	ldp	x22, x21, [sp, #128]
    35ec:	ldp	x29, x30, [sp, #112]
    35f0:	add	sp, sp, #0xa0
    35f4:	ret
    35f8:	ldr	x0, [x19, #8]
    35fc:	bl	1910 <_PyLong_AsInt@plt>
    3600:	mov	w19, w0
    3604:	cmn	w0, #0x1
    3608:	b.ne	33dc <PyInit_binascii@@Base+0x19d8>  // b.any
    360c:	bl	1870 <PyErr_Occurred@plt>
    3610:	cbnz	x0, 35a8 <PyInit_binascii@@Base+0x1ba4>
    3614:	mov	w19, #0xffffffff            	// #-1
    3618:	b	33dc <PyInit_binascii@@Base+0x19d8>
    361c:	sub	sp, sp, #0xd0
    3620:	stp	x29, x30, [sp, #128]
    3624:	stp	x26, x25, [sp, #144]
    3628:	stp	x24, x23, [sp, #160]
    362c:	stp	x22, x21, [sp, #176]
    3630:	stp	x20, x19, [sp, #192]
    3634:	add	x29, sp, #0x80
    3638:	mov	x19, x2
    363c:	mov	x21, x1
    3640:	cbz	x3, 364c <PyInit_binascii@@Base+0x1c48>
    3644:	ldr	x20, [x3, #16]
    3648:	b	3650 <PyInit_binascii@@Base+0x1c4c>
    364c:	mov	x20, xzr
    3650:	movi	v0.2d, #0x0
    3654:	stp	q0, q0, [sp, #64]
    3658:	stp	q0, q0, [sp, #32]
    365c:	str	q0, [sp, #16]
    3660:	cbz	x21, 3674 <PyInit_binascii@@Base+0x1c70>
    3664:	sub	x8, x19, #0x1
    3668:	cmp	x8, #0x3
    366c:	b.hi	3674 <PyInit_binascii@@Base+0x1c70>  // b.pmore
    3670:	cbz	x3, 36a8 <PyInit_binascii@@Base+0x1ca4>
    3674:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    3678:	sub	x8, x29, #0x20
    367c:	add	x4, x4, #0x508
    3680:	mov	w5, #0x1                   	// #1
    3684:	mov	w6, #0x4                   	// #4
    3688:	mov	x0, x21
    368c:	mov	x1, x19
    3690:	mov	x2, xzr
    3694:	mov	w7, wzr
    3698:	str	x8, [sp]
    369c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    36a0:	mov	x21, x0
    36a4:	cbz	x0, 36bc <PyInit_binascii@@Base+0x1cb8>
    36a8:	ldr	x0, [x21]
    36ac:	add	x1, sp, #0x10
    36b0:	mov	w2, wzr
    36b4:	bl	1880 <PyObject_GetBuffer@plt>
    36b8:	cbz	w0, 36f0 <PyInit_binascii@@Base+0x1cec>
    36bc:	mov	x19, xzr
    36c0:	ldr	x8, [sp, #24]
    36c4:	cbz	x8, 36d0 <PyInit_binascii@@Base+0x1ccc>
    36c8:	add	x0, sp, #0x10
    36cc:	bl	1730 <PyBuffer_Release@plt>
    36d0:	mov	x0, x19
    36d4:	ldp	x20, x19, [sp, #192]
    36d8:	ldp	x22, x21, [sp, #176]
    36dc:	ldp	x24, x23, [sp, #160]
    36e0:	ldp	x26, x25, [sp, #144]
    36e4:	ldp	x29, x30, [sp, #128]
    36e8:	add	sp, sp, #0xd0
    36ec:	ret
    36f0:	add	x0, sp, #0x10
    36f4:	mov	w1, #0x43                  	// #67
    36f8:	bl	1760 <PyBuffer_IsContiguous@plt>
    36fc:	cbz	w0, 3758 <PyInit_binascii@@Base+0x1d54>
    3700:	add	x20, x20, x19
    3704:	sub	x22, x20, #0x1
    3708:	cbz	x22, 3780 <PyInit_binascii@@Base+0x1d7c>
    370c:	ldr	x8, [x21, #8]
    3710:	cbz	x8, 3a7c <PyInit_binascii@@Base+0x2078>
    3714:	ldr	x0, [x8, #8]
    3718:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    371c:	ldr	x8, [x8, #4016]
    3720:	cmp	x0, x8
    3724:	b.eq	3d08 <PyInit_binascii@@Base+0x2304>  // b.none
    3728:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    372c:	ldr	x1, [x1, #4016]
    3730:	bl	18e0 <PyType_IsSubtype@plt>
    3734:	cbnz	w0, 3d08 <PyInit_binascii@@Base+0x2304>
    3738:	ldr	x0, [x21, #8]
    373c:	bl	1910 <_PyLong_AsInt@plt>
    3740:	mov	w19, w0
    3744:	cmn	w0, #0x1
    3748:	b.eq	3d44 <PyInit_binascii@@Base+0x2340>  // b.none
    374c:	subs	x22, x20, #0x2
    3750:	b.ne	3a80 <PyInit_binascii@@Base+0x207c>  // b.any
    3754:	b	3784 <PyInit_binascii@@Base+0x1d80>
    3758:	ldr	x3, [x21]
    375c:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    3760:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3764:	adrp	x2, 4000 <PyInit_binascii@@Base+0x25fc>
    3768:	add	x0, x0, #0xe34
    376c:	add	x1, x1, #0xf8
    3770:	add	x2, x2, #0xf16
    3774:	bl	1810 <_PyArg_BadArgument@plt>
    3778:	mov	x19, xzr
    377c:	b	36c0 <PyInit_binascii@@Base+0x1cbc>
    3780:	mov	w19, wzr
    3784:	mov	w21, wzr
    3788:	mov	w20, #0x1                   	// #1
    378c:	ldr	x22, [sp, #16]
    3790:	ldr	x23, [sp, #32]
    3794:	mov	w1, #0xa                   	// #10
    3798:	mov	x0, x22
    379c:	mov	x2, x23
    37a0:	bl	18c0 <memchr@plt>
    37a4:	cmp	x0, x22
    37a8:	b.ls	3ad0 <PyInit_binascii@@Base+0x20cc>  // b.plast
    37ac:	ldurb	w8, [x0, #-1]
    37b0:	cmp	w8, #0xd
    37b4:	cset	w26, eq  // eq = none
    37b8:	cmp	x23, #0x1
    37bc:	b.ge	3adc <PyInit_binascii@@Base+0x20d8>  // b.tcont
    37c0:	mov	x25, xzr
    37c4:	mov	x0, x25
    37c8:	bl	1920 <PyMem_Malloc@plt>
    37cc:	cbz	x0, 3cd0 <PyInit_binascii@@Base+0x22cc>
    37d0:	mov	w1, wzr
    37d4:	mov	x2, x25
    37d8:	mov	x24, x0
    37dc:	bl	17f0 <memset@plt>
    37e0:	cmp	x23, #0x1
    37e4:	b.lt	3d28 <PyInit_binascii@@Base+0x2324>  // b.tstop
    37e8:	adrp	x11, 5000 <PyInit_binascii@@Base+0x35fc>
    37ec:	adrp	x15, 4000 <PyInit_binascii@@Base+0x25fc>
    37f0:	mov	x17, xzr
    37f4:	mov	w18, wzr
    37f8:	mov	x16, xzr
    37fc:	mov	w8, #0x3d                  	// #61
    3800:	mov	w9, #0xa                   	// #10
    3804:	mov	w10, #0xd                   	// #13
    3808:	add	x11, x11, #0x13b
    380c:	mov	w12, #0x1                   	// #1
    3810:	mov	w13, #0x2401                	// #9217
    3814:	mov	w14, #0x5f                  	// #95
    3818:	add	x15, x15, #0xa8
    381c:	b	3864 <PyInit_binascii@@Base+0x1e60>
    3820:	mov	w18, wzr
    3824:	add	x0, x24, x16
    3828:	strb	w8, [x0]
    382c:	ldrb	w1, [x22, x17]
    3830:	add	w18, w18, #0x3
    3834:	and	x2, x1, #0xf
    3838:	lsr	x1, x1, #4
    383c:	ldrb	w3, [x11, x2]
    3840:	ldrb	w4, [x11, x1]
    3844:	add	x1, x16, #0x3
    3848:	add	x2, x17, #0x1
    384c:	strb	w3, [x0, #2]
    3850:	strb	w4, [x0, #1]
    3854:	cmp	x2, x23
    3858:	mov	x17, x2
    385c:	mov	x16, x1
    3860:	b.ge	3d2c <PyInit_binascii@@Base+0x2328>  // b.tcont
    3864:	ldrb	w0, [x22, x17]
    3868:	cmp	w21, #0x0
    386c:	cset	w1, ne  // ne = any
    3870:	cmp	w0, #0x5f
    3874:	cset	w2, eq  // eq = none
    3878:	cmp	w0, #0x7e
    387c:	b.hi	3a24 <PyInit_binascii@@Base+0x2020>  // b.pmore
    3880:	cmp	w0, #0x3d
    3884:	b.eq	3a24 <PyInit_binascii@@Base+0x2020>  // b.none
    3888:	and	w1, w1, w2
    388c:	tbnz	w1, #0, 3a24 <PyInit_binascii@@Base+0x2020>
    3890:	cbnz	w18, 38c0 <PyInit_binascii@@Base+0x1ebc>
    3894:	cmp	w0, #0x2e
    3898:	b.ne	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.any
    389c:	add	x1, x17, #0x1
    38a0:	cmp	x1, x23
    38a4:	b.eq	3820 <PyInit_binascii@@Base+0x1e1c>  // b.none
    38a8:	ldrb	w1, [x22, x1]
    38ac:	cmp	w1, #0xd
    38b0:	b.hi	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.pmore
    38b4:	lsl	w1, w12, w1
    38b8:	tst	w1, w13
    38bc:	b.ne	3820 <PyInit_binascii@@Base+0x1e1c>  // b.any
    38c0:	cbz	w20, 38e0 <PyInit_binascii@@Base+0x1edc>
    38c4:	cmp	w0, #0x20
    38c8:	b.eq	38fc <PyInit_binascii@@Base+0x1ef8>  // b.none
    38cc:	cmp	w0, #0x9
    38d0:	b.eq	38fc <PyInit_binascii@@Base+0x1ef8>  // b.none
    38d4:	cmp	w0, #0x20
    38d8:	b.ls	3908 <PyInit_binascii@@Base+0x1f04>  // b.plast
    38dc:	b	3918 <PyInit_binascii@@Base+0x1f14>
    38e0:	sub	w1, w0, #0x9
    38e4:	cmp	w1, #0x17
    38e8:	b.hi	38d4 <PyInit_binascii@@Base+0x1ed0>  // b.pmore
    38ec:	adr	x2, 38d4 <PyInit_binascii@@Base+0x1ed0>
    38f0:	ldrb	w3, [x15, x1]
    38f4:	add	x2, x2, x3, lsl #2
    38f8:	br	x2
    38fc:	add	x1, x17, #0x1
    3900:	cmp	x1, x23
    3904:	b.eq	3a24 <PyInit_binascii@@Base+0x2020>  // b.none
    3908:	cmp	w0, #0xa
    390c:	b.eq	3918 <PyInit_binascii@@Base+0x1f14>  // b.none
    3910:	cmp	w0, #0xd
    3914:	b.ne	3a20 <PyInit_binascii@@Base+0x201c>  // b.any
    3918:	cbz	w20, 3994 <PyInit_binascii@@Base+0x1f90>
    391c:	cmp	w0, #0xa
    3920:	b.ne	39fc <PyInit_binascii@@Base+0x1ff8>  // b.any
    3924:	cbz	x16, 3964 <PyInit_binascii@@Base+0x1f60>
    3928:	sub	x18, x16, #0x1
    392c:	ldrb	w0, [x24, x18]
    3930:	cmp	w0, #0x20
    3934:	b.eq	3940 <PyInit_binascii@@Base+0x1f3c>  // b.none
    3938:	cmp	w0, #0x9
    393c:	b.ne	3964 <PyInit_binascii@@Base+0x1f60>  // b.any
    3940:	and	x1, x0, #0xf
    3944:	lsr	x0, x0, #4
    3948:	ldrb	w1, [x11, x1]
    394c:	ldrb	w0, [x11, x0]
    3950:	strb	w8, [x24, x18]
    3954:	add	x18, x24, x16
    3958:	add	x16, x16, #0x2
    395c:	strb	w1, [x18, #1]
    3960:	strb	w0, [x18]
    3964:	cbz	w26, 3974 <PyInit_binascii@@Base+0x1f70>
    3968:	add	x18, x16, #0x1
    396c:	strb	w10, [x24, x16]
    3970:	mov	x16, x18
    3974:	strb	w9, [x24, x16]
    3978:	ldrb	w18, [x22, x17]
    397c:	add	x1, x16, #0x1
    3980:	cmp	w18, #0xd
    3984:	mov	w18, wzr
    3988:	b.ne	3a60 <PyInit_binascii@@Base+0x205c>  // b.any
    398c:	add	x2, x17, #0x2
    3990:	b	3854 <PyInit_binascii@@Base+0x1e50>
    3994:	add	x2, x17, #0x1
    3998:	cmp	x2, x23
    399c:	b.eq	39e0 <PyInit_binascii@@Base+0x1fdc>  // b.none
    39a0:	add	w1, w18, #0x1
    39a4:	cmp	w1, #0x4c
    39a8:	b.cc	39e0 <PyInit_binascii@@Base+0x1fdc>  // b.lo, b.ul, b.last
    39ac:	ldrb	w1, [x22, x2]
    39b0:	cmp	w1, #0xa
    39b4:	b.eq	39e0 <PyInit_binascii@@Base+0x1fdc>  // b.none
    39b8:	add	x1, x16, #0x1
    39bc:	strb	w8, [x24, x16]
    39c0:	cbz	w26, 39d0 <PyInit_binascii@@Base+0x1fcc>
    39c4:	add	x16, x16, #0x2
    39c8:	strb	w10, [x24, x1]
    39cc:	mov	x1, x16
    39d0:	strb	w9, [x24, x1]
    39d4:	ldrb	w0, [x22, x17]
    39d8:	mov	w18, wzr
    39dc:	add	x16, x1, #0x1
    39e0:	add	w18, w18, #0x1
    39e4:	add	x1, x16, #0x1
    39e8:	cbz	w21, 3a58 <PyInit_binascii@@Base+0x2054>
    39ec:	cmp	w0, #0x20
    39f0:	b.ne	3a58 <PyInit_binascii@@Base+0x2054>  // b.any
    39f4:	strb	w14, [x24, x16]
    39f8:	b	3854 <PyInit_binascii@@Base+0x1e50>
    39fc:	add	x2, x17, #0x1
    3a00:	cmp	x2, x23
    3a04:	b.ge	3998 <PyInit_binascii@@Base+0x1f94>  // b.tcont
    3a08:	cmp	w0, #0xd
    3a0c:	b.ne	3998 <PyInit_binascii@@Base+0x1f94>  // b.any
    3a10:	ldrb	w1, [x22, x2]
    3a14:	cmp	w1, #0xa
    3a18:	b.eq	3924 <PyInit_binascii@@Base+0x1f20>  // b.none
    3a1c:	b	3998 <PyInit_binascii@@Base+0x1f94>
    3a20:	cbz	w19, 3a68 <PyInit_binascii@@Base+0x2064>
    3a24:	add	w0, w18, #0x3
    3a28:	cmp	w0, #0x4c
    3a2c:	b.cc	3824 <PyInit_binascii@@Base+0x1e20>  // b.lo, b.ul, b.last
    3a30:	add	x0, x16, #0x1
    3a34:	strb	w8, [x24, x16]
    3a38:	cbz	w26, 3a48 <PyInit_binascii@@Base+0x2044>
    3a3c:	add	x16, x16, #0x2
    3a40:	strb	w10, [x24, x0]
    3a44:	mov	x0, x16
    3a48:	mov	w18, wzr
    3a4c:	add	x16, x0, #0x1
    3a50:	strb	w9, [x24, x0]
    3a54:	b	3824 <PyInit_binascii@@Base+0x1e20>
    3a58:	strb	w0, [x24, x16]
    3a5c:	b	3854 <PyInit_binascii@@Base+0x1e50>
    3a60:	add	x2, x17, #0x1
    3a64:	b	3854 <PyInit_binascii@@Base+0x1e50>
    3a68:	cmp	w0, #0x9
    3a6c:	b.eq	3918 <PyInit_binascii@@Base+0x1f14>  // b.none
    3a70:	cmp	w0, #0x20
    3a74:	b.eq	3918 <PyInit_binascii@@Base+0x1f14>  // b.none
    3a78:	b	3a24 <PyInit_binascii@@Base+0x2020>
    3a7c:	mov	w19, wzr
    3a80:	ldr	x8, [x21, #16]
    3a84:	cbz	x8, 3cdc <PyInit_binascii@@Base+0x22d8>
    3a88:	ldr	x0, [x8, #8]
    3a8c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3a90:	ldr	x8, [x8, #4016]
    3a94:	cmp	x0, x8
    3a98:	b.eq	3d08 <PyInit_binascii@@Base+0x2304>  // b.none
    3a9c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3aa0:	ldr	x1, [x1, #4016]
    3aa4:	bl	18e0 <PyType_IsSubtype@plt>
    3aa8:	cbnz	w0, 3d08 <PyInit_binascii@@Base+0x2304>
    3aac:	ldr	x0, [x21, #16]
    3ab0:	bl	1910 <_PyLong_AsInt@plt>
    3ab4:	mov	w20, w0
    3ab8:	cmn	w0, #0x1
    3abc:	b.eq	3d68 <PyInit_binascii@@Base+0x2364>  // b.none
    3ac0:	cmp	x22, #0x1
    3ac4:	b.ne	3ce0 <PyInit_binascii@@Base+0x22dc>  // b.any
    3ac8:	mov	w21, wzr
    3acc:	b	378c <PyInit_binascii@@Base+0x1d88>
    3ad0:	mov	w26, wzr
    3ad4:	cmp	x23, #0x1
    3ad8:	b.lt	37c0 <PyInit_binascii@@Base+0x1dbc>  // b.tstop
    3adc:	cmp	w26, #0x0
    3ae0:	mov	w8, #0x3                   	// #3
    3ae4:	mov	w13, #0x5                   	// #5
    3ae8:	adrp	x14, 4000 <PyInit_binascii@@Base+0x25fc>
    3aec:	mov	x15, xzr
    3af0:	mov	w16, wzr
    3af4:	mov	x25, xzr
    3af8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    3afc:	mov	w10, #0x1                   	// #1
    3b00:	mov	w11, #0x2401                	// #9217
    3b04:	cinc	x12, x8, ne  // ne = any
    3b08:	cinc	x13, x13, ne  // ne = any
    3b0c:	add	x14, x14, #0x90
    3b10:	ldrb	w17, [x22, x15]
    3b14:	cmp	w21, #0x0
    3b18:	cset	w18, ne  // ne = any
    3b1c:	cmp	w17, #0x5f
    3b20:	cset	w0, eq  // eq = none
    3b24:	cmp	w17, #0x7e
    3b28:	b.hi	3c2c <PyInit_binascii@@Base+0x2228>  // b.pmore
    3b2c:	cmp	w17, #0x3d
    3b30:	b.eq	3c2c <PyInit_binascii@@Base+0x2228>  // b.none
    3b34:	and	w18, w18, w0
    3b38:	tbnz	w18, #0, 3c2c <PyInit_binascii@@Base+0x2228>
    3b3c:	cbnz	w16, 3b6c <PyInit_binascii@@Base+0x2168>
    3b40:	cmp	w17, #0x2e
    3b44:	b.ne	3b6c <PyInit_binascii@@Base+0x2168>  // b.any
    3b48:	add	x18, x15, #0x1
    3b4c:	cmp	x18, x23
    3b50:	b.eq	3c2c <PyInit_binascii@@Base+0x2228>  // b.none
    3b54:	ldrb	w18, [x22, x18]
    3b58:	cmp	w18, #0xd
    3b5c:	b.hi	3b6c <PyInit_binascii@@Base+0x2168>  // b.pmore
    3b60:	lsl	w18, w10, w18
    3b64:	tst	w18, w11
    3b68:	b.ne	3c2c <PyInit_binascii@@Base+0x2228>  // b.any
    3b6c:	cbz	w20, 3b8c <PyInit_binascii@@Base+0x2188>
    3b70:	cmp	w17, #0x20
    3b74:	b.eq	3ba8 <PyInit_binascii@@Base+0x21a4>  // b.none
    3b78:	cmp	w17, #0x9
    3b7c:	b.eq	3ba8 <PyInit_binascii@@Base+0x21a4>  // b.none
    3b80:	cmp	w17, #0x20
    3b84:	b.ls	3bb4 <PyInit_binascii@@Base+0x21b0>  // b.plast
    3b88:	b	3bc4 <PyInit_binascii@@Base+0x21c0>
    3b8c:	sub	w18, w17, #0x9
    3b90:	cmp	w18, #0x17
    3b94:	b.hi	3b80 <PyInit_binascii@@Base+0x217c>  // b.pmore
    3b98:	adr	x0, 3b80 <PyInit_binascii@@Base+0x217c>
    3b9c:	ldrb	w1, [x14, x18]
    3ba0:	add	x0, x0, x1, lsl #2
    3ba4:	br	x0
    3ba8:	add	x18, x15, #0x1
    3bac:	cmp	x18, x23
    3bb0:	b.eq	3c2c <PyInit_binascii@@Base+0x2228>  // b.none
    3bb4:	cmp	w17, #0xa
    3bb8:	b.eq	3bc4 <PyInit_binascii@@Base+0x21c0>  // b.none
    3bbc:	cmp	w17, #0xd
    3bc0:	b.ne	3c28 <PyInit_binascii@@Base+0x2224>  // b.any
    3bc4:	cbz	w20, 3c14 <PyInit_binascii@@Base+0x2210>
    3bc8:	cmp	w17, #0xa
    3bcc:	b.eq	3bf0 <PyInit_binascii@@Base+0x21ec>  // b.none
    3bd0:	add	x0, x15, #0x1
    3bd4:	cmp	x0, x23
    3bd8:	b.ge	3c18 <PyInit_binascii@@Base+0x2214>  // b.tcont
    3bdc:	cmp	w17, #0xd
    3be0:	b.ne	3c18 <PyInit_binascii@@Base+0x2214>  // b.any
    3be4:	ldrb	w18, [x22, x0]
    3be8:	cmp	w18, #0xa
    3bec:	b.ne	3c18 <PyInit_binascii@@Base+0x2214>  // b.any
    3bf0:	cbz	x15, 3c8c <PyInit_binascii@@Base+0x2288>
    3bf4:	add	x16, x15, x22
    3bf8:	ldurb	w16, [x16, #-1]
    3bfc:	cmp	w16, #0x20
    3c00:	b.eq	3c0c <PyInit_binascii@@Base+0x2208>  // b.none
    3c04:	cmp	w16, #0x9
    3c08:	b.ne	3c8c <PyInit_binascii@@Base+0x2288>  // b.any
    3c0c:	mov	w16, #0x2                   	// #2
    3c10:	b	3c90 <PyInit_binascii@@Base+0x228c>
    3c14:	add	x0, x15, #0x1
    3c18:	cmp	x0, x23
    3c1c:	b.ne	3c5c <PyInit_binascii@@Base+0x2258>  // b.any
    3c20:	mov	w18, #0x1                   	// #1
    3c24:	b	3c80 <PyInit_binascii@@Base+0x227c>
    3c28:	cbz	w19, 3cbc <PyInit_binascii@@Base+0x22b8>
    3c2c:	add	w16, w16, #0x3
    3c30:	cmp	w16, #0x4b
    3c34:	csel	x18, x13, x8, hi  // hi = pmore
    3c38:	csel	w16, w8, w16, hi  // hi = pmore
    3c3c:	add	x15, x15, #0x1
    3c40:	sub	x17, x9, x18
    3c44:	cmp	x17, x25
    3c48:	b.lt	3cd0 <PyInit_binascii@@Base+0x22cc>  // b.tstop
    3c4c:	cmp	x15, x23
    3c50:	add	x25, x18, x25
    3c54:	b.lt	3b10 <PyInit_binascii@@Base+0x210c>  // b.tstop
    3c58:	b	37c4 <PyInit_binascii@@Base+0x1dc0>
    3c5c:	ldrb	w15, [x22, x0]
    3c60:	add	w17, w16, #0x1
    3c64:	cmp	w15, #0xa
    3c68:	cset	w15, ne  // ne = any
    3c6c:	cmp	w17, #0x4b
    3c70:	cset	w17, hi  // hi = pmore
    3c74:	tst	w17, w15
    3c78:	csel	w16, wzr, w16, ne  // ne = any
    3c7c:	csinc	x18, x12, xzr, ne  // ne = any
    3c80:	add	w16, w16, #0x1
    3c84:	mov	x15, x0
    3c88:	b	3c40 <PyInit_binascii@@Base+0x223c>
    3c8c:	mov	x16, xzr
    3c90:	add	x18, x16, #0x2
    3c94:	orr	x16, x16, #0x1
    3c98:	cmp	w26, #0x0
    3c9c:	csel	x18, x16, x18, eq  // eq = none
    3ca0:	cmp	w17, #0xd
    3ca4:	b.ne	3cb4 <PyInit_binascii@@Base+0x22b0>  // b.any
    3ca8:	mov	w16, wzr
    3cac:	add	x15, x15, #0x2
    3cb0:	b	3c40 <PyInit_binascii@@Base+0x223c>
    3cb4:	mov	w16, wzr
    3cb8:	b	3c3c <PyInit_binascii@@Base+0x2238>
    3cbc:	cmp	w17, #0x9
    3cc0:	b.eq	3bc4 <PyInit_binascii@@Base+0x21c0>  // b.none
    3cc4:	cmp	w17, #0x20
    3cc8:	b.eq	3bc4 <PyInit_binascii@@Base+0x21c0>  // b.none
    3ccc:	b	3c2c <PyInit_binascii@@Base+0x2228>
    3cd0:	bl	1790 <PyErr_NoMemory@plt>
    3cd4:	mov	x19, xzr
    3cd8:	b	36c0 <PyInit_binascii@@Base+0x1cbc>
    3cdc:	mov	w20, #0x1                   	// #1
    3ce0:	ldr	x8, [x21, #24]
    3ce4:	ldr	x0, [x8, #8]
    3ce8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3cec:	ldr	x8, [x8, #4016]
    3cf0:	cmp	x0, x8
    3cf4:	b.eq	3d08 <PyInit_binascii@@Base+0x2304>  // b.none
    3cf8:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3cfc:	ldr	x1, [x1, #4016]
    3d00:	bl	18e0 <PyType_IsSubtype@plt>
    3d04:	cbz	w0, 3d50 <PyInit_binascii@@Base+0x234c>
    3d08:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3d0c:	ldr	x8, [x8, #4040]
    3d10:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3d14:	add	x1, x1, #0xf28
    3d18:	ldr	x0, [x8]
    3d1c:	bl	17c0 <PyErr_SetString@plt>
    3d20:	mov	x19, xzr
    3d24:	b	36c0 <PyInit_binascii@@Base+0x1cbc>
    3d28:	mov	x1, xzr
    3d2c:	mov	x0, x24
    3d30:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3d34:	mov	x19, x0
    3d38:	mov	x0, x24
    3d3c:	bl	1720 <PyMem_Free@plt>
    3d40:	b	36c0 <PyInit_binascii@@Base+0x1cbc>
    3d44:	bl	1870 <PyErr_Occurred@plt>
    3d48:	cbnz	x0, 36bc <PyInit_binascii@@Base+0x1cb8>
    3d4c:	b	374c <PyInit_binascii@@Base+0x1d48>
    3d50:	ldr	x0, [x21, #24]
    3d54:	bl	1910 <_PyLong_AsInt@plt>
    3d58:	cmn	w0, #0x1
    3d5c:	b.eq	3d74 <PyInit_binascii@@Base+0x2370>  // b.none
    3d60:	mov	w21, w0
    3d64:	b	378c <PyInit_binascii@@Base+0x1d88>
    3d68:	bl	1870 <PyErr_Occurred@plt>
    3d6c:	cbnz	x0, 36bc <PyInit_binascii@@Base+0x1cb8>
    3d70:	b	3ac0 <PyInit_binascii@@Base+0x20bc>
    3d74:	bl	1870 <PyErr_Occurred@plt>
    3d78:	cbnz	x0, 36bc <PyInit_binascii@@Base+0x1cb8>
    3d7c:	mov	w21, #0xffffffff            	// #-1
    3d80:	b	378c <PyInit_binascii@@Base+0x1d88>
    3d84:	stp	x29, x30, [sp, #-32]!
    3d88:	stp	x20, x19, [sp, #16]
    3d8c:	mov	x29, sp
    3d90:	mov	x19, x1
    3d94:	cbz	x0, 3de0 <PyInit_binascii@@Base+0x23dc>
    3d98:	ldr	x8, [x0, #8]
    3d9c:	mov	x20, x0
    3da0:	ldrb	w8, [x8, #171]
    3da4:	tbnz	w8, #4, 3df0 <PyInit_binascii@@Base+0x23ec>
    3da8:	mov	x0, x20
    3dac:	mov	x1, x19
    3db0:	mov	w2, wzr
    3db4:	bl	1880 <PyObject_GetBuffer@plt>
    3db8:	cbz	w0, 3e34 <PyInit_binascii@@Base+0x2430>
    3dbc:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    3dc0:	ldr	x8, [x20, #8]
    3dc4:	ldr	x9, [x9, #4040]
    3dc8:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3dcc:	add	x1, x1, #0xe70
    3dd0:	ldr	x2, [x8, #24]
    3dd4:	ldr	x0, [x9]
    3dd8:	bl	18f0 <PyErr_Format@plt>
    3ddc:	b	3e8c <PyInit_binascii@@Base+0x2488>
    3de0:	mov	x0, x19
    3de4:	bl	1730 <PyBuffer_Release@plt>
    3de8:	mov	w0, #0x1                   	// #1
    3dec:	b	3e90 <PyInit_binascii@@Base+0x248c>
    3df0:	ldr	w8, [x20, #32]
    3df4:	tbnz	w8, #7, 3e08 <PyInit_binascii@@Base+0x2404>
    3df8:	mov	x0, x20
    3dfc:	bl	1700 <_PyUnicode_Ready@plt>
    3e00:	tbnz	w0, #31, 3e8c <PyInit_binascii@@Base+0x2488>
    3e04:	ldr	w8, [x20, #32]
    3e08:	tbnz	w8, #6, 3e28 <PyInit_binascii@@Base+0x2424>
    3e0c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3e10:	ldr	x8, [x8, #4032]
    3e14:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3e18:	add	x1, x1, #0xe3b
    3e1c:	ldr	x0, [x8]
    3e20:	bl	17c0 <PyErr_SetString@plt>
    3e24:	b	3e8c <PyInit_binascii@@Base+0x2488>
    3e28:	tbnz	w8, #5, 3e4c <PyInit_binascii@@Base+0x2448>
    3e2c:	ldr	x8, [x20, #72]
    3e30:	b	3e50 <PyInit_binascii@@Base+0x244c>
    3e34:	mov	w1, #0x43                  	// #67
    3e38:	mov	x0, x19
    3e3c:	bl	1760 <PyBuffer_IsContiguous@plt>
    3e40:	cbz	w0, 3e64 <PyInit_binascii@@Base+0x2460>
    3e44:	mov	w0, #0x20000               	// #131072
    3e48:	b	3e90 <PyInit_binascii@@Base+0x248c>
    3e4c:	add	x8, x20, #0x30
    3e50:	str	x8, [x19]
    3e54:	ldr	x8, [x20, #16]
    3e58:	mov	w0, #0x1                   	// #1
    3e5c:	stp	xzr, x8, [x19, #8]
    3e60:	b	3e90 <PyInit_binascii@@Base+0x248c>
    3e64:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    3e68:	ldr	x8, [x20, #8]
    3e6c:	ldr	x9, [x9, #4040]
    3e70:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3e74:	add	x1, x1, #0xeaf
    3e78:	ldr	x2, [x8, #24]
    3e7c:	ldr	x0, [x9]
    3e80:	bl	18f0 <PyErr_Format@plt>
    3e84:	mov	x0, x19
    3e88:	bl	1730 <PyBuffer_Release@plt>
    3e8c:	mov	w0, wzr
    3e90:	ldp	x20, x19, [sp, #16]
    3e94:	ldp	x29, x30, [sp], #32
    3e98:	ret
    3e9c:	stp	x29, x30, [sp, #-48]!
    3ea0:	stp	x22, x21, [sp, #16]
    3ea4:	stp	x20, x19, [sp, #32]
    3ea8:	mov	x29, sp
    3eac:	ldr	x21, [x1, #16]
    3eb0:	mov	x20, x0
    3eb4:	tbnz	w21, #0, 3f2c <PyInit_binascii@@Base+0x2528>
    3eb8:	ldr	x22, [x1]
    3ebc:	cmp	x21, #0x0
    3ec0:	cinc	x8, x21, lt  // lt = tstop
    3ec4:	asr	x1, x8, #1
    3ec8:	mov	x0, xzr
    3ecc:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3ed0:	mov	x19, x0
    3ed4:	cbz	x0, 3f4c <PyInit_binascii@@Base+0x2548>
    3ed8:	cmp	x21, #0x1
    3edc:	b.lt	3f4c <PyInit_binascii@@Base+0x2548>  // b.tstop
    3ee0:	adrp	x10, 15000 <PyInit_binascii@@Base+0x135fc>
    3ee4:	ldr	x10, [x10, #4056]
    3ee8:	mov	x8, xzr
    3eec:	mov	w9, #0x20                  	// #32
    3ef0:	add	x11, x22, x8
    3ef4:	ldrb	w12, [x11]
    3ef8:	ldrb	w13, [x11, #1]
    3efc:	ldrb	w11, [x10, x12]
    3f00:	ldrb	w12, [x10, x13]
    3f04:	orr	w13, w12, w11
    3f08:	cmp	w13, #0x10
    3f0c:	b.cs	3f60 <PyInit_binascii@@Base+0x255c>  // b.hs, b.nlast
    3f10:	add	w11, w12, w11, lsl #4
    3f14:	add	x8, x8, #0x2
    3f18:	strb	w11, [x19, x9]
    3f1c:	cmp	x8, x21
    3f20:	add	x9, x9, #0x1
    3f24:	b.lt	3ef0 <PyInit_binascii@@Base+0x24ec>  // b.tstop
    3f28:	b	3f4c <PyInit_binascii@@Base+0x2548>
    3f2c:	mov	x0, x20
    3f30:	bl	17e0 <PyModule_GetState@plt>
    3f34:	cbz	x0, 3f48 <PyInit_binascii@@Base+0x2544>
    3f38:	ldr	x0, [x0]
    3f3c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3f40:	add	x1, x1, #0xb7
    3f44:	bl	17c0 <PyErr_SetString@plt>
    3f48:	mov	x19, xzr
    3f4c:	mov	x0, x19
    3f50:	ldp	x20, x19, [sp, #32]
    3f54:	ldp	x22, x21, [sp, #16]
    3f58:	ldp	x29, x30, [sp], #48
    3f5c:	ret
    3f60:	mov	x0, x20
    3f64:	bl	17e0 <PyModule_GetState@plt>
    3f68:	cbz	x0, 3f48 <PyInit_binascii@@Base+0x2544>
    3f6c:	ldr	x0, [x0]
    3f70:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3f74:	add	x1, x1, #0xc9
    3f78:	bl	17c0 <PyErr_SetString@plt>
    3f7c:	ldr	x8, [x19]
    3f80:	subs	x8, x8, #0x1
    3f84:	str	x8, [x19]
    3f88:	b.ne	3f48 <PyInit_binascii@@Base+0x2544>  // b.any
    3f8c:	mov	x0, x19
    3f90:	bl	1780 <_Py_Dealloc@plt>
    3f94:	b	3f48 <PyInit_binascii@@Base+0x2544>
    3f98:	stp	x29, x30, [sp, #-32]!
    3f9c:	stp	x20, x19, [sp, #16]
    3fa0:	mov	x29, sp
    3fa4:	mov	x19, x0
    3fa8:	bl	17e0 <PyModule_GetState@plt>
    3fac:	cbz	x0, 4030 <PyInit_binascii@@Base+0x262c>
    3fb0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3fb4:	ldr	x8, [x8, #4032]
    3fb8:	mov	x20, x0
    3fbc:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3fc0:	add	x0, x0, #0x14c
    3fc4:	ldr	x1, [x8]
    3fc8:	mov	x2, xzr
    3fcc:	bl	1820 <PyErr_NewException@plt>
    3fd0:	str	x0, [x20]
    3fd4:	cbz	x0, 4030 <PyInit_binascii@@Base+0x262c>
    3fd8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3fdc:	mov	x2, x0
    3fe0:	add	x1, x1, #0x155
    3fe4:	mov	x0, x19
    3fe8:	bl	18d0 <PyModule_AddObject@plt>
    3fec:	cmn	w0, #0x1
    3ff0:	b.eq	4034 <PyInit_binascii@@Base+0x2630>  // b.none
    3ff4:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3ff8:	add	x0, x0, #0x15b
    3ffc:	mov	x1, xzr
    4000:	mov	x2, xzr
    4004:	bl	1820 <PyErr_NewException@plt>
    4008:	str	x0, [x20, #8]
    400c:	cbz	x0, 4030 <PyInit_binascii@@Base+0x262c>
    4010:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    4014:	mov	x2, x0
    4018:	add	x1, x1, #0x164
    401c:	mov	x0, x19
    4020:	bl	18d0 <PyModule_AddObject@plt>
    4024:	cmn	w0, #0x1
    4028:	csetm	w0, eq  // eq = none
    402c:	b	4034 <PyInit_binascii@@Base+0x2630>
    4030:	mov	w0, #0xffffffff            	// #-1
    4034:	ldp	x20, x19, [sp, #16]
    4038:	ldp	x29, x30, [sp], #32
    403c:	ret

Disassembly of section .fini:

0000000000004040 <.fini>:
    4040:	stp	x29, x30, [sp, #-16]!
    4044:	mov	x29, sp
    4048:	ldp	x29, x30, [sp], #16
    404c:	ret
